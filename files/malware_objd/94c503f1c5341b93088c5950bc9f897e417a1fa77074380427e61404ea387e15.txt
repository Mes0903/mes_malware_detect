
94c503f1c5341b93088c5950bc9f897e417a1fa77074380427e61404ea387e15.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0x488af025
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	ss gs data16 sub al,0x63
  402d0d:	push   0x6a
  402d0f:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	adc    eax,0x2ea4b0eb
  402da7:	and    ecx,DWORD PTR [edx+edi*1+0x57]
  402dab:	cwde   
  402dac:	jp     0x402df2
  402dae:	cmp    BYTE PTR [eax+edx*1],al
  402db1:	mov    ebp,0x682ca1e
  402db6:	adc    edx,ebp
  402db8:	sbb    al,dh
  402dba:	mov    eax,ds:0xb795f0b5
  402dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dc0:	fs out dx,al
  402dc2:	xor    BYTE PTR [ebx+eax*4-0x4f],bh
  402dc6:	(bad)  
  402dc7:	jmp    0x3f567397
  402dcc:	cmp    al,0xee
  402dce:	jo     0x402e15
  402dd0:	xabort 0x84
  402dd3:	inc    esp
  402dd4:	test   DWORD PTR [edi-0x60],0x478068e8
  402ddb:	push   0x6e
  402ddd:	sbb    DWORD PTR [ebx-0x7d],0x430a427a
  402de4:	jae    0x402e5d
  402de6:	fstp   QWORD PTR [esi]
  402de8:	stc    
  402de9:	pop    es
  402dea:	in     al,0x5a
  402dec:	inc    BYTE PTR [esi-0x74]
  402def:	fcomp  QWORD PTR [eax]
  402df1:	enter  0x446c,0xfd
  402df5:	and    al,0xef
  402df7:	push   edi
  402df8:	add    eax,0xa7ff336a
  402dfd:	mov    es:0x7167b471,al
  402e03:	(bad)  
  402e04:	mov    al,0x23
  402e06:	adc    ebp,DWORD PTR [ecx-0x53]
  402e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e0a:	repnz cmp eax,0x60b9b8e8
  402e10:	or     ebp,DWORD PTR [esi]
  402e12:	xchg   DWORD PTR [ebp-0x16],ebp
  402e15:	adc    bh,BYTE PTR [esi]
  402e17:	mov    ebp,0x2a08ce5a
  402e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e1d:	and    ebp,edx
  402e1f:	sbb    ch,BYTE PTR [esi-0x3877d52c]
  402e25:	dec    esi
  402e26:	and    bh,cl
  402e28:	inc    ebp
  402e29:	cmp    ebx,ebp
  402e2b:	in     al,0xaf
  402e2d:	mov    al,ds:0x533210cf
  402e32:	push   0x9c95ddcf
  402e37:	shl    BYTE PTR [ecx+0x2a0ac041],0x4e
  402e3e:	xchg   ebp,eax
  402e3f:	jne    0x402eb6
  402e41:	add    esi,DWORD PTR [esi-0x7a4575b0]
  402e47:	xor    al,0x1e
  402e49:	jmp    0x402e72
  402e4b:	cdq    
  402e4c:	jmp    0x25f6be49
  402e51:	dec    ebx
  402e52:	test   eax,0xcd6d203c
  402e57:	fist   DWORD PTR [edi-0x69082912]
  402e5d:	out    0x7b,eax
  402e5f:	daa    
  402e60:	lods   al,BYTE PTR ds:[esi]
  402e61:	jo     0x402e58
  402e63:	adc    eax,0x47874abd
  402e68:	jne    0x402e0a
  402e6a:	xchg   BYTE PTR ds:0x1e47a426,bl
  402e70:	scas   eax,DWORD PTR es:[edi]
  402e71:	jb     0x402ed3
  402e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e74:	imul   eax,ebp,0x6ed72d14
  402e7a:	jbe    0x402e58
  402e7c:	jmp    DWORD PTR es:[edx+ecx*1+0x3]
  402e81:	int    0xfe
  402e83:	adc    ah,BYTE PTR [ebx]
  402e85:	stos   DWORD PTR es:[edi],eax
  402e86:	in     al,dx
  402e87:	test   DWORD PTR [ebp*1+0x3ba66771],edx
  402e8e:	fild   QWORD PTR [edi]
  402e90:	gs es sub al,0x9d
  402e94:	lods   eax,DWORD PTR ds:[esi]
  402e95:	pop    ebx
  402e97:	dec    esp
  402e98:	or     al,0xa8
  402e9a:	lock mov cl,BYTE PTR [ebx+0x19]
  402e9e:	dec    esi
  402e9f:	jb     0x402ea0
  402ea1:	js     0x402e96
  402ea3:	sti    
  402ea4:	fnop   
  402ea6:	sbb    DWORD PTR [ebx+esi*1-0x6a],ebp
  402eaa:	test   BYTE PTR [edi-0x55],bl
  402ead:	cs retf 0x1b96
  402eb1:	sub    BYTE PTR [edi],0x1f
  402eb4:	sub    eax,0xf06216e8
  402eb9:	test   dl,dl
  402ebb:	inc    esi
  402ebc:	pop    es
  402ebd:	ret    
  402ebe:	xchg   BYTE PTR [ebp+0x7eb61fa6],bl
  402ec4:	ret    0x2d11
  402ec7:	xchg   BYTE PTR [ecx+0x5f],cl
  402eca:	loop   0x402ef3
  402ecc:	mov    DWORD PTR [eax*1+0x13235655],esi
  402ed3:	rol    DWORD PTR ds:0x99d4016b,1
  402ed9:	mov    dl,0xe4
  402edb:	lods   al,BYTE PTR ds:[esi]
  402edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402edd:	(bad)  
  402ede:	ficom  DWORD PTR [edx+0x74]
  402ee1:	dec    esp
  402ee2:	stos   DWORD PTR es:[edi],eax
  402ee3:	jns    0x402f02
  402ee5:	lea    esp,[eax+edx*8-0x7a6a7ec9]
  402eec:	retf   
  402eed:	pop    ecx
  402eee:	push   esp
  402eef:	xor    ebp,DWORD PTR [eax+0x3c8e0c0d]
  402ef5:	adc    DWORD PTR [ebx-0x10],0xffffff94
  402ef9:	xor    eax,0xeb47b1bf
  402efe:	xor    cl,dl
  402f00:	lahf   
  402f01:	shl    ch,0x38
  402f04:	mov    esi,0xf9f137f5
  402f09:	jmp    0xa194:0x531ba8bb
  402f10:	mov    edi,0x306ce4fe
  402f15:	in     al,dx
  402f16:	imul   ebp,DWORD PTR [eax-0x7195de85],0x36147534
  402f20:	shl    BYTE PTR ds:0xf02dd5ac,cl
  402f26:	dec    ebx
  402f27:	pop    eax
  402f28:	sahf   
  402f29:	sub    DWORD PTR [edi],eax
  402f2b:	icebp  
  402f2c:	jnp    0x402fa7
  402f2e:	cmp    eax,0x117be6b7
  402f33:	cs push ss
  402f35:	or     dh,BYTE PTR [esi]
  402f37:	into   
  402f38:	cmp    edi,DWORD PTR [edx+eiz*2-0x6cfb5b4e]
  402f3f:	xlat   BYTE PTR ds:[ebx]
  402f40:	pop    ds
  402f41:	imul   ebp,DWORD PTR [eax+0x7e],0x790738ea
  402f48:	inc    eax
  402f49:	dec    edi
  402f4a:	or     al,BYTE PTR [ebp-0x42]
  402f4d:	cmp    BYTE PTR [ebx-0x4cd61cad],dh
  402f53:	inc    ebx
  402f54:	xchg   ecx,eax
  402f55:	xlat   BYTE PTR ds:[ebx]
  402f56:	aaa    
  402f57:	adc    cl,BYTE PTR ds:0x3c4bfe01
  402f5d:	xor    BYTE PTR [bp+di-0x37],ch
  402f61:	ret    0x1e05
  402f64:	out    0x50,al
  402f66:	(bad)  
  402f67:	(bad)  
  402f68:	jge    0x402f0e
  402f6a:	sti    
  402f6b:	adc    al,dh
  402f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f6e:	jo     0x402f7a
  402f70:	sbb    eax,DWORD PTR [ebx+0x66fa2674]
  402f76:	dec    ebp
  402f77:	sub    esp,esi
  402f79:	and    al,0xf9
  402f7b:	xchg   ecx,eax
  402f7c:	ror    DWORD PTR [esi+0x923df38],cl
  402f82:	enter  0xb3ee,0xf9
  402f86:	call   0x7c459bb6
  402f8b:	int    0xb
  402f8d:	pop    esp
  402f8e:	dec    ebp
  402f8f:	test   esi,0xfbbff33c
  402f95:	sbb    dl,BYTE PTR [edi+0x6902462b]
  402f9b:	mov    esp,0x21975b35
  402fa0:	stos   DWORD PTR es:[edi],eax
  402fa1:	xlat   BYTE PTR ds:[ebx]
  402fa2:	jae    0x402fd5
  402fa4:	minps  xmm1,XMMWORD PTR [ecx]
  402fa7:	jns    0x402fc3
  402fa9:	hlt    
  402faa:	sbb    al,ch
  402fac:	scas   eax,DWORD PTR es:[edi]
  402fad:	(bad)  
  402fae:	fild   WORD PTR [ebp+ecx*2-0x4e355eb1]
  402fb5:	(bad)  
  402fb6:	retf   0x2d75
  402fb9:	jmp    0x6bb03f7e
  402fbe:	mov    ds:0xc14fd70d,eax
  402fc3:	push   ecx
  402fc4:	sbb    DWORD PTR [ebp+0x1e],eax
  402fc7:	std    
  402fc8:	push   esp
  402fc9:	sub    BYTE PTR [ebp+0x7e],al
  402fcc:	aaa    
  402fcd:	jne    0x402ff0
  402fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fd0:	test   cl,dh
  402fd2:	rcl    DWORD PTR [edx-0x1f59a94f],1
  402fd8:	call   0x9c6d9261
  402fdd:	ror    BYTE PTR [edx+0x9],1
  402fe0:	push   ecx
  402fe1:	and    al,0xb8
  402fe3:	cmp    al,0xa6
  402fe5:	ror    BYTE PTR [edx-0x3c3d9fac],0xb
  402fec:	ins    DWORD PTR es:[edi],dx
  402fed:	mov    edi,0x2abd145f
  402ff2:	xor    al,0xd7
  402ff4:	push   ebx
  402ff5:	push   cs
  402ff6:	aam    0xb9
  402ff8:	add    BYTE PTR [ebp+0x5d84b136],dh
  402ffe:	or     DWORD PTR [esp+edi*2+0x1e],esi
  403002:	nop
  403003:	sub    eax,0x82534c9a
  403008:	retf   0x7789
  40300b:	jnp    0x403084
  40300d:	inc    ebx
  40300e:	mov    ecx,0x3f252420
  403013:	xchg   ebx,eax
  403014:	mov    eax,ds:0xbf5294f6
  403019:	xchg   ebp,eax
  40301a:	fcomi  st,st(6)
  40301c:	test   DWORD PTR [edi+0x2f],ecx
  40301f:	call   0xa145:0x3e0c182a
  403026:	popf   
  403027:	push   eax
  403028:	inc    ecx
  403029:	(bad)  [esp+edi*2]
  40302c:	lock mov eax,0x3f227281
  403032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403033:	(bad)  
  403034:	dec    ecx
  403035:	pop    edx
  403036:	mov    ah,0x0
  403038:	ss and bl,dl
  40303b:	sub    BYTE PTR [eax],bl
  40303d:	jecxz  0x403091
  40303f:	jmp    0xaf3e:0x55b4e387
  403046:	out    dx,eax
  403047:	pop    esi
  403048:	mov    al,0x32
  40304a:	pusha  
  40304b:	ror    DWORD PTR [ecx+0x3293196f],0xb5
  403052:	pop    ecx
  403053:	sub    ebx,ebp
  403055:	loopne 0x403065
  403057:	xchg   al,al
  403059:	mov    eax,0xec5a9b13
  40305e:	xor    BYTE PTR [ecx-0x49],dl
  403061:	test   DWORD PTR ds:0x6ab589a1,0xf0681fe8
  40306b:	into   
  40306c:	dec    ebp
  40306d:	das    
  40306e:	bound  esp,QWORD PTR [edi]
  403070:	fs adc eax,0x8bc75871
  403076:	(bad)  
  403077:	daa    
  403078:	sbb    dh,ch
  40307a:	xor    eax,0x8ba7cca2
  40307f:	push   ss
  403080:	inc    esi
  403081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403082:	adc    edi,DWORD PTR [ebp+0x23559abc]
  403088:	push   ecx
  403089:	ret    0xe43c
  40308c:	rcr    DWORD PTR [ebx-0x6a4d9342],cl
  403092:	or     eax,0x3766ae3
  403097:	ret    0x7af3
  40309a:	ss inc edx
  40309c:	mov    ecx,0xe51c6a4d
  4030a1:	and    bl,BYTE PTR [esi]
  4030a3:	pop    edx
  4030a4:	ins    BYTE PTR es:[edi],dx
  4030a5:	dec    ebx
  4030a6:	(bad)  
  4030a7:	int    0xbf
  4030a9:	fcom   DWORD PTR [edx+edi*1]
  4030ac:	xchg   edi,eax
  4030ad:	jnp    0x4030a5
  4030af:	cli    
  4030b0:	mov    bl,al
  4030b2:	inc    eax
  4030b3:	xor    eax,0x4d1a49aa
  4030b8:	xchg   DWORD PTR [ebx+0x28c19273],ebp
  4030be:	and    esi,esi
  4030c0:	stos   DWORD PTR es:[edi],eax
  4030c1:	inc    ecx
  4030c2:	mov    dl,cl
  4030c4:	mov    ebp,eax
  4030c6:	jbe    0x4030f4
  4030c8:	fwait
  4030c9:	push   0x95d2fdcc
  4030ce:	test   BYTE PTR [eax-0x2087b609],ch
  4030d4:	xor    al,0x71
  4030d6:	and    al,0xcc
  4030d8:	and    DWORD PTR [esi+0x70],esp
  4030db:	sbb    eax,0xa6abc6f2
  4030e0:	out    0xb8,al
  4030e2:	popa   
  4030e3:	xor    eax,0x4758ae1f
  4030e8:	or     eax,0xefa81aec
  4030ed:	mov    edx,ebp
  4030ef:	aas    
  4030f0:	xchg   edi,eax
  4030f1:	adc    DWORD PTR [ecx],ecx
  4030f3:	xchg   ecx,eax
  4030f4:	(bad)  
  4030f5:	adc    al,0x13
  4030f7:	neg    BYTE PTR [ebp+0x13]
  4030fa:	scas   al,BYTE PTR es:[edi]
  4030fb:	jle    0x40317c
  4030fd:	stc    
  4030fe:	retf   0x4a4e
  403101:	cli    
  403102:	adc    DWORD PTR [ebp+ebp*4+0x4b65e875],edx
  403109:	mov    edi,DWORD PTR [edi-0x49]
  40310c:	and    eax,0x61d574e0
  403111:	adc    BYTE PTR [esi+0x2c],ch
  403114:	or     DWORD PTR [ebx],0x5620632
  40311a:	ins    DWORD PTR es:[edi],dx
  40311b:	sub    BYTE PTR [ebx-0x35],dh
  40311e:	cmp    BYTE PTR [edi],cl
  403120:	dec    esi
  403121:	scas   eax,DWORD PTR es:[edi]
  403122:	in     al,0xe5
  403124:	dec    eax
  403125:	test   ax,di
  403128:	xor    BYTE PTR [ebx],dh
  40312a:	push   esi
  40312b:	lds    ebx,FWORD PTR [ebp-0x50]
  40312e:	inc    edx
  40312f:	fisubr DWORD PTR [ebp+0x16b444da]
  403135:	int    0x1c
  403137:	bound  edx,QWORD PTR [esi+0x337fad3e]
  40313d:	mov    al,ds:0x9b858008
  403142:	mov    ah,0xff
  403144:	jmp    0x3052cb7d
  403149:	push   ebx
  40314a:	pop    ds
  40314b:	pop    ebx
  40314c:	fsub   st,st(2)
  40314e:	or     ah,cl
  403150:	add    DWORD PTR [eax+ebp*8+0x5979368b],esp
  403157:	xor    BYTE PTR [edx],dl
  403159:	inc    edx
  40315a:	adc    dl,al
  40315c:	sahf   
  40315d:	daa    
  40315e:	pop    edi
  40315f:	lds    ecx,FWORD PTR [eax]
  403161:	push   edi
  403162:	fwait
  403163:	push   esp
  403164:	(bad)  
  403165:	bound  ebp,QWORD PTR [esi+0x2818449d]
  40316b:	lgs    edi,FWORD PTR ds:0x630c99f2
  403172:	inc    ecx
  403173:	test   DWORD PTR [ecx],edx
  403175:	xor    al,0xb0
  403177:	jl     0x403124
  403179:	fdivr  st(0),st
  40317b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40317c:	dec    ebx
  40317d:	enter  0xb589,0x6b
  403181:	mov    ah,0xc3
  403183:	(bad)  
  403185:	inc    esi
  403186:	inc    esp
  403187:	lock dec DWORD PTR [ebx]
  40318a:	sub    edi,DWORD PTR [edi]
  40318c:	mov    eax,DWORD PTR [ebx-0x5e8b28be]
  403192:	cld    
  403193:	push   ebx
  403194:	inc    edi
  403195:	ins    DWORD PTR es:[edi],dx
  403196:	sub    bl,BYTE PTR [edx+0x61]
  403199:	adc    dh,BYTE PTR [eax+0x69]
  40319c:	push   es
  40319d:	xchg   ebp,eax
  40319e:	cmp    bl,BYTE PTR [ecx+0x643366fc]
  4031a4:	xchg   esp,eax
  4031a5:	aas    
  4031a6:	mov    ah,0x32
  4031a8:	comiss xmm0,DWORD PTR [ebp+0xc1a3781]
  4031af:	sbb    ebx,ebx
  4031b1:	mov    bh,BYTE PTR [edi+0x5d402062]
  4031b7:	pop    ds
  4031b8:	(bad)  
  4031b9:	xor    al,0xc4
  4031bb:	stos   DWORD PTR es:[edi],eax
  4031bc:	sbb    BYTE PTR [bp+si],dh
  4031bf:	pop    eax
  4031c0:	cs loope 0x403154
  4031c3:	sub    ah,BYTE PTR [ecx+0x27]
  4031c6:	push   edi
  4031c7:	push   eax
  4031c8:	imul   esp,DWORD PTR [esi-0x1df2dfa9],0x6134c507
  4031d2:	or     dh,dl
  4031d4:	adc    edi,edi
  4031d6:	retf   
  4031d7:	and    eax,0x66aaf246
  4031dc:	test   ch,bl
  4031de:	sub    al,BYTE PTR [ebp-0x52f91a81]
  4031e4:	stos   DWORD PTR es:[di],eax
  4031e6:	jbe    0x4031f9
  4031e8:	jne    0x4031be
  4031ea:	(bad)  
  4031eb:	ds mov bl,0xee
  4031ee:	stos   DWORD PTR es:[edi],eax
  4031ef:	add    esp,edx
  4031f1:	shl    DWORD PTR [eax],0x8e
  4031f4:	cdq    
  4031f5:	aad    0xb4
  4031f7:	adc    bh,BYTE PTR [ecx]
  4031f9:	bound  edi,QWORD PTR [ecx-0x42]
  4031fc:	xchg   esp,eax
  4031fd:	and    BYTE PTR [ebx+edi*2],0x6e
  403201:	cmp    eax,0x48cb45bb
  403206:	(bad)  
  403207:	sbb    ebx,DWORD PTR [eax]
  403209:	sbb    eax,0xe422d198
  40320e:	push   eax
  40320f:	pop    ds
  403210:	cs mov ebx,0xa061fd5a
  403216:	pop    edi
  403217:	mov    esi,0xac0a202d
  40321c:	sahf   
  40321d:	push   esp
  40321e:	fisttp QWORD PTR [ecx]
  403220:	cmp    ah,BYTE PTR [eax+0x51358b35]
  403226:	(bad)  [ecx+0x73e148c4]
  40322c:	pop    ecx
  40322d:	fnstcw WORD PTR [edx+0x2b]
  403230:	aam    0xb3
  403232:	daa    
  403233:	mov    al,ds:0xd3d8456e
  403238:	sub    esp,ebp
  40323a:	mov    esi,0x90af187b
  40323f:	out    0x70,al
  403241:	mov    bh,0xa0
  403243:	mov    al,ds:0x9b37dcca
  403248:	iret   
  403249:	push   esp
  40324a:	push   edx
  40324b:	int3   
  40324c:	sahf   
  40324d:	push   esi
  40324e:	mov    cs,WORD PTR [edx]
  403250:	mov    esi,0x62185dbb
  403255:	add    al,0x37
  403257:	test   al,0x50
  403259:	jg     0x4032b9
  40325b:	test   DWORD PTR [ebp+0x19],esp
  40325e:	aaa    
  40325f:	mov    esp,0x1de1291d
  403264:	test   eax,0x46b964c2
  403269:	lock cmp esp,DWORD PTR [ebx-0x68fc8f47]
  403270:	jmp    0x4032bc
  403272:	jo     0x40323d
  403274:	sub    cl,BYTE PTR [esi]
  403276:	push   ecx
  403277:	fist   DWORD PTR [edi+0x4a]
  40327a:	lds    esp,FWORD PTR [edi+0x23]
  40327d:	sbb    al,bh
  40327f:	mov    ch,0x3d
  403281:	cmp    cl,BYTE PTR [edx-0x59]
  403284:	mov    eax,ds:0x93a20427
  403289:	jge    0x4032e4
  40328b:	dec    eax
  40328c:	jl     0x4032eb
  40328e:	outs   dx,BYTE PTR ds:[esi]
  40328f:	repnz xor BYTE PTR [ecx+0x5a],0x31
  403294:	sbb    ch,BYTE PTR [eax]
  403296:	push   DWORD PTR ss:[ebx-0x55]
  40329a:	ds imul ebp,edi,0xfffffff5
  40329e:	cmp    al,0xf7
  4032a0:	mov    cl,BYTE PTR [eax+0x6e]
  4032a3:	in     al,0x17
  4032a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032a6:	push   cs
  4032a7:	popf   
  4032a8:	bound  esi,QWORD PTR [ecx-0x51bf5ab6]
  4032ae:	addr16 push 0xffffff9e
  4032b1:	int    0xd0
  4032b3:	daa    
  4032b4:	ror    dh,0xcb
  4032b7:	lahf   
  4032b8:	popf   
  4032b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ba:	push   es
  4032bb:	call   0xbaaa:0x12727832
  4032c2:	lods   eax,DWORD PTR ds:[esi]
  4032c3:	cdq    
  4032c4:	aam    0x3c
  4032c6:	or     eax,0xd63a92b5
  4032cb:	push   esp
  4032cc:	(bad)  
  4032cd:	mov    esi,0x95bfae0e
  4032d2:	jp     0x403293
  4032d4:	jle    0x403352
  4032d6:	inc    esi
  4032d7:	pop    edx
  4032d8:	add    ecx,ecx
  4032da:	xchg   ebp,eax
  4032db:	fldenv [esi+0x62]
  4032de:	enter  0x4314,0xe0
  4032e2:	jno    0x403353
  4032e4:	mov    ch,0xc3
  4032e6:	aaa    
  4032e7:	ds cmp cl,0xd0
  4032eb:	adc    eax,ecx
  4032ed:	xor    BYTE PTR [ebp-0x2e],al
  4032f0:	cs pop edx
  4032f2:	pop    ss
  4032f3:	adc    ch,bh
  4032f5:	add    BYTE PTR [ecx],0xad
  4032f8:	xchg   esp,eax
  4032f9:	mov    ah,0x81
  4032fc:	test   BYTE PTR [edi+0xd],ch
  4032ff:	scas   eax,DWORD PTR es:[edi]
  403300:	or     BYTE PTR [eax],bh
  403302:	pop    es
  403303:	out    dx,al
  403304:	popf   
  403305:	mov    esp,0xf645ba6e
  40330a:	daa    
  40330b:	hlt    
  40330c:	mov    ebp,0x5ec88eb7
  403311:	mov    WORD PTR [ebx+0xf],dx
  403315:	cmp    BYTE PTR [eax+0x38],0xac
  403319:	call   DWORD PTR [ecx]
  40331b:	mov    ecx,0xa9a4b2d3
  403320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403321:	jl     0x4032d9
  403323:	cli    
  403324:	lea    edi,[esi]
  403326:	mov    eax,ds:0x72eeb85d
  40332b:	ss mov bh,0x2c
  40332e:	cwde   
  40332f:	(bad)  {k7}{z}
  403334:	xor    BYTE PTR [ebx+0x5e3a8b64],bh
  40333a:	rcr    DWORD PTR [edi-0x27],cl
  40333d:	push   edx
  40333e:	mov    edi,0x337b5bc4
  403343:	cmp    DWORD PTR [eax+0x50],ebp
  403346:	push   ss
  403347:	mov    dl,0xbd
  403349:	sub    ebp,DWORD PTR [esi+0x77fa2f88]
  40334f:	call   0x87674bae
  403354:	cmp    eax,0xf0a91fc1
  403359:	and    dh,bh
  40335b:	push   esp
  40335c:	adc    eax,0xf6f7f240
  403361:	pop    ss
  403362:	xlat   BYTE PTR ds:[ebx]
  403363:	xchg   ecx,eax
  403364:	add    eax,0x25b29e13
  403369:	push   ss
  40336a:	jb     0x40333d
  40336c:	mov    ds:0xc1cb21a5,al
  403371:	or     dl,BYTE PTR [eax+esi*8-0x34]
  403375:	cmp    ebx,ecx
  403377:	mov    ds:0xe62c81ef,al
  40337c:	push   0xef0b213f
  403381:	push   ds
  403382:	push   0x2e
  403384:	mov    eax,0x80890269
  403389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40338a:	xchg   esi,eax
  40338b:	pop    ecx
  40338c:	pop    es
  40338d:	cmp    BYTE PTR [edx+0x1aa08a0d],bl
  403393:	imul   edx,edx,0x5f628c00
  403399:	dec    ebx
  40339a:	mov    cl,0xed
  40339c:	dec    ebx
  40339d:	test   eax,0x263e70de
  4033a2:	pop    ecx
  4033a3:	mov    ds:0xb9e9014d,al
  4033a8:	dec    eax
  4033a9:	(bad)  
  4033aa:	aas    
  4033ab:	(bad)  
  4033ac:	or     DWORD PTR [ebp+ecx*8-0x1cd3eb88],esp
  4033b3:	jnp    0x403422
  4033b5:	sbb    ebp,edi
  4033b7:	cmp    cl,BYTE PTR [edx+0x6a]
  4033ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033bb:	cli    
  4033bc:	jp     0x4033ae
  4033be:	mov    eax,0x20c87a74
  4033c3:	sub    BYTE PTR [edi],dh
  4033c5:	mov    al,0x7f
  4033c7:	cmp    al,0xd5
  4033c9:	jns    0x403380
  4033cb:	pop    edi
  4033cc:	xchg   BYTE PTR [eax-0x326a0401],cl
  4033d2:	pop    esp
  4033d3:	gs sbb eax,0xe08c455a
  4033d9:	sahf   
  4033da:	mov    ecx,0x66ba0708
  4033df:	push   ss
  4033e0:	inc    ebp
  4033e1:	and    BYTE PTR [ecx-0x11],ah
  4033e4:	xchg   ebx,eax
  4033e5:	dec    esi
  4033e6:	pop    es
  4033e7:	dec    ecx
  4033e8:	popa   
  4033e9:	lahf   
  4033ea:	mov    es,WORD PTR [edi+0x1ed06ec8]
  4033f0:	push   es
  4033f1:	jecxz  0x4033ba
  4033f3:	rol    DWORD PTR ds:0x41e2baa4,cl
  4033f9:	in     eax,dx
  4033fa:	icebp  
  4033fb:	(bad)  
  4033fc:	inc    DWORD PTR [esi+0x4788eb4a]
  403402:	leave  
  403403:	int    0x4
  403405:	pop    ebp
  403406:	cmp    BYTE PTR [eax+eiz*2+0x70d151ef],cl
  40340d:	stc    
  40340e:	adc    edi,DWORD PTR [ebp-0x23]
  403411:	sub    BYTE PTR [ecx+0x41],dl
  403414:	int3   
  403415:	mov    edi,0x86741945
  40341b:	mov    BYTE PTR [edi+0x1421cfb],cl
  403421:	loop   0x403445
  403423:	add    dl,dl
  403425:	adc    al,0x50
  403427:	or     BYTE PTR [ecx],dh
  403429:	pop    esp
  40342a:	out    dx,al
  40342b:	lods   eax,DWORD PTR ds:[esi]
  40342c:	add    al,0xe7
  40342e:	enter  0x296,0x91
  403432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403433:	xlat   BYTE PTR ds:[ebx]
  403434:	into   
  403435:	lahf   
  403436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403437:	mov    ebp,0xecb5a54c
  40343c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40343d:	sub    BYTE PTR [ecx],cl
  40343f:	imul   esp,DWORD PTR [eax+0x6e],0x39
  403443:	or     BYTE PTR [eax-0x5],ah
  403446:	aaa    
  403447:	xchg   esi,eax
  403448:	sub    ch,ah
  40344a:	mov    dl,BYTE PTR [edx+0x28]
  40344d:	xchg   ebp,eax
  40344e:	mov    ah,0x9f
  403450:	rcl    bh,0x72
  403453:	and    esp,DWORD PTR [edi]
  403455:	add    ebp,DWORD PTR [ebx]
  403457:	pop    ss
  403458:	dec    ecx
  403459:	test   al,0x3a
  40345b:	push   edx
  40345c:	pop    ds
  40345d:	in     eax,dx
  40345e:	jge    0x4034d4
  403460:	xchg   esp,eax
  403461:	xor    eax,0x3d24ae28
  403466:	cs or  al,0xb8
  403469:	cmp    eax,0x8912b93e
  40346e:	rcpps  xmm7,XMMWORD PTR [edx-0x51]
  403472:	cmp    eax,0x18a385ad
  403477:	sub    esi,ebp
  403479:	xor    al,0xe3
  40347b:	sbb    DWORD PTR [eax*1+0x7e0d7b55],eax
  403482:	sub    esi,DWORD PTR [ecx-0x3c]
  403485:	adc    al,0xd2
  403487:	or     eax,0x9d309cce
  40348c:	scas   eax,DWORD PTR es:[edi]
  40348d:	or     al,0x8e
  40348f:	jge    0x403470
  403491:	xchg   ebx,eax
  403492:	cdq    
  403493:	pop    ebx
  403494:	xor    edi,DWORD PTR [ecx-0xf]
  403497:	inc    ebp
  403498:	ins    DWORD PTR es:[edi],dx
  403499:	dec    ebp
  40349a:	sbb    al,0x77
  40349c:	icebp  
  40349d:	jmp    0x846f:0x388d6427
  4034a4:	(bad)  
  4034a5:	out    dx,al
  4034a6:	xchg   ah,dl
  4034a8:	xchg   esp,eax
  4034a9:	repz and BYTE PTR [ebx-0x4115f293],ah
  4034b0:	rcr    DWORD PTR [eax],1
  4034b2:	mov    ah,0x3c
  4034b4:	test   eax,0x317f5208
  4034b9:	or     al,0xc
  4034bb:	pop    ebx
  4034bc:	in     eax,0xa9
  4034be:	add    ecx,DWORD PTR [eax]
  4034c0:	mov    ebp,0xd51ca906
  4034c5:	popa   
  4034c6:	jae    0x4034eb
  4034c8:	xchg   ebp,eax
  4034c9:	jl     0x4034e9
  4034cb:	cli    
  4034cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034cd:	(bad)  [ebx+ebp*2-0x520d7697]
  4034d4:	sub    ch,BYTE PTR [edi+0x4107615]
  4034da:	test   DWORD PTR [esi],edi
  4034dc:	jl     0x4034e4
  4034de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034df:	sub    bl,0x40
  4034e2:	sbb    DWORD PTR [ecx+eax*1-0x69],edi
  4034e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e7:	pop    eax
  4034e8:	add    al,0xf9
  4034ea:	cmp    BYTE PTR [ecx],ah
  4034ec:	dec    ecx
  4034ed:	jnp    0x4034c0
  4034ef:	call   0x43de:0xd2bf20d9
  4034f6:	inc    ebp
  4034f7:	jmp    0xe26d:0xebfb264
  4034fe:	mov    ecx,0x8bf9b078
  403503:	adc    al,0xbd
  403505:	out    0xbc,al
  403507:	ror    esp,cl
  403509:	cmp    eax,0x8cf846fc
  40350e:	sar    BYTE PTR [esi+0x6c3b9d04],1
  403514:	pop    esi
  403515:	mov    dh,0xf9
  403517:	fdivr  DWORD PTR [ebx-0x5259f09f]
  40351d:	int3   
  40351e:	add    BYTE PTR [eax+0x1d776597],0xa
  403525:	add    BYTE PTR [edx],dh
  403527:	xor    DWORD PTR [edi],0xa841b460
  40352d:	ins    DWORD PTR es:[edi],dx
  40352e:	fdivr  QWORD PTR [esi-0x5a]
  403531:	mov    bh,0x98
  403533:	mov    edx,DWORD PTR [edi+0x54f5ae5]
  403539:	fdivr  DWORD PTR [esi+0x20849e67]
  40353f:	pop    esp
  403540:	pop    ss
  403541:	fld    QWORD PTR [ecx]
  403543:	test   eax,0x9e298f40
  403548:	stc    
  403549:	test   BYTE PTR [esi+edx*4-0x18],bl
  40354d:	call   0x3a7f3e81
  403552:	dec    edi
  403553:	neg    BYTE PTR [edi]
  403555:	push   edi
  403556:	xor    edx,DWORD PTR [edi]
  403558:	out    dx,eax
  403559:	iret   
  40355a:	or     BYTE PTR [edx],dh
  40355c:	push   ebp
  40355d:	lock cmp dh,BYTE PTR [ebx+0x37]
  403561:	fwait
  403562:	inc    esp
  403563:	inc    ecx
  403564:	lea    edi,[ebx+eiz*4-0x4794d416]
  40356b:	sbb    DWORD PTR [edx+eax*1],esp
  40356e:	xchg   edi,eax
  40356f:	cmp    edi,DWORD PTR [eax+0x51]
  403572:	and    DWORD PTR [eax],edx
  403574:	pop    ss
  403575:	mov    bl,0x7
  403577:	adc    eax,0x1940ba48
  40357c:	jmp    0x4035c9
  40357e:	jle    0x4035c0
  403580:	clc    
  403581:	jnp    0x4035fd
  403583:	imul   edi,DWORD PTR [ecx+0xafd604f],0x68
  40358a:	pop    esi
  40358b:	push   esi
  40358c:	jae    0x4035f2
  40358e:	int    0x87
  403590:	iret   
  403591:	xor    esp,0x462c565b
  403597:	and    cl,BYTE PTR [edi+0x4d]
  40359a:	mov    es,WORD PTR [esi]
  40359c:	mov    ds:0x5ce13a70,al
  4035a1:	sahf   
  4035a2:	jle    0x40354e
  4035a4:	pop    edx
  4035a5:	scas   al,BYTE PTR es:[edi]
  4035a6:	push   edi
  4035a7:	jp     0x4035df
  4035a9:	xchg   ebx,eax
  4035aa:	push   ecx
  4035ab:	imul   eax,edi,0x2e
  4035ae:	inc    edi
  4035af:	sti    
  4035b0:	test   al,0xaf
  4035b2:	in     al,dx
  4035b3:	call   0xfe15f076
  4035b8:	clc    
  4035b9:	pop    es
  4035ba:	jp     0x4035e1
  4035bc:	cwde   
  4035bd:	xor    al,0x4a
  4035bf:	push   esp
  4035c0:	sub    dh,al
  4035c2:	call   DWORD PTR [ecx-0x5893665c]
  4035c8:	add    bh,ch
  4035ca:	push   ds
  4035cb:	mov    dh,0x3e
  4035cd:	outs   dx,DWORD PTR fs:[esi]
  4035cf:	fmul   DWORD PTR [edi+ecx*4-0x6dda280d]
  4035d6:	push   cs
  4035d7:	pop    esi
  4035d8:	xchg   edx,eax
  4035d9:	pop    edi
  4035da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035db:	inc    edi
  4035dc:	dec    edi
  4035dd:	retw   
  4035df:	jp     0x403594
  4035e1:	pop    eax
  4035e2:	dec    esp
  4035e3:	push   ds
  4035e4:	das    
  4035e5:	sub    eax,0x2640491d
  4035ea:	jmp    0x2e8d:0x88a9e49b
  4035f1:	xor    dh,BYTE PTR [eax+0x49a554c3]
  4035f7:	or     dh,bl
  4035f9:	iret   
  4035fa:	xchg   ebp,eax
  4035fb:	test   BYTE PTR [eax+ecx*2-0x55],cl
  4035ff:	sti    
  403600:	mov    edi,0x541798fc
  403605:	xchg   WORD PTR [eax+0x5f],bp
  403609:	push   ebx
  40360a:	outs   dx,BYTE PTR ds:[esi]
  40360b:	es daa 
  40360d:	cmp    al,0xd7
  40360f:	fdiv   st(6),st
  403611:	in     eax,0x52
  403613:	mov    edi,0x16f9ab85
  403618:	je     0x403659
  40361a:	add    ah,cl
  40361c:	jae    0x40359f
  40361e:	sbb    eax,0x8eead854
  403623:	ficomp DWORD PTR [ecx+0x5725b4b4]
  403629:	ins    DWORD PTR es:[edi],dx
  40362a:	scas   al,BYTE PTR es:[edi]
  40362b:	mov    al,ds:0x274a7b21
  403630:	aam    0x9d
  403632:	cdq    
  403633:	mov    edx,0x49e863ee
  403638:	jne    0x4035f7
  40363a:	inc    edx
  40363b:	inc    ebx
  40363c:	jmp    0xba5dd1ea
  403641:	mov    ds:0xf7c6cd17,al
  403646:	adc    eax,DWORD PTR [eax+0x63]
  403649:	jg     0x4036ab
  40364b:	jge    0x403629
  40364d:	scas   al,BYTE PTR es:[edi]
  40364e:	popf   
  40364f:	dec    edx
  403650:	pop    ebp
  403651:	push   edx
  403652:	out    0xae,eax
  403654:	pop    ecx
  403655:	inc    ebp
  403656:	jae    0x4036d0
  403658:	cs div al
  40365b:	or     bh,al
  40365d:	mov    al,0xd3
  40365f:	imul   ecx,DWORD PTR [eax-0x7a8f17d4],0xffffffda
  403666:	jne    0x4036ad
  403668:	mov    ds:0x41baf66e,al
  40366d:	cmp    al,0xaa
  40366f:	stos   DWORD PTR es:[edi],eax
  403670:	or     al,BYTE PTR [ecx+0x68427441]
  403676:	or     DWORD PTR [edi+edi*8+0x448dbcb6],esp
  40367d:	mov    dh,0x57
  40367f:	or     esp,edi
  403681:	or     DWORD PTR [ebp-0x186cbded],ecx
  403687:	aas    
  403688:	icebp  
  403689:	inc    ecx
  40368a:	jl     0x40367f
  40368c:	jecxz  0x40364d
  40368e:	in     al,0x88
  403690:	jmp    0xde9717da
  403695:	adc    DWORD PTR [esi-0x507debf7],esi
  40369b:	stos   BYTE PTR es:[edi],al
  40369c:	pop    edx
  40369d:	xor    eax,DWORD PTR [ebx]
  40369f:	sub    DWORD PTR [esi],esp
  4036a1:	or     al,0x82
  4036a3:	pop    esi
  4036a4:	xor    BYTE PTR [ebx],0x9e
  4036a7:	push   esp
  4036a8:	inc    esi
  4036a9:	cmp    dh,al
  4036ab:	cmp    esi,eax
  4036ad:	sar    BYTE PTR ds:0xef145bad,cl
  4036b3:	enter  0xf29d,0x75
  4036b7:	pushf  
  4036b8:	and    al,0x0
  4036ba:	pop    ebp
  4036bb:	fadd   QWORD PTR es:[eax+0x7c26bcb1]
  4036c2:	inc    edi
  4036c3:	mov    ecx,0x71a10658
  4036c8:	push   ecx
  4036c9:	add    dl,bh
  4036cb:	mov    eax,ds:0xbe67b0d4
  4036d0:	pop    esi
  4036d1:	add    BYTE PTR [esi+eiz*1+0x46],dh
  4036d5:	adc    ebp,DWORD PTR [ecx-0x77f425e0]
  4036db:	inc    ebp
  4036dc:	sub    DWORD PTR [esi+0x46814f9b],ebx
  4036e2:	jl     0x4036ba
  4036e4:	out    dx,eax
  4036e5:	push   ebp
  4036e6:	mov    al,ds:0x31824afa
  4036eb:	mov    dl,0xb3
  4036ed:	push   0xddb3007d
  4036f2:	pop    edi
  4036f3:	in     eax,dx
  4036f4:	xchg   esp,eax
  4036f5:	mov    edx,0x684991f4
  4036fa:	loope  0x403695
  4036fc:	mov    bh,BYTE PTR [eax]
  4036fe:	out    0x44,eax
  403700:	jb     0x403683
  403702:	inc    esi
  403703:	inc    edx
  403704:	mov    ds,edx
  403706:	rcl    DWORD PTR [eax+edx*1+0x46],1
  40370a:	and    DWORD PTR [ecx+0x27e4722f],esi
  403710:	jae    0x40376e
  403712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403713:	pop    es
  403714:	ret    0x4b8b
  403717:	jp     0x4036c0
  403719:	int    0x63
  40371b:	ins    BYTE PTR es:[edi],dx
  40371c:	xchg   dl,bh
  40371e:	mov    WORD PTR [edi],es
  403720:	cmp    al,0x5c
  403722:	outs   dx,DWORD PTR ds:[esi]
  403723:	and    DWORD PTR [ebp-0x69610d28],edx
  403729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40372a:	fild   WORD PTR [ebx]
  40372c:	leave  
  40372d:	cli    
  40372e:	push   0x18
  403730:	xchg   esi,ebp
  403732:	hlt    
  403733:	outs   dx,DWORD PTR ds:[esi]
  403734:	pop    esi
  403735:	jne    0x40374a
  403737:	repz pop ecx
  403739:	or     eax,DWORD PTR [bx+di]
  40373c:	cwde   
  40373d:	inc    eax
  40373e:	xor    eax,0x3d7c304c
  403743:	inc    ebp
  403744:	xor    ecx,DWORD PTR [ecx-0x6ad23018]
  40374a:	or     DWORD PTR [edx-0x14],ebp
  40374d:	or     BYTE PTR [ebx],0xc0
  403750:	or     cl,BYTE PTR [ecx]
  403752:	sbb    ecx,DWORD PTR [ecx]
  403754:	retf   
  403755:	das    
  403756:	adc    eax,0x5a2705d2
  40375b:	sbb    eax,0x7b786d54
  403760:	add    DWORD PTR [edi-0x7d],edi
  403763:	mov    edi,0x2240dbf4
  403768:	or     esp,DWORD PTR [ecx]
  40376a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40376b:	out    dx,al
  40376c:	ror    bl,1
  40376e:	adc    al,0x80
  403770:	loop   0x40375a
  403772:	test   BYTE PTR [edi+0x5ef8627],dl
  403778:	cs xor eax,0x4698f493
  40377e:	cmc    
  40377f:	jge    0x403773
  403781:	add    ch,BYTE PTR [esi-0x6c]
  403784:	push   ds
  403785:	hlt    
  403786:	mov    dl,0x11
  403788:	mul    edi
  40378a:	arpl   ax,cx
  40378c:	das    
  40378d:	xchg   ebp,eax
  40378e:	test   DWORD PTR [esi-0x47501268],esp
  403794:	mov    eax,0x8e7e9360
  403799:	sub    al,0x4b
  40379b:	or     ebp,DWORD PTR [ecx-0x19]
  40379e:	cli    
  40379f:	dec    edi
  4037a0:	cmp    DWORD PTR [ecx],esp
  4037a2:	fisttp WORD PTR [edi-0x10ecd519]
  4037a8:	fnstenv [esi]
  4037aa:	dec    eax
  4037ab:	jecxz  0x4037eb
  4037ad:	ror    al,cl
  4037af:	dec    ecx
  4037b0:	and    DWORD PTR [esi+edx*1-0x74acd374],ebp
  4037b7:	jae    0x4037c6
  4037b9:	xchg   ebx,eax
  4037ba:	loop   0x403813
  4037bc:	cld    
  4037bd:	xchg   DWORD PTR [edi-0x55d14307],ebp
  4037c3:	pop    esp
  4037c4:	push   ebp
  4037c5:	or     dl,BYTE PTR [esi+0x5f]
  4037c8:	inc    ebx
  4037c9:	pushf  
  4037ca:	imul   ecx,DWORD PTR [ecx],0x6cece3bf
  4037d0:	lds    ebx,FWORD PTR [edi+0x10]
  4037d3:	mov    esi,0xe7c4067e
  4037d8:	jp     0x403846
  4037da:	rol    DWORD PTR [edx+0x29],1
  4037dd:	pop    ebx
  4037de:	jl     0x403839
  4037e0:	xor    eax,0xa38cd15e
  4037e5:	neg    BYTE PTR [ecx-0x5d3bae7a]
  4037eb:	mov    ecx,0xd0db707a
  4037f0:	hlt    
  4037f1:	mov    ds:0x5ed5b92,al
  4037f6:	jle    0x403860
  4037f8:	fmul   st,st(3)
  4037fa:	mov    esi,0x366d8115
  4037ff:	call   DWORD PTR [ebx+0x483b7741]
  403805:	rcl    al,0x73
  403808:	les    ecx,FWORD PTR [di+0x19]
  40380c:	jb     0x40383b
  40380e:	xor    ebp,DWORD PTR ds:0x3c467b44
  403814:	push   ds
  403815:	mov    WORD PTR [edi+0x7f],gs
  403818:	je     0x403854
  40381a:	add    DWORD PTR [edx],esi
  40381c:	mov    al,ds:0xc1303354
  403821:	out    0x0,al
  403823:	or     al,0x2
  403825:	dec    ecx
  403826:	mov    dh,0x71
  403828:	in     eax,dx
  403829:	pxor   mm3,mm4
  40382c:	push   ss
  40382d:	jp     0x4037b7
  40382f:	push   edx
  403830:	dec    eax
  403831:	push   eax
  403832:	xchg   esi,eax
  403833:	ror    edi,0x9f
  403836:	mov    al,ds:0xb6728a7c
  40383b:	mov    edi,0x26aefe0c
  403840:	and    BYTE PTR [ebx-0x2a],bh
  403843:	scas   al,BYTE PTR es:[edi]
  403844:	mov    ebp,0x3ffc055f
  403849:	dec    esp
  40384a:	jnp    0x403872
  40384c:	jmp    0x4037fa
  40384e:	sub    ah,0x50
  403851:	dec    ebp
  403852:	fadd   DWORD PTR [ecx]
  403854:	mov    cl,0xa1
  403856:	js     0x40381b
  403858:	cmc    
  403859:	ret    
  40385a:	push   0x12
  40385c:	xlat   BYTE PTR gs:[ebx]
  40385e:	int    0x57
  403860:	ds retf 0x6d64
  403864:	sahf   
  403865:	xchg   DWORD PTR [esi],ebp
  403867:	cmp    eax,0x6282171b
  40386c:	call   0xde1f:0xf7ec3719
  403873:	daa    
  403874:	gs (bad) 
  403876:	ror    al,1
  403878:	(bad)  
  403879:	enter  0x8fa7,0x17
  40387d:	xchg   ebx,eax
  40387e:	mov    dh,ch
  403880:	push   ecx
  403881:	jge    0x403846
  403883:	sub    BYTE PTR [ebx-0x74e44d34],ch
  403889:	push   eax
  40388a:	ret    
  40388b:	ret    0x8b04
  40388e:	lods   eax,DWORD PTR ds:[esi]
  40388f:	or     BYTE PTR [ecx+0x6b],bl
  403892:	div    bl
  403894:	pusha  
  403895:	test   DWORD PTR [ebp-0x24],eax
  403898:	mov    BYTE PTR [esp+esi*8-0x5bd847bc],dh
  40389f:	sub    DWORD PTR [eax],esp
  4038a1:	xchg   esp,eax
  4038a2:	(bad)  
  4038a5:	mov    ch,0x8f
  4038a7:	mov    al,0x2f
  4038a9:	icebp  
  4038aa:	shl    BYTE PTR [esi],0xff
  4038ad:	push   esi
  4038ae:	add    BYTE PTR [ecx-0x59755f31],al
  4038b4:	mov    DWORD PTR [edi-0x50608b6e],esi
  4038ba:	ins    BYTE PTR es:[edi],dx
  4038bb:	mov    esi,0xb6299c99
  4038c0:	dec    esp
  4038c1:	sub    ebx,DWORD PTR [ebx+eax*2+0x6d7b1fc5]
  4038c8:	popf   
  4038c9:	sti    
  4038ca:	xor    DWORD PTR [ebx+0x22],ecx
  4038cd:	or     DWORD PTR [edx+0x64],esp
  4038d0:	lock arpl WORD PTR [ebp-0x48],di
  4038d4:	mov    ah,0x41
  4038d6:	xchg   ebp,eax
  4038d7:	or     al,0x1e
  4038d9:	inc    ebx
  4038da:	add    eax,0x8c0f318f
  4038df:	and    eax,0x4be9aff4
  4038e4:	aas    
  4038e5:	xchg   ebx,eax
  4038e6:	ss test al,0x80
  4038e9:	repnz fcmovb st,st(4)
  4038ec:	js     0x40389c
  4038ee:	xchg   esp,eax
  4038ef:	div    BYTE PTR [ecx+0x1b]
  4038f2:	out    0x9c,eax
  4038f4:	xchg   ecx,eax
  4038f5:	inc    eax
  4038f6:	call   0xd8e9:0x888f8f6e
  4038fd:	dec    ebp
  4038fe:	add    al,0x8f
  403900:	mov    ah,0xe1
  403902:	icebp  
  403903:	ret    0x1922
  403906:	ret    0xc131
  403909:	ret    
  40390a:	shr    BYTE PTR [eax],1
  40390c:	mov    ds:0x21578d1c,al
  403911:	inc    edx
  403912:	fldenv [edi]
  403914:	into   
  403915:	fcmovnb st,st(5)
  403917:	stos   DWORD PTR es:[edi],eax
  403918:	jne    0x40394b
  40391a:	add    bh,ch
  40391c:	mov    edx,0xd7152f96
  403921:	cdq    
  403922:	xor    ah,BYTE PTR [esi+0x37]
  403925:	push   eax
  403926:	pushf  
  403927:	out    dx,eax
  403928:	inc    ecx
  403929:	dec    ebp
  40392a:	lods   eax,DWORD PTR ds:[esi]
  40392b:	cmp    esi,DWORD PTR [eax-0x4fec3edd]
  403931:	inc    esp
  403932:	dec    ebp
  403933:	std    
  403934:	out    0xe1,al
  403936:	add    eax,0xf3c13133
  40393b:	pushw  ss
  40393d:	push   edx
  40393e:	mul    DWORD PTR [edx-0x4253de0c]
  403944:	aad    0x87
  403946:	push   ebx
  403947:	xor    DWORD PTR [edi-0x41b54e39],ecx
  40394d:	xor    esp,DWORD PTR [ecx]
  40394f:	mov    esi,DWORD PTR [eax]
  403951:	sbb    ebx,0x22
  403954:	ins    BYTE PTR es:[edi],dx
  403955:	or     al,0xd1
  403957:	popa   
  403958:	loopne 0x403937
  40395a:	les    edx,FWORD PTR [eax+0x69]
  40395d:	or     al,0x99
  40395f:	push   0x33b6b0fc
  403964:	push   edx
  403965:	mov    ebp,0x5e47a110
  40396a:	fwait
  40396b:	and    dh,ah
  40396d:	add    esi,DWORD PTR [edi-0x72]
  403970:	mov    ch,0xe5
  403972:	jg     0x4039c9
  403974:	mov    ah,0x2
  403976:	test   al,0xea
  403978:	lahf   
  403979:	sub    ah,BYTE PTR [ebx+0x64]
  40397c:	cmp    BYTE PTR [edi+0x26d720f4],dl
  403982:	xchg   DWORD PTR [ecx],ebp
  403984:	out    dx,eax
  403985:	out    0xbf,eax
  403987:	rol    BYTE PTR [edi],cl
  403989:	add    eax,0xca02c612
  40398e:	inc    ebx
  40398f:	sti    
  403990:	loope  0x403919
  403992:	das    
  403993:	loopne 0x403993
  403995:	mov    edi,0x666160b4
  40399a:	adc    al,0x28
  40399c:	stos   DWORD PTR es:[edi],eax
  40399d:	cli    
  40399e:	add    ecx,DWORD PTR [ecx+0x60bd4360]
  4039a4:	test   DWORD PTR [ecx-0x6b],esp
  4039a7:	pop    esp
  4039a8:	sub    BYTE PTR es:[ecx+0x329646a6],al
  4039af:	sbb    al,0x7d
  4039b1:	js     0x4039f5
  4039b3:	(bad)  
  4039b4:	jl     0x403958
  4039b6:	mov    dh,BYTE PTR [eax]
  4039b8:	mov    edx,0xb5eeab9a
  4039bd:	adc    dh,dl
  4039bf:	leave  
  4039c0:	cmp    bh,BYTE PTR [edx+0x31851dcf]
  4039c6:	popa   
  4039c7:	fild   WORD PTR [edx-0x2f]
  4039ca:	daa    
  4039cb:	and    ebp,edi
  4039cd:	inc    esi
  4039ce:	and    al,0xf8
  4039d0:	jae    0x4039a0
  4039d2:	in     al,0x25
  4039d4:	dec    ecx
  4039d5:	lock neg al
  4039d8:	mov    ebx,gs
  4039da:	(bad)  
  4039db:	xlat   BYTE PTR ds:[ebx]
  4039dc:	push   ds
  4039dd:	out    dx,al
  4039de:	ror    DWORD PTR [esi],0x67
  4039e1:	(bad)  [edi-0x79]
  4039e4:	sti    
  4039e5:	aas    
  4039e6:	xor    ah,BYTE PTR [eax-0x5dbf2afb]
  4039ec:	test   BYTE PTR [ebx],0x2a
  4039ef:	cmp    eax,0x8aa8ec98
  4039f4:	aas    
  4039f5:	dec    esi
  4039f6:	inc    ebp
  4039f7:	es mov cl,0x54
  4039fa:	pop    es
  4039fb:	lahf   
  4039fc:	and    DWORD PTR [ecx],edx
  4039fe:	pop    ebp
  4039ff:	sub    edx,DWORD PTR [ecx+0x746db697]
  403a05:	pop    edx
  403a06:	scas   al,BYTE PTR es:[edi]
  403a07:	sahf   
  403a08:	push   esi
  403a09:	bound  ebx,QWORD PTR [eax-0x57cde4d0]
  403a0f:	sub    esi,ebx
  403a11:	out    0x56,al
  403a13:	sub    eax,0x8d3f4c2e
  403a18:	pop    es
  403a19:	dec    esp
  403a1a:	aaa    
  403a1b:	mov    BYTE PTR [edx+0x490213cc],bh
  403a21:	inc    edx
  403a22:	pop    esi
  403a23:	into   
  403a24:	mov    al,0xf3
  403a26:	arpl   sp,cx
  403a28:	in     eax,0xce
  403a2a:	sub    ebx,edi
  403a2c:	outs   dx,DWORD PTR ds:[esi]
  403a2d:	adc    DWORD PTR [esi],esi
  403a2f:	dec    esi
  403a30:	mov    al,0xbd
  403a32:	test   eax,0x8cd616ae
  403a37:	arpl   WORD PTR [ebx-0x73],bp
  403a3a:	repz bnd jb 0x4039e4
  403a3e:	jle    0x403abf
  403a40:	dec    esi
  403a41:	cdq    
  403a42:	jle    0x4039e6
  403a44:	push   es
  403a45:	aas    
  403a46:	inc    ecx
  403a47:	dec    BYTE PTR ds:0x96bc33e5
  403a4d:	(bad)  
  403a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a4f:	cmp    DWORD PTR [esi-0x77c5f03c],esp
  403a55:	xchg   esi,eax
  403a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a57:	pop    ds
  403a58:	gs aaa 
  403a5a:	mov    edi,0xd6eb7043
  403a5f:	mov    bh,0x3a
  403a61:	jne    0x403a14
  403a63:	add    al,cl
  403a65:	std    
  403a66:	xchg   esp,eax
  403a67:	dec    eax
  403a68:	aam    0x64
  403a6a:	outs   dx,DWORD PTR ds:[esi]
  403a6b:	add    dh,BYTE PTR [eax+0x6e97e339]
  403a71:	jmp    0x403aa6
  403a73:	daa    
  403a74:	sub    DWORD PTR [edi-0x1c],0x2b
  403a78:	mov    ch,0xd5
  403a7a:	sub    ecx,DWORD PTR [esi+0x159d4878]
  403a80:	outs   dx,BYTE PTR ds:[esi]
  403a81:	add    ecx,DWORD PTR [ebx-0x1bfaf1d2]
  403a87:	stc    
  403a88:	daa    
  403a89:	fistp  WORD PTR [esp+ecx*4]
  403a8c:	add    eax,0xce8967d7
  403a91:	jne    0x403a1e
  403a93:	inc    DWORD PTR ds:0x5ed3a484
  403a99:	fadd   DWORD PTR [eax]
  403a9b:	out    0x1b,al
  403a9d:	call   0x9334f363
  403aa2:	pop    ebp
  403aa3:	sahf   
  403aa4:	es push edi
  403aa6:	jo     0x403ae4
  403aa8:	data16 shl al,cl
  403aab:	mov    eax,ds:0x7d7cfc78
  403ab0:	xchg   esp,eax
  403ab1:	enter  0xeb46,0xf0
  403ab5:	push   es
  403ab6:	stos   BYTE PTR es:[edi],al
  403ab7:	push   esi
  403ab8:	outs   dx,BYTE PTR ds:[esi]
  403ab9:	pop    edi
  403aba:	(bad)  
  403abb:	xor    al,0xcb
  403abd:	dec    edi
  403abe:	cmp    DWORD PTR [eax-0x5b],ecx
  403ac1:	jmp    0xa5d2f6af
  403ac6:	mov    ecx,0x3eca03b9
  403acb:	add    ch,BYTE PTR [eax]
  403acd:	in     eax,0x66
  403acf:	adc    eax,0x5b991df2
  403ad4:	cld    
  403ad5:	mov    ds:0xc6903169,eax
  403ada:	or     dh,dh
  403adc:	sub    DWORD PTR [ecx],0xffffffaa
  403adf:	xchg   ebp,eax
  403ae0:	and    BYTE PTR [ebp-0x101b66dc],ah
  403ae6:	and    al,0xbd
  403ae8:	push   edi
  403ae9:	sbb    eax,0xcb07818a
  403aee:	out    dx,eax
  403aef:	lahf   
  403af0:	xor    bl,BYTE PTR [ecx]
  403af2:	mov    dh,BYTE PTR [ebx-0x6689cb7f]
  403af8:	mov    DWORD PTR [edx],esp
  403afa:	mov    ds:0x357bca30,eax
  403aff:	loop   0x403ad8
  403b01:	inc    ecx
  403b02:	lea    edx,[ebx]
  403b04:	ins    DWORD PTR es:[edi],dx
  403b05:	arpl   WORD PTR [esi+0x514a5763],ax
  403b0b:	fbstp  TBYTE PTR [ebx]
  403b0d:	xor    ah,ah
  403b0f:	ds jmp 0x403aed
  403b12:	mov    bl,0x2d
  403b14:	mov    ebx,0x4223fb6e
  403b19:	ja     0x403ad4
  403b1b:	xchg   esi,eax
  403b1c:	adc    eax,0x4242dfa1
  403b21:	frstor [ecx+0x380bcccc]
  403b27:	shl    cl,1
  403b29:	xor    al,0x48
  403b2b:	sti    
  403b2c:	test   DWORD PTR [edx],0x9392b27
  403b32:	push   esp
  403b33:	xchg   esi,eax
  403b34:	dec    edi
  403b35:	test   al,0xcf
  403b37:	mov    cl,0xcd
  403b39:	jno    0x403b77
  403b3b:	mov    ebp,0x2a359c8d
  403b40:	pop    esp
  403b41:	sub    al,cl
  403b43:	xchg   BYTE PTR [ecx-0xe6e23f3],dl
  403b49:	sbb    edx,DWORD PTR [edx+0x208a826c]
  403b4f:	scas   eax,DWORD PTR es:[edi]
  403b50:	mov    ah,0x4
  403b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b53:	gs ror cl,1
  403b56:	iret   
  403b57:	jb     0x403bd0
  403b59:	push   ecx
  403b5a:	mov    edx,DWORD PTR [edi]
  403b5c:	loop   0x403b1b
  403b5e:	(bad)  
  403b5f:	sub    eax,DWORD PTR [edi]
  403b61:	xor    DWORD PTR [ebp+ebx*1-0x37],esi
  403b65:	shl    cl,cl
  403b67:	out    0x95,eax
  403b69:	data16 mov al,ds:0xcc6e7914
  403b6f:	sahf   
  403b70:	outs   dx,DWORD PTR ds:[esi]
  403b71:	cmp    eax,0xe0c50c1
  403b76:	aaa    
  403b77:	jno    0x403b5f
  403b79:	jo     0x403b8e
  403b7b:	and    ecx,DWORD PTR [edx-0x16]
  403b7e:	jecxz  0x403be1
  403b80:	and    eax,DWORD PTR [ebx-0x805a351]
  403b86:	cs ins BYTE PTR es:[edi],dx
  403b88:	lock jae 0x403bd8
  403b8b:	sar    esp,1
  403b8d:	ins    BYTE PTR es:[edi],dx
  403b8e:	xchg   esi,eax
  403b8f:	es inc eax
  403b91:	test   BYTE PTR ds:0xcac681b1,dl
  403b97:	mov    ecx,DWORD PTR [si+0x12]
  403b9b:	fimul  WORD PTR [edi+ebp*2-0x2c]
  403b9f:	das    
  403ba0:	clc    
  403ba1:	and    DWORD PTR [ebx+0x8956183],eax
  403ba7:	push   ds
  403ba8:	inc    eax
  403ba9:	popa   
  403baa:	lods   eax,DWORD PTR ds:[esi]
  403bab:	dec    edx
  403bac:	scas   eax,DWORD PTR es:[edi]
  403bad:	mov    dl,0xb4
  403baf:	or     DWORD PTR [edx-0x6a],edx
  403bb2:	mov    ecx,0xe6099f67
  403bb7:	(bad)  [edi+0x7a]
  403bba:	fwait
  403bbb:	xor    DWORD PTR [eax-0x11],0x29
  403bbf:	mov    ah,0x7a
  403bc1:	or     DWORD PTR [ebx-0x60],edi
  403bc4:	push   0x37ee5504
  403bc9:	jo     0x403bda
  403bcb:	stos   DWORD PTR es:[edi],eax
  403bcc:	int    0x17
  403bce:	jmp    0xe4c8f953
  403bd3:	xchg   edi,eax
  403bd4:	cmp    esp,DWORD PTR [edi+edi*4-0x4de016fa]
  403bdb:	repz cmp edi,DWORD PTR [edi+0x79418f38]
  403be2:	and    eax,0xa7a35ed
  403be7:	out    dx,eax
  403be8:	(bad)  
  403be9:	jmp    0x403c56
  403beb:	xlat   BYTE PTR ds:[ebx]
  403bed:	ja     0x403be7
  403bef:	add    DWORD PTR [edi+0x6be9bdba],esp
  403bf5:	sub    bh,0xd1
  403bf8:	stos   BYTE PTR es:[edi],al
  403bf9:	rcr    al,cl
  403bfb:	jmp    0xef7:0x9374ecee
  403c02:	push   0x64787cc3
  403c07:	adc    edx,DWORD PTR [esi+0x53]
  403c0a:	inc    esi
  403c0b:	stos   BYTE PTR es:[edi],al
  403c0c:	imul   ebx,DWORD PTR [eax+ebx*2+0x1b],0x22
  403c11:	add    eax,0x39069c1c
  403c16:	in     eax,dx
  403c17:	das    
  403c18:	fcmovbe st,st(4)
  403c1a:	adc    al,0x55
  403c1c:	ret    0xa67c
  403c1f:	lods   eax,DWORD PTR ds:[esi]
  403c20:	mov    ss,WORD PTR [edi+ebx*8-0x40]
  403c24:	pop    ebp
  403c25:	loopne 0x403c74
  403c27:	ret    
  403c28:	jle    0x403c3d
  403c2a:	push   eax
  403c2b:	dec    edx
  403c2c:	push   cs
  403c2d:	in     al,dx
  403c2e:	test   BYTE PTR [eax-0x4a],dh
  403c31:	imul   eax,DWORD PTR [ecx+eax*1+0x4d12c1e],0xffffff85
  403c39:	xchg   edx,eax
  403c3a:	jmp    0x938d:0x64d7b5c4
  403c41:	xor    ah,BYTE PTR [edi+0x664e8f92]
  403c47:	in     eax,0xa4
  403c49:	in     eax,0xb7
  403c4b:	jge    0x403c99
  403c4d:	cwde   
  403c4e:	je     0x403c58
  403c50:	fdivp  st(3),st
  403c52:	lock mov ebp,0x2f150192
  403c58:	or     eax,0x59d8bd6e
  403c5d:	in     eax,dx
  403c5e:	out    dx,eax
  403c5f:	scas   al,BYTE PTR es:[edi]
  403c60:	jecxz  0x403c9a
  403c62:	arpl   WORD PTR [eax-0x42],bp
  403c65:	mov    dl,0x5d
  403c67:	and    dx,WORD PTR [ebp+0x59]
  403c6b:	add    al,0x38
  403c6d:	(bad)
  403c71:	xor    esi,DWORD PTR [ebx+0x167c93a8]
  403c77:	cmpxchg BYTE PTR [edx],al
  403c7a:	push   esi
  403c7b:	ret    
  403c7c:	repz test al,0x14
  403c7f:	mov    bh,0x9f
  403c81:	aas    
  403c82:	sub    ecx,DWORD PTR [edi-0x2ee0dc26]
  403c88:	std    
  403c89:	sub    esi,DWORD PTR [ecx-0x9]
  403c8c:	xchg   ebp,eax
  403c8d:	mov    ds:0x728c2bd2,al
  403c92:	inc    ebx
  403c93:	and    BYTE PTR ds:[bx-0x66],cl
  403c98:	xchg   edi,eax
  403c99:	fild   QWORD PTR [edx]
  403c9b:	dec    eax
  403c9c:	fsub   st,st(3)
  403c9e:	mov    edi,0xc5902ced
  403ca3:	dec    esp
  403ca4:	scas   eax,DWORD PTR es:[edi]
  403ca5:	scas   eax,DWORD PTR es:[edi]
  403ca6:	jnp    0x403c57
  403ca8:	pcmpeqb mm7,QWORD PTR [eax+0x2c4921ce]
  403caf:	(bad)  
  403cb0:	out    0x24,al
  403cb2:	ja     0x403c45
  403cb4:	fadd   DWORD PTR [eax-0x19]
  403cb7:	lahf   
  403cb8:	and    DWORD PTR [ecx],eax
  403cba:	xor    eax,0xf9f3fb70
  403cbf:	cmp    ah,BYTE PTR [eax]
  403cc1:	or     eax,0xc243ee5c
  403cc6:	fstp   DWORD PTR [ebx+0x6d]
  403cc9:	into   
  403cca:	xor    edi,DWORD PTR [edx]
  403ccc:	ret    
  403ccd:	jg     0x403ce2
  403ccf:	int    0x13
  403cd1:	test   DWORD PTR [eax-0x20],esi
  403cd4:	adc    ebx,ecx
  403cd6:	xor    bl,BYTE PTR [ebx-0x67]
  403cd9:	dec    eax
  403cda:	and    BYTE PTR [edx+0x23b85438],bh
  403ce0:	push   ebp
  403ce1:	das    
  403ce2:	int    0x79
  403ce4:	adc    bl,BYTE PTR [esi+0x55475723]
  403cea:	inc    edi
  403ceb:	lahf   
  403cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ced:	add    ch,dh
  403cef:	std    
  403cf0:	fwait
  403cf1:	cli    
  403cf2:	xor    DWORD PTR [esi-0x3a],esp
  403cf5:	push   0xffffff91
  403cf7:	xchg   DWORD PTR [ebx+0x3fdb7d08],ebp
  403cfd:	daa    
  403cfe:	imul   edi,DWORD PTR [ecx+0x3],0x34
  403d02:	fisttp QWORD PTR [ecx-0x28730ebb]
  403d08:	push   edx
  403d09:	aaa    
  403d0a:	dec    edi
  403d0b:	fucomp st(0)
  403d0d:	xor    DWORD PTR [ebp+0x74],0x272f14ff
  403d14:	pop    esp
  403d15:	fild   WORD PTR [esi-0x2f]
  403d18:	retf   0xbf50
  403d1b:	test   DWORD PTR [esi],edi
  403d1d:	jg     0x403d63
  403d1f:	mov    cl,cl
  403d21:	cld    
  403d22:	push   0x6b40396f
  403d27:	ret    
  403d28:	dec    ecx
  403d29:	fild   QWORD PTR [edi+0xf408a52]
  403d2f:	call   0xc55f0b2d
  403d34:	popf   
  403d35:	pushf  
  403d36:	fisttp DWORD PTR [edi+0x78f4988e]
  403d3c:	lock fadd QWORD PTR [edx]
  403d3f:	rcl    BYTE PTR [eax],1
  403d41:	nop
  403d42:	and    bl,al
  403d44:	mov    ebp,0xfe76cc
  403d49:	xor    dl,BYTE PTR [edx-0x2e]
  403d4c:	mov    edi,0xcb9260a5
  403d51:	(bad)  
  403d52:	ror    DWORD PTR [eax-0x4391b2f7],cl
  403d58:	(bad)  
  403d59:	or     al,0xfa
  403d5b:	mov    ?,WORD PTR [edi-0x1bbc98e]
  403d61:	popf   
  403d62:	not    BYTE PTR [ecx]
  403d64:	cmp    al,0xc8
  403d66:	mov    edx,0xc8377963
  403d6b:	inc    eax
  403d6c:	shr    DWORD PTR [esi+0x43aa737d],0xa
  403d73:	mov    esp,0xcafceb0d
  403d78:	and    ebp,0x9
  403d7b:	stc    
  403d7c:	mov    dl,0x5e
  403d7e:	(bad)  
  403d80:	cs test eax,0xb479a028
  403d86:	in     al,0xfb
  403d88:	mov    esi,0xcea871a8
  403d8d:	and    al,BYTE PTR [edx-0x22]
  403d90:	jge    0x403d42
  403d92:	enter  0x748c,0xab
  403d96:	scas   al,BYTE PTR es:[edi]
  403d97:	xor    eax,0xf06eb9d
  403d9c:	mov    ecx,0x69e2ffc4
  403da1:	push   ds
  403da2:	daa    
  403da3:	jo     0x403dc5
  403da5:	rcr    BYTE PTR [esi+0x43373f52],1
  403dab:	pusha  
  403dac:	add    al,0x39
  403dae:	mov    ah,BYTE PTR [ebp-0x60d9d0aa]
  403db4:	stos   BYTE PTR es:[edi],al
  403db5:	mov    ds:0x88d41dcb,al
  403dba:	push   edi
  403dbb:	sar    dh,1
  403dbd:	sub    esi,DWORD PTR [edi-0x1]
  403dc0:	adc    BYTE PTR [eax],bh
  403dc2:	jecxz  0x403e12
  403dc4:	or     DWORD PTR ds:0x75a6c9bd,ecx
  403dca:	sub    al,0x41
  403dcc:	jmp    0x9243:0xa393a0e1
  403dd3:	push   ebp
  403dd4:	sub    eax,DWORD PTR [esi-0x15]
  403dd7:	pushf  
  403dd8:	ror    DWORD PTR [ecx-0x18],cl
  403ddb:	sub    BYTE PTR es:[esi-0x50cdd342],ah
  403de2:	adc    al,0x44
  403de4:	(bad)  
  403de5:	jl     0x403dd0
  403de7:	mov    bh,0xec
  403de9:	xlat   BYTE PTR ds:[ebx]
  403dea:	jb     0x403e01
  403dec:	mov    eax,ds:0x5ef393fd
  403df1:	push   ds
  403df2:	xlat   BYTE PTR ds:[ebx]
  403df3:	add    cl,BYTE PTR [esi]
  403df5:	pop    ebx
  403df6:	cwde   
  403df7:	stc    
  403df8:	adc    dh,BYTE PTR [ebx+0x2d]
  403dfb:	mov    ds:0x570c0e87,eax
  403e00:	xor    BYTE PTR [ebx],0xbd
  403e03:	jecxz  0x403d8e
  403e05:	mov    ebp,0x9ba1e862
  403e0a:	loop   0x403e30
  403e0c:	or     DWORD PTR [eax],0x3152f64e
  403e12:	(bad)  
  403e13:	repnz out dx,al
  403e15:	xor    al,0x4e
  403e18:	cld    
  403e19:	adc    al,0x63
  403e1b:	dec    DWORD PTR [eax+edx*1+0x5fc5a499]
  403e22:	jo     0x403e30
  403e24:	or     esp,DWORD PTR [edi+0x3b59b369]
  403e2a:	push   esi
  403e2b:	(bad)
  403e2e:	in     eax,0xca
  403e30:	cmp    DWORD PTR [esi+esi*2],0xffffff81
  403e34:	loope  0x403de4
  403e36:	test   DWORD PTR es:[edi],ebx
  403e39:	inc    esi
  403e3a:	js     0x403e97
  403e3c:	xchg   edx,eax
  403e3d:	xchg   ebx,eax
  403e3e:	pop    esi
  403e3f:	imul   ecx,DWORD PTR [esi+eiz*4],0x4af38060
  403e46:	in     al,dx
  403e47:	and    al,BYTE PTR [ebx-0x2800fdfc]
  403e4d:	xchg   edi,eax
  403e4e:	mov    dl,0xf8
  403e50:	inc    esi
  403e51:	addr16 cdq 
  403e53:	sbb    DWORD PTR [esi],0x8fd95b5f
  403e59:	inc    esi
  403e5a:	cmp    DWORD PTR [ebp+0x20cd4b9b],eax
  403e60:	arpl   bp,dx
  403e62:	sub    BYTE PTR [ebx],bh
  403e64:	mov    bh,0x29
  403e66:	push   esi
  403e67:	push   ebx
  403e68:	mov    al,ds:0xd5d9caec
  403e6d:	popa   
  403e6e:	mov    ah,0x6
  403e70:	lahf   
  403e71:	inc    edx
  403e72:	mov    ds:0xe198fa25,eax
  403e77:	(bad)  
  403e78:	out    0x2b,al
  403e7a:	mov    ebx,0x51078273
  403e7f:	mov    bh,0xa2
  403e81:	pop    edx
  403e82:	dec    ecx
  403e83:	arpl   WORD PTR [ebp+0x5e],ax
  403e86:	sbb    dl,bl
  403e88:	pop    ds
  403e89:	xlat   BYTE PTR ds:[ebx]
  403e8a:	(bad)  [edx]
  403e8c:	in     al,dx
  403e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e8e:	push   0xffffff80
  403e90:	cmp    al,0x82
  403e92:	dec    esi
  403e93:	jecxz  0x403e85
  403e95:	iret   
  403e96:	call   0xdbb2:0xcd86d8c4
  403e9d:	jle    0x403ec8
  403e9f:	mov    esp,0xac25fad8
  403ea4:	fmul   st(0),st
  403ea6:	(bad)
  403ea9:	sub    eax,0x30ed8000
  403eae:	test   al,0x42
  403eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eb1:	sbb    al,0x49
  403eb3:	push   cs
  403eb4:	aas    
  403eb5:	xchg   bl,dh
  403eb7:	cmp    eax,0x4c33fdc0
  403ebc:	xchg   edi,eax
  403ebd:	jbe    0x403e61
  403ebf:	shl    bl,1
  403ec1:	adc    eax,0x5b923a7b
  403ec6:	out    dx,al
  403ec7:	pushf  
  403ec8:	dec    ecx
  403ec9:	and    ecx,DWORD PTR [esi]
  403ecb:	das    
  403ecc:	popf   
  403ecd:	hlt    
  403ece:	jmp    0x4802:0xf3cffe01
  403ed5:	and    al,0x8
  403ed7:	xchg   edi,eax
  403ed8:	push   cs
  403ed9:	fcom   DWORD PTR [esi-0x35]
  403edc:	mov    eax,ds:0x2f35ffe8
  403ee1:	sbb    al,0x74
  403ee3:	mov    edi,0x8c270b01
  403ee8:	add    ch,0xbd
  403eeb:	inc    edi
  403eec:	cmp    al,0x71
  403eee:	cli    
  403eef:	xor    al,0x29
  403ef1:	fbld   TBYTE PTR [esi+0x3dc2082e]
  403ef7:	jnp    0x403f44
  403ef9:	inc    edx
  403efa:	jmp    0x403f39
  403efc:	xchg   ecx,eax
  403efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403efe:	jnp    0x403f61
  403f00:	retf   
  403f01:	dec    eax
  403f02:	in     al,0xe8
  403f04:	sub    al,0xe7
  403f06:	mov    al,ds:0xb1d3cc4f
  403f0b:	pop    esp
  403f0c:	psubusw mm7,QWORD PTR [ecx]
  403f0f:	and    ch,ah
  403f11:	sbb    bl,BYTE PTR [ecx]
  403f13:	adc    al,BYTE PTR [ebp-0x5afc35ad]
  403f19:	addr16 data16 hlt 
  403f1c:	inc    esi
  403f1d:	and    dh,0x31
  403f20:	pop    ds
  403f21:	xor    cl,BYTE PTR [edx+0x18]
  403f24:	pop    esi
  403f25:	rcr    al,cl
  403f27:	and    DWORD PTR [eax+0x37],0x4fc56aba
  403f2e:	fisubr DWORD PTR [edi]
  403f30:	jp     0x403fa9
  403f32:	ss repnz mov dl,0xae
  403f36:	jp     0x403ee4
  403f38:	push   eax
  403f39:	call   0x3a095dff
  403f3e:	(bad)  
  403f3f:	aas    
  403f40:	add    BYTE PTR [ebp+0x7d],bh
  403f43:	sub    DWORD PTR ds:0x29159927,esp
  403f49:	repz retf 0x6496
  403f4d:	lods   eax,DWORD PTR ds:[esi]
  403f4e:	sub    bl,BYTE PTR [edi-0x2a]
  403f51:	(bad)  
  403f52:	paddusw mm5,QWORD PTR [eax]
  403f55:	cmp    al,BYTE PTR [ecx+0x6feddc50]
  403f5b:	push   0x389f1173
  403f60:	cmp    eax,0xb9fed946
  403f65:	out    0xd4,al
  403f67:	sbb    DWORD PTR [esi+0x41],0xaf38c182
  403f6e:	add    al,BYTE PTR ds:0xb7f399ca
  403f74:	inc    ebx
  403f75:	sbb    eax,0x60cea4fa
  403f7a:	and    eax,0x87f163c1
  403f7f:	cmp    al,0xbf
  403f81:	fisttp WORD PTR [eax-0x61]
  403f84:	in     al,dx
  403f85:	shl    BYTE PTR [ebp-0xe],1
  403f88:	icebp  
  403f89:	shl    DWORD PTR [ebp+edi*1-0x27],cl
  403f8d:	pusha  
  403f8e:	xor    al,dh
  403f90:	mov    DWORD PTR ds:0xc196abdb,ebx
  403f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f97:	rcl    BYTE PTR [ebx+0x1bdc299],1
  403f9d:	xlat   BYTE PTR ds:[ebx]
  403f9e:	pop    ss
  403f9f:	cli    
  403fa0:	jae    0x403f6e
  403fa2:	enter  0x7c41,0x11
  403fa6:	cmp    al,0xff
  403fa8:	push   ecx
  403fa9:	jnp    0x403f52
  403fab:	jecxz  0x403fdb
  403fad:	in     eax,0xdb
  403faf:	pusha  
  403fb0:	sub    ebx,DWORD PTR [ebp+0x49]
  403fb3:	mov    ds:0x8691fdfd,al
  403fb8:	jge    0x403fe8
  403fba:	xchg   ebp,eax
  403fbb:	jle    0x403fe7
  403fbd:	idiv   BYTE PTR [ebx]
  403fbf:	push   ecx
  403fc0:	ror    BYTE PTR [esi-0x7274e590],0xde
  403fc7:	pop    edx
  403fc8:	adc    eax,0x1e770fe5
  403fcd:	popa   
  403fce:	cmp    DWORD PTR [esp+eax*1-0x5b],ebx
  403fd2:	push   eax
  403fd3:	cmp    ch,BYTE PTR [eax-0x729f38cc]
  403fd9:	sbb    al,0xed
  403fdb:	xlat   BYTE PTR ds:[ebx]
  403fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fdd:	cld    
  403fde:	std    
  403fdf:	cdq    
  403fe0:	sti    
  403fe1:	mov    al,0x38
  403fe3:	push   cs
  403fe4:	lods   eax,DWORD PTR ds:[esi]
  403fe5:	pop    ecx
  403fe6:	sub    al,0xc8
  403fe8:	lds    ecx,FWORD PTR [edi+0x609b5d58]
  403fee:	cmp    al,0xbe
  403ff0:	out    0x32,eax
  403ff2:	dec    esp
  403ff3:	out    0x95,al
  403ff5:	jmp    0x5e7a:0x540b6a93
  403ffc:	std    
  403ffd:	stos   DWORD PTR es:[edi],eax
  403ffe:	mov    ds:0xad691ba5,eax
  404003:	retf   
  404004:	push   ds
  404005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404006:	adc    esp,esp
  404008:	mov    ds:0x54c6a13b,al
  40400d:	xor    edx,DWORD PTR [esp+edi*8-0x67c26f51]
  404014:	les    ebx,FWORD PTR [eax+0x352e732f]
  40401a:	sbb    al,0x5a
  40401c:	imul   ebp,DWORD PTR [edi+0xa],0x8
  404020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404021:	call   0xbece:0xa7bc8856
  404028:	test   al,0xbf
  40402a:	or     eax,DWORD PTR [edi+0x79a2bc02]
  404030:	mov    ebp,0xe610d21c
  404035:	add    DWORD PTR [ebx+ecx*1],0x62e17ed4
  40403c:	cmp    dh,BYTE PTR [esi]
  40403e:	arpl   WORD PTR [edi+0x57895165],bp
  404044:	mov    bl,0x20
  404046:	out    dx,al
  404047:	xor    al,0x7e
  404049:	jo     0x40401a
  40404b:	xor    DWORD PTR [edx],esp
  40404d:	fadd   st,st(1)
  40404f:	test   al,0xe
  404051:	xchg   ebp,eax
  404052:	inc    esp
  404053:	test   DWORD PTR [esi+eax*8-0x2ae42d11],esp
  40405a:	rol    BYTE PTR [edx],cl
  40405c:	out    0xb7,eax
  40405e:	aad    0xb1
  404060:	mov    ah,BYTE PTR [ebx]
  404062:	(bad)  
  404063:	(bad)  
  404064:	jnp    0x404041
  404066:	mov    DWORD PTR [eax-0x35f0e346],edx
  40406c:	sar    DWORD PTR [ebp+0x59a303b6],0x66
  404073:	nop
  404074:	sahf   
  404075:	sub    DWORD PTR [eax],edx
  404077:	inc    edx
  404078:	call   0xf9c6:0x68c2e33e
  40407f:	jmp    0xb9f1:0x2eea8bc2
  404086:	in     al,0xae
  404088:	xchg   ecx,eax
  404089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40408a:	cmp    dl,BYTE PTR [esi]
  40408c:	dec    esi
  40408d:	lds    ebx,FWORD PTR [edx]
  40408f:	and    ch,dl
  404091:	mov    ch,0x7c
  404093:	jo     0x40403f
  404095:	test   eax,0xca466f90
  40409a:	jmp    0xa918:0xf2c70c08
  4040a1:	jo     0x4040fc
  4040a3:	neg    DWORD PTR [esi+0x1e9cf266]
  4040a9:	lea    ebx,[ecx+0x6e]
  4040ac:	push   0x40
  4040ae:	inc    eax
  4040af:	dec    esi
  4040b0:	sub    al,0x36
  4040b2:	popf   
  4040b3:	fisub  DWORD PTR [esi]
  4040b5:	sbb    al,0x26
  4040b7:	enter  0xc09,0x4e
  4040bb:	sbb    eax,0x5b357c99
  4040c0:	adc    edi,ecx
  4040c2:	sub    esp,DWORD PTR [ebx]
  4040c4:	inc    ebx
  4040c5:	adc    bl,BYTE PTR [ebp*2-0x73522bda]
  4040cc:	test   eax,0x938a0ed0
  4040d1:	ret    0xeda9
  4040d4:	(bad)  
  4040d5:	aam    0xc5
  4040d7:	loop   0x404082
  4040d9:	cdq    
  4040da:	or     eax,0x90da2ddd
  4040df:	sar    BYTE PTR [ecx],cl
  4040e1:	sbb    eax,0xf994b92a
  4040e6:	fadd   QWORD PTR [ebp+0x6a]
  4040e9:	enter  0xb92a,0x13
  4040ed:	sub    cl,BYTE PTR [edx-0x3a386c7d]
  4040f3:	test   edi,0x7cee56dd
  4040f9:	sbb    BYTE PTR [ebx],cl
  4040fb:	jp     0x40411a
  4040fd:	sti    
  4040fe:	add    edi,edx
  404100:	stos   BYTE PTR es:[edi],al
  404101:	and    ch,BYTE PTR [edi]
  404103:	jge    0x4040b6
  404105:	mov    al,ds:0xbe2c14c5
  40410a:	loopne 0x40410b
  40410c:	fsub   st(7),st
  40410e:	xacquire lock or BYTE PTR [esi-0x3c],0x33
  404114:	xchg   DWORD PTR [eax-0x11],edi
  404117:	aas    
  404118:	push   0xc9210ee3
  40411d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40411e:	sub    al,0xa8
  404120:	jns    0x404193
  404122:	adc    al,0xaa
  404124:	stos   BYTE PTR es:[edi],al
  404125:	fcomp  DWORD PTR [ebx-0x69300782]
  40412b:	stc    
  40412c:	and    DWORD PTR [ecx+0x7c],esi
  40412f:	out    dx,eax
  404130:	jmp    0x7ba4c329
  404135:	mov    al,0x1
  404137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404138:	(bad)  
  404139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40413a:	inc    edi
  40413b:	sbb    eax,0x85411dc
  404140:	bound  ebp,QWORD PTR [eax-0x78]
  404143:	xchg   ah,bl
  404145:	mov    eax,0x9ba14c6d
  40414a:	clc    
  40414b:	sbb    BYTE PTR [eax-0x291aff91],ah
  404151:	xor    ebp,DWORD PTR [eax-0x104cc55a]
  404157:	mov    bh,0xdc
  404159:	push   es
  40415a:	popf   
  40415b:	mov    dh,0x43
  40415d:	jne    0x404163
  40415f:	aad    0x0
  404161:	lods   al,BYTE PTR ss:[esi]
  404163:	mov    ebx,es
  404165:	mov    ah,0xbd
  404167:	call   0xe62d:0x5b6ab72b
  40416e:	pop    ds
  40416f:	adc    BYTE PTR ds:0x152317f8,cl
  404175:	inc    edi
  404176:	mov    ebp,0x21a71ecc
  40417b:	sbb    al,0x61
  40417d:	pop    ecx
  40417e:	push   ebp
  40417f:	push   ss
  404180:	cmp    dl,bl
  404182:	push   eax
  404183:	dec    ebp
  404184:	or     al,0xa2
  404186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404187:	daa    
  404188:	cmp    BYTE PTR [ebx],dl
  40418a:	std    
  40418b:	inc    ebp
  40418c:	mov    edi,0x17f75196
  404191:	xor    bl,BYTE PTR [ecx+0x5f]
  404194:	xchg   DWORD PTR [ebx-0x15],ebp
  404197:	pop    es
  404198:	mov    ds:0x512f1e8b,eax
  40419d:	std    
  40419e:	xor    ch,BYTE PTR [esi+0x5b]
  4041a1:	jmp    0x64813ece
  4041a6:	inc    edx
  4041a7:	sub    eax,0x1abbd0d1
  4041ac:	push   cs
  4041ad:	iret   
  4041ae:	es in  al,0x8c
  4041b1:	sub    BYTE PTR [ebx],ch
  4041b3:	(bad)  
  4041b4:	adc    eax,0xbf948c23
  4041b9:	add    al,0x4f
  4041bb:	cli    
  4041bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041bd:	mov    edi,ecx
  4041bf:	sbb    dl,al
  4041c1:	and    al,0x40
  4041c3:	dec    ebx
  4041c4:	sbb    eax,0x14f63aaa
  4041c9:	and    eax,0x755f63f9
  4041ce:	push   eax
  4041cf:	test   ebp,edx
  4041d1:	mov    ebx,0x28ec977f
  4041d6:	cmp    ah,BYTE PTR [eax+0x19f882a0]
  4041dc:	mov    ch,0x47
  4041de:	pop    ecx
  4041df:	inc    ebx
  4041e0:	ffreep st(3)
  4041e2:	push   ss
  4041e3:	inc    edi
  4041e4:	mov    eax,0x967e252d
  4041e9:	into   
  4041ea:	sbb    BYTE PTR [eax-0xea5d320],bl
  4041f0:	xchg   edx,eax
  4041f1:	ins    BYTE PTR es:[edi],dx
  4041f2:	pop    es
  4041f3:	inc    ebp
  4041f4:	dec    ecx
  4041f5:	inc    esp
  4041f6:	cmp    al,0xad
  4041f8:	sbb    esi,DWORD PTR ds:0x25efcc9b
  4041fe:	pop    ecx
  4041ff:	cmp    bl,BYTE PTR [edx+0x51]
  404202:	(bad)  
  404203:	fs in  al,dx
  404205:	ret    
  404206:	dec    ebp
  404207:	pop    ss
  404208:	jmp    0xaeb1b909
  40420d:	sbb    al,0x75
  40420f:	pop    esi
  404210:	fs ds in eax,dx
  404213:	into   
  404214:	inc    ah
  404216:	jmp    0xd4434395
  40421b:	inc    ebp
  40421c:	ins    BYTE PTR es:[edi],dx
  40421d:	imul   ebp,DWORD PTR [eax-0xc],0x2d
  404221:	into   
  404222:	outs   dx,BYTE PTR ds:[esi]
  404223:	adc    dh,BYTE PTR [ebx+0x6c]
  404226:	(bad)  
  404227:	mov    al,0x64
  404229:	(bad)  
  40422b:	test   eax,0x485b5f54
  404230:	std    
  404231:	jmp    0x52d4b944
  404236:	in     al,dx
  404237:	or     dl,BYTE PTR [ebx-0x7acdf05f]
  40423d:	adc    esi,DWORD PTR [esi-0x6a33170f]
  404243:	inc    edx
  404244:	fld    st(0)
  404246:	inc    ecx
  404247:	imul   ecx,esi,0x3e4c0618
  40424d:	dec    edx
  40424e:	lds    eax,FWORD PTR [eax]
  404250:	loop   0x40426e
  404252:	push   cs
  404253:	outs   dx,BYTE PTR ds:[esi]
  404254:	in     al,dx
  404255:	fcomp  DWORD PTR [ecx-0x502ad3fc]
  40425b:	add    DWORD PTR [edx-0x2d],edx
  40425e:	cmp    eax,0x5067847c
  404263:	es loope 0x4042d8
  404266:	mov    ecx,0x981fdd39
  40426b:	fsubrp st(3),st
  40426d:	sbb    DWORD PTR [edx+0x5f369957],ebx
  404273:	pusha  
  404274:	inc    esi
  404275:	push   0x6f
  404277:	rol    esp,0x91
  40427a:	mov    ebx,0x4a66c0c0
  40427f:	pop    ecx
  404280:	cwde   
  404281:	push   DWORD PTR [eax+0xd]
  404284:	dec    ebp
  404285:	int    0xe7
  404287:	sub    BYTE PTR ds:0x447086bd,bl
  40428d:	pop    esp
  40428e:	loope  0x404266
  404290:	push   0x3e
  404292:	jmp    0x80c2:0xaeece038
  404299:	jmp    0xf4d0:0xfbddab2a
  4042a0:	push   cs
  4042a1:	sub    eax,0xc0d57469
  4042a6:	and    al,0x86
  4042a8:	mov    dl,0x1f
  4042aa:	call   0x219d:0x9605e6c2
  4042b1:	fsub   QWORD PTR [eax+0x1]
  4042b4:	add    al,0x24
  4042b6:	aam    0x69
  4042b8:	and    eax,0xae347792
  4042bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042be:	jns    0x404277
  4042c0:	test   eax,0x972c817
  4042c5:	inc    bp
  4042c7:	iret   
  4042c8:	adc    edx,ebp
  4042ca:	push   edi
  4042cb:	btc    ecx,ebx
  4042ce:	xlat   BYTE PTR ds:[ebx]
  4042cf:	or     BYTE PTR [ecx+0x21c29a46],ah
  4042d5:	fisubr DWORD PTR [esi-0x28e6f2b6]
  4042db:	mov    BYTE PTR [eax-0x2d],dh
  4042de:	out    dx,al
  4042df:	inc    edx
  4042e0:	out    dx,eax
  4042e1:	push   edx
  4042e2:	lods   eax,DWORD PTR ds:[esi]
  4042e3:	sub    DWORD PTR [edi+0x2e734c34],edi
  4042e9:	fsub   QWORD PTR [edx+0x29ebcd09]
  4042ef:	sti    
  4042f0:	sub    DWORD PTR [edx+0x75],esp
  4042f3:	loopne 0x4042cb
  4042f5:	dec    esp
  4042f6:	jno    0x4042a1
  4042f8:	push   esp
  4042f9:	dec    esi
  4042fa:	cdq    
  4042fb:	icebp  
  4042fc:	mov    edx,0x4ea0831e
  404301:	daa    
  404302:	sbb    DWORD PTR [ebx],eax
  404304:	call   0x95a67de7
  404309:	jg     0x404343
  40430b:	aad    0x5c
  40430d:	cmc    
  40430e:	dec    eax
  40430f:	lock mov eax,0x9b8752af
  404315:	jmp    0x51c40a50
  40431a:	pop    ebp
  40431b:	scas   al,BYTE PTR es:[edi]
  40431c:	lahf   
  40431d:	stc    
  40431e:	dec    esp
  40431f:	shl    DWORD PTR [esi+edx*8],0x6b
  404323:	push   ebx
  404324:	stc    
  404325:	lea    ecx,[eax-0x666b76f2]
  40432b:	jecxz  0x40431e
  40432d:	sbb    al,0x49
  40432f:	daa    
  404330:	fisttp DWORD PTR [ebx+0x15]
  404333:	add    BYTE PTR [eax+0x53d14b4c],dl
  404339:	das    
  40433a:	xor    edx,DWORD PTR [edx+0x4b]
  40433d:	imul   ebx,DWORD PTR [eax+0x3b],0xfffffff4
  404341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404342:	mov    eax,ds:0x29f10b24
  404347:	mov    DWORD PTR [ebx],eax
  404349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40434a:	mov    esi,0xf053e291
  40434f:	outs   dx,DWORD PTR ds:[esi]
  404350:	ror    dl,1
  404352:	lods   al,BYTE PTR ds:[esi]
  404353:	jmp    0x4043bb
  404355:	xor    esp,ebx
  404357:	mov    al,0x76
  404359:	stos   BYTE PTR es:[edi],al
  40435a:	stc    
  40435b:	cli    
  40435c:	test   DWORD PTR [edi-0x57eb866c],ebp
  404362:	(bad)  
  404363:	cwde   
  404364:	lods   eax,DWORD PTR ds:[esi]
  404365:	in     al,dx
  404366:	inc    edi
  404367:	mov    BYTE PTR [ebp+0x4a],cl
  40436a:	cmc    
  40436b:	jbe    0x404386
  40436d:	into   
  40436e:	mov    BYTE PTR [eax],dl
  404370:	jle    0x40432e
  404372:	loop   0x4043e3
  404374:	cmc    
  404375:	repnz inc edi
  404377:	push   ebp
  404378:	xchg   edx,eax
  404379:	ins    DWORD PTR es:[edi],dx
  40437a:	add    ch,BYTE PTR [edx-0x52]
  40437d:	ja     0x4043c5
  40437f:	mov    ebp,0x2088a37f
  404384:	das    
  404385:	xchg   esi,eax
  404386:	and    eax,0x2281bd0e
  40438b:	xchg   ecx,eax
  40438c:	push   cs
  40438d:	gs nop
  40438f:	push   ss
  404390:	lock mov WORD PTR [eax+0x77fe7bfc],ss
  404397:	inc    ebp
  404398:	dec    edi
  404399:	sahf   
  40439a:	data16 je 0x404360
  40439d:	shl    DWORD PTR [eax+edi*2-0x498ee6f8],cl
  4043a4:	aad    0xe1
  4043a6:	mov    ds:0x7020534e,al
  4043ab:	adc    DWORD PTR [esi],edi
  4043ad:	les    eax,FWORD PTR [ebx-0x194f1183]
  4043b3:	repz test DWORD PTR [ebp+0x7d41049f],eax
  4043ba:	sbb    eax,0x4384fc86
  4043bf:	dec    esp
  4043c0:	xor    dh,bl
  4043c2:	mov    esi,0xb154baf1
  4043c7:	shr    BYTE PTR [esi+0x39],1
  4043ca:	sub    DWORD PTR ds:0xc0df1678,ecx
  4043d0:	es in  al,0xd4
  4043d3:	adc    al,0x78
  4043d5:	jae    0x4043ae
  4043d7:	xor    esi,DWORD PTR ds:0xebf5052e
  4043dd:	pushf  
  4043de:	(bad)  
  4043df:	lods   eax,DWORD PTR ds:[esi]
  4043e0:	imul   edi,DWORD PTR [ebp+0x1e],0xffffffea
  4043e4:	sti    
  4043e5:	repz inc edi
  4043e7:	xor    al,0x45
  4043e9:	mov    bh,0x47
  4043eb:	mov    ah,0x89
  4043ed:	pop    edx
  4043ee:	inc    eax
  4043ef:	icebp  
  4043f0:	and    BYTE PTR [ebp-0x3decfa9e],ch
  4043f6:	jae    0x40445b
  4043f8:	fadd   st(6),st
  4043fa:	adc    DWORD PTR [edx],0x1e
  4043fd:	ret    
  4043fe:	(bad)  [edi-0x39]
  404401:	lock adc cl,BYTE PTR [esi]
  404404:	add    eax,0x8764fc80
  404409:	xchg   DWORD PTR [esp+edi*8],edi
  40440c:	and    edi,DWORD PTR [eax]
  40440e:	mov    ch,0xab
  404410:	push   eax
  404411:	jb     0x68eeb52
  404417:	dec    ebp
  404418:	pop    ebp
  404419:	fdivp  st(2),st
  40441b:	add    eax,0x6344520e
  404420:	xor    BYTE PTR [ebp+0x872cadf],dl
  404426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404427:	xor    ah,BYTE PTR [esi+0x26d2333c]
  40442d:	test   al,0x97
  40442f:	mov    al,ds:0x3f03e654
  404434:	inc    ecx
  404435:	jns    0x404461
  404437:	je     0x404437
  404439:	sub    DWORD PTR [esi],esp
  40443b:	fsubr  st(4),st
  40443d:	or     eax,0x59433981
  404442:	arpl   WORD PTR [ebx],ax
  404444:	repnz inc ebp
  404446:	xchg   ecx,eax
  404447:	test   BYTE PTR [ebx-0x4f],ah
  40444a:	(bad)  
  40444b:	shl    DWORD PTR [edi],cl
  40444d:	dec    ecx
  40444e:	xor    eax,0x2ad4f2a3
  404453:	les    eax,FWORD PTR [edi+0x54]
  404456:	pop    edi
  404457:	pop    ebp
  404458:	loopne 0x40445a
  40445a:	inc    ebx
  40445b:	inc    ecx
  40445c:	add    bh,ch
  40445e:	std    
  40445f:	xor    BYTE PTR [esi-0x5d],ch
  404462:	into   
  404463:	ja     0x404472
  404465:	js     0x4044aa
  404467:	inc    edx
  404468:	mov    dh,0x63
  40446a:	je     0x40444c
  40446c:	cmp    DWORD PTR ds:0x333d62d2,ebp
  404472:	inc    esp
  404473:	cmp    ebx,ebp
  404475:	mov    cl,0xcc
  404477:	jae    0x404406
  404479:	std    
  40447a:	inc    ebp
  40447b:	xor    DWORD PTR [esi],edi
  40447d:	sub    dh,ch
  40447f:	(bad)  
  404480:	(bad)  
  404481:	ja     0x40449a
  404483:	mov    ch,0xb6
  404485:	mov    al,0x13
  404487:	(bad)  
  404488:	mov    esp,0xb1116978
  40448d:	jge    0x404466
  40448f:	xchg   esi,eax
  404490:	dec    eax
  404491:	mov    DWORD PTR ds:0xe52eb958,edx
  404497:	push   cs
  404498:	jo     0x4044cd
  40449a:	add    BYTE PTR [ebp+edi*2-0x23],dh
  40449e:	adc    eax,0x622004fe
  4044a3:	fdivr  DWORD PTR [esi-0x622a4a6b]
  4044a9:	addr16 bts eax,ecx
  4044ad:	mov    ecx,0x6561fe9a
  4044b2:	ret    0x4c73
  4044b5:	lahf   
  4044b6:	mov    bh,dl
  4044b8:	mov    bl,bh
  4044ba:	rcl    DWORD PTR [edx-0x6d0809f],0x36
  4044c1:	out    0xee,al
  4044c3:	sub    DWORD PTR [ebx],ebp
  4044c5:	fs jnp 0x404501
  4044c8:	cmc    
  4044c9:	outs   dx,DWORD PTR ds:[esi]
  4044ca:	and    ah,BYTE PTR [edi]
  4044cc:	pop    edi
  4044cd:	imul   ebx,DWORD PTR [ebx+0x30],0xffffff96
  4044d1:	jae    0x404538
  4044d3:	pop    ebx
  4044d4:	add    edx,0x99dfc8e6
  4044da:	or     BYTE PTR [ebx+0x41c23497],ah
  4044e0:	sbb    DWORD PTR [eax],eax
  4044e2:	cdq    
  4044e3:	push   esp
  4044e4:	mov    dl,0x9a
  4044e6:	dec    esi
  4044e7:	and    al,0xe3
  4044e9:	pop    ebx
  4044ea:	test   dl,0xdc
  4044ed:	je     0x4044b0
  4044ef:	pusha  
  4044f0:	xchg   ebp,eax
  4044f1:	loopne 0x404567
  4044f3:	mov    eax,0x8e42be27
  4044f8:	sub    ebp,0x90256a55
  4044fe:	mov    edi,0xcb1592c3
  404503:	fs in  al,0xaf
  404506:	or     DWORD PTR [edi+edi*1-0x7437c68d],edx
  40450d:	cmp    BYTE PTR [edi],ah
  40450f:	pop    ecx
  404510:	es push es
  404512:	fwait
  404513:	jns    0x4044f4
  404515:	outs   dx,BYTE PTR ds:[esi]
  404516:	jne    0x4044e9
  404518:	aaa    
  404519:	jne    0x4044fd
  40451b:	xor    eax,0xa2072110
  404520:	xchg   ebx,eax
  404521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404522:	mov    ebx,0xc0329e2
  404527:	test   bh,al
  404529:	push   edi
  40452a:	push   ss
  40452b:	mov    ds:0xd6f33a4c,eax
  404530:	in     eax,dx
  404531:	xchg   ebx,eax
  404532:	pop    edi
  404533:	jb     0x404525
  404535:	mov    al,0xa9
  404537:	mov    ds:0xf05003,al
  40453c:	mov    dl,0x41
  40453e:	pop    esp
  40453f:	xor    eax,edi
  404541:	data16 jp 0x404530
  404544:	loope  0x40453e
  404546:	ins    BYTE PTR es:[edi],dx
  404547:	sbb    ch,BYTE PTR [eax+0x6282e185]
  40454d:	dec    esi
  40454e:	jl     0x4044ef
  404550:	or     ebp,DWORD PTR [edx-0x33]
  404553:	xchg   ebp,eax
  404554:	jae    0x4044d6
  404556:	test   eax,0x778b69e8
  40455b:	or     eax,0x981ce4c4
  404560:	sahf   
  404561:	push   esp
  404562:	(bad)  
  404563:	jmp    0xa446:0x367896fa
  40456a:	loope  0x404524
  40456c:	(bad)  
  40456e:	mov    eax,ds:0x5f575378
  404573:	push   ecx
  404574:	sahf   
  404575:	pusha  
  404576:	out    0xc3,al
  404578:	pop    ecx
  404579:	nop
  40457a:	pop    ebp
  40457b:	jmp    0x404580
  40457d:	ret    
  40457e:	and    ebp,DWORD PTR [esi-0x5c]
  404581:	dec    ecx
  404582:	or     al,0x37
  404584:	jno    0x404534
  404586:	or     BYTE PTR [ebp-0x3042fd38],ch
  40458c:	xchg   edi,eax
  40458d:	mov    WORD PTR [edx+0x0],?
  404590:	fcmovne st,st(4)
  404592:	bound  ebx,QWORD PTR [edi-0x24]
  404595:	adc    cl,BYTE PTR [edi]
  404597:	push   edx
  404598:	cs jl  0x4045d0
  40459b:	fwait
  40459c:	push   0xdaabbe1a
  4045a1:	ret    
  4045a2:	sahf   
  4045a3:	mov    WORD PTR [esi-0x5b],ds
  4045a6:	jns    0x404578
  4045a8:	sub    cl,BYTE PTR [ebx]
  4045aa:	and    ebx,edi
  4045ac:	xchg   edi,eax
  4045ad:	mov    ds:0x14c91d72,al
  4045b2:	sbb    BYTE PTR ds:0x8df8efc0,bl
  4045b8:	cmp    al,BYTE PTR ds:0xa41e1987
  4045be:	jecxz  0x4045ea
  4045c0:	push   ds
  4045c1:	inc    edx
  4045c2:	mov    dl,ah
  4045c4:	stc    
  4045c5:	call   0xdfb9:0xec53f0d8
  4045cc:	(bad)
  4045d0:	inc    eax
  4045d1:	push   es
  4045d2:	popa   
  4045d3:	das    
  4045d4:	lea    esi,[ebp-0x59a09876]
  4045da:	icebp  
  4045db:	push   cs
  4045dc:	dec    esp
  4045dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045de:	and    al,0xe4
  4045e0:	jmp    0x8ebc:0x5e784d58
  4045e7:	cmp    dh,BYTE PTR [ebp-0x6af20775]
  4045ed:	mov    bh,0xf1
  4045ef:	push   eax
  4045f0:	xchg   ecx,eax
  4045f1:	and    al,0xc4
  4045f3:	sbb    bl,dl
  4045f5:	inc    esi
  4045f6:	mov    ch,0x4c
  4045f8:	add    BYTE PTR [eax+ebx*8+0x5c],0x4f
  4045fd:	fs dec ecx
  4045ff:	scas   al,BYTE PTR es:[edi]
  404600:	mov    dh,0x6c
  404602:	push   ss
  404603:	xchg   DWORD PTR [edi-0x6e],esp
  404606:	shl    BYTE PTR [esi],cl
  404608:	dec    ebx
  404609:	imul   ecx,DWORD PTR [ebp-0x4f9acf6c],0x4e
  404610:	daa    
  404611:	stc    
  404612:	xor    eax,0x68eaa228
  404617:	fmul   QWORD PTR [edi+edx*8-0x53]
  40461b:	dec    ebp
  40461c:	and    edx,DWORD PTR [edx]
  40461e:	jne    0x4045b1
  404620:	pop    ebx
  404621:	mov    esi,0x9839e2a6
  404626:	or     edx,DWORD PTR [ebp+0x21]
  404629:	push   edx
  40462a:	std    
  40462b:	add    al,0x1d
  40462d:	dec    edx
  40462e:	fisttp QWORD PTR [eax-0x354f9c56]
  404634:	mov    al,ds:0x1874bea9
  404639:	add    ebx,DWORD PTR [ecx]
  40463b:	stos   BYTE PTR es:[edi],al
  40463c:	into   
  40463d:	inc    ebx
  40463e:	(bad)  
  40463f:	mov    al,ds:0x62fe13fd
  404644:	sbb    BYTE PTR [ecx+0x45],cl
  404647:	add    DWORD PTR [ebx+0x2b],ecx
  40464a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40464b:	cs mov ch,0xb4
  40464e:	repz jbe 0x4046a0
  404651:	xor    dh,BYTE PTR [ebx]
  404653:	call   0xdf67:0x2817e663
  40465a:	jns    0x404679
  40465c:	pop    edx
  40465d:	dec    esi
  40465e:	mov    DWORD PTR [ecx-0x77],ecx
  404661:	ja     0x4046c2
  404663:	iret   
  404664:	sbb    bl,dl
  404666:	xlat   BYTE PTR ds:[ebx]
  404667:	out    dx,al
  404668:	cmp    DWORD PTR [esi+0x22],ebx
  40466b:	lea    ebp,[eax+0x76]
  40466e:	xor    BYTE PTR [eax+ebx*8-0x476389ca],0x96
  404676:	(bad)  
  404677:	mov    bh,0x38
  404679:	mov    eax,ds:0xe04390d3
  40467e:	push   ecx
  40467f:	xchg   esi,eax
  404680:	in     al,dx
  404681:	jl     0x40469e
  404683:	dec    ebp
  404684:	shl    DWORD PTR [eax],cl
  404686:	sub    eax,0x861a5493
  40468b:	ret    0x8e0c
  40468e:	stc    
  40468f:	call   0xe41c13a8
  404694:	and    al,0xd4
  404696:	loop   0x404648
  404698:	push   ebx
  404699:	ds xchg edx,eax
  40469b:	dec    ecx
  40469c:	mov    eax,0xe712b906
  4046a1:	cmp    ecx,DWORD PTR [ebx-0x52]
  4046a4:	push   eax
  4046a5:	jns    0x40470d
  4046a7:	inc    ecx
  4046a8:	sub    eax,0x87dca550
  4046ad:	mov    ah,0x7
  4046af:	cs push esp
  4046b1:	sub    BYTE PTR [edi],al
  4046b3:	gs and eax,0x298c1eb1
  4046b9:	clc    
  4046ba:	lods   al,BYTE PTR ds:[esi]
  4046bb:	add    esi,DWORD PTR [eax-0x243eb06d]
  4046c1:	(bad)  
  4046c2:	loopne 0x40464c
  4046c4:	ss mov cl,0x5
  4046c7:	sti    
  4046c8:	mov    eax,ds:0x4bca41bd
  4046cd:	mov    DWORD PTR [esi+0x7d],esi
  4046d0:	mov    ebp,0xf7d70014
  4046d5:	int    0x63
  4046d7:	sbb    BYTE PTR [esi+0xdec1d59],bl
  4046dd:	push   edi
  4046de:	popa   
  4046df:	scas   eax,DWORD PTR es:[edi]
  4046e0:	mov    al,0xbd
  4046e2:	push   ecx
  4046e3:	push   0xffffffae
  4046e5:	cmp    dh,BYTE PTR [edi-0x39f78fa8]
  4046eb:	pop    es
  4046ec:	(bad)  
  4046ed:	sahf   
  4046ee:	(bad)
  4046f1:	fbld   TBYTE PTR [edi-0x5f]
  4046f4:	xchg   ecx,eax
  4046f5:	lock adc DWORD PTR [edx+0x1b116a82],ebx
  4046fc:	xchg   BYTE PTR [ecx],ah
  4046fe:	popf   
  4046ff:	sub    eax,0x6c10c91
  404704:	mov    ecx,0xa2065882
  404709:	mov    dh,0x8
  40470b:	sbb    eax,0x922aef5e
  404710:	stos   BYTE PTR es:[edi],al
  404711:	sbb    ebp,DWORD PTR ds:[ecx]
  404714:	cld    
  404715:	inc    ebx
  404716:	out    0x61,al
  404718:	lods   eax,DWORD PTR ds:[esi]
  404719:	sbb    esp,ebp
  40471b:	cdq    
  40471c:	inc    esi
  40471d:	cmp    eax,0xce8c8c25
  404722:	leave  
  404723:	int3   
  404724:	imul   ebp,DWORD PTR [ecx],0xffffff90
  404727:	xchg   DWORD PTR [edx+0x6900164c],eax
  40472d:	xchg   ebp,eax
  40472e:	les    esp,FWORD PTR fs:[esi-0x79559b72]
  404735:	jae    0x40474b
  404737:	leave  
  404738:	or     BYTE PTR [ecx],cl
  40473a:	xor    DWORD PTR [edx+0x11a3d552],esi
  404740:	fsub   QWORD PTR [esi+0x5e]
  404744:	fnstenv [esp+esi*8]
  404747:	pop    edi
  404748:	mov    ebp,0x3fa460ac
  40474d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40474e:	ret    
  40474f:	pop    ecx
  404750:	mov    eax,ds:0xf2060a4d
  404755:	jo     0x40477b
  404757:	mov    dl,0xde
  404759:	jmp    0x6033b90
  40475e:	or     al,0x32
  404760:	inc    esi
  404761:	(bad)  
  404762:	fbld   TBYTE PTR [eax-0x60ccb90d]
  404768:	lods   eax,DWORD PTR ds:[esi]
  404769:	aaa    
  40476a:	adc    ecx,ebx
  40476c:	stos   BYTE PTR es:[edi],al
  40476d:	stos   DWORD PTR es:[edi],eax
  40476e:	(bad)  
  40476f:	and    al,0x2d
  404771:	aas    
  404772:	push   ds
  404773:	mov    bl,0xc7
  404775:	js     0x404756
  404777:	std    
  404778:	ret    
  404779:	sub    BYTE PTR [ecx],0x82
  40477c:	pop    DWORD PTR [ebp-0x5d7aeec2]
  404782:	mov    cl,0x50
  404784:	inc    edi
  404785:	adc    ebp,DWORD PTR [eax]
  404787:	cs inc esp
  404789:	icebp  
  40478a:	jle    0x4047f7
  40478c:	loop   0x4047e3
  40478e:	jno    0x404790
  404790:	or     dh,cl
  404792:	ret    0x7b2f
  404795:	(bad)  
  404796:	sub    esi,ebp
  404798:	or     al,0x37
  40479a:	cmp    dl,BYTE PTR [esi+0x2716d784]
  4047a0:	test   al,0xe9
  4047a2:	mov    ebx,0x7274991c
  4047a7:	sub    BYTE PTR [edx],0xf5
  4047aa:	sbb    DWORD PTR [esi+0x614a4d69],esi
  4047b0:	stos   DWORD PTR es:[edi],eax
  4047b1:	mov    dh,0x56
  4047b3:	ins    DWORD PTR es:[edi],dx
  4047b4:	ds mov ebx,0x32761d2c
  4047ba:	lfs    esi,FWORD PTR [edi-0x33308b85]
  4047c1:	dec    esi
  4047c2:	(bad)  
  4047c3:	mov    ah,cl
  4047c5:	ss jne 0x4047b5
  4047c8:	jmp    0x90c11223
  4047cd:	mov    ah,0xba
  4047cf:	xchg   edx,eax
  4047d0:	and    BYTE PTR [esi-0x10],ah
  4047d3:	sar    DWORD PTR [esi],1
  4047d5:	retf   0x835d
  4047d8:	mov    dl,0x9b
  4047da:	sub    bl,BYTE PTR [edi]
  4047dc:	lahf   
  4047dd:	sbb    ah,0x3e
  4047e0:	imul   edi,esi,0xffffffa3
  4047e3:	jg     0x4047dc
  4047e5:	cmp    esi,edx
  4047e7:	inc    esp
  4047e8:	stc    
  4047e9:	mov    bl,0xfc
  4047eb:	lahf   
  4047ec:	and    eax,0xba9b4b86
  4047f1:	(bad)  
  4047f2:	stc    
  4047f3:	aaa    
  4047f4:	mov    ecx,esp
  4047f6:	loope  0x40478b
  4047f8:	ins    DWORD PTR es:[edi],dx
  4047f9:	dec    esp
  4047fa:	(bad)  
  4047fb:	fstp   QWORD PTR gs:[eax]
  4047fe:	scas   al,BYTE PTR es:[edi]
  4047ff:	xor    eax,0x73d42b1
  404804:	mov    cl,ah
  404806:	fbstp  TBYTE PTR [eax-0x4beaa09]
  40480c:	(bad)  
  40480d:	adc    bl,al
  40480f:	xor    BYTE PTR ds:0x182fed49,0x2e
  404816:	bound  ebx,QWORD PTR [ebp-0x77]
  404819:	jno    0x40488e
  40481b:	jno    0x40484c
  40481d:	pusha  
  40481e:	add    DWORD PTR [eax+0x61],0xa44d8c5a
  404825:	hlt    
  404826:	or     bl,BYTE PTR fs:[ebx]
  404829:	adc    BYTE PTR [esi-0x671ef996],dh
  40482f:	imul   ecx,DWORD PTR [edi-0xf78d116],0x8e869a2f
  404839:	add    ebx,DWORD PTR [esi+0x6f]
  40483c:	and    DWORD PTR [ecx],0xfffffff0
  40483f:	mov    cl,0x52
  404841:	outs   dx,BYTE PTR ds:[esi]
  404842:	or     ecx,edx
  404844:	xchg   ecx,eax
  404845:	xor    al,0x73
  404847:	test   DWORD PTR [ebx+0x5d00fdcd],edx
  40484d:	iret   
  40484e:	fwait
  40484f:	pop    edx
  404850:	fcom   QWORD PTR ss:[eax+0x7d08cede]
  404857:	les    ebp,FWORD PTR [esi-0x66da0882]
  40485d:	xchg   edi,eax
  40485e:	inc    ebp
  40485f:	addr16 shl esp,cl
  404862:	and    ecx,DWORD PTR [eax-0x5dcd9779]
  404868:	inc    edi
  404869:	mov    bl,0xa
  40486b:	sub    ecx,DWORD PTR [edi+esi*1+0xa]
  40486f:	out    dx,eax
  404870:	jmp    0x9959:0x243cab01
  404877:	inc    esi
  404878:	test   eax,0xfaac2dad
  40487d:	dec    ebp
  40487e:	sub    esp,DWORD PTR [edx-0x243d22a0]
  404884:	int    0xa5
  404886:	push   ebx
  404887:	push   0xffffffa1
  404889:	xchg   edi,eax
  40488a:	xor    BYTE PTR [edi-0x162d3567],ah
  404890:	pop    esi
  404891:	sar    BYTE PTR [ebp-0x2],cl
  404894:	xor    BYTE PTR [ebp*2+0x50f1c879],al
  40489b:	xor    esp,DWORD PTR [ebx]
  40489d:	push   ebp
  40489e:	fs jae 0x404905
  4048a1:	sbb    ah,BYTE PTR [eax-0x4c7f7722]
  4048a7:	push   eax
  4048a8:	mov    edi,0xf1b406b5
  4048ad:	jge    0x4048ec
  4048af:	cld    
  4048b0:	add    eax,edi
  4048b2:	jl     0x404862
  4048b4:	push   cs
  4048b5:	mov    ds:0xe83f1beb,eax
  4048ba:	in     eax,0xe8
  4048bc:	sbb    eax,0x25413645
  4048c1:	(bad)  
  4048c2:	push   edx
  4048c3:	lods   al,BYTE PTR ds:[esi]
  4048c4:	ret    
  4048c5:	push   es
  4048c6:	das    
  4048c7:	mov    dl,0xa6
  4048c9:	ret    
  4048ca:	dec    ecx
  4048cb:	int    0x3a
  4048cd:	push   esi
  4048ce:	and    eax,0x13f8363
  4048d3:	jae    0x4048e1
  4048d5:	push   ss
  4048d6:	push   0x57
  4048d8:	fs sub eax,0x8c514319
  4048de:	mov    cs,WORD PTR [ebp-0x7e]
  4048e1:	sbb    cl,dl
  4048e3:	loopne 0x404878
  4048e5:	icebp  
  4048e6:	out    0x91,eax
  4048e8:	cmp    eax,0x49cbbe38
  4048ed:	sbb    DWORD PTR [esi],edi
  4048ef:	cmovle eax,DWORD PTR [eax-0x6021895]
  4048f6:	daa    
  4048f7:	push   esi
  4048f8:	pop    es
  4048f9:	jae    0x4048eb
  4048fb:	push   0x32
  4048fd:	aas    
  4048fe:	fadd   QWORD PTR [edx-0x2803f707]
  404904:	mov    ebp,0xc50d74a2
  404909:	sar    DWORD PTR [edx+0x4a700024],cl
  40490f:	inc    esi
  404910:	adc    BYTE PTR [ecx+0x51],dl
  404913:	ins    BYTE PTR es:[edi],dx
  404914:	adc    eax,DWORD PTR [ebx+eax*4]
  404917:	into   
  404918:	jne    0x4048e2
  40491a:	mov    dh,0x49
  40491c:	sub    dl,0x30
  40491f:	pusha  
  404920:	or     DWORD PTR [edi+0x5f],esi
  404923:	dec    eax
  404924:	sbb    eax,0xb4d2e8cf
  404929:	adc    al,0x49
  40492b:	mov    eax,ds:0xbdba5316
  404930:	ins    DWORD PTR es:[edi],dx
  404931:	sbb    eax,0x45f16e07
  404936:	aaa    
  404937:	test   ah,al
  404939:	(bad)  
  40493b:	popa   
  40493c:	sbb    cl,BYTE PTR [ebx-0x32]
  40493f:	mov    esi,0x15d36600
  404944:	aaa    
  404945:	call   0xaadc9f0f
  40494a:	mov    ch,0x19
  40494c:	inc    edi
  40494d:	inc    ebp
  40494e:	mov    esp,0xe1fe1456
  404953:	cmp    al,0xea
  404955:	fcom   st(0)
  404957:	call   0x4278:0xfe07e00a
  40495e:	call   0x18c3bf5e
  404963:	mov    esi,0x194fcbbf
  404968:	jecxz  0x404937
  40496a:	out    dx,eax
  40496b:	xchg   ebx,eax
  40496c:	push   es
  40496d:	jg     0x404919
  40496f:	aas    
  404970:	mov    eax,0x9c56c1ad
  404975:	mov    BYTE PTR [ebp+0x73],dh
  404978:	jae    0x4049e5
  40497a:	cmc    
  40497b:	sub    eax,0x7d2a7ed9
  404980:	inc    ecx
  404981:	cmp    eax,0x8226d17e
  404986:	mov    esp,0xce2dcd54
  40498b:	jecxz  0x40490d
  40498d:	test   edi,esp
  40498f:	pop    ebp
  404990:	unpckhps xmm7,xmm6
  404993:	popf   
  404994:	jmp    0x40495c
  404996:	les    ecx,FWORD PTR [edi+0x1b38a149]
  40499c:	cwde   
  40499d:	cmp    eax,0x5193e4a4
  4049a2:	push   0x60630f17
  4049a7:	lds    edi,FWORD PTR [esi-0x65]
  4049aa:	inc    edi
  4049ab:	imul   BYTE PTR [edx]
  4049ad:	lock xchg ebp,eax
  4049af:	cmp    bh,ah
  4049b1:	or     ecx,DWORD PTR [ebx-0x53]
  4049b4:	xor    eax,0x966c62cd
  4049b9:	xchg   BYTE PTR [eax],dl
  4049bb:	or     eax,0x133db519
  4049c0:	sbb    dl,BYTE PTR [ebx+0x60eefbed]
  4049c6:	bound  ebx,QWORD PTR [ecx+0x2e]
  4049c9:	ds push esp
  4049cb:	inc    ebp
  4049cc:	adc    DWORD PTR [ebp-0x2e548df1],0x63b070ea
  4049d6:	push   esp
  4049d7:	pop    esi
  4049d8:	jno    0x4049b6
  4049da:	inc    ebp
  4049db:	adc    dh,BYTE PTR [edx-0x22d88a0b]
  4049e1:	mov    eax,ds:0x32d37fea
  4049e6:	fisttp QWORD PTR [esi]
  4049e8:	clc    
  4049e9:	inc    eax
  4049ea:	inc    esi
  4049eb:	adc    edi,esp
  4049ed:	(bad)  
  4049ee:	fcomp  QWORD PTR [esi+0x22]
  4049f1:	movups xmm4,xmm0
  4049f4:	pop    ss
  4049f5:	leave  
  4049f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f7:	mov    dh,al
  4049f9:	into   
  4049fa:	das    
  4049fb:	jmp    0x8a92:0x5929cc1
  404a02:	cmp    bh,BYTE PTR [esi-0x1878c76e]
  404a08:	pop    esi
  404a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a0a:	mov    ch,0xe4
  404a0c:	sub    DWORD PTR [edi+0x50ceb74a],eax
  404a12:	shr    DWORD PTR [edx+edi*2-0x28],1
  404a16:	cld    
  404a17:	ds jmp 0x404a6f
  404a1a:	fisttp DWORD PTR [edi-0x67172101]
  404a20:	mov    es,WORD PTR [eax+ecx*2-0x77]
  404a24:	pop    edx
  404a25:	cmc    
  404a26:	sbb    eax,0x65aa15f2
  404a2b:	fldenv [ebx-0x61]
  404a2e:	outs   dx,DWORD PTR ds:[esi]
  404a2f:	pop    eax
  404a30:	add    BYTE PTR [ebx+0x51],al
  404a33:	dec    edi
  404a34:	inc    ebx
  404a35:	mov    bh,BYTE PTR [eax+eax*2]
  404a38:	xchg   BYTE PTR [edi-0x80],bl
  404a3b:	(bad)  
  404a3c:	pop    ss
  404a3d:	cdq    
  404a3e:	icebp  
  404a3f:	sahf   
  404a40:	out    0xaa,eax
  404a42:	in     al,dx
  404a43:	in     eax,0x50
  404a45:	push   0x2056ad51
  404a4a:	call   0x7efd166
  404a4f:	nop
  404a50:	fld    DWORD PTR [eiz*1-0x10098d18]
  404a57:	mov    ds:0x37da07d6,eax
  404a5c:	mov    ecx,es
  404a5e:	and    eax,0xc294152a
  404a63:	hlt    
  404a64:	push   cs
  404a65:	cmp    al,0xe3
  404a67:	mulps  xmm5,XMMWORD PTR [ebx+0x1e94970f]
  404a6e:	sbb    DWORD PTR [ebp-0x9a2a911],eax
  404a74:	xlat   BYTE PTR ds:[ebx]
  404a75:	sub    DWORD PTR [edi+0x759ebcf2],ebx
  404a7b:	xchg   DWORD PTR [ebx-0x38],ebx
  404a7e:	dec    ecx
  404a7f:	sti    
  404a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a81:	sub    ebx,DWORD PTR [ecx]
  404a83:	adc    ah,bh
  404a85:	jge    0x404acb
  404a87:	clc    
  404a88:	jge    0x404a31
  404a8a:	mov    bh,0xd1
  404a8c:	popa   
  404a8d:	push   eax
  404a8e:	addr16 add ebp,edi
  404a91:	fs jmp 0x404ab8
  404a94:	inc    edx
  404a95:	push   es
  404a96:	inc    edx
  404a97:	or     DWORD PTR [eax-0x19],ebx
  404a9a:	das    
  404a9b:	fs push ds
  404a9d:	xchg   BYTE PTR [esi-0x5cb2e5e0],dl
  404aa3:	and    BYTE PTR [ebp+0x6c9fb7a],0xd0
  404aaa:	mov    ch,0xe3
  404aac:	jl     0x404b07
  404aae:	adc    al,ah
  404ab0:	push   esi
  404ab1:	xchg   edx,eax
  404ab2:	pop    esi
  404ab3:	jmp    0xcab6:0x6f9705ce
  404aba:	sub    al,0x63
  404abc:	test   al,0xb3
  404abe:	push   edi
  404abf:	loop   0x404a9e
  404ac1:	test   eax,0x50840718
  404ac6:	jno    0x404ad9
  404ac8:	jbe    0x404a4c
  404aca:	cmp    esi,DWORD PTR [ecx]
  404acc:	jbe    0x404b18
  404ace:	sar    DWORD PTR [edi+0x63],1
  404ad1:	adc    dl,ch
  404ad3:	mov    edx,0x278dd062
  404ad8:	xor    al,0xf7
  404ada:	or     ch,BYTE PTR [ecx+0x18da121f]
  404ae0:	(bad)  
  404ae1:	arpl   WORD PTR [edi],bx
  404ae3:	and    al,0x53
  404ae5:	aad    0xa8
  404ae7:	icebp  
  404ae8:	sbb    eax,0x9ea20ee8
  404aed:	jns    0x404ae3
  404aef:	jno    0x404b48
  404af1:	sub    DWORD PTR [eax],esi
  404af3:	jne    0x404ac5
  404af5:	cmp    ecx,esp
  404af7:	out    0xe0,al
  404af9:	div    BYTE PTR [eax+0x47]
  404afc:	outs   dx,DWORD PTR ds:[esi]
  404afd:	xchg   BYTE PTR [edi],dl
  404aff:	imul   ecx,DWORD PTR [ebx],0x1c
  404b02:	cdq    
  404b03:	cmp    DWORD PTR [edi+0x34],eax
  404b06:	sar    DWORD PTR [ebp+0x7a],1
  404b09:	xchg   DWORD PTR [esi-0x3e],edx
  404b0c:	adc    DWORD PTR [ecx+0x6a4a47e2],edx
  404b12:	in     eax,0x21
  404b14:	lds    eax,FWORD PTR [ecx-0x43]
  404b17:	jl     0x404ae8
  404b19:	retf   
  404b1a:	lds    ebx,FWORD PTR [eax+eiz*2+0x18]
  404b1e:	jmp    DWORD PTR [ebx]
  404b20:	iret   
  404b21:	mov    bl,0xf6
  404b23:	stos   DWORD PTR es:[edi],eax
  404b24:	adc    esp,DWORD PTR [esi-0x78]
  404b27:	jno    0x404b17
  404b29:	mov    bh,0x62
  404b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b2c:	or     edx,DWORD PTR [eax-0x5d]
  404b2f:	pop    ecx
  404b30:	out    0x9a,eax
  404b32:	jae    0x404b9a
  404b34:	inc    edx
  404b35:	mov    ds:0x75083821,eax
  404b3a:	sbb    BYTE PTR [eax-0x1e],0x37
  404b3e:	xlat   BYTE PTR ds:[ebx]
  404b3f:	fsincos 
  404b41:	clc    
  404b42:	xlat   BYTE PTR ds:[ebx]
  404b43:	mov    dh,ch
  404b45:	test   eax,0x3b93825
  404b4a:	mov    DWORD PTR [ecx+0x2ef9173f],ecx
  404b50:	or     al,0xb9
  404b52:	std    
  404b53:	jb     0x404ae3
  404b55:	std    
  404b56:	sub    al,0xf4
  404b58:	push   ebp
  404b59:	loopne 0x404b7f
  404b5b:	cmp    bl,cl
  404b5d:	xchg   ecx,eax
  404b5e:	cs push edi
  404b60:	dec    ecx
  404b61:	and    cl,BYTE PTR [edx+0xe]
  404b64:	bound  ebp,QWORD PTR [edx+0x12]
  404b67:	call   DWORD PTR [ebp+0x2b]
  404b6a:	sbb    eax,0xb5265bed
  404b6f:	xchg   ecx,eax
  404b70:	rcr    esi,1
  404b72:	adc    ah,BYTE PTR [ebp+0x79]
  404b75:	loop   0x404b18
  404b77:	pop    ebx
  404b78:	xchg   BYTE PTR [esi-0x4cd74ce6],dl
  404b7e:	jmp    0x404b8a
  404b80:	add    eax,0xdb817eb3
  404b85:	neg    ebx
  404b87:	inc    edi
  404b88:	or     bh,BYTE PTR [ebp+0x4096e538]
  404b8e:	xchg   ebp,eax
  404b8f:	dec    edi
  404b90:	imul   ecx,DWORD PTR [esi-0xdbdc20e],0xdb4a2ce3
  404b9a:	loope  0x404bcc
  404b9c:	add    ah,ah
  404b9e:	(bad)  
  404b9f:	sbb    DWORD PTR [ebx+0x28356c3e],ebx
  404ba5:	pop    ss
  404ba6:	mov    ds:0x8f1f66,eax
  404bab:	lods   eax,DWORD PTR ds:[esi]
  404bac:	out    0x60,eax
  404bae:	lds    ecx,FWORD PTR [ebp-0x6c]
  404bb1:	call   0x8bafe2fe
  404bb6:	call   0xf229ba37
  404bbb:	dec    edx
  404bbc:	nop    DWORD PTR ds:0xedc33c12
  404bc3:	add    eax,0x5bb949cb
  404bc8:	stc    
  404bc9:	sub    DWORD PTR [edx+0x7515ba88],0x261ed5e1
  404bd3:	dec    ebp
  404bd4:	pop    eax
  404bd5:	pop    ss
  404bd6:	mov    DWORD PTR [ebp+0x16],esp
  404bd9:	packuswb mm1,QWORD PTR [edx+0x4c08b43b]
  404be0:	and    BYTE PTR [esi+ecx*2-0x112a6da],dl
  404be7:	dec    ecx
  404be8:	add    ch,BYTE PTR [eax]
  404bea:	xchg   ebp,eax
  404beb:	arpl   WORD PTR [edi-0x6df66b99],bx
  404bf1:	inc    ebp
  404bf2:	ss push ss
  404bf4:	pop    esi
  404bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bf6:	jmp    0x3208:0x1f40773
  404bfd:	and    dh,BYTE PTR [eax-0x47]
  404c00:	arpl   WORD PTR [edx+0x37],cx
  404c03:	outs   dx,BYTE PTR ds:[esi]
  404c04:	cmc    
  404c05:	jae    0x404c4a
  404c07:	das    
  404c08:	in     eax,0x88
  404c0a:	lahf   
  404c0b:	fistp  QWORD PTR [eax]
  404c0d:	pusha  
  404c0e:	inc    esp
  404c0f:	inc    ebp
  404c10:	in     al,dx
  404c11:	cmp    DWORD PTR ds:0x4224c7ac,edx
  404c17:	push   ss
  404c18:	mov    bl,0x8e
  404c1a:	jno    0x404c42
  404c1c:	loope  0x404c96
  404c1e:	or     BYTE PTR [esi+0x4ccfb13c],ah
  404c24:	push   esi
  404c25:	xlat   BYTE PTR ds:[ebx]
  404c26:	test   eax,0x9ef60542
  404c2b:	sbb    al,ah
  404c2d:	push   DWORD PTR [eax-0x435d8591]
  404c33:	mov    edx,DWORD PTR [esi+0x75679c7d]
  404c39:	xor    eax,0x417a9c2
  404c3e:	loopne 0x404caa
  404c40:	test   al,0xdb
  404c42:	sti    
  404c43:	fcomp  DWORD PTR [edi+0x1d887be2]
  404c49:	fistp  DWORD PTR cs:[edx+edi*2]
  404c4d:	sbb    eax,DWORD PTR [edx-0x68f22102]
  404c53:	sti    
  404c54:	xchg   ebx,eax
  404c55:	les    esi,FWORD PTR [edx+eax*2+0x19]
  404c59:	test   DWORD PTR [esi+edi*2-0x15992eea],ebx
  404c60:	sub    al,BYTE PTR [ebx]
  404c62:	cmp    bh,dh
  404c64:	cwde   
  404c65:	mov    cl,0xfe
  404c67:	adc    eax,0xa1e4e7f
  404c6c:	push   0x1e
  404c6e:	inc    esp
  404c6f:	inc    edx
  404c70:	push   0x33
  404c72:	jle    0x404c1e
  404c74:	(bad)  
  404c75:	std    
  404c76:	cmp    al,0xc7
  404c78:	sbb    esp,DWORD PTR [ebp+0x45]
  404c7b:	stc    
  404c7c:	int3   
  404c7d:	ficom  WORD PTR [edi+0x45]
  404c80:	lock ror BYTE PTR [edi+ecx*8],cl
  404c84:	(bad)  
  404c85:	(bad)  
  404c86:	lahf   
  404c87:	in     al,dx
  404c88:	imul   ebx,DWORD PTR [esi+0x72],0xffffff99
  404c8c:	xchg   DWORD PTR [esp+ebx*4+0x16],ebx
  404c90:	push   ebp
  404c91:	rcl    BYTE PTR [eax-0xcbfb929],1
  404c97:	and    al,0x7
  404c99:	mov    ah,0x69
  404c9b:	mov    ds:0xd240637,eax
  404ca0:	into   
  404ca1:	mov    esp,0xf8dc97bf
  404ca6:	sbb    ebx,esi
  404ca8:	out    0xeb,eax
  404caa:	loopne 0x404c34
  404cac:	mov    ah,0xe6
  404cae:	and    BYTE PTR fs:[ebx-0x34],ah
  404cb2:	jno    0x404c72
  404cb4:	repnz add edi,edi
  404cb7:	test   DWORD PTR [edi],edi
  404cb9:	push   ecx
  404cba:	add    eax,edx
  404cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cbd:	icebp  
  404cbe:	xchg   esp,eax
  404cbf:	pop    esp
  404cc0:	jg     0x404c7e
  404cc2:	pop    ebp
  404cc3:	sbb    BYTE PTR [eax+0x25b35017],bh
  404cc9:	adc    ebx,esp
  404ccb:	sbb    eax,0x22f82706
  404cd0:	sbb    DWORD PTR [ebp+0x10],ebx
  404cd3:	fld    TBYTE PTR [ebx]
  404cd5:	jl     0x404d00
  404cd7:	retf   0x2f0e
  404cda:	out    0x97,al
  404cdc:	push   0x5990d4d4
  404ce1:	mov    ?,edx
  404ce3:	add    al,0xe
  404ce5:	xor    BYTE PTR [esi+0x1d7a50a8],dl
  404ceb:	aas    
  404cec:	fisub  DWORD PTR [esi-0x11]
  404cef:	inc    edx
  404cf0:	xor    al,0x72
  404cf2:	out    dx,al
  404cf3:	out    dx,al
  404cf4:	mov    ds,WORD PTR [edx+0x1966efb0]
  404cfa:	push   es
  404cfb:	setno  BYTE PTR ds:0xc65d25e5
  404d02:	and    BYTE PTR [edi+0x72],dh
  404d05:	mov    edi,0x235db6c7
  404d0a:	mov    ds:0xf581cb52,eax
  404d0f:	jg     0x404d4a
  404d11:	loopne 0x404d0d
  404d13:	mov    bl,0x96
  404d15:	fbld   TBYTE PTR [edi]
  404d17:	cmp    edx,DWORD PTR [edi]
  404d19:	ins    DWORD PTR es:[edi],dx
  404d1a:	and    ebx,edx
  404d1c:	jmp    0xc3ee:0x31fad24f
  404d23:	je     0x404cac
  404d25:	mov    al,0xe2
  404d27:	sahf   
  404d28:	cmp    bh,BYTE PTR [ecx]
  404d2a:	popa   
  404d2b:	outs   dx,BYTE PTR ds:[esi]
  404d2c:	jo     0x404cd3
  404d2e:	pop    eax
  404d2f:	(bad)  
  404d30:	fsubr  QWORD PTR [eax-0x1311cb55]
  404d36:	icebp  
  404d37:	ds jne 0x404d42
  404d3a:	jp     0x404d83
  404d3c:	xor    al,0x8a
  404d3e:	add    al,0x63
  404d40:	and    BYTE PTR ds:0x3930b0fc,bl
  404d46:	push   ebx
  404d47:	mov    WORD PTR [edi-0x673a0ac0],?
  404d4d:	push   cs
  404d4e:	cli    
  404d4f:	mov    cl,0x9e
  404d51:	jl     0x404cdf
  404d53:	rol    eax,cl
  404d55:	inc    ebp
  404d56:	call   0x4cf5:0xefc00d11
  404d5d:	(bad)  
  404d5e:	mov    ecx,0xeaba7d78
  404d63:	mov    esi,0xa134d794
  404d68:	loop   0x404cfc
  404d6a:	mov    ebp,0xdc1b0184
  404d6f:	ins    DWORD PTR es:[edi],dx
  404d70:	mov    dl,0x15
  404d72:	repz dec edx
  404d74:	loopne 0x404d91
  404d76:	pop    ecx
  404d77:	jmp    0x7b062625
  404d7c:	retf   
  404d7d:	mov    cl,ch
  404d7f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d81:	mov    al,ds:0x4b6f7cd7
  404d86:	xchg   DWORD PTR [edi],ebp
  404d88:	fld    DWORD PTR [ebx]
  404d8a:	inc    edi
  404d8b:	lock out 0xfe,al
  404d8e:	pop    esp
  404d8f:	or     ebp,DWORD PTR [ebx]
  404d91:	hlt    
  404d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d93:	mov    ch,0x8
  404d95:	and    esp,DWORD PTR [edi]
  404d97:	les    esp,FWORD PTR [esi+eax*4]
  404d9a:	mov    bh,0xdd
  404d9c:	ror    DWORD PTR [eax+eiz*1+0x6deec353],1
  404da3:	and    ch,cl
  404da5:	mov    ds:0x714a035f,eax
  404daa:	pop    ebx
  404dab:	jns    0x404dd1
  404dad:	push   edi
  404dae:	sub    eax,0xc0a56d02
  404db3:	imul   eax,DWORD PTR [ebx],0xffffffc5
  404db6:	int3   
  404db7:	sahf   
  404db8:	cmc    
  404db9:	mov    edi,0x35b9f99c
  404dbe:	or     DWORD PTR [edx+0x5df90a9],ecx
  404dc4:	mov    ah,0xe4
  404dc6:	aam    0x1e
  404dc8:	adc    edx,DWORD PTR [ebp+0x6610e111]
  404dce:	clc    
  404dcf:	(bad)  
  404dd0:	fnstsw WORD PTR [eax]
  404dd2:	mov    esp,0x5635380
  404dd7:	into   
  404dd8:	cmp    eax,0xc31e1b74
  404ddd:	mov    bl,BYTE PTR [edx-0x38]
  404de0:	sbb    al,0xf9
  404de2:	mov    ds:0x607a791c,eax
  404de7:	inc    ecx
  404de8:	xor    bh,BYTE PTR [eax]
  404dea:	(bad)  
  404dec:	test   DWORD PTR [ebx],ecx
  404dee:	sub    al,cl
  404df0:	sub    BYTE PTR [ecx+0x20],ch
  404df3:	push   es
  404df4:	mov    ecx,0x5fc35973
  404df9:	dec    ebx
  404dfa:	in     eax,dx
  404dfb:	(bad)  
  404dfc:	mov    cl,0x7d
  404dfe:	frstor [esi+ecx*8+0x50c168d5]
  404e05:	test   DWORD PTR [esi+0x73],ecx
  404e08:	push   edx
  404e09:	pop    esp
  404e0a:	sub    esp,DWORD PTR ds:0x694f003b
  404e10:	push   0x78
  404e12:	sub    dl,bh
  404e14:	outs   dx,DWORD PTR ds:[esi]
  404e15:	pop    edx
  404e16:	fnstcw WORD PTR ds:0x1913fbf6
  404e1c:	lods   eax,DWORD PTR ds:[esi]
  404e1d:	mov    eax,DWORD PTR [ecx+0x2e074645]
  404e23:	jecxz  0x404dec
  404e25:	fwait
  404e26:	ror    DWORD PTR [edi],1
  404e28:	mov    edx,0xd3204a03
  404e2d:	cld    
  404e2e:	mov    edx,ds
  404e30:	sbb    DWORD PTR [edi+0x34c7ae54],esp
  404e36:	test   al,0xd0
  404e38:	aas    
  404e39:	add    edi,0x53658588
  404e3f:	fadd   st,st(4)
  404e41:	popf   
  404e42:	mov    al,ds:0xfa1a5daf
  404e47:	inc    ecx
  404e48:	add    al,BYTE PTR [ebx]
  404e4a:	les    ebx,FWORD PTR [ecx]
  404e4c:	mov    ds:0x1d376578,al
  404e51:	jp     0x404de8
  404e53:	push   esi
  404e54:	push   ss
  404e55:	push   eax
  404e56:	int3   
  404e57:	lahf   
  404e58:	fimul  DWORD PTR [esi+0x78]
  404e5b:	cld    
  404e5c:	push   ss
  404e5d:	cdq    
  404e5e:	xchg   esi,eax
  404e5f:	inc    ebp
  404e60:	jl     0x404e67
  404e62:	push   ss
  404e63:	ins    DWORD PTR es:[edi],dx
  404e64:	data16 fistp QWORD PTR [eax-0x1378b23c]
  404e6b:	mov    cl,0xcb
  404e6d:	add    dh,bl
  404e6f:	cmc    
  404e70:	push   edi
  404e71:	push   0x3af3583b
  404e76:	adc    al,0x5
  404e78:	or     edi,edx
  404e7a:	and    dh,BYTE PTR [ecx+0x3f]
  404e7d:	jne    0x404e1e
  404e7f:	mov    BYTE PTR [esp+eiz*8],0x6e
  404e83:	push   eax
  404e84:	retfw  
  404e86:	out    dx,al
  404e87:	cmp    DWORD PTR [ebx],0x4ab34383
  404e8d:	and    al,0xbf
  404e8f:	arpl   WORD PTR [esp+edx*1+0x20],cx
  404e93:	mov    edi,DWORD PTR [ecx+0x778d5eef]
  404e99:	scas   al,BYTE PTR es:[edi]
  404e9a:	retf   
  404e9b:	mov    bl,0xab
  404e9d:	mov    edx,0x739eab1
  404ea2:	shl    DWORD PTR [ecx],cl
  404ea4:	dec    esp
  404ea5:	inc    bp
  404ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ea8:	or     esi,DWORD PTR [ecx]
  404eaa:	mov    ch,0x73
  404eac:	cmp    al,0x3f
  404eae:	xor    al,0xe4
  404eb0:	arpl   WORD PTR [edx],bx
  404eb2:	arpl   WORD PTR [eax+edx*1-0x647cb007],si
  404eb9:	ret    
  404eba:	retf   0x3992
  404ebd:	adc    BYTE PTR [edx+0x725fb8dd],bh
  404ec3:	retf   0x2273
  404ec6:	imul   eax,DWORD PTR [edx-0x28],0x7f783fc1
  404ecd:	stos   DWORD PTR es:[edi],eax
  404ece:	and    al,0x6
  404ed0:	jno    0x404ed8
  404ed2:	inc    edi
  404ed3:	fild   DWORD PTR [edi]
  404ed5:	int    0xe3
  404ed7:	inc    ecx
  404ed8:	sub    al,0x33
  404eda:	icebp  
  404edb:	mov    ch,0x33
  404edd:	push   edi
  404ede:	mov    ch,0x10
  404ee0:	inc    ebx
  404ee1:	or     BYTE PTR [esi-0x61c788ff],bh
  404ee7:	in     eax,dx
  404ee8:	pop    edx
  404ee9:	arpl   di,cx
  404eeb:	mov    bh,0x1a
  404eed:	loope  0x404f46
  404eef:	icebp  
  404ef0:	jmp    0x404f40
  404ef2:	cli    
  404ef3:	xor    DWORD PTR [esi],esp
  404ef5:	fisttp DWORD PTR [esi]
  404ef7:	or     al,0x66
  404ef9:	ins    BYTE PTR es:[edi],dx
  404efa:	mov    bl,dh
  404efc:	sbb    eax,0xea44977e
  404f01:	scas   al,BYTE PTR es:[edi]
  404f02:	push   DWORD PTR [esi-0x5d7fd889]
  404f08:	inc    eax
  404f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f0a:	imul   esi,DWORD PTR [edi+edi*1+0x38],0x9b1e1e46
  404f12:	repnz fbld TBYTE PTR [eax+ebx*2-0x1b]
  404f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f18:	xchg   al,cl
  404f1a:	(bad)  
  404f1b:	pusha  
  404f1c:	imul   edx,DWORD PTR [eax+0x4bf1152e],0x1e
  404f23:	out    0x86,al
  404f25:	push   eax
  404f26:	xor    DWORD PTR [esi],esp
  404f28:	add    dl,BYTE PTR [eax]
  404f2a:	test   edx,eax
  404f2c:	jae    0x404f35
  404f2e:	inc    ecx
  404f2f:	mov    al,ds:0x2110d336
  404f34:	out    0x58,al
  404f36:	pop    es
  404f37:	xchg   esi,eax
  404f38:	fmul   QWORD PTR [eax-0x41]
  404f3b:	add    cl,dh
  404f3d:	repnz push 0xffffffb0
  404f40:	inc    ebp
  404f41:	and    bl,BYTE PTR ds:0x69cf671d
  404f47:	loop   0x404f12
  404f49:	mov    ah,0xd4
  404f4b:	int3   
  404f4c:	push   ss
  404f4d:	xor    esp,DWORD PTR [ecx+ebp*4]
  404f50:	push   ebp
  404f51:	and    al,0xe9
  404f53:	xor    al,0x30
  404f55:	lods   eax,DWORD PTR fs:[esi]
  404f57:	add    ecx,ebx
  404f59:	scas   eax,DWORD PTR es:[edi]
  404f5a:	cmp    dl,BYTE PTR [ecx]
  404f5c:	inc    esi
  404f5d:	js     0x404f72
  404f5f:	mov    cl,0x8b
  404f61:	dec    edx
  404f62:	hlt    
  404f63:	push   edx
  404f64:	pop    ecx
  404f65:	mov    edx,DWORD PTR [ebp+0x51]
  404f68:	inc    ebp
  404f69:	out    dx,eax
  404f6a:	and    al,0x71
  404f6c:	cmp    eax,0x1e117188
  404f71:	js     0x404f8c
  404f73:	push   0x1ec290e0
  404f78:	push   edx
  404f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f7a:	jge    0x404f4e
  404f7c:	das    
  404f7d:	mov    dl,0x72
  404f7f:	xchg   ebx,eax
  404f80:	and    dl,BYTE PTR [ebx]
  404f82:	jl     0x404f65
  404f84:	mov    ebx,0xaa875982
  404f89:	push   edi
  404f8a:	pushf  
  404f8b:	out    dx,eax
  404f8c:	jmp    0xa6deb836
  404f91:	mov    ecx,ebx
  404f93:	xor    DWORD PTR [edi+0x59],0xb8757f3a
  404f9a:	out    dx,al
  404f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f9c:	pop    es
  404f9d:	mov    bl,0xbf
  404f9f:	nop
  404fa0:	cmp    DWORD PTR [eax],edx
  404fa2:	jne    0x404fb1
  404fa4:	stos   DWORD PTR es:[edi],eax
  404fa5:	mov    esi,esi
  404fa7:	icebp  
  404fa8:	mov    gs,WORD PTR [edi+0x73fb1c4f]
  404fae:	lock xor eax,0xfc9dabd3
  404fb4:	jl     0x404f58
  404fb6:	outs   dx,BYTE PTR ds:[esi]
  404fb7:	and    eax,0xd5e2eb46
  404fbc:	mov    WORD PTR [esi+0x39],fs
  404fbf:	dec    esp
  404fc0:	add    bl,BYTE PTR [eax]
  404fc2:	retf   
  404fc3:	stc    
  404fc4:	cld    
  404fc5:	cwde   
  404fc6:	jnp    0x404f95
  404fc8:	retf   
  404fc9:	jecxz  0x404f5c
  404fcb:	mov    ebp,0x9b76566
  404fd0:	sbb    BYTE PTR [edx],cl
  404fd2:	test   DWORD PTR [ebx+ebp*2-0x1c],edi
  404fd6:	pop    ebx
  404fd7:	xchg   esi,eax
  404fd8:	and    BYTE PTR [esi+0xd],dl
  404fdb:	enter  0x47c0,0x4d
  404fdf:	push   0xc7463dbd
  404fe4:	lea    edx,[esi]
  404fe6:	cmp    ch,BYTE PTR [edx]
  404fe8:	stc    
  404fe9:	sub    ch,bl
  404feb:	jecxz  0x405043
  404fed:	xor    eax,eax
  404fef:	jo     0x404f9c
  404ff1:	dec    bh
  404ff3:	and    al,0xb9
  404ff5:	loope  0x405038
  404ff7:	xlat   BYTE PTR ds:[ebx]
  404ff8:	push   ebx
  404ff9:	ins    DWORD PTR es:[edi],dx
  404ffa:	pop    es
  404ffb:	inc    edx
  404ffc:	neg    esi
  404ffe:	pop    eax
  404fff:	into   
  405000:	pop    edx
  405001:	arpl   WORD PTR [ebx+0x2b710f4e],di
  405007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405008:	and    DWORD PTR [ebx-0x7078caaf],0x47
  40500f:	daa    
  405010:	mov    al,0x9a
  405012:	pop    ebx
  405013:	mov    al,0xe9
  405015:	out    0x76,eax
  405017:	sahf   
  405018:	cld    
  405019:	aaa    
  40501a:	or     esp,DWORD PTR [ecx-0x37063045]
  405020:	mov    eax,ds:0x29a86f65
  405025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405026:	or     al,0x9b
  405028:	daa    
  405029:	pop    esp
  40502a:	cmp    ebp,DWORD PTR [ecx+0x75]
  40502d:	in     al,0xd1
  40502f:	sbb    edi,edx
  405031:	mov    ds:0xf99175d5,eax
  405036:	xor    al,0x64
  405038:	ins    BYTE PTR es:[edi],dx
  405039:	cmp    ecx,eax
  40503b:	je     0x40528b
  405041:	add    DWORD PTR ds:0x42b018,0x42c008
  40504b:	push   DWORD PTR [ebp-0x14]
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	popf   
  405660:	inc    edx
  405661:	test   dl,ah
  405663:	xor    BYTE PTR [edi+0x7a],bl
  405666:	jp     0x40564d
  405668:	pop    edi
  405669:	jp     0x4056e5
  40566b:	cld    
  40566c:	add    eax,0xe7e9b0cf
  405671:	test   ebx,ecx
  405673:	ins    BYTE PTR es:[edi],dx
  405674:	loopne 0x405657
  405676:	mov    ebp,?
  405678:	hlt    
  405679:	out    0x69,al
  40567b:	cmp    DWORD PTR [ebx+edx*4+0x4b],ecx
  40567f:	inc    edx
  405680:	inc    ecx
  405681:	outs   dx,BYTE PTR ds:[esi]
  405682:	xchg   esi,eax
  405683:	fninit 
  405685:	lock xchg esi,eax
  405687:	cld    
  405688:	stos   DWORD PTR es:[edi],eax
  405689:	enter  0x3c76,0x76
  40568d:	fld    TBYTE PTR [esi-0x51574eee]
  405693:	inc    ebx
  405694:	xor    al,0xa1
  405696:	scas   al,BYTE PTR es:[edi]
  405697:	ret    
  405698:	retf   0xba6f
  40569b:	outs   dx,BYTE PTR ds:[esi]
  40569c:	out    dx,eax
  40569d:	dec    eax
  40569e:	xchg   esp,eax
  40569f:	add    ah,ch
  4056a1:	adc    esi,eax
  4056a3:	adc    DWORD PTR [edx-0x1e],esi
  4056a6:	dec    ebx
  4056a7:	lods   al,BYTE PTR ds:[esi]
  4056a8:	cmp    esp,DWORD PTR [ecx+0x60]
  4056ab:	mov    esi,0xce7d3d12
  4056b0:	int    0x31
  4056b2:	and    eax,0x10470602
  4056b7:	hlt    
  4056b8:	daa    
  4056b9:	mov    dl,0x25
  4056bb:	xor    DWORD PTR [eax+0x5a],0xb1c37d5e
  4056c2:	into   
  4056c3:	jmp    0x64136066
  4056c8:	stos   DWORD PTR es:[edi],eax
  4056c9:	mov    eax,DWORD PTR [ebp-0x3741fe27]
  4056cf:	sbb    ch,BYTE PTR [edx+0x7eed3340]
  4056d5:	jl     0x4056ef
  4056d7:	push   edx
  4056d8:	inc    esp
  4056d9:	pusha  
  4056da:	fs in  al,0xf7
  4056dd:	push   ebx
  4056de:	jg     0x405683
  4056e0:	imul   ecx,DWORD PTR [edi-0x182c316e],0x54
  4056e7:	ds into 
  4056e9:	jb     0x40572f
  4056eb:	das    
  4056ec:	(bad)  
  4056ed:	push   edi
  4056ee:	adc    edi,DWORD PTR [edx+0x50d171aa]
  4056f4:	push   ecx
  4056f5:	add    ecx,esi
  4056f7:	cs push ds
  4056f9:	jge    0x4056be
  4056fb:	adc    BYTE PTR [edx+0x1d],bh
  4056fe:	xchg   edi,eax
  4056ff:	aad    0x13
  405701:	push   esp
  405702:	and    al,0x4c
  405704:	(bad)  
  405705:	js     0x405691
  405707:	mov    edi,0xf0bcaaa
  40570c:	test   edx,0x6acb3f52
  405712:	mov    ecx,0xcf446ec8
  405717:	leave  
  405718:	xor    edx,DWORD PTR ds:0x9d7d2d5e
  40571e:	fcomp  QWORD PTR [ebx]
  405720:	inc    ecx
  405721:	mov    edi,0xd957fe83
  405726:	jge    0x4056d2
  405728:	out    0xe3,al
  40572a:	scas   eax,DWORD PTR es:[edi]
  40572b:	scas   eax,DWORD PTR es:[edi]
  40572c:	ds add eax,0xd6ba5579
  405732:	push   ecx
  405733:	dec    edx
  405734:	mov    al,ds:0x2fb5e8c
  405739:	mov    al,ds:0x9acf7e57
  40573e:	fldcw  WORD PTR ds:0xd3ca2c67
  405744:	out    0x93,al
  405746:	neg    BYTE PTR [edx]
  405748:	sbb    esi,DWORD PTR [edx]
  40574a:	sahf   
  40574b:	pop    ebp
  40574c:	into   
  40574d:	lods   eax,DWORD PTR ds:[esi]
  40574e:	(bad)  
  405750:	pop    edi
  405751:	xor    ah,bl
  405753:	(bad)  
  405754:	push   esp
  405755:	xor    BYTE PTR [ebx-0x3931ebe6],ah
  40575b:	aas    
  40575c:	cwde   
  40575d:	sub    esi,DWORD PTR [edi+ebp*8-0x55]
  405761:	mov    ebx,0xc0fd93f8
  405766:	int3   
  405767:	stos   DWORD PTR es:[edi],eax
  405768:	fcomp  DWORD PTR [ebx-0x752f879b]
  40576e:	ds push ebp
  405770:	jg     0xbfdd7239
  405776:	mov    ebx,DWORD PTR [esi+0x618603dd]
  40577c:	repz pop ss
  40577e:	retf   0xf8c3
  405781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405782:	and    edx,ebx
  405784:	push   ebx
  405785:	scas   eax,DWORD PTR es:[edi]
  405786:	xor    BYTE PTR [edi-0x13],bh
  405789:	pop    edx
  40578a:	sbb    al,BYTE PTR gs:[edx+0x30]
  40578e:	fsub   DWORD PTR [eiz*8-0x515b9163]
  405795:	(bad)  
  405796:	mov    ch,0xf6
  405798:	mov    al,0x75
  40579a:	push   ebp
  40579b:	call   0xa67a7dcd
  4057a0:	and    dl,BYTE PTR [edi+ebp*8+0x3a]
  4057a4:	pop    eax
  4057a5:	jb     0x405825
  4057a7:	adc    ecx,DWORD PTR [edi]
  4057a9:	mov    ebx,0xd9abbda8
  4057ae:	or     ch,BYTE PTR [esp+ecx*2-0x79]
  4057b2:	scas   al,BYTE PTR es:[edi]
  4057b3:	dec    eax
  4057b4:	or     DWORD PTR ds:0x7603f179,edx
  4057ba:	or     edx,ecx
  4057bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057bd:	pop    edi
  4057be:	mov    esi,DWORD PTR [eax+0x70]
  4057c1:	out    0xf9,al
  4057c3:	jp     0x405808
  4057c5:	js     0x405828
  4057c7:	pop    ss
  4057c8:	dec    esp
  4057c9:	jmp    0x57db:0x652c91c8
  4057d0:	test   eax,0xce440c79
  4057d5:	(bad)  
  4057d7:	out    dx,eax
  4057d8:	jmp    0x405859
  4057da:	inc    edx
  4057db:	adc    al,0x54
  4057dd:	mov    ss,WORD PTR [ebp-0x2f]
  4057e0:	jle    0x40576a
  4057e2:	and    esi,DWORD PTR [bp+di-0x5c]
  4057e6:	cmp    eax,0xe4f16c27
  4057eb:	inc    ecx
  4057ec:	cmp    edx,DWORD PTR ss:[ecx-0x4]
  4057f0:	je     0x4057e2
  4057f2:	mov    eax,0x7d2e1329
  4057f7:	xchg   edx,eax
  4057f8:	sub    al,0x96
  4057fa:	scas   al,BYTE PTR es:[edi]
  4057fb:	add    BYTE PTR [edx+edx*2],ah
  4057fe:	cmp    edx,DWORD PTR [eax+0x14bc80bc]
  405804:	outs   dx,BYTE PTR ds:[esi]
  405805:	or     BYTE PTR [ecx-0x18e7cfc4],bh
  40580b:	or     DWORD PTR [edx],edx
  40580d:	cmp    ch,bh
  40580f:	sbb    eax,0x589b8eab
  405814:	leave  
  405815:	push   esp
  405816:	cli    
  405817:	add    eax,0x57ab472b
  40581c:	outs   dx,DWORD PTR ds:[esi]
  40581d:	xor    al,0x9e
  40581f:	sbb    DWORD PTR [ecx],eax
  405821:	sti    
  405822:	ret    
  405823:	ss xchg ecx,eax
  405825:	sub    al,0x34
  405827:	ret    
  405828:	xchg   esp,eax
  405829:	cld    
  40582a:	ss bound esp,QWORD PTR ss:[eax+0x1f8192b4]
  405832:	jne    0x405826
  405834:	xor    al,al
  405836:	cdq    
  405837:	jns    0x405878
  405839:	adc    eax,0x8249d121
  40583e:	fild   WORD PTR [esi+0x20f03d6e]
  405844:	pop    ebp
  405845:	(bad)  
  405846:	mov    ah,0x3e
  405848:	stos   DWORD PTR es:[edi],eax
  405849:	jge    0x40583f
  40584b:	shr    DWORD PTR [eax-0x56635b31],1
  405851:	cdq    
  405852:	je     0x40585b
  405854:	adc    ecx,ebp
  405856:	jns    0x4057eb
  405858:	int    0x5e
  40585a:	retf   0xba77
  40585d:	and    DWORD PTR [edi],edx
  40585f:	jbe    0x4058df
  405861:	mov    al,0x50
  405863:	jo     0x40586a
  405865:	(bad)
  405868:	fdivr  DWORD PTR [edx+0x17]
  40586b:	cmp    BYTE PTR [ebp+0x1a37663b],0x54
  405872:	test   BYTE PTR [ecx],0x8e
  405875:	call   0xa38b192
  40587a:	addr16 pop ebx
  40587c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40587d:	or     DWORD PTR [edx-0x14b5f12a],esp
  405883:	mov    ch,0x33
  405885:	mov    esi,0x17381aa7
  40588a:	push   eax
  40588b:	ds sbb eax,DWORD PTR ss:[esi]
  40588f:	not    bl
  405891:	inc    ebx
  405892:	mov    edx,0xd22e849e
  405897:	mov    ds:0xb73d1a9d,eax
  40589c:	and    eax,0xc21cc66c
  4058a1:	cmp    eax,0xa889e68e
  4058a6:	push   ebx
  4058a7:	es push ebx
  4058a9:	arpl   WORD PTR ds:0x2906c88,si
  4058af:	jne    0x4058b6
  4058b1:	imul   eax,DWORD PTR [ecx-0x12827577],0x93d0915b
  4058bb:	push   0x25
  4058bd:	mov    al,ds:0x45c43d7b
  4058c2:	add    DWORD PTR [eax-0x1958b1a3],esp
  4058c8:	and    eax,0xff5d1cb9
  4058cd:	ficom  DWORD PTR [edx+0x3f243e14]
  4058d3:	add    DWORD PTR [edx+0x27e276b0],esp
  4058d9:	aam    0xe0
  4058db:	mov    ah,0xbe
  4058dd:	and    al,0x37
  4058df:	test   DWORD PTR [edx+0x5405ed3a],ebx
  4058e5:	loopne 0x405949
  4058e7:	mov    bh,0xb7
  4058e9:	test   BYTE PTR [esp+ebp*8],bh
  4058ec:	add    DWORD PTR [ebp+0x43],esp
  4058ef:	stos   DWORD PTR es:[edi],eax
  4058f0:	shr    DWORD PTR [eax],0x7d
  4058f3:	(bad)  
  4058f4:	idiv   ch
  4058f6:	inc    esi
  4058f7:	add    al,0xd6
  4058f9:	int3   
  4058fa:	xchg   ecx,eax
  4058fb:	xor    BYTE PTR [esi-0x64],bh
  4058fe:	repnz aam 0x20
  405901:	leave  
  405902:	out    0x11,al
  405904:	xor    dh,BYTE PTR [edi-0x51]
  405907:	add    eax,0xf79d3647
  40590c:	inc    eax
  40590d:	jb     0x405905
  40590f:	je     0x405906
  405911:	mov    dh,0x5a
  405913:	gs and al,0x3b
  405916:	mov    ch,0x6e
  405918:	je     0x4058f8
  40591a:	dec    ebp
  40591b:	add    al,0x1e
  40591d:	dec    eax
  40591e:	icebp  
  40591f:	stc    
  405920:	dec    ebx
  405921:	aad    0x94
  405923:	jbe    0x405952
  405925:	jmp    0x583137b9
  40592a:	jb     0x4058e6
  40592c:	outs   dx,DWORD PTR ds:[esi]
  40592d:	in     eax,dx
  40592e:	push   esi
  40592f:	retf   
  405930:	repz fdivr st(1),st
  405933:	sub    BYTE PTR [ebp-0x3cb89de9],ah
  405939:	pop    edi
  40593a:	and    esi,DWORD PTR [edi-0x7d]
  40593d:	mov    ecx,0xc13cbff1
  405942:	enter  0x69f5,0x10
  405946:	mov    bl,0xe9
  405948:	dec    eax
  405949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40594a:	aad    0x50
  40594c:	adc    BYTE PTR [ecx-0x3ee4f567],bl
  405952:	and    bh,BYTE PTR [esi+0x144a563a]
  405958:	pop    ecx
  405959:	pop    edi
  40595a:	jne    0x4058f8
  40595c:	inc    edx
  40595d:	mov    ds:0x2be25acb,eax
  405962:	sub    eax,0x88b10c1
  405967:	test   eax,0xe8d11232
  40596c:	or     edi,edi
  40596e:	mov    cl,0xe1
  405970:	inc    edx
  405971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405972:	xchg   edi,eax
  405973:	icebp  
  405974:	lahf   
  405975:	addr16 stc 
  405977:	ret    0xe457
  40597a:	dec    ecx
  40597b:	pop    ebp
  40597c:	call   0xdb4c7f46
  405981:	repnz aad 0xc4
  405984:	cs push ds
  405986:	sbb    al,0x58
  405988:	inc    esp
  405989:	dec    ebp
  40598a:	push   es
  40598b:	mov    esp,0xe7ca5d30
  405990:	int    0xa3
  405992:	das    
  405993:	cmp    ch,BYTE PTR [eax+edi*2+0x6c306758]
  40599a:	data16 jns 0x4059f0
  40599d:	sub    ch,cl
  40599f:	push   0xe3b3d4fa
  4059a4:	dec    esp
  4059a5:	xchg   ah,dh
  4059a7:	cmp    al,0x23
  4059a9:	fwait
  4059aa:	stos   BYTE PTR es:[edi],al
  4059ab:	mov    edi,DWORD PTR [ecx+0x24f2e128]
  4059b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059b2:	mov    dl,0x66
  4059b4:	sbb    DWORD PTR [esi],esi
  4059b6:	mov    eax,ds:0xf409dc11
  4059bb:	sahf   
  4059bc:	ins    DWORD PTR es:[edi],dx
  4059bd:	sub    al,0xe7
  4059bf:	pop    ecx
  4059c0:	mov    ebp,0x6df2c937
  4059c5:	cmc    
  4059c6:	push   esp
  4059c7:	ja     0x40597d
  4059c9:	btr    DWORD PTR [eax+0x45],ebp
  4059cd:	jb     0x4059ca
  4059cf:	or     esp,esi
  4059d1:	inc    ebp
  4059d2:	push   0xf5ff1a8a
  4059d7:	add    eax,0xaff073b6
  4059dc:	cmp    BYTE PTR [edx-0x40],dh
  4059df:	mov    ecx,0xa87a386
  4059e5:	fidivr DWORD PTR [ebp+0x28]
  4059e8:	shl    DWORD PTR [eax+edi*1-0x5],0x4d
  4059ed:	mov    ds:0x44bb0ed5,eax
  4059f2:	xor    edi,ecx
  4059f4:	scas   al,BYTE PTR es:[edi]
  4059f5:	arpl   WORD PTR [eax+0x4a8757bb],cx
  4059fb:	mov    cl,al
  4059fd:	sbb    BYTE PTR [ebp+0x6c7b51ff],dh
  405a03:	shl    BYTE PTR [eax],0x17
  405a06:	shr    BYTE PTR [ecx+0x230ac3e8],1
  405a0c:	xchg   esi,eax
  405a0d:	adc    ebp,ebp
  405a0f:	mov    ch,0x85
  405a11:	add    DWORD PTR [ebx-0x50],edi
  405a14:	(bad)  
  405a15:	out    0xf4,al
  405a17:	out    0x2b,eax
  405a19:	adc    eax,0x2c2235a9
  405a1e:	or     esi,0x17
  405a21:	pop    edx
  405a22:	sub    eax,0x68ed2a6f
  405a27:	cmc    
  405a28:	push   eax
  405a29:	fsubr  st(3),st
  405a2b:	scas   eax,DWORD PTR es:[edi]
  405a2c:	imul   esi,esp,0x27
  405a2f:	dec    edx
  405a30:	pop    ecx
  405a31:	outs   dx,BYTE PTR ds:[esi]
  405a32:	jp     0x405aa1
  405a34:	call   0x477f:0x72aeff18
  405a3b:	jg     0x4059db
  405a3d:	xor    esp,DWORD PTR ds:0xbfbdb63f
  405a43:	test   bl,bh
  405a45:	inc    ebp
  405a46:	cmp    bl,al
  405a48:	push   ss
  405a49:	sbb    ch,BYTE PTR [ebp-0x3f1d5f7]
  405a4f:	loop   0x405ab3
  405a51:	xchg   edx,eax
  405a52:	paddd  mm4,QWORD PTR [eax-0x46]
  405a56:	shl    edi,cl
  405a58:	inc    ebp
  405a59:	arpl   si,sp
  405a5b:	aaa    
  405a5c:	add    ecx,DWORD PTR [ebx-0x58]
  405a5f:	or     DWORD PTR ds:[esi-0x4a],esi
  405a63:	shl    DWORD PTR [edi],1
  405a65:	pop    ebx
  405a66:	push   edx
  405a67:	dec    eax
  405a68:	sahf   
  405a69:	jnp    0x405a22
  405a6b:	mov    ds:0xa5d54f85,al
  405a70:	out    dx,eax
  405a71:	arpl   WORD PTR [esi+ebx*4-0x126d1dbd],ax
  405a78:	sub    edi,edx
  405a7a:	aam    0x7f
  405a7c:	enter  0xb7a3,0x6e
  405a80:	call   0x8493b9f4
  405a85:	and    BYTE PTR [edx],bl
  405a87:	mov    bh,BYTE PTR [edx-0x360d66c2]
  405a8d:	jns    0x405a94
  405a8f:	push   esp
  405a90:	cmp    ebx,esp
  405a92:	or     esp,DWORD PTR [ecx]
  405a94:	pop    eax
  405a95:	cmp    esi,DWORD PTR [edx+0x58c3ab99]
  405a9b:	fsubp  st(4),st
  405a9d:	or     eax,0xf7b4dd3
  405aa2:	mov    cl,bl
  405aa4:	(bad)  
  405aa5:	jne    0x405a96
  405aa7:	fisttp QWORD PTR [ecx-0x31]
  405aaa:	inc    esi
  405aab:	int    0x3e
  405aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aae:	or     DWORD PTR [eax],esp
  405ab0:	nop
  405ab1:	pop    es
  405ab2:	or     eax,0x3c1e9c13
  405ab7:	dec    ecx
  405ab8:	aaa    
  405ab9:	test   al,0x72
  405abb:	pop    ecx
  405abc:	mov    edx,0x7db8a9d
  405ac1:	mov    eax,ds:0x11bfa3e1
  405ac6:	mov    al,0xaa
  405ac8:	into   
  405ac9:	dec    BYTE PTR [ebx]
  405acb:	shr    ah,cl
  405acd:	test   ah,bl
  405acf:	jo     0x405b30
  405ad1:	leave  
  405ad2:	cmp    ah,ch
  405ad4:	lock push cs
  405ad6:	data16 cs out 0xd1,al
  405ada:	push   ss
  405adb:	xchg   ecx,edi
  405add:	sbb    DWORD PTR [edi+0x5d7f4306],0x58
  405ae4:	rol    DWORD PTR [ebp-0x69],1
  405ae7:	call   0xc7d7:0xdefa90ef
  405aee:	cmp    ecx,DWORD PTR [edx-0x57bc5df0]
  405af4:	sub    edi,DWORD PTR [esi+0xa]
  405af7:	cmp    BYTE PTR ss:[ebx+ebx*1],ch
  405afb:	push   edx
  405afc:	imul   ebx,DWORD PTR [edx],0x21
  405aff:	retf   
  405b00:	add    esi,DWORD PTR [edi-0x6f8b2909]
  405b06:	inc    edi
  405b07:	repz aad 0x9e
  405b0a:	dec    eax
  405b0b:	mov    eax,ds:0x28368f97
  405b10:	inc    eax
  405b11:	mov    fs,WORD PTR [edx+0x553a4cb9]
  405b17:	inc    esi
  405b18:	push   ss
  405b19:	dec    esi
  405b1a:	mov    ebp,0xe0ad1838
  405b1f:	loop   0x405af2
  405b21:	ret    
  405b22:	(bad)  
  405b23:	iret   
  405b24:	add    eax,DWORD PTR [esi+0x78]
  405b27:	loope  0x405b48
  405b29:	popa   
  405b2a:	add    eax,0x8cc91046
  405b2f:	js     0x405b17
  405b31:	and    al,0x1a
  405b33:	pop    edx
  405b34:	push   ebp
  405b35:	out    dx,al
  405b36:	adc    al,0x5
  405b38:	pop    eax
  405b39:	jg     0x405ad6
  405b3b:	into   
  405b3c:	or     eax,0x468a9e39
  405b41:	in     al,0x37
  405b43:	cmp    DWORD PTR [eax+0x38],eax
  405b46:	sub    bl,cl
  405b48:	ins    BYTE PTR es:[edi],dx
  405b49:	cs jo  0x405bca
  405b4c:	mov    al,ds:0x6c0bdbe3
  405b51:	loopne 0x405ae1
  405b53:	push   0x3db0f591
  405b58:	mov    ch,0x88
  405b5a:	mov    edx,0x83cd9b7f
  405b5f:	(bad)  
  405b60:	jae    0x405b44
  405b62:	gs mov al,0xf8
  405b65:	iret   
  405b66:	pop    eax
  405b67:	fild   QWORD PTR [ebx]
  405b69:	stos   DWORD PTR es:[edi],eax
  405b6a:	shl    BYTE PTR [edi-0x66],cl
  405b6d:	xlat   BYTE PTR ds:[ebx]
  405b6e:	xchg   edx,eax
  405b6f:	adc    BYTE PTR [edx-0x40],bh
  405b72:	sbb    al,0x4e
  405b74:	push   esi
  405b75:	sub    DWORD PTR [ebx],esp
  405b77:	dec    eax
  405b78:	sahf   
  405b79:	fstp   QWORD PTR [ecx+0x7b]
  405b7c:	call   0xfb0:0xcfffb39
  405b83:	mov    eax,edi
  405b85:	pop    ds
  405b86:	mov    bl,0x57
  405b88:	ins    DWORD PTR es:[edi],dx
  405b89:	ficom  WORD PTR [ebx+0x4f8be88]
  405b8f:	out    0xf2,al
  405b91:	shl    DWORD PTR [ebp-0x24f07a77],cl
  405b97:	mov    cl,0xa6
  405b99:	in     eax,dx
  405b9a:	stos   DWORD PTR es:[edi],eax
  405b9b:	shl    DWORD PTR [ebx-0x2d],0x40
  405b9f:	lock (bad) 
  405ba1:	dec    ecx
  405ba2:	into   
  405ba3:	pop    eax
  405ba4:	mov    ecx,0xdbe91dab
  405ba9:	mov    WORD PTR [ebx-0x6e],?
  405bac:	xchg   cl,ah
  405bae:	xchg   BYTE PTR [ecx+edx*8+0x509b11b3],dl
  405bb5:	jo     0x405bf7
  405bb7:	mov    ah,0x52
  405bb9:	jno    0x405b5c
  405bbb:	add    eax,0x69f15c07
  405bc0:	xchg   DWORD PTR [ecx+edi*8-0x74],ecx
  405bc4:	mov    ecx,0x79de432b
  405bc9:	or     BYTE PTR [ebp-0x37],dh
  405bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bcd:	mov    DWORD PTR [edx-0x6c981b12],edx
  405bd3:	(bad)  
  405bd4:	xor    eax,0xa8a0d74f
  405bd9:	stc    
  405bda:	pop    esi
  405bdb:	in     eax,dx
  405bdc:	pushf  
  405bdd:	test   BYTE PTR [ecx-0x1c],cl
  405be0:	popw   ds
  405be2:	retf   0xcabe
  405be5:	mov    bl,0x95
  405be7:	fisttp WORD PTR [esi+ecx*1-0xf]
  405beb:	fwait
  405bec:	jae    0x405ba9
  405bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bef:	add    eax,0xef45a506
  405bf4:	clc    
  405bf5:	xchg   ecx,eax
  405bf6:	nop
  405bf7:	push   es
  405bf8:	sub    BYTE PTR [ebx+0x27],0xf2
  405bfc:	fcom   QWORD PTR [esi]
  405bfe:	in     eax,0x9d
  405c00:	pop    edi
  405c01:	imul   DWORD PTR [ecx+0x41]
  405c04:	xchg   ebp,eax
  405c05:	pusha  
  405c06:	jb     0x405bca
  405c08:	cwde   
  405c09:	and    edi,0xd8bdca5
  405c0f:	mov    edx,0xf4e9e580
  405c14:	les    esp,FWORD PTR [ecx+0x3444acba]
  405c1a:	es mov ebp,0x2ee5e1cf
  405c20:	pop    esi
  405c21:	and    BYTE PTR [ebx-0x50636882],0x26
  405c28:	mov    ah,dh
  405c2a:	loope  0x405bda
  405c2c:	aas    
  405c2d:	cmc    
  405c2e:	dec    ebx
  405c2f:	adc    dh,dl
  405c31:	mov    bh,0xa1
  405c33:	jne    0x405c00
  405c35:	leave  
  405c36:	push   0xe33967d4
  405c3b:	sub    eax,DWORD PTR [ebx+esi*8+0x75]
  405c3f:	cvttps2pi mm5,QWORD PTR [eax+ecx*1-0x71]
  405c44:	gs jnp 0x405bff
  405c47:	imul   ebx,esi,0xffffff99
  405c4a:	cmp    ecx,0x76
  405c4d:	xchg   ebx,eax
  405c4e:	mov    DWORD PTR [esi-0x1093e36],ebp
  405c54:	inc    ebp
  405c55:	cld    
  405c56:	leave  
  405c57:	jecxz  0x405cca
  405c59:	mov    edi,0x6e354337
  405c5e:	xchg   esp,eax
  405c5f:	fadd   st,st(7)
  405c61:	inc    ebx
  405c62:	mov    esp,esi
  405c64:	ds mov ebx,0x3d8aea5a
  405c6a:	or     esp,ecx
  405c6c:	xchg   ebp,eax
  405c6d:	jge    0x405c9d
  405c6f:	aam    0x64
  405c71:	xchg   eax,ecx
  405c73:	enter  0x921a,0x2b
  405c77:	fsubr  DWORD PTR [bp+si+0x53]
  405c7b:	and    DWORD PTR [edx-0x3e],0x7538eb95
  405c82:	jmp    0xe630:0x9cbe717b
  405c89:	test   BYTE PTR [esi+0x580617ac],dl
  405c8f:	scas   eax,DWORD PTR es:[edi]
  405c90:	es inc edx
  405c92:	jle    0x405c1b
  405c94:	into   
  405c95:	adc    DWORD PTR [ebx],eax
  405c97:	jo     0x405cbb
  405c99:	or     eax,0xb3c5a375
  405c9e:	dec    esi
  405c9f:	(bad)  
  405ca0:	jo     0x405c31
  405ca2:	mov    esi,0x9ca116dc
  405ca7:	daa    
  405ca8:	mov    dl,0x8b
  405caa:	sub    DWORD PTR [ebx],edi
  405cac:	cmp    al,0xa3
  405cae:	stc    
  405caf:	fimul  WORD PTR [esi]
  405cb1:	adc    eax,0x4dfa3614
  405cb6:	jmp    0x2cd25420
  405cbb:	mov    esi,ecx
  405cbd:	jno    0x405ce3
  405cbf:	adc    esp,esp
  405cc1:	scas   al,BYTE PTR es:[edi]
  405cc2:	(bad)  [ecx-0x5be95258]
  405cc8:	xor    dl,BYTE PTR [esi-0x2151c465]
  405cce:	es jp  0x405d35
  405cd1:	push   eax
  405cd2:	mov    esp,0x9e5a8b17
  405cd7:	cmp    eax,0x86f3c3d4
  405cdc:	jns    0x405cb4
  405cde:	cmp    ecx,DWORD PTR [ecx+0x1e529867]
  405ce4:	into   
  405ce5:	out    0x16,al
  405ce7:	mov    es,WORD PTR [edi]
  405ce9:	xchg   BYTE PTR [esi+eiz*8],bl
  405cec:	test   eax,0x106f758c
  405cf1:	mov    al,0xd0
  405cf3:	shl    DWORD PTR [esi],1
  405cf5:	gs es das 
  405cf8:	pop    ecx
  405cf9:	into   
  405cfa:	shl    DWORD PTR [ecx-0x66],0xa8
  405cfe:	add    eax,0xc9d58def
  405d03:	lea    esp,[edx-0x3bd70a68]
  405d09:	or     al,0xaf
  405d0b:	and    eax,0x248bd5d
  405d10:	push   ebx
  405d11:	mov    ds:0x55421367,al
  405d16:	jno    0x405d69
  405d18:	outs   dx,DWORD PTR ds:[esi]
  405d19:	xchg   ecx,eax
  405d1a:	xchg   BYTE PTR [ebx+ebx*2+0x6],dl
  405d1e:	pop    esp
  405d1f:	jne    0x405ca5
  405d21:	out    0xcd,eax
  405d23:	mov    ebp,0x7d0b34e5
  405d28:	xchg   edx,eax
  405d29:	daa    
  405d2a:	sar    BYTE PTR ds:0xa0a2846d,1
  405d30:	xor    al,0x8e
  405d32:	push   ebp
  405d33:	lahf   
  405d34:	inc    edx
  405d35:	mov    dl,0xc8
  405d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d38:	lock popf 
  405d3a:	mov    bl,0x75
  405d3c:	xchg   DWORD PTR ss:0x777fc412,edx
  405d43:	inc    ebx
  405d44:	or     ebx,ebp
  405d46:	test   DWORD PTR [ebp+0x65aaa8b5],edi
  405d4c:	sbb    ah,ch
  405d4e:	int3   
  405d4f:	(bad)  
  405d51:	enter  0x68d2,0xc4
  405d55:	test   BYTE PTR [ebp+edi*2-0x16301c41],bl
  405d5c:	jmp    0x405d86
  405d5e:	aad    0xa2
  405d60:	push   ss
  405d61:	je     0x405d74
  405d63:	fistp  QWORD PTR [edx+eiz*4]
  405d66:	pop    ecx
  405d67:	xor    bh,BYTE PTR [edx]
  405d69:	fld    TBYTE PTR [eax]
  405d6b:	jp     0x405d8b
  405d6d:	push   edx
  405d6e:	mov    al,ds:0xa554a51b
  405d73:	jo     0x405d6a
  405d75:	scas   al,BYTE PTR es:[edi]
  405d76:	test   al,0x59
  405d78:	adc    dh,dh
  405d7a:	popa   
  405d7b:	(bad)  
  405d7c:	ret    0xc7a5
  405d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d80:	imul   esp,DWORD PTR [eax+0x3],0x714a4bf9
  405d87:	push   0x2b
  405d89:	xchg   ebx,eax
  405d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d8b:	out    dx,eax
  405d8c:	jecxz  0x405d99
  405d8e:	sar    BYTE PTR [edi-0x37045fbd],1
  405d94:	fistp  WORD PTR ds:[eax-0x3b]
  405d98:	add    DWORD PTR [ebx+eax*1+0xeef5e76],ecx
  405d9f:	inc    ebx
  405da0:	and    edx,edi
  405da2:	mov    edi,DWORD PTR gs:[ebp-0x79]
  405da6:	bound  edx,QWORD PTR [edx]
  405da8:	outs   dx,BYTE PTR ds:[esi]
  405da9:	dec    ecx
  405daa:	xchg   edi,eax
  405dab:	mov    esi,0x1cfdb238
  405db0:	retf   
  405db1:	inc    eax
  405db2:	cmc    
  405db3:	xchg   ebx,eax
  405db4:	dec    edx
  405db5:	push   edx
  405db6:	call   0xf3942c9b
  405dbb:	or     al,0xc9
  405dbd:	xor    BYTE PTR [esp+eiz*2+0x1ba65541],al
  405dc4:	push   ds
  405dc5:	cmc    
  405dc6:	mov    al,ds:0x5eee35a1
  405dcb:	jnp    0x405e36
  405dcd:	mov    ebx,0x8131dd9b
  405dd2:	mov    bh,0x44
  405dd4:	push   ebp
  405dd5:	call   0x12748692
  405dda:	or     BYTE PTR [esi-0x70],0xe9
  405dde:	xchg   esp,eax
  405ddf:	icebp  
  405de0:	repnz pop es
  405de2:	out    0x7a,eax
  405de4:	inc    edi
  405de5:	inc    edx
  405de6:	aas    
  405de7:	gs mov al,0x67
  405dea:	sbb    BYTE PTR [ebp-0x21],cl
  405ded:	cmp    DWORD PTR ds:[esi+0x2bd79c66],ecx
  405df4:	pop    edi
  405df5:	dec    ebp
  405df6:	aad    0xb3
  405df8:	aaa    
  405df9:	jecxz  0x405de5
  405dfb:	scas   eax,DWORD PTR es:[edi]
  405dfc:	ret    
  405dfd:	test   BYTE PTR [ebx-0x22],dl
  405e00:	dec    edi
  405e01:	fwait
  405e02:	ss jbe 0x405dc7
  405e05:	leave  
  405e06:	fcomip st,st(1)
  405e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e09:	ja     0x405e1e
  405e0b:	ret    
  405e0c:	rcl    BYTE PTR [esi+0x71],0x9d
  405e10:	(bad)  
  405e11:	aad    0xd8
  405e13:	mov    esp,0x9307136d
  405e18:	push   esp
  405e19:	fs (bad) 
  405e1b:	xchg   edi,eax
  405e1c:	dec    edx
  405e1d:	inc    esp
  405e1e:	sar    edi,cl
  405e20:	or     eax,edi
  405e22:	and    esi,eax
  405e24:	cs push 0x5e79d191
  405e2a:	popf   
  405e2b:	and    bh,dl
  405e2d:	jmp    0x5891:0x66360120
  405e34:	popa   
  405e35:	(bad)  
  405e36:	xor    cl,bh
  405e38:	sub    esp,DWORD PTR [esp+ebp*4-0x58e7f98]
  405e3f:	pop    ss
  405e40:	dec    ebp
  405e41:	icebp  
  405e42:	fsubr  QWORD PTR [eax]
  405e44:	adc    BYTE PTR [ebx+esi*4+0x4b3f34ff],bh
  405e4b:	push   cs
  405e4c:	mov    ch,0x43
  405e4e:	mov    al,ds:0x6ff45548
  405e53:	test   ch,ah
  405e55:	pop    ecx
  405e56:	add    bh,BYTE PTR [esi]
  405e58:	pop    es
  405e59:	rcl    cl,cl
  405e5b:	mov    dl,0x55
  405e5d:	cdq    
  405e5e:	fadd   st(2),st
  405e60:	sbb    DWORD PTR [ebx+0x7224fa6e],esi
  405e66:	sbb    bl,bl
  405e68:	pop    ds
  405e69:	adc    al,0x21
  405e6b:	cmp    al,0x96
  405e6d:	mov    ebx,0xf7bdc2bb
  405e72:	and    dl,BYTE PTR [ecx+0x6e853e86]
  405e78:	push   ecx
  405e79:	adc    eax,0x6d8a01a7
  405e7e:	iret   
  405e7f:	xchg   edi,eax
  405e80:	jecxz  0x405e1f
  405e82:	inc    ebx
  405e83:	and    al,0x99
  405e85:	xchg   edx,eax
  405e86:	in     eax,0xb3
  405e88:	xor    ah,BYTE PTR [edi]
  405e8a:	fsub   QWORD PTR ds:0x8f8b6f72
  405e90:	shl    DWORD PTR [ebx-0x4c],1
  405e93:	xchg   DWORD PTR [ebp-0x6e],ebp
  405e96:	sbb    BYTE PTR [esi],dh
  405e98:	xchg   esp,eax
  405e99:	sub    BYTE PTR [ecx+0x2f],ch
  405e9c:	sub    eax,DWORD PTR [edx+edi*2]
  405e9f:	test   eax,0x7d1e666f
  405ea4:	xchg   BYTE PTR [edi+0x594a68f],cl
  405eaa:	fild   WORD PTR ds:0xd510fb3c
  405eb0:	es out 0x7d,eax
  405eb3:	push   0xf953c604
  405eb8:	push   es
  405eb9:	fs nop
  405ebb:	jmp    0x9392ef07
  405ec0:	retf   
  405ec1:	inc    esp
  405ec2:	or     eax,0xf39abaff
  405ec7:	mov    esi,0x6cbc4ed5
  405ecc:	sub    dh,dh
  405ece:	sar    DWORD PTR [edx+0x367ab81e],0x35
  405ed5:	call   0x7d2edb5e
  405eda:	in     eax,0x5a
  405edc:	clc    
  405edd:	xchg   esp,eax
  405ede:	(bad)  
  405edf:	mov    al,ds:0x2fc0ffe8
  405ee4:	fsub   DWORD PTR [ecx+0x70536e87]
  405eea:	inc    eax
  405eeb:	pop    es
  405eec:	jnp    0x405f31
  405eee:	loop   0x405f05
  405ef0:	(bad)  
  405ef1:	pop    ebx
  405ef2:	pop    edx
  405ef3:	cmp    ecx,ecx
  405ef5:	adc    bl,bh
  405ef7:	(bad)  
  405ef8:	mov    WORD PTR [ebp-0x3621a60],fs
  405efe:	fucomp st(2)
  405f00:	mov    eax,ds:0xb5e4247d
  405f05:	dec    edx
  405f06:	addr16 pushf 
  405f08:	fild   WORD PTR ds:0xb5f4f286
  405f0e:	addr16 xchg esp,eax
  405f10:	sar    bl,0x18
  405f13:	outs   dx,DWORD PTR ds:[esi]
  405f14:	cmp    eax,0xd886f9ea
  405f19:	aad    0x23
  405f1b:	mov    ebp,0x2a1561e9
  405f20:	ds sbb eax,0xe4c96571
  405f26:	leave  
  405f27:	jge    0x405ed6
  405f29:	or     BYTE PTR [ecx+eiz*2-0x79],ch
  405f2d:	es add edi,ebp
  405f30:	aad    0x9c
  405f32:	or     al,0x73
  405f34:	popf   
  405f35:	hlt    
  405f36:	add    DWORD PTR ds:0xc1c48de3,ecx
  405f3c:	mov    ebp,0xbd7eadc2
  405f41:	lahf   
  405f42:	cli    
  405f43:	push   0xba558595
  405f48:	jno    0x405f04
  405f4a:	and    al,0xdb
  405f4c:	xor    DWORD PTR [edx-0x6],edx
  405f4f:	xlat   BYTE PTR ds:[ebx]
  405f50:	inc    esi
  405f51:	jmp    0xed9f:0xa640e888
  405f58:	and    bl,bh
  405f5a:	mov    bl,0xff
  405f5c:	sub    ah,al
  405f5e:	fild   DWORD PTR [edx-0x34]
  405f61:	pop    esi
  405f62:	add    eax,0x6851d28
  405f67:	outs   dx,DWORD PTR ds:[esi]
  405f68:	adc    BYTE PTR [ebx],ah
  405f6a:	pop    es
  405f6b:	cmp    dh,BYTE PTR [ebx-0x1e]
  405f6e:	pop    ds
  405f6f:	push   0xffffffa4
  405f71:	nop
  405f72:	out    dx,eax
  405f73:	rol    ebx,0xb8
  405f76:	mov    ch,BYTE PTR [esi+0x7dc4014e]
  405f7c:	lods   eax,DWORD PTR ds:[esi]
  405f7d:	aaa    
  405f7e:	retf   
  405f7f:	mov    edx,0xb6adcd0d
  405f84:	dec    ecx
  405f85:	dec    eax
  405f86:	mov    ah,0x37
  405f88:	retf   0x197b
  405f8b:	push   esp
  405f8c:	mov    WORD PTR [esi-0x53fe0580],fs
  405f92:	sbb    al,bl
  405f94:	shl    edi,1
  405f96:	adc    al,0x4c
  405f98:	push   eax
  405f99:	inc    edi
  405f9a:	sub    edi,ebx
  405f9c:	jo     0x405f5d
  405f9e:	popf   
  405f9f:	test   BYTE PTR [eax+0x79],ch
  405fa2:	cmovne eax,DWORD PTR [ebp+eiz*8-0x78]
  405fa7:	mov    esp,0x4f9a1c32
  405fac:	inc    ebx
  405fad:	pushf  
  405fae:	scas   eax,DWORD PTR es:[edi]
  405faf:	enter  0x887f,0x8d
  405fb3:	push   0xce77296
  405fb8:	sbb    BYTE PTR [ecx],0x97
  405fbb:	xchg   ecx,esp
  405fbd:	(bad)  
  405fbe:	retf   0xbe74
  405fc1:	test   eax,0xb90e12f4
  405fc6:	mov    esp,0x8abe74c2
  405fcb:	or     eax,0xd146c9e8
  405fd0:	or     BYTE PTR [edi+0x7a],bl
  405fd3:	push   esi
  405fd4:	inc    ebp
  405fd5:	mov    ecx,ebp
  405fd7:	jmp    0xf473258a
  405fdc:	ins    DWORD PTR es:[edi],dx
  405fdd:	jge    0x406017
  405fdf:	cld    
  405fe0:	int    0x2b
  405fe2:	int3   
  405fe3:	scas   eax,DWORD PTR es:[edi]
  405fe4:	inc    edi
  405fe5:	pop    edi
  405fe6:	add    DWORD PTR [edx],ecx
  405fe8:	cli    
  405fe9:	ja     0x405f81
  405feb:	rcr    dh,0x71
  405fee:	div    bl
  405ff0:	mov    esi,0x8c21988a
  405ff5:	dec    ebp
  405ff6:	loope  0x406018
  405ff8:	push   0x20
  405ffa:	(bad)  
  405ffb:	pop    ds
  405ffc:	or     eax,0x29361e03
  406001:	call   0x5aec4364
  406006:	jmp    DWORD PTR [edx-0x65]
  406009:	aam    0x9b
  40600b:	pushf  
  40600c:	mov    bh,0x93
  40600e:	scas   eax,DWORD PTR es:[edi]
  40600f:	sub    ebp,DWORD PTR [ebp-0x5ae8c025]
  406015:	or     ebx,DWORD PTR [ecx-0x702238a]
  40601b:	std    
  40601c:	cmp    DWORD PTR [eax+0x2c400c93],edx
  406022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406023:	(bad)  
  406024:	std    
  406025:	pop    ebp
  406026:	xor    esp,eax
  406028:	sub    al,0xaa
  40602a:	jns    0x405ff2
  40602c:	pop    edi
  40602d:	xor    esp,0xffffffca
  406030:	push   ds
  406031:	rcr    DWORD PTR [esi+0x464df1ff],cl
  406037:	dec    edi
  406038:	xchg   ebp,eax
  406039:	test   ah,ch
  40603b:	rcr    DWORD PTR [eax-0x4d],1
  40603e:	repz mov ebp,0x150683f2
  406044:	js     0x4060b5
  406046:	loopne 0x405fe9
  406048:	jmp    0x406036
  40604a:	shl    BYTE PTR [edi-0x55],cl
  40604d:	iret   
  40604e:	push   0xd58744b6
  406053:	mov    bl,0x5f
  406055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406056:	inc    edx
  406057:	dec    eax
  406058:	test   DWORD PTR [edi-0x774ffd2b],ecx
  40605e:	leave  
  40605f:	mov    ebx,0xa84a0e29
  406064:	test   BYTE PTR [ebp-0x52],bh
  406067:	mov    dh,0x1f
  406069:	fdivr  QWORD PTR [ebp+0x26]
  40606c:	outs   dx,BYTE PTR ds:[esi]
  40606d:	dec    ebx
  40606e:	xor    bl,BYTE PTR [eax-0x4f56c1ba]
  406074:	inc    esi
  406075:	cdq    
  406076:	jae    0x4060c6
  406078:	mov    ecx,esi
  40607a:	fcmovnu st,st(3)
  40607c:	mov    esp,0x5ebb7c34
  406081:	pop    esp
  406082:	push   edi
  406083:	cs xor eax,0x7d6bce81
  406089:	mov    ds:0x2d4d96fb,eax
  40608e:	iret   
  40608f:	enter  0xd757,0xf3
  406093:	mov    edx,0x4e4b3f05
  406099:	icebp  
  40609a:	imul   edi,ebp,0x8b5cf2b1
  4060a0:	repnz outs dx,DWORD PTR ds:[esi]
  4060a2:	cmp    bl,BYTE PTR [edx]
  4060a4:	mov    ds:0xb2d2169a,eax
  4060a9:	or     esp,edi
  4060ab:	xor    DWORD PTR [edi],0xad530df2
  4060b1:	cld    
  4060b2:	xchg   ecx,eax
  4060b3:	and    eax,0x4d942cf0
  4060b8:	cdq    
  4060b9:	inc    ecx
  4060ba:	aas    
  4060bb:	xchg   ecx,eax
  4060bc:	lock enter 0x518c,0x8b
  4060c1:	pusha  
  4060c2:	mov    ebp,0x535595c4
  4060c7:	push   eax
  4060c8:	dec    ebx
  4060c9:	add    ecx,DWORD PTR [esi]
  4060cb:	mov    ah,0x9b
  4060cd:	loope  0x4060bf
  4060cf:	dec    ebp
  4060d0:	inc    esi
  4060d1:	inc    ebp
  4060d2:	sub    eax,DWORD PTR ds:0x7bc4f471
  4060d8:	aam    0x99
  4060da:	dec    edx
  4060db:	outs   dx,BYTE PTR ds:[esi]
  4060dc:	push   cs
  4060dd:	loope  0x406099
  4060df:	dec    eax
  4060e0:	xchg   ebp,eax
  4060e1:	pop    eax
  4060e2:	jno    0x406115
  4060e4:	jae    0x406104
  4060e6:	adc    BYTE PTR [eax-0x1c],ah
  4060e9:	and    BYTE PTR [ecx],dl
  4060eb:	push   ebx
  4060ec:	xchg   ebx,eax
  4060ed:	mov    ah,0x5f
  4060ef:	mov    bl,0xf5
  4060f1:	and    DWORD PTR [ebp+0x9766849],edi
  4060f7:	test   DWORD PTR [ecx-0x10],ecx
  4060fa:	loop   0x406091
  4060fc:	push   cs
  4060fd:	daa    
  4060fe:	adc    esp,DWORD PTR [eax]
  406100:	stc    
  406101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406102:	ja     0x406114
  406104:	adc    ebx,DWORD PTR [ebp+0x3c]
  406107:	dec    ebp
  406108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406109:	add    al,0xbd
  40610b:	push   ds
  40610c:	aad    0x45
  40610e:	shr    BYTE PTR [esi+0x53ed47b0],cl
  406114:	jmp    0x4060ab
  406116:	mov    ds:0xe16d0b18,al
  40611b:	outs   dx,DWORD PTR ds:[esi]
  40611c:	pop    edx
  40611d:	popa   
  40611e:	mov    al,0x24
  406120:	aaa    
  406121:	jmp    0x35c81fe1
  406126:	xchg   BYTE PTR [ecx-0x59],ch
  406129:	inc    edi
  40612a:	mov    edx,ebp
  40612c:	stos   BYTE PTR es:[edi],al
  40612d:	pusha  
  40612e:	pop    ebx
  40612f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406130:	(bad)  
  406132:	(bad)  
  406133:	(bad)  
  406134:	push   0xffffff8d
  406136:	leave  
  406137:	cmc    
  406138:	ret    0x5218
  40613b:	inc    edx
  40613c:	mov    ds:0xb35ab4cc,eax
  406141:	push   esi
  406142:	pop    edi
  406143:	in     al,dx
  406144:	fstp   QWORD PTR [esi-0x70e66500]
  40614a:	xor    edx,eax
  40614c:	das    
  40614d:	aaa    
  40614e:	icebp  
  40614f:	push   0x8149192f
  406154:	and    esp,esi
  406156:	lea    esp,[edx]
  406158:	nop
  406159:	dec    esi
  40615a:	in     eax,0x77
  40615c:	xchg   edx,eax
  40615d:	out    0xf7,eax
  40615f:	jae    0x406171
  406161:	mov    al,BYTE PTR [eax+0x1d679f42]
  406167:	sub    BYTE PTR [esi+0x39806dbc],dh
  40616d:	add    esi,DWORD PTR [ebx]
  40616f:	es dec ebp
  406171:	and    BYTE PTR [esi+0x56],0xe8
  406175:	cld    
  406176:	mov    ch,0x2
  406178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406179:	jbe    0x4061ac
  40617b:	mov    edx,0x9092f245
  406180:	out    dx,eax
  406181:	dec    eax
  406182:	dec    esp
  406183:	mov    esp,0x4583cd59
  406188:	sbb    edi,DWORD PTR [eax-0x294ce92c]
  40618e:	shr    BYTE PTR [edi],0x3f
  406191:	popa   
  406192:	pop    ebx
  406193:	push   ds
  406194:	mov    ebp,0x9b7d2646
  406199:	xchg   esp,eax
  40619a:	jp     0x40615b
  40619c:	mov    cl,0x2c
  40619e:	sub    dh,BYTE PTR [ebp-0x62]
  4061a1:	clc    
  4061a2:	xchg   ebx,eax
  4061a3:	arpl   WORD PTR [esi+eax*4+0x6e],bx
  4061a7:	repnz sbb BYTE PTR [esi+0x4bb5a6cb],ah
  4061ae:	rcr    DWORD PTR [ebp+0x57410082],1
  4061b4:	pop    eax
  4061b5:	or     BYTE PTR [ebp+0x66],0x6f
  4061b9:	and    al,0xe5
  4061bb:	add    BYTE PTR [ecx],bh
  4061bd:	xor    eax,0xc8507969
  4061c2:	aas    
  4061c3:	sbb    edx,DWORD PTR [edi+0x4f]
  4061c6:	adc    eax,0x1afc92e2
  4061cb:	xor    ecx,DWORD PTR [esi+0x42]
  4061ce:	in     eax,dx
  4061cf:	ins    BYTE PTR es:[edi],dx
  4061d0:	pop    esp
  4061d1:	add    BYTE PTR [esi],ch
  4061d3:	gs sub bl,ah
  4061d6:	sti    
  4061d7:	push   es
  4061d8:	out    dx,al
  4061d9:	aam    0xdf
  4061db:	jo     0x406209
  4061dd:	mov    ds:0x1d66b61f,al
  4061e2:	(bad)  
  4061e3:	pop    ss
  4061e4:	dec    edi
  4061e5:	xor    ebp,ebx
  4061e7:	(bad)  
  4061e8:	xor    dl,bh
  4061ea:	jbe    0x406198
  4061ec:	in     eax,dx
  4061ed:	add    eax,0x86d2d5e
  4061f2:	jle    0x4061bf
  4061f4:	in     eax,dx
  4061f5:	into   
  4061f6:	clc    
  4061f7:	mov    esi,0x9e332df5
  4061fc:	pop    ebx
  4061fd:	test   eax,0xe78cef97
  406202:	shr    BYTE PTR [edi+0xe],cl
  406205:	rcr    bl,cl
  406207:	jp     0x4061a1
  406209:	xchg   BYTE PTR [ebx],dl
  40620b:	les    esp,FWORD PTR [edx-0x18a33446]
  406211:	xor    DWORD PTR ds:0xd65e01b0,ebp
  406217:	mov    eax,ds:0x48d1f618
  40621d:	fbld   TBYTE PTR [ebx+0x74]
  406220:	lods   al,BYTE PTR ds:[esi]
  406221:	jbe    0x40626d
  406223:	fstp   st(0)
  406225:	mov    WORD PTR [ebx+eax*2+0x25],ds
  406229:	cld    
  40622a:	inc    esp
  40622b:	or     esp,0x9009a603
  406231:	iret   
  406232:	dec    ebp
  406233:	popa   
  406234:	mov    edi,0xecb30adf
  406239:	add    bl,BYTE PTR [esi]
  40623b:	fcom   st(6)
  40623d:	push   esp
  40623e:	adc    eax,DWORD PTR [esi+0x905e863]
  406244:	nop
  406245:	mov    edi,0xbc76c036
  40624a:	call   0x174e:0x1df083a9
  406251:	inc    eax
  406252:	int3   
  406253:	dec    esp
  406254:	daa    
  406255:	or     ecx,DWORD PTR [edx+0x4962d424]
  40625b:	inc    edx
  40625c:	jae    0x40623f
  40625e:	sbb    ch,bh
  406260:	mov    ecx,0xd3abecc
  406265:	in     al,dx
  406266:	repz jb 0x40624a
  406269:	outs   dx,DWORD PTR ds:[esi]
  40626a:	stos   DWORD PTR es:[edi],eax
  40626b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40626c:	cmp    dh,BYTE PTR [esi-0x21]
  40626f:	jl     0x40624b
  406271:	add    edx,DWORD PTR [edx]
  406273:	xor    dl,BYTE PTR [ecx+0x51]
  406276:	aaa    
  406277:	mov    ch,0x18
  406279:	lods   al,BYTE PTR ds:[esi]
  40627a:	xchg   BYTE PTR ds:0x820f4384,bh
  406280:	es retf 0xbc51
  406284:	ror    bl,cl
  406286:	test   al,0x8a
  406288:	sbb    eax,0xe88cb0b8
  40628d:	push   eax
  40628e:	shl    BYTE PTR [edi+eax*4-0x8],cl
  406292:	adc    al,0x3c
  406294:	jle    0x4062bd
  406296:	hlt    
  406297:	(bad)  
  406299:	shl    DWORD PTR [eax-0x2a3c9ab8],cl
  40629f:	mov    ds:0xb5abc995,eax
  4062a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062a5:	mov    cl,0xda
  4062a7:	jne    0x4062c0
  4062a9:	pop    esi
  4062aa:	sbb    esp,DWORD PTR [edi+ebp*8+0x599e3946]
  4062b1:	sbb    al,0xdd
  4062b3:	push   cs
  4062b4:	loopne 0x406280
  4062b6:	adc    DWORD PTR [ebx-0x7546f568],0x5152511b
  4062c0:	jg     0x406273
  4062c2:	pusha  
  4062c3:	int3   
  4062c4:	add    al,0x70
  4062c6:	outs   dx,DWORD PTR ds:[esi]
  4062c7:	fild   QWORD PTR [ebp-0x3ec0276a]
  4062cd:	push   edx
  4062ce:	mov    eax,ds:0x374e77fd
  4062d3:	add    al,0x5b
  4062d5:	vmread DWORD PTR [eax+edi*4-0x1c],esi
  4062da:	leave  
  4062db:	dec    esi
  4062dc:	mov    cl,0x8
  4062de:	sub    BYTE PTR [eax+eax*1+0x3039b3a],0x94
  4062e6:	add    bh,BYTE PTR [esp+ebp*1-0x4c0ca73c]
  4062ed:	and    BYTE PTR [ecx-0x12],cl
  4062f0:	shl    ebp,0x9c
  4062f3:	adc    esi,DWORD PTR [esi+edi*8+0x37]
  4062f7:	push   edx
  4062f8:	adc    WORD PTR [esi+esi*2],bx
  4062fc:	mov    bl,0x5c
  4062fe:	sub    BYTE PTR [ecx+0x618e6c2a],0x9f
  406305:	pop    edi
  406306:	nop
  406307:	or     BYTE PTR [ecx+0x3226b6b1],bh
  40630d:	add    cl,BYTE PTR [esi]
  40630f:	lock rol DWORD PTR [esi+0x38],cl
  406313:	lahf   
  406314:	retf   0x71b9
  406317:	out    dx,al
  406318:	ret    
  406319:	imul   ebp,DWORD PTR [ebx],0xffffffd7
  40631c:	adc    BYTE PTR [ebx-0x5f],ah
  40631f:	pop    esi
  406320:	or     al,0x2b
  406322:	fs mov esi,0x442a9baa
  406328:	cmp    al,0x66
  40632a:	les    eax,FWORD PTR [ebp-0x5e]
  40632d:	fcmove st,st(5)
  40632f:	and    DWORD PTR [edx+0x145e2893],eax
  406335:	mov    ?,WORD PTR [esp+edx*2-0x27]
  406339:	push   esi
  40633a:	stos   DWORD PTR es:[edi],eax
  40633b:	mov    ebx,0x2a36a93f
  406340:	dec    ebp
  406341:	in     eax,0x80
  406343:	pop    ds
  406344:	add    al,0xfd
  406346:	mov    ch,0xf8
  406348:	fcom   QWORD PTR [esi+0x22561736]
  40634e:	add    al,0x85
  406350:	cs rcl ecx,1
  406353:	fisttp QWORD PTR [eax+0x3f]
  406356:	loope  0x4063d0
  406358:	lds    ebp,FWORD PTR [edi-0x4a8c86d5]
  40635e:	pop    esp
  40635f:	outs   dx,DWORD PTR ds:[esi]
  406360:	call   0xccf8fa43
  406365:	jno    0x406370
  406367:	push   0x3c
  406369:	dec    ecx
  40636a:	cmp    ebx,edx
  40636c:	sbb    DWORD PTR [edi-0x7d40295a],0x519952dd
  406376:	outs   dx,BYTE PTR ds:[esi]
  406377:	push   esi
  406378:	push   edi
  406379:	xchg   edx,eax
  40637a:	mov    esi,0x8e1ec46a
  40637f:	xchg   ebx,eax
  406380:	xchg   esp,eax
  406381:	adc    DWORD PTR [esi],edx
  406383:	lea    esp,[ebp+0x7dd0965]
  406389:	lahf   
  40638a:	scas   al,BYTE PTR es:[edi]
  40638b:	ja     0x40637f
  40638d:	outs   dx,BYTE PTR ds:[esi]
  40638e:	ins    BYTE PTR es:[edi],dx
  40638f:	ret    
  406390:	out    0xe7,eax
  406392:	stos   DWORD PTR es:[edi],eax
  406393:	inc    edi
  406394:	(bad)  
  406395:	mov    edi,0xd5589e34
  40639a:	and    DWORD PTR [ecx+0xea7ce1e],eax
  4063a0:	ret    
  4063a1:	std    
  4063a2:	xor    DWORD PTR [ecx+0x5],ebx
  4063a5:	mov    eax,ds:0x98ba03a3
  4063aa:	pop    edx
  4063ab:	jp     0x406392
  4063ad:	inc    ecx
  4063ae:	cmp    dh,dl
  4063b0:	or     al,0x5c
  4063b2:	sbb    eax,0x153ea82e
  4063b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063b8:	and    ebx,ebx
  4063ba:	inc    ecx
  4063bb:	lods   al,BYTE PTR ds:[esi]
  4063bc:	xchg   ecx,eax
  4063bd:	sbb    eax,0x45c248bd
  4063c2:	(bad)  
  4063c3:	std    
  4063c4:	dec    ebx
  4063c5:	sub    eax,0x1e192e
  4063ca:	cmp    DWORD PTR [eax-0x46],0x54bc1dfe
  4063d1:	enter  0xf962,0x18
  4063d5:	outs   dx,DWORD PTR ds:[esi]
  4063d6:	loop   0x406395
  4063d8:	or     edx,DWORD PTR [esi-0x5c]
  4063db:	popf   
  4063dc:	jb     0x4063d6
  4063de:	add    DWORD PTR [ebx+0x1e0f1f4a],0x2d09d043
  4063e8:	out    0x15,al
  4063ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063eb:	(bad)  
  4063ec:	retf   
  4063ed:	sub    cl,BYTE PTR [edx]
  4063ef:	push   esp
  4063f0:	arpl   WORD PTR [ebp+0x7e],cx
  4063f3:	in     al,dx
  4063f4:	xor    al,0xac
  4063f6:	gs int 0x43
  4063f9:	(bad)  
  4063fb:	scas   al,BYTE PTR es:[edi]
  4063fc:	test   ebx,0x6b4faee2
  406402:	bound  ebp,QWORD PTR [ebp+ecx*1-0x6c]
  406406:	xchg   BYTE PTR [eax],ch
  406408:	out    0xac,al
  40640a:	dec    ecx
  40640b:	sbb    BYTE PTR [eax],0x41
  40640e:	je     0x406421
  406410:	pop    edx
  406411:	xchg   ebx,eax
  406412:	pop    esp
  406413:	inc    esi
  406414:	repnz loope 0x406456
  406417:	js     0x406467
  406419:	iretw  
  40641b:	pop    es
  40641c:	rol    DWORD PTR [eax],1
  40641e:	cmp    al,0x6b
  406420:	push   0xc75a04f2
  406425:	fidivr WORD PTR [ebx-0x35373723]
  40642b:	fs clc 
  40642d:	sar    DWORD PTR ds:0x5be4c352,1
  406433:	add    DWORD PTR ds:0x958faee1,ecx
  406439:	dec    esi
  40643a:	or     BYTE PTR [edi+0x75],bl
  40643d:	inc    eax
  40643e:	(bad)  
  40643f:	test   eax,0x784e8641
  406444:	ja     0x406490
  406446:	dec    ecx
  406447:	aas    
  406448:	mov    bl,0x4b
  40644a:	out    0x99,al
  40644c:	push   esi
  40644d:	xchg   edx,eax
  40644e:	call   0x27ddb7bf
  406453:	shr    BYTE PTR [eiz*8-0x72a756b5],1
  40645a:	rcl    DWORD PTR [ecx],cl
  40645c:	mov    ch,0xe2
  40645e:	sub    BYTE PTR [esi-0x21cee7ba],al
  406464:	xor    ecx,DWORD PTR [ecx-0x6f]
  406467:	gs call 0x7784:0x7de438d1
  40646f:	ds mov ah,0xe6
  406472:	mov    ebp,0xbac3df05
  406477:	(bad)  [ecx-0x6b]
  40647a:	pop    edx
  40647b:	call   0x848aa280
  406480:	cmc    
  406481:	(bad)  
  406482:	xchg   edx,eax
  406483:	daa    
  406484:	xchg   edx,eax
  406485:	fnstenv [eax]
  406487:	cmp    DWORD PTR [edx],edi
  406489:	mov    ch,0x51
  40648b:	in     al,0x81
  40648d:	les    esi,FWORD PTR [ebp-0x34]
  406490:	jecxz  0x4064c3
  406492:	mov    eax,0xbd5b29d3
  406497:	ss dec edi
  406499:	jl     0x4064fb
  40649b:	fstp   st(2)
  40649d:	in     al,0xb4
  40649f:	xchg   edi,edx
  4064a1:	or     BYTE PTR [edx-0x6d693927],ah
  4064a7:	dec    eax
  4064a8:	inc    esp
  4064a9:	sbb    ecx,ebp
  4064ab:	shr    DWORD PTR [eax-0x13b9700],1
  4064b1:	and    eax,0xe7aaa9d3
  4064b6:	adc    al,0xb1
  4064b8:	unpckhps xmm1,XMMWORD PTR [esi-0x141368a7]
  4064bf:	mov    bh,0xbf
  4064c1:	cmc    
  4064c2:	mov    dl,0x81
  4064c4:	test   eax,0x317a8f31
  4064c9:	xor    DWORD PTR [ecx+esi*8+0x2b],ebp
  4064cd:	sub    eax,0xaf797e06
  4064d2:	popa   
  4064d3:	or     ecx,eax
  4064d5:	leave  
  4064d6:	pushf  
  4064d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064d8:	loop   0x40645c
  4064da:	lahf   
  4064db:	or     esi,ecx
  4064dd:	ret    0x95f8
  4064e0:	push   esi
  4064e1:	js     0x4064b8
  4064e3:	jmp    0xe75a:0x79010390
  4064ea:	out    dx,eax
  4064eb:	inc    ch
  4064ed:	mov    ch,0xdf
  4064ef:	movzx  edx,BYTE PTR cs:[ebp+ecx*2+0x702cc63d]
  4064f8:	inc    eax
  4064f9:	jp     0x40651e
  4064fb:	adc    cl,BYTE PTR [edx+0x47]
  4064fe:	or     bl,bl
  406500:	or     DWORD PTR [ebx*2-0x6eb71596],ecx
  406507:	outs   dx,DWORD PTR ds:[esi]
  406508:	ins    DWORD PTR es:[edi],dx
  406509:	inc    ebp
  40650a:	daa    
  40650b:	lods   al,BYTE PTR ds:[esi]
  40650c:	adc    ah,BYTE PTR [edx]
  40650e:	add    eax,0x9a6d0ce5
  406513:	xchg   esi,eax
  406514:	outs   dx,DWORD PTR ds:[esi]
  406515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406516:	out    dx,eax
  406517:	sub    eax,0x31c50485
  40651c:	sub    esp,0x63c05810
  406522:	sbb    esp,DWORD PTR [ebx+0x740a0d3e]
  406528:	mov    ah,0x18
  40652a:	push   ss
  40652b:	ret    0x33de
  40652e:	stos   DWORD PTR es:[edi],eax
  40652f:	lods   al,BYTE PTR ds:[esi]
  406530:	inc    BYTE PTR [eax-0x5b]
  406533:	out    0x52,eax
  406535:	jmp    0xfa4c:0xf284f9b7
  40653c:	jg     0x40650b
  40653e:	dec    edx
  40653f:	gs retf 
  406541:	retf   0x8fbb
  406544:	add    eax,0x5f2f9d21
  406549:	sub    BYTE PTR [ebx+0x32],0x5d
  40654d:	mov    ecx,0xecad5713
  406552:	xlat   BYTE PTR ds:[ebx]
  406553:	shr    DWORD PTR [eax+0x6ddadc2b],1
  406559:	shl    DWORD PTR [eax+0x5e],cl
  40655c:	dec    BYTE PTR [esi+eiz*4-0x752199cc]
  406563:	cmc    
  406564:	bound  edi,QWORD PTR [ebp+0x18]
  406567:	mov    ds:0x41242296,eax
  40656c:	mov    ch,0x3f
  40656e:	aaa    
  40656f:	jo     0x40652c
  406571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406572:	or     al,0xb1
  406574:	dec    eax
  406575:	in     eax,0x25
  406577:	out    dx,eax
  406578:	and    edi,DWORD PTR [ebp-0x2e]
  40657b:	outs   dx,DWORD PTR ds:[esi]
  40657c:	add    BYTE PTR [ecx],al
  40657e:	test   DWORD PTR ds:0x30009170,0x56f75bc9
  406588:	mov    bl,BYTE PTR [ecx]
  40658a:	addr16 inc edi
  40658c:	mov    ebx,0x746cdb54
  406591:	shl    edi,1
  406593:	arpl   WORD PTR ds:0xe90de6a3,di
  406599:	push   ecx
  40659a:	bnd jae 0x4065ec
  40659d:	xchg   ebx,eax
  40659e:	ins    BYTE PTR es:[edi],dx
  40659f:	sbb    BYTE PTR [eax-0x343ec82c],dl
  4065a5:	or     BYTE PTR [ebp+0x51],dh
  4065a8:	out    dx,eax
  4065a9:	jns    0x40654e
  4065ab:	sahf   
  4065ac:	les    esp,FWORD PTR [ecx-0x458bf847]
  4065b2:	fisubr DWORD PTR [edx+0x7ae36f11]
  4065b8:	es stos BYTE PTR es:[edi],al
  4065ba:	mov    ds:0x12fd82c3,eax
  4065bf:	xor    DWORD PTR [ebp-0x19],edi
  4065c2:	xchg   esi,eax
  4065c3:	push   0xf059e12c
  4065c8:	adc    ah,ch
  4065ca:	mov    ds:0x62e1db0d,eax
  4065cf:	popf   
  4065d0:	sbb    DWORD PTR [ebp*2-0x78e9a823],ebp
  4065d7:	dec    eax
  4065d8:	dec    ebp
  4065d9:	in     al,0x9e
  4065db:	mov    edi,0x382b290a
  4065e0:	jne    0x4065b4
  4065e2:	aam    0x43
  4065e4:	push   cs
  4065e5:	cwde   
  4065e6:	jne    0x4065b6
  4065e8:	ficom  WORD PTR [edi+0x79fdfe64]
  4065ee:	lea    esp,[eax-0x7d]
  4065f1:	push   ecx
  4065f2:	fld    TBYTE PTR [edi]
  4065f4:	fild   DWORD PTR [ecx+0x1817d88f]
  4065fa:	add    al,0x95
  4065fc:	sbb    al,BYTE PTR [ebp-0x4]
  4065ff:	out    0x50,eax
  406601:	and    edi,DWORD PTR [edi+eax*1+0x169b12a7]
  406608:	mov    edi,0xbc754f77
  40660d:	dec    ebx
  40660e:	test   BYTE PTR [ecx+0x55e228],0x7b
  406615:	push   ecx
  406616:	test   eax,0xeb28ef9
  40661b:	xchg   edi,eax
  40661c:	fwait
  40661d:	push   cs
  40661e:	rcl    DWORD PTR [edi+0x427c6cdb],0x7d
  406625:	daa    
  406626:	jo     0x4065e6
  406628:	iret   
  406629:	adc    al,0x2e
  40662b:	out    dx,eax
  40662c:	lahf   
  40662d:	pusha  
  40662e:	dec    edx
  40662f:	push   0xffffffdf
  406631:	sahf   
  406632:	inc    ebx
  406633:	mov    eax,0x40846856
  406638:	mov    esp,0x158c572f
  40663d:	sbb    al,0xef
  40663f:	out    dx,eax
  406640:	xor    eax,0x1f7dd892
  406645:	xor    eax,0xec3ac138
  40664a:	das    
  40664b:	cmp    ebp,ebx
  40664d:	mov    dl,0x8c
  40664f:	mov    ah,0xd
  406651:	inc    ecx
  406652:	jmp    0x406698
  406654:	and    al,0x12
  406656:	repz loop 0x40660b
  406659:	or     DWORD PTR [edx+0x4a],ebp
  40665c:	imul   esi
  40665e:	pushf  
  40665f:	test   BYTE PTR [bp+0x6c],ch
  406663:	cwde   
  406664:	dec    edx
  406665:	addr16 enter 0xf6f9,0x50
  40666a:	push   ecx
  40666b:	inc    esp
  40666c:	inc    esp
  40666d:	(bad)  
  40666e:	int3   
  40666f:	mov    ecx,DWORD PTR [ebp+0x7a0a4c54]
  406675:	fbstp  TBYTE PTR [ebx-0x6013b0d3]
  40667b:	xchg   ah,ch
  40667d:	ins    DWORD PTR es:[edi],dx
  40667e:	js     0x406687
  406680:	inc    edi
  406681:	mov    gs,WORD PTR [ecx-0xc]
  406684:	pop    es
  406685:	cmp    BYTE PTR [ebp-0x73c5d060],0x3f
  40668c:	mov    al,BYTE PTR [edx]
  40668e:	jno    0x406692
  406690:	lds    esp,FWORD PTR [esi-0x35]
  406693:	inc    esi
  406694:	jg     0x4066e0
  406696:	push   eax
  406697:	push   eax
  406698:	mov    bh,0xee
  40669a:	xchg   ecx,eax
  40669b:	fld    DWORD PTR [eax+0x1371b10d]
  4066a1:	mov    bl,0xab
  4066a3:	loope  0x406626
  4066a5:	ins    BYTE PTR es:[edi],dx
  4066a6:	gs retf 
  4066a8:	mov    ecx,0x225f3a4b
  4066ad:	js     0x406708
  4066af:	xlat   BYTE PTR ds:[ebx]
  4066b0:	pop    eax
  4066b1:	fdiv   DWORD PTR [ecx+0x47a0d93e]
  4066b7:	and    edx,ecx
  4066b9:	jo     0x406648
  4066bb:	rcr    DWORD PTR [esi-0x4c],cl
  4066be:	adc    al,0xd3
  4066c0:	lahf   
  4066c1:	outs   dx,BYTE PTR ds:[esi]
  4066c2:	and    ebp,ebp
  4066c4:	add    DWORD PTR [ebx+edx*4+0x8c8a831],edi
  4066cb:	pop    DWORD PTR [ecx+eiz*8]
  4066ce:	dec    esp
  4066cf:	jp     0x406739
  4066d1:	mov    ds:0x49c18faa,al
  4066d6:	out    dx,al
  4066d7:	adc    eax,0xa85d6ea9
  4066dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066de:	fimul  DWORD PTR [ecx-0x5435b7c9]
  4066e4:	xchg   esp,eax
  4066e5:	sbb    eax,0xcd063b8c
  4066ea:	cwde   
  4066eb:	int3   
  4066ec:	dec    esp
  4066ed:	daa    
  4066ee:	pop    ebp
  4066ef:	pop    eax
  4066f0:	imul   edi,DWORD PTR [ebp+0x1e],0x60b56562
  4066f7:	pusha  
  4066f8:	push   cs
  4066f9:	scas   al,BYTE PTR es:[edi]
  4066fa:	fsubrp st(4),st
  4066fc:	shl    BYTE PTR [esi+eiz*2],0x4d
  406700:	inc    ecx
  406701:	test   dh,ah
  406703:	sbb    dh,BYTE PTR [ecx]
  406705:	icebp  
  406706:	xor    bl,ah
  406708:	mov    cl,0xa5
  40670a:	pop    edx
  40670b:	(bad)  
  40670c:	je     0x406753
  40670e:	(bad)  
  40670f:	clc    
  406710:	pop    es
  406711:	cmp    eax,0xd96a4035
  406716:	lds    edx,FWORD PTR [edx+0x3c]
  406719:	and    DWORD PTR [edi],0x65
  40671c:	daa    
  40671d:	push   0xb10b9cbd
  406722:	pop    ebx
  406723:	mov    al,ds:0x7d39f96b
  406728:	push   0xffffffb7
  40672a:	xchg   BYTE PTR [eax+0x73],ch
  40672d:	mov    ah,0xb7
  40672f:	(bad)  
  406730:	nop
  406731:	push   edx
  406732:	sar    DWORD PTR [ecx],0x13
  406735:	lods   eax,DWORD PTR ds:[esi]
  406736:	shl    DWORD PTR [ecx],0x64
  406739:	dec    eax
  40673a:	cmp    DWORD PTR [ecx],ecx
  40673c:	pop    esp
  40673d:	xor    esi,DWORD PTR [ecx]
  40673f:	cmp    cl,ah
  406741:	retf   0x1737
  406744:	aas    
  406745:	dec    edi
  406746:	pushf  
  406747:	cli    
  406748:	mov    ah,0xa9
  40674a:	mov    edx,0x9a736208
  40674f:	inc    esi
  406750:	in     al,dx
  406751:	sub    eax,0x30efb535
  406756:	out    dx,eax
  406757:	ss mov ebp,0xf7aa8550
  40675d:	call   0x3335:0x5d5c1022
  406764:	xchg   esi,eax
  406765:	pop    ss
  406766:	xchg   edx,eax
  406767:	pop    eax
  406768:	outs   dx,DWORD PTR ds:[esi]
  406769:	cs into 
  40676b:	(bad)
  40676e:	add    BYTE PTR [esp+eax*8+0x51],cl
  406772:	in     eax,0xa9
  406774:	adc    cl,BYTE PTR [ecx+eax*8]
  406777:	xchg   esp,eax
  406778:	or     BYTE PTR [ecx-0x74],0xad
  40677c:	pop    eax
  40677d:	add    DWORD PTR [ebx+0x4c98105],esp
  406783:	push   es
  406784:	add    BYTE PTR [ebp-0x1152a1f8],ah
  40678a:	push   ebp
  40678b:	shl    BYTE PTR [eax],0x31
  40678e:	enter  0xff27,0x90
  406792:	jl     0x406788
  406794:	mov    ah,0xa0
  406796:	jmp    0xfbcb:0xe2db1f7b
  40679d:	xor    ebx,DWORD PTR ds:0x8eef4d6c
  4067a3:	lds    edi,FWORD PTR [esi-0x4a55f9c4]
  4067a9:	push   cs
  4067aa:	push   ebx
  4067ab:	jp     0x40675d
  4067ad:	or     eax,DWORD PTR [ecx]
  4067af:	mov    ch,bh
  4067b1:	adc    DWORD PTR [eax],eax
  4067b3:	call   0xfeff340d
  4067b8:	std    
  4067b9:	fcomp  st(7)
  4067bb:	jb     0x406800
  4067bd:	xor    esp,DWORD PTR [edx+0x18]
  4067c0:	stos   DWORD PTR es:[edi],eax
  4067c1:	mov    al,ds:0xa94d3781
  4067c6:	scas   al,BYTE PTR es:[edi]
  4067c7:	mov    cl,0xa3
  4067c9:	dec    ebx
  4067ca:	add    eax,0xe7d4e6e4
  4067cf:	fisttp DWORD PTR [ebp+0x5cbe771e]
  4067d5:	xchg   al,bl
  4067d7:	xchg   esp,eax
  4067d8:	inc    esi
  4067d9:	xchg   esi,eax
  4067da:	jmp    0x66aa90c1
  4067df:	mov    edi,0x4ddd7a7
  4067e4:	sbb    eax,0x58fcba07
  4067e9:	pop    eax
  4067ea:	mov    ds:0x8ab518ee,eax
  4067ef:	fsub   st,st(6)
  4067f1:	pop    ss
  4067f2:	and    edi,esi
  4067f4:	mov    al,0xae
  4067f6:	data16 and al,0xe4
  4067f9:	popa   
  4067fa:	sub    edi,DWORD PTR [edx]
  4067fc:	xor    DWORD PTR [ebx+0x2b6f6dc2],edx
  406802:	jns    0x40682d
  406804:	test   BYTE PTR [edx-0x47],dh
  406807:	test   DWORD PTR [esi-0x73],ebx
  40680a:	push   ecx
  40680b:	ret    
  40680c:	paddusw mm2,QWORD PTR [ecx-0x9b463c3]
  406813:	outs   dx,BYTE PTR ds:[esi]
  406814:	push   esi
  406815:	push   es
  406816:	sub    BYTE PTR [edx],ah
  406818:	push   ecx
  406819:	daa    
  40681a:	pusha  
  40681b:	add    DWORD PTR [ebx-0x4f023162],ecx
  406821:	inc    ebx
  406822:	pop    es
  406823:	icebp  
  406824:	enter  0xbc53,0xe5
  406828:	imul   esp,DWORD PTR [eax],0xfffffff6
  40682b:	mov    dh,0xea
  40682d:	xor    esp,DWORD PTR [edx]
  40682f:	sub    eax,eax
  406831:	mov    ebx,0xb531c5c9
  406836:	push   ds
  406837:	xor    al,BYTE PTR [edi+eax*8+0x34e63a88]
  40683e:	or     al,0xe7
  406840:	cmp    eax,0x323affd
  406845:	xor    al,0x28
  406847:	sub    BYTE PTR [ecx],0xa1
  40684a:	xor    esp,DWORD PTR [ecx]
  40684c:	test   DWORD PTR ds:0xf2edcc67,ebp
  406852:	js     0x40684c
  406854:	pop    es
  406855:	jecxz  0x4068c4
  406857:	jne    0x406836
  406859:	sbb    al,0xb1
  40685b:	mov    dh,0x67
  40685d:	sbb    al,BYTE PTR [edx]
  40685f:	repnz ss fwait
  406862:	jb     0x4068a5
  406864:	div    BYTE PTR [edx+0x3f6830]
  40686a:	imul   ebp,edi,0xdcaca869
  406870:	dec    eax
  406871:	mov    ebx,DWORD PTR [eax]
  406873:	repz xchg ebp,eax
  406875:	mov    bh,0x28
  406877:	imul   ebp,DWORD PTR [edi+0x6c],0xcde667b8
  40687e:	js     0x40689d
  406880:	lods   eax,DWORD PTR ds:[esi]
  406881:	call   0x1a7dee31
  406886:	push   esp
  406887:	mov    bh,0x2d
  406889:	mov    ds:0xdabae5f9,al
  40688e:	and    eax,0xf5be8af6
  406893:	cs clc 
  406895:	mov    ecx,0xa43fba52
  40689a:	pop    ebx
  40689b:	std    
  40689c:	fisttp DWORD PTR [ebp-0xeb40e5e]
  4068a2:	mov    al,ds:0xfac0ea3f
  4068a7:	bound  ebp,QWORD PTR [edi-0x52fd8990]
  4068ad:	cmc    
  4068ae:	cli    
  4068af:	in     al,dx
  4068b0:	add    al,0x95
  4068b2:	xchg   esi,eax
  4068b3:	jp     0x4068ea
  4068b5:	retf   0xd4b1
  4068b8:	call   0x130cd1f7
  4068bd:	test   eax,0xd446e82d
  4068c2:	push   cs
  4068c3:	adc    DWORD PTR [edi-0x32],esp
  4068c6:	mov    dl,0xec
  4068c8:	lods   al,BYTE PTR ds:[esi]
  4068c9:	call   DWORD PTR [ebp+0x3d44816c]
  4068cf:	jb     0x4068b0
  4068d1:	mov    ch,0x9d
  4068d3:	inc    esi
  4068d4:	hlt    
  4068d5:	pop    ds
  4068d6:	and    DWORD PTR [esi-0x7c],esp
  4068d9:	push   esp
  4068da:	xchg   BYTE PTR [edi+0x10],dh
  4068dd:	rcl    BYTE PTR [edi-0xb],1
  4068e0:	(bad)
  4068e3:	mov    esi,0x7bfea3b9
  4068e8:	rcl    bh,0xc0
  4068eb:	add    edx,DWORD PTR [ecx]
  4068ed:	dec    esi
  4068ee:	xchg   ebx,eax
  4068ef:	scas   eax,DWORD PTR es:[edi]
  4068f0:	inc    esi
  4068f1:	test   al,0x48
  4068f3:	or     BYTE PTR [eax+ecx*1+0x35],dh
  4068f7:	jns    0x4068e7
  4068f9:	lahf   
  4068fa:	cmp    DWORD PTR [edi-0x70a9faaa],edi
  406900:	popa   
  406901:	addr16 xchg edi,eax
  406903:	mov    dl,0x47
  406905:	sbb    ecx,DWORD PTR [ecx-0x6b89dbe3]
  40690b:	and    eax,0x5898848b
  406910:	pop    esi
  406911:	jo     0x406987
  406913:	cld    
  406914:	fld    st(4)
  406916:	test   bh,0xe4
  406919:	mov    ebx,0x61164ebd
  40691e:	xlat   BYTE PTR ds:[ebx]
  40691f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406920:	sbb    al,0xa1
  406922:	rcr    DWORD PTR [ecx+0x22],0x63
  406926:	mov    dl,0xb2
  406928:	lahf   
  406929:	pop    es
  40692a:	popf   
  40692b:	xor    BYTE PTR [ecx-0x48023dd3],dl
  406931:	ss popa 
  406933:	add    dh,BYTE PTR [edi]
  406935:	pop    edx
  406936:	xchg   esi,eax
  406937:	jg     0x406936
  406939:	stos   BYTE PTR es:[edi],al
  40693a:	pushf  
  40693b:	add    BYTE PTR [eax-0x5],dl
  40693e:	sbb    al,0xa4
  406940:	sbb    DWORD PTR [ebx],esp
  406942:	push   0xee02182
  406947:	inc    ebp
  406948:	aam    0xa7
  40694a:	sbb    eax,0xfa527728
  40694f:	and    BYTE PTR [edi],ch
  406951:	push   ss
  406952:	mov    edx,0xa1c0428
  406957:	int    0x64
  406959:	mov    eax,ds:0xd23333c9
  40695e:	jmp    0x58d42e66
  406963:	sahf   
  406964:	clc    
  406965:	push   edx
  406966:	in     al,0xb1
  406968:	dec    edi
  406969:	push   esi
  40696a:	mov    al,0xc
  40696c:	fwait
  40696d:	and    edi,edx
  40696f:	data16 fdivr DWORD PTR [ebp-0x1f42efb5]
  406976:	cmp    dh,BYTE PTR [edx-0x37]
  406979:	or     eax,0xf1c3f6fa
  40697e:	ins    DWORD PTR es:[edi],dx
  40697f:	or     eax,0xf67dfaa7
  406984:	xor    ebp,DWORD PTR [edx-0x4c]
  406987:	push   ebx
  406988:	stos   BYTE PTR es:[edi],al
  406989:	mov    al,0xb2
  40698b:	shl    ecx,cl
  40698d:	xor    eax,0xf342d859
  406992:	std    
  406993:	stos   BYTE PTR es:[edi],al
  406994:	cmp    edx,DWORD PTR [edx]
  406996:	jle    0x4069a1
  406998:	pop    ebp
  406999:	xor    BYTE PTR [ebx-0x2c],al
  40699c:	sub    cl,BYTE PTR [edx+0x554069ba]
  4069a2:	mov    BYTE PTR [esi-0x37],0x7c
  4069a6:	ror    DWORD PTR [ebx+0x41aa7f8d],0x52
  4069ad:	je     0x4069db
  4069af:	aam    0xbf
  4069b1:	push   0x1c52760a
  4069b6:	out    dx,al
  4069b7:	ror    DWORD PTR [ebx+esi*8+0x11],0x84
  4069bc:	add    BYTE PTR [ebx+ecx*1+0x65],ah
  4069c0:	ret    0x8bf0
  4069c3:	imul   eax,ebx,0x39493a01
  4069c9:	arpl   WORD PTR [ecx],di
  4069cb:	and    ebx,ecx
  4069cd:	sbb    dl,cl
  4069cf:	dec    edi
  4069d0:	cmp    bh,cl
  4069d2:	clc    
  4069d3:	mov    al,ds:0x6c2676c8
  4069d8:	mov    cl,BYTE PTR [edi+ebx*2-0x403285eb]
  4069df:	sbb    ebx,DWORD PTR [edi+ebp*8+0x3912fd24]
  4069e6:	dec    ecx
  4069e7:	sbb    al,0x93
  4069e9:	ins    BYTE PTR es:[edi],dx
  4069ea:	ins    DWORD PTR es:[edi],dx
  4069eb:	sbb    BYTE PTR [eax],bl
  4069ed:	cld    
  4069ee:	(bad)  
  4069ef:	dec    ebx
  4069f0:	dec    ebp
  4069f1:	div    cl
  4069f3:	retf   
  4069f4:	scas   eax,DWORD PTR es:[edi]
  4069f5:	pop    edi
  4069f6:	call   0x26c5ab5c
  4069fb:	int    0xb9
  4069fd:	test   al,0x51
  4069ff:	push   es
  406a00:	jmp    0xbcd12000
  406a05:	icebp  
  406a06:	fbld   TBYTE PTR [ecx-0x231159ad]
  406a0c:	mov    edx,0xe578392e
  406a11:	xor    al,0x7e
  406a13:	or     dh,ah
  406a15:	rcl    BYTE PTR [esi+0x3142d2e],cl
  406a1b:	xor    eax,0x7181f7a0
  406a20:	shl    BYTE PTR [edi],0xf8
  406a23:	lods   al,BYTE PTR ds:[esi]
  406a24:	leave  
  406a25:	mov    ebx,0xeca37d32
  406a2a:	mov    dh,ah
  406a2c:	mov    ebx,0x86e50221
  406a31:	push   0x4fefb309
  406a36:	dec    ecx
  406a37:	iret   
  406a38:	and    BYTE PTR [edx-0x53c1421a],dl
  406a3e:	shl    DWORD PTR [edx-0x5ce7af26],0x5b
  406a45:	push   ebp
  406a46:	cmp    eax,DWORD PTR [eax]
  406a48:	push   es
  406a49:	inc    ebx
  406a4a:	jb     0x406aa3
  406a4c:	dec    eax
  406a4d:	inc    ebx
  406a4e:	add    edi,DWORD PTR es:[esi]
  406a51:	sub    ebx,DWORD PTR ds:0x642451dd
  406a57:	fisubr DWORD PTR [ecx]
  406a59:	fadd   DWORD PTR [ebx-0x4]
  406a5c:	push   esi
  406a5d:	jb     0x406acb
  406a5f:	inc    ebp
  406a60:	mov    dh,BYTE PTR [esi+edx*4]
  406a63:	retf   
  406a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a65:	out    0x96,al
  406a67:	test   BYTE PTR [ecx+0x32],0x6d
  406a6b:	inc    eax
  406a6c:	xchg   BYTE PTR [esi+0x9158894],bh
  406a72:	hlt    
  406a73:	xchg   BYTE PTR [ebp-0xa],al
  406a76:	inc    eax
  406a77:	mov    BYTE PTR [ecx+ecx*8],al
  406a7a:	sub    ch,BYTE PTR [ebx-0x142698e8]
  406a80:	push   esi
  406a81:	sub    BYTE PTR [esi+0x29a3507c],bh
  406a87:	mov    al,0x3e
  406a89:	mov    DWORD PTR [ecx+0x4d],eax
  406a8c:	jno    0x406aec
  406a8e:	dec    edx
  406a8f:	es mov ebx,edx
  406a92:	pop    ss
  406a93:	inc    ebx
  406a94:	jbe    0x406a2d
  406a96:	sbb    al,0x1d
  406a98:	xor    bh,al
  406a9a:	das    
  406a9b:	add    DWORD PTR [esi+0x77ba02ff],edi
  406aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aa2:	sub    cl,bl
  406aa4:	or     eax,0xcd45b1dd
  406aa9:	xor    eax,0xe8f023e0
  406aae:	mov    ss,WORD PTR [ebx-0x58]
  406ab1:	call   0xad0804ae
  406ab6:	xor    bl,BYTE PTR [edx]
  406ab8:	xor    al,0x1e
  406aba:	call   0xaad8:0xadd4d76b
  406ac1:	or     ah,BYTE PTR [ebp-0x22]
  406ac4:	aam    0xd
  406ac6:	and    DWORD PTR [edx],ebx
  406ac8:	xchg   esi,eax
  406ac9:	test   eax,0xb5fb6d1e
  406ace:	retf   0xb70a
  406ad1:	ficom  DWORD PTR [edx]
  406ad3:	ds and eax,0x625ab4
  406ad9:	ret    0xc07e
  406adc:	jb     0x406a66
  406ade:	and    DWORD PTR [edi+0x5ec14df6],edx
  406ae4:	sub    al,0x4
  406ae6:	jbe    0x406a99
  406ae8:	mov    ebx,0x146672c0
  406aed:	or     al,0xf3
  406aef:	xor    ecx,DWORD PTR [ebx]
  406af1:	mov    dh,0x87
  406af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406af4:	mov    ds:0x922f6e78,al
  406af9:	in     eax,dx
  406afa:	dec    esp
  406afb:	cli    
  406afc:	fistp  WORD PTR [esi-0x65c09711]
  406b02:	fsubr  DWORD PTR [ebx+0xdb9627]
  406b08:	push   ecx
  406b09:	xchg   esi,eax
  406b0a:	jb     0x406b87
  406b0c:	dec    eax
  406b0d:	add    al,0xf2
  406b0f:	sbb    dh,ah
  406b11:	je     0x406b00
  406b13:	mov    edx,0x423b7be6
  406b18:	and    ch,ah
  406b1a:	dec    ecx
  406b1b:	nop
  406b1c:	jmp    0x406b57
  406b1e:	pop    edi
  406b1f:	push   cs
  406b20:	xor    esp,ebp
  406b22:	jmp    0xfbcbfbe5
  406b27:	(bad)  
  406b28:	(bad)  
  406b2a:	test   eax,0xc16bcb3b
  406b2f:	imul   ebx,edi,0xffffffbd
  406b32:	sbb    al,0xb9
  406b34:	xchg   esp,eax
  406b35:	jae    0x406b7c
  406b37:	dec    esi
  406b38:	jmp    0x7225e016
  406b3d:	adc    BYTE PTR [eax+0x7ce5a012],dl
  406b43:	pop    ecx
  406b44:	call   0x893:0x340e7ba6
  406b4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b4c:	push   ebx
  406b4d:	outs   dx,DWORD PTR ds:[esi]
  406b4e:	pop    edx
  406b4f:	mov    cl,0x6d
  406b51:	ret    
  406b52:	hlt    
  406b53:	(bad)  
  406b54:	sti    
  406b55:	push   ss
  406b56:	loopne 0x406b8e
  406b58:	repz mov dl,0xa2
  406b5b:	ins    BYTE PTR es:[edi],dx
  406b5c:	cmp    al,0x79
  406b5e:	pop    edx
  406b5f:	lock and al,0x6a
  406b62:	dec    eax
  406b63:	mov    ds:0x776f4acf,eax
  406b68:	jo     0x406af1
  406b6a:	fisttp DWORD PTR [esi]
  406b6c:	es add eax,0xac3381db
  406b72:	or     esp,eax
  406b74:	jno    0x406b6d
  406b76:	out    dx,eax
  406b77:	aam    0x52
  406b79:	jge    0x406b51
  406b7b:	pop    esp
  406b7c:	loop   0x406b14
  406b7e:	lds    esi,FWORD PTR [edx-0x21e8b611]
  406b84:	jbe    0x406bea
  406b86:	cmp    al,0xbb
  406b88:	leave  
  406b89:	push   esi
  406b8a:	imul   edi,DWORD PTR [edx-0x25],0x4181b014
  406b91:	add    ch,BYTE PTR [esi]
  406b93:	jge    0x406be2
  406b95:	add    BYTE PTR [ebp-0xa],cl
  406b98:	into   
  406b99:	mov    DWORD PTR [ebx-0x38],ebx
  406b9c:	inc    esp
  406b9d:	jecxz  0x406b4d
  406b9f:	sub    BYTE PTR [ecx],0x21
  406ba2:	clc    
  406ba3:	sbb    eax,0xb11a29b
  406ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ba9:	pop    esi
  406baa:	cld    
  406bab:	jno    0x406bc3
  406bad:	dec    esp
  406bae:	repnz repz cs cli 
  406bb2:	push   ecx
  406bb3:	outs   dx,DWORD PTR ds:[esi]
  406bb4:	stc    
  406bb5:	test   ebx,ecx
  406bb7:	add    ebx,eax
  406bb9:	xor    DWORD PTR [edx+ecx*2+0x4c],esi
  406bbd:	mov    ch,0x27
  406bbf:	sar    DWORD PTR [ebx-0x5dcc9cde],0xad
  406bc6:	mov    edx,0xe638ea9f
  406bcb:	pop    ebx
  406bcc:	mov    cl,0x80
  406bce:	in     eax,dx
  406bcf:	lds    esi,FWORD PTR [ebp-0x261a46ea]
  406bd5:	push   ss
  406bd6:	out    0x23,eax
  406bd8:	retf   0xe4e6
  406bdb:	push   es
  406bdc:	adc    ah,al
  406bde:	inc    edi
  406bdf:	cmp    eax,0x4933a860
  406be4:	jb     0x406b68
  406be6:	jecxz  0x406c00
  406be8:	push   ebx
  406be9:	mov    dl,BYTE PTR [edx+0x19364b1d]
  406bef:	mov    BYTE PTR [ebx+0x513bed59],dh
  406bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bf6:	imul   edi,DWORD PTR [ebp+0x78],0xfdbe3633
  406bfd:	and    edx,esi
  406bff:	sub    eax,0x5579a84d
  406c04:	imul   ebx,DWORD PTR [ecx-0x40],0x650ba01b
  406c0b:	mov    ds:0xc5db217,al
  406c10:	push   ebx
  406c11:	std    
  406c12:	out    0x3f,al
  406c14:	int    0x8b
  406c16:	xchg   bl,bl
  406c18:	dec    edi
  406c19:	int    0xff
  406c1b:	push   edi
  406c1c:	push   ebp
  406c1d:	lea    edi,[ecx+edi*4+0x7c]
  406c21:	icebp  
  406c22:	jb     0x406c1b
  406c24:	fdivrp st(4),st
  406c26:	add    DWORD PTR [esi],edi
  406c28:	jnp    0x406ca1
  406c2a:	inc    esp
  406c2b:	sbb    BYTE PTR [edx+0x69f59a15],0xec
  406c32:	pop    edi
  406c33:	in     eax,0x7f
  406c35:	stos   DWORD PTR es:[edi],eax
  406c36:	jmp    0x406c6d
  406c38:	push   0xc
  406c3a:	push   0xf933de2e
  406c3f:	mov    gs,WORD PTR [eax+0x23]
  406c42:	dec    ebx
  406c43:	xor    al,0x7a
  406c45:	(bad)  
  406c46:	enter  0xa70e,0x61
  406c4a:	sbb    DWORD PTR [edx],ebp
  406c4c:	adc    eax,0xfd8f666
  406c51:	popf   
  406c52:	push   0x18
  406c54:	mov    DWORD PTR [eax],eax
  406c56:	mov    eax,0x1a1fa84c
  406c5b:	cmp    BYTE PTR [esi+esi*8],bl
  406c5e:	add    ah,BYTE PTR [esi+ecx*4+0x7]
  406c62:	mov    ds:0x2ec4c889,al
  406c67:	jae    0x406cd6
  406c69:	push   ss
  406c6a:	je     0x406ca9
  406c6c:	dec    esi
  406c6d:	inc    eax
  406c6e:	push   ss
  406c6f:	in     al,dx
  406c70:	add    eax,0x7ccbcd36
  406c75:	xchg   BYTE PTR [ebx+eiz*8-0x16395180],dl
  406c7c:	push   0x61
  406c7e:	loope  0x406c1b
  406c80:	ret    
  406c81:	inc    eax
  406c82:	pop    edi
  406c83:	sar    BYTE PTR [edx-0x2d],cl
  406c86:	js     0x406c33
  406c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c89:	jl     0x406ca4
  406c8b:	bound  edi,QWORD PTR [esi-0x21090c96]
  406c91:	cld    
  406c92:	test   BYTE PTR [edx],0x15
  406c95:	or     DWORD PTR [ecx],esi
  406c97:	arpl   dx,dx
  406c99:	(bad)  
  406c9a:	sti    
  406c9b:	repz lock mov edi,0xbad53adf
  406ca2:	movntq QWORD PTR [edi+0x13],mm3
  406ca6:	(bad)  
  406ca7:	sub    al,0x43
  406ca9:	aam    0xb8
  406cab:	push   ebp
  406cac:	jne    0x406c5b
  406cae:	adc    al,0x64
  406cb0:	pop    ebp
  406cb1:	jmp    DWORD PTR [ebp+0x7c22130c]
  406cb7:	data16 mov al,0x2a
  406cba:	cmp    eax,0xc4957023
  406cbf:	jo     0x406c70
  406cc1:	outs   dx,BYTE PTR ds:[esi]
  406cc2:	repz mov ebx,0x97544d32
  406cc8:	arpl   ax,bx
  406cca:	mov    DWORD PTR [ebx-0x5434c9f3],0xbee9352c
  406cd4:	sahf   
  406cd5:	push   ss
  406cd6:	inc    ebx
  406cd7:	daa    
  406cd8:	sub    bl,ah
  406cda:	nop
  406cdb:	mov    ?,eax
  406cdd:	push   edi
  406cde:	pusha  
  406cdf:	mov    ebx,0x82143be1
  406ce4:	sbb    DWORD PTR [edi-0x6a],eax
  406ce7:	repz imul edi,DWORD PTR [edx+0x71],0x5e
  406cec:	mov    esi,0x732f26c3
  406cf1:	mov    dh,0xf3
  406cf3:	sub    bh,BYTE PTR [ecx+0x6db864da]
  406cf9:	adc    DWORD PTR [ecx],edi
  406cfb:	ret    0x4b36
  406cfe:	push   ebp
  406cff:	loope  0x406d64
  406d01:	sbb    bl,BYTE PTR [edi-0x77e28569]
  406d07:	aad    0x83
  406d09:	dec    ecx
  406d0a:	scas   al,BYTE PTR es:[edi]
  406d0b:	push   es
  406d0c:	dec    esi
  406d0d:	pop    ebx
  406d0e:	adc    BYTE PTR [edx-0x55],0xf1
  406d12:	dec    ecx
  406d13:	out    0x66,eax
  406d15:	mov    ds:0xb2b46263,eax
  406d1a:	jns    0x406d4f
  406d1c:	dec    edx
  406d1d:	ret    0x11b3
  406d20:	add    cl,BYTE PTR [edi+eax*4]
  406d23:	sub    ebp,DWORD PTR [edi]
  406d25:	push   ebx
  406d26:	sub    al,0xb4
  406d28:	nop
  406d29:	mov    ebx,0xccd881ad
  406d2e:	jb     0x406cfc
  406d30:	or     ebp,DWORD PTR [ebp-0x73ff13da]
  406d36:	mov    ?,eax
  406d38:	pop    es
  406d39:	mov    WORD PTR [eax-0x15],ds
  406d3c:	adc    DWORD PTR [ebx+0x40d6a906],esp
  406d42:	jp     0x406d5b
  406d44:	xor    ecx,DWORD PTR [edi]
  406d46:	stos   BYTE PTR es:[edi],al
  406d47:	xchg   edi,eax
  406d48:	push   ds
  406d49:	inc    ebx
  406d4a:	fwait
  406d4b:	imul   ebx,DWORD PTR [esi-0x3c2747b6],0xffffffcc
  406d52:	call   0xa652:0xe91e0ebe
  406d59:	mov    bl,0x17
  406d5b:	std    
  406d5c:	fcom   DWORD PTR [ebx-0x4aaba617]
  406d62:	out    0x8,eax
  406d64:	aad    0x38
  406d66:	lods   al,BYTE PTR ds:[esi]
  406d67:	or     DWORD PTR [ebp-0xd],edx
  406d6a:	(bad)  
  406d6b:	in     al,dx
  406d6c:	inc    edx
  406d6d:	cmp    al,0xcb
  406d6f:	or     esi,eax
  406d71:	push   edx
  406d72:	loopne 0x406d70
  406d74:	inc    ebx
  406d75:	(bad)  
  406d76:	xchg   ecx,eax
  406d77:	sub    bl,bl
  406d79:	lds    ebx,FWORD PTR ds:0x1731b173
  406d7f:	jecxz  0x406d77
  406d81:	nop
  406d82:	fistp  WORD PTR [esi-0x32172d1e]
  406d88:	call   0x13e10c7c
  406d8d:	fstp   QWORD PTR [ebx-0x3a]
  406d90:	aaa    
  406d91:	inc    ebp
  406d92:	sub    eax,0x8ef3d191
  406d97:	add    BYTE PTR [esi],ah
  406d99:	jmp    0x406d57
  406d9b:	add    al,al
  406d9d:	jns    0x406dc6
  406d9f:	mov    ebx,0x6f78dc0e
  406da4:	or     ecx,ebx
  406da6:	mov    ah,0xc9
  406da8:	rol    DWORD PTR [ebx+0x99853bb],0xa6
  406daf:	jge    0x406d9f
  406db1:	sbb    al,0x15
  406db3:	test   al,0x58
  406db5:	jmp    0x406dd3
  406db7:	cli    
  406db8:	xor    DWORD PTR ds:0x50d860d0,edx
  406dbe:	jecxz  0x406d56
  406dc0:	daa    
  406dc1:	cli    
  406dc2:	dec    ebp
  406dc3:	pop    ecx
  406dc4:	jo     0x406df5
  406dc6:	mov    edx,0x6b1ab2bb
  406dcb:	sbb    eax,0x933eab2e
  406dd0:	dec    esi
  406dd1:	jmp    0x278e:0x5f2cb6c0
  406dd8:	or     al,0x1c
  406dda:	push   ds
  406ddb:	or     al,0xd3
  406ddd:	xor    dl,bh
  406ddf:	sbb    eax,0x8a4ef14b
  406de4:	imul   ebx,ebx,0x1ed51be6
  406dea:	mov    edi,0xa76c7dee
  406def:	lds    edx,FWORD PTR [ebx+0x1a]
  406df2:	adc    DWORD PTR [eax+0x4c],0x67
  406df6:	pop    ss
  406df7:	scas   eax,DWORD PTR es:[edi]
  406df8:	sub    eax,0x8b4fcd3
  406dfd:	cld    
  406dfe:	jmp    0x5f76d555
  406e03:	int3   
  406e04:	jbe    0x406dc6
  406e06:	pop    esi
  406e07:	mov    ah,0x72
  406e09:	cs jecxz 0x406e46
  406e0c:	call   0x40b51b27
  406e11:	cmp    BYTE PTR [eax+eax*2+0x7b],ch
  406e15:	jge    0x406df1
  406e17:	xchg   ebx,eax
  406e18:	cs out 0xba,al
  406e1b:	les    ebp,FWORD PTR [ebx-0x2f]
  406e1e:	imul   eax,DWORD PTR [eax+0x12d01444],0x29
  406e25:	cmp    BYTE PTR [esi],cl
  406e27:	mov    WORD PTR [ebx],gs
  406e29:	fdecstp 
  406e2b:	add    cl,BYTE PTR [edx-0x64]
  406e2e:	push   0x1071dc6f
  406e33:	ss push ecx
  406e35:	cmp    ah,bl
  406e37:	jge    0x406e3f
  406e39:	dec    esp
  406e3a:	mov    WORD PTR [eax-0x19],?
  406e3d:	cld    
  406e3e:	test   ch,bl
  406e40:	and    eax,DWORD PTR [ebx-0x6d]
  406e43:	xlat   BYTE PTR ds:[ebx]
  406e44:	push   ecx
  406e45:	test   al,0xa3
  406e47:	fcomp  DWORD PTR [eax+0x6478f98a]
  406e4d:	pop    esp
  406e4e:	xor    eax,0x521a37d0
  406e53:	mov    bl,0xd8
  406e55:	add    esp,ebp
  406e57:	outs   dx,BYTE PTR ds:[esi]
  406e58:	inc    edx
  406e59:	nop
  406e5a:	cld    
  406e5b:	add    ax,0xf5ac
  406e5f:	pushf  
  406e60:	inc    esp
  406e61:	and    ebp,DWORD PTR [edi+0x7edff3c0]
  406e67:	pop    es
  406e68:	xchg   ebx,eax
  406e69:	lock fsubr st(2),st
  406e6c:	xchg   ebx,eax
  406e6d:	jge    0x406e6f
  406e6f:	xor    edx,esi
  406e71:	pop    ds
  406e72:	push   ds
  406e73:	mov    ecx,0x7e06d011
  406e78:	sbb    al,0xda
  406e7a:	adc    esp,edx
  406e7c:	xchg   ecx,eax
  406e7d:	retf   
  406e7e:	imul   ebx,DWORD PTR [ebx],0xffffff8b
  406e81:	cs sub eax,0x6cb371a4
  406e87:	and    cl,dl
  406e89:	loope  0x406eab
  406e8b:	jmp    0x7570:0xd1759219
  406e92:	sub    BYTE PTR fs:[eax],dl
  406e95:	xlat   BYTE PTR ds:[ebx]
  406e96:	dec    edx
  406e97:	jmp    0x7253:0x8f1d2e89
  406e9e:	xlat   BYTE PTR ds:[ebx]
  406e9f:	pop    eax
  406ea0:	out    dx,al
  406ea1:	imul   edi,DWORD PTR [ecx],0xee55ca1e
  406ea7:	inc    eax
  406ea8:	jmp    0x42a413b2
  406ead:	dec    ebp
  406eae:	test   al,ah
  406eb0:	data16 arpl WORD PTR [edi-0x12],bp
  406eb4:	call   0x645d:0xaac33d70
  406ebb:	scas   al,BYTE PTR es:[edi]
  406ebc:	out    0x28,al
  406ebe:	inc    edi
  406ebf:	jne    0x406e6d
  406ec1:	or     BYTE PTR [edx+0x11],cl
  406ec4:	call   edi
  406ec6:	xchg   ebp,eax
  406ec7:	push   edx
  406ec8:	into   
  406ec9:	push   eax
  406eca:	cld    
  406ecb:	(bad)  
  406ecc:	and    esi,edi
  406ece:	gs icebp 
  406ed0:	sub    eax,0x4cfb1baf
  406ed5:	loopne 0x406ef6
  406ed7:	push   edi
  406ed8:	mov    ch,ch
  406eda:	sbb    al,0x4c
  406edc:	sub    BYTE PTR [edi+0x79],dl
  406edf:	pop    es
  406ee0:	or     BYTE PTR [esi+ebp*8-0x9],ch
  406ee4:	pop    ebp
  406ee5:	cli    
  406ee6:	inc    eax
  406ee7:	std    
  406ee8:	or     BYTE PTR [esi+0x4],ah
  406eeb:	push   ds
  406eec:	setnp  BYTE PTR [edx+0x36]
  406ef0:	clc    
  406ef1:	mov    bl,0xc8
  406ef3:	lock xchg ebx,eax
  406ef5:	stos   BYTE PTR es:[edi],al
  406ef6:	dec    ebp
  406ef7:	adc    ecx,ebx
  406ef9:	fbld   TBYTE PTR [ebx-0x5f]
  406efc:	sub    BYTE PTR [edx],cl
  406efe:	rcl    DWORD PTR [eax+0x1e],cl
  406f01:	cld    
  406f02:	sbb    ch,BYTE PTR [ebx+0x7a57e13f]
  406f08:	mov    DWORD PTR [eax+0x78],edx
  406f0b:	pmulhuw mm1,QWORD PTR [eax]
  406f0e:	fst    st(0)
  406f10:	inc    esi
  406f11:	dec    edx
  406f12:	scas   al,BYTE PTR es:[edi]
  406f13:	jbe    0x406efb
  406f15:	add    BYTE PTR fs:[ebx-0x2b],ch
  406f19:	and    DWORD PTR [ebx],0x7d337d12
  406f1f:	inc    eax
  406f20:	fsub   QWORD PTR [ebx+0x2b]
  406f23:	xchg   ebp,eax
  406f24:	adc    DWORD PTR [esi],eax
  406f26:	inc    ecx
  406f27:	out    0xc3,eax
  406f29:	sbb    BYTE PTR [edx],0xea
  406f2c:	inc    ebp
  406f2d:	mov    eax,ds:0x5b935bb0
  406f32:	add    DWORD PTR [ecx-0x7af90208],ebx
  406f38:	sar    ecx,cl
  406f3a:	xor    ebx,edx
  406f3c:	adc    ebp,DWORD PTR [eax]
  406f3e:	sbb    BYTE PTR [edx-0x3758b488],al
  406f44:	ja     0x406efa
  406f46:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  406f48:	and    edx,DWORD PTR [edi]
  406f4a:	ret    0x9f4c
  406f4d:	retf   0x65cc
  406f50:	repnz fucom st(4)
  406f53:	pop    ss
  406f54:	aaa    
  406f55:	push   esi
  406f56:	sub    ch,0x8e
  406f59:	sbb    DWORD PTR [eax],eax
  406f5b:	repnz xor dl,dl
  406f5e:	sub    BYTE PTR [ebp-0x8],dh
  406f61:	addr16 sbb al,0x84
  406f64:	pop    edx
  406f65:	hlt    
  406f66:	adc    BYTE PTR [ecx+0x2608771a],0x9b
  406f6d:	addr16 push esp
  406f6f:	add    bh,BYTE PTR ds:0x61ac0dc1
  406f75:	xchg   edi,eax
  406f76:	(bad)  
  406f77:	sub    al,0x23
  406f79:	retf   
  406f7a:	xchg   edx,eax
  406f7b:	sahf   
  406f7c:	xchg   esi,eax
  406f7d:	cmc    
  406f7e:	aaa    
  406f7f:	mov    ecx,0x47f9ac6
  406f84:	sub    BYTE PTR [esi-0x109e49d7],dl
  406f8a:	sar    BYTE PTR [edx+0x25],0x84
  406f8e:	inc    esp
  406f8f:	cmp    eax,0x8b20d2ba
  406f94:	mov    ds:0x557f89ad,al
  406f99:	outs   dx,DWORD PTR ds:[si]
  406f9b:	jmp    0x72b0b6e2
  406fa0:	sbb    bh,BYTE PTR [eax]
  406fa2:	mov    cl,0x81
  406fa4:	sub    edi,DWORD PTR [esi]
  406fa6:	mov    dl,0x74
  406fa8:	sbb    eax,0xa898b8ca
  406fad:	cmp    eax,0x3ef7aef3
  406fb2:	pusha  
  406fb3:	push   0xffffffe7
  406fb5:	jp     0x406fe2
  406fb7:	mov    ecx,0xf3ca66f2
  406fbc:	(bad)  
  406fbd:	sbb    edi,DWORD PTR [eax+0x6408bce4]
  406fc3:	into   
  406fc4:	sbb    DWORD PTR [ecx-0x1c8d2752],esp
  406fca:	or     ecx,0xa84618fa
  406fd0:	or     BYTE PTR [edi+0x2b9ecdbb],0x2e
  406fd7:	mov    bh,0x9d
  406fd9:	cmp    DWORD PTR [edx+0x3d89b3cf],esi
  406fdf:	push   ebx
  406fe0:	dec    eax
  406fe1:	inc    ecx
  406fe2:	ror    BYTE PTR [edi],1
  406fe4:	sub    al,0xdf
  406fe6:	add    al,0x4d
  406fe8:	fcomp  QWORD PTR [esi]
  406fea:	in     al,0xca
  406fec:	(bad)  
  406fed:	cld    
  406fee:	xor    eax,0x9c969065
  406ff3:	mov    esi,0x91ddd14a
  406ff8:	retf   0x2ed6
  406ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ffc:	mov    ds:0x45f829f0,eax
  407001:	pop    esp
  407002:	and    al,0x90
  407004:	cmp    bl,BYTE PTR [eax-0x13]
  407007:	cmp    edi,DWORD PTR [edi+0x78]
  40700a:	xchg   edi,eax
  40700b:	jg     0x40700f
  40700d:	sbb    al,0xe1
  40700f:	call   0xbbe0afc4
  407014:	out    0xd8,eax
  407016:	loop   0x40703f
  407018:	lea    esp,[edx+0xa13e12f]
  40701e:	daa    
  40701f:	ret    0x6d72
  407022:	lock and eax,0xe667747e
  407028:	ror    BYTE PTR [esi+0x1cac094e],cl
  40702e:	mov    DWORD PTR [ebx+0x3844cdfc],ebp
  407034:	retf   
  407035:	mov    DWORD PTR ds:0x9670b40,esi
  40703b:	jmp    0x5843:0x5eff1b41
  407042:	fdiv   st(4),st
  407044:	lea    ecx,[edx]
  407046:	in     al,0x0
  407048:	or     edx,DWORD PTR [edx]
  40704a:	in     eax,0x65
  40704c:	in     al,dx
  40704d:	mov    ecx,0x42793318
  407052:	push   eax
  407053:	mov    al,0x77
  407055:	enter  0x7496,0x69
  407059:	dec    ecx
  40705a:	sub    al,0xce
  40705c:	stc    
  40705d:	int3   
  40705e:	sub    ah,BYTE PTR [ebp-0x11]
  407061:	mov    esi,0xe6751212
  407066:	ds inc ecx
  407068:	or     esi,DWORD PTR [edx]
  40706a:	pop    edx
  40706b:	out    0xbf,al
  40706d:	int    0x3a
  40706f:	stos   BYTE PTR es:[edi],al
  407070:	or     dh,bh
  407072:	dec    edx
  407073:	inc    ebx
  407074:	xchg   esi,eax
  407075:	cmp    eax,0xc07dcb10
  40707a:	cld    
  40707b:	popa   
  40707c:	sub    ebp,DWORD PTR ds:0xaf542b4a
  407082:	cmp    ebx,DWORD PTR [edx]
  407084:	pushf  
  407085:	lds    ecx,FWORD PTR [ecx]
  407087:	sahf   
  407088:	sub    eax,0xeab54d48
  40708d:	cmc    
  40708e:	push   esi
  40708f:	inc    ebx
  407090:	ret    
  407091:	fisub  WORD PTR [eax-0x7d4c0f50]
  407097:	and    eax,esp
  407099:	sub    ah,BYTE PTR ds:0xda24cf3e
  40709f:	adc    al,BYTE PTR [ecx+esi*8+0x56aba736]
  4070a6:	fidivr WORD PTR [esi-0x515b6e05]
  4070ac:	aad    0xbf
  4070ae:	outs   dx,BYTE PTR ds:[esi]
  4070af:	sbb    eax,0x879f6929
  4070b4:	xor    al,0xaa
  4070b6:	pop    esi
  4070b7:	sbb    al,0x9d
  4070b9:	xor    al,0x9
  4070bb:	push   esi
  4070bc:	pop    ecx
  4070bd:	mov    edi,0x8fb28536
  4070c2:	dec    eax
  4070c3:	data16 cmp al,0x80
  4070c6:	xchg   BYTE PTR [edi],ch
  4070c8:	dec    ebx
  4070c9:	in     eax,0xc9
  4070cb:	ins    BYTE PTR es:[edi],dx
  4070cc:	inc    ebx
  4070cd:	and    dl,BYTE PTR [ebx+ecx*4-0x450cb67e]
  4070d4:	adc    DWORD PTR [edx],0xffffffd4
  4070d7:	push   es
  4070d8:	mov    ch,0x71
  4070da:	icebp  
  4070db:	push   ebp
  4070dc:	pop    ebx
  4070dd:	sub    eax,0x5103629d
  4070e2:	adc    al,0x8a
  4070e4:	mov    ecx,0x9876d400
  4070e9:	aaa    
  4070ea:	pop    ds
  4070eb:	push   ebx
  4070ec:	xor    dl,BYTE PTR [eax+0x43]
  4070ef:	cmp    al,0xa1
  4070f1:	xor    al,0xe
  4070f3:	(bad)  
  4070f4:	bound  esi,QWORD PTR [ecx-0x294738c7]
  4070fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070fb:	fisttp QWORD PTR [ebp-0xb]
  4070fe:	adc    eax,0xbef326e6
  407103:	loop   0x407103
  407105:	adc    ebx,ebx
  407107:	pop    esi
  407108:	pop    ecx
  407109:	js     0x407104
  40710b:	and    BYTE PTR [ecx+eax*8+0x38],dl
  40710f:	popa   
  407110:	retf   0x7011
  407113:	mov    DWORD PTR [esi-0x4c],edi
  407116:	sbb    eax,DWORD PTR [esi]
  407118:	xor    BYTE PTR [ebx-0x13],ch
  40711b:	xor    ecx,DWORD PTR [edi+eiz*1]
  40711e:	fst    st(0)
  407120:	std    
  407121:	loopne 0x407189
  407123:	enter  0xb967,0xf6
  407127:	fadd   st,st(1)
  407129:	int    0x50
  40712b:	cmp    DWORD PTR [ecx],esi
  40712d:	inc    esi
  40712e:	in     eax,0xbc
  407130:	aaa    
  407131:	or     bl,BYTE PTR ds:0xe211d49
  407137:	cmp    dl,al
  407139:	das    
  40713a:	mov    WORD PTR [edi-0x73],fs
  40713d:	add    al,0xdb
  40713f:	mov    bl,0xa
  407141:	and    edi,0x58
  407144:	and    DWORD PTR [edi-0x7ccab4cb],ebx
  40714a:	pminsw mm0,QWORD PTR [esi-0x563c5c7]
  407151:	lahf   
  407152:	neg    DWORD PTR [esi-0x3952a3e]
  407158:	add    eax,0xcb4e52e5
  40715d:	mov    edx,DWORD PTR [eax]
  40715f:	in     eax,dx
  407160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407161:	inc    esi
  407162:	dec    esp
  407163:	je     0x407111
  407165:	andps  xmm1,XMMWORD PTR [ecx]
  407168:	in     al,dx
  407169:	sti    
  40716a:	std    
  40716b:	pusha  
  40716c:	mov    edx,0xbce12954
  407171:	add    edi,DWORD PTR gs:[ecx]
  407174:	jmp    esi
  407176:	and    al,0xec
  407178:	xchg   BYTE PTR [esi-0x6c],ch
  40717b:	add    eax,0x15e69333
  407180:	xchg   edx,eax
  407181:	aas    
  407182:	xor    ah,BYTE PTR [ecx+esi*8+0x2f]
  407186:	cdq    
  407187:	aad    0xf8
  407189:	mov    eax,0xd6cbf367
  40718e:	push   ss
  40718f:	sub    BYTE PTR [eax],ah
  407191:	cmp    eax,DWORD PTR [ebx]
  407193:	xor    ebp,eax
  407195:	mov    cl,ah
  407197:	mov    eax,0xb6920390
  40719c:	pop    ss
  40719d:	ins    BYTE PTR es:[edi],dx
  40719e:	push   0xffffffcd
  4071a0:	cwde   
  4071a1:	and    al,0x80
  4071a3:	jne    0x407194
  4071a5:	dec    ebx
  4071a6:	lods   eax,DWORD PTR ds:[esi]
  4071a7:	fadd   st(0),st
  4071a9:	jmp    0x4071f1
  4071ab:	shr    BYTE PTR [edi-0x16360505],1
  4071b1:	mov    ds:0xa6db3ba8,eax
  4071b6:	ja     0x407212
  4071b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071b9:	add    eax,0xbca5df4
  4071be:	fs jno 0x407207
  4071c1:	jp     0x40715f
  4071c3:	(bad)
  4071c6:	mov    ds:0x4514fadb,al
  4071cb:	out    0x1d,al
  4071cd:	int    0xb1
  4071cf:	int    0x21
  4071d1:	adc    edx,DWORD PTR [edx-0x76839d3f]
  4071d7:	cdq    
  4071d8:	mov    ds:0xff76ae77,eax
  4071dd:	sbb    eax,0x31f62d2a
  4071e2:	outs   dx,DWORD PTR ds:[esi]
  4071e3:	popf   
  4071e4:	and    bl,BYTE PTR [esi-0x4d]
  4071e7:	xchg   edi,eax
  4071e8:	jns    0x40723b
  4071ea:	or     ch,ch
  4071ec:	ja     0x407191
  4071ee:	dec    eax
  4071ef:	sbb    ebp,DWORD PTR [ebx+0x9a738a5]
  4071f5:	sub    al,0xe
  4071f7:	nop
  4071f8:	dec    edi
  4071f9:	dec    ebp
  4071fa:	inc    esp
  4071fb:	lea    ebx,[eax+0x7b]
  4071fe:	or     ebx,esp
  407200:	mov    ah,0xbf
  407202:	jle    0x4071f9
  407204:	adc    esp,esi
  407206:	idiv   DWORD PTR [eax+0x4b]
  407209:	test   eax,0x793f5ff9
  40720e:	mov    bl,0xb
  407210:	push   eax
  407211:	out    dx,al
  407212:	test   dh,bl
  407214:	jmp    0x8d4141cd
  407219:	xor    DWORD PTR [eax+0x51d8065a],edx
  40721f:	lods   eax,DWORD PTR ds:[esi]
  407220:	ss sbb edi,edx
  407223:	call   0x1181:0x827bc7fe
  40722a:	mov    ah,0x2b
  40722c:	xchg   edi,eax
  40722d:	lea    ebx,[edi+esi*4]
  407230:	and    ch,dh
  407232:	ret    0x78a
  407235:	sbb    BYTE PTR [edi-0x60],0x8a
  407239:	mov    dl,0xf3
  40723b:	scas   eax,DWORD PTR es:[edi]
  40723c:	shr    DWORD PTR [edi],1
  40723e:	adc    al,0xfc
  407240:	inc    ebx
  407241:	xor    DWORD PTR [edx+0xf92e642],0x4429d805
  40724b:	out    0x4f,al
  40724d:	inc    esi
  40724e:	mov    ah,0xab
  407250:	dec    edx
  407251:	and    ah,bl
  407253:	fs hlt 
  407255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407256:	fsubp  st(3),st
  407258:	imul   DWORD PTR [edi+0x16643dc3]
  40725e:	lea    ecx,[esi+0x67]
  407261:	and    eax,DWORD PTR [ecx]
  407263:	out    dx,al
  407264:	pushf  
  407265:	or     BYTE PTR ds:0x681ea121,0x3e
  40726c:	inc    ecx
  40726d:	shr    ecx,0xf7
  407270:	dec    eax
  407271:	sbb    esi,DWORD PTR [edi]
  407273:	sar    BYTE PTR [edx],1
  407275:	pop    edx
  407276:	clc    
  407277:	fild   QWORD PTR [eax+0x542c83b2]
  40727d:	dec    esi
  40727e:	pop    ecx
  40727f:	and    DWORD PTR [esi+0xd],edi
  407282:	add    DWORD PTR [ebx+0x4c28b53b],edx
  407288:	jnp    0x4072d7
  40728a:	(bad)  
  40728b:	pop    ds
  40728c:	mov    ebp,0xbdb1ba4b
  407291:	xchg   esp,eax
  407292:	cmp    eax,0xc13a6b9
  407297:	xor    BYTE PTR [ecx],bl
  407299:	fistp  QWORD PTR [ebx-0x77]
  40729c:	outs   dx,BYTE PTR ds:[esi]
  40729d:	ss pusha 
  40729f:	aam    0x14
  4072a1:	and    eax,0xd3c0977e
  4072a6:	mov    esp,0x4ba4a8eb
  4072ab:	add    al,0x48
  4072ad:	les    edx,FWORD PTR [ebp-0x6c]
  4072b0:	ret    0x577
  4072b3:	aas    
  4072b4:	fidiv  WORD PTR [edx+0x31]
  4072b7:	cli    
  4072b8:	pushf  
  4072b9:	mov    esp,0x529dadd0
  4072be:	icebp  
  4072bf:	lock enter 0xf883,0x44
  4072c4:	(bad)  
  4072c5:	outs   dx,DWORD PTR ds:[esi]
  4072c6:	rcr    DWORD PTR [eax+0x637f9c3e],0x20
  4072cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ce:	inc    eax
  4072cf:	add    esp,ecx
  4072d1:	ret    0xf60f
  4072d4:	cmp    eax,DWORD PTR [ebp+0xfe17296]
  4072da:	pop    eax
  4072db:	push   ds
  4072dc:	lods   al,BYTE PTR ds:[esi]
  4072dd:	mov    eax,0x43c47ad4
  4072e2:	push   esi
  4072e3:	xor    BYTE PTR [esp+eax*4+0x13],0x56
  4072e8:	sub    eax,0xab76ba9f
  4072ed:	fcomp  QWORD PTR [edi]
  4072ef:	adc    al,0xdc
  4072f1:	test   BYTE PTR ds:0x9f332ba2,ch
  4072f7:	pop    es
  4072f8:	and    cl,al
  4072fa:	out    0xdc,eax
  4072fc:	xchg   esi,eax
  4072fd:	sub    eax,0x4bef6f72
  407302:	fsubr  QWORD PTR [ebp-0x5d]
  407305:	in     eax,dx
  407306:	inc    ebp
  407307:	jecxz  0x407327
  407309:	dec    edi
  40730a:	adc    BYTE PTR [esi],bl
  40730c:	sti    
  40730d:	cmp    DWORD PTR gs:[eax-0x23],ebp
  407311:	add    eax,0xe26cf83b
  407316:	mov    ah,0x1d
  407318:	xchg   esp,eax
  407319:	adc    ecx,DWORD PTR [ebp+0x749a62e4]
  40731f:	dec    ecx
  407320:	jns    0x4072d0
  407322:	pop    ss
  407323:	loopne 0x407398
  407325:	xchg   esi,eax
  407326:	mov    ah,0x6c
  407328:	add    DWORD PTR [eax-0x5eeedb87],esp
  40732e:	shl    ecx,0xa7
  407331:	mov    ebx,DWORD PTR [ecx+edi*4-0x179611b2]
  407338:	mov    DWORD PTR [esi-0x786b9a31],ecx
  40733e:	lahf   
  40733f:	mov    ch,0x6e
  407341:	sub    eax,0xcdd6a33e
  407346:	in     al,0xd2
  407348:	xchg   edi,eax
  407349:	pop    esi
  40734a:	push   edx
  40734b:	mul    DWORD PTR [edx]
  40734d:	xor    bh,BYTE PTR es:[ebx-0x6b]
  407351:	xor    DWORD PTR [ebx+edx*4],esi
  407354:	out    0x95,eax
  407356:	cs cmp eax,0xf35c0ba3
  40735c:	(bad)  
  40735d:	loop   0x40732e
  40735f:	mov    BYTE PTR [ecx+ebx*1+0x52216f2e],cl
  407366:	dec    ebp
  407367:	push   ebx
  407368:	fwait
  407369:	pop    ecx
  40736a:	sub    BYTE PTR [esi-0x2d4806ac],ah
  407370:	pop    eax
  407371:	out    0x75,eax
  407373:	cld    
  407374:	outs   dx,BYTE PTR ds:[esi]
  407375:	jmp    0x4072f7
  407377:	add    eax,0xd9833ed
  40737c:	or     al,BYTE PTR [ebp+ebx*8+0x575536d]
  407383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407384:	xor    al,0x62
  407386:	inc    BYTE PTR [ecx+0x21]
  407389:	clc    
  40738a:	rcl    BYTE PTR [eax+0x26dd922c],1
  407390:	stc    
  407391:	out    0x96,eax
  407393:	mov    al,0xb4
  407395:	pop    ds
  407396:	adc    cl,BYTE PTR [ebp-0x524c40be]
  40739c:	iret   
  40739d:	jo     0x4073e0
  40739f:	mov    esi,0x7010ef29
  4073a4:	dec    ebx
  4073a5:	cmp    DWORD PTR [ebx],esi
  4073a7:	jle    0x40734d
  4073a9:	and    al,0x9f
  4073ab:	dec    esp
  4073ac:	add    BYTE PTR [eax],bl
  4073ae:	loop   0x4073bd
  4073b0:	fimul  WORD PTR [ebx+0x10]
  4073b3:	(bad)  
  4073b4:	push   ecx
  4073b5:	ficomp WORD PTR [ebp+0x45028297]
  4073bb:	icebp  
  4073bc:	sbb    al,0xa0
  4073be:	xchg   edi,eax
  4073bf:	pop    ebx
  4073c0:	mov    DWORD PTR [edi+ebp*1],0xecf4f94e
  4073c7:	cli    
  4073c8:	or     ebx,DWORD PTR [eax]
  4073ca:	lds    esi,FWORD PTR [eax+0x5f94cfaa]
  4073d0:	mov    ch,0x4d
  4073d2:	pop    esi
  4073d3:	jp     0x4073f1
  4073d5:	and    cl,BYTE PTR [ebx+edi*8+0x4a]
  4073d9:	adc    eax,0x323606bc
  4073de:	jo     0x40743b
  4073e0:	fincstp 
  4073e2:	jle    0x407367
  4073e4:	call   0xb544:0x5fd53d91
  4073eb:	inc    ebx
  4073ec:	adc    eax,0x16c3b36d
  4073f1:	mov    DWORD PTR [ebx],esi
  4073f3:	sub    cl,ah
  4073f5:	inc    esi
  4073f6:	push   ds
  4073f7:	xor    DWORD PTR [ecx+0x7],eax
  4073fa:	jp     0x407443
  4073fc:	mov    bl,0xad
  4073fe:	sbb    eax,0xae7f69b2
  407403:	daa    
  407404:	(bad)  
  407405:	cli    
  407406:	mov    dh,bh
  407408:	dec    esi
  407409:	call   0x270b:0x2f24cfd5
  407410:	ds dec edi
  407412:	xchg   DWORD PTR [eax-0x79],eax
  407415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407416:	add    ah,0x7
  407419:	push   cs
  40741a:	stos   DWORD PTR es:[edi],eax
  40741b:	cmc    
  40741c:	fdiv   DWORD PTR [eax]
  40741e:	mov    al,ds:0xb810a89c
  407423:	stos   DWORD PTR es:[edi],eax
  407424:	(bad)  
  407425:	loop   0x407412
  407427:	cmp    dh,BYTE PTR ds:0x39c5b51d
  40742d:	mov    ecx,DWORD PTR [eax-0x72d255a6]
  407433:	test   al,0xaf
  407435:	repnz adc al,0x2e
  407438:	mov    al,0xfd
  40743a:	outs   dx,BYTE PTR ds:[esi]
  40743b:	pmaxsw mm2,QWORD PTR [edx-0x7e8adc8f]
  407442:	js     0x407437
  407444:	sti    
  407445:	js     0x4073f1
  407447:	aam    0x51
  407449:	mov    dl,0x4
  40744b:	dec    esp
  40744c:	aad    0xfd
  40744e:	sub    esi,DWORD PTR [ecx+ebx*1-0x7c]
  407452:	div    DWORD PTR [ebp-0x55]
  407455:	adc    BYTE PTR [ecx],ch
  407457:	jne    0x407402
  407459:	cmp    BYTE PTR [edx+0x14],0x30
  40745d:	or     ch,BYTE PTR [edi+0x6e321940]
  407463:	push   ss
  407464:	cld    
  407465:	dec    eax
  407466:	fcomp  st(5)
  407468:	and    bh,dl
  40746a:	mov    ch,0xd8
  40746c:	out    0xcf,eax
  40746e:	clc    
  40746f:	inc    edi
  407470:	inc    esp
  407471:	push   es
  407472:	xor    al,0xcf
  407474:	int3   
  407475:	mov    ds:0x536db9f1,eax
  40747a:	stc    
  40747b:	data16 xor al,BYTE PTR [edx+edi*4+0x2fcaee5d]
  407483:	ss jp  0x4074aa
  407486:	dec    esp
  407487:	(bad)  
  407488:	fsub   DWORD PTR ds:0x5cae1ebb
  40748e:	xchg   ebx,eax
  40748f:	call   0xbddb7a3f
  407494:	xlat   BYTE PTR ds:[ebx]
  407495:	mov    cl,0xa3
  407497:	call   0x75c7:0xde4ed1ec
  40749e:	lea    ebp,ds:0xd0f9a5bc
  4074a4:	outs   dx,DWORD PTR ds:[esi]
  4074a5:	sbb    BYTE PTR [ebx+0x3c],ah
  4074a8:	jns    0x407475
  4074aa:	jg     0x407483
  4074ac:	xchg   esp,eax
  4074ad:	push   ebx
  4074ae:	out    0xc9,eax
  4074b0:	clc    
  4074b1:	or     DWORD PTR [eax+0x74],esp
  4074b4:	inc    ebx
  4074b5:	mov    eax,ds:0x593e6263
  4074ba:	mov    al,0xd1
  4074bc:	push   esi
  4074bd:	and    eax,0xd70e674f
  4074c2:	pop    edi
  4074c3:	fwait
  4074c4:	dec    esp
  4074c5:	mov    al,0x75
  4074c7:	mov    WORD PTR [ecx],fs
  4074c9:	push   edi
  4074ca:	js     0x40751d
  4074cc:	fs lahf 
  4074ce:	mov    edi,0x97d70731
  4074d3:	call   0x82f1:0x903544db
  4074da:	sub    BYTE PTR [eax-0x36],cl
  4074dd:	sub    BYTE PTR [ebp-0x108517ff],dh
  4074e3:	nop
  4074e4:	mov    ecx,DWORD PTR ss:[edx]
  4074e7:	in     al,dx
  4074e8:	mov    ebp,0x5c47eabd
  4074ed:	pop    edx
  4074ee:	fdivr  st,st(2)
  4074f0:	out    0xf4,al
  4074f2:	std    
  4074f3:	in     eax,dx
  4074f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074f5:	mov    DWORD PTR [edx],edi
  4074f7:	mov    ebp,0xf6c1d3a9
  4074fc:	repz xchg ecx,eax
  4074fe:	fisttp QWORD PTR [ecx+0x2]
  407501:	pop    edi
  407502:	mov    al,0x9a
  407504:	xor    eax,0x6ae2edca
  407509:	inc    ebx
  40750a:	pop    edx
  40750b:	addr16 sbb al,0x80
  40750e:	cvtps2pi mm5,QWORD PTR [edx-0x14]
  407512:	shl    bh,cl
  407514:	cmp    DWORD PTR ds:[ebx+ecx*1-0x6d],esi
  407519:	or     ch,BYTE PTR [eax+0x69e468a8]
  40751f:	enter  0xfdf4,0x78
  407523:	inc    BYTE PTR [edx]
  407525:	adc    ah,ah
  407527:	gs xor al,0x8e
  40752a:	call   0x794651b2
  40752f:	fidivr DWORD PTR ds:0xbf5327c3
  407535:	dec    esp
  407536:	test   al,0xfb
  407538:	sub    esp,DWORD PTR [esi-0x3]
  40753b:	cmp    DWORD PTR [eax+0x20f4b565],esi
  407541:	lahf   
  407542:	call   0xec9e7fea
  407547:	and    al,0x39
  407549:	inc    eax
  40754a:	les    esp,FWORD PTR [ebx-0x8]
  40754d:	repnz push edx
  40754f:	(bad)  
  407550:	shr    BYTE PTR [eax*2-0x54be45ab],1
  407557:	out    dx,eax
  407558:	sub    ebx,DWORD PTR [ebp+0x4b]
  40755b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40755c:	cmc    
  40755d:	push   0x63
  40755f:	dec    esi
  407560:	mov    ch,BYTE PTR [eax]
  407562:	mov    al,ds:0xc27969d3
  407567:	ret    0x67ac
  40756a:	fistp  WORD PTR [esi]
  40756c:	je     0x40754e
  40756e:	jb     0x4075cc
  407570:	push   edx
  407571:	dec    edi
  407572:	bound  ebx,QWORD PTR [ebx-0x45]
  407575:	aaa    
  407576:	fwait
  407577:	cmc    
  407578:	call   0x64c83206
  40757d:	dec    esi
  40757e:	loopne 0x407572
  407580:	jbe    0x4075d9
  407582:	cmp    bl,BYTE PTR [edi-0x6f]
  407585:	jne    0x40758b
  407587:	mov    dh,bl
  407589:	int3   
  40758a:	pop    edi
  40758b:	inc    esp
  40758c:	(bad)  
  40758e:	inc    esi
  40758f:	push   eax
  407590:	test   DWORD PTR [eax],edi
  407592:	fs pop ss
  407594:	mov    ecx,0xc88d8efb
  407599:	clc    
  40759a:	ret    
  40759b:	add    BYTE PTR [ebp+esi*8-0x22],cl
  40759f:	popf   
  4075a0:	ins    DWORD PTR es:[edi],dx
  4075a1:	mov    eax,?
  4075a3:	neg    DWORD PTR gs:[edi+0x21]
  4075a7:	cli    
  4075a8:	sti    
  4075a9:	stc    
  4075aa:	ret    
  4075ab:	fwait
  4075ac:	(bad)  
  4075ad:	out    0xee,eax
  4075af:	mov    ds:0xa1d49c16,eax
  4075b4:	jg     0x4075c8
  4075b6:	pop    es
  4075b7:	jne    0x4075e7
  4075b9:	addr16 push es
  4075bb:	dec    edx
  4075bc:	sbb    bl,0x8e
  4075bf:	es jo  0x40759c
  4075c2:	retf   0xfea8
  4075c5:	cdq    
  4075c6:	fnstsw WORD PTR [edi-0x28]
  4075c9:	cli    
  4075ca:	call   0x6322646e
  4075cf:	aam    0x19
  4075d1:	test   BYTE PTR [edx+0x57],ah
  4075d4:	inc    eax
  4075d5:	dec    ecx
  4075d6:	xor    bl,BYTE PTR [edx]
  4075d8:	sti    
  4075d9:	inc    esp
  4075da:	(bad)  
  4075db:	sbb    al,0xa6
  4075dd:	mov    cl,0xa8
  4075df:	js     0x407651
  4075e1:	fmul   DWORD PTR [edx+0x1e]
  4075e4:	ror    DWORD PTR [ebp+0x6306ef84],1
  4075ea:	jnp    0x407599
  4075ec:	jle    0x407628
  4075ee:	push   edi
  4075ef:	sbb    al,BYTE PTR [edx]
  4075f1:	stc    
  4075f2:	test   DWORD PTR [esp+edi*1+0xb],ebx
  4075f6:	xor    edi,edi
  4075f8:	xchg   ebx,eax
  4075f9:	inc    edi
  4075fa:	cld    
  4075fb:	jno    0x407620
  4075fd:	in     eax,dx
  4075fe:	ret    0xcb20
  407601:	adc    edi,edx
  407603:	call   0xf8000a69
  407608:	mov    ds:0x526420b7,eax
  40760d:	dec    sp
  40760f:	jl     0x4075c4
  407611:	retf   0x2a71
  407614:	sub    al,0x9b
  407616:	pop    ebp
  407617:	or     BYTE PTR [edi-0x2f],0xed
  40761b:	and    dh,BYTE PTR [edi+ebp*1-0x53]
  40761f:	mov    WORD PTR [edi+edi*8+0x12],ss
  407623:	and    DWORD PTR [edi+0x58],edi
  407626:	jg     0x40768e
  407628:	fadd   st(3),st
  40762a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40762c:	push   ebp
  40762d:	test   BYTE PTR [ebp-0xe9239a4],ch
  407633:	jnp    0x4075eb
  407635:	int    0x9e
  407637:	jno    0x407613
  407639:	mov    ebp,0x48f74781
  40763e:	jo     0x4076a9
  407640:	add    bh,BYTE PTR [esi+0x33a9e1ca]
  407646:	xchg   BYTE PTR [esi],dh
  407648:	fidivr DWORD PTR [ebx-0x53c4c800]
  40764f:	xchg   edx,eax
  407650:	stos   BYTE PTR es:[edi],al
  407651:	push   eax
  407652:	or     al,0x6c
  407654:	stc    
  407655:	ror    DWORD PTR [ebx+0x496ab292],1
  40765b:	inc    edi
  40765c:	jno    0x407606
  40765e:	stos   DWORD PTR es:[edi],eax
  40765f:	rdmsr  
  407661:	pop    esi
  407662:	cwde   
  407663:	adc    DWORD PTR [ebp-0x15cc87ed],0x3
  40766a:	jmp    0xca1377b2
  40766f:	test   al,0xf9
  407671:	iret   
  407672:	mov    bl,0x62
  407674:	or     DWORD PTR [edx+0x17],edx
  407677:	add    BYTE PTR [edx+0x7d192d02],cl
  40767d:	sbb    edx,DWORD PTR [esi-0x64]
  407680:	cmp    eax,0x2ba37d7d
  407685:	push   0xffffffc7
  407687:	test   BYTE PTR [eax-0x25],dh
  40768a:	sub    edi,DWORD PTR [ebx-0x2f]
  40768d:	gs jl  0x407692
  407690:	xor    cl,0x6
  407693:	stos   DWORD PTR es:[edi],eax
  407694:	mov    al,ds:0x468af830
  407699:	shl    BYTE PTR [esi+0x60],0xc8
  40769d:	retf   0x99d8
  4076a0:	or     ch,BYTE PTR [edi+0x6ff49799]
  4076a6:	xor    DWORD PTR [ebp+0x2c5baa1a],ecx
  4076ac:	dec    esp
  4076ad:	sbb    BYTE PTR [esp+ebp*4+0x5e],0x95
  4076b2:	loop   0x407634
  4076b4:	imul   ecx,DWORD PTR ds:0x6b1ac72c,0xe9821cd1
  4076be:	or     bh,BYTE PTR [ebx+eax*1-0x63058475]
  4076c5:	popa   
  4076c6:	cmp    BYTE PTR [esi],dl
  4076c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076c9:	sbb    BYTE PTR [ecx+0x77],ah
  4076cc:	leave  
  4076cd:	adc    BYTE PTR [eax],cl
  4076cf:	push   es
  4076d0:	fst    DWORD PTR [ebp+0x5340fa2f]
  4076d6:	dec    ecx
  4076d7:	pop    ecx
  4076d8:	inc    edi
  4076d9:	imul   esi,DWORD PTR [ebp+0x2d8443c7],0x4d132658
  4076e3:	sbb    BYTE PTR [edx+0x10c769b],al
  4076e9:	pusha  
  4076ea:	in     eax,0xde
  4076ec:	outs   dx,DWORD PTR ds:[esi]
  4076ed:	or     dh,ch
  4076ef:	inc    ecx
  4076f0:	xchg   esi,eax
  4076f1:	scas   eax,DWORD PTR es:[edi]
  4076f2:	inc    ebx
  4076f3:	out    dx,eax
  4076f4:	sbb    esi,DWORD PTR [eax]
  4076f6:	(bad)
  4076f9:	mov    ebx,DWORD PTR [eax-0x78]
  4076fc:	cld    
  4076fd:	mov    ch,0x7d
  4076ff:	aas    
  407700:	fs out 0xa2,eax
  407703:	xchg   BYTE PTR [ebp+0x3d],ch
  407706:	sbb    BYTE PTR [edi],ah
  407708:	adc    BYTE PTR [ecx-0x5a0f36ef],ch
  40770e:	and    BYTE PTR [edi],bl
  407710:	cmp    cl,BYTE PTR fs:[esp+edx*1+0x3a]
  407715:	dec    ebp
  407716:	and    al,0x6a
  407718:	icebp  
  407719:	xchg   BYTE PTR [esi+0x6c6cfdda],bl
  40771f:	push   esp
  407720:	icebp  
  407721:	int    0x65
  407723:	mov    ebx,0x65356aed
  407728:	addr16 mov edi,0x5daf03db
  40772e:	add    BYTE PTR gs:[edi-0x5ecd2c80],dh
  407735:	inc    esp
  407736:	dec    edi
  407737:	je     0x407707
  407739:	nop
  40773a:	ret    0x8a1a
  40773d:	adc    DWORD PTR [eax-0x1d],ebx
  407740:	(bad)  
  407741:	jg     0x407788
  407743:	stos   BYTE PTR es:[edi],al
  407744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407745:	not    DWORD PTR [eax+0x3a]
  407748:	test   ah,al
  40774a:	(bad)  
  40774b:	inc    ecx
  40774c:	xchg   edx,eax
  40774d:	and    dl,BYTE PTR [eax]
  40774f:	in     eax,dx
  407750:	loopne 0x40779e
  407752:	sub    bh,ch
  407754:	fimul  WORD PTR [edi+0x20ba9122]
  40775a:	push   ebx
  40775b:	std    
  40775c:	mov    cl,BYTE PTR [edi+0x56]
  40775f:	xor    al,0x2f
  407761:	mov    al,0x24
  407763:	jecxz  0x407769
  407765:	in     al,dx
  407766:	push   ecx
  407767:	adc    edx,ebp
  407769:	mov    edi,0xcb7a7eef
  40776e:	dec    edx
  40776f:	out    0x8f,eax
  407771:	adc    ah,BYTE PTR [ecx]
  407773:	add    bl,bl
  407775:	push   0x72071556
  40777a:	ror    esi,cl
  40777c:	sbb    al,0x91
  40777e:	out    0xf7,al
  407780:	dec    edx
  407781:	imul   dh
  407783:	cmp    DWORD PTR [edi-0x7e],edi
  407786:	cmp    eax,0x75f41b2f
  40778b:	pop    edi
  40778c:	pushf  
  40778d:	popf   
  40778e:	jno    0x40774b
  407790:	loope  0x4077e9
  407792:	jp     0x40774d
  407794:	mov    WORD PTR [edi+ebp*4-0x52],fs
  407798:	lahf   
  407799:	sahf   
  40779a:	pop    esi
  40779b:	mov    BYTE PTR [edx+ecx*1+0xbbae276],dh
  4077a2:	stc    
  4077a3:	lds    ecx,FWORD PTR [ecx]
  4077a5:	push   edi
  4077a6:	test   al,0xe7
  4077a8:	pusha  
  4077a9:	pop    ds
  4077aa:	sub    BYTE PTR [edx-0x49ff6d42],dl
  4077b0:	mov    esi,DWORD PTR ds:0x4689eeeb
  4077b6:	mov    esi,es
  4077b8:	fisub  WORD PTR [edx]
  4077ba:	daa    
  4077bb:	sub    DWORD PTR [esi+0x1a],ecx
  4077be:	in     eax,dx
  4077bf:	and    al,0x91
  4077c1:	arpl   WORD PTR [ecx-0x56647060],si
  4077c7:	jl     0x407777
  4077c9:	test   DWORD PTR [esi],0xee7fd43c
  4077cf:	mov    ds:0xa07bfe2f,eax
  4077d4:	std    
  4077d5:	pop    edi
  4077d6:	fs mov BYTE PTR cs:[si+0x1b],dh
  4077dc:	and    eax,ebp
  4077de:	pop    edi
  4077df:	push   ds
  4077e0:	cli    
  4077e1:	jmp    0x5861:0xc091ac9e
  4077e8:	in     eax,0xbc
  4077ea:	xor    ecx,esi
  4077ec:	xor    dl,BYTE PTR [ecx+esi*2-0x58]
  4077f0:	rcr    DWORD PTR [ecx+0x3d],cl
  4077f3:	and    al,0x46
  4077f5:	inc    esi
  4077f6:	fs push ds
  4077f8:	jg     0x407807
  4077fa:	mov    ds:0x33184159,al
  4077ff:	addr16 jmp 0xfe9b:0x870ab5bd
  407807:	addr16 dec edi
  407809:	add    DWORD PTR [edx+0x5f],0x2f
  40780d:	ja     0x40786d
  40780f:	inc    ecx
  407810:	jbe    0x40784e
  407812:	mov    al,BYTE PTR [eax+0x3be6615]
  407818:	test   DWORD PTR [eax],0x304a7127
  40781e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40781f:	pop    ds
  407820:	and    dh,BYTE PTR [ebx-0x10acb739]
  407826:	aam    0x26
  407828:	push   edx
  407829:	sub    ah,BYTE PTR [esi]
  40782b:	in     eax,dx
  40782c:	jecxz  0x4077e7
  40782e:	or     esp,DWORD PTR [ecx+0x79e36976]
  407834:	cdq    
  407835:	je     0x407856
  407837:	pop    edx
  407838:	mov    ebp,0x61836b31
  40783d:	sbb    DWORD PTR [edi-0x4b2dcf57],esp
  407843:	(bad)  
  407844:	cli    
  407845:	test   esi,eax
  407847:	stos   DWORD PTR es:[edi],eax
  407848:	push   ebx
  407849:	(bad)  
  40784a:	jg     0x407859
  40784c:	iret   
  40784d:	fadd   QWORD PTR [ecx]
  40784f:	scas   eax,DWORD PTR es:[edi]
  407850:	aad    0x67
  407852:	add    eax,DWORD PTR [edx-0x16]
  407855:	mov    ecx,0x26752128
  40785a:	xor    al,0x41
  40785c:	pop    ebp
  40785d:	test   BYTE PTR [esi],0xcd
  407860:	fisttp QWORD PTR [edx+ebp*2]
  407863:	inc    edi
  407864:	repnz sub BYTE PTR [esi],dh
  407867:	int3   
  407868:	shr    DWORD PTR [ebx+ecx*4],1
  40786b:	repnz ror DWORD PTR [edx-0x27],0x43
  407870:	sti    
  407871:	int    0x6f
  407873:	xchg   esp,eax
  407874:	stc    
  407875:	xchg   edx,eax
  407876:	fwait
  407877:	ret    
  407878:	xor    dh,BYTE PTR [edi-0x22873bbf]
  40787e:	jne    0x407861
  407880:	mov    ds:0x5265c217,eax
  407885:	fadd   QWORD PTR [edi+0x24]
  407888:	cmp    BYTE PTR [ebp+0x7c],0x4e
  40788c:	(bad)  
  40788d:	push   ss
  40788e:	sub    DWORD PTR [esi],edx
  407890:	push   cs
  407891:	sub    eax,0x2a299059
  407896:	icebp  
  407897:	and    DWORD PTR [ebx-0x1a],0xffffffc3
  40789b:	mov    ds,edi
  40789d:	pop    edi
  40789e:	xor    BYTE PTR [esi+0x28],ah
  4078a1:	xor    eax,0xb26c80ac
  4078a6:	aam    0x1d
  4078a8:	mov    ebx,0x334bbaaf
  4078ad:	mov    DWORD PTR [esi-0x372272e8],ebp
  4078b3:	fmul   st,st(7)
  4078b5:	(bad)  
  4078b6:	jle    0x4078bb
  4078b8:	ins    DWORD PTR es:[edi],dx
  4078b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078ba:	mov    bl,0xdf
  4078bc:	in     al,0x20
  4078be:	add    al,0xc6
  4078c0:	push   esi
  4078c1:	les    edi,FWORD PTR [ebx+edi*4-0x3e]
  4078c5:	lahf   
  4078c6:	jle    0x407909
  4078c8:	mov    ebp,0xd4620327
  4078cd:	(bad)  
  4078ce:	dec    ebx
  4078cf:	push   cs
  4078d0:	bound  esi,QWORD PTR [edx+0x26]
  4078d3:	sbb    al,0x5d
  4078d5:	in     eax,0xca
  4078d7:	mov    al,0xa0
  4078d9:	and    esi,DWORD PTR [esp+edi*4+0x49]
  4078dd:	and    dl,BYTE PTR [ebx+0x67651876]
  4078e3:	cwde   
  4078e4:	std    
  4078e5:	or     al,0x1c
  4078e7:	jmp    0x407921
  4078e9:	mov    ds:0xa9063a84,al
  4078ee:	mov    ebp,0x425b8f7e
  4078f3:	adc    eax,0x78bacec3
  4078f8:	xor    edi,DWORD PTR [edi]
  4078fa:	(bad)  
  4078fb:	pop    ds
  4078fc:	dec    esp
  4078fd:	inc    eax
  4078fe:	sub    bl,BYTE PTR [ebx]
  407900:	jle    0x407903
  407902:	test   al,0xc9
  407904:	int3   
  407905:	mov    edx,0x5173bf8e
  40790a:	pop    ebx
  40790b:	mov    al,0xe
  40790d:	mov    fs,WORD PTR [edi-0x6e]
  407910:	and    DWORD PTR [ebp+0x2540cff1],eax
  407916:	pop    edi
  407917:	mov    ebp,0xed8f17d5
  40791c:	push   eax
  40791d:	mov    al,ds:0x263fbdf6
  407922:	push   cs
  407923:	ja     0x407904
  407925:	push   0x539c32bf
  40792a:	cli    
  40792b:	dec    ebp
  40792c:	sbb    BYTE PTR [ebx-0x9],ch
  40792f:	sbb    esi,ebx
  407931:	push   ss
  407932:	pop    eax
  407933:	repz jnp 0x4079b3
  407936:	lock mov dh,0x87
  407939:	cli    
  40793a:	dec    esi
  40793b:	out    dx,eax
  40793c:	sbb    eax,esi
  40793e:	mov    eax,ds:0x22f97a80
  407943:	inc    esi
  407944:	sbb    bl,dh
  407946:	cmp    ebx,DWORD PTR [edx]
  407948:	pop    ebp
  407949:	popf   
  40794a:	mov    edx,0x1d53be53
  40794f:	jecxz  0x407946
  407951:	mov    bl,0x19
  407953:	dec    ebp
  407954:	jmp    0x4078f7
  407956:	pop    esi
  407957:	ins    BYTE PTR es:[edi],dx
  407958:	or     edx,DWORD PTR [ecx-0x549b82ec]
  40795e:	and    cl,ch
  407960:	push   edi
  407961:	mov    eax,ds:0xca4d65b7
  407966:	jns    0x40798c
  407968:	jmp    DWORD PTR [eax]
  40796a:	lods   eax,DWORD PTR ds:[esi]
  40796b:	jo     0x407983
  40796d:	and    ebp,DWORD PTR [edi+0x34339668]
  407973:	mov    es,WORD PTR [edx+0x653de4e7]
  407979:	xchg   ecx,eax
  40797a:	gs dec esi
  40797c:	adc    edx,0x23
  40797f:	xchg   ebx,eax
  407980:	push   ss
  407981:	lods   eax,DWORD PTR ds:[esi]
  407982:	into   
  407983:	xlat   BYTE PTR ds:[ebx]
  407984:	rcl    BYTE PTR [eax-0x6c0713a],0x3d
  40798b:	(bad)  
  40798c:	cmp    al,0x9f
  40798e:	test   eax,0x6ead3ca7
  407993:	imul   edx,esi,0xffffffd2
  407996:	mov    esi,0x5271505e
  40799b:	mov    dh,0x33
  40799d:	rcl    BYTE PTR [esi-0x5f],cl
  4079a0:	ja     0x40792b
  4079a2:	dec    esi
  4079a3:	(bad)  [edi+0xf]
  4079a6:	sbb    cl,BYTE PTR [eax]
  4079a8:	aam    0xd
  4079aa:	jmp    0x407998
  4079ac:	pop    edi
  4079ad:	je     0x407941
  4079af:	imul   edx,DWORD PTR [eax+0x7a],0x60
  4079b3:	inc    ebx
  4079b4:	retf   0x5424
  4079b7:	mov    dl,0xdd
  4079b9:	mul    BYTE PTR [esi]
  4079bb:	sti    
  4079bc:	xchg   ebx,eax
  4079bd:	xor    ecx,ebp
  4079bf:	pop    ebp
  4079c0:	sbb    ch,BYTE PTR [ecx-0x3f]
  4079c3:	jecxz  0x407a41
  4079c5:	shl    BYTE PTR [esp+esi*2+0x12c829e2],1
  4079cc:	ins    BYTE PTR es:[edi],dx
  4079cd:	(bad)
  4079d0:	push   esp
  4079d1:	or     dl,ch
  4079d3:	sbb    eax,0x12d70a70
  4079d8:	jae    0x40796b
  4079da:	jmp    0x4079dc
  4079dc:	mov    al,BYTE PTR [esi]
  4079de:	pop    ecx
  4079df:	push   eax
  4079e0:	mov    bh,0x9c
  4079e2:	sub    dl,al
  4079e4:	xchg   ebx,eax
  4079e5:	aam    0x2f
  4079e7:	push   0x4d
  4079e9:	and    edx,ebx
  4079eb:	and    al,BYTE PTR [eax-0x15]
  4079ee:	push   ds
  4079ef:	mov    bl,0x6e
  4079f1:	daa    
  4079f2:	or     DWORD PTR [esi+eiz*1-0x7420d5d9],eax
  4079f9:	inc    ebp
  4079fa:	hlt    
  4079fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0x137e350
  407a58:	test   DWORD PTR ds:0x7a3ca388,eax
  407a5e:	jp     0x407a45
  407a60:	pop    edi
  407a61:	jp     0x407add
  407a63:	dec    eax
  407a65:	jmp    0xa3c2:0x7bcde7b1
  407a6c:	ja     0x407a69
  407a6e:	lea    edi,fs:[esi]
  407a71:	sbb    al,0x75
  407a73:	and    BYTE PTR [edx],0x6a
  407a76:	jbe    0x407a22
  407a78:	addr16 out 0x4,eax
  407a7b:	and    DWORD PTR [esi+esi*1+0x64b0948b],esi
  407a82:	pop    edx
  407a83:	ss jo  0x407aca
  407a86:	xchg   esi,eax
  407a87:	xchg   esp,eax
  407a88:	mov    eax,0x5fc97238
  407a8d:	sub    al,0x2c
  407a8f:	lds    esp,FWORD PTR [ecx]
  407a91:	inc    ecx
  407a92:	cmp    eax,0x52c50133
  407a97:	cmp    eax,0x86aaf4d3
  407a9c:	xchg   ecx,eax
  407a9d:	scas   al,BYTE PTR es:[edi]
  407a9e:	in     eax,dx
  407a9f:	sub    cl,BYTE PTR [edx+eax*2]
  407aa2:	push   esp
  407aa3:	jge    0x407a86
  407aa5:	mov    ch,0xbe
  407aa7:	stos   DWORD PTR es:[edi],eax
  407aa8:	loop   0x407a77
  407aaa:	xor    eax,0x4e6e9b58
  407aaf:	pop    edx
  407ab0:	sub    eax,0x9d41c754
  407ab5:	sbb    al,0x97
  407ab7:	mov    bh,0xdd
  407ab9:	(bad)  
  407aba:	(bad)  
  407abc:	stc    
  407abd:	adc    BYTE PTR [ecx+0x6f],ah
  407ac0:	dec    ebp
  407ac1:	pop    ds
  407ac2:	xchg   ebx,eax
  407ac3:	daa    
  407ac4:	or     al,0x87
  407ac6:	xor    BYTE PTR [edi+0x2b995b1e],0xdf
  407acd:	jge    0x407b36
  407acf:	out    dx,al
  407ad0:	adc    eax,0x4816f55a
  407ad5:	sbb    DWORD PTR [edx],ecx
  407ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ad8:	lods   eax,DWORD PTR ds:[esi]
  407ad9:	aas    
  407ada:	mov    ds:0xd28765a6,al
  407adf:	test   BYTE PTR [ebx-0x1a],bl
  407ae2:	push   edx
  407ae3:	fsubp  st(2),st
  407ae5:	test   BYTE PTR [ebx-0x32],bh
  407ae8:	xor    dh,BYTE PTR [esi+0x7beff6d]
  407aee:	adc    dl,BYTE PTR [ebp-0x6f369acf]
  407af4:	xchg   BYTE PTR [eax+0x77],bh
  407af7:	jmp    0x4bb86831
  407afc:	inc    edi
  407afd:	cs into 
  407aff:	scas   al,BYTE PTR es:[edi]
  407b00:	in     al,dx
  407b01:	popf   
  407b02:	inc    edi
  407b03:	dec    ebp
  407b04:	mov    dl,0x3a
  407b06:	imul   ebp,DWORD PTR [edi-0x3eb23851],0x863e83bf
  407b10:	scas   al,BYTE PTR es:[edi]
  407b11:	cmp    esp,DWORD PTR [ecx+0x7bf0fda7]
  407b17:	repz jnp 0x407af1
  407b1a:	inc    eax
  407b1b:	retf   0x579
  407b1e:	or     eax,0x7e3e2eb3
  407b23:	push   eax
  407b24:	jnp    0x407b64
  407b26:	dec    esp
  407b27:	xchg   edx,eax
  407b28:	or     BYTE PTR [edx-0x55],al
  407b2b:	fwait
  407b2c:	cmp    ah,bh
  407b2e:	jl     0x407ad0
  407b30:	call   0xf8ef:0xe0a6d8cc
  407b37:	dec    esi
  407b38:	sbb    BYTE PTR [ebp-0xce2f480],ah
  407b3e:	pop    es
  407b3f:	loopne 0x407b4d
  407b41:	xchg   esp,eax
  407b42:	mov    bl,0xf7
  407b44:	add    eax,0x8a2283bf
  407b49:	pop    DWORD PTR [edx-0x2]
  407b4c:	inc    eax
  407b4d:	mov    cl,0x9b
  407b4f:	adc    eax,0x9e971beb
  407b54:	out    0x14,eax
  407b56:	or     al,0xc0
  407b58:	xchg   ebx,eax
  407b59:	fild   DWORD PTR [ebx+ebx*8]
  407b5c:	aaa    
  407b5d:	in     eax,0x2
  407b5f:	in     al,dx
  407b60:	ficomp DWORD PTR [esi+0x79]
  407b63:	jnp    0x407baf
  407b65:	pop    es
  407b66:	sbb    DWORD PTR [ebp+0x3],esp
  407b69:	sub    ebp,edi
  407b6b:	inc    edx
  407b6c:	pop    ecx
  407b6d:	int3   
  407b6e:	addr16 aas 
  407b70:	inc    esp
  407b71:	enter  0xabc2,0xc9
  407b75:	fwait
  407b76:	xlat   BYTE PTR es:[ebx]
  407b78:	cdq    
  407b79:	stc    
  407b7a:	and    DWORD PTR [edi-0x726c62fb],esp
  407b80:	aas    
  407b81:	sbb    eax,0xbe9cd2d1
  407b86:	cmp    eax,0x9227fc40
  407b8b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407b8d:	(bad)  
  407b8e:	dec    edx
  407b8f:	pop    ss
  407b90:	jmp    0x407bcf
  407b92:	pop    ebx
  407b93:	icebp  
  407b94:	fidivr DWORD PTR [eax+0x78]
  407b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b98:	retf   0xae63
  407b9b:	jle    0x407bda
  407b9d:	stos   BYTE PTR es:[edi],al
  407b9e:	in     eax,0xd2
  407ba0:	call   0x6758:0x9c9e81ea
  407ba7:	ret    0x7c4e
  407baa:	cmp    al,0x93
  407bac:	add    ch,ch
  407bae:	push   es
  407baf:	adc    DWORD PTR [esi],ebx
  407bb1:	mov    dh,0x3b
  407bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bb4:	mov    edi,ebx
  407bb6:	(bad)  
  407bb7:	into   
  407bb8:	ja     0x407bd0
  407bba:	movzx  edi,BYTE PTR [ebp+0x5966c9cf]
  407bc1:	push   esp
  407bc2:	mov    esp,0x3ce10822
  407bc7:	jg     0x407b50
  407bc9:	mov    dl,0x16
  407bcb:	adc    BYTE PTR [esi],0xe5
  407bce:	pop    ds
  407bcf:	or     ebp,DWORD PTR [ebx]
  407bd1:	jo     0x407be8
  407bd3:	cld    
  407bd4:	popa   
  407bd5:	push   0x75
  407bd7:	shl    BYTE PTR [esi+ebp*8],cl
  407bda:	(bad)  
  407bdb:	repz xlat BYTE PTR ds:[ebx]
  407bdd:	imul   ebx,DWORD PTR [eax+0x62],0xffffffff
  407be1:	adc    BYTE PTR [ebp+0x1a],dh
  407be4:	mov    ?,WORD PTR [edi]
  407be6:	and    ebx,DWORD PTR [eax]
  407be8:	shl    BYTE PTR [ebp+esi*2-0x67],1
  407bec:	pop    edx
  407bed:	outs   dx,DWORD PTR ds:[esi]
  407bee:	ss push ebp
  407bf0:	sub    eax,0x7a3bcd8f
  407bf5:	add    eax,0xa5a85f60
  407bfa:	loop   0x407bca
  407bfc:	loope  0x407b7f
  407bfe:	jmp    0x407c5b
  407c00:	iret   
  407c01:	push   ecx
  407c02:	mov    edx,?
  407c04:	sbb    eax,0x57785211
  407c09:	xlat   BYTE PTR ds:[ebx]
  407c0a:	sahf   
  407c0b:	jne    0x407c89
  407c0d:	call   0xef7a:0x2b13b09d
  407c14:	inc    edx
  407c15:	or     esp,ebp
  407c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c18:	inc    esp
  407c19:	xchg   ebx,eax
  407c1a:	enter  0x207d,0x76
  407c1e:	imul   ebx,DWORD PTR [eax-0x5b],0x9e2019ac
  407c25:	test   ch,dl
  407c27:	fimul  WORD PTR [edx]
  407c29:	and    al,0x98
  407c2b:	test   BYTE PTR [ebp+0x21],0xf5
  407c2f:	push   esp
  407c30:	nop
  407c31:	lods   eax,DWORD PTR ds:[esi]
  407c32:	out    dx,eax
  407c33:	mov    al,0xdd
  407c35:	adc    ebx,DWORD PTR [eax+edi*4]
  407c38:	lea    ebx,[eax]
  407c3a:	mov    dh,0x1b
  407c3c:	and    ebp,DWORD PTR [ecx]
  407c3e:	push   0xabc10845
  407c43:	pop    ebx
  407c44:	mov    BYTE PTR [ecx],bh
  407c46:	jo     0x407cc0
  407c48:	xchg   BYTE PTR [edx-0x67731025],dh
  407c4e:	inc    ebp
  407c4f:	enter  0xd8f4,0x8c
  407c53:	aas    
  407c54:	dec    esp
  407c55:	cmp    bh,BYTE PTR [edx+0x41]
  407c58:	loop   0x407c3c
  407c5a:	or     BYTE PTR [edi+0x11],dh
  407c5d:	inc    ecx
  407c5e:	int    0xd
  407c60:	faddp  st(7),st
  407c62:	repz (bad) 
  407c64:	xor    eax,0xb72031b
  407c69:	mov    cl,0x49
  407c6b:	lods   al,BYTE PTR ds:[esi]
  407c6c:	jmp    0x407c11
  407c6e:	jno    0x407cef
  407c70:	jl     0x407bfb
  407c72:	push   eax
  407c73:	cmp    BYTE PTR [eax],dh
  407c75:	pop    ebx
  407c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c77:	add    ecx,DWORD PTR [ebx+0x4d7e88e3]
  407c7d:	adc    ah,al
  407c7f:	imul   esi,DWORD PTR [ebx],0x262e6d8c
  407c85:	and    ebx,esi
  407c87:	xchg   edx,eax
  407c88:	ss inc eax
  407c8a:	in     eax,dx
  407c8b:	sbb    ecx,DWORD PTR [eax]
  407c8d:	and    bl,dl
  407c8f:	mov    esi,DWORD PTR [eax]
  407c91:	loop   0x407c17
  407c93:	shl    eax,0x6e
  407c96:	fwait
  407c97:	inc    eax
  407c98:	nop
  407c99:	fistp  QWORD PTR [ecx+0x70d27e5a]
  407c9f:	or     dl,BYTE PTR [edi-0x4a]
  407ca2:	lea    ecx,[eax-0x33f5e320]
  407ca8:	out    dx,eax
  407ca9:	nop
  407caa:	push   es
  407cab:	in     eax,0xe2
  407cad:	jmp    DWORD PTR [ecx+edi*4]
  407cb0:	sahf   
  407cb1:	test   BYTE PTR [esi+0x6b],ah
  407cb4:	stos   BYTE PTR es:[edi],al
  407cb5:	les    ecx,FWORD PTR [ebp-0x6f1b0f0a]
  407cbb:	clc    
  407cbc:	xchg   esp,eax
  407cbd:	mov    esi,0x3a84c1d1
  407cc2:	js     0x407ce3
  407cc4:	cwde   
  407cc5:	scas   al,BYTE PTR es:[edi]
  407cc6:	push   0x63
  407cc8:	(bad)  [ebx]
  407cca:	or     BYTE PTR ds:0x1fda4aa6,cl
  407cd0:	lods   al,BYTE PTR ds:[esi]
  407cd1:	and    BYTE PTR [edi+0x29],al
  407cd4:	out    dx,eax
  407cd5:	nop
  407cd6:	(bad)  
  407cd7:	stc    
  407cd8:	sbb    eax,0xb96f2d85
  407cdd:	mov    eax,0x9263b4dc
  407ce2:	mov    ch,0x81
  407ce4:	fs js  0x407d1d
  407ce7:	aad    0x47
  407ce9:	ins    BYTE PTR es:[edi],dx
  407cea:	and    al,0x3a
  407cec:	imul   esp,DWORD PTR [ebx-0x5],0xffffffa0
  407cf0:	jno    0x407d19
  407cf2:	add    ebp,edx
  407cf4:	dec    ebp
  407cf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf7:	aam    0x52
  407cf9:	outs   dx,DWORD PTR ds:[esi]
  407cfa:	xlat   BYTE PTR ds:[ebx]
  407cfb:	loope  0x407d1d
  407cfd:	mov    cl,0xf7
  407cff:	jo     0x407ccb
  407d01:	or     al,0x5b
  407d03:	retf   0xa159
  407d06:	cwde   
  407d07:	xchg   DWORD PTR [esi+0x2a],ecx
  407d0a:	arpl   WORD PTR [esi-0x19],bx
  407d0d:	push   es
  407d0e:	push   cs
  407d0f:	or     ebx,ebx
  407d11:	push   0x41d1b932
  407d16:	pop    esi
  407d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d18:	repnz add BYTE PTR [ebp+0x1c778fdc],dl
  407d1f:	cmp    al,0xc1
  407d21:	sbb    ebp,DWORD PTR [ecx]
  407d23:	pushf  
  407d24:	mov    bl,0xfe
  407d26:	loop   0x407cfe
  407d28:	pop    ebx
  407d29:	cmp    al,0xf9
  407d2b:	or     ecx,ebx
  407d2d:	sbb    BYTE PTR [ebx-0xe],ah
  407d30:	xchg   edi,eax
  407d31:	push   0x28d35e77
  407d36:	fmulp  st(7),st
  407d38:	lea    esp,[ebx]
  407d3a:	dec    ebp
  407d3b:	or     eax,0xff55dfc1
  407d40:	ret    
  407d41:	xchg   ebx,eax
  407d42:	dec    esp
  407d43:	push   ebx
  407d44:	mov    WORD PTR [eax-0x72],gs
  407d47:	pop    ss
  407d48:	xlat   BYTE PTR ds:[ebx]
  407d49:	mov    edx,0xc1085910
  407d4e:	mov    bh,0x0
  407d50:	or     eax,0xe36b15b6
  407d55:	xor    ebp,ebx
  407d57:	cmp    BYTE PTR [ecx],0x51
  407d5a:	xchg   esp,eax
  407d5b:	jae    0x407cfe
  407d5d:	setns  ah
  407d60:	out    dx,al
  407d61:	push   edi
  407d62:	imul   ebp,DWORD PTR [ebx-0x2cd882db],0xffffffe0
  407d69:	into   
  407d6a:	sub    bp,WORD PTR [esi-0x34243e0d]
  407d71:	test   BYTE PTR ds:0x45d21f84,0x5e
  407d78:	ja     0x407d64
  407d7a:	cli    
  407d7b:	fsub   QWORD PTR [edx-0xb]
  407d7e:	aam    0xc4
  407d80:	cli    
  407d81:	mov    ch,0x71
  407d83:	xchg   ebp,eax
  407d84:	jns    0x407ded
  407d86:	retf   0x4a6c
  407d89:	lods   al,BYTE PTR ds:[esi]
  407d8a:	and    ah,BYTE PTR [esi+0x1b]
  407d8d:	sub    esp,DWORD PTR [esi+0x7e1e9683]
  407d93:	sub    DWORD PTR [ecx+0x54],ebp
  407d96:	ds or  dl,dl
  407d99:	push   ss
  407d9a:	sub    dh,BYTE PTR [eax+ebp*4]
  407d9d:	sub    al,0xcb
  407d9f:	test   BYTE PTR [esi+0x668e8b89],dl
  407da5:	xor    al,0xb9
  407da8:	push   0xffffffa2
  407daa:	retf   
  407dab:	jnp    0x407dbd
  407dad:	and    ah,cl
  407daf:	imul   DWORD PTR [edi]
  407db1:	cld    
  407db2:	jns    0x407d59
  407db4:	neg    BYTE PTR [esi]
  407db6:	inc    ebp
  407db7:	lods   al,BYTE PTR ds:[esi]
  407db8:	fiadd  DWORD PTR [ecx-0x27]
  407dbb:	js     0x407d93
  407dbd:	aas    
  407dbe:	(bad)  
  407dbf:	hlt    
  407dc0:	xlat   BYTE PTR ds:[ebx]
  407dc1:	and    edx,DWORD PTR [edi]
  407dc3:	loopne 0x407e23
  407dc5:	fisttp QWORD PTR [edx-0x14]
  407dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dca:	in     eax,0xf
  407dcc:	stos   BYTE PTR es:[edi],al
  407dcd:	mov    esi,0x51f5cc55
  407dd2:	push   cs
  407dd3:	sub    DWORD PTR ds:0x472794c8,ebx
  407dd9:	sbb    esp,esp
  407ddb:	pop    esp
  407ddc:	std    
  407ddd:	jp     0x407de1
  407ddf:	arpl   WORD PTR [eax+0x3b],sp
  407de2:	jle    0x407e1f
  407de4:	cmc    
  407de5:	jge    0x407db3
  407de7:	out    dx,eax
  407de8:	dec    ecx
  407de9:	push   cs
  407dea:	mov    ch,0x2c
  407dec:	mov    al,ds:0xf553efd5
  407df1:	fcmovnb st,st(2)
  407df3:	stc    
  407df4:	push   cs
  407df5:	into   
  407df6:	xchg   BYTE PTR [ebx-0x5],dh
  407df9:	sbb    eax,DWORD PTR [ecx+0x6f589129]
  407dff:	in     al,0x6c
  407e01:	sahf   
  407e02:	adc    BYTE PTR [edx],ch
  407e04:	ins    BYTE PTR es:[edi],dx
  407e05:	sahf   
  407e06:	cmp    ecx,ebx
  407e08:	(bad)  
  407e0a:	push   es
  407e0b:	jno    0x407dd6
  407e0d:	sar    DWORD PTR [eax+0x292da28c],cl
  407e13:	call   0x457b:0xb6f6a985
  407e1a:	pushf  
  407e1b:	xchg   BYTE PTR [ebx],ch
  407e1d:	pop    edx
  407e1e:	addr16 jle 0x407de3
  407e21:	aas    
  407e22:	lea    ebp,[edx]
  407e24:	cwde   
  407e25:	jge    0x407e27
  407e27:	call   0x5354ce1a
  407e2c:	dec    ecx
  407e2d:	push   es
  407e2e:	fisub  WORD PTR [edx+ebx*8-0x69a678ba]
  407e35:	mov    ebx,0x95ff1b03
  407e3a:	inc    ebp
  407e3b:	lahf   
  407e3c:	inc    esi
  407e3d:	jl     0x2eabca9e
  407e43:	dec    ebx
  407e44:	push   ebp
  407e45:	xor    bh,BYTE PTR [ecx+0x47]
  407e48:	xchg   esi,eax
  407e49:	cmp    esi,ecx
  407e4b:	or     esp,ecx
  407e4d:	mov    dh,0xf0
  407e4f:	push   ebp
  407e50:	cmp    edi,DWORD PTR [ecx+0x701987c5]
  407e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e57:	xor    DWORD PTR [edi+0x2693afae],esi
  407e5d:	mov    al,ds:0x46acc599
  407e62:	mov    esi,esi
  407e64:	ret    0xcabc
  407e67:	or     esp,ecx
  407e69:	cmp    al,0xdc
  407e6b:	lods   al,BYTE PTR ds:[esi]
  407e6c:	neg    BYTE PTR ds:0x3fe4127a
  407e72:	mov    ebp,0xc0680cde
  407e77:	shr    DWORD PTR [ebp+0x13],1
  407e7a:	in     al,0xc0
  407e7c:	fmul   QWORD PTR gs:[eax]
  407e7f:	and    esi,esi
  407e81:	pushf  
  407e82:	mov    esp,0x81eb32a3
  407e87:	fiadd  WORD PTR [eax+0x1f]
  407e8a:	dec    edi
  407e8b:	cli    
  407e8c:	push   edx
  407e8d:	add    DWORD PTR [edx-0x1e],0xffffff95
  407e91:	dec    edx
  407e92:	or     bh,bl
  407e94:	and    DWORD PTR [eax+0x217f8ca3],esp
  407e9a:	loope  0x407f0d
  407e9c:	adc    ebx,DWORD PTR [eax+eax*1-0x6774c153]
  407ea3:	pop    ds
  407ea4:	inc    ebp
  407ea5:	adc    BYTE PTR [ecx+eax*4+0x7f5fb5e4],0xa8
  407ead:	xchg   esi,eax
  407eae:	push   ds
  407eaf:	out    dx,eax
  407eb0:	add    esi,esi
  407eb2:	push   edi
  407eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407eb4:	jl     0x407ef7
  407eb6:	and    BYTE PTR [eax+0x2c],ch
  407eb9:	xchg   BYTE PTR [edi],ah
  407ebb:	mov    edx,0xcfc8cc71
  407ec0:	lds    esp,FWORD PTR [eax+0x47bc9e75]
  407ec6:	ja     0x407e83
  407ec8:	in     al,0xed
  407eca:	xlat   BYTE PTR ds:[ebx]
  407ecb:	adc    al,0xab
  407ecd:	pop    eax
  407ece:	loope  0x407e60
  407ed0:	in     eax,0xdb
  407ed2:	lods   eax,DWORD PTR ds:[esi]
  407ed3:	jo     0x407e96
  407ed5:	cs mov esi,0xf21b4523
  407edb:	and    ecx,DWORD PTR [ebx-0x4b]
  407ede:	out    dx,eax
  407edf:	push   ss
  407ee0:	xchg   esp,eax
  407ee1:	out    0x20,al
  407ee3:	adc    DWORD PTR [ecx],ecx
  407ee5:	in     al,0x20
  407ee7:	add    BYTE PTR ds:0xdc2b14f7,ah
  407eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eee:	cli    
  407eef:	mov    eax,0x7ed00dd0
  407ef4:	loope  0x407e9a
  407ef6:	ror    BYTE PTR [eax+0x2c7712f4],0xb
  407efd:	sub    BYTE PTR [ebx-0x3b],ch
  407f00:	add    ah,cl
  407f02:	cdq    
  407f03:	mov    dl,0x9f
  407f05:	nop
  407f06:	inc    eax
  407f07:	lock sahf 
  407f09:	dec    esi
  407f0a:	or     al,0x76
  407f0c:	jnp    0x407e96
  407f0e:	out    dx,eax
  407f0f:	scas   al,BYTE PTR es:[edi]
  407f10:	sti    
  407f11:	adc    DWORD PTR [ecx],0x7a142453
  407f17:	mov    esp,0xf2ea5611
  407f1c:	ins    BYTE PTR es:[edi],dx
  407f1d:	push   0x405741a2
  407f22:	clc    
  407f23:	or     DWORD PTR [ecx],ebx
  407f25:	data16 daa 
  407f27:	xchg   esp,eax
  407f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f29:	lock ss cmc 
  407f2c:	fsubr  QWORD PTR [edi]
  407f2e:	jge    0x407ef9
  407f30:	std    
  407f31:	mov    al,ds:0xdd700c96
  407f36:	jp     0x407f1f
  407f38:	cmp    al,dh
  407f3a:	inc    esi
  407f3b:	pop    edi
  407f3c:	leave  
  407f3d:	pop    edi
  407f3e:	(bad)  
  407f3f:	cmp    eax,0xea2821dc
  407f44:	adc    al,0xc5
  407f46:	popf   
  407f47:	cmp    dl,BYTE PTR [esi+0x6c4b9768]
  407f4d:	stc    
  407f4e:	jecxz  0x407efc
  407f50:	ror    dl,0x88
  407f53:	or     BYTE PTR [ecx-0x35],dl
  407f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f57:	aam    0x41
  407f59:	pushf  
  407f5a:	and    DWORD PTR [ebx-0x2b],ecx
  407f5d:	sub    eax,0xf6948b32
  407f62:	stos   BYTE PTR es:[edi],al
  407f63:	inc    ebx
  407f64:	cdq    
  407f65:	std    
  407f66:	(bad)  
  407f67:	xchg   edi,eax
  407f68:	daa    
  407f69:	pop    ebx
  407f6a:	inc    ebp
  407f6b:	push   es
  407f6c:	not    BYTE PTR [ecx-0x61de4f86]
  407f72:	sub    al,BYTE PTR [ebx+0x3e]
  407f75:	add    al,0xbb
  407f77:	cmc    
  407f78:	jp     0x407f1d
  407f7a:	imul   eax,DWORD PTR [eax+0x33],0xeee580fb
  407f81:	sbb    eax,0xf91498b
  407f86:	sbb    BYTE PTR [edx+0x35],ah
  407f89:	mov    esp,0xad43962d
  407f8e:	ret    
  407f8f:	enter  0x19c9,0x3a
  407f93:	call   0xc060:0x89edb1cb
  407f9a:	pop    edi
  407f9b:	sub    DWORD PTR [ebx+0x77],esp
  407f9e:	sbb    eax,0xfac09e92
  407fa3:	mov    esp,0xbca6e768
  407fa8:	pop    ebx
  407fa9:	aaa    
  407faa:	sub    al,0x84
  407fac:	in     al,dx
  407fad:	daa    
  407fae:	mov    ds:0x1432d78a,eax
  407fb3:	sti    
  407fb4:	and    dh,BYTE PTR [eax+eax*4+0x73]
  407fb8:	or     BYTE PTR [esi-0x7c4d1c07],0x5d
  407fbf:	data16 into 
  407fc1:	(bad)  [ecx+eax*8-0x22]
  407fc5:	or     DWORD PTR [ebp+ebx*8+0x5edf17f8],ecx
  407fcc:	pop    edx
  407fcd:	sbb    eax,0x4d5d7c2e
  407fd2:	add    ah,BYTE PTR [edx+esi*4-0x2c49f719]
  407fd9:	jg     0x408039
  407fdb:	jle    0x40800e
  407fdd:	mov    dl,0x50
  407fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe0:	jnp    0x407f64
  407fe2:	xor    DWORD PTR [esi+0x60],edi
  407fe5:	cdq    
  407fe6:	sub    dl,cl
  407fe8:	ins    DWORD PTR es:[edi],dx
  407fe9:	adc    ch,cl
  407feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fec:	xchg   esp,eax
  407fed:	call   0x85e7827c
  407ff2:	add    al,0x83
  407ff4:	and    edx,0xab27c8bf
  407ffa:	fcom   DWORD PTR [edx+edx*4-0x1d]
  407ffe:	fidivr WORD PTR [ecx]
  408000:	pop    esp
  408001:	aaa    
  408002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408003:	pop    ecx
  408004:	icebp  
  408005:	popf   
  408006:	out    dx,eax
  408007:	aas    
  408008:	xchg   BYTE PTR [edi+ecx*2-0x45],ah
  40800c:	and    esi,DWORD PTR [edx-0x533dfa40]
  408012:	dec    ebx
  408013:	mov    esi,0xa51669f5
  408018:	dec    edx
  408019:	sub    eax,0x4314ce66
  40801e:	cwde   
  40801f:	daa    
  408020:	in     eax,0xb9
  408022:	xchg   ebp,eax
  408023:	inc    ecx
  408024:	push   edi
  408025:	shl    edi,0x28
  408028:	mov    dl,BYTE PTR [ebx-0xe441e1]
  40802e:	mov    cl,0x33
  408030:	cmp    al,BYTE PTR ds:[eax+ebp*2]
  408034:	add    al,0x1e
  408036:	jae    0x4080a8
  408038:	mov    ch,0xee
  40803a:	mov    edx,0x54f848c8
  40803f:	nop    DWORD PTR [eax+eax*8+0x19]
  408044:	sbb    DWORD PTR [edi-0x4f477df6],ecx
  40804a:	nop
  40804b:	movq   mm6,QWORD PTR ds:0x4d5c5a83
  408052:	inc    ebp
  408053:	ja     0x40808a
  408055:	nop
  408056:	inc    esi
  408057:	jbe    0x407ff3
  408059:	pushf  
  40805a:	dec    ebx
  40805b:	and    bh,BYTE PTR [edi+0x43]
  40805e:	pop    ebx
  40805f:	call   0xffc29b44
  408064:	push   cs
  408065:	bound  ebp,QWORD PTR [ecx]
  408067:	cmp    ecx,DWORD PTR [edx+eax*2+0x1f]
  40806b:	push   edi
  40806c:	scas   al,BYTE PTR es:[edi]
  40806d:	jno    0x408001
  40806f:	pop    ebp
  408070:	push   edi
  408071:	dec    edx
  408072:	mov    bl,0xe5
  408074:	fdiv   DWORD PTR [ecx+0x25ba2904]
  40807a:	daa    
  40807b:	sub    DWORD PTR [eax],ebp
  40807d:	push   eax
  40807e:	test   al,0x2e
  408080:	lea    eax,[esi]
  408082:	stos   BYTE PTR es:[edi],al
  408083:	cmp    eax,0x46b3668e
  408088:	mov    bh,0x50
  40808a:	ins    BYTE PTR es:[edi],dx
  40808b:	dec    edx
  40808c:	jbe    0x40806a
  40808e:	xor    eax,0x1b624686
  408093:	fmul   DWORD PTR ds:0xee3b78ba
  408099:	stos   BYTE PTR es:[edi],al
  40809a:	or     cl,dh
  40809c:	push   ecx
  40809d:	call   0x31b3:0xb9e5a700
  4080a4:	icebp  
  4080a5:	fist   WORD PTR [edi-0x14]
  4080a8:	inc    ecx
  4080a9:	cs inc esi
  4080ab:	mov    ah,0x38
  4080ad:	and    DWORD PTR [eax-0x2f],ecx
  4080b0:	add    al,0xe9
  4080b2:	stc    
  4080b3:	bound  ebp,QWORD PTR [ebp+0x75]
  4080b6:	in     al,dx
  4080b7:	add    BYTE PTR [edi+0x4],ch
  4080ba:	mov    edx,0xad2714e3
  4080bf:	mov    edi,ecx
  4080c1:	outs   dx,DWORD PTR ds:[esi]
  4080c2:	add    eax,0x190e3be
  4080c7:	outs   dx,BYTE PTR ds:[esi]
  4080c8:	sub    al,0xa9
  4080ca:	hlt    
  4080cb:	fcomp  DWORD PTR cs:[ecx-0x1040cd90]
  4080d2:	scas   eax,DWORD PTR es:[edi]
  4080d3:	int    0x73
  4080d5:	jns    0x408103
  4080d7:	rcr    DWORD PTR [edi+eiz*1+0x13],1
  4080db:	int    0xb0
  4080dd:	lods   eax,DWORD PTR ds:[esi]
  4080de:	push   ss
  4080df:	pop    edx
  4080e0:	pop    ss
  4080e1:	loopne 0x408158
  4080e3:	xchg   edi,eax
  4080e4:	enter  0xb10b,0x8d
  4080e8:	idiv   DWORD PTR [edx-0x20]
  4080eb:	fsub   DWORD PTR [ebp-0x41cc2eaf]
  4080f1:	jns    0x408090
  4080f3:	xor    dl,BYTE PTR [edx+edx*1+0x9]
  4080f7:	and    BYTE PTR [esi],ch
  4080f9:	fdivrp st(5),st
  4080fb:	jae    0x408089
  4080fd:	jb     0x40811c
  4080ff:	sbb    al,0xb2
  408101:	lock add DWORD PTR [esi+0x56],edx
  408105:	xchg   edx,eax
  408106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408107:	outs   dx,DWORD PTR ds:[esi]
  408108:	cwde   
  408109:	mov    ch,0xc2
  40810b:	mov    ah,0xf2
  40810d:	mov    ebp,0xb21245ba
  408112:	out    0x7d,eax
  408114:	add    DWORD PTR [ebx],ecx
  408116:	cmc    
  408117:	js     0x4080d6
  408119:	add    ch,BYTE PTR [edi-0x574683f]
  40811f:	scas   al,BYTE PTR es:[edi]
  408120:	imul   edi,DWORD PTR [eax+0x642792ee],0xffffff8c
  408127:	xor    esi,DWORD PTR ds:0xd684dec0
  40812d:	dec    edx
  40812e:	push   edx
  40812f:	cli    
  408130:	ds mov ebp,0xb48b709b
  408136:	pop    edx
  408137:	jmp    0x4080e2
  408139:	pop    esp
  40813a:	retf   
  40813b:	int3   
  40813c:	pop    edx
  40813d:	fisub  WORD PTR [ecx-0xf]
  408140:	sub    eax,0x31a6eb72
  408145:	and    al,0xbe
  408147:	dec    ebp
  408148:	neg    DWORD PTR [esi+0x1cae52d2]
  40814e:	in     al,0x93
  408150:	jmp    0xa299:0x394a34f6
  408157:	jecxz  0x4081a4
  408159:	and    ecx,DWORD PTR [esi]
  40815b:	stos   BYTE PTR es:[edi],al
  40815c:	fyl2x  
  40815e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40815f:	ins    DWORD PTR es:[edi],dx
  408160:	mov    esp,cs
  408162:	pop    ebx
  408163:	pop    esi
  408164:	mov    al,ds:0x9300c3e5
  408169:	pushf  
  40816a:	arpl   WORD PTR [ebx],dx
  40816c:	jne    0x4081cd
  40816e:	jecxz  0x408191
  408170:	add    al,0x53
  408172:	jns    0x4080ff
  408174:	repnz mov dl,0xbe
  408177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408178:	mov    BYTE PTR [ecx+ebp*8-0x2e],dh
  40817c:	pop    edx
  40817d:	push   0x5e
  40817f:	mov    ds:0x40ad0f1d,al
  408184:	jb     0x4081cd
  408186:	retf   0x1f53
  408189:	cwde   
  40818a:	shr    BYTE PTR [edi],cl
  40818c:	sahf   
  40818d:	jns    0x4081e4
  40818f:	xchg   edi,eax
  408190:	in     eax,dx
  408191:	and    al,0x10
  408193:	test   DWORD PTR [esi+eax*4-0x1a],esp
  408197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408198:	and    eax,0x486e46ec
  40819d:	out    dx,al
  40819e:	neg    DWORD PTR [edi]
  4081a0:	fwait
  4081a1:	jae    0x40821b
  4081a3:	and    dl,al
  4081a5:	jb     0x408135
  4081a7:	fistp  WORD PTR [ecx+0x20]
  4081aa:	xor    eax,0x4025231b
  4081af:	mov    cl,0x45
  4081b1:	fxam   
  4081b3:	jbe    0x408155
  4081b5:	js     0x408178
  4081b7:	push   ds
  4081b8:	push   ds
  4081b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ba:	ins    BYTE PTR es:[edi],dx
  4081bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081bc:	cmp    al,dh
  4081be:	scas   al,BYTE PTR es:[edi]
  4081bf:	or     dl,cl
  4081c1:	cdq    
  4081c2:	xchg   ebx,eax
  4081c3:	popf   
  4081c4:	inc    eax
  4081c5:	jmp    0xd474:0x5e42b797
  4081cc:	enter  0xdc84,0xb3
  4081d0:	(bad)  
  4081d1:	(bad)  
  4081d2:	scas   eax,DWORD PTR es:[edi]
  4081d3:	mov    ch,0x6a
  4081d5:	fsubr  DWORD PTR [esi-0x16]
  4081d8:	sti    
  4081d9:	xor    eax,0x1230553f
  4081de:	pop    ebp
  4081df:	test   BYTE PTR [ecx+0x4cba09b1],ah
  4081e5:	icebp  
  4081e6:	(bad)  
  4081e7:	in     al,0x6d
  4081e9:	in     al,dx
  4081ea:	hlt    
  4081eb:	sahf   
  4081ec:	mov    ebx,0x863784d
  4081f1:	dec    ebx
  4081f2:	mov    ds:0xb75b33ca,eax
  4081f7:	add    eax,0xd5d40590
  4081fc:	ret    
  4081fd:	mov    al,BYTE PTR [ecx]
  4081ff:	xcrypt-ctr (bad)
  408200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408201:	lahf   
  408202:	adc    eax,0x7a4e4f20
  408207:	pop    ebp
  408208:	pop    eax
  408209:	cmp    al,0xa
  40820b:	or     ah,BYTE PTR [eax+0x10782f9]
  408211:	retf   0xb852
  408214:	test   eax,0x6d2f2fc6
  408219:	nop
  40821a:	lock pop edi
  40821c:	and    eax,0x77109c01
  408221:	repz pop ebx
  408223:	xor    al,0x40
  408225:	cmp    al,bl
  408227:	icebp  
  408228:	adc    eax,0x3d619989
  40822d:	pop    ecx
  40822e:	sub    eax,0x97ad4cb2
  408233:	xchg   ebx,eax
  408234:	aaa    
  408235:	xor    al,0x54
  408237:	xchg   ebp,eax
  408238:	in     al,dx
  408239:	jecxz  0x408291
  40823b:	xchg   edx,eax
  40823c:	xor    al,0xa
  40823e:	jg     0x40822d
  408240:	cdq    
  408241:	popa   
  408242:	pushw  0x8b27
  408246:	repnz out 0x93,eax
  408249:	sahf   
  40824a:	jge    0x408235
  40824c:	lods   al,BYTE PTR ds:[esi]
  40824d:	out    0xe0,al
  40824f:	or     al,0xda
  408251:	or     BYTE PTR [edi+0x18],ah
  408254:	je     0x408284
  408256:	sbb    BYTE PTR [ebp+ebx*1-0x4ee37027],0x7d
  40825e:	(bad)  
  40825f:	and    eax,0xb4d9e1e9
  408264:	sub    DWORD PTR [edx-0x20],ebp
  408267:	mov    ebx,0x7460633e
  40826c:	loopne 0x4082d6
  40826e:	or     ebx,esi
  408270:	mov    ah,0x44
  408272:	aaa    
  408273:	xchg   DWORD PTR [eax+edx*2],edx
  408276:	sbb    edi,DWORD PTR [edx]
  408278:	je     0x4081ff
  40827a:	call   0x6522383
  40827f:	adc    dl,dh
  408281:	mov    fs,WORD PTR [ecx]
  408283:	(bad)  [esi+ebx*1+0x25]
  408287:	dec    ecx
  408288:	lea    esi,[esi-0x2b]
  40828b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40828c:	clc    
  40828d:	cld    
  40828e:	jle    0x4082fc
  408290:	sbb    cl,cl
  408292:	ja     0x408289
  408294:	inc    eax
  408295:	xor    ah,BYTE PTR [eax+0x2f38aed9]
  40829b:	push   ecx
  40829c:	or     eax,0xa510635
  4082a1:	addr16 mov bh,0x96
  4082a4:	(bad)  
  4082a5:	cli    
  4082a6:	add    ebx,esi
  4082a8:	jnp    0x4082e0
  4082aa:	lods   al,BYTE PTR ds:[esi]
  4082ab:	add    al,0x18
  4082ad:	ins    BYTE PTR es:[edi],dx
  4082ae:	mov    bh,0x79
  4082b0:	(bad)  
  4082b1:	and    eax,0xd1a8bb91
  4082b6:	jg     0x408290
  4082b8:	add    DWORD PTR [ebp+0x5198e7d7],eax
  4082be:	inc    esi
  4082bf:	(bad)  
  4082c0:	and    bl,dh
  4082c2:	jns    0x408305
  4082c4:	jle    0x408343
  4082c6:	stos   DWORD PTR es:[edi],eax
  4082c7:	cmp    edi,DWORD PTR [esi]
  4082c9:	xor    BYTE PTR [ebp+0x49a729d],0x6d
  4082d0:	sbb    esp,DWORD PTR [eax+0x72366bbb]
  4082d6:	xchg   esi,eax
  4082d7:	call   FWORD PTR [ebx+edx*8-0x5a1c78a9]
  4082de:	dec    ebx
  4082df:	hlt    
  4082e0:	ret    
  4082e1:	mov    ebp,fs
  4082e3:	lods   al,BYTE PTR ds:[esi]
  4082e4:	mov    bh,0xcf
  4082e6:	pop    es
  4082e7:	or     DWORD PTR [edx],esi
  4082e9:	int3   
  4082ea:	ret    
  4082eb:	pop    edi
  4082ec:	fdivr  DWORD PTR [ecx]
  4082ee:	int    0x7b
  4082f0:	in     eax,dx
  4082f1:	jno    0x4082f7
  4082f3:	lea    esp,[esi+0x54ba81f8]
  4082f9:	sbb    BYTE PTR [ebx-0x4b],bl
  4082fc:	mov    DWORD PTR [esi],ebx
  4082fe:	daa    
  4082ff:	lods   al,BYTE PTR ds:[esi]
  408300:	jo     0x40832e
  408302:	mov    ecx,0xbdd72cd8
  408307:	jmp    0x40830c
  408309:	lods   al,BYTE PTR ds:[esi]
  40830a:	inc    esi
  40830b:	adc    eax,0x9b7bdfb1
  408310:	mov    bh,0x74
  408312:	mul    BYTE PTR [ebp+0x3f]
  408315:	or     BYTE PTR [ecx+0x651613cb],0x79
  40831c:	fcomip st,st(7)
  40831e:	push   edi
  40831f:	ins    DWORD PTR es:[edi],dx
  408320:	pop    cx
  408322:	stos   BYTE PTR es:[edi],al
  408323:	fisub  DWORD PTR [ebx]
  408325:	in     eax,0x82
  408327:	sti    
  408328:	stos   DWORD PTR es:[edi],eax
  408329:	push   cs
  40832a:	pushf  
  40832b:	mov    al,0x6d
  40832d:	lods   eax,DWORD PTR ds:[esi]
  40832e:	xchg   DWORD PTR [esi+0xad635e9],ecx
  408334:	(bad)
  408337:	sbb    eax,0xbad0cdd5
  40833c:	add    al,0x7b
  40833e:	jp     0x4083bc
  408340:	retf   0xfac
  408343:	push   edx
  408344:	inc    ecx
  408345:	mov    dh,BYTE PTR [eax-0x8]
  408348:	sub    eax,DWORD PTR [edx+eax*8]
  40834b:	fadd   st(3),st
  40834d:	into   
  40834e:	leave  
  40834f:	mov    bh,0x93
  408351:	jecxz  0x4082fd
  408353:	dec    ecx
  408354:	jge    0x408319
  408356:	clc    
  408357:	jb     0x40837c
  408359:	pop    edx
  40835a:	aad    0x3a
  40835c:	sub    eax,DWORD PTR [edi]
  40835e:	jns    0x408305
  408360:	frstor [eax+0x53]
  408363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408364:	jle    0x408359
  408366:	mov    ds:0x181fb904,al
  40836b:	lds    ecx,FWORD PTR [edx-0x4f]
  40836e:	shr    DWORD PTR [eax],1
  408370:	push   ebx
  408371:	and    eax,ebx
  408373:	add    eax,0xd87ae6e8
  408378:	call   0x6776976b
  40837d:	cli    
  40837e:	sub    BYTE PTR [ebx+eiz*1-0x45405d8a],al
  408385:	call   0xa13b:0x788df827
  40838c:	es int3 
  40838e:	push   ebp
  40838f:	inc    edx
  408390:	mov    BYTE PTR [ebx+0x34],cl
  408393:	xchg   esi,eax
  408394:	jns    0x408325
  408396:	sahf   
  408397:	xchg   ebx,eax
  408398:	mov    al,0x42
  40839a:	jp     0x408348
  40839c:	jmp    0x39e1be16
  4083a1:	adc    esp,ecx
  4083a3:	pusha  
  4083a4:	sub    BYTE PTR [esi],bh
  4083a6:	jo     0x408369
  4083a8:	or     BYTE PTR [esi],ah
  4083aa:	push   esi
  4083ab:	aas    
  4083ac:	cmp    al,0xdc
  4083ae:	imul   DWORD PTR [eax+eax*2]
  4083b1:	adc    ah,al
  4083b3:	or     eax,0x34b78ed3
  4083b8:	fnstsw WORD PTR ss:[eax+eiz*2]
  4083bc:	popa   
  4083bd:	or     al,0x4b
  4083bf:	or     BYTE PTR [ebx+0x3c029554],ah
  4083c5:	sub    ebx,DWORD PTR [ebp+0x2341e963]
  4083cb:	ja     0x408375
  4083cd:	mov    BYTE PTR [ebx+ecx*4+0x7ebb3836],dl
  4083d4:	xchg   ecx,eax
  4083d5:	or     edx,DWORD PTR gs:[esi-0x4]
  4083d9:	jl     0x408431
  4083db:	daa    
  4083dc:	imul   edx,DWORD PTR [ebx],0x153220be
  4083e2:	(bad)  
  4083e3:	out    dx,al
  4083e4:	jmp    0xb0b9:0x6afa58a4
  4083eb:	add    DWORD PTR [edx],edi
  4083ed:	adc    BYTE PTR [edi],dh
  4083ef:	inc    esp
  4083f0:	and    DWORD PTR [edi+0x2e],esp
  4083f3:	xor    esi,DWORD PTR [edi+0x18]
  4083f6:	adc    ebx,DWORD PTR [esi+0x3ad6aaa]
  4083fc:	mov    al,ds:0x8784506c
  408401:	outs   dx,DWORD PTR ds:[esi]
  408402:	fnstcw WORD PTR [ebp+0x15b3128]
  408408:	ret    
  408409:	xchg   edi,eax
  40840a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40840b:	jae    0x4083c0
  40840d:	adc    BYTE PTR [ecx+0x741661b4],ah
  408413:	ror    ebx,0x8
  408416:	jmp    0x4083a7
  408418:	lds    ebp,FWORD PTR [eax-0x18fa61f9]
  40841e:	test   BYTE PTR [ebx-0x1a18f79c],dh
  408424:	sub    edx,DWORD PTR [ebx]
  408426:	pop    edx
  408427:	mov    BYTE PTR [edx+0x18],dl
  40842a:	fdivr  st(3),st
  40842c:	in     al,dx
  40842d:	or     eax,0x1815086b
  408432:	pop    ecx
  408433:	add    al,0x4f
  408435:	and    BYTE PTR [esi],0x79
  408438:	mov    DWORD PTR [edi],ecx
  40843a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40843b:	daa    
  40843c:	or     BYTE PTR [eax],cl
  40843e:	or     esi,DWORD PTR [edi+0x6c]
  408441:	mov    eax,0xda10763f
  408446:	xor    esi,eax
  408448:	mov    dh,0x7a
  40844a:	fst    DWORD PTR [edi-0xe]
  40844d:	pop    esp
  40844e:	cmp    edi,DWORD PTR [ebx]
  408450:	mov    cl,0x9d
  408452:	fwait
  408453:	mov    ds:0x4b20fdbd,eax
  408458:	das    
  408459:	mov    esp,edi
  40845b:	inc    esi
  40845c:	inc    ecx
  40845d:	in     al,dx
  40845e:	cmp    esp,ecx
  408460:	into   
  408461:	mov    esi,0x9ad9ef5a
  408466:	jp     0x40843b
  408468:	imul   esi,DWORD PTR [esi-0x68a732ed],0xbd175740
  408472:	mov    bh,0x98
  408474:	jg     0x4084ab
  408476:	gs mov cl,0xb4
  408479:	stos   BYTE PTR es:[edi],al
  40847a:	pop    es
  40847b:	jne    0x408432
  40847d:	jp     0x408430
  40847f:	jge    0x408436
  408481:	mov    al,al
  408483:	mov    ebp,0xec2a1bd3
  408488:	and    DWORD PTR [ebx-0x21cdb12d],ecx
  40848e:	pop    edi
  40848f:	jmp    0x408443
  408491:	outs   dx,BYTE PTR ds:[esi]
  408492:	push   ds
  408493:	repz lea esi,[ecx-0x325f002c]
  40849a:	or     ah,BYTE PTR [edx]
  40849c:	push   edi
  40849d:	enter  0xd2db,0x1d
  4084a1:	inc    esp
  4084a2:	popa   
  4084a3:	sbb    eax,0x6fd08ab7
  4084a8:	popf   
  4084a9:	nop
  4084aa:	hlt    
  4084ab:	aam    0x10
  4084ad:	test   al,0xa2
  4084af:	dec    edi
  4084b0:	sub    esi,ebp
  4084b2:	pop    esi
  4084b3:	js     0x408525
  4084b5:	adc    BYTE PTR [edi+0x4b],bl
  4084b8:	sub    BYTE PTR [ecx+ebp*4+0x1f783ea6],cl
  4084bf:	adc    esp,ebx
  4084c1:	cdq    
  4084c2:	xor    DWORD PTR ds:0x54aa838,esp
  4084c8:	sbb    BYTE PTR [ebp+0xb],bh
  4084cb:	pop    edx
  4084cc:	cli    
  4084cd:	mov    bl,0x1b
  4084cf:	enter  0xed8e,0xe1
  4084d3:	bound  esi,QWORD PTR [eax+0x14]
  4084d6:	hlt    
  4084d7:	jle    0x4084e3
  4084d9:	add    DWORD PTR [edx-0x70f4a5ad],0xffffff9c
  4084e0:	out    0x27,eax
  4084e2:	pop    ss
  4084e3:	cwde   
  4084e4:	cmc    
  4084e5:	pavgb  mm6,QWORD PTR [edx+esi*8-0x62]
  4084ea:	jne    0x408487
  4084ec:	mov    eax,ds:0xd51bf7b5
  4084f1:	jp     0x4084c7
  4084f3:	in     al,dx
  4084f4:	pop    ebp
  4084f5:	mov    eax,0x46531ea8
  4084fa:	xchg   edi,eax
  4084fb:	mov    al,BYTE PTR [edi+0x42122fbe]
  408501:	repnz xchg ebp,eax
  408503:	shl    DWORD PTR [eax+eax*1],0xce
  408507:	shr    DWORD PTR [ebx],1
  408509:	add    al,dh
  40850b:	fidivr DWORD PTR [edi]
  40850d:	jne    0x4084b1
  40850f:	xchg   DWORD PTR [eax+esi*4+0x61],edx
  408513:	out    dx,al
  408514:	mov    al,0x3a
  408516:	sbb    edx,edi
  408518:	push   eax
  408519:	mov    fs,WORD PTR [edx]
  40851b:	dec    esp
  40851c:	xor    BYTE PTR ds:0xdf3f7253,ch
  408522:	sub    bh,BYTE PTR [esi+0x689ed335]
  408528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408529:	sbb    BYTE PTR [eax],ah
  40852b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40852c:	mov    al,ds:0xf852e1aa
  408531:	xchg   BYTE PTR [ecx+ecx*1],dl
  408534:	leave  
  408535:	pop    eax
  408536:	add    BYTE PTR [ebp-0x36],cl
  408539:	push   edx
  40853a:	inc    eax
  40853b:	xor    edx,0x6643fc52
  408541:	mov    ch,0x7a
  408543:	adc    esp,DWORD PTR [esi+0x6a]
  408546:	mov    ch,0xbd
  408548:	(bad)  
  408549:	sti    
  40854a:	pop    ds
  40854b:	cmp    eax,0xb307e4a9
  408550:	xor    al,BYTE PTR [ebp+ebx*8+0x73f0d6ad]
  408557:	dec    ecx
  408558:	sti    
  408559:	pop    ecx
  40855a:	iret   
  40855b:	rcr    DWORD PTR [esp+edi*1+0x63],1
  40855f:	aad    0x80
  408561:	xor    DWORD PTR [ebx+0x77b598b5],ecx
  408567:	jp     0x4085bc
  408569:	int3   
  40856a:	test   eax,0x24c144ac
  40856f:	pop    edi
  408570:	push   edi
  408571:	out    0xea,al
  408573:	fld    DWORD PTR [ebx]
  408575:	shl    DWORD PTR [ebx],cl
  408577:	or     BYTE PTR [ecx],al
  408579:	adc    al,0x58
  40857b:	sub    BYTE PTR [edx+0x5a511c49],al
  408581:	aaa    
  408582:	adc    ah,al
  408584:	and    al,0x16
  408586:	loop   0x4085fa
  408588:	add    DWORD PTR [ecx+0x30],0x14a3e41c
  40858f:	jae    0x408571
  408591:	mov    eax,0x91ad021
  408596:	std    
  408597:	call   0x93e6:0x3d7a722c
  40859e:	ror    ch,cl
  4085a0:	or     BYTE PTR [ecx-0x37bf802f],cl
  4085a6:	add    ah,BYTE PTR [ebp-0xdad101e]
  4085ac:	repz daa 
  4085ae:	push   edx
  4085af:	les    edx,FWORD PTR [esi+ebx*1]
  4085b2:	sub    al,0xef
  4085b4:	push   ecx
  4085b5:	mov    ds:0xd091c0e,eax
  4085ba:	inc    eax
  4085bb:	sbb    cl,BYTE PTR [ebx]
  4085bd:	sbb    al,0x79
  4085bf:	in     al,0x93
  4085c1:	cs pop ebp
  4085c3:	fstp   DWORD PTR [edi-0x1b380ded]
  4085c9:	lahf   
  4085ca:	or     ebp,DWORD PTR [edx-0x68bc646f]
  4085d0:	retf   
  4085d1:	cmp    eax,0xdef64850
  4085d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085d7:	ret    
  4085d8:	jae    0x4085e5
  4085da:	sbb    BYTE PTR [esi+0x64],bl
  4085dd:	adc    DWORD PTR ds:0xa05cba3c,esi
  4085e3:	and    al,0x84
  4085e5:	add    al,0x28
  4085e7:	int3   
  4085e8:	xchg   esp,eax
  4085e9:	popa   
  4085ea:	push   ecx
  4085eb:	push   0xfdc62077
  4085f0:	cmp    BYTE PTR [ebx],dl
  4085f2:	fisttp WORD PTR [ebx]
  4085f4:	shl    BYTE PTR [edx-0x9],cl
  4085f7:	adc    edx,edi
  4085f9:	ja     0x4085f4
  4085fb:	cmc    
  4085fc:	sub    DWORD PTR [esi],edx
  4085fe:	cmp    eax,0x20e17cc9
  408603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408604:	xor    BYTE PTR [ecx-0x4f],0xf3
  408608:	mov    eax,ds:0x9099a481
  40860d:	lds    eax,FWORD PTR [ecx]
  40860f:	sti    
  408610:	sahf   
  408611:	push   ss
  408612:	inc    eax
  408613:	and    bh,0xa0
  408616:	push   ecx
  408617:	push   ss
  408618:	je     0x4085e3
  40861a:	cmp    DWORD PTR [ebp+ebp*2-0x44b72403],esp
  408621:	jle    0x40864f
  408623:	mov    ds:0xdf245443,eax
  408628:	jns    0x40868b
  40862a:	jl     0x408689
  40862c:	rdseed edx
  40862f:	fsub   QWORD PTR [edi-0x68199832]
  408635:	pop    esp
  408636:	sbb    DWORD PTR [edx-0x1a8185b3],ecx
  40863c:	mov    ebx,0x2f1d121a
  408641:	sbb    DWORD PTR [edi+0x72de3358],esi
  408647:	push   ebp
  408648:	pop    ss
  408649:	lea    ecx,[esi]
  40864b:	test   al,0xc5
  40864d:	add    DWORD PTR [ecx-0x75],ebx
  408650:	cmp    ebp,DWORD PTR [edx-0x77]
  408653:	xchg   edx,eax
  408654:	pusha  
  408655:	xor    dl,BYTE PTR [edi+edi*1-0x7c]
  408659:	jmp    0x6be7:0xed6e1226
  408660:	sbb    eax,0x616a095c
  408665:	loope  0x40861e
  408667:	cmp    DWORD PTR [esi-0x7c61be4f],ecx
  40866d:	outs   dx,DWORD PTR ds:[esi]
  40866e:	and    eax,0xd37b62d7
  408673:	(bad)  
  408675:	adc    bl,BYTE PTR [ecx]
  408677:	sbb    DWORD PTR [ebp+0x7a8809ab],esi
  40867d:	lahf   
  40867e:	test   BYTE PTR [esi],ch
  408680:	xchg   edx,eax
  408681:	add    al,0x96
  408683:	push   ebp
  408684:	fsub   DWORD PTR [ecx]
  408686:	retf   
  408687:	pop    ss
  408688:	pop    eax
  408689:	sub    BYTE PTR [ecx+0x2d],cl
  40868c:	int    0x2a
  40868e:	pop    eax
  40868f:	mov    WORD PTR [esi+ebp*4-0x9fc0076],ds
  408696:	lea    ebp,[ebx+0x3336d3d9]
  40869c:	and    ah,bl
  40869e:	dec    esp
  40869f:	pop    esp
  4086a0:	and    dh,BYTE PTR [esi]
  4086a2:	jmp    0x4086f3
  4086a4:	rcl    ecx,0x85
  4086a7:	ror    DWORD PTR [ebp+0x22],0x7d
  4086ab:	out    0x62,al
  4086ad:	mov    eax,ds:0xc2f38f96
  4086b2:	in     al,0x1
  4086b4:	sbb    BYTE PTR [ecx],bh
  4086b6:	sti    
  4086b7:	dec    ebp
  4086b8:	jb     0x408658
  4086ba:	cmc    
  4086bb:	out    dx,eax
  4086bc:	pop    esp
  4086bd:	xor    eax,0x17bac7c6
  4086c2:	stos   DWORD PTR es:[edi],eax
  4086c3:	daa    
  4086c4:	mov    ecx,0x3f5d6376
  4086c9:	pop    es
  4086ca:	mov    ch,0xb6
  4086cc:	dec    ebx
  4086cd:	push   edi
  4086ce:	ror    DWORD PTR [edi-0x46],0x44
  4086d2:	mov    eax,ds:0xa7467a81
  4086d7:	mov    esi,0x65002bbd
  4086dc:	mov    dl,0x9
  4086de:	bswap  edx
  4086e0:	aaa    
  4086e1:	sbb    BYTE PTR [ecx-0x11],dh
  4086e4:	adc    ebx,edx
  4086e6:	ss cli 
  4086e8:	jle    0x408726
  4086ea:	jecxz  0x4086be
  4086ec:	adc    bh,bl
  4086ee:	mov    al,ds:0xef9e799f
  4086f3:	mov    bl,0xd0
  4086f5:	add    eax,0x2b56ffd2
  4086fa:	clc    
  4086fb:	sub    eax,0xeab88edb
  408700:	retf   
  408701:	sti    
  408702:	enter  0x9da2,0x10
  408706:	(bad)  
  408707:	jns    0x4086dd
  408709:	add    DWORD PTR cs:[esi],edx
  40870c:	push   es
  40870d:	mov    esp,DWORD PTR [ebx+0x5f]
  408710:	or     al,0xb8
  408712:	sub    BYTE PTR [eax],bl
  408714:	push   esi
  408715:	sti    
  408716:	jge    0x408712
  408718:	or     dl,bh
  40871a:	xor    DWORD PTR [ebp-0x5b],esp
  40871d:	into   
  40871e:	push   es
  40871f:	mov    ecx,0xfda73461
  408724:	xor    eax,DWORD PTR [edx+0x69]
  408727:	push   ecx
  408728:	es aad 0x80
  40872b:	jle    0x408768
  40872d:	repnz or DWORD PTR [ebp+0x53051605],edi
  408734:	ins    DWORD PTR es:[edi],dx
  408735:	out    dx,eax
  408736:	push   ss
  408737:	ins    DWORD PTR es:[edi],dx
  408738:	sbb    dl,BYTE PTR [ebp+0x7e92fce5]
  40873e:	mov    al,BYTE PTR [edx-0x79]
  408741:	sbb    eax,DWORD PTR [esi-0x28]
  408744:	ret    
  408745:	mov    ah,0x97
  408747:	mov    DWORD PTR [ecx+0x76b8c109],esi
  40874d:	cmp    DWORD PTR [eax+ecx*2],0x19949b9d
  408754:	shl    DWORD PTR [edx+0x7bf0db88],cl
  40875a:	and    ebp,DWORD PTR [edi-0x2f]
  40875d:	xor    al,0xd6
  40875f:	lea    ebx,[ecx-0x5]
  408762:	inc    edx
  408763:	jl     0x4086e9
  408765:	dec    ebx
  408766:	call   0x130d:0x65d99a9f
  40876d:	fcom   QWORD PTR [ecx+0x7f069d48]
  408773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408774:	in     al,0x6a
  408776:	push   ds
  408777:	fwait
  408778:	xchg   DWORD PTR [edx+ebx*8+0x2743f1e8],edx
  40877f:	sbb    BYTE PTR [ebx],al
  408781:	loop   0x408713
  408783:	daa    
  408784:	push   edx
  408785:	das    
  408786:	sub    edi,DWORD PTR [eax]
  408788:	and    al,0xb8
  40878a:	xchg   esp,eax
  40878b:	jg     0x408733
  40878d:	jmp    0xdbfd:0xbccb320b
  408794:	pop    esi
  408795:	or     eax,0x4618cd06
  40879a:	mov    ds:0x58a4c8c4,al
  40879f:	sbb    esi,ebx
  4087a1:	ins    BYTE PTR es:[edi],dx
  4087a2:	ror    BYTE PTR [edi-0x21],cl
  4087a5:	xchg   edi,eax
  4087a6:	xor    bh,BYTE PTR [ebx+0x428f710]
  4087ac:	outs   dx,BYTE PTR ds:[esi]
  4087ad:	and    esp,DWORD PTR [edi+0x4b]
  4087b0:	and    ebx,edi
  4087b2:	cmp    al,0xe0
  4087b4:	fs add al,0x2b
  4087b7:	cs gs jg 0x4087c0
  4087bb:	(bad)  
  4087bd:	push   eax
  4087be:	test   eax,0xffabf3b3
  4087c3:	cdq    
  4087c4:	pop    ecx
  4087c5:	fmul   QWORD PTR [edx]
  4087c7:	loop   0x408779
  4087c9:	dec    ebp
  4087ca:	mov    DWORD PTR [eax],ebp
  4087cc:	xchg   ebp,eax
  4087cd:	mov    dh,0xf4
  4087cf:	jmp    0x8390:0xb7b17994
  4087d6:	mov    esp,0x3e82a6b3
  4087db:	and    al,BYTE PTR [edx+ecx*4-0x5a275d89]
  4087e2:	daa    
  4087e3:	pop    es
  4087e4:	test   DWORD PTR [edi+0x195ce3ec],esi
  4087ea:	inc    edi
  4087eb:	mov    ecx,0x15842cc5
  4087f0:	fld1   
  4087f2:	mov    DWORD PTR [edx+ebp*2+0x7f],esi
  4087f6:	inc    ecx
  4087f7:	clc    
  4087f8:	shl    DWORD PTR [edx],1
  4087fa:	rcl    BYTE PTR [ebp-0x45],cl
  4087fd:	sub    al,0x63
  4087ff:	rdpmc  
  408801:	jo     0x4087f3
  408803:	rcr    BYTE PTR [esi],cl
  408805:	jne    0x408879
  408807:	sahf   
  408808:	repnz iret 
  40880a:	rcl    bh,0x37
  40880d:	inc    ebx
  40880e:	aam    0xab
  408810:	mov    cs,WORD PTR [eax+0x7e3f80d]
  408816:	(bad)  
  408818:	fdiv   QWORD PTR [edx+edx*4+0x18e8d79]
  40881f:	cmp    al,dl
  408821:	in     eax,dx
  408822:	cmp    BYTE PTR [edx],ah
  408824:	xchg   esp,eax
  408825:	stos   BYTE PTR es:[edi],al
  408826:	dec    ebx
  408827:	cmp    al,0x26
  408829:	or     eax,0x74ac5398
  40882e:	push   edx
  40882f:	bound  eax,QWORD PTR [eax+0xda5c786]
  408835:	clc    
  408836:	(bad)  
  408837:	out    0x55,eax
  408839:	adc    edi,DWORD PTR [edi+eax*4]
  40883c:	xor    cl,dh
  40883e:	outs   dx,DWORD PTR ds:[esi]
  40883f:	push   ebp
  408840:	lock or BYTE PTR [edi+0x3d],ch
  408844:	imul   esi,DWORD PTR [edx],0xffffffad
  408847:	xlat   BYTE PTR ds:[ebx]
  408848:	cld    
  408849:	sahf   
  40884a:	ja     0x408868
  40884c:	mov    ebp,0x690343b0
  408851:	test   BYTE PTR [edx],0x5
  408854:	inc    ebx
  408855:	adc    DWORD PTR [eax-0x13e7f282],0xffffff9a
  40885c:	cld    
  40885d:	std    
  40885e:	mov    edx,edi
  408860:	cmp    eax,0x70634660
  408865:	dec    ebp
  408866:	mov    dh,BYTE PTR [ebp+0x238208bd]
  40886c:	es call 0xc4a7:0x6efc8229
  408874:	in     al,0xc9
  408876:	push   cs
  408877:	mov    edx,0x8f1b31b4
  40887c:	mov    WORD PTR [edx+0x24293361],fs
  408882:	stc    
  408883:	xchg   al,dh
  408885:	arpl   WORD PTR [eax+0x35acbde8],cx
  40888b:	scas   al,BYTE PTR es:[edi]
  40888c:	adc    dl,bh
  40888e:	jg     0x408830
  408890:	sub    DWORD PTR ds:0x2c86a735,0x3aacb9cd
  40889a:	nop
  40889b:	dec    esi
  40889c:	iret   
  40889d:	outs   dx,BYTE PTR ds:[esi]
  40889e:	push   0x713407f
  4088a3:	xor    DWORD PTR [ecx+0x43],esi
  4088a6:	movlps QWORD PTR [edi],xmm4
  4088a9:	sbb    BYTE PTR [edi+ecx*1],al
  4088ac:	mov    edi,0x3a013822
  4088b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b2:	jne    0x40890f
  4088b4:	(bad)  
  4088b5:	lock es pop edi
  4088b8:	lock jns 0x408881
  4088bb:	xchg   edi,eax
  4088bc:	scas   al,BYTE PTR es:[edi]
  4088bd:	out    dx,al
  4088be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088bf:	cmc    
  4088c0:	pop    esp
  4088c1:	xor    eax,0x45d9a30d
  4088c6:	sub    al,0xc9
  4088c8:	mov    bl,0x58
  4088ca:	adc    BYTE PTR [eax+ecx*8-0x482a362],bh
  4088d1:	push   edi
  4088d2:	push   eax
  4088d3:	sar    DWORD PTR ds:0x10c2c65f,0x67
  4088da:	sar    al,cl
  4088dc:	add    al,0x14
  4088de:	dec    edx
  4088df:	ror    DWORD PTR [ecx],1
  4088e1:	stos   DWORD PTR es:[edi],eax
  4088e2:	dec    ebp
  4088e3:	mov    cl,0xe6
  4088e5:	aas    
  4088e6:	out    0x7,eax
  4088e8:	lea    edi,[ebx-0x77745e94]
  4088ee:	sub    al,0x1e
  4088f0:	dec    esp
  4088f1:	xchg   edx,eax
  4088f2:	mov    eax,ds:0xbffa850f
  4088f7:	inc    edi
  4088f8:	fsubr  DWORD PTR [edx+0x4149393e]
  4088fe:	mov    bh,0x1e
  408900:	jbe    0x408902
  408902:	rol    ch,cl
  408904:	or     al,0xa
  408906:	pop    ds
  408907:	or     eax,0xd902bd93
  40890c:	pop    esi
  40890d:	into   
  40890e:	pop    edi
  40890f:	in     eax,0x4d
  408911:	hlt    
  408912:	retf   0x285e
  408915:	dec    esi
  408916:	dec    ecx
  408917:	pop    DWORD PTR [eax+0x1f]
  40891a:	pop    esi
  40891b:	jae    0x408974
  40891d:	and    esi,ebx
  40891f:	dec    ebp
  408920:	call   0x80157343
  408925:	push   eax
  408926:	ss sbb bh,bh
  408929:	jno    0x40896e
  40892b:	(bad)  
  40892c:	int    0x4e
  40892e:	xchg   ebp,eax
  40892f:	jge    0x408952
  408931:	inc    ebp
  408932:	gs cmp eax,0x10c49248
  408938:	mov    DWORD PTR [ecx-0x6d308077],0xe6972ef1
  408942:	add    DWORD PTR [edx-0x69],eax
  408945:	push   esi
  408946:	jnp    0x408998
  408948:	xor    bl,BYTE PTR [ebx]
  40894a:	bound  eax,QWORD PTR [eax]
  40894c:	mov    bh,0x35
  40894e:	mov    es,WORD PTR [eax-0x7d]
  408951:	cli    
  408952:	xchg   edx,eax
  408953:	push   ds
  408954:	pop    ds
  408955:	mov    bl,0x4b
  408957:	mov    cl,0x96
  408959:	inc    esp
  40895a:	push   ecx
  40895b:	stc    
  40895c:	sbb    bh,BYTE PTR [edx+esi*4]
  40895f:	inc    eax
  408960:	loop   0x4089aa
  408962:	ja     0x408985
  408964:	test   eax,0xa083f03b
  408969:	push   esp
  40896a:	push   es
  40896b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40896c:	xchg   ecx,eax
  40896d:	loop   0x408910
  40896f:	add    DWORD PTR [ebp+0x4b],eax
  408972:	ds push ss
  408974:	fs mov edx,0x29f940bb
  40897a:	jnp    0x408932
  40897c:	(bad)  
  40897d:	leave  
  40897e:	iret   
  40897f:	xor    BYTE PTR [esi+0x5b],ch
  408982:	(bad)  
  408984:	out    0x82,eax
  408986:	js     0x40897b
  408988:	stc    
  408989:	adc    cl,BYTE PTR [eax+0x4f]
  40898c:	in     eax,0x35
  40898e:	outs   dx,BYTE PTR ds:[esi]
  40898f:	repz push es
  408991:	ror    BYTE PTR [ebx],0xcd
  408994:	mov    ebp,0x18a775ba
  408999:	xchg   ebp,eax
  40899a:	aas    
  40899b:	sti    
  40899c:	clc    
  40899d:	xchg   ecx,eax
  40899e:	pusha  
  40899f:	push   0xffffffdf
  4089a1:	or     DWORD PTR [ebx-0x70],esp
  4089a4:	out    0xe6,eax
  4089a6:	mov    ebx,0x1293756e
  4089ab:	fmulp  st(4),st
  4089ad:	jle    0x408944
  4089af:	fsub   DWORD PTR [eax+0x6f]
  4089b2:	and    esi,edx
  4089b4:	sbb    eax,DWORD PTR [eax-0x58cfa476]
  4089ba:	jg     0x408a14
  4089bc:	in     eax,0x15
  4089be:	cdq    
  4089bf:	push   cs
  4089c0:	fstp   QWORD PTR [edx]
  4089c2:	arpl   WORD PTR ds:[esi+ebx*8],ax
  4089c6:	add    eax,0xa56c1853
  4089cb:	jo     0x4089a5
  4089cd:	stc    
  4089ce:	mov    ah,BYTE PTR [edx]
  4089d0:	mov    al,0xc8
  4089d2:	rcl    BYTE PTR ds:0x88f8767f,0xae
  4089d9:	rcl    DWORD PTR [ebx],0x15
  4089dc:	xchg   ecx,eax
  4089dd:	nop    DWORD PTR [ecx+0x41]
  4089e1:	aad    0xae
  4089e3:	inc    ebx
  4089e4:	and    eax,0x70e4e299
  4089e9:	and    bh,bh
  4089eb:	sub    al,0xa0
  4089ed:	jecxz  0x408a2b
  4089ef:	es mov esp,0xf59859e8
  4089f5:	shl    BYTE PTR [edi],cl
  4089f7:	ins    DWORD PTR es:[edi],dx
  4089f8:	or     bl,BYTE PTR [ebp+0x63e07f29]
  4089fe:	dec    esp
  4089ff:	push   ebx
  408a00:	push   esp
  408a01:	mov    eax,0x4a21b9ee
  408a06:	inc    esp
  408a07:	aas    
  408a08:	lods   al,BYTE PTR ds:[esi]
  408a09:	inc    eax
  408a0a:	imul   ebx,DWORD PTR [ebx+0x4aff65f1],0xf9b513ba
  408a14:	int3   
  408a15:	cmc    
  408a16:	xlat   BYTE PTR ds:[ebx]
  408a17:	pop    esi
  408a18:	mov    dh,0x4a
  408a1a:	dec    edx
  408a1b:	jp     0x4089e1
  408a1d:	xor    cl,BYTE PTR [edi+0x1a3cda89]
  408a23:	or     DWORD PTR [ecx],esp
  408a25:	or     eax,0xb1463e77
  408a2a:	add    eax,0x5f84e0ba
  408a2f:	or     eax,0xa10547ce
  408a34:	or     esi,ecx
  408a36:	jb     0x4089d8
  408a38:	fidiv  DWORD PTR [esi+eax*8-0x5d]
  408a3c:	(bad)  
  408a3d:	not    edx
  408a3f:	mov    ah,0x39
  408a41:	cmc    
  408a42:	call   0x2f8d:0x99543ff7
  408a49:	mov    fs,WORD PTR [eax-0x29]
  408a4c:	pop    es
  408a4d:	push   ss
  408a4e:	stos   DWORD PTR es:[edi],eax
  408a4f:	sbb    esp,DWORD PTR [edi-0x5d63487b]
  408a55:	push   esp
  408a56:	sbb    BYTE PTR [eax+0x791f93c7],ch
  408a5c:	cmp    DWORD PTR [eax-0x1473524c],eax
  408a62:	jge    0x408a55
  408a64:	sti    
  408a65:	mov    bh,0x39
  408a67:	or     bl,BYTE PTR ds:0x8d0e7ca5
  408a6d:	pop    eax
  408a6e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408a70:	rcl    ecx,1
  408a72:	sub    DWORD PTR [esi-0x232c5356],0xb4550a9d
  408a7c:	popa   
  408a7d:	xchg   ecx,eax
  408a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a7f:	jg     0x408ac2
  408a81:	pop    edx
  408a82:	loop   0x408ab9
  408a84:	rcr    BYTE PTR [eax-0x1a],1
  408a87:	or     eax,0x69180abf
  408a8c:	arpl   WORD PTR [esi-0x71],bp
  408a8f:	jl     0x408ad1
  408a91:	mov    bl,0x92
  408a93:	push   es
  408a94:	ja     0x408a71
  408a96:	fwait
  408a97:	test   al,0xe9
  408a99:	xchg   DWORD PTR [eax],ebp
  408a9b:	or     BYTE PTR [edi+0x25],bl
  408a9e:	or     al,0xa0
  408aa0:	xchg   ecx,eax
  408aa1:	jp     0x408aea
  408aa3:	inc    ebx
  408aa4:	add    eax,0xe85c7937
  408aa9:	ins    BYTE PTR es:[edi],dx
  408aaa:	pop    esp
  408aab:	cmc    
  408aac:	and    ebx,DWORD PTR [ecx+ebx*1]
  408aaf:	adc    dh,BYTE PTR [esi+0x767b3352]
  408ab5:	fild   DWORD PTR [edx]
  408ab7:	scas   eax,DWORD PTR es:[edi]
  408ab8:	out    0xbc,al
  408aba:	xchg   BYTE PTR [ebx-0x6d],cl
  408abd:	dec    esi
  408abe:	sbb    cl,BYTE PTR [ebp+eiz*8+0x1e]
  408ac2:	xor    al,0xee
  408ac4:	push   ss
  408ac5:	bound  edi,QWORD PTR ds:0xedaa98ef
  408acb:	inc    bp
  408acd:	test   al,0x9a
  408acf:	mov    ah,0x6e
  408ad1:	jne    0x408aa7
  408ad3:	jl     0x408a56
  408ad5:	cdq    
  408ad6:	arpl   si,di
  408ad8:	mov    gs,WORD PTR [edi-0x320a6c3d]
  408ade:	jo     0x408a70
  408ae0:	sbb    ebp,DWORD PTR [ebx]
  408ae2:	mov    ah,0x67
  408ae4:	inc    edx
  408ae5:	jb     0x408aa1
  408ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ae8:	shl    BYTE PTR [edi+edi*2],0x33
  408aec:	jnp    0x408aaa
  408aee:	sbb    al,0xd0
  408af0:	cli    
  408af1:	jne    0x408acd
  408af3:	mov    dl,ah
  408af5:	mov    ebx,0xc869f743
  408afa:	ret    
  408afb:	jge    0x408b6e
  408afd:	mov    ds:0x773a3016,al
  408b02:	(bad)  
  408b03:	dec    eax
  408b04:	mov    edi,0x1736a920
  408b09:	xor    al,0x9a
  408b0b:	push   ds
  408b0c:	cdq    
  408b0d:	icebp  
  408b0e:	and    eax,0x4502e2d9
  408b13:	in     eax,dx
  408b14:	push   esi
  408b15:	jo     0x408b57
  408b17:	call   0x846e8252
  408b1c:	sbb    DWORD PTR [ecx+0x704e12b1],esi
  408b22:	xchg   BYTE PTR [edi+0x18],bh
  408b25:	nop
  408b26:	mov    ecx,0x7415eb0c
  408b2b:	inc    ebp
  408b2c:	sbb    al,0x7b
  408b2e:	in     al,0xb8
  408b30:	daa    
  408b31:	je     0x408b9b
  408b33:	cs jbe 0x408ac1
  408b36:	push   0x769312fe
  408b3b:	push   ss
  408b3c:	stc    
  408b3d:	ss ja  0x408b8c
  408b40:	fwait
  408b41:	cwde   
  408b42:	fbstp  TBYTE PTR [ebp-0x33]
  408b45:	jmp    0x8e07:0xa620fc45
  408b4c:	test   DWORD PTR [eax-0x67238f03],eax
  408b52:	aam    0xb7
  408b54:	sub    bh,dh
  408b56:	add    cl,bh
  408b58:	or     BYTE PTR [esp+esi*8-0x3d7fcc05],cl
  408b5f:	lods   al,BYTE PTR ds:[esi]
  408b60:	into   
  408b61:	xchg   ebp,eax
  408b62:	mov    eax,ds:0x7813478d
  408b67:	xor    DWORD PTR [ecx+esi*4+0x23],esi
  408b6b:	xchg   ebx,eax
  408b6c:	push   ebx
  408b6d:	stos   DWORD PTR es:[edi],eax
  408b6e:	or     al,0x88
  408b70:	or     bh,BYTE PTR [eax+0x36682cd0]
  408b76:	(bad)
  408b7b:	sub    ecx,DWORD PTR [ebp+0x14764ec7]
  408b81:	xchg   edi,eax
  408b82:	mov    eax,ds:0xe13fc540
  408b87:	mov    cl,0x71
  408b89:	call   0x4df7:0x3d521ff4
  408b90:	mov    edi,0x4c51b46b
  408b95:	cmp    ebp,DWORD PTR [ebx-0x20459357]
  408b9b:	push   ecx
  408b9c:	pop    ds
  408b9d:	xchg   esp,eax
  408b9e:	pop    ebx
  408b9f:	mov    eax,ds:0x24a77f59
  408ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ba5:	into   
  408ba6:	push   cs
  408ba7:	es push ecx
  408ba9:	outs   dx,BYTE PTR ds:[esi]
  408baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bab:	xchg   BYTE PTR [esi+0x9bb903],al
  408bb1:	inc    edx
  408bb2:	or     eax,0x4b80aaa
  408bb7:	inc    ecx
  408bb8:	jmp    0x408b63
  408bba:	sbb    eax,0x67c92db5
  408bbf:	and    eax,0x69ecbbdb
  408bc4:	xchg   ecx,eax
  408bc5:	add    eax,0x93f61ce5
  408bca:	lock xchg ecx,eax
  408bcc:	cmp    dh,BYTE PTR [edi]
  408bce:	loopne 0x408b5d
  408bd0:	leave  
  408bd1:	add    dl,BYTE PTR [ebx]
  408bd3:	inc    edx
  408bd4:	pop    ecx
  408bd5:	add    eax,0x3acf5085
  408bda:	in     eax,0xac
  408bdc:	iret   
  408bdd:	test   eax,0xdee83e91
  408be2:	fidivr DWORD PTR [esi+eax*4-0x6f]
  408be6:	cwde   
  408be7:	(bad)  
  408be9:	sub    al,0x5a
  408beb:	(bad)  
  408bec:	in     al,0x24
  408bee:	mov    eax,ds:0xf259519
  408bf3:	mov    ah,0x28
  408bf5:	xchg   ecx,eax
  408bf6:	or     eax,0x3d4b7b95
  408bfb:	and    eax,0x1a0c9556
  408c00:	add    BYTE PTR [esi-0x348661],dl
  408c06:	fisub  WORD PTR [ecx+0x3fd8499a]
  408c0c:	inc    ebp
  408c0d:	mov    al,0xd1
  408c0f:	cwde   
  408c10:	daa    
  408c11:	int    0xb7
  408c13:	sti    
  408c14:	inc    esp
  408c15:	(bad)
  408c19:	scas   eax,DWORD PTR es:[edi]
  408c1a:	push   0x3b29b18b
  408c1f:	addr16 sub al,0xb6
  408c22:	mov    esi,0x67b03c07
  408c27:	push   ecx
  408c28:	enter  0x4111,0xcd
  408c2c:	enter  0xec37,0xe8
  408c30:	add    eax,0x505d25fc
  408c35:	push   ecx
  408c36:	and    cl,BYTE PTR [ecx+0x2e]
  408c39:	sub    bl,BYTE PTR gs:[ebx]
  408c3c:	push   0x7822e493
  408c41:	es add esi,ebx
  408c44:	add    DWORD PTR [edi+edi*2+0x35f642c2],ebx
  408c4b:	loope  0x408be4
  408c4d:	add    al,BYTE PTR [edx*4+0x6b30f674]
  408c54:	mov    ebp,0xdec9f8f5
  408c59:	repnz jcxz 0x408cd9
  408c5d:	pop    es
  408c5e:	das    
  408c5f:	stos   BYTE PTR es:[edi],al
  408c60:	dec    ebx
  408c61:	push   ds
  408c62:	scas   al,BYTE PTR es:[edi]
  408c63:	push   ebx
  408c64:	push   edi
  408c65:	adc    al,0x39
  408c67:	xor    DWORD PTR [ecx+0x51],ebx
  408c6a:	jns    0x408c09
  408c6c:	cs ja  0x1959a80b
  408c73:	inc    eax
  408c74:	cmp    eax,0x6a8ed1c5
  408c79:	or     ch,ch
  408c7b:	rol    DWORD PTR [edx-0x11],cl
  408c7e:	sbb    eax,0x52c1bb31
  408c83:	mov    ecx,0x145d9e89
  408c88:	xchg   ecx,eax
  408c89:	sti    
  408c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c8b:	test   DWORD PTR [edx-0x72],ebx
  408c8e:	push   es
  408c8f:	das    
  408c90:	adc    DWORD PTR [edi+0x90b575b],esi
  408c96:	popf   
  408c97:	test   DWORD PTR [edi+edx*4],0x2a89d463
  408c9e:	popf   
  408c9f:	mov    al,BYTE PTR ds:0xf75337a0
  408ca5:	xchg   BYTE PTR [ebp-0x2d],bh
  408ca8:	in     eax,dx
  408ca9:	push   ss
  408caa:	mov    dl,0xbe
  408cac:	xor    bh,al
  408cae:	jecxz  0x408d26
  408cb0:	jne    0x408c40
  408cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cb4:	dec    ecx
  408cb5:	jb     0x408c3b
  408cb7:	shl    BYTE PTR [ebp+0x6f6a951c],cl
  408cbd:	jo     0x408cec
  408cbf:	sbb    al,0x33
  408cc1:	dec    eax
  408cc2:	add    al,0x4d
  408cc4:	outs   dx,DWORD PTR ds:[esi]
  408cc5:	in     eax,0x97
  408cc7:	gs push ds
  408cc9:	and    eax,0x7dea644
  408cce:	ds (bad) 
  408cd0:	int3   
  408cd1:	or     eax,0x9397a514
  408cd6:	or     esi,esi
  408cd8:	mov    ds:0xa7272eb9,eax
  408cdd:	cmp    esp,esp
  408cdf:	das    
  408ce0:	stos   BYTE PTR es:[edi],al
  408ce1:	sbb    BYTE PTR [eax+0x3eb7d0d0],cl
  408ce7:	inc    eax
  408ce8:	in     eax,0xb8
  408cea:	mov    esi,0xeac31006
  408cef:	pop    esi
  408cf0:	ret    
  408cf1:	addr16 add eax,0xf7c22744
  408cf7:	jmp    DWORD PTR [eax-0x4b]
  408cfa:	into   
  408cfb:	push   esp
  408cfc:	push   0x9
  408cfe:	sbb    DWORD PTR [ebp+0x76],esp
  408d01:	jge    0x408d01
  408d03:	sbb    al,0xde
  408d05:	xchg   esi,eax
  408d06:	and    DWORD PTR [ebp-0x6354833],esp
  408d0c:	add    DWORD PTR [eax-0x54],ebp
  408d0f:	aad    0xe4
  408d11:	jns    0x408d7e
  408d13:	cmp    BYTE PTR [eax-0x5e02f0d3],ah
  408d19:	stc    
  408d1a:	cmp    al,0x70
  408d1c:	sti    
  408d1d:	shl    ebp,1
  408d1f:	fwait
  408d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d21:	aad    0xa1
  408d23:	out    0xb4,al
  408d25:	add    bh,BYTE PTR [edx+ecx*1]
  408d28:	into   
  408d29:	add    edx,eax
  408d2b:	imul   edx,esi,0xffffffcf
  408d2e:	dec    edx
  408d2f:	push   edi
  408d30:	or     al,0x4
  408d32:	pop    es
  408d33:	mov    ecx,0xeb92102c
  408d38:	xor    ah,dl
  408d3a:	loopne 0x408da7
  408d3c:	test   DWORD PTR [esi-0x62],0x633c4fd0
  408d43:	mov    al,ds:0x8fbd17e8
  408d48:	xor    eax,0x5dc9ba59
  408d4d:	out    dx,al
  408d4e:	jb     0x408d25
  408d50:	sbb    bl,bl
  408d52:	and    DWORD PTR ds:0xa3a03431,0xffffff93
  408d59:	fstp   TBYTE PTR [ecx+0x4e499d59]
  408d5f:	inc    esp
  408d60:	mov    BYTE PTR [edi-0x4041799d],ch
  408d66:	popa   
  408d67:	or     bh,BYTE PTR [esi-0x5e2ecce5]
  408d6d:	mov    al,0xb0
  408d6f:	push   ebx
  408d70:	and    cl,0xca
  408d73:	out    0xe0,eax
  408d75:	enter  0x8ec7,0x71
  408d79:	xor    cl,BYTE PTR ds:0xc26a221d
  408d7f:	pop    ebx
  408d80:	push   ecx
  408d81:	icebp  
  408d82:	rcr    dl,0xb7
  408d85:	mov    eax,ds:0xf94786ae
  408d8a:	adc    eax,esi
  408d8c:	stos   DWORD PTR es:[edi],eax
  408d8d:	jae    0x408d57
  408d8f:	push   esi
  408d90:	pop    ebx
  408d91:	das    
  408d92:	leave  
  408d93:	loop   0x408d60
  408d95:	icebp  
  408d96:	cmp    eax,0x20ad8206
  408d9b:	and    BYTE PTR [ebp+0x7310e560],bh
  408da1:	je     0x408da0
  408da3:	push   ecx
  408da4:	and    ch,bl
  408da6:	in     eax,0x2
  408da8:	dec    ebp
  408da9:	cmp    BYTE PTR [eax],cl
  408dab:	and    al,0x91
  408dad:	fsubr  QWORD PTR [edx+esi*2+0x5517422e]
  408db4:	sub    BYTE PTR [ebp-0x3b995811],dh
  408dba:	fwait
  408dbb:	mov    ebp,0x4bb9568b
  408dc0:	mov    DWORD PTR [edx],edi
  408dc2:	ins    DWORD PTR es:[edi],dx
  408dc3:	dec    eax
  408dc4:	ss dec eax
  408dc6:	fwait
  408dc7:	stos   BYTE PTR es:[edi],al
  408dc8:	bound  ecx,QWORD PTR [ebp-0x4fe0f986]
  408dce:	aaa    
  408dcf:	nop
  408dd0:	mov    edi,0x344b1313
  408dd5:	mov    ebx,0x528f3e3f
  408dda:	xchg   edx,eax
  408ddb:	adc    DWORD PTR [edx+0x55697724],edi
  408de1:	mov    bh,0xe
  408de3:	sti    
  408de4:	pop    ecx
  408de5:	shl    dh,0xab
  408de8:	outs   dx,DWORD PTR ds:[esi]
  408de9:	sub    BYTE PTR [edx+0x26],ah
  408dec:	adc    al,ch
  408dee:	xor    BYTE PTR [ecx],dh
  408df0:	inc    eax
  408df1:	out    0x6c,eax
  408df3:	lds    edi,FWORD PTR [esi]
  408df5:	xchg   esp,eax
  408df6:	imul   eax,edi,0xffffffab
  408df9:	push   edi
  408dfa:	mov    esi,0x972cdea1
  408dff:	xor    DWORD PTR [esi],esp
  408e01:	sti    
  408e02:	mov    WORD PTR [ebx+0x6773f9ed],?
  408e08:	sbb    BYTE PTR [ebx+0xdeeadb5],ah
  408e0e:	cdq    
  408e0f:	pusha  
  408e10:	xor    al,0x79
  408e12:	(bad)  
  408e13:	cmovge eax,DWORD PTR [edx+0x2c19f86c]
  408e1a:	stc    
  408e1b:	inc    eax
  408e1c:	push   edi
  408e1d:	loope  0x408dbf
  408e1f:	repz jmp 0xc5ee571b
  408e25:	loope  0x408dee
  408e27:	fucomi st,st(1)
  408e29:	clc    
  408e2a:	or     DWORD PTR [esi-0x7e],esi
  408e2d:	xor    eax,0xc79529a8
  408e32:	popf   
  408e33:	dec    edi
  408e34:	sbb    eax,esi
  408e36:	push   0x65
  408e38:	ror    bl,1
  408e3a:	adc    BYTE PTR [esi-0x1d4004f5],dh
  408e40:	push   edx
  408e41:	in     al,dx
  408e42:	or     DWORD PTR [edx+0xea7e320],esp
  408e48:	mov    ebx,?
  408e4a:	pop    eax
  408e4b:	xor    ecx,DWORD PTR [edi-0x3b4587f8]
  408e51:	add    esi,eax
  408e53:	xor    eax,0x70c14196
  408e58:	aad    0x43
  408e5a:	cld    
  408e5b:	inc    eax
  408e5c:	fnstsw WORD PTR [esi-0x2588c865]
  408e62:	mov    bh,0xa5
  408e64:	xchg   DWORD PTR [edx-0x4111bfb6],edi
  408e6a:	or     BYTE PTR [ebp+0x3055b9],0x78
  408e71:	enter  0x2a6b,0x19
  408e75:	idiv   DWORD PTR [eax+0x56]
  408e78:	scas   eax,DWORD PTR es:[edi]
  408e79:	push   edi
  408e7a:	and    BYTE PTR [ecx+0x7b666d2e],dl
  408e80:	leave  
  408e81:	inc    esp
  408e82:	xchg   edi,eax
  408e83:	call   0xbd07:0xdac15574
  408e8a:	fld    DWORD PTR ds:0x693c9685
  408e90:	xchg   ebp,eax
  408e91:	inc    ebx
  408e92:	sub    esi,DWORD PTR [ecx+0x4d]
  408e95:	xor    al,0x9
  408e97:	icebp  
  408e98:	sbb    eax,DWORD PTR [ebx-0x4f]
  408e9b:	retf   0x1e25
  408e9e:	ficom  DWORD PTR [esi]
  408ea0:	xchg   edi,eax
  408ea1:	mov    esi,0x1f97b662
  408ea6:	outs   dx,DWORD PTR ds:[esi]
  408ea7:	test   eax,0x1f2b407a
  408eac:	pusha  
  408ead:	push   esp
  408eae:	and    bh,BYTE PTR [eax-0x54]
  408eb1:	adc    BYTE PTR [esi],bl
  408eb3:	xlat   BYTE PTR ds:[ebx]
  408eb4:	out    0x45,eax
  408eb6:	shl    bl,1
  408eb8:	mov    BYTE PTR [edi+0x1c],al
  408ebb:	loope  0x408ee5
  408ebd:	jb     0x408e5a
  408ebf:	addr16 pop es
  408ec1:	inc    ebp
  408ec2:	in     al,dx
  408ec3:	mov    esi,0x568428a3
  408ec8:	and    eax,0x3c5553f7
  408ecd:	imul   ebp,DWORD PTR [ebp+edi*8+0x6b96d24e],0x6e
  408ed5:	ins    DWORD PTR es:[edi],dx
  408ed6:	pop    ds
  408ed7:	sbb    BYTE PTR [ecx-0x181d237],bh
  408edd:	daa    
  408ede:	jle    0x408ee9
  408ee0:	xor    al,0x7a
  408ee2:	stos   BYTE PTR es:[edi],al
  408ee3:	clc    
  408ee4:	lock into 
  408ee6:	ror    BYTE PTR [edi+0x228eb36c],cl
  408eec:	or     al,0x55
  408eee:	out    0xd0,al
  408ef0:	mov    ecx,DWORD PTR [edi+eax*4-0x2c019234]
  408ef7:	mov    esp,0xae6b1842
  408efc:	add    eax,0x3e2ca7c5
  408f01:	dec    esp
  408f02:	cmp    eax,0x3735df59
  408f07:	out    0x6d,al
  408f09:	mov    ds:0xa3380cd9,eax
  408f0e:	mov    edx,ebp
  408f10:	jbe    0x408f56
  408f12:	pop    ss
  408f13:	and    DWORD PTR [eax+0x7bb75a3a],0xffffffed
  408f1a:	or     al,BYTE PTR [edi+0x1775f1ad]
  408f20:	xlat   BYTE PTR ds:[ebx]
  408f21:	jae    0x408ed4
  408f23:	inc    edx
  408f24:	jp     0x408f24
  408f26:	shr    ah,cl
  408f28:	mov    bl,0xd
  408f2a:	and    edx,DWORD PTR [ebx]
  408f2c:	out    dx,al
  408f2d:	sbb    BYTE PTR [edi-0x49488a24],ah
  408f33:	loope  0x408eb6
  408f35:	fwait
  408f36:	mov    ah,0x27
  408f38:	lock cmp al,0x70
  408f3b:	sbb    esi,ebx
  408f3d:	retf   0xc968
  408f40:	leave  
  408f41:	stc    
  408f42:	jmp    0x37d5b9e
  408f47:	push   cs
  408f48:	loope  0x408f7d
  408f4a:	gs jae 0x408f13
  408f4d:	into   
  408f4e:	popf   
  408f4f:	inc    esi
  408f50:	fiadd  WORD PTR [eax+edi*8-0x1086ca13]
  408f57:	xchg   ebx,ebp
  408f59:	xchg   ebx,eax
  408f5a:	xor    BYTE PTR [ebp-0x50a708b6],al
  408f60:	fidiv  WORD PTR [esi+0x3d9142cf]
  408f66:	sub    DWORD PTR [ebx],ebp
  408f68:	stc    
  408f69:	mov    edx,0x968805e5
  408f6e:	mov    ds:0x49d6b553,al
  408f73:	sub    dl,bl
  408f75:	les    ebp,FWORD PTR [ecx+0x59]
  408f78:	sub    al,0x19
  408f7a:	xchg   esp,eax
  408f7b:	adc    eax,0xb202b661
  408f80:	fbstp  TBYTE PTR [ecx]
  408f82:	data16 stc 
  408f84:	jno    0x408fae
  408f86:	inc    ecx
  408f87:	or     ebp,edx
  408f89:	stos   DWORD PTR es:[edi],eax
  408f8a:	idiv   ecx
  408f8c:	jb     0x408f70
  408f8e:	stc    
  408f8f:	loopne 0x408f83
  408f91:	hlt    
  408f92:	clc    
  408f93:	inc    esi
  408f94:	push   ebx
  408f95:	mov    dl,0xd9
  408f97:	pop    ebp
  408f98:	mov    eax,ds:0x5fca61ed
  408f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f9e:	mov    eax,ds:0x68aa216d
  408fa3:	push   ecx
  408fa4:	xor    eax,0x17b2c67d
  408fa9:	repnz sub ah,dh
  408fac:	cdq    
  408fad:	jp     0x408f4e
  408faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fb0:	xlat   BYTE PTR ds:[ebx]
  408fb1:	jge    0x409026
  408fb3:	pop    es
  408fb4:	aam    0x6f
  408fb6:	sar    DWORD PTR [edi-0x5f2e27d9],cl
  408fbc:	mov    ecx,0x28f590c3
  408fc1:	inc    esi
  408fc2:	add    ch,dl
  408fc4:	loopne 0x408f65
  408fc6:	das    
  408fc7:	inc    ebp
  408fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fc9:	mov    eax,0x14cb73b2
  408fce:	mov    WORD PTR [ecx],es
  408fd0:	sti    
  408fd1:	dec    edx
  408fd2:	inc    edi
  408fd3:	popf   
  408fd4:	push   0xfd547027
  408fd9:	jnp    0x40901e
  408fdb:	je     0x408fc8
  408fdd:	pop    edi
  408fde:	fdivr  st,st(0)
  408fe0:	mov    ds:0x842bbaa1,al
  408fe5:	rcr    esi,1
  408fe7:	pop    esp
  408fe8:	pop    ebx
  408fe9:	pop    ds
  408fea:	mov    ds,WORD PTR [esi+0x78839af3]
  408ff0:	cmc    
  408ff1:	les    edi,FWORD PTR [edi-0x4d]
  408ff4:	cli    
  408ff5:	sbb    DWORD PTR [edx+esi*8-0x80],0x982bb102
  408ffd:	mov    ds:0x76bafea5,al
  409002:	mov    esp,?
  409004:	and    BYTE PTR [ebp-0x13],al
  409007:	lahf   
  409008:	ds (bad) 
  40900a:	(bad)  
  40900b:	adc    cl,BYTE PTR [ebx+0x38fac7cc]
  409011:	mov    ds:0x32ba4bd5,eax
  409016:	sbb    BYTE PTR [ebp-0x8af8ee0],bh
  40901c:	dec    edi
  40901d:	gs xor ch,cl
  409020:	sub    al,0xc3
  409022:	adc    ah,bh
  409024:	or     bl,bl
  409026:	enter  0xffb,0x25
  40902a:	add    al,BYTE PTR [ebx-0xe3ad458]
  409030:	push   esi
  409031:	in     al,0x52
  409033:	mov    al,0x2c
  409035:	cmp    eax,0x9f4c27fa
  40903a:	mov    al,0x8f
  40903c:	jge    0x409085
  40903e:	loopne 0x4090a7
  409040:	mul    ecx
  409042:	in     al,0xcd
  409044:	jecxz  0x4090a8
  409046:	mov    WORD PTR [edi],ss
  409048:	mov    dh,0x1a
  40904a:	jns    0x408ff0
  40904c:	sub    al,0xb5
  40904e:	mov    ds:0x332c5db7,eax
  409053:	mov    ebp,0xc090e180
  409058:	cld    
  409059:	sub    ah,bh
  40905b:	jle    0x40901f
  40905d:	cs push 0xb94aa6b6
  409063:	mov    edi,esp
  409065:	stc    
  409066:	inc    eax
  409067:	xor    eax,0xc528c354
  40906c:	sbb    DWORD PTR [edi-0x23887fd0],ebp
  409072:	mov    bl,BYTE PTR [edi]
  409074:	shl    DWORD PTR [esi],cl
  409076:	mov    ebp,DWORD PTR [ecx]
  409078:	push   ebx
  409079:	mov    edx,0xe54877f7
  40907e:	pusha  
  40907f:	mov    eax,ds:0xf3242dbb
  409084:	pop    ds
  409085:	shr    BYTE PTR [ebx],cl
  409087:	mov    bl,0x56
  409089:	jmp    0x4090c4
  40908b:	(bad)  
  40908c:	jae    0x4090e5
  40908e:	xor    bh,BYTE PTR [eax-0x28]
  409091:	dec    edx
  409092:	sub    eax,0xcdaa15c9
  409097:	sbb    DWORD PTR [ebx+0x13],esp
  40909a:	ficomp WORD PTR [ebx+ecx*8]
  40909d:	fstp   QWORD PTR [ebx+0x68]
  4090a0:	(bad)  
  4090a1:	pop    edx
  4090a2:	push   0xaa47ac75
  4090a7:	mov    DWORD PTR [ebx+0x2dc7f4f4],0xfc317b14
  4090b1:	arpl   WORD PTR [ebp+0x78e68667],dx
  4090b7:	into   
  4090b8:	mov    cl,0xed
  4090ba:	dec    ebp
  4090bb:	jnp    0x40905e
  4090bd:	int    0x43
  4090bf:	iret   
  4090c0:	sub    ch,BYTE PTR [edx]
  4090c2:	int    0x3f
  4090c4:	jae    0x40911b
  4090c6:	cs pop ecx
  4090c8:	hlt    
  4090c9:	retf   0x6862
  4090cc:	jge    0x40914b
  4090ce:	cmp    bh,BYTE PTR [ecx+ebx*4-0x6e]
  4090d2:	jns    0x409123
  4090d4:	sahf   
  4090d5:	inc    edi
  4090d6:	int3   
  4090d7:	js     0xe70ad711
  4090dd:	popa   
  4090de:	call   0x88e3c9b4
  4090e3:	add    DWORD PTR cs:[ecx+0x1f],esi
  4090e7:	or     al,0x62
  4090e9:	imul   ebx,DWORD PTR [esi+ebx*1+0x3f],0xffffffe2
  4090ee:	add    BYTE PTR [ecx-0x1123a9ce],ch
  4090f4:	dec    edi
  4090f5:	xchg   esp,eax
  4090f6:	arpl   WORD PTR [eax],dx
  4090f8:	lahf   
  4090f9:	jmp    0x9241f940
  4090fe:	mov    ebp,0xd534598f
  409103:	loop   0x409172
  409105:	clc    
  409106:	sar    DWORD PTR [edx],1
  409108:	push   edx
  409109:	push   ecx
  40910a:	xor    eax,0xca7f37af
  40910f:	inc    ebp
  409110:	mov    ebp,0x4bac38aa
  409115:	mov    BYTE PTR [esi+0x7808ba7c],cl
  40911b:	in     al,0x83
  40911d:	jecxz  0x40912f
  40911f:	push   esi
  409120:	inc    ebp
  409121:	ss out 0x95,eax
  409124:	add    al,0xf1
  409126:	inc    ebp
  409127:	jne    0x4090ba
  409129:	jp     0x4090df
  40912b:	push   cs
  40912c:	mov    al,ds:0xb6c72b72
  409131:	dec    esi
  409132:	mov    al,ds:0xa6fc45a2
  409137:	add    eax,0xee4c9416
  40913c:	mov    dl,BYTE PTR [ebx+0xf]
  40913f:	sub    edx,ebx
  409141:	fwait
  409142:	aad    0x1
  409144:	push   ds
  409145:	aas    
  409146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409147:	jno    0x409116
  409149:	inc    ecx
  40914a:	sbb    cl,dh
  40914c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40914d:	test   eax,0x926be92c
  409152:	rcr    bh,0xd1
  409155:	in     al,dx
  409156:	ja     0x409160
  409158:	adc    BYTE PTR [esp],bl
  40915b:	and    ebx,DWORD PTR [ecx]
  40915d:	inc    esp
  40915e:	xor    eax,0xc33bfa2a
  409163:	mov    BYTE PTR [ebx],0xbe
  409166:	mov    ebp,0x1f5d109
  40916b:	jb     0x40913c
  40916d:	xor    DWORD PTR [ecx+0x4a],0x647841df
  409174:	int    0xc
  409176:	ret    
  409177:	sub    DWORD PTR [edx+0x3d],ebx
  40917a:	dec    esi
  40917b:	pop    ss
  40917c:	ja     0x4091e4
  40917e:	sub    eax,0x20b571fc
  409183:	jecxz  0x409191
  409185:	loope  0x4091f3
  409187:	test   BYTE PTR [edi],al
  409189:	mov    ah,0x82
  40918b:	sti    
  40918c:	cmc    
  40918d:	adc    eax,0x913da190
  409192:	pusha  
  409193:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  409195:	push   eax
  409196:	sbb    esp,0x6e77ac68
  40919c:	test   al,0xbc
  40919e:	cmp    cl,BYTE PTR [edx+0x3b]
  4091a1:	add    al,dh
  4091a3:	jo     0x409217
  4091a5:	jecxz  0x409130
  4091a7:	enter  0x5a62,0xe2
  4091ab:	mov    gs,ecx
  4091ad:	xor    ebx,DWORD PTR [ebp+0x4e4d9aac]
  4091b3:	in     al,dx
  4091b4:	pop    es
  4091b5:	lods   al,BYTE PTR ds:[esi]
  4091b6:	jae    0x409194
  4091b8:	sub    al,0xc3
  4091ba:	ficom  DWORD PTR [ecx-0x390b9113]
  4091c0:	cmp    DWORD PTR [edx+0x6160457f],0x507cb2a4
  4091ca:	jge    0x6be34a02
  4091d0:	pop    esp
  4091d1:	rep lods eax,DWORD PTR ds:[esi]
  4091d3:	stos   BYTE PTR es:[edi],al
  4091d4:	add    cl,dh
  4091d6:	lods   al,BYTE PTR ds:[esi]
  4091d7:	sub    esi,DWORD PTR [edi+0x6]
  4091da:	stc    
  4091db:	jnp    0x40918b
  4091dd:	nop
  4091de:	mov    edi,0x5dcedcaa
  4091e3:	jnp    0x409185
  4091e5:	push   0x6f
  4091e7:	xchg   edi,eax
  4091e8:	jmp    0x4fb58b55
  4091ed:	std    
  4091ee:	into   
  4091ef:	xchg   esp,eax
  4091f0:	sub    esi,DWORD PTR [esi-0x5b900b9f]
  4091f6:	push   ebp
  4091f7:	pop    ecx
  4091f8:	add    al,0xb5
  4091fa:	dec    esi
  4091fb:	jno    0x40926c
  4091fd:	sti    
  4091fe:	retf   
  4091ff:	bound  edx,QWORD PTR [ebx]
  409201:	arpl   WORD PTR [edi+0x70],si
  409204:	dec    ebp
  409205:	add    ebx,ebp
  409207:	in     eax,0xf8
  409209:	pop    ebx
  40920a:	(bad)  
  40920b:	adc    dh,BYTE PTR gs:[ecx]
  40920e:	shl    DWORD PTR [esp+edx*8],1
  409211:	je     0x409238
  409213:	loope  0x4091b2
  409215:	jmp    0xff76:0x56741325
  40921c:	lea    edx,[ebx+0x27bf1649]
  409222:	mov    edi,0xa7a90fa4
  409227:	rol    ebx,cl
  409229:	pop    esi
  40922a:	jp     0x40922f
  40922c:	or     cl,bl
  40922e:	in     eax,dx
  40922f:	and    ah,al
  409231:	repz mov edx,0xea9e63c0
  409237:	jne    0x409255
  409239:	gs xor al,0x86
  40923c:	push   esi
  40923d:	imul   edx,DWORD PTR [esi-0x1b5c3999],0xfffffffe
  409244:	inc    ebx
  409245:	push   edi
  409246:	shl    DWORD PTR [ebp-0x7f],1
  409249:	jecxz  0x40920c
  40924b:	push   cs
  40924c:	inc    eax
  40924d:	je     0x4092be
  40924f:	aas    
  409250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409251:	push   ecx
  409252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409253:	dec    edx
  409254:	(bad)  
  409255:	adc    BYTE PTR [edx-0x25],0x18
  409259:	data16 mov dh,0x77
  40925c:	and    al,0xbe
  40925e:	mov    esp,0x5ebaf7c9
  409263:	and    cl,al
  409265:	out    dx,al
  409266:	out    dx,eax
  409267:	ror    BYTE PTR [ebx],cl
  409269:	inc    BYTE PTR [ebp-0x252877c9]
  40926f:	sbb    esi,DWORD PTR [ecx-0x72f2095a]
  409275:	xchg   esp,eax
  409276:	sbb    BYTE PTR [esi-0xf],ch
  409279:	test   DWORD PTR [esi+0x3d871d8e],eax
  40927f:	sub    eax,0xbb3311d9
  409284:	xchg   ecx,eax
  409285:	fsubr  QWORD PTR [eax]
  409287:	cmp    BYTE PTR [ebx*8-0x5813d1af],dl
  40928e:	xchg   edx,eax
  40928f:	test   cl,0x6b
  409292:	push   ebx
  409293:	mov    cs,WORD PTR [ecx+0x49b448a]
  409299:	sub    dh,dh
  40929b:	cs xchg ebp,eax
  40929d:	or     ebx,DWORD PTR [ecx+0x5c]
  4092a0:	sar    eax,1
  4092a2:	adc    BYTE PTR [eax+0x5a],bh
  4092a5:	mov    dh,0xdb
  4092a7:	shr    DWORD PTR [eax+0x27],cl
  4092aa:	pop    ecx
  4092ab:	into   
  4092ac:	imul   ebx,DWORD PTR [eax-0x53ea2a76],0x1c51fd5f
  4092b6:	test   eax,0xcb1b246c
  4092bb:	add    eax,0x25827943
  4092c0:	adc    eax,esi
  4092c2:	mov    ecx,0x2bd23feb
  4092c7:	and    edi,DWORD PTR [esi+edx*2-0x60]
  4092cb:	dec    ebp
  4092cc:	fimul  DWORD PTR [edi-0x54]
  4092cf:	(bad)  
  4092d0:	(bad)  
  4092d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092d2:	or     al,0xdf
  4092d4:	int3   
  4092d5:	sub    ah,dh
  4092d7:	push   cs
  4092d8:	cmp    BYTE PTR [edi-0x39],dh
  4092db:	sbb    cl,BYTE PTR [edx-0x10]
  4092de:	ret    
  4092df:	xor    ebx,ebx
  4092e1:	sbb    eax,0x8e8d720f
  4092e6:	gs push edx
  4092e8:	pop    esp
  4092e9:	cmp    al,0x78
  4092eb:	xor    BYTE PTR [esi-0x5e247f5b],0x4c
  4092f2:	mov    bh,0xfb
  4092f4:	pushf  
  4092f5:	mov    WORD PTR [ebx+0x3e14525f],ds
  4092fb:	dec    esi
  4092fc:	dec    esi
  4092fd:	push   ebp
  4092fe:	add    al,0xc2
  409300:	mov    cl,0x8
  409302:	cmp    edi,DWORD PTR [ecx+edi*2]
  409305:	fmul   DWORD PTR [ebx+ecx*2]
  409308:	nop
  409309:	sbb    BYTE PTR [ebx+0x43],ah
  40930c:	push   esp
  40930d:	loop   0x40933a
  40930f:	pop    ds
  409310:	push   ecx
  409311:	sar    DWORD PTR [esp+eax*8],0xd7
  409315:	gs push ebx
  409317:	jns    0x40936a
  409319:	stc    
  40931a:	icebp  
  40931b:	mov    cl,0x28
  40931d:	ins    DWORD PTR es:[edi],dx
  40931e:	pop    ebp
  40931f:	dec    esi
  409320:	or     ah,BYTE PTR [eax+eiz*1]
  409323:	cmc    
  409324:	not    DWORD PTR [edx-0x733d2436]
  40932a:	xchg   esp,eax
  40932b:	ret    0x1877
  40932e:	(bad)  
  40932f:	rcr    ecx,1
  409331:	cmp    BYTE PTR [ebx-0x3b0ee445],ch
  409337:	outs   dx,BYTE PTR ds:[esi]
  409338:	std    
  409339:	add    dl,BYTE PTR [ebx]
  40933b:	das    
  40933c:	in     al,dx
  40933d:	mul    BYTE PTR [edi+0x2e]
  409340:	mov    ds:0x26462f5,eax
  409345:	mov    ds:0x2b19aac9,al
  40934a:	xchg   ecx,eax
  40934b:	add    BYTE PTR [edx],0x93
  40934e:	shl    BYTE PTR [edx-0x5a3779b1],1
  409354:	(bad)  
  409355:	fcomp  DWORD PTR [edx-0x64]
  409358:	pop    esp
  409359:	je     0x409377
  40935b:	jl     0x409365
  40935d:	lock add al,0xa4
  409360:	mov    esp,0xc36345ed
  409365:	mov    al,0x1f
  409367:	jbe    0x409302
  409369:	rcl    esi,cl
  40936b:	sbb    ebx,DWORD PTR [edi]
  40936d:	push   0x433e3032
  409372:	mov    eax,0x477afe46
  409377:	sbb    BYTE PTR [ebx],bh
  409379:	jl     0x40936d
  40937b:	add    DWORD PTR [edi+ecx*1+0x58],ebx
  40937f:	outs   dx,WORD PTR ds:[esi]
  409381:	jo     0x409309
  409383:	pop    ecx
  409384:	jns    0x409348
  409386:	dec    esi
  409387:	sbb    eax,0x1aa5209f
  40938c:	scas   eax,DWORD PTR es:[edi]
  40938d:	bound  eax,QWORD PTR [ebx*2+0xf988aba]
  409394:	or     BYTE PTR [edx+0x49],bh
  409397:	mov    ch,0xb3
  409399:	mov    ah,BYTE PTR [edx+0x2aea8737]
  40939f:	popa   
  4093a0:	test   DWORD PTR [ebp+0x67a47c08],ecx
  4093a6:	(bad)  
  4093a7:	sbb    ah,BYTE PTR [esi]
  4093a9:	cmc    
  4093aa:	mov    BYTE PTR [ebx+0x70],cl
  4093ad:	or     DWORD PTR [ecx+ebp*2],ebp
  4093b0:	aaa    
  4093b1:	or     DWORD PTR [esi+0x23b4cd63],ebx
  4093b7:	inc    esp
  4093b8:	mov    eax,edi
  4093ba:	sti    
  4093bb:	mov    eax,ds:0xeb577125
  4093c0:	jmp    0x4093b2
  4093c2:	mov    ds:0x190b3674,eax
  4093c7:	dec    DWORD PTR [esi-0x626b98fa]
  4093cd:	cwde   
  4093ce:	outs   dx,DWORD PTR ds:[esi]
  4093cf:	pop    ss
  4093d0:	mov    ebx,0x4de34b9e
  4093d5:	or     eax,DWORD PTR [esi]
  4093d7:	fmul   QWORD PTR [ebp-0x38]
  4093da:	mov    bh,0x14
  4093dc:	inc    edx
  4093dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093de:	xchg   ebp,eax
  4093df:	cli    
  4093e0:	into   
  4093e1:	inc    ebx
  4093e2:	adc    al,0xf0
  4093e4:	call   0xcd364fce
  4093e9:	sbb    DWORD PTR [ebx],ebx
  4093eb:	daa    
  4093ec:	aaa    
  4093ed:	leave  
  4093ee:	push   eax
  4093ef:	jo     0x40945b
  4093f1:	jae    0x4093a0
  4093f3:	sub    ch,dl
  4093f5:	and    BYTE PTR [ebx+eiz*2],ch
  4093f8:	sbb    dh,al
  4093fa:	out    0xec,eax
  4093fc:	inc    edx
  4093fd:	and    al,0xfe
  4093ff:	(bad)  [ebp-0x8b0011f]
  409405:	lahf   
  409406:	daa    
  409407:	out    0x60,al
  409409:	cld    
  40940a:	sub    al,ah
  40940c:	xchg   ecx,eax
  40940d:	repnz push es
  40940f:	repz or edi,ebp
  409412:	jo     0x409463
  409414:	inc    ebp
  409415:	sahf   
  409416:	pop    ecx
  409417:	outs   dx,DWORD PTR ds:[esi]
  409418:	mov    ds:0xce54e490,eax
  40941d:	adc    ch,bl
  40941f:	xor    BYTE PTR [ebx],bh
  409421:	(bad)  
  409422:	mov    ds:0x7cbc1ca4,al
  409427:	cmp    BYTE PTR [edx-0x42af6b35],bl
  40942d:	rcr    BYTE PTR [edx+0x8],0xe1
  409431:	retf   
  409432:	xchg   ebp,eax
  409433:	or     esp,ecx
  409435:	(bad)  
  409437:	ficomp DWORD PTR [edx-0x7e]
  40943a:	inc    eax
  40943b:	push   ebp
  40943c:	out    dx,eax
  40943d:	jl     0x409463
  40943f:	test   bh,dh
  409441:	jae    0x40941c
  409443:	sbb    esp,DWORD PTR [edx]
  409445:	ds xor al,0x51
  409448:	fdivrp st(1),st
  40944a:	into   
  40944b:	add    ecx,DWORD PTR [edx+0x26]
  40944e:	loopne 0x409409
  409450:	popf   
  409451:	nop
  409452:	push   edx
  409453:	sbb    eax,0x5321440e
  409458:	inc    edx
  409459:	in     al,dx
  40945a:	mov    eax,0xf219879d
  40945f:	cmp    DWORD PTR [ecx],ecx
  409461:	mov    DWORD PTR [ebx+0x71c95f9f],edx
  409467:	call   0x52f3b0e0
  40946c:	xor    dh,dh
  40946e:	and    ch,cl
  409470:	loopne 0x4094c6
  409472:	xchg   ebx,eax
  409473:	hlt    
  409474:	sbb    DWORD PTR [ecx],edx
  409476:	js     0x409403
  409478:	pop    eax
  409479:	adc    al,0x1a
  40947b:	repnz mov ebx,?
  40947e:	mov    cl,0x6c
  409480:	ret    
  409481:	js     0x4094a6
  409483:	sub    DWORD PTR [ecx],0x2e
  409486:	aad    0xfa
  409488:	fldenv [edi+0x2]
  40948b:	add    esp,esi
  40948d:	add    eax,0xa3f603d3
  409492:	adc    al,BYTE PTR [ebx+edi*4]
  409495:	pop    ss
  409496:	xlat   BYTE PTR ds:[ebx]
  409497:	push   ss
  409498:	push   esi
  409499:	loope  0x4094a3
  40949b:	adc    al,0x23
  40949d:	push   ebx
  40949e:	jmp    0xca2f:0x67953a37
  4094a5:	cmp    eax,0xdf2b5bbd
  4094aa:	push   ds
  4094ab:	xchg   ecx,eax
  4094ac:	dec    eax
  4094ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094ae:	rcr    edi,1
  4094b0:	mov    bh,0x1d
  4094b2:	dec    esp
  4094b3:	add    eax,DWORD PTR [ebp-0x1b]
  4094b6:	ins    DWORD PTR es:[edi],dx
  4094b7:	mov    WORD PTR [ecx-0x1017dc32],fs
  4094bd:	cmp    DWORD PTR [edx+esi*4-0x17],edx
  4094c1:	or     DWORD PTR [edx],ecx
  4094c3:	push   ebp
  4094c4:	jbe    0x40947b
  4094c6:	pop    ds
  4094c7:	sbb    al,0xab
  4094c9:	repz push esp
  4094cb:	in     al,0xf7
  4094cd:	ret    
  4094ce:	and    BYTE PTR [edx-0x5e322d13],0xbf
  4094d5:	lods   al,BYTE PTR ds:[esi]
  4094d6:	adc    DWORD PTR [ebp-0x75],eax
  4094d9:	fisttp WORD PTR [edi-0x7113f20a]
  4094df:	adc    al,0x64
  4094e1:	retf   0x8ecb
  4094e4:	sti    
  4094e5:	add    DWORD PTR [eax*2-0x69ec8bbe],ecx
  4094ec:	adc    ch,BYTE PTR [esi-0x7af0fb9d]
  4094f2:	imul   ebx,DWORD PTR [esi+ebx*2-0x76],0xffffffa7
  4094f7:	popa   
  4094f8:	mov    ds:0xdf9facfc,eax
  4094fd:	stos   BYTE PTR es:[edi],al
  4094fe:	push   ss
  4094ff:	fisttp QWORD PTR [edi+0x2c91bcda]
  409505:	fild   DWORD PTR [ecx+0x2a]
  409508:	xchg   ebp,eax
  409509:	leave  
  40950a:	mov    bl,BYTE PTR [edx-0x46cebc32]
  409510:	(bad)  
  409511:	rol    ebx,cl
  409513:	pop    ebx
  409514:	out    0xdc,al
  409516:	shl    BYTE PTR [eax-0x30a77c01],0x69
  40951d:	std    
  40951e:	arpl   di,cx
  409520:	dec    ebp
  409521:	daa    
  409522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409523:	push   ecx
  409524:	dec    esi
  409525:	(bad)  
  409526:	retf   0x493b
  409529:	jle    0x409564
  40952b:	ins    BYTE PTR es:[edi],dx
  40952c:	sbb    edi,DWORD PTR [esi]
  40952e:	push   ebx
  40952f:	test   ebx,edi
  409531:	mov    eax,ds:0x8e91e2c1
  409536:	xchg   ecx,eax
  409537:	pop    edx
  409538:	push   ds
  409539:	xchg   esi,eax
  40953a:	pop    ebp
  40953b:	fcom   QWORD PTR [eax-0x75fbf541]
  409541:	pop    ds
  409542:	fiadd  DWORD PTR [edi-0x3b45ae16]
  409548:	or     al,0x5f
  40954a:	jns    0x40953c
  40954c:	loope  0x409582
  40954e:	ds adc al,0x45
  409551:	test   BYTE PTR [esp+edi*2-0x7d6b39f7],dh
  409558:	mov    edi,0xc0c78ed1
  40955d:	clc    
  40955e:	or     eax,0x1f6ceedc
  409563:	pop    ecx
  409564:	test   esi,ebp
  409566:	xor    ecx,0xffffff8f
  409569:	xchg   BYTE PTR [eax+0x25],cl
  40956c:	in     eax,dx
  40956d:	jnp    0x4095bb
  40956f:	xchg   esi,eax
  409570:	push   edi
  409571:	les    ecx,FWORD PTR [edi-0x37f94551]
  409577:	mul    DWORD PTR [ebx+ebp*4-0x35]
  40957b:	dec    DWORD PTR [edi+0x2e]
  40957e:	or     DWORD PTR [esi-0x28ff01a0],ebp
  409584:	dec    esp
  409585:	(bad)  
  409586:	pop    edx
  409587:	leave  
  409588:	inc    ebp
  409589:	in     eax,0x38
  40958b:	test   eax,0x6758c937
  409590:	gs pop edx
  409592:	mov    cl,0x7e
  409594:	cmp    ah,BYTE PTR [edi-0xe]
  409597:	mov    ds:0xc0ddd89d,eax
  40959c:	ret    
  40959d:	dec    BYTE PTR [esi]
  40959f:	jg     0x409562
  4095a1:	in     eax,dx
  4095a2:	sbb    BYTE PTR [edx+0x55],cl
  4095a5:	scas   al,BYTE PTR es:[edi]
  4095a6:	int    0x38
  4095a8:	(bad)  
  4095a9:	lock inc ebp
  4095ab:	gs xchg ebx,eax
  4095ad:	(bad)  
  4095ae:	retf   0xcc2f
  4095b1:	shl    DWORD PTR [ecx-0x41],cl
  4095b4:	pop    ds
  4095b5:	xor    al,BYTE PTR [eax-0x2a82b6b8]
  4095bb:	mov    edi,0x7291ec12
  4095c0:	dec    ecx
  4095c1:	stos   BYTE PTR es:[edi],al
  4095c2:	mov    ds,WORD PTR [edi+eiz*2-0xf]
  4095c6:	retf   
  4095c7:	cwde   
  4095c8:	inc    BYTE PTR [esi+edi*8]
  4095cb:	or     dl,BYTE PTR [ebx+0x5d59d7cc]
  4095d1:	jle    0x409553
  4095d3:	ret    
  4095d4:	jg     0x409633
  4095d6:	pop    eax
  4095d7:	rol    BYTE PTR [edx-0x21fdd1d],0x3b
  4095de:	popf   
  4095df:	repz and dl,dh
  4095e2:	lds    ecx,FWORD PTR [ebp-0x5427535]
  4095e8:	out    0x25,al
  4095ea:	stc    
  4095eb:	outs   dx,DWORD PTR ds:[esi]
  4095ec:	sbb    ecx,edi
  4095ee:	in     al,0xa2
  4095f0:	mov    ebx,0xdef53f67
  4095f5:	push   esi
  4095f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f7:	push   ebx
  4095f8:	jg     0x409667
  4095fa:	popa   
  4095fb:	addr16 leave 
  4095fd:	xchg   DWORD PTR [edx+0x4987ea5a],ebp
  409603:	adc    BYTE PTR [edi],ah
  409605:	or     cl,BYTE PTR [ebx]
  409607:	ror    BYTE PTR ss:[ebx+0x57c3617c],0xb5
  40960f:	std    
  409610:	test   eax,0x3a322584
  409615:	push   esp
  409616:	in     al,0xf2
  409618:	int3   
  409619:	inc    ecx
  40961b:	jb     0x4095db
  40961d:	mov    edx,0xd79c211c
  409622:	inc    edi
  409623:	jecxz  0x40961d
  409625:	mov    ah,0xce
  409627:	in     al,0xd5
  409629:	push   ebp
  40962a:	inc    ebx
  40962b:	add    al,0xc1
  40962d:	inc    ebp
  40962e:	xchg   edi,eax
  40962f:	scas   al,BYTE PTR es:[edi]
  409630:	nop
  409631:	add    DWORD PTR [esi],ecx
  409633:	or     al,0xb6
  409635:	or     al,0x46
  409637:	addr16 add ah,dl
  40963a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40963b:	pop    es
  40963c:	das    
  40963d:	mov    edx,0x50481186
  409642:	das    
  409643:	cmp    bl,BYTE PTR [edx+0x23]
  409646:	push   ss
  409647:	dec    ebx
  409648:	jecxz  0x40965c
  40964a:	fs pop edx
  40964c:	mov    ds:0x9e5d9b1b,al
  409651:	adc    al,0x85
  409653:	sbb    DWORD PTR [edi],esp
  409655:	popa   
  409656:	xchg   BYTE PTR [edi-0x6e],ah
  409659:	xlat   BYTE PTR ds:[ebx]
  40965a:	fild   QWORD PTR [ebp-0x25]
  40965d:	iret   
  40965e:	jle    0x4096cf
  409660:	ret    
  409661:	rcr    DWORD PTR [eax+edi*8-0x1b],cl
  409665:	pop    ds
  409666:	sbb    esi,ecx
  409668:	add    eax,0xbda9ecdf
  40966d:	xchg   esp,eax
  40966e:	pop    edx
  40966f:	push   edx
  409670:	scas   eax,DWORD PTR es:[edi]
  409671:	aas    
  409672:	sar    ah,cl
  409674:	popf   
  409675:	ja     0x40962b
  409677:	cdq    
  409678:	adc    DWORD PTR [ebp+0x33],edx
  40967b:	cs in  eax,dx
  40967d:	sbb    eax,0x4e46d0e6
  409682:	pop    es
  409683:	add    BYTE PTR [edi+0x30ec2ced],ch
  409689:	inc    ebp
  40968a:	fadd   st,st(0)
  40968c:	lods   eax,DWORD PTR ds:[esi]
  40968d:	cli    
  40968e:	inc    edx
  40968f:	inc    ebx
  409690:	add    dl,BYTE PTR [ecx-0x76]
  409693:	jnp    0x4096fa
  409695:	(bad)
  409698:	shl    DWORD PTR [edi+0x4025af5e],0xdc
  40969f:	loope  0x40966a
  4096a1:	mov    bh,BYTE PTR [edx+ebp*4]
  4096a4:	retf   
  4096a5:	outs   dx,DWORD PTR ds:[esi]
  4096a6:	xchg   edx,eax
  4096a7:	sub    ah,BYTE PTR [eax+0x2]
  4096aa:	mov    DWORD PTR [edx+ebx*4],ebp
  4096ad:	ins    DWORD PTR es:[edi],dx
  4096ae:	arpl   WORD PTR [esi+0x1],cx
  4096b1:	jbe    0x4096e8
  4096b3:	fmul   QWORD PTR [edi+edx*1+0x31c44523]
  4096ba:	push   0xffffffd1
  4096bc:	mov    ah,0x76
  4096be:	inc    eax
  4096bf:	xchg   ebp,eax
  4096c0:	jo     0x409663
  4096c2:	jb     0x40972f
  4096c4:	adc    DWORD PTR [esp+edx*4+0x245cf6e1],esp
  4096cb:	in     al,0x25
  4096cd:	hlt    
  4096ce:	pop    edi
  4096cf:	mov    edi,0x9e349a60
  4096d4:	xchg   ecx,eax
  4096d5:	or     eax,0x99ad61e2
  4096da:	retf   0x73bd
  4096dd:	xchg   esi,eax
  4096de:	or     ebp,ecx
  4096e0:	std    
  4096e1:	test   eax,0x64d673c7
  4096e6:	retf   0xc084
  4096e9:	dec    esi
  4096ea:	sbb    DWORD PTR [edx],0xffffff9a
  4096ed:	shl    BYTE PTR [ebp-0x337af20e],0x95
  4096f4:	imul   ecx,esi,0xffffff9e
  4096f7:	stos   BYTE PTR es:[edi],al
  4096f8:	sar    DWORD PTR [eax+0xc7093a],0xb7
  4096ff:	imul   esp,ecx,0x80eb1107
  409705:	pop    edx
  409706:	rcr    BYTE PTR [ecx],0x8a
  409709:	inc    esp
  40970a:	mov    DWORD PTR [edx-0x22cb67ec],ebp
  409710:	call   0x3b2565c2
  409715:	lock lods eax,DWORD PTR ds:[esi]
  409717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409718:	das    
  409719:	xor    ch,0x73
  40971c:	repz mov ecx,eax
  40971f:	dec    ebp
  409720:	push   cs
  409721:	in     eax,dx
  409722:	fstp   DWORD PTR [edi-0xb]
  409725:	push   0x301bbb46
  40972a:	cmp    eax,0x687e8b9c
  40972f:	ins    BYTE PTR es:[edi],dx
  409730:	push   ds
  409731:	adc    al,0x4c
  409733:	scas   eax,DWORD PTR es:[edi]
  409734:	pop    edx
  409735:	mov    DWORD PTR [eax+0x50cc061],edi
  40973b:	retw   
  40973d:	aas    
  40973e:	push   es
  40973f:	jns    0x409741
  409741:	push   ebp
  409742:	mov    ebx,0xca2ab012
  409747:	xchg   edi,eax
  409748:	dec    esi
  409749:	pop    esi
  40974a:	fcomp  st(2)
  40974c:	push   eax
  40974d:	cmp    dh,BYTE PTR [eax]
  40974f:	fisub  DWORD PTR [ebp+0x12]
  409752:	adc    BYTE PTR [edi],bh
  409754:	mov    eax,ds:0xcec7ccd9
  409759:	and    eax,0xc1ff205
  40975e:	aas    
  40975f:	mov    WORD PTR [eax-0x455c0eaf],fs
  409765:	hlt    
  409766:	push   esp
  409767:	int3   
  409768:	mov    dh,0xee
  40976a:	cmp    BYTE PTR [ebx+0x6ef3c64b],al
  409770:	inc    ebp
  409771:	rcr    DWORD PTR ds:0x79038d1f,0xf3
  409778:	sbb    dh,bh
  40977a:	mov    cl,0xeb
  40977c:	sar    BYTE PTR [ebp+0x9],1
  40977f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409780:	add    ah,BYTE PTR [ebp-0x6]
  409783:	int    0x6d
  409785:	mul    DWORD PTR [ebx]
  409787:	out    0x45,eax
  409789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40978a:	add    al,0xee
  40978c:	jae    0x40978b
  40978e:	mov    al,ds:0xe9903416
  409793:	adc    eax,0xfbbcb2d8
  409798:	mov    WORD PTR [ecx],fs
  40979a:	inc    ebx
  40979b:	mov    es,WORD PTR [edi-0x6b]
  40979e:	pop    esi
  40979f:	and    al,0xa1
  4097a1:	ja     0x409817
  4097a3:	repz xchg esp,eax
  4097a5:	stos   DWORD PTR es:[edi],eax
  4097a6:	inc    edx
  4097a7:	fdiv   DWORD PTR [edi-0x754f49d7]
  4097ad:	enter  0xdbcc,0x23
  4097b1:	push   esp
  4097b2:	mov    DWORD PTR [ebx],edi
  4097b4:	xchg   edi,eax
  4097b5:	fnstenv [esi+0x7c]
  4097b8:	and    edx,DWORD PTR ds:0x3cd19445
  4097be:	fdiv   DWORD PTR [edx+0x69]
  4097c1:	test   eax,0xde62817
  4097c6:	push   edi
  4097c7:	fidivr WORD PTR [edi+0x49b8b4ea]
  4097cd:	and    DWORD PTR [eax+0x4f],ecx
  4097d0:	cmp    eax,0x15822dec
  4097d5:	sbb    edx,DWORD PTR [ebx+0x69940b95]
  4097db:	xchg   esp,eax
  4097dc:	sub    eax,0x18db21e7
  4097e1:	sbb    edi,DWORD PTR [ebp+0x5b]
  4097e4:	cmp    al,0xc4
  4097e6:	mov    bl,0xb9
  4097e8:	push   eax
  4097e9:	jl     0x4097fb
  4097eb:	cli    
  4097ec:	add    ch,BYTE PTR [ecx+0x3b356cc8]
  4097f2:	pushf  
  4097f3:	fldcw  WORD PTR [edx-0x65]
  4097f6:	jecxz  0x40984f
  4097f8:	pop    es
  4097f9:	jmp    0xc84cda14
  4097fe:	div    DWORD PTR [ecx-0x72f1e7d5]
  409804:	addr16 sub al,0x5b
  409807:	aas    
  409808:	fs aaa 
  40980a:	xchg   esp,esp
  40980c:	enter  0x7f3b,0x20
  409810:	test   al,0xd
  409812:	out    dx,al
  409813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409814:	sbb    edi,DWORD PTR [ecx+edi*4+0x5a]
  409818:	push   esi
  409819:	push   0xffffffc5
  40981b:	aam    0xdc
  40981d:	sub    BYTE PTR [esi+0x7474c487],cl
  409823:	stc    
  409824:	shr    DWORD PTR [ecx+0x57714165],cl
  40982a:	pop    edi
  40982b:	sbb    al,0x79
  40982d:	jge    0x409813
  40982f:	push   esi
  409830:	cmp    al,0x51
  409832:	push   ecx
  409833:	data16 xchg BYTE PTR [ebx+ebp*4],cl
  409837:	int3   
  409838:	inc    edx
  409839:	and    ah,BYTE PTR [ecx]
  40983b:	fcom   QWORD PTR [esi+0x6f]
  40983e:	popa   
  40983f:	add    al,0x10
  409841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409842:	and    BYTE PTR [edi+0xd415446],ah
  409848:	icebp  
  409849:	out    dx,eax
  40984a:	pop    eax
  40984b:	mov    ch,0x75
  40984d:	out    dx,eax
  40984e:	push   esi
  40984f:	and    eax,0x3dca100c
  409854:	sub    eax,DWORD PTR [ecx-0x70]
  409857:	shl    BYTE PTR [edx],cl
  409859:	mov    DWORD PTR ds:0x580959ea,eax
  40985f:	mov    dh,0xff
  409861:	xchg   edx,eax
  409862:	and    BYTE PTR [esp+esi*2],bl
  409865:	in     al,dx
  409866:	jmp    0x507d153e
  40986b:	mov    edx,0xbccd15f3
  409870:	and    bh,ah
  409872:	or     DWORD PTR [edx],0x44edd11d
  409878:	cli    
  409879:	(bad)  
  40987a:	fild   WORD PTR [ebp+0x5f]
  40987d:	sbb    al,0x43
  40987f:	or     eax,0x89f786
  409884:	shld   DWORD PTR [ebp+ecx*4+0x0],ebx,0x19
  40988a:	fild   QWORD PTR [ebx+0x5bd6c1a7]
  409890:	repz xchg esi,eax
  409892:	inc    esi
  409893:	pop    ebx
  409894:	out    0x77,al
  409896:	xor    al,0xe2
  409898:	adc    eax,0xd334cb80
  40989d:	xchg   ecx,eax
  40989e:	sbb    BYTE PTR [edi+0x4a9fcf8f],bh
  4098a4:	push   0x31
  4098a6:	mov    al,ds:0x7bef8479
  4098ab:	inc    esp
  4098ac:	(bad)  [ebp-0xc16ba5e]
  4098b2:	popa   
  4098b3:	adc    ebp,esp
  4098b5:	lock pusha 
  4098b7:	outs   dx,DWORD PTR ds:[esi]
  4098b8:	sar    al,0x95
  4098bb:	mov    dl,0x8e
  4098bd:	in     al,0x1e
  4098bf:	retf   
  4098c0:	mov    WORD PTR [ecx],?
  4098c2:	dec    ecx
  4098c3:	call   0x60841b48
  4098c8:	inc    DWORD PTR ds:0xa1572b36
  4098ce:	add    BYTE PTR [eax-0x7eb2a3b9],bh
  4098d4:	dec    esi
  4098d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098d6:	stos   DWORD PTR es:[edi],eax
  4098d7:	sub    al,0x92
  4098d9:	jmp    0x40985b
  4098db:	jp     0x409868
  4098dd:	outs   dx,DWORD PTR ds:[esi]
  4098de:	cmp    bl,bh
  4098e0:	push   edx
  4098e1:	shr    BYTE PTR [eax+0x486f1627],0x55
  4098e8:	jnp    0x40986f
  4098ea:	sbb    dl,ch
  4098ec:	lods   al,BYTE PTR ds:[esi]
  4098ed:	retf   
  4098ee:	adc    ecx,edi
  4098f0:	pop    edx
  4098f1:	sbb    eax,esp
  4098f3:	jmp    0xe0f9e947
  4098f8:	mov    esi,0x1330ead4
  4098fd:	hlt    
  4098fe:	movsx  ecx,BYTE PTR [ebp+0x21]
  409902:	mov    al,ds:0x9cf1fcc7
  409907:	xchg   ebx,eax
  409908:	stos   DWORD PTR es:[edi],eax
  409909:	add    ah,ah
  40990b:	jo     0x409890
  40990d:	sti    
  40990e:	out    dx,eax
  40990f:	xor    DWORD PTR [edi],edx
  409911:	jae    0x4098ce
  409913:	aas    
  409914:	push   0x35
  409916:	ins    DWORD PTR es:[edi],dx
  409917:	dec    ebx
  409918:	mov    bl,0x6b
  40991a:	stc    
  40991b:	cmp    eax,0x74c68df3
  409920:	or     al,ch
  409922:	mov    dh,dl
  409924:	(bad)
  409928:	or     DWORD PTR ds:0x77221f38,ebx
  40992e:	repnz xchg ebp,eax
  409930:	adc    eax,0x66ca608c
  409935:	stos   DWORD PTR es:[edi],eax
  409936:	jbe    0x409911
  409938:	pop    eax
  409939:	adc    BYTE PTR [edi+0x24],al
  40993c:	sub    ebx,esi
  40993e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40993f:	xor    al,0x6e
  409941:	add    al,0xa0
  409943:	fisub  WORD PTR [edi+0x73221f8e]
  409949:	ret    
  40994a:	imul   ecx,DWORD PTR [edi-0xe6b0560],0x1665ef72
  409954:	shl    esp,1
  409956:	pop    esp
  409957:	xchg   edi,eax
  409958:	add    bl,ah
  40995a:	ret    
  40995b:	pop    esp
  40995c:	gs jp  0x409905
  40995f:	popf   
  409960:	inc    esp
  409961:	in     al,0xf6
  409963:	xchg   esi,eax
  409964:	push   0x1976bc40
  409969:	shr    ebx,cl
  40996b:	xchg   ebp,eax
  40996c:	lods   al,BYTE PTR ds:[esi]
  40996d:	popf   
  40996e:	call   0x25ecf44f
  409973:	fist   DWORD PTR [ebx+0x4daf47d2]
  409979:	sub    eax,0x5bb32b17
  40997e:	es test eax,0x23f27baf
  409984:	in     al,0xb4
  409986:	imul   esp,DWORD PTR [edx+0xe70dd40],0x7cf1e644
  409990:	addr16 js 0x4099b1
  409993:	dec    ebp
  409994:	push   ss
  409995:	in     eax,0xff
  409997:	push   esp
  409998:	and    esp,0xffffff99
  40999b:	out    0x25,eax
  40999d:	adc    BYTE PTR [edx-0x38],0x22
  4099a1:	inc    ecx
  4099a2:	cmp    DWORD PTR [esp+edx*8-0x2be69b46],ebx
  4099a9:	push   ecx
  4099aa:	push   ebx
  4099ab:	sbb    eax,0x1e83bd0b
  4099b0:	sar    BYTE PTR [ebp-0x3],cl
  4099b3:	pop    edx
  4099b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099b5:	or     al,0x55
  4099b7:	ret    
  4099b8:	iret   
  4099b9:	sbb    al,0x13
  4099bb:	ds ret 0xd103
  4099bf:	dec    ebp
  4099c0:	mov    eax,0x664ee53
  4099c5:	and    al,0xdb
  4099c7:	or     eax,0xdaa7fd5d
  4099cc:	xchg   esi,eax
  4099cd:	ret    
  4099ce:	cmp    bl,bh
  4099d0:	add    ecx,DWORD PTR [ebp+0x14]
  4099d3:	(bad)  {k7}{z}
  4099d8:	pushf  
  4099d9:	sbb    eax,0x9bced337
  4099de:	scas   eax,DWORD PTR es:[edi]
  4099df:	push   ecx
  4099e0:	mov    edx,0x428f8b4a
  4099e5:	popf   
  4099e6:	rol    dh,1
  4099e8:	cmc    
  4099e9:	popf   
  4099ea:	popf   
  4099eb:	push   ecx
  4099ec:	pop    edi
  4099ed:	lods   eax,DWORD PTR ds:[esi]
  4099ee:	(bad)  
  4099ef:	mov    ds:0x18eb59b5,eax
  4099f4:	push   ss
  4099f5:	mov    WORD PTR [eax-0x3e],ds
  4099f8:	and    BYTE PTR [ebx+0x58ba3b67],dh
  4099fe:	xchg   ebp,eax
  4099ff:	cmc    
  409a00:	mov    bh,0xe4
  409a02:	xor    DWORD PTR [ebx-0x60b0b00],0xffffffd3
  409a09:	rol    cl,cl
  409a0b:	call   0xf3f720df
  409a10:	and    ecx,esi
  409a12:	xchg   esi,eax
  409a13:	les    edx,FWORD PTR ds:0xc31ac731
  409a19:	xchg   ebp,eax
  409a1a:	mov    BYTE PTR [edx],ch
  409a1c:	jb     0x409a8d
  409a1e:	mov    ebp,ebp
  409a20:	mov    al,ds:0x99a1eaf6
  409a25:	stos   DWORD PTR es:[edi],eax
  409a26:	mov    dh,BYTE PTR ds:0x9b0ad7c0
  409a2c:	mov    eax,ds:0x2dcd7c63
  409a31:	(bad)  
  409a32:	fiadd  WORD PTR [ebx-0x6686eb3c]
  409a38:	std    
  409a39:	in     eax,dx
  409a3a:	push   ebp
  409a3b:	and    eax,esp
  409a3d:	jae    0x409a90
  409a3f:	add    BYTE PTR [esi-0x10],dl
  409a42:	jmp    0x409a59
  409a44:	stc    
  409a45:	leave  
  409a46:	push   ds
  409a47:	retf   0x7542
  409a4a:	or     esi,DWORD PTR [ebp-0x7c926603]
  409a50:	vshufpd xmm5,xmm0,xmm5,0x9f
  409a55:	or     DWORD PTR [ebp+0x23],0xffffffac
  409a59:	cld    
  409a5a:	jge    0x409ada
  409a5c:	push   ds
  409a5d:	or     DWORD PTR [bp+si],esi
  409a60:	dec    eax
  409a61:	test   al,0x44
  409a63:	sub    edx,DWORD PTR [esi+0x5fa4fb1f]
  409a69:	inc    eax
  409a6a:	jle    0x409aca
  409a6c:	lods   eax,DWORD PTR ds:[esi]
  409a6d:	dec    edi
  409a6e:	out    0x2e,eax
  409a70:	mov    dh,ch
  409a72:	xchg   ebp,eax
  409a73:	jecxz  0x409ad4
  409a75:	adc    DWORD PTR [edx+ebx*1+0x9],0xe
  409a7a:	xor    eax,0xd0a97ed9
  409a7f:	call   0x48ab:0xdc95c885
  409a86:	sbb    esi,DWORD PTR [ecx+0x380e738b]
  409a8c:	imul   ebp,edx,0x53
  409a8f:	inc    ebx
  409a90:	fnsave [edx+0x58]
  409a93:	mov    edi,0x7c0ca640
  409a98:	jno    0x409add
  409a9a:	add    eax,0xcaf1b1ab
  409a9f:	hlt    
  409aa0:	xor    al,0x81
  409aa2:	pop    ecx
  409aa3:	ja     0x409a2d
  409aa5:	and    eax,0x939d3509
  409aaa:	xchg   esi,eax
  409aab:	cmp    DWORD PTR [edx],esi
  409aad:	inc    ebx
  409aae:	(bad)  
  409aaf:	lock data16 jmp 0x409b21
  409ab3:	loop   0x409b23
  409ab5:	lock mov cl,0xde
  409ab8:	mov    ds:0xff7e3a98,al
  409abd:	push   edi
  409abe:	gs xchg ebp,eax
  409ac0:	cmp    al,0xb3
  409ac2:	mov    bl,0x46
  409ac4:	push   cs
  409ac5:	mov    ds:0xbd5aefd0,al
  409aca:	push   ss
  409acb:	and    ah,BYTE PTR [ebx]
  409acd:	mov    esp,0x2857cb11
  409ad2:	aad    0x3c
  409ad4:	je     0x409aff
  409ad6:	cli    
  409ad7:	imul   esp,edx,0x4e4bdf0e
  409add:	mov    eax,edi
  409adf:	dec    edi
  409ae0:	retf   
  409ae1:	lock imul eax,DWORD PTR cs:[ecx+0x689da4c9],0x2d
  409aea:	adc    bl,bh
  409aec:	pushf  
  409aed:	pop    edi
  409aee:	and    al,0x75
  409af0:	mov    ebp,0x48e4c319
  409af5:	dec    edx
  409af6:	out    dx,al
  409af7:	cmp    ah,bh
  409af9:	xor    ebx,esi
  409afb:	dec    esp
  409afc:	(bad)
  409aff:	inc    esp
  409b00:	mov    BYTE PTR ss:[ebx-0x20468ffb],0xf5
  409b08:	test   DWORD PTR [edx+eax*4+0xd],0xc43acca7
  409b10:	mov    ds:0xc63818b9,eax
  409b15:	popf   
  409b16:	sbb    dl,BYTE PTR [ebx+0x6286cdca]
  409b1c:	sbb    DWORD PTR [esi+0x1c40ca4a],esp
  409b22:	jle    0x409b87
  409b24:	push   ebx
  409b25:	jge    0x409b65
  409b27:	pop    ebp
  409b28:	cdq    
  409b29:	mov    edi,0xcd037207
  409b2e:	jmp    0xe77f:0x79e82e1a
  409b35:	std    
  409b36:	in     al,dx
  409b37:	mov    ebx,0xdc112b
  409b3c:	test   al,0xe
  409b3e:	jbe    0x409b4e
  409b40:	std    
  409b41:	lahf   
  409b42:	int3   
  409b43:	out    0xb1,eax
  409b45:	in     eax,dx
  409b46:	inc    edx
  409b47:	mov    edi,0x955e3eac
  409b4c:	dec    ecx
  409b4d:	imul   ebp,DWORD PTR [esi-0x54],0xffffffbd
  409b51:	inc    esi
  409b52:	loop   0x409b37
  409b54:	std    
  409b55:	in     al,dx
  409b56:	mov    eax,0x5e80898a
  409b5b:	js     0x409b97
  409b5d:	or     dh,BYTE PTR [edx-0x1b]
  409b60:	ds ins BYTE PTR es:[edi],dx
  409b62:	jmp    0x9b66c313
  409b67:	push   es
  409b68:	cmp    al,0x32
  409b6a:	in     al,0xb2
  409b6c:	iret   
  409b6d:	xchg   edx,eax
  409b6e:	mov    bh,0xce
  409b70:	dec    ebp
  409b71:	mov    ebp,0x7c1c82c2
  409b76:	imul   ecx,DWORD PTR [esi],0x4c709962
  409b7c:	xor    bh,dl
  409b7e:	rcr    DWORD PTR [edi+0x71],0xdf
  409b82:	sbb    BYTE PTR ds:0x3944e3c8,cl
  409b88:	jae    0x409b6c
  409b8a:	out    0x5f,eax
  409b8c:	sbb    esp,edi
  409b8e:	xchg   edx,eax
  409b8f:	aam    0x10
  409b91:	mov    cs,WORD PTR [edx+0x1e]
  409b94:	xor    al,0x1a
  409b96:	and    esi,esi
  409b98:	outs   dx,DWORD PTR ds:[esi]
  409b99:	scas   eax,DWORD PTR es:[edi]
  409b9a:	inc    edx
  409b9b:	pusha  
  409b9c:	daa    
  409b9d:	xchg   edx,esp
  409b9f:	cli    
  409ba0:	test   DWORD PTR [ebp+0x1d],0x362380de
  409ba7:	and    BYTE PTR [esi],ah
  409ba9:	jle    0x409c19
  409bab:	or     DWORD PTR [ebx+0x3ba32401],ebp
  409bb1:	rcl    DWORD PTR [ebp+0x146f7b8],1
  409bb7:	sar    DWORD PTR [ecx-0x4b],0xf3
  409bbb:	xchg   ecx,eax
  409bbc:	xor    al,0x89
  409bbe:	std    
  409bbf:	sub    si,di
  409bc2:	cmp    ebx,DWORD PTR [ebx]
  409bc4:	cmp    al,0x6a
  409bc6:	dec    edx
  409bc7:	gs inc edi
  409bc9:	cs push edx
  409bcb:	xor    eax,0xdc939ef4
  409bd0:	xor    DWORD PTR [eax+0x2471a3a8],0xa7be499
  409bda:	mov    ecx,ds
  409bdc:	pop    esp
  409bdd:	ret    
  409bde:	and    ch,dh
  409be0:	inc    ecx
  409be1:	push   edx
  409be2:	(bad)  
  409be3:	cld    
  409be4:	dec    esp
  409be5:	add    DWORD PTR [edx],edx
  409be7:	push   es
  409be8:	mov    edx,0xee744b34
  409bed:	leave  
  409bee:	int    0x6c
  409bf0:	sub    eax,DWORD PTR [esi-0x75]
  409bf3:	sub    edi,DWORD PTR [edi-0x6bcbcaa6]
  409bf9:	push   esp
  409bfa:	push   edi
  409bfb:	ja     0x409b99
  409bfd:	and    ebp,ebx
  409bff:	das    
  409c00:	loop   0x409bf7
  409c02:	push   edi
  409c03:	mov    eax,ds:0xd03cbcaf
  409c08:	adc    eax,0x6587a05
  409c0d:	scas   eax,DWORD PTR es:[edi]
  409c0e:	icebp  
  409c0f:	add    DWORD PTR [ecx-0x7f606986],ecx
  409c15:	add    eax,0xa7bb26c7
  409c1a:	ficom  DWORD PTR [edi]
  409c1c:	iret   
  409c1d:	out    0x11,eax
  409c1f:	fimul  DWORD PTR [eax+0x2d211a26]
  409c25:	pop    eax
  409c26:	int    0xfd
  409c28:	test   al,0x90
  409c2a:	add    ah,BYTE PTR [ebp+0xc39febb]
  409c30:	push   cs
  409c31:	push   ebx
  409c32:	push   esp
  409c33:	out    0xbc,al
  409c35:	aad    0xc9
  409c37:	clc    
  409c38:	sub    ebx,DWORD PTR [ecx-0x50]
  409c3b:	push   eax
  409c3c:	in     al,dx
  409c3d:	xchg   ecx,eax
  409c3e:	adc    DWORD PTR [ebx],edi
  409c40:	xor    al,0xc3
  409c42:	shr    BYTE PTR [edx+0x20],1
  409c45:	cmp    ebp,DWORD PTR [edi-0x44]
  409c48:	enter  0xcad1,0x46
  409c4c:	ret    
  409c4d:	(bad)  
  409c4e:	out    0xf5,eax
  409c50:	test   DWORD PTR [eax-0x30353f98],ebx
  409c56:	into   
  409c57:	(bad)  
  409c58:	xor    eax,0xce3c0e0d
  409c5d:	jg     0x409c1a
  409c5f:	add    BYTE PTR [ebp+edx*1-0x5],0xf9
  409c64:	adc    esi,ecx
  409c66:	lock mov dh,0x5
  409c69:	call   0x4728:0xa1378407
  409c70:	out    0x9b,al
  409c72:	inc    eax
  409c73:	leave  
  409c74:	xchg   edi,eax
  409c75:	or     edx,esi
  409c77:	inc    edi
  409c78:	pop    ss
  409c79:	mov    ch,0x80
  409c7b:	scas   eax,DWORD PTR es:[edi]
  409c7c:	sbb    ebp,eax
  409c7e:	pop    ss
  409c7f:	stc    
  409c80:	dec    eax
  409c81:	stos   DWORD PTR es:[edi],eax
  409c82:	xor    DWORD PTR [eax+ebx*8-0x5e],esp
  409c86:	xchg   esi,eax
  409c87:	pop    ds
  409c88:	enter  0xf7ed,0x17
  409c8c:	pop    ax
  409c8e:	pop    edx
  409c8f:	fisubr WORD PTR [edi-0x6572e915]
  409c95:	mov    dl,0x3a
  409c97:	and    al,0x35
  409c99:	cs (bad) 
  409c9b:	ds sahf 
  409c9d:	(bad)  
  409c9e:	stc    
  409c9f:	push   eax
  409ca0:	(bad)  
  409ca1:	stc    
  409ca2:	test   DWORD PTR [esi-0x440f310],0xfd449254
  409cac:	jmp    edi
  409cae:	iret   
  409caf:	jnp    0x409d20
  409cb1:	popf   
  409cb2:	enter  0x5ed1,0xbf
  409cb6:	bound  esi,QWORD PTR [ebp-0x9]
  409cb9:	fidivr DWORD PTR [eax+0x7c]
  409cbc:	cmp    dh,BYTE PTR [ecx-0x4a]
  409cbf:	xchg   ecx,eax
  409cc0:	push   eax
  409cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cc2:	xchg   ebx,edx
  409cc4:	gs push eax
  409cc6:	shr    eax,cl
  409cc8:	cmc    
  409cc9:	fimul  DWORD PTR [ebp-0x371df35d]
  409ccf:	mov    ah,0xee
  409cd1:	mov    ebx,0xf0b2bc24
  409cd6:	xchg   esi,eax
  409cd7:	leave  
  409cd8:	pop    edx
  409cd9:	fstp   TBYTE PTR [ebp+0x17]
  409cdc:	js     0x409c99
  409cde:	es std 
  409ce0:	mov    cl,0x10
  409ce2:	jnp    0x409d25
  409ce4:	std    
  409ce5:	clc    
  409ce6:	retf   0x3838
  409ce9:	ret    
  409cea:	or     bl,BYTE PTR ds:0x56067c16
  409cf0:	cmp    eax,0xe0ff54c7
  409cf5:	aam    0x22
  409cf7:	pop    ds
  409cf8:	push   ds
  409cf9:	call   0xe868:0xa6ae480c
  409d00:	out    0xc0,eax
  409d02:	adc    bh,bh
  409d04:	xor    BYTE PTR [edi+eax*4],dl
  409d07:	aaa    
  409d08:	mov    bl,dl
  409d0a:	arpl   di,ax
  409d0c:	lods   al,BYTE PTR ds:[esi]
  409d0d:	aas    
  409d0e:	aaa    
  409d0f:	and    eax,0xdc7e607d
  409d14:	pop    esp
  409d15:	xchg   ecx,eax
  409d16:	pop    edx
  409d17:	mov    dh,BYTE PTR [esi+0x19]
  409d1a:	push   es
  409d1b:	mov    esp,0x637b454f
  409d20:	scas   al,BYTE PTR es:[edi]
  409d21:	pop    ss
  409d22:	jne    0x61960ea9
  409d28:	sbb    al,0xc5
  409d2a:	in     eax,dx
  409d2b:	or     ebx,DWORD PTR [ebx+0x6394d2bc]
  409d31:	cmp    esp,DWORD PTR fs:[ebx+esi*1-0x1e6fb59d]
  409d39:	cmp    bh,dh
  409d3b:	int3   
  409d3c:	mov    eax,0x30b6c4dd
  409d41:	fwait
  409d42:	push   edi
  409d43:	dec    esp
  409d44:	xchg   edi,eax
  409d45:	or     eax,0x41e7f830
  409d4a:	mov    dh,0x32
  409d4c:	xchg   BYTE PTR [ebp-0x79bd9874],ch
  409d52:	jl     0x409cf7
  409d54:	xchg   ebp,eax
  409d55:	int    0x47
  409d57:	call   0x728d:0x2e7ee538
  409d5e:	or     al,0x6a
  409d60:	xchg   edx,eax
  409d61:	aaa    
  409d62:	xlat   BYTE PTR ds:[ebx]
  409d63:	and    bl,bh
  409d65:	mov    bl,0x24
  409d67:	push   cs
  409d68:	add    bh,ah
  409d6a:	ja     0x409dac
  409d6c:	and    ebx,edx
  409d6e:	cld    
  409d6f:	ret    
  409d70:	js     0x409d3b
  409d72:	icebp  
  409d73:	loopne 0x409d76
  409d75:	(bad)  
  409d76:	(bad)  
  409d78:	cmp    DWORD PTR [ebx-0x7ba10074],0xb982f1e
  409d82:	mov    ds:0xdd58a5a0,al
  409d87:	add    edi,edx
  409d89:	(bad)  
  409d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d8b:	push   es
  409d8c:	call   0x293e:0x74392b
  409d93:	mov    ds:0xb71ee904,al
  409d98:	pop    ss
  409d99:	rol    DWORD PTR [edi],cl
  409d9b:	inc    edx
  409d9c:	xchg   esi,eax
  409d9d:	aam    0xa0
  409d9f:	push   ds
  409da0:	mov    esp,0xedd42897
  409da5:	xchg   ebx,eax
  409da6:	mul    DWORD PTR [eax+edi*2]
  409da9:	and    DWORD PTR [edi],ebp
  409dab:	add    al,BYTE PTR [eax]
  409dad:	adc    BYTE PTR [ebx],0x4
  409db0:	push   ds
  409db1:	sbb    al,0x68
  409db3:	jae    0x409db5
  409db5:	mov    ebx,0xd7849a9d
  409dba:	sub    eax,0x96ac960e
  409dbf:	mov    al,0xd7
  409dc1:	ss pop esi
  409dc3:	xor    ebx,0x12436b22
  409dc9:	mov    eax,ds:0xd75ffcc2
  409dce:	push   ds
  409dcf:	mov    al,ds:0x4e64cde5
  409dd4:	xchg   ebx,eax
  409dd5:	(bad)  
  409dd6:	sahf   
  409dd7:	jle    0x409e33
  409dd9:	jno    0x409d97
  409ddb:	out    dx,eax
  409ddc:	xchg   ecx,eax
  409ddd:	in     al,dx
  409dde:	sub    ah,BYTE PTR [ecx-0x24]
  409de1:	cwde   
  409de2:	shl    BYTE PTR [eax],1
  409de4:	cmp    ebx,DWORD PTR [esi+0x6d4a644b]
  409dea:	mov    bh,0xbe
  409dec:	fwait
  409ded:	sub    BYTE PTR [ebp+0x1d],ch
  409df0:	sub    eax,ecx
  409df2:	mov    DWORD PTR [ebp-0x4],eax
  409df5:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  409dfc:	mov    eax,DWORD PTR [ebp-0xc]
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	jl     0x40a2f7
  40a2fc:	xchg   esi,eax
  40a2fd:	mov    al,0x2e
  40a2ff:	add    BYTE PTR [edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	or     al,0x85
  40a308:	mov    WORD PTR [esi+0x7df882ec],ds
  40a30e:	jp     0x40a2db
  40a310:	inc    edx
  40a311:	xor    DWORD PTR [ecx],ebx
  40a313:	xchg   ecx,eax
  40a314:	das    
  40a315:	mov    cl,bh
  40a317:	jo     0x40a2dd
  40a319:	jle    0x40a339
  40a31b:	sbb    eax,ebp
  40a31d:	sub    dl,ch
  40a31f:	and    eax,0xde2b49ba
  40a324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a325:	mov    cl,BYTE PTR [esi+ebx*1-0x6c6692d2]
  40a32c:	mov    edi,0xdf705dce
  40a331:	push   0x53db3463
  40a336:	mov    al,ds:0x68773504
  40a33b:	xor    eax,0x40f195d1
  40a340:	outs   dx,BYTE PTR ds:[esi]
  40a341:	and    esp,ebx
  40a343:	adc    al,0x48
  40a345:	fwait
  40a346:	sbb    eax,edi
  40a348:	mov    al,ds:0xb138da70
  40a34d:	sub    DWORD PTR [edi],eax
  40a34f:	out    0x57,al
  40a351:	ret    
  40a352:	pop    es
  40a353:	fbld   TBYTE PTR [ebp+0x6c]
  40a356:	cmp    BYTE PTR [ecx+ebx*2],0xd9
  40a35a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a35b:	jns    0x40a3cf
  40a35d:	fsub   DWORD PTR [esi]
  40a35f:	mov    ch,BYTE PTR [ecx-0x7f99c4e0]
  40a365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a366:	dec    ecx
  40a367:	shr    BYTE PTR [esi+ebp*8],cl
  40a36a:	sbb    al,0x37
  40a36c:	cmp    DWORD PTR [edi+0x41],0xffffff9a
  40a370:	mov    esi,0x42acfbda
  40a375:	test   esp,0x122fa30
  40a37b:	icebp  
  40a37c:	out    dx,eax
  40a37d:	faddp  st(1),st
  40a37f:	fdivr  st(2),st
  40a381:	dec    esi
  40a382:	fimul  DWORD PTR [edi+0x7]
  40a385:	and    al,0x1c
  40a387:	cmp    bh,BYTE PTR [ebp-0x23ac043]
  40a38d:	pop    ss
  40a38e:	shl    DWORD PTR [ebp-0x4926b16d],0xb8
  40a395:	(bad)  
  40a396:	push   eax
  40a397:	adc    esi,DWORD PTR [eax+0x47f9f78e]
  40a39d:	dec    edx
  40a39e:	mov    ecx,0xe5c8f50d
  40a3a3:	lock cmp cl,BYTE PTR [esi-0x41aaaa71]
  40a3aa:	ins    BYTE PTR es:[edi],dx
  40a3ab:	stos   BYTE PTR es:[edi],al
  40a3ac:	pop    ebp
  40a3ad:	imul   edi,DWORD PTR [esi],0xfffffffa
  40a3b0:	and    esi,DWORD PTR [ebp+0x4ed385e3]
  40a3b6:	data16 jl 0x40a3ab
  40a3b9:	dec    eax
  40a3ba:	jbe    0x40a3f0
  40a3bc:	xor    DWORD PTR [esi+0x4f],eax
  40a3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3c0:	scas   al,BYTE PTR es:[edi]
  40a3c1:	mov    al,ds:0x78ea3417
  40a3c6:	xor    DWORD PTR [ebp-0x1b8ed9d2],esp
  40a3cc:	sbb    eax,0x9785f75b
  40a3d1:	add    ecx,DWORD PTR [ebp-0x4]
  40a3d4:	popa   
  40a3d5:	lods   eax,DWORD PTR ds:[esi]
  40a3d6:	push   esp
  40a3d7:	and    al,BYTE PTR [eax+0x44]
  40a3da:	xor    dh,BYTE PTR [esp+edi*2+0x8]
  40a3de:	mov    dh,0xe8
  40a3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3e1:	or     BYTE PTR [eax],0xac
  40a3e4:	ins    BYTE PTR es:[edi],dx
  40a3e5:	inc    ecx
  40a3e6:	inc    BYTE PTR [eax-0x3568b4af]
  40a3ec:	out    dx,al
  40a3ed:	addr16 test eax,0xaa8c5f7c
  40a3f4:	(bad)  
  40a3f5:	push   DWORD PTR ds:0x9c414d21
  40a3fb:	adc    DWORD PTR [ecx-0x794590ee],edi
  40a401:	mov    WORD PTR [edx-0xd690637],?
  40a407:	fdivr  st(1),st
  40a409:	aas    
  40a40a:	int3   
  40a40b:	sub    bl,BYTE PTR [edx]
  40a40d:	rcl    DWORD PTR [ebx],cl
  40a40f:	ins    DWORD PTR es:[edi],dx
  40a410:	mul    esp
  40a412:	fmul   QWORD PTR [eax]
  40a414:	out    dx,eax
  40a415:	or     eax,0x67b24ef8
  40a41a:	jp     0x40a3c3
  40a41c:	fstp   DWORD PTR [esi]
  40a41e:	les    eax,FWORD PTR [edx]
  40a420:	mov    ebp,0xa6ee1ad7
  40a425:	sbb    ah,BYTE PTR [edi-0x23]
  40a428:	and    edi,eax
  40a42a:	or     ah,BYTE PTR [edx]
  40a42c:	push   0xffffff8a
  40a42e:	and    DWORD PTR [edx+0x6c],0x6a6912fc
  40a435:	inc    ecx
  40a436:	lods   al,BYTE PTR ds:[esi]
  40a437:	aad    0x51
  40a439:	jo     0x40a43f
  40a43b:	xchg   bh,bl
  40a43d:	push   0xffffff9d
  40a43f:	pop    edi
  40a440:	adc    al,BYTE PTR [ecx-0x22]
  40a443:	cmp    bh,BYTE PTR [ebp+0x1e074eb4]
  40a449:	cmp    cl,BYTE PTR [ebx]
  40a44b:	xor    eax,ebx
  40a44d:	and    DWORD PTR ds:0xa04fcae5,0x45
  40a454:	dec    eax
  40a455:	or     al,0x17
  40a457:	rcl    BYTE PTR [ebx+edi*4+0x241533ed],1
  40a45e:	add    DWORD PTR [ebp+0x6ca63567],edx
  40a464:	push   edi
  40a465:	adc    eax,0x2614cd03
  40a46a:	xchg   edx,eax
  40a46b:	xchg   edi,eax
  40a46c:	adc    DWORD PTR es:[ebx],esp
  40a46f:	daa    
  40a470:	iret   
  40a471:	or     BYTE PTR [edi+0x3e1565c9],bh
  40a477:	pop    esi
  40a478:	ffreep st(6)
  40a47a:	sti    
  40a47b:	loopne 0x40a4d5
  40a47d:	jecxz  0x40a481
  40a47f:	lock sbb ch,BYTE PTR [eax]
  40a482:	enter  0x79f0,0xfb
  40a486:	lods   eax,DWORD PTR ds:[esi]
  40a487:	lods   eax,DWORD PTR ds:[esi]
  40a488:	frstor [ebx-0x72be17c1]
  40a48e:	dec    ebx
  40a48f:	pop    ss
  40a490:	repz xchg edi,edx
  40a493:	das    
  40a494:	ja     0x40a4d3
  40a496:	shl    BYTE PTR [edx-0x1c83e572],cl
  40a49c:	mov    dh,0x86
  40a49e:	mov    ebx,0x38aa7416
  40a4a3:	jns    0x40a4a4
  40a4a5:	fwait
  40a4a6:	push   edi
  40a4a7:	dec    ebx
  40a4a8:	sub    esi,DWORD PTR [edx+0xbf80d6a]
  40a4ae:	and    ah,BYTE PTR [esi+0x20]
  40a4b1:	sahf   
  40a4b2:	fnstcw WORD PTR [edi+0x40]
  40a4b5:	jmp    0x9bf44995
  40a4ba:	xchg   edi,eax
  40a4bb:	idiv   DWORD PTR [ecx+ebp*1+0x1b284ca5]
  40a4c2:	in     eax,0xcd
  40a4c4:	mov    esp,0xaedf29ed
  40a4c9:	mov    edi,0xf51467d
  40a4ce:	test   DWORD PTR [ebx-0xa],0xe5488258
  40a4d5:	stc    
  40a4d6:	pop    ebx
  40a4d7:	out    0xd3,al
  40a4d9:	mov    BYTE PTR es:[ecx-0x4c],bl
  40a4dd:	pusha  
  40a4de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4df:	inc    esp
  40a4e0:	test   al,0x78
  40a4e2:	add    bh,cl
  40a4e4:	cmp    eax,0xe6900ae
  40a4e9:	mov    ebp,0xec108963
  40a4ee:	mov    esi,DWORD PTR [esi-0x779e4797]
  40a4f4:	xor    al,0xef
  40a4f6:	sbb    eax,0x42e5063b
  40a4fb:	je     0x40a489
  40a4fd:	pop    edi
  40a4fe:	dec    esp
  40a4ff:	push   edi
  40a500:	jae    0x40a50f
  40a502:	push   esi
  40a503:	xchg   edx,eax
  40a504:	adc    dl,BYTE PTR [ecx+0x54c44e44]
  40a50a:	jmp    0xe98a:0x8ed78416
  40a511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a512:	mov    ah,0x1d
  40a514:	cdq    
  40a515:	push   esi
  40a516:	xor    ah,BYTE PTR [ebp+0x43]
  40a519:	jne    0x40a537
  40a51b:	fdiv   st(1),st
  40a51d:	sahf   
  40a51e:	dec    eax
  40a51f:	add    DWORD PTR [ebx],eax
  40a521:	in     al,0x9f
  40a523:	dec    esi
  40a524:	push   esp
  40a525:	(bad)  
  40a527:	mov    dh,al
  40a529:	in     eax,dx
  40a52a:	push   edx
  40a52b:	xchg   edi,eax
  40a52c:	fstp   QWORD PTR ds:0x444a8372
  40a532:	fcmovb st,st(1)
  40a534:	loope  0x40a4ee
  40a536:	adc    al,0x3f
  40a538:	jae    0x40a55d
  40a53a:	mov    ecx,0xb731b250
  40a53f:	ja     0x40a505
  40a541:	retf   0x46c0
  40a544:	fcmovb st,st(6)
  40a546:	push   esi
  40a547:	xchg   esp,eax
  40a548:	xchg   ebp,eax
  40a549:	dec    ebp
  40a54a:	mov    edi,0x8acc03bf
  40a54f:	xchg   ebx,eax
  40a550:	pop    ebp
  40a551:	mov    sp,0xe48c
  40a555:	ret    
  40a556:	in     al,dx
  40a557:	pop    edi
  40a558:	(bad)  
  40a559:	ds jb  0x40a51e
  40a55c:	iret   
  40a55d:	xor    eax,0x62717b94
  40a562:	shl    DWORD PTR [eax+0x70999858],1
  40a568:	jle    0x40a5ad
  40a56a:	ret    
  40a56b:	jne    0x40a5dc
  40a56d:	inc    edx
  40a56e:	test   DWORD PTR [ecx],0xd7428476
  40a574:	aas    
  40a575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a576:	sbb    eax,0xcb04a8a5
  40a57b:	fninit 
  40a57d:	dec    ebx
  40a57e:	fmul   DWORD PTR [edx]
  40a580:	call   0x1e823433
  40a585:	hlt    
  40a586:	sub    eax,0xb67178ac
  40a58b:	push   ebp
  40a58c:	js     0x40a5d3
  40a58e:	mov    edi,0xcbe02490
  40a593:	repz xchg ebp,eax
  40a595:	lahf   
  40a596:	mov    ds:0x6603dc7b,eax
  40a59b:	mov    ah,0x98
  40a59d:	push   ebp
  40a59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a59f:	jne    0x40a5da
  40a5a1:	pop    es
  40a5a2:	dec    eax
  40a5a3:	test   BYTE PTR [edi+0x29],ah
  40a5a6:	dec    esp
  40a5a7:	or     dh,0x99
  40a5aa:	dec    edx
  40a5ab:	adc    eax,0xc233205f
  40a5b0:	(bad)  
  40a5b1:	mov    esi,0x31551d43
  40a5b6:	sbb    edi,DWORD PTR [ecx+edi*1-0x24]
  40a5ba:	das    
  40a5bb:	test   BYTE PTR [esi-0x7140f765],0xe5
  40a5c2:	daa    
  40a5c3:	cld    
  40a5c4:	ror    DWORD PTR [ebx-0x57],cl
  40a5c7:	icebp  
  40a5c8:	wbinvd 
  40a5ca:	push   edx
  40a5cb:	xor    edx,DWORD PTR [edi+edx*1-0x3]
  40a5cf:	xchg   esp,eax
  40a5d0:	ins    DWORD PTR es:[edi],dx
  40a5d1:	push   ebx
  40a5d2:	inc    esi
  40a5d3:	dec    ebp
  40a5d4:	pop    esi
  40a5d5:	cmp    al,0x18
  40a5d7:	shl    DWORD PTR [eax-0x4910ace3],0xb0
  40a5de:	scas   eax,DWORD PTR es:[edi]
  40a5df:	outs   dx,BYTE PTR ds:[esi]
  40a5e0:	lods   eax,DWORD PTR ds:[esi]
  40a5e1:	clc    
  40a5e2:	std    
  40a5e3:	aam    0xdd
  40a5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5e6:	add    ah,BYTE PTR [ebp-0x75fcf815]
  40a5ec:	sahf   
  40a5ed:	sub    DWORD PTR [ebp-0x75],edx
  40a5f0:	cdq    
  40a5f1:	adc    bl,BYTE PTR [edi-0x27]
  40a5f4:	mov    ch,0x12
  40a5f6:	inc    ecx
  40a5f7:	test   DWORD PTR [esp+ebx*1-0x61],0x671326bd
  40a5ff:	jecxz  0x40a5f9
  40a601:	xchg   DWORD PTR [ebx],edx
  40a603:	and    eax,0x924b53be
  40a608:	in     al,dx
  40a609:	loopne 0x40a5a1
  40a60b:	int    0x41
  40a60d:	out    dx,eax
  40a60e:	scas   eax,DWORD PTR es:[edi]
  40a60f:	in     al,0xf8
  40a611:	ja     0x40a621
  40a613:	cmp    ch,BYTE PTR [edx]
  40a615:	sbb    esi,DWORD PTR [ecx-0xa]
  40a618:	daa    
  40a619:	dec    esi
  40a61a:	and    eax,0x536d6a8c
  40a61f:	into   
  40a620:	and    ecx,DWORD PTR [esi]
  40a622:	pop    ds
  40a623:	push   ebp
  40a624:	sti    
  40a625:	fidivr DWORD PTR [ecx+0x48]
  40a628:	cld    
  40a629:	stc    
  40a62a:	enter  0x89f5,0x2b
  40a62e:	(bad)  
  40a62f:	sbb    dh,cl
  40a631:	(bad)  
  40a633:	cs int 0x5e
  40a636:	(bad)  
  40a637:	lods   al,BYTE PTR ds:[esi]
  40a638:	je     0x40a628
  40a63a:	js     0x40a65e
  40a63c:	aas    
  40a63d:	xchg   BYTE PTR [ebp-0x62],cl
  40a640:	and    esi,edx
  40a642:	nop
  40a643:	sub    DWORD PTR [ebp-0x3842ba03],ecx
  40a649:	fidivr WORD PTR [edx-0x35]
  40a64c:	inc    ebx
  40a64d:	fdivr  QWORD PTR [ebx]
  40a64f:	jmp    0x40a6a6
  40a651:	test   BYTE PTR [ecx+edi*2-0x62600dfb],0x56
  40a659:	(bad)  
  40a65a:	(bad)
  40a65f:	sub    DWORD PTR [eax],ebp
  40a661:	jo     0x40a5e4
  40a663:	pusha  
  40a664:	cli    
  40a665:	add    eax,0xabe98d39
  40a66a:	jmp    0x40a5f6
  40a66c:	in     eax,dx
  40a66d:	jo     0x40a5f6
  40a66f:	inc    esi
  40a670:	mov    ah,0xf2
  40a672:	dec    ebp
  40a673:	dec    esi
  40a674:	adc    esi,DWORD PTR [esi]
  40a676:	sti    
  40a677:	mov    WORD PTR [ebp+0x44],ds
  40a67a:	pushf  
  40a67b:	test   eax,0xaa2a5358
  40a680:	je     0x40a6e5
  40a682:	pop    ebx
  40a683:	fild   DWORD PTR [edx-0x74013233]
  40a689:	sub    ecx,DWORD PTR [ebp+0xc]
  40a68c:	push   ebp
  40a68d:	and    al,0x28
  40a68f:	loop   0x40a63f
  40a691:	call   0x14e6:0xd828f7a3
  40a698:	enter  0x86,0x53
  40a69c:	add    edi,eax
  40a69e:	rcr    BYTE PTR [ebx-0x5],cl
  40a6a1:	out    dx,eax
  40a6a2:	fwait
  40a6a3:	xor    eax,0x72684559
  40a6a8:	repz sbb BYTE PTR [esi+ecx*1+0x8],cl
  40a6ad:	test   ebx,ebp
  40a6af:	imul   dx,di,0x8411
  40a6b4:	je     0x40a6a3
  40a6b6:	hlt    
  40a6b7:	loopne 0x40a727
  40a6b9:	inc    edx
  40a6ba:	lock call 0x2e31:0x63da7546
  40a6c2:	xchg   BYTE PTR [ebx],ch
  40a6c4:	in     eax,dx
  40a6c5:	cmp    al,0x17
  40a6c7:	dec    ebx
  40a6c8:	sbb    esp,eax
  40a6ca:	data16 mov al,ds:0x364119d7
  40a6d0:	mov    DWORD PTR [edx+0x63],ebx
  40a6d3:	dec    ebp
  40a6d4:	fdiv   QWORD PTR [edx]
  40a6d6:	js     0x40a745
  40a6d8:	sbb    eax,0x646185fa
  40a6dd:	add    eax,0xa17419a9
  40a6e2:	xlat   BYTE PTR ds:[ebx]
  40a6e3:	xchg   ebx,eax
  40a6e4:	call   0xace4:0x91fe489f
  40a6eb:	bound  eax,QWORD PTR [edx]
  40a6ed:	sbb    edi,DWORD PTR [ebx-0x79]
  40a6f0:	cld    
  40a6f1:	xor    esi,ecx
  40a6f3:	out    0xd1,al
  40a6f5:	es push ebp
  40a6f7:	test   al,0x86
  40a6f9:	loope  0x40a727
  40a6fb:	sbb    DWORD PTR [edi-0x222baf22],esp
  40a701:	ins    DWORD PTR es:[edi],dx
  40a702:	xchg   BYTE PTR [ebx],cl
  40a704:	out    dx,eax
  40a705:	jb     0x40a6ea
  40a707:	shl    DWORD PTR [ebp+0x6c2712dc],0x10
  40a70e:	enter  0x6e0,0x12
  40a712:	inc    esp
  40a713:	stc    
  40a714:	mov    al,0x53
  40a716:	adc    eax,0xe944e070
  40a71b:	imul   edi,DWORD PTR [edi+edx*2+0x69],0xffffff80
  40a720:	cld    
  40a721:	add    eax,DWORD PTR [esi+0x73]
  40a724:	ss jge 0x40a752
  40a727:	(bad)  
  40a728:	arpl   WORD PTR [ecx],bx
  40a72a:	xor    al,0x41
  40a72c:	mov    al,ds:0xe1af2c54
  40a731:	xchg   esi,ebx
  40a733:	and    al,0xa3
  40a735:	jmp    0x40a77a
  40a737:	mov    BYTE PTR [eax],cl
  40a739:	xchg   BYTE PTR [ecx],cl
  40a73b:	sahf   
  40a73c:	inc    esi
  40a73d:	adc    ebp,DWORD PTR [eax+eax*4-0x73]
  40a741:	repnz mov ecx,0xef2c587a
  40a747:	imul   esi,DWORD PTR [esi],0xa4a5d5a8
  40a74d:	fistp  WORD PTR [eax+0x91f264e]
  40a753:	mov    al,ch
  40a755:	lods   eax,DWORD PTR ds:[esi]
  40a756:	fwait
  40a757:	js     0x40a6da
  40a759:	jae    0x40a79b
  40a75b:	shl    esi,cl
  40a75d:	push   0xdee421ea
  40a762:	cli    
  40a763:	cmp    DWORD PTR [ebx],esp
  40a765:	popf   
  40a766:	xor    al,0x12
  40a768:	push   fs
  40a76a:	push   ss
  40a76b:	push   esi
  40a76c:	loopne 0x40a755
  40a76e:	pop    ebp
  40a76f:	jbe    0x40a7d6
  40a771:	mov    ds:0x6217f3b5,al
  40a776:	mov    cl,0xcd
  40a778:	jmp    0xbc9b:0x2bad6e63
  40a77f:	ss addr16 retf 0xe739
  40a784:	inc    eax
  40a785:	in     eax,dx
  40a786:	dec    eax
  40a787:	jns    0x40a75b
  40a789:	adc    BYTE PTR [ebx],cl
  40a78b:	push   eax
  40a78c:	test   al,0x6a
  40a78e:	xor    BYTE PTR [ecx+0x7a],ch
  40a791:	push   esi
  40a792:	jl     0x40a795
  40a794:	mov    bh,0x34
  40a796:	xchg   edx,eax
  40a797:	xor    al,BYTE PTR [eax]
  40a799:	mov    ds:0x474f5e42,eax
  40a79e:	mov    bl,0x42
  40a7a0:	ret    
  40a7a1:	stc    
  40a7a2:	add    DWORD PTR [esp+edx*1+0x5c76e47e],0xf61019b7
  40a7ad:	stos   DWORD PTR es:[edi],eax
  40a7ae:	dec    edi
  40a7af:	inc    edx
  40a7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7b1:	mov    bl,0x2b
  40a7b3:	cmovns esp,DWORD PTR [edx]
  40a7b6:	pop    ds
  40a7b7:	dec    edx
  40a7b8:	dec    edi
  40a7b9:	les    edx,FWORD PTR [edi+0x1f]
  40a7bc:	shl    BYTE PTR [ebp+eax*2+0xb],1
  40a7c0:	xor    al,0x6e
  40a7c2:	mov    esi,0x46809254
  40a7c7:	icebp  
  40a7c8:	out    dx,eax
  40a7c9:	int    0x63
  40a7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7cc:	jns    0x40a78e
  40a7ce:	in     eax,dx
  40a7cf:	hlt    
  40a7d0:	mov    DWORD PTR [esi+0x5190ee0e],eax
  40a7d6:	mul    ecx
  40a7d8:	or     dl,BYTE PTR [ebx]
  40a7da:	and    DWORD PTR [ebx],ebp
  40a7dc:	repz iret 
  40a7de:	in     al,dx
  40a7df:	sbb    al,0x98
  40a7e1:	mov    esi,0x4c440fbf
  40a7e6:	shl    bh,cl
  40a7e8:	fstp   TBYTE PTR [ecx]
  40a7ea:	jecxz  0x40a806
  40a7ec:	into   
  40a7ed:	push   edx
  40a7ee:	leave  
  40a7ef:	and    eax,0x2a83d533
  40a7f4:	aaa    
  40a7f5:	loopne 0x40a7d1
  40a7f7:	(bad)  [ebp+0x71]
  40a7fa:	mov    BYTE PTR [ecx-0x1f],ch
  40a7fd:	cli    
  40a7fe:	mov    al,BYTE PTR [ebx+0x1f]
  40a801:	imul   esp,DWORD PTR [esi+0x33],0x9
  40a805:	mov    ebp,DWORD PTR [edi-0x28]
  40a808:	add    DWORD PTR [edx+edx*1],edx
  40a80b:	mov    bl,0x1b
  40a80d:	and    BYTE PTR [edi-0x61b724f2],al
  40a813:	xchg   esi,eax
  40a814:	mov    ecx,0xaf4fb5f0
  40a819:	push   ecx
  40a81a:	adc    eax,0xb267b3ed
  40a81f:	retf   
  40a820:	or     eax,0x110ce664
  40a825:	jne    0x40a828
  40a827:	dec    esp
  40a828:	lock daa 
  40a82a:	dec    esi
  40a82b:	das    
  40a82c:	sub    al,BYTE PTR [eax-0x32]
  40a82f:	mov    ebx,0x65d82175
  40a834:	mov    ch,0x6a
  40a836:	and    al,0xf1
  40a838:	in     eax,0x1
  40a83a:	add    al,0x9a
  40a83c:	xor    ah,0x46
  40a83f:	jmp    0xfdff:0x7934c1e0
  40a846:	rol    DWORD PTR [edi],0x12
  40a849:	jns    0x40a7cc
  40a84b:	call   0x16dcef7d
  40a850:	inc    ebp
  40a851:	or     DWORD PTR [ecx],ebp
  40a853:	nop
  40a854:	pop    eax
  40a855:	sub    eax,0xaea292b0
  40a85a:	and    BYTE PTR [edx],al
  40a85c:	add    DWORD PTR [ecx-0x2f3a6c90],edx
  40a862:	inc    ebx
  40a863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a864:	shl    al,cl
  40a866:	jno    0x40a801
  40a868:	adc    al,0x2
  40a86a:	rcl    DWORD PTR [edx],cl
  40a86c:	push   ebx
  40a86d:	mov    bl,0xdc
  40a86f:	adc    ebx,DWORD PTR es:[esi]
  40a872:	dec    esi
  40a873:	jp     0x40a8d7
  40a875:	mov    BYTE PTR [eax+edx*1-0x72b2cc02],al
  40a87c:	imul   edi,edi,0x3053855c
  40a882:	std    
  40a883:	stos   BYTE PTR es:[edi],al
  40a884:	or     al,0x44
  40a886:	xor    ax,0xf9c8
  40a88a:	pop    eax
  40a88b:	fmul   QWORD PTR [ebx-0x3c8db26e]
  40a891:	mov    edi,0xae419b
  40a896:	cld    
  40a897:	xor    esi,esp
  40a899:	xchg   ebx,eax
  40a89a:	neg    BYTE PTR [ecx+0x451d99d1]
  40a8a0:	adc    dh,cl
  40a8a2:	pop    ecx
  40a8a3:	cdq    
  40a8a4:	mov    cs,WORD PTR ds:0x79be21bf
  40a8aa:	pop    es
  40a8ab:	lock cmp BYTE PTR [bx+di-0x5bb],ch
  40a8b1:	xor    esi,ecx
  40a8b3:	push   edx
  40a8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8b5:	cmp    cl,bh
  40a8b7:	or     DWORD PTR [ebx],eax
  40a8b9:	xor    al,0x52
  40a8bb:	clc    
  40a8bc:	sub    BYTE PTR [eax-0x50065f82],ah
  40a8c2:	or     ecx,DWORD PTR [ebx+0x7e10dd15]
  40a8c8:	jo     0x40a856
  40a8ca:	sbb    BYTE PTR [ebx-0x488cfb84],ah
  40a8d0:	pop    ss
  40a8d1:	adc    edx,DWORD PTR [edx]
  40a8d3:	popa   
  40a8d4:	(bad)  
  40a8d5:	adc    bl,BYTE PTR [ebx+ebx*2]
  40a8d8:	and    eax,0x13968c75
  40a8dd:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8df:	dec    ebp
  40a8e0:	mov    ch,0x8d
  40a8e2:	adc    al,0xc1
  40a8e4:	adc    ah,bh
  40a8e6:	lea    esi,[ebx+0x2d]
  40a8e9:	ins    BYTE PTR es:[edi],dx
  40a8ea:	ins    DWORD PTR es:[edi],dx
  40a8eb:	push   cs
  40a8ec:	jo     0x40a8e1
  40a8ee:	outs   dx,BYTE PTR ds:[esi]
  40a8ef:	imul   edi,DWORD PTR [ecx+eiz*2],0x109f614b
  40a8f6:	cwde   
  40a8f7:	dec    dl
  40a8f9:	pop    ebp
  40a8fa:	sub    ebx,DWORD PTR [eax+ebx*4+0x45]
  40a8fe:	lods   al,BYTE PTR ds:[esi]
  40a8ff:	push   edx
  40a900:	cmp    al,0x87
  40a902:	sahf   
  40a903:	mov    dl,0xfd
  40a905:	mov    ds:0x5f6aa8a1,eax
  40a90a:	hlt    
  40a90b:	adc    DWORD PTR [esi-0x71773512],0xffffffde
  40a912:	mov    bh,0x8a
  40a914:	pop    edx
  40a915:	mov    bl,0x40
  40a917:	jmp    0x40a942
  40a919:	out    dx,eax
  40a91a:	retf   
  40a91b:	fs sbb al,0xed
  40a91e:	mov    ds:0x4ec4b18d,al
  40a923:	jae    0x40a90d
  40a925:	dec    ecx
  40a926:	rcl    BYTE PTR [ebp+0x53],0xe2
  40a92a:	cs push es
  40a92c:	mov    ch,0xf1
  40a92e:	push   ds
  40a92f:	popa   
  40a930:	lea    esi,[ebp*4+0x3578f6b7]
  40a937:	(bad)  
  40a938:	call   0xd41e85c6
  40a93d:	adc    al,0x65
  40a93f:	stos   BYTE PTR es:[edi],al
  40a940:	std    
  40a941:	push   0xffffffeb
  40a943:	mov    esp,DWORD PTR [esi-0x5b]
  40a946:	ret    0x13c5
  40a949:	cmp    eax,DWORD PTR [edi-0x5afee375]
  40a94f:	or     ebp,edi
  40a951:	sbb    DWORD PTR [esi+0x528c51e8],ecx
  40a957:	inc    ebx
  40a958:	popa   
  40a959:	out    0xb,eax
  40a95b:	mov    al,ds:0xa87439ac
  40a960:	enter  0xfecf,0x24
  40a964:	retf   
  40a965:	dec    edi
  40a966:	outs   dx,DWORD PTR ds:[esi]
  40a967:	inc    edx
  40a968:	mov    al,ah
  40a96a:	xor    ecx,DWORD PTR [esi]
  40a96c:	fimul  WORD PTR [esi-0x4b]
  40a96f:	pop    es
  40a970:	lods   al,BYTE PTR ds:[esi]
  40a971:	sub    DWORD PTR [edx],ecx
  40a973:	shl    DWORD PTR [edx+0x77ca5a61],cl
  40a979:	pop    edx
  40a97a:	test   eax,0x25b35b8f
  40a97f:	xchg   ecx,eax
  40a980:	retf   0x9de2
  40a983:	mov    ch,0x39
  40a985:	sti    
  40a986:	pop    ebp
  40a987:	pusha  
  40a988:	dec    ebp
  40a989:	mov    edx,0x5f5bf05e
  40a98e:	ret    0xec6
  40a991:	cmp    DWORD PTR [ecx-0x1ce8a95],0x7be4a7bc
  40a99b:	ss into 
  40a99d:	xor    al,0x42
  40a99f:	in     eax,0x5d
  40a9a1:	jg     0x40a9bf
  40a9a3:	mov    ecx,0x68dcfb88
  40a9a8:	das    
  40a9a9:	xchg   BYTE PTR [ebx-0xdb274b0],ah
  40a9af:	and    BYTE PTR [esi],al
  40a9b1:	add    ecx,ebp
  40a9b3:	mov    edx,0x4a78ef53
  40a9b8:	and    al,0x1f
  40a9ba:	dec    esi
  40a9bb:	xchg   esp,eax
  40a9bc:	popf   
  40a9bd:	pop    esp
  40a9be:	jmp    0x40a94b
  40a9c0:	or     bh,BYTE PTR [esi+ecx*8+0x75]
  40a9c4:	xchg   ecx,eax
  40a9c5:	adc    dl,BYTE PTR [edi-0x6e]
  40a9c8:	(bad)
  40a9cb:	stos   DWORD PTR es:[edi],eax
  40a9cc:	shl    BYTE PTR [edi-0x6a0a5c0d],cl
  40a9d2:	mov    ebp,0x3ef7631d
  40a9d7:	mov    bh,0x60
  40a9d9:	stc    
  40a9da:	popf   
  40a9db:	sbb    al,0x14
  40a9dd:	and    ebp,DWORD PTR [edx-0x5a]
  40a9e0:	shl    BYTE PTR [ebx-0x23],cl
  40a9e3:	push   edx
  40a9e4:	jmp    0xf8b0d95d
  40a9e9:	nop
  40a9ea:	dec    esi
  40a9eb:	xlat   BYTE PTR ds:[ebx]
  40a9ec:	cmp    BYTE PTR [eax-0x44],al
  40a9ef:	inc    edx
  40a9f0:	xchg   ebp,eax
  40a9f1:	outs   dx,DWORD PTR ds:[esi]
  40a9f2:	add    bl,al
  40a9f4:	dec    edx
  40a9f5:	aam    0x81
  40a9f7:	out    dx,al
  40a9f8:	test   BYTE PTR [esi],ah
  40a9fa:	arpl   si,cx
  40a9fc:	adc    BYTE PTR [ebp-0x4e],bh
  40a9ff:	push   es
  40aa00:	add    al,BYTE PTR [eax+0x51fb63ef]
  40aa06:	dec    ecx
  40aa07:	push   ecx
  40aa08:	in     eax,0x60
  40aa0a:	retf   
  40aa0b:	leave  
  40aa0c:	or     eax,0x86def983
  40aa11:	stos   DWORD PTR es:[edi],eax
  40aa12:	js     0x40a9f0
  40aa14:	outs   dx,DWORD PTR ds:[esi]
  40aa15:	xor    ah,BYTE PTR [esi-0x3e]
  40aa18:	popa   
  40aa19:	pop    esp
  40aa1a:	loopne 0x40aa05
  40aa1c:	add    DWORD PTR [ebx+ecx*1-0xcbceccf],eax
  40aa23:	mov    al,0x15
  40aa25:	jmp    0x511f:0xeadd3cc
  40aa2c:	pop    eax
  40aa2d:	lods   eax,DWORD PTR ds:[esi]
  40aa2e:	ret    
  40aa2f:	sub    ebp,DWORD PTR [edx-0x6b029dc7]
  40aa35:	(bad)  
  40aa36:	aad    0x84
  40aa38:	dec    esi
  40aa39:	rcl    DWORD PTR [edi-0x6da39d97],1
  40aa3f:	out    0xf9,al
  40aa41:	cmp    eax,0xea92b3bf
  40aa46:	push   cs
  40aa47:	and    eax,0x35de14e3
  40aa4c:	out    0xd3,eax
  40aa4e:	jmp    0x2ad6:0xade404ea
  40aa55:	cmp    al,0xc3
  40aa57:	pop    edx
  40aa58:	or     cl,BYTE PTR [ebx]
  40aa5a:	out    0x7,al
  40aa5c:	sub    al,0xea
  40aa5e:	adc    BYTE PTR ds:0x64bddbee,ah
  40aa64:	inc    esi
  40aa65:	xchg   esp,eax
  40aa66:	(bad)  
  40aa68:	rcr    DWORD PTR [edx-0x6c],1
  40aa6b:	iret   
  40aa6c:	and    BYTE PTR ds:0x1eab1689,0x14
  40aa73:	loop   0x40aa03
  40aa75:	ja     0x40aaa3
  40aa77:	add    BYTE PTR [ecx-0x7f38c034],cl
  40aa7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa7e:	add    esi,edi
  40aa80:	lods   al,BYTE PTR ds:[esi]
  40aa81:	mov    al,0xe6
  40aa83:	pop    eax
  40aa84:	cmp    dh,BYTE PTR [ebp+ebx*1+0x6c]
  40aa88:	call   0x51b1:0xc6e7169
  40aa8f:	dec    esi
  40aa90:	pop    edi
  40aa91:	std    
  40aa92:	add    eax,0xebfa585
  40aa97:	mov    DWORD PTR [edx-0x51],eax
  40aa9a:	xor    DWORD PTR [ebp-0x401a2744],ebx
  40aaa0:	dec    esp
  40aaa1:	push   es
  40aaa2:	rcr    DWORD PTR [eax],cl
  40aaa4:	and    edi,esi
  40aaa6:	mov    cl,0xf9
  40aaa8:	and    al,0x4c
  40aaaa:	cmp    dh,al
  40aaac:	jle    0x40aaa7
  40aaae:	outs   dx,DWORD PTR ds:[esi]
  40aaaf:	jo     0x40aa82
  40aab1:	jnp    0x40aa7f
  40aab3:	scas   eax,DWORD PTR es:[edi]
  40aab4:	aas    
  40aab5:	bound  ebx,QWORD PTR [ebx+0x19c4451d]
  40aabb:	cmp    bl,BYTE PTR [eax+0x3]
  40aabe:	inc    esi
  40aabf:	ins    DWORD PTR es:[edi],dx
  40aac0:	scas   al,BYTE PTR es:[edi]
  40aac1:	jmp    0x40aa5e
  40aac3:	out    0xdf,al
  40aac5:	ret    0x972d
  40aac8:	in     eax,dx
  40aac9:	lock dec ecx
  40aacb:	jae    0x40aaba
  40aacd:	inc    esi
  40aace:	jo     0x40ab37
  40aad0:	inc    dx
  40aad2:	add    ah,al
  40aad4:	push   edx
  40aad5:	jne    0x40ab4f
  40aad7:	and    eax,0x5e1c909
  40aadc:	xor    bl,BYTE PTR [ecx+0x482ccbd0]
  40aae2:	and    DWORD PTR [edx+0x8],ecx
  40aae5:	sti    
  40aae6:	(bad)  
  40aae7:	add    eax,0x68f877c4
  40aaec:	enter  0x9aba,0x6f
  40aaf0:	sti    
  40aaf1:	out    dx,al
  40aaf2:	xor    eax,0x95b8a686
  40aaf7:	mov    BYTE PTR [eax],cl
  40aaf9:	repz gs inc edi
  40aafc:	bound  esp,QWORD PTR [ecx-0x24]
  40aaff:	cdq    
  40ab00:	test   BYTE PTR [edi+0x855c077],bl
  40ab06:	cmp    BYTE PTR [ebp+0x30ed20e1],al
  40ab0c:	or     DWORD PTR [esi+0x4],ebx
  40ab0f:	pop    ebp
  40ab10:	rcl    bh,0x67
  40ab13:	pop    esi
  40ab14:	out    0x7,al
  40ab16:	add    esi,0x90e7a89
  40ab1c:	jge    0x40aae6
  40ab1e:	sub    eax,0x52f368fd
  40ab23:	dec    ecx
  40ab24:	sbb    bl,BYTE PTR [esp+edx*8+0x1c]
  40ab28:	xor    ah,BYTE PTR [edx]
  40ab2a:	sahf   
  40ab2b:	lock outs dx,DWORD PTR ds:[esi]
  40ab2d:	and    BYTE PTR [edi+0x4326c2],0xcc
  40ab34:	xchg   edx,eax
  40ab35:	les    ebp,FWORD PTR [esi+0x2f]
  40ab38:	int    0x6e
  40ab3a:	jmp    0x81149e8b
  40ab3f:	mov    eax,0xda125fe4
  40ab44:	sub    DWORD PTR [edi-0x69e51864],0x5d
  40ab4b:	aad    0xda
  40ab4d:	jmp    0x40aaf9
  40ab4f:	xlat   BYTE PTR ds:[ebx]
  40ab50:	push   0xffffffdc
  40ab52:	call   0x1bcc2684
  40ab57:	idiv   ebx
  40ab59:	call   0xfe62e416
  40ab5e:	les    edi,FWORD PTR [edx+0x2a]
  40ab61:	iret   
  40ab62:	xchg   ebp,eax
  40ab63:	aad    0x10
  40ab65:	jl     0x40ab1d
  40ab67:	adc    al,0xb
  40ab69:	jle    0x40ab34
  40ab6b:	clc    
  40ab6c:	(bad)  
  40ab6e:	xchg   DWORD PTR [edi],esi
  40ab70:	adc    edx,DWORD PTR [eax]
  40ab72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab73:	adc    cl,al
  40ab75:	ficomp DWORD PTR [eax]
  40ab77:	xchg   esi,eax
  40ab78:	and    eax,0x7695e032
  40ab7d:	or     eax,0xdf690ee2
  40ab82:	in     al,dx
  40ab83:	std    
  40ab84:	jecxz  0x40abb4
  40ab86:	(bad)  
  40ab87:	sbb    eax,0xe5b3c928
  40ab8c:	mov    ecx,DWORD PTR [esi-0x77e8e659]
  40ab92:	inc    eax
  40ab93:	push   ds
  40ab94:	daa    
  40ab95:	pop    si
  40ab97:	xor    al,0xbe
  40ab99:	xchg   ecx,eax
  40ab9a:	push   0x68
  40ab9c:	adc    cl,BYTE PTR [eax]
  40ab9e:	in     al,dx
  40ab9f:	adc    ah,BYTE PTR [esi+0x3c563a8e]
  40aba5:	or     DWORD PTR [bx+si],esi
  40aba8:	mov    ah,0x2b
  40abaa:	push   eax
  40abab:	es out dx,al
  40abad:	enter  0x9160,0x36
  40abb1:	push   ebp
  40abb2:	repnz stos DWORD PTR es:[edi],eax
  40abb4:	mov    DWORD PTR [esi-0x73],0x9fb2d79a
  40abbb:	aas    
  40abbc:	fistp  WORD PTR [edi+0x75]
  40abbf:	jmp    0x327ffb84
  40abc4:	loope  0x40aba3
  40abc6:	pop    ecx
  40abc7:	mov    ah,0x2
  40abc9:	add    DWORD PTR [edx-0x72],ebp
  40abcc:	js     0x40abfb
  40abce:	xchg   esi,eax
  40abcf:	sub    al,ah
  40abd1:	retf   
  40abd2:	cmp    al,BYTE PTR [ebx-0x56]
  40abd5:	popa   
  40abd6:	test   eax,0xa933fb76
  40abdb:	sub    al,0x95
  40abdd:	stos   DWORD PTR es:[edi],eax
  40abde:	jg     0x40abb7
  40abe0:	adc    bl,BYTE PTR [esi-0x46]
  40abe3:	(bad)  
  40abe4:	fistp  QWORD PTR [esi+eax*4-0x21]
  40abe8:	icebp  
  40abe9:	push   cs
  40abea:	js     0x40ac59
  40abec:	sub    al,0x2e
  40abee:	pop    ebp
  40abef:	push   esp
  40abf0:	push   ebp
  40abf1:	aad    0x86
  40abf3:	xor    eax,0x91af835d
  40abf8:	adc    al,0xca
  40abfa:	std    
  40abfb:	shl    BYTE PTR [ecx-0xa],0x5
  40abff:	test   BYTE PTR [ebp-0x10],0x61
  40ac03:	pop    esp
  40ac04:	push   edi
  40ac05:	mov    ecx,0x6f04eb99
  40ac0a:	adc    al,0xf2
  40ac0c:	inc    ebx
  40ac0d:	lods   al,BYTE PTR ds:[esi]
  40ac0e:	outs   dx,BYTE PTR ds:[esi]
  40ac0f:	pusha  
  40ac10:	std    
  40ac11:	cmp    ah,BYTE PTR [ecx]
  40ac13:	push   0xffffffa9
  40ac15:	mov    cl,0x0
  40ac17:	xlat   BYTE PTR ds:[ebx]
  40ac18:	cli    
  40ac19:	cdq    
  40ac1a:	jnp    0x40abee
  40ac1c:	jnp    0x40ac3d
  40ac1e:	sub    cl,al
  40ac20:	mov    cl,al
  40ac22:	mov    bh,BYTE PTR [ebp+0x3d3c879b]
  40ac28:	loopne 0x40abce
  40ac2a:	sub    ecx,ebp
  40ac2c:	shl    DWORD PTR [ebp-0x53],1
  40ac2f:	int3   
  40ac30:	imul   esp,ecx,0xffffffd9
  40ac33:	and    ebx,esp
  40ac35:	shl    BYTE PTR [edi],1
  40ac37:	mov    ebp,0x3469c36b
  40ac3c:	loop   0x40ac2d
  40ac3e:	sbb    BYTE PTR [edx],dl
  40ac40:	jb     0x40ac04
  40ac42:	sbb    DWORD PTR [edi+0x37c4f125],edx
  40ac48:	xor    eax,0x84f4628f
  40ac4d:	sbb    ah,cl
  40ac4f:	repnz mov ecx,0xb53a24
  40ac55:	test   bl,0xa1
  40ac58:	xor    ah,BYTE PTR [eax+0x10]
  40ac5b:	push   edx
  40ac5c:	or     edx,DWORD PTR [edx]
  40ac5e:	les    ebx,FWORD PTR [edi]
  40ac60:	data16 jecxz 0x40ac77
  40ac63:	mov    bh,0xdb
  40ac65:	xchg   esi,eax
  40ac66:	jmp    0x40ac9e
  40ac68:	add    eax,0xffb3d55b
  40ac6d:	fdiv   DWORD PTR [esi-0x10]
  40ac70:	arpl   WORD PTR [edx],bx
  40ac72:	and    al,0x4d
  40ac74:	xor    al,0x57
  40ac76:	lock cmp DWORD PTR [ebp-0x6a],0x92471dc1
  40ac7e:	jp     0x40ac95
  40ac80:	fcomp  QWORD PTR [edx+0x4b]
  40ac83:	pop    ebx
  40ac84:	mov    ecx,0x6639ff1
  40ac89:	std    
  40ac8a:	shrd   DWORD PTR [eax],ecx,cl
  40ac8d:	jp     0x40ac82
  40ac8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac90:	xor    al,0x3b
  40ac92:	add    BYTE PTR [eax-0x3692cd7c],dl
  40ac98:	sti    
  40ac99:	in     eax,0x77
  40ac9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac9c:	fst    DWORD PTR [eax-0x72f2b7c7]
  40aca2:	arpl   WORD PTR [esi],bp
  40aca4:	mov    ecx,0x1ec9200
  40aca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acaa:	sbb    DWORD PTR [eax-0x1b1b1c0b],ecx
  40acb0:	adc    ch,BYTE PTR [eax+0x7b906490]
  40acb6:	outs   dx,BYTE PTR ds:[esi]
  40acb7:	dec    edi
  40acb8:	adc    ecx,ecx
  40acba:	add    bh,ah
  40acbc:	xchg   ebp,eax
  40acbd:	sub    BYTE PTR [eax+0x30],dh
  40acc0:	push   ebp
  40acc1:	cmp    al,0x82
  40acc3:	inc    eax
  40acc4:	data16 cmc 
  40acc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acc7:	pop    ecx
  40acc8:	xchg   ebx,eax
  40acc9:	ficomp WORD PTR [eax-0x1b497a6a]
  40accf:	jbe    0x40ac8c
  40acd1:	test   al,0x1c
  40acd3:	cdq    
  40acd4:	xchg   esi,eax
  40acd5:	add    dh,BYTE PTR [esi]
  40acd7:	outs   dx,BYTE PTR ds:[esi]
  40acd8:	sbb    al,BYTE PTR [ecx+eax*1-0x5be25576]
  40acdf:	push   ss
  40ace0:	push   eax
  40ace1:	mov    ebx,esp
  40ace3:	or     DWORD PTR [ecx-0x1b],esi
  40ace6:	dec    eax
  40ace7:	out    dx,al
  40ace8:	mov    edx,0x561fc08d
  40aced:	fcomp  QWORD PTR [esi+0x1fd0a641]
  40acf3:	mov    ecx,0x9ac93142
  40acf8:	pop    ebp
  40acf9:	xor    DWORD PTR [eax+0x47],eax
  40acfc:	and    ebx,DWORD PTR [edi]
  40acfe:	out    0x86,eax
  40ad00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad01:	dec    esi
  40ad02:	add    esi,DWORD PTR [ebp+0x61f58fd7]
  40ad08:	rol    DWORD PTR [ebx+ecx*8],0xda
  40ad0c:	mov    ch,0xfd
  40ad0e:	arpl   dx,bp
  40ad10:	jbe    0x40ad6e
  40ad12:	fcomi  st,st(1)
  40ad14:	imul   esp,DWORD PTR [ebp-0x17],0x22
  40ad18:	addr16 mov eax,ds:0x5a38
  40ad1c:	mov    cl,dh
  40ad1e:	fldcw  WORD PTR [ecx+0x67]
  40ad21:	sti    
  40ad22:	push   ds
  40ad23:	repnz adc cl,ah
  40ad26:	push   ss
  40ad27:	ror    BYTE PTR [ebx+0x54],0xc6
  40ad2b:	ret    0xfb42
  40ad2e:	sub    DWORD PTR [ecx-0x77],0x7a
  40ad32:	jbe    0x40ad3d
  40ad34:	push   edi
  40ad35:	icebp  
  40ad36:	jnp    0x40ad69
  40ad38:	(bad)  
  40ad39:	icebp  
  40ad3a:	add    eax,0x190d4c89
  40ad3f:	inc    ebx
  40ad40:	push   edx
  40ad41:	aad    0x9e
  40ad43:	jg     0x40ad0b
  40ad45:	mov    eax,0xd602c0ca
  40ad4a:	shr    eax,cl
  40ad4c:	ret    0x30df
  40ad4f:	aad    0x1
  40ad51:	stos   DWORD PTR es:[edi],eax
  40ad52:	fmul   QWORD PTR [ebp-0x5c]
  40ad55:	dec    eax
  40ad56:	mov    DWORD PTR [ebp+0x5eb38677],ebp
  40ad5c:	in     al,0x11
  40ad5e:	sbb    BYTE PTR [edi+0x5d],bh
  40ad61:	lahf   
  40ad62:	dec    ecx
  40ad63:	cwde   
  40ad64:	inc    ebx
  40ad65:	jbe    0x40ad96
  40ad67:	add    eax,0xb0ef16e6
  40ad6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad6d:	int    0x7a
  40ad6f:	jae    0x40ad08
  40ad71:	ins    BYTE PTR es:[edi],dx
  40ad72:	mov    edx,0xa9f5f62
  40ad77:	call   FWORD PTR [edi]
  40ad79:	mov    eax,0x259d3a77
  40ad7e:	add    BYTE PTR [ebp-0x2],bl
  40ad81:	or     ch,al
  40ad83:	fcom   QWORD PTR [eax+0x49cc10db]
  40ad89:	icebp  
  40ad8a:	js     0x40ade4
  40ad8c:	jmp    0x40ad67
  40ad8e:	pushf  
  40ad8f:	cli    
  40ad90:	fnsave ds:0x487de0ac
  40ad96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad97:	arpl   WORD PTR [ebx],bx
  40ad99:	sbb    bh,ch
  40ad9b:	xor    eax,0x261aabfb
  40ada0:	fist   WORD PTR [ebx+0x3b41c6e8]
  40ada6:	retf   0x423b
  40ada9:	inc    esi
  40adaa:	icebp  
  40adab:	fcom   DWORD PTR [ebp+0x3c50dd80]
  40adb1:	ds data16 mov dh,0x5e
  40adb5:	leave  
  40adb6:	xchg   edx,eax
  40adb7:	cmp    ah,bh
  40adb9:	dec    ecx
  40adba:	cdq    
  40adbb:	sbb    ah,BYTE PTR [esi-0x6bceea80]
  40adc1:	mov    WORD PTR [eax+0x4a41fc28],ss
  40adc7:	xor    BYTE PTR [ebx],cl
  40adc9:	sbb    al,BYTE PTR [ebx]
  40adcb:	pushf  
  40adcc:	lahf   
  40adcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adce:	and    BYTE PTR [ecx-0x4d53a8aa],ah
  40add4:	shl    BYTE PTR gs:[edi+0x48e4cbbb],1
  40addb:	push   esp
  40addc:	or     eax,0x725be40
  40ade1:	jp     0x40ad9f
  40ade3:	xor    ah,BYTE PTR [edi-0x497296fd]
  40ade9:	push   esi
  40adea:	fld    TBYTE PTR [ebx-0x21]
  40aded:	nop
  40adee:	or     cl,BYTE PTR [ebp-0x19a8f844]
  40adf4:	(bad)  
  40adf5:	repnz adc DWORD PTR [eax-0x2c],eax
  40adf9:	lahf   
  40adfa:	cdq    
  40adfb:	int    0xad
  40adfd:	icebp  
  40adfe:	retf   0x2ddb
  40ae01:	rol    BYTE PTR [ebp+ebx*8-0x5133b863],0xf1
  40ae09:	mov    al,0x7e
  40ae0b:	add    dl,BYTE PTR [esi]
  40ae0d:	sub    eax,0xdfacb068
  40ae12:	fwait
  40ae13:	xor    eax,0xd90053b4
  40ae18:	mov    BYTE PTR [esi],ch
  40ae1a:	mov    dl,0xea
  40ae1c:	cld    
  40ae1d:	dec    esi
  40ae1e:	jbe    0x40ae5d
  40ae20:	std    
  40ae21:	push   0xffffffa3
  40ae23:	data16 sbb al,BYTE PTR [ebx]
  40ae26:	or     al,0x42
  40ae28:	pop    ebx
  40ae29:	sbb    BYTE PTR [eax+0x16f27055],bh
  40ae2f:	sbb    bl,BYTE PTR [edi+eiz*4]
  40ae32:	aad    0x7e
  40ae34:	(bad)  
  40ae35:	paddd  mm7,QWORD PTR [edx+0x68eeb338]
  40ae3c:	retf   0xb9a2
  40ae3f:	in     eax,dx
  40ae40:	addr16 (bad) 
  40ae42:	lds    ebp,FWORD PTR [ebp-0x1bb4ab69]
  40ae48:	scas   al,BYTE PTR es:[edi]
  40ae49:	pop    ss
  40ae4a:	xor    cl,BYTE PTR [ebx+0x19a242c4]
  40ae50:	and    ebp,ebp
  40ae52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae54:	loop   0x40ae57
  40ae56:	inc    esp
  40ae57:	into   
  40ae58:	and    dh,BYTE PTR [edx+0x2e398d10]
  40ae5e:	xlat   BYTE PTR ds:[ebx]
  40ae5f:	jle    0x40ade1
  40ae61:	push   ebx
  40ae62:	xchg   BYTE PTR [edx],dl
  40ae64:	xchg   edx,eax
  40ae65:	lea    ebp,[eax]
  40ae67:	xchg   edi,eax
  40ae68:	lods   eax,DWORD PTR ds:[esi]
  40ae69:	jl     0x40ae3e
  40ae6b:	or     DWORD PTR [edi+edx*4+0x57],edx
  40ae6f:	in     al,dx
  40ae70:	aas    
  40ae71:	daa    
  40ae72:	mov    ah,0xfb
  40ae74:	les    ecx,FWORD PTR [ebx]
  40ae76:	out    0x2e,eax
  40ae78:	pop    ss
  40ae79:	adc    eax,0x3f77b492
  40ae7e:	or     dh,BYTE PTR [eax-0x528b87d8]
  40ae84:	and    BYTE PTR [ecx],al
  40ae86:	cs xchg ebx,eax
  40ae88:	js     0x40aee5
  40ae8a:	and    al,0xc6
  40ae8c:	loopne 0x40ae6b
  40ae8e:	push   cs
  40ae8f:	rol    BYTE PTR [ecx-0xfd73d93],0x87
  40ae96:	cmp    eax,0xd38d1330
  40ae9b:	pop    ebp
  40ae9c:	fisttp DWORD PTR fs:[ebp-0x3f]
  40aea0:	mov    ch,dh
  40aea2:	lock outs dx,BYTE PTR ds:[esi]
  40aea4:	div    dh
  40aea6:	das    
  40aea7:	lods   eax,DWORD PTR ds:[esi]
  40aea8:	fisub  DWORD PTR [eax-0x7c]
  40aeab:	iret   
  40aeac:	aam    0x4c
  40aeae:	pop    ds
  40aeaf:	cwde   
  40aeb0:	xor    al,0x47
  40aeb2:	(bad)  
  40aeb3:	cmp    eax,0x21b2ffd0
  40aeb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeb9:	mov    ?,WORD PTR [edx]
  40aebb:	cmp    edi,ecx
  40aebd:	add    al,0xd2
  40aebf:	xor    al,0xe
  40aec1:	fwait
  40aec2:	cwde   
  40aec3:	add    ecx,DWORD PTR [esi-0x14]
  40aec6:	xchg   esp,eax
  40aec7:	imul   BYTE PTR [ebx+0x57122a93]
  40aecd:	or     eax,0xec14ba48
  40aed2:	mov    ah,0x76
  40aed4:	jnp    0x40aebf
  40aed6:	pop    ecx
  40aed7:	add    eax,0x897a3f6c
  40aedc:	inc    esi
  40aedd:	jp     0x40aea7
  40aedf:	cmp    DWORD PTR [esi-0x4e4801f3],ebp
  40aee5:	gs xchg edi,eax
  40aee7:	xchg   esi,eax
  40aee8:	jp     0x40aead
  40aeea:	push   esi
  40aeeb:	out    0xd1,al
  40aeed:	mov    ecx,0xc1154b9d
  40aef2:	fld    QWORD PTR [esi+0x36abec52]
  40aef8:	adc    edi,DWORD PTR [edi-0x43]
  40aefb:	mov    al,0x1c
  40aefd:	push   0xffffffb3
  40aeff:	rcr    DWORD PTR [ebx+0x2062afb3],cl
  40af05:	sbb    edx,DWORD PTR [ebx]
  40af07:	std    
  40af08:	xchg   BYTE PTR cs:[ebp-0xf],cl
  40af0c:	push   es
  40af0d:	sub    esp,edx
  40af0f:	mov    al,0x25
  40af11:	add    ah,BYTE PTR [ebp+0xf]
  40af14:	mov    edx,0x9dad3129
  40af19:	lods   eax,DWORD PTR ds:[esi]
  40af1a:	and    al,0x41
  40af1c:	xchg   edi,eax
  40af1d:	repz js 0x40aedc
  40af20:	jbe    0x40af28
  40af22:	push   ebp
  40af23:	inc    ecx
  40af24:	jbe    0x40aec8
  40af26:	jmp    0x56a9:0x2568becf
  40af2d:	xchg   edx,eax
  40af2e:	pop    ss
  40af2f:	push   es
  40af30:	pop    ss
  40af31:	mov    ebp,esi
  40af33:	pop    ecx
  40af34:	pop    edx
  40af35:	push   ebx
  40af36:	fwait
  40af37:	mov    esp,0xdc5bbe1f
  40af3c:	inc    esp
  40af3d:	rcr    al,0x1c
  40af40:	mov    ecx,0x70f4433a
  40af45:	xchg   edi,eax
  40af46:	outs   dx,DWORD PTR ds:[esi]
  40af47:	popf   
  40af48:	push   ebx
  40af49:	dec    edx
  40af4a:	rol    BYTE PTR [edi+0x1d99e4b5],cl
  40af50:	mov    ch,0x27
  40af52:	mov    edx,0xb4c2fc2a
  40af57:	(bad)  
  40af58:	fnstcw WORD PTR [ecx+0x6]
  40af5b:	mov    bl,0x1c
  40af5d:	clc    
  40af5e:	pop    ebp
  40af5f:	aad    0xcb
  40af61:	add    BYTE PTR [ebp-0x79ca92d7],ah
  40af67:	pop    eax
  40af68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af6a:	xchg   esi,edx
  40af6c:	xchg   ebp,eax
  40af6d:	pusha  
  40af6e:	pop    esi
  40af6f:	loope  0x40af3d
  40af71:	and    cl,0xd1
  40af74:	xchg   edi,eax
  40af75:	add    cl,BYTE PTR [ebx]
  40af77:	scas   eax,DWORD PTR es:[edi]
  40af78:	adc    BYTE PTR [edx],dl
  40af7a:	adc    ebx,DWORD PTR [esi]
  40af7c:	std    
  40af7d:	lock mov eax,0xf7c66b1d
  40af83:	out    dx,eax
  40af84:	addr16 xchg ebx,eax
  40af86:	mov    dh,0x1
  40af88:	pop    ss
  40af89:	int3   
  40af8a:	add    ch,0x68
  40af8d:	jne    0x40afb9
  40af8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af90:	test   al,0xba
  40af92:	jmp    DWORD PTR [edi-0x5e4854fe]
  40af98:	fld    TBYTE PTR [esi-0x629f33b4]
  40af9e:	xor    eax,0xb20fc84c
  40afa3:	repnz dec ebp
  40afa5:	pop    eax
  40afa6:	pop    ds
  40afa7:	and    BYTE PTR [edx],ah
  40afa9:	inc    edi
  40afaa:	test   eax,0xd15ad0ba
  40afaf:	cmp    eax,DWORD PTR [ebx-0x323cd6c1]
  40afb5:	mov    DWORD PTR [eax+0x1be236da],ebp
  40afbb:	mov    ds:0xe708f0a0,eax
  40afc0:	dec    eax
  40afc1:	fnstenv [eax-0x68e92db]
  40afc7:	into   
  40afc8:	bound  esi,QWORD PTR [ebx]
  40afca:	pop    esp
  40afcb:	retf   
  40afcc:	sbb    ebp,DWORD PTR [ebx]
  40afce:	cmp    DWORD PTR [ebp+0x26c62d7d],edi
  40afd4:	cmp    eax,0x9fee7289
  40afd9:	mov    dl,0x3e
  40afdb:	and    al,0x6d
  40afdd:	add    eax,0x32e34c67
  40afe2:	mov    cl,0xe5
  40afe4:	mov    ss,WORD PTR [ecx]
  40afe6:	mov    ah,0x2b
  40afe8:	mov    ch,0x93
  40afea:	push   ebx
  40afeb:	cmp    eax,0x42c38c8d
  40aff0:	mov    al,ds:0x51f77ff3
  40aff5:	and    DWORD PTR [edx+0x12],0x3e
  40aff9:	push   edi
  40affa:	inc    ecx
  40affb:	or     DWORD PTR [esi+0x40fcc32d],0x1c
  40b002:	pop    ss
  40b003:	adc    BYTE PTR [eax],ah
  40b005:	push   0x42c040b1
  40b00a:	jb     0x40afe2
  40b00c:	in     al,0x99
  40b00e:	or     eax,0xf06ea973
  40b013:	cmp    cl,BYTE PTR [ebx-0x77]
  40b016:	outs   dx,BYTE PTR ds:[esi]
  40b017:	cmp    bh,bh
  40b019:	or     al,0x97
  40b01b:	(bad)  
  40b01c:	push   esi
  40b01d:	inc    eax
  40b01e:	jl     0x40b03d
  40b020:	ret    0x3b73
  40b023:	sub    ch,BYTE PTR [ebx]
  40b025:	cmp    BYTE PTR [eax-0x2226051],dl
  40b02b:	aaa    
  40b02c:	xchg   BYTE PTR [ebp+0x408b5440],ch
  40b032:	xor    DWORD PTR ds:0x2544fedf,0x3ff28598
  40b03c:	push   0x36
  40b03e:	xchg   ecx,eax
  40b03f:	fnstcw WORD PTR [esi+0x6c]
  40b042:	mov    ah,0xd7
  40b044:	sbb    eax,0x8c482411
  40b049:	loopne 0x40b04c
  40b04b:	inc    esi
  40b04c:	cs push es
  40b04e:	mov    ds:0x766adcf3,al
  40b053:	push   edi
  40b054:	jecxz  0x40afd8
  40b056:	push   es
  40b057:	pop    ebp
  40b058:	test   ecx,0xa3fa5414
  40b05e:	call   0xa069:0x12b0831b
  40b065:	cwde   
  40b066:	aad    0xda
  40b068:	inc    esp
  40b069:	sub    BYTE PTR ds:[ecx],cl
  40b06c:	out    dx,eax
  40b06d:	pop    ebp
  40b06e:	inc    ebp
  40b06f:	sbb    eax,0x65bc158c
  40b074:	add    ebp,DWORD PTR [esi-0x33]
  40b077:	ds in  eax,dx
  40b079:	aad    0xca
  40b07b:	xchg   edx,eax
  40b07c:	pmaddwd mm3,QWORD PTR [esi]
  40b07f:	and    BYTE PTR [ecx+0x794238ac],0x14
  40b086:	cdq    
  40b087:	mul    edi
  40b089:	xchg   edi,eax
  40b08a:	xchg   edx,eax
  40b08b:	idiv   DWORD PTR [ecx]
  40b08d:	dec    edx
  40b08e:	inc    esi
  40b08f:	inc    esp
  40b090:	pop    esi
  40b091:	sbb    eax,0xeaf9c5df
  40b096:	and    ebx,0xc6246ca2
  40b09c:	paddw  mm7,mm6
  40b09f:	addr16 cmc 
  40b0a1:	xor    esp,esi
  40b0a3:	dec    eax
  40b0a4:	inc    esp
  40b0a5:	mov    ecx,0x87ab2c15
  40b0aa:	iret   
  40b0ab:	inc    esp
  40b0ac:	call   0xd2e12191
  40b0b1:	pop    es
  40b0b2:	mov    ebx,0xc3b4d0c2
  40b0b7:	imul   eax,DWORD PTR [ecx-0x5a2a95f7],0x19
  40b0be:	and    cl,BYTE PTR [ecx+0x31]
  40b0c1:	dec    edx
  40b0c2:	arpl   WORD PTR [esi+0xcca5968],bx
  40b0c8:	ret    
  40b0c9:	and    BYTE PTR [edi-0x2],ch
  40b0cc:	rol    BYTE PTR [ecx-0x59],0x8e
  40b0d0:	add    ecx,esi
  40b0d2:	xor    DWORD PTR [edx+0x2b],edi
  40b0d5:	cmp    eax,0x25e1c1e7
  40b0da:	dec    esp
  40b0db:	sbb    ebx,esp
  40b0dd:	repnz mov ebp,0xfc760550
  40b0e3:	pop    ecx
  40b0e4:	lds    esi,FWORD PTR [esi-0x7f953c35]
  40b0ea:	clc    
  40b0eb:	xchg   edi,eax
  40b0ec:	stc    
  40b0ed:	scas   eax,DWORD PTR es:[edi]
  40b0ee:	and    edx,edi
  40b0f0:	aam    0xe2
  40b0f2:	bound  esp,QWORD PTR [edi-0x3c]
  40b0f5:	test   eax,0x1afc4ae2
  40b0fa:	xor    BYTE PTR [edi],al
  40b0fc:	int3   
  40b0fd:	hlt    
  40b0fe:	outs   dx,BYTE PTR ds:[esi]
  40b0ff:	repnz lods eax,DWORD PTR ds:[esi]
  40b101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b102:	adc    DWORD PTR [edx+0x2e],eax
  40b105:	pop    ss
  40b106:	cmp    edx,ebp
  40b108:	xchg   ch,bh
  40b10a:	shl    DWORD PTR [ebp-0x21],cl
  40b10d:	sbb    ch,BYTE PTR [ebx+0x63]
  40b110:	les    ebx,FWORD PTR [edi]
  40b112:	js     0x40b0ca
  40b114:	adc    cl,ch
  40b116:	jp     0x40b10a
  40b118:	nop
  40b119:	push   eax
  40b11a:	je     0x40b167
  40b11c:	inc    edi
  40b11d:	rcr    DWORD PTR [ebp+0x2380106a],0x4d
  40b124:	sbb    ebx,esi
  40b126:	fcomp  QWORD PTR [eax]
  40b128:	pop    eax
  40b129:	rcl    DWORD PTR [edi+0x4fd58e08],0x8
  40b130:	inc    ebx
  40b131:	cmp    al,BYTE PTR [ebx-0x35]
  40b134:	and    esp,DWORD PTR [edi-0x13]
  40b137:	add    cl,BYTE PTR [edi+esi*1-0x74]
  40b13b:	in     al,dx
  40b13c:	lods   eax,DWORD PTR ds:[esi]
  40b13d:	je     0x40b0f4
  40b13f:	lods   al,BYTE PTR ds:[esi]
  40b140:	out    0xda,eax
  40b142:	mov    esi,0xc1b4a83d
  40b147:	fidivr WORD PTR [esi-0x80]
  40b14a:	dec    esp
  40b14b:	push   edx
  40b14c:	push   ebp
  40b14d:	or     eax,0x81203899
  40b152:	fstp   QWORD PTR [eax+0x5f]
  40b155:	mov    dl,0x18
  40b157:	push   ecx
  40b158:	in     eax,0x53
  40b15a:	idiv   BYTE PTR [ebx+0x46]
  40b15d:	mov    dl,0xd7
  40b15f:	out    dx,eax
  40b160:	clc    
  40b161:	jns    0x40b17d
  40b163:	jg     0x40b1e1
  40b165:	jb     0x40b1e0
  40b167:	or     ebx,DWORD PTR [edx+0x5e2c410c]
  40b16d:	dec    esi
  40b16e:	inc    esi
  40b16f:	dec    ecx
  40b170:	imul   esp,DWORD PTR [edx+0x22],0x71c19782
  40b177:	sbb    edx,eax
  40b179:	jp     0x40b19d
  40b17b:	xchg   esi,eax
  40b17c:	les    esp,FWORD PTR [ecx-0x1e]
  40b17f:	lds    ebx,FWORD PTR [ebp-0x30]
  40b182:	(bad)  
  40b183:	xchg   edx,eax
  40b184:	aaa    
  40b185:	jmp    0x40b1e5
  40b187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b188:	adc    al,BYTE PTR [eax+esi*2+0x49728de6]
  40b18f:	arpl   WORD PTR [ebx],sp
  40b191:	pop    ebp
  40b192:	inc    edi
  40b193:	std    
  40b194:	mov    ds:0xd02c77b0,eax
  40b199:	stc    
  40b19a:	push   es
  40b19b:	jne    0x40b1dd
  40b19d:	dec    edi
  40b19e:	shl    BYTE PTR [esi],cl
  40b1a0:	xchg   ebp,eax
  40b1a1:	lock gs jg 0x40b171
  40b1a5:	imul   ebp,DWORD PTR [eax+0x42],0x30
  40b1a9:	daa    
  40b1aa:	popf   
  40b1ab:	inc    edx
  40b1ac:	jmp    0x7a667a6c
  40b1b1:	test   BYTE PTR [ebx-0x5e],0x56
  40b1b5:	sbb    DWORD PTR [ebx+edx*1+0x1e],ebx
  40b1b9:	outs   dx,BYTE PTR ds:[esi]
  40b1ba:	mov    ?,WORD PTR [ecx+0x3509c583]
  40b1c0:	sbb    bl,BYTE PTR [eax]
  40b1c2:	xor    DWORD PTR [ebx-0x7f5fb324],eax
  40b1c8:	jp     0x40b235
  40b1ca:	mov    edi,0xf672d201
  40b1cf:	mov    WORD PTR [ebx],?
  40b1d1:	pop    eax
  40b1d2:	addr16 test al,0xd4
  40b1d5:	sub    ebp,DWORD PTR [edx+0x48]
  40b1d8:	stos   BYTE PTR es:[edi],al
  40b1d9:	mov    ebx,0xf0042294
  40b1de:	retf   0x9874
  40b1e1:	xor    eax,0x66332a52
  40b1e6:	loop   0x40b22e
  40b1e8:	push   ecx
  40b1e9:	mov    ebp,0x5836d4e8
  40b1ee:	fist   WORD PTR [eax-0x1105e947]
  40b1f4:	cmc    
  40b1f5:	or     al,0xc2
  40b1f7:	out    dx,al
  40b1f8:	push   es
  40b1f9:	cmp    ah,ch
  40b1fb:	dec    ebp
  40b1fc:	repnz cmc 
  40b1fe:	popa   
  40b1ff:	push   ecx
  40b200:	push   0x213a560f
  40b205:	fmul   st(5),st
  40b207:	mov    edx,0xfadf9c2c
  40b20c:	es loope 0x40b1d2
  40b20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b210:	inc    edx
  40b211:	mov    DWORD PTR [ecx-0x4ed826a0],eax
  40b217:	repnz out 0xa7,al
  40b21a:	(bad)  
  40b21b:	sti    
  40b21c:	mov    fs,WORD PTR [edx-0x31]
  40b21f:	pushf  
  40b220:	inc    DWORD PTR ds:0xbc546186
  40b226:	ret    0x8f6
  40b229:	mov    cl,0x3a
  40b22b:	aad    0x8e
  40b22d:	and    eax,0x2ea7ad31
  40b232:	shr    BYTE PTR [ecx+0x33],1
  40b235:	cmp    dh,BYTE PTR [ebx+0x6]
  40b238:	daa    
  40b239:	cmp    ecx,DWORD PTR [esi+0x784db063]
  40b23f:	mov    eax,ds:0x3d6cff15
  40b244:	les    eax,FWORD PTR [ecx]
  40b246:	add    DWORD PTR ds:0xeba09ce7,eax
  40b24c:	xchg   DWORD PTR [esp+esi*2],ecx
  40b24f:	xchg   ecx,eax
  40b250:	loopne 0x40b1e0
  40b252:	jmp    0x3f20:0xe9d060d0
  40b259:	hlt    
  40b25a:	mov    BYTE PTR [esp+ebx*1+0x289575f4],ah
  40b261:	push   ebx
  40b262:	pop    eax
  40b263:	push   ebp
  40b264:	add    DWORD PTR [ecx],ecx
  40b266:	ins    DWORD PTR es:[edi],dx
  40b267:	sbb    BYTE PTR [ebx],ah
  40b269:	pop    es
  40b26a:	sbb    BYTE PTR [edx-0x9],al
  40b26d:	repnz vxorps ymm0,ymm7,YMMWORD PTR [eax]
  40b272:	enter  0x3c8d,0x8f
  40b276:	mov    dl,0x85
  40b278:	sub    ebx,DWORD PTR [ecx]
  40b27a:	xchg   ebp,eax
  40b27b:	xchg   ebx,eax
  40b27c:	cld    
  40b27d:	fs mov dh,0xec
  40b280:	test   BYTE PTR [edx],al
  40b282:	mov    ds:0x51ae881f,al
  40b287:	and    ebx,DWORD PTR [esp+esi*4-0x18141b22]
  40b28e:	mov    dl,0xc4
  40b290:	or     DWORD PTR [ebp+0x49],esp
  40b293:	es jmp 0x4208:0x1d554d66
  40b29b:	fadd   QWORD PTR [eax]
  40b29d:	outs   dx,BYTE PTR ds:[esi]
  40b29e:	(bad)  
  40b29f:	leave  
  40b2a0:	stos   BYTE PTR es:[edi],al
  40b2a1:	dec    esi
  40b2a2:	ror    ah,1
  40b2a4:	fidivr DWORD PTR [ebx+0x6fbb1a1]
  40b2aa:	jp     0x40b2a5
  40b2ac:	xchg   esi,eax
  40b2ad:	cli    
  40b2ae:	pop    edi
  40b2af:	xchg   esi,eax
  40b2b0:	push   edi
  40b2b1:	pop    ecx
  40b2b2:	mov    dh,0x9d
  40b2b4:	jmp    0xa7c154e5
  40b2b9:	mov    edi,0x5db0f13a
  40b2be:	in     al,dx
  40b2bf:	inc    eax
  40b2c0:	or     DWORD PTR [ebp-0x3b4da716],ebp
  40b2c6:	leave  
  40b2c7:	(bad)  
  40b2c8:	or     cl,bl
  40b2ca:	jno    0x40b2ce
  40b2cc:	dec    edx
  40b2cd:	(bad)  
  40b2ce:	add    eax,0xa81d05b0
  40b2d3:	jo     0x40b282
  40b2d5:	dec    eax
  40b2d6:	sbb    ch,BYTE PTR [edx-0x4aa773eb]
  40b2dc:	jp     0x40b34e
  40b2de:	cmp    DWORD PTR [edi],edx
  40b2e0:	out    0x91,al
  40b2e2:	daa    
  40b2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e4:	xchg   edi,eax
  40b2e5:	ret    0x44c9
  40b2e8:	jnp    0x40b358
  40b2ea:	add    BYTE PTR [ebx-0x37],ah
  40b2ed:	mov    eax,0x579fc80b
  40b2f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2f3:	push   0xc87110fd
  40b2f8:	jmp    0x52e49289
  40b2fd:	pop    edx
  40b2fe:	add    BYTE PTR [eax+0x71],ch
  40b301:	lods   al,BYTE PTR ds:[esi]
  40b302:	loop   0x40b31a
  40b304:	pop    eax
  40b305:	and    eax,0xb6f5833a
  40b30a:	push   0xffffffc0
  40b30c:	loopne 0x40b360
  40b30e:	jle    0x40b37a
  40b310:	clc    
  40b311:	pop    ecx
  40b312:	and    dl,0xf7
  40b315:	pusha  
  40b316:	xchg   ecx,edx
  40b318:	pop    eax
  40b319:	aad    0x88
  40b31b:	mov    ebx,0x133d6c20
  40b320:	rcr    ch,cl
  40b322:	inc    edx
  40b323:	loopne 0x40b2fd
  40b325:	cdq    
  40b326:	call   0xaa52:0xf4d0652f
  40b32d:	mov    al,ds:0xfb2ddb7e
  40b332:	fidiv  DWORD PTR [edx+ebx*1-0x3a7e19ef]
  40b339:	stc    
  40b33a:	push   esi
  40b33b:	int    0xac
  40b33d:	fbstp  TBYTE PTR [edi]
  40b33f:	into   
  40b340:	push   eax
  40b341:	xor    eax,0x57d1f66a
  40b346:	lock dec eax
  40b348:	xchg   edx,eax
  40b349:	in     eax,0x76
  40b34b:	xchg   esi,eax
  40b34c:	pop    esp
  40b34d:	iret   
  40b34e:	in     eax,0xa8
  40b350:	xor    al,0xa0
  40b352:	stos   DWORD PTR es:[edi],eax
  40b353:	retf   0xcbca
  40b356:	mov    cl,0xa7
  40b358:	(bad)  
  40b359:	mov    eax,0x1c8cd92
  40b35e:	push   eax
  40b35f:	cmc    
  40b360:	clc    
  40b361:	lds    esp,FWORD PTR [ebx+0x260f9839]
  40b367:	ja     0x40b34f
  40b369:	push   esi
  40b36a:	arpl   WORD PTR [esi+0x4],si
  40b36d:	adc    eax,0xe5f505f6
  40b372:	sbb    ecx,DWORD PTR [esi-0x7d9cb44c]
  40b378:	int    0x64
  40b37a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40b37c:	pop    eax
  40b37d:	fs push ebx
  40b37f:	mov    al,ds:0xa84c381b
  40b384:	push   es
  40b385:	fcomp  QWORD PTR [eax]
  40b387:	(bad)  [ebp+0x27914689]
  40b38d:	test   DWORD PTR [edi],esp
  40b38f:	out    dx,al
  40b390:	(bad)  
  40b392:	jge    0x40b37e
  40b394:	sbb    eax,0xbdcc3349
  40b399:	sub    al,0xc5
  40b39b:	mov    WORD PTR [ecx-0x610a0754],cs
  40b3a1:	inc    ebx
  40b3a2:	fwait
  40b3a3:	data16 sub ah,BYTE PTR [ebx]
  40b3a6:	es jb  0x40b395
  40b3a9:	push   es
  40b3aa:	mov    DWORD PTR [eax+0x59163e43],edi
  40b3b0:	fld    st(0)
  40b3b2:	mov    ds:0x1a49c871,al
  40b3b7:	ins    BYTE PTR es:[edi],dx
  40b3b8:	gs pusha 
  40b3ba:	push   ebp
  40b3bb:	mov    eax,ds:0x82c614d6
  40b3c0:	imul   ebx,DWORD PTR [eax],0x72df44eb
  40b3c6:	cli    
  40b3c7:	paddsb mm4,QWORD PTR [ebx]
  40b3ca:	lock xchg DWORD PTR [esi],ebp
  40b3cd:	dec    edi
  40b3ce:	mov    ds:0xec67f134,eax
  40b3d3:	push   edi
  40b3d4:	clc    
  40b3d5:	mov    dl,0xf4
  40b3d7:	cmp    al,0xb6
  40b3d9:	cmp    DWORD PTR [ecx],ecx
  40b3db:	inc    esi
  40b3dc:	add    DWORD PTR [eax],esp
  40b3de:	or     eax,0x2bf7e24f
  40b3e3:	mov    ds:0x4e6377e2,al
  40b3e8:	adc    DWORD PTR [ebx-0x53c62566],esi
  40b3ee:	inc    esp
  40b3ef:	(bad)  
  40b3f1:	mov    esp,0xaa4ab9ce
  40b3f6:	and    DWORD PTR [ecx],0x6220f643
  40b3fc:	int    0x2c
  40b3fe:	push   0xffffffc0
  40b400:	or     DWORD PTR [edx+0x6b2cf349],0x5c014e68
  40b40a:	or     bh,bh
  40b40c:	(bad)  {k4}
  40b411:	dec    edi
  40b412:	fisttp QWORD PTR [edi+0x3b]
  40b415:	arpl   WORD PTR [ecx-0x393ffff8],ax
  40b41b:	loop   0x40b434
  40b41d:	sbb    BYTE PTR [edx-0x1197ebd2],ch
  40b423:	ins    DWORD PTR es:[edi],dx
  40b424:	jnp    0x40b405
  40b426:	pop    ecx
  40b427:	data16 mov dh,0xe6
  40b42a:	or     eax,0xcce053b0
  40b42f:	outs   dx,DWORD PTR ds:[esi]
  40b430:	and    eax,0xbf3d95e4
  40b435:	fiadd  WORD PTR [ecx+edi*4+0x56]
  40b439:	popa   
  40b43a:	or     eax,0x5e51ccad
  40b43f:	imul   esp,DWORD PTR [ecx],0x53
  40b442:	xor    BYTE PTR [esi+0x1fe2cf6],0xf
  40b449:	jnp    0x40b48d
  40b44b:	add    ecx,DWORD PTR [edi]
  40b44d:	and    dh,0xb6
  40b450:	out    dx,eax
  40b451:	xor    al,0xab
  40b453:	iret   
  40b454:	rol    BYTE PTR [edi-0x12],cl
  40b457:	(bad)  
  40b458:	sub    ecx,eax
  40b45a:	jae    0x40b42b
  40b45c:	repz in eax,dx
  40b45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b45f:	rol    BYTE PTR [edx+0x52],cl
  40b462:	(bad)  
  40b463:	fld    QWORD PTR [eax]
  40b465:	stos   BYTE PTR es:[edi],al
  40b466:	cmc    
  40b467:	xor    al,0x73
  40b469:	std    
  40b46a:	xchg   ecx,eax
  40b46b:	mov    bh,0x57
  40b46d:	dec    edi
  40b46e:	fs inc ecx
  40b470:	rol    BYTE PTR [esi-0x29],0x51
  40b474:	dec    ebx
  40b475:	cmp    eax,0x99244a69
  40b47a:	push   es
  40b47b:	mov    edi,0xbe906b2d
  40b480:	imul   ecx,DWORD PTR [edx+eiz*8-0x66],0x4051f5af
  40b488:	lea    ebp,[eax-0x5a8d69eb]
  40b48e:	(bad)  
  40b48f:	or     eax,0x30be78dd
  40b494:	pop    es
  40b495:	fadd   st(3),st
  40b497:	(bad)  
  40b499:	call   0xe83e:0x2445
  40b49f:	add    al,0x72
  40b4a1:	xor    DWORD PTR [esi+0x14e50170],eax
  40b4a7:	add    DWORD PTR [esp+edi*8+0x24],ebx
  40b4ab:	dec    edx
  40b4ac:	jnp    0x40b4cd
  40b4ae:	cmp    eax,0xb76fca4c
  40b4b3:	jl     0x40b43c
  40b4b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4b6:	push   es
  40b4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4b8:	cmp    ebp,eax
  40b4ba:	rcl    DWORD PTR [edi-0x61e0ac1c],1
  40b4c0:	lds    ebp,FWORD PTR [ebp+0x7]
  40b4c3:	cdq    
  40b4c4:	sub    BYTE PTR [esi],0xad
  40b4c7:	jl     0x40b540
  40b4c9:	dec    ecx
  40b4ca:	adc    ebp,DWORD PTR [esi+0x76077d40]
  40b4d0:	call   DWORD PTR fs:[ebx-0x6b]
  40b4d4:	push   ebp
  40b4d5:	xor    BYTE PTR [ecx+0x7b],ch
  40b4d8:	mov    bl,0x8d
  40b4da:	fsub   QWORD PTR [edx+ecx*2-0x4012b527]
  40b4e1:	loope  0x40b55d
  40b4e3:	in     al,dx
  40b4e4:	addr16 add eax,0xdf8b031c
  40b4ea:	mov    ds:0xe5a7e15d,eax
  40b4ef:	mov    bh,0x30
  40b4f1:	stc    
  40b4f2:	adc    edx,DWORD PTR [ebx-0x30cd8d8d]
  40b4f8:	leave  
  40b4f9:	xor    eax,0xe2a87258
  40b4fe:	scas   al,BYTE PTR es:[di]
  40b500:	or     BYTE PTR [eax-0x71292603],al
  40b506:	ss push cs
  40b508:	test   al,0x9f
  40b50a:	dec    ebp
  40b50b:	mov    ebx,0x4809a615
  40b510:	lods   eax,DWORD PTR ds:[esi]
  40b511:	sti    
  40b512:	bound  ebp,QWORD PTR ds:0x4550c010
  40b518:	dec    edi
  40b519:	mov    ah,0x3
  40b51b:	ds stos DWORD PTR es:[edi],eax
  40b51d:	jle    0x40b54c
  40b51f:	nop
  40b520:	(bad)  
  40b521:	or     eax,DWORD PTR [edx+ecx*8-0x40]
  40b525:	fnstsw WORD PTR [esi]
  40b527:	push   ss
  40b528:	repz fsub DWORD PTR [ebp+0x2f]
  40b52c:	mov    ch,0x37
  40b52e:	in     eax,dx
  40b52f:	jns    0x40b56f
  40b531:	mov    ebx,0xe5c7e78
  40b536:	fst    QWORD PTR es:[esi-0x54]
  40b53a:	int3   
  40b53b:	ret    0xd77
  40b53e:	jmp    0x40b508
  40b540:	and    esp,ebp
  40b542:	fistp  QWORD PTR [ecx]
  40b544:	pop    esi
  40b545:	jbe    0x40b4f3
  40b547:	xor    ah,BYTE PTR [edx+0x76]
  40b54a:	outs   dx,DWORD PTR ds:[esi]
  40b54b:	call   0x8529:0x9c54f923
  40b552:	outs   dx,DWORD PTR ds:[esi]
  40b553:	sbb    dh,bl
  40b555:	(bad)
  40b55a:	aad    0x72
  40b55c:	in     eax,0x2f
  40b55e:	dec    ebx
  40b55f:	jbe    0x40b54b
  40b561:	jmp    0x40b560
  40b563:	xchg   ebx,eax
  40b564:	jmp    0x40b5bf
  40b566:	inc    eax
  40b567:	inc    ecx
  40b568:	test   DWORD PTR [eax],ebp
  40b56a:	inc    esp
  40b56b:	sar    DWORD PTR [edx],1
  40b56d:	lods   eax,DWORD PTR ds:[esi]
  40b56e:	or     cl,0x47
  40b571:	and    BYTE PTR [edi],bh
  40b573:	or     eax,0x4c68f05a
  40b578:	mov    al,ds:0x9c9baed9
  40b57d:	lock dec esi
  40b57f:	xlat   BYTE PTR ds:[ebx]
  40b580:	xchg   esp,eax
  40b581:	aam    0x3d
  40b583:	in     al,0xd4
  40b585:	inc    ecx
  40b586:	(bad)  
  40b588:	(bad)  
  40b589:	xor    ebx,eax
  40b58b:	std    
  40b58c:	xor    al,0x68
  40b58e:	or     esp,eax
  40b590:	xchg   edx,eax
  40b591:	pop    edx
  40b592:	jmp    0xebe07be
  40b597:	jbe    0x40b547
  40b599:	repz loopne 0x40b5c7
  40b59c:	fcomp  QWORD PTR [ebx+0x59]
  40b59f:	push   esp
  40b5a0:	and    eax,0x758be970
  40b5a5:	fsin   
  40b5a7:	rol    bl,0x54
  40b5aa:	lahf   
  40b5ab:	jne    0x40b609
  40b5ad:	shl    BYTE PTR [eax],1
  40b5af:	inc    esi
  40b5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5b1:	stos   BYTE PTR es:[edi],al
  40b5b2:	shl    DWORD PTR [ecx-0x396f6b0a],1
  40b5b8:	push   ebp
  40b5b9:	outs   dx,BYTE PTR ds:[esi]
  40b5ba:	scas   al,BYTE PTR es:[edi]
  40b5bb:	dec    esi
  40b5bc:	iret   
  40b5bd:	rol    DWORD PTR [eax],cl
  40b5bf:	jb     0x40b5cb
  40b5c1:	cwde   
  40b5c2:	mov    bl,0xa0
  40b5c4:	es dec esi
  40b5c6:	test   al,0xe8
  40b5c8:	test   eax,0xf0d994ad
  40b5cd:	stos   BYTE PTR es:[edi],al
  40b5ce:	push   ds
  40b5cf:	ds mov dh,0xf7
  40b5d2:	sbb    eax,0x7797b28a
  40b5d7:	jo     0x40b5de
  40b5d9:	frstor [ebp+eax*2+0x6d]
  40b5dd:	pop    edi
  40b5de:	pusha  
  40b5df:	paddusw mm4,QWORD PTR [ecx]
  40b5e2:	jmp    0x3090d9d5
  40b5e7:	sub    BYTE PTR [edi+0x7c],dl
  40b5ea:	cmp    edx,DWORD PTR [edx]
  40b5ec:	jecxz  0x40b5e0
  40b5ee:	popa   
  40b5ef:	mov    edx,0x3d56fb2e
  40b5f4:	inc    esi
  40b5f5:	or     ecx,ebp
  40b5f7:	es push ebx
  40b5f9:	or     dl,bh
  40b5fb:	mov    esp,DWORD PTR [ebx-0x5a]
  40b5fe:	adc    al,0xfe
  40b600:	cmp    eax,0xd9eba587
  40b605:	in     eax,dx
  40b606:	adc    DWORD PTR [edx+eiz*2-0x3340de51],esp
  40b60d:	dec    edx
  40b60e:	fwait
  40b60f:	pop    ds
  40b610:	xor    DWORD PTR ds:0x6d96a9f7,0x5ab94685
  40b61a:	fild   DWORD PTR [ebx-0x40a97cc4]
  40b620:	loop   0x40b5d1
  40b622:	xlat   BYTE PTR ds:[ebx]
  40b623:	enter  0x353d,0xe6
  40b627:	sbb    ebx,DWORD PTR [esi+eiz*2+0x315307d]
  40b62e:	aas    
  40b62f:	int    0xdc
  40b631:	scas   al,BYTE PTR es:[edi]
  40b632:	inc    edx
  40b633:	dec    edx
  40b634:	xchg   edx,eax
  40b635:	fwait
  40b636:	cs cdq 
  40b638:	adc    BYTE PTR [esp+ebx*2],dl
  40b63b:	adc    eax,0x14b1cc78
  40b640:	push   ds
  40b641:	sar    bl,cl
  40b643:	leave  
  40b644:	inc    ebx
  40b645:	daa    
  40b646:	dec    BYTE PTR [eax-0x1f]
  40b649:	mov    ss,WORD PTR [ebx+0x5b447365]
  40b64f:	retf   
  40b650:	or     BYTE PTR [edx-0x36],ch
  40b653:	sbb    DWORD PTR [ebx-0x3],0x4e86cb54
  40b65a:	pop    edx
  40b65b:	xor    ebx,eax
  40b65d:	mov    ds:0x67759b4b,eax
  40b662:	jmp    0xfedb:0xf50599d3
  40b669:	jbe    0x40b6a0
  40b66b:	dec    ebp
  40b66c:	dec    esp
  40b66d:	enter  0x9dc,0xb0
  40b671:	loopne 0x40b63a
  40b673:	lea    esi,[edx-0x2d]
  40b676:	les    ebp,FWORD PTR [eax]
  40b678:	iret   
  40b679:	sti    
  40b67a:	xor    BYTE PTR [ecx],bl
  40b67c:	xchg   BYTE PTR ds:0xdb97efae,ah
  40b682:	cmp    eax,0x8f9b60fd
  40b687:	pop    ecx
  40b688:	or     ch,ch
  40b68a:	push   0xffffffec
  40b68c:	push   ebx
  40b68d:	cld    
  40b68e:	(bad)  
  40b68f:	pop    eax
  40b690:	xchg   edi,eax
  40b691:	xor    edi,edi
  40b693:	jge    0x40b662
  40b695:	icebp  
  40b696:	mov    ds:0xdedba01,al
  40b69b:	mov    dh,0xb3
  40b69d:	shr    BYTE PTR ds:0xa1d72934,0x5f
  40b6a4:	or     BYTE PTR [edi],0x5f
  40b6a7:	sbb    DWORD PTR [esi+0x69],edx
  40b6aa:	test   al,0x70
  40b6ac:	and    BYTE PTR gs:[ecx],dl
  40b6af:	(bad)  [esi+0x730f7262]
  40b6b5:	ror    BYTE PTR [ebx+0x68],1
  40b6b8:	and    esi,esi
  40b6ba:	pop    esi
  40b6bb:	mov    ch,0x7f
  40b6bd:	hlt    
  40b6be:	adc    BYTE PTR [ebx+0x20],bh
  40b6c1:	jmp    DWORD PTR [ecx]
  40b6c3:	mov    dl,BYTE PTR [ebx-0x23]
  40b6c6:	dec    ebx
  40b6c7:	jmp    0xfcea73d9
  40b6cc:	lahf   
  40b6cd:	or     ecx,DWORD PTR [ebp+0x579b2301]
  40b6d3:	xchg   ebx,eax
  40b6d4:	(bad)  
  40b6d5:	mov    ?,WORD PTR [esi-0xc]
  40b6d8:	sbb    BYTE PTR ds:0x40a7f6b1,dh
  40b6de:	mov    cs,WORD PTR [ebp+ebx*4+0x25a3da5]
  40b6e5:	dec    DWORD PTR [esp+ebx*2+0x325fc91]
  40b6ec:	loope  0x40b679
  40b6ee:	push   cs
  40b6ef:	mov    ds:0xd9827c5,al
  40b6f4:	sub    al,0x95
  40b6f6:	out    dx,eax
  40b6f7:	test   eax,0xf183a9f6
  40b6fc:	mov    esp,DWORD PTR [edx]
  40b6fe:	imul   ebp,DWORD PTR [esi-0x75563af1],0xc352c433
  40b708:	push   ebp
  40b709:	int3   
  40b70a:	loopne 0x40b703
  40b70c:	sub    eax,0x3ef411f3
  40b711:	cmp    eax,0xd84d808a
  40b716:	mov    bh,0x62
  40b718:	popf   
  40b719:	jg     0x40b766
  40b71b:	mov    ds:0x337c5c59,eax
  40b720:	retf   
  40b721:	or     eax,0xfddb9b82
  40b726:	jl     0x40b74d
  40b728:	and    bl,ch
  40b72a:	jb     0x40b737
  40b72c:	jne    0x40b6bc
  40b72e:	lods   eax,DWORD PTR ds:[esi]
  40b72f:	xchg   ebp,eax
  40b730:	repnz mov esi,0xeb33814f
  40b736:	adc    ah,dh
  40b738:	popa   
  40b739:	loopne 0x40b78f
  40b73b:	adc    BYTE PTR [edi+0x2],dh
  40b73e:	sub    edx,eax
  40b740:	in     eax,dx
  40b741:	xchg   ebp,eax
  40b742:	sub    BYTE PTR [ecx-0x7ae4f1fa],ch
  40b748:	test   BYTE PTR [ebx],bh
  40b74a:	jmp    0x40b740
  40b74c:	ret    0x3d7d
  40b74f:	sbb    dl,BYTE PTR [esi]
  40b751:	pop    ss
  40b752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b753:	sti    
  40b754:	sti    
  40b755:	xchg   BYTE PTR [ebp+0x7debf468],dl
  40b75b:	fmul   QWORD PTR [edi+0x2e]
  40b75e:	jb     0x40b792
  40b760:	call   0xdfde:0xdd84caff
  40b767:	lods   eax,DWORD PTR ds:[esi]
  40b768:	pop    ds
  40b769:	loope  0x40b76f
  40b76b:	cwde   
  40b76c:	push   0x5a
  40b76e:	(bad)  
  40b76f:	jmp    0x40b787
  40b771:	adc    ah,dl
  40b773:	test   eax,0x7138a51b
  40b778:	bound  esp,QWORD PTR [edx+0x4aa7d839]
  40b77e:	pop    ds
  40b77f:	(bad)  [esi+0x33]
  40b782:	mov    bh,BYTE PTR [eax]
  40b784:	mov    ds:0xd4eb7241,al
  40b789:	or     DWORD PTR [ecx],eax
  40b78b:	pop    esp
  40b78c:	out    0x45,eax
  40b78e:	mov    dh,0x28
  40b790:	les    eax,FWORD PTR [eax+esi*8+0x6db89d64]
  40b797:	out    dx,al
  40b798:	fcom   DWORD PTR [ebx]
  40b79a:	pop    ebx
  40b79b:	pusha  
  40b79c:	js     0x40b757
  40b79e:	xchg   edi,eax
  40b79f:	mov    ebx,0xa103ef1d
  40b7a4:	pop    ecx
  40b7a5:	inc    edi
  40b7a6:	and    BYTE PTR [eax],bh
  40b7a8:	and    BYTE PTR [edi-0x117f4ab7],0x15
  40b7af:	or     BYTE PTR [edx],dl
  40b7b1:	int    0xb6
  40b7b3:	pop    esp
  40b7b4:	xchg   esi,eax
  40b7b5:	mov    esp,0xb1b1a87f
  40b7ba:	icebp  
  40b7bb:	ret    0x84d9
  40b7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7bf:	iret   
  40b7c0:	aaa    
  40b7c1:	outs   dx,DWORD PTR ds:[esi]
  40b7c2:	sub    esp,edi
  40b7c4:	push   es
  40b7c5:	lahf   
  40b7c6:	std    
  40b7c7:	mov    ds:0x447accc3,eax
  40b7cc:	inc    esi
  40b7cd:	shr    BYTE PTR [ecx],1
  40b7cf:	jne    0x40b850
  40b7d1:	cld    
  40b7d2:	sar    DWORD PTR [ebx-0x2c],cl
  40b7d5:	imul   ebx,DWORD PTR [eax-0x29],0xe6ff3919
  40b7dc:	sbb    DWORD PTR [eax-0x60],edi
  40b7df:	pop    es
  40b7e0:	ror    DWORD PTR [edi],0xc8
  40b7e3:	or     al,0x1c
  40b7e5:	xchg   ecx,eax
  40b7e6:	jge    0x40b828
  40b7e8:	lods   al,BYTE PTR ds:[esi]
  40b7e9:	and    eax,0x486a1460
  40b7ee:	cdq    
  40b7ef:	inc    ebx
  40b7f0:	jmp    0x44b1:0xf6409c1a
  40b7f7:	or     edi,DWORD PTR [ecx-0x5d]
  40b7fa:	stos   DWORD PTR es:[edi],eax
  40b7fb:	push   es
  40b7fc:	or     BYTE PTR [ecx],cl
  40b7fe:	inc    ebx
  40b7ff:	stos   DWORD PTR es:[edi],eax
  40b800:	sub    BYTE PTR [ebx-0xe1c5025],dl
  40b806:	(bad)  
  40b808:	mov    eax,0xc5a44a3d
  40b80d:	xchg   edx,eax
  40b80e:	shl    DWORD PTR [eax+0x23],0x1e
  40b812:	cmp    eax,0x9c39b272
  40b817:	mov    ebp,0xbb1e9b0c
  40b81c:	repnz sar DWORD PTR [eax+ebp*2+0x5674d2c8],0x23
  40b825:	xchg   ebp,eax
  40b826:	xchg   esi,eax
  40b827:	sbb    eax,0x806cb968
  40b82c:	pop    edi
  40b82d:	repz xor esi,ebp
  40b830:	adc    BYTE PTR [edx+eax*2+0x57],al
  40b834:	push   edi
  40b835:	pop    esp
  40b836:	int3   
  40b837:	jecxz  0x40b868
  40b839:	jmp    0xe3a6:0x3723be96
  40b840:	mov    ecx,0x99c99b04
  40b845:	stos   DWORD PTR es:[edi],eax
  40b846:	mov    BYTE PTR [ecx-0x3b],cl
  40b849:	jb     0x40b84d
  40b84b:	sbb    DWORD PTR [ecx+0x16],ecx
  40b84e:	repz and al,0x48
  40b851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b852:	dec    esi
  40b853:	int3   
  40b854:	cmp    bl,BYTE PTR [eax+0x71da00ab]
  40b85a:	mov    WORD PTR [edx+0x34],es
  40b85d:	pop    ecx
  40b85e:	fsub   DWORD PTR [ecx]
  40b860:	sti    
  40b861:	cmp    al,0x48
  40b863:	jno    0x40b805
  40b865:	push   ebx
  40b866:	pxor   mm7,mm2
  40b869:	pop    esp
  40b86a:	lahf   
  40b86b:	into   
  40b86c:	and    ebp,DWORD PTR [edx+ebx*4+0x66]
  40b870:	dec    edi
  40b871:	call   0x5e29:0xce4366a6
  40b878:	xchg   edx,eax
  40b879:	leave  
  40b87a:	mov    cl,0x6f
  40b87c:	xchg   ebx,eax
  40b87d:	je     0x40b8af
  40b87f:	in     al,dx
  40b880:	cmp    esp,DWORD PTR [edx+0x3a]
  40b883:	xchg   ebx,eax
  40b884:	xchg   DWORD PTR [edx+0x5ec09ca8],ebp
  40b88a:	aam    0xfb
  40b88c:	xchg   ecx,eax
  40b88d:	add    edi,DWORD PTR es:[bp+di]
  40b891:	enter  0x7ded,0x8c
  40b895:	xchg   ecx,eax
  40b896:	push   ecx
  40b897:	jne    0x40b82c
  40b899:	loope  0x40b89e
  40b89b:	mov    dl,0x1c
  40b89d:	imul   edx,DWORD PTR [ebx+0x19],0x368c63c3
  40b8a4:	push   0x3baa70
  40b8a9:	into   
  40b8aa:	ret    
  40b8ab:	pop    esi
  40b8ac:	bound  ecx,QWORD PTR [edi+0x78786f18]
  40b8b2:	test   DWORD PTR [ebx+0x30],esp
  40b8b5:	xor    bl,BYTE PTR [eax+0x7d]
  40b8b8:	mov    DWORD PTR [esi+0x76cc8042],esi
  40b8be:	(bad)  
  40b8c0:	das    
  40b8c1:	push   cs
  40b8c2:	push   0xffffffd2
  40b8c4:	push   ecx
  40b8c5:	dec    ebx
  40b8c6:	push   edx
  40b8c7:	in     eax,dx
  40b8c8:	sub    ebx,eax
  40b8ca:	pop    edi
  40b8cb:	or     ebx,DWORD PTR [eax-0x3c]
  40b8ce:	mov    edi,0x5b16e5d
  40b8d3:	mov    eax,ds:0xac64f0d8
  40b8d8:	gs jno 0x40b908
  40b8db:	pop    es
  40b8dc:	ret    0xcb54
  40b8df:	(bad)  
  40b8e0:	mov    esi,0x647c0071
  40b8e5:	mov    al,0x88
  40b8e7:	pop    edi
  40b8e8:	cmp    DWORD PTR [ecx],0x76a46b0
  40b8ee:	ins    BYTE PTR es:[edi],dx
  40b8ef:	mov    cl,0xf4
  40b8f1:	sub    ax,bp
  40b8f4:	ds cwde 
  40b8f6:	adc    DWORD PTR [edx-0x6d9e9b1c],ebp
  40b8fc:	jo     0x40b8f0
  40b8fe:	prefetcht2 BYTE PTR [edi-0x2a6e512a]
  40b905:	cli    
  40b906:	inc    ebx
  40b907:	cmp    esi,0x55a58103
  40b90d:	les    edi,FWORD PTR [edx+0x786ff27b]
  40b913:	test   DWORD PTR [ecx-0x49addd23],ecx
  40b919:	fst    st(4)
  40b91b:	mov    ecx,0x5b24a5e8
  40b920:	jge    0x40b90f
  40b922:	cmp    al,0x59
  40b924:	jo     0x40b968
  40b926:	test   eax,0x9d1fea2e
  40b92b:	xchg   edx,eax
  40b92c:	aas    
  40b92d:	lods   eax,DWORD PTR ds:[esi]
  40b92e:	adc    BYTE PTR [edx+0x5cac969b],0xcd
  40b935:	xchg   esp,eax
  40b936:	mov    ds:0x1a53d286,eax
  40b93b:	outs   dx,BYTE PTR ds:[esi]
  40b93c:	(bad)  
  40b93d:	hlt    
  40b93e:	mov    es,WORD PTR [esi]
  40b940:	mov    ebx,0x90f9144e
  40b945:	cmp    BYTE PTR [ebx],dh
  40b947:	push   ss
  40b948:	jne    0x40b991
  40b94a:	popa   
  40b94b:	add    bh,ah
  40b94d:	in     al,0x27
  40b94f:	fstp   QWORD PTR [esi+0x77663c3e]
  40b955:	lods   al,BYTE PTR ds:[esi]
  40b956:	jb     0x40b9ce
  40b958:	sbb    al,0xca
  40b95a:	loop   0x40b90f
  40b95c:	ins    BYTE PTR es:[edi],dx
  40b95d:	fs jns 0x40b8e8
  40b960:	(bad)  
  40b961:	jns    0x40b8f3
  40b963:	movlps QWORD PTR [edi+edx*1+0x6564fe65],xmm0
  40b96b:	(bad)  
  40b96c:	or     DWORD PTR ss:[ebx+0x39f8faaa],0x7d67b955
  40b977:	stc    
  40b978:	repz fbstp TBYTE PTR [eax+0x43]
  40b97c:	stos   DWORD PTR es:[edi],eax
  40b97d:	inc    ebx
  40b97e:	test   BYTE PTR gs:[ebx],0xaa
  40b982:	push   ecx
  40b983:	scas   eax,DWORD PTR es:[edi]
  40b984:	add    DWORD PTR [edi],ebp
  40b986:	sbb    BYTE PTR [eax+0x10],dl
  40b989:	retf   0x1f8b
  40b98c:	mov    cl,0xc2
  40b98e:	and    BYTE PTR [ebx+esi*2-0x4f],ch
  40b992:	fild   QWORD PTR [eax]
  40b994:	mov    eax,0xf5417f32
  40b999:	adc    eax,0x442b4668
  40b99e:	(bad)  
  40b99f:	fistp  DWORD PTR [esi]
  40b9a1:	xor    al,bh
  40b9a3:	sbb    edx,eax
  40b9a5:	or     al,0x36
  40b9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9a8:	sar    edx,cl
  40b9aa:	mov    BYTE PTR [edi+0x68],cl
  40b9ad:	pop    ebp
  40b9ae:	sub    eax,0xa6d27984
  40b9b3:	xchg   ebp,eax
  40b9b4:	test   BYTE PTR [esi-0x31356e2a],dl
  40b9ba:	and    al,0xdf
  40b9bc:	retf   
  40b9bd:	inc    esp
  40b9be:	fild   WORD PTR [ecx+0x39]
  40b9c1:	enter  0x1e4c,0x89
  40b9c5:	mov    edi,0xca7aa341
  40b9ca:	mov    al,0x37
  40b9cc:	inc    esp
  40b9cd:	aad    0xc7
  40b9cf:	lock cdq 
  40b9d1:	push   ss
  40b9d2:	addr16 sti 
  40b9d4:	jne    0x40b9a7
  40b9d6:	jnp    0x40b9f3
  40b9d8:	enter  0x4336,0xec
  40b9dc:	stos   DWORD PTR es:[edi],eax
  40b9dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9de:	fwait
  40b9df:	cmp    al,0x51
  40b9e1:	adc    ch,BYTE PTR [ecx+ebp*1+0x61d11f28]
  40b9e8:	cwde   
  40b9e9:	push   ecx
  40b9ea:	add    eax,0x5b7b4da8
  40b9ef:	mov    edx,0x2ec334d6
  40b9f4:	jnp    0x40ba50
  40b9f6:	mov    dh,0x33
  40b9f8:	xchg   esp,eax
  40b9f9:	add    edi,eax
  40b9fb:	ja     0x40ba28
  40b9fd:	push   es
  40b9fe:	es mov esi,0xc134ac20
  40ba04:	popf   
  40ba05:	inc    ecx
  40ba06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba07:	xor    BYTE PTR [ebx+edx*8-0x67],cl
  40ba0b:	stos   DWORD PTR es:[edi],eax
  40ba0c:	in     eax,dx
  40ba0d:	inc    edi
  40ba0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba0f:	mov    esi,0x6b7cc9a7
  40ba14:	and    bl,dl
  40ba16:	dec    edx
  40ba17:	pop    es
  40ba18:	jle    0x40ba4b
  40ba1a:	add    ax,WORD PTR [ecx-0x2ec0e073]
  40ba21:	push   ebp
  40ba22:	sti    
  40ba23:	call   0x7acb8152
  40ba28:	mov    BYTE PTR [edx],ah
  40ba2a:	mov    bh,0xae
  40ba2c:	cs int 0x4a
  40ba2f:	aas    
  40ba30:	lea    edx,[edx-0x19f0d5ca]
  40ba36:	aas    
  40ba37:	fiadd  DWORD PTR [eax]
  40ba39:	jbe    0x40ba17
  40ba3b:	aaa    
  40ba3c:	stos   DWORD PTR es:[edi],eax
  40ba3d:	push   eax
  40ba3e:	test   BYTE PTR [ebp-0x17d87960],al
  40ba44:	xchg   DWORD PTR [ecx-0x698ef7c7],edx
  40ba4a:	xchg   BYTE PTR [ecx-0x2ca18031],cl
  40ba50:	pop    es
  40ba51:	inc    ebp
  40ba52:	cmp    dl,BYTE PTR [edi+0x6b691ea7]
  40ba58:	add    edi,DWORD PTR [edi+eax*4+0x42]
  40ba5c:	sahf   
  40ba5d:	sub    ecx,esp
  40ba5f:	in     eax,dx
  40ba60:	sub    al,0xa6
  40ba62:	shl    ch,0xd7
  40ba65:	(bad)  
  40ba66:	mov    bh,0x6d
  40ba68:	(bad)  
  40ba6a:	mov    bh,0x6d
  40ba6c:	or     cl,dl
  40ba6e:	cmp    eax,0x9c62d112
  40ba73:	rcl    BYTE PTR [esi],cl
  40ba75:	(bad)  
  40ba77:	add    ch,BYTE PTR [edi-0x69054270]
  40ba7d:	push   ebx
  40ba7e:	adc    BYTE PTR [edi-0xe77d2c6],bh
  40ba84:	sbb    BYTE PTR [ebx+edi*4-0x2],cl
  40ba88:	pcmpgtw mm3,QWORD PTR [edx]
  40ba8b:	stos   DWORD PTR es:[edi],eax
  40ba8c:	push   cs
  40ba8d:	mov    cl,BYTE PTR [esi]
  40ba8f:	enter  0x3359,0xf2
  40ba93:	lods   eax,DWORD PTR ds:[esi]
  40ba94:	jmp    0xdb58:0x9c08e895
  40ba9b:	inc    eax
  40ba9c:	out    0x2e,al
  40ba9e:	and    ah,BYTE PTR ds:[ebp-0x17]
  40baa2:	pop    ebp
  40baa3:	lods   eax,DWORD PTR ds:[esi]
  40baa4:	pop    ecx
  40baa5:	les    ebx,FWORD PTR [edx]
  40baa7:	ins    BYTE PTR es:[edi],dx
  40baa8:	mov    dh,0x85
  40baaa:	fstp   st(3)
  40baac:	shr    cl,cl
  40baae:	dec    edi
  40baaf:	sub    BYTE PTR [ebx+0x71],dl
  40bab2:	push   ss
  40bab3:	lahf   
  40bab4:	stos   BYTE PTR es:[edi],al
  40bab5:	xor    ah,ch
  40bab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bab8:	jo     0x40ba80
  40baba:	mov    eax,ds:0x8224429b
  40babf:	push   ebx
  40bac0:	sbb    dl,cl
  40bac2:	lods   al,BYTE PTR ds:[esi]
  40bac3:	out    dx,al
  40bac4:	and    DWORD PTR [edi+0x14],esi
  40bac7:	test   edi,edi
  40bac9:	inc    ecx
  40baca:	in     eax,dx
  40bacb:	icebp  
  40bacc:	dec    ebx
  40bacd:	cwde   
  40bace:	inc    eax
  40bacf:	sub    DWORD PTR [esi+eiz*1-0x14],0xfffffff0
  40bad4:	mov    DWORD PTR [ebx],edi
  40bad6:	in     eax,dx
  40bad7:	inc    edi
  40bad8:	mov    ebx,DWORD PTR [ebp-0x2210c535]
  40bade:	sti    
  40badf:	xchg   ecx,eax
  40bae0:	mov    ah,0x90
  40bae2:	mov    eax,ds:0xfe35e835
  40bae7:	fadd   st,st(4)
  40bae9:	pop    ecx
  40baea:	mov    al,bl
  40baec:	ss push edi
  40baee:	addr16 pop ss
  40baf0:	lods   al,BYTE PTR ds:[esi]
  40baf1:	sbb    DWORD PTR [edi+eiz*4+0x4c61c148],edi
  40baf8:	mov    ch,0x8c
  40bafa:	leave  
  40bafb:	jmp    FWORD PTR [edx-0x589c331f]
  40bb01:	add    BYTE PTR [ebx-0x75],0xc9
  40bb05:	data16 or al,0x35
  40bb08:	sub    DWORD PTR [esp+ebp*1-0x2c77f5f5],edx
  40bb0f:	mov    ch,0xc2
  40bb11:	mov    BYTE PTR [eax+0x10f5240c],dl
  40bb17:	mov    BYTE PTR [edi-0x15231c38],bh
  40bb1d:	dec    eax
  40bb1e:	xchg   BYTE PTR [eax],cl
  40bb20:	inc    DWORD PTR ds:0x776f4680
  40bb26:	mov    ebx,0x674d6961
  40bb2b:	or     ecx,DWORD PTR [edx+0x42]
  40bb2e:	sub    ebx,DWORD PTR [edi]
  40bb30:	(bad)  
  40bb31:	idiv   ch
  40bb33:	rcr    BYTE PTR [ebx],1
  40bb35:	adc    DWORD PTR [edx-0x4e4a3f71],edi
  40bb3b:	sbb    DWORD PTR [eax+0xb72a082],ebx
  40bb41:	xor    eax,0xff5c9e3b
  40bb46:	js     0x40bb9a
  40bb48:	shl    DWORD PTR ds:0x626731cb,cl
  40bb4e:	xor    bh,BYTE PTR [eax+0x6a223885]
  40bb54:	(bad)  
  40bb55:	ror    BYTE PTR [ecx+0x6a],cl
  40bb58:	ja     0x40bafb
  40bb5a:	std    
  40bb5b:	repz sub bl,ah
  40bb5e:	cld    
  40bb5f:	std    
  40bb60:	not    BYTE PTR [ebp+0x7d]
  40bb63:	jge    0x40bb50
  40bb65:	cwde   
  40bb66:	fiadd  DWORD PTR [eax+0x83cf04e]
  40bb6c:	sti    
  40bb6d:	in     al,0xaa
  40bb6f:	adc    ecx,eax
  40bb71:	fldcw  WORD PTR [edx+0x166959f]
  40bb77:	add    eax,0x88e40de8
  40bb7c:	aaa    
  40bb7d:	pop    ds
  40bb7e:	mov    edx,0x67594889
  40bb83:	sahf   
  40bb84:	xor    al,0xbb
  40bb86:	fld    QWORD PTR [eax]
  40bb88:	int    0x51
  40bb8a:	div    DWORD PTR [ebx+eiz*2-0x3d]
  40bb8e:	pusha  
  40bb8f:	jle    0x40bb90
  40bb91:	sbb    eax,ebx
  40bb93:	ins    BYTE PTR es:[edi],dx
  40bb94:	push   edx
  40bb95:	jmp    0x40bb24
  40bb97:	in     al,0x20
  40bb99:	jge    0x40bbd8
  40bb9b:	into   
  40bb9c:	mov    edi,0x41142a20
  40bba1:	sub    esi,ecx
  40bba3:	fs inc ebx
  40bba5:	ins    DWORD PTR es:[edi],dx
  40bba6:	mov    ch,BYTE PTR [esi+0x49]
  40bba9:	dec    esi
  40bbaa:	mov    ch,0xd
  40bbac:	leave  
  40bbad:	in     eax,0x5e
  40bbaf:	pop    ds
  40bbb0:	popa   
  40bbb1:	xchg   DWORD PTR [ebx-0x6d],edx
  40bbb4:	mov    bl,0xb5
  40bbb6:	imul   ecx,DWORD PTR [ebx-0x71e7a59],0x32
  40bbbd:	sub    BYTE PTR [ecx-0x61],bl
  40bbc0:	sub    eax,0x733aed74
  40bbc5:	(bad)  
  40bbc6:	xchg   esi,eax
  40bbc7:	nop
  40bbc8:	inc    edi
  40bbc9:	mov    cl,0x7e
  40bbcb:	aas    
  40bbcc:	(bad)  
  40bbcd:	or     eax,0x2d44b7cd
  40bbd2:	cld    
  40bbd3:	lods   eax,DWORD PTR ds:[esi]
  40bbd4:	pop    ecx
  40bbd5:	loopne 0x40bc32
  40bbd7:	push   ds
  40bbd8:	inc    esp
  40bbd9:	ins    DWORD PTR es:[edi],dx
  40bbda:	scas   al,BYTE PTR es:[edi]
  40bbdb:	cmp    ecx,DWORD PTR [ecx]
  40bbdd:	lods   al,BYTE PTR ds:[esi]
  40bbde:	xchg   ebp,eax
  40bbdf:	fdiv   DWORD PTR [ebx+0x5618a53]
  40bbe5:	push   esp
  40bbe6:	add    esi,DWORD PTR [ebp+0x72]
  40bbe9:	ds adc ch,ah
  40bbec:	jmp    0xbcba:0x2a68c802
  40bbf3:	call   0x59a0:0x4e1f1f3f
  40bbfa:	fdiv   DWORD PTR [eax+0x43]
  40bbfd:	shr    DWORD PTR [eax],0x0
  40bc00:	jge    0x40bbb8
  40bc02:	retf   0xfd7a
  40bc05:	retf   0xc497
  40bc08:	ret    
  40bc09:	push   ecx
  40bc0a:	inc    ecx
  40bc0b:	dec    edi
  40bc0c:	ins    DWORD PTR es:[edi],dx
  40bc0d:	gs fs xchg esi,eax
  40bc10:	daa    
  40bc11:	mov    ebx,0xb0d5897a
  40bc16:	and    eax,0xd2cb0d01
  40bc1b:	sub    al,0xe9
  40bc1d:	sub    esi,ecx
  40bc1f:	sbb    esp,esi
  40bc21:	inc    eax
  40bc22:	sar    DWORD PTR [edx+0x57],0x28
  40bc26:	pusha  
  40bc27:	and    bl,BYTE PTR [ebp+0x39854931]
  40bc2d:	dec    ecx
  40bc2e:	fild   QWORD PTR [ebp-0x17]
  40bc31:	mov    ds,WORD PTR [ebp-0x7]
  40bc34:	repz sti 
  40bc36:	hlt    
  40bc37:	leave  
  40bc38:	sahf   
  40bc39:	iret   
  40bc3a:	mov    al,ds:0xe7590eab
  40bc3f:	lods   eax,DWORD PTR ds:[esi]
  40bc40:	xchg   esi,eax
  40bc41:	push   0xfffffff7
  40bc43:	push   ss
  40bc44:	inc    ebx
  40bc45:	mov    esp,0x725fcdc9
  40bc4a:	shr    DWORD PTR [ebx+0x7c],1
  40bc4d:	aam    0x5d
  40bc4f:	sar    ecx,cl
  40bc51:	inc    ebx
  40bc52:	(bad)  
  40bc53:	jl     0x40bc91
  40bc55:	popf   
  40bc56:	sbb    esi,DWORD PTR [edx]
  40bc58:	imul   esp,DWORD PTR [edx+0x29],0xacd6db7e
  40bc5f:	sub    cl,BYTE PTR [edi+0x5701a445]
  40bc65:	push   edx
  40bc66:	sbb    DWORD PTR [edi-0x701596ea],0x3f
  40bc6d:	add    BYTE PTR [edx-0x14d7b6d7],bh
  40bc73:	xor    eax,0xa50f902c
  40bc78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc79:	adc    edi,DWORD PTR [ebx]
  40bc7b:	push   ss
  40bc7c:	scas   al,BYTE PTR es:[edi]
  40bc7d:	jmp    0x40bc9a
  40bc7f:	cmp    eax,0xc659f322
  40bc84:	hlt    
  40bc85:	or     al,0x4
  40bc87:	jmp    0x1bd95eed
  40bc8c:	and    BYTE PTR [edi],0xc2
  40bc8f:	mov    ebx,0xe4ee5cb8
  40bc94:	popf   
  40bc95:	mov    fs:0x71a94e7f,eax
  40bc9b:	xor    DWORD PTR ds:0xf36938f4,ecx
  40bca1:	loopne 0x40bc25
  40bca3:	jnp    0x40bc6c
  40bca5:	pop    es
  40bca6:	and    DWORD PTR [ecx*8+0x2b1b27e7],ebp
  40bcad:	xchg   edx,eax
  40bcae:	mov    edx,0x70ba0df7
  40bcb3:	mov    cs,esi
  40bcb5:	pop    ebx
  40bcb6:	mov    ds,WORD PTR [edi]
  40bcb8:	rol    bl,0xeb
  40bcbb:	int    0xd0
  40bcbd:	dec    esp
  40bcbe:	lahf   
  40bcbf:	cli    
  40bcc0:	pop    ebx
  40bcc1:	call   0x43c1740
  40bcc6:	pop    ebx
  40bcc7:	sub    BYTE PTR [esi-0x405f6d12],dh
  40bccd:	mov    bl,0x8c
  40bccf:	jge    0x40bcd3
  40bcd1:	ret    
  40bcd2:	arpl   WORD PTR [edi+eax*4],di
  40bcd5:	xchg   bl,dl
  40bcd7:	and    eax,0xdeee281f
  40bcdc:	push   ds
  40bcdd:	or     eax,0xae7e5c6
  40bce2:	call   FWORD PTR [edi+eiz*1-0x45e9b9c6]
  40bce9:	push   ecx
  40bcea:	pop    esi
  40bceb:	jb     0x40bd25
  40bced:	mov    ecx,fs
  40bcef:	sti    
  40bcf0:	cs xchg ebp,eax
  40bcf2:	ret    
  40bcf3:	iret   
  40bcf4:	mov    al,ds:0x67182a46
  40bcf9:	and    dh,BYTE PTR [eax+esi*4-0x40]
  40bcfd:	sbb    eax,0xd9052baa
  40bd02:	rcl    BYTE PTR [eax],0xf4
  40bd05:	xchg   edx,eax
  40bd06:	test   DWORD PTR [eax],0x37da2396
  40bd0c:	xor    cl,bh
  40bd0e:	pusha  
  40bd0f:	cmp    dl,BYTE PTR ds:0x4551658a
  40bd15:	dec    ebx
  40bd16:	shr    DWORD PTR [ebx+0x36],0x48
  40bd1a:	xlat   BYTE PTR ds:[ebx]
  40bd1b:	addr16 push 0x7f
  40bd1e:	pop    ecx
  40bd1f:	add    al,0xb1
  40bd21:	les    edi,FWORD PTR [ecx]
  40bd23:	add    ebx,esi
  40bd25:	out    0x2f,al
  40bd27:	xor    cl,BYTE PTR ds:0xab7dab08
  40bd2d:	paddsb mm6,QWORD PTR ds:0x2855fc38
  40bd34:	in     eax,0x1e
  40bd36:	std    
  40bd37:	xchg   esp,eax
  40bd38:	push   esi
  40bd39:	jge    0x40bd2f
  40bd3b:	jle    0x40bcf5
  40bd3d:	jle    0x40bd93
  40bd3f:	data16 hlt 
  40bd41:	jmp    0x4f87cef1
  40bd46:	iret   
  40bd47:	scas   eax,DWORD PTR es:[edi]
  40bd48:	ret    0xe132
  40bd4b:	jmp    0xe0b025f3
  40bd50:	pop    esi
  40bd51:	rol    DWORD PTR [ebp+0x523bacad],cl
  40bd57:	cmp    ah,dl
  40bd59:	mov    edi,0xbeade960
  40bd5e:	adc    al,0xc6
  40bd60:	push   ebp
  40bd61:	scas   eax,DWORD PTR es:[edi]
  40bd62:	div    DWORD PTR [ebx+0x79]
  40bd65:	inc    ebx
  40bd66:	aas    
  40bd67:	xchg   ebp,eax
  40bd68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd69:	and    al,0xf0
  40bd6b:	cwde   
  40bd6c:	lea    edx,[edx]
  40bd6e:	fs pop ds
  40bd70:	xor    al,0x2d
  40bd72:	pop    ds
  40bd73:	mov    ebx,0xc01a0126
  40bd78:	sub    eax,0x9d72ee9f
  40bd7d:	jmp    0x40bd48
  40bd7f:	aad    0xe7
  40bd81:	fcomp  DWORD PTR [edx+0x764af170]
  40bd87:	inc    ebx
  40bd88:	jecxz  0x40bd34
  40bd8a:	adc    al,0xfc
  40bd8c:	jge    0x40bd7d
  40bd8e:	push   0x51248b1d
  40bd93:	arpl   WORD PTR [ebx-0x2b0bd9c],sp
  40bd99:	(bad)  
  40bd9a:	scas   eax,DWORD PTR es:[edi]
  40bd9b:	test   ebp,ecx
  40bd9d:	inc    edi
  40bd9e:	lods   eax,DWORD PTR ds:[esi]
  40bd9f:	dec    edx
  40bda0:	adc    DWORD PTR ds:0xd6541b33,esp
  40bda6:	push   esi
  40bda7:	push   edx
  40bda8:	rcl    BYTE PTR [edx],cl
  40bdaa:	mov    eax,0x7dc3cf90
  40bdaf:	bound  esi,QWORD PTR [edx+0x6]
  40bdb2:	fld    TBYTE PTR gs:[eax]
  40bdb5:	in     eax,0x82
  40bdb7:	add    al,0xa9
  40bdb9:	fimul  WORD PTR [ebx]
  40bdbb:	cli    
  40bdbc:	rcl    DWORD PTR [edx+0x65],cl
  40bdbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdc0:	xor    eax,0xc91c10d1
  40bdc5:	ja     0x1c18af5f
  40bdcb:	cld    
  40bdcc:	in     al,dx
  40bdcd:	fdiv   DWORD PTR [edx+esi*2+0x42]
  40bdd1:	jmp    0x40bd6e
  40bdd3:	push   esi
  40bdd4:	xor    al,BYTE PTR [esi]
  40bdd6:	or     edx,esp
  40bdd8:	push   ds
  40bdd9:	dec    ebx
  40bdda:	mov    esp,0x36006d9
  40bddf:	jg     0x40bda0
  40bde1:	jmp    0xbbe2:0xff6c3f19
  40bde8:	and    ebx,edx
  40bdea:	scas   al,BYTE PTR es:[edi]
  40bdeb:	inc    ecx
  40bdec:	mov    ds:0xee20240c,eax
  40bdf1:	fmul   DWORD PTR [esi+edi*8+0x241e483e]
  40bdf8:	or     BYTE PTR [ecx],dh
  40bdfa:	dec    ebp
  40bdfb:	dec    eax
  40bdfc:	dec    esi
  40bdfd:	enter  0xe873,0x5e
  40be01:	cs ret 0xeed9
  40be05:	std    
  40be06:	imul   esp,DWORD PTR [edi+ebp*2],0xd0abe0a3
  40be0d:	out    dx,al
  40be0e:	dec    ebp
  40be0f:	sub    bh,ch
  40be11:	sub    eax,0x228bc967
  40be16:	pop    ds
  40be17:	xchg   ebp,eax
  40be18:	test   BYTE PTR [esi+0x5f],bh
  40be1b:	pop    edi
  40be1c:	jmp    0x40be28
  40be1e:	cmp    BYTE PTR [eax-0x50],al
  40be21:	gs sahf 
  40be23:	mov    ds:0xb1c34c24,al
  40be28:	sbb    eax,0x62c9ac35
  40be2d:	mov    cs,eax
  40be2f:	adc    al,0x1d
  40be31:	shl    BYTE PTR [esi-0x7eaa6fda],0x12
  40be38:	outs   dx,DWORD PTR ds:[esi]
  40be39:	xchg   ecx,eax
  40be3a:	sub    al,0x7
  40be3c:	and    dh,bl
  40be3e:	test   BYTE PTR ds:0xf44e320a,ch
  40be44:	add    eax,edx
  40be46:	sbb    dh,cl
  40be48:	loop   0x40bead
  40be4a:	enter  0x6896,0xb0
  40be4e:	retf   0xdc31
  40be51:	mov    ebp,0x9fec34a5
  40be56:	cmp    cl,BYTE PTR cs:[edi]
  40be59:	mov    edx,0x7140977c
  40be5e:	push   eax
  40be5f:	mov    ds:0xa35a4de,al
  40be64:	into   
  40be65:	test   al,ah
  40be67:	and    DWORD PTR [edx-0x5b13726],esi
  40be6d:	jae    0x40bdf7
  40be6f:	es ins DWORD PTR es:[edi],dx
  40be71:	or     esp,DWORD PTR [esi+0x64]
  40be74:	ja     0x40bedf
  40be76:	aaa    
  40be77:	imul   edx,DWORD PTR [esi-0x3c],0x313676b8
  40be7e:	(bad)  
  40be80:	xlat   BYTE PTR ds:[ebx]
  40be81:	cmp    ch,BYTE PTR [esi+0x2fe354b8]
  40be87:	test   eax,0x119acd52
  40be8c:	ret    0xe4a7
  40be8f:	mov    edi,0xcae575fd
  40be94:	mov    BYTE PTR [esi],bl
  40be96:	push   esi
  40be97:	cmp    DWORD PTR [eax],ecx
  40be99:	xor    al,0x6b
  40be9b:	cmp    ebx,edi
  40be9d:	xchg   esp,eax
  40be9e:	pop    esp
  40be9f:	clc    
  40bea0:	loopne 0x40be62
  40bea2:	call   0x64999ccf
  40bea7:	adc    DWORD PTR [edx-0x1fe114a3],ebx
  40bead:	aas    
  40beae:	push   ds
  40beaf:	xor    dl,BYTE PTR [edi-0x3d6ff5ae]
  40beb5:	in     al,dx
  40beb6:	mov    cl,0x84
  40beb8:	jbe    0x40be74
  40beba:	cmp    edi,DWORD PTR [esi+0x1b]
  40bebd:	mov    ecx,DWORD PTR ds:0xdfb32420
  40bec3:	arpl   WORD PTR [edi+0x2ad26a9d],bx
  40bec9:	adc    DWORD PTR [ecx+eiz*2+0x46],edi
  40becd:	pusha  
  40bece:	gs jl  0x40bf1b
  40bed1:	rol    DWORD PTR [edx],1
  40bed3:	and    ah,BYTE PTR [edi+ebx*8+0x7e]
  40bed7:	or     eax,0x80680228
  40bedc:	ucomiss xmm7,DWORD PTR [ebp-0x47]
  40bee0:	cmp    DWORD PTR [ecx+0x3d],ebp
  40bee3:	test   eax,0x63bae8b1
  40bee8:	nop
  40bee9:	push   edx
  40beea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beeb:	retf   
  40beec:	pop    es
  40beed:	dec    ecx
  40beee:	push   ebp
  40beef:	(bad)  
  40bef0:	ds imul edx,ebx,0x73056331
  40bef7:	loopne 0x40be89
  40bef9:	sbb    DWORD PTR [esi+0x3b],ebp
  40befc:	mov    ds,WORD PTR [edi+0x6ab282f7]
  40bf02:	sub    edx,DWORD PTR [edi+0x376dbcd8]
  40bf08:	and    DWORD PTR [ebx-0xa19692c],ebp
  40bf0e:	jge    0x40be9a
  40bf10:	das    
  40bf11:	rol    DWORD PTR [edi],1
  40bf13:	add    al,0x42
  40bf15:	cmp    al,BYTE PTR [edx+0x7c501f87]
  40bf1b:	dec    ebx
  40bf1c:	pop    ss
  40bf1d:	fadd   QWORD PTR [ebp-0x37]
  40bf20:	mov    bh,0xb1
  40bf22:	je     0x40bf63
  40bf24:	sub    bl,BYTE PTR [esi+0x65]
  40bf27:	cwde   
  40bf28:	cmp    eax,0xf68772b9
  40bf2d:	jbe    0x40bf25
  40bf2f:	je     0x40bf2f
  40bf31:	cmc    
  40bf32:	or     dl,BYTE PTR [ebx-0x447d0433]
  40bf38:	in     al,dx
  40bf39:	sbb    eax,0xda5216ff
  40bf3e:	jle    0x40bf4e
  40bf40:	fidiv  WORD PTR [esi]
  40bf42:	or     al,0x55
  40bf44:	xchg   ah,cl
  40bf46:	jg     0x40bf7a
  40bf48:	mov    al,ds:0x8649aab6
  40bf4d:	or     ebp,ebp
  40bf4f:	sbb    BYTE PTR [ebp-0x4120059c],0xa8
  40bf56:	xor    BYTE PTR [eax+0x295b5d1e],ah
  40bf5c:	mov    ds:0xa6da96da,al
  40bf61:	mov    ecx,0x29d3874a
  40bf66:	sahf   
  40bf67:	ins    DWORD PTR es:[edi],dx
  40bf68:	sub    DWORD PTR [eax+0x2dd79ae2],esi
  40bf6e:	daa    
  40bf6f:	mov    dl,0xdc
  40bf71:	and    BYTE PTR [ecx+0x64],0xa5
  40bf75:	sub    edx,ecx
  40bf77:	cmp    DWORD PTR fs:[edi-0x5c],esi
  40bf7b:	mov    eax,ds:0xe77c122d
  40bf80:	fadd   QWORD PTR [edx]
  40bf82:	lahf   
  40bf83:	pop    ebx
  40bf84:	rcl    DWORD PTR [ecx+0x6],0x58
  40bf88:	out    dx,al
  40bf89:	lods   al,BYTE PTR ds:[esi]
  40bf8a:	inc    esp
  40bf8b:	out    0x5a,eax
  40bf8d:	mov    ch,0x9b
  40bf8f:	lds    ebp,FWORD PTR [edi-0x2516deff]
  40bf95:	mov    bh,0x90
  40bf97:	imul   BYTE PTR [ebx+0xe89bc47]
  40bf9d:	daa    
  40bf9e:	mov    al,0xe0
  40bfa0:	cwde   
  40bfa1:	jae    0x40bfe1
  40bfa3:	sbb    DWORD PTR [esi+eiz*2],0x34
  40bfa7:	lods   eax,DWORD PTR ds:[esi]
  40bfa8:	add    DWORD PTR ss:[edi],0xd
  40bfac:	repnz dec ecx
  40bfae:	adc    dl,BYTE PTR [eax+0x778596d3]
  40bfb4:	dec    esi
  40bfb5:	push   edx
  40bfb6:	lahf   
  40bfb7:	jbe    0x40c020
  40bfb9:	fdiv   st,st(5)
  40bfbb:	push   ebx
  40bfbc:	jecxz  0x40bfae
  40bfbe:	jae    0x40bfeb
  40bfc0:	sbb    edi,DWORD PTR [edi-0x643308ac]
  40bfc6:	cmp    al,0xff
  40bfc8:	and    eax,DWORD PTR [edx+ecx*4]
  40bfcb:	cmp    al,0x12
  40bfcd:	(bad)  
  40bfce:	pop    eax
  40bfcf:	jb     0x40bfce
  40bfd1:	in     eax,dx
  40bfd2:	(bad)  
  40bfd3:	pop    esp
  40bfd4:	arpl   WORD PTR [ecx+0x3c],ax
  40bfd7:	das    
  40bfd8:	jo     0x40bffa
  40bfda:	icebp  
  40bfdb:	leave  
  40bfdc:	xor    BYTE PTR [ecx-0x62],ch
  40bfdf:	jmp    0x2513:0x55e94a5c
  40bfe6:	pop    esp
  40bfe7:	int    0xda
  40bfe9:	xor    eax,ebx
  40bfeb:	js     0x40c016
  40bfed:	add    al,0xfb
  40bfef:	das    
  40bff0:	add    BYTE PTR [edi+0x4b],0x4a
  40bff4:	inc    ebp
  40bff5:	sbb    al,0x53
  40bff7:	push   ebp
  40bff8:	retf   
  40bff9:	cli    
  40bffa:	xor    al,0xbe
  40bffc:	shr    ebx,0x3e
  40bfff:	ret    
  40c000:	mov    dh,0x7d
  40c002:	push   eax
  40c003:	add    ecx,ecx
  40c005:	jns    0x40c020
  40c007:	mov    ah,0xa4
  40c009:	clc    
  40c00a:	fadd   st,st(6)
  40c00c:	sub    DWORD PTR [ecx+ebp*4-0x61141f48],0x52
  40c014:	and    DWORD PTR [esi],0x8f3fec19
  40c01a:	xchg   edx,eax
  40c01b:	aaa    
  40c01c:	pop    ss
  40c01d:	es dec eax
  40c01f:	loopne 0x40c09c
  40c021:	dec    esp
  40c022:	(bad)  
  40c023:	popf   
  40c024:	jle    0x40c094
  40c026:	les    ecx,FWORD PTR ss:[ebx+0x37]
  40c02a:	dec    BYTE PTR [eax+edi*8]
  40c02d:	mov    edi,0xfd51108b
  40c032:	jg     0x40bff1
  40c034:	ins    DWORD PTR es:[edi],dx
  40c035:	or     eax,0xbc7c2c27
  40c03a:	sbb    eax,0x7f2c8172
  40c03f:	pop    ss
  40c040:	ja     0x40c079
  40c042:	retf   0x8501
  40c045:	cwde   
  40c046:	xor    BYTE PTR [edx-0x16],bl
  40c049:	push   ds
  40c04a:	in     al,0xcc
  40c04c:	fidivr DWORD PTR [ebp-0x1a]
  40c04f:	dec    eax
  40c050:	call   0x5287:0x20f7c735
  40c057:	test   BYTE PTR [eax],dl
  40c059:	push   edi
  40c05a:	and    ecx,DWORD PTR [edx]
  40c05c:	mov    WORD PTR [ebp+0x74de0e22],ds
  40c062:	add    esp,DWORD PTR [eax-0x33]
  40c065:	stos   BYTE PTR es:[edi],al
  40c066:	and    eax,0xa10de4ca
  40c06b:	ret    0x758d
  40c06e:	jle    0x40c034
  40c070:	out    dx,eax
  40c071:	in     eax,0xcb
  40c073:	xchg   ebp,eax
  40c074:	out    0x85,eax
  40c076:	push   edx
  40c077:	push   0xea674612
  40c07c:	inc    esp
  40c07d:	cmp    dh,BYTE PTR [esi-0x1229b1f2]
  40c083:	push   ss
  40c084:	sub    BYTE PTR fs:[esi],ah
  40c087:	shl    BYTE PTR [ecx],0x25
  40c08a:	(bad)  
  40c08b:	ins    BYTE PTR es:[edi],dx
  40c08c:	cdq    
  40c08d:	mov    eax,0xebaaa0f7
  40c092:	aaa    
  40c093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c094:	and    al,0x16
  40c096:	je     0x40c07c
  40c098:	les    ebp,FWORD PTR [esi]
  40c09a:	pop    edi
  40c09b:	adc    eax,0x6d329606
  40c0a0:	mov    ecx,0x827c0522
  40c0a5:	xor    DWORD PTR [eax-0x7d],0x88460db4
  40c0ac:	retf   
  40c0ad:	or     dl,cl
  40c0af:	sub    al,0x1b
  40c0b1:	aad    0x14
  40c0b3:	scas   eax,DWORD PTR es:[edi]
  40c0b4:	mov    edx,0xf645795f
  40c0b9:	in     al,0x5b
  40c0bb:	ds dec esi
  40c0bd:	js     0x40c0e1
  40c0bf:	xchg   ebp,eax
  40c0c0:	es push edx
  40c0c2:	sub    DWORD PTR ds:0xa8300eb6,ebx
  40c0c8:	iret   
  40c0c9:	hlt    
  40c0ca:	mov    ds:0xf1d9cce3,al
  40c0cf:	jge    0x40c10f
  40c0d1:	(bad)  
  40c0d2:	jmp    0x40c08b
  40c0d4:	jmp    0x3bfc:0xe974a5fa
  40c0db:	lea    edx,[ecx]
  40c0dd:	xchg   edx,eax
  40c0de:	jns    0x40c0d6
  40c0e0:	icebp  
  40c0e1:	lods   al,BYTE PTR ds:[esi]
  40c0e2:	dec    edi
  40c0e3:	pop    eax
  40c0e4:	ret    
  40c0e5:	inc    ebp
  40c0e6:	fisub  DWORD PTR [eax+0x173ed380]
  40c0ec:	test   ebp,edi
  40c0ee:	(bad)  
  40c0f0:	(bad)  
  40c0f1:	adc    ecx,DWORD PTR [edx-0x36]
  40c0f4:	gs pop ds
  40c0f6:	or     al,0xcc
  40c0f8:	adc    eax,DWORD PTR [esi-0x6fae386c]
  40c0fe:	daa    
  40c0ff:	push   esi
  40c100:	jle    0x40c0bc
  40c102:	pop    ebx
  40c103:	in     al,0xde
  40c105:	add    DWORD PTR [ecx-0x72],ebp
  40c108:	shr    BYTE PTR [ebx+0x2d],1
  40c10b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c10c:	jmp    0xb8377968
  40c111:	into   
  40c112:	mov    eax,ds:0x9aff5bd1
  40c117:	sahf   
  40c118:	nop
  40c119:	sti    
  40c11a:	repz sti 
  40c11c:	sbb    al,0xa4
  40c11e:	jb     0x40c0fc
  40c120:	xchg   edi,eax
  40c122:	push   0xffffffb1
  40c124:	jbe    0x40c0e6
  40c126:	add    ch,bl
  40c128:	jnp    0x40c0b6
  40c12a:	lea    edi,[edx]
  40c12c:	jge    0x40c175
  40c12e:	dec    ebp
  40c12f:	inc    esi
  40c130:	lods   al,BYTE PTR ds:[esi]
  40c131:	jmp    0x40c12a
  40c133:	or     DWORD PTR [esi-0x7a8b0721],edx
  40c139:	pop    ds
  40c13a:	jb     0x40c0c5
  40c13c:	cmp    dl,BYTE PTR [esp+ebx*8]
  40c13f:	or     al,0xe7
  40c141:	aas    
  40c142:	in     al,dx
  40c143:	arpl   WORD PTR [edx-0x50cfb6b],di
  40c149:	pop    edx
  40c14a:	pop    ebp
  40c14b:	xor    al,0x0
  40c14d:	pop    esi
  40c14e:	les    ebp,FWORD PTR [eax+0x19]
  40c151:	out    dx,al
  40c152:	int3   
  40c153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c154:	lods   al,BYTE PTR ds:[esi]
  40c155:	gs dec ebx
  40c157:	retf   0x37ee
  40c15a:	add    bl,dl
  40c15c:	mov    esp,0xba881879
  40c161:	lea    ebx,[ebp+0x1a07edfe]
  40c167:	dec    ebx
  40c168:	dec    eax
  40c169:	test   BYTE PTR [edx-0x23a3c211],dl
  40c16f:	cli    
  40c170:	mov    al,0x63
  40c172:	jo     0x40c140
  40c174:	mov    ah,0xe8
  40c176:	shl    DWORD PTR [ecx-0xd],cl
  40c179:	jp     0x40c15d
  40c17b:	mov    bl,0x33
  40c17d:	add    DWORD PTR [esi+ebx*4+0x729ff2df],0x6b71e02f
  40c188:	jmp    DWORD PTR [eax+0x30]
  40c18b:	js     0x40c160
  40c18d:	inc    edi
  40c18e:	js     0x40c1f8
  40c190:	mov    eax,ds:0xd01fc09a
  40c195:	stc    
  40c196:	jae    0x40c20a
  40c198:	repz adc eax,0xff42fe8b
  40c19e:	xor    al,0xea
  40c1a0:	jge    0x40c1c1
  40c1a2:	(bad)  
  40c1a3:	(bad)  
  40c1a4:	out    0x27,eax
  40c1a6:	scas   eax,DWORD PTR es:[edi]
  40c1a7:	sbb    ecx,DWORD PTR [ebx+0x4fee3b62]
  40c1ad:	mov    bl,0xaf
  40c1af:	pop    eax
  40c1b0:	push   cs
  40c1b1:	jno    0x40c17b
  40c1b3:	ret    
  40c1b4:	and    al,0xd1
  40c1b6:	sbb    BYTE PTR [ecx+ecx*4-0x21eb5046],ah
  40c1bd:	inc    ecx
  40c1be:	pushf  
  40c1bf:	retf   0xa5fd
  40c1c2:	mov    ebp,0x9f10cabe
  40c1c7:	add    ecx,eax
  40c1c9:	xlat   BYTE PTR ds:[ebx]
  40c1ca:	shr    DWORD PTR [ebp+0x465b4075],0x5e
  40c1d1:	imul   eax,DWORD PTR [ebx-0x71],0x68
  40c1d5:	cli    
  40c1d6:	jge    0x40c164
  40c1d8:	idiv   DWORD PTR [edi+edi*1-0x6c2934dd]
  40c1df:	dec    ebp
  40c1e0:	add    al,BYTE PTR [esi-0x43]
  40c1e3:	leave  
  40c1e4:	popf   
  40c1e5:	cmp    DWORD PTR [eax+0x76403a85],ebp
  40c1eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ec:	cmp    al,0x9
  40c1ee:	sar    DWORD PTR [eax-0x4fd7c10c],0xdb
  40c1f5:	sub    eax,0xd54e764c
  40c1fa:	xchg   edx,eax
  40c1fb:	adc    BYTE PTR [edx+0x37],ah
  40c1fe:	int3   
  40c1ff:	ja     0x40c25c
  40c201:	hlt    
  40c202:	cmp    DWORD PTR [ecx],eax
  40c204:	cmp    DWORD PTR [edx-0x76],edx
  40c207:	mov    dh,0x5a
  40c209:	nop
  40c20a:	mov    bl,ah
  40c20c:	fidivr DWORD PTR [eax]
  40c20e:	cwde   
  40c20f:	int3   
  40c210:	scas   eax,DWORD PTR es:[edi]
  40c211:	loop   0x40c20d
  40c213:	stc    
  40c214:	and    edx,0x2f
  40c217:	pop    ecx
  40c218:	mov    al,ds:0x781726ab
  40c21d:	repnz pop ss
  40c21f:	jno    0x40c29a
  40c221:	inc    eax
  40c222:	pop    ebx
  40c223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c224:	cmp    BYTE PTR [ebp+0x774a3a32],dh
  40c22a:	mov    ah,0xb7
  40c22c:	jle    0x40c29d
  40c22e:	mov    al,bh
  40c230:	mov    eax,0x2e456dd9
  40c235:	daa    
  40c236:	or     ebp,eax
  40c238:	into   
  40c239:	icebp  
  40c23a:	xchg   ecx,eax
  40c23b:	mov    esi,0x637bb100
  40c240:	add    ebp,edx
  40c242:	in     eax,0xa3
  40c244:	fidiv  DWORD PTR [eax-0x62]
  40c247:	xchg   ecx,eax
  40c248:	into   
  40c249:	adc    edx,ebx
  40c24b:	out    0x8b,eax
  40c24d:	cmc    
  40c24e:	mov    esp,0xd25da519
  40c253:	and    DWORD PTR [edx+0x6897f489],ebx
  40c259:	les    eax,FWORD PTR [esi-0x5f6df2f2]
  40c25f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c260:	mov    ch,0xe7
  40c262:	xchg   ebp,eax
  40c263:	js     0x40c27d
  40c265:	sbb    al,0x3c
  40c267:	outs   dx,DWORD PTR ds:[esi]
  40c268:	gs (bad) 
  40c26a:	sub    dl,BYTE PTR [edi]
  40c26c:	adc    dh,dl
  40c26e:	je     0x40c250
  40c270:	jno    0x40c2cb
  40c272:	lock push edi
  40c274:	jmp    0x40c2b9
  40c276:	pop    ebp
  40c277:	fwait
  40c278:	mov    DWORD PTR [edx+0x6125e81b],edi
  40c27e:	mov    eax,ds:0x7d7878a9
  40c283:	test   ebx,ebx
  40c285:	in     al,dx
  40c286:	push   edx
  40c287:	ret    
  40c288:	xchg   ecx,eax
  40c289:	stc    
  40c28a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c28b:	aad    0x6
  40c28d:	call   0xfc9523b9
  40c292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c293:	jle    0x40c294
  40c295:	sbb    al,0x25
  40c297:	xchg   DWORD PTR [ecx+ecx*2],ecx
  40c29a:	neg    BYTE PTR [ebx+edx*8+0x5a]
  40c29e:	sub    al,0xe1
  40c2a0:	lea    edi,[edi+0x4]
  40c2a3:	push   esp
  40c2a4:	mov    dl,0x71
  40c2a6:	xchg   edi,eax
  40c2a7:	arpl   WORD PTR [esi+eiz*8+0x4cc1abb8],sp
  40c2ae:	add    esi,DWORD PTR [edx+0x38]
  40c2b1:	fstp   TBYTE PTR [eax+0x390a0a0]
  40c2b7:	jle    0x40c23b
  40c2b9:	ja     0x40c2d2
  40c2bb:	or     BYTE PTR [esi+0xd43d55d],0x1a
  40c2c2:	iret   
  40c2c3:	test   bh,ah
  40c2c5:	dec    esi
  40c2c6:	mov    dl,0xc1
  40c2c8:	push   eax
  40c2c9:	mov    ebx,0xc8694bb4
  40c2ce:	sub    eax,esp
  40c2d0:	pop    eax
  40c2d1:	arpl   WORD PTR [eax-0x67],bp
  40c2d4:	cmp    eax,edx
  40c2d6:	jmp    0xc7af:0x71211c41
  40c2dd:	fsubr  DWORD PTR [eax]
  40c2df:	outs   dx,BYTE PTR ds:[esi]
  40c2e0:	pop    ss
  40c2e1:	aad    0x3c
  40c2e3:	ror    edi,cl
  40c2e5:	sti    
  40c2e6:	xchg   edi,eax
  40c2e7:	addr16 or ebx,0xffffffdc
  40c2eb:	retf   
  40c2ec:	aam    0x42
  40c2ee:	loope  0x40c308
  40c2f0:	test   eax,0x57180f0f
  40c2f5:	xchg   edi,eax
  40c2f6:	mov    edi,0xe907bbfd
  40c2fb:	imul   esp,DWORD PTR [esi+0x49],0x543ac456
  40c302:	or     BYTE PTR [edx],0x3f
  40c305:	cmp    eax,0xe6bde03d
  40c30a:	xchg   edi,eax
  40c30b:	retf   
  40c30c:	xor    bh,dh
  40c30e:	sub    ah,BYTE PTR [ecx+0x3e]
  40c311:	jno    0x40c2ba
  40c313:	scas   eax,DWORD PTR es:[edi]
  40c314:	out    0xb5,al
  40c316:	dec    edi
  40c317:	(bad)  
  40c318:	jmp    0x5860:0x31910de9
  40c31f:	xor    ch,ch
  40c321:	mov    esp,0xc295ec42
  40c326:	cwde   
  40c327:	push   edi
  40c328:	jnp    0x40c352
  40c32a:	push   eax
  40c32b:	or     edx,DWORD PTR [edx+edx*4+0x414db354]
  40c332:	(bad)
  40c336:	jge    0x40c2cd
  40c338:	das    
  40c339:	xor    bl,al
  40c33b:	dec    esp
  40c33c:	sahf   
  40c33d:	cmp    eax,DWORD PTR [ebp+0x67]
  40c340:	inc    ecx
  40c341:	ret    0xa8ab
  40c344:	(bad)  
  40c345:	pop    ebx
  40c346:	xchg   edx,eax
  40c347:	jle    0x40c3a1
  40c349:	les    ebx,FWORD PTR [edi-0x3f]
  40c34c:	jnp    0x40c372
  40c34e:	jl     0x40c37b
  40c350:	js     0x40c34a
  40c352:	sub    eax,0x54b8c4ed
  40c357:	push   ebx
  40c358:	or     edx,DWORD PTR [esp+edx*8]
  40c35b:	push   ecx
  40c35c:	fisub  DWORD PTR [ebp-0x32]
  40c35f:	aaa    
  40c360:	outs   dx,DWORD PTR ds:[esi]
  40c361:	pusha  
  40c362:	shl    DWORD PTR [esi-0x29],cl
  40c365:	enter  0xdff2,0x96
  40c369:	imul   eax,DWORD PTR [ebp-0x73],0x75
  40c36d:	add    eax,0xa443cb4e
  40c372:	sbb    esi,ebx
  40c374:	nop
  40c375:	fistp  DWORD PTR [ebp+eax*8-0x48]
  40c379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c37a:	push   ebp
  40c37b:	xor    dl,BYTE PTR [esi+0x36]
  40c37e:	mov    al,0xa6
  40c380:	mov    esp,0xf123ea87
  40c385:	cmp    edi,DWORD PTR [eax-0x746ab562]
  40c38b:	cld    
  40c38c:	aad    0xc
  40c38e:	mov    edi,?
  40c390:	iret   
  40c391:	in     eax,0x0
  40c393:	aad    0x7a
  40c395:	arpl   ax,dx
  40c397:	mov    edx,0x157dc5d7
  40c39c:	xor    DWORD PTR [edi+0x54],0x25
  40c3a0:	push   ds
  40c3a1:	or     al,0xd5
  40c3a3:	aam    0xde
  40c3a5:	(bad)  
  40c3a6:	mov    ecx,0x5d722c5c
  40c3ab:	cdq    
  40c3ac:	(bad)  [esi]
  40c3ae:	cmp    BYTE PTR [edx+eiz*1+0x10],cl
  40c3b2:	into   
  40c3b3:	aam    0xda
  40c3b5:	int    0x8
  40c3b7:	push   es
  40c3b8:	std    
  40c3b9:	pop    ebp
  40c3ba:	rol    DWORD PTR [edx],cl
  40c3bc:	ret    
  40c3bd:	jmp    0xc466:0x440237cf
  40c3c4:	std    
  40c3c5:	dec    esi
  40c3c6:	mov    ch,0x1c
  40c3c8:	jnp    0x40c356
  40c3ca:	nop
  40c3cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3cc:	inc    ebp
  40c3cd:	jecxz  0x40c36c
  40c3cf:	inc    ebp
  40c3d0:	mov    WORD PTR [ebx+0x3b],ss
  40c3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3d4:	fldcw  WORD PTR [edx+edx*8-0x553bf6c7]
  40c3db:	vaddps xmm3,xmm7,XMMWORD PTR [edi]
  40c3df:	shr    BYTE PTR [ebx+0x13],1
  40c3e2:	xchg   ebx,eax
  40c3e3:	ins    DWORD PTR es:[edi],dx
  40c3e4:	aam    0x9b
  40c3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e7:	add    DWORD PTR [esi-0x55],ebx
  40c3ea:	loopne 0x40c3eb
  40c3ec:	mov    dh,0x13
  40c3ee:	lahf   
  40c3ef:	lahf   
  40c3f0:	add    DWORD PTR [ecx+0x46],esi
  40c3f3:	dec    eax
  40c3f4:	sbb    BYTE PTR [edx+0x54],ah
  40c3f7:	add    ecx,DWORD PTR [ecx]
  40c3f9:	pop    eax
  40c3fa:	lods   eax,DWORD PTR ds:[esi]
  40c3fb:	sahf   
  40c3fc:	xchg   ebx,eax
  40c3fd:	mov    edi,0xe5d533ce
  40c402:	mov    al,0xa2
  40c404:	lods   eax,DWORD PTR cs:[esi]
  40c406:	int3   
  40c407:	les    edx,FWORD PTR [edi+eiz*1-0x19]
  40c40b:	or     ecx,DWORD PTR [edi+0x13641ea4]
  40c411:	mov    DWORD PTR [edi],eax
  40c413:	push   0xffffffd7
  40c415:	sbb    ebx,eax
  40c417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c418:	and    cl,BYTE PTR [esi]
  40c41a:	(bad)  
  40c41c:	inc    esi
  40c41d:	sub    DWORD PTR [ebx-0x4b88500c],0x3c
  40c424:	lahf   
  40c425:	mov    ?,esp
  40c427:	hlt    
  40c428:	pop    ss
  40c429:	in     al,0x7a
  40c42b:	repz mov al,0x25
  40c42e:	addr16 mov edi,0xafdd9bdf
  40c434:	rcr    BYTE PTR [ebp+0x1a5f071c],1
  40c43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c43b:	in     eax,0x32
  40c43d:	sbb    al,0x95
  40c43f:	out    0xda,al
  40c441:	cld    
  40c442:	fsub   QWORD PTR [eax-0x6a061c84]
  40c448:	jmp    0x40c49a
  40c44a:	adc    ah,0xb2
  40c44d:	addr16 mov ch,0x1
  40c450:	lahf   
  40c451:	sub    ecx,DWORD PTR [edx]
  40c453:	hlt    
  40c454:	inc    esi
  40c455:	mov    ds:0xd17ebd4d,eax
  40c45a:	jo     0x40c451
  40c45c:	pushf  
  40c45d:	gs aam 0x32
  40c460:	lods   eax,DWORD PTR ds:[esi]
  40c461:	mov    eax,0xc90d2130
  40c466:	daa    
  40c467:	out    0x9,al
  40c469:	mov    edi,0xa43200a7
  40c46e:	or     al,0x14
  40c470:	scas   al,BYTE PTR es:[edi]
  40c471:	addr16 enter 0x3aea,0xd7
  40c476:	mov    ecx,0x44238be3
  40c47b:	gs (bad) 
  40c47d:	pop    esp
  40c47e:	xor    eax,0x35d2bc3d
  40c483:	(bad)  
  40c484:	lea    edx,[esi+0x6b]
  40c487:	imul   ebx,DWORD PTR [eax+0x66],0x741cdf53
  40c48e:	xlat   BYTE PTR ds:[ebx]
  40c48f:	jg     0x40c467
  40c491:	or     DWORD PTR [ebx-0x7ffe5ee6],eax
  40c497:	gs xchg edx,eax
  40c499:	or     dh,bh
  40c49b:	fild   QWORD PTR [ebp-0x3d9c240f]
  40c4a1:	add    edx,esi
  40c4a3:	add    eax,DWORD PTR [ebp+ebx*8+0x5f]
  40c4a7:	mov    WORD PTR [ebp-0x62],ss
  40c4aa:	hlt    
  40c4ab:	xchg   ebp,eax
  40c4ac:	add    dl,BYTE PTR [ebx]
  40c4ae:	shr    BYTE PTR [edi+0x7bf5fe91],cl
  40c4b4:	pusha  
  40c4b5:	push   ebp
  40c4b6:	fs mov eax,0x26713fac
  40c4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4bd:	and    al,BYTE PTR [esi]
  40c4bf:	(bad)  [ebx+0x48c9591d]
  40c4c5:	outs   dx,BYTE PTR ds:[esi]
  40c4c6:	push   cs
  40c4c7:	jg     0xff960371
  40c4cd:	mov    ecx,0x34f027c8
  40c4d2:	or     al,0x2b
  40c4d4:	cld    
  40c4d5:	test   BYTE PTR [esi],cl
  40c4d7:	sub    al,0xb4
  40c4d9:	adc    al,0x3b
  40c4db:	loope  0x40c4ed
  40c4dd:	mov    DWORD PTR [ecx+0x6b9bddc6],esi
  40c4e3:	loope  0x40c550
  40c4e5:	mov    cl,0xbe
  40c4e7:	add    al,BYTE PTR [ebx+edx*2+0x3c]
  40c4eb:	sub    DWORD PTR [eax+ecx*1+0x34],esi
  40c4ef:	push   es
  40c4f0:	or     BYTE PTR [ebx+0x6ba38d12],dl
  40c4f6:	repz and eax,0x8f91b45
  40c4fc:	or     eax,DWORD PTR [edx]
  40c4fe:	icebp  
  40c4ff:	push   ebx
  40c500:	fidivr WORD PTR [esi+0x125b00c1]
  40c506:	xor    edi,DWORD PTR [eax+0x19]
  40c509:	mov    eax,0xca2fdaad
  40c50e:	outs   dx,DWORD PTR ds:[esi]
  40c50f:	and    BYTE PTR [ebx+eax*8+0x493996a4],ah
  40c516:	stc    
  40c517:	jg     0x40c4b2
  40c519:	aam    0x8e
  40c51b:	fisub  DWORD PTR [eax+ecx*4+0x3b7693e1]
  40c522:	jno    0x40c4f4
  40c524:	repnz mov ch,0x17
  40c527:	ds pop edx
  40c529:	out    0x0,eax
  40c52b:	dec    ecx
  40c52c:	push   ebp
  40c52d:	push   ebx
  40c52e:	mov    al,ds:0x62187943
  40c533:	lea    ebx,[eax]
  40c535:	push   ss
  40c536:	mov    ebp,0x6271db49
  40c53b:	xor    DWORD PTR [eax+esi*1-0x7e06be02],eax
  40c542:	fisubr DWORD PTR [ebx+0x74ca1b45]
  40c548:	fstp   DWORD PTR [ebp-0x3d62a7ba]
  40c54e:	or     al,0x95
  40c550:	sbb    ch,BYTE PTR [ecx+0x79]
  40c553:	mov    DWORD PTR [edi+ecx*2+0x15],esp
  40c557:	dec    esi
  40c558:	push   es
  40c559:	ja     0x40c52c
  40c55b:	pop    ds
  40c55c:	dec    ecx
  40c55d:	imul   ebx,DWORD PTR [edx+eiz*4+0x550a767],0x36e5e90c
  40c568:	jle    0x40c5d8
  40c56a:	ret    
  40c56b:	inc    ebx
  40c56c:	mov    cl,BYTE PTR [edx+0xaad0e68]
  40c572:	shl    BYTE PTR [ebx+eax*8+0x2e0f99ed],0xbc
  40c57a:	mov    edx,0x61e8c3df
  40c57f:	cmp    BYTE PTR [esi],0x35
  40c582:	xor    bh,bl
  40c584:	adc    BYTE PTR [edi+0x7a586886],dl
  40c58a:	xchg   edi,eax
  40c58b:	test   cl,al
  40c58d:	ret    
  40c58e:	pushf  
  40c58f:	cwde   
  40c590:	call   0x7288:0x76a0a675
  40c597:	inc    esi
  40c598:	addr16 hlt 
  40c59a:	mov    dl,0xa6
  40c59c:	jno    0x40c5ad
  40c59e:	fwait
  40c59f:	adc    al,0xe5
  40c5a1:	sbb    cl,dl
  40c5a3:	rol    BYTE PTR [eax+0x4c5b4c4f],0x1e
  40c5aa:	icebp  
  40c5ab:	out    dx,eax
  40c5ac:	mov    ds:0x400c0189,eax
  40c5b1:	clc    
  40c5b2:	out    0xae,eax
  40c5b4:	lods   al,BYTE PTR ds:[esi]
  40c5b5:	lock arpl WORD PTR [edx+0x2b],si
  40c5b9:	mov    eax,0xf1efc02e
  40c5be:	icebp  
  40c5bf:	cs in  eax,dx
  40c5c1:	push   ebp
  40c5c2:	pop    esi
  40c5c3:	pushf  
  40c5c4:	sbb    ebx,ebx
  40c5c6:	pop    es
  40c5c7:	outs   dx,BYTE PTR ds:[esi]
  40c5c8:	or     BYTE PTR ds:0xeb53e0b1,ah
  40c5ce:	mov    BYTE PTR [esi-0x32552da7],ch
  40c5d4:	xchg   esi,eax
  40c5d5:	push   edi
  40c5d6:	xchg   esp,eax
  40c5d7:	es adc al,0x88
  40c5da:	xchg   esi,eax
  40c5db:	xor    eax,DWORD PTR [esi+esi*4+0x0]
  40c5df:	jmp    0x32e074d2
  40c5e4:	pop    ecx
  40c5e5:	add    al,0xc1
  40c5e7:	push   esi
  40c5e8:	jge    0x40c576
  40c5ea:	pop    eax
  40c5eb:	(bad)  
  40c5ec:	sar    DWORD PTR ds:0x766155e6,cl
  40c5f2:	lods   eax,DWORD PTR ds:[esi]
  40c5f3:	mov    bl,0x8c
  40c5f5:	inc    al
  40c5f7:	retf   0xeaf
  40c5fa:	cmp    BYTE PTR [ebp-0x42],0x35
  40c5fe:	loope  0x40c5a3
  40c600:	jmp    0x2e2ea319
  40c605:	dec    esi
  40c606:	jns    0x40c655
  40c608:	aas    
  40c609:	int3   
  40c60a:	ror    eax,0xe8
  40c60d:	sbb    al,0xe9
  40c60f:	scas   al,BYTE PTR es:[edi]
  40c610:	lock cmp DWORD PTR [esp],ebx
  40c614:	inc    edx
  40c615:	aaa    
  40c616:	jno    0x40c601
  40c618:	sti    
  40c619:	out    0x5a,al
  40c61b:	sub    esp,DWORD PTR [esi+0x7]
  40c61e:	xor    esp,DWORD PTR [esi+0x1a]
  40c621:	gs int 0xcd
  40c624:	jbe    0x40c605
  40c626:	icebp  
  40c627:	add    BYTE PTR [ebp-0x8cddd3f],ah
  40c62d:	jo     0x40c609
  40c62f:	xchg   ebp,eax
  40c630:	or     bh,ch
  40c632:	lea    edi,[eax-0x7b723ecd]
  40c638:	cmp    al,al
  40c63a:	in     eax,0x64
  40c63c:	add    BYTE PTR [ebx-0x6ccf383],cl
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	jnp    0x40ccae
  40cc3f:	imul   edx,DWORD PTR [ecx+0x7a7ae5f8],0x1
  40cc46:	pop    edi
  40cc47:	jp     0x40ccc3
  40cc49:	xor    al,0x42
  40cc4b:	mov    esi,0x30a23fdc
  40cc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc51:	fadd   DWORD PTR ds:0xbf37c407
  40cc57:	pop    esi
  40cc58:	call   0x7bf5:0xfabc55c7
  40cc5f:	jmp    ecx
  40cc61:	cmp    BYTE PTR [ebx+ebp*8+0x1e],ah
  40cc65:	aas    
  40cc66:	pop    es
  40cc67:	push   esp
  40cc68:	retf   0x1157
  40cc6b:	(bad)  
  40cc6c:	mov    ds:0xbda506f3,al
  40cc71:	xchg   ebx,eax
  40cc72:	aas    
  40cc73:	xchg   esp,eax
  40cc74:	rcl    DWORD PTR [eax+esi*8+0x3ceda5fa],1
  40cc7b:	lods   eax,DWORD PTR ds:[esi]
  40cc7c:	fadd   QWORD PTR [edx]
  40cc7e:	push   edx
  40cc7f:	pop    es
  40cc80:	mov    bl,0x91
  40cc82:	dec    ebx
  40cc83:	aas    
  40cc84:	loopne 0x40cd01
  40cc86:	stc    
  40cc87:	outs   dx,BYTE PTR ds:[esi]
  40cc89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc8a:	jns    0x40cc95
  40cc8c:	(bad)  [eax+0x78]
  40cc8f:	outs   dx,BYTE PTR ds:[esi]
  40cc90:	shr    BYTE PTR [edi+0xa],1
  40cc93:	mov    ah,0xaa
  40cc95:	ins    DWORD PTR es:[edi],dx
  40cc96:	cli    
  40cc97:	shl    bl,0xf7
  40cc9a:	js     0x40cc71
  40cc9c:	pop    ds
  40cc9d:	add    al,0xfc
  40cc9f:	loope  0x40cc28
  40cca1:	lods   eax,DWORD PTR ds:[esi]
  40cca2:	test   eax,0x1a08ae2b
  40cca7:	mov    esi,0xe540b02e
  40ccac:	cmp    ebp,DWORD PTR [edx+esi*4+0x170f6772]
  40ccb3:	mov    eax,0xd864c1ae
  40ccb8:	lods   eax,DWORD PTR ds:[esi]
  40ccb9:	jae    0x40ccde
  40ccbb:	jl     0x40ccb2
  40ccbd:	adc    eax,0xd02eae0c
  40ccc2:	pop    esi
  40ccc3:	retf   
  40ccc4:	adc    eax,0x70b94a7d
  40ccc9:	je     0x40cd11
  40cccb:	mov    ebp,esi
  40cccd:	mov    ds:0x597b4d0e,al
  40ccd2:	dec    edx
  40ccd3:	stos   DWORD PTR es:[edi],eax
  40ccd4:	and    DWORD PTR [eax+0x780153e5],ebx
  40ccda:	cmp    esi,DWORD PTR [ebp+0x1c682a85]
  40cce0:	xor    dl,0x3c
  40cce3:	inc    ebx
  40cce4:	ficom  WORD PTR [esi]
  40cce6:	fadd   QWORD PTR [eax]
  40cce8:	or     DWORD PTR [ebp-0x5e2c54fe],ebp
  40ccee:	xchg   esi,eax
  40ccef:	mov    esi,0x47d4d692
  40ccf4:	and    ah,BYTE PTR [esp+ebx*4+0x14a8e6fc]
  40ccfb:	jecxz  0x40cd64
  40ccfd:	cmp    BYTE PTR [edx],bl
  40ccff:	cmp    edx,DWORD PTR [esi+esi*8+0x504ed7fb]
  40cd06:	loope  0x40ccc8
  40cd08:	dec    eax
  40cd09:	and    esp,DWORD PTR [edx+ecx*4-0x4f581e62]
  40cd10:	jne    0x40cd33
  40cd12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd13:	dec    ebp
  40cd14:	pop    eax
  40cd15:	mov    ch,0xaf
  40cd17:	pop    ebp
  40cd18:	adc    DWORD PTR [edx+0x13],ebp
  40cd1b:	adc    al,0xc8
  40cd1d:	in     al,dx
  40cd1e:	fnsave [edi-0x4]
  40cd21:	mov    edi,0xd7e0896b
  40cd26:	push   cs
  40cd27:	jno    0x40cd95
  40cd29:	jp     0x40cd0b
  40cd2b:	scas   al,BYTE PTR es:[edi]
  40cd2c:	mov    ds:0xdc96ab29,al
  40cd31:	jo     0x40cd7e
  40cd33:	push   edx
  40cd34:	mov    al,0x8c
  40cd36:	cmp    BYTE PTR [ecx],0x45
  40cd39:	xchg   ebx,eax
  40cd3a:	dec    esp
  40cd3b:	in     eax,0x82
  40cd3d:	aad    0xd
  40cd3f:	mov    ecx,0x846cd9c2
  40cd44:	and    eax,0x9e2cb0
  40cd49:	popa   
  40cd4a:	or     eax,0x3ae5a307
  40cd4f:	int3   
  40cd50:	mov    ebp,0x1212de68
  40cd55:	add    esi,DWORD PTR [ebx+0x28218ec0]
  40cd5b:	ins    DWORD PTR es:[edi],dx
  40cd5c:	outs   dx,DWORD PTR ds:[esi]
  40cd5d:	lea    esp,[edx+eax*8+0x17]
  40cd61:	popf   
  40cd62:	stc    
  40cd63:	test   al,0xc2
  40cd65:	(bad)  
  40cd66:	(bad)  
  40cd67:	aaa    
  40cd68:	scas   al,BYTE PTR es:[edi]
  40cd69:	outs   dx,DWORD PTR ds:[esi]
  40cd6a:	out    0x55,al
  40cd6c:	inc    ebx
  40cd6d:	push   ss
  40cd6e:	ror    DWORD PTR [esi+0x3a12c5c],cl
  40cd74:	and    al,0x5e
  40cd77:	mov    ebp,0xcdcce69
  40cd7c:	and    eax,0x4008ff45
  40cd81:	ret    
  40cd82:	add    al,0xf4
  40cd84:	popa   
  40cd85:	jnp    0x40cdee
  40cd87:	popf   
  40cd88:	and    eax,esp
  40cd8a:	sub    eax,0xa7a668ab
  40cd8f:	aad    0xf1
  40cd91:	ss inc ebp
  40cd93:	jo     0x40cda2
  40cd95:	cmc    
  40cd96:	or     BYTE PTR [edi+0x6b],dl
  40cd99:	addr16 mov edi,0x8643a66f
  40cd9f:	add    eax,0xbd6c6b37
  40cda4:	in     al,0xbc
  40cda6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cda7:	aam    0xe0
  40cda9:	rol    DWORD PTR [ecx+edx*1],1
  40cdac:	rol    DWORD PTR [eax-0x29],1
  40cdaf:	aam    0x59
  40cdb1:	adc    al,ah
  40cdb3:	push   edi
  40cdb4:	in     al,dx
  40cdb5:	out    dx,al
  40cdb6:	sti    
  40cdb7:	push   edi
  40cdb8:	sbb    cl,BYTE PTR [ecx]
  40cdba:	jl     0x40cdbf
  40cdbc:	jl     0x40cd86
  40cdbe:	pop    ecx
  40cdbf:	bound  esi,QWORD PTR [esp+ebp*4+0x32]
  40cdc3:	test   al,0xcd
  40cdc5:	cli    
  40cdc6:	mov    ecx,DWORD PTR ds:0xcdf5ec99
  40cdcc:	ss push ss
  40cdce:	out    dx,al
  40cdcf:	fnsave [eax-0x7d]
  40cdd2:	pop    edx
  40cdd3:	out    dx,eax
  40cdd4:	push   edx
  40cdd5:	in     eax,dx
  40cdd6:	fidiv  DWORD PTR [ecx-0x54]
  40cdd9:	pop    es
  40cdda:	in     eax,0x74
  40cddc:	or     BYTE PTR [ebp+eiz*2-0x50740352],dh
  40cde3:	arpl   WORD PTR [edi-0x68],di
  40cde6:	jl     0x40ce5d
  40cde8:	or     ah,bh
  40cdea:	pushf  
  40cdeb:	sub    DWORD PTR [esi-0x7],esi
  40cdee:	aad    0xe
  40cdf0:	ror    BYTE PTR [esi-0x1b],1
  40cdf3:	inc    edi
  40cdf4:	rcl    BYTE PTR [ebp-0x54],cl
  40cdf7:	xlat   BYTE PTR ds:[ebx]
  40cdf8:	or     DWORD PTR [edx],0x1fedc958
  40cdfe:	lahf   
  40cdff:	mov    esp,?
  40ce01:	mov    WORD PTR [ebp-0x4c],es
  40ce04:	ds jp  0x40cdd2
  40ce07:	pusha  
  40ce08:	jno    0x40ce6f
  40ce0a:	add    al,0x4f
  40ce0c:	push   edi
  40ce0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce0e:	inc    ebx
  40ce0f:	(bad)  
  40ce10:	cmp    edi,DWORD PTR [esi-0x7d]
  40ce13:	adc    al,0x7f
  40ce15:	jle    0x40cda3
  40ce17:	xchg   DWORD PTR [esi+0x29],edi
  40ce1a:	cmp    eax,0xbea38027
  40ce1f:	push   ds
  40ce20:	outs   dx,DWORD PTR ds:[esi]
  40ce21:	fs push ebx
  40ce23:	add    DWORD PTR [edx-0x881c94e],ebp
  40ce29:	test   eax,0xf615099
  40ce2e:	and    BYTE PTR [eax+0x3c],ah
  40ce31:	cmp    DWORD PTR [eax+ebp*2+0x25],edi
  40ce35:	fldenv [ebp+0x1539656b]
  40ce3b:	inc    edi
  40ce3c:	sub    ah,BYTE PTR [ebx+0x4d]
  40ce3f:	sbb    eax,0x2c726a18
  40ce44:	jmp    0xdd50:0x50e22e74
  40ce4b:	loope  0x40ce43
  40ce4d:	sar    DWORD PTR [ebx+0x1eae4ec2],0x22
  40ce54:	cmp    ebx,edx
  40ce56:	pusha  
  40ce57:	jge    0x40ce0e
  40ce59:	das    
  40ce5a:	xchg   ebx,eax
  40ce5b:	sti    
  40ce5c:	mov    ebp,DWORD PTR [eax+ebx*2]
  40ce5f:	ins    DWORD PTR es:[edi],dx
  40ce60:	(bad)  
  40ce62:	ror    DWORD PTR [edi-0x42],0xa7
  40ce66:	js     0x40ce33
  40ce68:	inc    esi
  40ce69:	icebp  
  40ce6a:	(bad)  
  40ce6c:	out    dx,eax
  40ce6d:	mov    ch,0x43
  40ce6f:	xor    edi,DWORD PTR [ebx-0x14]
  40ce72:	outs   dx,DWORD PTR ds:[esi]
  40ce73:	int3   
  40ce74:	test   eax,0x3d19aa9d
  40ce79:	das    
  40ce7a:	retf   
  40ce7b:	loope  0x40ce10
  40ce7d:	push   ds
  40ce7e:	sbb    BYTE PTR [edx+0x4d869fee],dl
  40ce84:	and    esi,ecx
  40ce86:	cdq    
  40ce87:	mov    edi,DWORD PTR [ebx-0x203996c9]
  40ce8d:	jmp    0x40ce53
  40ce8f:	jge    0x40ce8c
  40ce91:	bound  ebp,QWORD PTR [ecx]
  40ce93:	out    0x78,eax
  40ce95:	mov    ebx,0x6b015091
  40ce9a:	cmp    ebp,edx
  40ce9c:	retf   0x4467
  40ce9f:	int3   
  40cea0:	or     ecx,DWORD PTR [ecx]
  40cea2:	fcmovu st,st(5)
  40cea4:	cs or  eax,0x13b34b68
  40ceaa:	test   eax,0xe01826c7
  40ceaf:	imul   ebx,ebp,0x54
  40ceb2:	adc    dl,BYTE PTR [esp+edi*8+0x1c]
  40ceb6:	repz and eax,0xbae7383f
  40cebc:	cli    
  40cebd:	movntq QWORD PTR [ebx-0x5929d523],mm7
  40cec4:	fnsave [edx+0x4a261473]
  40ceca:	sub    dl,ah
  40cecc:	xor    DWORD PTR [edx+esi*1+0x6793e15f],ecx
  40ced3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ced4:	pop    eax
  40ced5:	gs push ecx
  40ced7:	les    ebx,FWORD PTR [ebx-0x4243875]
  40cedd:	stos   BYTE PTR es:[edi],al
  40cede:	push   0x1c
  40cee0:	dec    ebp
  40cee1:	and    esi,DWORD PTR [edx-0x7f]
  40cee4:	mov    ebp,0xe833cffa
  40cee9:	dec    esi
  40ceea:	pmuludq mm7,mm1
  40ceed:	icebp  
  40ceee:	and    DWORD PTR fs:[ebp*4-0x7bcdfa4c],0x47
  40cef7:	pop    ecx
  40cef8:	sub    eax,0xa7fc1579
  40cefd:	xor    al,0xb9
  40ceff:	xor    ecx,ebx
  40cf01:	sbb    al,0xdd
  40cf03:	and    ah,bh
  40cf05:	dec    esp
  40cf06:	sbb    al,0x94
  40cf08:	(bad)  
  40cf09:	cld    
  40cf0a:	call   0xd436147a
  40cf0f:	dec    BYTE PTR [ecx+0x767ae6a7]
  40cf15:	jg     0x40cf5d
  40cf17:	lods   eax,DWORD PTR ds:[esi]
  40cf18:	ins    BYTE PTR es:[edi],dx
  40cf19:	imul   ebp,eax,0x725c588e
  40cf1f:	sub    edi,DWORD PTR ds:[ebx-0x6769d60d]
  40cf26:	das    
  40cf27:	cli    
  40cf28:	lods   eax,DWORD PTR ds:[esi]
  40cf29:	gs mov eax,0x1336fb52
  40cf2f:	cmp    DWORD PTR [ecx],edx
  40cf31:	mov    ds:0xddb25de4,al
  40cf36:	add    al,0x3
  40cf38:	sbb    DWORD PTR [edx+0x46],edi
  40cf3b:	repz sbb al,0xd8
  40cf3e:	push   edi
  40cf3f:	es sahf 
  40cf41:	xchg   ecx,eax
  40cf42:	jne    0x40cefd
  40cf44:	push   edx
  40cf45:	sbb    al,0x59
  40cf47:	mov    al,ds:0x6b1ee3fc
  40cf4c:	addr16 sbb al,0x9
  40cf4f:	(bad)  
  40cf50:	jae    0x40ced3
  40cf52:	push   edi
  40cf53:	lods   al,BYTE PTR ds:[esi]
  40cf54:	(bad)  
  40cf55:	test   cl,0x67
  40cf58:	call   0x4509:0xd5106ac4
  40cf5f:	sbb    eax,0x9fb4a700
  40cf64:	lock pop es
  40cf66:	shl    DWORD PTR [esi],cl
  40cf68:	add    BYTE PTR [edi-0x40c29fe3],dl
  40cf6e:	gs (bad) 
  40cf70:	(bad)  
  40cf71:	mov    bh,0xb7
  40cf73:	xor    DWORD PTR [ebp-0x7c5c6930],ecx
  40cf79:	mov    eax,0xaaa342a5
  40cf7e:	jo     0x40cf47
  40cf80:	stos   BYTE PTR es:[edi],al
  40cf81:	add    edx,eax
  40cf83:	mov    WORD PTR [ebp+0xd],fs
  40cf86:	fimul  WORD PTR [ecx+0x40]
  40cf89:	mov    bh,0xbf
  40cf8b:	inc    esi
  40cf8c:	imul   esi,edx,0x1f
  40cf8f:	pop    ds
  40cf90:	and    BYTE PTR [eax+0x14629d9b],0xb5
  40cf97:	adc    DWORD PTR [esi+eax*8+0x6d],0xa868c090
  40cf9f:	arpl   WORD PTR [edi],bp
  40cfa1:	leave  
  40cfa2:	xor    esp,0x997eabea
  40cfa8:	push   esp
  40cfa9:	stc    
  40cfaa:	in     al,0xb1
  40cfac:	add    eax,0xf8f8c12e
  40cfb1:	lods   eax,DWORD PTR ds:[esi]
  40cfb2:	xchg   ebp,ecx
  40cfb4:	mov    bh,0x9
  40cfb6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40cfb8:	lds    ebx,FWORD PTR [esi-0x6d229692]
  40cfbe:	or     DWORD PTR [ecx],0x58
  40cfc1:	mov    ah,0x1e
  40cfc3:	jb     0x40cf8a
  40cfc5:	ret    0xde17
  40cfc8:	outs   dx,BYTE PTR ds:[esi]
  40cfc9:	inc    esi
  40cfca:	arpl   WORD PTR [eax],bp
  40cfcc:	ret    0x7a01
  40cfcf:	sar    ebp,1
  40cfd1:	xor    al,0x55
  40cfd3:	add    edx,DWORD PTR [ecx-0x27]
  40cfd6:	sbb    al,0xe6
  40cfd8:	jb     0x40cfa8
  40cfda:	popa   
  40cfdb:	pop    ebp
  40cfdc:	dec    ebp
  40cfdd:	mov    edx,0x1c67305c
  40cfe2:	out    0xdf,al
  40cfe4:	cmp    eax,0x33fcaa1b
  40cfe9:	inc    ecx
  40cfea:	xchg   ebp,eax
  40cfeb:	test   al,0x5a
  40cfed:	add    bh,BYTE PTR [ebx]
  40cfef:	das    
  40cff0:	ss pop eax
  40cff2:	mov    esp,0xf9b76181
  40cff7:	jbe    0x40d047
  40cff9:	hlt    
  40cffa:	and    bh,al
  40cffc:	clc    
  40cffd:	mov    ebx,0x2e3b64a6
  40d002:	shl    BYTE PTR [edx+0x1bb8c6fb],0x89
  40d009:	push   0x6ca21649
  40d00e:	dec    edx
  40d00f:	in     al,0xb3
  40d011:	mov    cl,0x26
  40d013:	enter  0x490f,0x9c
  40d017:	jmp    0x40d031
  40d019:	adc    bl,BYTE PTR [esp+eax*8+0x6f]
  40d01d:	add    al,0x3
  40d01f:	retf   0xdf18
  40d022:	stos   BYTE PTR es:[edi],al
  40d023:	std    
  40d024:	fild   QWORD PTR [eax+0x7]
  40d027:	js     0x40d06c
  40d029:	gs stc 
  40d02b:	mov    cl,0xdd
  40d02d:	sbb    al,0x8a
  40d02f:	xor    ecx,DWORD PTR [eax]
  40d031:	mov    dh,BYTE PTR [edi-0x2fb8d5fd]
  40d037:	dec    ecx
  40d038:	repz dec eax
  40d03a:	lds    esp,FWORD PTR [eax]
  40d03c:	cwde   
  40d03d:	jnp    0x40d08d
  40d03f:	push   esp
  40d040:	or     DWORD PTR [esp+ebx*2+0x18],eax
  40d044:	ret    0x2d49
  40d047:	cmc    
  40d048:	imul   ebp,DWORD PTR [edi],0x55
  40d04b:	push   0xffffffe4
  40d04d:	outs   dx,BYTE PTR ds:[esi]
  40d04e:	mov    ds:0x303ab08b,al
  40d053:	add    DWORD PTR [ebp-0x3e0094c1],ecx
  40d059:	pop    ss
  40d05a:	int3   
  40d05b:	sbb    eax,esp
  40d05d:	sbb    al,0xd3
  40d05f:	idiv   DWORD PTR [ebx+0x7b]
  40d062:	rcr    DWORD PTR [ebx+0x7d61ec92],0x1c
  40d069:	dec    eax
  40d06a:	adc    al,0xcb
  40d06c:	push   ecx
  40d06d:	loop   0x40d0bf
  40d06f:	jo     0x40d0ee
  40d071:	stc    
  40d072:	ins    BYTE PTR es:[edi],dx
  40d073:	jg     0x40d0e6
  40d075:	or     al,0x69
  40d077:	adc    al,0xd5
  40d079:	mov    WORD PTR [ecx],cs
  40d07b:	out    dx,eax
  40d07c:	inc    edi
  40d07d:	outs   dx,BYTE PTR ds:[esi]
  40d07e:	outs   dx,DWORD PTR ds:[esi]
  40d07f:	cwde   
  40d080:	mov    al,ds:0x350721b
  40d085:	mov    WORD PTR [ecx-0x60],?
  40d088:	ds cmp al,0x42
  40d08b:	xchg   edi,eax
  40d08c:	stos   BYTE PTR es:[edi],al
  40d08d:	xlat   BYTE PTR ds:[ebx]
  40d08e:	cwde   
  40d08f:	loop   0x40d061
  40d091:	sti    
  40d092:	pop    ecx
  40d093:	xchg   ch,dh
  40d095:	pushf  
  40d096:	jmp    0x8efe024
  40d09b:	out    dx,al
  40d09c:	pop    eax
  40d09d:	mov    bl,0x24
  40d09f:	je     0x40d048
  40d0a1:	mov    es,ebp
  40d0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0a4:	call   0x15fc3239
  40d0a9:	ret    
  40d0aa:	xor    al,0xbf
  40d0ac:	xchg   DWORD PTR [ebp-0x111ced71],edx
  40d0b2:	push   es
  40d0b3:	out    dx,eax
  40d0b4:	jg     0x40d09a
  40d0b6:	rcr    DWORD PTR [ebp+0x37],1
  40d0b9:	dec    ebp
  40d0ba:	and    DWORD PTR ss:[edi],ecx
  40d0bd:	mov    dh,0xe0
  40d0bf:	push   ss
  40d0c0:	mov    ds:0x8b95ffdc,al
  40d0c5:	psrlq  mm5,QWORD PTR [esp+ebp*4+0x5e]
  40d0ca:	lahf   
  40d0cb:	adc    DWORD PTR [esi-0x1c],eax
  40d0ce:	pop    ss
  40d0cf:	cli    
  40d0d0:	in     eax,0x85
  40d0d2:	in     al,dx
  40d0d3:	pop    esp
  40d0d4:	sbb    al,0xc6
  40d0d6:	lods   al,BYTE PTR ds:[esi]
  40d0d7:	cmp    al,0x2b
  40d0d9:	fst    st(5)
  40d0db:	or     eax,0x5b58b799
  40d0e0:	imul   eax,eax,0x81f45a69
  40d0e6:	mov    al,ds:0xf81fff46
  40d0eb:	mov    al,0x7
  40d0ed:	jle    0x40d0d3
  40d0ef:	ret    0x4535
  40d0f2:	loopne 0x40d12c
  40d0f4:	inc    esp
  40d0f5:	mov    cl,0x40
  40d0f7:	pusha  
  40d0f8:	stos   BYTE PTR es:[edi],al
  40d0f9:	adc    ecx,DWORD PTR [ebp+0x1fba3424]
  40d0ff:	adc    cl,BYTE PTR [esi]
  40d101:	xor    bl,bl
  40d103:	in     eax,0x1e
  40d105:	hlt    
  40d106:	fild   QWORD PTR [ecx]
  40d108:	stos   DWORD PTR es:[edi],eax
  40d109:	and    DWORD PTR [eax+0x41],ebx
  40d10c:	xchg   ebx,eax
  40d10d:	fcom   st(3)
  40d10f:	rcr    BYTE PTR [ecx+0x3fc05938],cl
  40d115:	push   cs
  40d116:	mov    eax,gs
  40d118:	sbb    eax,0x60ede6d4
  40d11d:	inc    eax
  40d11e:	cmp    BYTE PTR [edi+0x30b98cc5],dh
  40d124:	jo     0x40d19b
  40d126:	inc    esi
  40d127:	dec    edi
  40d128:	ja     0x40d101
  40d12a:	push   0x578a74c0
  40d12f:	or     esi,edx
  40d131:	and    ebp,edx
  40d133:	cmp    BYTE PTR [ebx-0xe],0x80
  40d137:	inc    eax
  40d138:	aaa    
  40d139:	cmp    al,0xb2
  40d13b:	mov    dh,0x79
  40d13d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40d13f:	sub    edi,DWORD PTR [edi]
  40d141:	xchg   DWORD PTR ds:0xf79300c7,eax
  40d147:	push   esi
  40d148:	or     BYTE PTR [edi],bl
  40d14a:	(bad)  
  40d14b:	cmc    
  40d14c:	adc    eax,0x390da0e0
  40d151:	test   eax,0xd85f027
  40d156:	mov    ah,0xa0
  40d158:	call   0x5e3:0x594fdd54
  40d15f:	and    eax,0x59d7a6b5
  40d164:	mov    bh,0x64
  40d166:	ror    BYTE PTR [edi+0x31],0xa4
  40d16a:	ret    0xde0c
  40d16d:	shl    BYTE PTR [ebx],cl
  40d16f:	fist   WORD PTR [eax]
  40d171:	int    0xbf
  40d173:	scas   eax,DWORD PTR es:[edi]
  40d174:	rcl    BYTE PTR ds:0x3ad5223f,0xa0
  40d17b:	fadd   DWORD PTR [ebp+ebx*2+0x75]
  40d17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d180:	mov    BYTE PTR [ebx+0x64],bl
  40d183:	cmp    esp,DWORD PTR [ecx-0x2ea67f58]
  40d189:	xor    DWORD PTR [ebx+ecx*4],eax
  40d18c:	scas   eax,DWORD PTR es:[edi]
  40d18d:	jl     0x40d142
  40d18f:	jle    0x40d1d9
  40d191:	push   ecx
  40d192:	mov    esi,0xe0bb9727
  40d197:	out    0x8e,eax
  40d199:	into   
  40d19a:	(bad)  
  40d19c:	stc    
  40d19d:	cmp    BYTE PTR [edx-0x42],0x69
  40d1a1:	mov    ah,0x67
  40d1a3:	push   eax
  40d1a4:	or     eax,0x64597c90
  40d1a9:	mov    ah,0x57
  40d1ab:	hlt    
  40d1ac:	inc    edi
  40d1ad:	and    eax,0xd2f4870
  40d1b2:	xor    edi,edi
  40d1b4:	and    eax,0x250706c3
  40d1b9:	mov    BYTE PTR [ebp+0x79],dl
  40d1bc:	pop    ecx
  40d1bd:	hlt    
  40d1be:	mov    ah,0x6
  40d1c0:	jp     0x40d1d4
  40d1c2:	sbb    BYTE PTR [ebp-0x3303ea1e],bl
  40d1c8:	mov    ah,0xd3
  40d1ca:	sbb    edi,DWORD PTR [esi-0x7e]
  40d1cd:	add    edx,DWORD PTR [esi-0x69ec631c]
  40d1d3:	lahf   
  40d1d4:	sub    edx,DWORD PTR [ecx+ebx*4-0x17]
  40d1d8:	mov    edx,0x1b3e97b9
  40d1dd:	pop    ebp
  40d1de:	push   eax
  40d1df:	dec    ebp
  40d1e0:	or     al,0x50
  40d1e2:	mov    dh,0x36
  40d1e4:	out    0x94,eax
  40d1e6:	shr    cl,cl
  40d1e8:	xchg   esi,eax
  40d1e9:	dec    ecx
  40d1ea:	cmp    BYTE PTR [esi-0x6f84c55f],bl
  40d1f0:	adc    al,0x24
  40d1f2:	or     BYTE PTR [ecx-0x9],0xdb
  40d1f6:	or     ch,BYTE PTR [eax-0x72]
  40d1f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1fa:	mov    dh,0x18
  40d1fc:	lods   al,BYTE PTR ds:[esi]
  40d1fd:	clc    
  40d1fe:	pop    esi
  40d1ff:	(bad)  
  40d200:	xchg   esi,eax
  40d201:	pop    ebx
  40d202:	rcr    DWORD PTR [ecx],1
  40d204:	jno    0x40d206
  40d206:	and    eax,0x969fe039
  40d20b:	(bad)
  40d20e:	and    dl,ah
  40d210:	mov    edi,0xa2df09d8
  40d215:	in     eax,dx
  40d216:	bound  eax,QWORD PTR ds:0xfa5d1792
  40d21c:	(bad)  
  40d21d:	ins    BYTE PTR es:[edi],dx
  40d21e:	nop
  40d21f:	xchg   ebx,eax
  40d220:	xchg   edi,eax
  40d221:	lods   eax,DWORD PTR ds:[esi]
  40d222:	stc    
  40d223:	dec    eax
  40d224:	fsubr  st(3),st
  40d226:	or     bh,BYTE PTR [ecx+ebp*8]
  40d229:	sub    al,0xfc
  40d22b:	out    0x38,eax
  40d22d:	in     eax,dx
  40d22e:	pop    edx
  40d22f:	call   0x59af:0xd21eba49
  40d236:	adc    al,0x8a
  40d238:	scas   al,BYTE PTR es:[edi]
  40d239:	daa    
  40d23a:	dec    esi
  40d23b:	scas   al,BYTE PTR es:[edi]
  40d23c:	jnp    0x40d29a
  40d23e:	test   BYTE PTR [ebx+0x6e2793f5],bh
  40d244:	push   ecx
  40d245:	mov    ds:0x6ee4b05d,al
  40d24a:	pop    edi
  40d24b:	mov    eax,0x2f90b9cc
  40d250:	and    ebx,DWORD PTR [eax+0x1103fc60]
  40d256:	clc    
  40d257:	nop
  40d258:	inc    eax
  40d259:	bound  edi,QWORD PTR [ebp+0x3b]
  40d25c:	pushf  
  40d25d:	aaa    
  40d25e:	stc    
  40d25f:	out    0xd0,eax
  40d261:	out    0x49,al
  40d263:	test   al,0x6f
  40d265:	(bad)  
  40d266:	fsub   DWORD PTR [edx]
  40d268:	test   DWORD PTR [esi],0xba268d9e
  40d26e:	and    DWORD PTR [ecx+0x1b],eax
  40d271:	aas    
  40d272:	jae    0x40d254
  40d274:	cmp    BYTE PTR [ecx-0x2ae8b79a],0x6a
  40d27b:	mov    bh,BYTE PTR [esi-0x2d]
  40d27e:	mov    al,ds:0xfd9edffd
  40d283:	cmc    
  40d284:	push   ebx
  40d285:	mov    DWORD PTR [eax],edi
  40d287:	stc    
  40d288:	fstp   QWORD PTR [ebx-0x2f]
  40d28b:	dec    ebp
  40d28c:	jo     0x40d304
  40d28e:	push   ss
  40d28f:	cmp    eax,0xf65358eb
  40d294:	pop    es
  40d295:	repz jbe 0x40d28c
  40d298:	aam    0x5f
  40d29a:	aas    
  40d29b:	push   ecx
  40d29c:	push   edi
  40d29d:	mov    ebp,0x84dadb0f
  40d2a2:	sbb    al,0x25
  40d2a4:	mov    es,WORD PTR [ebx]
  40d2a6:	fild   WORD PTR gs:[edi+0x4356a1be]
  40d2ad:	xor    eax,0x34d116a6
  40d2b2:	mov    edi,0x31fbf5da
  40d2b7:	sub    DWORD PTR [ecx+edx*2],ecx
  40d2ba:	scas   al,BYTE PTR es:[edi]
  40d2bb:	ret    
  40d2bc:	imul   BYTE PTR [ebx]
  40d2be:	retf   0x8718
  40d2c1:	(bad)  
  40d2c2:	(bad)  
  40d2c3:	cmp    BYTE PTR ds:0x273cdd7c,dl
  40d2c9:	dec    edi
  40d2ca:	rol    BYTE PTR [ecx],0xa0
  40d2cd:	jmp    0x40d2d3
  40d2cf:	inc    edi
  40d2d0:	xor    eax,0xd4ada415
  40d2d5:	imul   esp,DWORD PTR [edx-0x5c4b8387],0xffffffe9
  40d2dc:	xor    BYTE PTR [eax-0x29],dl
  40d2df:	loop   0x40d275
  40d2e1:	sti    
  40d2e2:	cwde   
  40d2e3:	cld    
  40d2e4:	(bad)  
  40d2e6:	fcmovb st,st(4)
  40d2e8:	xchg   edx,eax
  40d2e9:	mov    ch,0x19
  40d2eb:	loope  0x40d27b
  40d2ed:	xchg   DWORD PTR fs:[edi],ecx
  40d2f0:	in     al,0x47
  40d2f2:	stos   BYTE PTR es:[edi],al
  40d2f3:	xchg   edi,eax
  40d2f4:	add    al,0xe
  40d2f6:	fild   QWORD PTR ds:0x9ca19b97
  40d2fc:	inc    DWORD PTR [esi+0x48f54277]
  40d302:	push   ss
  40d303:	outs   dx,DWORD PTR ds:[esi]
  40d304:	(bad)  
  40d305:	and    al,0xf0
  40d307:	xor    bh,BYTE PTR [edx]
  40d309:	(bad)  
  40d30b:	ja     0x40d2fa
  40d30d:	xchg   BYTE PTR [ebx+0x25f238aa],dh
  40d313:	dec    edx
  40d314:	cdq    
  40d315:	scas   eax,DWORD PTR es:[edi]
  40d316:	and    BYTE PTR [esi+ecx*8-0x1e7ff130],al
  40d31d:	lock mov ebp,0x4b3abac5
  40d323:	inc    edi
  40d324:	adc    al,0xe0
  40d326:	mov    BYTE PTR [ebx],bh
  40d328:	mov    esi,0xb48e498a
  40d32d:	(bad)  
  40d32f:	xor    cl,cl
  40d331:	or     ah,BYTE PTR [edi+0x10]
  40d334:	pop    ebp
  40d335:	cmp    DWORD PTR [esi],edi
  40d337:	mov    ?,WORD PTR [edi+0x2d]
  40d33a:	inc    esi
  40d33b:	dec    esi
  40d33c:	mov    eax,ds:0x2651dbb1
  40d341:	mov    ch,ah
  40d343:	push   0xffffffa4
  40d345:	cmp    ecx,edi
  40d347:	mov    eax,0x302396d0
  40d34c:	xor    bh,bl
  40d34e:	push   eax
  40d34f:	cmc    
  40d350:	push   es
  40d351:	sub    eax,ecx
  40d353:	nop
  40d354:	retf   
  40d355:	sbb    ch,BYTE PTR [ebx+0x7f11803b]
  40d35b:	aaa    
  40d35c:	(bad)  
  40d35d:	stos   DWORD PTR es:[edi],eax
  40d35e:	mov    eax,0x693decbe
  40d363:	xlat   BYTE PTR ds:[ebx]
  40d364:	push   edi
  40d365:	retf   0x375d
  40d368:	sub    al,0xe7
  40d36a:	cmp    BYTE PTR [edx+0x7e],ah
  40d36d:	in     al,0x19
  40d36f:	loopne 0x40d39d
  40d371:	mov    edi,0x50fec9d8
  40d376:	gs inc esp
  40d378:	add    eax,0xa54ca095
  40d37d:	pusha  
  40d37e:	call   0xe723f9cb
  40d383:	pop    ebx
  40d384:	mov    ah,0xdd
  40d386:	das    
  40d387:	(bad)  
  40d388:	mov    al,0xee
  40d38a:	inc    ebp
  40d38c:	js     0x40d404
  40d38e:	out    dx,al
  40d38f:	mov    esp,0xc0b7ce0a
  40d394:	mov    edx,0x55f2a9cf
  40d399:	mov    ah,0x84
  40d39b:	mov    esp,0x412b274f
  40d3a0:	in     al,0x9d
  40d3a2:	mov    ss,WORD PTR [ebx-0x3be3bc8e]
  40d3a8:	cmp    ecx,DWORD PTR [ebp+0x12]
  40d3ab:	fmul   QWORD PTR es:[ebp+0x1a]
  40d3af:	lahf   
  40d3b0:	gs inc edi
  40d3b2:	adc    DWORD PTR [edi+eax*8],eax
  40d3b5:	shl    DWORD PTR [ebp-0x24ce0768],0x66
  40d3bc:	(bad)  
  40d3bd:	clc    
  40d3be:	mov    ss,WORD PTR [eax]
  40d3c0:	xlat   BYTE PTR ds:[ebx]
  40d3c1:	sbb    DWORD PTR [ebp-0x27],ecx
  40d3c4:	or     cl,BYTE PTR [edx-0x46]
  40d3c7:	sub    DWORD PTR [ebx-0x1c],eax
  40d3ca:	or     al,0x2d
  40d3cc:	jns    0x40d397
  40d3ce:	xchg   cl,ch
  40d3d0:	mov    ebx,DWORD PTR [ebp+0x311485a3]
  40d3d6:	jb     0x40d40a
  40d3d8:	sub    dl,dh
  40d3da:	adc    bl,BYTE PTR [esp+ecx*1]
  40d3dd:	push   ds
  40d3de:	mov    dh,0x5d
  40d3e0:	ja     0x40d430
  40d3e2:	repnz pop ss
  40d3e4:	pop    esi
  40d3e5:	sti    
  40d3e6:	out    dx,al
  40d3e7:	add    edi,DWORD PTR [edi-0x66e8af51]
  40d3ed:	popa   
  40d3ee:	shl    cl,cl
  40d3f0:	outs   dx,BYTE PTR ds:[esi]
  40d3f1:	sti    
  40d3f2:	ret    0x113
  40d3f5:	push   0xfffffffe
  40d3f7:	cs jne 0x40d440
  40d3fa:	imul   ebp,DWORD PTR [eax+0x631802f1],0xed9b326a
  40d404:	(bad)  
  40d407:	sub    DWORD PTR [eax+0x69],ecx
  40d40a:	mov    edi,0xf7e768af
  40d40f:	aam    0xf2
  40d411:	les    ecx,FWORD PTR [esp+eax*4+0x39]
  40d415:	nop
  40d416:	outs   dx,DWORD PTR ds:[esi]
  40d417:	jg     0x40d39e
  40d419:	sbb    esi,DWORD PTR [edi-0x4ee296e3]
  40d41f:	aaa    
  40d420:	dec    edi
  40d421:	fist   DWORD PTR [edi+0x7d]
  40d424:	mov    dl,0x1e
  40d426:	sbb    al,0x66
  40d428:	add    cl,BYTE PTR [esi+eax*2]
  40d42b:	pop    ds
  40d42c:	cmp    DWORD PTR [edx+0x64],edi
  40d42f:	xchg   edi,eax
  40d430:	aam    0x44
  40d432:	test   eax,0xefe3daaf
  40d437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d438:	cmp    edx,eax
  40d43a:	cmp    ebx,DWORD PTR [ebp-0x51]
  40d43d:	push   ecx
  40d43e:	xor    ah,ah
  40d440:	adc    al,0x59
  40d442:	mov    cl,0x56
  40d444:	push   ecx
  40d445:	div    edi
  40d447:	sbb    BYTE PTR [ebx+ecx*4+0x2ff3789],al
  40d44e:	dec    eax
  40d44f:	aam    0xa1
  40d451:	xchg   edx,eax
  40d452:	xchg   edi,eax
  40d453:	xchg   BYTE PTR [esi],bl
  40d455:	xchg   ecx,eax
  40d456:	mov    cl,0x5f
  40d458:	mov    WORD PTR [eax+edx*2],?
  40d45b:	push   0x9348e943
  40d460:	push   ebp
  40d461:	xchg   ecx,eax
  40d462:	call   0xc401:0xbe26a7b0
  40d469:	inc    eax
  40d46a:	and    BYTE PTR [esi+0x3],dh
  40d46d:	push   ebp
  40d46e:	shld   DWORD PTR [eax+esi*8+0xa11d13f],esp,cl
  40d476:	mov    esp,0x2b8038e3
  40d47b:	pushf  
  40d47c:	add    DWORD PTR [esi+ecx*8],0xffffff9c
  40d480:	in     al,dx
  40d481:	in     eax,0xbc
  40d483:	leave  
  40d484:	mov    eax,0x4393216d
  40d489:	xor    edi,DWORD PTR [edx+0x1c]
  40d48c:	or     edx,DWORD PTR [ecx+0x37]
  40d48f:	adc    bl,al
  40d491:	dec    ebp
  40d492:	ficomp DWORD PTR [ebx+0x58]
  40d495:	mov    dh,0x86
  40d497:	jmp    0x40d4e4
  40d499:	pushf  
  40d49a:	add    BYTE PTR [ebx+0x7ef0ae42],bh
  40d4a0:	aas    
  40d4a1:	ss adc dl,dl
  40d4a4:	dec    edi
  40d4a5:	pop    esp
  40d4a6:	mov    esi,0x2c5baef1
  40d4ab:	add    eax,ebp
  40d4ad:	fwait
  40d4ae:	or     al,0x52
  40d4b0:	and    cl,0xb1
  40d4b3:	cmp    eax,0x868c773f
  40d4b8:	sub    BYTE PTR [edi],bh
  40d4ba:	shr    DWORD PTR [esi+0x4f],cl
  40d4bd:	mov    dl,BYTE PTR [ecx-0xda64dc5]
  40d4c3:	test   esp,eax
  40d4c5:	retf   
  40d4c6:	sbb    DWORD PTR [ebx],0x48
  40d4c9:	push   eax
  40d4ca:	dec    edx
  40d4cb:	fild   QWORD PTR [ebx]
  40d4cd:	pop    edi
  40d4ce:	shl    bl,cl
  40d4d0:	ss cmc 
  40d4d2:	or     ch,ch
  40d4d4:	inc    eax
  40d4d5:	int3   
  40d4d6:	ret    
  40d4d7:	push   0x1bfe1df5
  40d4dc:	ds aam 0x1d
  40d4df:	cmc    
  40d4e0:	fwait
  40d4e1:	push   ebx
  40d4e2:	fsubr  st,st(3)
  40d4e4:	adc    DWORD PTR [ebx],eax
  40d4e6:	(bad)  
  40d4e7:	xchg   BYTE PTR [edi+eiz*4-0x4c],ch
  40d4eb:	add    eax,0xad2a099d
  40d4f0:	fs ins DWORD PTR es:[edi],dx
  40d4f2:	sbb    eax,DWORD PTR [eax]
  40d4f4:	pop    edi
  40d4f5:	fwait
  40d4f6:	jns    0x40d52a
  40d4f8:	or     dh,ah
  40d4fa:	mov    WORD PTR [eax+0x53],cs
  40d4fd:	les    ebp,FWORD PTR [edi]
  40d4ff:	mov    esi,0xff5ba6be
  40d504:	push   cs
  40d505:	popf   
  40d506:	xor    dh,BYTE PTR [edx+0x6c]
  40d509:	sbb    eax,0xdf10d053
  40d50e:	jnp    0x40d53e
  40d510:	push   ebx
  40d511:	sub    ecx,DWORD PTR [eax]
  40d513:	mov    edi,0xf7e53d25
  40d518:	lds    esi,FWORD PTR ds:0xcb7ec026
  40d51e:	sub    al,0xec
  40d520:	and    al,0xf2
  40d522:	lock into 
  40d524:	test   dh,cl
  40d526:	(bad)  
  40d527:	lods   al,BYTE PTR ds:[esi]
  40d528:	mov    dl,0x12
  40d52a:	push   ss
  40d52b:	xchg   esp,eax
  40d52c:	add    ah,BYTE PTR [edi+edi*4-0x419c0cd]
  40d533:	add    DWORD PTR [ecx+esi*8+0x38],eax
  40d537:	jno    0x40d4fa
  40d539:	clc    
  40d53a:	sub    edi,DWORD PTR [eax+0x6e]
  40d53d:	ss pop ebp
  40d53f:	mov    cl,0xa3
  40d541:	add    al,0x16
  40d543:	test   eax,0xa3f9e5a5
  40d548:	sbb    bl,BYTE PTR [edx-0x67]
  40d54b:	mov    ebp,0x8b5a662c
  40d550:	mov    DWORD PTR [ecx+0x70],ecx
  40d553:	rcl    BYTE PTR [edi],cl
  40d555:	xchg   edi,eax
  40d556:	scas   al,BYTE PTR es:[edi]
  40d557:	jg     0x40d59e
  40d559:	nop
  40d55a:	hlt    
  40d55b:	shl    BYTE PTR [ebx],cl
  40d55d:	xor    DWORD PTR [eax],eax
  40d55f:	imul   esi,ebp,0x53
  40d562:	shl    BYTE PTR ds:0x48ee05d0,1
  40d568:	gs pop edx
  40d56a:	mov    edi,0x401d835a
  40d56f:	dec    esp
  40d570:	loope  0x40d4f4
  40d572:	pushf  
  40d573:	pop    esi
  40d574:	jmp    0x40d5a0
  40d576:	call   0x4b2e:0x945e8b4d
  40d57d:	mov    ds:0xd986b44,eax
  40d582:	push   esp
  40d583:	leave  
  40d584:	(bad)  [eax]
  40d586:	dec    esp
  40d587:	retf   0x6568
  40d58a:	popf   
  40d58b:	mov    ebp,0xcc743875
  40d590:	fwait
  40d591:	or     ebp,DWORD PTR [eax+0x77]
  40d594:	cmp    al,0x16
  40d596:	push   0xffffffde
  40d598:	or     bh,BYTE PTR [eax]
  40d59a:	pop    ebp
  40d59b:	cld    
  40d59c:	xchg   edx,eax
  40d59d:	push   0xffffff90
  40d59f:	xchg   DWORD PTR [ebx-0x7d9f63a1],eax
  40d5a5:	cwde   
  40d5a6:	mov    al,ds:0x8681ff6
  40d5ab:	(bad)  
  40d5ac:	outs   dx,BYTE PTR ds:[esi]
  40d5ad:	xchg   ecx,eax
  40d5ae:	add    al,0x49
  40d5b0:	pop    es
  40d5b1:	mov    bh,0x8f
  40d5b3:	shl    dh,1
  40d5b5:	int    0xb6
  40d5b7:	jg     0x40d5c3
  40d5b9:	inc    edi
  40d5ba:	scas   eax,DWORD PTR es:[edi]
  40d5bb:	mov    dl,bh
  40d5bd:	inc    edi
  40d5be:	cmp    al,0x15
  40d5c0:	mov    eax,0xe5668e82
  40d5c5:	jns    0x40d5cc
  40d5c7:	rol    DWORD PTR [ebx+0x200a7abe],0x38
  40d5ce:	xchg   ecx,eax
  40d5cf:	les    esp,FWORD PTR [esi-0x19]
  40d5d2:	push   cs
  40d5d3:	sbb    eax,0x1772a142
  40d5d8:	xchg   BYTE PTR [edx-0x3decdfa9],cl
  40d5de:	push   edx
  40d5df:	in     eax,0x5b
  40d5e1:	and    ah,bh
  40d5e3:	jg     0x40d629
  40d5e5:	push   es
  40d5e6:	sahf   
  40d5e7:	fsubr  DWORD PTR [ebp+ecx*2+0x63]
  40d5eb:	push   ss
  40d5ec:	xchg   edi,eax
  40d5ed:	inc    esi
  40d5ee:	dec    eax
  40d5ef:	sub    ah,BYTE PTR [eax+0x1e]
  40d5f2:	mov    ah,0xa2
  40d5f4:	or     edi,eax
  40d5f6:	out    dx,eax
  40d5f7:	imul   esi,esi,0x67f3400d
  40d5fd:	xor    al,0x22
  40d5ff:	push   edi
  40d600:	and    BYTE PTR [esi-0x220944cc],0xf
  40d607:	cdq    
  40d608:	jne    0x40d5c7
  40d60a:	sbb    eax,0x74f4db2d
  40d60f:	jecxz  0x40d5dc
  40d611:	mov    al,ds:0x752f7eed
  40d616:	dec    esi
  40d617:	fimul  DWORD PTR [edx]
  40d619:	sahf   
  40d61a:	scas   al,BYTE PTR es:[edi]
  40d61b:	in     al,dx
  40d61c:	pop    ebp
  40d61d:	jae    0x40d61a
  40d61f:	ficom  DWORD PTR [ecx+0x38]
  40d622:	sbb    ebp,DWORD PTR [ebp-0x26e3b2db]
  40d628:	mov    ch,0xd2
  40d62a:	lods   al,BYTE PTR ds:[esi]
  40d62b:	or     eax,0x7be97c45
  40d630:	or     eax,0xc8d1cf10
  40d635:	jae    0x40d610
  40d637:	mov    ah,0xa9
  40d639:	call   0x1fea:0x8ddda52d
  40d640:	dec    esp
  40d641:	or     bh,ah
  40d643:	cli    
  40d644:	inc    ebx
  40d645:	test   BYTE PTR [ecx+edi*8-0x44],ch
  40d649:	arpl   WORD PTR [edx-0x18dc2a7c],di
  40d64f:	int    0x6e
  40d651:	fxch   st(0)
  40d653:	js     0x40d5fd
  40d655:	hlt    
  40d656:	(bad)  
  40d657:	loope  0x40d5f9
  40d659:	sub    al,0x6b
  40d65b:	add    ebx,DWORD PTR [edx+0x43a22829]
  40d661:	mov    al,ds:0xb289f8e1
  40d666:	into   
  40d667:	xchg   edx,eax
  40d668:	and    esp,edx
  40d66a:	bound  ebp,QWORD PTR [eax+ebx*1-0x8857d16]
  40d671:	inc    esi
  40d672:	in     al,0x6b
  40d674:	jl     0x40d6ac
  40d676:	rcr    BYTE PTR [ebp+0x446cd9af],cl
  40d67c:	fild   DWORD PTR [eax+0x24009647]
  40d682:	xchg   ecx,eax
  40d683:	pop    ebx
  40d684:	js     0x40d693
  40d686:	push   ebp
  40d687:	pop    ss
  40d688:	jmp    0x5404:0xb0fdb53a
  40d68f:	popf   
  40d690:	aas    
  40d691:	lahf   
  40d692:	lods   eax,DWORD PTR ds:[esi]
  40d693:	loop   0x40d64b
  40d695:	inc    esp
  40d696:	out    dx,eax
  40d697:	xchg   BYTE PTR [edi+0x6af5c1e8],al
  40d69d:	cmp    DWORD PTR [edi+ebx*2],ebp
  40d6a0:	adc    DWORD PTR [ebx-0x3c31dd9c],esp
  40d6a6:	bound  eax,QWORD PTR [edx]
  40d6a8:	mov    dh,0x93
  40d6aa:	jge    0x40d6b1
  40d6ac:	push   ss
  40d6ad:	ja     0x40d702
  40d6af:	sub    al,0xfd
  40d6b1:	popf   
  40d6b2:	mov    cs,WORD PTR [ecx]
  40d6b4:	push   0xfad490e4
  40d6b9:	or     dh,BYTE PTR [ebx+0x29]
  40d6bc:	out    dx,eax
  40d6bd:	mov    ds:0x69c49755,eax
  40d6c2:	mov    edi,0x70da49ca
  40d6c7:	fcmovnu st,st(7)
  40d6c9:	jbe    0x40d6e9
  40d6cb:	inc    edi
  40d6cc:	ja     0x40d729
  40d6ce:	in     eax,0xae
  40d6d0:	loope  0x40d652
  40d6d2:	or     DWORD PTR [esi],eax
  40d6d4:	js     0x40d6fe
  40d6d6:	and    al,BYTE PTR [ebp+0x507a1e62]
  40d6dc:	adc    BYTE PTR [ebx+0x3c],al
  40d6df:	test   BYTE PTR [esi],dh
  40d6e1:	lock add dh,BYTE PTR [ecx+0x2f]
  40d6e5:	enter  0xb035,0xdb
  40d6e9:	add    edx,DWORD PTR [edx+0x7384d8f6]
  40d6ef:	adc    BYTE PTR [ecx],dh
  40d6f1:	dec    edi
  40d6f2:	mov    DWORD PTR [ebx+0x287b9468],esi
  40d6f8:	push   ss
  40d6f9:	xor    ah,BYTE PTR [ecx]
  40d6fb:	into   
  40d6fc:	and    al,0x3d
  40d6fe:	cmp    eax,0xc791e46a
  40d703:	out    dx,al
  40d704:	(bad)  
  40d705:	out    dx,al
  40d706:	std    
  40d707:	mov    ch,0x44
  40d709:	test   ah,cl
  40d70b:	das    
  40d70c:	and    edi,esp
  40d70e:	xor    BYTE PTR [esi],dh
  40d710:	iret   
  40d711:	sbb    esi,DWORD PTR [eax+edi*2-0xa82ec39]
  40d718:	pop    eax
  40d719:	out    dx,al
  40d71a:	pop    ecx
  40d71b:	sbb    al,0xfe
  40d71d:	mov    ch,0x54
  40d71f:	mov    ebx,0xd1c40b72
  40d724:	jne    0x40d747
  40d726:	aam    0x1f
  40d728:	push   es
  40d729:	jle    0x40d73a
  40d72b:	stos   DWORD PTR es:[edi],eax
  40d72c:	bound  ecx,QWORD PTR [ecx-0x37]
  40d72f:	mov    ?,WORD PTR [eax]
  40d731:	pop    edi
  40d732:	inc    ebp
  40d733:	mul    dl
  40d735:	pop    esi
  40d736:	popa   
  40d737:	mov    eax,ds:0x958f4282
  40d73c:	sub    DWORD PTR [ebx+0x54],ebp
  40d73f:	in     eax,0xf5
  40d741:	daa    
  40d742:	mov    es,WORD PTR [esi]
  40d744:	pop    esi
  40d745:	ins    DWORD PTR es:[edi],dx
  40d746:	mov    dh,0x13
  40d748:	jge    0x40d741
  40d74a:	call   0xf49fe8b6
  40d74f:	test   al,0x42
  40d751:	loop   0x40d74c
  40d753:	mov    al,ds:0x75029eb1
  40d758:	out    dx,eax
  40d759:	cld    
  40d75a:	aad    0x9d
  40d75c:	add    dl,BYTE PTR [edx]
  40d75e:	xchg   edx,eax
  40d75f:	xchg   esp,eax
  40d760:	retf   
  40d761:	sbb    edx,ecx
  40d763:	push   edi
  40d764:	or     al,0x2e
  40d766:	test   eax,0x53bc7d43
  40d76b:	xchg   BYTE PTR [ecx+0xa84b743],bl
  40d771:	push   es
  40d772:	jne    0x40d78e
  40d774:	aad    0x90
  40d776:	pop    edx
  40d777:	adc    edx,DWORD PTR [ebx]
  40d779:	loope  0x40d7a2
  40d77b:	push   ebp
  40d77c:	fldcw  WORD PTR [ebx-0x67534bed]
  40d782:	pop    ebp
  40d783:	jmp    0x40d78f
  40d785:	mov    al,BYTE PTR [ebx-0x56]
  40d788:	mov    bl,0xe7
  40d78a:	pusha  
  40d78b:	jno    0x40d7f5
  40d78d:	fldcw  WORD PTR [edx+0x454f6c20]
  40d793:	jb     0x40d747
  40d795:	mov    edx,DWORD PTR [ebp-0x6482cabc]
  40d79b:	aam    0x9b
  40d79d:	popf   
  40d79e:	lahf   
  40d79f:	gs mov edi,0xbf1b420b
  40d7a5:	or     al,0xcf
  40d7a7:	xchg   edx,ecx
  40d7a9:	sbb    al,0xa0
  40d7ab:	mov    dh,0x77
  40d7ad:	lea    ebp,[edx-0xa]
  40d7b0:	pop    ebp
  40d7b1:	pop    ss
  40d7b2:	dec    eax
  40d7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7b4:	stc    
  40d7b5:	adc    ah,BYTE PTR [esi-0x3]
  40d7b8:	adc    DWORD PTR [ecx-0x7651b276],edi
  40d7be:	dec    ebp
  40d7bf:	push   ecx
  40d7c0:	jmp    0x30fa:0x18cf42cb
  40d7c7:	xchg   ebp,eax
  40d7c8:	xor    ebx,DWORD PTR [ebp+0x49]
  40d7cb:	pop    esi
  40d7cc:	call   0x51716961
  40d7d1:	push   ss
  40d7d2:	push   ecx
  40d7d3:	xor    eax,edi
  40d7d5:	mov    al,ds:0xcaf11d9e
  40d7da:	ins    DWORD PTR es:[edi],dx
  40d7db:	mov    cl,0x7f
  40d7dd:	pushf  
  40d7de:	in     eax,dx
  40d7df:	jne    0x40d859
  40d7e1:	ss jmp 0x8a98aff9
  40d7e7:	inc    esi
  40d7e8:	pop    edi
  40d7e9:	out    0x62,al
  40d7eb:	aaa    
  40d7ec:	aam    0x55
  40d7ee:	call   0xdce59f39
  40d7f3:	shr    BYTE PTR [ecx],0x2d
  40d7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7f7:	icebp  
  40d7f8:	pop    ss
  40d7f9:	xchg   edi,eax
  40d7fa:	add    al,al
  40d7fc:	and    DWORD PTR [eax-0x1e02f0f2],eax
  40d802:	xor    dl,bl
  40d804:	ja     0x40d85a
  40d806:	jae    0x40d858
  40d808:	adc    edx,0x49
  40d80b:	pop    es
  40d80c:	repnz aas 
  40d80e:	sub    eax,0x7d1c7e27
  40d813:	pop    ss
  40d814:	and    BYTE PTR [edx+0x2],dl
  40d817:	xchg   esi,eax
  40d818:	fstp   QWORD PTR [esi]
  40d81a:	push   ecx
  40d81b:	xchg   ebp,eax
  40d81c:	inc    edx
  40d81d:	xor    al,0xf8
  40d81f:	dec    esp
  40d820:	mov    ecx,0x606d3b3a
  40d825:	sub    edx,0x39
  40d828:	(bad)  [edi]
  40d82a:	sbb    eax,DWORD PTR [ebx+0x2c952dfc]
  40d830:	repz xchg edi,esp
  40d833:	test   eax,0x7b91c1e7
  40d838:	push   esp
  40d839:	jo     0x40d80e
  40d83b:	test   bh,ah
  40d83d:	dec    edx
  40d83e:	mov    ebx,0x2d8f152f
  40d843:	pop    ds
  40d844:	push   es
  40d845:	inc    esi
  40d846:	outs   dx,BYTE PTR ds:[esi]
  40d847:	push   DWORD PTR fs:[esi+0x7e]
  40d84b:	pop    ss
  40d84c:	mov    bh,0xf6
  40d84e:	(bad)  
  40d84f:	or     ah,bh
  40d851:	cwde   
  40d852:	into   
  40d853:	pop    ebx
  40d854:	pop    esp
  40d855:	push   0xffffffe9
  40d857:	xchg   ebx,eax
  40d858:	bound  edi,QWORD PTR [edx]
  40d85a:	in     al,dx
  40d85b:	dec    BYTE PTR [edx-0x580450ce]
  40d861:	out    0xc4,eax
  40d863:	pop    edx
  40d864:	mov    al,ds:0x9e423bf6
  40d869:	jmp    0x559e:0x2eb9fca1
  40d870:	push   0x18bb0661
  40d875:	cmc    
  40d876:	add    DWORD PTR [eax],ebx
  40d878:	xchg   ebp,eax
  40d879:	in     al,dx
  40d87a:	mov    eax,ds:0x99015072
  40d87f:	ficomp DWORD PTR [ebp-0x65226d22]
  40d885:	ret    0x186
  40d888:	mov    ds:0xb38d4fbe,eax
  40d88d:	ret    
  40d88e:	and    al,0x22
  40d890:	nop
  40d891:	push   cs
  40d892:	pcmpeqb mm2,QWORD PTR [esi+0x2f2f1da1]
  40d899:	ffreep st(4)
  40d89b:	mov    DWORD PTR [ebx+0x531f9e0d],0x6330c924
  40d8a5:	loop   0x40d882
  40d8a7:	mov    eax,0xfe286305
  40d8ac:	shr    eax,cl
  40d8ae:	sub    al,0x9
  40d8b0:	(bad)  
  40d8b1:	mov    esp,0x4e1f5dd7
  40d8b6:	jmp    0xc8c0ea60
  40d8bb:	inc    esi
  40d8bc:	xchg   edi,eax
  40d8bd:	or     esi,DWORD PTR [ebx+0x3b92df50]
  40d8c3:	bound  ebp,QWORD PTR [esi]
  40d8c5:	(bad)  
  40d8c6:	out    dx,al
  40d8c7:	dec    ebx
  40d8c8:	(bad)  [edx-0x620d25d4]
  40d8ce:	push   esp
  40d8cf:	int3   
  40d8d0:	dec    esp
  40d8d2:	sti    
  40d8d3:	in     al,0x39
  40d8d5:	aad    0x8d
  40d8d7:	adc    eax,0x2bc425d
  40d8dc:	(bad)  
  40d8dd:	cli    
  40d8de:	jo     0x40d90f
  40d8e0:	jp     0x40d93e
  40d8e2:	(bad)  
  40d8e3:	xchg   ecx,eax
  40d8e4:	push   0x3240c79c
  40d8e9:	sub    bl,ch
  40d8eb:	xchg   ebx,eax
  40d8ec:	lock or cl,bh
  40d8ef:	and    al,0xb1
  40d8f1:	mov    ds:0x506829e2,eax
  40d8f6:	push   cs
  40d8f7:	push   edx
  40d8f8:	cmp    al,BYTE PTR [ebx]
  40d8fa:	ins    BYTE PTR es:[edi],dx
  40d8fb:	stos   DWORD PTR es:[edi],eax
  40d8fc:	repnz xor ebp,ecx
  40d8ff:	call   0xfb6d:0xe4f5987d
  40d906:	int    0xd1
  40d908:	pusha  
  40d909:	jbe    0x40d926
  40d90b:	sub    BYTE PTR [ecx+ecx*2+0x7d6c67e6],0xb3
  40d913:	test   eax,eax
  40d915:	push   ebp
  40d916:	mov    ecx,0xd05a5198
  40d91b:	mov    esp,0xa20c59fd
  40d920:	sbb    al,BYTE PTR ds:0xb95e2abd
  40d926:	push   0xffffff90
  40d928:	sub    eax,0x7a7801ec
  40d92d:	int    0xbd
  40d92f:	aas    
  40d930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d931:	popf   
  40d932:	ds jmp 0x40d8ed
  40d935:	jne    0x40d938
  40d937:	or     ah,BYTE PTR [esi+0x29b1b31a]
  40d93d:	mov    ss,ebp
  40d93f:	jns    0x40d9a5
  40d941:	pop    esi
  40d942:	add    BYTE PTR [edi],dl
  40d944:	sbb    BYTE PTR [ebx],al
  40d946:	add    al,0xb
  40d948:	xor    BYTE PTR [esi-0x48fe4ed8],ah
  40d94e:	mov    esi,0xf8fec0f3
  40d953:	mov    edi,0xe92fb4d9
  40d958:	sub    eax,0xf63b5813
  40d95d:	dec    edi
  40d95e:	jno    0x40d99e
  40d960:	mov    al,ds:0xd2c58b80
  40d965:	pop    ecx
  40d966:	test   DWORD PTR [eax+0x75941f1a],ebx
  40d96c:	push   eax
  40d96d:	cmp    eax,0xa5db930d
  40d972:	shl    DWORD PTR [ecx-0x940b1c7],0x42
  40d979:	scas   al,BYTE PTR es:[edi]
  40d97a:	dec    ebp
  40d97b:	add    al,0xc5
  40d97d:	push   ds
  40d97e:	fwait
  40d97f:	adc    dl,BYTE PTR [eax]
  40d981:	add    BYTE PTR ds:0x16674255,0x3f
  40d988:	test   BYTE PTR [ecx-0x29],bh
  40d98b:	adc    al,0xec
  40d98d:	cmp    eax,DWORD PTR [edi]
  40d98f:	mov    bh,0x40
  40d991:	sbb    esi,DWORD PTR [edx]
  40d993:	adc    BYTE PTR ds:0xf0fe82d7,dh
  40d999:	cmp    eax,0xa08e5ff7
  40d99e:	leave  
  40d99f:	shl    DWORD PTR [ecx+0x63],0x93
  40d9a3:	add    eax,0x5becbf57
  40d9a8:	xor    DWORD PTR [ebp-0x3c921db5],ebp
  40d9ae:	mov    dh,0x5a
  40d9b0:	xchg   edx,eax
  40d9b1:	lahf   
  40d9b2:	and    ebx,DWORD PTR [ebp-0x4c8ece7b]
  40d9b8:	pop    ds
  40d9b9:	push   esi
  40d9ba:	add    dl,BYTE PTR [esi]
  40d9bc:	sar    dh,0xd0
  40d9bf:	les    esi,FWORD PTR [ecx+esi*2-0x62cfbbe9]
  40d9c6:	ds push esi
  40d9c8:	dec    ebp
  40d9c9:	sub    BYTE PTR [edi-0x56],dl
  40d9cc:	clc    
  40d9cd:	pop    ds
  40d9ce:	mov    edi,0xd59ed212
  40d9d3:	jmp    0xb814:0xdfb62d81
  40d9da:	stos   BYTE PTR es:[edi],al
  40d9db:	adc    BYTE PTR [edx],dh
  40d9dd:	xchg   ebp,eax
  40d9de:	mov    ecx,0x6ce23be6
  40d9e3:	xchg   esi,eax
  40d9e4:	addr16 (bad) 
  40d9e7:	pop    esi
  40d9e8:	and    esp,DWORD PTR [edi+0x58]
  40d9eb:	sub    bh,0xed
  40d9ee:	pushf  
  40d9ef:	inc    ebp
  40d9f0:	adc    eax,0xbc244c73
  40d9f5:	fwait
  40d9f6:	loop   0x40da04
  40d9f8:	add    ecx,DWORD PTR [ebx+ecx*8-0x7f7eaff9]
  40d9ff:	push   ebx
  40da00:	std    
  40da01:	imul   eax,edx,0xfef0ee43
  40da07:	jle    0x40d9f6
  40da09:	scas   eax,DWORD PTR es:[edi]
  40da0a:	adc    bh,al
  40da0c:	inc    ebp
  40da0d:	ret    0x25e3
  40da10:	or     esi,esi
  40da12:	std    
  40da13:	aad    0xe4
  40da15:	out    0x3c,eax
  40da17:	aaa    
  40da18:	or     dl,dh
  40da1a:	cli    
  40da1b:	imul   BYTE PTR [edi]
  40da1d:	das    
  40da1e:	cli    
  40da1f:	jae    0x40d9dd
  40da21:	pop    ebp
  40da22:	add    al,0xb8
  40da24:	xchg   ecx,eax
  40da25:	cmp    eax,0xc41373e0
  40da2a:	push   DWORD PTR [ecx-0x19ec2b90]
  40da30:	loope  0x40da30
  40da32:	push   ss
  40da33:	int    0x60
  40da35:	add    dl,0xdf
  40da38:	mov    ah,0x1e
  40da3a:	cmp    edx,edx
  40da3c:	dec    esp
  40da3d:	xor    edi,DWORD PTR [ebx-0x2b9420ed]
  40da43:	mov    dl,0x3d
  40da45:	jl     0x40d9d8
  40da47:	push   ecx
  40da48:	scas   al,BYTE PTR es:[edi]
  40da49:	xlat   BYTE PTR ds:[ebx]
  40da4a:	mov    ecx,0x429752e5
  40da4f:	dec    edx
  40da50:	fidivr DWORD PTR [ebp-0x6d]
  40da53:	sahf   
  40da54:	xor    al,ch
  40da56:	les    esi,FWORD PTR gs:[ebx-0x66]
  40da5a:	shr    BYTE PTR [edx],1
  40da5c:	test   DWORD PTR [esi+0x7508c7ea],0x6bde63c
  40da66:	test   eax,0x9317cf59
  40da6b:	or     esp,DWORD PTR [edi+0x305ecb9b]
  40da71:	imul   edi,DWORD PTR [ebp+0x6e634b02],0xffffffe8
  40da78:	mov    al,0x30
  40da7a:	int3   
  40da7b:	in     al,0x9e
  40da7d:	inc    ebp
  40da7e:	push   ecx
  40da7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da80:	sahf   
  40da81:	ret    
  40da82:	xchg   DWORD PTR [ebx-0x27527800],ebp
  40da88:	xlat   BYTE PTR ds:[ebx]
  40da89:	inc    DWORD PTR [esi+0x58]
  40da8c:	and    eax,0x9e0e8fdf
  40da91:	mov    bl,0xa1
  40da93:	sbb    eax,esp
  40da95:	add    eax,0x2fe2615f
  40da9a:	cmp    bl,BYTE PTR [edx+esi*8]
  40da9d:	icebp  
  40da9e:	sub    al,0xe2
  40daa0:	jns    0x40da5f
  40daa2:	mov    edi,0x4cd26dbf
  40daa7:	mov    eax,0xfc4a62e3
  40daac:	sub    DWORD PTR [edx+0x5ff21c00],ecx
  40dab2:	mov    DWORD PTR [eax+edx*2-0x3f],esi
  40dab6:	ret    0xea3
  40dab9:	bound  ebx,QWORD PTR [esi]
  40dabb:	push   0xf6e7b293
  40dac0:	or     al,0x8c
  40dac2:	add    ecx,esp
  40dac4:	pusha  
  40dac5:	jmp    FWORD PTR [ecx-0x2]
  40dac8:	mov    ebx,0x54756bce
  40dacd:	pop    eax
  40dace:	add    ecx,DWORD PTR [esi]
  40dad0:	scas   al,BYTE PTR es:[edi]
  40dad1:	mov    ecx,0xefdd95db
  40dad6:	sub    cl,BYTE PTR [ebx+0x52]
  40dad9:	hlt    
  40dada:	lea    ebx,[ebx+0x5933619d]
  40dae0:	jmp    0xfcea7ef0
  40dae5:	out    dx,al
  40dae6:	scas   al,BYTE PTR es:[edi]
  40dae7:	add    eax,DWORD PTR [eax+0x7470382f]
  40daed:	push   ss
  40daee:	cwde   
  40daef:	xchg   ecx,eax
  40daf0:	das    
  40daf1:	add    al,0x92
  40daf3:	das    
  40daf4:	mov    DWORD PTR ds:0xa3fcc377,edx
  40dafa:	adc    DWORD PTR [ebx],edi
  40dafc:	adc    BYTE PTR [edi-0x3d],bl
  40daff:	js     0x40daff
  40db01:	adc    esp,esp
  40db03:	mov    DWORD PTR [edx-0x59e37b73],ebx
  40db09:	lds    edi,FWORD PTR [ecx]
  40db0b:	fcomp  st(1)
  40db0d:	call   0xc6a4d7f9
  40db12:	jmp    FWORD PTR [esi-0x1e]
  40db15:	pop    ebx
  40db16:	lock retf 
  40db18:	push   0x8
  40db1a:	sar    BYTE PTR [ebx-0x50a94be1],1
  40db20:	xchg   esp,eax
  40db21:	xor    ebp,DWORD PTR [edx]
  40db23:	cli    
  40db24:	mov    BYTE PTR [ebx],cl
  40db26:	push   es
  40db27:	mov    bh,0xf6
  40db29:	xchg   BYTE PTR [edi],ah
  40db2b:	(bad)  
  40db2c:	bnd jg 0x40db14
  40db2f:	and    edx,DWORD PTR [ebx+0x7e]
  40db32:	out    0x51,al
  40db34:	sti    
  40db35:	dec    edx
  40db36:	push   edx
  40db37:	push   es
  40db38:	jecxz  0x40db84
  40db3a:	loope  0x40db22
  40db3c:	pop    eax
  40db3d:	div    BYTE PTR [eax]
  40db3f:	xchg   edx,eax
  40db40:	xlat   BYTE PTR ds:[ebx]
  40db41:	ret    0x737a
  40db44:	lahf   
  40db45:	lods   eax,DWORD PTR ds:[esi]
  40db46:	dec    ebp
  40db47:	test   BYTE PTR [ecx],bl
  40db49:	call   DWORD PTR ds:0x296dd760
  40db4f:	imul   ebp,esp,0xffffffe7
  40db52:	(bad)  
  40db53:	mov    eax,0xaa7ef9d1
  40db58:	push   esp
  40db59:	mov    esp,0xae885477
  40db5e:	pop    esp
  40db5f:	and    eax,0x9e00f73d
  40db64:	push   ds
  40db65:	pop    ecx
  40db66:	fimul  WORD PTR [esi-0x5a46c47f]
  40db6c:	shr    BYTE PTR [ecx+0x342cbcb0],1
  40db72:	retf   0x9077
  40db75:	inc    ebx
  40db76:	cdq    
  40db77:	mul    DWORD PTR [eax+0x56fd591d]
  40db7d:	mov    bh,0xe0
  40db7f:	cmp    BYTE PTR [eax+0x3d],0x63
  40db83:	inc    eax
  40db84:	push   esp
  40db85:	inc    edx
  40db86:	std    
  40db87:	jbe    0x40db9e
  40db89:	fadd   st,st(6)
  40db8b:	test   ebx,edi
  40db8d:	xchg   esi,eax
  40db8e:	xor    DWORD PTR [edx],eax
  40db90:	xchg   esi,eax
  40db91:	mov    ds:0xab0cad7c,al
  40db96:	adc    al,0xdc
  40db98:	cmc    
  40db99:	inc    esp
  40db9a:	sub    ah,BYTE PTR [eax-0x1f]
  40db9d:	and    ebp,DWORD PTR [ebx]
  40db9f:	xor    esp,ecx
  40dba1:	push   ss
  40dba2:	add    esp,edi
  40dba4:	ss mov edi,0xf23b7330
  40dbaa:	shr    DWORD PTR [edi-0x35dafb3f],1
  40dbb0:	dec    esp
  40dbb1:	ins    DWORD PTR es:[edi],dx
  40dbb2:	xlat   BYTE PTR ds:[ebx]
  40dbb3:	sbb    ecx,ebx
  40dbb5:	rcl    DWORD PTR [edx+0x17129e6a],0x64
  40dbbc:	fdivr  QWORD PTR [esp+ebx*8+0x34]
  40dbc0:	mov    edi,0x7179ff84
  40dbc5:	jl     0x40dc3a
  40dbc7:	or     DWORD PTR [ebp-0x2989b118],esi
  40dbcd:	lea    edx,[ebx]
  40dbcf:	ret    0xec3f
  40dbd2:	ror    BYTE PTR [ebx-0x11a670ac],1
  40dbd8:	ins    BYTE PTR es:[edi],dx
  40dbd9:	or     BYTE PTR [ebp-0x36],0xdd
  40dbdd:	pop    eax
  40dbde:	lahf   
  40dbdf:	xchg   edx,eax
  40dbe0:	fwait
  40dbe1:	inc    ebp
  40dbe2:	sub    dh,BYTE PTR [edi+0x61544ca2]
  40dbe8:	imul   esi,DWORD PTR [edx-0x4f],0x12772d6a
  40dbef:	les    esi,FWORD PTR [esi+0x4b]
  40dbf2:	cli    
  40dbf3:	and    BYTE PTR [esi+0x74],dh
  40dbf6:	out    dx,eax
  40dbf7:	iret   
  40dbf8:	and    cl,BYTE PTR [ebp-0x60]
  40dbfb:	jg     0x40dc79
  40dbfd:	or     DWORD PTR [ebp-0x16],edx
  40dc00:	jge    0x40dbe6
  40dc02:	(bad)  
  40dc03:	cmp    esi,0x6d990fcb
  40dc09:	or     BYTE PTR [ecx-0xa95c108],dh
  40dc0f:	sbb    al,0x8a
  40dc11:	and    DWORD PTR [edx+esi*4+0x7ed8a99b],edx
  40dc18:	xchg   esi,eax
  40dc19:	xor    DWORD PTR [edx],esp
  40dc1b:	fstp   st(5)
  40dc1d:	pop    es
  40dc1e:	cmp    DWORD PTR [ebp+0x6],esp
  40dc21:	mov    cl,bl
  40dc23:	mov    DWORD PTR [ebx],eax
  40dc25:	ja     0x40dc39
  40dc27:	js     0x40dbf6
  40dc29:	jbe    0x40dc33
  40dc2b:	mov    ds:0x6f389c8d,eax
  40dc30:	push   ecx
  40dc31:	pop    es
  40dc32:	ret    
  40dc33:	iret   
  40dc34:	dec    edx
  40dc35:	pop    es
  40dc36:	xor    BYTE PTR [edx],bl
  40dc38:	add    DWORD PTR [esi-0x50349f04],ecx
  40dc3e:	lds    esi,FWORD PTR [ecx+0x139089c7]
  40dc44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc45:	clc    
  40dc46:	(bad)  
  40dc48:	ret    0xe5ad
  40dc4b:	ins    DWORD PTR es:[edi],dx
  40dc4c:	adc    eax,0xdd79e10f
  40dc51:	inc    ebp
  40dc52:	pop    es
  40dc53:	icebp  
  40dc54:	dec    edx
  40dc55:	rcl    dh,1
  40dc57:	imul   ecx,DWORD PTR [esi],0xffffffc5
  40dc5a:	lahf   
  40dc5b:	adc    BYTE PTR [edi+ebx*4+0x71dd0e3a],cl
  40dc62:	repnz in eax,0xa2
  40dc65:	or     bh,BYTE PTR [di-0x7476]
  40dc6a:	jmp    0x40dc2e
  40dc6c:	cli    
  40dc6d:	pop    edx
  40dc6e:	(bad)  
  40dc6f:	iret   
  40dc70:	dec    ebp
  40dc71:	stos   DWORD PTR es:[edi],eax
  40dc72:	(bad)  
  40dc73:	pop    ebp
  40dc74:	pushf  
  40dc75:	mov    cl,0xa
  40dc77:	xchg   DWORD PTR [edi+0x72],esi
  40dc7a:	xor    BYTE PTR [esi+0x1354131d],0x6d
  40dc81:	jo     0x40dc0e
  40dc83:	push   ds
  40dc84:	in     eax,0x3
  40dc86:	shr    BYTE PTR [ecx-0x78],1
  40dc89:	ficomp WORD PTR [edx+0x5c]
  40dc8c:	mov    esi,DWORD PTR [edx+0x5a]
  40dc8f:	retf   0x1cde
  40dc92:	mov    BYTE PTR [esi-0x4a],ch
  40dc95:	ja     0x40dcf6
  40dc97:	mov    WORD PTR [edi],gs
  40dc99:	clc    
  40dc9a:	inc    eax
  40dc9b:	cmp    al,0xa0
  40dc9d:	adc    eax,0xac18d1bd
  40dca2:	outs   dx,BYTE PTR ds:[si]
  40dca4:	xlat   BYTE PTR ds:[ebx]
  40dca5:	mov    ds:0xccb24ed4,eax
  40dcaa:	aam    0x13
  40dcac:	jmp    0x40dd04
  40dcae:	dec    ecx
  40dcaf:	jbe    0x40dc99
  40dcb1:	xchg   esi,eax
  40dcb2:	mov    ebx,DWORD PTR [edx+ebp*1]
  40dcb5:	dec    edi
  40dcb6:	cmp    DWORD PTR [esi+0x1c],esp
  40dcb9:	xor    eax,DWORD PTR [ebp-0x49]
  40dcbc:	(bad)  
  40dcbd:	mov    ecx,0x9435d810
  40dcc2:	fadd   QWORD PTR ds:0x39e414a3
  40dcc8:	add    al,0xc0
  40dcca:	ret    0xb9ce
  40dccd:	aaa    
  40dcce:	(bad)  
  40dccf:	(bad)  
  40dcd0:	mov    ds,WORD PTR [esi]
  40dcd2:	repnz (bad) 
  40dcd4:	jmp    0x40dcd0
  40dcd6:	out    dx,al
  40dcd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcd8:	or     al,0xc6
  40dcda:	cdq    
  40dcdb:	loop   0x40dd32
  40dcdd:	cmp    al,0x9d
  40dcdf:	ins    DWORD PTR es:[edi],dx
  40dce0:	dec    ecx
  40dce1:	sub    dh,ch
  40dce3:	cmp    al,BYTE PTR [ecx+ebp*8-0xb]
  40dce7:	inc    esi
  40dce8:	jmp    0x40dc82
  40dcea:	xor    dh,BYTE PTR gs:[eax]
  40dced:	jmp    0xbc283231
  40dcf2:	in     eax,dx
  40dcf3:	dec    esp
  40dcf4:	arpl   WORD PTR [edx-0x48620e8],dx
  40dcfa:	dec    esi
  40dcfb:	xchg   esi,eax
  40dcfc:	or     al,BYTE PTR [ebp+0x632776ad]
  40dd02:	aam    0xe2
  40dd04:	sub    BYTE PTR [edi+0x2bf4d73e],al
  40dd0a:	ja     0x40dcdb
  40dd0c:	(bad)  
  40dd0d:	adc    esp,DWORD PTR [ecx-0x19]
  40dd10:	push   0xffffffd1
  40dd12:	dec    ecx
  40dd13:	push   ebp
  40dd14:	or     eax,0xd8e7736a
  40dd19:	jp     0x40dd82
  40dd1b:	xlat   BYTE PTR ds:[ebx]
  40dd1c:	sbb    al,BYTE PTR [eax-0x3ba7bde1]
  40dd22:	sub    edi,DWORD PTR [edi+ecx*4]
  40dd25:	mov    esp,0x4ba00cd1
  40dd2a:	fist   WORD PTR [edx+0x2316796b]
  40dd30:	or     eax,ecx
  40dd32:	dec    ecx
  40dd33:	lods   al,BYTE PTR ds:[esi]
  40dd34:	add    al,0x70
  40dd36:	add    eax,0x57a5b1ed
  40dd3b:	or     al,0xec
  40dd3d:	lahf   
  40dd3e:	jg     0x40dd8d
  40dd40:	out    0xae,al
  40dd42:	xchg   edx,eax
  40dd43:	iret   
  40dd44:	inc    edx
  40dd45:	or     ah,al
  40dd47:	js     0x40dd34
  40dd49:	ja     0x40dd66
  40dd4b:	in     al,dx
  40dd4c:	push   0x2f446c29
  40dd51:	dec    esi
  40dd52:	mov    edx,0x96668f
  40dd57:	xor    DWORD PTR [ecx+eiz*1+0x46],0x79d80a83
  40dd5f:	daa    
  40dd60:	pop    edi
  40dd61:	nop
  40dd62:	mov    ds:0x22ed0d6b,al
  40dd67:	rol    DWORD PTR [esi+0x53],cl
  40dd6a:	jbe    0x40dddc
  40dd6c:	lods   eax,DWORD PTR ds:[esi]
  40dd6d:	cmp    DWORD PTR [ecx+0x25],eax
  40dd70:	fstp   QWORD PTR [eax+0x5aeb4e6b]
  40dd76:	popa   
  40dd77:	aas    
  40dd78:	push   edi
  40dd79:	xor    esp,ebx
  40dd7b:	mov    edx,0xc4f86c4e
  40dd80:	mov    dl,0xb4
  40dd82:	sbb    dh,bh
  40dd84:	shl    DWORD PTR [ecx+0x68765ca8],0xa5
  40dd8b:	in     al,0x57
  40dd8d:	lods   al,BYTE PTR ds:[esi]
  40dd8e:	in     al,dx
  40dd8f:	or     esp,DWORD PTR [bp+0x8]
  40dd93:	sub    eax,edi
  40dd95:	jns    0x40dd58
  40dd97:	dec    eax
  40dd98:	jbe    0x40ddd6
  40dd9a:	aas    
  40dd9b:	mov    edi,0x4bdb4e4c
  40dda0:	xchg   DWORD PTR [ebp+ebx*1+0x679858dd],ebp
  40dda7:	push   esp
  40dda8:	sbb    cl,BYTE PTR [ebp-0x24]
  40ddab:	fwait
  40ddac:	popa   
  40ddad:	sbb    bh,bh
  40ddaf:	es push cs
  40ddb1:	imul   ebp,DWORD PTR [ecx],0x2c
  40ddb4:	cld    
  40ddb5:	fucomi st,st(3)
  40ddb7:	and    esp,esi
  40ddb9:	adc    ebx,DWORD PTR [edx+0x1a]
  40ddbc:	ins    DWORD PTR es:[edi],dx
  40ddbd:	addr16 (bad) 
  40ddbf:	fwait
  40ddc0:	pop    ebp
  40ddc1:	or     BYTE PTR [esi],al
  40ddc3:	mov    ecx,0x63bd4e1d
  40ddc8:	inc    esi
  40ddc9:	sbb    DWORD PTR [ebx],ebp
  40ddcb:	xor    eax,0x69f6fda4
  40ddd0:	mov    dl,0x5d
  40ddd2:	ret    
  40ddd3:	cwde   
  40ddd4:	and    al,0xf2
  40ddd6:	pop    esi
  40ddd7:	out    dx,al
  40ddd8:	mov    ch,0xbb
  40ddda:	adc    eax,0xb07de171
  40dddf:	jb     0x40de56
  40dde1:	stos   DWORD PTR es:[edi],eax
  40dde2:	sub    esp,DWORD PTR [ebp-0x97fb4e0]
  40dde8:	push   edi
  40dde9:	inc    edx
  40ddea:	xchg   ebp,eax
  40ddeb:	xor    esp,eax
  40dded:	xor    eax,0xa6411f56
  40ddf3:	adc    ecx,ebp
  40ddf5:	mov    ds:0xb2a66764,eax
  40ddfa:	test   eax,0xb4751d43
  40ddff:	or     al,0x11
  40de01:	pop    es
  40de02:	jns    0x40ddb7
  40de04:	jae    0x40dd97
  40de06:	es (bad) 
  40de09:	cwde   
  40de0a:	stos   DWORD PTR es:[edi],eax
  40de0b:	jno    0x40de66
  40de0d:	mov    eax,0x618f7fcf
  40de12:	sbb    al,0xfc
  40de14:	sub    DWORD PTR [eax],eax
  40de16:	test   DWORD PTR [edx-0x39],esi
  40de19:	or     esi,DWORD PTR [esi-0x479f86f3]
  40de1f:	push   0x70
  40de21:	pop    esp
  40de22:	inc    esi
  40de23:	mov    gs,edx
  40de25:	inc    esp
  40de26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de27:	int3   
  40de28:	scas   eax,DWORD PTR es:[edi]
  40de29:	xor    esp,DWORD PTR [ebx-0x416a7a98]
  40de2f:	add    al,0xfd
  40de32:	bound  edx,QWORD PTR [edi]
  40de34:	sahf   
  40de35:	addr16 jge 0x40de67
  40de38:	out    0x76,al
  40de3a:	and    esp,ebx
  40de3c:	sbb    eax,0xef3b59cc
  40de41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de42:	jp     0x40ddf2
  40de44:	push   es
  40de45:	sub    DWORD PTR [edi],esp
  40de47:	clc    
  40de48:	xchg   esp,eax
  40de49:	rcl    DWORD PTR [ecx-0x18],0x70
  40de4d:	(bad)  
  40de4e:	push   ss
  40de4f:	mov    eax,0x81f8a414
  40de54:	cmp    al,0xb8
  40de56:	inc    ebx
  40de57:	push   ecx
  40de58:	loop   0x40de52
  40de5a:	sahf   
  40de5b:	es pop esi
  40de5d:	aad    0x15
  40de5f:	jbe    0x40de31
  40de61:	fcmovu st,st(7)
  40de63:	add    BYTE PTR [edi],0x51
  40de66:	mov    ebx,esp
  40de68:	xlat   BYTE PTR ds:[ebx]
  40de69:	mov    ebp,0x14383f9d
  40de6e:	popf   
  40de6f:	dec    esi
  40de70:	jno    0x40de08
  40de72:	jns    0x40de23
  40de74:	add    al,BYTE PTR [ebx]
  40de76:	xchg   ecx,eax
  40de77:	fbld   TBYTE PTR [edx-0x55e4dd6]
  40de7d:	add    BYTE PTR [edi],bh
  40de7f:	mov    edi,ebp
  40de81:	sbb    eax,0x16b4e12e
  40de86:	push   0x55
  40de88:	out    dx,al
  40de89:	lods   eax,DWORD PTR ds:[esi]
  40de8a:	pop    ds
  40de8b:	call   0x92e3:0x51718770
  40de92:	mov    bl,0xf2
  40de94:	test   eax,0x8d4bf829
  40de99:	xchg   dl,dh
  40de9b:	push   esi
  40de9c:	mov    ch,dh
  40de9e:	out    0x83,eax
  40dea0:	iret   
  40dea1:	fdivr  QWORD PTR [eax+0x3a0bd92f]
  40dea7:	jmp    0xaaf6d2a8
  40deac:	dec    bl
  40deae:	mov    bh,0x46
  40deb0:	xchg   edi,eax
  40deb1:	mov    bl,0xd9
  40deb3:	push   ebx
  40deb4:	ins    BYTE PTR es:[edi],dx
  40deb5:	fs clc 
  40deb7:	jg     0x40de9a
  40deb9:	push   ds
  40deba:	push   ss
  40debb:	add    esi,ebx
  40debd:	push   es
  40debe:	add    cl,bl
  40dec0:	add    BYTE PTR [esi+0x72],dl
  40dec3:	jae    0x40de9f
  40dec5:	(bad)  
  40dec6:	mov    ecx,0x4a73aca9
  40decb:	ins    DWORD PTR es:[edi],dx
  40decc:	fcomi  st,st(4)
  40dece:	dec    edi
  40decf:	and    BYTE PTR [ebx+0x61],0x3e
  40ded3:	jge    0x40df1b
  40ded5:	sbb    bh,bh
  40ded7:	sbb    bh,bl
  40ded9:	fidivr DWORD PTR ds:0x4228ecc0
  40dedf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dee0:	cmp    eax,0xc8620d0
  40dee5:	add    BYTE PTR [ebx-0x1c26b49c],0xa8
  40deec:	adc    al,0xca
  40deee:	mov    al,ds:0xc2ef6071
  40def3:	xchg   ebp,eax
  40def4:	rol    BYTE PTR [ebp+0x73],0xf0
  40def8:	jle    0x40deac
  40defa:	mov    DWORD PTR [esi],esi
  40defc:	and    ah,BYTE PTR [ecx]
  40defe:	(bad)  
  40df00:	mov    ecx,0x9356a39a
  40df05:	out    0x18,al
  40df07:	sbb    BYTE PTR [edx],cl
  40df09:	sti    
  40df0a:	jg     0x40deb8
  40df0c:	shr    DWORD PTR [esi],1
  40df0e:	xchg   ebx,eax
  40df0f:	jno    0x40deeb
  40df11:	aam    0xe2
  40df13:	mov    bl,BYTE PTR ds:0x56ce76ec
  40df19:	inc    esi
  40df1a:	cld    
  40df1b:	popf   
  40df1c:	push   edx
  40df1d:	cmp    al,0x44
  40df1f:	or     esi,DWORD PTR gs:[ebx+0x21]
  40df23:	xchg   esp,eax
  40df24:	shl    DWORD PTR ds:[edi+0x1e],0xd4
  40df29:	dec    edi
  40df2a:	mov    esp,0x9c40928b
  40df2f:	out    0xf6,eax
  40df31:	cli    
  40df32:	in     eax,dx
  40df33:	loop   0x40df3d
  40df35:	cld    
  40df36:	dec    esi
  40df37:	jge    0x40df9e
  40df39:	or     BYTE PTR [ebx],ch
  40df3b:	push   ds
  40df3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df3d:	out    0x12,eax
  40df3f:	shl    DWORD PTR [ebx+0x4d],0x14
  40df43:	stos   BYTE PTR es:[edi],al
  40df44:	cdq    
  40df45:	push   cs
  40df46:	sti    
  40df47:	inc    ebp
  40df48:	xchg   esi,eax
  40df49:	sbb    BYTE PTR ds:0x2d2cd9ca,dh
  40df4f:	mov    esp,0x161cb187
  40df54:	jae    0x40df29
  40df56:	ret    0x158f
  40df59:	and    eax,0x6da005c
  40df5e:	add    bh,dl
  40df60:	fsubr  st,st(3)
  40df62:	sub    ebx,0x63
  40df65:	and    al,0x74
  40df67:	xchg   DWORD PTR [esi],ebx
  40df69:	leave  
  40df6a:	aaa    
  40df6b:	jle    0x40dfbb
  40df6d:	mov    ah,BYTE PTR [ebx]
  40df6f:	adc    bl,BYTE PTR [esi-0x51]
  40df72:	aaa    
  40df73:	xor    al,0x4d
  40df75:	push   0x91b64d58
  40df7a:	push   eax
  40df7b:	pop    ebx
  40df7c:	adc    ch,BYTE PTR [ebp-0x5be38eda]
  40df82:	adc    ebx,esi
  40df84:	pop    edx
  40df85:	ss test al,0xf
  40df88:	pop    ss
  40df89:	daa    
  40df8a:	xor    eax,0xc4b46091
  40df8f:	sub    eax,edx
  40df91:	xor    ecx,DWORD PTR [edx+0x6ccbcd1f]
  40df97:	sbb    ah,BYTE PTR [edi-0x68010768]
  40df9d:	enter  0x3dee,0xed
  40dfa1:	push   es
  40dfa2:	fwait
  40dfa3:	nop
  40dfa4:	pop    es
  40dfa5:	jmp    0xb8b3:0x3a46dbe
  40dfac:	fs fwait
  40dfae:	mov    ds:0x35608a9b,al
  40dfb3:	mov    ebx,0xb9432b44
  40dfb8:	in     eax,0xaa
  40dfba:	rol    ah,cl
  40dfbc:	(bad)  
  40dfbd:	jmp    0x40df6e
  40dfbf:	cmp    cl,0x89
  40dfc2:	xor    al,0xe2
  40dfc4:	and    eax,0xf6870ef1
  40dfc9:	dec    edi
  40dfca:	int3   
  40dfcb:	imul   edi
  40dfcd:	ret    
  40dfce:	popa   
  40dfcf:	pushf  
  40dfd0:	inc    ebx
  40dfd1:	jns    0x40df86
  40dfd3:	lea    esi,[esi+0x2c3d7ea2]
  40dfd9:	stos   DWORD PTR es:[edi],eax
  40dfda:	test   esp,ebx
  40dfdc:	push   ecx
  40dfdd:	arpl   WORD PTR [edx-0x54],bp
  40dfe0:	and    dl,BYTE PTR [esp]
  40dfe3:	dec    ecx
  40dfe4:	xchg   edi,eax
  40dfe5:	sub    BYTE PTR ds:0xb2203d5d,bl
  40dfeb:	pop    esp
  40dfec:	adc    bl,BYTE PTR [ebx]
  40dfee:	inc    esi
  40dfef:	aad    0xcc
  40dff1:	popf   
  40dff2:	enter  0xef24,0x69
  40dff6:	retf   
  40dff7:	mov    ah,0x6f
  40dff9:	ins    BYTE PTR es:[edi],dx
  40dffa:	xchg   ecx,eax
  40dffb:	adc    al,0x61
  40dffd:	pusha  
  40dffe:	xlat   BYTE PTR ds:[ebx]
  40dfff:	icebp  
  40e000:	mov    ch,0xab
  40e002:	ret    
  40e003:	jo     0x40e063
  40e005:	dec    ebx
  40e006:	mov    ah,0x78
  40e008:	call   0x7814:0xe0122365
  40e00f:	cwde   
  40e010:	sbb    al,0xbf
  40e012:	(bad)  
  40e013:	sar    BYTE PTR [eax+0x67e3064d],1
  40e019:	inc    edi
  40e01a:	out    dx,eax
  40e01b:	pop    edi
  40e01c:	loopne 0x40e041
  40e01e:	pushf  
  40e01f:	loop   0x40e02b
  40e021:	aad    0x59
  40e023:	and    BYTE PTR ds:0x4b51b00d,dh
  40e029:	inc    eax
  40e02a:	out    0x1e,eax
  40e02c:	sbb    eax,esp
  40e02e:	cmp    al,0x22
  40e030:	pop    ds
  40e031:	xor    al,0xe3
  40e033:	inc    esp
  40e034:	popf   
  40e035:	xchg   ebx,eax
  40e036:	cld    
  40e037:	push   eax
  40e038:	or     BYTE PTR [eax-0x20c47849],ch
  40e03e:	aaa    
  40e03f:	cwde   
  40e040:	hlt    
  40e041:	cdq    
  40e042:	dec    eax
  40e043:	fwait
  40e044:	das    
  40e045:	pop    edi
  40e046:	pop    ss
  40e047:	pop    es
  40e048:	xor    al,0x82
  40e04a:	call   0x194459fa
  40e04f:	pop    eax
  40e050:	xlat   BYTE PTR ds:[ebx]
  40e051:	mov    ds:0xc3a7f453,eax
  40e056:	xchg   BYTE PTR [eax-0x45],ch
  40e059:	(bad)  
  40e05b:	sbb    al,0x6f
  40e05d:	xchg   edi,eax
  40e05e:	push   0x1a952c5
  40e063:	frstor [esi]
  40e065:	mov    eax,0x43adf45a
  40e06a:	fisttp QWORD PTR [ebx-0x1c]
  40e06d:	adc    BYTE PTR [esi],al
  40e06f:	cmp    al,BYTE PTR [ebp-0x53]
  40e072:	push   0x1f
  40e074:	test   al,0x33
  40e076:	xor    eax,0x4d3f496
  40e07b:	frstor [edi]
  40e07d:	sub    al,0xcb
  40e07f:	jg     0x40e028
  40e081:	or     ah,bh
  40e083:	aaa    
  40e084:	call   0x2319:0x74ff5409
  40e08b:	mov    eax,0x4f62c726
  40e090:	int    0x91
  40e092:	mov    edx,0x73f2db87
  40e097:	enter  0xc39e,0x82
  40e09b:	cmp    eax,0xb0d9c2c2
  40e0a0:	mov    bh,0x1b
  40e0a2:	cmp    DWORD PTR [edx],edx
  40e0a4:	push   cs
  40e0a5:	ret    0xbb68
  40e0a8:	cs xchg ecx,eax
  40e0aa:	sub    BYTE PTR [edi+0x597c1f52],ah
  40e0b0:	(bad)  
  40e0b1:	gs je  0x40e0d1
  40e0b4:	fs inc eax
  40e0b6:	addr16 dec eax
  40e0b8:	dec    BYTE PTR [ecx-0x571ba74c]
  40e0be:	cmp    DWORD PTR [ebp+0x4adc6893],edi
  40e0c4:	ja     0x40e054
  40e0c6:	hlt    
  40e0c7:	adc    ebx,DWORD PTR [eax+0x76]
  40e0ca:	lea    esi,[eax]
  40e0cc:	lea    edx,[edi+esi*8+0x6d]
  40e0d0:	sar    BYTE PTR [edx+0x3fe3eae9],cl
  40e0d6:	inc    ebx
  40e0d7:	sahf   
  40e0d8:	xor    DWORD PTR [eax-0x7e],ecx
  40e0db:	into   
  40e0dc:	and    eax,0xcc7974df
  40e0e1:	out    0xb6,al
  40e0e3:	jecxz  0x40e11c
  40e0e5:	mov    ds:0x1379ecd7,al
  40e0ea:	sub    BYTE PTR [eax],dh
  40e0ec:	inc    edx
  40e0ed:	les    esp,FWORD PTR [ebp+edx*1+0x7a95bd9f]
  40e0f4:	mov    ebx,0x671963f3
  40e0f9:	adc    al,0x40
  40e0fb:	daa    
  40e0fc:	jge    0x40e176
  40e0fe:	stos   DWORD PTR es:[edi],eax
  40e0ff:	bound  ebp,QWORD PTR [ecx+0x24]
  40e102:	cmp    eax,0x199024dc
  40e107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e108:	cmp    bl,BYTE PTR [esi+eiz*8-0x1]
  40e10c:	call   0x8c49:0xf5abfdee
  40e113:	jge    0x40e145
  40e115:	xor    cl,BYTE PTR [edi+eiz*1]
  40e118:	(bad)  
  40e119:	mov    ?,esp
  40e11b:	jp     0x40e153
  40e11d:	ret    0x5aab
  40e120:	dec    eax
  40e121:	pop    DWORD PTR [eax]
  40e123:	mov    bl,0xae
  40e125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e126:	inc    ecx
  40e127:	out    dx,eax
  40e128:	loopne 0x40e0d0
  40e12a:	(bad)  
  40e12b:	sti    
  40e12c:	xchg   esi,esp
  40e12e:	arpl   WORD PTR [ebp+0x5aea792b],ax
  40e134:	leave  
  40e135:	enter  0x21f,0xaa
  40e139:	shl    BYTE PTR [ebx+ecx*8+0x71412a59],0x62
  40e141:	mov    eax,0x7c2dbc56
  40e146:	sbb    edx,DWORD PTR [ebp+0x49]
  40e149:	mov    ds:0xb2839a87,eax
  40e14e:	inc    edi
  40e14f:	mov    cl,bl
  40e151:	mov    edi,0xe13a18f8
  40e156:	call   0x9d2cf768
  40e15b:	pop    edi
  40e15c:	push   es
  40e15d:	bound  eax,QWORD PTR [eax-0x7cb24fe8]
  40e163:	fwait
  40e164:	push   ebx
  40e165:	mov    dl,0xad
  40e167:	add    BYTE PTR [ebx],ah
  40e169:	inc    edx
  40e16a:	scas   al,BYTE PTR es:[edi]
  40e16b:	xor    esi,ecx
  40e16d:	sub    DWORD PTR [edi-0x16],0xbf8a4fa9
  40e174:	fstp   DWORD PTR [edx+0x2]
  40e177:	xchg   esp,eax
  40e178:	xor    DWORD PTR ds:0x68b30afa,edx
  40e17e:	sub    edx,DWORD PTR [eax-0x7a]
  40e181:	retf   
  40e182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e183:	add    eax,0xdba6e1bb
  40e188:	dec    esp
  40e189:	mov    ?,WORD PTR [esi+0x14]
  40e18c:	xor    al,0xfd
  40e18e:	push   eax
  40e18f:	imul   eax,eax,0x1a21bf5e
  40e195:	(bad)
  40e198:	jmp    0x310d119b
  40e19d:	jmp    DWORD PTR [eax+0x403e7b92]
  40e1a3:	inc    edi
  40e1a4:	cmp    dl,BYTE PTR [eax]
  40e1a6:	xchg   DWORD PTR [ebx+0x7db0dd28],ecx
  40e1ac:	rcl    DWORD PTR [eax+ebp*8+0x5192ade3],1
  40e1b3:	dec    ecx
  40e1b4:	cmp    eax,0x69d97336
  40e1b9:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1bb:	mov    ebx,0x407eac9
  40e1c0:	dec    ecx
  40e1c1:	jbe    0x40e1ee
  40e1c3:	lahf   
  40e1c4:	repnz inc esp
  40e1c6:	xor    ecx,DWORD PTR [edi-0x3f0b64f5]
  40e1cc:	jge    0x40e219
  40e1ce:	rcl    BYTE PTR [eax-0x48],0xfd
  40e1d2:	fwait
  40e1d3:	loop   0x40e1bf
  40e1d5:	or     DWORD PTR [ecx],esp
  40e1d7:	cmp    ebp,DWORD PTR [esi-0x7c]
  40e1da:	popf   
  40e1db:	adc    DWORD PTR [ecx+0x47d71fa2],esi
  40e1e1:	hlt    
  40e1e2:	dec    esp
  40e1e3:	push   0xfd459425
  40e1e8:	jns    0x40e238
  40e1ea:	mov    edx,0xb5558b28
  40e1ef:	or     BYTE PTR [ebp-0x2e],cl
  40e1f2:	push   ebp
  40e1f3:	outs   dx,DWORD PTR ds:[esi]
  40e1f4:	adc    BYTE PTR [eax],bl
  40e1f6:	jmp    0x6a8e:0x757144e
  40e1fd:	icebp  
  40e1fe:	outs   dx,BYTE PTR ds:[esi]
  40e1ff:	and    eax,edx
  40e201:	arpl   WORD PTR [edi-0x73],si
  40e204:	out    0xd0,eax
  40e206:	cwde   
  40e207:	in     al,dx
  40e208:	fdivr  DWORD PTR [ebp+0x1ab1a0c7]
  40e20e:	inc    ecx
  40e20f:	ja     0x40e1ed
  40e211:	dec    ecx
  40e212:	ds js  0x40e1ac
  40e215:	shr    BYTE PTR [esi-0x48],cl
  40e218:	scas   al,BYTE PTR es:[edi]
  40e219:	sub    BYTE PTR [ebx+0x2645fa1c],dh
  40e21f:	or     BYTE PTR [eax-0x3a],0x62
  40e223:	mov    esi,0x4a2ffa54
  40e228:	shl    DWORD PTR [edi+edi*1-0x7e],1
  40e22c:	xor    bh,bh
  40e22e:	retf   0xeedb
  40e231:	bound  ebp,QWORD PTR [eax-0x492a45f0]
  40e237:	xor    edi,DWORD PTR [edx]
  40e239:	and    al,0x97
  40e23b:	call   0x18f00ef0
  40e240:	adc    bh,BYTE PTR [edi]
  40e242:	fstp   QWORD PTR [edi-0x3772f5df]
  40e248:	les    ebp,FWORD PTR ds:0xc32580c9
  40e24e:	clc    
  40e24f:	push   es
  40e250:	dec    esp
  40e251:	(bad)  
  40e252:	jns    0x40e27b
  40e254:	inc    edx
  40e255:	out    0x10,al
  40e257:	xor    esi,ecx
  40e259:	mov    dl,0x64
  40e25b:	stos   DWORD PTR es:[edi],eax
  40e25c:	adc    DWORD PTR [ebx+eiz*8],ebp
  40e25f:	popa   
  40e260:	ss push edx
  40e262:	fidivr WORD PTR [ebp-0x3f]
  40e265:	jae    0x40e2ab
  40e267:	dec    esp
  40e268:	mov    ds:0xc1ea8e4e,al
  40e26d:	add    dl,BYTE PTR [edx-0x75]
  40e270:	sahf   
  40e271:	add    edi,ecx
  40e273:	fiadd  WORD PTR [ebx-0x7b]
  40e276:	dec    ebp
  40e277:	mov    eax,0x8ef59aa5
  40e27c:	dec    edi
  40e27d:	xchg   edx,edi
  40e27f:	mov    dh,0xbf
  40e281:	and    esp,DWORD PTR [ebx+0x2cb990c7]
  40e287:	pop    ecx
  40e288:	test   al,0xab
  40e28a:	sbb    ah,BYTE PTR [ebx+esi*2]
  40e28d:	jecxz  0x40e281
  40e28f:	ins    DWORD PTR es:[edi],dx
  40e290:	dec    esp
  40e291:	xchg   ebp,eax
  40e292:	sar    DWORD PTR [ebp+0x1],0xcd
  40e296:	int3   
  40e297:	cmp    bl,0x4c
  40e29a:	and    eax,0x9ec07cbe
  40e29f:	in     al,0x3c
  40e2a1:	or     dl,BYTE PTR [eax+0x75bef2f5]
  40e2a7:	pusha  
  40e2a8:	ins    BYTE PTR es:[edi],dx
  40e2a9:	repnz das 
  40e2ab:	adc    DWORD PTR [edi+ebp*8],0xbe0512dc
  40e2b2:	push   edi
  40e2b3:	shl    BYTE PTR [edi-0x56b5593f],cl
  40e2b9:	sbb    eax,0xf6d4b713
  40e2be:	xchg   esi,eax
  40e2bf:	add    BYTE PTR [ebp-0x213eea57],cl
  40e2c5:	dec    edi
  40e2c6:	add    BYTE PTR [ebx+edi*1],ah
  40e2c9:	push   edi
  40e2ca:	aad    0x80
  40e2cc:	lea    edx,[ebp+0x1a]
  40e2cf:	mov    BYTE PTR [edi+0x43ffcc68],ah
  40e2d5:	mov    al,0x5e
  40e2d7:	sub    al,0x35
  40e2d9:	std    
  40e2da:	inc    ecx
  40e2db:	daa    
  40e2dc:	mov    dl,0x42
  40e2de:	push   cs
  40e2df:	and    BYTE PTR [edi+esi*1],bl
  40e2e2:	adc    ch,al
  40e2e4:	or     al,BYTE PTR [ebx-0x1ae7da64]
  40e2ea:	sub    esi,ebp
  40e2ec:	inc    edx
  40e2ed:	push   ds
  40e2ee:	(bad)  
  40e2ef:	xor    esp,DWORD PTR [eax+0x4a]
  40e2f2:	mov    edx,0xc212531a
  40e2f7:	mov    ?,esp
  40e2f9:	fsub   QWORD PTR [esi+0x30fb4084]
  40e2ff:	cld    
  40e300:	adc    DWORD PTR [ebx],esi
  40e302:	arpl   bx,dx
  40e304:	lds    edi,FWORD PTR [ecx+0x563b744b]
  40e30a:	and    edi,DWORD PTR [edx+0x53]
  40e30d:	ins    DWORD PTR es:[edi],dx
  40e30e:	adc    BYTE PTR [ecx],cl
  40e310:	mov    ebx,0x6610c44e
  40e315:	fidivr DWORD PTR [esp+eax*1+0x7ce554d9]
  40e31c:	mov    esp,0xda2375d0
  40e321:	popf   
  40e322:	(bad)  
  40e323:	hlt    
  40e324:	loope  0x40e2c9
  40e326:	xor    al,0xb9
  40e328:	shl    DWORD PTR [edx],0x3
  40e32b:	jo     0x40e340
  40e32d:	adc    DWORD PTR [edx],ebp
  40e32f:	repnz test al,0x13
  40e332:	mov    al,dh
  40e334:	ins    BYTE PTR es:[edi],dx
  40e335:	dec    edi
  40e336:	sub    al,0x34
  40e338:	retf   
  40e339:	inc    esp
  40e33a:	in     eax,0xc6
  40e33c:	popa   
  40e33d:	xchg   DWORD PTR [esi+0x55b5a5ab],ecx
  40e343:	and    DWORD PTR [esi*8+0x1348d0c7],ecx
  40e34a:	data16 mov ch,al
  40e34d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e34e:	mov    al,0x6
  40e350:	inc    ecx
  40e351:	(bad)  
  40e352:	sub    al,0x30
  40e354:	jl     0x40e2ec
  40e356:	lods   eax,DWORD PTR ds:[esi]
  40e357:	cs mov edx,0xa9e00606
  40e35d:	call   0xe511f7ed
  40e362:	paddb  mm7,QWORD PTR [ebx+0x2d]
  40e366:	jg     0x40e2e9
  40e368:	(bad)  
  40e36b:	ret    0x6930
  40e36e:	mov    BYTE PTR [esi+0x30dc3c2a],al
  40e374:	inc    ecx
  40e375:	jno    0x40e393
  40e377:	jmp    0x915d:0x21cbc53b
  40e37e:	push   esp
  40e37f:	sub    ch,BYTE PTR [di-0x45]
  40e383:	xchg   BYTE PTR [edi-0x72b9378b],ah
  40e389:	mul    BYTE PTR [edx-0x6cb3642c]
  40e38f:	sahf   
  40e390:	rcl    dh,1
  40e392:	sbb    al,0x20
  40e394:	(bad)  
  40e395:	push   0x90d257f8
  40e39a:	fistp  WORD PTR [edi-0x5f]
  40e39d:	adc    esi,DWORD PTR [edx-0x3e8edb64]
  40e3a3:	jmp    0x40e413
  40e3a5:	sbb    BYTE PTR [esi-0x17],dh
  40e3a8:	jae    0x40e344
  40e3aa:	sub    BYTE PTR [esi+0x4e8f1c73],ch
  40e3b0:	sbb    BYTE PTR [ebx+0x12],0xc5
  40e3b4:	sub    DWORD PTR [edx+0x4],0x53876228
  40e3bb:	stos   DWORD PTR es:[edi],eax
  40e3bc:	dec    edx
  40e3bd:	les    esi,FWORD PTR [ebp+0x30dcb062]
  40e3c3:	int3   
  40e3c4:	inc    eax
  40e3c5:	adc    DWORD PTR [ebp-0x21d3cd23],esp
  40e3cb:	les    ebp,FWORD PTR [eax-0xa]
  40e3ce:	xlat   BYTE PTR ds:[ebx]
  40e3cf:	xchg   esi,eax
  40e3d0:	cmp    edx,DWORD PTR [ebp+0x56]
  40e3d3:	mov    esi,DWORD PTR [esi+ebp*2]
  40e3d6:	jo     0x40e43e
  40e3d8:	cmp    eax,0x80e733
  40e3dd:	and    al,0x0
  40e3df:	jbe    0x40e3cd
  40e3e1:	loope  0x40e400
  40e3e3:	clc    
  40e3e4:	sub    eax,0x446bf7a2
  40e3e9:	push   cs
  40e3ea:	push   eax
  40e3eb:	ja     0x40e434
  40e3ed:	adc    BYTE PTR [ebx-0xc],bl
  40e3f0:	inc    bp
  40e3f2:	pop    ss
  40e3f3:	jl     0x40e399
  40e3f5:	push   edi
  40e3f6:	xchg   edx,eax
  40e3f7:	mov    BYTE PTR [edi+0x6a],al
  40e3fa:	add    dh,cl
  40e3fc:	hlt    
  40e3fd:	fsub   st(7),st
  40e3ff:	mov    esp,0xbfaee1f2
  40e404:	xor    BYTE PTR [esi],cl
  40e406:	xchg   ebp,eax
  40e407:	pop    esp
  40e408:	in     eax,dx
  40e409:	pop    esp
  40e40a:	mov    ds:0x29fe3c95,eax
  40e40f:	aas    
  40e410:	cld    
  40e411:	pop    ds
  40e412:	dec    eax
  40e413:	or     DWORD PTR [ebp-0x70],0x3b9bcb2d
  40e41a:	push   ecx
  40e41b:	inc    esp
  40e41c:	stos   BYTE PTR es:[edi],al
  40e41d:	pop    ebx
  40e41e:	and    DWORD PTR [edi+0x3e1ced66],0xffffffd6
  40e425:	(bad)  
  40e427:	mov    ds:0x3e5d9399,eax
  40e42c:	mov    esp,0x885005fd
  40e431:	pop    ebp
  40e432:	mov    bh,ah
  40e434:	or     BYTE PTR [edi-0x5a],dl
  40e437:	xchg   ebp,eax
  40e438:	sub    BYTE PTR ss:[eax+0x64e78223],al
  40e43f:	fld    DWORD PTR [ecx-0x1aea7aa0]
  40e445:	mov    ebp,0x96dbe7ed
  40e44a:	lock inc esp
  40e44c:	lods   eax,DWORD PTR ds:[esi]
  40e44d:	cwde   
  40e44e:	dec    esi
  40e44f:	outs   dx,DWORD PTR ds:[esi]
  40e450:	sahf   
  40e451:	or     BYTE PTR [edx-0x6b],al
  40e454:	cmp    dl,al
  40e456:	test   al,0x82
  40e458:	sub    eax,0x90216ae8
  40e45d:	retf   
  40e45e:	cmp    dh,BYTE PTR [ebp-0x2e]
  40e461:	sub    esi,DWORD PTR [edi]
  40e463:	out    0x6d,eax
  40e465:	sbb    eax,0x8f6bcebd
  40e46a:	mov    ?,WORD PTR [edx-0x2740f4cf]
  40e470:	inc    eax
  40e471:	ins    BYTE PTR es:[edi],dx
  40e472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e473:	icebp  
  40e474:	or     ecx,DWORD PTR [ebx]
  40e476:	xchg   BYTE PTR [edx-0x57],bh
  40e479:	inc    esi
  40e47a:	push   ds
  40e47b:	out    0xfd,al
  40e47d:	fisubr WORD PTR [esi+0x696c4d40]
  40e483:	mov    ebx,0x5414b22c
  40e488:	rcr    DWORD PTR [eax-0x4c032670],0xb2
  40e48f:	ret    
  40e490:	hlt    
  40e491:	jb     0x40e4ec
  40e493:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e495:	lea    ecx,[edi]
  40e497:	push   edx
  40e498:	ds nop
  40e49a:	or     BYTE PTR [edx+0x5836368c],0x70
  40e4a1:	push   esp
  40e4a2:	adc    ebp,ecx
  40e4a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4a5:	and    ebx,DWORD PTR [edx]
  40e4a7:	out    dx,al
  40e4a8:	inc    ecx
  40e4a9:	stc    
  40e4aa:	pop    ebx
  40e4ab:	adc    cl,bl
  40e4ad:	in     eax,dx
  40e4ae:	popf   
  40e4af:	mov    ecx,0xc6da0e3d
  40e4b4:	ret    
  40e4b5:	and    esi,DWORD PTR [esi-0x2f]
  40e4b8:	std    
  40e4b9:	mov    bh,dh
  40e4bb:	cmc    
  40e4bc:	sbb    al,0x20
  40e4be:	or     DWORD PTR [ecx+0x3b5c394b],ecx
  40e4c4:	sbb    eax,0xf22b0171
  40e4c9:	xchg   ecx,eax
  40e4ca:	xchg   ebp,eax
  40e4cb:	ret    
  40e4cc:	xchg   DWORD PTR [edx+0x2b],ebx
  40e4cf:	in     al,0x92
  40e4d1:	push   ebp
  40e4d2:	adc    ecx,eax
  40e4d4:	adc    DWORD PTR [ebp-0x2d],esi
  40e4d7:	mov    ah,0xdb
  40e4d9:	test   dh,0x6a
  40e4dc:	sti    
  40e4dd:	mov    fs,WORD PTR [ebp-0x4c]
  40e4e0:	ret    0x7489
  40e4e3:	jns    0x40e50a
  40e4e5:	jp     0x40e4a0
  40e4e7:	pop    ss
  40e4e8:	stos   DWORD PTR es:[edi],eax
  40e4e9:	ret    0x7306
  40e4ec:	js     0x40e490
  40e4ee:	jae    0x40e4e9
  40e4f0:	mov    al,0x83
  40e4f2:	lods   al,BYTE PTR ds:[esi]
  40e4f3:	xchg   esp,eax
  40e4f4:	jmp    0x6280:0x1a9371ef
  40e4fb:	xor    DWORD PTR [ebx+0x6e2748a7],edx
  40e501:	ss popf 
  40e503:	xchg   cl,dl
  40e505:	nop
  40e506:	std    
  40e507:	xchg   BYTE PTR [ebp-0xf],dh
  40e50a:	cs clc 
  40e50c:	xchg   ecx,edx
  40e50e:	push   cs
  40e50f:	xchg   DWORD PTR [ecx],ebp
  40e511:	leave  
  40e512:	fwait
  40e513:	ret    0x58df
  40e516:	mov    ebp,0x1f785628
  40e51b:	daa    
  40e51c:	pop    ds
  40e51d:	lods   eax,DWORD PTR ds:[esi]
  40e51e:	xchg   ecx,eax
  40e51f:	rol    ebx,1
  40e521:	pusha  
  40e522:	es ss push edx
  40e525:	(bad)  
  40e526:	mov    bh,0x64
  40e528:	test   BYTE PTR [ebx],0x15
  40e52b:	sbb    DWORD PTR [edx],edi
  40e52d:	dec    ecx
  40e52e:	cmp    BYTE PTR [edx],bl
  40e530:	bound  ebp,QWORD PTR ds:0xa3084aa2
  40e537:	dec    BYTE PTR [ecx+eax*1-0x3ad83094]
  40e53e:	rcr    BYTE PTR [edi-0x67],cl
  40e541:	inc    ebp
  40e542:	lahf   
  40e543:	int    0x89
  40e545:	lock dec ecx
  40e547:	push   0xffffffbe
  40e549:	out    dx,eax
  40e54a:	retf   
  40e54b:	popa   
  40e54c:	dec    edx
  40e54d:	pop    esp
  40e54e:	xor    eax,0x7112b458
  40e553:	lock popf 
  40e555:	sub    al,0xd1
  40e557:	or     DWORD PTR [esi-0x3c],eax
  40e55a:	out    0xfe,al
  40e55c:	pop    edi
  40e55d:	mov    ch,0x6d
  40e55f:	lds    edi,FWORD PTR [esi-0x1c]
  40e562:	adc    dl,BYTE PTR ds:0x31d7a2a8
  40e568:	mov    ebp,0x3aedd59a
  40e56d:	pop    esp
  40e56e:	arpl   ax,dx
  40e570:	sbb    BYTE PTR [edi+0x4f],ah
  40e573:	ficomp DWORD PTR [ebp+ebx*4+0x4a]
  40e577:	dec    ebp
  40e578:	or     ch,BYTE PTR [esi+ebp*4]
  40e57b:	mov    ah,BYTE PTR [eax]
  40e57d:	inc    edi
  40e57e:	cmp    ecx,DWORD PTR [edx-0x9]
  40e581:	jp     0x40e5d1
  40e583:	pop    edx
  40e584:	adc    BYTE PTR [esi+0x7165a044],ch
  40e58a:	dec    ebx
  40e58b:	xchg   esp,eax
  40e58c:	repz jne 0x40e5eb
  40e58f:	cmp    eax,0xe50c4e0b
  40e594:	icebp  
  40e595:	dec    edi
  40e596:	pushf  
  40e597:	xchg   edi,eax
  40e598:	xchg   esp,eax
  40e599:	not    BYTE PTR [ebp-0x42975118]
  40e59f:	mov    eax,0x2c8ce2e1
  40e5a4:	xchg   ebx,eax
  40e5a5:	mov    bl,0x82
  40e5a7:	cmp    dl,BYTE PTR [edi-0x7c08bbc1]
  40e5ad:	ret    
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	adc    ebx,DWORD PTR [esi+ecx*1-0x31]
  40e5b3:	jge    0x40e5e8
  40e5b5:	jle    0x40e57f
  40e5b7:	rcr    DWORD PTR [esi-0x3f],cl
  40e5ba:	push   ss
  40e5bb:	push   esp
  40e5bc:	daa    
  40e5bd:	or     eax,0xa8a5f969
  40e5c2:	adc    eax,0x85a2915e
  40e5c7:	leave  
  40e5c8:	in     al,0x5d
  40e5ca:	jno    0x40e5ba
  40e5cc:	mov    BYTE PTR [ebx+0x39396b2f],0xd8
  40e5d3:	inc    edi
  40e5d4:	jne    0x40e582
  40e5d6:	push   esp
  40e5d7:	pushf  
  40e5d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5d9:	ss aad 0x40
  40e5dc:	sbb    edi,DWORD PTR [eax+0x5d]
  40e5df:	pop    ebx
  40e5e0:	repz mov ds:0xf80f2f4,eax
  40e5e6:	push   ds
  40e5e7:	das    
  40e5e8:	cmp    al,0x1a
  40e5ea:	mov    dh,0x4
  40e5ec:	sub    edi,DWORD PTR [ebx+0x72bff666]
  40e5f2:	inc    esp
  40e5f3:	inc    esi
  40e5f4:	fnstcw WORD PTR [edx-0x1dd752e3]
  40e5fa:	push   es
  40e5fb:	loope  0x40e650
  40e5fd:	test   eax,0xcd3b8e33
  40e602:	ss cdq 
  40e604:	ja     0x40e623
  40e606:	dec    eax
  40e607:	rep lods al,BYTE PTR ds:[esi]
  40e609:	inc    edi
  40e60a:	scas   al,BYTE PTR es:[edi]
  40e60b:	icebp  
  40e60c:	sub    DWORD PTR [edi],edi
  40e60e:	ss add al,0xb0
  40e611:	enter  0x1e7f,0x5
  40e615:	scas   eax,DWORD PTR es:[edi]
  40e616:	into   
  40e617:	arpl   WORD PTR [esi+0x76],ax
  40e61a:	daa    
  40e61b:	xchg   ecx,eax
  40e61c:	sub    edi,DWORD PTR [esi+0xe]
  40e61f:	test   al,0x4e
  40e621:	test   BYTE PTR [ebx],dl
  40e623:	loop   0x40e5e2
  40e625:	outs   dx,BYTE PTR ds:[esi]
  40e626:	sub    eax,ecx
  40e628:	push   0x4737b9c3
  40e62d:	xchg   ebx,eax
  40e62e:	es ds push cs
  40e631:	push   ecx
  40e632:	(bad)  
  40e634:	outs   dx,DWORD PTR ds:[esi]
  40e635:	add    esi,DWORD PTR [eax-0x169334aa]
  40e63b:	fld    DWORD PTR [ecx-0x2b]
  40e63e:	lods   eax,DWORD PTR ds:[esi]
  40e63f:	dec    ecx
  40e640:	inc    ebx
  40e641:	push   0x1c3ebca3
  40e646:	jb     0x40e663
  40e648:	xchg   ebx,eax
  40e649:	push   es
  40e64a:	sub    DWORD PTR [ecx],esi
  40e64c:	test   al,0xb8
  40e64e:	fidiv  WORD PTR [ebx]
  40e650:	push   ebp
  40e651:	adc    BYTE PTR [ecx],ch
  40e653:	icebp  
  40e654:	leave  
  40e655:	jns    0x40e5f6
  40e657:	das    
  40e658:	cmp    dh,dh
  40e65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e65b:	fbstp  TBYTE PTR [esi-0x6b671064]
  40e661:	sub    BYTE PTR [eax],bl
  40e663:	cmp    eax,0xd3dee0ef
  40e668:	and    al,0x74
  40e66a:	loopne 0x40e676
  40e66c:	adc    al,0xc7
  40e66e:	icebp  
  40e66f:	dec    esi
  40e670:	jne    0x40e61f
  40e672:	mov    DWORD PTR [ebx],0x80048b46
  40e678:	and    edi,DWORD PTR [eax-0x184a2f07]
  40e67e:	(bad)  
  40e67f:	push   0xb621f5b3
  40e684:	or     ebx,DWORD PTR [ecx-0x16d26dfe]
  40e68a:	call   0x7a54:0xa9c0971c
  40e691:	adc    BYTE PTR [ebx],0x2b
  40e694:	sbb    ah,bl
  40e696:	rol    BYTE PTR [ebp+0x13eec4ce],1
  40e69c:	int    0xca
  40e69e:	cmp    DWORD PTR [ebp-0x48d78a2a],esi
  40e6a4:	pop    edi
  40e6a5:	cmp    DWORD PTR [ecx],0x44
  40e6a8:	(bad)  
  40e6a9:	out    dx,al
  40e6aa:	mov    cl,0x95
  40e6ac:	mov    dl,BYTE PTR [edx]
  40e6ae:	pusha  
  40e6af:	sahf   
  40e6b0:	ins    BYTE PTR es:[edi],dx
  40e6b1:	mov    ds:0xc5e920cd,eax
  40e6b6:	enter  0x2dce,0xa7
  40e6ba:	imul   ebx,DWORD PTR [ebx-0x40b42fb],0x3a
  40e6c1:	lds    edx,FWORD PTR ds:0x2771022a
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	cli    
  40e6c9:	sbb    al,BYTE PTR [edx]
  40e6cb:	mov    ?,WORD PTR [esi-0x30a401c9]
  40e6d1:	ins    DWORD PTR es:[edi],dx
  40e6d2:	aam    0xb3
  40e6d4:	mul    DWORD PTR ds:0x55ed93a1
  40e6da:	add    al,0xfe
  40e6dc:	retf   0xa567
  40e6df:	sahf   
  40e6e0:	cld    
  40e6e1:	jbe    0x40e6ab
  40e6e3:	jns    0x40e6f0
  40e6e5:	imul   eax,edx,0x6a73e529
  40e6eb:	xlat   BYTE PTR ds:[ebx]
  40e6ec:	(bad)  
  40e6ed:	rol    BYTE PTR ds:0xc6d2e038,0xee
  40e6f4:	cmp    DWORD PTR [esi],eax
  40e6f6:	sub    DWORD PTR [esi+0x40],edx
  40e6f9:	push   esi
  40e6fa:	inc    ebx
  40e6fb:	loope  0x40e6a7
  40e6fd:	mov    ecx,0xdb443127
  40e702:	cmp    cl,BYTE PTR [edx]
  40e704:	sahf   
  40e705:	push   0xffffff92
  40e707:	pushf  
  40e708:	add    al,0xc1
  40e70a:	xor    DWORD PTR [ebp-0x38d32c91],ebx
  40e710:	adc    DWORD PTR [edi+0x48],0x6a05cc9d
  40e717:	lods   eax,DWORD PTR ds:[esi]
  40e718:	jnp    0x40e765
  40e71a:	(bad)  
  40e71b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e71c:	sbb    dh,BYTE PTR [ecx+edi*8+0x2c4b17d6]
  40e723:	pop    edx
  40e724:	nop
  40e725:	lock out dx,al
  40e727:	push   esi
  40e728:	fadd   QWORD PTR [ebx]
  40e72a:	adc    edi,eax
  40e72c:	fwait
  40e72d:	lahf   
  40e72e:	cmc    
  40e72f:	add    BYTE PTR [eax],al
  40e731:	xor    eax,DWORD PTR [ebx-0x39924a0c]
  40e737:	jnp    0x40e715
  40e739:	adc    DWORD PTR [ebx-0x7132924c],ebx
  40e73f:	adc    DWORD PTR [edi-0x62906ca8],0xcde60775
  40e749:	stos   WORD PTR es:[edi],ax
  40e74b:	xchg   ebp,edx
  40e74d:	mov    esp,0x62770187
  40e752:	xchg   ebx,eax
  40e753:	pop    ecx
  40e754:	dec    eax
  40e755:	or     eax,0x75f1e80e
  40e75a:	inc    esi
  40e75b:	retf   0x6e9
  40e75e:	inc    eax
  40e75f:	ins    DWORD PTR es:[edi],dx
  40e760:	mov    ah,0x78
  40e762:	sub    eax,0xdf7de1d8
  40e767:	scas   eax,DWORD PTR es:[edi]
  40e768:	fldcw  WORD PTR [edx+0x3b6a5f3b]
  40e76e:	mov    ch,0xe8
  40e770:	sbb    eax,0x68315525
  40e775:	frstor [esi]
  40e777:	and    eax,eax
  40e779:	jne    0x40e717
  40e77b:	jl     0x40e77c
  40e77d:	jb     0x40e795
  40e77f:	push   cs
  40e780:	cli    
  40e781:	pop    es
  40e782:	mov    eax,DWORD PTR [edx+0x56]
  40e785:	or     al,BYTE PTR [ecx+0x47a9f7dc]
  40e78b:	(bad)  
  40e78c:	dec    esi
  40e78d:	xchg   edi,eax
  40e78e:	xor    BYTE PTR [eax+0x1c912d68],cl
  40e794:	sti    
  40e795:	mov    bl,0xa3
  40e797:	test   al,0xc5
  40e799:	or     al,0xa8
  40e79b:	int    0x3e
  40e79d:	test   al,ah
  40e79f:	and    bl,BYTE PTR [ebp+0x69874707]
  40e7a5:	push   ebp
  40e7a6:	(bad)  
  40e7a7:	mov    ?,WORD PTR [ecx]
  40e7a9:	pop    ecx
  40e7aa:	mov    ecx,cs
  40e7ac:	push   esp
  40e7ad:	push   esi
  40e7ae:	(bad)  
  40e7af:	mov    edi,0x7e37cbf5
  40e7b4:	repz push ss
  40e7b6:	mov    al,ds:0x25b34cbc
  40e7bb:	hlt    
  40e7bc:	add    DWORD PTR [ecx],ebx
  40e7be:	fnsave [edx+eax*8+0x333a528e]
  40e7c5:	cmp    edx,ebp
  40e7c7:	pushf  
  40e7c8:	in     al,0x24
  40e7ca:	mov    ebp,0x872cfd32
  40e7cf:	mov    esp,0xce49f39
  40e7d4:	js     0x40e784
  40e7d6:	(bad)  
  40e7d7:	fldcw  WORD PTR [ebx+0x35]
  40e7da:	xor    al,BYTE PTR [ecx+0x6c3c871e]
  40e7e0:	dec    eax
  40e7e1:	mov    al,0xf8
  40e7e3:	outs   dx,BYTE PTR ds:[esi]
  40e7e4:	mov    al,ds:0x7d50252e
  40e7e9:	mov    ch,BYTE PTR [ebp-0x2e]
  40e7ec:	fwait
  40e7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ee:	scas   al,BYTE PTR es:[edi]
  40e7ef:	out    dx,eax
  40e7f0:	jmp    0x7e0ae795
  40e7f5:	rcl    DWORD PTR [edx-0x71201a0f],cl
  40e7fb:	cli    
  40e7fc:	push   eax
  40e7fd:	dec    edx
  40e7fe:	neg    DWORD PTR [ebp+0x2d008fca]
  40e804:	mov    eax,ds:0x9f0f2a0a
  40e809:	mov    esi,0xf7813716
  40e80e:	push   ds
  40e80f:	popf   
  40e810:	std    
  40e811:	jmp    0x1d3b582e
  40e816:	lock fsubr st(0),st
  40e819:	ins    BYTE PTR es:[edi],dx
  40e81a:	fsub   DWORD PTR [eax]
  40e81c:	adc    eax,0x8d735db1
  40e821:	imul   edi,esi,0x461dde2c
  40e827:	cmp    BYTE PTR [eax],dl
  40e829:	xchg   edi,eax
  40e82a:	in     al,dx
  40e82b:	in     eax,0xd7
  40e82d:	jbe    0x40e898
  40e82f:	mov    esp,0x79ac9174
  40e834:	sahf   
  40e835:	sub    DWORD PTR [esi+0x5d74c520],ebx
  40e83b:	or     bl,BYTE PTR [ecx+ecx*4-0x4dd388a]
  40e842:	add    BYTE PTR [esp+eiz*8+0x5],al
  40e846:	mov    al,ds:0x914b3865
  40e84b:	sbb    al,BYTE PTR [ebx+0x18]
  40e84e:	push   ebx
  40e84f:	add    BYTE PTR [ebx],0xe3
  40e852:	jg     0x40e7f2
  40e854:	dec    eax
  40e855:	xchg   ebp,eax
  40e856:	and    BYTE PTR [ecx+0x9ff4137],ah
  40e85c:	inc    ebx
  40e85d:	popf   
  40e85e:	in     al,0x6e
  40e860:	sbb    ah,BYTE PTR [esi-0xe]
  40e863:	ja     0x40e7ee
  40e865:	imul   DWORD PTR [ebp-0x1e]
  40e868:	pop    ss
  40e869:	pop    esp
  40e86a:	mov    edx,0x6e5bc180
  40e870:	mov    edi,DWORD PTR [ecx-0x3d]
  40e873:	dec    ecx
  40e874:	xor    eax,0xae0560a
  40e879:	or     al,0x61
  40e87b:	push   ecx
  40e87c:	cmp    ah,BYTE PTR [eax]
  40e87e:	add    DWORD PTR [ebx-0x74],edi
  40e881:	and    dh,BYTE PTR [ecx]
  40e883:	dec    esp
  40e884:	mov    ds:0x531bd35a,eax
  40e889:	push   ss
  40e88a:	or     DWORD PTR [ecx],edx
  40e88c:	fsub   DWORD PTR ds:0xec4b3282
  40e892:	out    0x6a,eax
  40e894:	sbb    DWORD PTR [esi-0x25],esp
  40e897:	aad    0xf2
  40e899:	push   ecx
  40e89a:	fdiv   DWORD PTR [esi]
  40e89c:	xchg   esi,esi
  40e89e:	mov    bl,0x82
  40e8a0:	lds    ebx,FWORD PTR [eax-0x4cba77b2]
  40e8a6:	(bad)  
  40e8a7:	push   edx
  40e8a8:	add    DWORD PTR [eax+0x1ebb34a0],esi
  40e8ae:	add    DWORD PTR [eax-0x2f051ba6],edx
  40e8b4:	fcomp  QWORD PTR [eax]
  40e8b6:	mov    al,0x9b
  40e8b8:	sub    eax,0x6b67aa1c
  40e8bd:	mov    ebx,es
  40e8bf:	outs   dx,BYTE PTR ds:[esi]
  40e8c0:	hlt    
  40e8c1:	adc    al,0xbf
  40e8c3:	or     eax,0xb27e9d4
  40e8c9:	push   ebx
  40e8ca:	cmp    DWORD PTR [ecx+edi*1+0x6a],0x91c7f5e6
  40e8d2:	xor    dh,dh
  40e8d4:	sub    al,0x1f
  40e8d6:	push   ebx
  40e8d7:	dec    esp
  40e8d8:	push   cs
  40e8d9:	test   al,0xfd
  40e8db:	ins    BYTE PTR es:[edi],dx
  40e8dc:	neg    DWORD PTR [esi]
  40e8de:	cmp    eax,0xbe3c985c
  40e8e3:	add    cl,BYTE PTR [ecx+0x18]
  40e8e6:	std    
  40e8e7:	mov    esi,0x666bc062
  40e8ec:	xchg   edx,eax
  40e8ed:	push   edx
  40e8ee:	popa   
  40e8ef:	lea    eax,ds:[eax+0x7f1b36f0]
  40e8f6:	ins    DWORD PTR es:[edi],dx
  40e8f7:	fnstcw WORD PTR [eax+0xc]
  40e8fa:	xchg   esp,eax
  40e8fb:	lea    esp,[ecx+ebp*2-0x6d]
  40e8ff:	jbe    0x40e884
  40e901:	push   es
  40e902:	jns    0x40e942
  40e904:	cmp    bl,0x8c
  40e907:	pop    edi
  40e908:	dec    eax
  40e909:	(bad)  
  40e90a:	in     eax,dx
  40e90b:	add    ch,al
  40e90d:	sbb    eax,0xae27524e
  40e912:	sub    eax,0x898094da
  40e917:	push   edi
  40e918:	cmp    ch,BYTE PTR [edx+0x11a0b361]
  40e91e:	jno    0x40e933
  40e920:	nop
  40e921:	enter  0x2776,0xdb
  40e925:	hlt    
  40e926:	jbe    0x40e8d6
  40e928:	daa    
  40e929:	sub    BYTE PTR [ebx],al
  40e92b:	popf   
  40e92c:	ins    DWORD PTR es:[edi],dx
  40e92d:	cmc    
  40e92e:	mov    esi,0x93fba81d
  40e933:	loop   0x40e8cc
  40e935:	and    BYTE PTR [esp+ebp*2],al
  40e938:	pop    ecx
  40e939:	test   al,0x63
  40e93b:	test   eax,0x373f5f0
  40e940:	aad    0x10
  40e942:	std    
  40e943:	cmp    ecx,DWORD PTR [edi-0x1dc09720]
  40e949:	sub    ah,dl
  40e94b:	int3   
  40e94c:	jg     0x40e92d
  40e94e:	aaa    
  40e94f:	jbe    0x40e985
  40e951:	push   esp
  40e952:	xor    ch,BYTE PTR [esi+0x29]
  40e955:	mov    esi,DWORD PTR [ecx]
  40e957:	cmp    eax,DWORD PTR [ebx+ebp*4-0x639cc6cd]
  40e95e:	frstor [edx+edi*8+0x389785a5]
  40e965:	cmp    al,bl
  40e967:	adc    DWORD PTR [esi-0x3d],eax
  40e96a:	or     eax,0x2bbc593
  40e96f:	stos   DWORD PTR es:[edi],eax
  40e970:	fs sub eax,0x56f093df
  40e976:	pusha  
  40e977:	and    eax,0x438c2fcd
  40e97c:	les    ecx,FWORD PTR [esi+0x4c6b502e]
  40e982:	das    
  40e983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e984:	and    al,0xac
  40e986:	test   BYTE PTR [esi-0x2277135f],bh
  40e98c:	mov    WORD PTR [esi-0x5e1c58ba],ds
  40e992:	(bad)  
  40e993:	int    0x82
  40e995:	push   ecx
  40e996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e997:	adc    DWORD PTR [edx+eiz*2+0x7f],ecx
  40e99b:	dec    esi
  40e99c:	aas    
  40e99d:	mov    edi,0xf6d0af67
  40e9a2:	rcr    DWORD PTR [ecx-0x27e545df],1
  40e9a8:	(bad)  
  40e9aa:	add    edx,eax
  40e9ac:	out    dx,eax
  40e9ad:	in     al,0x5d
  40e9af:	push   eax
  40e9b0:	sbb    esi,ebp
  40e9b2:	push   edi
  40e9b3:	push   esi
  40e9b4:	pop    edx
  40e9b5:	sub    eax,0x7eeb4bca
  40e9ba:	mov    esi,esp
  40e9bc:	mov    edx,DWORD PTR [eax]
  40e9be:	sbb    ah,BYTE PTR [esi-0x74]
  40e9c1:	in     eax,dx
  40e9c2:	xchg   DWORD PTR [esi-0x6a919ddc],ebp
  40e9c8:	loopne 0x40e9b9
  40e9ca:	push   ss
  40e9cb:	mov    esp,0xad450cc
  40e9d0:	push   edi
  40e9d1:	(bad)  
  40e9d2:	cmp    al,dl
  40e9d4:	jbe    0x40e95f
  40e9d6:	je     0x40e95c
  40e9d8:	add    al,0x16
  40e9da:	pusha  
  40e9db:	push   ebx
  40e9dc:	call   DWORD PTR [edx+0x74]
  40e9df:	test   DWORD PTR [edi+esi*2],ebp
  40e9e2:	test   BYTE PTR [edx+0x414d7612],bh
  40e9e8:	push   ds
  40e9e9:	fsubrp st(2),st
  40e9eb:	shl    DWORD PTR [esi],1
  40e9ed:	das    
  40e9ee:	(bad)  
  40e9f0:	mov    ah,0x3d
  40e9f2:	cmp    BYTE PTR [edx+eiz*2-0x69],0x3e
  40e9f7:	xchg   ebp,eax
  40e9f8:	jg     0x40e9a3
  40e9fa:	lds    eax,FWORD PTR [eax+0x202a687c]
  40ea00:	add    al,0xec
  40ea02:	sbb    al,0x9d
  40ea04:	inc    edi
  40ea05:	or     eax,0x888958aa
  40ea0a:	mov    cl,0x35
  40ea0c:	xchg   esp,eax
  40ea0d:	mov    eax,0x1029bceb
  40ea12:	and    al,0x9f
  40ea14:	mov    bl,0xdd
  40ea16:	dec    eax
  40ea17:	rol    DWORD PTR [esi-0x62],1
  40ea1a:	xlat   BYTE PTR ds:[ebx]
  40ea1b:	(bad)  
  40ea1c:	out    dx,al
  40ea1d:	cli    
  40ea1e:	add    eax,0x78f66153
  40ea23:	pop    edi
  40ea24:	xor    ebp,ebx
  40ea26:	fwait
  40ea27:	adc    DWORD PTR [edi],eax
  40ea29:	inc    ebx
  40ea2a:	outs   dx,BYTE PTR ds:[esi]
  40ea2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea2c:	fnstenv [edx+ebx*1]
  40ea2f:	pop    edx
  40ea30:	mov    dl,0x72
  40ea32:	and    al,0xc0
  40ea34:	push   ss
  40ea35:	and    eax,0xf465d5e2
  40ea3a:	xor    al,0xfe
  40ea3c:	or     DWORD PTR [edi],esp
  40ea3e:	xor    al,0x8a
  40ea40:	dec    esp
  40ea41:	jl     0xb9bb2a2c
  40ea47:	pop    edi
  40ea48:	jl     0x40e9fd
  40ea4a:	clc    
  40ea4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea4c:	out    dx,eax
  40ea4d:	mov    WORD PTR [eax-0x20],ds
  40ea50:	mov    WORD PTR es:[ecx+0x1],ss
  40ea54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea55:	sar    DWORD PTR [ecx+0x4f24bf00],0xa8
  40ea5c:	imul   ebx,DWORD PTR [ecx+0x29],0xffffff81
  40ea60:	imul   DWORD PTR [ebp-0x36]
  40ea63:	out    dx,al
  40ea64:	pop    es
  40ea65:	das    
  40ea66:	stos   DWORD PTR es:[edi],eax
  40ea67:	fcompp 
  40ea6b:	dec    ebp
  40ea6c:	jle    0x40ea21
  40ea6e:	sub    al,0xf1
  40ea70:	mov    ds:0x4dbc0bde,al
  40ea75:	xchg   esi,eax
  40ea76:	fdiv   st,st(6)
  40ea78:	loopne 0x40eae4
  40ea7a:	jmp    0x70275ade
  40ea7f:	sbb    al,0xe6
  40ea81:	mov    bl,0x26
  40ea83:	fidivr DWORD PTR [ecx]
  40ea85:	inc    esp
  40ea86:	jb     0x40ea20
  40ea88:	(bad)  
  40ea89:	fisubr DWORD PTR [edx]
  40ea8b:	cmp    eax,0xb5224cb9
  40ea90:	ds sub eax,0x81f27d6f
  40ea96:	std    
  40ea97:	cmp    ah,dh
  40ea99:	xchg   esi,eax
  40ea9a:	pop    esi
  40ea9b:	cmp    dh,BYTE PTR [esi+ebx*1-0x1e27678c]
  40eaa2:	sbb    al,0x53
  40eaa4:	inc    eax
  40eaa5:	sbb    DWORD PTR [edx+0x10cc9052],eax
  40eaab:	pop    edi
  40eaac:	xor    ah,cl
  40eaae:	dec    BYTE PTR [ebx-0x49]
  40eab1:	stos   BYTE PTR es:[edi],al
  40eab2:	fdiv   QWORD PTR [edx]
  40eab4:	ror    cl,cl
  40eab6:	shl    ecx,0x95
  40eab9:	daa    
  40eaba:	lahf   
  40eabb:	adc    ah,bh
  40eabd:	xor    edi,DWORD PTR [eax]
  40eabf:	fnstsw WORD PTR [edi+0x6a69fc0]
  40eac5:	fisub  WORD PTR [esi-0x176398c5]
  40eacb:	sbb    ch,BYTE PTR [esi+0x6f]
  40eace:	xor    eax,0xc0e0e358
  40ead3:	push   esp
  40ead4:	pop    ebx
  40ead5:	jno    0x40ea8c
  40ead7:	(bad)  
  40ead8:	push   ebx
  40ead9:	fcom   st(1)
  40eadb:	pop    ecx
  40eadc:	xchg   edx,eax
  40eadd:	push   ds
  40eade:	(bad)  
  40eadf:	push   0x1d90a01a
  40eae4:	mov    esi,0x97f196eb
  40eae9:	call   0xcc4c0cf
  40eaee:	mov    ah,0x34
  40eaf0:	adc    al,0xee
  40eaf2:	out    0xe6,eax
  40eaf4:	gs mov ecx,0xd7d5f65
  40eafa:	pop    ebp
  40eafb:	out    0xc0,al
  40eafd:	sub    al,0x73
  40eaff:	cmp    BYTE PTR [eax+0x27],al
  40eb02:	xor    BYTE PTR [ebx+0x7e8c3613],0x1
  40eb09:	mov    ecx,0x58be2e94
  40eb0e:	call   0x19c22a22
  40eb13:	(bad)  
  40eb14:	dec    BYTE PTR [eax+0x39]
  40eb17:	adc    BYTE PTR [edx+0x6a76f92],bh
  40eb1d:	sahf   
  40eb1e:	imul   edx,edx,0xffffffcd
  40eb21:	cmp    ecx,DWORD PTR ss:[esi+0x0]
  40eb25:	xor    eax,0x605a8c2e
  40eb2a:	das    
  40eb2b:	xchg   ecx,eax
  40eb2c:	in     eax,dx
  40eb2d:	inc    esi
  40eb2e:	xchg   edi,eax
  40eb2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb30:	adc    eax,0xfbc70687
  40eb35:	(bad)  
  40eb37:	push   edi
  40eb38:	leave  
  40eb39:	inc    edi
  40eb3a:	xchg   esi,eax
  40eb3b:	mov    ds:0x34c61520,eax
  40eb40:	fs sti 
  40eb42:	std    
  40eb43:	mov    esp,0x86c9ef62
  40eb48:	or     DWORD PTR [esi-0x2955ca2],0xffffffc2
  40eb4f:	xchg   edi,eax
  40eb50:	addr16 sar edx,0x90
  40eb54:	jecxz  0x40eb56
  40eb56:	(bad)  
  40eb57:	retf   0xffc2
  40eb5a:	enter  0xa080,0x90
  40eb5e:	(bad)  
  40eb5f:	dec    edi
  40eb60:	loop   0x40eb6b
  40eb62:	aaa    
  40eb63:	push   edx
  40eb64:	repnz (bad) 
  40eb66:	in     eax,dx
  40eb67:	scas   al,BYTE PTR es:[edi]
  40eb68:	jmp    0x6fb1594e
  40eb6d:	lahf   
  40eb6e:	dec    edi
  40eb6f:	cs add al,0x79
  40eb72:	(bad)  
  40eb74:	pop    edi
  40eb75:	ds pop ecx
  40eb77:	lock arpl WORD PTR [ecx-0x70],dx
  40eb7b:	adc    BYTE PTR [ebx+ebx*8-0x345f8bea],ah
  40eb82:	lds    ebx,FWORD PTR [ecx]
  40eb84:	les    ebp,FWORD PTR [edx+0x19]
  40eb87:	pop    eax
  40eb88:	outs   dx,BYTE PTR ds:[esi]
  40eb89:	in     al,dx
  40eb8a:	ss pop eax
  40eb8c:	mov    eax,ds:0xb464310c
  40eb91:	push   ss
  40eb92:	jle    0x40eb32
  40eb94:	xchg   DWORD PTR [edx-0xfceeb5c],edx
  40eb9a:	add    edi,DWORD PTR [ebp+ebx*2-0x5f]
  40eb9e:	dec    edx
  40eb9f:	sub    ecx,ebp
  40eba1:	std    
  40eba2:	and    al,0xfc
  40eba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eba5:	jns    0x40eb93
  40eba7:	add    eax,0x8e1e211a
  40ebac:	xor    ecx,DWORD PTR [ebp+0x2d]
  40ebaf:	out    0x7b,al
  40ebb1:	ror    DWORD PTR [edx],0x7
  40ebb4:	jns    0x40eb5a
  40ebb6:	jmp    0xbb3126e0
  40ebbb:	jae    0x40eb66
  40ebbd:	and    BYTE PTR ds:[ebx+0x1ee6fefb],bh
  40ebc4:	std    
  40ebc5:	jl     0x40ebda
  40ebc7:	shl    BYTE PTR [edi],1
  40ebc9:	stos   DWORD PTR es:[edi],eax
  40ebca:	icebp  
  40ebcb:	mov    edi,0x17096dcd
  40ebd0:	jmp    0x2c9f:0xb493ccbc
  40ebd7:	xor    BYTE PTR [esi],ah
  40ebd9:	leave  
  40ebda:	jl     0x40ebcd
  40ebdc:	mov    ebp,0x1d2818f3
  40ebe1:	mov    WORD PTR [ebx],es
  40ebe3:	wbinvd 
  40ebe5:	jmp    FWORD PTR [ebx+ebp*4]
  40ebe8:	pusha  
  40ebe9:	les    edx,FWORD PTR [ebp+0x5d]
  40ebec:	in     eax,0x78
  40ebee:	add    eax,0xf45857c0
  40ebf3:	fild   WORD PTR [ebx-0x288b39b3]
  40ebf9:	jb     0x40ebdb
  40ebfb:	push   ebx
  40ebfc:	pop    edx
  40ebfd:	jge    0x40ec35
  40ebff:	sbb    edx,DWORD PTR [esi-0x19b4607f]
  40ec05:	push   esi
  40ec06:	mov    edi,0x10735589
  40ec0b:	and    esi,DWORD PTR [ebx-0x2ac61b01]
  40ec11:	mov    WORD PTR [ebx],cs
  40ec13:	adc    dh,BYTE PTR [edi-0x62d88bac]
  40ec19:	jge    0x40ec31
  40ec1b:	out    0x73,al
  40ec1d:	jl     0x40ec4d
  40ec1f:	call   0xa79f1a22
  40ec24:	sub    DWORD PTR [edx+0x79b7e5cc],0xffffffc2
  40ec2b:	hlt    
  40ec2c:	add    ch,BYTE PTR [edx]
  40ec2e:	mov    BYTE PTR [edx+0x6d939120],al
  40ec34:	sub    BYTE PTR [edx+eax*4+0x42],bl
  40ec38:	stc    
  40ec39:	pop    ecx
  40ec3a:	inc    ebx
  40ec3b:	(bad)  
  40ec3c:	out    0x34,al
  40ec3e:	dec    edx
  40ec3f:	lock jmp 0x7daf:0x48c3179e
  40ec47:	inc    edx
  40ec48:	mov    DWORD PTR [eax-0x10929a0d],esp
  40ec4e:	push   0xf32cf37c
  40ec53:	inc    ecx
  40ec54:	out    0x2,eax
  40ec56:	pop    ebp
  40ec57:	xlat   BYTE PTR ds:[ebx]
  40ec58:	in     eax,dx
  40ec59:	clc    
  40ec5a:	(bad)  
  40ec5b:	loope  0x40ec76
  40ec5d:	out    dx,eax
  40ec5e:	xchg   edx,eax
  40ec5f:	outs   dx,DWORD PTR ds:[esi]
  40ec60:	mov    DWORD PTR ds:0x85b8faaa,edi
  40ec66:	stos   BYTE PTR es:[edi],al
  40ec67:	retf   
  40ec68:	test   DWORD PTR [edx+0x57e5d2c4],esp
  40ec6e:	dec    esp
  40ec6f:	repz mov bh,0xd7
  40ec72:	push   0xffffffdd
  40ec74:	adc    BYTE PTR [bx+di-0x7209],dh
  40ec79:	data16 adc BYTE PTR fs:0x1c8c19af,bh
  40ec81:	mov    ecx,0x5dff2f5e
  40ec86:	test   edi,ebp
  40ec88:	pop    ebx
  40ec89:	rcl    DWORD PTR [eax+0xa],cl
  40ec8c:	xchg   esi,eax
  40ec8d:	xchg   edx,eax
  40ec8e:	and    al,0x6f
  40ec90:	jnp    0x40ed0a
  40ec92:	sahf   
  40ec93:	punpcklbw mm3,DWORD PTR [edx]
  40ec96:	loopne 0x40ecc5
  40ec98:	in     al,0x7
  40ec9a:	jl     0x40ed0b
  40ec9c:	cs inc eax
  40ec9e:	icebp  
  40ec9f:	(bad)  
  40eca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eca1:	ins    DWORD PTR es:[edi],dx
  40eca2:	xor    al,0x88
  40eca4:	dec    edx
  40eca5:	in     al,dx
  40eca6:	dec    ebp
  40eca7:	pop    esi
  40eca8:	dec    esi
  40eca9:	jo     0x40ec74
  40ecab:	push   eax
  40ecac:	mov    ds:0x2d717718,al
  40ecb1:	(bad)  
  40ecb2:	mov    ds:0xd4bed2a1,al
  40ecb7:	mov    eax,?
  40ecb9:	retf   0xf0a7
  40ecbc:	mov    ds:0xcbf6ba91,eax
  40ecc1:	or     dh,BYTE PTR [ecx+0x22]
  40ecc4:	mov    ch,0xc1
  40ecc6:	xor    ch,BYTE PTR [edx-0x4]
  40ecc9:	mov    WORD PTR [esi],gs
  40eccb:	dec    eax
  40eccc:	imul   esp,DWORD PTR [ebx+eax*8-0x55],0x41fa70fa
  40ecd4:	test   edx,eax
  40ecd6:	loopne 0x40ecbd
  40ecd8:	(bad)  
  40ecda:	jo     0x40ed46
  40ecdc:	pusha  
  40ecdd:	jb     0x40ed22
  40ecdf:	aas    
  40ece0:	dec    ecx
  40ece1:	push   0xbdc07830
  40ece6:	sbb    DWORD PTR [esi-0x27],ebx
  40ece9:	xor    al,0xfe
  40eceb:	retf   
  40ecec:	cmp    ebp,ebp
  40ecee:	and    eax,ebp
  40ecf0:	pop    ds
  40ecf1:	xor    DWORD PTR [ecx-0x161a3b9b],0xd3524693
  40ecfb:	pop    ebx
  40ecfc:	push   esp
  40ecfd:	mov    dh,0x21
  40ecff:	(bad)
  40ed02:	shl    BYTE PTR [ecx+0x77],cl
  40ed05:	repnz adc BYTE PTR [edi-0x759f487],bh
  40ed0c:	popa   
  40ed0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed0e:	xchg   DWORD PTR [ecx+eiz*1],esp
  40ed11:	dec    esi
  40ed12:	ja     0x40ece9
  40ed14:	in     al,0x1a
  40ed16:	or     edx,DWORD PTR [ebx-0x20]
  40ed19:	mov    ecx,edx
  40ed1b:	scas   eax,DWORD PTR es:[edi]
  40ed1c:	mov    DWORD PTR [esi],eax
  40ed1e:	and    BYTE PTR [ebx+0x1b03ddb9],bh
  40ed24:	jno    0x40ece3
  40ed26:	leave  
  40ed27:	pop    ds
  40ed28:	or     ch,al
  40ed2a:	xor    al,0x26
  40ed2c:	mov    DWORD PTR [esi+0x3d],edi
  40ed2f:	jns    0x40ecfd
  40ed31:	mov    ds:0xafe00708,al
  40ed36:	dec    ebp
  40ed37:	fs pop eax
  40ed39:	dec    ecx
  40ed3a:	xchg   BYTE PTR [edx+edi*2-0x27],al
  40ed3e:	push   0x7596c849
  40ed43:	pop    ds
  40ed44:	and    eax,0x5b2186cc
  40ed49:	xchg   ebx,eax
  40ed4a:	rcl    BYTE PTR [edx+0x143f65bf],cl
  40ed50:	push   ebx
  40ed51:	(bad)  
  40ed53:	outs   dx,BYTE PTR ds:[esi]
  40ed54:	add    cl,dl
  40ed56:	add    DWORD PTR [eax],0x3d8f0a6a
  40ed5c:	dec    esp
  40ed5d:	dec    edx
  40ed5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed5f:	inc    esp
  40ed60:	jbe    0x40edc7
  40ed62:	es ins BYTE PTR es:[edi],dx
  40ed64:	call   DWORD PTR [edi-0xd]
  40ed67:	leave  
  40ed68:	cdq    
  40ed69:	xor    DWORD PTR [edx+0x53],0x8bc8673a
  40ed70:	jne    0x40edaf
  40ed72:	sub    edi,DWORD PTR [ecx]
  40ed74:	pop    esi
  40ed75:	shl    BYTE PTR [ebx-0x11be13d],1
  40ed7b:	stc    
  40ed7c:	jmp    0xec45:0x249865bd
  40ed83:	dec    esp
  40ed84:	dec    esi
  40ed85:	lods   eax,DWORD PTR ds:[esi]
  40ed86:	sbb    al,0x57
  40ed88:	cli    
  40ed89:	mov    cl,0xc6
  40ed8b:	mov    dl,0xb4
  40ed8d:	imul   edi,DWORD PTR [ebx],0x1cc3968e
  40ed93:	mov    edx,0xcfee8164
  40ed98:	sub    al,0x74
  40ed9a:	shl    al,1
  40ed9c:	jmp    0x40edc6
  40ed9e:	lods   eax,DWORD PTR ds:[esi]
  40ed9f:	and    ebp,edx
  40eda1:	dec    edx
  40eda2:	cs ret 
  40eda4:	jno    0x40ed28
  40eda6:	mov    DWORD PTR [eax],esi
  40eda8:	in     eax,0x7c
  40edaa:	push   esp
  40edab:	inc    eax
  40edac:	(bad)  
  40edad:	retf   
  40edae:	mov    ebx,0x1cd733c7
  40edb3:	ret    0x3012
  40edb6:	push   ebx
  40edb7:	mov    ebp,0x19fa67de
  40edbc:	sahf   
  40edbd:	out    dx,al
  40edbe:	in     al,0xdd
  40edc0:	rcl    DWORD PTR [edi],1
  40edc2:	in     al,dx
  40edc3:	cs jg  0x40edb0
  40edc6:	inc    edi
  40edc7:	scas   al,BYTE PTR es:[edi]
  40edc8:	add    DWORD PTR [edi+0x13],ebp
  40edcb:	add    ch,al
  40edcd:	stos   DWORD PTR es:[edi],eax
  40edce:	pop    eax
  40edcf:	jb     0x40ee19
  40edd1:	xchg   esp,eax
  40edd2:	mov    al,0xa8
  40edd4:	or     al,0xca
  40edd6:	add    ah,BYTE PTR [eax+0x2f]
  40edd9:	jo     0x40ee54
  40eddb:	pop    eax
  40eddc:	data16 sbb al,0x48
  40eddf:	sub    ebp,0x16
  40ede2:	(bad)  
  40ede4:	cmp    eax,0xc812559a
  40ede9:	xor    esi,DWORD PTR [ecx+0x5b]
  40edec:	arpl   WORD PTR [ebx],cx
  40edee:	jns    0x40edbf
  40edf0:	pusha  
  40edf1:	mov    al,bl
  40edf3:	inc    esp
  40edf4:	cmp    edi,0xffffff95
  40edf7:	jbe    0x40ee19
  40edf9:	in     al,0x75
  40edfb:	jb     0x40ee33
  40edfd:	outs   dx,DWORD PTR ds:[esi]
  40edfe:	fidiv  WORD PTR [ebp-0xf]
  40ee01:	ret    0x7d74
  40ee04:	call   0x990e18ca
  40ee09:	hlt    
  40ee0a:	bnd jae 0x40ee81
  40ee0d:	scas   al,BYTE PTR es:[edi]
  40ee0e:	push   esi
  40ee0f:	push   cs
  40ee10:	push   0x2e338326
  40ee15:	sub    eax,0x1cf7e225
  40ee1a:	ins    DWORD PTR es:[edi],dx
  40ee1b:	pop    esp
  40ee1c:	jo     0x40ed9e
  40ee1e:	pop    ds
  40ee1f:	mov    ebx,0x4cccdfd8
  40ee24:	scas   al,BYTE PTR es:[edi]
  40ee25:	xchg   ecx,eax
  40ee26:	hlt    
  40ee27:	in     eax,0x9d
  40ee29:	test   BYTE PTR [ecx+0x6e2bf7a8],ah
  40ee2f:	fs int3 
  40ee31:	mov    edi,0xb7d28607
  40ee36:	push   edi
  40ee37:	mov    gs,WORD PTR [edi-0x6a6d867a]
  40ee3d:	imul   esi,eax,0x9c9335b6
  40ee43:	es inc edx
  40ee45:	push   eax
  40ee46:	test   BYTE PTR [ecx-0x28],bl
  40ee49:	mov    ebx,0xfd1b94bb
  40ee4e:	fisubr DWORD PTR [ecx]
  40ee50:	pushf  
  40ee51:	inc    ebp
  40ee52:	or     dh,BYTE PTR [eax]
  40ee54:	(bad)  
  40ee55:	or     DWORD PTR [edx],0x75
  40ee58:	addr16 loopne 0x40ee37
  40ee5b:	push   ss
  40ee5c:	mov    edx,edx
  40ee5e:	xor    BYTE PTR [ebp+0x5d8e5827],dl
  40ee64:	pop    edx
  40ee65:	inc    ebp
  40ee67:	ret    
  40ee68:	call   0xaf7d:0xe6322bb6
  40ee6f:	or     al,0xef
  40ee71:	(bad)  
  40ee72:	cmp    al,bl
  40ee74:	test   eax,0xbb6aae3f
  40ee79:	fild   WORD PTR [edx-0x3e19d954]
  40ee7f:	push   0xa8580f53
  40ee84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee85:	je     0x40ee50
  40ee87:	stos   DWORD PTR es:[edi],eax
  40ee88:	test   edx,eax
  40ee8a:	cmp    ch,BYTE PTR [eax+0x24552fdb]
  40ee90:	xchg   edx,eax
  40ee91:	not    DWORD PTR [ebx-0x272d3454]
  40ee97:	mov    esp,0x9f18eecb
  40ee9c:	iret   
  40ee9d:	ret    0xaef2
  40eea0:	push   esi
  40eea1:	or     eax,0xed3d2d2e
  40eea6:	mov    eax,0xa58fdcbc
  40eeab:	inc    ebp
  40eeac:	mov    cs,edi
  40eeae:	fst    QWORD PTR [edi-0x19]
  40eeb1:	jns    0x40ee71
  40eeb3:	inc    esp
  40eeb4:	inc    esp
  40eeb5:	nop
  40eeb6:	inc    esi
  40eeb7:	xor    BYTE PTR [ebp+0x1bc238a9],al
  40eebd:	cmp    DWORD PTR [edi],esi
  40eebf:	lahf   
  40eec0:	push   eax
  40eec1:	jecxz  0x40ef38
  40eec3:	adc    BYTE PTR [ecx-0x5aa2a481],bh
  40eec9:	arpl   WORD PTR [eax+0x2b],ax
  40eecc:	imul   esp,DWORD PTR es:[esi+0x78c8d39e],0x38
  40eed4:	xor    al,0x1d
  40eed7:	mov    dh,0x54
  40eed9:	push   ss
  40eeda:	cmp    cl,dh
  40eedc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eedd:	inc    edx
  40eede:	mov    ds:0xfe404162,al
  40eee3:	retf   0x29d5
  40eee6:	sub    eax,0xd73d80ed
  40eeeb:	idiv   dl
  40eeed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeee:	lea    esi,cs:0x62153784
  40eef5:	push   0xbf3fe721
  40eefa:	in     al,dx
  40eefb:	jle    0x40ef3f
  40eefd:	imul   ebp,DWORD PTR [ecx],0x2a
  40ef00:	add    eax,0x9a2a093b
  40ef05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef06:	push   0x510cda19
  40ef0b:	out    0xf4,eax
  40ef0d:	and    BYTE PTR [esp+eax*1+0x65],0x41
  40ef12:	push   ebp
  40ef13:	add    al,0x28
  40ef15:	mov    WORD PTR [edx-0x25],es
  40ef18:	setl   BYTE PTR [ebx]
  40ef1b:	or     BYTE PTR [eax-0x61],0x85
  40ef1f:	ret    0x1ac2
  40ef22:	sub    DWORD PTR [eax],esi
  40ef24:	aad    0x77
  40ef26:	imul   ebx,DWORD PTR [ebx-0x62],0x74667054
  40ef2d:	push   ecx
  40ef2e:	jbe    0x40ef6d
  40ef30:	mov    ds:0x2c70acaa,al
  40ef35:	xchg   esp,eax
  40ef36:	xlat   BYTE PTR ds:[ebx]
  40ef37:	inc    sp
  40ef39:	cli    
  40ef3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef3b:	repz cmc 
  40ef3d:	stos   DWORD PTR es:[edi],eax
  40ef3e:	inc    ebp
  40ef3f:	fnsave [ebp+edi*2+0x54c95f16]
  40ef46:	or     bh,cl
  40ef48:	ins    DWORD PTR es:[edi],dx
  40ef49:	push   cs
  40ef4a:	mov    edi,0xd393ed94
  40ef4f:	xchg   BYTE PTR [ecx],dh
  40ef51:	fs or  eax,0x4468e656
  40ef57:	or     eax,0x376b011c
  40ef5c:	add    BYTE PTR [ebp+0x13],0x31
  40ef60:	mov    edx,0xa13ad06d
  40ef65:	sbb    al,0x87
  40ef67:	and    ecx,DWORD PTR [ebx]
  40ef69:	pop    eax
  40ef6b:	loopne 0x40efcd
  40ef6d:	call   0x1d7a:0x4e2e1427
  40ef74:	push   esp
  40ef75:	pop    ecx
  40ef76:	(bad)  
  40ef77:	stc    
  40ef78:	std    
  40ef79:	push   ebp
  40ef7a:	xchg   esp,eax
  40ef7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef7c:	hlt    
  40ef7d:	daa    
  40ef7e:	inc    eax
  40ef7f:	ins    DWORD PTR es:[edi],dx
  40ef80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef81:	mov    dh,0x8c
  40ef83:	out    dx,al
  40ef84:	in     al,dx
  40ef85:	sub    bl,ch
  40ef87:	dec    edi
  40ef88:	jg     0x40ef0b
  40ef8a:	pop    ecx
  40ef8b:	call   0xcbbb4cb9
  40ef90:	xor    al,0x62
  40ef92:	mov    eax,0x332f1189
  40ef97:	ds js  0x40f00a
  40ef9a:	retf   0x824b
  40ef9d:	xor    DWORD PTR [ebx+0x1d2ecaae],0xffffffae
  40efa4:	push   ebx
  40efa5:	or     esi,edx
  40efa7:	pop    es
  40efa8:	mov    edi,0x21e6e1a6
  40efad:	(bad)
  40efb0:	mov    ss,WORD PTR [edx-0x76]
  40efb3:	inc    ebp
  40efb4:	inc    DWORD PTR [ecx+0x42901825]
  40efba:	add    BYTE PTR [eax],al
  40efbc:	add    BYTE PTR [eax],al
  40efbe:	add    BYTE PTR [ebx],dh
  40efc0:	leave  
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0x28
  40f695:	mov    edi,0xca87692e
  40f69a:	jp     0x40f716
  40f69c:	add    DWORD PTR [edi+0x7a],ebx
  40f69f:	jp     0x40f646
  40f6a1:	hlt    
  40f6a2:	jg     0x40f69a
  40f6a4:	aad    0xc8
  40f6a6:	xchg   ebp,eax
  40f6a7:	xchg   edx,eax
  40f6a8:	add    bl,BYTE PTR [edx-0x6]
  40f6ab:	imul   edx,DWORD PTR [eax-0x69],0x6ee40f49
  40f6b2:	pop    edx
  40f6b3:	mov    DWORD PTR [edi+0x63856e80],eax
  40f6b9:	xchg   edi,eax
  40f6ba:	inc    ebp
  40f6bb:	xchg   esp,eax
  40f6bc:	leave  
  40f6bd:	loopne 0x40f696
  40f6bf:	repz (bad) 
  40f6c1:	clc    
  40f6c2:	cs xchg esi,eax
  40f6c4:	call   0x33803458
  40f6c9:	shr    DWORD PTR [ebx+0x6c],cl
  40f6cc:	jg     0x40f652
  40f6ce:	sahf   
  40f6cf:	call   0xd795:0xa47d389
  40f6d6:	adc    ecx,DWORD PTR [ebx-0x5]
  40f6d9:	mov    cl,0xd2
  40f6db:	in     al,dx
  40f6dc:	test   esi,eax
  40f6de:	jns    0x40f729
  40f6e0:	mov    cl,0x18
  40f6e2:	jne    0x40f69a
  40f6e4:	arpl   WORD PTR [ecx],bp
  40f6e6:	jp     0x40f751
  40f6e8:	inc    edx
  40f6e9:	call   0x6d164f06
  40f6ee:	int3   
  40f6ef:	shl    DWORD PTR [ebx+eax*2+0x54],cl
  40f6f3:	inc    edx
  40f6f4:	bound  ebp,QWORD PTR [esi]
  40f6f6:	xor    al,0x1b
  40f6f8:	cs pushf 
  40f6fa:	and    ecx,DWORD PTR [eax]
  40f6fc:	cmp    DWORD PTR [esi+0x17],edx
  40f6ff:	aam    0x69
  40f701:	mov    ch,0xec
  40f703:	or     bh,bl
  40f705:	adc    cl,BYTE PTR [edi+0x74]
  40f708:	(bad)  
  40f709:	adc    al,0x3b
  40f70b:	cmp    eax,0x6a805aa7
  40f710:	sbb    bl,cl
  40f712:	and    bh,ah
  40f714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f715:	push   esp
  40f716:	fwait
  40f717:	push   DWORD PTR [edx+0x5b]
  40f71a:	sub    BYTE PTR [esp+eax*2],bl
  40f71d:	pop    edx
  40f71e:	fwait
  40f71f:	mov    ch,0x5b
  40f721:	int    0x24
  40f723:	in     eax,0x93
  40f725:	sar    ebx,1
  40f727:	dec    eax
  40f728:	push   0x8e87242f
  40f72d:	adc    DWORD PTR [ecx+0x67],ebp
  40f730:	ins    BYTE PTR es:[edi],dx
  40f731:	mov    ch,0xfd
  40f733:	mov    al,0x1e
  40f735:	jnp    0x40f6b8
  40f737:	xchg   esp,eax
  40f738:	xor    dh,al
  40f73a:	outs   dx,DWORD PTR ds:[esi]
  40f73b:	xor    al,0x4d
  40f73d:	mov    dh,0xd4
  40f73f:	mov    BYTE PTR [edi-0x1d],al
  40f742:	mov    ds:0xdea8981a,al
  40f747:	loopne 0x40f715
  40f749:	push   esi
  40f74a:	and    bh,ch
  40f74c:	pop    edi
  40f74d:	aaa    
  40f74e:	jp     0x40f781
  40f750:	add    DWORD PTR ds:0xde7467d5,ebx
  40f756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f757:	add    DWORD PTR [eax],eax
  40f759:	jo     0x40f732
  40f75b:	push   edx
  40f75c:	add    eax,0x3b4528d6
  40f761:	pop    ebx
  40f762:	mov    edx,0x5e4bdfc7
  40f767:	add    bl,cl
  40f769:	jecxz  0x40f7a0
  40f76b:	jmp    0x40f76b
  40f76d:	idiv   DWORD PTR [ebp-0x5c]
  40f770:	stos   BYTE PTR es:[edi],al
  40f771:	mov    es,WORD PTR [ecx]
  40f773:	mov    ebp,0x8c341764
  40f778:	outs   dx,DWORD PTR ds:[esi]
  40f779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f77a:	dec    eax
  40f77b:	es push ebp
  40f77d:	ret    0x142
  40f780:	add    edx,0x93ca1653
  40f786:	btc    DWORD PTR [eax-0x40],esp
  40f78a:	(bad)  
  40f78b:	xor    DWORD PTR [edx],ebp
  40f78d:	test   DWORD PTR [edx-0x417886e9],edi
  40f793:	arpl   WORD PTR [ebx],cx
  40f795:	and    eax,DWORD PTR [ebp-0x61]
  40f798:	push   ecx
  40f799:	enter  0x1aa4,0x28
  40f79d:	out    0x2f,al
  40f79f:	sbb    ebx,ebx
  40f7a1:	dec    edx
  40f7a2:	ret    0x43fa
  40f7a5:	jb     0x40f81f
  40f7a7:	in     al,0xdd
  40f7a9:	and    eax,0x3a40bf42
  40f7ae:	jmp    0x40f758
  40f7b0:	repnz rcl DWORD PTR [edi],cl
  40f7b3:	cmc    
  40f7b4:	addr16 cmp eax,0x56b60056
  40f7ba:	pop    es
  40f7bb:	std    
  40f7bc:	dec    ebx
  40f7bd:	cmc    
  40f7be:	jl     0x40f7b2
  40f7c0:	aad    0x3a
  40f7c2:	or     al,BYTE PTR [ebx-0x74]
  40f7c5:	call   0xe1f2:0x44d36959
  40f7cc:	aaa    
  40f7cd:	sub    ah,dh
  40f7cf:	push   ecx
  40f7d0:	push   0x57
  40f7d2:	jg     0x40f809
  40f7d4:	iret   
  40f7d5:	mov    al,0xa
  40f7d7:	pop    ebp
  40f7d8:	cdq    
  40f7d9:	cmp    esi,ecx
  40f7db:	cld    
  40f7dc:	sar    DWORD PTR [ebx+0x6d6e3edc],1
  40f7e2:	jg     0x40f848
  40f7e4:	(bad)  
  40f7e5:	in     al,0xab
  40f7e7:	sub    DWORD PTR [ebp+eiz*2-0x39],eax
  40f7eb:	adc    eax,0x66e3e76b
  40f7f0:	mov    bl,0x59
  40f7f2:	cmp    eax,0xc4f84521
  40f7f7:	adc    eax,0x4c7731ed
  40f7fc:	fdivr  QWORD PTR [edi-0x1e]
  40f7ff:	fidivr WORD PTR [ebx+0x1007927b]
  40f805:	adc    al,0x74
  40f807:	mov    bh,0x87
  40f809:	and    eax,DWORD PTR ss:[ebp-0x14]
  40f80d:	mov    eax,0xed0ad655
  40f812:	inc    ecx
  40f813:	stc    
  40f814:	je     0x40f7a6
  40f816:	xchg   ebp,eax
  40f817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f818:	pop    ebp
  40f819:	sub    al,0xa6
  40f81b:	pop    edx
  40f81c:	test   al,0xc5
  40f81e:	add    al,cl
  40f820:	cdq    
  40f821:	push   cs
  40f822:	adc    al,0xc2
  40f824:	mov    bh,0xf0
  40f826:	loopne 0x40f8a3
  40f828:	xor    al,0x49
  40f82a:	or     ecx,esp
  40f82c:	sub    eax,0x97b2dd3b
  40f831:	(bad)  
  40f832:	or     eax,0x417e81c6
  40f837:	daa    
  40f838:	lock and al,BYTE PTR [ecx-0x5c]
  40f83c:	ja     0x40f7c9
  40f83e:	mov    ds:0x977f2903,eax
  40f843:	test   dh,al
  40f845:	and    DWORD PTR [edi],edi
  40f847:	aam    0x22
  40f849:	outs   dx,BYTE PTR ds:[esi]
  40f84a:	out    dx,al
  40f84b:	mov    bl,0xa9
  40f84d:	add    dh,ch
  40f84f:	das    
  40f850:	xor    BYTE PTR [esp+ebx*2+0x6730750b],dh
  40f857:	call   FWORD PTR [edi+0x8]
  40f85a:	adc    ah,BYTE PTR [ebx-0x64]
  40f85d:	aad    0x37
  40f85f:	push   ecx
  40f860:	aaa    
  40f861:	fbstp  TBYTE PTR [ebx+0x10]
  40f864:	rol    DWORD PTR [ecx-0x15],cl
  40f867:	rcr    DWORD PTR [ebx],0x16
  40f86a:	in     eax,dx
  40f86b:	mov    BYTE PTR es:[esp+edx*2-0x84a8965],ah
  40f873:	rcr    eax,cl
  40f875:	shl    BYTE PTR [edi],0xbf
  40f878:	sub    DWORD PTR [ecx-0x78],0x35
  40f87c:	(bad)  
  40f87d:	mov    dl,0x15
  40f87f:	(bad)  
  40f880:	pop    eax
  40f881:	outs   dx,DWORD PTR ds:[esi]
  40f882:	(bad)
  40f887:	pusha  
  40f888:	jp     0x40f8a5
  40f88a:	adc    BYTE PTR [edx],ch
  40f88c:	popa   
  40f88d:	jae    0x40f893
  40f88f:	mov    bl,0xd1
  40f891:	mov    bl,0x8f
  40f893:	fdecstp 
  40f895:	pop    ebx
  40f896:	jp     0x40f84a
  40f898:	mov    DWORD PTR [eax+ebp*2-0x5a],ebx
  40f89c:	shr    BYTE PTR [ecx+0x7a],0xc6
  40f8a0:	fwait
  40f8a1:	int    0xd1
  40f8a3:	mov    eax,ds:0xfdfc3517
  40f8a8:	aaa    
  40f8a9:	dec    ebx
  40f8aa:	pop    esp
  40f8ab:	out    0x7d,eax
  40f8ad:	(bad)  
  40f8af:	mov    dl,bl
  40f8b1:	xor    eax,edx
  40f8b3:	mov    eax,0xb41f6de
  40f8b8:	adc    edi,DWORD PTR [ecx]
  40f8ba:	lahf   
  40f8bb:	iret   
  40f8bc:	mov    al,ds:0x3045dc88
  40f8c1:	xor    dh,BYTE PTR [ebx+0x12695323]
  40f8c7:	push   0x55f8122f
  40f8cc:	test   BYTE PTR [esp+eax*1],0xa3
  40f8d0:	sbb    bl,BYTE PTR [eax+0x62a62d5c]
  40f8d6:	sbb    eax,0x177cc822
  40f8db:	je     0x40f87e
  40f8dd:	pop    ebx
  40f8de:	sub    ebx,DWORD PTR [ebp-0x1ab0201]
  40f8e4:	push   eax
  40f8e5:	and    cl,BYTE PTR [esi+0x2d]
  40f8e8:	cld    
  40f8e9:	push   eax
  40f8ea:	push   ss
  40f8eb:	(bad)  [ebp+eax*8+0x2]
  40f8ef:	aam    0x1f
  40f8f1:	or     al,dl
  40f8f3:	jmp    0x40f8ba
  40f8f5:	leave  
  40f8f6:	mov    ah,BYTE PTR [esi+eax*8]
  40f8f9:	jbe    0x40f8b9
  40f8fb:	je     0x40f948
  40f8fd:	mov    ss,WORD PTR [ebp-0x4a]
  40f900:	inc    edi
  40f901:	je     0x40f971
  40f903:	mov    bl,BYTE PTR [esi-0x6ec3e5c7]
  40f909:	or     DWORD PTR [ebx-0x66a4c197],eax
  40f90f:	or     edi,ebx
  40f911:	pop    eax
  40f912:	dec    ebx
  40f913:	out    0x8d,al
  40f915:	out    0xe2,al
  40f917:	pop    ds
  40f918:	mov    bl,0x76
  40f91a:	dec    esi
  40f91b:	sub    eax,0x1b1a360b
  40f920:	mov    bh,BYTE PTR [edi-0x6e]
  40f923:	xor    eax,0xae0a15c
  40f928:	mov    dl,0x48
  40f92a:	jge    0x40f912
  40f92c:	imul   ebp,DWORD PTR [eax-0x2a8a5b65],0x8bc790f5
  40f936:	test   BYTE PTR [edx],0x3b
  40f939:	into   
  40f93a:	adc    ebp,DWORD PTR [ebx-0x29]
  40f93d:	or     al,0xc6
  40f93f:	repnz push ebp
  40f941:	xor    al,0x45
  40f943:	std    
  40f944:	cmp    al,0xcc
  40f946:	mov    DWORD PTR [edi],0xa8c84da
  40f94c:	mov    ds:0x2d1b56d0,al
  40f951:	push   ds
  40f952:	mov    ds:0xd226a5a,eax
  40f957:	in     al,dx
  40f958:	jmp    0x5a28:0x7d573174
  40f95f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f960:	fild   DWORD PTR [ebp+0x10780a2d]
  40f966:	push   0xffffff89
  40f968:	iret   
  40f969:	push   ecx
  40f96a:	mov    al,0x29
  40f96c:	or     edx,DWORD PTR [eax-0x28]
  40f96f:	arpl   WORD PTR [ecx+eiz*4-0x3bf47ddc],bp
  40f976:	outs   dx,DWORD PTR ds:[esi]
  40f977:	cld    
  40f978:	cmp    al,BYTE PTR [ebx+ebx*8-0x24]
  40f97c:	sar    bl,cl
  40f97e:	xchg   BYTE PTR [ebx-0x7a5b4fca],ah
  40f984:	cmc    
  40f985:	dec    ebp
  40f986:	aas    
  40f987:	mov    ds:0xc151a135,eax
  40f98c:	mov    bh,0x8f
  40f98e:	hlt    
  40f98f:	ins    BYTE PTR es:[edi],dx
  40f990:	pop    edi
  40f991:	mov    esi,0xfe524a4d
  40f996:	cmp    dh,BYTE PTR [edi+edi*8]
  40f999:	repz add eax,0x4770d41b
  40f99f:	jg     0x40f9aa
  40f9a1:	pop    ds
  40f9a2:	push   cs
  40f9a3:	mov    cl,0x8a
  40f9a5:	mov    al,0x16
  40f9a7:	xor    BYTE PTR [edx-0x429a27fb],0x57
  40f9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9af:	adc    eax,0x1d52247
  40f9b4:	arpl   WORD PTR ds:0x63b08052,sp
  40f9ba:	jo     0x40f9eb
  40f9bc:	imul   edi,ebp,0xffffffbe
  40f9bf:	in     al,dx
  40f9c0:	pop    esp
  40f9c1:	fsubr  DWORD PTR ds:0xca3ebcec
  40f9c7:	inc    esp
  40f9c8:	jle    0x40fa47
  40f9ca:	dec    esp
  40f9cb:	inc    eax
  40f9cc:	jb     0x40fa47
  40f9ce:	es int3 
  40f9d0:	test   dl,dh
  40f9d2:	xchg   ecx,eax
  40f9d3:	jnp    0x40fa07
  40f9d5:	in     eax,dx
  40f9d6:	std    
  40f9d7:	sar    DWORD PTR [edi-0x2],1
  40f9da:	push   0x5b0c634a
  40f9df:	xor    al,0x75
  40f9e1:	and    DWORD PTR [esi+0x47],ebp
  40f9e4:	dec    edi
  40f9e5:	pusha  
  40f9e6:	enter  0xa38b,0xbe
  40f9ea:	pushf  
  40f9eb:	js     0x40fa44
  40f9ed:	jae    0x40f9e6
  40f9ef:	not    DWORD PTR [ebp+ecx*2+0x255f7579]
  40f9f6:	iret   
  40f9f7:	mov    dh,0x58
  40f9f9:	mov    al,0xc8
  40f9fb:	fiadd  DWORD PTR [ebx-0x38]
  40f9fe:	mov    al,ds:0x44450414
  40fa03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa04:	ins    DWORD PTR es:[edi],dx
  40fa05:	mov    bl,0x33
  40fa07:	mov    al,ah
  40fa09:	inc    ebp
  40fa0a:	jns    0x40f9c0
  40fa0c:	dec    ebx
  40fa0d:	(bad)  
  40fa0e:	jbe    0x40f9d0
  40fa10:	in     eax,0x80
  40fa12:	sbb    eax,0x4351cdc2
  40fa17:	int    0xc8
  40fa19:	ror    DWORD PTR [ecx],0x30
  40fa1c:	xor    eax,0x844bdef
  40fa21:	xchg   BYTE PTR [edi],ch
  40fa23:	or     esp,DWORD PTR [eax]
  40fa25:	pop    ebx
  40fa26:	lods   al,BYTE PTR ds:[esi]
  40fa27:	dec    ebx
  40fa28:	mov    dl,0x11
  40fa2a:	add    esi,DWORD PTR [ebx-0x113d67ed]
  40fa30:	sbb    bh,BYTE PTR [edx]
  40fa32:	lods   eax,DWORD PTR ds:[esi]
  40fa33:	int3   
  40fa34:	push   0x5ae7e02b
  40fa39:	out    0x8f,al
  40fa3b:	xchg   esp,eax
  40fa3c:	xor    edx,DWORD PTR [ebx]
  40fa3e:	mov    eax,esp
  40fa40:	inc    ecx
  40fa41:	or     eax,0x9f7ce05
  40fa46:	dec    edi
  40fa47:	fwait
  40fa48:	xchg   ecx,eax
  40fa49:	aaa    
  40fa4a:	cmc    
  40fa4b:	in     al,dx
  40fa4c:	aaa    
  40fa4d:	call   esp
  40fa4f:	jo     0x40fa7d
  40fa51:	dec    eax
  40fa52:	popa   
  40fa53:	mov    dl,0x33
  40fa55:	mov    ch,0xff
  40fa57:	sub    ebp,ecx
  40fa59:	ret    
  40fa5a:	jl     0x40fa44
  40fa5c:	jb     0x40fadb
  40fa5e:	cdq    
  40fa5f:	pop    esp
  40fa60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa61:	cmc    
  40fa62:	mov    ecx,0x15ce55ea
  40fa67:	push   0x1c
  40fa69:	mov    al,gs:0x8eb0b5fe
  40fa6f:	cld    
  40fa70:	mov    ?,esi
  40fa72:	or     DWORD PTR [edx],0x2
  40fa75:	enter  0xb1e7,0xd9
  40fa79:	dec    ebx
  40fa7a:	pop    esp
  40fa7b:	(bad)  
  40fa7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa7d:	(bad)
  40fa80:	push   cs
  40fa81:	xchg   bh,ah
  40fa83:	jmp    0xfc95:0x66bcaf6
  40fa8a:	inc    eax
  40fa8b:	inc    edi
  40fa8c:	scas   al,BYTE PTR es:[edi]
  40fa8d:	test   DWORD PTR [ecx-0xe],eax
  40fa90:	dec    edx
  40fa91:	add    eax,0x9fad5ee9
  40fa96:	mov    ebx,0xc6fbb73b
  40fa9b:	adc    DWORD PTR [edi-0x7f],eax
  40fa9e:	pop    ds
  40fa9f:	mov    cl,0xee
  40faa1:	mov    ds:0x996222aa,al
  40faa6:	mov    dl,0x8d
  40faa8:	dec    ebp
  40faa9:	mov    ebp,0x43d57864
  40faae:	push   0xfffffff1
  40fab0:	(bad)  
  40fab2:	jo     0x40fa3b
  40fab4:	pop    eax
  40fab5:	iret   
  40fab6:	dec    edi
  40fab7:	mov    ah,0xf7
  40fab9:	aad    0xb9
  40fabb:	pop    edi
  40fabc:	xor    DWORD PTR [ecx-0x2eaa5467],ecx
  40fac2:	mov    ebx,0xf41694d6
  40fac7:	cmc    
  40fac8:	jns    0x40fa89
  40faca:	repnz add DWORD PTR [eax],edx
  40facd:	daa    
  40face:	sti    
  40facf:	clc    
  40fad0:	gs jae 0x40faed
  40fad3:	push   edx
  40fad4:	sbb    BYTE PTR ds:0xc1cc7fc6,cl
  40fada:	push   esi
  40fadb:	test   eax,0x69e43cde
  40fae0:	pop    es
  40fae1:	fadd   DWORD PTR [ecx-0x1de49147]
  40fae7:	dec    ecx
  40fae8:	mov    ebp,0xdfd2ff3c
  40faed:	and    DWORD PTR [edi-0x54a5a55b],edx
  40faf3:	lea    ebx,[ebx+0x5d]
  40faf6:	dec    edx
  40faf7:	inc    ebp
  40faf9:	aam    0x63
  40fafb:	stos   DWORD PTR es:[edi],eax
  40fafc:	loope  0x40fb24
  40fafe:	or     DWORD PTR [eax],eax
  40fb00:	cpuid  
  40fb02:	jno    0x40fb2f
  40fb04:	in     eax,0xf
  40fb06:	ins    BYTE PTR es:[edi],dx
  40fb07:	das    
  40fb08:	mov    bl,0x19
  40fb0a:	mov    eax,0xd9e98119
  40fb0f:	xor    esi,DWORD PTR [eax]
  40fb11:	sti    
  40fb12:	fistp  DWORD PTR [ebx+0x1c]
  40fb15:	push   0x91ee0d34
  40fb1a:	dec    edi
  40fb1b:	mov    esp,DWORD PTR [edx]
  40fb1d:	xchg   ecx,eax
  40fb1e:	rol    DWORD PTR [ecx-0x7f],1
  40fb21:	inc    ebp
  40fb22:	xor    ebx,ecx
  40fb24:	inc    esi
  40fb25:	xchg   DWORD PTR [edi],ebx
  40fb27:	push   0x27
  40fb29:	retf   0xbdf5
  40fb2c:	int3   
  40fb2d:	inc    ecx
  40fb2e:	lea    esp,[ecx+0x53]
  40fb31:	xchg   edx,eax
  40fb32:	pop    ds
  40fb33:	xor    bl,BYTE PTR [ebx+ecx*4-0x72]
  40fb37:	xchg   edx,eax
  40fb38:	and    ch,dl
  40fb3a:	pop    esp
  40fb3b:	push   ebp
  40fb3c:	jecxz  0x40fb09
  40fb3e:	sub    dh,bl
  40fb40:	mov    cl,BYTE PTR [ebx+0x24d594ce]
  40fb46:	pop    esp
  40fb47:	sar    BYTE PTR [ebx],cl
  40fb49:	outs   dx,BYTE PTR ds:[esi]
  40fb4a:	mul    DWORD PTR [edx]
  40fb4c:	push   ss
  40fb4d:	adc    ebp,DWORD PTR [edi-0x30d71d3c]
  40fb53:	xchg   edx,eax
  40fb54:	hlt    
  40fb55:	mov    WORD PTR [ecx-0x33],gs
  40fb58:	mov    ebx,0xfa19cf59
  40fb5d:	shl    ecx,1
  40fb5f:	retf   0x31d7
  40fb62:	mov    esi,0xd16dfcc6
  40fb67:	dec    edx
  40fb68:	mov    dl,0xb9
  40fb6a:	jg     0x40fb46
  40fb6c:	test   al,0x32
  40fb6e:	or     cl,BYTE PTR [edx]
  40fb70:	cld    
  40fb71:	and    esp,esp
  40fb73:	(bad)  
  40fb74:	mov    eax,ds:0x5ba7b875
  40fb79:	jno    0x40fbc0
  40fb7b:	mov    es,WORD PTR [edi-0x55]
  40fb7e:	inc    edx
  40fb7f:	pop    edi
  40fb80:	lods   eax,DWORD PTR ds:[esi]
  40fb81:	jle    0x40fbfe
  40fb83:	jne    0x40fb35
  40fb85:	mov    dh,ch
  40fb87:	sti    
  40fb88:	fimul  DWORD PTR [esi+0x7def5a88]
  40fb8e:	mov    bl,0xec
  40fb90:	inc    edx
  40fb91:	sub    al,0xcd
  40fb93:	les    edx,FWORD PTR [ecx]
  40fb95:	repnz loope 0x40fb40
  40fb98:	jnp    0x40fb37
  40fb9a:	mov    edx,0x46a166a1
  40fb9f:	adc    DWORD PTR [eax-0x53819363],eax
  40fba5:	mov    ds:0x1872215a,eax
  40fbaa:	xor    DWORD PTR [edx+0x371195c7],0x29e96de0
  40fbb4:	in     al,dx
  40fbb5:	(bad)  
  40fbb6:	ja     0x40fc0e
  40fbb8:	cmp    eax,0x5c2062fa
  40fbbd:	jle    0x40fb65
  40fbbf:	adc    ebx,ecx
  40fbc1:	rcr    ch,0xa4
  40fbc4:	test   DWORD PTR [edx+0x17],esi
  40fbc7:	mov    ds:0xd5c233b2,al
  40fbcc:	inc    esp
  40fbcd:	fist   WORD PTR [edx+0x6e473c20]
  40fbd3:	mov    ebp,0xe3f4367c
  40fbd8:	pop    ebp
  40fbd9:	push   edi
  40fbda:	adc    DWORD PTR [edx-0x4dc30e5a],0xcd7a0312
  40fbe4:	dec    esi
  40fbe5:	push   edx
  40fbe6:	jae    0x40fb84
  40fbe8:	scas   eax,DWORD PTR es:[edi]
  40fbe9:	test   al,0x4
  40fbeb:	test   BYTE PTR ds:0xeca16411,ah
  40fbf1:	test   esp,0x7d3b7cf7
  40fbf7:	loope  0x40fbff
  40fbf9:	dec    ebp
  40fbfa:	mov    edi,0xc4c81e54
  40fbff:	fs sub al,0xbc
  40fc02:	mov    ebp,DWORD PTR [edx]
  40fc04:	ss mov sp,0x73b8
  40fc09:	(bad)  [eax-0x29]
  40fc0c:	or     BYTE PTR [ebp+esi*1+0x23],dl
  40fc10:	out    0x76,eax
  40fc12:	popf   
  40fc13:	cmp    ecx,DWORD PTR [ebx-0x72]
  40fc16:	mov    cl,0x24
  40fc18:	fstp   DWORD PTR [ecx+ecx*1+0x530b3915]
  40fc1f:	or     DWORD PTR [edx],esi
  40fc21:	sub    al,0x2a
  40fc23:	mov    ah,0x92
  40fc25:	and    ebp,edx
  40fc27:	loop   0x40fc92
  40fc29:	retf   
  40fc2a:	dec    ebp
  40fc2b:	sti    
  40fc2c:	xor    BYTE PTR [ebp-0x5f],dl
  40fc2f:	dec    edi
  40fc30:	ja     0x40fc47
  40fc32:	int    0xa5
  40fc34:	inc    edx
  40fc35:	repnz cmp BYTE PTR [edx+0x5d1f1f06],bl
  40fc3c:	add    al,0x21
  40fc3e:	lods   eax,DWORD PTR ds:[esi]
  40fc3f:	and    ebp,DWORD PTR [esi+0x5b946147]
  40fc45:	test   al,0x68
  40fc47:	cld    
  40fc48:	inc    ebp
  40fc49:	mov    eax,?
  40fc4b:	jecxz  0x40fc9a
  40fc4d:	out    0xfe,eax
  40fc4f:	aam    0x55
  40fc51:	dec    eax
  40fc52:	cmp    edx,ebx
  40fc54:	out    dx,eax
  40fc55:	dec    ecx
  40fc56:	sbb    eax,0xe2a00a60
  40fc5b:	aad    0x7c
  40fc5d:	dec    ecx
  40fc5e:	mov    bl,0x3b
  40fc60:	jo     0x40fc32
  40fc62:	pop    ebx
  40fc63:	xor    eax,0xb7d05d52
  40fc68:	aad    0xb9
  40fc6a:	or     DWORD PTR [esi],edx
  40fc6c:	test   al,0x13
  40fc6e:	or     DWORD PTR [esi-0x7d],ebp
  40fc71:	adc    esi,DWORD PTR [ecx+0x1c]
  40fc74:	mov    esi,0xc642b05d
  40fc79:	push   ds
  40fc7a:	shl    DWORD PTR ss:[edi-0x78],0x56
  40fc7f:	xchg   esp,eax
  40fc80:	adc    BYTE PTR [ecx+0x65],al
  40fc83:	jno    0x40fc5f
  40fc85:	leave  
  40fc86:	les    ebx,FWORD PTR [ebx-0x5a]
  40fc89:	ja     0x40fc83
  40fc8b:	std    
  40fc8c:	add    al,0x5c
  40fc8e:	test   BYTE PTR [edi+0x4e],cl
  40fc91:	pop    ss
  40fc92:	loopne 0x40fc17
  40fc94:	stos   DWORD PTR es:[edi],eax
  40fc95:	xor    dl,cl
  40fc97:	aam    0x23
  40fc99:	jnp    0x40fca1
  40fc9b:	pop    ss
  40fc9c:	mov    edx,0x86540395
  40fca1:	sbb    eax,0x2093a051
  40fca6:	inc    ebx
  40fca7:	test   al,0x89
  40fca9:	daa    
  40fcaa:	cmp    DWORD PTR [edx],esi
  40fcac:	jae    0x40fc90
  40fcae:	jl     0x40fc9e
  40fcb0:	sub    bl,dl
  40fcb2:	pop    eax
  40fcb3:	sbb    dh,al
  40fcb5:	cmp    eax,0xb73712d9
  40fcba:	retf   
  40fcbb:	es es loopne 0x40fcfe
  40fcbf:	mov    gs,WORD PTR [ecx-0xc4b4e8b]
  40fcc5:	mov    ah,cl
  40fcc7:	push   es
  40fcc8:	pop    ecx
  40fcc9:	sbb    DWORD PTR fs:[esi-0x2c],ecx
  40fccd:	and    bl,BYTE PTR [eax-0x3c]
  40fcd0:	imul   esi,DWORD PTR [edi-0x53],0xc567c24a
  40fcd7:	je     0x40fce1
  40fcd9:	pop    ebp
  40fcda:	lea    esp,[ebp+0x2857562c]
  40fce0:	jno    0x40fd00
  40fce2:	sahf   
  40fce3:	mov    ah,0x55
  40fce5:	adc    al,0x54
  40fce7:	xchg   ebp,eax
  40fce8:	mov    esi,0x9814ac38
  40fced:	cli    
  40fcee:	rol    edi,1
  40fcf0:	mov    edi,esp
  40fcf2:	push   cs
  40fcf3:	test   DWORD PTR [ebx+0x33],edx
  40fcf6:	addr16 cli 
  40fcf8:	fisub  DWORD PTR [edx]
  40fcfa:	xchg   ebp,eax
  40fcfb:	scas   al,BYTE PTR es:[edi]
  40fcfc:	xor    al,0x93
  40fcfe:	mov    cl,0x8a
  40fd00:	shl    BYTE PTR [ecx-0x78],0x4e
  40fd04:	mov    ah,BYTE PTR [ebx+eiz*8]
  40fd07:	(bad)  
  40fd08:	mov    cl,0xc4
  40fd0a:	dec    ebp
  40fd0b:	jl     0x40fca4
  40fd0d:	out    0xc8,al
  40fd0f:	jne    0x40fcef
  40fd11:	cmp    edi,DWORD PTR [ecx+0x3c]
  40fd14:	sub    BYTE PTR [ebx],dl
  40fd16:	sub    al,0x16
  40fd18:	std    
  40fd19:	push   ss
  40fd1a:	jp     0x40fd22
  40fd1c:	xchg   ebx,eax
  40fd1d:	dec    esi
  40fd1e:	lock fisubr WORD PTR [esi]
  40fd21:	adc    DWORD PTR [ecx+0x2debacbd],0x45
  40fd28:	hlt    
  40fd29:	add    DWORD PTR [ebp+0x78],edx
  40fd2c:	jnp    0x40fd02
  40fd2e:	int3   
  40fd2f:	xchg   DWORD PTR [ebx-0x72c6152d],edi
  40fd35:	ds mov ecx,0xa0dbeaf1
  40fd3b:	jl     0x40fd85
  40fd3d:	mov    bl,0x68
  40fd3f:	outs   dx,DWORD PTR ds:[esi]
  40fd40:	pop    edi
  40fd41:	dec    ebx
  40fd42:	bound  esi,QWORD PTR [ebx]
  40fd44:	jl     0x40fd4a
  40fd46:	push   ecx
  40fd47:	dec    edi
  40fd48:	inc    edx
  40fd49:	into   
  40fd4a:	popa   
  40fd4b:	or     eax,0xb17422c0
  40fd50:	jo     0x40fd4a
  40fd52:	jmp    0x9213f76a
  40fd57:	sub    DWORD PTR [ecx],eax
  40fd59:	mov    dh,0x5e
  40fd5b:	push   cs
  40fd5c:	jnp    0x40fd8e
  40fd5e:	adc    ebx,esi
  40fd60:	xchg   edi,eax
  40fd61:	in     eax,dx
  40fd62:	or     DWORD PTR [ecx+0x233c89c2],0x51
  40fd69:	das    
  40fd6a:	adc    bl,ch
  40fd6c:	je     0x40fd89
  40fd6e:	mov    al,ds:0xc0f5924f
  40fd73:	inc    eax
  40fd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd75:	into   
  40fd76:	or     dh,BYTE PTR [ebx]
  40fd78:	(bad)  
  40fd79:	in     eax,dx
  40fd7a:	sbb    eax,DWORD PTR [esi+eax*1+0x72099d39]
  40fd81:	mov    ch,0x23
  40fd83:	mov    ch,0x11
  40fd85:	into   
  40fd86:	inc    edx
  40fd87:	push   eax
  40fd88:	cli    
  40fd89:	mov    eax,ds:0x23119ce3
  40fd8e:	xchg   edx,eax
  40fd8f:	push   ecx
  40fd90:	int    0xd1
  40fd92:	outs   dx,BYTE PTR ds:[esi]
  40fd93:	mov    ecx,0x1804d616
  40fd98:	sbb    cl,BYTE PTR [esi+eax*2+0x65885144]
  40fd9f:	or     al,0x4e
  40fda1:	cmp    BYTE PTR [edi+0x36],ch
  40fda4:	lahf   
  40fda5:	and    DWORD PTR [ebp+0x49f28871],0x4e3914b3
  40fdaf:	push   edi
  40fdb0:	push   esi
  40fdb1:	mov    eax,eax
  40fdb3:	adc    al,0x9d
  40fdb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdb6:	push   0xdcc5edf5
  40fdbb:	cwde   
  40fdbc:	rol    DWORD PTR ds:0x8f2b2e70,1
  40fdc2:	jb     0x40fe11
  40fdc4:	in     al,dx
  40fdc5:	icebp  
  40fdc6:	(bad)
  40fdc9:	push   eax
  40fdca:	outs   dx,DWORD PTR ds:[esi]
  40fdcb:	jp     0x40fdff
  40fdcd:	pop    ebx
  40fdce:	adc    dl,BYTE PTR [edx-0x1f929396]
  40fdd4:	inc    edi
  40fdd5:	test   al,0x81
  40fdd7:	mov    al,ds:0x35a6c50f
  40fddc:	push   eax
  40fddd:	push   ds
  40fdde:	in     al,dx
  40fddf:	inc    ecx
  40fde0:	ss add bl,ah
  40fde3:	dec    ebx
  40fde4:	shr    BYTE PTR [edx+esi*4+0x20779d11],0xe
  40fdec:	mov    DWORD PTR [edx-0x197f6acd],edx
  40fdf2:	xor    BYTE PTR ds:0xf4494f4e,al
  40fdf8:	dec    bh
  40fdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdfb:	jbe    0x40fd8d
  40fdfd:	dec    esi
  40fdfe:	enter  0xdd70,0x81
  40fe02:	aam    0x98
  40fe04:	pop    ebp
  40fe05:	dec    esi
  40fe06:	seto   BYTE PTR [ecx-0x4e]
  40fe0a:	sahf   
  40fe0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe0c:	xor    DWORD PTR ds:0x23c7ada9,ebp
  40fe12:	ja     0x40fe19
  40fe14:	adc    DWORD PTR [esi-0x3d],0xd93fde23
  40fe1b:	ret    0xa580
  40fe1e:	and    al,0x50
  40fe20:	dec    esp
  40fe21:	or     dl,dh
  40fe23:	mov    ebp,0x9d85dad7
  40fe28:	cs xchg esi,eax
  40fe2a:	adc    edi,edx
  40fe2c:	aaa    
  40fe2d:	shl    DWORD PTR [edi+edx*1],1
  40fe30:	dec    eax
  40fe31:	add    ecx,DWORD PTR [esp+ebp*1]
  40fe34:	mov    edi,0x8c16abc4
  40fe39:	or     BYTE PTR [eax+0x2],cl
  40fe3c:	test   BYTE PTR [esi],dl
  40fe3e:	mov    ah,0xda
  40fe40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe41:	imul   DWORD PTR ds:0x36b2dd5f
  40fe47:	lahf   
  40fe48:	pop    ebp
  40fe49:	es int 0x64
  40fe4c:	mov    cl,0x85
  40fe4e:	bound  ebp,QWORD PTR [eax-0x2a]
  40fe51:	loop   0x40fe9c
  40fe53:	or     esp,eax
  40fe55:	clc    
  40fe56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe57:	fst    DWORD PTR [edi]
  40fe59:	push   esi
  40fe5a:	dec    ebp
  40fe5b:	or     ebp,edx
  40fe5d:	xchg   edi,eax
  40fe5e:	mov    ch,0xd3
  40fe60:	int3   
  40fe61:	mov    ch,0x54
  40fe63:	xchg   DWORD PTR [esi+0x18],edi
  40fe66:	fisttp WORD PTR [eax+0x19]
  40fe69:	inc    ebx
  40fe6a:	test   al,0x99
  40fe6c:	dec    al
  40fe6e:	jne    0x40fe63
  40fe70:	(bad)  
  40fe71:	xchg   ebp,eax
  40fe72:	add    dh,ah
  40fe74:	inc    edi
  40fe75:	arpl   WORD PTR [ebx+0x5359bd4a],sp
  40fe7b:	xor    dh,bl
  40fe7d:	nop
  40fe7e:	popa   
  40fe7f:	fptan  
  40fe81:	cwde   
  40fe82:	xchg   eax,edi
  40fe84:	push   eax
  40fe85:	xor    ecx,esi
  40fe87:	fadd   DWORD PTR [esi+eax*8]
  40fe8a:	loope  0x40fec7
  40fe8c:	fild   QWORD PTR [ecx]
  40fe8e:	mov    edx,0x1d2c933b
  40fe93:	mov    ds:0xf886b7fa,al
  40fe98:	jge    0x40fe59
  40fe9a:	fisttp DWORD PTR ds:0xb0baace0
  40fea0:	inc    edx
  40fea1:	jo     0x40fe6a
  40fea3:	dec    edi
  40fea4:	or     eax,DWORD PTR [eax+0xc]
  40fea7:	inc    eax
  40fea8:	pop    esp
  40fea9:	cmp    DWORD PTR [ecx],eax
  40feab:	cmp    BYTE PTR [edi],al
  40fead:	adc    ch,bh
  40feaf:	test   ecx,0x4ea88202
  40feb5:	add    al,0x2a
  40feb7:	sti    
  40feb8:	outs   dx,DWORD PTR ds:[esi]
  40feb9:	popa   
  40feba:	retf   
  40febb:	pop    eax
  40febc:	mov    edx,0x121437b4
  40fec1:	pop    ebx
  40fec2:	mov    bh,0xba
  40fec4:	lods   al,BYTE PTR ds:[esi]
  40fec5:	loopne 0x40ff2a
  40fec7:	xchg   DWORD PTR [esi-0x6d],ebp
  40feca:	jmp    0x4931:0x5d0135df
  40fed1:	mov    edx,ecx
  40fed3:	xchg   ecx,eax
  40fed4:	or     al,0x3
  40fed6:	retf   
  40fed7:	repnz xchg ebp,eax
  40fed9:	mov    cs,WORD PTR [esi-0x2acd5ba8]
  40fedf:	xlat   BYTE PTR ds:[ebx]
  40fee0:	add    al,0xa7
  40fee2:	jecxz  0x40ff5a
  40fee4:	mov    al,0xd
  40fee6:	xchg   esp,eax
  40fee7:	jmp    0xb7ee:0x869962b1
  40feee:	and    eax,0x737fd3d7
  40fef3:	sbb    edi,DWORD PTR [eax-0x42d1ad43]
  40fef9:	jae    0x40fea3
  40fefb:	loop   0x40fec1
  40fefd:	mov    BYTE PTR [edi-0x30],bl
  40ff00:	push   eax
  40ff01:	std    
  40ff02:	xchg   ecx,eax
  40ff03:	(bad)  
  40ff04:	jnp    0x40ff79
  40ff06:	xchg   ebp,eax
  40ff07:	adc    BYTE PTR [edx-0x5],dl
  40ff0a:	sub    eax,0x6d7c6a0d
  40ff0f:	mul    BYTE PTR [eax-0xa]
  40ff12:	fcom   QWORD PTR [edi]
  40ff14:	dec    esi
  40ff15:	call   0xb5d03558
  40ff1a:	leave  
  40ff1b:	jns    0x40ff44
  40ff1d:	ins    BYTE PTR es:[edi],dx
  40ff1e:	les    esp,FWORD PTR [ebx-0x7c4ab0a0]
  40ff24:	fwait
  40ff25:	cmp    al,al
  40ff27:	jno    0x40ff43
  40ff29:	jp     0x40ff51
  40ff2b:	in     al,0xe7
  40ff2d:	repnz mov ds:0x9aead0ca,al
  40ff33:	mov    al,ds:0x6d43b76d
  40ff38:	outs   dx,BYTE PTR ds:[esi]
  40ff39:	les    edx,FWORD PTR [edi-0x2a]
  40ff3c:	pop    eax
  40ff3d:	and    ebp,DWORD PTR [ecx+0x4e]
  40ff40:	mov    ah,BYTE PTR [ecx-0x62]
  40ff43:	jmp    0xb7afab44
  40ff48:	sub    eax,0x753e20e
  40ff4d:	adc    eax,0xf7a5f4e
  40ff52:	adc    bh,BYTE PTR [eax]
  40ff54:	sub    bh,BYTE PTR [eax+0x41e1a884]
  40ff5a:	and    eax,0x3f8a2a39
  40ff5f:	pop    ecx
  40ff60:	push   edi
  40ff61:	add    al,0xbd
  40ff63:	mov    ebp,0x10c24246
  40ff68:	push   ecx
  40ff69:	add    BYTE PTR [ebx],dh
  40ff6b:	jp     0x40ff48
  40ff6d:	call   0x9ac8762f
  40ff72:	pop    es
  40ff73:	and    edi,DWORD PTR [esi+0x7d]
  40ff76:	mov    ?,ecx
  40ff78:	xchg   esi,eax
  40ff79:	cld    
  40ff7a:	inc    edx
  40ff7b:	lods   eax,DWORD PTR ss:[esi]
  40ff7d:	(bad)  
  40ff80:	inc    edx
  40ff81:	push   edi
  40ff82:	je     0x40ff27
  40ff84:	sbb    dl,BYTE PTR [eax-0xee6eed4]
  40ff8a:	mov    ds:0x887187be,eax
  40ff8f:	inc    ebx
  40ff90:	or     eax,0x8918894d
  40ff95:	mov    eax,0xa68c2439
  40ff9a:	lds    edi,FWORD PTR [eax+0x72bbf1dc]
  40ffa0:	jb     0x40ff7d
  40ffa2:	in     eax,dx
  40ffa3:	repnz stos BYTE PTR es:[edi],al
  40ffa5:	into   
  40ffa6:	and    al,dl
  40ffa8:	outs   dx,BYTE PTR ds:[esi]
  40ffa9:	jne    0x40ff67
  40ffab:	push   es
  40ffac:	fstp   TBYTE PTR [ecx+edx*4+0x48]
  40ffb0:	cmp    ah,BYTE PTR [ebp-0x4d5ca968]
  40ffb6:	add    BYTE PTR [ebx-0x34b61a39],dh
  40ffbc:	jb     0x40ffdc
  40ffbe:	jg     0x40fffa
  40ffc0:	int    0x8f
  40ffc2:	out    0x47,al
  40ffc4:	mov    edi,0x187cc004
  40ffc9:	push   0x28
  40ffcb:	add    ebp,DWORD PTR [ebp-0x40]
  40ffce:	and    BYTE PTR [edx],ch
  40ffd0:	mov    eax,ds:0x6d41686b
  40ffd5:	stc    
  40ffd6:	lods   al,BYTE PTR ds:[esi]
  40ffd7:	ja     0x41004b
  40ffd9:	pushf  
  40ffda:	mov    ?,ecx
  40ffdc:	mov    ebp,0x35e56153
  40ffe1:	xchg   edi,eax
  40ffe2:	ja     0x40ff77
  40ffe4:	lea    edi,[ecx+0x5ca9b910]
  40ffea:	aaa    
  40ffeb:	in     eax,dx
  40ffec:	mov    dl,0xb0
  40ffee:	sbb    ebp,esi
  40fff0:	xchg   ebx,eax
  40fff1:	ja     0x41003b
  40fff3:	test   BYTE PTR [ebx-0x24],ch
  40fff6:	pop    eax
  40fff7:	xor    cl,al
  40fff9:	(bad)  
  40fffa:	test   eax,0x684e7629
  40ffff:	mov    ebp,0xb9eb03af
  410004:	psrld  mm4,mm4
  410007:	icebp  
  410008:	jb     0x410044
  41000a:	push   cs
  41000b:	or     bl,ch
  41000d:	mov    al,ds:0xf369f049
  410012:	add    DWORD PTR [edi-0x5f],esp
  410015:	hlt    
  410016:	out    dx,al
  410017:	ror    DWORD PTR [ebx-0x23],cl
  41001a:	pop    edx
  41001b:	ja     0x410054
  41001d:	mov    esp,0x7beac02a
  410022:	les    edi,FWORD PTR [esp+ebp*2-0x25d11830]
  410029:	push   cs
  41002a:	push   ds
  41002b:	sub    BYTE PTR [ecx-0x376dee6],ah
  410031:	imul   edx,DWORD PTR [ebx+0x1ad7a658],0xffffffaa
  410038:	sbb    al,0xba
  41003a:	mov    cl,0x66
  41003c:	in     eax,0x2a
  41003e:	sbb    DWORD PTR [edi-0x60],esp
  410041:	adc    cl,BYTE PTR [eax-0x4c61fa6c]
  410047:	mov    ch,0x3c
  410049:	cmp    eax,DWORD PTR ds:0xb462fe56
  41004f:	imul   edi,ebx,0xffffff8c
  410052:	push   ds
  410053:	arpl   ax,ax
  410055:	xchg   BYTE PTR [esi],bl
  410057:	hlt    
  410058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410059:	sahf   
  41005a:	pop    esi
  41005b:	ficomp DWORD PTR [eiz*2+0x2c3262ef]
  410062:	das    
  410063:	imul   ebp,DWORD PTR [esi-0x4],0xfffffff6
  410067:	push   es
  410068:	pop    esi
  410069:	or     eax,0x2990cb77
  41006e:	(bad)  
  41006f:	ins    DWORD PTR es:[edi],dx
  410070:	adc    BYTE PTR [eax+0x5],ah
  410073:	out    0xfe,eax
  410075:	hlt    
  410076:	inc    ebp
  410077:	test   eax,0xf2d76ff2
  41007c:	sub    cl,ch
  41007e:	xchg   esi,eax
  41007f:	cmp    al,0x8d
  410081:	mov    dl,BYTE PTR [eax+0x1b]
  410084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410085:	mov    ds:0xbbdc325f,al
  41008a:	inc    eax
  41008b:	fnsave [edi]
  41008d:	ret    
  41008e:	adc    eax,0xfeee9ea
  410093:	in     al,dx
  410094:	inc    edx
  410095:	inc    ebp
  410096:	iret   
  410097:	add    al,0xfc
  410099:	push   edx
  41009a:	sub    DWORD PTR [esi+0x5d2122da],0x439f12eb
  4100a4:	(bad)  
  4100a6:	imul   ebx,DWORD PTR ds:0xd74cb065,0x6b12c2cc
  4100b0:	xchg   ebx,eax
  4100b1:	nop
  4100b2:	sub    al,0xec
  4100b4:	mov    eax,ebx
  4100b6:	mov    ?,WORD PTR [ebx-0x76cbea7c]
  4100bc:	aaa    
  4100bd:	imul   edi,edi,0xffffffe3
  4100c0:	cmp    ecx,esp
  4100c2:	pop    edi
  4100c3:	jle    0x41004f
  4100c5:	js     0x410054
  4100c7:	lods   al,BYTE PTR ds:[esi]
  4100c8:	pop    edi
  4100c9:	in     eax,0x65
  4100cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100cc:	xchg   ebp,eax
  4100cd:	push   ebp
  4100ce:	cmp    bl,dl
  4100d0:	iret   
  4100d1:	or     BYTE PTR [ebx+0x35],cl
  4100d4:	ss push edi
  4100d6:	dec    esi
  4100d7:	push   ds
  4100d8:	daa    
  4100d9:	and    BYTE PTR [eax],0x1b
  4100dc:	call   0x29fb:0xd3770f2f
  4100e3:	adc    DWORD PTR [eax],esi
  4100e5:	cmp    ecx,DWORD PTR [ebp-0x734fba68]
  4100eb:	mov    cl,dl
  4100ed:	dec    ecx
  4100ee:	xchg   esp,eax
  4100ef:	push   es
  4100f0:	stos   DWORD PTR es:[edi],eax
  4100f1:	cmc    
  4100f2:	xchg   BYTE PTR [edx+0x78],al
  4100f5:	pop    ds
  4100f6:	sub    eax,DWORD PTR [esi-0x4d]
  4100f9:	jg     0x41008c
  4100fb:	push   esi
  4100fc:	adc    eax,0xf5994986
  410101:	imul   ebx,eax,0x48
  410104:	jne    0x410147
  410106:	in     al,0x5b
  410108:	popa   
  410109:	int3   
  41010a:	dec    edx
  41010b:	pop    ebx
  41010c:	mov    edi,0x9a60e844
  410111:	call   FWORD PTR [eax]
  410113:	inc    esi
  410114:	mov    edi,ds
  410116:	inc    ecx
  410117:	addr16 je 0x4100ea
  41011a:	dec    ebp
  41011b:	mov    fs,ecx
  41011d:	push   esp
  41011e:	xor    BYTE PTR es:[bx+si],bh
  410122:	ja     0x410190
  410124:	test   BYTE PTR [ebx],dl
  410126:	(bad)  
  410128:	xor    BYTE PTR [edi+0x31],al
  41012b:	sub    al,0x8d
  41012d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41012e:	sub    ebp,DWORD PTR [edx]
  410130:	jle    0x41010d
  410132:	add    BYTE PTR [ebx+0x78],dh
  410135:	xrelease xchg BYTE PTR [esp+eax*2-0x60],dh
  41013a:	sahf   
  41013b:	ins    BYTE PTR es:[edi],dx
  41013c:	in     eax,dx
  41013d:	inc    eax
  41013e:	fiadd  WORD PTR [ecx-0x43e1e759]
  410144:	add    ch,BYTE PTR [edx+0x4c]
  410147:	std    
  410148:	arpl   WORD PTR [edi+0x33],dx
  41014b:	cmp    al,0x34
  41014d:	push   cs
  41014e:	retf   
  41014f:	jle    0x410184
  410151:	inc    esi
  410152:	idiv   DWORD PTR [edx]
  410154:	mov    edi,0x7ef4582f
  410159:	aad    0xf5
  41015b:	shr    DWORD PTR [edx-0x55],1
  41015e:	out    dx,al
  41015f:	(bad)  
  410160:	pop    edx
  410161:	pushf  
  410162:	iret   
  410163:	test   eax,0xde5c0f57
  410168:	(bad)  
  410169:	das    
  41016a:	lock int 0x92
  41016d:	sub    ecx,ebp
  41016f:	out    0x39,eax
  410171:	xchg   esi,eax
  410172:	cmp    BYTE PTR [edx],0xb6
  410175:	into   
  410176:	out    dx,al
  410177:	fwait
  410178:	inc    ebx
  410179:	inc    esp
  41017a:	outs   dx,DWORD PTR ds:[esi]
  41017b:	dec    ecx
  41017c:	nop
  41017d:	sbb    ecx,edi
  41017f:	pop    ecx
  410180:	adc    eax,0x262e7a5a
  410185:	sub    esi,DWORD PTR [edx+0x21]
  410188:	and    eax,0x25e351b6
  41018d:	out    0x55,al
  41018f:	push   ss
  410190:	nop
  410191:	sub    al,0x5a
  410193:	xchg   esp,eax
  410194:	push   es
  410195:	sahf   
  410196:	in     al,dx
  410197:	pusha  
  410198:	(bad)  
  410199:	imul   ecx,DWORD PTR [esp+edx*1],0x8
  41019d:	xor    al,0x3d
  41019f:	jo     0x410132
  4101a1:	lea    ebp,[ebp-0x3a916283]
  4101a7:	repnz sbb DWORD PTR ds:0x169a6239,edi
  4101ae:	mov    eax,ds:0x87c619f4
  4101b3:	fistp  DWORD PTR [ecx]
  4101b5:	add    ebx,esi
  4101b7:	xor    eax,0x1b83caa8
  4101bc:	in     eax,dx
  4101bd:	ins    BYTE PTR es:[edi],dx
  4101be:	(bad)  
  4101bf:	popf   
  4101c0:	dec    ebp
  4101c1:	fmul   st,st(0)
  4101c3:	fsub   DWORD PTR [ebx]
  4101c5:	outs   dx,DWORD PTR ds:[si]
  4101c7:	out    0x36,eax
  4101c9:	test   eax,0x2458593
  4101ce:	xchg   ebp,eax
  4101cf:	ret    
  4101d0:	hlt    
  4101d1:	shl    ebp,cl
  4101d3:	nop
  4101d4:	or     BYTE PTR [ecx],0x43
  4101d7:	jle    0x410162
  4101d9:	add    DWORD PTR [ebx+0x40],ebp
  4101dc:	inc    edi
  4101dd:	stc    
  4101de:	mov    ebp,0xb7ae4967
  4101e3:	aaa    
  4101e4:	xor    dl,dl
  4101e6:	ins    DWORD PTR es:[edi],dx
  4101e7:	adc    al,0x82
  4101e9:	jne    0x4101f5
  4101eb:	sub    ebx,DWORD PTR [ebp+0x58f4be49]
  4101f1:	fisubr WORD PTR [ebx+0x732caea]
  4101f7:	fsubrp st(1),st
  4101f9:	and    eax,0x29abf28f
  4101fe:	pop    es
  4101ff:	(bad)  
  410200:	xchg   ecx,eax
  410201:	add    edi,DWORD PTR [edx]
  410203:	pusha  
  410204:	int    0x1b
  410206:	mov    ecx,0xa5448364
  41020b:	sub    edi,esp
  41020d:	das    
  41020e:	les    edi,FWORD PTR [esi]
  410210:	in     al,dx
  410211:	add    ecx,DWORD PTR [ebx+0x45]
  410214:	xor    eax,0x34935b43
  410219:	inc    esp
  41021a:	in     al,dx
  41021b:	int3   
  41021c:	stc    
  41021d:	adc    DWORD PTR [esi+ebp*8],edx
  410220:	xor    DWORD PTR [eax-0x37d94280],0x38
  410227:	jbe    0x410260
  410229:	aam    0x99
  41022b:	call   0xc8ae018e
  410230:	sbb    DWORD PTR fs:[edx+ebp*1+0x12],edx
  410235:	lods   eax,DWORD PTR ds:[esi]
  410236:	out    0xcf,al
  410238:	add    ebp,DWORD PTR [edx+0x45]
  41023b:	enter  0xf81b,0xf9
  41023f:	mov    dh,0xb3
  410241:	mov    dl,0xe3
  410243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410244:	push   eax
  410245:	idiv   BYTE PTR [edi]
  410247:	ja     0x4101c9
  410249:	retf   
  41024a:	or     BYTE PTR [ebx-0x29],ch
  41024d:	(bad)  
  41024e:	xor    eax,0x516b1afa
  410253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410254:	mov    bh,0x57
  410256:	or     DWORD PTR [edi+0x33f43bd2],0xffffffa5
  41025d:	ficomp DWORD PTR [ecx-0x5c]
  410260:	inc    esi
  410261:	aad    0x36
  410263:	xchg   edi,eax
  410264:	es test al,0x8d
  410267:	mul    DWORD PTR [eax+0x15c2e4d8]
  41026d:	cld    
  41026e:	sahf   
  41026f:	pop    eax
  410270:	xor    DWORD PTR [edi+0x428622d4],ebp
  410276:	cmp    BYTE PTR [ebx+0x12459d02],dh
  41027c:	out    0xc1,al
  41027e:	xchg   edx,eax
  41027f:	popf   
  410280:	pop    esi
  410281:	jp     0x410302
  410283:	sahf   
  410284:	push   ebp
  410285:	out    0x34,eax
  410287:	sbb    BYTE PTR [ecx+0x66053e10],0x23
  41028e:	mov    ch,0xc1
  410291:	push   0xffffff9f
  410293:	lock test DWORD PTR [ebp+0x10b1f122],edi
  41029a:	sar    DWORD PTR [ebx+0x34],0x35
  41029e:	retf   0x66a
  4102a1:	arpl   WORD PTR [ebx+eax*8-0x67927856],bp
  4102a8:	out    0x54,al
  4102aa:	sub    BYTE PTR [edi-0x47],dh
  4102ad:	rol    DWORD PTR [edi-0x395367b3],cl
  4102b3:	dec    edi
  4102b4:	dec    esi
  4102b5:	adc    BYTE PTR [ecx-0x3b],0x9d
  4102b9:	cmp    BYTE PTR [eax-0x316fda31],al
  4102bf:	xchg   edx,eax
  4102c0:	xor    eax,0xcd0ede33
  4102c5:	ficomp DWORD PTR ds:0x93e43013
  4102cb:	inc    BYTE PTR [edi-0x5b]
  4102ce:	mov    esp,0xdc282451
  4102d3:	test   eax,0xfc212d17
  4102d8:	cdq    
  4102d9:	pop    ds
  4102da:	loop   0x41031d
  4102dc:	dec    ebp
  4102dd:	ret    
  4102de:	int    0x57
  4102e0:	xor    BYTE PTR [esi],bl
  4102e2:	sbb    al,0x2e
  4102e4:	xor    DWORD PTR [ecx],0x5d
  4102e7:	and    al,0xf2
  4102e9:	je     0x41030f
  4102eb:	jmp    0x9e2e5d14
  4102f0:	imul   edx,DWORD PTR [ebx-0x42],0xffffffe6
  4102f4:	jns    0x4102ad
  4102f6:	cmp    al,0x8e
  4102f8:	stos   BYTE PTR es:[edi],al
  4102f9:	cmc    
  4102fa:	xchg   ebx,eax
  4102fb:	repz xor DWORD PTR [esp+eax*4],edi
  4102ff:	pop    esi
  410300:	jne    0x410328
  410302:	and    eax,0x671d75b0
  410307:	mov    bl,0x16
  410309:	(bad)  
  41030a:	xlat   BYTE PTR ds:[ebx]
  41030b:	push   es
  41030c:	jnp    0x41030a
  41030e:	imul   esp,DWORD PTR ds:0x6919c753,0xffffffec
  410315:	stos   DWORD PTR es:[edi],eax
  410316:	mov    edi,DWORD PTR [edx+0x11]
  410319:	sbb    DWORD PTR [edi],0xb50ef925
  41031f:	jb     0x4102ed
  410321:	mov    eax,0xf6464c30
  410326:	ja     0x7c1f128f
  41032c:	jo     0x4102f1
  41032e:	push   0x1b1045cf
  410333:	(bad)  
  410334:	in     al,dx
  410335:	daa    
  410336:	inc    esi
  410337:	jge    0x4102dd
  410339:	loope  0x4102f4
  41033b:	sub    DWORD PTR [ecx+0x38],ebp
  41033e:	out    0xba,eax
  410340:	push   ds
  410341:	add    edi,DWORD PTR ds:0xb5f7cc2c
  410347:	mov    ecx,0xf408910c
  41034c:	sub    al,BYTE PTR [esi-0x38fe1e68]
  410352:	lahf   
  410353:	pop    ds
  410354:	cli    
  410355:	pop    esp
  410356:	cmp    BYTE PTR [eax-0x510e23bc],al
  41035c:	lods   eax,DWORD PTR ds:[esi]
  41035d:	shl    BYTE PTR ds:0xb5fe0664,1
  410363:	mov    ds:0x3c787417,eax
  410368:	push   DWORD PTR [edx-0x729404c8]
  41036e:	cmp    ebp,DWORD PTR [ecx-0x4086e662]
  410374:	xlat   BYTE PTR ds:[ebx]
  410375:	dec    esi
  410376:	(bad)  [ecx+0x186668e2]
  41037c:	ret    0xdccc
  41037f:	mov    esi,0x3fe6b6ef
  410384:	pushf  
  410385:	(bad)  
  410386:	dec    ebx
  410387:	and    al,0x60
  410389:	(bad)  
  41038a:	fsubr  DWORD PTR [edx]
  41038c:	inc    ebp
  41038d:	mov    ebp,DWORD PTR [ebp-0x5e]
  410390:	mov    ah,0x1b
  410392:	xor    DWORD PTR [eax],ebx
  410394:	jbe    0x410323
  410396:	cmp    BYTE PTR [ebx],ah
  410398:	dec    ebp
  410399:	aam    0x2b
  41039b:	bound  eax,QWORD PTR [edx-0x5a]
  41039e:	cmc    
  41039f:	adc    DWORD PTR [eax+eax*2],esp
  4103a2:	std    
  4103a3:	jmp    0x4103ae
  4103a5:	into   
  4103a6:	sbb    dl,bl
  4103a8:	iret   
  4103a9:	and    eax,0x814cde61
  4103ae:	retf   
  4103af:	sub    eax,0x460ab74
  4103b4:	adc    ch,BYTE PTR [esi-0xb5e5fdc]
  4103ba:	cmp    eax,DWORD PTR [edi+edx*2-0x25ca34c4]
  4103c1:	stos   DWORD PTR es:[edi],eax
  4103c2:	add    edi,ebp
  4103c4:	push   edx
  4103c5:	dec    ebp
  4103c6:	gs dec ebp
  4103c8:	and    ch,BYTE PTR [ebp+0x403efc68]
  4103ce:	xchg   esi,eax
  4103cf:	push   eax
  4103d0:	sbb    BYTE PTR [ecx+0x1fe59613],dl
  4103d6:	and    dl,al
  4103d8:	jno    0x41038c
  4103da:	popa   
  4103db:	mov    cl,0x62
  4103dd:	pop    esp
  4103de:	dec    ecx
  4103df:	mov    edi,ebx
  4103e1:	xor    BYTE PTR [edi],bl
  4103e3:	test   eax,0x6992f77
  4103e8:	adc    al,0xfc
  4103ea:	push   cs
  4103eb:	sbb    esp,esp
  4103ed:	pop    ebx
  4103ee:	pop    ebx
  4103ef:	xchg   ebx,eax
  4103f0:	repnz mov eax,ds:0x942ee86a
  4103f6:	(bad)  
  4103f7:	scas   eax,DWORD PTR es:[edi]
  4103f8:	jp     0x410418
  4103fa:	sub    esi,DWORD PTR [ebx-0x21]
  4103fd:	ds sbb al,0x21
  410400:	push   es
  410401:	push   0x7a
  410403:	mov    al,0xf4
  410405:	imul   ecx,DWORD PTR [edx-0x21ece550],0xf55c34e3
  41040f:	fwait
  410410:	or     eax,0xb7afe9b8
  410415:	pop    ax
  410417:	mov    ah,0x72
  410419:	push   ebx
  41041a:	sbb    DWORD PTR ds:0xdc6eb169,esp
  410420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410421:	shl    DWORD PTR [edi+0x9],cl
  410424:	push   0x28
  410426:	leave  
  410427:	outs   dx,DWORD PTR ds:[esi]
  410428:	fcomp  QWORD PTR [edi]
  41042a:	pop    esi
  41042b:	adc    eax,0xddce8f55
  410430:	xchg   ecx,eax
  410431:	pop    edx
  410432:	mov    esi,0xfe71aa94
  410437:	cmp    ecx,ebp
  410439:	mov    ebp,0xb2e355e6
  41043e:	add    ax,0x5bfa
  410442:	sub    ebp,eax
  410444:	daa    
  410445:	mov    ds:0x2185613b,eax
  41044a:	aad    0xc6
  41044c:	aas    
  41044d:	adc    esp,DWORD PTR [ebx]
  41044f:	daa    
  410450:	pusha  
  410451:	inc    eax
  410452:	inc    ebx
  410453:	mov    ebp,0x84150c22
  410459:	iret   
  41045a:	out    dx,al
  41045b:	fist   DWORD PTR [esi+0x2c]
  41045e:	test   al,0x78
  410460:	jmp    0x4104c5
  410462:	mov    bl,BYTE PTR [esp+ebp*4+0x36e79995]
  410469:	mov    esi,ebx
  41046b:	jbe    0x4104b7
  41046d:	cmp    ah,BYTE PTR [ebx+0x16eec656]
  410473:	repz (bad) 
  410475:	jge    0x4104b9
  410477:	and    ebp,DWORD PTR [edi-0x4a]
  41047a:	idiv   BYTE PTR [ebx-0x4a1c98e8]
  410480:	add    ebp,esp
  410482:	push   ebx
  410483:	gs push ebp
  410485:	mov    edx,DWORD PTR [esi]
  410487:	or     bl,dh
  410489:	rcr    bl,cl
  41048b:	xor    BYTE PTR [eax],bh
  41048d:	and    al,0xe6
  41048f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410490:	jmp    0x7746:0xa8d48d5e
  410497:	push   ecx
  410498:	test   DWORD PTR [edx-0x1b],0xd141a489
  41049f:	cmp    esi,DWORD PTR fs:[eax+0x24106510]
  4104a6:	aam    0x3b
  4104a8:	cdq    
  4104a9:	fadd   st(3),st
  4104ab:	or     DWORD PTR [esi],ebp
  4104ad:	into   
  4104ae:	pop    eax
  4104af:	lds    ebx,FWORD PTR [ecx+0x7e]
  4104b2:	add    BYTE PTR [eax-0x3cc3ac09],dh
  4104b8:	pusha  
  4104b9:	pop    eax
  4104ba:	or     ebx,DWORD PTR ds:0x886fe03f
  4104c0:	aas    
  4104c1:	mov    ?,WORD PTR [edi+esi*4+0x79]
  4104c5:	(bad)  
  4104c6:	mov    ecx,0x2da77a65
  4104cb:	bound  ebx,QWORD PTR [edi]
  4104cd:	sub    eax,0x1cdbf67e
  4104d2:	mov    bh,BYTE PTR [edi]
  4104d4:	inc    ebx
  4104d5:	sbb    BYTE PTR [eax-0x79f3c9ec],al
  4104db:	or     dh,BYTE PTR [ebx-0x3acbba13]
  4104e1:	fcomi  st,st(5)
  4104e3:	cvtpi2ps xmm4,QWORD PTR [eax-0x69]
  4104e7:	out    0xef,al
  4104e9:	leave  
  4104ea:	stos   DWORD PTR es:[edi],eax
  4104eb:	iret   
  4104ec:	test   eax,0xfe45109d
  4104f1:	mov    bl,0xa5
  4104f3:	mov    ch,dl
  4104f5:	loope  0x4104e5
  4104f7:	jno    0x41056c
  4104f9:	jnp    0x410573
  4104fb:	fnstcw WORD PTR ds:0x223d3324
  410501:	aaa    
  410502:	add    dh,dh
  410504:	xor    DWORD PTR [edi],ebx
  410506:	or     BYTE PTR [ecx+0x20d8c982],0x25
  41050d:	cmp    ecx,DWORD PTR [edx-0x3c566648]
  410513:	lods   eax,DWORD PTR ds:[esi]
  410514:	xor    eax,edi
  410516:	int    0x16
  410518:	inc    DWORD PTR [edi+eax*2+0x709f3ed6]
  41051f:	cmp    al,0xe
  410521:	test   al,0x80
  410523:	imul   ebp,DWORD PTR [eax],0x37
  410526:	stos   DWORD PTR es:[edi],eax
  410527:	push   edx
  410528:	pop    ss
  410529:	in     al,0xf2
  41052b:	dec    ecx
  41052c:	mov    ch,0xaa
  41052e:	jne    0x4105a8
  410530:	retf   
  410531:	lea    eax,ds:0xd1bf6359
  410537:	fwait
  410538:	loopne 0x41058a
  41053a:	push   ebx
  41053b:	ret    
  41053c:	sub    bh,bl
  41053e:	xor    ebx,DWORD PTR [eax-0x31]
  410541:	test   al,0xeb
  410543:	xor    esi,DWORD PTR [esi]
  410545:	push   DWORD PTR [edi+0x76]
  410548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410549:	mov    eax,0xb8826ab
  41054e:	jp     0x410531
  410550:	push   0x840e2638
  410555:	sbb    edx,DWORD PTR [esi-0x3c]
  410558:	out    dx,eax
  410559:	inc    edi
  41055a:	and    BYTE PTR [edi-0x257c3dfd],cl
  410560:	inc    ebx
  410561:	sbb    eax,0x89441bf
  410566:	or     al,0x16
  410568:	or     eax,0x313d2131
  41056d:	or     al,0xd6
  41056f:	fs sub eax,0x5a3b1f91
  410575:	(bad)  
  410576:	or     edi,DWORD PTR [edi+0x417677ed]
  41057c:	leave  
  41057d:	xlat   BYTE PTR ds:[ebx]
  41057e:	mov    eax,0x29cce120
  410583:	pushf  
  410584:	inc    ebp
  410585:	xchg   edi,eax
  410586:	xchg   edx,eax
  410587:	rcl    BYTE PTR [eax],cl
  410589:	les    ebp,FWORD PTR [edi+0x2]
  41058c:	test   ah,ah
  41058e:	pushf  
  41058f:	sahf   
  410590:	int3   
  410591:	sbb    DWORD PTR [edi+ebp*2],esp
  410594:	test   BYTE PTR [edi+0x51],0x8a
  410598:	push   0x40
  41059a:	and    BYTE PTR [edx+0x40],ch
  41059d:	adc    BYTE PTR [ebp-0x6d],dl
  4105a0:	sbb    edi,DWORD PTR [edx+eax*8+0x7efd0590]
  4105a7:	or     ebp,DWORD PTR [ecx]
  4105a9:	push   es
  4105aa:	push   edx
  4105ab:	icebp  
  4105ac:	mov    eax,ds:0xcf98f883
  4105b1:	sbb    eax,0x31744734
  4105b6:	and    ecx,DWORD PTR [esi]
  4105b8:	repnz loope 0x41056a
  4105bb:	idiv   ch
  4105bd:	and    BYTE PTR [eax+0x3e],dh
  4105c0:	mov    ah,0x96
  4105c2:	add    eax,0x6ae3d261
  4105c7:	add    dh,bl
  4105c9:	mov    eax,ds:0xea72cfb2
  4105ce:	sbb    al,0x6d
  4105d0:	jmp    0xd3ad:0x9ab68c8e
  4105d7:	sbb    bh,ah
  4105d9:	outs   dx,DWORD PTR ds:[esi]
  4105da:	jns    0x410571
  4105dc:	inc    eax
  4105dd:	cmp    eax,DWORD PTR [eax-0x363e8143]
  4105e3:	sbb    cl,BYTE PTR [ebx]
  4105e5:	shl    BYTE PTR [esi+0x1f203e4b],0x30
  4105ec:	movntps XMMWORD PTR [esi+0x51f1e9c8],xmm4
  4105f3:	lods   al,BYTE PTR ds:[esi]
  4105f4:	adc    eax,DWORD PTR [ecx-0x4db80278]
  4105fa:	aaa    
  4105fb:	jne    0x41059f
  4105fd:	adc    bl,ah
  4105ff:	jmp    0x9580:0x46cabf92
  410606:	fnstsw WORD PTR [ebp-0x6bfaba54]
  41060c:	add    eax,DWORD PTR [ebx-0x43]
  41060f:	mov    esi,0x8d51c955
  410614:	or     DWORD PTR [ebx-0x47],eax
  410617:	cmc    
  410618:	repz rcr BYTE PTR [edi-0xf],cl
  41061c:	mov    ah,0xa
  41061e:	(bad)  
  41061f:	mov    eax,0xee920bda
  410624:	cli    
  410625:	ret    
  410626:	sti    
  410627:	jno    0x41061d
  410629:	add    ecx,DWORD PTR [ecx-0x74]
  41062c:	xchg   edi,eax
  41062d:	mov    al,ds:0xe34cd4dd
  410632:	cmp    DWORD PTR [edi-0x59],esi
  410635:	and    DWORD PTR [ecx],esi
  410637:	out    dx,eax
  410638:	out    0x8b,al
  41063a:	sub    al,0x92
  41063c:	fcomp  st(6)
  41063e:	dec    edx
  41063f:	retf   
  410640:	cwde   
  410641:	sbb    dl,ch
  410643:	cli    
  410644:	jge    0x41061c
  410646:	inc    esi
  410647:	fsqrt  
  410649:	push   ecx
  41064a:	push   ss
  41064b:	hlt    
  41064c:	pop    edi
  41064d:	push   0x68b81f83
  410652:	mov    esp,0x975be98e
  410657:	pop    edx
  410658:	test   eax,0x7e1d501d
  41065d:	lea    edi,[ebp+0x40]
  410660:	or     al,0xf
  410662:	imul   eax
  410664:	dec    edi
  410665:	(bad)  
  410666:	ss push ebx
  410668:	cld    
  410669:	lahf   
  41066a:	pop    esp
  41066b:	arpl   sp,bx
  41066d:	std    
  41066e:	stc    
  41066f:	mov    eax,ds:0xbc978c7b
  410674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410675:	jb     0x41065d
  410677:	or     DWORD PTR [edi-0x12],0x3d
  41067b:	or     BYTE PTR [eax+edi*8],cl
  41067e:	ror    cl,0xa9
  410681:	paddusb mm2,QWORD PTR [edi-0x3e3921f8]
  410688:	pop    edx
  410689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41068a:	mov    WORD PTR [eax+0x70ef6833],fs
  410690:	rol    BYTE PTR [esi+0x1f],cl
  410693:	in     eax,dx
  410694:	jle    0x410628
  410696:	xor    BYTE PTR [ecx],al
  410698:	sbb    BYTE PTR [eax],dh
  41069a:	push   ebx
  41069b:	adc    ebp,DWORD PTR [ebx+ebp*8]
  41069e:	and    al,0x2b
  4106a0:	sub    ebx,DWORD PTR [edx-0x1d39a45d]
  4106a6:	mov    ecx,0xd9338566
  4106ab:	or     DWORD PTR [edi-0x60],ebp
  4106ae:	adc    BYTE PTR [ecx],bl
  4106b0:	cmp    BYTE PTR [ebp+0x5e974db2],bl
  4106b6:	mov    eax,0x165c5f7a
  4106bb:	das    
  4106bc:	test   BYTE PTR ds:0xe3544113,al
  4106c2:	adc    dh,BYTE PTR [edi+ebx*4]
  4106c5:	mov    eax,0xfc77aa1
  4106ca:	mov    esp,0xcaa7cb6f
  4106cf:	iret   
  4106d0:	mov    al,ds:0xbde20871
  4106d5:	fs je  0x4106b4
  4106d8:	pop    ebp
  4106d9:	add    al,BYTE PTR [edx+0x3666c72f]
  4106df:	inc    edx
  4106e0:	add    al,0xad
  4106e2:	ret    
  4106e3:	int3   
  4106e4:	fisub  WORD PTR ds:0x4c7c8af5
  4106ea:	sub    ah,BYTE PTR [edx-0x67]
  4106ed:	mov    al,0xb
  4106ef:	inc    ecx
  4106f0:	mov    esi,0xf35523f6
  4106f5:	test   al,0x43
  4106f7:	retf   0x7a60
  4106fa:	adc    ebp,DWORD PTR [edx+eiz*1]
  4106fd:	popf   
  4106fe:	and    ebp,0x70
  410701:	sbb    al,0x22
  410703:	fist   DWORD PTR ss:[eax+0x6bfb9f29]
  41070a:	or     DWORD PTR [ecx],esp
  41070c:	pop    ebp
  41070d:	das    
  41070e:	jb     0x410704
  410710:	adc    ebx,DWORD PTR [ebx+esi*1+0x42]
  410714:	mul    DWORD PTR [ebx-0x5c]
  410717:	xchg   ecx,eax
  410718:	and    BYTE PTR ds:0x35cc67ba,ch
  41071e:	jecxz  0x4106a6
  410720:	ficomp DWORD PTR [ebx+0x316fd5d2]
  410726:	in     eax,0x3a
  410728:	ins    DWORD PTR es:[edi],dx
  410729:	ror    BYTE PTR [edx-0x30],0x2b
  41072d:	arpl   WORD PTR [edx],sp
  41072f:	test   DWORD PTR [ebx+0x6a4926f1],esp
  410735:	cmp    BYTE PTR [ecx],dl
  410737:	inc    eax
  410738:	adc    esi,ebx
  41073a:	mov    BYTE PTR [ecx-0x2e],dh
  41073d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41073e:	adc    al,0xfb
  410740:	mov    dh,0xcc
  410742:	shr    ebx,0x2a
  410745:	test   eax,0x5e29d026
  41074a:	push   esp
  41074b:	std    
  41074c:	jmp    0x410740
  41074e:	pop    ebp
  41074f:	sub    DWORD PTR [edx-0x1da11259],ecx
  410755:	cld    
  410756:	push   edi
  410757:	or     DWORD PTR [ecx+eax*4],edi
  41075a:	nop
  41075b:	dec    edi
  41075c:	mov    dh,0x5d
  41075e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41075f:	push   ss
  410760:	adc    al,0xe2
  410762:	adc    eax,0xaf87c642
  410767:	inc    eax
  410768:	mov    ds:0x730e851c,al
  41076d:	(bad)  
  41076e:	cdq    
  41076f:	stos   BYTE PTR es:[edi],al
  410770:	add    ebx,DWORD PTR [ebx+ebx*1]
  410773:	ss ds loop 0x4107cf
  410777:	sti    
  410778:	jo     0x410720
  41077a:	pop    ss
  41077b:	and    eax,0x3f73edeb
  410780:	jb     0x41078f
  410782:	dec    esi
  410783:	and    BYTE PTR [ebx+0xf],0x56
  410787:	enter  0xb593,0xe0
  41078b:	stos   BYTE PTR es:[edi],al
  41078c:	pop    ecx
  41078d:	sbb    BYTE PTR [ebp+0x4da2bbbf],ah
  410793:	test   DWORD PTR [edx+0x1e74e4f0],esp
  410799:	sub    al,0xb6
  41079b:	or     eax,0xa3b67a61
  4107a0:	push   ebx
  4107a1:	scas   al,BYTE PTR es:[edi]
  4107a2:	jle    0x4107e8
  4107a4:	adc    BYTE PTR [esi+0x7e],dh
  4107a7:	test   al,0xc2
  4107a9:	enter  0x104a,0x8b
  4107ad:	scas   al,BYTE PTR es:[edi]
  4107ae:	js     0x410825
  4107b0:	loop   0x4107b3
  4107b2:	test   BYTE PTR [ebx],bh
  4107b4:	arpl   WORD PTR [edi+0x8],bx
  4107b7:	mov    DWORD PTR [esi+0x39991f00],ebx
  4107bd:	ss pop ebx
  4107bf:	pusha  
  4107c0:	mov    esi,0x6406561f
  4107c5:	pop    ss
  4107c6:	test   BYTE PTR [esp+eax*1],ch
  4107c9:	and    eax,0xc8643ad4
  4107ce:	mov    esp,0xc877f8cd
  4107d3:	cmp    eax,0x48701556
  4107d8:	imul   edi,DWORD PTR [ecx+ecx*4],0x15
  4107dc:	ficomp WORD PTR [ebp-0x53d21c22]
  4107e2:	xor    ebp,DWORD PTR [esi]
  4107e4:	retf   
  4107e5:	or     BYTE PTR [esi+0x3c],dh
  4107e8:	and    BYTE PTR [edx],dh
  4107ea:	jnp    0x41082d
  4107ec:	jmp    0x41081b
  4107ee:	mov    dl,0x5e
  4107f0:	lods   al,BYTE PTR ds:[esi]
  4107f1:	out    0x9e,eax
  4107f3:	imul   ecx,DWORD PTR [edx-0x61397911],0xffffff8f
  4107fa:	sbb    al,0x7c
  4107fc:	push   eax
  4107fd:	std    
  4107fe:	lds    esi,FWORD PTR [ebx]
  410800:	xor    BYTE PTR [ecx+ecx*8-0x111ab8cd],bl
  410807:	not    DWORD PTR [ebp+0x29446cb5]
  41080d:	jmp    0xba22:0x10c6dbea
  410814:	push   ecx
  410815:	test   eax,0x4bc2726d
  41081a:	stos   DWORD PTR es:[edi],eax
  41081b:	rcr    DWORD PTR [ebx],0x31
  41081e:	lods   al,BYTE PTR ds:[esi]
  41081f:	and    DWORD PTR [eax+ebx*2],edi
  410822:	or     BYTE PTR [edx],ah
  410824:	leave  
  410825:	add    ebp,ebp
  410827:	cmc    
  410828:	imul   edx,DWORD PTR [ecx-0x494b1dd4],0x2c
  41082f:	cmc    
  410830:	sub    ah,ch
  410832:	sbb    eax,0x963028f6
  410837:	xchg   BYTE PTR [eax+0x2b6fcd71],ch
  41083d:	cmp    al,0x34
  41083f:	(bad)  
  410841:	jecxz  0x41085d
  410843:	or     dh,BYTE PTR [ebx]
  410845:	cmp    ebx,esi
  410847:	loope  0x41086f
  410849:	pushf  
  41084a:	stos   BYTE PTR es:[edi],al
  41084b:	jp     0x410860
  41084d:	jge    0x410880
  41084f:	xor    DWORD PTR [ebp-0x289c691e],0xffffffde
  410856:	fs mov esi,0x5e6e1e1b
  41085c:	adc    bh,dh
  41085e:	jle    0x410856
  410860:	adc    BYTE PTR [ebx+0x15],ch
  410863:	mov    dh,0xe5
  410865:	mov    WORD PTR [edi],gs
  410867:	dec    edx
  410868:	pop    edx
  410869:	dec    esi
  41086a:	enter  0xad8e,0x56
  41086e:	cmp    edx,DWORD PTR [edi+0x35]
  410871:	inc    eax
  410872:	cli    
  410873:	adc    eax,0x2acd2a36
  410878:	(bad)  
  410879:	lea    ecx,[ecx+eiz*1-0x558f1167]
  410880:	mov    ah,0x55
  410882:	scas   eax,DWORD PTR es:[edi]
  410883:	call   0x21c1:0xcf62e791
  41088a:	pop    es
  41088b:	pop    ebp
  41088c:	push   ss
  41088d:	jb     0x4108eb
  41088f:	or     DWORD PTR [eax+0x1e],edi
  410892:	(bad)  
  410893:	int3   
  410894:	mov    edi,edi
  410896:	sbb    BYTE PTR [edi+0x37],bh
  410899:	dec    esp
  41089a:	leavew 
  41089c:	jns    0x410876
  41089e:	retf   
  41089f:	rcr    DWORD PTR ds:0x4b651b2a,1
  4108a5:	xor    esi,0x1f159ed0
  4108ab:	xlat   BYTE PTR ds:[ebx]
  4108ac:	pop    esp
  4108ad:	cmp    dl,BYTE PTR [edx+0x2e]
  4108b0:	xor    bh,BYTE PTR [esp+ecx*2-0x6bbea54d]
  4108b7:	mov    al,0x93
  4108b9:	je     0x410881
  4108bb:	aad    0xbb
  4108bd:	cmc    
  4108be:	adc    DWORD PTR [eax+0x41],0x7eccd007
  4108c5:	dec    esp
  4108c6:	push   0xffffff8e
  4108c8:	sar    DWORD PTR [ecx-0x5641a7d8],1
  4108ce:	push   esp
  4108cf:	adc    BYTE PTR [edx],cl
  4108d1:	add    eax,0x78759e16
  4108d6:	fadd   DWORD PTR [esi-0x71]
  4108d9:	repz mov eax,0x7d7acc46
  4108df:	fstp   DWORD PTR [esi-0x12]
  4108e2:	int    0x8b
  4108e4:	imul   esi,DWORD PTR [edx],0x1bbb9fdd
  4108ea:	push   esi
  4108eb:	retf   0x6de0
  4108ee:	jmp    0x410903
  4108f0:	aas    
  4108f1:	hlt    
  4108f2:	sub    DWORD PTR [edi],ebp
  4108f4:	sti    
  4108f5:	jecxz  0x4108d8
  4108f7:	push   ss
  4108f8:	sbb    bh,BYTE PTR [edi+0x0]
  4108fb:	sbb    BYTE PTR [edi+eiz*2+0x73f9653d],dh
  410902:	inc    eax
  410903:	dec    ebp
  410904:	sub    DWORD PTR [esi-0x2d4f2f5b],0x664a3f58
  41090e:	dec    edx
  41090f:	jmp    0x9ef8:0xc8d8001
  410916:	adc    eax,0x57827b14
  41091b:	or     ecx,DWORD PTR [edi+0x1b]
  41091e:	cmp    esi,DWORD PTR [esi-0x12]
  410921:	aad    0x97
  410923:	push   ecx
  410924:	mov    edx,0x678bdfc5
  410929:	pop    ebx
  41092a:	into   
  41092b:	xor    dh,cl
  41092d:	jne    0x410989
  41092f:	aas    
  410930:	xor    BYTE PTR [edx],al
  410932:	les    ebx,FWORD PTR [ebp-0x71]
  410935:	mov    edx,0x52a9429
  41093a:	mov    ds:0x9912d67f,al
  41093f:	and    dl,cl
  410941:	sti    
  410942:	daa    
  410943:	adc    BYTE PTR [edi-0x11],bl
  410946:	and    DWORD PTR [eax+0x40],esp
  410949:	ins    BYTE PTR es:[edi],dx
  41094a:	fnsave [esi]
  41094c:	std    
  41094d:	hlt    
  41094e:	cdq    
  41094f:	leave  
  410950:	dec    edi
  410951:	mov    bh,0xc5
  410953:	(bad)  
  410956:	(bad)  
  410957:	(bad)  
  410958:	mov    dl,0xb1
  41095a:	in     eax,dx
  41095b:	mov    ?,WORD PTR [edx-0x79a24107]
  410961:	sti    
  410962:	(bad)  
  410963:	ins    BYTE PTR es:[edi],dx
  410964:	cmp    BYTE PTR [esp+eiz*8],ch
  410967:	xor    al,0xa3
  410969:	lods   al,BYTE PTR ds:[esi]
  41096a:	push   0x23d965fe
  41096f:	ror    BYTE PTR [esp+edi*4+0x7fbd908c],cl
  410976:	(bad)  
  410977:	sti    
  410978:	(bad)  
  410979:	mov    al,0x40
  41097b:	adc    DWORD PTR es:[ebp-0x1f9013a3],esp
  410982:	add    BYTE PTR [esi-0x6d],0x50
  410986:	cmc    
  410987:	je     0x41098a
  410989:	retf   
  41098a:	sub    eax,0x36802dc
  41098f:	test   BYTE PTR [edi+esi*8-0x6f],dh
  410993:	sub    BYTE PTR [edi+0x35],ah
  410996:	dec    ebp
  410997:	in     al,dx
  410998:	sub    eax,0x52f2778
  41099d:	jmp    0x41098c
  41099f:	jecxz  0x41093e
  4109a1:	push   esp
  4109a2:	xor    al,0xdd
  4109a4:	daa    
  4109a5:	pop    ds
  4109a6:	enter  0xaf65,0xf6
  4109aa:	loopne 0x41094a
  4109ac:	rol    DWORD PTR [esi-0x6cafdda4],1
  4109b2:	pop    ds
  4109b3:	loopne 0x4109a0
  4109b5:	(bad)  
  4109b6:	ret    
  4109b7:	pop    ecx
  4109b8:	adc    BYTE PTR [edi],dl
  4109ba:	xchg   BYTE PTR ds:0xb92d4e17,al
  4109c0:	mov    dh,BYTE PTR [edx]
  4109c2:	mov    ch,0x88
  4109c4:	and    BYTE PTR [ecx-0x74e6cddc],bl
  4109ca:	aad    0xec
  4109cc:	sahf   
  4109cd:	cmp    eax,0xf1629aae
  4109d2:	and    ah,0x69
  4109d5:	mov    ah,0xe4
  4109d7:	jp     0x4109b6
  4109d9:	inc    edi
  4109da:	mov    ah,0x42
  4109dc:	pop    esp
  4109dd:	ret    
  4109de:	inc    eax
  4109df:	std    
  4109e0:	sbb    BYTE PTR [ebp-0x3b998a1a],bl
  4109e6:	pop    esi
  4109e7:	pop    eax
  4109e8:	and    eax,0x617ec206
  4109ed:	cmp    al,0x16
  4109f0:	enter  0xadd7,0x25
  4109f4:	call   0x9b52:0xc03b1628
  4109fb:	es pop esp
  4109fd:	hlt    
  4109fe:	nop
  4109ff:	xchg   ecx,eax
  410a00:	cwde   
  410a01:	test   BYTE PTR [ecx*8+0x39e88e89],0x83
  410a09:	mov    ah,0x66
  410a0b:	cld    
  410a0c:	cmp    DWORD PTR [ebx+0x68],0xb419e321
  410a13:	jecxz  0x410a56
  410a15:	cmp    al,0x9d
  410a17:	mov    al,ds:0x3dd3167e
  410a1c:	xchg   ebp,eax
  410a1d:	adc    eax,0xbf88e6e6
  410a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a23:	inc    ebp
  410a24:	call   0x742b3e38
  410a29:	inc    esi
  410a2a:	jmp    0x4109e7
  410a2c:	lock aam 0x1c
  410a2f:	dec    ecx
  410a30:	inc    edx
  410a31:	jmp    FWORD PTR [ebp+0x24fce42b]
  410a37:	popf   
  410a38:	jae    0x410a46
  410a3a:	or     ah,BYTE PTR [edx-0x73]
  410a3d:	jecxz  0x410a68
  410a3f:	je     0x410a5b
  410a41:	popa   
  410a42:	fnstenv [ebx+0x15]
  410a45:	cli    
  410a46:	int    0x2b
  410a48:	jecxz  0x410a3c
  410a4a:	cdq    
  410a4b:	and    ebp,eax
  410a4d:	js     0x410a31
  410a4f:	(bad)  
  410a50:	fbld   TBYTE PTR [esi-0x73395a1]
  410a56:	inc    edx
  410a57:	cmp    edi,eax
  410a59:	test   DWORD PTR [esi+eax*1],ecx
  410a5c:	in     eax,0xc2
  410a5e:	das    
  410a5f:	or     al,0x47
  410a61:	adc    esp,DWORD PTR [eax-0x13b5b142]
  410a67:	rcl    DWORD PTR [esi+0x5f],cl
  410a6a:	mov    al,0xef
  410a6c:	mov    bh,0x75
  410a6e:	jno    0x410a2d
  410a70:	cmc    
  410a71:	fs gs ret 
  410a74:	ss jbe 0x410a16
  410a77:	test   al,0x50
  410a79:	mov    eax,ds:0x278ce727
  410a7e:	in     al,0xf3
  410a80:	sbb    al,0x9b
  410a82:	xchg   ebx,eax
  410a83:	into   
  410a84:	push   es
  410a85:	leave  
  410a86:	fdiv   QWORD PTR [ecx-0x376b80db]
  410a8c:	lods   al,BYTE PTR ds:[esi]
  410a8d:	mov    DWORD PTR [ecx+0x53ca76d6],ebx
  410a93:	mov    esi,0x5573c861
  410a98:	repz test al,0xee
  410a9b:	or     ebx,DWORD PTR [edi-0x7f]
  410a9e:	mov    edi,0x4a52faa5
  410aa3:	mov    DWORD PTR [edx-0x3345f7e7],edx
  410aa9:	sub    BYTE PTR [edx+0x79],dh
  410aac:	out    dx,eax
  410aad:	mov    ds:0x28f78eab,al
  410ab2:	push   esp
  410ab3:	aaa    
  410ab4:	push   ds
  410ab5:	push   0xdf61a83a
  410aba:	shl    dl,1
  410abc:	outs   dx,BYTE PTR ds:[esi]
  410abd:	rcl    BYTE PTR [edx-0x10],cl
  410ac0:	retf   
  410ac1:	call   0x643f:0xa3848a6b
  410ac8:	(bad)  
  410ac9:	fist   WORD PTR [ebx]
  410acb:	iret   
  410acc:	push   edx
  410acd:	xchg   ebx,eax
  410ace:	jl     0x410ad1
  410ad0:	mov    edi,0x77d9d250
  410ad5:	pop    ecx
  410ad6:	test   DWORD PTR [edx],esi
  410ad8:	and    esp,DWORD PTR [ebp-0x7f]
  410adb:	mov    eax,0xff465e50
  410ae0:	cmp    DWORD PTR [ebx-0x6e],edi
  410ae3:	cdq    
  410ae4:	mov    ds:0x1012192f,eax
  410ae9:	push   cs
  410aea:	les    esp,FWORD PTR ds:0x9e745b2
  410af0:	cs jnp 0x410b4e
  410af3:	int    0x7c
  410af5:	xor    bh,BYTE PTR [edi]
  410af7:	inc    ebx
  410af8:	add    ah,dl
  410afa:	leave  
  410afb:	xlat   BYTE PTR ds:[ebx]
  410afc:	adc    cl,ch
  410afe:	or     BYTE PTR [ebx-0x2974f717],0xc4
  410b05:	ss (bad) 
  410b07:	jmp    0x7e54d100
  410b0c:	(bad)  
  410b0d:	sbb    esp,DWORD PTR [edx+0xfe2e4d5]
  410b13:	or     al,0x9
  410b15:	add    al,BYTE PTR [edi-0x2555eeed]
  410b1b:	lds    esp,FWORD PTR [esi]
  410b1d:	das    
  410b1e:	js     0x410add
  410b20:	inc    esp
  410b21:	xlat   BYTE PTR ds:[ebx]
  410b22:	bound  esp,QWORD PTR [edi+edi*1-0x24110bc6]
  410b29:	mov    ecx,0x94244483
  410b2e:	sub    bl,BYTE PTR [ecx-0x5a1e1f67]
  410b34:	jl     0x410af5
  410b36:	in     al,0x69
  410b38:	adc    ecx,edx
  410b3a:	push   ecx
  410b3b:	ss sub bl,0x99
  410b3f:	mov    ebp,DWORD PTR [esi-0x56]
  410b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b43:	aas    
  410b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b45:	push   eax
  410b46:	jo     0x410b94
  410b48:	mov    cl,BYTE PTR [eax+0x5b]
  410b4b:	imul   ebp,esi,0xffffffbf
  410b4e:	xor    eax,DWORD PTR [ebx+ecx*4-0x30b9f94d]
  410b55:	push   es
  410b56:	pop    eax
  410b57:	icebp  
  410b58:	imul   esp,edi,0xffffff90
  410b5b:	test   dh,0xd9
  410b5e:	repnz xor bp,WORD PTR [eax+eax*2+0x3ee36112]
  410b67:	sbb    DWORD PTR [esi-0x27b9dbad],0x1cf15691
  410b71:	and    al,bh
  410b73:	jmp    0xd531:0x3f60e8d3
  410b7a:	bound  ebp,QWORD PTR [edx]
  410b7c:	xchg   ecx,eax
  410b7d:	repnz or al,0x46
  410b80:	in     al,dx
  410b81:	les    ebp,FWORD PTR [eax-0x6b]
  410b84:	inc    ebx
  410b85:	push   eax
  410b86:	cs jne 0x410bdc
  410b89:	out    dx,al
  410b8a:	ror    bl,1
  410b8c:	pop    esi
  410b8d:	mov    dh,0xf4
  410b8f:	gs out dx,al
  410b91:	lods   eax,DWORD PTR ds:[esi]
  410b92:	xchg   BYTE PTR [eax-0x64399d47],dh
  410b98:	imul   edi,DWORD PTR [ebx],0xb1d372b9
  410b9e:	xchg   ebp,eax
  410b9f:	call   0xf0eb7302
  410ba4:	bnd jo 0x410bb3
  410ba7:	pop    DWORD PTR [ecx+0x3]
  410baa:	popf   
  410bab:	lods   eax,DWORD PTR ds:[esi]
  410bac:	adc    edx,ebp
  410bae:	or     DWORD PTR [ebp-0x24],esp
  410bb1:	call   0x3e532790
  410bb6:	dec    ebp
  410bb7:	jecxz  0x410c36
  410bb9:	jmp    0x8de6:0x1cbe10e
  410bc0:	stos   BYTE PTR es:[edi],al
  410bc1:	out    0xff,eax
  410bc3:	xchg   BYTE PTR [ebp+0x16],ah
  410bc6:	(bad)  
  410bc7:	xlat   BYTE PTR ds:[ebx]
  410bc8:	sbb    ecx,esi
  410bca:	push   edi
  410bcb:	stc    
  410bcc:	and    cl,BYTE PTR [ecx+0x75bad95d]
  410bd2:	addr16 imul esi,edi,0xfffffff7
  410bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bd7:	lds    dx,DWORD PTR [edi+0x2c9c8779]
  410bde:	ja     0x410b82
  410be0:	in     eax,dx
  410be1:	pop    ss
  410be2:	scas   eax,DWORD PTR es:[edi]
  410be3:	in     al,dx
  410be4:	shl    DWORD PTR [esi+0x18],0xf8
  410be8:	outs   dx,DWORD PTR ds:[esi]
  410be9:	xchg   DWORD PTR [edx],eax
  410beb:	mov    esp,0x11426027
  410bf0:	out    dx,eax
  410bf1:	idiv   DWORD PTR [edx]
  410bf3:	hlt    
  410bf4:	push   0xffffffe8
  410bf6:	and    al,0xb
  410bf8:	aad    0xb7
  410bfa:	mov    esi,0x99b72cb9
  410bff:	iret   
  410c00:	arpl   WORD PTR fs:[edi+ebx*2-0x3e833b6c],ax
  410c08:	nop
  410c09:	or     BYTE PTR [esi],0xc
  410c0c:	push   eax
  410c0d:	in     al,0x8a
  410c0f:	repz (bad) 
  410c11:	cld    
  410c12:	dec    esp
  410c13:	and    eax,0x903fba46
  410c18:	loopne 0x410c16
  410c1a:	leave  
  410c1b:	mov    ebx,0xc516bfc7
  410c20:	push   ecx
  410c21:	add    DWORD PTR [edx],esi
  410c23:	or     dx,WORD PTR [edi]
  410c26:	es xor al,0x13
  410c29:	push   ds
  410c2a:	dec    edx
  410c2b:	sub    ah,BYTE PTR [esi+0x368d56f]
  410c31:	fwait
  410c32:	xchg   ebx,eax
  410c33:	mov    ?,edx
  410c35:	push   0xffffffe8
  410c37:	pop    ds
  410c38:	pop    ebp
  410c39:	push   ebp
  410c3a:	push   eax
  410c3b:	pop    eax
  410c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c3d:	push   ds
  410c3e:	out    dx,eax
  410c3f:	inc    edi
  410c40:	fdiv   QWORD PTR [eax+edi*4+0x4a67e87e]
  410c47:	in     al,dx
  410c48:	int    0x8f
  410c4a:	hlt    
  410c4b:	ret    0x89c9
  410c4e:	stc    
  410c4f:	addr16 mov ch,0xf9
  410c52:	mov    WORD PTR [ebp+0x69],gs
  410c55:	pop    eax
  410c56:	std    
  410c57:	mov    ecx,0x8bf2542a
  410c5c:	or     edi,DWORD PTR [ebx]
  410c5e:	add    ebx,DWORD PTR [esi+0x118dab30]
  410c64:	mov    ?,WORD PTR [ebp-0x473e23a4]
  410c6a:	fld    DWORD PTR [edi]
  410c6c:	push   esi
  410c6d:	pop    bx
  410c6f:	lods   eax,DWORD PTR ds:[esi]
  410c70:	mov    ah,0xc1
  410c72:	fwait
  410c73:	mov    WORD PTR ds:0xefa0911f,cs
  410c79:	(bad)  
  410c7a:	loop   0x410cc1
  410c7c:	xchg   ebx,eax
  410c7d:	in     eax,0x9d
  410c7f:	mov    ebp,0xd40fe558
  410c84:	sub    al,0x61
  410c86:	scas   al,BYTE PTR es:[edi]
  410c87:	scas   eax,DWORD PTR es:[edi]
  410c88:	std    
  410c89:	stc    
  410c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c8b:	vpsubusw ymm5,ymm7,YMMWORD PTR [edi+0x69]
  410c90:	sbb    eax,0x7171e3dd
  410c95:	inc    edi
  410c96:	jp     0x410c67
  410c98:	pop    ebx
  410c99:	ja     0x410c2f
  410c9b:	push   ebp
  410c9c:	(bad)  
  410c9d:	pop    edx
  410c9e:	push   esp
  410c9f:	mov    cl,0x88
  410ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ca2:	popf   
  410ca3:	nop
  410ca4:	jo     0x410cfc
  410ca6:	mov    WORD PTR [esi],ds
  410ca8:	aaa    
  410ca9:	pusha  
  410caa:	nop
  410cab:	jo     0x410c55
  410cad:	pop    esp
  410cae:	fld    TBYTE PTR [esp+ebp*1+0xdcb13f7]
  410cb5:	push   cs
  410cb6:	call   0xdd0f:0x4d5cb8af
  410cbd:	inc    edi
  410cbe:	xchg   ecx,eax
  410cbf:	mov    dl,0x50
  410cc1:	mov    al,0xe
  410cc3:	cmp    BYTE PTR [ecx-0x2c41786],0x3d
  410cca:	pop    eax
  410ccb:	add    dh,ch
  410ccd:	inc    eax
  410cce:	inc    esi
  410ccf:	loope  0x410ce5
  410cd1:	test   DWORD PTR [ecx+edi*2-0x6a],esp
  410cd5:	pop    ss
  410cd6:	ins    BYTE PTR es:[edi],dx
  410cd7:	js     0x410c67
  410cd9:	test   DWORD PTR [esi],edi
  410cdb:	stos   DWORD PTR es:[edi],eax
  410cdc:	cs xchg ebx,eax
  410cde:	inc    ebp
  410cdf:	push   edi
  410ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ce1:	inc    ebp
  410ce2:	dec    ebp
  410ce3:	xor    edi,DWORD PTR [ecx-0x45]
  410ce6:	jns    0x410c8e
  410ce8:	add    ecx,DWORD PTR [edi]
  410cea:	rep lods al,BYTE PTR ds:[esi]
  410cec:	add    ebx,DWORD PTR [ebp+0x4d]
  410cef:	jle    0x410d55
  410cf1:	out    dx,eax
  410cf2:	sbb    esi,ebx
  410cf4:	je     0x410d71
  410cf6:	dec    edi
  410cf7:	mov    al,0x47
  410cf9:	imul   edx,ebx,0x0
  410cfc:	cwde   
  410cfd:	int    0x0
  410cff:	(bad)  
  410d00:	pop    ebx
  410d01:	xor    bl,BYTE PTR [ecx+esi*4]
  410d04:	je     0x410d7c
  410d06:	rcl    BYTE PTR [eax-0x4b],0xa6
  410d0a:	pop    ss
  410d0b:	icebp  
  410d0c:	jo     0x410d45
  410d0e:	xchg   esi,eax
  410d0f:	jp     0x410d8e
  410d11:	out    0x5f,eax
  410d13:	inc    esp
  410d14:	jo     0x410cac
  410d16:	js     0x410d8b
  410d18:	and    al,BYTE PTR [edi-0x52]
  410d1b:	call   0x2c9d:0x7dbe49f2
  410d22:	xchg   edx,eax
  410d23:	jge    0x410d23
  410d25:	mov    esp,?
  410d27:	adc    al,0x6a
  410d29:	push   ds
  410d2a:	into   
  410d2b:	cli    
  410d2c:	mov    eax,ds:0x1c3b5976
  410d31:	retf   0x1a39
  410d34:	mov    bh,0xdb
  410d36:	js     0x410cee
  410d38:	and    BYTE PTR [eax],bl
  410d3a:	data16 add BYTE PTR [eax],dl
  410d3d:	cdq    
  410d3e:	and    ah,cl
  410d40:	adc    eax,0xe4dd1fb9
  410d45:	frstor [edx+eax*1+0x44b9725d]
  410d4c:	into   
  410d4d:	out    0x5d,al
  410d4f:	sub    BYTE PTR [edi-0x3],dl
  410d52:	in     eax,0xaa
  410d54:	and    ebx,ebx
  410d56:	jecxz  0x410d62
  410d58:	fwait
  410d59:	ret    0x72f3
  410d5c:	jno    0x410d87
  410d5e:	enter  0x76c0,0xc1
  410d62:	add    ebp,DWORD PTR [ecx+0x6]
  410d65:	mov    cl,0xb0
  410d67:	mov    al,ds:0xc4266ce4
  410d6c:	sbb    eax,0xacd689db
  410d71:	sti    
  410d72:	scas   al,BYTE PTR es:[edi]
  410d73:	icebp  
  410d74:	or     eax,0xdc250025
  410d79:	sub    eax,0xa13168eb
  410d7e:	xlat   BYTE PTR ds:[ebx]
  410d7f:	xor    edx,DWORD PTR [edx+0x44]
  410d82:	es aaa 
  410d84:	inc    ebp
  410d85:	fucomi st,st(1)
  410d87:	shl    BYTE PTR [edi-0x144aeacb],1
  410d8d:	ficom  WORD PTR [eax]
  410d8f:	dec    ebp
  410d90:	add    DWORD PTR [edi-0x72],edx
  410d93:	call   0x383e:0x60b123e5
  410d9a:	out    dx,eax
  410d9b:	adc    eax,edx
  410d9d:	shl    ebp,0x60
  410da0:	mov    ecx,esi
  410da2:	jnp    0x410d6f
  410da4:	jle    0x410d26
  410da6:	and    BYTE PTR [edx],bh
  410da8:	nop
  410da9:	inc    esp
  410daa:	cmp    al,0x1d
  410dac:	nop
  410dad:	jns    0x410de3
  410daf:	imul   edx,DWORD PTR [edx],0xffffffaf
  410db2:	add    DWORD PTR [ecx+0x78c245a],ebp
  410db8:	xchg   BYTE PTR [esi+0x6e575081],al
  410dbe:	jb     0x410d51
  410dc0:	lods   al,BYTE PTR ds:[esi]
  410dc1:	mov    eax,0xa6b0ce1f
  410dc6:	cmp    eax,0x7b2db710
  410dcb:	mov    bl,0x3e
  410dcd:	pop    ss
  410dce:	add    al,BYTE PTR [ebp-0x6]
  410dd1:	inc    ebx
  410dd2:	lea    ecx,[esi+0x54]
  410dd5:	call   0x64467446
  410dda:	ja     0x410e08
  410ddc:	sub    BYTE PTR [ecx-0x47309db7],al
  410de2:	pop    ebp
  410de3:	call   0xa9cb3586
  410de8:	loopne 0x410e4b
  410dea:	aad    0x48
  410dec:	push   0x82fc2ce
  410df1:	pop    esp
  410df2:	aas    
  410df3:	and    bh,BYTE PTR [edi+edx*1+0x6aac6df5]
  410dfa:	les    ebp,FWORD PTR ss:[edi-0x78dbcb9b]
  410e01:	mov    al,0xff
  410e03:	sti    
  410e04:	sub    BYTE PTR [esi+0x3e],0x2c
  410e08:	mov    bl,0x19
  410e0a:	fdiv   QWORD PTR [edi]
  410e0c:	add    ch,BYTE PTR [edx-0x4b236e89]
  410e12:	sahf   
  410e13:	sahf   
  410e14:	iret   
  410e15:	jae    0x410e49
  410e17:	ret    0x8ed0
  410e1a:	mov    cl,0x3d
  410e1c:	out    dx,al
  410e1d:	cmp    BYTE PTR [ecx],ch
  410e1f:	(bad)  
  410e20:	ficomp DWORD PTR [edi+0x59]
  410e23:	inc    esi
  410e24:	mov    esi,DWORD PTR [ecx]
  410e26:	add    BYTE PTR [eax-0x59ff9f82],bl
  410e2c:	test   DWORD PTR [edi+0x1deac463],esp
  410e32:	aas    
  410e33:	in     al,dx
  410e34:	(bad)  
  410e35:	push   eax
  410e36:	push   cs
  410e37:	not    ah
  410e39:	xor    bh,BYTE PTR [ebx-0x70]
  410e3c:	pop    ss
  410e3d:	aam    0x5d
  410e3f:	mov    dh,0x68
  410e41:	sub    al,0x90
  410e43:	out    dx,eax
  410e44:	sahf   
  410e45:	jae    0x410e77
  410e47:	fs cwde 
  410e49:	mov    ch,0xc6
  410e4b:	pop    ecx
  410e4c:	jl     0x410ddc
  410e4e:	inc    ecx
  410e4f:	mov    cl,0xa1
  410e51:	arpl   cx,sp
  410e53:	push   edi
  410e54:	mov    WORD PTR [ebx],ds
  410e56:	or     eax,0x3a67d306
  410e5b:	lock dec eax
  410e5d:	ret    0x3f81
  410e60:	pop    ds
  410e61:	in     al,dx
  410e62:	dec    eax
  410e63:	xor    al,0x33
  410e65:	loope  0x410dff
  410e67:	and    al,0xd5
  410e69:	rcr    DWORD PTR [edx-0x35c64794],cl
  410e6f:	cmp    esi,0x4d01b581
  410e75:	mov    ebp,0xa14190f9
  410e7a:	mov    BYTE PTR [edx+0x4fe3483f],al
  410e80:	add    eax,0x6b333f3d
  410e85:	ror    DWORD PTR [esi],1
  410e87:	mov    al,0x39
  410e89:	fs loopne 0x410ebd
  410e8c:	cmp    BYTE PTR [esi+0x1661ce23],al
  410e92:	xchg   ebx,eax
  410e93:	mov    BYTE PTR [ebx],cl
  410e95:	adc    dl,ah
  410e97:	mov    ecx,ebp
  410e99:	jmp    0xb2ee:0x6f7ffb1f
  410ea0:	sub    BYTE PTR [ebx],dh
  410ea2:	adc    edx,esp
  410ea4:	jg     0x410ee9
  410ea6:	sti    
  410ea7:	mov    edx,0xea755c19
  410eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ead:	es leave 
  410eaf:	jl     0x410e42
  410eb1:	sub    DWORD PTR [eax+0x6d],ecx
  410eb4:	mov    WORD PTR [ebx+0x52b88445],?
  410eba:	cs jmp 0xa874:0x77f6bcb7
  410ec2:	mov    ecx,0xf75bc63f
  410ec7:	xlat   BYTE PTR ds:[ebx]
  410ec8:	push   0xffffffa2
  410eca:	pop    es
  410ecb:	lahf   
  410ecc:	(bad)  
  410ece:	xchg   DWORD PTR [edi-0x2f],ecx
  410ed1:	xchg   esi,eax
  410ed2:	test   al,0x3d
  410ed4:	sub    esi,DWORD PTR [esi+0x7]
  410ed7:	bound  ebx,QWORD PTR [ebx-0x14aa5021]
  410edd:	cdq    
  410ede:	data16 fucomip st,st(6)
  410ee1:	(bad)  
  410ee3:	sahf   
  410ee4:	rcl    BYTE PTR [esi],1
  410ee6:	cs fs (bad) 
  410ee9:	js     0x410f0a
  410eeb:	dec    esi
  410eec:	(bad)  
  410eed:	(bad)
  410ef0:	adc    dl,BYTE PTR [edx-0x356cb156]
  410ef6:	jne    0x410f11
  410ef8:	pusha  
  410ef9:	xor    ah,BYTE PTR [ecx]
  410efb:	dec    eax
  410efc:	outs   dx,BYTE PTR ds:[esi]
  410efd:	test   al,0x50
  410eff:	xchg   edx,eax
  410f00:	ins    BYTE PTR es:[edi],dx
  410f01:	inc    eax
  410f02:	jns    0x410f15
  410f04:	sub    esp,DWORD PTR [ebx+0x3e]
  410f07:	add    ebp,DWORD PTR [ecx+eax*8-0x2e]
  410f0b:	addr16 cdq 
  410f0d:	xlat   BYTE PTR ds:[ebx]
  410f0e:	mov    bl,0x92
  410f10:	out    0x11,eax
  410f12:	dec    esi
  410f13:	out    dx,al
  410f14:	(bad)  
  410f15:	int3   
  410f16:	adc    ebp,DWORD PTR [ebx]
  410f18:	repnz std 
  410f1a:	inc    esi
  410f1b:	mov    ch,0xfd
  410f1d:	hlt    
  410f1e:	and    BYTE PTR [eax],al
  410f20:	dec    esi
  410f21:	stos   DWORD PTR es:[edi],eax
  410f22:	aad    0x73
  410f24:	into   
  410f25:	jne    0x410efe
  410f27:	xchg   esi,eax
  410f28:	add    dl,BYTE PTR [edx+0x7]
  410f2b:	stc    
  410f2c:	pop    ss
  410f2d:	adc    al,0xdb
  410f2f:	xor    ebx,DWORD PTR [esi-0x76fac4b7]
  410f35:	shl    esi,cl
  410f37:	iret   
  410f38:	mov    ebx,0x649f0790
  410f3d:	and    DWORD PTR [eax],0x14
  410f40:	inc    ebp
  410f41:	stos   BYTE PTR es:[edi],al
  410f42:	out    dx,al
  410f43:	fnsetpm(287 only) 
  410f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f46:	push   es
  410f47:	or     al,0xce
  410f49:	xlat   BYTE PTR ds:[ebx]
  410f4a:	out    dx,eax
  410f4b:	outs   dx,DWORD PTR ds:[esi]
  410f4c:	aas    
  410f4d:	add    ah,ah
  410f4f:	or     BYTE PTR ss:[edi],dl
  410f52:	(bad)  
  410f53:	repnz lods al,BYTE PTR ds:[esi]
  410f55:	mov    edx,DWORD PTR [ecx+0x30277171]
  410f5b:	loope  0x410f9e
  410f5d:	stc    
  410f5e:	jne    0x410ef2
  410f60:	mov    edi,0x13a913ab
  410f65:	inc    eax
  410f66:	add    BYTE PTR [ebx],ah
  410f68:	lahf   
  410f69:	in     al,dx
  410f6a:	retf   0x5c1f
  410f6d:	fbld   TBYTE PTR [ecx+0x62cc30aa]
  410f73:	push   ebx
  410f74:	outs   dx,BYTE PTR ds:[esi]
  410f75:	fcom   QWORD PTR [edx+0x5]
  410f78:	adc    eax,0x2fae8437
  410f7d:	aaa    
  410f7e:	pop    esp
  410f7f:	scas   al,BYTE PTR es:[edi]
  410f80:	xor    edx,DWORD PTR [eax-0x7e]
  410f83:	xchg   edx,eax
  410f84:	adc    BYTE PTR [ebp+edx*1-0x2f],0x2a
  410f89:	add    DWORD PTR [esi-0xe],ecx
  410f8c:	hlt    
  410f8d:	inc    ebp
  410f8e:	cmp    DWORD PTR [esi+0x74c64d6a],ecx
  410f94:	jb     0x410f85
  410f96:	or     al,0x71
  410f98:	sub    BYTE PTR [eax+0x72cc3be1],dh
  410f9e:	cmp    al,0x3d
  410fa0:	adc    DWORD PTR [ecx+0x45],ecx
  410fa3:	pusha  
  410fa4:	adc    DWORD PTR [ebp+ebx*4+0x71],esp
  410fa8:	es inc edi
  410faa:	mov    bh,0xa6
  410fac:	mov    bl,bh
  410fae:	cmp    DWORD PTR [edi-0x1c2f2b62],ecx
  410fb4:	dec    edx
  410fb5:	rol    DWORD PTR [eax+0x7f049a0],cl
  410fbb:	jmp    0xb8443056
  410fc0:	xor    al,0x42
  410fc2:	iret   
  410fc3:	and    al,0xf
  410fc5:	test   al,0xf2
  410fc7:	pusha  
  410fc8:	mov    ecx,0x12951c1b
  410fcd:	and    ebx,DWORD PTR [esi+0x29]
  410fd0:	sti    
  410fd1:	into   
  410fd2:	sub    ebx,DWORD PTR [edx+0x80d1ce4]
  410fd8:	pop    ecx
  410fd9:	cli    
  410fda:	jnp    0x410f94
  410fdc:	bound  esp,QWORD PTR [eax+esi*1-0x42b0076a]
  410fe3:	jge    0x410fbb
  410fe5:	das    
  410fe6:	das    
  410fe7:	mov    eax,0xb66758dc
  410fec:	cmp    eax,0x6db3d104
  410ff1:	mov    ch,ch
  410ff3:	pop    ds
  410ff4:	(bad)  
  410ff5:	mov    esi,0xb74d1ade
  410ffa:	add    eax,DWORD PTR [eax-0x268f697]
  411000:	mov    al,ds:0x9951aa6a
  411005:	loopne 0x410fcd
  411007:	dec    ecx
  411008:	ja     0x410fc1
  41100a:	push   ds
  41100b:	jnp    0x410ffd
  41100d:	stos   DWORD PTR es:[edi],eax
  41100e:	int    0xc4
  411010:	adc    al,0x8a
  411012:	inc    esp
  411013:	repz sbb al,0xa8
  411016:	mov    esp,0xe2bdafd1
  41101b:	pop    ebp
  41101c:	pop    esi
  41101d:	daa    
  41101e:	dec    eax
  41101f:	(bad)  
  411020:	loop   0x410ffb
  411022:	sbb    cl,BYTE PTR [edi]
  411024:	outs   dx,DWORD PTR ds:[esi]
  411025:	xor    bh,ch
  411027:	outs   dx,BYTE PTR ds:[esi]
  411028:	inc    ecx
  411029:	mov    bh,BYTE PTR [esi-0x543724f8]
  41102f:	bound  edx,QWORD PTR [ebx]
  411031:	pop    es
  411032:	(bad)  
  411034:	push   eax
  411035:	inc    eax
  411036:	dec    DWORD PTR [edi-0x2dd78ae0]
  41103c:	gs and al,0x5b
  41103f:	push   es
  411040:	cmp    al,0x59
  411042:	dec    edi
  411043:	aaa    
  411044:	fimul  WORD PTR [edx]
  411046:	(bad)  
  411047:	mov    dh,0xde
  411049:	inc    ebp
  41104a:	hlt    
  41104b:	retfw  
  41104d:	popf   
  41104e:	stos   DWORD PTR es:[edi],eax
  41104f:	cmp    dl,bh
  411051:	mov    dl,0xfd
  411053:	(bad)  
  411055:	pop    esi
  411056:	iret   
  411057:	and    esp,ecx
  411059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41105a:	fimul  DWORD PTR [ebp-0x2642a8e1]
  411060:	sti    
  411061:	dec    ecx
  411062:	cmp    edx,DWORD PTR [esp+ebp*1+0x31331bb5]
  411069:	push   edi
  41106a:	inc    esi
  41106b:	in     al,dx
  41106c:	push   ds
  41106d:	xor    BYTE PTR [edx+0x43],ch
  411070:	popf   
  411071:	jnp    0x4110e1
  411073:	neg    DWORD PTR [edi+0x27]
  411076:	aas    
  411077:	test   al,0xca
  411079:	sbb    al,0x67
  41107b:	push   edx
  41107c:	inc    edi
  41107d:	mov    ds:0x4ffacaa0,eax
  411082:	das    
  411083:	leave  
  411084:	jnp    0x4110b7
  411086:	mov    bh,0xfb
  411088:	ror    edi,1
  41108a:	repnz pop ss
  41108c:	ins    BYTE PTR es:[edi],dx
  41108d:	add    al,0xa2
  41108f:	loopne 0x411075
  411091:	loop   0x4110ef
  411093:	aaa    
  411094:	cmp    esi,DWORD PTR [edi+0x2a]
  411097:	or     DWORD PTR [edi+edx*1-0xf61ba83],esi
  41109e:	xor    eax,edx
  4110a0:	shl    BYTE PTR ds:0xc48ff748,0x1
  4110a7:	jmp    0x41103e
  4110a9:	pop    esp
  4110aa:	retf   0x929d
  4110ad:	test   BYTE PTR [ebx],dh
  4110af:	cwde   
  4110b0:	push   es
  4110b1:	jo     0x41106f
  4110b3:	das    
  4110b4:	mov    DWORD PTR [ebp-0xa],ecx
  4110b7:	lock mov DWORD PTR [ecx+eiz*1+0x4f],0xba50c8df
  4110c0:	jp     0x4110a1
  4110c2:	xchg   esp,eax
  4110c3:	dec    edi
  4110c4:	(bad)  
  4110c5:	in     eax,dx
  4110c6:	sub    BYTE PTR [edx+esi*4-0x24],0x7d
  4110cb:	push   ds
  4110cc:	pop    ss
  4110cd:	jmp    0x4110d8
  4110cf:	in     eax,dx
  4110d0:	mov    ebx,0xbdccadf5
  4110d5:	(bad)  
  4110d6:	mov    WORD PTR [ecx+0x3d],cs
  4110d9:	rcpps  xmm5,XMMWORD PTR [eax]
  4110dc:	out    dx,eax
  4110dd:	mov    dh,0xea
  4110df:	in     eax,dx
  4110e0:	or     esi,DWORD PTR [edi]
  4110e2:	aam    0x6f
  4110e4:	sub    eax,0x369d746e
  4110e9:	sub    esi,DWORD PTR [ebx-0x6c]
  4110ec:	gs das 
  4110ee:	sbb    DWORD PTR ds:0x67f94260,ecx
  4110f4:	sbb    al,0x22
  4110f6:	cmc    
  4110f7:	jbe    0x4110c0
  4110f9:	das    
  4110fa:	add    BYTE PTR [eax],al
  4110fc:	jp     0x41116d
  4110fe:	mov    bh,0xa6
  411100:	xchg   edx,eax
  411101:	aam    0x15
  411103:	sub    eax,DWORD PTR [eax]
  411105:	push   ebp
  411106:	push   0x6c
  411108:	cmp    al,0xe1
  41110a:	fimul  WORD PTR gs:[ecx-0x3f]
  41110e:	jmp    0xdc98:0x8346b4bd
  411115:	int3   
  411116:	(bad)  
  411117:	mov    BYTE PTR [ecx-0x7e6c87cd],dh
  41111d:	gs inc edx
  41111f:	fnstcw WORD PTR [eax-0xc07c308]
  411125:	in     eax,dx
  411126:	ja     0x411172
  411128:	stos   DWORD PTR es:[edi],eax
  411129:	dec    edi
  41112a:	pop    edi
  41112b:	fisubr WORD PTR [edx]
  41112d:	call   0x4d29:0xce556da0
  411134:	sub    ecx,esp
  411136:	sbb    dh,BYTE PTR [ebx+0x79995da3]
  41113c:	jno    0x4110fe
  41113e:	sti    
  41113f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411140:	(bad)  
  411141:	inc    esp
  411142:	mov    ecx,0x8a6e3949
  411147:	sub    BYTE PTR [edi+0x43db4835],ah
  41114d:	jp     0x411186
  41114f:	ins    BYTE PTR es:[edi],dx
  411150:	js     0x411198
  411152:	mov    eax,ds:0x97f2fd3b
  411157:	mov    ss,WORD PTR [eax]
  411159:	mov    bl,0x88
  41115b:	mov    esp,0x1c901fb8
  411160:	sub    DWORD PTR [esi-0x2b],edi
  411163:	outs   dx,BYTE PTR ds:[esi]
  411164:	or     eax,0x1bcc2c9f
  411169:	sub    ebx,DWORD PTR ds:0x738884ec
  41116f:	ret    
  411170:	in     eax,dx
  411171:	bound  ebx,QWORD PTR [eax+ebp*1+0x3f]
  411175:	cmc    
  411176:	packuswb mm2,mm3
  411179:	fst    QWORD PTR [ebx+ecx*2-0x4c]
  41117d:	cmp    ah,BYTE PTR [edx+0x5122cfa0]
  411183:	add    al,0x63
  411185:	out    dx,eax
  411186:	dec    ebp
  411187:	sbb    dh,bh
  411189:	test   ecx,ecx
  41118b:	push   ebp
  41118c:	mov    cl,0xb4
  41118e:	and    eax,0xb2a944d4
  411193:	fs push es
  411195:	sar    DWORD PTR [ebx+0x5],0xc4
  411199:	add    DWORD PTR [esi],esp
  41119b:	call   DWORD PTR [esi-0x5a]
  41119e:	aaa    
  41119f:	imul   edx,esp,0xffffffbd
  4111a2:	xor    ecx,edx
  4111a4:	or     DWORD PTR [edx-0x3a],edx
  4111a7:	mov    ah,0x72
  4111a9:	les    ebx,FWORD PTR [edi+0x59]
  4111ac:	dec    ecx
  4111ad:	outs   dx,DWORD PTR ds:[esi]
  4111ae:	mov    ebx,0xc4d485ba
  4111b3:	cmp    DWORD PTR [ebx],ebx
  4111b5:	mov    DWORD PTR [ebx],ebp
  4111b7:	xchg   DWORD PTR [edx+esi*1+0x59],ebx
  4111bb:	jl     0x4111dc
  4111bd:	inc    DWORD PTR [eax+0x23]
  4111c0:	add    BYTE PTR [ebp+0x69],dl
  4111c3:	adc    dh,cl
  4111c5:	xchg   edx,eax
  4111c6:	pop    eax
  4111c7:	enter  0xd2b,0x50
  4111cb:	mov    ecx,0xed48c762
  4111d0:	and    DWORD PTR [ecx+0x316f6238],edi
  4111d6:	pop    eax
  4111d7:	sbb    DWORD PTR [edx-0x13],esp
  4111da:	jg     0x411234
  4111dc:	jp     0x4111c2
  4111de:	pop    ebp
  4111df:	cmp    eax,DWORD PTR [eax+0x23]
  4111e2:	push   0x0
  4111e4:	mov    al,ds:0xf309bbd1
  4111e9:	ror    DWORD PTR [edi],cl
  4111eb:	pusha  
  4111ec:	test   BYTE PTR [ecx],dl
  4111ee:	push   esp
  4111ef:	dec    eax
  4111f0:	or     BYTE PTR [edx],0xa8
  4111f3:	push   ss
  4111f4:	gs pop es
  4111f6:	adc    edi,DWORD PTR [ebp-0x66]
  4111f9:	fsubr  st(7),st
  4111fb:	and    dh,dl
  4111fd:	xchg   esi,eax
  4111fe:	ret    
  4111ff:	jmp    0xfe69f61c
  411204:	cmp    al,0xc2
  411206:	imul   esp,DWORD PTR [esi+0x7c6e882c],0x604f0ec4
  411210:	push   edi
  411211:	ins    DWORD PTR es:[edi],dx
  411212:	mov    eax,ds:0x53a4cce8
  411217:	frstor [ecx+0x49083d38]
  41121d:	mov    cs,WORD PTR [esi+esi*4+0x3d]
  411221:	xor    al,BYTE PTR [ecx]
  411223:	inc    cl
  411225:	xchg   esi,eax
  411226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411227:	ret    0xb9a3
  41122a:	jmp    0xe91bc348
  41122f:	rol    DWORD PTR [esi-0x72b2c87a],1
  411235:	and    BYTE PTR [edx],al
  411237:	push   esi
  411238:	cmp    eax,0xccbd07f5
  41123d:	push   edi
  41123e:	cmp    DWORD PTR [esi-0x3f3eb89a],esp
  411244:	imul   esi,esi,0xffffffbe
  411247:	mov    ah,0xf5
  411249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41124a:	xor    DWORD PTR [esi-0x58c8c670],ecx
  411250:	add    ch,ah
  411252:	iret   
  411253:	aas    
  411254:	pop    edx
  411255:	retf   0xe9f3
  411258:	fsubr  st(4),st
  41125a:	(bad)  
  41125b:	(bad)  
  41125c:	int    0x8f
  41125e:	dec    esi
  41125f:	arpl   WORD PTR fs:[edi],si
  411262:	adc    DWORD PTR [ecx-0x20],eax
  411265:	mov    esp,0x3f641ad5
  41126a:	inc    ebp
  41126b:	cmp    BYTE PTR [ecx-0x11e42a47],ah
  411271:	jmp    0x411200
  411273:	(bad)  
  411274:	xchg   edi,eax
  411275:	jne    0x4112eb
  411277:	sub    DWORD PTR [ecx+0x67],ebx
  41127a:	leave  
  41127b:	(bad)  
  41127c:	clc    
  41127d:	les    edi,FWORD PTR [edx-0x33497a9e]
  411283:	add    ah,BYTE PTR [ecx]
  411285:	ins    DWORD PTR es:[edi],dx
  411286:	loop   0x4112fa
  411288:	inc    edx
  411289:	xor    eax,0x87764917
  41128e:	js     0x4112ff
  411290:	cs sahf 
  411292:	test   ch,dl
  411294:	xor    BYTE PTR [edi+0x2f],bh
  411297:	and    BYTE PTR [edx+0x2b7c56c],dh
  41129d:	and    eax,0xd7a6177
  4112a2:	mov    dl,0xd
  4112a4:	out    0x2a,eax
  4112a6:	sbb    BYTE PTR [edi-0x48],cl
  4112a9:	rcr    DWORD PTR [edi],1
  4112ab:	jne    0x41126e
  4112ad:	push   esi
  4112ae:	jge    0x4112ca
  4112b0:	scas   eax,DWORD PTR es:[edi]
  4112b1:	push   es
  4112b2:	std    
  4112b3:	inc    ebp
  4112b4:	jge    0x4112e5
  4112b6:	dec    edx
  4112b7:	mov    ds:0x7b664d4,eax
  4112bc:	test   DWORD PTR [esi+0x7e625359],edi
  4112c2:	out    dx,eax
  4112c3:	les    edx,FWORD PTR [edi-0x37]
  4112c6:	scas   eax,DWORD PTR es:[edi]
  4112c7:	add    eax,0x4adef491
  4112cc:	jp     0x41133b
  4112ce:	pop    es
  4112cf:	loopne 0x41134c
  4112d1:	xchg   edi,eax
  4112d2:	(bad)  
  4112d3:	retf   
  4112d4:	(bad)  
  4112d5:	xchg   esi,eax
  4112d6:	dec    esi
  4112d7:	pop    ds
  4112d8:	xchg   ebx,eax
  4112d9:	or     al,0xbc
  4112db:	or     BYTE PTR [eax],0x54
  4112de:	dec    ebx
  4112df:	jmp    0xc59a951e
  4112e4:	mov    eax,ds:0xa3661114
  4112e9:	fisub  WORD PTR [edi]
  4112eb:	bound  ebx,QWORD PTR [esp+eiz*8-0x40dccf72]
  4112f2:	cmp    esi,DWORD PTR [edx+edi*1-0x73]
  4112f6:	xor    al,0x4
  4112f8:	in     eax,dx
  4112f9:	hlt    
  4112fa:	xchg   DWORD PTR [ebx],ebx
  4112fc:	xor    BYTE PTR [eax+0x3a26d173],ah
  411302:	adc    DWORD PTR [edx],ebx
  411304:	fbld   TBYTE PTR ds:0xe41467e9
  41130a:	lea    edx,[ebx+esi*4-0x8c0032b]
  411311:	xchg   edx,eax
  411312:	std    
  411313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411314:	xchg   esp,eax
  411315:	push   cs
  411316:	ret    
  411317:	jb     0x411326
  411319:	and    ebx,esp
  41131b:	repnz pusha 
  41131d:	push   cs
  41131e:	adc    BYTE PTR [edx],dl
  411320:	adc    al,BYTE PTR [ecx]
  411322:	(bad)  
  411323:	dec    ecx
  411324:	rcr    BYTE PTR [ebx+esi*4-0x69],0x50
  411329:	lahf   
  41132a:	hlt    
  41132b:	mov    cl,0x80
  41132d:	(bad)  
  41132e:	imul   eax,DWORD PTR [edi-0x2ca2a823],0xef678629
  411338:	sub    bl,BYTE PTR [ebp+0x6402fcb2]
  41133e:	ret    
  41133f:	xor    ebp,DWORD PTR [edi-0x617a387b]
  411345:	pop    eax
  411346:	jo     0x4112e1
  411348:	lds    eax,FWORD PTR [eax-0x7af3c1a8]
  41134e:	pop    esp
  41134f:	sbb    DWORD PTR [edi-0x2a],ebp
  411352:	retf   0x36cf
  411355:	push   esp
  411356:	lahf   
  411357:	xchg   ebp,eax
  411358:	sar    DWORD PTR [ebx],1
  41135a:	and    ebx,DWORD PTR [esi]
  41135c:	and    ecx,ebp
  41135e:	xor    al,0xe8
  411360:	sahf   
  411361:	mov    cl,0xa6
  411363:	xchg   edx,eax
  411364:	or     cl,dl
  411366:	pop    esp
  411367:	aam    0x8e
  411369:	daa    
  41136a:	pop    ebx
  41136b:	loope  0x4113b3
  41136d:	push   edx
  41136e:	comiss xmm5,DWORD PTR [ecx]
  411371:	and    al,0x6e
  411373:	in     eax,0xbc
  411375:	and    dl,cl
  411377:	adc    ah,BYTE PTR [ebp+eax*4+0x4f]
  41137b:	stos   DWORD PTR es:[edi],eax
  41137c:	aaa    
  41137d:	das    
  41137e:	push   eax
  41137f:	and    BYTE PTR [edi],0xe0
  411382:	and    esp,eax
  411384:	icebp  
  411385:	mov    WORD PTR [eax+0x14],cs
  411388:	sbb    esi,DWORD PTR [ebp+0x5c]
  41138b:	fadd   QWORD PTR [edx+0x251c2f6d]
  411391:	pop    esi
  411392:	pop    ebx
  411393:	jg     0x41136a
  411395:	aaa    
  411396:	jno    0x41137f
  411398:	std    
  411399:	pop    ds
  41139a:	dec    DWORD PTR [esi-0x1bbf0251]
  4113a0:	aaa    
  4113a1:	jae    0x41138d
  4113a3:	addr16 inc esi
  4113a5:	pop    edi
  4113a6:	aaa    
  4113a7:	ds nop
  4113a9:	fs in  al,0xed
  4113ac:	scas   al,BYTE PTR es:[edi]
  4113ad:	jns    0x4113f6
  4113af:	or     eax,0x9a7b0dd6
  4113b4:	in     eax,dx
  4113b5:	push   0xe014c79f
  4113ba:	xor    DWORD PTR [ebp-0x5c09c6db],edi
  4113c0:	popa   
  4113c1:	push   ecx
  4113c2:	push   esp
  4113c3:	push   esp
  4113c4:	xor    esi,ebx
  4113c6:	mov    al,ds:0x6c89209f
  4113cb:	repz aaa 
  4113cd:	mov    dl,BYTE PTR [ecx+0x6bdc526a]
  4113d3:	push   0x5512bbd2
  4113d8:	sub    al,0xdf
  4113da:	es test al,0xf2
  4113dd:	mov    edi,0x26147883
  4113e2:	adc    ch,BYTE PTR [esi+ecx*2]
  4113e5:	mov    cl,0x64
  4113e7:	pop    ebp
  4113e8:	nop
  4113e9:	xchg   edi,eax
  4113ea:	ja     0x4113dd
  4113ec:	inc    esp
  4113ed:	fxam   
  4113ef:	stc    
  4113f0:	dec    edx
  4113f1:	and    dl,BYTE PTR [ebp+0x33]
  4113f4:	mov    eax,0x9f391973
  4113f9:	inc    edx
  4113fa:	cmp    eax,0x1b04f896
  4113ff:	or     DWORD PTR [edi-0x8953b9],ebx
  411405:	inc    ecx
  411406:	push   ebx
  411407:	pop    es
  411408:	pushf  
  411409:	iret   
  41140a:	cmp    eax,DWORD PTR [eax+0x5f]
  41140d:	sbb    bh,BYTE PTR [ebp+0x66669244]
  411413:	jo     0x411490
  411415:	cdq    
  411416:	fmul   DWORD PTR [esi+0x33ae4458]
  41141c:	jno    0x411478
  41141e:	frstor [esi-0x59]
  411421:	jmp    0x9939ad4c
  411426:	adc    DWORD PTR ds:[ebx],edi
  411429:	ja     0x41140f
  41142b:	scas   eax,DWORD PTR es:[edi]
  41142c:	sub    eax,0xf8eeb431
  411431:	adc    BYTE PTR [edi+0x9],dh
  411434:	ret    
  411435:	jle    0x4113dd
  411437:	pusha  
  411438:	les    edx,FWORD PTR [ebx+eax*2+0x1607cafd]
  41143f:	faddp  st(6),st
  411441:	dec    ecx
  411442:	out    0xdf,al
  411444:	xchg   edx,eax
  411445:	and    bh,BYTE PTR [ebx]
  411447:	inc    esp
  411448:	call   0x87beaaf
  41144d:	inc    edi
  41144e:	ret    
  41144f:	cs inc ebx
  411451:	sti    
  411452:	(bad)  
  411453:	and    al,0xc6
  411455:	in     al,0x1a
  411457:	xchg   ebx,eax
  411458:	xchg   ebp,eax
  411459:	add    BYTE PTR [edx-0x2e],bl
  41145c:	lods   eax,DWORD PTR ds:[esi]
  41145d:	repz js 0x41140a
  411460:	shr    DWORD PTR [edx+ebx*1+0x16359af5],1
  411467:	adc    eax,0x78948e4b
  41146c:	hlt    
  41146d:	sub    DWORD PTR [eax],ecx
  41146f:	stos   DWORD PTR es:[edi],eax
  411470:	pop    ds
  411471:	cdq    
  411472:	push   ebx
  411473:	mov    ecx,0x22dc403b
  411478:	ret    
  411479:	push   0xffffff90
  41147b:	add    BYTE PTR [ecx-0x68],0x54
  41147f:	rcl    dl,0x78
  411482:	pusha  
  411483:	dec    eax
  411484:	or     eax,0x1049f5bb
  411489:	mov    ah,ah
  41148b:	add    edi,esp
  41148d:	xchg   esp,eax
  41148e:	sbb    DWORD PTR [eax+0x12],ebp
  411491:	mov    ecx,0x4aee2163
  411496:	push   0x65
  411498:	dec    esi
  411499:	das    
  41149a:	mov    dl,0x3a
  41149c:	adc    esi,DWORD PTR [edi+0x5]
  41149f:	jl     0x4114f1
  4114a1:	call   0x592c8459
  4114a6:	rcr    BYTE PTR [ebx+0x40],cl
  4114a9:	in     eax,0x35
  4114ab:	and    dh,bh
  4114ad:	ds mov bl,0x74
  4114b0:	mov    esp,0x99e2bf19
  4114b5:	es in  eax,0x60
  4114b8:	xor    dh,ch
  4114ba:	mov    dh,0xaf
  4114bc:	gs popa 
  4114be:	rcr    DWORD PTR [ebx+0x7b569283],0x85
  4114c5:	add    ecx,DWORD PTR [ebx-0x367d2400]
  4114cb:	leave  
  4114cc:	mov    bl,BYTE PTR [esi+0xb]
  4114cf:	sar    DWORD PTR [ebx],0x4e
  4114d2:	and    ebp,DWORD PTR [eax+ebp*2-0x2c2f7912]
  4114d9:	sub    edx,DWORD PTR [edi]
  4114db:	sub    ch,BYTE PTR [esi+0xee1c9f0]
  4114e1:	je     0x41146f
  4114e3:	pop    eax
  4114e5:	mov    ds:0x39b906d0,al
  4114ea:	sbb    BYTE PTR [eax-0x6a],dh
  4114ed:	sub    ebx,DWORD PTR [esp-0x34107d46]
  4114f4:	push   cs
  4114f5:	cli    
  4114f6:	dec    esp
  4114f7:	xor    DWORD PTR [eax-0x1c],ebx
  4114fa:	je     0x4114bb
  4114fc:	sub    eax,0xddfc1ec3
  411501:	push   eax
  411502:	jbe    0x411523
  411504:	inc    edi
  411505:	and    cl,BYTE PTR [edx]
  411507:	cmp    esp,ecx
  411509:	adc    ebp,ebx
  41150b:	pop    ds
  41150c:	sub    al,0x8d
  41150e:	mov    bl,0x16
  411510:	retf   0xa714
  411513:	pop    ebp
  411514:	jmp    0x4114ba
  411516:	out    0xaa,al
  411518:	push   ss
  411519:	jge    0x411540
  41151b:	jnp    0x411575
  41151d:	and    DWORD PTR [esi+0x2e878cb4],edx
  411523:	or     ch,BYTE PTR [eax-0x20]
  411526:	push   esp
  411527:	mov    ebx,0x7bfb9240
  41152c:	lods   al,BYTE PTR ds:[esi]
  41152d:	lods   al,BYTE PTR ds:[esi]
  41152e:	add    al,0x57
  411530:	(bad)  
  411532:	xchg   esp,eax
  411533:	and    eax,0xf4cb1a7e
  411538:	pop    esp
  411539:	imul   eax,DWORD PTR [esi+0x7e1f2de1],0x61112025
  411543:	stos   DWORD PTR es:[edi],eax
  411544:	inc    edx
  411545:	xor    esp,DWORD PTR [ebp+0x6a8c876d]
  41154b:	xor    edx,DWORD PTR [esi]
  41154d:	mov    WORD PTR [ecx],ss
  41154f:	push   cs
  411550:	dec    eax
  411551:	inc    esi
  411552:	out    0xed,eax
  411554:	push   esi
  411555:	cmovl  edx,edi
  411558:	pop    ds
  411559:	add    ebx,DWORD PTR [edi]
  41155b:	mov    eax,ds:0x11beaa50
  411560:	mov    edi,esi
  411562:	in     eax,dx
  411563:	xchg   esi,eax
  411564:	mov    ebp,0x2e747e0b
  411569:	in     eax,0x3e
  41156b:	pop    es
  41156c:	adc    eax,0x84dce14d
  411571:	cli    
  411572:	cmp    BYTE PTR [edi+0x7929e228],bh
  411578:	dec    esi
  411579:	fcmove st,st(1)
  41157b:	mov    bl,0x11
  41157d:	dec    ecx
  41157e:	lods   eax,DWORD PTR ds:[esi]
  41157f:	stos   BYTE PTR es:[edi],al
  411580:	jns    0x41157a
  411582:	xlat   BYTE PTR gs:[ebx]
  411584:	rol    BYTE PTR [eax],cl
  411586:	sub    BYTE PTR [ebx+0x35a1d2f0],dh
  41158c:	pop    esi
  41158d:	hlt    
  41158e:	adc    bh,ah
  411590:	mov    ah,BYTE PTR [eax-0x35fc4dd6]
  411596:	mov    dl,0x53
  411598:	cmp    eax,0xb55e1382
  41159d:	jmp    0xe6fd:0x65bc87ed
  4115a4:	mov    edx,0x7cfcb230
  4115a9:	dec    ebp
  4115aa:	iret   
  4115ab:	and    BYTE PTR [ebx+ecx*8-0x2a],ah
  4115af:	mov    bl,0xb8
  4115b1:	mov    ecx,ebp
  4115b3:	mov    bl,bh
  4115b5:	pop    eax
  4115b6:	cmc    
  4115b7:	inc    edx
  4115b8:	rcl    cl,1
  4115ba:	xor    ah,bl
  4115bc:	jbe    0x4115d4
  4115be:	outs   dx,DWORD PTR ds:[esi]
  4115bf:	xor    BYTE PTR [edx-0x29aafb3c],0xe8
  4115c6:	outs   dx,DWORD PTR ds:[esi]
  4115c7:	xchg   ebx,eax
  4115c8:	out    dx,al
  4115c9:	cmp    ch,BYTE PTR [esi-0x78]
  4115cc:	sbb    eax,0xb68d7d20
  4115d1:	sbb    DWORD PTR [eax-0x5c],edx
  4115d4:	in     al,dx
  4115d5:	mov    bl,0xf2
  4115d7:	aas    
  4115d8:	inc    edx
  4115d9:	push   esi
  4115da:	push   0xffffffbf
  4115dc:	jnp    0x41155e
  4115de:	jno    0x41165c
  4115e0:	or     ebx,esi
  4115e2:	mov    dh,BYTE PTR [eax+0x52822dc4]
  4115e8:	jno    0x411595
  4115ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115eb:	lock mov al,0x27
  4115ee:	or     ch,al
  4115f0:	push   ecx
  4115f1:	xor    BYTE PTR [ebx+0x12],0xe5
  4115f5:	inc    esi
  4115f6:	loope  0x4115ac
  4115f8:	pop    ebp
  4115f9:	mov    WORD PTR [eax+0x54],fs
  4115fc:	mov    DWORD PTR [esi+0x4872908a],eax
  411602:	inc    esp
  411603:	neg    BYTE PTR [eax+0x46]
  411606:	stc    
  411607:	jbe    0x4115f8
  411609:	ret    0xa5b2
  41160c:	mov    dh,BYTE PTR [ebx+0x4e8c2c34]
  411612:	cmp    BYTE PTR [eax+edx*1],0x11
  411616:	add    bh,ch
  411618:	retf   
  411619:	mov    ebx,ecx
  41161b:	mov    dh,0xa1
  41161d:	pop    edi
  41161e:	jl     0x4115a5
  411620:	mov    ds:0xd5a62214,eax
  411625:	cmp    DWORD PTR [ebx-0x6927f6e8],eax
  41162b:	mov    ah,BYTE PTR [edi]
  41162d:	div    DWORD PTR [edi-0x76]
  411630:	xchg   edx,eax
  411631:	js     0x411622
  411633:	int    0xe7
  411635:	xchg   edx,eax
  411636:	pop    es
  411637:	push   edx
  411638:	mov    esp,0xb3807c39
  41163d:	ja     0x411617
  41163f:	stos   BYTE PTR es:[edi],al
  411640:	jne    0x411661
  411642:	push   0xfffffff7
  411644:	dec    ecx
  411645:	repnz inc eax
  411647:	inc    ecx
  411648:	out    dx,eax
  411649:	stos   DWORD PTR es:[edi],eax
  41164a:	jge    0x411625
  41164c:	dec    edx
  41164d:	call   DWORD PTR [edi+0x35]
  411650:	test   edi,0xc8dca304
  411656:	pop    esi
  411657:	dec    eax
  411658:	stos   DWORD PTR es:[edi],eax
  411659:	add    BYTE PTR [ecx],dl
  41165b:	dec    ecx
  41165c:	js     0x4116d5
  41165e:	loop   0x4116a6
  411660:	ret    
  411661:	fisttp DWORD PTR [esp+esi*2]
  411664:	or     dh,cl
  411666:	shl    BYTE PTR [ecx+0x7d],cl
  411669:	lock repnz stos DWORD PTR es:[edi],eax
  41166c:	push   0x4b
  41166e:	xor    al,0xa8
  411670:	jb     0x41166f
  411672:	jmp    0x150b:0xb90cbe36
  411679:	xchg   edx,eax
  41167a:	jecxz  0x411696
  41167c:	dec    eax
  41167d:	dec    esi
  41167e:	sbb    bh,BYTE PTR [esi+0x15]
  411681:	or     dh,BYTE PTR [bp+di]
  411684:	or     BYTE PTR [ebx+0x6b7aa4cb],ch
  41168a:	push   edi
  41168b:	mov    ch,0xf5
  41168d:	cmp    BYTE PTR [ebx-0x42],bl
  411690:	mov    al,ds:0x82a41c12
  411695:	xchg   DWORD PTR [ecx+0x5803c8f5],edi
  41169b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41169c:	xchg   edi,eax
  41169d:	mov    eax,0x8306fc52
  4116a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116a3:	imul   esp,DWORD PTR [ecx-0x7873697d],0xffffffca
  4116aa:	sbb    dl,BYTE PTR [si-0x45]
  4116ae:	mov    al,ds:0xea0e4689
  4116b3:	mov    ah,dh
  4116b5:	ret    0xc4f
  4116b8:	bound  esi,QWORD PTR ds:0x7651cf81
  4116be:	mov    DWORD PTR [ebx],ebx
  4116c0:	or     bl,bl
  4116c2:	into   
  4116c3:	cmp    ebp,DWORD PTR [ecx+0x71108b84]
  4116c9:	sub    al,0xd3
  4116cb:	lods   eax,DWORD PTR ds:[esi]
  4116cc:	sti    
  4116cd:	dec    esi
  4116ce:	xor    al,0xf4
  4116d0:	cmp    DWORD PTR [edx],ebp
  4116d2:	jmp    0xba02:0x9549f1fa
  4116d9:	outs   dx,DWORD PTR ds:[esi]
  4116da:	iret   
  4116db:	hlt    
  4116dc:	pop    DWORD PTR [ebx+0x7c6029d1]
  4116e2:	(bad)  
  4116e3:	or     al,0xfb
  4116e5:	add    BYTE PTR [edi],bl
  4116e7:	out    dx,eax
  4116e8:	data16 ficomp DWORD PTR [esi+0x4c]
  4116ec:	aad    0x7f
  4116ee:	int    0x33
  4116f0:	std    
  4116f1:	int    0xc2
  4116f3:	lods   al,BYTE PTR ds:[esi]
  4116f4:	or     BYTE PTR [edx+0x67],bh
  4116f7:	mov    ebp,0x83442bfc
  4116fc:	arpl   WORD PTR [edx],cx
  4116fe:	mov    bh,0xf0
  411700:	inc    al
  411702:	ret    
  411703:	xchg   dl,bh
  411705:	scas   eax,DWORD PTR es:[edi]
  411706:	mul    eax
  411708:	icebp  
  411709:	lea    edi,[ebx-0x6a]
  41170c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41170d:	dec    esi
  41170e:	out    dx,eax
  41170f:	repz dec ebx
  411711:	mov    al,0xe7
  411713:	pop    ds
  411714:	adc    DWORD PTR [ebx],ebp
  411716:	push   ds
  411717:	jmp    0xb42884dd
  41171c:	push   edi
  41171d:	xor    DWORD PTR [esi+0xbbd9809],eax
  411723:	pop    ebx
  411724:	add    esp,DWORD PTR [ecx+ebx*2+0x4e]
  411728:	or     DWORD PTR [edi],ecx
  41172a:	dec    ecx
  41172b:	nop
  41172c:	push   0x3ab7b412
  411731:	lock test BYTE PTR [ecx+0x678c8cf8],al
  411738:	mov    esp,0x5c7ec9bd
  41173d:	out    0xc2,al
  41173f:	dec    eax
  411740:	pop    edi
  411741:	retf   0x6a66
  411744:	xor    al,0x9c
  411746:	sub    cl,BYTE PTR [ecx-0x60c5fe2f]
  41174c:	dec    ecx
  41174d:	and    eax,0xaee559e4
  411752:	add    edx,DWORD PTR [eax]
  411754:	lock adc al,0xbb
  411757:	jp     0x411770
  411759:	enter  0x3c4e,0xe2
  41175d:	pop    eax
  41175e:	je     0x411722
  411760:	xabort 0xe6
  411763:	xchg   esi,eax
  411764:	fiadd  WORD PTR [edx]
  411766:	test   al,0x5b
  411768:	push   0x13
  41176a:	repz push ss
  41176c:	inc    eax
  41176d:	das    
  41176e:	add    dh,BYTE PTR [edx-0x20]
  411771:	push   ds
  411772:	scas   al,BYTE PTR es:[edi]
  411773:	test   BYTE PTR [edx-0x57773e9e],cl
  411779:	rcr    eax,cl
  41177b:	mov    cl,0xfe
  41177d:	or     DWORD PTR [ebp+edi*2+0x3aeed2bc],edx
  411784:	(bad)  [esp+eax*2-0x2f]
  411788:	sbb    DWORD PTR [ebp-0x38],0xffffff8b
  41178c:	fdivr  DWORD PTR [ebp-0x45]
  41178f:	sub    ebx,ebx
  411791:	inc    ebp
  411792:	sahf   
  411793:	or     bl,BYTE PTR [ecx+0x65736694]
  411799:	inc    edx
  41179a:	mov    ds:0x5fc8e8bb,eax
  41179f:	sbb    DWORD PTR fs:[eax-0x6c],ebp
  4117a3:	xchg   BYTE PTR [eax+0x22fa0bac],dh
  4117a9:	inc    eax
  4117aa:	pop    ecx
  4117ab:	icebp  
  4117ac:	push   ds
  4117ad:	neg    ecx
  4117af:	sar    DWORD PTR [edi],1
  4117b1:	pop    eax
  4117b2:	lds    ebx,FWORD PTR [ebx-0x455b4f5e]
  4117b8:	pop    edi
  4117b9:	mov    al,ds:0xf80fbd4e
  4117be:	jp     0x4117b9
  4117c0:	data16 fmul DWORD PTR [ebx]
  4117c3:	mov    ch,0xe0
  4117c5:	inc    edi
  4117c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117c7:	lods   al,BYTE PTR ds:[esi]
  4117c8:	aaa    
  4117c9:	add    BYTE PTR ds:0x2d1cd43f,cl
  4117cf:	xchg   ebp,eax
  4117d0:	sub    edi,eax
  4117d2:	pop    ss
  4117d3:	stos   BYTE PTR es:[edi],al
  4117d4:	ins    BYTE PTR es:[edi],dx
  4117d5:	mov    ah,0xe1
  4117d7:	iret   
  4117d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117d9:	push   ds
  4117da:	dec    edx
  4117db:	jmp    0x4117ad
  4117dd:	popa   
  4117de:	icebp  
  4117df:	retf   
  4117e0:	scas   eax,DWORD PTR es:[edi]
  4117e1:	push   edx
  4117e2:	xchg   edi,eax
  4117e3:	add    esp,DWORD PTR [ebx+0x758f6642]
  4117e9:	jecxz  0x41185a
  4117eb:	inc    ecx
  4117ec:	pushf  
  4117ed:	adc    eax,0x30818add
  4117f2:	and    ebp,DWORD PTR [ebx+esi*1+0x1b3ebbe1]
  4117f9:	in     al,0x35
  4117fb:	fdivr  st,st(5)
  4117fd:	pop    edx
  4117fe:	mov    eax,ds:0xa6ca2617
  411803:	(bad)  
  411804:	cmp    DWORD PTR [edi],edx
  411806:	fyl2x  
  411808:	jge    0x4117e0
  41180a:	pop    ebx
  41180b:	inc    eax
  41180c:	(bad)  
  41180f:	lahf   
  411810:	inc    esi
  411811:	mov    ds:0x59ce95bb,eax
  411816:	rcl    edx,1
  411818:	das    
  411819:	ror    DWORD PTR [edx],1
  41181b:	sahf   
  41181c:	pop    ebp
  41181d:	mov    al,ds:0x8130e423
  411822:	loopne 0x41180d
  411824:	jp     0x411801
  411826:	sub    cl,BYTE PTR [ecx+0x32]
  411829:	rcl    edx,cl
  41182b:	sub    al,0x3f
  41182d:	push   0x61
  41182f:	pop    ebp
  411830:	pop    edx
  411831:	arpl   WORD PTR ds:[edi+0x4ea26755],dx
  411838:	adc    al,0x26
  41183a:	mov    al,0x3b
  41183c:	pmullw mm2,QWORD PTR [esi+0xa]
  411840:	jmp    0x4118b5
  411842:	inc    edx
  411843:	mov    edi,0xf93bbfb4
  411848:	sub    ebx,ebp
  41184a:	cld    
  41184b:	cmc    
  41184c:	ret    0xa75d
  41184f:	aaa    
  411850:	jp     0x4117eb
  411852:	push   es
  411853:	pop    ecx
  411854:	jecxz  0x4118c3
  411856:	push   ebp
  411857:	retf   0xc054
  41185a:	rol    DWORD PTR [edx+0x3b403001],1
  411860:	fucom  st(0)
  411862:	cwde   
  411863:	xor    BYTE PTR [esi+0x33],ah
  411866:	sbb    ch,BYTE PTR [ebx+0x6e]
  411869:	add    al,0xc8
  41186b:	jg     0x41189e
  41186d:	enter  0x43d6,0xe4
  411871:	jl     0x4117f7
  411873:	fidivr DWORD PTR [edx+0x57cf0e08]
  411879:	arpl   WORD PTR [ebx+0x4312edf4],bp
  41187f:	adc    eax,0x47ec6dc4
  411884:	and    al,0xbb
  411886:	sub    al,0x9b
  411888:	enter  0x5227,0xb6
  41188c:	cmp    DWORD PTR [esi],0x6ba27c42
  411892:	push   edi
  411893:	lods   eax,DWORD PTR ds:[esi]
  411894:	xor    eax,DWORD PTR [eax]
  411896:	mov    BYTE PTR [ebp*4+0x340422d],0x7a
  41189e:	enter  0xadb1,0x99
  4118a2:	(bad)  
  4118a3:	repz dec esi
  4118a5:	xor    al,0x79
  4118a7:	fistp  WORD PTR [ebx+edi*8]
  4118aa:	fidiv  WORD PTR [ebp-0x2]
  4118ad:	sbb    eax,0xa4676975
  4118b2:	std    
  4118b3:	aam    0xb6
  4118b5:	retf   0x8f1a
  4118b8:	sti    
  4118b9:	add    al,0xeb
  4118bb:	into   
  4118bc:	sbb    eax,0x83e2448b
  4118c1:	in     eax,dx
  4118c2:	cmp    dl,BYTE PTR ds:0x7d05b068
  4118c8:	mov    cl,0x38
  4118ca:	mov    edx,0x9eddb8b
  4118cf:	pop    esp
  4118d0:	imul   ebx,DWORD PTR [ecx+esi*1],0x11
  4118d4:	dec    ecx
  4118d5:	(bad)  
  4118d6:	sbb    eax,0xa6faa8aa
  4118db:	xor    DWORD PTR [ecx+0x310ad0a0],edi
  4118e1:	xor    DWORD PTR [ebp-0x7f8edeb8],ebp
  4118e7:	jnp    0x41192c
  4118e9:	push   cs
  4118ea:	rcr    edx,cl
  4118ec:	sbb    eax,0x8aa2f971
  4118f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118f2:	lods   eax,DWORD PTR ds:[esi]
  4118f3:	push   edi
  4118f4:	push   es
  4118f5:	push   ds
  4118f6:	push   0xdb34b367
  4118fb:	aaa    
  4118fc:	scas   al,BYTE PTR es:[edi]
  4118fd:	xchg   ebp,eax
  4118fe:	mov    bh,0x83
  411900:	add    eax,0xa21e5e16
  411905:	add    DWORD PTR gs:[esp+eiz*4+0x52],edx
  41190a:	mov    ch,0xff
  41190c:	fdivr  DWORD PTR ds:0x6a7f6ece
  411912:	or     ecx,edx
  411914:	xchg   esp,eax
  411915:	cld    
  411916:	test   DWORD PTR [esi],esi
  411918:	inc    edi
  411919:	lods   eax,DWORD PTR cs:[esi]
  41191b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41191c:	mov    cs,WORD PTR [ebp-0x41e61939]
  411922:	retf   0xe0d9
  411925:	inc    edx
  411926:	xor    ax,0xb1c8
  41192a:	xor    ebp,DWORD PTR [esi-0x30b86b85]
  411930:	mov    ds:0xbc7fb0e8,al
  411935:	popa   
  411936:	cdq    
  411937:	jg     0x411916
  411939:	adc    esp,edi
  41193b:	retf   
  41193c:	popf   
  41193d:	sti    
  41193e:	mov    ds:0x6a3739c5,eax
  411943:	fisubr DWORD PTR [ebp+0x15f03d4d]
  411949:	mov    bh,0x87
  41194b:	imul   esp,DWORD PTR [ebp-0x6dbe6486],0x4d
  411952:	dec    edx
  411953:	mov    edx,0xe6518630
  411958:	cmp    DWORD PTR [eax+0x1],0xfffffffe
  41195c:	std    
  41195d:	mov    bh,0xcd
  41195f:	sub    ebx,DWORD PTR [ecx+0x7a]
  411962:	in     eax,dx
  411963:	loop   0x4119b9
  411965:	(bad)  
  411966:	shl    ecx,cl
  411968:	leave  
  411969:	repnz test BYTE PTR [edx+0xf],ah
  41196d:	jae    0x41194c
  41196f:	xor    edx,ebx
  411971:	(bad)  
  411972:	lds    esi,FWORD PTR [edx+eax*4]
  411975:	adc    DWORD PTR [edi+0x64],edx
  411978:	mov    esp,0x873ed793
  41197d:	xchg   dl,dh
  41197f:	or     ebx,DWORD PTR [edi]
  411981:	jnp    0x41199e
  411983:	cmc    
  411984:	mov    ah,BYTE PTR [ebx]
  411986:	scas   eax,DWORD PTR es:[edi]
  411987:	es push cs
  411989:	and    edx,DWORD PTR [eax+0x10]
  41198c:	ds mov ah,0x83
  41198f:	repnz add BYTE PTR [ebx+ebp*4],bh
  411993:	add    ch,ch
  411995:	mov    edx,DWORD PTR [edi]
  411997:	sbb    al,0xd5
  411999:	pop    edi
  41199a:	xchg   ebp,eax
  41199b:	push   edi
  41199c:	or     eax,0xaf5a08c9
  4119a1:	lahf   
  4119a2:	(bad)  
  4119a4:	ins    BYTE PTR es:[edi],dx
  4119a5:	call   0x4db3:0xea83e9ab
  4119ac:	push   ss
  4119ad:	adc    eax,0xbe0a85a6
  4119b2:	and    DWORD PTR [edi+0x1eee9ce4],edx
  4119b8:	add    cl,BYTE PTR [edi+ecx*4+0x61cf4d60]
  4119bf:	dec    ebp
  4119c0:	cs inc ecx
  4119c2:	mov    bl,bh
  4119c4:	cmp    al,0xc
  4119c6:	xchg   edi,eax
  4119c7:	sahf   
  4119c8:	pop    ebp
  4119c9:	jmp    0xc257:0x8fbdb487
  4119d0:	sub    al,0x7f
  4119d3:	cs mov ch,0x1a
  4119d6:	into   
  4119d7:	imul   ebx,DWORD PTR [edi],0xfffffff8
  4119da:	std    
  4119db:	xchg   ecx,ebx
  4119dd:	ror    BYTE PTR [eax+0x5d3b7914],0xa9
  4119e4:	pop    ecx
  4119e5:	cs repnz push esp
  4119e8:	repz xlat BYTE PTR ds:[ebx]
  4119ea:	fldenv [ebp+edi*4-0x5a]
  4119ee:	jbe    0x411988
  4119f0:	sbb    ch,BYTE PTR [edx-0x52a4100]
  4119f6:	and    bh,BYTE PTR [edi]
  4119f8:	cld    
  4119f9:	sbb    eax,DWORD PTR [ebx]
  4119fb:	adc    ebx,DWORD PTR [ebx+0x6830a31a]
  411a01:	vcvtsi2ss xmm4,xmm4,DWORD PTR [eax+0x52abff79]
  411a09:	mov    edx,DWORD PTR [ebp+0x8]
  411a0c:	mov    ebx,DWORD PTR [ebp-0x58]
  411a0f:	add    edx,0x5708f8
  411a15:	imul   edx,ebx
  411a18:	mov    DWORD PTR [ebp-0x58],edx
  411a1b:	mov    edx,DWORD PTR [ebp+0x8]
  411a1e:	mov    ebx,DWORD PTR [ebp-0x54]
  411a21:	add    edx,0x64f8da
  411a27:	or     edx,ebx
  411a29:	mov    DWORD PTR [ebp-0x54],edx
  411a2c:	mov    edx,DWORD PTR [ebp+0x8]
  411a2f:	mov    ebx,DWORD PTR [ebp-0x50]
  411a32:	add    edx,ecx
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0xb3ab7bed
  411b74:	xchg   ebx,eax
  411b75:	cs scas al,BYTE PTR es:[edi]
  411b77:	jp     0x411bf3
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411b5e
  411b7e:	out    dx,eax
  411b7f:	mov    ah,0x8
  411b81:	sar    BYTE PTR [ebp-0x1df56020],cl
  411b87:	dec    esp
  411b88:	inc    ecx
  411b89:	fadd   DWORD PTR [ecx+0x46c8123c]
  411b8f:	aas    
  411b90:	push   0x5f
  411b92:	cmp    bh,0x1f
  411b95:	jp     0x411c01
  411b97:	sub    dh,BYTE PTR [ecx-0xbe9fd32]
  411b9d:	push   esp
  411b9e:	mov    ds:0xfaece569,al
  411ba3:	mov    edx,0x649d1c06
  411ba8:	arpl   WORD PTR [ebp-0x4fe1fa26],sp
  411bae:	jle    0x411b9a
  411bb0:	add    al,BYTE PTR [ebx+0x6d]
  411bb3:	mov    ds:0xd1043e11,eax
  411bb8:	adc    ecx,DWORD PTR [edi-0x37]
  411bbb:	icebp  
  411bbc:	out    0x1d,al
  411bbe:	fbld   TBYTE PTR [esi+0xc4a55b0]
  411bc4:	adc    BYTE PTR [ecx-0x583a44f4],bl
  411bca:	mov    al,ds:0x8006e190
  411bcf:	cmp    ebx,esp
  411bd1:	enter  0xe0a3,0xa0
  411bd5:	mov    dl,0xaa
  411bd7:	add    bh,0x9a
  411bda:	jb     0x411bab
  411bdc:	js     0x411c54
  411bde:	das    
  411bdf:	dec    edi
  411be0:	shr    BYTE PTR [edi+0x78],0x12
  411be4:	cld    
  411be5:	xchg   esi,eax
  411be6:	xchg   ecx,eax
  411be7:	jno    0x411bd1
  411be9:	cmc    
  411bea:	or     cl,dl
  411bec:	add    al,0xb6
  411bee:	push   edx
  411bef:	inc    esp
  411bf0:	push   edx
  411bf1:	test   al,0x41
  411bf3:	push   es
  411bf4:	popf   
  411bf5:	stos   DWORD PTR es:[edi],eax
  411bf6:	adc    dl,BYTE PTR [ecx]
  411bf8:	mov    dh,0xfc
  411bfa:	pop    edi
  411bfb:	addr16 popf 
  411bfd:	cmp    DWORD PTR [edx-0x10],edx
  411c00:	ror    BYTE PTR [eax],1
  411c02:	sub    ebx,eax
  411c04:	iret   
  411c05:	push   0xe9e7f0b7
  411c0a:	test   BYTE PTR [ecx],ch
  411c0c:	jp     0x411b9b
  411c0e:	xor    DWORD PTR [eax-0x267817bd],esi
  411c14:	retf   
  411c15:	retf   0x5e5f
  411c18:	ror    BYTE PTR [edi+0x78],1
  411c1b:	pop    eax
  411c1c:	add    DWORD PTR [ebx+0x260a1aa1],eax
  411c22:	out    dx,eax
  411c23:	mov    es,ecx
  411c25:	bound  ecx,QWORD PTR [ecx-0x734004b2]
  411c2b:	xlat   BYTE PTR ss:[ebx]
  411c2d:	mov    eax,ds:0xeb130f59
  411c32:	aas    
  411c33:	push   ebp
  411c34:	push   edi
  411c35:	cmc    
  411c36:	xchg   ebp,eax
  411c37:	sub    DWORD PTR [ebx],eax
  411c39:	pop    ds
  411c3a:	stos   BYTE PTR es:[edi],al
  411c3b:	aaa    
  411c3c:	sar    DWORD PTR [edi-0x4d08d8fe],cl
  411c42:	mov    ds:0xb3d35641,al
  411c47:	aaa    
  411c48:	xor    al,0xe9
  411c4a:	loope  0x411cbc
  411c4c:	mov    ds:0xaf45e3a8,eax
  411c51:	push   esi
  411c52:	mov    edi,0x1f694565
  411c57:	vxorps ymm5,ymm7,ymm3
  411c5b:	fwait
  411c5c:	leave  
  411c5d:	mov    bh,0x50
  411c5f:	mov    gs,WORD PTR [edx+0x51]
  411c62:	or     al,0x84
  411c64:	mov    esi,0x6d025a07
  411c69:	fsub   DWORD PTR [edx]
  411c6b:	int3   
  411c6c:	iret   
  411c6d:	xor    BYTE PTR [ebx-0x5e],al
  411c70:	out    0xcc,eax
  411c72:	push   cs
  411c73:	fstp   QWORD PTR ds:0xc8162d66
  411c79:	enter  0x2a3d,0xdd
  411c7d:	call   0xad1d2725
  411c82:	daa    
  411c83:	loope  0x411c9c
  411c85:	or     eax,0x918d185d
  411c8a:	lods   al,BYTE PTR ds:[esi]
  411c8b:	aad    0x6f
  411c8d:	cmp    BYTE PTR [eax],al
  411c8f:	scas   eax,DWORD PTR es:[edi]
  411c90:	inc    esi
  411c91:	sub    bl,BYTE PTR [edi-0xd]
  411c94:	sar    BYTE PTR ds:0xa332fdad,cl
  411c9a:	scas   eax,DWORD PTR es:[edi]
  411c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c9c:	add    al,0xbe
  411c9e:	inc    ebx
  411c9f:	adc    bl,BYTE PTR [esp+ebp*4+0x52]
  411ca3:	or     ebp,edi
  411ca5:	and    esi,DWORD PTR [ebp-0x32]
  411ca8:	jl     0x411cbd
  411caa:	mov    ds,WORD PTR [edi-0x53cc1dc1]
  411cb0:	ret    0x433a
  411cb3:	inc    edx
  411cb4:	(bad)  
  411cb5:	rcl    DWORD PTR [ebx-0x3],cl
  411cb8:	add    BYTE PTR [ecx],dh
  411cba:	jmp    0x271e:0x92b1b9ad
  411cc1:	leave  
  411cc2:	dec    esi
  411cc3:	push   ecx
  411cc4:	sbb    DWORD PTR [ebx],ebp
  411cc6:	xchg   ebx,eax
  411cc7:	js     0x411c57
  411cc9:	clc    
  411cca:	ret    0x24c8
  411ccd:	jb     0x411c53
  411ccf:	or     BYTE PTR [eax-0x106846ca],bh
  411cd5:	mov    ds:0xe88503c3,eax
  411cda:	jmp    0x341cecb6
  411cdf:	in     eax,0xc4
  411ce1:	dec    ebp
  411ce2:	ror    DWORD PTR [edx],0x77
  411ce5:	and    ecx,esi
  411ce7:	mov    edx,0xcb23b930
  411cec:	(bad)  
  411ced:	push   ebx
  411cee:	cmp    al,0xa3
  411cf0:	mov    WORD PTR [edi],?
  411cf2:	rol    DWORD PTR [eax+0x6a],1
  411cf5:	ja     0x411d5b
  411cf7:	ins    DWORD PTR es:[edi],dx
  411cf8:	xchg   ebp,eax
  411cf9:	imul   esp,DWORD PTR [edx-0x5a],0xffffff86
  411cfd:	pop    ss
  411cfe:	mov    eax,0x523505b3
  411d03:	mov    cl,0xf7
  411d05:	pop    edx
  411d06:	loope  0x411c9c
  411d08:	test   eax,0xe9a728ea
  411d0d:	(bad)  
  411d0e:	jmp    0x67cf94c8
  411d13:	arpl   ax,di
  411d15:	sbb    DWORD PTR [edx-0x77],edi
  411d18:	mov    bh,0x2f
  411d1a:	xchg   ebp,eax
  411d1b:	xchg   edi,eax
  411d1c:	jmp    0x9eb:0xf2bd3488
  411d23:	jns    0x411d90
  411d25:	hlt    
  411d26:	ret    
  411d27:	add    DWORD PTR [edi+0x439476e9],esi
  411d2d:	xor    BYTE PTR [ebp+0x6a8100af],bl
  411d33:	add    esp,ecx
  411d35:	mov    DWORD PTR [edx+0x44c2320f],esi
  411d3b:	loope  0x411dae
  411d3d:	stc    
  411d3e:	dec    ebx
  411d3f:	mov    eax,0x5fd25022
  411d44:	loopne 0x411d18
  411d46:	cmc    
  411d47:	sahf   
  411d48:	test   BYTE PTR [ecx],0x31
  411d4b:	sub    eax,0x219261a6
  411d50:	inc    ebp
  411d51:	hlt    
  411d52:	bnd jle 0x411d5d
  411d55:	xchg   ebp,eax
  411d56:	(bad)  
  411d57:	xor    BYTE PTR [edx+0x6979e88c],dh
  411d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d5e:	sti    
  411d5f:	(bad)  
  411d60:	out    dx,eax
  411d61:	or     ch,BYTE PTR [edi+0x1db35df6]
  411d67:	repnz mov ?,WORD PTR [edx+0x4]
  411d6b:	mov    gs,WORD PTR [edi]
  411d6d:	mov    ah,0xa7
  411d6f:	mov    edx,0x53eb671c
  411d74:	mov    DWORD PTR [edi+0x7],ebx
  411d77:	sahf   
  411d78:	jnp    0x411d25
  411d7a:	enter  0xebfb,0x87
  411d7e:	or     DWORD PTR [eax],0xffffff9f
  411d81:	sbb    ch,BYTE PTR [esi-0x48412de4]
  411d87:	in     al,0xbe
  411d89:	mov    ebp,0x57832932
  411d8e:	pop    ebx
  411d8f:	stc    
  411d90:	loopne 0x411d1b
  411d92:	sub    BYTE PTR [edi],dh
  411d94:	sub    eax,0x9b8d4834
  411d99:	das    
  411d9a:	add    ebx,DWORD PTR [ebx-0x523f0e4]
  411da0:	mov    bh,0xad
  411da2:	je     0x411dde
  411da4:	into   
  411da5:	out    dx,eax
  411da6:	mov    cl,0x8d
  411da8:	jp     0x411dc8
  411daa:	daa    
  411dab:	xchg   edx,eax
  411dac:	jp     0x411d2f
  411dae:	repz pop esp
  411db0:	jmp    0x411d6b
  411db2:	or     ecx,DWORD PTR [ebx]
  411db4:	ficomp DWORD PTR [ebx-0x36bc813b]
  411dba:	or     dh,BYTE PTR [ebp-0x74]
  411dbd:	in     eax,0xd6
  411dbf:	push   ss
  411dc0:	out    0x32,eax
  411dc2:	loopne 0x411e0e
  411dc4:	sub    DWORD PTR [esi+0x75],ecx
  411dc7:	sahf   
  411dc8:	xchg   ebx,eax
  411dc9:	cwde   
  411dca:	(bad)  
  411dcc:	jno    0x411d56
  411dce:	cmp    DWORD PTR [edi+0x66457ebc],esp
  411dd4:	retf   
  411dd5:	sbb    esp,esi
  411dd7:	jb     0x411e0c
  411dd9:	pop    ds
  411dda:	jg     0x411e12
  411ddc:	test   al,0x34
  411dde:	mov    BYTE PTR [ecx],cl
  411de0:	sub    edi,ecx
  411de2:	scas   al,BYTE PTR es:[edi]
  411de3:	mov    ah,0x37
  411de5:	in     al,dx
  411de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411de7:	sbb    BYTE PTR [esi+0x1a5cd632],0xf1
  411dee:	dec    ebp
  411def:	jb     0x411e63
  411df1:	xor    bh,BYTE PTR [ecx-0x64c6e659]
  411df7:	xlat   BYTE PTR ds:[ebx]
  411df8:	sub    al,0xbc
  411dfa:	inc    ebx
  411dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dfc:	fwait
  411dfd:	add    DWORD PTR [ebx-0x2e],eax
  411e00:	das    
  411e01:	inc    esi
  411e02:	dec    edi
  411e03:	int    0xe0
  411e05:	push   ebp
  411e06:	imul   edx,DWORD PTR [ecx-0x696cbfb7],0xf0e28bb8
  411e10:	inc    edi
  411e11:	cwde   
  411e12:	fcom   QWORD PTR [si-0x6ddc]
  411e17:	mov    ds:0x6629ec33,al
  411e1c:	cs and edi,DWORD PTR cs:[edx+0x38a9e544]
  411e24:	aad    0x8a
  411e26:	out    0xda,eax
  411e28:	out    0x1c,al
  411e2a:	fdivr  st(5),st
  411e2c:	std    
  411e2d:	push   edx
  411e2e:	xor    eax,0x3d0e72e4
  411e33:	add    edx,esp
  411e35:	jb     0x411e6a
  411e37:	jmp    0x49730bff
  411e3c:	adc    DWORD PTR [edx+0x205e818a],0x792995ea
  411e46:	jne    0x411e53
  411e48:	xchg   DWORD PTR [ebx+0x638f2e6b],edi
  411e4e:	inc    esi
  411e4f:	cli    
  411e50:	push   es
  411e51:	mov    bh,0x6
  411e53:	imul   ecx,DWORD PTR [ecx+0x6376c53a],0x702c608
  411e5d:	adc    al,0xa7
  411e5f:	outs   dx,DWORD PTR ds:[esi]
  411e60:	mov    al,ds:0xf342c44e
  411e65:	push   esp
  411e66:	pop    eax
  411e67:	std    
  411e68:	fwait
  411e69:	mov    dh,0x4b
  411e6b:	or     cl,bh
  411e6d:	sub    al,0x32
  411e6f:	inc    ecx
  411e70:	adc    esp,DWORD PTR [edx+0x29]
  411e73:	or     BYTE PTR [ebp-0x10df71ea],ah
  411e79:	dec    esi
  411e7a:	pop    ebp
  411e7b:	mov    bl,0xf4
  411e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e7e:	dec    eax
  411e7f:	lds    esi,FWORD PTR [ebp-0x75]
  411e82:	sub    edi,ebx
  411e84:	out    0xab,al
  411e86:	ins    DWORD PTR es:[edi],dx
  411e87:	int    0x5a
  411e89:	jno    0x411ebe
  411e8b:	(bad)  [edx]
  411e8d:	loop   0x411e8a
  411e8f:	fiadd  DWORD PTR [ebx+0x51798473]
  411e95:	fst    DWORD PTR [edi-0x10df9d19]
  411e9b:	cmp    bh,bh
  411e9d:	add    DWORD PTR [edi+eiz*8-0x6],ebx
  411ea1:	stos   BYTE PTR es:[edi],al
  411ea2:	inc    edi
  411ea3:	fsubp  st(1),st
  411ea5:	call   0x6e4b:0xf5b88f69
  411eac:	push   ss
  411ead:	add    DWORD PTR [ecx],edi
  411eaf:	ret    
  411eb0:	xor    dh,al
  411eb2:	outs   dx,BYTE PTR ds:[esi]
  411eb3:	add    cl,BYTE PTR [esi]
  411eb5:	push   eax
  411eb6:	adc    cl,BYTE PTR [esi-0xfffdaf7]
  411ebc:	ins    BYTE PTR es:[edi],dx
  411ebd:	(bad)  
  411ebe:	ins    DWORD PTR es:[edi],dx
  411ebf:	jb     0x411ea5
  411ec1:	and    dl,BYTE PTR [esp+esi*4]
  411ec4:	sbb    esi,DWORD PTR [ebp+0x71]
  411ec7:	push   cs
  411ec8:	cmp    eax,0x761a5040
  411ecd:	out    dx,eax
  411ece:	mov    edx,DWORD PTR [ebp-0x55f320d8]
  411ed4:	push   0xffffffb7
  411ed6:	lock jecxz 0x411e6a
  411ed9:	ds add al,0x5e
  411edc:	and    esp,DWORD PTR [esi]
  411ede:	lahf   
  411edf:	xchg   edi,eax
  411ee0:	jp     0x411f20
  411ee2:	inc    ecx
  411ee3:	lahf   
  411ee4:	sbb    DWORD PTR [ebx],eax
  411ee6:	sbb    ebp,DWORD PTR [edi+0x0]
  411ee9:	(bad)  
  411eeb:	in     eax,0x55
  411eed:	mov    al,0x17
  411eef:	mov    esi,0x3d944a3d
  411ef4:	mov    al,0xd9
  411ef6:	cmp    DWORD PTR [eax+0x22],edx
  411ef9:	fs js  0x411f1f
  411efc:	bound  edx,QWORD PTR ds:0x5e26f070
  411f02:	push   0xb7decfe7
  411f07:	std    
  411f08:	(bad)  
  411f09:	dec    esp
  411f0a:	cdq    
  411f0b:	mov    eax,0xd2c53946
  411f10:	je     0x411f41
  411f12:	pop    esp
  411f13:	scas   eax,DWORD PTR es:[edi]
  411f14:	add    DWORD PTR [esp+ecx*4],edi
  411f17:	pusha  
  411f18:	sbb    ch,cl
  411f1a:	cwde   
  411f1b:	mov    ds:0xfe198033,eax
  411f20:	add    dh,BYTE PTR [esi+0x7f8d08e6]
  411f26:	in     al,dx
  411f27:	mov    ecx,0x92d25c19
  411f2c:	ins    DWORD PTR es:[edi],dx
  411f2d:	cmp    bh,ch
  411f2f:	xchg   DWORD PTR [eax+0x10],edx
  411f32:	xchg   esi,eax
  411f33:	or     ebp,edx
  411f35:	add    ch,ah
  411f37:	dec    eax
  411f38:	sub    al,0x49
  411f3a:	fcomp  QWORD PTR [eax+eiz*1+0x188dc048]
  411f41:	xor    BYTE PTR [ecx-0x63],bl
  411f44:	mov    ebp,0x63113148
  411f49:	xchg   ecx,eax
  411f4a:	jnp    0x411f27
  411f4c:	xor    edx,DWORD PTR [eax+esi*4+0x31be8545]
  411f53:	pop    esi
  411f54:	(bad)  [edx+0xa]
  411f57:	dec    edx
  411f58:	clc    
  411f59:	cmp    BYTE PTR [esi],0x98
  411f5c:	add    esp,eax
  411f5e:	fdivr  QWORD PTR [edx+0x38ad21bb]
  411f64:	inc    eax
  411f65:	push   ebp
  411f66:	or     DWORD PTR [eax],ebx
  411f68:	fwait
  411f69:	xchg   ebp,eax
  411f6a:	xor    DWORD PTR [ebx],esi
  411f6c:	ja     0x411fe8
  411f6e:	lock push 0xc942eab8
  411f74:	sbb    DWORD PTR [ecx-0xd],eax
  411f77:	adc    dh,ah
  411f79:	std    
  411f7a:	test   DWORD PTR [ecx+0x713f5f64],edx
  411f80:	mov    BYTE PTR [ebp-0x25],bl
  411f83:	inc    ebp
  411f84:	scas   al,BYTE PTR es:[edi]
  411f85:	sahf   
  411f86:	mov    eax,esi
  411f88:	repz retf 0x7f93
  411f8c:	cld    
  411f8d:	and    BYTE PTR [ebx-0x4],al
  411f90:	loope  0x411f19
  411f92:	push   esp
  411f93:	cs ds mov bl,0xbd
  411f97:	ins    DWORD PTR es:[edi],dx
  411f98:	mov    al,0xd7
  411f9a:	fld    TBYTE PTR [ebp+0x5717c5ee]
  411fa0:	fdivr  st,st(5)
  411fa2:	push   0x77
  411fa4:	jb     0x411f93
  411fa6:	add    al,0x42
  411fa8:	(bad)  [edx-0x7]
  411fab:	inc    ebx
  411fac:	and    eax,ebx
  411fae:	xor    eax,DWORD PTR ds:0xc676ee13
  411fb4:	jecxz  0x41202d
  411fb6:	inc    edi
  411fb7:	push   ss
  411fb8:	mov    ebp,0xb2ec3f8
  411fbd:	stc    
  411fbe:	fwait
  411fbf:	cdq    
  411fc0:	arpl   WORD PTR [edx+0x23],sp
  411fc3:	ret    
  411fc4:	adc    bl,BYTE PTR [edx-0x4a]
  411fc7:	mov    dl,bh
  411fc9:	fcomp  QWORD PTR [edx+0x65]
  411fcc:	adc    BYTE PTR [esi-0x43],dh
  411fcf:	xchg   eax,esi
  411fd1:	out    0xd2,eax
  411fd3:	sub    ecx,ebx
  411fd5:	idiv   esi
  411fd7:	pusha  
  411fd8:	pusha  
  411fd9:	iret   
  411fda:	aam    0x8d
  411fdc:	fnstenv [esi+esi*2+0x76595997]
  411fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fe4:	pop    ss
  411fe5:	cdq    
  411fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fe7:	or     DWORD PTR [ecx+0x7fcfd773],ecx
  411fed:	push   0xffffffd1
  411fef:	xchg   ecx,eax
  411ff0:	popa   
  411ff1:	mov    bl,0x84
  411ff3:	xor    ebp,DWORD PTR [ebx+eiz*2+0x5b]
  411ff7:	inc    edx
  411ff8:	jmp    0x411fd2
  411ffa:	xchg   esi,eax
  411ffb:	xchg   edi,eax
  411ffc:	jg     0x411fe2
  411ffe:	data16 cmp al,0xd0
  412001:	enter  0x28bc,0xfd
  412005:	les    ebp,FWORD PTR [ebp-0x44]
  412008:	sar    BYTE PTR [eax+eiz*4-0x5b],1
  41200c:	sub    al,0x32
  41200e:	ds cli 
  412010:	aas    
  412011:	ror    edi,cl
  412013:	nop
  412014:	sub    eax,DWORD PTR [edi+0x3ec7f44c]
  41201a:	out    dx,al
  41201b:	sub    DWORD PTR [eax-0x4],eax
  41201e:	cdq    
  41201f:	and    al,0xbb
  412021:	fnsave [esi]
  412023:	mov    eax,ebx
  412025:	lods   al,BYTE PTR ds:[esi]
  412026:	dec    edi
  412027:	xchg   esp,eax
  412028:	xor    cl,dl
  41202a:	or     bh,BYTE PTR [esi]
  41202c:	arpl   WORD PTR [eax],ax
  41202e:	cmp    edx,DWORD PTR [ecx+0x5c78d11f]
  412034:	mov    bl,0x7a
  412036:	scas   eax,DWORD PTR es:[edi]
  412037:	fisttp QWORD PTR [eax-0x6153b8a9]
  41203d:	aaa    
  41203e:	cmp    DWORD PTR [edi+0x7d],edi
  412041:	cdq    
  412042:	mov    ecx,0x2f80dc69
  412047:	dec    edx
  412048:	into   
  412049:	mov    ds:0xec49159,eax
  41204e:	or     al,0x36
  412050:	aaa    
  412051:	(bad)  
  412053:	fsub   DWORD PTR [edi]
  412055:	mov    ss,ecx
  412057:	lods   al,BYTE PTR ds:[esi]
  412058:	lods   al,BYTE PTR ds:[esi]
  412059:	cld    
  41205a:	shl    DWORD PTR [ebp-0x419ff73],1
  412060:	rol    DWORD PTR [edx+0xe],1
  412063:	cmp    DWORD PTR [ebp+0x5e4d4dfb],ebp
  412069:	push   ebp
  41206a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41206b:	mov    al,0x78
  41206d:	adc    BYTE PTR [esi-0x1],bh
  412070:	pushf  
  412071:	(bad)  
  412072:	push   DWORD PTR [eax-0x6b]
  412075:	mov    dh,0xeb
  412077:	xor    al,ch
  412079:	mov    cl,cl
  41207b:	jge    0x412050
  41207d:	shl    DWORD PTR [ecx+0xc10dd67],0x14
  412084:	xor    edi,DWORD PTR [eax+0x381376b7]
  41208a:	jb     0x4120f7
  41208c:	jle    0x412084
  41208e:	cld    
  41208f:	and    al,0xf3
  412091:	sti    
  412092:	pushf  
  412093:	cld    
  412094:	test   BYTE PTR [ebp+0x75],bl
  412097:	xchg   ebp,eax
  412098:	push   ebx
  412099:	scas   eax,DWORD PTR es:[edi]
  41209a:	adc    esi,DWORD PTR [eax+0x52]
  41209d:	xor    eax,0xa58b49f1
  4120a2:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4120a4:	in     eax,dx
  4120a5:	jg     0x412091
  4120a7:	xchg   BYTE PTR [ebx-0x71],ch
  4120aa:	push   edi
  4120ab:	jecxz  0x412033
  4120ad:	jmp    0xe7b1ed3c
  4120b2:	out    0x7d,eax
  4120b4:	jb     0x4120e9
  4120b6:	icebp  
  4120b7:	sbb    eax,0x6f08a338
  4120bc:	in     al,dx
  4120bd:	xor    DWORD PTR [edi],esp
  4120bf:	frstor [esi]
  4120c1:	out    dx,al
  4120c2:	push   edi
  4120c3:	mov    dl,0x89
  4120c5:	outs   dx,DWORD PTR ds:[esi]
  4120c6:	mov    al,0x79
  4120c8:	cmp    BYTE PTR [ebx],dl
  4120ca:	outs   dx,DWORD PTR ds:[si]
  4120cc:	cwde   
  4120cd:	mov    WORD PTR [ebp-0x1b],ds
  4120d0:	in     al,dx
  4120d1:	lods   al,BYTE PTR ds:[esi]
  4120d2:	add    DWORD PTR [ebp-0x58],0xc5059be
  4120d9:	arpl   WORD PTR [ebx+0x6c7b105f],cx
  4120df:	arpl   WORD PTR [esi-0x2bdeefb3],cx
  4120e5:	and    al,BYTE PTR [ebx+0xbbd2303]
  4120eb:	arpl   WORD PTR [edi],dx
  4120ed:	pop    ds
  4120ee:	leave  
  4120ef:	cmp    DWORD PTR [eax-0xbeed7a4],edx
  4120f5:	cmc    
  4120f6:	or     DWORD PTR [esi-0x70],ebx
  4120f9:	arpl   WORD PTR [edi],bx
  4120fb:	pop    ecx
  4120fc:	xchg   edx,eax
  4120fd:	mov    eax,ds:0x73f5e47c
  412102:	inc    edx
  412103:	adc    bl,ah
  412105:	xor    DWORD PTR ds:0xbf408069,esi
  41210b:	fcomp  DWORD PTR [edx+0x46bd270c]
  412111:	or     DWORD PTR [eax-0x2a],ecx
  412114:	lds    edx,FWORD PTR [edi+ebp*8+0x7c349152]
  41211b:	mov    bh,0x5b
  41211d:	push   edi
  41211e:	cmp    eax,DWORD PTR [edi-0x65]
  412121:	ja     0x412180
  412123:	inc    edi
  412124:	rol    BYTE PTR [ecx],1
  412126:	adc    DWORD PTR [esi-0x4ad7a03d],0x8390ee9d
  412130:	mov    eax,0xbc07c021
  412135:	(bad)  
  412136:	xchg   ecx,eax
  412137:	mov    al,0x6f
  412139:	jmp    0x4a5b27e1
  41213e:	xchg   edx,eax
  41213f:	cdq    
  412140:	xchg   esp,eax
  412141:	mov    cl,0x26
  412143:	(bad)  
  412144:	sar    BYTE PTR [edx-0x1a8794bd],0x6e
  41214b:	mov    WORD PTR [edi+0xf],gs
  41214e:	cli    
  41214f:	jmp    0x78b9:0x4830f8
  412156:	xchg   edx,eax
  412157:	lea    ebx,[ebp*4-0x406be830]
  41215e:	(bad)  [eax+0x5caf4f0e]
  412164:	imul   ebp,DWORD PTR [edx-0x5e0eebcd],0xdab3b353
  41216e:	idiv   esi
  412170:	pop    ds
  412171:	or     eax,0xda16dcc2
  412176:	les    edi,FWORD PTR [esi-0x15]
  412179:	xchg   ebx,ebx
  41217b:	outs   dx,DWORD PTR ds:[esi]
  41217c:	int3   
  41217d:	cmp    ah,ah
  41217f:	loopne 0x412142
  412181:	jle    0x4121d0
  412183:	aaa    
  412184:	ret    
  412185:	pop    ebx
  412186:	call   0x4b2f:0x44e2e667
  41218d:	cli    
  41218e:	adc    dh,BYTE PTR [ecx+0x38a8ed43]
  412194:	jp     0x4121a9
  412196:	std    
  412197:	hlt    
  412198:	jge    0x41212d
  41219a:	(bad)  
  41219b:	fldenv [ecx+0x823d61]
  4121a1:	inc    edx
  4121a2:	dec    eax
  4121a3:	mov    WORD PTR [ecx-0x11],fs
  4121a6:	mov    ah,0xac
  4121a8:	jle    0x41217f
  4121aa:	out    dx,eax
  4121ab:	pop    esp
  4121ac:	dec    eax
  4121ad:	push   ds
  4121ae:	mov    esi,0xd0a33dc0
  4121b3:	(bad)  
  4121b4:	hlt    
  4121b5:	and    dl,ah
  4121b7:	fstp   st(6)
  4121b9:	xchg   ebx,eax
  4121ba:	dec    ebp
  4121bb:	stc    
  4121bc:	test   BYTE PTR [edi+0x32],0x3
  4121c0:	pop    edi
  4121c1:	mov    dh,0x6f
  4121c3:	sbb    BYTE PTR [ebx-0x757db87],ah
  4121c9:	hlt    
  4121ca:	test   ch,0xd
  4121cd:	or     DWORD PTR [ecx-0x22],edx
  4121d0:	or     dl,BYTE PTR [edi+0x13]
  4121d3:	dec    edx
  4121d4:	pop    edi
  4121d5:	nop
  4121d6:	aaa    
  4121d7:	jmp    0x28e79386
  4121dc:	(bad)
  4121df:	ins    DWORD PTR es:[edi],dx
  4121e0:	mov    edx,0xc94da9cf
  4121e5:	cvttps2pi mm6,QWORD PTR ds:0x3779ebe3
  4121ec:	dec    esp
  4121ed:	test   BYTE PTR [ebp+0x1d],0x26
  4121f1:	je     0x412236
  4121f3:	call   DWORD PTR [edi+ecx*8-0x69]
  4121f7:	mov    ch,0xf1
  4121f9:	or     BYTE PTR [ebx],0x91
  4121fc:	push   eax
  4121fd:	fwait
  4121fe:	cmp    bl,BYTE PTR [ebx-0x3f]
  412201:	std    
  412202:	adc    DWORD PTR [edx-0x68559f69],ecx
  412208:	dec    ebp
  412209:	push   ss
  41220a:	sub    al,0x7c
  41220c:	iret   
  41220d:	int3   
  41220e:	arpl   WORD PTR [ecx+0x44d4185a],di
  412214:	(bad)  
  412215:	fcomp  QWORD PTR [ebp-0x5c]
  412218:	sub    eax,0xc10ef73b
  41221d:	ret    0xc19e
  412220:	cmp    dl,BYTE PTR [eax-0x40c8f59c]
  412226:	pusha  
  412227:	cmp    al,0xa5
  412229:	sub    al,0xfb
  41222b:	mov    ecx,0xe273bd46
  412230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412231:	mov    esp,0x86bf167f
  412236:	jnp    0x412297
  412238:	inc    ebp
  412239:	jae    0x4122a2
  41223b:	push   esi
  41223c:	mov    ds:0xd4df17ac,eax
  412241:	mov    ds:0x264385ec,al
  412246:	mov    edx,0x94f98e8b
  41224b:	or     DWORD PTR [eax+esi*8+0x79],edi
  41224f:	jae    0x4122c9
  412251:	int3   
  412252:	mov    esi,0xc9100ffb
  412257:	fdivr  st,st(6)
  412259:	mov    dl,0x89
  41225b:	mov    ds:0x54b48fb3,al
  412260:	add    al,0xdb
  412262:	int    0xcf
  412264:	shl    BYTE PTR [ebx+0x4677feb],0xde
  41226b:	bound  ebp,QWORD PTR [ecx]
  41226d:	xor    eax,0xa5f9ff87
  412272:	push   ebp
  412273:	mov    dh,0x60
  412275:	push   ecx
  412276:	mov    al,0xba
  412278:	shl    BYTE PTR [ebx],cl
  41227a:	push   edx
  41227b:	repnz retf 
  41227d:	test   BYTE PTR [edx+0x5b],dh
  412280:	imul   ebp,DWORD PTR [esi-0x130b4619],0x4c
  412287:	cmp    al,BYTE PTR [esi+0x32]
  41228a:	call   0xce0faa8a
  41228f:	mov    bh,0x8c
  412291:	jl     0x4122a8
  412293:	bound  ecx,QWORD PTR [ecx-0x2a]
  412296:	mov    edx,0x8a111578
  41229b:	pop    es
  41229c:	mov    bl,BYTE PTR [edi-0x1e]
  41229f:	scas   eax,DWORD PTR es:[edi]
  4122a0:	mov    edx,0x335226f3
  4122a5:	lods   al,BYTE PTR ds:[esi]
  4122a6:	retf   
  4122a7:	xor    eax,0xfb28d95c
  4122ac:	cmp    DWORD PTR [esi-0x10],edx
  4122af:	scas   eax,DWORD PTR es:[edi]
  4122b0:	xor    al,BYTE PTR [esi]
  4122b2:	inc    ebx
  4122b3:	sub    BYTE PTR ds:0xfbaf1d37,dh
  4122b9:	cmp    al,0xdf
  4122bb:	shl    DWORD PTR [edi+eiz*2+0x12],1
  4122bf:	pushf  
  4122c0:	mov    ds:0x1ac99bad,eax
  4122c5:	stos   DWORD PTR es:[edi],eax
  4122c6:	pop    ecx
  4122c7:	icebp  
  4122c8:	xchg   esi,eax
  4122c9:	scas   eax,DWORD PTR es:[edi]
  4122ca:	aaa    
  4122cb:	mov    ah,0x36
  4122cd:	jo     0x412322
  4122cf:	call   0xcf773464
  4122d4:	jbe    0x412296
  4122d6:	(bad)  
  4122d7:	aam    0x4
  4122d9:	jno    0x412320
  4122db:	mov    ds:0xa465f60d,al
  4122e0:	fadd   QWORD PTR [ebx+ebp*1-0x3b]
  4122e4:	inc    esp
  4122e5:	inc    ecx
  4122e6:	mov    esp,0xb00591e3
  4122eb:	jmp    0x412330
  4122ed:	add    DWORD PTR [edx+0x39],ebp
  4122f0:	adc    ebx,DWORD PTR [esi+0xf9fc644]
  4122f6:	xchg   ecx,eax
  4122f7:	xchg   ebx,eax
  4122f8:	(bad)  
  4122f9:	sub    eax,0x45ff7d25
  4122fe:	xchg   esp,eax
  4122ff:	add    DWORD PTR [ebx-0x11adb36d],esi
  412305:	and    bl,BYTE PTR [edx-0x4d]
  412308:	(bad)  
  412309:	or     al,0xb2
  41230b:	pop    ds
  41230c:	outs   dx,DWORD PTR ds:[esi]
  41230d:	sbb    al,0x4b
  41230f:	mov    dh,0xb8
  412311:	outs   dx,DWORD PTR gs:[esi]
  412313:	pop    es
  412314:	arpl   bx,si
  412316:	xchg   ebx,eax
  412317:	pop    esp
  412318:	sub    dl,BYTE PTR [edx+0x46]
  41231b:	adc    DWORD PTR [eax-0x33],ebp
  41231e:	xchg   ecx,eax
  41231f:	jge    0x4122dd
  412321:	imul   edi,DWORD PTR [ebp+0xad0c75c],0xbd697700
  41232b:	adc    ebp,ecx
  41232d:	mov    bl,0xdb
  41232f:	lods   al,BYTE PTR ds:[esi]
  412330:	and    DWORD PTR [esi+0x26],ecx
  412333:	dec    esp
  412334:	xchg   edi,eax
  412335:	shl    DWORD PTR [edi+0x4f],0x54
  412339:	fmul   st(6),st
  41233b:	das    
  41233c:	inc    ebp
  41233d:	adc    DWORD PTR [ebp-0x41],edx
  412340:	in     al,dx
  412341:	jg     0x412376
  412343:	ja     0x41238c
  412345:	clc    
  412346:	adc    al,0xb
  412348:	pushf  
  412349:	mov    eax,ds:0xa7d1f43d
  41234e:	jnp    0x4122e4
  412350:	xchg   ebx,eax
  412351:	push   0xd1de84fd
  412356:	mov    edx,0x8322d509
  41235b:	push   0xffffff91
  41235d:	xor    al,0x2a
  41235f:	sbb    al,0xea
  412361:	imul   edi,DWORD PTR [ecx],0x9f3e8c2
  412367:	pop    ds
  412368:	adc    ebx,esi
  41236a:	pop    edx
  41236b:	je     0x41232a
  41236d:	push   0x12
  41236f:	stos   BYTE PTR es:[edi],al
  412370:	xor    eax,0x262649de
  412375:	pusha  
  412376:	adc    ah,BYTE PTR [eax-0x36d215f8]
  41237c:	or     BYTE PTR [ecx+0x3a],dh
  41237f:	ror    ah,0x62
  412382:	adc    BYTE PTR [ecx-0x3],al
  412385:	inc    ebp
  412386:	arpl   WORD PTR [edx+ecx*2+0x52f9d11c],bx
  41238d:	xchg   DWORD PTR [esi+0x38],edx
  412390:	adc    BYTE PTR [eax],dl
  412392:	dec    ecx
  412393:	mov    al,0xf8
  412395:	adc    DWORD PTR [eax-0x79270fe6],esi
  41239b:	jmp    0x4e36:0x1feef0e2
  4123a2:	inc    esi
  4123a3:	add    BYTE PTR [eax-0x16],al
  4123a6:	cmp    dh,bl
  4123a8:	dec    esi
  4123a9:	mov    ebp,0x1461241b
  4123ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123af:	ret    
  4123b0:	cmp    DWORD PTR [ecx-0x5a6b3809],edi
  4123b6:	xchg   edi,eax
  4123b7:	mov    bh,0x9f
  4123b9:	jle    0x412399
  4123bb:	and    esp,DWORD PTR [ecx]
  4123bd:	pop    edx
  4123be:	and    DWORD PTR ds:0xdce12d14,ebx
  4123c4:	nop
  4123c5:	pop    ebp
  4123c6:	cmp    al,BYTE PTR [ebp-0x2fa5bca7]
  4123cc:	push   edi
  4123cd:	jle    0x412418
  4123cf:	push   es
  4123d0:	mov    ebp,eax
  4123d2:	jnp    0x412429
  4123d4:	iret   
  4123d5:	dec    eax
  4123d6:	cld    
  4123d7:	lock push eax
  4123d9:	popa   
  4123da:	stos   BYTE PTR es:[edi],al
  4123db:	or     DWORD PTR [esi-0x4e],eax
  4123de:	add    ebx,0x6f
  4123e1:	jnp    0x412407
  4123e3:	push   ds
  4123e4:	xchg   edi,eax
  4123e5:	mov    eax,0x53168193
  4123ea:	or     DWORD PTR [ebx-0x5af6a175],edi
  4123f0:	xchg   ecx,eax
  4123f1:	push   edx
  4123f2:	sub    eax,0x2199ba1
  4123f7:	dec    edx
  4123f8:	sub    ch,BYTE PTR ds:0xd6a34cdc
  4123fe:	xlat   BYTE PTR ds:[ebx]
  4123ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412400:	sbb    eax,0x29a6f8c3
  412405:	dec    edi
  412406:	mov    ebp,0x39628932
  41240b:	push   ebx
  41240c:	add    bh,dh
  41240e:	cmp    DWORD PTR [ecx+0x62],0xc31b396c
  412415:	xor    al,0xfa
  412417:	sub    al,0x28
  412419:	pop    ss
  41241a:	ret    0xefb3
  41241d:	fild   WORD PTR [edi-0x2a]
  412420:	icebp  
  412421:	sbb    eax,0xa4ff6614
  412426:	xor    eax,0x5242c004
  41242b:	fcom   DWORD PTR [edx+esi*8+0x4830cc54]
  412432:	hlt    
  412433:	dec    ebp
  412434:	cmp    eax,0xdee9a77c
  412439:	mov    edi,0xabb9511f
  41243e:	idiv   esp
  412440:	ret    
  412441:	pop    ss
  412442:	fstp   QWORD PTR [eax]
  412444:	repz or esp,DWORD PTR [edx]
  412447:	xchg   esp,eax
  412448:	xor    al,0x38
  41244a:	xchg   edx,eax
  41244b:	adc    BYTE PTR ds:0xe0781d9a,dh
  412451:	mov    ds:0x941fcc1b,eax
  412456:	bnd jmp 0x412446
  412459:	push   ebx
  41245a:	jne    0x4124d2
  41245c:	int3   
  41245d:	out    0x4a,al
  41245f:	pop    ebp
  412460:	hlt    
  412461:	jae    0x41244e
  412463:	mov    bl,0xd9
  412465:	out    dx,eax
  412466:	jb     0x4124d4
  412468:	cs push 0x788b34ef
  41246e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41246f:	inc    eax
  412470:	mov    bl,0xac
  412472:	sub    DWORD PTR [edi+0x47],ebp
  412475:	ins    DWORD PTR es:[edi],dx
  412476:	jae    0x4124c8
  412478:	pop    ss
  412479:	inc    ebp
  41247a:	jbe    0x412478
  41247c:	sbb    BYTE PTR [ecx],0x8
  41247f:	sub    DWORD PTR [eax+edi*4],0x68
  412483:	or     BYTE PTR [eax-0x23],ah
  412486:	mov    ds:0x5cf28d20,eax
  41248b:	repz and esp,DWORD PTR [eax+0xe]
  41248f:	das    
  412490:	jo     0x4124c0
  412492:	sub    eax,0xfbc60b40
  412497:	mov    eax,0xfb62057
  41249c:	jg     0x412455
  41249e:	mov    edi,ebp
  4124a0:	or     DWORD PTR [eax],ebp
  4124a2:	cmp    DWORD PTR [edx],0xffffffc0
  4124a5:	lahf   
  4124a6:	jmp    0x41251d
  4124a8:	cwde   
  4124a9:	js     0x4124dc
  4124ab:	adc    al,0xc5
  4124ad:	das    
  4124ae:	sub    dl,al
  4124b0:	pop    edi
  4124b1:	(bad)  
  4124b2:	mov    ah,0x3
  4124b4:	cmp    edi,DWORD PTR [ecx+esi*2+0x42fc93f5]
  4124bb:	mov    bh,0x4c
  4124bd:	and    al,0x3c
  4124bf:	std    
  4124c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124c1:	out    dx,eax
  4124c2:	jg     0x41250b
  4124c4:	sti    
  4124c5:	jbe    0x4124ee
  4124c7:	ret    0x231d
  4124ca:	and    eax,0xb387b045
  4124cf:	fwait
  4124d0:	push   eax
  4124d1:	adc    edx,DWORD PTR [edi+0x7f09408b]
  4124d7:	dec    ebx
  4124d8:	mov    al,0xa8
  4124da:	test   DWORD PTR [ecx+0x577bc5e3],eax
  4124e0:	dec    esi
  4124e1:	add    eax,0xbdd54cb5
  4124e6:	xchg   esp,eax
  4124e7:	pop    ebp
  4124e8:	dec    ecx
  4124e9:	out    dx,eax
  4124ea:	ins    DWORD PTR es:[edi],dx
  4124eb:	(bad)  
  4124ed:	loop   0x412538
  4124ef:	push   0x11
  4124f1:	adc    eax,0xb62f58f2
  4124f6:	and    dh,bh
  4124f8:	outs   dx,BYTE PTR ds:[esi]
  4124f9:	or     edx,DWORD PTR [edi-0x76]
  4124fc:	fs pop esi
  4124fe:	mov    ebx,0x8ac57515
  412503:	dec    ecx
  412504:	arpl   WORD PTR [eax],sp
  412506:	xor    eax,0xe21e7f15
  41250b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41250c:	jbe    0x4124b2
  41250e:	push   es
  41250f:	fstp   QWORD PTR [ecx]
  412511:	not    edi
  412513:	push   edi
  412514:	and    BYTE PTR [edi+eax*4+0x5a492a70],dl
  41251b:	push   eax
  41251c:	loop   0x412538
  41251e:	retf   
  41251f:	xchg   ebp,eax
  412520:	fdiv   st(5),st
  412522:	(bad)  
  412523:	in     al,0x81
  412525:	test   ebx,esi
  412527:	push   edx
  412528:	mov    esp,0xc392352
  41252d:	ins    DWORD PTR es:[edi],dx
  41252e:	xchg   bh,bl
  412530:	pushf  
  412531:	idiv   BYTE PTR [edx]
  412533:	pop    ebp
  412534:	cmp    cl,BYTE PTR [ebx]
  412536:	pop    ds
  412537:	lea    ebx,[ebx]
  412539:	adc    DWORD PTR [ebx-0x66ad7939],eax
  41253f:	mov    edi,0xe12505c8
  412544:	sub    eax,0xa605f780
  412549:	jo     0x41254f
  41254b:	xchg   edx,eax
  41254c:	mov    al,0xdd
  41254e:	into   
  41254f:	or     eax,0xe03e2a8
  412554:	dec    ebx
  412555:	mov    ds:0xf0b95017,eax
  41255a:	jmp    0x4125da
  41255c:	aaa    
  41255d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41255f:	dec    edx
  412560:	test   edx,ebp
  412562:	sub    ebp,DWORD PTR [esi+ecx*4+0xfdf4fcf]
  412569:	mov    esp,0x99bb7f27
  41256e:	and    eax,0x931acf9c
  412573:	shl    DWORD PTR es:[ecx+0x3b23fe14],cl
  41257a:	out    0x45,al
  41257c:	or     ch,BYTE PTR [eax-0x66]
  41257f:	enter  0x5e0f,0x9b
  412583:	mov    cl,0x6b
  412585:	cli    
  412586:	pop    ebx
  412587:	fld    QWORD PTR [edx-0x74a2f40b]
  41258d:	xchg   ecx,eax
  41258e:	xor    eax,edx
  412590:	call   0x48da:0x8beeecf1
  412597:	pushf  
  412598:	push   ebx
  412599:	adc    edi,DWORD PTR [esi+ebp*1+0x67]
  41259d:	aam    0xa1
  41259f:	xor    BYTE PTR [ecx-0x4e],ch
  4125a2:	addr16 jp 0x4125d8
  4125a5:	jnp    0x4125db
  4125a7:	push   eax
  4125a8:	jbe    0x4125a1
  4125aa:	loop   0x41258c
  4125ac:	lods   eax,DWORD PTR ds:[esi]
  4125ad:	rcl    ebp,0x8c
  4125b0:	call   0xd1f2cadb
  4125b5:	daa    
  4125b6:	ret    
  4125b7:	cmp    BYTE PTR [edx-0x6ebe9f7],dh
  4125bd:	xor    eax,0x22e34a56
  4125c2:	or     BYTE PTR ds:0x2f42a4fe,cl
  4125c8:	sbb    al,dh
  4125ca:	mov    BYTE PTR [esi],dh
  4125cc:	inc    edi
  4125cd:	pop    es
  4125ce:	sbb    bl,ch
  4125d0:	sbb    DWORD PTR ds:0xcc2985b,0x759f570c
  4125da:	test   al,0x42
  4125dc:	dec    esp
  4125dd:	and    eax,0xe7430dc8
  4125e2:	mov    dl,0x24
  4125e4:	lea    esp,[ecx-0x77fabcd2]
  4125ea:	in     al,dx
  4125eb:	mov    eax,ds:0x1ce4fc5
  4125f0:	scas   al,BYTE PTR es:[edi]
  4125f1:	jmp    0x6081:0x83c42cf4
  4125f8:	out    dx,eax
  4125f9:	xlat   BYTE PTR ds:[ebx]
  4125fa:	sub    BYTE PTR [esi-0x7f36efef],0xf1
  412601:	jmp    0x84ec:0x2092ddf0
  412608:	pop    ds
  412609:	sub    edx,DWORD PTR [eax+0x6c]
  41260c:	aaa    
  41260d:	xchg   edi,eax
  41260e:	pop    es
  41260f:	(bad)  
  412610:	mov    ebx,0xef64a42
  412615:	repz repz mov cl,0x60
  412619:	push   0xffffffbc
  41261b:	cmp    eax,0x91eef3d0
  412620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412622:	jp     0x41267f
  412624:	aam    0x9a
  412626:	xchg   edi,eax
  412627:	cmc    
  412628:	jmp    0xf990:0x1bcff842
  41262f:	mov    bh,0x6b
  412631:	sub    DWORD PTR [ecx],esp
  412633:	je     0x412647
  412635:	mov    dl,0x8c
  412637:	inc    eax
  412638:	(bad)  
  412639:	stc    
  41263a:	xor    ebx,DWORD PTR [ecx-0x72]
  41263d:	aam    0xd1
  41263f:	dec    eax
  412640:	xchg   esp,eax
  412641:	cwde   
  412642:	or     edx,DWORD PTR [eax+0x373f8512]
  412648:	loopne 0x412660
  41264a:	jb     0x4125cc
  41264c:	xor    cl,BYTE PTR [edx-0x6b]
  41264f:	ret    0x1dcd
  412652:	sbb    al,0x23
  412654:	mov    ecx,0x1812a78b
  412659:	clc    
  41265a:	stos   BYTE PTR es:[edi],al
  41265b:	nop
  41265c:	and    eax,0x5b99b904
  412661:	xor    BYTE PTR [ebp-0x1638fb43],0xdb
  412668:	xchg   ebx,eax
  412669:	test   eax,0x6277e00c
  41266e:	xchg   esp,eax
  41266f:	mov    bh,0x80
  412671:	aam    0x60
  412673:	fwait
  412674:	xor    bl,bl
  412676:	or     eax,esi
  412678:	bound  esp,QWORD PTR [ecx+0x7c]
  41267b:	lods   eax,DWORD PTR ds:[esi]
  41267c:	js     0x412659
  41267e:	sbb    bh,0x98
  412681:	sub    eax,0xb13bbfdb
  412686:	xor    bl,dl
  412688:	aaa    
  412689:	loopne 0x41262b
  41268b:	adc    ebx,ebp
  41268d:	push   ebx
  41268e:	inc    edx
  41268f:	xor    al,0x23
  412691:	jmp    0x1ae8a236
  412696:	ret    
  412697:	aad    0xc
  412699:	xchg   esi,eax
  41269a:	(bad)  
  41269b:	out    0x9f,al
  41269d:	loopne 0x412646
  41269f:	xchg   esi,eax
  4126a0:	stos   DWORD PTR es:[edi],eax
  4126a1:	ja     0x412666
  4126a3:	sub    DWORD PTR [esi-0x42dc7857],edx
  4126a9:	inc    esi
  4126aa:	es sbb eax,0x952e20e
  4126b0:	mov    ch,0x78
  4126b2:	sub    ah,BYTE PTR [esi+0x57840543]
  4126b8:	pop    esi
  4126b9:	es aam 0xf3
  4126bc:	retf   
  4126bd:	xchg   edx,eax
  4126be:	or     DWORD PTR [edi],esp
  4126c0:	jnp    0x4126c2
  4126c2:	mov    ah,0x48
  4126c4:	mov    ds:0x6723ee75,al
  4126c9:	mov    ecx,0x93ac4624
  4126ce:	inc    eax
  4126cf:	outs   dx,BYTE PTR ds:[esi]
  4126d0:	xchg   DWORD PTR [ebx+0x11],ebx
  4126d3:	lds    esi,FWORD PTR [edx+0x62e54582]
  4126d9:	stos   BYTE PTR es:[edi],al
  4126da:	push   eax
  4126db:	pushf  
  4126dc:	fimul  WORD PTR [edx]
  4126de:	inc    BYTE PTR [edi+0x4]
  4126e1:	push   eax
  4126e2:	mul    esp
  4126e4:	or     edi,DWORD PTR [edi-0x6d8909f7]
  4126ea:	xor    esi,eax
  4126ec:	inc    edx
  4126ed:	(bad)  
  4126ee:	cli    
  4126ef:	repnz or al,0x60
  4126f2:	cmp    eax,0xe8db4d87
  4126f7:	pop    es
  4126f8:	sbb    eax,0xb2d4d86b
  4126fd:	test   al,0xca
  4126ff:	test   BYTE PTR [ebx-0x45],bh
  412702:	ja     0x412698
  412704:	lods   eax,DWORD PTR ds:[esi]
  412705:	mov    ebx,0xcd19b580
  41270a:	xor    DWORD PTR [eax-0x18],esi
  41270d:	dec    eax
  41270e:	out    0x92,eax
  412710:	call   0x254dca44
  412715:	push   edi
  412716:	in     al,0xaa
  412718:	dec    ebx
  412719:	cmp    bh,0x47
  41271c:	jno    0x412723
  41271e:	mov    al,0x8b
  412720:	or     DWORD PTR [esi-0x768901ff],edi
  412726:	cmp    DWORD PTR [esi-0x6fde0b1b],esi
  41272c:	xchg   esi,eax
  41272d:	and    al,ch
  41272f:	sbb    BYTE PTR [ecx+0x3ec87deb],ch
  412735:	addr16 mov cl,0xf2
  412738:	mov    esp,0x47f961e1
  41273d:	ret    0x1740
  412740:	dec    ecx
  412741:	(bad)  
  412742:	imul   esi,DWORD PTR [edi-0x6aa30890],0xffffffa8
  412749:	add    ch,BYTE PTR [ecx]
  41274b:	pop    ecx
  41274c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41274d:	loopne 0x4127ce
  41274f:	pop    edx
  412750:	js     0x412751
  412752:	iret   
  412753:	push   cs
  412754:	jmp    0x58bcfbf2
  412759:	or     al,0x71
  41275b:	cmp    edi,DWORD PTR [eax]
  41275d:	fidiv  WORD PTR [eax-0x11903938]
  412763:	cmp    BYTE PTR [eax-0x3c1fb228],0x73
  41276a:	out    0xfb,al
  41276c:	lods   eax,DWORD PTR ds:[esi]
  41276d:	push   ecx
  41276e:	in     al,dx
  41276f:	push   ss
  412770:	adc    al,0x7d
  412772:	push   0xe60a73d6
  412777:	xor    ecx,DWORD PTR [ebp+0x6a59380a]
  41277d:	shr    ch,0xf9
  412780:	mov    edi,0x8bf44230
  412785:	jb     0x4127c8
  412787:	pop    eax
  412788:	mov    bl,0xbe
  41278a:	in     al,0x38
  41278c:	imul   eax,DWORD PTR [edx],0x262ef2d3
  412792:	jne    0x412738
  412794:	xor    BYTE PTR [ebx+eiz*1+0x70],bh
  412798:	mov    WORD PTR [ecx],es
  41279a:	mov    eax,0xed992a83
  41279f:	jecxz  0x41274a
  4127a1:	push   0x632f60ab
  4127a6:	cmp    ch,0xf0
  4127a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127aa:	inc    DWORD PTR [ebp+0x6e2862c0]
  4127b0:	jmp    0x412829
  4127b2:	push   esi
  4127b3:	cli    
  4127b4:	lods   eax,DWORD PTR ds:[esi]
  4127b5:	or     al,0xd5
  4127b7:	fbstp  TBYTE PTR [edx]
  4127b9:	popf   
  4127ba:	cli    
  4127bb:	pop    es
  4127bc:	paddsb mm5,mm3
  4127bf:	in     eax,dx
  4127c0:	sub    eax,0xb1e81f6a
  4127c5:	sbb    BYTE PTR [ecx],al
  4127c7:	inc    ecx
  4127c8:	in     al,dx
  4127c9:	lea    edi,[ebx]
  4127cb:	or     cl,BYTE PTR [ebx-0x11dc84e4]
  4127d1:	or     eax,0x6f53f76d
  4127d6:	mov    dh,0x2
  4127d8:	inc    ecx
  4127d9:	pop    esi
  4127da:	inc    esp
  4127db:	ins    DWORD PTR es:[edi],dx
  4127dc:	push   edx
  4127dd:	test   BYTE PTR [eax-0x55],0x72
  4127e1:	stos   BYTE PTR es:[edi],al
  4127e2:	mov    esi,0xd384fc89
  4127e7:	cs cmc 
  4127e9:	jno    0x4127e6
  4127eb:	adc    BYTE PTR [ebp-0x2b968d6b],dl
  4127f1:	ins    BYTE PTR es:[edi],dx
  4127f2:	aad    0x30
  4127f4:	push   es
  4127f5:	mov    ecx,0xe548ab4e
  4127fa:	pop    ebp
  4127fb:	cmp    DWORD PTR [eax-0x5a],edx
  4127fe:	not    ch
  412800:	jae    0x4127d9
  412802:	test   eax,0x2e967841
  412807:	rcr    ebp,0x93
  41280a:	jno    0x412887
  41280c:	sbb    esi,DWORD PTR [esi-0x564f5192]
  412812:	ds push ebp
  412814:	mov    edi,0x3404a9f4
  412819:	jo     0x412851
  41281b:	bound  ebp,QWORD PTR [eax-0x58]
  41281e:	cld    
  41281f:	push   edi
  412820:	push   edi
  412821:	xor    al,0x81
  412823:	daa    
  412824:	into   
  412825:	int3   
  412826:	(bad)
  412829:	mov    esp,0x804491fe
  41282e:	pop    ds
  41282f:	xor    al,0xb2
  412831:	and    ebx,DWORD PTR [esi-0x3a]
  412834:	(bad)  
  412835:	retf   0xebcd
  412838:	jge    0x41286c
  41283a:	je     0x412859
  41283c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41283d:	mov    ebp,0x9b2e12a1
  412842:	push   eax
  412843:	xchg   ecx,eax
  412844:	pop    ebp
  412845:	jae    0x4127d0
  412847:	ficomp DWORD PTR [ecx+0x6d]
  41284a:	gs mov esp,0x229b1001
  412850:	adc    al,0xbb
  412852:	lea    esi,[esi+ebp*2]
  412855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412856:	push   edx
  412857:	jecxz  0x4127da
  412859:	inc    ecx
  41285a:	sahf   
  41285b:	sbb    eax,edi
  41285d:	jle    0x4128ab
  41285f:	jmp    0x41284b
  412861:	xlat   BYTE PTR ds:[ebx]
  412862:	mov    dh,0x84
  412864:	cmp    edi,DWORD PTR [edx]
  412866:	fldenv [edx-0x3d]
  412869:	sbb    bh,BYTE PTR [eax]
  41286b:	cmp    DWORD PTR [ebp-0x9],ebp
  41286e:	jns    0x412868
  412870:	outs   dx,BYTE PTR ds:[esi]
  412871:	fdiv   QWORD PTR [ebx+edx*2+0x13fe2534]
  412878:	pop    ebx
  412879:	(bad)  
  41287a:	dec    ecx
  41287c:	scas   al,BYTE PTR es:[edi]
  41287d:	in     al,0xbe
  41287f:	pop    es
  412880:	pop    ebx
  412881:	ins    BYTE PTR es:[edi],dx
  412882:	iret   
  412883:	or     edi,eax
  412885:	repz dec ebx
  412887:	jp     0x4128a4
  412889:	pop    esp
  41288a:	jnp    0x412906
  41288c:	cwde   
  41288d:	inc    esi
  41288e:	imul   edx,DWORD PTR [edi+0x6f],0xffffffcb
  412892:	mov    ah,0xb1
  412894:	std    
  412895:	cld    
  412896:	xlat   BYTE PTR ds:[ebx]
  412897:	nop
  412898:	xchg   DWORD PTR [ecx],esp
  41289a:	add    ah,dh
  41289c:	xchg   esi,eax
  41289d:	inc    esp
  41289e:	test   ebx,ebp
  4128a0:	mov    bh,0x59
  4128a2:	push   es
  4128a3:	out    0x15,eax
  4128a5:	jnp    0x4128ab
  4128a7:	push   ecx
  4128a8:	arpl   WORD PTR [edi],sp
  4128aa:	lahf   
  4128ab:	je     0x412917
  4128ad:	fadd   DWORD PTR [esi-0x65]
  4128b0:	dec    edi
  4128b1:	rol    DWORD PTR [ebx+0x56],1
  4128b4:	dec    edx
  4128b5:	adc    al,BYTE PTR [edx]
  4128b7:	mov    eax,ds:0x4c7c9afb
  4128bc:	pop    esp
  4128bd:	jno    0x4128b8
  4128bf:	adc    eax,DWORD PTR [ecx-0x5a]
  4128c2:	aam    0x8c
  4128c4:	leave  
  4128c5:	push   esp
  4128c6:	mov    WORD PTR [eax+eax*4],gs
  4128c9:	xchg   BYTE PTR ds:0xf83ec198,bl
  4128cf:	popf   
  4128d0:	clc    
  4128d1:	push   es
  4128d2:	or     eax,edx
  4128d4:	dec    ebx
  4128d5:	add    DWORD PTR [ebx-0x5a],ebp
  4128d8:	xor    al,0x76
  4128da:	mov    esi,0x8b28b2ee
  4128df:	daa    
  4128e0:	clc    
  4128e1:	repz mov ch,0xf8
  4128e4:	rol    DWORD PTR [eax-0x49],cl
  4128e7:	lahf   
  4128e8:	fiadd  WORD PTR [edx]
  4128ea:	sub    dl,BYTE PTR [edx+0x761a110b]
  4128f0:	(bad)  
  4128f1:	test   eax,0xf717c7cc
  4128f6:	lods   al,BYTE PTR ds:[esi]
  4128f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128f8:	pushf  
  4128f9:	retf   0xadbf
  4128fc:	popa   
  4128fd:	ret    
  4128fe:	sbb    DWORD PTR [eax],ecx
  412900:	xor    al,0x49
  412902:	inc    ebx
  412903:	cli    
  412904:	mov    esi,0xd27b4728
  412909:	jb     0x4128af
  41290b:	fild   QWORD PTR [ebx+0x351fdc83]
  412911:	cmp    al,0x6d
  412913:	add    eax,0xa3eea3c
  412918:	fisttp QWORD PTR [edi]
  41291a:	movups XMMWORD PTR [ebx+0x69],xmm0
  41291e:	cwde   
  41291f:	inc    ecx
  412920:	jo     0x41295c
  412922:	mov    ah,0x9c
  412924:	sub    bl,BYTE PTR [ecx+eax*4-0x8]
  412928:	jo     0x4128c6
  41292a:	sub    al,bl
  41292c:	mov    esi,0x7c0c14f7
  412931:	mov    edi,0xdd0a2cf1
  412936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412937:	dec    eax
  412938:	lea    esi,[ebx+0x15a01137]
  41293e:	loope  0x41290f
  412940:	add    DWORD PTR [eax],0x55
  412943:	xor    cl,BYTE PTR [ecx+0x69]
  412946:	addr16 add eax,0x1a98a4cf
  41294c:	(bad)  
  41294d:	cmc    
  41294e:	sbb    DWORD PTR [edx+0xeab786d],0x81135d8d
  412958:	ins    BYTE PTR es:[edi],dx
  412959:	jle    0x412955
  41295b:	aam    0x14
  41295d:	imul   ebp,DWORD PTR [ebx],0x7eaadf14
  412963:	mov    edi,0xb69ea67c
  412968:	(bad)  
  412969:	cmc    
  41296a:	mov    ah,0x39
  41296c:	add    eax,0xfd3859ed
  412971:	push   ebp
  412972:	mov    bh,0xc
  412974:	sbb    eax,ebp
  412976:	mov    bh,0x29
  412978:	pop    ss
  412979:	sbb    eax,0x3b5500d
  41297e:	jmp    0x9956:0x71a3ce31
  412985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412986:	mov    edx,0x9436d1a1
  41298b:	int3   
  41298c:	and    al,BYTE PTR [ebx-0x68c049a8]
  412992:	add    eax,0x925fb87f
  412997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412998:	js     0x412986
  41299a:	shr    DWORD PTR [eax+ebp*4-0x6a],cl
  41299e:	fisub  WORD PTR [ebp+esi*4-0x5f7ea285]
  4129a5:	mov    bh,0xd8
  4129a7:	push   esi
  4129a8:	loopne 0x412963
  4129aa:	sbb    ecx,DWORD PTR [edx+0x7e941385]
  4129b0:	adc    ecx,DWORD PTR [ecx+ebp*4+0x38cb2ed8]
  4129b7:	data16 loope 0x4129ea
  4129ba:	pusha  
  4129bb:	push   eax
  4129bc:	push   0x17b96280
  4129c1:	in     al,0xe2
  4129c3:	shl    BYTE PTR [edx],cl
  4129c5:	sub    edx,DWORD PTR [ebp+0x2e]
  4129c8:	mov    bh,0xab
  4129ca:	mov    DWORD PTR [ebp-0x6e347d36],0x9de9787
  4129d4:	imul   ebp,DWORD PTR [ecx],0x95d66f75
  4129da:	scas   al,BYTE PTR es:[edi]
  4129db:	(bad)  
  4129dc:	dec    ecx
  4129dd:	add    ebp,DWORD PTR [ecx]
  4129df:	adc    ch,cl
  4129e1:	cmp    al,0x16
  4129e3:	push   edx
  4129e4:	aad    0xe5
  4129e6:	and    edx,DWORD PTR [ebx+eiz*4-0x78a01ff3]
  4129ed:	push   0xddeb105d
  4129f2:	ss inc eax
  4129f4:	and    BYTE PTR es:[esi-0x3839b3de],0x7b
  4129fc:	adc    al,0x9a
  4129fe:	and    DWORD PTR [ebx-0x6963534b],edi
  412a04:	call   0x75ee3c2e
  412a09:	test   DWORD PTR ds:0xdae818f3,edi
  412a0f:	enter  0xd264,0xf7
  412a13:	out    dx,eax
  412a14:	aam    0xbe
  412a16:	jp     0x4129a3
  412a18:	mov    ds:0x85b8e28f,eax
  412a1d:	pop    esi
  412a1e:	jl     0x412a76
  412a20:	adc    edi,esp
  412a22:	sahf   
  412a23:	outs   dx,DWORD PTR ds:[esi]
  412a24:	xchg   edi,eax
  412a25:	(bad)  
  412a26:	push   edx
  412a27:	xchg   al,dl
  412a29:	pop    ss
  412a2a:	xchg   esi,eax
  412a2b:	mov    eax,0xa5c5aed5
  412a30:	call   0x95a30480
  412a35:	call   0x9ef2b5a6
  412a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a3b:	lahf   
  412a3c:	xchg   esp,eax
  412a3d:	dec    ebx
  412a3e:	scas   al,BYTE PTR es:[edi]
  412a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a40:	out    0xf7,al
  412a42:	mov    al,dl
  412a44:	das    
  412a45:	xchg   ecx,eax
  412a46:	in     eax,0x2c
  412a48:	test   BYTE PTR [edx-0x32],cl
  412a4b:	adc    esi,DWORD PTR [ebp-0x296aec47]
  412a51:	mov    ds:0xdf2c0359,al
  412a56:	adc    BYTE PTR [edx-0x29795c62],dl
  412a5c:	enter  0xe5ef,0x68
  412a60:	dec    ecx
  412a61:	scas   al,BYTE PTR es:[edi]
  412a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a63:	sub    dh,bl
  412a65:	cdq    
  412a66:	inc    ecx
  412a67:	lods   al,BYTE PTR ds:[esi]
  412a68:	std    
  412a69:	dec    ebp
  412a6a:	jbe    0x412a04
  412a6c:	loopne 0x412ae2
  412a6e:	fisub  DWORD PTR [ebp+0x73df4667]
  412a74:	in     eax,dx
  412a75:	loop   0x412a06
  412a77:	aaa    
  412a78:	sub    eax,0x66c39002
  412a7d:	xor    ah,BYTE PTR [eax-0x52]
  412a80:	and    al,0x1d
  412a82:	dec    si
  412a84:	mov    al,0xaf
  412a86:	cwde   
  412a87:	out    0xe7,al
  412a89:	jecxz  0x412a99
  412a8b:	pop    es
  412a8c:	hlt    
  412a8d:	sbb    DWORD PTR [edi+0x6d7a384f],eax
  412a93:	cmp    eax,0x3f4550fa
  412a98:	sbb    cl,bl
  412a9a:	or     eax,0xb07f6562
  412a9f:	sbb    eax,esp
  412aa1:	(bad)  
  412aa2:	sbb    dh,BYTE PTR [edx+0x44]
  412aa5:	aas    
  412aa6:	imul   edx,DWORD PTR [esi-0x1ff66a3e],0x2c
  412aad:	mov    DWORD PTR [edx],ecx
  412aaf:	push   esi
  412ab0:	test   al,0x7d
  412ab2:	lea    esp,[edx]
  412ab4:	fwait
  412ab5:	mov    dl,0x65
  412ab7:	cwde   
  412ab8:	add    al,0x44
  412aba:	sbb    edi,ecx
  412abc:	sti    
  412abd:	adc    esp,ebx
  412abf:	add    ecx,ebp
  412ac1:	retf   
  412ac2:	sub    al,0x9d
  412ac4:	cmp    eax,0xbeb3f3be
  412ac9:	xor    esi,DWORD PTR [eax+0x3b]
  412acc:	cmp    DWORD PTR [ebp-0xb],edi
  412acf:	mov    esi,0x36e90ccb
  412ad4:	mov    eax,ds:0x3534e449
  412ad9:	mov    fs,WORD PTR [esi+0x33]
  412adc:	out    dx,al
  412add:	sub    al,0xc0
  412adf:	add    al,0xf1
  412ae1:	dec    ebp
  412ae2:	add    BYTE PTR [ecx],0x93
  412ae5:	sbb    DWORD PTR [eax+0x410bef3],0x59
  412aec:	push   eax
  412aed:	sbb    DWORD PTR [ebp+0x41b4e9c9],0xcc839baa
  412af7:	dec    ebx
  412af8:	dec    esp
  412af9:	sbb    eax,0x2ac38753
  412afe:	out    0x45,al
  412b00:	and    ecx,edi
  412b02:	xchg   BYTE PTR [edi+0x37c822ed],al
  412b08:	push   DWORD PTR [ebx]
  412b0a:	pop    esi
  412b0b:	xchg   esi,eax
  412b0c:	lahf   
  412b0d:	xor    al,0x9
  412b0f:	xchg   ecx,eax
  412b10:	mov    ah,0x83
  412b12:	mov    eax,0x934ebe5b
  412b17:	push   esi
  412b18:	stos   DWORD PTR es:[edi],eax
  412b19:	rcr    BYTE PTR [ebx+0x20],1
  412b1c:	repz repnz mov ds:0x43153190,al
  412b24:	mov    ecx,0xaf39b43c
  412b29:	xchg   esi,eax
  412b2a:	loope  0x412b80
  412b2c:	pop    es
  412b2d:	(bad)  
  412b2e:	jnp    0x412b8d
  412b30:	iret   
  412b31:	in     al,dx
  412b32:	ss push edi
  412b34:	js     0x412aee
  412b36:	jp     0x412b6a
  412b38:	mov    edi,0xf136caec
  412b3d:	and    al,0x36
  412b3f:	sbb    esp,ecx
  412b41:	in     al,dx
  412b42:	add    ch,bl
  412b44:	(bad)  
  412b45:	add    esp,DWORD PTR gs:[edi-0x5fc02b70]
  412b4c:	mov    cl,BYTE PTR [edx-0x473d0fac]
  412b52:	iret   
  412b53:	ja     0x412b7f
  412b55:	jge    0x412bb0
  412b57:	jp     0x412b0a
  412b59:	mov    cl,0x14
  412b5b:	fdiv   QWORD PTR [esp+ebp*8]
  412b5e:	fdiv   QWORD PTR [eax+0x48eecd9e]
  412b64:	les    ecx,FWORD PTR [ebp-0x57]
  412b67:	inc    esp
  412b68:	mov    ecx,0x1c015f62
  412b6d:	bound  edi,QWORD PTR ds:[ecx-0x63]
  412b71:	rol    BYTE PTR cs:[edx-0x130c8d68],1
  412b78:	sar    ch,1
  412b7a:	test   al,0x99
  412b7c:	in     al,dx
  412b7d:	xor    BYTE PTR [edi+0x6f],cl
  412b80:	(bad)  
  412b81:	mov    cl,0x54
  412b83:	dec    eax
  412b84:	aaa    
  412b85:	push   ebp
  412b86:	ins    BYTE PTR es:[edi],dx
  412b87:	sub    edx,DWORD PTR [ecx-0x65]
  412b8a:	sbb    ah,BYTE PTR [ebx+0x30bf4906]
  412b90:	mov    DWORD PTR [edi+0x653b819e],esp
  412b96:	mov    edx,DWORD PTR [ebx+0x601706ec]
  412b9c:	stos   BYTE PTR es:[edi],al
  412b9d:	inc    ebx
  412b9e:	cmp    DWORD PTR [bp+si-0x7602],0x65
  412ba4:	pushw  es
  412ba6:	and    eax,0xd2cded02
  412bab:	dec    ecx
  412bac:	mov    BYTE PTR [edx-0x51],0xbb
  412bb0:	mov    ah,0xf1
  412bb2:	(bad)  
  412bb3:	dec    DWORD PTR [esi+edx*8-0x73]
  412bb7:	mov    ah,0x26
  412bb9:	mov    esi,0xc4596b70
  412bbe:	retf   0xfaf9
  412bc1:	pop    ds
  412bc2:	fwait
  412bc3:	or     BYTE PTR [esi+0x7fef4016],bh
  412bc9:	cmc    
  412bca:	(bad)  
  412bcb:	cli    
  412bcc:	(bad)  
  412bcd:	mov    edi,0x268e77a5
  412bd2:	lods   eax,DWORD PTR ds:[esi]
  412bd3:	out    0xb0,eax
  412bd5:	mov    al,0xc9
  412bd7:	jmp    0x412b9a
  412bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bda:	jns    0x412c18
  412bdc:	dec    ebp
  412bdd:	in     al,dx
  412bde:	dec    esi
  412bdf:	sbb    ebp,DWORD PTR [edx-0x1d]
  412be2:	neg    cl
  412be4:	lock pusha 
  412be6:	gs (bad) 
  412be8:	iret   
  412be9:	sub    eax,0x5d3803b5
  412bee:	adc    BYTE PTR [edx+0x25],ch
  412bf1:	inc    esi
  412bf2:	dec    esi
  412bf3:	dec    esp
  412bf4:	hlt    
  412bf5:	lahf   
  412bf6:	fnsave [ecx+0x58cfea24]
  412bfc:	mov    ah,0x94
  412bfe:	data16 cmp al,BYTE PTR [eax]
  412c01:	mov    ecx,0xc7fd78ab
  412c06:	repz shl dh,0xa7
  412c0a:	add    esi,DWORD PTR [ebx-0x66]
  412c0d:	out    dx,eax
  412c0e:	push   edi
  412c0f:	adc    bh,BYTE PTR [eax+ebp*2+0x2e64077]
  412c16:	ja     0x412bf8
  412c18:	daa    
  412c19:	jnp    0x412c73
  412c1b:	mov    BYTE PTR [edx-0x588be1af],cl
  412c21:	xchg   ebp,eax
  412c22:	and    ebp,ecx
  412c24:	dec    edi
  412c25:	push   esp
  412c26:	arpl   dx,bp
  412c28:	jae    0x412c30
  412c2a:	pop    edx
  412c2b:	push   es
  412c2c:	adc    eax,DWORD PTR [edi+0x19]
  412c2f:	std    
  412c30:	xor    al,0xfb
  412c32:	sub    dh,BYTE PTR es:[ecx+0x5118eeb8]
  412c39:	mov    eax,ds:0x2a23dc47
  412c3e:	iret   
  412c3f:	sub    edx,DWORD PTR [eax+0x725f92c]
  412c45:	mov    ebx,eax
  412c47:	in     eax,dx
  412c48:	dec    ebp
  412c49:	inc    esp
  412c4a:	inc    esi
  412c4b:	and    ecx,ebx
  412c4d:	adc    al,BYTE PTR [ecx+ebx*1]
  412c50:	add    cl,ch
  412c52:	push   edi
  412c53:	add    DWORD PTR [edi],0x1f
  412c56:	sub    BYTE PTR [ebp-0x23],cl
  412c59:	mov    dh,0x34
  412c5b:	and    ebx,0x72
  412c5e:	bound  ebx,QWORD PTR [eax-0x3b]
  412c61:	popf   
  412c62:	add    BYTE PTR [edi+0x74a20b8],ch
  412c68:	jmp    0xc1e4:0x889912bd
  412c6f:	push   edi
  412c70:	data16 sub al,0x2b
  412c73:	stos   BYTE PTR es:[edi],al
  412c74:	adc    al,bl
  412c76:	mov    edi,0xa040fe10
  412c7b:	std    
  412c7c:	inc    esi
  412c7d:	xchg   edx,eax
  412c7e:	in     al,dx
  412c7f:	gs xor eax,0x3efb052
  412c85:	pusha  
  412c86:	mov    BYTE PTR [ebp-0x15ab9d42],ah
  412c8c:	add    esi,DWORD PTR [ecx-0x4b]
  412c8f:	xchg   ecx,eax
  412c90:	lds    esi,FWORD PTR [edi]
  412c92:	neg    esi
  412c94:	aas    
  412c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c96:	xor    dl,BYTE PTR [ebx+0x23225f56]
  412c9c:	cdq    
  412c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c9e:	aam    0x5f
  412ca0:	mov    edi,0x8ed874ce
  412ca5:	ret    
  412ca6:	adc    esi,edx
  412ca8:	xchg   esp,eax
  412ca9:	sar    DWORD PTR [ecx+0x707efc9f],0x5c
  412cb0:	cs dec eax
  412cb2:	iret   
  412cb3:	pop    esp
  412cb4:	aad    0xdf
  412cb6:	test   eax,0xf3c97006
  412cbb:	or     dl,BYTE PTR [edx+esi*2-0x4fc6bd6]
  412cc2:	mov    eax,ebp
  412cc4:	call   0xefc0c051
  412cc9:	and    cl,al
  412ccb:	lods   eax,DWORD PTR ds:[esi]
  412ccc:	add    eax,0x6ab038e5
  412cd1:	iret   
  412cd2:	push   0x51
  412cd4:	cmc    
  412cd5:	inc    esp
  412cd6:	push   0x581ebe92
  412cdb:	imul   ecx,DWORD PTR [ecx-0x4da8a8e2],0xffffff81
  412ce2:	jg     0x412cc4
  412ce4:	pop    ds
  412ce5:	int3   
  412ce6:	js     0x412d11
  412ce8:	pushf  
  412ce9:	xor    bh,ah
  412ceb:	cwde   
  412cec:	stos   DWORD PTR es:[edi],eax
  412ced:	arpl   WORD PTR [edi+edi*8+0x52],di
  412cf1:	mov    ah,0x3e
  412cf3:	jns    0x412d63
  412cf5:	and    BYTE PTR [edi-0x2f],ah
  412cf8:	dec    edi
  412cf9:	fild   QWORD PTR [esi]
  412cfb:	inc    ecx
  412cfc:	stos   DWORD PTR es:[edi],eax
  412cfd:	cli    
  412cfe:	mov    bl,0x52
  412d00:	mov    ah,0x4
  412d02:	sub    al,0x7d
  412d04:	adc    DWORD PTR ds:0xf743b86e,0xdc3036ef
  412d0e:	psrld  mm6,mm2
  412d11:	inc    edx
  412d12:	or     DWORD PTR [ebp+0xb],eax
  412d15:	pop    es
  412d16:	pop    esi
  412d17:	and    ebp,0xcc047612
  412d1d:	push   ebp
  412d1e:	popf   
  412d1f:	push   ecx
  412d20:	mov    eax,ds:0x250d471e
  412d25:	out    dx,eax
  412d26:	ins    DWORD PTR es:[edi],dx
  412d27:	dec    ecx
  412d28:	mov    eax,ds:0xe6223051
  412d2d:	sub    eax,esp
  412d2f:	jmp    0xd364:0xb624347b
  412d36:	xor    BYTE PTR [ebp+0x63402ffe],0x1
  412d3d:	dec    ebx
  412d3e:	adc    BYTE PTR [ecx],al
  412d40:	js     0x412dc1
  412d42:	aaa    
  412d43:	xchg   edi,eax
  412d44:	push   0x9d8c6c84
  412d49:	mov    esp,0x7c0537f9
  412d4e:	ret    0x4e9c
  412d51:	aad    0xc7
  412d53:	ja     0x412d3b
  412d55:	push   eax
  412d56:	push   edx
  412d57:	xchg   DWORD PTR [edx-0x42],ecx
  412d5a:	jbe    0x412d8b
  412d5c:	sbb    DWORD PTR [ebx],ebp
  412d5e:	shl    BYTE PTR [eax],cl
  412d60:	arpl   WORD PTR [eax],si
  412d62:	mov    bh,BYTE PTR [ebp+0x3caf9ef7]
  412d68:	idiv   BYTE PTR [ebp+0x50ff674f]
  412d6e:	mov    ds:0x6a86cf05,al
  412d73:	scas   eax,DWORD PTR es:[edi]
  412d74:	pop    ecx
  412d75:	sbb    BYTE PTR [edi],dl
  412d77:	addr16 rcr bl,1
  412d7a:	mov    edx,0x38558b26
  412d7f:	test   eax,0x398efd7c
  412d84:	cmp    BYTE PTR ds:0x2630b917,cl
  412d8a:	jmp    0x412de2
  412d8c:	or     BYTE PTR [edx],dh
  412d8e:	adc    DWORD PTR [ebp+ebx*4+0x27000810],esp
  412d95:	pop    ds
  412d96:	xor    bl,al
  412d98:	mov    ecx,0x2a748335
  412d9d:	push   ebp
  412d9e:	cmc    
  412d9f:	shl    DWORD PTR [edi-0x1],0xe7
  412da3:	xchg   edx,eax
  412da4:	jle    0x412e18
  412da6:	aam    0xc0
  412da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412da9:	shl    DWORD PTR [edi+0x1c5521e9],1
  412daf:	js     0x412e0e
  412db1:	aaa    
  412db2:	ret    0x8b69
  412db5:	out    0x82,al
  412db7:	sar    esi,1
  412db9:	fld    st(3)
  412dbb:	mov    edi,0x6dfc5665
  412dc0:	or     al,0xc9
  412dc2:	(bad)  
  412dc3:	mov    WORD PTR [ebp+esi*8+0x12],cs
  412dc7:	retf   0xd554
  412dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dcb:	cmp    edi,DWORD PTR [ecx+ecx*4-0x7b]
  412dcf:	fmul   st,st(3)
  412dd1:	mov    ?,WORD PTR [ecx-0x321a8a4b]
  412dd7:	pop    ecx
  412dd8:	fs push ebx
  412dda:	sbb    dh,BYTE PTR [edx+edx*8]
  412ddd:	mov    esp,0xc35d6e32
  412de2:	outs   dx,DWORD PTR ds:[esi]
  412de3:	sbb    BYTE PTR ds:[edi-0x7c],bl
  412de7:	jmp    0x412e16
  412de9:	out    dx,al
  412dea:	aam    0xbd
  412dec:	push   esi
  412ded:	hlt    
  412dee:	cld    
  412def:	xchg   ebp,eax
  412df0:	pop    ebp
  412df1:	(bad)  
  412df2:	push   ebp
  412df3:	sbb    ch,BYTE PTR [ebx-0x74dae439]
  412df9:	jae    0x412d9c
  412dfb:	mov    ds:0x248bac6d,al
  412e00:	ins    DWORD PTR es:[edi],dx
  412e01:	pop    esp
  412e02:	mov    eax,0xcbfdb
  412e07:	jmp    0xc5d1471a
  412e0c:	inc    edi
  412e0d:	hlt    
  412e0e:	and    eax,0xca7e6f05
  412e13:	nop
  412e14:	mov    dh,BYTE PTR [edi+0x14]
  412e17:	ja     0x412e40
  412e19:	outs   dx,BYTE PTR ds:[esi]
  412e1a:	pop    ds
  412e1b:	sbb    DWORD PTR [edx+0x332bcf6b],esp
  412e21:	push   0xffffffbc
  412e23:	jnp    0x412e3d
  412e25:	je     0x412deb
  412e27:	bound  ebx,QWORD PTR [ebp+0x39b94892]
  412e2d:	push   ebp
  412e2e:	xchg   edx,eax
  412e2f:	std    
  412e30:	out    0x82,eax
  412e32:	push   0xc
  412e34:	xlat   BYTE PTR ds:[ebx]
  412e35:	jb     0x412e1c
  412e37:	inc    eax
  412e38:	dec    ecx
  412e39:	pop    esp
  412e3a:	lahf   
  412e3b:	call   0x36a0d483
  412e40:	std    
  412e41:	inc    esi
  412e42:	pop    edx
  412e43:	xchg   DWORD PTR [edx+0x4c01adce],esp
  412e49:	leave  
  412e4a:	fdiv   QWORD PTR ds:0x1f8cce14
  412e50:	nop
  412e51:	push   ds
  412e52:	fild   QWORD PTR [eax+0x3b]
  412e55:	xchg   edi,eax
  412e56:	jmp    0x412ecf
  412e58:	xchg   esp,eax
  412e59:	lahf   
  412e5a:	pop    esi
  412e5b:	dec    ecx
  412e5c:	sbb    BYTE PTR [esi],0xf1
  412e5f:	pop    ecx
  412e60:	je     0x412e46
  412e62:	sub    eax,0x5d9d3963
  412e67:	adc    edx,DWORD PTR ds:0x7e8116a9
  412e6d:	ror    DWORD PTR [edx+0x61a52b33],0x27
  412e74:	es push ecx
  412e76:	iret   
  412e77:	test   eax,0xebf8e7e7
  412e7c:	popa   
  412e7d:	dec    edi
  412e7e:	mov    cs,WORD PTR [eax+0x5d70b7d3]
  412e84:	sbb    al,0x6e
  412e86:	adc    eax,0xd787e6c0
  412e8b:	dec    esp
  412e8c:	imul   ecx,esp,0xffffffdc
  412e8f:	(bad)  
  412e90:	out    0xf9,al
  412e92:	xchg   ebx,eax
  412e93:	sbb    ah,BYTE PTR [edi-0x64]
  412e96:	ret    0x8040
  412e99:	jle    0x412e83
  412e9b:	mov    dl,0xe8
  412e9d:	fs push eax
  412e9f:	adc    esp,edi
  412ea1:	dec    ebx
  412ea2:	mov    bl,0x84
  412ea4:	(bad)  
  412ea5:	push   esp
  412ea6:	das    
  412ea7:	daa    
  412ea8:	xor    DWORD PTR ds:0xae71c70b,esi
  412eae:	lahf   
  412eaf:	and    al,0xf0
  412eb1:	xor    al,BYTE PTR [ebp+0x2f]
  412eb4:	pop    ds
  412eb5:	mov    bl,0x94
  412eb7:	and    dh,BYTE PTR [esi]
  412eb9:	push   es
  412eba:	in     eax,0xeb
  412ebc:	ss jnp 0x412e4c
  412ebf:	inc    edi
  412ec0:	inc    ecx
  412ec1:	fidiv  DWORD PTR [edi-0x3]
  412ec4:	adc    eax,esi
  412ec6:	rol    BYTE PTR [ebx+0x639dcf53],0x38
  412ecd:	call   0xe80bb6ac
  412ed2:	jmp    0x412f4f
  412ed4:	lahf   
  412ed5:	inc    esp
  412ed6:	ret    0x2f0
  412ed9:	pop    ebx
  412eda:	jp     0x412ebc
  412edc:	jp     0x412ef4
  412ede:	dec    ebx
  412edf:	scas   al,BYTE PTR es:[edi]
  412ee0:	and    BYTE PTR [edi],ch
  412ee2:	xchg   edi,eax
  412ee3:	ins    DWORD PTR es:[edi],dx
  412ee4:	push   edi
  412ee5:	jp     0x412e84
  412ee7:	push   0x266db2b9
  412eec:	int    0xe6
  412eee:	push   0x506bc258
  412ef3:	push   ebp
  412ef4:	rcr    eax,1
  412ef6:	mov    bh,0x44
  412ef8:	xor    DWORD PTR [ebx+eiz*1],eax
  412efb:	rcl    esi,cl
  412efd:	aas    
  412efe:	ins    DWORD PTR es:[edi],dx
  412eff:	lods   eax,DWORD PTR ds:[esi]
  412f00:	jno    0x412f01
  412f02:	lods   eax,DWORD PTR ds:[esi]
  412f03:	adc    al,0x2a
  412f05:	inc    edi
  412f06:	dec    edi
  412f07:	xchg   ecx,eax
  412f08:	sti    
  412f09:	mov    edx,0xe78118cb
  412f0e:	xor    BYTE PTR [edx-0x1b60e762],ch
  412f14:	and    al,0xb6
  412f16:	xchg   esp,eax
  412f17:	jae    0x412f0f
  412f19:	sbb    al,0x11
  412f1b:	mov    bh,0x90
  412f1d:	inc    eax
  412f1e:	fcom   DWORD PTR [edx+0x1f]
  412f21:	mov    bl,0x77
  412f23:	ins    BYTE PTR es:[edi],dx
  412f24:	cmp    ebp,edi
  412f26:	daa    
  412f27:	inc    edx
  412f28:	push   ebp
  412f29:	mov    edi,0xbd662fcd
  412f2e:	fbld   TBYTE PTR [esi-0x53]
  412f31:	jo     0x412f9d
  412f33:	scas   eax,DWORD PTR es:[edi]
  412f34:	pusha  
  412f35:	xlat   BYTE PTR ds:[ebx]
  412f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f37:	dec    edx
  412f38:	cmp    ebx,edx
  412f3a:	pop    edi
  412f3b:	pop    edi
  412f3c:	mov    dl,al
  412f3e:	lahf   
  412f3f:	jbe    0x412f84
  412f41:	jge    0x412f9b
  412f43:	xor    dh,bl
  412f45:	loopne 0x412ecc
  412f47:	xchg   DWORD PTR [ecx],edi
  412f49:	mov    ds:0xd1cb286a,eax
  412f4e:	pop    edx
  412f4f:	cs push edi
  412f51:	pop    esp
  412f52:	xchg   ebp,eax
  412f53:	leave  
  412f54:	inc    edi
  412f55:	mov    eax,ds:0xb010ee3e
  412f5a:	adc    BYTE PTR [esi-0x4c],dh
  412f5d:	scas   al,BYTE PTR es:[edi]
  412f5e:	and    al,dh
  412f60:	es std 
  412f62:	xchg   ebp,eax
  412f63:	dec    eax
  412f64:	xchg   esi,eax
  412f65:	mov    BYTE PTR [edx+eiz*8+0x78],ch
  412f69:	add    dl,BYTE PTR [edi]
  412f6b:	push   ecx
  412f6c:	pop    ecx
  412f6d:	jbe    0x412ef6
  412f6f:	mov    dh,0xe6
  412f71:	rcr    ebp,cl
  412f73:	pop    edx
  412f74:	or     BYTE PTR [esi-0x2eb3c95a],ch
  412f7a:	xchg   esp,eax
  412f7b:	stos   DWORD PTR es:[edi],eax
  412f7c:	and    ah,0xed
  412f7f:	(bad)  
  412f80:	dec    edx
  412f81:	sbb    DWORD PTR [edi-0x3b],edi
  412f84:	mov    eax,db2
  412f87:	push   ebx
  412f88:	clc    
  412f89:	lods   eax,DWORD PTR ds:[esi]
  412f8a:	jp     0x412f9b
  412f8c:	jmp    0x281c:0xf33b6363
  412f93:	call   0x8abb:0x825f60a0
  412f9a:	mov    bl,cl
  412f9c:	mov    ds:0x55cbe89,eax
  412fa1:	mov    cl,0x80
  412fa3:	jle    0x412fde
  412fa5:	in     eax,0xdc
  412fa7:	dec    edi
  412fa8:	mov    ecx,DWORD PTR [ebx-0x25]
  412fab:	adc    dh,BYTE PTR [edx+0x20b26b67]
  412fb1:	ret    0x57e2
  412fb4:	fadd   QWORD PTR [ebp-0x7d]
  412fb7:	mov    eax,ds:0x589f0083
  412fbc:	aam    0x47
  412fbe:	cwde   
  412fbf:	and    al,0x79
  412fc1:	sbb    DWORD PTR [ecx],ebp
  412fc3:	mov    WORD PTR [ebp-0x2c],ds
  412fc6:	rcl    esi,1
  412fc8:	push   ebp
  412fc9:	je     0x412f4b
  412fcb:	xchg   esp,eax
  412fcc:	sbb    BYTE PTR [ecx-0x539b1de1],bl
  412fd2:	mov    WORD PTR [esi],ss
  412fd4:	xchg   ebp,eax
  412fd5:	outs   dx,DWORD PTR ds:[esi]
  412fd6:	sbb    al,0xc
  412fd8:	mov    ds:0x877bb339,eax
  412fdd:	aad    0x91
  412fdf:	les    ebp,FWORD PTR [esi]
  412fe1:	push   edi
  412fe2:	dec    edx
  412fe3:	or     eax,0xddbcc675
  412fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fe9:	jmp    DWORD PTR [ebx]
  412feb:	or     ah,al
  412fed:	inc    ebp
  412fee:	int    0xb3
  412ff0:	pushf  
  412ff1:	popf   
  412ff2:	mov    bh,0x6a
  412ff4:	outs   dx,BYTE PTR ds:[esi]
  412ff5:	sbb    esp,eax
  412ff7:	and    ebx,DWORD PTR [ecx]
  412ff9:	or     al,0x4e
  412ffb:	stos   DWORD PTR es:[edi],eax
  412ffc:	(bad)  
  412ffd:	mov    ch,0xfa
  412fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413000:	and    esp,edx
  413002:	test   eax,0x289f6e6a
  413007:	mov    dl,BYTE PTR [ecx]
  413009:	jns    0x412f90
  41300b:	add    ah,BYTE PTR ds:0xe6751c80
  413011:	(bad)  
  413012:	sub    al,0xc9
  413014:	cwde   
  413015:	jno    0x413049
  413017:	mov    eax,0x5f12c079
  41301c:	(bad)  
  41301e:	dec    ebp
  41301f:	test   BYTE PTR [ebx*1-0x32d3b90],0x58
  413027:	loopne 0x41304a
  413029:	loop   0x412fee
  41302b:	fs xchg esp,eax
  41302d:	cmp    BYTE PTR [esi-0x7d80e81e],dh
  413033:	or     al,0x1c
  413035:	pop    edx
  413036:	cwde   
  413037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413038:	mov    edx,0x6f04a638
  41303d:	pop    esp
  41303e:	sbb    al,0x86
  413040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413041:	bound  edx,QWORD PTR [edi-0x78]
  413044:	(bad)  [ecx]
  413046:	mov    eax,esi
  413048:	add    dh,BYTE PTR [bp-0x10]
  41304c:	pop    DWORD PTR ss:[edi+0x6]
  413050:	xchg   edi,eax
  413051:	cmp    eax,0x66f0330e
  413056:	pop    ss
  413057:	cmp    eax,0x4f91790b
  41305c:	ja     0x4130b4
  41305e:	mov    edx,0x2606bb6b
  413063:	mov    ah,0x73
  413065:	scas   al,BYTE PTR es:[edi]
  413066:	ja     0x41300f
  413068:	push   ebx
  413069:	fldl2e 
  41306b:	lods   eax,DWORD PTR ds:[esi]
  41306c:	mov    DWORD PTR [ebp-0x21],ebx
  41306f:	lahf   
  413070:	sbb    DWORD PTR [esi],edx
  413072:	fcomp  QWORD PTR [ebp-0x8]
  413075:	fmul   DWORD PTR [eax-0x6c]
  413078:	lods   al,BYTE PTR ds:[esi]
  413079:	std    
  41307a:	push   edx
  41307b:	sbb    eax,0x36277cbb
  413080:	add    ebx,DWORD PTR [eax-0x6844e8c6]
  413086:	xchg   edx,eax
  413087:	stc    
  413088:	ins    DWORD PTR es:[edi],dx
  413089:	out    dx,al
  41308a:	push   eax
  41308b:	test   DWORD PTR [ebx-0x63ff56],ebx
  413091:	xchg   ebp,eax
  413092:	dec    esp
  413093:	ins    DWORD PTR es:[edi],dx
  413094:	and    ah,cl
  413096:	mov    ds:0x3e2cc19b,eax
  41309b:	adc    cl,BYTE PTR [esi]
  41309d:	iret   
  41309e:	inc    edi
  41309f:	fisttp WORD PTR [ecx]
  4130a1:	inc    esp
  4130a2:	loope  0x4130a2
  4130a4:	or     dl,BYTE PTR [eax]
  4130a6:	std    
  4130a7:	js     0x4130de
  4130a9:	(bad)  
  4130aa:	sbb    DWORD PTR [edx+0x3a],edi
  4130ad:	pop    esi
  4130ae:	mov    ebx,0xfae37606
  4130b3:	imul   edx,DWORD PTR [ebx+0x5fbcc38d],0x6e
  4130ba:	jnp    0x4130cc
  4130bc:	pusha  
  4130bd:	or     ecx,ebx
  4130bf:	ins    DWORD PTR es:[edi],dx
  4130c0:	cmp    BYTE PTR [ebx],al
  4130c2:	inc    ebx
  4130c3:	test   eax,0xaea4feec
  4130c8:	sti    
  4130c9:	scas   al,BYTE PTR es:[edi]
  4130ca:	or     edx,DWORD PTR ds:[ebp-0x61bf4bf4]
  4130d1:	add    esi,eax
  4130d3:	adc    dl,BYTE PTR [esp+ecx*2]
  4130d6:	sar    ecx,cl
  4130d8:	jae    0x41307f
  4130da:	stc    
  4130db:	daa    
  4130dc:	retf   
  4130dd:	adc    DWORD PTR ds:0xebd4886f,edi
  4130e3:	bound  ecx,QWORD PTR [edi+0x607e5884]
  4130e9:	shl    BYTE PTR [eax-0x54],cl
  4130ec:	(bad)  
  4130ed:	adc    edx,DWORD PTR [eax+0x53]
  4130f0:	add    bl,dh
  4130f2:	out    0x2c,eax
  4130f4:	aaa    
  4130f5:	cwde   
  4130f6:	push   ebx
  4130f7:	ins    DWORD PTR es:[edi],dx
  4130f8:	ret    0x2bce
  4130fb:	or     ecx,edx
  4130fd:	mov    cl,0x89
  4130ff:	push   esi
  413100:	(bad)  
  413102:	pop    ss
  413103:	cmp    edx,DWORD PTR [esi+0x5962324]
  413109:	and    al,0x9a
  41310b:	jge    0x413155
  41310d:	xor    ah,BYTE PTR ds:0x9389514e
  413113:	fnstsw WORD PTR [edi-0x20806b85]
  413119:	hlt    
  41311a:	pop    ss
  41311b:	cwde   
  41311c:	outs   dx,DWORD PTR ds:[esi]
  41311d:	pop    edi
  41311e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311f:	popf   
  413120:	add    BYTE PTR [ebp+0x41],bl
  413123:	xchg   edi,eax
  413124:	aad    0x81
  413126:	xchg   esp,eax
  413127:	pop    esp
  413128:	in     eax,dx
  413129:	mov    ch,0x75
  41312b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41312c:	ins    BYTE PTR es:[edi],dx
  41312d:	out    0xad,al
  41312f:	sbb    al,0x24
  413131:	out    0x8b,al
  413133:	mov    eax,ebx
  413135:	and    ebx,DWORD PTR [edi-0x3e7c7d5e]
  41313b:	jl     0x4130ec
  41313d:	jbe    0x413184
  41313f:	or     ebx,DWORD PTR [edx-0x4b858060]
  413145:	mov    ah,0x8e
  413147:	pop    edx
  413148:	leave  
  413149:	pusha  
  41314a:	mov    bh,0x7f
  41314c:	dec    ebx
  41314d:	test   eax,0xb30890db
  413152:	mov    ebp,0xec47b96
  413157:	xchg   ebp,eax
  413158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413159:	jecxz  0x4130f9
  41315b:	js     0x41312e
  41315d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41315e:	jne    0x413101
  413160:	aad    0x3f
  413162:	or     dh,ch
  413164:	loop   0x4130f5
  413166:	test   bl,cl
  413168:	or     al,0xa7
  41316a:	retf   
  41316b:	jp     0x4131b8
  41316d:	inc    edi
  41316e:	es mov dh,0xed
  413171:	xor    al,0xf8
  413173:	pop    ss
  413174:	or     DWORD PTR [edx-0x74],eax
  413177:	cmp    dh,bl
  413179:	js     0x4131c1
  41317b:	test   al,0x45
  41317d:	mov    BYTE PTR [ebx-0x7b4774ef],0x7a
  413184:	cld    
  413185:	pop    es
  413186:	into   
  413187:	xchg   ebp,eax
  413188:	pop    edi
  413189:	iret   
  41318a:	rol    BYTE PTR ds:0x8c00da81,1
  413190:	push   ebx
  413191:	in     eax,dx
  413192:	lods   eax,DWORD PTR ds:[esi]
  413193:	in     eax,0xe3
  413195:	push   edx
  413196:	sub    ch,al
  413198:	enter  0x5fcf,0x97
  41319c:	and    al,BYTE PTR [ecx-0x7b2aef87]
  4131a2:	mov    edx,0x1ffcaee6
  4131a7:	or     eax,0x2492ede3
  4131ad:	cmp    bh,BYTE PTR [esi-0x14]
  4131b0:	dec    DWORD PTR [ebx+0x12404cfb]
  4131b6:	sub    DWORD PTR [ecx],0xffffff83
  4131b9:	cmp    dh,ah
  4131bb:	test   eax,0x1a039f37
  4131c0:	mov    DWORD PTR [edi-0x55],ecx
  4131c3:	lea    esi,[edx-0x6d6a60da]
  4131c9:	sub    edx,edi
  4131cb:	add    ch,BYTE PTR [eax]
  4131cd:	inc    ebx
  4131ce:	cmp    BYTE PTR [edx],al
  4131d0:	fnstcw WORD PTR [eax+0x47]
  4131d3:	cmc    
  4131d4:	xchg   ebx,eax
  4131d5:	mov    ecx,0x7987661a
  4131da:	jg     0x413254
  4131dc:	clc    
  4131dd:	mov    bh,0x4
  4131df:	leave  
  4131e0:	fsubr  QWORD PTR [edx-0x62]
  4131e3:	icebp  
  4131e4:	retf   
  4131e5:	aaa    
  4131e6:	mov    DWORD PTR [ebx],ecx
  4131e8:	or     edx,ebx
  4131ea:	xchg   ebx,eax
  4131eb:	test   DWORD PTR [edx-0x62],edx
  4131ee:	sub    bl,ah
  4131f0:	dec    esp
  4131f1:	int3   
  4131f2:	jge    0x413272
  4131f4:	jp     0x41319c
  4131f6:	push   ds
  4131f7:	test   DWORD PTR [eax-0x799a7240],ebx
  4131fd:	ror    al,0x9b
  413200:	(bad)  
  413201:	pop    ds
  413202:	addr16 int3 
  413204:	inc    esp
  413205:	mov    bl,0x85
  413207:	repnz and eax,DWORD PTR [esi]
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	inc    eax
  41320c:	jo     0x4131e1
  41320e:	sub    DWORD PTR [ecx-0x3391ab5f],edi
  413214:	dec    esi
  413215:	(bad)  
  413217:	dec    ebp
  413218:	cs popa 
  41321a:	call   0xc7bdfbc2
  41321f:	push   cs
  413220:	fmulp  st(5),st
  413222:	push   eax
  413223:	push   ecx
  413224:	push   cs
  413225:	push   ecx
  413226:	dec    esi
  413227:	jl     0x413291
  413229:	ror    BYTE PTR [eax+0x6a],cl
  41322c:	dec    eax
  41322d:	adc    esp,ebp
  41322f:	jmp    0x2ac1:0x1ee1d358
  413236:	out    dx,eax
  413237:	sbb    DWORD PTR ss:[eax+edx*2+0x5abe9b20],edx
  41323f:	dec    edi
  413240:	jge    0x413295
  413242:	jmp    0x41328e
  413244:	pop    edx
  413245:	cld    
  413246:	mov    ch,0x4c
  413248:	xchg   esp,eax
  413249:	sub    eax,0x1f308b66
  41324e:	into   
  41324f:	ret    
  413250:	add    DWORD PTR [esi-0x40],edx
  413253:	xor    BYTE PTR [ecx],dh
  413255:	(bad)  
  413256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413257:	and    DWORD PTR [edi-0x2c0cbd8d],0xffffffee
  41325e:	js     0x413203
  413260:	mov    esp,0x4e14e0e4
  413265:	arpl   WORD PTR [eax-0x70f35a1d],si
  41326b:	das    
  41326c:	sub    al,0xae
  41326e:	lods   al,BYTE PTR ds:[esi]
  41326f:	push   esi
  413271:	in     eax,0xa3
  413273:	enter  0xbabc,0x95
  413277:	not    BYTE PTR [esi+ebp*2]
  41327a:	in     al,dx
  41327b:	lds    ecx,FWORD PTR [edi-0x36]
  41327e:	rcl    BYTE PTR [esi],cl
  413280:	sti    
  413281:	mov    edi,ss
  413283:	or     eax,0x5a31593
  413288:	fs shr ebp,0x42
  41328c:	sub    bl,BYTE PTR [edi+eax*1+0x134bfea2]
  413293:	xchg   edx,eax
  413294:	xchg   ebp,eax
  413295:	mov    esi,0xf7a3b292
  41329a:	cmp    eax,0xc037883f
  41329f:	pop    esi
  4132a0:	jbe    0x4132af
  4132a2:	leave  
  4132a3:	retf   0xd812
  4132a6:	inc    edi
  4132a7:	rcl    esp,1
  4132a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132aa:	push   ebx
  4132ab:	imul   esp,esp,0x17
  4132ae:	fiadd  DWORD PTR [ebp-0x5c]
  4132b1:	jg     0x41327e
  4132b3:	and    DWORD PTR [ebx-0x80],0xffffffcc
  4132b7:	and    bh,BYTE PTR [ecx-0x633ae98a]
  4132bd:	inc    eax
  4132be:	aad    0x27
  4132c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132c1:	pusha  
  4132c2:	push   es
  4132c3:	div    al
  4132c5:	cmp    al,0xa4
  4132c7:	add    esi,0xffffffcf
  4132ca:	inc    esp
  4132cb:	jb     0x41327b
  4132cd:	pop    ss
  4132ce:	sbb    ebx,DWORD PTR [esi+0x37ec755]
  4132d4:	jae    0x413312
  4132d6:	in     eax,0x8
  4132d8:	mov    esp,0x6fc00a80
  4132dd:	rcr    edi,0xfb
  4132e0:	and    edi,DWORD PTR [edx-0x3e821b8f]
  4132e6:	nop
  4132e7:	cs (bad) 
  4132ea:	in     al,0xf
  4132ec:	stc    
  4132ed:	retf   0xa571
  4132f0:	and    ebp,edx
  4132f2:	push   0x870e9941
  4132f7:	movntq QWORD PTR [esi+0xfdb90e7],mm6
  4132fe:	xor    eax,ecx
  413300:	lds    esi,FWORD PTR [edi+eiz*4]
  413303:	hlt    
  413304:	and    eax,ebp
  413306:	mov    edi,0x23f1cfa6
  41330b:	dec    edi
  41330c:	out    0xfe,eax
  41330e:	push   esi
  41330f:	scas   eax,DWORD PTR es:[edi]
  413310:	add    DWORD PTR [eax+0x3e],0xcabca7e2
  413317:	adc    BYTE PTR [ebx],bh
  413319:	inc    esp
  41331a:	sub    al,0x13
  41331c:	push   ecx
  41331d:	adc    ch,BYTE PTR [esi]
  41331f:	add    BYTE PTR [edi],al
  413321:	jl     0x41334d
  413323:	idiv   edi
  413325:	and    eax,0x8f0def54
  41332a:	leave  
  41332b:	push   ebp
  41332c:	fsubrp st(3),st
  41332e:	std    
  41332f:	and    cl,dl
  413331:	sub    eax,0x3a8eb91c
  413336:	mov    ebx,0x3363021
  41333b:	lds    ebx,FWORD PTR [ecx]
  41333d:	sub    ebp,ebx
  41333f:	pop    ebp
  413340:	clc    
  413341:	into   
  413342:	mov    ch,BYTE PTR ds:0xaef9d918
  413348:	aaa    
  413349:	pushf  
  41334a:	dec    ecx
  41334b:	inc    eax
  41334c:	or     BYTE PTR [ebp+0x3d4fe43d],0x63
  413353:	fild   QWORD PTR [edx+0x339ddb5f]
  413359:	xor    BYTE PTR [ecx-0x1a2ef741],ah
  41335f:	scas   al,BYTE PTR es:[edi]
  413360:	sbb    esp,DWORD PTR [eax+0x3d]
  413363:	scas   eax,DWORD PTR es:[edi]
  413364:	cs mov dl,0x95
  413367:	dec    DWORD PTR [edi+0xf8a748e]
  41336d:	mov    bl,0xff
  41336f:	rol    BYTE PTR [edx+0x5c300ece],1
  413375:	imul   ebp,DWORD PTR [ebp+0x28],0x5e7cf947
  41337c:	mov    dl,0x2
  41337e:	test   DWORD PTR ds:0x82811ffa,0x4a9fd11e
  413388:	pop    ebx
  413389:	mov    bl,0x6b
  41338b:	jp     0x41330e
  41338d:	retf   
  41338e:	sbb    BYTE PTR [eax],0xd3
  413391:	cmp    ebx,edi
  413393:	popa   
  413394:	call   0xd8de:0x39d912fe
  41339b:	ja     0x41335b
  41339d:	hlt    
  41339e:	sub    BYTE PTR [ecx],0x86
  4133a1:	cld    
  4133a2:	adc    dl,BYTE PTR [esp+ecx*4-0x66e15890]
  4133a9:	loope  0x413384
  4133ab:	fwait
  4133ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ad:	dec    ebp
  4133ae:	jo     0x413332
  4133b0:	push   ebp
  4133b1:	hlt    
  4133b2:	cmp    eax,0x1130eb02
  4133b7:	pop    es
  4133b8:	jno    0x41337d
  4133ba:	mov    ds:0xbf54021a,eax
  4133bf:	cld    
  4133c0:	data16 loopne 0x4133ff
  4133c3:	xor    ebp,DWORD PTR ds:0xd46654ef
  4133c9:	push   es
  4133ca:	aad    0xd7
  4133cc:	dec    BYTE PTR [edi+0x4c3c3b9a]
  4133d2:	lds    eax,FWORD PTR [esi+ecx*1]
  4133d5:	pop    eax
  4133d6:	(bad)  
  4133d7:	pop    ebp
  4133d8:	loop   0x413416
  4133da:	int    0x92
  4133dc:	ss and al,0x69
  4133df:	jmp    0x4133d8
  4133e1:	pop    ds
  4133e2:	fwait
  4133e3:	mov    eax,ds:0xabe2612c
  4133e8:	add    al,0x77
  4133ea:	imul   ebx,ebp,0xad17c19f
  4133f0:	jns    0x41338a
  4133f2:	push   eax
  4133f3:	cmp    dh,BYTE PTR [ecx+ebp*8+0x7d33f84e]
  4133fa:	jge    0x4133dc
  4133fc:	push   esp
  4133fd:	leave  
  4133fe:	div    DWORD PTR [ebx-0x40b37c7e]
  413404:	mov    esp,esi
  413406:	out    0x9b,eax
  413408:	pop    esi
  413409:	std    
  41340a:	add    eax,0x3428b5c6
  41340f:	mov    cl,0x7d
  413411:	add    edx,DWORD PTR [edi+0x28c9c18f]
  413417:	sbb    al,ch
  413419:	bound  edx,QWORD PTR [ebx+edx*8-0x208a9d4c]
  413420:	dec    ebp
  413421:	daa    
  413422:	adc    dh,BYTE PTR [esi]
  413424:	xor    eax,0xd48b5435
  413429:	int3   
  41342a:	cwde   
  41342b:	out    0xc9,al
  41342d:	nop
  41342e:	jmp    0xa2876a8c
  413433:	hlt    
  413434:	jb     0x413472
  413436:	mov    al,al
  413438:	aas    
  413439:	nop
  41343a:	inc    esi
  41343b:	test   BYTE PTR ds:0xece6488d,0xc2
  413442:	outs   dx,DWORD PTR ds:[esi]
  413443:	dec    eax
  413444:	sub    eax,0x92ecaa3a
  413449:	inc    eax
  41344a:	outs   dx,DWORD PTR ds:[esi]
  41344b:	mov    ah,0xdc
  41344d:	or     eax,0xa76664da
  413452:	cwde   
  413453:	dec    eax
  413454:	scas   al,BYTE PTR es:[edi]
  413455:	push   ss
  413456:	dec    esp
  413457:	mov    cl,0xe4
  413459:	or     edx,DWORD PTR [edx+0x2c]
  41345c:	inc    ebp
  41345d:	out    dx,al
  41345e:	mov    gs,WORD PTR [edx]
  413460:	mov    esp,0xc63eaf8b
  413465:	(bad)  
  413466:	cmp    al,BYTE PTR [ecx-0x2c92d483]
  41346c:	mov    eax,DWORD PTR [eax+0x3d]
  41346f:	stos   BYTE PTR es:[edi],al
  413470:	popf   
  413471:	adc    ch,dh
  413473:	mov    dl,0x8d
  413475:	ss daa 
  413477:	adc    eax,0x2eb6dd31
  41347c:	dec    ebx
  41347d:	mov    dh,0xd5
  41347f:	fisttp DWORD PTR [ebp-0x4f]
  413482:	cld    
  413483:	jmp    0x4134f6
  413485:	or     eax,0x80c6b3ea
  41348a:	xor    BYTE PTR [eax],al
  41348c:	xchg   esp,ebx
  41348e:	add    al,0x2a
  413490:	xchg   esp,eax
  413491:	in     al,dx
  413492:	push   edi
  413493:	cmp    al,0x92
  413496:	jne    0x413422
  413498:	add    eax,0x5d30e32a
  41349d:	into   
  41349e:	icebp  
  41349f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134a0:	pop    ebx
  4134a1:	sub    ebp,DWORD PTR [edi-0x29cb0b8f]
  4134a7:	dec    ebx
  4134a8:	out    0xa9,al
  4134aa:	(bad)  [ecx]
  4134ac:	iret   
  4134ad:	lock add BYTE PTR es:[esi-0xa9e301a],cl
  4134b5:	repz aas 
  4134b7:	enter  0x27ab,0xec
  4134bb:	(bad)  
  4134bc:	and    eax,0xe5123764
  4134c1:	xchg   edx,eax
  4134c2:	xor    dl,ch
  4134c4:	push   0xfa58b38f
  4134c9:	mov    BYTE PTR [ecx+0x1c2bd0c8],0xd1
  4134d0:	sbb    eax,0xa2ac58ee
  4134d5:	repnz mov DWORD PTR [ecx+0x6da32615],ebx
  4134dc:	int    0x98
  4134de:	mov    edx,0xbdd2e46
  4134e3:	push   ebp
  4134e4:	stos   DWORD PTR es:[edi],eax
  4134e5:	loope  0x413564
  4134e7:	(bad)  
  4134e8:	adc    BYTE PTR [ebp-0x4],bh
  4134eb:	in     al,0x4
  4134ed:	sbb    BYTE PTR [ebp-0x31],bl
  4134f0:	jg     0x4134d7
  4134f2:	pop    ecx
  4134f3:	inc    esp
  4134f4:	addr16 push 0x11c7df75
  4134fa:	push   edx
  4134fb:	inc    esi
  4134fc:	retf   0x36ef
  4134ff:	rcl    BYTE PTR [eax-0x2ebcdad0],cl
  413505:	fcom   DWORD PTR [ebx+0x48]
  413508:	sti    
  413509:	jne    0x413548
  41350b:	cld    
  41350c:	push   edi
  41350d:	adc    eax,0xbdcb7ce4
  413512:	push   ebp
  413513:	dec    eax
  413514:	fucomip st,st(0)
  413516:	int3   
  413517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413518:	jge    0x4134ef
  41351a:	push   ds
  41351b:	(bad)  
  41351c:	punpckhdq mm1,mm6
  41351f:	cld    
  413520:	mov    esi,0x9c0ab970
  413525:	xor    al,0x2
  413527:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413529:	ins    DWORD PTR es:[edi],dx
  41352a:	call   0x35f291dc
  41352f:	fwait
  413530:	div    bh
  413532:	pop    edx
  413533:	shl    BYTE PTR [esp+eiz*4+0x7580d7e4],1
  41353a:	sahf   
  41353b:	test   DWORD PTR [ebp-0x2a64994e],eax
  413541:	ret    0x5ed9
  413544:	(bad)  
  413545:	ds in  eax,dx
  413547:	repnz sub bl,BYTE PTR [ebx]
  41354a:	adc    eax,0xd5f156c4
  41354f:	adc    DWORD PTR [esi-0x62],esi
  413552:	enter  0x6c20,0x2e
  413556:	or     ah,BYTE PTR [ecx]
  413558:	and    al,BYTE PTR [ebx-0x56ebb1e9]
  41355e:	cmp    DWORD PTR [ebx],edx
  413560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413561:	jg     0x41352c
  413563:	lahf   
  413564:	out    dx,eax
  413565:	dec    ebx
  413566:	lods   al,BYTE PTR ds:[esi]
  413567:	lods   al,BYTE PTR ds:[esi]
  413568:	call   DWORD PTR [esi]
  41356a:	not    BYTE PTR [eax-0x5ebaf761]
  413570:	outs   dx,BYTE PTR ds:[esi]
  413571:	(bad)  
  413572:	mov    eax,DWORD PTR [ebx]
  413574:	mov    al,0x1a
  413576:	push   ds
  413577:	icebp  
  413578:	inc    edx
  413579:	mov    ebp,0xe582e800
  41357e:	imul   ecx,DWORD PTR [ecx],0xb99c0e7b
  413584:	das    
  413585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413586:	sbb    BYTE PTR [esi+ecx*8-0x49],cl
  41358a:	xor    cl,BYTE PTR [edx-0x515d53b8]
  413590:	inc    ecx
  413591:	pop    es
  413592:	xchg   DWORD PTR [edi+eiz*8+0x4dc86e80],ebx
  413599:	jo     0x41352a
  41359b:	test   edi,edx
  41359d:	and    eax,0x5b5aa8a8
  4135a2:	cmp    bh,ch
  4135a4:	push   ebp
  4135a5:	add    al,BYTE PTR [ecx]
  4135a7:	push   edx
  4135a8:	add    eax,0xda018829
  4135ad:	test   BYTE PTR [ecx],0x64
  4135b0:	cmp    DWORD PTR [edx],edx
  4135b2:	loopne 0x413572
  4135b4:	mov    ch,0x62
  4135b6:	sti    
  4135b7:	xchg   DWORD PTR [ebx],ecx
  4135b9:	adc    eax,0x21da453f
  4135be:	fs cli 
  4135c0:	mov    bh,dh
  4135c2:	pop    ds
  4135c3:	push   cs
  4135c4:	test   ecx,edi
  4135c6:	mov    ah,0x6f
  4135c8:	mov    es,WORD PTR [ecx-0x4a001312]
  4135ce:	loopne 0x41356f
  4135d0:	in     al,dx
  4135d1:	add    eax,0xd3364e5
  4135d6:	xchg   esp,eax
  4135d7:	aam    0x20
  4135d9:	lods   eax,DWORD PTR ds:[esi]
  4135da:	jl     0x413602
  4135dc:	int    0x71
  4135de:	pop    es
  4135df:	adc    ebx,DWORD PTR [edi-0x52]
  4135e2:	or     ebp,edx
  4135e4:	outs   dx,DWORD PTR ds:[esi]
  4135e5:	out    dx,eax
  4135e6:	out    0x55,al
  4135e8:	and    esi,edi
  4135ea:	or     cl,bl
  4135ec:	in     eax,0x26
  4135ee:	or     BYTE PTR [ebp+0x4f5e690a],cl
  4135f4:	sbb    dh,BYTE PTR [eax+0x24]
  4135f7:	push   ds
  4135f8:	loop   0x413633
  4135fa:	jl     0x4135ef
  4135fc:	in     eax,dx
  4135fd:	xor    edi,DWORD PTR [ebx]
  4135ff:	aad    0xb
  413601:	xchg   ebp,eax
  413602:	cwde   
  413603:	adc    DWORD PTR ds:0xaeaa52d5,ebp
  413609:	mov    ds:0xb7d858f7,al
  41360e:	(bad)  
  41360f:	fcomp  QWORD PTR [esi]
  413611:	retf   0xa6d
  413614:	dec    DWORD PTR [edi+0x72a93739]
  41361a:	xor    ah,BYTE PTR [esi+0x5b]
  41361d:	and    BYTE PTR [eax+0x65],dl
  413620:	loopne 0x41360a
  413622:	cld    
  413623:	loope  0x413668
  413625:	neg    DWORD PTR [edx-0x5a]
  413628:	push   ss
  413629:	dec    eax
  41362a:	icebp  
  41362b:	pop    ss
  41362c:	out    dx,al
  41362d:	push   0x780cf478
  413632:	hlt    
  413633:	mov    esi,0x4cccd686
  413638:	aas    
  413639:	cdq    
  41363a:	jo     0x4135f0
  41363c:	cmc    
  41363d:	mov    ecx,0x515cab55
  413642:	jl     0x4135ed
  413644:	ffreep st(4)
  413646:	dec    esp
  413647:	adc    DWORD PTR [edx],eax
  413649:	les    esi,FWORD PTR [eiz*4+0x702bec11]
  413650:	pop    ds
  413651:	test   eax,0x448ef82a
  413656:	mov    eax,ds:0x4e032b75
  41365b:	hlt    
  41365c:	fiadd  WORD PTR [ecx-0x3ed02433]
  413662:	data16 xchg dl,ah
  413665:	jg     0x41360d
  413667:	cmp    DWORD PTR [eax+0x1801ecdd],edi
  41366d:	cdq    
  41366e:	mov    ecx,0x7d45ecd0
  413673:	cmp    dh,al
  413675:	jmp    0x41363d
  413677:	stc    
  413678:	retf   
  413679:	sbb    al,0x2b
  41367b:	outs   dx,DWORD PTR ds:[esi]
  41367c:	push   0x67df674e
  413681:	dec    esp
  413682:	pop    ds
  413683:	mov    esp,DWORD PTR [edx+ecx*1]
  413686:	(bad)  
  413687:	cld    
  413688:	push   ecx
  413689:	je     0x413679
  41368b:	pop    edx
  41368c:	mov    WORD PTR [eax-0x2f],ss
  41368f:	(bad)  
  413691:	mov    edx,0xd3a94119
  413696:	cwde   
  413697:	pop    eax
  413698:	mov    edx,edx
  41369a:	and    dh,bl
  41369c:	sub    dl,BYTE PTR [ecx]
  41369e:	pop    ss
  41369f:	or     DWORD PTR [edx+0x1e],edx
  4136a2:	das    
  4136a3:	out    0xdd,eax
  4136a5:	in     al,0x70
  4136a7:	push   ebp
  4136a8:	mov    ebx,0xed2b67f
  4136ad:	je     0x413706
  4136af:	mov    ebp,0xb7ea8136
  4136b4:	popf   
  4136b5:	retf   0xf897
  4136b8:	test   DWORD PTR cs:[eax-0x2a],0x69ad6551
  4136c0:	and    bh,dh
  4136c2:	shl    DWORD PTR [ebp-0x28dddcc5],0xfc
  4136c9:	sub    BYTE PTR ds:0x4eb0bbaf,bl
  4136cf:	mov    bh,0x31
  4136d1:	or     dl,ah
  4136d3:	inc    esp
  4136d4:	pop    ebx
  4136d5:	pop    es
  4136d6:	lahf   
  4136d7:	push   ebp
  4136d8:	aaa    
  4136d9:	outs   dx,BYTE PTR ds:[esi]
  4136da:	push   ds
  4136db:	lods   eax,DWORD PTR ds:[esi]
  4136dc:	jno    0x4136fd
  4136de:	outs   dx,BYTE PTR ds:[esi]
  4136df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136e0:	push   ebp
  4136e1:	sbb    eax,0x65daad48
  4136e6:	dec    ecx
  4136e7:	into   
  4136e8:	in     eax,0x69
  4136ea:	enter  0x24a9,0x5f
  4136ee:	test   al,0xf6
  4136f0:	out    0xdb,eax
  4136f2:	fidivr DWORD PTR [ecx]
  4136f4:	push   0xd872e988
  4136f9:	pop    ss
  4136fa:	mov    ebx,0xcfff5dff
  4136ff:	aaa    
  413700:	movd   mm2,ebx
  413703:	adc    esp,esp
  413705:	sub    ecx,ebp
  413707:	int    0x80
  413709:	out    dx,al
  41370a:	cmp    BYTE PTR [edx+0x6a09e92],al
  413710:	loopne 0x4136a6
  413712:	push   DWORD PTR [edi+esi*1]
  413715:	and    esp,DWORD PTR [esi-0xc]
  413718:	or     BYTE PTR [ecx+0x3c],0x30
  41371c:	sar    BYTE PTR [edx],cl
  41371e:	pop    ds
  41371f:	dec    eax
  413720:	jl     0x41371e
  413722:	pop    esi
  413723:	xchg   esi,eax
  413724:	or     al,0x13
  413726:	test   al,0x1c
  413728:	inc    ecx
  413729:	lds    edi,FWORD PTR [esp+eax*8+0x12]
  41372d:	jbe    0x41374e
  41372f:	jmp    0x6d520163
  413734:	call   0x7270:0x162990df
  41373b:	pop    esp
  41373c:	and    DWORD PTR [ebx-0x28],edx
  41373f:	test   BYTE PTR [ebx],cl
  413741:	cmp    eax,0x1f
  413744:	mov    gs,WORD PTR [ebp+eiz*8-0x6dcb656c]
  41374b:	cld    
  41374c:	dec    sp
  41374e:	xchg   esp,eax
  41374f:	xor    eax,0xde5e1427
  413754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413755:	rcl    BYTE PTR [ebx+0x6fede59],1
  41375b:	not    DWORD PTR [edx]
  41375d:	ffreep st(5)
  41375f:	mov    bl,BYTE PTR [edx+0x39697204]
  413765:	int    0xfb
  413767:	pusha  
  413768:	xchg   ebp,eax
  413769:	jmp    0xf654:0x633a8df5
  413770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413771:	jmp    0x4137b6
  413773:	xchg   ecx,eax
  413774:	push   ebx
  413775:	sub    BYTE PTR [ebp-0x5f],ch
  413778:	dec    ebx
  413779:	mov    esp,DWORD PTR [eax+0x704c4f36]
  41377f:	cmp    eax,0x7d303d10
  413784:	shl    DWORD PTR [ebx-0x24],cl
  413787:	ret    0x789
  41378a:	ret    0x2e50
  41378d:	mov    DWORD PTR [edi+0xaac5bb7],eax
  413793:	sti    
  413794:	loope  0x4137ac
  413796:	sbb    al,0x6
  413798:	femms  
  41379a:	and    BYTE PTR [edi],0x5
  41379d:	adc    BYTE PTR [ebx+0x50],ah
  4137a0:	popf   
  4137a1:	adc    esp,eax
  4137a3:	adc    ebx,DWORD PTR [ecx-0xcd794a3]
  4137a9:	idiv   BYTE PTR [esp+eiz*4+0x1001be21]
  4137b0:	mov    WORD PTR [ecx-0x3e],es
  4137b3:	xor    ch,0x22
  4137b6:	daa    
  4137b7:	daa    
  4137b8:	pop    es
  4137b9:	out    0x17,eax
  4137bb:	mul    BYTE PTR [ecx-0x16b3a4cf]
  4137c1:	add    al,BYTE PTR [eax+eiz*4]
  4137c4:	adc    bh,cl
  4137c6:	test   BYTE PTR [edi-0xf12bb01],0x6c
  4137cd:	(bad)  [ebp+0x19057e25]
  4137d3:	push   ebx
  4137d4:	int3   
  4137d5:	ins    DWORD PTR es:[edi],dx
  4137d6:	jmp    0x3477:0xfc33c595
  4137dd:	gs cmc 
  4137df:	push   ecx
  4137e0:	in     al,0x58
  4137e2:	jge    0x4137ed
  4137e4:	mov    esp,0x9a24e260
  4137e9:	leave  
  4137ea:	aas    
  4137eb:	stos   DWORD PTR es:[edi],eax
  4137ec:	xchg   ebx,eax
  4137ed:	xchg   DWORD PTR [edi],edx
  4137ef:	mov    esp,0x687b8bb2
  4137f4:	add    al,0x32
  4137f6:	jne    0x413808
  4137f8:	mov    esp,0x6a2e5761
  4137fd:	xor    esp,esi
  4137ff:	icebp  
  413800:	(bad)  [eax-0x73]
  413803:	pop    esi
  413804:	aaa    
  413805:	pop    es
  413806:	jno    0x4137cf
  413808:	aad    0x24
  41380a:	out    dx,eax
  41380b:	inc    ebx
  41380c:	inc    esp
  41380d:	or     DWORD PTR [eax],0x44
  413810:	mov    DWORD PTR [edi-0x6bfdfe17],esi
  413816:	pop    ebx
  413817:	mov    cl,BYTE PTR [edi]
  413819:	fiadd  DWORD PTR [ebp+0x20194a10]
  41381f:	ret    
  413820:	pop    ds
  413821:	outs   dx,BYTE PTR ds:[esi]
  413822:	ja     0x4137ad
  413824:	bound  esi,QWORD PTR [ebp-0x14988c6c]
  41382a:	dec    ebp
  41382b:	inc    ecx
  41382c:	xchg   edi,eax
  41382d:	xchg   ebx,eax
  41382e:	jbe    0x413858
  413830:	and    dh,BYTE PTR [ecx]
  413832:	fisttp QWORD PTR [edi-0x6c]
  413835:	add    ebx,DWORD PTR [edi-0x78]
  413838:	mov    dh,0x44
  41383a:	scas   al,BYTE PTR es:[edi]
  41383b:	inc    edx
  41383c:	jmp    0x69f:0x39f7b8d4
  413843:	mov    ecx,DWORD PTR [esi+edx*2+0x4a]
  413847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413848:	hlt    
  413849:	into   
  41384a:	imul   ebp,DWORD PTR [edx+0x1ac91cd3],0xffffffca
  413851:	cmp    bl,BYTE PTR [edi+0x3e027228]
  413857:	mov    edx,DWORD PTR [ebx]
  413859:	out    0xc5,al
  41385b:	mov    al,ds:0x4d863a53
  413860:	pop    ecx
  413861:	fs push ecx
  413863:	push   eax
  413864:	(bad)  
  413865:	cmp    eax,0xcefeafab
  41386a:	loop   0x4138d7
  41386c:	mov    BYTE PTR [ecx+eiz*4+0x714a449c],dl
  413873:	jl     0x413833
  413875:	xor    bl,BYTE PTR [esp+ebp*8]
  413878:	stc    
  413879:	lahf   
  41387a:	call   0x649f:0xbfbd5b5e
  413881:	add    BYTE PTR [ebx],al
  413883:	xor    al,0x1c
  413885:	mov    edx,DWORD PTR [ecx-0x46]
  413888:	and    al,0x2c
  41388a:	xlat   BYTE PTR ds:[ebx]
  41388b:	dec    esi
  41388c:	mov    BYTE PTR [eax+0x2b],cl
  41388f:	gs xchg esp,eax
  413891:	into   
  413892:	hlt    
  413893:	out    0x1f,al
  413895:	repz pop ds
  413897:	call   0x6a7ea278
  41389c:	xor    DWORD PTR [edx-0x74],ecx
  41389f:	in     eax,0xb2
  4138a1:	ds enter 0x417,0x10
  4138a6:	and    edx,esp
  4138a8:	xor    esi,ecx
  4138aa:	jmp    0xceb7:0x65fe4b00
  4138b1:	inc    esp
  4138b2:	jecxz  0x41387a
  4138b4:	adc    edi,DWORD PTR [ecx+0x8c51647]
  4138ba:	fistp  WORD PTR [edi-0x57]
  4138bd:	xchg   DWORD PTR [ecx+0x6eec3fe8],ecx
  4138c3:	mov    dh,0xcc
  4138c6:	fst    DWORD PTR [edx+0x1d]
  4138c9:	inc    esp
  4138ca:	mov    fs,WORD PTR [ecx+0x60]
  4138cd:	add    dh,BYTE PTR [eax+0x3c]
  4138d0:	xchg   edx,eax
  4138d1:	mov    BYTE PTR [ebp+0x34f1110d],0xb9
  4138d8:	or     BYTE PTR [edx-0x37],ch
  4138db:	sub    ch,BYTE PTR [eax-0x15]
  4138de:	imul   edi
  4138e0:	int3   
  4138e1:	in     al,0xc6
  4138e3:	stos   DWORD PTR es:[edi],eax
  4138e4:	mov    esp,0x4a0243da
  4138e9:	xlat   BYTE PTR ds:[ebx]
  4138ea:	mov    DWORD PTR [eax+0x6e02513b],ecx
  4138f0:	stos   DWORD PTR es:[edi],eax
  4138f1:	lea    edi,[eax+0x3c16440f]
  4138f7:	fdivr  st,st(4)
  4138f9:	dec    esp
  4138fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138fb:	push   ds
  4138fc:	or     BYTE PTR [edx+0x5a],0x3d
  413900:	cs xor bh,0xef
  413904:	sub    bl,BYTE PTR [eax]
  413906:	addr16 test al,0x7f
  413909:	sbb    BYTE PTR [ebp-0x218c8e78],0xe5
  413910:	mov    al,BYTE PTR [edx+0x4e642dd8]
  413916:	sub    eax,0xb07d5dbf
  41391b:	ja     0x41390a
  41391d:	pop    ebx
  41391e:	repnz and DWORD PTR [edx+0x76],eax
  413922:	or     cl,0x43
  413925:	mov    DWORD PTR [ebx+0x4b0a5df6],eax
  41392b:	inc    ebx
  41392c:	xor    BYTE PTR [ecx+0x23],ch
  41392f:	test   eax,0x2fac4ff3
  413934:	xchg   esp,eax
  413935:	out    dx,al
  413936:	push   ecx
  413937:	popf   
  413938:	or     dl,BYTE PTR [ecx+0x43]
  41393b:	xchg   ebx,eax
  41393c:	pop    edx
  41393d:	or     ch,BYTE PTR [ebx-0x5f06e6b3]
  413943:	jns    0x4139aa
  413945:	lods   eax,DWORD PTR ds:[esi]
  413946:	shr    DWORD PTR [ebp-0x2f],0xa4
  41394a:	push   edx
  41394b:	inc    esp
  41394c:	pop    edx
  41394d:	sbb    al,0xfd
  41394f:	push   esi
  413950:	xor    BYTE PTR [edi+0x182f40d5],0xcb
  413957:	lock jmp 0xf11f:0x983cff40
  41395f:	cli    
  413960:	jge    0x413967
  413962:	push   ebx
  413963:	ins    DWORD PTR es:[edi],dx
  413964:	sub    DWORD PTR [ebp-0x6470ee1b],esp
  41396a:	dec    ecx
  41396b:	pop    esp
  41396c:	and    al,0x1d
  41396e:	mov    eax,0x12634904
  413973:	mov    edi,0x9c27e97d
  413978:	lds    eax,FWORD PTR [ecx+edi*4]
  41397b:	cmp    dh,dl
  41397d:	fdiv   DWORD PTR [edx+edx*1]
  413980:	in     al,0xf1
  413982:	neg    esi
  413984:	cwde   
  413985:	jmp    0x75a30805
  41398a:	or     al,0x41
  41398c:	jmp    0x41393c
  41398e:	int3   
  41398f:	xor    al,0x4d
  413991:	cld    
  413992:	loope  0x413992
  413994:	add    esp,DWORD PTR [ebp+0x46]
  413997:	pop    ss
  413998:	lea    edx,[esp+ebp*2]
  41399b:	push   0xffffffe6
  41399d:	inc    ebx
  41399e:	xchg   ebx,eax
  41399f:	arpl   WORD PTR [esi-0x70],bx
  4139a2:	ret    
  4139a3:	fsubr  QWORD PTR [eax+0x5387cf43]
  4139a9:	(bad)
  4139ad:	push   edx
  4139ae:	add    DWORD PTR [ebx],0xffffffe2
  4139b1:	xchg   edx,eax
  4139b2:	and    al,0x4
  4139b4:	retf   
  4139b5:	popf   
  4139b6:	add    dl,BYTE PTR [ecx+esi*4-0x4d]
  4139ba:	imul   ecx,esp,0xffffffbc
  4139bd:	ret    
  4139be:	push   es
  4139bf:	test   dh,ch
  4139c1:	test   al,0xb0
  4139c3:	out    dx,al
  4139c4:	cmp    bh,BYTE PTR [edx]
  4139c6:	xchg   ebp,eax
  4139c7:	adc    dl,dl
  4139c9:	int3   
  4139ca:	(bad)  
  4139cb:	sub    edi,ecx
  4139cd:	cmp    edi,DWORD PTR [ebp+eiz*8+0x116042ab]
  4139d4:	adc    DWORD PTR [edi+0x0],0xffffffa5
  4139d8:	push   edi
  4139d9:	cmp    al,0x6c
  4139db:	bound  eax,QWORD PTR [edx+eax*1+0x3dd9b343]
  4139e2:	pop    ds
  4139e3:	sbb    edx,DWORD PTR [esi-0x13]
  4139e6:	push   es
  4139e7:	cs into 
  4139e9:	cmp    bl,0x6d
  4139ec:	ds add eax,0xbce042b5
  4139f2:	mov    edx,0x62649a40
  4139f7:	loope  0x413a10
  4139f9:	adc    eax,0x2a286044
  4139fe:	cmc    
  4139ff:	pop    eax
  413a00:	push   ebx
  413a01:	adc    edx,ebx
  413a03:	call   0x1ab5:0xee1f9090
  413a0a:	xchg   edi,eax
  413a0b:	clc    
  413a0c:	aas    
  413a0d:	mov    ebx,0x94b0f535
  413a12:	adc    BYTE PTR [edx+0x43d04622],ch
  413a18:	xor    al,BYTE PTR [ebx]
  413a1a:	pop    es
  413a1b:	ins    BYTE PTR es:[edi],dx
  413a1c:	fcomp  DWORD PTR [esi-0x7d85c8d7]
  413a22:	push   esi
  413a23:	and    dl,BYTE PTR [ebx]
  413a25:	shl    ebp,1
  413a27:	sar    bh,0xbe
  413a2a:	aad    0xc0
  413a2c:	add    DWORD PTR [ebp-0x1d],0xffffffb8
  413a30:	pop    esp
  413a31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a32:	(bad)  
  413a33:	sbb    al,0x6f
  413a35:	mov    ebx,ecx
  413a37:	ins    DWORD PTR es:[edi],dx
  413a38:	xchg   ebp,eax
  413a39:	cld    
  413a3a:	and    ax,0x14a0
  413a3e:	ds mov esi,0xf9b93978
  413a44:	mov    ds:0x3436082c,eax
  413a49:	daa    
  413a4a:	inc    edi
  413a4b:	in     eax,dx
  413a4c:	test   ebx,ebx
  413a4e:	add    BYTE PTR [edx],ah
  413a50:	stos   DWORD PTR es:[edi],eax
  413a51:	loope  0x413a82
  413a53:	add    eax,0x9fb9d13d
  413a58:	push   edi
  413a59:	lock xor eax,0x33c2b2d3
  413a5f:	xor    al,0x56
  413a61:	cli    
  413a62:	movzx  eax,BYTE PTR [ebx-0x208c49e5]
  413a69:	out    dx,al
  413a6a:	sub    dh,BYTE PTR [eax+0x5b]
  413a6d:	or     BYTE PTR [esi-0x4e],0xfb
  413a71:	xor    eax,ecx
  413a73:	sub    DWORD PTR [ebp-0x21],ebp
  413a76:	cwde   
  413a77:	mov    ebp,0x44c946f2
  413a7c:	xchg   ebx,eax
  413a7d:	aad    0x6c
  413a7f:	sahf   
  413a80:	in     al,0x15
  413a82:	xchg   esp,eax
  413a83:	xor    eax,0x2651c88e
  413a88:	(bad)  
  413a89:	and    al,0x45
  413a8b:	mov    edi,0xb9823a8b
  413a90:	xor    BYTE PTR [eax-0x4b8bf507],cl
  413a96:	cmp    eax,edx
  413a98:	(bad)  
  413a99:	mov    al,ds:0x3a7a2146
  413a9e:	ss mov dh,0x19
  413aa1:	xor    bl,BYTE PTR [edi-0x70]
  413aa4:	sub    eax,0x1826c365
  413aa9:	bound  ebp,QWORD PTR [ebx]
  413aab:	xchg   esi,eax
  413aac:	sub    eax,0x90393637
  413ab1:	sbb    dl,BYTE PTR [ecx-0x19551b42]
  413ab7:	adc    ah,bh
  413ab9:	ss jnp 0x413a89
  413abc:	hlt    
  413abd:	adc    DWORD PTR [edx+0x41409901],esi
  413ac3:	and    bh,BYTE PTR [ebx+ecx*4-0x3966d103]
  413aca:	retf   0xb22a
  413acd:	jmp    0x67f0:0x847c51be
  413ad4:	(bad)
  413ad7:	pop    es
  413ad8:	xor    dh,bh
  413ada:	xchg   edi,eax
  413adb:	imul   esi,DWORD PTR [ebp+0x25],0x7300218b
  413ae2:	or     ch,BYTE PTR [edx-0x3e86457f]
  413ae8:	dec    ecx
  413ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aea:	push   eax
  413aeb:	mov    ds:0x80646a45,al
  413af0:	adc    esp,DWORD PTR [esp+ebp*4-0x4195931f]
  413af7:	pop    ebx
  413af8:	and    dh,ch
  413afa:	fcomp  st(0)
  413afc:	scas   eax,DWORD PTR es:[edi]
  413afd:	(bad)  
  413afe:	das    
  413aff:	push   cs
  413b00:	test   BYTE PTR [eax+0x56],bh
  413b03:	enter  0xfd4b,0x25
  413b07:	xor    eax,0x4721039f
  413b0c:	mov    ds:0xb5377ff6,eax
  413b11:	mov    cl,0x78
  413b13:	push   ebx
  413b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b15:	mov    ebp,ebx
  413b17:	jne    0x413ae6
  413b19:	arpl   WORD PTR ds:0x27e26d0b,sp
  413b1f:	mov    BYTE PTR [edx+edi*4+0x49863b67],bh
  413b26:	shl    BYTE PTR [eax],1
  413b28:	cld    
  413b29:	dec    esi
  413b2a:	sbb    dh,BYTE PTR [ebx]
  413b2c:	shr    BYTE PTR [eax+0x3eeed758],0x89
  413b33:	fwait
  413b34:	rol    eax,cl
  413b36:	mov    al,ds:0xc335a4b4
  413b3b:	imul   edi,DWORD PTR [ebx-0x48]
  413b3f:	popa   
  413b40:	sbb    DWORD PTR [edi],edi
  413b42:	stos   BYTE PTR es:[edi],al
  413b43:	and    ch,BYTE PTR [edx+0x26]
  413b46:	add    ebp,ecx
  413b48:	ds and eax,0x75393bef
  413b4e:	xor    BYTE PTR [esi+edx*2-0x1f],dl
  413b52:	cdq    
  413b53:	js     0x413b07
  413b55:	call   0xc93d6699
  413b5a:	mov    ds:0xf58a3b55,al
  413b5f:	(bad)  
  413b60:	ds push ds
  413b62:	inc    esi
  413b63:	rcl    BYTE PTR [eax-0x665a297],0x7
  413b6a:	dec    esi
  413b6b:	std    
  413b6c:	sub    ecx,DWORD PTR [edi+0x2575e777]
  413b72:	(bad)  
  413b73:	ficom  DWORD PTR [esi]
  413b75:	call   0x12f14dd9
  413b7a:	and    bl,cl
  413b7c:	fwait
  413b7d:	adc    ch,BYTE PTR [edx]
  413b7f:	scas   al,BYTE PTR es:[edi]
  413b80:	sahf   
  413b81:	in     al,dx
  413b82:	pop    edx
  413b83:	push   DWORD PTR [ebx-0x10]
  413b86:	scas   al,BYTE PTR es:[edi]
  413b87:	popf   
  413b88:	cwde   
  413b89:	pop    ebx
  413b8a:	call   0xe0e9:0xdd18b257
  413b91:	inc    ebp
  413b92:	test   eax,0xe2d568d3
  413b97:	jge    0x413b51
  413b99:	repz les ecx,FWORD PTR [ecx]
  413b9c:	pop    esp
  413b9d:	adc    eax,DWORD PTR [edx+0x24d71165]
  413ba3:	push   esi
  413ba4:	gs sahf 
  413ba6:	xchg   ecx,eax
  413ba7:	adc    DWORD PTR [edi+0x11],edx
  413baa:	xor    DWORD PTR [eax+0x56ae59e3],ebx
  413bb0:	ss sahf 
  413bb2:	mov    bh,0xb5
  413bb4:	or     ah,dl
  413bb6:	pushf  
  413bb7:	mov    ecx,0xd375859f
  413bbc:	sub    ebp,DWORD PTR [edx+0x4c]
  413bbf:	add    BYTE PTR [edi-0x50],bl
  413bc2:	push   edx
  413bc3:	ret    
  413bc4:	jp     0x413bfc
  413bc6:	and    ecx,DWORD PTR [edx]
  413bc8:	and    eax,0x3105b4c2
  413bcd:	jb     0x413baa
  413bcf:	sbb    BYTE PTR [eax+0x5a7e9b99],0x4f
  413bd6:	xchg   esi,eax
  413bd7:	cmp    DWORD PTR [esi+0x25],edi
  413bda:	(bad)  gs:[eax+0x64e90801]
  413be1:	jg     0x413b8d
  413be3:	mov    fs,WORD PTR ds:0x6309131
  413be9:	std    
  413bea:	repz adc edx,esi
  413bed:	mov    ecx,0x2abe2461
  413bf2:	or     eax,0xa764975d
  413bf7:	dec    ebx
  413bf8:	imul   ebx,esi,0x2e
  413bfb:	or     BYTE PTR [edi+ebx*8+0x23dd4970],0xd2
  413c03:	leave  
  413c04:	vpunpcklwd xmm3,xmm5,XMMWORD PTR ds:0x1a0aea2f
  413c0c:	pushf  
  413c0d:	push   ecx
  413c0e:	push   ebp
  413c0f:	bound  edx,QWORD PTR [ebp-0x41]
  413c12:	dec    edx
  413c13:	stc    
  413c14:	loopne 0x413bfb
  413c16:	(bad)  
  413c17:	in     al,dx
  413c18:	cmovp  esi,esp
  413c1b:	ror    DWORD PTR [ebx-0x71],0x20
  413c1f:	test   al,0x5f
  413c21:	ins    DWORD PTR es:[edi],dx
  413c22:	scas   al,BYTE PTR es:[edi]
  413c23:	jo     0x413c9e
  413c25:	pop    ecx
  413c26:	adc    dl,ah
  413c28:	push   edi
  413c29:	or     BYTE PTR [edx-0x674ff6e9],ah
  413c2f:	cmc    
  413c30:	mov    al,ds:0xcd6674c
  413c35:	call   FWORD PTR [ecx]
  413c37:	push   esp
  413c38:	or     ebx,esi
  413c3a:	push   ecx
  413c3b:	ja     0x413bc4
  413c3d:	push   ebx
  413c3e:	push   edi
  413c3f:	fwait
  413c40:	(bad)  
  413c41:	pop    edx
  413c42:	jnp    0x413c40
  413c44:	xchg   dh,al
  413c46:	add    cl,BYTE PTR [esi]
  413c48:	out    dx,al
  413c49:	xchg   ecx,eax
  413c4a:	mov    ecx,0xc1e3450f
  413c4f:	lock ins BYTE PTR es:[edi],dx
  413c51:	rcl    cl,1
  413c53:	xchg   ebx,eax
  413c54:	into   
  413c55:	pop    edx
  413c56:	mov    bl,0x1d
  413c58:	or     ebp,ecx
  413c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c5b:	xchg   ecx,eax
  413c5c:	sbb    DWORD PTR [ecx+esi*1-0x66],esp
  413c60:	shl    BYTE PTR [ecx-0x51],1
  413c63:	in     eax,0xea
  413c65:	(bad)  
  413c66:	in     al,0x18
  413c68:	dec    edx
  413c69:	add    ah,0x2b
  413c6c:	mov    esi,0x79a1d0e8
  413c71:	dec    esp
  413c72:	cmc    
  413c73:	push   esp
  413c74:	add    BYTE PTR [ecx+esi*1-0x59],0x8
  413c79:	int3   
  413c7a:	jp     0x413c2c
  413c7c:	popf   
  413c7d:	pop    ebx
  413c7e:	icebp  
  413c7f:	and    eax,0x2c87440d
  413c84:	ins    DWORD PTR es:[edi],dx
  413c85:	and    bh,BYTE PTR [ecx+0x74]
  413c88:	inc    ebx
  413c89:	arpl   ax,bx
  413c8b:	out    dx,eax
  413c8c:	pmaddwd mm0,QWORD PTR [edi-0x48fe32b8]
  413c93:	mov    dh,BYTE PTR [edx]
  413c95:	xor    eax,0x2da7e79b
  413c9a:	inc    edi
  413c9b:	pop    edx
  413c9c:	sbb    al,0x37
  413c9e:	xor    bh,al
  413ca0:	and    ecx,ebp
  413ca2:	cwde   
  413ca3:	js     0x413c2b
  413ca5:	loopne 0x413d01
  413ca7:	or     DWORD PTR [esi+0x49f9a586],ebp
  413cad:	jg     0x413cb3
  413caf:	xor    eax,esi
  413cb1:	jle    0x413c8c
  413cb3:	lea    ebx,[esp+eax*2]
  413cb6:	and    ah,BYTE PTR [eax]
  413cb8:	mov    WORD PTR [ecx],ss
  413cba:	jle    0x413cbc
  413cbc:	std    
  413cbd:	out    dx,eax
  413cbe:	loopne 0x413cfa
  413cc0:	mov    DWORD PTR [esi+esi*4-0x2e170fbc],ecx
  413cc7:	xor    al,dl
  413cc9:	mov    ch,0xc5
  413ccb:	ret    
  413ccc:	pop    edx
  413ccd:	sub    eax,0x3c1c9d92
  413cd2:	jbe    0x413c54
  413cd4:	in     al,0x33
  413cd6:	dec    edi
  413cd7:	stos   DWORD PTR es:[edi],eax
  413cd8:	loope  0x413cbb
  413cda:	xchg   ebx,eax
  413cdb:	jl     0x413c8e
  413cdd:	cmc    
  413cde:	or     ebp,DWORD PTR [esi]
  413ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ce1:	call   0x46be:0xc4921c1c
  413ce8:	jl     0x413c7d
  413cea:	inc    ecx
  413ceb:	inc    eax
  413cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ced:	imul   eax,DWORD PTR [edi],0x73
  413cf0:	and    ch,ah
  413cf2:	xor    edx,DWORD PTR [eax-0x363cf55e]
  413cf8:	xor    BYTE PTR [eax+eax*4-0x3dce0c9f],ch
  413cff:	fstp   DWORD PTR [ebx]
  413d01:	ds mov esp,0xf3d4ed4
  413d07:	sub    al,0xc6
  413d09:	cli    
  413d0a:	scas   eax,DWORD PTR es:[edi]
  413d0b:	jnp    0x413cb4
  413d0d:	inc    edx
  413d0e:	push   cs
  413d0f:	dec    ebp
  413d10:	xchg   ebp,eax
  413d11:	loopne 0x413d50
  413d13:	xchg   edx,eax
  413d14:	(bad)  
  413d15:	mov    dh,0x76
  413d17:	popf   
  413d18:	leave  
  413d19:	jae    0x413cdb
  413d1b:	xchg   ecx,edi
  413d1d:	enter  0xf9ec,0xcf
  413d21:	push   ss
  413d22:	fadd   DWORD PTR [ebx]
  413d24:	sbb    ebx,DWORD PTR [edi-0x4a]
  413d27:	retf   0xf6cb
  413d2a:	add    esi,ebp
  413d2c:	enter  0xbe89,0x67
  413d30:	repz ss jns 0x413d8f
  413d34:	lods   al,BYTE PTR ds:[esi]
  413d35:	push   eax
  413d36:	test   bh,bh
  413d38:	or     eax,DWORD PTR [edx+0x7a]
  413d3b:	sar    DWORD PTR [edx-0x71],cl
  413d3e:	dec    ecx
  413d3f:	in     al,dx
  413d40:	push   edx
  413d41:	in     al,dx
  413d42:	gs repz xchg esi,eax
  413d45:	or     eax,DWORD PTR ds:0xd22cf7b2
  413d4b:	cmp    eax,0x12dae63c
  413d50:	push   eax
  413d51:	mov    dh,0xb4
  413d53:	loopne 0x413dcc
  413d55:	out    0x44,eax
  413d57:	iret   
  413d58:	sub    al,0x8b
  413d5a:	or     cl,BYTE PTR [edi-0x38771496]
  413d60:	imul   ecx,DWORD PTR [eax-0x2670dcf4],0x95df3bbf
  413d6a:	rol    BYTE PTR [ebx+0x25],0xd9
  413d6e:	inc    eax
  413d6f:	cmp    al,0x47
  413d71:	fst    DWORD PTR [ecx+0xf]
  413d74:	jmp    0x413d13
  413d76:	ffree  st(5)
  413d78:	cwde   
  413d79:	xchg   edi,eax
  413d7a:	lahf   
  413d7b:	imul   edx,DWORD PTR cs:[ecx],0xfffffff4
  413d7f:	(bad)  
  413d80:	jnp    0x413dbc
  413d82:	and    eax,0xecb44736
  413d87:	sbb    al,0x57
  413d89:	pop    ss
  413d8a:	vpminub xmm0,xmm1,XMMWORD PTR [ebp+0x48]
  413d8f:	jno    0x413d79
  413d91:	dec    eax
  413d92:	mov    esp,0x95537cc4
  413d97:	push   edi
  413d98:	dec    edx
  413d99:	jecxz  0x413d91
  413d9b:	mov    DWORD PTR [edx+0x26],edi
  413d9e:	jb     0x413d23
  413da0:	sahf   
  413da1:	cmp    dl,cl
  413da3:	jl     0x413e17
  413da5:	pop    ss
  413da6:	aaa    
  413da7:	ror    DWORD PTR [esi+eax*8],cl
  413daa:	fsubr  DWORD PTR [esi]
  413dac:	pop    esi
  413dad:	xchg   ebx,eax
  413dae:	ss popf 
  413db0:	std    
  413db1:	inc    edx
  413db2:	out    0xde,eax
  413db4:	xor    eax,0xf3e645e4
  413db9:	shufps xmm3,XMMWORD PTR [edi+ebx*4+0x3245f615],0x2c
  413dc2:	dec    ecx
  413dc3:	add    al,0x0
  413dc5:	push   eax
  413dc6:	in     eax,0x8
  413dc8:	xor    al,0x61
  413dca:	jl     0x413e2e
  413dcc:	pop    esi
  413dcd:	fisubr DWORD PTR [ebp-0xf06bf40]
  413dd3:	sub    al,0xa5
  413dd5:	mov    dh,0xf3
  413dd7:	push   ss
  413dd8:	cmp    ch,BYTE PTR [edi]
  413dda:	inc    ebp
  413ddb:	adc    bl,BYTE PTR [ecx+0x3d]
  413dde:	call   0x3ae9:0xa3efb5d5
  413de5:	test   eax,0xc0d843d0
  413dea:	inc    ebx
  413deb:	out    0x3f,al
  413ded:	out    0x81,eax
  413def:	ins    DWORD PTR es:[edi],dx
  413df0:	adc    ebp,DWORD PTR [eax+0x36]
  413df3:	setns  BYTE PTR [ebx+0x27]
  413df7:	ret    0xd9fc
  413dfa:	adc    eax,0x1ae7b0a4
  413dff:	push   eax
  413e00:	adc    DWORD PTR [edx+0x5c1e2bb6],ebp
  413e06:	les    edi,FWORD PTR [ecx]
  413e08:	ret    0x77d6
  413e0b:	add    dl,BYTE PTR ds:0x52f49a54
  413e11:	xrelease xchg BYTE PTR [ebx-0x544355b5],ch
  413e18:	pop    ebx
  413e19:	mov    edi,0xd6ad7e77
  413e1e:	jmp    0x413e5e
  413e20:	cwde   
  413e21:	mov    ch,0xea
  413e23:	nop
  413e24:	xor    eax,0x54cac38a
  413e29:	js     0x413e82
  413e2b:	jmp    0x1fcc:0x3df9a3d1
  413e32:	push   ds
  413e33:	pushf  
  413e34:	in     al,dx
  413e35:	mov    ecx,0x1bb2ef87
  413e3a:	jbe    0x413e32
  413e3c:	mov    ?,WORD PTR [ebx+0x1c8c4173]
  413e42:	ins    BYTE PTR es:[edi],dx
  413e43:	ss xor eax,0x35b0967c
  413e4a:	inc    ebx
  413e4b:	pop    eax
  413e4c:	add    ecx,ebx
  413e4e:	out    dx,al
  413e4f:	test   eax,0x56253858
  413e54:	std    
  413e55:	push   es
  413e56:	dec    ebx
  413e57:	ss mov bl,0x88
  413e5a:	dec    eax
  413e5b:	(bad)  
  413e5c:	lea    esi,ds:0x7f19e43a
  413e62:	ins    BYTE PTR es:[edi],dx
  413e63:	jg     0x413e28
  413e65:	xchg   esp,eax
  413e66:	mov    eax,ds:0x388c598e
  413e6b:	and    DWORD PTR [edi],0xbd988ca9
  413e71:	mov    ebx,0x17381634
  413e76:	jmp    DWORD PTR [eax]
  413e78:	retf   0x76ca
  413e7b:	lea    ebx,[edi-0x22]
  413e7e:	add    edi,DWORD PTR cs:[ebp+0x70]
  413e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e83:	fcomi  st,st(5)
  413e85:	jg     0x413ee2
  413e87:	mov    bh,0x21
  413e89:	dec    esi
  413e8a:	stos   BYTE PTR es:[edi],al
  413e8b:	pop    edx
  413e8c:	adc    ebp,DWORD PTR [esi]
  413e8e:	pop    eax
  413e8f:	retf   0x7e1c
  413e92:	xchg   ebx,eax
  413e93:	in     eax,dx
  413e94:	(bad)  
  413e95:	into   
  413e96:	add    BYTE PTR [ebx-0x62],cl
  413e99:	rcl    bl,1
  413e9b:	push   ds
  413e9c:	imul   edi,DWORD PTR [ebx-0x31],0xb27d1445
  413ea3:	add    DWORD PTR [edi-0x3e],eax
  413ea6:	dec    edx
  413ea7:	add    eax,0x3422d060
  413eac:	push   ds
  413ead:	mov    esp,0x3cc836f0
  413eb2:	(bad)  
  413eb3:	dec    edx
  413eb4:	aaa    
  413eb5:	push   ss
  413eb6:	aas    
  413eb7:	dec    esi
  413eb8:	loopne 0x413f00
  413eba:	hlt    
  413ebb:	xor    DWORD PTR [esi+0x2b],edi
  413ebe:	test   ch,dl
  413ec0:	out    dx,al
  413ec1:	retf   
  413ec2:	outs   dx,BYTE PTR ds:[esi]
  413ec3:	push   esp
  413ec4:	add    al,0x6
  413ec6:	aas    
  413ec7:	or     eax,0xbc8c4dd3
  413ecc:	push   0xffffffb7
  413ece:	jl     0x413f44
  413ed0:	out    dx,eax
  413ed1:	ins    DWORD PTR es:[edi],dx
  413ed2:	push   0xe58a40a4
  413ed7:	lods   al,BYTE PTR ds:[esi]
  413ed8:	mov    edx,0x55e1cfe4
  413edd:	sub    al,0x47
  413edf:	mov    ch,0x3f
  413ee1:	jbe    0x413f2a
  413ee3:	cmp    eax,0x558b7d48
  413ee8:	in     al,dx
  413ee9:	mov    DWORD PTR [ebp+0x8],edx
  413eec:	jmp    0x4162e7
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     BYTE PTR [esi-0x4ac67448],dl
  413f29:	jae    0x413fa5
  413f2b:	jp     0x413f2e
  413f2d:	pop    edi
  413f2e:	jp     0x413faa
  413f30:	push   ecx
  413f31:	adc    BYTE PTR [esi+0x35598ea3],ch
  413f37:	in     al,0xe6
  413f39:	mov    eax,0x68d7cccc
  413f3e:	inc    ecx
  413f3f:	ss ds xchg edx,eax
  413f42:	add    al,0x69
  413f44:	xor    ebp,DWORD PTR [ecx]
  413f46:	sbb    BYTE PTR [edi+edi*4+0x7208224c],0xd1
  413f4e:	inc    ebx
  413f4f:	imul   edx,DWORD PTR [edi],0xffffffcb
  413f52:	(bad)  
  413f53:	(bad)  
  413f54:	cli    
  413f55:	loop   0x413f4b
  413f57:	sub    eax,0xfb2097f2
  413f5c:	das    
  413f5d:	add    al,0x2c
  413f5f:	add    ebx,esp
  413f61:	retf   
  413f62:	or     bh,bh
  413f64:	mov    ds:0xda56a525,al
  413f69:	dec    eax
  413f6a:	outs   dx,DWORD PTR ds:[esi]
  413f6b:	hlt    
  413f6c:	mov    cl,bl
  413f6e:	mov    ebp,0x779d04f0
  413f73:	je     0x413f31
  413f75:	scas   eax,DWORD PTR es:[edi]
  413f76:	mov    DWORD PTR [ecx-0x7b930bbb],ecx
  413f7c:	daa    
  413f7d:	iret   
  413f7e:	add    DWORD PTR [esi+0xa0ce6bb],eax
  413f84:	loopne 0x413f80
  413f86:	push   esp
  413f87:	add    bl,BYTE PTR [edx+ecx*4+0x637e025e]
  413f8e:	mov    ds:0x682334ac,eax
  413f93:	sub    ah,BYTE PTR [ecx+0x3e93ea05]
  413f99:	out    dx,eax
  413f9a:	and    al,0xe7
  413f9c:	adc    BYTE PTR [edx],bh
  413f9e:	ins    BYTE PTR es:[edi],dx
  413f9f:	arpl   WORD PTR [esi-0x54],bx
  413fa2:	clc    
  413fa3:	and    al,BYTE PTR [ecx]
  413fa5:	pop    eax
  413fa6:	icebp  
  413fa7:	in     al,dx
  413fa8:	popf   
  413fa9:	or     eax,0xc2c8438d
  413fae:	mov    bl,0xe4
  413fb0:	push   esp
  413fb1:	in     eax,0x6
  413fb3:	xor    eax,0x71c5b212
  413fb8:	inc    edi
  413fb9:	fimul  WORD PTR [esi+edx*4+0x7f]
  413fbd:	in     al,dx
  413fbe:	lods   eax,DWORD PTR ds:[esi]
  413fbf:	mov    fs,WORD PTR [ecx]
  413fc1:	sbb    bl,BYTE PTR [ecx-0x5e]
  413fc4:	lods   eax,DWORD PTR ds:[esi]
  413fc5:	cli    
  413fc6:	mov    dh,0xd
  413fc8:	dec    esp
  413fc9:	outs   dx,DWORD PTR ds:[esi]
  413fca:	out    0x4f,eax
  413fcc:	out    0xa4,eax
  413fce:	or     ah,BYTE PTR [ebx+0x65f06dd]
  413fd4:	xchg   ecx,eax
  413fd5:	jge    0x413fe3
  413fd7:	sub    DWORD PTR [edi],ecx
  413fd9:	cmovbe esp,DWORD PTR [ecx-0x56f3ebab]
  413fe0:	or     ebx,ebx
  413fe2:	push   eax
  413fe3:	in     eax,dx
  413fe4:	(bad)  
  413fe5:	adc    al,0x4d
  413fe7:	mov    eax,ds:0xe9409468
  413fec:	icebp  
  413fed:	stos   BYTE PTR es:[edi],al
  413fee:	loopne 0x413fab
  413ff0:	jmp    0x414001
  413ff2:	and    BYTE PTR [ebp+0x532a4f9c],bh
  413ff8:	std    
  413ff9:	jmp    0xb107e7ba
  413ffe:	cli    
  413fff:	pop    ds
  414000:	add    eax,0xfecfc6b6
  414005:	call   0xa3ccdbe8
  41400a:	mov    cl,0x4
  41400c:	dec    ebp
  41400d:	jge    0x414078
  41400f:	cmp    eax,0x80a097c1
  414014:	ja     0x414078
  414016:	xchg   edx,eax
  414017:	cmp    DWORD PTR [ebp+0x55b46db3],edx
  41401d:	hlt    
  41401e:	sub    al,0xb6
  414020:	pusha  
  414021:	pop    eax
  414022:	push   ebx
  414023:	push   cs
  414024:	leave  
  414025:	popa   
  414026:	mov    dh,0x85
  414028:	xchg   ecx,eax
  414029:	xchg   edx,eax
  41402a:	mov    ch,0xf2
  41402c:	ins    DWORD PTR es:[edi],dx
  41402d:	ins    BYTE PTR es:[edi],dx
  41402e:	and    eax,0x5d3e4492
  414033:	pop    ss
  414034:	(bad)  
  414035:	dec    esp
  414036:	push   esi
  414037:	in     eax,0xe9
  414039:	pop    esp
  41403a:	and    eax,0xbec458af
  41403f:	jmp    0xe8bd51d3
  414044:	mov    esi,0x819a64da
  414049:	lds    edx,FWORD PTR [ecx]
  41404b:	shl    DWORD PTR [edi],1
  41404d:	sar    ebp,1
  41404f:	pop    esi
  414050:	lods   eax,DWORD PTR ds:[esi]
  414051:	lea    eax,[esi+ebx*2-0x232d6aa1]
  414058:	ins    BYTE PTR es:[edi],dx
  414059:	pop    ds
  41405a:	fisttp QWORD PTR [ebp+0x10]
  41405d:	mov    edx,0x7776e071
  414062:	aas    
  414063:	aad    0xd
  414065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414066:	or     edx,DWORD PTR [edx]
  414068:	and    BYTE PTR [ebx+0x2d],bh
  41406b:	retf   0xe0a2
  41406e:	repnz mov ch,0x1d
  414071:	stc    
  414072:	stos   BYTE PTR es:[edi],al
  414073:	add    BYTE PTR [ebx+ebx*4-0x68bad713],al
  41407a:	stos   BYTE PTR es:[edi],al
  41407b:	scas   al,BYTE PTR es:[edi]
  41407c:	xor    al,0x25
  41407e:	repnz xor eax,0x9d1c346e
  414084:	xchg   BYTE PTR [edi+0x4],bl
  414087:	add    BYTE PTR [esi-0x5510a9e7],bl
  41408d:	mov    ebp,gs
  41408f:	and    DWORD PTR [ebx+0x0],ebp
  414092:	(bad)
  414096:	push   edx
  414097:	mov    edx,0x72ed8d23
  41409c:	ror    DWORD PTR [ecx-0x49],cl
  41409f:	xchg   edx,eax
  4140a0:	or     esp,DWORD PTR [edx]
  4140a2:	mov    ebx,DWORD PTR [edx-0x6b54105a]
  4140a8:	pop    es
  4140a9:	pop    edx
  4140aa:	mov    dh,0x86
  4140ac:	xchg   ebp,eax
  4140ad:	leave  
  4140ae:	ror    DWORD PTR [esi-0x5b],1
  4140b1:	(bad)  
  4140b2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140b4:	data16 in al,dx
  4140b6:	loope  0x414064
  4140b8:	mov    ebx,?
  4140ba:	push   eax
  4140bb:	pop    ebx
  4140bc:	mov    ah,0x16
  4140be:	and    al,0x55
  4140c0:	ror    BYTE PTR [ebx-0x6a],0x48
  4140c4:	adc    al,0x52
  4140c6:	repz cmp DWORD PTR [ecx-0x1a4a96e3],0x36
  4140ce:	pop    edx
  4140cf:	stos   DWORD PTR es:[edi],eax
  4140d0:	test   eax,0x385757d4
  4140d5:	dec    ebp
  4140d6:	xchg   esp,eax
  4140d7:	ror    DWORD PTR [esi-0x28d41c6],0x3d
  4140de:	stc    
  4140df:	xchg   edx,eax
  4140e0:	mov    al,ds:0xb8d607de
  4140e5:	mov    ebp,edi
  4140e7:	fild   DWORD PTR [ecx+0x22adcc04]
  4140ed:	cld    
  4140ee:	imul   ecx,DWORD PTR [ecx-0x4b],0x13
  4140f2:	mov    ds:0xa48065f5,eax
  4140f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140f8:	push   cs
  4140f9:	dec    ecx
  4140fa:	fsub   DWORD PTR [ebp+0x3b]
  4140fd:	sbb    al,0x92
  414100:	inc    esi
  414102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414103:	xchg   esp,eax
  414104:	arpl   WORD PTR [ecx-0x1e10261],bp
  41410a:	bound  ecx,QWORD PTR [ecx-0x1d571871]
  414110:	or     BYTE PTR [edi-0x592ea43d],al
  414116:	xchg   BYTE PTR [edi],ch
  414118:	cmp    BYTE PTR [ecx-0x7],ch
  41411b:	mov    ecx,0xffc2a713
  414120:	pop    edi
  414121:	pop    es
  414122:	(bad)  
  414123:	sub    ebp,DWORD PTR [eax+0x7dc37a6]
  414129:	mov    ch,0xe3
  41412b:	nop
  41412c:	bnd jle 0x414155
  41412f:	pop    ds
  414130:	in     al,dx
  414131:	in     al,dx
  414132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414133:	addr16 fs xor eax,0xfffffff4
  414138:	mov    dh,BYTE PTR [edx+edx*4]
  41413b:	mov    ebp,0xc24d0c83
  414140:	sbb    edx,ebp
  414142:	mov    WORD PTR [ecx],?
  414144:	rcl    DWORD PTR ds:0x8bdf2c4c,0x89
  41414b:	dec    edx
  41414c:	scas   eax,DWORD PTR es:[edi]
  41414d:	stc    
  41414e:	cs jae 0x4140e0
  414151:	dec    ebx
  414152:	xchg   esi,eax
  414153:	aam    0x44
  414155:	lock fist DWORD PTR [ecx]
  414158:	mov    cl,0xa3
  41415a:	enter  0x149d,0x86
  41415e:	dec    edi
  41415f:	or     bh,BYTE PTR [esi-0x2b92a79e]
  414165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414166:	push   esp
  414167:	pop    es
  414168:	mov    esi,0x16abe1b6
  41416d:	jmp    0x9e611ac7
  414172:	sub    eax,0x7bf15dd2
  414177:	xchg   esp,eax
  414178:	clc    
  414179:	lahf   
  41417a:	cdq    
  41417b:	jo     0x414127
  41417d:	outs   dx,DWORD PTR ds:[esi]
  41417e:	pop    ebx
  41417f:	cs jmp 0x2a4:0xfb43feba
  414187:	dec    ecx
  414188:	cmc    
  414189:	lods   eax,DWORD PTR ds:[esi]
  41418a:	outs   dx,DWORD PTR ds:[esi]
  41418b:	in     al,0x6b
  41418d:	outs   dx,BYTE PTR ds:[esi]
  41418e:	lahf   
  41418f:	clc    
  414190:	mov    dh,bh
  414192:	fwait
  414193:	lods   al,BYTE PTR ds:[esi]
  414194:	xlat   BYTE PTR ds:[ebx]
  414195:	aad    0x54
  414197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414198:	ret    0x97d1
  41419b:	fdiv   QWORD PTR [ebp-0x9]
  41419e:	push   eax
  41419f:	or     ah,BYTE PTR [ecx]
  4141a1:	and    al,bl
  4141a3:	xor    al,0x88
  4141a5:	call   0xa7ba:0xf1328cfb
  4141ac:	mov    BYTE PTR [ebx+0x5a852053],0xbd
  4141b3:	(bad)  
  4141b4:	stc    
  4141b5:	xchg   DWORD PTR [edx],edx
  4141b7:	mov    ?,WORD PTR [ebp+0x703cb2b1]
  4141bd:	iret   
  4141be:	jl     0x414186
  4141c0:	xchg   edi,eax
  4141c1:	hlt    
  4141c2:	xchg   DWORD PTR [edx+0x45],ecx
  4141c5:	adc    dh,BYTE PTR [esi-0x75]
  4141c8:	cs retf 0xabe
  4141cc:	(bad)  
  4141cd:	xor    eax,0xa1f64575
  4141d2:	imul   esp,DWORD PTR [ebx-0x51d49d3],0x75a993f3
  4141dc:	sub    BYTE PTR [edi-0x7f],al
  4141df:	popa   
  4141e0:	cmp    cl,BYTE PTR [esi-0x22]
  4141e3:	pushf  
  4141e4:	es ret 
  4141e6:	mov    edi,0xb47cb75
  4141eb:	int    0xa6
  4141ed:	xor    eax,0x18cc37c
  4141f2:	dec    esp
  4141f3:	loopne 0x4141fd
  4141f5:	clc    
  4141f6:	(bad)  
  4141f7:	mov    cl,0x42
  4141f9:	adc    DWORD PTR [eax+0x2a],0xffffff80
  4141fd:	jne    0x4141c7
  4141ff:	inc    ebx
  414200:	and    DWORD PTR [ebx+0x54],esp
  414203:	mov    dl,0x42
  414205:	loope  0x4141ce
  414207:	(bad)  
  414208:	and    DWORD PTR [ecx],eax
  41420a:	ins    BYTE PTR es:[edi],dx
  41420b:	xor    ebp,esp
  41420d:	adc    ah,bh
  41420f:	mov    dl,0xbb
  414211:	xchg   BYTE PTR [esp+eax*1+0x68],cl
  414215:	pop    esi
  414216:	in     eax,dx
  414217:	ret    0xbedb
  41421a:	iret   
  41421b:	fcom   DWORD PTR [edi+0x18]
  41421e:	cmp    ebx,edx
  414220:	jnp    0x41427f
  414222:	push   edx
  414223:	ja     0x414268
  414225:	sbb    DWORD PTR [edi+0x65ed6ec0],esp
  41422b:	mov    eax,0x24eed3bf
  414230:	or     eax,0xecd80549
  414235:	mov    ds:0xfd822223,eax
  41423a:	xchg   edi,eax
  41423b:	out    dx,eax
  41423c:	or     al,0x25
  41423e:	inc    ebx
  41423f:	fcom   QWORD PTR [ebx]
  414241:	stc    
  414242:	clc    
  414243:	fwait
  414244:	mov    eax,ds:0x3b50940c
  414249:	(bad)  
  41424a:	jecxz  0x414295
  41424c:	jmp    0xd69cb462
  414251:	mov    al,ds:0xeaa93c49
  414256:	jp     0x4142a0
  414258:	das    
  414259:	ja     0x4141e5
  41425b:	clc    
  41425c:	adc    dl,al
  41425e:	mov    al,0x15
  414260:	mov    ecx,esi
  414262:	xor    ah,BYTE PTR [esi+eax*8-0x8]
  414266:	ss jbe 0x414220
  414269:	lods   al,BYTE PTR ds:[esi]
  41426a:	cmp    BYTE PTR [edi-0x1],ah
  41426d:	gs add dl,al
  414270:	les    esi,FWORD PTR [ecx-0x45aa8f28]
  414276:	pmulhw mm1,mm2
  414279:	sbb    DWORD PTR [eax+0x25b0d50a],esi
  41427f:	sbb    ecx,ecx
  414281:	pop    ds
  414282:	xor    DWORD PTR [edx-0x396089e0],ebx
  414288:	inc    ecx
  414289:	cmp    eax,0x22b9cf4b
  41428e:	int    0xad
  414290:	int    0x33
  414292:	dec    edx
  414293:	out    dx,al
  414294:	push   0x50f15206
  414299:	mov    ebp,0xd7de10bd
  41429e:	icebp  
  41429f:	push   0xb
  4142a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142a2:	arpl   si,bp
  4142a4:	xchg   BYTE PTR [ebp+ebp*2-0x6da30fde],bh
  4142ab:	adc    BYTE PTR [esi],0x27
  4142ae:	jl     0x414285
  4142b0:	sbb    eax,0xef925cf9
  4142b5:	dec    eax
  4142b6:	inc    esp
  4142b7:	into   
  4142b8:	add    ecx,DWORD PTR [edx]
  4142ba:	mov    eax,ds:0x3dc1487d
  4142bf:	and    BYTE PTR [ecx-0x7b],0xcb
  4142c3:	lods   al,BYTE PTR ds:[esi]
  4142c4:	mov    ds:0x1d8faad1,al
  4142c9:	push   esi
  4142ca:	fwait
  4142cb:	iret   
  4142cc:	fwait
  4142cd:	jmp    0x4fb3007f
  4142d2:	add    BYTE PTR [eax],al
  4142d4:	inc    ebp
  4142d5:	(bad)  
  4142d6:	in     eax,0x2f
  4142d8:	push   ecx
  4142d9:	push   ss
  4142da:	cs sub bh,dl
  4142dd:	jo     0x414321
  4142df:	fst    st(3)
  4142e1:	adc    DWORD PTR [edi-0x15],edi
  4142e4:	mov    dl,0x19
  4142e6:	daa    
  4142e7:	xor    al,BYTE PTR [eax]
  4142e9:	les    ecx,FWORD PTR [ecx]
  4142eb:	jg     0x414270
  4142ed:	mov    WORD PTR [ecx],es
  4142ef:	mov    esp,0x62f087a4
  4142f4:	call   FWORD PTR [ebp+esi*8-0x15747c71]
  4142fb:	pop    esp
  4142fc:	fistp  WORD PTR [esi]
  4142fe:	std    
  4142ff:	xlat   BYTE PTR ds:[ebx]
  414300:	shl    BYTE PTR [ecx],1
  414302:	add    dh,BYTE PTR [edi+edx*2-0x44bbe0fc]
  414309:	adc    bh,BYTE PTR cs:[edi+0x4a5736e8]
  414310:	das    
  414311:	shl    BYTE PTR [ecx+0x52],cl
  414314:	jmp    0xe2dd:0xd5a79759
  41431b:	aaa    
  41431c:	mov    eax,0xb61d386c
  414321:	sub    BYTE PTR [edx-0x250b140c],bl
  414327:	mov    ds:0x1aaa2e22,eax
  41432c:	add    bl,cl
  41432e:	ret    
  41432f:	fs js  0x414304
  414332:	(bad)  
  414333:	popa   
  414334:	arpl   WORD PTR [ecx],si
  414336:	outs   dx,BYTE PTR ds:[esi]
  414337:	jge    0x41433c
  414339:	dec    edi
  41433a:	inc    edx
  41433b:	mov    ah,0x92
  41433d:	or     eax,0x58875e03
  414342:	popa   
  414343:	mov    bh,0x4d
  414345:	iret   
  414346:	jmp    0x414350
  414348:	add    edi,DWORD PTR [edi-0x13]
  41434b:	xor    al,0x66
  41434d:	and    ecx,DWORD PTR [ebx-0x59d909e]
  414353:	inc    edx
  414354:	push   esi
  414355:	cmp    al,0xad
  414357:	scas   al,BYTE PTR es:[edi]
  414358:	cld    
  414359:	xor    DWORD PTR [ecx],esp
  41435b:	adc    DWORD PTR [esi],edx
  41435d:	cmp    BYTE PTR [edx],ch
  41435f:	adc    al,0x90
  414361:	stc    
  414362:	(bad)  
  414363:	sbb    edx,ecx
  414365:	lods   al,BYTE PTR ds:[esi]
  414366:	mov    al,0x83
  414368:	cdq    
  414369:	or     ah,ah
  41436b:	cmc    
  41436c:	pusha  
  41436d:	xor    DWORD PTR [esi],ebp
  41436f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414370:	xor    bl,dl
  414372:	pop    eax
  414373:	das    
  414374:	and    eax,0x91e9f6eb
  414379:	inc    esi
  41437a:	xchg   esi,eax
  41437b:	push   edi
  41437c:	dec    ebp
  41437d:	pop    ebx
  41437e:	cli    
  41437f:	(bad)  
  414380:	imul   edi,DWORD PTR ds:0x87070f0f,0xffffffe3
  414387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414388:	sub    al,0x78
  41438a:	mov    esp,0xa0c31771
  41438f:	test   DWORD PTR [ecx+0x5d],0x7ab8fcf7
  414396:	mov    cl,0x32
  414398:	(bad)  
  414399:	js     0x41432d
  41439b:	cdq    
  41439c:	fidivr WORD PTR [edx-0x4341c6dd]
  4143a2:	inc    edi
  4143a3:	dec    edi
  4143a4:	jle    0x414351
  4143a6:	jbe    0x414342
  4143a8:	imul   edi,esi,0xffffffb0
  4143ab:	push   es
  4143ac:	xchg   ebp,eax
  4143ad:	rcl    BYTE PTR [ecx],0x40
  4143b0:	jns    0x4143a2
  4143b2:	and    BYTE PTR [edx],bh
  4143b4:	(bad)  
  4143b5:	add    eax,0x460807ef
  4143ba:	jle    0x414413
  4143bc:	repnz inc ebx
  4143be:	ja     0x414395
  4143c0:	xlat   BYTE PTR ds:[ebx]
  4143c1:	cmp    BYTE PTR [esi+0x13],ah
  4143c4:	and    eax,0x2f64dcaa
  4143c9:	push   0x9eb399fa
  4143ce:	and    DWORD PTR [ebx],ebx
  4143d0:	inc    al
  4143d2:	test   al,0x7e
  4143d4:	sbb    ecx,esi
  4143d6:	out    dx,al
  4143d7:	mov    DWORD PTR gs:[ecx+0x35],ecx
  4143db:	std    
  4143dc:	jno    0x41443e
  4143de:	scas   al,BYTE PTR es:[edi]
  4143df:	retf   
  4143e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143e1:	addr16 mov al,0xf8
  4143e4:	mov    al,ds:0xc4abf17b
  4143e9:	push   es
  4143ea:	sbb    eax,0xa60b833d
  4143ef:	push   ecx
  4143f0:	loope  0x41442a
  4143f2:	and    al,bl
  4143f4:	add    BYTE PTR [ebx-0x38],0xcd
  4143f8:	sub    dh,BYTE PTR [edx]
  4143fa:	lock out 0x12,al
  4143fd:	js     0x4143a6
  4143ff:	mov    ds:0x53cecd50,al
  414404:	retf   
  414405:	ja     0x414404
  414407:	mov    edx,0x625d6bbe
  41440c:	repnz mov ch,0x9e
  41440f:	push   esi
  414410:	inc    ebp
  414411:	repnz daa 
  414413:	ins    DWORD PTR es:[edi],dx
  414414:	jae    0x414426
  414416:	ss aas 
  414418:	sub    DWORD PTR [edi],0x33
  41441b:	ffreep st(7)
  41441d:	mov    WORD PTR [edx],?
  41441f:	jo     0x41443d
  414421:	or     BYTE PTR [ebp-0x79],dh
  414424:	pop    ds
  414425:	cmp    esi,esp
  414427:	and    al,0x5b
  414429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41442a:	out    dx,eax
  41442b:	test   al,0xfa
  41442d:	pop    ebp
  41442e:	cmp    al,0x64
  414430:	lods   eax,DWORD PTR ds:[esi]
  414431:	popa   
  414432:	out    dx,eax
  414433:	leave  
  414434:	mov    DWORD PTR [edx-0x4e],0xa3da6fda
  41443b:	and    ah,BYTE PTR [ebp+0xbbaebc4]
  414441:	pop    esi
  414442:	dec    edi
  414443:	dec    ecx
  414444:	aas    
  414445:	sub    al,0xb1
  414447:	sub    ch,bl
  414449:	mov    DWORD PTR [edx],eax
  41444b:	dec    ecx
  41444c:	stos   BYTE PTR es:[edi],al
  41444d:	std    
  41444e:	call   0x72d52b52
  414453:	and    DWORD PTR [ebp-0x22],eax
  414456:	mov    ebx,0xa479a100
  41445b:	stos   BYTE PTR es:[edi],al
  41445c:	stos   BYTE PTR es:[edi],al
  41445d:	fist   DWORD PTR [ebp-0x4a0506af]
  414463:	jle    0x4143f8
  414465:	or     al,0x98
  414467:	fcomp  QWORD PTR [esi+esi*4-0x5c1ab091]
  41446e:	pop    ss
  41446f:	push   ss
  414470:	and    DWORD PTR [ebx],edx
  414472:	out    dx,eax
  414473:	call   FWORD PTR [ebx+0x1c]
  414476:	fs hlt 
  414478:	(bad)  
  414479:	sahf   
  41447a:	mov    DWORD PTR [ecx],0x549e3974
  414480:	mov    ds:0x1ac4de3e,al
  414485:	pop    ss
  414486:	xchg   edi,eax
  414487:	clc    
  414488:	test   ebp,esp
  41448a:	xor    ch,bh
  41448c:	ja     0x4144ef
  41448e:	rep outs dx,BYTE PTR ds:[esi]
  414490:	mov    ebx,0x15d7d0f
  414495:	adc    eax,esi
  414497:	push   0x2d
  414499:	jo     0x4144b4
  41449b:	cdq    
  41449c:	in     eax,dx
  41449d:	mov    dh,0xf7
  41449f:	and    al,0xaa
  4144a1:	fnstenv [esi+0x763d50f8]
  4144a7:	push   es
  4144a8:	(bad)  
  4144aa:	fst    QWORD PTR [edi+0x57755913]
  4144b0:	push   cs
  4144b1:	imul   ebx,DWORD PTR [ebx+0x15],0x62c827e1
  4144b8:	test   eax,0x3dff736f
  4144bd:	mov    dh,0x6d
  4144bf:	push   esi
  4144c0:	and    eax,0x2a1829e5
  4144c5:	sub    DWORD PTR [edx+0x2c],0xceb62b34
  4144cc:	or     al,BYTE PTR [esi]
  4144ce:	(bad)  
  4144cf:	sub    edx,DWORD PTR [eax]
  4144d1:	dec    esi
  4144d2:	push   ecx
  4144d3:	inc    eax
  4144d4:	cmp    DWORD PTR [ebp+0xe4fbc0a],esi
  4144da:	and    edx,eax
  4144dc:	push   0xfffffff3
  4144de:	fdiv   QWORD PTR [ebx-0x1bfb36c9]
  4144e4:	sub    ecx,eax
  4144e6:	mov    eax,ds:0x43431657
  4144eb:	adc    eax,ecx
  4144ed:	hlt    
  4144ee:	sub    bh,al
  4144f0:	rol    ah,1
  4144f2:	inc    ebp
  4144f3:	fcomp  DWORD PTR [edi]
  4144f5:	arpl   WORD PTR [ebx],di
  4144f7:	int3   
  4144f8:	inc    edi
  4144f9:	and    al,0x19
  4144fb:	jmp    0x4144f7
  4144fd:	jl     0x414566
  4144ff:	cli    
  414500:	gs mov al,0x31
  414503:	push   es
  414504:	test   al,0x6
  414506:	cli    
  414507:	or     ebp,DWORD PTR [esi+esi*8-0x55012324]
  41450e:	fisubr DWORD PTR [ebx+0x5133cf4]
  414514:	cmp    BYTE PTR [ecx-0x74],0xb4
  414518:	and    edi,DWORD PTR [edi]
  41451a:	mov    ch,0x7f
  41451c:	pop    ebx
  41451d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41451e:	xor    DWORD PTR [eax],ebp
  414520:	and    eax,0x6e1eb619
  414525:	mov    es,WORD PTR [ecx-0x43]
  414528:	sub    DWORD PTR [ebp+esi*1-0x30],esi
  41452c:	mov    BYTE PTR [ebx+edi*2],bh
  41452f:	adc    bh,BYTE PTR [edi]
  414531:	pop    edx
  414532:	jae    0x414542
  414534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414535:	sbb    DWORD PTR [ebp+0x75],ebx
  414538:	xchg   ebx,eax
  414539:	pop    ds
  41453a:	xchg   esp,eax
  41453b:	cmp    ecx,edi
  41453d:	sub    DWORD PTR [eax+0x22],0xfffffffe
  414541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414542:	cmp    ebx,DWORD PTR [ebp-0x4b6a0f94]
  414548:	push   0x69
  41454a:	addr16 ja 0x4145a7
  41454d:	test   esp,eax
  41454f:	xor    dl,BYTE PTR [edx]
  414551:	push   esi
  414552:	jb     0x414503
  414554:	adc    ch,BYTE PTR [edi-0x24]
  414557:	inc    edi
  414558:	mov    ch,0x45
  41455a:	xor    BYTE PTR [eax],cl
  41455c:	and    ch,BYTE PTR [ebx-0x6d]
  41455f:	or     eax,0xba60d5e
  414564:	retf   0x5361
  414567:	xchg   esi,esp
  414569:	mov    dx,0x7027
  41456d:	ret    0x7231
  414570:	inc    edi
  414571:	jbe    0x4145b3
  414573:	popf   
  414574:	jge    0x414589
  414576:	leave  
  414577:	mov    ds:0xc72b24d,al
  41457c:	cs ins BYTE PTR es:[edi],dx
  41457e:	mov    al,0xa3
  414580:	push   edi
  414581:	push   eax
  414582:	not    DWORD PTR [edx-0x5d]
  414585:	das    
  414586:	pushf  
  414587:	shl    BYTE PTR [edi+0x46],cl
  41458a:	sahf   
  41458b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41458c:	leave  
  41458d:	mov    al,0xac
  41458f:	mov    WORD PTR [esi+0x0],gs
  414592:	cwde   
  414593:	fwait
  414594:	pop    esp
  414595:	adc    ah,dh
  414597:	test   eax,0xeef62865
  41459c:	inc    eax
  41459d:	scas   eax,DWORD PTR es:[edi]
  41459e:	int    0x6
  4145a0:	mov    eax,ds:0x60bcd052
  4145a5:	pop    ecx
  4145a7:	mov    dl,0x9
  4145a9:	mov    bh,BYTE PTR [edx]
  4145ab:	cmp    DWORD PTR [edi*1-0x6007c6a7],ecx
  4145b2:	call   0x81e198db
  4145b7:	fwait
  4145b8:	xchg   ebp,eax
  4145b9:	mov    al,0x98
  4145bb:	jbe    0x414634
  4145bd:	test   al,0x10
  4145bf:	and    eax,0x46c492b
  4145c4:	inc    edx
  4145c5:	adc    al,0xae
  4145c7:	and    al,0x34
  4145c9:	fld    QWORD PTR [ebx-0x5e520381]
  4145cf:	das    
  4145d0:	sahf   
  4145d1:	sbb    al,0xb2
  4145d3:	(bad)  
  4145d4:	aas    
  4145d5:	sbb    eax,0xd56f9c42
  4145da:	push   ebp
  4145db:	scas   eax,DWORD PTR es:[edi]
  4145dc:	mov    eax,0x3686b9ec
  4145e1:	pop    ss
  4145e2:	xlat   BYTE PTR ds:[ebx]
  4145e3:	imul   eax,DWORD PTR [ecx+eax*4-0x7e0f160],0x5a6e60ad
  4145ee:	addr16 icebp 
  4145f0:	adc    al,0x4
  4145f2:	loope  0x414671
  4145f4:	cmp    bl,cl
  4145f6:	call   0xd372:0xde5f927a
  4145fd:	aaa    
  4145fe:	mov    bh,BYTE PTR [edx]
  414600:	push   esp
  414601:	pop    esp
  414602:	je     0x41458b
  414604:	xchg   BYTE PTR [esi+0xe],al
  414607:	outs   dx,DWORD PTR ds:[esi]
  414608:	imul   eax,DWORD PTR [eax],0xffffffd2
  41460b:	push   0xeed05053
  414610:	push   ecx
  414611:	dec    edi
  414612:	and    al,0x25
  414614:	ins    BYTE PTR es:[edi],dx
  414615:	loop   0x41465b
  414617:	loop   0x41459d
  414619:	bound  esp,QWORD PTR [edi]
  41461b:	push   esp
  41461c:	jo     0x4145ba
  41461e:	inc    esp
  41461f:	fnop   
  414621:	sbb    eax,0x2a061b11
  414626:	mov    bl,0x4b
  414628:	sahf   
  414629:	arpl   WORD PTR [eax-0x1ab8ee53],dx
  41462f:	push   ds
  414630:	push   ebx
  414631:	stc    
  414632:	jle    0x4145ca
  414634:	(bad)  
  414635:	adc    BYTE PTR [esi],0xee
  414638:	adc    al,0x90
  41463a:	mov    ss,WORD PTR [edi+0x4ddce443]
  414640:	xor    eax,edx
  414642:	sbb    edx,DWORD PTR [edi]
  414644:	cmp    al,0x4f
  414646:	popf   
  414647:	popf   
  414648:	test   esp,ebp
  41464a:	push   eax
  41464b:	dec    esi
  41464c:	ins    BYTE PTR es:[edi],dx
  41464d:	xchg   ebx,eax
  41464e:	je     0x414634
  414650:	xor    dh,cl
  414652:	or     eax,0xdb972206
  414657:	xchg   ecx,eax
  414658:	(bad)  
  414659:	rol    DWORD PTR [eax],1
  41465b:	xchg   DWORD PTR [esi],eax
  41465d:	(bad)  
  41465e:	mov    ds:0xf97fc5a7,eax
  414663:	push   edi
  414664:	or     BYTE PTR [edx+0x5f],ah
  414667:	xchg   ebp,eax
  414668:	cs dec ebp
  41466a:	xchg   esi,eax
  41466b:	xor    eax,0x6eb1a35
  414670:	lds    edx,FWORD PTR [esi-0x6a]
  414673:	pop    eax
  414674:	popa   
  414675:	sbb    esi,DWORD PTR [ebp-0x1f]
  414678:	into   
  414679:	mov    edi,0xa45a4b69
  41467e:	inc    esp
  41467f:	mov    ebx,0x32c53c46
  414684:	or     eax,0x6fdf97bd
  414689:	cmp    DWORD PTR [ebp-0x2b0a1916],0xffffffc3
  414690:	loopne 0x41467e
  414692:	adc    eax,0x35544c66
  414697:	jle    0x4146b7
  414699:	mov    esp,0xf6f30d51
  41469e:	and    ebp,edi
  4146a0:	xor    esp,DWORD PTR [ebp-0x358bb042]
  4146a6:	retf   
  4146a7:	pop    eax
  4146a8:	dec    ebx
  4146a9:	adc    BYTE PTR [edx],al
  4146ab:	pop    edx
  4146ac:	or     al,BYTE PTR [eax-0x36]
  4146af:	xchg   eax,edx
  4146b1:	dec    edi
  4146b2:	dec    esi
  4146b3:	jmp    0xc3db:0x3d02572
  4146ba:	mov    gs,esp
  4146bc:	mov    al,0xea
  4146be:	add    al,0x8d
  4146c0:	jb     0x41473c
  4146c2:	les    edx,FWORD PTR [edi+0x57]
  4146c5:	stos   BYTE PTR es:[edi],al
  4146c6:	xchg   esi,eax
  4146c7:	lahf   
  4146c8:	dec    ebx
  4146c9:	inc    esp
  4146ca:	mov    al,ds:0x31b03465
  4146cf:	or     edi,DWORD PTR [esi-0x7a]
  4146d2:	xchg   ebp,eax
  4146d3:	cdq    
  4146d4:	ret    
  4146d5:	stc    
  4146d6:	jmp    0xf1373838
  4146db:	retf   
  4146dc:	aas    
  4146dd:	jge    0x41471a
  4146df:	dec    edx
  4146e0:	outs   dx,BYTE PTR ds:[esi]
  4146e1:	in     eax,dx
  4146e2:	not    BYTE PTR [esi-0x7e]
  4146e5:	test   BYTE PTR [ebx+0x23],cl
  4146e8:	push   ds
  4146e9:	jnp    0x414761
  4146eb:	ret    0x8713
  4146ee:	pusha  
  4146ef:	or     bh,BYTE PTR [edx-0x1cc3bb7a]
  4146f5:	mov    ds:0xf35b1ae8,eax
  4146fa:	or     eax,0xd1968e35
  4146ff:	shr    DWORD PTR [edi+0x57],1
  414702:	or     ah,BYTE PTR ds:0x222535e9
  414708:	jno    0x4146b3
  41470a:	pop    edi
  41470b:	cli    
  41470c:	add    eax,0x1505b68e
  414711:	pop    edi
  414712:	stos   DWORD PTR es:[edi],eax
  414713:	push   es
  414714:	jg     0x41476e
  414716:	and    al,0xc
  414718:	jmp    0xa7035dbd
  41471d:	call   0x6ca4:0xeb3e66d
  414724:	mov    dh,0xd0
  414726:	dec    ecx
  414727:	mov    al,ds:0xd3d98aca
  41472c:	xor    esp,DWORD PTR [eax+0x4a8379b3]
  414732:	(bad)  
  414733:	ins    DWORD PTR es:[edi],dx
  414734:	stos   DWORD PTR es:[edi],eax
  414735:	loop   0x4146c7
  414737:	ret    0x291d
  41473a:	xor    eax,0x87f14451
  41473f:	mov    al,ds:0x1c0e2e3
  414744:	(bad)  
  414745:	fcom   DWORD PTR [edi]
  414747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414748:	jp     0x4146f8
  41474a:	outs   dx,DWORD PTR ds:[esi]
  41474b:	loope  0x414735
  41474d:	sbb    al,0xaf
  41474f:	data16 sub al,0x9d
  414752:	xor    DWORD PTR [esi],edx
  414754:	scas   eax,DWORD PTR es:[edi]
  414755:	shl    BYTE PTR [edi+0x350e2d53],cl
  41475b:	iret   
  41475c:	xchg   ebx,eax
  41475d:	mov    BYTE PTR [edi],cl
  41475f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414761:	cdq    
  414762:	js     0x414786
  414764:	pushf  
  414765:	cwde   
  414766:	jbe    0x4147e3
  414768:	call   DWORD PTR [edi+0x5be0e7d5]
  41476e:	sbb    eax,0x5d7fecf6
  414773:	push   ds
  414774:	(bad)  
  414776:	adc    ebx,eax
  414778:	dec    BYTE PTR [esi-0x80]
  41477b:	fidiv  DWORD PTR [edi-0xd]
  41477e:	push   0xfffffff9
  414780:	mov    edi,0xef3e1c86
  414785:	mov    eax,ds:0x4761e0e6
  41478a:	data16 xor al,0x63
  41478d:	jnp    0x414773
  41478f:	icebp  
  414790:	retf   0xdc0b
  414793:	(bad)  
  414794:	lds    edx,FWORD PTR [edx+eiz*8-0x4e595435]
  41479b:	loopne 0x414796
  41479d:	add    eax,edi
  41479f:	pusha  
  4147a0:	mov    esp,0x729546d4
  4147a5:	mov    DWORD PTR [edx],ebp
  4147a7:	inc    edi
  4147a8:	ja     0x4147c3
  4147aa:	pop    ebx
  4147ab:	jmp    0xb997:0x44f5392a
  4147b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b3:	aaa    
  4147b4:	mov    ebp,0xb74ee190
  4147b9:	cmc    
  4147ba:	inc    ebx
  4147bb:	mov    ebp,0xf86332bf
  4147c0:	arpl   WORD PTR [edx-0x3a5dd40b],cx
  4147c6:	pop    ecx
  4147c7:	outs   dx,DWORD PTR ds:[esi]
  4147c8:	test   eax,0x3ae81ab7
  4147cd:	fld    DWORD PTR [ebp+0x2580949e]
  4147d3:	xchg   edx,eax
  4147d4:	ror    DWORD PTR [eax],1
  4147d6:	loopne 0x414776
  4147d8:	rcr    BYTE PTR [ecx-0x36054ab6],1
  4147de:	ret    0xf1bf
  4147e1:	push   0x21
  4147e3:	cmp    bl,al
  4147e5:	retf   
  4147e6:	sub    ch,BYTE PTR [edx]
  4147e8:	icebp  
  4147e9:	loop   0x414867
  4147eb:	pop    ss
  4147ec:	fdiv   DWORD PTR [esp+ebx*1]
  4147ef:	shl    DWORD PTR [edi+0x293d5aba],0x9
  4147f6:	or     al,0x62
  4147f8:	push   edx
  4147f9:	aas    
  4147fa:	fsubr  QWORD PTR [esi]
  4147fc:	es add al,0x76
  4147ff:	add    DWORD PTR [edi],ebx
  414801:	or     bl,dl
  414803:	mov    eax,ds:0xccff8207
  414808:	or     eax,0xa970eb81
  41480d:	shl    DWORD PTR [edx-0x1a689584],1
  414813:	dec    ebx
  414814:	ss ins BYTE PTR es:[edi],dx
  414816:	xchg   BYTE PTR [esi-0xd],bl
  414819:	adc    ecx,0x404d8c41
  41481f:	or     al,0x69
  414821:	adc    al,0xb0
  414823:	adc    esp,DWORD PTR [edx]
  414825:	dec    ebp
  414826:	scas   eax,DWORD PTR es:[edi]
  414827:	xchg   edi,eax
  414828:	(bad)  
  414829:	xchg   ebp,eax
  41482a:	rcl    DWORD PTR [esi+esi*8-0x27caf15a],0xcf
  414832:	xchg   ebx,eax
  414834:	shr    BYTE PTR ds:0x27e2e260,cl
  41483a:	or     cl,BYTE PTR [esi]
  41483c:	outs   dx,DWORD PTR cs:[esi]
  41483e:	sbb    bl,al
  414840:	mov    al,ds:0xb87033b1
  414846:	xchg   ecx,eax
  414847:	mov    ecx,0x29c9f3e
  41484c:	xor    al,0xa5
  41484e:	mov    dl,0xf
  414850:	call   edx
  414852:	sti    
  414853:	mov    eax,ds:0x10144ea5
  414858:	out    0x4d,eax
  41485a:	add    eax,DWORD PTR [ebx+0x711956e3]
  414860:	in     eax,dx
  414861:	add    DWORD PTR [esi-0x48a7ca],edx
  414867:	mov    WORD PTR [edx+0x41603544],fs
  41486d:	loope  0x414824
  41486f:	push   0x872ca83a
  414874:	jmp    0x6ee66018
  414879:	cld    
  41487a:	and    al,0x90
  41487c:	clc    
  41487d:	idiv   BYTE PTR cs:[eax-0x2d]
  414881:	mov    dl,0xf3
  414883:	or     DWORD PTR [esi+0x13],ebp
  414886:	mov    ecx,esi
  414888:	jno    0x41487b
  41488a:	dec    edx
  41488b:	sbb    ebx,edi
  41488d:	push   esi
  41488e:	jmp    0x41488d
  414890:	dec    esp
  414891:	mov    bl,0x54
  414893:	outs   dx,DWORD PTR ds:[esi]
  414894:	stos   BYTE PTR es:[edi],al
  414895:	js     0x414910
  414897:	daa    
  414898:	or     BYTE PTR [edi-0x3f087587],0x50
  41489f:	dec    edx
  4148a0:	xlat   BYTE PTR ds:[ebx]
  4148a1:	les    esi,FWORD PTR [ecx+0x5962e27e]
  4148a7:	xor    DWORD PTR [esi+0x66],eax
  4148aa:	sbb    edi,DWORD PTR [ebx-0x21]
  4148ad:	jmp    0xa9a3:0xc434cb1b
  4148b4:	out    dx,al
  4148b5:	jmp    0x685df592
  4148ba:	cli    
  4148bb:	push   ds
  4148bc:	and    al,0xc3
  4148be:	(bad)  
  4148bf:	out    dx,eax
  4148c0:	retf   0x7366
  4148c3:	sub    cl,BYTE PTR [edx+ecx*8-0x5d7b678a]
  4148ca:	jecxz  0x41493f
  4148cc:	hlt    
  4148cd:	pop    DWORD PTR [ecx+0x60813859]
  4148d3:	test   DWORD PTR [eax+0x4ff5fdb0],edi
  4148d9:	inc    esi
  4148da:	jne    0x414879
  4148dc:	pop    es
  4148dd:	mov    cl,0xa8
  4148df:	jnp    0x414926
  4148e1:	test   al,0xff
  4148e3:	xor    cl,cl
  4148e5:	cmp    al,0xc3
  4148e7:	pop    edx
  4148e8:	rol    DWORD PTR [edx-0x70],cl
  4148eb:	or     al,0x57
  4148ed:	test   DWORD PTR [edx-0x666175ee],eax
  4148f3:	fnsave [ebp-0x57]
  4148f6:	mov    dl,0x8c
  4148f8:	ins    DWORD PTR es:[edi],dx
  4148f9:	cmp    eax,0x7dae976e
  4148fe:	mov    ch,0x62
  414900:	and    eax,0xa88d3df4
  414905:	mov    es,WORD PTR [ebx]
  414907:	dec    ebp
  414908:	and    eax,0x3096d427
  41490d:	jns    0x414984
  41490f:	(bad)  
  414910:	(bad)  
  414911:	xor    al,0xf3
  414913:	jg     0x4148b4
  414915:	add    al,0x6e
  414917:	pop    ebx
  414918:	int3   
  414919:	jp     0x4148d7
  41491b:	hlt    
  41491c:	push   0x3c
  41491e:	cmp    esp,DWORD PTR [edx]
  414920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414921:	xor    BYTE PTR [ebp+ecx*1+0x1eb206a3],dl
  414928:	xchg   ebx,eax
  414929:	es mov bh,cl
  41492c:	xchg   esp,eax
  41492d:	add    al,0xd7
  41492f:	xchg   DWORD PTR ss:[esp+ebx*1-0x21d67b86],ebx
  414937:	pop    ecx
  414938:	mov    esp,0xe5749720
  41493d:	jecxz  0x414922
  41493f:	jge    0x4149b3
  414941:	push   DWORD PTR [ebx+0x6b]
  414944:	fild   DWORD PTR [ecx+0x7526edb4]
  41494a:	mov    ds:0x948a17c7,al
  41494f:	mov    edx,ecx
  414951:	sub    eax,0x29af4362
  414956:	dec    eax
  414957:	daa    
  414958:	retf   
  414959:	test   al,0xb
  41495b:	fbld   TBYTE PTR [eax-0x6207ac3c]
  414961:	pushf  
  414962:	mov    ah,0x9d
  414964:	adc    bl,bh
  414966:	pop    ecx
  414967:	lahf   
  414968:	enter  0x368b,0xc0
  41496c:	add    ch,BYTE PTR [esi]
  41496e:	popf   
  41496f:	sub    al,0xb4
  414971:	shr    DWORD PTR [ebp+0x6d],1
  414974:	and    eax,DWORD PTR [eax]
  414976:	(bad)  
  414977:	sub    eax,0x23994b32
  41497c:	out    0xda,eax
  41497e:	pop    esp
  41497f:	inc    edx
  414980:	and    dh,0x26
  414983:	mov    cl,0x3a
  414985:	mov    ecx,DWORD PTR [esi]
  414987:	pop    ebx
  414988:	and    esp,esi
  41498a:	imul   esp,DWORD PTR [edx+0x77],0x75
  41498e:	add    eax,0x7383e04
  414993:	mov    DWORD PTR [ebx],ecx
  414995:	sbb    ebx,ecx
  414997:	fsubr  QWORD PTR [edi+0x55]
  41499a:	xor    BYTE PTR [ebx-0x247be86b],bh
  4149a0:	jno    0x4149cb
  4149a2:	dec    ebp
  4149a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a4:	(bad)  
  4149a6:	dec    ebp
  4149a7:	std    
  4149a8:	jae    0x4149d5
  4149aa:	(bad)  
  4149ab:	pop    ebp
  4149ac:	or     esp,DWORD PTR [esi+ebx*8+0x60]
  4149b0:	and    eax,DWORD PTR [ebp+0xc48b2f8]
  4149b6:	jmp    0x414a1c
  4149b8:	ins    DWORD PTR es:[edi],dx
  4149b9:	dec    edx
  4149ba:	sahf   
  4149bb:	fwait
  4149bc:	or     eax,0xb02066d1
  4149c1:	rcr    esp,0xb9
  4149c4:	inc    esp
  4149c5:	jmp    0xc0966b0c
  4149ca:	mov    eax,DWORD PTR [ebx+0xe]
  4149cd:	mov    ebp,0x7f0dc486
  4149d2:	xor    ecx,ebx
  4149d4:	pop    edi
  4149d5:	push   es
  4149d6:	sbb    ebx,ecx
  4149d8:	out    0xb1,eax
  4149da:	xor    BYTE PTR [ebp+0x1e],dh
  4149dd:	pop    eax
  4149de:	dec    edx
  4149df:	push   0xfe353ef4
  4149e4:	cmp    esi,DWORD PTR [edx+eiz*2+0x65f4abc]
  4149eb:	loop   0x414994
  4149ed:	pop    ebp
  4149ee:	adc    BYTE PTR [ebx+0x14],bl
  4149f1:	mov    ecx,0x98337b25
  4149f6:	call   0xd1cbad54
  4149fb:	mov    BYTE PTR [esi-0x45],ch
  4149fe:	je     0x4149f5
  414a00:	adc    al,0x99
  414a02:	pop    es
  414a03:	xchg   esi,eax
  414a04:	mov    es,WORD PTR [edx-0x2fa8ced]
  414a0a:	adc    al,0xc9
  414a0c:	inc    esp
  414a0d:	inc    esp
  414a0e:	and    edi,DWORD PTR [edi]
  414a10:	mov    ds:0x926051e,al
  414a15:	dec    ebx
  414a16:	scas   al,BYTE PTR es:[edi]
  414a17:	push   eax
  414a18:	shr    DWORD PTR [eax+edx*1+0x3c47f76d],1
  414a1f:	jno    0x4149bf
  414a21:	xlat   BYTE PTR ds:[ebx]
  414a22:	jle    0x414a36
  414a24:	clc    
  414a25:	mov    bh,0x5c
  414a27:	pop    ebx
  414a28:	xlat   BYTE PTR ds:[ebx]
  414a29:	sub    bh,BYTE PTR [edx+0x36]
  414a2c:	leave  
  414a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a2e:	jo     0x4149b6
  414a30:	fcmovnu st,st(7)
  414a32:	push   eax
  414a33:	adc    ecx,edx
  414a35:	mov    al,ds:0xf9a109c6
  414a3a:	jnp    0x414a22
  414a3c:	push   0x6e
  414a3e:	int3   
  414a3f:	dec    ebp
  414a40:	aaa    
  414a41:	std    
  414a42:	lods   eax,DWORD PTR ds:[esi]
  414a43:	jp     0x4149ca
  414a45:	xor    al,0xa
  414a47:	jle    0x414ab7
  414a49:	shl    ecx,0xe5
  414a4c:	leave  
  414a4d:	dec    esp
  414a4e:	scas   eax,DWORD PTR es:[edi]
  414a4f:	mov    edi,0xe966929a
  414a54:	sub    eax,0x71698060
  414a59:	es sti 
  414a5b:	and    ah,bl
  414a5d:	cmp    DWORD PTR [ebx+0x6d],ebp
  414a60:	sub    eax,0xe53656c5
  414a65:	imul   BYTE PTR [edx-0xe55ffb7]
  414a6b:	call   0xb7a6:0x2cf4e3d
  414a72:	cs xchg esp,eax
  414a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a75:	jbe    0x414a9d
  414a77:	xchg   BYTE PTR [ebp+0x1cb633c1],dh
  414a7d:	stos   DWORD PTR es:[edi],eax
  414a7e:	sbb    esi,DWORD PTR [ebp-0x4b5228e4]
  414a84:	adc    eax,0x3503ecad
  414a89:	aaa    
  414a8a:	mov    DWORD PTR [edi-0xa],0x39e0781a
  414a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a92:	jne    0x414a80
  414a94:	cmp    bl,BYTE PTR [ecx]
  414a96:	(bad)  
  414a97:	pop    ss
  414a98:	sub    eax,ebx
  414a9a:	retf   0xe8d0
  414a9d:	(bad)  
  414a9e:	es pop es
  414aa0:	xchg   edi,ecx
  414aa2:	ja     0x414b20
  414aa4:	sbb    bh,BYTE PTR [edi-0x4fa6389d]
  414aaa:	aam    0x24
  414aac:	push   esp
  414aad:	in     al,0x89
  414aaf:	es stc 
  414ab1:	call   0x5e6e:0x80d941ae
  414ab8:	popf   
  414ab9:	es add al,0xdd
  414abd:	pop    ds
  414abe:	in     al,0xc8
  414ac0:	mov    bl,0x2e
  414ac2:	popa   
  414ac3:	dec    esi
  414ac4:	sub    esp,DWORD PTR [edi-0x375fb0fa]
  414aca:	in     al,0xaa
  414acc:	inc    esi
  414acd:	scas   eax,DWORD PTR es:[edi]
  414ace:	push   0xffffffd0
  414ad0:	stos   DWORD PTR es:[edi],eax
  414ad1:	(bad)  
  414ad2:	and    BYTE PTR [ebp-0x3b393f94],dh
  414ad8:	ret    0x1bf3
  414adb:	lock xchg edi,eax
  414add:	cwde   
  414ade:	sbb    eax,0x153e026e
  414ae3:	(bad)  
  414ae4:	(bad)  
  414ae5:	sub    ebp,DWORD PTR [ebx]
  414ae7:	aaa    
  414ae8:	push   ds
  414ae9:	lds    ecx,FWORD PTR ds:0x9abb0cbb
  414aef:	push   edx
  414af0:	adc    DWORD PTR [eax-0x69c5c9e5],eax
  414af6:	jmp    0xf65487ea
  414afb:	push   cs
  414afc:	dec    ecx
  414afd:	(bad)  
  414aff:	inc    esp
  414b00:	pop    esp
  414b01:	xchg   edi,eax
  414b02:	outs   dx,BYTE PTR ds:[esi]
  414b03:	push   0x27e5f9cc
  414b08:	push   eax
  414b09:	(bad)  
  414b0a:	cmp    WORD PTR [edi-0x332506ab],di
  414b11:	xchg   DWORD PTR [edi+0x5ea4d984],edx
  414b17:	imul   ecx,esp,0xdd7a07ac
  414b1d:	jmp    0x414aed
  414b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b20:	imul   esi,DWORD PTR [edi-0x2],0xffffffa3
  414b24:	in     al,0x0
  414b26:	out    0xfd,al
  414b28:	or     eax,0x932b0258
  414b2d:	pusha  
  414b2e:	int    0x77
  414b30:	inc    ebx
  414b31:	(bad)  
  414b32:	cld    
  414b33:	pop    ebp
  414b34:	out    0xc3,al
  414b36:	xchg   ebx,eax
  414b37:	inc    ecx
  414b38:	nop
  414b39:	loopne 0x414bb9
  414b3b:	or     bl,ch
  414b3d:	mov    eax,ds:0x1667de78
  414b42:	fisub  DWORD PTR [eax]
  414b44:	ja     0x414add
  414b46:	shr    DWORD PTR [edi-0x3160218e],0xbf
  414b4d:	jnp    0x414b9e
  414b4f:	retf   0xc3ab
  414b52:	mov    ecx,0xbc6323c6
  414b57:	cld    
  414b58:	test   DWORD PTR [eax],ebx
  414b5a:	dec    edi
  414b5b:	mov    al,ds:0x1cff6c55
  414b60:	ds (bad) 
  414b62:	out    dx,al
  414b63:	inc    ecx
  414b64:	adc    DWORD PTR ds:[edx-0x5a72d265],0xfffffff9
  414b6c:	test   al,0x58
  414b6e:	data16 daa 
  414b70:	xor    BYTE PTR [edx],cl
  414b72:	or     BYTE PTR [edx+ebp*1+0x32],bh
  414b76:	cmp    eax,0x72bb1f2c
  414b7b:	jb     0x414bdf
  414b7d:	outs   dx,DWORD PTR ds:[esi]
  414b7e:	xor    eax,0xc120993f
  414b83:	xchg   edx,eax
  414b84:	xor    ah,BYTE PTR [edx]
  414b86:	xchg   esi,eax
  414b87:	and    bl,ch
  414b89:	je     0x414b24
  414b8b:	dec    edi
  414b8c:	jg     0x414b2a
  414b8e:	lahf   
  414b8f:	sbb    bh,al
  414b91:	shl    ebp,cl
  414b93:	or     esp,eax
  414b95:	xchg   edi,eax
  414b96:	dec    esi
  414b97:	out    dx,al
  414b98:	cmp    DWORD PTR [ecx],ecx
  414b9a:	sbb    dl,BYTE PTR [esi]
  414b9c:	and    al,0x4f
  414b9e:	cdq    
  414b9f:	neg    BYTE PTR [eax]
  414ba1:	and    eax,0xa3b37fc3
  414ba6:	and    ebx,DWORD PTR [edx+eax*2-0x1b]
  414baa:	sti    
  414bab:	add    DWORD PTR ds:0x9ceee1b6,edi
  414bb1:	xor    al,0xda
  414bb3:	es (bad) 
  414bb5:	rcl    BYTE PTR [edi],1
  414bb7:	jo     0x414bcb
  414bb9:	xor    al,0x13
  414bbb:	or     eax,0x5712f4f3
  414bc0:	push   edx
  414bc1:	sar    BYTE PTR [eax+ebx*4-0x14a6cb95],1
  414bc8:	retf   0xc6aa
  414bcb:	xchg   ebp,eax
  414bcc:	sub    edx,0x17a04951
  414bd2:	lock xchg BYTE PTR [eax+esi*2],dh
  414bd6:	xor    bh,bl
  414bd8:	out    0xc5,eax
  414bda:	pop    ecx
  414bdb:	(bad)  
  414bdc:	dec    ebp
  414bdd:	jl     0x414bd4
  414bdf:	push   ecx
  414be0:	out    0x97,eax
  414be2:	mov    bh,0xc
  414be4:	sbb    eax,0xa80877aa
  414be9:	xchg   edi,eax
  414bea:	or     al,0x1c
  414bec:	xor    esi,esp
  414bee:	lahf   
  414bef:	jp     0x414c5a
  414bf1:	adc    al,0xc8
  414bf3:	fwait
  414bf4:	(bad)  
  414bf5:	sbb    eax,0x1bfa48c3
  414bfa:	push   edi
  414bfb:	sbb    BYTE PTR [eax-0x21de5d2d],dl
  414c01:	add    al,0x86
  414c03:	out    dx,al
  414c04:	lock sbb DWORD PTR ds:0x83ad1843,0x560b31c5
  414c0f:	repnz or BYTE PTR [ecx],ah
  414c12:	jl     0x414c33
  414c14:	mov    ecx,0x7d3f20f2
  414c19:	xor    bl,bl
  414c1b:	pop    esp
  414c1c:	sbb    DWORD PTR [edx+0x1a],esp
  414c1f:	leave  
  414c20:	sub    al,0xe7
  414c22:	mov    esp,0x2652fde3
  414c27:	cmc    
  414c28:	test   ah,dh
  414c2a:	(bad)  
  414c2b:	in     eax,dx
  414c2c:	ins    DWORD PTR es:[edi],dx
  414c2d:	ins    BYTE PTR es:[edi],dx
  414c2e:	inc    edx
  414c2f:	dec    esi
  414c30:	and    ebx,esp
  414c32:	dec    ecx
  414c33:	retf   0xed1a
  414c36:	dec    ebp
  414c37:	cld    
  414c38:	pusha  
  414c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c3a:	std    
  414c3b:	(bad)  
  414c3c:	fmul   QWORD PTR [esi]
  414c3e:	inc    ebx
  414c3f:	sahf   
  414c40:	mov    edi,0xd1ae8bb1
  414c45:	dec    ebx
  414c46:	inc    esp
  414c47:	mov    edx,0x2b01e89f
  414c4c:	xor    eax,DWORD PTR ds:[edi-0x55]
  414c50:	add    eax,0x372ad0ae
  414c55:	add    cl,BYTE PTR [eax+0x11]
  414c58:	rcl    BYTE PTR [eax+0x36],cl
  414c5b:	fistp  DWORD PTR [edx+0x4ad7b98c]
  414c61:	cvttps2pi mm1,QWORD PTR [edi]
  414c64:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c66:	or     eax,0x46295e83
  414c6b:	push   eax
  414c6c:	mov    ebx,0xa4542ed5
  414c71:	or     al,0x22
  414c73:	out    dx,al
  414c74:	pop    es
  414c75:	or     eax,DWORD PTR [esi]
  414c77:	in     al,dx
  414c78:	jecxz  0x414ca5
  414c7a:	daa    
  414c7b:	shr    edx,cl
  414c7d:	xchg   esi,eax
  414c7e:	add    BYTE PTR [ecx],ch
  414c80:	mov    DWORD PTR ds:0x947f0505,ebx
  414c86:	je     0x414ca0
  414c88:	std    
  414c89:	pusha  
  414c8a:	clc    
  414c8b:	cdq    
  414c8c:	or     bl,BYTE PTR [ebx-0x5d]
  414c8f:	jecxz  0x414c93
  414c91:	scas   al,BYTE PTR es:[edi]
  414c92:	addr16 fcmovb st,st(3)
  414c95:	stos   BYTE PTR es:[edi],al
  414c96:	leave  
  414c97:	sbb    al,0xdd
  414c99:	neg    BYTE PTR [edi]
  414c9b:	mov    ebx,0x4d7fa250
  414ca0:	jp     0x414c49
  414ca2:	xchg   esp,eax
  414ca3:	mov    bl,0x1c
  414ca5:	lds    esi,FWORD PTR [ebx+0x58a2c25f]
  414cab:	mov    esp,0x46253519
  414cb0:	loope  0x414c76
  414cb2:	dec    edi
  414cb3:	dec    ebp
  414cb4:	mov    ebp,0xf3b341c6
  414cb9:	push   0xffffffc7
  414cbb:	add    dl,BYTE PTR ds:0x99967277
  414cc1:	add    eax,0x696fbd5f
  414cc6:	dec    eax
  414cc7:	retf   0x58a1
  414cca:	pusha  
  414ccb:	pop    es
  414ccc:	cli    
  414ccd:	icebp  
  414cce:	inc    ecx
  414ccf:	cs jbe 0x414cac
  414cd2:	or     BYTE PTR [ecx],ah
  414cd4:	xchg   esp,eax
  414cd5:	lods   al,BYTE PTR ds:[esi]
  414cd6:	ret    0xe194
  414cd9:	iret   
  414cda:	out    dx,eax
  414cdb:	mov    BYTE PTR [eax-0x54b47f39],bh
  414ce1:	push   es
  414ce2:	stos   BYTE PTR es:[edi],al
  414ce3:	test   al,0xc
  414ce5:	into   
  414ce6:	push   edi
  414ce7:	jg     0x414cb5
  414ce9:	cmp    cl,BYTE PTR [esi]
  414ceb:	or     edi,DWORD PTR [edi-0x1e]
  414cee:	xchg   ebx,eax
  414cef:	loope  0x414d28
  414cf1:	sub    bl,BYTE PTR [ecx-0x32]
  414cf4:	mov    edx,0x8291f75c
  414cf9:	add    BYTE PTR [eax+edi*1],dh
  414cfc:	mov    ds:0x631aec3e,al
  414d01:	in     al,0x5f
  414d03:	mov    ch,0xbb
  414d05:	mov    bl,0x8
  414d07:	adc    al,0xcd
  414d09:	stc    
  414d0a:	out    0xc2,al
  414d0c:	xchg   edx,eax
  414d0d:	jns    0x414d11
  414d0f:	lea    eax,[eax+0x2e9700e6]
  414d15:	sbb    bh,bh
  414d17:	cmp    BYTE PTR [eax-0x2e],bl
  414d1a:	push   edx
  414d1b:	dec    edi
  414d1c:	repnz jecxz 0x414cb2
  414d1f:	test   eax,0x564e9f66
  414d24:	mov    al,0x50
  414d26:	hlt    
  414d27:	inc    ecx
  414d28:	clc    
  414d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d2a:	xlat   BYTE PTR ds:[ebx]
  414d2b:	mov    esi,0x9c68ca1d
  414d30:	inc    ecx
  414d31:	loope  0x414cd6
  414d33:	xor    cl,bl
  414d35:	jnp    0x414d97
  414d37:	outs   dx,BYTE PTR ds:[esi]
  414d38:	cmp    ebx,DWORD PTR [esi-0x2fc222c3]
  414d3e:	aad    0x77
  414d40:	jne    0x414d8a
  414d42:	sub    eax,DWORD PTR [ecx-0x23f61e7c]
  414d48:	inc    eax
  414d49:	ret    
  414d4a:	jmp    FWORD PTR [esi]
  414d4c:	mov    ah,BYTE PTR [edx+0x75]
  414d4f:	pop    eax
  414d50:	cmp    ecx,DWORD PTR [edi+0x48]
  414d53:	cmp    al,cl
  414d55:	inc    eax
  414d56:	mov    bl,0x87
  414d58:	test   BYTE PTR [eax],bl
  414d5a:	cmp    al,0x4a
  414d5c:	push   esp
  414d5d:	test   BYTE PTR [ecx-0x3e6fe14],dl
  414d63:	add    eax,0x54023376
  414d68:	mul    BYTE PTR [edi-0x38db15f7]
  414d6e:	mov    edi,0x1708b2d4
  414d73:	inc    edx
  414d74:	adc    edi,DWORD PTR [eax+0xa705024]
  414d7a:	lods   al,BYTE PTR ds:[esi]
  414d7b:	popf   
  414d7c:	mov    ds:0xe12df956,al
  414d81:	imul   esi,DWORD PTR cs:[eax+0x7fc40ac6],0x4b
  414d89:	adc    esp,DWORD PTR [ecx]
  414d8b:	mov    ds:0x1f3abaee,al
  414d90:	dec    edx
  414d91:	and    BYTE PTR ds:0xfe012024,bh
  414d97:	dec    ebp
  414d98:	xchg   ebp,eax
  414d99:	inc    ebx
  414d9a:	adc    eax,0xc4fcc6d8
  414d9f:	push   edi
  414da0:	sub    eax,eax
  414da2:	mov    eax,0xae8035ec
  414da7:	xchg   esi,eax
  414da8:	jge    0x414ddd
  414daa:	jbe    0x414d96
  414dac:	sbb    ebp,DWORD PTR [ebx]
  414dae:	cmp    DWORD PTR [ecx],0xffffff9c
  414db1:	and    BYTE PTR [edx],al
  414db3:	mov    esp,0x11d5e92a
  414db8:	xor    esi,DWORD PTR [ebx+eax*8+0x3c]
  414dbc:	mov    ecx,0xecabe2ac
  414dc1:	inc    ebx
  414dc2:	push   0xbb6d11b4
  414dc7:	cdq    
  414dc8:	mov    cl,0x6f
  414dca:	stos   DWORD PTR es:[edi],eax
  414dcb:	pop    eax
  414dcc:	add    DWORD PTR [ecx+0x5970084],esp
  414dd2:	fidiv  WORD PTR [ebp+0x14]
  414dd5:	adc    BYTE PTR [esi+0x3],ch
  414dd8:	lea    edi,[ecx-0x73dbb8b3]
  414dde:	sahf   
  414ddf:	jo     0x414ddb
  414de1:	add    dl,bl
  414de3:	enter  0xf7ad,0x6f
  414de7:	push   esp
  414de8:	call   0x6a58:0x77991374
  414def:	scas   eax,DWORD PTR es:[edi]
  414df0:	nop
  414df1:	not    ebx
  414df3:	push   0xffffffb5
  414df5:	iret   
  414df6:	and    eax,0x627a829e
  414dfb:	call   0xec5:0x6b7d17c4
  414e02:	(bad)  
  414e04:	push   ebx
  414e05:	dec    edi
  414e06:	pop    esp
  414e07:	fstp   TBYTE PTR [edx+0x210b31ea]
  414e0d:	out    dx,eax
  414e0e:	mov    WORD PTR fs:[esi+0xfb3cc7],ss
  414e15:	(bad)  
  414e16:	arpl   cx,si
  414e18:	push   es
  414e19:	push   ebp
  414e1a:	outs   dx,DWORD PTR ds:[esi]
  414e1c:	hlt    
  414e1d:	cwde   
  414e1e:	aas    
  414e1f:	(bad)  
  414e20:	retf   0x467a
  414e23:	shl    DWORD PTR [eax],cl
  414e25:	retf   
  414e26:	sub    al,0x8
  414e28:	cwde   
  414e29:	pop    ecx
  414e2a:	pop    eax
  414e2b:	xchg   al,al
  414e2d:	mov    edi,eax
  414e2f:	cmp    DWORD PTR [ebx+ebp*2-0x6cff1eeb],0xbdb32329
  414e3a:	pop    esp
  414e3b:	mov    dl,0xb8
  414e3d:	mov    ah,0x3c
  414e3f:	sub    eax,0xddf0eda4
  414e44:	pop    eax
  414e45:	push   esp
  414e46:	fistp  QWORD PTR [esi+0x49]
  414e49:	sub    bl,ah
  414e4b:	adc    ecx,DWORD PTR [ecx]
  414e4d:	push   esp
  414e4e:	cmp    BYTE PTR [ebx+0x7f],0x95
  414e52:	int3   
  414e53:	jg     0x414df0
  414e55:	add    bl,BYTE PTR [ebp+eax*4-0x24]
  414e59:	and    eax,0xd25e3ea1
  414e5e:	xor    ch,BYTE PTR [edx-0x57]
  414e61:	push   es
  414e62:	and    ebx,eax
  414e64:	jle    0x414def
  414e66:	mov    es,WORD PTR [ecx]
  414e68:	inc    ebx
  414e69:	or     bl,ch
  414e6b:	xor    eax,ebp
  414e6d:	mov    cl,0xd4
  414e6f:	fimul  DWORD PTR [edx]
  414e71:	or     al,0x62
  414e73:	push   ds
  414e74:	ins    BYTE PTR es:[edi],dx
  414e75:	jae    0x414e37
  414e77:	(bad)  
  414e78:	(bad)  
  414e79:	jmp    0x9f4d:0xa06d7e7
  414e80:	xchg   esi,eax
  414e81:	mov    BYTE PTR gs:[edx-0x19],dl
  414e85:	push   ds
  414e86:	cdq    
  414e87:	xor    eax,0x73aa971f
  414e8c:	fbstp  TBYTE PTR [ecx+0x12a487a2]
  414e92:	push   0x33cb0de9
  414e97:	dec    ecx
  414e98:	xor    dl,BYTE PTR [ecx+0x103371c8]
  414e9e:	dec    eax
  414e9f:	adc    eax,0x1c28bc90
  414ea4:	fs fwait
  414ea6:	and    DWORD PTR [esi+ecx*8],edx
  414ea9:	adc    BYTE PTR [ebx+0xd],0xe7
  414ead:	add    BYTE PTR [ebx],al
  414eaf:	xchg   ebp,eax
  414eb0:	or     al,BYTE PTR [ecx+0x149dedac]
  414eb6:	imul   edx,DWORD PTR [ecx+0xfe57392],0xe9eaf3d4
  414ec0:	pop    esi
  414ec1:	outs   dx,BYTE PTR ds:[esi]
  414ec2:	mov    ?,edi
  414ec4:	loop   0x414f05
  414ec6:	js     0x414e81
  414ec8:	pop    es
  414ec9:	retf   
  414eca:	push   eax
  414ecb:	dec    ebp
  414ecc:	test   al,0x9b
  414ece:	out    0xb0,eax
  414ed0:	outs   dx,DWORD PTR ds:[esi]
  414ed1:	xchg   edx,eax
  414ed2:	cdq    
  414ed3:	dec    esi
  414ed4:	mov    ah,0x20
  414ed6:	les    eax,FWORD PTR [edi+0x398bbf45]
  414edc:	aad    0xce
  414ede:	inc    ecx
  414edf:	shl    ebx,1
  414ee1:	cld    
  414ee2:	xchg   ebp,eax
  414ee3:	push   cs
  414ee4:	ja     0x414e82
  414ee6:	push   eax
  414ee7:	inc    eax
  414ee8:	and    eax,ebx
  414eea:	int3   
  414eeb:	xor    esp,DWORD PTR [ecx+0x7485334d]
  414ef1:	dec    edx
  414ef2:	ins    DWORD PTR es:[edi],dx
  414ef3:	pop    ebx
  414ef4:	mov    ecx,0xd6341b7a
  414ef9:	call   FWORD PTR [ebx+0x2f]
  414efc:	mov    ch,0x4a
  414efe:	fcom   QWORD PTR [esi]
  414f00:	pop    ecx
  414f01:	mov    ebx,0xfd74b193
  414f06:	xor    DWORD PTR [ebx-0x2],ebx
  414f09:	in     eax,0x82
  414f0b:	push   eax
  414f0c:	push   0x9adbef5a
  414f11:	pop    ds
  414f12:	pop    es
  414f13:	pop    ebp
  414f14:	imul   ebx,ebx,0xea30ffb7
  414f1a:	xchg   esp,edx
  414f1c:	xchg   BYTE PTR [ecx-0x3b],bh
  414f1f:	(bad)  
  414f20:	(bad)  
  414f21:	fcomp  st(3)
  414f23:	scas   eax,DWORD PTR es:[edi]
  414f24:	addr16 xchg ecx,eax
  414f26:	test   BYTE PTR [ebp+edx*1-0x39faf0e3],bl
  414f2d:	sbb    al,0x22
  414f2f:	adc    eax,0xe6e928fb
  414f34:	ja     0x414f23
  414f36:	int3   
  414f37:	push   es
  414f38:	sub    esi,ebx
  414f3a:	or     eax,0x37fddbea
  414f3f:	and    eax,0xb64165af
  414f44:	and    BYTE PTR [esp+ebx*8-0x9],dl
  414f48:	sub    eax,0x954906bd
  414f4d:	sub    esi,esp
  414f4f:	in     al,0xf4
  414f51:	stos   DWORD PTR es:[edi],eax
  414f52:	dec    esp
  414f53:	sbb    BYTE PTR [edi+0x380ad1b6],dh
  414f59:	mov    BYTE PTR [ebx],ch
  414f5b:	mov    bh,BYTE PTR [ebx-0x70fa74eb]
  414f61:	pop    esp
  414f62:	fmulp  st(7),st
  414f64:	shl    BYTE PTR [eax-0x295a1845],cl
  414f6a:	xchg   ebx,eax
  414f6b:	xchg   esi,eax
  414f6c:	js     0x414fbf
  414f6e:	push   edx
  414f6f:	jae    0x414f2a
  414f71:	ins    DWORD PTR es:[edi],dx
  414f72:	fsubr  QWORD PTR [edx-0x60]
  414f75:	jo     0x414f9f
  414f77:	loope  0x414f93
  414f79:	adc    BYTE PTR [edi],bl
  414f7b:	shl    DWORD PTR [ebp-0x680dcca4],0x7d
  414f82:	cmp    al,0x9f
  414f84:	sbb    al,0x2c
  414f86:	lock dec edx
  414f88:	xchg   BYTE PTR [edx+0x3e1e6c0],cl
  414f8e:	adc    BYTE PTR [ecx-0x7a],cl
  414f91:	cs into 
  414f93:	sub    ebp,eax
  414f95:	cmp    esp,DWORD PTR [ebx+0x66]
  414f98:	iret   
  414f99:	mov    cl,0x16
  414f9b:	dec    esp
  414f9c:	fwait
  414f9d:	cli    
  414f9e:	mov    ah,0x9f
  414fa0:	je     0x414fdf
  414fa2:	xchg   ecx,eax
  414fa3:	sti    
  414fa4:	clc    
  414fa5:	push   ss
  414fa6:	ins    DWORD PTR es:[edi],dx
  414fa7:	(bad)  
  414fa8:	das    
  414fa9:	aad    0xaa
  414fab:	xchg   edi,esp
  414fad:	aad    0x3
  414faf:	jne    0x41502e
  414fb1:	cld    
  414fb2:	dec    eax
  414fb3:	loope  0x414f35
  414fb5:	jecxz  0x414fae
  414fb7:	sub    DWORD PTR [eax-0x51],ebp
  414fba:	loope  0x414f72
  414fbc:	jecxz  0x414fb3
  414fbe:	mov    al,ds:0xbcd32f67
  414fc3:	and    BYTE PTR [ecx-0x3269856e],bl
  414fc9:	fcmovu st,st(6)
  414fcb:	inc    ebp
  414fcc:	xchg   BYTE PTR [esi-0x4aeddf2c],bh
  414fd2:	sub    eax,0x8651fd69
  414fd7:	mov    eax,ds:0x99265fdc
  414fdd:	loope  0x414fed
  414fdf:	inc    esp
  414fe0:	cmc    
  414fe1:	dec    eax
  414fe2:	addr16 shl ah,0x8e
  414fe6:	or     al,BYTE PTR [eax-0x31a2e89a]
  414fec:	cmp    ah,cl
  414fee:	mov    DWORD PTR [edi+0x4d],esp
  414ff1:	cli    
  414ff2:	arpl   WORD PTR [esi+ebx*2+0x786e1331],sp
  414ff9:	fisttp DWORD PTR [ecx-0x6d]
  414ffc:	sti    
  414ffd:	mov    fs,WORD PTR [ebx-0x53538b70]
  415003:	and    dh,al
  415005:	imul   edx,edi,0x6c0fd0f8
  41500b:	test   eax,0x8c4ac608
  415010:	nop
  415011:	push   0x43
  415013:	ss inc ebp
  415015:	xchg   BYTE PTR [ecx-0x4d574e96],dh
  41501b:	iret   
  41501c:	pushf  
  41501d:	mov    ecx,0x7d33646
  415022:	push   ebp
  415023:	jnp    0x415042
  415025:	ja     0x41507b
  415027:	dec    edx
  415028:	jge    0x4150a9
  41502a:	mov    ch,0x5e
  41502c:	cmp    esp,DWORD PTR [edi]
  41502e:	dec    ecx
  41502f:	hlt    
  415030:	ins    BYTE PTR es:[edi],dx
  415031:	rcr    BYTE PTR ds:0xd1162292,cl
  415037:	iret   
  415038:	push   0x898d811f
  41503d:	xor    bh,BYTE PTR [esi-0x44]
  415040:	in     al,0x93
  415042:	sbb    DWORD PTR [eax],esp
  415044:	loope  0x414ff6
  415046:	push   es
  415047:	xor    al,0xd5
  415049:	mov    bl,0x69
  41504b:	sbb    esp,DWORD PTR [eax+0x3e]
  41504e:	std    
  41504f:	test   edx,ebp
  415051:	fs or  eax,0xa746f138
  415057:	xchg   esi,eax
  415058:	and    DWORD PTR [eax-0x2d],eax
  41505b:	jno    0x415055
  41505d:	popa   
  41505e:	js     0x41502e
  415060:	(bad)  
  415061:	sbb    BYTE PTR [ebx+0x4f278a40],bh
  415067:	aaa    
  415068:	xchg   ebp,eax
  415069:	sti    
  41506a:	outs   dx,BYTE PTR ds:[esi]
  41506b:	or     dh,BYTE PTR [ebp-0x549441d4]
  415071:	cld    
  415072:	shr    BYTE PTR [ebx+0x631d7063],cl
  415078:	push   cs
  415079:	jmp    0x4150a2
  41507b:	sahf   
  41507c:	xchg   ebp,eax
  41507d:	mov    ecx,0x7eb58d9d
  415082:	cmc    
  415083:	(bad)
  415086:	fwait
  415087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415088:	(bad)  
  415089:	adc    al,0x4a
  41508b:	dec    edi
  41508c:	enter  0xc658,0x20
  415090:	ins    DWORD PTR es:[edi],dx
  415091:	loopne 0x415097
  415093:	xchg   ebp,eax
  415094:	data16 jp 0x415095
  415097:	push   ebp
  415098:	aaa    
  415099:	and    al,BYTE PTR [edi-0x4d878cba]
  41509f:	inc    eax
  4150a0:	pop    esi
  4150a1:	jmp    0x44fcaf26
  4150a6:	into   
  4150a7:	outs   dx,BYTE PTR ds:[esi]
  4150a8:	push   ds
  4150a9:	gs test dh,dh
  4150ac:	xchg   DWORD PTR [esp+eiz*4],edi
  4150af:	retf   
  4150b0:	adc    ecx,DWORD PTR [ecx+0x71]
  4150b3:	(bad)  
  4150b4:	pop    esp
  4150b5:	dec    eax
  4150b6:	mov    esp,0x5d32164
  4150bb:	ret    
  4150bc:	stc    
  4150bd:	sub    dl,BYTE PTR [edx+0x47952bd3]
  4150c3:	push   cs
  4150c4:	pop    ss
  4150c5:	js     0x415083
  4150c7:	mov    ebx,0xdf3f3a40
  4150cc:	jno    0x4150f7
  4150ce:	cdq    
  4150cf:	mov    edi,0xad659d1a
  4150d4:	repz (bad)
  4150d7:	sbb    edx,esp
  4150d9:	and    eax,0x2cd7a2a5
  4150de:	ret    0x6552
  4150e1:	push   ds
  4150e2:	std    
  4150e3:	xchg   ecx,eax
  4150e4:	repz sub BYTE PTR [ecx],dh
  4150e7:	pop    ecx
  4150e8:	clc    
  4150e9:	cmp    ecx,0x763b9b65
  4150ef:	sub    al,0xc4
  4150f1:	inc    edx
  4150f2:	lock pop ds
  4150f4:	idiv   BYTE PTR [ebx-0x2c67d6cb]
  4150fa:	enter  0xa5ce,0xa4
  4150fe:	pop    esi
  4150ff:	or     bh,0xd7
  415102:	ficomp DWORD PTR [edx-0x5e8453b5]
  415108:	daa    
  415109:	adc    bh,BYTE PTR [ecx+ecx*4+0xe]
  41510d:	dec    edx
  41510e:	fld    st(7)
  415110:	mov    al,0x5b
  415112:	sub    bl,bl
  415114:	cmp    al,dh
  415116:	(bad)  
  415117:	(bad)  
  415118:	jl     0x415108
  41511a:	cdq    
  41511b:	jne    0x415127
  41511d:	or     eax,0x8ca9d8e6
  415122:	sub    eax,0x2ba161b8
  415127:	cwde   
  415128:	stc    
  415129:	sbb    edi,esp
  41512b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41512c:	das    
  41512d:	or     DWORD PTR ss:[edx+0x3a],0xb798209e
  415135:	imul   esp,DWORD PTR [edx],0x28
  415138:	mov    ah,0x66
  41513a:	imul   edi,DWORD PTR [ebp-0x34],0x70
  41513e:	sbb    ah,dl
  415140:	je     0x415159
  415142:	xchg   esp,eax
  415143:	daa    
  415144:	outs   dx,BYTE PTR ds:[esi]
  415145:	mov    ds:0x14bbcb34,al
  41514a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41514b:	int3   
  41514c:	mov    al,ds:0xa3da6a7
  415151:	jae    0x415158
  415153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415154:	pop    eax
  415155:	xchg   edx,eax
  415156:	mov    al,0x3e
  415158:	scas   eax,DWORD PTR es:[edi]
  415159:	or     dh,bl
  41515b:	clc    
  41515c:	adc    DWORD PTR [edi-0x756a9a81],esp
  415162:	das    
  415163:	adc    edx,edx
  415165:	pusha  
  415166:	fidiv  WORD PTR [edx+0x7b]
  415169:	fst    QWORD PTR [esi-0x17]
  41516c:	xchg   DWORD PTR [ebx+0x7d],ebx
  41516f:	mov    esp,DWORD PTR [ecx-0x35ff4ec7]
  415175:	sub    eax,0xeda8d3d
  41517a:	not    al
  41517c:	enter  0x9d79,0xcd
  415180:	xchg   esp,eax
  415181:	mov    edi,0x793a217c
  415186:	ds add al,0xab
  415189:	jnp    0x415206
  41518b:	mov    edx,0xca4cd734
  415190:	popf   
  415191:	retf   0xbab2
  415194:	cli    
  415195:	fdiv   QWORD PTR [ebp+0x3b]
  415198:	clc    
  415199:	les    edi,FWORD PTR [eax]
  41519b:	adc    eax,0xa2fb1edf
  4151a0:	mov    WORD PTR [ebp*2-0x4365a3c6],ds
  4151a7:	and    cl,cl
  4151a9:	cdq    
  4151aa:	aad    0xc6
  4151ac:	jnp    0x415225
  4151ae:	sub    bl,ah
  4151b0:	jl     0x41513e
  4151b2:	in     al,dx
  4151b3:	xor    bl,BYTE PTR ds:0x21ca1763
  4151b9:	popf   
  4151ba:	jp     0x4151be
  4151bc:	lods   eax,DWORD PTR ds:[esi]
  4151bd:	mov    eax,0x8b5a7bd2
  4151c2:	xchg   edi,eax
  4151c3:	pop    esi
  4151c4:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4151c6:	lods   al,BYTE PTR ds:[esi]
  4151c7:	and    BYTE PTR [eax-0x17f0de62],bh
  4151cd:	fs jns 0x41520d
  4151d0:	push   0x1552acbc
  4151d5:	adc    ebp,DWORD PTR [edi+0x14ccee3b]
  4151db:	lods   al,BYTE PTR ds:[esi]
  4151dc:	scas   al,BYTE PTR es:[edi]
  4151dd:	mov    edi,ss
  4151df:	mov    bh,0x23
  4151e1:	(bad)  
  4151e2:	retf   0xedbb
  4151e5:	shr    BYTE PTR [edi-0x601bbe4b],0x45
  4151ec:	dec    ecx
  4151ed:	mov    edi,0x1191c8b3
  4151f2:	mov    DWORD PTR [eax],ebp
  4151f4:	sub    ch,BYTE PTR [esi-0x6f08e0f5]
  4151fa:	je     0x415259
  4151fc:	(bad)  
  4151fd:	pop    edx
  4151fe:	dec    esp
  4151ff:	mov    ah,BYTE PTR [ebx]
  415201:	stos   BYTE PTR es:[edi],al
  415202:	ins    BYTE PTR es:[edi],dx
  415203:	push   ebx
  415204:	mov    ch,0x35
  415206:	in     eax,dx
  415207:	in     al,dx
  415208:	mov    esp,0xb3181a53
  41520d:	stos   BYTE PTR es:[edi],al
  41520e:	stc    
  41520f:	dec    esi
  415210:	xchg   ebx,eax
  415211:	xlat   BYTE PTR ds:[ebx]
  415212:	pop    es
  415213:	test   DWORD PTR [ebp+0x1be5f3e6],edx
  415219:	std    
  41521a:	cwde   
  41521b:	arpl   WORD PTR [ebp-0x539a6f7],bp
  415221:	or     dl,ch
  415223:	fdivr  QWORD PTR [edi+0x2e]
  415226:	and    eax,0xbb015de0
  41522b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41522c:	and    BYTE PTR [eax],0x5e
  41522f:	dec    ebx
  415230:	fiadd  DWORD PTR [ecx]
  415232:	mov    ebx,?
  415234:	mov    ch,0x27
  415236:	lds    esi,FWORD PTR [ebx+0x5df9de1a]
  41523c:	mov    al,0x15
  41523e:	imul   ebp,DWORD PTR [ebx-0x57],0xc3a7269b
  415245:	inc    ecx
  415246:	jmp    0x19d9:0x3a98df1a
  41524d:	out    dx,eax
  41524e:	cdq    
  41524f:	test   eax,0x82020534
  415254:	cmp    ebx,DWORD PTR [eax]
  415256:	or     eax,0x426bae90
  41525b:	mov    al,ds:0xcfa99a7f
  415260:	add    bl,bl
  415262:	add    ebp,DWORD PTR [eax+eax*8+0x4d6a43fe]
  415269:	call   0x9b05930d
  41526e:	imul   ecx,DWORD PTR [esi+0x3a],0xe512afa2
  415275:	or     eax,DWORD PTR [eax]
  415277:	cmp    cl,BYTE PTR [edi-0x53]
  41527a:	sbb    dl,BYTE PTR [esi]
  41527c:	pop    esp
  41527d:	bound  ebx,QWORD PTR [edx+0x669b682b]
  415283:	pushf  
  415284:	pop    ebp
  415285:	fnsave [ecx+0x49fe7739]
  41528b:	and    DWORD PTR [esi],0x3476f9da
  415291:	dec    esi
  415292:	add    esi,DWORD PTR [esi+0x2f]
  415295:	fistp  WORD PTR [ecx+0x46]
  415298:	mov    ebx,0x9fbb8efe
  41529d:	imul   edx,DWORD PTR [eax+edx*1-0x2f63599],0xe
  4152a5:	popf   
  4152a6:	in     eax,0xc8
  4152a8:	imul   esi,DWORD PTR [edi-0x7530c8b6],0x7caff1ea
  4152b2:	pop    ebx
  4152b3:	in     eax,0x9d
  4152b5:	in     al,dx
  4152b6:	mov    ch,0xd4
  4152b8:	jb     0x4152a7
  4152ba:	neg    DWORD PTR [eax]
  4152bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152bd:	call   0x5e674b2a
  4152c2:	jecxz  0x4152fc
  4152c4:	cmp    DWORD PTR [esi],edx
  4152c6:	out    0x96,al
  4152c8:	cwde   
  4152c9:	and    esi,esi
  4152cb:	add    esp,DWORD PTR [edi-0x3d76693f]
  4152d1:	test   al,0x30
  4152d3:	adc    DWORD PTR [ebx+0x2b],0xd77d26a1
  4152da:	pop    es
  4152db:	jmp    DWORD PTR [ebx+0x34630dfb]
  4152e1:	popa   
  4152e2:	fmul   DWORD PTR [edx]
  4152e4:	ror    DWORD PTR gs:0x5ed7f44e,0x25
  4152ec:	cmp    al,0xba
  4152ee:	call   0xdd59a356
  4152f3:	or     BYTE PTR [eax-0x54],dl
  4152f6:	push   0xf8fec7e4
  4152fb:	js     0x41528c
  4152fd:	cmp    esp,DWORD PTR [esi]
  4152ff:	cwde   
  415300:	pop    ss
  415301:	or     al,0xf7
  415303:	dec    ebp
  415304:	leave  
  415305:	sbb    ch,bl
  415307:	leave  
  415308:	hlt    
  415309:	xchg   BYTE PTR [esi-0x53b7ca9b],bl
  41530f:	loope  0x4152b8
  415311:	push   ebx
  415312:	mov    ecx,edi
  415314:	fwait
  415315:	inc    edi
  415316:	ins    BYTE PTR es:[edi],dx
  415317:	xor    esi,DWORD PTR [esi]
  415319:	cld    
  41531a:	cs in  eax,0x7c
  41531d:	mov    cl,0x15
  41531f:	sar    cl,0xc5
  415322:	xor    eax,0x1298f0ee
  415327:	or     eax,0xa4d7c0f1
  41532c:	jns    0x415310
  41532e:	not    eax
  415330:	int3   
  415331:	inc    esp
  415332:	mov    esp,0x6a3349dc
  415337:	das    
  415338:	mov    ecx,0x25cdd9e7
  41533d:	pushf  
  41533e:	aam    0x84
  415340:	mov    cl,0x69
  415342:	rcr    al,cl
  415344:	mov    ebx,0xa165b3e0
  415349:	sub    BYTE PTR [esi-0x60a9dca3],cl
  41534f:	mov    ebx,ebx
  415351:	jmp    0xebd39469
  415356:	scas   al,BYTE PTR es:[edi]
  415357:	iret   
  415358:	(bad)  
  415359:	aaa    
  41535a:	push   eax
  41535b:	shl    cl,1
  41535d:	popf   
  41535e:	test   eax,0x31c6348b
  415363:	add    al,0xde
  415365:	addr16 xor eax,0x3c97adf4
  41536b:	push   0x14
  41536d:	adc    ch,BYTE PTR [ebx]
  41536f:	push   0xffffffc5
  415371:	dec    esp
  415372:	jmp    0x415377
  415374:	or     eax,0xd2560ad7
  415379:	adc    BYTE PTR [eax],dl
  41537b:	and    BYTE PTR [edi+esi*4+0x107c1acc],0x31
  415383:	in     al,dx
  415384:	nop
  415385:	pop    ds
  415386:	mov    al,0x28
  415388:	push   ebp
  415389:	xor    al,0x6f
  41538b:	arpl   WORD PTR [edx],dx
  41538d:	fsubr  DWORD PTR [edi]
  41538f:	jge    0x4153e9
  415391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415392:	outs   dx,DWORD PTR ds:[esi]
  415393:	pop    ds
  415394:	inc    ebp
  415395:	retf   0x32fb
  415398:	scas   eax,DWORD PTR es:[edi]
  415399:	push   ds
  41539a:	std    
  41539b:	jge    0x4153aa
  41539d:	mov    dh,0xe7
  41539f:	sbb    dl,BYTE PTR [eax-0x26]
  4153a2:	cmp    eax,0xd414f1a5
  4153a7:	sbb    esp,esi
  4153a9:	idiv   bl
  4153ab:	std    
  4153ac:	je     0x415392
  4153ae:	ficomp WORD PTR [eax]
  4153b0:	daa    
  4153b1:	nop
  4153b2:	lods   eax,DWORD PTR ds:[esi]
  4153b3:	add    eax,0xe832b800
  4153b8:	xchg   esi,eax
  4153b9:	add    edx,DWORD PTR [ebx]
  4153bb:	mov    esp,0x86c73c60
  4153c0:	pop    ecx
  4153c1:	(bad)  
  4153c3:	add    DWORD PTR [edi+0x6600dce9],0x4
  4153ca:	mov    ebx,0x9502df36
  4153cf:	rcr    esi,0x16
  4153d2:	fwait
  4153d3:	add    ch,ah
  4153d5:	jno    0x41538b
  4153d7:	iret   
  4153d8:	inc    ebx
  4153d9:	retf   
  4153da:	xor    al,0xbc
  4153dc:	je     0x4153af
  4153de:	popf   
  4153df:	(bad)  
  4153e0:	fcomp  st(3)
  4153e2:	bound  esp,QWORD PTR [esp+ebx*1-0x51077996]
  4153e9:	es aam 0xe5
  4153ec:	dec    edi
  4153ed:	mov    cl,0x56
  4153ef:	dec    ebp
  4153f0:	fcomp  st(6)
  4153f2:	(bad)  
  4153f3:	fisub  WORD PTR [ebp+0x5b]
  4153f6:	inc    ecx
  4153f7:	lods   al,BYTE PTR ds:[esi]
  4153f8:	add    BYTE PTR [ebx+0x22],bh
  4153fb:	dec    edi
  4153fc:	jp     0x41546b
  4153fe:	and    al,0x5c
  415400:	pop    ebp
  415401:	popf   
  415402:	adc    dl,BYTE PTR [edi-0x54fd99a6]
  415408:	and    esi,DWORD PTR [edx-0x5592591c]
  41540e:	sbb    ecx,ebp
  415410:	aaa    
  415411:	adc    bl,ah
  415413:	cmp    al,0xbb
  415415:	pop    ds
  415416:	in     al,dx
  415417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415418:	sbb    al,0x6
  41541a:	fcomp  DWORD PTR [eax+esi*4+0x35]
  41541e:	pop    eax
  41541f:	push   esp
  415420:	sahf   
  415421:	jmp    0x4153aa
  415423:	fstp   st(4)
  415425:	inc    edi
  415426:	or     DWORD PTR ds:0x8ff15fd4,0x2e
  41542d:	rcl    esp,cl
  41542f:	sti    
  415430:	or     eax,0x1cdd1dbd
  415435:	div    BYTE PTR [ebx+0x37]
  415438:	je     0x4153d8
  41543a:	icebp  
  41543b:	mov    edi,0xfba5d61b
  415440:	jnp    0x4154b7
  415442:	sbb    esi,DWORD PTR [ecx+esi*1-0x58682758]
  415449:	jmp    0xa93c:0xed5fa067
  415450:	push   edi
  415451:	mov    ch,0xb6
  415453:	mov    eax,0x852e38bf
  415458:	loop   0x415492
  41545a:	cli    
  41545b:	les    ebp,FWORD PTR [ebx-0x37c14241]
  415461:	sub    eax,0x2ca76828
  415466:	popf   
  415467:	mov    DWORD PTR [ebx],0xffbb155
  41546d:	aaa    
  41546e:	cdq    
  41546f:	inc    edi
  415470:	cmp    BYTE PTR [edx+0x26],al
  415473:	cwde   
  415474:	aam    0x9
  415476:	fs stos BYTE PTR es:[edi],al
  415478:	jp     0x4154b9
  41547a:	ja     0x41543e
  41547c:	and    bh,BYTE PTR [esi]
  41547e:	jp     0x415499
  415480:	xchg   esi,eax
  415481:	mov    dl,al
  415483:	retf   0x7e1f
  415486:	xchg   edi,eax
  415487:	ja     0x41548b
  415489:	stos   DWORD PTR es:[edi],eax
  41548a:	mov    BYTE PTR [ebp+0x59],ch
  41548d:	jne    0x4154ed
  41548f:	adc    eax,0x479968df
  415494:	cmp    DWORD PTR ds:0x903775c8,ebp
  41549a:	or     BYTE PTR [esi],ah
  41549c:	sar    BYTE PTR [edx+0xe41e4b5],1
  4154a2:	leave  
  4154a3:	and    al,0x9c
  4154a5:	daa    
  4154a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a7:	sub    BYTE PTR [esi+0xcf34c7d],0x94
  4154ae:	aaa    
  4154af:	sub    DWORD PTR [ebp+0x4a462a26],ecx
  4154b5:	push   0xcdf1782e
  4154ba:	mov    ebp,0x3bfb5f97
  4154bf:	leave  
  4154c0:	(bad)  
  4154c1:	push   ss
  4154c2:	and    al,0x2d
  4154c4:	jno    0x4154b1
  4154c6:	scas   eax,DWORD PTR es:[edi]
  4154c7:	ret    
  4154c8:	ss jbe 0x4154fd
  4154cb:	test   BYTE PTR [ebx-0x25],bh
  4154ce:	cmc    
  4154cf:	push   es
  4154d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d1:	push   ds
  4154d2:	popf   
  4154d3:	pusha  
  4154d4:	cs jg  0x4154af
  4154d7:	add    BYTE PTR [eax+0x8],0xb8
  4154db:	add    BYTE PTR [edx],0xc0
  4154de:	push   ebx
  4154df:	popf   
  4154e0:	jecxz  0x415505
  4154e2:	dec    ebx
  4154e3:	les    esi,FWORD PTR [ecx+esi*1+0x6b]
  4154e7:	(bad)  
  4154e8:	mov    ecx,0x35ab54ae
  4154ed:	ficom  WORD PTR [edi]
  4154ef:	aam    0x2b
  4154f1:	scas   al,BYTE PTR es:[edi]
  4154f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154f3:	mov    DWORD PTR [esi+0x51],esi
  4154f6:	ins    BYTE PTR es:[edi],dx
  4154f7:	jecxz  0x4154c1
  4154f9:	sti    
  4154fa:	call   0x2dc1:0x50b2bb86
  415501:	retf   0xc6e
  415504:	je     0x4154bc
  415506:	pop    edi
  415507:	scas   eax,DWORD PTR es:[edi]
  415508:	in     eax,0xd
  41550a:	loop   0x415553
  41550c:	retf   
  41550d:	add    al,0x2d
  41550f:	jnp    0x415554
  415511:	arpl   WORD PTR cs:[esi-0x6f3aba85],cx
  415518:	pop    ss
  415519:	fimul  DWORD PTR [ebx-0x4d8e1f3a]
  41551f:	sub    DWORD PTR [ebp+esi*8-0x6f],ecx
  415523:	mov    dh,0xc4
  415525:	jmp    FWORD PTR [ebx]
  415527:	pop    edi
  415528:	scas   al,BYTE PTR es:[edi]
  415529:	pop    edi
  41552a:	mov    al,0xd8
  41552c:	jle    0x4154f5
  41552e:	dec    ecx
  41552f:	push   ebx
  415530:	mov    bl,0x20
  415532:	xchg   edi,edx
  415534:	scas   eax,DWORD PTR es:[edi]
  415535:	test   al,0xe8
  415537:	aaa    
  415538:	inc    eax
  415539:	test   eax,0xaf8c6b31
  41553e:	push   esp
  41553f:	outs   dx,DWORD PTR ds:[esi]
  415540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415541:	retf   
  415542:	(bad)  
  415543:	jmp    0x4154d4
  415545:	inc    ebx
  415546:	jmp    0xb04:0xa2f60827
  41554d:	add    al,0x86
  41554f:	repz push cs
  415551:	iret   
  415552:	and    BYTE PTR [esi+0x17],al
  415555:	add    al,0xa5
  415557:	jmp    0x41559a
  415559:	xchg   ebx,eax
  41555a:	iret   
  41555b:	inc    ecx
  41555c:	dec    edx
  41555d:	cmp    ch,BYTE PTR [eax+0x5e02e06a]
  415563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415564:	dec    esi
  415565:	adc    ah,BYTE PTR [ecx]
  415567:	jl     0x4155a2
  415569:	sbb    al,0xee
  41556b:	xchg   edi,eax
  41556c:	fnstsw WORD PTR [ebx]
  41556e:	mov    BYTE PTR [esi+0x1f7182f2],bl
  415574:	pop    ecx
  415575:	xchg   edi,eax
  415576:	sub    DWORD PTR [ecx-0x29],esp
  415579:	lods   eax,DWORD PTR ds:[esi]
  41557a:	icebp  
  41557b:	inc    esi
  41557c:	sub    DWORD PTR [ecx-0x63c7e08f],0x8d3dd204
  415586:	ins    BYTE PTR es:[edi],dx
  415587:	stos   DWORD PTR es:[edi],eax
  415588:	jge    0x4155e8
  41558a:	into   
  41558b:	add    al,0x50
  41558d:	cmp    edi,ebp
  41558f:	rcr    bh,1
  415591:	ud1    ebx,ecx
  415594:	or     BYTE PTR [esi-0x280433d7],ah
  41559a:	jbe    0x415559
  41559c:	rcl    BYTE PTR [edx+0x6],0x94
  4155a0:	adc    al,0x49
  4155a2:	xor    ebx,edx
  4155a4:	xor    cl,BYTE PTR [eax-0x4078c0f0]
  4155aa:	test   ecx,0x1b15ba8f
  4155b0:	inc    esi
  4155b1:	jbe    0x415547
  4155b3:	(bad)  
  4155b4:	fmul   DWORD PTR [eax+0x24]
  4155b7:	int3   
  4155b8:	pop    edi
  4155b9:	cs in  al,dx
  4155bb:	adc    al,0xd
  4155bd:	jge    0x415556
  4155bf:	int    0xdc
  4155c1:	ins    BYTE PTR es:[edi],dx
  4155c2:	ret    
  4155c3:	xchg   ecx,eax
  4155c4:	mov    ch,dh
  4155c6:	ins    BYTE PTR es:[edi],dx
  4155c7:	outs   dx,BYTE PTR ds:[esi]
  4155c8:	xchg   edx,eax
  4155c9:	mov    esi,0xa7482a42
  4155ce:	sub    al,0x36
  4155d0:	push   cs
  4155d1:	cmp    BYTE PTR [esi+0x3],bh
  4155d4:	movups XMMWORD PTR [esi+0x43],xmm1
  4155d8:	hlt    
  4155d9:	mov    edx,0xe54ec588
  4155de:	(bad)  ds:0x331062c5
  4155e4:	and    al,0x88
  4155e6:	xchg   esi,eax
  4155e7:	mov    cl,0x15
  4155e9:	push   eax
  4155ea:	dec    esp
  4155eb:	(bad)  
  4155ed:	xchg   ecx,eax
  4155ee:	ret    
  4155ef:	cmp    al,0x31
  4155f1:	(bad)  
  4155f2:	dec    esp
  4155f3:	pop    esi
  4155f4:	inc    ebx
  4155f5:	imul   edx,ebp,0xffffffcd
  4155f8:	fist   WORD PTR [edx-0x61]
  4155fb:	jb     0x4155ec
  4155fd:	jge    0x415639
  4155ff:	pop    edi
  415600:	jb     0x4155ce
  415602:	popf   
  415603:	test   DWORD PTR [ebx+0x68],0x7b7318c4
  41560a:	fwait
  41560b:	int3   
  41560c:	pop    es
  41560d:	jno    0x4155f4
  41560f:	mov    dl,0x4
  415611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415612:	jmp    0x92313dd5
  415617:	push   0x7dc387cd
  41561c:	es jb  0x415669
  41561f:	loope  0x415665
  415621:	call   0x3c88c353
  415626:	lds    edi,FWORD PTR [ebx]
  415628:	xor    esp,DWORD PTR [ebx-0x62]
  41562b:	ret    
  41562c:	add    eax,0x17319191
  415631:	aas    
  415632:	retf   
  415633:	inc    edi
  415634:	cmp    ebx,DWORD PTR [ecx-0x339c661b]
  41563a:	xor    ebp,edi
  41563c:	leave  
  41563d:	jo     0x415656
  41563f:	bound  esp,QWORD PTR [eax+esi*8+0x2b214d23]
  415646:	or     al,0xdd
  415648:	out    dx,eax
  415649:	push   eax
  41564a:	jmp    0x611f01a3
  41564f:	push   ss
  415650:	cmp    eax,0x24633c51
  415655:	jle    0x415635
  415657:	sti    
  415658:	push   es
  415659:	nop
  41565a:	cmp    eax,0xdaad5ccf
  41565f:	repz xchg esp,eax
  415661:	adc    bl,ch
  415663:	mov    bl,0x58
  415665:	jne    0x4155f1
  415667:	imul   edx,DWORD PTR [ebx+0x35],0xf358b4a3
  41566e:	jle    0x4155f1
  415670:	add    al,0xf0
  415672:	xchg   ebx,eax
  415673:	inc    edi
  415674:	cmc    
  415675:	sub    DWORD PTR [eax+0x5b7306e9],ebp
  41567b:	xor    al,0xba
  41567d:	dec    eax
  41567e:	(bad)  
  41567f:	jmp    0x65c9:0x3ea5c5c3
  415686:	or     BYTE PTR [ebp-0x29bbc0b5],ch
  41568c:	xor    al,0x23
  41568e:	out    0xba,al
  415690:	shl    DWORD PTR [eax],1
  415692:	and    DWORD PTR [edi-0x37],0xb3c8cd81
  415699:	push   cs
  41569a:	lea    edx,[ebx-0x48fa412c]
  4156a0:	or     ebx,0x5a9d0e5a
  4156a6:	das    
  4156a7:	dec    esp
  4156a8:	mov    WORD PTR [ebx-0x58f516ff],gs
  4156ae:	les    ebx,FWORD PTR [esi-0x44]
  4156b1:	mov    edi,0x55c5abdc
  4156b6:	(bad)  
  4156b7:	daa    
  4156b8:	mov    ebx,0x28c33be1
  4156bd:	jnp    0x415640
  4156bf:	data16 xchg ah,al
  4156c2:	adc    esi,DWORD PTR [esi+0x504b5812]
  4156c8:	xchg   edx,eax
  4156c9:	shr    BYTE PTR [edi-0x29201689],0xef
  4156d0:	retf   0xacff
  4156d3:	jmp    0x93bead95
  4156d8:	cli    
  4156d9:	xor    cl,BYTE PTR [ebx]
  4156db:	rcl    DWORD PTR [ecx+0x54],1
  4156de:	leave  
  4156df:	jo     0x415738
  4156e1:	sbb    al,0x8
  4156e3:	adc    BYTE PTR [edx-0x1a01fcd2],dh
  4156e9:	xor    DWORD PTR [edx+edi*1-0x22],esp
  4156ed:	shl    DWORD PTR [eax+edx*1-0x6728af43],0x61
  4156f5:	inc    ecx
  4156f6:	pop    esp
  4156f7:	mov    edi,0x7c93a7f9
  4156fc:	cmp    al,0x0
  4156fe:	jl     0x4156d7
  415700:	or     BYTE PTR [esi+0x70],cl
  415703:	jne    0x41577f
  415705:	inc    esp
  415706:	nop
  415707:	(bad)  
  415709:	push   es
  41570a:	(bad)  
  41570b:	out    dx,al
  41570c:	int3   
  41570d:	lea    esi,es:[ecx+0x1d]
  415711:	(bad)  
  415712:	das    
  415713:	pop    eax
  415714:	mov    BYTE PTR [edi],cl
  415716:	push   ds
  415717:	or     ebx,ebp
  415719:	or     DWORD PTR [esi+0x5bda2744],edx
  41571f:	push   cs
  415720:	xchg   esp,eax
  415721:	jns    0x4156e9
  415723:	fdiv   DWORD PTR [edx-0x48]
  415726:	rol    BYTE PTR [esi+0x2a574d2b],cl
  41572c:	ret    0xbd65
  41572f:	stc    
  415730:	out    0x50,al
  415732:	ins    DWORD PTR es:[edi],dx
  415733:	cmp    BYTE PTR [esi-0x2d],dl
  415736:	lahf   
  415737:	add    eax,0x85ff3f2b
  41573c:	imul   ecx,DWORD PTR [ebx+eiz*4+0x30826c4b],0x8b02a337
  415747:	jbe    0x41577a
  415749:	leave  
  41574a:	test   eax,0xa8887f97
  41574f:	push   cs
  415750:	jle    0x4157af
  415752:	mov    edx,0x34b09220
  415757:	mov    al,bh
  415759:	jmp    0x8d47:0x4cc90d3a
  415760:	cmp    esp,DWORD PTR [edx+0x5f8edc98]
  415766:	mov    eax,0x5da11642
  41576b:	in     eax,dx
  41576c:	(bad)  
  41576d:	push   esi
  41576e:	mov    ebp,0xb7047abe
  415773:	push   esp
  415774:	ja     0x4157de
  415776:	cld    
  415777:	mov    ebp,0x98349c2
  41577c:	outs   dx,DWORD PTR ds:[esi]
  41577d:	pop    esi
  41577e:	sbb    DWORD PTR [edx-0x44947e23],edx
  415784:	aas    
  415785:	loop   0x41574b
  415787:	dec    edx
  415788:	stos   DWORD PTR es:[edi],eax
  415789:	xchg   DWORD PTR [ecx],eax
  41578b:	xlat   BYTE PTR ds:[ebx]
  41578c:	xchg   DWORD PTR [ebp-0x40538cc2],ecx
  415792:	imul   esi,DWORD PTR [edx],0x77
  415795:	xchg   BYTE PTR [edi-0x58110387],bl
  41579b:	(bad)  
  41579c:	in     al,dx
  41579d:	xor    BYTE PTR [edx-0x3e51107c],bh
  4157a3:	and    cl,0x61
  4157a6:	ins    BYTE PTR es:[edi],dx
  4157a7:	push   esp
  4157a8:	inc    esp
  4157a9:	mov    bl,0xc9
  4157ab:	xchg   esi,eax
  4157ac:	mov    dh,0xcc
  4157ae:	call   0x6b062b9a
  4157b3:	jl     0x415790
  4157b5:	mov    ecx,0x7fa17557
  4157ba:	inc    edi
  4157bb:	mov    al,ds:0xe8db5a1a
  4157c0:	mov    ds:0xba03e484,eax
  4157c5:	pop    es
  4157c6:	fucomi st,st(6)
  4157c8:	xlat   BYTE PTR ds:[ebx]
  4157c9:	push   eax
  4157ca:	xchg   ecx,eax
  4157cb:	mov    ecx,0x3e586b57
  4157d0:	inc    edx
  4157d1:	pop    ebx
  4157d2:	ins    BYTE PTR es:[edi],dx
  4157d3:	int3   
  4157d4:	mov    esp,0x328e54c7
  4157d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157da:	dec    esp
  4157db:	ror    DWORD PTR [ebx],1
  4157dd:	and    esp,DWORD PTR [edi-0x5f]
  4157e0:	pop    esi
  4157e1:	cmp    BYTE PTR [edx+0x945e113],0x49
  4157e8:	loopne 0x415867
  4157ea:	add    al,BYTE PTR [eax+0x31a60b18]
  4157f0:	sti    
  4157f1:	cmp    eax,DWORD PTR ds:0x4525fbf6
  4157f7:	and    eax,0xb16c4988
  4157fc:	add    eax,0xf809b99
  415801:	jne    0x4157dd
  415803:	call   0xfbfc02c5
  415808:	push   edx
  415809:	jae    0x41579d
  41580b:	stos   DWORD PTR es:[edi],eax
  41580c:	mov    bl,0x22
  41580e:	sub    BYTE PTR [edi+0x4ef21b02],0xca
  415815:	call   0xf895:0x95684880
  41581c:	lods   al,BYTE PTR ds:[esi]
  41581d:	inc    ebx
  41581e:	add    eax,DWORD PTR [ebp+eax*8-0x73]
  415822:	pop    esp
  415823:	mov    al,BYTE PTR [edx-0x127567f3]
  415829:	push   cs
  41582a:	sub    al,0x3
  41582c:	dec    ecx
  41582d:	mov    bh,0x3d
  41582f:	xor    edi,ebx
  415831:	mov    eax,ds:0xac0f3a82
  415836:	(bad)  
  415837:	pop    eax
  415838:	sbb    edx,DWORD PTR [edx+0x1871c6f5]
  41583e:	std    
  41583f:	(bad)  
  415840:	and    eax,0xf4f715d7
  415845:	mov    bl,ah
  415847:	dec    edi
  415848:	stc    
  415849:	cmp    eax,0x8f3ccd1
  41584e:	dec    ebp
  41584f:	(bad)  
  415850:	xor    al,0x4a
  415852:	and    eax,0xbbedaa1d
  415857:	lods   eax,DWORD PTR ds:[esi]
  415858:	jg     0x415867
  41585a:	push   0xba0475e3
  41585f:	xchg   BYTE PTR [eax-0x30],ch
  415862:	sub    DWORD PTR [edx-0x66d0d0c2],edx
  415868:	jge    0x41583b
  41586a:	arpl   WORD PTR [edi+0x1cf83dc5],ax
  415870:	in     al,0xf1
  415872:	aaa    
  415873:	pop    ebp
  415874:	jmp    0x415812
  415876:	add    eax,0x91010379
  41587b:	adc    cl,BYTE PTR [ecx-0x8]
  41587e:	dec    edi
  41587f:	sub    eax,0x9121ae1
  415884:	aaa    
  415885:	jae    0x41581f
  415887:	mov    ch,0xf1
  415889:	or     eax,0x20b24ab7
  41588e:	lods   al,BYTE PTR ds:[esi]
  41588f:	cmc    
  415890:	mov    ebp,0x65abb76
  415895:	faddp  st(1),st
  415897:	fnstcw WORD PTR [edx+0x54]
  41589a:	sbb    DWORD PTR [bx+di+0x2a],0xb03a5af1
  4158a2:	xchg   ebp,eax
  4158a3:	cmp    ebx,DWORD PTR [ebp+0x214f343f]
  4158a9:	mov    esi,eax
  4158ab:	adc    ah,BYTE PTR [ebp+0x6e]
  4158ae:	fwait
  4158af:	stos   BYTE PTR es:[edi],al
  4158b0:	pusha  
  4158b1:	aam    0x9e
  4158b3:	dec    esp
  4158b4:	xor    al,0x38
  4158b6:	add    BYTE PTR [eax],ah
  4158b8:	mov    cl,0xd6
  4158ba:	sbb    esi,edx
  4158bc:	call   0xbe4f00cc
  4158c1:	sti    
  4158c2:	inc    ebx
  4158c3:	mov    ebx,0xd4fe153c
  4158c8:	push   esp
  4158c9:	lea    esp,[ecx+0x66]
  4158cc:	aam    0xbf
  4158ce:	pop    edx
  4158cf:	iret   
  4158d0:	test   DWORD PTR [edi],ebp
  4158d2:	mov    ecx,0xc734c507
  4158d7:	or     al,0x22
  4158d9:	pop    esi
  4158da:	rcr    BYTE PTR [ebp+edx*2-0x54],cl
  4158de:	outs   dx,BYTE PTR ds:[esi]
  4158df:	arpl   WORD PTR [edx],di
  4158e1:	adc    DWORD PTR [esi],ecx
  4158e3:	pop    ds
  4158e4:	popf   
  4158e5:	mov    ah,0xb6
  4158e7:	mov    WORD PTR [esi],fs
  4158e9:	mov    ebp,0xb7537a17
  4158ee:	rcr    bl,1
  4158f0:	aad    0x5d
  4158f2:	jmp    DWORD PTR [edi+eiz*4+0x4]
  4158f6:	ret    
  4158f7:	xchg   BYTE PTR [ebx],dl
  4158f9:	push   ebp
  4158fa:	lahf   
  4158fb:	pop    ss
  4158fc:	stos   DWORD PTR es:[edi],eax
  4158fd:	(bad)  
  4158fe:	cld    
  4158ff:	dec    ecx
  415900:	cmp    ebp,ebx
  415902:	push   es
  415903:	mov    DWORD PTR [ebp+ebx*1-0x107abd52],0xe258e104
  41590e:	jno    0x4158cf
  415910:	mov    ecx,0xa9e684db
  415915:	adc    edx,DWORD PTR ds:[ebx+0x46]
  415919:	dec    ecx
  41591a:	xchg   edi,eax
  41591b:	mov    DWORD PTR [ebp+0x14],ecx
  41591e:	data16 jle 0x4158ea
  415921:	jl     0x4158d2
  415923:	repz cld 
  415925:	xor    edx,DWORD PTR [ecx-0x5be72eed]
  41592b:	mov    ch,0x5f
  41592d:	cmp    dl,cl
  41592f:	(bad)  
  415931:	sbb    al,BYTE PTR [edx]
  415933:	aas    
  415934:	ins    DWORD PTR es:[edi],dx
  415935:	inc    edx
  415936:	aas    
  415937:	shl    BYTE PTR [edi-0x5a],0xb7
  41593b:	inc    ebx
  41593c:	rep outs dx,BYTE PTR ds:[esi]
  41593e:	pop    ebx
  41593f:	and    al,0xa8
  415941:	pop    ecx
  415942:	dec    eax
  415943:	cs cmp al,0x70
  415946:	data16 lahf 
  415948:	fidiv  DWORD PTR gs:[ebx]
  41594b:	xor    eax,0xa07909c7
  415950:	jbe    0x41599a
  415952:	adc    DWORD PTR [edi+eax*2+0x4d23cb80],ebx
  415959:	ret    
  41595a:	je     0x415904
  41595c:	ror    DWORD PTR [eax],1
  41595e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41595f:	test   al,0x47
  415961:	in     eax,dx
  415962:	cmp    eax,0xd24af69
  415967:	cdq    
  415968:	xchg   esp,eax
  415969:	xchg   edx,eax
  41596a:	aaa    
  41596b:	push   ecx
  41596c:	fbld   TBYTE PTR [ecx+0x4cff40ee]
  415972:	xor    DWORD PTR [ecx-0x6],edi
  415975:	mov    ecx,0x21be857f
  41597a:	jns    0x4159ab
  41597c:	outs   dx,BYTE PTR ds:[esi]
  41597d:	sub    al,0x38
  41597f:	push   ecx
  415980:	xor    DWORD PTR [eax+0x40],esi
  415983:	push   0x5941e05e
  415988:	push   esp
  415989:	rcr    ebx,1
  41598b:	out    0x9d,al
  41598d:	mov    al,0xfe
  41598f:	dec    ecx
  415990:	mov    dl,0x1e
  415992:	scas   al,BYTE PTR es:[edi]
  415993:	and    DWORD PTR ds:0xeac42985,ebx
  415999:	fidiv  WORD PTR [ebx-0x5b]
  41599c:	push   ecx
  41599d:	outs   dx,DWORD PTR ds:[esi]
  41599e:	neg    ebp
  4159a0:	fistp  DWORD PTR [esi+0x4e]
  4159a3:	sbb    eax,edi
  4159a5:	pop    ebp
  4159a6:	cmp    BYTE PTR [ebp+0x3c],bh
  4159a9:	iret   
  4159aa:	scas   eax,DWORD PTR es:[edi]
  4159ab:	fst    DWORD PTR [edi-0x5c]
  4159ae:	add    ecx,DWORD PTR [edx]
  4159b0:	ror    BYTE PTR [esi],1
  4159b2:	dec    ecx
  4159b3:	arpl   dx,dx
  4159b5:	retf   
  4159b6:	mov    ebp,0xfcc282a0
  4159bb:	mov    al,ds:0x7ca1a4b3
  4159c0:	je     0x4159fe
  4159c2:	jmp    0xf64a26f9
  4159c7:	mov    ecx,0xf1ebc8e7
  4159cc:	adc    DWORD PTR [esi+0x23c2a6d7],edi
  4159d2:	lahf   
  4159d3:	clc    
  4159d4:	les    ecx,FWORD PTR [esi]
  4159d6:	and    al,BYTE PTR [edx+0x40]
  4159d9:	fidiv  DWORD PTR [esi-0x3e2658b7]
  4159df:	cld    
  4159e0:	xchg   edx,eax
  4159e1:	mov    ds:0x84b56e1e,al
  4159e6:	or     BYTE PTR [esi-0x147b0155],dl
  4159ec:	dec    edx
  4159ed:	scas   al,BYTE PTR es:[edi]
  4159ee:	mov    ebp,0x9f7d4af9
  4159f3:	ins    DWORD PTR es:[edi],dx
  4159f4:	sub    BYTE PTR [ebp-0x46c08be2],bl
  4159fa:	nop
  4159fb:	int3   
  4159fc:	jle    0x415a70
  4159fe:	fisttp QWORD PTR [ebx]
  415a00:	popa   
  415a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a02:	retf   
  415a03:	data16 mov ah,0xfe
  415a06:	dec    edi
  415a07:	rcr    BYTE PTR [esi+ebp*8-0x1ba30b0a],1
  415a0e:	std    
  415a0f:	lods   eax,DWORD PTR ds:[esi]
  415a10:	test   al,0x84
  415a12:	fs jns 0x4159cc
  415a15:	ficomp DWORD PTR [ecx+0x2ff23dc6]
  415a1b:	xlat   BYTE PTR ds:[ebx]
  415a1c:	clc    
  415a1d:	mov    edx,0x118f2e2b
  415a22:	cmp    al,0x3c
  415a24:	fild   WORD PTR [ebx-0x23]
  415a27:	cli    
  415a28:	pop    es
  415a29:	cmp    edi,esi
  415a2b:	mov    ebx,0xd452d9e5
  415a30:	push   esp
  415a31:	not    BYTE PTR [edx-0x56a4b6fd]
  415a37:	pop    esp
  415a38:	inc    edi
  415a39:	dec    ecx
  415a3a:	lahf   
  415a3b:	inc    ebx
  415a3c:	out    dx,al
  415a3d:	dec    esi
  415a3e:	dec    ebx
  415a3f:	jnp    0x415a86
  415a41:	mov    bl,BYTE PTR [ebp-0xb]
  415a44:	mov    dl,0x33
  415a46:	pushf  
  415a47:	pop    edi
  415a48:	stos   BYTE PTR es:[edi],al
  415a49:	je     0x4159d5
  415a4b:	mov    ah,0x49
  415a4d:	inc    ebp
  415a4e:	cmovo  eax,ebp
  415a51:	les    esp,FWORD PTR [edi+0x51]
  415a54:	scas   al,BYTE PTR es:[edi]
  415a55:	cmp    DWORD PTR [ebp-0x6],esp
  415a58:	(bad)  
  415a59:	cmp    ebp,esp
  415a5b:	push   0xe14bcef3
  415a60:	push   ecx
  415a61:	push   es
  415a62:	sbb    eax,0x7af4b6fe
  415a67:	xlat   BYTE PTR ds:[ebx]
  415a68:	cs xchg ebx,eax
  415a6a:	push   ss
  415a6b:	ret    
  415a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a6d:	out    0x88,al
  415a6f:	shr    ebx,1
  415a71:	push   ecx
  415a72:	sbb    BYTE PTR [edx],dh
  415a74:	(bad)  
  415a75:	loope  0x415a10
  415a77:	dec    eax
  415a78:	neg    BYTE PTR [esi-0x60b38129]
  415a7e:	jmp    0xfc8f:0xe309e85f
  415a85:	clc    
  415a86:	pop    ss
  415a87:	add    DWORD PTR [eax+0x48],edi
  415a8a:	dec    ebp
  415a8b:	fs loop 0x415a4b
  415a8e:	mov    esi,0xdf8758f0
  415a93:	call   0x860:0x6a8b1d0b
  415a9a:	mov    dh,0x54
  415a9c:	int    0x25
  415a9e:	aad    0xb9
  415aa0:	aaa    
  415aa1:	scas   al,BYTE PTR es:[edi]
  415aa2:	mov    bh,BYTE PTR [edi+esi*1+0x722eea44]
  415aa9:	in     al,0xd1
  415aab:	repnz push ecx
  415aad:	ss loopne 0x415a56
  415ab0:	pop    ds
  415ab1:	pop    ebp
  415ab2:	or     bl,ah
  415ab4:	push   cs
  415ab5:	icebp  
  415ab6:	shl    BYTE PTR [ebp+0x41],1
  415ab9:	inc    edx
  415aba:	and    DWORD PTR [ebp+0x21],0xfffffffa
  415abe:	aas    
  415abf:	mov    dh,ah
  415ac1:	fsubr  QWORD PTR [edi]
  415ac3:	push   ebp
  415ac4:	sub    al,BYTE PTR [esp+eax*1]
  415ac7:	dec    ebp
  415ac8:	dec    esi
  415ac9:	or     esi,esi
  415acb:	and    edi,DWORD PTR [ecx+0x52eb669a]
  415ad1:	jno    0x415b3b
  415ad3:	adc    ch,al
  415ad5:	mov    ecx,0xe116c7ee
  415ada:	cmc    
  415adb:	bnd jae 0x415b2d
  415ade:	sbb    BYTE PTR [ebx-0x2f],bh
  415ae1:	retf   
  415ae2:	push   edi
  415ae3:	imul   ebp,DWORD PTR [esi+ecx*2+0x3],0x7a
  415ae8:	xchg   esp,eax
  415ae9:	(bad)  
  415aea:	daa    
  415aeb:	icebp  
  415aec:	ss scas eax,DWORD PTR es:[edi]
  415aee:	inc    ebp
  415aef:	mov    al,0xbd
  415af1:	scas   al,BYTE PTR es:[edi]
  415af2:	add    bl,BYTE PTR [ebx+edx*2-0x9a83e69]
  415af9:	daa    
  415afa:	and    al,0x1e
  415afc:	aam    0xd1
  415afe:	lods   al,BYTE PTR ds:[esi]
  415aff:	das    
  415b00:	mov    ds:0x91e1e9f5,eax
  415b05:	fdivr  QWORD PTR [ecx-0x374406fc]
  415b0b:	pop    ds
  415b0c:	add    BYTE PTR [ecx+edi*2-0x3a],bl
  415b10:	fwait
  415b11:	(bad)  
  415b12:	dec    ebp
  415b13:	pop    edi
  415b14:	dec    ebp
  415b15:	stc    
  415b16:	sbb    bl,cl
  415b18:	call   0x18a8:0x8d752412
  415b1f:	mov    bl,0xa4
  415b21:	push   edx
  415b22:	add    BYTE PTR [eax],cl
  415b24:	ret    
  415b25:	mov    BYTE PTR [ebx-0x5f7dafed],cl
  415b2b:	sub    ebp,ebx
  415b2d:	pop    ebp
  415b2e:	xor    ecx,edi
  415b30:	das    
  415b31:	lahf   
  415b32:	test   eax,0xdc417454
  415b37:	add    eax,0x14e102cf
  415b3c:	ja     0x415b00
  415b3e:	mov    ecx,0x41be339f
  415b43:	push   0xc117f9e5
  415b48:	aaa    
  415b49:	inc    edx
  415b4a:	sub    edx,edi
  415b4c:	cmp    ah,BYTE PTR [ecx]
  415b4e:	sub    esp,esp
  415b50:	sub    al,0xb5
  415b52:	in     eax,dx
  415b53:	jo     0x415bba
  415b55:	jb     0x415b66
  415b57:	inc    ecx
  415b58:	jbe    0x415b1b
  415b5a:	neg    BYTE PTR [edx+esi*1+0x5d]
  415b5e:	ins    DWORD PTR es:[edi],dx
  415b5f:	or     bh,ch
  415b61:	arpl   WORD PTR [ecx+0x7b],cx
  415b64:	pushf  
  415b65:	sub    ch,al
  415b67:	inc    eax
  415b68:	mov    ch,BYTE PTR [eax]
  415b6a:	adc    al,0x2b
  415b6c:	or     bh,BYTE PTR [edx]
  415b6e:	pop    edx
  415b6f:	dec    esp
  415b70:	dec    edx
  415b71:	test   DWORD PTR [eiz*8-0x21f2dbe1],ebp
  415b78:	push   0xd
  415b7a:	dec    ebp
  415b7b:	adc    eax,0xbff738b4
  415b80:	pop    ebp
  415b81:	dec    ebx
  415b82:	xlat   BYTE PTR ds:[ebx]
  415b83:	fs loope 0x415b0a
  415b86:	imul   edx,DWORD PTR [ecx+edx*4],0xffffff8a
  415b8a:	out    dx,eax
  415b8b:	mov    ebp,0x861faade
  415b90:	aad    0x6d
  415b92:	mov    gs,WORD PTR [ebp-0x580d06b7]
  415b98:	sbb    DWORD PTR [eax],edi
  415b9a:	and    DWORD PTR [ecx],edi
  415b9c:	loop   0x415bae
  415b9e:	lods   eax,DWORD PTR ds:[esi]
  415b9f:	jmp    0x6dee:0xbccce7b6
  415ba6:	lods   eax,DWORD PTR ds:[esi]
  415ba7:	hlt    
  415ba8:	mov    edi,eax
  415baa:	mov    edi,0x5d39c820
  415baf:	ror    ecx,cl
  415bb1:	daa    
  415bb2:	mov    edx,0xa586f04
  415bb7:	in     al,dx
  415bb8:	lock data16 arpl WORD PTR [ebp+0x1d],cx
  415bbd:	fidivr WORD PTR [ebp-0x755bbc1a]
  415bc3:	xor    BYTE PTR [edx-0x25],0x97
  415bc7:	push   edx
  415bc8:	(bad)  
  415bc9:	(bad)  
  415bca:	cmp    ch,BYTE PTR fs:[eax-0x6c]
  415bce:	jge    0x415b9e
  415bd0:	jno    0x415c13
  415bd2:	dec    esi
  415bd3:	fcomp  QWORD PTR [ecx]
  415bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bd6:	rcr    al,cl
  415bd8:	dec    esp
  415bd9:	mov    dh,0x96
  415bdb:	(bad)  
  415bdc:	(bad)  
  415bdd:	jle    0x415b60
  415bdf:	sbb    al,BYTE PTR [ebp-0x610857f5]
  415be5:	pop    ebp
  415be6:	or     al,0xa3
  415be8:	mov    ds:0x798f9824,eax
  415bed:	dec    ecx
  415bee:	xchg   ebp,eax
  415bef:	fs mov bh,0xd8
  415bf2:	leave  
  415bf3:	pusha  
  415bf4:	imul   ebx,ebp,0x8e95d8c3
  415bfa:	add    DWORD PTR [esi+0x7d3764c2],eax
  415c00:	dec    ebp
  415c01:	in     eax,0xe2
  415c03:	xchg   esp,eax
  415c04:	or     eax,0xba6b3f
  415c09:	jg     0x415c6e
  415c0b:	fbld   TBYTE PTR [ebx-0x1e]
  415c0e:	adc    eax,0x9e65188c
  415c13:	popf   
  415c14:	hlt    
  415c15:	pop    ebp
  415c16:	test   BYTE PTR [eax],dh
  415c18:	mov    al,ds:0xe2745a05
  415c1d:	outs   dx,DWORD PTR ds:[esi]
  415c1e:	dec    edi
  415c1f:	xchg   edi,eax
  415c20:	jae    0x415c4f
  415c22:	mov    BYTE PTR [ecx+ecx*2],bh
  415c25:	repz imul ebp,ebp,0x317933ab
  415c2c:	sub    eax,0xb18792a2
  415c31:	loopne 0x415c41
  415c33:	adc    ch,BYTE PTR [ebx]
  415c35:	scas   al,BYTE PTR es:[edi]
  415c36:	outs   dx,BYTE PTR ds:[esi]
  415c37:	adc    eax,ecx
  415c39:	not    DWORD PTR [eax+ebx*8-0x23]
  415c3d:	enter  0x67d6,0x62
  415c41:	and    eax,0x327a8ff
  415c46:	mov    ch,0xc0
  415c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c49:	out    dx,eax
  415c4a:	push   0x1c31cf5d
  415c4f:	sub    BYTE PTR [ebx-0x34],0x3d
  415c53:	sbb    ebx,DWORD PTR [eax+0x45]
  415c56:	mov    esp,0x969632a5
  415c5b:	dec    eax
  415c5c:	addr16 jge 0x415cb4
  415c5f:	icebp  
  415c60:	or     esp,DWORD PTR [ecx]
  415c62:	cmp    BYTE PTR [esi],ah
  415c64:	lea    eax,[edi]
  415c66:	cmc    
  415c67:	jmp    0x415cde
  415c69:	idiv   DWORD PTR [edi]
  415c6b:	adc    BYTE PTR [ebx+0x9],0x5b
  415c6f:	push   edi
  415c70:	xor    BYTE PTR [eax],0x8
  415c73:	sub    BYTE PTR [edi-0x4a],ah
  415c76:	std    
  415c77:	xor    al,0x89
  415c79:	aam    0xa4
  415c7b:	sbb    DWORD PTR [ebp+0x1c1e6ce3],esi
  415c81:	jbe    0x415c70
  415c83:	cmp    eax,0x9319c23a
  415c88:	jo     0x415cc8
  415c8a:	shl    BYTE PTR [ecx-0xf],cl
  415c8d:	out    0xde,al
  415c8f:	mov    ds:0xf2cb4018,al
  415c94:	cmp    eax,0x7243c072
  415c99:	loope  0x415cbe
  415c9b:	and    BYTE PTR [eax+0x3e],dl
  415c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c9f:	sbb    eax,0x2bd14623
  415ca4:	fsubr  st(2),st
  415ca6:	test   DWORD PTR [edx],ecx
  415ca8:	arpl   WORD PTR [ecx+0x4fffa1d],sp
  415cae:	loop   0x415c96
  415cb0:	push   ss
  415cb1:	push   eax
  415cb2:	pop    ds
  415cb3:	inc    eax
  415cb4:	xchg   WORD PTR [edx],si
  415cb7:	adc    ah,BYTE PTR [edx-0x54]
  415cba:	ss int 0xe8
  415cbd:	iret   
  415cbe:	clc    
  415cbf:	enter  0x9266,0xec
  415cc3:	or     BYTE PTR [esi-0x74468402],0xad
  415cca:	inc    ecx
  415ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ccc:	stos   BYTE PTR es:[edi],al
  415ccd:	jge    0x415cf6
  415ccf:	(bad)  
  415cd0:	jno    0x415ce4
  415cd2:	mov    eax,0x6cdadc25
  415cd7:	div    BYTE PTR [edi-0x51]
  415cda:	addr16 and edx,ebp
  415cdd:	push   0x266641f3
  415ce2:	jmp    0x415ce4
  415ce4:	stos   DWORD PTR es:[edi],eax
  415ce5:	add    dl,dh
  415ce7:	(bad)  
  415ce8:	popf   
  415ce9:	adc    BYTE PTR [ecx+eax*2],bh
  415cec:	inc    edi
  415ced:	xor    ebx,DWORD PTR [ebp-0x53]
  415cf0:	pushf  
  415cf1:	sti    
  415cf2:	sub    al,0x2f
  415cf4:	pop    ecx
  415cf5:	xchg   ch,bl
  415cf7:	call   0x3afd6902
  415cfc:	jo     0x415cc0
  415cfe:	jnp    0x415d6a
  415d00:	mov    eax,gs:0xdfce7afe
  415d06:	fnstcw WORD PTR [ebp+0x32]
  415d09:	and    dl,BYTE PTR cs:[eax-0x1e]
  415d0d:	sub    eax,0xd197d56e
  415d12:	retf   0x9ecd
  415d15:	in     al,dx
  415d16:	jp     0x415d0c
  415d18:	mov    BYTE PTR [edi],dl
  415d1a:	mov    ebx,edi
  415d1c:	cli    
  415d1d:	pusha  
  415d1e:	mov    ds:0x2e61b9da,eax
  415d23:	sub    BYTE PTR [ecx+0x2d],0xad
  415d27:	out    dx,eax
  415d28:	cmp    eax,0x527ac2f
  415d2d:	jmp    0xa853:0x889f880f
  415d34:	add    edx,DWORD PTR [ebx]
  415d36:	sbb    DWORD PTR ds:0x183b7ffe,ebx
  415d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d3d:	sar    DWORD PTR [ebp+ebp*8-0x66263277],cl
  415d44:	aaa    
  415d45:	add    bl,0x89
  415d48:	retf   0xf6d3
  415d4b:	xchg   esi,eax
  415d4c:	jmp    0xcae2:0x403e861e
  415d53:	sbb    BYTE PTR [ecx],ch
  415d55:	cdq    
  415d56:	xchg   BYTE PTR ds:0xb3efb394,bl
  415d5c:	pop    edi
  415d5d:	pop    ss
  415d5e:	in     eax,0x1
  415d60:	js     0x415d23
  415d62:	add    eax,0x493ea375
  415d67:	arpl   WORD PTR [ecx-0x4c],di
  415d6a:	dec    edi
  415d6b:	(bad)  
  415d6c:	pop    ebp
  415d6d:	adc    DWORD PTR [ecx+0x5f],0x74
  415d71:	add    DWORD PTR [ecx+0x443661e2],ebp
  415d77:	jecxz  0x415da5
  415d79:	clc    
  415d7a:	or     ecx,DWORD PTR ds:[ebx-0x18]
  415d7e:	loopne 0x415d0c
  415d80:	imul   ebp,DWORD PTR [edi],0x3f
  415d83:	push   esp
  415d84:	test   BYTE PTR [ecx],al
  415d86:	enter  0xc2f6,0x42
  415d8a:	push   ss
  415d8b:	pop    ss
  415d8c:	aaa    
  415d8d:	add    ebx,0xc0abc0ae
  415d93:	mov    BYTE PTR [ebx-0x53],bl
  415d96:	enterw 0xab4f,0x4
  415d9b:	gs push esp
  415d9d:	jmp    0xf7f0af95
  415da2:	pop    esi
  415da3:	jmp    DWORD PTR [eax-0x13bf206b]
  415da9:	dec    ebx
  415daa:	xchg   BYTE PTR [edi+edi*1+0x75],ch
  415dae:	pop    esi
  415daf:	fstp   TBYTE PTR [ebx+0x63]
  415db2:	in     al,dx
  415db3:	test   al,0x40
  415db5:	shl    DWORD PTR [ebx+0x39ef9a16],0xa1
  415dbc:	scas   eax,DWORD PTR es:[edi]
  415dbd:	mov    al,0xc
  415dbf:	test   al,0x5f
  415dc1:	gs retf 0x92e9
  415dc5:	add    edx,DWORD PTR [edx-0x6c23614a]
  415dcb:	xor    eax,0xeae37d94
  415dd0:	mov    bh,0x44
  415dd2:	mov    eax,ds:0xc3d5ee20
  415dd7:	fisub  DWORD PTR [eax]
  415dd9:	xor    DWORD PTR [edi+0x46f00a99],esp
  415ddf:	bswap  edi
  415de1:	rcr    DWORD PTR [edx+esi*4],cl
  415de4:	xor    ebp,DWORD PTR [ebx-0x2d36a36]
  415dea:	loop   0x415e66
  415dec:	mov    ch,0xca
  415dee:	into   
  415def:	xchg   edx,eax
  415df0:	icebp  
  415df1:	jno    0x415e58
  415df3:	(bad)  
  415df4:	xchg   ebp,eax
  415df5:	jecxz  0x415d7d
  415df7:	lea    edx,[ebx]
  415df9:	mov    edx,0x817967b
  415dfe:	inc    eax
  415dff:	pop    esp
  415e00:	iret   
  415e01:	jl     0x415e00
  415e03:	dec    ecx
  415e04:	jno    0x415d8d
  415e06:	jno    0x415e60
  415e08:	mov    dh,BYTE PTR [eax+0x300a74fd]
  415e0e:	ja     0x415e3d
  415e10:	adc    edx,DWORD PTR [edi-0x75]
  415e13:	mov    ebp,0x7544590f
  415e18:	sar    DWORD PTR [esi-0x5060f34d],0x58
  415e1f:	push   esp
  415e20:	mov    dl,0xa7
  415e22:	dec    eax
  415e23:	push   es
  415e24:	push   esi
  415e25:	rol    bl,cl
  415e27:	add    ah,BYTE PTR [eax+eiz*2+0x1dc1c8c8]
  415e2e:	xlat   BYTE PTR ds:[ebx]
  415e2f:	mov    esp,0x38d0f1f5
  415e34:	repz jo 0x415e2d
  415e37:	stos   DWORD PTR es:[edi],eax
  415e38:	add    eax,0x72543d9c
  415e3d:	call   0x75b8955e
  415e42:	in     al,0xa8
  415e44:	shr    BYTE PTR [ecx-0x6f05dfd6],1
  415e4a:	xchg   edx,eax
  415e4b:	and    eax,0x77ed5f6d
  415e50:	mov    eax,ds:0xfd687134
  415e55:	add    ebx,DWORD PTR [edx-0x24]
  415e58:	test   BYTE PTR es:[di],0x92
  415e5d:	mov    gs,WORD PTR [ebx+0x5b]
  415e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e61:	push   ds
  415e62:	enter  0xe78c,0x21
  415e66:	jnp    0x415dfb
  415e68:	out    0x92,al
  415e6a:	lods   al,BYTE PTR ds:[esi]
  415e6b:	inc    eax
  415e6c:	scas   eax,DWORD PTR es:[edi]
  415e6d:	xor    eax,0x676d95e2
  415e72:	jg     0x415e73
  415e74:	iret   
  415e75:	stos   DWORD PTR es:[edi],eax
  415e76:	or     DWORD PTR [ebx],esp
  415e78:	cs dec esi
  415e7a:	push   ss
  415e7b:	xor    eax,0x4598aa3b
  415e80:	aam    0xe6
  415e82:	mov    eax,ss:0xaf2a5bfd
  415e88:	lock (bad) 
  415e8b:	loope  0x415e98
  415e8d:	jp     0x415e84
  415e8f:	fs xchg edi,eax
  415e91:	jecxz  0x415e98
  415e93:	mov    eax,ds:0x932e7938
  415e98:	pushf  
  415e99:	ror    BYTE PTR [edx-0x3f],0xa
  415e9d:	dec    ecx
  415e9e:	pusha  
  415e9f:	adc    eax,0x4a6901aa
  415ea4:	popa   
  415ea5:	push   cs
  415ea6:	int3   
  415ea7:	mov    bh,0x13
  415ea9:	xchg   ebx,eax
  415eaa:	xlat   BYTE PTR ds:[ebx]
  415eab:	mov    edi,0x9623ee5c
  415eb0:	std    
  415eb1:	pop    ebx
  415eb2:	and    DWORD PTR [ebx-0x36],ecx
  415eb5:	rcl    BYTE PTR [ebp+0x1eb16fbb],1
  415ebb:	mov    edi,0x6a0174e5
  415ec0:	pop    ebx
  415ec1:	mov    ecx,0x26466ea8
  415ec6:	(bad)  
  415ec7:	pop    ebp
  415ec8:	mov    cl,BYTE PTR [ebx-0x403ec35e]
  415ece:	dec    edx
  415ecf:	popf   
  415ed0:	cmovno esp,DWORD PTR [eax+0x5198c443]
  415ed7:	mov    dh,0x41
  415ed9:	add    DWORD PTR [ecx-0x2d],ecx
  415edc:	dec    ebx
  415edd:	add    bl,BYTE PTR [edi+ebx*4]
  415ee0:	inc    ecx
  415ee1:	test   DWORD PTR [edi+0x72],ecx
  415ee4:	and    DWORD PTR [ebx],ecx
  415ee6:	fwait
  415ee7:	jmp    0xaebc8212
  415eec:	and    al,0xea
  415eee:	xor    DWORD PTR ds:0x7cd6f7d3,ecx
  415ef4:	mov    ebx,0x54109bd4
  415ef9:	in     eax,dx
  415efa:	dec    ebp
  415efb:	leave  
  415efc:	out    0xbb,al
  415efe:	dec    cx
  415f00:	or     BYTE PTR [eax-0x63],cl
  415f03:	ins    BYTE PTR es:[edi],dx
  415f04:	pushf  
  415f05:	jo     0x415eb1
  415f07:	jle    0x415ec2
  415f09:	cwde   
  415f0a:	pop    ds
  415f0b:	ret    0xdc65
  415f0e:	mov    al,ds:0x43b129c
  415f13:	xor    DWORD PTR es:[esi],ebp
  415f16:	push   es
  415f17:	out    dx,al
  415f18:	mov    DWORD PTR [ebp+0x7d666130],ebp
  415f1e:	cli    
  415f1f:	icebp  
  415f20:	aas    
  415f21:	loopne 0x415f64
  415f23:	adc    eax,0x93d6a2cf
  415f28:	ins    BYTE PTR es:[edi],dx
  415f29:	mov    eax,ds:0x48cb4af8
  415f2e:	adc    al,0x24
  415f30:	popf   
  415f31:	inc    DWORD PTR [esi+0x11445fce]
  415f37:	in     al,dx
  415f38:	ror    BYTE PTR [edi],1
  415f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f3b:	push   cs
  415f3c:	add    dl,ch
  415f3e:	sub    al,0x8f
  415f40:	enter  0x37cc,0xfd
  415f44:	addr16 inc esi
  415f46:	fcom   QWORD PTR [ebp+0x43735455]
  415f4c:	ja     0x415f07
  415f4e:	stos   DWORD PTR es:[edi],eax
  415f4f:	int3   
  415f50:	retf   
  415f51:	and    BYTE PTR [edi-0x62993c43],dl
  415f57:	add    ebp,esp
  415f59:	add    eax,0xa6fbdbf
  415f5e:	add    cl,dl
  415f60:	sbb    BYTE PTR [eax],bh
  415f62:	cmp    edx,ecx
  415f64:	cdq    
  415f65:	pop    esi
  415f66:	fucom  st(6)
  415f68:	imul   esi,edi,0xffffffe8
  415f6b:	(bad)  
  415f6c:	repz pop ebx
  415f6e:	pop    esp
  415f6f:	loopne 0x415f2e
  415f71:	push   0x4648846a
  415f76:	mov    esi,0x5fde2b6d
  415f7b:	jmp    0x291cc31b
  415f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f81:	fcom   QWORD PTR [ecx]
  415f83:	sbb    eax,DWORD PTR [eax-0x4b]
  415f86:	pop    edx
  415f87:	dec    ecx
  415f88:	out    dx,al
  415f89:	loop   0x415f57
  415f8b:	ret    0xf066
  415f8e:	shl    DWORD PTR [ebx+ecx*8+0x59],1
  415f92:	mov    esi,0x99543ba8
  415f97:	mov    al,0xb1
  415f99:	daa    
  415f9a:	std    
  415f9b:	in     al,dx
  415f9c:	out    dx,al
  415f9d:	add    eax,0x39a2cb
  415fa2:	or     eax,DWORD PTR [eax-0x60]
  415fa5:	or     ebx,DWORD PTR [eax+0x17]
  415fa8:	xor    al,BYTE PTR [ecx+0x12]
  415fab:	mov    al,ds:0x7083278e
  415fb0:	pushf  
  415fb1:	lods   al,BYTE PTR ds:[esi]
  415fb2:	ret    0x8008
  415fb5:	(bad)  
  415fb6:	cld    
  415fb7:	ret    
  415fb8:	adc    esp,DWORD PTR [ecx-0x18]
  415fbb:	add    DWORD PTR [edx-0x43],edi
  415fbe:	stc    
  415fbf:	cmp    BYTE PTR [ebp-0x1af55664],0x1c
  415fc6:	lea    esi,[edx]
  415fc8:	cmp    eax,0x62d6e8ee
  415fce:	test   esp,esi
  415fd0:	adc    eax,0x402a4acf
  415fd5:	stc    
  415fd6:	stos   DWORD PTR es:[edi],eax
  415fd7:	adc    al,0x39
  415fd9:	jge    0x416052
  415fdb:	scas   eax,DWORD PTR es:[edi]
  415fdc:	jb     0x415f85
  415fde:	gs int 0x89
  415fe1:	sar    ecx,1
  415fe3:	(bad)  
  415fe4:	enter  0x6429,0x59
  415fe8:	out    0x59,al
  415fea:	cwde   
  415feb:	mov    ah,0x1e
  415fed:	push   esi
  415fee:	call   0x3eed7e0a
  415ff3:	sahf   
  415ff4:	add    al,0x6b
  415ff6:	dec    ebx
  415ff7:	aaa    
  415ff8:	push   esp
  415ff9:	mov    DWORD PTR [ebx+0x26],0x5b3c1ef
  416000:	jnp    0x416038
  416002:	fwait
  416003:	push   edx
  416004:	in     eax,0x8b
  416006:	push   cs
  416007:	add    eax,0x17a1b547
  41600c:	call   0x9eb5:0xdb14f301
  416013:	push   ss
  416014:	rcl    DWORD PTR [ebx+ecx*8-0x39],1
  416018:	imul   edx,DWORD PTR [edi],0xffffffee
  41601b:	cmp    cl,BYTE PTR [esi-0xd4f397e]
  416021:	dec    edi
  416022:	pushf  
  416023:	mov    bl,0x91
  416025:	push   0xfffffff3
  416027:	inc    ecx
  416029:	and    eax,0xf8789f4f
  41602e:	pop    edi
  41602f:	pop    ebp
  416030:	xchg   ecx,eax
  416031:	add    BYTE PTR [edx-0x3075a4a],0x61
  416038:	dec    ecx
  416039:	dec    edx
  41603a:	adc    DWORD PTR [edx+0x56],esp
  41603d:	jge    0x416089
  41603f:	mov    bh,0xeb
  416041:	add    ch,ch
  416043:	add    BYTE PTR [edx+eiz*4],0x53
  416047:	sbb    al,0xcd
  416049:	shl    BYTE PTR [ebx+0x2bd40681],0x82
  416050:	sub    DWORD PTR [edi+0x25fe2869],0xffffffb1
  416057:	sbb    bh,cl
  416059:	jge    0x416083
  41605b:	push   edx
  41605c:	push   0xffffffe2
  41605e:	mov    cl,0x69
  416060:	js     0x4160a3
  416062:	or     eax,esi
  416064:	xchg   ecx,eax
  416065:	mov    al,0x7f
  416067:	add    eax,DWORD PTR [edx+eiz*8-0x407a421a]
  41606e:	iret   
  41606f:	or     ebp,DWORD PTR [edi+0x28]
  416072:	out    dx,al
  416073:	xlat   BYTE PTR ds:[ebx]
  416074:	jno    0x41607e
  416076:	inc    ecx
  416077:	add    esi,eax
  416079:	(bad)  
  41607a:	fs dec esp
  41607c:	xor    eax,0xaff055e8
  416081:	xor    esi,ebp
  416083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416084:	ss cli 
  416086:	std    
  416087:	pop    es
  416088:	je     0x416097
  41608a:	mov    eax,ds:0x79c6e37
  41608f:	cwde   
  416090:	leave  
  416091:	and    edi,ebp
  416093:	xor    BYTE PTR [esi],ch
  416095:	mov    WORD PTR ss:[edi-0x18],fs
  416099:	xchg   edx,eax
  41609a:	pop    ecx
  41609b:	add    eax,0xbd096c4b
  4160a0:	mov    al,ds:0x28aa640e
  4160a5:	adc    eax,0xc58478d4
  4160aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ab:	(bad)  [esi]
  4160ad:	aaa    
  4160ae:	or     al,0xfe
  4160b0:	xchg   esi,eax
  4160b1:	mov    ah,0x1
  4160b3:	mov    al,ds:0x72a6a911
  4160b8:	sub    ch,BYTE PTR [ebx+0x4]
  4160bb:	loope  0x4160f1
  4160bd:	fimul  DWORD PTR [ecx-0x79c26ed7]
  4160c3:	dec    ecx
  4160c4:	cwde   
  4160c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160c6:	mov    ebp,0xc6d07f87
  4160cb:	imul   edi,DWORD PTR [eax-0x4b],0x4c494c17
  4160d2:	popa   
  4160d3:	inc    ecx
  4160d4:	dec    esp
  4160d5:	fsub   QWORD PTR fs:[ecx+0x16e11557]
  4160dc:	call   0x115c:0x7a59c422
  4160e3:	sub    al,0x72
  4160e5:	mov    edx,0xb104c7a1
  4160ea:	outs   dx,DWORD PTR ds:[esi]
  4160eb:	cmp    BYTE PTR [eax],ah
  4160ed:	xchg   esi,eax
  4160ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ef:	out    0x1f,al
  4160f1:	pop    ss
  4160f2:	stc    
  4160f3:	pop    ebp
  4160f4:	(bad)  
  4160f5:	mov    WORD PTR [eax+0x4e],ss
  4160f8:	in     al,0x21
  4160fa:	into   
  4160fb:	adc    al,BYTE PTR ds:0xc3f6bb8f
  416101:	fwait
  416102:	push   0xffffffb0
  416104:	pop    ss
  416105:	mov    edx,0x8f6d10de
  41610a:	into   
  41610b:	sub    DWORD PTR [ecx-0x36d0e5cb],0x4d4d9232
  416115:	mov    DWORD PTR [esi],ebp
  416117:	(bad)  
  416118:	pusha  
  416119:	mov    esi,0x6be2dbd7
  41611e:	les    ecx,FWORD PTR [ecx-0x6302c915]
  416124:	sbb    al,0xc4
  416126:	das    
  416127:	cdq    
  416128:	or     edi,ebp
  41612a:	dec    ecx
  41612b:	jbe    0x41610d
  41612d:	mov    bl,0xb5
  41612f:	sub    BYTE PTR [ecx-0x27],bl
  416132:	sub    eax,0x5071e37d
  416137:	popa   
  416138:	out    dx,eax
  416139:	sahf   
  41613a:	mov    ah,0xee
  41613c:	cld    
  41613d:	mov    ds:0xfe999b67,al
  416142:	test   ebx,ebx
  416144:	mov    esi,0x52fbaef5
  416149:	mov    esi,0x4837e3f
  41614e:	stc    
  41614f:	cmp    al,BYTE PTR [ebp-0x294bcd11]
  416155:	fwait
  416156:	pop    ds
  416157:	cli    
  416158:	mov    ecx,0xd8571b6d
  41615d:	dec    edi
  41615e:	(bad)  
  41615f:	push   esp
  416160:	xchg   ecx,eax
  416161:	aad    0x1b
  416163:	div    al
  416165:	aas    
  416166:	sub    ah,BYTE PTR [ebx]
  416168:	fidiv  WORD PTR [ebx+0x22]
  41616b:	icebp  
  41616c:	test   DWORD PTR [esi+0x43],edi
  41616f:	mov    edx,0xa4a44f50
  416174:	dec    esp
  416175:	addr16 call 0x81d4de4f
  41617b:	loop   0x41615f
  41617d:	sub    eax,0xabd907e7
  416182:	data16 and BYTE PTR [edx+ecx*8],ah
  416186:	aam    0x8a
  416188:	das    
  416189:	test   BYTE PTR [esi-0x4d2f0216],ch
  41618f:	ss sub dl,0xbe
  416193:	dec    esp
  416194:	loop   0x41619e
  416196:	mov    dl,0xaf
  416198:	bound  ebx,QWORD PTR [esi+0x7e]
  41619b:	jecxz  0x4161bf
  41619d:	arpl   WORD PTR [esi],sp
  41619f:	scas   al,BYTE PTR es:[di]
  4161a1:	out    dx,al
  4161a2:	call   0x2dda:0x997b5075
  4161a9:	out    0x2,al
  4161ab:	add    DWORD PTR [ebx+0x550583cb],ecx
  4161b1:	mov    ebp,0xe031c58a
  4161b6:	das    
  4161b7:	scas   al,BYTE PTR es:[edi]
  4161b8:	stos   DWORD PTR es:[edi],eax
  4161b9:	jb     0x416194
  4161bb:	inc    ebp
  4161bc:	dec    eax
  4161bd:	push   0xb602fc7a
  4161c2:	sub    BYTE PTR [edi],al
  4161c4:	cmp    eax,0x43595ba8
  4161c9:	out    0x55,al
  4161cb:	xchg   DWORD PTR ss:[ecx],esi
  4161ce:	bound  ebx,QWORD PTR [eax]
  4161d0:	mov    WORD PTR [eax-0x351a6612],cs
  4161d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161d7:	mov    bh,BYTE PTR [ecx+0x219cdff4]
  4161dd:	iret   
  4161de:	jecxz  0x416239
  4161e0:	push   cs
  4161e1:	push   ecx
  4161e2:	call   0x5160c932
  4161e7:	test   eax,0xcf7704f9
  4161ec:	add    al,0x5f
  4161ee:	(bad)  
  4161f0:	scas   al,BYTE PTR es:[edi]
  4161f1:	cmp    al,0xb2
  4161f3:	retf   0xcd5d
  4161f6:	xchg   ebx,eax
  4161f7:	mov    esp,0xa88f776c
  4161fc:	dec    edi
  4161fd:	mov    ebp,0x81ea6bd9
  416202:	pushf  
  416203:	jge    0x4161e8
  416205:	aad    0x6
  416207:	sub    eax,0x4d644207
  41620c:	mov    ecx,0xf0151ef9
  416211:	mov    WORD PTR [edx+eiz*8-0x4f99ea18],es
  416218:	cwde   
  416219:	lods   al,BYTE PTR ds:[esi]
  41621a:	cmp    bl,BYTE PTR [esi+0x63]
  41621d:	pop    edi
  41621e:	xchg   ebp,eax
  41621f:	fnstsw WORD PTR [ecx]
  416221:	(bad)  
  416222:	pop    ebx
  416223:	xlat   BYTE PTR ds:[ebx]
  416224:	das    
  416225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416226:	mov    bl,0x6
  416228:	xchg   esi,eax
  416229:	cs loopne 0x41626e
  41622c:	mov    WORD PTR [esi-0x24],?
  41622f:	xchg   ecx,eax
  416230:	data16 cli 
  416232:	xor    al,0xbf
  416234:	in     eax,dx
  416235:	xor    eax,0x73c5c379
  41623a:	push   esi
  41623b:	xor    ah,BYTE PTR [ecx-0x77443a3b]
  416241:	aaa    
  416242:	adc    BYTE PTR [ebp-0x1],dh
  416245:	cld    
  416246:	(bad)  
  416247:	lock mov al,ds:0x8a71719a
  41624d:	xchg   esi,eax
  41624e:	push   esp
  41624f:	rol    ebx,1
  416251:	nop
  416252:	mov    ds:0xae5ce99c,eax
  416257:	fadd   DWORD PTR ss:[edx-0x76]
  41625b:	inc    edi
  41625c:	pmuludq mm7,QWORD PTR [edx+ebp*1+0x28]
  416261:	cmp    ecx,ebp
  416263:	pop    esi
  416264:	(bad)  
  416265:	sbb    eax,0x26d69430
  41626a:	jle    0x4162bf
  41626c:	adc    al,ch
  41626e:	pop    es
  41626f:	xor    edx,DWORD PTR [eax-0x26]
  416272:	jmp    0xccd06ef0
  416277:	fidivr WORD PTR [edi]
  416279:	adc    BYTE PTR [ecx+edx*1],ch
  41627c:	add    al,0x31
  41627e:	sbb    dl,BYTE PTR [ebx]
  416280:	pop    edx
  416282:	push   esi
  416283:	fwait
  416284:	pushf  
  416285:	sub    BYTE PTR [edi],ch
  416287:	enter  0xdf0b,0x4d
  41628b:	inc    edi
  41628c:	fistp  QWORD PTR [ebp+ecx*4+0x31303662]
  416293:	mov    es,eax
  416295:	in     al,dx
  416296:	mov    al,0xa
  416298:	int3   
  416299:	mov    DWORD PTR [ebp-0x58],edx
  41629c:	mov    edx,DWORD PTR [ebp+0x8]
  41629f:	mov    ebx,DWORD PTR [ebp-0x54]
  4162a2:	add    edx,0x64f8da
  4162a8:	or     edx,ebx
  4162aa:	mov    DWORD PTR [ebp-0x54],edx
  4162ad:	mov    edx,DWORD PTR [ebp+0x8]
  4162b0:	mov    ebx,DWORD PTR [ebp-0x50]
  4162b3:	add    edx,ecx
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0xe6,eax
  416394:	aad    0x98
  416396:	sub    ebx,DWORD PTR [edi+edx*2+0x79]
  41639a:	jp     0x41639d
  41639c:	pop    edi
  41639d:	jp     0x416419
  41639f:	jl     0x4163b6
  4163a1:	daa    
  4163a2:	dec    esi
  4163a3:	jne    0x41640d
  4163a5:	dec    ecx
  4163a6:	pop    gs
  4163a8:	jg     0x416393
  4163aa:	scas   eax,DWORD PTR es:[edi]
  4163ab:	or     eax,0x92d1235f
  4163b0:	inc    ebx
  4163b1:	lahf   
  4163b2:	clc    
  4163b3:	xor    dl,BYTE PTR [eax]
  4163b5:	ds xor eax,0x635ca37d
  4163bb:	and    eax,0x70ead142
  4163c0:	stos   BYTE PTR es:[edi],al
  4163c1:	stc    
  4163c2:	push   cs
  4163c3:	mov    eax,ds:0xca7f9236
  4163c8:	int    0x38
  4163ca:	push   ebx
  4163cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163cc:	gs pushf 
  4163ce:	jmp    0x5556:0xc3dd84d9
  4163d5:	jno    0x41635f
  4163d7:	dec    esi
  4163d8:	cmp    DWORD PTR [eax],edx
  4163da:	daa    
  4163db:	gs ffreep st(2)
  4163de:	jno    0x416433
  4163e0:	push   edx
  4163e1:	adc    bl,ah
  4163e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163e4:	push   eax
  4163e5:	pop    ebp
  4163e6:	pusha  
  4163e7:	pop    esi
  4163e8:	iret   
  4163e9:	push   ss
  4163ea:	sub    al,0xbe
  4163ec:	data16 jl 0x41642f
  4163ef:	shl    DWORD PTR [eax+0x51d83979],cl
  4163f5:	mov    ds:0x3e785388,eax
  4163fa:	pop    edi
  4163fb:	outs   dx,BYTE PTR ds:[esi]
  4163fc:	mov    bl,0xe5
  4163fe:	jno    0x41639e
  416400:	ret    0xc568
  416403:	add    ecx,eax
  416405:	adc    DWORD PTR [ebp+0xb],esi
  416408:	push   edi
  416409:	mov    edi,0x563b68be
  41640e:	sub    DWORD PTR [esi+0x3a07c00e],edx
  416414:	sbb    DWORD PTR [esi],0x23
  416417:	push   esi
  416418:	ss clc 
  41641a:	adc    dh,ah
  41641c:	mov    ecx,0x4340a49a
  416421:	sub    BYTE PTR ds:0xc131f1ec,dh
  416427:	mov    al,ds:0x23f6fb61
  41642c:	(bad)  
  41642d:	pop    edx
  41642e:	daa    
  41642f:	sbb    al,0x21
  416431:	push   ebx
  416432:	sahf   
  416433:	mov    ebp,0xd74da78c
  416438:	lock add dl,BYTE PTR [eax-0x24]
  41643c:	push   cs
  41643d:	cmp    eax,DWORD PTR [ebp+0x2827caae]
  416443:	(bad)  
  416444:	loop   0x416486
  416446:	cwde   
  416447:	sub    eax,0x206e3ab
  41644c:	mov    ah,bh
  41644e:	mov    dh,0x60
  416450:	in     eax,dx
  416451:	das    
  416452:	aam    0x94
  416454:	jmp    0x352e:0xaa3b3af6
  41645b:	xor    cl,BYTE PTR [eax-0x81782f5]
  416461:	sbb    BYTE PTR [ebp+0x3d8c4db1],ah
  416467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416468:	sub    DWORD PTR [edi+ecx*8],eax
  41646b:	div    DWORD PTR [eax]
  41646d:	add    BYTE PTR [edx],bl
  41646f:	inc    edi
  416470:	dec    esp
  416471:	outs   dx,DWORD PTR ds:[esi]
  416472:	push   es
  416473:	push   es
  416474:	mov    gs,WORD PTR [ebp-0x2df012f]
  41647a:	add    bh,BYTE PTR [ecx-0x219428f6]
  416480:	jne    0x416467
  416482:	push   edx
  416483:	out    dx,eax
  416484:	sti    
  416485:	adc    eax,0x909aa5fe
  41648a:	scas   eax,DWORD PTR es:[edi]
  41648b:	stos   BYTE PTR es:[edi],al
  41648c:	in     al,dx
  41648d:	pushf  
  41648e:	pop    es
  41648f:	xor    ebp,esp
  416491:	mov    edx,0x29cb263c
  416496:	mov    esp,0xcc80c251
  41649b:	out    0x76,al
  41649d:	xchg   esi,eax
  41649e:	out    dx,al
  41649f:	fiadd  WORD PTR [ecx]
  4164a1:	push   ds
  4164a2:	pop    esp
  4164a3:	mov    dl,0xa4
  4164a5:	sbb    DWORD PTR [ecx+eax*1-0x530cf2af],esp
  4164ac:	pop    esi
  4164ad:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164af:	(bad)  
  4164b0:	mov    DWORD PTR [edi+0x60],esp
  4164b3:	daa    
  4164b4:	ins    DWORD PTR es:[edi],dx
  4164b5:	xchg   edi,eax
  4164b6:	iret   
  4164b7:	(bad)  
  4164b8:	ins    BYTE PTR es:[edi],dx
  4164b9:	out    0x7c,eax
  4164bb:	sub    ch,BYTE PTR [ebx+edx*8-0x13]
  4164bf:	push   eax
  4164c0:	jg     0x4164d4
  4164c2:	call   0x4b27:0x52169865
  4164c9:	jnp    0x4164b7
  4164cb:	cmp    bl,ah
  4164cd:	arpl   WORD PTR [ebp+0x6fcc9746],bx
  4164d3:	dec    edi
  4164d4:	and    cl,BYTE PTR ds:0x2525d5bc
  4164da:	sub    eax,0xd7f00a81
  4164df:	add    BYTE PTR [eax],dh
  4164e1:	mov    esi,0x116f291e
  4164e6:	(bad)  [esi]
  4164e8:	pop    edx
  4164e9:	ret    
  4164ea:	xchg   edx,eax
  4164eb:	jmp    FWORD PTR [ecx-0x58605544]
  4164f1:	popf   
  4164f2:	and    dh,BYTE PTR [edx+0x72]
  4164f5:	add    cl,0x23
  4164f8:	cmp    DWORD PTR [ebx],ebp
  4164fa:	shr    BYTE PTR [edx+0x4c],cl
  4164fd:	or     dh,al
  4164ff:	mov    edx,0xb5c53ccd
  416504:	push   ebx
  416505:	jp     0x416511
  416507:	test   DWORD PTR [ebp+0x2],esi
  41650a:	aas    
  41650b:	xor    eax,0xe2b80313
  416510:	sbb    BYTE PTR [ebp-0x5a],ah
  416513:	jae    0x4164e5
  416515:	leave  
  416516:	xchg   BYTE PTR [eax-0x5e],dl
  416519:	ins    BYTE PTR es:[edi],dx
  41651a:	(bad)  
  41651b:	and    dl,BYTE PTR [edi+edi*1+0x74]
  41651f:	sbb    BYTE PTR [ebx-0x64dbd5cf],bl
  416525:	sbb    DWORD PTR [eax+eax*4],ecx
  416528:	mov    ss:0x9a3b94b2,al
  41652e:	int3   
  41652f:	inc    esi
  416530:	add    DWORD PTR [ecx],ebx
  416532:	push   cs
  416533:	int3   
  416534:	mov    eax,0xc0f3d2d5
  416539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41653a:	add    edi,esi
  41653c:	pop    eax
  41653d:	ds data16 ins BYTE PTR es:[edi],dx
  416540:	mov    dl,0xe9
  416542:	sub    esp,DWORD PTR [eax-0x52]
  416545:	xchg   esi,eax
  416546:	ja     0x416512
  416548:	adc    DWORD PTR [eax+0x257d0278],ecx
  41654e:	fs loopne 0x416595
  416551:	xor    edi,DWORD PTR [ebp+0x77]
  416554:	test   DWORD PTR [ecx],ebx
  416556:	cmp    eax,0x8104f7cc
  41655b:	aam    0x1f
  41655d:	in     al,dx
  41655e:	mov    ds,WORD PTR [ebx]
  416560:	leave  
  416561:	stos   DWORD PTR es:[edi],eax
  416562:	xchg   edx,eax
  416563:	js     0x416546
  416565:	or     BYTE PTR [ebx],ch
  416567:	clc    
  416568:	jle    0x416595
  41656a:	cmp    esp,DWORD PTR [ebx+0x22deb92]
  416570:	jo     0x41656a
  416572:	out    0xaa,eax
  416574:	add    DWORD PTR ss:[ebx-0x4846e500],ebp
  41657b:	adc    edx,DWORD PTR [eax-0x62]
  41657e:	jmp    0x74a7:0x1139e2b1
  416585:	mov    edi,0x56880a60
  41658a:	(bad)  [ebx-0xae19d0a]
  416590:	cld    
  416591:	pop    eax
  416592:	fmul   QWORD PTR [ecx+ecx*2]
  416595:	scas   eax,DWORD PTR es:[edi]
  416596:	ja     0x416582
  416598:	pushf  
  416599:	ror    DWORD PTR [ecx],cl
  41659b:	out    dx,al
  41659c:	sahf   
  41659d:	sub    dh,BYTE PTR [esi+0x7309e208]
  4165a3:	jge    0x416539
  4165a5:	jnp    0x4165bd
  4165a7:	cwde   
  4165a8:	sbb    ecx,esi
  4165aa:	fisttp DWORD PTR [edi+esi*2+0x5ddafc84]
  4165b1:	dec    ecx
  4165b2:	ins    BYTE PTR es:[edi],dx
  4165b3:	pop    eax
  4165b4:	dec    ebx
  4165b5:	cmp    al,0xef
  4165b7:	loop   0x416571
  4165b9:	dec    eax
  4165ba:	(bad)  
  4165bc:	inc    edi
  4165bd:	push   ebx
  4165be:	jle    0x416622
  4165c0:	stc    
  4165c1:	arpl   WORD PTR [ebx],bx
  4165c3:	mov    al,al
  4165c5:	xchg   ebx,eax
  4165c6:	imul   edx,esp,0x4a75f4ab
  4165cc:	inc    edx
  4165cd:	xchg   edi,eax
  4165ce:	fwait
  4165cf:	(bad)  
  4165d0:	imul   edi,DWORD PTR ds:0xb6b12201,0xe11e98f0
  4165da:	and    al,0xc9
  4165dc:	int3   
  4165dd:	repz es out dx,al
  4165e0:	or     BYTE PTR [esi-0x63],al
  4165e3:	push   edx
  4165e4:	leave  
  4165e5:	mov    al,0xad
  4165e7:	push   es
  4165e8:	cdq    
  4165e9:	stc    
  4165ea:	das    
  4165eb:	and    ebp,eax
  4165ed:	in     al,dx
  4165ee:	mov    al,al
  4165f0:	mov    esp,0xe09ef28c
  4165f5:	retf   
  4165f6:	jecxz  0x416656
  4165f8:	xchg   BYTE PTR [ecx-0x54f6bc96],ch
  4165fe:	scas   eax,DWORD PTR es:[edi]
  4165ff:	mov    BYTE PTR [ecx+0x3a],bh
  416602:	jbe    0x41663e
  416604:	jle    0x4165e0
  416606:	pop    es
  416607:	dec    BYTE PTR [eax+0x59]
  41660a:	push   eax
  41660b:	or     al,0xcb
  41660d:	and    dl,BYTE PTR [edi+eiz*8-0x679bb969]
  416614:	push   ds
  416615:	cmp    BYTE PTR [ecx-0x882997d],dl
  41661b:	mov    WORD PTR [eax-0x53],gs
  41661e:	fimul  WORD PTR [edi+0x36]
  416621:	sahf   
  416622:	(bad)  
  416623:	stc    
  416624:	sti    
  416625:	sub    BYTE PTR [ecx+0x2d73ca26],al
  41662b:	test   BYTE PTR [eax-0x7f0e970f],ch
  416631:	push   edx
  416632:	sub    bh,BYTE PTR [esi-0x2]
  416635:	das    
  416636:	mov    edi,DWORD PTR [ecx+0x2e]
  416639:	xchg   esp,eax
  41663a:	dec    esp
  41663b:	pop    ss
  41663c:	sub    eax,0x7c1e31c6
  416641:	cmp    al,0x78
  416643:	mov    dh,0x92
  416645:	jae    0x416609
  416647:	stos   DWORD PTR es:[edi],eax
  416648:	push   esp
  416649:	push   ss
  41664a:	ret    0x2f9e
  41664d:	addr16 mov eax,0xa5a28310
  416653:	sub    al,0xdd
  416655:	and    edx,esp
  416657:	cmp    DWORD PTR [eax+0xf],eax
  41665a:	in     al,dx
  41665b:	mov    bh,0x1e
  41665d:	mov    al,ds:0x8e9abb52
  416662:	arpl   WORD PTR [esp+edx*2+0x4e],si
  416666:	aad    0xab
  416668:	mov    bl,0x97
  41666a:	jg     0x41668b
  41666c:	pop    DWORD PTR [ecx-0x4e314017]
  416672:	pusha  
  416673:	jg     0x41664b
  416675:	add    edi,DWORD PTR [ebx]
  416677:	out    0xd6,eax
  416679:	bound  esp,QWORD PTR [ebx]
  41667b:	mov    ebx,0xc775387f
  416680:	adc    DWORD PTR [ebx],eax
  416682:	pop    eax
  416683:	add    BYTE PTR ds:[edx-0xb3b78db],ah
  41668a:	call   0x2bf4:0x2c864708
  416691:	mov    DWORD PTR [ecx],edi
  416693:	pusha  
  416694:	bound  ecx,QWORD PTR [ebx+0x6b098b02]
  41669a:	test   al,0xfb
  41669c:	or     BYTE PTR [eax],bh
  41669e:	pop    esp
  41669f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166a0:	jb     0x416663
  4166a2:	push   cs
  4166a3:	pop    ebp
  4166a4:	enter  0xace0,0xff
  4166a8:	push   eax
  4166a9:	pop    ebp
  4166aa:	xor    BYTE PTR [esi],bh
  4166ac:	cs pop ds
  4166ae:	repnz mov eax,ds:0x37d33c15
  4166b4:	or     al,0x3d
  4166b6:	mov    ebx,0x445d5fec
  4166bb:	test   DWORD PTR [edx],esi
  4166bd:	add    al,0xa
  4166bf:	dec    ecx
  4166c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166c1:	fistp  QWORD PTR [ebp+0x1a35fbf2]
  4166c7:	xor    eax,DWORD PTR [edx+ecx*1-0x4d843cb3]
  4166ce:	sbb    cl,BYTE PTR [ecx+0x74f79191]
  4166d4:	jb     0x4166fa
  4166d6:	dec    esp
  4166d7:	push   edi
  4166d8:	in     al,dx
  4166d9:	mov    al,0x7d
  4166db:	scas   eax,DWORD PTR es:[edi]
  4166dc:	sub    eax,0x47b7435e
  4166e1:	inc    ecx
  4166e2:	cld    
  4166e3:	pop    ss
  4166e4:	cld    
  4166e5:	adc    bh,BYTE PTR [edi]
  4166e7:	mov    edi,0x524c99c7
  4166ec:	cmp    al,0xa8
  4166ee:	dec    ebx
  4166ef:	out    dx,eax
  4166f0:	retf   
  4166f1:	cmp    esi,DWORD PTR [ebx+eax*2-0x73]
  4166f5:	adc    al,0xb9
  4166f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f8:	xor    BYTE PTR es:[esi+0x5b],ah
  4166fc:	cmp    BYTE PTR [esi+0x1399b4d3],0xc5
  416703:	cmp    al,0xc1
  416705:	push   cs
  416706:	inc    edi
  416707:	add    esp,esi
  416709:	adc    eax,0xe7181c71
  41670e:	pop    ecx
  41670f:	or     eax,0x6de20279
  416714:	cmp    BYTE PTR [ebp+0x5],bl
  416717:	rcr    BYTE PTR [ecx+0x36],cl
  41671a:	push   ss
  41671b:	retf   
  41671c:	jg     0x416745
  41671e:	xchg   edi,eax
  41671f:	mov    DWORD PTR [ecx+0x373168ba],eax
  416725:	es mov dh,0xa4
  416728:	mov    bh,0x99
  41672a:	adc    eax,0xab23be2a
  41672f:	jns    0x416701
  416731:	ret    
  416732:	fs pop edi
  416734:	push   ecx
  416735:	sbb    al,0x37
  416737:	retf   0x5934
  41673a:	sbb    DWORD PTR [ecx+0x36c1d838],ecx
  416740:	je     0x4166c7
  416742:	enter  0x1370,0x8a
  416746:	in     al,dx
  416747:	mov    ch,0xb6
  416749:	sub    al,0x3c
  41674b:	(bad)  
  41674d:	xor    DWORD PTR [edx+eax*4],edi
  416750:	sub    ebp,DWORD PTR [ecx]
  416752:	xor    DWORD PTR [edx+0x2f],eax
  416755:	pop    edi
  416756:	push   esp
  416757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416758:	test   DWORD PTR [esp+edi*1-0x5ab3a836],0xa98e1205
  416763:	xlat   BYTE PTR ds:[ebx]
  416764:	or     ch,al
  416766:	cwde   
  416767:	xor    esi,DWORD PTR [ecx+eax*1-0x75c9ffaa]
  41676e:	fcomp  DWORD PTR [eax+0x7eeab65c]
  416774:	or     eax,0x5b6420b
  416779:	rcl    ecx,0xf7
  41677c:	shr    DWORD PTR [edx-0x2f3cfb85],0x2
  416783:	scas   eax,DWORD PTR es:[edi]
  416784:	inc    edx
  416785:	add    DWORD PTR [edi+ecx*2-0x6191faa0],esp
  41678c:	jb     0x416740
  41678e:	mov    esi,0x7f761a3f
  416793:	retf   
  416794:	les    ebp,FWORD PTR [ebx-0x6f]
  416797:	inc    ebp
  416798:	push   edx
  416799:	es icebp 
  41679b:	and    bh,bl
  41679d:	mov    edx,0x9ec06ec8
  4167a2:	sahf   
  4167a3:	(bad)  
  4167a4:	imul   edx,DWORD PTR [eax+0x7fc020ef],0x55
  4167ab:	mov    DWORD PTR [eax+0x1e],eax
  4167ae:	cmp    DWORD PTR [ebp-0x57053aa3],0xd1a17ab
  4167b8:	cmp    eax,0xa6273844
  4167bd:	dec    eax
  4167be:	jbe    0x4167bd
  4167c0:	xor    eax,0xa45cf815
  4167c5:	std    
  4167c6:	pop    esp
  4167c7:	jmp    0x7e78:0x8af55477
  4167ce:	push   edi
  4167cf:	stc    
  4167d0:	(bad)  
  4167d1:	fst    QWORD PTR [edx-0x50]
  4167d4:	dec    edx
  4167d5:	sbb    DWORD PTR [eax],edi
  4167d7:	ja     0x416813
  4167d9:	retf   0xfc19
  4167dc:	fdivp  st(1),st
  4167de:	ds jno 0x416840
  4167e1:	bound  ebx,QWORD PTR [esi-0x44]
  4167e4:	retf   0x84cf
  4167e7:	dec    edx
  4167e8:	pop    ds
  4167e9:	mov    esi,0x743b40c8
  4167ee:	(bad)  
  4167ef:	mov    cl,0xbd
  4167f1:	les    esp,FWORD PTR [eax]
  4167f3:	mov    cl,0x57
  4167f5:	add    esp,DWORD PTR [esi+ebx*1+0x5a]
  4167f9:	jnp    0x4167ea
  4167fb:	dec    ebp
  4167fc:	mov    ds:0xce91afe2,al
  416801:	or     DWORD PTR [ecx+0x12],0x2b
  416805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416806:	pop    ds
  416807:	outs   dx,DWORD PTR ds:[esi]
  416808:	outs   dx,BYTE PTR ds:[esi]
  416809:	xchg   edx,eax
  41680a:	jne    0x416815
  41680c:	jbe    0x41687b
  41680e:	push   ss
  41680f:	pop    ebp
  416810:	out    dx,al
  416811:	(bad)  
  416812:	lahf   
  416813:	fimul  DWORD PTR [esi-0x7ff1cc63]
  416819:	imul   esi,ebx,0xad838567
  41681f:	int3   
  416820:	test   al,0x61
  416822:	mov    bh,0x6a
  416824:	mov    ecx,0x8cb4dd4a
  416829:	push   cs
  41682a:	push   edx
  41682b:	ds ja  0x4167b9
  41682e:	mov    eax,ds:0xaff7473d
  416833:	dec    edx
  416834:	xchg   BYTE PTR [ebx-0x6f],dh
  416837:	call   0xcde6944a
  41683c:	mov    edi,esi
  41683e:	or     BYTE PTR [edx+esi*2-0x2c],dh
  416842:	pop    ebp
  416843:	mov    eax,0xff169f4a
  416848:	mov    dl,BYTE PTR [esi]
  41684a:	loop   0x4168ac
  41684c:	cmp    BYTE PTR [esp-0x71],dl
  416850:	cmp    eax,0xdae482a2
  416855:	shl    DWORD PTR [ebp-0x4],1
  416858:	repnz aad 0xf6
  41685b:	in     eax,dx
  41685c:	je     0x416817
  41685e:	stc    
  41685f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416860:	pop    ss
  416861:	mov    cs,edx
  416863:	sbb    cl,BYTE PTR [ecx+eax*4+0x6172ff63]
  41686a:	sub    DWORD PTR [edi+0x41],esi
  41686d:	mov    edi,0x2d9dbb33
  416872:	gs ins BYTE PTR es:[edi],dx
  416874:	(bad)  
  416875:	jle    0x4168a6
  416877:	cmp    edx,DWORD PTR [ecx]
  416879:	daa    
  41687a:	int    0x5d
  41687c:	sbb    dh,cl
  41687e:	jmp    0x6cc8:0x5b1ebe33
  416885:	and    edx,DWORD PTR [ebp-0x1b]
  416888:	repnz arpl WORD PTR [edx],di
  41688b:	(bad)  
  41688d:	ss gs pop ecx
  416890:	std    
  416891:	test   DWORD PTR [ecx-0xd],esi
  416894:	cmp    BYTE PTR [ecx],ch
  416896:	out    dx,eax
  416897:	push   eax
  416898:	dec    edi
  416899:	loope  0x4168f4
  41689b:	in     eax,0xab
  41689d:	pop    es
  41689e:	test   DWORD PTR [edx-0x12609],esp
  4168a4:	inc    edx
  4168a5:	scas   eax,DWORD PTR es:[edi]
  4168a6:	mov    gs,WORD PTR [ebp-0x1]
  4168a9:	add    cl,BYTE PTR [edi]
  4168ab:	jl     0x4168de
  4168ad:	jge    0x4168ce
  4168af:	lea    eax,[edi]
  4168b1:	jae    0x4168ef
  4168b3:	pop    esi
  4168b4:	enter  0x1b85,0x92
  4168b8:	fild   QWORD PTR [ebx-0x26f6cb7b]
  4168be:	mov    dh,0x3f
  4168c0:	add    eax,0x66a58fe3
  4168c5:	ins    BYTE PTR es:[edi],dx
  4168c6:	push   esi
  4168c7:	push   0xd
  4168c9:	imul   edx,DWORD PTR [ecx-0x1120a169],0xffffffb4
  4168d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168d1:	daa    
  4168d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d3:	xor    eax,0x65145360
  4168d8:	or     DWORD PTR [esi+0x43],esp
  4168db:	mov    dl,0x1
  4168dd:	cmp    BYTE PTR [ebp-0x7eb0bece],0x2d
  4168e4:	push   ecx
  4168e5:	add    al,0x5
  4168e7:	pushf  
  4168e8:	mov    ch,0xc5
  4168ea:	into   
  4168eb:	into   
  4168ec:	xchg   cx,ax
  4168ee:	ds pop eax
  4168f0:	xor    DWORD PTR [edx-0x40],ecx
  4168f3:	dec    ebp
  4168f4:	mov    ecx,0xafcf02ba
  4168f9:	das    
  4168fa:	les    esi,FWORD PTR [ebx-0x3fbaceaf]
  416900:	xlat   BYTE PTR ds:[ebx]
  416901:	iret   
  416902:	pop    ecx
  416903:	lea    edi,[ebx-0xedf356a]
  416909:	mov    edx,0xf00c128
  41690e:	sub    BYTE PTR [esp+edx*4+0x224b50d4],al
  416915:	outs   dx,BYTE PTR ds:[esi]
  416916:	add    DWORD PTR ds:0x64694592,edx
  41691c:	aaa    
  41691d:	or     eax,0x9615eb2f
  416922:	js     0x416926
  416924:	enter  0x8825,0x1e
  416928:	adc    bh,ah
  41692a:	dec    eax
  41692b:	test   BYTE PTR [edi-0x27],0xdf
  41692f:	outs   dx,DWORD PTR ds:[esi]
  416930:	mov    ah,0xb9
  416932:	jmp    0xcef88c13
  416937:	loopne 0x41697f
  416939:	(bad)  
  41693a:	rcr    DWORD PTR [ecx*2-0x2956343f],1
  416941:	cmp    eax,0x6cee4ed3
  416946:	leave  
  416947:	aam    0xd2
  416949:	inc    eax
  41694a:	jl     0x416958
  41694c:	rcr    BYTE PTR [ebx+0x7c],0x5b
  416950:	or     ah,BYTE PTR [esi]
  416952:	int    0xe7
  416954:	xor    al,0x3f
  416956:	or     bl,BYTE PTR [ecx+ecx*4]
  416959:	enter  0x6421,0xb6
  41695d:	dec    edx
  41695e:	ret    0x931
  416961:	pop    esi
  416962:	test   dh,bh
  416964:	out    dx,al
  416965:	call   0x6eea2641
  41696a:	out    0x84,eax
  41696c:	push   ecx
  41696d:	mov    al,0xed
  41696f:	add    BYTE PTR [edx+0x7fd666d6],0x3b
  416976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416977:	in     eax,dx
  416978:	sub    BYTE PTR [ebp-0x4e28a818],ch
  41697e:	jmp    0xf2be83d5
  416983:	inc    eax
  416984:	mov    bl,0x87
  416986:	punpckhwd mm3,QWORD PTR [eax+ebx*2+0x14cce5c9]
  41698e:	inc    edi
  41698f:	int    0x29
  416991:	(bad)  
  416992:	inc    esi
  416993:	xor    BYTE PTR [esi+0xd95c276],ah
  416999:	adc    eax,0x43dc69b
  41699e:	lock and dl,BYTE PTR [esi-0x71278d2e]
  4169a5:	add    esp,DWORD PTR [ecx]
  4169a7:	call   0xe3:0xe5f1f741
  4169ae:	mov    edi,0x611cfdbb
  4169b4:	and    esi,DWORD PTR [esi-0x5a]
  4169b7:	push   ss
  4169b8:	cdq    
  4169b9:	mov    DWORD PTR [ebx],eax
  4169bb:	ds out 0xd6,eax
  4169be:	push   ss
  4169bf:	mov    eax,0xe06f25e
  4169c4:	sahf   
  4169c5:	inc    esi
  4169c6:	imul   esi,esp,0xffffffc5
  4169c9:	push   ecx
  4169ca:	sub    edi,DWORD PTR [eax]
  4169cc:	addr16 pop esi
  4169ce:	pop    edi
  4169cf:	cmc    
  4169d0:	push   edi
  4169d1:	aad    0x45
  4169d3:	fnstcw WORD PTR [eax-0x44a02114]
  4169d9:	cmp    BYTE PTR [ebx],al
  4169db:	inc    edx
  4169dc:	pop    edx
  4169dd:	cmp    al,0xc6
  4169df:	jmp    FWORD PTR [ebp+0x61]
  4169e2:	std    
  4169e3:	xchg   esi,eax
  4169e4:	ret    
  4169e5:	dec    ebp
  4169e6:	dec    esp
  4169e7:	mov    ebp,ebp
  4169e9:	fcmovbe st,st(1)
  4169eb:	stc    
  4169ec:	adc    eax,0xfbe6cef1
  4169f1:	sub    esp,ebx
  4169f3:	outs   dx,DWORD PTR ds:[esi]
  4169f4:	fdivr  QWORD PTR [ebp+0x19]
  4169f7:	inc    ebp
  4169f8:	mov    ecx,ds
  4169fa:	sbb    bh,ah
  4169fc:	sub    eax,0xe39ad2c9
  416a01:	pop    ecx
  416a02:	pop    ebx
  416a03:	jge    0x41699b
  416a05:	stos   BYTE PTR es:[edi],al
  416a06:	adc    DWORD PTR [edx],ebp
  416a08:	ja     0x416a88
  416a0a:	out    0x61,eax
  416a0c:	(bad)  
  416a0d:	das    
  416a0e:	cmp    bl,BYTE PTR [ebx+ebp*1]
  416a11:	adc    BYTE PTR [eax+0x4c2c33ea],0xdb
  416a18:	inc    BYTE PTR [edi-0x62]
  416a1b:	repz or eax,DWORD PTR [ebx-0x18920471]
  416a22:	mov    al,0xd8
  416a24:	cdq    
  416a25:	sbb    ebp,DWORD PTR [eax+0x1f]
  416a28:	and    al,0xb4
  416a2a:	ja     0x416a37
  416a2c:	xchg   edx,eax
  416a2d:	in     al,dx
  416a2e:	push   edi
  416a2f:	(bad)  
  416a30:	(bad)
  416a35:	adc    DWORD PTR [esi],ebx
  416a37:	(bad)  
  416a38:	iret   
  416a39:	ret    0x334d
  416a3c:	push   esp
  416a3d:	mov    eax,DWORD PTR [ecx+0x26]
  416a40:	dec    edx
  416a41:	arpl   cx,sp
  416a43:	mov    ds:0x6d26bbdb,eax
  416a48:	jecxz  0x4169f0
  416a4a:	je     0x416a9a
  416a4c:	sbb    al,0xb9
  416a4e:	popa   
  416a4f:	or     al,0xd8
  416a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a52:	(bad)  
  416a53:	jmp    0x4169e8
  416a55:	or     BYTE PTR [edx-0x7034a78d],ah
  416a5b:	xchg   ebx,eax
  416a5c:	hlt    
  416a5d:	ret    0x342d
  416a60:	fs jo  0x416a25
  416a63:	jp     0x416ab8
  416a65:	xor    edi,DWORD PTR [edx-0x7c]
  416a68:	nop
  416a69:	dec    edx
  416a6a:	cli    
  416a6b:	call   0xf0bd:0x59488d9b
  416a72:	nop
  416a73:	lea    ebp,[edi+0x78]
  416a76:	out    0x5b,al
  416a78:	inc    esi
  416a79:	jecxz  0x416a9e
  416a7b:	push   ebx
  416a7c:	mov    ah,0x7f
  416a7e:	es jl  0x416ad0
  416a81:	jne    0x416a51
  416a83:	cmp    eax,0x5d6f20a7
  416a88:	mov    bl,0x9c
  416a8a:	mov    dh,0xd6
  416a8c:	add    DWORD PTR [eax+0x70203ec1],edi
  416a92:	out    0xa9,eax
  416a94:	jmp    0x416af9
  416a96:	mov    al,ds:0x1c634f4f
  416a9b:	fcmovu st,st(0)
  416a9d:	cmp    bl,dh
  416a9f:	adc    al,0x88
  416aa1:	mov    esp,0xf2145036
  416aa6:	add    al,0x4f
  416aa8:	sbb    BYTE PTR [edi-0x3ceb7fea],dh
  416aae:	pop    ss
  416aaf:	pop    ebx
  416ab0:	mov    edi,0x92404eb6
  416ab5:	div    BYTE PTR [edx]
  416ab7:	mov    ebx,0x3a3a2200
  416abc:	mov    al,0xcf
  416abe:	popf   
  416abf:	sti    
  416ac0:	inc    edx
  416ac1:	aam    0x68
  416ac3:	mov    edx,0xc7511fba
  416ac8:	mov    ds:0xad9aaa65,al
  416acd:	xor    DWORD PTR [edx],0x49
  416ad0:	add    ah,al
  416ad2:	daa    
  416ad3:	out    dx,al
  416ad4:	push   ss
  416ad5:	mov    bl,BYTE PTR [eax+eax*1+0x53d494a4]
  416adc:	rsm    
  416ade:	fidiv  DWORD PTR [ecx+0x1d]
  416ae1:	push   es
  416ae2:	adc    eax,0x147ddb43
  416ae7:	test   eax,0x66c9231f
  416aec:	mov    dl,0x7c
  416aee:	jmp    0x80df:0x9085c19a
  416af5:	into   
  416af6:	js     0x416b4e
  416af8:	jbe    0x416b52
  416afa:	sbb    al,BYTE PTR [ebx]
  416afc:	pop    edi
  416afd:	adc    edi,DWORD PTR [edx-0x64]
  416b00:	pop    ebx
  416b01:	dec    esp
  416b02:	mov    esp,0xc044de87
  416b07:	xor    dh,BYTE PTR [ebx-0x7c]
  416b0a:	xor    al,0xf4
  416b0c:	sti    
  416b0d:	jne    0x416ae0
  416b0f:	into   
  416b10:	mov    ?,esp
  416b12:	jae    0x416b7d
  416b14:	jl     0x416abd
  416b16:	dec    edx
  416b17:	cmp    al,0xc5
  416b19:	cmp    dl,BYTE PTR [ebx+0x46]
  416b1c:	ss and al,0x83
  416b1f:	cs jne 0xf5667f08
  416b26:	dec    esi
  416b27:	inc    ebp
  416b28:	mov    ds:0x5f911358,al
  416b2d:	ffree  st(3)
  416b2f:	xchg   ebx,eax
  416b30:	mov    bl,0x1e
  416b32:	jmp    DWORD PTR [esi+0x4c]
  416b35:	cdq    
  416b36:	mov    WORD PTR [eax+0x55565f93],es
  416b3c:	jecxz  0x416b05
  416b3e:	loopne 0x416b65
  416b40:	push   es
  416b41:	out    0x19,al
  416b43:	dec    edi
  416b44:	shl    DWORD PTR [ebp-0x17],0x28
  416b48:	sub    cl,BYTE PTR [edx]
  416b4a:	or     eax,0xd0faa52c
  416b4f:	std    
  416b50:	hlt    
  416b51:	test   BYTE PTR [ebp-0x2cc80a20],bl
  416b57:	outs   dx,DWORD PTR cs:[esi]
  416b59:	pop    ds
  416b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b5b:	rcr    DWORD PTR [edx],0xf2
  416b5e:	std    
  416b5f:	jb     0x416b26
  416b61:	mov    es,WORD PTR [ebx-0x7c]
  416b64:	xchg   DWORD PTR [ebx+eiz*8-0x7e],edi
  416b68:	daa    
  416b69:	push   eax
  416b6a:	xchg   BYTE PTR [edi],ch
  416b6c:	hlt    
  416b6d:	shl    BYTE PTR [edi+edi*2-0x45],cl
  416b71:	jle    0x416b60
  416b73:	ds leave 
  416b75:	or     BYTE PTR [ebp+0x67a87f37],cl
  416b7b:	dec    eax
  416b7c:	jnp    0x416be7
  416b7e:	loop   0x416b3a
  416b80:	inc    eax
  416b81:	mov    ch,0xa1
  416b83:	push   ss
  416b84:	fnsave [ebp-0x62]
  416b87:	mov    edx,0xf478a825
  416b8c:	mov    edx,0x68e6c2cb
  416b91:	sbb    al,BYTE PTR [ecx-0x76a761f1]
  416b97:	pop    DWORD PTR [ebp-0x38]
  416b9a:	mov    esi,0xd5844e6b
  416b9f:	fld    TBYTE PTR [edi+ebx*1]
  416ba2:	dec    edx
  416ba3:	push   cs
  416ba4:	mov    ah,0x9e
  416ba6:	loopne 0x416be2
  416ba8:	nop
  416ba9:	pop    es
  416baa:	jecxz  0x416b34
  416bac:	in     al,0x87
  416bae:	mov    ah,BYTE PTR [ebx+0x34b8cdab]
  416bb4:	ret    
  416bb5:	push   cs
  416bb6:	add    BYTE PTR [ebx],bh
  416bb8:	inc    edx
  416bb9:	cmc    
  416bba:	cwde   
  416bbb:	and    BYTE PTR [ecx-0x1b014c3c],dl
  416bc1:	cwde   
  416bc2:	push   0xc5e532d4
  416bc7:	cmp    DWORD PTR [esi+0x263fbab2],0x491a7fd1
  416bd1:	pop    edi
  416bd2:	cmc    
  416bd3:	into   
  416bd4:	loopne 0x416be8
  416bd6:	aam    0x3c
  416bd8:	xor    eax,0x5259745b
  416bdd:	fistp  DWORD PTR [ecx-0xc61130b]
  416be3:	pop    ebx
  416be4:	jle    0x416bba
  416be6:	dec    esp
  416be7:	addr16 ret 0x5014
  416beb:	jo     0x416b9c
  416bed:	jp     0x416c43
  416bef:	jbe    0x416c44
  416bf1:	push   edx
  416bf2:	scas   eax,DWORD PTR es:[edi]
  416bf3:	out    0x5c,al
  416bf5:	daa    
  416bf6:	arpl   WORD PTR [ecx+0x90e8a7e],cx
  416bfc:	nop
  416bfd:	push   ds
  416bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bff:	or     ah,BYTE PTR [ecx+0x55]
  416c02:	cli    
  416c03:	test   al,0x16
  416c05:	xor    DWORD PTR [eax-0x2f343ca0],ebx
  416c0b:	loop   0x416be3
  416c0d:	sub    bh,al
  416c0f:	dec    edx
  416c10:	in     eax,0xbb
  416c12:	and    ah,BYTE PTR [ebx+0x6d944da]
  416c18:	outs   dx,DWORD PTR ds:[esi]
  416c19:	xchg   esi,eax
  416c1a:	inc    ebp
  416c1b:	inc    edx
  416c1c:	sbb    edi,DWORD PTR [esi-0x218839e3]
  416c22:	enter  0xb4c3,0x99
  416c26:	fdiv   QWORD PTR [eax]
  416c28:	test   eax,0xe7df8ec1
  416c2d:	mov    eax,ds:0xa7c85ab4
  416c32:	dec    ebp
  416c33:	or     ebx,DWORD PTR [esi-0x5a0a5c9f]
  416c39:	outs   dx,BYTE PTR ds:[esi]
  416c3a:	stos   BYTE PTR es:[edi],al
  416c3b:	push   eax
  416c3c:	les    esi,FWORD PTR [ebx-0x62d5ee93]
  416c42:	xor    bh,cl
  416c44:	dec    edx
  416c45:	cmp    eax,0x4e937f5f
  416c4a:	dec    ecx
  416c4b:	inc    ecx
  416c4c:	cld    
  416c4d:	aas    
  416c4e:	dec    eax
  416c4f:	sbb    eax,0xcf755d7f
  416c54:	dec    esp
  416c55:	adc    eax,0x289c8bc3
  416c5a:	(bad)  
  416c5b:	dec    ebp
  416c5c:	repnz imul esi,DWORD PTR [esi+0x4eaf4b4e],0xc6beef44
  416c67:	push   edx
  416c68:	mov    ds:0x3f9e5ccd,al
  416c6d:	xor    ah,ah
  416c6f:	outs   dx,DWORD PTR ds:[esi]
  416c70:	scas   eax,DWORD PTR es:[edi]
  416c71:	sar    BYTE PTR [esi*1+0x5084b288],0xff
  416c79:	daa    
  416c7a:	pop    edi
  416c7b:	(bad)  
  416c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c7d:	push   ss
  416c7e:	test   BYTE PTR [ebp+0x4d],cl
  416c81:	xchg   DWORD PTR [edx],esi
  416c83:	aaa    
  416c84:	inc    ebx
  416c85:	mov    eax,0x86943b5d
  416c8a:	push   0xdc4ede12
  416c8f:	mov    ds:0xb238625b,eax
  416c94:	or     ebp,eax
  416c96:	cdq    
  416c97:	int3   
  416c98:	outs   dx,DWORD PTR ds:[esi]
  416c99:	ja     0x416c61
  416c9b:	mov    al,0x17
  416c9d:	xchg   esp,eax
  416c9e:	or     ebp,DWORD PTR [edi-0x1c]
  416ca1:	xor    BYTE PTR [eax-0x28],al
  416ca4:	cmc    
  416ca5:	jge    0x416c71
  416ca7:	push   0x59
  416ca9:	retf   
  416caa:	(bad)  
  416cab:	mov    WORD PTR [esp+edx*4],?
  416cae:	daa    
  416caf:	inc    ecx
  416cb0:	sbb    BYTE PTR [ebp-0x1876781f],dl
  416cb6:	jp     0x416c4e
  416cb8:	mov    dh,0xea
  416cba:	mov    al,0xff
  416cbc:	shl    BYTE PTR [esi],1
  416cbe:	dec    edx
  416cbf:	push   eax
  416cc0:	or     DWORD PTR [ecx+0x6e],0x1a
  416cc4:	(bad)  [ebx+0x31faa9f0]
  416cca:	pusha  
  416ccb:	icebp  
  416ccc:	ret    0xc4a9
  416ccf:	cmp    ah,bh
  416cd1:	xchg   esi,eax
  416cd2:	cmp    BYTE PTR [edx-0x30fa17e2],bl
  416cd8:	or     al,0x37
  416cda:	and    esp,ebx
  416cdc:	jecxz  0x416c96
  416cde:	(bad)  
  416cdf:	mov    ah,0x6f
  416ce1:	or     ebx,DWORD PTR fs:[ebx+0x3d]
  416ce5:	mov    dh,0xbc
  416ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ce8:	mov    esp,0xf40f795
  416ced:	sub    esi,esi
  416cef:	les    eax,FWORD PTR [eax-0x45f148d2]
  416cf5:	lahf   
  416cf6:	mov    WORD PTR ds:0xd8ff64f0,?
  416cfc:	dec    edi
  416cfd:	outs   dx,DWORD PTR ds:[esi]
  416cfe:	arpl   ax,sp
  416d00:	dec    ecx
  416d01:	push   ecx
  416d02:	add    DWORD PTR [ebp-0x73],esi
  416d05:	and    BYTE PTR [ebx+edi*8],ah
  416d08:	(bad)  
  416d09:	not    DWORD PTR [ecx+0x4f]
  416d0c:	mov    ebx,0x2649a40b
  416d11:	adc    bl,BYTE PTR [eax-0x1ce6a9a7]
  416d17:	cs ret 0x329e
  416d1b:	dec    ebp
  416d1c:	mov    al,0x77
  416d1e:	and    al,0xef
  416d20:	loope  0x416d44
  416d22:	mov    dh,0xdf
  416d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d25:	and    edx,DWORD PTR [ebx-0x5a]
  416d28:	push   0x1b
  416d2a:	sti    
  416d2b:	fstp   QWORD PTR ds:0x559929a7
  416d31:	push   eax
  416d32:	ret    0xb670
  416d35:	fs cmc 
  416d37:	xchg   edi,eax
  416d38:	cmp    DWORD PTR [ecx-0x6f],esp
  416d3b:	mov    ebx,0x9a2f133e
  416d40:	mov    DWORD PTR [edx],edx
  416d42:	pop    ds
  416d43:	into   
  416d44:	pop    ebx
  416d45:	test   DWORD PTR [esi],ecx
  416d47:	xor    edx,DWORD PTR [esi-0x2196e329]
  416d4d:	add    eax,0xa6c7ec25
  416d52:	mov    WORD PTR [ebx],gs
  416d54:	jp     0x416d70
  416d56:	cmp    eax,0xd1ea690d
  416d5b:	dec    ecx
  416d5c:	arpl   dx,bp
  416d5e:	xchg   edi,eax
  416d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d60:	stc    
  416d61:	aaa    
  416d62:	and    BYTE PTR [edx],ah
  416d64:	xchg   ebp,eax
  416d65:	stos   BYTE PTR es:[edi],al
  416d66:	jno    0x416d7e
  416d68:	cli    
  416d69:	adc    BYTE PTR [edi+0x1f8968b4],bh
  416d6f:	xor    BYTE PTR [esi+0x31e54f94],0x66
  416d76:	mov    eax,ds:0xd0ba8651
  416d7b:	push   ebx
  416d7c:	inc    edx
  416d7d:	inc    ebx
  416d7e:	and    al,0x98
  416d80:	push   0xb09aa644
  416d85:	call   0x3dc9:0xe38e7a64
  416d8c:	daa    
  416d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d8e:	das    
  416d8f:	jb     0x416ddb
  416d91:	mov    esp,0x3cc3431f
  416d96:	jecxz  0x416d82
  416d98:	inc    edx
  416d99:	imul   edi,DWORD PTR [eax-0x15ead798],0xffffffcd
  416da0:	hlt    
  416da1:	add    eax,0x3f0882c
  416da6:	jg     0x416d34
  416da8:	pop    es
  416da9:	ds dec edx
  416dab:	ds push esp
  416dad:	mov    esi,0x207521b2
  416db2:	mov    eax,0x56277b0c
  416db7:	jns    0x416d56
  416db9:	retf   0x36da
  416dbc:	call   0x44dd:0x91b44d8f
  416dc3:	jbe    0x416d70
  416dc5:	(bad)  
  416dc6:	mov    ch,ch
  416dc8:	and    ecx,eax
  416dca:	xor    BYTE PTR [ecx],ah
  416dcc:	push   edx
  416dcd:	pop    esi
  416dce:	retf   
  416dcf:	arpl   WORD PTR [eax],bx
  416dd1:	ror    BYTE PTR [edi+0x31],1
  416dd4:	pop    ds
  416dd5:	cli    
  416dd6:	sti    
  416dd7:	cmp    BYTE PTR [ebx+0x48],bl
  416dda:	or     bh,BYTE PTR [eax+0x2d]
  416ddd:	add    ebx,ecx
  416ddf:	mov    ebp,0x5c7955f
  416de4:	cs xchg edi,eax
  416de6:	sbb    DWORD PTR [ecx-0x6d],esp
  416de9:	adc    eax,0xc8679e35
  416dee:	jl     0x416dcc
  416df0:	retf   
  416df1:	and    al,dl
  416df3:	out    0xc7,eax
  416df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416df6:	test   al,0xa5
  416df8:	retf   
  416df9:	test   BYTE PTR [ecx-0x7ee03987],0x6e
  416e00:	and    BYTE PTR [ecx+0x1e],bl
  416e03:	pop    edi
  416e04:	sbb    al,0xd
  416e06:	mul    BYTE PTR [esi]
  416e08:	adc    al,0x90
  416e0a:	xor    ebx,ecx
  416e0c:	jg     0x416e66
  416e0e:	mov    edi,0x1c9b3a8c
  416e13:	int3   
  416e14:	add    dh,BYTE PTR [ebx]
  416e16:	or     al,bh
  416e18:	sub    al,0xb2
  416e1a:	loopne 0x416d9d
  416e1c:	pop    ds
  416e1d:	repnz ds stos BYTE PTR es:[edi],al
  416e20:	popa   
  416e21:	xor    BYTE PTR [ebx],0xab
  416e24:	cmp    esp,DWORD PTR [esi+edx*4+0x71]
  416e28:	loope  0x416e09
  416e2a:	daa    
  416e2b:	mov    ecx,0x74510554
  416e30:	scas   al,BYTE PTR es:[edi]
  416e31:	inc    ecx
  416e32:	mov    BYTE PTR cs:[eax+0x57029dc4],dl
  416e39:	push   ds
  416e3a:	push   edx
  416e3b:	push   esp
  416e3c:	add    BYTE PTR [ecx],ch
  416e3e:	icebp  
  416e3f:	daa    
  416e40:	pop    ss
  416e41:	into   
  416e42:	push   esi
  416e43:	sub    BYTE PTR [ecx+0x6d],ch
  416e46:	lods   eax,DWORD PTR ds:[esi]
  416e47:	clc    
  416e48:	cmc    
  416e49:	fmul   st,st(1)
  416e4b:	rol    ecx,0x8b
  416e4e:	out    dx,al
  416e4f:	mov    ebx,0x2417472c
  416e54:	jnp    0x416e5f
  416e56:	cmp    ecx,DWORD PTR [eax]
  416e58:	and    BYTE PTR [edx-0xb69a79],0x38
  416e5f:	fld    DWORD PTR [eax]
  416e61:	lock jmp 0xacda5fc5
  416e67:	or     DWORD PTR [eax+0x4c],ecx
  416e6a:	stc    
  416e6b:	and    al,0x7
  416e6d:	jecxz  0x416e54
  416e6f:	cli    
  416e70:	push   ss
  416e71:	sub    DWORD PTR [ebp+0x2b],ebp
  416e74:	repz xchg ebx,eax
  416e76:	adc    eax,0xcb7b9e9e
  416e7b:	and    BYTE PTR [esi-0x17],ah
  416e7e:	out    0x7a,eax
  416e80:	cmp    edx,ebx
  416e82:	push   es
  416e83:	add    al,BYTE PTR [edx+eiz*1-0x7e32e75b]
  416e8a:	sbb    eax,0xb3089fc1
  416e8f:	xchg   edi,eax
  416e90:	test   ebp,edi
  416e92:	fdivr  QWORD PTR [ecx-0x51]
  416e95:	int    0x3c
  416e97:	jns    0x416e65
  416e99:	xor    ah,bh
  416e9b:	test   DWORD PTR [edi+0x1d],ebp
  416e9e:	or     al,0x88
  416ea0:	sub    al,0x1d
  416ea2:	mov    eax,0x224b2083
  416ea7:	ss mov dh,0x67
  416eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eab:	stos   DWORD PTR es:[edi],eax
  416eac:	jae    0x416ef5
  416eae:	sub    eax,DWORD PTR [eax]
  416eb0:	mov    edi,0xbd25f992
  416eb5:	fdiv   QWORD PTR [eax]
  416eb7:	push   eax
  416eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eb9:	pop    edi
  416eba:	jns    0x416f06
  416ebc:	imul   esi,DWORD PTR ds:0xc657c4c8,0x1f
  416ec3:	dec    ebx
  416ec4:	fadd   DWORD PTR [eax+0x24]
  416ec7:	icebp  
  416ec8:	call   0x68ab:0x9e55342
  416ecf:	push   ss
  416ed0:	jmp    0x416ea9
  416ed2:	ja     0x416eb5
  416ed4:	mov    eax,ds:0x923f03d9
  416ed9:	test   DWORD PTR [ecx-0x50],eax
  416edc:	push   es
  416edd:	push   ebx
  416ede:	cmp    esi,DWORD PTR [edx]
  416ee0:	popf   
  416ee1:	add    al,0xac
  416ee3:	sbb    esi,DWORD PTR gs:[edx-0x45]
  416ee7:	mov    edi,0x7a0fcda6
  416eec:	inc    edx
  416eed:	dec    ebp
  416eee:	outs   dx,BYTE PTR ds:[esi]
  416eef:	dec    ecx
  416ef0:	bnd ret 
  416ef2:	jne    0x416e90
  416ef4:	arpl   WORD PTR cs:[edi-0x1615a1c0],si
  416efb:	sbb    eax,0xd248d197
  416f00:	clc    
  416f01:	mov    WORD PTR [eax-0xd],gs
  416f04:	xchg   ebp,eax
  416f05:	bound  ecx,QWORD PTR [esi+0x4]
  416f08:	xchg   ebp,eax
  416f09:	shl    DWORD PTR [edx+0x6a],cl
  416f0c:	push   edi
  416f0d:	call   0xf185:0xb2f64e1b
  416f14:	pop    ebp
  416f15:	xchg   edi,eax
  416f16:	cld    
  416f17:	addr16 in eax,dx
  416f19:	(bad)
  416f1d:	ds mov edi,0xd9db04e1
  416f23:	add    BYTE PTR [esi+0x44fce171],cl
  416f29:	int3   
  416f2a:	mov    ds:0x9741a974,al
  416f2f:	arpl   WORD PTR [eax-0x29],si
  416f32:	and    BYTE PTR [eax+0x40],dh
  416f35:	(bad)  
  416f36:	rol    ah,cl
  416f38:	pop    ebp
  416f39:	scas   al,BYTE PTR es:[edi]
  416f3a:	mov    ds,ebx
  416f3c:	aad    0xa6
  416f3e:	mov    cl,0x82
  416f40:	data16 loop 0x416faf
  416f43:	popf   
  416f44:	push   ss
  416f45:	xchg   ebp,eax
  416f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f47:	nop
  416f48:	jmp    0xb1870bf5
  416f4d:	into   
  416f4e:	and    eax,0x580d48a6
  416f53:	stc    
  416f54:	jbe    0x416f25
  416f56:	mov    edx,0x5ab6c562
  416f5b:	mov    dh,0xa7
  416f5d:	push   DWORD PTR [ecx]
  416f5f:	add    eax,0xd6d00189
  416f64:	and    DWORD PTR [edi],ebx
  416f66:	xchg   BYTE PTR [edx-0x79],dh
  416f69:	sub    eax,0x4d1a3ddf
  416f6e:	jmp    FWORD PTR [esi-0x11]
  416f71:	mov    bh,0xbd
  416f73:	ins    DWORD PTR es:[edi],dx
  416f74:	push   edi
  416f75:	jg     0x416fd9
  416f77:	sbb    bl,BYTE PTR [edx-0x6276ff10]
  416f7d:	add    al,0x48
  416f7f:	mov    ah,0x99
  416f81:	cs icebp 
  416f83:	mov    bl,0x5
  416f85:	xor    DWORD PTR [ecx+eiz*2],edx
  416f88:	xchg   DWORD PTR [edi-0x39b08993],ebp
  416f8e:	fscale 
  416f90:	enter  0xc5d3,0xb7
  416f94:	les    eax,FWORD PTR [bp+si-0x19]
  416f98:	xor    dl,BYTE PTR [ecx+0x72752009]
  416f9e:	inc    eax
  416f9f:	dec    ebp
  416fa0:	(bad)
  416fa3:	pop    es
  416fa4:	popa   
  416fa5:	mov    dh,BYTE PTR [ebx]
  416fa7:	sbb    eax,0xd8148e76
  416fac:	int3   
  416fad:	pop    edi
  416fae:	pop    ss
  416faf:	shl    BYTE PTR [ebp+0x1d],cl
  416fb2:	pop    ss
  416fb3:	loop   0x416f6e
  416fb5:	push   ecx
  416fb6:	sbb    ebx,DWORD PTR [ebp-0x55f54d93]
  416fbc:	sub    al,0x9c
  416fbe:	in     eax,dx
  416fbf:	or     eax,0x5b65a22
  416fc4:	mov    ds:0xe25e21f3,eax
  416fc9:	aas    
  416fca:	mov    ds:0x4d5162a0,al
  416fcf:	shr    BYTE PTR [edx],cl
  416fd1:	mov    edi,0x1328fab3
  416fd6:	popa   
  416fd7:	ret    
  416fd8:	es pop esi
  416fda:	in     eax,0x97
  416fdc:	xor    al,0x7d
  416fde:	ret    0x91cb
  416fe1:	mov    eax,0x519a9518
  416fe6:	dec    ebx
  416fe7:	adc    eax,ecx
  416fe9:	mov    esp,0x6deea269
  416fee:	pusha  
  416fef:	push   ds
  416ff0:	pushf  
  416ff1:	cs je  0x416f9d
  416ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ff5:	lea    ebp,[ecx-0x641ef7d7]
  416ffb:	push   ebp
  416ffc:	aaa    
  416ffd:	sar    DWORD PTR [edx+0x7421bc4c],1
  417003:	add    al,0x8d
  417005:	mov    cl,0xb5
  417007:	sar    edi,cl
  417009:	lahf   
  41700a:	aaa    
  41700b:	gs push ss
  41700d:	ror    DWORD PTR [edx],0xfe
  417010:	call   0x93e6:0x9ab0ee6b
  417017:	adc    eax,0xc09fd4bd
  41701c:	pusha  
  41701d:	loop   0x416ff5
  41701f:	dec    ebp
  417020:	bound  esp,QWORD PTR [esi+0x20bc7067]
  417026:	mov    esp,DWORD PTR [ebp-0x3d]
  417029:	test   al,0xb2
  41702b:	and    DWORD PTR [ebp+0x6fcdb4ea],edi
  417031:	scas   al,BYTE PTR es:[edi]
  417032:	add    eax,0x87d149e1
  417037:	jg     0x417093
  417039:	pop    ecx
  41703a:	pop    ds
  41703b:	jg     0x417037
  41703d:	repnz test BYTE PTR [ecx+0x65],cl
  417041:	and    DWORD PTR [edi],ecx
  417043:	ja     0x417025
  417045:	xchg   edi,eax
  417046:	out    dx,eax
  417047:	ja     0x417043
  417049:	add    BYTE PTR ds:0xab7fe244,cl
  41704f:	or     BYTE PTR [ebx-0x1e1b7762],bh
  417055:	push   eax
  417056:	jne    0x416fff
  417058:	inc    ebp
  417059:	into   
  41705a:	ss inc edx
  41705c:	sahf   
  41705d:	xchg   ebp,eax
  41705e:	frstor [esi+0x51]
  417061:	or     eax,ecx
  417063:	(bad)  
  417064:	ret    0x1804
  417067:	in     eax,dx
  417068:	daa    
  417069:	pop    eax
  41706a:	and    ebx,DWORD PTR [ebx+ecx*1+0x75]
  41706e:	mov    dl,0xf6
  417070:	cwde   
  417071:	cmp    BYTE PTR [edi+0x79884946],cl
  417077:	sar    BYTE PTR [ecx-0x50],cl
  41707a:	fcomp  DWORD PTR [eax-0x29fa1be1]
  417080:	mov    al,BYTE PTR [esi+0x37986f1c]
  417086:	shl    BYTE PTR [esi-0x7b],0x6e
  41708a:	pop    ebx
  41708b:	es pop eax
  41708d:	adc    bh,dh
  41708f:	push   ss
  417090:	adc    eax,DWORD PTR [edi-0x50]
  417093:	ret    0x3fec
  417096:	inc    esp
  417097:	xor    eax,0xc1b6f8ce
  41709c:	xchg   esp,eax
  41709d:	fisttp QWORD PTR [ebx+0x559a38b]
  4170a3:	or     DWORD PTR [edi],eax
  4170a5:	sti    
  4170a6:	mov    bh,0xa7
  4170a8:	pop    es
  4170a9:	retf   
  4170aa:	and    cl,bh
  4170ac:	test   eax,0x311549a9
  4170b1:	adc    bh,BYTE PTR [ecx+0x3b269daa]
  4170b7:	add    eax,DWORD PTR [esi]
  4170b9:	sbb    edi,DWORD PTR [esi-0x36492d52]
  4170bf:	adc    ah,BYTE PTR [ebx+0x53]
  4170c2:	icebp  
  4170c3:	out    dx,eax
  4170c4:	cld    
  4170c5:	ins    DWORD PTR es:[edi],dx
  4170c6:	pop    ecx
  4170c7:	repz popa 
  4170c9:	xor    al,0x58
  4170cb:	retf   
  4170cc:	ror    BYTE PTR [edx],0x71
  4170cf:	sub    esi,ecx
  4170d1:	int3   
  4170d2:	imul   ebp,ecx,0x2b
  4170d5:	dec    ebx
  4170d6:	into   
  4170d7:	or     al,0xef
  4170d9:	mov    eax,DWORD PTR [esi+eax*2]
  4170dc:	mov    eax,ds:0x630092f8
  4170e1:	in     al,dx
  4170e2:	lods   eax,DWORD PTR ds:[esi]
  4170e3:	ret    0xcc74
  4170e6:	ins    DWORD PTR es:[edi],dx
  4170e7:	sbb    bh,BYTE PTR ds:0x934b6e09
  4170ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170ee:	push   ebp
  4170ef:	shr    BYTE PTR [ecx+0x5605343c],cl
  4170f5:	mov    esi,ecx
  4170f7:	sub    al,0xff
  4170f9:	fisub  DWORD PTR [esi-0x58]
  4170fc:	push   0xffffff8d
  4170fe:	test   BYTE PTR [eax-0x73],bh
  417101:	mov    edi,DWORD PTR [ecx+edx*2+0x124d09d6]
  417108:	and    BYTE PTR [ebp-0x49],dl
  41710b:	mov    ebx,0x4b30071e
  417110:	in     eax,dx
  417111:	mov    edi,0x35603899
  417116:	and    bh,al
  417118:	inc    eax
  417119:	paddusb mm2,QWORD PTR [ebx+0x25]
  41711d:	imul   edi,eax,0xbd897f6d
  417123:	sub    edi,esp
  417125:	pop    ebx
  417126:	leave  
  417127:	adc    eax,0x53abe4e3
  41712c:	lds    ebx,FWORD PTR [eax+0xa1ef6c6]
  417132:	mov    BYTE PTR [edx-0x71337793],bh
  417138:	scas   eax,DWORD PTR es:[edi]
  417139:	test   BYTE PTR [ebx],ch
  41713b:	loope  0x41715c
  41713d:	mov    ch,0x8e
  41713f:	mov    eax,ds:0x91e5299f
  417144:	outs   dx,BYTE PTR ds:[esi]
  417145:	pop    ebx
  417146:	ret    
  417147:	lods   eax,DWORD PTR ds:[esi]
  417148:	adc    eax,0xfcaea124
  41714d:	daa    
  41714e:	test   eax,ebx
  417150:	movntq QWORD PTR ds:0xf701e9c9,mm6
  417157:	adc    eax,0xa9ea1ea0
  41715c:	inc    edx
  41715d:	cs pushf 
  41715f:	stc    
  417160:	mov    esi,0xc95fa55b
  417165:	inc    edx
  417166:	or     ebx,eax
  417168:	mov    ah,0xa9
  41716a:	shl    BYTE PTR ds:0x1fa4e941,1
  417170:	adc    ebx,DWORD PTR [edi]
  417172:	sub    DWORD PTR [ecx+0x7f627a1c],edx
  417178:	cmp    BYTE PTR ds:0xf088b0e2,bh
  41717e:	or     eax,0xffb0779f
  417183:	xchg   DWORD PTR [esi],edx
  417185:	jmp    0x417199
  417187:	dec    edi
  417188:	mov    eax,ds:0x71e2ff8
  41718d:	loop   0x4171d1
  41718f:	dec    edi
  417190:	cmp    bh,cl
  417192:	cmovb  esi,edx
  417195:	das    
  417196:	inc    edi
  417197:	fs adc ebx,esi
  41719a:	call   0x6f3:0x6571d189
  4171a1:	or     DWORD PTR [edi-0x56a471e5],ecx
  4171a7:	mov    cl,BYTE PTR [edx]
  4171a9:	mov    ebp,0x4c211679
  4171ae:	push   0xffffffba
  4171b0:	shl    cl,cl
  4171b2:	push   eax
  4171b3:	jmp    0x9b6152c0
  4171b8:	dec    ebx
  4171b9:	sub    eax,0xfeccfb00
  4171be:	and    BYTE PTR [edx],ah
  4171c0:	push   edi
  4171c1:	imul   edi,DWORD PTR [edi-0x4da01570],0x49
  4171c8:	into   
  4171c9:	pusha  
  4171ca:	push   ss
  4171cb:	mov    ?,WORD PTR [ebp+0x10]
  4171ce:	adc    edi,DWORD PTR [ebx+0x14]
  4171d1:	push   ds
  4171d2:	(bad)  
  4171d3:	sar    DWORD PTR [ebx+edi*8-0x7364eb7b],cl
  4171da:	daa    
  4171db:	out    dx,al
  4171dc:	adc    BYTE PTR [ebx+0x1e],0x9c
  4171e0:	(bad)  
  4171e1:	jl     0x41725b
  4171e3:	and    BYTE PTR [esi],0x9a
  4171e6:	add    al,0xbe
  4171e8:	(bad)  
  4171e9:	mov    ah,0x93
  4171eb:	mov    esi,0x8e19525f
  4171f0:	fsubp  st(3),st
  4171f2:	test   eax,0x849ae5e4
  4171f7:	enter  0x2a7b,0x1a
  4171fb:	xchg   ebp,eax
  4171fc:	in     eax,dx
  4171fd:	push   edx
  4171fe:	dec    eax
  4171ff:	lock into 
  417201:	jb     0x4171c1
  417203:	mov    bl,0xb0
  417205:	or     al,0x33
  417207:	popf   
  417208:	ins    DWORD PTR es:[edi],dx
  417209:	pusha  
  41720a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41720b:	mov    DWORD PTR [edx-0xa20583],ecx
  417211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417212:	push   edx
  417213:	sbb    BYTE PTR [edi],dh
  417215:	sbb    eax,0x55ffe2f8
  41721a:	std    
  41721b:	push   ds
  41721c:	or     ah,BYTE PTR [esi-0x13]
  41721f:	iret   
  417220:	lods   al,BYTE PTR ds:[esi]
  417221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417222:	stos   BYTE PTR es:[edi],al
  417223:	pop    es
  417224:	xlat   BYTE PTR ds:[ebx]
  417225:	or     bl,bl
  417227:	rcl    BYTE PTR [esi-0x44b65abe],1
  41722d:	xor    ebp,esp
  41722f:	loope  0x417232
  417231:	xor    BYTE PTR [ebx+0x6ac77f4c],ch
  417237:	dec    ecx
  417238:	xor    ebx,DWORD PTR [edx]
  41723a:	lahf   
  41723b:	jg     0x4171c6
  41723d:	aas    
  41723e:	ret    0xe4dd
  417241:	xor    ebp,DWORD PTR [esi+0x7b]
  417244:	push   es
  417245:	mov    al,ds:0x87bf8bc
  41724a:	jmp    0x417214
  41724c:	cmp    ebx,esp
  41724e:	add    bl,BYTE PTR [ecx-0x17]
  417251:	mov    esi,0xaf3b581d
  417256:	addr16 inc esp
  417258:	clc    
  417259:	push   ebp
  41725a:	outs   dx,BYTE PTR ds:[esi]
  41725b:	push   eax
  41725c:	(bad)  
  41725d:	ins    DWORD PTR es:[edi],dx
  41725e:	outs   dx,DWORD PTR ss:[esi]
  417260:	mov    eax,ds:0xd800e5ef
  417265:	adc    eax,edx
  417267:	adc    BYTE PTR [esi+0x29],cl
  41726a:	xchg   esi,eax
  41726b:	jae    0x417282
  41726d:	rcr    BYTE PTR [eax+ebx*1],cl
  417270:	sub    dl,0xc3
  417273:	add    DWORD PTR [edi-0x38dfa010],0x3e
  41727a:	mov    esp,0xa9c313b
  41727f:	fcomp  DWORD PTR [edi-0x42]
  417282:	ins    BYTE PTR es:[edi],dx
  417283:	inc    ebp
  417284:	(bad)  
  417286:	fsubrp st(6),st
  417288:	loope  0x4172d9
  41728a:	sub    esp,ecx
  41728c:	jge    0x417307
  41728e:	aas    
  41728f:	and    esi,DWORD PTR [esi]
  417291:	adc    al,0xe4
  417293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417294:	mov    ss,WORD PTR [esi]
  417296:	or     BYTE PTR [eax+0x19],al
  417299:	pop    es
  41729a:	cmp    cl,BYTE PTR [ecx+0x9]
  41729d:	and    al,0x53
  41729f:	or     eax,0x14926a9e
  4172a4:	mov    cl,0x7a
  4172a6:	(bad)  
  4172a7:	ins    DWORD PTR es:[edi],dx
  4172a8:	push   ebp
  4172a9:	loop   0x4172f2
  4172ab:	sar    BYTE PTR [eax-0x49ff4463],cl
  4172b1:	jmp    0x67934ef2
  4172b6:	lock ror DWORD PTR ds:0x65dd7a3e,1
  4172bd:	jbe    0x417320
  4172bf:	push   esi
  4172c0:	fwait
  4172c1:	sbb    eax,0xbaeae994
  4172c6:	jb     0x41730c
  4172c8:	jb     0x41725a
  4172ca:	mov    esi,0x810b7e0d
  4172cf:	push   eax
  4172d0:	xor    eax,0x6175ca0b
  4172d5:	add    bl,BYTE PTR [edx+0x31acc73a]
  4172db:	dec    edx
  4172dc:	loop   0x417349
  4172de:	inc    esp
  4172df:	dec    ecx
  4172e0:	into   
  4172e1:	or     BYTE PTR [ecx+0xf],dl
  4172e4:	int    0xc
  4172e6:	jg     0x417271
  4172e8:	out    dx,eax
  4172e9:	cwde   
  4172ea:	mov    ch,0x4f
  4172ec:	or     eax,0x58ff5d02
  4172f1:	add    eax,0x3152d74e
  4172f6:	jae    0x4172ab
  4172f8:	call   0x55fd90aa
  4172fd:	push   eax
  4172fe:	sbb    edi,DWORD PTR [ebp+0x9]
  417301:	and    al,0xae
  417303:	std    
  417304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417305:	clc    
  417306:	pop    ds
  417307:	rcr    DWORD PTR [ebp-0x5aa70af8],cl
  41730d:	dec    esp
  41730e:	inc    ecx
  41730f:	nop
  417310:	pusha  
  417311:	ins    BYTE PTR es:[edi],dx
  417312:	xchg   edx,eax
  417313:	push   ebp
  417314:	and    al,0xfd
  417316:	dec    eax
  417317:	mov    al,0x85
  417319:	jl     0x417393
  41731b:	mov    BYTE PTR [esi+0x32],ch
  41731e:	add    al,0x39
  417320:	pop    esi
  417321:	and    DWORD PTR [edi+eiz*8],ebx
  417324:	xor    bh,ah
  417326:	mul    bl
  417328:	dec    ebp
  417329:	fcomp  DWORD PTR [eax-0x24fc7229]
  41732f:	ss or  edi,esp
  417332:	sbb    BYTE PTR [ecx+0x13],ah
  417335:	and    DWORD PTR [edx+0x23],0xffffffce
  417339:	pop    edx
  41733a:	xlat   BYTE PTR ds:[ebx]
  41733b:	imul   ebx,DWORD PTR [eax-0x2],0x446481c3
  417342:	loope  0x41737d
  417344:	push   edx
  417345:	addr16 xchg ebx,ebp
  417348:	test   DWORD PTR [ebp-0x61e50171],ebx
  41734e:	inc    ebx
  41734f:	test   BYTE PTR [edx+edi*8],bh
  417352:	(bad)  
  417353:	stos   DWORD PTR es:[edi],eax
  417354:	ret    
  417355:	dec    esi
  417356:	leave  
  417357:	jg     0x4173b1
  417359:	clc    
  41735a:	xchg   esp,eax
  41735b:	mov    ds:0x93a2aeec,al
  417360:	and    al,0x6c
  417362:	sub    al,0x33
  417364:	shr    BYTE PTR [edi-0x54c0200a],cl
  41736a:	adc    DWORD PTR [edi-0x12abb40f],ebx
  417370:	test   BYTE PTR [ebx],ch
  417372:	(bad)  [edi+ebp*4]
  417375:	mov    ch,0xb2
  417377:	jnp    0x4172fc
  417379:	sbb    ecx,DWORD PTR [ebx+edx*2-0xf6eff68]
  417380:	(bad)  
  417381:	repnz shr DWORD PTR [ebx+0xac1c3dd],1
  417388:	push   edi
  417389:	dec    edi
  41738a:	outs   dx,DWORD PTR ds:[esi]
  41738b:	jae    0x4173a6
  41738d:	jbe    0x417370
  41738f:	mul    eax
  417391:	cmp    ebx,DWORD PTR [ebx]
  417393:	pusha  
  417394:	dec    ebp
  417395:	mov    WORD PTR [edi],fs
  417397:	(bad)  
  417398:	cdq    
  417399:	jmp    0x41731b
  41739b:	and    ah,BYTE PTR [esi+0x60741fa1]
  4173a1:	jmp    0x417359
  4173a3:	push   edx
  4173a4:	popa   
  4173a5:	ins    BYTE PTR es:[edi],dx
  4173a6:	popa   
  4173a7:	mov    ah,0x55
  4173a9:	cmc    
  4173aa:	and    bh,cl
  4173ac:	ret    
  4173ad:	lahf   
  4173ae:	nop
  4173af:	push   0x6b3896d0
  4173b4:	pop    edi
  4173b5:	test   eax,0x1296ac00
  4173ba:	mov    al,ds:0xd5fffc51
  4173bf:	int3   
  4173c0:	(bad)  
  4173c1:	lock int3 
  4173c3:	and    BYTE PTR [esi+0x480ba707],bl
  4173c9:	adc    al,0xbc
  4173cc:	aas    
  4173cd:	mov    esi,esi
  4173cf:	jne    0x417434
  4173d1:	jae    0x4173e1
  4173d3:	test   DWORD PTR [ebp+0x19],0x7945b01a
  4173da:	daa    
  4173db:	inc    esi
  4173dc:	add    edx,edi
  4173de:	pop    eax
  4173df:	sub    al,0xc7
  4173e1:	fwait
  4173e2:	and    al,0x1d
  4173e4:	inc    eax
  4173e5:	lods   eax,DWORD PTR ds:[esi]
  4173e6:	(bad)  
  4173e7:	jae    0x41745b
  4173e9:	dec    eax
  4173ea:	(bad)  
  4173eb:	mov    esi,0x34ef1b60
  4173f0:	adc    edx,DWORD PTR [esi+0x3e]
  4173f3:	jae    0x417447
  4173f5:	ficomp DWORD PTR [esi-0x8d2e060]
  4173fb:	loop   0x417459
  4173fd:	into   
  4173fe:	push   es
  4173ff:	mov    eax,ds:0xcb692fa1
  417404:	scas   al,BYTE PTR es:[edi]
  417405:	pop    ecx
  417406:	xlat   BYTE PTR ds:[ebx]
  417407:	and    ah,BYTE PTR [ebx+0x27]
  41740a:	xchg   ebx,eax
  41740c:	mov    dh,0x5e
  41740e:	mov    esp,0xe682abaf
  417413:	fldenv [edx]
  417415:	inc    eax
  417416:	mov    ah,0x18
  417418:	test   al,0x3c
  41741a:	mov    ah,0x38
  41741c:	lea    ecx,[eax]
  41741e:	cmp    esi,edi
  417420:	jae    0x4173ab
  417422:	jmp    0x9809:0x3e8d50e2
  417429:	pop    ecx
  41742a:	mov    es,ecx
  41742c:	and    eax,DWORD PTR [eax]
  41742e:	pop    ss
  41742f:	jo     0x4173e4
  417431:	inc    ecx
  417432:	mov    DWORD PTR [edi-0x1d],ebx
  417435:	out    dx,eax
  417436:	fldcw  WORD PTR [edi-0x58744870]
  41743c:	mov    al,0xb5
  41743e:	sti    
  41743f:	jbe    0x4173c7
  417441:	fsub   DWORD PTR [edx+0x2f]
  417444:	or     al,0xa1
  417446:	push   0xffffffbb
  417448:	rcl    BYTE PTR [esi-0x41],0xd3
  41744c:	mov    WORD PTR [edx-0x4ca0fed2],gs
  417452:	mov    edi,0xee236d33
  417457:	mov    cl,0xed
  417459:	aad    0xd8
  41745b:	out    dx,eax
  41745c:	aas    
  41745d:	fwait
  41745e:	xchg   esi,eax
  41745f:	jecxz  0x417432
  417461:	mov    BYTE PTR [esi-0x4026092],dh
  417467:	xchg   edx,eax
  417468:	sar    DWORD PTR [ebx-0x4d],1
  41746b:	daa    
  41746c:	push   edx
  41746d:	das    
  41746e:	jb     0x417492
  417470:	pop    ss
  417471:	pop    ecx
  417472:	jecxz  0x417409
  417474:	shl    DWORD PTR [edi-0x7789311d],1
  41747a:	aas    
  41747b:	sub    al,0x8b
  41747d:	sbb    ebp,ebx
  41747f:	test   dh,dh
  417481:	fnstenv [eax+0x3438c4ca]
  417487:	pop    edx
  417488:	sub    ecx,DWORD PTR [esi-0x6]
  41748b:	mov    cl,0x32
  41748d:	mov    ecx,0xf0d5fb77
  417492:	lods   eax,DWORD PTR ds:[esi]
  417493:	aas    
  417494:	lods   eax,DWORD PTR ds:[esi]
  417495:	fiadd  WORD PTR [ebx-0x7a]
  417498:	mov    bh,0xb0
  41749a:	dec    ebp
  41749b:	pop    DWORD PTR [edx-0x79942053]
  4174a1:	adc    esi,eax
  4174a3:	pop    ds
  4174a4:	pop    ebp
  4174a5:	sbb    eax,0x233c1b2e
  4174aa:	mov    DWORD PTR [ebp-0x12],ecx
  4174ad:	lea    edx,[ecx+eax*1+0x7f26e17a]
  4174b4:	gs jl  0x417483
  4174b7:	mov    ch,0x5b
  4174b9:	std    
  4174ba:	add    DWORD PTR [ebx-0x7],ebp
  4174bd:	mov    esp,cs
  4174bf:	sbb    dh,BYTE PTR [edx+0x4b]
  4174c2:	(bad)  
  4174c4:	sub    eax,0xd29e0ea9
  4174c9:	ja     0x417498
  4174cb:	(bad)  
  4174cc:	je     0x4174b3
  4174ce:	add    dh,dh
  4174d0:	mov    dh,BYTE PTR [eax+esi*2-0x2fc816e3]
  4174d7:	dec    edx
  4174d8:	inc    ebp
  4174d9:	fimul  WORD PTR [ebp+0x5384b2ce]
  4174df:	shl    BYTE PTR [eax+0xbbeebfb],0x56
  4174e6:	mov    ebx,0x7692e6d
  4174eb:	inc    ebp
  4174ec:	pop    ecx
  4174ed:	jp     0x41751d
  4174ef:	mov    WORD PTR [edi-0x4a],gs
  4174f2:	fdiv   DWORD PTR [ebp+0x68]
  4174f5:	or     DWORD PTR [ecx+ecx*8+0x4da55e8a],0xffffffda
  4174fd:	push   0xfffffff4
  4174ff:	fisttp DWORD PTR [ebp+0x58727158]
  417505:	mov    al,0x8b
  417507:	push   eax
  417508:	jmp    0x7807f45b
  41750d:	mov    dl,0x1d
  41750f:	mov    ch,0x28
  417511:	cwde   
  417512:	stos   DWORD PTR es:[edi],eax
  417513:	in     al,dx
  417514:	xor    al,0x4b
  417516:	(bad)  
  417517:	adc    ebp,edi
  417519:	test   BYTE PTR [edi-0x49],bl
  41751c:	or     edi,ecx
  41751e:	pop    ebx
  41751f:	push   ds
  417520:	or     ecx,ebp
  417522:	ins    DWORD PTR es:[edi],dx
  417523:	mov    dl,0x98
  417525:	pop    ss
  417526:	bound  esi,QWORD PTR [ebx]
  417528:	mov    dl,0x51
  41752a:	pop    edi
  41752b:	or     al,0xa3
  41752d:	lea    edi,[ebp+0x1a]
  417530:	and    DWORD PTR [edx],ebx
  417532:	in     eax,dx
  417533:	dec    ecx
  417534:	sbb    DWORD PTR [eax+0x50],esi
  417537:	cwde   
  417538:	mov    ds,WORD PTR [edi+0x79]
  41753b:	add    esp,edi
  41753d:	xchg   ebp,eax
  41753e:	aam    0x97
  417540:	jg     0x417547
  417542:	jmp    0xc70e40ed
  417547:	daa    
  417548:	mov    ebp,0xcd5523b1
  41754d:	test   DWORD PTR [edi+edi*2-0x70c3d4dc],esi
  417554:	xchg   esp,eax
  417555:	mov    esp,0x2ba9e49a
  41755a:	imul   esp,DWORD PTR [ebx-0x7b],0xc8d76720
  417561:	in     eax,dx
  417562:	jbe    0x4174e9
  417564:	jo     0x417567
  417566:	mov    al,ds:0xf2b14efd
  41756b:	fwait
  41756c:	add    BYTE PTR [esi+0x59],dl
  41756f:	in     al,0x3f
  417571:	pop    es
  417572:	imul   eax,DWORD PTR [edx-0x44],0xe774b0d8
  417579:	sub    BYTE PTR [esi-0x44],bl
  41757c:	mov    eax,esi
  41757e:	fcomip st,st(4)
  417580:	jp     0x41754d
  417582:	ins    BYTE PTR es:[edi],dx
  417583:	and    eax,0xc976562e
  417588:	xor    DWORD PTR [ebx+0x57],eax
  41758b:	mov    cl,0xfd
  41758d:	je     0x4175f9
  41758f:	jle    0x41759c
  417591:	sbb    BYTE PTR [ebx-0x170ce7b9],cl
  417597:	ret    0x965b
  41759a:	retf   
  41759b:	jnp    0x417598
  41759d:	stc    
  41759e:	pop    ss
  41759f:	dec    ecx
  4175a0:	imul   ebx,DWORD PTR [eax+0x885af4a],0x9fccf4ca
  4175aa:	loop   0x417578
  4175ac:	mov    fs,WORD PTR [ecx-0x35]
  4175af:	ins    DWORD PTR es:[edi],dx
  4175b0:	stos   BYTE PTR es:[edi],al
  4175b1:	xor    BYTE PTR [esi-0x5f851b72],bh
  4175b7:	cdq    
  4175b8:	mov    eax,ds:0x54815add
  4175bd:	pop    esp
  4175be:	and    cl,BYTE PTR [ebx]
  4175c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175c1:	aad    0xd4
  4175c3:	xchg   ecx,eax
  4175c4:	call   0x75510c5a
  4175c9:	jge    0x4175f3
  4175cb:	es dec ecx
  4175cd:	in     al,0x2b
  4175cf:	pusha  
  4175d0:	imul   ebp,ecx,0xd96ec5d7
  4175d6:	xchg   ecx,eax
  4175d7:	cmp    esi,edx
  4175d9:	pop    esi
  4175da:	mov    edx,0x6c41191e
  4175df:	jns    0x417597
  4175e1:	mov    eax,ds:0x9763168
  4175e6:	int    0xc2
  4175e8:	add    eax,0xc6dad38e
  4175ed:	hlt    
  4175ee:	and    ch,ch
  4175f0:	rol    DWORD PTR [ebp-0x76],1
  4175f3:	inc    eax
  4175f4:	cmp    eax,0xb4340713
  4175f9:	test   DWORD PTR [edx-0x38806524],ebp
  4175ff:	inc    ebx
  417600:	push   esi
  417601:	fsub   QWORD PTR [ebx-0x59102dd4]
  417607:	bound  esp,QWORD PTR [ebp+0x3b2c311a]
  41760d:	shl    BYTE PTR [esi-0x7f],cl
  417610:	pop    ebp
  417611:	fild   QWORD PTR [ebx]
  417613:	sahf   
  417614:	(bad)  
  417615:	cmp    esp,DWORD PTR [edx+edx*4-0xe]
  417619:	and    bl,BYTE PTR [esi]
  41761b:	sub    al,0x75
  41761d:	(bad)  
  41761e:	fimul  DWORD PTR [ebx]
  417620:	or     al,0x7b
  417622:	mov    gs,ecx
  417624:	inc    ebx
  417625:	dec    ebp
  417626:	add    eax,0x1f22d7e8
  41762b:	cmc    
  41762c:	mul    DWORD PTR [ecx+0x2fb5e65e]
  417632:	icebp  
  417633:	xor    ch,BYTE PTR [esi]
  417635:	dec    edx
  417636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417637:	jno    0x417677
  417639:	push   ecx
  41763a:	dec    ebp
  41763b:	sbb    ebx,DWORD PTR [ebp-0x4d]
  41763e:	push   ebp
  41763f:	sbb    ebx,esi
  417641:	ins    BYTE PTR es:[edi],dx
  417642:	jecxz  0x417610
  417644:	push   edx
  417645:	pop    esi
  417646:	or     al,0xf
  417648:	xchg   DWORD PTR [eax+0x5668be13],edx
  41764e:	jno    0x417657
  417650:	sti    
  417651:	imul   ebp,DWORD PTR [ecx-0x49],0x28
  417655:	outs   dx,BYTE PTR ds:[esi]
  417656:	(bad)  
  417657:	je     0x417671
  417659:	add    edx,DWORD PTR [edx]
  41765b:	mov    BYTE PTR [edx+0x78],al
  41765e:	jbe    0x4175f0
  417660:	sub    al,0xcf
  417662:	(bad)  
  417663:	sbb    bl,BYTE PTR [ebp+0x3]
  417666:	cs popf 
  417668:	jne    0x417689
  41766a:	sub    BYTE PTR [esi+0x43],bh
  41766d:	mov    ds:0x86abea5c,al
  417672:	push   ss
  417673:	in     al,dx
  417674:	sub    eax,0xb5a28a46
  417679:	bound  ebx,QWORD PTR [eax]
  41767b:	aas    
  41767c:	test   eax,0x68fde635
  417681:	out    0x5,al
  417683:	sub    dl,dh
  417685:	inc    esi
  417686:	push   esp
  417687:	shl    BYTE PTR [edx+0x14805711],0xf3
  41768e:	call   0x9785873d
  417693:	shr    BYTE PTR [esi-0x7ef1c1b],1
  417699:	xchg   esi,eax
  41769a:	push   esp
  41769b:	call   0x7680:0xdf64825
  4176a2:	add    eax,0xa3b7de26
  4176a7:	mov    esi,0xe180a625
  4176ac:	aaa    
  4176ad:	aad    0xf2
  4176af:	idiv   BYTE PTR [eax]
  4176b1:	cmp    ch,BYTE PTR [ebp-0x90dcf8b]
  4176b7:	bound  ebp,QWORD PTR [edx]
  4176b9:	jge    0x4176e5
  4176bb:	retf   0xe378
  4176be:	adc    al,0xce
  4176c0:	mov    es,WORD PTR [ebx+edi*8-0x27]
  4176c4:	imul   ebx,DWORD PTR [edx+edi*8],0x53aad39e
  4176cb:	jb     0x417686
  4176cd:	data16 mov dh,0x30
  4176d0:	adc    BYTE PTR [eax-0x39],0x3a
  4176d4:	sti    
  4176d5:	ret    0x817d
  4176d8:	push   0x9
  4176da:	(bad)  
  4176db:	outs   dx,DWORD PTR ds:[esi]
  4176dc:	sbb    al,0x98
  4176de:	ins    DWORD PTR es:[edi],dx
  4176df:	aad    0x6
  4176e1:	ss inc edx
  4176e3:	xchg   ebx,eax
  4176e4:	inc    esp
  4176e5:	dec    edx
  4176e6:	test   DWORD PTR [ebp-0x49e2b962],ebp
  4176ec:	sbb    edx,DWORD PTR [ebp-0x6b]
  4176ef:	cdq    
  4176f0:	mov    bh,0xae
  4176f2:	(bad)  
  4176f4:	and    ecx,edx
  4176f6:	mov    al,ds:0x9c9dd48a
  4176fb:	jnp    0x4176cd
  4176fd:	retf   
  4176fe:	mov    esp,0x6ac4af23
  417703:	pushf  
  417704:	int    0x5e
  417706:	sbb    BYTE PTR [ebp-0x33],dh
  417709:	scas   eax,DWORD PTR es:[edi]
  41770a:	cmp    edx,DWORD PTR [esi+0x3d]
  41770d:	gs dec eax
  41770f:	rol    ebp,0x13
  417712:	icebp  
  417713:	sbb    eax,0x2d30f8ad
  417718:	pop    eax
  417719:	sub    DWORD PTR [ecx],0x3
  41771c:	mov    edi,0x99ffc561
  417721:	lock ins DWORD PTR es:[edi],dx
  417723:	arpl   WORD PTR [eax-0x2e1c4dad],sp
  417729:	fdivr  DWORD PTR [edx-0x166678ff]
  41772f:	xor    al,0xf
  417731:	(bad)  
  417733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417734:	clc    
  417735:	pusha  
  417736:	test   al,0x1c
  417738:	scas   eax,DWORD PTR es:[edi]
  417739:	std    
  41773a:	xchg   dl,cl
  41773c:	sbb    esp,DWORD PTR [eax-0x3a6b4b5a]
  417742:	jbe    0x417705
  417744:	pusha  
  417745:	dec    ebx
  417746:	cmp    eax,0x2c7543b3
  41774b:	mov    esp,0xbdbf9bdd
  417750:	pop    edx
  417751:	lods   eax,DWORD PTR ds:[esi]
  417752:	cli    
  417753:	and    eax,0xe41fabfa
  417758:	stc    
  417759:	mov    ebp,cr6
  41775c:	xchg   ebp,eax
  41775d:	mov    ds:0xf5a0ab3e,eax
  417762:	loopne 0x4177ce
  417764:	and    DWORD PTR [esp+ebx*2-0x22],ecx
  417768:	fwait
  417769:	and    ecx,DWORD PTR [ebx+0x9]
  41776c:	icebp  
  41776d:	es cwde 
  41776f:	(bad)  
  417770:	push   edi
  417771:	popf   
  417772:	dec    ecx
  417773:	dec    esp
  417774:	jge    0x41770a
  417776:	xchg   ecx,eax
  417777:	out    0x6c,eax
  417779:	xor    BYTE PTR [ecx-0x51dede95],cl
  41777f:	adc    bl,BYTE PTR ds:0xfc498058
  417785:	jmp    FWORD PTR [esi]
  417787:	cli    
  417788:	jl     0x4177e3
  41778a:	(bad)  
  41778b:	adc    esi,DWORD PTR [ebx+0x5d]
  41778e:	ins    BYTE PTR es:[edi],dx
  41778f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417790:	sub    al,0x76
  417792:	scas   eax,DWORD PTR es:[edi]
  417793:	inc    ebx
  417794:	(bad)  
  417795:	jmp    0xe3c5d4f
  41779a:	mov    al,0x7a
  41779c:	stos   DWORD PTR es:[edi],eax
  41779d:	outs   dx,BYTE PTR ds:[esi]
  41779e:	xchg   ebp,eax
  41779f:	jg     0x4177e9
  4177a1:	xor    al,0xeb
  4177a3:	cmp    DWORD PTR [eax-0x39],ebx
  4177a6:	cli    
  4177a7:	jnp    0x41777a
  4177a9:	xlat   BYTE PTR ds:[ebx]
  4177aa:	cmovne edx,ecx
  4177ad:	loop   0x41779e
  4177af:	aaa    
  4177b0:	mov    cl,0xf6
  4177b2:	adc    DWORD PTR [ebp+0x12],ebx
  4177b5:	aad    0xd1
  4177b7:	inc    bx
  4177b9:	pop    ss
  4177ba:	add    DWORD PTR [edx-0x31],ebp
  4177bd:	retf   
  4177be:	push   cs
  4177bf:	fcmovnu st,st(7)
  4177c1:	adc    BYTE PTR [edx],0x54
  4177c4:	dec    ebp
  4177c5:	cmp    ebp,DWORD PTR ds:0xd8c16e91
  4177cb:	loope  0x417805
  4177cd:	sbb    eax,0xbed24f06
  4177d2:	sbb    ebp,DWORD PTR [edi+0x38cf410e]
  4177d8:	rcr    DWORD PTR [ecx],cl
  4177da:	mov    edx,0x425ba2e4
  4177df:	sti    
  4177e0:	jne    0x4177ae
  4177e2:	aam    0x98
  4177e4:	xchg   ecx,eax
  4177e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177e6:	xlat   BYTE PTR ds:[ebx]
  4177e7:	fcom   DWORD PTR [ebp+0x79bf0e11]
  4177ed:	ret    0x9979
  4177f0:	inc    edi
  4177f1:	push   cs
  4177f2:	xor    BYTE PTR [ebp+0x369143c4],bh
  4177f8:	addr16 ret 0x51f7
  4177fc:	loope  0x41785c
  4177fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ff:	pop    ebp
  417800:	test   BYTE PTR [esi-0x2a],bh
  417803:	mov    eax,ds:0x4e45a0af
  417808:	xchg   edi,eax
  417809:	mov    esi,DWORD PTR [ebx-0x10]
  41780c:	mul    BYTE PTR [edi-0x8]
  41780f:	hlt    
  417810:	ret    
  417811:	out    dx,eax
  417812:	mov    esp,0x5ab25e23
  417817:	push   ds
  417818:	nop
  417819:	ficom  DWORD PTR [ebx]
  41781b:	popf   
  41781c:	cmp    cl,dh
  41781e:	fwait
  41781f:	xchg   ecx,eax
  417820:	ds dec eax
  417822:	scas   al,BYTE PTR es:[edi]
  417823:	daa    
  417824:	mov    ebp,0x26a0b16d
  417829:	in     eax,0x36
  41782b:	xor    ch,ah
  41782d:	fs cld 
  41782f:	mov    ecx,0xb2dd8c7e
  417834:	je     0x417892
  417836:	pop    eax
  417837:	(bad)  
  417838:	sar    DWORD PTR [ecx],1
  41783a:	pop    ds
  41783b:	fld    st(1)
  41783d:	and    dl,BYTE PTR [edx-0x54]
  417840:	adc    al,0x26
  417842:	mov    ecx,0xfe18e9bd
  417847:	fldz   
  417849:	or     DWORD PTR [ebp+0x73b0125f],edi
  41784f:	adc    ecx,DWORD PTR [eax-0x4bc667e]
  417855:	push   ss
  417856:	and    DWORD PTR [ecx-0x6b],esp
  417859:	pop    ecx
  41785a:	scas   al,BYTE PTR es:[edi]
  41785b:	inc    edx
  41785c:	or     esi,DWORD PTR [eax+0x6a]
  41785f:	push   ebx
  417860:	mov    ds:0x6241b76d,eax
  417865:	inc    edx
  417866:	add    eax,0xad32fa71
  41786b:	into   
  41786c:	mov    esp,0x35bf5d0b
  417871:	mov    dl,0xda
  417873:	and    al,0x1
  417875:	push   cs
  417876:	imul   ebp,DWORD PTR [esi-0xb],0xd50e5f0b
  41787d:	shr    BYTE PTR [esi],0x27
  417880:	and    ebx,DWORD PTR [edx]
  417882:	mov    ds:0x7701b652,al
  417887:	dec    ecx
  417888:	cwde   
  417889:	sahf   
  41788a:	push   0x34
  41788c:	cmp    al,0xbb
  41788e:	sub    bh,BYTE PTR [eax+eiz*4+0x46]
  417892:	jbe    0x417865
  417894:	retf   0xd89a
  417897:	cs aam 0x4
  41789a:	or     eax,0x48b8cbe7
  41789f:	or     dh,ah
  4178a1:	jo     0x4178f2
  4178a3:	in     al,0x56
  4178a5:	mov    al,ds:0x3cd8ee75
  4178aa:	mov    al,0xe3
  4178ac:	and    DWORD PTR [esi],0xf09340df
  4178b2:	and    ebx,DWORD PTR [ebx+0x3f]
  4178b5:	pusha  
  4178b6:	outs   dx,BYTE PTR ds:[esi]
  4178b7:	hlt    
  4178b8:	jno    0x417867
  4178ba:	movsx  esi,WORD PTR [esi-0xdeea562]
  4178c1:	pop    es
  4178c2:	pushf  
  4178c3:	call   0xeabf2657
  4178c8:	dec    ebx
  4178c9:	cmp    al,0x3b
  4178cb:	sub    BYTE PTR [ebx-0x5f],ah
  4178ce:	xor    eax,esi
  4178d0:	push   ds
  4178d1:	cwde   
  4178d2:	fs lock adc eax,0x96e5eeae
  4178d9:	mov    ecx,0xc4796596
  4178de:	stc    
  4178df:	push   0xd
  4178e1:	aam    0x2b
  4178e3:	pop    eax
  4178e4:	jae    0x417957
  4178e6:	retf   
  4178e7:	xchg   ebp,eax
  4178e8:	nop
  4178e9:	and    al,0x44
  4178eb:	sbb    eax,0x5e5e9cc8
  4178f0:	lea    ecx,[ebp+0xa]
  4178f3:	jmp    0xdcf10c3a
  4178f8:	sbb    al,0xf
  4178fa:	lods   eax,DWORD PTR ds:[esi]
  4178fb:	adc    al,0xf2
  4178fd:	push   0x6f
  4178ff:	jl     0x417952
  417901:	push   cs
  417902:	js     0x41792e
  417904:	ficom  WORD PTR [eax]
  417906:	xchg   ebx,eax
  417907:	add    eax,0x463edf50
  41790c:	xchg   esi,eax
  41790d:	push   esp
  41790e:	mov    bl,BYTE PTR [esi-0x5c8624cf]
  417914:	jne    0x41789f
  417916:	in     eax,0x7a
  417918:	stos   DWORD PTR es:[edi],eax
  417919:	fsubrp st(0),st
  41791b:	xchg   edx,eax
  41791c:	sbb    bl,dl
  41791e:	(bad)  
  41791f:	(bad)  
  417920:	jmp    0x4178c9
  417922:	sub    eax,0xe0c9b226
  417927:	js     0x4178e4
  417929:	test   al,0xb4
  41792b:	fs icebp 
  41792d:	ins    DWORD PTR es:[edi],dx
  41792e:	(bad)  
  417930:	stos   DWORD PTR es:[edi],eax
  417931:	or     BYTE PTR [esi],0xcf
  417934:	push   esi
  417935:	add    BYTE PTR ds:0x6aa79ae6,0x98
  41793c:	mov    edx,0xcfe675fc
  417941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417942:	sub    edi,DWORD PTR [ecx+esi*4+0x233e1182]
  417949:	lock ror DWORD PTR [edx-0x24c51f1d],0x69
  417951:	pop    ss
  417952:	xor    dl,ch
  417954:	int3   
  417955:	jnp    0x4178f5
  417957:	stc    
  417958:	mov    ebp,0xd96cd23c
  41795d:	pop    ebx
  41795e:	jb     0x41792a
  417960:	fstp   QWORD PTR [edx+0x23be7a4e]
  417966:	scas   al,BYTE PTR es:[edi]
  417967:	push   eax
  417968:	push   eax
  417969:	sti    
  41796a:	sub    BYTE PTR [eax+0xd1349b3],dl
  417970:	push   ecx
  417971:	xlat   BYTE PTR ds:[ebx]
  417972:	shl    DWORD PTR [edi+0x47],1
  417975:	loope  0x41795f
  417977:	mov    dh,0x93
  417979:	int    0x1b
  41797b:	call   0xf881bed7
  417980:	call   0xd5b9:0xd86419d2
  417987:	outs   dx,DWORD PTR ds:[esi]
  417988:	add    eax,0x2cedb89a
  41798d:	das    
  41798e:	fsubr  DWORD PTR [edx-0x74]
  417991:	outs   dx,BYTE PTR ds:[esi]
  417992:	inc    edi
  417993:	add    eax,0x71265ab5
  417998:	(bad)  
  41799a:	xor    al,0xc
  41799c:	not    BYTE PTR [eax]
  41799e:	cmp    edx,DWORD PTR [ecx+0x23]
  4179a1:	push   0x3da0d810
  4179a6:	cmp    DWORD PTR ds:0xdd5f6c35,eax
  4179ac:	dec    edx
  4179ad:	jae    0x41793a
  4179af:	in     al,dx
  4179b0:	sti    
  4179b1:	sbb    BYTE PTR [ebx-0x59],0x69
  4179b5:	cmc    
  4179b6:	cs jmp 0x41793f
  4179b9:	imul   esp,DWORD PTR ds:0xbbb45fbb,0x75
  4179c0:	sahf   
  4179c1:	sbb    dh,BYTE PTR [edx+edx*8+0x28]
  4179c5:	xlat   BYTE PTR ds:[ebx]
  4179c6:	in     eax,0x89
  4179c8:	sbb    al,0xe6
  4179ca:	sub    edx,DWORD PTR [edi]
  4179cc:	lds    esi,FWORD PTR [ebx-0x5f]
  4179cf:	or     BYTE PTR [edx-0x3ea9f64c],al
  4179d5:	fs mov ecx,0x24f0abeb
  4179db:	cmc    
  4179dc:	in     eax,0x74
  4179de:	and    eax,esp
  4179e0:	stc    
  4179e1:	dec    ecx
  4179e2:	dec    edi
  4179e3:	mov    ds:0x89d7a432,al
  4179e8:	push   edx
  4179e9:	fst    QWORD PTR [esi+ecx*4-0x69]
  4179ed:	dec    ebp
  4179ee:	ss rcl dl,cl
  4179f1:	push   edi
  4179f2:	jns    0x417a0e
  4179f4:	outs   dx,DWORD PTR ds:[esi]
  4179f5:	push   es
  4179f6:	xchg   ebp,eax
  4179f7:	bound  ecx,QWORD PTR [ebx]
  4179f9:	jl     0x417a50
  4179fb:	fcomp  DWORD PTR [ebp-0x44ec9412]
  417a01:	sbb    eax,0x1871aeae
  417a06:	js     0x417a82
  417a08:	das    
  417a09:	pop    eax
  417a0a:	cmp    al,0xd4
  417a0c:	pop    eax
  417a0d:	xor    edi,esp
  417a0f:	js     0x417a5a
  417a11:	neg    DWORD PTR [esi+0xe]
  417a14:	mov    esi,0x28fe8afa
  417a19:	xor    BYTE PTR [ebp+0x29b29cc3],dh
  417a1f:	enter  0xc11c,0xd2
  417a23:	cs (bad) 
  417a25:	push   cs
  417a26:	clc    
  417a27:	jp     0x417a38
  417a29:	icebp  
  417a2a:	test   al,0x3
  417a2c:	dec    esp
  417a2d:	xchg   edi,eax
  417a2e:	adc    al,0xb
  417a30:	and    eax,0x8fe31637
  417a35:	mov    ah,0x45
  417a37:	cmp    bl,BYTE PTR [edi]
  417a39:	mov    dl,0xbb
  417a3b:	fld    DWORD PTR [edi+eiz*2-0x32596a17]
  417a42:	inc    BYTE PTR [ebx+0x23]
  417a45:	std    
  417a46:	and    eax,0x748311e2
  417a4b:	lahf   
  417a4c:	push   esi
  417a4d:	pop    ebx
  417a4e:	les    ebx,FWORD PTR [edx]
  417a50:	dec    esp
  417a51:	jo     0x417a52
  417a53:	fisttp WORD PTR [edx]
  417a55:	mov    ds:0xe0ab8107,al
  417a5a:	push   esi
  417a5b:	xchg   ebp,eax
  417a5c:	add    ah,BYTE PTR ds:0xbf75a836
  417a62:	lds    esp,FWORD PTR [ecx-0x4f]
  417a65:	ins    DWORD PTR es:[edi],dx
  417a66:	or     eax,0x2e1fccd9
  417a6b:	sbb    esi,ebx
  417a6d:	push   eax
  417a6e:	adc    edi,ebp
  417a70:	(bad)
  417a73:	jmp    0xee6a:0x607930ba
  417a7a:	iret   
  417a7b:	push   edi
  417a7c:	test   al,0xde
  417a7e:	cmp    al,0x30
  417a80:	sahf   
  417a81:	call   0xcfc92b83
  417a86:	jae    0x417aae
  417a88:	stc    
  417a89:	cdq    
  417a8a:	mov    ecx,0x54bfa716
  417a8f:	sub    ch,BYTE PTR [ebp-0x6b]
  417a92:	mov    BYTE PTR [edx],ch
  417a94:	cli    
  417a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a96:	shl    DWORD PTR [edx],0x57
  417a99:	out    0x65,eax
  417a9b:	jbe    0x417a8a
  417a9d:	dec    ebx
  417a9e:	call   esp
  417aa0:	xchg   esi,eax
  417aa1:	je     0x417a3a
  417aa3:	cmp    bh,0x2b
  417aa6:	pop    DWORD PTR [eax]
  417aa8:	addr16 test eax,0x40a45628
  417aae:	inc    esi
  417aaf:	ja     0x417ad7
  417ab1:	mov    bl,0x7b
  417ab3:	std    
  417ab4:	cmp    ebp,esi
  417ab6:	shl    DWORD PTR [edx+0x44],1
  417ab9:	sbb    BYTE PTR [ebx+0x54],bh
  417abc:	mov    ecx,0x66a9d364
  417ac1:	mov    ah,0x74
  417ac3:	fbld   TBYTE PTR [si]
  417ac6:	(bad)  
  417ac7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  417ac9:	jb     0x417ada
  417acb:	pop    ecx
  417acc:	retf   0x50a7
  417acf:	aaa    
  417ad0:	ret    0xbd3
  417ad3:	clc    
  417ad4:	retw   0x9d7f
  417ad8:	add    esi,DWORD PTR ds:[eax]
  417adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417adc:	mov    dh,0xe9
  417ade:	xor    bl,BYTE PTR [esi-0x74e9f466]
  417ae4:	jns    0x417a7c
  417ae6:	or     BYTE PTR [ebx+0x7e0b3d0d],bl
  417aec:	jno    0x417b00
  417aee:	aad    0x6b
  417af0:	add    edx,edx
  417af2:	and    BYTE PTR [edi+0x320db574],dl
  417af8:	xor    ebp,edx
  417afa:	pop    es
  417afb:	mov    BYTE PTR [eax],0x41
  417afe:	sub    al,0x73
  417b00:	mov    edx,0x5b5eff80
  417b05:	inc    ebx
  417b06:	xchg   ecx,eax
  417b07:	add    DWORD PTR [edi],esp
  417b09:	pushw  0x2f
  417b0c:	out    0xcd,al
  417b0e:	pop    edx
  417b0f:	xchg   edi,eax
  417b10:	pusha  
  417b11:	mov    dh,0x6
  417b13:	xchg   edi,eax
  417b14:	xchg   ebp,eax
  417b15:	das    
  417b16:	or     esi,0xf85c2e4a
  417b1c:	cmp    al,0x19
  417b1e:	popf   
  417b1f:	xor    DWORD PTR [edx],ebp
  417b21:	sub    dl,ch
  417b23:	pushf  
  417b24:	mov    ah,0x7a
  417b26:	mov    dh,0x69
  417b28:	gs adc al,0xe
  417b2b:	loop   0x417ade
  417b2d:	jbe    0x417ac7
  417b2f:	adc    ecx,DWORD PTR [edi+0x14]
  417b32:	ins    DWORD PTR es:[edi],dx
  417b33:	add    BYTE PTR ds:0xee83bd66,0x3f
  417b3a:	cmp    esi,DWORD PTR [ebp-0x64faaa0c]
  417b40:	push   esi
  417b41:	(bad)  
  417b42:	cmp    al,0xa1
  417b44:	shr    BYTE PTR [ecx-0x13],0xb8
  417b48:	dec    esi
  417b49:	enter  0xacbd,0x8c
  417b4d:	jne    0x417bb8
  417b4f:	mov    ecx,0x38ff0f1d
  417b54:	outs   dx,BYTE PTR ds:[esi]
  417b55:	add    ecx,DWORD PTR [ebp+0x31597886]
  417b5b:	xchg   ebx,eax
  417b5c:	sar    esi,0xbc
  417b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b60:	aas    
  417b61:	sub    DWORD PTR [edx],0x57186dc7
  417b67:	pop    ds
  417b68:	mov    ebp,0x961de05d
  417b6d:	add    BYTE PTR [eax],bl
  417b6f:	push   0x75
  417b71:	xchg   ebx,eax
  417b72:	jle    0x417b31
  417b74:	arpl   WORD PTR [ebx-0x71],dx
  417b77:	add    esi,ecx
  417b79:	jne    0x417bc7
  417b7b:	loop   0x417b5d
  417b7d:	das    
  417b7e:	jne    0x417b91
  417b80:	dec    ebx
  417b81:	dec    edi
  417b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b83:	pop    eax
  417b84:	lock mov dh,0xf9
  417b87:	xchg   esp,eax
  417b88:	retf   
  417b89:	or     dl,BYTE PTR [ebp+0x3ee5980a]
  417b8f:	js     0x417b6c
  417b91:	mul    DWORD PTR [esi+0x3f971ee]
  417b97:	outs   dx,BYTE PTR ds:[esi]
  417b98:	fdivr  st,st(4)
  417b9a:	sbb    ah,BYTE PTR [ecx]
  417b9c:	(bad)  [ecx]
  417b9e:	jmp    0xaa6bab0a
  417ba3:	std    
  417ba4:	push   esp
  417ba5:	mov    DWORD PTR [edi],ebx
  417ba7:	or     BYTE PTR [ebp-0x2186556b],dh
  417bad:	push   edx
  417bae:	xchg   ebx,eax
  417baf:	pop    ds
  417bb0:	or     DWORD PTR [ecx],edx
  417bb2:	or     dl,cl
  417bb4:	adc    ebx,ebp
  417bb6:	ficom  DWORD PTR [edi+edx*4-0x24]
  417bba:	push   ebx
  417bbb:	lods   eax,DWORD PTR ds:[esi]
  417bbc:	mov    cl,0x65
  417bbe:	xor    ebx,DWORD PTR [edi-0x4e]
  417bc1:	push   ebp
  417bc2:	les    ecx,FWORD PTR [edx+0x19]
  417bc5:	std    
  417bc6:	in     al,0x8
  417bc8:	adc    DWORD PTR [eax],ebp
  417bca:	or     eax,0x277b3889
  417bcf:	shr    bh,cl
  417bd1:	jecxz  0x417c45
  417bd3:	les    esp,FWORD PTR [edi+ebp*2-0x29b1b94b]
  417bda:	mov    edx,0x33691f39
  417bdf:	inc    di
  417be1:	leave  
  417be2:	aas    
  417be3:	daa    
  417be4:	xor    bl,BYTE PTR [ecx+0xbbff63c]
  417bea:	cs retf 
  417bec:	sbb    al,0x7
  417bee:	push   cs
  417bef:	sbb    DWORD PTR ds:0x6c9d2115,ecx
  417bf5:	or     esi,DWORD PTR [edi+ecx*8]
  417bf8:	popa   
  417bf9:	retf   0x2361
  417bfc:	fsub   DWORD PTR [ecx-0x3b]
  417bff:	dec    esp
  417c00:	jmp    0x8be03077
  417c05:	cmp    al,0x4d
  417c07:	cmp    edx,DWORD PTR [ebp+edi*8+0xa7fa8d3]
  417c0e:	pop    ds
  417c0f:	add    ecx,DWORD PTR [esi]
  417c11:	call   0x63a60ab6
  417c16:	or     al,0x1b
  417c18:	mov    edi,0x154d2437
  417c1d:	push   eax
  417c1e:	sbb    eax,0xf4fbd213
  417c23:	test   DWORD PTR [ebp-0x3b],edi
  417c26:	xor    al,BYTE PTR ds:0xd160e6ee
  417c2c:	mov    eax,0xa6e25323
  417c31:	mov    ebx,0x343a62e6
  417c36:	fwait
  417c37:	cs aas 
  417c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c3a:	leave  
  417c3b:	xchg   esp,eax
  417c3c:	cmp    eax,0x83e526f0
  417c41:	adc    esp,DWORD PTR [edi-0x758b27e1]
  417c47:	aam    0xf4
  417c49:	push   edi
  417c4a:	push   esp
  417c4b:	popa   
  417c4c:	js     0x417c33
  417c4e:	es ins BYTE PTR es:[edi],dx
  417c50:	rcr    ah,0xd
  417c53:	sub    esi,ecx
  417c55:	stos   DWORD PTR es:[edi],eax
  417c56:	clc    
  417c57:	test   BYTE PTR [edx],dl
  417c59:	adc    BYTE PTR [edi+0x1d],cl
  417c5c:	push   ebx
  417c5d:	std    
  417c5e:	pop    edx
  417c5f:	adc    al,0x2d
  417c61:	ja     0x417c85
  417c63:	or     DWORD PTR gs:[eax],esp
  417c66:	gs inc ebx
  417c68:	and    dl,BYTE PTR [eax+0x55]
  417c6b:	aam    0xb0
  417c6d:	(bad)  [esi+0xc]
  417c70:	cmp    ebx,DWORD PTR [ecx-0x16]
  417c73:	out    dx,eax
  417c74:	sbb    DWORD PTR [ecx],esi
  417c76:	aad    0x36
  417c78:	dec    ebp
  417c79:	aas    
  417c7a:	loopne 0x417c80
  417c7c:	adc    BYTE PTR [ebp+ebx*1+0x171cac27],ch
  417c83:	in     eax,0xa5
  417c85:	sub    BYTE PTR [ebx-0x46],dl
  417c88:	hlt    
  417c89:	mov    eax,0x4fe91057
  417c8e:	call   0x15fa:0xe070adc0
  417c95:	lea    edi,[edi+0x6de272b5]
  417c9b:	cli    
  417c9c:	addr16 or al,0xca
  417c9f:	ss dec ebx
  417ca1:	dec    esi
  417ca2:	jge    0x417c26
  417ca4:	mov    eax,0xd402e2a
  417ca9:	mov    ecx,0x3ecfd756
  417cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417caf:	or     al,0x17
  417cb1:	cmp    edi,DWORD PTR [edi-0x1bd9c55b]
  417cb7:	retf   
  417cb8:	int    0x1d
  417cba:	jecxz  0x417cab
  417cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cbd:	gs sub eax,0xd0eff6d5
  417cc3:	pop    ss
  417cc4:	mov    cl,0x9f
  417cc7:	push   0xe06415f7
  417ccc:	call   0xd98844d4
  417cd1:	(bad)  
  417cd2:	ror    BYTE PTR [edx-0x15],1
  417cd5:	mov    ecx,0xb3fe61c3
  417cda:	inc    ebp
  417cdb:	retf   
  417cdc:	jo     0x417d09
  417cde:	adc    eax,0x65832692
  417ce3:	(bad)  [eax]
  417ce5:	mov    ds:0xcb8b6bd0,al
  417cea:	mov    ebx,0xc7bd25f6
  417cef:	adc    edx,DWORD PTR [edx+esi*1+0x2798da41]
  417cf6:	push   edi
  417cf7:	fnstsw WORD PTR [ecx+0x6]
  417cfa:	je     0x417ce0
  417cfc:	jmp    0x417d67
  417cfe:	sub    eax,0xbf9ec169
  417d03:	ret    0x16ba
  417d06:	jecxz  0x417d03
  417d08:	fistp  DWORD PTR [ebp+0x26]
  417d0b:	push   ss
  417d0c:	cdq    
  417d0d:	and    esi,ecx
  417d0f:	retf   0x8b98
  417d12:	mov    ebp,DWORD PTR [ecx-0x400fecf6]
  417d18:	(bad)  
  417d19:	mov    dl,0xcd
  417d1b:	lods   eax,DWORD PTR ss:[esi]
  417d1d:	js     0x417d97
  417d1f:	out    0x94,eax
  417d21:	shr    dl,cl
  417d23:	int3   
  417d24:	push   edi
  417d25:	mov    BYTE PTR [esi+0x55cd3ca3],0x95
  417d2c:	push   esp
  417d2d:	pushf  
  417d2e:	nop
  417d2f:	sar    BYTE PTR [ecx],0x23
  417d32:	xchg   edx,eax
  417d33:	adc    al,0xb6
  417d35:	lock adc DWORD PTR [edi],esi
  417d38:	clc    
  417d39:	lds    edi,FWORD PTR ds:0xfa5cb115
  417d3f:	jg     0x417d56
  417d41:	adc    al,0x26
  417d43:	cs pusha 
  417d45:	and    DWORD PTR [esi],ebp
  417d47:	add    BYTE PTR [esi-0x4ff66c92],al
  417d4d:	lahf   
  417d4e:	push   esp
  417d4f:	xor    al,0xac
  417d51:	fidiv  WORD PTR [esi]
  417d53:	rol    DWORD PTR [eax+ebp*8],1
  417d56:	cmp    eax,0x14ff0dd
  417d5b:	gs or  edx,esp
  417d5e:	fstp   DWORD PTR [esi-0x6f]
  417d61:	loope  0x417d48
  417d63:	ja     0x417db5
  417d65:	mov    ecx,0xf439569f
  417d6a:	jl     0x417dcf
  417d6c:	mov    dh,0x48
  417d6e:	test   eax,0x83f467ed
  417d73:	repz fdivr st(7),st
  417d76:	ror    ebx,0x58
  417d79:	mul    DWORD PTR [ecx-0xc8028a8]
  417d7f:	call   edi
  417d81:	dec    edx
  417d82:	pop    ss
  417d83:	das    
  417d84:	adc    DWORD PTR [eax],edi
  417d86:	mov    edx,0xd043c479
  417d8b:	lods   al,BYTE PTR ds:[esi]
  417d8c:	loop   0x417d67
  417d8e:	push   esi
  417d8f:	dec    ebp
  417d90:	test   DWORD PTR [eax+0x4c229218],eax
  417d96:	std    
  417d97:	arpl   WORD PTR [ecx],cx
  417d99:	ret    
  417d9a:	jnp    0x417e07
  417d9c:	jmp    0x417dc7
  417d9e:	loope  0x417dd2
  417da0:	popf   
  417da1:	in     eax,dx
  417da2:	clc    
  417da3:	addr16 (bad) 
  417da5:	ror    BYTE PTR fs:0xcbd06a5e,cl
  417dac:	pop    ebp
  417dad:	iret   
  417dae:	mov    edx,0x8e4ec8c2
  417db3:	pcmpgtw mm5,QWORD PTR [ebx+0x12]
  417db7:	sub    esi,eax
  417db9:	fwait
  417dba:	std    
  417dbb:	out    dx,al
  417dbc:	daa    
  417dbd:	jge    0x417d82
  417dbf:	fsqrt  
  417dc1:	icebp  
  417dc2:	pushf  
  417dc3:	in     eax,dx
  417dc4:	mov    eax,0x48526390
  417dc9:	js     0x417dbf
  417dcb:	mov    ds:0x9d256a03,al
  417dd0:	je     0x417d99
  417dd2:	sti    
  417dd3:	sub    al,0x93
  417dd5:	mov    edx,0x3233a650
  417dda:	adc    DWORD PTR [esi],0x47bd7c03
  417de0:	jle    0x417db1
  417de2:	mov    WORD PTR [ebp-0x35],cs
  417de5:	(bad)  
  417de6:	push   ecx
  417de7:	jne    0x417d97
  417de9:	stos   BYTE PTR es:[edi],al
  417dea:	imul   ebp,DWORD PTR [edx+0x75],0xffffff9e
  417dee:	jns    0x417d93
  417df0:	adc    eax,0xa3233006
  417df5:	sar    DWORD PTR [eax],cl
  417df7:	jge    0x417d91
  417df9:	dec    esi
  417dfa:	icebp  
  417dfb:	ins    DWORD PTR es:[edi],dx
  417dfc:	mov    ch,0x1b
  417dfe:	fwait
  417dff:	sbb    eax,0xf33585aa
  417e04:	imul   eax,DWORD PTR [esi-0x53],0x503f8448
  417e0b:	ja     0x417e61
  417e0d:	aad    0x5c
  417e0f:	mov    ch,0x64
  417e11:	(bad)  
  417e12:	fucomip st,st(4)
  417e14:	gs call 0xee81:0x822832cb
  417e1c:	ret    0x2468
  417e1f:	std    
  417e20:	rcl    DWORD PTR [ebp+0x4],0xad
  417e24:	aaa    
  417e25:	adc    al,0x52
  417e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e28:	adc    DWORD PTR [edx],edi
  417e2a:	mov    ?,WORD PTR [ebp-0x3c619da7]
  417e30:	inc    esi
  417e31:	push   esp
  417e32:	mov    ds:0x4b8d3d24,al
  417e37:	push   es
  417e38:	hlt    
  417e39:	pop    ebx
  417e3a:	sbb    eax,0x61a2576c
  417e3f:	mov    al,0xbd
  417e41:	push   edi
  417e42:	add    BYTE PTR [edi],bl
  417e44:	(bad)  
  417e45:	mul    BYTE PTR [ebp+0x18dd8756]
  417e4b:	jle    0x417e36
  417e4d:	xlat   BYTE PTR ds:[ebx]
  417e4e:	push   edi
  417e4f:	mov    edi,0x761e9a6
  417e54:	cld    
  417e55:	rcr    DWORD PTR [esi+0x57],0xa7
  417e59:	jg     0x417ea4
  417e5b:	xor    al,BYTE PTR [ebp+0x1b]
  417e5e:	pop    ebx
  417e5f:	push   ds
  417e60:	pop    es
  417e61:	cwde   
  417e62:	jb     0x417e4b
  417e64:	loop   0x417e68
  417e66:	sub    eax,0x4ed72ee0
  417e6b:	(bad)  
  417e6c:	int3   
  417e6d:	mov    bh,0x2a
  417e6f:	mov    esp,0x8bd12b15
  417e74:	sti    
  417e75:	repz xchg esi,eax
  417e77:	push   ss
  417e78:	mov    al,ds:0xf5392f37
  417e7d:	mov    ds:0xee478c28,eax
  417e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e83:	xchg   esp,eax
  417e84:	jmp    FWORD PTR [edi-0x3]
  417e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e88:	push   ds
  417e89:	add    al,0xe
  417e8b:	and    cl,ah
  417e8d:	dec    eax
  417e8e:	or     DWORD PTR [edx-0x1c],ebp
  417e91:	shl    ecx,cl
  417e93:	mov    DWORD PTR [eax-0x1fdcfde7],edi
  417e99:	dec    eax
  417e9a:	sbb    ecx,DWORD PTR [ebx-0x59fe0832]
  417ea0:	push   esi
  417ea1:	push   ds
  417ea2:	stos   DWORD PTR es:[edi],eax
  417ea3:	mov    esp,0x34fd47c6
  417ea8:	push   0x4f1f1753
  417ead:	xchg   ebp,eax
  417eae:	sub    eax,0xb3dc2d1a
  417eb3:	sahf   
  417eb4:	mov    WORD PTR [edi],es
  417eb6:	mov    cl,0x8f
  417eb8:	test   BYTE PTR [esi+edi*8],bl
  417ebb:	lahf   
  417ebc:	repz pop ebp
  417ebe:	mov    ah,0x11
  417ec0:	ret    
  417ec1:	in     al,dx
  417ec2:	aaa    
  417ec3:	lea    ebx,[edx+0x7cf1d0fc]
  417ec9:	adc    dh,al
  417ecb:	out    0xf9,eax
  417ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ece:	enter  0xa771,0x99
  417ed2:	aad    0x7a
  417ed4:	push   0x96f62d48
  417ed9:	mov    ds:0x9415766e,eax
  417ede:	test   DWORD PTR [esp-0x5332f96f],edx
  417ee5:	cdq    
  417ee6:	add    eax,0xe6414764
  417eeb:	pop    edi
  417eec:	fdivr  DWORD PTR [edi+0x63320b73]
  417ef2:	ror    ah,cl
  417ef4:	gs jnp 0x417ed0
  417ef7:	push   esi
  417ef8:	ins    BYTE PTR es:[edi],dx
  417ef9:	inc    edi
  417efa:	test   DWORD PTR [ebx+esi*4-0x14],eax
  417efe:	icebp  
  417eff:	dec    ebp
  417f00:	test   BYTE PTR [edx],bh
  417f02:	test   al,0xf2
  417f04:	lahf   
  417f05:	xor    al,0x40
  417f07:	sub    al,0x13
  417f09:	rol    eax,1
  417f0b:	dec    esp
  417f0c:	lods   al,BYTE PTR ds:[esi]
  417f0d:	mov    edx,0x2f41904c
  417f12:	test   DWORD PTR [eax+eiz*2],edi
  417f15:	mov    edx,0xd4fe2158
  417f1a:	lea    esi,[eax+0x110133ef]
  417f20:	and    ebx,DWORD PTR [ebp+eax*1-0x745b183c]
  417f27:	ins    DWORD PTR es:[edi],dx
  417f28:	xor    al,0xf2
  417f2a:	loopne 0x417eee
  417f2c:	adc    DWORD PTR [ebx-0x18],esp
  417f2f:	in     al,0x7
  417f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f32:	(bad)  
  417f34:	sbb    bh,ah
  417f36:	ds aaa 
  417f38:	sub    BYTE PTR [edi-0x5e],dh
  417f3b:	(bad)  
  417f3c:	shl    DWORD PTR [esi+eax*2+0xe8d7456],cl
  417f43:	and    ebp,esp
  417f45:	mov    ds:0xb4de6cab,eax
  417f4a:	imul   ebp,DWORD PTR [esi],0x5b
  417f4d:	fwait
  417f4e:	(bad)  
  417f4f:	lods   al,BYTE PTR ds:[esi]
  417f50:	add    DWORD PTR [edi+0x7d],ecx
  417f53:	fucomi st,st(2)
  417f55:	cmc    
  417f56:	ins    DWORD PTR es:[edi],dx
  417f57:	cmp    DWORD PTR [edi],edi
  417f59:	imul   DWORD PTR [eax]
  417f5b:	jo     0x417f16
  417f5d:	cs push esi
  417f5f:	idiv   DWORD PTR [ebp+0x36faa7f2]
  417f65:	add    dh,BYTE PTR [edi+0x16]
  417f68:	out    dx,al
  417f69:	sub    eax,0x10fbed8b
  417f6e:	dec    ebp
  417f6f:	xor    eax,0xf78903a2
  417f74:	mov    eax,0xe99cf30d
  417f79:	and    esi,DWORD PTR [eax]
  417f7b:	sub    al,0x19
  417f7d:	cli    
  417f7e:	cmp    eax,0x92f242e4
  417f83:	lods   eax,DWORD PTR ds:[esi]
  417f84:	mov    ds:0x62cb09d3,eax
  417f89:	or     BYTE PTR [edx],ah
  417f8b:	jge    0x417f63
  417f8d:	loopne 0x417f3f
  417f8f:	or     DWORD PTR ds:0x59b0744f,edi
  417f95:	jl     0x417f2d
  417f97:	out    0xc5,al
  417f99:	mov    ebp,0xe8f4618d
  417f9e:	xchg   ebx,eax
  417f9f:	jne    0x417f65
  417fa1:	cmp    edx,DWORD PTR [ebp+0x5d6b72ec]
  417fa7:	mov    eax,0x5598869c
  417fac:	and    al,0xab
  417fae:	outs   dx,BYTE PTR ds:[esi]
  417faf:	cli    
  417fb0:	mov    ecx,0x5008601b
  417fb5:	cmp    esp,0x4
  417fb8:	xchg   ebx,eax
  417fb9:	int    0xca
  417fbb:	leave  
  417fbc:	inc    ebp
  417fbd:	push   esi
  417fbe:	aad    0x1
  417fc0:	in     eax,dx
  417fc1:	fwait
  417fc2:	shl    esp,cl
  417fc4:	xlat   BYTE PTR ds:[ebx]
  417fc5:	adc    al,0xfd
  417fc7:	pop    esi
  417fc8:	and    eax,0x6d65cd41
  417fcd:	fild   DWORD PTR gs:[ebx+eax*2]
  417fd1:	clc    
  417fd2:	repnz mov eax,?
  417fd5:	dec    esi
  417fd6:	mov    bh,0x52
  417fd8:	xchg   edi,eax
  417fd9:	call   0xb029617
  417fde:	shl    DWORD PTR [ebp-0x5419528a],0x14
  417fe5:	in     eax,0x3c
  417fe7:	lock jbe 0x41803e
  417fea:	loop   0x417fd2
  417fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fed:	(bad)  
  417fee:	or     eax,0xe3bbf488
  417ff3:	jmp    0x418026
  417ff5:	setbe  BYTE PTR [ebp-0x1d]
  417ff9:	mov    DWORD PTR [esi-0x68],ebp
  417ffc:	cli    
  417ffd:	jae    0x417f82
  417fff:	idiv   dh
  418001:	(bad)  
  418002:	test   eax,0xd84c0c50
  418007:	and    edi,eax
  418009:	jp     0x417f9f
  41800b:	xchg   DWORD PTR [edx+0x1],ebp
  41800e:	aaa    
  41800f:	scas   eax,DWORD PTR es:[edi]
  418010:	jecxz  0x418029
  418012:	mov    ch,0x26
  418014:	les    ebp,FWORD PTR [eax+0x498cd3e0]
  41801a:	mov    ah,0xfc
  41801c:	repnz pop es
  41801e:	xchg   ebp,eax
  41801f:	aas    
  418020:	rol    BYTE PTR [esi+0x2c188089],cl
  418026:	sub    DWORD PTR [edi+0x4e5bcc4b],edx
  41802c:	scas   eax,DWORD PTR es:[edi]
  41802d:	mov    eax,0xcf2ab184
  418032:	push   ds
  418033:	ins    BYTE PTR es:[edi],dx
  418034:	ja     0x418015
  418036:	ds jg  0x417fde
  418039:	in     al,0xed
  41803b:	inc    esi
  41803c:	js     0x417fd2
  41803e:	add    al,BYTE PTR [esi]
  418040:	pop    edx
  418041:	pop    esp
  418042:	fnstsw WORD PTR [edi+0x36f9b3d5]
  418048:	xchg   esi,eax
  418049:	leave  
  41804a:	xor    DWORD PTR [ebx-0x63],ecx
  41804d:	or     BYTE PTR [edi+ebx*8+0x72775ffa],0xfe
  418055:	xchg   ebx,eax
  418056:	aam    0xcb
  418058:	cmp    ebp,DWORD PTR [edi-0x4204398f]
  41805e:	loope  0x417ff7
  418060:	popa   
  418061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418062:	mov    ebp,0xda09c1e
  418067:	push   0xffffffbe
  418069:	cld    
  41806a:	and    DWORD PTR [eax-0x12],edx
  41806d:	mov    bh,0x27
  41806f:	iret   
  418070:	add    edx,DWORD PTR [edx+0x43]
  418073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418074:	mov    eax,0x5cd66aa3
  418079:	xor    al,0x6e
  41807b:	rcl    ebp,cl
  41807d:	dec    esp
  41807e:	sbb    al,bl
  418080:	and    DWORD PTR [edi-0x50],ecx
  418083:	add    BYTE PTR [ebp-0x528014de],dl
  418089:	pop    esp
  41808a:	ins    BYTE PTR es:[edi],dx
  41808b:	int    0x6a
  41808d:	lods   eax,DWORD PTR ds:[esi]
  41808e:	mov    ebp,0xabbbd21f
  418093:	stos   DWORD PTR es:[edi],eax
  418094:	or     al,BYTE PTR [esi-0x44bf4531]
  41809a:	mov    ecx,0xedfa1ffe
  41809f:	js     0x418071
  4180a1:	cmc    
  4180a2:	in     al,0x58
  4180a4:	or     DWORD PTR [edi],esp
  4180a6:	cwde   
  4180a7:	scas   eax,DWORD PTR es:[edi]
  4180a8:	pop    esp
  4180a9:	mov    ch,0x4e
  4180ab:	dec    esi
  4180ac:	adc    eax,0xdbe427e4
  4180b1:	jge    0x418049
  4180b3:	add    edi,eax
  4180b5:	jmp    0x418056
  4180b7:	ret    
  4180b8:	cdq    
  4180b9:	sub    DWORD PTR [esi],eax
  4180bb:	push   0x6b552a43
  4180c0:	and    DWORD PTR [edx],ebp
  4180c2:	dec    ebp
  4180c3:	leave  
  4180c4:	pop    edi
  4180c5:	adc    BYTE PTR [edi],dh
  4180c7:	xchg   ecx,eax
  4180c8:	push   ebx
  4180c9:	jecxz  0x418139
  4180cb:	fcmovu st,st(6)
  4180cd:	fimul  WORD PTR [ebx]
  4180cf:	pop    esi
  4180d0:	cmp    al,0xd5
  4180d2:	cmp    eax,0xbbc8e77b
  4180d7:	xchg   esp,eax
  4180d8:	push   ds
  4180d9:	jp     0x4180cc
  4180db:	loopne 0x418077
  4180dd:	jo     0x41808e
  4180df:	sub    bh,dh
  4180e1:	mov    WORD PTR [eax-0x12eabbd9],gs
  4180e7:	ja     0x4180d0
  4180e9:	rcr    BYTE PTR [edx-0x160e0b71],0xf9
  4180f0:	popf   
  4180f1:	mov    ebp,0x3ee2d39d
  4180f6:	scas   eax,DWORD PTR es:[edi]
  4180f7:	addr16 data16 or bh,ah
  4180fb:	adc    edx,DWORD PTR [ebp+0x7f2bb5b8]
  418101:	sbb    bh,BYTE PTR [ecx+0x1e120d59]
  418107:	cwde   
  418108:	rol    BYTE PTR [ebx+0x3b1e0871],cl
  41810e:	sub    DWORD PTR [edx+0x33],ebp
  418111:	in     eax,dx
  418112:	add    edx,DWORD PTR ds:0x6016cdb0
  418118:	retf   
  418119:	test   DWORD PTR [ecx-0x783a2443],0xa41cab70
  418123:	mov    esp,0xb0026771
  418128:	sub    BYTE PTR [ebp-0x44cdb471],bl
  41812e:	jmp    DWORD PTR [ebx]
  418130:	mov    cl,0xea
  418132:	cli    
  418133:	mov    ch,BYTE PTR [eax-0x2efd8c46]
  418139:	bound  esp,QWORD PTR [edx+0x10]
  41813c:	push   0xffffffbc
  41813e:	daa    
  41813f:	fsub   QWORD PTR [esi-0x46bb105e]
  418145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418146:	xchg   ebp,eax
  418147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418148:	or     BYTE PTR [ebx-0x59],0x9c
  41814c:	jecxz  0x418136
  41814e:	push   0x2284f7c5
  418153:	mov    edi,esi
  418155:	mov    bh,0x63
  418157:	xchg   edi,eax
  418158:	adc    eax,0x7bfa7c4
  41815d:	(bad)  
  41815e:	rcl    DWORD PTR [ecx],1
  418160:	test   DWORD PTR [eax],0x65aebc80
  418166:	leave  
  418167:	and    eax,0x9075326c
  41816c:	push   ss
  41816d:	push   0xf6ed6082
  418172:	adc    ebp,ecx
  418174:	retf   
  418175:	push   ecx
  418176:	inc    eax
  418177:	mov    eax,0xfa0c7e1f
  41817c:	push   esp
  41817d:	jns    0x418155
  41817f:	dec    edi
  418180:	loopne 0x418141
  418182:	xchg   ebp,eax
  418183:	dec    eax
  418184:	push   esp
  418185:	rcr    ebx,cl
  418187:	jne    0x4181b7
  418189:	sbb    ebx,DWORD PTR [ecx-0x5729591]
  41818f:	xchg   edi,eax
  418190:	jle    0x41813c
  418192:	cmp    DWORD PTR [edx+0x1e],esi
  418195:	inc    esi
  418196:	scas   eax,DWORD PTR es:[edi]
  418197:	arpl   WORD PTR [esi+0x6c],di
  41819a:	ds in  al,0x67
  41819d:	js     0x4181d2
  41819f:	int    0x8
  4181a1:	rcr    BYTE PTR [esi+eiz*8],0x90
  4181a5:	jmp    FWORD PTR [esi-0xb1fd1cf]
  4181ab:	repz jge 0x4181b6
  4181ae:	call   0x5dbad776
  4181b3:	retf   0x8763
  4181b6:	sbb    edi,DWORD PTR [eax+edi*4]
  4181b9:	test   eax,0x7c89f050
  4181be:	sar    BYTE PTR [eax],1
  4181c0:	jns    0x418196
  4181c2:	add    al,0x36
  4181c4:	dec    ebp
  4181c5:	mov    dl,0x74
  4181c7:	adc    BYTE PTR es:[ebp-0x6dd174cb],bl
  4181ce:	pop    edi
  4181cf:	sbb    eax,0x4d654f86
  4181d4:	mov    ebp,0xa0dc9b21
  4181d9:	push   esp
  4181da:	mov    edx,0x21b25bde
  4181df:	cld    
  4181e0:	cwde   
  4181e1:	inc    ecx
  4181e2:	xchg   esp,eax
  4181e3:	popf   
  4181e4:	or     al,0x29
  4181e6:	ja     0x418263
  4181e8:	mov    eax,ds:0x95374063
  4181ed:	in     eax,dx
  4181ee:	xchg   ebx,eax
  4181ef:	fild   QWORD PTR [ebp+0x28]
  4181f2:	sub    al,0xc2
  4181f4:	fs push ss
  4181f6:	std    
  4181f7:	leave  
  4181f8:	lods   eax,DWORD PTR ds:[esi]
  4181f9:	std    
  4181fa:	repnz xor BYTE PTR [esi],dl
  4181fd:	ud1    ebx,DWORD PTR [edx-0x7c]
  418201:	pop    esi
  418202:	sar    BYTE PTR [eax+0x31],cl
  418205:	retf   0xa9be
  418208:	clc    
  418209:	xor    al,0x6
  41820b:	sub    BYTE PTR [ebx+edx*8+0x40720b76],al
  418212:	cmp    cl,BYTE PTR ds:0x66f31de3
  418218:	cs mov ebx,0x703cdea0
  41821e:	pop    ds
  41821f:	mov    cl,0x90
  418221:	stos   DWORD PTR es:[edi],eax
  418222:	inc    ebx
  418223:	xchg   esi,eax
  418224:	es call 0xa528864b
  41822a:	arpl   WORD PTR [esi],si
  41822c:	push   0x37
  41822e:	or     dh,BYTE PTR [esi+0x52ebf3f4]
  418234:	shr    BYTE PTR [eax],cl
  418236:	add    eax,0xd9c9907e
  41823b:	jmp    DWORD PTR [ebp+0xd]
  41823e:	inc    eax
  41823f:	clc    
  418240:	jbe    0x41828c
  418242:	imul   ebx,esi,0x9c5d40f8
  418248:	aam    0xd4
  41824a:	xor    dl,BYTE PTR [ebx]
  41824c:	cmc    
  41824d:	mov    al,ds:0xc849b87
  418252:	xchg   ecx,eax
  418253:	jmp    0x418257
  418255:	jo     0x4182ba
  418257:	dec    ebp
  418258:	jbe    0x418275
  41825a:	adc    DWORD PTR [edi],edi
  41825c:	or     edx,esi
  41825e:	out    0x95,eax
  418260:	ficomp WORD PTR [esi+0x73]
  418263:	push   ss
  418264:	sbb    dl,BYTE PTR [ebp+0x55]
  418267:	pusha  
  418268:	mov    ds:0xb4a96e60,al
  41826d:	or     esp,edi
  41826f:	dec    edi
  418270:	xor    eax,0x87df4188
  418275:	cmp    ebx,DWORD PTR [esi+eax*4-0x34]
  418279:	add    esp,DWORD PTR [ebx-0xf9e0cd2]
  41827f:	loope  0x418235
  418281:	push   0x7dc9db55
  418286:	push   eax
  418287:	in     eax,0xb6
  418289:	(bad)  
  41828a:	retf   0x35d3
  41828d:	arpl   WORD PTR [ecx+0x29819bec],ax
  418293:	ficomp WORD PTR [eax]
  418295:	cmp    al,0x6c
  418297:	retf   0x8d16
  41829a:	push   ecx
  41829b:	cwde   
  41829c:	or     eax,0x4ed95467
  4182a1:	sub    dh,BYTE PTR [edi+0x77]
  4182a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a5:	sub    dh,BYTE PTR [esp+ebp*1-0x2e]
  4182a9:	outs   dx,DWORD PTR ds:[esi]
  4182aa:	aas    
  4182ab:	jnp    0x418248
  4182ad:	jmp    FWORD PTR gs:0x6a27e494
  4182b4:	sbb    eax,0x41fca140
  4182b9:	push   es
  4182ba:	push   0xffffffb9
  4182bc:	addr16 xchg ebp,eax
  4182be:	xor    BYTE PTR [esp+eax*8+0x3],bl
  4182c2:	rcl    BYTE PTR [ebx+0x2728d355],cl
  4182c8:	pop    edx
  4182c9:	or     dl,BYTE PTR ds:0xa17726c2
  4182cf:	sbb    esi,DWORD PTR [ecx+0x2f69ed19]
  4182d5:	retf   0x8fa
  4182d8:	pop    ecx
  4182d9:	pcmpgtw mm0,mm5
  4182dc:	int    0x72
  4182de:	imul   edi,DWORD PTR ss:[ebp+0x1005f3e3],0xffffffb2
  4182e6:	mov    edi,0xa968a137
  4182eb:	pop    esi
  4182ec:	mov    al,0x84
  4182ee:	push   esp
  4182ef:	jo     0x418331
  4182f1:	leave  
  4182f2:	test   eax,0xe78a5f46
  4182f7:	hlt    
  4182f8:	jnp    0x418352
  4182fa:	std    
  4182fb:	jmp    0xe7c3c9a4
  418300:	shr    DWORD PTR [edi+0x70],cl
  418303:	xor    al,0xca
  418305:	inc    esi
  418306:	inc    eax
  418307:	jno    0x418338
  418309:	adc    DWORD PTR [edx+ecx*2-0x15],edi
  41830d:	lock mov al,0x54
  418310:	jnp    0x4182b6
  418312:	shr    DWORD PTR [ebp+0x25b20996],cl
  418318:	fwait
  418319:	mov    DWORD PTR [ecx],esi
  41831b:	dec    edi
  41831c:	or     eax,0x166f0d90
  418321:	shr    DWORD PTR [ecx+0x52afb861],0xa7
  418328:	aam    0x5e
  41832a:	and    esp,edx
  41832c:	test   BYTE PTR [esi-0x74],cl
  41832f:	stos   DWORD PTR es:[edi],eax
  418330:	cmp    ecx,edi
  418332:	mov    ds:0x5a909a5a,al
  418337:	jb     0x4182cf
  418339:	sub    BYTE PTR [ebp+0xfe04eb6],dl
  41833f:	ds ss ss stos DWORD PTR es:[edi],eax
  418343:	adc    ecx,DWORD PTR [ecx]
  418345:	sbb    DWORD PTR [ebp+0x73ac852e],esp
  41834b:	pop    ss
  41834c:	xor    DWORD PTR [ebp-0x73],edx
  41834f:	out    dx,eax
  418350:	mov    bh,0x71
  418352:	repz xchg ecx,eax
  418354:	pop    edx
  418355:	mov    bl,BYTE PTR [esi+0x63]
  418358:	ds (bad) 
  41835a:	fld    TBYTE PTR [ecx]
  41835c:	mov    ebp,0xcb82dce5
  418361:	jl     0x418344
  418363:	adc    BYTE PTR [edx],0xc7
  418366:	add    ebp,ebx
  418368:	mov    cl,0x87
  41836a:	btc    DWORD PTR [edx+0x72094491],eax
  418371:	lahf   
  418372:	mov    ch,0xee
  418374:	sbb    bh,dl
  418376:	(bad)  
  418377:	stc    
  418378:	in     eax,dx
  418379:	sbb    al,0x0
  41837b:	cmc    
  41837c:	add    DWORD PTR [ebp-0x46],ebx
  41837f:	in     eax,0x63
  418381:	or     eax,0x3a8d04b
  418386:	mov    ds:0x7bd941f0,eax
  41838b:	pop    ecx
  41838c:	push   0x1f
  41838e:	pop    ebx
  41838f:	int3   
  418390:	xor    ebp,ebx
  418392:	cli    
  418393:	scas   eax,DWORD PTR es:[edi]
  418394:	add    al,0xeb
  418396:	xchg   esi,eax
  418397:	jo     0x41840f
  418399:	jbe    0x418331
  41839b:	push   eax
  41839c:	cs push edx
  41839e:	mov    esi,es
  4183a0:	loope  0x41833a
  4183a2:	lds    esp,FWORD PTR [ebx+0x2e]
  4183a5:	cmp    edi,esp
  4183a7:	xor    DWORD PTR [esi+0x1f],0x28
  4183ab:	pop    edx
  4183ac:	rdpmc  
  4183ae:	jmp    0x4183a5
  4183b0:	pop    ebp
  4183b1:	dec    ebp
  4183b2:	xchg   ebp,eax
  4183b3:	add    eax,0xfcdf1f10
  4183b8:	adc    BYTE PTR [edx-0x31],dl
  4183bb:	ja     0x418355
  4183bd:	jmp    0x41835f
  4183bf:	leave  
  4183c0:	add    DWORD PTR [ebx-0x3f],0xffffffa5
  4183c4:	js     0x418408
  4183c6:	add    dl,dh
  4183c8:	(bad)  
  4183c9:	inc    ebp
  4183ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183cb:	mov    esi,0x1ada1aa4
  4183d0:	ret    0x6afa
  4183d3:	push   0x16
  4183d5:	and    BYTE PTR [ebx+0x6],ch
  4183d8:	push   edx
  4183d9:	clc    
  4183da:	xchg   esi,eax
  4183db:	je     0x418373
  4183dd:	mov    dh,0xeb
  4183df:	fidiv  DWORD PTR [ebp+0x65]
  4183e2:	push   edx
  4183e3:	outs   dx,BYTE PTR ds:[esi]
  4183e4:	out    0x86,al
  4183e6:	hlt    
  4183e7:	sub    bl,dl
  4183e9:	and    al,0xf8
  4183eb:	xlat   BYTE PTR ds:[ebx]
  4183ec:	xor    ebp,DWORD PTR [eax+0x6295b345]
  4183f2:	xor    edi,DWORD PTR [ecx-0x69a19671]
  4183f8:	cdq    
  4183f9:	jmp    0xd241d308
  4183fe:	(bad)  
  4183ff:	sub    BYTE PTR [edi-0x9],ah
  418402:	jmp    0x41847d
  418404:	inc    edi
  418405:	mov    eax,ds:0xe98d768b
  41840a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41840b:	(bad)  
  41840c:	icebp  
  41840d:	inc    eax
  41840e:	adc    al,0x6e
  418410:	push   ecx
  418411:	dec    ebx
  418412:	nop
  418413:	std    
  418414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418415:	enter  0x95ff,0x71
  418419:	hlt    
  41841a:	stos   BYTE PTR es:[edi],al
  41841b:	fistp  WORD PTR [ebx-0x25a38d3]
  418421:	je     0x41847e
  418423:	jp     0x4183cf
  418425:	aam    0x24
  418427:	xor    ebx,ecx
  418429:	push   ss
  41842a:	add    eax,0xa838837d
  41842f:	pushf  
  418430:	mov    esi,DWORD PTR [eax-0x73ee8cf9]
  418436:	xchg   edi,eax
  418437:	imul   eax,DWORD PTR [eax+0x48ea3964],0x79f133cf
  418441:	jo     0x418420
  418443:	outs   dx,BYTE PTR ds:[esi]
  418444:	sub    ebx,DWORD PTR [edx]
  418446:	cmp    eax,0x4b4a2951
  41844b:	cmp    eax,DWORD PTR [edx-0x1a]
  41844e:	mov    ah,0x37
  418450:	ret    
  418451:	and    al,0xc7
  418453:	adc    al,0x50
  418455:	das    
  418456:	icebp  
  418457:	dec    esi
  418458:	pop    ebp
  418459:	ss das 
  41845b:	xchg   edi,eax
  41845c:	mov    al,0x5d
  41845e:	pop    esp
  41845f:	xchg   DWORD PTR [edi],esp
  418461:	popf   
  418462:	pop    eax
  418463:	xor    al,0x54
  418465:	inc    edi
  418466:	(bad)  
  418467:	in     eax,0xc9
  418469:	(bad)  
  41846a:	sbb    ch,BYTE PTR [edx-0x5f7e24e4]
  418470:	pop    edi
  418471:	push   ebp
  418472:	pop    esp
  418473:	fldcw  WORD PTR [edx]
  418475:	repnz push ebp
  418477:	fwait
  418478:	inc    esp
  418479:	jno    0x41847a
  41847b:	adc    al,0x9a
  41847d:	sub    eax,0xb56e34f4
  418482:	dec    edx
  418483:	push   ebp
  418484:	test   BYTE PTR [ecx-0x4],ch
  418487:	push   edi
  418488:	adc    DWORD PTR [edx],ebp
  41848a:	loop   0x418412
  41848c:	cmp    eax,0x462436aa
  418491:	aam    0x96
  418493:	adc    BYTE PTR [ecx+eiz*2+0x65b91147],ch
  41849a:	call   0xfa45:0xa5f75ea0
  4184a1:	inc    edi
  4184a2:	test   eax,0x9a9255c
  4184a7:	arpl   WORD PTR [edx-0x6dd68a4e],di
  4184ad:	lods   al,BYTE PTR ds:[esi]
  4184ae:	loope  0x418432
  4184b0:	add    al,0x7
  4184b2:	ret    
  4184b3:	and    eax,0xd293b47a
  4184b8:	into   
  4184b9:	push   edx
  4184ba:	mov    edi,0xb7741c7
  4184bf:	(bad)  
  4184c0:	pop    ecx
  4184c1:	xlat   BYTE PTR ds:[ebx]
  4184c2:	addr16 sti 
  4184c4:	xchg   esi,eax
  4184c5:	imul   edi,DWORD PTR [edx+0x59],0xffffffcd
  4184c9:	and    esi,DWORD PTR [ecx+0x5]
  4184cc:	int    0xaf
  4184ce:	lahf   
  4184cf:	loop   0x4184ac
  4184d1:	fld    QWORD PTR [edx]
  4184d3:	xchg   edx,eax
  4184d4:	and    al,0xae
  4184d6:	(bad)  
  4184d7:	sahf   
  4184d8:	repnz xor BYTE PTR ds:0x3eba3b49,dl
  4184df:	sub    BYTE PTR [ebx+0x3307d984],ah
  4184e5:	mov    esi,0xec007ac5
  4184ea:	loop   0x4184c1
  4184ec:	xor    eax,0xd5cca431
  4184f1:	adc    bl,BYTE PTR [ecx-0x4555430b]
  4184f7:	dec    ebp
  4184f8:	add    edx,ecx
  4184fa:	xlat   BYTE PTR ds:[ebx]
  4184fb:	or     BYTE PTR [ebp+0x6621b20f],ah
  418501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418502:	stc    
  418503:	scas   al,BYTE PTR es:[edi]
  418504:	and    al,BYTE PTR [ebx+eiz*8]
  418507:	cmp    edx,DWORD PTR [ecx]
  418509:	(bad)  
  41850a:	pop    ebp
  41850b:	ins    BYTE PTR es:[edi],dx
  41850c:	lds    ecx,FWORD PTR [ebx+0x5b71cdc5]
  418512:	or     eax,0xdc5c171
  418517:	data16 jno 0x4184d7
  41851a:	jne    0x418577
  41851c:	push   ebx
  41851e:	inc    ebx
  41851f:	mov    ah,0xc8
  418521:	(bad)  
  418522:	gs jle 0x418577
  418525:	call   0x5dc5a490
  41852a:	sub    BYTE PTR [edi+eiz*8],cl
  41852d:	jne    0x41853a
  41852f:	add    DWORD PTR [ebx-0x95aa992],ebp
  418535:	xor    edi,ecx
  418537:	aam    0x84
  418539:	jnp    0x4184f7
  41853b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41853c:	inc    eax
  41853d:	mov    ah,0xa
  41853f:	mov    ds:0xf8b0cbf0,eax
  418544:	add    DWORD PTR [eax],esp
  418546:	add    eax,0x6fbbe40a
  41854b:	lock and BYTE PTR ds:0xcbebec5a,dl
  418552:	out    dx,al
  418553:	cmp    WORD PTR [edi+edx*2],si
  418557:	clc    
  418558:	js     0x418568
  41855a:	shl    DWORD PTR [edi+0x37bd39a0],0xaf
  418561:	popa   
  418562:	in     eax,dx
  418563:	test   eax,0xc883aaed
  418568:	mov    WORD PTR [edi+0x7b],?
  41856b:	leave  
  41856c:	sbb    DWORD PTR [edi+0x1b],ebp
  41856f:	mov    eax,DWORD PTR cs:[edx-0x48]
  418573:	mov    WORD PTR [edi+0x52],ds
  418576:	ss pop ebp
  418578:	mov    cl,0x66
  41857a:	ja     0x41854d
  41857c:	sti    
  41857d:	cli    
  41857e:	mov    al,0xf1
  418580:	enter  0x76f8,0x4a
  418584:	int    0x55
  418586:	stos   DWORD PTR es:[edi],eax
  418587:	test   DWORD PTR [ebp+0x6bc6c5d],ebp
  41858d:	or     edx,ecx
  41858f:	imul   edi,edi,0x408750fb
  418595:	aas    
  418596:	cs dec eax
  418598:	stos   BYTE PTR es:[edi],al
  418599:	mov    edx,0x2dda1f5b
  41859e:	rcl    al,1
  4185a0:	adc    esi,DWORD PTR [ebx+0x16]
  4185a3:	push   es
  4185a4:	mov    WORD PTR [edx-0x28c5e25b],ss
  4185aa:	enter  0x4ba5,0xa9
  4185ae:	(bad)  
  4185af:	leave  
  4185b0:	xor    dh,BYTE PTR [ebx+0xf4b0488]
  4185b6:	and    ebp,eax
  4185b8:	pop    esp
  4185b9:	scas   eax,DWORD PTR es:[edi]
  4185ba:	dec    edi
  4185bb:	and    eax,0xb53d3760
  4185c0:	and    BYTE PTR [eax-0xd],0x46
  4185c4:	adc    bh,BYTE PTR [ebx+ecx*2]
  4185c7:	mov    ecx,0xc5c0b2b
  4185cc:	retf   0x7796
  4185cf:	stos   DWORD PTR es:[edi],eax
  4185d0:	lods   al,BYTE PTR ds:[esi]
  4185d1:	add    edx,DWORD PTR [ebp-0x13]
  4185d4:	fbstp  TBYTE PTR ds:[ebx+0x6bb97391]
  4185dc:	outs   dx,DWORD PTR ds:[esi]
  4185dd:	ja     0x418610
  4185df:	out    dx,al
  4185e0:	scas   eax,DWORD PTR es:[edi]
  4185e1:	fcomp  QWORD PTR [edx+0x18907284]
  4185e7:	icebp  
  4185e8:	fcomp  QWORD PTR [eax+0x4b07e259]
  4185ee:	push   esp
  4185ef:	lods   al,BYTE PTR ds:[esi]
  4185f0:	dec    ebx
  4185f1:	mov    fs,WORD PTR ds:0xfa0e28e8
  4185f7:	and    ah,bl
  4185f9:	push   eax
  4185fa:	stos   BYTE PTR es:[edi],al
  4185fb:	retf   
  4185fc:	xchg   cl,ah
  4185fe:	(bad)  
  4185ff:	pop    ebx
  418600:	jmp    0xdc51:0x55f1f763
  418607:	xchg   esi,eax
  418608:	sahf   
  418609:	cmp    BYTE PTR [eax+0x25],dh
  41860c:	scas   al,BYTE PTR es:[edi]
  41860d:	sbb    al,0x2b
  41860f:	in     al,0xf9
  418611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418612:	xlat   BYTE PTR ds:[ebx]
  418613:	push   ds
  418614:	mov    esp,0xbdc71feb
  418619:	mov    eax,ds:0x5bf9c86e
  41861e:	dec    esp
  41861f:	enter  0x1949,0x68
  418623:	cwde   
  418624:	sub    edx,DWORD PTR [edx+0x58dd41d8]
  41862a:	sti    
  41862b:	sbb    al,0xe6
  41862d:	mov    bl,0x1b
  41862f:	mov    esp,0x5a9efced
  418634:	lock jnp 0x4185e9
  418637:	mov    ecx,0x64610ca4
  41863c:	mov    bh,0xd4
  41863e:	mov    dl,0x15
  418640:	in     al,0xb0
  418642:	xor    ebx,DWORD PTR [ecx]
  418644:	push   cs
  418645:	sbb    eax,edx
  418647:	test   eax,0xdb9d335d
  41864c:	dec    esp
  41864d:	jl     0x418692
  41864f:	in     eax,0x7e
  418651:	mov    ch,0x4d
  418653:	aam    0xcd
  418655:	sbb    BYTE PTR [edi+0x211fa3ea],0x53
  41865c:	ss cmp al,0x22
  41865f:	mov    eax,0x965ef97b
  418664:	neg    bh
  418666:	or     BYTE PTR [eax],bh
  418668:	jno    0x418653
  41866a:	aam    0x9a
  41866c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41866d:	xchg   esp,eax
  41866e:	jae    0x4186e9
  418670:	mov    ah,0x34
  418672:	dec    ecx
  418673:	inc    edx
  418674:	outs   dx,BYTE PTR ds:[esi]
  418675:	mov    edi,0xe79a7010
  41867a:	or     al,0x1b
  41867c:	mov    bh,0x6c
  41867e:	rol    ebx,cl
  418680:	out    0xd7,al
  418682:	cwde   
  418683:	mov    ds:0xc2f82598,eax
  418688:	sbb    eax,0x342118f8
  41868d:	sbb    BYTE PTR [ebp+0x23],dh
  418690:	gs jb  0x418662
  418693:	sub    ah,BYTE PTR [ebx+ebx*2]
  418696:	in     al,dx
  418697:	jmp    0xdfb4210f
  41869c:	xchg   esi,eax
  41869d:	cmp    al,0x37
  41869f:	loope  0x4186ee
  4186a1:	jbe    0x41869a
  4186a3:	mov    esi,0x22afb59e
  4186a8:	or     bl,BYTE PTR [eax+0x5c]
  4186ab:	xor    edx,DWORD PTR [edi-0xf]
  4186ae:	rcl    bh,0xa0
  4186b1:	test   DWORD PTR [edx+0x55],edx
  4186b4:	stc    
  4186b5:	mov    ds:0x983adc38,al
  4186ba:	add    edx,esi
  4186bc:	xchg   edx,eax
  4186bd:	dec    ebp
  4186be:	dec    edi
  4186bf:	scas   al,BYTE PTR es:[edi]
  4186c0:	(bad)  
  4186c2:	je     0x41871f
  4186c4:	lea    eax,[ebx+eiz*2+0x58]
  4186c8:	sub    eax,0xd5d8069e
  4186cd:	retf   0x8f15
  4186d0:	pop    edi
  4186d1:	add    BYTE PTR [eax-0x12],ah
  4186d4:	clc    
  4186d5:	mov    bl,0xba
  4186d7:	imul   esp,ebp,0x4
  4186da:	ja     0x41873b
  4186dc:	cld    
  4186dd:	jge    0x4186e2
  4186df:	ds xchg edx,eax
  4186e1:	mov    DWORD PTR ds:0xf765275b,ebx
  4186e7:	(bad)  
  4186e8:	movzx  esp,BYTE PTR [edi]
  4186eb:	or     al,0x3b
  4186ed:	dec    esp
  4186ee:	mov    ebp,0x49c9b45b
  4186f3:	imul   edi,DWORD PTR [edi-0x16],0x49124119
  4186fa:	sub    ebx,eax
  4186fc:	adc    eax,0xe734e225
  418701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418702:	aas    
  418703:	shr    DWORD PTR [eax],cl
  418705:	mov    bl,0x5d
  418707:	mov    dl,0x33
  418709:	ror    BYTE PTR [ebp+0x72e01a94],1
  41870f:	xor    al,BYTE PTR [eax]
  418711:	mov    DWORD PTR [ebp-0xc],edx
  418714:	mov    edx,DWORD PTR [ebp-0x10]
  418717:	xor    edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	push   eax
  4187e2:	call   edx
  4187e4:	int3   
  4187e5:	jmp    0x41881b
  4187e7:	jns    0x418863
  4187e9:	add    DWORD PTR [edi+0x7a],ebx
  4187ec:	jp     0x418868
  4187ee:	and    ah,dh
  4187f0:	lods   al,BYTE PTR ds:[esi]
  4187f1:	jmp    0xe59f:0x53f26dda
  4187f8:	mov    cl,0x98
  4187fa:	jl     0x418859
  4187fc:	dec    eax
  4187fd:	mov    bh,0xe2
  4187ff:	dec    edx
  418800:	leave  
  418801:	arpl   WORD PTR [esi-0x5ffe5bdf],si
  418807:	imul   ecx,DWORD PTR [edi+0x33],0x69
  41880b:	lock (bad) 
  41880e:	repnz pop esp
  418810:	in     eax,dx
  418811:	xor    al,0x8
  418813:	mov    ah,bh
  418815:	popf   
  418816:	(bad)  
  418817:	cwde   
  418818:	inc    ecx
  418819:	push   eax
  41881a:	and    DWORD PTR [ebp+0x3eb6a14a],0x3282a1db
  418824:	jmp    0x41889a
  418826:	mov    al,0x9d
  418828:	imul   edi,DWORD PTR [edx],0xc98025bf
  41882e:	push   DWORD PTR [ecx-0x31]
  418831:	fwait
  418832:	xchg   ecx,eax
  418833:	and    edx,DWORD PTR [esi]
  418835:	fadd   DWORD PTR [ebp-0x6fbab823]
  41883b:	retf   
  41883c:	arpl   ax,dx
  41883e:	pop    eax
  41883f:	add    DWORD PTR [edi+0x7e],esp
  418842:	mov    ecx,0x116abc80
  418847:	fpatan 
  418849:	pop    ecx
  41884a:	mov    ds:0x849defcd,al
  41884f:	bound  edx,QWORD PTR [esi+edi*4-0x66ab99d6]
  418856:	add    BYTE PTR [eax-0x32],dl
  418859:	adc    al,0xcd
  41885b:	stc    
  41885c:	stc    
  41885d:	outs   dx,BYTE PTR ds:[esi]
  41885e:	mov    bl,0xe
  418860:	inc    ebp
  418861:	inc    edi
  418862:	add    eax,0x9491096a
  418867:	cld    
  418868:	dec    ecx
  418869:	mov    esp,DWORD PTR [eax-0xc0c7243]
  41886f:	cdq    
  418870:	ficomp WORD PTR [edi-0x288424d3]
  418876:	ja     0x4188ce
  418878:	xchg   ebx,eax
  418879:	or     cl,BYTE PTR [edx]
  41887b:	xor    al,0x2b
  41887d:	scas   eax,DWORD PTR es:[edi]
  41887e:	xchg   ebp,eax
  41887f:	xchg   esi,eax
  418880:	dec    esp
  418881:	and    eax,0x134d3a8c
  418886:	imul   ebx,DWORD PTR [eax+0x77],0x48
  41888a:	sti    
  41888b:	or     DWORD PTR [ebx+0x5d677660],ebp
  418891:	or     al,0x46
  418893:	loope  0x4188d3
  418895:	inc    esi
  418896:	jecxz  0x41882f
  418898:	stos   DWORD PTR es:[edi],eax
  418899:	outs   dx,DWORD PTR ds:[esi]
  41889a:	xlat   BYTE PTR ds:[ebx]
  41889b:	cmp    bh,cl
  41889d:	jle    0x41883a
  41889f:	popf   
  4188a0:	pop    es
  4188a1:	cdq    
  4188a2:	into   
  4188a3:	icebp  
  4188a4:	inc    ebp
  4188a5:	leave  
  4188a6:	hlt    
  4188a7:	cmp    BYTE PTR [ebp*8+0x1afd4f4f],al
  4188ae:	sub    cl,BYTE PTR [edx+edi*8-0x5f]
  4188b2:	cmp    BYTE PTR [ebx],bh
  4188b4:	dec    edi
  4188b5:	xor    ch,BYTE PTR [eax]
  4188b7:	jmp    0x95c8:0x87423ac8
  4188be:	fsub   DWORD PTR [edi]
  4188c0:	mov    fs,WORD PTR [edx+edi*4+0x4]
  4188c4:	das    
  4188c5:	addr16 pusha 
  4188c7:	mov    eax,ds:0x540721c1
  4188cc:	ds xchg esi,eax
  4188ce:	xor    DWORD PTR [ebx+0x4d1b4512],ecx
  4188d4:	jmp    0x4ddf:0x5c4c6482
  4188db:	int    0xf
  4188dd:	mov    edi,0xa1f431be
  4188e2:	push   0x17
  4188e4:	add    eax,0xf501d4a3
  4188e9:	outs   dx,DWORD PTR ds:[esi]
  4188ea:	xor    eax,DWORD PTR [eax]
  4188ec:	sub    esp,edx
  4188ee:	lgs    ebx,FWORD PTR ds:0x67c9d229
  4188f5:	xchg   ecx,eax
  4188f6:	pop    ss
  4188f7:	pop    es
  4188f8:	xor    al,0xc
  4188fb:	lods   al,BYTE PTR ds:[esi]
  4188fc:	fld    TBYTE PTR [edi]
  4188fe:	adc    BYTE PTR [edx+0x1d0310b4],ah
  418904:	push   ss
  418905:	mov    ch,0xb6
  418907:	outs   dx,BYTE PTR ds:[esi]
  418908:	loop   0x418907
  41890a:	xlat   BYTE PTR ds:[ebx]
  41890b:	mov    fs,WORD PTR [ebp+eax*1-0x55]
  41890f:	push   edi
  418910:	hlt    
  418911:	data16 je 0x418922
  418914:	sub    eax,0x829a7b74
  418919:	and    BYTE PTR [eax],cl
  41891b:	cld    
  41891c:	out    0xfd,eax
  41891e:	pop    ebp
  41891f:	shl    DWORD PTR [edx],0x7d
  418922:	xchg   DWORD PTR [eax-0x7f77ead0],ebx
  418928:	inc    edi
  418929:	aas    
  41892a:	push   esi
  41892b:	mov    eax,0xc91b31d1
  418930:	pop    eax
  418931:	retf   0xb5a3
  418934:	les    ebp,FWORD PTR [eax+0x4b]
  418937:	add    DWORD PTR [esi-0x40],edi
  41893a:	les    esp,FWORD PTR [ebp+0x5e]
  41893d:	cwde   
  41893e:	sbb    BYTE PTR [ebx-0x8],ah
  418941:	test   al,0xbc
  418943:	clc    
  418944:	jns    0x4189a3
  418946:	sbb    DWORD PTR ds:0x785ec537,ebp
  41894c:	adc    dh,BYTE PTR [ebx+0x72]
  41894f:	addr16 call 0x45ad:0x263b1a9f
  418957:	fbld   TBYTE PTR [eax+0x6263b008]
  41895d:	lods   eax,DWORD PTR ds:[esi]
  41895e:	pop    ebp
  41895f:	mov    bl,0x68
  418961:	shl    BYTE PTR [edx*2+0x5ac34bc8],1
  418968:	movntps XMMWORD PTR [edx],xmm6
  41896b:	or     eax,ebp
  41896d:	pop    ecx
  41896e:	fs ds jne 0x4189be
  418972:	or     al,0x81
  418974:	bound  esi,QWORD PTR [ebx-0x5cb8c9ac]
  41897a:	mov    eax,DWORD PTR cs:[eax+0x27ecad16]
  418981:	or     bl,BYTE PTR [ebx]
  418983:	in     al,dx
  418984:	aas    
  418985:	cmp    al,0x29
  418987:	cld    
  418988:	push   ebp
  418989:	jmp    0xc6ad:0xb3629b00
  418990:	push   cs
  418991:	hlt    
  418992:	and    esi,esp
  418994:	into   
  418995:	mov    ebx,0xc34d5985
  41899a:	jmp    0x6e451b72
  41899f:	push   ds
  4189a0:	push   cs
  4189a1:	mov    ecx,0x2f1b432f
  4189a6:	sti    
  4189a7:	xchg   esi,eax
  4189a8:	out    0x7d,al
  4189aa:	fsub   QWORD PTR [ebp-0x12]
  4189ad:	jg     0x418a22
  4189af:	out    dx,eax
  4189b0:	xor    edx,esi
  4189b2:	fstp   QWORD PTR [ebx-0x3c]
  4189b5:	and    DWORD PTR [edx-0x50],ebp
  4189b8:	sub    DWORD PTR [ecx-0x1f6c0011],ecx
  4189be:	test   DWORD PTR [ecx+ecx*1+0x10],edi
  4189c2:	push   0x338faf94
  4189c7:	sub    BYTE PTR [ebx+0x3f],dh
  4189ca:	or     DWORD PTR fs:[esi-0x2f2d9756],0xffffffce
  4189d2:	dec    ebp
  4189d3:	sub    ebp,DWORD PTR [esi+0x4]
  4189d6:	mov    edx,esi
  4189d8:	sbb    dl,ch
  4189da:	add    eax,0xa93df048
  4189df:	cmp    edi,esi
  4189e1:	xchg   esi,eax
  4189e2:	pop    ds
  4189e3:	mov    edx,0x80ab2b78
  4189e8:	pop    esp
  4189e9:	mov    cl,0xef
  4189eb:	repz dec edx
  4189ed:	push   ecx
  4189ee:	push   ss
  4189ef:	loop   0x418a37
  4189f1:	fsubr  st(2),st
  4189f3:	and    DWORD PTR [ecx-0x46d4fc0f],0x2a
  4189fa:	nop
  4189fb:	pop    ss
  4189fc:	push   es
  4189fd:	sar    BYTE PTR [ecx],0x80
  418a00:	xchg   DWORD PTR [ebp+ecx*2-0x165cd272],esp
  418a07:	push   eax
  418a08:	leave  
  418a09:	sub    BYTE PTR [edx+0x17afb69e],bh
  418a0f:	ins    BYTE PTR es:[edi],dx
  418a10:	sub    ecx,esp
  418a12:	xlat   BYTE PTR ds:[ebx]
  418a13:	mov    al,ds:0xcca11a04
  418a18:	mov    ch,0xfa
  418a1a:	in     eax,0xe2
  418a1c:	mov    ch,0x62
  418a1e:	sbb    ah,BYTE PTR [esi]
  418a20:	lahf   
  418a21:	mov    al,ds:0xf3362051
  418a26:	mov    eax,ds:0xd1bd6104
  418a2b:	fld    st(2)
  418a2d:	(bad)  
  418a2e:	outs   dx,DWORD PTR ds:[esi]
  418a2f:	xchg   ecx,eax
  418a30:	in     al,0x18
  418a32:	jmp    0x48795949
  418a37:	mov    DWORD PTR [esi+0x56],edi
  418a3a:	shr    ecx,0xd1
  418a3d:	inc    edi
  418a3e:	cdq    
  418a3f:	lock jae 0x418a5c
  418a42:	dec    ecx
  418a43:	add    bl,BYTE PTR [edi+0x1820cbc2]
  418a49:	aaa    
  418a4a:	inc    eax
  418a4b:	dec    ecx
  418a4c:	pop    ecx
  418a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a4e:	adc    esp,DWORD PTR [ebp+0x6e]
  418a51:	jns    0x418aa4
  418a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a54:	or     BYTE PTR [ebx+0x23],ch
  418a57:	lea    esp,[ebx]
  418a59:	sub    al,0x2a
  418a5b:	sbb    ah,BYTE PTR [edx+0x4a27686]
  418a61:	ins    BYTE PTR es:[edi],dx
  418a62:	mov    edi,0x915ae4fb
  418a67:	add    al,0x79
  418a69:	add    ebx,ebx
  418a6b:	jo     0x418a7f
  418a6d:	xor    esi,DWORD PTR [edx+0x6c94013f]
  418a73:	inc    eax
  418a74:	mov    ebx,0x1af74c52
  418a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a7a:	out    0x9b,al
  418a7c:	lds    ecx,FWORD PTR [esi]
  418a7e:	jl     0x418a15
  418a80:	rcr    eax,cl
  418a82:	xchg   ebx,eax
  418a83:	lahf   
  418a84:	jnp    0x418ac8
  418a86:	and    bh,BYTE PTR [esi]
  418a88:	jmp    0x96a:0xe3ea1468
  418a8f:	jle    0x418ae9
  418a91:	inc    esi
  418a92:	ret    
  418a93:	stc    
  418a94:	rol    DWORD PTR [edi+0x7],0xfa
  418a98:	je     0x418a47
  418a9a:	scas   al,BYTE PTR es:[edi]
  418a9b:	inc    edi
  418a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a9d:	mov    ebp,0xf6934e77
  418aa2:	outs   dx,BYTE PTR ds:[esi]
  418aa3:	jo     0x418a36
  418aa5:	adc    BYTE PTR [ebp-0x1a],cl
  418aa8:	mov    al,ds:0xae8fd053
  418aad:	fsubrp st(5),st
  418aaf:	icebp  
  418ab0:	xchg   ebx,eax
  418ab1:	ret    0xff32
  418ab4:	xor    al,0x9a
  418ab6:	out    0x8a,eax
  418ab8:	xchg   esp,eax
  418ab9:	or     edi,ecx
  418abb:	fs ret 
  418abd:	in     al,dx
  418abe:	mov    al,0x9b
  418ac0:	and    eax,0xc9afcb87
  418ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ac6:	fidivr WORD PTR [edx+0x1a]
  418ac9:	push   eax
  418aca:	adc    al,0x8c
  418acc:	mov    ecx,0xa2db48c
  418ad1:	push   es
  418ad2:	repz enter 0xd80c,0x37
  418ad7:	or     dh,dh
  418ad9:	xlat   BYTE PTR ds:[ebx]
  418ada:	xlat   BYTE PTR ds:[ebx]
  418adb:	addr16 sbb ebx,edi
  418ade:	(bad)  
  418adf:	sub    DWORD PTR [eax-0x6948528b],ebp
  418ae5:	iret   
  418ae6:	mov    eax,ds:0x76182db7
  418aeb:	sub    eax,0xf0f04d7c
  418af0:	scas   al,BYTE PTR es:[edi]
  418af1:	cs or  cl,al
  418af4:	inc    esp
  418af5:	push   0x52
  418af7:	loopne 0x418b75
  418af9:	or     edx,edx
  418afb:	jmp    DWORD PTR [ecx-0x4d2dbc84]
  418b01:	xor    dh,bl
  418b03:	push   edi
  418b04:	adc    BYTE PTR [ecx+0x2fbfde70],dl
  418b0a:	xchg   esp,eax
  418b0b:	stos   BYTE PTR es:[edi],al
  418b0c:	xor    eax,0x3f432504
  418b11:	fstp   DWORD PTR [edx+0x64]
  418b14:	pusha  
  418b15:	out    dx,al
  418b16:	(bad)  
  418b18:	loope  0x418b01
  418b1a:	das    
  418b1b:	inc    ebx
  418b1c:	ss mov ah,0x9c
  418b1f:	aad    0xa
  418b21:	sub    DWORD PTR [edx],ecx
  418b23:	jge    0x418aa8
  418b25:	mov    eax,0xbfe7df86
  418b2a:	sbb    eax,0x38117672
  418b2f:	or     BYTE PTR [ebx+0x7a39981c],al
  418b35:	jno    0x418b99
  418b37:	aas    
  418b38:	mov    bh,0xc7
  418b3a:	mov    eax,0xfbaa2b61
  418b3f:	xchg   ebp,eax
  418b40:	cs pop ss
  418b42:	inc    edx
  418b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b44:	nop
  418b45:	ins    DWORD PTR es:[edi],dx
  418b46:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  418b48:	fdiv   DWORD PTR [ecx+ebx*1+0x157a7003]
  418b4f:	(bad)  
  418b50:	js     0x418b5c
  418b52:	cmc    
  418b53:	ret    
  418b54:	xchg   esp,eax
  418b55:	mov    al,0xab
  418b57:	jae    0x418bac
  418b59:	retf   0xfc37
  418b5c:	xor    eax,0xeb92b38f
  418b61:	pop    ebx
  418b62:	xchg   esp,eax
  418b63:	clc    
  418b64:	mov    cl,0x82
  418b66:	fistp  DWORD PTR [ebp-0x6e]
  418b69:	lods   al,BYTE PTR ds:[esi]
  418b6a:	push   cs
  418b6b:	(bad)  
  418b6c:	mov    bl,0xff
  418b6e:	pop    esi
  418b6f:	cmp    DWORD PTR [esi-0x17],0xffffffe7
  418b73:	xor    DWORD PTR [esi-0x53],eax
  418b76:	stc    
  418b77:	push   ebx
  418b78:	jmp    0x22d4:0x68fea8ad
  418b7f:	daa    
  418b80:	cli    
  418b81:	adc    eax,ebx
  418b83:	jmp    0xbca7:0x69bae2b1
  418b8a:	sbb    DWORD PTR ds:0x1d384e85,0x33
  418b91:	inc    edi
  418b92:	dec    esi
  418b93:	(bad)  
  418b94:	repnz daa 
  418b96:	outs   dx,BYTE PTR ds:[esi]
  418b97:	mov    esi,0x6d4c0956
  418b9c:	dec    edi
  418b9d:	fimul  WORD PTR ds:0x54228553
  418ba3:	cdq    
  418ba4:	inc    ebx
  418ba5:	jp     0x418b79
  418ba7:	sub    BYTE PTR [esp+eax*2-0x2ffa7e66],ah
  418bae:	jo     0x418be8
  418bb0:	pop    eax
  418bb1:	cmp    DWORD PTR [ebx],eax
  418bb3:	mov    ecx,0x7d8779f9
  418bb8:	std    
  418bb9:	xor    al,0x7e
  418bbb:	xor    DWORD PTR [edi-0x38],0xffffff80
  418bbf:	int3   
  418bc0:	fwait
  418bc1:	mov    eax,0xd6804c73
  418bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bc7:	int    0xa0
  418bc9:	sub    al,0xb4
  418bcb:	pop    es
  418bcc:	inc    edi
  418bcd:	push   gs
  418bcf:	jb     0x418baf
  418bd1:	pop    ss
  418bd2:	or     BYTE PTR [edi-0x3c],ch
  418bd5:	mov    eax,0x77a26c79
  418bda:	and    BYTE PTR [esi-0x53],ah
  418bdd:	or     eax,0x5e2fc45e
  418be2:	xchg   esi,eax
  418be3:	outs   dx,DWORD PTR ds:[esi]
  418be4:	mov    esp,ebx
  418be6:	mov    ch,cl
  418be8:	sbb    ecx,edx
  418bea:	sbb    ah,BYTE PTR [eax]
  418bec:	jno    0x418c54
  418bee:	push   ebx
  418bef:	shl    eax,cl
  418bf1:	adc    BYTE PTR [ebx+edi*8-0x6198857f],0x1b
  418bf9:	adc    ebp,DWORD PTR [edx-0xf9b4872]
  418bff:	jl     0x418c67
  418c01:	mov    dh,0xe2
  418c03:	mov    edi,edx
  418c05:	and    DWORD PTR [ecx+0x469b4973],edx
  418c0b:	and    DWORD PTR [ebp-0x58bad22f],ebx
  418c11:	repnz out 0x9f,al
  418c14:	mov    al,ds:0x657e40f7
  418c19:	add    BYTE PTR [edx-0x26],cl
  418c1c:	(bad)  
  418c1d:	cs jno 0x418c54
  418c20:	add    al,0xde
  418c22:	and    ecx,esi
  418c24:	call   0xe572679d
  418c29:	ins    BYTE PTR es:[edi],dx
  418c2a:	mov    edx,0x9fd06990
  418c2f:	test   BYTE PTR [esi+0x51],cl
  418c32:	mov    edx,0xd0607ded
  418c37:	mov    ah,0xac
  418c39:	jns    0x418c28
  418c3b:	sub    BYTE PTR [edi+0x64a5e09f],cl
  418c41:	push   ss
  418c42:	sbb    DWORD PTR [edi],edx
  418c44:	cmp    al,0xa9
  418c46:	ins    DWORD PTR es:[edi],dx
  418c47:	jnp    0x418c87
  418c49:	(bad)  
  418c4a:	(bad)  
  418c4b:	lds    ebp,FWORD PTR [ecx-0x182d586d]
  418c51:	test   al,0x9d
  418c53:	mov    esp,0xd02a4a23
  418c58:	ror    DWORD PTR [ebx],1
  418c5a:	mov    esp,0x2eb2e311
  418c5f:	and    ecx,eax
  418c61:	aas    
  418c62:	adc    eax,0xbb5c04d7
  418c67:	jnp    0x418cca
  418c69:	jmp    0xd867aade
  418c6e:	cli    
  418c6f:	push   esi
  418c70:	pop    ebx
  418c71:	stc    
  418c72:	cmp    edx,DWORD PTR [ebp+0x4]
  418c75:	sub    cl,BYTE PTR ds:0x8ab21d48
  418c7b:	out    dx,al
  418c7c:	add    esp,edx
  418c7e:	jns    0x418c32
  418c80:	imul   ebp,DWORD PTR [ebp+ebx*1+0x7156c774],0x54
  418c88:	pop    esp
  418c89:	or     dl,dl
  418c8b:	jl     0x418c44
  418c8d:	ja     0x418c4a
  418c8f:	or     ah,BYTE PTR [edi+0x3]
  418c92:	out    dx,eax
  418c93:	icebp  
  418c94:	aaa    
  418c95:	or     DWORD PTR [ebp+0x34f5c7e0],ebp
  418c9b:	add    al,ch
  418c9d:	dec    edi
  418c9e:	lock jae 0x418c69
  418ca1:	add    BYTE PTR [ecx-0x2a],0xf4
  418ca5:	mov    ds,WORD PTR [ecx]
  418ca7:	ins    DWORD PTR es:[edi],dx
  418ca8:	sub    eax,0x8f6b0b38
  418cad:	loopne 0x418c97
  418caf:	aam    0xe9
  418cb1:	imul   esp,edx,0xec297a33
  418cb7:	xchg   esi,eax
  418cb8:	adc    DWORD PTR [esi],ebx
  418cba:	mov    eax,ds:0x22fc8757
  418cbf:	cmp    al,0xcd
  418cc1:	jnp    0x418d10
  418cc3:	stos   DWORD PTR es:[edi],eax
  418cc4:	pusha  
  418cc5:	xchg   edx,eax
  418cc6:	xor    BYTE PTR [edx],dh
  418cc8:	xlat   BYTE PTR ds:[ebx]
  418cc9:	xor    BYTE PTR gs:[ebp-0x36471f8a],bl
  418cd0:	dec    eax
  418cd1:	mov    esp,0x70657ffe
  418cd6:	fs ja  0x418cb6
  418cd9:	fst    st(7)
  418cdb:	sub    dl,BYTE PTR [edx+0x2dca3324]
  418ce1:	pop    ss
  418ce2:	ret    
  418ce3:	mov    ecx,0x841c91cb
  418ce8:	cmp    eax,0xdf9d0813
  418ced:	mov    bh,0xd6
  418cef:	mov    cl,0x3b
  418cf1:	xchg   DWORD PTR [esi-0x395826c5],esp
  418cf7:	nop
  418cf8:	dec    edx
  418cf9:	xchg   DWORD PTR [eax],edi
  418cfb:	cs cmc 
  418cfd:	add    ecx,DWORD PTR [ebx-0x1952e235]
  418d03:	inc    cl
  418d05:	repnz mov ecx,0xd7c6d433
  418d0b:	mov    eax,ds:0xa654ac04
  418d10:	or     ah,bl
  418d12:	or     DWORD PTR [ebp-0x5b92e0e],eax
  418d18:	sbb    esi,esi
  418d1a:	xor    BYTE PTR [edi],bh
  418d1c:	jmp    0x418d34
  418d1e:	call   0x934d:0xea445a71
  418d25:	ret    0xd895
  418d28:	xchg   edx,eax
  418d29:	xchg   edi,eax
  418d2a:	scas   al,BYTE PTR es:[edi]
  418d2b:	cwde   
  418d2c:	jne    0x418cdb
  418d2e:	xchg   edx,eax
  418d2f:	push   ds
  418d30:	push   0xffffffd9
  418d32:	add    BYTE PTR [esi-0x6ab1ac4d],dh
  418d38:	xor    cl,al
  418d3a:	xor    dl,BYTE PTR [ebx+0x50]
  418d3d:	pop    edx
  418d3e:	in     ax,dx
  418d40:	sbb    BYTE PTR [edi+eax*1+0x46],0x38
  418d45:	mov    dh,0xfd
  418d47:	fyl2xp1 
  418d49:	xchg   esi,eax
  418d4a:	fwait
  418d4b:	add    bh,dh
  418d4d:	aam    0x4
  418d4f:	call   0xc1dbf517
  418d54:	xor    ebx,ebp
  418d56:	sub    dl,0xf5
  418d59:	call   0x177920c6
  418d5e:	xor    DWORD PTR [eax+0x716984d1],edx
  418d64:	call   0x133a439a
  418d69:	daa    
  418d6a:	shl    DWORD PTR [ebp-0x787f995d],0x12
  418d71:	push   0xef4acf97
  418d76:	imul   ecx,eax,0x1c8f74
  418d7c:	cs je  0x418d8e
  418d7f:	jne    0x418db2
  418d81:	mov    ds:0xa03d6e28,al
  418d86:	mov    BYTE PTR [edx+0x47],cl
  418d89:	fmul   QWORD PTR [esi-0x15]
  418d8c:	mov    esp,0x82d31993
  418d91:	es jecxz 0x418db4
  418d94:	fldcw  WORD PTR [ebx-0x65862837]
  418d9a:	mov    ecx,edi
  418d9c:	cmp    DWORD PTR [eax-0x30],esi
  418d9f:	aas    
  418da0:	dec    ecx
  418da1:	mov    bl,0xcf
  418da3:	mov    DWORD PTR [ebp+ebx*4+0x3d],esi
  418da7:	rol    BYTE PTR [edi+0x732dddf2],cl
  418dad:	iret   
  418dae:	dec    edi
  418daf:	sbb    eax,DWORD PTR [ebx]
  418db1:	int    0x7b
  418db3:	jl     0x418dbb
  418db5:	stos   BYTE PTR es:[edi],al
  418db6:	cdq    
  418db7:	add    eax,0x89389ea4
  418dbc:	(bad)  
  418dbd:	jne    0x418df8
  418dbf:	hlt    
  418dc0:	lods   al,BYTE PTR ds:[esi]
  418dc1:	xor    BYTE PTR es:[esp+ebp*2],bl
  418dc5:	cmp    dl,bh
  418dc7:	xchg   esp,eax
  418dc8:	in     eax,0x16
  418dca:	mov    ds:0xb79d716a,al
  418dcf:	jnp    0x418d53
  418dd1:	les    esp,FWORD PTR fs:[ebx]
  418dd4:	pop    es
  418dd5:	lods   eax,DWORD PTR ds:[esi]
  418dd6:	fisttp QWORD PTR [edi]
  418dd8:	lds    esp,FWORD PTR [edx]
  418dda:	mov    ch,0xaa
  418ddc:	fnstenv [eax-0x18]
  418ddf:	clc    
  418de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418de1:	push   esp
  418de2:	inc    eax
  418de3:	jmp    0x418d68
  418de5:	inc    esi
  418de6:	mov    dl,0x3e
  418de8:	dec    ecx
  418de9:	lods   eax,DWORD PTR ds:[esi]
  418dea:	mov    eax,0xddd7eca0
  418def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418df0:	dec    esi
  418df1:	aad    0x86
  418df3:	test   al,0x9c
  418df5:	dec    edx
  418df6:	pop    ds
  418df7:	jno    0x418dbf
  418df9:	(bad)  
  418dfa:	(bad)  
  418dfb:	mov    bh,0x92
  418dfd:	imul   edi,DWORD PTR [ebp+edx*2-0x206e248f],0x6c
  418e05:	rcl    DWORD PTR [edx-0x74b855b4],1
  418e0b:	push   ss
  418e0c:	jecxz  0x418e42
  418e0e:	das    
  418e0f:	jmp    0xa7cb6401
  418e14:	push   esi
  418e15:	je     0x418e4b
  418e17:	call   0x9fd2e381
  418e1c:	fidiv  WORD PTR [ebx+0x7405b7e7]
  418e22:	adc    DWORD PTR gs:[eax],0x2748fba
  418e29:	sub    DWORD PTR [ebp+0xb],ebx
  418e2c:	and    BYTE PTR [edx],bl
  418e2e:	or     eax,0xec90b4c0
  418e33:	lds    edi,FWORD PTR [ecx-0x33]
  418e36:	imul   edx,DWORD PTR [eax+eax*8],0xfffffffe
  418e3a:	arpl   WORD PTR [eax],si
  418e3c:	and    eax,0xd61cb2ca
  418e41:	xchg   edi,eax
  418e42:	loopne 0x418e05
  418e44:	cmp    al,0x65
  418e46:	imul   eax,eax,0xc8e5b62
  418e4c:	xchg   ebp,eax
  418e4d:	cli    
  418e4e:	inc    eax
  418e4f:	push   ecx
  418e50:	inc    ecx
  418e51:	and    eax,0xe7dccfdb
  418e56:	cld    
  418e57:	sub    DWORD PTR [edi+eiz*2-0x7a72377e],esp
  418e5e:	es pushf 
  418e60:	lods   al,BYTE PTR gs:[esi]
  418e62:	jmp    0x418eb8
  418e64:	(bad)
  418e67:	add    dh,BYTE PTR [edx-0x209c8fd5]
  418e6d:	es cmp bl,al
  418e70:	add    al,BYTE PTR [esi-0x594684ba]
  418e76:	arpl   bp,ax
  418e78:	xchg   esp,eax
  418e79:	mov    bl,0x2c
  418e7b:	into   
  418e7c:	pop    eax
  418e7d:	push   esi
  418e7e:	cmc    
  418e7f:	aaa    
  418e80:	popa   
  418e81:	and    al,0x4b
  418e83:	push   eax
  418e84:	jo     0x418ed0
  418e86:	sub    al,0xc3
  418e88:	int3   
  418e89:	mov    ecx,DWORD PTR [ecx-0x25]
  418e8c:	cdq    
  418e8d:	lods   al,BYTE PTR ds:[esi]
  418e8e:	stos   DWORD PTR es:[edi],eax
  418e8f:	adc    ebp,edx
  418e91:	and    DWORD PTR [ebx+0x67],ecx
  418e94:	mov    esi,0xc25c55e5
  418e99:	cwde   
  418e9a:	pop    edi
  418e9b:	rcl    bh,cl
  418e9d:	or     al,0xb3
  418e9f:	sub    al,BYTE PTR ds:0xaa36ccd
  418ea5:	lock repz imul esi,DWORD PTR [edx],0xffffffc5
  418eaa:	cli    
  418eab:	lods   al,BYTE PTR ds:[esi]
  418eac:	hlt    
  418ead:	lds    esp,FWORD PTR [ecx-0x6d]
  418eb0:	fstp   DWORD PTR [edi-0x59220bb9]
  418eb6:	cmp    BYTE PTR cs:[esi+ebp*4],dl
  418eba:	scas   al,BYTE PTR es:[edi]
  418ebb:	sub    eax,0xc01692b1
  418ec0:	adc    al,0x9a
  418ec2:	je     0x418f07
  418ec4:	test   eax,0xe619b066
  418ec9:	or     bh,BYTE PTR ds:0x60367575
  418ecf:	enter  0xdd53,0x18
  418ed3:	cmp    eax,ebx
  418ed5:	jne    0x418eda
  418ed7:	in     eax,0xd0
  418ed9:	popf   
  418eda:	retf   0x96b8
  418edd:	fwait
  418ede:	mov    edi,0x806cb939
  418ee3:	in     al,0xb0
  418ee5:	inc    eax
  418ee6:	mov    al,ds:0x9598251f
  418eeb:	add    ch,BYTE PTR [ecx]
  418eed:	or     BYTE PTR [esi+0x6f037fc1],0x4b
  418ef4:	fidivr WORD PTR [edi-0x7d]
  418ef7:	push   es
  418ef8:	mov    edi,0x52010ad7
  418efd:	fistp  DWORD PTR [edi+0x12]
  418f00:	popf   
  418f01:	push   ss
  418f02:	arpl   ax,sp
  418f04:	fild   WORD PTR ds:0xcf0334b4
  418f0a:	mov    al,0x8f
  418f0c:	mov    ebp,0x864b2483
  418f11:	push   ebp
  418f12:	outs   dx,BYTE PTR ds:[esi]
  418f13:	sub    eax,0xe04fc973
  418f18:	and    al,0x31
  418f1a:	fs aad 0xc6
  418f1d:	pop    edi
  418f1e:	push   ss
  418f1f:	and    al,0x2b
  418f21:	stc    
  418f22:	dec    esp
  418f23:	ds pop edx
  418f25:	jnp    0x418ee2
  418f27:	in     al,dx
  418f28:	sbb    BYTE PTR [edx-0x69],0xd9
  418f2c:	sbb    eax,0xab577fa4
  418f31:	cmp    DWORD PTR [ecx+esi*1+0x6a5396f7],0xc431aeda
  418f3c:	mov    ah,0xfa
  418f3e:	jmp    0x1129:0xd0e81231
  418f45:	scas   eax,DWORD PTR es:[edi]
  418f46:	xor    dl,BYTE PTR [esi-0x3e]
  418f49:	iret   
  418f4a:	or     eax,0x7d171a22
  418f4f:	jp     0x418f88
  418f51:	aas    
  418f52:	ficom  WORD PTR ds:0x8ddfcbb6
  418f58:	aaa    
  418f59:	imul   esp,DWORD PTR [ebx],0xc61b3ea5
  418f5f:	mov    ecx,DWORD PTR [esi+edx*1+0x6d33bce9]
  418f66:	push   esi
  418f67:	scas   al,BYTE PTR es:[edi]
  418f68:	pop    ss
  418f69:	mov    bl,0x12
  418f6b:	adc    al,0xd1
  418f6d:	or     bl,bh
  418f6f:	out    0xeb,al
  418f71:	fsubr  DWORD PTR [ebx+0x43]
  418f74:	jecxz  0x418f10
  418f76:	mov    ebp,0xbd8106ec
  418f7b:	jp     0x418fc6
  418f7d:	mov    eax,ds:0xa441e27f
  418f82:	and    eax,0x18907f87
  418f87:	push   0x760974e6
  418f8c:	cmp    ebx,ebx
  418f8e:	jnp    0x418faa
  418f90:	clc    
  418f91:	gs pop ss
  418f93:	shl    BYTE PTR [edx],1
  418f95:	std    
  418f96:	mov    dl,0xa6
  418f98:	aam    0x12
  418f9a:	mov    cl,0x25
  418f9c:	sbb    ebp,DWORD PTR [eax]
  418f9e:	mov    BYTE PTR [edx+ecx*2+0x621b22e8],bh
  418fa5:	ds ret 0xb802
  418fa9:	sbb    bh,BYTE PTR [edx+ebx*2-0x1d]
  418fad:	inc    DWORD PTR [ecx]
  418faf:	sar    DWORD PTR [ebx+0x70],1
  418fb2:	call   0xfb4e7e89
  418fb7:	pop    edx
  418fb8:	aad    0x11
  418fba:	in     eax,dx
  418fbb:	arpl   WORD PTR [ecx+0x661113c4],cx
  418fc1:	fnstenv [ebx-0x6f]
  418fc4:	cmp    eax,0x79022fdc
  418fc9:	pop    edi
  418fca:	inc    ebp
  418fcb:	lods   eax,DWORD PTR ds:[esi]
  418fcc:	aas    
  418fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fce:	int    0xbc
  418fd0:	dec    edi
  418fd1:	mov    ds:0x6153ba8f,al
  418fd6:	test   BYTE PTR [ebx],0x24
  418fd9:	mov    ebp,0x72bf9712
  418fde:	add    esp,DWORD PTR [ebp-0x49fa4913]
  418fe4:	add    al,0xc8
  418fe6:	mov    eax,ds:0x2f33ff5
  418feb:	dec    ebx
  418fec:	inc    edi
  418fed:	icebp  
  418fee:	adc    edx,DWORD PTR [edi]
  418ff0:	cmp    al,0x81
  418ff2:	adc    al,0xff
  418ff4:	or     ecx,DWORD PTR [eax]
  418ff6:	mov    edx,0x2537ca8
  418ffb:	mov    dh,0x17
  418ffd:	or     eax,0x68f9df3b
  419002:	mov    esi,0x78521d
  419007:	adc    eax,0x78c295d2
  41900c:	outs   dx,DWORD PTR ds:[esi]
  41900d:	or     dl,ah
  41900f:	push   cs
  419010:	mov    bl,0x36
  419012:	arpl   WORD PTR [eax+ecx*1+0xf574b7c],bx
  419019:	cmp    al,0x53
  41901b:	sub    BYTE PTR [ebx],cl
  41901d:	mov    WORD PTR [ecx+0x71a8a7f7],fs
  419023:	icebp  
  419024:	sbb    al,0x58
  419026:	(bad)  
  419028:	mov    edx,0xfaf84a9a
  41902d:	popf   
  41902e:	lahf   
  41902f:	ds pop edx
  419031:	jns    0x418fb4
  419033:	jns    0x419011
  419035:	jnp    0x418fbc
  419037:	push   esp
  419038:	and    bl,BYTE PTR [eax-0x6c]
  41903b:	dec    edi
  41903c:	scas   eax,DWORD PTR es:[edi]
  41903d:	sub    eax,0xd8a32a1
  419042:	jmp    0x45c3c61f
  419047:	fist   WORD PTR [ebx+eiz*1-0x37946c6f]
  41904e:	mov    ds:0xc54100df,al
  419053:	push   ss
  419054:	add    DWORD PTR [edx+0x1c],edi
  419057:	xchg   esi,eax
  419058:	jnp    0x41909e
  41905a:	int3   
  41905b:	enter  0xdd0,0x55
  41905f:	add    BYTE PTR [esi-0xe],bl
  419062:	mov    eax,DWORD PTR [ecx+0x7b424170]
  419068:	popa   
  419069:	add    eax,0x2d2568f4
  41906e:	aam    0xfc
  419070:	and    dh,BYTE PTR [edi+esi*8]
  419073:	adc    ebp,edx
  419075:	add    eax,0x1a37905c
  41907a:	mov    al,ds:0x65b56e8e
  41907f:	in     al,0xf8
  419081:	fst    DWORD PTR [edi+0x473e8e3c]
  419087:	(bad)  [ecx+0x20395b92]
  41908d:	sbb    ebx,edi
  41908f:	adc    edx,eax
  419091:	sbb    ebx,DWORD PTR [edx+0x2f]
  419094:	or     al,0x9a
  419096:	nop
  419097:	xchg   edi,eax
  419098:	mov    eax,0x2e5db5dd
  41909d:	jmp    0x419043
  41909f:	arpl   sp,di
  4190a1:	inc    ebx
  4190a2:	dec    esp
  4190a3:	push   eax
  4190a4:	stc    
  4190a5:	inc    edi
  4190a6:	(bad)  
  4190a8:	cmp    BYTE PTR [ecx-0x1c],al
  4190ab:	mov    eax,ds:0x30394e32
  4190b0:	and    BYTE PTR [bp+si-0x32],0x5d
  4190b5:	mov    WORD PTR [edi+0x4b5680c2],fs
  4190bb:	add    al,0x28
  4190bd:	pop    ds
  4190be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190bf:	xor    edx,DWORD PTR [ecx]
  4190c1:	sti    
  4190c2:	pop    edi
  4190c3:	fistp  QWORD PTR [edx]
  4190c5:	repnz fist DWORD PTR ss:[eax+0x7d]
  4190ca:	jbe    0x419141
  4190cc:	out    dx,eax
  4190cd:	jmp    0x22377645
  4190d2:	rcr    al,0xf9
  4190d5:	mov    dh,0x70
  4190d7:	inc    ebx
  4190d8:	loope  0x41908a
  4190da:	repnz adc BYTE PTR [ebx-0x2e],bh
  4190de:	adc    al,0x96
  4190e0:	add    eax,edx
  4190e2:	out    0xd0,eax
  4190e4:	mov    ebx,0xdaf665d8
  4190e9:	and    al,0x5a
  4190eb:	addr16 je 0x4190ad
  4190ee:	push   ebx
  4190ef:	inc    ebp
  4190f0:	mov    eax,0x2f5da0c1
  4190f5:	jecxz  0x4190ff
  4190f7:	ss pusha 
  4190f9:	mov    fs,WORD PTR [ebx]
  4190fb:	push   ss
  4190fc:	push   esp
  4190fd:	dec    edi
  4190fe:	dec    ecx
  4190ff:	mov    eax,0x628595c4
  419104:	(bad)  
  419105:	(bad)  
  419107:	idiv   edx
  419109:	mov    ebp,0x192e4412
  41910e:	push   eax
  41910f:	or     edx,ebp
  419111:	mov    ds:0x68e3965b,eax
  419116:	push   ebp
  419117:	adc    ebp,DWORD PTR [edx-0x7a]
  41911a:	sub    eax,0x846f8aac
  41911f:	aas    
  419120:	push   0x737c04df
  419125:	lods   eax,DWORD PTR ds:[esi]
  419126:	rcl    dh,1
  419128:	cmp    dh,BYTE PTR [edi+0x36]
  41912b:	mov    ds:0xd99e78cc,al
  419130:	in     al,0xa1
  419132:	inc    esp
  419133:	mov    dh,0xe3
  419135:	sahf   
  419136:	fidivr DWORD PTR [ebx]
  419138:	aam    0x20
  41913a:	in     al,dx
  41913b:	add    eax,0xe9c9e7dd
  419140:	mov    edx,0x4159deed
  419145:	test   ah,bh
  419147:	lock adc DWORD PTR [eax-0x4591bd88],ebp
  41914e:	call   0xcdf365ec
  419153:	(bad)  
  419154:	dec    ebx
  419155:	xor    ecx,DWORD PTR ds:0xca4b08b2
  41915b:	xor    eax,0xd18e19a6
  419160:	jp     0x41914b
  419162:	mov    dl,0x42
  419164:	jne    0x419111
  419166:	and    eax,0x930afa3a
  41916b:	js     0x419165
  41916d:	std    
  41916e:	xchg   ebx,eax
  41916f:	xchg   ebp,eax
  419170:	xchg   edi,eax
  419171:	fsub   st(3),st
  419173:	int3   
  419174:	js     0x4191d0
  419176:	leave  
  419177:	mov    eax,ds:0x11284cfd
  41917c:	cmp    al,0xb0
  41917e:	mov    dh,0x4
  419180:	(bad)  
  419183:	movlps xmm1,QWORD PTR [edi-0xb]
  419187:	aad    0x66
  419189:	pop    ebp
  41918a:	cvttps2pi mm3,xmm0
  41918d:	test   al,0x49
  41918f:	fld    DWORD PTR [edx]
  419191:	pusha  
  419192:	fidiv  WORD PTR [ebx-0x7d]
  419195:	fstp   QWORD PTR [ebx+0x382250c7]
  41919b:	jecxz  0x41914b
  41919d:	pop    esi
  41919e:	int    0xa0
  4191a0:	push   ebp
  4191a1:	loop   0x419192
  4191a3:	into   
  4191a4:	jmp    0xb3d63883
  4191a9:	xor    dh,BYTE PTR [ebx+0x6adfce41]
  4191af:	add    eax,DWORD PTR [ebx+0x26f1ccc9]
  4191b5:	js     0x4191a1
  4191b7:	sbb    al,0xa4
  4191b9:	stc    
  4191ba:	xor    bh,al
  4191bc:	mov    bh,0xd1
  4191be:	xchg   esi,eax
  4191bf:	cld    
  4191c0:	xor    ebx,ebp
  4191c2:	scas   eax,DWORD PTR es:[edi]
  4191c3:	push   0xd11c3cd4
  4191c8:	xor    al,0xa8
  4191ca:	in     al,0x2e
  4191cc:	mov    edi,0xc6ec2664
  4191d1:	je     0x41919d
  4191d3:	(bad)  
  4191d4:	fsubr  DWORD PTR [esi-0x4b]
  4191d7:	xor    BYTE PTR [ebx-0x3b5e7b86],cl
  4191dd:	fld    TBYTE PTR [edx-0x26efcc0e]
  4191e3:	and    DWORD PTR [edx+0x32],esi
  4191e6:	(bad)
  4191e9:	add    eax,0xec5ee98f
  4191ee:	pop    sp
  4191f0:	outs   dx,DWORD PTR ds:[esi]
  4191f1:	scas   al,BYTE PTR es:[edi]
  4191f2:	(bad)  
  4191f4:	mov    bl,0xb5
  4191f6:	fld    QWORD PTR [esi+0x35]
  4191f9:	cli    
  4191fa:	lock shl DWORD PTR [edi],1
  4191fd:	sbb    DWORD PTR [ebp+0x32b74aab],0x36707de2
  419207:	inc    edi
  419208:	fdiv   QWORD PTR [esi-0x3eb3f522]
  41920e:	lahf   
  41920f:	iret   
  419210:	mov    ebp,0xd875f0af
  419215:	in     eax,dx
  419216:	adc    eax,0x4676d622
  41921b:	(bad)  
  41921c:	xchg   esi,eax
  41921d:	loopne 0x419241
  41921f:	ins    DWORD PTR es:[edi],dx
  419220:	inc    edi
  419221:	rcl    BYTE PTR ds:0x804dcbe5,0x1f
  419228:	ss or  esp,esp
  41922b:	dec    ecx
  41922c:	fstp   QWORD PTR [edx-0x9296cfc]
  419232:	push   0x6f6cf371
  419237:	cmp    eax,0x9f101859
  41923c:	test   eax,0x2174c0c
  419241:	cwde   
  419242:	(bad)  
  419243:	fsubr  QWORD PTR [ebx-0x4d3fefa1]
  419249:	std    
  41924a:	rcr    bh,cl
  41924c:	das    
  41924d:	dec    ebx
  41924e:	jmp    0x4192ce
  419250:	mov    ebp,0x99ab537e
  419255:	ja     0x4191dd
  419257:	dec    esp
  419258:	mov    ds:0x28ec7bc3,eax
  41925d:	idiv   DWORD PTR [ebp-0x5a24483a]
  419263:	mov    edi,0x4a8c5522
  419268:	push   ss
  419269:	mov    eax,ds:0xdf538e7a
  41926e:	jle    0x4192ba
  419270:	sti    
  419271:	or     esp,esp
  419273:	fist   WORD PTR [edi-0x3fef40fe]
  419279:	retf   0x8315
  41927c:	jns    0x419245
  41927e:	cld    
  41927f:	stos   DWORD PTR es:[edi],eax
  419280:	push   edi
  419281:	(bad)  
  419282:	in     eax,dx
  419283:	aas    
  419284:	and    BYTE PTR [esi],dl
  419286:	scas   eax,DWORD PTR es:[edi]
  419287:	pop    ss
  419288:	sahf   
  419289:	xor    BYTE PTR [edx],ah
  41928b:	xor    esp,DWORD PTR [bp+si]
  41928e:	mov    cs,esp
  419290:	hlt    
  419291:	std    
  419292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419293:	push   esp
  419294:	push   ecx
  419295:	xor    bl,BYTE PTR [eax+0x324f3c11]
  41929b:	mov    al,ds:0x6203925c
  4192a0:	scas   eax,DWORD PTR es:[edi]
  4192a1:	add    BYTE PTR [esi],ch
  4192a3:	hlt    
  4192a4:	sbb    edx,DWORD PTR [ecx+0x34]
  4192a7:	xchg   esi,eax
  4192a8:	mov    ecx,0xa6b627ca
  4192ad:	mov    ds:0x95de518f,al
  4192b2:	call   0xe3a8:0xe89ac377
  4192b9:	(bad)  [edi]
  4192bb:	sbb    eax,0x9944a3b7
  4192c0:	xrelease xchg BYTE PTR [ecx-0x3e],al
  4192c4:	ja     0x4192d0
  4192c6:	pop    esi
  4192c7:	lea    ebx,[eax+0x5a0b24a4]
  4192cd:	cmp    BYTE PTR [esp-0x54],al
  4192d1:	sub    edi,ebx
  4192d3:	mov    BYTE PTR [edx],ch
  4192d5:	(bad)  
  4192d6:	gs push es
  4192d8:	or     ebp,edx
  4192da:	dec    ecx
  4192db:	shl    edx,cl
  4192dd:	hlt    
  4192de:	into   
  4192df:	pop    ecx
  4192e0:	pop    edx
  4192e1:	pop    ds
  4192e2:	adc    al,0x1b
  4192e4:	or     DWORD PTR [edx],ecx
  4192e6:	xchg   ecx,eax
  4192e7:	or     al,0xbc
  4192e9:	dec    eax
  4192ea:	and    ebp,DWORD PTR [eax+0x25cfbba4]
  4192f0:	jne    0x419344
  4192f2:	int    0xb3
  4192f4:	in     al,dx
  4192f5:	call   FWORD PTR [esi+0x17]
  4192f8:	or     bl,al
  4192fa:	adc    ebx,edx
  4192fc:	lds    esp,FWORD PTR [ebx]
  4192fe:	push   ecx
  4192ff:	sub    BYTE PTR [edx+esi*4+0x47],bl
  419303:	ja     0x419316
  419305:	inc    ebp
  419306:	xor    eax,0xa4ef30ef
  41930b:	push   edi
  41930c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41930d:	(bad)  
  41930f:	mov    ds:0x7a7fddb5,eax
  419314:	sub    BYTE PTR [edi+eiz*2+0x68],0xea
  419319:	jmp    0x419369
  41931b:	popa   
  41931c:	pop    esi
  41931d:	(bad)  
  41931e:	js     0x4192c7
  419320:	fcomi  st,st(7)
  419322:	fstp   QWORD PTR [ecx]
  419324:	fisub  DWORD PTR [esi+0x1aa7fb4f]
  41932a:	jmp    0x1eb6f280
  41932f:	inc    edi
  419330:	dec    edi
  419331:	popa   
  419332:	dec    ebx
  419333:	mov    ch,0x59
  419335:	or     BYTE PTR [ecx],0x7
  419338:	push   es
  419339:	or     al,BYTE PTR [esi]
  41933b:	(bad)  
  41933c:	jae    0x4192c5
  41933e:	push   eax
  41933f:	dec    edx
  419340:	mov    DWORD PTR [ebp-0x6],esp
  419343:	push   ecx
  419344:	(bad)  
  419345:	aam    0xce
  419347:	push   esi
  419348:	int3   
  419349:	jp     0x419338
  41934b:	je     0x419367
  41934d:	imul   ebp,DWORD PTR [esi-0x1e74ff09],0x7346efd
  419357:	daa    
  419358:	xchg   edi,eax
  419359:	xor    al,0xce
  41935b:	jnp    0x41932d
  41935d:	ds inc ecx
  419360:	adc    eax,0x34eccd45
  419365:	ja     0x419381
  419367:	out    0x3,eax
  419369:	mov    edx,0xdfd11eb7
  41936e:	(bad)  
  41936f:	cld    
  419370:	lahf   
  419371:	jmp    0x419315
  419373:	aad    0x69
  419375:	mov    eax,ds:0x8c9c6f2b
  41937a:	mov    ds:0x7ae6a7e7,al
  41937f:	fmul   DWORD PTR [ebp+0x527079ef]
  419386:	mov    DWORD PTR [ecx+0x6d930d0e],ebp
  41938c:	dec    edx
  41938d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41938e:	cmp    BYTE PTR [edi+ebx*8],ch
  419391:	in     al,0xb0
  419393:	cmp    dh,cl
  419395:	push   esi
  419396:	inc    esp
  419397:	mov    edi,0xce75a6da
  41939c:	and    BYTE PTR [edx+0x3fbcc665],al
  4193a2:	and    al,0x1a
  4193a4:	add    ah,BYTE PTR [edi]
  4193a6:	pop    esi
  4193a7:	outs   dx,DWORD PTR ds:[esi]
  4193a8:	loopne 0x419377
  4193aa:	xchg   edi,eax
  4193ab:	daa    
  4193ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193ad:	aam    0x42
  4193af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b0:	dec    ecx
  4193b1:	add    cl,0xb2
  4193b4:	scas   al,BYTE PTR es:[edi]
  4193b5:	mov    ebx,0x12bdf33f
  4193ba:	push   eax
  4193bb:	int3   
  4193bc:	cmc    
  4193bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193be:	pop    ebx
  4193bf:	in     eax,0xa6
  4193c1:	dec    ebx
  4193c2:	push   edi
  4193c3:	push   cs
  4193c4:	out    0x6a,al
  4193c6:	xchg   dl,al
  4193c8:	sub    al,ch
  4193ca:	sbb    al,0xd1
  4193cc:	outs   dx,DWORD PTR ds:[esi]
  4193cd:	mov    bl,0xba
  4193cf:	(bad)  [eax-0x2a]
  4193d2:	pop    eax
  4193d3:	dec    ebx
  4193d4:	jp     0x419411
  4193d6:	enter  0x9ce4,0x21
  4193da:	pop    ss
  4193db:	loopne 0x419395
  4193dd:	or     al,al
  4193df:	fs mov ebp,0x45b9d915
  4193e5:	xlat   BYTE PTR ds:[ebx]
  4193e6:	and    eax,0xf58266bd
  4193eb:	(bad)  
  4193ec:	dec    ebx
  4193ed:	add    BYTE PTR [ecx-0x21],al
  4193f0:	test   BYTE PTR [edx+ecx*2-0x24],0x48
  4193f5:	mov    DWORD PTR [edx+0x4d],esp
  4193f8:	lods   al,BYTE PTR ds:[esi]
  4193f9:	dec    edx
  4193fa:	dec    esp
  4193fb:	push   esi
  4193fc:	lods   al,BYTE PTR ds:[esi]
  4193fd:	xchg   ebp,eax
  4193fe:	aas    
  4193ff:	sub    DWORD PTR [eax+0x65],edi
  419402:	adc    al,0x9b
  419404:	fild   DWORD PTR [ebp-0xd4d8847]
  41940a:	gs xchg edx,eax
  41940c:	push   0x739dfff
  419411:	sbb    ebx,esi
  419413:	mov    ebp,edx
  419415:	jle    0x419418
  419417:	mov    cl,0xa7
  419419:	add    DWORD PTR [ecx],ebp
  41941b:	lods   al,BYTE PTR ds:[esi]
  41941c:	add    DWORD PTR [ebx-0x6509e3ac],esi
  419422:	fldenv [edi+0x5e]
  419425:	fiadd  DWORD PTR [bp+di-0x6b62]
  41942a:	add    ebp,DWORD PTR [ebx+edi*4]
  41942d:	aas    
  41942e:	sbb    al,0xd5
  419430:	jge    0x419492
  419432:	cmc    
  419433:	jg     0x4194a4
  419435:	push   0xffffffe7
  419437:	loope  0x4193c1
  419439:	sbb    ecx,DWORD PTR [eax+0x1]
  41943c:	pop    es
  41943d:	in     eax,dx
  41943e:	xor    al,0x12
  419440:	cwde   
  419441:	jnp    0x4194b6
  419443:	(bad)  
  419444:	xchg   esp,eax
  419445:	cmp    dh,al
  419447:	sbb    bl,dl
  419449:	xchg   BYTE PTR [ebx-0x132aea3],ah
  41944f:	pop    edx
  419450:	xchg   esp,eax
  419451:	mov    ch,0x1a
  419453:	cmp    BYTE PTR ds:0xdc4d35df,bh
  419459:	pop    es
  41945a:	ret    0x947
  41945d:	shl    BYTE PTR [ecx],1
  41945f:	dec    edi
  419460:	mov    DWORD PTR cs:[edi],ebp
  419463:	cld    
  419464:	xchg   edx,eax
  419465:	sbb    DWORD PTR [edx+0x765fe578],ebp
  41946b:	push   ebx
  41946c:	jbe    0x419452
  41946e:	add    DWORD PTR [ecx-0x35],0x64
  419472:	dec    ebx
  419473:	dec    eax
  419474:	popf   
  419475:	test   eax,0xc04da9ef
  41947a:	jnp    0x419422
  41947c:	and    eax,0x3956d922
  419481:	popa   
  419482:	leave  
  419483:	pop    ds
  419484:	arpl   WORD PTR [ebp+0x518b487e],di
  41948a:	push   esi
  41948b:	mov    ds:0x9d93de9c,eax
  419490:	test   al,0x69
  419492:	je     0x4194bc
  419494:	mov    ebp,0xc38438aa
  419499:	lods   al,BYTE PTR ds:[esi]
  41949a:	loopne 0x419491
  41949c:	dec    edi
  41949d:	js     0x419462
  41949f:	sbb    esi,DWORD PTR [edx+0x71]
  4194a2:	(bad)  
  4194a3:	xchg   esi,eax
  4194a4:	aas    
  4194a5:	mov    WORD PTR [esp+0x3e948e94],ds
  4194ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194ad:	xchg   esi,eax
  4194ae:	pop    ds
  4194af:	mov    edx,?
  4194b1:	inc    esp
  4194b2:	lea    eax,[ebp-0x68]
  4194b5:	sbb    dl,dh
  4194b7:	jge    0x419494
  4194b9:	and    al,0xa6
  4194bb:	loope  0x4194f0
  4194bd:	mov    cl,0x92
  4194bf:	in     eax,dx
  4194c0:	mov    dl,0x1f
  4194c2:	dec    ebp
  4194c3:	cmc    
  4194c4:	mov    ebx,DWORD PTR [edx+edx*4]
  4194c7:	loopne 0x4194d9
  4194c9:	or     BYTE PTR [edi],ch
  4194cb:	dec    ebx
  4194cc:	sbb    BYTE PTR ds:0xf62fe531,0x9e
  4194d3:	adc    eax,0xd814036a
  4194d8:	lock fstp QWORD PTR [edi+0x77]
  4194dc:	xchg   ecx,eax
  4194dd:	cmp    eax,0xf3ee872d
  4194e2:	cmp    BYTE PTR [ecx-0x5a],ch
  4194e5:	add    DWORD PTR [edi+edx*2+0x1d],ebp
  4194e9:	fcom   DWORD PTR [esp+eax*1-0xf1fee91]
  4194f0:	mov    al,ds:0xb183b3c7
  4194f5:	inc    eax
  4194f6:	enter  0xe2a6,0xa7
  4194fa:	repz adc ah,BYTE PTR [edx]
  4194fd:	mov    ebp,0x842e850f
  419502:	xlat   BYTE PTR ds:[ebx]
  419503:	(bad)  
  419504:	pop    ebp
  419505:	sbb    esi,ecx
  419507:	addr16 inc esi
  419509:	repz dec ebx
  41950b:	icebp  
  41950c:	sub    BYTE PTR [ebp+0x4a],al
  41950f:	cmp    DWORD PTR [ebp-0x32aac1d9],0xd542548f
  419519:	into   
  41951a:	imul   ebx,esp,0xed9933b8
  419520:	cmp    al,0x51
  419522:	lea    edx,[ebx-0x454ac3d8]
  419528:	add    ch,BYTE PTR [edx+0x21]
  41952b:	icebp  
  41952c:	daa    
  41952d:	sub    esp,DWORD PTR cs:[edx+0x6640b49e]
  419534:	xor    ah,ah
  419536:	add    al,0x32
  419538:	fs xor al,0x72
  41953b:	cmp    BYTE PTR [ecx],dl
  41953d:	sub    DWORD PTR [edx+0x76],ecx
  419540:	push   ebx
  419541:	adc    eax,0xc632fc3c
  419546:	inc    eax
  419547:	aas    
  419548:	data16 sbb BYTE PTR [eax-0x12],0xa5
  41954d:	loope  0x41951d
  41954f:	mov    bh,0x89
  419551:	icebp  
  419552:	std    
  419553:	push   ds
  419554:	inc    esp
  419555:	mov    ds:0x213dd036,eax
  41955a:	mov    ah,0x90
  41955c:	mov    BYTE PTR [edi+0x1710dfbd],cl
  419562:	sub    BYTE PTR [ebx-0xe238414],bl
  419568:	mov    dh,0x53
  41956a:	xchg   ebp,eax
  41956b:	add    al,0x3e
  41956d:	and    ch,BYTE PTR ds:0xcfdd30d2
  419573:	jbe    0x419505
  419575:	popf   
  419576:	out    0xff,al
  419578:	jmp    0x419513
  41957a:	mov    esi,0xbac382f5
  41957f:	xchg   ebx,eax
  419580:	push   ds
  419581:	xchg   BYTE PTR [ebx],al
  419583:	pop    esp
  419584:	sbb    DWORD PTR [esi],esp
  419586:	je     0x4195eb
  419588:	shl    BYTE PTR [edi+0x269bfc26],1
  41958e:	call   0x1214:0xc0bc320e
  419595:	xor    ebp,DWORD PTR [esp+ebx*4+0x4d]
  419599:	jmp    0x7df3:0x9cc5410e
  4195a0:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4195a2:	push   ebx
  4195a3:	aas    
  4195a4:	aad    0xf2
  4195a6:	mov    edx,DWORD PTR [edx+0x7feef71f]
  4195ac:	ds and bl,ch
  4195af:	jge    0x419615
  4195b1:	lock add eax,ebx
  4195b4:	out    0x47,eax
  4195b6:	ins    BYTE PTR es:[edi],dx
  4195b7:	fneni(8087 only) 
  4195b9:	in     eax,0xa7
  4195bb:	idiv   DWORD PTR [eax-0x45b4b741]
  4195c1:	out    dx,eax
  4195c2:	into   
  4195c3:	xchg   BYTE PTR [edx],ah
  4195c5:	rcl    DWORD PTR [ebp+ebp*1-0x26],0x62
  4195ca:	sub    BYTE PTR [ebp+edi*2-0x24],0xa5
  4195cf:	cmc    
  4195d0:	out    dx,al
  4195d1:	scas   al,BYTE PTR es:[edi]
  4195d2:	cld    
  4195d3:	dec    ecx
  4195d4:	adc    ch,BYTE PTR [eax+ebx*2]
  4195d7:	test   al,0x45
  4195d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195da:	(bad)  
  4195db:	(bad)  
  4195dc:	js     0x419623
  4195de:	mov    ebp,0x6f394919
  4195e3:	scas   al,BYTE PTR es:[edi]
  4195e4:	inc    ebx
  4195e5:	int3   
  4195e6:	pop    ss
  4195e7:	mov    ds:0x81986ed3,al
  4195ec:	mov    esi,0x40cdc758
  4195f1:	jbe    0x41965f
  4195f3:	push   0x53
  4195f5:	addr16 dec edx
  4195f7:	xchg   DWORD PTR [edi+0x1fa35579],eax
  4195fd:	call   0x245b:0xbf595230
  419604:	scas   eax,DWORD PTR es:[edi]
  419605:	xchg   ebx,eax
  419606:	xchg   BYTE PTR [esi],bh
  419608:	in     al,0xbe
  41960a:	or     BYTE PTR [ebx],0xd4
  41960d:	mov    ecx,0x6ccdc61e
  419612:	mov    eax,ds:0x9028e199
  419617:	push   ecx
  419618:	fistp  DWORD PTR [ebx]
  41961a:	xchg   esi,eax
  41961b:	retf   
  41961c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41961d:	aaa    
  41961e:	sbb    DWORD PTR [esi],edi
  419620:	sub    DWORD PTR [ebp+0x0],esp
  419623:	xor    edx,DWORD PTR [ebx]
  419625:	arpl   sp,bp
  419627:	mov    ebp,0x7593f104
  41962c:	inc    eax
  41962d:	add    bh,BYTE PTR [ebx+eax*1+0x5a81fff7]
  419634:	dec    edx
  419635:	popf   
  419636:	pop    esp
  419637:	iret   
  419638:	mov    edi,0xd073e549
  41963d:	and    BYTE PTR [edx-0x4ab7d479],0x88
  419644:	fs inc eax
  419646:	clc    
  419647:	jmp    0x8e01:0xac58c979
  41964e:	in     eax,dx
  41964f:	cmp    BYTE PTR [edx],cl
  419651:	push   ds
  419652:	gs jnp 0x419625
  419655:	jmp    ebp
  419657:	or     cl,BYTE PTR [esi-0x3e]
  41965a:	sahf   
  41965b:	out    dx,eax
  41965c:	lods   al,BYTE PTR ds:[esi]
  41965d:	push   es
  41965e:	int    0x4f
  419660:	xor    esp,DWORD PTR [ebx]
  419662:	xor    BYTE PTR [esi+0x21],cl
  419665:	bound  ecx,QWORD PTR fs:[eax+ebp*8-0xd9201b2]
  41966d:	sbb    bl,BYTE PTR [ecx-0x3a]
  419670:	or     eax,0x76a6569a
  419675:	xchg   ebp,eax
  419676:	fadd   DWORD PTR [ebp+0x34]
  419679:	xchg   esi,eax
  41967a:	outs   dx,BYTE PTR ds:[esi]
  41967b:	jne    0x419670
  41967d:	pop    edx
  41967e:	fist   WORD PTR [ebx-0x44]
  419681:	(bad)  
  419682:	mov    edx,0x56d256a4
  419687:	daa    
  419688:	enter  0x667,0xc5
  41968c:	jg     0x419656
  41968e:	or     eax,0xd7339079
  419693:	popa   
  419694:	inc    ebx
  419695:	xchg   ebx,eax
  419696:	(bad)  
  419698:	stc    
  419699:	call   0x2fbf62a2
  41969e:	cmp    BYTE PTR [esi+edi*2+0x133c316a],ah
  4196a5:	loopne 0x419633
  4196a7:	cmp    bl,BYTE PTR [ecx]
  4196a9:	pop    ecx
  4196aa:	mov    ch,0xc3
  4196ac:	(bad)  [ecx]
  4196ae:	add    al,ah
  4196b0:	ss xchg esi,eax
  4196b2:	jnp    0x419673
  4196b4:	addr16 icebp 
  4196b6:	sub    al,0x24
  4196b8:	mov    bl,0xc5
  4196ba:	js     0x419678
  4196bc:	getsec 
  4196be:	(bad)  
  4196bf:	sahf   
  4196c0:	mov    dh,0x43
  4196c2:	loop   0x41969d
  4196c4:	mov    ecx,0xb76a4acb
  4196c9:	inc    ebx
  4196ca:	mov    eax,cs:0x1531a414
  4196d0:	int3   
  4196d1:	dec    ecx
  4196d2:	push   esi
  4196d3:	cmp    eax,0x2907c33
  4196d8:	lea    eax,[edi]
  4196da:	out    dx,al
  4196db:	test   eax,0xb00e2c1c
  4196e0:	inc    ebx
  4196e1:	mov    eax,ds:0x6374d3e0
  4196e6:	(bad)  
  4196e7:	push   ds
  4196e8:	jmp    0x156:0x23fbe8cc
  4196ef:	imul   ecx,DWORD PTR [ebp+0x30f66ba7],0x51f487e
  4196f9:	cmp    eax,0xfb397c6b
  4196fe:	push   ebp
  4196ff:	out    0x94,al
  419701:	cmp    eax,0xda86696
  419706:	mov    eax,ds:0xf812a0fe
  41970b:	mov    ?,WORD PTR [esi-0x9d6d108]
  419711:	ret    
  419712:	cs retf 
  419714:	int    0xb2
  419716:	aas    
  419717:	dec    edx
  419718:	push   0x1276da5b
  41971d:	scas   eax,DWORD PTR es:[edi]
  41971e:	imul   esi,DWORD PTR [ebx+eiz*8-0x52],0xd81d157a
  419726:	js     0x4196e2
  419728:	push   cs
  419729:	call   0x256b3886
  41972e:	jne    0x41978f
  419730:	pop    eax
  419731:	fwait
  419732:	pop    edx
  419733:	in     eax,0x7e
  419735:	pop    ebx
  419736:	add    dh,BYTE PTR [ebp+0x6d]
  419739:	mov    dh,0x63
  41973b:	icebp  
  41973c:	dec    edi
  41973d:	imul   edi,DWORD PTR [edx+0x6dbe202a],0x47b857b9
  419747:	jl     0x419767
  419749:	ins    BYTE PTR es:[edi],dx
  41974a:	das    
  41974b:	cmp    eax,0x33966489
  419750:	jno    0x4197a9
  419752:	inc    ecx
  419753:	(bad)  
  419754:	cmp    eax,DWORD PTR [eax+0x54]
  419757:	sbb    al,0xd9
  419759:	sub    al,0x63
  41975b:	inc    edi
  41975c:	lds    eax,FWORD PTR [eax+0x2e]
  41975f:	cmp    al,BYTE PTR [edi+edi*1]
  419762:	arpl   WORD PTR [ecx-0x1c],sp
  419765:	mov    bh,0xe5
  419767:	ins    DWORD PTR es:[edi],dx
  419768:	enter  0xdbc,0x21
  41976c:	lds    edi,FWORD PTR [ebx+0x270c3116]
  419772:	ficom  DWORD PTR [ebp+0x8]
  419775:	stc    
  419776:	add    dl,ah
  419778:	(bad)  
  419779:	and    eax,ebp
  41977b:	or     DWORD PTR [ebx-0x12],0x959814a2
  419782:	sbb    DWORD PTR [esi-0x62],esi
  419785:	fimul  DWORD PTR [edi-0x2dbd06d7]
  41978b:	cmc    
  41978c:	and    DWORD PTR [edi+0x43],eax
  41978f:	push   ss
  419790:	aaa    
  419791:	pop    ebp
  419792:	push   ecx
  419793:	stos   DWORD PTR es:[edi],eax
  419794:	fstp   TBYTE PTR [edi+0x2c]
  419797:	stos   BYTE PTR es:[edi],al
  419798:	stos   BYTE PTR es:[edi],al
  419799:	(bad)  
  41979b:	stos   BYTE PTR es:[edi],al
  41979c:	and    BYTE PTR [ebp-0x26],al
  41979f:	push   edi
  4197a0:	cmp    bh,BYTE PTR [esi-0x213cb4d0]
  4197a6:	adc    al,0xa2
  4197a8:	add    al,0x3a
  4197aa:	ss mov ch,0x9e
  4197ad:	cmp    BYTE PTR [ecx+0x53],bl
  4197b0:	test   eax,0xfec99179
  4197b5:	add    BYTE PTR [ebx],ah
  4197b7:	cwde   
  4197b8:	(bad)  
  4197b9:	jecxz  0x419744
  4197bb:	mov    ecx,0xd09aa0ad
  4197c0:	push   edi
  4197c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197c2:	stos   DWORD PTR es:[edi],eax
  4197c3:	rcr    ah,0x25
  4197c6:	popa   
  4197c7:	sbb    eax,DWORD PTR [edx+0x30ad9498]
  4197cd:	je     0x4197a6
  4197cf:	mov    ah,0xe
  4197d1:	inc    ebx
  4197d2:	xor    DWORD PTR [ebx],esp
  4197d4:	in     al,dx
  4197d5:	rol    DWORD PTR [esi-0x54],0xf7
  4197d9:	fcmovnbe st,st(1)
  4197db:	stos   BYTE PTR es:[edi],al
  4197dc:	inc    esp
  4197dd:	and    esp,DWORD PTR [edi+0x45]
  4197e0:	int3   
  4197e1:	sbb    al,0x62
  4197e3:	out    dx,eax
  4197e4:	stc    
  4197e5:	adc    esi,ecx
  4197e7:	stos   BYTE PTR es:[edi],al
  4197e8:	popf   
  4197e9:	add    DWORD PTR [ecx-0x665e5fb5],0xd29afa21
  4197f3:	jne    0x4197dc
  4197f5:	repz add eax,0x4fe35e8d
  4197fb:	push   es
  4197fc:	cmc    
  4197fd:	cli    
  4197fe:	jb     0x419786
  419800:	add    eax,0xe596d65
  419805:	xchg   BYTE PTR [ecx-0x79892e46],ch
  41980b:	ret    0x97bc
  41980e:	sbb    DWORD PTR [edi+0x5e],ebx
  419811:	stos   DWORD PTR es:[edi],eax
  419812:	inc    ebx
  419813:	mov    edx,0x42e0b649
  419818:	jge    0x419835
  41981a:	addr16 dec esi
  41981c:	jmp    0x8185:0xe40fe0e8
  419823:	push   ecx
  419824:	mov    ?,WORD PTR [ebx+0x10442aa5]
  41982a:	sahf   
  41982b:	mov    eax,0x5e4bfdb0
  419830:	cmp    ecx,esp
  419832:	out    0x98,eax
  419834:	pop    ebp
  419835:	imul   esi,DWORD PTR [edx],0x4e
  419838:	jns    0x4198aa
  41983a:	pop    edi
  41983b:	lahf   
  41983c:	push   edx
  41983d:	jg     0x41980e
  41983f:	mov    ecx,0x5d621f4c
  419844:	mov    eax,ds:0x2139a06b
  419849:	xchg   ebx,eax
  41984a:	push   eax
  41984b:	(bad)  
  41984c:	stos   DWORD PTR es:[edi],eax
  41984d:	dec    eax
  41984e:	jns    0x419823
  419850:	arpl   WORD PTR [edx+ebp*4-0x42e0a5b2],ax
  419857:	(bad)  
  419858:	jmp    0x4198ab
  41985a:	xchg   esi,eax
  41985b:	popf   
  41985c:	mov    DWORD PTR [esi],edi
  41985e:	jbe    0x419829
  419860:	(bad)  
  419861:	popa   
  419862:	dec    ebx
  419863:	push   es
  419864:	call   0x68cc428d
  419869:	sub    ebx,DWORD PTR [edi-0x2b]
  41986c:	inc    eax
  41986d:	sbb    bl,bl
  41986f:	ss push edx
  419871:	mov    al,ds:0x2375ce2
  419876:	frstor ds:[eax+0x63]
  41987a:	dec    eax
  41987b:	jmp    0x419857
  41987d:	test   eax,0xbdde7ee2
  419882:	dec    eax
  419883:	loopne 0x4198f4
  419885:	jle    0x419860
  419887:	push   cs
  419888:	and    BYTE PTR [eax+edi*1+0x375ea3e1],dh
  41988f:	and    ebx,0xcc4a319f
  419895:	aad    0x58
  419897:	xchg   ecx,eax
  419898:	jno    0x4198b9
  41989a:	sub    DWORD PTR [ecx-0x51],0x174f6a50
  4198a1:	fmul   DWORD PTR [edx+eax*1-0x57fed6f6]
  4198a8:	popf   
  4198a9:	fmul   st(0),st
  4198ab:	mov    ecx,0x2e0058fa
  4198b0:	pop    es
  4198b1:	mov    ebp,0x68eb5727
  4198b6:	mov    bh,0x62
  4198b8:	cmp    ecx,eax
  4198ba:	pop    ds
  4198bb:	mov    cl,dl
  4198bd:	push   esi
  4198be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198bf:	inc    esp
  4198c0:	push   esp
  4198c1:	ja     0x41989e
  4198c3:	daa    
  4198c4:	xchg   edi,eax
  4198c5:	repz xchg esp,eax
  4198c7:	rcr    BYTE PTR [esi-0x483eb2de],cl
  4198cd:	lahf   
  4198ce:	add    al,0xcc
  4198d0:	inc    ebp
  4198d1:	sub    BYTE PTR [edx],0x40
  4198d4:	dec    edi
  4198d5:	lods   al,BYTE PTR ds:[esi]
  4198d6:	add    al,ch
  4198d8:	cmp    al,0xa7
  4198da:	jp     0x41993a
  4198dc:	scas   eax,DWORD PTR es:[edi]
  4198dd:	in     al,0xbb
  4198df:	dec    edi
  4198e0:	xchg   edi,eax
  4198e1:	popf   
  4198e2:	pop    DWORD PTR [ecx+0x45d5b513]
  4198e8:	add    al,0x62
  4198ea:	stc    
  4198eb:	cmp    eax,0xd1166985
  4198f0:	dec    ecx
  4198f1:	dec    ebp
  4198f2:	jnp    0x419938
  4198f4:	fadd   QWORD PTR [ebx]
  4198f6:	loope  0x4198a3
  4198f8:	mov    al,ds:0xee497e64
  4198fd:	outs   dx,BYTE PTR ds:[esi]
  4198fe:	out    dx,eax
  4198ff:	adc    eax,eax
  419901:	retf   0x8d05
  419904:	inc    edx
  419905:	js     0x419963
  419907:	jnp    0x4198b8
  419909:	in     al,0x8
  41990b:	mov    dh,0xdb
  41990d:	mov    esp,0x3b83b30f
  419912:	push   edx
  419913:	jae    0x41994f
  419915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419916:	pop    ecx
  419917:	pusha  
  419918:	push   0xffffff93
  41991a:	cmp    eax,0xd1274525
  41991f:	or     eax,0x71df216c
  419924:	sub    esi,esi
  419926:	fidivr WORD PTR ds:0x7f391870
  41992c:	xor    edx,DWORD PTR [edx+0x2868ad7b]
  419932:	out    dx,al
  419933:	xor    eax,0x5dcdc4dd
  419938:	cli    
  419939:	gs pop edi
  41993b:	push   ebx
  41993c:	and    dl,BYTE PTR [esp+ecx*8]
  41993f:	clc    
  419940:	(bad)  
  419941:	add    al,0x18
  419943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419944:	(bad)  
  419945:	add    DWORD PTR ss:[eax-0x291305a0],ecx
  41994c:	fdiv   st,st(0)
  41994e:	jg     0x419971
  419950:	jle    0x4198d7
  419952:	lea    ebp,[ebx-0x1e]
  419955:	xchg   ebp,eax
  419956:	push   0x7c70e2b8
  41995b:	popa   
  41995c:	jp     0x419913
  41995e:	test   BYTE PTR [ecx-0x1d809f40],0xac
  419965:	add    ecx,esp
  419967:	aas    
  419968:	sub    ah,BYTE PTR [ecx+0x1e]
  41996b:	xor    bh,BYTE PTR [edi+0x182565bb]
  419971:	hlt    
  419972:	pop    edi
  419973:	addr16 jg 0x419900
  419976:	pop    ds
  419977:	sbb    ah,bl
  419979:	popf   
  41997a:	or     ch,BYTE PTR [edx]
  41997c:	fwait
  41997d:	adc    esi,DWORD PTR [edx+0x30]
  419980:	jnp    0x4199b7
  419982:	in     al,dx
  419983:	mov    DWORD PTR [eax+0x1adf9444],ebx
  419989:	lea    edi,[ebx-0x2a]
  41998c:	(bad)  
  41998d:	dec    ebx
  41998e:	jnp    0x419938
  419990:	inc    ecx
  419991:	mov    ecx,0x35d2c090
  419996:	push   ebp
  419997:	scas   eax,DWORD PTR es:[edi]
  419998:	stos   DWORD PTR es:[edi],eax
  419999:	xchg   edx,eax
  41999a:	test   eax,0xd1f98a67
  41999f:	data16 xchg BYTE PTR [ebx+0x52],bh
  4199a3:	(bad)  
  4199a4:	mov    bl,0x98
  4199a6:	and    BYTE PTR [eax-0x36bcb246],cl
  4199ac:	cmp    eax,0x4172d98f
  4199b1:	pop    esp
  4199b2:	sub    eax,0xc1f5fa82
  4199b7:	shl    DWORD PTR [eax+0x43c69b7e],0x76
  4199be:	jl     0x419956
  4199c0:	lea    ebx,[edi-0x26]
  4199c3:	adc    ebx,DWORD PTR [eax+ecx*8]
  4199c6:	aad    0x4e
  4199c8:	push   ebx
  4199c9:	mov    edx,0xb4bb6d3d
  4199ce:	push   esp
  4199cf:	stc    
  4199d0:	mov    eax,ds:0x93400d10
  4199d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199d6:	jmp    0x7e23912f
  4199db:	lahf   
  4199dc:	cmc    
  4199dd:	rol    DWORD PTR [esi+0x9d05185],cl
  4199e3:	sbb    eax,0x64f25642
  4199e8:	inc    ebp
  4199e9:	cmc    
  4199ea:	stc    
  4199eb:	mov    fs,WORD PTR [eax-0xa859708]
  4199f1:	or     esi,DWORD PTR ds:0xf9c3d263
  4199f7:	push   edx
  4199f8:	test   DWORD PTR [ecx+0x73],ebx
  4199fb:	leave  
  4199fc:	faddp  st(7),st
  4199fe:	aaa    
  4199ff:	shr    DWORD PTR [ebp+0x7ce4e2a5],0xbc
  419a06:	or     DWORD PTR ds:0x1bc7015f,edi
  419a0c:	cmp    eax,0xcfe7fe46
  419a11:	retf   0xd8e0
  419a14:	inc    ebp
  419a15:	pop    ebx
  419a16:	loop   0x419a62
  419a18:	adc    ebp,DWORD PTR [ebx+eax*8]
  419a1b:	jmp    0xc52fb0e9
  419a20:	addr16 xor ebx,ebx
  419a23:	pop    edx
  419a24:	cmp    eax,0xbbe6629a
  419a29:	test   eax,0xeb4741ee
  419a2e:	xor    esp,ebx
  419a30:	in     al,0x71
  419a32:	test   al,0x5f
  419a34:	jle    0x4199dd
  419a36:	dec    eax
  419a37:	mov    edi,0xb86469fc
  419a3c:	or     BYTE PTR [edi],bh
  419a3e:	shl    BYTE PTR [esi],cl
  419a40:	xchg   edi,eax
  419a41:	(bad)  
  419a42:	popa   
  419a43:	jmp    0xaa91:0x40b792eb
  419a4a:	xor    al,dl
  419a4c:	push   ds
  419a4d:	sub    BYTE PTR [eax-0x63],cl
  419a50:	xor    al,0x5c
  419a52:	je     0x419a2c
  419a54:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a56:	xchg   esi,eax
  419a57:	aam    0x31
  419a59:	and    esi,edi
  419a5b:	pop    ss
  419a5c:	shl    DWORD PTR [ebx+0x141a9521],1
  419a62:	inc    ebx
  419a63:	dec    edx
  419a64:	fnstcw WORD PTR [ebx-0x1013479c]
  419a6a:	mov    cs,WORD PTR ds:0x99d073e2
  419a70:	lods   eax,DWORD PTR ds:[esi]
  419a71:	mov    esi,0x3db32774
  419a76:	push   es
  419a77:	mul    ebp
  419a79:	push   cs
  419a7a:	mov    ds:0x37d37cc2,eax
  419a7f:	icebp  
  419a80:	fiadd  WORD PTR [ebx]
  419a82:	pop    ds
  419a83:	out    0x96,al
  419a85:	js     0x419a96
  419a87:	add    ah,BYTE PTR [ebx+0x16]
  419a8a:	cmp    bl,BYTE PTR [esi+0x6f]
  419a8d:	aad    0x41
  419a8f:	les    esp,FWORD PTR [edx+0x6e]
  419a92:	pop    ds
  419a93:	pusha  
  419a94:	inc    esp
  419a95:	and    eax,0xe28fe497
  419a9a:	mov    ah,0xa8
  419a9c:	cmp    cl,cl
  419a9e:	in     eax,dx
  419a9f:	cli    
  419aa0:	jae    0x419a93
  419aa2:	aam    0x27
  419aa4:	fnsave [edi]
  419aa6:	mov    ebx,ebp
  419aa8:	or     dh,BYTE PTR [edi-0x2bcfde64]
  419aae:	dec    ebx
  419aaf:	ds test al,0xb8
  419ab2:	add    eax,0x1c1db6d5
  419ab7:	retf   0xffa5
  419aba:	aam    0xf0
  419abc:	sub    BYTE PTR [ebp+0x27],bh
  419abf:	pop    esi
  419ac0:	mov    esi,0xfce42276
  419ac5:	push   es
  419ac6:	es cs jns 0x419b00
  419aca:	stos   BYTE PTR es:[edi],al
  419acb:	(bad)  
  419acc:	xchg   edi,eax
  419acd:	jb     0x419a52
  419acf:	sbb    al,0x1e
  419ad1:	mov    ebp,0xedae1de1
  419ad6:	ins    BYTE PTR es:[edi],dx
  419ad7:	jne    0x419a89
  419ad9:	pop    ebx
  419ada:	mov    esp,0x1f6d32f0
  419adf:	lea    ecx,[edx-0x40]
  419ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ae3:	stc    
  419ae4:	dec    edx
  419ae5:	jo     0x419b2e
  419ae7:	xchg   ecx,eax
  419ae8:	mov    ebp,0xc04c1fa0
  419aed:	scas   eax,DWORD PTR es:[edi]
  419aee:	out    dx,al
  419aef:	hlt    
  419af0:	push   0x723d694c
  419af5:	dec    ebx
  419af6:	repnz or ecx,ebx
  419af9:	jp     0x419a9d
  419afb:	push   eax
  419afc:	mov    bl,0xdc
  419afe:	stos   BYTE PTR es:[edi],al
  419aff:	push   cs
  419b00:	popa   
  419b01:	adc    al,0x23
  419b03:	push   0x6a80879d
  419b08:	rcl    BYTE PTR [eax],cl
  419b0a:	mov    ch,0xe3
  419b0c:	(bad)  
  419b0d:	js     0x419aa4
  419b0f:	mov    esp,0xfc92c176
  419b14:	and    eax,DWORD PTR [esi]
  419b16:	sbb    esp,DWORD PTR [eax+edx*8]
  419b19:	xor    sp,WORD PTR [ecx*2-0x676a18f5]
  419b21:	cdq    
  419b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b23:	or     esp,DWORD PTR [ebx+0x61cf9631]
  419b29:	test   DWORD PTR cs:[ecx+edx*4],0xdbff821a
  419b31:	ss push cs
  419b33:	sbb    BYTE PTR [ebp+0x4],ah
  419b36:	push   edx
  419b37:	data16 fdiv DWORD PTR ds:[esi+0x4af0c0b5]
  419b3f:	fldpi  
  419b41:	mov    al,0x0
  419b43:	inc    ebx
  419b44:	push   edi
  419b45:	ss enter 0x7d13,0x4b
  419b4a:	inc    ecx
  419b4b:	ret    
  419b4c:	push   esi
  419b4d:	loop   0x419baa
  419b4f:	push   ss
  419b50:	inc    esp
  419b51:	rcl    BYTE PTR [edi-0x5ab17cb5],cl
  419b57:	out    dx,al
  419b58:	jns    0x419bb2
  419b5a:	pop    ebp
  419b5b:	sbb    eax,0x644007dd
  419b60:	fwait
  419b61:	mov    ecx,0x50a9f1d
  419b66:	loopne 0x419b2d
  419b68:	xacquire xchg DWORD PTR es:[eax+0xbddb312],ecx
  419b70:	retf   
  419b71:	inc    edx
  419b72:	bound  ebp,QWORD PTR [eax]
  419b74:	dec    ebx
  419b75:	ins    DWORD PTR es:[edi],dx
  419b76:	sub    ebp,DWORD PTR [eax+0xf]
  419b79:	sbb    esp,edx
  419b7b:	(bad)  
  419b7c:	push   eax
  419b7d:	repz jo 0x419b4b
  419b80:	pop    esp
  419b81:	xchg   dh,cl
  419b83:	sub    ebp,ecx
  419b85:	stos   DWORD PTR es:[edi],eax
  419b86:	or     DWORD PTR [edx],ebp
  419b88:	pop    eax
  419b89:	cmp    bl,BYTE PTR [esi]
  419b8b:	rcl    DWORD PTR [ecx+0x3a],cl
  419b8e:	std    
  419b8f:	xchg   ebx,eax
  419b90:	mov    ds:0x47ec929b,eax
  419b95:	cmp    al,0x28
  419b97:	(bad)  
  419b98:	cld    
  419b99:	jmp    0xff2e:0x17dbeacf
  419ba0:	lods   al,BYTE PTR ds:[esi]
  419ba1:	int3   
  419ba2:	cmp    esp,DWORD PTR [esi-0x1e]
  419ba5:	imul   eax,DWORD PTR [ebp-0x64],0x20
  419ba9:	lock popf 
  419bab:	cmp    BYTE PTR [esi-0x468fbab8],ah
  419bb1:	jne    0x419be7
  419bb3:	jg     0x419c14
  419bb5:	clc    
  419bb6:	add    eax,0xbf216f65
  419bbb:	ja     0x419b4c
  419bbd:	pushf  
  419bbe:	adc    DWORD PTR [ebp+0x502b0328],esi
  419bc4:	test   al,0xa9
  419bc6:	xchg   ebp,eax
  419bc7:	(bad)
  419bca:	sub    eax,0x3c95c9cc
  419bcf:	outs   dx,DWORD PTR ds:[esi]
  419bd0:	push   esp
  419bd1:	pop    esp
  419bd2:	sub    al,0x6a
  419bd4:	retf   
  419bd5:	jmp    0x1a45:0x28ac98ab
  419bdc:	pop    ds
  419bdd:	adc    ah,BYTE PTR [ecx-0x1cc708c4]
  419be3:	mov    ?,WORD PTR ds:[esi-0x1a219cb2]
  419bea:	jl     0x419c08
  419bec:	jp     0x419bdc
  419bee:	inc    eax
  419bef:	and    ax,0x6458
  419bf3:	sub    BYTE PTR [ecx-0x28326a2a],cl
  419bf9:	push   ebx
  419bfa:	lods   eax,DWORD PTR ds:[esi]
  419bfb:	in     eax,0x3c
  419bfd:	inc    ecx
  419bfe:	mov    ecx,0x73ec3dfa
  419c03:	iret   
  419c04:	bound  ebx,QWORD PTR [esi]
  419c06:	add    eax,0x492b943d
  419c0b:	pop    ds
  419c0c:	pop    esi
  419c0d:	nop
  419c0e:	xlat   BYTE PTR ds:[ebx]
  419c0f:	(bad)  
  419c10:	icebp  
  419c11:	inc    ecx
  419c12:	cmp    cl,BYTE PTR [ebp-0x36]
  419c15:	sti    
  419c16:	mov    edi,DWORD PTR [edx+0x2f]
  419c19:	mov    ebp,0xb535952d
  419c1e:	jne    0x419c95
  419c20:	dec    edi
  419c21:	into   
  419c22:	sub    DWORD PTR [ecx],ebp
  419c24:	div    esi
  419c26:	aam    0x6f
  419c28:	pop    ecx
  419c29:	fsub   QWORD PTR [edx-0x367823fc]
  419c2f:	inc    ebx
  419c30:	add    esi,esp
  419c32:	mul    DWORD PTR [esi+0x7a]
  419c35:	js     0x419c2f
  419c37:	rol    DWORD PTR [eax],0x75
  419c3a:	jnp    0x419bc2
  419c3c:	jne    0x419c94
  419c3e:	inc    ecx
  419c3f:	pause  
  419c41:	scas   al,BYTE PTR es:[edi]
  419c42:	lea    esi,[eax-0x510ccd14]
  419c48:	mov    edx,esp
  419c4a:	cmp    ecx,eax
  419c4c:	fsubr  QWORD PTR [eax+0xa549766]
  419c52:	cmp    edi,DWORD PTR [esi-0x38cad185]
  419c58:	popf   
  419c59:	(bad)  
  419c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c5b:	cli    
  419c5c:	adc    dh,BYTE PTR [esi+ebx*4-0x6ff1a104]
  419c63:	sbb    esi,DWORD PTR [ebx]
  419c65:	test   BYTE PTR [ebp-0x135724bf],dl
  419c6b:	sbb    dh,BYTE PTR [eax-0x1c0bc0c3]
  419c71:	mov    al,ds:0x498b017f
  419c76:	add    eax,0xe4b57142
  419c7b:	in     al,0x79
  419c7d:	dec    ebx
  419c7e:	xchg   ecx,eax
  419c7f:	int3   
  419c80:	inc    ecx
  419c81:	into   
  419c82:	xchg   ebp,eax
  419c83:	or     BYTE PTR fs:[eax],0x3c
  419c87:	(bad)  
  419c88:	(bad)  
  419c89:	add    eax,0x7263846
  419c8e:	aas    
  419c8f:	xlat   BYTE PTR ds:[ebx]
  419c90:	stos   DWORD PTR es:[edi],eax
  419c91:	mov    ah,BYTE PTR [ecx+0x4293c197]
  419c97:	jp     0x419cff
  419c99:	pushf  
  419c9a:	aad    0x78
  419c9c:	mov    bl,0xbb
  419c9e:	and    ebx,DWORD PTR [edx]
  419ca0:	push   edi
  419ca1:	pmaddwd mm2,mm7
  419ca4:	push   cs
  419ca5:	jb     0x419cc9
  419ca7:	test   edx,esi
  419ca9:	imul   ebx,DWORD PTR [esi+0x7ae87f6c],0xffffffb8
  419cb0:	jns    0x419cb8
  419cb2:	add    eax,0x50d8afe6
  419cb7:	dec    edx
  419cb8:	ss jecxz 0x419cff
  419cbb:	stc    
  419cbc:	and    al,0x67
  419cbe:	shr    BYTE PTR [edx-0x4d],cl
  419cc1:	cmp    eax,DWORD PTR [ecx+ebp*4+0x27]
  419cc5:	add    dh,0xae
  419cc8:	fstp   QWORD PTR [esi-0xa]
  419ccb:	stos   BYTE PTR es:[edi],al
  419ccc:	adc    BYTE PTR [esi],bl
  419cce:	(bad)  
  419ccf:	shl    DWORD PTR [ebx+0x73],cl
  419cd2:	mov    edx,0x6e06c52f
  419cd7:	sbb    eax,0x5c769ef8
  419cdc:	imul   ebp,DWORD PTR [ecx],0xf8814cd5
  419ce2:	xlat   BYTE PTR ds:[ebx]
  419ce3:	jg     0x419d08
  419ce5:	xor    eax,0x9c05972d
  419cea:	sub    BYTE PTR [eax+0x593b783f],bh
  419cf0:	xor    eax,0xd6a37da1
  419cf5:	pop    eax
  419cf6:	call   DWORD PTR [ebx-0x60]
  419cf9:	push   DWORD PTR [ecx+ebp*1]
  419cfc:	mov    esp,0xb577ca24
  419d01:	xor    al,0x78
  419d03:	in     al,0x87
  419d05:	xor    cl,bl
  419d07:	addr16 inc ebx
  419d09:	mov    edi,0x564965fa
  419d0e:	out    dx,eax
  419d0f:	pop    edi
  419d10:	push   esp
  419d11:	pop    ds
  419d12:	fdiv   QWORD PTR [edi+eax*8]
  419d15:	xchg   edx,eax
  419d16:	data16 clc 
  419d18:	aad    0x14
  419d1a:	add    ebp,edx
  419d1c:	loop   0x419cab
  419d1e:	ret    0xe3ea
  419d21:	dec    esp
  419d22:	stos   DWORD PTR es:[edi],eax
  419d23:	xchg   esp,eax
  419d24:	std    
  419d25:	out    0xd8,al
  419d27:	dec    ebp
  419d28:	jne    0x419d5b
  419d2a:	lea    ecx,[ebx]
  419d2c:	push   0x61
  419d2e:	icebp  
  419d2f:	push   cs
  419d30:	aam    0x60
  419d32:	add    eax,0x5b9f9c29
  419d37:	or     BYTE PTR ds:[eax-0x651e70b9],bl
  419d3e:	(bad)
  419d41:	xchg   esp,eax
  419d42:	mov    eax,0x8a199de2
  419d47:	shl    BYTE PTR [ebx+0x7e],0xc6
  419d4b:	cdq    
  419d4c:	inc    edx
  419d4d:	xchg   DWORD PTR [esi+esi*4+0x2ae56aff],edx
  419d54:	ins    BYTE PTR es:[edi],dx
  419d55:	mov    esi,0x42a148f
  419d5a:	xchg   ebx,eax
  419d5b:	call   0x783db620
  419d60:	cmp    eax,0x458a0d0
  419d65:	sub    DWORD PTR ds:0xf1685d1c,ebp
  419d6b:	dec    esi
  419d6c:	jo     0x419d5f
  419d6e:	adc    DWORD PTR ds:0xff941fbd,ebp
  419d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d75:	dec    edx
  419d76:	dec    edi
  419d77:	enter  0xe6b2,0x94
  419d7b:	retf   
  419d7c:	adc    esp,DWORD PTR [ebp+0x4b]
  419d7f:	sbb    DWORD PTR ds:0x2a63249c,ebp
  419d85:	mov    esi,DWORD PTR [eax+0x6e437b1a]
  419d8b:	inc    esp
  419d8c:	es scas al,BYTE PTR es:[edi]
  419d8e:	mov    ecx,0x4231f177
  419d93:	xor    eax,0x1fd26f9c
  419d98:	stos   DWORD PTR es:[edi],eax
  419d99:	push   es
  419d9a:	and    BYTE PTR [esi],0xe7
  419d9d:	xchg   esi,eax
  419d9e:	pop    ss
  419d9f:	sbb    bh,BYTE PTR [ebx]
  419da1:	xchg   esp,eax
  419da2:	jecxz  0x419d85
  419da4:	inc    esp
  419da5:	psubsb mm6,QWORD PTR [edx+edx*8+0x15]
  419daa:	lods   eax,DWORD PTR ds:[esi]
  419dab:	and    al,0x1e
  419dad:	call   0x5a4e:0xb946d03f
  419db4:	leave  
  419db5:	pop    eax
  419db6:	cld    
  419db7:	(bad)  
  419db8:	sbb    eax,0xf4511f33
  419dbd:	add    ebx,ebp
  419dbf:	mov    BYTE PTR [edx],ah
  419dc1:	adc    dh,bh
  419dc3:	mov    esi,0xdbe6e560
  419dc8:	pop    ebp
  419dc9:	pop    ebx
  419dca:	jns    0x419e17
  419dcc:	mov    eax,ds:0xd7cc21f5
  419dd1:	out    0xa6,eax
  419dd3:	pop    es
  419dd4:	pop    ds
  419dd5:	adc    al,0x57
  419dd7:	jmp    0xb2b41dee
  419ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ddd:	(bad)  
  419dde:	adc    al,0xfc
  419de0:	pushf  
  419de1:	mov    cs,WORD PTR [ebx+0x476e2ac9]
  419de7:	xchg   edx,eax
  419de8:	jmp    0x419e3e
  419dea:	jno    0x419e1c
  419dec:	push   es
  419ded:	clc    
  419dee:	mov    ecx,0x914f5d1d
  419df3:	xchg   DWORD PTR ds:0xaea554d2,ebx
  419df9:	pop    ebx
  419dfa:	sbb    ebx,DWORD PTR [esi+0x299d337f]
  419e00:	sub    edx,edi
  419e02:	mov    ebx,0x81d4a200
  419e07:	mov    WORD PTR [edi+0x12ce88b8],cs
  419e0d:	dec    ecx
  419e0e:	xor    eax,0xb21f42bf
  419e13:	jmp    0x162ad038
  419e18:	repz mov al,ds:0x95ec037d
  419e1e:	adc    eax,esp
  419e20:	jns    0x419e24
  419e22:	push   eax
  419e23:	mov    ebx,0x880336ba
  419e28:	push   esi
  419e29:	mul    DWORD PTR [eax+0x2f78f7a2]
  419e2f:	in     eax,0x3
  419e31:	dec    ebx
  419e32:	cmp    al,0xf4
  419e34:	push   esi
  419e35:	fsub   QWORD PTR [eax]
  419e37:	and    cl,ah
  419e39:	add    eax,0x8f5bf685
  419e3e:	cmc    
  419e3f:	or     BYTE PTR [ecx],dl
  419e41:	pusha  
  419e42:	cmp    ch,BYTE PTR [ecx+edi*8+0x4a8d180a]
  419e49:	fsubr  st(5),st
  419e4b:	dec    ecx
  419e4c:	pop    ebx
  419e4d:	in     al,dx
  419e4e:	jne    0x419def
  419e50:	jmp    0x419e21
  419e52:	repz scas eax,DWORD PTR es:[edi]
  419e54:	mov    dl,0x92
  419e56:	fs dec esi
  419e58:	cmp    al,0xec
  419e5a:	cmc    
  419e5b:	dec    ebp
  419e5c:	sbb    al,0xfb
  419e5e:	or     BYTE PTR [esi-0x383877fa],ch
  419e64:	pop    esi
  419e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e66:	sbb    DWORD PTR [ecx+esi*4+0x71f084c2],eax
  419e6d:	or     ch,BYTE PTR [ecx-0x72]
  419e70:	jae    0x419e22
  419e72:	xchg   DWORD PTR [eax-0x77],edi
  419e75:	imul   ebx,edi,0x56
  419e78:	add    bl,BYTE PTR [eax]
  419e7a:	and    ecx,esi
  419e7c:	xchg   ebp,eax
  419e7d:	fidivr WORD PTR ds:0x989fdcea
  419e83:	nop
  419e84:	sub    al,0x3a
  419e86:	dec    esi
  419e87:	jl     0x419e3a
  419e89:	int    0x32
  419e8b:	mov    BYTE PTR [edi],dl
  419e8d:	and    eax,0xb7617718
  419e92:	dec    ebx
  419e93:	jg     0x419e1e
  419e95:	cmp    al,0x1a
  419e97:	xchg   esi,eax
  419e98:	adc    DWORD PTR [ecx+ebx*4-0x4ba9dea3],0x76
  419ea0:	mov    ?,WORD PTR [ebx]
  419ea2:	data16 stos BYTE PTR es:[edi],al
  419ea4:	in     eax,dx
  419ea5:	xchg   BYTE PTR [edi-0x12bdfe07],ch
  419eab:	pop    eax
  419eac:	test   DWORD PTR [esi-0x13ff0f76],esp
  419eb2:	pop    edi
  419eb3:	sbb    ch,BYTE PTR [ebx-0xb5ab857]
  419eb9:	jae    0x419f12
  419ebb:	ret    0x2fba
  419ebe:	pop    ebp
  419ebf:	sbb    bh,BYTE PTR [esi]
  419ec1:	jno    0x419e6b
  419ec3:	scas   al,BYTE PTR es:[edi]
  419ec4:	cld    
  419ec5:	xchg   ecx,eax
  419ec6:	sbb    eax,0x4d49382a
  419ecb:	repz push edx
  419ecd:	or     DWORD PTR [eax+0x8],ecx
  419ed0:	mov    ebx,0x257ffafc
  419ed5:	scas   al,BYTE PTR es:[edi]
  419ed6:	ins    BYTE PTR es:[edi],dx
  419ed7:	add    BYTE PTR [ecx+0x3e],0xc4
  419edb:	sub    al,0xe6
  419edd:	outs   dx,DWORD PTR ds:[esi]
  419ede:	pop    esi
  419edf:	add    BYTE PTR [esi+eax*8+0xa16cba1],dh
  419ee6:	pop    ds
  419ee7:	and    eax,0xb3e9c87
  419eec:	cmp    BYTE PTR [eax+ebp*8],bh
  419eef:	inc    esi
  419ef0:	cmp    ch,ah
  419ef2:	inc    ecx
  419ef3:	cmp    al,BYTE PTR [ebx-0x4c]
  419ef6:	jp     0x419f1f
  419ef8:	rcl    BYTE PTR [eax+0x5d],1
  419efb:	loope  0x419ee3
  419efd:	stc    
  419efe:	in     al,dx
  419eff:	pop    ss
  419f00:	sub    ch,dh
  419f02:	popa   
  419f03:	arpl   WORD PTR [esi],cx
  419f05:	cmp    BYTE PTR [esi+0x3afec842],ch
  419f0b:	push   esp
  419f0c:	dec    edx
  419f0d:	fsub   QWORD PTR [eax-0x36bba219]
  419f13:	or     edi,DWORD PTR ds:[ecx+0x3f]
  419f17:	sub    eax,DWORD PTR [edx+0x5717ce68]
  419f1d:	test   al,0xdb
  419f1f:	test   BYTE PTR [ebx+ebx*8-0x77438a72],al
  419f26:	fidivr DWORD PTR [ebx+0x59]
  419f29:	mov    dl,0x88
  419f2b:	ret    
  419f2c:	xor    al,0xbf
  419f2e:	(bad)  
  419f2f:	jmp    0x279db5d2
  419f34:	stos   DWORD PTR es:[edi],eax
  419f35:	stc    
  419f36:	xlat   BYTE PTR ds:[ebx]
  419f37:	leave  
  419f38:	jns    0x419f67
  419f3a:	and    ch,BYTE PTR cs:[ecx]
  419f3d:	sub    al,0xc
  419f3f:	mov    esi,0xb8f63f3a
  419f44:	cld    
  419f45:	push   ds
  419f46:	enter  0x3131,0x59
  419f4a:	mov    ds,WORD PTR ds:0x29110594
  419f50:	lods   al,BYTE PTR ds:[esi]
  419f51:	push   cs
  419f52:	mov    esp,0x3da5a308
  419f57:	sahf   
  419f58:	fmul   DWORD PTR [esi]
  419f5a:	xchg   esi,eax
  419f5b:	cmp    eax,0x94e7386e
  419f60:	scas   al,BYTE PTR es:[edi]
  419f61:	jb     0x419f4c
  419f63:	xor    al,0xc5
  419f65:	jb     0x419f98
  419f67:	inc    edi
  419f68:	xor    al,ah
  419f6a:	(bad)  
  419f6b:	jg     0x419f88
  419f6d:	retf   0xfec5
  419f70:	iret   
  419f71:	sti    
  419f72:	loopne 0x419f5f
  419f74:	add    BYTE PTR [edx],dl
  419f76:	scas   eax,DWORD PTR es:[edi]
  419f77:	inc    ecx
  419f78:	pop    es
  419f79:	jecxz  0x419f88
  419f7b:	mov    ah,0x24
  419f7d:	push   eax
  419f7e:	fisttp QWORD PTR [ebx-0x4daf1671]
  419f84:	retf   
  419f85:	cmp    BYTE PTR [ebp+0x6b52ca40],bh
  419f8b:	nop    ebx
  419f8e:	repnz xlat BYTE PTR ds:[ebx]
  419f90:	bound  esi,QWORD PTR [ebx+0x62]
  419f93:	scas   al,BYTE PTR es:[edi]
  419f94:	(bad)  
  419f95:	pusha  
  419f96:	mov    ds:0x21be1eba,eax
  419f9b:	add    DWORD PTR ds:0x125291,0xa765c28e
  419fa5:	xlat   BYTE PTR ds:[ebx]
  419fa6:	add    bl,bl
  419fa8:	xchg   edx,eax
  419fa9:	pop    esi
  419faa:	pop    ebx
  419fab:	ror    BYTE PTR [edi],1
  419fad:	push   eax
  419fae:	or     ebx,DWORD PTR [ecx-0x6dde12d7]
  419fb4:	loope  0x419fd9
  419fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fb7:	or     eax,0x6006e342
  419fbc:	rcl    cl,1
  419fbe:	je     0x419fbf
  419fc0:	mov    esi,0xf646ec59
  419fc5:	sar    BYTE PTR [edi],cl
  419fc7:	arpl   WORD PTR [edi-0x33bf0af],si
  419fcd:	push   eax
  419fce:	jecxz  0x419fa9
  419fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd1:	jp     0x419fb8
  419fd3:	add    al,0x74
  419fd5:	xchg   DWORD PTR [ecx+ecx*1+0x54],eax
  419fd9:	(bad)  
  419fda:	push   ecx
  419fdb:	call   0xdf1336ba
  419fe0:	jecxz  0x41a024
  419fe2:	mov    dl,0x4b
  419fe4:	es popa 
  419fe6:	enter  0x5786,0xce
  419fea:	pushf  
  419feb:	ficomp DWORD PTR [edx+0x4e]
  419fee:	add    ebp,ebp
  419ff0:	mov    edi,0x1d502085
  419ff5:	sar    BYTE PTR [esi+0x27],0x9a
  419ff9:	sub    esi,ebp
  419ffb:	and    BYTE PTR [ecx+0x29d949a6],ch
  41a001:	add    esi,eax
  41a003:	mov    eax,ds:0x851994db
  41a008:	add    al,0x9d
  41a00a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a00b:	and    ebx,DWORD PTR [esi+ecx*4]
  41a00e:	sub    eax,DWORD PTR [eax+0x58]
  41a011:	xchg   DWORD PTR [ecx+0x42aceeb7],esp
  41a017:	mov    ebp,0x1b607a71
  41a01c:	mov    edx,0xadcbd461
  41a021:	xor    dl,bl
  41a023:	or     DWORD PTR ds:0xdeeddc72,esi
  41a029:	jnp    0x41a052
  41a02b:	dec    ecx
  41a02c:	pop    ss
  41a02d:	pop    eax
  41a02e:	push   edi
  41a02f:	lods   eax,DWORD PTR ds:[esi]
  41a030:	dec    esp
  41a031:	cmp    eax,0xaca6974
  41a036:	cmp    al,0x5a
  41a038:	sub    eax,0x150dd61
  41a03d:	(bad)  
  41a03e:	mov    eax,DWORD PTR [esi]
  41a040:	enter  0xee22,0x97
  41a044:	add    al,0x5a
  41a046:	ret    0xd9ac
  41a049:	hlt    
  41a04a:	arpl   bp,bp
  41a04c:	ror    ch,0xf5
  41a04f:	cs call 0x6cbe:0xaccfd1c6
  41a057:	sub    ebx,DWORD PTR [esi+0x38a9b484]
  41a05d:	int    0x34
  41a05f:	xlat   BYTE PTR ds:[ebx]
  41a060:	lods   eax,DWORD PTR ds:[esi]
  41a061:	ds cmp al,0x6b
  41a064:	fcmovne st,st(0)
  41a066:	(bad)  
  41a067:	cmp    BYTE PTR [esi],dh
  41a069:	jecxz  0x41a07f
  41a06b:	repz xchg edi,eax
  41a06d:	push   esi
  41a06e:	jp     0x41a0e1
  41a070:	add    ebp,DWORD PTR [eax]
  41a072:	jmp    0x1552:0xb0540300
  41a079:	shl    DWORD PTR [esi+0x46e36fce],0xe7
  41a080:	or     BYTE PTR [edx+ecx*2-0x24],0xe1
  41a085:	jmp    0x41a08e
  41a087:	push   cs
  41a088:	out    dx,eax
  41a089:	shr    DWORD PTR [edi],0x76
  41a08c:	or     al,0x6d
  41a08e:	or     al,0x2c
  41a090:	push   es
  41a091:	mov    esp,0xdcd6f5ad
  41a096:	jnp    0x41a10e
  41a098:	test   eax,0x4b0a5579
  41a09d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a09e:	aaa    
  41a09f:	mov    ch,0x4
  41a0a1:	add    al,0xbc
  41a0a3:	icebp  
  41a0a4:	cmp    al,0xb3
  41a0a6:	(bad)  
  41a0a7:	jae    0x41a116
  41a0a9:	pop    edi
  41a0aa:	call   0xe30f:0xb30e7020
  41a0b1:	inc    ebx
  41a0b2:	adc    DWORD PTR [ecx],ebp
  41a0b4:	retf   0xfcb4
  41a0b7:	xlat   BYTE PTR ds:[ebx]
  41a0b8:	sub    eax,DWORD PTR [bp+si-0x1df9]
  41a0bd:	mov    eax,ds:0x3d7b6761
  41a0c2:	push   eax
  41a0c3:	cmp    ah,BYTE PTR [esi-0x3d]
  41a0c6:	shl    BYTE PTR [edx],1
  41a0c8:	(bad)  
  41a0c9:	rcr    ebx,cl
  41a0cb:	mov    dh,0x31
  41a0cd:	jae    0x41a139
  41a0cf:	adc    eax,0x6f070bc9
  41a0d4:	(bad)  
  41a0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0d6:	mov    ah,0xed
  41a0d8:	inc    eax
  41a0d9:	lods   al,BYTE PTR ds:[esi]
  41a0da:	pop    edx
  41a0db:	aas    
  41a0dc:	fst    DWORD PTR [esi+0x91bf2ed]
  41a0e2:	sub    DWORD PTR ds:0x34ce2238,eax
  41a0e8:	push   esp
  41a0e9:	xchg   ebx,eax
  41a0ea:	sar    BYTE PTR [edx+0x376ef9ca],0xb6
  41a0f1:	sub    BYTE PTR [eax*1+0x311ea3f5],0x11
  41a0f9:	xchg   edx,eax
  41a0fa:	in     eax,0x35
  41a0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0fd:	stos   DWORD PTR es:[edi],eax
  41a0fe:	inc    edx
  41a0ff:	cmc    
  41a100:	imul   esp,edx,0x2d
  41a103:	mov    al,ds:0x678e6500
  41a108:	(bad)  
  41a109:	mov    dh,0xa8
  41a10b:	fnsave [eax*1+0x4594cf17]
  41a112:	pop    esp
  41a113:	retf   
  41a114:	and    DWORD PTR [edi-0x3236c39a],eax
  41a11a:	iret   
  41a11b:	(bad)  
  41a11c:	mov    ?,eax
  41a11e:	prefetch BYTE PTR [esi+eax*1-0x2260b944]
  41a126:	cmp    edx,DWORD PTR [esi+0x25]
  41a129:	std    
  41a12a:	xchg   DWORD PTR [edi],ebp
  41a12c:	sub    DWORD PTR [eax-0x4e],0xffffffe8
  41a130:	mov    eax,DWORD PTR [esi-0x6cd6b22b]
  41a136:	pushf  
  41a137:	cld    
  41a138:	repnz cmc 
  41a13a:	cmp    ah,dl
  41a13c:	fs js  0x41a17d
  41a13f:	ja     0x41a0f3
  41a141:	stos   BYTE PTR es:[edi],al
  41a142:	mov    DWORD PTR [eax+esi*4-0x3a3b13b0],ebp
  41a149:	adc    al,0x5e
  41a14b:	loope  0x41a0d3
  41a14d:	pushf  
  41a14e:	fisubr DWORD PTR [ebp-0x41]
  41a151:	or     eax,0x1a7fcc32
  41a156:	jb     0x41a0f7
  41a158:	les    ebx,FWORD PTR [ecx+0x730ecd06]
  41a15e:	xchg   esp,eax
  41a15f:	sbb    edx,edx
  41a161:	out    dx,al
  41a162:	fimul  WORD PTR [eax-0x26]
  41a165:	out    0xa5,eax
  41a167:	repnz div BYTE PTR [eax]
  41a16a:	or     eax,0x7841696e
  41a16f:	dec    esp
  41a170:	sub    dl,BYTE PTR [esi+0x28]
  41a173:	das    
  41a174:	out    dx,al
  41a175:	inc    esp
  41a176:	mov    ebp,0xbbcf3beb
  41a17b:	ss arpl dx,bp
  41a17e:	aad    0xff
  41a180:	sbb    DWORD PTR [eax-0x74],ecx
  41a183:	cld    
  41a184:	cmp    al,0x90
  41a186:	out    0x23,eax
  41a188:	mov    ds:0x1b56dd66,eax
  41a18d:	fadd   DWORD PTR [ebx+0x72a87200]
  41a193:	(bad)  
  41a194:	imul   esi,esi,0x4c
  41a197:	and    BYTE PTR [esi+0x7c7386c7],ch
  41a19d:	mov    BYTE PTR [edi+0x6915c212],al
  41a1a3:	dec    ecx
  41a1a4:	nop
  41a1a5:	cmp    DWORD PTR [edx+0x7f],ebx
  41a1a8:	push   ds
  41a1a9:	pushf  
  41a1aa:	jmp    0x6723:0xb831f34a
  41a1b1:	iret   
  41a1b2:	sub    DWORD PTR [eax-0x4c],edi
  41a1b5:	inc    edx
  41a1b6:	jbe    0x41a20c
  41a1b8:	aas    
  41a1b9:	sbb    edi,DWORD PTR [ecx+0x26]
  41a1bc:	inc    esi
  41a1bd:	adc    ch,BYTE PTR [ecx+0x42]
  41a1c0:	popa   
  41a1c1:	popa   
  41a1c2:	repnz retf 0x8961
  41a1c6:	iret   
  41a1c7:	repz pop eax
  41a1c9:	fcomp  QWORD PTR [esi+0x30]
  41a1cc:	jbe    0x41a1ed
  41a1ce:	(bad)  
  41a1d0:	mov    edi,0x86542291
  41a1d5:	dec    ebx
  41a1d6:	pop    esp
  41a1d7:	pop    ebp
  41a1d8:	iret   
  41a1d9:	retf   
  41a1da:	dec    edx
  41a1db:	cli    
  41a1dc:	xchg   esp,eax
  41a1dd:	push   esi
  41a1de:	dec    eax
  41a1df:	xchg   ecx,eax
  41a1e0:	ret    0x99c5
  41a1e3:	ins    BYTE PTR es:[edi],dx
  41a1e4:	test   BYTE PTR [esi],bl
  41a1e6:	aas    
  41a1e7:	in     al,dx
  41a1e8:	cli    
  41a1e9:	cmp    BYTE PTR [edx-0x19],0xce
  41a1ed:	scas   eax,DWORD PTR es:[edi]
  41a1ee:	cmc    
  41a1ef:	adc    BYTE PTR [eax-0x218a34bc],bh
  41a1f5:	in     eax,0x62
  41a1f7:	sti    
  41a1f8:	ins    BYTE PTR es:[edi],dx
  41a1f9:	int    0xe7
  41a1fb:	or     DWORD PTR [edi+0x1d],edi
  41a1fe:	(bad)  
  41a1ff:	sti    
  41a200:	outs   dx,BYTE PTR ds:[esi]
  41a201:	mov    dh,0xac
  41a203:	rcl    DWORD PTR [ebx-0x3c],0x5a
  41a207:	mov    bl,0x79
  41a209:	xor    al,dl
  41a20b:	add    DWORD PTR [edx+0x40bee50a],ebx
  41a211:	and    BYTE PTR [eax+0x7ce96d74],bh
  41a217:	or     edi,DWORD PTR [eax+0xa8fb804]
  41a21d:	dec    ecx
  41a21e:	repz jns 0x41a207
  41a221:	test   DWORD PTR [esi+ebx*4],edi
  41a224:	in     eax,0xd1
  41a226:	and    BYTE PTR [ebx+edx*2],al
  41a229:	dec    ebx
  41a22a:	push   ds
  41a22b:	pop    edx
  41a22c:	(bad)  
  41a22d:	sub    dh,BYTE PTR [ecx]
  41a22f:	dec    ebx
  41a230:	cli    
  41a231:	loope  0x41a249
  41a233:	pop    ds
  41a234:	inc    edx
  41a235:	mov    bl,0xa4
  41a237:	out    dx,eax
  41a238:	sbb    eax,0x7bfaa052
  41a23d:	int    0x88
  41a23f:	jnp    0x41a1cc
  41a241:	aaa    
  41a242:	cmp    al,0x52
  41a244:	adc    al,0x3a
  41a246:	xor    al,0x45
  41a248:	xchg   DWORD PTR [eax-0x1d],edx
  41a24b:	ins    BYTE PTR es:[edi],dx
  41a24c:	push   0x925cf3d9
  41a251:	loope  0x41a260
  41a253:	add    eax,0xcc7cbf58
  41a258:	cmp    dh,BYTE PTR [eax+0x15]
  41a25b:	lods   al,BYTE PTR ds:[esi]
  41a25c:	inc    edx
  41a25d:	sbb    al,0xce
  41a25f:	ret    
  41a260:	jmp    0xd9ad:0xd39271e1
  41a267:	ss jecxz 0x41a244
  41a26a:	test   ecx,ebx
  41a26c:	pop    eax
  41a26d:	cmp    DWORD PTR [esi-0x4b],ebx
  41a270:	pop    ebp
  41a271:	retf   0xe64
  41a274:	iret   
  41a275:	into   
  41a276:	jg     0x41a255
  41a278:	sahf   
  41a279:	stc    
  41a27a:	ret    0x5fa9
  41a27d:	scas   eax,DWORD PTR es:[edi]
  41a27e:	jge    0x41a2b8
  41a280:	xor    eax,0x8b7888a1
  41a285:	gs mov edi,0x74f7c27e
  41a28b:	mov    WORD PTR [ebp-0x53],?
  41a28e:	inc    BYTE PTR [esi+0x2d]
  41a291:	test   bl,bl
  41a293:	dec    ebx
  41a294:	push   ecx
  41a295:	and    ebx,eax
  41a297:	jmp    0x41a2db
  41a299:	cld    
  41a29a:	dec    edi
  41a29b:	imul   esp,DWORD PTR [edx+eiz*8+0x2bba281a],0x2efe750c
  41a2a6:	imul   ebx,DWORD PTR [ebx+ebx*4-0x34a21696],0x592b8ca9
  41a2b1:	ins    DWORD PTR es:[edi],dx
  41a2b2:	pusha  
  41a2b3:	inc    esi
  41a2b4:	clc    
  41a2b5:	outs   dx,DWORD PTR ds:[esi]
  41a2b6:	(bad)  
  41a2b7:	aaa    
  41a2b8:	xor    al,0xb8
  41a2ba:	out    dx,eax
  41a2bb:	pop    edi
  41a2bc:	dec    edx
  41a2bd:	inc    edi
  41a2be:	push   DWORD PTR [ebx+0x5c]
  41a2c1:	jne    0x41a25e
  41a2c3:	sbb    eax,0x12b2a999
  41a2c8:	retf   0x35de
  41a2cb:	add    BYTE PTR [edx+0x5f8360ad],dh
  41a2d1:	in     al,0xdd
  41a2d3:	mov    ecx,0x6ea75465
  41a2d8:	mov    edx,0xd049ad06
  41a2dd:	ficom  DWORD PTR [ebp+0x72cb8e4]
  41a2e3:	mov    ebx,0x6c9dc82c
  41a2e8:	mov    edx,DWORD PTR [edi+0x3cddf0a0]
  41a2ee:	addps  xmm3,xmm2
  41a2f1:	sub    esi,DWORD PTR [edi-0x6d]
  41a2f4:	mov    eax,0xfe7d22f6
  41a2f9:	fistp  DWORD PTR [ebx-0x47]
  41a2fc:	add    eax,0x9a119519
  41a301:	ins    DWORD PTR es:[edi],dx
  41a302:	jae    0x41a2b7
  41a304:	push   esi
  41a305:	xor    eax,DWORD PTR [edi+ebp*8]
  41a308:	jae    0x41a36e
  41a30a:	and    al,0xb
  41a30c:	xchg   edi,eax
  41a30d:	dec    ebp
  41a30e:	call   0xc3fd:0xfae2090e
  41a315:	ss int 0x3c
  41a318:	inc    esp
  41a319:	jle    0x41a397
  41a31b:	ds cmp cl,bl
  41a31e:	mov    es,edi
  41a320:	sbb    eax,0x828fdf8d
  41a325:	and    BYTE PTR [esi],ch
  41a327:	jns    0x41a382
  41a329:	sub    DWORD PTR [edx-0x6c],edi
  41a32c:	call   0x2825a397
  41a331:	stos   DWORD PTR es:[edi],eax
  41a332:	lahf   
  41a333:	and    DWORD PTR [ebx+0x58],eax
  41a336:	sbb    eax,0x5530c0c
  41a33b:	out    dx,eax
  41a33c:	xor    al,0x53
  41a33e:	daa    
  41a33f:	xor    al,0x99
  41a341:	loopne 0x41a2d4
  41a343:	xchg   edi,eax
  41a344:	scas   al,BYTE PTR es:[edi]
  41a345:	int3   
  41a346:	mov    dl,BYTE PTR [edi]
  41a348:	jp     0x41a31d
  41a34a:	test   eax,0x93bb0975
  41a34f:	push   0xffffff9e
  41a351:	out    dx,al
  41a352:	xor    ebp,edx
  41a354:	stos   DWORD PTR es:[edi],eax
  41a355:	cli    
  41a356:	out    dx,eax
  41a357:	and    edi,ebp
  41a359:	jp     0x41a2e1
  41a35b:	or     dl,cl
  41a35d:	fldcw  WORD PTR [edx+0x3bb90234]
  41a363:	add    BYTE PTR ds:0xd60db330,ch
  41a369:	inc    edi
  41a36a:	jg     0x41a333
  41a36c:	cld    
  41a36d:	and    bh,BYTE PTR [ecx+0x9]
  41a370:	jmp    0x2e28f06b
  41a375:	pop    eax
  41a376:	or     al,0xed
  41a378:	add    esp,DWORD PTR ds:0x94e4c399
  41a37e:	push   es
  41a37f:	jmp    0xd7a0:0xec6d16d7
  41a386:	sti    
  41a387:	cmp    DWORD PTR [eax+0x3a8e0680],ebp
  41a38d:	sub    DWORD PTR [ebp+0x7a26e87a],edx
  41a393:	adc    ah,ah
  41a395:	es jle 0x41a369
  41a398:	jne    0x41a366
  41a39a:	dec    edi
  41a39b:	fbld   TBYTE PTR [edx-0x7e7e1565]
  41a3a1:	ja     0x41a3bb
  41a3a3:	push   0x925d560d
  41a3a8:	mov    al,bh
  41a3aa:	sub    ah,BYTE PTR [ebx-0x3918eab9]
  41a3b0:	jo     0x41a3f5
  41a3b2:	(bad)  
  41a3b3:	popa   
  41a3b4:	jl     0x41a424
  41a3b6:	xchg   BYTE PTR [ebx],bh
  41a3b8:	jge    0x41a40f
  41a3ba:	rcr    BYTE PTR [ebx+edi*8],cl
  41a3bd:	test   eax,0xf2ae2c16
  41a3c2:	xchg   eax,edx
  41a3c4:	fs pop esp
  41a3c6:	ds jno 0x41a3a4
  41a3c9:	push   0x728f3800
  41a3ce:	push   ebx
  41a3cf:	retf   0xe46a
  41a3d2:	js     0x41a3b4
  41a3d4:	inc    ebx
  41a3d5:	sbb    DWORD PTR [eax-0x71125bb],edi
  41a3db:	mov    eax,esi
  41a3dd:	lahf   
  41a3de:	cld    
  41a3df:	gs or  ch,bl
  41a3e2:	popa   
  41a3e3:	inc    eax
  41a3e4:	pop    ebx
  41a3e5:	mov    dl,0xc
  41a3e7:	mov    eax,ds:0x18a4563c
  41a3ec:	imul   ebp,DWORD PTR [ecx],0xffffffbc
  41a3ef:	sub    al,BYTE PTR [edx+ecx*8+0x2e5f4f1e]
  41a3f6:	mov    DWORD PTR [eax],esi
  41a3f8:	dec    edi
  41a3f9:	ins    DWORD PTR es:[edi],dx
  41a3fa:	mov    dl,0x56
  41a3fc:	repz test BYTE PTR [eax+0x41],0x41
  41a401:	push   ds
  41a402:	sub    esi,DWORD PTR [ecx+ebx*2-0x59]
  41a406:	aaa    
  41a407:	mov    eax,0x3bcf0274
  41a40c:	sub    BYTE PTR [eax-0x50],0xd
  41a410:	ja     0x41a479
  41a412:	dec    edx
  41a413:	stc    
  41a414:	mov    dl,0xa6
  41a416:	ss (bad) 
  41a418:	std    
  41a419:	push   edi
  41a41b:	sbb    eax,0xed724182
  41a420:	sub    al,0xe6
  41a422:	mov    cl,ah
  41a424:	out    0x3a,al
  41a426:	fsub   st(5),st
  41a428:	mov    eax,0x8d87b269
  41a42d:	ins    DWORD PTR es:[edi],dx
  41a42e:	mov    ah,0xbc
  41a430:	ficomp DWORD PTR [esi+0x51]
  41a433:	int3   
  41a434:	in     al,dx
  41a435:	xchg   esi,eax
  41a436:	inc    edi
  41a437:	xor    DWORD PTR [ecx+ebx*4-0x3dc2ab48],esp
  41a43e:	gs fdiv st,st(0)
  41a441:	int3   
  41a442:	ret    
  41a443:	xchg   edx,eax
  41a444:	ret    0x2957
  41a447:	nop
  41a448:	add    ebp,DWORD PTR [edx]
  41a44a:	sub    al,0x68
  41a44c:	cmp    DWORD PTR [edi+0xe],0x1b
  41a450:	or     DWORD PTR [ecx],ebx
  41a452:	inc    eax
  41a453:	xor    esi,0x67
  41a456:	pop    DWORD PTR [ebp-0x3ebd8e6a]
  41a45c:	mov    ds:0x45550af6,eax
  41a461:	enter  0x7312,0x45
  41a465:	nop
  41a466:	shl    BYTE PTR [esi+0x34],0xf5
  41a46a:	fbstp  TBYTE PTR [eax]
  41a46c:	push   ds
  41a46d:	xor    dh,BYTE PTR [edx+0x3e]
  41a470:	xor    eax,0xd0a405c9
  41a475:	cwde   
  41a476:	cld    
  41a477:	loopne 0x41a4cb
  41a479:	add    eax,0x2d6f1911
  41a47e:	(bad)  
  41a47f:	sub    bh,BYTE PTR [eax+0x27]
  41a482:	cmp    bl,BYTE PTR [ebp+0x64]
  41a485:	test   eax,0xede168ef
  41a48a:	add    al,0xdc
  41a48c:	cmc    
  41a48d:	adc    eax,0x34fab647
  41a492:	out    dx,al
  41a493:	mov    DWORD PTR [eax+0x37778ed6],edx
  41a499:	rcl    ecx,1
  41a49b:	dec    esi
  41a49c:	mov    esp,0x4c1d1d11
  41a4a1:	out    0xf2,eax
  41a4a3:	div    BYTE PTR [ecx+eiz*2]
  41a4a6:	shr    DWORD PTR [edx-0x34],cl
  41a4a9:	scas   al,BYTE PTR es:[edi]
  41a4aa:	stc    
  41a4ab:	add    ebx,DWORD PTR [edx-0x85901e3]
  41a4b1:	push   cs
  41a4b2:	cmp    DWORD PTR [eax-0x5e],esp
  41a4b5:	sub    eax,0x51c5ff9d
  41a4ba:	pop    ebp
  41a4bb:	mov    bh,0x3d
  41a4bd:	test   BYTE PTR [esi-0x4606879a],cl
  41a4c3:	das    
  41a4c4:	imul   edx,DWORD PTR [esi-0x4e90e304],0x23f92e6b
  41a4ce:	ja     0x41a458
  41a4d0:	pop    ebp
  41a4d1:	hlt    
  41a4d2:	rcl    DWORD PTR [ecx+0x6a095f02],1
  41a4d8:	xchg   DWORD PTR [eax+0x5d],esi
  41a4db:	sbb    DWORD PTR [edi-0x68c78eae],eax
  41a4e1:	sbb    BYTE PTR [ebx],0x8a
  41a4e4:	sub    eax,0x21320d27
  41a4e9:	fmulp  st(4),st
  41a4eb:	push   es
  41a4ec:	addr16 jle 0x41a547
  41a4ef:	mov    bh,0x3c
  41a4f1:	adc    DWORD PTR ds:0xb7ebf86e,ebx
  41a4f7:	inc    ecx
  41a4f9:	or     DWORD PTR [ecx+edx*2+0x466d84a6],edi
  41a500:	test   DWORD PTR [edi-0x13478913],0xcf4f569e
  41a50a:	xchg   esp,eax
  41a50b:	and    DWORD PTR [edx+0x41],ecx
  41a50e:	mov    esi,0x2626eedb
  41a513:	adc    ah,BYTE PTR [edi+0x9]
  41a516:	inc    ebp
  41a517:	cli    
  41a518:	stc    
  41a519:	ins    BYTE PTR es:[edi],dx
  41a51a:	xchg   ebp,eax
  41a51b:	pmulhuw mm0,mm0
  41a51e:	nop
  41a51f:	dec    edx
  41a520:	stos   DWORD PTR es:[edi],eax
  41a521:	(bad)  
  41a522:	sub    DWORD PTR [esi+0x14],eax
  41a525:	aam    0x5
  41a527:	repnz inc ecx
  41a529:	cwde   
  41a52a:	mov    BYTE PTR [eax+0xb90c7cd],ch
  41a530:	ret    0x1932
  41a533:	mov    WORD PTR [eax-0x2f],cs
  41a536:	dec    esi
  41a537:	xor    BYTE PTR [edi],bl
  41a539:	cli    
  41a53a:	jb     0x41a4d5
  41a53c:	jge    0x41a509
  41a53e:	imul   eax,DWORD PTR [edi+0x5c0e7eb6],0xffffffb8
  41a545:	into   
  41a546:	js     0x41a555
  41a548:	in     eax,0x13
  41a54a:	mov    ebp,0x826af734
  41a54f:	xor    DWORD PTR [edi-0x25f62a09],ecx
  41a555:	inc    esp
  41a556:	mov    DWORD PTR [edi],esi
  41a558:	mov    edx,0x97e71fed
  41a55d:	xor    ecx,DWORD PTR [ebx+ebp*1+0x991c045]
  41a564:	pop    ecx
  41a565:	test   edx,edx
  41a567:	lods   al,BYTE PTR ds:[esi]
  41a568:	aam    0x2e
  41a56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a56b:	out    0xfb,eax
  41a56d:	or     al,0x79
  41a56f:	out    dx,eax
  41a570:	ins    DWORD PTR es:[edi],dx
  41a571:	outs   dx,DWORD PTR ds:[esi]
  41a572:	cmp    esi,DWORD PTR [eax]
  41a574:	call   0x4b6ea2ea
  41a579:	xchg   esi,eax
  41a57a:	cwde   
  41a57b:	push   edi
  41a57c:	mov    bl,BYTE PTR [edx+0x1af53b9]
  41a582:	sub    eax,0x5c8f2620
  41a587:	jmp    0x9d612bf3
  41a58c:	je     0x41a607
  41a58e:	mov    ch,bl
  41a590:	in     eax,dx
  41a591:	cmp    ecx,DWORD PTR [ecx]
  41a593:	dec    eax
  41a594:	and    DWORD PTR [ecx+ebx*8+0x2a9ca884],0xffffff8c
  41a59c:	push   0x3c75b7ef
  41a5a1:	and    dl,ah
  41a5a3:	mov    edx,0x2984a5cd
  41a5a8:	repnz shl DWORD PTR [eax],cl
  41a5ab:	adc    bl,BYTE PTR [ebx+0x1d72a5cc]
  41a5b1:	in     eax,dx
  41a5b2:	leave  
  41a5b3:	cwde   
  41a5b4:	mov    cl,0xdd
  41a5b6:	xchg   esi,eax
  41a5b7:	mov    cl,BYTE PTR [eax-0x3aba0f29]
  41a5bd:	xor    DWORD PTR [ebx+eiz*2+0x6136f919],eax
  41a5c4:	mov    ebp,0x8e76690f
  41a5c9:	mov    eax,0x87f88048
  41a5ce:	xor    eax,0x31511d01
  41a5d3:	sub    ch,BYTE PTR [ebx+eax*8-0x15c2f539]
  41a5da:	xchg   edx,eax
  41a5db:	aas    
  41a5dc:	pop    ebx
  41a5dd:	popf   
  41a5de:	sbb    eax,0x134f264e
  41a5e3:	int3   
  41a5e4:	xor    BYTE PTR [ebp-0x51],dh
  41a5e7:	in     eax,dx
  41a5e8:	shl    cl,0xaa
  41a5eb:	jo     0x41a5a6
  41a5ed:	mov    eax,ds:0x72a55486
  41a5f2:	push   edi
  41a5f3:	sub    BYTE PTR [ebp-0x28],bl
  41a5f6:	sbb    eax,DWORD PTR [edi+0x6def512d]
  41a5fc:	mov    ds,ecx
  41a5fe:	mov    dh,0xf7
  41a600:	les    edi,FWORD PTR [edx]
  41a602:	xchg   edi,eax
  41a603:	inc    edx
  41a604:	jns    0x41a641
  41a606:	push   ecx
  41a607:	inc    ebx
  41a608:	(bad)  
  41a609:	jnp    0x41a643
  41a60b:	push   0x79
  41a60d:	repz rol DWORD PTR [ecx-0x42f3bd2e],0xcd
  41a615:	add    esi,eax
  41a617:	(bad)  
  41a618:	mov    edx,0x648bd4a3
  41a61d:	test   al,0x82
  41a61f:	cmp    BYTE PTR [edi],bl
  41a621:	xor    edi,esp
  41a623:	push   ebx
  41a624:	icebp  
  41a625:	xchg   edi,eax
  41a626:	push   cs
  41a627:	(bad)
  41a62a:	push   edi
  41a62b:	mov    al,dh
  41a62d:	push   ss
  41a62e:	jecxz  0x41a5dd
  41a630:	cs dec esi
  41a632:	add    BYTE PTR [ecx+0x5b],bh
  41a635:	int    0x4c
  41a637:	mov    ?,WORD PTR [esi+0x60]
  41a63a:	xchg   BYTE PTR [edi],bh
  41a63c:	or     esp,DWORD PTR [esi-0x706ecb8e]
  41a642:	mov    ecx,0x2f2cc247
  41a647:	nop
  41a648:	mov    bh,0x6b
  41a64a:	dec    ebx
  41a64b:	xchg   edx,esp
  41a64d:	std    
  41a64e:	fdivr  QWORD PTR [esi+0x2b172971]
  41a654:	ins    DWORD PTR es:[edi],dx
  41a655:	mov    ch,0x12
  41a657:	sub    eax,0x11753ea9
  41a65c:	pop    ebx
  41a65d:	or     ch,bl
  41a65f:	les    esp,FWORD PTR [esi-0x68]
  41a662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a663:	inc    esp
  41a664:	lds    edx,FWORD PTR [ecx+ebp*2-0x3e]
  41a668:	dec    ebp
  41a669:	js     0x41a695
  41a66b:	ret    0x4935
  41a66e:	iret   
  41a66f:	add    BYTE PTR [ebp-0x67e2e13b],cl
  41a675:	mov    ebp,0x6fb91773
  41a67a:	sbb    DWORD PTR [ecx+0x2f0646b1],0x52a9f362
  41a684:	push   fs
  41a686:	ds mov ebp,0x30e9b6d3
  41a68c:	or     BYTE PTR [esi],bh
  41a68e:	cmp    al,0x7e
  41a690:	jge    0x41a70f
  41a692:	and    esi,DWORD PTR [edx+0x14]
  41a695:	and    edx,DWORD PTR [edi+ebx*4]
  41a698:	mov    esp,DWORD PTR [eax-0x69923fa1]
  41a69e:	(bad)
  41a6a2:	mov    eax,ds:0xba4e2647
  41a6a7:	fdivp  st(1),st
  41a6a9:	jmp    0x1700140d
  41a6ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6b0:	or     BYTE PTR [edi+0x11aeb986],cl
  41a6b6:	(bad)  
  41a6b7:	repnz mov BYTE PTR [eax-0x30bc9fed],ch
  41a6be:	jae    0x41a693
  41a6c0:	or     ch,BYTE PTR [esi]
  41a6c2:	js     0x41a6a1
  41a6c4:	ret    0x3074
  41a6c7:	push   edx
  41a6c8:	shl    BYTE PTR [edx+eiz*8+0x6133f2d4],0x48
  41a6d0:	adc    eax,DWORD PTR [edi]
  41a6d2:	aas    
  41a6d3:	mov    dl,0xfe
  41a6d5:	adc    bh,ah
  41a6d7:	push   ebp
  41a6d8:	fsubr  st,st(1)
  41a6da:	rcl    edi,1
  41a6dc:	inc    esi
  41a6dd:	adc    cl,ch
  41a6df:	xor    DWORD PTR [esi-0x1acf8c42],ecx
  41a6e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6e6:	push   edx
  41a6e7:	shl    BYTE PTR [ebp+0x120afb5e],0xd3
  41a6ee:	not    DWORD PTR es:[eax-0x23]
  41a6f2:	pop    ss
  41a6f3:	adc    DWORD PTR [edi+0x3e2a0a35],eax
  41a6f9:	and    edi,edx
  41a6fb:	mov    si,0xa885
  41a6ff:	mov    DWORD PTR [ebx],0xa12f7cc2
  41a705:	es mov esi,0x9c5188c8
  41a70b:	pop    es
  41a70c:	fnstcw WORD PTR [edx]
  41a70e:	ins    BYTE PTR es:[edi],dx
  41a70f:	jge    0x41a711
  41a711:	inc    esp
  41a712:	sbb    DWORD PTR [ebp+ebp*4+0x2],0xf6d16666
  41a71a:	jbe    0x41a77e
  41a71c:	xchg   ebx,eax
  41a71d:	retf   0x1161
  41a720:	jecxz  0x41a6a8
  41a722:	push   0x74
  41a724:	add    ebp,edx
  41a726:	(bad)  
  41a727:	retf   
  41a728:	cmp    al,0x8a
  41a72a:	sub    ch,BYTE PTR [ecx]
  41a72c:	mov    ah,0xc0
  41a72e:	cmp    eax,0xad1afb16
  41a733:	lods   al,BYTE PTR ds:[esi]
  41a734:	and    DWORD PTR [eax-0x2],esp
  41a737:	or     al,0x93
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	je     0x41a743
  41a73c:	push   edx
  41a73d:	add    al,0x5b
  41a73f:	inc    eax
  41a740:	jle    0x41a7b1
  41a742:	push   0xd0cd1713
  41a747:	mov    al,ds:0x5ad32103
  41a74c:	(bad)  
  41a74d:	stos   DWORD PTR es:[edi],eax
  41a74e:	ja     0x41a70a
  41a750:	push   edi
  41a751:	aad    0xa0
  41a753:	fucomip st,st(6)
  41a755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a756:	sub    al,0x1c
  41a758:	jbe    0x41a6ea
  41a75a:	xchg   esi,eax
  41a75b:	adc    al,0x66
  41a75d:	sbb    eax,0x718d5e49
  41a762:	push   es
  41a763:	lahf   
  41a764:	cmp    eax,0xd38f80b4
  41a769:	test   DWORD PTR [esi+0x3fd38b69],esp
  41a76f:	sub    DWORD PTR [ebx+0x5f8b8add],0xfffffffe
  41a776:	dec    BYTE PTR [ecx-0x37]
  41a779:	sub    eax,0x95789a9a
  41a77e:	je     0x41a727
  41a780:	or     edx,ecx
  41a782:	jg     0x41a74a
  41a784:	std    
  41a785:	mov    eax,ds:0x9e343e20
  41a78a:	int3   
  41a78b:	in     eax,dx
  41a78c:	mov    dh,0x13
  41a78e:	lods   al,BYTE PTR ds:[esi]
  41a78f:	jo     0x41a7a5
  41a791:	jbe    0x41a7a4
  41a793:	retf   
  41a794:	dec    ecx
  41a795:	adc    al,0x78
  41a797:	push   es
  41a798:	retf   0x880
  41a79b:	xor    bh,BYTE PTR [edx+ebp*8+0x70]
  41a79f:	xchg   BYTE PTR [ebx-0x24],bl
  41a7a2:	inc    ebp
  41a7a3:	cmp    al,0x87
  41a7a5:	inc    ecx
  41a7a6:	loopne 0x41a81b
  41a7a8:	jle    0x41a829
  41a7aa:	es add eax,0x83b7054d
  41a7b0:	icebp  
  41a7b1:	or     al,0x61
  41a7b3:	enter  0x74d2,0x2
  41a7b7:	aas    
  41a7b8:	sbb    ecx,DWORD PTR [ebp+0x3]
  41a7bb:	sti    
  41a7bc:	addr16 sub eax,0x1bd467e5
  41a7c2:	ins    DWORD PTR es:[edi],dx
  41a7c3:	fcom   QWORD PTR [eax+0x729b0e3f]
  41a7c9:	dec    esi
  41a7ca:	fcmovnb st,st(1)
  41a7cc:	add    ah,BYTE PTR ds:0x3cb08c7d
  41a7d2:	cdq    
  41a7d3:	dec    eax
  41a7d4:	sub    esp,ebp
  41a7d6:	inc    edi
  41a7d7:	jp     0x41a847
  41a7d9:	push   0x73
  41a7db:	mov    ebp,0x24527497
  41a7e0:	jecxz  0x41a77b
  41a7e2:	sbb    BYTE PTR [edi+0x77],al
  41a7e5:	iret   
  41a7e6:	inc    edx
  41a7e7:	mov    ebx,0x3974577a
  41a7ec:	in     eax,0x9a
  41a7ee:	lods   eax,DWORD PTR ds:[esi]
  41a7ef:	rcr    esi,0xe9
  41a7f2:	es mov ch,0xae
  41a7f5:	mov    bh,0xea
  41a7f7:	enter  0x67e1,0xc4
  41a7fb:	dec    ebp
  41a7fc:	dec    eax
  41a7fd:	and    esp,edx
  41a7ff:	pop    ebp
  41a800:	inc    edi
  41a801:	fisttp WORD PTR [eax+0x3560f525]
  41a807:	test   DWORD PTR [edi+0x4561f8ed],eax
  41a80d:	jo     0x41a84c
  41a80f:	mov    esi,0x83c15ce3
  41a814:	shl    esi,cl
  41a816:	arpl   WORD PTR [ebx+ebp*8],di
  41a819:	dec    esp
  41a81a:	dec    eax
  41a81b:	jp     0x41a7b9
  41a81d:	mov    eax,ds:0xc2c2afb2
  41a822:	adc    ah,0x7
  41a825:	jne    0x41a824
  41a827:	inc    ebx
  41a828:	out    0x97,al
  41a82a:	(bad)
  41a82d:	ins    DWORD PTR es:[di],dx
  41a82f:	inc    ecx
  41a830:	xchg   ebp,eax
  41a831:	rol    DWORD PTR [esi+0x39],1
  41a834:	(bad)  
  41a835:	bound  ecx,QWORD PTR [edi]
  41a837:	sbb    ch,al
  41a839:	and    eax,0x49d8bdd9
  41a83e:	pop    edx
  41a83f:	jno    0x41a80f
  41a841:	mov    dh,0xe7
  41a843:	pop    ss
  41a844:	mov    ebx,0x2a7609e2
  41a849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a84a:	mov    ds:0xa4f7669a,al
  41a84f:	mul    DWORD PTR [eax]
  41a851:	out    dx,al
  41a852:	dec    eax
  41a853:	es stos DWORD PTR es:[edi],eax
  41a855:	sbb    DWORD PTR [edx-0x38a1283a],0x3a6d26a9
  41a85f:	in     eax,dx
  41a860:	stc    
  41a861:	jbe    0x41a892
  41a863:	and    dl,BYTE PTR [edi-0x45c878f2]
  41a869:	mov    ecx,0x4c63b176
  41a86e:	scas   eax,DWORD PTR es:[edi]
  41a86f:	dec    ebx
  41a870:	cwde   
  41a871:	add    edx,eax
  41a873:	clc    
  41a874:	mov    ecx,0xcc3d0853
  41a879:	mov    DWORD PTR [eax-0x5e],0x308fcd06
  41a880:	into   
  41a881:	push   es
  41a882:	cli    
  41a883:	retf   
  41a884:	sub    ebx,DWORD PTR [esp+ebx*4-0x6b]
  41a888:	xchg   esp,eax
  41a889:	sbb    eax,0xcf73ea61
  41a88e:	call   0xa8b5030
  41a893:	xor    esp,edx
  41a895:	scas   al,BYTE PTR es:[edi]
  41a896:	out    dx,eax
  41a897:	cdq    
  41a898:	push   cs
  41a899:	mov    eax,0x851aded7
  41a89e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a89f:	rol    BYTE PTR [ebx+0x1e],1
  41a8a2:	stos   DWORD PTR es:[edi],eax
  41a8a3:	(bad)  
  41a8a5:	mov    BYTE PTR [ecx+ebp*4+0x7d],ch
  41a8a9:	dec    eax
  41a8aa:	jmp    0x41a928
  41a8ac:	bound  ebp,QWORD PTR [esi]
  41a8ae:	cli    
  41a8af:	imul   ebx,DWORD PTR ds:0xa6d3607a,0xf818b1e1
  41a8b9:	push   edi
  41a8ba:	jp     0x41a8be
  41a8bc:	jp     0x41a8ad
  41a8be:	dec    ebx
  41a8bf:	cmp    al,0x99
  41a8c1:	mov    edi,0xf3d82d49
  41a8c6:	(bad)  
  41a8c7:	jecxz  0x41a878
  41a8c9:	mov    BYTE PTR [eax-0x76],bl
  41a8cc:	cmp    DWORD PTR [esi-0x6f443896],edx
  41a8d2:	cwde   
  41a8d3:	pop    ecx
  41a8d4:	adc    eax,0x265f1ce
  41a8d9:	out    0xed,al
  41a8db:	das    
  41a8dc:	(bad)  
  41a8dd:	pop    ss
  41a8de:	or     bh,BYTE PTR [edx+0x5f]
  41a8e1:	pop    es
  41a8e2:	outs   dx,DWORD PTR ds:[esi]
  41a8e3:	dec    edx
  41a8e4:	dec    edi
  41a8e5:	(bad)  
  41a8e6:	dec    edx
  41a8e7:	out    0xde,al
  41a8e9:	lock mov dl,0xfc
  41a8ec:	fild   WORD PTR [esi+0x19]
  41a8ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f0:	pop    es
  41a8f1:	or     al,0xcd
  41a8f3:	pop    ecx
  41a8f4:	jno    0x41a91d
  41a8f6:	xor    eax,0x9a0a5f24
  41a8fb:	pushf  
  41a8fc:	mov    cl,0x5f
  41a8fe:	sub    BYTE PTR [edx],bl
  41a900:	sahf   
  41a901:	sub    edx,DWORD PTR [ebp+edi*4+0x4e]
  41a905:	mov    eax,0xb69f21bb
  41a90a:	sbb    edi,edx
  41a90c:	loope  0x41a898
  41a90e:	push   cs
  41a90f:	lds    esp,FWORD PTR [eax-0x6047d551]
  41a915:	loope  0x41a957
  41a917:	aad    0x23
  41a919:	or     ah,BYTE PTR ds:0x9196b758
  41a91f:	mov    al,BYTE PTR [eax+0x67f38f52]
  41a925:	out    0x1a,al
  41a927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a928:	nop
  41a929:	inc    ecx
  41a92a:	dec    esi
  41a92b:	adc    DWORD PTR [ecx+0x13],esi
  41a92e:	mov    bl,0xd3
  41a930:	outs   dx,DWORD PTR ds:[esi]
  41a931:	adc    al,0xc
  41a933:	enter  0x2b0c,0x0
  41a937:	lock cli 
  41a939:	jae    0x41a966
  41a93b:	rcr    BYTE PTR [eax],1
  41a93d:	loop   0x41a9ae
  41a93f:	mov    esi,0xd250e497
  41a944:	pop    eax
  41a945:	dec    ebx
  41a946:	push   ebx
  41a947:	dec    eax
  41a948:	cld    
  41a949:	jne    0x41a91e
  41a94b:	outs   dx,BYTE PTR ds:[esi]
  41a94c:	jbe    0x41a8d2
  41a94e:	xchg   esi,eax
  41a94f:	test   eax,0xd72baa0b
  41a954:	sbb    DWORD PTR [ecx-0x34],ebx
  41a957:	lock ret 0x8fa2
  41a95b:	pop    eax
  41a95c:	rcr    DWORD PTR [edx-0x3721c917],cl
  41a962:	sub    ch,BYTE PTR [edx+0x32]
  41a965:	mov    esi,0xa1a95ea2
  41a96a:	jbe    0x41a949
  41a96c:	fstp   TBYTE PTR [ecx]
  41a96e:	dec    esp
  41a96f:	mov    eax,0x71c7f154
  41a974:	pop    ecx
  41a975:	push   edx
  41a976:	push   0xe81276e2
  41a97b:	mov    al,ds:0x90c439e8
  41a980:	pop    eax
  41a981:	sbb    eax,0xb957d80b
  41a986:	in     al,0x30
  41a988:	and    DWORD PTR [ebp+0x61],ebx
  41a98b:	pop    ebp
  41a98c:	cmp    esi,esi
  41a98e:	mov    edi,esi
  41a990:	(bad)  
  41a991:	fld    QWORD PTR [eax]
  41a993:	pop    ds
  41a994:	or     al,0xc2
  41a996:	out    dx,eax
  41a997:	mov    eax,ds:0x31dd57bd
  41a99c:	sbb    dl,ch
  41a99e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a99f:	push   0xffffffb3
  41a9a1:	mov    esp,0x2ecf3d1f
  41a9a6:	call   0x147ed2bb
  41a9ab:	add    BYTE PTR [ecx+0x733df0de],al
  41a9b1:	shl    BYTE PTR [edi-0x730fb831],0x80
  41a9b8:	mov    ebp,esp
  41a9ba:	pop    edi
  41a9bb:	popa   
  41a9bc:	adc    eax,0x37c0867a
  41a9c1:	and    edx,ecx
  41a9c3:	lahf   
  41a9c4:	mov    edx,0xfb3f6111
  41a9c9:	fsubr  QWORD PTR [eax+ebp*4+0xda23ae9]
  41a9d0:	out    dx,eax
  41a9d1:	cmp    edi,DWORD PTR ds:0x94525245
  41a9d7:	xchg   ebp,eax
  41a9d8:	xchg   esp,eax
  41a9d9:	fcmovnu st,st(7)
  41a9db:	pop    edx
  41a9dc:	sbb    BYTE PTR [ebp+0x48ed4237],bh
  41a9e2:	fidivr WORD PTR [ecx]
  41a9e4:	sbb    dl,bl
  41a9e6:	dec    esi
  41a9e7:	add    edx,edi
  41a9e9:	loope  0x41aa48
  41a9eb:	xor    ch,dh
  41a9ed:	mov    BYTE PTR [esi],ah
  41a9ef:	xor    eax,0x5e61597b
  41a9f4:	and    BYTE PTR [ebx-0x73045ce4],al
  41a9fa:	shl    BYTE PTR [edi+edi*2],cl
  41a9fd:	xor    ecx,DWORD PTR [edx]
  41a9ff:	(bad)  
  41aa00:	std    
  41aa01:	jne    0x41a9dc
  41aa03:	rcl    DWORD PTR [edx],0x69
  41aa06:	fidivr WORD PTR [edx+eiz*8]
  41aa09:	retf   0x1809
  41aa0c:	sbb    esp,DWORD PTR [ebx]
  41aa0e:	dec    eax
  41aa0f:	retf   0xc8d5
  41aa12:	and    BYTE PTR [ebp+0x4b],bl
  41aa15:	fs mov bh,0xe9
  41aa18:	push   edi
  41aa19:	sbb    edx,esp
  41aa1b:	cmp    ecx,DWORD PTR [edi-0x14]
  41aa1e:	in     eax,0x6f
  41aa20:	leave  
  41aa21:	addr16 jb 0x41a9e0
  41aa24:	lods   eax,DWORD PTR ds:[esi]
  41aa25:	mov    edi,fs
  41aa27:	sti    
  41aa28:	cdq    
  41aa29:	test   DWORD PTR [esi+esi*8+0x32],0x9fc434ce
  41aa31:	es pop es
  41aa33:	jns    0x41a9e9
  41aa35:	push   ds
  41aa36:	xchg   esp,edx
  41aa38:	xor    BYTE PTR [esi+ecx*4-0x72],cl
  41aa3c:	pop    edi
  41aa3d:	sub    dl,ch
  41aa3f:	and    edi,ebp
  41aa41:	or     ch,ch
  41aa43:	icebp  
  41aa44:	xor    dl,BYTE PTR [esi-0x39]
  41aa47:	and    eax,0xe3b1c170
  41aa4c:	mov    edx,0x571f35f
  41aa51:	mov    al,ds:0x99f34c8
  41aa56:	es sbb eax,0x141213fb
  41aa5c:	sti    
  41aa5d:	or     BYTE PTR [esi],0x80
  41aa60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa61:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41aa63:	adc    ah,cl
  41aa65:	jp     0x41aa25
  41aa67:	inc    edi
  41aa68:	jl     0x41aa92
  41aa6a:	cmp    DWORD PTR [ebx+ecx*1+0x21e6d9b4],eax
  41aa71:	pop    ebp
  41aa72:	pop    edi
  41aa73:	jmp    0xea22d70f
  41aa78:	hlt    
  41aa79:	pusha  
  41aa7a:	popf   
  41aa7b:	scas   eax,DWORD PTR es:[edi]
  41aa7c:	jns    0x63a4d599
  41aa82:	sbb    BYTE PTR [edx-0x32],ch
  41aa85:	jb     0x41aa87
  41aa87:	ret    
  41aa88:	fisttp DWORD PTR [eax]
  41aa8a:	lock (bad) 
  41aa8c:	and    al,0xa2
  41aa8e:	inc    ebx
  41aa8f:	in     eax,0x2d
  41aa91:	in     al,dx
  41aa92:	je     0x41aa2d
  41aa94:	cld    
  41aa95:	and    DWORD PTR [ebp+0x2c],ecx
  41aa98:	pushf  
  41aa99:	push   eax
  41aa9a:	ds retf 0xe4b8
  41aa9e:	jmp    0x41aa66
  41aaa0:	pop    edx
  41aaa1:	stc    
  41aaa2:	xor    BYTE PTR [ebx],al
  41aaa4:	pop    ss
  41aaa5:	lock les ecx,FWORD PTR [ebx]
  41aaa8:	pop    ecx
  41aaa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaaa:	jns    0x41aab9
  41aaac:	sub    ah,BYTE PTR [edx-0xc]
  41aaaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aab0:	push   esp
  41aab1:	mov    ds,WORD PTR [ecx+0x77e5299f]
  41aab7:	mov    esi,0x9cf8235b
  41aabc:	cs xchg esp,eax
  41aabe:	jns    0x41aa87
  41aac0:	cmp    eax,0xef44afb1
  41aac5:	inc    ebx
  41aac6:	ins    DWORD PTR es:[edi],dx
  41aac7:	pop    ds
  41aac8:	xchg   ecx,eax
  41aac9:	cmp    DWORD PTR [ecx-0x43174414],ebp
  41aacf:	mov    bl,0xa7
  41aad1:	inc    esp
  41aad2:	or     eax,0x8ca3cee8
  41aad7:	es mov bl,0x5
  41aada:	int    0x49
  41aadc:	retf   
  41aadd:	int3   
  41aade:	sub    BYTE PTR [esi+0x4b372bb8],0xe0
  41aae5:	push   eax
  41aae6:	sbb    eax,0x2945de41
  41aaeb:	mov    ds:0x8ee26e72,eax
  41aaf0:	les    edx,FWORD PTR [eax+ebp*8+0x30]
  41aaf4:	xchg   ecx,eax
  41aaf5:	push   esp
  41aaf6:	(bad)  
  41aaf7:	sub    BYTE PTR [edi-0x5c],cl
  41aafa:	inc    edi
  41aafb:	pop    ds
  41aafc:	cwde   
  41aafd:	cmp    DWORD PTR [ebp-0x797cca95],edi
  41ab03:	mov    ch,0xf2
  41ab05:	xchg   esp,eax
  41ab06:	xor    edx,DWORD PTR [eax-0x56]
  41ab09:	call   0x65de:0x9e735942
  41ab10:	clc    
  41ab11:	out    dx,al
  41ab12:	out    0xfa,eax
  41ab14:	adc    al,0x6f
  41ab16:	(bad)  [ebp+0x249d2f4b]
  41ab1c:	shr    esp,0x99
  41ab1f:	les    edi,FWORD PTR [edi+eax*1+0x43ccc2a6]
  41ab26:	scas   eax,DWORD PTR es:[edi]
  41ab27:	arpl   WORD PTR [esi-0x6a],sp
  41ab2a:	sub    ecx,DWORD PTR [esi+ebx*1-0x408517fe]
  41ab31:	mov    al,ds:0xb10ab82d
  41ab36:	xor    BYTE PTR [eax],bl
  41ab38:	adc    al,0xff
  41ab3a:	fst    QWORD PTR [ebp-0x36]
  41ab3d:	clc    
  41ab3e:	dec    esp
  41ab3f:	xchg   esp,eax
  41ab40:	push   edi
  41ab41:	leave  
  41ab42:	inc    ecx
  41ab43:	push   edi
  41ab44:	std    
  41ab45:	sub    dh,BYTE PTR [edi+ecx*8]
  41ab48:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41ab4a:	jmp    0x13a5a53b
  41ab4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab50:	jo     0x41ab23
  41ab52:	lods   eax,DWORD PTR ds:[esi]
  41ab53:	xchg   ebx,eax
  41ab54:	push   eax
  41ab55:	pop    esp
  41ab56:	add    ecx,0x5708f8
  41ab5c:	imul   ecx,edx
  41ab5f:	mov    DWORD PTR [ebp-0x58],ecx
  41ab62:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab65:	mov    edx,DWORD PTR [ebp-0x54]
  41ab68:	add    ecx,0x64f8da
  41ab6e:	or     ecx,edx
  41ab70:	mov    DWORD PTR [ebp-0x54],ecx
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	popf   
  41acb5:	mov    ch,0xf6
  41acb7:	inc    ebx
  41acb8:	loope  0x41ac42
  41acba:	aaa    
  41acbb:	dec    edi
  41acbc:	add    ecx,0xffffffb6
  41acbf:	rcl    DWORD PTR [edx+0x43],1
  41acc2:	(bad)  
  41acc3:	rol    BYTE PTR [ecx],0x0
  41acc6:	add    BYTE PTR [eax],al
  41acc8:	inc    ebx
  41acc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41accd:	jb     0x41ad41
  41accf:	outs   dx,BYTE PTR gs:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp+0x3b81916e],0x8
  41e48b:	jl     0x41e485
  41e48d:	popa   
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	xchg   BYTE PTR [edx],al
  41e492:	add    BYTE PTR [eax],al
  41e494:	jmp    0x60ff:0xd8e2b10b
  41e49b:	inc    ebx
  41e49c:	sahf   
  41e49d:	and    edi,0x42976ebd
  41e4a3:	lods   al,BYTE PTR ds:[esi]
  41e4a4:	clc    
  41e4a5:	pop    esi
  41e4a6:	shr    edx,cl
  41e4a8:	mov    esp,0x2937ab89
  41e4ad:	imul   eax,DWORD PTR [ebp+0x49662a41],0xf68282fd
  41e4b7:	test   DWORD PTR [edi-0x67],edx
  41e4ba:	fwait
  41e4bb:	mov    bh,0x42
  41e4bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4be:	popa   
  41e4bf:	sti    
  41e4c0:	test   eax,0x605acb1c
  41e4c5:	or     al,0x4b
  41e4c7:	mov    ds:0xd0b94218,eax
  41e4cc:	loop   0x41e520
  41e4ce:	xor    BYTE PTR [esi+0x0],bl
  41e4d1:	mov    eax,0x4a619fd5
  41e4d6:	outs   dx,BYTE PTR ds:[esi]
  41e4d7:	mov    ebp,ds
  41e4d9:	test   eax,0x792aaf37
  41e4de:	pushw  cs
  41e4e0:	rcl    ebp,1
  41e4e2:	or     eax,0xdcd16c5c
  41e4e7:	sbb    BYTE PTR [edx+0x59b27219],ah
  41e4ed:	test   DWORD PTR ds:0x17d8618f,edi
  41e4f3:	push   esi
  41e4f4:	mov    bl,0x17
  41e4f6:	pop    eax
  41e4f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4f8:	ins    DWORD PTR es:[edi],dx
  41e4f9:	bound  edi,QWORD PTR [edx+0x28]
  41e4fc:	mov    edi,0x14f19afa
  41e501:	icebp  
  41e502:	push   0xffffffd1
  41e504:	test   eax,0x75c2fffc
  41e509:	hlt    
  41e50a:	dec    esi
  41e50b:	nop
  41e50c:	mov    ss:0xe79b3bb6,al
  41e512:	jb     0x41e514
  41e514:	push   edx
  41e515:	lahf   
  41e516:	ss cs pop es
  41e519:	loopne 0x41e528
  41e51b:	cld    
  41e51c:	dec    ebp
  41e51d:	popf   
  41e51e:	xor    BYTE PTR [ecx-0x2c],bl
  41e521:	mov    ebp,0xb11fbf3a
  41e526:	or     eax,0xf66a0ba6
  41e52b:	ficom  DWORD PTR [ebp+0x45077c4e]
  41e531:	mov    WORD PTR [ebx-0x5c],fs
  41e534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e535:	dec    ecx
  41e536:	je     0x41e569
  41e538:	addr16 fwait
  41e53a:	sub    eax,0x90c6939c
  41e53f:	cdq    
  41e540:	scas   al,BYTE PTR es:[edi]
  41e541:	jne    0x41e559
  41e543:	cmp    esi,DWORD PTR [esi+0x54018330]
  41e549:	test   DWORD PTR [edx+0x52bac99f],ebp
  41e54f:	clc    
  41e550:	dec    ebp
  41e551:	cs pop ecx
  41e553:	jbe    0x41e585
  41e555:	pop    ebp
  41e556:	jl     0x41e51b
  41e558:	leave  
  41e559:	or     eax,0x63cf7ae
  41e55e:	jge    0x41e537
  41e560:	jl     0x41e5ab
  41e562:	sub    DWORD PTR [ecx],ecx
  41e564:	and    dl,BYTE PTR [eax]
  41e566:	push   eax
  41e567:	cli    
  41e568:	xchg   edx,eax
  41e569:	push   ebp
  41e56a:	pop    edi
  41e56b:	push   0xffffff84
  41e56d:	and    bh,BYTE PTR [eax+0x6c5ab49]
  41e573:	jb     0x41e551
  41e575:	cwde   
  41e576:	push   edx
  41e577:	mov    dl,0xb9
  41e579:	mov    esi,0xa5d648bf
  41e57e:	push   esp
  41e57f:	xlat   BYTE PTR ds:[ebx]
  41e580:	jge    0x41e5cd
  41e582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e583:	test   al,ah
  41e585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e586:	retf   0x54d2
  41e589:	lahf   
  41e58a:	adc    dh,BYTE PTR [ecx]
  41e58c:	push   ebp
  41e58d:	push   esp
  41e58e:	lds    esi,FWORD PTR [edi-0x10]
  41e591:	int    0x53
  41e593:	ins    DWORD PTR es:[edi],dx
  41e594:	fdiv   st(2),st
  41e596:	sbb    ebx,ebp
  41e598:	push   esp
  41e599:	fnop   
  41e59b:	shl    BYTE PTR [eax-0x4633fcd0],cl
  41e5a1:	lock push esi
  41e5a3:	mov    bl,0x24
  41e5a5:	or     al,0xca
  41e5a7:	jmp    0xa208:0xbaae9ca4
  41e5ae:	and    BYTE PTR [eax-0x58],ah
  41e5b1:	pop    edi
  41e5b2:	mov    esp,0x4f657e4b
  41e5b7:	push   ss
  41e5b8:	out    0x63,eax
  41e5ba:	jmp    0xb3e68589
  41e5bf:	adc    DWORD PTR [eax],0xfffffffc
  41e5c2:	or     BYTE PTR [ebp+ecx*1+0x6fc2ccbc],dl
  41e5c9:	stos   BYTE PTR es:[edi],al
  41e5ca:	iret   
  41e5cb:	adc    eax,0xd3e6e7c4
  41e5d0:	cmp    al,0x33
  41e5d2:	in     al,0x49
  41e5d4:	xchg   esp,eax
  41e5d5:	call   0xfaf6:0xe396de23
  41e5dc:	dec    edx
  41e5dd:	xlat   BYTE PTR ds:[ebx]
  41e5de:	or     eax,0x438f95f0
  41e5e3:	mov    ch,0x51
  41e5e5:	add    DWORD PTR [eax+edx*2+0x74],ecx
  41e5e9:	push   cs
  41e5ea:	repz loopne 0x41e606
  41e5ed:	imul   ebx,edx,0x7faf0ac5
  41e5f3:	push   es
  41e5f4:	or     al,BYTE PTR [edi]
  41e5f6:	pop    ds
  41e5f7:	shl    BYTE PTR [ebp+0x67b85ff8],1
  41e5fd:	int3   
  41e5fe:	cwde   
  41e5ff:	arpl   WORD PTR [ebp+0x3f55903a],bx
  41e605:	leave  
  41e606:	mov    ebx,0xee6a6695
  41e60b:	cmp    edx,ebp
  41e60d:	pusha  
  41e60e:	out    dx,eax
  41e60f:	cmp    al,0xe5
  41e611:	std    
  41e612:	test   BYTE PTR [esi-0x2e46ea7f],ch
  41e618:	je     0x41e5f9
  41e61a:	inc    ebx
  41e61b:	xchg   esi,eax
  41e61c:	sbb    esi,DWORD PTR [ecx]
  41e61e:	call   0xc1f38080
  41e623:	sub    cl,ah
  41e625:	ss aad 0xd2
  41e628:	pop    esi
  41e629:	outs   dx,DWORD PTR ds:[esi]
  41e62a:	sub    edx,eax
  41e62c:	es dec ebp
  41e62e:	loopne 0x41e65b
  41e630:	sbb    eax,0xeb0a3307
  41e635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e636:	outs   dx,BYTE PTR ds:[esi]
  41e637:	mov    bl,0x30
  41e639:	sti    
  41e63a:	mov    al,ds:0x4d080e24
  41e63f:	ror    dh,1
  41e641:	jmp    0x41e67a
  41e643:	jne    0x41e66c
  41e645:	in     eax,dx
  41e646:	dec    ebx
  41e647:	pop    eax
  41e648:	(bad)  
  41e649:	push   ds
  41e64a:	add    eax,0x90051df3
  41e64f:	std    
  41e650:	jbe    0x41e617
  41e652:	bound  esp,QWORD PTR [ecx]
  41e654:	cmp    BYTE PTR [esi-0x59],dl
  41e657:	aam    0x94
  41e659:	or     ah,BYTE PTR [edi+0x4a]
  41e65c:	retf   
  41e65d:	nop
  41e65e:	mov    ds:0x646e1e48,al
  41e663:	int    0x5f
  41e665:	mov    WORD PTR [ebp+0x1f],es
  41e668:	adc    ah,BYTE PTR [ebx+eiz*8]
  41e66b:	ins    DWORD PTR es:[edi],dx
  41e66c:	in     al,dx
  41e66d:	inc    esp
  41e66e:	jecxz  0x41e61c
  41e670:	pop    ebp
  41e671:	or     eax,0x6ae16d0a
  41e676:	pusha  
  41e677:	int    0x76
  41e679:	jecxz  0x41e5fe
  41e67b:	mov    al,0x5e
  41e67d:	shr    DWORD PTR [edx-0x44],cl
  41e680:	lods   al,BYTE PTR ds:[esi]
  41e681:	in     al,0xa1
  41e683:	cdq    
  41e684:	push   ebp
  41e685:	mov    BYTE PTR [ecx+eax*8-0x4bf8ca0b],ch
  41e68c:	jle    0x41e646
  41e68e:	lahf   
  41e68f:	jle    0x41e615
  41e691:	fwait
  41e692:	mov    al,0x2d
  41e694:	leave  
  41e695:	cmc    
  41e696:	(bad)  
  41e697:	out    dx,eax
  41e698:	enter  0xc8f7,0x61
  41e69c:	popa   
  41e69d:	mov    eax,edi
  41e69f:	fild   DWORD PTR [ecx-0x2e14837e]
  41e6a5:	pop    es
  41e6a6:	xor    al,0x9a
  41e6a8:	adc    eax,0xba7786a9
  41e6ad:	into   
  41e6ae:	fadd   QWORD PTR [eax+0x44]
  41e6b1:	loope  0x41e638
  41e6b3:	iret   
  41e6b4:	lea    edx,[esi-0x34]
  41e6b7:	cli    
  41e6b8:	pushf  
  41e6b9:	test   al,0x62
  41e6bb:	pop    ebp
  41e6bc:	shr    BYTE PTR [edx],0x2
  41e6bf:	fimul  WORD PTR [ebx]
  41e6c1:	push   0x5c
  41e6c3:	xchg   edx,eax
  41e6c4:	aam    0x4
  41e6c6:	inc    eax
  41e6c7:	inc    esi
  41e6c8:	lahf   
  41e6c9:	leave  
  41e6ca:	pusha  
  41e6cb:	mov    cl,0x39
  41e6cd:	fst    DWORD PTR [ebp+0x39d807dd]
  41e6d3:	cs add al,0x31
  41e6d6:	nop
  41e6d7:	das    
  41e6d8:	add    esi,ebx
  41e6da:	cs mov eax,0x93b6ec69
  41e6e0:	add    al,0x49
  41e6e2:	popa   
  41e6e3:	leave  
  41e6e4:	scas   eax,DWORD PTR es:[edi]
  41e6e5:	push   edx
  41e6e6:	mov    dl,0x62
  41e6e8:	dec    edi
  41e6e9:	data16 add cl,BYTE PTR [edi+edx*2]
  41e6ed:	xchg   ebp,eax
  41e6ee:	xchg   BYTE PTR [ebp+0x7eefd2a],al
  41e6f4:	test   ecx,edx
  41e6f6:	out    dx,al
  41e6f7:	div    DWORD PTR [eax+esi*1]
  41e6fa:	fprem1 
  41e6fc:	dec    esp
  41e6fd:	enter  0x39c,0x7a
  41e701:	jo     0x41e6c6
  41e703:	push   ebx
  41e704:	repz pop ss
  41e706:	mov    WORD PTR [esi],cs
  41e708:	retf   0xec5c
  41e70b:	(bad)  
  41e70d:	xor    ebp,DWORD PTR [ecx-0x47]
  41e710:	fwait
  41e711:	mov    ah,0xe2
  41e713:	jecxz  0x41e6cb
  41e715:	scas   al,BYTE PTR es:[edi]
  41e716:	repnz daa 
  41e718:	ror    BYTE PTR [ecx+0x0],cl
  41e71b:	add    BYTE PTR [edi+0x4c],dh
  41e71e:	idiv   dh
  41e720:	(bad)  
  41e721:	(bad)  
  41e722:	jg     0x41e6f1
  41e724:	mov    ah,0x6b
  41e726:	mov    dh,0x14
  41e728:	fld    QWORD PTR [edx]
  41e72a:	aaa    
  41e72b:	out    dx,al
  41e72c:	jle    0x41e792
  41e72e:	add    DWORD PTR [eax],eax
  41e730:	xchg   BYTE PTR [edx],al
  41e732:	add    BYTE PTR [eax],al
  41e734:	pop    eax
  41e735:	rcr    DWORD PTR [ebx-0x6b52f4f2],cl
  41e73b:	xchg   edi,eax
  41e73c:	idiv   BYTE PTR [edi-0x1f]
  41e73f:	lds    edi,FWORD PTR [edi]
  41e741:	jecxz  0x41e711
  41e743:	mov    al,0x8
  41e745:	fdivr  DWORD PTR [ebx+ebx*8]
  41e748:	(bad)  
  41e749:	dec    edx
  41e74a:	push   esi
  41e74b:	jge    0x41e7b0
  41e74d:	mov    ecx,0x83858607
  41e752:	out    dx,eax
  41e753:	daa    
  41e754:	loop   0x41e757
  41e756:	jb     0x41e7b3
  41e758:	mov    dh,0xed
  41e75a:	loope  0x41e7bc
  41e75c:	push   0xffffff97
  41e75e:	fadd   QWORD PTR [eax-0x5b689a04]
  41e764:	and    DWORD PTR [esi],esi
  41e766:	retf   
  41e767:	adc    BYTE PTR [ebp+0x1e18d64b],bh
  41e76d:	mov    ds:0xba343957,eax
  41e772:	daa    
  41e773:	inc    ebx
  41e774:	dec    esp
  41e775:	inc    ebp
  41e776:	jle    0x41e77f
  41e778:	mov    fs,WORD PTR [edi+0x53]
  41e77b:	(bad)  
  41e77c:	shl    bh,cl
  41e77e:	jle    0x41e733
  41e780:	loopne 0x41e7b6
  41e782:	scas   al,BYTE PTR es:[edi]
  41e783:	mov    edx,0x59ad2719
  41e788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e789:	cdq    
  41e78a:	adc    BYTE PTR [ebp+0x5ea06427],0x8e
  41e791:	inc    ecx
  41e792:	mov    ch,0xc2
  41e794:	out    0xca,eax
  41e796:	mov    ah,0x82
  41e798:	(bad)  
  41e799:	push   edi
  41e79a:	jae    0x41e7a8
  41e79c:	jo     0x41e7a9
  41e79e:	add    BYTE PTR ds:0x8580eac5,dl
  41e7a4:	and    eax,0xc9a00b26
  41e7a9:	sub    al,0x9a
  41e7ab:	jg     0x41e77b
  41e7ad:	adc    edx,esp
  41e7af:	in     al,0xf5
  41e7b1:	ret    
  41e7b2:	int3   
  41e7b3:	mov    al,fs:0xd0b06e1d
  41e7b9:	rcr    DWORD PTR [edx-0x75],cl
  41e7bc:	pop    ds
  41e7bd:	jns    0x41e750
  41e7bf:	fnsave [edi]
  41e7c1:	je     0x41e752
  41e7c3:	fs call 0x5ab907cf
  41e7c9:	add    al,0x61
  41e7cb:	pop    es
  41e7cc:	dec    eax
  41e7cd:	in     al,dx
  41e7ce:	gs sub al,0x53
  41e7d1:	mov    ebx,0xaff6a396
  41e7d6:	inc    ebx
  41e7d7:	out    0x87,eax
  41e7d9:	inc    ecx
  41e7da:	mov    dh,0x24
  41e7dc:	add    dh,BYTE PTR [ebx-0x59d30356]
  41e7e2:	ret    
  41e7e3:	ins    WORD PTR es:[edi],dx
  41e7e5:	pop    ebp
  41e7e6:	jle    0x41e7f0
  41e7e8:	out    0x86,al
  41e7ea:	add    BYTE PTR [edi],ch
  41e7ec:	cld    
  41e7ed:	mov    ebx,0xc57b180d
  41e7f2:	retf   
  41e7f3:	jle    0x41e7a5
  41e7f5:	sub    DWORD PTR [ecx-0x20eb6784],0x15ddabe0
  41e7ff:	dec    edx
  41e800:	mov    ss,WORD PTR [edx]
  41e802:	std    
  41e803:	(bad)  
  41e804:	xor    BYTE PTR [edi+0x34bde38b],bl
  41e80a:	jle    0x41e87e
  41e80c:	or     ebx,0xffffffe1
  41e80f:	jnp    0x41e847
  41e811:	and    BYTE PTR [edi+0x329f1b39],ch
  41e817:	push   0x6fa13f60
  41e81c:	fwait
  41e81d:	fs xchg ebp,eax
  41e81f:	pop    esi
  41e820:	rcr    BYTE PTR ds:0x63960324,0x97
  41e827:	lea    ebp,[esi+0x3d9185cd]
  41e82d:	sbb    eax,0x4169eaeb
  41e832:	bound  edx,QWORD PTR [edi+0x3b]
  41e835:	in     al,dx
  41e836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e837:	aad    0x5
  41e839:	bound  eax,QWORD PTR [esi+0x1861d0e4]
  41e83f:	lock loop 0x41e7ef
  41e842:	aad    0x59
  41e844:	xchg   edi,eax
  41e845:	aad    0x68
  41e847:	xchg   esp,eax
  41e848:	cmp    ah,BYTE PTR [edx+0x2e]
  41e84b:	(bad)  
  41e84c:	sbb    al,BYTE PTR [esi-0x23cbd09e]
  41e852:	inc    ebp
  41e853:	mov    ecx,0x9e1e15e
  41e858:	mov    ah,BYTE PTR [edi]
  41e85a:	inc    ebx
  41e85b:	fistp  QWORD PTR [esi-0x55]
  41e85e:	and    al,0xe6
  41e860:	sub    BYTE PTR [esi],dh
  41e862:	pusha  
  41e863:	out    0xc1,al
  41e865:	out    0xa1,eax
  41e867:	mov    al,ds:0x2c091c64
  41e86c:	es out dx,al
  41e86e:	pop    edx
  41e86f:	stos   BYTE PTR es:[edi],al
  41e870:	shl    DWORD PTR [esi+0x72],0xd9
  41e874:	sti    
  41e875:	fsubr  QWORD PTR [ecx-0x7]
  41e878:	mov    esi,0xb4b0599b
  41e87d:	(bad)  
  41e87e:	and    DWORD PTR [ebx-0x677adb5a],esi
  41e884:	sbb    eax,0x85d6c005
  41e889:	int3   
  41e88a:	sub    DWORD PTR [edx],esp
  41e88c:	inc    esi
  41e88d:	push   es
  41e88e:	cli    
  41e88f:	imul   edx,ecx,0x5be83c8e
  41e895:	or     ebx,0xb76a5cb0
  41e89b:	pop    ecx
  41e89c:	xchg   DWORD PTR [esi+eax*2],ebp
  41e89f:	and    al,0xd7
  41e8a1:	push   esp
  41e8a2:	call   0x53e4:0xc1f9c7f8
  41e8a9:	(bad)  
  41e8aa:	jl     0x41e896
  41e8ac:	imul   ecx,DWORD PTR [ebx],0x98cbde6f
  41e8b2:	xchg   DWORD PTR [ecx-0x11],edi
  41e8b5:	jns    0x41e8fe
  41e8b7:	mov    cl,0x16
  41e8b9:	lods   eax,DWORD PTR ds:[esi]
  41e8ba:	shl    BYTE PTR [ebx-0x4d3763ee],1
  41e8c0:	(bad)  
  41e8c1:	push   ebx
  41e8c2:	dec    esp
  41e8c3:	cdq    
  41e8c4:	inc    edi
  41e8c5:	jmp    0xb76c605a
  41e8ca:	sub    BYTE PTR [edi+0x46965d5f],dl
  41e8d0:	lahf   
  41e8d1:	(bad)  
  41e8d2:	fdiv   st(0),st
  41e8d4:	fwait
  41e8d5:	push   ss
  41e8d6:	jp     0x41e8fc
  41e8d8:	shr    BYTE PTR [ebp-0x43],0x9
  41e8dc:	sbb    bl,BYTE PTR [ebx+0x6f1f763c]
  41e8e2:	int3   
  41e8e3:	xchg   esp,eax
  41e8e4:	mov    esp,0xd9a78ae4
  41e8e9:	sub    ch,BYTE PTR [esi+ecx*1+0x44]
  41e8ed:	add    BYTE PTR [ecx-0x7005a726],cl
  41e8f3:	int3   
  41e8f4:	adc    DWORD PTR [ecx+eax*4-0x4a],0xfffffff7
  41e8f9:	sub    dh,dh
  41e8fb:	loope  0x41e8fb
  41e8fd:	jns    0x41e91d
  41e8ff:	call   0x7d813ec8
  41e904:	mov    ch,0x7
  41e906:	aas    
  41e907:	xchg   edi,eax
  41e908:	push   es
  41e909:	add    al,0xfb
  41e90b:	call   0x614b8dd1
  41e910:	out    0xe2,eax
  41e912:	sub    BYTE PTR [esi],ch
  41e914:	(bad)  
  41e915:	bound  eax,QWORD PTR [ecx+0x5b05bb3d]
  41e91b:	push   eax
  41e91c:	inc    esp
  41e91d:	sbb    esp,esi
  41e91f:	jl     0x41e96e
  41e921:	mov    edi,0xe16c9d0c
  41e926:	in     eax,0xcd
  41e928:	fdivr  DWORD PTR [edx-0xab75f6]
  41e92e:	test   BYTE PTR [ebx],dh
  41e930:	xor    dh,BYTE PTR [ebx+0x3b]
  41e933:	nop
  41e934:	lods   eax,DWORD PTR ds:[esi]
  41e935:	rcr    BYTE PTR [ecx],cl
  41e937:	retf   0x2431
  41e93a:	shl    DWORD PTR [edx],cl
  41e93c:	add    esi,DWORD PTR [esi-0x2]
  41e93f:	(bad)  
  41e940:	aam    0x5b
  41e942:	mov    ebx,0x93c75701
  41e947:	enter  0x49e9,0x20
  41e94b:	test   DWORD PTR [edi+0x54],0x4c7f814d
  41e952:	cmp    ebx,esi
  41e954:	add    ecx,DWORD PTR [edi-0x52]
  41e957:	fadd   QWORD PTR ds:0xaf68b0e2
  41e95d:	in     al,0xb4
  41e95f:	or     ah,BYTE PTR [ecx-0x28b26b70]
  41e965:	xor    dl,BYTE PTR [edi]
  41e967:	push   ebx
  41e968:	les    edx,FWORD PTR [eax-0x4f98ce02]
  41e96e:	mov    ebp,0xb1a60980
  41e973:	in     eax,0x54
  41e975:	in     al,dx
  41e976:	cmp    al,0xa2
  41e978:	test   DWORD PTR [edx-0x68],esp
  41e97b:	test   BYTE PTR [ecx+0x3f],bh
  41e97e:	mov    ah,0x66
  41e980:	sub    eax,DWORD PTR [esp+eax*2]
  41e983:	call   0x22e7:0x1f6da184
  41e98a:	xchg   edx,eax
  41e98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e98c:	jnp    0x41e9d2
  41e98e:	xchg   ebx,eax
  41e98f:	popa   
  41e990:	push   ss
  41e991:	mov    ebx,ebx
  41e993:	add    BYTE PTR [edi],cl
  41e995:	adc    BYTE PTR [edi-0x40],ah
  41e998:	and    BYTE PTR [edx-0x8049dcf],cl
  41e99e:	lods   al,BYTE PTR ds:[esi]
  41e99f:	div    DWORD PTR [ebx+0x411b7483]
  41e9a5:	lahf   
  41e9a6:	push   eax
  41e9a7:	(bad)  
  41e9a9:	aam    0x6
  41e9ab:	icebp  
  41e9ac:	push   ebx
  41e9ad:	out    dx,al
  41e9ae:	dec    esi
  41e9af:	dec    esp
  41e9b0:	dec    ebx
  41e9b1:	mov    esp,0xacbd3a38
  41e9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9b7:	mov    esi,0x6a85
  41e9bc:	pop    es
  41e9bd:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41e9c3:	pop    ds
  41e9c4:	xchg   BYTE PTR [ebx],bl
  41e9c6:	mov    edx,0xe469e5d0
  41e9cb:	sub    eax,DWORD PTR [edi+eiz*2]
  41e9ce:	add    DWORD PTR [eax],eax
  41e9d0:	xchg   BYTE PTR [edx],al
  41e9d2:	add    BYTE PTR [eax],al
  41e9d4:	sub    eax,0x75e00a5
  41e9d9:	mov    dh,0xdc
  41e9db:	ja     0x41ea3f
  41e9dd:	and    al,0x9
  41e9df:	mov    al,0x53
  41e9e1:	shr    BYTE PTR [edi],1
  41e9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9e4:	jg     0x41e9e4
  41e9e6:	jnp    0x41ea43
  41e9e8:	(bad)  
  41e9e9:	push   esi
  41e9ea:	lods   eax,DWORD PTR ds:[esi]
  41e9eb:	daa    
  41e9ec:	mov    edx,0x7b06dc69
  41e9f1:	mov    ecx,0x6f015a4
  41e9f6:	cli    
  41e9f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9f8:	push   0x26
  41e9fa:	inc    ebx
  41e9fb:	inc    esi
  41e9fc:	rcl    DWORD PTR [edi],1
  41e9fe:	push   0x72b747cc
  41ea03:	out    dx,al
  41ea04:	add    DWORD PTR [edi+0xbb75493],edx
  41ea0a:	out    0x9e,al
  41ea0c:	jmp    0x41ea49
  41ea0e:	ins    DWORD PTR es:[edi],dx
  41ea0f:	mov    WORD PTR [esi+0x6c],ds
  41ea12:	ret    0x715a
  41ea15:	cmp    ah,ah
  41ea17:	and    DWORD PTR [ebx-0x5c309865],edi
  41ea1d:	sbb    ebp,DWORD PTR [ecx-0x36]
  41ea20:	mov    edi,0xc80c8b9f
  41ea25:	cmp    BYTE PTR ds:0xfb3b581a,bh
  41ea2b:	ins    BYTE PTR es:[edi],dx
  41ea2c:	inc    BYTE PTR [esi-0x6b877b5]
  41ea32:	leave  
  41ea33:	lods   eax,DWORD PTR ds:[esi]
  41ea34:	jnp    0x41ea7a
  41ea36:	push   ds
  41ea37:	and    al,0x84
  41ea39:	add    al,0xee
  41ea3b:	pop    esi
  41ea3c:	lock bound esp,QWORD PTR [esi]
  41ea3f:	lea    esi,[edi]
  41ea41:	outs   dx,DWORD PTR ds:[esi]
  41ea42:	shr    BYTE PTR [eax],cl
  41ea44:	in     eax,0x23
  41ea46:	leave  
  41ea47:	jbe    0x41ea5a
  41ea49:	adc    eax,0xbf297d9a
  41ea4e:	ins    BYTE PTR es:[edi],dx
  41ea4f:	pop    ebp
  41ea50:	imul   ebx,DWORD PTR [ecx],0xfafef8b5
  41ea56:	adc    dl,BYTE PTR [ecx-0x1bd0f51c]
  41ea5c:	pop    ss
  41ea5d:	lds    ecx,FWORD PTR [edi+edi*4-0x71097f20]
  41ea64:	pop    sp
  41ea66:	adc    BYTE PTR [edi],ah
  41ea68:	cwde   
  41ea69:	shl    DWORD PTR [edi],1
  41ea6b:	or     BYTE PTR [esi+ebp*4+0xdf2e33a],bl
  41ea72:	jmp    0x26355b8d
  41ea77:	inc    ebx
  41ea78:	or     edi,ebp
  41ea7a:	jmp    0x1171:0xf1fcd5f6
  41ea81:	pusha  
  41ea82:	mov    esp,0x90a974d9
  41ea87:	shl    DWORD PTR [edx+ebp*2+0x3b76f4c7],cl
  41ea8e:	ins    BYTE PTR es:[edi],dx
  41ea8f:	mov    ecx,0x885adec5
  41ea94:	imul   eax,edi,0x5a
  41ea97:	pop    es
  41ea98:	cmc    
  41ea99:	xchg   ebx,eax
  41ea9a:	mov    eax,DWORD PTR [edx+0x2d]
  41ea9d:	cdq    
  41ea9e:	loopne 0x41ea35
  41eaa0:	xor    BYTE PTR [esi],dl
  41eaa2:	fnstenv [ebx+edx*2-0x677628f2]
  41eaa9:	jb     0x41eab9
  41eaab:	mov    ah,0xd
  41eaad:	sub    DWORD PTR [ebx],esi
  41eaaf:	rcr    BYTE PTR [ecx-0x5172d147],cl
  41eab5:	cli    
  41eab6:	add    al,0x21
  41eab8:	jg     0x41eae0
  41eaba:	mov    BYTE PTR [ebx+edi*8+0x4f56ee28],dh
  41eac1:	fwait
  41eac2:	jecxz  0x41ea71
  41eac4:	mov    cl,0x55
  41eac6:	call   0xda02:0x92f18b11
  41eacd:	push   ebp
  41eace:	fs retf 0x6036
  41ead2:	sbb    eax,0x57e2dbb
  41ead7:	stos   DWORD PTR es:[edi],eax
  41ead8:	jno    0x41eab0
  41eada:	repnz cld 
  41eadc:	xor    eax,0x696aa9db
  41eae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eae2:	repz dec ecx
  41eae4:	or     WORD PTR [eax-0x2d],0x69b2
  41eaea:	dec    ebp
  41eaeb:	or     eax,0x411f85b7
  41eaf0:	add    eax,ecx
  41eaf2:	mov    eax,0xb6d84d99
  41eaf7:	shr    ecx,0x23
  41eafa:	jbe    0x41eb3e
  41eafc:	jbe    0x41eacc
  41eafe:	cli    
  41eaff:	mov    ebx,0x56789f0c
  41eb04:	adc    BYTE PTR [esi-0x7c],ah
  41eb07:	inc    eax
  41eb08:	add    al,0xdb
  41eb0a:	and    al,0x54
  41eb0c:	cmp    esp,DWORD PTR [ecx-0xb2f1c13]
  41eb12:	in     eax,0xed
  41eb14:	mov    ebx,0xe10b440a
  41eb19:	call   0xb3ae8a4
  41eb1e:	xchg   ebp,eax
  41eb1f:	dec    edx
  41eb20:	(bad)  [eax]
  41eb22:	push   cs
  41eb23:	mov    dl,0x88
  41eb25:	pop    edi
  41eb26:	cli    
  41eb27:	push   esi
  41eb28:	repnz and BYTE PTR ds:0x862e599f,ch
  41eb2f:	ins    BYTE PTR es:[edi],dx
  41eb30:	inc    ecx
  41eb31:	call   0x46dffc43
  41eb36:	jecxz  0x41eb80
  41eb38:	lds    ecx,FWORD PTR [ebx-0x64a0ed3b]
  41eb3e:	or     ah,BYTE PTR [esi-0x35]
  41eb41:	fwait
  41eb42:	imul   edx,DWORD PTR [ebp+esi*8+0x38],0x77
  41eb47:	inc    esi
  41eb48:	test   DWORD PTR [ecx+0x6784b4d8],ebx
  41eb4e:	stos   BYTE PTR es:[edi],al
  41eb4f:	and    ch,BYTE PTR [eax]
  41eb51:	stos   DWORD PTR es:[edi],eax
  41eb52:	stos   DWORD PTR es:[edi],eax
  41eb53:	sub    al,0x51
  41eb55:	fs fxch st(6)
  41eb58:	fs in  eax,dx
  41eb5a:	pop    ss
  41eb5b:	mov    al,BYTE PTR [ebx-0x4a]
  41eb5e:	mov    eax,0xae757b30
  41eb63:	sti    
  41eb64:	dec    edx
  41eb65:	das    
  41eb66:	div    DWORD PTR ds:0x64677882
  41eb6c:	cmovns edx,ecx
  41eb6f:	js     0x41eb68
  41eb71:	pop    es
  41eb72:	test   eax,0x6e8f33a4
  41eb77:	retf   
  41eb78:	mov    edx,0x12b0ea
  41eb7d:	addr16 sub edi,edi
  41eb80:	sub    al,ch
  41eb82:	lss    edx,FWORD PTR [esi]
  41eb85:	pushf  
  41eb86:	push   ecx
  41eb87:	push   ebx
  41eb88:	xor    dl,dl
  41eb8a:	mov    DWORD PTR [ecx+0x425f552d],ebx
  41eb90:	jno    0x41eb25
  41eb92:	jl     0x41ebfd
  41eb94:	cmp    eax,0x6903698f
  41eb99:	sti    
  41eb9a:	es cwde 
  41eb9c:	jnp    0x41ec1b
  41eb9e:	pusha  
  41eb9f:	ins    BYTE PTR es:[edi],dx
  41eba0:	sbb    DWORD PTR [esi+0x3896a3c1],0xcbb260bf
  41ebaa:	xchg   edx,eax
  41ebab:	adc    edi,edi
  41ebad:	fbld   TBYTE PTR [eax-0x2d760d7e]
  41ebb3:	out    dx,eax
  41ebb4:	inc    edi
  41ebb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebb6:	mov    ds:0xc71ace2a,eax
  41ebbb:	test   al,0x5f
  41ebbd:	sahf   
  41ebbe:	frstor [esp+ebp*4-0x3268b0b9]
  41ebc5:	mov    eax,ds:0xaad2b063
  41ebca:	jbe    0x41ec08
  41ebcc:	dec    esp
  41ebcd:	mov    ds:0x80505d07,eax
  41ebd2:	mov    WORD PTR [ebp+0x5159e004],ss
  41ebd8:	rol    BYTE PTR [ebx-0x2d],1
  41ebdb:	aaa    
  41ebdc:	adc    edx,DWORD PTR [edx-0x6893b70a]
  41ebe2:	into   
  41ebe3:	hlt    
  41ebe4:	push   esi
  41ebe5:	sti    
  41ebe6:	iret   
  41ebe7:	call   0xdcfb:0x6b6873c1
  41ebee:	les    ecx,FWORD PTR [edi+0x76]
  41ebf1:	xor    ebp,ecx
  41ebf3:	fidivr WORD PTR [eax]
  41ebf5:	sub    bh,dh
  41ebf7:	adc    dh,bh
  41ebf9:	call   0xb1378c3e
  41ebfe:	or     esp,DWORD PTR [ecx]
  41ec00:	push   ebp
  41ec01:	rcr    dl,0xd6
  41ec04:	jns    0x41eba8
  41ec06:	mov    ds:0xc9bd4b50,eax
  41ec0b:	adc    dh,cl
  41ec0d:	sbb    ah,BYTE PTR [ecx+0xa]
  41ec10:	mov    cl,0x20
  41ec12:	lea    ebx,[edx]
  41ec14:	mov    esp,DWORD PTR [eax+0x56]
  41ec17:	loop   0x41ebce
  41ec19:	adc    al,0x68
  41ec1b:	fidiv  DWORD PTR [ecx]
  41ec1d:	std    
  41ec1e:	jnp    0x41ebef
  41ec20:	loopne 0x41ec05
  41ec22:	loope  0x41ebb6
  41ec24:	retf   
  41ec25:	and    ebp,eax
  41ec27:	fild   WORD PTR [edx+0x1e]
  41ec2a:	inc    ecx
  41ec2b:	(bad)  
  41ec2c:	retf   0x5acd
  41ec2f:	sbb    eax,0xd541b279
  41ec34:	retf   0xb22e
  41ec37:	push   ebx
  41ec38:	sbb    esp,DWORD PTR [edi+0x1c]
  41ec3b:	std    
  41ec3c:	jecxz  0x41ec7e
  41ec3e:	ins    DWORD PTR es:[edi],dx
  41ec3f:	ficom  DWORD PTR [eax+0x536ad22e]
  41ec45:	mov    ds:0x477fb206,al
  41ec4a:	mov    esi,0xed93ea05
  41ec4f:	mov    dh,0xe4
  41ec51:	call   0x4d35:0xbb2cb550
  41ec58:	xchg   edi,eax
  41ec59:	clc    
  41ec5a:	add    BYTE PTR [eax],al
  41ec5c:	push   ds
  41ec5d:	add    al,0xa7
  41ec5f:	(bad)  
  41ec60:	mov    edi,0xf6dd7ee7
  41ec65:	jp     0x41ec30
  41ec67:	push   esi
  41ec68:	dec    ecx
  41ec69:	scas   al,BYTE PTR es:[edi]
  41ec6a:	aas    
  41ec6b:	test   BYTE PTR [edx-0x79fffe97],cl
  41ec71:	add    al,BYTE PTR [eax]
  41ec73:	add    BYTE PTR [eax],ch
  41ec75:	or     sp,WORD PTR [ebp-0x50]
  41ec79:	add    ecx,DWORD PTR [edx-0x4ce3d86d]
  41ec7f:	ud0    esp,DWORD PTR [ebx+ebx*8-0x410ff565]
  41ec87:	leave  
  41ec88:	and    edi,DWORD PTR [edi+0x5acb69a3]
  41ec8e:	inc    esp
  41ec8f:	xor    eax,0xc1377c73
  41ec94:	push   esp
  41ec95:	jns    0x41ec9d
  41ec97:	cs cmc 
  41ec99:	rcl    bl,0x9c
  41ec9c:	xchg   ebx,eax
  41ec9d:	daa    
  41ec9e:	shr    DWORD PTR [edx],0x9c
  41eca1:	loop   0x41ecd1
  41eca3:	ret    0x3ef4
  41eca6:	mov    cl,BYTE PTR [edi-0x3a]
  41eca9:	dec    edi
  41ecaa:	les    esp,FWORD PTR [edx+ebx*4]
  41ecad:	xchg   esi,eax
  41ecae:	shl    ebx,cl
  41ecb0:	xor    BYTE PTR [ebx+0x7b],al
  41ecb3:	cmp    ah,0xd8
  41ecb6:	cwde   
  41ecb7:	les    eax,FWORD PTR [ecx*8-0x2b0b6bed]
  41ecbe:	mov    cl,0x4b
  41ecc0:	stc    
  41ecc1:	fisub  DWORD PTR [ecx+edx*1+0x70]
  41ecc5:	js     0x41ecff
  41ecc7:	call   0xd590:0x6b5a83b3
  41ecce:	sbb    DWORD PTR [esi+0x52f63134],eax
  41ecd4:	sar    DWORD PTR [ecx+eax*2],0xcf
  41ecd8:	and    DWORD PTR [ebx+0x32afbad2],0xffffffd2
  41ecdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ece0:	lods   eax,DWORD PTR ds:[esi]
  41ece1:	loop   0x41ed4f
  41ece3:	adc    al,0x37
  41ece5:	retf   0x85bc
  41ece8:	cld    
  41ece9:	xor    al,0x44
  41eceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecec:	dec    eax
  41eced:	dec    ebp
  41ecee:	bound  ecx,QWORD PTR [ecx-0xc]
  41ecf1:	cmp    ebx,DWORD PTR [esi-0x74]
  41ecf4:	sbb    eax,0x298485b8
  41ecfa:	or     eax,0xac3069ad
  41ecff:	jge    0x41ec84
  41ed01:	sbb    DWORD PTR [eax],edx
  41ed03:	inc    eax
  41ed04:	sub    DWORD PTR [ecx+0x76],eax
  41ed07:	dec    esi
  41ed08:	test   BYTE PTR [edi+esi*2+0x3174bc1b],dh
  41ed0f:	ret    
  41ed10:	mov    al,ds:0x7c710904
  41ed15:	xor    al,0x2d
  41ed17:	fisubr WORD PTR [ebx+0x35]
  41ed1a:	dec    esp
  41ed1b:	pop    ebp
  41ed1c:	pop    ebp
  41ed1d:	jae    0x41eca8
  41ed1f:	retf   
  41ed20:	inc    edi
  41ed21:	cmp    esp,DWORD PTR [ebx]
  41ed23:	jnp    0x41ed09
  41ed25:	in     al,dx
  41ed26:	outs   dx,DWORD PTR ds:[esi]
  41ed27:	mov    bl,0xa0
  41ed29:	mov    BYTE PTR [edx+0x78],bl
  41ed2c:	sub    al,0x42
  41ed2e:	mov    DWORD PTR [di-0x1f],esi
  41ed32:	cmovo  edx,esp
  41ed35:	xchg   DWORD PTR [esi-0x7f],ebx
  41ed38:	fist   DWORD PTR [esi+ebp*4]
  41ed3b:	nop
  41ed3c:	mov    dh,0x9e
  41ed3e:	loopne 0x41ed13
  41ed40:	pop    es
  41ed41:	push   ds
  41ed42:	into   
  41ed43:	rcl    WORD PTR [edx-0x7b],0x4f
  41ed48:	sti    
  41ed49:	gs aas 
  41ed4b:	sub    BYTE PTR [eax],ah
  41ed4d:	xor    BYTE PTR [edx],al
  41ed4f:	out    dx,eax
  41ed50:	push   ecx
  41ed51:	sbb    esi,DWORD PTR [ecx-0x1e18f806]
  41ed57:	pop    es
  41ed58:	jp     0x41ed88
  41ed5a:	iret   
  41ed5b:	scas   eax,DWORD PTR es:[edi]
  41ed5c:	loopne 0x41eddc
  41ed5e:	rcr    esp,cl
  41ed60:	in     al,0x53
  41ed62:	out    dx,al
  41ed63:	cli    
  41ed64:	pop    ebx
  41ed65:	jno    0x41ed28
  41ed67:	shr    DWORD PTR [eax],cl
  41ed69:	out    0x5b,al
  41ed6b:	stos   BYTE PTR es:[edi],al
  41ed6c:	xor    BYTE PTR [ebx],dl
  41ed6e:	and    BYTE PTR [esi-0x6d095c26],ch
  41ed74:	out    0x3,al
  41ed76:	loope  0x41ed43
  41ed78:	mov    eax,0xfdaf6ab9
  41ed7d:	mov    edx,0xb3f644db
  41ed82:	push   edx
  41ed83:	lock push ebp
  41ed85:	mov    ah,BYTE PTR [ecx-0x6a2f86ec]
  41ed8b:	push   esi
  41ed8c:	cmp    BYTE PTR [ebp-0x78d6967a],dl
  41ed92:	imul   esi,edi,0x38949b7c
  41ed98:	pusha  
  41ed99:	or     DWORD PTR [edi+0x71],0xf4b380c8
  41eda0:	push   ss
  41eda1:	mov    BYTE PTR es:[ebp-0x1cfdd98c],ch
  41eda8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eda9:	test   BYTE PTR [esi+esi*2-0x4f720f0d],bl
  41edb0:	neg    edi
  41edb2:	sahf   
  41edb3:	mov    dl,0x98
  41edb5:	js     0x41ede1
  41edb7:	loope  0x41ed3a
  41edb9:	(bad)  
  41edba:	loopne 0x41ee38
  41edbc:	lods   eax,DWORD PTR ds:[esi]
  41edbd:	add    al,0xbd
  41edbf:	sbb    BYTE PTR gs:[ebx-0x68bc548],0x78
  41edc7:	lock or DWORD PTR [ebp-0x2226ae2f],ecx
  41edce:	test   esi,esi
  41edd0:	mov    ah,0xce
  41edd2:	dec    eax
  41edd3:	jns    0x41ede9
  41edd5:	aas    
  41edd6:	(bad)  
  41edd7:	push   eax
  41edd8:	or     al,0x79
  41edda:	cdq    
  41eddb:	pop    eax
  41eddc:	fstp   st(6)
  41edde:	mov    DWORD PTR [ecx+0x73],ecx
  41ede1:	vpandn ymm0,ymm0,YMMWORD PTR [edi]
  41ede5:	adc    ch,BYTE PTR [edi+0x10]
  41ede8:	enter  0x8f7e,0x6e
  41edec:	jnp    0x41edc6
  41edee:	jmp    0xa751:0x8fbe0ccb
  41edf5:	rcl    DWORD PTR [ebx-0x46],1
  41edf8:	fnstenvw [edx]
  41edfb:	sahf   
  41edfc:	jns    0x41eda2
  41edfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edff:	or     edx,DWORD PTR ds:0xca45920
  41ee05:	xchg   ebp,eax
  41ee06:	or     BYTE PTR [esi+0x1],dh
  41ee09:	shl    bl,0x39
  41ee0c:	and    BYTE PTR [edx+0x74],ah
  41ee0f:	add    eax,0xffffffc9
  41ee12:	jl     0x41ee32
  41ee14:	out    0x34,eax
  41ee16:	adc    eax,0x2d8378a7
  41ee1b:	dec    esp
  41ee1c:	sub    eax,0xf25815ec
  41ee21:	scas   al,BYTE PTR es:[edi]
  41ee22:	cwde   
  41ee23:	ins    BYTE PTR es:[edi],dx
  41ee24:	xor    eax,DWORD PTR [esi-0x172aaa8]
  41ee2a:	dec    edx
  41ee2b:	jno    0x41ede3
  41ee2d:	inc    esp
  41ee2e:	hlt    
  41ee2f:	out    dx,al
  41ee30:	aam    0xd1
  41ee32:	lods   al,BYTE PTR ds:[esi]
  41ee33:	sub    esi,DWORD PTR [esi]
  41ee35:	push   ds
  41ee36:	mov    DWORD PTR es:[edx],edx
  41ee39:	xor    al,0x1e
  41ee3b:	stos   DWORD PTR es:[edi],eax
  41ee3c:	jmp    0x7ac4eff3
  41ee41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee42:	mov    esi,es
  41ee44:	dec    esi
  41ee45:	shl    ebp,1
  41ee47:	add    al,0xd3
  41ee49:	or     BYTE PTR [eax],bl
  41ee4b:	jnp    0x41ee18
  41ee4d:	mov    bl,0xab
  41ee4f:	or     bh,BYTE PTR [ebx+0x53]
  41ee52:	ss push ebp
  41ee54:	inc    eax
  41ee55:	cwde   
  41ee56:	mov    al,BYTE PTR [eax+0x58f92183]
  41ee5c:	sar    BYTE PTR [edx+0x28],1
  41ee5f:	cmp    al,BYTE PTR ds:0x2deb7cf
  41ee65:	fadd   QWORD PTR cs:[esi+0x46379a37]
  41ee6c:	sub    bl,BYTE PTR [ecx+esi*4]
  41ee6f:	fstp   QWORD PTR ds:0xd4376471
  41ee75:	jp     0x41eeb2
  41ee77:	add    BYTE PTR [ebp+0x31],0x47
  41ee7b:	out    dx,al
  41ee7c:	enter  0xb246,0x6a
  41ee80:	(bad)  
  41ee81:	mov    esp,ebx
  41ee83:	aam    0xbc
  41ee85:	mov    ebx,0x566fafeb
  41ee8a:	pop    ds
  41ee8b:	adc    bl,BYTE PTR [edi-0x3715698e]
  41ee91:	mov    ch,0x5
  41ee93:	mov    esi,0xf86c80cb
  41ee98:	lea    ecx,[ebp+0xe]
  41ee9b:	xor    BYTE PTR [ebx+0x5aeaec4],bl
  41eea1:	rcr    BYTE PTR [esi-0x20f75dc2],0xbb
  41eea8:	arpl   bx,bx
  41eeaa:	pusha  
  41eeab:	arpl   ax,dx
  41eead:	fwait
  41eeae:	jmpw   0xd17f
  41eeb2:	cmp    eax,0x788490d1
  41eeb7:	mov    al,ds:0x6e33342a
  41eebc:	and    edi,ebx
  41eebe:	and    DWORD PTR [edx+esi*4+0x6c],esp
  41eec2:	std    
  41eec3:	call   0xa709:0x822e0059
  41eeca:	adc    al,0x3b
  41eecc:	fisub  WORD PTR [edi+edi*2-0x6888e9a8]
  41eed3:	icebp  
  41eed4:	cmp    al,0xc6
  41eed6:	jge    0x41eed9
  41eed8:	push   cs
  41eed9:	push   0x6b
  41eedb:	ja     0x41ee93
  41eedd:	loop   0x41eeef
  41eedf:	jae    0x41eed2
  41eee1:	rol    BYTE PTR [edx-0x6a8f2798],1
  41eee7:	push   esp
  41eee8:	jge    0x41eeb0
  41eeea:	addr16 mov ds:0x6ed7,eax
  41eeee:	mov    ch,0x2c
  41eef0:	rcr    BYTE PTR [esi],0x95
  41eef3:	fmul   DWORD PTR ds:0x999795cf
  41eef9:	mov    bl,0x0
  41eefb:	add    BYTE PTR [eax-0x77],bh
  41eefe:	hlt    
  41eeff:	mov    al,0xf5
  41ef01:	std    
  41ef02:	jl     0x41eecd
  41ef04:	dec    edi
  41ef05:	pop    ds
  41ef06:	cmp    DWORD PTR [ebx-0x76],ebp
  41ef09:	jo     0x1adff9d
  41ef0f:	add    BYTE PTR [esi-0x1afffffe],al
  41ef15:	mov    ah,0xfd
  41ef17:	or     al,0xd
  41ef19:	pop    ss
  41ef1a:	scas   al,BYTE PTR es:[edi]
  41ef1b:	mov    bh,0xa2
  41ef1d:	adc    bh,BYTE PTR [edi+0x5a]
  41ef20:	dec    edx
  41ef21:	loope  0x41eed5
  41ef23:	not    edi
  41ef25:	sbb    BYTE PTR [ecx],dl
  41ef27:	xlat   BYTE PTR ds:[ebx]
  41ef28:	je     0x41ef90
  41ef2a:	push   esi
  41ef2b:	repz fwait
  41ef2d:	mov    ds:0xd0df5023,eax
  41ef32:	call   0xa1f1:0x7a5cfa1a
  41ef39:	ins    BYTE PTR es:[edi],dx
  41ef3a:	dec    ebx
  41ef3b:	in     al,dx
  41ef3c:	sub    BYTE PTR [edx+edx*2-0x3e],bl
  41ef40:	cmp    eax,0x2d373366
  41ef45:	dec    esp
  41ef46:	mov    BYTE PTR [ecx+0x60],cl
  41ef49:	add    DWORD PTR [ebp-0x29],esi
  41ef4c:	sahf   
  41ef4d:	mov    edi,0xa47585f6
  41ef52:	daa    
  41ef53:	aad    0x60
  41ef55:	sub    eax,0xd21e3dcf
  41ef5a:	mov    eax,?
  41ef5c:	(bad)  
  41ef5d:	ds jns 0x41efa2
  41ef60:	or     eax,0xed7df943
  41ef65:	push   esi
  41ef66:	loopne 0x41ef9f
  41ef68:	ror    DWORD PTR [edi],0xbf
  41ef6b:	lock lock test al,0x4a
  41ef6f:	hlt    
  41ef70:	push   eax
  41ef71:	sbb    eax,0x7b084fbb
  41ef76:	jl     0x41eefc
  41ef78:	and    eax,0x961c82bc
  41ef7d:	call   0x3c3bb0fd
  41ef82:	ret    
  41ef83:	popa   
  41ef84:	fsub   QWORD PTR [edx+0x2c]
  41ef87:	bnd jl 0x41efb7
  41ef8a:	dec    ebx
  41ef8b:	in     al,0xf5
  41ef8d:	sub    eax,0xa70c31e5
  41ef92:	xor    esi,ebx
  41ef94:	pop    ss
  41ef95:	adc    al,0x6f
  41ef97:	mov    ds:0x37668230,al
  41ef9c:	push   eax
  41ef9d:	sbb    ebp,DWORD PTR [edx]
  41ef9f:	push   esi
  41efa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa1:	jl     0x41ef2b
  41efa3:	retf   0xb2a2
  41efa6:	shr    BYTE PTR [ecx+0x6aba3723],0xe
  41efad:	and    al,0x1
  41efaf:	and    ebx,ecx
  41efb1:	in     eax,0x4c
  41efb3:	mov    fs,WORD PTR ds:[eax]
  41efb6:	dec    edx
  41efb7:	rol    ecx,cl
  41efb9:	pop    esi
  41efba:	ja     0x41ef66
  41efbc:	mov    dh,BYTE PTR [esi]
  41efbe:	ror    BYTE PTR [eax+0x322ecca],1
  41efc4:	push   ds
  41efc5:	cwde   
  41efc6:	mov    ch,0xa7
  41efc8:	push   DWORD PTR [edi+0x18]
  41efcb:	mov    ds:0x28bd7926,eax
  41efd0:	and    al,0xd4
  41efd2:	popa   
  41efd3:	fmul   QWORD PTR [ebp+ebp*1-0x24]
  41efd7:	inc    ebp
  41efd8:	push   0x5f5ccf2e
  41efdd:	in     eax,dx
  41efde:	sahf   
  41efdf:	cld    
  41efe0:	ja     0x41f033
  41efe2:	stc    
  41efe3:	scas   eax,DWORD PTR es:[edi]
  41efe4:	sub    eax,0xfc51d9ed
  41efe9:	mov    ebx,0x9e950070
  41efee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efef:	push   ecx
  41eff0:	dec    esp
  41eff1:	dec    esp
  41eff2:	xchg   ecx,eax
  41eff3:	xchg   edx,eax
  41eff4:	and    eax,0xbbf29845
  41eff9:	sub    DWORD PTR [eax-0x7557ba12],ebx
  41efff:	gs retf 
  41f001:	push   ebx
  41f002:	jge    0x41effe
  41f004:	rcl    eax,0x5a
  41f007:	arpl   WORD PTR [esi-0x2526a76e],bp
  41f00d:	sbb    eax,0xec4c0b02
  41f012:	call   0xc73d1bbf
  41f017:	pusha  
  41f018:	retf   
  41f019:	or     ebp,edi
  41f01b:	mov    edx,0xd0b10f7d
  41f020:	mov    edx,DWORD PTR [esi+0x7c]
  41f023:	stos   DWORD PTR es:[edi],eax
  41f024:	fwait
  41f025:	mov    ds:0xfc5e0fdb,al
  41f02a:	enter  0xd93a,0xf3
  41f02e:	or     edx,DWORD PTR [eax-0x2cdac81]
  41f034:	jmp    0xfaee:0x90069912
  41f03b:	cmp    dh,BYTE PTR [esi+0x75375cd3]
  41f041:	scas   al,BYTE PTR es:[edi]
  41f042:	mov    edi,DWORD PTR [esi-0x3ab96fc0]
  41f048:	lahf   
  41f049:	mov    ebx,0xf9789f38
  41f04e:	loope  0x41f062
  41f050:	icebp  
  41f051:	shl    bl,0x31
  41f054:	or     al,0xf0
  41f056:	xchg   DWORD PTR [eax+0x44],esi
  41f059:	scas   al,BYTE PTR es:[edi]
  41f05a:	scas   al,BYTE PTR es:[edi]
  41f05b:	not    BYTE PTR ds:0x2ef60523
  41f061:	not    DWORD PTR [edi-0x19]
  41f064:	dec    ebx
  41f065:	std    
  41f066:	xchg   ecx,eax
  41f067:	cmp    ch,BYTE PTR [ebp+0x3f]
  41f06a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f06b:	ja     0x41f0a5
  41f06d:	jl     0x41efff
  41f06f:	shl    bh,1
  41f071:	(bad)  
  41f072:	mov    ebp,0x731ce95f
  41f077:	xchg   esp,eax
  41f078:	mov    eax,0xe25a3c13
  41f07d:	scas   eax,DWORD PTR es:[edi]
  41f07e:	xchg   ecx,eax
  41f07f:	out    0xe4,al
  41f081:	dec    ebx
  41f082:	dec    esp
  41f083:	retf   
  41f084:	jno    0x41f052
  41f086:	xor    BYTE PTR [ebp+ecx*8-0x54e35110],bh
  41f08d:	mov    BYTE PTR [ecx-0x4fabe364],al
  41f093:	test   eax,0xa53c44f4
  41f098:	jno    0x41f06b
  41f09a:	ror    DWORD PTR [esi+0x7530587f],cl
  41f0a0:	pusha  
  41f0a1:	out    dx,al
  41f0a2:	add    eax,0x24f2a4c1
  41f0a7:	sub    edi,esp
  41f0a9:	push   0x1349d1b6
  41f0ae:	push   0x5e
  41f0b0:	addr16 mov edi,0x18c54e47
  41f0b6:	push   es
  41f0b7:	idiv   DWORD PTR [esi]
  41f0b9:	push   cs
  41f0ba:	ret    0x4180
  41f0bd:	imul   edi,esp,0x60
  41f0c0:	xor    eax,esp
  41f0c2:	sbb    eax,0x8cb19e8e
  41f0c7:	paddsw mm0,QWORD PTR [ebp+0x57052263]
  41f0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0cf:	pop    ds
  41f0d0:	add    DWORD PTR [edx+0x3cc48a97],esi
  41f0d6:	sub    eax,0x81f1b5c9
  41f0db:	fnstsw WORD PTR [edx-0x56]
  41f0de:	jne    0x41f13f
  41f0e0:	mov    ebp,DWORD PTR [esi+edx*4-0x75fbb89a]
  41f0e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0e8:	loop   0x41f0b0
  41f0ea:	xchg   BYTE PTR [edi],al
  41f0ec:	xlat   BYTE PTR ds:[ebx]
  41f0ed:	stos   DWORD PTR es:[edi],eax
  41f0ee:	std    
  41f0ef:	pop    ecx
  41f0f0:	pusha  
  41f0f1:	test   esi,0x73b889f8
  41f0f7:	mov    ecx,0xad5828f
  41f0fc:	leave  
  41f0fd:	add    esi,0xffffff9e
  41f100:	and    eax,DWORD PTR [eiz*8-0x5b28285e]
  41f107:	inc    eax
  41f108:	out    0x6e,eax
  41f10a:	mov    al,ds:0x942cd76d
  41f10f:	xor    ebp,eax
  41f111:	adc    al,0x25
  41f113:	fmul   DWORD PTR [ebx-0x2de019e6]
  41f119:	push   ds
  41f11a:	inc    edx
  41f11b:	or     eax,0x1631d47c
  41f120:	xor    DWORD PTR [eax],0xfffffff1
  41f123:	retf   0xe70c
  41f126:	sti    
  41f127:	xchg   ebp,eax
  41f128:	xor    edx,DWORD PTR [esi]
  41f12a:	push   esi
  41f12b:	jb     0x41f124
  41f12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f12e:	cli    
  41f12f:	pop    edi
  41f130:	pop    edi
  41f131:	das    
  41f132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f133:	jp     0x41f0be
  41f135:	shr    DWORD PTR [edx],0xc5
  41f138:	cmovae esp,DWORD PTR [esi]
  41f13b:	pop    ss
  41f13c:	inc    edx
  41f13d:	cdq    
  41f13e:	or     al,0x66
  41f140:	lds    ebx,FWORD PTR [edx]
  41f142:	pop    edx
  41f143:	lea    edi,[ebp+edx*4+0x3d]
  41f147:	sahf   
  41f148:	mov    WORD PTR [ebx],fs
  41f14a:	aas    
  41f14b:	and    al,0x89
  41f14d:	scas   eax,DWORD PTR es:[edi]
  41f14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f14f:	jg     0x41f146
  41f151:	jmp    0x41f195
  41f153:	enter  0x2222,0x64
  41f157:	js     0x41f150
  41f159:	jmp    0x41f1ac
  41f15b:	ja     0x41f14b
  41f15d:	ret    0xbfae
  41f160:	push   ebx
  41f161:	and    eax,0x725a93f8
  41f166:	std    
  41f167:	inc    esp
  41f168:	mov    ebp,0x9e22009e
  41f16d:	sahf   
  41f16e:	inc    edx
  41f16f:	sahf   
  41f170:	cld    
  41f171:	(bad)  [ebx+0x51b5318d]
  41f177:	dec    esp
  41f178:	pusha  
  41f179:	push   0x8c3467db
  41f17e:	jo     0x41f1fa
  41f180:	xchg   BYTE PTR [ebp+0x4f],ah
  41f183:	jo     0x41f1db
  41f185:	test   edi,ebp
  41f187:	mov    ah,BYTE PTR [ebp-0x27]
  41f18a:	stos   DWORD PTR es:[edi],eax
  41f18b:	or     eax,0x49f95b6c
  41f190:	std    
  41f191:	hlt    
  41f192:	dec    edx
  41f193:	hlt    
  41f194:	das    
  41f195:	pop    eax
  41f196:	fld    st(1)
  41f198:	(bad)  
  41f199:	push   edi
  41f19a:	add    BYTE PTR [eax],al
  41f19c:	pop    esp
  41f19d:	mov    dh,BYTE PTR [edi-0x23800895]
  41f1a3:	mov    edi,0xd9de0759
  41f1a8:	push   eax
  41f1a9:	xchg   edx,eax
  41f1aa:	fstp   TBYTE PTR [edi-0x6a]
  41f1ad:	outs   dx,BYTE PTR ds:[esi]
  41f1ae:	add    DWORD PTR [eax],eax
  41f1b0:	xchg   BYTE PTR [edx],al
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	neg    BYTE PTR [ebx-0x67]
  41f1b7:	test   ah,bh
  41f1b9:	jns    0x41f212
  41f1bb:	dec    BYTE PTR [esi]
  41f1bd:	or     ah,BYTE PTR ds:0x30ccb541
  41f1c3:	frstor [edx]
  41f1c5:	imul   ebp,DWORD PTR [edx],0x33
  41f1c8:	mov    eax,ds:0xdf4af7d0
  41f1cd:	in     al,dx
  41f1ce:	sub    al,0xbc
  41f1d0:	lock lahf 
  41f1d2:	sub    bl,BYTE PTR [esi-0x34]
  41f1d5:	mov    bl,0x5d
  41f1d7:	(bad)  
  41f1d8:	sti    
  41f1d9:	push   es
  41f1da:	int    0x8f
  41f1dc:	push   ss
  41f1dd:	adc    al,0x1b
  41f1df:	xor    ch,BYTE PTR ss:[ecx-0x6]
  41f1e3:	ins    DWORD PTR es:[edi],dx
  41f1e4:	cs mov esp,0x5477041d
  41f1eb:	loop   0x41f21e
  41f1ed:	xor    al,0x77
  41f1ef:	jne    0x41f179
  41f1f1:	xor    eax,0xfffffff7
  41f1f4:	nop
  41f1f5:	nop
  41f1f6:	scas   al,BYTE PTR es:[edi]
  41f1f7:	or     bl,BYTE PTR [ebx]
  41f1f9:	sub    dh,al
  41f1fb:	adc    eax,0xed2f9371
  41f200:	or     BYTE PTR [eax],ch
  41f202:	and    ah,BYTE PTR [ecx-0x17]
  41f205:	mov    ebx,0x292c02ea
  41f20a:	inc    edi
  41f20b:	in     al,0xfb
  41f20d:	jmp    0x3a8df428
  41f212:	push   es
  41f213:	mov    ecx,0x4d5dcb41
  41f218:	lock dec ebx
  41f21a:	inc    edi
  41f21b:	(bad)  
  41f21c:	into   
  41f21d:	fwait
  41f21e:	sub    eax,0xffffff98
  41f221:	mov    WORD PTR [eax],ds
  41f223:	sub    BYTE PTR [edi+eiz*2],dl
  41f226:	adc    ch,ah
  41f228:	mov    eax,0xd4a78215
  41f22d:	hlt    
  41f22e:	push   cs
  41f22f:	dec    ecx
  41f230:	pop    edi
  41f231:	mov    al,0x3e
  41f233:	cmp    cl,dh
  41f235:	fistp  QWORD PTR [ebp-0x6a2a4103]
  41f23b:	jge    0x41f201
  41f23d:	aad    0xa4
  41f23f:	fld    QWORD PTR [eax]
  41f241:	loop   0x41f208
  41f243:	or     edi,DWORD PTR [ebx-0x4a]
  41f246:	mov    ah,0x5a
  41f248:	mov    eax,0x8b57cbc3
  41f24d:	fxch   st(4)
  41f24f:	mov    edx,0x1e5cf45d
  41f254:	jle    0x41f20c
  41f256:	and    bl,BYTE PTR [ecx+0x7c]
  41f259:	scas   al,BYTE PTR es:[edi]
  41f25a:	cli    
  41f25b:	inc    ebx
  41f25c:	push   ebx
  41f25d:	sub    DWORD PTR [ecx-0x2a],0xfc0a3595
  41f264:	jo     0x41f215
  41f266:	sub    eax,0x5919583b
  41f26b:	call   0x6920:0x4a055323
  41f272:	inc    edi
  41f273:	ins    DWORD PTR es:[edi],dx
  41f274:	ret    0x14cc
  41f277:	mov    cl,0xed
  41f279:	xchg   esp,eax
  41f27a:	cmp    eax,0x7df4cd43
  41f27f:	xchg   esi,eax
  41f280:	inc    ebp
  41f281:	idiv   BYTE PTR [edi]
  41f283:	mov    WORD PTR [eax],ds
  41f285:	in     al,dx
  41f286:	std    
  41f287:	sub    ebp,ebx
  41f289:	sbb    ecx,ebp
  41f28b:	into   
  41f28c:	mov    eax,0xa401d0d2
  41f291:	pop    edx
  41f292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f293:	lods   eax,DWORD PTR ds:[esi]
  41f294:	jne    0x41f22c
  41f296:	push   es
  41f297:	cmp    eax,0xcd4e1a83
  41f29c:	inc    ebp
  41f29d:	call   0x76f7:0x35f4e76
  41f2a4:	jl     0x41f23f
  41f2a6:	xchg   esp,eax
  41f2a7:	and    DWORD PTR [ecx+eax*2-0x5f],edi
  41f2ab:	call   0x29e2:0x1a56a411
  41f2b2:	int3   
  41f2b3:	cmp    DWORD PTR [ebx-0x3fdda484],eax
  41f2b9:	or     DWORD PTR [ebx],eax
  41f2bb:	(bad)  
  41f2bc:	jge    0x41f2a0
  41f2be:	lahf   
  41f2bf:	mov    al,ds:0xb3ae49a6
  41f2c4:	and    edi,ecx
  41f2c6:	push   ss
  41f2c7:	repnz mov DWORD PTR [edi],ebx
  41f2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2cb:	retf   
  41f2cc:	inc    edx
  41f2cd:	les    ebx,FWORD PTR [eax-0x55fa7559]
  41f2d3:	daa    
  41f2d4:	mov    ?,edx
  41f2d6:	push   esi
  41f2d7:	inc    eax
  41f2d8:	dec    esi
  41f2d9:	sub    DWORD PTR [ecx],edx
  41f2db:	sub    ebx,esi
  41f2dd:	adc    al,0x8
  41f2df:	sbb    DWORD PTR [ebx+0x47eb08d1],edi
  41f2e5:	das    
  41f2e6:	fadd   st,st(7)
  41f2e8:	dec    esi
  41f2e9:	add    ah,ch
  41f2eb:	je     0x41f2ed
  41f2ed:	mov    es,WORD PTR [eax-0x1e14fe4c]
  41f2f3:	inc    ebx
  41f2f4:	inc    eax
  41f2f5:	mov    eax,0x90a74170
  41f2fa:	xor    bh,BYTE PTR [ebx]
  41f2fc:	int3   
  41f2fd:	pop    edi
  41f2fe:	out    dx,al
  41f2ff:	hlt    
  41f300:	sbb    al,0x23
  41f302:	(bad)  
  41f303:	xlat   BYTE PTR ds:[ebx]
  41f304:	xchg   edx,eax
  41f305:	push   edi
  41f306:	push   esp
  41f307:	iret   
  41f308:	(bad)  
  41f30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f30b:	jb     0x41f2f1
  41f30d:	test   eax,0x9bd590b6
  41f312:	jbe    0x41f390
  41f314:	loopne 0x41f311
  41f316:	sbb    al,0x1a
  41f318:	imul   edi,DWORD PTR ds:0x3fbbc2b3,0xa2e4e05
  41f322:	xlat   BYTE PTR ds:[ebx]
  41f323:	xchg   DWORD PTR [ebx-0xa],eax
  41f326:	dec    ecx
  41f327:	sbb    al,0xb
  41f329:	mov    ah,0x17
  41f32b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f32c:	scas   eax,DWORD PTR es:[edi]
  41f32d:	cdq    
  41f32e:	mov    edx,0x2b8037c8
  41f333:	mov    dh,0x71
  41f335:	jle    0x41f351
  41f337:	inc    eax
  41f338:	mov    al,ds:0xe82e8eb7
  41f33d:	jo     0x41f39c
  41f33f:	jmp    0x69a:0xe72a2e0b
  41f346:	cmp    DWORD PTR [eax-0x21],edi
  41f349:	test   BYTE PTR [ebp+0x5e1e0294],al
  41f34f:	call   0x2644:0x2b10bb94
  41f356:	in     eax,0x7c
  41f358:	fcom   DWORD PTR ds:[ecx*1+0x66d7d5a0]
  41f360:	push   ds
  41f361:	jne    0x41f2e6
  41f363:	loope  0x41f3cd
  41f365:	pop    esi
  41f366:	inc    esp
  41f367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f368:	push   esi
  41f369:	dec    ebp
  41f36a:	jb     0x41f3d5
  41f36c:	aam    0xd9
  41f36e:	sahf   
  41f36f:	dec    eax
  41f370:	iret   
  41f371:	sbb    al,0xf1
  41f373:	mov    dh,0x76
  41f375:	xchg   edi,esi
  41f377:	cmc    
  41f378:	mov    eax,0x7986fa7
  41f37d:	fisttp DWORD PTR [edx-0x6ed6113]
  41f383:	pop    ss
  41f384:	xchg   ebp,eax
  41f385:	xchg   edi,eax
  41f386:	and    dh,BYTE PTR [esi+edx*4+0x3739276]
  41f38d:	setg   dh
  41f390:	adc    DWORD PTR [edx-0x44281c96],eax
  41f396:	and    al,0xcf
  41f398:	in     eax,dx
  41f399:	es jmp 0x26b59417
  41f39f:	popa   
  41f3a0:	cmp    edx,DWORD PTR [ecx-0x58]
  41f3a3:	fidivr DWORD PTR [edi-0x57]
  41f3a6:	mov    ds,WORD PTR [eax]
  41f3a8:	shl    BYTE PTR [edi+ecx*1-0x5f450e98],cl
  41f3af:	enter  0x4e1b,0x6c
  41f3b3:	in     eax,dx
  41f3b4:	loopne 0x41f33d
  41f3b6:	cmp    al,0xa1
  41f3b8:	and    eax,0x58055f48
  41f3bd:	lea    cx,[ebp-0x4119b102]
  41f3c4:	sub    esi,edx
  41f3c6:	mov    ch,0x65
  41f3c8:	in     eax,dx
  41f3c9:	addr16 repz push esp
  41f3cc:	int    0xc1
  41f3ce:	push   es
  41f3cf:	jmp    0x41f37b
  41f3d1:	ja     0x41f452
  41f3d3:	dec    eax
  41f3d4:	cli    
  41f3d5:	dec    ebp
  41f3d6:	and    al,0x3f
  41f3d8:	jmp    0x41f3cc
  41f3da:	jo     0x41f3d8
  41f3dc:	test   DWORD PTR [esi+ecx*1],ecx
  41f3df:	pop    ebp
  41f3e0:	pop    ecx
  41f3e1:	(bad)  
  41f3e2:	fistp  WORD PTR [ebx-0x1f9aba58]
  41f3e8:	sbb    edi,DWORD PTR [ebp+0x2892cb14]
  41f3ee:	cmp    ecx,esi
  41f3f0:	pop    es
  41f3f1:	sbb    edx,DWORD PTR [esi]
  41f3f3:	xlat   BYTE PTR ds:[ebx]
  41f3f4:	ins    DWORD PTR es:[edi],dx
  41f3f5:	sub    cl,ah
  41f3f7:	dec    esi
  41f3f8:	aaa    
  41f3f9:	adc    DWORD PTR ds:0x6e981498,edx
  41f3ff:	dec    ebp
  41f400:	fdivr  st(7),st
  41f402:	cmp    DWORD PTR ss:[ebx-0x7d722df],0x22
  41f40a:	jmp    0x811b5b7a
  41f40f:	adc    DWORD PTR [edx],edi
  41f411:	into   
  41f412:	ror    DWORD PTR [edi-0x12],cl
  41f415:	xchg   ebx,eax
  41f416:	mov    dh,0xff
  41f418:	bound  edx,QWORD PTR [edi*2+0x12792feb]
  41f41f:	ss int 0xd1
  41f422:	(bad)  
  41f423:	cli    
  41f424:	lahf   
  41f425:	mov    ss,WORD PTR [ebp+eiz*8-0x5e0db997]
  41f42c:	and    al,0x7c
  41f42e:	test   BYTE PTR [esi],bl
  41f430:	push   eax
  41f431:	jnp    0x41f43e
  41f433:	cmp    ecx,ecx
  41f435:	sbb    BYTE PTR [edx+0xe15a2],bl
  41f43b:	add    BYTE PTR [edi-0x402578e6],ah
  41f441:	(bad)  
  41f443:	jg     0x41f3f1
  41f445:	pop    ss
  41f446:	aad    0x14
  41f448:	push   ebx
  41f449:	dec    ebp
  41f44a:	cmp    edx,DWORD PTR [esi]
  41f44c:	sbb    al,0x71
  41f44e:	add    DWORD PTR [eax],eax
  41f450:	xchg   BYTE PTR [edx],al
  41f452:	add    BYTE PTR [eax],al
  41f454:	jp     0x41f486
  41f456:	(bad)  
  41f457:	dec    ebx
  41f458:	sub    BYTE PTR [edx],bl
  41f45a:	or     DWORD PTR [ecx+ebp*4],0xe9f04bf3
  41f461:	xor    eax,0x8f5bdc07
  41f466:	(bad)  
  41f467:	inc    esp
  41f468:	cld    
  41f469:	and    al,0x92
  41f46b:	hlt    
  41f46c:	nop
  41f46d:	xchg   ebx,eax
  41f46e:	jp     0x41f437
  41f470:	lods   eax,DWORD PTR ds:[esi]
  41f471:	jbe    0x41f42e
  41f473:	jp     0x41f472
  41f475:	or     al,0x32
  41f477:	jge    0x41f497
  41f479:	cmp    al,0xff
  41f47b:	mov    BYTE PTR [edi],0x2d
  41f47e:	push   edi
  41f47f:	test   BYTE PTR [eax-0x4a9c3bb4],dh
  41f485:	pop    ds
  41f486:	out    dx,eax
  41f487:	in     al,0x3b
  41f489:	mov    ds:0x3a087be4,eax
  41f48e:	jns    0x41f440
  41f490:	fidiv  WORD PTR [ebx]
  41f492:	inc    eax
  41f493:	xlat   BYTE PTR ds:[ebx]
  41f494:	xor    BYTE PTR [eax-0x67],bh
  41f497:	outs   dx,DWORD PTR ds:[esi]
  41f498:	test   eax,0x6ee14e43
  41f49d:	mov    esp,0xa9032b6a
  41f4a2:	lock bound esi,QWORD PTR [esi-0x7d]
  41f4a6:	sti    
  41f4a7:	or     al,BYTE PTR [ecx-0x2755a9b8]
  41f4ad:	cmp    al,cl
  41f4af:	hlt    
  41f4b0:	lods   al,BYTE PTR ds:[esi]
  41f4b1:	lahf   
  41f4b2:	inc    edx
  41f4b3:	cmp    BYTE PTR [esi],ah
  41f4b5:	fidiv  WORD PTR [ebp+0x69]
  41f4b8:	inc    ebx
  41f4b9:	sub    al,0x53
  41f4bb:	adc    eax,0x8808b12a
  41f4c0:	cmp    eax,0x6a6ded4c
  41f4c5:	xchg   ebp,eax
  41f4c6:	gs retf 0x42e7
  41f4ca:	fisub  DWORD PTR [esi+0x288093f]
  41f4d0:	(bad)  
  41f4d1:	lds    edi,FWORD PTR [ebx+0x220bf4c3]
  41f4d7:	bound  edx,QWORD PTR [esp+edi*2]
  41f4da:	aam    0x67
  41f4dc:	and    ecx,DWORD PTR [ecx+eax*2+0x60999fd7]
  41f4e3:	adc    esi,ebx
  41f4e5:	addr16 xchg ebp,eax
  41f4e7:	jne    0x41f50d
  41f4e9:	fs fwait
  41f4eb:	mov    esp,DWORD PTR [eax+0x3d03d99b]
  41f4f1:	test   dh,bl
  41f4f3:	mov    bh,0x60
  41f4f5:	std    
  41f4f6:	out    0x72,al
  41f4f8:	inc    ebx
  41f4f9:	retf   0x4837
  41f4fc:	xor    ah,bh
  41f4fe:	jmp    0x41f502
  41f500:	sbb    dl,dl
  41f502:	sbb    edi,esp
  41f504:	xchg   ebp,eax
  41f505:	mov    esi,0xbcc638de
  41f50a:	cmp    ebp,DWORD PTR [edx]
  41f50c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f50d:	lock das 
  41f50f:	xchg   esi,eax
  41f510:	jge    0x41f553
  41f512:	push   esp
  41f513:	stc    
  41f514:	jae    0x41f556
  41f516:	cmp    eax,DWORD PTR [edx+0x7d6e64e8]
  41f51c:	pop    edx
  41f51d:	shl    DWORD PTR [edi+0x10],1
  41f520:	lahf   
  41f521:	mov    esp,0x582992c6
  41f526:	out    0xd4,al
  41f528:	lods   eax,DWORD PTR ds:[esi]
  41f529:	sbb    BYTE PTR ds:0xf4d3ee8a,bl
  41f52f:	xchg   edi,eax
  41f530:	imul   ecx,DWORD PTR [edx+0x1],0xffffffeb
  41f534:	aaa    
  41f535:	jb     0x41f4b8
  41f537:	bound  ecx,QWORD PTR ds:0x8dd7246a
  41f53d:	dec    ebp
  41f53e:	aas    
  41f53f:	pop    eax
  41f540:	or     BYTE PTR [eax+edx*8],0x67
  41f544:	cmp    al,0xce
  41f546:	adc    ecx,DWORD PTR [ebx+0x56]
  41f549:	push   0xffffffa9
  41f54b:	jbe    0x41f51c
  41f54d:	call   0x9c7309c1
  41f552:	ins    BYTE PTR es:[edi],dx
  41f553:	adc    al,0x8f
  41f555:	je     0x41f56a
  41f557:	int    0x6
  41f559:	mov    DWORD PTR [edx],ecx
  41f55b:	add    ebp,DWORD PTR [eax-0x7401ab90]
  41f561:	inc    esi
  41f562:	pop    edi
  41f563:	jo     0x41f561
  41f565:	dec    ebp
  41f566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f567:	dec    ebp
  41f568:	daa    
  41f569:	or     al,0x0
  41f56b:	sub    eax,0xb284ceb7
  41f570:	addr16 push 0x2fa837c0
  41f576:	aas    
  41f577:	jl     0x41f5d4
  41f579:	fistp  WORD PTR [ebx-0x1f442d60]
  41f57f:	fdivr  QWORD PTR [edx+0x56]
  41f582:	sbb    esi,DWORD PTR [ebx]
  41f584:	dec    edi
  41f585:	adc    eax,0xa7a717d2
  41f58a:	loopne 0x41f5c5
  41f58c:	bound  eax,QWORD PTR [ecx]
  41f58e:	(bad)  
  41f58f:	push   eax
  41f590:	das    
  41f591:	or     eax,0xeb6e4a8c
  41f596:	or     bl,BYTE PTR [ebp-0x7862131d]
  41f59c:	pop    esi
  41f59d:	xor    al,0x6c
  41f5a0:	push   ebx
  41f5a1:	push   ds
  41f5a2:	and    eax,0x776bc812
  41f5a7:	enter  0xf57a,0x70
  41f5ab:	outs   dx,DWORD PTR ds:[esi]
  41f5ac:	add    esp,DWORD PTR [ebp+0x3692c47c]
  41f5b2:	inc    ecx
  41f5b3:	gs dec ebp
  41f5b5:	xchg   edx,eax
  41f5b6:	das    
  41f5b7:	rol    BYTE PTR [edx+0x5d],1
  41f5ba:	lods   eax,DWORD PTR ds:[esi]
  41f5bb:	xor    dl,BYTE PTR [ebx-0xde65dcd]
  41f5c1:	mov    ds:0x8e836fcd,al
  41f5c6:	xor    eax,0x759d33c5
  41f5cb:	jg     0x41f63a
  41f5cd:	inc    ebx
  41f5ce:	fidiv  WORD PTR [ebx+0x5b733d86]
  41f5d4:	out    dx,al
  41f5d5:	rcl    DWORD PTR [ebx-0x595a3a0f],1
  41f5db:	nop
  41f5dc:	pop    eax
  41f5dd:	sbb    DWORD PTR [ebp-0xd],esp
  41f5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5e1:	cmp    ecx,DWORD PTR [edi+0x3b]
  41f5e4:	xchg   esi,eax
  41f5e5:	xchg   edi,eax
  41f5e6:	sub    bh,cl
  41f5e8:	ss cld 
  41f5ea:	xor    al,0x31
  41f5ec:	icebp  
  41f5ed:	bound  edi,QWORD PTR [eax]
  41f5ef:	inc    edx
  41f5f0:	pop    ss
  41f5f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5f2:	xor    eax,0x160e0e7e
  41f5f7:	out    dx,al
  41f5f8:	mov    BYTE PTR [edx+0xc279626],ch
  41f5fe:	pushf  
  41f5ff:	and    ah,ah
  41f601:	mul    ch
  41f603:	pop    ebp
  41f604:	push   0xe05ccd89
  41f609:	push   esi
  41f60a:	mov    eax,0x52ca96b1
  41f60f:	mov    al,ds:0xc44ea143
  41f614:	sbb    DWORD PTR [ecx],edx
  41f616:	jnp    0x41f5a3
  41f618:	inc    ecx
  41f619:	dec    edx
  41f61a:	scas   eax,DWORD PTR es:[edi]
  41f61b:	jno    0x41f634
  41f61d:	nop
  41f61e:	test   BYTE PTR [edi],bh
  41f620:	or     ch,BYTE PTR ds:0x76b1d84e
  41f626:	mov    ch,0x52
  41f628:	int    0xb9
  41f62a:	lods   eax,DWORD PTR ds:[esi]
  41f62b:	xor    eax,0xb794f3ec
  41f630:	push   edx
  41f631:	sbb    eax,0x204bfdb9
  41f636:	lods   al,BYTE PTR ds:[esi]
  41f637:	sbb    bh,bl
  41f639:	xchg   esi,eax
  41f63a:	(bad)  
  41f63b:	out    dx,al
  41f63c:	xor    al,0x4
  41f63e:	mov    al,0x16
  41f640:	xchg   edx,eax
  41f641:	bound  esp,QWORD PTR [eax+0x7447e90d]
  41f647:	aaa    
  41f648:	test   DWORD PTR [edx+0x6a435b54],ebp
  41f64e:	(bad)  
  41f652:	popa   
  41f653:	sbb    al,0xc6
  41f656:	unpcklps xmm1,xmm3
  41f659:	mov    ch,0x11
  41f65b:	push   cs
  41f65c:	inc    edx
  41f65d:	fnstenv [edi-0x4f]
  41f660:	jo     0x41f64c
  41f662:	gs fwait
  41f664:	jb     0x41f6c8
  41f666:	adc    DWORD PTR [edx+esi*2-0x78],edi
  41f66a:	xor    DWORD PTR [eax+esi*1],esi
  41f66d:	dec    eax
  41f66e:	ds mul ebx
  41f671:	push   es
  41f672:	sub    al,0x70
  41f674:	push   ecx
  41f675:	pop    ebp
  41f676:	loope  0x41f66f
  41f678:	test   eax,edi
  41f67a:	fld    TBYTE PTR [esi+0x11dd763e]
  41f680:	dec    edi
  41f681:	sub    bh,BYTE PTR [ecx-0x5b841446]
  41f687:	add    BYTE PTR [edi-0x275ac31],bh
  41f68d:	push   edi
  41f68e:	push   ss
  41f68f:	aas    
  41f690:	ja     0x41f649
  41f692:	inc    esi
  41f693:	mov    bh,0x61
  41f695:	lea    ebp,[edx-0x5e]
  41f698:	add    DWORD PTR [ecx+0x1e],0x7d
  41f69c:	pop    es
  41f69d:	xchg   ebp,eax
  41f69e:	mov    ebp,0x487baf75
  41f6a3:	cmc    
  41f6a4:	dec    edi
  41f6a5:	dec    esi
  41f6a6:	mov    cl,BYTE PTR [edx+0xb]
  41f6a9:	cmp    eax,0x8763d7b0
  41f6ae:	inc    ebp
  41f6af:	jns    0x41f72e
  41f6b1:	icebp  
  41f6b2:	jge    0x41f6e2
  41f6b4:	cmp    al,0x30
  41f6b6:	xchg   edi,eax
  41f6b7:	dec    eax
  41f6b8:	sbb    edi,eax
  41f6ba:	jecxz  0x41f653
  41f6bc:	pop    ebp
  41f6bd:	adc    ebp,DWORD PTR [ebx-0x12]
  41f6c0:	pop    ds
  41f6c1:	pop    edx
  41f6c2:	cwde   
  41f6c3:	cmp    al,0x17
  41f6c5:	sbb    ecx,DWORD PTR [edx+0x40309bc6]
  41f6cb:	ds pop es
  41f6cd:	int    0xa5
  41f6cf:	xlat   BYTE PTR ds:[ebx]
  41f6d0:	sahf   
  41f6d1:	xchg   esp,eax
  41f6d2:	clc    
  41f6d3:	ins    DWORD PTR es:[edi],dx
  41f6d4:	mov    eax,ds:0xe9c85ee2
  41f6d9:	inc    edx
  41f6da:	add    BYTE PTR [eax],al
  41f6dc:	popf   
  41f6dd:	paddd  mm4,QWORD PTR [esi+edi*8-0x6c0200b]
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	mov    bl,0x6e
  41f6e8:	and    DWORD PTR [edx-0x15],ecx
  41f6eb:	repz mov ds:0x86000173,al
  41f6f1:	add    al,BYTE PTR [eax]
  41f6f3:	add    BYTE PTR [esi+0x37],bl
  41f6f6:	loopne 0x41f72a
  41f6f8:	mov    gs,WORD PTR [eax+edx*8]
  41f6fb:	fiadd  DWORD PTR [ecx]
  41f6fd:	jb     0x41f6b9
  41f6ff:	aaa    
  41f700:	fcomp  QWORD PTR [edx]
  41f702:	add    BYTE PTR [ecx+0x44322a2f],bh
  41f708:	pop    ebx
  41f709:	pop    ds
  41f70a:	aaa    
  41f70b:	adc    ebp,DWORD PTR [edi+0x67624730]
  41f711:	push   ebp
  41f712:	mov    eax,0x3a01a870
  41f717:	es repz or al,0x57
  41f71b:	or     eax,0x97c53f14
  41f720:	or     al,0xdf
  41f722:	sub    eax,0x4b11b756
  41f727:	add    ah,bl
  41f729:	sbb    DWORD PTR [esi],0xc0f58800
  41f72f:	sub    BYTE PTR [ebx+ecx*1],ch
  41f732:	int3   
  41f733:	loop   0x41f780
  41f735:	fldenv [edi+eax*8-0x36c1a323]
  41f73c:	aad    0xf7
  41f73e:	pop    ebx
  41f73f:	dec    eax
  41f740:	mov    ch,0x32
  41f742:	(bad)  [ebx+eiz*8+0x7b]
  41f746:	cmp    al,0xe4
  41f748:	lea    eax,[ebp+esi*1-0x33f25cca]
  41f74f:	imul   esi,DWORD PTR [ecx+0x1c],0xffffffb8
  41f753:	stc    
  41f754:	test   eax,0x9285f30b
  41f759:	in     eax,dx
  41f75a:	stos   DWORD PTR es:[edi],eax
  41f75b:	dec    ecx
  41f75c:	mov    ds:0x6232e30d,eax
  41f761:	retf   0x1362
  41f764:	ins    DWORD PTR es:[edi],dx
  41f765:	push   0x1c
  41f767:	jmp    0x41f701
  41f769:	ds xor esp,edi
  41f76c:	inc    edi
  41f76d:	stos   DWORD PTR es:[edi],eax
  41f76e:	ins    DWORD PTR es:[edi],dx
  41f76f:	test   esp,0xdc575304
  41f775:	push   ecx
  41f776:	mov    esp,0xc26058fc
  41f77b:	pushf  
  41f77c:	aas    
  41f77d:	data16 adc al,0xbd
  41f780:	stos   BYTE PTR es:[edi],al
  41f781:	jp     0x41f71b
  41f783:	mov    al,ds:0xb0c92f01
  41f788:	pusha  
  41f789:	sub    al,ch
  41f78b:	sub    ebx,edi
  41f78d:	mov    bl,0x37
  41f78f:	dec    edi
  41f790:	(bad)  
  41f791:	adc    al,0xaf
  41f793:	pushw  ss
  41f795:	pop    esi
  41f796:	push   0x1a
  41f798:	call   0x741f632f
  41f79d:	out    dx,eax
  41f79e:	addr16 pop edi
  41f7a0:	xor    edx,esi
  41f7a2:	fadd   QWORD PTR [esi+0x7c5ecd8a]
  41f7a8:	xor    DWORD PTR [eax-0x43],ebx
  41f7ab:	xor    al,ch
  41f7ad:	clc    
  41f7ae:	xchg   edx,eax
  41f7af:	loopne 0x41f82d
  41f7b1:	xchg   ecx,eax
  41f7b2:	sar    DWORD PTR [edi-0x42],cl
  41f7b5:	sar    BYTE PTR [eax-0x15],1
  41f7b8:	adc    eax,0x4a85da81
  41f7bd:	imul   ecx,DWORD PTR [edi-0x80],0xffffffa8
  41f7c1:	jnp    0x41f7fc
  41f7c3:	mov    si,0x53a4
  41f7c7:	popf   
  41f7c8:	or     ch,ch
  41f7ca:	jbe    0x41f823
  41f7cc:	xor    bh,0x3b
  41f7cf:	shr    bl,0x8f
  41f7d2:	pop    edx
  41f7d3:	iret   
  41f7d4:	imul   esi,DWORD PTR [esi+0x7f],0x32
  41f7d8:	stos   DWORD PTR es:[edi],eax
  41f7d9:	cmp    ebx,ecx
  41f7db:	dec    ecx
  41f7dc:	cld    
  41f7dd:	add    al,0x18
  41f7df:	inc    ebx
  41f7e0:	add    DWORD PTR [edx-0xe0bf93a],ebx
  41f7e6:	ss mov dh,0x17
  41f7e9:	jb     0x41f7ba
  41f7eb:	push   esi
  41f7ec:	aas    
  41f7ed:	mov    eax,ds:0xc19b200b
  41f7f2:	fild   QWORD PTR [ebx-0x38b29155]
  41f7f8:	add    DWORD PTR [edi],edi
  41f7fa:	adc    esi,DWORD PTR [ebx]
  41f7fc:	xor    al,0x92
  41f7fe:	icebp  
  41f7ff:	jg     0x41f7f4
  41f801:	ja     0x41f7c5
  41f803:	pop    ebp
  41f804:	or     BYTE PTR [esi],cl
  41f806:	psubsw mm2,QWORD PTR [ecx+0x51c2113c]
  41f80d:	mov    ds:0x68c32c6f,eax
  41f812:	les    edx,FWORD PTR [esi]
  41f814:	fdivrp st(5),st
  41f816:	inc    esp
  41f817:	loopne 0x41f88d
  41f819:	adc    bl,BYTE PTR [eiz*4+0x455c5c7c]
  41f820:	aam    0x5e
  41f822:	push   ss
  41f823:	(bad)  
  41f824:	mov    ah,0x5c
  41f826:	imul   dl
  41f828:	pop    es
  41f829:	in     al,0xbd
  41f82b:	test   BYTE PTR [ecx-0x3804cd43],0xa7
  41f832:	and    DWORD PTR [ecx+0x31],0x26
  41f836:	mov    ebp,0x8b168f80
  41f83b:	inc    eax
  41f83c:	mov    al,0x8f
  41f83e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f83f:	push   esp
  41f840:	ins    DWORD PTR es:[edi],dx
  41f841:	fidiv  WORD PTR [ebx+0x52]
  41f844:	sbb    BYTE PTR [eax-0x7c],bl
  41f847:	ret    
  41f848:	cmp    cl,BYTE PTR [eax+0x2f1a9f20]
  41f84e:	sbb    BYTE PTR [edi],bh
  41f850:	cmp    DWORD PTR [esi],eax
  41f852:	(bad)  
  41f853:	(bad)  
  41f854:	and    ah,BYTE PTR [edx+edx*2]
  41f857:	ret    0xec18
  41f85a:	ret    
  41f85b:	stos   BYTE PTR es:[edi],al
  41f85c:	jbe    0x41f872
  41f85e:	into   
  41f85f:	sub    ebx,DWORD PTR [edi+0x2c8c0aad]
  41f865:	scas   eax,DWORD PTR es:[edi]
  41f866:	inc    esp
  41f867:	or     eax,0x71
  41f86a:	fldenv ds:0x4e1ce51a
  41f870:	push   ss
  41f871:	pop    ds
  41f872:	dec    ebp
  41f873:	data16 fcom DWORD PTR [ecx-0x7da7421d]
  41f87a:	jae    0x41f8be
  41f87c:	xchg   BYTE PTR [ebp+0x77],al
  41f87f:	in     eax,0x52
  41f881:	xor    cl,BYTE PTR [esi-0x3a86ad1c]
  41f887:	mov    ds:0xcb0a0c9e,eax
  41f88c:	and    eax,0x88ae30af
  41f891:	mov    ds:0xaabd0947,al
  41f896:	sub    edx,DWORD PTR [edx+0x52]
  41f899:	jns    0x41f8a8
  41f89b:	lods   eax,DWORD PTR ds:[esi]
  41f89c:	lea    esi,[ecx]
  41f89e:	add    DWORD PTR [edi],eax
  41f8a0:	scas   al,BYTE PTR es:[edi]
  41f8a1:	stc    
  41f8a2:	rcl    ch,0xae
  41f8a5:	xchg   esi,eax
  41f8a6:	cs mov al,0x2b
  41f8a9:	imul   eax,DWORD PTR [ebx],0xfffffff8
  41f8ac:	cwde   
  41f8ad:	bnd jae 0x41f881
  41f8b0:	dec    ecx
  41f8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8b2:	mov    DWORD PTR [edx+0x5b],ebx
  41f8b5:	mov    al,ds:0x1872aefb
  41f8ba:	jo     0x41f841
  41f8bc:	mov    bh,BYTE PTR ds:0x10fe171a
  41f8c2:	push   esi
  41f8c3:	jo     0x41f861
  41f8c5:	daa    
  41f8c6:	jge    0x41f90d
  41f8c8:	push   bp
  41f8ca:	rcl    DWORD PTR [ebx-0x56],cl
  41f8cd:	int    0x67
  41f8cf:	inc    eax
  41f8d0:	retf   0x6ec3
  41f8d3:	xor    al,dl
  41f8d5:	std    
  41f8d6:	inc    eax
  41f8d7:	dec    ebp
  41f8d8:	imul   edx,DWORD PTR [ebx+0x4054d367],0x4ab14fcb
  41f8e2:	jecxz  0x41f88a
  41f8e4:	inc    edx
  41f8e5:	jb     0x41f961
  41f8e7:	icebp  
  41f8e8:	dec    edx
  41f8e9:	out    0x3a,al
  41f8eb:	rcr    BYTE PTR [edx],1
  41f8ed:	sub    eax,0x9c8fb7dc
  41f8f2:	retf   0xbaaf
  41f8f5:	xor    BYTE PTR fs:[ebp+0x1b],0x61
  41f8fa:	pop    edx
  41f8fb:	popa   
  41f8fc:	repnz repz mov dl,0xe6
  41f900:	pushf  
  41f901:	call   0x96cc:0x87f2597f
  41f908:	sub    dh,ah
  41f90a:	daa    
  41f90b:	or     eax,0x4348a2ba
  41f910:	jae    0x41f917
  41f912:	js     0x41f97c
  41f914:	lds    esi,FWORD PTR [esi]
  41f916:	fmul   DWORD PTR [eax+0x43c60d49]
  41f91c:	in     eax,0x20
  41f91e:	in     eax,dx
  41f91f:	mov    esi,0xe4f573d3
  41f924:	mov    eax,0x88d6b161
  41f929:	push   ebx
  41f92a:	fisubr DWORD PTR [ebp+0x7e441f45]
  41f930:	ror    ebp,0xc1
  41f933:	push   0x725d02dd
  41f938:	fldenv [ebx]
  41f93a:	sbb    DWORD PTR [ecx-0x78],0x3cbfd685
  41f941:	push   ebx
  41f942:	inc    edx
  41f943:	inc    eax
  41f944:	mov    dl,0xc2
  41f946:	pop    ecx
  41f947:	xchg   DWORD PTR [edi-0x4e],eax
  41f94a:	jp     0x41f8fb
  41f94c:	arpl   WORD PTR [ebx+0x6a],di
  41f94f:	dec    esp
  41f950:	push   ecx
  41f951:	addr16 daa 
  41f953:	rcl    DWORD PTR [ebx+0x16],1
  41f956:	jg     0x41f91a
  41f958:	jmp    0xd853:0xefdc2d6b
  41f95f:	std    
  41f960:	pop    ecx
  41f961:	mov    eax,ds:0x14b8d8f6
  41f966:	mov    ecx,edi
  41f968:	mov    ebx,gs
  41f96a:	push   esp
  41f96b:	pop    ds
  41f96c:	out    0x4e,al
  41f96e:	dec    edx
  41f96f:	jmp    0xffce:0x79c46cb0
  41f976:	jmp    0x41f966
  41f978:	in     al,dx
  41f979:	cmc    
  41f97a:	add    BYTE PTR [eax],al
  41f97c:	and    BYTE PTR [esi],dl
  41f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	lea    esi,[esi+0x25bf29bf]
  41f985:	lods   eax,DWORD PTR ds:[esi]
  41f986:	and    dl,al
  41f988:	add    ch,BYTE PTR [eax+0x7628c1f7]
  41f98e:	add    DWORD PTR [eax],eax
  41f990:	xchg   BYTE PTR [edx],al
  41f992:	add    BYTE PTR [eax],al
  41f994:	les    eax,FWORD PTR [edi+0x71f356ab]
  41f99a:	or     al,0x25
  41f99c:	(bad)  
  41f99d:	and    al,0xd9
  41f99f:	and    esi,DWORD PTR [ebx]
  41f9a1:	push   es
  41f9a2:	retf   
  41f9a3:	pop    ebx
  41f9a4:	adc    BYTE PTR [ecx],0xae
  41f9a7:	mov    esp,0x1a22517f
  41f9ac:	xchg   BYTE PTR [ebp+0x43],bh
  41f9af:	fisub  DWORD PTR [ebp+ebp*8+0x47]
  41f9b3:	jns    0x41f939
  41f9b5:	int    0x51
  41f9b7:	data16 mov bh,0x80
  41f9ba:	sbb    ecx,DWORD PTR [ebp+eax*2-0x15c49ebd]
  41f9c1:	imul   edi,esp,0x1b
  41f9c4:	ins    DWORD PTR es:[edi],dx
  41f9c5:	add    BYTE PTR [esi-0x4cbcf7f6],0xa
  41f9cc:	neg    BYTE PTR [eax+0x293e0fcd]
  41f9d2:	xchg   BYTE PTR [edx-0x36f3f861],ah
  41f9d8:	test   BYTE PTR [eax],ch
  41f9da:	push   ecx
  41f9db:	sub    BYTE PTR [edi],dl
  41f9dd:	dec    eax
  41f9de:	dec    ebp
  41f9df:	sub    al,0x63
  41f9e1:	ret    
  41f9e2:	call   0xe4f5:0x69dc1146
  41f9e9:	xor    ch,BYTE PTR [eax-0x5596a57a]
  41f9ef:	(bad)  
  41f9f0:	fldenv [edi]
  41f9f2:	sbb    ebp,DWORD PTR [edx-0x3e]
  41f9f5:	cwde   
  41f9f6:	dec    ecx
  41f9f7:	test   eax,0xae5e0bd9
  41f9fc:	and    al,0x73
  41f9fe:	jg     0x41f9cd
  41fa00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa01:	mov    ds:0xc270f806,eax
  41fa06:	aad    0x47
  41fa08:	(bad)  [ebp+0x18]
  41fa0b:	and    eax,0x70b7301a
  41fa10:	dec    ebp
  41fa11:	stos   DWORD PTR es:[edi],eax
  41fa12:	stc    
  41fa13:	sub    DWORD PTR [edx+0xd],esp
  41fa16:	fisttp DWORD PTR [ecx+0x5c]
  41fa19:	mov    esi,0xa28779ee
  41fa1e:	mov    ebp,cs
  41fa20:	fs arpl bp,dx
  41fa23:	jg     0x41f9ef
  41fa25:	pop    ebp
  41fa26:	mov    bh,0x5c
  41fa28:	add    ebp,DWORD PTR [esi]
  41fa2a:	rcl    DWORD PTR [edx],0xec
  41fa2d:	jae    0x41fa06
  41fa2f:	push   ecx
  41fa30:	lock mov ebx,0x2717f700
  41fa36:	pop    ebx
  41fa37:	xor    esp,DWORD PTR [esi-0x30d91567]
  41fa3d:	xchg   ebx,eax
  41fa3e:	out    dx,eax
  41fa3f:	into   
  41fa40:	or     dl,0x21
  41fa43:	sbb    esi,DWORD PTR [ecx-0x12e318ce]
  41fa49:	push   ss
  41fa4a:	(bad)
  41fa4e:	in     eax,0xe8
  41fa50:	inc    edx
  41fa51:	or     al,0x23
  41fa53:	test   DWORD PTR [edi-0x193c04f0],ecx
  41fa59:	mov    BYTE PTR [edx+ebx*2-0x3d],ch
  41fa5d:	adc    BYTE PTR [ebx-0x5d],dh
  41fa60:	test   eax,0x317e008a
  41fa65:	dec    edi
  41fa66:	outs   dx,DWORD PTR ds:[esi]
  41fa67:	out    dx,eax
  41fa68:	or     ah,dh
  41fa6a:	shr    BYTE PTR [edx+esi*4],1
  41fa6d:	push   cs
  41fa6e:	xor    DWORD PTR [esi-0x76],eax
  41fa71:	ret    
  41fa72:	ror    ch,0x51
  41fa75:	outs   dx,BYTE PTR ds:[esi]
  41fa76:	push   es
  41fa77:	repnz cmp al,0x3
  41fa7a:	push   edx
  41fa7b:	adc    ah,0x27
  41fa7e:	add    eax,0x6a6c815f
  41fa83:	int    0x2b
  41fa85:	retf   
  41fa86:	retf   0xcb9f
  41fa89:	adc    DWORD PTR [edi-0x10],ebp
  41fa8c:	and    eax,0x37977a27
  41fa91:	jne    0x41fa2b
  41fa93:	pop    ebx
  41fa94:	or     cl,BYTE PTR [ecx]
  41fa96:	aas    
  41fa97:	mov    ch,0x65
  41fa99:	aam    0x2a
  41fa9b:	sub    cl,bl
  41fa9d:	jle    0x41fb00
  41fa9f:	or     dl,BYTE PTR [ecx]
  41faa1:	retf   0x8cb7
  41faa4:	fsubr  QWORD PTR ds:0x7ddbe8c1
  41faaa:	fdivr  st,st(5)
  41faac:	xor    ebp,edi
  41faae:	test   DWORD PTR [esi+0x1f],0xf52cb620
  41fab5:	sub    edi,DWORD PTR [ecx]
  41fab7:	lahf   
  41fab8:	mov    ebp,0x5be3c1a4
  41fabd:	cli    
  41fabe:	imul   BYTE PTR [ebp-0x1d11ff9d]
  41fac4:	adc    BYTE PTR [ecx+0x6d3edba7],ch
  41faca:	mul    BYTE PTR ds:[eax+ebp*4+0x6]
  41facf:	ss sbb eax,0x91997648
  41fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fad6:	jns    0x41fb09
  41fad8:	leave  
  41fad9:	stos   DWORD PTR es:[edi],eax
  41fada:	jle    0x41fb3d
  41fadc:	nop
  41fadd:	cmovg  ecx,DWORD PTR [edi+0x2d1d273a]
  41fae4:	cmp    bh,dl
  41fae6:	mov    edi,0x7bdd532d
  41faeb:	lahf   
  41faec:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41faee:	les    ecx,FWORD PTR [ebp-0x17e2e20e]
  41faf4:	xchg   DWORD PTR [ebx-0x3684f43],ecx
  41fafa:	xor    BYTE PTR [ebp+0x28],dl
  41fafd:	scas   eax,DWORD PTR es:[edi]
  41fafe:	sub    cl,0xb3
  41fb01:	add    ebx,edx
  41fb03:	jp     0x41fb78
  41fb05:	jmp    0x852e:0x91a7370e
  41fb0c:	stc    
  41fb0d:	sbb    eax,eax
  41fb0f:	mov    DWORD PTR [edx],0x313bfcff
  41fb15:	sbb    BYTE PTR [edi],ch
  41fb17:	out    0xba,eax
  41fb19:	in     al,0xb3
  41fb1b:	std    
  41fb1c:	retf   
  41fb1d:	add    al,0x72
  41fb1f:	cli    
  41fb20:	xchg   ecx,eax
  41fb21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb22:	popf   
  41fb23:	xor    edx,DWORD PTR [edi+0x78]
  41fb26:	xchg   edx,eax
  41fb27:	mov    dl,0xf5
  41fb29:	mov    bh,0x73
  41fb2b:	jp     0x41fb4c
  41fb2d:	push   eax
  41fb2e:	data16 fidivr WORD PTR [edx-0x24]
  41fb32:	retf   0xc136
  41fb35:	xchg   edx,eax
  41fb36:	jnp    0x41fb1a
  41fb38:	(bad)  
  41fb3a:	call   0x7a9678aa
  41fb3f:	fcmove st,st(0)
  41fb41:	sahf   
  41fb42:	add    BYTE PTR [ecx],bl
  41fb44:	stos   DWORD PTR es:[edi],eax
  41fb45:	ror    BYTE PTR [edx],1
  41fb47:	mov    esi,0x20866066
  41fb4c:	arpl   WORD PTR [esi+eiz*2-0x27],ax
  41fb50:	test   BYTE PTR [edi],bl
  41fb52:	cld    
  41fb53:	inc    edx
  41fb54:	adc    ebp,DWORD PTR [ebx-0x782699a6]
  41fb5a:	mov    ah,0x5e
  41fb5c:	adc    eax,0xf2e2bc15
  41fb61:	xchg   edx,eax
  41fb62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb63:	mov    esi,0x3010ad53
  41fb68:	clc    
  41fb69:	popf   
  41fb6a:	jp     0x41fbe4
  41fb6c:	pop    edx
  41fb6d:	clc    
  41fb6e:	xchg   edi,eax
  41fb6f:	outs   dx,DWORD PTR ds:[esi]
  41fb70:	adc    eax,0x8ffe9350
  41fb75:	stos   DWORD PTR es:[edi],eax
  41fb76:	inc    edi
  41fb77:	sbb    eax,0x48d30f46
  41fb7c:	out    0xf,eax
  41fb7e:	cmp    bh,BYTE PTR ds:0x410c4c91
  41fb84:	sub    ebx,DWORD PTR [esi-0x56725c36]
  41fb8a:	jmp    0x41fb48
  41fb8c:	push   ebx
  41fb8d:	add    BYTE PTR [ecx+edx*4-0x637e658f],ah
  41fb94:	mov    BYTE PTR [ecx],ch
  41fb96:	adc    dl,BYTE PTR [esi+0x7a]
  41fb99:	pushf  
  41fb9a:	adc    eax,0x5654d0ba
  41fb9f:	mov    ebx,0x791a1891
  41fba4:	or     DWORD PTR [ebp+0x4c],edi
  41fba7:	es jmp 0xbdbf2605
  41fbad:	mov    dl,0x2
  41fbaf:	adc    ecx,DWORD PTR [ebp+0x462c3cd]
  41fbb5:	dec    ebx
  41fbb6:	imul   edx,DWORD PTR [edx],0xf511a20c
  41fbbc:	in     al,0x67
  41fbbe:	and    dl,BYTE PTR [eax-0x5d]
  41fbc1:	push   esi
  41fbc2:	out    dx,eax
  41fbc3:	dec    esp
  41fbc4:	leave  
  41fbc5:	(bad)  
  41fbc6:	int3   
  41fbc7:	sbb    dh,BYTE PTR ss:[edx+0x7ba59de1]
  41fbce:	fistp  QWORD PTR [ecx]
  41fbd0:	pop    ebp
  41fbd1:	push   esp
  41fbd2:	fwait
  41fbd3:	sub    cl,BYTE PTR [eax]
  41fbd5:	xor    eax,0x934a3f26
  41fbda:	stc    
  41fbdb:	jae    0x41fbaf
  41fbdd:	repz cli 
  41fbdf:	sub    al,0xd
  41fbe1:	cmp    BYTE PTR [esi+0x63],dl
  41fbe4:	mov    ch,al
  41fbe6:	pusha  
  41fbe7:	mov    ?,WORD PTR [edx+0x1c139618]
  41fbed:	int    0xf1
  41fbef:	sbb    DWORD PTR [eax+0x394816a0],edx
  41fbf5:	inc    esi
  41fbf6:	int3   
  41fbf7:	(bad)  
  41fbf8:	pop    eax
  41fbf9:	call   0x9b3aaa54
  41fbfe:	dec    esi
  41fbff:	jle    0x41fbb5
  41fc01:	mov    cs,WORD PTR [ecx-0x77]
  41fc04:	popa   
  41fc05:	imul   eax,DWORD PTR [edx+0x2ef6d305],0x172b4cce
  41fc0f:	repz (bad) 
  41fc11:	jmp    0x8de6:0xdbd78d8c
  41fc18:	mov    DWORD PTR [edx+0x0],0x3a33b000
  41fc1f:	test   eax,0x3bb3a9bb
  41fc24:	test   DWORD PTR [edi+0x53310cbe],esi
  41fc2a:	ret    
  41fc2b:	xlat   BYTE PTR ds:[ebx]
  41fc2c:	scas   al,BYTE PTR es:[edi]
  41fc2d:	js     0x41fc30
  41fc2f:	add    BYTE PTR [esi+0x2a000002],al
  41fc35:	fwait
  41fc36:	xchg   DWORD PTR [eax+edi*4],ebx
  41fc39:	rcr    DWORD PTR [edi+ecx*8-0x49],cl
  41fc3d:	sbb    al,0x9
  41fc3f:	and    BYTE PTR [ebp-0x5e34e202],0x6c
  41fc46:	(bad)  
  41fc47:	cmp    bh,dl
  41fc49:	push   0xb36fbfba
  41fc4e:	iret   
  41fc4f:	push   esp
  41fc50:	ficom  WORD PTR [edi+0x5e49bde4]
  41fc56:	lock or al,0xbc
  41fc59:	iret   
  41fc5a:	jno    0x41fbf9
  41fc5c:	popa   
  41fc5d:	cmp    DWORD PTR [eax+0x18],edi
  41fc60:	mov    DWORD PTR [edx-0x49],ebx
  41fc63:	jge    0x41fcc0
  41fc65:	out    dx,al
  41fc66:	jne    0x41fc4b
  41fc68:	scas   al,BYTE PTR es:[edi]
  41fc69:	and    ch,0x99
  41fc6c:	cld    
  41fc6d:	xchg   ebx,eax
  41fc6e:	popf   
  41fc6f:	jnp    0x41fc9c
  41fc71:	scas   al,BYTE PTR es:[edi]
  41fc72:	push   ebx
  41fc73:	inc    ecx
  41fc74:	fild   WORD PTR [edx-0x39]
  41fc77:	cmp    bl,BYTE PTR [eax-0x7d]
  41fc7a:	cmp    ah,0x4c
  41fc7d:	cmc    
  41fc7e:	ret    0xe4f
  41fc81:	aad    0x9c
  41fc83:	(bad)  
  41fc84:	out    dx,al
  41fc85:	scas   eax,DWORD PTR es:[edi]
  41fc86:	xor    DWORD PTR [edx],edi
  41fc88:	xchg   ebp,eax
  41fc89:	xchg   edx,eax
  41fc8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc8b:	xchg   edi,eax
  41fc8c:	and    dl,ah
  41fc8e:	mov    dl,0xa4
  41fc90:	data16 fldz 
  41fc93:	pusha  
  41fc94:	push   ebx
  41fc95:	adc    esp,edx
  41fc97:	pop    edx
  41fc98:	lock sbb ebp,DWORD PTR ds:[ebp+0x27]
  41fc9d:	fs (bad) 
  41fc9f:	sbb    bh,dh
  41fca1:	inc    esi
  41fca2:	jle    0x41fc68
  41fca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fca5:	mov    bh,0x32
  41fca7:	mov    ebx,0xae2732f2
  41fcac:	inc    ecx
  41fcad:	mov    ebx,0x397c3f67
  41fcb2:	out    dx,al
  41fcb3:	adc    eax,0x24fca4ca
  41fcb8:	call   0x6b7:0x6af365f0
  41fcbf:	xor    bh,BYTE PTR [ebx]
  41fcc1:	ss out 0xf1,al
  41fcc4:	outs   dx,BYTE PTR ds:[esi]
  41fcc5:	outs   dx,BYTE PTR ds:[esi]
  41fcc6:	in     al,0x72
  41fcc8:	cld    
  41fcc9:	aad    0x49
  41fccb:	stos   DWORD PTR es:[edi],eax
  41fccc:	fwait
  41fccd:	jbe    0x41fcae
  41fccf:	lods   al,BYTE PTR ds:[esi]
  41fcd0:	div    dl
  41fcd2:	mov    ds:0x214f030e,al
  41fcd7:	ss pop esi
  41fcd9:	sbb    edx,edx
  41fcdb:	adc    al,BYTE PTR [esi+0x334e2084]
  41fce1:	test   dh,0x3d
  41fce4:	ja     0x41fd08
  41fce6:	cmp    al,0x1f
  41fce8:	sub    eax,0x8905ca3a
  41fced:	mul    DWORD PTR [edi-0x16b94ab1]
  41fcf3:	sbb    BYTE PTR [ebx],al
  41fcf5:	cdq    
  41fcf6:	rol    cl,1
  41fcf8:	and    ebp,ebp
  41fcfa:	arpl   WORD PTR [ecx+esi*1+0x25],sp
  41fcfe:	aaa    
  41fcff:	mov    eax,DWORD PTR [edx]
  41fd01:	repz lock sub edi,DWORD PTR [eax-0x159c4b0b]
  41fd09:	mov    dh,0xb5
  41fd0b:	add    DWORD PTR [edi+0x69],ebp
  41fd0e:	sbb    bh,ch
  41fd10:	fwait
  41fd11:	repnz cmp eax,0x2f2b285e
  41fd17:	call   0x27749dae
  41fd1c:	je     0x41fca3
  41fd1e:	mov    eax,DWORD PTR [esi]
  41fd20:	mov    esp,ebp
  41fd22:	push   ss
  41fd23:	mov    ebx,0xf21d9851
  41fd28:	sbb    BYTE PTR [edx-0x1b8b54a7],dh
  41fd2e:	dec    ecx
  41fd2f:	mov    bl,0xf8
  41fd31:	es test eax,0xbfb67132
  41fd37:	outs   dx,DWORD PTR ds:[esi]
  41fd38:	or     al,BYTE PTR [eax-0x53f4405]
  41fd3e:	pop    esi
  41fd3f:	mov    cl,0x51
  41fd41:	fsubrp st(6),st
  41fd43:	and    eax,0x848d901f
  41fd48:	xchg   edx,eax
  41fd49:	xor    al,0x91
  41fd4b:	lds    edi,FWORD PTR [eax+0x9e0a2c3]
  41fd51:	bound  esi,QWORD PTR [edx+eiz*4+0x763a2690]
  41fd58:	inc    esi
  41fd59:	and    ch,BYTE PTR [ecx-0x2d9d8e62]
  41fd5f:	mov    dl,0x23
  41fd61:	sbb    al,0xd
  41fd63:	(bad)  
  41fd65:	adc    esi,ebx
  41fd67:	les    esp,FWORD PTR [edx]
  41fd69:	dec    eax
  41fd6a:	in     al,0x8d
  41fd6c:	sub    esp,esi
  41fd6e:	stos   BYTE PTR es:[di],al
  41fd70:	pop    esp
  41fd71:	pushf  
  41fd72:	in     al,0x87
  41fd74:	js     0x41fdc1
  41fd76:	cli    
  41fd77:	xlat   BYTE PTR ds:[ebx]
  41fd78:	int3   
  41fd79:	repz loope 0x41fd64
  41fd7c:	push   ecx
  41fd7d:	out    0xc7,eax
  41fd7f:	pop    ebp
  41fd80:	cmp    eax,0x938a0b8c
  41fd85:	xchg   ebp,eax
  41fd86:	popf   
  41fd87:	popf   
  41fd88:	test   bl,bh
  41fd8a:	hlt    
  41fd8b:	ret    
  41fd8c:	and    al,0x4f
  41fd8e:	xor    BYTE PTR [edx+0x5f],cl
  41fd91:	jg     0x41fd15
  41fd93:	(bad)  
  41fd94:	cmp    al,0x98
  41fd96:	jno    0x41fd91
  41fd98:	(bad)  
  41fd9a:	hlt    
  41fd9b:	mov    ds:0x2ddbf88,al
  41fda0:	(bad)  
  41fda1:	mov    ds:0xa7ef0638,al
  41fda6:	xlat   BYTE PTR ds:[ebx]
  41fda7:	xor    esp,DWORD PTR [edi]
  41fda9:	push   esp
  41fdaa:	lock jae 0x41fdf2
  41fdad:	sub    eax,0x7e02f042
  41fdb2:	cmp    DWORD PTR [edx+eiz*1],0x7277dbef
  41fdb9:	pop    ecx
  41fdba:	ret    
  41fdbb:	lods   al,BYTE PTR ds:[esi]
  41fdbc:	xchg   ebp,eax
  41fdbd:	and    esi,DWORD PTR [ebx-0x38]
  41fdc0:	inc    edx
  41fdc1:	ret    0xe81a
  41fdc4:	inc    esi
  41fdc5:	and    cl,dl
  41fdc7:	call   0x9474456
  41fdcc:	xlat   BYTE PTR ds:[ebx]
  41fdcd:	das    
  41fdce:	fsubr  DWORD PTR [edi+0x65c0ff5c]
  41fdd4:	les    esp,FWORD PTR [eax-0x4c]
  41fdd7:	lods   al,BYTE PTR ds:[esi]
  41fdd8:	sub    DWORD PTR [esi+esi*2+0x582ce2db],ecx
  41fddf:	sti    
  41fde0:	ja     0x41fd87
  41fde2:	ja     0x41fe19
  41fde4:	cwde   
  41fde5:	stos   BYTE PTR es:[edi],al
  41fde6:	pusha  
  41fde7:	jb     0x41fdc7
  41fde9:	mov    DWORD PTR [ecx+0x7f],edi
  41fdec:	mov    esi,0x97ba9cd5
  41fdf1:	mov    WORD PTR [esi-0x48],?
  41fdf4:	add    eax,0xdcb8776b
  41fdf9:	jne    0x41fe5c
  41fdfb:	mov    eax,ds:0x4a6a30f1
  41fe00:	mov    bp,0x2b5
  41fe04:	data16 fwait
  41fe06:	rcl    BYTE PTR [esi-0x2af5790b],0x4d
  41fe0d:	out    0x6f,al
  41fe0f:	pop    esp
  41fe10:	or     bh,BYTE PTR [edx+ebp*4]
  41fe13:	add    al,0x7e
  41fe15:	mov    ds:0xa15292f8,al
  41fe1a:	ret    
  41fe1b:	outs   dx,DWORD PTR cs:[esi]
  41fe1d:	dec    esi
  41fe1e:	ins    DWORD PTR es:[edi],dx
  41fe1f:	add    esi,ebx
  41fe21:	inc    edx
  41fe22:	jge    0x41fe47
  41fe24:	pushf  
  41fe25:	jg     0x41fe18
  41fe27:	out    0xd7,eax
  41fe29:	(bad)
  41fe2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe2d:	jmp    0x1f31f62c
  41fe32:	clc    
  41fe33:	mov    ecx,0xfcc84223
  41fe38:	and    eax,0x30c4a422
  41fe3d:	repnz push eax
  41fe3f:	sub    dl,BYTE PTR [edi]
  41fe41:	mov    esi,0x7951460c
  41fe46:	push   cs
  41fe47:	scas   eax,DWORD PTR es:[edi]
  41fe48:	ins    BYTE PTR es:[edi],dx
  41fe49:	jp     0x41fe67
  41fe4b:	sti    
  41fe4c:	mov    ebx,0xc34e9bf6
  41fe51:	add    BYTE PTR [edx-0x57f62e1e],0xd3
  41fe58:	rcr    DWORD PTR [edx+0x6df8942d],1
  41fe5e:	ret    0xe336
  41fe61:	aaa    
  41fe62:	scas   al,BYTE PTR es:[edi]
  41fe63:	xchg   ebx,eax
  41fe64:	retf   
  41fe65:	sbb    dl,bl
  41fe67:	mov    BYTE PTR [esi-0x3cd9717],ch
  41fe6d:	pop    ebp
  41fe6e:	add    DWORD PTR [edi+0x837b15c],esi
  41fe74:	mov    dh,0x19
  41fe76:	dec    DWORD PTR [edi-0x4e3ef748]
  41fe7c:	mov    ecx,0xc78e1f44
  41fe81:	sub    DWORD PTR [ebx+0x309cc83d],0x4f6f98e1
  41fe8b:	daa    
  41fe8c:	pop    ss
  41fe8d:	adc    ebx,DWORD PTR [ecx+0x25]
  41fe90:	call   0x42d:0xbb7fc715
  41fe97:	loopne 0x41fe79
  41fe99:	jg     0x41fec6
  41fe9b:	fsub   DWORD PTR [edx-0x80]
  41fe9e:	jae    0x41fea0
  41fea0:	out    dx,al
  41fea1:	mov    ebx,0x1d2e177e
  41fea6:	fadd   st(3),st
  41fea8:	push   eax
  41fea9:	inc    edx
  41feaa:	popa   
  41feab:	test   DWORD PTR [ebp+0x3a],ebx
  41feae:	ret    0x2853
  41feb1:	sub    BYTE PTR [ebx-0x2d],dl
  41feb4:	and    bl,BYTE PTR ds:0x8a145a96
  41feba:	add    BYTE PTR [eax],al
  41febc:	test   eax,0xff94c95e
  41fec1:	xchg   edi,eax
  41fec2:	std    
  41fec3:	jg     0x41fecf
  41fec5:	in     al,0x99
  41fec7:	pop    ecx
  41fec8:	cmp    BYTE PTR es:[edx+0x17b3492],cl
  41fecf:	add    BYTE PTR [esi-0x4dfffffe],al
  41fed5:	or     esp,DWORD PTR [eax]
  41fed7:	(bad)  
  41fed8:	cli    
  41fed9:	shl    BYTE PTR [eax-0x26f00d7],cl
  41fedf:	and    DWORD PTR [ecx*2-0xe65bf30],ecx
  41fee6:	mov    ecx,0xaf04fc09
  41feeb:	ja     0x41ff68
  41feed:	ins    BYTE PTR es:[edi],dx
  41feee:	dec    edx
  41feef:	sbb    edi,DWORD PTR [ecx-0x64d5864e]
  41fef5:	int    0x64
  41fef7:	dec    edx
  41fef8:	push   cs
  41fef9:	sub    BYTE PTR [edx+0x40ff64d4],ah
  41feff:	ss iret 
  41ff01:	dec    edx
  41ff02:	add    al,bl
  41ff04:	aam    0x52
  41ff06:	div    esi
  41ff08:	xchg   edi,eax
  41ff09:	dec    esp
  41ff0a:	sbb    al,0x16
  41ff0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff0d:	mov    ebx,0xd34df064
  41ff12:	ret    0x6242
  41ff15:	cmp    ebp,DWORD PTR [esp+ebx*2-0x5d]
  41ff19:	add    edi,DWORD PTR es:[esi+0x67b0ac21]
  41ff20:	ins    BYTE PTR es:[edi],dx
  41ff21:	test   DWORD PTR [di+0x2263],0x2749811a
  41ff2a:	pop    edi
  41ff2b:	dec    ecx
  41ff2c:	and    DWORD PTR [edi+0x79b54d1f],edi
  41ff32:	js     0x41ff38
  41ff34:	loopne 0x41fef1
  41ff36:	and    bh,ah
  41ff38:	xchg   ebp,eax
  41ff39:	jge    0x41ff85
  41ff3b:	imul   esp,DWORD PTR [ebx-0xa],0x95a33cf1
  41ff42:	ja     0x41ff8e
  41ff44:	retf   0x2e7f
  41ff47:	ss jg  0x41ff69
  41ff4a:	fcomp  DWORD PTR [ebx+0x38]
  41ff4d:	aaa    
  41ff4e:	pop    edi
  41ff4f:	cdq    
  41ff50:	jns    0x41fedc
  41ff52:	pop    ebx
  41ff53:	inc    edx
  41ff54:	mov    WORD PTR [ebx],cs
  41ff56:	das    
  41ff57:	xlat   BYTE PTR ds:[ebx]
  41ff58:	pop    ebx
  41ff59:	out    0x40,al
  41ff5b:	clc    
  41ff5c:	ins    DWORD PTR es:[edi],dx
  41ff5d:	(bad)  
  41ff5e:	stc    
  41ff5f:	or     al,0x8a
  41ff61:	jmp    0x553e5233
  41ff66:	xchg   ecx,eax
  41ff67:	fsub   st,st(5)
  41ff69:	xchg   edi,eax
  41ff6a:	sub    ebp,DWORD PTR ds:0x70f64f57
  41ff70:	adc    DWORD PTR [ebx+esi*1-0x2cda6838],ebp
  41ff77:	aam    0xec
  41ff79:	mov    ebp,0x1bb7d21c
  41ff7e:	dec    ebx
  41ff7f:	test   BYTE PTR [edi-0x6cf5405a],ch
  41ff85:	cmp    cl,BYTE PTR [ebx]
  41ff87:	into   
  41ff88:	test   eax,0xfdf01169
  41ff8d:	or     DWORD PTR [edi],eax
  41ff8f:	or     eax,DWORD PTR [ebx-0x67136aa4]
  41ff95:	les    ecx,FWORD PTR [edx]
  41ff97:	loope  0x41ff31
  41ff99:	cmp    DWORD PTR [ebx+0x2],0xffffffd1
  41ff9d:	in     eax,0xc3
  41ff9f:	loopne 0x41ff63
  41ffa1:	xchg   esi,eax
  41ffa2:	pop    ebp
  41ffa3:	stc    
  41ffa4:	mov    bh,0xe7
  41ffa6:	dec    ebp
  41ffa7:	sbb    BYTE PTR [edi+0x18d817a9],bh
  41ffad:	popa   
  41ffae:	scas   al,BYTE PTR es:[edi]
  41ffaf:	test   al,0xc5
  41ffb1:	and    cl,0x64
  41ffb4:	pop    ebp
  41ffb5:	pop    ebp
  41ffb6:	sbb    esp,esi
  41ffb8:	cmp    al,0x57
  41ffba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffbb:	xchg   esp,eax
  41ffbc:	sar    BYTE PTR [ebx],0x3f
  41ffbf:	les    esi,FWORD PTR [esi]
  41ffc1:	cld    
  41ffc2:	ret    0xe7aa
  41ffc5:	cmc    
  41ffc6:	mov    ebp,0xaeaef206
  41ffcb:	js     0x41ff5e
  41ffcd:	ret    0xcb3
  41ffd0:	loopne 0x41ffcd
  41ffd2:	into   
  41ffd3:	or     eax,DWORD PTR [edx+0x77]
  41ffd6:	push   cs
  41ffd7:	xor    ch,bl
  41ffd9:	and    BYTE PTR [ecx+ebp*1-0xcfca50f],bh
  41ffe0:	adc    DWORD PTR [ebp+0x69ed0c65],esi
  41ffe6:	sub    bh,BYTE PTR [ecx+ecx*2+0x1e97b416]
  41ffed:	pusha  
  41ffee:	or     eax,0x781940ab
  41fff3:	cdq    
  41fff4:	add    DWORD PTR [edi],eax
  41fff6:	cmp    DWORD PTR [esi],esi
  41fff8:	aam    0xf6
  41fffa:	int    0xb2
  41fffc:	test   DWORD PTR [edx-0x7a],esi
  41ffff:	adc    al,0x77
  420001:	or     bh,ch
  420003:	pop    es
  420004:	retf   0x42a4
  420007:	and    dh,BYTE PTR [edi+eiz*1+0x74]
  42000b:	mov    edi,0x97485af
  420010:	pop    edi
  420011:	shr    DWORD PTR [edi],cl
  420013:	push   ecx
  420014:	adc    cl,BYTE PTR [ecx+0x4c]
  420017:	jno    0x41ffd9
  420019:	out    dx,eax
  42001a:	add    eax,0x2734552a
  42001f:	adc    al,0xe
  420021:	add    dh,bh
  420023:	mov    dl,0x9d
  420025:	in     al,dx
  420026:	push   ecx
  420027:	add    ebp,edi
  420029:	addr16 mov bh,0x10
  42002c:	and    al,0x56
  42002e:	push   esi
  42002f:	sub    al,0xa1
  420031:	fmul   QWORD PTR [ebx+0x6]
  420034:	bound  ebp,QWORD PTR [edx+0x6e]
  420037:	dec    eax
  420038:	push   edi
  420039:	jo     0x41ffdc
  42003b:	rcl    BYTE PTR [ecx],0x7f
  42003e:	mov    dh,0x68
  420040:	sbb    BYTE PTR [ebx+eiz*1-0xb],0xb0
  420045:	adc    DWORD PTR [ecx+0x38],esi
  420048:	cmp    al,0xb0
  42004a:	mov    ah,bl
  42004c:	push   esi
  42004d:	addr16 sahf 
  42004f:	cmc    
  420050:	push   es
  420051:	push   es
  420052:	das    
  420053:	mov    BYTE PTR [edx],ah
  420055:	outs   dx,BYTE PTR ds:[esi]
  420056:	mov    bl,0xa3
  420058:	adc    al,0xfd
  42005a:	add    al,0xe
  42005c:	lea    esi,[ebp-0x6acae713]
  420062:	xchg   BYTE PTR [esi-0x6ba2e907],bh
  420068:	push   ecx
  420069:	enter  0xf5e5,0x17
  42006d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42006e:	ret    
  42006f:	cli    
  420070:	dec    ebp
  420071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420072:	out    dx,al
  420073:	aam    0x12
  420075:	shl    DWORD PTR [edx-0xe23e237],cl
  42007b:	sub    bh,BYTE PTR [ebp+edi*1-0xc2def5f]
  420082:	mov    edi,0x23e51de1
  420087:	pop    ss
  420088:	push   0x55
  42008a:	and    eax,0x2c72166a
  42008f:	pop    esp
  420090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420091:	push   edi
  420092:	mov    ds:0xc6197c83,al
  420097:	scas   al,BYTE PTR es:[edi]
  420098:	xor    BYTE PTR [esi+0x4d],dl
  42009b:	jnp    0x420083
  42009d:	fcmovnbe st,st(0)
  42009f:	xor    al,0xcb
  4200a1:	or     DWORD PTR [ebx+esi*4+0x1920e0bc],ebx
  4200a8:	mov    ds,WORD PTR [edi+edx*8]
  4200ab:	mov    cl,0x6
  4200ad:	push   esi
  4200ae:	lods   al,BYTE PTR ds:[esi]
  4200af:	mov    ecx,0xeaa5957b
  4200b4:	xchg   ecx,eax
  4200b5:	imul   edx,DWORD PTR [edi],0x8e069d84
  4200bb:	pop    esi
  4200bc:	inc    esi
  4200bd:	in     eax,dx
  4200be:	pop    edx
  4200bf:	sub    edi,edx
  4200c1:	test   eax,0x9bf2045e
  4200c6:	ret    
  4200c7:	repnz sbb BYTE PTR [edi],0xc4
  4200cb:	aam    0x32
  4200cd:	imul   edi,DWORD PTR cs:[edi+0x61df820],0x933dab94
  4200d8:	icebp  
  4200d9:	test   BYTE PTR [edi+0x36],al
  4200dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200dd:	out    0xc9,al
  4200df:	xchg   esp,eax
  4200e0:	lea    edi,[ebx-0x47]
  4200e3:	add    BYTE PTR [ebx+0x18e20339],dh
  4200e9:	mov    al,0x9c
  4200eb:	bound  ebp,QWORD PTR [esi+0x47]
  4200ee:	adc    DWORD PTR [eax+ebx*2+0x13b26e52],edi
  4200f5:	mov    cl,0x5f
  4200f7:	imul   ebp,DWORD PTR [edx+0x52],0xffffff82
  4200fb:	pop    ds
  4200fc:	add    ebx,0x5379c5d
  420102:	jmp    0xe6c5:0x880a2a63
  420109:	repz addr16 push ecx
  42010c:	or     DWORD PTR [edi],ebx
  42010e:	outs   dx,BYTE PTR ds:[esi]
  42010f:	and    ah,0x39
  420112:	fsub   QWORD PTR [ecx]
  420114:	mov    esi,0x737676f7
  420119:	adc    dl,BYTE PTR [ebp-0x6aad43fb]
  42011f:	int    0x91
  420121:	inc    edx
  420122:	ins    DWORD PTR es:[edi],dx
  420123:	enter  0x2870,0x55
  420127:	xlat   BYTE PTR ds:[ebx]
  420128:	(bad)  
  420129:	cmp    ch,BYTE PTR [edi]
  42012b:	les    esp,FWORD PTR [edi-0x24e1b1e7]
  420131:	das    
  420132:	jo     0x42013f
  420134:	inc    esp
  420135:	push   0x85622691
  42013a:	adc    BYTE PTR [edx+0x1543bc7f],0x8f
  420141:	lods   al,BYTE PTR ds:[esi]
  420142:	push   ecx
  420143:	xor    esp,DWORD PTR [ecx-0x49]
  420146:	inc    esp
  420147:	push   ebx
  420148:	xchg   ebp,eax
  420149:	ds push edx
  42014b:	mov    ch,0xd8
  42014d:	push   0xffffffed
  42014f:	adc    ch,bh
  420151:	mov    esi,0x80c36151
  420156:	dec    ebp
  420157:	push   0xe
  420159:	mov    DWORD PTR [eax],0x39cfbb00
  42015f:	jne    0x4201de
  420161:	idiv   edi
  420163:	iret   
  420164:	std    
  420165:	mov    ecx,DWORD PTR [esi+0x2e23240f]
  42016b:	lods   al,BYTE PTR ds:[esi]
  42016c:	mov    edx,0x8600017d
  420171:	add    al,BYTE PTR [eax]
  420173:	add    BYTE PTR [edi+0x5f33192],ah
  420179:	and    DWORD PTR [eax+ebx*1+0x193f40df],edx
  420180:	in     al,dx
  420181:	sbb    eax,0xb4d5d6f8
  420186:	sti    
  420187:	imul   ebp,ebx,0xffffffa6
  42018a:	sbb    ebp,DWORD PTR [ebp+0x208d87d4]
  420190:	test   dl,bl
  420192:	test   eax,0x6712a54c
  420197:	xchg   esi,eax
  420198:	loope  0x42016f
  42019a:	or     eax,0xa142ec95
  42019f:	retf   
  4201a0:	leave  
  4201a1:	inc    ebx
  4201a2:	push   edx
  4201a3:	inc    ebx
  4201a4:	and    al,0xc3
  4201a6:	jb     0x42013e
  4201a8:	gs in  eax,0x92
  4201ab:	jno    0x4201be
  4201ad:	clc    
  4201ae:	aas    
  4201af:	call   0xf07dd2e6
  4201b4:	push   ss
  4201b5:	jnp    0x420198
  4201b7:	sub    al,0x6e
  4201b9:	sbb    eax,0x81481390
  4201be:	test   DWORD PTR [edx+0x36466ced],edi
  4201c4:	stos   DWORD PTR es:[edi],eax
  4201c5:	fnsave [edi+0x33]
  4201c8:	dec    edx
  4201c9:	cmp    al,0x91
  4201cb:	push   eax
  4201cc:	mov    cl,BYTE PTR [eax+eax*8+0x1c]
  4201d0:	outs   dx,BYTE PTR ds:[esi]
  4201d1:	ror    edi,0x66
  4201d4:	xchg   esp,eax
  4201d5:	popf   
  4201d6:	sbb    al,0xf8
  4201d8:	fmul   DWORD PTR [ebp+0x3d7128a8]
  4201de:	xor    ebx,DWORD PTR [edx+0x36]
  4201e1:	xchg   ecx,eax
  4201e2:	fadd   QWORD PTR [edi-0x7f04dbed]
  4201e8:	xchg   esi,eax
  4201e9:	jecxz  0x4201e5
  4201eb:	jbe    0x420260
  4201ed:	hlt    
  4201ee:	fwait
  4201ef:	push   edi
  4201f0:	fsubr  QWORD PTR fs:[edx+0x1f]
  4201f4:	ss sub al,0x53
  4201f7:	mov    DWORD PTR [ecx+0xa],ebp
  4201fa:	idiv   DWORD PTR [ebp+0x2b]
  4201fd:	cwde   
  4201fe:	dec    ecx
  4201ff:	int3   
  420200:	loope  0x4201cc
  420202:	adc    dl,BYTE PTR [eax-0x605f41fd]
  420208:	adc    DWORD PTR [edi+0x60a517a0],0x3a0b6bcc
  420212:	xor    al,0x23
  420214:	test   DWORD PTR [ebx+edi*8-0x3f],edx
  420218:	std    
  420219:	fsubr  st,st(2)
  42021b:	es cmp ebp,esp
  42021e:	shr    bl,cl
  420220:	mov    ch,0xb5
  420222:	fs ds push ds
  420225:	xchg   ecx,eax
  420226:	cdq    
  420227:	or     esi,eax
  420229:	(bad)  
  42022a:	xor    al,0x9e
  42022c:	jge    0x42021a
  42022e:	push   esi
  42022f:	jl     0x4201c5
  420231:	cmp    al,0xe
  420233:	adc    al,0x2
  420235:	push   DWORD PTR [edi+ecx*8]
  420238:	sub    BYTE PTR es:[edx],ch
  42023b:	xchg   ebp,eax
  42023c:	rcr    DWORD PTR [esi+0x5fc7b0ee],0x26
  420243:	and    bh,BYTE PTR [ebx-0x78]
  420246:	dec    edx
  420247:	or     al,0x11
  420249:	(bad)  
  42024a:	cmp    DWORD PTR [ebp-0x5031e012],ecx
  420250:	sahf   
  420251:	adc    esi,DWORD PTR [edi]
  420253:	out    dx,al
  420254:	cs inc eax
  420256:	clc    
  420257:	ds out dx,eax
  420259:	inc    esp
  42025a:	pop    esi
  42025b:	add    BYTE PTR [ecx],bh
  42025d:	test   esi,ebx
  42025f:	fdiv   DWORD PTR [ecx+0x33882d3a]
  420265:	push   cs
  420266:	dec    edi
  420267:	or     BYTE PTR [edi],bh
  420269:	mov    bl,ch
  42026b:	xchg   edx,eax
  42026c:	inc    esi
  42026d:	ret    0x6c80
  420270:	cmp    al,0xe
  420272:	dec    ecx
  420273:	pushf  
  420274:	imul   ebx,DWORD PTR [esi+0x6b5354ef],0xd423643f
  42027e:	jne    0x42029d
  420280:	inc    edi
  420281:	outs   dx,BYTE PTR ds:[esi]
  420282:	xchg   esi,eax
  420283:	inc    ecx
  420284:	adc    eax,0x2c0333dc
  420289:	push   ebp
  42028a:	pop    ds
  42028b:	jge    0x4202a3
  42028d:	sbb    edx,DWORD PTR [ecx-0x7d5b8276]
  420293:	js     0x420255
  420295:	mov    edi,0x4fa05a7b
  42029a:	scas   eax,DWORD PTR es:[edi]
  42029b:	ror    DWORD PTR [edi+0x3b],cl
  42029e:	jae    0x4202d0
  4202a0:	xor    BYTE PTR es:[esi],bl
  4202a3:	mov    edi,DWORD PTR [esi-0x242ab180]
  4202a9:	jg     0x420318
  4202ab:	mov    gs,esp
  4202ad:	sbb    eax,0x3aa1820b
  4202b2:	call   0x4b07:0x1e22cadb
  4202b9:	add    eax,ebx
  4202bb:	xor    BYTE PTR ds:0x5ae558ed,ch
  4202c1:	xchg   ebx,eax
  4202c2:	cmp    ah,BYTE PTR [ecx]
  4202c4:	jmp    0x420251
  4202c6:	adc    DWORD PTR [edi+0x3f],eax
  4202c9:	xchg   edi,eax
  4202ca:	mov    BYTE PTR [esp+esi*1],0xc4
  4202ce:	loopne 0x420267
  4202d0:	sub    eax,0x52212b97
  4202d5:	fld    TBYTE PTR [ebx-0x3d]
  4202d8:	pop    edx
  4202d9:	out    0xa3,eax
  4202db:	mov    DWORD PTR [edi-0x65],esi
  4202de:	ja     0x420313
  4202e0:	aaa    
  4202e1:	int3   
  4202e2:	scas   al,BYTE PTR es:[edi]
  4202e3:	cmp    ecx,DWORD PTR [edi]
  4202e5:	xchg   cl,cl
  4202e7:	xchg   dh,cl
  4202e9:	or     cl,BYTE PTR [ebp+0x3b143dee]
  4202ef:	xor    BYTE PTR [esp+edx*2-0xa],ah
  4202f3:	mov    WORD PTR [edi],ss
  4202f5:	inc    ebx
  4202f6:	add    edx,DWORD PTR [esp+eax*8+0x4b]
  4202fa:	jp     0x420353
  4202fc:	push   0x1d6f9cce
  420301:	jae    0x420348
  420303:	out    dx,al
  420304:	scas   al,BYTE PTR es:[edi]
  420305:	adc    ebx,DWORD PTR [ebp-0x7e]
  420308:	mov    ch,BYTE PTR [edi+0x26]
  42030b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030c:	sub    eax,DWORD PTR [edi+0x7b]
  42030f:	or     BYTE PTR [eax],ch
  420311:	(bad)
  420315:	cdq    
  420316:	scas   al,BYTE PTR es:[edi]
  420317:	sbb    BYTE PTR [edx+eiz*1],0xe0
  42031b:	ficom  WORD PTR [ecx-0x1e]
  42031e:	out    0xce,eax
  420320:	pop    ebx
  420321:	dec    ebp
  420322:	sti    
  420323:	imul   edi,DWORD PTR [ebp-0x20],0xb7abea44
  42032a:	scas   eax,DWORD PTR es:[edi]
  42032b:	adc    BYTE PTR ds:0x3451d0dc,al
  420331:	inc    esp
  420332:	cmp    al,0xed
  420334:	out    0xcd,eax
  420336:	xor    edx,DWORD PTR [ebx]
  420338:	ret    0xea0d
  42033b:	add    ebp,DWORD PTR [edx]
  42033d:	shl    DWORD PTR [ebx],1
  42033f:	lock mov ds:0x82540caf,eax
  420345:	imul   edi,esi,0x5d
  420348:	bound  edx,QWORD PTR [eax+0x1d3b3e77]
  42034e:	jmp    0xf9c9:0x56e6baa6
  420355:	dec    ebx
  420356:	pop    ds
  420357:	mov    dl,0x11
  420359:	cwde   
  42035a:	into   
  42035b:	dec    ecx
  42035c:	cmp    BYTE PTR [ebx+0x2466c69f],0x19
  420363:	or     al,0x16
  420365:	xchg   esp,eax
  420366:	sub    edi,DWORD PTR [edx-0x73]
  420369:	inc    esp
  42036a:	push   esp
  42036b:	pop    ecx
  42036c:	out    dx,eax
  42036d:	and    al,BYTE PTR [ecx+0x452eb3e3]
  420373:	fiadd  DWORD PTR [ebp+0x51]
  420376:	pop    ds
  420377:	stos   BYTE PTR es:[edi],al
  420378:	mov    al,0x5c
  42037a:	dec    di
  42037c:	push   0xffffffc6
  42037e:	outs   dx,BYTE PTR ds:[esi]
  42037f:	pop    edx
  420380:	iret   
  420381:	cdq    
  420382:	jl     0x4203ef
  420384:	jbe    0x4203a2
  420386:	xchg   ch,ch
  420388:	retf   0xfee0
  42038b:	int3   
  42038c:	push   0xffffffa3
  42038e:	loope  0x4203ff
  420390:	jbe    0x4203d5
  420392:	lods   eax,DWORD PTR ds:[esi]
  420393:	add    al,BYTE PTR [ecx-0x28]
  420396:	inc    ebx
  420397:	xor    al,0xc4
  420399:	test   BYTE PTR [ebx+ecx*2+0x45ef292a],al
  4203a0:	and    BYTE PTR [edi],ah
  4203a2:	push   ebx
  4203a3:	cld    
  4203a4:	popa   
  4203a5:	(bad)  
  4203a6:	xchg   edx,eax
  4203a7:	xchg   ebx,eax
  4203a8:	shl    BYTE PTR [ecx-0x5b],0xe
  4203ac:	sub    al,0x3f
  4203ae:	push   ss
  4203af:	femms  
  4203b1:	jae    0x4203eb
  4203b3:	adc    BYTE PTR [edx+0x66],al
  4203b6:	retf   0xa3fa
  4203b9:	dec    ebx
  4203ba:	inc    edi
  4203bb:	sub    al,0xb2
  4203bd:	lds    esi,FWORD PTR [esi]
  4203bf:	in     eax,dx
  4203c0:	cwde   
  4203c1:	stc    
  4203c2:	and    eax,0x9fc8c839
  4203c7:	sub    DWORD PTR [edi+esi*4],ebx
  4203ca:	sub    BYTE PTR [ebx],al
  4203cc:	jne    0x42036f
  4203ce:	pushf  
  4203cf:	ficom  WORD PTR [ecx-0x5a]
  4203d2:	ins    BYTE PTR es:[edi],dx
  4203d3:	pop    ebp
  4203d4:	sbb    esp,DWORD PTR [esi]
  4203d6:	jnp    0x4203db
  4203d8:	shl    DWORD PTR [ecx+0x18],0xfa
  4203dc:	mov    BYTE PTR [eax+0x4000a9d2],0x61
  4203e3:	push   eax
  4203e4:	xor    ebx,DWORD PTR [ecx]
  4203e6:	mov    cl,0x44
  4203e8:	repz fidivr DWORD PTR [ebx]
  4203eb:	setp   BYTE PTR [ebp-0x8]
  4203ef:	dec    edx
  4203f0:	js     0x4203c4
  4203f2:	pop    esp
  4203f3:	jnp    0x420435
  4203f5:	mov    ah,0x3e
  4203f7:	jo     0x4203bb
  4203f9:	fiadd  WORD PTR [eax]
  4203fb:	add    dh,ch
  4203fd:	ret    0x2d9d
  420400:	mov    ebp,0x3fc3fe7f
  420405:	out    dx,eax
  420406:	mov    edi,0x24e5e837
  42040b:	adc    DWORD PTR [eax-0x80],eax
  42040e:	add    DWORD PTR [eax],eax
  420410:	xchg   BYTE PTR [edx],al
  420412:	add    BYTE PTR [eax],al
  420414:	ins    BYTE PTR es:[edi],dx
  420415:	addr16 push esp
  420417:	icebp  
  420418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420419:	xchg   edi,eax
  42041a:	dec    ebx
  42041b:	pop    edi
  42041c:	js     0x42043f
  42041e:	pop    ebx
  42041f:	or     BYTE PTR [edi],al
  420421:	popf   
  420422:	sub    eax,0x2cf4f899
  420427:	push   edi
  420428:	push   ss
  420429:	pop    ss
  42042a:	sti    
  42042b:	std    
  42042c:	cmp    eax,0x92a080e
  420431:	fild   QWORD PTR [ebp-0x16]
  420434:	gs fs mov ecx,0xe4d59ccb
  42043b:	cdq    
  42043c:	dec    eax
  42043d:	mov    edi,0x88de3394
  420442:	mov    ds:0xe3d5d8a,eax
  420447:	aam    0x4a
  420449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42044a:	dec    eax
  42044b:	inc    esp
  42044c:	loop   0x4204c7
  42044e:	jp     0x420457
  420450:	sbb    BYTE PTR [ebx+0xfc68262],dh
  420456:	ja     0x42048f
  420458:	pop    ss
  420459:	lock gs daa 
  42045c:	jnp    0x42043b
  42045e:	dec    edx
  42045f:	retf   
  420460:	pop    eax
  420461:	aas    
  420462:	mov    BYTE PTR [ecx],bh
  420464:	sar    DWORD PTR [edx+0x19],cl
  420467:	xchg   edi,eax
  420468:	mov    ebp,0x8f42b46f
  42046d:	jae    0x420483
  42046f:	and    ch,0x3c
  420472:	xchg   ebx,eax
  420473:	push   ecx
  420474:	mov    BYTE PTR [ebp+0x27],dh
  420477:	pop    es
  420478:	add    eax,0xa24aaf55
  42047d:	jmp    0x46c7:0x39e3aa8d
  420484:	lods   eax,DWORD PTR ds:[esi]
  420485:	push   0xf0af941d
  42048a:	outs   dx,DWORD PTR ds:[esi]
  42048b:	mov    bh,0x82
  42048d:	push   ebp
  42048e:	dec    ebx
  42048f:	inc    ebp
  420490:	sub    ecx,esp
  420492:	push   es
  420493:	imul   eax,DWORD PTR [ecx-0x749bd675],0x34
  42049a:	push   ebp
  42049b:	jne    0x42043e
  42049d:	xchg   BYTE PTR [edi-0x60c8fc91],ch
  4204a3:	or     eax,0x953f72e5
  4204a8:	inc    esi
  4204a9:	jns    0x4204b3
  4204ab:	xor    DWORD PTR [edx-0x740ea5a6],edx
  4204b1:	std    
  4204b2:	imul   ebp,DWORD PTR [edx-0x4],0x3384d291
  4204b9:	(bad)  
  4204ba:	int    0xa1
  4204bc:	xor    eax,0x921c6d92
  4204c1:	cmp    al,BYTE PTR [edx]
  4204c3:	jmpw   0xa20b
  4204c7:	mov    ds:0x302cf3d,eax
  4204cc:	xchg   esi,eax
  4204cd:	test   al,0x7b
  4204cf:	dec    ebx
  4204d0:	cmp    al,al
  4204d2:	xchg   ebp,eax
  4204d3:	pop    edx
  4204d4:	scas   eax,DWORD PTR es:[edi]
  4204d5:	sub    edx,DWORD PTR [ecx]
  4204d7:	jnp    0x420490
  4204d9:	std    
  4204da:	sub    DWORD PTR [ecx],0xffffffc7
  4204dd:	mul    ecx
  4204df:	jmp    0xaaf9606f
  4204e4:	out    0xe2,al
  4204e6:	mov    eax,0x3146f48a
  4204eb:	imul   ebp,DWORD PTR [eax-0x4f9ffe8a],0x2b6ebcd
  4204f5:	and    ah,BYTE PTR [edx+0x57]
  4204f8:	dec    edx
  4204f9:	jl     0x42049a
  4204fb:	jno    0x4204b8
  4204fd:	shl    eax,1
  4204ff:	pop    ss
  420500:	stos   DWORD PTR es:[edi],eax
  420501:	xor    cl,bl
  420503:	and    ch,BYTE PTR [eax+0x3d]
  420506:	call   0x5361e99b
  42050b:	pop    ebx
  42050c:	(bad)
  420510:	add    BYTE PTR [ecx+0x6],bl
  420513:	pusha  
  420514:	sub    BYTE PTR [edx+0x73],bh
  420517:	jnp    0x4204ec
  420519:	adc    bh,dl
  42051b:	adc    BYTE PTR [edi-0x47e4a170],0xb5
  420522:	sbb    BYTE PTR [ecx-0x7b],cl
  420525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420526:	lea    esi,[edx]
  420528:	add    DWORD PTR [esi],esp
  42052a:	mov    eax,eax
  42052c:	push   ds
  42052d:	outs   dx,DWORD PTR ds:[esi]
  42052e:	call   0xdec1aded
  420533:	cmp    eax,0xf54bd46f
  420538:	fucomp st(4)
  42053a:	hlt    
  42053b:	daa    
  42053c:	lea    esi,[esi]
  42053e:	lahf   
  42053f:	scas   al,BYTE PTR es:[edi]
  420540:	sub    al,dh
  420542:	pop    edx
  420543:	ja     0x420510
  420545:	sub    esp,DWORD PTR [ecx+0x74aa6e19]
  42054b:	mov    ?,WORD PTR [ebx-0x310cae7e]
  420551:	ret    0x2678
  420554:	fild   QWORD PTR [esi-0x34b24a9c]
  42055a:	sub    bh,0x92
  42055d:	sbb    bl,BYTE PTR [eax+ebx*1+0x76777c96]
  420564:	out    dx,eax
  420565:	or     eax,0x334d37fd
  42056a:	push   0xeff60a90
  42056f:	xor    cl,bl
  420571:	jge    0x42050f
  420573:	(bad)  
  420574:	(bad)  
  420576:	xchg   esi,eax
  420577:	dec    ebx
  420578:	das    
  420579:	lds    ecx,FWORD PTR [esi+0x7a]
  42057c:	stos   DWORD PTR es:[edi],eax
  42057d:	pusha  
  42057e:	lds    eax,FWORD PTR [ebx]
  420580:	(bad)  
  420581:	js     0x420511
  420583:	popa   
  420584:	sti    
  420585:	shl    BYTE PTR [edi-0x39371272],cl
  42058b:	gs (bad) 
  42058e:	or     bl,ch
  420590:	fwait
  420591:	lock dec ecx
  420593:	sti    
  420594:	cmp    ebp,DWORD PTR [ecx]
  420596:	cwde   
  420597:	xchg   edx,eax
  420598:	cmc    
  420599:	lock mov DWORD PTR [edx-0x24a7605d],eax
  4205a0:	call   0x29315890
  4205a5:	(bad)  
  4205a6:	pop    esp
  4205a7:	and    ecx,DWORD PTR [eax-0x44]
  4205aa:	and    al,BYTE PTR [eax+0x61]
  4205ad:	fadd   DWORD PTR [ebp-0x16]
  4205b0:	test   eax,0x7d6b9a6
  4205b6:	jge    0x4205c4
  4205b8:	loope  0x42057b
  4205ba:	stos   BYTE PTR es:[edi],al
  4205bb:	mov    dh,0x84
  4205bd:	fisub  WORD PTR [eax+0x64]
  4205c0:	dec    eax
  4205c1:	into   
  4205c2:	loope  0x42056c
  4205c4:	add    ch,BYTE PTR [ebp-0x22]
  4205c7:	imul   ecx
  4205c9:	xor    edx,DWORD PTR [esi-0x181ba53d]
  4205cf:	retf   
  4205d0:	cdq    
  4205d1:	jo     0x4205cc
  4205d3:	iret   
  4205d4:	into   
  4205d5:	sbb    dh,BYTE PTR [ebx-0x3722a076]
  4205db:	push   edx
  4205dc:	je     0x4205f8
  4205de:	push   ebp
  4205df:	sub    eax,0x44bb8128
  4205e4:	fisttp QWORD PTR [eax-0x48]
  4205e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205e8:	jmp    0x3cb73f92
  4205ed:	sub    BYTE PTR [edx],dh
  4205ef:	xchg   BYTE PTR [esi+0x69],bl
  4205f2:	mov    ebx,0xa04bdf03
  4205f7:	js     0x42061c
  4205f9:	mov    cl,al
  4205fb:	xchg   edx,eax
  4205fc:	imul   esp,DWORD PTR [esi+0x1d445f99],0x750dbde1
  420606:	(bad)  
  420607:	dec    esp
  420608:	mov    ds:0x4423ea72,eax
  42060d:	in     al,0x95
  42060f:	stc    
  420610:	xchg   edx,eax
  420611:	push   0x7b22e780
  420616:	ret    0x2af1
  420619:	cdq    
  42061a:	clc    
  42061b:	xor    dh,BYTE PTR [ecx+ebp*1+0x4d]
  42061f:	jne    0x420681
  420621:	add    edi,eax
  420623:	push   esi
  420624:	shl    bl,cl
  420626:	fmul   QWORD PTR [ebx]
  420628:	xor    BYTE PTR [ebx+0x5173ed8],0x5d
  42062f:	ret    
  420630:	or     DWORD PTR ds:[eax],ebp
  420633:	mov    dh,0x14
  420636:	xchg   edi,eax
  420637:	adc    bl,dl
  420639:	(bad)  
  42063a:	mov    al,ds:0x7bc4da1c
  42063f:	scas   al,BYTE PTR es:[edi]
  420640:	dec    esp
  420641:	dec    edx
  420642:	xor    eax,0xd053d5f9
  420647:	iret   
  420648:	in     eax,0xdc
  42064a:	rcl    eax,1
  42064c:	aas    
  42064d:	rol    DWORD PTR [ecx+0x50],cl
  420650:	mov    al,0x8d
  420652:	nop
  420653:	jmp    0x42060f
  420655:	enter  0x2452,0x42
  420659:	jmp    0x4205db
  42065b:	push   0x5f2e8e91
  420660:	jbe    0x42060a
  420662:	and    al,0xf3
  420664:	sbb    DWORD PTR [ebx-0x65b805d3],0x71
  42066b:	stos   DWORD PTR es:[edi],eax
  42066c:	jns    0x42066a
  42066e:	mov    es,WORD PTR [ebx+0x1ffdb89f]
  420674:	dec    edi
  420675:	test   DWORD PTR [ebx-0x25],ecx
  420678:	add    BYTE PTR [edx+0x45be5ea7],ah
  42067e:	enterw 0x4b08,0xd3
  420683:	iret   
  420684:	das    
  420685:	or     DWORD PTR [edi],edi
  420687:	iret   
  420688:	sub    edx,DWORD PTR [ecx]
  42068a:	push   edi
  42068b:	fnstenv [esp+edi*8-0x22ff02ae]
  420692:	and    ah,BYTE PTR [ebx*8+0x47ebc046]
  420699:	and    al,0x0
  42069b:	add    BYTE PTR [ebx-0x2a],dl
  42069e:	(bad)  
  42069f:	push   esi
  4206a0:	(bad)  
  4206a1:	jle    0x42069e
  4206a3:	xlat   BYTE PTR ds:[ebx]
  4206a4:	outs   dx,DWORD PTR ds:[esi]
  4206a5:	mov    ah,0x77
  4206a7:	call   0x82c6:0x477d471b
  4206ae:	add    DWORD PTR [eax],eax
  4206b0:	xchg   BYTE PTR [edx],al
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	push   ecx
  4206b5:	fisttp QWORD PTR [edx]
  4206b7:	inc    edi
  4206b8:	dec    edi
  4206b9:	xor    ecx,DWORD PTR [edx-0x5]
  4206bc:	jnp    0x42065c
  4206be:	(bad)  
  4206bf:	stos   DWORD PTR es:[edi],eax
  4206c0:	sar    DWORD PTR [ebx+edi*2-0xb],0x1c
  4206c5:	fst    QWORD PTR [esi-0x4a]
  4206c8:	repnz cs enter 0xb2c4,0x39
  4206ce:	test   BYTE PTR [ecx],ah
  4206d0:	rdpmc  
  4206d2:	xor    DWORD PTR [ebx],ebx
  4206d4:	jb     0x420738
  4206d6:	imul   esp,DWORD PTR [edi],0x567eccc1
  4206dc:	(bad)  
  4206de:	in     al,0xa4
  4206e0:	add    eax,edi
  4206e2:	imul   bl
  4206e4:	push   eax
  4206e5:	mov    ah,0x33
  4206e7:	daa    
  4206e8:	sbb    bh,BYTE PTR [esi+0x17]
  4206eb:	cmp    al,0x92
  4206ed:	mul    DWORD PTR [ebp-0x7e]
  4206f0:	hlt    
  4206f1:	push   ss
  4206f2:	nop
  4206f3:	pop    ecx
  4206f4:	add    al,0x49
  4206f6:	ret    0x3d62
  4206f9:	mov    ds:0x6fa723df,eax
  4206fe:	push   eax
  4206ff:	xchg   esp,eax
  420700:	test   DWORD PTR [ebx-0x22],ebp
  420703:	imul   edx,ebx,0x6c6c3798
  420709:	add    BYTE PTR [ecx+0x246286c6],dl
  42070f:	pop    esi
  420710:	xor    DWORD PTR [eax-0x57],esp
  420713:	sbb    al,0x76
  420715:	and    al,0x97
  420717:	sbb    al,0x9e
  420719:	das    
  42071a:	jo     0x4206af
  42071c:	pop    edi
  42071d:	mov    eax,0x93235075
  420722:	xchg   edx,eax
  420723:	fld    TBYTE PTR [eax-0x54]
  420726:	ret    
  420727:	scas   al,BYTE PTR es:[edi]
  420728:	icebp  
  420729:	sbb    eax,0x824db99d
  42072e:	pop    edx
  42072f:	rol    DWORD PTR [esp+ecx*4-0x1f],0xd3
  420734:	jmp    0x4206c0
  420736:	pop    es
  420737:	cmp    BYTE PTR [ebx+ebp*8],bh
  42073a:	jae    0x4206d0
  42073c:	nop
  42073d:	(bad)  
  42073f:	jg     0x42073d
  420741:	cld    
  420742:	es cld 
  420744:	lar    edi,WORD PTR [eax]
  420747:	inc    edx
  420748:	fdivr  QWORD PTR [esi]
  42074a:	cmp    eax,DWORD PTR [ebx]
  42074c:	add    eax,0x7c25d4ae
  420751:	test   ecx,ebx
  420753:	enter  0x10b9,0xda
  420757:	ss hlt 
  420759:	fisttp WORD PTR cs:[edx]
  42075c:	pop    eax
  42075d:	lods   eax,DWORD PTR ds:[esi]
  42075e:	call   0xf617441c
  420763:	inc    ebp
  420764:	sbb    BYTE PTR [eax+0x7a],dl
  420767:	loop   0x420748
  420769:	repnz mov eax,ds:0x33a1dedf
  42076f:	xchg   esp,eax
  420770:	in     eax,0xc8
  420772:	pop    ebp
  420773:	loopne 0x42074d
  420775:	imul   esp,DWORD PTR [edi+eiz*2],0xffffff87
  420779:	and    BYTE PTR [ebx-0x4b],0x93
  42077d:	adc    DWORD PTR ds:0x365e47a0,0xef7f0746
  420787:	out    dx,al
  420788:	cwde   
  420789:	inc    esp
  42078a:	js     0x420760
  42078c:	addr16 cmc 
  42078e:	(bad)  
  42078f:	jnp    0x420739
  420791:	cmp    eax,0xe25e6fcf
  420796:	(bad)  
  420797:	dec    eax
  420798:	sub    bh,BYTE PTR [edi]
  42079a:	sub    esi,DWORD PTR [eax-0x61]
  42079d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42079e:	add    ah,ch
  4207a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207a1:	push   ebx
  4207a2:	cmc    
  4207a3:	out    dx,eax
  4207a4:	stos   BYTE PTR es:[edi],al
  4207a5:	xor    edx,esi
  4207a7:	push   edi
  4207a8:	mov    bl,0x1d
  4207aa:	ret    0xab11
  4207ad:	and    BYTE PTR [ecx+eiz*8],cl
  4207b0:	mov    ebx,0x8d354640
  4207b5:	clc    
  4207b6:	and    eax,0x95885b4b
  4207bb:	jmp    0xc134d1f5
  4207c0:	fmul   QWORD PTR [edx+0x6c496f1e]
  4207c6:	test   al,0xc5
  4207c8:	mov    al,ds:0x161bdb8d
  4207cd:	pushf  
  4207ce:	add    BYTE PTR [eax+0x790a6d4c],bh
  4207d4:	call   FWORD PTR [ebp+0x103a4e7]
  4207da:	pop    esi
  4207db:	ds xchg edx,eax
  4207dd:	cmp    BYTE PTR [ebx+eax*2-0x6005289f],dh
  4207e4:	inc    ecx
  4207e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207e6:	sub    al,0x6a
  4207e8:	add    eax,0xda3ec02
  4207ed:	pop    eax
  4207ee:	jecxz  0x420820
  4207f0:	call   0x70ee5fe6
  4207f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207f6:	(bad)  
  4207f7:	push   ebx
  4207f8:	sub    dl,BYTE PTR [edx+0x3d]
  4207fb:	xchg   ecx,eax
  4207fc:	and    edi,esi
  4207fe:	xor    al,0x8b
  420800:	xchg   esi,eax
  420801:	in     eax,0x3b
  420803:	out    0xd3,al
  420805:	in     eax,dx
  420806:	and    BYTE PTR [edx-0x7ca4c361],cl
  42080c:	mov    cl,0xb8
  42080e:	arpl   WORD PTR [esi],si
  420810:	sti    
  420811:	push   0x3bcec77d
  420816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420817:	and    bh,ah
  420819:	add    bh,BYTE PTR [ebx-0x3f]
  42081c:	push   ecx
  42081d:	es std 
  42081f:	fadd   QWORD PTR [edx+0x481fa71f]
  420825:	push   edi
  420826:	add    eax,0xe4626cd0
  42082b:	arpl   WORD PTR [eax+esi*4-0x106f4467],bx
  420832:	adc    bl,bl
  420834:	jns    0x420807
  420836:	pop    edx
  420837:	jg     0x4207e8
  420839:	mov    gs,esp
  42083b:	jnp    0x420894
  42083d:	cs sbb al,0x67
  420840:	xchg   esi,eax
  420841:	mov    al,0x43
  420843:	xor    DWORD PTR [esi-0x76],ebp
  420846:	aam    0xa2
  420848:	jge    0x420826
  42084a:	(bad)  
  42084b:	push   ss
  42084c:	loopne 0x420835
  42084e:	dec    eax
  42084f:	inc    edx
  420850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420851:	out    dx,al
  420852:	jne    0x4207e5
  420854:	lods   al,BYTE PTR ds:[esi]
  420855:	add    edx,DWORD PTR [edx+0x5]
  420858:	popa   
  420859:	ret    0x1ca4
  42085c:	xchg   esp,eax
  42085d:	mov    edi,0xcc1cd43f
  420862:	mov    bh,0x81
  420864:	mov    al,0x55
  420866:	mov    ch,0x5c
  420868:	cld    
  420869:	sbb    esp,DWORD PTR [edi+0x17]
  42086c:	pop    esp
  42086d:	scas   eax,DWORD PTR es:[edi]
  42086e:	call   0xc59e5c44
  420873:	mov    ecx,0xde5f75be
  420878:	mov    DWORD PTR [esi+0x62],ebx
  42087b:	lahf   
  42087c:	xor    DWORD PTR [eax-0x13],ebx
  42087f:	push   ebx
  420880:	pop    ebx
  420881:	icebp  
  420882:	sbb    ch,BYTE PTR [esi+eiz*2-0x52]
  420886:	pop    eax
  420887:	into   
  420888:	aas    
  420889:	xlat   BYTE PTR ds:[ebx]
  42088a:	bound  ecx,QWORD PTR [eax]
  42088c:	aad    0x4c
  42088e:	jnp    0x4208a9
  420890:	stos   DWORD PTR es:[edi],eax
  420891:	je     0x42083f
  420893:	mov    cl,0x26
  420895:	push   esi
  420896:	imul   ecx,ebp,0x3291747a
  42089c:	or     bh,BYTE PTR [eax+0x645fad18]
  4208a2:	pop    ebp
  4208a3:	push   0x1702c0fc
  4208a8:	or     BYTE PTR [ebp+ebx*1-0x34a15658],dh
  4208af:	inc    eax
  4208b0:	cmp    eax,0xded16232
  4208b5:	into   
  4208b6:	cli    
  4208b7:	or     al,0x91
  4208b9:	adc    eax,0xa7d534ff
  4208be:	jecxz  0x42093f
  4208c0:	push   ds
  4208c1:	lds    eax,FWORD PTR [edx-0x3bc11ac2]
  4208c7:	into   
  4208c8:	outs   dx,BYTE PTR ds:[esi]
  4208c9:	push   es
  4208ca:	sub    ecx,eax
  4208cc:	dec    BYTE PTR [edi]
  4208ce:	xchg   edi,eax
  4208cf:	cmp    al,0x23
  4208d1:	pop    es
  4208d2:	out    dx,eax
  4208d3:	pop    ebx
  4208d4:	das    
  4208d5:	aas    
  4208d6:	ds pextrw esp,(bad),0xc5
  4208d9:	mov    al,ds:0x2c0674e4
  4208de:	add    esi,ecx
  4208e0:	les    esi,FWORD PTR [ebp-0x34837ab0]
  4208e6:	adc    BYTE PTR [ecx-0x485b1df4],0x4f
  4208ed:	or     eax,0xc5472298
  4208f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208f3:	and    esi,DWORD PTR [esp+ebp*4]
  4208f6:	mov    WORD PTR [esi-0x7e],?
  4208f9:	xor    BYTE PTR [esi+0x1804fdc3],0xbc
  420900:	sbb    BYTE PTR [ebx+0x6dea3423],bh
  420906:	fwait
  420907:	lods   eax,DWORD PTR ds:[esi]
  420908:	shl    DWORD PTR [ebx+0x64],cl
  42090b:	les    esp,FWORD PTR [edi+0x69029d4]
  420911:	pop    esi
  420912:	xor    dl,dl
  420914:	adc    dh,BYTE PTR [ebx-0x4a9e5ab4]
  42091a:	(bad)  
  42091b:	cmc    
  42091c:	(bad)  
  42091d:	cs or  al,0xb4
  420920:	jbe    0x4208bb
  420922:	and    DWORD PTR [ebp+0xd],ebx
  420925:	rol    edx,cl
  420927:	retf   0xceaf
  42092a:	push   edx
  42092b:	pop    ecx
  42092c:	jno    0x420939
  42092e:	inc    ebx
  42092f:	pop    esi
  420930:	adc    DWORD PTR [edx-0xcfb1505],eax
  420936:	test   al,0xd0
  420938:	sub    edx,DWORD PTR [edi+0x0]
  42093b:	add    BYTE PTR [ecx],dl
  42093d:	push   cs
  42093e:	or     dl,ch
  420940:	pop    ds
  420941:	out    dx,al
  420942:	repz jmp FWORD PTR [edi-0x5630fbda]
  420949:	jle    0x420990
  42094b:	add    BYTE PTR [ebp+eax*4+0x1],cl
  42094f:	add    BYTE PTR [esi+0x1b000002],al
  420955:	mov    edi,DWORD PTR [ecx+0x2047e45c]
  42095b:	sub    DWORD PTR [ebp+0x73],eax
  42095e:	mov    cl,0x33
  420960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420961:	call   0x3a8098cf
  420966:	or     esp,0xffffffc8
  420969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42096a:	sbb    DWORD PTR [ecx+0x26],edi
  42096d:	push   edi
  42096e:	pop    ecx
  42096f:	rol    DWORD PTR [ecx+0x51116bfd],0x28
  420976:	adc    BYTE PTR [edx],ah
  420978:	div    BYTE PTR [ecx*1+0x55381]
  42097f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420980:	mov    DWORD PTR [eax-0x383ac294],esi
  420986:	pushf  
  420987:	mov    WORD PTR [ecx+ebx*4],es
  42098a:	cli    
  42098b:	add    DWORD PTR [esi],esi
  42098d:	cld    
  42098e:	jecxz  0x42098e
  420990:	aas    
  420991:	xor    BYTE PTR [ecx],bh
  420993:	imul   edi,DWORD PTR [eax],0x8686d1bb
  420999:	ins    DWORD PTR es:[edi],dx
  42099a:	jp     0x42099f
  42099c:	not    DWORD PTR [esi]
  42099e:	out    dx,al
  42099f:	push   ss
  4209a0:	pop    ds
  4209a1:	outs   dx,BYTE PTR ds:[esi]
  4209a2:	outs   dx,BYTE PTR ds:[esi]
  4209a3:	push   ebp
  4209a4:	adc    al,0x50
  4209a6:	adc    eax,0xee15b01d
  4209ab:	inc    eax
  4209ac:	mov    eax,0x95406f97
  4209b1:	(bad)  
  4209b2:	dec    esp
  4209b3:	test   DWORD PTR ds:0x2780ae70,0xba1a59ed
  4209bd:	and    DWORD PTR [ecx-0xf],0x861de77e
  4209c4:	int    0x2f
  4209c6:	inc    eax
  4209c7:	call   0xb5c5:0x8f350e5a
  4209ce:	outs   dx,BYTE PTR ds:[esi]
  4209cf:	je     0x4209f7
  4209d1:	jbe    0x420a2d
  4209d3:	push   0xec249660
  4209d8:	aaa    
  4209d9:	ret    0xa50c
  4209dc:	dec    esi
  4209dd:	push   edx
  4209de:	sbb    al,0x8
  4209e0:	pop    ds
  4209e1:	mov    esi,0x44418e35
  4209e6:	cld    
  4209e7:	adc    edi,esi
  4209e9:	fdivr  QWORD PTR [eax+eiz*1-0x55]
  4209ed:	cdq    
  4209ee:	push   es
  4209ef:	(bad)  
  4209f0:	je     0x420a26
  4209f2:	fsub   QWORD PTR [esi+0x2b]
  4209f5:	or     DWORD PTR [ecx-0x5372684e],ebp
  4209fb:	test   eax,edi
  4209fd:	jl     0x420991
  4209ff:	mov    es,WORD PTR [ebx+0x47]
  420a02:	mov    ch,0x76
  420a04:	sbb    ebp,esp
  420a06:	push   edx
  420a07:	jg     0x4209a4
  420a09:	test   eax,0x7869d976
  420a0e:	push   ebp
  420a0f:	xor    DWORD PTR [ecx+ebp*2+0x6fe46a08],0xc25e3635
  420a1a:	adc    eax,0x69fae69d
  420a1f:	cli    
  420a20:	jbe    0x4209c1
  420a22:	nop
  420a23:	cmp    DWORD PTR [eax-0x61f63601],esp
  420a29:	iret   
  420a2a:	mov    ds:0xfd987db,al
  420a2f:	sbb    BYTE PTR [esi],ch
  420a31:	and    ebx,DWORD PTR [ecx]
  420a33:	cmp    DWORD PTR [ebx-0x4494112d],edx
  420a39:	sub    ch,0x9a
  420a3c:	adc    ch,ah
  420a3e:	push   edx
  420a3f:	jno    0x420a9f
  420a41:	dec    esi
  420a42:	add    ebp,eax
  420a44:	rcl    BYTE PTR [eax+0x6e],0x1e
  420a48:	pop    eax
  420a49:	jo     0x4209cf
  420a4b:	leave  
  420a4c:	cmp    dh,dl
  420a4e:	xor    al,0x2a
  420a50:	cmp    ah,0x27
  420a53:	lods   eax,DWORD PTR ds:[esi]
  420a54:	rol    DWORD PTR [edi-0x3a31dc4a],cl
  420a5a:	push   ecx
  420a5b:	dec    ecx
  420a5c:	fwait
  420a5d:	inc    edx
  420a5e:	fwait
  420a5f:	adc    eax,DWORD PTR [ebx+0x6a]
  420a62:	add    eax,0x9f3f5448
  420a67:	or     ebp,DWORD PTR [ebx-0x9a0dd68]
  420a6d:	adc    DWORD PTR [ebp+0x16],ebx
  420a70:	adc    eax,0x1bdbf1e0
  420a75:	xor    BYTE PTR fs:[ebx],al
  420a78:	jge    0x420ac0
  420a7a:	bound  esi,QWORD PTR [ebp-0x640c498e]
  420a80:	int3   
  420a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a82:	push   0xffffff9b
  420a84:	xchg   DWORD PTR [ecx],esi
  420a86:	inc    edi
  420a87:	cdq    
  420a88:	les    eax,FWORD PTR ds:0x8dcb685d
  420a8e:	cmp    ebp,edi
  420a90:	aam    0x54
  420a92:	or     eax,0x3a34bab7
  420a97:	leave  
  420a98:	or     al,0x23
  420a9a:	jns    0x420b1a
  420a9c:	xor    ax,0x8057
  420aa0:	shl    DWORD PTR [ecx],cl
  420aa2:	and    al,0x75
  420aa4:	push   ecx
  420aa5:	and    esi,DWORD PTR [edx+0x6d]
  420aa8:	push   eax
  420aa9:	scas   eax,DWORD PTR es:[edi]
  420aaa:	mov    ds,ebx
  420aac:	sub    eax,0xb7bf356b
  420ab2:	imul   eax,DWORD PTR [edi+0x1c],0xffffff83
  420ab6:	mov    DWORD PTR [eax-0x5a],ecx
  420ab9:	imul   edi,DWORD PTR [esi-0xe96fdaa],0x22b8dd9c
  420ac3:	div    edi
  420ac5:	push   ds
  420ac6:	mov    edx,0xc83d4650
  420acb:	jb     0x420a90
  420acd:	aaa    
  420ace:	in     eax,dx
  420acf:	lds    eax,FWORD PTR [ecx+0x5e]
  420ad2:	sti    
  420ad3:	cdq    
  420ad4:	xchg   ebp,esp
  420ad6:	sbb    al,0x45
  420ad8:	sub    DWORD PTR [esi-0xebc96b0],0x17
  420adf:	push   0xffffffec
  420ae1:	mov    ds:0x6e8173b1,al
  420ae6:	call   0x334d5a4c
  420aeb:	jmp    0x1ef9:0x3fdc7859
  420af2:	sbb    eax,0x7b06f28e
  420af7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420af8:	sahf   
  420af9:	stos   BYTE PTR es:[edi],al
  420afa:	popa   
  420afb:	jb     0x420ae6
  420afd:	jo     0x420b22
  420aff:	pop    ebp
  420b00:	push   edi
  420b01:	retf   0x1174
  420b04:	iret   
  420b05:	dec    esp
  420b06:	inc    ebp
  420b07:	sub    DWORD PTR [eax+0x6c8f044a],eax
  420b0d:	xchg   esp,eax
  420b0f:	sti    
  420b10:	clc    
  420b11:	rcl    DWORD PTR [edx*4+0x6405424d],cl
  420b18:	pusha  
  420b19:	cmp    BYTE PTR [edx-0x3ad37a93],bh
  420b1f:	xor    BYTE PTR [esi+0x6d],al
  420b22:	fstp   QWORD PTR [ecx-0x63]
  420b25:	int3   
  420b26:	and    al,0x8d
  420b28:	mov    esp,0xce5c04c1
  420b2d:	int3   
  420b2e:	jle    0x420b30
  420b30:	jbe    0x420b85
  420b32:	out    0xa2,eax
  420b34:	stc    
  420b35:	fisttp DWORD PTR [esi+0x5095ea8e]
  420b3b:	icebp  
  420b3c:	sbb    esp,DWORD PTR [eax-0x22]
  420b3f:	sbb    DWORD PTR [ebx+ecx*8+0xb],ebx
  420b43:	aas    
  420b44:	leave  
  420b45:	fistp  QWORD PTR [esi-0x26bb64c7]
  420b4b:	mov    fs,WORD PTR [esi]
  420b4d:	or     BYTE PTR [esi+0x78],0x1f
  420b51:	out    dx,eax
  420b52:	outs   dx,DWORD PTR cs:[esi]
  420b54:	dec    ecx
  420b55:	mov    al,ds:0xdc87039c
  420b5a:	ret    
  420b5b:	test   BYTE PTR gs:[ecx],dl
  420b5e:	mov    esi,0xd4560a71
  420b63:	mov    fs,WORD PTR [ecx]
  420b65:	pop    edx
  420b66:	or     bh,dh
  420b68:	adc    al,0xb1
  420b6a:	inc    eax
  420b6b:	mov    esp,0xcd2f8421
  420b70:	add    esi,DWORD PTR cs:[esi-0x2452a58]
  420b77:	add    dh,BYTE PTR [ebp+0x980811b]
  420b7d:	fcom   DWORD PTR [ebx+0x21]
  420b80:	dec    esi
  420b81:	pop    esp
  420b82:	dec    edx
  420b83:	sar    ah,1
  420b85:	xchg   edi,eax
  420b86:	sbb    bh,BYTE PTR [edx]
  420b88:	jbe    0x420bc3
  420b8a:	pop    ss
  420b8b:	xchg   ecx,eax
  420b8c:	into   
  420b8d:	sbb    BYTE PTR [edx+0xaaa1ca1],ch
  420b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b94:	arpl   WORD PTR [eax-0x30],dx
  420b97:	inc    edx
  420b98:	int    0x79
  420b9a:	inc    ebx
  420b9b:	stos   BYTE PTR es:[edi],al
  420b9c:	sbb    BYTE PTR [edi+0x1e],bl
  420b9f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  420ba1:	test   BYTE PTR [ebp+0x5],dl
  420ba4:	xor    DWORD PTR [ecx],eax
  420ba6:	xchg   ebx,eax
  420ba7:	mov    es,WORD PTR [edx+0x4a]
  420baa:	mov    bh,0x54
  420bac:	arpl   si,ax
  420bae:	pop    ebx
  420baf:	je     0x420c03
  420bb1:	int3   
  420bb2:	inc    ebx
  420bb3:	outs   dx,BYTE PTR ds:[esi]
  420bb4:	and    al,0xa9
  420bb6:	or     dh,bl
  420bb8:	or     DWORD PTR [esi+0x34],ebp
  420bbb:	cmp    cl,ah
  420bbd:	xchg   esi,eax
  420bbe:	test   ebp,esi
  420bc0:	push   esi
  420bc1:	dec    edi
  420bc2:	pop    ebx
  420bc3:	adc    dh,BYTE PTR [edx]
  420bc5:	fisttp DWORD PTR [ecx+0x737f1975]
  420bcb:	xchg   esp,eax
  420bcc:	jb     0x420ba3
  420bce:	jmp    0x8c6f:0x41cdf42a
  420bd5:	mov    dh,0x2
  420bd7:	inc    ecx
  420bd8:	je     0x420b5d
  420bda:	add    BYTE PTR [eax],al
  420bdc:	leave  
  420bdd:	xchg   esi,eax
  420bde:	ins    DWORD PTR es:[edi],dx
  420bdf:	mov    dh,0x7f
  420be1:	(bad)  
  420be2:	(bad)  
  420be4:	aam    0xd9
  420be6:	inc    ebx
  420be7:	fmul   DWORD PTR [ebp-0x57]
  420bea:	aaa    
  420beb:	sbb    edx,edx
  420bed:	xchg   DWORD PTR [ecx],eax
  420bef:	add    BYTE PTR [esi-0x13fffffe],al
  420bf5:	aas    
  420bf6:	call   0xa7012b60
  420bfb:	or     esi,esp
  420bfd:	dec    ecx
  420bfe:	xchg   ecx,eax
  420bff:	cli    
  420c00:	pop    es
  420c01:	sahf   
  420c02:	sti    
  420c03:	cdq    
  420c04:	dec    eax
  420c05:	xchg   esp,eax
  420c06:	mov    edx,0x86e356e3
  420c0b:	icebp  
  420c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c0d:	jle    0x420c4f
  420c0f:	cli    
  420c10:	repz not DWORD PTR [ecx]
  420c13:	xor    bh,0xce
  420c16:	loope  0x420c66
  420c18:	sub    BYTE PTR ds:0xbc60fdb6,bh
  420c1e:	sub    edi,edi
  420c20:	xlat   BYTE PTR ds:[ebx]
  420c21:	fmul   st(5),st
  420c23:	aam    0x4c
  420c25:	js     0x420bd0
  420c27:	mov    ah,0x6c
  420c29:	addr16 jge 0x420be2
  420c2c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420c2e:	push   edx
  420c2f:	ds mov esi,0xbe1ac0c0
  420c35:	mov    al,ds:0x71fdc6c7
  420c3a:	sbb    DWORD PTR [esi+0x1b],ecx
  420c3d:	mov    dl,0xcd
  420c3f:	out    0xc9,al
  420c41:	call   0xdfaa:0x17a386a9
  420c48:	sahf   
  420c49:	mov    ds:0xd175d150,al
  420c4e:	mov    ebp,0x2d2c5787
  420c53:	into   
  420c54:	mov    edi,0x52c6f760
  420c59:	repnz mov edx,0xa1de6b16
  420c5f:	cli    
  420c60:	arpl   WORD PTR [edi],cx
  420c62:	call   0x37e6:0x60bca558
  420c69:	add    esp,DWORD PTR [edx+0x5b]
  420c6c:	test   eax,0x520ecaf0
  420c71:	mov    DWORD PTR [edx-0x5d],esi
  420c74:	sbb    eax,0xeadf48d1
  420c79:	sysret 
  420c7b:	stc    
  420c7c:	out    dx,eax
  420c7d:	pusha  
  420c7e:	push   ds
  420c7f:	lock or ah,BYTE PTR [edi-0x1e091e8a]
  420c86:	jns    0x420c0b
  420c88:	jle    0x420cfa
  420c8a:	mov    BYTE PTR [eax+0x62],dl
  420c8d:	add    DWORD PTR ds:0xfea4585f,ecx
  420c93:	and    cl,BYTE PTR [eax-0x308b7fc4]
  420c99:	lahf   
  420c9a:	stos   DWORD PTR es:[edi],eax
  420c9b:	gs jbe 0x420ca2
  420c9e:	sub    bl,dl
  420ca0:	mov    eax,ds:0x1e6b5a6d
  420ca5:	mov    ebx,0x8b198989
  420caa:	stos   BYTE PTR es:[edi],al
  420cab:	rol    BYTE PTR [esi+0x78],cl
  420cae:	dec    esp
  420caf:	es call 0x3e76:0x9b4db0ef
  420cb7:	(bad)
  420cba:	or     al,0x68
  420cbc:	clc    
  420cbd:	or     DWORD PTR [esi],edx
  420cbf:	push   es
  420cc0:	and    BYTE PTR [eax-0x20],dh
  420cc3:	pop    edx
  420cc4:	in     al,dx
  420cc5:	fs push 0xa0c33a91
  420ccb:	mov    ecx,0x133b9a2f
  420cd0:	xchg   edx,eax
  420cd1:	jns    0x420c56
  420cd3:	adc    eax,0xa4503e24
  420cd8:	lods   eax,DWORD PTR ds:[esi]
  420cd9:	enter  0x11d,0x96
  420cdd:	jge    0x420d55
  420cdf:	sub    edx,ebp
  420ce1:	sub    DWORD PTR [esi+0x1e4d4a97],ebx
  420ce7:	fcomp  st(4)
  420ce9:	sub    bh,al
  420ceb:	sub    ebp,DWORD PTR [ebp+edx*8+0x75]
  420cef:	ret    
  420cf0:	ins    DWORD PTR es:[edi],dx
  420cf1:	xor    al,0x47
  420cf3:	cmp    al,0x84
  420cf5:	rol    BYTE PTR [eax+edi*1-0x10],1
  420cf9:	xchg   ebp,eax
  420cfa:	mov    ds:0xa42518fe,eax
  420cff:	loopne 0x420d2e
  420d01:	fwait
  420d02:	add    ecx,DWORD PTR [edx]
  420d04:	nop
  420d05:	or     eax,0x86428533
  420d0a:	scas   eax,DWORD PTR es:[edi]
  420d0b:	cdq    
  420d0c:	outs   dx,BYTE PTR ds:[esi]
  420d0d:	mov    edi,0xa9d00df0
  420d12:	or     BYTE PTR [esi],ah
  420d14:	ret    
  420d15:	cmp    BYTE PTR [eax+ecx*4],bh
  420d18:	push   edi
  420d19:	cld    
  420d1a:	xchg   BYTE PTR [edx+0x2423db1a],ch
  420d20:	sub    BYTE PTR [ebp-0x1f],0xd5
  420d24:	or     al,0xa3
  420d26:	jge    0x420cf9
  420d28:	sti    
  420d29:	popa   
  420d2a:	push   edx
  420d2b:	lahf   
  420d2c:	es dec esi
  420d2e:	lods   al,BYTE PTR ds:[esi]
  420d2f:	mov    al,ds:0xb31ba1a4
  420d34:	pop    esp
  420d35:	cs sub al,0x42
  420d38:	inc    esi
  420d39:	or     BYTE PTR [edi-0x7d97ad32],dl
  420d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d40:	into   
  420d41:	mov    dl,0x29
  420d43:	adc    dh,BYTE PTR [ebx+0x320122f3]
  420d49:	cwde   
  420d4a:	xchg   edi,eax
  420d4b:	pop    es
  420d4c:	mov    al,cl
  420d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d4f:	jmp    0x6c62da73
  420d54:	iret   
  420d55:	jns    0x420cd8
  420d57:	stos   DWORD PTR es:[edi],eax
  420d58:	or     bl,al
  420d5a:	call   0x141245aa
  420d5f:	dec    ebp
  420d60:	and    dl,dh
  420d62:	cli    
  420d63:	jns    0x420d62
  420d65:	(bad)  
  420d67:	not    DWORD PTR [ebp+eax*8-0x30]
  420d6b:	xchg   DWORD PTR [ecx-0x11c5586],ebx
  420d71:	mov    esp,0xb7d592c9
  420d76:	mov    ah,0x44
  420d78:	mov    BYTE PTR [esi-0x35],ch
  420d7b:	xchg   esp,eax
  420d7c:	or     al,0x60
  420d7e:	repz add BYTE PTR [esi],cl
  420d81:	mov    cl,0x5b
  420d83:	test   BYTE PTR [ecx],ah
  420d85:	es jl  0x420d13
  420d88:	lods   eax,DWORD PTR ds:[esi]
  420d89:	cld    
  420d8a:	ror    ah,0x8d
  420d8d:	out    0x14,al
  420d8f:	mov    esi,0x8c415562
  420d94:	push   0x2
  420d96:	push   cs
  420d97:	cld    
  420d98:	sahf   
  420d99:	adc    ah,ch
  420d9b:	mov    esp,0xcf4f1b61
  420da0:	loopne 0x420df4
  420da2:	rcr    BYTE PTR [ecx],1
  420da4:	mov    bl,0x5d
  420da6:	jp     0x420d4a
  420da8:	pushf  
  420da9:	fwait
  420daa:	shl    BYTE PTR [ebx+0x4],0x3b
  420dae:	and    edx,DWORD PTR [edx+0x4329b8bc]
  420db4:	or     bh,BYTE PTR [eax+0x5ba3f8e]
  420dba:	inc    eax
  420dbb:	int3   
  420dbc:	int3   
  420dbd:	es xor al,0x2e
  420dc0:	fwait
  420dc1:	(bad)  
  420dc2:	arpl   WORD PTR [ebp*2+0x6f95b1e6],bx
  420dc9:	lahf   
  420dca:	js     0x420d86
  420dcc:	cli    
  420dcd:	mov    dh,0x54
  420dcf:	loope  0x420dee
  420dd1:	xlat   BYTE PTR ds:[ebx]
  420dd2:	add    eax,0xfb1f807c
  420dd7:	stos   DWORD PTR es:[edi],eax
  420dd8:	ins    BYTE PTR es:[edi],dx
  420dd9:	pop    es
  420dda:	fist   WORD PTR [eax+0x53]
  420ddd:	jae    0x420e22
  420ddf:	and    eax,0x24c13f0
  420de4:	mov    edx,0x933b1577
  420de9:	aad    0x10
  420deb:	repz dec eax
  420ded:	call   0x9fa8:0xeff264cd
  420df4:	(bad)  [edx+0x63]
  420df7:	pusha  
  420df8:	mov    WORD PTR [ecx+eax*1],?
  420dfb:	retf   0x1293
  420dfe:	dec    ebx
  420dff:	shl    BYTE PTR ds:0xab1adb8d,1
  420e05:	pop    edi
  420e06:	lods   al,BYTE PTR ds:[esi]
  420e07:	pop    edx
  420e08:	jae    0x420de8
  420e0a:	push   es
  420e0b:	stos   DWORD PTR es:[edi],eax
  420e0c:	cmp    BYTE PTR [ebp-0x2b],cl
  420e0f:	xchg   ebx,eax
  420e10:	icebp  
  420e11:	cdq    
  420e12:	mov    cl,0x91
  420e14:	or     BYTE PTR [edi],0x37
  420e17:	popa   
  420e18:	sbb    eax,0x139c96e3
  420e1d:	jae    0x420da3
  420e1f:	cmp    ebx,ebp
  420e21:	xlat   BYTE PTR ds:[ebx]
  420e22:	in     al,0x2
  420e24:	in     al,0x48
  420e26:	xlat   BYTE PTR ds:[ebx]
  420e27:	ds jne 0x420dba
  420e2a:	std    
  420e2b:	retf   
  420e2c:	dec    edx
  420e2d:	mov    WORD PTR [edi-0x56],es
  420e30:	or     eax,0xce2ab00e
  420e35:	cwde   
  420e36:	bnd jne 0x420e3d
  420e39:	jae    0x420e25
  420e3b:	fist   DWORD PTR [ecx-0x27]
  420e3e:	test   BYTE PTR [ebp+0x5ef1008d],cl
  420e44:	js     0x420dcd
  420e46:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e48:	xchg   BYTE PTR [edx],al
  420e4a:	xor    DWORD PTR ds:0x678219c6,eax
  420e50:	pop    ss
  420e51:	cmp    eax,0x1cf47997
  420e56:	mov    al,dl
  420e58:	test   eax,0xdf5b43e9
  420e5d:	(bad)  
  420e5e:	mov    eax,0x4ac025fa
  420e63:	pop    ds
  420e64:	mov    eax,0x4cdb0095
  420e69:	sub    ebp,edx
  420e6b:	push   0x9ca43819
  420e70:	mov    al,fs:0x88f0fbe3
  420e76:	or     BYTE PTR [edi+0x1207],dh
  420e7c:	dec    eax
  420e7d:	out    dx,eax
  420e7e:	ja     0x420eeb
  420e80:	idiv   ebx
  420e82:	pop    esp
  420e83:	out    dx,eax
  420e84:	dec    esp
  420e85:	mul    BYTE PTR [esi-0x7d]
  420e88:	cs jns 0x420e73
  420e8b:	push   edx
  420e8c:	pop    eax
  420e8d:	mov    al,BYTE PTR [ecx]
  420e8f:	add    BYTE PTR [esi+0x71000002],al
  420e95:	jmp    0xeb8bb3cd
  420e9a:	cmovno edx,DWORD PTR ds:0x6772db58
  420ea1:	jmp    0xbd29b4da
  420ea6:	push   ss
  420ea7:	mov    bl,BYTE PTR [eax-0x334aef44]
  420ead:	in     eax,dx
  420eae:	std    
  420eaf:	xchg   esp,eax
  420eb0:	js     0x420e38
  420eb2:	les    ebx,FWORD PTR [edi]
  420eb4:	and    BYTE PTR [ecx],ah
  420eb6:	lahf   
  420eb7:	cmp    DWORD PTR [esi*4-0x39ed82aa],edx
  420ebe:	cmp    eax,0x1f16b590
  420ec3:	sub    eax,0x193f151d
  420ec8:	repnz pushf 
  420eca:	cmc    
  420ecb:	fwait
  420ecc:	ins    BYTE PTR es:[edi],dx
  420ecd:	dec    ecx
  420ece:	pop    ss
  420ecf:	popf   
  420ed0:	dec    esp
  420ed1:	pop    edi
  420ed2:	xor    esi,DWORD PTR [ecx-0x772f713]
  420ed8:	push   eax
  420ed9:	mov    esp,0xc6c2ee22
  420ede:	fisttp DWORD PTR [ecx+0x33]
  420ee1:	push   ds
  420ee2:	(bad)  
  420ee3:	call   0xba86411e
  420ee8:	add    BYTE PTR [esi+ebp*2],ch
  420eeb:	push   DWORD PTR [eax-0x6f]
  420eee:	add    ah,al
  420ef0:	inc    ebp
  420ef1:	add    DWORD PTR [edx-0x7d0a88ca],eax
  420ef7:	out    0xf9,al
  420ef9:	stos   BYTE PTR es:[edi],al
  420efa:	push   ebp
  420efb:	inc    eax
  420efc:	fcomp  QWORD PTR [edi]
  420efe:	lock pop ds
  420f00:	ins    DWORD PTR es:[edi],dx
  420f01:	add    eax,0xae498133
  420f06:	jmp    0x420f4a
  420f08:	pop    ecx
  420f09:	fdiv   DWORD PTR [eax+ebp*4-0x2d]
  420f0d:	ret    
  420f0e:	frstor [edx]
  420f10:	fidivr DWORD PTR [ecx]
  420f12:	mov    bl,0x31
  420f14:	xor    eax,0xdacb5857
  420f19:	les    ebx,FWORD PTR [ecx]
  420f1b:	dec    edx
  420f1c:	mov    ecx,fs
  420f1e:	(bad)  
  420f1f:	stos   DWORD PTR es:[edi],eax
  420f20:	in     eax,dx
  420f21:	or     al,0x84
  420f23:	mov    al,ds:0x7aa869a
  420f28:	out    0x2f,al
  420f2a:	ds popa 
  420f2c:	mov    ds:0xa177d30e,al
  420f31:	arpl   WORD PTR [ebx+0x5306fa04],dx
  420f37:	sub    al,0x97
  420f39:	mov    dl,0xac
  420f3b:	stc    
  420f3c:	inc    esi
  420f3d:	jmp    0x20d5ae39
  420f42:	cdq    
  420f43:	das    
  420f44:	xchg   edx,eax
  420f45:	mov    al,0x5b
  420f47:	rol    al,1
  420f49:	xchg   ebx,eax
  420f4a:	push   ebx
  420f4b:	test   BYTE PTR [edx],bh
  420f4d:	mov    edx,0x20d674b
  420f52:	push   esi
  420f53:	push   ebp
  420f54:	loopne 0x420f9e
  420f56:	xchg   edi,eax
  420f57:	jae    0x420f80
  420f59:	push   edi
  420f5a:	into   
  420f5b:	mov    eax,0x406ad08
  420f60:	out    dx,eax
  420f61:	nop
  420f62:	inc    ecx
  420f63:	sub    ecx,DWORD PTR [ebp+0x54]
  420f66:	xchg   esp,eax
  420f67:	mov    ah,0x66
  420f69:	into   
  420f6a:	mov    dh,BYTE PTR gs:[edx]
  420f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f6e:	ret    0x5d53
  420f71:	inc    esp
  420f72:	adc    eax,DWORD PTR [esp+ebx*2-0x1a4dfeb4]
  420f79:	adc    edx,esp
  420f7b:	inc    ebx
  420f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f7d:	in     eax,dx
  420f7e:	fisttp WORD PTR [edx+0x104a4c4e]
  420f84:	xchg   ecx,eax
  420f85:	cld    
  420f86:	cli    
  420f87:	std    
  420f88:	cli    
  420f89:	push   DWORD PTR [ebp+0x49b83421]
  420f8f:	pop    edi
  420f90:	push   esp
  420f91:	add    ecx,DWORD PTR [edx-0x76]
  420f94:	mov    cl,0xc8
  420f96:	jl     0x420f24
  420f98:	or     ch,BYTE PTR [ebx+ebp*2-0x5a]
  420f9c:	ins    DWORD PTR es:[edi],dx
  420f9d:	es mov edi,0xb849ee0a
  420fa3:	out    0x4f,al
  420fa5:	dec    edi
  420fa6:	retf   
  420fa7:	out    0xf0,al
  420fa9:	push   0x48
  420fab:	lock nop
  420fad:	adc    ecx,edi
  420faf:	out    0x0,eax
  420fb1:	cmp    eax,0x5f7a5f0f
  420fb6:	mov    cl,0x20
  420fb8:	or     ah,BYTE PTR [edi+eiz*2]
  420fbb:	hlt    
  420fbc:	pop    ebp
  420fbd:	adc    eax,0x3379fbb2
  420fc2:	fcom   QWORD PTR [ecx+ebp*8]
  420fc5:	dec    esi
  420fc6:	xchg   esi,eax
  420fc7:	sub    BYTE PTR [esp+ebp*8],0x52
  420fcb:	push   es
  420fcc:	imul   ecx,ebx,0xddbfb1bd
  420fd2:	sbb    DWORD PTR [ebx-0x52],ecx
  420fd5:	ins    BYTE PTR es:[edi],dx
  420fd6:	jp     0x42100a
  420fd8:	shr    DWORD PTR [eax],0x85
  420fdb:	clc    
  420fdc:	jns    0x421009
  420fde:	(bad)  [esi]
  420fe0:	iret   
  420fe1:	mov    DWORD PTR [ebp-0x576614e1],ecx
  420fe7:	or     ch,BYTE PTR [ebp+0xaa163cb]
  420fed:	mov    esp,0x8f551c40
  420ff2:	mov    bl,0x1c
  420ff4:	pop    ebx
  420ff5:	adc    BYTE PTR [ecx+0x4b],dh
  420ff8:	fcomp  QWORD PTR [ebp+0x5]
  420ffb:	test   eax,0xb11ce02a
  421000:	bound  ecx,QWORD PTR [esp+edx*2]
  421003:	mov    ecx,0xef49aa05
  421008:	out    dx,eax
  421009:	dec    edx
  42100a:	sub    bl,BYTE PTR [edx+0x1a8416bf]
  421010:	and    eax,0x95e8aac4
  421015:	in     eax,0xe6
  421017:	ins    DWORD PTR es:[edi],dx
  421018:	call   0xda555d32
  42101d:	fadd   DWORD PTR [ecx]
  42101f:	mov    cl,0x3
  421021:	ss xchg edx,eax
  421023:	imul   ecx,DWORD PTR [esi+0xe11286b],0xecb302a9
  42102d:	and    BYTE PTR [edx+0x20051c8a],ch
  421033:	xor    DWORD PTR [edi+0x72],0xffffffad
  421037:	bound  eax,QWORD PTR [ecx-0x4a2a4dc6]
  42103d:	sub    edx,DWORD PTR [ecx+0x60]
  421040:	push   edx
  421041:	mov    dh,0xbb
  421043:	jmp    0x7cb695e4
  421048:	(bad)  
  42104a:	mov    es,ebx
  42104c:	dec    esp
  42104d:	xor    BYTE PTR [ebx],dl
  42104f:	cld    
  421050:	jns    0x421040
  421052:	inc    ebx
  421053:	fadd   st(0),st
  421055:	jno    0x421030
  421057:	shl    BYTE PTR [ecx],cl
  421059:	fidivr DWORD PTR [edi]
  42105b:	scas   eax,DWORD PTR es:[edi]
  42105c:	addr16 pop ebp
  42105e:	fxtract 
  421060:	sahf   
  421061:	xor    edx,DWORD PTR [ebp+eiz*1+0x55]
  421065:	loopne 0x42106f
  421067:	mov    esp,0xd672336e
  42106c:	and    bh,BYTE PTR [ebx-0x67]
  42106f:	xor    eax,0xc61d0605
  421074:	sti    
  421075:	mov    dl,0xbe
  421077:	aaa    
  421078:	std    
  421079:	ret    
  42107a:	and    eax,0x2ed28472
  42107f:	das    
  421080:	cmp    eax,0x45285057
  421085:	push   edx
  421086:	and    DWORD PTR [ecx+0x3c97cdef],ebp
  42108c:	(bad)  [eax-0xb8c8c41]
  421092:	inc    esp
  421093:	or     DWORD PTR [esi],0xf90711f8
  421099:	mov    DWORD PTR [edi],ebx
  42109b:	mov    ds:0x430e1dc0,al
  4210a0:	sahf   
  4210a1:	loope  0x421096
  4210a3:	icebp  
  4210a4:	mov    dh,bl
  4210a6:	pusha  
  4210a7:	cli    
  4210a8:	cld    
  4210a9:	mov    bl,0x49
  4210ab:	fcmovb st,st(7)
  4210ad:	push   0x2e5c5db0
  4210b2:	daa    
  4210b3:	(bad)  
  4210b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210b5:	mov    edi,0x7d5a0535
  4210ba:	push   0xa6109e6a
  4210bf:	lods   al,BYTE PTR ds:[esi]
  4210c0:	sbb    al,0x5c
  4210c2:	adc    DWORD PTR [edi+edi*2-0x7f6af413],edx
  4210c9:	(bad)  
  4210ca:	jne    0x4210ff
  4210cc:	pop    edi
  4210cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ce:	in     eax,0x24
  4210d0:	sbb    ecx,eax
  4210d2:	jb     0x421132
  4210d4:	mov    ds:0x13f81947,eax
  4210d9:	lock add DWORD PTR fs:[eax],esp
  4210dd:	push   esi
  4210de:	iret   
  4210df:	add    al,0xb7
  4210e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210e2:	dec    esp
  4210e3:	xlat   BYTE PTR ds:[ebx]
  4210e4:	pop    ecx
  4210e5:	mov    edx,cs
  4210e7:	jl     0x4210ba
  4210e9:	sbb    al,0xbd
  4210eb:	aaa    
  4210ec:	cmp    BYTE PTR [edi],cl
  4210ee:	cdq    
  4210ef:	mov    esi,0xaad11465
  4210f4:	int    0xb5
  4210f6:	xor    al,0x14
  4210f8:	mov    esp,DWORD PTR [ebp+0x10573bd1]
  4210fe:	jecxz  0x421137
  421100:	xor    dh,BYTE PTR [ecx+ebp*8+0x459884a1]
  421107:	push   eax
  421108:	mov    bh,0x90
  42110a:	ja     0x421115
  42110c:	aad    0x4b
  42110e:	fild   WORD PTR [ebp-0x6b02d14c]
  421114:	cmp    ch,cl
  421116:	cmp    BYTE PTR [ebp-0x32],ah
  421119:	imul   eax,DWORD PTR [eax],0x0
  42111c:	mov    al,0xe3
  42111e:	pop    edx
  42111f:	jecxz  0x42117c
  421121:	sti    
  421122:	mov    ecx,0x72415ff3
  421127:	test   DWORD PTR [edi],edi
  421129:	es xor eax,0x18cde79
  42112f:	add    BYTE PTR [esi+0x3b000002],al
  421135:	sbb    edx,DWORD PTR [ebp+0x1e]
  421138:	fld    DWORD PTR [eax+ecx*2+0x3ef18262]
  42113f:	rcl    edx,0xc8
  421142:	into   
  421143:	std    
  421144:	mov    esi,0x5a2044aa
  421149:	dec    edx
  42114a:	shl    DWORD PTR [ebp+0x31],cl
  42114d:	test   DWORD PTR [edi-0x33],edi
  421150:	push   edx
  421151:	xor    bh,BYTE PTR [ebx]
  421153:	scas   al,BYTE PTR es:[edi]
  421154:	and    eax,edx
  421156:	fwait
  421157:	out    dx,eax
  421158:	pop    esp
  421159:	and    bh,bh
  42115b:	mov    ebp,0x13b453ce
  421160:	dec    ebp
  421161:	or     edi,DWORD PTR [ebp+0x42c0732d]
  421167:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  421169:	xchg   ebp,eax
  42116a:	jmp    0xbbd3f5ee
  42116f:	lea    eax,[esi]
  421171:	adc    DWORD PTR [edx+0x61],esp
  421174:	jo     0x42118c
  421176:	neg    DWORD PTR [esi]
  421178:	pop    eax
  421179:	mov    ch,0x28
  42117b:	pop    ecx
  42117c:	fisub  DWORD PTR [ebp+ebx*2+0x48]
  421180:	mov    ah,0xe2
  421182:	jle    0x421175
  421184:	daa    
  421185:	imul   esi,DWORD PTR [ebx-0x49d1245b],0x79deb707
  42118f:	fiadd  WORD PTR [eax-0x6644d69c]
  421195:	jp     0x4211e8
  421197:	sub    dh,dl
  421199:	mov    bl,0x2
  42119b:	dec    ecx
  42119c:	mov    dh,0x4
  42119e:	(bad)  
  42119f:	stos   DWORD PTR es:[edi],eax
  4211a0:	loopne 0x4211e6
  4211a2:	dec    ebp
  4211a3:	stos   BYTE PTR es:[edi],al
  4211a4:	push   0x69
  4211a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a7:	xor    esp,DWORD PTR [edx]
  4211a9:	int3   
  4211aa:	xchg   bh,ch
  4211ac:	cmp    eax,0x21094993
  4211b1:	ror    dl,0xbb
  4211b4:	ss out 0xdc,eax
  4211b7:	sub    BYTE PTR [ebx+ebx*8],ch
  4211ba:	mov    al,ds:0xc113df08
  4211bf:	ficomp WORD PTR [edx-0x1fd876d4]
  4211c5:	jle    0x421208
  4211c7:	dec    eax
  4211c8:	sub    DWORD PTR [esi+0x6d],ebx
  4211cb:	mov    dl,BYTE PTR [ebx]
  4211cd:	int3   
  4211ce:	pop    esi
  4211cf:	rcpps  xmm0,XMMWORD PTR [esi+0x15]
  4211d3:	cmp    ebp,ebx
  4211d5:	xor    al,0x89
  4211d7:	aaa    
  4211d8:	aam    0x3d
  4211da:	and    BYTE PTR [ebx],cl
  4211dc:	out    dx,eax
  4211dd:	lock inc edi
  4211df:	mov    DWORD PTR ds:0x68c76041,ecx
  4211e5:	mov    dh,0xa4
  4211e7:	dec    edi
  4211e8:	repz (bad) 
  4211ea:	nop
  4211eb:	sbb    bl,0x27
  4211ee:	xchg   ebp,eax
  4211ef:	jp     0x4211ad
  4211f1:	in     al,0xdc
  4211f3:	jle    0x421263
  4211f5:	loopne 0x4211a2
  4211f7:	cli    
  4211f8:	pop    eax
  4211f9:	sbb    ecx,DWORD PTR [ebp+0x3c]
  4211fc:	mov    bl,0x31
  4211fe:	push   esi
  4211ff:	cmp    al,0xb6
  421201:	or     DWORD PTR [ebx],esi
  421203:	int    0xfe
  421205:	mov    bh,0xbe
  421207:	xchg   ecx,eax
  421208:	ja     0x421206
  42120a:	ja     0x421209
  42120c:	js     0x4211ce
  42120e:	push   ebp
  42120f:	mul    bl
  421211:	enter  0x6658,0xe0
  421215:	int    0x15
  421217:	jge    0x421217
  421219:	lea    ecx,[ecx]
  42121b:	pop    ebx
  42121c:	dec    ebx
  42121d:	inc    esi
  42121e:	pusha  
  42121f:	ins    BYTE PTR es:[edi],dx
  421220:	data16 cli 
  421222:	aam    0xa7
  421224:	pop    ebx
  421225:	mov    esi,0x7dd837a2
  42122a:	arpl   di,bx
  42122c:	push   eax
  42122d:	or     eax,0x964c14a7
  421232:	jmp    0xe243e21d
  421237:	sbb    eax,0xf370e8ef
  42123c:	jns    0x421258
  42123e:	int    0x8
  421240:	sti    
  421241:	push   cs
  421242:	outs   dx,BYTE PTR ds:[esi]
  421243:	sbb    BYTE PTR [edx+esi*4],ch
  421246:	lods   eax,DWORD PTR ds:[esi]
  421247:	dec    edx
  421248:	mov    ds:0x97f94c3a,al
  42124d:	jnp    0x42125a
  42124f:	jl     0x421226
  421251:	out    0xd1,al
  421253:	xchg   esi,eax
  421254:	call   0x49e76cc3
  421259:	cs (bad) 
  42125b:	dec    eax
  42125c:	dec    edi
  42125d:	mov    ebp,0xf3cfb156
  421262:	push   ebp
  421263:	stos   BYTE PTR es:[edi],al
  421264:	neg    BYTE PTR [edx+0x2cd81953]
  42126a:	frstor ss:[ebx]
  42126d:	inc    edx
  42126e:	fs shl ch,0x77
  421272:	xchg   BYTE PTR [ebp-0x6fb76b72],ah
  421278:	sbb    DWORD PTR [edi-0xaebe852],ebp
  42127e:	aad    0x18
  421280:	retf   
  421281:	ins    DWORD PTR es:[edi],dx
  421282:	dec    esi
  421283:	hlt    
  421284:	test   DWORD PTR [edx-0x4798d70f],esi
  42128a:	cmp    ch,BYTE PTR [esi+0x75]
  42128d:	hlt    
  42128e:	cli    
  42128f:	cmp    al,0x0
  421291:	fldenv [ebx]
  421293:	dec    eax
  421294:	adc    eax,DWORD PTR [esi+eax*2]
  421297:	je     0x4212d3
  421299:	push   esp
  42129a:	fidiv  WORD PTR [ebp-0x9]
  42129d:	mov    ?,WORD PTR [eax-0xb6aab35]
  4212a3:	dec    ebp
  4212a4:	sub    bh,BYTE PTR [eax-0x4b38e963]
  4212aa:	and    dh,BYTE PTR [esp+ebp*8]
  4212ad:	mul    BYTE PTR ds:0x7acca844
  4212b3:	fdivr  QWORD PTR [eax+edi*4+0x73d1c50d]
  4212ba:	and    al,0x5
  4212bc:	lods   eax,DWORD PTR ds:[esi]
  4212bd:	add    DWORD PTR [ebx],ecx
  4212bf:	pop    esi
  4212c0:	loop   0x4212bd
  4212c2:	imul   esi,DWORD PTR [ebp+ebp*8-0x6],0x63
  4212c7:	jge    0x42125a
  4212c9:	aam    0x82
  4212cb:	mov    dh,0x3
  4212cd:	dec    ecx
  4212ce:	sbb    edx,DWORD PTR [ebp+edx*8-0x3a]
  4212d2:	mov    edx,0x731bbf6f
  4212d7:	arpl   sp,dx
  4212d9:	mov    bh,0x92
  4212db:	jae    0x4212ee
  4212dd:	cmp    al,cl
  4212df:	scas   al,BYTE PTR es:[edi]
  4212e0:	or     eax,0x79b69f29
  4212e5:	cwde   
  4212e6:	and    eax,0xf9e52324
  4212eb:	mov    esi,0x26e8d9b4
  4212f0:	outs   dx,DWORD PTR ds:[esi]
  4212f1:	xchg   DWORD PTR [ebx-0x5a],edi
  4212f4:	cmp    al,0x38
  4212f6:	iret   
  4212f7:	stos   DWORD PTR es:[di],eax
  4212f9:	jecxz  0x421324
  4212fb:	xor    cl,BYTE PTR [ecx+0x13]
  4212fe:	pop    ecx
  4212ff:	mov    BYTE PTR [edi-0x58],0x56
  421303:	dec    esi
  421304:	iret   
  421305:	sbb    DWORD PTR [ebp-0x57],ecx
  421308:	(bad)  
  421309:	in     eax,0x92
  42130b:	jle    0x421307
  42130d:	inc    edx
  42130e:	bnd jae 0x421377
  421311:	and    al,0x3b
  421313:	gs jbe 0x4212a8
  421316:	xor    eax,eax
  421318:	jne    0x4212d2
  42131a:	imul   esp,DWORD PTR [ecx],0xffffffe7
  42131d:	mov    BYTE PTR [ebp+0x50f39bff],cl
  421323:	outs   dx,BYTE PTR ds:[esi]
  421324:	jmp    0x42135a
  421326:	cmp    DWORD PTR [esi-0x316dd3fc],eax
  42132c:	test   al,0xac
  42132e:	outs   dx,DWORD PTR ds:[esi]
  42132f:	xor    al,0x26
  421331:	retf   0xd504
  421334:	and    bl,BYTE PTR [esi+0x69]
  421337:	ret    0x68f4
  42133a:	outs   dx,DWORD PTR ds:[esi]
  42133b:	add    ebp,DWORD PTR gs:[ebx+eax*1+0x76]
  421340:	adc    BYTE PTR [esi+0x51878fe5],ah
  421346:	lea    ebp,ds:0x3ec01ae
  42134c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42134d:	jmp    0x8d3e:0x3ddf1ee8
  421354:	jne    0x421341
  421356:	outs   dx,BYTE PTR ds:[esi]
  421357:	dec    ebx
  421358:	push   edi
  421359:	cdq    
  42135a:	rcl    DWORD PTR [ebp-0xe],0x52
  42135e:	add    bh,BYTE PTR [esi+0x79722266]
  421364:	jno    0x421344
  421366:	gs fs push ds
  421369:	dec    esi
  42136a:	xchg   edi,eax
  42136b:	sbb    BYTE PTR [edi+0x32efbdb3],cl
  421371:	scas   eax,DWORD PTR es:[edi]
  421372:	imul   esp,DWORD PTR [edx+edi*8],0xec26cbc
  421379:	das    
  42137a:	xor    edi,DWORD PTR [edx]
  42137c:	xor    edx,DWORD PTR [esi-0x1c2d8391]
  421382:	sbb    dl,bh
  421384:	jne    0x4213ca
  421386:	jns    0x4213e3
  421388:	cwde   
  421389:	jae    0x4213c0
  42138b:	fmul   DWORD PTR ds:0xb5d95a59
  421391:	xchg   ecx,eax
  421392:	hlt    
  421393:	xchg   BYTE PTR [edx],al
  421395:	rol    BYTE PTR [edx-0x74217cc0],cl
  42139b:	pop    ds
  42139c:	test   eax,0xc5375e2a
  4213a1:	dec    ebp
  4213a2:	mov    cl,0x72
  4213a4:	cmp    ebp,ebx
  4213a6:	jg     0x4213c9
  4213a8:	aaa    
  4213a9:	ins    DWORD PTR es:[edi],dx
  4213aa:	call   0x6ff3a7fd
  4213af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213b0:	sbb    al,0xa1
  4213b2:	inc    eax
  4213b3:	pop    ds
  4213b4:	xchg   BYTE PTR [ebx+0x70],ch
  4213b7:	sub    DWORD PTR [edi+0x4c],ebp
  4213ba:	add    BYTE PTR [eax],al
  4213bc:	xor    eax,0xbf06168e
  4213c1:	sahf   
  4213c2:	xor    eax,0xa0e807bf
  4213c7:	mov    edx,0x3571f47d
  4213cc:	pop    DWORD PTR fs:[ecx]
  4213cf:	add    BYTE PTR [esi+0x4e000002],al
  4213d5:	and    DWORD PTR [edi],eax
  4213d7:	dec    edx
  4213d8:	arpl   WORD PTR [ebx+0x21],si
  4213db:	std    
  4213dc:	inc    ecx
  4213dd:	aam    0xa
  4213df:	(bad)  
  4213e0:	loop   0x4213d5
  4213e2:	mov    esi,edi
  4213e4:	jne    0x421388
  4213e6:	sub    al,0x85
  4213e8:	mov    WORD PTR [esp+eiz*4],cs
  4213eb:	out    0x8,al
  4213ed:	push   ebx
  4213ee:	iret   
  4213ef:	or     BYTE PTR [ecx],dh
  4213f1:	xlat   BYTE PTR ds:[ebx]
  4213f2:	arpl   WORD PTR [ebx-0x678e6ded],dx
  4213f8:	push   esi
  4213f9:	std    
  4213fa:	(bad)  
  4213fb:	stos   BYTE PTR es:[edi],al
  4213fc:	add    DWORD PTR [eax+0x42],esi
  4213ff:	and    eax,0x84d01c54
  421404:	jmp    0x914a:0xaeb8c9eb
  42140b:	loopne 0x421478
  42140d:	loop   0x4213f8
  42140f:	xchg   ecx,eax
  421410:	and    al,0x22
  421412:	imul   edi,DWORD PTR [esi+esi*8-0x11],0xffffff8a
  421417:	and    ch,BYTE PTR [esi+0x70277135]
  42141d:	push   DWORD PTR [esi-0x919ceb1]
  421423:	test   al,0x15
  421425:	call   0xd610:0x81ab57d6
  42142c:	push   eax
  42142d:	mov    bl,0xa5
  42142f:	stc    
  421430:	lods   al,BYTE PTR ds:[esi]
  421431:	pop    esp
  421432:	test   eax,0x727e5a85
  421437:	jge    0x4213ff
  421439:	jne    0x42147c
  42143b:	std    
  42143c:	iret   
  42143d:	mov    ecx,0x882d0038
  421442:	jmp    0x68f77c7c
  421447:	into   
  421448:	xchg   BYTE PTR [eax],dl
  42144a:	retf   0xd51d
  42144d:	push   edi
  42144e:	sbb    dh,BYTE PTR [esp+eax*2-0x1943c43c]
  421455:	scas   eax,DWORD PTR es:[edi]
  421456:	jmp    0x421415
  421458:	or     bh,cl
  42145a:	dec    eax
  42145b:	cmp    DWORD PTR [edi],edi
  42145d:	clc    
  42145e:	mov    ds:0xca04f4b3,eax
  421463:	pop    ss
  421464:	cld    
  421465:	jmp    0x421475
  421467:	push   eax
  421468:	inc    eax
  421469:	cs stc 
  42146b:	mov    esi,DWORD PTR [eax]
  42146d:	lods   al,BYTE PTR ds:[esi]
  42146e:	jg     0x4214e0
  421470:	pop    esp
  421471:	and    DWORD PTR fs:[esi-0x76870632],edi
  421478:	nop
  421479:	pop    esp
  42147a:	stc    
  42147b:	sbb    DWORD PTR [ebx+ecx*1-0x69],eax
  42147f:	test   eax,0xb973189c
  421484:	sbb    eax,0xbb8c441e
  421489:	test   DWORD PTR [ebp+0x4186eabc],0xd91f99ca
  421493:	pop    ebx
  421494:	jge    0x4214b8
  421496:	shl    BYTE PTR [ecx],1
  421498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421499:	clc    
  42149a:	sub    ebx,ebx
  42149c:	xor    eax,eax
  42149e:	or     eax,DWORD PTR [ebx-0x59]
  4214a1:	add    al,0x20
  4214a3:	jp     0x421519
  4214a5:	jns    0x4214d0
  4214a7:	(bad)  
  4214a8:	pushf  
  4214a9:	xchg   edx,eax
  4214aa:	retf   0x6603
  4214ad:	and    al,0x15
  4214af:	fcomp  QWORD PTR [eax+0x2d]
  4214b2:	xchg   edx,eax
  4214b3:	out    dx,al
  4214b4:	dec    ebp
  4214b5:	aaa    
  4214b6:	(bad)  
  4214b7:	sbb    al,0xb6
  4214b9:	jb     0x4214eb
  4214bb:	retf   
  4214bc:	pop    ebx
  4214bd:	jecxz  0x42152f
  4214bf:	fsubr  QWORD PTR [eax+0x56]
  4214c2:	dec    ebp
  4214c3:	icebp  
  4214c4:	pop    edi
  4214c5:	mul    BYTE PTR [esp+esi*2+0x78]
  4214c9:	into   
  4214ca:	cmp    al,0xec
  4214cc:	in     eax,0xab
  4214ce:	xor    al,0x28
  4214d0:	sbb    edx,DWORD PTR [esi-0x76e94444]
  4214d6:	adc    bl,dh
  4214d8:	test   DWORD PTR [edi-0x1fa0dff7],eax
  4214de:	ins    BYTE PTR es:[edi],dx
  4214df:	outs   dx,DWORD PTR ds:[esi]
  4214e0:	adc    eax,0xea62b69d
  4214e5:	xchg   DWORD PTR [ebp-0x2c85f2b8],ecx
  4214eb:	out    0x9d,al
  4214ed:	mov    bh,cl
  4214ef:	loopne 0x421560
  4214f1:	mov    ch,0x4a
  4214f3:	pop    edx
  4214f4:	adc    eax,0xcc18d884
  4214f9:	push   ds
  4214fa:	xchg   ebx,eax
  4214fb:	jo     0x42147f
  4214fd:	sbb    al,0xab
  4214ff:	fs ja  0x421528
  421502:	xchg   esp,eax
  421503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421504:	mov    fs,WORD PTR [ebx]
  421506:	push   0x5a
  421508:	ss (bad) 
  42150a:	fimul  WORD PTR [edi+0x217886bc]
  421510:	adc    DWORD PTR [ecx+0x19],ecx
  421513:	ret    0x23ba
  421516:	or     DWORD PTR [ecx-0x21],esi
  421519:	popf   
  42151a:	call   0x1253:0xe4582367
  421521:	psubusw mm7,QWORD PTR [eax+edx*4]
  421525:	inc    ebx
  421526:	jns    0x421509
  421528:	fisttp WORD PTR [ebx-0x20]
  42152b:	mov    edi,0xa7c70a7d
  421530:	sbb    DWORD PTR [ebx-0x74],edi
  421533:	push   edi
  421534:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  421536:	std    
  421537:	test   al,0x54
  421539:	call   0xfbb67322
  42153e:	aad    0xb2
  421540:	out    0x66,eax
  421542:	leave  
  421543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421544:	jmp    0x421539
  421546:	xchg   edi,eax
  421547:	popf   
  421548:	mov    DWORD PTR [eax+eiz*4-0x5668e49e],esp
  42154f:	sbb    DWORD PTR [ebx+0x24],ebx
  421552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421553:	xor    DWORD PTR [ecx+0x19],esi
  421556:	sub    ebp,DWORD PTR [esp+edx*2]
  421559:	sbb    ah,al
  42155b:	push   es
  42155c:	cdq    
  42155d:	loopne 0x421536
  42155f:	mov    al,ss:0x75039353
  421565:	shr    BYTE PTR [eax-0x1b],0x63
  421569:	jecxz  0x4215d0
  42156b:	fisubr WORD PTR [edx+0x38]
  42156e:	pop    ds
  42156f:	(bad)
  421572:	vmread DWORD PTR [edi],eax
  421575:	cmp    ebx,DWORD PTR [eax+0x72dbd6e]
  42157b:	push   edx
  42157c:	jg     0x4215a0
  42157e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42157f:	outs   dx,BYTE PTR ds:[esi]
  421580:	push   ebp
  421581:	(bad)  
  421582:	(bad)  
  421583:	aad    0x3e
  421585:	mov    DWORD PTR es:[ecx+ebp*4-0x315c42ae],ebp
  42158d:	fistp  WORD PTR [ecx+eax*8+0x64]
  421591:	inc    ebp
  421592:	test   eax,0xba419674
  421597:	inc    ebx
  421598:	fdiv   QWORD PTR [ebp-0x52]
  42159b:	sub    dh,dh
  42159d:	adc    DWORD PTR [edi],ebx
  42159f:	xor    BYTE PTR [edi+0x282b4c78],bl
  4215a5:	push   ebp
  4215a6:	enter  0xf1,0x1b
  4215aa:	out    dx,eax
  4215ab:	jmp    0xfcdffa1f
  4215b0:	xchg   esp,eax
  4215b1:	xchg   edx,eax
  4215b2:	ret    
  4215b3:	sub    dh,0x3f
  4215b6:	dec    edi
  4215b7:	pop    ebx
  4215b8:	jp     0x421541
  4215ba:	neg    BYTE PTR [esp+ebp*8-0x75b6861a]
  4215c1:	jno    0x4215f8
  4215c3:	mov    eax,ds:0x7ee9fd6
  4215c8:	xor    dl,BYTE PTR [edx]
  4215ca:	in     eax,0x7d
  4215cc:	loope  0x42162a
  4215ce:	push   edx
  4215cf:	outs   dx,BYTE PTR ds:[esi]
  4215d0:	add    edx,DWORD PTR [esi]
  4215d2:	icebp  
  4215d3:	mov    eax,ds:0x3baf496d
  4215d8:	add    ch,al
  4215da:	jb     0x421645
  4215dc:	fmul   QWORD PTR [esi-0x7d]
  4215df:	call   0x9492e5b3
  4215e4:	mov    eax,0x8bc5899c
  4215e9:	xor    bh,bh
  4215eb:	sahf   
  4215ec:	add    DWORD PTR [esi],0x4b17b8f7
  4215f2:	push   0x6230574a
  4215f7:	push   esi
  4215f8:	fidivr DWORD PTR [edx+0x2eb6c89d]
  4215fe:	pop    ds
  4215ff:	jl     0x421581
  421601:	data16 into 
  421603:	daa    
  421604:	xchg   ebx,eax
  421605:	test   al,0x99
  421607:	mov    dh,0x4a
  421609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42160a:	daa    
  42160b:	inc    ecx
  42160c:	jbe    0x4215b4
  42160e:	(bad)  
  421610:	es sar ebp,cl
  421613:	xor    DWORD PTR [ebx+ecx*1],0xc0a4e05e
  42161a:	arpl   ax,bx
  42161c:	bound  esp,QWORD PTR [edi]
  42161e:	hlt    
  42161f:	jecxz  0x421647
  421621:	js     0x42166b
  421623:	xor    al,BYTE PTR [ecx-0x21]
  421626:	sbb    DWORD PTR [edi-0xffd88a],edi
  42162c:	aas    
  42162d:	cmp    dl,dh
  42162f:	push   ecx
  421630:	icebp  
  421631:	sbb    BYTE PTR [edi+0x32d35fd0],ah
  421637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421638:	xchg   ebx,eax
  421639:	ret    0x178c
  42163c:	loopne 0x42161a
  42163e:	rol    edx,1
  421640:	push   eax
  421641:	mov    dh,0xb2
  421643:	cdq    
  421644:	shl    edi,cl
  421646:	inc    ebx
  421647:	lahf   
  421648:	and    ebp,ecx
  42164a:	jnp    0x421635
  42164c:	test   DWORD PTR [edx-0x11],ecx
  42164f:	int3   
  421650:	cmc    
  421651:	push   cs
  421652:	cmp    ebx,ebp
  421654:	jmp    0x421687
  421656:	jmp    0x721ca2
  42165b:	add    cl,bh
  42165d:	std    
  42165e:	in     eax,dx
  42165f:	mov    cl,0xed
  421661:	mov    cl,0xfd
  421663:	std    
  421664:	pop    ds
  421665:	xor    dl,0xed
  421668:	int    0x5c
  42166a:	test   eax,0x191ea99
  42166f:	add    BYTE PTR [esi+0x26000002],al
  421675:	sub    BYTE PTR [ecx+0x5f],ah
  421678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421679:	xor    DWORD PTR [eax-0x70f2680e],ebx
  42167f:	sbb    DWORD PTR [ecx+eiz*8+0x58a71af],ebx
  421686:	inc    ebp
  421687:	xchg   BYTE PTR [edi+edx*1],cl
  42168a:	cld    
  42168b:	dec    ebp
  42168c:	mov    dh,0x19
  42168e:	out    0x6d,eax
  421690:	popf   
  421691:	(bad)  
  421692:	mov    ecx,0xecd55664
  421697:	adc    eax,0xf5b0ee19
  42169c:	scas   eax,DWORD PTR es:[edi]
  42169d:	std    
  42169e:	mov    al,0x41
  4216a0:	jnp    0x4216fe
  4216a2:	lahf   
  4216a3:	dec    esp
  4216a4:	fadd   DWORD PTR [ebx+0x6f6c399e]
  4216aa:	shl    DWORD PTR [ecx-0x7d5fccce],cl
  4216b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216b1:	sti    
  4216b2:	fs pop esp
  4216b4:	push   esp
  4216b5:	and    bh,BYTE PTR [ecx+0x7]
  4216b8:	fadd   DWORD PTR [eax]
  4216ba:	nop
  4216bb:	test   al,0x98
  4216bd:	outs   dx,BYTE PTR ds:[esi]
  4216be:	inc    ebx
  4216bf:	lods   eax,DWORD PTR ds:[esi]
  4216c0:	xor    BYTE PTR [eax],ch
  4216c2:	pop    esp
  4216c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216c4:	int    0x56
  4216c6:	xchg   ebp,eax
  4216c7:	dec    ebx
  4216c8:	jne    0x4216d8
  4216ca:	push   edi
  4216cb:	dec    esp
  4216cc:	gs std 
  4216ce:	xchg   esp,eax
  4216cf:	daa    
  4216d0:	bound  edx,QWORD PTR [ebx*4+0x72f0a026]
  4216d7:	mov    esi,0x26b8e766
  4216dc:	add    BYTE PTR [ebp+0x37],bl
  4216df:	or     BYTE PTR [edi-0x2950ad03],ah
  4216e5:	push   0xd84f3b9e
  4216ea:	mov    al,0xe0
  4216ec:	jnp    0x42168f
  4216ee:	fstp   DWORD PTR [ebx-0x42]
  4216f1:	cwde   
  4216f2:	mov    bh,0xfa
  4216f4:	pop    ss
  4216f5:	popa   
  4216f6:	mov    DWORD PTR [edx-0x40180722],0x9c8128fa
  421700:	imul   eax,ebp,0xffffffa9
  421703:	add    al,cl
  421705:	pop    ecx
  421706:	mov    eax,0x4b6b5086
  42170b:	(bad)  
  42170c:	inc    ebx
  42170d:	push   esi
  42170e:	repz cmp DWORD PTR [edi+0x113a3010],ebp
  421715:	inc    eax
  421716:	out    0x28,eax
  421718:	adc    eax,0x16d8052c
  42171d:	ficom  DWORD PTR [eax-0x39]
  421720:	sahf   
  421721:	or     DWORD PTR [ecx-0x75],esp
  421724:	push   0xdbb4748e
  421729:	aad    0x91
  42172b:	sbb    ch,BYTE PTR [ebp-0x45]
  42172e:	nop
  42172f:	sub    al,BYTE PTR [esi-0x72f54e4a]
  421735:	jae    0x421772
  421737:	and    dl,BYTE PTR [ecx]
  421739:	push   ebx
  42173a:	clc    
  42173b:	pop    ecx
  42173c:	mov    ebp,0xc0a4fd5
  421741:	push   0x8079d31f
  421746:	jle    0x4216c9
  421748:	adc    DWORD PTR [eax+edi*2+0x3e],0xfffffff7
  42174d:	arpl   WORD PTR [ecx],cx
  42174f:	lea    edx,[edx+0x300c6bd7]
  421755:	xor    esi,DWORD PTR [edi+0xd]
  421758:	or     esi,DWORD PTR [edx-0x27]
  42175b:	and    dl,0x74
  42175e:	push   0x11
  421760:	inc    BYTE PTR [ebx-0x12]
  421763:	pop    edx
  421764:	jns    0x4216eb
  421766:	scas   eax,DWORD PTR es:[edi]
  421767:	scas   eax,DWORD PTR es:[edi]
  421768:	aas    
  421769:	jmp    0x6574:0xdce46596
  421770:	adc    dl,BYTE PTR ds:0x79716c09
  421776:	xchg   ebp,eax
  421777:	imul   ebp,DWORD PTR [ebx-0x15927c74],0x478543ef
  421781:	mov    bl,0xb1
  421783:	in     eax,dx
  421784:	sub    DWORD PTR [ecx-0x1476430b],0x48d30cb2
  42178e:	repnz aaa 
  421790:	push   0xffffffb8
  421792:	mov    ?,WORD PTR [edi-0x24b0e8cb]
  421798:	push   esp
  421799:	pop    ss
  42179a:	sbb    DWORD PTR [ebx+0x23],edi
  42179d:	sbb    DWORD PTR [ebp+esi*8+0x189893a7],edx
  4217a4:	mov    DWORD PTR [eiz*2+0x51beb85a],ebx
  4217ab:	cmp    eax,0xd61b9f1b
  4217b0:	stos   BYTE PTR es:[edi],al
  4217b1:	push   0x2a
  4217b3:	dec    BYTE PTR [edi+esi*8-0x771521d]
  4217ba:	lds    esp,FWORD PTR [eax]
  4217bc:	add    BYTE PTR ds:0x8579ab26,ch
  4217c2:	lds    eax,FWORD PTR [ebp+edi*8-0x6f9a6d4b]
  4217c9:	dec    edi
  4217ca:	push   edi
  4217cb:	div    BYTE PTR [edx-0x70445efe]
  4217d1:	push   ecx
  4217d2:	aaa    
  4217d3:	mov    cl,0x4d
  4217d5:	std    
  4217d6:	por    mm0,QWORD PTR [ebx+0x21]
  4217da:	or     eax,0xdb7315aa
  4217df:	push   ebx
  4217e0:	inc    eax
  4217e1:	pop    ebp
  4217e2:	scas   al,BYTE PTR es:[edi]
  4217e3:	sub    BYTE PTR [esi-0x3a],dl
  4217e6:	mov    esp,0xc3b5c154
  4217eb:	aas    
  4217ec:	mov    bh,0x53
  4217ee:	scas   al,BYTE PTR es:[edi]
  4217ef:	add    ah,BYTE PTR [esp+eiz*8+0xc78fe19]
  4217f6:	es adc al,0xdf
  4217f9:	and    BYTE PTR [ecx+0x1af887bf],dh
  4217ff:	out    0xeb,eax
  421801:	xor    esp,esi
  421803:	sub    ch,BYTE PTR [edi+0x1d266da8]
  421809:	nop
  42180a:	fimul  WORD PTR ds:0x6d88d2d1
  421810:	leave  
  421811:	fisubr WORD PTR [ebx]
  421813:	xor    BYTE PTR [ebx-0x17e93f11],0x8
  42181a:	mov    ebx,0x7afde897
  42181f:	fadd   DWORD PTR [eax*2-0x5b9a8ac5]
  421826:	dec    edi
  421827:	mov    dl,0x3c
  421829:	mul    DWORD PTR [edx]
  42182b:	in     eax,dx
  42182c:	into   
  42182d:	aad    0xdd
  42182f:	fwait
  421830:	dec    edx
  421831:	dec    esp
  421832:	or     DWORD PTR [ebx-0x5fd1a0d5],0x5c
  421839:	mov    bl,bl
  42183b:	pop    ebp
  42183c:	outs   dx,BYTE PTR ds:[esi]
  42183d:	rcl    BYTE PTR [ecx-0x1f170b0e],cl
  421843:	out    0x16,al
  421845:	push   esi
  421846:	pop    ss
  421847:	cmp    edi,DWORD PTR [edi-0x67]
  42184a:	adc    DWORD PTR [edi+0x6b],ebx
  42184d:	adc    BYTE PTR [edx-0xa],0x8f
  421851:	jmp    0x421898
  421853:	sbb    eax,0x238672aa
  421858:	pushf  
  421859:	scas   al,BYTE PTR es:[edi]
  42185a:	out    dx,al
  42185b:	or     eax,0xc06b9a7b
  421860:	jg     0x4218ca
  421862:	dec    esi
  421863:	call   0x66e070a9
  421868:	in     al,0xe4
  42186a:	xchg   ebx,eax
  42186b:	fsubr  QWORD PTR [ebp+0x6d50275e]
  421871:	call   0x17af:0x11d6ce21
  421878:	mov    cl,0x1e
  42187a:	test   eax,esp
  42187c:	jmp    0x8bfa:0xf0d0a912
  421883:	push   eax
  421884:	sbb    edi,0xffffffb0
  421887:	and    edi,ebp
  421889:	xor    DWORD PTR [ebp+0x4c],0xfffffff2
  42188d:	adc    DWORD PTR [esi+0x6],edi
  421890:	xchg   ecx,eax
  421891:	jne    0x42186f
  421893:	cmp    al,BYTE PTR ds:0xc52df9ce
  421899:	imul   eax,DWORD PTR [ebp+0x19],0x5e
  42189d:	dec    esi
  42189e:	mov    ds:0xadd797b7,eax
  4218a3:	int    0x27
  4218a5:	sub    al,0xe4
  4218a7:	retf   
  4218a8:	ja     0x421869
  4218aa:	mov    dl,0x15
  4218ac:	inc    edi
  4218ad:	loopne 0x421904
  4218af:	and    BYTE PTR [ecx+0x20510446],ah
  4218b5:	pop    ebp
  4218b6:	icebp  
  4218b7:	in     al,dx
  4218b8:	inc    edi
  4218b9:	out    dx,eax
  4218ba:	int    0x99
  4218bc:	xchg   esp,eax
  4218bd:	inc    edi
  4218be:	or     BYTE PTR [ecx],cl
  4218c0:	loope  0x42188b
  4218c2:	mov    ?,esp
  4218c4:	push   0x96fc55e6
  4218c9:	stos   BYTE PTR es:[edi],al
  4218ca:	mov    ds:0x90676f5e,eax
  4218cf:	nop
  4218d0:	add    DWORD PTR [ebx+0x41],0x5f
  4218d4:	test   bl,dl
  4218d6:	enter  0xe128,0x86
  4218da:	xor    al,BYTE PTR [esi-0x22]
  4218dd:	test   al,0x1f
  4218df:	(bad)  
  4218e0:	cmp    BYTE PTR [ebx],bh
  4218e2:	jg     0x421897
  4218e4:	and    BYTE PTR [ecx-0x56],dl
  4218e7:	inc    eax
  4218e8:	or     edx,DWORD PTR [ecx]
  4218ea:	clc    
  4218eb:	pusha  
  4218ec:	stos   BYTE PTR es:[edi],al
  4218ed:	mov    eax,0xab4e408
  4218f2:	jmp    0x8db9d1f
  4218f7:	sub    DWORD PTR [edx],0xffffff99
  4218fa:	add    BYTE PTR [eax],al
  4218fc:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  421904:	out    dx,al
  421905:	sub    ebp,esp
  421907:	syscall 
  421909:	aad    0xf3
  42190b:	pshufw mm2,QWORD PTR [ecx+eax*1+0x28600],0x0
  421914:	xchg   edx,eax
  421915:	inc    edx
  421916:	inc    ecx
  421917:	es daa 
  421919:	push   esp
  42191a:	rcl    DWORD PTR [edx-0x4f1edf06],1
  421920:	push   ebp
  421921:	into   
  421922:	dec    ecx
  421923:	iret   
  421924:	push   esi
  421925:	gs scas eax,DWORD PTR es:[edi]
  421927:	jne    0x4218f5
  421929:	stos   BYTE PTR es:[edi],al
  42192a:	call   0x1049:0x74c08fad
  421931:	xchg   BYTE PTR [edx],dl
  421933:	push   esi
  421934:	outs   dx,BYTE PTR ds:[esi]
  421935:	xlat   BYTE PTR ds:[ebx]
  421936:	mov    ds:0x6193fa5f,eax
  42193b:	dec    DWORD PTR [esi]
  42193d:	xchg   BYTE PTR [ebx],dh
  42193f:	fadd   st,st(1)
  421941:	inc    edi
  421942:	jns    0x4218e2
  421944:	adc    BYTE PTR [eax+0x39],bl
  421947:	out    dx,al
  421948:	mov    DWORD PTR [ebx],ecx
  42194a:	imul   esi,ecx,0xfffffff6
  42194d:	adc    eax,0xedf0bd59
  421952:	into   
  421953:	jp     0x421920
  421955:	and    al,0xfc
  421957:	cmp    al,0x9f
  421959:	test   DWORD PTR [edi],ebp
  42195b:	outs   dx,DWORD PTR ds:[esi]
  42195c:	xchg   DWORD PTR [eax+eax*2-0x33916688],ebp
  421963:	dec    esp
  421964:	jbe    0x42195b
  421966:	into   
  421967:	mov    ?,WORD PTR [eax+0x440edffc]
  42196d:	arpl   sp,bx
  42196f:	sub    DWORD PTR [eax],0xb
  421972:	adc    BYTE PTR [edx+eax*1+0x823db34],ah
  421979:	add    ah,dl
  42197b:	add    ah,BYTE PTR [esp+ebp*2]
  42197e:	retf   
  42197f:	and    edx,eax
  421981:	sbb    eax,0xfbdbeda9
  421986:	adc    DWORD PTR [edx-0x28],ebx
  421989:	dec    ebx
  42198a:	mov    edx,0x3a1a5489
  42198f:	jns    0x421996
  421991:	jno    0x4219b1
  421993:	and    bl,BYTE PTR [edi-0x8]
  421996:	mul    ebp
  421998:	jae    0x4219c0
  42199a:	sub    eax,0xafabb99
  42199f:	xor    DWORD PTR [edx+eax*8+0x5efe10e2],edx
  4219a6:	aam    0xc6
  4219a8:	sub    cl,BYTE PTR [esi-0x4eec8fb2]
  4219ae:	or     DWORD PTR [eax+eax*1],esi
  4219b1:	cmp    eax,0xf01b2456
  4219b6:	jno    0x4219d9
  4219b8:	mov    ebx,0x6a8ddc28
  4219bd:	leave  
  4219be:	dec    ebp
  4219bf:	ror    al,0x11
  4219c2:	adc    al,0x41
  4219c4:	ins    BYTE PTR es:[edi],dx
  4219c5:	es ret 0x2e7b
  4219c9:	jae    0x421973
  4219cb:	repnz xchg esp,eax
  4219cd:	add    edi,DWORD PTR [eax]
  4219cf:	or     DWORD PTR gs:[esi],esi
  4219d2:	pop    es
  4219d3:	and    eax,0xd8cb034f
  4219d8:	push   edx
  4219d9:	aam    0xc0
  4219db:	adc    al,0xa2
  4219dd:	xchg   ebx,eax
  4219de:	dec    ebp
  4219df:	push   eax
  4219e0:	fidivr WORD PTR [esp+eiz*4+0x3c70ba7c]
  4219e7:	push   ebp
  4219e8:	mov    ebx,0x3275cf13
  4219ed:	loop   0x421a1a
  4219ef:	adc    DWORD PTR [ebx+0x28],esi
  4219f2:	pop    es
  4219f3:	push   edx
  4219f4:	mov    al,ds:0x92c676ea
  4219f9:	or     ah,dh
  4219fb:	pop    edi
  4219fc:	sub    ebp,DWORD PTR [esi]
  4219fe:	in     al,0xd2
  421a00:	pop    es
  421a01:	cli    
  421a02:	repnz xchg di,ax
  421a05:	sbb    eax,0x4f1ad507
  421a0a:	addr16 repz out dx,eax
  421a0d:	push   esp
  421a0e:	xor    al,0x1a
  421a10:	cmp    edi,esi
  421a12:	push   edx
  421a13:	into   
  421a14:	cmp    DWORD PTR [edi],ebx
  421a16:	retf   
  421a17:	inc    ebx
  421a18:	mov    esi,0xdc1c0bc7
  421a1d:	push   cs
  421a1e:	xlat   BYTE PTR ds:[ebx]
  421a1f:	shr    BYTE PTR [ebx-0x4e11de0e],0xad
  421a26:	dec    ecx
  421a27:	cmp    ah,BYTE PTR [edi-0xc84759a]
  421a2d:	jg     0x421a66
  421a2f:	js     0x4219df
  421a31:	cmc    
  421a32:	sbb    BYTE PTR ss:[edx+0x5c],bl
  421a36:	(bad)  
  421a37:	cdq    
  421a38:	xchg   ebp,eax
  421a39:	call   0x9520:0x1ac27174
  421a40:	lds    ecx,FWORD PTR [ebp-0x797a148c]
  421a46:	pop    esp
  421a47:	(bad)  [esi-0xf]
  421a4a:	out    0x27,eax
  421a4c:	mov    esp,0xec170673
  421a51:	pusha  
  421a52:	je     0x4219fe
  421a54:	int3   
  421a55:	cmp    ch,BYTE PTR [ecx]
  421a57:	(bad)  
  421a58:	cmp    ebx,DWORD PTR [ecx]
  421a5a:	js     0x421a37
  421a5c:	mov    ebp,0xb24feff9
  421a61:	mov    ecx,0xd4be4a4d
  421a66:	cmp    DWORD PTR [ecx-0x34],ebp
  421a69:	fisubr WORD PTR gs:[ebx+0x3d]
  421a6d:	loop   0x421a25
  421a6f:	rcr    BYTE PTR [ecx+ebp*1-0x1b882144],1
  421a76:	je     0x421a92
  421a78:	pop    edi
  421a79:	adc    ch,ah
  421a7b:	pop    esi
  421a7c:	mov    eax,ds:0x6b96015b
  421a81:	fsub   DWORD PTR [ebp+0x51be6cec]
  421a87:	jp     0x421a5e
  421a89:	(bad)  
  421a8a:	aas    
  421a8b:	dec    esp
  421a8c:	sbb    eax,DWORD PTR [esi+0x3978721f]
  421a92:	sar    edi,0xd1
  421a95:	scas   eax,DWORD PTR es:[edi]
  421a96:	add    al,0x1d
  421a98:	lods   al,BYTE PTR ds:[esi]
  421a99:	call   0x880a1d61
  421a9e:	sub    ch,BYTE PTR [ecx+edi*2+0x72]
  421aa2:	cmp    ecx,0x1d
  421aa5:	(bad)  
  421aa6:	sub    BYTE PTR [esi+ebp*4-0x3a],dh
  421aaa:	dec    edx
  421aab:	mov    esi,0x42803d29
  421ab0:	iret   
  421ab1:	adc    esi,DWORD PTR [edx]
  421ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ab4:	les    ebp,FWORD PTR [ebp+0x2d]
  421ab7:	push   esp
  421ab8:	outs   dx,BYTE PTR ds:[esi]
  421ab9:	in     eax,dx
  421aba:	fisub  DWORD PTR [edx]
  421abc:	sub    BYTE PTR [edi+0x21],0xc8
  421ac0:	fcomp  DWORD PTR [ecx+0x4]
  421ac3:	push   ebx
  421ac4:	sbb    BYTE PTR [esi-0x5d],bh
  421ac7:	adc    al,0x3a
  421ac9:	and    edx,0xddf7fb90
  421acf:	jmp    0x1d67:0xa9b042fd
  421ad6:	repnz adc DWORD PTR [esi-0x55],eax
  421ada:	scas   eax,DWORD PTR es:[edi]
  421adb:	aam    0xa5
  421add:	sub    ebp,DWORD PTR [ebx+0x75]
  421ae0:	jno    0x421aa4
  421ae2:	push   esp
  421ae3:	mov    BYTE PTR [ebp+0x75843fe4],ch
  421ae9:	xchg   edx,eax
  421aea:	das    
  421aeb:	ret    
  421aec:	xor    dh,BYTE PTR [ebp+0x25]
  421aef:	mov    al,0xf5
  421af1:	xor    al,0xab
  421af3:	outs   dx,BYTE PTR ds:[esi]
  421af4:	scas   al,BYTE PTR es:[edi]
  421af5:	idiv   DWORD PTR [ebp-0x5b]
  421af8:	xchg   esp,eax
  421af9:	lahf   
  421afa:	cdq    
  421afb:	loope  0x421a95
  421afd:	leave  
  421afe:	into   
  421aff:	mov    edx,0xc2ae8c48
  421b04:	jne    0x421b2d
  421b06:	popf   
  421b07:	stos   BYTE PTR es:[edi],al
  421b08:	call   0x4af8:0x30387aa5
  421b0f:	shl    BYTE PTR [ebx+ebx*4],0xa7
  421b13:	mov    cl,0x14
  421b15:	in     eax,0x83
  421b17:	mov    dh,0x3e
  421b19:	mov    eax,0xf12a28ae
  421b1e:	das    
  421b1f:	mov    eax,ds:0x68b4f579
  421b24:	mov    fs,WORD PTR [edx+edx*4]
  421b27:	dec    ebx
  421b28:	int    0xab
  421b2a:	out    0xc5,al
  421b2c:	popa   
  421b2d:	je     0x421af0
  421b2f:	adc    al,BYTE PTR [ebp-0x202cea34]
  421b35:	mov    al,ds:0xc1b24d2f
  421b3a:	imul   edx,DWORD PTR [ecx],0xffffffd6
  421b3d:	mov    cl,0x98
  421b3f:	mov    esi,0xe8d7163e
  421b44:	test   BYTE PTR [edx+0x34],0x2b
  421b48:	cmp    ecx,0x2e818604
  421b4e:	jge    0x421bbf
  421b50:	test   eax,0x3d66b041
  421b55:	xchg   edx,eax
  421b56:	(bad)  
  421b57:	jecxz  0x421ada
  421b59:	retf   0x35d4
  421b5c:	xor    bl,bh
  421b5e:	in     al,0xa8
  421b60:	mov    ecx,0xa67f717a
  421b65:	push   0x37
  421b67:	in     eax,0xa4
  421b69:	(bad)  
  421b6a:	xchg   ecx,eax
  421b6b:	sbb    eax,0x6c964d8
  421b70:	sub    DWORD PTR [edi+edi*2],0xffffff99
  421b74:	aam    0x86
  421b76:	imul   eax,eax,0xffffff83
  421b79:	pop    eax
  421b7a:	cs xchg edx,eax
  421b7c:	mov    dh,0x94
  421b7e:	push   ss
  421b7f:	jecxz  0x421bee
  421b81:	lds    esp,FWORD PTR [ebx+0x1a]
  421b84:	(bad)  
  421b86:	xor    dl,BYTE PTR [eax]
  421b88:	push   esp
  421b89:	stos   DWORD PTR es:[edi],eax
  421b8a:	mov    eax,ds:0xbc6c0df2
  421b8f:	fcmovne st,st(1)
  421b91:	retf   0xe47b
  421b94:	cli    
  421b95:	ss iret 
  421b97:	mov    ebp,0x5dee
  421b9c:	inc    ebx
  421b9d:	inc    ecx
  421b9e:	popa   
  421b9f:	data16 arpl WORD PTR [esi+0x47],sp
  421ba3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421ba7:	xor    bh,al
  421ba9:	lahf   
  421baa:	jp     0x421bdd
  421bac:	not    BYTE PTR [esi+0x2860001]
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	xchg   edx,eax
  421bb5:	jecxz  0x421bee
  421bb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bb8:	addr16 mov eax,ds:0x76bc
  421bbc:	sub    DWORD PTR [ebx-0x6],edx
  421bbf:	(bad)  
  421bc0:	aad    0x7b
  421bc2:	mov    ecx,0xeff9b9e8
  421bc7:	pop    esp
  421bc8:	stos   BYTE PTR es:[edi],al
  421bc9:	in     eax,0xee
  421bcb:	rcr    DWORD PTR [edi],1
  421bcd:	cdq    
  421bce:	out    0x44,eax
  421bd0:	je     0x421bc0
  421bd2:	push   DWORD PTR [eax-0x4712f3da]
  421bd8:	sti    
  421bd9:	sahf   
  421bda:	mov    al,BYTE PTR [ebx-0x3a]
  421bdd:	into   
  421bde:	mov    dl,dh
  421be0:	cs pop ecx
  421be2:	or     DWORD PTR [edx+0x37ee90e6],eax
  421be8:	iret   
  421be9:	xor    eax,0xdd242563
  421bee:	mov    bl,0x93
  421bf0:	xor    BYTE PTR ds:0xbaa7afa2,ah
  421bf6:	cwde   
  421bf7:	mov    ebp,0x60f638c0
  421bfc:	scas   al,BYTE PTR es:[edi]
  421bfd:	rcl    BYTE PTR [edx],1
  421bff:	dec    dl
  421c01:	pop    esi
  421c02:	ss aaa 
  421c04:	prefetchwt1 BYTE PTR [eax+0x1241639c]
  421c0b:	sbb    eax,DWORD PTR [ebp+0x11b0007b]
  421c11:	sti    
  421c12:	cmp    bh,BYTE PTR [esi-0x40fffbe5]
  421c18:	adc    BYTE PTR [esi+0x70],ch
  421c1b:	mov    esi,0xae2bbf6
  421c20:	shr    DWORD PTR [ebp+0x267a2407],0xdf
  421c27:	cmc    
  421c28:	popf   
  421c29:	mov    ah,0xfb
  421c2b:	push   ecx
  421c2d:	jns    0x421bd8
  421c2f:	mov    ch,0xf2
  421c31:	frstor ds:0x50a907
  421c37:	loop   0x421c37
  421c39:	mov    ebx,0xca55eb0b
  421c3e:	ret    0xf716
  421c41:	test   DWORD PTR [ebx+ebp*8+0x3d],ebp
  421c45:	mov    ds:0x48751818,eax
  421c4a:	call   0x1869f41f
  421c4f:	add    dl,bh
  421c51:	aaa    
  421c52:	leave  
  421c53:	ss pop edx
  421c55:	inc    esi
  421c56:	arpl   WORD PTR ds:0x91156cd6,di
  421c5c:	and    ch,BYTE PTR [eax]
  421c5e:	mov    eax,0xd7aaaf06
  421c63:	sub    eax,0xa32fda3d
  421c68:	loopne 0x421bfa
  421c6a:	lods   al,BYTE PTR ds:[esi]
  421c6b:	dec    ebx
  421c6c:	out    dx,eax
  421c6d:	sbb    al,0xbc
  421c6f:	push   0x5138e224
  421c74:	jne    0x421c0d
  421c76:	push   edx
  421c77:	mov    ecx,0xc1a52186
  421c7c:	ud0    esp,DWORD PTR [esi+eiz*8]
  421c80:	imul   esi,DWORD PTR [esp+ecx*8+0x8],0xffffffcd
  421c85:	jae    0x421c45
  421c87:	sahf   
  421c88:	loop   0x421c12
  421c8a:	cmc    
  421c8b:	mov    edi,0x8287b313
  421c90:	addr16 std 
  421c92:	add    eax,0xb66b9356
  421c97:	xchg   BYTE PTR [si+0x57],cl
  421c9b:	(bad)  [ecx]
  421c9d:	adc    dl,dh
  421c9f:	and    ebx,DWORD PTR [ebp+esi*8+0x6d]
  421ca3:	cmp    DWORD PTR [eax+0x4f],edi
  421ca6:	sub    ch,BYTE PTR [edx]
  421ca8:	jbe    0x421d06
  421caa:	adc    eax,DWORD PTR [ecx-0x5798c7eb]
  421cb0:	add    DWORD PTR [ecx+0x487133e9],ebx
  421cb6:	sub    dl,BYTE PTR [edi+0x2ab834e3]
  421cbc:	mov    DWORD PTR [edi-0x4fda5073],eax
  421cc2:	add    esi,DWORD PTR [ebp+0x366e1d43]
  421cc8:	jecxz  0x421c8c
  421cca:	cmp    al,0x4c
  421ccc:	sub    BYTE PTR [edx-0x7b],bh
  421ccf:	sbb    DWORD PTR [ebx+0x40620066],0x62
  421cd6:	mov    cl,0xb4
  421cd8:	or     eax,DWORD PTR [eax-0x78]
  421cdb:	out    0xd2,eax
  421cdd:	retf   
  421cde:	out    0x40,al
  421ce0:	inc    eax
  421ce1:	iret   
  421ce2:	cli    
  421ce3:	mov    BYTE PTR ds:0x73df2a,bh
  421ce9:	mov    cl,0x60
  421ceb:	gs dec ebp
  421ced:	dec    esp
  421cee:	cmp    ah,ch
  421cf0:	push   cs
  421cf1:	mov    ebp,0xc5a989e1
  421cf6:	call   0x6cc4d913
  421cfb:	mov    ah,0x12
  421cfd:	push   0x77
  421cff:	adc    edx,DWORD PTR [ebp-0x47]
  421d02:	mov    ch,al
  421d04:	gs jne 0x421d05
  421d07:	dec    ebp
  421d08:	push   0x1a
  421d0a:	xchg   BYTE PTR [edx-0x16],ch
  421d0d:	inc    ebp
  421d0e:	call   0x6d47c284
  421d13:	dec    esi
  421d14:	pop    edi
  421d15:	leave  
  421d16:	fldcw  WORD PTR [eax+0x31]
  421d19:	(bad)  
  421d1a:	(bad)  
  421d1b:	or     al,0x6
  421d1d:	lods   al,BYTE PTR ds:[esi]
  421d1e:	test   bl,ch
  421d20:	pop    ebx
  421d21:	pop    esp
  421d22:	paddb  mm1,mm5
  421d25:	ja     0x421d5a
  421d27:	dec    ebx
  421d28:	rcl    BYTE PTR [ebx],cl
  421d2a:	mov    ds:0xe54c02e5,eax
  421d2f:	shl    dl,cl
  421d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d32:	xchg   BYTE PTR [ebp-0x94b2a35],cl
  421d38:	cld    
  421d39:	mov    edi,0x3af28803
  421d3e:	aas    
  421d3f:	mov    WORD PTR [edi+0x721c730e],?
  421d45:	or     DWORD PTR [ebp-0x34969908],edi
  421d4b:	(bad)  
  421d4c:	xor    ebx,DWORD PTR [edx+edi*1]
  421d4f:	inc    ebx
  421d50:	loop   0x421d4b
  421d52:	(bad)  
  421d53:	bound  esp,QWORD PTR [eax+0xdd4981d]
  421d59:	pop    ss
  421d5a:	mov    ecx,0xf9a933a8
  421d5f:	cld    
  421d60:	fwait
  421d61:	add    BYTE PTR ds:0x69b92b78,ch
  421d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d68:	pop    edi
  421d69:	imul   esp,DWORD PTR [ecx+0x2b934c16],0xffffffb1
  421d70:	test   DWORD PTR [ebx-0x374a9c48],ecx
  421d76:	mov    cl,0xc2
  421d78:	cmp    al,0x76
  421d7a:	je     0x421d6f
  421d7c:	adc    eax,0xd1ae27f8
  421d81:	scas   eax,DWORD PTR es:[edi]
  421d82:	and    al,0xea
  421d84:	cmp    al,0xe3
  421d86:	pop    esp
  421d87:	fisubr DWORD PTR [ebx]
  421d89:	or     ebx,esi
  421d8b:	shl    ah,cl
  421d8d:	dec    esp
  421d8e:	outs   dx,BYTE PTR ds:[esi]
  421d8f:	fdiv   st(5),st
  421d91:	sbb    DWORD PTR [ebx-0x7f],ecx
  421d94:	xchg   edx,eax
  421d95:	xchg   ecx,eax
  421d96:	mov    esp,0x90317868
  421d9b:	mov    eax,0x2833b64
  421da0:	fs push esp
  421da2:	in     al,0x20
  421da4:	add    al,0x13
  421da6:	das    
  421da7:	mov    ebp,0xcfeb93f9
  421dac:	dec    esp
  421dad:	fimul  DWORD PTR [ebp*2-0x47522b39]
  421db4:	fwait
  421db5:	and    dl,dl
  421db7:	cmp    al,0x4f
  421db9:	mov    ds:0xbb1ca3eb,eax
  421dbe:	jbe    0x421da6
  421dc0:	add    DWORD PTR [ecx+ebx*8+0x57],esi
  421dc4:	rcl    BYTE PTR [ecx],cl
  421dc6:	fsubr  QWORD PTR [edi-0x7086a3a9]
  421dcc:	popf   
  421dcd:	call   0x256ee576
  421dd2:	adc    ah,BYTE PTR [edx-0x32]
  421dd5:	in     al,0x33
  421dd7:	scas   eax,DWORD PTR es:[edi]
  421dd8:	push   cs
  421dd9:	scas   eax,DWORD PTR es:[edi]
  421dda:	hlt    
  421ddb:	adc    DWORD PTR [ebx],esp
  421ddd:	test   eax,0x278bf34c
  421de2:	fld    QWORD PTR [ebp+0x4f]
  421de5:	(bad)  
  421de7:	bound  ebp,QWORD PTR [ecx-0x35]
  421dea:	daa    
  421deb:	push   ecx
  421dec:	popa   
  421ded:	shr    dh,cl
  421def:	ds in  eax,dx
  421df1:	mov    ds,WORD PTR [ecx+esi*1+0x20]
  421df5:	mov    ds:0x837a2f4e,eax
  421dfa:	hlt    
  421dfb:	adc    ebx,DWORD PTR [edi+ecx*8]
  421dfe:	sbb    eax,0xe6504a5d
  421e03:	push   edx
  421e04:	push   ds
  421e05:	push   eax
  421e06:	and    al,0x54
  421e08:	or     bh,BYTE PTR [ebx+edi*1+0x7b6718f1]
  421e0f:	jmp    DWORD PTR [edx-0x30]
  421e12:	xlat   BYTE PTR ds:[ebx]
  421e13:	fiadd  WORD PTR [ecx+0x47]
  421e16:	mov    gs,WORD PTR [eax+esi*4+0x1c16c4ca]
  421e1d:	xor    dl,cl
  421e1f:	gs scas eax,DWORD PTR es:[edi]
  421e21:	mov    esp,0xd780ba2e
  421e26:	add    al,0x9
  421e28:	bound  ecx,QWORD PTR ds:0xa16a006a
  421e2e:	jmp    0x8b834863
  421e33:	xchg   BYTE PTR [edi],ah
  421e35:	jns    0x421df0
  421e37:	aam    0x3a
  421e39:	sbb    al,BYTE PTR [eax]
  421e3b:	add    BYTE PTR [ebx-0xce42c16],cl
  421e41:	cmp    ecx,ebx
  421e43:	cli    
  421e44:	in     al,dx
  421e45:	jg     0x421e7e
  421e47:	loopne 0x421e04
  421e49:	sub    ah,BYTE PTR [eax-0x73]
  421e4c:	jl     0x421de7
  421e4e:	add    DWORD PTR [eax],eax
  421e50:	xchg   BYTE PTR [edx],al
  421e52:	add    BYTE PTR [eax],al
  421e54:	ins    BYTE PTR es:[edi],dx
  421e55:	cmp    eax,0x952ded9c
  421e5a:	sub    DWORD PTR [ecx+0x2588bf5b],0xffffffd5
  421e61:	test   DWORD PTR [esi+eiz*4+0xe22149b],0x2dca3a47
  421e6c:	das    
  421e6d:	xor    DWORD PTR [edx+0x31],edi
  421e70:	femms  
  421e72:	int    0x24
  421e74:	out    dx,eax
  421e75:	lods   al,BYTE PTR ds:[esi]
  421e76:	(bad)  
  421e77:	jnp    0x421e2d
  421e79:	int    0x83
  421e7b:	clc    
  421e7c:	dec    edi
  421e7d:	fisttp QWORD PTR [eax]
  421e7f:	into   
  421e80:	sti    
  421e81:	xor    eax,0x5418677a
  421e86:	popa   
  421e87:	push   ecx
  421e88:	add    DWORD PTR [ebx+ecx*2-0x302961ef],esp
  421e8f:	mov    ecx,0x1b906019
  421e94:	cmp    esi,DWORD PTR [ebx]
  421e96:	test   BYTE PTR [ecx],al
  421e98:	xor    eax,0xa69faa9b
  421e9d:	mov    edi,0xdf2853c0
  421ea2:	jmp    0x8941:0x87dd3d72
  421ea9:	jmp    0x421e6d
  421eab:	cmp    eax,0xa87fa108
  421eb0:	js     0x421ea7
  421eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eb3:	or     eax,0x7c61338f
  421eb8:	add    BYTE PTR [edi],bl
  421eba:	push   ebx
  421ebb:	push   ebp
  421ebc:	mov    DWORD PTR [eax-0x56731a6e],esp
  421ec2:	add    edi,ecx
  421ec4:	xor    eax,0xc8112c3c
  421ec9:	dec    ecx
  421eca:	push   ebx
  421ecb:	outs   dx,DWORD PTR ds:[esi]
  421ecc:	(bad)
  421ecf:	and    bl,BYTE PTR [edx]
  421ed1:	sbb    DWORD PTR [edx],edi
  421ed3:	mov    ah,0x96
  421ed5:	retf   0xfbc6
  421ed8:	popa   
  421ed9:	inc    ebx
  421eda:	xchg   ecx,eax
  421edb:	mov    edx,0x86ee2bf0
  421ee0:	and    al,0xf7
  421ee2:	cmp    cl,BYTE PTR [eax+0x35]
  421ee5:	in     eax,0x4e
  421ee7:	inc    ebx
  421ee8:	(bad)  gs:[ebp+0x35cfb157]
  421eef:	xchg   dh,bl
  421ef1:	ret    
  421ef2:	je     0x421ebd
  421ef4:	out    0xe8,eax
  421ef6:	les    edi,FWORD PTR [esi+0x44]
  421ef9:	lods   eax,DWORD PTR ds:[esi]
  421efa:	sub    al,0xad
  421efc:	xchg   DWORD PTR [ebx],edx
  421efe:	call   0x94122293
  421f03:	sti    
  421f04:	or     al,0x7d
  421f06:	mov    WORD PTR [edx-0x4d7840eb],fs
  421f0c:	mov    eax,0xe7fbe832
  421f11:	test   eax,0xb2a4ec7a
  421f16:	stc    
  421f17:	jl     0x421f4c
  421f19:	mov    ah,0x45
  421f1b:	hlt    
  421f1c:	lahf   
  421f1d:	or     DWORD PTR [edi-0x12],esp
  421f20:	out    0x54,eax
  421f22:	jae    0x421eda
  421f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f25:	mov    ecx,0xd1869877
  421f2a:	ins    BYTE PTR es:[edi],dx
  421f2b:	sti    
  421f2c:	cmp    ecx,DWORD PTR [eax]
  421f2e:	ins    DWORD PTR es:[edi],dx
  421f2f:	xchg   ebx,eax
  421f30:	jae    0x421f19
  421f32:	cli    
  421f33:	dec    ecx
  421f34:	daa    
  421f35:	lods   al,BYTE PTR ds:[esi]
  421f36:	mov    bl,0x6c
  421f38:	gs adc eax,edi
  421f3b:	cli    
  421f3c:	popa   
  421f3d:	push   edx
  421f3e:	xor    ecx,edi
  421f40:	leave  
  421f41:	call   FWORD PTR [eax]
  421f43:	cmp    eax,0xaf658fcb
  421f48:	addr16 xor al,0xc7
  421f4b:	outs   dx,DWORD PTR ds:[esi]
  421f4c:	pop    ecx
  421f4d:	xchg   ebp,eax
  421f4e:	jne    0x421f0b
  421f50:	mov    eax,ds:0x1af7878d
  421f55:	xchg   ebx,eax
  421f56:	dec    esp
  421f57:	cmc    
  421f58:	mov    esi,0xe416e753
  421f5d:	pop    ebx
  421f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f5f:	push   edx
  421f60:	pop    esp
  421f61:	xlat   BYTE PTR ds:[ebx]
  421f62:	es xchg edi,eax
  421f64:	fstp   QWORD PTR [edi+0x2f]
  421f67:	or     eax,0x63e60a0a
  421f6c:	cli    
  421f6d:	jmp    0xf0d7c757
  421f72:	std    
  421f73:	push   esi
  421f74:	shr    DWORD PTR [eax],0x38
  421f77:	(bad)  
  421f78:	mov    ds:0xa731e395,eax
  421f7d:	xor    esi,DWORD PTR [ecx+ebp*2-0xdc55b7b]
  421f84:	stos   BYTE PTR es:[edi],al
  421f85:	add    eax,0x4d260283
  421f8a:	ja     0x421fc6
  421f8c:	int3   
  421f8d:	in     al,0xda
  421f8f:	shl    DWORD PTR [esi-0x4f],0x2c
  421f93:	mov    ebp,0x40c67efb
  421f98:	mov    cl,bh
  421f9a:	pop    esp
  421f9b:	data16 mov dh,0x1
  421f9e:	mov    esp,0x78dcef97
  421fa3:	not    BYTE PTR [ebp+eiz*4+0x54]
  421fa7:	in     eax,dx
  421fa8:	push   0xffffff92
  421faa:	and    ebx,DWORD PTR [edx-0x21]
  421fad:	das    
  421fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421faf:	push   cs
  421fb0:	mov    cl,0xd6
  421fb2:	mov    al,BYTE PTR [ecx]
  421fb4:	stos   DWORD PTR es:[edi],eax
  421fb5:	(bad)
  421fb9:	bnd ret 0xe94b
  421fbd:	fadd   DWORD PTR [ebx+0x42b1d2a8]
  421fc3:	in     eax,0x6c
  421fc5:	shl    cl,cl
  421fc7:	(bad)  
  421fc8:	lahf   
  421fc9:	jle    0x421fcd
  421fcb:	ret    
  421fcc:	mov    al,ds:0xa3ab8a93
  421fd1:	xor    eax,0xffc3d370
  421fd6:	jle    0x422020
  421fd8:	adc    eax,0x5ef42bf
  421fdd:	jmp    0x1403:0x39a33afe
  421fe4:	repnz cwde 
  421fe6:	ins    DWORD PTR es:[edi],dx
  421fe7:	aam    0x0
  421fe9:	dec    esp
  421fea:	xlat   BYTE PTR ds:[ebx]
  421feb:	cwde   
  421fec:	outs   dx,BYTE PTR ds:[esi]
  421fed:	fsub   QWORD PTR [ebp-0x42]
  421ff0:	out    dx,al
  421ff1:	xchg   edx,eax
  421ff2:	aaa    
  421ff3:	inc    ecx
  421ff4:	xchg   esp,eax
  421ff5:	scas   al,BYTE PTR es:[edi]
  421ff6:	mov    BYTE PTR [ecx],0x81
  421ff9:	jl     0x42200a
  421ffb:	sar    dl,0xa3
  421ffe:	sub    BYTE PTR [ebx+0x63],0xd2
  422002:	loop   0x422049
  422004:	int3   
  422005:	mov    ah,0xec
  422007:	ja     0x421fb7
  422009:	int3   
  42200a:	or     ch,BYTE PTR [edx]
  42200c:	data16 xor ch,ch
  42200f:	lock cmp DWORD PTR ds:0x8e97564a,esi
  422016:	dec    ebp
  422017:	inc    ebx
  422018:	stos   DWORD PTR es:[edi],eax
  422019:	mov    ds:0x262324a6,al
  42201e:	lds    ebp,FWORD PTR [ebx]
  422020:	test   eax,0x42ae1a19
  422025:	push   ebx
  422026:	inc    esi
  422027:	jmp    0x9abc:0x12389b92
  42202e:	jecxz  0x42205e
  422030:	js     0x42207f
  422032:	ss ret 0x1e24
  422036:	xor    al,0xb7
  422038:	ins    DWORD PTR es:[edi],dx
  422039:	sbb    DWORD PTR [ecx*8-0x455bf550],edi
  422040:	scas   eax,DWORD PTR es:[edi]
  422041:	pusha  
  422042:	call   0xf1376ba2
  422047:	and    al,0xd3
  422049:	mov    dl,0xb3
  42204b:	sub    al,0x70
  42204d:	cmp    ebp,eax
  42204f:	aaa    
  422050:	mov    esi,0xc1ad91b4
  422055:	jmp    0xabf6:0xae37025e
  42205c:	fisttp QWORD PTR [ebx]
  42205e:	sub    eax,DWORD PTR [esi+0x1a4686a2]
  422064:	xchg   ecx,eax
  422065:	aaa    
  422066:	pushf  
  422067:	inc    edx
  422068:	js     0x422089
  42206a:	xchg   edx,eax
  42206b:	xchg   ebx,eax
  42206c:	hlt    
  42206d:	mov    ds:0xccffe499,eax
  422072:	mov    edx,0x85b1d1b7
  422077:	scas   eax,DWORD PTR es:[edi]
  422078:	dec    ebp
  422079:	jg     0x422035
  42207b:	fs adc al,0xa4
  42207e:	sub    DWORD PTR [ebx],eax
  422080:	push   esi
  422081:	sub    BYTE PTR [esi+0x49],al
  422084:	rcl    BYTE PTR [edi],0x4f
  422087:	mov    ebx,0xee152385
  42208c:	loop   0x422085
  42208e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42208f:	jo     0x4220be
  422091:	ret    0x6bd
  422094:	ret    
  422095:	mov    ds:0xc910d381,eax
  42209a:	pop    edi
  42209b:	mov    bh,0x66
  42209d:	or     BYTE PTR [edx+0x56],ch
  4220a0:	jne    0x422080
  4220a2:	(bad)  
  4220a3:	jge    0x4220e8
  4220a5:	popa   
  4220a6:	lds    esp,FWORD PTR [ecx-0x2]
  4220a9:	je     0x422095
  4220ab:	cmp    BYTE PTR [ebx-0x17],cl
  4220ae:	jg     0x4220b0
  4220b0:	mov    bh,0x4a
  4220b2:	(bad)  
  4220b3:	and    BYTE PTR [eax],ah
  4220b5:	pusha  
  4220b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220b8:	or     edx,edx
  4220ba:	inc    esp
  4220bb:	(bad)  
  4220bc:	retf   
  4220bd:	shl    edx,cl
  4220bf:	std    
  4220c0:	cld    
  4220c1:	xor    ch,BYTE PTR es:[ebx+ebx*4+0x3d]
  4220c6:	xlat   BYTE PTR ds:[ebx]
  4220c7:	dec    esi
  4220c8:	rcl    DWORD PTR [esi-0x5fe0c6a],1
  4220ce:	sbb    al,0x98
  4220d0:	jp     0x4220a9
  4220d2:	aas    
  4220d3:	iret   
  4220d4:	ret    
  4220d5:	sbb    eax,0x8470a182
  4220da:	add    BYTE PTR [eax],al
  4220dc:	shl    BYTE PTR [edx],cl
  4220de:	xchg   esi,eax
  4220df:	call   0x1e52:0x6adebef6
  4220e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e7:	and    dl,bl
  4220e9:	push   edi
  4220ea:	cmp    DWORD PTR [ebx+0x2],ebp
  4220ed:	pushf  
  4220ee:	add    DWORD PTR [eax],eax
  4220f0:	xchg   BYTE PTR [edx],al
  4220f2:	add    BYTE PTR [eax],al
  4220f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220f5:	lea    esp,[ecx+esi*4]
  4220f8:	jge    0x4220af
  4220fa:	add    cl,dl
  4220fc:	cvttps2pi mm5,QWORD PTR [edx]
  4220ff:	js     0x4220db
  422101:	mov    ebp,0xa6eecc69
  422106:	jp     0x42215e
  422108:	ja     0x422165
  42210a:	adc    al,0xf8
  42210c:	(bad)  
  42210d:	xor    BYTE PTR [ebp+0x6e],dl
  422110:	jno    0x42213e
  422112:	(bad)  
  422113:	mov    bl,0x12
  422115:	repnz mov ds:0x94baed84,eax
  42211b:	xchg   ebx,eax
  42211c:	jle    0x422105
  42211e:	test   eax,0xa3355204
  422123:	les    esp,FWORD PTR [esi+0x2e404038]
  422129:	sub    BYTE PTR [ecx+ebp*2-0x20bb6fd],cl
  422130:	push   cs
  422131:	jmp    0x422120
  422133:	push   edx
  422134:	jg     0x42219f
  422136:	mov    gs,esp
  422138:	fxch   st(4)
  42213a:	lahf   
  42213b:	sub    dh,ah
  42213d:	(bad)  
  42213e:	mov    al,ds:0x1f9b0c63
  422143:	lahf   
  422144:	sbb    DWORD PTR [edi],esp
  422146:	pop    ebp
  422147:	lahf   
  422148:	sub    eax,0xb9011d2e
  42214d:	mov    edi,?
  42214f:	xchg   edi,eax
  422150:	jbe    0x422104
  422152:	mov    ecx,0xf5909c36
  422157:	(bad)  
  422158:	mov    eax,ds:0xb169adce
  42215d:	test   DWORD PTR [esi+0x5600de8b],ebp
  422163:	int    0x3d
  422165:	mov    ds:0xbbf3b3d9,al
  42216a:	jmp    0x3ed0:0xd7602c83
  422171:	ds in  eax,dx
  422173:	lahf   
  422174:	clc    
  422175:	repnz push edi
  422177:	sub    esp,edi
  422179:	mov    bl,0x58
  42217b:	mov    ds:0x634a7691,al
  422180:	retf   
  422181:	not    DWORD PTR [edx]
  422183:	cli    
  422184:	adc    DWORD PTR [eax+ebp*2+0x2e],0x10
  422189:	or     BYTE PTR [ecx-0x28],dh
  42218c:	sbb    esi,DWORD PTR [esi]
  42218e:	xor    dh,0xba
  422191:	sahf   
  422192:	add    al,0x84
  422194:	dec    eax
  422195:	jle    0x422173
  422197:	cwde   
  422198:	cmp    DWORD PTR [ebx-0x1f75aff7],edi
  42219e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42219f:	xchg   ecx,eax
  4221a0:	cmp    eax,0xa292deda
  4221a6:	jge    0x42212e
  4221a8:	int3   
  4221a9:	cwde   
  4221aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221ab:	ror    BYTE PTR [ebx-0x1ca3efe5],1
  4221b1:	out    0x2e,eax
  4221b3:	xlat   BYTE PTR ds:[ebx]
  4221b4:	aaa    
  4221b5:	cs loope 0x422141
  4221b8:	clc    
  4221b9:	cld    
  4221ba:	mov    edi,0x65c39842
  4221bf:	cmp    edi,DWORD PTR [ebx-0x23]
  4221c2:	cld    
  4221c3:	sbb    cl,BYTE PTR [ebx+0x79]
  4221c6:	in     al,0x41
  4221c8:	adc    eax,esp
  4221ca:	pop    esi
  4221cb:	xacquire xchg DWORD PTR [edx+0x4f],eax
  4221cf:	cld    
  4221d0:	sub    BYTE PTR [esi+0x14c732b0],ah
  4221d6:	or     BYTE PTR [ebx-0x50],bl
  4221d9:	push   ebx
  4221da:	and    DWORD PTR [esi],0xe9fda136
  4221e0:	adc    eax,0xd0d91bae
  4221e5:	cmp    dl,bl
  4221e7:	in     al,0xe1
  4221e9:	in     eax,dx
  4221ea:	and    BYTE PTR [ecx],ah
  4221ec:	and    edi,DWORD PTR [ecx]
  4221ee:	sti    
  4221ef:	mov    eax,ds:0x193b157b
  4221f4:	or     ebp,DWORD PTR [ebp-0x5394aebe]
  4221fa:	or     BYTE PTR [esi+0x63],cl
  4221fd:	cmp    bh,ch
  4221ff:	iret   
  422200:	xchg   ebp,eax
  422201:	cmp    esp,DWORD PTR [eax*4-0x58bdfb64]
  422208:	cmp    BYTE PTR [eax+ebp*8-0x76],dh
  42220c:	cli    
  42220d:	xchg   ecx,eax
  42220e:	jb     0x42223f
  422210:	pop    esi
  422211:	cmp    al,0x76
  422213:	jmp    0xb495e2bb
  422218:	and    al,0xd7
  42221a:	sub    al,0x17
  42221c:	fild   WORD PTR [edx-0x68de135]
  422222:	imul   bl
  422224:	add    DWORD PTR [ebx+edi*4+0x7f],ebx
  422228:	stc    
  422229:	ins    DWORD PTR es:[edi],dx
  42222a:	jg     0x422226
  42222c:	xor    al,BYTE PTR [edx+0x4578ee84]
  422232:	and    eax,0x7769a19c
  422237:	push   edi
  422238:	add    ch,dh
  42223a:	sti    
  42223b:	jo     0x4222b9
  42223d:	dec    ebx
  42223e:	jl     0x422289
  422240:	fisub  DWORD PTR [eax-0x7e]
  422243:	xchg   ebx,eax
  422244:	cdq    
  422245:	lahf   
  422246:	sbb    BYTE PTR [esi],0x63
  422249:	and    eax,0xc267a311
  42224e:	data16 js 0x422298
  422251:	dec    edx
  422252:	mov    ah,0x30
  422254:	and    DWORD PTR [esi],eax
  422256:	loop   0x4222a3
  422258:	sbb    ebx,ecx
  42225a:	(bad)  
  42225b:	(bad)  
  42225c:	jmp    0x67c7d91f
  422261:	or     DWORD PTR [ebx+0x33e553fb],eax
  422267:	pusha  
  422268:	loop   0x422222
  42226a:	imul   esp,DWORD PTR [esi-0x3a],0xd82636da
  422271:	sub    al,0xe3
  422273:	xchg   ecx,eax
  422274:	test   eax,0x52394b17
  422279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42227a:	adc    DWORD PTR ds:0x1aff1448,esi
  422280:	xchg   esi,eax
  422281:	pop    edi
  422282:	jbe    0x42226c
  422284:	mov    ah,0xd1
  422286:	pop    eax
  422287:	cmp    al,0xb2
  422289:	xor    eax,0x460b78aa
  42228e:	jmp    0xf129:0x84b4d15
  422295:	xchg   esi,eax
  422296:	mov    bh,0x34
  422298:	pop    esp
  422299:	aad    0x4c
  42229b:	jge    0x4222ab
  42229d:	ds mov esp,0x449f9cd1
  4222a3:	hlt    
  4222a4:	inc    edi
  4222a5:	fisub  WORD PTR [edi+0x37]
  4222a8:	pop    ebx
  4222a9:	adc    al,0x0
  4222ab:	xor    esi,0xffffffb6
  4222ae:	inc    esp
  4222af:	popf   
  4222b0:	mov    DWORD PTR [ecx+0x7eb7a53f],0x5c8edd29
  4222ba:	mov    bl,0x9c
  4222bc:	leave  
  4222bd:	pop    ds
  4222be:	ret    0xce39
  4222c1:	enter  0xb60b,0x64
  4222c5:	nop
  4222c6:	and    edx,DWORD PTR [bp+di-0x448a]
  4222cb:	xchg   esi,edi
  4222cd:	cmp    al,0xb6
  4222cf:	sbb    eax,0x8ca13fbc
  4222d4:	test   DWORD PTR [edx+0x11],ebp
  4222d7:	in     al,dx
  4222d8:	pushf  
  4222d9:	add    al,BYTE PTR [esi]
  4222db:	cmp    edx,esp
  4222dd:	xor    al,0x1f
  4222df:	out    dx,eax
  4222e0:	mov    ds:0xf51b0e32,eax
  4222e5:	push   esi
  4222e6:	and    cl,bh
  4222e8:	add    al,0xc0
  4222ea:	mov    esi,0x2d35df6
  4222ef:	push   ebp
  4222f0:	rol    DWORD PTR [ecx],0xf2
  4222f3:	and    esp,DWORD PTR [ecx]
  4222f5:	pop    esi
  4222f6:	or     ebx,DWORD PTR [edi]
  4222f8:	mov    cl,0x2c
  4222fa:	adc    ch,0x55
  4222fd:	in     al,0x5a
  4222ff:	push   edi
  422300:	test   BYTE PTR [edi+ebp*2-0x27],cl
  422304:	inc    ebp
  422305:	mov    bh,0x8e
  422307:	xchg   ebp,eax
  422308:	sub    BYTE PTR ds:0x918217e0,bl
  42230e:	sbb    DWORD PTR [ecx],edx
  422310:	and    cl,bl
  422312:	sbb    bl,BYTE PTR [ecx]
  422314:	sub    eax,0x8ed1e19f
  422319:	ret    
  42231a:	push   eax
  42231b:	mov    esi,0xcb1d0ee1
  422320:	mov    es,edi
  422322:	push   esi
  422323:	pop    esp
  422324:	sbb    ch,BYTE PTR [ebx-0x4b]
  422327:	pushf  
  422328:	test   BYTE PTR [ecx+0x22f638a5],0x28
  42232f:	xor    edx,DWORD PTR [ebx]
  422331:	mov    esi,0x5ccf3c1e
  422336:	inc    ecx
  422337:	and    ebp,DWORD PTR [eax+0x509b90c4]
  42233d:	popa   
  42233e:	arpl   bp,di
  422340:	inc    eax
  422341:	test   DWORD PTR [edi-0x5b4bd22e],0x2dc3085c
  42234b:	inc    esp
  42234c:	or     al,0xdd
  42234e:	in     eax,dx
  42234f:	imul   edi,DWORD PTR [ecx-0x6],0x599301e7
  422356:	pop    esi
  422357:	or     DWORD PTR [esi+ebp*8-0x80],ecx
  42235b:	xchg   esi,ecx
  42235d:	ficom  WORD PTR [eax+0x7aaa7957]
  422363:	setns  al
  422366:	push   0x75
  422368:	push   ecx
  422369:	jecxz  0x42237c
  42236b:	mov    ?,WORD PTR [ebx+0x63]
  42236e:	xor    eax,0x1fa7719e
  422373:	cli    
  422374:	lods   eax,DWORD PTR ds:[esi]
  422375:	leave  
  422376:	or     esp,DWORD PTR [ecx+0x3239]
  42237c:	fnstsw WORD PTR [edi+ecx*4]
  42237f:	mov    esp,0x7dffbfef
  422384:	add    al,BYTE PTR [ebp+0x7fa38dc1]
  42238a:	fmul   QWORD PTR [ebx+0x19e88]
  422390:	xchg   BYTE PTR [edx],al
  422392:	add    BYTE PTR [eax],al
  422394:	mov    cl,0xc3
  422396:	test   al,0xbf
  422398:	in     eax,0xbd
  42239a:	mov    edx,0x66a52113
  42239f:	mov    ds:0x3e96fb43,eax
  4223a4:	out    dx,eax
  4223a5:	out    0x84,al
  4223a7:	(bad)  
  4223a8:	jnp    0x42241d
  4223aa:	std    
  4223ab:	adc    BYTE PTR [eax-0x4aee9c04],ah
  4223b1:	inc    ebx
  4223b2:	and    cl,BYTE PTR [ebx]
  4223b4:	je     0x4223c3
  4223b6:	sbb    DWORD PTR [eax-0x66ab1492],0xffffff9e
  4223bd:	in     al,dx
  4223be:	in     al,dx
  4223bf:	inc    ebp
  4223c0:	mov    ds:0x9556c9e1,al
  4223c5:	mov    ah,BYTE PTR [ebp-0x1be46792]
  4223cb:	shl    BYTE PTR [eax],0xee
  4223ce:	repz ja 0x4223f5
  4223d1:	mov    BYTE PTR [esi-0x45ebb07a],ah
  4223d7:	mov    ds:0x328b9fd1,al
  4223dc:	int3   
  4223dd:	sub    DWORD PTR [ebx*8-0x3f752df5],0xee388b5
  4223e8:	or     BYTE PTR [eax],ch
  4223ea:	mov    ds:0xadc91c47,eax
  4223ef:	pop    ebp
  4223f0:	icebp  
  4223f1:	(bad)  
  4223f2:	xor    edi,DWORD PTR [eax-0x51]
  4223f5:	pop    ecx
  4223f6:	cmp    eax,0xcf0b6f38
  4223fb:	repz sar BYTE PTR [ebx+0x698d2bc6],1
  422402:	jle    0x422408
  422404:	mov    al,0x77
  422406:	add    BYTE PTR [ebx+0x26],dh
  422409:	int3   
  42240a:	cld    
  42240b:	call   DWORD PTR [eax-0x5c]
  42240e:	retf   
  42240f:	fcomp  DWORD PTR [eax-0x558a029d]
  422415:	pop    edx
  422416:	xchg   DWORD PTR [ebx-0x2],eax
  422419:	dec    edx
  42241a:	mov    ds:0xfcd5448,al
  42241f:	loopne 0x4223ee
  422421:	dec    eax
  422422:	int    0x77
  422424:	sbb    al,0x82
  422426:	sbb    dh,BYTE PTR [ecx+0x26bc04fa]
  42242c:	cmp    al,0x82
  42242e:	cmp    al,0x52
  422430:	pop    edx
  422431:	and    DWORD PTR [edi],0x4d
  422434:	pop    DWORD PTR [edx-0xa99328c]
  42243a:	aas    
  42243b:	fstp   TBYTE PTR [ebp-0x7e]
  42243e:	aad    0xb0
  422440:	jae    0x4223ed
  422442:	dec    ax
  422444:	(bad)  
  422445:	jp     0x422441
  422447:	dec    ebx
  422448:	mov    ds:0x3975c774,al
  42244d:	cwde   
  42244e:	call   0xe6ad0f5e
  422453:	jge    0x4223f8
  422455:	or     BYTE PTR [ebx+eax*4+0x699bc083],ch
  42245c:	aad    0xdd
  42245e:	ficom  WORD PTR [edx+0x65]
  422461:	into   
  422462:	xchg   ecx,eax
  422463:	mov    ds:0x1f0c6e8e,al
  422468:	inc    ecx
  422469:	repnz xor ah,bh
  42246c:	test   al,0x6a
  42246e:	not    BYTE PTR [ebx]
  422470:	inc    ebp
  422471:	stos   BYTE PTR es:[edi],al
  422472:	ror    DWORD PTR [esi+0x1e6ab690],1
  422478:	clc    
  422479:	mov    ebx,0xaf6c5b52
  42247e:	cmp    eax,DWORD PTR [ecx+edx*4]
  422481:	push   esi
  422482:	int3   
  422483:	push   ss
  422484:	mov    ds:0xe40ab85f,eax
  422489:	xchg   BYTE PTR [esi],bh
  42248b:	dec    eax
  42248c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42248d:	mov    edx,0x550d5bca
  422492:	sub    DWORD PTR [eax-0x568288af],0x810e99fa
  42249c:	loopne 0x422431
  42249e:	es cmp eax,0x8d439dab
  4224a4:	xchg   BYTE PTR ds:0x18c05c1e,al
  4224aa:	div    edx
  4224ac:	xor    cl,BYTE PTR [eax+0x16]
  4224af:	sub    BYTE PTR ds:0x4cbe3634,0xb8
  4224b6:	in     al,dx
  4224b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224b8:	xor    dl,BYTE PTR [ebx-0x5f18b05a]
  4224be:	mov    edx,0xa70dda89
  4224c3:	das    
  4224c4:	outs   dx,DWORD PTR ds:[esi]
  4224c5:	mov    eax,0x1a7e0df1
  4224ca:	retf   0x4a83
  4224cd:	adc    al,0x6d
  4224cf:	xor    esp,DWORD PTR [eax+0x7a4f4da3]
  4224d5:	(bad)  
  4224d6:	repnz xor edx,DWORD PTR [ebx]
  4224d9:	cwde   
  4224da:	xchg   edx,eax
  4224db:	xor    ebp,ecx
  4224dd:	(bad)  
  4224de:	imul   ebp,DWORD PTR [esi+0x30],0xffffffc8
  4224e2:	(bad)  
  4224e3:	sbb    eax,0xee31b1d4
  4224e8:	push   esp
  4224e9:	adc    al,0x73
  4224eb:	icebp  
  4224ec:	fwait
  4224ed:	ror    DWORD PTR [edx],1
  4224ef:	loope  0x4224bd
  4224f1:	aas    
  4224f2:	jmp    0xe683:0xc1aa35a3
  4224f9:	test   eax,0x7ce0834b
  4224fe:	pushf  
  4224ff:	xchg   ecx,eax
  422500:	xchg   edi,eax
  422501:	push   esi
  422502:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422504:	cld    
  422505:	sub    eax,0x98b88033
  42250a:	loop   0x422584
  42250c:	sbb    eax,0x99a30856
  422511:	imul   ebp,DWORD PTR [edx-0x75410c21],0xfa5ce3db
  42251b:	lods   eax,DWORD PTR ds:[esi]
  42251c:	and    DWORD PTR [ebx+0x5c],edx
  42251f:	loop   0x4224cb
  422521:	jecxz  0x42257c
  422523:	pop    eax
  422524:	popf   
  422525:	addr16 mov ebp,0xc3d37b7d
  42252b:	jmp    0x4224fe
  42252d:	iret   
  42252e:	call   0x5d79:0xbc7da56d
  422535:	sub    eax,0x21295819
  42253a:	gs pop edx
  42253c:	js     0x4224ed
  42253e:	dec    edi
  42253f:	push   0x16095e4c
  422544:	frstor [edi-0x14]
  422547:	or     DWORD PTR [eax+0xa],0x995fd3d2
  42254e:	xor    DWORD PTR [ebp-0x29],ecx
  422551:	repz pop ecx
  422553:	arpl   dx,si
  422555:	xchg   ecx,eax
  422556:	mov    bl,0x35
  422558:	(bad)  
  422559:	mov    edi,0x52421d9e
  42255e:	rol    BYTE PTR [ebx],0xa
  422561:	mov    ds:0x98372b2,eax
  422566:	leave  
  422567:	xor    BYTE PTR [ebx],al
  422569:	sahf   
  42256a:	cli    
  42256b:	jo     0x422533
  42256d:	pushf  
  42256e:	and    dh,BYTE PTR [ebx-0x67]
  422571:	mov    esi,0x82625e6f
  422576:	xor    DWORD PTR ds:0xc7873a2f,ebp
  42257c:	push   edi
  42257d:	arpl   ax,di
  42257f:	add    dl,BYTE PTR [ebp+0x34b3c6c1]
  422585:	loop   0x422538
  422587:	dec    edi
  422588:	inc    ebp
  422589:	jno    0x4225cb
  42258b:	imul   edx,DWORD PTR [edi+0x608ec411],0x8c75a41a
  422595:	or     eax,0x953f8091
  42259a:	rol    DWORD PTR [edx-0x41],1
  42259d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42259e:	in     eax,dx
  42259f:	popf   
  4225a0:	fdivr  st(3),st
  4225a2:	fimul  WORD PTR [eax]
  4225a4:	sub    DWORD PTR [ebx],0xd3153c32
  4225aa:	ret    
  4225ab:	ins    BYTE PTR es:[edi],dx
  4225ac:	push   ebp
  4225ad:	out    0x1a,eax
  4225af:	pop    eax
  4225b0:	cmp    al,0x7
  4225b2:	mov    al,0xe1
  4225b4:	call   0x76f1db46
  4225b9:	mov    edi,0xca4e3e75
  4225be:	cmp    eax,0xfd6f3fd4
  4225c3:	jne    0x42254a
  4225c5:	mov    edx,0x158d33bb
  4225ca:	jo     0x42256c
  4225cc:	sti    
  4225cd:	stos   DWORD PTR es:[edi],eax
  4225ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225cf:	pop    esp
  4225d0:	(bad)  
  4225d1:	cs aaa 
  4225d3:	neg    BYTE PTR [edi+0x79]
  4225d6:	aam    0x30
  4225d8:	jb     0x4225d0
  4225da:	xchg   DWORD PTR [ecx],edi
  4225dc:	div    DWORD PTR [edx+0x20]
  4225df:	sbb    ebx,DWORD PTR [eax-0x5760c62e]
  4225e5:	xchg   edx,eax
  4225e6:	mov    esp,0xa1142d92
  4225eb:	lods   eax,DWORD PTR ds:[esi]
  4225ec:	fnstsw WORD PTR ss:[ebp-0x7a32bcfd]
  4225f3:	mov    edx,0x14713da
  4225f8:	jb     0x42263e
  4225fa:	lds    esi,FWORD PTR [ebx]
  4225fc:	and    DWORD PTR [edx],edi
  4225fe:	popf   
  4225ff:	mov    ss,ebp
  422601:	mov    ds:0x611bd3e4,al
  422606:	push   esp
  422607:	or     eax,0xb249795d
  42260c:	pop    esi
  42260d:	or     DWORD PTR [ecx-0x461f287d],edi
  422613:	xor    BYTE PTR [ebx+esi*8],dh
  422616:	scas   al,BYTE PTR es:[edi]
  422617:	mov    eax,ds:0x9710
  42261c:	mov    dh,0xdf
  42261e:	fwait
  42261f:	add    bh,bl
  422621:	inc    esi
  422622:	mov    edi,0x5e25f0ff
  422627:	and    eax,0xce74e50b
  42262c:	push   cs
  42262d:	mov    eax,ds:0x2860001
  422632:	add    BYTE PTR [eax],al
  422634:	and    DWORD PTR [ebp-0x80],edi
  422637:	cli    
  422638:	das    
  422639:	dec    edi
  42263a:	mov    cl,0xba
  42263c:	jmp    0xf774:0x293bd8e6
  422643:	inc    esi
  422644:	jmp    0x145b:0x78273035
  42264b:	mov    ebp,0x1b430e71
  422650:	cdq    
  422651:	test   eax,0xbd5af1c2
  422656:	int3   
  422657:	add    DWORD PTR [edx+0x7d],ebx
  42265a:	add    eax,0x99d42c51
  42265f:	or     eax,0x5408eb40
  422664:	imul   ebx,DWORD PTR [ebp+0x21],0xffffffdb
  422668:	sbb    BYTE PTR [ecx+0x70d056b9],cl
  42266e:	aad    0xeb
  422670:	add    BYTE PTR [eax+0x1c],bh
  422673:	pminsw mm6,mm7
  422676:	sbb    eax,0xcde627ff
  42267b:	or     bh,BYTE PTR [esi]
  42267d:	lock mov dh,0x21
  422680:	cld    
  422681:	sbb    eax,0x9ed8b7a3
  422686:	fisttp QWORD PTR [ebx+esi*8]
  422689:	push   ebx
  42268a:	pop    es
  42268b:	inc    eax
  42268c:	sbb    ebp,edx
  42268e:	leave  
  42268f:	adc    al,0x60
  422691:	sub    ebp,eax
  422693:	adc    ecx,ebp
  422695:	add    DWORD PTR [ebx],0x2ea4d337
  42269b:	repz push DWORD PTR [edx]
  42269e:	mov    al,ds:0x815dbf50
  4226a3:	jno    0x4226a3
  4226a5:	xor    cl,BYTE PTR [edx+0x7febe416]
  4226ab:	xchg   edx,eax
  4226ac:	out    dx,al
  4226ad:	sub    DWORD PTR [edx-0x18],esi
  4226b0:	ds pop edi
  4226b2:	aad    0x47
  4226b4:	adc    dh,BYTE PTR [edx+0x68]
  4226b7:	jb     0x42270b
  4226b9:	push   es
  4226ba:	js     0x42265c
  4226bc:	dec    ecx
  4226bd:	loop   0x4226e1
  4226bf:	jle    0x42268c
  4226c1:	push   0xfffffff5
  4226c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226c4:	mov    cl,0x1c
  4226c6:	pop    ebx
  4226c7:	loopne 0x42265b
  4226c9:	adc    eax,0x6e926abf
  4226ce:	shl    DWORD PTR [ecx+ebx*4-0x3c],0x82
  4226d3:	pop    ebx
  4226d4:	leave  
  4226d5:	mov    dh,0x31
  4226d7:	dec    ecx
  4226d8:	push   esp
  4226d9:	jge    0x4226b4
  4226db:	inc    eax
  4226dc:	xchg   ecx,eax
  4226dd:	or     al,0x7f
  4226df:	mov    al,ds:0x42a2bc85
  4226e4:	fst    QWORD PTR [esi+0x19]
  4226e7:	mov    cl,0x1e
  4226e9:	int3   
  4226ea:	jle    0x4226f4
  4226ec:	xchg   ebp,eax
  4226ed:	les    edi,FWORD PTR [esi+0xb]
  4226f0:	push   ss
  4226f1:	mov    bh,0xec
  4226f3:	pop    ds
  4226f4:	call   0x5e56423f
  4226f9:	and    al,0x4
  4226fb:	(bad)  
  4226fc:	mov    al,0xed
  4226fe:	dec    ebp
  4226ff:	ret    0x9b58
  422702:	loopne 0x4226cd
  422704:	in     al,dx
  422705:	into   
  422706:	push   eax
  422707:	dec    eax
  422708:	or     DWORD PTR [esi],0x7ea5bc8c
  42270e:	scas   eax,DWORD PTR es:[edi]
  42270f:	add    DWORD PTR ss:[edx+0x7787f4fe],ebx
  422716:	inc    edx
  422717:	or     BYTE PTR ds:[ebp+ebp*4-0xc],al
  42271c:	aam    0xa2
  42271e:	(bad)  
  42271f:	jl     0x4226b1
  422721:	xor    BYTE PTR ds:0x10ef6ca2,bl
  422727:	jo     0x4226f7
  422729:	lods   eax,DWORD PTR ds:[esi]
  42272a:	stos   DWORD PTR es:[edi],eax
  42272b:	aaa    
  42272c:	les    ebp,FWORD PTR [eax-0x70]
  42272f:	mov    WORD PTR [ebx],ds
  422731:	push   edx
  422732:	in     al,0x4
  422734:	pop    esp
  422735:	add    al,0x8b
  422737:	pop    edx
  422738:	call   0x8d899d4f
  42273d:	out    0xb,eax
  42273f:	out    dx,al
  422740:	and    BYTE PTR [ecx],bl
  422742:	or     DWORD PTR [edi+0x4e6d442b],ebp
  422748:	mov    dh,0x84
  42274a:	pusha  
  42274b:	test   DWORD PTR [ebp-0x36],esp
  42274e:	data16 fucomip st,st(6)
  422751:	add    al,0xa6
  422753:	scas   al,BYTE PTR es:[edi]
  422754:	(bad)  
  422755:	mov    ah,0x3
  422757:	(bad)
  42275a:	sub    eax,DWORD PTR [esi]
  42275c:	outs   dx,BYTE PTR fs:[esi]
  42275e:	jmp    0x56a4:0xcc39dc69
  422765:	dec    esp
  422766:	fwait
  422767:	sub    al,0xe6
  422769:	cmc    
  42276a:	or     eax,0x60826543
  42276f:	in     al,0xc3
  422771:	add    DWORD PTR [edi],ecx
  422773:	pop    ebx
  422774:	data16 loope 0x4227c2
  422777:	jnp    0x4227bc
  422779:	mov    ah,0xfe
  42277b:	xchg   edi,eax
  42277c:	push   cs
  42277d:	mov    dl,0x55
  42277f:	fs mov ebx,0xc9945c4f
  422785:	cmp    esi,DWORD PTR fs:[edx+0x50]
  422789:	fldenv [edx-0x4e1a3a97]
  42278f:	ja     0x4227d4
  422791:	xchg   ebp,eax
  422792:	push   ss
  422793:	pop    ebp
  422794:	add    DWORD PTR [edx+ebp*4],edi
  422797:	ja     0x4227ba
  422799:	jp     0x422787
  42279b:	daa    
  42279c:	call   0x73bc:0xfb62977f
  4227a3:	xor    ch,BYTE PTR [eax-0xb479831]
  4227a9:	mov    ecx,0xb6ede07d
  4227ae:	push   0xe97a45d7
  4227b3:	(bad)
  4227b6:	pop    esp
  4227b7:	jle    0x422782
  4227b9:	int3   
  4227ba:	inc    edi
  4227bb:	dec    ebx
  4227bc:	inc    ebp
  4227bd:	mov    ebp,ebx
  4227bf:	jmp    0x3089:0x7ac7d582
  4227c6:	cmp    esp,esi
  4227c8:	sbb    eax,0xbe93fc71
  4227cd:	xor    bl,ch
  4227cf:	loope  0x4227b6
  4227d1:	ror    BYTE PTR [eax+ebx*8],1
  4227d4:	js     0x42279f
  4227d6:	sbb    ah,al
  4227d8:	ins    BYTE PTR es:[edi],dx
  4227d9:	es test al,0x1c
  4227dc:	mov    edx,0x6442ab9b
  4227e1:	jbe    0x4227ac
  4227e3:	cmp    eax,0x78ddaaec
  4227e8:	jp     0x4227b9
  4227ea:	es ja  0x4227c2
  4227ed:	jl     0x42285c
  4227ef:	jge    0x4227c3
  4227f1:	aam    0xad
  4227f3:	and    ecx,DWORD PTR [edi-0x7b]
  4227f6:	test   DWORD PTR [ebp+0x2888405b],0x8d980288
  422800:	repz jge 0x4227a4
  422803:	scas   al,BYTE PTR es:[edi]
  422804:	stos   BYTE PTR es:[edi],al
  422805:	(bad)  [ebx+0x53]
  422808:	and    DWORD PTR [ecx+0x40],ebp
  42280b:	sub    DWORD PTR [esi+0xc],0x8
  42280f:	jne    0x42284d
  422811:	clc    
  422812:	cmc    
  422813:	test   ecx,esp
  422815:	pop    ebx
  422816:	sbb    DWORD PTR [edx],esp
  422818:	(bad)  
  42281a:	inc    ecx
  42281b:	icebp  
  42281c:	mov    eax,ds:0x14ce6e47
  422821:	dec    edx
  422822:	cmp    ah,cl
  422824:	sbb    dh,BYTE PTR [ebp+0x36487230]
  42282a:	fsub   DWORD PTR [esi]
  42282c:	sub    bh,BYTE PTR [eax-0x5fb99471]
  422832:	rcr    DWORD PTR [edi+esi*8-0x789287a8],1
  422839:	std    
  42283a:	xchg   esp,eax
  42283b:	adc    BYTE PTR [edx],dh
  42283d:	xchg   ecx,eax
  42283e:	xchg   ebx,eax
  42283f:	pop    edi
  422840:	(bad)  
  422841:	and    BYTE PTR [esi+0x61d3c982],0x8a
  422848:	out    0x58,eax
  42284a:	pop    esp
  42284b:	push   ss
  42284c:	push   0x4f2b7c90
  422851:	add    esp,edx
  422853:	sub    eax,0xe1863cd5
  422858:	bound  esi,QWORD PTR [edi-0x60]
  42285b:	push   0x9aeb891
  422860:	push   cs
  422861:	(bad)  
  422862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422863:	sub    al,0xab
  422865:	setns  BYTE PTR [edx]
  422868:	fs loop 0x4228e6
  42286b:	push   0x1c
  42286d:	div    BYTE PTR ds:0xc3dde72b
  422873:	and    bl,bh
  422875:	sub    esi,ecx
  422877:	aad    0x56
  422879:	ret    0xe4d6
  42287c:	adc    BYTE PTR [edx],ah
  42287e:	add    edi,DWORD PTR [edx-0x4c9d98ad]
  422884:	ins    DWORD PTR es:[edi],dx
  422885:	pop    ecx
  422886:	ficomp WORD PTR [ebx+0x39]
  422889:	retf   0xc509
  42288c:	scas   al,BYTE PTR es:[edi]
  42288d:	jns    0x4228a6
  42288f:	jmp    ecx
  422891:	in     eax,0xe3
  422893:	shl    ecx,0x25
  422896:	inc    edi
  422897:	lods   al,BYTE PTR ds:[esi]
  422898:	cs mov al,0xa2
  42289b:	cwde   
  42289c:	mov    al,0x32
  42289e:	mov    edx,0x4fc5ce46
  4228a3:	jnp    0x42284e
  4228a5:	xor    eax,0xd2c22562
  4228aa:	arpl   WORD PTR [edi],bx
  4228ac:	outs   dx,BYTE PTR ds:[esi]
  4228ad:	mov    eax,ds:0x967b15d3
  4228b2:	sub    DWORD PTR [ecx-0x65efecc1],eax
  4228b8:	adc    eax,0xf8000008
  4228bd:	mov    ah,0x7f
  4228bf:	cmp    eax,0xf5faff7f
  4228c4:	jle    0x4228c8
  4228c6:	xor    eax,DWORD PTR [esi+0x73]
  4228c9:	inc    esp
  4228ca:	dec    esi
  4228cb:	adc    edx,DWORD PTR [ebx+eiz*4+0x2860001]
  4228d2:	add    BYTE PTR [eax],al
  4228d4:	leave  
  4228d5:	mov    ch,0xe6
  4228d7:	cs cli 
  4228d9:	add    ch,BYTE PTR [ecx-0x3f]
  4228dc:	retf   
  4228dd:	in     eax,dx
  4228de:	mov    esi,0x4d3b0284
  4228e3:	add    DWORD PTR [ebx+edi*2-0x2605d321],0x21
  4228eb:	rol    BYTE PTR [ecx],0xed
  4228ee:	or     DWORD PTR [edi+0x718b7496],ecx
  4228f4:	push   es
  4228f5:	iret   
  4228f6:	push   ecx
  4228f7:	sbb    esp,ecx
  4228f9:	ja     0x422898
  4228fb:	push   edi
  4228fc:	pop    eax
  4228fd:	adc    eax,0x118fafa
  422902:	sar    BYTE PTR [ebp-0x4495a78a],cl
  422908:	adc    bl,bh
  42290a:	jge    0x4228b1
  42290c:	jno    0x42290e
  42290e:	push   esi
  42290f:	repz sahf 
  422911:	push   es
  422912:	xor    ah,BYTE PTR [esi-0x42]
  422915:	scas   al,BYTE PTR es:[edi]
  422916:	cmc    
  422917:	into   
  422918:	dec    esi
  422919:	aam    0x70
  42291b:	fsubp  st(5),st
  42291d:	ja     0x422932
  42291f:	sbb    DWORD PTR [ebx-0x72],eax
  422922:	sub    bl,BYTE PTR [eax-0x143f5da3]
  422928:	lods   eax,DWORD PTR ds:[esi]
  422929:	pushf  
  42292a:	push   esp
  42292b:	stc    
  42292c:	sti    
  42292d:	call   0xb3a66eca
  422932:	popa   
  422933:	jne    0x422996
  422935:	call   0x2751b193
  42293a:	xor    BYTE PTR [edi-0x45140340],0x62
  422941:	push   DWORD PTR [eax]
  422943:	adc    al,0x92
  422945:	repz mov eax,ds:0xfe75cc6f
  42294b:	aad    0xc2
  42294d:	or     eax,0xbd271ba7
  422952:	jmp    0x9126afc1
  422957:	cmp    DWORD PTR [ebp+0x443da5b8],ebp
  42295d:	out    dx,eax
  42295e:	jecxz  0x4229df
  422960:	pop    ebp
  422961:	xchg   edx,eax
  422962:	add    eax,0xdf82c84d
  422967:	sub    DWORD PTR [edx],esp
  422969:	inc    edx
  42296a:	inc    esi
  42296b:	ret    
  42296c:	jl     0x422998
  42296e:	or     eax,0xbada9cbb
  422973:	xor    eax,0x58a24491
  422978:	shl    DWORD PTR [ebp+0x3b],0xc0
  42297c:	nop
  42297d:	jmp    0x9a6a:0xc0cbebb1
  422984:	adc    eax,0x6ef3dac3
  422989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42298a:	fdiv   QWORD PTR [ebp-0xb]
  42298d:	mov    ebx,0x4e01b3f4
  422992:	mov    edi,0x5a3514b9
  422997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422998:	pop    ebx
  422999:	(bad)  
  42299a:	fsub   st,st(0)
  42299c:	js     0x422a18
  42299e:	add    al,0xa0
  4229a0:	int    0xcb
  4229a2:	rcr    DWORD PTR [ebp+0x39],0x81
  4229a6:	out    0x8b,al
  4229a8:	jae    0x422a0a
  4229aa:	repz (bad) 
  4229ac:	fmul   DWORD PTR [esi]
  4229ae:	jb     0x4229f8
  4229b0:	fwait
  4229b1:	cmp    edx,DWORD PTR ds:0xbdcd4f5d
  4229b7:	mov    esp,0x11f1b3cc
  4229bc:	daa    
  4229bd:	xchg   DWORD PTR [eax+0x1a],ecx
  4229c0:	test   al,0xb5
  4229c2:	push   ecx
  4229c3:	inc    DWORD PTR [edx]
  4229c5:	sbb    BYTE PTR [ebx],ch
  4229c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229c8:	in     al,dx
  4229c9:	ret    0x8231
  4229cc:	xor    ah,bl
  4229ce:	adc    BYTE PTR [eax-0x302d750f],ch
  4229d4:	jg     0x422a42
  4229d6:	jbe    0x4229cd
  4229d8:	ror    ebx,1
  4229da:	push   DWORD PTR [edx]
  4229dc:	test   ax,0xde70
  4229e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229e1:	fs inc ecx
  4229e3:	repz pusha 
  4229e5:	fistp  DWORD PTR [ecx-0x73848e9c]
  4229eb:	or     DWORD PTR [edx+0x5136119b],0x41
  4229f2:	adc    ebx,DWORD PTR [esp+edx*8-0x42172d41]
  4229f9:	pop    ds
  4229fa:	xchg   edx,edi
  4229fc:	inc    ebx
  4229fd:	mov    bl,0x67
  4229ff:	sti    
  422a00:	add    eax,0x2601af39
  422a05:	bound  ecx,QWORD PTR [edi+0x6a]
  422a08:	fadd   QWORD PTR [ecx]
  422a0a:	mov    al,0x7a
  422a0c:	add    eax,0xb68beddb
  422a11:	ret    0xcf8b
  422a14:	pop    edi
  422a15:	call   0xda70b544
  422a1a:	test   al,0x24
  422a1c:	jg     0x422a57
  422a1e:	inc    edx
  422a1f:	sbb    eax,0x8d1b5b65
  422a24:	call   0x9ae0d5ed
  422a29:	mov    ebp,0x29fe354f
  422a2e:	sar    dl,cl
  422a30:	xor    BYTE PTR ds:0x822c15cb,dh
  422a36:	idiv   BYTE PTR [eax+0x7b]
  422a39:	mov    WORD PTR [ebp+0x3],?
  422a3c:	jmp    DWORD PTR [edi+0x60f562f5]
  422a42:	cmc    
  422a43:	ret    0xbef9
  422a46:	int3   
  422a47:	mov    DWORD PTR [esi+edi*8-0x8],edx
  422a4b:	cs adc eax,0x75b37842
  422a51:	mov    BYTE PTR [ebx*4-0x55b9a345],al
  422a58:	outs   dx,BYTE PTR ds:[esi]
  422a59:	or     DWORD PTR [edi+eiz*4],0xca89a6e5
  422a60:	fisttp QWORD PTR [ecx-0x63]
  422a63:	push   edx
  422a64:	jp     0x4229fe
  422a66:	mov    WORD PTR [eax+0x48df6dcf],cs
  422a6c:	js     0x422a3d
  422a6e:	xchg   ebx,eax
  422a6f:	out    0x40,al
  422a71:	xchg   esp,ebp
  422a73:	jp     0x422aa5
  422a75:	jg     0x422a37
  422a77:	pop    eax
  422a78:	xor    bl,BYTE PTR [ebx+0xde90084]
  422a7e:	std    
  422a7f:	(bad)  
  422a80:	ds xchg ebx,eax
  422a82:	xor    edx,DWORD PTR [ebx+0x4c9b69ed]
  422a88:	add    eax,0xd9f16f9e
  422a8d:	jle    0x422add
  422a8f:	pop    es
  422a90:	dec    ebx
  422a91:	mov    fs,WORD PTR [esi-0x8]
  422a94:	jg     0x422a4d
  422a96:	arpl   WORD PTR [ebp+0x720a3025],si
  422a9c:	cmp    eax,0x5d22d09f
  422aa1:	arpl   WORD PTR [ebx],cx
  422aa3:	push   0xffffffe4
  422aa5:	mov    cl,0x9f
  422aa7:	lock and DWORD PTR [edi],eax
  422aaa:	ret    0x4105
  422aad:	xchg   esi,eax
  422aae:	ret    0x50b9
  422ab1:	mov    al,0x53
  422ab3:	mov    cl,0x40
  422ab5:	arpl   WORD PTR [ecx+0xdc7672],dx
  422abb:	inc    ecx
  422abc:	dec    esp
  422abd:	imul   ebp,DWORD PTR [esi],0xa82deb1b
  422ac3:	push   0x75d56f3b
  422ac8:	cmp    bh,ah
  422aca:	lahf   
  422acb:	gs in  al,0x21
  422ace:	call   0xb6680240
  422ad3:	dec    ecx
  422ad5:	adc    dl,BYTE PTR [ebx-0x61]
  422ad8:	push   ds
  422ad9:	pop    ebp
  422ada:	in     al,dx
  422adb:	push   eax
  422adc:	ret    0xef8a
  422adf:	push   edx
  422ae0:	test   eax,0x7e63e8d5
  422ae5:	fcmovu st,st(2)
  422ae7:	mov    eax,ds:0xbdeae9e
  422aec:	mov    bl,0x22
  422aee:	int    0xd9
  422af0:	mov    ebp,0x16b158ad
  422af5:	push   ebp
  422af6:	fwait
  422af7:	pop    ebp
  422af8:	rdpmc  
  422afa:	pop    ss
  422afb:	mov    ds:0xf7421727,al
  422b00:	es hlt 
  422b02:	adc    esp,DWORD PTR [eax+0x2b]
  422b05:	jmp    0x58b1:0xe0eee9f2
  422b0c:	xchg   ecx,eax
  422b0d:	mov    ch,0xfe
  422b0f:	(bad)  
  422b10:	into   
  422b11:	rcl    DWORD PTR [ebx],cl
  422b13:	fadd   DWORD PTR [edx]
  422b15:	mov    bl,0xb0
  422b17:	dec    edi
  422b18:	popf   
  422b19:	xor    al,0x25
  422b1b:	mov    ?,WORD PTR [eax+0x20]
  422b1e:	mov    bl,ah
  422b20:	xchg   BYTE PTR [ecx+0x7c136d34],al
  422b26:	ret    
  422b27:	aam    0xfb
  422b29:	shl    ah,cl
  422b2b:	int    0xfa
  422b2d:	mov    WORD PTR [ebp-0x672fd51b],?
  422b33:	mov    eax,0xbaa7d532
  422b38:	jne    0x422b34
  422b3a:	jecxz  0x422b5d
  422b3c:	and    si,ax
  422b3f:	inc    ebp
  422b40:	das    
  422b41:	mov    bh,0x60
  422b43:	in     al,0x8f
  422b45:	xchg   edx,ecx
  422b47:	(bad)  
  422b48:	jle    0x422b40
  422b4a:	push   0x6a
  422b4c:	cmp    DWORD PTR ds:0xa8c52978,esi
  422b52:	adc    esp,DWORD PTR [ecx+0x2b]
  422b55:	push   esp
  422b56:	icebp  
  422b57:	imul   ax,sp,0x0
  422b5c:	cmp    DWORD PTR [ecx+ecx*4],ebx
  422b5f:	out    0xad,eax
  422b61:	idiv   DWORD PTR [edi-0x22]
  422b64:	mov    DWORD PTR [edx+0x79],ebp
  422b67:	sbb    DWORD PTR [ebx+0x1b],0xa61ac631
  422b6e:	add    DWORD PTR [eax],eax
  422b70:	xchg   BYTE PTR [edx],al
  422b72:	add    BYTE PTR [eax],al
  422b74:	xchg   ebx,eax
  422b75:	clc    
  422b76:	mov    edi,edx
  422b78:	mov    dh,0xea
  422b7a:	call   0x9b7b7cda
  422b7f:	inc    ecx
  422b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b81:	out    0x55,eax
  422b83:	and    BYTE PTR [edi-0x45faf116],bh
  422b89:	stc    
  422b8a:	push   ebp
  422b8b:	mov    fs,WORD PTR [edx]
  422b8d:	cmp    al,0xd5
  422b8f:	or     dl,BYTE PTR [ecx-0x365f0ad9]
  422b95:	jnp    0x422bdc
  422b97:	(bad)  
  422b99:	rol    DWORD PTR [edx+0x3cc5793f],0xa0
  422ba0:	loop   0x422ba0
  422ba2:	mov    eax,0x9280f017
  422ba7:	call   FWORD PTR [esi]
  422ba9:	push   edx
  422baa:	cmp    eax,0x566bc97c
  422baf:	xor    cl,BYTE PTR [edx-0x4b]
  422bb2:	loope  0x422b7b
  422bb4:	stos   BYTE PTR es:[edi],al
  422bb5:	xor    ax,0xf902
  422bb9:	mov    ebx,0xc952ea9d
  422bbe:	lahf   
  422bbf:	lods   al,BYTE PTR ds:[esi]
  422bc0:	fldcw  WORD PTR [edi+0x59]
  422bc3:	xchg   esi,eax
  422bc4:	outs   dx,DWORD PTR ds:[esi]
  422bc5:	jle    0x422be1
  422bc7:	pop    ebp
  422bc8:	clc    
  422bc9:	cmp    BYTE PTR [esi+0x2cc014e8],0xdd
  422bd0:	pop    ebx
  422bd1:	pop    esp
  422bd2:	adc    al,BYTE PTR [edi+0x2c]
  422bd5:	jae    0x422c2e
  422bd7:	xor    ah,BYTE PTR [esi+0x5c]
  422bda:	repnz pusha 
  422bdc:	pop    edx
  422bdd:	in     al,0xbe
  422bdf:	cdq    
  422be0:	dec    ecx
  422be1:	not    DWORD PTR ds:0x3ef9a00b
  422be8:	dec    esi
  422be9:	rcl    dl,1
  422beb:	data16 sti 
  422bed:	cdq    
  422bee:	sub    al,0x9e
  422bf0:	mul    DWORD PTR [edx]
  422bf2:	popf   
  422bf3:	lods   eax,DWORD PTR ds:[esi]
  422bf4:	js     0x422b89
  422bf6:	nop
  422bf7:	lahf   
  422bf8:	ss ds mov eax,0x9fb4c4d3
  422bff:	mov    cl,0x66
  422c01:	inc    ebx
  422c02:	outs   dx,DWORD PTR ds:[esi]
  422c03:	pop    ebx
  422c04:	mov    al,ds:0xe1ff693a
  422c09:	dec    ecx
  422c0a:	mov    ecx,0x316d9fb3
  422c0f:	mov    edx,0xcbcec34c
  422c14:	(bad)  
  422c15:	and    DWORD PTR [ebx+eiz*8],ebx
  422c18:	mov    edi,0x317c1cdc
  422c1d:	mov    bl,0x4f
  422c1f:	mov    eax,ds:0x435161fc
  422c24:	rcl    BYTE PTR [eax],0x35
  422c27:	mov    ds:0xb9c0c916,al
  422c2c:	les    edi,FWORD PTR [ecx+eiz*8-0x53765818]
  422c33:	pop    eax
  422c34:	sub    BYTE PTR [ebp+0x76],cl
  422c37:	dec    esp
  422c38:	and    ah,BYTE PTR [edi-0x3a1ee3f4]
  422c3e:	(bad)
  422c41:	pop    ecx
  422c42:	jecxz  0x422c71
  422c44:	je     0x422cbc
  422c46:	sub    eax,0x115ab620
  422c4b:	loopne 0x422ccb
  422c4d:	stos   BYTE PTR es:[edi],al
  422c4e:	es push ebx
  422c50:	stos   DWORD PTR es:[edi],eax
  422c51:	aaa    
  422c52:	or     DWORD PTR [ebx+0x1e9e4fc0],ebp
  422c58:	inc    ebx
  422c59:	pop    esi
  422c5a:	stos   BYTE PTR es:[edi],al
  422c5b:	arpl   WORD PTR [edi-0x6b],bp
  422c5e:	mov    ebx,0x7c7cb4cd
  422c63:	bound  ebx,QWORD PTR [edx-0x7e700662]
  422c69:	bound  esi,QWORD PTR [ebp+0x20a1f093]
  422c6f:	popf   
  422c70:	xor    dl,cl
  422c72:	sti    
  422c73:	out    dx,eax
  422c74:	stos   BYTE PTR es:[edi],al
  422c75:	nop
  422c76:	xchg   edi,eax
  422c77:	push   ecx
  422c78:	pop    ebp
  422c79:	pop    edi
  422c7a:	inc    eax
  422c7b:	and    ch,cl
  422c7d:	dec    ebp
  422c7e:	cmp    eax,0x673498f2
  422c83:	arpl   WORD PTR [ebx+0x25a7d0af],di
  422c89:	and    esp,0x34a4e022
  422c8f:	ficomp WORD PTR [eax-0x5a]
  422c92:	adc    DWORD PTR [esi+ecx*4+0x63c75778],edi
  422c99:	ficomp WORD PTR [ebx]
  422c9b:	push   cs
  422c9c:	dec    edx
  422c9d:	sbb    al,0x3
  422c9f:	or     al,0xbd
  422ca1:	out    dx,al
  422ca2:	outs   dx,DWORD PTR ds:[esi]
  422ca3:	ror    esi,1
  422ca5:	jns    0x422c55
  422ca7:	bound  edi,QWORD PTR [ebx-0x5b96384e]
  422cad:	ins    DWORD PTR es:[edi],dx
  422cae:	ins    BYTE PTR es:[edi],dx
  422caf:	stos   BYTE PTR es:[edi],al
  422cb0:	aam    0x3c
  422cb2:	repnz lea ebx,[esi+0x4a]
  422cb6:	or     al,0x9c
  422cb8:	ds xchg esi,eax
  422cba:	(bad)  
  422cbb:	and    dl,BYTE PTR [esi+0x3086292b]
  422cc1:	outs   dx,DWORD PTR ds:[esi]
  422cc2:	clc    
  422cc3:	and    esp,DWORD PTR [eax+0x4a]
  422cc6:	fwait
  422cc7:	xor    ecx,ebx
  422cc9:	push   ss
  422cca:	loopne 0x422cc9
  422ccc:	(bad)  
  422ccd:	pop    edi
  422cce:	sahf   
  422ccf:	ins    DWORD PTR es:[edi],dx
  422cd0:	addr16 sbb ebp,0x41
  422cd4:	jecxz  0x422d47
  422cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cd7:	pushf  
  422cd8:	mov    ds:0x8ee62971,al
  422cdd:	add    edi,edi
  422cdf:	push   ecx
  422ce0:	(bad)  
  422ce1:	push   0x35817a1a
  422ce6:	xchg   edi,eax
  422ce7:	pop    eax
  422ce8:	enter  0x8151,0xf9
  422cec:	lea    ebp,[ecx]
  422cee:	ja     0x422cc1
  422cf0:	pop    ss
  422cf1:	push   esp
  422cf2:	jns    0x422ca1
  422cf4:	push   cs
  422cf5:	imul   ecx,esi,0x1a483315
  422cfb:	jno    0x422d7a
  422cfd:	pop    edx
  422cfe:	xchg   edx,eax
  422cff:	jecxz  0x422d30
  422d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d02:	lea    ecx,[eax+0x4abaf42b]
  422d08:	mov    BYTE PTR [ebp+0x11],bh
  422d0b:	cmp    cl,bh
  422d0d:	test   al,0xe6
  422d0f:	test   BYTE PTR [eax+0x75cff744],al
  422d15:	sub    BYTE PTR [ecx-0x66],dl
  422d18:	out    0xe2,al
  422d1a:	xchg   esp,eax
  422d1b:	xchg   esp,eax
  422d1c:	push   es
  422d1d:	jmp    0x8fd38f21
  422d22:	sbb    bl,BYTE PTR [esp+esi*2+0x50853b5b]
  422d29:	sub    al,0x8e
  422d2b:	xor    ebx,edx
  422d2d:	sbb    DWORD PTR [edi-0x69],eax
  422d30:	std    
  422d31:	ja     0x422d52
  422d33:	mov    ds:0x2de7a970,al
  422d38:	adc    cl,0xce
  422d3b:	sub    ebp,ebp
  422d3d:	test   BYTE PTR [eax+0xe],bl
  422d40:	cmp    cl,bh
  422d42:	sub    ebx,DWORD PTR [esi]
  422d44:	dec    eax
  422d45:	push   ds
  422d46:	push   0xffffffe3
  422d48:	ret    0xa2fa
  422d4b:	fs mov bl,0x7
  422d4e:	out    dx,eax
  422d4f:	cmp    DWORD PTR [esi-0x64],ebp
  422d52:	out    dx,eax
  422d53:	leave  
  422d54:	jmp    0x889f:0xcdbc6402
  422d5b:	(bad)  
  422d5c:	push   cs
  422d5d:	(bad)  
  422d5e:	dec    bp
  422d60:	cmp    BYTE PTR [edi+0x2],bl
  422d63:	pusha  
  422d64:	ret    0xaa1f
  422d67:	inc    ebp
  422d68:	dec    esp
  422d69:	in     eax,0x9e
  422d6b:	mov    ecx,0xc1771d4f
  422d70:	adc    bh,ch
  422d72:	outs   dx,DWORD PTR ds:[esi]
  422d73:	sbb    eax,0x611688f2
  422d78:	cmc    
  422d79:	iret   
  422d7a:	add    cl,BYTE PTR [edi+0x2b]
  422d7d:	cdq    
  422d7e:	cld    
  422d7f:	xchg   edx,eax
  422d80:	inc    esi
  422d81:	pop    es
  422d82:	scas   al,BYTE PTR es:[edi]
  422d83:	inc    eax
  422d84:	dec    ebx
  422d85:	rcr    DWORD PTR [eax-0x4],1
  422d88:	frstor [edx]
  422d8a:	mov    al,ds:0x29465259
  422d8f:	mov    edi,0x7bd66d4c
  422d94:	bound  ebx,QWORD PTR [ebx]
  422d96:	jecxz  0x422d7c
  422d98:	out    0xd3,eax
  422d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d9b:	popf   
  422d9c:	cdq    
  422d9d:	loopne 0x422e13
  422d9f:	mov    ah,bl
  422da1:	xchg   edi,eax
  422da2:	repz int 0xa8
  422da5:	rcl    BYTE PTR [edi+0x52],0x4c
  422da9:	jecxz  0x422dfa
  422dab:	sbb    eax,0x1c361339
  422db0:	pop    ebx
  422db1:	arpl   WORD PTR [ecx],bp
  422db3:	jl     0x422dab
  422db5:	fld    QWORD PTR [esi-0x39]
  422db8:	inc    eax
  422db9:	scas   eax,DWORD PTR es:[edi]
  422dba:	sbb    al,0xca
  422dbc:	add    DWORD PTR [edx],ebx
  422dbe:	mov    edx,eax
  422dc0:	mov    cl,0x1d
  422dc2:	mov    ah,0x53
  422dc4:	pop    eax
  422dc5:	adc    ebp,esp
  422dc7:	adc    al,0xc6
  422dc9:	sbb    eax,0xaef82aab
  422dce:	inc    edi
  422dcf:	out    dx,al
  422dd0:	stos   BYTE PTR es:[edi],al
  422dd1:	(bad)  
  422dd2:	push   DWORD PTR [ebp+0x5c587e9f]
  422dd8:	add    eax,0x15e2ee50
  422ddd:	cmp    BYTE PTR [esi+0x78e59888],ch
  422de3:	ret    0x3769
  422de6:	test   BYTE PTR [ecx],dl
  422de8:	adc    ebp,DWORD PTR [edx-0x22]
  422deb:	(bad)  
  422dec:	(bad)  
  422ded:	ds add eax,0x9bce7471
  422df3:	rcl    BYTE PTR [ebx+0x70],1
  422df6:	or     esp,DWORD PTR [esi+0xb43e]
  422dfc:	gs mov ah,0x18
  422dff:	fcompp 
  422e01:	(bad)  
  422e02:	out    0xbf,eax
  422e04:	gs mov ah,0x46
  422e07:	neg    BYTE PTR [ebx+0x7a]
  422e0a:	fst    QWORD PTR [ebx-0x60]
  422e0d:	test   al,0x1
  422e0f:	add    BYTE PTR [esi+0x41000002],al
  422e15:	adc    eax,0x358ce4d4
  422e1a:	cmp    edi,eax
  422e1c:	adc    bh,BYTE PTR [eax+ebx*8+0x7de6bd5]
  422e23:	mov    BYTE PTR [edi+ebx*1-0x3868bc09],cl
  422e2a:	or     ah,BYTE PTR [edi+0x60]
  422e2d:	pop    esi
  422e2e:	xor    al,cl
  422e30:	adc    DWORD PTR ds:0x3b829602,0xffffff8d
  422e37:	add    DWORD PTR [edi-0x18ee5cb4],0xa5200bd6
  422e41:	or     cl,BYTE PTR [ecx+0x54]
  422e44:	stos   DWORD PTR es:[edi],eax
  422e45:	mov    ds:0xd0d3dfa8,eax
  422e4a:	out    dx,eax
  422e4b:	mov    ecx,0x6f6be6d0
  422e50:	ss mov eax,0x475521ab
  422e56:	and    ecx,ecx
  422e58:	rcl    DWORD PTR [edx],cl
  422e5a:	push   ds
  422e5b:	mov    eax,ss:0x886e2bde
  422e61:	mov    BYTE PTR [esi],ch
  422e63:	sahf   
  422e64:	hlt    
  422e65:	pop    eax
  422e66:	and    edi,edi
  422e68:	and    ah,bl
  422e6a:	sbb    al,0x78
  422e6c:	pop    ss
  422e6d:	dec    ebp
  422e6e:	(bad)  
  422e70:	and    DWORD PTR [esi-0x72],ecx
  422e73:	fldlg2 
  422e75:	(bad)  
  422e76:	cdq    
  422e77:	pusha  
  422e78:	clc    
  422e79:	gs xor al,0x70
  422e7c:	push   edx
  422e7d:	gs mov eax,0xed4e0722
  422e83:	sbb    esi,DWORD PTR [edi-0x42]
  422e86:	fsub   DWORD PTR [edx+0x5dc5a387]
  422e8c:	cmp    BYTE PTR [edi],ch
  422e8e:	rol    eax,1
  422e90:	cmp    edi,edx
  422e92:	shl    cl,0x53
  422e95:	sbb    esp,DWORD PTR [ebp+0xfb06c3]
  422e9b:	scas   eax,DWORD PTR es:[edi]
  422e9c:	or     eax,0x37f920c1
  422ea1:	add    al,0xc9
  422ea3:	cmp    eax,0x5cb432aa
  422ea8:	pop    es
  422ea9:	lahf   
  422eaa:	and    al,0xf4
  422eac:	cld    
  422ead:	fisubr WORD PTR [edx]
  422eaf:	enter  0x8cde,0x33
  422eb3:	xchg   BYTE PTR [edi-0x4975a7bc],cl
  422eb9:	adc    al,0xa7
  422ebb:	test   BYTE PTR [esi+0x6f],dl
  422ebe:	inc    edi
  422ebf:	and    eax,0x19a407af
  422ec4:	push   es
  422ec5:	xchg   edx,eax
  422ec6:	jle    0x422ee1
  422ec8:	ds in  eax,0x29
  422ecb:	int3   
  422ecc:	out    0xd1,al
  422ece:	aam    0x23
  422ed0:	nop
  422ed1:	bound  ebx,QWORD PTR [ebp+0x4f]
  422ed4:	mov    cl,0x9e
  422ed6:	ja     0x422f2e
  422ed8:	movzx  eax,BYTE PTR [esi-0x1ba93a39]
  422edf:	fisttp QWORD PTR [esi+edx*4]
  422ee2:	mov    ch,0xe5
  422ee4:	jg     0x422f06
  422ee6:	jnp    0x422e68
  422ee8:	add    DWORD PTR [eax],ebp
  422eea:	test   DWORD PTR [edx],esi
  422eec:	stc    
  422eed:	mov    dl,0xb7
  422eef:	ins    BYTE PTR es:[edi],dx
  422ef0:	push   eax
  422ef1:	mov    edx,0xd304fc46
  422ef6:	iret   
  422ef7:	in     eax,0x84
  422ef9:	(bad)  
  422efa:	mov    al,0x17
  422efc:	nop
  422efd:	mov    dl,ah
  422eff:	popa   
  422f00:	push   0xffffff8e
  422f02:	dec    ecx
  422f03:	(bad)  
  422f04:	aad    0x8c
  422f06:	out    dx,al
  422f07:	test   DWORD PTR [ebp+eiz*4+0xb],edx
  422f0b:	dec    ebx
  422f0c:	mov    ch,bh
  422f0e:	add    bh,BYTE PTR [ebp-0x35df329e]
  422f14:	cmp    al,0x24
  422f16:	mov    esp,0x6456c105
  422f1b:	loop   0x422ede
  422f1d:	push   es
  422f1e:	aas    
  422f1f:	aaa    
  422f20:	sub    bh,BYTE PTR [edi-0x221b72ed]
  422f26:	push   edi
  422f27:	pop    es
  422f28:	rol    DWORD PTR [eax],cl
  422f2a:	add    al,0xe8
  422f2c:	mov    bl,0x95
  422f2e:	int    0xe9
  422f30:	imul   ebp,ebx,0x56b3aa4b
  422f36:	cs cmc 
  422f38:	inc    esp
  422f39:	icebp  
  422f3a:	jp     0x422f62
  422f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f3d:	in     al,0x17
  422f3f:	int3   
  422f40:	inc    esi
  422f41:	jnp    0x422f5e
  422f43:	cmc    
  422f44:	cmp    DWORD PTR [esi-0xfc4c6f4],ebp
  422f4a:	xchg   DWORD PTR [ecx-0x11],edx
  422f4d:	les    esp,FWORD PTR [ecx-0x4c86b8c]
  422f53:	ins    DWORD PTR es:[edi],dx
  422f54:	mov    ecx,0xea1b3532
  422f59:	xchg   ebx,eax
  422f5a:	ret    0xc768
  422f5d:	test   BYTE PTR [ebx+0x3e],bh
  422f60:	ficom  WORD PTR [ecx-0x5]
  422f63:	mov    DWORD PTR [ebp-0x3e],eax
  422f66:	shl    WORD PTR ds:[esi-0x4f],1
  422f6b:	adc    eax,0x72726034
  422f70:	outs   dx,BYTE PTR ds:[esi]
  422f71:	mov    DWORD PTR [ebx-0x37441de8],0x83a61429
  422f7b:	jmp    0x2050471f
  422f80:	ss xchg ebx,edi
  422f83:	in     al,0xb
  422f85:	adc    al,BYTE PTR [edx]
  422f87:	rol    ecx,cl
  422f89:	mov    cl,0x11
  422f8b:	int    0x99
  422f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f8e:	loope  0x422fb5
  422f90:	pop    ds
  422f91:	mov    ebx,0xd145e2e
  422f96:	retf   
  422f97:	ret    
  422f98:	mov    ch,0x71
  422f9a:	outs   dx,DWORD PTR ds:[esi]
  422f9b:	lds    ebx,FWORD PTR [ebp+0x672f919e]
  422fa1:	fwait
  422fa2:	pop    ebx
  422fa3:	adc    al,ch
  422fa5:	mov    DWORD PTR [eax-0x5bcdcff7],ebp
  422fab:	pop    eax
  422fac:	out    dx,eax
  422fad:	xor    al,0x79
  422faf:	test   dl,bl
  422fb1:	pop    esp
  422fb3:	jmp    0xaf5070ff
  422fb8:	pop    ss
  422fb9:	add    esi,ebx
  422fbb:	jno    0x422f7f
  422fbd:	push   ds
  422fbe:	cmp    edi,eax
  422fc0:	mov    bh,0x4b
  422fc2:	neg    esi
  422fc4:	jbe    0x422fd8
  422fc6:	dec    ecx
  422fc7:	(bad)  
  422fc8:	push   edi
  422fc9:	mov    DWORD PTR ss:[edi],edx
  422fcc:	aas    
  422fcd:	and    cl,BYTE PTR [ecx+0x7ef71f8d]
  422fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fd4:	lahf   
  422fd5:	stos   BYTE PTR es:[edi],al
  422fd6:	test   eax,0xb38fbe7e
  422fdb:	mov    ebp,0xe00e6d41
  422fe0:	jge    0x423035
  422fe2:	or     bh,cl
  422fe4:	adc    DWORD PTR [eax-0x680aa415],edx
  422fea:	mov    esp,0x57a59572
  422fef:	cmp    BYTE PTR [ebx+0xcac32aa],ah
  422ff5:	sub    al,BYTE PTR [ebx-0x32ea9ee6]
  422ffb:	mov    DWORD PTR [ebx+0x5db9b091],ebp
  423001:	add    BYTE PTR [edi-0x1754b8f5],bh
  423007:	mov    cl,0x60
  423009:	xor    dh,0x6e
  42300c:	aad    0xd1
  42300e:	fidivr WORD PTR [eax+0x5e]
  423011:	xchg   edi,eax
  423012:	outs   dx,BYTE PTR ds:[esi]
  423013:	mov    eax,0xd5cd83b0
  423018:	adc    DWORD PTR [esi+0x5d],edi
  42301b:	and    edx,eax
  42301d:	sub    al,0xe2
  42301f:	iret   
  423020:	xor    edx,esp
  423022:	mov    edi,0x1069ebf6
  423027:	cmc    
  423028:	adc    eax,0x5f20c437
  42302d:	pop    edx
  42302e:	in     al,0x16
  423030:	dec    ebp
  423031:	gs push ebp
  423033:	scas   eax,DWORD PTR es:[edi]
  423034:	test   al,0xb2
  423036:	adc    bl,BYTE PTR [edx+0x213879ee]
  42303c:	mov    ah,0x7d
  42303e:	data16 test al,0x54
  423041:	cmc    
  423042:	mov    esi,ebp
  423044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423045:	or     eax,0xdb2a018e
  42304a:	jp     0x4230c3
  42304c:	in     eax,dx
  42304d:	or     ah,BYTE PTR [esi-0x39]
  423050:	addr16 enter 0xb997,0x70
  423055:	lock test eax,ebp
  423058:	inc    edx
  423059:	push   ecx
  42305a:	dec    ecx
  42305b:	(bad)  
  42305c:	std    
  42305d:	icebp  
  42305e:	add    DWORD PTR [esi+ecx*8],0x4f
  423062:	push   ss
  423063:	mov    esp,0xa2582f03
  423068:	(bad)  
  423069:	jmp    0xf241:0x87832820
  423070:	and    al,0x5
  423072:	fdivr  DWORD PTR [edx-0x4e]
  423075:	mov    ecx,0x53659809
  42307a:	int3   
  42307b:	jmp    0x6b75:0xcafba438
  423082:	aad    0xe6
  423084:	aaa    
  423085:	inc    esi
  423086:	jmp    0x780b:0xeb1c96ff
  42308d:	inc    edx
  42308e:	push   ds
  42308f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423090:	icebp  
  423091:	out    dx,eax
  423092:	xor    DWORD PTR [ecx+0x2c5ced6f],0x28
  423099:	inc    ecx
  42309a:	add    BYTE PTR [eax],al
  42309c:	adc    bl,al
  42309e:	arpl   WORD PTR [edx-0x15],si
  4230a1:	sti    
  4230a2:	adc    edi,eax
  4230a4:	sub    edi,DWORD PTR [ebx+0x6f9288f7]
  4230aa:	inc    esp
  4230ab:	mov    ds:0x1ab26,eax
  4230b0:	xchg   BYTE PTR [edx],al
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	loopne 0x4230f3
  4230b6:	ret    0x5d5
  4230b9:	add    cl,ah
  4230bb:	xchg   edx,eax
  4230bc:	cli    
  4230bd:	inc    eax
  4230be:	adc    eax,0xdb1055b6
  4230c3:	cmp    eax,0x5f2c984d
  4230c8:	ins    DWORD PTR es:[edi],dx
  4230c9:	in     eax,dx
  4230ca:	mov    al,ds:0x462b84a0
  4230cf:	adc    dh,BYTE PTR [ecx-0x71]
  4230d2:	xchg   BYTE PTR [esi+0x11369540],cl
  4230d8:	xor    BYTE PTR [edi+0x39bbc085],dl
  4230de:	mov    edx,0x48ba71d0
  4230e3:	daa    
  4230e4:	std    
  4230e5:	jg     0x423096
  4230e7:	(bad)  
  4230e8:	sbb    esi,edi
  4230ea:	adc    bl,BYTE PTR ds:0x52321478
  4230f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230f1:	(bad)  
  4230f2:	cmp    cl,BYTE PTR [eax+0x586117f]
  4230f8:	jge    0x423153
  4230fa:	inc    esp
  4230fb:	cmp    DWORD PTR [ecx+esi*1],0xd
  4230ff:	adc    BYTE PTR [esi-0x16],0x9
  423103:	cdq    
  423104:	mov    ebx,ebp
  423106:	mov    edx,0xc2c5f013
  42310b:	inc    eax
  42310c:	pushf  
  42310d:	push   esp
  42310e:	or     al,0x20
  423110:	ret    0xbfad
  423113:	rcr    BYTE PTR [eax],1
  423115:	std    
  423116:	test   eax,0x3a9c4297
  42311b:	xor    dh,BYTE PTR [ecx+0x585db26c]
  423121:	cmp    bh,BYTE PTR ds:0x59345575
  423127:	hlt    
  423128:	inc    ebx
  423129:	cwde   
  42312a:	cwde   
  42312b:	mov    WORD PTR [edx+0x383656a6],ds
  423131:	rcl    BYTE PTR [eax-0x56],cl
  423134:	xchg   edx,eax
  423135:	dec    ebp
  423136:	lahf   
  423137:	mov    WORD PTR [ebx],?
  423139:	or     eax,0x5b18ced3
  42313e:	inc    edx
  42313f:	lea    esp,[edx+0x57]
  423142:	int    0x8d
  423144:	neg    bh
  423146:	and    ebp,eax
  423148:	push   0x40
  42314a:	adc    ch,BYTE PTR [esp+edx*4]
  42314d:	jnp    0x42311d
  42314f:	jmp    0x6837:0xcf0c2ca
  423156:	sbb    BYTE PTR [edi],bl
  423158:	xor    al,0xa9
  42315a:	arpl   WORD PTR [edx+0x5d],dx
  42315d:	scas   eax,DWORD PTR es:[edi]
  42315e:	xor    BYTE PTR [ecx+0x7baa31d4],bl
  423164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423165:	cmp    BYTE PTR [esi+edi*8],ch
  423168:	push   0xffffffae
  42316a:	push   ebp
  42316b:	jmp    0x3f4c:0x11d4fa4
  423172:	mov    BYTE PTR [edi+0x357375a8],ah
  423178:	mov    BYTE PTR [esp+edi*4],dh
  42317b:	ret    
  42317c:	pop    es
  42317d:	les    ecx,FWORD PTR [ecx+ecx*2+0x69]
  423181:	add    eax,0x88f22415
  423186:	ja     0x4231f1
  423188:	inc    edi
  423189:	xlat   BYTE PTR ds:[ebx]
  42318a:	imul   esp,DWORD PTR [eax+0x72d5c700],0x19
  423191:	(bad)  
  423192:	scas   eax,DWORD PTR es:[edi]
  423193:	mov    bl,0x1f
  423195:	iret   
  423196:	gs dec ecx
  423198:	pop    esp
  423199:	xor    eax,0xf2636ead
  42319e:	icebp  
  42319f:	fcomp  st(5)
  4231a1:	gs in  al,0x49
  4231a4:	sbb    DWORD PTR [ecx],edi
  4231a6:	sbb    DWORD PTR [eax+0x669bba68],0xffffffa3
  4231ad:	mov    al,ds:0x7ad8e506
  4231b2:	dec    ebp
  4231b3:	aam    0x4c
  4231b5:	sbb    BYTE PTR [ebx],cl
  4231b7:	mov    ecx,0xaaa2ffbf
  4231bc:	jne    0x423174
  4231be:	xor    edi,edi
  4231c0:	test   DWORD PTR [ebp+0x63],eax
  4231c3:	outs   dx,DWORD PTR ds:[esi]
  4231c4:	inc    esp
  4231c5:	cmp    eax,0xe8fff55f
  4231ca:	cs fmul st,st(0)
  4231cd:	imul   esi,DWORD PTR [ecx-0x1e],0x41de1b29
  4231d4:	xchg   esi,eax
  4231d5:	or     al,0xa5
  4231d7:	sub    al,0xb1
  4231d9:	fwait
  4231da:	pop    ebp
  4231db:	sub    DWORD PTR [ebx],ecx
  4231dd:	push   cs
  4231de:	iret   
  4231df:	xchg   ebx,eax
  4231e0:	mov    gs,WORD PTR [ebx+eiz*4]
  4231e3:	push   edi
  4231e4:	sbb    DWORD PTR [edi-0x68c1c41],0xffffffc6
  4231eb:	or     BYTE PTR [ebx],dh
  4231ed:	cmp    ah,BYTE PTR [edi-0x617a87cf]
  4231f3:	jb     0x423248
  4231f5:	add    al,0x21
  4231f7:	mov    esp,0x4c506bc5
  4231fc:	aas    
  4231fd:	jo     0x42323e
  4231ff:	and    DWORD PTR [edx],eax
  423201:	inc    esp
  423202:	xchg   ebp,eax
  423203:	add    al,0x29
  423205:	cmp    ch,BYTE PTR [edi-0x22]
  423208:	cld    
  423209:	imul   esi,DWORD PTR ds:0x941897a,0x17
  423210:	and    eax,0xcfbf9511
  423215:	(bad)  
  423216:	jmp    FWORD PTR [ebx+ebx*2+0x4d]
  42321a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42321b:	lods   eax,DWORD PTR ds:[esi]
  42321c:	callw  0xcac9
  423220:	jg     0x42321a
  423222:	outs   dx,DWORD PTR ds:[esi]
  423223:	adc    DWORD PTR [edi],0xffffffdf
  423226:	loop   0x42320e
  423228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423229:	or     esp,DWORD PTR [ebp+0x5547ea5a]
  42322f:	ss pop edx
  423231:	push   eax
  423232:	mov    ah,0xae
  423234:	nop
  423235:	rcr    BYTE PTR [ebx+0x265ad5ba],0x2c
  42323c:	inc    esi
  42323d:	pop    eax
  42323e:	inc    ebx
  42323f:	jmp    0xc71b4fa0
  423244:	shl    dl,1
  423246:	pmullw mm6,QWORD PTR [ecx+eiz*4+0x7f1bee1]
  42324e:	pop    ds
  42324f:	div    DWORD PTR [esp+edx*1]
  423252:	frstor [esi]
  423254:	push   0x32
  423256:	ret    0x8b2e
  423259:	fwait
  42325a:	dec    ebp
  42325b:	xchg   edi,eax
  42325c:	inc    eax
  42325d:	jp     0x423251
  42325f:	jns    0x4231fb
  423261:	jmp    0x4232c7
  423263:	xchg   bl,ah
  423265:	loop   0x4232c4
  423267:	sbb    ch,BYTE PTR [esp+esi*4+0x623ada4e]
  42326e:	idiv   edx
  423270:	mov    cl,0xd1
  423272:	jmp    0xa513:0x53ff9e4b
  423279:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42327b:	push   ss
  42327c:	pop    es
  42327d:	push   0x37f0b253
  423282:	mov    ebx,0x5a9a1dfd
  423287:	js     0x42323b
  423289:	adc    BYTE PTR [edi],cl
  42328b:	sti    
  42328c:	adc    BYTE PTR [ecx+edx*2],dl
  42328f:	mov    ch,0x12
  423291:	arpl   di,si
  423293:	mov    eax,ds:0x55b5b494
  423298:	in     al,dx
  423299:	push   ds
  42329a:	push   esp
  42329b:	cmp    DWORD PTR [ecx],edx
  42329d:	leave  
  42329e:	pop    ebp
  42329f:	fwait
  4232a0:	add    DWORD PTR [esp+ecx*2-0x74],ebp
  4232a4:	cmp    esp,DWORD PTR [esi-0x3e80dd05]
  4232aa:	xor    bh,BYTE PTR [ebx+0x175bedce]
  4232b0:	retf   0xb503
  4232b3:	ja     0x42326c
  4232b5:	leave  
  4232b6:	mov    es,WORD PTR [edx+0x4b]
  4232b9:	repz imul edi,DWORD PTR [edi-0x715bb844],0x7857eab3
  4232c4:	scas   eax,DWORD PTR es:[edi]
  4232c5:	jmp    0x49f45eb8
  4232ca:	jno    0x4232cc
  4232cc:	ins    BYTE PTR es:[edi],dx
  4232cd:	pop    ebp
  4232ce:	xor    BYTE PTR [ecx],al
  4232d0:	xlat   BYTE PTR ds:[ebx]
  4232d1:	mov    ds:0xd41976,al
  4232d6:	fcmove st,st(0)
  4232d8:	loope  0x423317
  4232da:	imul   ebx,esp,0xffffff8d
  4232dd:	jae    0x423281
  4232df:	jne    0x423308
  4232e1:	xor    BYTE PTR [edx],ah
  4232e3:	mov    ecx,0xcc88f801
  4232e8:	repnz retf 
  4232ea:	jmp    0xcdbd:0xdf897ec7
  4232f1:	push   es
  4232f2:	sub    edi,esp
  4232f4:	cmp    eax,esp
  4232f6:	lock or DWORD PTR ds:0xe1f928a6,edi
  4232fd:	inc    edi
  4232fe:	jbe    0x4232ed
  423300:	mov    dh,0x15
  423302:	cmp    eax,0x60ab0292
  423307:	lock mov ch,0x66
  42330a:	and    eax,esp
  42330c:	xchg   edx,eax
  42330d:	or     eax,0xfcf759e1
  423312:	scas   al,BYTE PTR es:[edi]
  423313:	daa    
  423314:	pop    esp
  423315:	sbb    BYTE PTR [esi+0x2c],0xf5
  423319:	jns    0x423325
  42331b:	out    0x23,eax
  42331d:	mov    eax,0xe82d37cc
  423322:	gs fdivp st(6),st
  423325:	push   ebx
  423326:	leave  
  423327:	cld    
  423328:	lods   al,BYTE PTR ds:[esi]
  423329:	(bad)  
  42332a:	(bad)  
  42332b:	fistp  QWORD PTR [esi]
  42332d:	pop    ebp
  42332e:	fcomip st,st(5)
  423330:	push   ebx
  423331:	int    0x16
  423333:	sar    bh,0x4b
  423336:	pop    ss
  423337:	cmc    
  423338:	shl    DWORD PTR [edi],0x0
  42333b:	add    BYTE PTR [esi],cl
  42333d:	and    BYTE PTR [eax-0x404051c1],cl
  423343:	xor    DWORD PTR [ebx-0x246d7643],edx
  423349:	push   ecx
  42334a:	lahf   
  42334b:	shrd   DWORD PTR [ebp+0x2860001],ebp,0x0
  423353:	add    al,dh
  423355:	les    edi,FWORD PTR [edi+0x5e]
  423358:	sub    ebx,DWORD PTR es:[edx]
  42335b:	out    0xe2,al
  42335d:	mov    al,0xe2
  42335f:	xchg   ch,dl
  423361:	xor    al,0xc2
  423363:	cmp    al,0xdb
  423365:	pop    esi
  423366:	lahf   
  423367:	rol    ch,0x84
  42336a:	or     al,0x53
  42336c:	mov    eax,0x55485557
  423371:	mov    esp,0x4a8b093f
  423376:	pop    ss
  423377:	out    0x77,al
  423379:	mov    dl,BYTE PTR [ebp-0x3ab73d62]
  42337f:	jbe    0x4233db
  423381:	clc    
  423382:	lds    ebp,FWORD PTR [ebx]
  423384:	inc    ebp
  423385:	and    edx,DWORD PTR [ebx+0x2bec3]
  42338b:	js     0x423374
  42338d:	cmp    eax,0x7efe7817
  423392:	not    BYTE PTR [ebx+ebp*8]
  423395:	mov    DWORD PTR [ecx],ebx
  423397:	lods   al,BYTE PTR ds:[esi]
  423398:	pop    ecx
  423399:	test   BYTE PTR [edi+eiz*8+0x38],0x1e
  42339e:	(bad)  
  42339f:	call   0xe700:0xb607e502
  4233a6:	stc    
  4233a7:	mov    ds:0x85fe1727,eax
  4233ac:	mov    ebp,0x7214d0da
  4233b1:	mov    bh,0x30
  4233b3:	or     dl,BYTE PTR [edi+0x2acec007]
  4233b9:	(bad)  
  4233ba:	ds mov dh,0xb1
  4233bd:	push   cs
  4233be:	cmp    DWORD PTR [ebx+0x1e406442],ebx
  4233c4:	dec    edx
  4233c5:	cmp    DWORD PTR [eax],ebp
  4233c7:	repnz or eax,0x1a29a9ec
  4233cd:	out    0x1e,eax
  4233cf:	pop    ecx
  4233d0:	add    DWORD PTR [eax+edx*2],0x3065b3cf
  4233d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233d8:	push   esp
  4233d9:	in     eax,dx
  4233da:	mov    bh,BYTE PTR [esi-0x26]
  4233dd:	inc    edx
  4233de:	jnp    0x423405
  4233e0:	jecxz  0x423370
  4233e2:	sub    al,0x83
  4233e4:	jmp    0xcd728243
  4233e9:	mov    ebx,0x53449686
  4233ee:	retf   0x7dd
  4233f1:	jmp    0x95f41b4f
  4233f6:	mov    ds:0x1e8a3a67,al
  4233fb:	cwde   
  4233fc:	test   BYTE PTR [edi],al
  4233fe:	aas    
  4233ff:	adc    al,0xbf
  423401:	loopne 0x423428
  423403:	mov    ebp,ebx
  423405:	hlt    
  423406:	sbb    ebx,DWORD PTR [edx+0x5ad55c63]
  42340c:	jp     0x423475
  42340e:	or     al,0xd3
  423410:	mov    eax,ds:0x36c2d244
  423415:	fisttp QWORD PTR [ecx-0x32]
  423418:	push   esi
  423419:	xchg   ebp,eax
  42341a:	mov    eax,ds:0x6cc7eb83
  42341f:	mul    dh
  423421:	leave  
  423422:	(bad)  
  423423:	ds in  al,dx
  423425:	int    0x8b
  423427:	fiadd  DWORD PTR [esi+0x28]
  42342a:	add    esi,DWORD PTR [esi]
  42342c:	add    ebx,DWORD PTR [edi-0x6b]
  42342f:	cwde   
  423430:	jne    0x4234ab
  423432:	push   ds
  423433:	mov    ebx,0x4110a46e
  423438:	fstp   QWORD PTR [esi]
  42343a:	push   ebx
  42343b:	jp     0x42347e
  42343d:	xchg   dh,bh
  42343f:	jp     0x42348d
  423441:	hlt    
  423442:	sbb    cl,BYTE PTR [edi-0x23]
  423445:	push   es
  423446:	test   ecx,esi
  423448:	mov    al,0xc7
  42344a:	sub    eax,DWORD PTR [edx]
  42344c:	sbb    eax,0x6e510efe
  423451:	cmp    ebp,ecx
  423453:	lahf   
  423454:	popf   
  423455:	mov    al,ds:0x36f68ee8
  42345a:	test   BYTE PTR [edi],al
  42345c:	or     BYTE PTR [eax],bl
  42345e:	ja     0x423439
  423460:	add    al,BYTE PTR [ebx-0x30]
  423463:	pop    ebp
  423464:	dec    ebx
  423465:	pusha  
  423466:	push   ebp
  423467:	and    eax,0x7d72353b
  42346c:	dec    esi
  42346d:	cmp    al,0xf
  42346f:	xchg   ebx,eax
  423470:	mov    dh,0xf
  423472:	jge    0x423471
  423474:	(bad)  
  423475:	xor    BYTE PTR [ecx],ah
  423477:	pop    ds
  423478:	dec    edx
  423479:	mov    ecx,0x48ccbb46
  42347e:	lods   eax,DWORD PTR ds:[esi]
  42347f:	cmp    al,0x62
  423481:	pop    eax
  423482:	xchg   ebp,eax
  423483:	test   al,0x4f
  423485:	push   ebp
  423486:	mov    ch,0x2f
  423488:	hlt    
  423489:	mov    ecx,0x29911414
  42348e:	and    bl,BYTE PTR [ecx-0x32]
  423491:	xor    eax,0xf3645f94
  423496:	mov    bl,0xe7
  423498:	aad    0x6c
  42349a:	jle    0x423468
  42349c:	push   0x70
  42349e:	pop    ds
  42349f:	lds    esp,FWORD PTR [ecx]
  4234a1:	mov    dh,0x2b
  4234a3:	fisttp DWORD PTR [edi-0x35]
  4234a6:	scas   al,BYTE PTR es:[edi]
  4234a7:	cmp    eax,0x6d130b07
  4234ac:	or     ecx,esi
  4234ae:	cmp    ebp,DWORD PTR [edi-0x2310b855]
  4234b4:	dec    esp
  4234b5:	dec    eax
  4234b6:	(bad)  
  4234b7:	xor    al,0xfc
  4234b9:	jge    0x4234b9
  4234bb:	mov    ds:0xffe7eef3,eax
  4234c0:	adc    eax,0xc4492584
  4234c5:	jae    0x4234b2
  4234c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234c8:	retf   0x8a0a
  4234cb:	and    eax,0x399ae6c5
  4234d0:	out    0x10,eax
  4234d2:	(bad)  
  4234d3:	fiadd  DWORD PTR [ebx-0x7235b258]
  4234d9:	add    al,0xfd
  4234db:	rcr    bl,0xeb
  4234de:	pop    ebx
  4234df:	dec    edi
  4234e0:	int    0x4f
  4234e2:	std    
  4234e3:	cmp    DWORD PTR [ebx-0x446fefc0],ecx
  4234e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234ea:	sbb    ebx,DWORD PTR [ebp+0x595a24d4]
  4234f0:	sahf   
  4234f1:	adc    BYTE PTR [edi],al
  4234f3:	or     BYTE PTR [edi-0x5d],bh
  4234f6:	mov    ch,bh
  4234f8:	aam    0x63
  4234fa:	pushf  
  4234fb:	fs mov ch,0x47
  4234fe:	jo     0x42352e
  423500:	xor    ebp,DWORD PTR [edi+0x7f080117]
  423506:	mov    DWORD PTR [ebx+ebx*2-0x1e],ebx
  42350a:	lea    ebx,[edi+0x8343464]
  423510:	sub    ch,BYTE PTR [eax+0x7a91225e]
  423516:	ret    
  423517:	mov    cl,BYTE PTR ds:0x28ca04e6
  42351e:	mov    WORD PTR [edi-0x41],ds
  423521:	dec    ebx
  423522:	mov    dl,0x9f
  423524:	cs aaa 
  423526:	nop
  423527:	xchg   ecx,eax
  423528:	push   eax
  423529:	sahf   
  42352a:	in     eax,dx
  42352b:	cmp    ah,BYTE PTR [ebx-0x4b]
  42352e:	pop    ecx
  42352f:	sahf   
  423530:	out    dx,al
  423531:	loopne 0x423539
  423533:	adc    eax,0x4f6c66a6
  423538:	ds pop edi
  42353a:	or     esi,ecx
  42353c:	cli    
  42353d:	cs xor eax,0x6b30b4e5
  423543:	addr16 out dx,eax
  423545:	mov    al,ds:0x3bb8e33b
  42354a:	retf   
  42354b:	sbb    eax,0x92c27ef2
  423550:	ds sub al,0x63
  423553:	test   DWORD PTR [ebp-0x61],edi
  423556:	mov    dl,0xc8
  423558:	sub    bh,BYTE PTR [edi-0x4]
  42355b:	scas   al,BYTE PTR es:[edi]
  42355c:	add    al,0xc7
  42355e:	imul   ebx,ebx,0x50bab88a
  423564:	ins    DWORD PTR es:[edi],dx
  423565:	jns    0x423571
  423567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423568:	cwde   
  423569:	loopne 0x4235ca
  42356b:	or     DWORD PTR [edx-0x1a],esp
  42356e:	stos   DWORD PTR es:[edi],eax
  42356f:	out    dx,eax
  423570:	mov    ss,WORD PTR [eax+edx*4]
  423573:	push   ecx
  423574:	mov    bl,0x87
  423576:	and    DWORD PTR fs:[ecx+0x334c1c94],0xffffffe9
  42357e:	fsubr  DWORD PTR [ecx+0x56655c2c]
  423584:	xor    BYTE PTR [ecx],0x67
  423587:	or     ch,BYTE PTR [edx+edi*1-0x3f]
  42358b:	inc    ebx
  42358c:	ja     0x42351c
  42358e:	in     eax,dx
  42358f:	rcr    BYTE PTR [edi-0x15be4066],cl
  423595:	loope  0x42351b
  423597:	add    DWORD PTR [ebp+0x12],ebp
  42359a:	in     eax,0x90
  42359c:	add    eax,0x7b6777d8
  4235a1:	inc    edx
  4235a2:	ficom  DWORD PTR [ecx]
  4235a4:	sub    BYTE PTR [edi],0xd0
  4235a7:	mov    es,eax
  4235a9:	jb     0x4235e8
  4235ab:	and    eax,0x2ae75923
  4235b0:	cmp    al,0x52
  4235b2:	inc    ebp
  4235b3:	dec    eax
  4235b4:	out    0xf4,eax
  4235b6:	fbstp  TBYTE PTR [edi+0xadba5b6]
  4235bc:	xchg   esi,eax
  4235bd:	cmp    BYTE PTR [edi-0x5d2e39d2],dh
  4235c3:	jb     0x4235be
  4235c5:	ret    0x5666
  4235c8:	push   ebp
  4235c9:	dec    edx
  4235ca:	mov    WORD PTR [eax+eax*1+0x37],gs
  4235ce:	int3   
  4235cf:	fs jmp 0x66896223
  4235d5:	not    DWORD PTR [ecx]
  4235d7:	push   eax
  4235d8:	int    0x69
  4235da:	add    BYTE PTR [eax],al
  4235dc:	pop    esp
  4235dd:	mov    edi,0xdce35063
  4235e2:	jg     0x4235a3
  4235e4:	popa   
  4235e5:	hlt    
  4235e6:	mov    esi,0x24d4e41d
  4235eb:	xor    dh,BYTE PTR [edx]
  4235ed:	mov    al,0x1
  4235ef:	add    BYTE PTR [esi-0xefffffe],al
  4235f5:	mov    al,ds:0x6910fec0
  4235fa:	mov    ch,0x82
  4235fc:	mov    ds,WORD PTR [ebx+0x35]
  4235ff:	daa    
  423600:	lods   eax,DWORD PTR ds:[esi]
  423601:	pop    eax
  423602:	add    bl,BYTE PTR [eax-0x7f]
  423605:	fimul  WORD PTR [ebx]
  423607:	cmp    esp,DWORD PTR [ebx+0x2b]
  42360a:	pop    ss
  42360b:	leave  
  42360c:	lahf   
  42360d:	ret    
  42360e:	cli    
  42360f:	sti    
  423610:	pop    ecx
  423611:	mov    al,ds:0x70b058b0
  423616:	test   BYTE PTR [ebp+0x78dd07e6],dh
  42361c:	ror    BYTE PTR [edi],cl
  42361e:	push   eax
  42361f:	cli    
  423620:	out    dx,eax
  423621:	inc    ecx
  423622:	or     ch,ch
  423624:	sbb    al,0x7f
  423626:	loope  0x4235ae
  423628:	bound  edi,QWORD PTR [ebx+0x66]
  42362b:	xchg   ebx,eax
  42362c:	add    DWORD PTR [ecx+0x73],ebp
  42362f:	cmp    al,0xc9
  423631:	fst    QWORD PTR [edx+0x22]
  423634:	aam    0x3f
  423636:	(bad)  
  423637:	stos   BYTE PTR es:[edi],al
  423638:	retf   
  423639:	pop    es
  42363a:	pushf  
  42363b:	dec    edi
  42363c:	mov    dh,0x3d
  42363e:	xor    BYTE PTR [ecx+ebp*8],ah
  423641:	bound  esi,QWORD PTR [ecx+0x212a16fa]
  423647:	jl     0x4236c8
  423649:	(bad)  
  42364b:	fcomp  QWORD PTR [ecx-0x64]
  42364e:	adc    esi,DWORD PTR [edx]
  423650:	push   edi
  423651:	out    dx,al
  423652:	or     DWORD PTR [ebp+0x17],edi
  423655:	mov    ah,0x55
  423657:	(bad)  
  423658:	dec    ebp
  423659:	arpl   bp,si
  42365b:	jnp    0x42369b
  42365d:	aad    0x2f
  42365f:	xor    bl,BYTE PTR [ecx-0x49]
  423662:	pop    eax
  423663:	fdivrp st(4),st
  423665:	cs inc esi
  423667:	test   BYTE PTR [ebx-0x6],al
  42366a:	sbb    dl,BYTE PTR [ebx-0x5955bc0d]
  423670:	in     eax,0x91
  423672:	fnstsw WORD PTR [esi]
  423674:	in     al,0xdb
  423676:	cmp    al,BYTE PTR [edx+esi*8+0x29]
  42367a:	inc    ebx
  42367b:	inc    ecx
  42367c:	and    BYTE PTR [esi-0x40443bee],al
  423682:	push   0xffffffaa
  423684:	push   es
  423685:	push   es
  423686:	sbb    ch,0x48
  423689:	pop    ebx
  42368a:	retf   0xf4e2
  42368d:	clc    
  42368e:	cwde   
  42368f:	pop    esp
  423690:	pop    edi
  423691:	mov    esp,0x14e9048f
  423696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423697:	sahf   
  423698:	cdq    
  423699:	push   esi
  42369a:	fidivr DWORD PTR [ebp-0x3f]
  42369d:	mov    ebp,esi
  42369f:	inc    eax
  4236a0:	jb     0x4236b5
  4236a2:	or     al,0x41
  4236a4:	inc    ebx
  4236a5:	outs   dx,BYTE PTR ds:[esi]
  4236a6:	jbe    0x4236b0
  4236a8:	mov    DWORD PTR [ebp-0x4d65f22d],ebp
  4236ae:	xchg   ebx,eax
  4236af:	mov    BYTE PTR ss:[ecx-0x25def7a6],al
  4236b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236b7:	ds (bad) 
  4236b9:	into   
  4236ba:	push   esi
  4236bb:	and    al,BYTE PTR [ebp-0x2f87bac9]
  4236c1:	retf   
  4236c2:	in     eax,dx
  4236c3:	jmp    0x42369e
  4236c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236c6:	push   eax
  4236c7:	xor    ebx,DWORD PTR [ecx]
  4236c9:	ins    BYTE PTR es:[edi],dx
  4236ca:	pop    ss
  4236cb:	add    al,0xa4
  4236cd:	sbb    DWORD PTR [edi],esi
  4236cf:	ror    dh,1
  4236d1:	(bad)  
  4236d2:	jle    0x423689
  4236d4:	or     edx,DWORD PTR [edx-0x2]
  4236d7:	push   es
  4236d8:	pop    ds
  4236d9:	ds push 0xffffffbf
  4236dc:	mov    BYTE PTR [edx],ch
  4236de:	test   eax,0x96de66c1
  4236e3:	(bad)  
  4236e4:	std    
  4236e5:	jmp    0xb7539fe9
  4236ea:	clc    
  4236eb:	jg     0x42368d
  4236ed:	retf   0x51c4
  4236f0:	pop    eax
  4236f1:	rol    DWORD PTR [esi+0x3b],0xfb
  4236f5:	iret   
  4236f6:	out    dx,al
  4236f7:	repnz sbb BYTE PTR [esp+eax*2-0x73],ch
  4236fc:	call   0x28a1:0x15d78b43
  423703:	adc    ecx,DWORD PTR [ecx-0x1c]
  423706:	dec    eax
  423707:	jae    0x4236ea
  423709:	or     eax,0x8eca1de9
  42370e:	xchg   ebx,eax
  42370f:	iret   
  423710:	call   0xe905:0xf39fe6c
  423717:	sub    ebx,DWORD PTR [edx+eax*1]
  42371a:	lods   eax,DWORD PTR ds:[esi]
  42371b:	and    al,0x71
  42371d:	dec    esp
  42371e:	jle    0x42370c
  423720:	loopne 0x42374d
  423722:	pop    ss
  423723:	(bad)  
  423724:	jg     0x423771
  423726:	das    
  423727:	loop   0x4236bc
  423729:	int3   
  42372a:	xor    ebx,DWORD PTR [esi+0x57]
  42372d:	pop    ss
  42372e:	sti    
  42372f:	pop    esp
  423730:	stos   DWORD PTR es:[edi],eax
  423731:	mov    esi,0xea877501
  423736:	push   ecx
  423737:	jmp    0x148b:0xbbf97881
  42373e:	fdivr  QWORD PTR [ebx+0x70ce5094]
  423744:	out    0x82,al
  423746:	sub    DWORD PTR [ebp+0x1],0x4a
  42374a:	cli    
  42374b:	sub    al,al
  42374d:	pop    ebx
  42374e:	mov    ebx,0x8e1c1476
  423753:	leave  
  423754:	xchg   esi,eax
  423755:	int3   
  423756:	dec    edx
  423757:	jae    0x423786
  423759:	loop   0x423749
  42375b:	lds    ecx,FWORD PTR [ebp+0x46]
  42375e:	fadd   st(2),st
  423760:	dec    edi
  423761:	mov    ebx,ebp
  423763:	mov    dl,0x2b
  423765:	es push ds
  423767:	mov    es,esp
  423769:	inc    eax
  42376a:	js     0x423706
  42376c:	std    
  42376d:	sub    DWORD PTR [ebp-0x517b7f43],ebx
  423773:	dec    BYTE PTR [ecx-0x76]
  423776:	xchg   esi,eax
  423777:	aam    0x40
  423779:	and    BYTE PTR [edi+0x5],bh
  42377c:	mov    BYTE PTR [eax-0x55ac98c0],cl
  423782:	jp     0x423762
  423784:	out    dx,al
  423785:	push   ecx
  423786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423787:	lea    ecx,[ebp+eiz*1+0x5c85a1d2]
  42378e:	mov    ecx,0x2320cc40
  423793:	adc    ebx,DWORD PTR [ecx+0x7b]
  423796:	js     0x42373c
  423798:	jbe    0x42375a
  42379a:	and    eax,0xc1e24f11
  42379f:	loopne 0x42377f
  4237a1:	aaa    
  4237a2:	stc    
  4237a3:	fs jg  0x4237a4
  4237a6:	ins    BYTE PTR es:[edi],dx
  4237a7:	push   ecx
  4237a8:	std    
  4237a9:	sbb    ecx,DWORD PTR [ebx+0x4cf46d1a]
  4237af:	push   ebp
  4237b0:	popa   
  4237b1:	mul    al
  4237b3:	adc    dh,BYTE PTR [ecx+0x55]
  4237b6:	xchg   edx,eax
  4237b7:	mov    ebx,0x51efd5e7
  4237bc:	nop
  4237bd:	leave  
  4237be:	jne    0x423826
  4237c0:	sub    BYTE PTR ds:0x60022339,ah
  4237c6:	or     ah,al
  4237c8:	leave  
  4237c9:	adc    eax,0xe9d40ec
  4237ce:	pop    edi
  4237cf:	daa    
  4237d0:	pushfw 
  4237d2:	or     bl,0x18
  4237d5:	enter  0x8ec1,0xac
  4237d9:	lea    esi,[ebx-0x7d]
  4237dc:	xchg   ebx,ebp
  4237de:	mov    ebx,0x70ccaced
  4237e3:	cmp    eax,0x899a2db8
  4237e8:	or     BYTE PTR [esi-0x3ef33e0],bl
  4237ee:	pop    ebp
  4237ef:	sub    cl,BYTE PTR [ebp+0x551d33ca]
  4237f5:	mov    es,ecx
  4237f7:	and    BYTE PTR [edx],bh
  4237f9:	adc    BYTE PTR [eax+0x0],al
  4237fc:	test   BYTE PTR [ebx+0x5f0900b4],bl
  423802:	sub    al,0x6c
  423804:	inc    eax
  423805:	adc    BYTE PTR [ebx+0x23],bl
  423808:	fwait
  423809:	into   
  42380a:	sub    ah,bh
  42380c:	inc    esi
  42380d:	retf   
  42380e:	dec    eax
  42380f:	shr    DWORD PTR [ecx+eax*8-0x2c],0xc0
  423814:	ins    BYTE PTR es:[edi],dx
  423815:	adc    BYTE PTR [ebp+0x2a],dl
  423818:	xchg   esi,eax
  423819:	leave  
  42381a:	ja     0x4237de
  42381c:	cmp    al,0x52
  42381e:	or     BYTE PTR [edi],bl
  423820:	dec    esi
  423821:	retf   0xcb63
  423824:	sahf   
  423825:	fist   WORD PTR [ebx+0x558ca36f]
  42382b:	jmp    0x423831
  42382d:	dec    ebx
  42382e:	out    dx,eax
  42382f:	xor    cl,BYTE PTR [eax+0x76f12f19]
  423835:	imul   esp,DWORD PTR [edi-0x1c],0x9f5dd0f2
  42383c:	out    0x8d,eax
  42383e:	xchg   esp,eax
  42383f:	sub    DWORD PTR [eax-0x3c],eax
  423842:	lock addr16 (bad) 
  423845:	jg     0x4238b7
  423847:	inc    edx
  423848:	mov    esi,0x92ac9690
  42384d:	cli    
  42384e:	pop    edi
  42384f:	sbb    DWORD PTR [eax],edi
  423851:	sub    DWORD PTR [ebx],esi
  423853:	imul   DWORD PTR [ecx-0x6cb80927]
  423859:	jo     0x423868
  42385b:	test   BYTE PTR ds:0x51801982,dh
  423861:	fisttp WORD PTR [edx-0x715b4cbd]
  423867:	adc    al,0x93
  423869:	dec    ecx
  42386a:	mov    dl,0x4a
  42386c:	pop    ds
  42386d:	shl    DWORD PTR [edx+eax*1+0x52bfa8ef],1
  423874:	addr16 mov ds:0xb255,eax
  423878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423879:	xor    BYTE PTR [eax],al
  42387b:	add    BYTE PTR [ebx+0x55],al
  42387e:	pusha  
  42387f:	(bad)  
  423880:	jbe    0x423841
  423882:	out    dx,eax
  423883:	fnstsw WORD PTR [edx+0x384356c3]
  423889:	cmp    al,0x4a
  42388b:	push   0x1b2b8
  423890:	xchg   BYTE PTR [edx],al
  423892:	add    BYTE PTR [eax],al
  423894:	lods   al,BYTE PTR ds:[esi]
  423895:	fisttp QWORD PTR [eax-0xc4f66fb]
  42389b:	(bad)  
  42389c:	sbb    eax,0x354576a7
  4238a1:	pop    ebp
  4238a2:	sbb    BYTE PTR gs:[eax-0x63],ch
  4238a6:	and    BYTE PTR [eax+eax*2+0x16],0x5f
  4238ab:	inc    ecx
  4238ac:	sub    al,0x97
  4238ae:	xchg   esi,eax
  4238af:	sbb    eax,ebp
  4238b1:	and    BYTE PTR [ebp-0x4ae81a9a],al
  4238b7:	test   eax,0x4ca7b1dc
  4238bc:	mov    DWORD PTR [edx-0x35],ebp
  4238bf:	leave  
  4238c0:	pop    ss
  4238c1:	test   al,0xd3
  4238c3:	fsub   DWORD PTR [eax-0x2a]
  4238c6:	ficomp WORD PTR [edx-0x7445d294]
  4238cc:	out    dx,eax
  4238cd:	or     al,0x89
  4238cf:	ret    0xd258
  4238d2:	pusha  
  4238d3:	(bad)  
  4238d4:	lds    edx,FWORD PTR [edi+0x752cc18]
  4238da:	leave  
  4238db:	cmp    al,BYTE PTR [eax-0x1cce8691]
  4238e1:	(bad)  
  4238e2:	popf   
  4238e3:	sbb    edi,DWORD PTR [ebx]
  4238e5:	fwait
  4238e6:	repnz pop es
  4238e8:	in     eax,dx
  4238e9:	xchg   esp,eax
  4238ea:	lds    eax,FWORD PTR [ecx]
  4238ec:	in     al,dx
  4238ed:	inc    esp
  4238ee:	ret    0x91a0
  4238f1:	leave  
  4238f2:	or     DWORD PTR [ebx-0x4778fbbe],ecx
  4238f8:	push   ebp
  4238f9:	add    ch,BYTE PTR [edi+edx*1+0x3b]
  4238fd:	call   0xf25a13b3
  423902:	adc    BYTE PTR [ebp+0x2f],ch
  423905:	mov    ah,0xe4
  423907:	daa    
  423908:	inc    esp
  423909:	out    dx,eax
  42390a:	mov    dl,0xe6
  42390c:	mov    eax,0xf9cb351a
  423911:	inc    esp
  423912:	loopne 0x4238e1
  423914:	fs mov eax,0xb984d59c
  42391a:	shl    BYTE PTR [ecx-0x2b82a4ea],1
  423920:	inc    ecx
  423921:	add    dl,BYTE PTR [ebx+0x50]
  423924:	std    
  423925:	mov    si,0x3457
  423929:	(bad)  [ebx+0x45077c0b]
  42392f:	out    0x1b,al
  423931:	repnz cmp DWORD PTR [esi+0x37],ebx
  423935:	mov    esp,0x1e7d12ab
  42393a:	les    ebp,FWORD PTR [edx]
  42393c:	mov    ds:0x78af2173,al
  423941:	sub    ebx,esi
  423943:	jmp    0xe8a7:0xcebc0d77
  42394a:	and    BYTE PTR [esi-0x35],dh
  42394d:	in     eax,0xd5
  42394f:	add    edi,0xffffffb3
  423952:	inc    ecx
  423953:	pusha  
  423954:	dec    ecx
  423955:	(bad)  
  423956:	icebp  
  423957:	lock fwait
  423959:	sbb    al,0x84
  42395b:	xchg   ecx,eax
  42395c:	mov    ecx,esp
  42395e:	rcl    DWORD PTR [ebx],1
  423960:	mov    ecx,0x2844dbf9
  423965:	add    BYTE PTR [edx+0x5c1e389c],al
  42396b:	getsec 
  42396d:	push   ebx
  42396e:	push   edi
  42396f:	pop    es
  423970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423971:	rol    BYTE PTR [edx-0x52],0x56
  423975:	adc    bh,BYTE PTR [esi-0x11d3a6be]
  42397b:	fs jecxz 0x4239cb
  42397e:	cwde   
  42397f:	repnz push ebx
  423981:	shl    BYTE PTR [esi],0xeb
  423984:	fnstenv [ecx-0x2a]
  423987:	mov    cl,0xcd
  423989:	arpl   WORD PTR [ebp-0x25],si
  42398c:	fidiv  DWORD PTR [ecx+0x2b]
  42398f:	not    bl
  423991:	mov    eax,DWORD PTR [eax-0x253a7756]
  423997:	jb     0x4239c7
  423999:	jb     0x42393a
  42399b:	popa   
  42399c:	retf   0x91fb
  42399f:	add    DWORD PTR [edi-0x19],edx
  4239a2:	cmp    al,0x5
  4239a4:	sub    esi,eax
  4239a6:	cmp    al,0x44
  4239a8:	pop    ecx
  4239a9:	lea    eax,[ecx+0x5e7db4fc]
  4239af:	cmp    eax,0x34077094
  4239b4:	retf   0xd690
  4239b7:	out    dx,eax
  4239b8:	sbb    DWORD PTR [esi-0x887df38],esi
  4239be:	ja     0x4239c8
  4239c0:	push   edi
  4239c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c2:	fistp  QWORD PTR [ebp+0x69ccc7da]
  4239c8:	inc    esp
  4239c9:	mov    dl,0xee
  4239cb:	sbb    al,0xfc
  4239cd:	sub    dl,ah
  4239cf:	stos   DWORD PTR es:[edi],eax
  4239d0:	ds dec esi
  4239d2:	cmp    DWORD PTR [edx-0x72],edi
  4239d5:	jno    0x4239f4
  4239d7:	jmp    0x423a4d
  4239d9:	fwait
  4239da:	mov    eax,0x27791c2f
  4239df:	cld    
  4239e0:	sub    BYTE PTR [eax],ch
  4239e2:	fcomp  QWORD PTR [ebx+eax*8+0x5268b5f4]
  4239e9:	sbb    DWORD PTR [ebp+0x723908ee],ebx
  4239ef:	popf   
  4239f0:	out    0x12,eax
  4239f2:	popf   
  4239f3:	hlt    
  4239f4:	add    al,0xf3
  4239f6:	add    DWORD PTR [edx+0x461370cf],ebp
  4239fc:	lods   al,BYTE PTR ds:[esi]
  4239fd:	test   al,0xc6
  4239ff:	fwait
  423a00:	mov    DWORD PTR [esi],edi
  423a02:	or     DWORD PTR [esp+ebx*1],esi
  423a05:	and    esp,DWORD PTR [esi+eiz*8-0x53b3a03]
  423a0c:	jmp    0x423a03
  423a0e:	cmp    esp,edi
  423a10:	mov    ah,0x11
  423a12:	mov    edi,0x420cf4b5
  423a17:	popa   
  423a18:	test   al,0x58
  423a1a:	cmp    edi,edx
  423a1c:	test   al,dh
  423a1e:	scas   al,BYTE PTR es:[edi]
  423a1f:	xor    bh,bl
  423a21:	jne    0x4239f7
  423a23:	pop    ss
  423a24:	(bad)  
  423a25:	push   cs
  423a26:	pop    edi
  423a27:	outs   dx,DWORD PTR ds:[si]
  423a29:	in     eax,dx
  423a2a:	mov    ebp,0xf4e5114
  423a2f:	fs jg  0x423a9d
  423a32:	retf   
  423a33:	ins    BYTE PTR es:[edi],dx
  423a34:	imul   esp,edx,0x2f
  423a37:	(bad)  
  423a38:	mov    ah,BYTE PTR ss:[edi]
  423a3b:	outs   dx,BYTE PTR ds:[esi]
  423a3c:	mov    ebp,0x4fec4b6f
  423a41:	add    BYTE PTR ds:0xdcfbcd60,ah
  423a47:	iret   
  423a48:	mov    BYTE PTR [ebx+0x67869030],cl
  423a4e:	mov    dh,0xc1
  423a50:	(bad)  
  423a51:	dec    eax
  423a52:	outs   dx,DWORD PTR ds:[esi]
  423a53:	aas    
  423a54:	repz inc edi
  423a56:	adc    DWORD PTR [ecx-0x6d1d6000],edx
  423a5c:	pop    ecx
  423a5d:	push   ebx
  423a5e:	jge    0x423a89
  423a60:	inc    ecx
  423a61:	sub    al,0x8d
  423a63:	call   DWORD PTR [ebp-0x6c]
  423a66:	retf   
  423a67:	xchg   esi,eax
  423a68:	mov    al,ds:0x67debc04
  423a6d:	stos   DWORD PTR es:[edi],eax
  423a6e:	and    BYTE PTR [edx-0x287c077b],ah
  423a74:	je     0x423a48
  423a76:	xchg   ecx,eax
  423a77:	loope  0x423ae8
  423a79:	dec    edx
  423a7a:	mov    dl,0xe0
  423a7c:	jnp    0x423ab1
  423a7e:	push   0x2f7915e6
  423a83:	aas    
  423a84:	push   esi
  423a85:	or     eax,0x4febdcf8
  423a8a:	outs   dx,DWORD PTR ds:[esi]
  423a8b:	sub    ebx,edi
  423a8d:	mov    esi,0x33ac85c7
  423a92:	(bad)  
  423a93:	mov    edi,0x2efbbbf4
  423a98:	test   al,0x8c
  423a9a:	mov    al,ds:0xc7c2e19a
  423a9f:	iret   
  423aa0:	dec    ebp
  423aa1:	retf   0xfee
  423aa4:	jnp    0x423b00
  423aa6:	sub    esi,edi
  423aa8:	stos   DWORD PTR es:[edi],eax
  423aa9:	js     0x423a67
  423aab:	int    0x67
  423aad:	sbb    DWORD PTR [esi],edi
  423aaf:	jno    0x423a58
  423ab1:	rcr    DWORD PTR [ebx+0x61d0d5df],1
  423ab7:	pop    eax
  423ab8:	sbb    bh,al
  423aba:	mov    eax,ds:0xb837a48b
  423abf:	out    dx,al
  423ac0:	dec    eax
  423ac1:	aad    0xc6
  423ac3:	jb     0x423b2e
  423ac5:	repz jne 0x423a68
  423ac8:	add    eax,ecx
  423aca:	rol    BYTE PTR [ecx-0x16],cl
  423acd:	mov    WORD PTR [edx-0x4ae9e2e6],gs
  423ad3:	or     al,ch
  423ad5:	jne    0x423abb
  423ad7:	sub    eax,0x620ca17e
  423adc:	ss ss pop ecx
  423adf:	sbb    ecx,DWORD PTR [edi-0x63046f15]
  423ae5:	sahf   
  423ae6:	sar    BYTE PTR [edi+edx*4+0x7c],0x92
  423aeb:	js     0x423a7d
  423aed:	cwde   
  423aee:	cmp    dh,BYTE PTR [ebp-0x3203d652]
  423af4:	push   ebp
  423af5:	add    bh,BYTE PTR [ecx]
  423af7:	test   BYTE PTR [esi],cl
  423af9:	into   
  423afa:	jb     0x423b50
  423afc:	fisubr DWORD PTR [ebp+0x145e47f0]
  423b02:	jb     0x423b0d
  423b04:	xlat   BYTE PTR ds:[ebx]
  423b05:	cmp    bh,BYTE PTR ds:0xc960368c
  423b0b:	lds    ecx,FWORD PTR [edi-0x2f]
  423b0e:	aam    0xb5
  423b10:	dec    ebx
  423b11:	loope  0x423ab6
  423b13:	mov    BYTE PTR [esp+eiz*4-0xa4a124a],dh
  423b1a:	add    BYTE PTR [eax],al
  423b1c:	push   edi
  423b1d:	sub    eax,0xba7f9a07
  423b22:	fucomip st,st(5)
  423b24:	ficom  WORD PTR [ebp+0x41]
  423b27:	adc    al,0x2f
  423b29:	icebp  
  423b2a:	stc    
  423b2b:	push   ds
  423b2c:	ds mov ch,0x1
  423b2f:	add    BYTE PTR [esi+0x55000002],al
  423b35:	jns    0x423ac7
  423b37:	outs   dx,BYTE PTR ds:[esi]
  423b38:	ret    0x40e8
  423b3b:	mov    bl,0x1b
  423b3d:	lods   al,BYTE PTR ds:[esi]
  423b3e:	cwde   
  423b3f:	cmc    
  423b40:	add    al,0x27
  423b42:	add    esi,0xa38f71e2
  423b48:	adc    BYTE PTR [edi+0x75],bl
  423b4b:	xchg   ecx,eax
  423b4c:	and    esi,eax
  423b4e:	frstor ds:[ecx]
  423b51:	push   esp
  423b52:	shl    DWORD PTR [ecx],1
  423b54:	das    
  423b55:	jnp    0x423bc9
  423b57:	popa   
  423b58:	and    BYTE PTR [edx+0x16],cl
  423b5b:	sbb    esi,DWORD PTR [ebp-0xc]
  423b5e:	bound  esi,QWORD PTR [edx-0x6b3d9042]
  423b64:	and    dh,dh
  423b66:	shl    DWORD PTR [eax-0x78],1
  423b69:	dec    edx
  423b6a:	shl    DWORD PTR [edi-0x3f69922d],cl
  423b70:	(bad)  
  423b71:	jg     0x423bc2
  423b73:	retf   0x175a
  423b76:	sahf   
  423b77:	popa   
  423b78:	sahf   
  423b79:	repz push edx
  423b7b:	and    esi,DWORD PTR [ebx+edx*8+0x34]
  423b7f:	xor    BYTE PTR [ebx-0x45c497f7],dh
  423b85:	das    
  423b86:	xchg   esi,eax
  423b87:	mov    ecx,0x5f8635f6
  423b8c:	jno    0x423b8d
  423b8e:	ret    0xb953
  423b91:	add    al,0x63
  423b93:	ret    
  423b94:	scas   al,BYTE PTR es:[edi]
  423b95:	mov    edx,0x2b9eacc9
  423b9a:	adc    al,0x5d
  423b9c:	push   ecx
  423b9d:	cld    
  423b9e:	xchg   esp,eax
  423b9f:	out    dx,al
  423ba0:	mov    al,ds:0xbbea81e5
  423ba5:	sbb    ebx,DWORD PTR [edi+0x2d]
  423ba8:	fstp   DWORD PTR [ebx+0x6c]
  423bab:	fild   DWORD PTR [esi+0x38a00382]
  423bb1:	inc    edi
  423bb2:	mul    DWORD PTR [ebx]
  423bb4:	sbb    eax,0xc749d44
  423bb9:	push   ebx
  423bba:	pop    esp
  423bbb:	xor    BYTE PTR [esi],ch
  423bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bbe:	jae    0x423b83
  423bc0:	add    esp,DWORD PTR [edi+0x7fe09f57]
  423bc6:	lods   eax,DWORD PTR ds:[esi]
  423bc7:	xor    dl,BYTE PTR [ebx-0x75113bdc]
  423bcd:	sub    eax,0xb64cfc54
  423bd2:	sbb    dl,ah
  423bd4:	sbb    DWORD PTR [edi-0x71f786c],esp
  423bda:	xor    al,BYTE PTR [ecx+ebx*8+0x6e]
  423bde:	inc    edx
  423bdf:	mov    bh,0xf4
  423be1:	nop
  423be2:	jecxz  0x423bfe
  423be4:	sub    cl,bh
  423be6:	repnz addr16 popa 
  423be9:	hlt    
  423bea:	xchg   ebp,eax
  423beb:	push   esi
  423bec:	sbb    BYTE PTR [ebp+0x5f8785bc],ah
  423bf2:	ret    0x2c89
  423bf5:	(bad)  
  423bf6:	mov    esi,ecx
  423bf8:	jnp    0x423c73
  423bfa:	mov    cl,0xb4
  423bfc:	cli    
  423bfd:	fidivr WORD PTR [ecx+0x65ec698a]
  423c03:	dec    eax
  423c04:	push   edx
  423c05:	pop    ebx
  423c06:	dec    esi
  423c07:	or     eax,0xfb3075ad
  423c0c:	push   0x1a
  423c0e:	jno    0x423b98
  423c10:	(bad)  
  423c11:	xchg   edi,eax
  423c12:	mov    bh,0x52
  423c14:	mov    al,0x9e
  423c16:	loop   0x423c3f
  423c18:	hlt    
  423c19:	nop
  423c1a:	rol    BYTE PTR [eax-0x55],0x8
  423c1e:	pop    ecx
  423c1f:	jg     0x423c2d
  423c21:	cmp    BYTE PTR [eax-0x43],al
  423c24:	(bad)  
  423c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c26:	jb     0x423bd8
  423c28:	xor    eax,0xba31a47c
  423c2d:	jo     0x423cab
  423c2f:	sub    bh,BYTE PTR [eax]
  423c31:	ret    0x62d4
  423c34:	test   eax,0x543a8860
  423c39:	ins    BYTE PTR es:[edi],dx
  423c3a:	sbb    dh,BYTE PTR [esi-0x2b]
  423c3d:	add    DWORD PTR [edi-0xd],esp
  423c40:	mov    al,ds:0x58df8ebb
  423c45:	cmc    
  423c46:	push   ebp
  423c47:	gs inc eax
  423c49:	out    0xa6,eax
  423c4b:	xor    eax,0xf4acaf1
  423c50:	inc    edx
  423c52:	add    BYTE PTR [esp+eax*2],bl
  423c55:	pop    esp
  423c56:	adc    BYTE PTR [ebx],dh
  423c58:	iret   
  423c59:	test   eax,0x786913b6
  423c5e:	popf   
  423c5f:	jno    0x423c27
  423c61:	daa    
  423c62:	adc    eax,0x6414afaf
  423c67:	xor    eax,0xf915641
  423c6c:	out    0xa4,al
  423c6e:	jp     0x423cd3
  423c70:	sbb    edx,DWORD PTR [eax+0x50b9f60]
  423c76:	pop    edi
  423c77:	mov    ds:0x4528e926,eax
  423c7c:	jne    0x423ce5
  423c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c7f:	test   al,0xfc
  423c81:	fsub   QWORD PTR [ecx+eiz*8-0x7c]
  423c85:	pop    ebx
  423c86:	inc    ebx
  423c87:	cdq    
  423c88:	in     eax,dx
  423c89:	push   ebp
  423c8a:	adc    BYTE PTR [eax-0x30],al
  423c8d:	and    al,0xbf
  423c8f:	push   0x79aad4ab
  423c94:	data16 add al,BYTE PTR [ebx-0x76c13a31]
  423c9b:	aaa    
  423c9c:	xchg   ebx,eax
  423c9d:	jbe    0x423c4a
  423c9f:	int    0x7
  423ca1:	and    ah,BYTE PTR [esi-0x4421b612]
  423ca7:	js     0x423c3c
  423ca9:	xchg   esp,eax
  423caa:	stos   BYTE PTR es:[edi],al
  423cab:	mov    ebx,0x43c31b75
  423cb0:	or     eax,0x466f9b4b
  423cb5:	mov    DWORD PTR [esi-0x7bdddf84],esp
  423cbb:	loop   0x423cc4
  423cbd:	sbb    eax,0x454dbdda
  423cc2:	sub    BYTE PTR [edx],dh
  423cc4:	mov    al,0x17
  423cc6:	dec    esp
  423cc7:	dec    esp
  423cc8:	fsubr  QWORD PTR [edi-0x7bc7627b]
  423cce:	pavgb  mm3,mm2
  423cd1:	imul   ebp,DWORD PTR [ebp+0x1c],0xffffffd5
  423cd5:	cmp    esp,DWORD PTR [edx-0x7cbf3b0c]
  423cdb:	cmp    al,0x5c
  423cdd:	jmp    0x423d4a
  423cdf:	mov    esi,0x684943ee
  423ce4:	or     ebp,DWORD PTR [ebx+0x5961bc7e]
  423cea:	sub    al,0x3e
  423cec:	push   0xfffffffb
  423cee:	in     eax,dx
  423cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cf0:	loop   0x423d5a
  423cf2:	js     0x423cbd
  423cf4:	cwde   
  423cf5:	push   cs
  423cf6:	icebp  
  423cf7:	clc    
  423cf8:	inc    eax
  423cf9:	clc    
  423cfa:	pop    eax
  423cfb:	push   ebx
  423cfc:	sub    edi,DWORD PTR [esi+0x66]
  423cff:	adc    bh,BYTE PTR [edx-0x353d0fc]
  423d05:	adc    esi,DWORD PTR [ecx-0x78]
  423d08:	xor    bl,ah
  423d0a:	mov    esp,gs
  423d0c:	mov    WORD PTR [edi],?
  423d0e:	push   edx
  423d0f:	call   0x3e0e:0xcf5e4af9
  423d16:	scas   eax,DWORD PTR es:[edi]
  423d17:	mov    cl,0x23
  423d19:	jecxz  0x423d45
  423d1b:	stos   DWORD PTR es:[edi],eax
  423d1c:	aam    0xf4
  423d1e:	dec    edi
  423d1f:	inc    esp
  423d20:	dec    edi
  423d21:	pop    es
  423d22:	out    0x8d,eax
  423d24:	das    
  423d25:	int3   
  423d26:	test   DWORD PTR [eax+0x5b],esi
  423d29:	add    ecx,ebp
  423d2b:	gs int 0xce
  423d2e:	ds ja  0x423cd8
  423d31:	and    esp,DWORD PTR [esi]
  423d33:	(bad)  
  423d34:	out    dx,eax
  423d35:	ror    DWORD PTR ds:0x58ecd21d,cl
  423d3b:	cmc    
  423d3c:	shl    BYTE PTR [eax+0x47],0x6f
  423d40:	push   ss
  423d41:	adc    al,0x6e
  423d43:	pop    ecx
  423d44:	leave  
  423d45:	loope  0x423d3b
  423d47:	cmp    DWORD PTR [eax],edi
  423d49:	jle    0x423d10
  423d4b:	enter  0x2b11,0x8f
  423d4f:	pop    esi
  423d50:	out    0xd2,eax
  423d52:	inc    esp
  423d53:	jb     0x423d86
  423d55:	jae    0x423d57
  423d57:	jl     0x423d8e
  423d59:	add    al,dl
  423d5b:	adc    ebp,edx
  423d5d:	clc    
  423d5e:	call   0xebe8:0xa5034f18
  423d65:	outs   dx,DWORD PTR ds:[esi]
  423d66:	adc    ebp,DWORD PTR [ebx]
  423d68:	fdiv   st,st(6)
  423d6a:	mov    edi,0x333ac358
  423d6f:	and    DWORD PTR [ebx+0x38],edx
  423d72:	inc    ecx
  423d73:	enter  0x8b9b,0x39
  423d77:	stc    
  423d78:	arpl   WORD PTR [edi-0x36],cx
  423d7b:	cdq    
  423d7c:	hlt    
  423d7d:	mov    bh,0x50
  423d7f:	pop    eax
  423d80:	lods   al,BYTE PTR ds:[esi]
  423d81:	mov    ds:0xe93642f9,al
  423d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d87:	xor    al,0x9b
  423d89:	fiadd  DWORD PTR [ebp-0x37]
  423d8c:	iret   
  423d8d:	push   ss
  423d8e:	sub    ecx,DWORD PTR [ecx+ebp*4+0x75415aa3]
  423d95:	push   ebx
  423d96:	sbb    ebp,DWORD PTR [ebx]
  423d98:	jns    0x423d78
  423d9a:	fs sub ebx,eax
  423d9d:	jmp    0x2c674672
  423da2:	fcmovbe st,st(5)
  423da5:	inc    ecx
  423da6:	xor    DWORD PTR [ecx+0x6c4ef805],0xb
  423dad:	jb     0x423d95
  423daf:	cmp    BYTE PTR [esi],al
  423db1:	dec    esi
  423db2:	mov    es,WORD PTR [esi-0x45]
  423db5:	lods   eax,DWORD PTR ds:[esi]
  423db6:	scas   al,BYTE PTR es:[edi]
  423db7:	call   0x425064
  423dbc:	ins    BYTE PTR es:[edi],dx
  423dbd:	sub    ch,BYTE PTR [ebx]
  423dbf:	outs   dx,DWORD PTR es:[esi]
  423dc1:	daa    
  423dc2:	ins    DWORD PTR es:[edi],dx
  423dc3:	push   0xfffffff2
  423dc5:	push   esp
  423dc6:	stos   DWORD PTR es:[edi],eax
  423dc7:	adc    edx,DWORD PTR [eax-0x3bafde63]
  423dcd:	mov    bh,0x1
  423dcf:	add    BYTE PTR [esi-0x72fffffe],al
  423dd5:	jmp    DWORD PTR [eax-0x37]
  423dd8:	and    eax,edi
  423dda:	jle    0x423e57
  423ddc:	mov    ah,0xa8
  423dde:	inc    ebx
  423ddf:	aam    0x3a
  423de1:	(bad)  
  423de2:	leave  
  423de3:	dec    edx
  423de4:	pop    ds
  423de5:	pop    ds
  423de6:	cmp    bh,dh
  423de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423de9:	(bad)  
  423dea:	xchg   esp,eax
  423deb:	scas   al,BYTE PTR es:[edi]
  423dec:	mov    BYTE PTR [ecx-0x5ae1ee97],ch
  423df2:	jne    0x423e16
  423df4:	or     eax,0xef60f8d9
  423df9:	iret   
  423dfa:	(bad)  
  423dfb:	or     dl,BYTE PTR [ecx+ebp*4-0x2e]
  423dff:	mov    ?,WORD PTR [esi-0x26]
  423e02:	mov    dl,0xad
  423e04:	cmp    ch,dl
  423e06:	sub    dh,cl
  423e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e09:	sub    eax,0x98953105
  423e0e:	call   0x6fcbe938
  423e13:	xchg   edx,eax
  423e14:	lds    ecx,FWORD PTR [edx+0x2a434cb9]
  423e1a:	inc    esi
  423e1b:	mov    ch,0x9a
  423e1d:	sti    
  423e1e:	popf   
  423e1f:	leave  
  423e20:	pushf  
  423e21:	imul   eax,DWORD PTR ds:0xb0798b9,0x1d732da6
  423e2b:	or     DWORD PTR [ebp+0x18],edx
  423e2e:	leave  
  423e2f:	mov    ecx,eax
  423e31:	mov    cl,0xdb
  423e33:	or     al,0x70
  423e35:	inc    esp
  423e36:	xchg   esp,eax
  423e37:	and    bl,BYTE PTR [ebx-0x73]
  423e3a:	mov    edi,0xb10f814b
  423e3f:	addr16 adc eax,0xd9896254
  423e45:	push   eax
  423e46:	jmp    0x9131:0xcff8a1d9
  423e4d:	loopne 0x423e00
  423e4f:	mov    al,ds:0xa520914
  423e54:	and    eax,0x1dfe3f47
  423e59:	stc    
  423e5a:	and    eax,0x116b8130
  423e5f:	in     eax,dx
  423e60:	push   edi
  423e61:	sub    eax,DWORD PTR [esi+0x348b88a2]
  423e67:	adc    BYTE PTR [edx+edx*2-0x5df205ef],ah
  423e6e:	cmp    al,0x32
  423e70:	or     DWORD PTR [edi],0x8dbc5ce1
  423e76:	sbb    ah,bh
  423e78:	pop    edx
  423e79:	mov    eax,ds:0x81063391
  423e7e:	or     ecx,ebp
  423e80:	dec    ecx
  423e81:	cmp    al,0x9
  423e83:	out    dx,al
  423e84:	pop    ss
  423e85:	adc    al,0xeb
  423e87:	jnp    0x423e3a
  423e89:	into   
  423e8a:	jmp    0x423e7c
  423e8c:	ror    esi,1
  423e8e:	pop    edi
  423e8f:	push   ebx
  423e90:	out    dx,eax
  423e91:	pushf  
  423e92:	dec    ebp
  423e93:	cwde   
  423e94:	jns    0x423ec8
  423e96:	(bad)  
  423e97:	popf   
  423e98:	cmp    DWORD PTR [ebp+0x10],ebx
  423e9b:	cdq    
  423e9c:	pop    ebx
  423e9d:	xor    al,0x80
  423e9f:	das    
  423ea0:	fbstp  TBYTE PTR [edx]
  423ea2:	mov    edi,0xeea91145
  423ea7:	(bad)  
  423ea8:	hlt    
  423ea9:	inc    edx
  423eaa:	pop    ds
  423eab:	(bad)  
  423ead:	(bad)  
  423eaf:	mov    bl,0x23
  423eb1:	jo     0x423edc
  423eb3:	xchg   ecx,eax
  423eb4:	outs   dx,BYTE PTR ds:[esi]
  423eb5:	(bad)  
  423eb6:	mov    BYTE PTR [ebx-0x4e],cl
  423eb9:	loopne 0x423ee6
  423ebb:	retf   0xf6c7
  423ebe:	(bad)  
  423ec0:	fld    QWORD PTR [edx+0x6ba507a3]
  423ec6:	xchg   esi,eax
  423ec7:	ret    0x2f46
  423eca:	push   edi
  423ecb:	das    
  423ecc:	scas   al,BYTE PTR es:[edi]
  423ecd:	add    BYTE PTR [edi],bl
  423ecf:	(bad)  
  423ed1:	pop    ecx
  423ed2:	push   esp
  423ed3:	push   ebp
  423ed4:	adc    DWORD PTR [edi+0x3bb847e9],ebp
  423eda:	pcmpgtd mm3,QWORD PTR [edx]
  423edd:	jb     0x423e8d
  423edf:	xchg   ebp,eax
  423ee0:	sahf   
  423ee1:	xchg   edi,eax
  423ee2:	call   0xed2e:0x7d00569d
  423ee9:	adc    DWORD PTR [ecx],0x99bb38a6
  423eef:	mov    edx,0x3d3199f1
  423ef4:	test   DWORD PTR [esi],0x5673e8bd
  423efa:	pop    DWORD PTR [eax-0x3256d388]
  423f00:	iret   
  423f01:	pushf  
  423f02:	idiv   BYTE PTR [ebp+0x18]
  423f05:	and    eax,0x752b9537
  423f0a:	mov    al,ds:0x2cdeae2a
  423f0f:	aas    
  423f10:	sub    esi,DWORD PTR [ebx+ebx*1]
  423f13:	aam    0xd6
  423f15:	out    0x17,al
  423f17:	jmp    0x2de7cf85
  423f1c:	pop    esi
  423f1d:	and    eax,0x86c3d975
  423f22:	add    eax,0xf81ecbb6
  423f27:	mov    esp,0xf3647066
  423f2c:	hlt    
  423f2d:	pop    ss
  423f2e:	and    DWORD PTR [esi+0x231c0977],edi
  423f34:	sti    
  423f35:	and    DWORD PTR [ecx],ebx
  423f37:	into   
  423f38:	push   edx
  423f39:	imul   ebx,DWORD PTR [edi],0x205d0c61
  423f3f:	sub    eax,0x3ba69896
  423f44:	jnp    0x423ee8
  423f46:	sub    eax,0xdd8c7200
  423f4b:	pop    esp
  423f4c:	inc    ebp
  423f4d:	and    bl,BYTE PTR [edx+0x1f9b2c9d]
  423f53:	neg    eax
  423f55:	or     eax,0x55d0d861
  423f5a:	xor    ecx,DWORD PTR [eax-0x43]
  423f5d:	int    0xa5
  423f5f:	shl    esp,1
  423f61:	jnp    0x423ef2
  423f63:	sbb    dh,cl
  423f65:	rcr    ecx,0x4d
  423f68:	lods   al,BYTE PTR ds:[esi]
  423f69:	inc    esi
  423f6a:	in     eax,dx
  423f6b:	les    ecx,FWORD PTR [ebx]
  423f6d:	(bad)  
  423f6e:	push   edx
  423f6f:	jmp    0x85ed339
  423f74:	pushf  
  423f75:	dec    ebp
  423f76:	scas   eax,DWORD PTR es:[edi]
  423f77:	jne    0x423f65
  423f79:	sbb    edx,DWORD PTR [ebp-0x18]
  423f7c:	adc    eax,DWORD PTR [ebp-0x951c43c]
  423f82:	dec    eax
  423f83:	sbb    BYTE PTR [esi],0x7a
  423f86:	sti    
  423f87:	jmp    0x466c7a95
  423f8c:	push   0x5d
  423f8e:	push   esi
  423f8f:	mov    al,ds:0x255b7d46
  423f94:	arpl   WORD PTR [edx-0x27],cx
  423f97:	and    esp,DWORD PTR [ebp+0x6333cd89]
  423f9d:	lahf   
  423f9e:	dec    esp
  423f9f:	mov    cl,0x56
  423fa1:	push   0xfffffff1
  423fa3:	push   es
  423fa4:	sti    
  423fa5:	sub    BYTE PTR [eax-0x41],al
  423fa8:	dec    ebp
  423fa9:	mov    al,ds:0xdc6a69ee
  423fae:	xchg   edi,eax
  423faf:	mov    ah,0x3f
  423fb1:	mov    DWORD PTR [esi-0x44],esi
  423fb4:	push   esp
  423fb5:	jge    0x423f53
  423fb7:	inc    esi
  423fb8:	int3   
  423fb9:	loop   0x423f50
  423fbb:	jp     0x423fb1
  423fbd:	sub    al,BYTE PTR [edi-0x3a35a17e]
  423fc3:	xor    edi,DWORD PTR [edi+0x6a4d7da6]
  423fc9:	add    eax,0x125568de
  423fce:	ja     0x423fa0
  423fd0:	fs test eax,0xb5da251d
  423fd6:	es push 0xffffffe2
  423fd9:	sub    esp,DWORD PTR ds:0x1622416
  423fdf:	jno    0x423fe4
  423fe1:	std    
  423fe2:	sbb    bl,ch
  423fe4:	push   ecx
  423fe5:	repnz out dx,al
  423fe7:	xchg   esi,eax
  423fe8:	add    eax,0xf72a31e9
  423fed:	ret    
  423fee:	retf   
  423fef:	mov    eax,gs:0x9e333106
  423ff5:	or     BYTE PTR [ecx],bh
  423ff7:	xchg   esi,eax
  423ff8:	jmp    0xd27d:0x17e6dfd9
  423fff:	push   esp
  424000:	add    esp,ecx
  424002:	dec    edx
  424003:	pop    ebx
  424004:	xchg   edi,eax
  424005:	lock in al,dx
  424007:	jnp    0x42400f
  424009:	adc    eax,0x88ea1f99
  42400e:	ja     0x42405d
  424010:	or     ch,al
  424012:	jnp    0x42403d
  424014:	xor    BYTE PTR [ecx+0x23],bl
  424017:	ror    BYTE PTR [eax+0x43b80764],0xe5
  42401e:	stc    
  42401f:	push   ss
  424020:	xor    ebp,DWORD PTR [ebx-0x54]
  424023:	in     al,dx
  424024:	cmp    al,0x2f
  424026:	out    0x18,eax
  424028:	cdq    
  424029:	mov    WORD PTR [esi-0x1a],fs
  42402c:	iret   
  42402d:	add    dh,0x76
  424030:	pop    esi
  424031:	fwait
  424032:	mov    DWORD PTR [ebp+esi*8+0x72a574e3],edx
  424039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42403a:	push   ebp
  42403b:	add    bh,BYTE PTR [edx+esi*2]
  42403e:	jp     0x424012
  424040:	ss loopne 0x424064
  424043:	scas   al,BYTE PTR es:[edi]
  424044:	inc    ebp
  424045:	std    
  424046:	cwde   
  424047:	enter  0xb834,0x4b
  42404b:	stos   DWORD PTR es:[edi],eax
  42404c:	popa   
  42404d:	rcr    DWORD PTR [edx-0x54d03870],0xb4
  424054:	popa   
  424055:	dec    ebx
  424056:	and    bh,BYTE PTR [ebp+0xd56b]
  42405c:	inc    ebx
  42405d:	lea    ebx,[edi]
  42405f:	and    bh,bl
  424061:	mov    dl,0x7f
  424063:	out    dx,eax
  424064:	add    BYTE PTR [ebx+0x3a972710],dl
  42406a:	les    edi,FWORD PTR [ecx]
  42406c:	dec    edx
  42406d:	mov    edx,0x2860001
  424072:	add    BYTE PTR [eax],al
  424074:	fmul   DWORD PTR [edi+0x1830f7fa]
  42407a:	pop    eax
  42407b:	sar    BYTE PTR [ebp-0x10bca705],1
  424081:	ja     0x4240f4
  424083:	pop    eax
  424084:	add    esi,ecx
  424086:	xor    al,0xb6
  424088:	loope  0x42409a
  42408a:	fs dec esp
  42408c:	xor    eax,0x3e78dc96
  424091:	(bad)  
  424092:	xchg   esp,eax
  424093:	shl    BYTE PTR [edx+0x6b9f8901],1
  424099:	sti    
  42409a:	test   eax,0xb591fabd
  42409f:	in     al,0xbf
  4240a1:	dec    ebx
  4240a2:	cwde   
  4240a3:	icebp  
  4240a4:	adc    al,0x84
  4240a6:	clc    
  4240a7:	jmp    0x1b434e7a
  4240ac:	retf   0xca86
  4240af:	retf   0x889b
  4240b2:	push   cs
  4240b3:	and    dl,BYTE PTR [ecx-0x66]
  4240b6:	(bad)  
  4240b8:	in     al,dx
  4240b9:	jno    0x424134
  4240bb:	scas   eax,DWORD PTR es:[edi]
  4240bc:	add    bl,BYTE PTR [edi]
  4240be:	sbb    eax,0x899d47d9
  4240c3:	pop    es
  4240c4:	mov    dl,0xe3
  4240c6:	jmp    0xbdab3c4b
  4240cb:	arpl   WORD PTR [esi],cx
  4240cd:	and    al,0xbf
  4240cf:	jecxz  0x424113
  4240d1:	retf   
  4240d2:	pop    ebp
  4240d3:	inc    BYTE PTR [esi+0x17]
  4240d6:	add    DWORD PTR [esi+ebx*4],edx
  4240d9:	mov    ah,bl
  4240db:	stc    
  4240dc:	rol    BYTE PTR [eax],cl
  4240de:	adc    ah,0x86
  4240e1:	jle    0x4240d7
  4240e3:	cmp    al,al
  4240e5:	xor    al,0x9
  4240e7:	imul   esi,DWORD PTR [eax+0x7c],0xcb0042e3
  4240ee:	xchg   ecx,eax
  4240ef:	in     eax,0xaf
  4240f1:	adc    dl,BYTE PTR [edx+0x3f5ff514]
  4240f7:	mov    ecx,DWORD PTR [ecx+0x26efe586]
  4240fd:	mov    edi,0xa709d713
  424102:	out    0x49,eax
  424104:	jne    0x4240da
  424106:	mov    ecx,0x10ce290f
  42410b:	je     0x4240ce
  42410d:	pop    eax
  42410e:	inc    ecx
  42410f:	push   cs
  424110:	pop    edx
  424111:	pop    es
  424112:	jnp    0x424102
  424114:	sbb    DWORD PTR [esi],eax
  424116:	xchg   edi,eax
  424117:	push   0x7f4e9c0e
  42411c:	add    eax,0x5412b84c
  424121:	rol    BYTE PTR [esp+eax*1-0x8],cl
  424125:	iret   
  424126:	mov    ?,WORD PTR [edi-0x70]
  424129:	in     eax,0xa6
  42412b:	popf   
  42412c:	fs ds mov al,0x1a
  424130:	sbb    ch,dh
  424132:	enter  0xe805,0x9a
  424136:	push   edi
  424137:	in     eax,dx
  424138:	cdq    
  424139:	imul   edi,DWORD PTR [edx],0x62
  42413c:	loope  0x4241a5
  42413e:	cld    
  42413f:	mov    fs,eax
  424141:	icebp  
  424142:	retf   
  424143:	cwde   
  424144:	pop    es
  424145:	popf   
  424146:	test   al,0xca
  424148:	push   ecx
  424149:	push   esp
  42414a:	cli    
  42414b:	mov    ss,WORD PTR [edi-0x1415c93a]
  424151:	pushf  
  424152:	sbb    BYTE PTR [esp+ebx*2+0x7300d77e],0x92
  42415a:	std    
  42415b:	jb     0x42411d
  42415d:	push   cs
  42415e:	in     al,0x1e
  424160:	(bad)  
  424161:	test   eax,0x70089ca6
  424166:	cld    
  424167:	mov    cl,BYTE PTR [eax+0x4a9f9ae6]
  42416d:	daa    
  42416e:	jge    0x42412e
  424170:	mov    ds,WORD PTR [edx+0x47c3c98b]
  424176:	push   edi
  424177:	jbe    0x424139
  424179:	int3   
  42417a:	out    dx,eax
  42417b:	ss imul ebp,edi,0xffffffd1
  42417f:	xchg   esi,eax
  424180:	loopne 0x424121
  424182:	xchg   ebx,eax
  424183:	inc    esi
  424184:	shl    dh,cl
  424186:	inc    ecx
  424187:	pusha  
  424188:	into   
  424189:	lds    edx,FWORD PTR [edx+0x62c1d1af]
  42418f:	mov    ds:0xe39cda8b,al
  424194:	and    DWORD PTR [edi-0x5e],edx
  424197:	push   ss
  424198:	jl     0x42418a
  42419a:	mov    ebx,0xeb53af40
  42419f:	js     0x424218
  4241a1:	enter  0x3dc9,0xc3
  4241a5:	call   0x6c81473d
  4241aa:	shr    BYTE PTR [edx],0x2d
  4241ad:	pushf  
  4241ae:	adc    DWORD PTR [esi-0x20],0x87b8b256
  4241b5:	push   esi
  4241b6:	mov    ebp,0x8dc73fb5
  4241bb:	cmp    al,0x68
  4241bd:	sub    eax,0x154b2405
  4241c2:	jbe    0x4241b7
  4241c4:	cs cli 
  4241c6:	sbb    al,0x98
  4241c8:	xor    eax,0x7f6c0db6
  4241cd:	xchg   ecx,eax
  4241ce:	test   BYTE PTR [ebp+0x7a1852d0],0x1b
  4241d5:	add    ch,BYTE PTR [edx+0x7]
  4241d8:	push   0x9b674bf0
  4241dd:	dec    esp
  4241de:	lods   al,BYTE PTR ds:[esi]
  4241df:	push   cs
  4241e0:	test   BYTE PTR [esi+0x11fbbbba],0x6a
  4241e7:	pusha  
  4241e8:	mov    DWORD PTR [ebp+esi*4+0x94aac2],ecx
  4241ef:	inc    edx
  4241f0:	mov    gs,WORD PTR [ebp+0x3f]
  4241f3:	leave  
  4241f4:	inc    edx
  4241f5:	stos   BYTE PTR es:[edi],al
  4241f6:	mov    ecx,0xadc47e7
  4241fb:	mov    dh,0x53
  4241fd:	clc    
  4241fe:	(bad)  
  4241ff:	addr16 lea esi,[bp-0x6fca]
  424205:	push   esi
  424206:	jbe    0x4241d4
  424208:	test   DWORD PTR [eax+0xbd5c02e],edx
  42420e:	inc    BYTE PTR [esp+esi*2+0x42]
  424212:	repz imul esp,DWORD PTR ds:0xf3bbe72e,0x67
  42421a:	mov    eax,ds:0xfb524506
  42421f:	test   eax,0x192f2b96
  424224:	push   ebx
  424225:	pop    esi
  424226:	mov    esi,0x5935d882
  42422b:	(bad)  
  42422c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42422d:	cmp    al,0xbd
  42422f:	add    BYTE PTR [ecx],0xc1
  424232:	sar    DWORD PTR [edi+0x659dfe6e],0xb
  424239:	mov    esi,edx
  42423b:	pop    ebp
  42423c:	pop    ecx
  42423d:	out    0x9e,eax
  42423f:	xchg   ebp,eax
  424240:	jae    0x424240
  424242:	loop   0x4242a6
  424244:	mov    ebx,?
  424246:	cmp    BYTE PTR [eax-0x71],ch
  424249:	jo     0x424272
  42424b:	(bad)  
  42424c:	adc    bl,bh
  42424e:	pop    esi
  42424f:	out    0xa2,eax
  424251:	and    bh,dl
  424253:	xchg   esp,eax
  424254:	dec    edx
  424255:	xchg   ecx,eax
  424256:	add    ebp,DWORD PTR [ebp-0x6b6182a5]
  42425c:	xchg   edx,eax
  42425d:	xor    ah,ch
  42425f:	push   ebx
  424260:	and    bh,BYTE PTR [edi-0xa]
  424263:	(bad)  
  424265:	ret    
  424266:	mov    DWORD PTR [edx],esi
  424268:	fistp  WORD PTR [eax]
  42426a:	jecxz  0x424209
  42426c:	add    BYTE PTR [edx],ah
  42426e:	jl     0x424217
  424270:	mov    al,0xd0
  424272:	mov    esi,0x640576f1
  424277:	scas   al,BYTE PTR es:[edi]
  424278:	pop    ds
  424279:	pop    ecx
  42427a:	mov    dl,0xcc
  42427c:	mov    BYTE PTR [ebp-0x7],0xfe
  424280:	int    0xac
  424282:	imul   esi,DWORD PTR [eax-0x4527f3da],0x1a622830
  42428c:	ror    esp,cl
  42428e:	hlt    
  42428f:	clc    
  424290:	jp     0x42426c
  424292:	neg    bl
  424294:	adc    eax,0xbef054cf
  424299:	out    0x99,eax
  42429b:	mov    esi,0xc549e80e
  4242a0:	aaa    
  4242a1:	int    0x1d
  4242a3:	jae    0x424263
  4242a5:	xchg   BYTE PTR [esi-0x149b6f1e],dh
  4242ab:	xchg   ebp,eax
  4242ac:	sub    eax,0x65baa8cb
  4242b1:	xor    ah,BYTE PTR [ecx-0x224a4284]
  4242b7:	inc    esi
  4242b8:	js     0x42423b
  4242ba:	pop    ecx
  4242bb:	add    dh,cl
  4242bd:	ds pusha 
  4242bf:	packsswb mm0,QWORD PTR [edx+0x23]
  4242c3:	jecxz  0x424317
  4242c5:	imul   esi,DWORD PTR [edi],0xffffffd8
  4242c8:	xor    esp,DWORD PTR [eax+0x5e]
  4242cb:	mov    bl,0xa1
  4242cd:	sbb    ah,BYTE PTR [ebx]
  4242cf:	mov    ebx,0xb4a373a7
  4242d4:	(bad)  
  4242d5:	(bad)  
  4242d6:	mov    ebp,0xf97aff8d
  4242db:	or     ebx,DWORD PTR [ebx]
  4242dd:	mov    dl,0xb5
  4242df:	mov    bh,0xfb
  4242e1:	dec    ecx
  4242e2:	cmc    
  4242e3:	mov    BYTE PTR [eax-0x80],bl
  4242e6:	fldcw  WORD PTR [ebx-0x19be903e]
  4242ec:	cmp    cl,dl
  4242ee:	or     dh,dh
  4242f0:	lods   eax,DWORD PTR ds:[esi]
  4242f1:	repz mov eax,ds:0xf755cd94
  4242f7:	inc    ebp
  4242f8:	pop    ecx
  4242f9:	stos   BYTE PTR es:[edi],al
  4242fa:	add    BYTE PTR [eax],al
  4242fc:	hlt    
  4242fd:	cmp    DWORD PTR [edx-0x2002081],edx
  424303:	mov    ebx,0xc0721507
  424308:	pop    edi
  424309:	test   eax,0xbcd0a341
  42430e:	add    DWORD PTR [eax],eax
  424310:	xchg   BYTE PTR [edx],al
  424312:	add    BYTE PTR [eax],al
  424314:	mov    ch,0x2f
  424316:	pop    ecx
  424317:	nop
  424318:	ficom  WORD PTR [ebx-0x4e]
  42431b:	inc    ecx
  42431c:	aam    0xfa
  42431e:	out    0x91,eax
  424320:	sub    esi,DWORD PTR [ebx-0xe]
  424323:	(bad)  
  424325:	retf   
  424326:	sbb    BYTE PTR [edx-0x4f],dh
  424329:	push   edi
  42432a:	shr    ecx,cl
  42432c:	mov    eax,ds:0x95e87189
  424331:	cmp    DWORD PTR [eax+esi*1+0x7c],esp
  424335:	call   0xee10:0xc13773fa
  42433c:	inc    edi
  42433d:	cdq    
  42433e:	in     eax,0x91
  424340:	loop   0x42439c
  424342:	fs icebp 
  424344:	mov    edi,DWORD PTR [eax-0x4a4b7819]
  42434a:	pushf  
  42434b:	or     edi,DWORD PTR [ebx+ebp*4-0x5b]
  42434f:	bound  ebx,QWORD PTR [eax+esi*1]
  424352:	mov    BYTE PTR [ebx-0x11],bl
  424355:	sti    
  424356:	push   eax
  424357:	inc    ebp
  424358:	mov    ah,0x32
  42435a:	enter  0x832a,0x65
  42435e:	pusha  
  42435f:	outs   dx,BYTE PTR ds:[esi]
  424360:	stos   DWORD PTR es:[edi],eax
  424361:	dec    edi
  424362:	adc    ebx,DWORD PTR [esi]
  424364:	clc    
  424365:	push   ds
  424366:	les    esi,FWORD PTR ds:0xed6c8cf0
  42436c:	sbb    DWORD PTR ds:0x2589541e,esp
  424372:	(bad)  
  424373:	(bad)  
  424374:	pop    esp
  424375:	add    eax,0xe8097c36
  42437a:	out    0x43,eax
  42437c:	cmp    eax,0xb857d88c
  424381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424382:	cmp    al,BYTE PTR [eax+0x545ee504]
  424388:	and    al,0x0
  42438a:	in     eax,0xf9
  42438c:	fiadd  DWORD PTR [esi-0x27]
  42438f:	dec    esp
  424390:	dec    edx
  424391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424392:	mov    ?,eax
  424394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424396:	lods   eax,DWORD PTR ds:[esi]
  424397:	or     eax,0xa925ee06
  42439c:	add    DWORD PTR [edx+edx*2+0x2b603022],0xffffffed
  4243a4:	jle    0x4243f9
  4243a6:	push   ebp
  4243a7:	repz rcl BYTE PTR [esi+0x37eeb5b4],0x9f
  4243af:	cmp    al,0xdb
  4243b1:	xchg   esi,eax
  4243b2:	push   edi
  4243b3:	hlt    
  4243b4:	sbb    BYTE PTR [edx],ch
  4243b6:	sbb    al,0x7c
  4243b8:	in     eax,dx
  4243b9:	jne    0x424370
  4243bb:	ret    
  4243bc:	icebp  
  4243bd:	aam    0x57
  4243bf:	loope  0x4243f2
  4243c1:	xor    DWORD PTR [esi-0x43],ebx
  4243c4:	fs xchg ecx,eax
  4243c6:	fsubr  DWORD PTR [edx-0x44]
  4243c9:	cwde   
  4243ca:	loope  0x424376
  4243cc:	sub    DWORD PTR [edx-0x1620936e],edi
  4243d2:	idiv   DWORD PTR ds:0x4c6988b0
  4243d8:	dec    edx
  4243d9:	xor    eax,eax
  4243db:	or     al,0xb7
  4243dd:	mov    bl,0x44
  4243df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243e1:	xchg   esp,eax
  4243e2:	test   ebx,eax
  4243e4:	popa   
  4243e5:	xchg   ebp,eax
  4243e6:	push   0x69
  4243e8:	out    0x35,eax
  4243ea:	(bad)  
  4243eb:	jmp    0x185c:0xf64321c1
  4243f2:	xchg   ebp,eax
  4243f3:	cmc    
  4243f4:	xor    edi,DWORD PTR [eax]
  4243f6:	sti    
  4243f7:	inc    ebx
  4243f8:	cli    
  4243f9:	and    eax,0xc3aeef0a
  4243fe:	adc    al,BYTE PTR [ebx]
  424400:	(bad)  
  424401:	mov    edi,0xd3b3435d
  424406:	sub    ebp,0xffffffbe
  424409:	ffreep st(7)
  42440b:	les    edx,FWORD PTR [ecx+0x21fefbbc]
  424411:	test   DWORD PTR [eax],0x23603720
  424417:	xchg   edi,eax
  424418:	dec    ecx
  424419:	inc    eax
  42441a:	pusha  
  42441b:	adc    DWORD PTR [edi+edi*8],ebp
  42441e:	adc    eax,0x6ec1c3d3
  424423:	push   ds
  424424:	mov    edi,eax
  424426:	inc    ecx
  424427:	(bad)  
  424428:	repnz fldcw WORD PTR [ebx+0x5d231cc7]
  42442f:	jecxz  0x4243c4
  424431:	mov    fs,ebp
  424433:	jmp    0x4b86:0x2a601d86
  42443a:	fsubr  QWORD PTR [edx+0x3b]
  42443d:	lods   al,BYTE PTR ds:[esi]
  42443e:	adc    al,0x4b
  424440:	sub    DWORD PTR [edi],ebx
  424442:	pop    ebx
  424443:	scas   al,BYTE PTR es:[edi]
  424444:	xchg   ebx,eax
  424445:	push   cs
  424446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424447:	cwde   
  424448:	cmp    DWORD PTR [ecx],ebx
  42444a:	xchg   edx,eax
  42444b:	mov    ss,WORD PTR [edi+0x19]
  42444e:	rol    BYTE PTR [ecx-0x5c],cl
  424451:	push   edx
  424452:	jbe    0x4244c9
  424454:	adc    eax,0xfa561807
  424459:	pop    esp
  42445a:	jg     0x424444
  42445c:	stc    
  42445d:	xchg   ebp,eax
  42445f:	pushf  
  424460:	mov    ah,0x2c
  424462:	adc    cl,ch
  424464:	out    dx,al
  424465:	or     al,0x17
  424467:	mov    bh,BYTE PTR [ebp+0x75]
  42446a:	xlat   BYTE PTR ds:[ebx]
  42446b:	or     al,0xb5
  42446d:	inc    edi
  42446e:	das    
  42446f:	sub    bl,bl
  424471:	sbb    al,0x82
  424473:	jmp    0xf561cdbc
  424478:	xchg   ebx,eax
  424479:	pop    ds
  42447a:	aas    
  42447b:	xchg   edx,eax
  42447c:	mov    al,0x29
  42447e:	inc    eax
  42447f:	leave  
  424480:	stos   BYTE PTR es:[edi],al
  424481:	(bad)
  424485:	test   DWORD PTR ds:0xa7485f55,ebx
  42448b:	mov    edx,0xc834d865
  424490:	fs or  al,0xa8
  424493:	sbb    eax,0xed40a2fe
  424498:	stos   DWORD PTR es:[edi],eax
  424499:	push   ds
  42449a:	cld    
  42449b:	sub    ebp,DWORD PTR [esi+0x1c]
  42449e:	mov    esi,0x48125e87
  4244a3:	ss sub ch,dl
  4244a6:	pop    ecx
  4244a7:	jmp    0x705f:0xeafd67ee
  4244ae:	push   0xf73c6ed4
  4244b3:	imul   edx,DWORD PTR [eax+0x44],0x10
  4244b7:	and    BYTE PTR [edx],dl
  4244b9:	jnp    0x424461
  4244bb:	inc    ebp
  4244bc:	adc    BYTE PTR ds:0xd34f4965,ah
  4244c2:	add    eax,0x57b7e343
  4244c7:	inc    ebx
  4244c8:	xor    al,0xdf
  4244ca:	test   eax,0x307257a7
  4244cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244d0:	out    dx,eax
  4244d1:	sub    eax,0x3d04b90a
  4244d6:	mov    ecx,0x9f2c01e3
  4244db:	xlat   BYTE PTR ds:[ebx]
  4244dc:	stos   DWORD PTR es:[edi],eax
  4244dd:	pop    ebp
  4244de:	pop    ds
  4244df:	fidivr DWORD PTR [edx+0x22]
  4244e2:	add    BYTE PTR [edi],dh
  4244e4:	jmp    0x4244da
  4244e6:	and    eax,0xfb946738
  4244eb:	cs mul esp
  4244ee:	ror    DWORD PTR [edi],cl
  4244f0:	imul   esi,ecx,0xffffff8c
  4244f3:	out    dx,eax
  4244f4:	repnz add eax,0x302094d7
  4244fa:	js     0x42455f
  4244fc:	loope  0x424558
  4244fe:	sub    eax,0x432101b4
  424503:	outs   dx,DWORD PTR ds:[esi]
  424504:	outs   dx,DWORD PTR ds:[esi]
  424505:	idiv   BYTE PTR [edi+ebx*2]
  424508:	stc    
  424509:	or     DWORD PTR [ecx+eiz*2],esi
  42450c:	pop    esi
  42450d:	popa   
  42450e:	pop    ebp
  42450f:	dec    eax
  424510:	fnsave [ebp+0x6f]
  424513:	xchg   esp,eax
  424514:	ror    BYTE PTR ds:0x3dc8274d,cl
  42451a:	adc    BYTE PTR [ebx+0x40],ah
  42451d:	lods   eax,DWORD PTR ds:[esi]
  42451e:	sti    
  42451f:	stc    
  424520:	inc    eax
  424521:	(bad)  
  424522:	push   ecx
  424523:	jbe    0x424572
  424525:	inc    ecx
  424526:	sbb    eax,0x5b44aeb6
  42452b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42452c:	repz imul esp,DWORD PTR [bp-0x3d],0xcf63b4c4
  424535:	popa   
  424536:	xchg   ebp,eax
  424537:	loopne 0x424549
  424539:	sbb    dl,cl
  42453b:	daa    
  42453c:	arpl   cx,sp
  42453e:	adc    al,0xfa
  424540:	adc    bh,BYTE PTR [ecx+0x1889792e]
  424546:	pop    ebp
  424547:	je     0x4245bc
  424549:	aaa    
  42454a:	hlt    
  42454b:	cdq    
  42454c:	adc    ebp,DWORD PTR [ecx+0x17e0471]
  424552:	mov    cl,0xa3
  424554:	test   BYTE PTR [edi+0x2],dh
  424557:	inc    ecx
  424558:	pop    ebx
  424559:	jno    0x424527
  42455b:	scas   eax,DWORD PTR es:[edi]
  42455c:	jnp    0x424576
  42455e:	jecxz  0x424525
  424560:	hlt    
  424561:	add    dl,dh
  424563:	sub    al,0x36
  424565:	jmp    0x4244f3
  424567:	mov    eax,0x57b80b90
  42456c:	ret    0xb2d5
  42456f:	jo     0x424523
  424571:	icebp  
  424572:	(bad)  
  424573:	inc    edx
  424574:	iret   
  424575:	dec    esi
  424576:	dec    ebp
  424577:	dec    ebx
  424578:	sbb    BYTE PTR ds:0xe247c0fd,0x95
  42457f:	xor    bh,dh
  424581:	mov    ah,0xee
  424583:	dec    esp
  424584:	xchg   edi,eax
  424585:	mov    esp,0x6472fe71
  42458a:	mov    ds:0x1ce2f931,eax
  42458f:	add    DWORD PTR [esi+ebx*8+0x228c255f],0x76920bcf
  42459a:	add    BYTE PTR [eax],al
  42459c:	push   esp
  42459d:	ds and al,0x19
  4245a0:	outs   dx,BYTE PTR ds:[esi]
  4245a1:	sbb    edi,DWORD PTR [ebp+0x7f]
  4245a4:	(bad)  
  4245a5:	mov    eax,0x7b93cfc0
  4245aa:	repnz loop 0x424603
  4245ad:	mov    edi,0x2860001
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	push   edi
  4245b5:	imul   ecx,ecx,0x3c698f0c
  4245bb:	inc    ecx
  4245bc:	push   edx
  4245bd:	sbb    edx,DWORD PTR [eax+0x60d2b961]
  4245c3:	rcr    eax,0xe8
  4245c6:	add    eax,0x1f23c3e6
  4245cb:	jo     0x42455f
  4245cd:	cmp    eax,0x1973697a
  4245d2:	stc    
  4245d3:	retf   0x3253
  4245d6:	pop    edi
  4245d7:	sub    al,0x47
  4245d9:	frstor [ecx]
  4245db:	mov    ecx,esi
  4245dd:	repz pop ss
  4245df:	xor    BYTE PTR [ebx],dl
  4245e1:	nop
  4245e2:	xchg   esi,eax
  4245e3:	xchg   DWORD PTR es:[esi+0x6671af52],edi
  4245ea:	sub    al,BYTE PTR [edi-0x6d]
  4245ed:	gs dec esi
  4245ef:	ds mov dh,0xf4
  4245f2:	mov    ss:0xe837f5ef,al
  4245f8:	xchg   esp,eax
  4245f9:	mov    eax,0x8161927f
  4245fe:	xor    BYTE PTR ds:0xef6cc65f,bh
  424604:	rcr    DWORD PTR [ecx-0x27],cl
  424607:	repnz xlat BYTE PTR ds:[ebx]
  424609:	not    DWORD PTR [edx-0xe71674b]
  42460f:	arpl   WORD PTR [ecx+esi*2+0x4b],sp
  424613:	pop    esp
  424614:	cmp    DWORD PTR [edx-0x198db71e],esi
  42461a:	pop    es
  42461b:	push   ebp
  42461c:	add    DWORD PTR [ebx-0x1f2bddb2],edx
  424622:	push   es
  424623:	push   ss
  424624:	mov    ecx,DWORD PTR [edi+0x5a]
  424627:	jnp    0x4245bd
  424629:	out    0xeb,eax
  42462b:	sub    eax,esp
  42462d:	lahf   
  42462e:	fs out dx,al
  424630:	enter  0x3840,0x3c
  424634:	pusha  
  424635:	jnp    0x4245de
  424637:	sbb    DWORD PTR [eax+0x2a91f781],edx
  42463d:	neg    BYTE PTR [edx+0x4c]
  424640:	mov    esp,0x4d0e56e4
  424645:	dec    esi
  424646:	enter  0x6eee,0x9
  42464a:	arpl   si,di
  42464c:	cwde   
  42464d:	cmp    eax,ecx
  42464f:	pop    esp
  424650:	popf   
  424651:	test   BYTE PTR [ecx+ecx*4-0xf86a189],al
  424658:	xchg   edi,eax
  424659:	mov    esp,0xaf2b988
  42465e:	mov    edi,0x5848842e
  424663:	jle    0x4246d7
  424665:	(bad)  
  424667:	jle    0x42463a
  424669:	popa   
  42466a:	jecxz  0x424637
  42466c:	imul   ecx,DWORD PTR [eax+esi*8+0x11],0x3e7dfdf5
  424674:	test   BYTE PTR [ecx-0xf],al
  424677:	fwait
  424678:	(bad)  
  424679:	mov    al,0xf0
  42467b:	mov    DWORD PTR [esi-0x78166871],edx
  424681:	mov    WORD PTR [edi+0x4dc3657a],?
  424687:	jns    0x424623
  424689:	mov    esp,edi
  42468b:	jb     0x424662
  42468d:	popa   
  42468e:	popa   
  42468f:	loop   0x4246f1
  424691:	fdivr  DWORD PTR [ebx+eiz*1-0x51]
  424695:	leave  
  424696:	outs   dx,DWORD PTR ds:[esi]
  424697:	xor    BYTE PTR [ebx-0x7a],bh
  42469a:	je     0x4246a5
  42469c:	dec    edx
  42469d:	jg     0x424667
  42469f:	retf   0xed97
  4246a2:	cmp    eax,0x27a025fb
  4246a7:	push   ebp
  4246a8:	ror    DWORD PTR ds:0x2ea4f5ac,0x23
  4246af:	pop    eax
  4246b0:	lods   al,BYTE PTR ds:[esi]
  4246b1:	repz lds edi,FWORD PTR [edx+ebp*2+0x3709e272]
  4246b9:	or     esi,DWORD PTR [esp+esi*8]
  4246bc:	mov    DWORD PTR [eax+ebx*8],esp
  4246bf:	xor    BYTE PTR [ecx-0x1a],0x8
  4246c3:	test   ecx,ecx
  4246c5:	pop    ebx
  4246c6:	lock popf 
  4246c8:	out    0x36,al
  4246ca:	pop    eax
  4246cb:	fidiv  DWORD PTR ds:0x431a8ae5
  4246d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246d2:	fild   QWORD PTR [edi+0x4d39859f]
  4246d8:	aaa    
  4246d9:	retf   0xc816
  4246dc:	adc    ecx,edx
  4246de:	(bad)  [esi-0x16ba31cd]
  4246e4:	xchg   esi,eax
  4246e5:	mov    BYTE PTR [ecx-0x5e],bh
  4246e8:	push   ebx
  4246e9:	pushf  
  4246ea:	lahf   
  4246eb:	cmp    ebx,DWORD PTR [ebp+ebx*1+0x21f88421]
  4246f2:	daa    
  4246f3:	sub    ebx,edi
  4246f5:	repz loope 0x4246e8
  4246f8:	cli    
  4246f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246fa:	das    
  4246fb:	sahf   
  4246fc:	test   eax,0x3a11966a
  424701:	repz push ebp
  424703:	shl    DWORD PTR ds:[esi-0x77],cl
  424707:	or     eax,0x9be25ac7
  42470c:	lock repnz retf 0xe6aa
  424711:	mov    al,ds:0x7d8be394
  424716:	pop    esi
  424717:	mov    edx,0x490956
  42471c:	sti    
  42471d:	test   DWORD PTR [esi-0xa],ecx
  424720:	xchg   ebp,eax
  424721:	arpl   WORD PTR [ecx+0x51],ax
  424724:	aas    
  424725:	iret   
  424726:	js     0x4246e1
  424728:	or     eax,0x3a2b1bed
  42472d:	scas   eax,DWORD PTR es:[edi]
  42472e:	out    dx,eax
  42472f:	adc    bl,ah
  424731:	inc    eax
  424732:	mov    eax,0xd11743bd
  424737:	mov    bl,0xe9
  424739:	add    ch,dl
  42473b:	xchg   BYTE PTR es:[eax],dl
  42473e:	sbb    edi,DWORD PTR [edi-0x19496758]
  424744:	in     al,0x6c
  424746:	mov    al,ds:0xd5865763
  42474b:	test   al,0x2f
  42474d:	xor    al,0x6e
  42474f:	pop    DWORD PTR [esi]
  424751:	push   0x4d917e08
  424756:	hlt    
  424757:	push   edi
  424758:	inc    esp
  424759:	push   cs
  42475a:	stos   DWORD PTR es:[edi],eax
  42475b:	inc    esi
  42475c:	sub    dh,al
  42475e:	inc    esp
  42475f:	pop    ebx
  424760:	lock sahf 
  424762:	outs   dx,DWORD PTR ds:[esi]
  424763:	lahf   
  424764:	ins    DWORD PTR es:[edi],dx
  424765:	xor    al,0xa1
  424767:	retf   
  424768:	mov    esi,0x7b061a99
  42476d:	jmp    DWORD PTR [edi-0x5e]
  424770:	enter  0x15e2,0x25
  424774:	sub    eax,0x1b6af7dc
  424779:	ins    DWORD PTR es:[edi],dx
  42477a:	lods   eax,DWORD PTR ds:[esi]
  42477b:	xchg   esi,eax
  42477c:	test   BYTE PTR ds:0x35c11685,bh
  424782:	xchg   ebx,eax
  424783:	bound  ebp,QWORD PTR [eax+0x22]
  424786:	push   ebx
  424787:	or     ebp,edx
  424789:	daa    
  42478a:	hlt    
  42478b:	fld    DWORD PTR [edx+0x49]
  42478e:	mov    eax,ds:0x2c8c164e
  424793:	sub    ch,ch
  424795:	cmp    BYTE PTR [eax-0x16],ch
  424798:	pop    edi
  424799:	sub    al,0xa4
  42479b:	paddd  mm3,QWORD PTR [esi]
  42479e:	xor    BYTE PTR [ebp+0x20],cl
  4247a1:	push   ebx
  4247a2:	dec    esp
  4247a3:	mov    edi,0xd3118610
  4247a8:	aaa    
  4247a9:	int3   
  4247aa:	int    0xf4
  4247ac:	dec    ebp
  4247ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247ae:	data16 into 
  4247b0:	sbb    eax,DWORD PTR [ecx-0x60]
  4247b3:	dec    eax
  4247b4:	std    
  4247b5:	sbb    ebp,DWORD PTR [edx+0x57]
  4247b8:	pop    edi
  4247b9:	pop    ebx
  4247ba:	cmp    BYTE PTR [ecx-0x51],ch
  4247bd:	mov    dl,0xfb
  4247bf:	cmp    eax,0xab674c62
  4247c4:	scas   al,BYTE PTR es:[edi]
  4247c5:	pop    ecx
  4247c6:	xchg   ebx,eax
  4247c7:	sub    cl,BYTE PTR [eax]
  4247c9:	push   ecx
  4247ca:	test   DWORD PTR [edx+0x72d57900],eax
  4247d0:	jge    0x4247f5
  4247d2:	leave  
  4247d3:	xchg   di,ax
  4247d5:	xchg   esp,eax
  4247d6:	jmp    0xf19e74a1
  4247db:	inc    eax
  4247dc:	and    BYTE PTR [ebx],bh
  4247de:	rol    DWORD PTR [ebp+0x69],cl
  4247e1:	into   
  4247e2:	xor    al,0xe0
  4247e4:	cmp    BYTE PTR ds:0xf00e3308,bh
  4247ea:	lods   eax,DWORD PTR ds:[esi]
  4247eb:	pop    ebp
  4247ec:	push   edi
  4247ed:	dec    edx
  4247ee:	push   es
  4247ef:	sar    BYTE PTR [esi-0x72],1
  4247f2:	push   0xa61cd8eb
  4247f7:	cmp    DWORD PTR [edx-0x257568d0],esi
  4247fd:	adc    ch,BYTE PTR [esi-0x495fde40]
  424803:	sub    al,0x15
  424805:	lock jmp 0x8d3fcd92
  42480b:	jg     0x42484b
  42480d:	push   ebx
  42480e:	out    0x67,al
  424810:	imul   esp,eax
  424813:	adc    BYTE PTR [edi+0x4a],0x63
  424817:	dec    eax
  424818:	out    0x1a,eax
  42481a:	xchg   ecx,eax
  42481b:	push   ebx
  42481c:	jo     0x424867
  42481e:	mov    dh,bl
  424820:	repnz out 0xe0,eax
  424823:	rcl    esp,0xd9
  424826:	pop    ds
  424827:	mov    ds:0x14b8769d,al
  42482c:	test   eax,0xee4b3ed3
  424831:	xchg   esi,eax
  424832:	mov    eax,0x77b041c8
  424837:	ss sti 
  424839:	retf   0x0
  42483c:	mov    esi,0x74ef74ea
  424841:	(bad)  
  424842:	mov    edi,0x98b349fb
  424847:	xor    ah,BYTE PTR [eax+ecx*8-0x3e230bcc]
  42484e:	add    DWORD PTR [eax],eax
  424850:	xchg   BYTE PTR [edx],al
  424852:	add    BYTE PTR [eax],al
  424854:	mov    ah,BYTE PTR [edx]
  424856:	out    dx,eax
  424857:	popa   
  424858:	fistp  WORD PTR [eax+edx*8]
  42485b:	loop   0x42484f
  42485d:	stos   DWORD PTR es:[edi],eax
  42485e:	std    
  42485f:	mov    dl,0xc5
  424861:	adc    eax,0x56b607f2
  424866:	and    al,0x15
  424868:	push   ebp
  424869:	mov    edi,0x93c87d35
  42486e:	in     al,0x26
  424870:	outs   dx,BYTE PTR ds:[esi]
  424871:	or     eax,0x8f35f3f4
  424876:	sahf   
  424877:	pop    ebp
  424878:	and    BYTE PTR [eax-0x43],dh
  42487b:	rcr    BYTE PTR gs:[edx+0x5e],0xbd
  424880:	sub    ebx,DWORD PTR [edx]
  424882:	ss dec edi
  424884:	ins    DWORD PTR es:[edi],dx
  424885:	icebp  
  424886:	cs and ah,bh
  424889:	cmp    al,0x74
  42488b:	sbb    ebx,DWORD PTR [ecx-0x7a8c6eea]
  424891:	lock push eax
  424893:	mov    ebp,0x90034caa
  424898:	add    DWORD PTR [eax+ebx*2],eax
  42489b:	mov    dh,0x39
  42489d:	fs int 0xc8
  4248a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248a1:	jmp    0x4248ae
  4248a3:	xlat   BYTE PTR ds:[ebx]
  4248a4:	mov    ah,cl
  4248a6:	dec    edx
  4248a7:	xor    al,BYTE PTR [ecx]
  4248a9:	pop    eax
  4248aa:	les    esp,FWORD PTR [edx+0x23]
  4248ad:	cdq    
  4248ae:	arpl   bp,bx
  4248b0:	inc    edi
  4248b1:	sub    eax,ecx
  4248b3:	aas    
  4248b4:	mov    edi,0x968032fb
  4248b9:	sbb    ebp,ecx
  4248bb:	loope  0x424844
  4248bd:	inc    esp
  4248be:	xchg   BYTE PTR [esp+ecx*1+0x17bf4b71],ah
  4248c5:	in     eax,dx
  4248c6:	pop    ss
  4248c7:	sub    al,0xeb
  4248c9:	stos   BYTE PTR es:[edi],al
  4248ca:	mov    cl,0xf4
  4248cc:	or     DWORD PTR [eax],0x5f
  4248cf:	sub    edi,DWORD PTR [edi+0x5b]
  4248d2:	fiadd  WORD PTR [edx-0x2c]
  4248d5:	sbb    DWORD PTR [esi-0x27],edx
  4248d8:	cmp    eax,0x7cfcfc45
  4248dd:	test   ebx,esi
  4248df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248e0:	lods   eax,DWORD PTR ds:[esi]
  4248e1:	cmc    
  4248e2:	pop    ds
  4248e3:	push   esp
  4248e4:	mov    ch,0x45
  4248e6:	mov    bh,0xdd
  4248e8:	pop    edx
  4248e9:	xchg   ebp,eax
  4248ea:	pop    ss
  4248eb:	mul    BYTE PTR [eax+0x52]
  4248ee:	inc    ebp
  4248ef:	cmp    eax,DWORD PTR ds:0xa84ee3d5
  4248f5:	retf   
  4248f6:	push   0x430a3786
  4248fb:	ds sbb al,0xfa
  4248fe:	sahf   
  4248ff:	sub    dl,BYTE PTR [eax+ebx*8]
  424902:	xchg   ecx,eax
  424903:	mov    ebx,0x767f1f78
  424908:	lods   eax,DWORD PTR ds:[esi]
  424909:	(bad)  
  42490b:	cmp    BYTE PTR [edi+0x59],0xbd
  42490f:	fxch   st(6)
  424911:	jo     0x424970
  424913:	cmp    al,0x74
  424915:	pushf  
  424916:	mov    dh,0x30
  424918:	xor    eax,0x7d2ffdd4
  42491d:	and    eax,DWORD PTR [ebp+0x1]
  424920:	sub    esi,ebx
  424922:	jp     0x424998
  424924:	je     0x4248ad
  424926:	cmp    dl,dh
  424928:	mov    ecx,0xead20eb8
  42492d:	cmp    DWORD PTR [edi+0x111e4150],0xffffffd5
  424934:	int3   
  424935:	ds pop ebx
  424937:	cmp    ebp,edx
  424939:	dec    eax
  42493a:	push   edx
  42493b:	call   0xe1a9:0x120d210d
  424942:	cdq    
  424943:	jae    0x4248c5
  424945:	dec    esp
  424946:	cmp    al,0xd7
  424948:	out    dx,eax
  424949:	imul   ebx,DWORD PTR [edi],0x937cb43a
  42494f:	adc    al,al
  424951:	xor    edx,ecx
  424953:	mov    ds:0xab1f446c,al
  424958:	jnp    0x424925
  42495a:	adc    eax,0xf491dc86
  42495f:	pop    esp
  424960:	xor    bh,BYTE PTR [ebp+eiz*2+0x18]
  424964:	cs inc ecx
  424966:	pushf  
  424967:	ds pop ss
  424969:	jecxz  0x424972
  42496b:	adc    eax,0xc301513f
  424970:	lods   al,BYTE PTR ds:[esi]
  424971:	cmp    eax,0x63536ac
  424976:	inc    ebp
  424977:	and    BYTE PTR [eax+0x6b099d26],bl
  42497d:	mov    eax,0x30adf548
  424982:	cmp    BYTE PTR [edx],dh
  424984:	push   ds
  424985:	push   ebp
  424986:	inc    esp
  424987:	pop    esi
  424988:	lds    eax,FWORD PTR [edx]
  42498a:	sahf   
  42498b:	repz mov esi,esi
  42498e:	or     eax,0x5d79ab68
  424993:	std    
  424994:	mov    esp,0xdd06c63
  424999:	mov    eax,ds:0x443facba
  42499e:	rol    ch,1
  4249a0:	jo     0x424a03
  4249a2:	sbb    DWORD PTR ds:[edx],esi
  4249a5:	xchg   esi,eax
  4249a6:	sbb    eax,DWORD PTR [esi]
  4249a8:	test   al,0xbc
  4249aa:	ror    ch,1
  4249ac:	push   eax
  4249ad:	arpl   WORD PTR [eax-0x73],di
  4249b0:	xchg   esp,eax
  4249b1:	lahf   
  4249b2:	jne    0x42493b
  4249b4:	inc    edx
  4249b5:	adc    cl,BYTE PTR [esi-0x360e09fd]
  4249bb:	and    bh,BYTE PTR [ebx-0x7e86ed82]
  4249c1:	xchg   ecx,eax
  4249c2:	call   0x8a5:0xce14cfb9
  4249c9:	out    dx,eax
  4249ca:	mov    bl,0x5c
  4249cc:	inc    eax
  4249cd:	pop    ebx
  4249ce:	lea    esp,ds:0x8002f9ae
  4249d4:	loop   0x4249ae
  4249d6:	jl     0x4249f0
  4249d8:	sub    esp,DWORD PTR [ebp+0x2cb22f60]
  4249de:	popf   
  4249df:	adc    DWORD PTR [eax-0x57e54d05],0x422412f6
  4249e9:	pop    ecx
  4249ea:	mov    esi,0x9cb3392a
  4249ef:	push   es
  4249f0:	mov    eax,ds:0x81a00f0f
  4249f5:	imul   ah
  4249f7:	cwde   
  4249f8:	mov    esp,0xbd109faa
  4249fd:	cld    
  4249fe:	je     0x424a3a
  424a00:	stc    
  424a01:	sbb    cl,BYTE PTR [eax+0xb]
  424a04:	mov    dh,0x84
  424a06:	jb     0x42499a
  424a08:	xchg   edx,eax
  424a09:	pushf  
  424a0a:	xchg   ebx,eax
  424a0b:	or     bl,BYTE PTR [ecx+0x7fcc8537]
  424a11:	mov    esp,0xd4d3597b
  424a16:	cwde   
  424a17:	cmp    al,0x9b
  424a19:	dec    edx
  424a1a:	leave  
  424a1b:	fst    st(2)
  424a1d:	imul   ecx,DWORD PTR [ebx],0xea072803
  424a23:	loope  0x4249b5
  424a25:	sub    edx,0xffffff96
  424a28:	fstp   TBYTE PTR [edi+0x26]
  424a2b:	and    BYTE PTR [eax],dh
  424a2d:	dec    ebx
  424a2e:	cmp    DWORD PTR [ecx],edi
  424a30:	pusha  
  424a31:	mov    bl,bl
  424a33:	imul   esi,edi,0xffffffb0
  424a36:	lea    ecx,[ebx+0x7e]
  424a39:	sahf   
  424a3a:	addr16 pop ecx
  424a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a3d:	pusha  
  424a3e:	jnp    0x4249d3
  424a40:	ins    DWORD PTR es:[edi],dx
  424a41:	jns    0x424a20
  424a43:	xchg   edx,eax
  424a44:	lds    esp,FWORD PTR [ebp+0x46]
  424a47:	mov    eax,ds:0xc0ef8e13
  424a4c:	ss gs cmp esi,ebp
  424a50:	cmp    eax,0x63b9637e
  424a55:	or     al,0xd9
  424a57:	test   eax,0x3887999f
  424a5c:	xchg   ecx,eax
  424a5d:	sub    al,0x73
  424a5f:	clc    
  424a60:	stos   DWORD PTR es:[edi],eax
  424a61:	cmp    eax,0xd15ae6d5
  424a66:	out    0x58,eax
  424a68:	cmp    DWORD PTR [edx-0x228dafbd],0xd
  424a6f:	push   esp
  424a70:	repnz dec edx
  424a72:	mov    ebx,DWORD PTR ds:0x9d1f2a81
  424a78:	shl    BYTE PTR [ebp-0x41c2b263],0x95
  424a7f:	fild   WORD PTR [ebx+0x1b]
  424a82:	int    0x12
  424a84:	les    edx,FWORD PTR [ebx+0x11a5394a]
  424a8a:	dec    BYTE PTR [ebx-0x7fedde25]
  424a90:	add    edx,eax
  424a92:	pop    ss
  424a93:	mov    ds:0x1066ab60,eax
  424a98:	sbb    DWORD PTR [eax+0x1e],0xffffff8a
  424a9c:	pop    ebp
  424a9d:	inc    esi
  424a9e:	ja     0x424af1
  424aa0:	sub    BYTE PTR [edi-0x61cf5bb0],0xe9
  424aa7:	in     al,dx
  424aa8:	add    eax,0x9933da15
  424aad:	cmp    ebp,DWORD PTR [esi+0x7a7fad47]
  424ab3:	push   esp
  424ab4:	pop    ecx
  424ab5:	cli    
  424ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ab7:	fnstenv [ebp-0x2f]
  424aba:	mov    ch,BYTE PTR [eax-0x70]
  424abd:	xchg   ecx,eax
  424abe:	repnz cs lods al,BYTE PTR fs:[esi]
  424ac2:	sar    DWORD PTR [edx-0x301a4ba8],1
  424ac8:	jbe    0x424a7d
  424aca:	mov    ch,0xb3
  424acc:	or     edx,DWORD PTR [eax]
  424ace:	and    esp,edx
  424ad0:	xchg   ecx,eax
  424ad1:	(bad)  [ebx+0x64]
  424ad4:	fnstsw WORD PTR ds:0x2afe0098
  424ada:	add    BYTE PTR [eax],al
  424adc:	dec    ebx
  424add:	inc    ebp
  424ade:	mov    edx,0x5fffbeee
  424ae3:	in     eax,0x54
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	clc    
  424ae7:	adc    ebx,edi
  424ae9:	in     eax,0xc5
  424aeb:	loope  0x424b4f
  424aed:	les    eax,FWORD PTR [ecx]
  424aef:	add    BYTE PTR [esi-0x19fffffe],al
  424af5:	and    bh,BYTE PTR gs:[ebp+0x2ea70206]
  424afc:	ret    0xfa59
  424aff:	dec    edx
  424b00:	adc    ch,cl
  424b02:	cld    
  424b03:	mov    ecx,0x3fb69c4
  424b08:	test   BYTE PTR [eax+ebx*2-0x64d13c06],bl
  424b0f:	pushf  
  424b10:	add    al,0xea
  424b12:	mov    ds,ebp
  424b14:	mov    ch,0x17
  424b16:	mov    dl,0x9d
  424b18:	out    dx,eax
  424b19:	test   al,0x34
  424b1b:	sub    eax,DWORD PTR [eax]
  424b1d:	mov    DWORD PTR [eax+0x1d],ecx
  424b20:	xor    eax,0xe55b1729
  424b25:	or     BYTE PTR [ebp-0x50698a77],dl
  424b2b:	inc    esi
  424b2c:	aas    
  424b2d:	loopne 0x424b7b
  424b2f:	ins    BYTE PTR es:[edi],dx
  424b30:	cmp    al,0x33
  424b32:	out    0xe3,eax
  424b34:	mov    esp,0x540f175c
  424b39:	hlt    
  424b3a:	mov    esp,edx
  424b3c:	adc    cl,BYTE PTR [ebp+0x4bb7dee0]
  424b42:	push   0x9a0f2919
  424b47:	jbe    0x424b80
  424b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b4a:	cdq    
  424b4b:	mov    edx,DWORD PTR [ecx]
  424b4d:	aas    
  424b4e:	jo     0x424bb8
  424b50:	inc    ecx
  424b52:	(bad)  
  424b53:	xor    BYTE PTR [ecx-0x63],bl
  424b56:	rcr    BYTE PTR ss:[eax-0x2ae09203],cl
  424b5d:	sbb    bl,dl
  424b5f:	push   edi
  424b60:	ins    DWORD PTR es:[edi],dx
  424b61:	lahf   
  424b62:	jnp    0x424b29
  424b64:	and    edx,ebp
  424b66:	mov    ecx,0xc888572a
  424b6b:	into   
  424b6c:	gs shl dl,1
  424b6f:	and    esp,ecx
  424b71:	sub    bh,bh
  424b73:	pop    ds
  424b74:	mov    ds:0xf53f4cf,eax
  424b79:	xor    BYTE PTR [ebp+0x2da8ed43],ah
  424b7f:	dec    esi
  424b80:	lds    edi,FWORD PTR [ebp-0x59ace7b3]
  424b86:	icebp  
  424b87:	xchg   edi,eax
  424b88:	pushf  
  424b89:	mov    esp,0x84dd4ad4
  424b8e:	xor    DWORD PTR es:[eax-0x36],edi
  424b92:	inc    ebp
  424b93:	mov    ds:0x78768a93,eax
  424b98:	fwait
  424b99:	sbb    BYTE PTR fs:[eax-0x352e3238],cl
  424ba0:	into   
  424ba1:	fs cmp al,0x17
  424ba4:	(bad)  
  424ba5:	jl     0x424c17
  424ba7:	in     eax,0xa8
  424ba9:	in     eax,dx
  424baa:	mov    BYTE PTR [ebp-0x32],ah
  424bad:	lods   al,BYTE PTR ds:[esi]
  424bae:	scas   al,BYTE PTR es:[edi]
  424baf:	add    BYTE PTR [edi-0x5b],dh
  424bb2:	in     eax,0xa
  424bb4:	test   al,0x40
  424bb6:	sahf   
  424bb7:	push   esp
  424bb8:	imul   eax,esi,0xe14cff79
  424bbe:	and    al,BYTE PTR [edi+edi*2+0x159cfc19]
  424bc5:	or     DWORD PTR [eax],esi
  424bc7:	icebp  
  424bc8:	leave  
  424bc9:	in     eax,dx
  424bca:	mov    BYTE PTR [eax-0x51c19fa0],ch
  424bd0:	fwait
  424bd1:	imul   ebx,DWORD PTR [ebx-0x3da74bad],0xe
  424bd8:	loope  0x424b7c
  424bda:	inc    eax
  424bdb:	dec    ebx
  424bdc:	and    eax,0x4f168288
  424be1:	jge    0x424c0a
  424be3:	sub    al,0xdb
  424be5:	(bad)  
  424be7:	dec    ebp
  424be8:	jmp    0x424c0f
  424bea:	ins    BYTE PTR es:[edi],dx
  424beb:	ins    BYTE PTR es:[edi],dx
  424bec:	dec    edx
  424bed:	sbb    dl,BYTE PTR [edx+0x3]
  424bf0:	add    al,BYTE PTR [ecx-0x4b]
  424bf3:	and    al,BYTE PTR [ebx-0x70]
  424bf6:	int3   
  424bf7:	lods   eax,DWORD PTR ds:[esi]
  424bf8:	sbb    al,0x51
  424bfa:	mov    es,edi
  424bfc:	sub    DWORD PTR [eax+0x3d],esp
  424bff:	mov    al,0xf1
  424c01:	mov    esp,0x22cf6e51
  424c06:	push   es
  424c07:	popa   
  424c08:	sub    dh,0x81
  424c0b:	test   BYTE PTR [edi],bl
  424c0d:	xlat   BYTE PTR ds:[ebx]
  424c0e:	aad    0x23
  424c10:	sbb    al,0x61
  424c12:	mov    ch,0x95
  424c14:	pop    ebp
  424c15:	bound  ebp,QWORD PTR [ebx-0x6a5dae34]
  424c1b:	push   ds
  424c1c:	pop    ecx
  424c1d:	je     0x424c6f
  424c1f:	or     BYTE PTR [esi],bh
  424c21:	pop    ds
  424c22:	dec    ecx
  424c23:	mov    edi,esp
  424c25:	nop
  424c26:	lds    ebp,FWORD PTR [ebp+0x716a0ec]
  424c2c:	push   cs
  424c2d:	xchg   edi,eax
  424c2e:	pop    eax
  424c2f:	and    BYTE PTR [ebp-0x40],0x5b
  424c33:	sbb    DWORD PTR [ecx],eax
  424c35:	sbb    al,0x7b
  424c37:	jmp    0x2f63be27
  424c3c:	js     0x424c11
  424c3e:	pop    ebp
  424c3f:	pop    edi
  424c40:	mov    esi,0xcf0793ed
  424c45:	gs dec ecx
  424c47:	mov    ah,bl
  424c49:	xor    ebp,DWORD PTR [edi]
  424c4b:	(bad)  [ebp-0x35f376af]
  424c51:	sub    BYTE PTR [edx+ecx*4-0x79],ch
  424c55:	jecxz  0x424c11
  424c57:	cmp    ecx,0x3b
  424c5a:	xchg   edi,eax
  424c5b:	and    eax,DWORD PTR [edx]
  424c5d:	xrelease mov BYTE PTR [edi+0x2e29710a],ah
  424c64:	push   ecx
  424c65:	pop    ds
  424c66:	jo     0x424c9a
  424c68:	xlat   BYTE PTR ds:[ebx]
  424c69:	shl    BYTE PTR [edx],cl
  424c6b:	ja     0x424cd2
  424c6d:	sbb    eax,0x6af1f05a
  424c72:	lea    edx,[esi+ebx*8-0x77]
  424c76:	jne    0x424cc4
  424c78:	xchg   edi,eax
  424c79:	mov    ch,0x9c
  424c7b:	mov    edi,0xb44e5212
  424c80:	cmp    edi,edx
  424c82:	fcom   DWORD PTR [eax+ecx*8]
  424c85:	sbb    ecx,DWORD PTR [ebx+0x6f5b5136]
  424c8b:	dec    ecx
  424c8c:	adc    DWORD PTR [ebx-0x70822505],edi
  424c92:	addr16 inc eax
  424c94:	push   0x59
  424c96:	adc    al,0xe1
  424c98:	sahf   
  424c99:	mov    bl,0x4d
  424c9b:	(bad)  
  424c9c:	push   ebx
  424c9d:	test   edi,edx
  424c9f:	or     BYTE PTR [edx],dh
  424ca1:	(bad)  
  424ca2:	mov    ch,0x99
  424ca4:	jecxz  0x424cba
  424ca6:	xchg   DWORD PTR [edx-0x6c5c9678],esp
  424cac:	and    edx,0x36
  424caf:	jmp    DWORD PTR [esi-0x2d]
  424cb2:	xchg   edx,eax
  424cb3:	sub    eax,DWORD PTR [edx]
  424cb5:	rol    BYTE PTR [ebx+eax*2-0x42],0xef
  424cba:	fdiv   DWORD PTR [ecx-0x52]
  424cbd:	sbb    eax,0xac91181b
  424cc2:	ss push ebx
  424cc4:	adc    eax,0x9b04ca1d
  424cc9:	cmp    dh,BYTE PTR [edi-0x3ab4d595]
  424ccf:	in     eax,dx
  424cd0:	sar    BYTE PTR ds:0xd6494fb6,1
  424cd6:	dec    ecx
  424cd7:	in     eax,0xee
  424cd9:	imul   ebp,DWORD PTR [eax],0x7a
  424cdc:	ja     0x424c8f
  424cde:	adc    BYTE PTR [esi+edi*2+0x176fd1d],al
  424ce5:	xlat   BYTE PTR ds:[ebx]
  424ce6:	(bad)  
  424ce8:	xchg   edx,eax
  424ce9:	call   0x194c:0x24d04ab6
  424cf0:	adc    BYTE PTR [eax+0x45],al
  424cf3:	fistp  DWORD PTR [edi-0x7]
  424cf6:	div    BYTE PTR [ebx]
  424cf8:	nop
  424cf9:	jge    0x424d0a
  424cfb:	stc    
  424cfc:	icebp  
  424cfd:	mov    edx,esi
  424cff:	ret    0xd928
  424d02:	aad    0xf2
  424d04:	data16 add bl,BYTE PTR [esi-0x6d2127fa]
  424d0b:	(bad)  
  424d0c:	js     0x424d43
  424d0e:	mov    dl,0x8c
  424d10:	arpl   WORD PTR [eax+0x69a6c297],sp
  424d16:	icebp  
  424d17:	enter  0xcac4,0xe2
  424d1b:	scas   al,BYTE PTR es:[edi]
  424d1c:	jae    0x424d70
  424d1e:	sub    edi,ebp
  424d20:	push   cs
  424d21:	mov    DWORD PTR [eax+eax*8+0x4e],esi
  424d25:	aas    
  424d26:	pop    ss
  424d27:	pushf  
  424d28:	aam    0x6a
  424d2a:	int    0xf4
  424d2c:	rcl    BYTE PTR [eax+0x1defc983],1
  424d32:	imul   esi,DWORD PTR [edx-0x6c],0x53
  424d36:	lods   eax,DWORD PTR ds:[esi]
  424d37:	sbb    DWORD PTR [eax],edx
  424d39:	add    eax,0xb343b5ce
  424d3e:	dec    esi
  424d3f:	xchg   esi,eax
  424d40:	and    cl,ah
  424d42:	cmp    BYTE PTR [esi+ecx*8-0x2b],0x76
  424d47:	sub    BYTE PTR [ebp+ecx*1-0x1a],bl
  424d4b:	ret    0x13b1
  424d4e:	int    0x30
  424d50:	icebp  
  424d51:	imul   esi,DWORD PTR [ecx+0x6129e28a],0xe1c9cc5a
  424d5b:	push   esi
  424d5c:	call   0x21a2:0xde631318
  424d63:	and    eax,0xf93dcd77
  424d68:	push   eax
  424d69:	add    BYTE PTR [esi],ch
  424d6b:	sub    al,0xb7
  424d6d:	cmp    esi,esi
  424d6f:	jecxz  0x424df0
  424d71:	(bad)  
  424d72:	addr16 xchg esp,eax
  424d74:	dec    esi
  424d75:	add    DWORD PTR [ecx+0x746aea],eax
  424d7b:	add    BYTE PTR [edx-0x5b61f90],ch
  424d81:	fldcw  WORD PTR [ebx-0x35bf70d]
  424d87:	loopne 0x424de4
  424d89:	mov    ch,0xa1
  424d8b:	ins    BYTE PTR es:[edi],dx
  424d8c:	call   0x86424f57
  424d91:	add    al,BYTE PTR [eax]
  424d93:	add    BYTE PTR [edx],dl
  424d95:	xchg   ecx,eax
  424d96:	jbe    0x424de2
  424d98:	dec    eax
  424d99:	loop   0x424dd0
  424d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d9c:	addr16 popf 
  424d9e:	inc    edi
  424d9f:	add    DWORD PTR [eax],edi
  424da1:	mov    al,0xde
  424da3:	add    ebp,esi
  424da5:	dec    esi
  424da6:	imul   eax,DWORD PTR [eax-0x27898973],0xecefeb26
  424db0:	xchg   DWORD PTR [edx+0x591a1763],edx
  424db6:	(bad)
  424dba:	jmp    0x65a6:0x617e070c
  424dc1:	add    eax,ecx
  424dc3:	jbe    0x424d94
  424dc5:	lods   eax,DWORD PTR ds:[esi]
  424dc6:	imul   edi,DWORD PTR [ebp+0x3f],0x1f
  424dca:	push   edi
  424dcb:	lods   eax,DWORD PTR ds:[esi]
  424dcd:	leave  
  424dce:	sub    cl,BYTE PTR [ebx-0x4db8a16a]
  424dd4:	adc    eax,0xfe944d40
  424dd9:	ins    DWORD PTR es:[edi],dx
  424dda:	pop    ebp
  424ddb:	push   ss
  424ddc:	ret    
  424ddd:	and    eax,0x85dde942
  424de2:	aam    0x16
  424de4:	push   esi
  424de5:	hlt    
  424de6:	retf   
  424de7:	xchg   esi,eax
  424de8:	into   
  424de9:	out    dx,eax
  424dea:	adc    BYTE PTR [edi+0x38e83c07],bl
  424df0:	ins    DWORD PTR es:[edi],dx
  424df1:	mul    dh
  424df3:	dec    ecx
  424df4:	stos   BYTE PTR es:[edi],al
  424df5:	add    al,0x84
  424df7:	push   ecx
  424df8:	pop    edx
  424df9:	jo     0x424df9
  424dfb:	jge    0x424e49
  424dfd:	call   0x7ab8:0xf29956ea
  424e04:	sub    ebx,esi
  424e06:	fnstsw WORD PTR es:[ebp-0x3e]
  424e0a:	or     edi,DWORD PTR [edi-0x33ec3ba]
  424e10:	stos   DWORD PTR es:[edi],eax
  424e11:	scas   eax,DWORD PTR es:[edi]
  424e12:	mov    esp,0xbd2c14db
  424e17:	and    DWORD PTR [ebx],eax
  424e19:	and    esp,DWORD PTR [esi+ecx*4-0x45]
  424e1d:	jae    0x424e9c
  424e1f:	test   eax,0xed84dc93
  424e24:	icebp  
  424e25:	push   DWORD PTR [ecx-0x5a]
  424e28:	jecxz  0x424e8c
  424e2a:	sub    eax,DWORD PTR [edi+0x52]
  424e2d:	scas   eax,DWORD PTR es:[edi]
  424e2e:	mov    eax,0x77012ea5
  424e33:	in     al,dx
  424e34:	in     al,dx
  424e35:	cmp    DWORD PTR [edx+0x2f],eax
  424e38:	xchg   ebx,eax
  424e39:	or     edi,DWORD PTR [esi]
  424e3b:	ss call 0xaed1:0xc47130c
  424e43:	jp     0x424dce
  424e45:	pop    eax
  424e46:	cmp    DWORD PTR [ebx],esp
  424e48:	dec    edx
  424e49:	in     al,dx
  424e4a:	repnz xor BYTE PTR [eax+0x3e],dl
  424e4e:	call   0x98aa:0x700ee090
  424e55:	mov    edi,0x3fc11c0b
  424e5a:	jb     0x424e64
  424e5c:	cs retf 
  424e5e:	mov    ah,0xf9
  424e60:	xchg   ecx,eax
  424e61:	lods   al,BYTE PTR ds:[esi]
  424e62:	(bad)  [edx]
  424e64:	mov    esp,0x66a26f6
  424e69:	push   edx
  424e6a:	je     0x424e8e
  424e6c:	xor    al,0x69
  424e6e:	not    BYTE PTR [eax+0x57]
  424e71:	out    dx,al
  424e72:	aad    0x1b
  424e74:	pusha  
  424e75:	lock adc dl,BYTE PTR cs:[edx]
  424e79:	pop    edx
  424e7a:	cmp    DWORD PTR [edi-0xb9ba7ee],edx
  424e80:	lods   eax,DWORD PTR ds:[esi]
  424e81:	sbb    eax,0x5e598645
  424e86:	fs jmp 0x424e4c
  424e89:	das    
  424e8a:	dec    esi
  424e8b:	aad    0xac
  424e8d:	push   edx
  424e8e:	sub    dl,BYTE PTR [edi+0xa]
  424e91:	aam    0x67
  424e93:	enter  0xc789,0x7d
  424e97:	xlat   BYTE PTR ds:[ebx]
  424e98:	add    al,0x4d
  424e9a:	test   al,0x4a
  424e9c:	push   cs
  424e9d:	popa   
  424e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e9f:	ret    0x8523
  424ea2:	jmp    0xed64eb9
  424ea7:	sbb    al,0x8d
  424ea9:	repnz mov edi,eax
  424eac:	sbb    DWORD PTR [ecx+0x3b],esp
  424eaf:	repnz add DWORD PTR [ecx],esi
  424eb2:	sub    BYTE PTR [edi-0x3b],dl
  424eb5:	push   eax
  424eb6:	cmp    dl,BYTE PTR [ecx]
  424eb8:	adc    dh,BYTE PTR [esp+ebx*2+0x701e15d5]
  424ebf:	sbb    ah,BYTE PTR [eax]
  424ec1:	(bad)  
  424ec2:	outs   dx,DWORD PTR ds:[esi]
  424ec3:	fdiv   st(0),st
  424ec5:	push   ss
  424ec6:	je     0x424ecc
  424ec8:	mov    dl,0x9a
  424eca:	push   ds
  424ecb:	dec    esi
  424ecc:	adc    ah,al
  424ece:	ds mov al,ss:0x8a074906
  424ed5:	mov    ?,ebx
  424ed7:	pop    ecx
  424ed8:	into   
  424ed9:	clc    
  424eda:	add    al,0xa4
  424edc:	imul   esp,ebx,0x3a
  424edf:	sub    DWORD PTR [esi],ebx
  424ee1:	ds push ss
  424ee3:	icebp  
  424ee4:	aaa    
  424ee5:	push   edx
  424ee6:	mov    cl,0xd2
  424ee8:	jl     0x424ec3
  424eea:	icebp  
  424eeb:	push   0xffffffc6
  424eed:	jnp    0x424eaf
  424eef:	push   esp
  424ef0:	cmp    BYTE PTR [esi-0x792de786],0xf1
  424ef7:	enter  0xebc9,0xae
  424efb:	bound  esi,QWORD PTR [ecx-0x5d]
  424efe:	pop    esp
  424eff:	jecxz  0x424ece
  424f01:	imul   esi,DWORD PTR [ebx-0x5006a65b],0x5f
  424f08:	pop    esi
  424f09:	xchg   cl,al
  424f0b:	and    BYTE PTR [eax-0xc04e717],bh
  424f11:	inc    ebp
  424f12:	repz es xchg ebx,eax
  424f15:	xchg   ebx,eax
  424f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f17:	pop    ebp
  424f18:	je     0x424ec9
  424f1a:	ins    BYTE PTR es:[edi],dx
  424f1b:	rol    BYTE PTR [edi-0x46],0x6f
  424f1f:	pop    esi
  424f20:	ror    BYTE PTR [ecx],cl
  424f22:	hlt    
  424f23:	adc    BYTE PTR [ebx-0x7da80a9c],0xfd
  424f2a:	pop    ebx
  424f2b:	xor    ch,BYTE PTR [esi+ebp*1]
  424f2e:	sbb    al,BYTE PTR [esi-0x21fa43cb]
  424f34:	popa   
  424f35:	push   es
  424f36:	sub    dl,BYTE PTR [ebx]
  424f38:	add    eax,0x612e52eb
  424f3d:	ror    BYTE PTR [eax],1
  424f3f:	sub    DWORD PTR [ecx],0x40
  424f42:	xor    BYTE PTR [ebx-0xa],0x2c
  424f46:	jmp    0xba5:0x5f8cc89b
  424f4d:	xchg   ebx,eax
  424f4e:	push   0xffffff94
  424f50:	cmp    BYTE PTR [eax+0x45d61a7d],cl
  424f56:	ret    0xecd8
  424f59:	mov    gs,WORD PTR [ecx+edx*2+0x57]
  424f5d:	scas   eax,DWORD PTR es:[edi]
  424f5e:	dec    edi
  424f5f:	adc    BYTE PTR [ebp-0x5b],cl
  424f62:	leave  
  424f63:	lock lods al,BYTE PTR es:[esi]
  424f66:	aad    0xdc
  424f68:	mov    dl,0x57
  424f6a:	mov    al,ds:0x6ca36ac9
  424f6f:	or     al,BYTE PTR [ebx]
  424f71:	inc    edx
  424f72:	mov    edx,0x1d2cbd76
  424f77:	scas   eax,DWORD PTR es:[edi]
  424f78:	jb     0x424fe7
  424f7a:	(bad)  
  424f7b:	xchg   ebx,eax
  424f7c:	cmp    al,0xc8
  424f7e:	xchg   esp,eax
  424f7f:	or     DWORD PTR [esi],edx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	(bad)  
  424f84:	es sbb al,0x56
  424f87:	loopne 0x424f93
  424f89:	dec    eax
  424f8a:	into   
  424f8b:	dec    edx
  424f8c:	xlat   BYTE PTR ds:[ebx]
  424f8d:	add    ebp,DWORD PTR [edi]
  424f8f:	into   
  424f90:	push   ebp
  424f91:	gs jno 0x424fdb
  424f94:	test   BYTE PTR [edi],bl
  424f96:	daa    
  424f97:	les    ebx,FWORD PTR [ebx-0x5930c8fe]
  424f9d:	(bad)  
  424f9e:	ret    0x3032
  424fa1:	(bad)  
  424fa2:	inc    edi
  424fa3:	cmp    al,0x37
  424fa5:	add    DWORD PTR [edi-0x49],0xffffffdf
  424fa9:	adc    cl,BYTE PTR [edi-0x5ca9c6a0]
  424faf:	xor    DWORD PTR [ebx+0x7],0xfffffffb
  424fb3:	dec    edx
  424fb4:	pushf  
  424fb5:	in     eax,0xf1
  424fb7:	mov    ecx,0x2a111518
  424fbc:	loope  0x424fc6
  424fbe:	push   edx
  424fbf:	jno    0x425003
  424fc1:	int    0xc5
  424fc3:	loop   0x424f6d
  424fc5:	push   ds
  424fc6:	into   
  424fc7:	xchg   BYTE PTR [esi],cl
  424fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fca:	mov    dh,0x96
  424fcc:	data16 fcmovbe st,st(0)
  424fcf:	jmp    edx
  424fd1:	push   eax
  424fd2:	in     al,dx
  424fd3:	pop    ds
  424fd4:	je     0x424f89
  424fd6:	dec    esi
  424fd7:	mov    edx,0xc286668
  424fdc:	pusha  
  424fdd:	nop    DWORD PTR [ebx]
  424fe0:	addr16 pop ecx
  424fe2:	pop    esp
  424fe3:	push   ebx
  424fe4:	sbb    eax,0xa667ee1f
  424fe9:	mov    bh,0x21
  424feb:	scas   al,BYTE PTR es:[edi]
  424fec:	pusha  
  424fed:	dec    esi
  424fee:	mov    bl,0x31
  424ff0:	or     ch,al
  424ff2:	jp     0x425064
  424ff4:	xor    bl,BYTE PTR [esi]
  424ff6:	jno    0x424f90
  424ff8:	jno    0x424fb6
  424ffa:	dec    ebp
  424ffb:	in     al,dx
  424ffc:	pop    edx
  424ffd:	sub    BYTE PTR [ecx],bh
  424fff:	push   ds
  425000:	in     eax,0xed
  425002:	lods   al,BYTE PTR ds:[esi]
  425003:	stos   DWORD PTR es:[edi],eax
  425004:	add    bp,WORD PTR [edx-0x1]
  425008:	shl    DWORD PTR [ebx+0x6b],cl
  42500b:	aam    0x4a
  42500d:	ins    DWORD PTR es:[edi],dx
  42500e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42500f:	lods   eax,DWORD PTR ds:[esi]
  425010:	adc    BYTE PTR [eax],bh
  425012:	loopne 0x425032
  425014:	int3   
  425015:	add    al,0x76
  425017:	rcl    BYTE PTR [ebx],1
  425019:	icebp  
  42501a:	add    BYTE PTR [eax],al
  42501c:	dec    edx
  42501d:	xchg   DWORD PTR [edx+0x4c],edx
  425020:	(bad)  
  425022:	pop    esi
  425023:	xchg   eax,esp
  425025:	js     0x424fa8
  425027:	mov    ebx,0x13517df5
  42502c:	outs   dx,BYTE PTR ds:[esi]
  42502d:	leave  
  42502e:	add    DWORD PTR [eax],eax
  425030:	xchg   BYTE PTR [edx],al
  425032:	add    BYTE PTR [eax],al
  425034:	and    edi,DWORD PTR [eax+0x4f]
  425037:	enter  0x81b1,0x5b
  42503b:	idiv   BYTE PTR es:[esi-0x69515da7]
  425042:	mov    dl,0xb3
  425044:	out    dx,al
  425045:	mov    ebx,DWORD PTR [esi+0x2b9fc9f1]
  42504b:	aaa    
  42504c:	pop    esi
  42504d:	fcomi  st,st(7)
  42504f:	imul   edx,DWORD PTR [esi-0x51be0dc1],0x51
  425056:	and    bh,BYTE PTR [ebx]
  425058:	out    dx,al
  425059:	inc    ebp
  42505a:	popf   
  42505b:	test   eax,eax
  42505d:	adc    ecx,esi
  42505f:	xor    esi,esi
  425061:	push   esi
  425062:	leave  
  425063:	dec    edx
  425064:	stos   BYTE PTR es:[edi],al
  425065:	jle    0x424fea
  425067:	push   edi
  425068:	pop    ebx
  425069:	icebp  
  42506a:	pop    ds
  42506b:	ret    
  42506c:	lea    edx,[edi]
  42506e:	fcom   QWORD PTR [ecx]
  425070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425071:	add    BYTE PTR [ebp+eax*1-0x4900fbe6],bl
  425078:	dec    esi
  425079:	js     0x42509b
  42507b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42507c:	mov    edi,0x58099eed
  425081:	dec    BYTE PTR [ebp+0x11718386]
  425087:	or     eax,DWORD PTR [edx]
  425089:	inc    esp
  42508a:	mov    ebp,esi
  42508c:	jo     0x42501e
  42508e:	mov    bh,0x99
  425090:	add    BYTE PTR [esi+0x52],0x14
  425094:	fist   DWORD PTR [eax]
  425096:	mov    ecx,0xaa865bc8
  42509b:	les    ecx,FWORD PTR [eax-0xe0b1e29]
  4250a1:	nop
  4250a2:	inc    eax
  4250a3:	les    ebp,FWORD PTR [edx]
  4250a5:	cdq    
  4250a6:	adc    al,0xc9
  4250a8:	inc    esi
  4250a9:	xor    BYTE PTR [edx],bl
  4250ab:	sbb    edx,DWORD PTR [edi-0x1147678a]
  4250b1:	aaa    
  4250b2:	or     cl,cl
  4250b4:	jnp    0x4250f7
  4250b6:	pop    ebx
  4250b7:	pusha  
  4250b8:	pop    esi
  4250b9:	jp     0x425099
  4250bb:	mov    eax,0xcc40d644
  4250c0:	dec    ecx
  4250c1:	iret   
  4250c2:	call   0xd85a2e0c
  4250c7:	cdq    
  4250c8:	popf   
  4250c9:	popf   
  4250ca:	inc    ebp
  4250cb:	shl    BYTE PTR [eax],cl
  4250cd:	mov    esp,DWORD PTR [esi+eax*8+0x3334eb20]
  4250d4:	cwde   
  4250d5:	push   eax
  4250d6:	adc    DWORD PTR [edx],ebx
  4250d8:	popf   
  4250d9:	div    BYTE PTR [ebp-0x1f103860]
  4250df:	and    eax,0xe6b81e89
  4250e4:	mov    ecx,0xa421594c
  4250e9:	jo     0x4250cf
  4250eb:	jbe    0x4250ee
  4250ed:	imul   esp,ebx,0x27
  4250f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250f1:	and    DWORD PTR [edi],edi
  4250f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250f4:	mov    bl,cl
  4250f6:	mov    ch,0x4a
  4250f8:	cmp    al,0xb0
  4250fa:	popf   
  4250fb:	jmp    FWORD PTR [eax+edi*8+0x3e]
  4250ff:	dec    ebp
  425100:	or     BYTE PTR [esi+0x64],bh
  425103:	ret    
  425104:	or     ebx,esp
  425106:	push   edx
  425107:	lock test al,0x97
  42510a:	push   ecx
  42510b:	push   edi
  42510c:	repnz mov esi,DWORD PTR [eax]
  42510f:	fidiv  WORD PTR [edi+eax*2+0xe]
  425113:	push   0x45
  425115:	dec    ebx
  425116:	adc    ebx,DWORD PTR [edi+0x114296df]
  42511c:	test   BYTE PTR [eax+0x37362448],al
  425122:	mov    edi,0x4e094883
  425127:	or     DWORD PTR [ecx],edi
  425129:	xchg   DWORD PTR [ebp-0x5a07c07b],ecx
  42512f:	add    esi,DWORD PTR [eax]
  425131:	cld    
  425132:	mov    ecx,0x234e1845
  425137:	mov    ds:0xa203ec88,al
  42513c:	pushf  
  42513d:	cld    
  42513e:	lock push ebp
  425140:	scas   eax,DWORD PTR es:[edi]
  425141:	push   ds
  425142:	outs   dx,DWORD PTR ds:[esi]
  425143:	(bad)  
  425144:	adc    eax,0x4b032e59
  425149:	mov    WORD PTR ds:0x68f1307b,es
  42514f:	in     eax,dx
  425150:	les    esp,FWORD PTR [ebp*1-0xca3016c]
  425157:	xor    BYTE PTR [edx-0x19],al
  42515a:	cmp    DWORD PTR [edx-0x4b7a7ed2],ebx
  425160:	dec    ecx
  425161:	jge    0x42519c
  425163:	ror    BYTE PTR [eax+0x2],cl
  425166:	ror    BYTE PTR [ecx+0x58f85479],0x4
  42516d:	jb     0x425157
  42516f:	sub    al,0x33
  425171:	mov    al,ds:0x57c6a26f
  425176:	ja     0x4251dc
  425178:	into   
  425179:	pushf  
  42517a:	fidiv  DWORD PTR [ebx]
  42517c:	dec    edi
  42517d:	fmul   st,st(4)
  42517f:	push   ss
  425180:	fisub  DWORD PTR [edi+0x79da27de]
  425186:	push   ecx
  425187:	mov    bl,0x59
  425189:	inc    esp
  42518a:	mov    ebp,0x5066bfd5
  42518f:	test   BYTE PTR [ebp+0x363eef0e],ah
  425195:	int    0x69
  425197:	lods   eax,DWORD PTR ds:[esi]
  425198:	xchg   BYTE PTR cs:[ecx],dl
  42519b:	mov    ebx,0x5880b141
  4251a0:	mov    cs:0x3f9bdf8f,al
  4251a6:	xor    eax,0xb02fcc01
  4251ab:	mov    eax,0x8d8c1ee9
  4251b0:	cld    
  4251b1:	cmp    al,bl
  4251b3:	xor    bl,dl
  4251b5:	(bad)  [ebp-0x741dc468]
  4251bb:	mov    esp,0x206bc369
  4251c0:	(bad)  
  4251c1:	sti    
  4251c2:	out    dx,eax
  4251c3:	adc    eax,0x8ac5636
  4251c8:	jne    0x425158
  4251ca:	loop   0x42517b
  4251cc:	adc    eax,edx
  4251ce:	pop    eax
  4251cf:	pop    ecx
  4251d0:	or     ah,BYTE PTR [ebx*8-0x663fc1a4]
  4251d7:	sub    esi,DWORD PTR [ecx-0x48]
  4251da:	mov    edi,DWORD PTR [ebx-0x21fccd3f]
  4251e0:	mov    ecx,0x1b7d3532
  4251e5:	jg     0x425194
  4251e7:	test   BYTE PTR ds:0x9f7a0fae,0xf0
  4251ee:	rcr    DWORD PTR [edx-0x57],0xec
  4251f2:	(bad)  [ebx+0x7b5cd136]
  4251f8:	mov    ch,0x4c
  4251fa:	les    esp,FWORD PTR [ecx+0x29550759]
  425200:	pushf  
  425201:	lea    edi,[ecx+0x1467e579]
  425207:	arpl   WORD PTR [eax-0x74fe90ff],si
  42520d:	cmp    edx,DWORD PTR [esi+0x7c967d4b]
  425213:	mov    ebx,ebp
  425215:	dec    eax
  425216:	dec    esi
  425217:	inc    edi
  425218:	mov    al,ds:0xa87a14c4
  42521d:	in     eax,dx
  42521e:	in     al,dx
  42521f:	mov    ah,0x6a
  425221:	mov    bl,bh
  425223:	pop    edi
  425224:	mov    cl,BYTE PTR [ebx-0x4a]
  425227:	shr    DWORD PTR [ecx-0x3b1c2505],1
  42522d:	clc    
  42522e:	dec    esi
  42522f:	aas    
  425230:	or     bh,BYTE PTR [eax-0x25a8b21a]
  425236:	push   ebp
  425237:	dec    edx
  425238:	in     al,0xf7
  42523a:	pop    edi
  42523b:	in     eax,0x8
  42523d:	pop    edi
  42523e:	jb     0x42521b
  425240:	xlat   BYTE PTR ds:[ebx]
  425241:	pop    esp
  425242:	pop    ds
  425243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425244:	(bad)  
  425245:	pusha  
  425246:	cmp    ah,BYTE PTR [esi-0x5d]
  425249:	xor    edx,DWORD PTR [edx]
  42524b:	sahf   
  42524c:	call   0xe6ee:0xde56bc0b
  425253:	xor    al,0x40
  425255:	clc    
  425256:	xchg   ebx,eax
  425257:	dec    edi
  425258:	into   
  425259:	or     eax,0x690f1965
  42525e:	mov    ds:0x5c7257f0,eax
  425263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425264:	or     DWORD PTR [ebx+0x56],0x4ed1349f
  42526b:	shl    DWORD PTR [esi-0x63],0x62
  42526f:	retf   
  425270:	xor    eax,0x2234c2bd
  425275:	retf   
  425276:	push   edx
  425277:	aad    0x14
  425279:	fwait
  42527a:	pop    ss
  42527b:	mov    edx,ebp
  42527d:	bound  eax,QWORD PTR [ebp+ebp*1-0x34]
  425281:	repz jle 0x4252d7
  425284:	fdiv   DWORD PTR ds:0x58470c8a
  42528a:	sbb    eax,0xb618b4c7
  42528f:	stos   DWORD PTR es:[edi],eax
  425290:	jecxz  0x42527b
  425292:	xor    al,0x35
  425294:	jmp    0x5cf8:0x98a105b8
  42529b:	pop    esp
  42529c:	outs   dx,BYTE PTR ds:[esi]
  42529d:	sub    eax,0xcd3f835
  4252a2:	push   0x3b7f6c2
  4252a7:	jns    0x425230
  4252a9:	xchg   ebx,eax
  4252aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252ab:	(bad)  
  4252ac:	jmp    0x4865:0x9870f46a
  4252b3:	outs   dx,DWORD PTR ds:[esi]
  4252b4:	(bad)  
  4252b5:	cdq    
  4252b6:	and    esp,eax
  4252b8:	fisttp QWORD PTR [eax+eax*1]
  4252bb:	add    BYTE PTR [edx],cl
  4252bd:	xchg   edx,eax
  4252be:	jl     0x4252f9
  4252c0:	cld    
  4252c1:	dec    DWORD PTR [edi-0x4d]
  4252c4:	in     al,dx
  4252c5:	jo     0x42527e
  4252c7:	lea    ecx,[edi+eax*4-0x78]
  4252cb:	sbb    eax,0x1cbf4
  4252d0:	xchg   BYTE PTR [edx],al
  4252d2:	add    BYTE PTR [eax],al
  4252d4:	cmp    eax,0x5e46ecc5
  4252d9:	test   DWORD PTR [edx],0x8e495059
  4252df:	adc    BYTE PTR [eax+eiz*2],0x82
  4252e3:	or     al,0x78
  4252e5:	shl    DWORD PTR [ecx+ecx*2-0xb98ec2d],cl
  4252ec:	jne    0x4252c1
  4252ee:	(bad)  
  4252f0:	hlt    
  4252f1:	lahf   
  4252f2:	sbb    BYTE PTR [esi],al
  4252f4:	addr16 popf 
  4252f6:	call   0xb991:0xcc3a56da
  4252fd:	das    
  4252fe:	and    cl,ah
  425300:	sub    cl,0x5b
  425303:	push   edi
  425304:	mov    eax,DWORD PTR [eax-0x20]
  425307:	repnz hlt 
  425309:	mov    edi,DWORD PTR es:[edx*1-0x64b23412]
  425311:	dec    edx
  425312:	test   eax,0x34a39308
  425317:	popf   
  425318:	out    dx,eax
  425319:	mov    eax,ds:0x1a457b1a
  42531e:	jmp    0xcab766cb
  425323:	popf   
  425324:	sbb    BYTE PTR [esi-0x7d1c9dc1],cl
  42532a:	xchg   ebp,eax
  42532b:	int    0x32
  42532d:	daa    
  42532e:	sub    DWORD PTR [eax],esi
  425330:	stos   BYTE PTR es:[edi],al
  425331:	test   BYTE PTR [eax+0x7],0xf0
  425335:	sti    
  425336:	xor    eax,0x7ecdb964
  42533b:	aam    0x1
  42533d:	push   edi
  42533e:	loopne 0x4252db
  425340:	shr    eax,0x75
  425343:	loopne 0x4252d6
  425345:	jle    0x42535a
  425347:	popa   
  425348:	js     0x425335
  42534a:	dec    ecx
  42534b:	shl    BYTE PTR es:[ebx],1
  42534e:	outs   dx,DWORD PTR ds:[esi]
  42534f:	out    0xd2,eax
  425351:	jge    0x42536e
  425353:	xor    ebx,DWORD PTR [ebx-0x3]
  425356:	sbb    bh,BYTE PTR [esi-0x79659a74]
  42535c:	or     DWORD PTR [ebp+0x1155f464],esp
  425362:	dec    edx
  425363:	jne    0x42531e
  425365:	pop    ds
  425366:	arpl   WORD PTR [edi],sp
  425368:	test   al,0x4e
  42536a:	shl    DWORD PTR [edi],0x79
  42536d:	js     0x42539d
  42536f:	jno    0x42538d
  425371:	outs   dx,BYTE PTR ds:[esi]
  425372:	inc    edx
  425373:	cmp    ebp,DWORD PTR [ecx+0x32]
  425376:	outs   dx,BYTE PTR ds:[esi]
  425377:	push   ebx
  425378:	fxtract 
  42537a:	jle    0x425329
  42537c:	add    al,0xeb
  42537e:	mov    WORD PTR [ebx],cs
  425380:	sbb    eax,0xb9c5835d
  425385:	dec    eax
  425386:	pop    ss
  425387:	xor    ebx,ebx
  425389:	ret    
  42538a:	sbb    eax,0xefbefbc5
  42538f:	mov    ah,0x37
  425391:	adc    BYTE PTR [edx],ch
  425393:	and    eax,0x59718b9b
  425398:	xor    BYTE PTR [eax-0x13],ah
  42539b:	leave  
  42539c:	xlat   BYTE PTR ds:[ebx]
  42539d:	in     al,dx
  42539e:	mov    bh,0x47
  4253a0:	xchg   ebp,eax
  4253a1:	outs   dx,BYTE PTR ds:[esi]
  4253a2:	or     ah,BYTE PTR [eax]
  4253a4:	ds xchg edx,eax
  4253a6:	loopne 0x42535e
  4253a8:	xor    edi,esi
  4253aa:	dec    ebx
  4253ab:	mov    al,ds:0x9c194043
  4253b0:	dec    eax
  4253b1:	and    DWORD PTR [edi],ebp
  4253b3:	call   0x4c87302d
  4253b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253b9:	pmaddwd mm0,QWORD PTR [edi-0x7b1fb49b]
  4253c0:	fs pop eax
  4253c2:	iret   
  4253c3:	fdiv   QWORD PTR [edx]
  4253c5:	inc    esi
  4253c6:	sbb    DWORD PTR [ebx],eax
  4253c8:	sbb    eax,0x1edec12f
  4253cd:	shl    DWORD PTR [eax-0xbaf5e31],1
  4253d3:	sub    bh,BYTE PTR [edx-0x19]
  4253d6:	ins    DWORD PTR es:[edi],dx
  4253d7:	pop    edi
  4253d8:	leave  
  4253d9:	fldenv [ecx-0x680df747]
  4253df:	sbb    BYTE PTR [ecx+0x5d],0xc8
  4253e3:	jo     0x425455
  4253e5:	push   ebp
  4253e6:	pusha  
  4253e7:	fwait
  4253e8:	out    0x95,al
  4253ea:	rcr    DWORD PTR [edi],0xf7
  4253ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253ee:	sub    eax,0xf0c13e3b
  4253f3:	int3   
  4253f4:	test   eax,0x36ebbe15
  4253f9:	cmp    ah,bl
  4253fb:	sbb    DWORD PTR [ebx-0x130c41cf],esi
  425401:	and    BYTE PTR [esi],al
  425403:	lock push 0x5d8e9af
  425409:	in     al,0x34
  42540b:	sbb    BYTE PTR [ecx+0x2f568bdb],ch
  425411:	repz mov ebp,DWORD PTR [ecx+0x7e]
  425415:	xchg   edi,eax
  425416:	xchg   ebp,eax
  425417:	mov    eax,ds:0xaa9ffd0e
  42541c:	inc    ebp
  42541d:	stos   DWORD PTR es:[edi],eax
  42541e:	and    al,0x3
  425420:	add    esi,edi
  425422:	pop    ecx
  425423:	jle    0x4253a5
  425425:	mov    esp,0xfbb25bc1
  42542a:	mov    ebp,0x8a19a46
  42542f:	int3   
  425430:	mov    eax,ds:0x68ccfde4
  425435:	push   es
  425436:	es retf 
  425438:	(bad)  
  425439:	or     DWORD PTR [edx],edx
  42543b:	jbe    0x42547d
  42543d:	and    dh,cl
  42543f:	aad    0xf9
  425441:	fst    DWORD PTR [edx+eiz*8]
  425444:	gs push ds
  425446:	xchg   ebx,eax
  425447:	iret   
  425448:	adc    al,0xe0
  42544a:	outs   dx,DWORD PTR ds:[esi]
  42544b:	mov    ah,0xe9
  42544d:	repz adc ecx,ebx
  425450:	xchg   esi,eax
  425451:	add    eax,0xf176fe69
  425456:	inc    esi
  425457:	jge    0x4253dc
  425459:	mov    ebx,0x1a6e3de5
  42545e:	dec    esi
  42545f:	mov    ?,ecx
  425461:	retf   0xd729
  425464:	nop
  425465:	push   edi
  425466:	test   al,0x99
  425468:	fwait
  425469:	nop
  42546a:	cld    
  42546b:	mov    edi,0x2460986a
  425470:	popa   
  425471:	and    edx,DWORD PTR [edi-0x61]
  425474:	cwde   
  425475:	xchg   DWORD PTR ds:0x83ddb51b,edx
  42547b:	out    dx,al
  42547c:	cwde   
  42547d:	jl     0x425426
  42547f:	mov    ds:0x4ffb27c4,eax
  425484:	mov    edx,0x9e8643db
  425489:	mov    dl,0xb3
  42548b:	jg     0x42543a
  42548d:	neg    BYTE PTR [esi+0x7e]
  425490:	jae    0x42543b
  425492:	pusha  
  425493:	add    dl,BYTE PTR [ecx]
  425495:	mov    edx,0xb53d837c
  42549a:	or     al,0xe0
  42549c:	dec    esp
  42549d:	xchg   esi,eax
  42549e:	in     al,dx
  42549f:	fucomip st,st(7)
  4254a1:	mov    WORD PTR [ebx-0x22],ds
  4254a4:	mov    edi,0xd0c9f719
  4254a9:	jmp    0x5220edba
  4254ae:	and    BYTE PTR [ecx-0x1a],ah
  4254b1:	xor    al,0xaf
  4254b3:	cmp    DWORD PTR [edx],0x49
  4254b6:	imul   esi,DWORD PTR [edi+0x7882370b],0x70ff5f9f
  4254c0:	sbb    eax,0x2ab8c10c
  4254c5:	mov    ebp,0x5151e236
  4254ca:	pop    esp
  4254cb:	not    BYTE PTR [ebx]
  4254cd:	and    eax,DWORD PTR [eax]
  4254cf:	push   ecx
  4254d0:	mov    al,0x37
  4254d2:	adc    cl,BYTE PTR ds:0xcceca51a
  4254d8:	adc    dh,BYTE PTR [eax+0x32]
  4254db:	or     DWORD PTR [edi],ebp
  4254dd:	dec    ecx
  4254de:	retf   
  4254df:	cmp    BYTE PTR [esi+edx*1+0x64],dh
  4254e3:	pop    edi
  4254e4:	popf   
  4254e5:	aad    0x9e
  4254e7:	xchg   edi,eax
  4254e8:	(bad)  
  4254e9:	dec    ebp
  4254ea:	shr    DWORD PTR [ecx+0x72045314],0x89
  4254f1:	cmp    BYTE PTR [eax],bh
  4254f3:	push   esi
  4254f4:	or     eax,0x5ef6e7a7
  4254f9:	adc    BYTE PTR [ecx-0x20],dl
  4254fc:	jg     0x425486
  4254fe:	cmp    BYTE PTR [edi-0x7],ah
  425501:	push   ecx
  425502:	sub    eax,0x58d76c6c
  425507:	dec    edx
  425508:	sbb    al,0x33
  42550a:	(bad)  
  42550b:	arpl   WORD PTR [ebp-0x54],dx
  42550e:	call   DWORD PTR [edi]
  425510:	out    dx,al
  425511:	scas   al,BYTE PTR es:[edi]
  425512:	push   0x3ea8684b
  425517:	jns    0x42555e
  425519:	(bad)  
  42551b:	int    0x42
  42551d:	adc    DWORD PTR [ecx],edx
  42551f:	test   DWORD PTR [edx+edi*4+0x1],edi
  425523:	xor    al,0xf6
  425525:	jmp    0x8381bd38
  42552a:	enter  0x222a,0x20
  42552e:	(bad)  
  42552f:	fnsave [eax-0x2a]
  425532:	add    edx,DWORD PTR [eax]
  425534:	push   es
  425535:	add    esp,DWORD PTR [eax-0x8]
  425538:	repz mov ah,0x7d
  42553b:	mov    ebp,0x546b65e7
  425540:	mov    esp,0x1a7502c5
  425545:	add    eax,0x65899f3a
  42554a:	pop    ecx
  42554b:	inc    ecx
  42554c:	rcl    BYTE PTR [ecx+0x3],cl
  42554f:	test   BYTE PTR [esi+0x25],0x6
  425553:	out    0xdc,al
  425555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425556:	clc    
  425557:	jecxz  0x425574
  425559:	les    eax,FWORD PTR [eax]
  42555b:	add    bl,al
  42555d:	and    ecx,edx
  42555f:	dec    eax
  425560:	repz clc 
  425562:	fld    TBYTE PTR [ebx+0x202892a0]
  425568:	fdiv   QWORD PTR [eax-0x318599e6]
  42556e:	add    DWORD PTR [eax],eax
  425570:	xchg   BYTE PTR [edx],al
  425572:	add    BYTE PTR [eax],al
  425574:	ins    BYTE PTR es:[edi],dx
  425575:	sub    edi,edi
  425577:	mov    esp,0x535192eb
  42557c:	ins    BYTE PTR es:[edi],dx
  42557d:	push   cs
  42557e:	cs aad 0xd5
  425581:	and    eax,ebx
  425583:	(bad)  
  425585:	or     DWORD PTR [ecx+0x1c],edx
  425588:	dec    esi
  425589:	(bad)  
  42558a:	mov    bl,0xa5
  42558c:	mov    WORD PTR [edi+0x49],es
  42558f:	cwde   
  425590:	jae    0x4255b0
  425592:	je     0x42554d
  425594:	or     eax,0x46
  425597:	sub    al,0x83
  425599:	mov    ebx,0x6e78cc6f
  42559e:	aam    0xc2
  4255a0:	mov    al,0xfb
  4255a2:	xchg   ebx,eax
  4255a3:	xchg   ebp,ecx
  4255a5:	iret   
  4255a6:	addr16 call esp
  4255a9:	push   ebp
  4255aa:	dec    edi
  4255ab:	mov    edi,0x71098a80
  4255b0:	stc    
  4255b1:	mov    ebx,ebx
  4255b3:	test   BYTE PTR [ecx-0x9353f7b],0x49
  4255ba:	loopne 0x4255ed
  4255bc:	inc    ebp
  4255bd:	inc    edx
  4255be:	inc    ecx
  4255bf:	aaa    
  4255c0:	test   eax,0x275aac4a
  4255c5:	cmp    al,0x61
  4255c7:	push   esi
  4255c8:	test   BYTE PTR [edx],al
  4255ca:	jne    0x425566
  4255cc:	out    dx,eax
  4255cd:	xor    bl,BYTE PTR [ebx-0x54f75e60]
  4255d3:	mov    ch,0x77
  4255d5:	ins    BYTE PTR es:[edi],dx
  4255d6:	sub    eax,0x3f8c923f
  4255db:	(bad)  
  4255dc:	icebp  
  4255dd:	mov    ds:0xf2939b07,al
  4255e2:	xor    DWORD PTR [ecx-0xe1cb3ac],0x8
  4255e9:	mov    ds:0x43f4867d,al
  4255ee:	aam    0xa0
  4255f0:	mov    ebx,0x9a584a05
  4255f5:	push   0xffffff99
  4255f7:	sbb    BYTE PTR [edx+ecx*1+0x200d91e1],bl
  4255fe:	ja     0x4255e4
  425600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425601:	or     edi,ebx
  425603:	mov    bl,0x24
  425605:	fmulp  st(7),st
  425607:	inc    edx
  425608:	xchg   esp,eax
  425609:	leave  
  42560a:	fwait
  42560b:	push   eax
  42560c:	outs   dx,BYTE PTR ds:[esi]
  42560d:	pop    esi
  42560e:	lock dec eax
  425610:	mov    eax,ds:0xb30fdf24
  425615:	stc    
  425616:	mov    ds:0x1e165e9d,eax
  42561b:	push   ebp
  42561c:	xor    BYTE PTR [esi],ah
  42561e:	push   edi
  42561f:	cmp    DWORD PTR [edx+0x61cc5ab],esp
  425625:	xchg   ecx,eax
  425626:	dec    esi
  425627:	fadd   QWORD PTR cs:[edi]
  42562a:	push   ebp
  42562b:	fld    TBYTE PTR [edx+edx*2]
  42562e:	ins    BYTE PTR es:[edi],dx
  42562f:	jae    0x4255ca
  425631:	cmp    BYTE PTR [ecx+0x9],bh
  425634:	fwait
  425635:	add    BYTE PTR [esi-0x50],0x78
  425639:	and    DWORD PTR [edx],0x78394e28
  42563f:	cmp    ecx,ebp
  425641:	outs   dx,BYTE PTR es:[esi]
  425643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425644:	arpl   bp,dx
  425646:	mov    ebx,0x9f87fc2c
  42564b:	test   BYTE PTR ds:0x53d53a35,dh
  425651:	mov    dl,bl
  425653:	push   eax
  425654:	enter  0xf2aa,0x9c
  425658:	add    DWORD PTR [ebp-0x52],edi
  42565b:	push   eax
  42565c:	add    cl,BYTE PTR [ecx-0xa]
  42565f:	push   edi
  425660:	mov    bh,ah
  425662:	retf   0x5e
  425665:	cld    
  425666:	mov    edx,DWORD PTR [ebp+0x3d]
  425669:	xchg   esi,eax
  42566a:	mov    esp,0x6dd5ccac
  42566f:	mov    ch,0x97
  425671:	sub    eax,0x90462d3b
  425676:	es pop esi
  425678:	shr    BYTE PTR [esi-0x6f45905b],0x52
  42567f:	jne    0x425675
  425681:	rcl    DWORD PTR [ebx-0x26],1
  425684:	mov    al,ds:0xcddcccea
  425689:	and    eax,0xcaeab0f7
  42568e:	stos   DWORD PTR es:[edi],eax
  42568f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425690:	ret    
  425691:	gs (bad) 
  425693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425694:	pusha  
  425695:	xor    DWORD PTR [ebx-0x3],esi
  425698:	int3   
  425699:	adc    BYTE PTR [edi-0x65],dh
  42569c:	repnz in al,0xd5
  42569f:	jae    0x4256c1
  4256a1:	inc    edx
  4256a2:	add    dl,ah
  4256a4:	(bad)  
  4256a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256a6:	jbe    0x4256c1
  4256a8:	in     eax,0xe0
  4256aa:	push   eax
  4256ab:	leave  
  4256ac:	mov    ecx,0x372a697f
  4256b1:	sub    ch,cl
  4256b3:	fwait
  4256b4:	add    DWORD PTR [ebx],0x62
  4256b7:	add    bh,0x43
  4256ba:	arpl   si,si
  4256bc:	sbb    ebx,DWORD PTR [ebx+0x71]
  4256bf:	jo     0x425682
  4256c1:	cld    
  4256c2:	inc    BYTE PTR [esi+edi*8]
  4256c5:	or     al,BYTE PTR [eax]
  4256c7:	dec    edi
  4256c8:	adc    ecx,DWORD PTR [edi+edx*2-0x17e1ba4c]
  4256cf:	add    BYTE PTR [esi+0x6a],bh
  4256d2:	pop    ds
  4256d3:	adc    esp,edx
  4256d5:	ret    0x2a74
  4256d8:	xor    ebx,edx
  4256da:	clc    
  4256db:	dec    esp
  4256dc:	mov    bh,dh
  4256de:	lods   al,BYTE PTR ds:[esi]
  4256df:	lods   eax,DWORD PTR ds:[esi]
  4256e0:	lods   eax,DWORD PTR ds:[esi]
  4256e1:	jno    0x4256d9
  4256e3:	(bad)  
  4256e4:	je     0x425718
  4256e6:	jg     0x4256d4
  4256e8:	sub    dh,BYTE PTR [eax]
  4256ea:	push   0x5efa718e
  4256ef:	push   edx
  4256f0:	or     BYTE PTR [ebx+0x28],dh
  4256f3:	mov    dl,0x6d
  4256f5:	int3   
  4256f6:	mov    ebx,DWORD PTR ds:0x3aa17de1
  4256fc:	cmp    al,0xad
  4256fe:	inc    ecx
  4256ff:	dec    eax
  425700:	outs   dx,DWORD PTR ds:[esi]
  425701:	fisub  DWORD PTR [eax-0x3dc6504]
  425707:	popa   
  425708:	pop    ecx
  425709:	dec    ebp
  42570a:	or     cl,BYTE PTR [esi-0x45]
  42570d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42570e:	and    DWORD PTR es:[edi+0x66],esi
  425712:	mov    ah,0x30
  425714:	cmp    eax,0xe820060f
  425719:	jmp    0x4388:0x35399749
  425720:	gs pop ds
  425722:	pop    edi
  425724:	mov    cl,0x20
  425726:	in     al,0xdc
  425728:	bound  edi,QWORD PTR [edx+0x378e52a8]
  42572e:	loop   0x4256b5
  425730:	sub    DWORD PTR [edi],esi
  425732:	mov    BYTE PTR [esi+0x3b],cl
  425735:	ja     0x4256cb
  425737:	(bad)  
  425738:	in     eax,dx
  425739:	in     al,dx
  42573a:	gs ds inc ebx
  42573d:	pop    ebx
  42573e:	and    al,0x86
  425740:	dec    esi
  425741:	cmp    eax,0x5dad8457
  425746:	fistp  WORD PTR [edx+0x49485836]
  42574c:	in     al,dx
  42574d:	push   edx
  42574e:	push   esp
  42574f:	lock mov cl,BYTE PTR [edi+0x4e]
  425753:	push   ecx
  425754:	in     al,dx
  425755:	clc    
  425756:	mov    ebp,0x7fa0c82c
  42575b:	div    DWORD PTR ds:0x339bf547
  425761:	in     eax,0x85
  425763:	gs stc 
  425765:	xchg   edi,eax
  425766:	jle    0x425731
  425768:	mov    ebx,0xd10de8bc
  42576d:	rcr    DWORD PTR [edi],0xe1
  425770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425771:	xchg   DWORD PTR [ebx+ebx*4-0x25184283],ebp
  425778:	or     bl,0x0
  42577b:	mov    edi,DWORD PTR [ecx-0x4eed4ad5]
  425781:	std    
  425782:	imul   esp,esi,0x7c78c498
  425788:	std    
  425789:	push   ebx
  42578a:	adc    DWORD PTR [edi-0x21],ebx
  42578d:	xchg   BYTE PTR [esp+edi*2],al
  425790:	add    eax,0xd845949
  425795:	mov    DWORD PTR [ebp+0x7c],esi
  425798:	sub    eax,0xb1955a33
  42579d:	push   ecx
  42579e:	ins    DWORD PTR es:[edi],dx
  42579f:	int3   
  4257a0:	pop    ecx
  4257a1:	iret   
  4257a2:	fisttp QWORD PTR [edx]
  4257a4:	inc    esi
  4257a5:	inc    ebp
  4257a6:	mov    BYTE PTR [edi],bh
  4257a8:	cmp    cl,BYTE PTR [ebx-0x7a9c14fe]
  4257ae:	jl     0x4257e4
  4257b0:	int3   
  4257b1:	cmc    
  4257b2:	mov    ds:0x8577395a,al
  4257b7:	jle    0x42578f
  4257b9:	xchg   ebx,eax
  4257ba:	mov    ah,0xf3
  4257bc:	and    BYTE PTR [esi],ah
  4257be:	pop    ss
  4257bf:	in     eax,dx
  4257c0:	adc    bl,BYTE PTR [ecx-0x8]
  4257c3:	add    BYTE PTR [eax],dl
  4257c5:	jp     0x4257a9
  4257c7:	pop    ds
  4257c8:	icebp  
  4257c9:	scas   eax,DWORD PTR es:[edi]
  4257ca:	push   edx
  4257cb:	push   edx
  4257cc:	sub    ebp,DWORD PTR [eax+ecx*8-0x5d844164]
  4257d3:	cli    
  4257d4:	push   ecx
  4257d5:	pop    edi
  4257d6:	sbb    al,0x85
  4257d8:	in     eax,dx
  4257d9:	and    DWORD PTR [ebx-0x74924461],edx
  4257df:	ret    0xb5fa
  4257e2:	lea    esp,[ebp+edx*4-0x10]
  4257e6:	mov    eax,ds:0x4cd03221
  4257eb:	outs   dx,BYTE PTR ds:[esi]
  4257ec:	jge    0x42586d
  4257ee:	xor    cl,BYTE PTR [ecx+0x3efd8b25]
  4257f4:	pop    esp
  4257f5:	dec    ecx
  4257f6:	les    esp,FWORD PTR [ecx+0x4f76]
  4257fc:	call   0x9eff:0xefe9ef59
  425803:	jnp    0x425848
  425805:	pop    ebp
  425806:	pop    esp
  425807:	mov    cl,0xdc
  425809:	jle    0x42579f
  42580b:	sub    eax,DWORD PTR [eax]
  42580d:	rol    DWORD PTR [ecx],1
  42580f:	add    BYTE PTR [esi+0x3c000002],al
  425815:	mov    dl,0xb5
  425817:	out    0xfd,al
  425819:	mov    eax,ds
  42581b:	dec    esi
  42581c:	cwde   
  42581d:	sti    
  42581e:	aaa    
  42581f:	jno    0x425853
  425821:	test   BYTE PTR [ebp+0x7902917c],dl
  425827:	retf   
  425828:	inc    ecx
  425829:	xchg   edx,eax
  42582a:	mov    WORD PTR [ecx],ss
  42582c:	xchg   ebx,eax
  42582d:	lods   eax,DWORD PTR ds:[esi]
  42582e:	mov    dh,0x5d
  425830:	fnstenv [edx+0x1c3aafd3]
  425836:	jne    0x425815
  425838:	adc    al,0xb4
  42583a:	ins    BYTE PTR es:[edi],dx
  42583b:	pop    es
  42583c:	jne    0x42589b
  42583e:	jecxz  0x4258ae
  425840:	mov    ch,0x3a
  425842:	leave  
  425843:	(bad)  
  425844:	lods   eax,DWORD PTR ds:[esi]
  425845:	and    al,0xc8
  425847:	cwde   
  425848:	jg     0x4258b0
  42584a:	jo     0x4258a9
  42584c:	lea    edi,[edx-0x3d4eb940]
  425852:	bnd jno 0x425816
  425855:	push   ss
  425856:	js     0x425871
  425858:	mov    ds:0x4be19b7a,al
  42585d:	sub    eax,0x5320b74f
  425862:	data16 sbb ch,dl
  425865:	xor    ebx,esp
  425867:	or     esp,DWORD PTR [eax-0x3a]
  42586a:	out    0xaa,al
  42586c:	add    DWORD PTR [ebx+ebx*1],esi
  42586f:	repz pop es
  425871:	sub    al,0x3a
  425873:	loop   0x425813
  425875:	dec    eax
  425876:	imul   cx,WORD PTR [esi-0x4acc7ad5],0xdc3
  42587f:	aad    0xed
  425881:	mov    edi,0xc53d7b92
  425886:	outs   dx,BYTE PTR ds:[esi]
  425887:	lea    ebp,[ecx+0x4c]
  42588a:	dec    edi
  42588b:	fisubr DWORD PTR [eax-0xf]
  42588e:	in     eax,0x27
  425890:	cmp    al,0x68
  425892:	out    dx,al
  425893:	mov    ds:0x5834beb6,eax
  425898:	retf   
  425899:	lea    esi,[edi-0x35]
  42589c:	sub    al,0x18
  42589e:	sbb    bl,cl
  4258a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258a1:	inc    ebx
  4258a2:	int    0x49
  4258a4:	adc    dl,BYTE PTR [ecx-0x57b40a90]
  4258aa:	imul   ebx,DWORD PTR [ebp-0x68],0xffffffb6
  4258ae:	icebp  
  4258af:	(bad)  
  4258b1:	mov    WORD PTR [eax-0x5adf5249],cs
  4258b7:	pop    sp
  4258b9:	fs aas 
  4258bb:	(bad)  
  4258bc:	or     eax,esi
  4258be:	cmp    DWORD PTR [esi],0x5c
  4258c1:	pop    ecx
  4258c2:	xchg   DWORD PTR [eax-0x23],ebx
  4258c5:	inc    ecx
  4258c6:	xchg   ebp,eax
  4258c7:	not    DWORD PTR [esi-0x25]
  4258ca:	xor    BYTE PTR [ecx-0x76],cl
  4258cd:	mov    cs,WORD PTR [edi]
  4258cf:	rol    DWORD PTR [ecx+0x44],cl
  4258d2:	mov    eax,cs:0x6e4a3214
  4258d8:	inc    edi
  4258d9:	jo     0x425863
  4258db:	cmp    BYTE PTR [eax],0x44
  4258de:	xor    eax,0xe9978162
  4258e3:	leave  
  4258e4:	sbb    DWORD PTR [ebp-0x6611493],0xfd693fe4
  4258ee:	shr    DWORD PTR [ebx-0x60fe3aec],1
  4258f4:	push   esp
  4258f5:	dec    ecx
  4258f6:	jp     0x4258ca
  4258f8:	xor    cl,bl
  4258fa:	inc    esp
  4258fb:	(bad)  
  4258fc:	fmul   DWORD PTR [edi+0x27188762]
  425902:	jmp    0x4258d7
  425904:	mov    edx,0x976b44b7
  425909:	cdq    
  42590a:	aam    0xb3
  42590c:	mov    ebp,0x225fb387
  425911:	sbb    BYTE PTR [ebp+0x2a],cl
  425914:	test   BYTE PTR [edx+esi*4+0x3d],bl
  425918:	retf   
  425919:	pushf  
  42591a:	fldenv cs:[ebx-0x38]
  42591e:	les    esp,FWORD PTR [eax-0x21ce31df]
  425924:	mov    al,0x3b
  425926:	mov    ecx,0xa1c83073
  42592b:	sbb    DWORD PTR [ebx-0x6a2d0b3],0x2b7fdea0
  425935:	adc    al,bh
  425937:	mov    al,0xaf
  425939:	pop    esp
  42593a:	add    eax,0x6fd272ce
  42593f:	pushf  
  425940:	sbb    ah,BYTE PTR [eax-0x4f]
  425943:	(bad)  [ecx-0x4104d794]
  425949:	cmp    eax,0xfd1d4dd
  42594e:	or     eax,0xcfe4bf41
  425953:	div    BYTE PTR [ecx-0x7bf5fa85]
  425959:	xchg   edx,eax
  42595a:	das    
  42595b:	fnsave [ecx+ecx*2-0x42a7cf47]
  425962:	ror    DWORD PTR [edx+0x6e],1
  425965:	push   0x19
  425967:	es mov bl,0xb0
  42596a:	daa    
  42596b:	in     al,dx
  42596c:	lock push 0xc87d0881
  425972:	sub    BYTE PTR [ebx],bl
  425974:	mov    ds:0xed0dd9c5,al
  425979:	aas    
  42597a:	xchg   DWORD PTR [ebx],esi
  42597c:	fiadd  DWORD PTR [ebx+0x1]
  42597f:	and    DWORD PTR [ebx+ebp*8-0xd64b23f],ecx
  425986:	cmp    eax,0xc495f243
  42598b:	jle    0x425911
  42598d:	push   0x3568be93
  425992:	std    
  425993:	iret   
  425994:	loopne 0x42594f
  425996:	in     al,dx
  425997:	arpl   WORD PTR [ebp-0x71],si
  42599a:	std    
  42599b:	or     DWORD PTR [esi+0x14a25cd4],esp
  4259a1:	push   esp
  4259a2:	int    0xad
  4259a4:	ins    BYTE PTR es:[edi],dx
  4259a5:	cmp    dh,dh
  4259a7:	pop    esp
  4259a8:	sub    dl,BYTE PTR [eax+0x4820130d]
  4259ae:	pop    edi
  4259af:	mov    bl,0x10
  4259b1:	test   cl,al
  4259b3:	jne    0x425950
  4259b5:	dec    esi
  4259b6:	push   DWORD PTR [esi+ecx*4-0x44939c71]
  4259bd:	fcomp  DWORD PTR [ecx-0x39f0de4d]
  4259c3:	mov    eax,0xfc6f125a
  4259c8:	cli    
  4259c9:	fmul   DWORD PTR ds:0x3418607c
  4259cf:	out    dx,eax
  4259d0:	and    al,0xb2
  4259d2:	mov    al,0xb3
  4259d4:	fnsave [edx]
  4259d6:	retf   
  4259d7:	jbe    0x4259a5
  4259d9:	sbb    eax,edx
  4259db:	nop
  4259dc:	stc    
  4259dd:	inc    ebp
  4259de:	add    BYTE PTR [edi-0x42],cl
  4259e1:	(bad)  
  4259e2:	and    BYTE PTR [eax+edi*1-0x43],dl
  4259e6:	mov    ds:0x4d65ef8,eax
  4259eb:	push   fs
  4259ed:	outs   dx,BYTE PTR ds:[esi]
  4259ee:	xor    esp,esp
  4259f0:	mov    ebx,0x8e3bdedf
  4259f5:	out    0xdf,al
  4259f7:	inc    ebp
  4259f8:	sti    
  4259f9:	inc    esp
  4259fa:	inc    edx
  4259fb:	sub    al,BYTE PTR [ecx-0x52]
  4259fe:	push   edi
  4259ff:	or     BYTE PTR [esi+0x2f],al
  425a02:	(bad)  
  425a04:	loopne 0x425a70
  425a06:	dec    eax
  425a07:	jmp    0x2cff2369
  425a0c:	mov    DWORD PTR [ebx-0x5],ecx
  425a0f:	push   esi
  425a10:	pop    ebp
  425a11:	(bad)  
  425a12:	mov    ch,0x92
  425a14:	repnz outs dx,DWORD PTR ds:[esi]
  425a16:	sti    
  425a17:	pop    bp
  425a19:	iret   
  425a1a:	clc    
  425a1b:	or     eax,0xa47db87d
  425a20:	push   eax
  425a21:	mov    ebx,0xd3a33c20
  425a26:	xor    BYTE PTR [ebp+ecx*1-0x34],dh
  425a2a:	adc    BYTE PTR [esi+0x466dcc42],dl
  425a30:	mov    dl,BYTE PTR [edx]
  425a32:	mov    dh,0x1d
  425a34:	mov    ah,0x5f
  425a36:	mov    eax,0x70f67b30
  425a3b:	push   DWORD PTR [esi+eax*8-0x35fa7452]
  425a42:	push   es
  425a43:	fsubr  DWORD PTR [eax+0x25]
  425a46:	loop   0x425abf
  425a48:	add    ch,BYTE PTR [ebx-0x2]
  425a4b:	adc    al,0x4a
  425a4d:	push   ds
  425a4e:	int    0x4e
  425a50:	jge    0x425a0e
  425a52:	scas   al,BYTE PTR es:[edi]
  425a53:	jmp    FWORD PTR [esi]
  425a55:	ins    DWORD PTR es:[edi],dx
  425a56:	cmp    ch,BYTE PTR [edi-0x2ca79f3]
  425a5c:	repnz retf 
  425a5e:	rcr    DWORD PTR [esi-0x49],cl
  425a61:	adc    bl,BYTE PTR [ebx+0x5f6a390d]
  425a67:	mov    edi,0xeb51a997
  425a6c:	adc    al,0x34
  425a6e:	fisub  DWORD PTR [eax]
  425a70:	and    eax,ecx
  425a72:	or     eax,0x75b6cd26
  425a77:	ins    DWORD PTR es:[edi],dx
  425a78:	cmp    dl,dl
  425a7a:	and    ch,dl
  425a7c:	aas    
  425a7d:	(bad)  
  425a7e:	mov    esp,0xda6c95c4
  425a83:	test   DWORD PTR [edx],ebx
  425a85:	hlt    
  425a86:	xor    al,0x81
  425a88:	xor    ecx,DWORD PTR [edx]
  425a8a:	xor    eax,0x2cfe3780
  425a8f:	pushf  
  425a90:	cli    
  425a91:	popa   
  425a92:	and    dh,BYTE PTR [ebp-0x3cbb4791]
  425a98:	retf   0xfd
  425a9b:	add    BYTE PTR [ebp+0x4f3707c0],cl
  425aa1:	idiv   DWORD PTR [ebp+0x532a00fa]
  425aa7:	frstor [ecx-0x794f2bb7]
  425aad:	rol    DWORD PTR [ecx],cl
  425aaf:	add    BYTE PTR [esi-0x79fffffe],al
  425ab5:	mov    esp,0x874ced26
  425aba:	enter  0xd3d2,0x49
  425abe:	out    dx,eax
  425abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ac0:	shl    BYTE PTR [ebx],1
  425ac2:	or     ch,ch
  425ac4:	or     edx,esp
  425ac6:	pop    ecx
  425ac7:	mov    ecx,0xa6629fa9
  425acc:	adc    eax,esp
  425ace:	imul   ebx,DWORD PTR [eax+esi*8],0xfffffffb
  425ad2:	and    edx,esi
  425ad4:	lods   eax,DWORD PTR ds:[esi]
  425ad5:	xor    eax,0x71a8e1c4
  425ada:	das    
  425adb:	inc    esp
  425adc:	mov    eax,ds:0x6d8bd701
  425ae1:	push   esp
  425ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ae3:	test   eax,0x70355612
  425ae8:	or     eax,0x211495ff
  425aed:	pop    ecx
  425aee:	add    al,0x72
  425af0:	(bad)  
  425af1:	xlat   BYTE PTR ds:[ebx]
  425af2:	adc    bh,cl
  425af4:	clc    
  425af5:	mov    cl,0x21
  425af7:	mov    ds,WORD PTR [eax+0x14]
  425afa:	xlat   BYTE PTR ds:[ebx]
  425afb:	mov    ch,0x13
  425afd:	mov    dh,0x53
  425aff:	jb     0x425af8
  425b01:	mov    al,0xa
  425b03:	mov    BYTE PTR [eax+0x60],bh
  425b06:	push   edi
  425b07:	test   BYTE PTR [ebp+0x7830bafb],0x47
  425b0e:	aad    0x1f
  425b10:	pop    edx
  425b11:	and    eax,0x173c2126
  425b16:	pop    ds
  425b17:	xor    BYTE PTR [eax],dl
  425b19:	das    
  425b1a:	mov    ebx,0x826c9321
  425b1f:	add    esp,edx
  425b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b22:	fstp   QWORD PTR [ebx-0x32]
  425b25:	inc    ecx
  425b26:	sbb    ecx,DWORD PTR [edi+0x58ce9a5c]
  425b2c:	jae    0x425ae0
  425b2e:	stos   DWORD PTR es:[edi],eax
  425b2f:	xchg   edi,eax
  425b30:	jo     0x425af0
  425b32:	fbstp  TBYTE PTR [edi+ebx*2+0x315f2517]
  425b39:	(bad)  
  425b3a:	cld    
  425b3b:	pop    edi
  425b3c:	sbb    esi,esp
  425b3e:	mov    esp,0xd41e43f7
  425b43:	cmp    ch,BYTE PTR [eax-0x8]
  425b46:	xor    DWORD PTR [eax+ebp*1-0x47],edx
  425b4a:	mov    ch,0x63
  425b4c:	jo     0x425b87
  425b4e:	or     ecx,ebx
  425b50:	push   edx
  425b51:	lods   al,BYTE PTR ds:[esi]
  425b52:	push   edx
  425b53:	scas   eax,DWORD PTR es:[edi]
  425b54:	pusha  
  425b55:	dec    esp
  425b56:	stos   DWORD PTR es:[edi],eax
  425b57:	sub    bl,BYTE PTR [edi-0x73]
  425b5a:	jb     0x425b51
  425b5c:	loop   0x425b02
  425b5e:	sub    esp,DWORD PTR ds:0x720e72ca
  425b64:	jp     0x425bd1
  425b66:	mov    BYTE PTR [edx-0x1b],al
  425b69:	xor    edi,ebp
  425b6b:	repnz sbb dh,BYTE PTR [ebx-0x538b7261]
  425b72:	cwde   
  425b73:	mov    al,ds:0x47c62555
  425b78:	push   esi
  425b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b7a:	mov    al,BYTE PTR ds:0xe9f07b46
  425b80:	imul   edx,DWORD PTR [esi-0x20],0x28c39d01
  425b87:	fisub  WORD PTR [ebp+0x44]
  425b8a:	adc    BYTE PTR [ebp-0x2a0a2a96],0x9f
  425b91:	adc    edi,DWORD PTR [ebp-0x77]
  425b94:	xchg   edx,eax
  425b95:	nop
  425b96:	mov    edi,0xa9e3518f
  425b9b:	push   ebx
  425b9c:	call   0x620e6ee2
  425ba1:	bound  esp,QWORD PTR [esi-0x6146eb56]
  425ba7:	loop   0x425c24
  425ba9:	add    esp,edi
  425bab:	dec    edx
  425bac:	sar    bl,0x3d
  425baf:	sub    eax,0x8f1f9459
  425bb4:	bound  eax,QWORD PTR [esi+ebx*2-0x5c935e62]
  425bbb:	sbb    BYTE PTR [edi-0x5a9aee73],dh
  425bc1:	push   ds
  425bc2:	fisttp WORD PTR [ebx-0x1e4bada9]
  425bc8:	ret    0xdb1d
  425bcb:	sub    BYTE PTR [ebp+0x4ab6d509],0xef
  425bd2:	xor    ah,BYTE PTR [eax+ecx*2]
  425bd5:	imul   ecx,DWORD PTR [ecx+0x1eb9ecd7],0x1d41528f
  425bdf:	jl     0x425c37
  425be1:	test   DWORD PTR [edi+0x36],esi
  425be4:	dec    edx
  425be5:	aad    0x94
  425be7:	repz pop eax
  425be9:	sub    DWORD PTR [ebx-0x68],ecx
  425bec:	not    DWORD PTR [eax-0x78cc0fc6]
  425bf2:	sub    DWORD PTR [ecx],edi
  425bf4:	popa   
  425bf5:	xchg   esi,edi
  425bf7:	aam    0x88
  425bf9:	add    eax,0xc94db4d9
  425bfe:	and    ebp,DWORD PTR [esi]
  425c00:	lods   eax,DWORD PTR ds:[esi]
  425c01:	sub    edi,DWORD PTR [ebp-0x6]
  425c04:	(bad)  
  425c06:	and    eax,0x1a63dbb4
  425c0b:	add    eax,0xe8f5dcf
  425c10:	dec    eax
  425c11:	push   esp
  425c12:	les    ebx,FWORD PTR [ebp-0x69]
  425c15:	hlt    
  425c16:	dec    esp
  425c17:	sahf   
  425c18:	sbb    ebp,esi
  425c1a:	fwait
  425c1b:	mov    esi,0x8389002d
  425c20:	push   ds
  425c21:	push   cs
  425c22:	test   bl,bh
  425c24:	mov    esp,0xa22aba2
  425c29:	out    dx,al
  425c2a:	mov    eax,ds:0x8305178f
  425c2f:	sbb    ah,bl
  425c31:	sbb    eax,0xc0bad3b8
  425c36:	jbe    0x425c71
  425c38:	test   bl,al
  425c3a:	mov    bh,0xa8
  425c3c:	ins    BYTE PTR es:[edi],dx
  425c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c3e:	pop    ss
  425c3f:	sbb    DWORD PTR [ebx+ecx*1+0x5ae7e846],esi
  425c46:	lock pop ecx
  425c48:	jae    0x425c8d
  425c4a:	jge    0x425c25
  425c4c:	mov    esi,0xd1a5ccb2
  425c51:	pushf  
  425c52:	std    
  425c53:	std    
  425c54:	in     eax,dx
  425c55:	test   DWORD PTR [si],0xccaf3bb3
  425c5c:	int    0xe3
  425c5e:	pop    ebx
  425c5f:	push   ecx
  425c60:	sub    al,0xf8
  425c62:	lahf   
  425c63:	mov    ebp,DWORD PTR [esi+0x4756c058]
  425c69:	mov    esi,0xf9a55a3f
  425c6e:	jecxz  0x425cab
  425c70:	mov    cl,0xf9
  425c72:	jmp    0x135e8c8
  425c77:	xchg   edx,eax
  425c78:	inc    ebx
  425c79:	jno    0x425c49
  425c7b:	pop    eax
  425c7c:	or     dl,BYTE PTR [ebp+0x121190ac]
  425c82:	jmp    0xc286:0xb9c73358
  425c89:	mov    bh,0x5b
  425c8b:	mov    bl,0xd0
  425c8d:	xor    ebx,DWORD PTR [edi+0x6f]
  425c90:	test   DWORD PTR [edx-0x636aca36],ebp
  425c96:	mov    WORD PTR [bx],gs
  425c99:	push   ecx
  425c9a:	nop
  425c9b:	cs pop esi
  425c9d:	adc    al,0x53
  425c9f:	jbe    0x425cb9
  425ca1:	jge    0x425c51
  425ca3:	and    BYTE PTR [ecx-0x6b],bh
  425ca6:	in     eax,dx
  425ca7:	jmp    0x3520b0a6
  425cac:	xchg   DWORD PTR [ecx],edx
  425cae:	push   ds
  425caf:	js     0x425c51
  425cb1:	inc    eax
  425cb2:	dec    esi
  425cb3:	mov    eax,ds:0x9bae2a2b
  425cb8:	inc    eax
  425cb9:	mov    eax,0x9ce66b8e
  425cbe:	sbb    ebx,DWORD PTR [ecx+0x67c0141b]
  425cc4:	dec    ecx
  425cc5:	mov    dh,BYTE PTR [esi]
  425cc7:	test   al,0x7b
  425cc9:	fiadd  WORD PTR [ecx+esi*4-0x6a366124]
  425cd0:	ret    0x3265
  425cd3:	(bad)  
  425cd4:	aaa    
  425cd5:	repnz fcmovne st,st(7)
  425cd8:	pop    ecx
  425cd9:	jo     0x425c7f
  425cdb:	cmp    al,0x31
  425cdd:	fcmovnu st,st(4)
  425cdf:	cld    
  425ce0:	rol    BYTE PTR [ebp+0x1f],1
  425ce3:	repz or al,0x9e
  425ce6:	mov    ebx,0xf4a7c336
  425ceb:	(bad)  
  425cec:	stos   BYTE PTR es:[edi],al
  425ced:	stc    
  425cee:	adc    ah,bl
  425cf0:	dec    edi
  425cf1:	call   0x1866514e
  425cf6:	pop    edx
  425cf7:	jecxz  0x425d1a
  425cf9:	(bad)  
  425cfb:	ror    ch,0x4d
  425cfe:	xor    BYTE PTR [ecx],dl
  425d00:	jge    0x425cb1
  425d02:	(bad)  
  425d03:	xchg   edi,eax
  425d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d05:	xchg   edi,eax
  425d06:	and    al,0xe3
  425d08:	retf   
  425d09:	sbb    eax,0xcec052f
  425d0e:	sub    al,0xc8
  425d10:	das    
  425d11:	xchg   edi,eax
  425d12:	mov    eax,0x419f1a14
  425d17:	add    DWORD PTR [edx+0x751cc27f],0x63
  425d1e:	cmc    
  425d1f:	mov    esp,DWORD PTR [ecx-0x43]
  425d22:	push   es
  425d23:	cmp    al,0xba
  425d25:	dec    esi
  425d26:	mov    edi,DWORD PTR [esi]
  425d28:	xchg   esp,eax
  425d29:	cmp    eax,0x54157fd9
  425d2e:	mov    ch,0x9
  425d30:	(bad)  
  425d31:	jp     0x425d99
  425d33:	imul   ebx,DWORD PTR [ecx+0x53],0x477d92cd
  425d3a:	add    BYTE PTR [eax],al
  425d3c:	mov    al,0x8a
  425d3e:	call   0xfa2657c4
  425d43:	mov    ebx,0x99242062
  425d48:	ins    DWORD PTR es:[edi],dx
  425d49:	lea    ecx,[ebp-0x16]
  425d4c:	or     al,0xd6
  425d4e:	add    DWORD PTR [eax],eax
  425d50:	xchg   BYTE PTR [edx],al
  425d52:	add    BYTE PTR [eax],al
  425d54:	jnp    0x425d16
  425d56:	mov    edx,cs
  425d58:	xor    ch,dh
  425d5a:	cmp    eax,0x78db86e0
  425d5f:	loop   0x425d36
  425d61:	sub    BYTE PTR [edx+0x5bfee684],dh
  425d67:	aaa    
  425d68:	popa   
  425d69:	mov    ah,0xf4
  425d6b:	call   0xb807dadf
  425d70:	jo     0x425d0f
  425d72:	dec    edi
  425d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d74:	(bad)  
  425d75:	mov    ?,edi
  425d77:	out    0xdc,al
  425d79:	sbb    al,0x5e
  425d7b:	popf   
  425d7c:	(bad)  
  425d7e:	jp     0x425da9
  425d80:	cmp    bh,BYTE PTR [esp+edx*8]
  425d83:	mov    eax,0xf565a2a9
  425d88:	cmp    dl,al
  425d8a:	data16 out dx,al
  425d8c:	mov    edx,0xa5aa5a41
  425d91:	ins    BYTE PTR es:[edi],dx
  425d92:	imul   edx,DWORD PTR [edi],0x5a10abfe
  425d98:	cmp    bh,BYTE PTR [ecx+eiz*2+0x53]
  425d9c:	add    edx,DWORD PTR [ebp+0x67a5c89e]
  425da2:	or     eax,0x283e6e03
  425da7:	(bad)  
  425da9:	jno    0x425de6
  425dab:	test   BYTE PTR [edi],ch
  425dad:	retf   0x6ec5
  425db0:	adc    al,0x2d
  425db2:	mov    al,ds:0xe81fa3c2
  425db7:	jge    0x425d3d
  425db9:	sub    eax,0xa7f75150
  425dbe:	mov    edx,DWORD PTR [esi+0x1a]
  425dc1:	xor    al,0x8a
  425dc3:	adc    dl,BYTE PTR [ebp+0x4bf0d8e7]
  425dc9:	das    
  425dca:	or     DWORD PTR [edi+0x5b876c63],0x6305251c
  425dd4:	scas   al,BYTE PTR es:[edi]
  425dd5:	and    ebp,ebp
  425dd7:	leave  
  425dd8:	in     al,dx
  425dd9:	cmp    BYTE PTR fs:[ebx],bh
  425ddc:	mov    BYTE PTR [edi+0x63],al
  425ddf:	inc    ebx
  425de0:	cmp    bh,BYTE PTR [edi]
  425de2:	lahf   
  425de3:	outs   dx,DWORD PTR ds:[esi]
  425de4:	fidiv  WORD PTR [edx+0x5a51a9f9]
  425dea:	aam    0xe9
  425dec:	lods   eax,DWORD PTR ds:[esi]
  425ded:	jecxz  0x425e3c
  425def:	ror    ebp,0x9
  425df2:	inc    esi
  425df3:	lods   eax,DWORD PTR ds:[esi]
  425df4:	cmp    ch,al
  425df6:	pop    esp
  425df7:	jo     0x425dd9
  425df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dfa:	test   eax,0x2dfbae69
  425dff:	ss push edx
  425e01:	and    BYTE PTR ds:0x5a25d6a8,dh
  425e07:	mov    BYTE PTR [eax],dl
  425e09:	icebp  
  425e0a:	cdq    
  425e0b:	push   0xffffffc5
  425e0d:	dec    ebx
  425e0e:	pop    edx
  425e0f:	imul   ebx,DWORD PTR [edx-0x15],0xcf5c243e
  425e16:	xor    cl,ch
  425e18:	inc    edx
  425e19:	xor    al,0x7e
  425e1b:	cmp    esi,DWORD PTR [eax-0x69]
  425e1e:	push   0x7203d365
  425e23:	ss xchg ebp,eax
  425e25:	pop    eax
  425e26:	inc    edx
  425e27:	push   cs
  425e28:	in     eax,dx
  425e29:	cli    
  425e2a:	ins    DWORD PTR es:[edi],dx
  425e2b:	cmovne edi,DWORD PTR [esi]
  425e2e:	aas    
  425e2f:	(bad)
  425e34:	fisubr DWORD PTR [ebp-0x75]
  425e37:	mov    BYTE PTR [ecx],ah
  425e39:	mov    ds:0xb1116d50,eax
  425e3e:	dec    esi
  425e3f:	gs addr16 mov bl,0x14
  425e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e44:	rcl    DWORD PTR [ebx+0x5e88d209],1
  425e4a:	div    DWORD PTR [edx-0xabea381]
  425e50:	arpl   WORD PTR ds:0x8397e90e,cx
  425e56:	sbb    al,0x89
  425e58:	int    0x31
  425e5a:	adc    DWORD PTR [esi+0x56],esi
  425e5d:	sbb    al,0xee
  425e5f:	mov    ebx,0x472b48d9
  425e64:	cmp    al,0x3f
  425e66:	out    dx,eax
  425e67:	lock mov ds:0x22f3fc95,eax
  425e6d:	xor    DWORD PTR [ebp+0x4e],0xb9aa6b14
  425e74:	aaa    
  425e75:	push   cs
  425e76:	out    0x7f,al
  425e78:	or     esi,DWORD PTR [edi-0x770be0a]
  425e7e:	add    ecx,DWORD PTR [ebx+ebx*1]
  425e81:	loopne 0x425e7c
  425e83:	mov    WORD PTR [edx-0x64],fs
  425e86:	in     eax,dx
  425e87:	adc    al,0x1c
  425e89:	dec    esi
  425e8a:	mov    ds:0x401019e8,eax
  425e8f:	inc    ebx
  425e90:	sti    
  425e91:	imul   esp,DWORD PTR [eax],0x34
  425e94:	shl    BYTE PTR ds:0xb3efac8f,cl
  425e9a:	call   0xf6ab:0x13554409
  425ea1:	sbb    dh,BYTE PTR gs:[edi-0x6ef6dc34]
  425ea8:	push   ebx
  425ea9:	pop    es
  425eaa:	stos   DWORD PTR es:[edi],eax
  425eab:	inc    ebp
  425eac:	stos   BYTE PTR es:[edi],al
  425ead:	sub    BYTE PTR [edx],bh
  425eaf:	ins    DWORD PTR es:[edi],dx
  425eb0:	fcom   QWORD PTR [edi+0x1]
  425eb3:	pop    edi
  425eb4:	lahf   
  425eb5:	pushaw 
  425eb7:	mov    dl,BYTE PTR [edi-0x7]
  425eba:	pop    edi
  425ebb:	pop    ecx
  425ebc:	xor    ebp,DWORD PTR [edx+0x51]
  425ebf:	jle    0x425f02
  425ec1:	inc    eax
  425ec2:	push   ebp
  425ec3:	scas   al,BYTE PTR es:[edi]
  425ec4:	sbb    dh,BYTE PTR [edx+ecx*4-0x33]
  425ec8:	int    0xe7
  425eca:	loopne 0x425edb
  425ecc:	push   esi
  425ecd:	adc    eax,0x4cf4de73
  425ed2:	and    DWORD PTR [edx+0x3e],edx
  425ed5:	and    eax,0xec9c2422
  425eda:	(bad)  
  425edb:	pop    ebp
  425edc:	repz cld 
  425ede:	sahf   
  425edf:	in     eax,0xdc
  425ee1:	test   eax,0xf490c00c
  425ee6:	icebp  
  425ee7:	add    DWORD PTR [edx+ebx*2+0x2e],edx
  425eeb:	xor    eax,DWORD PTR [eax+edi*1+0x6ec86a5a]
  425ef2:	pop    esp
  425ef3:	dec    DWORD PTR [ebp-0x6f]
  425ef6:	cs jae 0x425f0b
  425ef9:	inc    ebp
  425efa:	xor    dl,ch
  425efc:	mov    WORD PTR [esp+ebx*2],ss
  425eff:	pop    edx
  425f00:	enter  0xb787,0xf8
  425f04:	div    DWORD PTR [ebp-0x1f5af1ab]
  425f0a:	sbb    eax,0x71ee3284
  425f0f:	scas   eax,DWORD PTR es:[edi]
  425f10:	jae    0x425f40
  425f12:	mov    esi,0x80647a99
  425f17:	adc    BYTE PTR [eax*8+0x27fb8f58],bh
  425f1e:	fmul   DWORD PTR [esi+0x59f2e9ec]
  425f24:	cmp    eax,0x651a1895
  425f29:	out    dx,al
  425f2a:	cld    
  425f2b:	call   FWORD PTR [edx+0x7db1f240]
  425f31:	adc    ebx,edx
  425f33:	sbb    BYTE PTR [eax+0x64d99740],bl
  425f39:	add    bh,BYTE PTR [ebx-0x21f3453b]
  425f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f40:	mov    ch,0x66
  425f42:	popa   
  425f43:	stos   BYTE PTR es:[edi],al
  425f44:	mov    WORD PTR [edi+0x43],gs
  425f47:	shl    BYTE PTR [ebx],1
  425f49:	(bad)  
  425f4a:	test   eax,0x379455db
  425f4f:	daa    
  425f50:	rol    cl,1
  425f52:	out    dx,eax
  425f53:	sahf   
  425f54:	ret    
  425f55:	mov    eax,ds:0xc50b02b1
  425f5a:	sub    bl,BYTE PTR [edi]
  425f5c:	pusha  
  425f5d:	adc    al,0xb6
  425f5f:	leave  
  425f60:	push   ds
  425f61:	xchg   ebp,eax
  425f62:	inc    edi
  425f63:	outs   dx,DWORD PTR ds:[esi]
  425f64:	sbb    ch,BYTE PTR [esi]
  425f66:	fsub   DWORD PTR [eax-0x2b30a9de]
  425f6c:	aad    0xbe
  425f6e:	mov    BYTE PTR [esi+0x3a525ceb],0x7a
  425f75:	(bad)  [edi-0x447d5580]
  425f7b:	xlat   BYTE PTR ds:[ebx]
  425f7c:	jg     0x425fa8
  425f7e:	cmc    
  425f7f:	iret   
  425f80:	std    
  425f81:	pop    ebp
  425f82:	push   esi
  425f83:	mov    ch,0x43
  425f85:	in     al,dx
  425f86:	es dec edi
  425f88:	or     eax,eax
  425f8a:	cwde   
  425f8b:	test   al,0x3e
  425f8d:	xchg   esp,eax
  425f8e:	icebp  
  425f8f:	inc    ebx
  425f90:	mov    esi,0x9b70dc46
  425f95:	jbe    0x426005
  425f97:	out    dx,al
  425f98:	mov    ch,BYTE PTR [edi+0x32]
  425f9b:	test   DWORD PTR [eax],eax
  425f9d:	and    ebx,ebp
  425f9f:	nop
  425fa0:	jmp    0x7a335ee7
  425fa5:	mov    eax,ds:0x7ea631bf
  425faa:	jb     0x425f51
  425fac:	imul   ebx,DWORD PTR [eax],0xfffffffc
  425faf:	inc    esp
  425fb0:	rcr    BYTE PTR [ecx+edi*2],cl
  425fb3:	in     eax,0x1
  425fb5:	xor    DWORD PTR [eax],0xd7f1be0c
  425fbb:	sub    DWORD PTR [ebx+edx*1],0x56
  425fbf:	bound  edx,QWORD PTR [ebp-0x7ec9d06]
  425fc5:	lods   eax,DWORD PTR ds:[esi]
  425fc6:	mov    BYTE PTR [ecx-0x2511c967],bh
  425fcc:	rcr    DWORD PTR [edx],1
  425fce:	or     al,0x35
  425fd0:	xor    eax,0xdf19853b
  425fd5:	xchg   esi,eax
  425fd6:	push   edx
  425fd7:	movnti DWORD PTR [esi+0x0],edx
  425fdb:	add    BYTE PTR [edx-0x39253b74],cl
  425fe1:	ficomp DWORD PTR [esi+0x2983e7dc]
  425fe7:	mov    WORD PTR [edi],cs
  425fe9:	xchg   BYTE PTR [esi-0x32],dl
  425fec:	xchg   edx,eax
  425fed:	fadd   DWORD PTR [ecx]
  425fef:	add    BYTE PTR [esi+0x32000002],al
  425ff5:	mov    bh,BYTE PTR [edx+edx*4-0x68]
  425ff9:	push   eax
  425ffa:	pop    ebp
  425ffb:	mov    ebp,0xaf882d24
  426000:	imul   ebp,DWORD PTR [ebx],0xd177290c
  426006:	push   0x5411e082
  42600b:	cmp    ecx,DWORD PTR [esp+ebx*2]
  42600e:	xchg   eax,eax
  426010:	sub    DWORD PTR [eax+ecx*2-0x7442ad],ecx
  426017:	fadd   st,st(3)
  426019:	mov    ch,0xcc
  42601b:	cmp    eax,0xdaa5e352
  426020:	jnp    0x425fd7
  426022:	push   edx
  426023:	out    dx,ax
  426025:	(bad)  
  426026:	call   0x9a1c966
  42602b:	scas   al,BYTE PTR es:[edi]
  42602c:	sbb    ebp,DWORD PTR [esi-0x2]
  42602f:	pop    edi
  426030:	outs   dx,DWORD PTR ds:[esi]
  426031:	sbb    ebp,ebx
  426033:	mov    ecx,0x2b3e8aa7
  426038:	imul   edi,DWORD PTR [eax+edx*1],0xffffffe8
  42603c:	or     esp,edi
  42603e:	inc    ebp
  42603f:	add    al,0xf7
  426041:	repnz mov ch,0x88
  426044:	aam    0x5a
  426046:	cli    
  426047:	lahf   
  426048:	mov    esp,0x5579564
  42604d:	mov    ch,0x48
  42604f:	jle    0x42602f
  426051:	out    0xf3,al
  426053:	sub    eax,0x9c490972
  426058:	loop   0x4260b4
  42605a:	mov    ebx,0x10d235ed
  42605f:	sar    BYTE PTR [ecx],0xfd
  426062:	cmp    DWORD PTR [edi-0x15],esp
  426065:	call   FWORD PTR [ebp+0x2589989]
  42606b:	rol    ecx,1
  42606d:	jbe    0x425ffc
  42606f:	mov    ecx,0xbf9321e3
  426074:	outs   dx,BYTE PTR ds:[esi]
  426075:	cwde   
  426076:	push   esp
  426077:	jnp    0x42602c
  426079:	scas   al,BYTE PTR es:[edi]
  42607a:	xchg   edx,eax
  42607b:	add    cl,BYTE PTR ds:0x58cf7819
  426081:	mov    al,ds:0xd08928e8
  426086:	cmp    dl,BYTE PTR [edx]
  426088:	test   BYTE PTR [eax+0x50],al
  42608b:	add    DWORD PTR [ecx-0x77],esi
  42608e:	arpl   WORD PTR [edx-0x29],bx
  426091:	in     al,dx
  426092:	imul   DWORD PTR [ebp+0x15]
  426095:	scas   al,BYTE PTR es:[edi]
  426096:	xchg   edi,eax
  426097:	xchg   edi,eax
  426098:	outs   dx,BYTE PTR ds:[esi]
  426099:	loop   0x4260f0
  42609b:	push   ebx
  42609c:	adc    DWORD PTR [eax+0x352f4b41],edi
  4260a2:	sub    bl,BYTE PTR [edi+0x5]
  4260a5:	pop    edx
  4260a6:	(bad)  
  4260a7:	out    dx,al
  4260a8:	fs or  al,0x6d
  4260ab:	xchg   edx,eax
  4260ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260ad:	shl    DWORD PTR [edx],1
  4260af:	push   cs
  4260b0:	add    esi,edi
  4260b2:	je     0x426077
  4260b4:	push   ecx
  4260b5:	sub    esp,esp
  4260b7:	cs push esp
  4260b9:	hlt    
  4260ba:	and    BYTE PTR [edx],al
  4260bc:	test   eax,0xf355a0a2
  4260c1:	fldenv [esp+esi*4+0x51e9bef6]
  4260c8:	xchg   edx,eax
  4260c9:	add    eax,0x1df15581
  4260ce:	sub    al,0xf2
  4260d0:	cdq    
  4260d1:	pusha  
  4260d2:	push   ss
  4260d3:	inc    esi
  4260d4:	xchg   esi,eax
  4260d5:	and    al,BYTE PTR [eax]
  4260d7:	scas   eax,DWORD PTR es:[edi]
  4260d8:	mov    eax,ds:0x4ed90199
  4260dd:	or     eax,0x43a99512
  4260e2:	lock jge 0x4260db
  4260e5:	dec    esp
  4260e6:	jno    0x426157
  4260e8:	pop    esi
  4260e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260ea:	idiv   dl
  4260ec:	in     al,0x40
  4260ee:	cs jg  0x13b09a28
  4260f5:	scas   eax,DWORD PTR es:[edi]
  4260f6:	cdq    
  4260f7:	cmp    eax,0xcc9f304a
  4260fc:	push   edi
  4260fd:	mov    bh,0x7a
  4260ff:	repnz adc dh,BYTE PTR [esp+ebx*4+0x47068285]
  426107:	call   0x69d6709f
  42610c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42610d:	mov    ebx,0x787472ce
  426112:	pop    DWORD PTR [eax-0x6e]
  426115:	repnz mov edi,edi
  426118:	iret   
  426119:	mov    edx,ecx
  42611b:	int    0xcf
  42611d:	xlat   BYTE PTR ds:[ebx]
  42611e:	jnp    0x426165
  426120:	in     eax,0x34
  426122:	jb     0x426120
  426124:	adc    dh,dl
  426126:	mov    esi,0xa030e02d
  42612b:	xchg   esp,eax
  42612c:	adc    DWORD PTR [edx+ebp*8],esi
  42612f:	retf   0x4959
  426132:	icebp  
  426133:	push   edi
  426134:	lods   eax,DWORD PTR ds:[esi]
  426135:	out    dx,eax
  426136:	cmp    BYTE PTR [edx+0x18],bh
  426139:	adc    BYTE PTR [esi+0x50],dl
  42613c:	(bad)  
  42613d:	push   ebx
  42613e:	inc    edx
  42613f:	in     eax,0x93
  426141:	xor    bh,BYTE PTR [eax-0x6a]
  426144:	(bad)  
  426145:	js     0x4261a2
  426147:	in     al,0xee
  426149:	add    eax,0xce97965d
  42614e:	stos   DWORD PTR es:[edi],eax
  42614f:	int3   
  426150:	mov    cl,0x25
  426152:	jno    0x42615f
  426154:	in     eax,0xed
  426156:	pop    eax
  426157:	dec    ebp
  426158:	sub    BYTE PTR [ebx],cl
  42615a:	or     eax,0x9f66b0b4
  42615f:	rol    bl,cl
  426161:	icebp  
  426162:	(bad)  [eax-0x11133c9f]
  426168:	leave  
  426169:	adc    dh,BYTE PTR [edx-0x5e]
  42616c:	frstor [eax-0x41]
  42616f:	and    ecx,0x3b
  426172:	inc    edx
  426173:	and    BYTE PTR [edi+0x67e3dd79],bl
  426179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42617a:	shl    BYTE PTR [eax],0xcd
  42617d:	xlat   BYTE PTR ds:[ebx]
  42617e:	xchg   BYTE PTR [ebp+esi*1+0x39],ah
  426182:	cmp    DWORD PTR [esi-0x75acb6ea],ecx
  426188:	inc    eax
  426189:	mov    ?,WORD PTR cs:[eax+0x37]
  42618d:	out    dx,al
  42618e:	and    esi,esi
  426190:	xchg   esp,eax
  426191:	hlt    
  426192:	mov    ecx,0xc228c851
  426197:	shl    DWORD PTR [esp+ebp*2],1
  42619a:	call   DWORD PTR [eax+ebx*8]
  42619d:	cli    
  42619e:	(bad)  
  42619f:	and    eax,0x69f84e41
  4261a4:	fnsave [eax+0x38]
  4261a7:	sar    edi,1
  4261a9:	and    edi,ebp
  4261ab:	push   0xe8bf2681
  4261b0:	mov    edx,0x5cbf21f9
  4261b5:	mov    ecx,0x497d52dd
  4261ba:	jmp    0x4261f5
  4261bc:	jp     0x426163
  4261be:	sbb    eax,0xccd4614a
  4261c3:	push   0xffffffb1
  4261c5:	bound  esi,QWORD PTR ss:[edx]
  4261c8:	repz sti 
  4261ca:	push   eax
  4261cb:	stos   BYTE PTR es:[edi],al
  4261cc:	rcr    ch,cl
  4261ce:	and    al,bl
  4261d0:	hlt    
  4261d1:	push   esp
  4261d2:	inc    ebx
  4261d3:	sbb    bh,BYTE PTR [ecx]
  4261d5:	jo     0x426186
  4261d7:	push   ebp
  4261d8:	dec    ecx
  4261d9:	inc    edx
  4261da:	clc    
  4261db:	fldcw  WORD PTR [edx-0x7]
  4261de:	mov    DWORD PTR [ebx-0x4df7a0e5],ecx
  4261e4:	mov    ah,0x21
  4261e6:	inc    ecx
  4261e7:	repz loopne 0x426232
  4261ea:	test   BYTE PTR [ebp+0x449e99ea],ch
  4261f0:	stc    
  4261f1:	imul   ebx,DWORD PTR [ecx],0x4f
  4261f4:	test   DWORD PTR [edx-0x24],eax
  4261f7:	jae    0x4261a0
  4261f9:	cmp    bh,ah
  4261fb:	iret   
  4261fc:	mov    bl,BYTE PTR [edx]
  4261fe:	fsub   QWORD PTR ds:0x78921bc0
  426204:	test   al,0x1d
  426206:	in     eax,0xe8
  426208:	fdiv   DWORD PTR [edx-0x3a145586]
  42620e:	push   eax
  42620f:	gs lahf 
  426211:	mov    eax,ds:0x4197b29d
  426216:	pop    ecx
  426217:	mov    dl,BYTE PTR [edi+0x4bc562ff]
  42621d:	ret    
  42621e:	mov    ch,0xcf
  426220:	and    eax,0x11cd3ed5
  426225:	mov    eax,0xfa160bf7
  42622a:	ds inc ebx
  42622c:	sub    DWORD PTR [eax+0x20],edx
  42622f:	cdq    
  426230:	pop    edi
  426231:	mov    ecx,0x89e4e690
  426236:	adc    esp,ebp
  426238:	and    ebp,DWORD PTR [ecx-0x3da8f64e]
  42623e:	aam    0x7d
  426240:	or     al,0x2a
  426242:	add    eax,0x6496cd67
  426247:	into   
  426248:	out    dx,eax
  426249:	adc    eax,0xc358f93a
  42624e:	loopne 0x4262ba
  426250:	mov    WORD PTR [ecx],?
  426252:	push   ds
  426253:	les    ecx,FWORD PTR [esi+ecx*8+0x2c]
  426257:	sbb    dl,BYTE PTR [esi]
  426259:	sub    DWORD PTR [ebp-0x6921f2e4],eax
  42625f:	dec    esi
  426260:	dec    edi
  426261:	lahf   
  426262:	shr    DWORD PTR [ebp-0x31],1
  426265:	adc    al,0xcb
  426267:	sbb    al,0x1d
  426269:	mov    ebp,0x9e8c1e42
  42626e:	cdq    
  42626f:	xchg   esp,eax
  426270:	lods   eax,DWORD PTR ds:[esi]
  426271:	jo     0x4262d8
  426273:	cmp    dh,ch
  426275:	sbb    esi,DWORD PTR [edi]
  426277:	jae    0x426279
  426279:	test   BYTE PTR [eax],al
  42627b:	add    BYTE PTR [eax-0x56],al
  42627e:	pop    edx
  42627f:	sbb    bh,dl
  426281:	cli    
  426282:	inc    eax
  426283:	cli    
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	jmp    0x2510:0x4a4ae400
  42628c:	sbb    bl,bl
  42628e:	add    DWORD PTR [eax],eax
  426290:	xchg   BYTE PTR [edx],al
  426292:	add    BYTE PTR [eax],al
  426294:	sub    ebx,esi
  426296:	popa   
  426297:	add    BYTE PTR [eax-0x253cfaf3],0xff
  42629e:	lods   al,BYTE PTR ds:[esi]
  42629f:	pusha  
  4262a0:	jmp    0x18c:0xfb4c1cd9
  4262a7:	(bad)  
  4262a8:	adc    BYTE PTR [ebx+ecx*4],cl
  4262ab:	cdq    
  4262ac:	out    dx,eax
  4262ad:	call   0x39c2655f
  4262b2:	mov    bh,0xf3
  4262b4:	xor    ecx,DWORD PTR [esp+ebp*8]
  4262b7:	push   ecx
  4262b8:	(bad)  
  4262b9:	fadd   st,st(5)
  4262bb:	xchg   ebx,eax
  4262bc:	adc    ecx,eax
  4262be:	jl     0x426327
  4262c0:	jmp    DWORD PTR [edx+0x6aaeba8]
  4262c6:	mov    WORD PTR [edx],ss
  4262c8:	xor    esi,DWORD PTR [edx+0x44b1ce7]
  4262ce:	popf   
  4262cf:	adc    BYTE PTR ss:[edi],dh
  4262d2:	sbb    al,0xb0
  4262d4:	xchg   DWORD PTR [esi-0x151c3126],esp
  4262da:	int    0xfb
  4262dc:	mov    ah,0x7
  4262de:	xor    al,0x73
  4262e0:	out    dx,al
  4262e1:	add    al,0xcf
  4262e3:	das    
  4262e4:	lds    esp,FWORD PTR [ecx]
  4262e6:	or     ah,bh
  4262e8:	mov    bh,0x7c
  4262ea:	or     BYTE PTR ds:0xe758f58a,ch
  4262f0:	mov    ds:0xc8cbfa77,eax
  4262f5:	jecxz  0x4262fd
  4262f7:	mov    ah,0xa3
  4262f9:	inc    esi
  4262fa:	inc    esp
  4262fb:	inc    esp
  4262fc:	enter  0x35b0,0x9d
  426300:	jnp    0x426348
  426302:	aaa    
  426303:	jge    0x426292
  426305:	fist   WORD PTR [edi-0x27e2601a]
  42630b:	shl    BYTE PTR [edx-0x2e083791],1
  426311:	mov    dh,0x33
  426313:	pop    esi
  426314:	cmp    eax,0xaf3c7d92
  426319:	or     BYTE PTR [ebp+0x68],bh
  42631c:	add    al,BYTE PTR [eax+0x9d9e734]
  426322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426323:	retf   0xb36b
  426326:	lods   al,BYTE PTR ds:[esi]
  426327:	mov    dh,0x4f
  426329:	inc    ebx
  42632a:	iret   
  42632b:	sbb    al,BYTE PTR [ecx+0x62]
  42632e:	xchg   edx,eax
  42632f:	outs   dx,DWORD PTR ds:[esi]
  426330:	cs add eax,0xffffffff
  426334:	cmp    al,0xe2
  426336:	lea    edi,[eax-0x484bae5c]
  42633c:	add    eax,esi
  42633e:	in     al,0x6d
  426340:	or     BYTE PTR [ebp+0x11ecb813],dh
  426346:	cs int3 
  426348:	or     al,0x6a
  42634a:	outs   dx,DWORD PTR ds:[esi]
  42634b:	pop    ebp
  42634c:	jne    0x4263b2
  42634e:	repz mov esp,0x810abc46
  426354:	pop    ebp
  426355:	push   ebp
  426356:	mov    cl,0x37
  426358:	mov    ?,edi
  42635a:	and    BYTE PTR [edx-0x25718896],bl
  426360:	and    esi,edi
  426362:	jbe    0x4263bf
  426364:	push   ebx
  426365:	push   es
  426366:	int3   
  426367:	inc    ecx
  426368:	ins    BYTE PTR es:[edi],dx
  426369:	push   esi
  42636a:	pushf  
  42636b:	jp     0x4263d6
  42636d:	fist   DWORD PTR [eax]
  42636f:	inc    esi
  426370:	jne    0x42630e
  426372:	xlat   BYTE PTR ds:[ebx]
  426373:	iret   
  426374:	inc    esp
  426375:	mov    ch,0x3a
  426377:	add    eax,DWORD PTR [esi-0x30f875bf]
  42637d:	in     eax,dx
  42637e:	int    0x2a
  426380:	jge    0x426387
  426382:	rcl    BYTE PTR [edi+ecx*1-0xa],1
  426386:	push   edx
  426387:	pushf  
  426388:	or     al,0x4b
  42638a:	dec    edx
  42638b:	push   ds
  42638c:	mov    esp,DWORD PTR ds:0x759b1e6d
  426392:	(bad)  
  426393:	rol    DWORD PTR [edx+edx*4],1
  426396:	mov    eax,ds:0xab881643
  42639b:	gs mov bh,0x4a
  42639e:	jp     0x426370
  4263a0:	sub    DWORD PTR [edx+ecx*2],edx
  4263a3:	cld    
  4263a4:	sub    DWORD PTR [edx-0xc],0xffffffb9
  4263a8:	jge    0x426330
  4263aa:	nop
  4263ab:	cmp    esi,ecx
  4263ad:	xor    BYTE PTR [esi-0x1c],dh
  4263b0:	dec    ebp
  4263b1:	adc    DWORD PTR [esi],0x66
  4263b4:	imul   DWORD PTR [ebx+0x7f207afa]
  4263ba:	ja     0x426419
  4263bc:	ror    DWORD PTR [ebx-0x62f383fd],cl
  4263c2:	ss cmp dl,dl
  4263c5:	sar    BYTE PTR ds:0x5d7a0faf,1
  4263cb:	mov    dl,0xc6
  4263cd:	les    ebx,FWORD PTR [edi+0x24c5d3a0]
  4263d3:	dec    ebx
  4263d4:	retf   0x49c6
  4263d7:	int3   
  4263d8:	addr16 cwde 
  4263da:	and    DWORD PTR [edi],0xffffff87
  4263dd:	cmp    al,0x60
  4263df:	xlat   BYTE PTR ds:[ebx]
  4263e0:	mov    ds:0x2d46d663,eax
  4263e5:	and    esp,DWORD PTR [ebp-0x18]
  4263e8:	outs   dx,BYTE PTR ds:[esi]
  4263e9:	and    eax,0x1f81eb1e
  4263ee:	addr16 jg 0x426405
  4263f1:	loop   0x4263cc
  4263f3:	aas    
  4263f4:	sub    eax,0x76488e83
  4263f9:	or     esi,ebx
  4263fb:	test   al,0x63
  4263fd:	pop    es
  4263fe:	jmp    0x9c4e56b8
  426403:	xor    ebp,esi
  426405:	cs pop eax
  426407:	jle    0x426461
  426409:	out    dx,al
  42640a:	sub    dl,bh
  42640c:	inc    ebx
  42640d:	lods   al,BYTE PTR ds:[esi]
  42640e:	int3   
  42640f:	cmp    eax,0xf8a8b4de
  426414:	syscall 
  426416:	xchg   DWORD PTR [ebp+0x3ac6153],ecx
  42641c:	int    0xd0
  42641e:	dec    ecx
  42641f:	call   0x8e039c37
  426424:	cdq    
  426425:	jl     0x4263f2
  426427:	and    al,0xbf
  426429:	mov    cs,WORD PTR [eax-0x62]
  42642c:	out    0x9e,eax
  42642e:	mov    bh,0x9e
  426430:	xchg   edi,eax
  426431:	mov    bl,0x51
  426433:	imul   edi,DWORD PTR [edi],0xffffffca
  426436:	pop    eax
  426437:	and    ecx,0xe2c1fd4
  42643d:	xor    BYTE PTR [ebx+eax*1+0x1e4c8f3e],0x36
  426445:	add    BYTE PTR [eax],dl
  426447:	dec    ebx
  426448:	inc    ebx
  426449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42644a:	inc    eax
  42644b:	ja     0x42646e
  42644d:	repnz lahf 
  42644f:	pusha  
  426450:	jle    0x4263f7
  426452:	bound  edi,QWORD PTR [ebx-0x59]
  426455:	(bad)  
  426456:	xor    ebp,ebx
  426458:	outs   dx,DWORD PTR ds:[esi]
  426459:	jae    0x4264cf
  42645b:	and    al,0xad
  42645d:	sar    BYTE PTR [ecx+0x38],1
  426460:	mov    bh,BYTE PTR [eax]
  426462:	aam    0xa8
  426464:	es sub al,0xb9
  426467:	repnz mov ah,0xc3
  42646a:	mov    bh,0x2d
  42646c:	pop    ss
  42646d:	addr16 int 0x23
  426470:	mov    bl,0x2
  426472:	sub    BYTE PTR [ebx],dh
  426474:	int    0x17
  426476:	mov    edx,0xd1c54d29
  42647b:	add    DWORD PTR [ecx-0x6a351752],ebp
  426481:	rcr    ah,cl
  426483:	arpl   WORD PTR [ebp+0x7b],dx
  426486:	in     al,dx
  426487:	jge    0x426427
  426489:	xor    ebp,edx
  42648b:	xor    esi,DWORD PTR [esi-0x40]
  42648e:	mov    eax,ds:0xd7ae04fa
  426493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426494:	out    dx,al
  426495:	popf   
  426496:	mov    cl,0xce
  426498:	add    al,0xa9
  42649a:	sbb    al,bh
  42649c:	enter  0xbdda,0x6a
  4264a0:	pop    esi
  4264a1:	sub    esp,ebx
  4264a3:	in     eax,0x40
  4264a5:	loope  0x4264d8
  4264a7:	fwait
  4264a8:	jle    0x42645b
  4264aa:	shl    BYTE PTR [edi+edx*1-0x78],0xcc
  4264af:	sbb    dl,cl
  4264b1:	jo     0x426450
  4264b3:	daa    
  4264b4:	das    
  4264b5:	xor    DWORD PTR [eax-0x388c5c0e],ebp
  4264bb:	jle    0x426449
  4264bd:	call   0x58fb:0x320a896f
  4264c4:	pop    ss
  4264c5:	jl     0x426480
  4264c7:	loope  0x426479
  4264c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264ca:	mov    edx,0x61916c11
  4264cf:	xchg   edi,eax
  4264d0:	dec    edi
  4264d1:	sub    al,0xf5
  4264d3:	fimul  WORD PTR [eax-0x48]
  4264d6:	retf   0x14aa
  4264d9:	and    eax,0x99e9520
  4264de:	and    BYTE PTR ds:0x183e68ca,ch
  4264e4:	(bad)  
  4264e6:	cmp    DWORD PTR [ecx-0x37],edx
  4264e9:	fwait
  4264ea:	arpl   WORD PTR [eax],di
  4264ec:	push   cs
  4264ed:	fimul  WORD PTR [ebp+eax*8+0xa6a492b]
  4264f4:	mov    ebx,0xcfbafdd2
  4264f9:	mov    bl,0xf7
  4264fb:	or     eax,0xce7f1096
  426500:	fnstenv [ebp+0x13]
  426503:	mov    ebx,0xe1aea9cd
  426508:	sbb    al,0xc2
  42650a:	movaps xmm0,xmm0
  42650d:	xlat   BYTE PTR ds:[ebx]
  42650e:	inc    edx
  42650f:	loopne 0x42653f
  426511:	outs   dx,DWORD PTR ds:[esi]
  426512:	and    ebp,ebx
  426514:	into   
  426515:	loop   0x42649a
  426517:	cli    
  426518:	mov    esi,0xb60000c5
  42651d:	in     al,0xd7
  42651f:	push   esp
  426520:	xlat   BYTE PTR ds:[ebx]
  426521:	ja     0x4264da
  426523:	out    0xf3,al
  426525:	ss icebp 
  426527:	mov    esp,0xf639029b
  42652c:	sahf   
  42652d:	fld    QWORD PTR [ecx]
  42652f:	add    BYTE PTR [esi-0x51fffffe],al
  426535:	pop    esp
  426536:	fs sbb ch,bh
  426539:	(bad)  
  42653a:	pop    edx
  42653b:	inc    eax
  42653c:	std    
  42653d:	mov    cl,0x6b
  42653f:	fcom   DWORD PTR [eax+0x52a44404]
  426545:	xor    bl,ah
  426547:	sub    DWORD PTR [ebp-0x62],ebp
  42654a:	dec    ebp
  42654b:	jg     0x4264f1
  42654d:	addr16 mov ecx,0xbf451dab
  426553:	int3   
  426554:	adc    dl,bl
  426556:	xor    cl,ch
  426558:	ins    DWORD PTR es:[edi],dx
  426559:	mov    esp,0xbc68b10f
  42655e:	inc    ecx
  42655f:	and    DWORD PTR [eax],edx
  426561:	sub    esp,esi
  426563:	dec    edx
  426564:	test   BYTE PTR [eax],al
  426566:	jbe    0x426524
  426568:	fst    DWORD PTR [ebp+0x62]
  42656b:	ror    edi,cl
  42656d:	data16 (bad) 
  42656f:	mov    al,0x3e
  426571:	ror    DWORD PTR [esi+0xb0bc692],1
  426577:	pop    edi
  426578:	sub    eax,0x8884bdae
  42657d:	scas   eax,DWORD PTR es:[edi]
  42657e:	push   0x9e267ca1
  426583:	and    eax,0xc92abbc
  426588:	mov    ds:0xef9e081b,al
  42658d:	sahf   
  42658e:	mov    ds:0x1cf5b2ee,al
  426593:	les    eax,FWORD PTR [edx-0x5d]
  426596:	popa   
  426597:	imul   esp,DWORD PTR [edx+0x2d92f8bc],0xdabc1da2
  4265a1:	out    dx,eax
  4265a2:	mov    ds:0x30f4614d,al
  4265a7:	shl    edx,0x99
  4265aa:	jecxz  0x426581
  4265ac:	sbb    al,0xe4
  4265ae:	pop    ds
  4265af:	xor    eax,0xb166f3db
  4265b4:	pop    esp
  4265b5:	jecxz  0x42659c
  4265b7:	add    BYTE PTR [eax+ecx*2],ch
  4265ba:	cmp    ecx,esi
  4265bc:	cwde   
  4265bd:	mov    edx,0x6894d21d
  4265c2:	ds xor ch,bl
  4265c5:	(bad)  
  4265c6:	xchg   edi,eax
  4265c7:	push   eax
  4265c8:	imul   eax,DWORD PTR [eax+0x6bc22b23],0xdfac94f6
  4265d2:	or     BYTE PTR [ebx+0x25],0x8
  4265d6:	inc    BYTE PTR [edi+0x4d]
  4265d9:	jmp    0x426591
  4265db:	aad    0x90
  4265dd:	in     al,dx
  4265de:	pop    edi
  4265df:	mov    ecx,0x4689a8e2
  4265e4:	pop    edi
  4265e5:	fbstp  TBYTE PTR [ecx+edi*4+0x65]
  4265e9:	inc    ebx
  4265ea:	je     0x42664a
  4265ec:	jmp    0x296feff9
  4265f1:	cwde   
  4265f2:	out    0x72,al
  4265f4:	gs in  eax,0xb2
  4265f7:	test   al,0x5d
  4265f9:	aas    
  4265fa:	rcr    BYTE PTR [esi-0x6b],0x2e
  4265fe:	adc    edi,ebp
  426600:	inc    ebp
  426601:	sbb    ch,BYTE PTR [eax]
  426603:	xchg   ecx,eax
  426604:	les    eax,FWORD PTR [ebx-0x72]
  426607:	fnstcw WORD PTR [ecx+ebx*2-0x34]
  42660b:	xor    al,0xa6
  42660d:	pop    ds
  42660e:	repz test al,0x22
  426611:	and    eax,DWORD PTR [esp+ebp*2-0x18]
  426615:	inc    esi
  426616:	mov    dh,dh
  426618:	out    dx,al
  426619:	fiadd  DWORD PTR [edx+0x6d5a0cb]
  42661f:	mov    ch,0xc6
  426621:	lods   eax,DWORD PTR ds:[esi]
  426622:	(bad)  
  426623:	adc    eax,0x527957aa
  426628:	ins    DWORD PTR es:[edi],dx
  426629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42662a:	sub    BYTE PTR [ecx-0x60],cl
  42662d:	int3   
  42662e:	jmp    0x852009cd
  426633:	adc    edx,DWORD PTR [ebx+0x47]
  426636:	shl    edi,cl
  426638:	shl    BYTE PTR [eax-0x3c],1
  42663b:	imul   ebx,ebp,0xffffffcf
  42663e:	xchg   ebx,eax
  42663f:	fwait
  426640:	xchg   DWORD PTR [edx-0x6f9100ab],edx
  426646:	pinsrw mm1,ebp,0x6e
  42664a:	pop    eax
  42664b:	mov    WORD PTR [edi-0x43c91b7e],gs
  426651:	push   esp
  426652:	and    ebp,0x57
  426655:	jle    0x42663c
  426657:	jo     0x426637
  426659:	mov    BYTE PTR [edi+0x5855097a],cl
  42665f:	mov    eax,0xaa4a83a7
  426664:	stc    
  426665:	aas    
  426666:	inc    ebp
  426667:	fsubr  DWORD PTR ss:[ebp+0x4]
  42666b:	int3   
  42666c:	sbb    BYTE PTR [ebp-0x74],bl
  42666f:	fmul   DWORD PTR [esp+eax*1-0x13]
  426673:	pop    eax
  426674:	int3   
  426675:	fisttp WORD PTR [ecx]
  426677:	cwde   
  426678:	push   0x3c5cd29f
  42667d:	int3   
  42667e:	push   0xffffffe9
  426680:	test   DWORD PTR [esi+0x1da8af99],0x6cf2ad21
  42668a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42668b:	fnstenv [eax*1+0x2cae7577]
  426692:	mov    dh,0xba
  426694:	leave  
  426695:	inc    edi
  426696:	mov    ch,0x64
  426699:	aam    0x92
  42669b:	push   ebx
  42669c:	sbb    ecx,esp
  42669e:	xchg   ebx,eax
  42669f:	int    0x47
  4266a1:	ds jmp 0x426650
  4266a4:	outs   dx,DWORD PTR ds:[esi]
  4266a5:	push   ecx
  4266a6:	and    eax,0x31c12857
  4266ab:	jbe    0x426697
  4266ad:	jge    0x426670
  4266af:	pop    eax
  4266b0:	xchg   esi,eax
  4266b1:	pop    es
  4266b2:	sbb    ecx,DWORD PTR ds:0x33b98eb
  4266b8:	and    eax,0x5916ab09
  4266bd:	adc    al,0x6a
  4266bf:	pop    edx
  4266c0:	scas   eax,DWORD PTR es:[edi]
  4266c1:	mov    DWORD PTR [eax+ebp*4],edi
  4266c4:	test   DWORD PTR [esi-0x51c5a043],esp
  4266ca:	nop
  4266cb:	ds inc esi
  4266cd:	jmp    0xe61f:0xcfaf2bd
  4266d4:	and    bl,BYTE PTR [esp+ebp*4+0x36]
  4266d8:	mov    edi,0x94ee00aa
  4266dd:	sub    bh,BYTE PTR [ebx+0x2ca2b274]
  4266e3:	ds pop ebp
  4266e5:	pusha  
  4266e6:	cmp    al,0xf9
  4266e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266e9:	or     edx,DWORD PTR [eax-0xe]
  4266ec:	sub    edi,ecx
  4266ee:	or     eax,0x205a6aef
  4266f3:	retf   0x42c7
  4266f6:	sub    BYTE PTR [edi],cl
  4266f8:	cmp    DWORD PTR [eiz*2+0x77681c2a],0xfd6bf3ac
  426703:	xlat   BYTE PTR ds:[ebx]
  426704:	and    eax,0xfd2c4137
  426709:	xchg   ebx,eax
  42670a:	inc    eax
  42670b:	sahf   
  42670c:	int    0x2e
  42670e:	test   DWORD PTR [eax-0x61e88d5d],eax
  426714:	pop    es
  426715:	mov    bl,0x5b
  426717:	cmp    al,0x90
  426719:	std    
  42671a:	jns    0x42669d
  42671c:	or     DWORD PTR [edx-0xa],0xffffffad
  426720:	imul   edi,DWORD PTR [edi-0x79bd2365],0x22
  426727:	jns    0x426748
  426729:	pop    ds
  42672a:	cs repz aam 0xf2
  42672e:	xor    edi,DWORD PTR [edx+0x36f291e]
  426734:	jmp    0xc42e02b5
  426739:	(bad)  
  42673a:	push   ds
  42673b:	imul   ecx,DWORD PTR [esi],0x4e3b0e5b
  426741:	adc    BYTE PTR [esp+ecx*1-0x53b24edb],ah
  426748:	icebp  
  426749:	repnz sbb al,0xff
  42674c:	and    BYTE PTR [esi],cl
  42674e:	ret    0x25e8
  426751:	imul   esi,esp,0xffffff84
  426754:	and    DWORD PTR [eax-0x2a9b5f20],esp
  42675a:	dec    ecx
  42675b:	mov    ds:0xddac821e,eax
  426760:	sbb    BYTE PTR [edx+0x3d],dl
  426763:	cwde   
  426764:	xchg   ebx,ecx
  426766:	inc    esi
  426767:	call   0x6d4526e3
  42676c:	ds popa 
  42676e:	arpl   WORD PTR [ebp+0x64],si
  426771:	pop    ebp
  426772:	inc    ebx
  426773:	call   0x3581:0x2fee61be
  42677a:	mov    WORD PTR [ecx+ebx*1],?
  42677d:	inc    ecx
  42677e:	mov    ds:0x4a5076fd,eax
  426783:	call   0xb521:0xbec605ba
  42678a:	(bad)  [ebp+0x1d]
  42678d:	mov    edx,0x76da2000
  426792:	inc    edx
  426793:	pop    ebp
  426794:	test   eax,0xf1930fbb
  426799:	dec    ebx
  42679a:	jns    0x4267af
  42679c:	pop    edx
  42679d:	xor    DWORD PTR [edi-0x6b02e054],0xffffffc0
  4267a4:	in     eax,dx
  4267a5:	ror    DWORD PTR ds:0x80034a36,1
  4267ab:	stos   DWORD PTR es:[edi],eax
  4267ac:	test   eax,0x894a3d63
  4267b1:	inc    esp
  4267b2:	nop
  4267b3:	dec    ebx
  4267b4:	xchg   BYTE PTR ds:0xe9625be4,dh
  4267ba:	add    BYTE PTR [eax],al
  4267bc:	cli    
  4267bd:	rcl    DWORD PTR ds:0xfac73d07,cl
  4267c3:	push   DWORD PTR ds:0xd11c7bfe
  4267c9:	push   cs
  4267ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267cb:	dec    edi
  4267cc:	and    al,0xe0
  4267ce:	add    DWORD PTR [eax],eax
  4267d0:	xchg   BYTE PTR [edx],al
  4267d2:	add    BYTE PTR [eax],al
  4267d4:	sbb    al,BYTE PTR ds:0xef7873fe
  4267da:	test   eax,0x903004ab
  4267df:	pop    ebp
  4267e0:	pushf  
  4267e1:	jns    0x4267b9
  4267e3:	jle    0x4267c8
  4267e5:	ins    BYTE PTR es:[edi],dx
  4267e6:	pop    es
  4267e7:	cwde   
  4267e8:	xchg   ecx,eax
  4267e9:	ror    cl,0x35
  4267ec:	aas    
  4267ed:	dec    eax
  4267ee:	jbe    0x426824
  4267f0:	adc    DWORD PTR [edx],ebx
  4267f2:	sub    DWORD PTR [ebx+0x4d],esi
  4267f5:	jmp    0x494c52b5
  4267fa:	xor    eax,0xa0e20df6
  4267ff:	imul   esi,DWORD PTR [ebx+0x1e],0x4b
  426803:	data16 sbb bh,BYTE PTR [edi+0x291b18bc]
  42680a:	stos   BYTE PTR es:[edi],al
  42680b:	scas   al,BYTE PTR es:[edi]
  42680c:	mov    ecx,0x76643f50
  426811:	call   FWORD PTR ds:0xdf0868b7
  426817:	push   ecx
  426818:	and    BYTE PTR [edx],ah
  42681a:	mov    ecx,0x491fa989
  42681f:	pop    ds
  426820:	inc    esi
  426821:	jmp    0x4267fd
  426823:	adc    eax,0x2420652f
  426828:	mov    ch,0x40
  42682a:	shl    DWORD PTR [ebp-0x139ee68b],0xc3
  426831:	ins    BYTE PTR es:[edi],dx
  426832:	stc    
  426833:	pop    ebx
  426834:	adc    edx,DWORD PTR [ecx+edi*4]
  426837:	fs dec ecx
  426839:	shr    DWORD PTR [ebp+0x633a69e0],cl
  42683f:	or     edx,DWORD PTR [edx+0x79]
  426842:	push   eax
  426843:	xchg   edi,eax
  426844:	sar    BYTE PTR [edx-0x80],cl
  426847:	dec    esp
  426848:	int    0xe5
  42684a:	lahf   
  42684b:	xchg   edi,eax
  42684c:	sbb    al,0xdd
  42684e:	aam    0xda
  426850:	jl     0x426841
  426852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426853:	test   al,0x2a
  426855:	scas   eax,DWORD PTR es:[edi]
  426856:	out    dx,eax
  426857:	icebp  
  426858:	pop    ss
  426859:	cwde   
  42685a:	mov    edx,0x2abe95c1
  42685f:	and    BYTE PTR [edx-0x7d],cl
  426862:	ror    DWORD PTR [esi],cl
  426864:	dec    esi
  426865:	rcl    DWORD PTR ds:[ecx+0x1],1
  426869:	mov    eax,0x2d9a93c
  42686e:	retf   
  42686f:	mov    ch,BYTE PTR [ecx-0x9]
  426872:	mul    BYTE PTR [ebx+0x50]
  426875:	and    al,0xae
  426877:	and    al,0x2a
  426879:	ror    eax,cl
  42687b:	faddp  st(1),st
  42687d:	ds mov ch,0x3e
  426880:	pop    ebp
  426881:	xchg   edx,eax
  426882:	cdq    
  426883:	pop    esi
  426884:	sti    
  426885:	pop    ebp
  426886:	jns    0x4268d3
  426888:	jl     0x4268bc
  42688a:	jecxz  0x4268d6
  42688c:	xor    ecx,esp
  42688e:	ret    0x49ae
  426891:	xor    DWORD PTR [ebx],ebp
  426893:	mov    bh,0x72
  426895:	xchg   DWORD PTR [edi+0x6589cdc4],edi
  42689b:	mov    ch,0xe3
  42689d:	cmp    edx,DWORD PTR [esi+0x6a]
  4268a0:	xchg   esi,eax
  4268a1:	ret    0x8d1d
  4268a4:	clc    
  4268a5:	xchg   DWORD PTR [esi],edi
  4268a7:	leave  
  4268a8:	mov    al,ds:0x7554b83a
  4268ad:	xchg   esp,eax
  4268ae:	mov    eax,ds:0x38abda2e
  4268b3:	into   
  4268b4:	cld    
  4268b5:	cmp    bl,BYTE PTR [ebx+eax*1-0x8]
  4268b9:	lock cdq 
  4268bb:	outs   dx,DWORD PTR ds:[esi]
  4268bc:	adc    BYTE PTR [esi],bl
  4268be:	or     ah,BYTE PTR [ebp+0xbbaf1e6]
  4268c4:	xchg   edi,eax
  4268c5:	push   esi
  4268c6:	pop    edx
  4268c7:	aaa    
  4268c8:	xchg   BYTE PTR [esi+edx*2],bl
  4268cb:	js     0x426889
  4268cd:	pop    ebx
  4268ce:	mov    cl,0x4c
  4268d0:	sub    al,BYTE PTR [edi]
  4268d2:	mov    eax,ds:0x92be34a6
  4268d7:	(bad)  
  4268d8:	out    0xc4,al
  4268da:	addr16 xchg edx,eax
  4268dc:	and    BYTE PTR [ebx+0x40],0x1d
  4268e0:	dec    ecx
  4268e1:	ss cwde 
  4268e3:	mov    bl,0xc9
  4268e5:	cwde   
  4268e6:	in     eax,dx
  4268e7:	and    eax,0xcf064351
  4268ec:	addr16 adc ah,al
  4268ef:	imul   esi,ebx,0x6e29b306
  4268f5:	inc    ebx
  4268f6:	jecxz  0x4268f6
  4268f8:	fsubr  st,st(3)
  4268fa:	mov    al,ds:0x7093d049
  4268ff:	(bad)  
  426900:	(bad)  
  426901:	lods   eax,DWORD PTR ds:[esi]
  426902:	cdq    
  426903:	rcr    ah,1
  426905:	or     al,0x2e
  426907:	mov    esp,0x46d9077d
  42690c:	ss leave 
  42690e:	lds    eax,FWORD PTR [edx+0x1]
  426911:	hlt    
  426912:	dec    esi
  426913:	dec    ebx
  426914:	jnp    0x426948
  426916:	inc    ebp
  426917:	shl    BYTE PTR [edi-0x61c361d3],0x17
  42691e:	lds    eax,FWORD PTR [ecx+0x15]
  426921:	xlat   BYTE PTR ds:[ebx]
  426922:	xor    DWORD PTR [eax],esp
  426924:	stos   BYTE PTR es:[edi],al
  426925:	inc    edi
  426926:	dec    ebx
  426927:	ret    
  426928:	aad    0x46
  42692a:	in     eax,0x40
  42692c:	ins    DWORD PTR es:[edi],dx
  42692d:	xor    DWORD PTR [edi-0x2344edd8],0xffffffbf
  426934:	aas    
  426935:	mov    edx,0x936be541
  42693a:	inc    edi
  42693b:	cmp    DWORD PTR [eax],0x69
  42693e:	xor    BYTE PTR [edi+0x61],ah
  426941:	xchg   ebp,eax
  426942:	out    dx,al
  426943:	das    
  426944:	sub    eax,0xaad3b156
  426949:	ret    0x510c
  42694c:	add    edi,esp
  42694e:	inc    al
  426950:	out    0xa6,al
  426952:	and    DWORD PTR [esi],esp
  426954:	adc    dl,BYTE PTR [ecx+eiz*1+0x2]
  426958:	mov    bh,0x4c
  42695a:	push   esp
  42695b:	sahf   
  42695c:	pop    es
  42695d:	xchg   ecx,eax
  42695e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695f:	popa   
  426960:	ja     0x4269d4
  426962:	std    
  426963:	stos   BYTE PTR es:[edi],al
  426964:	stos   DWORD PTR es:[edi],eax
  426965:	sbb    al,0xf4
  426967:	and    al,ch
  426969:	loope  0x42695b
  42696b:	jecxz  0x426915
  42696d:	sbb    eax,DWORD PTR [ebx-0x78]
  426970:	jbe    0x426999
  426972:	and    DWORD PTR [ebx+0x5fba1fd2],0xffffffba
  426979:	mov    eax,0xfab7b020
  42697e:	adc    eax,0xd930f519
  426983:	popf   
  426984:	inc    edi
  426985:	push   ds
  426986:	adc    al,0xe8
  426988:	sub    esi,DWORD PTR [eax-0x74]
  42698b:	mov    esp,0x1e36c445
  426990:	sbb    eax,0x4bc6e2b3
  426995:	cld    
  426996:	lock fidiv WORD PTR [ecx-0x44]
  42699a:	in     al,dx
  42699b:	js     0x42699e
  42699d:	cmp    ch,BYTE PTR [edi+0x67b71920]
  4269a3:	mov    ds:0x88a4401a,al
  4269a8:	lds    esi,FWORD PTR ds:0xcfb72a22
  4269ae:	retw   
  4269b0:	or     DWORD PTR [edx+0x72205e91],0xfd3a9c01
  4269ba:	mov    ds,WORD PTR [esi-0x5759621f]
  4269c0:	mov    dl,0xbc
  4269c2:	je     0x4269c0
  4269c4:	(bad)  
  4269c5:	test   eax,0xb86fdc29
  4269ca:	pop    ecx
  4269cb:	pop    ds
  4269cc:	daa    
  4269cd:	inc    ebx
  4269ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269cf:	in     al,dx
  4269d0:	push   ecx
  4269d1:	add    bl,cl
  4269d3:	xchg   esi,eax
  4269d4:	rol    DWORD PTR [ecx],0xde
  4269d7:	inc    esi
  4269d8:	outs   dx,BYTE PTR ds:[esi]
  4269d9:	loope  0x426a3c
  4269db:	fistp  QWORD PTR [edx+0x4babbef6]
  4269e1:	adc    al,0x3
  4269e3:	(bad)  
  4269e4:	cmp    eax,0x8c3ac826
  4269e9:	ror    DWORD PTR [eax+0x61ff77b6],1
  4269ef:	mov    edx,0xfa46f653
  4269f4:	lock ins DWORD PTR es:[edi],dx
  4269f6:	sahf   
  4269f7:	inc    eax
  4269f8:	fistp  QWORD PTR [edx]
  4269fa:	mov    esi,0xe829c96b
  4269ff:	sub    BYTE PTR [ebx-0x3d],dh
  426a02:	dec    ebx
  426a03:	hlt    
  426a04:	push   edi
  426a05:	sub    ah,BYTE PTR [edi-0x2c725f2d]
  426a0b:	jno    0x4269c1
  426a0d:	and    eax,DWORD PTR [ecx+0x1a]
  426a10:	loop   0x426a2d
  426a12:	or     eax,0x5f1d5651
  426a17:	pop    ebp
  426a18:	imul   esp,DWORD PTR [ebx+0x45a4e259],0x30
  426a1f:	dec    ebp
  426a20:	cwde   
  426a21:	mov    cl,0x58
  426a23:	out    dx,eax
  426a24:	or     al,0xa
  426a26:	stc    
  426a27:	in     eax,0x1f
  426a29:	mov    dh,0x64
  426a2b:	add    esi,ecx
  426a2d:	ror    BYTE PTR [eax+0x3181fde8],0x71
  426a34:	leave  
  426a35:	and    dl,bl
  426a37:	in     eax,dx
  426a38:	aad    0x4d
  426a3a:	sbb    al,cl
  426a3c:	push   eax
  426a3d:	clc    
  426a3e:	fmul   QWORD PTR [esi-0x51039e0c]
  426a44:	fidiv  WORD PTR [esi+0x59]
  426a47:	mov    ds:0xd623be88,al
  426a4c:	push   ecx
  426a4d:	mov    esp,0x3b17e9b6
  426a52:	push   cs
  426a53:	xor    DWORD PTR [eax+0x5c37c3b],edi
  426a59:	add    DWORD PTR [eax],eax
  426a5b:	add    bh,cl
  426a5d:	neg    BYTE PTR [ebp-0x308442b0]
  426a63:	(bad)  
  426a64:	out    dx,eax
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	(bad)  
  426a67:	push   ss
  426a68:	ins    BYTE PTR es:[edi],dx
  426a69:	or     edi,DWORD PTR [eax]
  426a6b:	sbb    DWORD PTR [edx-0x79fffe1e],ebp
  426a71:	add    al,BYTE PTR [eax]
  426a73:	add    bl,ah
  426a75:	push   eax
  426a76:	retf   
  426a77:	addr16 fmul st,st(3)
  426a7a:	jne    0x426a9f
  426a7c:	lock popa 
  426a7e:	lock test cl,al
  426a81:	adc    DWORD PTR [edi+edx*8],esp
  426a84:	std    
  426a85:	repz sbb dl,0xbc
  426a89:	into   
  426a8a:	pop    esp
  426a8b:	pop    edi
  426a8c:	jl     0x426a90
  426a8e:	div    BYTE PTR [edi-0x37]
  426a91:	or     bl,bl
  426a93:	or     BYTE PTR [eax],bl
  426a95:	push   ecx
  426a96:	enter  0xdd51,0xb4
  426a9a:	push   0xffffffc0
  426a9c:	mov    ds:0x39a0d1ad,eax
  426aa1:	pop    es
  426aa2:	pop    es
  426aa3:	mov    eax,0x893969e
  426aa8:	push   ecx
  426aa9:	pusha  
  426aaa:	jnp    0x426aef
  426aac:	stos   BYTE PTR es:[edi],al
  426aad:	adc    eax,0x473a05b4
  426ab2:	adc    cl,BYTE PTR [ecx+eax*1]
  426ab5:	nop
  426ab6:	repnz cmp eax,0x892afa08
  426abc:	adc    DWORD PTR [ebp+0xb],ebp
  426abf:	sar    DWORD PTR [ecx-0x60],1
  426ac2:	adc    BYTE PTR [edi+esi*2],0x47
  426ac6:	inc    edi
  426ac7:	mov    edi,0x3797f811
  426acc:	fdiv   QWORD PTR [ebx+0xe]
  426acf:	add    ebp,DWORD PTR [edx+0x52]
  426ad2:	lods   eax,DWORD PTR ds:[esi]
  426ad3:	mov    ebx,0x1b6c2b8a
  426ad8:	hlt    
  426ad9:	pop    esp
  426ada:	jge    0x426b56
  426adc:	and    dl,BYTE PTR [esi+esi*2+0x14]
  426ae0:	lea    edx,[ebx+0x4e6e55fa]
  426ae6:	mov    eax,0x38552f89
  426aeb:	xlat   BYTE PTR ds:[ebx]
  426aec:	aas    
  426aed:	or     eax,0x3e3e8ded
  426af2:	jno    0x426b51
  426af4:	mov    cl,0x18
  426af6:	jle    0x426b45
  426af8:	mul    dh
  426afa:	add    esi,DWORD PTR [ecx+0x36b3576a]
  426b00:	and    al,0x48
  426b02:	shr    BYTE PTR [ebx],1
  426b04:	dec    edx
  426b05:	imul   esi,DWORD PTR [esi+0x4392e2a],0x1bf7f1ac
  426b0f:	lea    ebx,[ebp-0x1a]
  426b12:	add    dh,dh
  426b14:	and    esp,0x958ee462
  426b1a:	or     eax,0x5d8d31b3
  426b1f:	mov    ebx,eax
  426b21:	outs   dx,BYTE PTR ds:[esi]
  426b22:	jmp    0x6189bc3c
  426b27:	call   0xb6d7a846
  426b2c:	mov    bl,0xe0
  426b2e:	es ds mov bh,0x9f
  426b32:	fisub  WORD PTR [ebp+0x0]
  426b35:	aaa    
  426b36:	jne    0x426ba6
  426b38:	js     0x426acd
  426b3a:	jp     0x426b71
  426b3c:	adc    BYTE PTR [ebx+0x225babb],ah
  426b42:	pop    es
  426b43:	gs and al,0xf0
  426b46:	mov    dl,0x5b
  426b48:	pop    ebx
  426b49:	arpl   WORD PTR [edi],si
  426b4b:	sbb    edi,ecx
  426b4d:	mov    ds:0x102cb9a8,al
  426b52:	lahf   
  426b53:	sub    DWORD PTR [ecx+edx*4-0x7b0e627f],edx
  426b5a:	cmc    
  426b5b:	hlt    
  426b5c:	ins    BYTE PTR es:[edi],dx
  426b5d:	or     BYTE PTR [bx+si+0x42],bh
  426b61:	xchg   ecx,eax
  426b62:	sub    bl,BYTE PTR [eax+0x3b]
  426b65:	mov    ebp,0x68d42b9a
  426b6a:	sbb    bh,BYTE PTR [edi]
  426b6c:	loope  0x426ba2
  426b6e:	xchg   esi,eax
  426b6f:	imul   esi,DWORD PTR [ecx-0x19b519c1],0x48
  426b76:	loop   0x426bb3
  426b78:	xchg   esp,eax
  426b79:	inc    ebp
  426b7a:	lods   eax,DWORD PTR ds:[esi]
  426b7b:	jl     0x426b5f
  426b7d:	cmp    al,0xec
  426b7f:	jo     0x426b3b
  426b81:	inc    esp
  426b82:	mov    eax,0x9edec719
  426b87:	outs   dx,BYTE PTR ds:[esi]
  426b88:	and    eax,0x396093bf
  426b8d:	pop    edx
  426b8e:	dec    DWORD PTR [ebx-0x3f]
  426b91:	mov    edi,0x96fda54e
  426b96:	in     eax,0x43
  426b98:	sub    edi,edi
  426b9a:	ficom  DWORD PTR [edi-0xa]
  426b9d:	lock mov WORD PTR [edx-0x19],es
  426ba1:	xchg   esi,eax
  426ba2:	rcr    DWORD PTR [edx+eiz*2-0x4e],cl
  426ba6:	jae    0x426c15
  426ba8:	mov    cs,WORD PTR [edi+eiz*8]
  426bab:	cmp    eax,0xe1a1fd0f
  426bb0:	or     eax,0xd73374c8
  426bb5:	fld    DWORD PTR [edx+0x44]
  426bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bb9:	loop   0x426c28
  426bbb:	push   eax
  426bbc:	in     eax,0x16
  426bbe:	fsubr  DWORD PTR [edi]
  426bc0:	sbb    BYTE PTR [esi-0x181b3d4],ch
  426bc6:	clc    
  426bc7:	jecxz  0x426c1d
  426bc9:	add    DWORD PTR [ebx-0x5d],esp
  426bcc:	lods   al,BYTE PTR ds:[esi]
  426bcd:	jmp    0x426bd1
  426bcf:	adc    eax,0xf6344a96
  426bd4:	shl    DWORD PTR [edi-0x46],cl
  426bd7:	push   esi
  426bd8:	push   esp
  426bd9:	and    edx,DWORD PTR [ebx]
  426bdb:	mov    bl,0x95
  426bdd:	push   ss
  426bde:	xor    BYTE PTR [edx],cl
  426be0:	pop    ebx
  426be1:	ins    DWORD PTR es:[edi],dx
  426be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426be3:	hlt    
  426be4:	xor    BYTE PTR ds:0xbbe30b7a,bl
  426bea:	arpl   WORD PTR [eax-0x21],bp
  426bed:	and    edi,ebx
  426bef:	sahf   
  426bf0:	les    edx,FWORD PTR [edi+ebx*4+0x78a53352]
  426bf7:	mov    BYTE PTR ds:0xf9f8dbf3,cl
  426bfd:	mov    ecx,0xa4b35c53
  426c02:	dec    ecx
  426c03:	loopne 0x426c34
  426c05:	lods   al,BYTE PTR ds:[esi]
  426c06:	test   al,0x42
  426c08:	sbb    DWORD PTR [ebx+0x2a],0x13
  426c0c:	dec    esi
  426c0d:	sub    BYTE PTR [edi+edi*8],bh
  426c10:	imul   esi,DWORD PTR [eax+0xe],0x28
  426c14:	and    al,0xc5
  426c16:	mov    ds:0xa16341cd,al
  426c1b:	dec    ebx
  426c1c:	jecxz  0x426c29
  426c1e:	add    al,0x62
  426c20:	fld    DWORD PTR [ebx+0x3640e00a]
  426c26:	lods   eax,DWORD PTR ds:[esi]
  426c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c28:	adc    edx,0x5b32ad17
  426c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c2f:	inc    ebx
  426c30:	and    BYTE PTR [esi],dh
  426c32:	ror    DWORD PTR [ecx],0x9c
  426c35:	push   cs
  426c36:	dec    esp
  426c37:	fmulp  st(3),st
  426c39:	sub    bh,cl
  426c3b:	scas   eax,DWORD PTR es:[edi]
  426c3c:	sub    ebp,edx
  426c3e:	sbb    DWORD PTR [ebp-0x44],ecx
  426c41:	add    BYTE PTR [esi-0x479a2c76],ch
  426c47:	xchg   DWORD PTR [ecx+0x36790d5a],ebx
  426c4d:	pop    ds
  426c4e:	out    0x8d,eax
  426c50:	(bad)  
  426c51:	and    al,0x50
  426c53:	inc    ebp
  426c54:	loop   0x426cd3
  426c56:	imul   eax,edx,0x1d
  426c59:	jno    0x426be2
  426c5b:	pushf  
  426c5c:	nop
  426c5d:	stc    
  426c5e:	cmp    esi,DWORD PTR fs:[eax]
  426c61:	std    
  426c62:	fistp  DWORD PTR [ecx-0x63]
  426c65:	(bad)  
  426c66:	aam    0x41
  426c68:	inc    ebx
  426c69:	lods   eax,DWORD PTR ds:[esi]
  426c6a:	jecxz  0x426cbc
  426c6c:	pop    esi
  426c6d:	sahf   
  426c6e:	xchg   edx,eax
  426c6f:	inc    edi
  426c70:	(bad)  
  426c72:	sbb    bh,cl
  426c74:	xor    DWORD PTR [eax+0x24],ecx
  426c77:	or     al,BYTE PTR [edx+0x41]
  426c7a:	add    al,0xa6
  426c7c:	lods   eax,DWORD PTR ds:[esi]
  426c7d:	js     0x426c41
  426c7f:	cwde   
  426c80:	add    al,0x48
  426c82:	mov    ds,edx
  426c84:	imul   esi,DWORD PTR ds:0xd908e5a9,0x35adbc9b
  426c8e:	imul   eax,DWORD PTR [eax+eiz*4+0x3f],0x7c
  426c93:	add    ecx,eax
  426c95:	inc    esp
  426c96:	or     DWORD PTR [eax+0x55],esp
  426c99:	push   esi
  426c9a:	fnstsw WORD PTR [esi]
  426c9c:	std    
  426c9d:	xchg   ecx,eax
  426c9e:	ins    BYTE PTR es:[edi],dx
  426c9f:	out    dx,eax
  426ca0:	and    DWORD PTR [ecx+0x7],esp
  426ca3:	fstp   DWORD PTR [edi+0x1f573f5b]
  426ca9:	stos   BYTE PTR es:[edi],al
  426caa:	pop    esi
  426cab:	repz scas eax,DWORD PTR es:[edi]
  426cad:	cdq    
  426cae:	fadd   QWORD PTR [ecx]
  426cb0:	aaa    
  426cb1:	mul    DWORD PTR [ebp-0x6c6791ea]
  426cb7:	into   
  426cb8:	daa    
  426cb9:	jnp    0x426c76
  426cbb:	jmp    0xaaf396c1
  426cc0:	retf   0x8541
  426cc3:	mov    edi,ecx
  426cc5:	mov    esp,0xc725582
  426cca:	mov    ch,0xf0
  426ccc:	mov    ah,0x6e
  426cce:	inc    edx
  426ccf:	mov    dl,0xc3
  426cd1:	lahf   
  426cd2:	sub    dl,bl
  426cd4:	sar    DWORD PTR [eax+eax*2],cl
  426cd7:	adc    eax,edi
  426cd9:	pop    esi
  426cda:	sub    ah,BYTE PTR [ebx-0x1a01b502]
  426ce0:	mov    edx,0x4dfd8d0
  426ce5:	add    ebx,DWORD PTR ds:0x5060aa4d
  426ceb:	inc    ecx
  426cec:	mov    al,0xcd
  426cee:	gs mov ch,0xba
  426cf1:	sbb    DWORD PTR [eax],esp
  426cf3:	jno    0x426ccf
  426cf5:	pushf  
  426cf6:	fcomi  st,st(3)
  426cf8:	push   esp
  426cf9:	nop
  426cfa:	add    BYTE PTR [eax],al
  426cfc:	push   0x6f1e2d23
  426d01:	push   ds
  426d02:	jnp    0x426d7b
  426d04:	fisub  WORD PTR [ebp+0x52efb036]
  426d0a:	xchg   esp,eax
  426d0b:	scas   al,BYTE PTR es:[edi]
  426d0c:	xor    ch,ah
  426d0e:	add    DWORD PTR [eax],eax
  426d10:	xchg   BYTE PTR [edx],al
  426d12:	add    BYTE PTR [eax],al
  426d14:	mov    edi,0x995938e8
  426d19:	jo     0x426cc3
  426d1b:	and    eax,0x3136ce45
  426d20:	pop    edx
  426d21:	call   DWORD PTR [esi+0x46668325]
  426d27:	inc    esi
  426d28:	mov    dh,BYTE PTR [edi-0x890e490]
  426d2e:	mov    edx,0x91dac2e3
  426d33:	mov    ah,0xf2
  426d35:	push   eax
  426d36:	addr16 or al,0x56
  426d39:	popf   
  426d3a:	test   eax,0x55d4b4cf
  426d3f:	or     eax,0xecf5bf7
  426d44:	adc    BYTE PTR [edx+ebx*4+0x6b63ce06],al
  426d4b:	xchg   edx,eax
  426d4c:	and    bl,ch
  426d4e:	je     0x426cfc
  426d50:	dec    ecx
  426d51:	ds pop esp
  426d53:	repnz or ch,BYTE PTR [ebx-0x3d623a50]
  426d5a:	test   BYTE PTR [ecx-0x65],dl
  426d5d:	sub    eax,0x6198ea32
  426d62:	aas    
  426d63:	fimul  WORD PTR [edi+0x68]
  426d66:	stc    
  426d67:	inc    ecx
  426d68:	xlat   BYTE PTR ds:[ebx]
  426d69:	repnz pop ds
  426d6b:	sub    ah,BYTE PTR [ebp+0x39]
  426d6e:	xchg   ebp,eax
  426d6f:	and    BYTE PTR [ebp+0x11],ch
  426d72:	rcr    BYTE PTR [edi+0x15],1
  426d75:	sub    DWORD PTR [esi-0x46],edx
  426d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d79:	in     al,0xcf
  426d7b:	xchg   ebp,eax
  426d7c:	imul   ecx,DWORD PTR [ecx],0xbb7005bb
  426d82:	out    dx,al
  426d83:	ss push eax
  426d85:	push   cs
  426d86:	mov    BYTE PTR [esi-0xb2755c2],ch
  426d8c:	push   esp
  426d8d:	fwait
  426d8e:	mov    ds:0xf48f18a,eax
  426d93:	cld    
  426d94:	(bad)  [ecx+0x3b156c64]
  426d9a:	pop    ds
  426d9b:	cmc    
  426d9c:	ret    0xf9cb
  426d9f:	sub    esi,DWORD PTR [edx-0xc45dd9d]
  426da5:	inc    edi
  426da6:	adc    DWORD PTR [eax-0x5a],ebp
  426da9:	mov    al,ds:0x576081f2
  426dae:	xchg   edx,eax
  426daf:	fcom   DWORD PTR [esp+ecx*1-0x634f5f6]
  426db6:	pop    ebx
  426db7:	cmp    DWORD PTR [ebp+ecx*4-0x37],ebx
  426dbb:	cmp    ebp,edx
  426dbd:	ds out 0x32,al
  426dc0:	das    
  426dc1:	pop    ds
  426dc2:	lods   al,BYTE PTR ds:[esi]
  426dc3:	test   BYTE PTR [ebp+0x7a137048],dh
  426dc9:	fstp   QWORD PTR [eax+ebx*8-0x1e]
  426dcd:	es addr16 inc ebx
  426dd0:	cmp    BYTE PTR ss:[edx-0x5b84c164],ah
  426dd7:	dec    edi
  426dd8:	fsubr  DWORD PTR [edi]
  426dda:	fstp   QWORD PTR [edi]
  426ddc:	pop    ss
  426ddd:	jns    0x426e15
  426ddf:	cli    
  426de0:	pop    eax
  426de1:	sbb    eax,0xc267ea83
  426de6:	scas   al,BYTE PTR es:[edi]
  426de7:	adc    DWORD PTR [ecx-0x156acacc],ebp
  426ded:	mov    ds:0x7d2314c8,eax
  426df2:	mov    DWORD PTR [esi-0x4741892a],0x62d4ad47
  426dfc:	gs aaa 
  426dfe:	out    dx,al
  426dff:	jns    0x426ddb
  426e01:	pushf  
  426e02:	pusha  
  426e03:	and    eax,0x9f6f9fcd
  426e08:	cmp    BYTE PTR [edi],dl
  426e0a:	iret   
  426e0b:	fcmovu st,st(7)
  426e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e0e:	lock (bad) 
  426e10:	sub    eax,0x6a9a867a
  426e15:	sub    dh,bl
  426e17:	(bad)  
  426e18:	xchg   edx,eax
  426e19:	cli    
  426e1a:	frstor [ebx-0x345a83b1]
  426e20:	dec    esp
  426e21:	or     dh,cl
  426e23:	mov    DWORD PTR [esi-0x36],ebp
  426e26:	ficom  DWORD PTR [esi-0x55424b02]
  426e2c:	adc    DWORD PTR [edx-0x325269f3],ebp
  426e32:	pop    eax
  426e33:	sbb    BYTE PTR [edi],ah
  426e35:	popf   
  426e36:	mov    ebx,ebx
  426e38:	test   BYTE PTR [ecx-0x7b],dh
  426e3b:	popa   
  426e3c:	mov    ebx,0x1384c82d
  426e41:	push   ds
  426e42:	xchg   edi,eax
  426e43:	ficomp WORD PTR [edx+0x22faee3f]
  426e49:	jl     0x426eba
  426e4b:	loope  0x426ea7
  426e4d:	ds xchg esp,eax
  426e4f:	push   ebx
  426e50:	and    al,0xd1
  426e52:	call   0x2c558ed9
  426e57:	or     al,0x58
  426e59:	mov    cl,0xd4
  426e5b:	ds push edi
  426e5d:	cmp    cl,BYTE PTR [eax]
  426e5f:	fldenv [eax-0x191f8c9d]
  426e65:	jbe    0x426e96
  426e67:	or     al,0x78
  426e69:	les    edx,FWORD PTR ss:[ebp-0x6]
  426e6d:	jl     0x426dfb
  426e6f:	repnz mov ebx,DWORD PTR [eax-0x53]
  426e73:	fsubr  DWORD PTR [ebx]
  426e75:	inc    edi
  426e76:	or     al,0x75
  426e78:	bound  esp,QWORD PTR [ebp+0x6b]
  426e7b:	mov    ebp,0x11c7d0fd
  426e80:	mov    dl,0xf5
  426e82:	loop   0x426e33
  426e84:	xor    bh,BYTE PTR [esi-0x13]
  426e87:	jmp    0x66aa:0xfb5a7111
  426e8e:	hlt    
  426e8f:	jnp    0x426e62
  426e91:	mov    al,ds:0x67f8e560
  426e96:	das    
  426e97:	scas   eax,DWORD PTR es:[edi]
  426e98:	fnstenv [eax+0x5d58366e]
  426e9e:	rol    DWORD PTR [edi-0x674d3d0d],cl
  426ea4:	aaa    
  426ea5:	mov    bl,0xa2
  426ea7:	icebp  
  426ea8:	jo     0x426e54
  426eaa:	pop    eax
  426eab:	ror    BYTE PTR [edi+0x28],1
  426eae:	xchg   esi,eax
  426eaf:	and    al,0x7c
  426eb1:	push   0xffffffa1
  426eb3:	pop    ebp
  426eb4:	arpl   WORD PTR [eax-0x4db7be],bp
  426eba:	mov    eax,ds:0xcf33c173
  426ebf:	sbb    esp,DWORD PTR [edx-0x66d1a1a2]
  426ec5:	jae    0x426ee5
  426ec7:	pop    ebp
  426ec8:	mov    ebp,0x14255a08
  426ecd:	push   ss
  426ece:	jle    0x426edb
  426ed0:	mul    DWORD PTR ds:0x6fcb0127
  426ed6:	cdq    
  426ed7:	jmp    0x8c1b:0x96e96935
  426ede:	push   0xffffffe2
  426ee0:	fst    DWORD PTR [edx+ebp*1+0x3efe0662]
  426ee7:	xor    DWORD PTR [edx+0x64],esp
  426eea:	cmp    DWORD PTR [esi],ebx
  426eec:	cmc    
  426eed:	pop    ebp
  426eee:	fwait
  426eef:	mov    eax,0x4d832ad9
  426ef4:	dec    eax
  426ef5:	jb     0x426e92
  426ef7:	or     DWORD PTR [esi+edi*4],esp
  426efa:	in     al,dx
  426efb:	push   esi
  426efc:	call   0x69d5:0xd95ee61f
  426f03:	xor    al,0xd
  426f05:	cld    
  426f06:	mov    ah,0x53
  426f08:	mov    edi,edx
  426f0a:	jmp    0x3cf8729c
  426f0f:	pushf  
  426f10:	push   ebp
  426f11:	pop    edx
  426f12:	dec    ebp
  426f13:	popf   
  426f14:	cmc    
  426f15:	pop    ebx
  426f16:	in     eax,dx
  426f17:	loop   0x426f4a
  426f19:	in     eax,0xf9
  426f1b:	daa    
  426f1c:	and    ebx,DWORD PTR [ebp-0x718e6318]
  426f22:	or     DWORD PTR [edi],0xffffff96
  426f25:	or     bh,BYTE PTR [ebp-0x40b9c960]
  426f2b:	retf   0xadea
  426f2e:	jecxz  0x426eb5
  426f30:	cmp    al,0x3
  426f32:	leave  
  426f33:	rol    BYTE PTR [edx+0x64],cl
  426f36:	inc    edi
  426f37:	mov    bl,0xd
  426f39:	lahf   
  426f3a:	out    dx,eax
  426f3b:	test   BYTE PTR [edx+0x1bf2a199],dl
  426f41:	jmp    0x426efe
  426f43:	mov    eax,ds:0xab4fa6c2
  426f48:	xor    BYTE PTR [ebp+0x3a],al
  426f4b:	jg     0x426ee4
  426f4d:	cmp    esp,DWORD PTR [ebp+0xd484250]
  426f53:	inc    ebx
  426f54:	les    edi,FWORD PTR [edx]
  426f56:	test   al,0x31
  426f58:	out    0xec,al
  426f5a:	sub    DWORD PTR [ecx+edx*8+0x38c32cac],edi
  426f61:	mov    ecx,0xf420ddf6
  426f66:	or     BYTE PTR [esi],cl
  426f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f69:	outs   dx,DWORD PTR ds:[esi]
  426f6a:	mov    bl,0xf7
  426f6c:	xchg   ebx,eax
  426f6d:	sbb    al,0x46
  426f6f:	retf   
  426f70:	xchg   BYTE PTR [bp+si],ch
  426f73:	cmp    BYTE PTR [esp+ebp*8],ch
  426f76:	pusha  
  426f77:	cmp    dh,ah
  426f79:	adc    eax,0x3abbfa40
  426f7e:	mov    ecx,0xe3118e97
  426f83:	adc    eax,0x41474d0c
  426f88:	inc    ebx
  426f89:	aad    0xfa
  426f8b:	aaa    
  426f8c:	mov    al,ds:0xdc773859
  426f91:	stos   DWORD PTR es:[edi],eax
  426f92:	sbb    eax,0x6bdcfbf6
  426f97:	test   DWORD PTR [esi-0x2a],eax
  426f9a:	add    BYTE PTR [eax],al
  426f9c:	cdq    
  426f9d:	enter  0x9ff8,0xf9
  426fa1:	mov    edi,0xdf92ceff
  426fa6:	push   ds
  426fa7:	outs   dx,BYTE PTR ds:[esi]
  426fa8:	pop    edi
  426fa9:	(bad)  
  426fab:	stc    
  426fac:	mov    dh,0xe7
  426fae:	add    DWORD PTR [eax],eax
  426fb0:	xchg   BYTE PTR [edx],al
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	std    
  426fb5:	dec    ebp
  426fb6:	pop    ds
  426fb7:	and    eax,0x3dc48126
  426fbc:	xor    ebp,ecx
  426fbe:	jbe    0x426fbf
  426fc0:	xchg   BYTE PTR [edx+0x534767a2],bl
  426fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fc7:	dec    edx
  426fc8:	cs imul edi,edi,0xffffffd8
  426fcc:	lods   al,BYTE PTR ds:[esi]
  426fcd:	cld    
  426fce:	jmp    0x69ae:0x1ff6eb8c
  426fd5:	mov    ebp,DWORD PTR [ebx+edi*4]
  426fd8:	jne    0x427024
  426fda:	jb     0x426fb8
  426fdc:	xchg   DWORD PTR [ebp+0x6e91e12e],edi
  426fe2:	iret   
  426fe3:	rol    BYTE PTR [eax+eax*1+0x4b],0xb0
  426fe8:	add    bh,BYTE PTR [edx+0x5d]
  426feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fec:	jo     0x426f85
  426fee:	xchg   edx,eax
  426fef:	test   BYTE PTR [ebx],bl
  426ff1:	fnstcw WORD PTR [ecx+0x7c]
  426ff4:	inc    ebx
  426ff5:	pop    edi
  426ff6:	add    eax,0x13f12058
  426ffb:	or     ch,BYTE PTR [esi]
  426ffd:	add    cl,BYTE PTR [ebp-0x21ad40e8]
  427003:	(bad)  
  427004:	aad    0x31
  427006:	out    0x7d,eax
  427008:	mov    BYTE PTR [edi],bh
  42700a:	sub    BYTE PTR [esi-0x37b94b1],0xa6
  427011:	cmp    eax,0x3b195391
  427016:	dec    edx
  427017:	push   ecx
  427018:	jnp    0x426fc3
  42701a:	aad    0x76
  42701c:	mov    ebp,0xd145c869
  427021:	and    ebx,ebx
  427023:	dec    esp
  427024:	push   esi
  427025:	pop    ds
  427026:	int    0x49
  427028:	adc    BYTE PTR [ecx],al
  42702a:	add    BYTE PTR [ebx+0x73946091],0x4e
  427031:	fidivr DWORD PTR [edi+0x35]
  427034:	call   0x8474:0x8615c3a2
  42703b:	sub    ecx,ecx
  42703d:	pop    es
  42703e:	ss inc esp
  427040:	cmp    ebx,edx
  427042:	or     al,0x3f
  427044:	rcl    BYTE PTR [eax+0x3e87a04],1
  42704a:	push   eax
  42704b:	bound  esp,QWORD PTR [ecx-0x728e2c66]
  427051:	xor    eax,0xd5472618
  427056:	add    eax,0x84ff06c7
  42705b:	call   0x6f439474
  427060:	or     WORD PTR [edi+0x31413b3a],dx
  427067:	cli    
  427068:	adc    DWORD PTR [ebx],ebp
  42706a:	xchg   BYTE PTR [ebx-0x3a],ch
  42706d:	push   es
  42706e:	or     al,0x82
  427070:	addr16 mov ds,ebx
  427073:	push   0xa
  427075:	pop    ecx
  427076:	cs and eax,0x2ae1e2c3
  42707c:	jmp    0x42708e
  42707e:	rol    ebp,1
  427080:	fistp  WORD PTR [esi+0x1]
  427083:	loop   0x4270d5
  427085:	sbb    eax,0x937e56b1
  42708a:	jns    0x4270ff
  42708c:	test   eax,0xceaca9f7
  427091:	lea    esp,[edx-0x72]
  427094:	int3   
  427095:	imul   esi,DWORD PTR gs:[eax-0x11],0x51340369
  42709d:	stos   BYTE PTR es:[edi],al
  42709e:	(bad)  
  42709f:	in     eax,dx
  4270a0:	shl    BYTE PTR [ebp+0x1f3cf683],cl
  4270a6:	es lock loopne 0x4270a3
  4270aa:	js     0x4270cc
  4270ac:	push   edi
  4270ad:	mov    eax,0x461d50e9
  4270b2:	xor    cl,BYTE PTR [eax+0x5216db2c]
  4270b8:	push   si
  4270ba:	mov    BYTE PTR [eax+0x4676ec58],bl
  4270c0:	sub    BYTE PTR [edi-0x3],ah
  4270c3:	and    cl,BYTE PTR [ecx-0x5bd2471b]
  4270c9:	std    
  4270ca:	xor    edi,DWORD PTR [edx-0x36]
  4270cd:	adc    ah,BYTE PTR [eax-0x3f105a3]
  4270d3:	aad    0xec
  4270d5:	push   esi
  4270d6:	int    0xd9
  4270d8:	xlat   BYTE PTR ds:[ebx]
  4270d9:	test   eax,0xe2654587
  4270de:	sub    edi,edx
  4270e0:	sbb    dl,0xec
  4270e3:	jle    0x4270b0
  4270e5:	cmp    al,0x8e
  4270e7:	adc    esp,esp
  4270e9:	cmp    al,0xbe
  4270eb:	repnz xor DWORD PTR [ebp+0x44],esp
  4270ef:	inc    ebp
  4270f0:	retf   
  4270f1:	jno    0x427086
  4270f3:	sub    ch,al
  4270f5:	adc    BYTE PTR [esi],ch
  4270f7:	sbb    eax,0xae43ec8a
  4270fc:	xor    al,0x94
  4270fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270ff:	xor    al,0x28
  427101:	push   eax
  427102:	imul   esp,DWORD PTR [ebp-0x26],0x1115b01a
  427109:	cmp    eax,0x42faedfd
  42710e:	aaa    
  42710f:	(bad)  
  427110:	scas   eax,DWORD PTR es:[edi]
  427111:	push   esi
  427112:	push   cs
  427113:	rcr    BYTE PTR [edx],cl
  427115:	lea    ecx,[edi-0x452335d9]
  42711b:	cli    
  42711c:	(bad)  
  42711d:	and    bh,dl
  42711f:	retf   
  427120:	jbe    0x42711f
  427122:	ins    DWORD PTR es:[edi],dx
  427123:	call   0x7122:0x8797285
  42712a:	cmc    
  42712b:	lahf   
  42712c:	add    ah,cl
  42712e:	jbe    0x427112
  427130:	xchg   edx,eax
  427131:	sub    DWORD PTR [edi-0x34],ebp
  427134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427135:	int3   
  427136:	gs mov esp,0xd03ea84c
  42713c:	push   edi
  42713d:	stos   BYTE PTR es:[edi],al
  42713e:	cmp    ebx,DWORD PTR [ebx]
  427140:	inc    eax
  427141:	popf   
  427142:	cli    
  427143:	stos   BYTE PTR es:[edi],al
  427144:	scas   al,BYTE PTR es:[edi]
  427145:	bound  esp,QWORD PTR ds:0xfdab9c06
  42714b:	(bad)  [edi]
  42714d:	lea    ebp,[esi+0x0]
  427150:	rcr    esp,1
  427152:	jo     0x427187
  427154:	pusha  
  427155:	or     ch,BYTE PTR [esp+ecx*4-0x75]
  427159:	push   edx
  42715a:	xor    BYTE PTR [ecx+0x36e34c84],bh
  427160:	mov    al,0x2d
  427162:	xlat   BYTE PTR ds:[ebx]
  427163:	lock and ebp,DWORD PTR [ecx]
  427166:	fist   DWORD PTR [edx-0x77]
  427169:	pop    edi
  42716a:	mov    al,0xb5
  42716c:	bound  ebx,QWORD PTR [ebp+edx*2-0x64]
  427170:	mov    BYTE PTR [edi+0x7b988feb],ch
  427176:	daa    
  427177:	xchg   ebp,eax
  427178:	cmc    
  427179:	dec    edi
  42717a:	inc    ebx
  42717b:	(bad)  
  42717c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42717d:	dec    edi
  42717e:	lock jg 0x427126
  427181:	jmp    0xca3b7773
  427186:	pop    edi
  427187:	jo     0x427113
  427189:	or     eax,DWORD PTR [ecx-0x59328591]
  42718f:	fisubr DWORD PTR [ecx]
  427191:	mov    cl,BYTE PTR [ebx+eiz*4]
  427194:	fsubr  st(5),st
  427196:	loope  0x427147
  427198:	lds    edi,FWORD PTR [esi+0x5eb2b62a]
  42719e:	mov    al,0x90
  4271a0:	pop    ebp
  4271a1:	div    BYTE PTR [edi+0x24]
  4271a4:	inc    esp
  4271a5:	xchg   esi,eax
  4271a6:	pop    esi
  4271a7:	enter  0x5d66,0xb9
  4271ab:	jecxz  0x427217
  4271ad:	fistp  QWORD PTR [esp+eiz*8-0x6b4c303d]
  4271b4:	loop   0x4271ff
  4271b6:	retf   0xc671
  4271b9:	dec    ebp
  4271ba:	std    
  4271bb:	jp     0x42722b
  4271bd:	arpl   WORD PTR [ebx-0x48a16499],si
  4271c3:	mov    al,0x8b
  4271c5:	add    cl,BYTE PTR ds:0xbbac6aba
  4271cb:	div    DWORD PTR [ebp-0x8]
  4271ce:	dec    edi
  4271cf:	aam    0x42
  4271d1:	loopne 0x427223
  4271d3:	and    al,0x8c
  4271d5:	fdivr  DWORD PTR [ecx+edi*4+0x3adb0143]
  4271dc:	jb     0x4271bd
  4271de:	push   edx
  4271df:	in     eax,dx
  4271e0:	lods   al,BYTE PTR ds:[esi]
  4271e1:	test   eax,0x22f6fcc0
  4271e6:	retf   
  4271e7:	in     al,0x7b
  4271e9:	mov    esp,0x48d2caa1
  4271ee:	pop    es
  4271ef:	aas    
  4271f0:	mov    dh,0x8e
  4271f2:	retf   
  4271f3:	push   0x1eb48576
  4271f8:	test   BYTE PTR [edi-0x3a0551c3],al
  4271fe:	and    eax,0x2b0feff
  427203:	jne    0x427245
  427205:	cmp    al,cl
  427207:	sub    BYTE PTR [edx],dh
  427209:	dec    ecx
  42720a:	or     DWORD PTR [ebp+eiz*4+0x2cd70e0c],0xffffffe4
  427212:	mov    al,0x61
  427214:	int    0xc8
  427216:	jecxz  0x427282
  427218:	cmp    al,0xf6
  42721a:	out    0x69,eax
  42721c:	xor    ebx,DWORD PTR [ebp+eiz*1+0x2bc76b5a]
  427223:	push   edi
  427224:	mov    ebp,0xe794105c
  427229:	xor    BYTE PTR [ecx+0x4ef634c8],dl
  42722f:	lods   eax,DWORD PTR ds:[esi]
  427230:	sub    dl,BYTE PTR [eax-0x13]
  427233:	stos   DWORD PTR es:[edi],eax
  427234:	jae    0x427233
  427236:	je     0x42724d
  427238:	(bad)  
  427239:	cli    
  42723a:	add    BYTE PTR [eax],al
  42723c:	jns    0x427248
  42723e:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427242:	jge    0x4272af
  427244:	int3   
  427245:	outs   dx,BYTE PTR ds:[esi]
  427246:	xchg   esi,esi
  427248:	fisub  DWORD PTR [eax-0x15c30909]
  42724e:	add    DWORD PTR [eax],eax
  427250:	xchg   BYTE PTR [edx],al
  427252:	add    BYTE PTR [eax],al
  427254:	cs mov ah,0x2b
  427257:	push   ebx
  427258:	or     ah,BYTE PTR [ebx-0x25]
  42725b:	dec    eax
  42725c:	xchg   ecx,eax
  42725d:	push   ebp
  42725e:	mov    ss,WORD PTR [edx+0x79a6e661]
  427264:	in     al,0xf8
  427266:	mov    dl,0x2f
  427268:	sub    edi,0x7e
  42726b:	pop    esp
  42726c:	into   
  42726d:	sbb    esi,DWORD PTR [ecx-0x698fcb22]
  427273:	test   eax,0xb46fdaeb
  427278:	inc    ecx
  427279:	sbb    bl,bl
  42727b:	dec    ebp
  42727c:	in     eax,dx
  42727d:	arpl   WORD PTR [ebx+0x8ae6af3],bx
  427283:	in     al,0xa7
  427285:	push   ecx
  427286:	loopne 0x42725f
  427288:	sbb    eax,0xfb87b822
  42728d:	mov    eax,ds:0x20e34233
  427292:	cmp    ebp,DWORD PTR [eiz*1-0x2ff545a6]
  427299:	inc    eax
  42729a:	retf   0x795d
  42729d:	dec    ecx
  42729e:	jmp    0x36b0:0xe03fed4e
  4272a5:	or     BYTE PTR [edx-0x42],cl
  4272a8:	jb     0x427310
  4272aa:	xlat   BYTE PTR ds:[ebx]
  4272ab:	jecxz  0x42726f
  4272ad:	cmp    BYTE PTR [ebx-0x47],bh
  4272b0:	cmp    al,0x26
  4272b2:	push   ebp
  4272b3:	adc    eax,0xe541bf67
  4272b8:	dec    esi
  4272b9:	sahf   
  4272ba:	icebp  
  4272bb:	mov    ds,edx
  4272bd:	push   esp
  4272be:	xchg   ebp,eax
  4272bf:	mov    ds:0xe2f9dbef,al
  4272c4:	xlat   BYTE PTR ds:[ebx]
  4272c5:	push   edx
  4272c6:	std    
  4272c7:	call   0x67f0b210
  4272cc:	test   al,0xc0
  4272ce:	adc    eax,0xd76ad0b8
  4272d3:	(bad)
  4272d6:	pop    ds
  4272d7:	xor    BYTE PTR [edx],bh
  4272d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272da:	mov    bl,0xe5
  4272dc:	dec    esi
  4272dd:	dec    edx
  4272de:	jl     0x4272a5
  4272e0:	out    0xc2,al
  4272e2:	push   es
  4272e3:	pop    ss
  4272e4:	mov    ebp,0x8b922653
  4272e9:	in     eax,dx
  4272ea:	hlt    
  4272eb:	inc    esp
  4272ec:	pop    es
  4272ed:	mov    cl,BYTE PTR [ebp+0x1b]
  4272f0:	sbb    cl,ah
  4272f2:	leave  
  4272f3:	sub    cl,al
  4272f5:	pusha  
  4272f6:	jmp    0x33fa:0x32931aa
  4272fd:	test   BYTE PTR [ebx],bh
  4272ff:	pop    esp
  427300:	cmc    
  427301:	push   ecx
  427302:	add    bl,BYTE PTR [eax+0x67e0bbc7]
  427308:	inc    esp
  427309:	arpl   WORD PTR [esp+ebx*8],sp
  42730c:	stc    
  42730d:	test   al,0xff
  42730f:	out    dx,eax
  427310:	push   ebp
  427311:	popf   
  427312:	call   0x25132735
  427317:	ret    0xd24c
  42731a:	pop    esp
  42731b:	loopne 0x4272f3
  42731d:	data16 jecxz 0x427370
  427320:	mov    eax,ds:0xc20de550
  427325:	jmp    0x3c94279d
  42732a:	pop    edx
  42732b:	xor    bl,BYTE PTR [ecx+0x1e]
  42732e:	pop    edi
  42732f:	mov    ebx,0xbc3c8df4
  427334:	add    cl,BYTE PTR ds:0x3ea49939
  42733a:	cmp    DWORD PTR [ebx+0x406cbef2],edx
  427340:	sbb    edx,DWORD PTR [ecx]
  427342:	sar    bh,1
  427344:	idiv   BYTE PTR [eax]
  427346:	out    dx,al
  427347:	pop    eax
  427348:	sahf   
  427349:	arpl   WORD PTR [edi+0x1148c251],si
  42734f:	in     al,0x50
  427351:	mov    dh,0xec
  427353:	xchg   edx,eax
  427354:	(bad)
  427357:	idiv   BYTE PTR [eax-0x62]
  42735a:	retf   
  42735b:	out    dx,al
  42735c:	call   0xcaf4:0xb401fefb
  427363:	in     eax,dx
  427364:	(bad)  
  427365:	loop   0x427322
  427367:	sub    eax,0x7cde3100
  42736c:	dec    ebp
  42736d:	mov    eax,0x2ce145c0
  427372:	mov    eax,ds:0x50d482ad
  427377:	sub    al,0x41
  427379:	fs inc esi
  42737b:	inc    ebp
  42737c:	add    eax,0xef118351
  427381:	cdq    
  427382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427383:	mov    esi,0xae587b39
  427388:	shr    DWORD PTR [ebp-0x227a54a4],0x21
  42738f:	adc    BYTE PTR [ebp+eax*2+0x351fb8a],bh
  427396:	xor    al,ah
  427398:	ss lahf 
  42739a:	stos   DWORD PTR es:[edi],eax
  42739b:	lds    ebx,FWORD PTR [edx-0x44]
  42739e:	enter  0x711e,0xc5
  4273a2:	idiv   BYTE PTR [esp+eiz*2]
  4273a5:	(bad)  
  4273a6:	push   edx
  4273a7:	inc    ebp
  4273a8:	dec    esi
  4273a9:	int3   
  4273aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273ab:	push   0xffffffd8
  4273ad:	cmc    
  4273ae:	xchg   BYTE PTR [eax-0x3f520c9f],bl
  4273b4:	xor    eax,0x68c3a658
  4273b9:	dec    eax
  4273ba:	mov    WORD PTR [ebx],es
  4273bc:	add    DWORD PTR [edi+esi*1+0x5ba9827a],edi
  4273c3:	mov    bl,0xcd
  4273c5:	pusha  
  4273c6:	xchg   esp,eax
  4273c7:	xor    edx,ecx
  4273c9:	inc    eax
  4273ca:	mov    ecx,0x3b45c68
  4273cf:	int3   
  4273d0:	ficom  DWORD PTR [ebx]
  4273d2:	js     0x427417
  4273d4:	xchg   BYTE PTR [edi+0x7],dl
  4273d7:	dec    edx
  4273d8:	push   esp
  4273d9:	retf   0x6bf8
  4273dc:	adc    BYTE PTR [edx],cl
  4273de:	adc    cl,BYTE PTR [ebx]
  4273e0:	xchg   edx,eax
  4273e1:	dec    esi
  4273e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273e3:	inc    edi
  4273e4:	push   ds
  4273e5:	cmp    DWORD PTR [ecx],0xc554d8f8
  4273eb:	outs   dx,DWORD PTR ds:[esi]
  4273ec:	lods   al,BYTE PTR ds:[esi]
  4273ed:	ret    0x2166
  4273f0:	dec    ebp
  4273f1:	mov    ch,0x78
  4273f3:	add    cl,al
  4273f5:	push   eax
  4273f6:	mov    ch,0x3e
  4273f8:	xchg   esi,eax
  4273f9:	cdq    
  4273fa:	jge    0x427450
  4273fc:	xchg   edx,eax
  4273fd:	nop
  4273fe:	mov    edi,0xfed37632
  427403:	dec    edx
  427404:	and    DWORD PTR [esi+ebx*4+0x5e],ebp
  427408:	xor    ah,dl
  42740a:	sub    al,0xe0
  42740c:	and    ah,dh
  42740e:	rcr    BYTE PTR [esi],0x5a
  427411:	mov    ebx,DWORD PTR [ebp-0x25]
  427414:	mov    gs,edi
  427416:	ins    BYTE PTR es:[edi],dx
  427417:	pop    ecx
  427418:	adc    BYTE PTR [esi],0x54
  42741b:	aam    0x52
  42741d:	cmp    ch,bl
  42741f:	adc    DWORD PTR [ebx-0x185e99a8],eax
  427425:	pop    ss
  427426:	in     eax,dx
  427427:	pop    ebp
  427428:	sbb    eax,0xd90aab8d
  42742d:	jae    0x4273f6
  42742f:	jae    0x427441
  427431:	ror    DWORD PTR [ebx-0x608c790d],1
  427437:	out    dx,al
  427438:	imul   edi
  42743a:	mov    edi,0xe65c2436
  42743f:	pop    esi
  427440:	idiv   DWORD PTR [ebp+0x45498f71]
  427446:	push   esp
  427447:	neg    BYTE PTR [esi-0x6f]
  42744a:	test   al,0xa8
  42744c:	mov    ch,0xc8
  42744e:	fcomp  QWORD PTR [esi-0x2a]
  427451:	lods   eax,DWORD PTR ds:[esi]
  427452:	out    dx,al
  427453:	sbb    eax,0xfbf00743
  427458:	sbb    al,0xdf
  42745a:	xchg   edi,eax
  42745b:	mov    edi,0x1aa5618e
  427460:	xor    BYTE PTR [esi],ch
  427462:	add    al,0x62
  427464:	push   0xbb2409e4
  427469:	adc    al,0xc0
  42746b:	inc    edi
  42746c:	in     eax,0xe5
  42746e:	rcl    esp,cl
  427470:	xor    esi,DWORD PTR [edx+0x1063b794]
  427476:	jmp    0x4274a7
  427478:	(bad)  
  427479:	xchg   ebx,eax
  42747a:	xchg   edi,eax
  42747b:	dec    eax
  42747c:	jg     0x4274ed
  42747e:	and    eax,0x196e55b9
  427483:	push   0x5039fa74
  427488:	xchg   DWORD PTR [edi+0x62],esi
  42748b:	loopne 0x4274fe
  42748d:	in     eax,dx
  42748e:	and    eax,0xd86ac3c7
  427493:	rcr    esi,1
  427495:	add    DWORD PTR ds:0x6e8f2610,esi
  42749b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42749c:	cwde   
  42749d:	cli    
  42749e:	in     eax,dx
  42749f:	adc    DWORD PTR [edi+0x39554677],edx
  4274a5:	xchg   ecx,eax
  4274a6:	aaa    
  4274a7:	cmp    DWORD PTR [ebx],ecx
  4274a9:	push   esi
  4274aa:	sahf   
  4274ab:	mov    WORD PTR [ebx+0x857f4df],?
  4274b1:	push   0x5
  4274b3:	cmc    
  4274b4:	test   esi,edx
  4274b6:	dec    edx
  4274b7:	(bad)  
  4274b8:	in     al,dx
  4274b9:	pop    esi
  4274ba:	cmp    ebp,DWORD PTR [esp+edx*4]
  4274bd:	sub    esi,esp
  4274bf:	mov    al,0x3b
  4274c1:	jmp    0x4274d3
  4274c3:	cmp    al,0xe3
  4274c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274c6:	jns    0x427467
  4274c8:	cmp    esp,DWORD PTR [ecx]
  4274ca:	pop    esi
  4274cb:	push   edi
  4274cc:	imul   esi,ebx,0x10
  4274cf:	scas   eax,DWORD PTR es:[edi]
  4274d0:	sbb    BYTE PTR [edx],dh
  4274d2:	cmpxchg DWORD PTR [esi-0x34dff515],edx
  4274d9:	or     eax,0x3590000
  4274de:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  4274e3:	pop    ds
  4274e4:	sub    ebp,DWORD PTR [esi+0x6a273eba]
  4274ea:	test   BYTE PTR [ebx],cl
  4274ec:	ret    0x1ec
  4274ef:	add    BYTE PTR [esi+0x2d000002],al
  4274f5:	push   0x21
  4274f7:	xor    cl,dh
  4274f9:	dec    esp
  4274fa:	inc    edx
  4274fb:	retf   0x7a18
  4274fe:	jnp    0x4274a1
  427500:	scas   al,BYTE PTR es:[edi]
  427501:	dec    edx
  427502:	push   ss
  427503:	test   DWORD PTR [esi-0x41b5f154],edi
  427509:	pop    DWORD PTR [ebp+0x3866f770]
  42750f:	aaa    
  427510:	jb     0x4274db
  427512:	add    DWORD PTR [edi+0x39],ebx
  427515:	sub    eax,0x1975095d
  42751a:	loop   0x427513
  42751c:	stos   DWORD PTR es:[edi],eax
  42751d:	cmp    ebx,DWORD PTR [ecx-0x25321bb2]
  427523:	sbb    bl,BYTE PTR [ecx+0x46]
  427526:	add    cl,BYTE PTR [edx+0xe]
  427529:	or     dh,cl
  42752b:	daa    
  42752c:	sub    bl,BYTE PTR [edx]
  42752e:	ja     0x42750f
  427530:	sti    
  427531:	int3   
  427532:	mov    ecx,0x881b5967
  427537:	xchg   BYTE PTR [esi],ch
  427539:	xor    al,0xf0
  42753b:	fist   WORD PTR [esi]
  42753d:	pop    edi
  42753e:	sbb    al,0x9
  427540:	stc    
  427541:	pop    esp
  427542:	xchg   ebx,eax
  427543:	add    ecx,DWORD PTR [eax+0x28e1ffd5]
  427549:	lds    esp,FWORD PTR [eax-0x397eda44]
  42754f:	sbb    eax,0xb75e01f9
  427554:	fcmovnu st,st(2)
  427556:	mov    edi,0x28709d73
  42755b:	jbe    0x42758d
  42755d:	sub    dh,BYTE PTR [ebp+0x79]
  427560:	or     eax,0x1147829c
  427565:	and    al,0x5c
  427567:	outs   dx,BYTE PTR ds:[esi]
  427568:	mov    dl,0xd7
  42756a:	and    eax,0x936d74b4
  42756f:	mov    ecx,0xd8ce51e6
  427574:	fiadd  DWORD PTR [esi]
  427576:	mov    ebp,0x24e7e2c9
  42757b:	add    DWORD PTR [esi],ecx
  42757d:	arpl   WORD PTR [ecx+0x23],ax
  427580:	cmp    BYTE PTR [ebp+eax*4-0x6c],cl
  427584:	inc    ebx
  427585:	inc    eax
  427586:	push   eax
  427587:	enter  0x90ec,0xd7
  42758b:	sar    edx,1
  42758d:	jecxz  0x4275ba
  42758f:	mov    gs,esi
  427591:	cwde   
  427592:	test   eax,0xd36bdfbf
  427597:	out    0x84,al
  427599:	sbb    eax,0x84646f86
  42759e:	dec    edx
  42759f:	rol    BYTE PTR [edx],1
  4275a1:	mov    al,ds:0x2fcc8a8c
  4275a6:	(bad)  
  4275a7:	repz icebp 
  4275a9:	js     0x4275f5
  4275ab:	sbb    bh,dl
  4275ad:	or     BYTE PTR [eax-0x55],bh
  4275b0:	mov    ecx,0x19f1650d
  4275b5:	push   ss
  4275b6:	inc    ecx
  4275b7:	call   0x2f19b0ff
  4275bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275bd:	dec    ecx
  4275be:	in     eax,0xc7
  4275c0:	je     0x427571
  4275c2:	jp     0x42757e
  4275c4:	inc    ebp
  4275c5:	xor    BYTE PTR [eax-0x3b],0x5e
  4275c9:	rcr    ah,0x34
  4275cc:	xchg   esi,eax
  4275cd:	sbb    ebx,DWORD PTR [esi-0x183f4326]
  4275d3:	dec    edi
  4275d4:	xchg   BYTE PTR [ebx-0x21],bl
  4275d7:	neg    BYTE PTR [eax+0x0]
  4275da:	sbb    DWORD PTR [esi+0x65],esp
  4275dd:	add    edx,ebp
  4275df:	enter  0xbe7,0xc6
  4275e3:	xor    DWORD PTR [edi-0x16],0x117805ec
  4275ea:	push   esi
  4275eb:	jecxz  0x427573
  4275ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275ee:	int    0x36
  4275f0:	std    
  4275f1:	mov    ?,ebx
  4275f3:	jbe    0x4275a8
  4275f5:	scas   al,BYTE PTR es:[edi]
  4275f6:	sbb    DWORD PTR [ecx],eax
  4275f8:	cwde   
  4275f9:	das    
  4275fa:	sar    DWORD PTR [eax+0x7747cf8f],cl
  427600:	cmp    bl,bl
  427602:	sbb    al,0x3
  427604:	out    dx,eax
  427605:	or     DWORD PTR [ecx+0x67c9a71e],eax
  42760b:	fsub   QWORD PTR [edx-0x59760c9e]
  427611:	push   edx
  427612:	dec    esi
  427613:	scas   eax,DWORD PTR es:[edi]
  427614:	lods   al,BYTE PTR ds:[esi]
  427615:	fsubr  st(4),st
  427617:	sub    dl,BYTE PTR ds:0xbc38e080
  42761d:	stos   BYTE PTR es:[edi],al
  42761e:	out    dx,al
  42761f:	pop    ebp
  427620:	mov    esi,0x76443800
  427625:	(bad)  
  427626:	mov    al,0x51
  427628:	(bad)  
  427629:	ins    BYTE PTR es:[edi],dx
  42762a:	in     al,dx
  42762b:	add    al,0x33
  42762d:	not    BYTE PTR [eax]
  42762f:	dec    ebx
  427630:	int3   
  427631:	mov    ds:0xb2d395f2,eax
  427636:	xchg   ecx,eax
  427637:	rcr    DWORD PTR [ebp+eax*1-0xc],0xcf
  42763c:	xchg   esi,eax
  42763d:	dec    ebx
  42763e:	mov    DWORD PTR [ecx+0x77],ebp
  427641:	pop    ss
  427642:	rcl    BYTE PTR [ebx+ecx*8-0x131602d3],1
  427649:	imul   esp,DWORD PTR [edi-0x9],0xffffff91
  42764d:	lock (bad) 
  42764f:	inc    esp
  427650:	jl     0x427689
  427652:	popa   
  427653:	add    al,BYTE PTR [ebx]
  427655:	sbb    esi,DWORD PTR [ebx+edx*8-0x52]
  427659:	jle    0x4276c9
  42765b:	and    eax,0x1dd060b4
  427660:	cdq    
  427661:	repz arpl bx,sp
  427664:	jg     0x4275ef
  427666:	hlt    
  427667:	push   ecx
  427668:	lods   al,BYTE PTR gs:[esi]
  42766a:	cdq    
  42766b:	div    DWORD PTR [ebx-0x5521344f]
  427671:	scas   al,BYTE PTR es:[edi]
  427672:	(bad)  
  427673:	cmp    BYTE PTR [ecx-0x29],cl
  427676:	retf   0x257f
  427679:	push   0xffffffe8
  42767b:	fisubr WORD PTR [ecx+0x11]
  42767e:	inc    eax
  42767f:	das    
  427680:	lock mov ebx,0x95fc301c
  427686:	ror    BYTE PTR [ebp-0x75572eed],0xc8
  42768d:	in     al,0x2a
  42768f:	mov    dh,0xf4
  427691:	and    BYTE PTR [eax],al
  427693:	mov    ch,0x35
  427695:	jae    0x42767e
  427697:	xor    eax,0x142b0623
  42769c:	lods   eax,DWORD PTR ds:[esi]
  42769d:	push   0x26800778
  4276a2:	push   ecx
  4276a3:	vpsubd ymm5,ymm6,YMMWORD PTR [ebx+0x6ebec87b]
  4276ab:	inc    esi
  4276ac:	iret   
  4276ad:	stc    
  4276ae:	adc    DWORD PTR [ebx+0x17ee81c],edx
  4276b4:	fidiv  DWORD PTR [edx]
  4276b6:	mov    esp,0x7bba9f21
  4276bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276bc:	xor    ebx,ecx
  4276be:	div    ebx
  4276c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276c1:	xor    eax,edx
  4276c3:	inc    edx
  4276c4:	cwde   
  4276c5:	or     al,0xf0
  4276c7:	call   0x6499:0xc5a283e9
  4276ce:	cmp    eax,0x7668720d
  4276d3:	stc    
  4276d4:	xchg   esp,eax
  4276d5:	(bad)  [edx]
  4276d7:	jmp    0x9e86955a
  4276dc:	inc    ecx
  4276dd:	cmc    
  4276de:	mov    eax,ds:0xd8f6e45b
  4276e3:	inc    ebp
  4276e4:	mov    dh,BYTE PTR [ebx+0x15]
  4276e7:	push   edx
  4276e8:	call   FWORD PTR [edi]
  4276ea:	fadd   DWORD PTR [ebp-0x6fe86f1f]
  4276f0:	cmp    DWORD PTR [edx],0xffffff86
  4276f3:	popf   
  4276f4:	jp     0x42772d
  4276f6:	or     esi,edx
  4276f8:	into   
  4276f9:	or     eax,DWORD PTR [ebx]
  4276fb:	outs   dx,DWORD PTR ds:[esi]
  4276fc:	popa   
  4276fd:	add    eax,0x27ef9fd8
  427702:	lea    ecx,fs:[esi+0x23]
  427706:	fbstp  TBYTE PTR [edi+0x57fef494]
  42770c:	call   0xc115c30c
  427711:	mov    ebx,0x5e2bbe70
  427716:	lods   eax,DWORD PTR ds:[esi]
  427717:	aad    0xe0
  427719:	dec    eax
  42771a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42771b:	call   0xfe4e6e8e
  427720:	mov    ebp,0x718dfb92
  427725:	mov    ds:0x8413409e,al
  42772a:	popf   
  42772b:	push   eax
  42772c:	idiv   DWORD PTR ds:0x79b1bcfd
  427732:	pushf  
  427733:	mov    gs,WORD PTR [esp+ebx*1-0x2a]
  427737:	cwde   
  427738:	push   0x360fca95
  42773d:	pop    ss
  42773e:	mov    dl,0x7
  427740:	dec    eax
  427741:	ret    
  427742:	lock div BYTE PTR fs:[ecx*1-0x3a0c898e]
  42774b:	add    eax,0xb9cea3dc
  427750:	sub    DWORD PTR [ebp-0x12ef2841],0xffffffb7
  427757:	and    BYTE PTR ds:0x3254e896,0xd8
  42775e:	push   0x29379482
  427763:	mov    eax,ds:0x81bda7bc
  427768:	xchg   esp,eax
  427769:	fisub  DWORD PTR [edx+0x10]
  42776c:	sbb    BYTE PTR [ebx-0x7da3810],ch
  427772:	add    dh,BYTE PTR [esi+0x4]
  427775:	aas    
  427776:	dec    ebx
  427777:	cli    
  427778:	jno    0x42776e
  42777a:	add    BYTE PTR [eax],al
  42777c:	sbb    esp,DWORD PTR [edi]
  42777e:	pushf  
  42777f:	cli    
  427780:	mov    esp,0x2ae77ffb
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	aad    0xf
  427788:	int3   
  427789:	sbb    BYTE PTR [ecx+0x1ef4834],ch
  42778f:	add    BYTE PTR [esi-0x5efffffe],al
  427795:	rcl    esi,1
  427797:	lea    esi,[ebx]
  427799:	xchg   esp,eax
  42779a:	and    eax,0x75490a63
  42779f:	ret    
  4277a0:	cwde   
  4277a1:	adc    al,0x1e
  4277a3:	dec    ecx
  4277a4:	repnz mov BYTE PTR [ecx+0x5825fa04],dh
  4277ab:	scas   eax,DWORD PTR es:[edi]
  4277ac:	sub    dh,bl
  4277ae:	js     0x4277f8
  4277b0:	mov    bl,0x40
  4277b2:	arpl   bx,bp
  4277b4:	gs push 0xfffffff8
  4277b7:	cdq    
  4277b8:	push   edi
  4277b9:	pusha  
  4277ba:	shl    al,0x4b
  4277bd:	es leave 
  4277bf:	cld    
  4277c0:	sbb    dh,0x83
  4277c3:	in     eax,0xd2
  4277c5:	out    0x61,al
  4277c7:	std    
  4277c8:	imul   esi,DWORD PTR [edi-0xd],0x241349d4
  4277cf:	inc    esp
  4277d0:	inc    edi
  4277d1:	or     DWORD PTR cs:[edi],ebx
  4277d4:	push   cs
  4277d5:	rol    al,cl
  4277d7:	gs inc edi
  4277d9:	les    edx,FWORD PTR [edi+edi*4+0x36]
  4277dd:	jns    0x427810
  4277df:	dec    eax
  4277e0:	mov    edx,0xeab8ad8f
  4277e5:	cwde   
  4277e6:	inc    ebp
  4277e7:	leave  
  4277e8:	nop
  4277e9:	add    eax,0x950602d1
  4277ee:	add    BYTE PTR [ebp-0x14b5c86e],bl
  4277f4:	aaa    
  4277f5:	xor    ch,BYTE PTR [ebp+0x15]
  4277f8:	(bad)  
  4277f9:	push   0xffffff92
  4277fb:	enter  0x9182,0xe8
  4277ff:	mov    ah,0x6c
  427801:	int    0x17
  427803:	xchg   esi,eax
  427804:	imul   eax,DWORD PTR [ebx+0x3a1103b0],0xb2fbb7dd
  42780e:	sbb    al,0xd3
  427810:	adc    al,0x9e
  427812:	mov    WORD PTR [esi-0x2f],ss
  427815:	adc    al,0x60
  427817:	adc    edx,DWORD PTR [edx-0x5249991e]
  42781d:	arpl   WORD PTR [edi+0x7bbe6959],dx
  427823:	into   
  427824:	cdq    
  427825:	xchg   ebp,eax
  427826:	jecxz  0x427862
  427828:	in     eax,dx
  427829:	je     0x42783e
  42782b:	dec    esi
  42782c:	sahf   
  42782d:	mov    ah,0xcf
  42782f:	test   BYTE PTR [eax-0x6efe9dc],ch
  427835:	sti    
  427836:	imul   edx,DWORD PTR [ebx-0x26],0xdf03680a
  42783d:	ror    ah,0xde
  427840:	cmp    eax,edx
  427842:	xchg   edx,eax
  427843:	arpl   WORD PTR [edx-0x7e923465],sp
  427849:	imul   BYTE PTR [eax-0x1c]
  42784c:	sbb    BYTE PTR [esi+ebp*2-0x6c],0xc6
  427851:	mov    ch,BYTE PTR [edi+0x4b]
  427854:	pop    esp
  427855:	add    eax,0x62e052f2
  42785a:	out    0x90,al
  42785c:	hlt    
  42785d:	jbe    0x427862
  42785f:	in     al,0xb7
  427861:	jnp    0x42783e
  427863:	mov    ecx,0xf8920de
  427868:	sub    eax,0xd45c7186
  42786d:	add    eax,0xd90984eb
  427872:	add    dh,BYTE PTR [ecx-0xe0f52dd]
  427878:	cdq    
  427879:	out    dx,eax
  42787a:	mov    ds:0x663972b,eax
  42787f:	push   ebx
  427880:	shl    DWORD PTR [esi-0x30ff991b],0x92
  427887:	sub    al,0x59
  427889:	inc    edi
  42788a:	jb     0x427867
  42788c:	repz imul eax,DWORD PTR [ebx],0x5b5dc4bb
  427893:	add    BYTE PTR ss:[eax],bh
  427896:	pop    esi
  427897:	xchg   esp,eax
  427898:	or     eax,0x79f9199a
  42789d:	push   esp
  42789e:	xor    al,0x33
  4278a0:	push   ebx
  4278a1:	enter  0xf61e,0xb
  4278a5:	mov    es,esi
  4278a7:	arpl   WORD PTR [ebx],ax
  4278a9:	jle    0x427926
  4278ab:	pop    ss
  4278ac:	lds    ecx,FWORD PTR [eax]
  4278ae:	sbb    ah,BYTE PTR [esi-0x47]
  4278b1:	mov    ch,0xfe
  4278b3:	pop    ecx
  4278b4:	mov    dh,0x65
  4278b6:	cmp    dh,BYTE PTR [ecx]
  4278b8:	jbe    0x4278ae
  4278ba:	mov    WORD PTR [edi+0x257ee2c8],gs
  4278c0:	sbb    al,0x71
  4278c2:	sti    
  4278c3:	and    al,0x49
  4278c5:	jg     0x42787e
  4278c7:	ret    
  4278c8:	fnstcw WORD PTR [eax-0x79b58e85]
  4278ce:	push   eax
  4278cf:	(bad)  
  4278d0:	or     DWORD PTR [ecx],ebx
  4278d2:	cld    
  4278d3:	or     DWORD PTR cs:[edi+eax*8+0x3f899621],esp
  4278db:	call   0xf964:0x9e3fce20
  4278e2:	mov    ebp,0xde4145a7
  4278e7:	push   ds
  4278e8:	jmp    0xa4e:0x5e92aeab
  4278ef:	and    al,0x3
  4278f1:	bound  eax,QWORD PTR [ebx+eiz*1+0x17de94f2]
  4278f8:	call   0x336d5e86
  4278fd:	test   DWORD PTR [ecx-0x3e],ebp
  427900:	dec    edi
  427901:	fs push esi
  427903:	out    0x27,eax
  427905:	mov    dl,0xe5
  427907:	push   ds
  427908:	sar    BYTE PTR [eax+esi*8-0xb009ec1],cl
  42790f:	jbe    0x427894
  427911:	push   edi
  427912:	ds sahf 
  427914:	dec    ebx
  427915:	mov    ecx,0x73c7ee56
  42791a:	(bad)  
  42791b:	jp     0x427973
  42791d:	mov    ebx,0xb51a4eca
  427922:	cmp    al,0xaa
  427924:	fs inc ecx
  427926:	xor    ebp,edx
  427928:	xchg   ebp,eax
  427929:	in     eax,0xde
  42792b:	pop    edx
  42792c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42792d:	xchg   BYTE PTR [ecx+0x5e],bl
  427930:	push   es
  427931:	adc    BYTE PTR [esp+eiz*4-0xa374ae],ah
  427938:	ret    0x9c3
  42793b:	and    BYTE PTR [edi+0x1a52ecd8],cl
  427941:	in     eax,0xdc
  427943:	out    dx,eax
  427944:	push   ebp
  427945:	popf   
  427946:	push   edi
  427947:	ja     0x42797b
  427949:	add    DWORD PTR [ecx-0x16fac339],edi
  42794f:	sub    al,0xda
  427951:	push   ds
  427952:	out    0x4f,eax
  427954:	push   ecx
  427955:	push   ebx
  427956:	fldenv [edi-0x6e]
  427959:	sub    DWORD PTR ss:[edx+0x19751fd3],eax
  427960:	in     eax,dx
  427961:	dec    eax
  427962:	pop    ss
  427963:	bound  eax,QWORD PTR [esi]
  427965:	add    BYTE PTR ds:[esi-0x2a],cl
  427969:	ds lahf 
  42796b:	cmp    BYTE PTR [esi+0x46556872],ah
  427971:	das    
  427972:	mov    edi,0xa158b775
  427977:	mov    dl,0x9a
  427979:	bound  esp,QWORD PTR [ebx*2+0x7dcdae9]
  427980:	adc    dh,BYTE PTR [esi+ecx*4-0x1b07355f]
  427987:	mov    esi,edx
  427989:	pop    edi
  42798a:	rcl    DWORD PTR [ebp+0x369d28a4],1
  427990:	dec    esp
  427991:	xchg   ecx,eax
  427992:	fnstsw WORD PTR [edx+eiz*1+0xd3447ef]
  427999:	mov    ?,WORD PTR [edi]
  42799b:	(bad)  
  42799c:	(bad)  
  42799d:	jmp    0xcf5f9187
  4279a2:	mov    bh,0x42
  4279a4:	push   0xbeabe4e2
  4279a9:	add    DWORD PTR [edx+ebp*1],edi
  4279ac:	add    cl,BYTE PTR [edi+eax*2-0x37]
  4279b0:	cli    
  4279b1:	fdiv   QWORD PTR [ebx-0x18a32986]
  4279b7:	scas   al,BYTE PTR es:[edi]
  4279b8:	inc    edi
  4279b9:	cmp    dl,BYTE PTR [ecx-0x6f78cab4]
  4279bf:	push   0x6a
  4279c1:	call   0x920cd80
  4279c6:	sub    DWORD PTR [eax],ebx
  4279c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279c9:	daa    
  4279ca:	retf   
  4279cb:	test   al,0xc3
  4279cd:	pop    esi
  4279ce:	xor    al,0x90
  4279d0:	mov    al,ds:0x7534d06b
  4279d5:	pop    ss
  4279d6:	mov    al,ds:0xdae165d5
  4279db:	push   edx
  4279dc:	pop    ebx
  4279dd:	pushf  
  4279de:	lahf   
  4279df:	sbb    al,0x35
  4279e1:	sbb    esp,DWORD PTR [eax+0x3d]
  4279e4:	shr    DWORD PTR [edx-0x41],1
  4279e7:	jmp    0xd44c:0xe07216d5
  4279ee:	in     al,0x4
  4279f0:	iret   
  4279f1:	cmp    ah,dh
  4279f3:	jmp    0x82d3:0x91913e4f
  4279fa:	loopne 0x427a5f
  4279fc:	or     eax,0xeffb4c7e
  427a01:	retf   0xa0bd
  427a04:	xor    BYTE PTR ds:0x545ed8ee,ch
  427a0a:	mov    DWORD PTR [ebp+0x29],ebp
  427a0d:	inc    ebx
  427a0e:	fsubr  DWORD PTR [esp+edx*4+0x4a]
  427a12:	out    dx,al
  427a13:	call   0x5e4ea5c6
  427a18:	jbe    0x427a02
  427a1a:	add    BYTE PTR [eax],al
  427a1c:	call   0xdafe:0xfef82244
  427a23:	bound  di,DWORD PTR [eax-0x32128b8b]
  427a2a:	bound  ebx,QWORD PTR [esi+ecx*8-0xf]
  427a2e:	add    DWORD PTR [eax],eax
  427a30:	xchg   BYTE PTR [edx],al
  427a32:	add    BYTE PTR [eax],al
  427a34:	scas   al,BYTE PTR es:[edi]
  427a35:	xchg   DWORD PTR [edi+edx*2+0x35632718],edi
  427a3c:	leave  
  427a3d:	pop    eax
  427a3e:	inc    edi
  427a3f:	mov    WORD PTR [ebp+0x5ad78d0b],ss
  427a45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a46:	jecxz  0x427a24
  427a48:	mov    ah,0xce
  427a4a:	pop    esp
  427a4b:	xchg   DWORD PTR [ebp+0x73fb47da],ecx
  427a51:	inc    eax
  427a52:	jno    0x427aa2
  427a54:	xchg   edi,eax
  427a55:	clc    
  427a56:	addr16 ret 0xfa9a
  427a5a:	push   eax
  427a5b:	push   0xffffffc0
  427a5d:	dec    ebp
  427a5e:	sbb    eax,0x28b5d22b
  427a63:	ins    BYTE PTR es:[edi],dx
  427a64:	jbe    0x427a70
  427a66:	out    0x19,al
  427a68:	jecxz  0x427a67
  427a6a:	pop    ebx
  427a6b:	jnp    0x427a17
  427a6d:	lock fwait
  427a6f:	mov    ds:0x6310d48d,al
  427a74:	mov    esp,DWORD PTR [ebp+0x1d]
  427a77:	rcl    BYTE PTR [edx+edi*4],cl
  427a7a:	fadd   st(2),st
  427a7c:	int3   
  427a7d:	jge    0x427a9c
  427a7f:	es xor eax,esp
  427a82:	call   0x811b:0xa45bb3ac
  427a89:	cmp    BYTE PTR [esi+0x3f634a13],al
  427a8f:	stos   DWORD PTR es:[edi],eax
  427a90:	jecxz  0x427a91
  427a92:	lods   eax,DWORD PTR ds:[esi]
  427a93:	icebp  
  427a94:	pop    esp
  427a95:	add    DWORD PTR [ecx-0x57e61b1],esp
  427a9b:	mov    esp,0x5ad96ba5
  427aa0:	repnz out dx,eax
  427aa2:	jno    0x427a5f
  427aa4:	bound  ecx,QWORD PTR [edi-0x54]
  427aa7:	icebp  
  427aa8:	inc    esi
  427aa9:	mov    al,0x45
  427aab:	out    0x88,eax
  427aad:	psubq  mm5,QWORD PTR gs:[edi+0xe021390]
  427ab5:	enter  0xafdb,0x7f
  427ab9:	pop    edx
  427aba:	and    eax,0x86a127dc
  427abf:	sbb    ecx,edi
  427ac1:	sub    BYTE PTR [esi-0x62],al
  427ac4:	dec    edi
  427ac5:	out    0x2d,al
  427ac7:	ins    DWORD PTR es:[edi],dx
  427ac8:	cmp    eax,0xbec4f4c0
  427acd:	add    BYTE PTR [eax+0x3d20fb30],ch
  427ad3:	dec    ecx
  427ad4:	jne    0x427a77
  427ad6:	je     0x427ab3
  427ad8:	jecxz  0x427a5c
  427ada:	push   0xfffffffb
  427adc:	sbb    cl,dl
  427ade:	nop
  427adf:	shr    DWORD PTR [eax+ebp*8-0x6],cl
  427ae3:	cdq    
  427ae4:	mov    esi,DWORD PTR ss:[edi-0x38]
  427ae8:	stos   BYTE PTR es:[edi],al
  427ae9:	and    ecx,edi
  427aeb:	jnp    0x427ab6
  427aed:	pushf  
  427aee:	mov    ebp,0x94afb336
  427af3:	pop    ebx
  427af4:	cli    
  427af5:	hlt    
  427af6:	push   ds
  427af7:	test   al,0x40
  427af9:	int    0x73
  427afb:	push   ss
  427afc:	ds lock xor al,0x4
  427b00:	ret    0xbbaf
  427b03:	(bad)  
  427b04:	cs dec edx
  427b06:	xchg   esp,eax
  427b07:	lods   al,BYTE PTR ds:[esi]
  427b08:	out    0x84,eax
  427b0a:	adc    BYTE PTR [esi+ecx*2+0x6afcb1f2],dl
  427b11:	mov    WORD PTR [edi+ebx*2],gs
  427b14:	(bad)  
  427b16:	jae    0x427b3d
  427b18:	or     al,0x29
  427b1a:	cs shl al,0x7e
  427b1e:	xchg   DWORD PTR [ecx],ecx
  427b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b21:	test   eax,0x195e5d92
  427b26:	xor    eax,0x6963d5eb
  427b2b:	lods   eax,DWORD PTR ds:[esi]
  427b2c:	cs icebp 
  427b2e:	push   ebp
  427b2f:	test   BYTE PTR [edi+edi*4+0x7d4ba77],0xaa
  427b37:	in     al,dx
  427b38:	xchg   edi,eax
  427b39:	daa    
  427b3a:	adc    BYTE PTR [ebx],al
  427b3c:	cdq    
  427b3d:	(bad)  [edi]
  427b3f:	inc    ebp
  427b40:	inc    edx
  427b41:	pop    esi
  427b42:	fcom   QWORD PTR [ecx-0x38]
  427b45:	scas   eax,DWORD PTR es:[edi]
  427b46:	xchg   edi,eax
  427b47:	imul   al
  427b49:	call   0xad22:0x521a13ea
  427b50:	lds    edi,FWORD PTR [esi+0x5]
  427b53:	rcr    DWORD PTR [edx],0xbf
  427b56:	scas   eax,DWORD PTR es:[edi]
  427b57:	xor    eax,0x46a18d81
  427b5c:	aaa    
  427b5d:	frstor [ebx+0x216b9cff]
  427b63:	mov    edx,0xe8fa673b
  427b68:	imul   eax,eax,0x57
  427b6b:	jecxz  0x427b72
  427b6d:	inc    edi
  427b6e:	bound  ebp,QWORD PTR [ebp+0x34]
  427b71:	jae    0x427b2a
  427b73:	ins    DWORD PTR es:[edi],dx
  427b74:	xor    eax,0x82f828b2
  427b79:	loopne 0x427b9e
  427b7b:	arpl   WORD PTR [edi-0x63eaf033],cx
  427b81:	add    BYTE PTR [edx],al
  427b83:	lods   eax,DWORD PTR ds:[esi]
  427b84:	sub    al,BYTE PTR [ebx-0x2a]
  427b87:	aad    0x97
  427b89:	push   esi
  427b8a:	das    
  427b8b:	cmc    
  427b8c:	add    dh,BYTE PTR [edx+0x22]
  427b8f:	ss dec ebx
  427b91:	xlat   BYTE PTR ds:[ebx]
  427b92:	adc    BYTE PTR [eax-0x5a],bh
  427b95:	pop    esi
  427b96:	or     ah,ch
  427b98:	cmp    ecx,ebx
  427b9a:	adc    ebp,DWORD PTR [edi]
  427b9c:	hlt    
  427b9d:	mov    ebp,0xfd563b87
  427ba2:	repnz icebp 
  427ba4:	xor    DWORD PTR ds:0x8aa1f648,ebx
  427baa:	sub    BYTE PTR [edx-0x3c],cl
  427bad:	pushf  
  427bae:	or     DWORD PTR [eax+0x25],esp
  427bb1:	mov    al,ds:0xab8994c8
  427bb6:	sub    bh,al
  427bb8:	sbb    eax,0x525bbb12
  427bbd:	js     0x427bd2
  427bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bc0:	in     al,0xa3
  427bc2:	sbb    al,ah
  427bc4:	sub    al,0x77
  427bc6:	pop    ebx
  427bc7:	pop    esp
  427bc8:	push   edi
  427bc9:	jge    0x427bb6
  427bcb:	sbb    al,0xc6
  427bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bce:	adc    dh,dh
  427bd0:	adc    DWORD PTR [edx+0x4f],edx
  427bd3:	push   cs
  427bd4:	inc    edi
  427bd5:	pop    es
  427bd6:	(bad)  
  427bd7:	and    dh,BYTE PTR [ecx]
  427bd9:	call   DWORD PTR [edi]
  427bdb:	add    DWORD PTR [ebp+0x5ad136df],edi
  427be1:	lods   al,BYTE PTR ds:[esi]
  427be2:	ins    BYTE PTR es:[edi],dx
  427be3:	test   DWORD PTR [ecx+0x4b],ecx
  427be6:	fs nop
  427be8:	and    DWORD PTR [edx-0x6a],ecx
  427beb:	push   esi
  427bec:	call   0xb0c2086
  427bf1:	aas    
  427bf2:	(bad)  
  427bf3:	fdiv   DWORD PTR [eax+0x35]
  427bf6:	push   cs
  427bf7:	dec    esi
  427bf8:	add    ch,bl
  427bfa:	rcr    DWORD PTR [ecx],cl
  427bfc:	repz jae 0x427bf6
  427bff:	xchg   BYTE PTR [edi-0x3884ae8f],bh
  427c05:	stc    
  427c06:	add    eax,0xc4ca172e
  427c0b:	call   0xccb0:0x63b92486
  427c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c13:	shr    BYTE PTR [ecx],1
  427c15:	(bad)  
  427c16:	cli    
  427c17:	frstor [esi+0x57]
  427c1a:	inc    ebp
  427c1b:	inc    esi
  427c1c:	jne    0x427bdb
  427c1e:	mov    dh,0x42
  427c20:	pop    esi
  427c21:	mov    esi,0x6f6160aa
  427c26:	les    ecx,FWORD PTR [edx+eiz*4]
  427c29:	clc    
  427c2a:	sub    bl,BYTE PTR [ecx+ebx*1-0x5e]
  427c2e:	push   edx
  427c2f:	push   edi
  427c30:	mov    ah,0xf5
  427c32:	push   edi
  427c33:	es jg  0x427bef
  427c36:	push   0x68
  427c38:	repnz int 0x91
  427c3b:	aad    0xdb
  427c3d:	sub    ecx,esi
  427c3f:	sub    DWORD PTR [ebx+0xcac23ff],ebp
  427c45:	dec    esp
  427c46:	test   eax,0xa74068d7
  427c4b:	popf   
  427c4c:	iret   
  427c4d:	out    dx,eax
  427c4e:	aaa    
  427c4f:	sub    bl,bl
  427c51:	test   DWORD PTR [edi+0x4173773a],eax
  427c57:	sti    
  427c58:	sub    eax,0x937c5d1d
  427c5d:	fadd   DWORD PTR [eax+0x2cd40fc8]
  427c63:	gs ss test al,0x88
  427c67:	retf   
  427c68:	mov    esi,0x1727b8b2
  427c6d:	adc    edx,DWORD PTR [edi-0x249fc876]
  427c73:	retf   
  427c74:	add    ch,BYTE PTR [edx]
  427c76:	cmp    BYTE PTR [esi-0x3b],bl
  427c79:	ins    DWORD PTR es:[edi],dx
  427c7a:	mov    esi,0x6e71d19e
  427c7f:	in     al,dx
  427c80:	cmp    DWORD PTR [ecx-0x23a15c7d],ecx
  427c86:	and    DWORD PTR [ebp+eax*8+0x2e],ecx
  427c8a:	int3   
  427c8b:	push   0xffffffbd
  427c8d:	mov    ch,0x72
  427c8f:	xor    al,0xd2
  427c91:	add    ecx,edx
  427c93:	mul    DWORD PTR ds:0xd0e2690d
  427c99:	mov    BYTE PTR [edx-0x52c1c393],ch
  427c9f:	repz scas eax,DWORD PTR es:[edi]
  427ca1:	addr16 int 0x3d
  427ca4:	test   al,0x6d
  427ca6:	and    al,0x32
  427ca8:	pop    esp
  427ca9:	inc    ebx
  427caa:	cmp    ecx,DWORD PTR [edi-0x2f]
  427cad:	fadd   QWORD PTR [eax-0x50]
  427cb0:	repnz add bl,ah
  427cb3:	popf   
  427cb4:	fmul   st,st(2)
  427cb6:	lahf   
  427cb7:	jecxz  0x427ce4
  427cb9:	rol    DWORD PTR [eax],0x0
  427cbc:	nop
  427cbd:	stos   DWORD PTR es:[edi],eax
  427cbe:	es ret 
  427cc0:	aas    
  427cc1:	iret   
  427cc2:	cmc    
  427cc3:	sti    
  427cc4:	pushf  
  427cc5:	ds loop 0x427cb4
  427cc8:	push   edx
  427cc9:	sub    esi,esp
  427ccb:	loop   0x427d21
  427ccd:	hlt    
  427cce:	add    DWORD PTR [eax],eax
  427cd0:	xchg   BYTE PTR [edx],al
  427cd2:	add    BYTE PTR [eax],al
  427cd4:	adc    BYTE PTR [si],ah
  427cd7:	and    eax,0x23c946f9
  427cdc:	loop   0x427d4b
  427cde:	inc    edi
  427cdf:	pop    edx
  427ce0:	aas    
  427ce1:	pop    ebp
  427ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ce3:	sbb    bl,bl
  427ce5:	push   esi
  427ce6:	pop    ecx
  427ce7:	rcr    DWORD PTR [ecx+0x10d46524],cl
  427ced:	xor    al,ch
  427cef:	ds (bad) 
  427cf1:	pop    esp
  427cf2:	sti    
  427cf3:	das    
  427cf4:	outs   dx,BYTE PTR ds:[esi]
  427cf5:	mov    al,ds:0xd383039c
  427cfa:	stc    
  427cfb:	mov    eax,ds:0xa14a93b5
  427d00:	fistp  DWORD PTR [ebp+0x290ba5e6]
  427d06:	cmp    DWORD PTR [ebx],esi
  427d08:	sub    ch,BYTE PTR [ebp-0x7b2f53f]
  427d0e:	pop    ds
  427d0f:	icebp  
  427d10:	in     al,dx
  427d11:	pop    ebx
  427d12:	add    BYTE PTR [ebx+0x4d],dh
  427d15:	outs   dx,BYTE PTR ds:[esi]
  427d16:	jp     0x427d00
  427d18:	add    DWORD PTR [edi+0x67],eax
  427d1b:	mov    ebx,0xd5c8b02d
  427d20:	mov    bl,0x2b
  427d22:	sub    DWORD PTR [ebx-0x583d4b11],edi
  427d28:	daa    
  427d29:	mov    ah,0x23
  427d2b:	pusha  
  427d2c:	jns    0x427d5f
  427d2e:	clc    
  427d2f:	mov    al,0x51
  427d31:	in     al,dx
  427d32:	pusha  
  427d33:	(bad)  
  427d34:	jp     0x427cd8
  427d36:	ins    BYTE PTR es:[edi],dx
  427d37:	add    eax,0x45acabc2
  427d3c:	lds    esi,FWORD PTR [edi-0x26]
  427d3f:	or     DWORD PTR [eax],esp
  427d41:	jg     0x427d81
  427d43:	jg     0x427d89
  427d45:	fisubr DWORD PTR [eax+eax*1]
  427d48:	fadd   DWORD PTR [edx+0x6909c83c]
  427d4e:	out    0x4b,al
  427d50:	mov    al,0x35
  427d52:	jmp    0x391d:0x9172c69b
  427d59:	ret    
  427d5a:	jge    0x427d73
  427d5c:	pop    ebp
  427d5d:	std    
  427d5e:	ins    BYTE PTR es:[edi],dx
  427d5f:	dec    ebp
  427d60:	inc    edx
  427d61:	stc    
  427d62:	xlat   BYTE PTR ds:[ebx]
  427d63:	inc    esp
  427d64:	ficomp DWORD PTR [ecx-0x3fcf52d7]
  427d6a:	call   0x2f0dbb7
  427d6f:	mov    al,0x60
  427d71:	and    BYTE PTR [ecx+0x32032513],dh
  427d77:	loop   0x427dc3
  427d79:	and    eax,0x33c44a5
  427d7e:	cmp    ecx,DWORD PTR [edx]
  427d80:	adc    edx,DWORD PTR [eax-0x93f627d]
  427d86:	fcom   DWORD PTR fs:0xc567cba2
  427d8d:	or     eax,0x7d93dbca
  427d92:	fnsave [eax+0x2c]
  427d95:	adc    ah,BYTE PTR ds:0xb73ee669
  427d9b:	or     dl,BYTE PTR [bp+0x4b5d]
  427da0:	pop    ss
  427da1:	loop   0x427dc3
  427da3:	add    al,0xb1
  427da5:	xor    esp,DWORD PTR [edi+0x7baeb44d]
  427dab:	dec    ebx
  427dac:	jge    0x427db0
  427dae:	and    al,0xb5
  427db0:	shr    DWORD PTR [eax+0x300b3308],cl
  427db6:	add    DWORD PTR [eax],ecx
  427db8:	cli    
  427db9:	pop    ebp
  427dba:	mov    ebx,0x3add98fa
  427dbf:	cmp    DWORD PTR [ebx-0x8d959b1],edi
  427dc5:	inc    ebx
  427dc6:	cmp    al,0xd9
  427dc8:	jno    0x427dbe
  427dca:	aam    0x11
  427dcc:	mov    dh,0x87
  427dce:	rcl    DWORD PTR [edi+0xa74c995],cl
  427dd4:	iret   
  427dd5:	lea    ecx,[ecx-0x5a]
  427dd8:	cmp    edi,DWORD PTR [ecx-0xe91b9ba]
  427dde:	xchg   ebx,eax
  427ddf:	or     BYTE PTR ds:0x919160b2,al
  427de5:	push   esp
  427de6:	les    ecx,FWORD PTR [esi-0x6a]
  427de9:	push   0x51acf2cb
  427dee:	pop    edx
  427def:	inc    ebx
  427df0:	xchg   DWORD PTR [edx],edx
  427df2:	push   0x44513c72
  427df7:	mov    eax,0x93a8923f
  427dfc:	cmp    dl,BYTE PTR [ebp-0xc]
  427dff:	dec    esp
  427e00:	ins    BYTE PTR es:[edi],dx
  427e01:	or     DWORD PTR [eax+0x1946c313],edx
  427e07:	or     cl,BYTE PTR [edx-0x35b1a715]
  427e0d:	push   ebx
  427e0e:	pop    es
  427e0f:	add    ah,BYTE PTR ss:[ebx]
  427e12:	xor    BYTE PTR [ebx],cl
  427e14:	xchg   ebp,eax
  427e15:	push   ds
  427e16:	push   ecx
  427e17:	cmp    bh,BYTE PTR [eax+0x76]
  427e1a:	scas   eax,DWORD PTR es:[edi]
  427e1b:	inc    edx
  427e1c:	repnz xor al,0xad
  427e1f:	test   DWORD PTR [ebp+0x29],ebx
  427e22:	mov    ds:0xc328dff3,eax
  427e27:	lahf   
  427e28:	add    DWORD PTR [ebx+ecx*1+0x5145d680],eax
  427e2f:	dec    ebp
  427e30:	push   ebx
  427e31:	mov    al,ds:0x10837bbd
  427e36:	xchg   ecx,eax
  427e37:	std    
  427e38:	mov    ds:0x2f58dd73,al
  427e3d:	ret    
  427e3e:	xchg   ecx,eax
  427e3f:	mov    ds,WORD PTR [ebx-0x29b1a112]
  427e45:	add    WORD PTR [ebx-0x24],bp
  427e49:	stos   BYTE PTR es:[edi],al
  427e4a:	or     eax,ebp
  427e4c:	inc    eax
  427e4d:	scas   eax,DWORD PTR es:[edi]
  427e4e:	in     al,dx
  427e4f:	nop
  427e50:	pop    ss
  427e51:	sahf   
  427e52:	ins    BYTE PTR es:[edi],dx
  427e53:	nop
  427e54:	jge    0x427dfa
  427e56:	sub    al,0xca
  427e58:	sub    eax,DWORD PTR [ebx+0x11]
  427e5b:	stc    
  427e5c:	xor    cl,BYTE PTR [ebx]
  427e5e:	cmovo  ecx,DWORD PTR [edi+0x66]
  427e62:	(bad)  
  427e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e64:	iret   
  427e65:	or     al,0x1
  427e67:	mov    edi,0xe61e7306
  427e6c:	jns    0x427e69
  427e6e:	jae    0x427e87
  427e70:	mov    ds:0x8914fb05,al
  427e76:	leave  
  427e77:	push   edi
  427e78:	cmp    esi,esp
  427e7a:	add    eax,0x24dec773
  427e7f:	mov    eax,0x60079633
  427e84:	aad    0x9d
  427e86:	(bad)  
  427e87:	adc    cl,dl
  427e89:	pusha  
  427e8a:	push   esi
  427e8b:	or     DWORD PTR [esi-0x27f6fb5f],eax
  427e91:	inc    esi
  427e92:	js     0x427ec2
  427e94:	(bad)  
  427e95:	add    eax,0x75653bdb
  427e9a:	pop    esp
  427e9b:	jno    0x427ec6
  427e9d:	xchg   ebx,eax
  427e9e:	inc    esp
  427e9f:	sahf   
  427ea0:	in     eax,0xa
  427ea2:	xor    BYTE PTR [esi-0x3d05a528],al
  427ea8:	jecxz  0x427efe
  427eaa:	(bad)  
  427eab:	imul   esp,DWORD PTR [eax-0x38],0xfffffff9
  427eaf:	adc    eax,0x5540d355
  427eb4:	les    eax,FWORD PTR [ebx+ebx*2]
  427eb7:	lods   eax,DWORD PTR ds:[esi]
  427eb8:	xchg   esi,eax
  427eb9:	and    ebp,DWORD PTR fs:[ecx]
  427ebc:	(bad)  
  427ebd:	addr16 push 0x6b801bf
  427ec3:	into   
  427ec4:	add    DWORD PTR [edi],ecx
  427ec6:	fdivr  QWORD PTR [ebp-0x2b]
  427ec9:	jmp    0x427ee6
  427ecb:	jne    0x427e77
  427ecd:	push   edx
  427ece:	push   esp
  427ecf:	inc    ecx
  427ed0:	rol    BYTE PTR [esi],1
  427ed2:	sbb    edx,DWORD PTR [ebp+edi*4-0x4c]
  427ed6:	push   ecx
  427ed7:	imul   ebx,DWORD PTR [edx],0x11c136d4
  427edd:	mov    ch,BYTE PTR [edx-0x17]
  427ee0:	mov    eax,0x5728cd3f
  427ee5:	mov    DWORD PTR [edx-0x7160b860],ebx
  427eeb:	inc    ebp
  427eec:	pusha  
  427eed:	ret    0x5f8d
  427ef0:	inc    edi
  427ef1:	mov    esi,0x99bb5062
  427ef6:	dec    ebp
  427ef7:	(bad)  
  427ef8:	out    0x29,eax
  427efa:	adc    esp,DWORD PTR [edi]
  427efc:	push   ebp
  427efd:	test   al,0xb7
  427eff:	push   eax
  427f00:	lock xchg DWORD PTR [ebp-0x28b82807],edi
  427f07:	stos   DWORD PTR es:[edi],eax
  427f08:	inc    ebx
  427f09:	pop    ecx
  427f0a:	cli    
  427f0b:	scas   al,BYTE PTR es:[edi]
  427f0c:	pop    edx
  427f0d:	or     eax,0xef76db08
  427f12:	inc    ecx
  427f13:	xor    BYTE PTR [edx-0x50],0xf5
  427f17:	push   edx
  427f18:	test   al,0x9b
  427f1a:	sbb    al,0x1c
  427f1c:	(bad)  
  427f1d:	dec    eax
  427f1e:	retf   0x8a5a
  427f21:	cmp    DWORD PTR [ebp-0x21],esi
  427f24:	mov    ch,0x6
  427f26:	loope  0x427eee
  427f28:	mov    dl,BYTE PTR [esi+ebp*4]
  427f2b:	pop    edx
  427f2c:	pop    ds
  427f2d:	inc    ebx
  427f2e:	sbb    eax,0x88f0014
  427f33:	cwde   
  427f34:	mov    esi,0x8c8f0fa7
  427f39:	outs   dx,BYTE PTR ds:[esi]
  427f3a:	sub    al,0x45
  427f3c:	(bad)  
  427f3e:	adc    BYTE PTR ds:0xa5aa6dde,dh
  427f44:	aam    0x6
  427f46:	or     DWORD PTR [eax+0x4e],edi
  427f49:	dec    ebx
  427f4a:	imul   ecx,DWORD PTR [ebp+0x44034c41],0x2409ee07
  427f54:	shr    ebp,0x1c
  427f57:	pop    edx
  427f58:	sbb    ebx,DWORD PTR [edi+0x39fd0000]
  427f5e:	xor    eax,0xfd1cf514
  427f63:	stc    
  427f64:	int    0xea
  427f66:	xor    al,al
  427f68:	push   0x24
  427f6a:	ja     0x427f12
  427f6c:	(bad)  
  427f6e:	add    DWORD PTR [eax],eax
  427f70:	jg     0x427f74
  427f72:	add    BYTE PTR [eax],al
  427f74:	pushf  
  427f75:	adc    cl,dh
  427f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f78:	ficom  WORD PTR [edx+0x20e85dbe]
  427f7e:	xchg   BYTE PTR [esi],cl
  427f80:	call   0x75d85002
  427f85:	or     eax,0x29fe6c1b
  427f8a:	imul   edx,DWORD PTR [ecx-0x73],0x5e
  427f8e:	cli    
  427f8f:	es out 0x49,al
  427f92:	or     eax,0x88916624
  427f97:	add    DWORD PTR [edi],edi
  427f99:	push   0xc
  427f9b:	inc    ebx
  427f9c:	cmp    DWORD PTR [esi+0x44],0xffffffae
  427fa0:	in     al,dx
  427fa1:	call   0x9e986c41
  427fa6:	into   
  427fa7:	and    eax,0x5457f537
  427fac:	adc    al,0x4e
  427fae:	push   ecx
  427faf:	xchg   edx,eax
  427fb0:	push   esi
  427fb1:	hlt    
  427fb2:	push   ds
  427fb3:	mov    edi,0x27d2a36e
  427fb8:	jle    0x427f60
  427fba:	dec    edi
  427fbb:	pop    esi
  427fbc:	pushf  
  427fbd:	ins    DWORD PTR es:[edi],dx
  427fbe:	mov    dl,0x1e
  427fc0:	inc    edx
  427fc1:	mov    dl,0xb9
  427fc3:	push   cs
  427fc4:	mov    al,ds:0xdf377439
  427fc9:	mov    BYTE PTR [edx+ebx*1-0x49311d9c],cl
  427fd0:	pop    edi
  427fd1:	pushf  
  427fd2:	pushf  
  427fd3:	aaa    
  427fd4:	mov    dl,0xc4
  427fd6:	jae    0x427fa9
  427fd8:	push   edi
  427fd9:	inc    esi
  427fda:	mov    BYTE PTR [eax+esi*2+0xcb5be9b],dh
  427fe1:	inc    edx
  427fe2:	rol    DWORD PTR [ecx],1
  427fe4:	clc    
  427fe5:	jecxz  0x42800c
  427fe7:	jbe    0x427fbd
  427fe9:	cmp    bl,ah
  427feb:	xor    ebx,DWORD PTR [ecx-0x59]
  427fee:	mov    ds:0xef745fe1,eax
  427ff3:	xchg   DWORD PTR [edi+0x4390e7ec],esi
  427ff9:	dec    esi
  427ffa:	add    al,0x15
  427ffc:	xor    ebx,esi
  427ffe:	cwde   
  427fff:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  428001:	lods   eax,DWORD PTR ds:[esi]
  428002:	jno    0x427fd3
  428004:	xchg   DWORD PTR [ebx+0x1d],ebp
  428007:	mov    ds:0x6505f4e1,eax
  42800c:	(bad)  
  42800d:	(bad)  
  42800f:	mov    edx,0x59db75
  428014:	pop    es
  428015:	mov    eax,0x52ad6f6
  42801a:	daa    
  42801b:	xor    al,0x3a
  42801d:	scas   al,BYTE PTR es:[edi]
  42801e:	add    DWORD PTR [esi],esi
  428020:	mov    edx,0x263131f
  428025:	push   0x378e0a0b
  42802a:	ss hlt 
  42802c:	adc    al,0x8
  42802e:	arpl   WORD PTR [edi],bp
  428030:	bnd jg 0x427ffb
  428033:	leave  
  428034:	daa    
  428035:	fsub   QWORD PTR [edx+esi*1-0x7b]
  428039:	pusha  
  42803a:	retf   0xdc67
  42803d:	lock popf 
  42803f:	je     0x42808b
  428041:	jo     0x427fee
  428043:	repnz mov WORD PTR [eax],cs
  428046:	mov    bl,0x7d
  428048:	add    DWORD PTR [edi+edx*8-0x32],edx
  42804c:	(bad)  
  42804d:	icebp  
  42804e:	mov    BYTE PTR [ebx-0x3b],bl
  428051:	pop    edi
  428052:	ficom  WORD PTR [esi]
  428054:	ins    DWORD PTR es:[edi],dx
  428055:	dec    eax
  428056:	leave  
  428057:	mov    ecx,0x274911b2
  42805c:	retf   0x7712
  42805f:	icebp  
  428060:	leave  
  428061:	es cs xor al,0x48
  428065:	cmp    esi,esp
  428067:	pop    ecx
  428068:	mov    ecx,0x864f075b
  42806d:	gs pushf 
  42806f:	pop    esi
  428070:	cmp    edi,DWORD PTR [eax+0x43809da2]
  428076:	dec    ebp
  428077:	mov    ebx,0xa6afc443
  42807c:	push   edi
  42807d:	call   0x7c80:0xd6e97401
  428084:	adc    edx,DWORD PTR ds:0x8e23243e
  42808a:	push   ebp
  42808b:	mov    ebp,0x57609260
  428090:	cmp    al,cl
  428092:	mov    al,ds:0x29edcb26
  428097:	pusha  
  428098:	and    al,0x34
  42809a:	scas   eax,DWORD PTR es:[edi]
  42809b:	addr16 addr16 push ds
  42809e:	repz mov edx,0x6a42ce6f
  4280a4:	in     al,dx
  4280a5:	jbe    0x4280ec
  4280a7:	inc    eax
  4280a8:	jnp    0x428040
  4280aa:	mov    ds:0xa1b3abbf,al
  4280af:	mov    ss,WORD PTR [eax+0x7]
  4280b2:	add    al,0x95
  4280b4:	cmp    cl,BYTE PTR [ebx-0x73964423]
  4280ba:	sbb    dh,dh
  4280bc:	push   0xffffffb7
  4280be:	call   0x7787:0xda2031b7
  4280c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280c6:	and    eax,0x34bd3eef
  4280cb:	loop   0x428097
  4280cd:	add    edx,DWORD PTR [ebx+0x61d799c7]
  4280d3:	xor    bh,BYTE PTR [ecx]
  4280d5:	imul   eax,DWORD PTR [eax],0xe284a992
  4280db:	add    al,BYTE PTR [eax-0x3b]
  4280de:	xchg   ebp,eax
  4280df:	pop    es
  4280e0:	cs dec eax
  4280e2:	jg     0x428151
  4280e4:	xlat   BYTE PTR ds:[ebx]
  4280e5:	push   ecx
  4280e6:	mov    dh,BYTE PTR [edi+edx*4-0x6cd323aa]
  4280ed:	xchg   edi,eax
  4280ee:	xchg   esi,eax
  4280ef:	retf   
  4280f0:	pusha  
  4280f1:	je     0x428123
  4280f3:	sub    bl,al
  4280f5:	pusha  
  4280f6:	push   edx
  4280f7:	jl     0x428098
  4280f9:	adc    eax,0x1a7830dc
  4280fe:	lods   al,BYTE PTR ds:[esi]
  4280ff:	cli    
  428100:	dec    ecx
  428101:	xchg   esi,eax
  428102:	adc    BYTE PTR [edx-0x5d],ch
  428105:	ret    0x5ca1
  428108:	fyl2xp1 
  42810a:	jp     0x4280e3
  42810c:	loopne 0x4280d0
  42810e:	shl    dl,0xe3
  428111:	fdivr  DWORD PTR [esi+0x27]
  428114:	out    0xab,al
  428116:	icebp  
  428117:	jne    0x42814a
  428119:	cld    
  42811a:	aaa    
  42811b:	pop    ecx
  42811c:	push   0x1f
  42811e:	hlt    
  42811f:	push   esi
  428120:	clc    
  428121:	in     eax,dx
  428122:	ret    
  428123:	sahf   
  428124:	cmp    ah,BYTE PTR ds:0xc3231f2c
  42812a:	mov    ecx,0xf0a95a92
  42812f:	out    0xd6,al
  428131:	push   0xffffffe3
  428133:	pop    ds
  428134:	xchg   edi,eax
  428135:	mov    edx,0x8c0645eb
  42813a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42813b:	jne    0x4280f9
  42813d:	in     al,dx
  42813e:	push   ss
  42813f:	ins    BYTE PTR es:[edi],dx
  428140:	and    edi,DWORD PTR [edi+edi*8+0x38]
  428144:	mov    ecx,0x3ab305f6
  428149:	or     al,0x94
  42814b:	cmp    bl,0xb1
  42814e:	stc    
  42814f:	dec    DWORD PTR [edx-0x471e37dc]
  428155:	adc    BYTE PTR es:[ebx-0x6e97747d],dh
  42815c:	shr    BYTE PTR [esi+ecx*1-0x1d7bbcb4],cl
  428163:	inc    eax
  428164:	pop    edx
  428165:	fild   WORD PTR [ebp-0x7e]
  428168:	gs retf 
  42816a:	aad    0xd5
  42816c:	xor    eax,0x2387c433
  428171:	sbb    al,0x19
  428173:	xor    DWORD PTR [edi-0xd31378c],ebp
  428179:	dec    edx
  42817a:	xchg   bl,bl
  42817c:	in     al,dx
  42817d:	out    dx,al
  42817e:	test   eax,0xa5decd13
  428183:	add    bh,dh
  428185:	inc    esp
  428186:	lods   al,BYTE PTR ds:[esi]
  428187:	call   0x576a2157
  42818c:	hlt    
  42818d:	push   ss
  42818e:	out    0x2d,al
  428190:	test   BYTE PTR ds:0x5b9ac335,ch
  428196:	dec    ebp
  428197:	out    0x90,al
  428199:	pop    esi
  42819a:	xchg   edi,eax
  42819b:	dec    eax
  42819c:	xor    ah,BYTE PTR [ebp-0xa]
  42819f:	jmp    0xdf7d0cbe
  4281a4:	jecxz  0x428198
  4281a6:	pop    es
  4281a7:	fiadd  WORD PTR [ecx+0x58]
  4281aa:	jle    0x4281e8
  4281ac:	popfw  
  4281ae:	and    DWORD PTR [edx-0x31],esi
  4281b1:	inc    edx
  4281b2:	jno    0x4281d6
  4281b4:	fidivr WORD PTR [ebx]
  4281b6:	dec    ebp
  4281b7:	dec    esp
  4281b8:	mov    ds:0x2fd8735e,eax
  4281bd:	pop    esi
  4281be:	std    
  4281bf:	sub    BYTE PTR [ebx-0x55a72e7c],bl
  4281c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281c6:	gs stos DWORD PTR es:[edi],eax
  4281c8:	mov    cl,0x1a
  4281ca:	mov    edi,DWORD PTR [eax+0x68834d3]
  4281d0:	test   DWORD PTR [esi+0xad57ffa],0x7f509721
  4281da:	lock enter 0x4d7f,0x1c
  4281df:	clc    
  4281e0:	out    dx,al
  4281e1:	ret    0xb39f
  4281e4:	jl     0x4281f7
  4281e6:	arpl   WORD PTR ds:0x23ad95d8,ax
  4281ec:	jl     0x42818d
  4281ee:	test   BYTE PTR [esi+0x191b97],ah
	...
