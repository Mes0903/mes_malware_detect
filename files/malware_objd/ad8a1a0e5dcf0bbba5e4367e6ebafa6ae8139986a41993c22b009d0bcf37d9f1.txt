
ad8a1a0e5dcf0bbba5e4367e6ebafa6ae8139986a41993c22b009d0bcf37d9f1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9b,0x10
  401025:	cmp    DWORD PTR ds:0x428e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x428e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x428000
  401049:	call   DWORD PTR ds:0x42a9cb
  40104f:	cmp    DWORD PTR ds:0x428e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x428e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x428e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x428e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x428e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x428e87,0x16
  40108c:	cmp    DWORD PTR ds:0x428e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x428e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x428189
  4010b0:	call   DWORD PTR ds:0x42a9cf
  4010b6:	mov    ecx,DWORD PTR ds:0x428e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x428e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x428ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x428e5f
  4010de:	mov    eax,ds:0x4281f3
  4010e3:	and    DWORD PTR ds:0x428ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x428e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x428403
  401101:	and    DWORD PTR ds:0x428e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x428ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x428eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x428eb7
  401130:	inc    eax
  401131:	mov    ds:0x428eb7,eax
  401136:	cmp    DWORD PTR ds:0x428eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x428eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x42a9d3
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x428e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x428ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x428e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x428373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x428e97,0x16
  401197:	cmp    DWORD PTR ds:0x428e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x428e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4280f7
  4011bb:	call   DWORD PTR ds:0x42a9db
  4011c1:	cmp    DWORD PTR ds:0x428e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x428e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x428e97,eax
  4011d9:	mov    eax,ds:0x428e97
  4011de:	dec    eax
  4011df:	mov    ds:0x428e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x428ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x428e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x428e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x428e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x42a9df
  401234:	cmp    DWORD PTR ds:0x428e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x428e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x428e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x428e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x428e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x428e63,0x13
  40127c:	cmp    DWORD PTR ds:0x428e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x428e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x428000
  4012a0:	call   DWORD PTR ds:0x42a9e3
  4012a6:	mov    eax,ds:0x428e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x428e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x428e73
  4012c0:	sub    DWORD PTR ds:0x428e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x428ec7,0x428e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x428ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x428e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x428e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x428e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x428ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x428e57,0x428e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x428e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x428e73,0x428e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x428e63,0x428e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x428ecf,0x428e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x428ecf,0x428e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x428e9f,0x428e77
  401392:	push   eax
  401393:	mov    eax,ds:0x428393
  401398:	add    DWORD PTR ds:0x428e73,0x428eb7
  4013a2:	push   0x4282e9
  4013a7:	or     DWORD PTR ds:0x428e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x428e47,0x428e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x428ec7
  4013d6:	adc    edx,DWORD PTR ds:0x428e37
  4013dc:	mov    DWORD PTR ds:0x428ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x428e5f
  4013ec:	and    DWORD PTR ds:0x428e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x428ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x428e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x428ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x428eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x428eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x428eb7,edx
  401447:	cmp    DWORD PTR ds:0x428eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x42a9e7
  401464:	cmp    DWORD PTR ds:0x428eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x428ec3,0x428e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x428e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x428e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x428ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax+0x5ba705df],esi
  4014ce:	aas    
  4014cf:	rol    BYTE PTR [ecx-0x7d],cl
  4014d2:	add    DWORD PTR [ebx-0x7c9fb87d],0xffffff83
  4014d9:	sub    dh,BYTE PTR [ecx]
  4014db:	sub    BYTE PTR [esi],bh
  4014dd:	cmp    ah,BYTE PTR es:[eax+esi*1]
  4014e1:	jp     0x401520
  4014e3:	jbe    0x40155c
  4014e5:	inc    ecx
  4014e6:	jae    0x40155a
  4014e8:	jae    0x40155c
  4014ea:	dec    ebx
  4014eb:	(bad)  
  4014ed:	(bad)  
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	test   DWORD PTR [esi+0x60a5e27c],edi
  401545:	xchg   esp,eax
  401546:	mov    esi,0x4e9b2918
  40154b:	or     al,0x9f
  40154d:	inc    ecx
  40154e:	mov    ecx,DWORD PTR [esp+edx*1-0x6d94cd1d]
  401555:	dec    ecx
  401556:	dec    esp
  401557:	imul   edi,esp,0x963693d0
  40155d:	int    0xc8
  40155f:	rcl    DWORD PTR [ebp+0x6b5af96e],1
  401565:	push   ecx
  401566:	adc    DWORD PTR [edi],edi
  401568:	or     al,0x47
  40156a:	sbb    al,0xb2
  40156c:	push   esp
  40156d:	sar    DWORD PTR [eax+0x6719dd4d],cl
  401573:	add    ch,BYTE PTR [ebx+0x67]
  401576:	mov    edx,0x5c07506
  40157b:	pop    ebx
  40157c:	sub    DWORD PTR [ebp+0x155f4135],ebp
  401582:	inc    ebp
  401583:	bswap  edx
  401585:	aam    0x19
  401587:	or     BYTE PTR [esi+0x2],dl
  40158a:	std    
  40158b:	xor    dh,cl
  40158d:	cdq    
  40158e:	xchg   esp,eax
  40158f:	lea    esi,[eax+0x17efcbf4]
  401595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401596:	test   DWORD PTR [ecx],ecx
  401598:	mov    bl,0xb0
  40159a:	xchg   DWORD PTR [eax+0x2db3594],esi
  4015a0:	sbb    DWORD PTR [ebp+0x25f1302c],esp
  4015a6:	jno    0x4015e2
  4015a8:	cli    
  4015a9:	fdivr  st,st(4)
  4015ab:	xchg   ebx,eax
  4015ac:	jo     0x40158d
  4015ae:	iret   
  4015af:	fcom   QWORD PTR [ebx]
  4015b1:	sbb    eax,0x985a84cc
  4015b6:	stc    
  4015b7:	jg     0x4015e0
  4015b9:	mov    ebp,0x46ebf39b
  4015be:	mov    eax,ds:0x9d7e3294
  4015c3:	xchg   ebx,eax
  4015c4:	sub    eax,0xd660d5cb
  4015c9:	cs jb  0x4015ef
  4015cc:	shr    DWORD PTR [ecx],1
  4015ce:	pop    es
  4015cf:	das    
  4015d0:	fiadd  DWORD PTR [ebp-0x6f]
  4015d3:	xchg   esp,eax
  4015d4:	push   ebp
  4015d5:	adc    DWORD PTR [edx],eax
  4015d7:	mov    ebx,0x2ac602a3
  4015dc:	loop   0x40159f
  4015de:	ja     0x4015de
  4015e0:	xor    BYTE PTR [edx+0x22a04aa4],bh
  4015e6:	fdivr  st(4),st
  4015e8:	mov    edx,0x1d0316f5
  4015ed:	imul   edi,DWORD PTR [ebx],0x1
  4015f0:	loop   0x40166c
  4015f2:	pop    es
  4015f3:	pop    ecx
  4015f4:	sub    BYTE PTR [esi-0x4b],0xec
  4015f8:	lods   al,BYTE PTR ds:[esi]
  4015f9:	mov    edi,0x196a24d5
  4015fe:	arpl   sp,dx
  401600:	pop    ds
  401601:	ds push ds
  401603:	cli    
  401604:	ret    
  401605:	cwde   
  401606:	ins    BYTE PTR es:[edi],dx
  401607:	jno    0x4015b5
  401609:	arpl   WORD PTR [eax-0xd63ee9f],di
  40160f:	mov    ebx,0x6c27554f
  401614:	repz jecxz 0x4015b5
  401617:	push   0xddfca2a8
  40161c:	pop    ss
  40161d:	sbb    bh,BYTE PTR [ebx]
  40161f:	(bad)  
  401620:	mov    ds:0x58e51769,eax
  401625:	dec    esp
  401626:	jg     0x401610
  401628:	adc    eax,0xd0b5e27b
  40162d:	and    dh,0x4f
  401630:	in     al,0xc
  401632:	rcr    esi,1
  401634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401635:	xor    BYTE PTR [edi-0x6],bh
  401638:	inc    edi
  401639:	aas    
  40163a:	pop    eax
  40163b:	int    0x64
  40163d:	aaa    
  40163e:	enter  0xcfe2,0xfe
  401642:	sbb    eax,0x12dab425
  401647:	cmp    eax,0x26168b32
  40164c:	in     eax,dx
  40164d:	gs cwde 
  40164f:	mov    bh,BYTE PTR [ebx+0x69]
  401652:	inc    ebx
  401653:	gs in  al,dx
  401655:	dec    edi
  401656:	sub    ebp,ebp
  401658:	xchg   ebp,eax
  401659:	mov    ch,0xb6
  40165b:	mov    dh,bh
  40165d:	jp     0x401614
  40165f:	bound  ecx,QWORD PTR [ebx]
  401661:	out    dx,al
  401662:	popf   
  401663:	das    
  401664:	shl    ah,1
  401666:	out    0xef,al
  401668:	bswap  ebx
  40166a:	loope  0x4016d4
  40166c:	adc    eax,0xeaa3a1f2
  401671:	in     al,0x74
  401673:	inc    eax
  401674:	ins    DWORD PTR es:[edi],dx
  401675:	cwde   
  401676:	aas    
  401677:	out    dx,eax
  401678:	ret    0x9753
  40167b:	dec    edi
  40167c:	outs   dx,BYTE PTR ds:[esi]
  40167d:	adc    eax,0xd296a081
  401682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401683:	cwde   
  401684:	and    eax,0xd396bd8d
  401689:	div    esi
  40168b:	xchg   edx,eax
  40168c:	mov    al,0xed
  40168e:	xchg   esi,eax
  40168f:	and    al,0x4c
  401691:	sub    al,0xb4
  401693:	or     bl,BYTE PTR [edi-0x4eec9440]
  401699:	push   esi
  40169a:	aad    0x82
  40169c:	outs   dx,BYTE PTR fs:[esi]
  40169e:	das    
  40169f:	xchg   dh,al
  4016a1:	ins    DWORD PTR es:[edi],dx
  4016a2:	retf   0x2a5e
  4016a5:	ins    DWORD PTR es:[edi],dx
  4016a6:	cmp    ch,0x63
  4016a9:	xchg   esp,eax
  4016aa:	cmp    BYTE PTR [ecx+0x16653727],ah
  4016b0:	out    0x24,eax
  4016b2:	pop    esp
  4016b3:	stos   DWORD PTR es:[edi],eax
  4016b4:	sub    esp,DWORD PTR [edi-0x21]
  4016b7:	fxch   st(2)
  4016b9:	in     eax,dx
  4016ba:	sti    
  4016bb:	xor    eax,0xe57a83ce
  4016c0:	dec    ebx
  4016c1:	fcom   DWORD PTR [ebp-0x4]
  4016c4:	xchg   ebp,eax
  4016c5:	push   cs
  4016c6:	(bad)  
  4016c8:	cmp    BYTE PTR [edx+0x6e22889f],0x8c
  4016cf:	push   edi
  4016d0:	sbb    BYTE PTR [ebp+0x1f],bl
  4016d3:	jne    0x401711
  4016d5:	ret    0x694
  4016d8:	outs   dx,BYTE PTR ds:[esi]
  4016d9:	xchg   esp,eax
  4016da:	adc    eax,0x52de09f8
  4016df:	dec    eax
  4016e0:	aaa    
  4016e1:	inc    ecx
  4016e2:	add    al,BYTE PTR [esi]
  4016e4:	ja     0x4016e2
  4016e6:	dec    ebx
  4016e7:	sub    al,0xea
  4016e9:	cmp    eax,0x53449d9
  4016ee:	sub    eax,0x6e0ba0a
  4016f3:	repnz push esi
  4016f5:	pop    es
  4016f6:	push   0xffffff90
  4016f8:	jnp    0x4016c7
  4016fa:	test   DWORD PTR ds:0xaa324fdb,ecx
  401700:	arpl   sp,cx
  401702:	outs   dx,BYTE PTR ds:[esi]
  401703:	lods   eax,DWORD PTR ds:[esi]
  401704:	pop    edx
  401705:	cwde   
  401706:	xchg   ebx,eax
  401707:	push   ecx
  401708:	xchg   esp,eax
  401709:	loop   0x4016c0
  40170b:	adc    eax,0x98dee63
  401710:	push   edi
  401711:	call   0xa0a6b983
  401716:	cmp    cl,BYTE PTR [esi+edx*4-0x2d]
  40171a:	cli    
  40171b:	cs sub al,0x24
  40171e:	repz test DWORD PTR [edi+0x493d931a],0x9bb019e2
  401729:	add    eax,ebx
  40172b:	daa    
  40172c:	hlt    
  40172d:	mov    WORD PTR [eax-0x61d9495f],dx
  401734:	rcr    DWORD PTR [esp+eax*8-0x2cd391b4],cl
  40173b:	mov    ch,0x88
  40173d:	int    0x68
  40173f:	jle    0x4017a5
  401741:	cmp    DWORD PTR [edx-0x37],ebp
  401744:	inc    ebx
  401745:	test   DWORD PTR [esi-0x33],edi
  401748:	js     0x4017b8
  40174a:	daa    
  40174b:	cmp    BYTE PTR fs:[ebx],ch
  40174e:	test   ah,ah
  401750:	cmp    DWORD PTR [ecx+0x24],eax
  401753:	popf   
  401754:	ror    BYTE PTR [eax+esi*1+0x1ed33912],0xd
  40175c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40175e:	es jmp 0x876b:0xbef86a12
  401766:	aam    0x64
  401768:	test   bl,dh
  40176a:	mov    eax,0x50068671
  40176f:	es xchg esp,eax
  401771:	jno    0x401792
  401773:	xor    ch,BYTE PTR [edi+0x3ee55389]
  401779:	xchg   edx,eax
  40177a:	inc    edi
  40177b:	mov    ah,0x59
  40177d:	loope  0x4017b7
  40177f:	popa   
  401780:	jp     0x401713
  401782:	xor    cl,BYTE PTR [edx+edi*4-0x31]
  401786:	lds    ecx,FWORD PTR [ebx+0x7c483886]
  40178c:	push   ebp
  40178d:	lds    esp,FWORD PTR [ebx-0x3c]
  401790:	inc    edx
  401791:	jnp    0x4017d6
  401793:	mov    ebx,0x114e57de
  401798:	(bad)  
  401799:	ret    0x3a80
  40179c:	mov    dh,0xb
  40179e:	call   0xe901:0x62e299cf
  4017a5:	xor    eax,0x569311af
  4017aa:	hlt    
  4017ab:	push   ebp
  4017ac:	loop   0x4017ea
  4017ae:	inc    esi
  4017af:	pop    es
  4017b0:	xchg   BYTE PTR [eax+ebx*1-0x171474d4],al
  4017b7:	retf   
  4017b8:	mov    bh,BYTE PTR [edx+0x57]
  4017bb:	aad    0x68
  4017bd:	imul   edx,edi,0x74
  4017c0:	bound  eax,QWORD PTR [edx+0x55]
  4017c3:	inc    ebp
  4017c4:	xor    ecx,DWORD PTR [ebx+0x3b9c8961]
  4017ca:	pop    ebp
  4017cb:	mov    dl,0xb9
  4017cd:	dec    ecx
  4017ce:	xchg   ebx,eax
  4017cf:	mov    ch,0xaf
  4017d1:	aam    0x51
  4017d3:	dec    esp
  4017d4:	not    dl
  4017d6:	sbb    DWORD PTR [ecx+0x6eb00f54],esi
  4017dc:	xor    DWORD PTR [esp+ebp*4-0x5474c4f0],esi
  4017e3:	int    0x3c
  4017e5:	push   eax
  4017e6:	pop    ebp
  4017e7:	dec    ecx
  4017e8:	mov    ah,0x46
  4017ea:	int3   
  4017eb:	push   0x272cfa37
  4017f0:	pop    eax
  4017f1:	inc    esp
  4017f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017f3:	or     bh,ah
  4017f5:	xchg   edx,eax
  4017f6:	mov    ecx,0x7e12f491
  4017fb:	fdivr  DWORD PTR [esi+0x1e]
  4017fe:	jmp    0x4017e2
  401800:	mov    eax,ds:0xefcd7f2e
  401805:	mov    dh,0xee
  401807:	imul   eax,ecx,0x77
  40180a:	inc    ebp
  40180b:	jmp    0xeccfcb04
  401810:	xchg   DWORD PTR [ebp-0x4ae34b96],eax
  401816:	mov    eax,ds:0xcf6895ab
  40181b:	fisttp WORD PTR [eax+0x4bd23248]
  401821:	fstp   DWORD PTR ds:0x15f0cdbb
  401827:	shr    ebp,1
  401829:	mul    DWORD PTR [ecx]
  40182b:	rcl    BYTE PTR [ecx],cl
  40182d:	arpl   si,sp
  40182f:	js     0x401857
  401831:	pushf  
  401832:	add    dl,BYTE PTR [eax+0x53]
  401835:	loop   0x40187d
  401837:	into   
  401838:	lahf   
  401839:	rcr    dl,cl
  40183b:	int3   
  40183c:	scas   eax,DWORD PTR es:[edi]
  40183d:	aad    0xab
  40183f:	or     al,0x34
  401841:	scas   eax,DWORD PTR es:[edi]
  401842:	iret   
  401843:	cdq    
  401844:	add    al,0xd0
  401846:	dec    ecx
  401847:	mov    dl,0xbf
  401849:	cmp    BYTE PTR [eax+0x7c5f6504],cl
  40184f:	mov    ds:0x1ba6c7d4,al
  401854:	or     DWORD PTR [edx],esp
  401856:	add    DWORD PTR [edx-0x7e],ebx
  401859:	push   edx
  40185a:	stc    
  40185b:	aas    
  40185c:	shl    BYTE PTR [edx+0x50],0xc9
  401860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401861:	out    dx,al
  401862:	rep outs dx,DWORD PTR ds:[esi]
  401864:	int    0x5f
  401866:	sub    eax,DWORD PTR [ebp+0x3ef4434]
  40186c:	rol    DWORD PTR [eax+ebx*2+0x466dd22c],1
  401873:	xlat   BYTE PTR ds:[ebx]
  401874:	xor    edx,esp
  401876:	ins    DWORD PTR es:[edi],dx
  401877:	fs ss mov cl,0xdd
  40187b:	outs   dx,DWORD PTR ds:[esi]
  40187c:	stc    
  40187d:	rcr    BYTE PTR [ecx-0x25949825],1
  401883:	push   ebx
  401884:	icebp  
  401885:	in     al,dx
  401886:	mov    cl,0x7b
  401888:	fisub  WORD PTR [esi+0x600fc48e]
  40188e:	lods   eax,DWORD PTR ds:[esi]
  40188f:	cdq    
  401890:	push   ebp
  401891:	cwde   
  401892:	jnp    0x401823
  401894:	aas    
  401895:	dec    ecx
  401896:	loop   0x40183f
  401898:	adc    cl,BYTE PTR [ebx+0x1c]
  40189b:	mov    ds:0x9eceb7f6,eax
  4018a0:	cmp    BYTE PTR [eax+0xfee59fa],bl
  4018a6:	push   eax
  4018a7:	das    
  4018a8:	rcr    BYTE PTR [edx-0x18],0x1c
  4018ac:	mov    ch,0x16
  4018ae:	loop   0x401841
  4018b0:	push   ss
  4018b1:	int3   
  4018b2:	es jbe 0x40190d
  4018b5:	not    BYTE PTR [edx]
  4018b7:	cs adc eax,0x12ce0225
  4018bd:	mov    ecx,0x8f1cac91
  4018c2:	arpl   WORD PTR [ebp-0x2d],dx
  4018c5:	adc    DWORD PTR [ebx+0x3e756f08],edi
  4018cb:	xchg   esp,eax
  4018cc:	push   ebp
  4018cd:	add    al,0x4d
  4018cf:	add    dl,cl
  4018d1:	popf   
  4018d2:	adc    BYTE PTR ds:0x8fb2f565,ch
  4018d8:	test   BYTE PTR [ebx+0x2b1e76d],ah
  4018de:	pop    eax
  4018df:	imul   ecx,esi,0x35
  4018e2:	sar    bh,0x11
  4018e5:	xor    eax,0x6c9121e6
  4018ea:	mov    bh,0xd5
  4018ec:	and    cl,BYTE PTR [edx+0x4aaff316]
  4018f2:	test   eax,0x9b40e7ac
  4018f7:	jns    0x40193f
  4018f9:	call   0x6d5ea339
  4018fe:	add    eax,0x77f2891
  401903:	mov    edi,DWORD PTR [ebx]
  401905:	pop    ds
  401906:	mov    ebx,eax
  401908:	(bad)  
  401909:	repnz pop es
  40190b:	or     BYTE PTR [edi-0x8],bh
  40190e:	(bad)  
  40190f:	pop    esp
  401910:	inc    eax
  401911:	cmp    BYTE PTR [eax],ch
  401913:	bound  eax,QWORD PTR [edx]
  401915:	mov    dh,0x27
  401917:	icebp  
  401918:	mov    dl,0xa
  40191a:	push   ebp
  40191b:	icebp  
  40191c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40191e:	daa    
  40191f:	inc    ebp
  401920:	outs   dx,DWORD PTR ds:[esi]
  401921:	ffreep st(4)
  401923:	div    DWORD PTR [edi]
  401925:	sub    esi,edx
  401927:	sub    DWORD PTR [edi],esi
  401929:	sahf   
  40192a:	jnp    0x4019a0
  40192c:	daa    
  40192d:	sar    BYTE PTR [ebx+edi*4],cl
  401930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401931:	and    al,0x3f
  401933:	xchg   edi,eax
  401934:	scas   al,BYTE PTR es:[edi]
  401935:	and    eax,0xd6424a1
  40193a:	add    eax,0x47038d94
  40193f:	fadd   st,st(3)
  401941:	out    dx,al
  401942:	pop    ss
  401943:	push   edi
  401944:	sbb    DWORD PTR [edi-0xf24c97f],esp
  40194a:	frstor [edi]
  40194c:	pop    ebx
  40194d:	jg     0x40196d
  40194f:	mov    dl,0xb3
  401951:	jg     0x4018f2
  401953:	inc    edi
  401954:	rcr    DWORD PTR [edx+0x1938053b],cl
  40195a:	sbb    dh,BYTE PTR [ebp+0x3f7a4f13]
  401960:	lahf   
  401961:	sbb    eax,0xa2d73cd4
  401966:	push   esp
  401967:	inc    BYTE PTR [ecx+0x6ef37e4b]
  40196d:	jbe    0x401968
  40196f:	inc    edi
  401970:	rcr    BYTE PTR [ebp+0x61],cl
  401973:	and    ch,0x56
  401976:	jecxz  0x40199a
  401978:	fild   QWORD PTR [eax]
  40197a:	(bad)  
  40197b:	dec    edx
  40197c:	(bad)  [ecx]
  40197e:	stc    
  40197f:	cmc    
  401980:	out    dx,al
  401981:	into   
  401982:	retf   
  401983:	fiadd  DWORD PTR [edx+0x7f]
  401986:	stos   DWORD PTR es:[edi],eax
  401987:	or     al,0xf9
  401989:	mov    al,0x1
  40198b:	or     DWORD PTR [edi+eax*1],esi
  40198e:	loope  0x4019dc
  401990:	dec    edi
  401991:	mov    ds:0x8d4d4793,al
  401996:	shl    BYTE PTR [esi-0x7761b580],1
  40199c:	xor    dh,cl
  40199e:	jge    0x401971
  4019a0:	out    0x26,eax
  4019a2:	cmp    eax,0xa0c11c0a
  4019a7:	jae    0x4019d6
  4019a9:	mov    dh,0x91
  4019ab:	or     BYTE PTR [edx-0x2f],al
  4019ae:	xchg   edi,eax
  4019af:	push   esi
  4019b0:	cmp    dh,bh
  4019b2:	sbb    eax,0xeee8d85e
  4019b7:	xor    al,0x6e
  4019b9:	out    dx,eax
  4019ba:	in     al,dx
  4019bb:	in     al,dx
  4019bc:	mov    eax,0xefbc382c
  4019c1:	iret   
  4019c2:	mov    ah,0x27
  4019c4:	(bad)  
  4019c6:	and    eax,0xe511ba1d
  4019cb:	xor    eax,0x7a97ffe3
  4019d0:	enter  0xac45,0xbd
  4019d4:	add    BYTE PTR [ebp-0x64],dh
  4019d7:	jno    0x4019bf
  4019d9:	popa   
  4019da:	js     0x4019d8
  4019dc:	jge    0x401a0b
  4019de:	push   ecx
  4019df:	cdq    
  4019e0:	jb     0x4019c0
  4019e2:	outs   dx,BYTE PTR ds:[esi]
  4019e3:	lods   eax,DWORD PTR ds:[esi]
  4019e4:	cmp    al,cl
  4019e6:	add    BYTE PTR [ecx-0x5a461eef],dl
  4019ec:	push   0x6
  4019ee:	push   esi
  4019ef:	cwde   
  4019f0:	push   es
  4019f1:	cmp    eax,0x352c2435
  4019f6:	jmp    0x4019e1
  4019f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019f9:	data16 repnz cmp cl,dl
  4019fd:	test   eax,0x99a81a5f
  401a02:	test   eax,0xaa0205e8
  401a07:	xchg   edi,eax
  401a08:	aaa    
  401a09:	sar    BYTE PTR [edi],0x40
  401a0c:	xor    ebx,eax
  401a0e:	out    dx,al
  401a0f:	sbb    ebp,DWORD PTR ds:0x98a7443e
  401a15:	inc    eax
  401a16:	imul   edi,ebp,0xc047b4e3
  401a1c:	inc    edx
  401a1d:	sbb    ecx,DWORD PTR [edx]
  401a1f:	push   es
  401a20:	(bad)  
  401a21:	mov    ebp,DWORD PTR [ebx+0x62]
  401a24:	cmc    
  401a25:	nop
  401a26:	shr    esp,0xa6
  401a29:	xchg   esp,eax
  401a2a:	ret    0x51a5
  401a2d:	lock cmp DWORD PTR [ebx-0x796336e2],edi
  401a34:	sahf   
  401a35:	cmp    al,0x2a
  401a37:	jne    0x401a5d
  401a39:	lea    eax,[edi+0x78]
  401a3c:	jae    0x401a14
  401a3e:	out    0xb4,eax
  401a40:	rcr    DWORD PTR [ecx-0x2cbe0056],0x3d
  401a47:	popf   
  401a48:	sbb    al,0x1a
  401a4a:	or     DWORD PTR ds:0xd0f183af,esp
  401a50:	mov    ebp,0x14164019
  401a55:	mov    ds:0x98cff2ee,al
  401a5a:	mov    al,0xcd
  401a5c:	ret    
  401a5d:	into   
  401a5e:	outs   dx,BYTE PTR ds:[esi]
  401a5f:	push   esi
  401a60:	fidivr DWORD PTR [esi+esi*8+0xc]
  401a64:	push   cs
  401a65:	fwait
  401a66:	in     al,0x25
  401a68:	cdq    
  401a69:	(bad)  
  401a6a:	in     eax,dx
  401a6b:	les    eax,FWORD PTR [edi-0x59]
  401a6e:	adc    edi,eax
  401a70:	repnz xor DWORD PTR [eax-0x45807527],edi
  401a77:	fs sbb edx,ecx
  401a7a:	or     dh,al
  401a7c:	iret   
  401a7d:	fs jle 0x401aa8
  401a80:	stos   DWORD PTR es:[edi],eax
  401a81:	clc    
  401a82:	ins    DWORD PTR es:[edi],dx
  401a83:	adc    ecx,DWORD PTR [ebx]
  401a85:	jnp    0x401abc
  401a87:	cld    
  401a88:	mov    al,0x21
  401a8a:	div    edx
  401a8c:	int    0x34
  401a8e:	loopne 0x401a21
  401a90:	fwait
  401a91:	scas   eax,DWORD PTR es:[edi]
  401a92:	sahf   
  401a93:	jo     0x401b14
  401a95:	sub    eax,0xe54b1ab9
  401a9a:	adc    al,0xdf
  401a9c:	neg    DWORD PTR [ecx+eiz*8+0x3670284a]
  401aa3:	prefetch BYTE PTR [esi-0x71]
  401aa7:	dec    edi
  401aa8:	call   0xfc3676f7
  401aad:	inc    ecx
  401aae:	pop    ebp
  401aaf:	xor    al,0x26
  401ab1:	test   DWORD PTR [ebx+esi*4+0x7b07255d],ebp
  401ab8:	and    eax,0x81b3dc8c
  401abd:	ds test al,0x9
  401ac0:	aas    
  401ac1:	ret    0x37c4
  401ac4:	es sar ah,cl
  401ac7:	call   0x305d8256
  401acc:	cdq    
  401acd:	or     edx,ebp
  401acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ad0:	cli    
  401ad1:	(bad)  
  401ad2:	fdivr  st(6),st
  401ad4:	ja     0x401ab4
  401ad6:	mov    dl,0xe1
  401ad8:	gs (bad) 
  401adb:	das    
  401adc:	call   0xc859e8c1
  401ae1:	mov    bh,0x2e
  401ae3:	cwde   
  401ae4:	dec    edx
  401ae5:	or     al,0xb6
  401ae8:	jb     0x401b4f
  401aea:	out    dx,al
  401aeb:	loopne 0x401ab3
  401aed:	mov    BYTE PTR ss:[ebp*2-0x3ef94723],dh
  401af5:	push   es
  401af6:	and    al,0x7f
  401af8:	dec    ebp
  401af9:	inc    ecx
  401afa:	pop    esi
  401afb:	jnp    0x401b62
  401afd:	sub    eax,0x1e371815
  401b02:	dec    edi
  401b03:	dec    eax
  401b04:	jne    0x401afa
  401b06:	xchg   esi,eax
  401b07:	aaa    
  401b08:	add    ecx,esp
  401b0a:	retf   
  401b0b:	jg     0x401b71
  401b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b0e:	dec    edx
  401b0f:	mov    edi,ebx
  401b11:	shr    esp,cl
  401b13:	push   es
  401b14:	mov    ebp,0xdcfe4355
  401b19:	out    dx,al
  401b1a:	jnp    0x401b48
  401b1c:	cmc    
  401b1d:	pop    ecx
  401b1e:	inc    ebx
  401b1f:	or     esp,DWORD PTR [ecx-0x64]
  401b22:	call   FWORD PTR [edi]
  401b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b25:	push   ecx
  401b26:	lahf   
  401b27:	mov    ah,0xf1
  401b29:	mov    BYTE PTR [esi+0x7f95eb2c],bl
  401b2f:	sbb    ebx,DWORD PTR [eax-0x67d1947a]
  401b35:	xchg   ecx,eax
  401b36:	cmp    esp,ebp
  401b38:	xchg   edi,eax
  401b39:	test   DWORD PTR [ebp+0x21],esp
  401b3c:	sti    
  401b3d:	std    
  401b3e:	icebp  
  401b3f:	jl     0x401aea
  401b41:	fnstcw WORD PTR [eax-0x5f]
  401b44:	pop    ebp
  401b45:	adc    al,0x51
  401b47:	leave  
  401b48:	sub    DWORD PTR [eax-0x5ee3523],edx
  401b4e:	jnp    0x401b0b
  401b50:	xlat   BYTE PTR ds:[ebx]
  401b51:	rcl    cl,1
  401b53:	pop    ss
  401b54:	sub    eax,0x3cf9d0aa
  401b59:	(bad)  
  401b5a:	pop    eax
  401b5b:	pop    eax
  401b5c:	(bad)  
  401b5d:	fild   QWORD PTR [esi]
  401b5f:	mov    ch,0xe9
  401b61:	jecxz  0x401b39
  401b63:	push   edx
  401b64:	cmp    BYTE PTR [esi+0x5a],dh
  401b67:	pop    edi
  401b68:	(bad)  
  401b69:	sahf   
  401b6a:	icebp  
  401b6b:	ret    
  401b6c:	leave  
  401b6d:	fsubrp st(1),st
  401b6f:	jo     0x401be8
  401b71:	retf   
  401b72:	adc    eax,0xa1fd150c
  401b77:	lock jae 0x401b8f
  401b7a:	int3   
  401b7b:	jns    0x401b21
  401b7d:	add    al,0xf0
  401b7f:	sbb    eax,0xd65c17c4
  401b84:	(bad)  
  401b85:	dec    BYTE PTR [edi]
  401b87:	neg    ch
  401b89:	and    BYTE PTR [edx],0x4f
  401b8c:	je     0x401b1d
  401b8e:	push   0xffffffda
  401b90:	push   edx
  401b91:	adc    BYTE PTR [esp+eax*1-0x6c],dh
  401b95:	mov    WORD PTR [ecx+0x2535c0b5],?
  401b9b:	aaa    
  401b9c:	int3   
  401b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b9e:	pop    ss
  401b9f:	push   ss
  401ba0:	push   0x6452e889
  401ba5:	retf   
  401ba6:	mov    ebx,0xf55d8092
  401bab:	fwait
  401bac:	imul   edx,DWORD PTR [edx-0x6f638b00],0xfffffffe
  401bb3:	xlat   BYTE PTR ds:[ebx]
  401bb4:	pop    edi
  401bb5:	mov    WORD PTR [edx-0x42],ss
  401bb8:	stos   BYTE PTR es:[edi],al
  401bb9:	jbe    0x401b8f
  401bbb:	scas   al,BYTE PTR es:[edi]
  401bbc:	lds    eax,FWORD PTR [ebp-0x43c4a117]
  401bc2:	sahf   
  401bc3:	dec    ebx
  401bc4:	loopne 0x401b78
  401bc6:	fiadd  DWORD PTR [ebp-0x2]
  401bc9:	mov    ch,0x70
  401bcb:	cld    
  401bcc:	neg    BYTE PTR [edi+0x7e7038d2]
  401bd2:	fwait
  401bd3:	add    al,0x5e
  401bd5:	pop    edx
  401bd6:	in     eax,0xd7
  401bd8:	push   es
  401bd9:	adc    DWORD PTR [ebp+0x1549cfad],0x5da0759e
  401be3:	ror    BYTE PTR [ebp-0x12eaab4f],0x2c
  401bea:	and    al,0x53
  401bec:	icebp  
  401bed:	das    
  401bee:	mov    al,ds:0x7cc7be46
  401bf3:	ficom  WORD PTR [ebp+esi*4+0x3e]
  401bf7:	sub    DWORD PTR [ebx-0x7f],0xffffffaf
  401bfb:	call   0x8f85a9f7
  401c00:	outs   dx,BYTE PTR ds:[esi]
  401c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c02:	mov    al,ds:0x10635c35
  401c07:	dec    edi
  401c08:	mov    WORD PTR [eax+0x6fb3822d],?
  401c0e:	add    cl,BYTE PTR [ebp+0x5650e63b]
  401c14:	sub    al,0xd2
  401c16:	xor    edx,DWORD PTR [ecx+0x59]
  401c19:	mov    eax,0xd79ba10c
  401c1e:	in     al,0x1
  401c20:	xchg   esp,eax
  401c21:	and    edx,DWORD PTR [ebp+0x51]
  401c24:	push   0x42
  401c26:	mov    ebp,0xb845140b
  401c2b:	dec    esp
  401c2c:	xchg   edi,eax
  401c2d:	add    BYTE PTR [edx-0x44446369],dh
  401c33:	int3   
  401c34:	push   ecx
  401c35:	and    DWORD PTR [edi-0xd],ebx
  401c38:	test   BYTE PTR [ecx-0x4b],ch
  401c3b:	dec    eax
  401c3c:	test   dl,al
  401c3e:	cs inc ebx
  401c40:	shl    DWORD PTR [ecx+0x76],1
  401c43:	dec    esp
  401c44:	pop    ss
  401c45:	jae    0x401ca4
  401c47:	ja     0x401ca4
  401c49:	jno    0x401c03
  401c4b:	pop    ecx
  401c4c:	xor    dl,BYTE PTR [edx]
  401c4e:	or     bl,BYTE PTR [esi-0x18ca5d32]
  401c54:	and    al,0xcc
  401c56:	fisub  WORD PTR [ebx]
  401c58:	nop
  401c59:	sbb    ah,BYTE PTR [edi+0x2db5f092]
  401c5f:	mov    bh,0xf7
  401c61:	frstor [ebp+0x25]
  401c64:	scas   al,BYTE PTR es:[edi]
  401c65:	ficom  DWORD PTR [edx]
  401c67:	daa    
  401c68:	push   ebp
  401c69:	pop    eax
  401c6a:	sahf   
  401c6b:	xchg   DWORD PTR [esi],edi
  401c6d:	mov    ch,0xd2
  401c6f:	dec    edx
  401c70:	or     ebp,DWORD PTR [edi+0x72]
  401c73:	or     al,0x60
  401c75:	pop    ds
  401c76:	jl     0x401ceb
  401c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c79:	inc    edi
  401c7a:	jp     0x401c4c
  401c7c:	repz test BYTE PTR ds:0x8274bca1,bl
  401c83:	ss jp  0x401c27
  401c86:	jb     0x401ccd
  401c88:	gs push 0x27
  401c8b:	ret    0x903c
  401c8e:	adc    cl,ah
  401c90:	call   0xcbc2:0xfc4bb5d6
  401c97:	lods   al,BYTE PTR ds:[esi]
  401c98:	pop    ebx
  401c99:	aas    
  401c9a:	push   ds
  401c9b:	in     al,dx
  401c9c:	add    eax,esp
  401c9e:	sbb    DWORD PTR [edi],ebp
  401ca0:	push   ss
  401ca1:	sub    BYTE PTR [edx],ch
  401ca3:	sub    ebx,DWORD PTR [esi]
  401ca5:	xchg   esi,eax
  401ca7:	imul   esi,ecx,0xb1caad52
  401cad:	inc    eax
  401cae:	ror    DWORD PTR [ecx+ebp*1-0x4d1287b7],0xab
  401cb6:	and    DWORD PTR [eax],eax
  401cb8:	cmp    ch,BYTE PTR [ecx-0x7f98b8ef]
  401cbe:	xcrypt-cbc (bad)
  401cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cc0:	push   ss
  401cc1:	test   bh,dh
  401cc3:	mov    ah,0xf7
  401cc5:	mov    BYTE PTR ds:0x2a405f7,ch
  401ccb:	std    
  401ccc:	ret    0x9044
  401ccf:	ror    BYTE PTR [eax+edx*2-0x3],0x7a
  401cd4:	mov    esi,0x84b87f73
  401cd9:	mov    bl,0xe6
  401cdb:	fld    DWORD PTR [ebp+0x1f]
  401cde:	fnsave [eax+0x12c3100e]
  401ce4:	jg     0x401d5d
  401ce6:	push   ds
  401ce7:	push   edx
  401ce8:	out    0xf6,eax
  401cea:	jp     0x401d2f
  401cec:	jne    0x401cb1
  401cee:	out    dx,al
  401cef:	pop    ds
  401cf0:	and    eax,DWORD PTR es:[eax]
  401cf3:	call   0x4f72:0xc67cf79b
  401cfa:	sub    edi,esp
  401cfc:	adc    al,0xad
  401cfe:	inc    ebp
  401cff:	ret    0x9763
  401d02:	sar    DWORD PTR [edx+0x2860cdb4],cl
  401d08:	out    0x27,eax
  401d0a:	sti    
  401d0b:	leave  
  401d0c:	adc    eax,0xdbe0b2f8
  401d11:	mov    al,0xd1
  401d13:	push   ecx
  401d14:	ror    BYTE PTR [edi],1
  401d16:	ins    BYTE PTR es:[edi],dx
  401d17:	in     eax,0xa2
  401d19:	int    0x82
  401d1b:	dec    ebx
  401d1c:	jg     0x401d82
  401d1e:	add    esp,ebx
  401d20:	enter  0xa684,0x3a
  401d24:	idiv   DWORD PTR [edx-0x3bb3511d]
  401d2a:	mov    eax,0xdb3b617c
  401d2f:	pop    esi
  401d30:	outs   dx,BYTE PTR ds:[esi]
  401d31:	mov    al,ds:0x490b047f
  401d36:	test   al,0xba
  401d38:	jg     0x401cc4
  401d3a:	jns    0x401d32
  401d3c:	xor    eax,0x15fca533
  401d41:	inc    ebp
  401d42:	cmp    ebp,esi
  401d44:	sahf   
  401d45:	scas   eax,DWORD PTR es:[edi]
  401d46:	test   eax,0xa2a0b3c2
  401d4b:	inc    esi
  401d4c:	jbe    0x401d12
  401d4e:	ds scas eax,DWORD PTR es:[edi]
  401d50:	jbe    0x401d74
  401d52:	mov    ah,0xb8
  401d54:	lods   eax,DWORD PTR ds:[esi]
  401d55:	ja     0x401d81
  401d57:	xchg   ecx,eax
  401d58:	(bad)  
  401d59:	ds inc esi
  401d5b:	std    
  401d5c:	shl    BYTE PTR [edx],0x98
  401d5f:	dec    edx
  401d60:	aam    0x71
  401d62:	in     al,dx
  401d63:	or     al,0x92
  401d65:	mov    esi,0x8de3376b
  401d6a:	lods   al,BYTE PTR ds:[esi]
  401d6b:	sub    cl,ch
  401d6d:	lods   eax,DWORD PTR ds:[esi]
  401d6e:	pushf  
  401d6f:	in     al,0x7b
  401d71:	fst    st(0)
  401d73:	pop    ebx
  401d74:	push   esi
  401d75:	repnz mov BYTE PTR [ebx+eiz*2+0x75],al
  401d7a:	add    BYTE PTR [esi+0x52],dh
  401d7d:	mov    ch,BYTE PTR [eax]
  401d7f:	call   0x1ec7c68c
  401d84:	add    al,0x6e
  401d86:	mov    eax,ds:0xd3dc46e1
  401d8b:	retf   
  401d8c:	mov    ah,0x27
  401d8e:	sbb    ebp,DWORD PTR [edx-0x34ba1d5a]
  401d94:	mov    bh,0xf9
  401d96:	fs popa 
  401d98:	add    BYTE PTR [ebx-0x5d850855],0xe0
  401d9f:	mov    dh,0x41
  401da1:	push   esp
  401da2:	or     eax,DWORD PTR [edx-0x73]
  401da5:	js     0x401e22
  401da7:	dec    DWORD PTR [ebp+eiz*4-0x39efc574]
  401dae:	cli    
  401daf:	pop    ebx
  401db0:	pop    ds
  401db1:	stos   DWORD PTR es:[edi],eax
  401db2:	inc    ebp
  401db3:	push   edi
  401db4:	jae    0x401d5b
  401db6:	mov    ebp,0x9ac92607
  401dbb:	(bad)  
  401dbc:	mov    ah,0x98
  401dbe:	lds    ebx,FWORD PTR [esi-0xe]
  401dc1:	inc    eax
  401dc2:	dec    esp
  401dc3:	setbe  BYTE PTR [edx+0x1fd5c446]
  401dca:	push   ss
  401dcb:	shl    DWORD PTR [edi],0x11
  401dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dcf:	retf   0xd493
  401dd2:	cmp    esp,DWORD PTR [edi-0x2b4cbb5d]
  401dd8:	pop    eax
  401dd9:	ins    DWORD PTR es:[edi],dx
  401dda:	jecxz  0x401e49
  401ddc:	js     0x401d60
  401dde:	shl    DWORD PTR [ecx-0x6e38c092],1
  401de4:	add    dl,BYTE PTR [esi+edi*1+0x9]
  401de8:	pop    ds
  401de9:	daa    
  401dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401deb:	pop    ecx
  401dec:	and    eax,0xd8a1bae2
  401df1:	repz jno 0x401dbc
  401df4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401df6:	(bad)  
  401df7:	in     al,0x50
  401df9:	adc    DWORD PTR [ebp-0x7c],ebp
  401dfc:	stc    
  401dfd:	rcr    DWORD PTR [ebx-0x35],1
  401e00:	in     eax,dx
  401e01:	lahf   
  401e02:	push   ecx
  401e03:	mov    WORD PTR [ebx],ds
  401e05:	shr    DWORD PTR [ebx],0x2d
  401e08:	xor    DWORD PTR [esi+0x7a],ebp
  401e0b:	push   ds
  401e0c:	outs   dx,BYTE PTR ds:[esi]
  401e0d:	(bad)
  401e10:	(bad)  
  401e11:	repz gs (bad) 
  401e14:	shl    DWORD PTR [edi+0xc],0x4c
  401e18:	xor    al,0x43
  401e1a:	push   es
  401e1b:	sbb    ecx,DWORD PTR [ebp*1+0x7f47ce73]
  401e22:	ret    0x7880
  401e25:	xor    DWORD PTR [ebp-0x4264a66b],0xfffffffa
  401e2c:	sbb    al,0x3b
  401e2e:	aam    0xea
  401e30:	rcr    DWORD PTR [esi-0x109bae59],1
  401e36:	icebp  
  401e37:	pop    esi
  401e38:	sbb    al,bh
  401e3a:	aam    0x96
  401e3c:	add    dl,BYTE PTR [eax+0x61fac224]
  401e42:	iret   
  401e43:	xchg   esi,eax
  401e44:	stos   DWORD PTR es:[edi],eax
  401e45:	je     0x401e8d
  401e47:	push   edi
  401e48:	cli    
  401e49:	ret    
  401e4a:	pop    ds
  401e4b:	xor    al,BYTE PTR [edx+0x23823509]
  401e51:	cdq    
  401e52:	inc    edi
  401e53:	imul   DWORD PTR [edi-0x6e8ec640]
  401e59:	inc    edx
  401e5a:	sub    esi,DWORD PTR [eax-0x2bfa18fb]
  401e60:	push   esi
  401e61:	adc    DWORD PTR [edi+0x6d6a8737],esi
  401e67:	mov    ds:0x4a593742,eax
  401e6c:	gs into 
  401e6e:	dec    ebp
  401e6f:	dec    edx
  401e70:	or     ah,BYTE PTR [ecx]
  401e72:	iret   
  401e73:	js     0x401ee9
  401e75:	iret   
  401e76:	out    0xa,eax
  401e78:	nop
  401e79:	cld    
  401e7a:	jmp    0xdc6:0x9666afe8
  401e81:	ret    0xe0b7
  401e84:	pop    edi
  401e85:	jp     0x401e2b
  401e87:	push   edi
  401e88:	jnp    0x401e6a
  401e8a:	addr16 sahf 
  401e8c:	lahf   
  401e8d:	cwde   
  401e8e:	push   ds
  401e8f:	add    eax,0x94a044be
  401e94:	outs   dx,DWORD PTR ds:[esi]
  401e95:	repz xor dl,BYTE PTR [ebx+0x6a]
  401e99:	ins    BYTE PTR es:[edi],dx
  401e9a:	inc    edi
  401e9b:	push   edi
  401e9c:	rol    DWORD PTR [edi-0x5252ec2d],0x52
  401ea3:	jo     0x401ece
  401ea5:	mov    eax,ds:0xf0344fc0
  401eaa:	sub    DWORD PTR [eax-0x25],ebx
  401ead:	imul   edi,ecx,0x23
  401eb0:	sub    eax,0x8741a337
  401eb5:	and    BYTE PTR [eax],dh
  401eb7:	xor    al,0xc4
  401eb9:	mov    eax,ds:0x3ec57a86
  401ebe:	pop    ss
  401ebf:	or     BYTE PTR [eax-0x6c],dh
  401ec2:	inc    edx
  401ec3:	repz cmc 
  401ec5:	test   al,0xa7
  401ec7:	aas    
  401ec8:	ret    
  401ec9:	pop    eax
  401eca:	fidiv  DWORD PTR [edx]
  401ecc:	rcr    ebx,0xe1
  401ecf:	xchg   DWORD PTR ds:0xe6f396c6,ebx
  401ed5:	xor    eax,0x531c9494
  401eda:	sar    esi,0xc5
  401edd:	(bad)  [ecx+0x39]
  401ee0:	push   cs
  401ee1:	add    bh,BYTE PTR [esi+0xcd4f172]
  401ee7:	or     edx,DWORD PTR [ecx]
  401ee9:	addr16 in eax,0x0
  401eec:	push   esi
  401eed:	adc    ecx,DWORD PTR [eax+0x115679f1]
  401ef3:	mov    ?,ebp
  401ef5:	push   0x8f4964d6
  401efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401efc:	daa    
  401efd:	je     0x401f17
  401eff:	call   0xf2aa32a3
  401f04:	sbb    eax,0x75d8b760
  401f09:	inc    edx
  401f0a:	pop    ecx
  401f0b:	outs   dx,BYTE PTR ds:[esi]
  401f0c:	sbb    eax,0x23ea7ad4
  401f11:	call   esi
  401f13:	loope  0x401efe
  401f15:	jmp    0x90488ec0
  401f1a:	retf   0xb09
  401f1d:	mov    cl,0xd6
  401f1f:	xchg   edx,eax
  401f20:	test   eax,0xef031303
  401f25:	and    DWORD PTR [ebp-0x5c18f060],eax
  401f2b:	lods   al,BYTE PTR ds:[esi]
  401f2c:	or     dl,BYTE PTR [edx+0x19]
  401f2f:	xor    ecx,ebp
  401f31:	mov    ds:0x113f73d4,eax
  401f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f37:	test   cl,al
  401f39:	sbb    BYTE PTR [ecx],ch
  401f3b:	cmp    DWORD PTR [edx+0x44ea2e25],eax
  401f41:	movnti DWORD PTR [edi+0x52],ebx
  401f45:	mov    bl,0xb0
  401f47:	outs   dx,DWORD PTR ds:[esi]
  401f48:	sbb    eax,0x85636ca7
  401f4d:	repz popa 
  401f4f:	add    esp,DWORD PTR [ecx-0x79]
  401f52:	push   ecx
  401f53:	ret    
  401f54:	mov    al,ds:0x1e66ac1f
  401f59:	and    DWORD PTR [eax],0xf57dc537
  401f5f:	into   
  401f60:	pop    edx
  401f61:	dec    esp
  401f62:	outs   dx,BYTE PTR ds:[esi]
  401f63:	xchg   ebx,eax
  401f64:	test   eax,0xfd4d321c
  401f69:	cmp    DWORD PTR [edx],esp
  401f6b:	mov    eax,0xc85b4f7f
  401f70:	or     dh,dl
  401f72:	call   0x9d1b626b
  401f77:	fdecstp 
  401f79:	mov    fs,WORD PTR [edi-0x9]
  401f7c:	icebp  
  401f7d:	shr    BYTE PTR [eax+0xad76bcd],cl
  401f83:	js     0x401f9d
  401f85:	dec    edx
  401f86:	sbb    eax,0x1cf7b6fb
  401f8b:	daa    
  401f8c:	add    edi,DWORD PTR [edx+0x6b]
  401f8f:	dec    ebp
  401f90:	jecxz  0x401f38
  401f92:	mov    ds:0x82030987,al
  401f97:	loop   0x40200d
  401f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f9a:	div    BYTE PTR [ebx+0x34]
  401f9d:	add    ch,bh
  401f9f:	aam    0x3e
  401fa1:	push   0xfffffff3
  401fa3:	mov    dl,0x86
  401fa5:	scas   al,BYTE PTR es:[edi]
  401fa6:	lods   eax,DWORD PTR ds:[esi]
  401fa8:	jne    0x401f69
  401faa:	pop    edi
  401fab:	pop    edi
  401fac:	loope  0x402029
  401fae:	adc    eax,0x7808a8d8
  401fb3:	test   cl,al
  401fb5:	dec    ebx
  401fb6:	mov    eax,0xa734709b
  401fbb:	cld    
  401fbc:	(bad)  
  401fbd:	inc    esp
  401fbe:	add    DWORD PTR [ebx-0x7d],edx
  401fc1:	push   edi
  401fc2:	or     DWORD PTR [ecx-0x57b1d316],esp
  401fc8:	jp     0x401f72
  401fca:	lods   eax,DWORD PTR ds:[esi]
  401fcb:	iret   
  401fcc:	in     al,0x1b
  401fce:	sbb    dl,dl
  401fd0:	mov    al,ds:0x76db0500
  401fd5:	out    0x10,al
  401fd7:	push   ecx
  401fd8:	aad    0x41
  401fda:	repnz inc edx
  401fdc:	and    al,0x94
  401fde:	outs   dx,DWORD PTR ds:[esi]
  401fdf:	xchg   BYTE PTR [esi+0x66f9fc6a],ch
  401fe5:	sbb    DWORD PTR ds:0x23d9aca8,ebx
  401feb:	xor    dl,BYTE PTR [edi+0x22]
  401fee:	xor    esi,edx
  401ff0:	int    0x11
  401ff2:	mov    ecx,0xf7ade872
  401ff7:	or     al,0xab
  401ff9:	jmp    0x8aa8daf7
  401ffe:	cmp    al,0xb4
  402000:	sbb    edx,edx
  402002:	repnz pushf 
  402004:	mov    ch,0xbc
  402006:	hlt    
  402007:	stc    
  402008:	cwde   
  402009:	add    ecx,ebx
  40200b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40200c:	std    
  40200d:	jno    0x401fb0
  40200f:	addr16 popa 
  402011:	and    eax,0x50bd727d
  402016:	bound  edx,QWORD PTR [ecx+0x4f]
  402019:	jp     0x402059
  40201b:	in     al,0xbc
  40201d:	shl    BYTE PTR [edi-0x1a2adf5c],1
  402023:	add    eax,0x43f67174
  402028:	mov    bl,0x77
  40202a:	loop   0x401fca
  40202c:	rcr    DWORD PTR [edx-0x10],cl
  40202f:	xchg   edi,eax
  402030:	daa    
  402031:	push   ds
  402032:	xchg   edi,eax
  402033:	fcomp  QWORD PTR [esi-0x48]
  402036:	xor    al,0x86
  402038:	jb     0x402052
  40203a:	inc    edi
  40203b:	lods   eax,DWORD PTR ds:[esi]
  40203c:	in     al,0x1b
  40203e:	test   esp,esi
  402040:	bswap  edx
  402042:	pop    ss
  402043:	mov    dh,0x3e
  402045:	or     al,0xaf
  402047:	add    al,0x16
  402049:	cli    
  40204a:	js     0x5617fc40
  402050:	inc    ebx
  402051:	pop    ebx
  402052:	rcl    DWORD PTR [edx+eiz*8-0x3],0x16
  402057:	test   bl,dl
  402059:	loope  0x402088
  40205b:	shl    DWORD PTR [ebx-0x4efcbafa],1
  402061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402062:	push   eax
  402063:	xchg   edx,eax
  402064:	dec    edx
  402065:	dec    esi
  402066:	push   ss
  402067:	adc    BYTE PTR [esi],bh
  402069:	xor    ebx,DWORD PTR [ebp-0x46]
  40206c:	pushf  
  40206d:	sub    al,0x19
  40206f:	adc    esi,DWORD PTR [esi]
  402071:	pop    ecx
  402072:	fs retfw 
  402075:	ds cwde 
  402077:	jg     0x402062
  402079:	add    eax,0xd30870c1
  40207e:	ficom  DWORD PTR [ecx+0x24f2122e]
  402084:	int3   
  402085:	cmp    eax,DWORD PTR [ebp+esi*1-0x7d]
  402089:	cdq    
  40208a:	adc    BYTE PTR [edi+0x44],bh
  40208d:	popa   
  40208e:	dec    eax
  40208f:	sahf   
  402090:	sub    ebx,DWORD PTR [edx]
  402092:	inc    edi
  402093:	mov    edi,eax
  402095:	cmovl  ebp,DWORD PTR [ecx-0x5f]
  402099:	test   BYTE PTR [esi],dl
  40209b:	pop    edi
  40209c:	jo     0x4020a8
  40209e:	inc    ebp
  40209f:	xchg   bh,bh
  4020a1:	jne    0x40209d
  4020a3:	stos   BYTE PTR es:[edi],al
  4020a4:	xchg   ecx,eax
  4020a5:	dec    eax
  4020a6:	inc    edx
  4020a7:	jmp    0x4cd61bd
  4020ac:	pop    eax
  4020ad:	sbb    eax,0xb0ddf51f
  4020b2:	not    edx
  4020b4:	xchg   bl,ah
  4020b6:	xchg   edi,eax
  4020b7:	shr    DWORD PTR [eax],0xee
  4020ba:	(bad)  
  4020bb:	test   eax,0x260af41d
  4020c0:	xor    eax,0x3dbcc19c
  4020c5:	mov    esi,DWORD PTR [esi+0x13]
  4020c8:	scas   al,BYTE PTR es:[edi]
  4020c9:	pop    ebx
  4020ca:	fs retf 0x3ac9
  4020ce:	add    al,0x1f
  4020d0:	mov    ecx,0x66520c8d
  4020d5:	gs cmp eax,0x1ffeccd1
  4020db:	out    dx,al
  4020dc:	out    dx,al
  4020dd:	push   ebx
  4020de:	add    eax,0xdf49fc9d
  4020e3:	mov    dh,bh
  4020e5:	xlat   BYTE PTR ds:[ebx]
  4020e6:	hlt    
  4020e7:	or     BYTE PTR [edi],ah
  4020e9:	xlat   BYTE PTR ds:[ebx]
  4020ea:	jecxz  0x4020de
  4020ec:	dec    edx
  4020ed:	mov    esp,0x322ed56c
  4020f2:	dec    ecx
  4020f3:	dec    eax
  4020f4:	sbb    eax,0x78341aa8
  4020f9:	add    bh,BYTE PTR [ebx]
  4020fb:	xchg   ecx,eax
  4020fc:	pop    edi
  4020fd:	sub    bh,BYTE PTR [edi-0x114582f5]
  402103:	in     eax,0xd6
  402105:	int3   
  402106:	add    dl,dl
  402108:	push   eax
  402109:	fcomp  QWORD PTR [edx+0x5dfda227]
  40210f:	pop    esp
  402110:	mov    bh,0x78
  402112:	outs   dx,BYTE PTR ds:[esi]
  402113:	scas   al,BYTE PTR es:[edi]
  402114:	mov    edx,0x3959ecf3
  402119:	sar    BYTE PTR [eax],0x64
  40211c:	add    BYTE PTR [ebx+0x58],bl
  40211f:	cmp    ah,bh
  402121:	mov    ah,0x5f
  402123:	push   eax
  402124:	icebp  
  402125:	mov    edi,DWORD PTR [ecx]
  402127:	sar    DWORD PTR [edi],cl
  402129:	div    DWORD PTR [edx]
  40212b:	cmp    eax,0x658e0343
  402130:	std    
  402131:	mov    edi,0x5e0534d3
  402136:	push   0x56
  402138:	mov    cl,0xfb
  40213a:	out    dx,eax
  40213b:	ins    DWORD PTR es:[edi],dx
  40213c:	bound  ebp,QWORD PTR [edx]
  40213e:	inc    eax
  40213f:	inc    esp
  402140:	sbb    eax,0x38672d6c
  402145:	imul   ebp,ebp,0x25
  402148:	daa    
  402149:	arpl   di,cx
  40214b:	adc    BYTE PTR [edi-0x3e],bl
  40214e:	mov    BYTE PTR [edx-0x5f],bh
  402151:	pushf  
  402152:	retf   
  402153:	stos   BYTE PTR es:[edi],al
  402154:	(bad)  
  402155:	cmp    ch,cl
  402157:	jno    0x40212c
  402159:	sbb    ecx,DWORD PTR [ebx+0x318488cc]
  40215f:	pop    si
  402161:	mov    ecx,0x7db3f119
  402166:	push   ss
  402167:	jmp    0x6b090101
  40216c:	aad    0x72
  40216e:	nop
  40216f:	pop    ebx
  402170:	pusha  
  402171:	adc    eax,0x42fdccd4
  402176:	adc    eax,0x2ac8a76
  40217b:	mov    esp,0x274dba77
  402180:	pusha  
  402181:	outs   dx,BYTE PTR ds:[esi]
  402182:	push   ds
  402183:	sub    al,0x25
  402185:	pop    ecx
  402186:	ss and esi,DWORD PTR ss:[eax-0x72b2f2bf]
  40218e:	jl     0x4021a5
  402190:	sbb    DWORD PTR ds:0xc1343739,eax
  402196:	sbb    BYTE PTR [eax+ebx*8+0x9],ah
  40219a:	outs   dx,BYTE PTR ds:[esi]
  40219b:	sub    eax,0x4faca9b4
  4021a0:	jbe    0x402136
  4021a2:	sub    al,0xb9
  4021a4:	xor    eax,DWORD PTR [ebp+0x18]
  4021a7:	xor    ebx,DWORD PTR [edi]
  4021a9:	ja     0x4021ba
  4021ab:	(bad)
  4021b0:	dec    esi
  4021b1:	std    
  4021b2:	out    0x73,al
  4021b4:	outs   dx,DWORD PTR ds:[esi]
  4021b5:	imul   ebp,esp,0xffffffae
  4021b8:	or     al,0x86
  4021ba:	sbb    eax,0x9f205a79
  4021bf:	and    BYTE PTR [ecx+0x1a112548],ch
  4021c5:	push   ds
  4021c6:	xchg   ecx,eax
  4021c7:	dec    edx
  4021c8:	dec    edx
  4021c9:	imul   DWORD PTR [ebx-0x74]
  4021cc:	fst    QWORD PTR ds:0x1290b56e
  4021d2:	and    DWORD PTR [edi],ebp
  4021d4:	jge    0x4021df
  4021d6:	enter  0xd4,0x22
  4021da:	out    dx,eax
  4021db:	clc    
  4021dc:	sub    al,BYTE PTR [edi-0x109d8379]
  4021e2:	mov    ah,0x28
  4021e4:	cmp    dl,ch
  4021e6:	mov    cl,0x26
  4021e8:	ret    
  4021e9:	jmp    0x5a638faa
  4021ee:	into   
  4021ef:	scas   al,BYTE PTR es:[edi]
  4021f0:	pop    ds
  4021f1:	aas    
  4021f2:	sub    DWORD PTR [edx-0x4b],edx
  4021f5:	call   0xfc80:0xf8f85ea2
  4021fc:	mov    esi,0x4734d820
  402201:	xchg   ebp,eax
  402202:	pop    es
  402203:	mov    esp,DWORD PTR [edx-0x7027f67]
  402209:	jae    0x40223d
  40220b:	or     eax,0x8b218110
  402210:	fwait
  402211:	mov    esp,0x6f216a58
  402216:	fwait
  402217:	xlat   BYTE PTR ds:[ebx]
  402218:	ins    BYTE PTR es:[edi],dx
  402219:	cs dec esi
  40221b:	xor    BYTE PTR [eax],0xc0
  40221e:	dec    edx
  40221f:	pop    edi
  402220:	add    eax,0xe735badf
  402225:	fnsave [edi-0x66]
  402228:	push   cs
  402229:	(bad)  
  40222a:	(bad)  
  40222c:	int    0x0
  40222e:	push   cs
  40222f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402230:	popf   
  402231:	ins    BYTE PTR es:[edi],dx
  402232:	aam    0xaf
  402234:	call   FWORD PTR [esp+edi*2-0x26]
  402238:	mov    esp,0xb6e8da81
  40223d:	pop    ecx
  40223e:	imul   esi,DWORD PTR [ecx+0x14d7c7f4],0x2b0acdcc
  402248:	or     BYTE PTR [ebx],0xca
  40224b:	dec    eax
  40224c:	fidivr DWORD PTR [edi]
  40224e:	mov    ebp,DWORD PTR [eax-0x37db3f12]
  402254:	sti    
  402255:	dec    ebx
  402256:	imul   esp,DWORD PTR [ebp-0x19],0x3c
  40225a:	sub    ax,0xad3b
  40225e:	jmp    0x4021fb
  402260:	jg     0x402291
  402262:	adc    bl,BYTE PTR [eax+0x6cae98d8]
  402268:	mov    BYTE PTR [ebx*2-0x4cdc5bbe],dh
  40226f:	clc    
  402270:	aam    0xc3
  402272:	aad    0xfa
  402274:	rcl    DWORD PTR [edi+0x19632f7],0x64
  40227b:	mov    DWORD PTR [ebp-0xd],0x107d5831
  402282:	je     0x402207
  402284:	lods   eax,DWORD PTR ds:[esi]
  402285:	(bad)  
  402286:	stos   DWORD PTR es:[edi],eax
  402287:	arpl   WORD PTR [ebx+0x22],ax
  40228a:	xchg   BYTE PTR [ecx+0x70],al
  40228d:	pop    esi
  40228e:	sub    ah,dl
  402290:	loop   0x402247
  402292:	push   ss
  402293:	rcl    DWORD PTR [esi+ebp*8-0x10],0xea
  402298:	push   0xffffffd9
  40229a:	sub    BYTE PTR [esi+0x4195fa18],ch
  4022a0:	push   cs
  4022a1:	mov    al,dl
  4022a3:	(bad)
  4022a7:	mov    ebp,0x4a8d337
  4022ac:	sub    eax,0xd1a6158e
  4022b1:	jg     0x402325
  4022b3:	fcomp  DWORD PTR [eax-0x6c]
  4022b6:	test   eax,0xf66753c0
  4022bb:	out    0x9,al
  4022bd:	add    dl,BYTE PTR [esi+0x7ed89b86]
  4022c3:	inc    ebp
  4022c4:	shl    BYTE PTR [ecx-0x403e70bb],1
  4022ca:	cdq    
  4022cb:	loop   0x4022c8
  4022cd:	lods   eax,DWORD PTR ds:[esi]
  4022ce:	jge    0x4022da
  4022d0:	(bad)  
  4022d1:	mov    ds:0x94d3e522,al
  4022d6:	push   esp
  4022d7:	cmp    al,0x9e
  4022d9:	mov    edx,0x3711c471
  4022de:	ret    
  4022df:	add    ebx,esp
  4022e1:	mov    ?,WORD PTR [edi]
  4022e3:	ss retfw 
  4022e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022e7:	or     al,0xf2
  4022e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022ea:	clc    
  4022eb:	mov    al,0x73
  4022ed:	pop    ecx
  4022ee:	rcr    BYTE PTR ds:0x3a2b43ca,1
  4022f4:	xchg   BYTE PTR [ebx],bh
  4022f6:	add    edx,esi
  4022f8:	cdq    
  4022f9:	xchg   ecx,eax
  4022fa:	mov    eax,DWORD PTR [eax-0x23]
  4022fd:	sti    
  4022fe:	and    BYTE PTR [ebx+0x6b5cb4bd],bh
  402304:	mov    ecx,0x3cb2ba71
  402309:	mov    gs:0x561c77ef,al
  40230f:	pushf  
  402310:	xchg   ebp,eax
  402311:	mov    ch,0x74
  402313:	dec    ecx
  402314:	xor    BYTE PTR [ebp+0x55],dl
  402317:	jno    0x4022b7
  402319:	(bad)  
  40231a:	test   al,0xb1
  40231c:	cmp    esp,DWORD PTR [eax]
  40231e:	ficom  WORD PTR [ecx-0x5e17d65]
  402324:	inc    ecx
  402325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402326:	xchg   edi,eax
  402327:	neg    BYTE PTR [edx+0x5]
  40232a:	popf   
  40232b:	mov    eax,ds:0xcdd981fc
  402330:	sbb    dh,BYTE PTR [eax+0x52]
  402333:	leave  
  402334:	jp     0x402388
  402336:	mov    DWORD PTR [ebp-0x1067b430],eax
  40233c:	inc    edx
  40233d:	out    0xcc,al
  40233f:	mov    eax,0xe14b9c9b
  402344:	outs   dx,DWORD PTR ds:[esi]
  402345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402346:	add    eax,0x73907666
  40234b:	leave  
  40234c:	jne    0x40238b
  40234e:	dec    ecx
  40234f:	in     al,0x1
  402351:	cli    
  402352:	cmp    BYTE PTR [eax+eiz*2+0x1178f5f0],ch
  402359:	pop    eax
  40235a:	dec    esi
  40235b:	aam    0xb2
  40235d:	mov    ecx,0xd729c76
  402362:	enter  0x23c2,0x56
  402366:	sbb    dl,bl
  402368:	js     0x4022f0
  40236a:	ret    
  40236b:	xchg   edi,eax
  40236c:	(bad)  
  40236d:	cmp    eax,0x3c5f2773
  402372:	pushf  
  402373:	idiv   BYTE PTR [edx-0x35]
  402376:	mov    al,ds:0x56e8d426
  40237b:	add    al,0xac
  40237d:	jecxz  0x4023a3
  40237f:	or     eax,0xd724401f
  402384:	push   ecx
  402385:	sti    
  402386:	imul   edx,DWORD PTR [esi+0x681bbb8b],0x2c216fa0
  402390:	pushf  
  402391:	fdivr  DWORD PTR [edx-0x31]
  402394:	xchg   edi,eax
  402395:	xor    cl,BYTE PTR [ebx]
  402397:	test   DWORD PTR [ecx+0x3d],ebp
  40239a:	das    
  40239b:	gs (bad) 
  40239d:	icebp  
  40239e:	push   ebx
  40239f:	inc    ecx
  4023a0:	jae    0x402405
  4023a2:	sub    dl,dl
  4023a4:	push   esi
  4023a5:	jbe    0x4023e3
  4023a7:	sbb    BYTE PTR [si],0xf
  4023ab:	bound  esi,QWORD PTR [eax]
  4023ad:	test   DWORD PTR [ecx],ebx
  4023af:	jmp    0x402430
  4023b1:	fwait
  4023b2:	ds jne 0x40239b
  4023b5:	dec    esp
  4023b6:	sub    ebp,DWORD PTR [ebx-0x14]
  4023b9:	scas   eax,DWORD PTR es:[edi]
  4023ba:	jo     0x4023e4
  4023bc:	mov    bl,0x6b
  4023be:	fnstsw WORD PTR [eax-0x2c7d1876]
  4023c4:	popa   
  4023c5:	retf   
  4023c6:	in     al,dx
  4023c7:	sar    BYTE PTR [edi],1
  4023c9:	mov    edi,DWORD PTR [ecx-0x1a]
  4023cc:	sahf   
  4023cd:	dec    eax
  4023ce:	dec    esi
  4023cf:	pop    esi
  4023d0:	jnp    0x402363
  4023d2:	xor    DWORD PTR [esi-0x67],ebx
  4023d5:	xor    eax,0xadf5f1c0
  4023da:	jbe    0x4023c5
  4023dc:	(bad)  
  4023dd:	ror    DWORD PTR [ebp+0x7653bc35],1
  4023e3:	push   eax
  4023e4:	lods   al,BYTE PTR ds:[esi]
  4023e5:	out    0x7b,eax
  4023e7:	ins    BYTE PTR es:[edi],dx
  4023e8:	add    BYTE PTR [eax+eax*1],dh
  4023eb:	cmp    eax,0x6f8abf50
  4023f0:	pop    es
  4023f1:	pop    ecx
  4023f2:	cmp    al,0x74
  4023f4:	icebp  
  4023f5:	xchg   edx,eax
  4023f6:	push   edi
  4023f7:	enter  0x63e2,0x46
  4023fb:	mov    ds,esi
  4023fd:	in     eax,0xdc
  4023ff:	or     eax,0xdf5d4e80
  402404:	enter  0x15ff,0x44
  402408:	jg     0x4023be
  40240a:	xchg   ebp,eax
  40240b:	ins    DWORD PTR es:[edi],dx
  40240c:	jae    0x40248b
  40240e:	stc    
  40240f:	popf   
  402410:	mov    al,0x75
  402412:	clc    
  402413:	enter  0xf013,0x45
  402417:	and    edi,DWORD PTR [ecx+0x63]
  40241a:	inc    eax
  40241b:	imul   eax,esp,0x7de3adba
  402421:	pusha  
  402422:	fld    DWORD PTR [edi]
  402424:	push   eax
  402425:	or     DWORD PTR [ebp+0x2bef50be],0x31938e1b
  40242f:	adc    BYTE PTR [ebx+ebp*4],0xc
  402433:	mov    ecx,cs
  402435:	cmp    DWORD PTR [ecx],esi
  402437:	retf   0x65cc
  40243a:	stos   DWORD PTR es:[edi],eax
  40243b:	ror    DWORD PTR [edi-0x45],cl
  40243e:	fld    TBYTE PTR [ebx-0x477d8788]
  402444:	jge    0x40248b
  402446:	mov    dh,0xde
  402448:	sub    BYTE PTR [edi],ah
  40244a:	inc    ecx
  40244b:	jmp    0xc0baf9bf
  402450:	(bad)  
  402451:	leave  
  402452:	loop   0x4023f2
  402454:	dec    edi
  402455:	mov    eax,0xb4ee13f1
  40245a:	push   edx
  40245b:	sbb    eax,0x6d1144b2
  402460:	aam    0x25
  402462:	mov    cl,0x86
  402464:	push   ss
  402465:	mov    ecx,0xb23f1827
  40246a:	ficomp WORD PTR [ecx+0x1fda1cef]
  402470:	aas    
  402471:	jnp    0x402493
  402473:	jae    0x40247c
  402475:	in     al,dx
  402476:	inc    esp
  402477:	and    eax,ecx
  402479:	scas   eax,DWORD PTR es:[edi]
  40247a:	adc    BYTE PTR [edx-0x2d],dh
  40247d:	pop    ebx
  40247e:	lods   eax,DWORD PTR ds:[esi]
  40247f:	call   0xe0:0x768c7a5c
  402486:	sbb    eax,edi
  402488:	out    dx,al
  402489:	jge    0x402428
  40248b:	out    dx,al
  40248c:	test   eax,0x31e86aa0
  402491:	pop    edi
  402492:	aad    0x75
  402494:	add    ebp,DWORD PTR [ecx]
  402496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402497:	pusha  
  402498:	pusha  
  402499:	mov    al,0x0
  40249b:	fistp  DWORD PTR ds:0x8fccfdc1
  4024a1:	(bad)  
  4024a2:	(bad)  
  4024a3:	outs   dx,DWORD PTR ds:[esi]
  4024a4:	lea    edi,[ecx+0x20]
  4024a7:	jne    0x40248c
  4024a9:	sar    BYTE PTR [esi],cl
  4024ab:	cwde   
  4024ac:	call   0xf65c18ea
  4024b1:	jp     0x402451
  4024b3:	pop    es
  4024b4:	das    
  4024b5:	and    eax,0x8e237e3e
  4024ba:	mov    bh,0xc1
  4024bc:	push   cs
  4024bd:	nop
  4024be:	popa   
  4024bf:	ins    BYTE PTR es:[edi],dx
  4024c0:	ins    DWORD PTR es:[edi],dx
  4024c1:	inc    edx
  4024c2:	ss pop ds
  4024c4:	jp     0x4024e9
  4024c6:	inc    esi
  4024c7:	jnp    0x402530
  4024c9:	les    esi,FWORD PTR [esi+0xdd76c79]
  4024cf:	scas   al,BYTE PTR es:[edi]
  4024d0:	ins    DWORD PTR es:[edi],dx
  4024d1:	imul   edx,DWORD PTR [eax],0xffffffd8
  4024d4:	fnsave [ecx-0x5c493ca0]
  4024da:	sub    esi,DWORD PTR [edi+0x69]
  4024dd:	(bad)  
  4024de:	push   edi
  4024df:	adc    al,0x37
  4024e1:	mov    bh,0x34
  4024e3:	or     al,0x61
  4024e5:	pop    eax
  4024e6:	and    ebp,ebx
  4024e8:	fld    DWORD PTR [ebx-0xa9e1905]
  4024ee:	xchg   esi,eax
  4024ef:	clc    
  4024f0:	leave  
  4024f1:	call   0x9c72d291
  4024f6:	clc    
  4024f7:	pop    esp
  4024f8:	mov    ch,0x35
  4024fa:	mov    ds:0x7a6c9073,eax
  4024ff:	leave  
  402500:	mov    edx,0x94e690ce
  402505:	add    ebx,ecx
  402507:	push   es
  402508:	push   edi
  402509:	xchg   esp,eax
  40250a:	push   ss
  40250b:	or     eax,0x734fe9a4
  402510:	cwde   
  402511:	int3   
  402512:	mov    eax,ds:0xa11c66cc
  402517:	repnz sub al,cl
  40251a:	and    eax,0xe8467b4f
  40251f:	leave  
  402520:	fld    TBYTE PTR [edi]
  402522:	pusha  
  402523:	xor    al,0xba
  402525:	js     0x40251e
  402527:	data16 cmc 
  402529:	cmp    ah,al
  40252b:	xchg   ebx,eax
  40252c:	mov    ebx,0x1e078eb7
  402531:	aaa    
  402532:	pop    ecx
  402533:	(bad)  
  402534:	clc    
  402535:	pop    edx
  402536:	add    eax,0x95a2b53b
  40253b:	cs or  al,0x47
  40253e:	jmp    FWORD PTR [eax]
  402540:	lds    ebx,FWORD PTR [ebx+0x1a]
  402543:	repz cmp BYTE PTR [ecx-0x7631e6bd],cl
  40254a:	sub    al,0x60
  40254c:	push   edx
  40254d:	pop    ecx
  40254e:	pop    ebx
  40254f:	ins    DWORD PTR es:[edi],dx
  402550:	push   ecx
  402551:	ret    
  402552:	or     BYTE PTR [ebx-0x7a073e8e],dh
  402558:	xchg   BYTE PTR [ebx+0x22],cl
  40255b:	xor    esi,0x12
  40255e:	outs   dx,BYTE PTR ds:[esi]
  40255f:	inc    edx
  402560:	in     eax,0x43
  402562:	pop    eax
  402563:	sar    DWORD PTR [esi+edi*1-0x283f1c95],cl
  40256a:	dec    ebx
  40256b:	pop    edx
  40256c:	fdivr  QWORD PTR [edi+0x783d5b54]
  402572:	gs mov al,0xa6
  402575:	sub    DWORD PTR [ebp+0x78],esp
  402578:	jns    0x4025de
  40257a:	sub    BYTE PTR [eax],dl
  40257c:	(bad)  
  40257d:	jae    0x4025dd
  40257f:	jge    0x4025ee
  402581:	adc    eax,DWORD PTR [ebx]
  402583:	bound  esi,QWORD PTR [ecx+0x60]
  402586:	push   cs
  402587:	sub    edx,DWORD PTR [ebp-0x39028d5]
  40258d:	out    dx,al
  40258e:	xor    esp,DWORD PTR [ecx+0x5f]
  402591:	das    
  402592:	push   cs
  402593:	and    ecx,DWORD PTR [esi]
  402595:	sbb    eax,0xc7adf441
  40259a:	xor    DWORD PTR [esp+ecx*1+0x1c],ecx
  40259e:	sbb    DWORD PTR [edi-0x6f3eb506],edx
  4025a4:	pop    es
  4025a5:	int    0x0
  4025a7:	call   0xc0406ad6
  4025ac:	shl    DWORD PTR [esi-0x54],1
  4025af:	push   ss
  4025b0:	outs   dx,DWORD PTR ds:[esi]
  4025b1:	adc    bh,bl
  4025b3:	daa    
  4025b4:	dec    ecx
  4025b5:	mov    eax,0x6f6583f3
  4025ba:	adc    esi,ebp
  4025bc:	inc    ebp
  4025bd:	cdq    
  4025be:	call   0xd4677bde
  4025c3:	outs   dx,DWORD PTR ds:[esi]
  4025c4:	pop    edi
  4025c5:	popa   
  4025c6:	jmp    0x148071a9
  4025cb:	stos   BYTE PTR es:[edi],al
  4025cc:	pop    es
  4025cd:	add    ebp,DWORD PTR [edx-0x56]
  4025d0:	cmp    BYTE PTR [ecx],ah
  4025d2:	(bad)  
  4025d3:	fist   WORD PTR [eax+ecx*2+0x6d06812f]
  4025da:	loop   0x4025e0
  4025dc:	pop    ebx
  4025dd:	xor    DWORD PTR ss:[esi+0x65],ebx
  4025e1:	adc    ah,BYTE PTR [edx+0x204acad5]
  4025e7:	icebp  
  4025e8:	jmp    0x402650
  4025ea:	pop    ss
  4025eb:	imul   esp,DWORD PTR [esi+0x579a6d7f],0x70556e07
  4025f5:	(bad)  
  4025f6:	shl    DWORD PTR [ebx],cl
  4025f8:	inc    ecx
  4025f9:	xor    BYTE PTR [ecx+0x3e9129d4],ch
  4025ff:	fist   DWORD PTR [edi-0x1bc20b]
  402605:	sbb    eax,0xccefd2b1
  40260a:	jne    0x4025c3
  40260c:	stos   BYTE PTR es:[edi],al
  40260d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40260e:	retf   
  40260f:	rol    DWORD PTR [eax-0x74226023],cl
  402615:	push   cs
  402616:	push   ebp
  402617:	dec    ecx
  402618:	(bad)  
  402619:	into   
  40261a:	dec    edx
  40261b:	inc    ebp
  40261c:	mov    ch,0x3
  40261e:	push   ds
  40261f:	jmp    0xce94d6fe
  402624:	ins    DWORD PTR es:[edi],dx
  402625:	fldenv [edi+0x15c1dbf8]
  40262b:	test   DWORD PTR [edx-0x17472784],ebp
  402631:	fucompp 
  402633:	cdq    
  402634:	mov    esi,0xdf2a984a
  402639:	sub    bl,BYTE PTR [eax+0x34]
  40263c:	ins    BYTE PTR es:[edi],dx
  40263d:	dec    esi
  40263e:	ja     0x4026a4
  402640:	sbb    ebp,edx
  402642:	pop    eax
  402643:	clc    
  402644:	sub    al,bl
  402646:	leave  
  402647:	mov    ebp,0x2a4e3087
  40264c:	xor    DWORD PTR [ebx+0x63],edx
  40264f:	(bad)  
  402650:	cmc    
  402651:	fiadd  DWORD PTR [ebx+0x2e8efcd5]
  402657:	enter  0x59ce,0xf2
  40265b:	nop
  40265c:	and    DWORD PTR [eax],ebx
  40265e:	sbb    cl,BYTE PTR [ecx+0x10]
  402661:	lods   al,BYTE PTR ds:[esi]
  402662:	pop    ss
  402663:	sub    eax,0x56d3ff4e
  402668:	cmp    dl,BYTE PTR [esi-0x3c]
  40266b:	test   al,0xd3
  40266d:	std    
  40266e:	push   esi
  40266f:	pushf  
  402670:	mov    dh,0xb0
  402672:	adc    cl,cl
  402674:	xor    esi,edi
  402676:	ficom  WORD PTR [esi]
  402678:	jmp    0x4cdb:0x57a7c6bb
  40267f:	xchg   ecx,eax
  402680:	lods   al,BYTE PTR ds:[esi]
  402681:	icebp  
  402682:	repnz icebp 
  402684:	sub    DWORD PTR [edx],esp
  402686:	dec    ebx
  402687:	adc    al,0x81
  402689:	xor    dh,BYTE PTR [esi-0x51]
  40268c:	and    BYTE PTR [ebx],0x6b
  40268f:	jmp    0x40267e
  402691:	iret   
  402692:	push   0x47dbe496
  402697:	ror    edi,cl
  402699:	jp     0x40261f
  40269b:	mov    eax,0xa0ae812b
  4026a0:	xchg   esp,eax
  4026a1:	sub    esi,DWORD PTR [eax-0x39]
  4026a4:	mov    dh,0x79
  4026a6:	inc    esp
  4026a7:	cmp    eax,0xe8f085c
  4026ac:	jg     0x4026d4
  4026ae:	ins    BYTE PTR es:[edi],dx
  4026af:	rcl    ch,cl
  4026b1:	retf   
  4026b2:	adc    al,0xa8
  4026b4:	mov    al,0x26
  4026b6:	sub    BYTE PTR [edx+0x7a],ch
  4026b9:	adc    dl,BYTE PTR [ebx-0x4144944a]
  4026bf:	stos   BYTE PTR es:[edi],al
  4026c0:	adc    eax,0x658a409d
  4026c5:	xor    ecx,esp
  4026c7:	mov    ch,0x32
  4026c9:	lea    ebx,[edx+edx*8+0x5e]
  4026cd:	ds iret 
  4026cf:	(bad)  
  4026d0:	sbb    dh,bl
  4026d2:	cli    
  4026d3:	pop    ebx
  4026d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026d5:	and    DWORD PTR [ebp+0x2f88c3ac],0xf307a15e
  4026df:	sbb    DWORD PTR [ebp+ebp*1-0x3a97cbe5],0xffffffbf
  4026e7:	in     eax,dx
  4026e8:	push   esp
  4026e9:	pusha  
  4026ea:	and    eax,0x85c1a267
  4026ef:	aam    0xc3
  4026f1:	ss dec esp
  4026f3:	sub    esi,DWORD PTR [ebp+0x4064a244]
  4026f9:	dec    edx
  4026fa:	jge    0x4026af
  4026fc:	pop    ds
  4026fd:	inc    edi
  4026fe:	test   BYTE PTR [edi+0x76],al
  402701:	push   ecx
  402702:	in     al,dx
  402703:	pop    ebp
  402704:	jmp    0x1d7c:0xbc7a1629
  40270b:	wbinvd 
  40270d:	and    bh,BYTE PTR [ecx+ebp*2-0x62]
  402711:	push   eax
  402712:	loopne 0x402700
  402714:	dec    esp
  402715:	sub    DWORD PTR [esi-0x18],ebp
  402718:	aad    0x5d
  40271a:	jg     0x40273f
  40271c:	mov    ecx,0x4e085a72
  402721:	lods   al,BYTE PTR ds:[esi]
  402722:	xor    DWORD PTR [edi],0x4d
  402725:	addr16 out 0x37,eax
  402728:	addr16 jle 0x40274f
  40272b:	imul   esi,DWORD PTR [ebx],0x4aed7edf
  402731:	jp     0x4026f5
  402733:	adc    esi,DWORD PTR [edi+0x198d52e0]
  402739:	sub    al,dh
  40273b:	adc    BYTE PTR [ebp-0x775828ab],0x62
  402742:	dec    esi
  402743:	stos   DWORD PTR es:[edi],eax
  402744:	ss scas al,BYTE PTR es:[edi]
  402746:	xchg   edi,eax
  402747:	test   DWORD PTR [edi-0x56734b51],esp
  40274d:	or     eax,0x7b13c59d
  402752:	loopne 0x40272b
  402754:	ja     0x402713
  402756:	add    ecx,ebp
  402758:	jmp    0x38ac3e1d
  40275d:	xchg   ecx,eax
  40275e:	enter  0xcbef,0x91
  402762:	xor    DWORD PTR [edx-0x7c],0x304b0466
  402769:	cmp    bh,BYTE PTR [edx]
  40276b:	xor    dh,BYTE PTR [ebp-0x20]
  40276e:	sub    eax,0x2fbcee10
  402773:	or     dl,bh
  402775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402776:	clc    
  402777:	lahf   
  402778:	sbb    eax,0xdfaedd62
  40277d:	out    0x71,eax
  40277f:	imul   ecx,DWORD PTR [ebx+eiz*2],0xb0718a7b
  402786:	sbb    ebp,DWORD PTR [ecx+ebx*2+0x2a5d02f8]
  40278d:	xchg   BYTE PTR [esi+edx*2],ah
  402790:	loop   0x402731
  402792:	inc    edx
  402793:	aam    0x66
  402795:	(bad)  
  402796:	pushf  
  402797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402798:	push   ebx
  402799:	repnz icebp 
  40279b:	or     ah,BYTE PTR [ecx-0x1858cdd5]
  4027a1:	mov    ah,0x44
  4027a3:	imul   BYTE PTR [ecx+0x40]
  4027a6:	xchg   al,bh
  4027a8:	imul   ebx,DWORD PTR [esi+esi*8+0x5a],0xffffff94
  4027ad:	or     bl,ah
  4027af:	test   eax,0x8f634985
  4027b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b5:	xchg   BYTE PTR [edx-0x5e759b5e],bh
  4027bb:	sub    BYTE PTR ds:0x2933f5,dl
  4027c1:	xor    edx,DWORD PTR [edi-0x2d158c03]
  4027c7:	mov    esi,0xb9b683e6
  4027cc:	pop    edx
  4027cd:	stc    
  4027ce:	pop    esp
  4027cf:	sbb    ebp,ecx
  4027d1:	scas   al,BYTE PTR es:[edi]
  4027d2:	xchg   DWORD PTR [edx-0x31760aec],edi
  4027d8:	mov    esi,0x28bbe3dd
  4027dd:	dec    edx
  4027de:	cli    
  4027df:	fsubr  QWORD PTR [edi-0x5f]
  4027e2:	adc    edx,DWORD PTR [eax]
  4027e4:	adc    esp,DWORD PTR [esi-0x59]
  4027e7:	fimul  DWORD PTR [ebx-0x161a056f]
  4027ed:	imul   ebp,DWORD PTR [eax],0xcddcaa74
  4027f3:	clc    
  4027f4:	mov    cl,0x8
  4027f6:	out    0x90,al
  4027f8:	and    DWORD PTR [edi],0xda5c517e
  4027fe:	xor    DWORD PTR [esi+0x9],0x8d2e4a2c
  402805:	fsubr  QWORD PTR [eax+0x5b]
  402808:	sar    BYTE PTR [ebx+ebx*4],cl
  40280b:	pop    ebx
  40280c:	add    eax,0xd42856bb
  402811:	in     eax,dx
  402812:	inc    eax
  402813:	add    BYTE PTR [ebx-0x7d],0xb5
  402817:	js     0x40285d
  402819:	(bad)
  40281c:	test   eax,0xee192de5
  402821:	xchg   BYTE PTR [ebx],ah
  402823:	jns    0x402801
  402825:	retf   
  402826:	adc    BYTE PTR [ecx-0x46],0xc7
  40282a:	lock inc ecx
  40282c:	sar    BYTE PTR [edx+0x54],1
  40282f:	push   0x72
  402831:	or     ebp,DWORD PTR [eax-0x49f1ebc5]
  402837:	sub    DWORD PTR [edi+0x2f],esp
  40283a:	xor    dl,BYTE PTR ds:0xdd7fed0a
  402840:	or     al,bh
  402842:	mov    dh,0x73
  402844:	imul   edi,DWORD PTR [ecx-0x3eac18f7],0x57
  40284b:	jp     0x4028bb
  40284d:	dec    esi
  40284e:	dec    ecx
  40284f:	ret    0x9ec6
  402852:	arpl   bx,di
  402854:	xchg   edx,eax
  402855:	push   ebx
  402856:	(bad)  
  402858:	sbb    BYTE PTR [ecx],bl
  40285a:	in     al,dx
  40285b:	test   eax,0x8d34518a
  402860:	mov    ah,0x3f
  402862:	mov    bh,0x56
  402864:	into   
  402865:	outs   dx,BYTE PTR ds:[esi]
  402866:	push   esp
  402867:	xchg   esp,eax
  402868:	(bad)  
  402869:	mov    ?,ebp
  40286b:	jmp    0x4028a4
  40286d:	dec    ecx
  40286e:	dec    edx
  40286f:	test   dl,dl
  402871:	lods   eax,DWORD PTR ds:[esi]
  402872:	sbb    al,0xbf
  402874:	and    al,0x95
  402876:	es stos BYTE PTR es:[edi],al
  402878:	addr16 loopne 0x40286c
  40287b:	adc    BYTE PTR [eax+0x7249d3c8],dh
  402881:	push   ebp
  402882:	cmp    ebp,DWORD PTR [ebp+0x7e4e791d]
  402888:	pop    ss
  402889:	xor    eax,0x6f784958
  40288e:	or     ecx,ecx
  402890:	jg     0x402853
  402892:	ret    0xe055
  402895:	fisubr WORD PTR [eax+0x1c]
  402898:	cld    
  402899:	aaa    
  40289a:	test   eax,0xc28ce439
  40289f:	xchg   edi,eax
  4028a0:	bound  esp,QWORD PTR [edx]
  4028a2:	sti    
  4028a3:	stos   BYTE PTR es:[edi],al
  4028a4:	fiadd  WORD PTR ds:0xbaa006a5
  4028aa:	sti    
  4028ab:	jge    0x402851
  4028ad:	xor    eax,0xa9bcbe95
  4028b2:	(bad)  
  4028b4:	test   al,0x5c
  4028b6:	ins    BYTE PTR es:[edi],dx
  4028b7:	lahf   
  4028b8:	cwde   
  4028b9:	out    dx,al
  4028ba:	push   ebp
  4028bb:	and    DWORD PTR [ebp-0x1f],edi
  4028be:	adc    eax,0x22e7ed33
  4028c3:	mov    edi,ebp
  4028c5:	jno    0x40293b
  4028c7:	mov    cl,0x1e
  4028c9:	pop    esp
  4028ca:	xor    al,0xb9
  4028cc:	cwde   
  4028cd:	mov    ch,0x7b
  4028cf:	rcr    eax,cl
  4028d1:	mov    ah,0xc5
  4028d3:	pop    ebx
  4028d4:	and    BYTE PTR [eax],dl
  4028d6:	mov    eax,ds:0x22ea0d3b
  4028db:	aas    
  4028dc:	(bad)  
  4028de:	in     al,dx
  4028df:	mov    dl,0x4f
  4028e1:	or     esp,edi
  4028e3:	test   eax,0xafa0bd0e
  4028e8:	add    ebx,0x50070080
  4028ee:	das    
  4028ef:	test   BYTE PTR [ebp-0x4f],cl
  4028f2:	shl    BYTE PTR [eax+0x13],0x52
  4028f6:	push   ecx
  4028f7:	(bad)  
  4028f9:	arpl   si,ax
  4028fb:	mov    ebp,0x8b8cbf71
  402900:	xchg   esp,eax
  402901:	sbb    edx,ebp
  402903:	xlat   BYTE PTR ds:[ebx]
  402904:	mov    BYTE PTR [edx-0x4183f38],ch
  40290a:	mov    esi,0x58dc3f94
  40290f:	mov    ebx,0x6b33689b
  402914:	jmp    0xb6a3:0x4e880cb6
  40291b:	out    dx,al
  40291c:	lds    ebp,FWORD PTR [ebx+0x30]
  40291f:	sub    BYTE PTR [ebx-0x2fb77c1b],dl
  402925:	jge    0x40296b
  402927:	dec    esp
  402928:	pusha  
  402929:	sbb    dh,BYTE PTR [esi]
  40292b:	cli    
  40292c:	jno    0x402939
  40292e:	js     0x40296a
  402930:	test   DWORD PTR [ecx-0x5f],ecx
  402933:	mov    eax,0x5745cdc8
  402938:	mov    eax,ds:0x592c5eb7
  40293d:	jo     0x402961
  40293f:	daa    
  402940:	push   0x15e09fa0
  402945:	xlat   BYTE PTR ds:[ebx]
  402946:	xchg   ebp,eax
  402947:	mov    bh,0x95
  402949:	xor    bh,BYTE PTR [esi-0x6537bd60]
  40294f:	cmp    eax,0x6f5a032a
  402954:	jp     0x4029bc
  402956:	and    ebx,DWORD PTR [edx+0x3]
  402959:	popa   
  40295a:	dec    ebp
  40295b:	jo     0x40294e
  40295d:	into   
  40295e:	adc    edx,DWORD PTR [esi]
  402960:	lods   al,BYTE PTR ds:[esi]
  402961:	jmp    0x29df8844
  402966:	dec    esi
  402967:	dec    esp
  402968:	inc    ecx
  402969:	mov    edx,cs
  40296b:	(bad)  
  40296c:	cmc    
  40296d:	dec    ebp
  40296e:	cmp    ch,BYTE PTR [ebx+0xf]
  402971:	fcomp  DWORD PTR [edi+0x660c3e8b]
  402977:	dec    esp
  402978:	pop    edx
  402979:	in     eax,0x1f
  40297b:	imul   ebx,DWORD PTR [edx],0xffffffd9
  40297e:	sub    BYTE PTR [ecx-0x54593ff8],ch
  402984:	pop    ecx
  402985:	sub    ah,BYTE PTR [esi+0x72]
  402988:	scas   eax,DWORD PTR es:[edi]
  402989:	and    ecx,DWORD PTR [esi+0x367f6ca3]
  40298f:	ins    DWORD PTR es:[edi],dx
  402990:	imul   edx,DWORD PTR [esi],0x61
  402993:	ret    0x5a4e
  402996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402997:	mov    esp,0x973b1806
  40299c:	fnstcw WORD PTR [ebx+0x9]
  40299f:	call   0xdaa49346
  4029a4:	sbb    esi,esp
  4029a6:	inc    ecx
  4029a7:	push   ds
  4029a8:	push   eax
  4029a9:	and    BYTE PTR [ecx+eax*1-0x1fd39a48],dh
  4029b0:	mov    WORD PTR [esi+0x53],ss
  4029b3:	sub    al,0x3e
  4029b5:	add    eax,0xf7de737
  4029ba:	lods   al,BYTE PTR ds:[esi]
  4029bb:	add    dh,BYTE PTR [esp+edx*2]
  4029be:	push   bp
  4029c0:	dec    ecx
  4029c1:	mov    esi,0x5a62fcad
  4029c6:	jo     0x4029c2
  4029c8:	push   esi
  4029c9:	ss and eax,0x4ad19014
  4029cf:	ffree  st(7)
  4029d1:	leave  
  4029d2:	into   
  4029d3:	pmaxsw mm7,QWORD PTR [ebx]
  4029d6:	dec    esp
  4029d7:	xchg   edi,eax
  4029d8:	xlat   BYTE PTR ds:[ebx]
  4029d9:	xchg   esi,eax
  4029da:	pop    es
  4029db:	bound  edx,QWORD PTR [edx]
  4029dd:	jno    0x402963
  4029df:	outs   dx,BYTE PTR ds:[esi]
  4029e0:	or     DWORD PTR [eax],ecx
  4029e2:	xchg   ebx,eax
  4029e3:	adc    al,0x87
  4029e5:	shl    DWORD PTR [ecx+0x2f],cl
  4029e8:	pop    ss
  4029e9:	out    0x93,eax
  4029eb:	mov    edi,0xcef84359
  4029f0:	imul   DWORD PTR [ecx-0x24]
  4029f3:	call   0xaa76782d
  4029f8:	inc    ebp
  4029f9:	add    DWORD PTR [eax],edi
  4029fb:	xchg   esi,eax
  4029fc:	cmp    esi,DWORD PTR [edx]
  4029fe:	pop    esp
  4029ff:	fstp   QWORD PTR [eax+0x4f]
  402a02:	(bad)  
  402a03:	popf   
  402a04:	(bad)  
  402a05:	in     eax,0xcf
  402a07:	lea    ebx,[ecx-0x2]
  402a0a:	jnp    0x402a62
  402a0c:	unpcklps xmm5,XMMWORD PTR [edi]
  402a0f:	jl     0x402a28
  402a11:	dec    ebp
  402a12:	jnp    0x4029d4
  402a14:	rcr    BYTE PTR [edi],cl
  402a16:	mov    DWORD PTR [ecx-0x795f907e],edx
  402a1c:	sub    cl,dh
  402a1e:	jp     0x4029a1
  402a20:	test   BYTE PTR [ebx-0x74],0x52
  402a24:	(bad)  
  402a25:	cmp    esi,ecx
  402a27:	mov    bl,BYTE PTR [ebx-0x16]
  402a2a:	cmc    
  402a2b:	xchg   edx,eax
  402a2c:	in     al,0x8d
  402a2e:	stos   DWORD PTR es:[edi],eax
  402a2f:	jg     0x402a6e
  402a31:	(bad)  
  402a32:	scas   eax,DWORD PTR es:[edi]
  402a33:	(bad)  
  402a34:	shl    DWORD PTR [ecx-0x53f59a22],cl
  402a3a:	sti    
  402a3b:	inc    edx
  402a3c:	outs   dx,BYTE PTR ds:[esi]
  402a3d:	fwait
  402a3e:	dec    edx
  402a3f:	shr    BYTE PTR [ebp-0x1b54cdfd],1
  402a45:	mov    BYTE PTR [esi+ecx*2-0x3135a6b2],bl
  402a4c:	mov    eax,0x84cd6435
  402a51:	and    BYTE PTR [edi+0x491cefd4],ah
  402a57:	push   esp
  402a58:	inc    esi
  402a59:	stos   BYTE PTR es:[edi],al
  402a5a:	or     esp,esp
  402a5c:	or     BYTE PTR [ecx],ah
  402a5e:	hlt    
  402a5f:	not    DWORD PTR [ebp+0xaa1c2c7]
  402a65:	mov    ecx,0x45d60c81
  402a6a:	cmp    al,0xfe
  402a6c:	dec    esi
  402a6d:	ret    
  402a6e:	gs inc esp
  402a70:	jge    0x4029f2
  402a72:	test   edi,ebx
  402a74:	add    al,0x38
  402a76:	jp     0x402a44
  402a78:	pop    edx
  402a79:	mov    cl,0xa9
  402a7b:	jle    0x402a8f
  402a7d:	ja     0x402a41
  402a7f:	and    ebp,DWORD PTR [edx-0x45]
  402a82:	jb     0x402ade
  402a84:	aaa    
  402a85:	mov    bl,0xac
  402a87:	push   es
  402a88:	jne    0x402ac2
  402a8a:	push   es
  402a8b:	in     eax,dx
  402a8c:	sub    BYTE PTR [eax+eiz*2-0xf],ch
  402a90:	adc    ecx,DWORD PTR [ebp-0x5f]
  402a93:	mov    bh,0x7b
  402a95:	or     bh,BYTE PTR [eax]
  402a97:	fadd   st(0),st
  402a99:	cli    
  402a9a:	repz push 0x1e
  402a9d:	cmp    eax,0x4db0cac2
  402aa2:	dec    ebp
  402aa3:	mov    edi,0x3ddc6b31
  402aa8:	out    dx,eax
  402aa9:	test   eax,0x386f9f5c
  402aae:	data16 lahf 
  402ab0:	fcmovnu st,st(6)
  402ab2:	fild   DWORD PTR [eax-0x755d8a40]
  402ab8:	(bad)  
  402ab9:	stc    
  402aba:	adc    bp,WORD PTR [ebp-0x54748982]
  402ac1:	and    ah,bh
  402ac3:	cdq    
  402ac4:	fmul   QWORD PTR [edi+0x2e]
  402ac7:	je     0x402b15
  402ac9:	call   0x250de54e
  402ace:	and    eax,0x8539dd9
  402ad3:	pop    esi
  402ad4:	add    BYTE PTR [edi-0x44],cl
  402ad7:	adc    al,0x8d
  402ad9:	lods   al,BYTE PTR ds:[esi]
  402ada:	cmc    
  402adb:	and    bh,BYTE PTR [edx+0x24]
  402ade:	outs   dx,BYTE PTR ds:[esi]
  402adf:	ret    
  402ae0:	popa   
  402ae1:	xchg   esi,eax
  402ae2:	in     al,0x1d
  402ae4:	les    esi,FWORD PTR [esi+ebp*1]
  402ae7:	jae    0x402b68
  402ae9:	hlt    
  402aea:	stos   DWORD PTR es:[edi],eax
  402aeb:	cmp    edi,DWORD PTR [edx+0x72]
  402aee:	rcl    edi,cl
  402af0:	push   ebx
  402af1:	add    eax,0xdfec0299
  402af6:	push   esi
  402af7:	dec    esp
  402af8:	mov    al,0x9f
  402afa:	inc    ebp
  402afb:	into   
  402afc:	mov    eax,ds:0x9f69375d
  402b01:	inc    eax
  402b02:	test   al,0x2b
  402b04:	or     ebx,DWORD PTR cs:[esi+0x4b]
  402b08:	cmp    dl,BYTE PTR [edi+esi*2]
  402b0b:	push   0x8fa9f82
  402b10:	add    BYTE PTR [edi+0x49349208],bh
  402b16:	dec    esi
  402b17:	mov    al,ds:0xa7a7f87e
  402b1c:	shl    esp,1
  402b1e:	adc    ebx,DWORD PTR [edi+ecx*4+0x24271e2]
  402b25:	loope  0x402af5
  402b27:	scas   al,BYTE PTR es:[edi]
  402b28:	mov    eax,ds:0x289936ed
  402b2d:	outs   dx,DWORD PTR ds:[esi]
  402b2e:	cwde   
  402b2f:	inc    ebx
  402b30:	loopne 0x402ad1
  402b32:	fstp   st(7)
  402b34:	(bad)  
  402b35:	jae    0x402b6e
  402b37:	xchg   DWORD PTR [esi+0x13],edx
  402b3a:	jb     0x402b45
  402b3c:	stos   DWORD PTR es:[edi],eax
  402b3d:	inc    ebp
  402b3e:	adc    al,0x3a
  402b40:	sbb    DWORD PTR [eax-0x210b5125],ebp
  402b46:	cmp    eax,0x398b6194
  402b4b:	inc    ebx
  402b4c:	js     0x402b9e
  402b4e:	jmp    0x16ef:0x2d13db73
  402b55:	jbe    0x402b1d
  402b57:	jle    0x402aec
  402b59:	pop    esi
  402b5a:	(bad)  
  402b5b:	xchg   ebx,eax
  402b5c:	mov    ebp,0x79c67421
  402b61:	pop    ss
  402b62:	jns    0x402b17
  402b64:	jmp    0x549446f1
  402b69:	inc    eax
  402b6a:	inc    ebp
  402b6b:	cs (bad) 
  402b6d:	cmp    ebx,DWORD PTR [ebx+0x2ba0ece8]
  402b73:	ds aad 0xc3
  402b76:	pushf  
  402b77:	ins    DWORD PTR es:[edi],dx
  402b78:	inc    ecx
  402b79:	mov    bh,0xb2
  402b7b:	mov    esp,0x1ad63cef
  402b80:	loopne 0x402b6b
  402b82:	clc    
  402b83:	cld    
  402b84:	jg     0x402b92
  402b86:	mov    dl,0xc8
  402b88:	xchg   ebx,eax
  402b89:	adc    BYTE PTR [eax-0x109ccaf0],ch
  402b8f:	ds mov ecx,0xc2aad92a
  402b95:	dec    esp
  402b96:	aas    
  402b97:	daa    
  402b98:	and    al,0x59
  402b9a:	std    
  402b9b:	adc    al,BYTE PTR [ecx]
  402b9d:	cs jl  0x402b8d
  402ba0:	push   esi
  402ba1:	sub    ch,0x6e
  402ba4:	pop    ds
  402ba5:	aad    0x8b
  402ba7:	pop    esi
  402ba8:	push   edi
  402ba9:	ins    DWORD PTR es:[edi],dx
  402baa:	dec    ebx
  402bab:	cdq    
  402bac:	mov    al,0x10
  402bae:	dec    ebp
  402baf:	mov    al,0x4f
  402bb1:	push   eax
  402bb2:	into   
  402bb3:	xor    edi,edi
  402bb5:	cmp    ah,BYTE PTR [esi+0x51]
  402bb8:	bound  ebp,QWORD PTR [ecx+0x550fa6a6]
  402bbe:	outs   dx,BYTE PTR ds:[esi]
  402bbf:	out    dx,al
  402bc0:	stos   DWORD PTR es:[edi],eax
  402bc1:	shl    eax,1
  402bc3:	pop    DWORD PTR [edi]
  402bc5:	jnp    0x402bf1
  402bc7:	or     eax,ecx
  402bc9:	adc    cl,0x4
  402bcc:	jle    0x402bd0
  402bce:	and    dh,BYTE PTR [ebp-0x65]
  402bd1:	pusha  
  402bd2:	jmp    0x402b72
  402bd4:	adc    dl,BYTE PTR [eax+0x22]
  402bd7:	or     edi,DWORD PTR [esi+eax*8-0x1273b468]
  402bde:	xchg   ebp,eax
  402bdf:	sub    eax,0xf59a8759
  402be4:	mov    dh,0x8a
  402be6:	mov    bl,0x8b
  402be8:	lods   eax,DWORD PTR ds:[esi]
  402be9:	push   0xb8442d85
  402bee:	(bad)
  402bf2:	pop    eax
  402bf3:	hlt    
  402bf4:	add    DWORD PTR [edi],ebp
  402bf6:	in     al,dx
  402bf7:	adc    al,0x4d
  402bf9:	js     0x402b7d
  402bfb:	pop    edi
  402bfc:	rol    BYTE PTR [edi+0x52],cl
  402bff:	pusha  
  402c00:	xchg   edx,eax
  402c01:	loop   0x402b99
  402c03:	or     dl,bl
  402c05:	mov    ds,ecx
  402c07:	jb     0x402c2a
  402c09:	jns    0x402c27
  402c0b:	(bad)  
  402c0c:	mul    DWORD PTR [edx+edx*8]
  402c0f:	or     BYTE PTR gs:[esi],bl
  402c12:	adc    ecx,DWORD PTR [edi+0xb]
  402c15:	dec    edx
  402c16:	jle    0x402c77
  402c18:	ret    0xb50d
  402c1b:	rol    BYTE PTR [edi-0x419c9412],cl
  402c21:	addr16 adc eax,0xdf673e8d
  402c27:	jl     0x402be8
  402c29:	mov    ebx,0x7597568f
  402c2e:	and    eax,0x399af0d4
  402c33:	push   cs
  402c34:	xor    BYTE PTR [ecx-0x799f1481],bh
  402c3a:	fstp   st(5)
  402c3c:	xor    eax,0xfdce1584
  402c41:	rol    esp,1
  402c43:	or     DWORD PTR [edx-0x553d555],eax
  402c49:	daa    
  402c4a:	mov    ah,0xfd
  402c4c:	leave  
  402c4d:	xor    BYTE PTR [edi-0x7c],cl
  402c50:	dec    ebp
  402c51:	inc    esp
  402c52:	fsubr  st(5),st
  402c54:	outs   dx,BYTE PTR ds:[esi]
  402c55:	dec    esi
  402c56:	clc    
  402c57:	cmp    BYTE PTR [ebp+edi*2+0x5258d419],cl
  402c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c5f:	out    0x9c,eax
  402c61:	loope  0x402cbd
  402c63:	dec    edx
  402c64:	stos   BYTE PTR es:[edi],al
  402c65:	rcl    BYTE PTR [esi-0x646dc24],0x87
  402c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c6d:	xchg   edi,eax
  402c6e:	jnp    0x402cd0
  402c70:	cmp    al,0xd4
  402c72:	mov    ah,0x7f
  402c74:	jmp    0x7955:0x61035f8a
  402c7b:	mov    al,ds:0xc85f61d3
  402c80:	xchg   ebp,eax
  402c81:	mov    ah,0x51
  402c83:	dec    ecx
  402c84:	ins    DWORD PTR es:[edi],dx
  402c85:	mov    cl,0x5b
  402c87:	fisub  WORD PTR [eax+eax*4+0x28]
  402c8b:	loopne 0x402c54
  402c8d:	out    0x6d,al
  402c8f:	bound  ecx,QWORD PTR [esi-0x43]
  402c92:	fcomp  DWORD PTR [ecx+0x7e]
  402c95:	les    edi,FWORD PTR [edi+edi*8-0x46204268]
  402c9c:	jle    0x402cdb
  402c9e:	push   es
  402c9f:	rcr    BYTE PTR [edi+0x6831c175],0x62
  402ca6:	adc    BYTE PTR [edx-0x42],bh
  402ca9:	mov    ds:0xf2343ba8,eax
  402cae:	sub    eax,0x39fdef2b
  402cb3:	mov    esi,0xddb7134e
  402cb8:	adc    esp,ebp
  402cba:	aas    
  402cbb:	mov    edx,0xf1a40435
  402cc0:	or     BYTE PTR [ebp-0x50],0x11
  402cc4:	pop    ss
  402cc5:	mov    edi,0x583eb92
  402cca:	cwde   
  402ccb:	xor    dl,BYTE PTR [eax-0x4ef92eb6]
  402cd1:	dec    edi
  402cd2:	sar    esp,1
  402cd4:	aam    0x10
  402cd6:	cld    
  402cd7:	aas    
  402cd8:	pop    es
  402cd9:	call   0x3c75:0x2bcfbe8c
  402ce0:	dec    esi
  402ce1:	retf   0x70a0
  402ce4:	or     al,0x24
  402ce6:	(bad)  
  402ce8:	xchg   BYTE PTR ds:0xcf84c836,al
  402cee:	jmp    0x402c97
  402cf0:	test   eax,0xa774838b
  402cf5:	inc    BYTE PTR [edi+ebx*8+0x69]
  402cf9:	sbb    al,0xe6
  402cfb:	(bad)  
  402cfc:	push   ebx
  402cfd:	pop    ecx
  402cfe:	repnz mov eax,ds:0x653ffe10
  402d04:	jmp    0x95159e0b
  402d09:	pop    eax
  402d0a:	ja     0x402c97
  402d0c:	cdq    
  402d0d:	xchg   ecx,eax
  402d0e:	(bad)  
  402d0f:	fs lock dec ebx
  402d12:	xor    eax,DWORD PTR [ebp+0x10]
  402d15:	adc    DWORD PTR es:[edx-0x4b0bd6da],eax
  402d1c:	test   BYTE PTR [ebp+0x513d2122],ah
  402d22:	test   DWORD PTR [edi],edi
  402d24:	mov    esi,0xdf63a143
  402d29:	loopne 0x402ccf
  402d2b:	dec    eax
  402d2c:	popf   
  402d2d:	xor    edx,DWORD PTR [ecx+0x4d35141d]
  402d33:	or     cl,ah
  402d35:	inc    ebx
  402d36:	push   ebx
  402d37:	dec    ebx
  402d38:	retf   0xbc18
  402d3b:	test   DWORD PTR [edx+0x6c],esp
  402d3e:	(bad)  
  402d3f:	std    
  402d40:	mov    dh,0xdd
  402d42:	repnz mov ah,0x4a
  402d45:	xor    al,0xd
  402d47:	dec    edi
  402d48:	jle    0x402d6f
  402d4a:	and    al,0x41
  402d4c:	clc    
  402d4d:	into   
  402d4e:	jg     0x402cdc
  402d50:	test   al,0x6b
  402d52:	mov    bl,0xfe
  402d54:	jl     0x402d4c
  402d56:	dec    edi
  402d57:	dec    esi
  402d58:	(bad)  [esi-0x16876597]
  402d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d5f:	ja     0x402d7e
  402d61:	jno    0x402d30
  402d63:	or     dh,dh
  402d65:	icebp  
  402d66:	adc    eax,0x78508bf
  402d6b:	xchg   esi,eax
  402d6c:	cs cwde 
  402d6e:	xchg   DWORD PTR [eax+0xe6dc56a],ecx
  402d74:	and    esp,ebx
  402d76:	out    0x81,al
  402d78:	mov    esp,0x94784932
  402d7d:	stc    
  402d7e:	div    DWORD PTR [edi]
  402d80:	vmread DWORD PTR [edi-0x48a8a101],ebp
  402d87:	imul   edi,DWORD PTR [edx-0x416e983c],0x17
  402d8e:	je     0x402d40
  402d90:	mov    eax,0xf8848e86
  402d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d96:	cmp    al,0xda
  402d98:	mov    esi,0xeddaea0c
  402d9d:	daa    
  402d9e:	mov    edx,0x5a45df4f
  402da3:	pop    ds
  402da4:	aam    0xd5
  402da6:	pop    edi
  402da7:	popa   
  402da8:	mov    dl,0x15
  402daa:	dec    edx
  402dab:	btc    DWORD PTR ds:0x40499719,esi
  402db2:	out    dx,al
  402db3:	xor    DWORD PTR [esi+0x2d],esi
  402db6:	sub    ecx,DWORD PTR [edx]
  402db8:	and    bl,al
  402dba:	sub    al,0xfc
  402dbc:	div    DWORD PTR [esi-0x37]
  402dbf:	push   ebx
  402dc0:	lock scas al,BYTE PTR es:[edi]
  402dc2:	rcr    BYTE PTR [eax],cl
  402dc4:	int3   
  402dc5:	adc    DWORD PTR [eax-0x252bd58],edx
  402dcb:	jne    0x402e4c
  402dcd:	sar    ch,0x9
  402dd0:	(bad)  
  402dd1:	push   edi
  402dd3:	xchg   ebp,eax
  402dd4:	xor    dl,BYTE PTR [ecx-0x4c5ff594]
  402dda:	jnp    0x402db8
  402ddc:	lea    ebx,[eax]
  402dde:	cmp    BYTE PTR [edx+0xccc6605],0x77
  402de5:	jne    0x402e40
  402de7:	fisttp QWORD PTR [ecx-0x68]
  402dea:	mov    ds:0x8aa26335,al
  402def:	or     edx,esi
  402df1:	pop    esi
  402df2:	lea    eax,[edi]
  402df4:	aaa    
  402df5:	push   esi
  402df6:	xchg   edi,eax
  402df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402df8:	ds dec ebx
  402dfa:	add    al,0x8b
  402dfc:	in     eax,dx
  402dfd:	pop    ds
  402dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dff:	cmp    eax,0xcf21b464
  402e04:	push   esp
  402e05:	fimul  WORD PTR ds:0xafa37eed
  402e0b:	push   es
  402e0c:	cmp    DWORD PTR [edx+0x2a4161b8],edi
  402e12:	push   0x4a
  402e14:	jbe    0x402e00
  402e16:	retf   0xec5d
  402e19:	pusha  
  402e1a:	and    dh,bh
  402e1c:	dec    eax
  402e1d:	imul   edi,DWORD PTR [ebx-0x4d50c8ee],0x78e4632d
  402e27:	test   al,0x27
  402e29:	add    DWORD PTR [edi],0x68018e46
  402e2f:	pop    ds
  402e30:	cmp    BYTE PTR [edi-0x29],ch
  402e33:	mov    bl,0xf1
  402e35:	stos   DWORD PTR es:[edi],eax
  402e36:	popfw  
  402e38:	std    
  402e39:	test   DWORD PTR [eax],0x2c329c1e
  402e3f:	ror    BYTE PTR [ebx-0x46268cce],0xb9
  402e46:	xor    ebx,edx
  402e48:	in     al,dx
  402e49:	sbb    BYTE PTR [edi+edi*4+0x57],al
  402e4d:	sbb    BYTE PTR [esi],bl
  402e4f:	jne    0x402eb8
  402e51:	stc    
  402e52:	sub    al,0x23
  402e54:	cmp    edx,eax
  402e56:	ins    BYTE PTR es:[edi],dx
  402e57:	mov    edx,0x44dd3550
  402e5c:	or     al,0xd1
  402e5e:	jb     0x402ed7
  402e60:	xor    ah,BYTE PTR [ebx+0x28]
  402e63:	and    DWORD PTR [edx],ebp
  402e65:	jo     0x402e7f
  402e67:	jno    0x402edb
  402e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e6a:	arpl   WORD PTR [ebp+edi*2+0x5af12142],sp
  402e71:	cmc    
  402e72:	jge    0x402eed
  402e74:	sqrtps xmm0,XMMWORD PTR [edx+edx*1+0x83f0029]
  402e7c:	jecxz  0x402e89
  402e7e:	sbb    al,0xb3
  402e80:	in     al,0x35
  402e82:	mov    al,ds:0x52c23148
  402e87:	loope  0x402e78
  402e89:	rcr    BYTE PTR [edx+0x45],cl
  402e8c:	ja     0x402ea7
  402e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e8f:	push   edx
  402e90:	lock fs std 
  402e93:	imul   ecx,DWORD PTR [edx-0x733ae713],0x19
  402e9a:	ret    0xe45c
  402e9d:	fadd   st(4),st
  402e9f:	sbb    DWORD PTR [edi-0x213d0747],esi
  402ea5:	leave  
  402ea6:	mov    ebp,0xae9f2e95
  402eab:	loop   0x402e55
  402ead:	jge    0x402ed2
  402eaf:	fprem  
  402eb1:	fiadd  DWORD PTR [edx-0x3893ad90]
  402eb7:	jecxz  0x402ee2
  402eb9:	test   BYTE PTR [ebx],0xa9
  402ebc:	and    ecx,edx
  402ebe:	dec    esi
  402ebf:	sub    eax,0xbaa1379
  402ec4:	or     al,0xe0
  402ec6:	addr16 dec esp
  402ec8:	cmp    esi,ecx
  402eca:	cli    
  402ecb:	sbb    eax,0x487a8a98
  402ed0:	ja     0x402e76
  402ed2:	sub    eax,DWORD PTR [ebx]
  402ed4:	inc    edi
  402ed5:	in     eax,dx
  402ed6:	push   esp
  402ed7:	add    BYTE PTR [ecx+0x1c3f2f32],bh
  402edd:	pop    es
  402ede:	fdiv   DWORD PTR [ecx+ebx*4+0x62af374f]
  402ee5:	xchg   ecx,eax
  402ee6:	jb     0x402e9f
  402ee8:	mov    esi,0xc74357c3
  402eed:	repz cmp esp,DWORD PTR [edx]
  402ef0:	sub    bh,BYTE PTR [esi]
  402ef2:	push   ds
  402ef3:	test   al,0x16
  402ef5:	pop    ecx
  402ef6:	xchg   esi,eax
  402ef7:	pop    edi
  402ef8:	mov    cl,0x4d
  402efa:	jb     0x402f68
  402efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402efd:	sbb    BYTE PTR [ebx],0xb2
  402f00:	pop    esi
  402f01:	xchg   ecx,esi
  402f03:	sbb    eax,0xaf1de12d
  402f08:	stos   BYTE PTR es:[edi],al
  402f09:	addr16 int3 
  402f0b:	sbb    esp,DWORD PTR [edi+ebp*1+0x1251ee58]
  402f12:	mov    esi,0xeb7d922
  402f17:	jmp    0x7b1009fe
  402f1c:	div    DWORD PTR [ebx+0x562133ca]
  402f22:	dec    ecx
  402f24:	pop    edi
  402f25:	enter  0x4e78,0x15
  402f29:	lods   eax,DWORD PTR ds:[esi]
  402f2a:	xor    BYTE PTR [edx+0x34],0x33
  402f2e:	pop    ecx
  402f2f:	stos   DWORD PTR es:[edi],eax
  402f30:	adc    BYTE PTR [edi-0x66],cl
  402f33:	test   esp,0x568e89c1
  402f39:	mov    al,ds:0x1dc81c57
  402f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f3f:	mov    dh,0xb8
  402f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f42:	mov    ecx,0xb70ce804
  402f47:	call   0x6eb786f1
  402f4c:	stos   DWORD PTR es:[edi],eax
  402f4d:	addr16 cmp ecx,0x5fbc4b01
  402f54:	mov    esp,DWORD PTR [esi-0x72229597]
  402f5a:	add    bl,cl
  402f5c:	mov    ecx,0xd0ccd91c
  402f61:	sbb    bh,BYTE PTR [ebx+0x36722038]
  402f67:	out    0x35,al
  402f69:	mov    ebp,0xd875436d
  402f6e:	push   ebp
  402f6f:	xchg   ebx,eax
  402f70:	shr    BYTE PTR [edi],cl
  402f72:	mov    eax,0x2cfec617
  402f77:	inc    ebx
  402f78:	mov    bl,dh
  402f7a:	icebp  
  402f7b:	in     al,0xd0
  402f7d:	jne    0x402f37
  402f7f:	push   ebp
  402f80:	aam    0x70
  402f82:	add    ecx,ebp
  402f84:	push   ebx
  402f85:	mov    eax,0x460a14ea
  402f8a:	je     0x402f3d
  402f8c:	push   0x10a3c073
  402f91:	push   es
  402f92:	jb     0x402ff1
  402f94:	sbb    dh,BYTE PTR [eax-0x8f37dd5]
  402f9a:	sahf   
  402f9b:	stos   BYTE PTR es:[edi],al
  402f9c:	ret    
  402f9d:	push   ecx
  402f9e:	ins    BYTE PTR es:[edi],dx
  402f9f:	mov    dh,ch
  402fa1:	pop    edi
  402fa2:	int    0x9e
  402fa4:	xor    al,0x6c
  402fa6:	dec    ebp
  402fa7:	mov    edi,0x60a0cb6f
  402fac:	sub    eax,0xad40133b
  402fb1:	test   BYTE PTR [esi+0x36],dh
  402fb4:	mov    ?,WORD PTR [ecx+ebx*4]
  402fb7:	dec    esp
  402fb8:	in     eax,dx
  402fb9:	ret    0xb2be
  402fbc:	push   ds
  402fbd:	mov    ecx,0x408f805
  402fc2:	pop    DWORD PTR [ebx]
  402fc4:	loope  0x402f86
  402fc6:	test   DWORD PTR [ebx+0x565bc039],0xdff0f395
  402fd0:	inc    esp
  402fd1:	mov    ds:0xad8c50fb,eax
  402fd6:	push   esp
  402fd7:	inc    ebx
  402fd8:	aad    0x7e
  402fda:	scas   al,BYTE PTR es:[edi]
  402fdb:	fs out dx,al
  402fdd:	(bad)  
  402fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fdf:	pop    ebp
  402fe0:	icebp  
  402fe1:	or     DWORD PTR [edx-0xa7d8744],0x18
  402fe8:	popa   
  402fe9:	mov    ebx,0x7077e9d8
  402fee:	inc    eax
  402fef:	dec    BYTE PTR [ebx]
  402ff1:	pop    esp
  402ff2:	std    
  402ff3:	dec    ecx
  402ff4:	ret    
  402ff5:	and    dl,BYTE PTR [ebp+edi*1-0x3b]
  402ff9:	mov    ss,WORD PTR [esi]
  402ffb:	jmp    0xaab:0x18a6b101
  403002:	push   es
  403003:	sbb    eax,0xbae2aeed
  403008:	stos   DWORD PTR es:[edi],eax
  403009:	cmc    
  40300a:	cdq    
  40300b:	jl     0x40300a
  40300d:	sar    edx,cl
  40300f:	mov    al,0xc1
  403011:	int3   
  403012:	and    BYTE PTR [ebp+0x11],cl
  403015:	pop    esi
  403016:	(bad)  
  403017:	popf   
  403018:	je     0x403037
  40301a:	fisubr DWORD PTR [ebx+0x6fd17d88]
  403020:	cmp    eax,0xdebb7f39
  403025:	sti    
  403026:	jecxz  0x403053
  403028:	and    al,BYTE PTR [ebx]
  40302a:	jo     0x402fdd
  40302c:	sbb    dl,BYTE PTR [ecx]
  40302e:	lods   eax,DWORD PTR ds:[esi]
  40302f:	fdiv   st(4),st
  403031:	mov    ebp,0x926f322e
  403036:	mov    al,0x4
  403038:	add    al,0x7f
  40303a:	lahf   
  40303b:	adc    BYTE PTR [esi+0x4a29cf38],cl
  403041:	mov    ds,ebx
  403043:	in     al,0x33
  403045:	enter  0xa146,0xd9
  403049:	pop    es
  40304a:	xchg   esp,eax
  40304b:	xor    cl,BYTE PTR [ebx]
  40304d:	mov    ecx,0x3e772df9
  403052:	js     0x4030b0
  403054:	neg    BYTE PTR [ebp+0x65]
  403057:	(bad)  
  403058:	out    0x7e,eax
  40305a:	sub    dh,BYTE PTR [eax]
  40305c:	mov    ds:0xa053165a,eax
  403061:	repnz retf 0x5f7e
  403065:	xchg   esi,eax
  403066:	popa   
  403067:	das    
  403068:	(bad)  
  403069:	out    0x12,eax
  40306b:	fwait
  40306c:	in     eax,0x91
  40306e:	push   edi
  40306f:	push   es
  403070:	xchg   ebp,eax
  403071:	stc    
  403072:	cld    
  403073:	(bad)  
  403074:	hlt    
  403075:	or     DWORD PTR [eax],0xffffffa9
  403078:	and    eax,0xf721df26
  40307d:	cli    
  40307e:	into   
  40307f:	aas    
  403080:	push   edi
  403081:	enter  0xd118,0xbf
  403085:	xchg   edi,eax
  403086:	mov    ds:0x1383fa66,al
  40308b:	rcr    DWORD PTR [edx+0x59d76a36],1
  403091:	ss jecxz 0x403047
  403094:	mov    ebx,DWORD PTR [esi-0x78]
  403097:	jae    0x4030c3
  403099:	push   eax
  40309a:	mov    esp,ebx
  40309c:	shr    BYTE PTR [ebp-0x43],cl
  40309f:	neg    DWORD PTR [ebp+0x3f]
  4030a2:	pop    ss
  4030a3:	(bad)  
  4030a4:	cmc    
  4030a5:	cs stos BYTE PTR es:[edi],al
  4030a7:	sub    al,0xb7
  4030a9:	pop    esi
  4030aa:	mov    ah,0x4b
  4030ac:	shl    edx,cl
  4030ae:	mov    edi,0x39f93960
  4030b3:	sub    eax,esi
  4030b5:	mov    ecx,0xf647ac2f
  4030ba:	push   esi
  4030bb:	gs das 
  4030bd:	mov    BYTE PTR [ebp+0x3ff6b3a8],bh
  4030c3:	mov    edx,0xc40dabbe
  4030c8:	xchg   edi,eax
  4030c9:	pop    ecx
  4030ca:	scas   al,BYTE PTR es:[edi]
  4030cb:	faddp  st(2),st
  4030cd:	mov    bl,0xb8
  4030cf:	add    al,0x88
  4030d1:	imul   ebp,DWORD PTR [edx+0x77],0x6d
  4030d5:	jb     0x4030cf
  4030d7:	mov    ?,WORD PTR [ebp+0x3]
  4030da:	push   edx
  4030db:	push   0xff35e0fc
  4030e0:	fnstcw WORD PTR [ebx+edx*2]
  4030e3:	adc    BYTE PTR [edi-0x36],0xad
  4030e7:	sti    
  4030e8:	mov    esp,0x98e198f0
  4030ed:	sub    ebp,ebx
  4030ef:	dec    eax
  4030f0:	sbb    DWORD PTR [ebx-0x255d91da],ebp
  4030f6:	mov    ebx,0xbb21fc32
  4030fb:	ins    DWORD PTR es:[edi],dx
  4030fc:	push   edx
  4030fd:	addr16 sbb al,0xad
  403100:	mov    ?,WORD PTR [eax+0x69742e32]
  403106:	repnz fldcw WORD PTR [ebx]
  403109:	jl     0x4030f5
  40310b:	adc    esp,ecx
  40310d:	data16 aas 
  40310f:	or     DWORD PTR [esi+ebp*8+0xc38bd02],eax
  403116:	loop   0x403112
  403118:	jb     0x40316d
  40311a:	jnp    0x4030a2
  40311c:	popa   
  40311d:	ret    
  40311e:	fwait
  40311f:	jmp    DWORD PTR [eax-0x6d]
  403122:	fdiv   DWORD PTR [edi+0x640702c0]
  403128:	mov    ah,0x93
  40312a:	xchg   esi,eax
  40312b:	shl    BYTE PTR [bp+di-0x1504],cl
  403130:	pop    esi
  403131:	push   es
  403132:	out    0xa5,eax
  403134:	rcr    BYTE PTR [ebp+0x5f57cf2],0x8a
  40313b:	fldenv [esi]
  40313d:	(bad)  
  40313e:	adc    BYTE PTR [edx-0x25565e26],al
  403144:	xchg   edi,eax
  403145:	fmul   st,st(1)
  403147:	jp     0x403199
  403149:	add    dl,BYTE PTR [ecx-0x62]
  40314c:	push   0x3494b026
  403151:	lods   al,BYTE PTR ds:[esi]
  403152:	mov    ah,0x61
  403154:	push   ebp
  403155:	and    ecx,DWORD PTR [eax-0x66f0afa6]
  40315b:	jg     0x4030f3
  40315d:	and    ebp,DWORD PTR [eax-0x57b51659]
  403163:	sbb    esi,edx
  403165:	in     al,dx
  403166:	dec    eax
  403167:	push   es
  403168:	mov    ebx,0xf2135125
  40316d:	or     BYTE PTR [edx+0x37cfad88],al
  403173:	std    
  403174:	and    eax,edi
  403176:	mov    ebp,0xb31a9a9b
  40317b:	jb     0x403131
  40317d:	push   ecx
  40317e:	xor    eax,0xf3d01629
  403183:	mov    bl,0xa
  403185:	fs jne 0x40317c
  403188:	cli    
  403189:	xor    ecx,DWORD PTR [edx+edi*1-0x9b87b91]
  403190:	mov    ecx,0x70e804ba
  403195:	ins    DWORD PTR es:[edi],dx
  403196:	lods   al,BYTE PTR ds:[esi]
  403197:	add    BYTE PTR [esi-0x1f],dh
  40319a:	aad    0x75
  40319c:	push   edi
  40319d:	sub    DWORD PTR [edx],eax
  40319f:	sar    DWORD PTR [ecx],cl
  4031a1:	cmp    eax,0xa9189150
  4031a6:	push   ebp
  4031a7:	or     ebp,0x391badbe
  4031ad:	sbb    BYTE PTR [ebp+0x7cc5745d],al
  4031b3:	adc    eax,0xd80ff6f
  4031b8:	movzx  eax,BYTE PTR [eax+0x1e]
  4031bc:	mov    dl,0x9c
  4031be:	aaa    
  4031bf:	jo     0x40315c
  4031c1:	outs   dx,BYTE PTR ds:[esi]
  4031c2:	pushf  
  4031c3:	dec    esi
  4031c4:	in     al,0x4e
  4031c6:	sbb    BYTE PTR [ecx+edi*2],al
  4031c9:	and    DWORD PTR [ebx],esi
  4031cb:	outs   dx,BYTE PTR ds:[esi]
  4031cc:	adc    ebx,DWORD PTR [ecx]
  4031ce:	mov    edi,0x3e9fae20
  4031d3:	test   eax,0xc96240b8
  4031d8:	jmp    0xcd94b8ee
  4031dd:	pop    esp
  4031de:	stc    
  4031df:	pop    es
  4031e0:	leave  
  4031e1:	nop
  4031e2:	add    eax,0x1d72f789
  4031e7:	mov    dl,ah
  4031e9:	into   
  4031ea:	dec    esp
  4031eb:	dec    eax
  4031ec:	jmp    0x40318c
  4031ee:	cmp    edx,ebp
  4031f0:	retf   
  4031f1:	adc    BYTE PTR [ebp-0x48c40cdf],al
  4031f7:	cmc    
  4031f8:	and    al,0xa3
  4031fa:	and    edx,0xffffffe3
  4031fd:	and    edx,ecx
  4031ff:	or     eax,0x9820a1ed
  403204:	jg     0x403249
  403206:	ss ds ja 0x4031f5
  40320a:	mov    esp,0xd153381e
  40320f:	cmp    ch,bl
  403211:	pop    ecx
  403212:	mov    ecx,0xc721dd62
  403217:	loopne 0x4031d2
  403219:	adc    ah,BYTE PTR [esi*1+0x1315f142]
  403220:	pushf  
  403221:	inc    esi
  403222:	das    
  403223:	jne    0x40323a
  403225:	clc    
  403226:	jns    0x403224
  403228:	out    dx,al
  403229:	sub    cl,BYTE PTR [edx+0x73]
  40322c:	xlat   BYTE PTR ds:[ebx]
  40322d:	adc    DWORD PTR [eax+0x6b63f3],ebx
  403233:	bound  ebp,QWORD PTR [ecx+edi*8+0x15]
  403237:	imul   edx,edx,0xcbd43a12
  40323d:	mov    DWORD PTR [edx+0x1a75e477],edi
  403243:	mov    al,ds:0x5636f41b
  403248:	cmc    
  403249:	aad    0x78
  40324b:	pop    ebp
  40324c:	call   0xe6423200
  403251:	pop    ebp
  403252:	jmp    0x40321f
  403254:	ins    BYTE PTR es:[edi],dx
  403255:	pop    eax
  403256:	or     eax,0x85946c6d
  40325b:	xor    dh,bl
  40325d:	mov    ah,0x40
  40325f:	jl     0x4032b8
  403261:	cdq    
  403262:	loop   0x403228
  403264:	scas   eax,DWORD PTR es:[edi]
  403265:	retf   
  403266:	mov    dl,0x27
  403268:	bnd js 0x4032c0
  40326b:	push   esi
  40326c:	loop   0x403222
  40326e:	push   cs
  40326f:	outs   dx,DWORD PTR ds:[esi]
  403270:	ss in  al,dx
  403272:	mov    ebp,0xc7846e7b
  403277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403278:	cmp    bh,BYTE PTR [ebx]
  40327a:	in     al,0xab
  40327c:	cs test al,0x47
  40327f:	and    edi,DWORD PTR [eax]
  403281:	dec    ebp
  403282:	retf   
  403283:	aas    
  403284:	popa   
  403285:	mov    ebp,0x340f85b1
  40328a:	leave  
  40328b:	out    0x97,eax
  40328d:	xor    eax,0x870f816d
  403292:	lahf   
  403293:	fld    DWORD PTR ds:[ecx]
  403296:	out    0x7e,eax
  403298:	mov    WORD PTR [ebx+0x79],gs
  40329b:	call   0xfacc8f24
  4032a0:	ret    
  4032a1:	xor    al,0xec
  4032a3:	shr    DWORD PTR [edi+0x2f2f25e6],0x21
  4032aa:	xchg   edi,eax
  4032ab:	repnz shl BYTE PTR [edi-0x7e],0x6b
  4032b0:	(bad)  
  4032b1:	adc    eax,0x10ddd012
  4032b6:	inc    edi
  4032b7:	pop    eax
  4032b8:	push   ecx
  4032b9:	sti    
  4032ba:	ds add eax,0xa4d022f0
  4032c0:	sub    eax,0xe8118c9d
  4032c5:	mov    al,0x2b
  4032c7:	(bad)  
  4032c8:	loopne 0x403349
  4032ca:	repz inc edi
  4032cc:	daa    
  4032cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032ce:	xchg   cl,ah
  4032d0:	xor    bl,BYTE PTR [eax+edi*8+0x44]
  4032d4:	and    al,0xf2
  4032d6:	cmp    al,0x13
  4032d8:	push   ecx
  4032d9:	test   eax,0x4b36f3b8
  4032de:	imul   ebp,eax,0xffffff9f
  4032e1:	je     0x403287
  4032e3:	in     eax,dx
  4032e4:	ins    BYTE PTR es:[edi],dx
  4032e5:	jbe    0x4032d2
  4032e7:	dec    eax
  4032e8:	mov    eax,0x4cac245
  4032ed:	inc    esp
  4032ee:	or     al,0xba
  4032f0:	mov    ebp,0xaa598dfd
  4032f5:	cmp    eax,0x279405b6
  4032fa:	add    edx,edx
  4032fc:	stos   DWORD PTR es:[edi],eax
  4032fd:	inc    ebp
  4032fe:	jl     0x4032df
  403300:	pushf  
  403301:	fwait
  403302:	(bad)  
  403303:	in     al,0x2b
  403305:	mov    ecx,0x9de859e6
  40330a:	dec    ebx
  40330b:	out    dx,al
  40330c:	cmp    al,0x86
  40330e:	cdq    
  40330f:	sub    ch,BYTE PTR [edi-0x2f236eb8]
  403315:	sub    BYTE PTR [ebx-0x689ef8d7],dh
  40331b:	dec    esi
  40331c:	jp     0x4032f9
  40331e:	inc    esp
  40331f:	in     al,0x98
  403321:	mov    ebp,0x7dfdef2b
  403326:	mov    edx,0xa0d9d851
  40332b:	(bad)  
  40332c:	into   
  40332d:	pop    ss
  40332e:	ins    DWORD PTR es:[edi],dx
  40332f:	sub    ch,cl
  403331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403332:	stc    
  403333:	jg     0x4032f7
  403335:	xor    BYTE PTR [esi],bl
  403337:	inc    edx
  403338:	jg     0x403310
  40333a:	jl     0x403392
  40333c:	ins    DWORD PTR es:[edi],dx
  40333d:	pop    edi
  40333e:	pop    esi
  40333f:	pop    eax
  403340:	mov    edx,0x249fa141
  403345:	sub    DWORD PTR [eax],ebp
  403347:	mov    edi,0xf6d598e6
  40334c:	(bad)  
  40334d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40334e:	sbb    eax,0xd69ff6bf
  403353:	sub    ah,cl
  403355:	adc    eax,0xf40fc13
  40335a:	mov    edi,0xbd1718f3
  40335f:	cmp    eax,0xf125d105
  403364:	inc    ebx
  403365:	fdiv   DWORD PTR [edi-0x27]
  403368:	imul   ecx,esp,0xffffff84
  40336b:	xor    ecx,DWORD PTR [esi+0x2ac42dd]
  403371:	scas   eax,DWORD PTR es:[edi]
  403372:	jo     0x4033ee
  403374:	rcl    DWORD PTR [eax],1
  403376:	mov    dh,0xf3
  403378:	ret    
  403379:	cmp    eax,0xb8e10c90
  40337e:	cmp    DWORD PTR [eax+0x31],esi
  403381:	ins    DWORD PTR es:[edi],dx
  403382:	mov    eax,DWORD PTR [eax]
  403384:	cs push cs
  403386:	cmc    
  403387:	ins    BYTE PTR es:[edi],dx
  403388:	dec    ebx
  403389:	cwde   
  40338a:	cld    
  40338b:	cld    
  40338c:	sub    DWORD PTR ds:[eax+0x34],ecx
  403390:	cmp    ecx,DWORD PTR [edi+0xf]
  403393:	ret    
  403394:	or     eax,0x75111d6a
  403399:	lock inc ecx
  40339b:	pop    esp
  40339c:	pop    ebx
  40339d:	popa   
  40339e:	mov    cl,BYTE PTR [ecx-0x33]
  4033a1:	mov    al,0x1c
  4033a3:	hlt    
  4033a4:	outs   dx,BYTE PTR ds:[esi]
  4033a5:	xor    al,BYTE PTR [eax]
  4033a7:	push   ss
  4033a8:	xor    dl,ah
  4033aa:	ds loopne 0x403399
  4033ad:	bound  edx,QWORD PTR [eax]
  4033af:	xchg   edi,eax
  4033b0:	pusha  
  4033b1:	dec    esp
  4033b2:	hlt    
  4033b3:	cld    
  4033b4:	xchg   ebp,eax
  4033b5:	mov    eax,0x4c826c2b
  4033ba:	pop    edi
  4033bb:	enter  0xf316,0xd1
  4033bf:	addr16 fdivp st(7),st
  4033c2:	or     dl,BYTE PTR [ecx-0x1dadb3b2]
  4033c8:	int3   
  4033c9:	or     DWORD PTR [esi+esi*8-0x72],esp
  4033cd:	pop    eax
  4033ce:	leave  
  4033cf:	fistp  WORD PTR [ebx]
  4033d1:	in     eax,dx
  4033d2:	and    DWORD PTR [ebx+ecx*4-0x7e],edx
  4033d6:	mov    ds:0x9041e76,eax
  4033db:	(bad)  
  4033dc:	out    dx,eax
  4033dd:	scas   al,BYTE PTR es:[edi]
  4033de:	in     al,dx
  4033df:	dec    edi
  4033e0:	add    dh,BYTE PTR [ebp+0x51]
  4033e3:	push   edx
  4033e4:	jo     0x4033b1
  4033e6:	addr16 call 0xabea08f4
  4033ec:	test   dh,0x72
  4033ef:	sti    
  4033f0:	test   DWORD PTR ds:0x92dcae2e,edx
  4033f6:	or     BYTE PTR [ecx],cl
  4033f8:	mov    esi,0x41b8b605
  4033fd:	enter  0xb4c8,0x54
  403401:	sub    al,BYTE PTR [eax+0x18]
  403404:	test   eax,0xef7a3003
  403409:	test   BYTE PTR [ebp-0x1b1453c5],bh
  40340f:	fabs   
  403411:	push   esp
  403412:	fmul   DWORD PTR [edi-0xf]
  403415:	pushf  
  403416:	inc    ebp
  403417:	fbstp  TBYTE PTR [ebx+0x22a62e36]
  40341d:	pusha  
  40341e:	jo     0x4033ec
  403420:	sbb    ch,BYTE PTR [ebp-0x5f]
  403423:	dec    esp
  403424:	call   0x6333:0xcf00729
  40342b:	mov    ebx,0x80674930
  403430:	push   0xffffffbe
  403432:	shl    BYTE PTR [eax-0x4aa5dc78],0x1
  403439:	sub    eax,0x3bf179da
  40343e:	sub    dh,BYTE PTR [eax-0x1b]
  403441:	call   0x2a5d3c1
  403446:	gs aas 
  403448:	xlat   BYTE PTR ds:[ebx]
  403449:	push   es
  40344a:	pop    ss
  40344b:	fxtract 
  40344d:	push   cs
  40344e:	xchg   ecx,eax
  40344f:	jl     0x403449
  403451:	add    DWORD PTR [eax],ebx
  403453:	in     eax,dx
  403454:	xchg   DWORD PTR [eax],esp
  403456:	sahf   
  403457:	pop    es
  403458:	fcmovb st,st(4)
  40345b:	fisubr WORD PTR [ecx]
  40345d:	mov    bh,0xcf
  40345f:	inc    esp
  403460:	add    esp,DWORD PTR [eax+0x1aa1291a]
  403466:	popf   
  403467:	or     DWORD PTR [edx+0x61],0xe7a4fe78
  40346e:	cmp    ah,BYTE PTR [ecx]
  403470:	dec    esi
  403471:	mov    ecx,0x5a0a8d00
  403476:	(bad)  
  403477:	fnstsw WORD PTR ds:0x62983e9
  40347d:	inc    esp
  40347e:	jae    0x403495
  403480:	ins    DWORD PTR es:[edi],dx
  403481:	ret    0x8180
  403484:	mov    dh,0x71
  403486:	repnz pop ecx
  403488:	(bad)  
  403489:	in     al,0xc0
  40348b:	adc    eax,0x98ab48ec
  403490:	pop    ebx
  403491:	mul    BYTE PTR [edi+0x4a]
  403494:	push   0x5c
  403496:	jecxz  0x4034d3
  403498:	mov    eax,ds:0x33ace14c
  40349d:	inc    ebp
  40349e:	jp     0x40349a
  4034a0:	pushf  
  4034a1:	lods   al,BYTE PTR ds:[esi]
  4034a2:	push   0xd2ff8ba9
  4034a7:	push   ebx
  4034a8:	pop    ebp
  4034a9:	gs scas al,BYTE PTR es:[edi]
  4034ab:	push   ecx
  4034ac:	dec    edi
  4034ad:	mov    DWORD PTR [ebp+0x4c],0x86cb43f4
  4034b4:	popf   
  4034b5:	cld    
  4034b6:	es jecxz 0x4034d4
  4034b9:	into   
  4034ba:	in     al,0xf0
  4034bc:	je     0x403506
  4034be:	jle    0x4034ac
  4034c0:	clc    
  4034c1:	cmc    
  4034c2:	cmp    ebx,eax
  4034c4:	ror    DWORD PTR [esi],cl
  4034c6:	fld    DWORD PTR [eax-0x56]
  4034c9:	out    0x39,eax
  4034cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034cd:	jecxz  0x403534
  4034cf:	mov    ?,WORD PTR [esi]
  4034d1:	and    eax,0x6f4a5f98
  4034d6:	retf   0x3123
  4034d9:	shl    ecx,0xd3
  4034dc:	add    eax,0xacec606d
  4034e1:	lea    edi,[ebp+ebp*8-0x1a5e0a8e]
  4034e8:	leave  
  4034e9:	aaa    
  4034ea:	les    eax,FWORD PTR [eax+0xbfed77]
  4034f0:	retf   
  4034f1:	push   0x2e
  4034f3:	in     al,dx
  4034f4:	in     eax,0x29
  4034f6:	cwde   
  4034f7:	ret    0x32f8
  4034fa:	jo     0x4034c2
  4034fc:	and    esi,DWORD PTR [ebx+0x666a56f5]
  403502:	retf   
  403503:	retf   0x3e16
  403506:	mov    ?,WORD PTR ds:0xb60728d5
  40350c:	dec    ebp
  40350d:	dec    ebp
  40350e:	xor    edi,DWORD PTR [eax+eiz*4+0x69a9597a]
  403515:	mov    ecx,0xe570e3ab
  40351a:	icebp  
  40351b:	mov    bh,0x49
  40351d:	push   ebp
  40351e:	les    edx,FWORD PTR [esi+0x16]
  403521:	loop   0x40352b
  403523:	sbb    BYTE PTR [ebx-0x2a],cl
  403526:	bound  ebx,QWORD PTR [ebx-0xb]
  403529:	jno    0x403593
  40352b:	add    bh,al
  40352d:	mov    dh,0x17
  40352f:	lods   eax,DWORD PTR ds:[esi]
  403530:	pop    ebp
  403531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403532:	popf   
  403533:	dec    edx
  403534:	mov    ds:0x158d7de6,al
  403539:	dec    ebx
  40353a:	imul   ecx,DWORD PTR [ebx],0xe0c4df30
  403540:	pop    es
  403541:	je     0x4035a2
  403543:	mov    esp,0xdff59402
  403548:	ds loop 0x40358c
  40354b:	pop    eax
  40354c:	xor    BYTE PTR [ecx-0x636f53b],0xdd
  403553:	mov    ecx,0x743f0d40
  403558:	sbb    bh,BYTE PTR [ebp+0x7c4ad60c]
  40355e:	sub    bl,dh
  403560:	outs   dx,BYTE PTR ds:[esi]
  403561:	or     al,0x63
  403563:	sahf   
  403564:	cmp    BYTE PTR [eax+0x7c],0x4e
  403568:	rol    DWORD PTR [edx+0x3b],cl
  40356b:	inc    esi
  40356c:	shr    DWORD PTR [esi],0x5c
  40356f:	pop    ds
  403570:	stos   DWORD PTR es:[edi],eax
  403571:	aad    0x3c
  403573:	inc    esi
  403574:	pop    ss
  403575:	(bad)  
  403576:	xchg   esp,eax
  403577:	cmp    BYTE PTR ds:0xa1efe43b,cl
  40357d:	mov    dl,0x16
  40357f:	jmp    0x36d76aeb
  403584:	jecxz  0x403543
  403586:	and    DWORD PTR [esi+0x4c],eax
  403589:	sbb    BYTE PTR [edi+0xf],0x52
  40358d:	xchg   ebx,eax
  40358e:	jns    0x40352e
  403590:	mov    eax,DWORD PTR [edx-0x4400391b]
  403596:	add    edx,DWORD PTR [edx]
  403598:	mov    eax,ds:0x60f7159a
  40359d:	mov    DWORD PTR [esp-0xa21f60a],ebx
  4035a4:	outs   dx,BYTE PTR ds:[esi]
  4035a5:	xchg   ebx,ebx
  4035a7:	add    eax,0x8cfc98f2
  4035ac:	inc    eax
  4035ad:	ret    
  4035ae:	(bad)  
  4035af:	mov    eax,0x9d8ea22c
  4035b4:	mov    bh,0xb6
  4035b6:	imul   edi,edi,0x9b44be56
  4035bc:	and    BYTE PTR [ebx+0x15],0xa5
  4035c0:	aaa    
  4035c1:	jnp    0x403555
  4035c3:	das    
  4035c4:	shl    BYTE PTR [ecx-0x34],1
  4035c7:	in     eax,0xe7
  4035c9:	in     al,0x44
  4035cb:	arpl   sp,si
  4035cd:	mov    ecx,DWORD PTR [edx+0x6e95d648]
  4035d3:	gs dec ebx
  4035d5:	mov    ebx,DWORD PTR [ebp+0x3f]
  4035d8:	sub    edx,DWORD PTR [ecx+ebp*4]
  4035db:	mov    bh,0x47
  4035dd:	mov    fs,ecx
  4035df:	out    dx,al
  4035e0:	jmp    0xe884:0x555d4ba1
  4035e7:	popf   
  4035e8:	out    0xf9,al
  4035ea:	dec    edi
  4035eb:	loopne 0x403588
  4035ed:	xchg   BYTE PTR [ebp-0x69],ch
  4035f0:	mov    bl,cl
  4035f2:	in     al,0xa3
  4035f4:	mov    dh,bh
  4035f6:	lods   al,BYTE PTR ds:[esi]
  4035f7:	fmul   QWORD PTR [edi-0x29]
  4035fa:	neg    BYTE PTR [eax+0x79]
  4035fd:	pop    ecx
  4035fe:	jae    0x40358b
  403600:	loopne 0x4035f4
  403602:	lock fcomip st,st(5)
  403605:	sub    eax,0x240d9fc0
  40360a:	ja     0x403600
  40360c:	cmp    DWORD PTR [esi+0xc005604],0x48
  403613:	fwait
  403614:	lods   eax,DWORD PTR ds:[esi]
  403615:	nop
  403616:	or     eax,0x443a2573
  40361b:	call   DWORD PTR [eax-0x556b7c4c]
  403621:	jp     0x4035f0
  403623:	and    ch,bl
  403625:	jae    0x403670
  403627:	stos   DWORD PTR es:[edi],eax
  403628:	out    dx,al
  403629:	mov    ch,0x62
  40362b:	inc    ecx
  40362c:	push   es
  40362d:	aas    
  40362e:	mov    ecx,0x6bf4f1e9
  403633:	or     ch,BYTE PTR [ebx+0x405c0cc1]
  403639:	xchg   esp,eax
  40363a:	hlt    
  40363b:	fwait
  40363c:	dec    ebx
  40363d:	mov    eax,0xd8703c50
  403642:	cmp    al,0x2c
  403644:	shl    esp,cl
  403646:	popf   
  403647:	mov    al,ds:0xc2709459
  40364c:	or     eax,DWORD PTR [eax+0x4a]
  40364f:	loope  0x40366c
  403651:	loopne 0x4036d1
  403653:	iret   
  403654:	push   0x34f93218
  403659:	fnsave ds:0xa08c0f9
  40365f:	pop    ebp
  403660:	sub    eax,0xe6af0e1c
  403665:	arpl   WORD PTR [ebp+edi*4+0x481ee249],di
  40366c:	pop    edi
  40366d:	mov    ?,WORD PTR [ecx+0x44]
  403670:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403672:	pop    es
  403673:	cmp    eax,DWORD PTR [edi+0x21fcb49]
  403679:	dec    esp
  40367a:	jbe    0x403681
  40367c:	bound  eax,QWORD PTR [eax+0x1f58b289]
  403682:	cmc    
  403683:	dec    edx
  403684:	mov    eax,0x1cbc60cb
  403689:	sub    ah,ch
  40368b:	jle    0x4036dc
  40368d:	iret   
  40368e:	cmp    al,0x95
  403690:	and    eax,0xd71c3264
  403695:	adc    al,0x1b
  403697:	das    
  403698:	inc    eax
  403699:	jno    0x403719
  40369b:	jne    0x403657
  40369d:	call   0x5368:0xcbde0d07
  4036a4:	out    dx,al
  4036a5:	mov    ebx,0x49ec0b7f
  4036aa:	mov    ah,0xcf
  4036ac:	stc    
  4036ad:	xchg   edi,eax
  4036ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036af:	sbb    eax,0x76562150
  4036b4:	inc    ebp
  4036b5:	xchg   ebx,eax
  4036b6:	in     al,0xd9
  4036b8:	(bad)  
  4036b9:	fistp  QWORD PTR [eax]
  4036bb:	mov    ds,WORD PTR ds:[ebx+0x350e9b28]
  4036c2:	jl     0x4036b3
  4036c4:	xor    edx,DWORD PTR [ecx+eax*4+0x686f395c]
  4036cb:	pop    eax
  4036cc:	ds cmp ebp,DWORD PTR ds:[ebx+ebx*8+0x2c7529af]
  4036d5:	and    esp,DWORD PTR [edx+0x5c]
  4036d8:	adc    dl,ah
  4036da:	(bad)  
  4036db:	enter  0x1d7a,0xd8
  4036df:	test   BYTE PTR [edi-0x47],cl
  4036e2:	adc    ch,cl
  4036e4:	cmp    al,0x13
  4036e6:	pop    ss
  4036e7:	jbe    0x4036c5
  4036e9:	cli    
  4036ea:	mov    ecx,0x5e624c93
  4036ef:	add    esp,esp
  4036f1:	aas    
  4036f2:	fstp   st(5)
  4036f4:	mov    edi,0x7ceae30d
  4036f9:	mov    DWORD PTR [ebx+eiz*1],ebp
  4036fc:	call   0xf04f7a0a
  403701:	xchg   edi,eax
  403702:	or     eax,0x96487409
  403707:	call   0x4d54faae
  40370c:	icebp  
  40370d:	mov    ebp,0xda98a7ec
  403712:	sbb    eax,ebx
  403714:	cli    
  403715:	scas   al,BYTE PTR es:[edi]
  403716:	mov    al,0x1f
  403718:	fldcw  WORD PTR [edi+0x58aa0832]
  40371e:	sti    
  40371f:	test   BYTE PTR [eax],dh
  403721:	sbb    dh,al
  403723:	data16 ins BYTE PTR es:[edi],dx
  403725:	jns    0x40370a
  403727:	mov    al,0xc5
  403729:	ror    DWORD PTR [eax+0x59310f61],1
  40372f:	mov    edi,0x32c8fee3
  403734:	mov    dh,0xa9
  403736:	jp     0x4036d6
  403738:	jmp    0xd879:0x502cefd1
  40373f:	jo     0x4037b8
  403741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403742:	fcmovnu st,st(7)
  403744:	out    0xb,eax
  403746:	xor    eax,0xa237ee63
  40374b:	mov    ds:0x10dccde3,eax
  403750:	fimul  WORD PTR [edx-0x6ae9053f]
  403756:	clc    
  403757:	call   DWORD PTR [esi+0x1d]
  40375a:	cwde   
  40375b:	clc    
  40375c:	loop   0x4037c7
  40375e:	test   BYTE PTR [ebp-0x29528744],ah
  403764:	popa   
  403765:	xchg   edx,eax
  403766:	cmp    BYTE PTR [esi+0x17129341],ch
  40376c:	add    ch,BYTE PTR [eax-0x14ade139]
  403772:	rcr    DWORD PTR ds:0x847b572,cl
  403778:	in     eax,dx
  403779:	dec    esi
  40377a:	jmp    0x2bec695d
  40377f:	sar    ah,cl
  403781:	pop    DWORD PTR [edi+0x2d816699]
  403787:	in     eax,dx
  403788:	ins    BYTE PTR es:[edi],dx
  403789:	sbb    al,0x6e
  40378b:	pop    ss
  40378c:	mov    WORD PTR [esi],?
  40378e:	pop    ecx
  40378f:	or     eax,0x57e9f7c0
  403794:	inc    ebx
  403795:	cwde   
  403796:	and    bh,BYTE PTR [edx-0x42]
  403799:	xchg   ecx,eax
  40379a:	shl    DWORD PTR [ebx+ecx*8-0x1a],0x8f
  40379f:	inc    edx
  4037a0:	jecxz  0x4037ff
  4037a2:	jge    0x4037c4
  4037a4:	ficom  DWORD PTR [eax+0x63]
  4037a7:	mov    bl,0xc2
  4037a9:	push   esi
  4037aa:	sub    ecx,DWORD PTR cs:[edi+0x2c89b71d]
  4037b1:	or     BYTE PTR [edx+0x1e81350a],dh
  4037b7:	ds pop edi
  4037b9:	xor    edi,esp
  4037bb:	aas    
  4037bc:	push   ebp
  4037bd:	dec    ebp
  4037be:	(bad)  [edx]
  4037c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037c1:	(bad)  
  4037c2:	or     eax,0xcbd10aab
  4037c7:	dec    edx
  4037c8:	mov    ds:0xbd74df31,eax
  4037cd:	and    BYTE PTR [eax],dh
  4037cf:	mov    dh,0x2b
  4037d1:	or     al,0x2e
  4037d3:	cmp    BYTE PTR [esi-0x23],dl
  4037d6:	dec    eax
  4037d7:	repnz mov al,ds:0x2510ed3a
  4037dd:	jecxz  0x4037b0
  4037df:	jb     0x4037e0
  4037e1:	stc    
  4037e2:	or     eax,0xf4cf0f3b
  4037e7:	xor    DWORD PTR [esp+ecx*2],edi
  4037ea:	bound  esi,QWORD PTR [ebx]
  4037ec:	jne    0x403779
  4037ee:	inc    ecx
  4037ef:	scas   eax,DWORD PTR es:[edi]
  4037f0:	add    DWORD PTR [ebp+0x5bfe6484],ebp
  4037f6:	dec    ebp
  4037f7:	mov    ebp,0x7f5a3b86
  4037fc:	cmp    DWORD PTR [edx],edx
  4037fe:	fstp   TBYTE PTR [esi]
  403800:	and    ecx,ecx
  403802:	shl    ebp,cl
  403804:	sbb    al,0xbe
  403806:	pop    DWORD PTR [edi]
  403808:	stos   DWORD PTR es:[edi],eax
  403809:	mov    dh,0xad
  40380b:	sbb    eax,0x7fe6b5e2
  403810:	xchg   esp,eax
  403811:	shl    DWORD PTR [ebp-0x20],cl
  403814:	into   
  403815:	mov    eax,DWORD PTR [ebp-0x10]
  403818:	mov    ecx,DWORD PTR [ebp-0x10]
  40381b:	xor    eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x428eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x428e97,0x428e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x428e4b,0x428eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x428e2b
  403852:	add    DWORD PTR ds:0x428eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x428e57,0x1e
  403865:	cmp    DWORD PTR ds:0x428e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x428e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x42a9eb
  40388d:	cmp    DWORD PTR ds:0x428e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x428e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x428e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x428e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x428e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x428e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x428e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x428ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x428ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x428e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x428eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x428e57
  40392d:	xor    DWORD PTR ds:0x428e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x428e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x428e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x428e73,edx
  403953:	cmp    DWORD PTR ds:0x428e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x428e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x42a9ef
  403973:	cmp    DWORD PTR ds:0x428e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x428e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x428e83,0x428e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x428e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x428e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x428ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x428e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x428ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x428e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x428ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x428e37,0x428eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x428e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x428e9b,0x0
  403a3e:	mov    eax,ds:0x428e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x428e9b,eax
  403a49:	cmp    DWORD PTR ds:0x428e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x42a9f3
  403a67:	cmp    DWORD PTR ds:0x428e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x428e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x428e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x428e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x428ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x428eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x428ea7,0x428e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x428ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x428e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x428e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x4292fb
  403aec:	mov    eax,ds:0x429787
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x428e33,0x15
  403b03:	cmp    DWORD PTR ds:0x428e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x428e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x428e23
  403b27:	call   DWORD PTR ds:0x42a9f7
  403b2d:	mov    ecx,DWORD PTR ds:0x428e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x428e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x428e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x428e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x428ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	add    bl,BYTE PTR [edi+0x1e]
  403e73:	loope  0x403ebc
  403e75:	pusha  
  403e76:	add    DWORD PTR [ebx-0x7c7c9fb9],0xffffffe1
  403e7d:	rcl    BYTE PTR [esi+ebp*8+0x3cf53ce6],0x48
  403e85:	lock xor ebp,DWORD PTR [ecx-0x4f]
  403e89:	mov    dh,BYTE PTR [ecx-0x5cf6dc44]
  403e8f:	or     dh,BYTE PTR [edi]
  403e91:	out    0xc2,eax
  403e93:	sub    ch,BYTE PTR [esi-0x457bdb2d]
  403e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e9a:	bound  ecx,QWORD PTR ds:0xbc634fe1
  403ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ea1:	data16 mov bh,0x7c
  403ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ea5:	sbb    al,0xd1
  403ea7:	cmp    eax,0x816ac664
  403eac:	imul   ebx,DWORD PTR [edi+0x5d],0xffffff93
  403eb0:	in     al,0x39
  403eb2:	fidiv  DWORD PTR [edi+ebx*8]
  403eb5:	dec    ecx
  403eb6:	cmp    al,0x45
  403eb8:	aad    0x24
  403eba:	sahf   
  403ebb:	daa    
  403ebc:	bound  esi,QWORD PTR [edx+0x539164d2]
  403ec2:	xor    esp,DWORD PTR [ecx]
  403ec4:	cmp    al,0xd2
  403ec6:	mov    ebp,0x421c3f64
  403ecb:	inc    ebp
  403ecc:	cmp    edx,DWORD PTR [eax-0x7a]
  403ecf:	sti    
  403ed0:	inc    esp
  403ed1:	loopne 0x403f51
  403ed3:	xor    BYTE PTR [ecx+0x5bb4b378],al
  403ed9:	cmc    
  403eda:	(bad)  
  403edb:	pop    esp
  403edc:	and    dl,BYTE PTR [edx+0x5e642fd5]
  403ee2:	repz adc ecx,eax
  403ee5:	repnz ins BYTE PTR es:[edi],dx
  403ee7:	inc    esp
  403ee8:	push   esi
  403ee9:	rol    DWORD PTR [edi+0x5c45acb3],cl
  403eef:	jge    0x403f3a
  403ef1:	pop    es
  403ef2:	dec    ebp
  403ef3:	dec    ebx
  403ef4:	add    cl,BYTE PTR [eax+0x69]
  403ef7:	mov    eax,es
  403ef9:	mov    dl,0xce
  403efb:	lock in al,dx
  403efd:	inc    ebp
  403efe:	in     al,0x14
  403f00:	fadd   QWORD PTR ds:0xc70fb928
  403f06:	jecxz  0x403f6b
  403f08:	pop    edx
  403f09:	or     ah,BYTE PTR [ebp+0x6f6d77f9]
  403f0f:	ret    0x52af
  403f12:	or     cl,BYTE PTR [eax+ebx*4-0x21]
  403f16:	add    BYTE PTR [eax-0x15928f1d],al
  403f1c:	aas    
  403f1d:	retf   0xcdf8
  403f20:	(bad)  [edi-0x69]
  403f23:	xor    DWORD PTR [esi-0x7a],edx
  403f26:	out    dx,al
  403f27:	sbb    DWORD PTR [edx],edx
  403f29:	adc    al,BYTE PTR [esi]
  403f2b:	aas    
  403f2c:	mov    ch,0x45
  403f2e:	stos   DWORD PTR es:[edi],eax
  403f2f:	sbb    DWORD PTR [ebx+0x4be13253],eax
  403f35:	sub    bh,BYTE PTR [edi+0x37b83e23]
  403f3b:	mul    DWORD PTR [edx+0x1d316779]
  403f41:	inc    eax
  403f42:	scas   eax,DWORD PTR es:[edi]
  403f43:	cmc    
  403f44:	sti    
  403f45:	retf   0xb0d3
  403f48:	lods   eax,DWORD PTR ds:[esi]
  403f49:	stos   DWORD PTR es:[edi],eax
  403f4a:	inc    edx
  403f4b:	dec    ebx
  403f4c:	inc    esi
  403f4d:	mov    edx,0xa3ce0db6
  403f52:	cmp    al,BYTE PTR [ebx+0x2164f107]
  403f58:	cmc    
  403f59:	jo     0x403f42
  403f5b:	cmp    al,0x89
  403f5d:	retw   
  403f5f:	pop    esp
  403f60:	outs   dx,DWORD PTR ds:[esi]
  403f61:	jle    0x403fd0
  403f63:	xchg   edx,eax
  403f64:	ds das 
  403f66:	imul   ebp,esi,0x101ad524
  403f6c:	cwde   
  403f6d:	push   ds
  403f6e:	pop    esi
  403f6f:	or     BYTE PTR [edx+0x13],dh
  403f72:	call   0x5749:0xd61c70e7
  403f79:	or     esp,DWORD PTR [edi-0x19]
  403f7c:	icebp  
  403f7d:	pop    ebp
  403f7e:	jo     0x403fe1
  403f80:	das    
  403f81:	mov    edx,0x3380231e
  403f86:	mov    bh,0x28
  403f88:	aaa    
  403f89:	jnp    0x403f1b
  403f8b:	xchg   ebp,eax
  403f8c:	and    BYTE PTR [edi+0x15],al
  403f8f:	enter  0x1a8d,0x62
  403f93:	jecxz  0x403f39
  403f95:	mov    WORD PTR [ecx],cs
  403f97:	test   DWORD PTR [edx+0x4b],edx
  403f9a:	push   0x4fc63cb6
  403f9f:	inc    esi
  403fa0:	jmp    0xf9da45b9
  403fa5:	sbb    al,0xb6
  403fa7:	xor    DWORD PTR [ecx+edi*4],0x5d
  403fab:	pop    sp
  403fad:	rcr    BYTE PTR [ebp-0x7dd26422],1
  403fb3:	das    
  403fb4:	xlat   BYTE PTR ds:[ebx]
  403fb5:	enter  0x9334,0xc1
  403fb9:	push   edi
  403fba:	inc    ebp
  403fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fbc:	daa    
  403fbd:	daa    
  403fbe:	cmp    al,0xc6
  403fc0:	aad    0x67
  403fc2:	mov    dl,0x56
  403fc4:	push   ebp
  403fc5:	mov    ecx,0xdcee88e1
  403fca:	int    0xa0
  403fcc:	(bad)  
  403fcd:	call   0xb5c8c735
  403fd2:	jmp    0x5a01:0x10354ac9
  403fd9:	push   edx
  403fda:	(bad)  
  403fdb:	(bad)  
  403fdc:	sar    BYTE PTR [ecx-0x1b18a65d],cl
  403fe2:	mov    dh,0x79
  403fe4:	jmp    0x404028
  403fe6:	jne    0x40405a
  403fe8:	lds    esp,FWORD PTR [edi+0x520ba16f]
  403fee:	popf   
  403fef:	lods   al,BYTE PTR ds:[esi]
  403ff0:	fld    st(0)
  403ff2:	mov    ebx,0xc809e622
  403ff7:	mov    eax,0xacbf0948
  403ffc:	mov    ds:0xdeccdb84,al
  404001:	push   ds
  404002:	sbb    eax,0x68faab7e
  404007:	cmp    DWORD PTR [edi],ecx
  404009:	push   es
  40400a:	gs push ds
  40400c:	jl     0x40406b
  40400e:	stc    
  40400f:	and    eax,0xd1aa8ba1
  404014:	stos   BYTE PTR es:[edi],al
  404015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404016:	inc    edx
  404017:	lock fwait
  404019:	inc    edi
  40401a:	add    DWORD PTR [esi-0x1],ebp
  40401d:	mov    ds:0xbe029931,eax
  404023:	jno    0x403fe9
  404025:	popa   
  404026:	sbb    BYTE PTR [esi+0x11b76fcb],0xbd
  40402d:	pop    edx
  40402e:	cmp    eax,0xd8ce3626
  404033:	and    eax,0xbeaa6112
  404038:	pop    edx
  404039:	jno    0x40408d
  40403b:	sub    BYTE PTR [ecx],0xe9
  40403e:	sar    BYTE PTR [edx-0x60],cl
  404041:	and    eax,0xdd51dbb5
  404046:	in     eax,dx
  404047:	add    al,0x46
  404049:	push   0x45
  40404b:	mov    WORD PTR [edx-0xfcd4e63],ds
  404051:	jbe    0x40408a
  404053:	outs   dx,DWORD PTR ds:[esi]
  404054:	jo     0x404060
  404056:	mov    ebp,0x3152ec41
  40405b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40405c:	lods   al,BYTE PTR ds:[esi]
  40405d:	xlat   BYTE PTR ds:[ebx]
  40405e:	and    eax,0x38d3fb93
  404063:	fcmovb st,st(6)
  404065:	scas   eax,DWORD PTR es:[edi]
  404066:	dec    eax
  404067:	jmp    0x21e5:0x32f7ff13
  40406e:	push   edx
  40406f:	pop    eax
  404070:	add    al,0x4c
  404072:	push   esp
  404073:	call   0x6493:0x1be235b4
  40407a:	adc    BYTE PTR [esi-0x23],bh
  40407d:	js     0x4040d7
  40407f:	call   0x80db:0x86f1a515
  404086:	rcl    BYTE PTR [edi+0x27e16513],0xc6
  40408d:	sbb    al,BYTE PTR [edx]
  40408f:	(bad)  
  404090:	jbe    0x40408c
  404092:	push   esi
  404093:	sbb    ch,BYTE PTR [ebp+0x43]
  404096:	inc    eax
  404097:	sti    
  404098:	fdiv   st,st(1)
  40409a:	or     al,0x4
  40409c:	push   0xffffff82
  40409e:	add    DWORD PTR [edx],esi
  4040a0:	and    dh,al
  4040a2:	xchg   esp,eax
  4040a3:	sahf   
  4040a4:	mov    ebx,0x69ad7979
  4040a9:	test   eax,0xb897c6e0
  4040ae:	jno    0x4040f3
  4040b0:	push   ds
  4040b1:	mov    bl,0xdc
  4040b3:	and    DWORD PTR [ecx+edi*2-0x71],esi
  4040b7:	sbb    esp,DWORD PTR ds:0x22c76b3d
  4040bd:	es popa 
  4040bf:	lock push edx
  4040c1:	ja     0x404079
  4040c3:	adc    BYTE PTR [edx-0x2],ch
  4040c6:	cwde   
  4040c7:	inc    edi
  4040c8:	and    esi,DWORD PTR [ebx+eiz*4]
  4040cb:	mov    dl,0xd0
  4040cd:	fcomip st,st(5)
  4040cf:	iret   
  4040d0:	pop    esp
  4040d1:	(bad)  
  4040d3:	cmp    BYTE PTR [esi-0x15],0x3e
  4040d7:	fnstsw WORD PTR [eax]
  4040d9:	and    ch,BYTE PTR [ebp-0x47ece58f]
  4040df:	add    DWORD PTR [edi],0xfffffffb
  4040e2:	into   
  4040e3:	out    dx,al
  4040e4:	adc    esi,DWORD PTR gs:[esp+ecx*1+0x32]
  4040e9:	fidivr WORD PTR [ebp+edi*1+0x64]
  4040ed:	pop    eax
  4040ee:	inc    edx
  4040ef:	xchg   esi,eax
  4040f0:	(bad)  
  4040f1:	fidiv  WORD PTR [edi+0x368fbd3b]
  4040f7:	fist   WORD PTR es:[edx+0x82fe987]
  4040fe:	mov    al,ds:0x6fc8befb
  404103:	push   ss
  404104:	push   eax
  404105:	lock imul ebx,DWORD PTR [ebx-0x20],0xa3bbd411
  40410d:	xchg   edi,eax
  40410e:	jbe    0x4040c3
  404110:	jg     0x4040c3
  404112:	sbb    eax,0x5e659a27
  404117:	adc    esi,DWORD PTR [edi+0x31daa59]
  40411d:	fistp  WORD PTR [ebx]
  40411f:	inc    esi
  404120:	ss loopne 0x40419e
  404123:	fstp   DWORD PTR ds:0xd1f9eb9f
  404129:	push   esi
  40412a:	xor    al,0x9b
  40412c:	inc    eax
  40412d:	imul   ecx,DWORD PTR [esi],0xe33e8764
  404133:	adc    eax,0x32e13c35
  404138:	repz pop esp
  40413a:	jg     0x40415a
  40413c:	fdivr  QWORD PTR [edx]
  40413e:	enterw 0x8ad1,0xda
  404143:	aam    0x1
  404145:	ficom  DWORD PTR [edx+0x6965ddd3]
  40414b:	sar    ch,0x6a
  40414e:	int    0x15
  404150:	jl     0x404128
  404152:	or     eax,0x9f6d1d00
  404157:	cmp    ah,al
  404159:	cmp    eax,DWORD PTR [ecx-0x174c691d]
  40415f:	fisub  WORD PTR [eax-0x20a7e33a]
  404165:	call   0x2059:0x5d65c7f6
  40416c:	sbb    eax,0x57a3d1e9
  404171:	retf   0xbbe0
  404174:	stos   BYTE PTR es:[edi],al
  404175:	sbb    eax,0x7f359d19
  40417a:	mov    DWORD PTR [edi],eax
  40417c:	sub    ah,dl
  40417e:	rol    BYTE PTR [esi+ebp*8],1
  404181:	pusha  
  404182:	mov    esp,0x547c5600
  404187:	repnz leave 
  404189:	aaa    
  40418a:	(bad)  
  40418b:	jg     0x4041c8
  40418d:	mov    esp,0x6089b61f
  404192:	sti    
  404193:	daa    
  404194:	fwait
  404195:	pop    es
  404196:	xchg   esp,eax
  404197:	mov    al,ds:0xb7798bd
  40419c:	pusha  
  40419d:	js     0x404217
  40419f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a2:	inc    esp
  4041a3:	dec    edi
  4041a4:	ins    BYTE PTR es:[edi],dx
  4041a5:	std    
  4041a6:	push   0xb969aeac
  4041ab:	mov    ch,0x16
  4041ad:	sbb    cl,0xd0
  4041b0:	stos   DWORD PTR es:[edi],eax
  4041b1:	mov    eax,0x5b6dacf2
  4041b6:	xor    ebp,edi
  4041b8:	and    al,0xf6
  4041ba:	loopne 0x4041f5
  4041bc:	pop    eax
  4041bd:	adc    esi,DWORD PTR [edi+edi*2-0x112c0f8b]
  4041c4:	mov    esi,0x7b0039d2
  4041c9:	pusha  
  4041ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041cb:	inc    edx
  4041cc:	imul   edi,DWORD PTR [edi-0x49228c08],0x5b4537a5
  4041d6:	int    0x9f
  4041d8:	mov    eax,ds:0xe9eab12f
  4041dd:	inc    ebx
  4041de:	add    eax,0x81ee16ab
  4041e3:	loop   0x404246
  4041e5:	adc    DWORD PTR [edi+0x3fb0810d],ebx
  4041eb:	push   ecx
  4041ec:	fdivr  st,st(5)
  4041ee:	pop    eax
  4041ef:	sar    DWORD PTR [esi-0x7c],1
  4041f2:	inc    esp
  4041f3:	dec    edx
  4041f4:	mov    edx,0xf4920b1b
  4041f9:	mov    ds:0xb9908572,eax
  4041fe:	push   es
  4041ff:	cld    
  404200:	mov    dh,0xce
  404202:	cmp    eax,0x1f93562e
  404207:	pop    ebp
  404208:	jbe    0x404266
  40420a:	dec    edx
  40420b:	inc    edx
  40420c:	jecxz  0x404258
  40420e:	mov    al,ds:0x326c908
  404213:	jbe    0x40424e
  404215:	rcr    eax,1
  404217:	retf   0x22bd
  40421a:	(bad)  
  40421b:	sbb    cl,BYTE PTR [esi-0x53]
  40421e:	mov    esi,0x1e4ef24d
  404223:	xor    BYTE PTR [esi-0x239ad80f],0x67
  40422a:	ins    BYTE PTR es:[edi],dx
  40422b:	sbb    dl,dh
  40422d:	push   edx
  40422e:	(bad)  
  40422f:	dec    ebx
  404230:	dec    ebx
  404231:	lock jnp 0x404211
  404234:	mov    eax,0x5230208d
  404239:	ja     0x404207
  40423b:	test   DWORD PTR [ebx+0x7ccd78bf],esp
  404241:	cmc    
  404242:	or     al,0x32
  404244:	mov    al,ds:0xebb6309d
  404249:	in     eax,0x52
  40424b:	loop   0x4041e7
  40424d:	arpl   WORD PTR [esi-0x28ce2485],di
  404253:	add    ebp,DWORD PTR [edx+0x1bdbb964]
  404259:	loope  0x4041fd
  40425b:	xor    esi,DWORD PTR [ecx+0x14af13e8]
  404261:	jle    0x4041f9
  404263:	push   0xffffffc0
  404265:	fistp  QWORD PTR [edi]
  404267:	ret    
  404268:	iret   
  404269:	xchg   edx,eax
  40426a:	into   
  40426b:	jmp    0xcb3b:0x42fec2e8
  404272:	imul   ecx,DWORD PTR [edi+0x2202cc09],0x3c27c1cd
  40427c:	push   ds
  40427d:	add    eax,0x5f4b8ab3
  404282:	sub    DWORD PTR [ecx+ebx*1],ebp
  404285:	dec    edx
  404286:	ss lahf 
  404288:	xor    BYTE PTR [edi-0x5b],dh
  40428b:	xor    al,bh
  40428d:	jp     0x404274
  40428f:	push   ss
  404290:	mov    ch,0x64
  404292:	pop    ebp
  404293:	inc    edi
  404294:	sub    ebp,DWORD PTR [ebp-0x2911b437]
  40429a:	adc    BYTE PTR [ebx+0x23978dec],cl
  4042a0:	mov    esp,0xb7963c96
  4042a5:	add    dl,BYTE PTR [edx+0x4b]
  4042a8:	jb     0x40424d
  4042aa:	pop    edx
  4042ab:	xor    al,0x4
  4042ad:	cmp    eax,0x9db1234c
  4042b2:	sbb    cl,BYTE PTR gs:[ecx-0x32b00685]
  4042b9:	sbb    BYTE PTR [esi+0x48d6f850],ch
  4042bf:	fiadd  DWORD PTR [ebx-0x27df8ce2]
  4042c5:	jo     0x404280
  4042c7:	sub    ecx,DWORD PTR [esi]
  4042c9:	pop    esi
  4042ca:	loop   0x404261
  4042cc:	push   ebx
  4042cd:	es or  eax,0x229947b7
  4042d3:	push   edx
  4042d4:	loopne 0x404300
  4042d6:	inc    esp
  4042d7:	cli    
  4042d8:	mov    eax,ds:0x16ea1cee
  4042dd:	fst    QWORD PTR [ebp+ebx*2+0x7937d36c]
  4042e4:	cmp    ah,BYTE PTR [ebp-0x30]
  4042e7:	cmp    dl,0x85
  4042ea:	test   eax,0x1c93ec2f
  4042ef:	dec    esi
  4042f0:	test   bh,cl
  4042f2:	mov    ebx,0x12d9e92f
  4042f7:	mov    bl,BYTE PTR [esi+0x30f2067c]
  4042fd:	xor    BYTE PTR [esi-0x2b],dl
  404300:	cmp    BYTE PTR [edi+esi*4+0x66],al
  404304:	sbb    ecx,DWORD PTR [ebp+eax*2+0x58ecfbae]
  40430b:	add    DWORD PTR [edi+0x72],edx
  40430e:	xchg   edx,eax
  40430f:	jp     0x4042ad
  404311:	fwait
  404312:	test   eax,0xa26b8f6e
  404317:	mov    ds:0x935e8469,al
  40431c:	test   BYTE PTR es:[edx],cl
  40431f:	fimul  DWORD PTR [ebx-0x2edbe604]
  404325:	inc    edi
  404326:	sub    bl,BYTE PTR ss:[edi+0x5f]
  40432a:	ret    0x3514
  40432d:	sub    ebp,ecx
  40432f:	(bad)  
  404330:	pop    eax
  404331:	ret    
  404332:	sub    eax,0xd003d916
  404337:	or     eax,0x8d02275f
  40433c:	add    al,0xf3
  40433e:	ret    
  40433f:	dec    edi
  404340:	lock les ebx,FWORD PTR [edi+0x67fb227]
  404347:	add    eax,0xd5ef42c
  40434c:	int3   
  40434d:	jnp    0x4043bc
  40434f:	sbb    al,0xdf
  404351:	mov    cl,BYTE PTR [edi]
  404353:	cmp    DWORD PTR [edx],edx
  404355:	cmc    
  404356:	test   BYTE PTR [ecx+0x1e],cl
  404359:	mov    bl,0x44
  40435b:	outs   dx,BYTE PTR ds:[esi]
  40435c:	ficomp DWORD PTR [esp+ecx*2]
  40435f:	int3   
  404360:	jbe    0x4042e4
  404362:	and    DWORD PTR [ebp-0x22720eed],0x3063aa39
  40436c:	aad    0x3d
  40436e:	add    esp,DWORD PTR [ecx+0x69581fe0]
  404374:	cmp    al,0x22
  404376:	push   edx
  404377:	xchg   ebx,eax
  404378:	pushf  
  404379:	out    0x4b,eax
  40437b:	mov    bh,cl
  40437d:	fisub  WORD PTR [edx-0x6b22e439]
  404383:	call   FWORD PTR [esi+0x32]
  404386:	gs sahf 
  404388:	cs sub eax,0x1480e203
  40438e:	(bad)  
  40438f:	and    ecx,esi
  404391:	add    BYTE PTR [ebp+0x72],dh
  404394:	mov    dl,0x15
  404396:	shr    BYTE PTR [ecx+edi*1+0x76],1
  40439a:	enter  0x4b36,0x19
  40439e:	push   eax
  40439f:	pop    esi
  4043a0:	gs ja  0x4043e4
  4043a3:	inc    edx
  4043a4:	repz sbb dl,BYTE PTR [edx-0x102bcf89]
  4043ab:	mov    ds:0x1e238056,al
  4043b0:	push   0x169be98c
  4043b5:	jmp    0x404380
  4043b7:	push   esp
  4043b8:	out    0x28,eax
  4043ba:	jle    0x404358
  4043bc:	ja     0x404346
  4043be:	xor    ecx,edi
  4043c0:	xor    ch,BYTE PTR [ebp+edx*1+0x12]
  4043c4:	repz (bad) 
  4043c7:	and    eax,0x4e1cb585
  4043cc:	xchg   ecx,eax
  4043cd:	lods   eax,DWORD PTR ds:[esi]
  4043ce:	int3   
  4043cf:	fisubr DWORD PTR [edi+0x3a]
  4043d2:	dec    ebx
  4043d3:	mov    esp,edx
  4043d5:	addr16 mov esi,0xc559582f
  4043db:	sub    dh,BYTE PTR [ecx-0x7a22f24b]
  4043e1:	addr16 test eax,0x28802ed1
  4043e7:	popa   
  4043e8:	dec    ebx
  4043e9:	and    eax,0x93bf23c3
  4043ee:	addr16 push 0xb724562d
  4043f4:	push   ebp
  4043f5:	add    BYTE PTR [esi],ah
  4043f7:	stos   DWORD PTR es:[edi],eax
  4043f8:	adc    eax,0x687f9392
  4043fd:	push   edi
  4043fe:	xchg   esi,ecx
  404400:	call   0xb9ae:0x6b257ba3
  404407:	lods   eax,DWORD PTR ds:[esi]
  404408:	iret   
  404409:	popa   
  40440a:	pusha  
  40440b:	xchg   DWORD PTR [esi+eax*8],ebx
  40440e:	pop    eax
  40440f:	outs   dx,BYTE PTR ds:[esi]
  404410:	rcr    BYTE PTR [ebp-0x8],1
  404413:	inc    BYTE PTR [esi-0x5d70805a]
  404419:	dec    eax
  40441a:	mov    esi,0x36c5bacf
  40441f:	pushf  
  404420:	cmc    
  404421:	mov    dl,0xba
  404423:	int3   
  404424:	call   0xf1f3da12
  404429:	jecxz  0x4044a7
  40442b:	pop    ecx
  40442c:	jp     0x4044a5
  40442e:	pop    edi
  40442f:	loop   0x40444f
  404431:	cli    
  404432:	gs or  eax,0x68fd51f5
  404438:	ss jmp 0xea9c:0xc02bbe57
  404440:	sbb    al,0x0
  404442:	(bad)  
  404443:	iret   
  404444:	fwait
  404445:	mov    ds:0x94d39497,al
  40444a:	push   ebx
  40444b:	cmp    BYTE PTR [ebp+0x64],cl
  40444e:	(bad)  
  40444f:	test   al,0xce
  404451:	and    ebx,DWORD PTR [esp+ebp*2-0xd0206be]
  404458:	cs adc dl,ch
  40445b:	outs   dx,BYTE PTR ds:[esi]
  40445c:	adc    ebx,eax
  40445e:	inc    ebx
  40445f:	xlat   BYTE PTR ds:[ebx]
  404460:	inc    ecx
  404461:	es arpl bp,di
  404464:	push   0xa2e499d8
  404469:	sbb    al,0xfa
  40446b:	cdq    
  40446c:	cmp    DWORD PTR [esi-0x3d],eax
  40446f:	outs   dx,BYTE PTR ds:[esi]
  404470:	mov    bh,0xbd
  404472:	wbinvd 
  404474:	xchg   esp,eax
  404475:	aam    0x23
  404477:	push   eax
  404478:	mov    edi,0x4abfc68e
  40447d:	call   0xa83ad15b
  404482:	adc    dh,bh
  404484:	pop    ecx
  404485:	adc    al,0xbe
  404487:	mov    cl,0x34
  404489:	and    ecx,DWORD PTR [ebx+0x2f]
  40448c:	add    edi,eax
  40448e:	mov    ds:0x2e6db2d2,eax
  404493:	scas   al,BYTE PTR es:[edi]
  404494:	dec    eax
  404495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404496:	mov    BYTE PTR ds:0x32c4eaf6,0xad
  40449d:	pand   mm2,mm7
  4044a0:	in     eax,dx
  4044a1:	loopne 0x4044f7
  4044a3:	jae    0x404487
  4044a5:	xlat   BYTE PTR ds:[ebx]
  4044a6:	pop    ecx
  4044a7:	repnz sbb bl,bl
  4044aa:	ins    DWORD PTR es:[edi],dx
  4044ab:	dec    esi
  4044ac:	in     al,dx
  4044ad:	scas   eax,DWORD PTR es:[edi]
  4044ae:	icebp  
  4044af:	pusha  
  4044b0:	mov    ds:0xc4626881,eax
  4044b5:	adc    DWORD PTR [ebp-0x7c210048],esi
  4044bb:	mov    cl,0x96
  4044bd:	xchg   DWORD PTR [ebx+0x1d],ebx
  4044c0:	inc    esp
  4044c1:	imul   ebx,eax,0xffffff8e
  4044c4:	inc    ebx
  4044c5:	repnz outs dx,DWORD PTR ds:[esi]
  4044c7:	ins    DWORD PTR es:[edi],dx
  4044c8:	ror    DWORD PTR [ebp+0x38],1
  4044cb:	mov    eax,es:0xded2cb23
  4044d1:	cmp    eax,0xe9842706
  4044d6:	cmp    al,0x55
  4044d8:	les    ebp,FWORD PTR [edx+0x6cb63083]
  4044de:	call   0xeaeb:0xb90e390c
  4044e5:	cmp    dh,dl
  4044e7:	mov    WORD PTR [ebp-0x54],cs
  4044ea:	mov    DWORD PTR [ebx+eiz*1],edx
  4044ed:	mov    edx,0x8a53c594
  4044f2:	pop    eax
  4044f3:	stos   BYTE PTR es:[edi],al
  4044f4:	sbb    dl,0x6
  4044f7:	and    edi,DWORD PTR [edi-0x27]
  4044fa:	out    0x6f,eax
  4044fc:	imul   eax,DWORD PTR [ebp+0x501285df],0xa8943bb3
  404506:	pop    ebp
  404507:	iret   
  404508:	dec    edi
  404509:	iret   
  40450a:	jmp    0xe31a:0x241c2f4a
  404511:	mov    eax,ds:0xc3169e43
  404516:	pop    edi
  404517:	jbe    0x404541
  404519:	sti    
  40451a:	and    al,0x6b
  40451c:	ficom  WORD PTR [eax-0x1f4b8935]
  404522:	xor    DWORD PTR [edi+0x4d],esi
  404525:	or     ebx,DWORD PTR [ecx+edx*2+0x1c13d565]
  40452c:	out    dx,al
  40452d:	mov    esp,0x9f9af531
  404532:	imul   edx,DWORD PTR [ebx-0x8],0x23
  404536:	in     eax,0x40
  404538:	lock pushf 
  40453a:	mov    ecx,ecx
  40453c:	jb     0x40454a
  40453e:	int    0x27
  404540:	cmp    eax,0xc3fd8c66
  404545:	ret    
  404546:	bound  edi,QWORD PTR [edx+0x273ec772]
  40454c:	enter  0x8c2b,0x17
  404550:	gs jae 0x4044fe
  404553:	cwde   
  404554:	rcr    BYTE PTR [edi],0x43
  404557:	fnstcw WORD PTR [eax-0x78]
  40455a:	inc    ecx
  40455b:	scas   al,BYTE PTR es:[edi]
  40455c:	add    DWORD PTR [esi],0xfffffffd
  40455f:	repnz push es
  404561:	daa    
  404562:	add    BYTE PTR [ebx+0x3f],ch
  404565:	arpl   WORD PTR cs:[eax],bp
  404568:	cli    
  404569:	inc    esp
  40456a:	add    eax,0x5747b792
  40456f:	fadd   st(6),st
  404571:	nop
  404572:	pop    ss
  404573:	ins    BYTE PTR es:[edi],dx
  404574:	gs es fwait
  404577:	ror    dl,cl
  404579:	test   BYTE PTR [ecx+0x240a88c6],0x5d
  404580:	and    DWORD PTR ds:0x9f1904d5,esp
  404586:	dec    edi
  404587:	sbb    ecx,DWORD PTR [edi-0x5]
  40458a:	inc    ebp
  40458b:	mov    al,ds:0x8bf97045
  404590:	ds pop ds
  404592:	jb     0x40451e
  404594:	ret    
  404595:	and    DWORD PTR [esi+0x5b78b54f],0x5b
  40459c:	fdiv   st,st(5)
  40459e:	xor    ch,0xd4
  4045a1:	bound  eax,QWORD PTR [esi-0x4be7b67e]
  4045a7:	out    0xc8,eax
  4045a9:	jle    0x4045f3
  4045ab:	dec    esi
  4045ac:	mov    edi,0x374a78a3
  4045b1:	mov    bh,0xd
  4045b3:	dec    eax
  4045b4:	xor    BYTE PTR [esi+eax*1+0x73d493b7],bl
  4045bb:	(bad)  [edx]
  4045bd:	repz pusha 
  4045bf:	data16 jno 0x404616
  4045c2:	sbb    DWORD PTR [edx+0x5e],0x489cf238
  4045c9:	les    esi,FWORD PTR ds:0xf5e0bc56
  4045cf:	adc    ecx,DWORD PTR [ebx+0x2b19c38f]
  4045d5:	test   BYTE PTR [ebx+0x74],0x99
  4045d9:	mov    ebx,0xfe83327a
  4045de:	(bad)
  4045e1:	push   ss
  4045e2:	pop    edx
  4045e3:	pusha  
  4045e4:	pusha  
  4045e5:	dec    edx
  4045e6:	iret   
  4045e7:	ins    DWORD PTR es:[edi],dx
  4045e8:	push   ebx
  4045e9:	cmp    DWORD PTR [esi-0x167ad8fe],esi
  4045ef:	adc    ebp,DWORD PTR [edx+0x5ae64639]
  4045f5:	xor    ch,BYTE PTR [esi-0x58151f53]
  4045fb:	arpl   WORD PTR [esi-0x1b],bx
  4045fe:	stc    
  4045ff:	inc    esi
  404600:	test   eax,0xbee3ba30
  404605:	xchg   esp,eax
  404606:	mov    eax,0xb98d324a
  40460b:	or     DWORD PTR [edx*4+0x3b6fab8e],ebx
  404612:	inc    esi
  404613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404614:	retf   0x39f6
  404617:	rol    DWORD PTR [edx+edx*4],1
  40461a:	xchg   esp,eax
  40461b:	dec    edi
  40461c:	dec    esi
  40461d:	xor    BYTE PTR [eax+ecx*1-0x7a44d581],ch
  404624:	int3   
  404625:	sub    eax,0x956bf930
  40462a:	cld    
  40462b:	mov    al,0xa9
  40462d:	and    eax,0x99a494bd
  404632:	adc    eax,0x6fbe5ef0
  404637:	mov    ecx,DWORD PTR [esi+0x6198074b]
  40463d:	inc    edx
  40463e:	mov    bh,0xd4
  404640:	xlat   BYTE PTR ds:[ebx]
  404641:	push   ebp
  404642:	lock mov cl,0x48
  404645:	shl    DWORD PTR [ebx+0x15f225bf],cl
  40464b:	and    eax,0x75b9a0b0
  404650:	bound  edx,QWORD PTR [eax+0x16577da5]
  404656:	xlat   BYTE PTR ds:[ebx]
  404657:	mov    edx,0x227c12a0
  40465c:	adc    ch,dh
  40465e:	push   0x1e
  404660:	dec    edi
  404661:	inc    esp
  404662:	jl     0x4046b3
  404664:	lods   eax,DWORD PTR ds:[esi]
  404665:	jns    0x404617
  404667:	(bad)  
  404668:	cdq    
  404669:	test   BYTE PTR [edx],bl
  40466b:	push   cs
  40466c:	fsubr  QWORD PTR [edx]
  40466e:	into   
  40466f:	sbb    eax,0xfd7921af
  404674:	sbb    eax,0xe62f666b
  404679:	dec    edi
  40467a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40467b:	and    eax,0xb485b786
  404680:	sbb    eax,0x419bb538
  404685:	xor    eax,0x936530e0
  40468a:	cmp    eax,0x79cf4ad7
  40468f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404690:	sbb    ax,0x6dc7
  404694:	fsubr  DWORD PTR [ecx+0x6d]
  404697:	loop   0x4046ca
  404699:	push   0xffffffd7
  40469b:	dec    ebx
  40469c:	lock xor BYTE PTR [ecx-0x4c],dh
  4046a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a1:	mov    ss,WORD PTR [ecx]
  4046a3:	ret    0xae38
  4046a6:	cmp    DWORD PTR [edi+ebp*1],0xfa78168e
  4046ad:	sbb    BYTE PTR [esi-0x609c455],0x47
  4046b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046b5:	mov    ds:0xf435fb9a,al
  4046ba:	shl    BYTE PTR [edi],1
  4046bc:	and    ebx,DWORD PTR [edx]
  4046be:	cwde   
  4046bf:	ja     0x4046cf
  4046c1:	test   eax,0x7a91e59f
  4046c6:	test   DWORD PTR [edi-0x419fb04e],eax
  4046cc:	xchg   BYTE PTR [esi-0x5c],cl
  4046cf:	push   0x73
  4046d1:	scas   al,BYTE PTR es:[edi]
  4046d2:	(bad)  
  4046d4:	shl    BYTE PTR [ecx],0x5
  4046d7:	mov    dh,0x72
  4046d9:	xchg   ebp,eax
  4046da:	dec    ebp
  4046db:	mov    eax,0x696b2130
  4046e0:	(bad)  
  4046e1:	addr16 sub eax,0x2a2416d6
  4046e7:	mul    DWORD PTR [edi+0x53]
  4046ea:	mov    cs,WORD PTR [esi+eax*4-0x77783dc]
  4046f1:	enter  0x65e8,0xbd
  4046f5:	mov    ds:0x4dfa54cd,al
  4046fa:	jp     0x40473b
  4046fc:	mov    esi,0x764f5b53
  404701:	enter  0x275a,0x2f
  404705:	inc    ecx
  404706:	aaa    
  404707:	cdq    
  404708:	test   DWORD PTR [edi+0x44d66739],ebp
  40470e:	jo     0x40476c
  404710:	out    0x83,al
  404712:	push   esi
  404713:	repnz add BYTE PTR [eax+ebp*2+0x485c73b7],0xef
  40471c:	jne    0x4046c3
  40471e:	fild   QWORD PTR [edx-0x24a8e6bb]
  404724:	xchg   ebx,eax
  404725:	imul   edx,DWORD PTR [edi-0x39e51384],0xffffffc3
  40472c:	test   DWORD PTR [ecx],ebp
  40472e:	xlat   BYTE PTR ds:[ebx]
  40472f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404730:	and    al,0x17
  404732:	mov    ch,0x96
  404734:	idiv   BYTE PTR [esi+0x7a]
  404737:	(bad)  
  404738:	in     eax,dx
  404739:	xchg   edx,eax
  40473a:	je     0x40470e
  40473c:	sub    al,BYTE PTR es:[edx+0xa]
  404740:	je     0x4046e6
  404742:	out    dx,al
  404743:	mov    dh,0x62
  404745:	xchg   bl,bh
  404747:	sbb    eax,DWORD PTR [ebx+0xfd7649c]
  40474d:	inc    ebx
  40474e:	pop    ebx
  40474f:	pop    edx
  404750:	(bad)  
  404751:	in     al,dx
  404752:	jl     0x404788
  404754:	push   esp
  404755:	pop    ecx
  404756:	pop    esi
  404757:	out    dx,al
  404758:	lods   eax,DWORD PTR ds:[esi]
  404759:	stos   DWORD PTR es:[edi],eax
  40475a:	add    eax,0xf7dfc1fe
  40475f:	aaa    
  404760:	aad    0xce
  404762:	mov    cl,cl
  404764:	test   bh,ch
  404766:	mov    al,0x92
  404768:	pop    eax
  404769:	das    
  40476a:	outs   dx,DWORD PTR ds:[esi]
  40476b:	call   0x70df3986
  404770:	daa    
  404771:	cmp    BYTE PTR [ecx],cl
  404773:	ret    0x6e8a
  404776:	jmp    0x1fcb3f7d
  40477b:	div    DWORD PTR [esi+0x3d]
  40477e:	shl    BYTE PTR [eax-0x3bad3cba],1
  404784:	jmp    0x67da3dfe
  404789:	push   ss
  40478a:	pop    edi
  40478b:	xor    DWORD PTR [esi-0x39],ebp
  40478e:	dec    ebx
  40478f:	shl    DWORD PTR ds:0x24609c1d,1
  404795:	jmp    0x6054e333
  40479a:	pop    esp
  40479b:	push   ebp
  40479c:	jg     0x404747
  40479e:	inc    ebx
  40479f:	outs   dx,BYTE PTR ds:[esi]
  4047a0:	sti    
  4047a1:	js     0x404734
  4047a3:	cmp    eax,0xdced249b
  4047a8:	and    BYTE PTR [esi-0xa],0x3a
  4047ac:	stc    
  4047ad:	pop    edx
  4047ae:	jge    0x404775
  4047b0:	shr    BYTE PTR ds:0xfc4de3f,cl
  4047b6:	mov    ebx,0x96cc3f00
  4047bb:	dec    edi
  4047bc:	fisub  WORD PTR [edi-0x29de9b49]
  4047c2:	mov    dl,0x3a
  4047c4:	in     al,dx
  4047c5:	mov    ah,0x23
  4047c7:	jnp    0x40479c
  4047c9:	fldcw  WORD PTR [eax]
  4047cb:	pushf  
  4047cc:	inc    esp
  4047cd:	shl    al,1
  4047cf:	outs   dx,DWORD PTR ds:[esi]
  4047d0:	std    
  4047d1:	push   ebp
  4047d2:	nop
  4047d3:	ja     0x404798
  4047d5:	mov    ecx,0x4c253cba
  4047da:	jg     0x4047b4
  4047dc:	mov    bh,0xc9
  4047de:	or     eax,DWORD PTR [edx-0x6e507d7]
  4047e4:	cdq    
  4047e5:	stos   BYTE PTR es:[edi],al
  4047e6:	mov    eax,ds:0x384ae5ff
  4047eb:	pop    es
  4047ec:	sbb    ah,BYTE PTR [ebx-0x50]
  4047ef:	cwde   
  4047f0:	dec    eax
  4047f1:	jne    0x404808
  4047f3:	mov    ecx,0xd9c671da
  4047f8:	xor    bh,BYTE PTR [ebx+0x58]
  4047fb:	fild   WORD PTR [ebx-0x540cac31]
  404801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404802:	jmp    0xf0f5:0x408d3e0a
  404809:	pop    ebx
  40480a:	fdiv   QWORD PTR [ebp-0x73]
  40480d:	push   ebp
  40480e:	pop    edi
  40480f:	and    cl,BYTE PTR [ebx]
  404811:	iret   
  404812:	cmp    eax,0x5bb0e749
  404817:	inc    ebx
  404818:	cmp    BYTE PTR [eax-0x4f],al
  40481b:	data16 int 0xc3
  40481e:	jecxz  0x404888
  404820:	mov    dl,0x8d
  404822:	popf   
  404823:	loopne 0x40489a
  404825:	xchg   bh,bl
  404827:	aaa    
  404828:	xor    DWORD PTR [ebp+0xe],edi
  40482b:	imul   edx,DWORD PTR [esi+0x4a],0xaa1865d1
  404832:	nop
  404833:	sub    BYTE PTR [eax-0x73],cl
  404836:	rcl    esp,cl
  404838:	push   esi
  404839:	push   ds
  40483a:	add    eax,DWORD PTR [ebp-0x28]
  40483d:	pusha  
  40483e:	dec    edi
  40483f:	mov    edx,0x9a389b0c
  404844:	inc    edi
  404845:	stos   BYTE PTR es:[edi],al
  404846:	clc    
  404847:	pop    esi
  404848:	push   esp
  404849:	push   es
  40484a:	xchg   edx,eax
  40484b:	fwait
  40484c:	mov    cl,0xc6
  40484e:	mov    bl,0x18
  404850:	out    dx,eax
  404851:	jecxz  0x40486f
  404853:	into   
  404854:	(bad)  
  404856:	loope  0x40483e
  404858:	or     edx,esi
  40485a:	sbb    BYTE PTR ds:0xc0b0511a,ch
  404860:	mov    dh,0xae
  404862:	push   esi
  404863:	ror    DWORD PTR [esi-0x39],0xcd
  404867:	(bad)  
  404868:	sub    dl,ah
  40486a:	ins    DWORD PTR es:[edi],dx
  40486b:	jecxz  0x404813
  40486d:	imul   edi,DWORD PTR [eax-0x15],0x4d6d0a05
  404874:	push   ebp
  404875:	or     al,0xdd
  404877:	mov    esp,0xa4fcb75f
  40487c:	lods   al,BYTE PTR ds:[esi]
  40487d:	or     BYTE PTR [ebx-0x62787353],0x78
  404884:	pop    ecx
  404885:	mul    BYTE PTR [ecx]
  404887:	sbb    dh,BYTE PTR [eax+ebx*4-0x7e50c65f]
  40488e:	xchg   dl,cl
  404890:	push   ebp
  404891:	mov    bh,0x46
  404893:	call   0x4222c0da
  404898:	sahf   
  404899:	push   ebp
  40489a:	sub    ah,dl
  40489c:	cdq    
  40489d:	inc    ebx
  40489e:	fdivr  QWORD PTR ds:0x731f506d
  4048a4:	cmp    dl,bh
  4048a6:	(bad)  
  4048a8:	mov    dh,BYTE PTR [esi]
  4048aa:	inc    ecx
  4048ab:	popf   
  4048ac:	gs loope 0x404855
  4048af:	or     al,0x8f
  4048b1:	test   BYTE PTR [edx-0x14],al
  4048b4:	cmp    eax,0x31351762
  4048b9:	xlat   BYTE PTR ds:[ebx]
  4048ba:	jbe    0x4048d0
  4048bc:	(bad)  
  4048bd:	xlat   BYTE PTR ds:[ebx]
  4048be:	(bad)  
  4048bf:	and    eax,0x6434effb
  4048c4:	jnp    0x40490b
  4048c6:	sahf   
  4048c7:	ins    DWORD PTR es:[edi],dx
  4048c8:	dec    esp
  4048c9:	paddq  mm2,QWORD PTR [esi]
  4048cc:	push   esi
  4048cd:	and    DWORD PTR [edi+esi*8-0x1d479988],edx
  4048d4:	inc    edx
  4048d5:	popf   
  4048d6:	test   DWORD PTR [esi+0x73],ebp
  4048d9:	sbb    al,0x2c
  4048db:	jnp    0x4048bf
  4048dd:	aad    0x9a
  4048df:	push   0x5979e272
  4048e4:	(bad)  
  4048e5:	retf   
  4048e6:	mov    ch,0x4e
  4048e8:	retf   0x91ac
  4048eb:	test   eax,0xc2b3e2c
  4048f0:	sbb    al,BYTE PTR [ebp-0xd]
  4048f3:	test   DWORD PTR [edi+0x5e751d52],0x18ce8252
  4048fd:	in     eax,0x4
  4048ff:	rol    BYTE PTR [esi+0x234b2178],cl
  404905:	ret    
  404906:	(bad)  
  404907:	push   ss
  404908:	icebp  
  404909:	cmp    dl,BYTE PTR ds:0x2280adab
  40490f:	into   
  404910:	mov    dl,0x79
  404912:	cmp    eax,0x19b798ae
  404917:	xor    ecx,eax
  404919:	cmp    esi,DWORD PTR [edx+0x4cf2f484]
  40491f:	cmp    dh,cl
  404921:	test   eax,0xdcb4dbe6
  404926:	xor    DWORD PTR [ebx],ebp
  404928:	push   0x6f
  40492a:	js     0x404966
  40492c:	xchg   edx,eax
  40492d:	sub    DWORD PTR fs:0xebdded75,ecx
  404934:	imul   esi,DWORD PTR [esi],0xe6a16c7d
  40493a:	arpl   WORD PTR [ecx+0x1ca7c930],di
  404940:	(bad)  
  404941:	adc    bl,cl
  404943:	sbb    DWORD PTR [ebp+0x7d],ecx
  404946:	into   
  404947:	pop    ecx
  404948:	jmp    0xb7e5:0x579e2d79
  40494f:	leave  
  404950:	xchg   ebp,eax
  404951:	adc    edx,DWORD PTR [edi+edi*2]
  404954:	adc    eax,0x8cc2c52f
  404959:	(bad)  
  40495a:	mov    WORD PTR [esi+0x6de6e8bc],es
  404960:	lahf   
  404961:	pop    esp
  404962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404963:	js     0x404912
  404965:	ficomp DWORD PTR [eax]
  404967:	fisttp WORD PTR [esi+0x75da999a]
  40496d:	retf   0x1350
  404970:	inc    edx
  404971:	mov    eax,ds:0xe9737c13
  404976:	fldcw  WORD PTR [ebx]
  404978:	mov    al,ds:0xb5b20c76
  40497d:	jge    0x40495d
  40497f:	adc    ah,BYTE PTR [ebp+0x45]
  404982:	pop    es
  404983:	fistp  DWORD PTR [ebx+edx*1+0x6852e4ef]
  40498a:	mov    WORD PTR [esi+eax*2-0x4a62d99c],cs
  404991:	dec    ebp
  404992:	pop    eax
  404993:	iret   
  404994:	pop    esp
  404995:	pop    ebx
  404996:	jmp    0x28ba:0xfbc2f470
  40499d:	and    DWORD PTR [ecx+0x1],0xe438b3f8
  4049a4:	mov    dl,bh
  4049a6:	ret    
  4049a7:	loope  0x4049c4
  4049a9:	dec    edx
  4049aa:	add    cl,BYTE PTR [edi]
  4049ac:	adc    DWORD PTR [edi+0x5a],eax
  4049af:	mov    dh,0x5c
  4049b1:	sbb    ecx,ecx
  4049b3:	call   0x6f3b:0x1d0a6251
  4049ba:	jp     0x4049e0
  4049bc:	pmulhuw mm3,mm2
  4049bf:	out    0xfd,eax
  4049c1:	test   al,0xc7
  4049c3:	inc    esp
  4049c4:	pop    ss
  4049c5:	xor    eax,0x79ea230b
  4049ca:	call   0x2a36e4f4
  4049cf:	mov    edi,ebp
  4049d1:	xchg   ebx,eax
  4049d2:	psubusw mm4,QWORD PTR [ecx]
  4049d5:	int3   
  4049d6:	out    dx,eax
  4049d7:	jmp    0x404a03
  4049d9:	cmc    
  4049da:	xchg   edi,eax
  4049db:	pop    ecx
  4049dc:	jecxz  0x40499b
  4049de:	cmp    eax,ebx
  4049e0:	in     al,0x62
  4049e2:	in     al,0xa8
  4049e4:	push   0x1473a827
  4049e9:	test   al,0x92
  4049eb:	add    eax,0x6665899
  4049f0:	jecxz  0x404a56
  4049f2:	push   cs
  4049f3:	outs   dx,DWORD PTR ds:[esi]
  4049f4:	dec    esi
  4049f5:	pop    ds
  4049f6:	stos   DWORD PTR es:[edi],eax
  4049f7:	lea    edx,[si-0x667c]
  4049fc:	mov    esi,DWORD PTR [ebx+0x3e08970d]
  404a02:	stos   BYTE PTR es:[edi],al
  404a03:	scas   eax,DWORD PTR es:[edi]
  404a04:	sbb    DWORD PTR [eax+0x11ed0a27],0xffffffb6
  404a0b:	or     esi,DWORD PTR [ebx+0x7d6cff0f]
  404a11:	repz stc 
  404a13:	xchg   esi,eax
  404a14:	cmp    ah,BYTE PTR [eax-0x7b]
  404a17:	add    al,0x87
  404a19:	and    ebp,DWORD PTR [bx+di]
  404a1c:	sar    DWORD PTR [eax-0x6b553914],1
  404a22:	out    0xdd,eax
  404a24:	(bad)  
  404a25:	xchg   edi,eax
  404a26:	pop    esp
  404a27:	adc    BYTE PTR [eax],cl
  404a29:	push   es
  404a2a:	push   ebp
  404a2b:	inc    ebx
  404a2c:	adc    ecx,DWORD PTR [ebx-0x74]
  404a2f:	mov    ds:0x5b7c586c,al
  404a34:	mov    ebx,0xb127da1f
  404a39:	xchg   edi,ebx
  404a3b:	push   es
  404a3c:	xchg   ebp,eax
  404a3d:	(bad)  
  404a3f:	push   ss
  404a40:	es xchg esi,eax
  404a42:	mov    DWORD PTR [ebp-0x7b788dc6],edi
  404a48:	ja     0x404a47
  404a4a:	sub    eax,DWORD PTR [esi+0x12]
  404a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a4e:	push   ebx
  404a4f:	sbb    dh,BYTE PTR [ecx+0x4c290767]
  404a55:	and    BYTE PTR [ebx+ecx*8+0x79],cl
  404a59:	xchg   BYTE PTR [ebp+esi*2-0x755cbe7],dh
  404a60:	cmp    eax,0xf28c3e62
  404a65:	or     BYTE PTR [edi+0x13],0xc6
  404a69:	mov    ch,0x8d
  404a6b:	dec    esp
  404a6c:	cmp    eax,0x82df34c
  404a71:	jmp    0xc0588923
  404a76:	sbb    ecx,DWORD PTR [edi+0x2d]
  404a79:	pushf  
  404a7a:	icebp  
  404a7b:	push   ecx
  404a7c:	mov    al,0xb5
  404a7e:	in     al,0x95
  404a80:	mov    es,esp
  404a82:	push   es
  404a83:	lods   al,BYTE PTR ds:[esi]
  404a84:	shl    BYTE PTR [ebx-0x30d8096e],1
  404a8a:	dec    esi
  404a8b:	cmp    esp,DWORD PTR [esi]
  404a8d:	out    0x3e,eax
  404a8f:	adc    esi,DWORD PTR [ebx]
  404a91:	xor    bl,BYTE PTR [ebp-0x2b645012]
  404a97:	xor    DWORD PTR [eax+0x5d777127],eax
  404a9d:	cmp    eax,0x8619c8a3
  404aa2:	into   
  404aa3:	in     al,dx
  404aa4:	retf   0x1355
  404aa7:	js     0x404a56
  404aa9:	fs dec eax
  404aab:	inc    ecx
  404aac:	push   ecx
  404aad:	js     0x404a8a
  404aaf:	push   esp
  404ab0:	lods   al,BYTE PTR ds:[esi]
  404ab1:	cmc    
  404ab2:	inc    edi
  404ab3:	sti    
  404ab4:	pop    eax
  404ab5:	les    edi,FWORD PTR [esi-0x6a2507b2]
  404abb:	(bad)  
  404abc:	rcl    eax,1
  404abe:	rcl    DWORD PTR [ecx+0x79],cl
  404ac1:	jnp    0x404aa8
  404ac3:	dec    esp
  404ac4:	ret    
  404ac5:	retf   
  404ac6:	imul   ecx,DWORD PTR [edi],0x248ec9b8
  404acc:	or     cl,BYTE PTR [ebx+0x494bae39]
  404ad2:	fidivr WORD PTR [ebx+eax*4]
  404ad5:	cs out dx,al
  404ad7:	xchg   edx,eax
  404ad8:	loop   0x404b0a
  404ada:	ror    DWORD PTR [ebx],1
  404adc:	mov    edi,0x8850606c
  404ae1:	retf   
  404ae2:	push   ss
  404ae3:	fwait
  404ae4:	sbb    DWORD PTR [ecx-0x3759ec21],ebx
  404aea:	jno    0x404aa9
  404aec:	fcmovb st,st(7)
  404aee:	in     al,dx
  404aef:	test   eax,0xdd5afbbd
  404af4:	jmp    0xfa72:0xdca8f814
  404afb:	mov    ecx,DWORD PTR [ebp-0x10]
  404afe:	push   es
  404aff:	clc    
  404b00:	mov    esp,0xad9b5a7c
  404b05:	rcl    BYTE PTR [ecx-0x7af44379],1
  404b0b:	cmc    
  404b0c:	dec    edx
  404b0d:	or     al,0xcd
  404b0f:	jge    0x404aa3
  404b11:	and    eax,0xb7c72fab
  404b16:	jno    0x404aaa
  404b18:	fisttp QWORD PTR gs:[edx-0x19dfdec6]
  404b1f:	mov    ds:0xb1afef45,al
  404b24:	stos   BYTE PTR es:[edi],al
  404b25:	cmp    al,0xc7
  404b27:	arpl   WORD PTR [ebx-0xceff1a4],dx
  404b2d:	mov    ah,0xe
  404b2f:	mov    bh,BYTE PTR [ebp+0x448aa974]
  404b35:	shl    BYTE PTR [ecx+ecx*1-0x6d76b743],0x9b
  404b3d:	or     BYTE PTR [esi+0x5cf621ad],cl
  404b43:	jnp    0x404b51
  404b45:	int3   
  404b46:	aaa    
  404b47:	out    0xa2,al
  404b49:	sbb    dl,BYTE PTR [eax+0x1d]
  404b4c:	add    DWORD PTR [ebx-0x6503eda5],edi
  404b52:	sbb    al,0x8d
  404b54:	icebp  
  404b55:	sub    ch,ch
  404b57:	xlat   BYTE PTR ds:[ebx]
  404b58:	add    ch,BYTE PTR [ebx]
  404b5a:	xchg   ecx,eax
  404b5b:	mov    edx,0x12614021
  404b60:	mov    eax,DWORD PTR [ebp-0x3ad3b48c]
  404b66:	test   al,0xbb
  404b68:	fstp   st(3)
  404b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b6b:	int3   
  404b6c:	in     eax,dx
  404b6d:	push   ds
  404b6e:	arpl   bp,bx
  404b70:	push   edx
  404b71:	adc    DWORD PTR [edx-0x13f61e29],ebp
  404b77:	jo     0x404bcb
  404b79:	cs inc ebp
  404b7b:	sbb    al,0xf5
  404b7d:	mov    edx,DWORD PTR [ecx+esi*1]
  404b80:	mov    ch,0xa3
  404b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b83:	aaa    
  404b84:	(bad)  
  404b85:	pop    ebp
  404b86:	fmul   st(7),st
  404b88:	xchg   esp,eax
  404b89:	ds in  eax,0x1c
  404b8c:	(bad)  
  404b8d:	pop    ss
  404b8e:	dec    eax
  404b8f:	pop    edi
  404b90:	lock ret 
  404b92:	xchg   esp,eax
  404b93:	lock stos BYTE PTR es:[edi],al
  404b95:	mov    edx,0xd1060231
  404b9a:	or     esp,DWORD PTR [ebx-0x6a]
  404b9d:	call   0xe2e1:0x87c461a2
  404ba4:	stos   DWORD PTR es:[edi],eax
  404ba5:	scas   eax,DWORD PTR es:[edi]
  404ba6:	adc    ah,ch
  404ba8:	stc    
  404ba9:	xor    ch,BYTE PTR [esi-0x14]
  404bac:	cmc    
  404bad:	rol    BYTE PTR [esi+ecx*8-0x32],0xf6
  404bb2:	cli    
  404bb3:	add    ebx,DWORD PTR [esi]
  404bb5:	test   al,0xba
  404bb7:	mov    eax,ds:0xd5e4cf2c
  404bbc:	in     eax,0x3a
  404bbe:	inc    esp
  404bbf:	out    dx,eax
  404bc0:	mov    eax,0xe29b7801
  404bc5:	(bad)  
  404bc6:	adc    al,0x19
  404bc8:	mul    DWORD PTR cs:[esi+0x66]
  404bcc:	pop    ss
  404bcd:	push   ecx
  404bce:	in     eax,0xb8
  404bd0:	adc    esp,DWORD PTR [esp+edx*2]
  404bd3:	imul   esp,DWORD PTR [ecx-0x4585d2e0],0xffffff84
  404bda:	mov    ds:0x90281679,eax
  404bdf:	(bad)  
  404be1:	int    0x2c
  404be3:	in     eax,0x89
  404be5:	jno    0x404bd4
  404be7:	push   edx
  404be8:	call   0x517785f0
  404bed:	aad    0x8c
  404bef:	call   0x867531e3
  404bf4:	test   BYTE PTR [edx],ah
  404bf6:	lea    ebp,fs:0xc8428b4b
  404bfd:	mov    ebp,DWORD PTR [ebp-0x68025d96]
  404c03:	pop    esi
  404c04:	gs dec edx
  404c06:	xor    bl,al
  404c08:	adc    BYTE PTR ds:0x6f28ba26,bh
  404c0e:	inc    ebp
  404c0f:	imul   eax,ebx,0x1982029e
  404c15:	fisubr WORD PTR [eax]
  404c17:	outs   dx,BYTE PTR ds:[esi]
  404c18:	inc    esi
  404c19:	mov    eax,0x332f1355
  404c1e:	sbb    al,0xea
  404c20:	push   cs
  404c21:	or     al,0x9c
  404c23:	xchg   edx,eax
  404c24:	and    bl,ah
  404c26:	aas    
  404c27:	jge    0x404bf6
  404c29:	cmp    al,0x54
  404c2b:	cdq    
  404c2c:	lods   al,BYTE PTR ds:[esi]
  404c2d:	popa   
  404c2e:	dec    edx
  404c2f:	sbb    dh,BYTE PTR [eax+0x7170a9ac]
  404c35:	mul    ebx
  404c37:	push   0xa03eb8bc
  404c3c:	inc    esp
  404c3d:	sub    bh,dh
  404c3f:	mov    ds:0x8eb48c89,al
  404c44:	and    eax,0x340e3001
  404c49:	adc    edi,DWORD PTR [ebp+0x34]
  404c4c:	sub    BYTE PTR [bx],dl
  404c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c50:	(bad)  
  404c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c52:	inc    edi
  404c53:	add    bh,ch
  404c55:	fs js  0x404cd4
  404c58:	data16 addr16 jo 0x404cb6
  404c5c:	jns    0x404cb9
  404c5e:	in     al,0xfe
  404c60:	clc    
  404c61:	ret    0x2bc7
  404c64:	xchg   ecx,eax
  404c65:	rol    BYTE PTR [ecx+edi*2],1
  404c68:	rol    BYTE PTR [ebx],1
  404c6a:	add    eax,DWORD PTR [edx]
  404c6c:	icebp  
  404c6d:	mov    ch,0x3f
  404c6f:	xchg   ebx,eax
  404c70:	ds cld 
  404c72:	cwde   
  404c73:	jnp    0x404cd0
  404c75:	push   ebx
  404c76:	mov    ch,0x3d
  404c78:	rdpmc  
  404c7a:	rcr    DWORD PTR [ebx-0x6ee278a2],1
  404c80:	(bad)  
  404c81:	int    0x79
  404c83:	inc    ebp
  404c84:	mov    esi,0x476327a4
  404c89:	jp     0x404ca1
  404c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c8c:	dec    ebx
  404c8d:	mov    eax,0x70815481
  404c92:	xor    al,BYTE PTR [eax]
  404c94:	into   
  404c95:	sbb    BYTE PTR [ecx+0x64],0xec
  404c99:	mov    ah,BYTE PTR [ecx]
  404c9b:	and    dh,cl
  404c9d:	mov    ebx,0x6b2b6fee
  404ca2:	call   0x5729b821
  404ca7:	jns    0x404d26
  404ca9:	in     eax,dx
  404caa:	cmp    ah,BYTE PTR ds:[edi-0x5d]
  404cae:	stos   DWORD PTR es:[edi],eax
  404caf:	add    eax,0x5583e559
  404cb4:	xor    ch,BYTE PTR [esi]
  404cb6:	mov    al,ds:0xc832725a
  404cbb:	repnz cdq 
  404cbd:	out    dx,eax
  404cbe:	aad    0xe0
  404cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cc1:	shl    BYTE PTR [edx+0x5d],1
  404cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cc5:	pop    ds
  404cc6:	test   al,0x68
  404cc8:	call   0xf340:0x2e26a185
  404ccf:	test   esp,0x28f0d096
  404cd5:	add    cl,BYTE PTR [esi+0x2e1c4f8]
  404cdb:	sub    BYTE PTR [ebx-0x557afe69],al
  404ce1:	or     cl,BYTE PTR [ebp+0x27]
  404ce4:	and    al,0xa2
  404ce6:	mov    ebp,0x4d8a7d48
  404ceb:	out    0x62,al
  404ced:	xchg   edi,eax
  404cee:	pop    ebp
  404cef:	inc    eax
  404cf0:	enter  0xb9fa,0xc8
  404cf4:	jno    0x404d2c
  404cf6:	(bad)
  404cf9:	xchg   edi,eax
  404cfa:	mov    esp,DWORD PTR [esi+0x4cc6d4e6]
  404d00:	pop    edi
  404d01:	aad    0x78
  404d03:	jle    0x404d73
  404d05:	ins    BYTE PTR es:[edi],dx
  404d06:	retf   
  404d07:	mov    ah,0xc9
  404d09:	imul   ecx,eax,0x98d37f11
  404d0f:	(bad)  
  404d10:	js     0x404cca
  404d12:	add    esp,esp
  404d14:	push   ebx
  404d15:	int    0xb9
  404d17:	loope  0x404d98
  404d19:	or     eax,0x66cf9d0c
  404d1e:	mov    dl,0x2d
  404d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d21:	jl     0x404d9b
  404d23:	cdq    
  404d24:	lods   eax,DWORD PTR ds:[esi]
  404d25:	fdecstp 
  404d27:	sub    ch,cl
  404d29:	push   ebx
  404d2a:	mov    esi,DWORD PTR [edi]
  404d2c:	icebp  
  404d2d:	push   ss
  404d2e:	xor    al,0x27
  404d30:	xchg   esp,eax
  404d31:	aam    0x87
  404d33:	push   eax
  404d34:	sti    
  404d35:	ja     0x404d1c
  404d37:	pop    esi
  404d38:	jo     0x404cd5
  404d3a:	in     eax,dx
  404d3b:	pop    esp
  404d3c:	retf   
  404d3d:	loop   0x404d11
  404d3f:	xor    eax,0xc7e3f78e
  404d44:	push   edx
  404d45:	sbb    eax,0xe0996ffb
  404d4a:	add    esi,esp
  404d4c:	and    eax,0x1c74871d
  404d51:	lods   al,BYTE PTR ds:[esi]
  404d52:	ins    BYTE PTR es:[edi],dx
  404d53:	mov    ?,WORD PTR [eax-0x77343b36]
  404d59:	shl    DWORD PTR [eax+0x5490de28],0x58
  404d60:	ret    0x293b
  404d63:	outs   dx,DWORD PTR ds:[esi]
  404d64:	cld    
  404d65:	push   ebp
  404d66:	add    DWORD PTR [esi-0x4b],0x48
  404d6a:	inc    edi
  404d6b:	push   cs
  404d6c:	jnp    0x404dac
  404d6e:	outs   dx,BYTE PTR ds:[esi]
  404d6f:	sbb    eax,0x83aa066
  404d74:	loop   0x404d0e
  404d76:	jbe    0x404d8f
  404d78:	fs push cs
  404d7a:	outs   dx,DWORD PTR ds:[esi]
  404d7b:	jo     0x404d46
  404d7d:	or     DWORD PTR [ecx+0x2f338c80],esp
  404d83:	mov    bl,0x71
  404d85:	inc    eax
  404d86:	mov    cs,WORD PTR [esi]
  404d88:	fimul  DWORD PTR [eax-0x76fa5fd1]
  404d8e:	xchg   ebx,eax
  404d8f:	jmp    0x902:0x24babcbd
  404d96:	inc    eax
  404d97:	fisubr WORD PTR [ebx+0x60f8382f]
  404d9d:	sbb    eax,ebx
  404d9f:	xor    ebp,ebx
  404da1:	xchg   edx,eax
  404da2:	xchg   ecx,eax
  404da3:	inc    esi
  404da4:	aad    0x3
  404da6:	jecxz  0x404db6
  404da8:	xor    edx,ecx
  404daa:	cmp    ecx,DWORD PTR [ebx+0x17]
  404dad:	inc    edx
  404dae:	fadd   st,st(0)
  404db0:	mov    ds:0x14001a54,al
  404db5:	sbb    DWORD PTR [ebp-0x48714fac],edx
  404dbb:	jmp    0x7844244d
  404dc0:	sbb    eax,0x95ea1e6c
  404dc5:	pop    eax
  404dc6:	sbb    al,0xa5
  404dc8:	pop    ss
  404dc9:	cmp    DWORD PTR [esi+0x183e81d6],eax
  404dcf:	in     eax,dx
  404dd0:	int    0xe7
  404dd2:	pop    ebp
  404dd3:	aam    0x34
  404dd5:	push   ebx
  404dd6:	stc    
  404dd7:	das    
  404dd8:	or     eax,0x8fdcdead
  404ddd:	fistp  QWORD PTR ds:[esi-0x53]
  404de1:	cmp    eax,0x8248b3da
  404de6:	add    al,0x9e
  404de8:	shl    BYTE PTR [esi],cl
  404dea:	sbb    bl,BYTE PTR ss:[ebx]
  404ded:	or     eax,ecx
  404def:	fwait
  404df0:	lahf   
  404df1:	and    BYTE PTR [edi+0x2d3ebb04],al
  404df7:	pop    ebp
  404df8:	sub    ah,BYTE PTR [ebx-0x7f]
  404dfb:	push   edi
  404dfc:	cld    
  404dfd:	and    DWORD PTR [edi],edx
  404dff:	call   0x68990bbd
  404e04:	push   cs
  404e05:	sub    al,BYTE PTR [edi]
  404e07:	xchg   edx,eax
  404e08:	sub    DWORD PTR [ebp-0x4],esi
  404e0b:	out    0x36,al
  404e0d:	dec    esi
  404e0e:	fistp  QWORD PTR [edi]
  404e10:	leave  
  404e11:	mov    bh,cl
  404e13:	cmp    al,0x9
  404e15:	mov    ecx,0x9b10da12
  404e1a:	mov    ch,0x1b
  404e1c:	cmp    edi,esi
  404e1e:	or     esp,edi
  404e20:	add    al,0x5d
  404e22:	and    eax,0xc4af646b
  404e27:	int3   
  404e28:	mov    ebp,0xb665d947
  404e2d:	sbb    eax,0xbd75250
  404e32:	xchg   ebp,eax
  404e33:	cwde   
  404e34:	mov    ecx,0x5902b183
  404e39:	sub    DWORD PTR [ecx-0x68bc325],0x57a72a85
  404e43:	pop    edx
  404e44:	(bad)  
  404e46:	jmp    0x111d:0xd835be7e
  404e4d:	sub    BYTE PTR [esi+0x327d3608],0xd9
  404e54:	jle    0x404ecd
  404e56:	xchg   BYTE PTR [ebx+0x482f51ad],dl
  404e5c:	dec    ecx
  404e5d:	mov    eax,0xff9b6710
  404e62:	iret   
  404e63:	aam    0xaf
  404e65:	out    dx,eax
  404e66:	push   0x60
  404e68:	stos   BYTE PTR es:[edi],al
  404e69:	das    
  404e6a:	add    edi,DWORD PTR [esi-0x13]
  404e6d:	inc    esi
  404e6e:	in     al,dx
  404e6f:	mov    al,0xc2
  404e71:	ja     0x404e53
  404e73:	jmp    0xd5d9:0x7ffd5ceb
  404e7a:	cmp    BYTE PTR [edi],bh
  404e7c:	(bad)  
  404e7d:	jae    0x404e1a
  404e7f:	pop    ecx
  404e80:	cmc    
  404e81:	jg     0x404ede
  404e83:	sbb    BYTE PTR [edi-0xb],ch
  404e86:	inc    ebp
  404e87:	adc    eax,0xaaecbf7b
  404e8c:	jge    0x404e28
  404e8e:	jmp    0x404e42
  404e90:	xchg   ecx,eax
  404e91:	mov    ch,cl
  404e93:	jp     0x404e8c
  404e95:	addr16 jmp 0x1d34:0x3b5dbfdd
  404e9d:	jbe    0x404e66
  404e9f:	cli    
  404ea0:	jae    0x404e6c
  404ea2:	in     eax,dx
  404ea3:	jmp    0xf6ec:0x98d24e04
  404eaa:	xor    DWORD PTR [esi],edi
  404eac:	repz (bad) 
  404eae:	cdq    
  404eaf:	and    ch,BYTE PTR ds:0x24fca05
  404eb5:	xor    DWORD PTR [edx+edi*1],0xf2962b0b
  404ebc:	or     esp,DWORD PTR [edi-0x18f9d4b0]
  404ec2:	fsubr  DWORD PTR ds:0x30473d06
  404ec8:	and    dl,bl
  404eca:	push   ebp
  404ecb:	dec    esi
  404ecc:	pop    ds
  404ecd:	and    dh,dl
  404ecf:	popa   
  404ed0:	and    ecx,ecx
  404ed2:	jl     0x404e64
  404ed4:	adc    ebx,DWORD PTR [ecx+ecx*1+0x48]
  404ed8:	cdq    
  404ed9:	es and eax,0x304a631f
  404edf:	dec    ecx
  404ee0:	sub    BYTE PTR [ebx],dh
  404ee2:	xor    al,0xa7
  404ee4:	fst    st(5)
  404ee6:	push   eax
  404ee7:	pop    eax
  404ee8:	sub    DWORD PTR [edi+0x1d],edi
  404eeb:	jmp    0x61d7047b
  404ef0:	daa    
  404ef1:	cdq    
  404ef2:	in     al,dx
  404ef3:	retf   0xe834
  404ef6:	pop    eax
  404ef7:	bound  esi,QWORD PTR [edi+eiz*1-0x567f1ab6]
  404efe:	fiadd  DWORD PTR [ebp-0x2]
  404f01:	sbb    al,0x61
  404f03:	mov    dl,0xaa
  404f05:	or     bl,BYTE PTR [edx]
  404f07:	imul   DWORD PTR [edi-0x4e]
  404f0a:	cmp    al,0x77
  404f0c:	push   es
  404f0d:	adc    BYTE PTR [esi+0x664b09d5],0x4f
  404f14:	and    bl,BYTE PTR [ebp-0x12]
  404f17:	push   ecx
  404f18:	jne    0x404f56
  404f1a:	or     eax,0xe48aecbb
  404f1f:	imul   eax,esi,0x42
  404f22:	jmp    0x516577b1
  404f27:	mov    dh,BYTE PTR [esi]
  404f29:	daa    
  404f2a:	adc    eax,0xca6574b2
  404f2f:	je     0x404fa6
  404f31:	dec    ebp
  404f32:	pusha  
  404f33:	outs   dx,DWORD PTR ds:[esi]
  404f34:	loopne 0x404ecd
  404f36:	fnstcw WORD PTR [esi-0x6e]
  404f39:	outs   dx,BYTE PTR ds:[esi]
  404f3a:	test   BYTE PTR [ebx],bh
  404f3c:	mov    esp,DWORD PTR [esi-0x6a63190d]
  404f42:	popa   
  404f43:	mov    ch,0x73
  404f45:	adc    bl,al
  404f47:	add    DWORD PTR [edx],ecx
  404f49:	xor    DWORD PTR [edi],esp
  404f4b:	jns    0x404f4a
  404f4d:	pop    ss
  404f4e:	jbe    0x404fa1
  404f50:	push   0x7e
  404f52:	sbb    bh,BYTE PTR [ebx+0x37]
  404f55:	and    eax,0xbfe3b5a0
  404f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f5b:	into   
  404f5c:	or     al,0xfc
  404f5e:	clc    
  404f5f:	cld    
  404f60:	push   ds
  404f61:	mov    bh,BYTE PTR [edx-0x39]
  404f64:	ins    DWORD PTR es:[edi],dx
  404f65:	sar    BYTE PTR [ebp-0x52],0x28
  404f69:	test   dh,0xf0
  404f6c:	dec    ecx
  404f6d:	inc    ebp
  404f6e:	loopne 0x404f24
  404f70:	or     al,0x19
  404f72:	mov    cs,WORD PTR ds:0x945a64b2
  404f78:	xchg   esp,eax
  404f79:	clc    
  404f7a:	sar    BYTE PTR [esi-0x3fc8985f],0x56
  404f81:	mov    dh,0x8a
  404f83:	xchg   ecx,eax
  404f84:	scas   eax,DWORD PTR es:[edi]
  404f85:	cmp    BYTE PTR [esi+0x7557959d],cl
  404f8b:	sub    al,0xe4
  404f8d:	sbb    ch,al
  404f8f:	xlat   BYTE PTR ds:[ebx]
  404f90:	out    0x7e,al
  404f92:	cwde   
  404f93:	iret   
  404f94:	jo     0x404f1b
  404f96:	stos   BYTE PTR es:[edi],al
  404f97:	out    0xca,al
  404f99:	or     al,0x8a
  404f9b:	dec    edi
  404f9c:	lods   al,BYTE PTR ds:[esi]
  404f9d:	inc    edi
  404f9e:	xchg   ebp,eax
  404f9f:	inc    ebp
  404fa0:	lods   al,BYTE PTR ds:[esi]
  404fa1:	int    0x47
  404fa3:	xor    bh,cl
  404fa5:	test   DWORD PTR [esi+0x39eec70b],edi
  404fab:	push   0x3f62bd18
  404fb0:	fcmovnb st,st(5)
  404fb2:	fisubr DWORD PTR [ecx+0x41]
  404fb5:	fild   WORD PTR [esi]
  404fb7:	std    
  404fb8:	or     BYTE PTR [ecx+0x5f],cl
  404fbb:	lds    ecx,FWORD PTR [edi-0x74e66bee]
  404fc1:	push   0x4f
  404fc3:	pop    ecx
  404fc4:	xlat   BYTE PTR ds:[ebx]
  404fc5:	sub    DWORD PTR [ebp+0x21],edi
  404fc8:	nop    DWORD PTR [ebx]
  404fcb:	call   0x5e818a70
  404fd0:	clc    
  404fd1:	jb     0x404fdd
  404fd3:	push   ss
  404fd4:	shr    BYTE PTR [esi],0xc4
  404fd7:	pushw  ss
  404fd9:	dec    edx
  404fda:	inc    edi
  404fdb:	inc    ecx
  404fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fdd:	xchg   ebx,eax
  404fde:	cmp    al,0x9f
  404fe0:	lahf   
  404fe1:	xlat   BYTE PTR ds:[ebx]
  404fe2:	adc    edi,DWORD PTR [eax-0x1]
  404fe5:	jae    0x405064
  404fe7:	iret   
  404fe8:	pop    ebp
  404fe9:	jbe    0x404fb5
  404feb:	or     dh,BYTE PTR [eax+0x47]
  404fee:	mov    edi,0x611a4106
  404ff3:	ss adc eax,0x80d4fa69
  404ff9:	rcl    BYTE PTR [edi],1
  404ffb:	ficomp WORD PTR [ecx+0x1a49d5ec]
  405001:	dec    esp
  405002:	fadd   st,st(5)
  405004:	nop
  405005:	or     dh,cl
  405007:	add    al,0x3d
  405009:	mov    eax,0x318e5da1
  40500e:	mov    edx,0xc7b7d93d
  405013:	out    dx,al
  405014:	add    edx,edi
  405016:	xchg   esp,eax
  405017:	mov    cs,ebx
  405019:	or     ch,ah
  40501b:	mov    al,ds:0x52905df
  405020:	test   esi,edi
  405022:	sahf   
  405023:	fisttp WORD PTR [edi+0x29]
  405026:	cld    
  405027:	lea    ebp,[ebp+0x6b]
  40502a:	fsubr  DWORD PTR [edx-0x41]
  40502d:	mov    gs,WORD PTR [ebx]
  40502f:	adc    DWORD PTR ss:[ebp+esi*2+0x1d],eax
  405034:	les    ebx,FWORD PTR [esi+0x7cd449ce]
  40503a:	js     0x405037
  40503c:	test   BYTE PTR ds:0x95dba075,dl
  405042:	fucom  st(6)
  405044:	inc    edx
  405045:	cmp    ah,BYTE PTR [ebp+0x2cabd9ef]
  40504b:	das    
  40504c:	xchg   edi,eax
  40504d:	xchg   edi,eax
  40504e:	scas   eax,DWORD PTR es:[edi]
  40504f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405050:	and    al,0x5b
  405052:	mov    dl,0xf7
  405054:	(bad)  
  405055:	mov    WORD PTR ds:0x50a32c4b,ds
  40505b:	add    eax,0xa4317d2
  405060:	and    BYTE PTR [esp+ebp*1],cl
  405063:	rol    edi,1
  405065:	xor    ecx,edi
  405067:	cmc    
  405068:	lds    eax,FWORD PTR [edx+0x26f655a1]
  40506e:	mov    dl,0xfa
  405070:	xlat   BYTE PTR ds:[ebx]
  405071:	fisttp WORD PTR [edi-0x5b87d5c]
  405077:	shl    DWORD PTR [ecx],1
  405079:	std    
  40507a:	pop    esi
  40507b:	pop    ebx
  40507c:	or     ch,dl
  40507e:	lds    ebx,FWORD PTR [eax+ebp*2+0x47472ceb]
  405085:	jge    0x4050c3
  405087:	jne    0x4050ab
  405089:	mov    ds,WORD PTR [ebx+0x3]
  40508c:	inc    eax
  40508d:	leave  
  40508e:	and    edi,DWORD PTR [ecx-0x60]
  405091:	stos   DWORD PTR es:[edi],eax
  405092:	xchg   BYTE PTR [eax-0x72],ch
  405095:	inc    edi
  405096:	lock loope 0x4050b2
  405099:	test   al,0xa8
  40509b:	enter  0xd219,0x75
  40509f:	or     BYTE PTR [eax+0x429a4db3],0xcc
  4050a6:	and    eax,0x7c01664d
  4050ab:	sbb    eax,0x5d097cc9
  4050b0:	xlat   BYTE PTR ds:[ebx]
  4050b1:	cdq    
  4050b2:	dec    esp
  4050b3:	fwait
  4050b4:	dec    dx
  4050b6:	xchg   edx,eax
  4050b7:	push   edi
  4050b8:	ss mov esi,0xad65e93d
  4050be:	push   esi
  4050bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050c0:	repz and DWORD PTR [edi],0x8d4688e5
  4050c7:	call   FWORD PTR [edx+0x1bf64990]
  4050cd:	inc    edi
  4050ce:	icebp  
  4050cf:	sub    BYTE PTR es:[ebx-0x24],ah
  4050d3:	jge    0x405127
  4050d5:	fmulp  st(2),st
  4050d7:	fldenv [edx-0x67]
  4050da:	retf   
  4050db:	sub    dl,BYTE PTR [ebx+0x5ae919f3]
  4050e1:	sub    edx,edi
  4050e3:	sbb    al,0x3b
  4050e5:	test   BYTE PTR [esp+ecx*1+0x24302b47],0x67
  4050ed:	ss mov ah,0xce
  4050f0:	fbld   TBYTE PTR [eax]
  4050f2:	js     0x405141
  4050f4:	in     eax,dx
  4050f5:	or     edx,ecx
  4050f7:	jecxz  0x405175
  4050f9:	hlt    
  4050fa:	stc    
  4050fb:	mov    ss,WORD PTR [esi-0x5f2d849a]
  405101:	pop    ss
  405102:	push   ebp
  405103:	lds    ebp,FWORD PTR [ecx]
  405105:	sub    DWORD PTR ds:0xcc1940e9,ecx
  40510b:	dec    ecx
  40510c:	pop    ebx
  40510d:	out    0x8,eax
  40510f:	or     cl,bh
  405111:	repz fimul DWORD PTR [edi+0x11]
  405115:	popa   
  405116:	lods   al,BYTE PTR ds:[esi]
  405117:	imul   ebx,DWORD PTR [esp+ebp*4-0x26],0xffffff9f
  40511c:	push   ebp
  40511d:	fwait
  40511e:	outs   dx,BYTE PTR ds:[esi]
  40511f:	dec    DWORD PTR [edi]
  405121:	vmovsd xmm1,xmm1,xmm3
  405125:	jns    0x405151
  405127:	jns    0x4050df
  405129:	or     al,0x6f
  40512b:	stos   DWORD PTR es:[edi],eax
  40512c:	xchg   ecx,eax
  40512d:	sub    cl,bh
  40512f:	nop
  405130:	aas    
  405131:	or     al,ah
  405133:	test   ecx,esi
  405135:	mov    ecx,0x62cc9bbe
  40513a:	ror    ebp,0xd9
  40513d:	push   ecx
  40513e:	(bad)  
  40513f:	lahf   
  405140:	push   ebx
  405141:	push   edx
  405142:	shr    DWORD PTR [edi+eiz*8-0x52],1
  405146:	adc    BYTE PTR [ebp-0x7e],ch
  405149:	iret   
  40514a:	fst    QWORD PTR [ecx+0x3f57c794]
  405150:	loope  0x4051c6
  405152:	nop
  405153:	outs   dx,DWORD PTR ds:[esi]
  405154:	and    eax,0xff6fb6a2
  405159:	or     ebp,DWORD PTR [eax+edi*1]
  40515c:	inc    eax
  40515d:	sub    esp,DWORD PTR [edx+0x68f173de]
  405163:	mov    DWORD PTR [edi+0x1c053461],ebp
  405169:	pop    edx
  40516a:	push   ebp
  40516b:	dec    esi
  40516c:	mov    eax,ds:0x264e1027
  405171:	cmp    al,0xe6
  405173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405174:	lahf   
  405175:	gs mov dh,dl
  405178:	mov    ds:0x6d40d596,eax
  40517d:	ret    
  40517e:	jp     0x40516b
  405180:	and    ebx,DWORD PTR [ebp*2+0x2696bfa5]
  405187:	sar    DWORD PTR [ecx+0x77],0xf0
  40518b:	icebp  
  40518c:	mov    esi,0xd353c9ed
  405191:	outs   dx,DWORD PTR ds:[esi]
  405192:	(bad)  
  405193:	mov    eax,ds:0x15f8969e
  405198:	sbb    esp,edi
  40519a:	rcr    DWORD PTR [ebp+0x32],0x1f
  40519e:	fimul  WORD PTR [edx]
  4051a0:	outs   dx,BYTE PTR ds:[esi]
  4051a1:	jns    0x40515d
  4051a3:	jns    0x405196
  4051a5:	sub    ebp,edi
  4051a7:	out    dx,al
  4051a8:	jmp    0x4051be
  4051aa:	jmp    0xf7d6a1bc
  4051af:	mov    esp,edi
  4051b1:	or     eax,0x2c5616e4
  4051b6:	shl    DWORD PTR [edx-0x7a577cdf],1
  4051bc:	out    0x55,al
  4051be:	adc    eax,0x270f97b8
  4051c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c4:	sbb    eax,0xfbb8ede8
  4051c9:	sbb    al,BYTE PTR [eax]
  4051cb:	in     eax,0x67
  4051cd:	xchg   ebx,eax
  4051ce:	mov    ah,0xfc
  4051d0:	sbb    al,0x8f
  4051d2:	push   es
  4051d3:	dec    esi
  4051d4:	sub    eax,0x5c288699
  4051d9:	pop    ds
  4051da:	inc    esp
  4051db:	adc    BYTE PTR [esi-0x711136c7],bh
  4051e1:	popf   
  4051e2:	inc    eax
  4051e3:	je     0x40518c
  4051e5:	fnstenv es:[ecx+0x42a28232]
  4051ec:	push   ebp
  4051ed:	int3   
  4051ee:	push   eax
  4051ef:	jmp    FWORD PTR [esi+0x2e]
  4051f2:	fwait
  4051f3:	add    al,0x91
  4051f5:	loop   0x405251
  4051f7:	push   edx
  4051f8:	adc    eax,0x31ee8f06
  4051fd:	scas   al,BYTE PTR es:[edi]
  4051fe:	icebp  
  4051ff:	push   ebx
  405200:	or     BYTE PTR [ebx],0x80
  405203:	lods   eax,DWORD PTR ds:[esi]
  405204:	cmp    eax,0xbd9b2f26
  405209:	adc    al,cl
  40520b:	nop
  40520c:	cld    
  40520d:	jg     0x405256
  40520f:	xor    eax,0x1594f561
  405214:	loopne 0x4051e1
  405216:	arpl   WORD PTR [ebx],bx
  405218:	adc    BYTE PTR [ebp+0x2816be42],dl
  40521e:	push   ss
  40521f:	out    0x1f,al
  405221:	mov    edx,0x6658272
  405226:	enter  0x1bd3,0xd8
  40522a:	ficomp DWORD PTR [esi+0x1563fabe]
  405230:	dec    ebx
  405231:	jbe    0x405213
  405233:	mov    esp,0x1ab195c9
  405238:	loope  0x405226
  40523a:	shl    esi,1
  40523c:	mov    dl,0x42
  40523e:	cmp    BYTE PTR [ebp+0x5f],ch
  405241:	jno    0x405299
  405243:	push   0xffffffe4
  405245:	xchg   edx,eax
  405246:	cdq    
  405247:	rep ins DWORD PTR es:[edi],dx
  405249:	add    eax,0x91b5eadd
  40524e:	sub    BYTE PTR [edi+0xa],al
  405251:	pop    esp
  405252:	loop   0x40520a
  405254:	pop    esp
  405255:	inc    edi
  405256:	mov    bh,0x8c
  405258:	out    dx,al
  405259:	loop   0x4052b8
  40525b:	call   0xe5ede9e1
  405260:	test   DWORD PTR [eax-0x5d06517b],ecx
  405266:	pusha  
  405267:	mov    dh,0x88
  405269:	test   DWORD PTR [esi+0xe1e6e22],ebx
  40526f:	jbe    0x40529b
  405271:	inc    ebp
  405272:	pop    edx
  405273:	lods   al,BYTE PTR ds:[esi]
  405274:	aaa    
  405275:	adc    ecx,DWORD PTR [ebx]
  405277:	jo     0x405214
  405279:	mov    ds:0x77036585,al
  40527e:	xchg   al,ah
  405280:	xchg   esi,eax
  405281:	lahf   
  405282:	xlat   BYTE PTR ds:[ebx]
  405283:	mov    ah,0x38
  405285:	xlat   BYTE PTR ds:[ebx]
  405286:	outs   dx,DWORD PTR es:[esi]
  405288:	xchg   BYTE PTR [esi],ah
  40528a:	repz xor BYTE PTR [ebx],ch
  40528d:	ja     0x405210
  40528f:	fisubr DWORD PTR [eax-0x7]
  405292:	jl     0x4052e6
  405294:	pop    edi
  405295:	mov    ecx,edi
  405297:	inc    ebp
  405298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405299:	pop    ss
  40529a:	nop
  40529b:	jge    0x4052e1
  40529d:	je     0x405220
  40529f:	xor    al,0xb9
  4052a1:	call   0xb613:0x21adad97
  4052a8:	retf   0x7c48
  4052ab:	sahf   
  4052ac:	mov    cl,0xe6
  4052ae:	and    bl,BYTE PTR [eax-0x223a9b7c]
  4052b4:	loope  0x4052af
  4052b6:	retf   0xbe59
  4052b9:	sbb    DWORD PTR [edx-0x3e],edx
  4052bc:	cld    
  4052bd:	ins    DWORD PTR es:[edi],dx
  4052be:	xor    edx,DWORD PTR [eax+0x1b46e285]
  4052c4:	popf   
  4052c5:	inc    esi
  4052c6:	mov    ds:0x1e00a749,eax
  4052cb:	and    edx,0xf9d67ef7
  4052d1:	sub    BYTE PTR [edx],cl
  4052d3:	inc    ecx
  4052d4:	jb     0x40529f
  4052d6:	(bad)  
  4052d7:	retf   
  4052d8:	xor    ebp,DWORD PTR ds:0x449f9d90
  4052de:	fstp   DWORD PTR [esp+ebx*4+0x21]
  4052e2:	pop    ecx
  4052e3:	aad    0xaf
  4052e5:	popf   
  4052e6:	mov    dh,0x99
  4052e8:	nop
  4052e9:	jns    0x40535b
  4052eb:	sbb    eax,DWORD PTR [edi+0x4c5b46cb]
  4052f1:	sbb    BYTE PTR [edx+edx*1],cl
  4052f4:	aad    0x9e
  4052f6:	push   es
  4052f7:	into   
  4052f8:	jb     0x40536b
  4052fa:	push   esi
  4052fb:	clc    
  4052fc:	pop    esp
  4052fd:	mov    ebx,0x8f303864
  405302:	xchg   esi,eax
  405303:	sub    ah,BYTE PTR [eax]
  405305:	lods   al,BYTE PTR ds:[esi]
  405306:	les    esi,FWORD PTR [esi+edx*4]
  405309:	call   0x8ff613ce
  40530e:	jecxz  0x405329
  405310:	mov    dl,0x22
  405312:	or     ecx,DWORD PTR [edi-0x29]
  405315:	enter  0x80a,0x33
  405319:	test   BYTE PTR [ecx],ah
  40531b:	rcl    DWORD PTR [esi],1
  40531d:	repz add DWORD PTR [ebx-0x67],0xbf741e8e
  405325:	cmp    al,0x8b
  405327:	dec    esi
  405328:	sub    ecx,DWORD PTR [edx-0x74]
  40532b:	push   edi
  40532c:	adc    dh,BYTE PTR [edi+0x126a2d88]
  405332:	adc    dl,BYTE PTR [edx]
  405334:	or     eax,0x59d5ab53
  405339:	sbb    DWORD PTR [ebx-0x13fd996d],ebp
  40533f:	rcr    DWORD PTR [edx+0x60],0x86
  405343:	push   esp
  405344:	mov    ecx,gs
  405346:	shl    DWORD PTR [eax-0x3e],1
  405349:	scas   eax,DWORD PTR es:[edi]
  40534a:	pop    ebx
  40534b:	xor    al,0xd3
  40534d:	jle    0x405350
  40534f:	dec    edi
  405350:	cmp    dh,BYTE PTR [ecx+edi*2-0x62624c26]
  405357:	icebp  
  405358:	jge    0x405325
  40535a:	(bad)  
  40535b:	mov    ebp,0xd6521dfc
  405360:	cmp    cl,bl
  405362:	pop    esp
  405363:	dec    esp
  405364:	mov    ebp,0x68af11cd
  405369:	js     0x4053e0
  40536b:	or     DWORD PTR [ebx-0x5f4dddbe],esp
  405371:	inc    ebx
  405372:	dec    ebx
  405373:	es into 
  405375:	mov    esp,0xb280ac55
  40537a:	lea    edi,[esi-0x58]
  40537d:	inc    ebx
  40537e:	ja     0x4053e3
  405380:	je     0x4053a6
  405382:	xor    ch,dh
  405384:	call   0xa4b5ca92
  405389:	fisubr DWORD PTR [ebp+0x69004dfb]
  40538f:	outs   dx,BYTE PTR ds:[esi]
  405390:	mov    bh,BYTE PTR [ebx-0x42]
  405393:	adc    edi,DWORD PTR [ecx+edi*8]
  405396:	vpunpcklwd ymm0,ymm0,YMMWORD PTR [edi]
  40539a:	pop    edx
  40539b:	or     cl,ch
  40539d:	pop    ecx
  40539e:	es mov esp,0xd5dbdc68
  4053a4:	repz into 
  4053a6:	lea    ebx,[esi-0x2c96b872]
  4053ac:	call   0x4df4f15b
  4053b1:	pop    edx
  4053b2:	aaa    
  4053b3:	ficomp DWORD PTR [esi+0x3e306e59]
  4053b9:	sbb    BYTE PTR [esi-0x4b],bl
  4053bc:	enter  0xca1b,0xd6
  4053c0:	retf   0x8cd8
  4053c3:	dec    eax
  4053c4:	sub    dl,BYTE PTR [eax+0x22]
  4053c7:	push   eax
  4053c8:	sbb    DWORD PTR [ebp+0xc],eax
  4053cb:	push   eax
  4053cc:	out    0x5b,al
  4053ce:	pop    edi
  4053cf:	mov    BYTE PTR [ecx],ah
  4053d1:	rol    BYTE PTR [ebp+eiz*4-0x7537c5b7],0xb1
  4053d9:	jo     0x405401
  4053db:	addr16 out dx,al
  4053dd:	sbb    ebx,edi
  4053df:	jnp    0x405414
  4053e1:	push   edi
  4053e2:	xchg   esp,eax
  4053e3:	nop
  4053e4:	lock push ss
  4053e6:	jecxz  0x405440
  4053e8:	test   al,0x6
  4053ea:	fucomi st,st(6)
  4053ec:	clc    
  4053ed:	mov    esp,0x9bff5935
  4053f2:	add    DWORD PTR [esi-0x61afe4ce],ebx
  4053f8:	and    eax,0xd55c2f58
  4053fd:	pop    eax
  4053fe:	rcl    DWORD PTR [edx-0x3f],0x6b
  405402:	mov    WORD PTR [edi+0x4d35fa],es
  405408:	je     0x405488
  40540a:	shr    ecx,cl
  40540c:	and    eax,0xfed8f5b1
  405411:	sahf   
  405412:	add    esp,DWORD PTR [ecx]
  405414:	push   es
  405415:	mov    al,ds:0xddc4ce7a
  40541a:	adc    BYTE PTR [esp],bh
  40541d:	pop    eax
  40541e:	icebp  
  40541f:	sbb    BYTE PTR [ebp+0x3f],al
  405422:	les    edi,FWORD PTR [esi]
  405424:	jnp    0x4053d9
  405426:	push   ss
  405427:	push   ebx
  405428:	scas   al,BYTE PTR es:[edi]
  405429:	(bad)  
  40542a:	pop    ds
  40542b:	xchg   ebx,eax
  40542c:	push   0xffffffae
  40542e:	leave  
  40542f:	adc    BYTE PTR [eax-0x6e],dh
  405432:	mov    DWORD PTR [ecx+0xaba4b06],ebp
  405438:	out    dx,eax
  405439:	popa   
  40543a:	jbe    0x4053eb
  40543c:	jmp    0x99d6:0xda4274d6
  405443:	jg     0x405463
  405445:	scas   eax,DWORD PTR es:[edi]
  405446:	xor    dh,0x7a
  405449:	mov    BYTE PTR [ebx],0xd
  40544c:	aam    0x2
  40544e:	int3   
  40544f:	(bad)  
  405450:	jbe    0x405433
  405452:	call   0xf31c:0xcaa88197
  405459:	mov    ds:0x50e84fc4,al
  40545e:	mov    al,ds:0xb0b43baf
  405463:	sub    ebx,DWORD PTR [edx+0x24acf26d]
  405469:	js     0x405421
  40546b:	test   BYTE PTR [eax-0x8],ah
  40546e:	add    eax,0xbb9b7bb8
  405473:	into   
  405474:	push   esi
  405475:	mov    esp,ds
  405477:	das    
  405478:	or     eax,0x780040c
  40547d:	jmp    0x6b22:0xf93f37bd
  405484:	cld    
  405485:	fld    DWORD PTR [ecx-0x51bd9245]
  40548b:	inc    edi
  40548c:	scas   al,BYTE PTR es:[edi]
  40548d:	test   BYTE PTR cs:[ebx],al
  405490:	es xchg ebp,eax
  405492:	lds    ebx,FWORD PTR [edx-0x293d2f00]
  405498:	cmp    dl,BYTE PTR [ebx+ebx*4+0x36]
  40549c:	xchg   DWORD PTR [edi],ebp
  40549e:	and    eax,0xdafcd0af
  4054a3:	loopne 0x405470
  4054a5:	xor    BYTE PTR [ecx],al
  4054a7:	add    esi,0x4e46c272
  4054ad:	(bad)  
  4054ae:	test   eax,0xbcf1874d
  4054b3:	sbb    eax,0x7165732b
  4054b8:	inc    edi
  4054b9:	push   cs
  4054ba:	fwait
  4054bb:	or     ecx,esp
  4054bd:	out    dx,eax
  4054be:	jmp    0xebef3809
  4054c3:	xor    BYTE PTR [edx],dl
  4054c5:	sub    eax,0x95522b99
  4054ca:	mov    esi,0x2ed8888c
  4054cf:	mov    WORD PTR [edi],gs
  4054d1:	dec    esi
  4054d2:	push   ecx
  4054d3:	jbe    0x4054c9
  4054d5:	push   esi
  4054d6:	stc    
  4054d7:	push   ebp
  4054d8:	ins    BYTE PTR es:[edi],dx
  4054d9:	aaa    
  4054da:	mov    ?,WORD PTR [esi]
  4054dc:	xchg   ecx,eax
  4054dd:	adc    eax,0xa6e6f305
  4054e2:	sbb    eax,0xcc798395
  4054e7:	int    0xb4
  4054e9:	xor    eax,0x750b94d6
  4054ee:	out    0x1a,al
  4054f0:	jp     0x40555c
  4054f2:	sbb    ebp,DWORD PTR [esi+ebx*4-0x65]
  4054f6:	ins    BYTE PTR es:[edi],dx
  4054f7:	addr16 enter 0xd0b6,0xbb
  4054fc:	pop    es
  4054fd:	or     eax,0x1b0d455b
  405502:	mov    ecx,0x4f42d439
  405507:	pop    ebx
  405508:	lahf   
  405509:	cli    
  40550a:	out    dx,eax
  40550b:	adc    edi,DWORD PTR ds:0x4e5147e2
  405511:	inc    edx
  405512:	pop    eax
  405513:	call   0x85ed49c0
  405518:	(bad)  
  405519:	push   ss
  40551a:	inc    edx
  40551b:	xor    ebp,DWORD PTR [edi]
  40551d:	mov    edi,0x80905c3b
  405522:	imul   ebx,ebp,0x1c9c22ab
  405528:	lahf   
  405529:	push   ss
  40552a:	mov    ebx,0x81f7828b
  40552f:	(bad)  
  405530:	pop    ecx
  405531:	mov    ds:0x56f353f5,al
  405536:	add    edi,DWORD PTR [esi]
  405538:	dec    ebx
  405539:	push   cs
  40553a:	or     ebp,DWORD PTR [ebx-0x3b00b78d]
  405540:	xor    ebp,edi
  405542:	in     al,0xef
  405544:	les    ecx,FWORD PTR [edx-0x6e]
  405547:	dec    ebp
  405548:	xchg   edi,eax
  405549:	into   
  40554a:	and    eax,0x6f86f46
  40554f:	test   eax,0x7d6f1124
  405554:	test   eax,0x7ed0b24f
  405559:	adc    dh,cl
  40555b:	dec    BYTE PTR [esi+edx*2-0x1a]
  40555f:	push   cs
  405560:	fst    QWORD PTR [esp+esi*4]
  405563:	cmp    DWORD PTR [edi],esi
  405565:	stc    
  405566:	adc    al,bl
  405568:	ss mov esp,0x777719f3
  40556e:	sub    DWORD PTR ds:0x25a0d386,ebx
  405574:	xlat   BYTE PTR ds:[ebx]
  405575:	and    eax,0x9771f5e4
  40557a:	(bad)  [eax]
  40557c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40557d:	push   ds
  40557e:	push   ebp
  40557f:	fistp  QWORD PTR [ecx-0x58068e3d]
  405585:	jmp    0xebd11308
  40558a:	fist   DWORD PTR [esi-0x71]
  40558d:	mov    ebp,0xcfd2123b
  405592:	icebp  
  405593:	fnclex 
  405595:	sbb    eax,0x7c2a3c09
  40559a:	pop    ebp
  40559b:	mov    bh,0x5
  40559d:	data16 mul BYTE PTR ds:0x9530e8e9
  4055a4:	es dec edi
  4055a6:	in     al,0x35
  4055a8:	or     al,0x5
  4055aa:	push   edi
  4055ab:	and    ecx,DWORD PTR [ecx+0x62]
  4055ae:	dec    esi
  4055af:	loopne 0x4055f5
  4055b1:	cmp    ebx,DWORD PTR [edi-0x6c]
  4055b4:	inc    esp
  4055b5:	stc    
  4055b6:	iret   
  4055b7:	mov    edx,0xad4d7ccd
  4055bc:	je     0x405571
  4055be:	xchg   DWORD PTR [esi+esi*4+0x79bdb274],esp
  4055c5:	push   0xc
  4055c7:	(bad)  
  4055c8:	dec    esi
  4055c9:	push   0xffffffbf
  4055cb:	cld    
  4055cc:	(bad)  
  4055cd:	clc    
  4055ce:	push   ebp
  4055cf:	sub    BYTE PTR [edx],ah
  4055d1:	es and eax,0xbc5f8f0b
  4055d7:	or     dl,ah
  4055d9:	add    esp,esp
  4055db:	pop    ds
  4055dc:	jecxz  0x405649
  4055de:	cmp    BYTE PTR [ecx],cl
  4055e0:	jae    0x405614
  4055e2:	xchg   esi,eax
  4055e3:	or     BYTE PTR [ecx+ebx*4+0x20bbb605],0x96
  4055eb:	mov    dh,BYTE PTR [ebp+ecx*4+0x6129953a]
  4055f2:	mov    eax,0xb41833e6
  4055f7:	lods   eax,DWORD PTR ds:[esi]
  4055f8:	sbb    cl,BYTE PTR [ecx]
  4055fa:	stc    
  4055fb:	(bad)  
  4055fc:	pop    edx
  4055fd:	push   edx
  4055fe:	fldl2e 
  405600:	mov    ecx,0x7c1c6181
  405605:	add    DWORD PTR [edi],esp
  405607:	cmp    DWORD PTR [esi],ebp
  405609:	push   edx
  40560a:	sub    ebp,eax
  40560c:	adc    BYTE PTR [eax+0x5834fde1],0x59
  405613:	test   BYTE PTR [edi+eax*8-0x2c0d8d5e],ah
  40561a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40561b:	dec    edi
  40561c:	add    BYTE PTR [edi+0x74c6c08b],cl
  405622:	(bad)  
  405624:	jmp    0x511b13bb
  405629:	sbb    BYTE PTR [eax],ah
  40562b:	push   edi
  40562c:	stos   BYTE PTR es:[edi],al
  40562d:	loop   0x4056ad
  40562f:	adc    ah,ah
  405631:	xlat   BYTE PTR ds:[ebx]
  405632:	jo     0x4055c6
  405634:	stc    
  405635:	retf   
  405636:	mov    bh,0x1a
  405638:	enter  0x15d9,0xe6
  40563c:	lahf   
  40563d:	jns    0x405674
  40563f:	mov    ebp,0x2ea6b4df
  405644:	mov    edi,0xc3732055
  405649:	pop    ecx
  40564a:	retf   0x4197
  40564d:	push   ecx
  40564e:	ins    BYTE PTR es:[edi],dx
  40564f:	and    al,0xdc
  405651:	pushf  
  405652:	mov    BYTE PTR [edi+0x57],cl
  405655:	sbb    DWORD PTR [ebx-0x4298c94a],ecx
  40565b:	pop    edi
  40565c:	shufps xmm1,XMMWORD PTR [esi+ecx*1+0x3b],0x8a
  405662:	jle    0x405611
  405664:	xor    al,0xde
  405666:	add    al,0x4c
  405668:	stc    
  405669:	les    esp,FWORD PTR [eax-0x7e]
  40566c:	or     eax,0x3da36a55
  405671:	adc    al,0x68
  405673:	cs and ah,ch
  405676:	mov    edx,edi
  405678:	sahf   
  405679:	sbb    al,ch
  40567b:	mov    ecx,fs
  40567d:	jnp    0x4056f7
  40567f:	push   es
  405680:	out    0x45,eax
  405682:	ja     0x40564a
  405684:	push   0xfffffff3
  405686:	mov    eax,0xab59f7f
  40568b:	mov    dh,0x92
  40568d:	les    ecx,FWORD PTR [esi]
  40568f:	mov    esp,0x243f7e6f
  405694:	jge    0x4056ee
  405696:	ds es fcomp QWORD PTR gs:[edx+0x6f5b69c8]
  40569f:	and    eax,0x31c5de04
  4056a4:	test   eax,0x1d4de5e1
  4056a9:	ss icebp 
  4056ab:	xchg   ecx,eax
  4056ac:	daa    
  4056ad:	repnz cmp al,0x9f
  4056b0:	mov    ?,WORD PTR [ebx+0x6d]
  4056b3:	repz mov ds:0x3dcec8de,eax
  4056b9:	sbb    DWORD PTR [edi+0x28f95bd5],edx
  4056bf:	clc    
  4056c0:	hlt    
  4056c1:	stc    
  4056c2:	je     0x405664
  4056c4:	daa    
  4056c5:	xchg   esi,eax
  4056c7:	in     eax,0xc3
  4056c9:	jb     0x4056f8
  4056cb:	aam    0x45
  4056cd:	sbb    al,BYTE PTR [esi-0x1b]
  4056d0:	ss gs inc eax
  4056d3:	xor    eax,0x69e77bd
  4056d8:	dec    eax
  4056d9:	jbe    0x405712
  4056db:	in     al,0x51
  4056dd:	(bad)  
  4056de:	in     al,0xce
  4056e0:	in     al,0xce
  4056e2:	stc    
  4056e3:	and    BYTE PTR [ecx+ebx*4+0x61],bh
  4056e7:	into   
  4056e8:	sub    eax,0x51dd5822
  4056ed:	scas   eax,DWORD PTR es:[edi]
  4056ee:	lahf   
  4056ef:	or     DWORD PTR [edi-0x112b5f2c],ebx
  4056f5:	add    DWORD PTR [eax+0x3a05ab36],ebx
  4056fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056fc:	sub    cl,BYTE PTR [edx+0x35c0b32a]
  405702:	add    DWORD PTR [eax+0x19],eax
  405705:	out    0x93,al
  405707:	push   ecx
  405708:	scas   eax,DWORD PTR es:[edi]
  405709:	dec    esp
  40570a:	ret    0xc20f
  40570d:	cmp    DWORD PTR [ebp+0x45],ebx
  405710:	stos   DWORD PTR es:[edi],eax
  405711:	pop    edi
  405712:	outs   dx,BYTE PTR ds:[esi]
  405713:	push   ebp
  405714:	cmp    ah,bl
  405716:	outs   dx,BYTE PTR ds:[esi]
  405717:	pop    ebx
  405718:	test   BYTE PTR [ebx],0xc6
  40571b:	mov    dl,0xaa
  40571d:	mov    esi,0x113ef752
  405722:	dec    ebp
  405723:	jg     0x4056e8
  405725:	push   es
  405726:	dec    ebp
  405727:	dec    esi
  405728:	test   DWORD PTR [esi],esi
  40572a:	ret    
  40572b:	es out 0xfb,al
  40572e:	jno    0x405723
  405730:	add    ecx,0x66
  405733:	mov    cl,0x9d
  405735:	aam    0xeb
  405737:	fistp  DWORD PTR [edx+0x497cbdd0]
  40573d:	std    
  40573e:	sub    bl,0xf9
  405741:	rcr    DWORD PTR [esi],0xf2
  405744:	sub    eax,DWORD PTR [ecx+0x44f124e]
  40574a:	inc    eax
  40574b:	xor    BYTE PTR [edi-0x58],bh
  40574e:	hlt    
  40574f:	mov    ah,BYTE PTR [esi-0x330c1184]
  405755:	ret    
  405756:	pop    ss
  405757:	add    al,0x13
  405759:	call   0xb14b8997
  40575e:	cmp    DWORD PTR [ebp-0x7de66336],0xd02cc730
  405768:	xchg   esp,eax
  405769:	pop    esp
  40576a:	push   ecx
  40576b:	in     eax,0xb8
  40576d:	or     eax,DWORD PTR [eax+0x1c]
  405770:	fdiv   st,st(5)
  405772:	fwait
  405773:	push   esp
  405774:	mov    al,0x7
  405776:	imul   eax,esp,0x76
  405779:	clc    
  40577a:	imul   esp,edx,0x4230c549
  405780:	out    0x4a,eax
  405782:	data16 jp 0x4057b4
  405785:	xor    eax,0xae7c70cf
  40578a:	jae    0x405744
  40578c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40578d:	call   0xa156:0xfb9b9ab8
  405794:	stc    
  405795:	fidivr WORD PTR [esi-0x2f3ba47b]
  40579b:	mov    dl,0xc6
  40579d:	mov    dl,0x8
  40579f:	or     BYTE PTR [edi+eax*1-0x1b],bh
  4057a3:	dec    ebx
  4057a4:	inc    eax
  4057a5:	xor    BYTE PTR [edi+0x1e4836fe],cl
  4057ab:	inc    ebp
  4057ac:	pop    esp
  4057ad:	fs xor eax,0x61ac9e77
  4057b3:	jns    0x40581a
  4057b5:	out    dx,al
  4057b6:	lods   al,BYTE PTR ds:[esi]
  4057b7:	mov    edx,edi
  4057b9:	test   BYTE PTR [edx+0x32],ch
  4057bc:	cdq    
  4057bd:	adc    DWORD PTR [edi+0x55],ebx
  4057c0:	lods   al,BYTE PTR ds:[esi]
  4057c1:	jp     0x40577a
  4057c3:	mov    esi,0x84cc8dbd
  4057c8:	ja     0x4057b0
  4057ca:	(bad)  
  4057cb:	jge    0x40576f
  4057cd:	movaps xmm5,XMMWORD PTR [edx]
  4057d0:	mov    bl,0x90
  4057d2:	mov    al,0x28
  4057d4:	mov    ch,0xfb
  4057d6:	inc    edx
  4057d7:	add    ebx,esi
  4057d9:	stc    
  4057da:	jmp    0x3b2b33d4
  4057df:	mov    esi,0x9c9f9033
  4057e4:	test   al,0xb9
  4057e6:	imul   esi,DWORD PTR [ebx],0xebb13e72
  4057ec:	call   0xf1de32d7
  4057f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057f2:	std    
  4057f3:	dec    esi
  4057f4:	push   ebp
  4057f5:	jg     0x4057b4
  4057f7:	add    al,BYTE PTR [edx+0x21]
  4057fa:	sbb    DWORD PTR [esp+esi*2],0xbf49a507
  405801:	rcr    DWORD PTR [eax+ecx*4-0x52],1
  405805:	scas   eax,DWORD PTR es:[edi]
  405806:	(bad)  
  405807:	leave  
  405808:	fwait
  405809:	sbb    dl,BYTE PTR [ebx]
  40580b:	test   cl,0x96
  40580e:	or     edi,ecx
  405810:	or     ebp,DWORD PTR [ecx-0x601e70]
  405816:	push   es
  405817:	pop    ecx
  405818:	sbb    esp,DWORD PTR [edi+0x39]
  40581b:	sub    edi,DWORD PTR ds:0xd96559a1
  405821:	xor    ch,BYTE PTR [eax-0x68206ae3]
  405827:	ins    BYTE PTR es:[edi],dx
  405828:	add    DWORD PTR [ebp+0x3654dc7a],ebx
  40582e:	add    ebp,DWORD PTR [ecx-0x24]
  405831:	mov    al,BYTE PTR [edx-0xb940ec1]
  405837:	fisub  DWORD PTR [edi-0x27]
  40583a:	fmul   QWORD PTR [ebp-0x3c]
  40583d:	shr    BYTE PTR [esi-0x50c61bd9],1
  405843:	push   ebp
  405844:	fcom   QWORD PTR [edx-0x8a00e2f]
  40584a:	test   al,0xe5
  40584c:	and    edi,DWORD PTR [esi]
  40584e:	add    DWORD PTR [ebp+0xd],eax
  405851:	mov    ah,0x84
  405853:	fidiv  WORD PTR [edi+0x22]
  405856:	mov    dh,0xc8
  405858:	xchg   edx,eax
  405859:	retf   
  40585a:	xor    DWORD PTR [ecx],edi
  40585c:	push   es
  40585d:	pop    esi
  40585e:	bound  edi,QWORD PTR [eax]
  405860:	lods   eax,DWORD PTR ds:[esi]
  405861:	cmp    BYTE PTR [edx+0x3f],ah
  405864:	push   edx
  405865:	lock test eax,0x1446260b
  40586b:	ret    
  40586c:	mov    eax,0x72033e50
  405871:	cdq    
  405872:	in     al,0xc8
  405874:	jnp    0x40587d
  405876:	mov    al,ds:0xed540859
  40587b:	ret    
  40587c:	inc    ebx
  40587d:	das    
  40587e:	out    dx,al
  40587f:	xchg   esi,eax
  405880:	test   eax,0xff96d8cd
  405885:	mov    al,0x89
  405887:	daa    
  405888:	dec    esi
  405889:	mov    ebx,0xc2272291
  40588e:	fadd   QWORD PTR [esi-0x62]
  405891:	je     0x405822
  405893:	jno    0x4058db
  405895:	mov    eax,?
  405897:	and    eax,0xf8fd2cd5
  40589c:	mov    al,ds:0xa67ffaae
  4058a1:	jo     0x405847
  4058a3:	xchg   ecx,eax
  4058a4:	push   esi
  4058a5:	fucom  st(4)
  4058a7:	les    edi,FWORD PTR [ebx-0x7e]
  4058aa:	fsubp  st(4),st
  4058ac:	mov    eax,ds:0x775068d7
  4058b1:	xor    DWORD PTR [ecx],esi
  4058b3:	add    BYTE PTR [esi-0x7d],0x95
  4058b7:	js     0x4058d7
  4058b9:	push   0x1b
  4058bb:	jg     0x40583f
  4058bd:	imul   eax,ebx,0x6e
  4058c0:	ret    
  4058c1:	push   esi
  4058c2:	repnz cdq 
  4058c4:	(bad)  
  4058c5:	jb     0x4058ba
  4058c7:	sbb    dl,ah
  4058c9:	stos   DWORD PTR es:[edi],eax
  4058ca:	(bad)  
  4058cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058cd:	sti    
  4058ce:	push   edi
  4058cf:	push   ds
  4058d0:	test   DWORD PTR [edx+esi*8-0x19],ecx
  4058d4:	nop
  4058d5:	xchg   esp,eax
  4058d6:	inc    ebx
  4058d7:	(bad)  
  4058d8:	mov    ebp,0x8999b1b5
  4058dd:	add    DWORD PTR [eax],edi
  4058df:	dec    ebp
  4058e0:	inc    edi
  4058e1:	and    eax,0xde797ac5
  4058e6:	stos   BYTE PTR es:[edi],al
  4058e7:	dec    ecx
  4058e8:	dec    esi
  4058e9:	sub    DWORD PTR [esi+0x7a],ebp
  4058ec:	xchg   dl,dl
  4058ee:	repz pop edi
  4058f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058f1:	popf   
  4058f2:	in     eax,dx
  4058f3:	or     DWORD PTR [edx],eax
  4058f5:	dec    DWORD PTR [eax]
  4058f7:	add    al,0xe9
  4058f9:	push   ebx
  4058fa:	ss or  esp,esi
  4058fd:	jne    0x40593e
  4058ff:	sub    DWORD PTR [ebp+0x51],ebx
  405902:	jge    0x40591f
  405904:	push   0x4f00983b
  405909:	dec    ecx
  40590a:	cmp    DWORD PTR [edx+ebx*8-0x55ea3c3],0x69
  405912:	dec    ebp
  405913:	das    
  405914:	test   BYTE PTR [ebp+0x3d],0x94
  405918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405919:	pop    esi
  40591a:	mov    esp,0x40efd55d
  40591f:	mov    bl,0xfe
  405921:	sub    al,al
  405923:	cmp    dl,BYTE PTR [ecx-0x6c]
  405926:	mov    ds:0x8f7825ae,al
  40592b:	ss in  al,0x86
  40592e:	div    ecx
  405930:	mov    eax,0x233c13f9
  405935:	add    eax,0x684d3e1
  40593a:	or     dl,0xa0
  40593d:	jle    0x4059a1
  40593f:	cmp    DWORD PTR [edx-0x7b09a78c],ebx
  405945:	cs jg  0x405952
  405948:	inc    ecx
  405949:	xchg   ebp,eax
  40594a:	mov    ebp,0x600dacb7
  40594f:	sahf   
  405950:	lea    eax,[edi+0x2ac79b5e]
  405956:	sub    ch,BYTE PTR [ecx-0x2e60fc3a]
  40595c:	xchg   ecx,eax
  40595d:	sub    DWORD PTR [ebx+edx*1-0x10],eax
  405961:	dec    ebx
  405962:	xor    BYTE PTR [eax],ch
  405964:	and    al,0x2d
  405966:	jmp    0xf70b:0x6f864616
  40596d:	mov    ebx,ebp
  40596f:	dec    ebx
  405970:	cmp    BYTE PTR [esp+esi*8],ah
  405973:	add    DWORD PTR [esi-0x1e4ab817],esi
  405979:	js     0x405987
  40597b:	mov    ecx,0xd800be3c
  405980:	das    
  405981:	inc    ecx
  405982:	mov    bl,0x8e
  405984:	gs sub al,0x1a
  405987:	cmp    BYTE PTR [edi],ah
  405989:	pushf  
  40598a:	out    dx,al
  40598b:	fdiv   st(2),st
  40598d:	fldcw  WORD PTR [eax+0x7e]
  405990:	out    dx,eax
  405991:	push   edi
  405992:	lds    esp,FWORD PTR [edx-0x45e7f2b1]
  405998:	add    edi,DWORD PTR [esi]
  40599a:	and    edx,DWORD PTR [esi+edx*1]
  40599d:	out    0x58,al
  40599f:	jle    0x40594b
  4059a1:	sbb    BYTE PTR [ecx-0x36bda095],0x7e
  4059a8:	sar    BYTE PTR ss:[ecx+0x6c097207],0x28
  4059b0:	and    DWORD PTR [edi-0x4f],esp
  4059b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059b4:	lods   eax,DWORD PTR ds:[esi]
  4059b5:	cdq    
  4059b6:	mov    bh,BYTE PTR [ebx+0x26da0a3b]
  4059bc:	icebp  
  4059bd:	xor    BYTE PTR [edx-0x4194f962],bl
  4059c3:	lods   al,BYTE PTR ds:[esi]
  4059c4:	repz ss cwde 
  4059c7:	icebp  
  4059c8:	cwde   
  4059c9:	jmp    0x34f9fb8e
  4059ce:	xchg   BYTE PTR ds:0xb0bcea8f,bl
  4059d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059d5:	daa    
  4059d6:	inc    esp
  4059d7:	and    eax,0xbf14c9f5
  4059dc:	cs in  al,0x6c
  4059df:	and    DWORD PTR [ecx+esi*4+0x7f6bac6b],ecx
  4059e6:	jnp    0x4059c4
  4059e8:	and    DWORD PTR [esi],ebp
  4059ea:	lahf   
  4059eb:	push   ds
  4059ec:	mov    eax,ds:0xcef6498f
  4059f1:	bound  ebx,QWORD PTR [edi+0x4128a0e4]
  4059f7:	rcl    BYTE PTR [edx+0x19],0x55
  4059fb:	in     eax,0x3a
  4059fd:	xor    esp,edx
  4059ff:	mov    ebp,0xd1fc497d
  405a04:	cli    
  405a05:	fdiv   QWORD PTR [edx-0x49]
  405a08:	mov    ecx,0xdfbff1d9
  405a0d:	or     al,0xd4
  405a0f:	inc    ecx
  405a10:	jg     0x4059b5
  405a12:	arpl   WORD PTR ds:0x3bc6e406,si
  405a18:	mov    ch,0x18
  405a1a:	add    DWORD PTR [edi],ecx
  405a1c:	lahf   
  405a1d:	xchg   edx,eax
  405a1e:	sub    eax,0x5e47b6d6
  405a23:	(bad)  
  405a24:	jmp    0x405a82
  405a26:	arpl   bp,sp
  405a28:	and    al,0x29
  405a2a:	call   0xdc8c:0xbb01fb49
  405a31:	jp     0x405a71
  405a33:	inc    ecx
  405a34:	push   ebp
  405a35:	xchg   esp,eax
  405a36:	repz and al,0x2
  405a39:	call   0x7584:0x268eaa0b
  405a40:	jmp    0x2e65:0x60c95761
  405a47:	imul   edi,DWORD PTR [edx],0xc5b6e01a
  405a4d:	addr16 jmp 0x405a22
  405a50:	(bad)  
  405a51:	inc    edx
  405a52:	pop    ds
  405a53:	push   ebp
  405a54:	sahf   
  405a55:	and    ebp,esp
  405a57:	push   esi
  405a58:	clc    
  405a59:	aaa    
  405a5a:	cmp    eax,0x8901b8b0
  405a5f:	lods   eax,DWORD PTR ds:[esi]
  405a60:	xchg   edi,eax
  405a61:	(bad)  
  405a62:	jl     0x405a68
  405a64:	or     DWORD PTR ds:0x259b1a1f,esp
  405a6a:	or     bl,BYTE PTR [edx]
  405a6c:	mov    edx,0xfc6efe9d
  405a71:	not    BYTE PTR ds:0x606762bd
  405a77:	jecxz  0x405a2a
  405a79:	icebp  
  405a7a:	ror    BYTE PTR [ecx+0x65218fec],cl
  405a80:	retf   
  405a81:	daa    
  405a82:	pop    esi
  405a84:	pop    es
  405a85:	fldcw  WORD PTR [esi-0x758d06a9]
  405a8b:	jnp    0x405af7
  405a8d:	add    edx,edx
  405a8f:	xor    BYTE PTR [edx],ah
  405a91:	dec    eax
  405a92:	(bad)  
  405a93:	int    0x50
  405a95:	sbb    al,0xa1
  405a97:	push   cs
  405a98:	rcr    dh,cl
  405a9a:	ja     0x405af2
  405a9c:	and    al,0x50
  405a9e:	or     DWORD PTR [edi+ebp*2-0x2cb403d2],ecx
  405aa5:	dec    ebp
  405aa6:	and    ah,al
  405aa8:	es (bad) 
  405aaa:	std    
  405aab:	sahf   
  405aac:	pop    esi
  405aad:	retf   0x7989
  405ab0:	push   ecx
  405ab1:	dec    ebp
  405ab2:	aas    
  405ab3:	adc    BYTE PTR [eax],0xfb
  405ab6:	mov    ah,0xe8
  405ab8:	mov    esp,0x6576330d
  405abd:	in     al,0xd6
  405abf:	and    DWORD PTR [edi+0x4b],edx
  405ac2:	outs   dx,BYTE PTR ds:[esi]
  405ac3:	lods   al,BYTE PTR ds:[esi]
  405ac4:	(bad)  
  405ac5:	mov    al,ds:0x203630a9
  405aca:	(bad)  
  405acb:	call   0xe6200e85
  405ad0:	cld    
  405ad1:	test   eax,0x4dfafc9c
  405ad6:	(bad)  
  405ad8:	jno    0x405ae1
  405ada:	sub    ebx,DWORD PTR fs:[edi-0x13]
  405ade:	cmp    BYTE PTR [esi],0xcb
  405ae1:	test   BYTE PTR [ecx+0x33],bl
  405ae4:	adc    ch,0xe8
  405ae7:	mov    ebp,0xd8bb5266
  405aec:	push   esp
  405aed:	jne    0x405ac8
  405aef:	mov    ecx,0xc5e65291
  405af4:	jne    0x405abe
  405af6:	or     DWORD PTR [eax-0x71],0x6a
  405afa:	and    DWORD PTR [edi],edx
  405afc:	shr    ah,cl
  405afe:	imul   eax,DWORD PTR [edi-0x40685b14],0x2ebe821a
  405b08:	jnp    0x405b66
  405b0a:	outs   dx,DWORD PTR ds:[esi]
  405b0b:	or     BYTE PTR [ebx+0xb],ch
  405b0e:	push   ss
  405b0f:	out    dx,eax
  405b10:	les    ebx,FWORD PTR [ecx]
  405b12:	retf   0x55
  405b15:	adc    BYTE PTR [ecx+0x756e32c7],dl
  405b1b:	stc    
  405b1c:	mov    esp,0x857b24dc
  405b21:	push   ds
  405b22:	sahf   
  405b23:	add    BYTE PTR [ecx-0x27344079],al
  405b29:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  405b2b:	inc    esi
  405b2c:	btc    DWORD PTR [eax+0x70],esp
  405b30:	cmp    eax,0xbdbccc24
  405b35:	das    
  405b36:	(bad)
  405b3a:	push   ebp
  405b3b:	adc    eax,0xb40251df
  405b40:	call   0xb253:0x34a013aa
  405b47:	mov    al,0x85
  405b49:	dec    esi
  405b4a:	jmp    0x405ae7
  405b4c:	fild   QWORD PTR [ecx]
  405b4e:	test   al,0x33
  405b50:	mov    bh,0x6d
  405b52:	cld    
  405b53:	sbb    al,0x1f
  405b55:	iret   
  405b56:	rcl    BYTE PTR [eax+0x5],1
  405b59:	ret    
  405b5a:	xlat   BYTE PTR ds:[ebx]
  405b5b:	lock (bad) 
  405b5d:	call   esp
  405b5f:	aas    
  405b60:	inc    edx
  405b61:	mov    ebp,ss
  405b63:	loopne 0x405bb8
  405b65:	and    BYTE PTR [eax+0x40],dh
  405b68:	mov    ebp,0x5033014c
  405b6d:	je     0x405b17
  405b6f:	jge    0x405bec
  405b71:	bound  esi,QWORD PTR [edx+0x417626ec]
  405b77:	fist   DWORD PTR [eax-0x7cfdd93a]
  405b7d:	daa    
  405b7e:	popf   
  405b7f:	pop    ds
  405b80:	mov    ecx,eax
  405b82:	test   al,0x5c
  405b84:	out    0x2,al
  405b86:	xor    al,0x62
  405b88:	loope  0x405bfc
  405b8a:	aam    0x4e
  405b8c:	sar    edi,cl
  405b8e:	pop    edi
  405b8f:	fcomip st,st(6)
  405b91:	xor    esp,DWORD PTR [edx-0x67e39b03]
  405b97:	mov    ah,0x91
  405b99:	sbb    al,0x1e
  405b9b:	enter  0xcfa6,0x9f
  405b9f:	sbb    al,0xbf
  405ba1:	mov    edi,0xd7ce5e40
  405ba6:	or     al,0x21
  405ba8:	or     BYTE PTR [edi],bl
  405baa:	xor    DWORD PTR ss:[edi+ecx*8+0x2cdcde34],ecx
  405bb2:	scas   eax,DWORD PTR es:[edi]
  405bb3:	aad    0x57
  405bb5:	test   DWORD PTR [esi],esp
  405bb7:	into   
  405bb8:	pop    ebp
  405bb9:	lods   al,BYTE PTR ds:[esi]
  405bba:	xor    eax,0xb1f86960
  405bbf:	inc    eax
  405bc0:	pop    esi
  405bc1:	xchg   edx,eax
  405bc2:	dec    esp
  405bc3:	or     al,0xbf
  405bc5:	inc    ecx
  405bc6:	in     al,dx
  405bc7:	mov    bl,0x90
  405bc9:	jnp    0x405b6a
  405bcb:	ds or  dl,bl
  405bce:	mov    eax,0x461e5be9
  405bd3:	fnstsw WORD PTR [ecx-0x30]
  405bd6:	addr16 inc eax
  405bd8:	into   
  405bd9:	pop    es
  405bda:	sub    eax,0xadd979db
  405bdf:	lods   al,BYTE PTR ds:[esi]
  405be0:	aad    0x44
  405be2:	or     BYTE PTR [edx-0x40],bh
  405be5:	xor    edx,DWORD PTR [eax]
  405be7:	pop    edi
  405be8:	je     0x405c47
  405bea:	loope  0x405b6d
  405bec:	adc    eax,0xec3beb11
  405bf1:	addr16 ror cl,0x38
  405bf5:	cli    
  405bf6:	push   ebp
  405bf7:	out    dx,eax
  405bf8:	cli    
  405bf9:	shl    DWORD PTR [ebx],0x57
  405bfc:	jmp    0xd84a1887
  405c01:	loopne 0x405bc6
  405c03:	and    al,0x12
  405c05:	add    BYTE PTR [esi-0x76],al
  405c08:	push   ebp
  405c09:	shl    BYTE PTR [edx],cl
  405c0b:	ss push edi
  405c0d:	fbstp  TBYTE PTR [edx+eax*1]
  405c10:	cs push eax
  405c12:	dec    DWORD PTR [eax+0x2ffdb633]
  405c18:	aam    0xc1
  405c1a:	sub    al,0x3d
  405c1c:	iret   
  405c1d:	mov    eax,ds:0x94838485
  405c22:	das    
  405c23:	loopne 0x405c71
  405c25:	xor    eax,0xf3a03fd5
  405c2a:	inc    edx
  405c2b:	mov    edx,0xb0f02741
  405c30:	cmp    al,dh
  405c32:	sub    DWORD PTR [eax],0x5b
  405c35:	cdq    
  405c36:	add    al,0x58
  405c38:	repnz iret 
  405c3a:	adc    bl,0x9b
  405c3d:	loop   0x405cb5
  405c3f:	js     0x405bfd
  405c41:	xor    esp,ecx
  405c43:	dec    edx
  405c44:	jo     0x405cb3
  405c46:	pop    ds
  405c47:	bound  eax,QWORD PTR [esp+eax*4+0x3dcdad72]
  405c4e:	int3   
  405c4f:	(bad)  
  405c50:	aaa    
  405c51:	add    eax,0xbb26a61e
  405c56:	cmp    eax,0xc74b3195
  405c5b:	iret   
  405c5c:	inc    edx
  405c5d:	popa   
  405c5e:	(bad)  
  405c5f:	aas    
  405c60:	mov    bl,0x80
  405c62:	push   ecx
  405c63:	cmc    
  405c64:	jae    0x405cb6
  405c66:	xor    edx,eax
  405c68:	mov    bh,0xd0
  405c6a:	clc    
  405c6b:	dec    edx
  405c6c:	inc    ebp
  405c6d:	adc    dl,BYTE PTR [eax-0x3e]
  405c70:	fisub  WORD PTR [ebx+eax*1-0x66]
  405c74:	dec    ebp
  405c75:	pop    edi
  405c76:	scas   eax,DWORD PTR es:[edi]
  405c77:	call   ebp
  405c79:	fwait
  405c7a:	dec    esp
  405c7b:	sub    BYTE PTR [ebp-0x44],cl
  405c7e:	mov    ah,0xb7
  405c80:	or     ecx,DWORD PTR ds:0x3bb7fe2a
  405c86:	ds std 
  405c88:	shr    DWORD PTR [ebx+0x4a94064d],cl
  405c8e:	mov    ?,esi
  405c90:	xor    eax,DWORD PTR [ebx+0x1c]
  405c93:	mov    cl,0x41
  405c95:	(bad)  
  405c96:	loopne 0x405c23
  405c98:	or     eax,0x495ade6
  405c9d:	(bad)  
  405c9e:	adc    al,0xcb
  405ca0:	xor    DWORD PTR [edx-0x595d713b],ecx
  405ca6:	pop    ebp
  405ca7:	cdq    
  405ca8:	mov    ecx,0x922591bb
  405cad:	jb     0x405d09
  405caf:	enter  0x5ec,0x8
  405cb3:	push   esi
  405cb4:	sti    
  405cb5:	pop    esi
  405cb6:	or     eax,DWORD PTR [eax]
  405cb8:	adc    edi,edx
  405cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cbb:	imul   ebx,DWORD PTR [ebx+edx*8],0xedc68acf
  405cc2:	outs   dx,DWORD PTR ds:[esi]
  405cc3:	mov    cl,0x43
  405cc5:	lahf   
  405cc6:	(bad)  
  405cc7:	and    ebx,DWORD PTR [edx]
  405cc9:	mov    ecx,0xea25bf23
  405cce:	mov    DWORD PTR [eax],ebp
  405cd0:	or     DWORD PTR [ebx-0x80008bc],0x6166353a
  405cda:	repnz xchg ebp,eax
  405cdc:	mov    al,ds:0x4ad510fa
  405ce1:	fidivr DWORD PTR [ecx+0x7f]
  405ce4:	mov    DWORD PTR [esi+0x2],esi
  405ce7:	std    
  405ce8:	push   0x375e4336
  405ced:	sub    ebx,DWORD PTR ds:0x3bfd7848
  405cf3:	sbb    DWORD PTR [edx],ecx
  405cf5:	ins    DWORD PTR es:[edi],dx
  405cf6:	xor    ebp,0x8212be65
  405cfc:	pop    edi
  405cfd:	push   0x39a6f4a6
  405d02:	jmp    0x5e92ebb7
  405d07:	test   BYTE PTR [ebx+0x72f6737d],al
  405d0d:	jns    0x405c95
  405d0f:	mov    ds:0x80b5533e,eax
  405d14:	in     al,0x65
  405d16:	adc    DWORD PTR [ebx],ecx
  405d18:	sahf   
  405d19:	enter  0xf745,0xd5
  405d1d:	push   cs
  405d1e:	and    BYTE PTR [edx+0x5552e35c],dh
  405d24:	mov    eax,0xdd140b63
  405d29:	les    esp,FWORD PTR [ebx-0x3d2b74be]
  405d2f:	cmp    dl,0xc
  405d32:	call   0x3c7c6cba
  405d37:	cld    
  405d38:	adc    esi,DWORD PTR [esi+0x3]
  405d3b:	add    ecx,esi
  405d3d:	add    bh,BYTE PTR [eax+0x58]
  405d40:	mov    al,ds:0x94ca1b2e
  405d45:	test   eax,0x6e396709
  405d4a:	std    
  405d4b:	arpl   WORD PTR [esi+edx*1],dx
  405d4e:	punpckhbw mm7,QWORD PTR [ebx-0x24b6bc09]
  405d55:	fwait
  405d56:	dec    ecx
  405d57:	mov    cl,0x8a
  405d59:	inc    ebx
  405d5a:	punpcklwd mm4,DWORD PTR [ecx+ebp*2+0x59]
  405d5f:	add    ah,BYTE PTR [ecx-0x584e2f39]
  405d65:	cld    
  405d66:	fwait
  405d67:	neg    BYTE PTR [ebp+0x7d9f3dec]
  405d6d:	xchg   DWORD PTR [esi],esi
  405d6f:	inc    edx
  405d70:	out    dx,al
  405d71:	inc    edx
  405d72:	rcr    DWORD PTR [ebp+0xf9aa0bd],0x67
  405d79:	mov    edx,0x4ea2ee72
  405d7e:	daa    
  405d7f:	cmp    al,0x93
  405d81:	mov    dh,BYTE PTR [edx-0x64b5e1ee]
  405d87:	imul   edi,esi,0x4f1748f3
  405d8d:	loope  0x405d92
  405d8f:	or     BYTE PTR [edx+ebx*8+0x373d9276],0xb3
  405d97:	es or  eax,0xb2c306e0
  405d9d:	lahf   
  405d9e:	jne    0x405dbb
  405da0:	pop    edx
  405da1:	sub    al,0x30
  405da3:	add    eax,DWORD PTR [ebp-0x5aed1f5c]
  405da9:	(bad)  
  405daa:	std    
  405dab:	pop    esp
  405dac:	or     bh,BYTE PTR [eax+0x160ade3b]
  405db2:	test   BYTE PTR [edx],bl
  405db4:	dec    edi
  405db5:	das    
  405db6:	lods   eax,DWORD PTR ds:[esi]
  405db7:	add    eax,0x14beb30c
  405dbc:	pop    ebx
  405dbd:	retf   
  405dbe:	add    al,0x39
  405dc0:	push   edi
  405dc1:	mov    esp,DWORD PTR [edx+0x49]
  405dc4:	call   0x408a:0xe48ddbda
  405dcb:	mov    ds:0x653a770e,eax
  405dd0:	leave  
  405dd1:	push   esi
  405dd2:	fcom   DWORD PTR [edx-0x4cd658ba]
  405dd8:	iret   
  405dd9:	(bad)  
  405dda:	cmp    al,0x95
  405ddc:	mov    ah,0x7e
  405dde:	mov    cl,0xc6
  405de0:	sub    DWORD PTR [edi],ecx
  405de2:	repz xor DWORD PTR ds:0x144c12cc,ecx
  405de9:	(bad)  
  405dea:	cmp    al,al
  405dec:	setbe  BYTE PTR [edi]
  405def:	and    al,0x7d
  405df1:	loop   0x405e65
  405df3:	inc    edi
  405df4:	leave  
  405df5:	mov    es,WORD PTR [edi]
  405df7:	xor    edx,ecx
  405df9:	(bad)  
  405dfa:	push   ds
  405dfb:	xor    edx,ecx
  405dfd:	xor    ebx,DWORD PTR [ebp-0x7a]
  405e00:	and    eax,0x5b739245
  405e05:	jg     0x405e7a
  405e07:	or     DWORD PTR [esi+0x30],eax
  405e0a:	xor    cl,ah
  405e0c:	lods   al,BYTE PTR ds:[esi]
  405e0d:	mov    fs,WORD PTR [edx+esi*1-0x25]
  405e11:	mov    bl,0x94
  405e13:	dec    eax
  405e14:	xlat   BYTE PTR ds:[ebx]
  405e15:	in     eax,dx
  405e16:	imul   ebx,DWORD PTR [edi],0xffffffe9
  405e19:	xchg   DWORD PTR ds:0x7f623a96,ebx
  405e1f:	jg     0x405e75
  405e21:	out    dx,al
  405e22:	jp     0x405ea0
  405e24:	shr    DWORD PTR [eax],1
  405e26:	dec    esi
  405e27:	mov    dh,0x68
  405e29:	xchg   esp,edi
  405e2b:	xchg   ebx,eax
  405e2c:	call   0x302f:0x69202305
  405e33:	loopne 0x405dfa
  405e35:	sbb    BYTE PTR [edi-0x43],cl
  405e38:	sub    BYTE PTR [edx-0x78f43c57],dl
  405e3e:	stc    
  405e3f:	mov    ebx,0x6fb1abb4
  405e44:	fsubr  QWORD PTR [esi+0x3db81b9a]
  405e4a:	pop    ecx
  405e4b:	out    dx,eax
  405e4c:	adc    eax,0x17b53bff
  405e51:	jmp    0xe2b2f8a9
  405e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e57:	push   es
  405e58:	stos   DWORD PTR es:[edi],eax
  405e59:	int3   
  405e5a:	fst    DWORD PTR [ebx-0x4eba0fe6]
  405e60:	inc    esp
  405e61:	cmc    
  405e62:	inc    edi
  405e63:	mov    al,ds:0xdb63180d
  405e68:	xor    al,0x6a
  405e6a:	arpl   sp,dx
  405e6c:	arpl   WORD PTR [edx],bp
  405e6e:	and    BYTE PTR [edi],ah
  405e70:	jmp    0xc44f:0xf0e933c3
  405e77:	xor    BYTE PTR [esi-0x27],cl
  405e7a:	mov    edx,DWORD PTR [edx-0x75]
  405e7d:	jl     0x405e30
  405e7f:	or     BYTE PTR [eax],dh
  405e81:	mov    bl,0x9f
  405e83:	inc    edx
  405e84:	call   0x95f57bba
  405e89:	shr    DWORD PTR [esi+0x383e1e64],1
  405e8f:	inc    edi
  405e90:	outs   dx,DWORD PTR ds:[esi]
  405e91:	iret   
  405e92:	xchg   ecx,eax
  405e93:	pop    eax
  405e94:	xchg   ebx,eax
  405e95:	fdivrp st(2),st
  405e97:	imul   ebp,DWORD PTR [ebp+0x6806237e],0xe7252136
  405ea1:	pop    eax
  405ea2:	cmp    eax,0x477edebc
  405ea7:	sbb    ecx,eax
  405ea9:	mov    ch,0x76
  405eab:	pop    ss
  405eac:	(bad)  [eax-0x3dd361fb]
  405eb2:	imul   eax,DWORD PTR [edi],0xc7f2e2b9
  405eb8:	xchg   esp,eax
  405eb9:	adc    bl,al
  405ebb:	test   eax,0xe469dd89
  405ec0:	sub    BYTE PTR [edi],al
  405ec2:	or     eax,0xe7154e43
  405ec7:	push   ds
  405ec8:	pop    ss
  405ec9:	push   ecx
  405eca:	in     eax,dx
  405ecb:	xchg   edx,eax
  405ecc:	sub    eax,0x3fc4b3c0
  405ed1:	inc    esi
  405ed2:	sbb    edx,DWORD PTR [ecx+0x28]
  405ed5:	(bad)  
  405ed6:	push   esi
  405ed7:	xchg   edx,edi
  405ed9:	daa    
  405eda:	ror    ah,0x72
  405edd:	sub    eax,0xc07ec8fb
  405ee2:	test   BYTE PTR [esi-0x6c],ch
  405ee5:	xchg   ebx,eax
  405ee6:	jmp    0x405f32
  405ee8:	mov    esi,0xc4fae369
  405eed:	cmc    
  405eee:	imul   eax,DWORD PTR [esi-0x3ef54b4a],0x26503e7b
  405ef8:	adc    eax,0x11e2f119
  405efd:	inc    ebp
  405efe:	rcr    eax,0x5b
  405f01:	pop    ebx
  405f02:	inc    ebx
  405f03:	mov    ds:0x8d64d436,eax
  405f08:	xchg   edi,eax
  405f09:	clc    
  405f0a:	aas    
  405f0b:	sar    DWORD PTR [edx-0x7f6553e3],1
  405f11:	aaa    
  405f12:	pushf  
  405f13:	dec    edi
  405f14:	(bad)  
  405f15:	push   esp
  405f16:	sbb    bh,BYTE PTR [ecx+eiz*8]
  405f19:	icebp  
  405f1a:	lods   al,BYTE PTR ds:[esi]
  405f1b:	lock idiv BYTE PTR [eax]
  405f1e:	mov    WORD PTR [ecx-0x18fe56d6],?
  405f24:	pop    ss
  405f25:	push   0x23c47d18
  405f2a:	scas   eax,DWORD PTR es:[edi]
  405f2b:	(bad)  
  405f2c:	pop    ds
  405f2d:	js     0x405ec9
  405f2f:	lock cmp DWORD PTR [ecx],ebp
  405f32:	stc    
  405f33:	add    BYTE PTR [esi+0xa],ah
  405f36:	sbb    eax,0x4988a7c7
  405f3b:	arpl   sp,cx
  405f3d:	or     DWORD PTR [edx-0x2c],edx
  405f40:	clc    
  405f41:	int    0x92
  405f43:	xor    eax,0xc7026722
  405f48:	pop    edi
  405f49:	cdq    
  405f4a:	in     eax,0x55
  405f4c:	fiadd  WORD PTR [ebx+edi*2]
  405f4f:	outs   dx,DWORD PTR ds:[esi]
  405f50:	icebp  
  405f51:	sub    ah,BYTE PTR [ebx-0x2aa24117]
  405f57:	and    al,0x27
  405f59:	or     dl,dh
  405f5b:	or     eax,0x2ca9abf1
  405f60:	cld    
  405f61:	(bad)
  405f64:	(bad)  
  405f65:	sahf   
  405f66:	adc    ah,BYTE PTR [eax-0x59]
  405f69:	shr    DWORD PTR [ecx+0x3ed130af],0x34
  405f70:	call   0x50af78d6
  405f75:	xchg   BYTE PTR [esi-0x5],bl
  405f78:	mov    al,ds:0xfcc13a49
  405f7d:	(bad)  
  405f7e:	pop    edx
  405f7f:	adc    ah,dh
  405f81:	imul   ebx,DWORD PTR ds:0x783f1370,0x6c
  405f88:	in     al,0xeb
  405f8a:	(bad)  
  405f8b:	stos   BYTE PTR es:[edi],al
  405f8c:	sbb    ebp,esp
  405f8e:	fs pusha 
  405f90:	ret    
  405f91:	mov    edi,DWORD PTR [edi-0x703221ef]
  405f97:	add    BYTE PTR [ecx],ch
  405f99:	mov    BYTE PTR [edx-0xaaf47c8],al
  405f9f:	and    al,0xf1
  405fa1:	xor    DWORD PTR [esp+edi*8-0x3b],edx
  405fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fa6:	fisttp QWORD PTR cs:[edi+0x7f904d72]
  405fad:	ss pusha 
  405faf:	add    BYTE PTR [esi-0x6e],ch
  405fb2:	shl    DWORD PTR [ebp-0x6916d846],0x69
  405fb9:	fmul   DWORD PTR [edx]
  405fbb:	push   eax
  405fbc:	jl     0x405fef
  405fbe:	in     eax,dx
  405fbf:	pop    ebp
  405fc0:	or     al,0xd9
  405fc2:	push   ecx
  405fc3:	xchg   edi,eax
  405fc4:	add    esi,DWORD PTR [esi-0x54b1efaf]
  405fca:	scas   eax,DWORD PTR es:[edi]
  405fcb:	in     al,0xee
  405fcd:	pusha  
  405fce:	pop    es
  405fcf:	out    dx,al
  405fd0:	(bad)  
  405fd1:	sub    al,0x52
  405fd3:	push   esi
  405fd4:	cs xchg ebx,eax
  405fd6:	sar    DWORD PTR [esi],cl
  405fd8:	aam    0x88
  405fda:	mov    ch,0xd3
  405fdc:	dec    eax
  405fdd:	jp     0x405fbb
  405fdf:	sub    dl,BYTE PTR [ebp-0xddedac4]
  405fe5:	xchg   ecx,eax
  405fe6:	pusha  
  405fe7:	push   ebp
  405fe8:	cs jle 0x406015
  405feb:	mov    bh,0xd2
  405fed:	sub    esp,DWORD PTR [ecx]
  405fef:	aad    0xf2
  405ff1:	or     BYTE PTR [esi-0x1f],dl
  405ff4:	mov    esi,0x423c86f0
  405ff9:	mov    ecx,0x78891310
  405ffe:	arpl   WORD PTR [ecx-0x18],cx
  406001:	or     eax,0x39289504
  406006:	sbb    al,0xbc
  406008:	loop   0x40607d
  40600a:	mov    ebp,0xcae364c0
  40600f:	sbb    ch,ch
  406011:	push   edx
  406012:	jo     0x405fc8
  406014:	sub    DWORD PTR es:[ecx],ecx
  406017:	adc    ch,BYTE PTR [ecx+edi*8-0x62]
  40601b:	hlt    
  40601c:	and    BYTE PTR [edx-0x681973ae],al
  406022:	dec    edi
  406023:	daa    
  406024:	inc    esp
  406025:	popf   
  406026:	jnp    0x406031
  406028:	popa   
  406029:	xchg   esp,eax
  40602a:	add    DWORD PTR [esi],ebp
  40602c:	ds mov ebp,0xcb4489c9
  406032:	push   0x5e5e2f7d
  406037:	xor    ah,al
  406039:	push   ecx
  40603a:	ds (bad) 
  40603c:	(bad)  
  40603e:	(bad)  
  40603f:	sbb    al,0x37
  406041:	popa   
  406042:	test   DWORD PTR [eax-0x45dbd2ec],0x4d853325
  40604c:	jg     0x406068
  40604e:	cli    
  40604f:	test   edi,esi
  406051:	daa    
  406052:	add    ebp,ecx
  406054:	or     DWORD PTR [ecx],esp
  406056:	daa    
  406057:	or     eax,edi
  406059:	jmp    0x4060a8
  40605b:	arpl   WORD PTR ds:0xbb964224,bx
  406061:	inc    BYTE PTR [esi+0x35]
  406064:	xchg   ebp,eax
  406065:	add    bl,bh
  406067:	pop    esi
  406068:	push   edi
  406069:	daa    
  40606a:	add    al,0x81
  40606c:	clc    
  40606d:	cmp    DWORD PTR [esi],ebx
  40606f:	pop    ss
  406070:	adc    eax,0x11f87897
  406075:	daa    
  406076:	jl     0x4060f7
  406078:	xor    bh,BYTE PTR [edx-0x4b]
  40607b:	push   edx
  40607c:	cs push es
  40607e:	mov    eax,ds:0x73f92a4f
  406083:	stc    
  406084:	and    BYTE PTR [edx-0x69c090f1],0xa2
  40608b:	(bad)  
  40608d:	test   eax,0xc3042d03
  406092:	and    dh,BYTE PTR [edi+0x751b93c5]
  406098:	pop    esi
  406099:	xlat   BYTE PTR ds:[ebx]
  40609a:	sbb    eax,0xb9fcd900
  40609f:	mov    ebx,0xbb6d8932
  4060a4:	arpl   WORD PTR fs:[edx-0xf689d11],bp
  4060ab:	pop    esi
  4060ac:	xchg   edx,eax
  4060ad:	jbe    0x4060e4
  4060af:	scas   eax,DWORD PTR es:[edi]
  4060b0:	(bad)  
  4060b1:	jbe    0x40612e
  4060b3:	js     0x406079
  4060b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060b6:	push   ecx
  4060b7:	imul   BYTE PTR [edi+0x39]
  4060ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060bb:	lods   eax,DWORD PTR ds:[esi]
  4060bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060bd:	xchg   esp,eax
  4060be:	adc    al,0x5b
  4060c0:	dec    esp
  4060c1:	adc    BYTE PTR [esi],ch
  4060c3:	or     BYTE PTR [esi+0x27],bh
  4060c6:	push   ss
  4060c7:	int    0xc
  4060c9:	retf   
  4060ca:	in     al,0xef
  4060cc:	lock je 0x406140
  4060cf:	jae    0x4060bb
  4060d1:	ss cmp al,0xc4
  4060d4:	jg     0x406109
  4060d6:	jbe    0x406082
  4060d8:	xlat   BYTE PTR ds:[ebx]
  4060d9:	sbb    edi,DWORD PTR [eax+0x1d22c7e5]
  4060df:	aam    0x6a
  4060e1:	and    esp,DWORD PTR [ebp+0x78]
  4060e4:	add    al,0x98
  4060e6:	fadd   QWORD PTR [edx]
  4060e8:	dec    eax
  4060e9:	sti    
  4060ea:	test   DWORD PTR [edi-0x78830e3e],ecx
  4060f0:	call   0xb78faf4d
  4060f5:	push   0x7c
  4060f7:	fld    TBYTE PTR [edx+0x5e]
  4060fa:	popa   
  4060fb:	(bad)  
  4060fd:	inc    ebp
  4060fe:	fadd   QWORD PTR [edx]
  406100:	push   eax
  406101:	popf   
  406102:	or     DWORD PTR [edi-0x7aaa7978],edx
  406108:	outs   dx,DWORD PTR ds:[esi]
  406109:	and    esi,DWORD PTR [ebx+0x19631705]
  40610f:	mov    esi,DWORD PTR [edi]
  406111:	sbb    eax,0xebee61ab
  406116:	pop    esp
  406117:	inc    eax
  406118:	gs mov ch,0x49
  40611b:	aas    
  40611c:	xchg   eax,esp
  40611e:	shl    DWORD PTR ds:0xfd8841a9,cl
  406124:	xchg   ecx,eax
  406125:	sbb    DWORD PTR [ecx+0x38],edi
  406128:	pop    ebx
  406129:	cmp    DWORD PTR [esi],0x38e32c8
  40612f:	lahf   
  406130:	into   
  406131:	in     eax,0x3d
  406133:	in     al,dx
  406134:	adc    BYTE PTR [edx+0x63],dl
  406137:	push   es
  406138:	xchg   DWORD PTR ds:0x5627d902,ecx
  40613e:	add    eax,0x6557d1db
  406143:	dec    edi
  406144:	dec    esi
  406145:	stc    
  406146:	pop    esp
  406147:	dec    ebp
  406148:	hlt    
  406149:	das    
  40614a:	pushf  
  40614b:	daa    
  40614c:	xor    ebx,DWORD PTR ds:0x793c4106
  406152:	lods   al,BYTE PTR ds:[esi]
  406153:	loop   0x406128
  406155:	aas    
  406156:	lock jg 0x406163
  406159:	and    BYTE PTR [ebx-0x5b],ah
  40615c:	fs mov bl,0x74
  40615f:	jmp    0xa9f2:0x10f7a864
  406166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406167:	mov    cl,0x31
  406169:	dec    ecx
  40616a:	sahf   
  40616b:	fstp   QWORD PTR [ebp+ecx*8+0x10de3b22]
  406172:	push   eax
  406173:	jno    0x40614c
  406175:	jne    0x4061e6
  406177:	xchg   ebx,eax
  406178:	or     ah,BYTE PTR [edx]
  40617a:	(bad)  
  40617b:	sub    al,0xa6
  40617d:	scas   al,BYTE PTR es:[edi]
  40617e:	dec    ebx
  40617f:	inc    eax
  406180:	mov    BYTE PTR [ebx-0x3d],0x0
  406184:	out    0x4f,al
  406186:	xchg   esp,eax
  406187:	cmp    ecx,DWORD PTR [ebx-0x5053a8ca]
  40618d:	push   ds
  40618e:	push   es
  40618f:	mov    ds:0x42c8811d,eax
  406194:	test   BYTE PTR [esi-0x5f5704b8],cl
  40619a:	and    edi,edi
  40619c:	imul   ecx,DWORD PTR [ebp+0x495e7af0],0x3cc76a80
  4061a6:	dec    edi
  4061a7:	xor    DWORD PTR [eax-0x2477ae10],esi
  4061ad:	ja     0x406203
  4061af:	inc    esi
  4061b0:	daa    
  4061b1:	or     ah,BYTE PTR [esi-0x76a42f56]
  4061b7:	jp     0x406141
  4061b9:	test   BYTE PTR [ecx],bl
  4061bb:	div    BYTE PTR [edx+0x32]
  4061be:	add    BYTE PTR [ebx-0x39ccf3bb],cl
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x428ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x428ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x428ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x428ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x42a9fb
  406209:	cmp    DWORD PTR ds:0x428ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x428e23
  406223:	adc    DWORD PTR ds:0x428e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	push   cs
  40623b:	jnp    0x4061fe
  40623d:	push   ebx
  40623e:	or     edi,DWORD PTR ds:0x60f18383
  406244:	add    DWORD PTR [ebx-0x420c17f4],0xffffffdd
  40624b:	sbb    bh,BYTE PTR [eax-0x49]
  40624e:	sub    BYTE PTR [ecx],bh
  406250:	pop    ebx
  406251:	add    DWORD PTR [ecx-0x349011b6],ebx
  406257:	std    
  406258:	mov    bl,0xb2
  40625a:	xchg   ebp,eax
  40625b:	clc    
  40625c:	or     al,ch
  40625e:	push   esi
  40625f:	inc    esp
  406260:	dec    eax
  406261:	fmul   st,st(3)
  406263:	adc    ecx,edx
  406265:	shl    BYTE PTR [edx],1
  406267:	lods   al,BYTE PTR ds:[esi]
  406268:	adc    BYTE PTR [ecx+eax*1-0x2e9ceba3],bh
  40626f:	ins    DWORD PTR es:[edi],dx
  406270:	sbb    al,bh
  406272:	mov    al,ds:0x9e258638
  406277:	repz jmp 0x40624c
  40627a:	push   eax
  40627b:	mov    ebx,0x3db809c5
  406280:	jge    0x4062ac
  406282:	mov    ch,0x95
  406284:	dec    edi
  406285:	and    BYTE PTR [ebp+0xf],cl
  406288:	xlat   BYTE PTR ds:[ebx]
  406289:	pop    eax
  40628a:	push   edi
  40628b:	jle    0x4062c1
  40628d:	mov    cl,0x78
  40628f:	cmp    DWORD PTR [edi],ebx
  406291:	nop
  406292:	or     DWORD PTR [esi],0xc7dfe48b
  406298:	sbb    eax,0xd46bddac
  40629d:	popf   
  40629e:	shl    DWORD PTR [ecx+0x4f],cl
  4062a1:	xor    BYTE PTR [esi-0x3f],dl
  4062a4:	les    ebp,FWORD PTR [edi]
  4062a6:	mov    ?,WORD PTR [eax]
  4062a8:	ss cmc 
  4062aa:	outs   dx,DWORD PTR ds:[esi]
  4062ab:	repnz xchg edx,eax
  4062ad:	sbb    DWORD PTR [edx],edi
  4062af:	lahf   
  4062b0:	jge    0x4062c2
  4062b2:	ror    DWORD PTR [ecx-0x3b],cl
  4062b5:	aas    
  4062b6:	add    ecx,DWORD PTR [ebx-0x29]
  4062b9:	jo     0x406256
  4062bb:	(bad)  
  4062bc:	lods   al,BYTE PTR ds:[esi]
  4062bd:	and    dl,BYTE PTR [edx+0x0]
  4062c0:	add    edx,DWORD PTR [edx+0xf408be7]
  4062c6:	dec    edi
  4062c7:	arpl   WORD PTR [edi+eax*4+0x6e35ca2],ax
  4062ce:	inc    esp
  4062cf:	mov    dl,0x4c
  4062d1:	cmp    BYTE PTR [edx+0x7f],ch
  4062d4:	xchg   esp,eax
  4062d5:	pop    bx
  4062d7:	(bad)  
  4062d8:	mov    bh,bh
  4062da:	gs stc 
  4062dc:	pop    esp
  4062dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062de:	aam    0x20
  4062e0:	retf   
  4062e1:	adc    edi,ebp
  4062e3:	and    al,0x6f
  4062e5:	ins    DWORD PTR es:[edi],dx
  4062e6:	and    esp,DWORD PTR [edi+0x4435b6c1]
  4062ec:	cwde   
  4062ed:	xchg   edx,eax
  4062ee:	mov    ah,0xca
  4062f0:	mov    edi,0xad1ca9e7
  4062f5:	fs mov al,0x92
  4062f8:	out    0xff,al
  4062fa:	lahf   
  4062fb:	push   ds
  4062fc:	cmp    eax,edx
  4062fe:	mov    edi,DWORD PTR [edi+0x11]
  406301:	fxch   st(6)
  406303:	jp     0x4062d2
  406305:	outs   dx,DWORD PTR ds:[esi]
  406306:	ret    0xb13c
  406309:	inc    ecx
  40630a:	in     eax,0x15
  40630c:	in     eax,0x5d
  40630e:	mov    ch,BYTE PTR ds:0x837022b7
  406314:	in     al,dx
  406315:	adc    al,0x54
  406317:	adc    bh,BYTE PTR [esi+ebx*4+0x58]
  40631b:	mov    edi,0x39ea9e96
  406320:	test   DWORD PTR [eax-0x35e896b],edx
  406326:	mov    ?,eax
  406328:	push   ecx
  406329:	aam    0x9a
  40632b:	push   es
  40632c:	ret    0x7a01
  40632f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406330:	sub    al,0x3d
  406332:	cs jmp 0x43c3f4ef
  406338:	jmp    0xc2e7:0x7a35c7e1
  40633f:	stos   DWORD PTR es:[edi],eax
  406340:	or     eax,DWORD PTR [esi]
  406342:	test   DWORD PTR [edi+0x54851a10],ebx
  406348:	cmp    al,0x18
  40634a:	and    eax,0x658c0596
  40634f:	mov    dl,0xc0
  406351:	gs sbb ax,0xd673
  406356:	test   BYTE PTR [ebx-0x34],0xab
  40635a:	adc    BYTE PTR [esi-0x131be3f],dl
  406360:	daa    
  406361:	xchg   edi,eax
  406362:	rol    BYTE PTR [ebp+0x26],1
  406365:	in     eax,dx
  406366:	xchg   esi,eax
  406367:	inc    edi
  406368:	fldenv [edi+0xe36748]
  40636e:	xor    DWORD PTR [ebx+eiz*2+0x55a80a62],eax
  406375:	jno    0x406384
  406377:	xor    eax,0x90a6a8bf
  40637c:	adc    DWORD PTR [ebp+0x6c31c5c7],eax
  406382:	or     ebp,DWORD PTR [ecx+edx*1]
  406385:	jp     0x406350
  406387:	push   edi
  406388:	mov    esi,0xe1d35d8d
  40638d:	cld    
  40638e:	call   0xe46bd6d
  406393:	pop    ebp
  406394:	lods   eax,DWORD PTR ds:[esi]
  406395:	ds scas al,BYTE PTR es:[edi]
  406397:	fisttp DWORD PTR [edi-0x6c]
  40639a:	jge    0x406381
  40639c:	jae    0x40637b
  40639e:	jbe    0x406355
  4063a0:	or     BYTE PTR [esi-0x1b3d099],0x1d
  4063a7:	fdivr  DWORD PTR [edx*8-0x303c7ccd]
  4063ae:	sbb    esp,0xffffff9a
  4063b1:	or     DWORD PTR [esp+ecx*1+0x58d201fd],edx
  4063b8:	fistp  WORD PTR [esp+ebp*1]
  4063bb:	push   esi
  4063bc:	and    al,0x1f
  4063be:	lods   al,BYTE PTR ds:[esi]
  4063bf:	inc    esp
  4063c0:	iret   
  4063c1:	sahf   
  4063c2:	fimul  DWORD PTR [eax+0x3fa97192]
  4063c8:	sub    eax,0x6a6599de
  4063cd:	into   
  4063ce:	std    
  4063cf:	aad    0xf3
  4063d1:	mov    al,0x6b
  4063d3:	aas    
  4063d4:	or     eax,0x5d8da4c
  4063d9:	outs   dx,DWORD PTR ds:[esi]
  4063da:	dec    edx
  4063db:	iret   
  4063dc:	shl    edx,1
  4063de:	jmp    0x3af:0x31b0c0f1
  4063e5:	bound  esi,QWORD PTR ds:0xc4643dac
  4063eb:	jp     0x406397
  4063ed:	test   BYTE PTR [ecx-0x4356cef3],bl
  4063f3:	in     eax,dx
  4063f4:	mov    ecx,cs
  4063f6:	inc    esi
  4063f7:	or     al,BYTE PTR [ebx]
  4063f9:	jo     0x40643b
  4063fb:	jg     0x4063e5
  4063fd:	mov    eax,ds:0x9b94c098
  406402:	fcom   QWORD PTR [eax+ecx*1+0x6a]
  406406:	or     BYTE PTR [ebp+0x347235c5],0x89
  40640d:	cmp    BYTE PTR [ecx-0x40],al
  406410:	enter  0x768f,0x6b
  406414:	sahf   
  406415:	test   al,0xf7
  406417:	imul   edx,DWORD PTR [ecx+0x5c],0x8e88dcea
  40641e:	mov    esp,DWORD PTR [esi-0x43f86058]
  406424:	(bad)  
  406426:	sub    al,0x3b
  406429:	cmp    eax,0xa132b9bd
  40642e:	jne    0x40645f
  406430:	dec    eax
  406431:	shr    BYTE PTR [edi+edi*4],1
  406434:	rol    edi,0x21
  406437:	lahf   
  406438:	mov    ds:0xd3401ee3,al
  40643d:	jnp    0x406413
  40643f:	jmp    0x4063ec
  406441:	xlat   BYTE PTR ds:[ebx]
  406442:	jae    0x406483
  406444:	aam    0xf3
  406446:	push   esp
  406447:	sbb    DWORD PTR [ebx+ebx*8+0x709d35f7],0x2a38bccd
  406452:	lods   eax,DWORD PTR ds:[esi]
  406453:	push   0x48
  406455:	xor    cl,BYTE PTR [esi+0x24]
  406458:	dec    ebp
  406459:	cmp    al,0x86
  40645b:	and    DWORD PTR [ecx-0x24],ebx
  40645e:	cs stos BYTE PTR es:[edi],al
  406460:	adc    al,0xef
  406462:	imul   ebx,ebp,0x8816ccb6
  406468:	push   edx
  406469:	addr16 xchg esp,eax
  40646b:	neg    DWORD PTR [edi+0x222129da]
  406471:	mov    ds:0x6f2b44a2,eax
  406476:	and    eax,0x53a0ef68
  40647b:	popf   
  40647c:	cmp    eax,0x330ba2f9
  406481:	aas    
  406482:	sbb    ebp,DWORD PTR [edx+edi*8-0x80]
  406486:	mov    ?,WORD PTR [eax]
  406488:	stos   BYTE PTR es:[edi],al
  406489:	mov    al,ds:0xa7c00eb
  40648e:	sbb    al,0x62
  406490:	mov    cl,0x4d
  406492:	xchg   edi,eax
  406493:	mov    ?,WORD PTR [ebx+0x56503296]
  406499:	dec    ebp
  40649a:	aad    0x9e
  40649c:	pushf  
  40649d:	retf   
  40649e:	nop
  40649f:	pop    ebp
  4064a0:	xchg   edx,eax
  4064a1:	jle    0x4064eb
  4064a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064a4:	mov    dh,0x28
  4064a6:	jmp    DWORD PTR ds:0x8b55c0b5
  4064ac:	arpl   WORD PTR [edx-0x4f],bp
  4064af:	clc    
  4064b0:	mov    ecx,0xc6345011
  4064b5:	xchg   edx,eax
  4064b6:	push   ebx
  4064b7:	or     al,0x83
  4064b9:	mov    ah,0xb3
  4064bb:	and    al,ah
  4064bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064be:	or     eax,0xe23d3185
  4064c3:	aaa    
  4064c4:	sbb    edi,DWORD PTR [eax]
  4064c6:	xor    al,0x92
  4064c8:	and    eax,0x51156cdd
  4064cd:	(bad)  
  4064ce:	ins    DWORD PTR es:[edi],dx
  4064cf:	(bad)  
  4064d0:	call   0x70d568eb
  4064d5:	xchg   DWORD PTR [ebx+0x74b5c403],ebx
  4064db:	xchg   esp,eax
  4064dc:	and    ch,cl
  4064de:	jb     0x406461
  4064e0:	lds    ecx,FWORD PTR [edx-0x45f8ec18]
  4064e6:	mov    BYTE PTR [eax+edx*1],cl
  4064e9:	call   esi
  4064eb:	pop    ss
  4064ec:	lds    ebp,FWORD PTR [esi+eax*8+0x7d]
  4064f0:	shl    BYTE PTR [edi+eax*8-0x13],cl
  4064f4:	jae    0x4064d8
  4064f6:	daa    
  4064f7:	scas   eax,DWORD PTR es:[edi]
  4064f8:	push   ecx
  4064f9:	xor    ch,BYTE PTR [esp+edx*1+0x23a01085]
  406500:	daa    
  406501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406502:	xor    ebp,DWORD PTR [esi*2-0x1c2881f9]
  406509:	dec    ebx
  40650a:	inc    ecx
  40650b:	mov    edi,0xb305d545
  406510:	pop    ebx
  406511:	loopne 0x4064a2
  406513:	pop    esi
  406514:	dec    edi
  406515:	and    esi,DWORD PTR [edi-0x3228e052]
  40651b:	xor    eax,0x2e5d3d0e
  406520:	lods   al,BYTE PTR ds:[esi]
  406521:	mov    eax,ds:0x7df4c669
  406526:	(bad)  
  406527:	aam    0xa7
  406529:	int3   
  40652a:	test   ebx,0x4cc97ba1
  406530:	retf   
  406531:	je     0x40659c
  406533:	xchg   esi,eax
  406534:	dec    ebx
  406535:	std    
  406536:	dec    eax
  406537:	pop    ecx
  406538:	addr16 pop ds
  40653a:	jae    0x4064e6
  40653c:	and    BYTE PTR [ebx+0x5f],dh
  40653f:	mov    dl,0x91
  406541:	mov    dl,0x44
  406543:	xor    DWORD PTR [esi+0x63a6db02],edx
  406549:	out    0x8,al
  40654b:	iret   
  40654c:	neg    DWORD PTR [ebp-0x43]
  40654f:	mov    DWORD PTR [eax],0xaa171975
  406555:	sub    ch,BYTE PTR [esi]
  406557:	cs jmp 0x92936e9a
  40655d:	mov    ds:0x14ef2b54,eax
  406562:	ror    DWORD PTR [edx],0x8a
  406565:	(bad)  
  406566:	pop    ds
  406567:	outs   dx,BYTE PTR ds:[esi]
  406568:	mov    al,ds:0xd0373527
  40656d:	add    BYTE PTR [eax],ah
  40656f:	pop    ebp
  406570:	pop    ss
  406571:	retf   
  406572:	stc    
  406573:	pop    ebp
  406574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406575:	ins    BYTE PTR es:[edi],dx
  406576:	test   BYTE PTR [ebx+eiz*1-0x37],ch
  40657a:	pusha  
  40657b:	cld    
  40657c:	mov    dl,0xe8
  40657e:	popf   
  40657f:	pop    esp
  406580:	lock cli 
  406582:	pusha  
  406583:	aas    
  406584:	mov    ds:0x6b6048f8,al
  406589:	xor    DWORD PTR [esi],ebx
  40658b:	leave  
  40658c:	popa   
  40658d:	fmul   QWORD PTR [eax-0x2bfc694e]
  406593:	adc    edi,DWORD PTR [edx]
  406595:	jmp    0x2221:0x25074248
  40659c:	xchg   ebx,eax
  40659d:	mov    esi,0xeab83f83
  4065a2:	loop   0x4065e0
  4065a4:	pop    esi
  4065a5:	gs pop edi
  4065a7:	stos   DWORD PTR es:[edi],eax
  4065a8:	pop    esi
  4065a9:	pop    esp
  4065aa:	cmp    eax,0x3afc4e66
  4065af:	lods   al,BYTE PTR ds:[esi]
  4065b0:	cmp    eax,0x979c9c9a
  4065b5:	lods   al,BYTE PTR ds:[esi]
  4065b6:	pop    ds
  4065b7:	jb     0x406594
  4065b9:	sub    esp,ebx
  4065bb:	fistp  WORD PTR [eax+0x1b5dc668]
  4065c1:	adc    al,dl
  4065c3:	jno    0x406627
  4065c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065c6:	add    edi,DWORD PTR [ebx-0x426ae3ab]
  4065cc:	mov    esi,0x4543ca1e
  4065d1:	push   es
  4065d2:	inc    esp
  4065d3:	dec    ebp
  4065d4:	ja     0x406566
  4065d6:	shl    BYTE PTR ds:0x371b3925,cl
  4065dc:	push   esi
  4065dd:	sub    BYTE PTR [eax+0x2f],bh
  4065e0:	jge    0x406595
  4065e2:	mov    esp,0xd31c6215
  4065e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065e8:	test   BYTE PTR [ebx+eiz*2+0x1a486124],ah
  4065ef:	sbb    al,0xa3
  4065f1:	xchg   ebx,eax
  4065f2:	mov    DWORD PTR [ebx-0x44ec4d42],ecx
  4065f8:	jno    0x4065f1
  4065fa:	mov    al,BYTE PTR ss:[esi+0x50]
  4065fe:	push   cs
  4065ff:	inc    esp
  406600:	(bad)  
  406601:	xor    al,0x27
  406603:	and    DWORD PTR ss:[esp+eax*4],eax
  406607:	imul   BYTE PTR [edi+0x4b]
  40660a:	int3   
  40660b:	adc    BYTE PTR [ecx],0xfe
  40660e:	mov    ah,0x49
  406610:	push   esp
  406611:	jno    0x406612
  406613:	in     eax,dx
  406614:	jecxz  0x4065f6
  406616:	shr    BYTE PTR [eax],0x11
  406619:	inc    bl
  40661b:	push   ebx
  40661c:	(bad)  
  40661d:	xchg   esi,eax
  40661e:	sub    DWORD PTR [eax-0x4],esp
  406621:	jp     0x40660c
  406623:	mov    ebx,DWORD PTR [edx+0x49]
  406626:	gs jo  0x406676
  406629:	and    eax,0xc8a1977b
  40662e:	mov    ebp,0xbaec5737
  406633:	(bad)  
  406635:	fisubr DWORD PTR [edx-0x767c5921]
  40663b:	loope  0x406625
  40663d:	hlt    
  40663e:	das    
  40663f:	cdq    
  406640:	cmp    dh,dl
  406642:	pushf  
  406643:	inc    esi
  406644:	mov    DWORD PTR [ecx],esp
  406646:	(bad)  
  406648:	cmp    DWORD PTR cs:[ebx],ebx
  40664b:	fwait
  40664c:	add    ah,BYTE PTR [eax+0x2f6b55c8]
  406652:	bound  ecx,QWORD PTR [ebx+0x7bf2b4da]
  406658:	aaa    
  406659:	push   edx
  40665a:	and    al,0x8c
  40665c:	xor    edi,DWORD PTR [ecx]
  40665e:	ds adc eax,ebp
  406661:	loopne 0x406634
  406663:	dec    edi
  406664:	loop   0x4066cd
  406666:	xchg   al,ah
  406668:	pop    ebx
  406669:	pop    eax
  40666a:	jg     0x406680
  40666c:	jmp    0x7373:0xb8ee49fe
  406673:	aas    
  406674:	stos   BYTE PTR es:[edi],al
  406675:	or     bl,ah
  406677:	test   DWORD PTR [eax+ebp*1+0x188d3f35],eax
  40667e:	xchg   edi,eax
  40667f:	fldcw  WORD PTR [edi+eiz*8]
  406682:	push   0x409ef6c6
  406687:	xchg   ecx,eax
  406688:	mov    eax,ss:0x7dd4962b
  40668e:	loop   0x40665b
  406690:	cmp    eax,0x15729cd2
  406695:	ins    DWORD PTR es:[edi],dx
  406696:	adc    DWORD PTR [edi],eax
  406698:	and    dh,ah
  40669a:	sar    BYTE PTR [ecx+0x3ea6ba1c],cl
  4066a0:	jo     0x40668b
  4066a2:	push   esp
  4066a3:	xchg   ecx,eax
  4066a4:	sbb    ecx,DWORD PTR [ecx-0x2ab8cdf8]
  4066aa:	addr16 retf 0xa81d
  4066ae:	xchg   DWORD PTR [eax-0x24a0afde],esi
  4066b4:	mov    BYTE PTR [edx],ch
  4066b6:	push   edx
  4066b7:	repnz xor edi,esi
  4066ba:	inc    edi
  4066bb:	mov    edx,0xcaaa5459
  4066c0:	loop   0x406720
  4066c2:	retf   
  4066c3:	mov    esi,0x2cf26dea
  4066c8:	add    DWORD PTR [ebx+0x11e67b3b],esp
  4066ce:	sub    eax,0x53b06b07
  4066d3:	sahf   
  4066d4:	xchg   ebp,eax
  4066d5:	(bad)  
  4066d6:	aaa    
  4066d7:	xchg   DWORD PTR [esi+0x3a474860],ecx
  4066dd:	loope  0x40671c
  4066df:	mov    esi,0x9606c74c
  4066e4:	jnp    0x40674d
  4066e6:	jb     0x4066fe
  4066e8:	inc    eax
  4066e9:	and    dh,BYTE PTR [ebx-0x77]
  4066ec:	pop    ecx
  4066ed:	clc    
  4066ee:	movd   ebp,mm1
  4066f1:	sbb    ecx,ebp
  4066f3:	adc    al,0xe5
  4066f5:	fld    QWORD PTR [edi+ebx*1-0x79cc7620]
  4066fc:	push   edx
  4066fd:	mov    bh,0x98
  4066ff:	add    al,0x6a
  406701:	sub    ebp,DWORD PTR [edi+0x2a]
  406704:	push   ds
  406705:	mov    ecx,0x4e2689fe
  40670a:	in     eax,0x3
  40670c:	adc    ebx,ecx
  40670e:	jne    0x406708
  406710:	ror    edi,1
  406712:	das    
  406713:	jle    0x40678c
  406715:	scas   al,BYTE PTR es:[edi]
  406716:	pushf  
  406717:	in     al,0xc4
  406719:	lock adc al,0x4e
  40671c:	ror    DWORD PTR [esi],1
  40671e:	mov    ds:0x783d1a12,al
  406723:	ja     0x406756
  406725:	jb     0x406796
  406727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406728:	sub    esi,DWORD PTR [ecx+0x6b1ee04a]
  40672e:	repz add al,0x2b
  406731:	aaa    
  406732:	xadd   DWORD PTR [eax],ebp
  406735:	xchg   ecx,eax
  406736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406737:	pop    es
  406738:	jne    0x4067b1
  40673a:	and    bh,BYTE PTR [ecx-0x18ddbf59]
  406740:	jge    0x406789
  406742:	adc    eax,DWORD PTR [eax]
  406744:	or     BYTE PTR [edx-0x62],dl
  406747:	jmp    0xcf9e3525
  40674c:	sub    ch,ch
  40674e:	leave  
  40674f:	ins    BYTE PTR es:[edi],dx
  406750:	mov    ebx,0xff578b69
  406755:	leave  
  406756:	xchg   ebx,eax
  406757:	and    DWORD PTR [esi+0x44],ecx
  40675a:	pop    ebx
  40675b:	sub    ch,BYTE PTR [ebx+edi*8+0x1f]
  40675f:	adc    eax,0x60272b5d
  406764:	mov    al,ds:0x8763020e
  406769:	dec    edx
  40676a:	out    dx,eax
  40676b:	cmp    DWORD PTR ds:0x35c8c61b,ecx
  406771:	jae    0x40673d
  406773:	daa    
  406774:	lods   al,BYTE PTR ds:[esi]
  406775:	cmp    eax,0x91a3ced9
  40677a:	ret    0xc2b7
  40677d:	or     eax,0x65c792e5
  406782:	inc    eax
  406783:	(bad)  
  406784:	mov    bl,0x80
  406786:	(bad)  
  406788:	daa    
  406789:	add    edx,DWORD PTR [ebp-0x41]
  40678c:	mul    DWORD PTR [edx+eiz*2-0x704f2ba2]
  406793:	inc    ebx
  406794:	lds    ebx,FWORD PTR [eax]
  406796:	rcl    BYTE PTR [ebx-0x29],0xe4
  40679a:	push   0xffffffc4
  40679c:	adc    BYTE PTR [esi+0x4a7e2288],ah
  4067a2:	jp     0x40681f
  4067a4:	in     eax,dx
  4067a5:	jle    0x4067b7
  4067a7:	or     al,0x65
  4067a9:	mov    bh,0x46
  4067ab:	sub    DWORD PTR [eax+0x6b],eax
  4067ae:	add    BYTE PTR [ecx],dl
  4067b0:	pop    ss
  4067b1:	mov    ebp,0x72cb56ab
  4067b6:	mul    DWORD PTR [esp+ecx*2]
  4067b9:	push   ds
  4067ba:	inc    edx
  4067bb:	test   DWORD PTR [edi-0xe],esi
  4067be:	fsubr  QWORD PTR [ebx+ebx*2]
  4067c1:	sahf   
  4067c2:	add    ah,cl
  4067c4:	cld    
  4067c5:	xchg   edx,eax
  4067c6:	mov    cs,WORD PTR [esi]
  4067c8:	adc    edx,esp
  4067ca:	and    al,BYTE PTR gs:[ecx-0x6a84129f]
  4067d1:	pop    edi
  4067d2:	stos   DWORD PTR es:[edi],eax
  4067d3:	mov    dh,0x79
  4067d5:	push   edi
  4067d6:	add    al,0x5d
  4067d8:	jge    0x4067d0
  4067da:	push   edx
  4067db:	shr    DWORD PTR [esi-0x12e32987],cl
  4067e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067e2:	pop    ecx
  4067e3:	cmp    eax,0x1ed2a3c2
  4067e8:	cmp    DWORD PTR [edi],ebp
  4067ea:	repnz and eax,0xc54d37f
  4067f0:	fwait
  4067f1:	push   es
  4067f2:	sub    ecx,esp
  4067f4:	dec    edx
  4067f5:	jmp    0x3487:0x927dc93
  4067fc:	out    dx,al
  4067fd:	mov    edx,0xb7e88e7e
  406802:	popf   
  406803:	mov    edi,DWORD PTR [ebp+0x3d]
  406806:	stos   DWORD PTR es:[edi],eax
  406807:	mov    ch,0x8f
  406809:	xchg   edi,eax
  40680a:	push   ss
  40680b:	jns    0x406861
  40680d:	add    al,0x6a
  40680f:	pusha  
  406810:	dec    esp
  406811:	adc    DWORD PTR [eax+0x4b],esp
  406814:	imul   ecx,DWORD PTR [edi+edi*2+0x55],0xdd6e6974
  40681c:	fst    DWORD PTR [ebx]
  40681e:	test   BYTE PTR [ebx+edi*4],al
  406821:	xchg   esi,eax
  406822:	push   ebp
  406823:	cdq    
  406824:	dec    ebp
  406825:	jae    0x406858
  406827:	ins    BYTE PTR es:[edi],dx
  406828:	adc    eax,DWORD PTR [ebx+0x24]
  40682b:	sbb    ah,bh
  40682d:	push   eax
  40682e:	mov    bl,0x4d
  406830:	inc    ebp
  406831:	imul   BYTE PTR [ecx]
  406833:	mov    bh,0x5c
  406835:	rol    DWORD PTR [edi+0x39],1
  406838:	inc    esp
  406839:	mov    ch,0xc2
  40683b:	add    bl,BYTE PTR [ebx+ebp*4]
  40683e:	fwait
  40683f:	pop    edx
  406840:	enter  0xf3b9,0x33
  406844:	fnstenv [ebx+0x4064c3a6]
  40684a:	lds    ecx,FWORD PTR [eax]
  40684c:	cmp    BYTE PTR [ecx+0x69db9a73],dh
  406852:	xor    ebx,eax
  406854:	push   ebx
  406855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406856:	addr16 inc ebp
  406858:	repz inc eax
  40685a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40685b:	lods   eax,DWORD PTR cs:[esi]
  40685d:	dec    esp
  40685e:	out    0xae,eax
  406860:	add    dl,BYTE PTR [esi+0x2a]
  406863:	xlat   BYTE PTR ds:[ebx]
  406864:	add    bh,BYTE PTR [ecx-0x150ff83d]
  40686a:	loope  0x4068a3
  40686c:	hlt    
  40686d:	pusha  
  40686e:	add    al,0xb2
  406870:	xor    DWORD PTR [esi],esi
  406872:	xchg   ebp,eax
  406873:	inc    esp
  406874:	or     esi,ebx
  406876:	outs   dx,BYTE PTR ds:[esi]
  406877:	pop    es
  406878:	inc    ebx
  406879:	pop    es
  40687a:	pop    edx
  40687b:	aad    0xc3
  40687d:	sub    al,0xc
  40687f:	or     ebp,ecx
  406881:	aad    0x4e
  406883:	aas    
  406884:	push   esp
  406885:	jmp    0xc230:0xcb89750a
  40688c:	sahf   
  40688d:	dec    eax
  40688e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40688f:	int    0xa1
  406891:	mov    DWORD PTR [eax-0x640e6f9e],edi
  406897:	xor    DWORD PTR [edx+edi*1-0xd],eax
  40689b:	mov    al,ds:0xb5db7a05
  4068a0:	pop    ds
  4068a1:	mov    eax,ds:0x8303c337
  4068a6:	or     bh,BYTE PTR [edi]
  4068a8:	pop    esi
  4068a9:	call   0xb5df00cd
  4068ae:	stos   BYTE PTR es:[edi],al
  4068af:	addr16 cwde 
  4068b1:	enter  0x4c49,0x4e
  4068b5:	lods   eax,DWORD PTR ds:[esi]
  4068b6:	and    esi,edx
  4068b8:	stc    
  4068b9:	inc    esi
  4068ba:	js     0x406920
  4068bc:	iret   
  4068bd:	dec    ebx
  4068be:	out    dx,ax
  4068c0:	push   ebx
  4068c1:	jnp    0x406881
  4068c3:	adc    al,0x52
  4068c5:	ret    0x44be
  4068c8:	inc    ebp
  4068c9:	pop    es
  4068ca:	and    eax,0xeadd54c8
  4068cf:	pop    edx
  4068d0:	rcr    bl,cl
  4068d2:	mov    bl,0xd3
  4068d4:	stc    
  4068d5:	mov    ecx,0x8362c678
  4068da:	(bad)  
  4068db:	jmp    0x4068f2
  4068dd:	jmp    0x4068f3
  4068df:	js     0x4068ee
  4068e1:	lock push esp
  4068e3:	xchg   esp,eax
  4068e4:	pop    ecx
  4068e5:	jo     0x406897
  4068e7:	jb     0x4068da
  4068e9:	leave  
  4068ea:	mov    ah,0xec
  4068ec:	xor    BYTE PTR [eax+edx*1-0x1f59e6af],dh
  4068f3:	mov    dl,0x35
  4068f5:	jnp    0x40694e
  4068f7:	jle    0x4068e5
  4068f9:	les    edi,FWORD PTR [ecx+0x3a]
  4068fc:	jno    0x4068c9
  4068fe:	aam    0x87
  406900:	icebp  
  406901:	(bad)  
  406902:	mov    ebx,0x317676ef
  406907:	sbb    edi,DWORD PTR [eax]
  406909:	and    BYTE PTR [esi+ebx*1-0x6e7f363e],0xe5
  406911:	mov    eax,0xea3a47ce
  406916:	cld    
  406917:	pop    ebx
  406918:	cmp    cl,BYTE PTR ds:0xbb51bd5b
  40691e:	inc    esp
  40691f:	outs   dx,BYTE PTR ds:[esi]
  406920:	jp     0x406915
  406922:	inc    esp
  406923:	(bad)  
  406924:	int    0xb1
  406926:	and    BYTE PTR [ebx+0x4e],0x86
  40692a:	pop    ds
  40692b:	lds    ecx,FWORD PTR [esi+0x57]
  40692e:	dec    ebp
  40692f:	xor    ah,ah
  406931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406932:	jmp    DWORD PTR [edx]
  406934:	pop    ebp
  406935:	xor    al,0xf4
  406937:	lea    ebp,[esi+0x5c4ba119]
  40693d:	shr    DWORD PTR [ebp-0x4416aa83],0x9a
  406944:	xchg   ebp,eax
  406945:	jmp    0xb3a2dc65
  40694a:	fldenv [ebx+esi*1]
  40694d:	or     ah,BYTE PTR [edi]
  40694f:	dec    esi
  406950:	clc    
  406951:	pop    edi
  406952:	pop    ecx
  406953:	sbb    BYTE PTR [ebp+ebx*1-0x2bf46713],bl
  40695a:	push   ecx
  40695b:	jge    0x4069b8
  40695d:	fist   DWORD PTR fs:[ebp+0x24]
  406961:	xor    eax,DWORD PTR [ecx]
  406963:	fbstp  TBYTE PTR es:0x45cd6184
  40696a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696b:	fnstenv [ebp+0x15]
  40696e:	in     al,0x8f
  406970:	inc    ecx
  406971:	and    ebx,DWORD PTR gs:[esi-0x56]
  406975:	sbb    BYTE PTR [eax],dl
  406977:	and    esp,DWORD PTR [eax+0x73]
  40697a:	push   ecx
  40697b:	aas    
  40697c:	and    ebx,esp
  40697e:	xor    dl,BYTE PTR [ebp+0x25]
  406981:	push   ecx
  406982:	leave  
  406983:	xchg   edx,eax
  406984:	push   esp
  406985:	outs   dx,BYTE PTR ds:[esi]
  406986:	xchg   esp,eax
  406987:	mov    dl,0xf5
  406989:	xchg   ecx,eax
  40698a:	dec    ebx
  40698b:	aaa    
  40698c:	(bad)  
  40698d:	(bad)  
  40698e:	pop    esp
  40698f:	leave  
  406990:	mov    fs:0xcd1360cb,al
  406996:	rol    DWORD PTR [esi+0xbd78443],1
  40699c:	and    eax,0xb76f3382
  4069a1:	sbb    BYTE PTR [edi-0x28559bdc],0x1e
  4069a8:	mov    ebx,0x292b67c5
  4069ad:	push   0xbd13d8a2
  4069b2:	add    DWORD PTR [edi],eax
  4069b4:	mov    ds:0x3609b2cf,al
  4069b9:	pusha  
  4069ba:	mov    cl,BYTE PTR [ecx+eiz*4-0x6c]
  4069be:	push   es
  4069bf:	mov    ebx,0xaaa90566
  4069c4:	jmp    DWORD PTR ds:0x9bc0eb2
  4069ca:	xchg   esi,eax
  4069cb:	jmp    0x28d43375
  4069d0:	(bad)  
  4069d1:	iret   
  4069d2:	pop    ss
  4069d3:	pop    ecx
  4069d4:	mov    ecx,0xb9cc8501
  4069d9:	lea    edi,[edx]
  4069db:	jecxz  0x40698c
  4069dd:	mov    ebx,0x1d9ee489
  4069e2:	dec    edx
  4069e3:	pop    ebx
  4069e4:	jl     0x406a57
  4069e6:	outs   dx,DWORD PTR ds:[esi]
  4069e7:	(bad)  
  4069e8:	ds xor eax,0x69c039c8
  4069ee:	inc    eax
  4069ef:	imul   esi,DWORD PTR [ebp+0x45],0x72642a5f
  4069f6:	mov    cl,0xdd
  4069f8:	jae    0x4069bb
  4069fa:	sbb    al,0x83
  4069fc:	call   0x67d0:0xf1f66c9f
  406a03:	cmp    BYTE PTR [edx-0x5de3c33d],0x8b
  406a0a:	adc    ah,BYTE PTR [edi]
  406a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a0d:	lock pop ebx
  406a0f:	mov    dh,0x94
  406a11:	(bad)  
  406a13:	sub    ebx,ebx
  406a15:	imul   ebp,DWORD PTR [ebp+eax*2+0x10],0x27
  406a1a:	inc    edx
  406a1b:	mov    al,ds:0xe9a3b4df
  406a20:	jns    0x406a88
  406a22:	jge    0x406a12
  406a24:	sbb    eax,0xf8a95e59
  406a29:	jnp    0x406a01
  406a2b:	add    edx,esp
  406a2d:	add    BYTE PTR [eax+0x7],dh
  406a30:	in     eax,0x6e
  406a32:	jo     0x406a73
  406a34:	inc    edi
  406a35:	or     BYTE PTR [esi-0x3c0fb7fd],ah
  406a3b:	jb     0x406a96
  406a3d:	mov    ebp,0x74588f25
  406a42:	test   al,0xf4
  406a44:	nop
  406a45:	jbe    0x4069f1
  406a47:	mov    ebx,0x48e8a93c
  406a4c:	loop   0x406a58
  406a4e:	fistp  QWORD PTR [esi+0x43fee9bd]
  406a54:	out    dx,al
  406a55:	(bad)  
  406a56:	lds    ebp,FWORD PTR [edx-0x346b540a]
  406a5c:	aaa    
  406a5d:	xor    dh,bl
  406a5f:	adc    BYTE PTR [ebx+0x5dfb8b48],bl
  406a65:	lds    esp,FWORD PTR [ebx]
  406a67:	pop    ecx
  406a68:	ret    
  406a69:	and    DWORD PTR [eax-0x3f],eax
  406a6c:	mov    cl,0xdd
  406a6e:	dec    eax
  406a6f:	push   ss
  406a70:	push   es
  406a71:	iret   
  406a72:	outs   dx,DWORD PTR ds:[esi]
  406a73:	pop    esp
  406a74:	stos   DWORD PTR es:[edi],eax
  406a75:	jbe    0x406a66
  406a77:	(bad)  
  406a78:	sahf   
  406a79:	inc    ebp
  406a7a:	mov    esi,0xfdd089d9
  406a7f:	aad    0x93
  406a81:	push   ebp
  406a82:	(bad)  
  406a83:	jno    0x406af0
  406a85:	stos   DWORD PTR es:[edi],eax
  406a86:	(bad)  
  406a87:	stos   DWORD PTR es:[edi],eax
  406a88:	push   ecx
  406a89:	or     eax,0xc345394b
  406a8e:	inc    esp
  406a8f:	lods   al,BYTE PTR ds:[esi]
  406a90:	add    al,0x37
  406a92:	daa    
  406a93:	(bad)  [eax+0x1c07c881]
  406a99:	jle    0x406ab2
  406a9b:	and    DWORD PTR [ebx],esp
  406a9d:	repnz xchg esp,eax
  406a9f:	(bad)  
  406aa0:	aaa    
  406aa1:	or     ecx,DWORD PTR [ebp-0x8394583]
  406aa7:	inc    esp
  406aa8:	in     eax,dx
  406aa9:	and    dh,BYTE PTR ds:0xa501bd15
  406aaf:	adc    eax,0xc836612c
  406ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab5:	pop    edi
  406ab6:	lods   al,BYTE PTR ds:[esi]
  406ab7:	xor    ebx,DWORD PTR [eax+0x60f34354]
  406abd:	mov    al,0x95
  406abf:	inc    ebp
  406ac0:	push   es
  406ac1:	xchg   DWORD PTR [ebx+edx*2+0xab486dc],ecx
  406ac8:	jle    0x406a5a
  406aca:	mov    edi,0xe129ec6e
  406acf:	cmp    BYTE PTR [edx-0x71],al
  406ad2:	pop    edx
  406ad3:	bound  esp,QWORD PTR [ecx+0x1f]
  406ad6:	loopne 0x406a60
  406ad8:	xchg   ecx,eax
  406ad9:	mov    cl,0x32
  406adb:	add    BYTE PTR [eax+0x2],dh
  406ade:	xor    al,0xbb
  406ae0:	(bad)  
  406ae1:	mov    DWORD PTR [ecx],0x5df0232
  406ae7:	jge    0x406b53
  406ae9:	dec    BYTE PTR [edx+edx*4]
  406aec:	retf   
  406aed:	jmp    0xfa05d1b4
  406af2:	jne    0x406aa3
  406af4:	xchg   ebx,edx
  406af6:	imul   edx,DWORD PTR [ebx+ebp*4-0x75],0xffffffd0
  406afb:	popa   
  406afc:	jmp    0x406a8f
  406afe:	pop    esp
  406aff:	dec    ebp
  406b00:	mov    al,ds:0x8ea6ad01
  406b05:	jmp    0x406ac5
  406b07:	push   ebp
  406b08:	jp     0x406b88
  406b0a:	or     BYTE PTR [ebx-0x6c5ed697],dh
  406b10:	cmp    BYTE PTR [esp+esi*4+0x16],al
  406b14:	rcl    eax,0x8a
  406b17:	mov    dh,0x7
  406b19:	pop    ebx
  406b1a:	jb     0x406b88
  406b1c:	inc    esp
  406b1d:	test   BYTE PTR [esi+0x7dee8b99],ah
  406b23:	clc    
  406b24:	sbb    al,BYTE PTR [ecx-0x7f]
  406b27:	add    ebx,DWORD PTR [eax]
  406b29:	mov    esi,0x2e752f51
  406b2e:	mov    ecx,0x7dc801a2
  406b33:	inc    eax
  406b34:	(bad)  
  406b35:	mov    ebp,0xf8790a7d
  406b3a:	inc    ebp
  406b3b:	dec    edx
  406b3c:	bound  ebp,QWORD PTR [edx-0x2c]
  406b3f:	imul   edx,ebp,0xfb229624
  406b45:	and    eax,ecx
  406b47:	mov    eax,0x11f27c3c
  406b4c:	jb     0x406baa
  406b4e:	xchg   esi,eax
  406b4f:	or     eax,ecx
  406b51:	push   eax
  406b52:	xor    al,BYTE PTR [esi+0x7529d610]
  406b58:	xchg   BYTE PTR [edx+0x3c],ah
  406b5b:	jp     0x406b7e
  406b5d:	dec    ebp
  406b5e:	repz mov ah,0x7c
  406b61:	adc    al,0xd9
  406b63:	xlat   BYTE PTR ds:[ebx]
  406b64:	fnstenv [ebx]
  406b66:	test   eax,0xf3cb4399
  406b6b:	mov    eax,ds:0x3acfa1f1
  406b70:	push   es
  406b71:	lock adc eax,DWORD PTR [edx+0x70]
  406b75:	inc    edx
  406b76:	pushf  
  406b77:	jl     0x406bf7
  406b79:	or     ch,BYTE PTR [esi+edx*2+0x1dae0c0]
  406b80:	test   al,bh
  406b82:	adc    cl,BYTE PTR [eax]
  406b84:	pop    esi
  406b85:	shl    DWORD PTR [esi],cl
  406b87:	mov    edi,0xce33e3b2
  406b8c:	adc    eax,0xaba2e207
  406b91:	or     eax,0xabcce64
  406b96:	or     DWORD PTR [edx-0x22],0xffffffd6
  406b9a:	inc    edi
  406b9b:	mov    ebp,0x3790d6e8
  406ba0:	cmp    ecx,DWORD PTR [edi-0x794fb1f2]
  406ba6:	cli    
  406ba7:	xchg   esi,eax
  406ba8:	jne    0x406bd9
  406baa:	mov    DWORD PTR ds:0xab9cd253,eax
  406bb0:	rcl    DWORD PTR [ebp-0x4f],0x35
  406bb4:	mov    bh,0x8b
  406bb6:	xchg   ecx,eax
  406bb7:	in     eax,dx
  406bb8:	and    DWORD PTR [eax-0x14],0xb5b609a1
  406bbf:	jecxz  0x406b95
  406bc1:	jmp    0xfef6:0x3351cc9d
  406bc8:	adc    ecx,0xffffffde
  406bcb:	scas   eax,DWORD PTR es:[edi]
  406bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bcd:	mov    al,0x7
  406bcf:	xchg   esi,esp
  406bd1:	mov    dh,0x1
  406bd3:	xchg   ebp,eax
  406bd4:	test   al,0x66
  406bd6:	mov    eax,0xff69326b
  406bdb:	aas    
  406bdc:	imul   DWORD PTR [ecx]
  406bde:	sub    DWORD PTR [esi+ebx*8+0x62],edi
  406be2:	out    dx,eax
  406be3:	(bad)  
  406be4:	jp     0x406bb0
  406be6:	sahf   
  406be7:	ret    0xbe5d
  406bea:	mov    bh,0x82
  406bec:	dec    eax
  406bed:	or     edx,DWORD PTR [ebx+0x61]
  406bf0:	sar    BYTE PTR [edx-0x50],0xda
  406bf4:	(bad)  
  406bf5:	fadd   st(2),st
  406bf7:	cs rol dh,0x5d
  406bfb:	out    0xf0,al
  406bfd:	dec    ecx
  406bfe:	cmp    edx,edx
  406c00:	nop
  406c01:	lods   eax,DWORD PTR ds:[esi]
  406c02:	in     al,dx
  406c03:	push   esp
  406c04:	not    DWORD PTR [edi]
  406c06:	xchg   esp,eax
  406c07:	xor    DWORD PTR [edi+0x73c2524f],ebp
  406c0d:	ins    BYTE PTR es:[edi],dx
  406c0e:	mov    edi,DWORD PTR ds:0xd03a8daa
  406c14:	sub    al,BYTE PTR [ebp-0x14]
  406c17:	mov    ds:0x8a8d0ba7,eax
  406c1c:	pop    edx
  406c1d:	push   cs
  406c1e:	fmul   st,st(6)
  406c20:	jmp    0x406c09
  406c22:	mov    ds:0xc8fb3533,eax
  406c27:	aaa    
  406c28:	pop    ebp
  406c29:	cmp    DWORD PTR [ebp-0x1773acd8],edi
  406c2f:	push   0xf175515c
  406c34:	dec    edx
  406c35:	cmc    
  406c36:	pop    eax
  406c37:	jle    0x406bbe
  406c39:	xor    DWORD PTR [ebx-0x3b58f2b5],ecx
  406c3f:	sti    
  406c40:	sbb    edi,DWORD PTR [edi-0x75]
  406c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c44:	leave  
  406c45:	inc    edx
  406c46:	inc    esp
  406c47:	cmp    esi,DWORD PTR [eax-0x7ba5e65c]
  406c4d:	dec    edi
  406c4e:	js     0x406c21
  406c50:	test   eax,0x91de09e4
  406c55:	pushf  
  406c56:	cwde   
  406c57:	jae    0x406c08
  406c59:	stos   BYTE PTR es:[edi],al
  406c5a:	in     eax,0x20
  406c5c:	call   0xadef7a37
  406c61:	imul   eax,DWORD PTR [esi],0x58
  406c64:	shl    esp,0x90
  406c67:	mov    edx,0xab53fea2
  406c6c:	jmp    0x2507:0x6c2085d5
  406c73:	mov    al,ds:0xb2d04ca
  406c78:	mov    ebx,0xcf007ad2
  406c7d:	jmp    0x406c73
  406c7f:	jecxz  0x406caa
  406c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c82:	rcr    BYTE PTR [esi+edi*2],1
  406c85:	xchg   ebx,eax
  406c86:	stos   BYTE PTR es:[edi],al
  406c87:	pushf  
  406c88:	daa    
  406c89:	push   ss
  406c8a:	inc    ebx
  406c8b:	into   
  406c8c:	inc    edx
  406c8d:	mov    ah,0x57
  406c8f:	xor    ah,dl
  406c91:	inc    edx
  406c92:	jne    0x406c9a
  406c94:	mov    eax,0xc244ed30
  406c99:	xchg   esp,eax
  406c9a:	cld    
  406c9b:	mov    ah,0x62
  406c9d:	sub    edi,DWORD PTR [edx]
  406c9f:	ds xchg ebp,eax
  406ca1:	and    DWORD PTR [esi],0x18b07567
  406ca7:	cmp    al,0xd1
  406ca9:	sub    eax,0x34d060db
  406cae:	jno    0x406ca2
  406cb0:	dec    edx
  406cb1:	inc    ebp
  406cb2:	cmp    BYTE PTR ds:[ebx+ebp*4+0x7291f4af],bl
  406cba:	and    BYTE PTR [ebx],bl
  406cbc:	xor    BYTE PTR [edi-0x12],dh
  406cbf:	add    BYTE PTR [di],0x13
  406cc3:	cli    
  406cc4:	ja     0x406d24
  406cc6:	mov    ds,edi
  406cc8:	mov    al,0x74
  406cca:	or     al,0x7d
  406ccc:	outs   dx,BYTE PTR ds:[esi]
  406ccd:	dec    edx
  406cce:	add    al,0xb3
  406cd0:	jae    0x406c96
  406cd2:	aad    0x2e
  406cd4:	and    eax,0xeacefbcd
  406cd9:	push   edi
  406cda:	xchg   ebx,eax
  406cdb:	ficom  WORD PTR [edx+0x7cf98883]
  406ce1:	outs   dx,DWORD PTR ds:[esi]
  406ce2:	jg     0x406c97
  406ce4:	cwde   
  406ce5:	mov    edi,0x949fd092
  406cea:	xchg   ecx,eax
  406ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cec:	test   al,0x2f
  406cee:	sub    BYTE PTR [edx+0x4],bh
  406cf1:	cmp    DWORD PTR [ecx],0xd7c627e0
  406cf7:	aad    0xae
  406cf9:	stos   DWORD PTR es:[edi],eax
  406cfa:	sub    BYTE PTR [edi+eax*8+0x1e85ea0e],dl
  406d01:	xchg   edx,eax
  406d02:	mov    esp,DWORD PTR [edx-0x597795e8]
  406d08:	and    ebp,DWORD PTR [ebx+ebx*8-0x18]
  406d0c:	imul   ebx,DWORD PTR [esi],0x7518f7b9
  406d12:	dec    edx
  406d13:	dec    esi
  406d14:	outs   dx,BYTE PTR ds:[esi]
  406d15:	mov    ecx,0xa513c714
  406d1a:	or     eax,0x4e6b4d13
  406d1f:	mov    BYTE PTR [ecx+0x73],bh
  406d22:	pop    esp
  406d23:	je     0x406d59
  406d25:	out    dx,al
  406d26:	mov    al,0xab
  406d28:	sub    al,bh
  406d2a:	iret   
  406d2b:	add    bh,al
  406d2d:	stos   DWORD PTR es:[edi],eax
  406d2e:	sbb    ch,bh
  406d30:	data16 int 0x79
  406d33:	lea    ecx,[edi+0x6]
  406d36:	and    al,0xc8
  406d38:	xchg   ebp,eax
  406d39:	ds int 0x8a
  406d3c:	push   esi
  406d3d:	pop    es
  406d3e:	mov    bh,0x36
  406d40:	enter  0x62ad,0xe3
  406d44:	cli    
  406d45:	or     DWORD PTR [edi-0x5eb11517],edx
  406d4b:	bound  ebx,QWORD PTR [ecx+eax*4-0x30]
  406d4f:	ror    DWORD PTR [eax],cl
  406d51:	mov    ah,0x40
  406d53:	jbe    0x406cea
  406d55:	out    dx,eax
  406d56:	jl     0x406dc5
  406d58:	and    al,0xa5
  406d5a:	fst    DWORD PTR [ebp+0x1a81f27f]
  406d61:	fidivr DWORD PTR ds:0x64f96a5d
  406d67:	jbe    0x406d4e
  406d69:	and    al,ch
  406d6b:	xchg   esi,eax
  406d6c:	mov    ds:0x4af2f99d,eax
  406d71:	lea    eax,[edi+0x27]
  406d74:	pop    esi
  406d75:	push   esi
  406d76:	jge    0x406d6e
  406d78:	or     edx,0x8757c40
  406d7e:	mov    ebp,0xb2ff657d
  406d83:	add    edi,DWORD PTR [ecx-0x3ab72ed9]
  406d89:	mov    al,ds:0x1c732138
  406d8e:	fwait
  406d8f:	mov    edx,0x44955973
  406d94:	dec    BYTE PTR [ebp+0x7f55ec4f]
  406d9a:	cdq    
  406d9b:	int    0xcd
  406d9d:	scas   al,BYTE PTR es:[edi]
  406d9e:	and    DWORD PTR [eax],0xffffffc2
  406da1:	dec    esp
  406da2:	nop
  406da3:	int3   
  406da4:	dec    ebp
  406da5:	cmp    bl,ch
  406da7:	fst    DWORD PTR [ebp+0x7c]
  406daa:	and    eax,0xa74ef535
  406daf:	std    
  406db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db1:	jno    0x406e0b
  406db3:	iret   
  406db4:	inc    esi
  406db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db6:	std    
  406db7:	pop    esi
  406db8:	or     ebp,DWORD PTR ds:0xafcf2f5c
  406dbe:	xor    bl,ch
  406dc0:	xchg   edi,eax
  406dc1:	imul   esp,DWORD PTR [esi],0xffffffd7
  406dc4:	jmp    0x406dae
  406dc6:	mov    BYTE PTR [ecx],al
  406dc8:	div    BYTE PTR [ecx+0x18]
  406dcb:	outs   dx,DWORD PTR ds:[esi]
  406dcc:	clc    
  406dcd:	jb     0x406e13
  406dcf:	rol    DWORD PTR [eax],cl
  406dd1:	dec    ebp
  406dd2:	and    al,BYTE PTR [eax+0x22]
  406dd5:	inc    esp
  406dd6:	test   bl,0x47
  406dd9:	cmp    eax,0x1c9a9ad3
  406dde:	jns    0x406d65
  406de0:	inc    edx
  406de1:	adc    DWORD PTR [edx+0xa],ebp
  406de4:	inc    ecx
  406de5:	fisubr DWORD PTR [ecx+0x42384a74]
  406deb:	test   eax,0x5580dd9f
  406df0:	xor    al,BYTE PTR [esi]
  406df2:	out    dx,al
  406df3:	sbb    ecx,DWORD PTR [ebx]
  406df5:	pop    esi
  406df6:	test   esi,0xab716dcf
  406dfc:	dec    esi
  406dfd:	test   BYTE PTR [esi+0x6625b12f],ch
  406e03:	pushf  
  406e04:	mov    bl,0x21
  406e06:	adc    BYTE PTR [ecx+0x1d],dh
  406e09:	stos   BYTE PTR es:[edi],al
  406e0a:	push   0x61
  406e0c:	dec    esi
  406e0d:	lods   al,BYTE PTR ds:[esi]
  406e0e:	inc    ebx
  406e0f:	inc    ebx
  406e10:	stos   DWORD PTR es:[edi],eax
  406e11:	inc    eax
  406e12:	arpl   WORD PTR [eax+eax*4+0x10723d82],si
  406e19:	lods   al,BYTE PTR ds:[esi]
  406e1a:	(bad)  
  406e1b:	loope  0x406dd1
  406e1d:	push   edi
  406e1e:	repnz (bad) 
  406e20:	sbb    bh,dh
  406e22:	cmp    eax,0x82a8a452
  406e27:	jne    0x406e4b
  406e29:	fild   DWORD PTR [eax-0x503b3bca]
  406e2f:	pop    edi
  406e30:	cmp    DWORD PTR [esi],edx
  406e32:	fisttp WORD PTR [edx]
  406e34:	mov    ebx,0x2f8c1c8f
  406e39:	or     esi,esp
  406e3b:	out    0xc6,al
  406e3d:	sub    DWORD PTR [esi],esp
  406e3f:	mov    eax,ds:0x797acf3d
  406e44:	pop    ds
  406e45:	(bad)  [ecx+0x61]
  406e48:	mov    ah,0xce
  406e4a:	repnz xor bl,BYTE PTR [eax-0x10]
  406e4e:	popf   
  406e4f:	pop    ss
  406e50:	test   DWORD PTR [esp+edx*2-0x1a],ebp
  406e54:	sbb    edx,DWORD PTR [ebx]
  406e56:	inc    edx
  406e57:	rcl    DWORD PTR [ebp+0x41c3034a],1
  406e5d:	mov    al,ds:0x1bf1e893
  406e62:	pushf  
  406e63:	jmp    0xb70b:0x677bafe3
  406e6a:	lea    esp,[edx-0x4366a624]
  406e70:	jl     0x406e78
  406e72:	pusha  
  406e73:	mov    dh,0x9f
  406e75:	push   cs
  406e76:	push   cs
  406e77:	jno    0x406e57
  406e79:	adc    edi,ecx
  406e7b:	pushf  
  406e7c:	xlat   BYTE PTR ds:[ebx]
  406e7d:	pushf  
  406e7e:	inc    ebx
  406e7f:	aad    0xb6
  406e81:	scas   eax,DWORD PTR es:[edi]
  406e82:	scas   al,BYTE PTR es:[edi]
  406e83:	outs   dx,DWORD PTR ds:[esi]
  406e84:	mov    ebp,0xed4bebcb
  406e89:	pop    esp
  406e8a:	mov    bh,BYTE PTR [ecx-0x4b77f907]
  406e90:	xor    DWORD PTR [edi],eax
  406e92:	mov    eax,ds:0x6bc0c37a
  406e97:	xor    esi,ecx
  406e99:	into   
  406e9a:	not    DWORD PTR ss:[edi+esi*4+0x68762b1f]
  406ea2:	enter  0xba62,0x8a
  406ea6:	mov    ebx,0x321ed3c
  406eab:	rcr    BYTE PTR [edx],0x69
  406eae:	(bad)  [ebp-0x78]
  406eb1:	dec    esp
  406eb2:	jno    0x406e53
  406eb4:	add    al,bl
  406eb6:	pop    es
  406eb7:	cdq    
  406eb8:	and    al,0xb6
  406eba:	in     al,0xd
  406ebc:	dec    ecx
  406ebd:	sahf   
  406ebe:	push   ebp
  406ebf:	push   ds
  406ec0:	loop   0x406e50
  406ec2:	mov    bh,BYTE PTR ds:[esi]
  406ec5:	out    dx,al
  406ec6:	mov    ebx,0xa70d63de
  406ecb:	mov    dl,0xdb
  406ecd:	je     0x406e80
  406ecf:	and    al,0x5c
  406ed1:	icebp  
  406ed2:	dec    ebp
  406ed3:	rcr    eax,cl
  406ed5:	adc    al,0xd1
  406ed7:	in     eax,0x68
  406ed9:	jne    0x406f00
  406edb:	imul   eax,DWORD PTR [esi-0x4e5f11ac],0x15
  406ee2:	dec    esp
  406ee3:	or     esp,DWORD PTR [edi+0x0]
  406ee6:	loopne 0x406ec2
  406ee8:	mov    dh,0x29
  406eea:	call   0x47990b45
  406eef:	pop    ebx
  406ef0:	adc    edx,DWORD PTR [eax]
  406ef2:	cli    
  406ef3:	jl     0x406ecd
  406ef5:	mov    esp,0xa5bcfca3
  406efa:	arpl   WORD PTR [ebx],di
  406efc:	jmp    0xdb94:0xddaa0c0
  406f03:	fimul  DWORD PTR [ebx-0xb]
  406f06:	test   BYTE PTR [ebx+eiz*1-0x6a],al
  406f0a:	js     0x406f74
  406f0c:	sbb    DWORD PTR [ebp+0x5f970993],0x71f12b59
  406f16:	test   BYTE PTR [eax+0x7e126304],0x5f
  406f1d:	inc    ebp
  406f1e:	xchg   BYTE PTR [edx+0x44],dh
  406f21:	mov    BYTE PTR [ecx+0x20d2491e],ah
  406f27:	stos   BYTE PTR es:[edi],al
  406f28:	inc    edx
  406f29:	adc    edx,esi
  406f2b:	pop    es
  406f2c:	sub    al,0x93
  406f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f2f:	pop    esi
  406f30:	jnp    0x406eb3
  406f32:	mov    esi,0xe90f1b55
  406f37:	jecxz  0x406f09
  406f39:	sbb    esi,edi
  406f3b:	enter  0x7c79,0x22
  406f3f:	jmp    0x1ce775f0
  406f44:	mov    ds,WORD PTR [ebx+0x7549427b]
  406f4a:	jmp    0x8b24dfd3
  406f4f:	xchg   ebx,eax
  406f50:	cmp    ax,0x7584
  406f54:	sbb    BYTE PTR [edx+0x3e1412c1],ch
  406f5a:	pop    ds
  406f5b:	ret    0x8e47
  406f5e:	push   ebp
  406f5f:	lds    edx,FWORD PTR [ebp+edi*4-0x1039b639]
  406f66:	fcom   DWORD PTR [eax]
  406f68:	xacquire xchg BYTE PTR [edx+esi*4-0x1407ecb5],ch
  406f70:	retf   
  406f71:	mov    ds:0x3c2b44f7,al
  406f76:	mov    edi,0x9851c069
  406f7b:	xor    al,0xc2
  406f7d:	lea    esi,[edi+eax*1]
  406f80:	test   eax,0xf03ff105
  406f85:	pushf  
  406f86:	dec    edi
  406f87:	push   ss
  406f88:	test   al,0xa8
  406f8a:	mov    dh,0x49
  406f8c:	retf   
  406f8d:	sbb    al,0x4c
  406f8f:	imul   ecx,esi,0xffffff93
  406f92:	add    al,0xaf
  406f94:	push   ss
  406f95:	addr16 jl 0x406f21
  406f98:	cmp    esp,DWORD PTR [esi]
  406f9a:	in     al,0x2a
  406f9c:	mov    fs,WORD PTR [edx]
  406f9e:	mov    ecx,0xa189f979
  406fa3:	retf   
  406fa4:	fist   WORD PTR [ebp+0x1d]
  406fa7:	pop    edi
  406fa8:	int3   
  406fa9:	mov    esp,0xd93de9b1
  406fae:	or     DWORD PTR [ecx+0x55],esp
  406fb1:	je     0x406fde
  406fb3:	fwait
  406fb4:	add    ebp,DWORD PTR [eax]
  406fb6:	(bad)  
  406fb7:	adc    eax,0x2de1e655
  406fbc:	push   ebx
  406fbd:	cli    
  406fbe:	cmp    DWORD PTR [edx+0x2b],0x8
  406fc2:	jno    0x40703d
  406fc4:	add    edx,DWORD PTR [esi]
  406fc6:	mov    ah,0xe8
  406fc8:	cli    
  406fc9:	cmp    BYTE PTR [ecx-0x10],ch
  406fcc:	jmp    0xcf29139b
  406fd1:	xchg   esi,eax
  406fd2:	in     eax,dx
  406fd3:	out    0x69,eax
  406fd5:	mov    ebp,0xe85ef9f3
  406fda:	mov    esi,0x68494482
  406fdf:	test   BYTE PTR [ebp+0x1510b96e],ah
  406fe5:	lahf   
  406fe6:	cmp    al,0xee
  406fe8:	adc    BYTE PTR [edx+eax*2-0x7c79fbc2],bl
  406fef:	fwait
  406ff0:	cwde   
  406ff1:	popa   
  406ff2:	push   esi
  406ff3:	mov    ds:0xeb2c1f0b,eax
  406ff8:	(bad)  
  406ff9:	xchg   edi,eax
  406ffa:	mov    edi,DWORD PTR [esp-0x49]
  406ffe:	xor    eax,0x4e5e9170
  407003:	lods   al,BYTE PTR ds:[esi]
  407004:	(bad)  
  407006:	retf   
  407007:	fld    TBYTE PTR [ecx+0x4c]
  40700a:	push   ecx
  40700b:	jmp    0xb192:0x711c0870
  407012:	dec    ecx
  407013:	loope  0x407026
  407015:	rcr    BYTE PTR [ecx+0x1f],0xfa
  407019:	imul   ecx,DWORD PTR [eax],0xe5c638ee
  40701f:	cmp    dh,bh
  407021:	xor    eax,0x18540150
  407026:	pop    es
  407027:	jns    0x406fcd
  407029:	xchg   ebx,eax
  40702a:	xor    eax,0x2efa2a3c
  40702f:	ins    BYTE PTR es:[edi],dx
  407030:	jb     0x40707d
  407032:	stc    
  407033:	mov    ecx,0x9fcbb278
  407038:	xchg   esp,eax
  407039:	adc    al,0xa
  40703b:	aas    
  40703c:	rcl    ebp,cl
  40703e:	cmc    
  40703f:	sub    DWORD PTR [esi],eax
  407041:	fbld   TBYTE PTR [ebp+0x3f]
  407044:	jl     0x407056
  407046:	cmp    BYTE PTR [edx+0x74],ch
  407049:	sub    eax,0xfe59121d
  40704e:	mov    edi,0xc4e2ff52
  407053:	lahf   
  407054:	in     al,dx
  407055:	mov    esi,0x1fcc9c69
  40705a:	dec    edx
  40705b:	mov    ebp,0x125dd261
  407060:	xchg   DWORD PTR [edi],ecx
  407062:	cli    
  407063:	dec    ecx
  407064:	cmp    DWORD PTR [eax-0x2e],ebx
  407067:	and    dl,bl
  407069:	sbb    ebp,0x26cf1713
  40706f:	iret   
  407070:	and    eax,0xcd080b61
  407075:	mov    BYTE PTR [eax+0x74],bh
  407078:	dec    edi
  407079:	xchg   edx,eax
  40707a:	jle    0x40702a
  40707c:	jnp    0x4070ee
  40707e:	jle    0x407087
  407080:	jnp    0x407063
  407082:	or     BYTE PTR [edx+edi*1],ch
  407085:	inc    esp
  407086:	ror    BYTE PTR [ecx+eiz*4-0x28af7004],1
  40708d:	sub    eax,0x7360f45
  407092:	dec    esi
  407093:	jno    0x4070bd
  407095:	rcr    DWORD PTR [esi],1
  407097:	and    DWORD PTR [eax],esp
  407099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40709a:	mov    ecx,0x4a89d240
  40709f:	fsub   DWORD PTR [ebp-0x56]
  4070a2:	leave  
  4070a3:	mov    bh,0x28
  4070a5:	iret   
  4070a6:	dec    ecx
  4070a7:	aas    
  4070a8:	add    eax,0x243646da
  4070ad:	inc    esi
  4070ae:	fisttp WORD PTR [eax-0x4f3b23fd]
  4070b4:	pop    ds
  4070b5:	cmc    
  4070b6:	(bad)  
  4070b7:	into   
  4070b8:	aam    0xa
  4070ba:	cmp    eax,0x711c88b8
  4070bf:	mov    ebp,0x212561a5
  4070c4:	and    al,0x75
  4070c6:	and    al,0x46
  4070c8:	lock mov cl,0xb8
  4070cb:	and    ah,BYTE PTR ss:[eax-0x57]
  4070cf:	and    eax,0x2a82dadf
  4070d4:	cmc    
  4070d5:	jle    0x40711e
  4070d7:	cmp    BYTE PTR [edi+ebx*2-0x8],bl
  4070db:	inc    esp
  4070dc:	aad    0xc
  4070de:	scas   eax,DWORD PTR es:[edi]
  4070df:	imul   edi,DWORD PTR [edx-0x49],0x21
  4070e3:	pushf  
  4070e4:	ror    BYTE PTR [edx+ebp*2-0x2],cl
  4070e8:	inc    edx
  4070e9:	xchg   DWORD PTR [esi+ebx*4-0x6c7d3629],esp
  4070f0:	mov    ecx,0x79d5423a
  4070f5:	push   si
  4070f7:	test   BYTE PTR [esp+ebx*2+0x748439de],0x54
  4070ff:	jmp    0x47f9ba99
  407104:	mov    ecx,0xfaa8a6e1
  407109:	adc    edi,DWORD PTR [ebp-0x2acf6594]
  40710f:	rcl    DWORD PTR [ebp-0x9ca603e],0xe4
  407116:	cmp    dh,cl
  407118:	xchg   ebx,esi
  40711a:	loope  0x4070d9
  40711c:	inc    esp
  40711d:	out    0x35,al
  40711f:	sub    dh,BYTE PTR [ebx+ebp*4+0x52]
  407123:	mov    ch,dh
  407125:	dec    ebp
  407126:	mov    dl,0x57
  407128:	inc    ecx
  407129:	mov    ebx,0xdb8122be
  40712e:	dec    ecx
  40712f:	xchg   esp,eax
  407130:	lea    ebp,[ebx+ebp*1]
  407133:	dec    eax
  407134:	xchg   ebp,eax
  407135:	cmp    BYTE PTR [esi],dh
  407137:	scas   eax,DWORD PTR es:[edi]
  407138:	(bad)  
  407139:	jl     0x4070bd
  40713b:	enter  0x9867,0x9d
  40713f:	xor    DWORD PTR [edi+ebp*2],esp
  407142:	retf   
  407143:	push   ds
  407144:	xchg   esi,eax
  407145:	out    0xdf,al
  407147:	mov    edi,0x559e8ce9
  40714c:	sar    BYTE PTR [eax],1
  40714e:	(bad)  
  40714f:	xchg   ebx,eax
  407150:	mov    bh,0x12
  407152:	inc    eax
  407153:	inc    ebx
  407154:	ss jnp 0x4071bd
  407157:	cmp    DWORD PTR [ebp-0x2ec862b6],ecx
  40715d:	sub    edx,edx
  40715f:	sub    BYTE PTR [edi-0x6a8b367],0xc2
  407166:	mov    WORD PTR ds:0xf1cf0de6,?
  40716c:	and    al,0xfe
  40716e:	dec    ecx
  40716f:	adc    eax,0xefa13af6
  407174:	push   0xffffff9c
  407176:	sbb    al,0x8f
  407178:	pop    ecx
  407179:	mov    ds:0x8bffb597,al
  40717e:	add    DWORD PTR [ecx],ebx
  407180:	test   ch,0xdd
  407183:	or     DWORD PTR [ebx-0x553cf50c],ecx
  407189:	and    ecx,ecx
  40718b:	shl    BYTE PTR [ebp+0x42],1
  40718e:	cmp    eax,0x3d5f3d07
  407193:	ficomp DWORD PTR [esp+eax*4]
  407196:	ja     0x40715e
  407198:	and    ch,al
  40719a:	mov    edi,0x9efe55cd
  40719f:	and    eax,0x6c8543fe
  4071a4:	pop    DWORD PTR [edx-0x43aaaa3f]
  4071aa:	adc    al,0xdc
  4071ac:	inc    esp
  4071ad:	enter  0xb93,0x2
  4071b1:	(bad)  
  4071b2:	cmc    
  4071b3:	popa   
  4071b4:	mov    al,0x4d
  4071b6:	pop    ebx
  4071b7:	adc    BYTE PTR ds:0x5c23acdb,bh
  4071bd:	gs int 0x9b
  4071c0:	mov    edx,0x6fdea04c
  4071c5:	inc    ebx
  4071c6:	pop    ds
  4071c7:	or     al,0x36
  4071c9:	xchg   edi,eax
  4071ca:	sar    DWORD PTR ds:0x1d596290,cl
  4071d1:	hlt    
  4071d2:	mov    ch,0x54
  4071d4:	adc    al,0xf9
  4071d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071d7:	in     al,0x1d
  4071d9:	test   al,0x72
  4071db:	jno    0x40722c
  4071dd:	inc    eax
  4071de:	retf   
  4071df:	jmp    0x407236
  4071e1:	sbb    al,al
  4071e3:	int3   
  4071e4:	mov    ch,0x2e
  4071e6:	mov    bl,0x94
  4071e8:	xor    al,0x18
  4071ea:	aam    0x6
  4071ec:	popf   
  4071ed:	xor    BYTE PTR [edx],0x45
  4071f0:	rol    BYTE PTR [ebp+edx*1-0x11],cl
  4071f4:	xor    BYTE PTR [edi+0x54],al
  4071f7:	sti    
  4071f8:	jae    0x407278
  4071fa:	pop    esi
  4071fb:	xchg   ebx,eax
  4071fc:	pop    edx
  4071fd:	dec    ecx
  4071fe:	or     edx,DWORD PTR [edi]
  407200:	push   edx
  407201:	dec    ebp
  407202:	mov    ch,0x4b
  407204:	cmp    al,0xfd
  407206:	std    
  407207:	mov    dl,bl
  407209:	mov    ?,WORD PTR [ebx+ecx*1+0x46c49332]
  407210:	(bad)  [eax]
  407212:	adc    ebp,ebp
  407214:	jno    0x40720f
  407216:	das    
  407217:	xchg   edx,eax
  407218:	sahf   
  407219:	cmp    eax,ecx
  40721b:	xchg   esp,eax
  40721c:	cmp    dl,cl
  40721e:	jge    0x4071d6
  407220:	loope  0x40726d
  407222:	bound  edi,QWORD PTR [edx+0x5ebdbaad]
  407228:	aad    0xd8
  40722a:	mov    bl,0x4e
  40722c:	les    ebp,FWORD PTR [eax+eiz*2+0x6b]
  407230:	cmp    ebp,DWORD PTR [ecx]
  407232:	call   0xfa2a:0x70d4f571
  407239:	pop    ebx
  40723a:	jecxz  0x407289
  40723c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40723d:	mov    ds:0x1685067b,eax
  407242:	shl    DWORD PTR [ebx+0x19],0x54
  407246:	push   cs
  407247:	mov    cl,0x64
  407249:	or     al,0x66
  40724b:	adc    dl,BYTE PTR [edx+0x32ffd52]
  407251:	(bad)  
  407252:	fist   DWORD PTR [esp+eax*8-0x51]
  407256:	(bad)  
  407257:	xor    edx,DWORD PTR [eax-0x57]
  40725a:	xchg   ecx,eax
  40725b:	lds    esp,FWORD PTR [edx+0x3e524c4f]
  407261:	xor    al,0x31
  407263:	mov    ds,WORD PTR [ecx+0x27]
  407266:	pop    ebp
  407267:	or     DWORD PTR [esi],edi
  407269:	mov    bh,BYTE PTR [ebx+ebp*2-0x6de9138f]
  407270:	fist   DWORD PTR [ecx]
  407272:	daa    
  407273:	cmc    
  407274:	adc    ebx,DWORD PTR [esi+0x9]
  407277:	fnstcw WORD PTR ds:0x5de97a4
  40727d:	sbb    al,0xae
  40727f:	icebp  
  407280:	ret    0xc728
  407283:	ret    
  407284:	ror    DWORD PTR [edi],1
  407286:	mov    edx,0x929c189e
  40728b:	(bad)  
  40728c:	popf   
  40728d:	(bad)  
  40728e:	in     eax,dx
  40728f:	push   edx
  407290:	rcr    BYTE PTR [edi+0x13],1
  407293:	mov    ebx,DWORD PTR [edi+eax*4+0x7198e1eb]
  40729a:	lods   eax,DWORD PTR ds:[esi]
  40729b:	push   es
  40729c:	pusha  
  40729d:	jmp    0xd8e:0x417ca963
  4072a4:	adc    DWORD PTR [edi-0xa],ebx
  4072a7:	test   al,0x3c
  4072a9:	ins    BYTE PTR es:[edi],dx
  4072aa:	push   edx
  4072ab:	inc    edx
  4072ac:	test   DWORD PTR [ebx-0x7598543f],esi
  4072b2:	pop    es
  4072b3:	pop    esp
  4072b4:	fimul  DWORD PTR [edi-0x179a3b9]
  4072ba:	lahf   
  4072bb:	xchg   DWORD PTR [esi],esp
  4072bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072be:	ds in  al,0xfc
  4072c1:	pmaxub mm1,QWORD PTR [eax-0x3558f551]
  4072c8:	sbb    al,0xec
  4072ca:	jmp    0x4072aa
  4072cc:	push   ebp
  4072cd:	scas   al,BYTE PTR es:[edi]
  4072ce:	mov    ebp,0x1e7b8782
  4072d3:	add    ch,al
  4072d5:	aaa    
  4072d6:	cmp    eax,0x76b8f5e4
  4072db:	aam    0x7
  4072dd:	fsubr  DWORD PTR ds:0x901728a4
  4072e3:	or     al,BYTE PTR [ecx]
  4072e5:	sti    
  4072e6:	sbb    eax,edi
  4072e8:	jle    0x4072ba
  4072ea:	div    BYTE PTR [ecx+0x6e0a8565]
  4072f0:	out    0x78,eax
  4072f2:	jne    0x407275
  4072f4:	jnp    0x4072a4
  4072f6:	aad    0x1d
  4072f8:	iret   
  4072f9:	mov    ah,0x56
  4072fb:	sbb    al,0x4a
  4072fd:	retf   0xe3e2
  407300:	sub    eax,0xc4a66589
  407305:	mov    edi,0x15cf1d49
  40730a:	and    eax,0x1fc344c9
  40730f:	mov    al,ds:0x500ece78
  407314:	imul   edx,DWORD PTR [ecx],0x13a10940
  40731a:	push   ecx
  40731b:	fisub  WORD PTR [edx]
  40731d:	xor    al,0xa3
  40731f:	fucomi st,st(2)
  407321:	pop    esi
  407322:	or     BYTE PTR [ebp+0x68d80a15],al
  407328:	add    bh,ah
  40732a:	icebp  
  40732b:	outs   dx,BYTE PTR ds:[esi]
  40732c:	adc    ebp,DWORD PTR [edi+0x76]
  40732f:	dec    edi
  407330:	push   0x1a
  407332:	stos   BYTE PTR es:[edi],al
  407333:	cwde   
  407334:	repnz push edx
  407336:	data16 out dx,al
  407338:	push   ebx
  407339:	fsub   QWORD PTR [esi+edi*2]
  40733c:	and    eax,0x729ac8ee
  407341:	call   0x5ffe5d15
  407346:	ret    
  407347:	dec    eax
  407348:	test   DWORD PTR [eax+edx*8],ebp
  40734b:	dec    esi
  40734c:	sub    al,0xa5
  40734e:	cdq    
  40734f:	add    bh,al
  407351:	push   esi
  407352:	or     al,0x66
  407354:	xchg   ah,dh
  407356:	or     BYTE PTR [esi],0x6d
  407359:	and    eax,0x643daa85
  40735e:	retf   
  40735f:	mov    edi,0xfb09212
  407364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407365:	pop    es
  407366:	jno    0x40732e
  407368:	and    eax,0x84052c18
  40736d:	cli    
  40736e:	popa   
  40736f:	lods   al,BYTE PTR ds:[esi]
  407370:	inc    edi
  407371:	mov    ecx,0x354ea15b
  407376:	popa   
  407377:	lods   eax,DWORD PTR ds:[esi]
  407378:	in     al,0xb1
  40737a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40737b:	push   0x4eb08a3a
  407380:	scas   eax,DWORD PTR es:[edi]
  407381:	dec    ebp
  407382:	xor    bh,BYTE PTR [ebx+eiz*8+0x76]
  407386:	sbb    esp,DWORD PTR ds:0x433615c1
  40738c:	adc    BYTE PTR [esi],bl
  40738e:	add    BYTE PTR [edx+0x5b],bl
  407391:	repnz sti 
  407393:	pop    ds
  407394:	jl     0x407380
  407396:	push   ds
  407397:	fiadd  WORD PTR [esi+eiz*8+0x7b5b2fff]
  40739e:	inc    edx
  40739f:	not    BYTE PTR [ebx-0x6a]
  4073a2:	call   0x300b:0xa8e94eb8
  4073a9:	std    
  4073aa:	(bad)  
  4073ab:	adc    al,0x9c
  4073ad:	xchg   edi,eax
  4073ae:	fdiv   QWORD PTR [eax+0x9]
  4073b1:	outs   dx,DWORD PTR ds:[esi]
  4073b2:	ins    BYTE PTR es:[edi],dx
  4073b3:	pop    esi
  4073b4:	sbb    esp,ebx
  4073b6:	nop
  4073b7:	sbb    eax,DWORD PTR [edx-0x56]
  4073ba:	out    dx,eax
  4073bb:	cli    
  4073bc:	(bad)  
  4073bd:	mov    cl,0xb1
  4073bf:	ss mov edx,0x1bdbe792
  4073c5:	fld    TBYTE PTR [eax-0x43]
  4073c8:	loopne 0x407418
  4073ca:	push   ebx
  4073cb:	push   esi
  4073cc:	in     al,0x4a
  4073ce:	xchg   DWORD PTR [ebp-0x35],eax
  4073d1:	push   edx
  4073d2:	ds sub bh,ch
  4073d5:	inc    edx
  4073d6:	push   ss
  4073d7:	xchg   esi,eax
  4073d8:	add    DWORD PTR [edx-0x1a566692],ecx
  4073de:	sub    edx,ebp
  4073e0:	sub    DWORD PTR [ecx-0x164a2a99],esp
  4073e6:	dec    edx
  4073e7:	ins    BYTE PTR es:[edi],dx
  4073e8:	dec    esi
  4073e9:	add    dh,0x6a
  4073ec:	aam    0x86
  4073ee:	js     0x407432
  4073f0:	inc    ebx
  4073f1:	in     al,dx
  4073f2:	xchg   ebp,eax
  4073f3:	dec    esi
  4073f4:	sbb    ch,BYTE PTR ds:0xd109dc30
  4073fa:	sub    al,0x74
  4073fc:	(bad)  
  4073fe:	push   0x634a4e80
  407403:	sbb    BYTE PTR [edx],ch
  407405:	fcomi  st,st(1)
  407407:	sti    
  407408:	fisttp QWORD PTR [eax]
  40740a:	out    dx,al
  40740b:	fidivr WORD PTR [ebx-0x75fcccc7]
  407411:	xlat   BYTE PTR ds:[ebx]
  407412:	add    ecx,DWORD PTR [edi+0x4e6707e9]
  407418:	imul   esp,DWORD PTR [ebx],0xffffffcf
  40741b:	fwait
  40741c:	dec    esi
  40741d:	(bad)  
  40741e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40741f:	sub    BYTE PTR [esi-0x56],al
  407422:	jo     0x4073eb
  407424:	test   eax,0xdea5b2ed
  407429:	call   0x63b5:0xf6438cff
  407430:	inc    ebp
  407431:	mov    ebx,0x3180eee8
  407436:	push   ds
  407437:	push   es
  407438:	inc    edi
  407439:	aam    0x49
  40743b:	dec    esi
  40743c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40743d:	adc    eax,0x4ff5e58b
  407442:	sbb    dl,al
  407444:	mov    edx,0x35436a39
  407449:	xor    eax,0xbbc178fe
  40744e:	fs or  al,0xaf
  407451:	xor    ebp,esi
  407453:	sub    al,0x46
  407455:	dec    eax
  407456:	sbb    dh,BYTE PTR [edi]
  407458:	add    BYTE PTR [eax-0x45],ch
  40745b:	add    al,0xfa
  40745d:	aam    0x97
  40745f:	jmp    0xe7ab60d7
  407464:	cdq    
  407465:	js     0x407430
  407467:	cmc    
  407468:	jmp    0xa0464d53
  40746d:	jle    0x4074ac
  40746f:	fdivr  DWORD PTR [edx+0x45]
  407472:	sbb    al,BYTE PTR [edx-0x6f0ae545]
  407478:	and    BYTE PTR [ebp+0x3db3b6c],bl
  40747e:	sbb    al,0x6f
  407480:	xor    BYTE PTR [edx+0x39],dl
  407483:	call   0x6ba1:0xb74e159b
  40748a:	iret   
  40748b:	fldcw  WORD PTR [edx+0x7e]
  40748e:	and    al,0xe7
  407490:	leave  
  407491:	mov    ds:0x614f7939,al
  407496:	jle    0x40742b
  407498:	mov    dh,0x8e
  40749a:	cmp    al,0x7b
  40749c:	push   eax
  40749d:	rcr    edi,1
  40749f:	mov    dl,0xbe
  4074a1:	popa   
  4074a2:	sbb    eax,0x8cfa87a8
  4074a7:	outs   dx,BYTE PTR ds:[esi]
  4074a8:	sti    
  4074a9:	mov    cl,0xb8
  4074ab:	pusha  
  4074ac:	mov    esp,0xdd030171
  4074b1:	sub    eax,0xa1eb754f
  4074b6:	test   DWORD PTR [eax],edi
  4074b8:	test   al,0x20
  4074ba:	(bad)  
  4074bb:	outs   dx,DWORD PTR ds:[esi]
  4074bc:	fstp   DWORD PTR fs:[edi-0x15bb75db]
  4074c3:	sub    cl,al
  4074c5:	pop    es
  4074c6:	cwde   
  4074c7:	cdq    
  4074c8:	sbb    eax,0xa3749d1a
  4074cd:	test   al,0x8e
  4074cf:	add    ch,BYTE PTR [ebx+0xd23dbcf]
  4074d5:	jo     0x407546
  4074d7:	jae    0x4074e7
  4074d9:	dec    esp
  4074da:	iret   
  4074db:	rol    al,1
  4074dd:	or     eax,DWORD PTR [esi+edi*2]
  4074e0:	mov    ds:0x647368e6,al
  4074e5:	dec    edi
  4074e6:	xor    ch,BYTE PTR [edi]
  4074e8:	mov    edx,0x6e63d7c4
  4074ed:	stc    
  4074ee:	ror    DWORD PTR [ebx+0x65],0xb7
  4074f2:	xchg   BYTE PTR [ebx+esi*4],ch
  4074f5:	pop    ebp
  4074f6:	add    ebp,0xffffffdb
  4074f9:	scas   eax,DWORD PTR es:[edi]
  4074fa:	adc    esi,DWORD PTR [ebp+edi*2-0x7504323f]
  407501:	out    dx,al
  407502:	mov    ecx,DWORD PTR [esi+0x4b7c467]
  407508:	out    dx,eax
  407509:	stos   DWORD PTR es:[edi],eax
  40750a:	fmul   QWORD PTR [edx-0x58aaffb3]
  407510:	mov    al,0xa9
  407512:	sub    DWORD PTR [edx-0x3f],ebp
  407515:	jno    0x40751d
  407517:	cs aam 0x87
  40751a:	lods   eax,DWORD PTR ds:[esi]
  40751b:	outs   dx,DWORD PTR ds:[esi]
  40751c:	adc    ecx,DWORD PTR [ebp+0x68]
  40751f:	ins    BYTE PTR es:[edi],dx
  407520:	sbb    al,0x96
  407522:	push   ecx
  407523:	sbb    al,0xf6
  407525:	push   0x2003c7e0
  40752a:	xchg   edi,eax
  40752b:	fxch   st(4)
  40752d:	adc    dh,BYTE PTR [eax-0x7e9c21a6]
  407533:	sahf   
  407534:	and    al,0x75
  407536:	mov    dh,0xd8
  407538:	pop    ebp
  407539:	lahf   
  40753a:	or     al,0x22
  40753c:	add    eax,0x657b72c2
  407541:	cmp    bh,BYTE PTR [edx+0x1e18c74a]
  407547:	ja     0x407515
  407549:	ret    
  40754a:	and    BYTE PTR [eax+0x13e9f74],bh
  407550:	xchg   ecx,eax
  407551:	out    dx,al
  407552:	mov    ebp,0x4006a73c
  407557:	mov    ds:0xfe430a09,eax
  40755c:	stos   DWORD PTR es:[edi],eax
  40755d:	add    cl,BYTE PTR [esi]
  40755f:	xchg   ch,bh
  407561:	sub    BYTE PTR [edx],al
  407563:	sbb    bl,BYTE PTR [edx-0x126f73cd]
  407569:	add    esp,DWORD PTR [esi+0x5b]
  40756c:	pop    ds
  40756d:	add    DWORD PTR [esi],0x7b3bf645
  407573:	mov    ah,0xb6
  407575:	mul    BYTE PTR [eax+ebx*4]
  407578:	and    al,0xec
  40757a:	imul   ebp,DWORD PTR [esi],0xffffff86
  40757d:	and    DWORD PTR [edx-0x554786ee],0x7
  407584:	shl    BYTE PTR [ecx-0x18],0x21
  407588:	pop    eax
  407589:	sbb    ebx,edx
  40758b:	mov    dl,0xd
  40758d:	adc    BYTE PTR [edi-0x4f],bh
  407590:	cwde   
  407591:	pop    eax
  407592:	pop    ecx
  407593:	xor    al,0x63
  407595:	mov    ebp,0xf44b540c
  40759a:	or     al,0x6e
  40759c:	inc    ecx
  40759d:	push   ds
  40759e:	rcl    BYTE PTR [eax+0x8],1
  4075a1:	pop    eax
  4075a2:	push   ss
  4075a3:	mov    BYTE PTR [ebx],bh
  4075a5:	pop    DWORD PTR [edx+ebp*2+0x2175e947]
  4075ac:	pop    esi
  4075ad:	dec    eax
  4075ae:	mov    edi,fs
  4075b0:	fnstenv [ebp+0x6a3796cf]
  4075b6:	mov    ch,0x7
  4075b8:	repnz xchg ebx,eax
  4075ba:	pop    ebp
  4075bb:	imul   esp,ebp,0x25
  4075be:	nop    DWORD PTR [eax-0x3c]
  4075c2:	dec    esi
  4075c3:	dec    edi
  4075c4:	inc    eax
  4075c5:	addr16 ret 
  4075c7:	scas   eax,DWORD PTR es:[edi]
  4075c8:	(bad)
  4075cb:	mov    ebp,esp
  4075cd:	dec    edx
  4075ce:	xchg   ebp,eax
  4075cf:	xor    dh,bh
  4075d1:	pop    ebx
  4075d2:	hlt    
  4075d3:	(bad)  
  4075d4:	and    eax,0x3e1f6e4b
  4075d9:	rcr    BYTE PTR [ebp-0x6d],1
  4075dc:	js     0x4075e5
  4075de:	mov    cl,0xc
  4075e0:	repz mov bl,0xf7
  4075e3:	mov    ds:0xa3602ab8,eax
  4075e8:	fisub  WORD PTR [eax]
  4075ea:	jmp    0xd7bee63c
  4075ef:	sbb    al,0x99
  4075f1:	adc    DWORD PTR [ecx+0x38],ecx
  4075f4:	cli    
  4075f5:	fnsave [ecx+0x50]
  4075f8:	xor    DWORD PTR [eax+edi*2-0x41],esi
  4075fc:	add    ch,BYTE PTR [eax-0x97c37c2]
  407602:	cli    
  407603:	bound  edi,QWORD PTR [ecx+0xfbb3e3]
  407609:	and    eax,0x7b2b8f76
  40760e:	mov    BYTE PTR [esi+0xd69f60],0xe6
  407615:	and    BYTE PTR [ebp-0x19],0x7b
  407619:	pushw  ss
  40761b:	outs   dx,DWORD PTR ds:[esi]
  40761c:	or     esp,esp
  40761e:	hlt    
  40761f:	test   DWORD PTR [ecx+0x5f],eax
  407622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407623:	and    eax,0xc9e8f9d9
  407628:	fimul  DWORD PTR [edi-0x79a8ecfb]
  40762e:	fdivr  DWORD PTR [esi-0x5f]
  407631:	jnp    0x407619
  407633:	mov    ch,bh
  407635:	gs xchg ebp,eax
  407637:	out    dx,al
  407638:	call   DWORD PTR [edi*4-0x79d2f6da]
  40763f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407640:	fcom   QWORD PTR [edx+0x5c]
  407643:	adc    DWORD PTR ds:0xe3978274,esi
  407649:	rcr    bh,0x60
  40764c:	or     edx,DWORD PTR [ebx]
  40764e:	and    al,0x6d
  407650:	sbb    bl,bl
  407652:	xchg   edi,eax
  407653:	fsub   QWORD PTR [ebx]
  407655:	lock push esp
  407657:	fsubp  st(2),st
  407659:	(bad)  
  40765a:	imul   BYTE PTR [esi+0x7]
  40765d:	sbb    eax,0xc3ae93ee
  407662:	inc    ebp
  407663:	stc    
  407664:	clc    
  407665:	jb     0x407601
  407667:	popf   
  407668:	mov    edi,0x7a6ad81c
  40766d:	call   0xd122cacf
  407672:	repz mov ah,0x3a
  407675:	cmp    BYTE PTR [esi],cl
  407677:	xchg   edi,eax
  407678:	ret    
  407679:	sbb    edi,DWORD PTR [edx-0x78067748]
  40767f:	push   esi
  407680:	es push 0xffffff9c
  407683:	repz push edx
  407685:	aad    0xfd
  407687:	mov    eax,ds:0xd14c1f3c
  40768c:	popf   
  40768d:	xor    bh,BYTE PTR [eax]
  40768f:	adc    ecx,ecx
  407691:	sub    al,0xe2
  407693:	xor    ebx,DWORD PTR [esi+0x3626d6bf]
  407699:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40769b:	(bad)  
  40769d:	sbb    BYTE PTR [esi+eax*1-0x60],ah
  4076a1:	mov    ds:0xc527d2d,eax
  4076a6:	xchg   ebx,eax
  4076a7:	shr    BYTE PTR [edi-0x53],1
  4076aa:	dec    ebp
  4076ab:	jne    0x4076d0
  4076ad:	loope  0x4076e9
  4076af:	cmp    ch,BYTE PTR [esi+0x521073f3]
  4076b5:	ret    
  4076b6:	test   eax,0x2ad9a040
  4076bb:	mov    al,0xcd
  4076bd:	push   ebx
  4076be:	xchg   edi,eax
  4076bf:	mov    BYTE PTR [edi+ebx*2],ah
  4076c2:	dec    edx
  4076c3:	push   es
  4076c4:	cmp    esi,DWORD PTR [esi+0x7b086246]
  4076ca:	mov    eax,0x53aab9c
  4076cf:	adc    BYTE PTR [eax-0x465dac15],0xeb
  4076d6:	rcl    BYTE PTR ds:0x81a05be2,1
  4076dc:	in     eax,dx
  4076dd:	pushf  
  4076de:	push   esi
  4076df:	cmp    BYTE PTR [esi-0x21],0xd6
  4076e3:	xchg   ecx,eax
  4076e4:	(bad)  
  4076e5:	xchg   ecx,eax
  4076e6:	mov    ds,WORD PTR [eax-0x43]
  4076e9:	retf   
  4076ea:	jl     0x4076bc
  4076ec:	ins    DWORD PTR es:[edi],dx
  4076ed:	sbb    edi,edi
  4076ef:	scas   al,BYTE PTR es:[edi]
  4076f0:	and    eax,0x261f1df
  4076f5:	(bad)  
  4076f6:	shl    dh,1
  4076f8:	pop    ebp
  4076f9:	in     eax,0xd5
  4076fb:	fcom   QWORD PTR [edx]
  4076fd:	jl     0x407740
  4076ff:	cmp    ecx,eax
  407701:	sub    ch,BYTE PTR [ebx]
  407703:	push   edx
  407704:	ins    BYTE PTR es:[edi],dx
  407705:	mul    BYTE PTR [ebx+0x6ca1e739]
  40770b:	lods   eax,DWORD PTR ds:[esi]
  40770c:	cmp    edx,edx
  40770e:	bound  esi,QWORD PTR [edx]
  407710:	sbb    eax,0x224475d0
  407715:	inc    esi
  407716:	dec    edx
  407717:	or     bl,BYTE PTR [eax+ecx*2]
  40771a:	(bad)  
  40771b:	jmp    0x74be:0xb2e6c1e0
  407722:	scas   eax,DWORD PTR es:[edi]
  407723:	nop
  407724:	mov    esp,0x8132cd36
  407729:	shr    BYTE PTR [edx-0x6f],1
  40772c:	mov    dh,0xb6
  40772e:	mov    ds:0x6bf8cdc6,al
  407733:	pop    ss
  407734:	xor    DWORD PTR [eax-0x74de37a2],ebx
  40773a:	test   DWORD PTR [ebx],0x36a8ae25
  407740:	stc    
  407741:	inc    edi
  407742:	add    al,0x63
  407744:	(bad)  
  407745:	fcmovnbe st,st(0)
  407747:	adc    BYTE PTR [esi+0x6b158b88],al
  40774d:	cmp    ah,BYTE PTR [ecx]
  40774f:	push   eax
  407750:	(bad)  
  407751:	js     0x407749
  407753:	imul   esp,DWORD PTR [esi],0xbe0a0d17
  407759:	cli    
  40775a:	jge    0x40773f
  40775c:	adc    al,0x88
  40775e:	mov    ecx,0xd2211d98
  407763:	fstp   st(7)
  407765:	jmp    0x8aa3af0e
  40776a:	fs sbb eax,0x1f2eb870
  407770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407771:	je     0x4077d7
  407773:	and    eax,0x49604da
  407778:	and    ch,dl
  40777a:	mov    bl,0xa1
  40777c:	mov    fs,WORD PTR fs:[ebp-0x29298459]
  407783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407784:	and    dl,BYTE PTR [eax]
  407786:	sbb    BYTE PTR [ebp-0x15c2ecf1],cl
  40778c:	sbb    ebx,DWORD PTR [edi-0x55]
  40778f:	push   edx
  407790:	sbb    eax,0xbfe6e0c3
  407795:	dec    eax
  407796:	jl     0x40779b
  407798:	or     BYTE PTR [edx+0x51],bh
  40779b:	push   edx
  40779c:	mov    ebp,0x62a04487
  4077a1:	mov    edx,0xc3e28d81
  4077a6:	stc    
  4077a7:	push   ebp
  4077a8:	fdivr  DWORD PTR [ebp+0x63]
  4077ab:	mov    ebp,0xccb94e6b
  4077b0:	jl     0x4077af
  4077b2:	or     ch,BYTE PTR [ebx+0x7cb0bb1b]
  4077b8:	test   eax,0x672ee5a0
  4077bd:	dec    edi
  4077be:	outs   dx,DWORD PTR ds:[esi]
  4077bf:	loopne 0x40776b
  4077c1:	in     eax,dx
  4077c2:	gs mov dh,0x91
  4077c5:	sbb    BYTE PTR [esi-0x369c3cbf],0x6a
  4077cc:	mov    ds:0xca3fcc2,eax
  4077d1:	add    BYTE PTR [ebp-0x3e],al
  4077d4:	mov    DWORD PTR [eax-0x7b4e991f],ebx
  4077da:	or     ebx,DWORD PTR [edi]
  4077dc:	dec    edx
  4077dd:	retf   0xbc1b
  4077e0:	add    DWORD PTR [esp+ebx*1+0x54],edx
  4077e4:	and    ebx,0xffffffb7
  4077e7:	xchg   ecx,eax
  4077e8:	mov    ?,WORD PTR [ebx-0x77f92b38]
  4077ee:	outs   dx,BYTE PTR ds:[esi]
  4077ef:	into   
  4077f0:	es dec eax
  4077f2:	in     al,0xdb
  4077f4:	dec    ebp
  4077f5:	inc    ebx
  4077f6:	xlat   BYTE PTR ds:[ebx]
  4077f7:	test   DWORD PTR [edx*2-0x215629e0],eax
  4077fe:	and    al,0x9f
  407800:	mov    dl,BYTE PTR [edx+0x3d51c012]
  407806:	mov    esp,0x8f1a0ec4
  40780b:	fnsetpm(287 only) 
  40780d:	cli    
  40780e:	jbe    0x407878
  407810:	xor    al,0xb6
  407812:	ss jb  0x4077e8
  407815:	dec    ecx
  407816:	fwait
  407817:	push   ss
  407818:	fadd   QWORD PTR [edx+0x36]
  40781b:	xchg   edx,eax
  40781c:	out    dx,al
  40781d:	sbb    eax,0x2deb773a
  407822:	fucom  st(2)
  407824:	inc    ecx
  407825:	std    
  407826:	stos   DWORD PTR es:[edi],eax
  407827:	sub    BYTE PTR [ebx+ebp*8-0x74930c2a],ah
  40782e:	(bad)  
  40782f:	stos   BYTE PTR es:[edi],al
  407830:	cmp    BYTE PTR [eax],al
  407832:	jmp    0xb1df:0x6ed267e6
  407839:	xchg   edx,eax
  40783a:	iret   
  40783b:	imul   ecx,DWORD PTR [ebp+0x7],0x624509e9
  407842:	int3   
  407843:	add    eax,0x9d854bde
  407848:	inc    ebp
  407849:	sbb    DWORD PTR [edx+ebp*2+0x4a8714d2],ebp
  407850:	jge    0x407852
  407852:	push   eax
  407853:	mov    ebx,0xa0a6ec15
  407858:	inc    eax
  407859:	int    0xf2
  40785b:	push   0x12be6ca2
  407860:	push   0x87285197
  407865:	pop    ebx
  407866:	andnps xmm1,XMMWORD PTR [esi+0x18]
  40786a:	mov    DWORD PTR [ebx+0x23be96e],edi
  407870:	fcomp  DWORD PTR [ecx]
  407872:	inc    eax
  407873:	rol    DWORD PTR [esi],1
  407875:	cmp    cl,ch
  407877:	mov    ebp,0xdad791e2
  40787c:	and    BYTE PTR [edi+esi*1-0x27],bh
  407880:	xor    al,0xbe
  407882:	clc    
  407883:	scas   al,BYTE PTR es:[edi]
  407884:	aam    0x7
  407886:	push   ds
  407887:	mov    bl,0xf4
  407889:	sbb    edx,DWORD PTR [esi]
  40788b:	inc    ebx
  40788c:	xchg   cl,bl
  40788e:	out    0xf,al
  407890:	mov    WORD PTR [ebx-0xbf44066],ds
  407896:	enter  0x8e3a,0xc7
  40789a:	div    DWORD PTR [esi-0x3d]
  40789d:	call   0xa5a0514b
  4078a2:	fdivr  st,st(3)
  4078a4:	sbb    al,0x15
  4078a6:	sub    al,0xd4
  4078a8:	xchg   edi,eax
  4078a9:	inc    ecx
  4078aa:	jmp    0x439012bc
  4078af:	add    BYTE PTR [ebx-0x7b],bl
  4078b2:	es mov esi,0xe6c520b0
  4078b8:	lahf   
  4078b9:	sub    ebp,DWORD PTR [esi-0x62]
  4078bc:	push   cs
  4078bd:	ss sbb al,0x10
  4078c0:	push   ecx
  4078c1:	fimul  DWORD PTR [ebp-0x29dcbff6]
  4078c7:	mov    bh,0x51
  4078c9:	lods   al,BYTE PTR ds:[esi]
  4078ca:	dec    eax
  4078cb:	lock test eax,0xe795c270
  4078d1:	push   ds
  4078d2:	mov    ah,0x64
  4078d4:	in     al,0x75
  4078d6:	mov    ah,0xe7
  4078d8:	jae    0x407949
  4078da:	dec    ebp
  4078db:	mov    ebp,DWORD PTR [esi+0x5b]
  4078de:	clc    
  4078df:	sub    bl,BYTE PTR [eax-0x59fe0a67]
  4078e5:	push   esi
  4078e6:	(bad)  
  4078e7:	dec    BYTE PTR [edi-0x2]
  4078ea:	dec    edi
  4078eb:	pusha  
  4078ec:	aad    0x93
  4078ee:	fisubr WORD PTR [esi+0x1df280a7]
  4078f4:	inc    ecx
  4078f5:	clc    
  4078f6:	mov    ebx,0xfa2b73a8
  4078fb:	aas    
  4078fc:	pop    esp
  4078fd:	push   ebp
  4078fe:	js     0x407975
  407900:	jno    0x407960
  407902:	fadd   QWORD PTR [esi]
  407904:	loop   0x40797c
  407906:	push   edx
  407907:	cmp    BYTE PTR [edx],0x33
  40790a:	push   esp
  40790b:	enter  0x978e,0x5a
  40790f:	sbb    esp,ebp
  407911:	ret    0xd3b
  407914:	mov    ebx,0xf09030df
  407919:	cmp    BYTE PTR [eax+0x4e4372f0],0x31
  407920:	js     0x407980
  407922:	ror    BYTE PTR [esi],0x9
  407925:	sub    ecx,DWORD PTR [edx]
  407927:	mov    eax,ds:0xb0bfcd8f
  40792c:	icebp  
  40792d:	jmp    DWORD PTR [ebx+0x1c]
  407931:	adc    cl,BYTE PTR [ebx-0x1d]
  407934:	std    
  407935:	pop    edx
  407936:	inc    ebp
  407937:	xor    eax,0x6dc025d7
  40793c:	jne    0x4078d7
  40793e:	addr16 loope 0x407954
  407941:	or     eax,0xfb1c315c
  407946:	js     0x4078d9
  407948:	cs cli 
  40794a:	push   es
  40794b:	outs   dx,DWORD PTR ds:[esi]
  40794c:	test   eax,0x64293dee
  407951:	xchg   ebx,eax
  407952:	dec    eax
  407953:	adc    cl,BYTE PTR [edi]
  407955:	repnz sbb eax,0x1d75ec6d
  40795b:	push   ss
  40795c:	mov    gs,WORD PTR [ebx-0x6b]
  40795f:	int3   
  407960:	and    al,0xb
  407962:	loope  0x4079e1
  407964:	xor    al,0xb6
  407966:	into   
  407967:	imul   edx,ebx,0x6cda0b18
  40796d:	(bad)  
  40796e:	addr16 dec esi
  407970:	je     0x40791a
  407972:	push   ebp
  407973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407975:	ds xchg ebx,eax
  407977:	adc    al,0xda
  407979:	lods   eax,DWORD PTR ds:[esi]
  40797a:	push   eax
  40797b:	adc    al,0x45
  40797d:	pusha  
  40797e:	shl    DWORD PTR [esi+0x27ddf61b],cl
  407984:	outs   dx,DWORD PTR ds:[esi]
  407985:	mov    esi,0x548af4c7
  40798a:	pop    ebp
  40798b:	mov    eax,ds:0x2005f920
  407990:	loopne 0x407925
  407992:	pop    edx
  407993:	repnz pushf 
  407995:	mov    bl,dh
  407997:	jge    0x4079b0
  407999:	iret   
  40799a:	loope  0x4079e2
  40799c:	neg    DWORD PTR [edx]
  40799e:	xchg   esp,eax
  40799f:	and    al,0x6a
  4079a1:	adc    ebp,DWORD PTR [ebp-0x1d]
  4079a4:	les    eax,FWORD PTR [edx-0x605bb0e8]
  4079aa:	ins    BYTE PTR es:[edi],dx
  4079ab:	push   ss
  4079ac:	in     al,dx
  4079ad:	in     al,dx
  4079ae:	scas   eax,DWORD PTR es:[edi]
  4079af:	mov    eax,0xd6a8fb86
  4079b4:	sti    
  4079b5:	lods   ax,WORD PTR ds:[esi]
  4079b7:	push   edi
  4079b8:	loopne 0x407a00
  4079ba:	sbb    DWORD PTR [edx+0x19],0x1a
  4079be:	out    dx,al
  4079bf:	xchg   esi,eax
  4079c0:	adc    al,0x7
  4079c2:	mov    bl,0xd1
  4079c4:	test   ch,dh
  4079c6:	jge    0x407967
  4079c8:	jne    0x4079c1
  4079ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079cb:	sbb    al,0x64
  4079cd:	inc    edx
  4079ce:	stos   DWORD PTR es:[edi],eax
  4079cf:	sub    BYTE PTR [ebp-0x625006a5],dl
  4079d5:	inc    ebp
  4079d6:	shl    esi,1
  4079d8:	adc    eax,0xd77445a6
  4079dd:	pop    eax
  4079de:	xchg   BYTE PTR [edi+0x5a],bh
  4079e1:	out    0x77,al
  4079e3:	das    
  4079e4:	mov    eax,ds:0xdbbaf3f5
  4079e9:	fisubr WORD PTR [edx+0x7d3f83e9]
  4079ef:	pop    edx
  4079f0:	add    al,0xca
  4079f2:	adc    al,0x5b
  4079f4:	fwait
  4079f5:	lods   al,BYTE PTR ds:[esi]
  4079f6:	cld    
  4079f7:	xchg   edx,eax
  4079f8:	aaa    
  4079f9:	jmp    0xc776:0x8cc21982
  407a00:	idiv   dl
  407a02:	pushf  
  407a03:	adc    edx,DWORD PTR [ebx+0x3958214f]
  407a09:	and    eax,0x7d08dd64
  407a0e:	std    
  407a0f:	cmp    BYTE PTR [ebp-0x32e6f5f1],dh
  407a15:	bound  ebx,QWORD PTR [esi]
  407a17:	mov    bh,BYTE PTR [edx-0x49]
  407a1a:	push   ss
  407a1b:	sbb    al,0x5d
  407a1d:	xchg   DWORD PTR [ebx-0x56],edx
  407a20:	in     eax,dx
  407a21:	jecxz  0x4079b3
  407a23:	ins    DWORD PTR es:[edi],dx
  407a24:	pop    eax
  407a25:	data16 and al,0x36
  407a28:	push   cs
  407a29:	xchg   esi,eax
  407a2a:	aad    0x6c
  407a2c:	push   ss
  407a2d:	into   
  407a2e:	mov    ch,0xbf
  407a30:	jmp    0x407a66
  407a32:	push   0x26
  407a34:	xchg   ecx,eax
  407a35:	xchg   eax,edi
  407a37:	inc    ebx
  407a38:	inc    eax
  407a39:	out    0x3a,eax
  407a3b:	jg     0x4079fb
  407a3d:	into   
  407a3e:	push   eax
  407a3f:	enter  0x4653,0x10
  407a43:	aam    0x73
  407a45:	mov    DWORD PTR [ecx+esi*8+0x4664e837],0xc81e7ea0
  407a50:	scas   al,BYTE PTR es:[edi]
  407a51:	hlt    
  407a52:	mov    al,ds:0x39f39814
  407a57:	dec    esi
  407a58:	hlt    
  407a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a5a:	pusha  
  407a5b:	mov    bh,0xa6
  407a5d:	xor    DWORD PTR [eax],esp
  407a5f:	pushf  
  407a60:	push   ebp
  407a61:	sbb    BYTE PTR [ebx],ch
  407a63:	mov    ebx,DWORD PTR ds:0x26963bf9
  407a69:	sbb    edi,edx
  407a6b:	fdivr  DWORD PTR [ecx]
  407a6d:	aaa    
  407a6e:	ins    DWORD PTR es:[edi],dx
  407a6f:	imul   ebx,DWORD PTR [edx+0x12a24b45],0x35
  407a76:	outs   dx,BYTE PTR ds:[esi]
  407a77:	retf   
  407a78:	adc    esp,DWORD PTR [ebx+0x42a38d7]
  407a7e:	aas    
  407a7f:	ins    BYTE PTR es:[edi],dx
  407a80:	jns    0x407ab3
  407a82:	jmp    0xc8169100
  407a87:	(bad)  
  407a89:	xor    eax,0xc1b0edc5
  407a8e:	inc    ebp
  407a90:	dec    ebp
  407a91:	sbb    bl,0x70
  407a94:	out    0xe5,eax
  407a96:	dec    esi
  407a97:	pop    ebp
  407a98:	mov    BYTE PTR [edx],bl
  407a9a:	push   ebx
  407a9b:	test   edi,esp
  407a9d:	das    
  407a9e:	fnsave [edi]
  407aa0:	fsubp  st(6),st
  407aa2:	xchg   ecx,eax
  407aa3:	into   
  407aa4:	jae    0x407ac6
  407aa6:	jo     0x407b1b
  407aa8:	and    al,0x4e
  407aaa:	loop   0x407a42
  407aac:	mov    ch,0xb2
  407aae:	out    dx,eax
  407aaf:	lea    ecx,[ebx]
  407ab1:	dec    eax
  407ab2:	scas   al,BYTE PTR es:[edi]
  407ab3:	dec    edx
  407ab4:	xor    edi,DWORD PTR [edx-0x64aa0da2]
  407aba:	lea    edx,[ebx+0x30de9e26]
  407ac0:	(bad)  
  407ac1:	in     al,dx
  407ac2:	and    BYTE PTR [esi+edx*2],0xa0
  407ac6:	cmp    BYTE PTR [ecx+0x78],cl
  407ac9:	mov    edi,0x42774c19
  407ace:	sbb    al,0xcc
  407ad0:	pop    ds
  407ad1:	out    0x5b,al
  407ad3:	jno    0x407aa1
  407ad5:	lock mov al,ds:0xe2c3ae42
  407adb:	(bad)  
  407add:	inc    ebx
  407ade:	push   eax
  407adf:	or     al,BYTE PTR [ebp-0x21]
  407ae2:	mov    BYTE PTR [ebp-0xd],bh
  407ae5:	mov    ds:0xef22cf6e,al
  407aea:	retf   
  407aeb:	ficomp DWORD PTR [ecx+eax*2]
  407aee:	push   edx
  407aef:	in     eax,dx
  407af0:	retf   0xc201
  407af3:	add    BYTE PTR [esi+0x11c03946],0x4d
  407afa:	ins    BYTE PTR es:[edi],dx
  407afb:	std    
  407afc:	sbb    DWORD PTR [edi+0x1cd36954],edx
  407b02:	inc    edi
  407b03:	dec    ecx
  407b04:	pushf  
  407b05:	int    0x7a
  407b07:	test   al,0xb7
  407b09:	or     DWORD PTR [edi-0x5e],0xa6c39d42
  407b10:	add    di,WORD PTR [ebx-0x3d0d2adb]
  407b17:	cmp    DWORD PTR [ebx+0x1ab7800e],esi
  407b1d:	retf   0xb9a8
  407b20:	inc    edi
  407b21:	shr    DWORD PTR [edx+esi*4],cl
  407b24:	std    
  407b25:	cmp    eax,0xa0103dae
  407b2a:	cs sub al,0x66
  407b2d:	sbb    al,0x43
  407b2f:	rcr    BYTE PTR [esi],0xd6
  407b32:	loop   0x407b16
  407b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b35:	push   esi
  407b36:	test   BYTE PTR [edx+0x5f],cl
  407b39:	(bad)  
  407b3a:	lock adc DWORD PTR [ecx+esi*8-0x3b],0x4cbed681
  407b43:	cmc    
  407b44:	out    dx,al
  407b45:	jle    0x407b7d
  407b47:	and    al,0x79
  407b49:	imul   edi,DWORD PTR [edx],0x4216c151
  407b4f:	cmp    eax,0x6e1ecea5
  407b54:	mov    ah,ch
  407b56:	push   esp
  407b57:	outs   dx,DWORD PTR ds:[esi]
  407b58:	popf   
  407b59:	mov    WORD PTR [edi+0x29],?
  407b5c:	ret    0x6ac2
  407b5f:	pop    edx
  407b60:	sbb    eax,esi
  407b62:	sbb    BYTE PTR [ebx+0x71],bh
  407b65:	loop   0x407b10
  407b67:	mov    edx,0xb44b3e46
  407b6c:	sub    eax,0x72081a13
  407b71:	imul   ecx,DWORD PTR [ecx+0x4f],0xf3a77b63
  407b78:	add    ebp,ebx
  407b7a:	popf   
  407b7b:	fdivr  st(3),st
  407b7d:	sub    ecx,esp
  407b7f:	and    eax,0x22222db6
  407b84:	cdq    
  407b85:	or     BYTE PTR [edi],bh
  407b87:	inc    esi
  407b88:	jg     0x407b5c
  407b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b8b:	mov    ebx,0x50ea0455
  407b90:	push   esp
  407b91:	mov    al,ds:0x57263e53
  407b96:	das    
  407b97:	jmp    0xf691ee81
  407b9c:	into   
  407b9d:	pop    ebp
  407b9e:	push   es
  407b9f:	mov    ebx,0x115ff903
  407ba4:	popa   
  407ba5:	ror    BYTE PTR [edi+0x30],1
  407ba8:	jbe    0x407c1e
  407baa:	shl    BYTE PTR [ebx],0x9b
  407bad:	mov    ds:0xc6ea3f74,eax
  407bb2:	je     0x407bd1
  407bb4:	xlat   BYTE PTR ds:[ebx]
  407bb5:	inc    eax
  407bb6:	mov    dh,0xc2
  407bb8:	nop
  407bb9:	fs mov ?,ecx
  407bbc:	mul    BYTE PTR [esi]
  407bbe:	ins    DWORD PTR es:[edi],dx
  407bbf:	pop    esp
  407bc0:	(bad)  
  407bc1:	(bad)  
  407bc2:	aad    0x34
  407bc4:	jge    0x407c3a
  407bc6:	mov    ss,WORD PTR [esi+0x17]
  407bc9:	cmp    eax,DWORD PTR [esi]
  407bcb:	pop    eax
  407bcc:	xchg   edx,eax
  407bcd:	add    eax,0x8f332fc7
  407bd2:	and    DWORD PTR [ebx],esp
  407bd4:	retf   0x6470
  407bd7:	sub    eax,0xf7282897
  407bdc:	jge    0x407c08
  407bde:	cli    
  407bdf:	xchg   edi,eax
  407be0:	inc    esp
  407be1:	out    dx,eax
  407be2:	not    DWORD PTR [ebp-0x64065c7d]
  407be8:	mov    esi,0x5f721c56
  407bed:	cmp    DWORD PTR [edx-0x11],edx
  407bf0:	sti    
  407bf1:	arpl   WORD PTR [edi],sp
  407bf3:	pushf  
  407bf4:	mov    ds:0xdf4b4188,eax
  407bf9:	fsub   QWORD PTR [eax-0x574c9dd1]
  407bff:	or     bl,BYTE PTR [eax+0x4bc5908f]
  407c05:	sub    eax,0x849b25de
  407c0a:	push   esi
  407c0b:	dec    esi
  407c0c:	pop    eax
  407c0d:	pop    esp
  407c0e:	dec    edx
  407c0f:	aaa    
  407c10:	jmp    0x407c02
  407c12:	aas    
  407c13:	call   0xd094:0xfb361478
  407c1a:	push   esi
  407c1b:	js     0x407bae
  407c1d:	fistp  QWORD PTR [eax+0x477a36d4]
  407c23:	stos   BYTE PTR es:[edi],al
  407c24:	mov    BYTE PTR [esi+0x14],al
  407c27:	call   0xe9c1:0x87275104
  407c2e:	xor    DWORD PTR [esi+0x61],ebx
  407c31:	mov    edi,0xc749a0c4
  407c36:	js     0x407c21
  407c38:	call   0x260f982a
  407c3d:	adc    al,0xdd
  407c40:	xchg   BYTE PTR [ecx],cl
  407c42:	add    eax,0xc9e38e2c
  407c47:	xor    al,0x83
  407c49:	push   esp
  407c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c4b:	int    0x2b
  407c4d:	adc    al,0x35
  407c4f:	xchg   edx,eax
  407c50:	mov    ds:0x87879d98,al
  407c55:	mov    ?,WORD PTR [edx-0x70]
  407c58:	int    0x67
  407c5a:	das    
  407c5b:	dec    ecx
  407c5c:	lods   eax,DWORD PTR ds:[esi]
  407c5d:	add    DWORD PTR [edx+edx*2-0x23b9c47],0x662159fc
  407c68:	mov    ch,0xac
  407c6a:	sub    al,0xd4
  407c6c:	add    BYTE PTR [ebx],dl
  407c6e:	mov    esi,ds
  407c70:	scas   al,BYTE PTR es:[edi]
  407c71:	add    al,cl
  407c73:	(bad)  [edx+0x17]
  407c76:	les    ebx,FWORD PTR [edx]
  407c78:	mov    cl,0xd3
  407c7a:	adc    DWORD PTR [ecx+0x3dde90a8],0x5d
  407c81:	jle    0x407c57
  407c83:	aam    0xbc
  407c85:	pop    esi
  407c86:	jb     0x407c81
  407c88:	and    DWORD PTR [ebp+0x43c5718b],esp
  407c8e:	ins    DWORD PTR es:[edi],dx
  407c8f:	out    0xc0,al
  407c91:	jl     0x407d01
  407c93:	ja     0x407c17
  407c95:	push   DWORD PTR [edx-0x6dd60483]
  407c9b:	jbe    0x407c32
  407c9d:	scas   eax,DWORD PTR es:[edi]
  407c9e:	sbb    esi,DWORD PTR [eax]
  407ca0:	(bad)  
  407ca1:	jp     0x407d09
  407ca3:	and    al,0x27
  407ca5:	mov    ebp,0xed46e1a3
  407caa:	pop    ebp
  407cab:	lods   al,BYTE PTR ds:[esi]
  407cac:	ins    DWORD PTR es:[edi],dx
  407cad:	push   ebx
  407cae:	or     dh,bl
  407cb0:	dec    esi
  407cb1:	es enter 0xff2d,0x1f
  407cb6:	jge    0x407c4f
  407cb8:	or     ebp,DWORD PTR [esi-0x6c20a66b]
  407cbe:	rol    BYTE PTR [esi+0x458fe55c],0x18
  407cc5:	sub    BYTE PTR [esi-0x17],dh
  407cc8:	scas   al,BYTE PTR es:[edi]
  407cc9:	mov    dl,BYTE PTR [ebx+0x19]
  407ccc:	jle    0x407ca4
  407cce:	or     eax,0xaf603780
  407cd3:	ins    DWORD PTR es:[edi],dx
  407cd4:	mov    al,ds:0xf37ff680
  407cd9:	loopne 0x407ca0
  407cdb:	es pop esi
  407cdd:	mov    esi,0x57e20c39
  407ce2:	mov    ch,bl
  407ce4:	fiadd  DWORD PTR [eax-0x1c]
  407ce7:	idiv   DWORD PTR [ebx-0x4d]
  407cea:	mov    DWORD PTR ds:0x857a4c48,0x1264ed62
  407cf4:	push   0xcca618bb
  407cf9:	mov    DWORD PTR [edi-0xd],0x72baa6b1
  407d00:	sbb    DWORD PTR [edi-0x23],edx
  407d03:	bnd je 0x407d5a
  407d06:	ja     0x407d82
  407d08:	jb     0x407ca3
  407d0a:	enter  0x5f65,0x9b
  407d0e:	hlt    
  407d0f:	push   ebp
  407d10:	pop    ss
  407d11:	jmp    0xdc61:0x67464c
  407d18:	add    eax,0x5a543682
  407d1d:	xchg   edi,eax
  407d1e:	xor    BYTE PTR [edx-0x62],bh
  407d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d22:	jecxz  0x407ccc
  407d24:	nop
  407d25:	jns    0x407d0d
  407d27:	xor    al,dl
  407d29:	or     dh,BYTE PTR [esi+0x20693873]
  407d2f:	fstp   QWORD PTR [ebp-0x77]
  407d32:	(bad)  
  407d33:	scas   eax,DWORD PTR es:[edi]
  407d34:	div    DWORD PTR [edx+ecx*8-0x7]
  407d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d39:	and    DWORD PTR [esi+eiz*2+0x13],esp
  407d3d:	sar    DWORD PTR [esi+0x5d],cl
  407d40:	fisub  WORD PTR [ebp+0x6510c8fb]
  407d46:	push   0xffffffc1
  407d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d49:	pop    ss
  407d4a:	stos   DWORD PTR es:[edi],eax
  407d4b:	push   0xc97d48ce
  407d50:	cwde   
  407d51:	daa    
  407d52:	dec    esi
  407d53:	jmp    0x407d60
  407d55:	mov    ds:0xeecca43f,al
  407d5a:	add    esp,DWORD PTR [esp+ebp*4-0x78]
  407d5e:	push   ebx
  407d5f:	push   ebx
  407d60:	cmp    al,0xb8
  407d62:	dec    ebp
  407d63:	sub    al,0xb5
  407d65:	repz jp 0x407d88
  407d68:	and    al,0x22
  407d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d6b:	fsub   DWORD PTR [esi+ebx*2]
  407d6e:	out    dx,al
  407d6f:	mov    cl,0x81
  407d71:	push   esp
  407d72:	test   bl,dh
  407d74:	adc    edx,edx
  407d76:	cli    
  407d77:	mov    edx,edx
  407d79:	(bad)  
  407d7a:	jo     0x407d4a
  407d7c:	inc    edx
  407d7d:	dec    edi
  407d7e:	(bad)  
  407d7f:	fild   WORD PTR [edx+0x57]
  407d82:	ss pop ds
  407d84:	sub    DWORD PTR [ebx],esi
  407d86:	mov    dl,0x1d
  407d88:	and    esp,DWORD PTR [esi-0x5d]
  407d8b:	mov    edi,0xb3afef7
  407d90:	push   0x29
  407d92:	pop    edx
  407d93:	mov    edi,0x436da68e
  407d98:	lock xchg edx,eax
  407d9a:	mov    BYTE PTR [esi],bl
  407d9c:	ret    
  407d9d:	imul   DWORD PTR [ecx-0x26]
  407da0:	dec    DWORD PTR [esi]
  407da2:	push   es
  407da3:	pop    ebx
  407da4:	jle    0x407df0
  407da6:	pushf  
  407da7:	inc    esp
  407da8:	or     DWORD PTR [ecx-0x79],esp
  407dab:	(bad)  
  407dac:	and    eax,0x8c7b0de6
  407db1:	scas   al,BYTE PTR es:[edi]
  407db2:	mov    ebx,0xbdcb5599
  407db7:	test   DWORD PTR [ecx+0x47],ebp
  407dba:	shl    BYTE PTR [esi+0x170652da],0xb2
  407dc1:	jns    0x407dc8
  407dc3:	add    edi,DWORD PTR [edi+0x1c6bbd93]
  407dc9:	dec    ebx
  407dca:	test   DWORD PTR [ebp-0x34],0x428a6278
  407dd1:	sbb    al,0x63
  407dd3:	xchg   esp,eax
  407dd4:	xor    ah,dl
  407dd6:	arpl   sp,ax
  407dd8:	aas    
  407dd9:	stos   BYTE PTR es:[edi],al
  407dda:	aaa    
  407ddb:	push   ecx
  407ddc:	mov    ah,0xa4
  407dde:	pop    ss
  407ddf:	pop    esp
  407de0:	inc    ebp
  407de1:	daa    
  407de2:	in     al,dx
  407de3:	jle    0x407e46
  407de5:	mov    BYTE PTR [edi-0x3a1ca0a4],0x8b
  407dec:	xchg   ebx,eax
  407ded:	imul   bx,WORD PTR [edx],0x29
  407df1:	in     al,0x4b
  407df3:	lock and eax,0x887e7b7b
  407df9:	inc    esp
  407dfa:	jo     0x407e26
  407dfc:	dec    ecx
  407dfd:	lds    eax,FWORD PTR [ebx+edx*8]
  407e00:	mov    al,ds:0x8bce60cf
  407e05:	lds    esi,FWORD PTR [ebx-0x4d3e24f]
  407e0b:	(bad)  
  407e0c:	fdivr  DWORD PTR [ebx]
  407e0e:	popf   
  407e0f:	ror    DWORD PTR [ebp+0x45b44c17],1
  407e15:	or     esi,DWORD PTR [ecx]
  407e17:	addr16 mov ds:0x3534,eax
  407e1b:	xor    bh,BYTE PTR [esi]
  407e1d:	xor    al,0x20
  407e1f:	iret   
  407e20:	or     BYTE PTR [esi-0x8c27044],dh
  407e26:	jle    0x407e84
  407e28:	and    BYTE PTR [edi-0x255d34ae],ah
  407e2e:	or     cl,BYTE PTR [eax-0x500426ec]
  407e34:	hlt    
  407e35:	or     DWORD PTR [edi+0x7],ebx
  407e38:	stos   DWORD PTR es:[edi],eax
  407e39:	xor    ebp,ecx
  407e3b:	xor    BYTE PTR [ebp+0x73209fe7],dh
  407e41:	(bad)  
  407e42:	shr    BYTE PTR [ebx],1
  407e44:	loope  0x407e5e
  407e46:	sub    edx,ebp
  407e48:	xlat   BYTE PTR ds:[ebx]
  407e49:	dec    edx
  407e4a:	(bad)  
  407e4b:	test   WORD PTR [ecx],0xbba6
  407e50:	out    0xcc,al
  407e52:	jns    0x407df7
  407e54:	mov    bh,0xbc
  407e56:	repz pop ebx
  407e58:	(bad)  
  407e59:	call   0x87541a6b
  407e5e:	cmp    eax,0x7efdd19f
  407e63:	ror    edi,1
  407e65:	or     esp,ebx
  407e67:	in     eax,0xa6
  407e69:	jecxz  0x407ecc
  407e6b:	gs add ebp,ebp
  407e6e:	es inc edi
  407e71:	es scas al,BYTE PTR es:[edi]
  407e73:	aaa    
  407e74:	sub    DWORD PTR ds:[ebp+esi*4+0x6c24bdbc],ebx
  407e7c:	mov    eax,ds:0x66c32ad8
  407e81:	dec    edi
  407e83:	xchg   ebp,eax
  407e84:	mov    DWORD PTR [edx],0x56f62536
  407e8a:	mov    al,0xe0
  407e8c:	mov    DWORD PTR [ecx+0x40666128],ebp
  407e92:	out    0xe,al
  407e94:	xor    BYTE PTR [ecx-0xcd16b54],0xaf
  407e9b:	shr    BYTE PTR [ebp+eiz*4+0x73c7a8a6],cl
  407ea2:	(bad)  
  407ea3:	sub    esi,DWORD PTR [edi+esi*4]
  407ea6:	or     bh,BYTE PTR ds:[eax-0x3e38bff1]
  407ead:	call   DWORD PTR [edi+eax*1+0x78]
  407eb1:	rcr    DWORD PTR [esi],1
  407eb3:	out    0x6a,eax
  407eb5:	test   BYTE PTR [ecx],al
  407eb7:	(bad)
  407eba:	mov    ch,0xf7
  407ebc:	mov    esp,0xfea3888f
  407ec1:	in     al,dx
  407ec2:	out    dx,al
  407ec3:	pop    es
  407ec4:	cli    
  407ec5:	pop    ebp
  407ec6:	enter  0x41c5,0x92
  407eca:	ds sahf 
  407ecc:	aaa    
  407ecd:	sub    BYTE PTR [edx+0x34],bh
  407ed0:	pop    ss
  407ed1:	inc    eax
  407ed2:	icebp  
  407ed3:	cmp    bh,ch
  407ed5:	test   al,0x2e
  407ed7:	push   edx
  407ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eda:	mov    ebp,0x194ea045
  407edf:	xor    eax,0xfbdcf5a9
  407ee4:	mov    esi,ss
  407ee6:	and    ebx,DWORD PTR [ebx]
  407ee8:	and    dl,BYTE PTR [edx]
  407eea:	shr    DWORD PTR [ecx+0x582c9696],1
  407ef0:	and    eax,0xc42ffc5e
  407ef5:	adc    al,BYTE PTR [ebp+edx*8+0xf02f778]
  407efc:	or     bh,BYTE PTR [esi]
  407efe:	aas    
  407eff:	pop    ebx
  407f00:	retf   0x69e4
  407f03:	mov    eax,0xbf109a8e
  407f08:	jnp    0x407f4a
  407f0a:	loop   0x407f76
  407f0c:	arpl   ax,bx
  407f0e:	pop    esp
  407f0f:	jno    0x407ea7
  407f11:	mov    dl,0xd4
  407f13:	cvttps2pi mm5,QWORD PTR [ebp-0x26]
  407f17:	aad    0x4
  407f19:	jb     0x407eae
  407f1b:	mov    dh,0xff
  407f1d:	sbb    BYTE PTR [esi-0x101e010d],cl
  407f23:	loopne 0x407f77
  407f25:	mov    al,0x2d
  407f27:	pop    ds
  407f28:	fisubr WORD PTR [edi+edx*8]
  407f2b:	mov    dh,0x8f
  407f2d:	std    
  407f2e:	imul   esi,DWORD PTR [edx+edi*8],0x42
  407f32:	sub    eax,0x4524e3b0
  407f37:	jmp    0x659c:0x668f4851
  407f3e:	sti    
  407f3f:	mov    ch,al
  407f41:	setne  BYTE PTR [ebx+ebp*2+0x6a2a724f]
  407f49:	xchg   DWORD PTR ds:0xe33bd9e6,edi
  407f4f:	adc    BYTE PTR [edi+0x4f76e0c],dh
  407f55:	cmp    eax,0x2b92564d
  407f5a:	inc    ebp
  407f5b:	dec    esi
  407f5c:	xor    edx,DWORD PTR [edi+ebx*4+0xb]
  407f60:	mov    ds:0xe888c82c,al
  407f65:	out    dx,eax
  407f66:	push   es
  407f67:	imul   ebx,DWORD PTR [ebx-0x13]
  407f6b:	adc    eax,0x28f68a4a
  407f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f71:	xlat   BYTE PTR ds:[ebx]
  407f72:	pop    edx
  407f73:	pop    edx
  407f74:	push   esp
  407f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f76:	jnp    0x407f7c
  407f78:	adc    al,0xd8
  407f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f7b:	(bad)  
  407f7c:	ins    DWORD PTR es:[edi],dx
  407f7d:	mov    WORD PTR [edx],?
  407f7f:	mov    bl,0x20
  407f81:	jae    0x407f2c
  407f83:	sub    BYTE PTR [esi],al
  407f85:	pop    ecx
  407f86:	xor    BYTE PTR [edx],0x5b
  407f89:	xlat   BYTE PTR ds:[ebx]
  407f8a:	add    eax,ecx
  407f8c:	gs hlt 
  407f8e:	mov    ds:0x6669f63a,eax
  407f93:	aam    0x4
  407f95:	sbb    eax,0x5ef8ea9e
  407f9b:	dec    esi
  407f9c:	pushf  
  407f9d:	jl     0x407fb8
  407f9f:	push   esi
  407fa0:	jp     0x408014
  407fa2:	jg     0x407fbc
  407fa4:	in     eax,0xad
  407fa6:	es mov al,0x35
  407fa9:	inc    edi
  407faa:	int3   
  407fab:	pushf  
  407fac:	cmp    bh,al
  407fae:	stc    
  407faf:	jnp    0x407fc5
  407fb1:	pushf  
  407fb2:	std    
  407fb3:	aam    0x73
  407fb5:	cdq    
  407fb6:	ins    BYTE PTR es:[edi],dx
  407fb7:	xor    BYTE PTR [edi],bh
  407fb9:	sti    
  407fba:	shl    ebp,0x55
  407fbd:	pushf  
  407fbe:	jno    0x408013
  407fc0:	jae    0x407fc4
  407fc2:	mov    DWORD PTR [edi],0xe25aec76
  407fc8:	popa   
  407fc9:	and    DWORD PTR [di+0x1a],ebp
  407fcd:	jecxz  0x407f65
  407fcf:	in     eax,dx
  407fd0:	xor    eax,0xad7c9e0d
  407fd5:	retf   
  407fd6:	cmp    DWORD PTR [ebx-0x5d4c3a59],0xffffffab
  407fdd:	gs dec esp
  407fdf:	mov    edx,0xf9b4838e
  407fe4:	mov    cl,0x11
  407fe6:	jbe    0x407f74
  407fe8:	ins    BYTE PTR es:[edi],dx
  407fe9:	xor    ch,ch
  407feb:	rcl    DWORD PTR [esp+ecx*4-0x7d],0x97
  407ff0:	cmp    al,0x95
  407ff2:	sar    BYTE PTR [edi+0x4dfcdb5a],0x5c
  407ff9:	and    esi,ebx
  407ffb:	call   0x169e:0x6d549117
  408002:	jb     0x407fdb
  408004:	add    BYTE PTR [ecx-0x9],bl
  408007:	sahf   
  408008:	pop    ebx
  408009:	stos   DWORD PTR es:[edi],eax
  40800a:	(bad)  
  40800b:	in     eax,dx
  40800c:	and    BYTE PTR [edx+0x677c8231],al
  408012:	mov    cl,BYTE PTR [eax]
  408014:	mov    dl,0x47
  408016:	adc    DWORD PTR [ecx-0x6de03ea8],0xffffffc9
  40801d:	pusha  
  40801e:	out    0xea,eax
  408020:	call   0xbe87:0xd1be9c6
  408027:	sub    BYTE PTR [ebx+0x70],dh
  40802a:	mov    edx,0x74c80830
  40802f:	push   ds
  408030:	cmp    eax,0xae778a31
  408035:	pushf  
  408036:	pop    ss
  408037:	test   al,0xb4
  408039:	js     0x408017
  40803b:	dec    ebp
  40803c:	push   ds
  40803d:	mov    ds,eax
  40803f:	es addr16 jno 0x408024
  408043:	inc    esp
  408044:	fisubr DWORD PTR [eax+eiz*1-0x4b]
  408048:	ins    BYTE PTR es:[edi],dx
  408049:	or     edi,DWORD PTR [eax]
  40804b:	outs   dx,BYTE PTR ds:[esi]
  40804c:	jp     0x408056
  40804e:	push   ss
  40804f:	xlat   BYTE PTR ds:[ebx]
  408050:	jae    0x408089
  408052:	jmp    0x4080b9
  408054:	in     al,dx
  408055:	jns    0x40802a
  408057:	xchg   edx,eax
  408058:	ror    bl,cl
  40805a:	and    DWORD PTR [ebx+0x42],ebx
  40805d:	inc    ebx
  40805e:	iret   
  40805f:	jg     0x4080a0
  408061:	add    ah,dl
  408063:	addr16 push ecx
  408065:	jo     0x4080de
  408067:	fucomp st(7)
  408069:	fs cdq 
  40806b:	sahf   
  40806c:	fadd   st,st(7)
  40806e:	mov    al,BYTE PTR [eax+0x566358d6]
  408074:	iret   
  408075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408076:	loope  0x40805c
  408078:	xlat   BYTE PTR ds:[ebx]
  408079:	int    0x50
  40807b:	pusha  
  40807c:	mov    ebp,0x26a0cc17
  408081:	dec    ebx
  408082:	add    DWORD PTR [eax-0x57],ebx
  408085:	inc    ebx
  408086:	add    ch,BYTE PTR [eax-0x72]
  408089:	mov    esp,0x5c7715d9
  40808e:	cmc    
  40808f:	out    dx,al
  408090:	loope  0x40802c
  408092:	mov    bl,0xeb
  408094:	sbb    BYTE PTR [ebp+0x1d560450],cl
  40809a:	aas    
  40809b:	or     cl,BYTE PTR [ecx]
  40809d:	ror    edi,0xbb
  4080a0:	ins    DWORD PTR es:[edi],dx
  4080a1:	ss aas 
  4080a3:	xchg   edi,eax
  4080a4:	mov    edx,0x98533903
  4080a9:	int3   
  4080aa:	mov    ds:0xa4a87b12,al
  4080af:	xchg   esi,eax
  4080b0:	dec    esp
  4080b1:	sbb    eax,0x16e0f8dc
  4080b6:	cmp    eax,DWORD PTR [edx+esi*4]
  4080b9:	and    edx,DWORD PTR [ecx]
  4080bb:	or     BYTE PTR [ebx-0xd],bh
  4080be:	push   ebp
  4080bf:	(bad)  
  4080c0:	out    0x58,al
  4080c2:	lds    esp,FWORD PTR [eax+0x5d]
  4080c5:	add    eax,0x2b0571a
  4080ca:	and    al,0xb7
  4080cc:	repz add BYTE PTR [esi+0x23],bh
  4080d0:	jbe    0x4080cb
  4080d2:	test   dl,dh
  4080d4:	jl     0x408068
  4080d6:	xchg   esp,eax
  4080d7:	add    BYTE PTR [ebx-0x52d64464],dl
  4080dd:	ficomp WORD PTR [edi+0x5c303510]
  4080e3:	xor    DWORD PTR [esi+0x3fcdc866],esi
  4080e9:	push   esp
  4080ea:	jmp    0x408076
  4080ec:	cdq    
  4080ed:	hlt    
  4080ee:	imul   esi,DWORD PTR [eax],0x4c304fd3
  4080f4:	cmp    cl,ch
  4080f6:	or     al,0xee
  4080f8:	mov    dh,0xb1
  4080fa:	scas   al,BYTE PTR es:[edi]
  4080fb:	ja     0x40813b
  4080fd:	imul   edx,DWORD PTR [ebx+0x17b8fe9b],0xeaa3589c
  408107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408108:	and    al,0x84
  40810a:	loope  0x4080a4
  40810c:	mov    ?,WORD PTR [esi]
  40810e:	push   esp
  40810f:	lahf   
  408110:	add    DWORD PTR [ecx+0x6a],ebp
  408113:	xor    BYTE PTR [ecx+esi*8+0x7c],0x25
  408118:	and    BYTE PTR [edi],bh
  40811a:	mov    edi,0x51c54db3
  40811f:	push   ecx
  408120:	push   ebp
  408121:	popa   
  408122:	mov    bh,0x59
  408124:	inc    edi
  408125:	push   es
  408126:	lahf   
  408127:	jmp    0x93ac3592
  40812c:	pop    es
  40812d:	mov    dh,0x25
  40812f:	imul   eax,DWORD PTR [edx],0x778ff535
  408135:	inc    eax
  408136:	add    eax,ebp
  408138:	cmc    
  408139:	mov    ecx,0x7c3a3339
  40813e:	test   BYTE PTR [ecx+esi*8-0x28],bl
  408142:	(bad)  
  408143:	out    0x12,al
  408145:	xchg   DWORD PTR [edi-0x45a419de],edx
  40814b:	fstp   DWORD PTR [ebx]
  40814d:	rcl    BYTE PTR [ebx-0x2d0bdbdf],0x81
  408154:	cdq    
  408155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408156:	mov    esi,0x782c4412
  40815b:	inc    edx
  40815c:	fwait
  40815d:	mov    eax,0xd666044f
  408162:	arpl   ax,bp
  408164:	ror    DWORD PTR [ecx],1
  408166:	cmp    dl,BYTE PTR [ebp+0x6b]
  408169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40816a:	sbb    DWORD PTR [eax+0x65],0xb
  40816e:	push   ds
  40816f:	add    ecx,DWORD PTR ds:0x2e4e12d1
  408175:	add    al,0xc0
  408177:	pop    esp
  408178:	sbb    al,0x10
  40817a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40817b:	push   edx
  40817c:	les    ebp,FWORD PTR [esi]
  40817e:	mov    ebp,0x10352d3b
  408183:	shr    esi,0x46
  408186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408187:	pushf  
  408188:	inc    eax
  408189:	mov    ds:0x70de4e72,al
  40818e:	jge    0x40820d
  408190:	repnz and BYTE PTR [eax-0x63],ah
  408194:	fdiv   QWORD PTR [ebx+0x843aa75]
  40819a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40819b:	xchg   ebx,eax
  40819c:	push   ebp
  40819d:	and    DWORD PTR [esi],ebp
  40819f:	xchg   DWORD PTR [esi+0x71],edx
  4081a2:	mov    eax,0x8b8c8194
  4081a7:	ret    
  4081a8:	push   ecx
  4081a9:	push   0xffffffbe
  4081ab:	push   0x9f99b61
  4081b0:	or     ecx,DWORD PTR [eax-0x32]
  4081b3:	sub    al,0xc
  4081b5:	add    eax,0xc55a99fa
  4081ba:	xor    ebp,edx
  4081bc:	lock sub DWORD PTR [esi+eiz*8+0x79a24ccb],0x7e55864d
  4081c8:	and    al,0xd0
  4081ca:	or     al,0x88
  4081cc:	jb     0x4081ed
  4081ce:	jno    0x4081e2
  4081d0:	call   0x1288:0xdadc742a
  4081d7:	inc    esi
  4081d8:	lock mov ds:0xfae234e3,eax
  4081de:	mov    esp,0xb6331387
  4081e3:	jnp    0x408178
  4081e5:	call   0x4701fe9
  4081ea:	mov    bh,BYTE PTR [edi+esi*1-0x1]
  4081ee:	push   cs
  4081ef:	js     0x408231
  4081f1:	jecxz  0x408237
  4081f3:	mov    ebx,0x80ccbb84
  4081f8:	lods   al,BYTE PTR ds:[esi]
  4081f9:	pop    ecx
  4081fa:	fwait
  4081fb:	jns    0x40823b
  4081fd:	jl     0x40819a
  4081ff:	jge    0x4081f2
  408201:	add    eax,0xe883a976
  408206:	and    eax,0x53c5d3d3
  40820b:	inc    edx
  40820c:	stc    
  40820d:	xor    BYTE PTR [eax-0x44],al
  408210:	sub    ah,BYTE PTR [ebx-0x606b1f14]
  408216:	dec    edi
  408217:	jae    0x40824c
  408219:	retf   0xceb1
  40821c:	rol    BYTE PTR [ecx],1
  40821e:	mov    ah,0x18
  408220:	mov    dl,0x1d
  408222:	and    DWORD PTR [edi+0x206f2158],ebp
  408228:	xor    ebp,DWORD PTR [ebx]
  40822a:	push   esp
  40822b:	rcr    eax,cl
  40822d:	pop    ebx
  40822e:	ror    DWORD PTR [ebx-0x5e219eb1],1
  408234:	and    BYTE PTR [edx+eax*8+0x79290db2],dl
  40823b:	ret    0xabe8
  40823e:	mov    ebp,0x4014818b
  408243:	jo     0x4082ac
  408245:	pop    edi
  408246:	jns    0x4081cc
  408248:	loop   0x4081f5
  40824a:	mov    cl,0x4c
  40824c:	inc    ebx
  40824d:	add    BYTE PTR [ebp+0xa],ch
  408250:	pop    esi
  408251:	std    
  408252:	fsubr  QWORD PTR [edx]
  408254:	cdq    
  408255:	inc    ebx
  408256:	mov    esi,0x16bd764b
  40825b:	add    DWORD PTR [eax+0x6],ebp
  40825e:	call   0xcc4d:0xe10428c5
  408265:	add    ebx,esi
  408267:	or     eax,0x1cf41015
  40826c:	inc    eax
  40826d:	xor    BYTE PTR [ecx-0x7d],dh
  408270:	dec    ecx
  408271:	addr16 jmp 0xfbb9c10e
  408277:	icebp  
  408278:	fst    QWORD PTR [edx+0x3d]
  40827b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40827c:	fcom   DWORD PTR [ecx-0x35]
  40827f:	imul   BYTE PTR [ecx-0x78af0496]
  408285:	sub    al,0x1
  408287:	jl     0x408222
  408289:	add    ebx,DWORD PTR [esi-0x14624425]
  40828f:	frstor [ebx+0x7a]
  408292:	fisubr WORD PTR [eax+edi*4-0x2ecbf701]
  408299:	in     eax,dx
  40829a:	lods   al,BYTE PTR ds:[esi]
  40829b:	fwait
  40829c:	dec    edi
  40829d:	mov    fs,WORD PTR [eax+0xc3088c4]
  4082a3:	dec    ebx
  4082a4:	gs adc eax,0x65932550
  4082aa:	cmp    al,0x4a
  4082ac:	push   ebx
  4082ad:	bound  esp,QWORD PTR [edx]
  4082af:	out    0xb5,al
  4082b1:	scas   eax,DWORD PTR es:[edi]
  4082b2:	stos   BYTE PTR es:[edi],al
  4082b3:	sub    BYTE PTR [edx+0x45ea41f4],dl
  4082b9:	test   BYTE PTR [edx-0x523de5d6],0xe4
  4082c0:	repnz enter 0xc9f6,0x4a
  4082c5:	push   0xffffffb5
  4082c7:	mov    DWORD PTR [eax+edx*4],0x412a5896
  4082ce:	scas   eax,DWORD PTR es:[edi]
  4082cf:	jl     0x40825e
  4082d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082d2:	hlt    
  4082d3:	out    dx,eax
  4082d4:	sar    BYTE PTR [ebx+0x74],0xe9
  4082d8:	xor    ebp,DWORD PTR [ebx]
  4082da:	test   BYTE PTR [esi*1+0x64bc0a75],dl
  4082e1:	ficom  WORD PTR [ebp+edi*2-0x4e]
  4082e5:	std    
  4082e6:	in     al,0xd4
  4082e8:	(bad)  
  4082e9:	push   ecx
  4082ea:	retf   0x1a50
  4082ed:	pop    ss
  4082ee:	repnz lods al,BYTE PTR ds:[esi]
  4082f0:	ret    0x8af8
  4082f3:	jo     0x408345
  4082f5:	inc    edi
  4082f6:	xchg   ecx,eax
  4082f7:	xor    al,0xb8
  4082f9:	lea    ecx,[ecx+edi*2+0x1]
  4082fd:	(bad)  [ecx-0xd]
  408300:	or     DWORD PTR [ebp+0x6f971322],0x24f8a9e5
  40830a:	push   esi
  40830b:	inc    esp
  40830c:	addr16 mov ch,0xb6
  40830f:	ja     0x4082bc
  408311:	or     DWORD PTR [edi],esi
  408313:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  408315:	cmp    BYTE PTR [edi],0x55
  408318:	(bad)  
  408319:	out    dx,eax
  40831a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40831b:	cmp    edi,ecx
  40831d:	and    edx,DWORD PTR [eax-0x30]
  408320:	mov    cl,0x6a
  408322:	dec    esp
  408323:	push   ds
  408324:	jne    0x408383
  408326:	and    eax,0x441862ac
  40832b:	jg     0x408333
  40832d:	inc    edi
  40832e:	sbb    BYTE PTR [edx+0x2828c343],bl
  408334:	dec    ecx
  408335:	outs   dx,DWORD PTR ds:[esi]
  408336:	or     eax,DWORD PTR [edx+0x78]
  408339:	push   0xffffffe7
  40833b:	fbld   TBYTE PTR [ebx+0x1c]
  40833e:	jp     0x408339
  408340:	and    ebx,ebx
  408342:	xchg   BYTE PTR [edx],ch
  408344:	arpl   WORD PTR [ebp-0x53],sp
  408347:	ins    DWORD PTR es:[edi],dx
  408348:	(bad)  
  40834a:	ror    DWORD PTR [ebp-0x27bc9c83],cl
  408350:	mov    ebx,0x8080db3b
  408355:	pusha  
  408356:	mul    BYTE PTR [edi]
  408358:	lea    esp,[eax-0x58]
  40835b:	mov    ah,BYTE PTR [edi]
  40835d:	repz loop 0x40838d
  408360:	cmp    dl,BYTE PTR [esi]
  408362:	rcl    DWORD PTR [esi],0x5
  408365:	cmp    dl,BYTE PTR [ebx+0x54393421]
  40836b:	pop    ecx
  40836c:	iret   
  40836d:	out    0xde,eax
  40836f:	dec    ebp
  408370:	xchg   esp,eax
  408371:	fs xor al,0x32
  408374:	mov    gs,WORD PTR ds:0x1fe635c
  40837a:	mov    esp,0x744d7965
  40837f:	dec    eax
  408380:	add    BYTE PTR [edx-0x7bf002f8],dh
  408386:	adc    DWORD PTR [ebx+0x2a],esi
  408389:	scas   eax,DWORD PTR es:[edi]
  40838a:	pop    edi
  40838b:	shl    esi,0xbf
  40838e:	or     edx,esp
  408390:	rcl    dh,1
  408392:	fiadd  DWORD PTR [ecx]
  408394:	(bad)  
  408395:	jb     0x4083f2
  408397:	dec    edx
  408398:	xchg   esp,eax
  408399:	or     ebp,DWORD PTR [eax+0x24]
  40839c:	stos   BYTE PTR es:[edi],al
  40839d:	pop    edx
  40839e:	push   eax
  40839f:	ss inc esi
  4083a1:	push   0x2f
  4083a3:	not    DWORD PTR ds:0xaeee7eca
  4083a9:	out    dx,eax
  4083aa:	add    eax,0xd897e872
  4083af:	jns    0x408367
  4083b1:	mov    eax,0x52361b50
  4083b6:	dec    esi
  4083b7:	loope  0x4083fe
  4083b9:	(bad)  
  4083ba:	push   edi
  4083bb:	sbb    BYTE PTR [ebp+0x4610d673],bh
  4083c1:	jmp    0xdcb98fb5
  4083c6:	out    dx,eax
  4083c7:	or     al,0x2e
  4083c9:	ficom  DWORD PTR [edi+0x274a7253]
  4083cf:	adc    esi,0xaa86b041
  4083d5:	inc    ecx
  4083d6:	loope  0x40839b
  4083d8:	push   edx
  4083d9:	pop    ss
  4083da:	adc    DWORD PTR [eax+0x557cb239],esp
  4083e0:	dec    DWORD PTR [ebx+0x3b]
  4083e3:	mov    ds:0x4ec74b2b,eax
  4083e8:	call   0xdf4a49df
  4083ed:	es sbb al,dl
  4083f0:	pop    ds
  4083f1:	ss mov bh,0xa8
  4083f4:	fimul  DWORD PTR [esi]
  4083f6:	lds    edx,FWORD PTR ds:0xdfb422d9
  4083fc:	jmp    0x22e4:0x2ad46bed
  408403:	mov    eax,ds:0x9b3879c9
  408408:	call   0x2bd0:0x6365c123
  40840f:	jl     0x408483
  408411:	(bad)  
  408412:	push   ebx
  408413:	aas    
  408414:	ror    DWORD PTR [edx],1
  408416:	sbb    BYTE PTR [esp+eax*4],cl
  408419:	repnz stos BYTE PTR es:[edi],al
  40841b:	push   eax
  40841c:	sbb    al,al
  40841e:	ds adc eax,0xd5eea60e
  408424:	sub    al,0xa1
  408426:	pusha  
  408427:	test   al,0xaf
  408429:	pop    edx
  40842a:	sar    DWORD PTR [edx-0x16c56b12],1
  408430:	sti    
  408431:	xor    esi,DWORD PTR [ebp+0xa]
  408434:	js     0x40841a
  408436:	pop    es
  408437:	jbe    0x408483
  408439:	(bad)  
  40843a:	les    ebp,FWORD PTR [ebx-0x7e]
  40843d:	dec    esp
  40843e:	cli    
  40843f:	xor    al,0xa2
  408441:	cli    
  408442:	repnz call 0x191e:0xde921cd0
  40844a:	cmc    
  40844b:	(bad)  
  40844c:	stc    
  40844d:	xchg   ecx,eax
  40844e:	pop    esi
  40844f:	lock mov esp,0x969f5b2d
  408455:	(bad)  
  408456:	imul   ebp,DWORD PTR [ebp-0x47],0xa64f691d
  40845d:	pop    edx
  40845e:	mov    es,WORD PTR [edx+0x9]
  408461:	out    0xb8,al
  408463:	gs stos BYTE PTR es:[edi],al
  408465:	in     eax,0xe2
  408467:	das    
  408468:	pop    es
  408469:	jo     0x4084ca
  40846b:	lds    ecx,FWORD PTR ds:0xc1fe7556
  408471:	out    dx,al
  408472:	xchg   esi,eax
  408473:	lahf   
  408474:	fcomp  QWORD PTR [edi-0xd71f067]
  40847a:	jmp    0x40841d
  40847c:	inc    ebp
  40847d:	or     BYTE PTR [esi+0x2743ad44],bl
  408483:	lods   eax,DWORD PTR ds:[esi]
  408484:	push   cs
  408485:	mov    eax,0x2b7ffc22
  40848a:	and    eax,edi
  40848c:	mov    ds:0xfd4543ef,al
  408491:	in     eax,0xa0
  408493:	std    
  408494:	mov    eax,?
  408496:	or     bl,bl
  408498:	fdivp  st(2),st
  40849a:	mov    dh,0x83
  40849c:	cmp    bh,BYTE PTR [edi-0x39]
  40849f:	fst    DWORD PTR [ebx]
  4084a1:	mov    bh,0x54
  4084a3:	out    dx,al
  4084a4:	aam    0xe5
  4084a6:	out    dx,eax
  4084a7:	xchg   ecx,eax
  4084a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a9:	cli    
  4084aa:	adc    esi,DWORD PTR [ebx+ecx*1-0x6]
  4084ae:	pusha  
  4084af:	xchg   edx,eax
  4084b0:	in     al,dx
  4084b1:	in     eax,0xb1
  4084b3:	hlt    
  4084b4:	and    ah,bl
  4084b6:	fsubr  st,st(3)
  4084b8:	mov    al,ds:0xa5ae956f
  4084bd:	enter  0xf7b0,0xf1
  4084c1:	and    DWORD PTR [ecx-0x42de3daa],edi
  4084c7:	cmp    eax,0xabcf8b56
  4084cc:	jo     0x408475
  4084ce:	das    
  4084cf:	cmp    al,0xeb
  4084d1:	dec    esp
  4084d2:	add    ebp,DWORD PTR [ebp+0x7f]
  4084d5:	xbegin 0xe7349384
  4084db:	int    0x2
  4084dd:	pop    edx
  4084de:	lock fsub st,st(2)
  4084e1:	push   ss
  4084e2:	retf   0xb9da
  4084e5:	int3   
  4084e6:	std    
  4084e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e8:	outs   dx,BYTE PTR ds:[esi]
  4084e9:	sub    eax,0xdb7391e7
  4084ee:	jns    0x4084c6
  4084f0:	call   0xf6a6cc3e
  4084f5:	ret    0x2c6
  4084f8:	dec    ebp
  4084f9:	mov    eax,ds:0x331c5d30
  4084fe:	nop
  4084ff:	mov    dh,0xc7
  408501:	mov    edx,0x6ad8cc40
  408506:	in     eax,dx
  408507:	test   DWORD PTR [ecx+0xf11d415],ecx
  40850d:	sbb    DWORD PTR [edx-0x773f7c0c],edx
  408513:	xlat   BYTE PTR ds:[ebx]
  408514:	jl     0x4084a9
  408516:	adc    edi,esi
  408518:	leave  
  408519:	imul   eax,esi,0x2b295e69
  40851f:	jmp    DWORD PTR [eax-0x3f80792c]
  408525:	jo     0x4084a9
  408527:	mov    al,0x54
  408529:	loop   0x4085a4
  40852b:	mov    al,ch
  40852d:	and    ebx,ebp
  40852f:	fmulp  st(2),st
  408531:	add    DWORD PTR [edx-0x2e],esp
  408534:	frstor [edi+0x6a1ca8a6]
  40853a:	shl    BYTE PTR [edx],cl
  40853c:	mov    edi,0x2a008db0
  408541:	sub    al,0x95
  408543:	outs   dx,BYTE PTR ds:[esi]
  408544:	loopne 0x408595
  408546:	(bad)  
  408548:	aaa    
  408549:	aad    0x9e
  40854b:	cmc    
  40854c:	or     eax,0x7a0167a1
  408551:	jns    0x4085c4
  408553:	sar    DWORD PTR [ebx+0x5d46c66f],0xbb
  40855a:	fwait
  40855b:	dec    eax
  40855c:	in     al,dx
  40855d:	mov    al,ds:0x8807cece
  408562:	imul   ebp,DWORD PTR [edi+0x12],0x1e
  408566:	cmp    ah,BYTE PTR [edi+0xc]
  408569:	mov    eax,DWORD PTR [eax+edi*8-0x2f9929a8]
  408570:	push   ebp
  408571:	push   cs
  408572:	bound  esp,QWORD PTR [eax]
  408574:	ins    BYTE PTR es:[edi],dx
  408575:	xchg   ebx,eax
  408576:	ins    DWORD PTR es:[edi],dx
  408577:	push   cs
  408578:	out    dx,eax
  408579:	sbb    dl,dh
  40857b:	popf   
  40857c:	outs   dx,DWORD PTR ds:[esi]
  40857d:	fbld   TBYTE PTR ds:0xd4eb8a23
  408583:	jnp    0x408573
  408585:	cmp    BYTE PTR [ebx],cl
  408587:	(bad)  
  408589:	mov    ebx,0xf03568bf
  40858e:	dec    ebp
  40858f:	ins    BYTE PTR es:[edi],dx
  408590:	push   0x2d9b1360
  408595:	mov    esi,0xea651b19
  40859a:	sub    ch,BYTE PTR [esi]
  40859c:	sbb    DWORD PTR [edi-0x3b2ba27b],esi
  4085a2:	ficomp WORD PTR [ebp-0x2aed3f7b]
  4085a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085a9:	jne    0x408629
  4085ab:	add    eax,0x1097653a
  4085b0:	add    dh,BYTE PTR [edi]
  4085b2:	dec    esp
  4085b3:	jl     0x40858b
  4085b5:	mov    ch,0xaf
  4085b7:	cmp    edx,esp
  4085b9:	sub    BYTE PTR [edi],ah
  4085bb:	(bad)  
  4085bc:	in     eax,dx
  4085bd:	gs push ebx
  4085bf:	jbe    0x40860f
  4085c1:	fs ins DWORD PTR es:[edi],dx
  4085c3:	(bad)  
  4085c4:	push   eax
  4085c5:	ja     0x40856d
  4085c7:	test   al,0x8a
  4085c9:	sub    al,0x7b
  4085cb:	into   
  4085cc:	and    BYTE PTR [eax+0x29],0x33
  4085d0:	push   ebp
  4085d1:	(bad)  
  4085d2:	mov    al,ds:0xa4e7d252
  4085d7:	hlt    
  4085d8:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  4085df:	mov    eax,DWORD PTR [ebp-0x4]
  4085e2:	jmp    0x40a991
  4085e7:	sbb    eax,0x84488431
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0x4a
  4085f4:	push   edx
  4085f5:	mov    cl,0x8a
  4085f7:	jns    0x408612
  4085f9:	add    DWORD PTR [ebx-0x7c7c9f0f],0x3a
  408600:	nop
  408601:	bnd jnp 0x408613
  408604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408605:	imul   ecx,DWORD PTR [edi],0xce0a0754
  40860b:	mov    cl,0xd0
  40860d:	je     0x4085b8
  40860f:	stc    
  408610:	mov    WORD PTR [ebx],ds
  408612:	loopne 0x408676
  408614:	scas   eax,DWORD PTR es:[edi]
  408615:	and    eax,0xe1655f02
  40861a:	pop    ecx
  40861b:	stos   BYTE PTR es:[edi],al
  40861c:	ins    BYTE PTR es:[edi],dx
  40861d:	test   DWORD PTR [edx],esp
  40861f:	push   esi
  408620:	dec    BYTE PTR [ecx+0x7f]
  408623:	rdpru  
  408626:	sbb    ebx,DWORD PTR [ebx+0x79]
  408629:	mov    eax,DWORD PTR [ebp-0x197979ec]
  40862f:	lods   eax,DWORD PTR ds:[esi]
  408630:	sbb    edi,eax
  408632:	jge    0x4086a0
  408634:	xchg   ebp,eax
  408635:	sub    eax,0x23b3c805
  40863a:	out    0xd1,al
  40863c:	inc    edx
  40863d:	xchg   esp,eax
  40863e:	push   ds
  40863f:	sub    eax,0xe982506b
  408644:	std    
  408645:	in     al,0x5a
  408647:	mov    edi,0xef1bac44
  40864c:	dec    esi
  40864d:	pop    eax
  40864e:	mov    esp,0xd8d56715
  408653:	cld    
  408654:	test   DWORD PTR [ecx-0x4d1cd3c0],0x924946b9
  40865e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40865f:	inc    ebp
  408660:	push   esi
  408661:	lods   eax,DWORD PTR ds:[esi]
  408662:	and    DWORD PTR [eax-0x4091ded5],esp
  408668:	or     DWORD PTR [ebx-0x3b],esp
  40866b:	(bad)  
  40866c:	lods   eax,DWORD PTR ds:[esi]
  40866d:	push   ebx
  40866e:	or     ch,BYTE PTR [esi+edi*1-0xfec8b22]
  408675:	fild   DWORD PTR [esi]
  408677:	aam    0x3b
  408679:	(bad)  
  40867a:	mov    esp,0x4136f340
  40867f:	(bad)  
  408680:	xlat   BYTE PTR ds:[ebx]
  408681:	lahf   
  408682:	sbb    esp,DWORD PTR [eax-0x6ac86ff7]
  408688:	add    al,0x6
  40868a:	pop    ds
  40868b:	ins    BYTE PTR es:[edi],dx
  40868c:	out    dx,al
  40868d:	fcomp  QWORD PTR [ecx+ebp*1-0x18]
  408691:	gs ja  0x40867d
  408694:	repnz xor ch,al
  408697:	push   ebx
  408698:	mov    dl,dh
  40869a:	das    
  40869b:	arpl   WORD PTR [edi],si
  40869d:	jmp    0x1b88:0xcf9fe529
  4086a4:	adc    dl,BYTE PTR [ebx]
  4086a6:	imul   edx,DWORD PTR [ebp+0x69906157],0x4c
  4086ad:	div    ebx
  4086af:	nop
  4086b0:	jno    0x40869c
  4086b2:	fs xchg esi,eax
  4086b4:	and    BYTE PTR [eax+ebx*1+0x3a8859c0],al
  4086bb:	je     0x40869b
  4086bd:	jle    0x40867e
  4086bf:	mov    BYTE PTR [esi-0x6a5153c7],0x66
  4086c6:	inc    eax
  4086c7:	sbb    al,0x65
  4086c9:	hlt    
  4086ca:	jmp    0xa669:0xc59fd03b
  4086d1:	pop    edx
  4086d2:	dec    esi
  4086d3:	popf   
  4086d4:	xor    bh,BYTE PTR [edx+0x1ad6dda5]
  4086da:	xor    eax,0x7d120603
  4086df:	popf   
  4086e0:	mov    edx,0x59b911d5
  4086e5:	dec    esi
  4086e6:	mov    al,dh
  4086e8:	lea    esp,[ebx]
  4086ea:	cmc    
  4086eb:	mov    bh,0x31
  4086ed:	addr16 push cs
  4086ef:	clc    
  4086f0:	pop    edx
  4086f1:	mov    ecx,DWORD PTR [esi-0x7addda1b]
  4086f7:	add    cl,ch
  4086f9:	add    al,0xe1
  4086fb:	pop    ss
  4086fc:	push   cs
  4086fd:	adc    dl,BYTE PTR [esi+0x54]
  408700:	mov    cl,0x29
  408702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408703:	loope  0x408729
  408705:	out    0x2c,eax
  408707:	jmp    0x619:0x276299a1
  40870e:	mov    dl,0x37
  408710:	iret   
  408711:	add    eax,0xfc40d8a0
  408716:	sbb    eax,0x3226999d
  40871b:	btr    ecx,ecx
  40871e:	mov    al,BYTE PTR [edi+0xc]
  408721:	adc    eax,ebx
  408723:	test   DWORD PTR [edx+0x1d],edx
  408726:	ss dec eax
  408728:	stc    
  408729:	push   ss
  40872a:	adc    cl,bh
  40872c:	not    DWORD PTR [ebp+0x794423b7]
  408732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408733:	shl    dh,1
  408735:	mov    edx,DWORD PTR [ebp+0x761959bd]
  40873b:	jne    0x4086e0
  40873d:	or     ebp,DWORD PTR [eax]
  40873f:	fist   WORD PTR [ebp+ecx*4-0x4]
  408743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408744:	jmp    0x61280d8c
  408749:	push   0x66f82737
  40874e:	dec    edi
  40874f:	adc    al,0x67
  408751:	jl     0x408740
  408753:	inc    esp
  408754:	mov    al,0xf0
  408756:	jb     0x4086dd
  408758:	jge    0x408765
  40875a:	push   eax
  40875b:	xchg   edi,eax
  40875c:	aam    0xe5
  40875e:	in     al,0x8d
  408760:	ficom  DWORD PTR [esp+ecx*2-0x11]
  408764:	dec    ecx
  408765:	ins    DWORD PTR es:[edi],dx
  408766:	loop   0x4087bc
  408768:	rcl    edx,1
  40876a:	mov    ds:0xa46e0493,al
  40876f:	jmp    0x4087dc
  408771:	es (bad) 
  408774:	push   ecx
  408775:	sub    al,0x94
  408777:	loop   0x4087e0
  408779:	in     eax,0x30
  40877b:	ret    
  40877c:	xor    dh,BYTE PTR [ebx-0x363ab6ac]
  408782:	adc    BYTE PTR [ecx+0x4cfa803e],dh
  408788:	sbb    DWORD PTR [edi],ebx
  40878a:	(bad)  
  40878c:	and    ah,BYTE PTR [edi+0x48a73fd5]
  408792:	add    eax,0xd2fa334b
  408797:	xor    al,0x74
  408799:	pop    ss
  40879a:	xchg   ebp,eax
  40879b:	pop    ebp
  40879c:	popa   
  40879d:	xchg   esi,eax
  40879e:	jmp    0xbacf144b
  4087a3:	fisttp QWORD PTR [ecx+0x7]
  4087a6:	adc    eax,DWORD PTR [eax-0xe3fe9c1]
  4087ac:	stc    
  4087ad:	fwait
  4087ae:	push   es
  4087af:	dec    edx
  4087b0:	mov    ds:0x1ffeb110,al
  4087b5:	jb     0x408790
  4087b7:	lods   al,BYTE PTR ds:[esi]
  4087b8:	std    
  4087b9:	scas   al,BYTE PTR es:[edi]
  4087ba:	xchg   ebp,eax
  4087bb:	and    DWORD PTR [eax],ebp
  4087bd:	shr    ebx,0xff
  4087c0:	jmp    0xf18d:0x26b4cd7e
  4087c7:	push   0xffffffb0
  4087c9:	mov    ecx,0x5c8be44b
  4087ce:	jb     0x2125e17
  4087d4:	sbb    ebx,DWORD PTR [edi+0x52]
  4087d7:	xor    BYTE PTR [esi-0x65f52bda],0xc
  4087de:	ins    BYTE PTR es:[edi],dx
  4087df:	mov    eax,ds:0x21fa0566
  4087e4:	mov    ebp,0x2d7d7280
  4087e9:	into   
  4087ea:	mov    eax,0x7efb63d9
  4087ef:	pop    ebx
  4087f0:	dec    ecx
  4087f1:	loop   0x408828
  4087f3:	push   es
  4087f4:	ins    BYTE PTR es:[edi],dx
  4087f5:	mov    esi,0xfd7ce1e4
  4087fa:	mov    ah,0x96
  4087fc:	inc    edx
  4087fd:	xchg   esi,eax
  4087fe:	push   ss
  4087ff:	cmp    al,0xd5
  408801:	dec    esi
  408802:	std    
  408803:	retf   
  408804:	xor    DWORD PTR [edi],ebx
  408806:	mov    ds:0x7b764a5e,al
  40880b:	push   ss
  40880c:	jge    0x4087eb
  40880e:	ss loop 0x40886f
  408811:	pop    esi
  408812:	push   ebx
  408813:	fs jae 0x408880
  408816:	mov    al,ds:0x6feb33d1
  40881b:	mov    dl,0xa2
  40881d:	fild   QWORD PTR [ecx]
  408820:	imul   edx,DWORD PTR [edx],0x30
  408823:	jge    0x40882d
  408825:	sub    cl,BYTE PTR [edi+0x2fba233e]
  40882b:	sbb    eax,0x4c40ee0e
  408830:	retf   0xb567
  408833:	adc    al,0x8
  408836:	mov    WORD PTR [ebp+edi*2+0x7524f566],es
  40883d:	and    ah,cl
  40883f:	push   ds
  408840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408841:	mov    ds:0x3a421906,al
  408846:	jecxz  0x40884b
  408848:	add    dh,BYTE PTR [ebp+0x6]
  40884b:	mov    ?,WORD PTR [ebx+ebx*8+0x31]
  40884f:	cmp    BYTE PTR [ecx+esi*2-0x391cddc8],0x9c
  408857:	fiadd  DWORD PTR [eax+0x468905b8]
  40885d:	push   ecx
  40885e:	jle    0x408897
  408860:	or     BYTE PTR [esi],bh
  408862:	scas   eax,DWORD PTR es:[edi]
  408863:	jle    0x408827
  408865:	jl     0x4088e3
  408867:	sbb    DWORD PTR [edi-0x1b],0xffffffd5
  40886b:	jb     0x4088e4
  40886d:	test   eax,0xebe48402
  408872:	mov    edx,0x9e9d2079
  408877:	adc    BYTE PTR [eax-0x3790b232],bl
  40887d:	(bad)  
  40887e:	jmp    0x408852
  408880:	sbb    eax,0xa21ce7c2
  408885:	jecxz  0x408826
  408887:	jecxz  0x4088d3
  408889:	lods   al,BYTE PTR ds:[esi]
  40888a:	push   ecx
  40888b:	outs   dx,DWORD PTR ds:[esi]
  40888c:	int    0x8a
  40888e:	sti    
  40888f:	repz cmp al,0x4
  408892:	mov    esp,0x9b49f0af
  408897:	xchg   esp,eax
  408898:	sbb    al,0x83
  40889a:	adc    bh,BYTE PTR [esi+ebp*8-0x2]
  40889e:	add    edx,ebx
  4088a0:	std    
  4088a1:	jo     0x408917
  4088a3:	in     al,dx
  4088a4:	ret    
  4088a5:	adc    eax,DWORD PTR [eax-0x2ba2332c]
  4088ab:	sbb    al,0xd9
  4088ad:	out    0xb8,eax
  4088af:	xor    DWORD PTR [ebx-0x7],0x218802d3
  4088b6:	cmp    esi,ebp
  4088b8:	pop    ecx
  4088b9:	inc    eax
  4088ba:	fldenv [edi]
  4088bc:	dec    esi
  4088bd:	add    ecx,DWORD PTR [ebp+0x7e8ab571]
  4088c3:	or     eax,0x3a6d9c75
  4088c8:	inc    esi
  4088c9:	sbb    eax,0x5456b6c6
  4088ce:	clc    
  4088cf:	sub    eax,0xaac50f60
  4088d4:	sahf   
  4088d5:	cmp    eax,0xc23e281c
  4088da:	mov    esp,0xc6414af8
  4088df:	sti    
  4088e0:	test   DWORD PTR [edx+0x10],edi
  4088e3:	push   ds
  4088e4:	and    bl,BYTE PTR [ecx]
  4088e6:	inc    BYTE PTR [ebp+ebp*4-0x7f]
  4088ea:	mov    ah,0xe9
  4088ec:	adc    edi,esp
  4088ee:	mov    edx,0xdc9ad106
  4088f3:	mov    eax,0xe0e87774
  4088f8:	push   esi
  4088f9:	fnstsw WORD PTR [esi-0x513cd86f]
  4088ff:	scas   eax,DWORD PTR es:[edi]
  408900:	in     eax,0x2e
  408902:	iret   
  408903:	cld    
  408904:	mov    cl,ch
  408906:	(bad)  
  408907:	inc    esp
  408908:	cmp    eax,0xa1209677
  40890d:	xchg   esi,eax
  40890e:	mov    WORD PTR [ebp+0x66],es
  408911:	js     0x4088b9
  408913:	mov    edx,0x83e21a35
  408918:	dec    esi
  408919:	add    eax,0xfec9a389
  40891e:	pop    ss
  40891f:	(bad)  
  408920:	xchg   esi,eax
  408921:	fwait
  408922:	aam    0x87
  408924:	pop    ebx
  408925:	(bad)  
  408926:	leave  
  408927:	add    ah,dh
  408929:	and    esp,DWORD PTR [edx+0x20]
  40892c:	fwait
  40892d:	xor    dh,al
  40892f:	dec    esp
  408930:	loop   0x40893d
  408932:	dec    edi
  408933:	aam    0x95
  408935:	hlt    
  408936:	(bad)  
  408937:	(bad)  [esi]
  408939:	retf   0x6d68
  40893c:	add    dx,WORD PTR [ebp+0x46]
  408940:	xchg   ecx,eax
  408941:	mov    fs,WORD PTR [edi+0x6480788b]
  408947:	ins    DWORD PTR es:[edi],dx
  408948:	adc    ah,al
  40894a:	dec    ebp
  40894b:	jnp    0x69b04028
  408951:	add    DWORD PTR cs:[ecx+0x7d],ebx
  408955:	call   0x21b30083
  40895a:	test   al,0x82
  40895c:	mov    ?,eax
  40895e:	nop
  40895f:	cmp    edx,eax
  408961:	pushf  
  408962:	ja     0x408989
  408964:	xchg   ecx,eax
  408965:	nop
  408966:	xor    eax,0x57de1b71
  40896b:	pop    ebp
  40896c:	fcmove st,st(1)
  40896e:	call   0x38c16fbf
  408973:	lea    ebp,cs:[esi+0x2a54961d]
  40897a:	or     ah,bl
  40897c:	call   0x49a9:0x59730747
  408983:	push   ss
  408984:	scas   eax,DWORD PTR es:[edi]
  408985:	sub    BYTE PTR [eax+0x48f2c26c],bl
  40898b:	dec    esi
  40898c:	sub    al,BYTE PTR ss:0x9da2bc19
  408993:	mov    eax,DWORD PTR [eax-0x6a516681]
  408999:	addr16 fwait
  40899b:	int    0xf
  40899d:	test   cl,ah
  40899f:	stos   BYTE PTR es:[edi],al
  4089a0:	enter  0xece5,0x2c
  4089a4:	inc    esi
  4089a5:	fistp  QWORD PTR [eax+0x1a]
  4089a8:	shl    DWORD PTR [ebp-0x45],1
  4089ab:	jl     0x408960
  4089ad:	(bad)  
  4089ae:	js     0x408a28
  4089b0:	loop   0x40899b
  4089b2:	push   edi
  4089b3:	inc    edi
  4089b4:	or     DWORD PTR [edi],0xffffff85
  4089b7:	mov    al,ds:0x82d24afe
  4089bc:	aam    0x7d
  4089be:	xchg   BYTE PTR [ebp+esi*1-0x43],dl
  4089c2:	push   cs
  4089c3:	inc    edx
  4089c4:	push   0x7b82e243
  4089c9:	cmp    eax,0xf6a6e5df
  4089ce:	scas   al,BYTE PTR es:[edi]
  4089cf:	inc    edx
  4089d0:	mov    ah,0xc1
  4089d2:	aam    0x7
  4089d4:	retf   0x9f90
  4089d7:	pop    esp
  4089d8:	xchg   ebp,eax
  4089d9:	sub    cl,bl
  4089db:	nop
  4089dc:	sbb    esi,eax
  4089de:	dec    edx
  4089df:	pop    ebp
  4089e0:	jmp    0xa588:0x33941f92
  4089e7:	shl    DWORD PTR [edx],0x25
  4089ea:	fld    DWORD PTR [ebp+0x47]
  4089ed:	mov    ss,edx
  4089ef:	dec    ebp
  4089f0:	mov    dh,0x62
  4089f2:	mov    cl,0x29
  4089f4:	out    dx,al
  4089f5:	mov    dl,0xe2
  4089f7:	and    DWORD PTR [ebx+0x6169effa],ecx
  4089fd:	cmp    ah,bh
  4089ff:	ds stos BYTE PTR es:[edi],al
  408a01:	pop    ebp
  408a02:	lods   eax,DWORD PTR ds:[esi]
  408a03:	icebp  
  408a04:	outs   dx,BYTE PTR ds:[esi]
  408a05:	jge    0x4089e8
  408a07:	pop    edx
  408a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a09:	cmp    eax,0x2983f6e1
  408a0e:	mov    ecx,0xded58187
  408a13:	retf   
  408a14:	(bad)  
  408a15:	bound  edi,QWORD PTR [esi]
  408a17:	int3   
  408a18:	int    0x56
  408a1a:	pop    ebp
  408a1b:	pop    ecx
  408a1c:	aad    0x29
  408a1e:	int    0x7e
  408a20:	pop    edi
  408a21:	sti    
  408a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a23:	call   DWORD PTR [ecx]
  408a25:	mov    ebx,0xe84db7b6
  408a2a:	xchg   esi,eax
  408a2b:	loopne 0x408a74
  408a2d:	jmp    0x408a51
  408a2f:	mov    cl,0xb5
  408a31:	jb     0x4089d8
  408a33:	xchg   esp,eax
  408a34:	adc    BYTE PTR [edi+eiz*2],dl
  408a37:	xchg   ecx,eax
  408a38:	push   esi
  408a39:	pop    ds
  408a3a:	stos   DWORD PTR es:[edi],eax
  408a3b:	outs   dx,DWORD PTR ds:[esi]
  408a3c:	dec    esp
  408a3d:	mov    bl,0x5e
  408a3f:	clc    
  408a40:	cdq    
  408a41:	sbb    BYTE PTR [edx],0x4d
  408a44:	xor    al,0x8
  408a46:	xor    edi,eax
  408a48:	inc    edi
  408a49:	sbb    ebp,edx
  408a4b:	xrelease mov BYTE PTR ds:0x72a39e39,ch
  408a52:	mov    dl,0xc8
  408a54:	out    0xea,eax
  408a56:	pop    ebx
  408a57:	cwde   
  408a58:	jb     0x408a12
  408a5a:	xchg   ebp,eax
  408a5b:	(bad)  
  408a5c:	retf   
  408a5d:	add    eax,0x73b2fd06
  408a62:	mov    eax,0x3dd4cfa6
  408a67:	mov    edi,0xac29446c
  408a6c:	fidiv  DWORD PTR [ecx]
  408a6e:	or     edi,ebx
  408a70:	mov    ah,0x5b
  408a72:	outs   dx,DWORD PTR ds:[esi]
  408a73:	xchg   edi,eax
  408a74:	push   cs
  408a75:	jmp    0x1581c77e
  408a7a:	push   es
  408a7b:	scas   eax,DWORD PTR es:[edi]
  408a7c:	fild   WORD PTR [edi]
  408a7e:	inc    ebp
  408a7f:	or     al,0xef
  408a81:	add    cl,BYTE PTR [ebp-0x40]
  408a84:	stc    
  408a85:	and    DWORD PTR [eax+ecx*8-0x42f8fd1e],esp
  408a8c:	pop    eax
  408a8d:	dec    ebx
  408a8e:	jge    0x408a85
  408a90:	mov    esi,0xc026d623
  408a95:	rcr    BYTE PTR [edx],cl
  408a97:	je     0x408ab0
  408a99:	mov    al,0x9e
  408a9b:	mov    bl,0x17
  408a9d:	sub    DWORD PTR [edx-0x49],ebp
  408aa0:	stos   DWORD PTR es:[edi],eax
  408aa1:	mov    eax,ds:0x6c595513
  408aa6:	int    0x1b
  408aa8:	jecxz  0x408acf
  408aaa:	add    ah,BYTE PTR [ebx-0x41bd1a49]
  408ab0:	stos   BYTE PTR es:[edi],al
  408ab1:	(bad)  [edi]
  408ab3:	mov    ebp,0xa25da418
  408ab8:	sbb    esi,DWORD PTR [esi-0x3d]
  408abb:	mov    dh,0x7d
  408abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408abe:	ins    BYTE PTR es:[edi],dx
  408abf:	inc    edx
  408ac0:	loopne 0x408a59
  408ac2:	not    BYTE PTR [esi+0x47]
  408ac5:	call   0x35b2:0x20f39cc
  408acc:	dec    esi
  408acd:	mov    edi,0x66e000b2
  408ad2:	add    eax,0x31560b3e
  408ad7:	jnp    0x408ae8
  408ad9:	add    eax,0x89cc953
  408ade:	jnp    0x408b46
  408ae0:	xchg   esp,eax
  408ae1:	inc    esi
  408ae2:	mov    dl,0xf7
  408ae4:	(bad)  
  408ae6:	push   ss
  408ae7:	dec    esp
  408ae8:	push   edx
  408ae9:	mov    ds:0x6991611f,al
  408aee:	cdq    
  408aef:	aaa    
  408af0:	out    dx,eax
  408af1:	lea    ecx,[esp+eax*2]
  408af4:	repz jae 0x408b32
  408af7:	mov    eax,0x97915f9d
  408afc:	mov    al,ds:0xe7dd418e
  408b01:	jge    0x408ac7
  408b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b04:	mov    al,ds:0x733dadb3
  408b09:	mov    dl,0xd3
  408b0b:	inc    ecx
  408b0c:	(bad)  
  408b0d:	mov    esi,0xc1d70a8
  408b12:	test   al,0x38
  408b14:	sbb    BYTE PTR [esp+edx*1+0x7e],bh
  408b18:	sub    eax,0xff2091c7
  408b1d:	dec    ebx
  408b1e:	xchg   BYTE PTR [edx],dl
  408b20:	imul   eax,DWORD PTR [ebx],0x1e
  408b23:	adc    eax,0x7df4c065
  408b28:	mov    bl,0xb1
  408b2a:	mov    esi,0x7e176bfd
  408b2f:	mov    cl,0xf0
  408b31:	cmp    BYTE PTR [eax+edi*8-0x454ad07a],ah
  408b38:	pop    ebp
  408b39:	cmp    BYTE PTR [edx+esi*4],al
  408b3c:	push   cs
  408b3d:	mov    ebp,DWORD PTR [edi]
  408b3f:	xor    BYTE PTR [edx+0x56],ch
  408b42:	nop
  408b43:	mov    ecx,0x88aa1f14
  408b48:	js     0x408b0d
  408b4a:	mov    ebp,0x4b3afd90
  408b4f:	dec    edx
  408b50:	push   0x10b5dee6
  408b55:	fcom   QWORD PTR [esi+0x1148e557]
  408b5b:	leave  
  408b5c:	stos   DWORD PTR es:[edi],eax
  408b5d:	(bad)  
  408b5f:	call   DWORD PTR [ebx-0x66]
  408b62:	retf   
  408b63:	sub    BYTE PTR [edx],bl
  408b65:	inc    eax
  408b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b67:	sar    ecx,0xf5
  408b6a:	or     al,0xee
  408b6c:	mov    gs,WORD PTR [eax+0x4b]
  408b6f:	imul   ecx,DWORD PTR [edi],0xcb053dff
  408b75:	mov    dl,BYTE PTR [esi]
  408b77:	mov    eax,ds:0x4ea96a0
  408b7c:	push   ebx
  408b7d:	xchg   BYTE PTR [eax-0x28],dl
  408b80:	inc    edi
  408b81:	popf   
  408b82:	inc    edi
  408b83:	dec    eax
  408b84:	ins    DWORD PTR es:[edi],dx
  408b85:	pop    DWORD PTR [ebx+0xf193065]
  408b8b:	or     esi,ebx
  408b8d:	push   edi
  408b8e:	mov    dl,0xc6
  408b90:	and    al,0x84
  408b92:	pop    esi
  408b93:	arpl   WORD PTR [eax-0x344205e6],dx
  408b99:	and    eax,0xd8cf34c3
  408b9e:	dec    ebx
  408b9f:	test   eax,0x76c45d33
  408ba4:	mov    ecx,0xb3e4e065
  408ba9:	or     eax,ecx
  408bab:	mov    ebp,esi
  408bad:	add    al,0x70
  408baf:	pusha  
  408bb0:	pop    ebp
  408bb1:	and    bh,BYTE PTR [ebx+0xf]
  408bb4:	or     eax,0xb4a3350b
  408bb9:	mov    BYTE PTR [eax+0x3c],ch
  408bbc:	xor    al,BYTE PTR [ecx]
  408bbe:	repnz push DWORD PTR [ebp+0x3c]
  408bc2:	fisubr WORD PTR [edi+0x2306224d]
  408bc8:	or     esi,ecx
  408bca:	fild   DWORD PTR [eax+0xb72d807]
  408bd0:	mov    ah,0xb6
  408bd2:	mov    bl,0xe6
  408bd4:	jge    0x408c08
  408bd6:	gs int3 
  408bd8:	jb     0x408bd5
  408bda:	pop    ecx
  408bdb:	add    ah,dl
  408bdd:	jns    0x408bfb
  408bdf:	dec    esi
  408be0:	push   ecx
  408be1:	nop
  408be2:	jns    0x408c39
  408be4:	enter  0x5091,0xb5
  408be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be9:	cwde   
  408bea:	enter  0x5cb0,0xef
  408bee:	xchg   DWORD PTR [eax+0x63d1aa63],edi
  408bf4:	(bad)  
  408bf5:	mov    ah,0x56
  408bf7:	(bad)  
  408bf8:	fwait
  408bf9:	inc    edx
  408bfa:	(bad)  
  408bfb:	ja     0x408b7f
  408bfd:	dec    edx
  408bfe:	xchg   BYTE PTR [ebx-0x46],dl
  408c01:	push   esi
  408c02:	jae    0x408b85
  408c04:	xor    BYTE PTR [edx+ecx*1-0xd],bh
  408c08:	ins    BYTE PTR es:[edi],dx
  408c09:	or     ebx,DWORD PTR [eax]
  408c0b:	ror    ch,0x6e
  408c0e:	push   eax
  408c0f:	imul   eax,DWORD PTR [esi],0xd833a208
  408c15:	(bad)  
  408c16:	int    0x79
  408c18:	inc    ebp
  408c19:	sub    BYTE PTR [edi-0x4a4938cc],0x4a
  408c20:	ins    BYTE PTR es:[edi],dx
  408c21:	dec    ecx
  408c22:	xchg   BYTE PTR [ecx],ch
  408c24:	jne    0x408c04
  408c26:	add    dh,BYTE PTR [eax]
  408c28:	pusha  
  408c29:	cdq    
  408c2a:	(bad)  
  408c2c:	sbb    eax,DWORD PTR [eax+esi*4]
  408c2f:	dec    ebp
  408c30:	adc    DWORD PTR [ecx-0x1cb30273],ecx
  408c36:	push   edi
  408c37:	or     eax,DWORD PTR [ebx]
  408c39:	pushf  
  408c3a:	inc    DWORD PTR [ecx+0x57]
  408c3d:	pop    es
  408c3e:	ins    BYTE PTR es:[edi],dx
  408c3f:	dec    esp
  408c40:	(bad)  
  408c41:	aaa    
  408c42:	jl     0x408c6c
  408c44:	stc    
  408c45:	cmp    ah,BYTE PTR [ebx-0x52]
  408c48:	leave  
  408c49:	sub    DWORD PTR [edx],esi
  408c4b:	enter  0x3149,0xdf
  408c4f:	pusha  
  408c50:	rcl    ebx,0x93
  408c53:	mov    ah,0xae
  408c55:	add    eax,0x98b2f11b
  408c5a:	ret    0x657
  408c5d:	xlat   BYTE PTR ds:[ebx]
  408c5e:	pop    ebx
  408c5f:	fimul  WORD PTR [esi+0x6e576b58]
  408c65:	pop    ecx
  408c66:	mov    esp,0xe05ad5e3
  408c6b:	daa    
  408c6c:	lock and DWORD PTR ss:[ebx],0x68
  408c71:	das    
  408c72:	icebp  
  408c73:	pushf  
  408c74:	sub    eax,0x25110145
  408c79:	pop    ss
  408c7a:	ins    DWORD PTR es:[edi],dx
  408c7b:	mov    edi,0x347abcbb
  408c80:	mov    ch,0xef
  408c82:	sub    dh,BYTE PTR [ebp+0x4a]
  408c85:	(bad)  
  408c86:	xchg   ebx,eax
  408c87:	imul   ecx,DWORD PTR [ebp-0x2909e1a2],0x46
  408c8e:	or     BYTE PTR [ecx],cl
  408c90:	jl     0x408c19
  408c92:	xor    eax,0x8d1ebad4
  408c97:	and    BYTE PTR [edx],ch
  408c99:	ds mov esp,0x3006cc13
  408c9f:	jo     0x408cc1
  408ca1:	add    bl,BYTE PTR [eax]
  408ca3:	frstor [ebp+ebx*1+0x79]
  408ca7:	xchg   esi,eax
  408ca8:	shr    BYTE PTR [edx+0xd],0x3
  408cac:	add    DWORD PTR [edx+0x4c87ca54],ebx
  408cb2:	push   cs
  408cb3:	push   ebx
  408cb4:	sub    DWORD PTR [ebx+0x0],0xffffffa1
  408cb8:	pop    edi
  408cb9:	pop    edi
  408cba:	adc    eax,0x7970e35b
  408cbf:	in     eax,0x79
  408cc1:	push   ecx
  408cc2:	aad    0xe7
  408cc4:	add    al,0x7b
  408cc6:	in     al,dx
  408cc7:	cmp    edi,DWORD PTR [ebx]
  408cc9:	adc    ch,dl
  408ccb:	fwait
  408ccc:	add    DWORD PTR [ebp+0x3206a846],ecx
  408cd2:	fld    DWORD PTR [esp+eax*4]
  408cd5:	jl     0x408c6b
  408cd7:	dec    ebx
  408cd8:	test   eax,0xe30901a6
  408cdd:	icebp  
  408cde:	iret   
  408cdf:	inc    ebx
  408ce0:	les    eax,FWORD PTR [eax]
  408ce2:	adc    eax,0xf33c5bce
  408ce7:	cmp    eax,0x8eb6c597
  408cec:	icebp  
  408ced:	jp     0x408cfe
  408cef:	cmp    ecx,DWORD PTR [ecx+0x37]
  408cf2:	fcmovnu st,st(0)
  408cf4:	mov    ds:0x1249d3bd,eax
  408cf9:	sti    
  408cfa:	popf   
  408cfb:	lahf   
  408cfc:	or     eax,0x7754b3fc
  408d01:	and    edx,DWORD PTR [edx-0x5a9c40b5]
  408d07:	data16 cs jg 0x408c99
  408d0b:	cmp    BYTE PTR ds:0x9e06de33,ch
  408d11:	pop    ecx
  408d12:	daa    
  408d13:	ret    0x3953
  408d16:	mov    bh,0x2b
  408d18:	loop   0x408d50
  408d1a:	push   ebp
  408d1b:	add    eax,DWORD PTR [esi-0x6]
  408d1e:	or     al,0x86
  408d20:	pop    ebx
  408d21:	fmul   QWORD PTR [edx+0x2a]
  408d24:	fscale 
  408d26:	imul   ebx,ebx,0x8eb25aeb
  408d2c:	outs   dx,BYTE PTR ds:[esi]
  408d2d:	shr    BYTE PTR [edx+0x248c300a],0x50
  408d34:	sub    al,0x8b
  408d36:	jl     0x408cda
  408d38:	outs   dx,BYTE PTR ds:[esi]
  408d39:	cmp    al,0x95
  408d3b:	ror    DWORD PTR [ecx+edx*1],0xb6
  408d3f:	ja     0x408cd6
  408d41:	push   edx
  408d42:	push   eax
  408d43:	sahf   
  408d44:	dec    edx
  408d45:	jns    0x408d36
  408d47:	mov    ebp,0xe16cade4
  408d4c:	xchg   ebx,eax
  408d4d:	inc    ebx
  408d4e:	sbb    eax,0xf20da8db
  408d53:	add    edx,edx
  408d55:	sub    dl,BYTE PTR [ebx-0x511bc794]
  408d5b:	push   ds
  408d5c:	lahf   
  408d5d:	jb     0x408dc7
  408d5f:	stc    
  408d60:	mov    bh,0xc6
  408d62:	rcl    BYTE PTR [edx+0x2e],0xe8
  408d66:	pop    ss
  408d67:	xchg   edi,eax
  408d68:	repz retf 0x5c74
  408d6c:	outs   dx,DWORD PTR ds:[esi]
  408d6d:	or     cl,BYTE PTR [ecx]
  408d6f:	aam    0xb6
  408d71:	(bad)  
  408d72:	in     eax,0x58
  408d74:	mov    bl,0xfc
  408d76:	push   ebx
  408d77:	xchg   ebp,eax
  408d78:	add    ebp,DWORD PTR [edi]
  408d7a:	adc    al,0xea
  408d7c:	jp     0x408d1e
  408d7e:	sbb    DWORD PTR [edx+0x5e],ecx
  408d81:	or     DWORD PTR [ecx-0x3e1c2c62],ebx
  408d87:	mov    edi,0x14e02124
  408d8c:	popf   
  408d8d:	arpl   si,di
  408d8f:	dec    BYTE PTR [edx]
  408d91:	cmp    al,0x66
  408d93:	xor    DWORD PTR [eax+0x55],edi
  408d96:	adc    DWORD PTR [eax],esp
  408d98:	sub    esi,DWORD PTR [esi+ebp*8]
  408d9b:	call   FWORD PTR [eax+0x4e]
  408d9e:	inc    eax
  408d9f:	mov    bh,0x79
  408da1:	(bad)  
  408da2:	stos   DWORD PTR es:[edi],eax
  408da3:	add    esi,esp
  408da5:	jne    0x408d89
  408da7:	std    
  408da8:	xchg   ecx,eax
  408da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408daa:	adc    al,0x82
  408dac:	test   DWORD PTR [ebp-0x532f05b4],0x5562433
  408db6:	outs   dx,DWORD PTR ds:[esi]
  408db7:	jne    0x408d3e
  408db9:	loop   0x408dfb
  408dbb:	inc    eax
  408dbc:	push   ds
  408dbd:	cmp    edi,esi
  408dbf:	popa   
  408dc0:	push   esi
  408dc1:	mov    ?,WORD PTR [ecx]
  408dc3:	stc    
  408dc4:	pop    ss
  408dc5:	push   ss
  408dc6:	jecxz  0x408da3
  408dc8:	out    0xe,eax
  408dca:	sbb    DWORD PTR [edi+0x20],ecx
  408dcd:	pop    ecx
  408dce:	pop    edx
  408dcf:	add    BYTE PTR [ebx],al
  408dd1:	into   
  408dd2:	je     0x408da0
  408dd4:	mov    DWORD PTR [edx],edx
  408dd6:	rcl    BYTE PTR [edx+0x6a1db07b],cl
  408ddc:	lods   al,BYTE PTR ds:[esi]
  408ddd:	cmp    eax,0x1891d1ba
  408de2:	inc    edx
  408de3:	xchg   edx,eax
  408de4:	mov    bl,0x2c
  408de6:	test   DWORD PTR ds:0x64992aa0,edx
  408dec:	adc    ah,ah
  408dee:	and    dh,bl
  408df0:	(bad)  
  408df1:	ror    esp,1
  408df3:	dec    eax
  408df4:	fbstp  TBYTE PTR [esi]
  408df6:	clc    
  408df7:	sub    ebx,DWORD PTR [eax-0x7c]
  408dfa:	jmp    0xadd1:0x726a9240
  408e01:	add    edx,edi
  408e03:	jns    0x408dd5
  408e05:	arpl   WORD PTR [eax-0x384dadd0],sp
  408e0b:	inc    esp
  408e0c:	loope  0x408e02
  408e0e:	adc    bl,BYTE PTR [edi]
  408e10:	mov    ?,WORD PTR [ebp+0x61699ac5]
  408e16:	cmp    ecx,edx
  408e18:	iret   
  408e19:	jne    0x408dfe
  408e1b:	xchg   edx,eax
  408e1c:	rol    BYTE PTR [ecx-0x67],cl
  408e1f:	and    al,0x87
  408e21:	rol    DWORD PTR [edi],1
  408e23:	xor    bh,bl
  408e25:	fsubrp st(0),st
  408e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e28:	outs   dx,DWORD PTR ds:[esi]
  408e29:	push   es
  408e2a:	icebp  
  408e2b:	and    al,0x9b
  408e2d:	stc    
  408e2e:	test   DWORD PTR [ebx-0x2],edi
  408e31:	fimul  WORD PTR [eax]
  408e33:	cmc    
  408e34:	and    al,dl
  408e36:	mov    BYTE PTR [ecx],al
  408e38:	popf   
  408e39:	stos   DWORD PTR es:[edi],eax
  408e3a:	iret   
  408e3b:	add    esp,DWORD PTR [ebp-0x53]
  408e3e:	or     al,0x9c
  408e40:	daa    
  408e41:	jge    0x26e16c
  408e47:	cmp    eax,DWORD PTR fs:[esi+0x74]
  408e4b:	pop    ebp
  408e4c:	fild   WORD PTR [ebx+0x68]
  408e4f:	ds push es
  408e51:	push   ebx
  408e52:	fadd   st,st(7)
  408e54:	jp     0x408ea6
  408e56:	push   esi
  408e57:	(bad)  
  408e58:	jbe    0x408e83
  408e5a:	or     eax,0x842cc9d9
  408e5f:	xor    BYTE PTR [edx],ah
  408e61:	icebp  
  408e62:	mov    BYTE PTR [edx],bl
  408e64:	dec    eax
  408e65:	mov    edi,0x873f653
  408e6a:	(bad)  
  408e6b:	push   esp
  408e6c:	or     al,0x3e
  408e6e:	cmp    DWORD PTR [eax+esi*8],ebp
  408e71:	aaa    
  408e72:	cmc    
  408e73:	fcomp  QWORD PTR [edi+0x41]
  408e76:	sub    BYTE PTR [edi+0x3d3cb819],0xa8
  408e7d:	xchg   edi,eax
  408e7e:	(bad)  
  408e80:	add    ecx,DWORD PTR [eax]
  408e82:	arpl   WORD PTR [ebp-0xcae7a43],ax
  408e88:	je     0x408e75
  408e8a:	retf   0x1574
  408e8d:	gs pop eax
  408e8f:	(bad)
  408e92:	fmul   DWORD PTR [edx-0x29]
  408e95:	mov    esp,0x2758c551
  408e9a:	inc    ebx
  408e9b:	les    edx,FWORD PTR [edx+0x8]
  408e9e:	loopne 0x408e35
  408ea0:	xchg   edx,eax
  408ea1:	test   BYTE PTR ds:0x520050ef,0xa0
  408ea8:	cmc    
  408ea9:	ds and eax,0x6fca097f
  408eaf:	pop    ds
  408eb0:	or     BYTE PTR [ebx+ecx*4-0x57],0x4f
  408eb5:	gs je  0x408eb8
  408eb8:	sti    
  408eb9:	mov    gs,WORD PTR [edi]
  408ebb:	lea    ebx,[edi+esi*2+0x220f0d78]
  408ec2:	lds    esp,FWORD PTR [ebp-0x57409c5e]
  408ec8:	imul   edx,edi,0xf
  408ecb:	jne    0x408ea6
  408ecd:	sbb    edx,ebp
  408ecf:	into   
  408ed0:	mov    BYTE PTR [esp+ecx*2],dl
  408ed3:	or     BYTE PTR fs:[edx+0x30252f67],0x64
  408edb:	ret    
  408edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408edd:	add    al,BYTE PTR [eax]
  408edf:	hlt    
  408ee0:	dec    esi
  408ee1:	sbb    bh,BYTE PTR [ecx]
  408ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ee4:	and    eax,0xd7b70853
  408ee9:	inc    ecx
  408eea:	cmp    eax,DWORD PTR [esi-0x2f]
  408eed:	mov    DWORD PTR ds:0xed189742,ebx
  408ef3:	outs   dx,DWORD PTR ds:[esi]
  408ef4:	shl    BYTE PTR [ebx+0xd],cl
  408ef7:	sub    esp,DWORD PTR [eax-0x31c70230]
  408efd:	div    dl
  408eff:	sub    cl,BYTE PTR [ebx-0x61]
  408f02:	(bad)  
  408f03:	test   eax,0x5183e30e
  408f08:	inc    esi
  408f09:	or     BYTE PTR [esp+0x7556d38e],cl
  408f10:	xor    bl,BYTE PTR [ecx+0x70e2d92b]
  408f16:	or     eax,0xf719ae50
  408f1b:	fst    DWORD PTR [edx+0xdfd6a0b]
  408f21:	bound  ebx,QWORD PTR [ebp-0x2c5afa98]
  408f27:	lea    edx,[ebx+0x330c6cfb]
  408f2d:	sti    
  408f2e:	dec    esi
  408f2f:	push   ebx
  408f30:	sar    BYTE PTR [esi-0xb],1
  408f33:	std    
  408f34:	fs sbb eax,0x8ddf5417
  408f3a:	js     0x408f57
  408f3c:	mov    ch,0xbe
  408f3e:	ins    BYTE PTR es:[edi],dx
  408f3f:	loopne 0x408f2b
  408f41:	push   cs
  408f42:	push   es
  408f43:	jo     0x408fb7
  408f45:	jecxz  0x408fbd
  408f47:	cmp    BYTE PTR [ecx+0x6d230371],0x6d
  408f4e:	imul   esp,DWORD PTR [ebx+0x1b],0xde125338
  408f55:	sahf   
  408f56:	add    DWORD PTR [edi],eax
  408f58:	aaa    
  408f59:	mov    ebx,0xd9ed1b38
  408f5e:	inc    esi
  408f5f:	loop   0x408ee4
  408f61:	mov    edi,0xe1187819
  408f66:	xchg   ecx,eax
  408f67:	mov    ch,0x86
  408f69:	sbb    edx,eax
  408f6b:	dec    esi
  408f6c:	adc    DWORD PTR [edx],0x7e36b42e
  408f72:	retf   0x7c55
  408f75:	sub    dl,0xac
  408f78:	push   edi
  408f79:	bound  eax,QWORD PTR gs:[edx-0xa04f9d6]
  408f80:	dec    ebp
  408f81:	mov    dl,0xda
  408f83:	(bad)  ss:[edi]
  408f86:	arpl   WORD PTR [eax-0x74],sp
  408f89:	call   0x27188b1c
  408f8e:	in     al,0xbc
  408f90:	mov    ds:0xb0472ace,eax
  408f95:	push   es
  408f96:	sar    DWORD PTR [ecx-0x58708921],0xfc
  408f9d:	cmp    BYTE PTR [edi+0x40],bh
  408fa0:	and    eax,0x4d04d872
  408fa5:	push   edx
  408fa6:	mov    esi,0x1c40f49
  408fab:	js     0x40901f
  408fad:	mov    edx,0xcbaacac0
  408fb2:	pop    edx
  408fb3:	adc    dl,BYTE PTR ds:0xcb9b06c5
  408fb9:	popa   
  408fba:	and    DWORD PTR [ebx],ebp
  408fbc:	outs   dx,DWORD PTR ds:[esi]
  408fbd:	fwait
  408fbe:	int    0x2c
  408fc0:	and    al,0x7f
  408fc2:	addr16 mov ecx,0x8934ffb2
  408fc8:	mov    ch,0x16
  408fca:	imul   edx,DWORD PTR [edx-0x67],0xec8311d6
  408fd1:	mov    al,ds:0x666386ca
  408fd6:	lea    edi,[ebp+0xe]
  408fd9:	and    BYTE PTR [ebx],bl
  408fdb:	sbb    al,0x15
  408fdd:	sub    eax,0x8b0db493
  408fe2:	inc    esp
  408fe3:	inc    ebp
  408fe4:	and    BYTE PTR [ecx+ebp*2+0x7f146bf2],ch
  408feb:	xchg   ebx,eax
  408fec:	mov    eax,ds:0x57a6a159
  408ff1:	call   0x2e48:0x651e8afb
  408ff8:	inc    esp
  408ff9:	adc    al,0xd6
  408ffb:	and    al,0x6e
  408ffd:	mov    esi,0x49c8005d
  409002:	mov    cl,0xe6
  409004:	sub    ch,bl
  409006:	pushf  
  409007:	push   esi
  409008:	push   es
  409009:	pop    ds
  40900a:	sub    al,0x3e
  40900c:	shr    BYTE PTR [edi-0x7a],1
  40900f:	add    bh,bl
  409011:	repnz push ecx
  409013:	mov    ebx,esp
  409015:	inc    edx
  409016:	cmp    eax,0xe533dc55
  40901b:	int3   
  40901c:	sub    eax,0x7490f808
  409021:	dec    eax
  409022:	xlat   BYTE PTR ds:[ebx]
  409023:	leave  
  409024:	les    esp,FWORD PTR [esi-0x1a]
  409027:	push   0x62e30055
  40902c:	addr16 or dl,ch
  40902f:	mov    edi,0xa8bbaa47
  409034:	push   esi
  409035:	jb     0x409053
  409037:	jnp    0x408fca
  409039:	dec    ebp
  40903a:	jmp    0x409044
  40903c:	outs   dx,DWORD PTR ds:[esi]
  40903d:	mov    edx,0xb07bb377
  409042:	aad    0x3e
  409044:	scas   al,BYTE PTR es:[edi]
  409045:	adc    ecx,DWORD PTR [eax]
  409047:	and    esi,DWORD PTR [ecx+0x20]
  40904a:	into   
  40904b:	xchg   edi,eax
  40904c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40904d:	xor    al,BYTE PTR [esp+eax*2]
  409050:	je     0x409015
  409052:	xor    dl,ch
  409054:	lds    dx,DWORD PTR [esi]
  409057:	loop   0x40904d
  409059:	and    cl,BYTE PTR [edx-0x4df65d3a]
  40905f:	out    dx,eax
  409060:	repz mov dh,0xf8
  409063:	jno    0x40908e
  409065:	pop    ebx
  409066:	mov    ebp,0xfe73384b
  40906b:	sqrtps xmm2,XMMWORD PTR [ebx+0x33a499a0]
  409072:	add    DWORD PTR [eax-0x5a],0xcb948f90
  409079:	mov    ah,0xba
  40907b:	arpl   bx,si
  40907d:	sbb    al,0x2d
  40907f:	mov    DWORD PTR [ebp+0x5f9858cc],eax
  409085:	xchg   edi,eax
  409086:	imul   ebx,ebp,0xffffffb5
  409089:	xor    al,0xb6
  40908b:	mov    bh,BYTE PTR [ecx-0xde44e01]
  409091:	mov    ah,bl
  409093:	loopne 0x4090f6
  409095:	inc    ecx
  409096:	shl    BYTE PTR [ebp-0x46c338a2],0x4e
  40909d:	rcpps  xmm0,XMMWORD PTR [ebx]
  4090a0:	and    DWORD PTR ss:[esi+eax*2+0x15183310],edi
  4090a8:	repnz shl DWORD PTR ds:0xb6640e77,cl
  4090af:	xchg   edi,eax
  4090b0:	push   ss
  4090b1:	and    dh,BYTE PTR [ecx]
  4090b3:	(bad)  
  4090b4:	pop    esp
  4090b5:	jecxz  0x409130
  4090b7:	push   edx
  4090b8:	and    edi,edi
  4090ba:	test   BYTE PTR ds:0x5175e012,0xda
  4090c1:	pop    ss
  4090c2:	cmp    eax,0x1ee7a737
  4090c8:	jns    0x4090eb
  4090ca:	iret   
  4090cb:	cmp    bl,BYTE PTR [edx-0x8]
  4090ce:	jb     0x409109
  4090d0:	sub    al,0xc5
  4090d2:	push   ss
  4090d3:	dec    ebx
  4090d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090d5:	push   edi
  4090d6:	out    0xf,al
  4090d8:	cmp    cl,dl
  4090da:	bound  ebp,QWORD PTR [eax]
  4090dc:	ret    0xe5cb
  4090df:	push   ebx
  4090e0:	jb     0x4090f9
  4090e2:	sub    edi,DWORD PTR [ebx+0x2c]
  4090e5:	iret   
  4090e6:	jmp    0x4657:0xeb8a32da
  4090ed:	leave  
  4090ee:	xchg   edi,eax
  4090ef:	add    al,0x57
  4090f1:	jae    0x4090e1
  4090f3:	jmp    0x40915e
  4090f5:	xlat   BYTE PTR ds:[ebx]
  4090f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090f7:	mov    ds:0x3a35f422,al
  4090fc:	jmp    0x409140
  4090fe:	aad    0xe2
  409100:	pop    ss
  409101:	mov    bh,bl
  409103:	push   eax
  409104:	mov    ah,0x23
  409106:	ins    DWORD PTR es:[edi],dx
  409107:	jno    0x4090da
  409109:	outs   dx,BYTE PTR ds:[esi]
  40910a:	and    al,0x1b
  40910c:	inc    eax
  40910d:	jo     0x40914d
  40910f:	fidiv  DWORD PTR [edi*1-0x5c352176]
  409116:	in     eax,dx
  409117:	mov    fs,WORD PTR fs:0x5365fbc3
  40911e:	sar    BYTE PTR [ebx-0x4e902b78],cl
  409124:	inc    esp
  409125:	(bad)  
  409126:	adc    BYTE PTR ds:0xcb7b5cc2,dl
  40912c:	xor    al,0xcf
  40912e:	mov    bl,BYTE PTR [edi]
  409130:	aaa    
  409131:	pop    ecx
  409132:	int3   
  409133:	pop    ss
  409134:	int    0xb3
  409136:	push   edx
  409137:	and    ah,bl
  409139:	hlt    
  40913a:	mov    esi,0x3f63815
  40913f:	mov    ah,0x13
  409141:	xor    BYTE PTR [ebx],al
  409143:	sar    BYTE PTR [esi],0x7b
  409146:	jnp    0x409163
  409148:	pop    DWORD PTR [esi+0x35]
  40914b:	loop   0x40914a
  40914d:	sbb    ebx,edi
  40914f:	xor    DWORD PTR [edi],esp
  409151:	fdiv   st(7),st
  409153:	into   
  409154:	pop    edx
  409155:	and    eax,0xab8d8f1d
  40915a:	mov    ebp,0xb16f8f21
  40915f:	jno    0x4090ec
  409161:	std    
  409162:	sbb    cl,dl
  409164:	aam    0xcd
  409166:	pop    ecx
  409167:	or     BYTE PTR [ebx],ah
  409169:	call   DWORD PTR [esi]
  40916b:	xchg   ecx,eax
  40916c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40916d:	retf   0x92e4
  409170:	stc    
  409171:	ins    DWORD PTR es:[edi],dx
  409172:	and    BYTE PTR [ecx-0x6e],0x53
  409176:	mov    eax,fs
  409178:	dec    ecx
  409179:	mov    BYTE PTR ss:[esi-0x33],ch
  40917d:	outs   dx,BYTE PTR ds:[esi]
  40917e:	int3   
  40917f:	stos   DWORD PTR es:[edi],eax
  409180:	mov    cl,0xf1
  409182:	xchg   edi,eax
  409183:	mov    ebx,0xb7e1d11f
  409188:	sbb    BYTE PTR [ebp-0x73348e4],dh
  40918e:	aas    
  40918f:	mov    eax,0x7b384659
  409194:	push   cs
  409195:	mov    bl,0x87
  409197:	repnz xchg ebp,eax
  409199:	pop    es
  40919a:	push   ss
  40919b:	ins    BYTE PTR es:[edi],dx
  40919c:	int    0xfc
  40919e:	sub    al,0xf4
  4091a0:	test   DWORD PTR [esi-0x5d],ebp
  4091a3:	pop    ecx
  4091a4:	ins    BYTE PTR es:[edi],dx
  4091a5:	in     eax,0xd7
  4091a7:	je     0x4091c5
  4091a9:	arpl   WORD PTR [eax],cx
  4091ab:	push   eax
  4091ac:	aaa    
  4091ad:	rcl    DWORD PTR [esi+0x31],0x64
  4091b1:	les    ebp,FWORD PTR [eax-0x50163d05]
  4091b7:	out    dx,eax
  4091b8:	jno    0x409185
  4091ba:	cmp    BYTE PTR [ebx+0x7204a92c],ch
  4091c0:	test   eax,0xbb4570a9
  4091c5:	push   edi
  4091c6:	fistp  QWORD PTR [edi-0x75]
  4091c9:	cmp    al,0x5c
  4091cb:	shl    ah,1
  4091cd:	ret    0x9391
  4091d0:	pop    eax
  4091d1:	jmp    DWORD PTR [edx]
  4091d3:	adc    eax,0xb7a7fdd4
  4091d8:	ret    
  4091d9:	shl    BYTE PTR [eax],1
  4091db:	ins    BYTE PTR es:[edi],dx
  4091dc:	call   DWORD PTR [eax+0x7d]
  4091df:	push   ds
  4091e0:	sahf   
  4091e1:	mov    BYTE PTR [ecx+edi*4],ch
  4091e4:	(bad)  
  4091e5:	mov    ebp,0xbe0731a5
  4091ea:	std    
  4091eb:	add    ch,ah
  4091ed:	adc    eax,0x49d3ae80
  4091f2:	outs   dx,DWORD PTR ds:[esi]
  4091f3:	scas   eax,DWORD PTR es:[edi]
  4091f4:	xchg   esp,eax
  4091f5:	lds    ebx,FWORD PTR [esi+0x3f31009f]
  4091fb:	xchg   BYTE PTR [esi],bh
  4091fd:	jns    0x40925d
  4091ff:	cld    
  409200:	and    bh,dl
  409202:	test   al,0xad
  409204:	mov    ebx,0x9deb5631
  409209:	and    eax,0x48b710c2
  40920e:	fsubr  DWORD PTR [ecx]
  409210:	mov    edx,0xeffb9abd
  409215:	pop    esp
  409216:	sbb    eax,0xbd1af4fc
  40921b:	test   BYTE PTR [esi-0x7153d786],cl
  409221:	cmp    al,0xb
  409223:	jp     0x409268
  409225:	dec    edi
  409226:	loopne 0x409271
  409228:	and    DWORD PTR [ebp+edi*1-0x134f53df],edx
  40922f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409230:	push   edx
  409231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409232:	(bad)  
  409233:	add    DWORD PTR ds:[edi+0x2e0535dd],eax
  40923a:	aaa    
  40923b:	leave  
  40923c:	push   esp
  40923d:	retf   0xb50b
  409240:	gs fst st(4)
  409243:	jp     0x4091e6
  409245:	mov    eax,ds:0x208c40a5
  40924a:	jl     0x40920d
  40924c:	inc    edi
  40924d:	(bad)  
  40924e:	out    dx,eax
  40924f:	xor    al,0x6f
  409251:	fisttp WORD PTR [ebx+esi*8+0x7e4ef8ad]
  409258:	shl    ebx,cl
  40925a:	mov    esp,DWORD PTR [esi-0x72]
  40925d:	icebp  
  40925e:	out    0x43,eax
  409260:	stos   DWORD PTR es:[edi],eax
  409261:	inc    ebx
  409262:	out    dx,al
  409263:	sbb    al,0xdc
  409265:	out    0xe4,al
  409267:	(bad)  
  409268:	cmc    
  409269:	jge    0x4092e9
  40926b:	push   esp
  40926c:	sbb    eax,0xc6324269
  409271:	dec    edx
  409272:	jnp    0x40929d
  409274:	cmp    BYTE PTR [ebp-0x2be767c0],dl
  40927a:	pop    ss
  40927b:	and    DWORD PTR [edx-0x6a812c9d],ebx
  409281:	inc    ecx
  409282:	mov    dl,ch
  409284:	outs   dx,DWORD PTR ds:[esi]
  409285:	xor    ah,BYTE PTR [esi+ebp*4]
  409288:	mov    ds:0x49bf784c,eax
  40928d:	jecxz  0x4092df
  40928f:	mov    ds:0x74ee9ecd,eax
  409294:	test   cl,al
  409296:	sbb    bh,ch
  409298:	pop    ebx
  409299:	jbe    0x4092d6
  40929b:	popf   
  40929c:	mov    ds:0x9ac0ad59,al
  4092a1:	leave  
  4092a2:	dec    ecx
  4092a3:	pushf  
  4092a4:	lods   eax,DWORD PTR ds:[esi]
  4092a5:	jl     0x4092dd
  4092a7:	cwde   
  4092a8:	inc    ecx
  4092a9:	fild   DWORD PTR ds:0xc99c5b60
  4092af:	dec    esp
  4092b0:	je     0x41f0640c
  4092b6:	adc    bl,al
  4092b8:	test   BYTE PTR [esi-0x27983ad4],0xbb
  4092bf:	ins    DWORD PTR es:[edi],dx
  4092c0:	adc    DWORD PTR [eax+0x48],ebx
  4092c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c4:	inc    esi
  4092c5:	jnp    0x40932a
  4092c7:	mov    BYTE PTR [edi],dh
  4092c9:	imul   esp,esi,0x636f1f33
  4092cf:	or     eax,0x93f26eea
  4092d4:	mov    edi,0x129a55c0
  4092d9:	mov    esi,0x952b6d84
  4092de:	pop    eax
  4092df:	cmp    DWORD PTR [ecx+0x62],esp
  4092e2:	mov    BYTE PTR [edx],al
  4092e4:	xor    bl,bl
  4092e6:	inc    ebx
  4092e7:	xchg   edi,eax
  4092e8:	xor    bh,BYTE PTR [edx-0x22]
  4092eb:	popa   
  4092ec:	imul   esp,DWORD PTR [edi],0x2f
  4092ef:	pop    edx
  4092f0:	or     bl,BYTE PTR [edx]
  4092f2:	jmp    0x409320
  4092f4:	leave  
  4092f5:	fs jp  0x4092a5
  4092f8:	mov    ebp,?
  4092fa:	sbb    al,0xf3
  4092fc:	mov    ebp,0xbc6641e1
  409301:	mul    BYTE PTR [ebx+0x60]
  409304:	pop    es
  409305:	dec    ebp
  409306:	les    ebx,FWORD PTR [ecx-0x4f]
  409309:	mov    edx,0x74f936cf
  40930e:	and    BYTE PTR [ebx+0xf],ah
  409311:	leave  
  409312:	pop    ss
  409313:	stos   DWORD PTR es:[edi],eax
  409314:	leave  
  409315:	jl     0x409394
  409317:	mov    edx,esi
  409319:	pusha  
  40931a:	jp     0x409399
  40931c:	sbb    eax,0x265b33e2
  409321:	popf   
  409322:	add    cl,BYTE PTR [edi+0x688bac6f]
  409328:	aad    0x87
  40932a:	jbe    0x409309
  40932c:	dec    ebp
  40932d:	inc    dl
  40932f:	push   edx
  409330:	cmp    BYTE PTR [edx-0x2a],ch
  409333:	out    0xc0,eax
  409335:	pop    edx
  409336:	push   cs
  409337:	out    dx,al
  409338:	imul   eax,DWORD PTR [ebp+0x69452ac0],0xc36ad5e7
  409342:	js     0x4092d4
  409344:	cmp    eax,0x529a17ee
  409349:	dec    eax
  40934a:	mov    esi,0x92bb7260
  40934f:	dec    ebp
  409350:	call   0xa5b74c40
  409355:	xchg   ebp,eax
  409356:	push   ebx
  409357:	sbb    DWORD PTR [ebp+0x5eca3bc4],0x9ff7f0bc
  409361:	pushf  
  409362:	mov    cl,0xa0
  409364:	rcl    BYTE PTR [ebx],0xfc
  409367:	push   0xe8de13e3
  40936c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40936e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40936f:	lods   al,BYTE PTR ds:[esi]
  409370:	jle    0x40938b
  409372:	je     0x40934d
  409374:	pop    ecx
  409375:	cwde   
  409376:	scas   al,BYTE PTR es:[edi]
  409377:	mov    BYTE PTR [edx+0x59e695c8],bh
  40937d:	call   0xf8:0x3d183f4c
  409384:	repz xchg ecx,eax
  409386:	push   cs
  409387:	mov    bl,0xc
  409389:	push   eax
  40938a:	and    DWORD PTR [edx],ebx
  40938c:	jo     0x409316
  40938e:	scas   eax,DWORD PTR es:[edi]
  40938f:	in     eax,dx
  409390:	ss push edi
  409392:	fldcw  WORD PTR [edx-0x5]
  409395:	pop    ebx
  409396:	inc    ebx
  409397:	dec    edx
  409398:	je     0x4093fc
  40939a:	adc    esi,DWORD PTR [edx]
  40939c:	aam    0xc9
  40939e:	jae    0x409321
  4093a0:	dec    edx
  4093a1:	loopne 0x40939b
  4093a3:	cs jg  0x40933e
  4093a6:	callw  0x791f
  4093aa:	stos   BYTE PTR es:[edi],al
  4093ab:	ret    
  4093ac:	fst    DWORD PTR [ebx-0xf]
  4093af:	int3   
  4093b0:	add    al,0x77
  4093b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093b3:	ret    
  4093b4:	ins    DWORD PTR es:[edi],dx
  4093b5:	daa    
  4093b6:	inc    ecx
  4093b7:	pop    ecx
  4093b8:	inc    ebx
  4093b9:	dec    ebx
  4093ba:	xchg   edi,eax
  4093bb:	inc    ebx
  4093bc:	repz je 0x40934b
  4093bf:	sub    al,0x2f
  4093c1:	ja     0x409436
  4093c3:	jne    0x409398
  4093c5:	fmul   DWORD PTR [ebp-0x10]
  4093c8:	mov    ds:0xc48d4066,eax
  4093cd:	or     DWORD PTR [edx],eax
  4093cf:	or     edx,DWORD PTR [edi]
  4093d1:	cmc    
  4093d2:	ss xchg esi,eax
  4093d4:	pop    esi
  4093d5:	push   ss
  4093d6:	sub    ch,BYTE PTR [eax]
  4093d8:	nop
  4093d9:	test   eax,0x9bf6a7e5
  4093de:	ja     0x4093d5
  4093e0:	mov    ch,0xe
  4093e2:	push   esp
  4093e3:	push   edi
  4093e4:	shl    cl,1
  4093e6:	mov    al,0xa1
  4093e8:	sbb    esi,ebp
  4093ea:	stc    
  4093eb:	add    cl,BYTE PTR [ebp-0x6b]
  4093ee:	jb     0x4093b1
  4093f0:	jns    0x40943c
  4093f2:	ds sahf 
  4093f4:	(bad)  
  4093f5:	(bad)  
  4093f6:	je     0x4093b6
  4093f8:	jnp    0x409420
  4093fa:	stc    
  4093fb:	cmp    dh,BYTE PTR [edi-0x9c2e8ee]
  409401:	xchg   ebp,eax
  409402:	xor    eax,0x61068c5e
  409407:	int    0xf
  409409:	mov    DWORD PTR ds:0xba9244b1,ebx
  40940f:	inc    esi
  409410:	xchg   ebx,eax
  409411:	int3   
  409412:	in     al,0x14
  409414:	lahf   
  409415:	cdq    
  409416:	pop    edx
  409417:	cmp    ecx,DWORD PTR [ecx+0x4e17f3cb]
  40941d:	push   ss
  40941e:	sub    al,0xd6
  409420:	mov    ?,WORD PTR [esi-0x6c553d82]
  409426:	sbb    bx,WORD PTR [esi+0x7e]
  40942a:	popf   
  40942b:	mov    al,ds:0xe385e2a1
  409430:	inc    ebx
  409431:	pop    ds
  409432:	imul   ecx,DWORD PTR ds:0x8d851f6b,0x8148e92b
  40943c:	(bad)  
  40943d:	shr    DWORD PTR [ecx],1
  40943f:	xor    BYTE PTR [edx-0x61ce8373],cl
  409445:	ins    WORD PTR es:[edi],dx
  409447:	outs   dx,DWORD PTR ds:[esi]
  409448:	push   esi
  409449:	mov    dl,0x8b
  40944b:	mov    cl,0xf6
  40944d:	pop    ecx
  40944e:	jmp    0x1b75:0xaa98426
  409455:	adc    bl,ch
  409457:	aaa    
  409458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409459:	sbb    cl,al
  40945b:	sub    al,0xfc
  40945d:	mov    WORD PTR [edx-0x12a0ddd1],gs
  409463:	dec    esi
  409464:	test   eax,0xa21bfd8e
  409469:	mov    ecx,0x38ab5cc0
  40946e:	pop    edi
  40946f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409470:	jne    0x409479
  409472:	pop    ebp
  409473:	pop    edx
  409474:	xor    al,0x5d
  409476:	fs pop edi
  409478:	add    edx,edi
  40947a:	jg     0x4094d6
  40947c:	sbb    BYTE PTR [edx+0x4ee4ca54],dh
  409482:	pop    ds
  409483:	push   ss
  409484:	or     BYTE PTR [ecx],dl
  409486:	cs inc esp
  409488:	mov    ds:0xaf4224a0,al
  40948d:	nop
  40948e:	mov    edi,0xdaa79bb3
  409493:	ret    0x317c
  409496:	jb     0x4094b5
  409498:	retf   
  409499:	jmp    0xc6a1:0xee4eb8a2
  4094a0:	std    
  4094a1:	dec    eax
  4094a2:	fs push 0xffffffe9
  4094a5:	xlat   BYTE PTR ds:[ebx]
  4094a6:	dec    edx
  4094a7:	ins    BYTE PTR es:[edi],dx
  4094a8:	xchg   ecx,eax
  4094a9:	in     eax,0x54
  4094ab:	pop    eax
  4094ac:	or     esp,ebp
  4094ae:	dec    ecx
  4094af:	push   ebx
  4094b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094b1:	inc    eax
  4094b2:	dec    ebp
  4094b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094b4:	mov    esi,0x3cdf9f53
  4094b9:	mov    edi,0xac94763d
  4094be:	jl     0x40949d
  4094c0:	cdq    
  4094c1:	jns    0x409464
  4094c3:	xor    al,al
  4094c5:	add    edi,edx
  4094c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094c8:	stos   DWORD PTR es:[edi],eax
  4094c9:	mov    bh,0xf1
  4094cb:	loope  0x4094be
  4094cd:	xchg   esp,eax
  4094ce:	sti    
  4094cf:	dec    esp
  4094d0:	fcmovbe st,st(2)
  4094d2:	lock retf 0x4e45
  4094d6:	mov    ds:0x1555f281,al
  4094db:	adc    DWORD PTR [edi-0x78bd810e],esp
  4094e1:	js     0x4094ac
  4094e3:	cmc    
  4094e4:	jmp    0x20611628
  4094e9:	ja     0x409506
  4094eb:	enter  0xf8df,0x2c
  4094ef:	sub    dl,BYTE PTR [eax+0x23e2841d]
  4094f5:	fwait
  4094f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f7:	pop    edx
  4094f8:	push   ss
  4094f9:	pop    esp
  4094fa:	push   es
  4094fb:	(bad)  
  4094fc:	jne    0x4094e8
  4094fe:	mov    al,0x4e
  409501:	stos   BYTE PTR es:[edi],al
  409502:	ds sub ecx,edi
  409505:	into   
  409506:	mov    eax,0x56665a84
  40950b:	inc    ecx
  40950c:	add    esp,DWORD PTR [edx]
  40950e:	aam    0x5
  409510:	(bad)  
  409511:	aaa    
  409512:	mov    eax,0xa5a78a07
  409517:	fdiv   QWORD PTR [edi+eiz*4-0x40]
  40951b:	ins    DWORD PTR es:[edi],dx
  40951c:	or     esi,eax
  40951e:	push   cs
  40951f:	lock xor eax,0xf8e3f982
  409525:	out    dx,eax
  409526:	or     eax,0x498e002e
  40952b:	mov    esi,0xb713a5e
  409530:	fst    QWORD PTR [ecx-0x363afef3]
  409536:	popa   
  409537:	(bad)  
  409538:	scas   eax,DWORD PTR es:[edi]
  409539:	lds    ebx,FWORD PTR [edx+0x68]
  40953c:	or     eax,0x8eeff09a
  409541:	mov    edi,DWORD PTR [ecx]
  409543:	mul    DWORD PTR [eax+0x3e]
  409546:	shl    BYTE PTR [esi],0x42
  409549:	add    bh,bl
  40954b:	add    edx,DWORD PTR [ebx+0x3e]
  40954e:	dec    edx
  40954f:	(bad)
  409552:	pop    ebp
  409553:	gs cmp ch,BYTE PTR cs:[esi-0x23687a18]
  40955b:	dec    ecx
  40955c:	test   al,0xa5
  40955e:	jecxz  0x40956e
  409560:	pcmpeqw mm0,QWORD PTR [ebx+0x77]
  409564:	push   cs
  409565:	xor    eax,0xae768cd2
  40956a:	mov    eax,0xc5ee708b
  40956f:	add    al,0xbd
  409571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409572:	out    dx,eax
  409573:	sti    
  409574:	mov    ecx,0x2ec1cb51
  409579:	loop   0x409523
  40957b:	sub    al,0xb1
  40957d:	pop    esp
  40957e:	jle    0x40950d
  409580:	add    DWORD PTR [ebp+0x2e735642],edi
  409586:	call   0xf63bce26
  40958b:	hlt    
  40958c:	mov    ebx,0x37c61695
  409591:	or     al,0x89
  409593:	pushf  
  409594:	jmp    0x14db37c2
  409599:	mov    al,0xf5
  40959b:	adc    DWORD PTR [ecx+eiz*4-0x37fe2d5],ebx
  4095a2:	in     eax,dx
  4095a3:	jo     0x4095ee
  4095a5:	dec    edx
  4095a6:	mov    al,0xe2
  4095a8:	aad    0x3f
  4095aa:	sub    esi,ebx
  4095ac:	out    dx,al
  4095ad:	aam    0x62
  4095af:	and    al,0xd9
  4095b1:	inc    ebp
  4095b2:	mov    ebx,0x4663e6f5
  4095b7:	pushf  
  4095b8:	inc    ebx
  4095b9:	sbb    al,ch
  4095bb:	(bad)  
  4095bc:	mov    bh,0x63
  4095be:	push   ecx
  4095bf:	stos   DWORD PTR es:[edi],eax
  4095c0:	pop    es
  4095c1:	add    DWORD PTR [esp+eiz*8+0x61f906b6],eax
  4095c8:	ffree  st(3)
  4095ca:	repnz stos DWORD PTR es:[edi],eax
  4095cc:	xchg   esp,eax
  4095cd:	sub    dl,BYTE PTR [ebx+ebx*4+0x257294d4]
  4095d4:	mov    eax,DWORD PTR [bx]
  4095d7:	mov    al,ds:0xcadbf8c6
  4095dc:	stc    
  4095dd:	pop    es
  4095de:	inc    ebx
  4095df:	adc    eax,0xeb6aa3a2
  4095e4:	xor    dl,BYTE PTR [esi-0x7a247c1d]
  4095ea:	fldenv [edx-0x4cc07af9]
  4095f0:	adc    edi,DWORD PTR [ebp-0x66]
  4095f3:	push   ds
  4095f4:	enter  0x1afb,0x3e
  4095f8:	nop
  4095f9:	es pop edx
  4095fb:	dec    ebp
  4095fc:	adc    ah,cl
  4095fe:	mov    edi,0x47f90a1c
  409603:	adc    al,0xb4
  409605:	sbb    edi,DWORD PTR [esi]
  409607:	sbb    bl,BYTE PTR [ebp-0x3dec99d8]
  40960d:	push   ds
  40960e:	push   ds
  40960f:	push   ecx
  409610:	les    esp,FWORD PTR [ebx-0x71]
  409613:	test   BYTE PTR [eax+0x4f],cl
  409616:	pop    esp
  409617:	pop    esp
  409618:	(bad)  
  409619:	out    0x93,eax
  40961b:	inc    ebp
  40961c:	push   0xffffffd0
  40961e:	add    al,0x34
  409620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409621:	sahf   
  409622:	sbb    cl,BYTE PTR [esi]
  409624:	clc    
  409625:	imul   ecx,DWORD PTR [ebp-0x3c75397e],0xc05631f7
  40962f:	test   al,0x96
  409631:	jmp    0xcbcfe01
  409636:	sub    eax,0x490c5b58
  40963b:	or     BYTE PTR [ecx-0x58440d95],0xc7
  409642:	mov    ebx,0xed778ec3
  409647:	push   esi
  409648:	sbb    al,0x67
  40964a:	fmul   DWORD PTR [edi+0x5b2d6438]
  409650:	jl     0x409613
  409652:	dec    ecx
  409653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409654:	xor    al,0x59
  409656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409657:	dec    esi
  409658:	jno    0x409635
  40965a:	push   edi
  40965b:	hlt    
  40965c:	in     al,0x2f
  40965e:	cmp    al,0x7a
  409660:	test   DWORD PTR [edi-0x26df2075],ebx
  409666:	xchg   ecx,eax
  409667:	sbb    BYTE PTR [esi-0x483843a],dl
  40966d:	inc    edx
  40966e:	push   edi
  40966f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409670:	out    0x4f,al
  409672:	daa    
  409673:	out    0xbe,eax
  409675:	scas   al,BYTE PTR es:[edi]
  409676:	fisubr WORD PTR [ebx-0x1c]
  409679:	mov    al,0xd9
  40967b:	sbb    BYTE PTR [edx+edi*1],0xfc
  40967f:	fwait
  409680:	jle    0x409615
  409682:	mov    dh,0xde
  409684:	jge    0x4096b1
  409686:	lahf   
  409687:	pop    edx
  409688:	(bad)  
  409689:	loopne 0x409637
  40968b:	jns    0x4096dd
  40968d:	stc    
  40968e:	loop   0x4096d8
  409690:	(bad)  
  409692:	out    dx,eax
  409693:	in     al,0xcb
  409695:	ins    DWORD PTR es:[edi],dx
  409696:	mov    ah,BYTE PTR [ebx-0x4f]
  409699:	lea    esi,[edx]
  40969b:	ins    DWORD PTR es:[edi],dx
  40969c:	sub    DWORD PTR [edx+ebx*8],esp
  40969f:	mov    ch,BYTE PTR [ecx-0x34d302c3]
  4096a5:	xor    dh,BYTE PTR [ebx+esi*8]
  4096a8:	int    0x6d
  4096aa:	lahf   
  4096ab:	das    
  4096ac:	dec    ebx
  4096ad:	xchg   edi,eax
  4096ae:	and    eax,0x4573f8b9
  4096b3:	jl     0x409687
  4096b5:	push   eax
  4096b6:	mov    DWORD PTR [ebx],eax
  4096b8:	xor    al,0x65
  4096ba:	mov    bh,0xc
  4096bc:	xor    al,0x4b
  4096be:	jmp    0xf631:0x3327f20e
  4096c5:	stc    
  4096c6:	ss pushf 
  4096c8:	sti    
  4096c9:	gs xchg ecx,eax
  4096cb:	lahf   
  4096cc:	jecxz  0x4096c4
  4096ce:	into   
  4096cf:	jg     0x40974f
  4096d1:	jmp    0x4096fb
  4096d3:	sbb    BYTE PTR [edi],bl
  4096d5:	ret    0x3b07
  4096d8:	sbb    al,0xa0
  4096da:	ss inc edi
  4096dc:	mov    ss:0x22c8e6e6,eax
  4096e2:	dec    edi
  4096e3:	mov    ebx,0xb18fbf3c
  4096e8:	jo     0x409716
  4096ea:	cmp    dl,ch
  4096ec:	jmp    0x26aaf353
  4096f1:	xchg   ecx,eax
  4096f2:	popf   
  4096f3:	loope  0x40974a
  4096f5:	mov    eax,0xae2313cd
  4096fa:	adc    al,0xb2
  4096fc:	mov    ?,WORD PTR [esi-0x7f]
  4096ff:	pop    edi
  409700:	aad    0x38
  409702:	xor    al,0x6a
  409704:	leave  
  409705:	test   DWORD PTR [ebp+0x429027b5],0xaa95638c
  40970f:	cmp    DWORD PTR [ecx-0xe],ebx
  409712:	mov    ch,0x6a
  409714:	mov    DWORD PTR [esi+0x52],edx
  409717:	fnstsw WORD PTR [esi-0x50]
  40971a:	jne    0x40971a
  40971c:	ret    
  40971d:	pop    ds
  40971e:	pop    edx
  40971f:	push   cs
  409720:	lds    edx,FWORD PTR [ebp-0x5ee7329c]
  409726:	(bad)  
  409727:	mov    ?,esi
  409729:	fwait
  40972a:	mov    ds:0xfecd86d,al
  40972f:	nop
  409730:	into   
  409731:	sub    bl,BYTE PTR [eax-0x32354f3b]
  409737:	shl    BYTE PTR [ebp-0x3782417f],1
  40973d:	adc    eax,0xed604e65
  409742:	std    
  409743:	adc    DWORD PTR [eax],esi
  409745:	(bad)  
  409746:	jl     0x409736
  409748:	int    0xf
  40974a:	and    dh,cl
  40974c:	popa   
  40974d:	sbb    bh,BYTE PTR [esi+ebx*1+0x3315ec6c]
  409754:	mov    DWORD PTR [edx],edx
  409756:	sub    ah,dh
  409758:	enter  0xf67a,0xd8
  40975c:	mov    eax,0x3edfa5a4
  409761:	stos   DWORD PTR es:[edi],eax
  409762:	in     eax,dx
  409763:	mov    esp,0xfb009c9a
  409768:	pop    ebp
  409769:	xor    BYTE PTR [edx],ah
  40976b:	outs   dx,DWORD PTR ss:[esi]
  40976d:	dec    ebx
  40976e:	mov    WORD PTR [ebx+0x7aa5ee18],ss
  409774:	push   ds
  409775:	mov    cs,WORD PTR [edx+esi*4+0x38]
  409779:	push   ss
  40977a:	pop    es
  40977b:	pop    eax
  40977c:	imul   eax,ebp,0xb9038a1a
  409782:	loopne 0x4097dc
  409784:	sar    BYTE PTR [ebx],1
  409786:	jmp    FWORD PTR [edx+0x5ff49855]
  40978c:	jecxz  0x40980c
  40978e:	fistp  WORD PTR [edi]
  409790:	in     al,dx
  409791:	xchg   DWORD PTR [esi],esi
  409793:	in     eax,dx
  409794:	pop    esi
  409795:	out    dx,al
  409796:	push   esp
  409797:	scas   eax,DWORD PTR es:[edi]
  409798:	js     0x409740
  40979a:	jo     0x40977f
  40979c:	outs   dx,BYTE PTR ds:[esi]
  40979d:	jb     0x40979a
  40979f:	push   es
  4097a0:	jecxz  0x409812
  4097a2:	cld    
  4097a3:	sub    esi,DWORD PTR [eax-0x21]
  4097a6:	adc    al,0x6b
  4097a8:	(bad)  
  4097a9:	(bad)  
  4097ab:	aaa    
  4097ac:	jo     0x40980c
  4097ae:	xlat   BYTE PTR ds:[ebx]
  4097af:	rol    DWORD PTR [ebp+0x60],0xbd
  4097b3:	ins    DWORD PTR es:[edi],dx
  4097b4:	xor    cl,BYTE PTR [ecx+0x67]
  4097b7:	lahf   
  4097b8:	test   BYTE PTR [ecx+0x6019bc2c],ah
  4097be:	js     0x4097bd
  4097c0:	add    al,0x60
  4097c2:	mov    dl,0xd0
  4097c4:	stos   DWORD PTR es:[edi],eax
  4097c5:	sbb    dh,BYTE PTR [ebx+0x6d6b3afb]
  4097cb:	or     bh,0xcf
  4097ce:	inc    edx
  4097cf:	popf   
  4097d0:	push   0x5a
  4097d2:	mov    dl,0x36
  4097d4:	lds    ebx,FWORD PTR [esi+0x79]
  4097d7:	loope  0x40978e
  4097d9:	inc    ecx
  4097da:	aaa    
  4097db:	aad    0xec
  4097dd:	push   eax
  4097de:	mov    bh,0x91
  4097e0:	mov    dh,0x2d
  4097e2:	lahf   
  4097e3:	sub    BYTE PTR [edx],bl
  4097e5:	push   ds
  4097e6:	pop    ds
  4097e7:	pop    esp
  4097e8:	daa    
  4097e9:	into   
  4097ea:	xchg   ecx,eax
  4097eb:	shl    cl,0x1c
  4097ee:	xor    bh,al
  4097f0:	push   edx
  4097f1:	cmc    
  4097f2:	xor    eax,0x319975ea
  4097f7:	and    BYTE PTR [edx],cl
  4097f9:	or     ecx,ebp
  4097fb:	out    dx,eax
  4097fc:	out    0x8c,eax
  4097fe:	inc    edi
  4097ff:	sub    BYTE PTR [ebx],bh
  409801:	inc    edx
  409802:	aas    
  409803:	imul   esp,DWORD PTR [edx],0x7ede4644
  409809:	cmp    eax,DWORD PTR [edx-0x3b]
  40980c:	jno    0x40988d
  40980e:	(bad)  
  40980f:	aam    0x9c
  409811:	sti    
  409812:	dec    ebx
  409813:	jp     0x4097c6
  409815:	or     al,0xb9
  409817:	int3   
  409818:	fdivr  QWORD PTR [edi+0x19]
  40981b:	aad    0x9b
  40981d:	jge    0x409860
  40981f:	pop    edi
  409820:	(bad)  
  409821:	mov    ch,0x5e
  409823:	mov    ds:0xc9b76e7c,al
  409828:	cwde   
  409829:	pop    ebp
  40982a:	push   ebp
  40982b:	cs paddsb mm7,mm6
  40982f:	cmc    
  409830:	and    esp,DWORD PTR [edx]
  409832:	rcl    DWORD PTR [edi-0x6],1
  409835:	les    ebp,FWORD PTR [ecx+ebp*1-0xab8b79e]
  40983c:	(bad)  
  40983d:	in     eax,0xbc
  40983f:	pop    edi
  409840:	sub    al,0x53
  409842:	out    dx,al
  409843:	xchg   esp,eax
  409844:	pop    ss
  409845:	jmp    0x1aba:0xdcdd8c99
  40984c:	pop    esp
  40984d:	lods   al,BYTE PTR ds:[esi]
  40984e:	or     BYTE PTR [ebp-0x3a2b8697],al
  409854:	or     BYTE PTR [esp+edi*4],ah
  409857:	retf   0x295b
  40985a:	and    ebx,DWORD PTR [eax-0x5b]
  40985d:	cld    
  40985e:	jmp    0x4098c2
  409860:	xor    edi,DWORD PTR [bx]
  409863:	call   0xea6:0xc2c26d1a
  40986a:	pop    edx
  40986b:	ret    0x8288
  40986e:	jg     0x40988b
  409870:	add    al,0x65
  409872:	sahf   
  409873:	jne    0x4098b3
  409875:	shr    al,1
  409877:	repnz std 
  409879:	retf   0x87a8
  40987c:	push   edi
  40987d:	in     al,0x27
  40987f:	sbb    eax,0xc13453b2
  409884:	xor    eax,0xa90a8b50
  409889:	pop    es
  40988a:	scas   al,BYTE PTR es:[edi]
  40988b:	jecxz  0x409868
  40988d:	loopne 0x40986e
  40988f:	push   ecx
  409890:	jbe    0x409890
  409892:	adc    ebx,ebx
  409894:	jne    0x409823
  409896:	cmc    
  409897:	mov    ebp,0x726aa93e
  40989c:	lods   eax,DWORD PTR ds:[esi]
  40989d:	push   DWORD PTR [ebx]
  40989f:	inc    esp
  4098a0:	call   0xfa55cc8f
  4098a5:	fild   DWORD PTR [eax-0x7]
  4098a8:	stc    
  4098a9:	inc    eax
  4098aa:	jl     0x4098f1
  4098ac:	push   esp
  4098ad:	shl    BYTE PTR [ecx-0x59c0cc58],cl
  4098b3:	mov    bl,0x91
  4098b5:	or     al,0xa2
  4098b7:	out    0xbd,eax
  4098b9:	hlt    
  4098ba:	dec    esp
  4098bb:	push   edi
  4098bc:	aad    0x50
  4098be:	fwait
  4098bf:	inc    esi
  4098c0:	xor    eax,0x6ebaa1a5
  4098c5:	mov    ebx,0xb054188
  4098ca:	cmp    eax,0x22268eec
  4098cf:	ficomp DWORD PTR [eax]
  4098d1:	leave  
  4098d2:	inc    ebx
  4098d3:	clc    
  4098d4:	jno    0x4098b1
  4098d6:	inc    ebx
  4098d7:	mov    ecx,0x9ef8bb27
  4098dc:	pop    eax
  4098dd:	pop    edx
  4098de:	push   0x65e4e586
  4098e3:	fisub  DWORD PTR [ecx-0x53]
  4098e6:	dec    eax
  4098e7:	pushw  es
  4098e9:	pop    ecx
  4098ea:	mov    edi,0x7f4e6bf4
  4098ef:	fld    DWORD PTR [ebp+0x26088154]
  4098f5:	add    al,0xb
  4098f7:	add    DWORD PTR [edx+0x7b2224de],0x1be10aea
  409901:	dec    ebx
  409902:	cmc    
  409903:	jp     0x4098b2
  409905:	lods   al,BYTE PTR ds:[esi]
  409906:	es call 0x2d6:0x84d847be
  40990e:	push   edx
  40990f:	cmp    dl,BYTE PTR [eax+0x51]
  409912:	in     al,dx
  409913:	or     cl,dl
  409915:	sbb    al,0x75
  409917:	ins    BYTE PTR es:[edi],dx
  409918:	jmp    0x9cdf54f2
  40991d:	in     eax,0x3f
  40991f:	push   edi
  409920:	cs cmp eax,0x3397d4c5
  409926:	push   cs
  409927:	in     eax,0xfa
  409929:	popa   
  40992a:	or     bl,BYTE PTR [edx+0x22]
  40992d:	and    bh,BYTE PTR [eax-0x4f]
  409930:	lea    edx,[esi+0x19]
  409933:	inc    esp
  409934:	ret    0x7b2e
  409937:	xor    eax,0xfd934438
  40993c:	dec    esi
  40993d:	jl     0x4099b3
  40993f:	cdq    
  409940:	stos   DWORD PTR es:[edi],eax
  409941:	outs   dx,DWORD PTR ds:[esi]
  409942:	(bad)  
  409943:	sti    
  409944:	jo     0x409940
  409946:	fistp  WORD PTR [edx*4-0x3bb2950]
  40994d:	cli    
  40994e:	cwde   
  40994f:	push   edi
  409950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409951:	or     eax,0x56e1ed5f
  409956:	pop    ecx
  409957:	and    BYTE PTR [ecx],ah
  409959:	add    ecx,edi
  40995b:	adc    BYTE PTR [eax+edi*2],cl
  40995e:	jmp    0x14bfbf84
  409963:	lahf   
  409964:	scas   al,BYTE PTR es:[edi]
  409965:	out    dx,al
  409966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409967:	mov    al,ds:0x5e55db8d
  40996c:	xchg   esp,eax
  40996d:	loop   0x4099b8
  40996f:	xchg   esi,eax
  409970:	out    dx,eax
  409971:	sbb    eax,0x45609254
  409976:	push   edi
  409977:	jb     0x4099ed
  409979:	js     0x409950
  40997b:	inc    esp
  40997c:	stos   BYTE PTR es:[edi],al
  40997d:	add    eax,0x4f7a0b17
  409982:	and    DWORD PTR [edi-0x71b54f1e],edi
  409988:	pop    es
  409989:	and    bh,BYTE PTR ds:0xd9ce9114
  40998f:	aaa    
  409990:	in     al,0x46
  409992:	inc    ebp
  409993:	mov    ebx,0x1d9c4d05
  409998:	xchg   ebx,eax
  409999:	test   eax,0x8be9529c
  40999e:	add    BYTE PTR fs:[esi-0x72d1cffd],ah
  4099a5:	fisubr WORD PTR [ebp+0x3f2b1a88]
  4099ab:	push   ebp
  4099ac:	mov    fs:0x2d4cb8d9,eax
  4099b2:	in     eax,0xd9
  4099b4:	out    0x8d,eax
  4099b6:	xor    BYTE PTR [edi],0xdd
  4099b9:	aaa    
  4099ba:	xchg   edx,eax
  4099bb:	cwde   
  4099bc:	leave  
  4099bd:	jne    0x40996a
  4099bf:	sbb    eax,0xb256b9f4
  4099c4:	xor    esi,DWORD PTR [eax+0x722e5206]
  4099ca:	xchg   bl,ch
  4099cc:	shl    BYTE PTR [edx-0x3cb2427d],0x58
  4099d3:	mov    ebp,0x246008fd
  4099d8:	ds pop edx
  4099da:	mov    WORD PTR [edx+ebx*2],ss
  4099dd:	(bad)  
  4099de:	jge    0x4099fd
  4099e0:	add    BYTE PTR [ebp-0x7c6205e1],cl
  4099e6:	rol    bh,0x6c
  4099e9:	lods   eax,DWORD PTR ds:[esi]
  4099ea:	lahf   
  4099eb:	push   0xca74c0a8
  4099f0:	pop    ebx
  4099f1:	sub    ch,BYTE PTR ds:0xe6833546
  4099f7:	sahf   
  4099f8:	enter  0x97a6,0xa6
  4099fc:	shr    bl,0xcd
  4099ff:	cmp    cl,bl
  409a01:	fs inc esi
  409a03:	sbb    ebp,DWORD PTR [edi-0x33343259]
  409a09:	je     0x409a84
  409a0b:	xor    DWORD PTR [ecx*1-0xfd3f4a9],0x25ca8b35
  409a16:	fisttp WORD PTR [ebp+0x25b3d6cf]
  409a1c:	out    0xba,eax
  409a1e:	cmp    DWORD PTR [eax-0x4e],edx
  409a21:	es xchg edx,eax
  409a23:	add    DWORD PTR [ecx],eax
  409a25:	jecxz  0x4099ff
  409a27:	pop    esi
  409a28:	add    eax,edi
  409a2a:	or     al,0x5c
  409a2c:	fstp   TBYTE PTR [edi+edi*2+0x47]
  409a30:	jle    0x4099c5
  409a32:	inc    esp
  409a33:	daa    
  409a34:	mov    edi,0xeea5ceae
  409a39:	cdq    
  409a3a:	fsubp  st(1),st
  409a3c:	ss jno 0x4099e2
  409a3f:	inc    ecx
  409a40:	scas   eax,DWORD PTR es:[edi]
  409a41:	in     eax,0x16
  409a43:	les    esi,FWORD PTR [esp+ebp*1-0x675c35d5]
  409a4a:	pushf  
  409a4b:	xor    dh,BYTE PTR ds:0xd0f30b36
  409a51:	(bad)  
  409a52:	das    
  409a53:	mov    cl,0xba
  409a55:	push   esi
  409a56:	retf   
  409a57:	mov    bh,0xcb
  409a59:	inc    edi
  409a5a:	setae  BYTE PTR ds:0x73de221f
  409a61:	cmc    
  409a62:	adc    bh,dl
  409a64:	adc    al,0xe7
  409a66:	sar    dl,1
  409a68:	or     DWORD PTR ds:0xa1c0ec16,ecx
  409a6e:	cli    
  409a6f:	bound  ebp,QWORD PTR [eax+0x31]
  409a72:	adc    al,0x1d
  409a74:	push   ebx
  409a75:	leave  
  409a76:	lods   eax,DWORD PTR ds:[esi]
  409a77:	out    0xa8,al
  409a79:	int    0xb2
  409a7b:	sub    esi,DWORD PTR ds:0xb7d9f5b
  409a81:	inc    esp
  409a82:	jnp    0x409a31
  409a84:	(bad)  
  409a85:	idiv   BYTE PTR [eax]
  409a87:	xchg   ecx,ebp
  409a89:	hlt    
  409a8a:	dec    ebp
  409a8b:	jno    0x409aa6
  409a8d:	retf   0xbb5b
  409a90:	sbb    edi,DWORD PTR [esi+0x100b5e6e]
  409a96:	cwde   
  409a97:	outs   dx,BYTE PTR ds:[esi]
  409a98:	fnstenv [esi]
  409a9a:	jle    0x409ae8
  409a9c:	pop    ecx
  409a9d:	add    ecx,DWORD PTR [ebx-0x76882a0f]
  409aa3:	mov    esp,0xc2e0c42a
  409aa8:	or     BYTE PTR [esi-0x26b7a7f9],ah
  409aae:	mov    ch,0xc5
  409ab0:	rcl    BYTE PTR [ebx-0x3a],1
  409ab3:	mov    eax,ds:0x818949de
  409ab8:	mov    esi,0xf2daa695
  409abd:	pop    es
  409abe:	loopne 0x409aa2
  409ac0:	and    ebp,DWORD PTR ds:0xe98ce1b9
  409ac6:	(bad)  
  409ac7:	and    DWORD PTR gs:[ebx+0x66],0xffffff8e
  409acc:	pop    ebp
  409acd:	xchg   ebx,eax
  409ace:	adc    DWORD PTR [edi],0xfd7604aa
  409ad4:	mov    cl,BYTE PTR [ecx+ebp*2]
  409ad7:	pop    ebp
  409ad8:	xchg   ecx,eax
  409ad9:	xor    dl,al
  409adb:	xor    DWORD PTR [eax+0x2a],esi
  409ade:	fldenv [eax+0x1f2230d4]
  409ae4:	ret    
  409ae5:	fldenv [eax+eiz*1-0x6c]
  409ae9:	sub    eax,0xbd9be78
  409aee:	clc    
  409aef:	mov    al,ds:0x7ceda14f
  409af4:	xor    edx,DWORD PTR [edx]
  409af6:	sar    dl,cl
  409af8:	cli    
  409af9:	rcl    DWORD PTR [edx+0x24],cl
  409afc:	xchg   esi,eax
  409afd:	call   0xebae:0xef90820
  409b04:	adc    edx,DWORD PTR [edi-0x67]
  409b07:	int3   
  409b08:	fs dec ebp
  409b0a:	xchg   ebp,eax
  409b0b:	xchg   ecx,eax
  409b0c:	cli    
  409b0d:	push   0xfffffff6
  409b0f:	dec    ebx
  409b10:	sti    
  409b11:	push   ecx
  409b12:	aam    0x9a
  409b14:	popa   
  409b15:	xlat   BYTE PTR ds:[ebx]
  409b16:	sbb    DWORD PTR [ebp+0x64],edx
  409b19:	shl    edx,0xfd
  409b1c:	push   ecx
  409b1d:	mov    ecx,0x6e03f8a
  409b22:	and    al,0x7b
  409b24:	fsub   st,st(0)
  409b26:	xchg   esi,eax
  409b27:	xor    eax,0xd130cb55
  409b2c:	sbb    edi,DWORD PTR [ebx+0x44]
  409b2f:	and    eax,0x583381bd
  409b34:	sbb    BYTE PTR [eax],0xf1
  409b37:	add    esp,DWORD PTR ds:0x7afdf069
  409b3d:	adc    ch,BYTE PTR [ebx]
  409b3f:	jno    0x409b00
  409b41:	jmp    0x231e:0xe84969b8
  409b48:	pop    es
  409b49:	inc    esp
  409b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b4b:	add    al,0x12
  409b4d:	test   al,0x9f
  409b4f:	addr16 push ebx
  409b51:	jmp    0x540898b8
  409b56:	ficomp DWORD PTR [esi+0x17]
  409b59:	stos   DWORD PTR es:[edi],eax
  409b5a:	dec    ebp
  409b5b:	cmp    eax,0x5f7013cc
  409b60:	xchg   esi,eax
  409b61:	shl    DWORD PTR [esi+0x505b29db],1
  409b67:	(bad)  
  409b68:	outs   dx,DWORD PTR ds:[esi]
  409b69:	fs jmp 0x323710fc
  409b6f:	enter  0x9f6c,0xa7
  409b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b74:	inc    ebx
  409b75:	or     al,0xf
  409b77:	xor    eax,0x3e803cf6
  409b7c:	inc    ebp
  409b7d:	in     al,0xa9
  409b7f:	inc    edx
  409b80:	sbb    BYTE PTR [edx],dh
  409b82:	shl    DWORD PTR [ecx-0x576d1af],cl
  409b88:	shl    BYTE PTR [ebp+0x79b8dab8],1
  409b8e:	in     eax,dx
  409b8f:	scas   eax,DWORD PTR es:[edi]
  409b90:	(bad)  
  409b91:	mov    esi,0x273514d5
  409b96:	mov    WORD PTR [eax-0x5b],ss
  409b99:	mov    ah,0xf0
  409b9b:	lea    ecx,[ebx-0x25b6d148]
  409ba1:	inc    edi
  409ba2:	cmc    
  409ba3:	xor    dl,0xe4
  409ba6:	jbe    0x409c02
  409ba8:	add    DWORD PTR [eax],ebx
  409baa:	push   ss
  409bab:	pop    edx
  409bac:	mov    al,ds:0x436c7fff
  409bb1:	push   es
  409bb2:	sub    al,0x6d
  409bb4:	mov    ecx,0xc3463b2c
  409bb9:	ret    0xf430
  409bbc:	jg     0x409b7b
  409bbe:	add    ah,BYTE PTR [ebx]
  409bc0:	jmp    0x65148d45
  409bc5:	ins    DWORD PTR es:[edi],dx
  409bc6:	pop    ecx
  409bc7:	push   cs
  409bc8:	lahf   
  409bc9:	pop    ds
  409bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bcb:	ret    0x98e2
  409bce:	pop    eax
  409bcf:	mov    dl,0x70
  409bd1:	jle    0x409b75
  409bd3:	mov    edi,0x350e55ea
  409bd8:	and    esp,esi
  409bda:	lahf   
  409bdb:	pusha  
  409bdc:	cmc    
  409bdd:	dec    ebx
  409bde:	pop    ss
  409bdf:	push   edi
  409be0:	mov    esp,0xea938c5d
  409be5:	mov    ecx,esi
  409be7:	pusha  
  409be8:	clc    
  409be9:	mov    edi,0xb6d5b3e7
  409bee:	ins    DWORD PTR es:[edi],dx
  409bef:	enter  0x3e60,0xf
  409bf3:	jmp    0x7aa6:0x951331de
  409bfa:	retf   0x3cd8
  409bfd:	mov    eax,ds:0x6f972799
  409c02:	push   esp
  409c03:	pop    ebp
  409c04:	adc    bl,ah
  409c06:	push   ebx
  409c07:	(bad)  
  409c09:	jle    0x409c78
  409c0b:	jnp    0x409c5e
  409c0d:	and    ebp,DWORD PTR [edx+0x3aab9d56]
  409c13:	ja     0x409c74
  409c15:	sbb    cl,bh
  409c17:	call   0x680c:0x50b5ae45
  409c1e:	sti    
  409c1f:	sbb    al,BYTE PTR [edx+esi*8]
  409c22:	std    
  409c23:	inc    edi
  409c24:	add    BYTE PTR fs:[esi+0x2ef61ba2],ch
  409c2b:	sbb    bh,BYTE PTR [esp+eiz*8-0x1eb9b9ea]
  409c32:	mov    edi,0x32a4fd2d
  409c37:	cmp    bh,BYTE PTR fs:[esi-0x3e5767df]
  409c3e:	mov    esi,0x9234a949
  409c43:	in     eax,dx
  409c44:	pop    ebx
  409c45:	mov    ecx,0x99f68253
  409c4a:	in     al,0xea
  409c4c:	fmulp  st(1),st
  409c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c4f:	adc    DWORD PTR [edi],ebp
  409c51:	cmp    DWORD PTR [ebx+0x1f8ca76a],ebx
  409c57:	fndisi(8087 only) 
  409c59:	and    ebx,ecx
  409c5b:	sub    al,0x29
  409c5d:	cli    
  409c5e:	addr16 call 0x2fb1:0x5726f617
  409c66:	push   0x20
  409c68:	mov    al,ds:0x62dc971e
  409c6d:	mov    dh,0x7b
  409c6f:	and    dh,ch
  409c71:	ret    
  409c72:	add    BYTE PTR [edi+eax*4],al
  409c75:	sub    BYTE PTR [ecx],cl
  409c77:	sahf   
  409c78:	adc    ebp,esp
  409c7a:	retf   0x1762
  409c7d:	fsubr  QWORD PTR [eax-0x60fff16a]
  409c83:	ror    DWORD PTR [eax+0x46],0x9a
  409c87:	fucomi st,st(5)
  409c89:	mov    bh,BYTE PTR [esp+edi*2+0x5a]
  409c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c8e:	sahf   
  409c8f:	add    BYTE PTR [edx+ebp*4+0x4d],dl
  409c93:	cs jnp 0x409c40
  409c96:	sar    BYTE PTR [edi+eiz*8-0x3219a2d4],0xa
  409c9e:	iret   
  409c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ca0:	jbe    0x409d1d
  409ca2:	aaa    
  409ca3:	xchg   edi,eax
  409ca4:	repz loopne 0x409ca1
  409ca7:	out    0x65,eax
  409ca9:	inc    eax
  409caa:	aas    
  409cab:	ja     0x409ca8
  409cad:	cmp    al,0x1e
  409caf:	push   edx
  409cb0:	sbb    bl,0xd9
  409cb3:	push   edx
  409cb4:	out    0xac,al
  409cb6:	inc    ebp
  409cb7:	sahf   
  409cb8:	lahf   
  409cb9:	in     al,0x99
  409cbb:	cmp    BYTE PTR [edi-0x42],0x9d
  409cbf:	pop    ds
  409cc0:	int    0x19
  409cc2:	push   ecx
  409cc3:	(bad)  
  409cc4:	test   eax,0x4d62bbb9
  409cc9:	iret   
  409cca:	fisub  WORD PTR [edx]
  409ccc:	stos   DWORD PTR es:[edi],eax
  409ccd:	and    ch,bl
  409ccf:	mov    bl,0x20
  409cd1:	mov    eax,ds:0xe15b7f8
  409cd6:	inc    ecx
  409cd7:	mov    eax,ds:0x48855e83
  409cdc:	icebp  
  409cdd:	or     BYTE PTR [eax+0x5039dc3e],0xd6
  409ce4:	adc    dl,BYTE PTR [esi+0x39]
  409ce7:	mov    DWORD PTR [edx+eax*2-0x2987d224],eax
  409cee:	leave  
  409cef:	mov    DWORD PTR [ebx+ecx*4],edi
  409cf2:	stos   DWORD PTR es:[edi],eax
  409cf3:	dec    edx
  409cf4:	pusha  
  409cf5:	fsubr  QWORD PTR [esp+edi*1+0x6d]
  409cf9:	into   
  409cfa:	xchg   edi,eax
  409cfb:	cdq    
  409cfc:	retf   
  409cfd:	ja     0x409ce5
  409cff:	mul    bh
  409d01:	mov    esp,0x56d2528
  409d06:	dec    ebx
  409d07:	adc    al,0xeb
  409d09:	pop    edi
  409d0a:	inc    esi
  409d0b:	scas   eax,DWORD PTR es:[edi]
  409d0c:	imul   ebp,DWORD PTR [eax],0xffffffbe
  409d0f:	or     esi,DWORD PTR [ebp+0x20516df0]
  409d15:	adc    al,0x2c
  409d17:	fisub  WORD PTR [esi]
  409d19:	scas   eax,DWORD PTR es:[edi]
  409d1a:	dec    edi
  409d1b:	outs   dx,BYTE PTR ds:[esi]
  409d1c:	mov    edx,0x3a920ff4
  409d21:	adc    esi,DWORD PTR [eax*1+0x75c2b220]
  409d28:	into   
  409d29:	jmp    0xf19bcff0
  409d2e:	mov    dh,0xad
  409d30:	sub    al,0xe9
  409d32:	xor    BYTE PTR [ebx],bl
  409d34:	xchg   esp,eax
  409d35:	lods   al,BYTE PTR ds:[esi]
  409d36:	mov    cl,0x2f
  409d38:	jns    0x409cc2
  409d3a:	test   bh,bh
  409d3c:	mov    ebp,0x60ef2dd5
  409d41:	retf   
  409d42:	add    DWORD PTR [eax-0x19aef96],eax
  409d48:	mov    dh,0x2c
  409d4a:	pop    ds
  409d4b:	add    DWORD PTR [edi+0x56c38c5a],0x30
  409d52:	sub    ch,BYTE PTR [ebp+ebx*4-0x7a6fbff4]
  409d59:	loop   0x409d78
  409d5b:	push   edx
  409d5c:	dec    ebp
  409d5d:	pop    ecx
  409d5e:	inc    ebx
  409d5f:	ror    dl,cl
  409d61:	add    eax,0xc65ffdc5
  409d66:	dec    eax
  409d67:	or     bl,BYTE PTR [ebp+ecx*4+0x25d4edbb]
  409d6e:	pushf  
  409d6f:	or     BYTE PTR [ebx+eax*4+0xa],bh
  409d73:	pop    ds
  409d74:	(bad)  
  409d75:	pop    ebx
  409d76:	push   0x5ba24a18
  409d7b:	sahf   
  409d7c:	sbb    eax,0x45cc9bf6
  409d81:	cwde   
  409d82:	or     ebx,edx
  409d84:	jle    0x409d61
  409d86:	fst    QWORD PTR [eax]
  409d88:	xchg   DWORD PTR [ebx],esp
  409d8a:	pop    eax
  409d8b:	mov    eax,ds:0xb88088c0
  409d90:	sbb    eax,0x24f7f16a
  409d95:	or     eax,0xc7518721
  409d9a:	jmp    0x258a:0xe2eb74a2
  409da1:	ins    BYTE PTR es:[edi],dx
  409da2:	inc    ebp
  409da3:	mov    esp,0x19b99d21
  409da8:	bound  esp,QWORD PTR [edi-0x70]
  409dab:	pop    es
  409dac:	cmp    BYTE PTR [esi+0x16],0xea
  409db0:	adc    al,dh
  409db2:	int3   
  409db3:	dec    DWORD PTR [edi+0x61]
  409db6:	add    esp,edx
  409db8:	push   cs
  409db9:	inc    eax
  409dba:	popf   
  409dbb:	retf   0x7204
  409dbe:	adc    DWORD PTR [ecx-0xf2efe1e],esi
  409dc4:	ret    0x17d8
  409dc7:	lahf   
  409dc8:	cwde   
  409dc9:	or     bh,dh
  409dcb:	aad    0xa0
  409dcd:	popf   
  409dce:	sbb    DWORD PTR [ebx],edi
  409dd0:	out    dx,al
  409dd1:	sti    
  409dd2:	mov    cl,0x38
  409dd4:	push   esi
  409dd5:	dec    edi
  409dd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd8:	xchg   edx,eax
  409dd9:	lds    ecx,FWORD PTR [ecx+0x47554721]
  409ddf:	or     cl,BYTE PTR [ebx+0x5d21dc99]
  409de5:	fcmovnbe st,st(4)
  409de7:	or     BYTE PTR [eax+0x6b],dh
  409dea:	pushf  
  409deb:	pop    ecx
  409dec:	mov    eax,ds:0xa06bcfae
  409df1:	adc    DWORD PTR [ebp-0x7cad4be6],eax
  409df7:	pop    esi
  409df8:	push   0xffffffa2
  409dfa:	xor    BYTE PTR [ecx+ebp*4+0x59],0x1b
  409dff:	inc    esp
  409e00:	shl    BYTE PTR [ebx+eax*2+0x6d],cl
  409e04:	sbb    al,0x98
  409e06:	es aam 0x58
  409e09:	mov    edx,0x8ed6bf9d
  409e0e:	xchg   edx,eax
  409e0f:	sti    
  409e10:	shl    DWORD PTR [edx-0x17c11ad4],0x77
  409e17:	jmp    0x4760c65c
  409e1c:	xor    eax,0xee1b85a7
  409e21:	sbb    ch,0x3b
  409e24:	push   ss
  409e25:	sbb    al,0x7d
  409e27:	iret   
  409e28:	jl     0x409e6f
  409e2a:	js     0x409dda
  409e2c:	pop    es
  409e2d:	mov    ds:0xafb69e2e,al
  409e32:	fwait
  409e33:	mov    dl,0x57
  409e35:	nop
  409e36:	push   0xb43c1d81
  409e3b:	cmc    
  409e3c:	mov    ebp,0x81ab95c2
  409e41:	pop    esi
  409e42:	mov    ebp,0xbc1e374d
  409e47:	leave  
  409e48:	sub    BYTE PTR [esi-0x7360970a],ch
  409e4e:	lock dec eax
  409e50:	mov    es,WORD PTR [ecx+0x4d]
  409e53:	dec    ecx
  409e54:	dec    ebx
  409e55:	push   eax
  409e56:	repnz xor ah,BYTE PTR [ebp-0x25d77e93]
  409e5d:	enter  0x2047,0xdf
  409e61:	ror    bh,1
  409e63:	or     DWORD PTR [esi+0x5197d5cd],ebx
  409e69:	mov    WORD PTR [esi],fs
  409e6b:	sbb    dh,dl
  409e6d:	mov    al,ds:0xbe376ebc
  409e72:	or     eax,0xa76febdb
  409e77:	mov    fs,WORD PTR [eax]
  409e79:	pop    ebx
  409e7a:	xor    eax,0x27336f39
  409e7f:	enter  0x69a5,0x61
  409e83:	in     eax,0x36
  409e85:	push   edi
  409e86:	cdq    
  409e87:	in     eax,0xcd
  409e89:	and    al,0xfe
  409e8b:	dec    esi
  409e8c:	mov    dl,0xa0
  409e8e:	ja     0x409eb1
  409e90:	and    ebp,DWORD PTR [edx]
  409e92:	xor    DWORD PTR [edi+eax*8],esi
  409e95:	inc    ebx
  409e96:	and    BYTE PTR [edi-0x7f],0x9
  409e9a:	cs or  eax,0x67b6f215
  409ea0:	shl    DWORD PTR [esi-0x16],1
  409ea3:	cs dec esp
  409ea5:	or     BYTE PTR [ebx*2-0x624bed8f],ch
  409eac:	mov    ebx,0xafb74cda
  409eb1:	jbe    0x409ec2
  409eb3:	pusha  
  409eb4:	and    dl,BYTE PTR [edx*1+0x4b34f1a6]
  409ebb:	pop    eax
  409ebc:	repnz (bad) 
  409ebe:	xchg   esp,eax
  409ebf:	inc    ebp
  409ec0:	mov    eax,0x4c780b19
  409ec5:	pop    es
  409ec6:	inc    eax
  409ec7:	xlat   BYTE PTR ds:[ebx]
  409ec8:	in     al,0x61
  409eca:	push   0xffffff84
  409ecc:	jne    0x409e83
  409ece:	inc    esp
  409ecf:	in     eax,dx
  409ed0:	leave  
  409ed1:	cmp    cl,BYTE PTR [edx-0x70]
  409ed4:	test   BYTE PTR [ecx+0x34],0xac
  409ed8:	test   BYTE PTR [esi+ecx*2+0x57],ah
  409edc:	jp     0x409f19
  409ede:	test   al,0xe5
  409ee0:	test   edx,ebx
  409ee2:	inc    edx
  409ee3:	loope  0x409ef0
  409ee5:	xor    al,0xa6
  409ee7:	dec    esi
  409ee8:	xor    bh,al
  409eea:	ficom  DWORD PTR [ebx]
  409eec:	es or  al,0xee
  409eef:	(bad)  
  409ef0:	mov    DWORD PTR [ecx],esp
  409ef2:	jbe    0x409f6c
  409ef4:	lock scas al,BYTE PTR es:[edi]
  409ef6:	enter  0xbb9b,0x9a
  409efa:	adc    DWORD PTR [eax+edx*2-0x5a],ebp
  409efe:	mov    cl,0xd1
  409f00:	jle    0x409eb4
  409f02:	pop    es
  409f03:	cmp    al,0xa3
  409f05:	pop    ss
  409f06:	or     eax,DWORD PTR [esi-0x5d]
  409f09:	adc    cl,ah
  409f0b:	loop   0x409f5f
  409f0d:	sub    cl,0x2
  409f10:	dec    edx
  409f11:	outs   dx,DWORD PTR ds:[esi]
  409f12:	pop    ds
  409f13:	popf   
  409f14:	xor    al,0x42
  409f16:	add    BYTE PTR [eax],0x30
  409f19:	push   esp
  409f1a:	dec    eax
  409f1b:	adc    BYTE PTR [ebp+0x3cb933b8],ch
  409f21:	loope  0x409ed5
  409f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f24:	xor    eax,0x4f1c05ab
  409f29:	jecxz  0x409fa5
  409f2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f2c:	(bad)  
  409f2d:	mov    al,ds:0x14411377
  409f32:	in     al,dx
  409f33:	ss (bad) 
  409f35:	pop    ds
  409f36:	loopne 0x409eed
  409f38:	push   eax
  409f39:	pop    ds
  409f3a:	(bad)  
  409f3b:	pop    ebx
  409f3c:	fbld   TBYTE PTR [esi-0x70af94b2]
  409f42:	out    0x68,eax
  409f44:	xchg   esp,eax
  409f45:	pop    ebx
  409f46:	pop    es
  409f47:	(bad)  
  409f48:	push   ds
  409f49:	add    bl,BYTE PTR [ebp-0x4d5d9c01]
  409f4f:	sahf   
  409f50:	(bad)  
  409f51:	sub    eax,0x4225aad
  409f56:	sbb    eax,ebx
  409f58:	and    DWORD PTR [ecx+ecx*2-0x57],eax
  409f5c:	xor    ah,bl
  409f5e:	fnstenv [ecx-0x17]
  409f61:	add    DWORD PTR [edx],edi
  409f63:	imul   esp,DWORD PTR [ecx],0xffffffc0
  409f66:	xchg   ecx,eax
  409f67:	push   ss
  409f68:	add    bh,0x9c
  409f6b:	(bad)  
  409f6c:	jae    0x409f31
  409f6e:	nop
  409f6f:	adc    al,0x24
  409f71:	jmp    0x409f6c
  409f73:	xor    al,BYTE PTR [edi+eax*2-0x36aad681]
  409f7a:	fwait
  409f7b:	dec    edi
  409f7c:	scas   al,BYTE PTR es:[edi]
  409f7d:	inc    eax
  409f7e:	outs   dx,BYTE PTR ds:[esi]
  409f7f:	xchg   esi,eax
  409f80:	in     al,dx
  409f81:	scas   eax,DWORD PTR es:[edi]
  409f82:	sub    DWORD PTR [esi-0x49],0x2f663bb
  409f89:	das    
  409f8a:	popa   
  409f8b:	add    bh,dl
  409f8d:	xchg   al,al
  409f8f:	out    dx,eax
  409f90:	jne    0x409f9d
  409f92:	mov    ch,0xce
  409f94:	or     BYTE PTR [edi],al
  409f96:	jge    0x409f8b
  409f98:	rol    BYTE PTR [esi],cl
  409f9a:	in     al,0x35
  409f9c:	cmp    BYTE PTR ds:0x7cad0aca,ch
  409fa2:	and    BYTE PTR [edi-0x397f6cb8],0x36
  409fa9:	jle    0x409fd2
  409fab:	xor    DWORD PTR [esi],eax
  409fad:	ror    dl,0xd2
  409fb0:	jnp    0x40a022
  409fb2:	(bad)  
  409fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb4:	inc    ebp
  409fb5:	lds    esi,FWORD PTR [ebx]
  409fb7:	das    
  409fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb9:	mov    ecx,0x9ff9d342
  409fbe:	aad    0x4e
  409fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fc2:	xor    al,0xdc
  409fc4:	mov    ebp,0x75b43bb9
  409fc9:	push   es
  409fca:	call   DWORD PTR [ecx-0x4]
  409fcd:	idiv   BYTE PTR [ebp+0x1723ad5b]
  409fd3:	rcr    DWORD PTR [edi*2+0x6d253730],cl
  409fda:	sub    ah,ah
  409fdc:	std    
  409fdd:	jmp    0xdb80:0xe9a7fe41
  409fe4:	in     eax,0xce
  409fe6:	jmp    0xc134dca3
  409feb:	and    DWORD PTR [eax],esi
  409fed:	(bad)  [ebp+0x3]
  409ff0:	daa    
  409ff1:	out    dx,eax
  409ff2:	cmc    
  409ff3:	retf   0xf0b3
  409ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ff7:	sub    esi,DWORD PTR [edx-0x50]
  409ffa:	outs   dx,BYTE PTR ds:[esi]
  409ffb:	and    DWORD PTR [ecx-0x7f],edi
  409ffe:	imul   ecx,DWORD PTR [esi],0x7a
  40a001:	jp     0x409fbf
  40a003:	xchg   ecx,eax
  40a004:	into   
  40a005:	aaa    
  40a006:	xor    DWORD PTR cs:[eax+0x1ac15a04],edi
  40a00d:	into   
  40a00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a00f:	std    
  40a010:	or     BYTE PTR [edi+0x2e],cl
  40a013:	and    edx,DWORD PTR [edi+esi*2-0x3cc0cce4]
  40a01a:	loopne 0x40a095
  40a01c:	out    0x6,al
  40a01e:	inc    edi
  40a01f:	mov    BYTE PTR [eax],dh
  40a021:	ret    0x3c6a
  40a024:	ret    0x9bf1
  40a027:	pop    ecx
  40a028:	mov    BYTE PTR [ebp+esi*4+0xb444c02],ah
  40a02f:	imul   esp,DWORD PTR [ebx+esi*4-0x1c4986c9],0xae2d0cd0
  40a03a:	jbe    0x40a021
  40a03c:	sti    
  40a03d:	xchg   edx,eax
  40a03e:	jg     0x409fcf
  40a040:	lods   eax,DWORD PTR ds:[esi]
  40a041:	push   ecx
  40a042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a043:	loop   0x409fda
  40a045:	xchg   edx,eax
  40a046:	inc    esi
  40a047:	test   DWORD PTR [edi],ebp
  40a049:	xor    esp,eax
  40a04b:	jmp    0x4276:0x67c1bf8c
  40a052:	push   ecx
  40a053:	nop
  40a054:	mov    ds:0x73aa5768,al
  40a059:	sub    esp,eax
  40a05b:	or     al,0x9d
  40a05d:	mov    dl,0xf5
  40a05f:	clc    
  40a060:	test   eax,0xc35de74d
  40a065:	sub    ecx,DWORD PTR [edx+0x7204c9d8]
  40a06b:	(bad)  [edi+0xe]
  40a06e:	scas   eax,DWORD PTR es:[edi]
  40a06f:	imul   BYTE PTR [edx]
  40a071:	(bad)  
  40a072:	scas   eax,DWORD PTR es:[edi]
  40a073:	mov    bh,bh
  40a075:	and    eax,0x4766c7e8
  40a07a:	sub    al,0x63
  40a07c:	in     eax,dx
  40a07d:	hlt    
  40a07e:	fwait
  40a07f:	xor    DWORD PTR [esi-0x37],ebx
  40a082:	mov    BYTE PTR [ecx+ecx*1],ch
  40a085:	cdq    
  40a086:	jl     0x40a048
  40a088:	js     0x40a04e
  40a08a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a08b:	fdivr  QWORD PTR [esi-0x42]
  40a08e:	jmp    0xee516bc
  40a093:	lock aad 0xae
  40a096:	jbe    0x40a0fc
  40a098:	js     0x40a01e
  40a09a:	mov    ss,WORD PTR [esi+0x7a]
  40a09d:	ins    DWORD PTR es:[edi],dx
  40a09e:	fstp   TBYTE PTR [edi+0x1a72f9e9]
  40a0a4:	add    al,0x53
  40a0a6:	imul   edx,ebx,0xe2659670
  40a0ac:	iret   
  40a0ad:	ror    esi,0xb1
  40a0b0:	in     eax,0x55
  40a0b2:	dec    eax
  40a0b4:	sbb    ah,BYTE PTR [eax-0x5]
  40a0b7:	test   BYTE PTR [ecx+eiz*8-0x220c8bfa],al
  40a0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0bf:	cmp    dh,BYTE PTR [ebx]
  40a0c1:	sbb    ecx,DWORD PTR [esi-0x4c]
  40a0c4:	xchg   edx,eax
  40a0c5:	sub    BYTE PTR [ecx-0x63108f29],al
  40a0cb:	mov    ebp,0xdb28efe0
  40a0d0:	cmp    al,0x2
  40a0d2:	xor    DWORD PTR [esi+0x23668b72],eax
  40a0d8:	mov    ds:0x1080b673,eax
  40a0dd:	shl    BYTE PTR [edx+0x1516b3c9],0x8d
  40a0e4:	jmp    0x239f:0x977618e8
  40a0eb:	fnsave [ebx+0x6b]
  40a0ee:	xor    BYTE PTR [edx+eax*1-0x62],bl
  40a0f2:	cmp    ebp,ecx
  40a0f4:	add    BYTE PTR [ebx],dh
  40a0f6:	mov    bl,0x57
  40a0f8:	inc    ebp
  40a0f9:	ins    DWORD PTR es:[edi],dx
  40a0fa:	(bad)  [ecx+0x47]
  40a0fd:	js     0x40a120
  40a0ff:	adc    DWORD PTR [edi],esp
  40a101:	sub    DWORD PTR [edi+0x37],ebp
  40a104:	mov    eax,0x365a4c08
  40a109:	std    
  40a10a:	lods   al,BYTE PTR ds:[esi]
  40a10b:	dec    ebx
  40a10c:	icebp  
  40a10d:	imul   BYTE PTR [edi-0x15]
  40a110:	add    BYTE PTR [edx+0x2d],al
  40a113:	cmc    
  40a114:	pop    ebp
  40a115:	xor    edi,ebp
  40a117:	je     0x40a0cf
  40a119:	and    dh,BYTE PTR [eax-0x52b9e444]
  40a11f:	add    al,0x56
  40a121:	inc    edx
  40a122:	add    al,0x39
  40a124:	stc    
  40a125:	adc    al,0xd7
  40a127:	sub    BYTE PTR [ebx+0x677013a9],0x46
  40a12e:	jae    0x40a10b
  40a130:	ret    0x2f5e
  40a133:	push   cx
  40a135:	dec    esp
  40a136:	(bad)  [ecx]
  40a138:	fst    QWORD PTR ds:0xb5046c2
  40a13e:	hlt    
  40a13f:	daa    
  40a140:	loopne 0x40a0ee
  40a142:	icebp  
  40a143:	xchg   ecx,eax
  40a144:	or     eax,0x311a2f4f
  40a149:	bound  edi,QWORD PTR [ebx-0x56428ecb]
  40a14f:	mov    ?,WORD PTR [eax]
  40a151:	ds repz sub eax,0xa358c0f7
  40a158:	popf   
  40a159:	or     bh,dl
  40a15b:	and    esi,DWORD PTR [eax-0x16]
  40a15e:	mov    dl,0x87
  40a160:	test   BYTE PTR [eax+0x78a3306e],dh
  40a166:	mov    esi,es
  40a168:	push   ds
  40a169:	(bad)  
  40a16a:	jmp    0x40a125
  40a16c:	dec    esp
  40a16d:	and    al,al
  40a16f:	jle    0x40a148
  40a171:	sbb    eax,0xbabcb2f4
  40a176:	push   ss
  40a177:	ja     0x40a10b
  40a179:	das    
  40a17a:	mov    edx,0x4645fe05
  40a17f:	shr    BYTE PTR [esp+esi*8-0x3aefe1fc],cl
  40a186:	sbb    BYTE PTR [edx+0x4cb3ae9b],0x1d
  40a18d:	retf   0xf04c
  40a190:	in     eax,dx
  40a191:	xchg   DWORD PTR [esp+ebp*4+0x6a],edi
  40a195:	into   
  40a196:	inc    ecx
  40a197:	stc    
  40a198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a199:	outs   dx,DWORD PTR ds:[esi]
  40a19a:	retf   0xc914
  40a19d:	mul    DWORD PTR ds:0xd61c148f
  40a1a3:	push   es
  40a1a4:	adc    DWORD PTR [ebp+0x39],edi
  40a1a7:	pop    ds
  40a1a8:	loop   0x40a163
  40a1aa:	test   al,0x7c
  40a1ac:	and    DWORD PTR [eax+0xd],0x4561f5da
  40a1b3:	mov    esp,DWORD PTR [eax]
  40a1b5:	sbb    eax,0x68726ab1
  40a1ba:	jp     0x40a1e7
  40a1bc:	mov    bl,dl
  40a1be:	fnsave [edx-0x6e932556]
  40a1c4:	and    BYTE PTR [ecx+edi*8],bl
  40a1c7:	mov    ds:0x1ea2ee7a,eax
  40a1cc:	lea    eax,[ecx]
  40a1ce:	or     BYTE PTR [edi],dh
  40a1d0:	call   0xbdb8ec4a
  40a1d5:	enter  0xabaa,0x2c
  40a1d9:	dec    ebp
  40a1da:	ret    
  40a1db:	cmc    
  40a1dc:	push   ebp
  40a1dd:	iret   
  40a1de:	xor    eax,DWORD PTR [edi]
  40a1e0:	push   ecx
  40a1e1:	idiv   BYTE PTR [esi+0x48]
  40a1e4:	mov    dl,0xb2
  40a1e6:	clc    
  40a1e7:	call   0x3cfa:0xb8946e8e
  40a1ee:	inc    ebp
  40a1ef:	sbb    al,0x90
  40a1f1:	xchg   DWORD PTR [ebp+ecx*2-0x70],ecx
  40a1f5:	add    eax,0xc874ecaa
  40a1fa:	lahf   
  40a1fb:	retf   0x4a57
  40a1fe:	dec    eax
  40a1ff:	xchg   ecx,eax
  40a200:	(bad)  
  40a201:	lds    ebp,FWORD PTR [edx]
  40a203:	pop    ds
  40a204:	or     dl,BYTE PTR [edx-0x17]
  40a207:	mov    cl,0xf0
  40a209:	xor    bl,dl
  40a20b:	inc    ebx
  40a20c:	fiadd  WORD PTR ds:0x7559c50
  40a212:	adc    ah,BYTE PTR [eax-0x54]
  40a215:	mov    BYTE PTR [esi],cl
  40a217:	adc    BYTE PTR [ecx-0x4f],bl
  40a21a:	bnd jmp 0x40a20a
  40a21d:	test   ah,ah
  40a21f:	xchg   esp,eax
  40a221:	shl    DWORD PTR [ecx-0x2c],1
  40a224:	jae    0x40a218
  40a226:	xor    dl,BYTE PTR [esi-0x7a]
  40a229:	dec    esp
  40a22a:	js     0x40a230
  40a22c:	adc    ebp,ecx
  40a22e:	aad    0xe4
  40a230:	add    eax,edi
  40a232:	out    dx,eax
  40a233:	push   ebp
  40a234:	loope  0x40a2a9
  40a236:	xchg   esi,ecx
  40a238:	cdq    
  40a239:	pop    edi
  40a23a:	mov    esi,0x689483e
  40a23f:	ret    
  40a240:	add    BYTE PTR [eax-0x45],bh
  40a243:	push   ds
  40a244:	xchg   edi,eax
  40a245:	leave  
  40a246:	xchg   ecx,eax
  40a247:	mov    eax,ds:0x3689c463
  40a24c:	popf   
  40a24d:	sbb    DWORD PTR [ecx+ecx*8-0x24c99c0d],esi
  40a254:	iret   
  40a255:	ins    BYTE PTR es:[edi],dx
  40a256:	cwde   
  40a257:	pushf  
  40a258:	bound  esi,QWORD PTR [edi]
  40a25a:	xchg   edx,eax
  40a25b:	aad    0x1c
  40a25d:	add    esp,edx
  40a25f:	repz imul ebx,ecx,0x939adb3b
  40a266:	or     DWORD PTR [ebx-0x15e0a1f],ecx
  40a26c:	xor    al,0x9f
  40a26e:	lahf   
  40a26f:	aas    
  40a270:	bound  esi,QWORD PTR [ecx]
  40a272:	fiadd  WORD PTR [edi-0x37c30593]
  40a278:	mov    bl,0x62
  40a27a:	jne    0x40a2bd
  40a27c:	iret   
  40a27d:	jns    0x40a22f
  40a27f:	sub    ah,BYTE PTR [edx]
  40a281:	dec    ebx
  40a282:	push   eax
  40a283:	pop    ss
  40a284:	adc    eax,0xcb857296
  40a289:	mov    ebx,0x45e10ae8
  40a28e:	ret    0x8526
  40a291:	aam    0xe8
  40a293:	or     dl,BYTE PTR [ebx-0x11]
  40a296:	in     eax,dx
  40a297:	bound  ecx,QWORD PTR [edx+ebp*2]
  40a29a:	(bad)  
  40a29b:	fmul   QWORD PTR [eax-0x65]
  40a29e:	int    0x55
  40a2a0:	sub    eax,0x480cfb99
  40a2a5:	mov    ah,0x8a
  40a2a7:	inc    edi
  40a2a8:	mov    ah,0xe7
  40a2aa:	(bad)  
  40a2ab:	ins    DWORD PTR es:[edi],dx
  40a2ac:	jns    0x40a2c5
  40a2ae:	jmp    0x96a6:0xfc186919
  40a2b5:	into   
  40a2b6:	hlt    
  40a2b7:	out    0x31,eax
  40a2b9:	push   ss
  40a2ba:	push   ds
  40a2bb:	sar    edi,0x83
  40a2be:	cdq    
  40a2bf:	aam    0x5e
  40a2c1:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40a2c3:	fbld   TBYTE PTR [edi]
  40a2c5:	cmc    
  40a2c6:	add    al,BYTE PTR [edx+0x133a68c5]
  40a2cc:	(bad)  
  40a2cd:	sbb    bl,cl
  40a2cf:	ja     0x40a32c
  40a2d1:	dec    esi
  40a2d2:	and    bl,BYTE PTR [esi]
  40a2d4:	cmp    BYTE PTR [eax],ah
  40a2d6:	popf   
  40a2d7:	into   
  40a2d8:	cmp    eax,eax
  40a2da:	xchg   ebx,eax
  40a2db:	dec    ebp
  40a2dc:	add    al,0x5
  40a2de:	pusha  
  40a2df:	bound  esp,QWORD PTR [edx-0x733b76b]
  40a2e5:	mov    ds:0x81a704c3,eax
  40a2ea:	lods   al,BYTE PTR ds:[esi]
  40a2eb:	push   es
  40a2ec:	jns    0x40a323
  40a2ee:	dec    ebp
  40a2ef:	data16 scas al,BYTE PTR es:[edi]
  40a2f1:	inc    ecx
  40a2f2:	cmp    ch,BYTE PTR [ecx-0x63]
  40a2f5:	adc    al,0x3
  40a2f7:	mov    ebx,0x747bbb43
  40a2fc:	jae    0x40a324
  40a2fe:	punpckhbw mm2,mm7
  40a301:	pop    ecx
  40a302:	mov    al,0x27
  40a304:	scas   al,BYTE PTR es:[edi]
  40a305:	test   eax,0x93eb7c39
  40a30a:	stos   BYTE PTR es:[edi],al
  40a30b:	out    dx,eax
  40a30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a30d:	lods   eax,DWORD PTR ds:[esi]
  40a30e:	and    esp,DWORD PTR [ebx+0xc]
  40a311:	outs   dx,DWORD PTR ds:[esi]
  40a312:	arpl   WORD PTR [edx+0x5e],di
  40a315:	rcl    DWORD PTR ds:0x621babb6,0xd2
  40a31c:	cwde   
  40a31d:	xor    BYTE PTR gs:[edi+edx*8+0xb],cl
  40a322:	adc    DWORD PTR [ecx],edx
  40a324:	lea    edi,[edi-0x775d5f07]
  40a32a:	sbb    BYTE PTR [ebp+0x3],cl
  40a32d:	(bad)  
  40a32e:	cld    
  40a32f:	xor    bh,al
  40a331:	or     al,0xd0
  40a333:	loope  0x40a38d
  40a335:	xchg   edx,eax
  40a336:	push   cs
  40a337:	or     al,0x26
  40a339:	mov    edx,0x217bcad3
  40a33e:	mov    edx,0xfd284f2
  40a343:	in     eax,0x36
  40a345:	and    eax,0x55802f7e
  40a34a:	add    eax,0x963d1adc
  40a34f:	push   edi
  40a350:	mov    al,dl
  40a352:	out    dx,eax
  40a353:	jp     0x40a389
  40a355:	popa   
  40a356:	and    ch,BYTE PTR [esi]
  40a358:	adc    ah,BYTE PTR [ecx-0x55]
  40a35b:	adc    eax,DWORD PTR [esi+0x6a]
  40a35e:	outs   dx,BYTE PTR ds:[esi]
  40a35f:	sbb    esi,DWORD PTR [ebp+0x79d5e042]
  40a365:	daa    
  40a366:	std    
  40a367:	div    BYTE PTR [esi+ebp*2]
  40a36a:	shl    cl,1
  40a36c:	pop    ss
  40a36d:	scas   eax,DWORD PTR es:[edi]
  40a36e:	sbb    al,BYTE PTR [ebp+0x7d]
  40a371:	mov    bl,0x76
  40a373:	and    cl,BYTE PTR [edx]
  40a375:	fistp  WORD PTR [eax+0x1ca783f3]
  40a37b:	dec    edx
  40a37c:	ins    DWORD PTR es:[edi],dx
  40a37d:	mov    edi,0x9c87c989
  40a382:	xchg   ebp,eax
  40a383:	dec    edi
  40a384:	jbe    0x40a36e
  40a386:	rcr    DWORD PTR [esi],0x4f
  40a389:	cdq    
  40a38a:	cmp    ch,ah
  40a38c:	cli    
  40a38d:	iret   
  40a38e:	fdivrp st(0),st
  40a390:	xor    BYTE PTR [edx+0x22faafe3],bh
  40a396:	sub    ch,BYTE PTR [ebx]
  40a398:	adc    edi,eax
  40a39a:	sub    ebx,DWORD PTR [edi+0x21]
  40a39d:	inc    eax
  40a39e:	popa   
  40a39f:	not    BYTE PTR [edx-0x5d4bf229]
  40a3a5:	iret   
  40a3a6:	hlt    
  40a3a7:	std    
  40a3a8:	and    eax,DWORD PTR [ebx-0x4a1bdab9]
  40a3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3af:	adc    al,0xa3
  40a3b1:	in     eax,0xab
  40a3b3:	pop    edx
  40a3b4:	sub    eax,0x59a8fe5e
  40a3b9:	mov    ah,BYTE PTR [esi]
  40a3bb:	call   0x2e094122
  40a3c0:	out    dx,eax
  40a3c1:	out    dx,eax
  40a3c2:	add    BYTE PTR [ebp+0x1a],bl
  40a3c5:	jp     0x40a3c9
  40a3c7:	and    DWORD PTR [esi],edx
  40a3c9:	jecxz  0x40a3b8
  40a3cb:	mov    ebx,0x2e5f9c6c
  40a3d0:	cwde   
  40a3d1:	mov    edx,0x3310d670
  40a3d6:	sub    ah,bl
  40a3d8:	push   esi
  40a3d9:	mov    bl,0xdf
  40a3db:	cwde   
  40a3dc:	sub    eax,0xadab7723
  40a3e1:	add    DWORD PTR [edx],esi
  40a3e3:	inc    ebx
  40a3e4:	adc    ecx,ecx
  40a3e6:	push   esp
  40a3e7:	bound  edx,QWORD PTR [eax+ecx*2+0x21]
  40a3eb:	das    
  40a3ec:	cmp    BYTE PTR [ebp+0x7a],al
  40a3ef:	div    BYTE PTR [edx]
  40a3f1:	push   edx
  40a3f2:	xchg   ebx,eax
  40a3f3:	jg     0x40a3d5
  40a3f5:	out    0xd2,al
  40a3f7:	sbb    ch,BYTE PTR [esi+0x243d3bee]
  40a3fd:	push   ds
  40a3fe:	or     eax,0x2c27626f
  40a403:	inc    edx
  40a404:	hlt    
  40a405:	lock std 
  40a407:	sub    al,0x85
  40a409:	mov    bl,0xf
  40a40b:	nop
  40a40c:	in     eax,dx
  40a40d:	fcom   DWORD PTR [eax]
  40a40f:	fimul  DWORD PTR [ebx]
  40a411:	mov    eax,ds:0x65014177
  40a416:	fist   DWORD PTR [eax]
  40a418:	add    al,0xaa
  40a41a:	(bad)  
  40a41b:	int3   
  40a41c:	mov    esi,0xcac57e80
  40a421:	sub    DWORD PTR [eax+0x65],esi
  40a424:	push   eax
  40a425:	call   FWORD PTR [ebp+0xd6f1098]
  40a42b:	xor    ch,BYTE PTR [ebx-0x27614012]
  40a431:	inc    esi
  40a432:	mov    ecx,0x2014b0a1
  40a437:	jno    0x40a475
  40a439:	rol    DWORD PTR [eax],1
  40a43b:	outs   dx,BYTE PTR ds:[esi]
  40a43c:	cmp    DWORD PTR ds:0x25965a94,eax
  40a442:	pop    es
  40a443:	or     al,0xae
  40a445:	out    dx,eax
  40a446:	and    al,0x19
  40a448:	pop    ds
  40a449:	in     al,0xa6
  40a44b:	jo     0x40a3d4
  40a44d:	pop    ecx
  40a44e:	pop    ebx
  40a44f:	push   cs
  40a450:	mov    ch,cl
  40a452:	mov    esi,0x1de4c6dd
  40a457:	ret    
  40a458:	sub    al,0xcf
  40a45a:	sbb    eax,0xa2718607
  40a45f:	add    DWORD PTR [esi+0xb],esp
  40a462:	cmp    DWORD PTR [ebx-0xa],esi
  40a465:	aas    
  40a466:	scas   al,BYTE PTR es:[edi]
  40a467:	sbb    eax,edi
  40a469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a46a:	sahf   
  40a46b:	popa   
  40a46c:	push   ds
  40a46d:	ds jmp 0x7f11f5f7
  40a473:	std    
  40a474:	jns    0x40a3fd
  40a476:	xchg   BYTE PTR [ebp-0x4d],ah
  40a479:	jmp    0x54f5:0xf27457ef
  40a480:	dec    ebp
  40a481:	(bad)  
  40a482:	mov    al,ds:0xae25e8e5
  40a487:	out    0xa7,al
  40a489:	sub    al,BYTE PTR [ebp+0x56]
  40a48c:	stos   BYTE PTR es:[edi],al
  40a48d:	push   esp
  40a48e:	dec    edx
  40a48f:	std    
  40a490:	sbb    al,0x22
  40a492:	test   al,0xd4
  40a494:	or     BYTE PTR [esi+eax*2],al
  40a497:	mov    ecx,0x1d285589
  40a49c:	repnz outs dx,DWORD PTR ds:[esi]
  40a49e:	push   ecx
  40a49f:	xor    BYTE PTR [esi],dl
  40a4a1:	inc    esp
  40a4a2:	gs jle 0x40a4be
  40a4a5:	push   es
  40a4a6:	cmp    BYTE PTR [eax-0x23],ch
  40a4a9:	sbb    BYTE PTR [edi+ebx*4],0x9f
  40a4ad:	xor    eax,0x9b4b06b9
  40a4b2:	push   esi
  40a4b3:	fnstenv [edi+0x69]
  40a4b6:	enter  0x8c26,0xdc
  40a4ba:	inc    ebp
  40a4bb:	xchg   esi,eax
  40a4bc:	shr    BYTE PTR [ebx+edx*8-0x77],cl
  40a4c0:	je     0x40a524
  40a4c2:	sahf   
  40a4c3:	aaa    
  40a4c4:	dec    ecx
  40a4c5:	cmp    ebx,DWORD PTR es:[edx-0x76]
  40a4c9:	pop    ds
  40a4ca:	(bad)  
  40a4cb:	bound  edx,QWORD PTR [eax-0x61]
  40a4ce:	repnz stos DWORD PTR es:[edi],eax
  40a4d0:	in     al,0x10
  40a4d2:	arpl   WORD PTR [eax],bx
  40a4d4:	data16 mov al,0x2b
  40a4d7:	sub    eax,ecx
  40a4d9:	jbe    0x40a533
  40a4db:	mov    dh,0xc8
  40a4dd:	sub    esp,esp
  40a4df:	add    BYTE PTR [esi],ah
  40a4e1:	in     al,0xb1
  40a4e3:	dec    eax
  40a4e4:	pop    ebp
  40a4e5:	sub    dh,bh
  40a4e7:	mov    esi,0x4b0c3e88
  40a4ec:	push   ecx
  40a4ed:	jl     0x40a47b
  40a4ef:	jmp    DWORD PTR [edx-0x7b]
  40a4f2:	or     dl,bl
  40a4f4:	and    esi,DWORD PTR [ebx+0x3a1e0be]
  40a4fa:	add    eax,0x913d8732
  40a4ff:	dec    esi
  40a500:	test   al,0xfd
  40a502:	mov    bl,0x8b
  40a504:	sub    ebx,DWORD PTR [ebx-0x31bd69f5]
  40a50a:	icebp  
  40a50b:	sbb    DWORD PTR [edi],edi
  40a50d:	push   0x3
  40a50f:	pop    ss
  40a510:	ins    BYTE PTR es:[edi],dx
  40a511:	in     eax,dx
  40a512:	cmp    ebp,0x734407ae
  40a518:	(bad)  
  40a51a:	push   ebx
  40a51b:	fadd   QWORD PTR [esi+ebx*4+0x3e990c2d]
  40a522:	out    dx,al
  40a523:	sub    edi,ecx
  40a525:	aas    
  40a526:	sbb    DWORD PTR [ebx+0x48247823],0x7f37328c
  40a530:	add    ecx,DWORD PTR [ebp-0x289e9050]
  40a536:	jl     0x40a58a
  40a538:	xchg   esp,eax
  40a539:	icebp  
  40a53a:	std    
  40a53b:	cmp    eax,0x3871d5a
  40a540:	pop    es
  40a541:	loope  0x40a57b
  40a543:	imul   esp,DWORD PTR [ecx],0x30e23bc7
  40a549:	jle    0x40a4ce
  40a54b:	sbb    DWORD PTR [edx],0x1c0bf8a
  40a551:	xor    eax,0x7d3be18d
  40a556:	aam    0xe0
  40a558:	mov    edi,0xfd887c06
  40a55d:	dec    eax
  40a55e:	pop    ds
  40a55f:	clc    
  40a560:	retf   
  40a561:	daa    
  40a562:	cmc    
  40a563:	dec    edx
  40a564:	lock add DWORD PTR [eax+edi*8+0x75cf1d2d],0x36
  40a56d:	dec    edi
  40a56e:	cli    
  40a56f:	mov    ds:0xf0a5c3a0,eax
  40a574:	je     0x40a54f
  40a576:	and    dl,BYTE PTR [edi]
  40a578:	inc    eax
  40a579:	dec    edx
  40a57a:	ja     0x40a502
  40a57c:	xor    esp,eax
  40a57e:	lods   al,BYTE PTR ds:[esi]
  40a57f:	mov    bh,0x1a
  40a581:	loop   0x40a50a
  40a583:	(bad)  
  40a585:	adc    eax,0x1e7563ab
  40a58a:	dec    ecx
  40a58b:	fst    QWORD PTR [eax+eiz*8+0x3192c8]
  40a592:	jmp    0x9ab15d4e
  40a597:	or     ah,bh
  40a599:	push   cs
  40a59a:	jge    0x40a520
  40a59c:	std    
  40a59d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a59e:	loope  0x40a588
  40a5a0:	outs   dx,BYTE PTR ds:[esi]
  40a5a1:	enter  0x942b,0x5f
  40a5a5:	jne    0x40a613
  40a5a7:	xchg   ebp,eax
  40a5a8:	sbb    eax,0x5bf402fb
  40a5ad:	and    al,0xdf
  40a5af:	mov    bl,0x9c
  40a5b1:	in     al,dx
  40a5b2:	and    ebp,0xffffffed
  40a5b5:	aas    
  40a5b6:	mov    ebp,0xfd41e126
  40a5bb:	dec    eax
  40a5bc:	je     0x40a5b9
  40a5be:	mov    al,0x82
  40a5c0:	push   ebp
  40a5c1:	sti    
  40a5c2:	test   DWORD PTR [esi+0x65],esi
  40a5c5:	pop    esi
  40a5c6:	inc    ebp
  40a5c7:	hlt    
  40a5c8:	sbb    BYTE PTR [ebx+0x4d],bh
  40a5cb:	push   es
  40a5cc:	arpl   WORD PTR [edi],cx
  40a5ce:	stos   DWORD PTR es:[edi],eax
  40a5cf:	mov    bh,0x89
  40a5d1:	test   DWORD PTR [edi+esi*4],0x8d1ef06c
  40a5d8:	xchg   ebx,eax
  40a5d9:	rcr    BYTE PTR [edi],0x24
  40a5dc:	fs mov edx,0xb8a9c025
  40a5e2:	pop    eax
  40a5e3:	ds (bad) 
  40a5e6:	shl    dl,1
  40a5e8:	stos   BYTE PTR es:[edi],al
  40a5e9:	lock mov bh,0x25
  40a5ec:	jmp    0x40a589
  40a5ee:	(bad)  
  40a5ef:	dec    edx
  40a5f0:	sub    BYTE PTR [eax],ah
  40a5f2:	fdiv   DWORD PTR [ecx-0x22bf9b55]
  40a5f8:	add    bh,BYTE PTR [esi]
  40a5fa:	fidivr WORD PTR [esi]
  40a5fc:	pop    es
  40a5fd:	loopne 0x40a59d
  40a5ff:	xchg   esi,eax
  40a600:	nop
  40a601:	add    ah,BYTE PTR [esi-0x3d]
  40a604:	and    al,0x7a
  40a606:	push   0x557fefd9
  40a60b:	mov    al,0xff
  40a60d:	loope  0x40a5e7
  40a60f:	(bad)  
  40a610:	imul   edx,DWORD PTR [edi+0x69],0x1e
  40a614:	inc    esi
  40a615:	or     eax,DWORD PTR [edi+0xedacb59]
  40a61b:	jb     0x40a616
  40a61d:	test   eax,0x53db19fa
  40a622:	test   al,0x8b
  40a624:	xchg   esi,eax
  40a625:	sub    ebp,edx
  40a627:	xor    dl,bl
  40a629:	pop    es
  40a62a:	in     eax,dx
  40a62b:	ja     0x40a697
  40a62d:	fadd   QWORD PTR [edx]
  40a62f:	sbb    al,dh
  40a631:	mov    ebp,0xe7f5aca1
  40a636:	call   0xf6d8e54d
  40a63b:	add    ecx,DWORD PTR [ebp-0x66]
  40a63e:	div    BYTE PTR [edx]
  40a640:	int3   
  40a641:	sar    DWORD PTR [edx],0x8e
  40a644:	imul   ebp,DWORD PTR [ebx+edx*8+0x2790ddba],0xab33567d
  40a64f:	cmp    ecx,esi
  40a651:	and    dh,BYTE PTR [esp+ebp*8+0x5f]
  40a655:	xchg   esp,eax
  40a656:	fcom   DWORD PTR [ebp-0x5]
  40a659:	xor    eax,0x9f9a32c9
  40a65e:	push   ebp
  40a65f:	or     BYTE PTR cs:[ebx-0x69ec35cc],bh
  40a666:	ret    
  40a667:	mov    bl,0x19
  40a669:	xlat   BYTE PTR ds:[ebx]
  40a66a:	mov    ds:0x8b309cad,al
  40a66f:	iret   
  40a670:	sbb    al,0x9d
  40a672:	and    eax,0xbac0ad4b
  40a677:	push   edi
  40a678:	mov    ecx,0x504ed31
  40a67d:	jle    0x40a61d
  40a67f:	adc    al,0xa2
  40a681:	retf   0xfa8e
  40a684:	(bad)  
  40a685:	inc    edi
  40a686:	das    
  40a687:	cli    
  40a688:	fcomi  st,st(4)
  40a68a:	mov    al,BYTE PTR [ebx+0x15b333df]
  40a690:	dec    ebx
  40a691:	fldenv [eax-0x4eee3ba3]
  40a697:	rol    ecx,1
  40a699:	cmp    DWORD PTR [eax-0x4b],0x4c
  40a69d:	retf   0x3738
  40a6a0:	push   0x17
  40a6a2:	std    
  40a6a3:	loop   0x40a653
  40a6a5:	add    al,dl
  40a6a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6a8:	xor    eax,0x850265cd
  40a6ad:	ins    BYTE PTR es:[edi],dx
  40a6ae:	stos   DWORD PTR es:[edi],eax
  40a6af:	(bad)  
  40a6b0:	outs   dx,DWORD PTR ds:[esi]
  40a6b1:	(bad)  
  40a6b2:	adc    BYTE PTR [ebp+0x73be60e],dh
  40a6b8:	cmp    ebp,DWORD PTR [ecx]
  40a6ba:	jge    0x40a68a
  40a6bc:	js     0x40a6f3
  40a6be:	mov    bh,0xac
  40a6c0:	pop    esp
  40a6c1:	outs   dx,DWORD PTR ds:[esi]
  40a6c2:	aam    0x9a
  40a6c4:	mov    ah,0xd8
  40a6c6:	aas    
  40a6c7:	push   ebp
  40a6c8:	rcl    DWORD PTR [esi-0x62],1
  40a6cb:	push   ss
  40a6cc:	repz dec eax
  40a6ce:	and    eax,0xa8119a37
  40a6d3:	ret    0x3315
  40a6d6:	dec    ebx
  40a6d7:	and    al,0xdf
  40a6d9:	cmp    dl,dh
  40a6db:	inc    esp
  40a6dc:	ins    BYTE PTR es:[edi],dx
  40a6dd:	jmp    0x29cc:0x805189f8
  40a6e4:	popf   
  40a6e5:	(bad)  
  40a6e7:	inc    ecx
  40a6e8:	cmc    
  40a6e9:	test   DWORD PTR [ecx+0x22],esp
  40a6ec:	sub    eax,0x4a2ce6ba
  40a6f1:	inc    ebp
  40a6f2:	jecxz  0x40a6dc
  40a6f4:	pop    esp
  40a6f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6f6:	jmp    0x40a6a6
  40a6f8:	sbb    bl,BYTE PTR [ebp-0xd]
  40a6fb:	xor    cl,bl
  40a6fd:	mov    ebp,0x4fede488
  40a702:	test   eax,0x30f5914e
  40a707:	in     al,0x7d
  40a709:	adc    DWORD PTR [esi+0x7f809ec9],ebp
  40a70f:	mov    bh,0xf3
  40a711:	xchg   esp,eax
  40a712:	jnp    0x40a70f
  40a714:	cld    
  40a715:	dec    ebx
  40a716:	or     edx,DWORD PTR [edx]
  40a718:	cmc    
  40a719:	daa    
  40a71a:	test   eax,0xe9553cf6
  40a71f:	pop    es
  40a720:	xor    eax,0x410163f8
  40a725:	pop    esp
  40a726:	xchg   DWORD PTR [ecx+0x3a9fb227],edi
  40a72c:	xchg   ebp,eax
  40a72d:	jmp    0x194ce867
  40a732:	scas   al,BYTE PTR es:[edi]
  40a733:	adc    DWORD PTR [esp+ebx*1],ebx
  40a736:	mov    eax,ds:0xf4485f79
  40a73b:	xchg   DWORD PTR [edi+ebx*2],eax
  40a73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a73f:	rcl    DWORD PTR [ebx],cl
  40a741:	pop    ebx
  40a742:	outs   dx,DWORD PTR ds:[esi]
  40a743:	pop    edi
  40a744:	xchg   edi,eax
  40a745:	dec    ebp
  40a746:	or     esp,DWORD PTR [edx+0x3b]
  40a749:	lahf   
  40a74a:	ret    0xe220
  40a74d:	fsubr  DWORD PTR [edx-0x5b]
  40a750:	jmp    0x40a7ae
  40a752:	in     eax,0x3f
  40a754:	mov    ecx,0x47e81366
  40a759:	push   0x59
  40a75b:	and    al,0x6d
  40a75d:	add    al,0x55
  40a75f:	dec    esi
  40a760:	xor    al,0x1a
  40a762:	fistp  DWORD PTR [esi]
  40a764:	and    dh,BYTE PTR [ebp-0x49]
  40a767:	mul    DWORD PTR [edx+edx*2+0x300dc2fb]
  40a76e:	mov    al,0x66
  40a770:	fdivr  QWORD PTR [edx+0x794f5329]
  40a776:	mov    dh,0xb
  40a778:	daa    
  40a779:	ins    DWORD PTR es:[edi],dx
  40a77a:	in     al,0x4b
  40a77c:	xor    eax,0x3aeac625
  40a781:	mov    dl,0xde
  40a783:	sub    eax,0x75b375d9
  40a788:	lea    ecx,[eax]
  40a78a:	mov    al,0x52
  40a78c:	fs fdivr st(7),st
  40a78f:	shr    BYTE PTR [ebx+0x6b],1
  40a792:	mov    eax,0x1482e67f
  40a797:	xchg   edi,eax
  40a798:	xchg   esp,eax
  40a799:	pop    edx
  40a79a:	push   es
  40a79b:	call   0x3dc98e9c
  40a7a0:	cmp    edx,0xffffffa7
  40a7a3:	js     0x40a759
  40a7a5:	pop    es
  40a7a6:	in     al,dx
  40a7a7:	xchg   ebx,eax
  40a7a8:	xchg   edi,eax
  40a7a9:	xchg   esp,eax
  40a7aa:	xor    DWORD PTR [edi-0x26],esp
  40a7ad:	fldcw  WORD PTR [ebp-0x19]
  40a7b0:	cmp    DWORD PTR [edi],eax
  40a7b2:	add    BYTE PTR [ebp-0xc],bh
  40a7b5:	pop    ebx
  40a7b6:	mov    ebp,0xf753bf87
  40a7bb:	cli    
  40a7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7bd:	retf   0x755e
  40a7c0:	lahf   
  40a7c1:	jno    0x40a80e
  40a7c3:	retf   0xe28a
  40a7c6:	cmp    esi,DWORD PTR [eax]
  40a7c8:	xchg   ebx,eax
  40a7c9:	or     esi,DWORD PTR [ecx+0x20]
  40a7cc:	mov    ch,0x9f
  40a7ce:	cmp    bl,BYTE PTR [edx+ebp*2-0x2a]
  40a7d2:	nop
  40a7d3:	mov    WORD PTR [ecx-0x2494577e],?
  40a7d9:	ret    
  40a7da:	push   0xdb647762
  40a7df:	les    edi,FWORD PTR [edx-0x1326154e]
  40a7e5:	pusha  
  40a7e6:	sti    
  40a7e7:	add    eax,0xb8793859
  40a7ec:	xor    BYTE PTR [esi],dh
  40a7ee:	sub    ebx,edx
  40a7f0:	leave  
  40a7f1:	aad    0xd0
  40a7f3:	xchg   ebx,edi
  40a7f5:	add    al,0xa9
  40a7f7:	pop    edx
  40a7f8:	out    dx,eax
  40a7f9:	out    0x8b,al
  40a7fb:	(bad)  
  40a7fc:	enter  0x4d10,0x44
  40a800:	xor    BYTE PTR [ecx+0x34],dh
  40a803:	cli    
  40a804:	ins    BYTE PTR es:[edi],dx
  40a805:	into   
  40a806:	repz xor esp,DWORD PTR [edi-0x738c6c23]
  40a80d:	and    ecx,DWORD PTR [esi]
  40a80f:	xchg   esi,eax
  40a810:	into   
  40a811:	jp     0x40a82a
  40a813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a814:	(bad)  
  40a815:	(bad)  
  40a816:	bswap  edx
  40a818:	mov    al,0xed
  40a81a:	in     al,dx
  40a81b:	cmp    al,0x8c
  40a81d:	fwait
  40a81e:	add    bh,BYTE PTR [edi+0x33]
  40a821:	hlt    
  40a822:	pop    ecx
  40a823:	pop    eax
  40a824:	aam    0x29
  40a826:	shl    DWORD PTR [eax+0x2e],1
  40a829:	xchg   esp,eax
  40a82a:	aam    0x5d
  40a82c:	pushf  
  40a82d:	xchg   ecx,eax
  40a82e:	mov    DWORD PTR [edi+0x41],ebx
  40a831:	lock mov ds:0xbcf02fcd,eax
  40a837:	xchg   edx,eax
  40a838:	es (bad) 
  40a83a:	cmc    
  40a83b:	dec    esp
  40a83c:	and    eax,0xc8e29458
  40a841:	fidiv  WORD PTR [ebx-0x12]
  40a844:	sub    al,0x41
  40a846:	arpl   WORD PTR [ebp-0x1f],cx
  40a849:	jl     0x40a803
  40a84b:	nop
  40a84c:	sahf   
  40a84d:	fst    DWORD PTR [ecx+0x6c]
  40a850:	cs int3 
  40a852:	ins    DWORD PTR es:[edi],dx
  40a853:	push   0x32
  40a855:	scas   eax,DWORD PTR es:[edi]
  40a856:	es jnp 0x40a832
  40a859:	imul   esi,DWORD PTR [eax],0xffffff8b
  40a85c:	pusha  
  40a85d:	retf   0xe2e1
  40a860:	inc    ecx
  40a861:	je     0x40a886
  40a863:	sbb    ecx,esi
  40a865:	adc    BYTE PTR [ebp+ecx*8-0x41fd1fb8],0xa0
  40a86d:	and    eax,0x7bedad4f
  40a872:	rcl    DWORD PTR [edi+0x35],0xd8
  40a876:	rcl    DWORD PTR [ecx-0x5b234d0a],0x7b
  40a87d:	cmp    dl,BYTE PTR ds:0x82c8fae9
  40a883:	push   es
  40a884:	repnz xchg edi,eax
  40a886:	adc    DWORD PTR [ebx+0x6c],esp
  40a889:	stos   BYTE PTR es:[edi],al
  40a88a:	lds    esp,FWORD PTR [ebx+0x25ce00aa]
  40a890:	add    al,0x62
  40a892:	repnz rcl BYTE PTR [eax+0x11],cl
  40a896:	jb     0x40a820
  40a898:	leave  
  40a899:	mov    cl,0x76
  40a89b:	adc    al,0xe
  40a89d:	mov    edi,0xa7717df5
  40a8a3:	jmp    0x7985:0x66abb991
  40a8aa:	xor    DWORD PTR [ebx],eax
  40a8ac:	xor    al,0x49
  40a8ae:	das    
  40a8af:	outs   dx,BYTE PTR ds:[esi]
  40a8b0:	cmp    BYTE PTR [eax-0x7d],0x47
  40a8b4:	dec    edx
  40a8b6:	mov    bl,BYTE PTR [ecx-0x9fc812f]
  40a8bc:	inc    ecx
  40a8bd:	dec    esp
  40a8be:	mul    BYTE PTR [edi+0x3f]
  40a8c1:	cli    
  40a8c2:	cmp    bl,al
  40a8c4:	je     0x40a944
  40a8c6:	mov    cs,WORD PTR [ecx+0x44]
  40a8c9:	mov    eax,0x7de4cca7
  40a8ce:	sbb    ebx,DWORD PTR [ecx]
  40a8d0:	imul   eax,DWORD PTR [eax-0x40],0xe320d540
  40a8d7:	adc    ebx,esi
  40a8d9:	out    dx,eax
  40a8da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8db:	inc    ecx
  40a8dc:	stc    
  40a8dd:	clc    
  40a8de:	inc    edi
  40a8df:	iret   
  40a8e0:	repnz scas eax,DWORD PTR es:[edi]
  40a8e2:	and    eax,0x17bc5315
  40a8e7:	cmp    eax,0xc6dd566d
  40a8ec:	mov    esi,0x3742b00a
  40a8f1:	sub    BYTE PTR [edx-0x4ee194f2],0xba
  40a8f8:	jne    0x40a91d
  40a8fa:	inc    ecx
  40a8fb:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8fd:	aas    
  40a8fe:	dec    edx
  40a8ff:	and    eax,0x69e84d8d
  40a904:	int3   
  40a905:	std    
  40a906:	mov    ecx,esi
  40a908:	ja     0x40a8ea
  40a90a:	ins    BYTE PTR es:[edi],dx
  40a90b:	jb     0x40a8b2
  40a90d:	jmp    0x40a92b
  40a90f:	add    ch,ch
  40a911:	xchg   DWORD PTR [esi+0x503aa6ec],esp
  40a917:	jbe    0x40a8b2
  40a919:	call   0xfddfbf9d
  40a91e:	mov    es,WORD PTR [eax-0x72]
  40a921:	out    0x4f,eax
  40a923:	xchg   ecx,eax
  40a924:	mov    esp,0x327a8d14
  40a929:	and    dl,BYTE PTR es:[edx*1-0x22b3b374]
  40a931:	and    BYTE PTR [edx],ch
  40a933:	rcl    BYTE PTR [ebx-0x5dff9cbb],cl
  40a939:	mov    cl,0x89
  40a93b:	pushf  
  40a93c:	test   DWORD PTR [ebx-0x251dc4a],esp
  40a942:	mov    dl,0x4
  40a944:	mov    eax,ds:0xd04a1097
  40a949:	bound  ebp,QWORD PTR [eax+0x2c58881a]
  40a94f:	fild   QWORD PTR [ebp-0x1ea46094]
  40a955:	aad    0x4e
  40a957:	add    esp,0xde9b8e66
  40a95d:	pop    ebx
  40a95e:	and    ebp,ebx
  40a960:	sbb    cl,BYTE PTR [ebp+0x40dfdaa7]
  40a966:	push   esp
  40a967:	lds    esp,FWORD PTR [ecx+0x669f30c3]
  40a96d:	loop   0x40a9a3
  40a96f:	cmp    dh,ch
  40a971:	stc    
  40a972:	nop
  40a973:	push   cs
  40a974:	add    al,0x33
  40a976:	jle    0x40a95e
  40a978:	test   BYTE PTR [edi],bh
  40a97a:	icebp  
  40a97b:	jnp    0x40a9cd
  40a97d:	inc    eax
  40a97e:	leave  
  40a97f:	ret    
  40a980:	cli    
  40a981:	pop    ecx
  40a982:	iret   
  40a983:	and    BYTE PTR [ebx-0x2],ch
  40a986:	lods   eax,DWORD PTR ds:[esi]
  40a987:	enter  0xea48,0xa7
  40a98b:	fmulp  st(4),st
  40a98d:	xchg   esi,eax
  40a98e:	dec    edx
  40a98f:	mov    esp,0xd815621
  40a994:	jg     0x40a924
  40a996:	inc    edx
  40a997:	add    cl,ah
  40a999:	jp     0x40a99b
  40a99b:	add    BYTE PTR [esi+0x75108af],bh
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x428e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x428e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x428e83,0x0
  40a9dd:	mov    eax,ds:0x428e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x428e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x428e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x428e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x42a9ff
  40aa0b:	cmp    DWORD PTR ds:0x428e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x428e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x428e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x428e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x428e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x428e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4281a7
  40aa69:	call   DWORD PTR ds:0x42a9cb
  40aa6f:	mov    ebx,DWORD PTR ds:0x428e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x428e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x428eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x429bfb
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x428ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x428e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x428e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x428e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x428e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x428e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x428173
  40aadf:	call   DWORD PTR ds:0x42a9cf
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	jge    0x40aaa4
  40aafd:	nop
  40aafe:	aad    0xe7
  40ab00:	test   BYTE PTR [ebx-0x7c9f0e7d],0x83
  40ab07:	retf   
  40ab08:	and    eax,0xdd1f9f2e
  40ab0d:	into   
  40ab0e:	stc    
  40ab0f:	jg     0x40ab18
  40ab11:	push   ecx
  40ab12:	pop    eax
  40ab13:	push   ecx
  40ab14:	sub    DWORD PTR [esi],esp
  40ab16:	jle    0x40ab55
  40ab18:	retf   
  40ab19:	jmp    0x7f4036fb
  40ab1e:	xchg   BYTE PTR [esi+edx*4+0x1b],dl
  40ab22:	pop    ebp
  40ab23:	jne    0x40ab40
  40ab25:	or     DWORD PTR [eax-0x24356e3b],0xecf268e
  40ab2f:	xchg   edi,eax
  40ab30:	xor    BYTE PTR [esi-0x2e],dl
  40ab33:	inc    esi
  40ab34:	xchg   esp,eax
  40ab35:	hlt    
  40ab36:	mov    ds:0xcf7d4eda,eax
  40ab3b:	push   cs
  40ab3c:	mov    eax,ds:0x5e190a3d
  40ab41:	out    0xcd,eax
  40ab43:	pop    edi
  40ab44:	jle    0x40aadc
  40ab46:	aad    0x8b
  40ab48:	dec    edx
  40ab49:	push   ebx
  40ab4a:	test   DWORD PTR [ecx-0x66],esi
  40ab4d:	lds    ebp,FWORD PTR [ebx+0x3ad354f7]
  40ab53:	mov    dh,BYTE PTR [eax+0x63]
  40ab56:	retf   0x164
  40ab59:	imul   edx,DWORD PTR [ebx+0x19],0xc7b760a9
  40ab60:	dec    ecx
  40ab61:	jecxz  0x40abd2
  40ab63:	aaa    
  40ab64:	retf   0xcf0a
  40ab67:	cmp    DWORD PTR [esi],edx
  40ab69:	jno    0x40ab6c
  40ab6b:	scas   eax,DWORD PTR es:[edi]
  40ab6c:	loopne 0x40ab84
  40ab6e:	pop    es
  40ab6f:	jns    0x40ab55
  40ab71:	leave  
  40ab72:	imul   ecx,DWORD PTR [ebp+0x5ed66d01],0x65
  40ab79:	mov    dl,0xc7
  40ab7b:	iret   
  40ab7c:	(bad)  
  40ab7d:	cmp    DWORD PTR [ecx-0x23ad850f],ebp
  40ab83:	mov    dh,0xc1
  40ab85:	fs int 0xca
  40ab88:	neg    BYTE PTR [ebp-0x66]
  40ab8b:	rol    BYTE PTR [ebx+ecx*1+0x2c57f551],cl
  40ab92:	fs adc eax,esi
  40ab95:	test   al,0x8e
  40ab97:	mov    ebx,0x991d1333
  40ab9c:	sub    al,0xe8
  40ab9e:	jns    0x40abd6
  40aba0:	cmp    ecx,ebx
  40aba2:	add    al,0xab
  40aba4:	retf   0x161e
  40aba7:	adc    ebx,esp
  40aba9:	arpl   ax,bp
  40abab:	lahf   
  40abac:	push   ecx
  40abad:	mov    bh,0xab
  40abaf:	mov    dl,0x4e
  40abb1:	into   
  40abb2:	pop    ebx
  40abb3:	inc    ebp
  40abb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abb5:	add    eax,0x536b86cc
  40abba:	mov    dh,0xc5
  40abbc:	aad    0x75
  40abbe:	ins    DWORD PTR es:[di],dx
  40abc0:	cmp    al,0x44
  40abc2:	dec    ebp
  40abc3:	xchg   DWORD PTR [edx-0x1c86dac4],edx
  40abc9:	jne    0x40ab69
  40abcb:	cmp    dh,BYTE PTR [edx]
  40abcd:	movaps xmm5,xmm5
  40abd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abd1:	mov    al,ds:0xe519cfef
  40abd6:	mov    bl,0xa9
  40abd8:	add    DWORD PTR [ecx+eiz*2-0x7f5e3e8f],eax
  40abdf:	dec    eax
  40abe0:	cli    
  40abe1:	cmc    
  40abe2:	xchg   DWORD PTR [bp+0xb],edi
  40abe6:	pusha  
  40abe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abe8:	mov    al,0x1c
  40abea:	ret    0x8d5b
  40abed:	dec    ebp
  40abee:	hlt    
  40abef:	mov    dh,0x4e
  40abf1:	jg     0x40ac38
  40abf3:	inc    ecx
  40abf4:	hlt    
  40abf5:	rol    DWORD PTR [ecx+ecx*1+0x5e],cl
  40abf9:	xchg   esp,eax
  40abfa:	mov    ebx,0x10358aeb
  40abff:	dec    ebp
  40ac00:	push   ss
  40ac01:	nop
  40ac02:	cmp    DWORD PTR [ecx],esi
  40ac04:	push   eax
  40ac05:	outs   dx,DWORD PTR ds:[esi]
  40ac06:	or     DWORD PTR [eax-0x6b],eax
  40ac09:	loopne 0x40abcf
  40ac0b:	mov    edx,0x3ee86cfb
  40ac10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac11:	mov    al,ds:0x3766aeec
  40ac16:	mov    eax,0xca0e8929
  40ac1b:	fdiv   QWORD PTR [edi+0x3c]
  40ac1e:	mov    ecx,edx
  40ac20:	sbb    eax,0x1473a289
  40ac25:	push   esp
  40ac26:	stos   BYTE PTR es:[edi],al
  40ac27:	lahf   
  40ac28:	jno    0x40abed
  40ac2a:	shl    bl,cl
  40ac2c:	js     0x40abd5
  40ac2e:	xor    eax,0x4b875fe
  40ac33:	mov    dl,bl
  40ac35:	js     0x40abef
  40ac37:	loop   0x40abbe
  40ac39:	enter  0x6bfd,0x1f
  40ac3d:	mov    cl,0xa5
  40ac3f:	arpl   si,si
  40ac41:	ficom  DWORD PTR [esi-0x16]
  40ac44:	test   al,0xce
  40ac46:	adc    eax,0xd0653e8f
  40ac4b:	pop    edx
  40ac4c:	sbb    eax,0xecbfab81
  40ac51:	cmp    eax,0x8acf7f4f
  40ac56:	xchg   ebx,eax
  40ac57:	into   
  40ac58:	mov    BYTE PTR [ecx-0x6e],ah
  40ac5b:	add    eax,0xdf3afb46
  40ac60:	retf   
  40ac61:	xchg   BYTE PTR [eax-0x3c],bl
  40ac64:	(bad)  
  40ac65:	outs   dx,DWORD PTR ds:[esi]
  40ac66:	leave  
  40ac67:	imul   esi,DWORD PTR [edi-0x53140db0],0x2c2e6f
  40ac71:	sbb    ch,BYTE PTR [esi+0x66]
  40ac74:	jmp    0x40ac1e
  40ac76:	jmp    0x255c:0xdaf88129
  40ac7d:	mov    BYTE PTR gs:[eax],0x2a
  40ac81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac82:	pop    eax
  40ac83:	inc    eax
  40ac84:	mov    ebp,0x736dab93
  40ac89:	adc    al,0xc8
  40ac8b:	repnz pushf 
  40ac8d:	jg     0x40acc9
  40ac8f:	imul   edx,ecx,0x218273f7
  40ac95:	ret    
  40ac96:	adc    DWORD PTR [edi-0x6f],ebx
  40ac99:	adc    BYTE PTR [edi+eiz*4-0x6f],ch
  40ac9d:	jnp    0x40ac69
  40ac9f:	repz inc esi
  40aca1:	xor    eax,0x29d476ec
  40aca6:	stos   BYTE PTR es:[edi],al
  40aca7:	pop    edx
  40aca8:	aam    0x80
  40acaa:	pop    ebx
  40acab:	or     cl,BYTE PTR [edx-0x7d]
  40acae:	mov    dl,0xeb
  40acb0:	mov    edi,0x2341d947
  40acb5:	sahf   
  40acb6:	adc    eax,0xba4f074a
  40acbb:	lock pop esp
  40acbd:	mov    dh,0xb4
  40acbf:	in     al,0xfa
  40acc1:	mov    eax,0x42b26026
  40acc6:	mov    edx,esp
  40acc8:	jmp    0x699fffc8
  40accd:	call   FWORD PTR [eax]
  40accf:	dec    eax
  40acd0:	push   ebx
  40acd1:	mov    ds:0xca85a973,al
  40acd6:	popf   
  40acd7:	(bad)  
  40acd8:	ja     0x40ac62
  40acda:	in     al,0x1
  40acdc:	or     esp,DWORD PTR [ecx-0x35376ee2]
  40ace2:	ins    DWORD PTR es:[edi],dx
  40ace3:	loopne 0x40ad4d
  40ace5:	cmovg  edi,DWORD PTR [ebx]
  40ace8:	xchg   esp,eax
  40ace9:	(bad)  
  40acea:	cdq    
  40aceb:	jmp    0x6dacdce8
  40acf0:	dec    edx
  40acf1:	scas   eax,DWORD PTR es:[edi]
  40acf2:	lock add BYTE PTR [ecx],0xec
  40acf6:	xchg   BYTE PTR [ecx+0x12d46deb],al
  40acfc:	int3   
  40acfd:	adc    al,0xb3
  40acff:	or     al,0xc1
  40ad01:	pop    esi
  40ad02:	mov    ch,bh
  40ad04:	mov    ebx,0xe1a0a7d7
  40ad09:	in     al,0x4e
  40ad0b:	jmp    0xb32b:0xfbde68f8
  40ad12:	dec    esp
  40ad13:	jae    0x40ac9b
  40ad15:	bound  ebp,QWORD PTR [ebx-0x685c0273]
  40ad1b:	stos   DWORD PTR es:[edi],eax
  40ad1c:	xchg   edi,eax
  40ad1d:	icebp  
  40ad1e:	ins    DWORD PTR es:[edi],dx
  40ad1f:	jae    0x40acc6
  40ad21:	fadd   QWORD PTR [ecx-0x2735d621]
  40ad27:	aaa    
  40ad28:	and    ebp,DWORD PTR [ecx+0x6]
  40ad2b:	in     al,0xcf
  40ad2d:	ret    
  40ad2e:	pusha  
  40ad2f:	stos   BYTE PTR es:[edi],al
  40ad30:	test   edx,edx
  40ad32:	add    edx,DWORD PTR ds:0xf15b8e01
  40ad38:	mov    ebp,0xa667f847
  40ad3d:	imul   esp,DWORD PTR [eax],0xffffffc2
  40ad40:	aaa    
  40ad41:	or     ebx,edx
  40ad43:	xchg   ebp,eax
  40ad44:	mov    eax,0x6708a6ba
  40ad49:	cmp    ah,BYTE PTR [eax-0x28ee86c5]
  40ad4f:	sub    BYTE PTR [ebx+0x25],ah
  40ad52:	fwait
  40ad53:	push   cs
  40ad54:	xchg   esi,eax
  40ad55:	jg     0x40acdb
  40ad57:	adc    eax,0x2109edf2
  40ad5c:	and    esi,DWORD PTR gs:[ebp+esi*1-0x35]
  40ad61:	and    al,BYTE PTR [eax-0x44d308b2]
  40ad67:	push   esp
  40ad68:	xchg   cl,ah
  40ad6a:	loop   0x40ad97
  40ad6c:	dec    ebx
  40ad6d:	adc    eax,0x251ea930
  40ad72:	popa   
  40ad73:	jl     0x40add9
  40ad75:	js     0x40adbe
  40ad77:	mov    cl,0xa3
  40ad79:	sar    BYTE PTR ds:0xafa9a93,1
  40ad7f:	xchg   ecx,eax
  40ad80:	mov    WORD PTR [ebx+ebp*8-0x5d],fs
  40ad84:	xchg   edx,eax
  40ad85:	jbe    0x40ad17
  40ad87:	pop    ebp
  40ad88:	mov    ebx,0xfe763213
  40ad8d:	cld    
  40ad8e:	push   ebp
  40ad8f:	sub    esp,DWORD PTR [ebp+0x6d]
  40ad92:	xchg   BYTE PTR [edi-0x463c57ba],ch
  40ad98:	loope  0x40add4
  40ad9a:	adc    DWORD PTR [ebp+esi*1-0x7e],esp
  40ad9e:	repz adc BYTE PTR [ebx+0x10],cl
  40ada2:	dec    ecx
  40ada3:	mov    dh,0x85
  40ada5:	ja     0x40adb0
  40ada7:	and    BYTE PTR [edi+0x79],0x86
  40adab:	mov    ecx,0x889566b4
  40adb0:	int3   
  40adb1:	push   0x82c12082
  40adb6:	dec    edi
  40adb7:	stos   DWORD PTR es:[edi],eax
  40adb8:	pop    esp
  40adb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adba:	mov    dh,0xb4
  40adbc:	repz jge 0x40ad81
  40adbf:	jne    0x40addc
  40adc1:	loop   0x40ad56
  40adc3:	out    dx,eax
  40adc4:	lock loop 0x40ae33
  40adc7:	xor    BYTE PTR [ecx+eax*1-0x75],0x17
  40adcc:	inc    ebx
  40adcd:	add    al,0x92
  40adcf:	push   es
  40add0:	sbb    WORD PTR [ebp-0x1d098a04],bp
  40add7:	iret   
  40add8:	jg     0x40ade4
  40adda:	sbb    dh,BYTE PTR [eax]
  40addc:	lods   eax,DWORD PTR ds:[esi]
  40addd:	(bad)  
  40adde:	and    bl,BYTE PTR [ebx]
  40ade0:	pop    edi
  40ade1:	aam    0x9e
  40ade3:	dec    ecx
  40ade4:	daa    
  40ade5:	push   esi
  40ade6:	inc    edx
  40ade7:	test   BYTE PTR [eax],0x13
  40adea:	inc    ecx
  40adeb:	(bad)  
  40aded:	dec    ecx
  40adee:	imul   ebp,DWORD PTR [esi+0x3b834b55],0xb4b7ae47
  40adf8:	fdivr  QWORD PTR [edi]
  40adfa:	pop    ss
  40adfb:	mov    cl,0xd
  40adfd:	adc    al,0x1d
  40adff:	ror    DWORD PTR [esi+edx*2+0xdea401e],0xea
  40ae07:	mov    al,ds:0x62c3f0f2
  40ae0c:	cmp    ecx,DWORD PTR [eax+0x53a2bef3]
  40ae12:	mul    BYTE PTR [ecx]
  40ae14:	sbb    cl,BYTE PTR [ebx+0x3e9c517c]
  40ae1a:	ins    BYTE PTR es:[edi],dx
  40ae1b:	cmp    eax,0x2183c6bc
  40ae20:	xor    al,0xe3
  40ae22:	add    BYTE PTR [eax+0x2384e2d5],ah
  40ae28:	call   FWORD PTR [ecx+0x410d5d0a]
  40ae2e:	xchg   edx,eax
  40ae2f:	cmp    DWORD PTR [ecx+0x1673ef96],ecx
  40ae35:	les    eax,FWORD PTR [ecx+0x67]
  40ae38:	rcr    DWORD PTR [esp+ebx*1],cl
  40ae3b:	sar    BYTE PTR [edi+0x1b],cl
  40ae3e:	std    
  40ae3f:	xlat   BYTE PTR ds:[ebx]
  40ae40:	jg     0x40adef
  40ae42:	pop    es
  40ae43:	dec    edi
  40ae44:	dec    edx
  40ae45:	push   eax
  40ae46:	stc    
  40ae47:	add    BYTE PTR [edi],bh
  40ae49:	mov    bh,0xbf
  40ae4b:	push   cs
  40ae4c:	repz adc eax,0x1dc8e9bb
  40ae52:	(bad)  
  40ae53:	xchg   esp,eax
  40ae54:	aas    
  40ae55:	xor    DWORD PTR ds:0x4c583df5,0xffffffe5
  40ae5c:	call   DWORD PTR [ebp-0x24]
  40ae5f:	jmp    0x4a43:0x461a0c7
  40ae66:	jmp    0xb40b511a
  40ae6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae6c:	inc    ebp
  40ae6d:	std    
  40ae6e:	sub    al,0xb
  40ae70:	xor    ecx,DWORD PTR [eax+ecx*1+0x30]
  40ae74:	mov    fs,WORD PTR [ecx]
  40ae76:	arpl   bx,ax
  40ae78:	pop    ebp
  40ae79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae7a:	inc    ebx
  40ae7b:	jne    0x40aebd
  40ae7d:	and    eax,0x5bbd7afd
  40ae82:	adc    ecx,DWORD PTR [edx-0x53]
  40ae85:	or     al,cl
  40ae87:	pushf  
  40ae88:	cld    
  40ae89:	(bad)  
  40ae8a:	nop
  40ae8b:	xor    DWORD PTR [ecx],esi
  40ae8d:	xor    bh,dh
  40ae8f:	pop    ebp
  40ae90:	enter  0xb84,0x6a
  40ae94:	jo     0x40ae5e
  40ae96:	add    BYTE PTR [edi+edx*2-0x4d0fed1d],bl
  40ae9d:	loopne 0x40af18
  40ae9f:	cmp    esp,DWORD PTR [esi*1+0x392f02d]
  40aea6:	sub    eax,0xaeef8170
  40aeab:	mov    ecx,0x1394ae3d
  40aeb0:	mov    ah,0xb7
  40aeb2:	xor    DWORD PTR [edi+0x550b0c4e],0xfffffff7
  40aeb9:	lds    ebp,FWORD PTR ds:0xdaaee08f
  40aebf:	jb     0x40af1a
  40aec1:	mov    edx,0xffa0eb85
  40aec6:	mov    ebx,0x978d6ee5
  40aecb:	jmp    0x4da500f1
  40aed0:	out    dx,eax
  40aed1:	or     BYTE PTR [edx+edx*2+0x27],al
  40aed5:	push   esp
  40aed6:	dec    ecx
  40aed7:	and    al,0xa2
  40aed9:	sti    
  40aeda:	adc    BYTE PTR [eax-0x6e],dl
  40aedd:	rcr    bl,cl
  40aedf:	jns    0x40aec5
  40aee1:	mov    ch,0x79
  40aee3:	iret   
  40aee4:	lahf   
  40aee5:	push   0xffffff9f
  40aee7:	jecxz  0x40af67
  40aee9:	xor    al,0x8f
  40aeeb:	sbb    ah,al
  40aeed:	sbb    al,BYTE PTR [eax-0x52ebf954]
  40aef3:	mov    al,ds:0x7b0b1ebc
  40aef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aef9:	sbb    al,0x7f
  40aefb:	out    dx,eax
  40aefc:	sbb    BYTE PTR [esi+0x335bc897],ah
  40af02:	call   0xfeea:0x81a422a1
  40af09:	cmp    ebx,DWORD PTR [edx-0x6b]
  40af0c:	cwde   
  40af0d:	mov    bl,0x16
  40af0f:	mov    cl,0x7f
  40af11:	into   
  40af12:	add    DWORD PTR [edx],0x3
  40af15:	cmp    eax,0xa9487385
  40af1a:	cs sbb eax,0x357fbb47
  40af20:	or     DWORD PTR ds:0x8eb396af,ebx
  40af26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af27:	push   ebx
  40af28:	out    0x95,al
  40af2a:	mov    DWORD PTR [eax*4+0x7a51c18b],eax
  40af31:	push   0xfbaf45ad
  40af36:	out    dx,al
  40af37:	aaa    
  40af38:	add    DWORD PTR [esi],0xffffffdb
  40af3b:	out    dx,al
  40af3c:	cmc    
  40af3d:	sub    DWORD PTR [ebp+0xdd4583b],esi
  40af43:	clc    
  40af44:	or     BYTE PTR [ecx+edi*4+0x49bee127],0xd5
  40af4c:	add    DWORD PTR [eax+0xa],ecx
  40af4f:	push   eax
  40af50:	aad    0xd1
  40af52:	push   es
  40af53:	xchg   edx,eax
  40af54:	out    0xb5,al
  40af56:	daa    
  40af57:	std    
  40af58:	loopne 0x40afae
  40af5a:	pop    es
  40af5b:	jnp    0x40af32
  40af5d:	popa   
  40af5e:	push   ecx
  40af5f:	das    
  40af60:	dec    eax
  40af61:	inc    esi
  40af62:	retf   
  40af63:	push   esi
  40af64:	(bad)  [ecx+esi*2]
  40af67:	and    DWORD PTR [eax],ebx
  40af69:	aas    
  40af6a:	xor    DWORD PTR [eax],ecx
  40af6c:	mov    bl,0x50
  40af6e:	push   eax
  40af6f:	push   ecx
  40af70:	pop    edi
  40af71:	xor    DWORD PTR [ecx],esi
  40af73:	test   al,0xa9
  40af75:	jl     0x40af25
  40af77:	lock and DWORD PTR [edx],ebx
  40af7a:	ds icebp 
  40af7c:	pop    ds
  40af7d:	stos   BYTE PTR es:[edi],al
  40af7e:	push   edi
  40af7f:	hlt    
  40af80:	xor    eax,0x4b57c9e8
  40af85:	aam    0x96
  40af87:	ss fdiv st(7),st
  40af8a:	test   DWORD PTR [eax+0x71],esp
  40af8d:	sub    DWORD PTR [ecx-0x498bd8b],ebx
  40af93:	adc    eax,0x89cd8a98
  40af98:	sub    BYTE PTR [ebx+ebx*1+0x46],cl
  40af9c:	xchg   ebp,eax
  40af9d:	pop    esi
  40af9e:	add    dh,0xf8
  40afa1:	lock add al,0xba
  40afa4:	cmp    eax,0xe33311ec
  40afa9:	ret    0x473
  40afac:	inc    esp
  40afad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afae:	jecxz  0x40afb6
  40afb0:	and    eax,0xc568c90
  40afb5:	test   BYTE PTR [edx+esi*8-0x31],ah
  40afb9:	clc    
  40afba:	xchg   ebx,ecx
  40afbc:	shl    BYTE PTR [edx+0x27],cl
  40afbf:	adc    DWORD PTR [edi+esi*2-0x3e],edx
  40afc3:	add    al,0x99
  40afc5:	retf   0xf13
  40afc8:	(bad)  
  40afc9:	pop    ds
  40afca:	add    ah,BYTE PTR [ecx+ecx*4]
  40afcd:	and    dh,BYTE PTR ds:0xf6b7db08
  40afd3:	adc    esi,esi
  40afd5:	push   esp
  40afd6:	xchg   edx,eax
  40afd7:	test   cl,ch
  40afd9:	inc    BYTE PTR [ecx+eax*1]
  40afdc:	sbb    ebp,DWORD PTR [esi]
  40afde:	and    al,0xae
  40afe0:	in     al,0xe4
  40afe2:	pop    edx
  40afe3:	data16 test BYTE PTR [ecx-0x30],dh
  40afe7:	sbb    DWORD PTR [ebp+0x56],ecx
  40afea:	pop    ds
  40afeb:	or     edx,ecx
  40afed:	or     esp,DWORD PTR [ebp+0x40]
  40aff0:	dec    edx
  40aff1:	rol    BYTE PTR [ebp-0x27],0x4f
  40aff5:	or     al,0x78
  40aff7:	pop    eax
  40aff8:	push   esi
  40aff9:	mov    ecx,0x7fbd8cbc
  40affe:	arpl   WORD PTR [eax-0x5f36ceb4],bp
  40b004:	das    
  40b005:	ret    
  40b006:	fnclex 
  40b008:	add    eax,0xac4efa1
  40b00d:	mov    edi,0x43ea724d
  40b012:	add    al,0x22
  40b014:	stos   DWORD PTR es:[edi],eax
  40b015:	shr    dh,cl
  40b017:	push   ecx
  40b018:	and    dl,bl
  40b01a:	jge    0x40afb0
  40b01c:	repz out dx,eax
  40b01e:	sbb    dh,BYTE PTR [ecx-0x6bf0da94]
  40b024:	inc    esi
  40b025:	push   edx
  40b026:	lock loopne 0x40b026
  40b029:	or     edx,DWORD PTR [esi+0x3339a661]
  40b02f:	mov    ds:0x9da90aad,al
  40b034:	outs   dx,DWORD PTR ds:[esi]
  40b035:	fidivr DWORD PTR [edi-0x466df411]
  40b03b:	jg     0x40b07d
  40b03d:	popf   
  40b03e:	daa    
  40b03f:	shl    DWORD PTR [eax+0x28],cl
  40b042:	add    esp,DWORD PTR [eax+0x2a]
  40b045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b046:	clc    
  40b047:	out    dx,al
  40b048:	(bad)  
  40b049:	sub    BYTE PTR [edi+0xf240290],0x2d
  40b050:	or     al,0xa3
  40b052:	push   eax
  40b053:	jl     0x3a39849e
  40b059:	inc    esp
  40b05a:	icebp  
  40b05b:	push   cs
  40b05c:	stos   BYTE PTR es:[edi],al
  40b05d:	les    edx,FWORD PTR [esi+0x4aea857b]
  40b063:	outs   dx,DWORD PTR ds:[esi]
  40b064:	jl     0x40b0b2
  40b066:	test   al,ah
  40b068:	push   esp
  40b069:	jbe    0x40b0c2
  40b06b:	iret   
  40b06c:	jnp    0x40b04e
  40b06e:	dec    edi
  40b06f:	pop    DWORD PTR [eax+0x2febd982]
  40b075:	fs mov esp,0xf437cb3
  40b07b:	lods   eax,DWORD PTR ds:[esi]
  40b07c:	loop   0x40afff
  40b07e:	call   0x3fa8492
  40b083:	cmp    al,0xa1
  40b085:	sub    eax,0xafe83b3c
  40b08a:	mov    ch,BYTE PTR [edi-0x1bb5a962]
  40b090:	add    esi,DWORD PTR [ebx-0x11f31bc]
  40b096:	neg    BYTE PTR [ebx]
  40b098:	lods   al,BYTE PTR ds:[esi]
  40b099:	jnp    0x40b0ff
  40b09b:	mov    ch,0xbe
  40b09d:	packssdw mm6,QWORD PTR [ebx]
  40b0a0:	outs   dx,DWORD PTR ds:[esi]
  40b0a1:	cmp    ch,BYTE PTR [esi-0x3fc65ac]
  40b0a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0a8:	mov    ebp,ecx
  40b0aa:	sbb    al,0xe2
  40b0ac:	imul   ebp,DWORD PTR [edx+0x6e80db8e],0x33ca2126
  40b0b6:	inc    eax
  40b0b7:	int3   
  40b0b8:	nop
  40b0b9:	sub    al,0xa9
  40b0bb:	cmp    DWORD PTR [edx+0x79],eax
  40b0be:	loope  0x40b0cb
  40b0c0:	(bad)  
  40b0c1:	and    al,0x58
  40b0c3:	mov    esi,0x365264be
  40b0c8:	rol    DWORD PTR [ecx-0x4c],0x4b
  40b0cc:	add    al,0x25
  40b0ce:	push   edi
  40b0cf:	fldcw  WORD PTR [ecx+0x68]
  40b0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0d3:	ret    
  40b0d4:	sbb    al,0x75
  40b0d6:	push   ss
  40b0d7:	jmp    0x632d:0xe24d1241
  40b0de:	imul   ebp,ecx,0xffffff84
  40b0e1:	jne    0x40b0df
  40b0e3:	pop    ebx
  40b0e4:	cmp    dl,BYTE PTR [ebx+0x7]
  40b0e7:	repnz out dx,al
  40b0e9:	mov    edx,0xc7dd9320
  40b0ee:	mov    dl,0xf9
  40b0f0:	sahf   
  40b0f1:	test   eax,0x5e8e5960
  40b0f6:	inc    ebx
  40b0f7:	mov    bl,0x35
  40b0f9:	(bad)  
  40b0fb:	das    
  40b0fc:	shl    BYTE PTR [edi],0xf4
  40b0ff:	sub    BYTE PTR ss:[eax],bl
  40b102:	dec    esp
  40b103:	cld    
  40b104:	jge    0x40b0e9
  40b106:	xor    ebp,DWORD PTR [edx-0x41cefd05]
  40b10c:	mov    ebp,es
  40b10e:	fchs   
  40b110:	mov    DWORD PTR [ebp-0x7d],edi
  40b113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b114:	pop    ds
  40b115:	int3   
  40b116:	sti    
  40b117:	jbe    0x40b0cb
  40b119:	jmp    0x99fe:0xc9807195
  40b120:	arpl   WORD PTR [ecx-0x6cdc1c36],di
  40b126:	repnz (bad) 
  40b128:	xor    eax,0xa1fbcaca
  40b12d:	inc    esi
  40b12e:	ja     0x40b19c
  40b130:	xchg   esi,eax
  40b131:	jmp    0x40b0e3
  40b133:	sub    dh,BYTE PTR [eax+0x7a2bea59]
  40b139:	xchg   esp,eax
  40b13a:	rol    DWORD PTR [edi],0x16
  40b13d:	jb     0x40b17f
  40b13f:	imul   edi,DWORD PTR [edi+0x66],0x6a
  40b143:	jge    0x40b167
  40b145:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40b147:	pop    eax
  40b148:	pop    eax
  40b149:	push   esi
  40b14a:	and    BYTE PTR [eax],0x27
  40b14d:	retf   
  40b14e:	adc    DWORD PTR [edx+0x78],0xa0900594
  40b155:	nop
  40b156:	clc    
  40b157:	imul   ebp,esp,0x199279cf
  40b15d:	enter  0xd509,0x97
  40b161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b162:	sub    esi,DWORD PTR [edi-0x78c32d37]
  40b168:	ins    DWORD PTR es:[edi],dx
  40b169:	xor    BYTE PTR ds:0xe07f5ebc,0xf2
  40b170:	cmp    BYTE PTR ds:0x4a7377af,al
  40b176:	test   esi,ebx
  40b178:	push   eax
  40b179:	gs mov ecx,0x632b782d
  40b17f:	adc    eax,0xe643f6f7
  40b184:	xor    eax,DWORD PTR [edx]
  40b186:	jmp    0x40b181
  40b188:	fcom   QWORD PTR [esi]
  40b18a:	cdq    
  40b18b:	mov    dl,cl
  40b18d:	int    0x5
  40b18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b190:	mov    cl,0x91
  40b192:	(bad)  
  40b193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b194:	je     0x40b16a
  40b196:	int    0xf2
  40b198:	call   FWORD PTR [esp+ecx*2-0x26]
  40b19c:	xchg   BYTE PTR [ebp+0x2b3e2dd8],al
  40b1a2:	push   esi
  40b1a3:	jl     0x40b220
  40b1a5:	dec    ebx
  40b1a6:	aad    0x7f
  40b1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1a9:	das    
  40b1aa:	xor    DWORD PTR [eax-0x1b],ecx
  40b1ad:	mov    ds:0xd0a1f1cd,eax
  40b1b2:	jle    0x40b134
  40b1b4:	or     edx,DWORD PTR [esi+edi*2+0x108da4d4]
  40b1bb:	pushf  
  40b1bc:	jo     0x40b1b1
  40b1be:	mov    esi,0x718e85fe
  40b1c3:	xor    ch,bl
  40b1c5:	dec    edi
  40b1c6:	js     0x40b220
  40b1c8:	sub    dl,ch
  40b1ca:	jle    0x40b24a
  40b1cc:	call   0xd0a6:0x9d051d98
  40b1d3:	inc    esp
  40b1d4:	stos   BYTE PTR es:[edi],al
  40b1d5:	rcr    dh,cl
  40b1d7:	pop    eax
  40b1d8:	add    eax,DWORD PTR [ebp+0x1b]
  40b1db:	push   ebp
  40b1dc:	mov    ch,al
  40b1de:	outs   dx,DWORD PTR ds:[esi]
  40b1df:	stos   DWORD PTR es:[edi],eax
  40b1e0:	fld    DWORD PTR [esi+edi*8]
  40b1e3:	dec    ebp
  40b1e4:	jnp    0x40b183
  40b1e6:	int    0xf6
  40b1e8:	jb     0x40b170
  40b1ea:	mov    ds:0xcde17e67,eax
  40b1ef:	ins    DWORD PTR es:[edi],dx
  40b1f0:	cdq    
  40b1f1:	mov    ?,WORD PTR [edi+0x20]
  40b1f4:	jg     0x40b1cb
  40b1f6:	mov    bh,0x23
  40b1f8:	sti    
  40b1f9:	adc    ebp,esi
  40b1fb:	mov    dh,0x84
  40b1fd:	dec    esi
  40b1fe:	and    BYTE PTR [ecx-0x335ae59b],cl
  40b204:	shl    BYTE PTR [esi-0x39],cl
  40b207:	outs   dx,BYTE PTR ds:[esi]
  40b208:	sbb    ebx,edi
  40b20a:	jge    0x40b253
  40b20c:	xor    bh,BYTE PTR [eax]
  40b20e:	int    0xa7
  40b210:	mov    ds:0x7b767f06,eax
  40b215:	pop    es
  40b216:	retf   0x6a5d
  40b219:	int3   
  40b21a:	clc    
  40b21b:	and    DWORD PTR [ebx-0x56d9098b],eax
  40b221:	in     al,0x87
  40b223:	shl    DWORD PTR [edx+edx*1+0x1d],1
  40b227:	repnz shl DWORD PTR [ecx],cl
  40b22a:	sbb    esp,edi
  40b22c:	pushf  
  40b22d:	jg     0x40b213
  40b22f:	inc    esi
  40b230:	(bad)  
  40b231:	arpl   WORD PTR [ebx],di
  40b233:	sbb    edx,0x62796940
  40b239:	push   ecx
  40b23a:	ja     0x40b29c
  40b23c:	lock push cs
  40b23e:	mov    al,ds:0x82672606
  40b243:	dec    ebp
  40b244:	adc    eax,0x69ddff1b
  40b249:	adc    ebx,DWORD PTR [edi+0x4e]
  40b24c:	push   esp
  40b24d:	test   al,0xcd
  40b24f:	sub    cl,BYTE PTR [eax+0x35]
  40b252:	jp     0x40b288
  40b254:	in     al,0x27
  40b256:	lods   al,BYTE PTR cs:[esi]
  40b258:	not    BYTE PTR [ebx]
  40b25a:	(bad)  
  40b25b:	arpl   WORD PTR [edi],dx
  40b25d:	xchg   edx,eax
  40b25e:	cmp    esp,DWORD PTR [esi]
  40b260:	mov    ah,0x62
  40b262:	and    DWORD PTR [eax+0x38963474],ebx
  40b268:	fsubp  st(2),st
  40b26a:	mov    ds:0x1a6d4bfe,eax
  40b26f:	imul   ebp,DWORD PTR [edx+0x74],0x66483cd4
  40b276:	jbe    0x40b284
  40b278:	xor    eax,0xbbb3d4a9
  40b27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27e:	mov    cl,0xde
  40b280:	lods   eax,DWORD PTR ds:[esi]
  40b281:	push   edi
  40b282:	mov    eax,0x6e729f3e
  40b287:	aad    0xfb
  40b289:	lods   eax,DWORD PTR ds:[esi]
  40b28a:	mov    esp,0xcf020ead
  40b28f:	into   
  40b290:	inc    ebp
  40b291:	xchg   ecx,eax
  40b292:	cmp    ebx,edi
  40b294:	ret    
  40b295:	mov    esp,0xf7fe8c0d
  40b29a:	ss aas 
  40b29c:	aaa    
  40b29d:	mov    ebx,0x7f7c690e
  40b2a2:	or     al,0xfc
  40b2a4:	inc    esi
  40b2a5:	pop    ecx
  40b2a6:	dec    ecx
  40b2a7:	daa    
  40b2a8:	cmp    BYTE PTR [ebp+edx*8+0x1e56d434],0x2a
  40b2b0:	jmp    0x95ee:0xbf185e9d
  40b2b7:	(bad)  
  40b2b8:	jno    0x40b2c4
  40b2ba:	mov    dh,0x40
  40b2bc:	stos   DWORD PTR es:[edi],eax
  40b2bd:	call   0x4d33:0xd46bb5f5
  40b2c4:	mov    cl,BYTE PTR ss:[ebx+eax*4+0x402ebbae]
  40b2cc:	sub    al,0xd8
  40b2ce:	mov    dh,0x46
  40b2d0:	(bad)  
  40b2d1:	mov    ah,0xbf
  40b2d3:	push   0x4d4d2a53
  40b2d8:	pop    edx
  40b2d9:	test   al,0xab
  40b2db:	jl     0x40b2d0
  40b2dd:	mov    eax,ds:0xb259cd2d
  40b2e2:	push   ecx
  40b2e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e4:	push   eax
  40b2e5:	adc    DWORD PTR [ecx+0x7b0bdda3],esi
  40b2eb:	imul   ebp,DWORD PTR [ecx+0xc],0x3bfc9eec
  40b2f2:	shr    DWORD PTR [ebp+0x59b6a659],1
  40b2f8:	pop    esi
  40b2f9:	shl    DWORD PTR [edi-0x6e],0x7f
  40b2fd:	test   eax,0xf275b4ec
  40b302:	(bad)  
  40b304:	ins    BYTE PTR es:[edi],dx
  40b305:	mov    al,ds:0xb8cffb54
  40b30a:	ds and al,bh
  40b30d:	(bad)  
  40b30e:	add    BYTE PTR [edi+ecx*2+0xd],bh
  40b312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b313:	jo     0x40b38f
  40b315:	dec    ecx
  40b316:	inc    edi
  40b317:	jp     0x40b2e2
  40b319:	and    DWORD PTR [ebp+0x56fa32d1],ecx
  40b31f:	mov    edx,0xe8f32b61
  40b325:	xor    BYTE PTR [bx-0x5f],dl
  40b329:	fadd   DWORD PTR [esi-0x8bc2e03]
  40b32f:	sbb    eax,0x2d00569f
  40b334:	mov    edx,0xd79e1bfb
  40b339:	sub    esp,edx
  40b33b:	and    edi,DWORD PTR [edx+0x43]
  40b33e:	dec    eax
  40b33f:	or     eax,0xb7674e5a
  40b344:	pop    ebp
  40b345:	sub    BYTE PTR [ecx-0x58],ah
  40b348:	addr16 sub eax,0x6ae22601
  40b34e:	add    esi,ebp
  40b350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b351:	sub    ah,ah
  40b353:	jmp    0xcee87781
  40b358:	jnp    0x40b384
  40b35a:	push   0xffffff80
  40b35c:	ds dec ebp
  40b35e:	not    BYTE PTR [ecx]
  40b360:	ror    DWORD PTR [ebx],1
  40b362:	stc    
  40b363:	mov    eax,ds:0xfd14b5b8
  40b368:	xchg   esp,eax
  40b369:	dec    ebx
  40b36a:	xor    DWORD PTR ds:0x8e1642e8,0xffffffb7
  40b371:	and    eax,0x8ecf746
  40b376:	ret    
  40b377:	push   esp
  40b378:	std    
  40b379:	ficom  WORD PTR [esi]
  40b37b:	xor    esi,ebp
  40b37d:	adc    esi,eax
  40b37f:	or     eax,0x54abfed1
  40b384:	(bad)  
  40b385:	and    al,0xb1
  40b387:	jb     0x40b38c
  40b389:	shr    DWORD PTR [ebx],0xdc
  40b38c:	sbb    DWORD PTR [edx],0xffffffc8
  40b38f:	fistp  DWORD PTR [esi-0x61fc5ae7]
  40b395:	adc    edx,DWORD PTR [edi-0x3]
  40b398:	(bad)  
  40b399:	fucomp st(3)
  40b39b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b39c:	mov    al,BYTE PTR [ebx+edx*8+0x4b4ddc96]
  40b3a3:	add    ebp,DWORD PTR [eax+0x28]
  40b3a6:	out    dx,eax
  40b3a7:	leave  
  40b3a8:	(bad)  
  40b3a9:	leave  
  40b3aa:	test   al,0xb0
  40b3ac:	push   esp
  40b3ad:	inc    ebp
  40b3ae:	mov    bh,0xa5
  40b3b0:	and    BYTE PTR [edx+0x7],cl
  40b3b3:	in     eax,0xd1
  40b3b5:	lock test eax,0xc8fb2a5f
  40b3bb:	dec    ebx
  40b3bc:	(bad)  
  40b3bd:	stos   DWORD PTR es:[edi],eax
  40b3be:	mov    esi,0xd9885a93
  40b3c3:	mov    esp,0xf1f1e750
  40b3c8:	fist   WORD PTR [edi-0x77c8b56b]
  40b3ce:	test   eax,0xfe75cac9
  40b3d3:	repz sub BYTE PTR [edx+0x2d7cfdeb],bh
  40b3da:	jns    0x40b3f7
  40b3dc:	jmp    0xde65:0xb98803fc
  40b3e3:	mov    edi,0x4237d772
  40b3e8:	and    eax,0x8e788e49
  40b3ed:	jo     0x40b412
  40b3ef:	test   eax,edi
  40b3f1:	dec    edi
  40b3f2:	mov    edx,0x8c8a2284
  40b3f7:	push   ebp
  40b3f8:	inc    ebp
  40b3f9:	or     BYTE PTR [edi+0x14],al
  40b3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3fd:	(bad)  
  40b3fe:	loope  0x40b478
  40b400:	mov    bl,0x7b
  40b402:	sub    al,0x2b
  40b404:	ins    BYTE PTR es:[edi],dx
  40b405:	(bad)  
  40b406:	xor    eax,eax
  40b408:	hlt    
  40b409:	xor    al,0x2
  40b40b:	pop    esi
  40b40c:	outs   dx,BYTE PTR ds:[esi]
  40b40d:	sub    bh,BYTE PTR [ecx]
  40b40f:	inc    esi
  40b410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b411:	ja     0x40b425
  40b413:	(bad)  
  40b414:	arpl   WORD PTR [ebx-0x61b250f1],cx
  40b41a:	(bad)  
  40b41b:	mov    al,dl
  40b41d:	dec    edi
  40b41e:	mov    DWORD PTR [ebx-0x71],esi
  40b421:	fninit 
  40b423:	jbe    0x40b3e8
  40b425:	call   0xd188:0xdd002cdd
  40b42c:	mov    eax,0x1a665351
  40b431:	out    0x12,al
  40b433:	sbb    eax,0x33fe18c1
  40b438:	scas   eax,DWORD PTR es:[edi]
  40b439:	sub    al,0x8c
  40b43b:	aas    
  40b43c:	xchg   esi,eax
  40b43d:	pop    edx
  40b43e:	popf   
  40b43f:	and    ebx,DWORD PTR [edi+eax*2]
  40b442:	(bad)  
  40b443:	pop    esi
  40b444:	add    esp,eax
  40b446:	mov    dh,0x8a
  40b448:	shr    ebx,cl
  40b44a:	(bad)  
  40b44c:	fcom   QWORD PTR [ebx]
  40b44e:	jg     0x40b3e0
  40b450:	sbb    BYTE PTR [edi-0x102be5d2],bh
  40b456:	outs   dx,BYTE PTR ds:[esi]
  40b457:	xchg   edi,eax
  40b458:	mov    edx,0x81077bf8
  40b45d:	adc    al,0x81
  40b45f:	test   eax,0x9a41e90d
  40b464:	pop    ss
  40b465:	xchg   edx,eax
  40b466:	addr16 add eax,0x72d7eed4
  40b46c:	xchg   ebp,eax
  40b46d:	out    dx,al
  40b46e:	push   ebp
  40b46f:	adc    bh,BYTE PTR [esp+ecx*2]
  40b472:	mov    ebx,0x6ff75ae4
  40b477:	sbb    bh,cl
  40b479:	fnsave [edx+0x443b5f6]
  40b47f:	cmp    cl,bl
  40b481:	mov    ah,0x28
  40b483:	sbb    ch,BYTE PTR [ecx]
  40b485:	in     al,dx
  40b486:	jg     0x40b4a5
  40b488:	iret   
  40b489:	dec    edi
  40b48a:	add    DWORD PTR [ecx],edi
  40b48c:	jne    0x40b415
  40b48e:	test   al,0x4b
  40b490:	inc    edi
  40b491:	jmp    DWORD PTR [edi]
  40b493:	fcomp  QWORD PTR [edi]
  40b495:	jbe    0x40b419
  40b497:	adc    DWORD PTR [esi],edi
  40b499:	mov    cl,0x83
  40b49b:	adc    al,0x5d
  40b49d:	repz jnp 0x40b4c9
  40b4a0:	and    DWORD PTR [ebp+0x2d],ebx
  40b4a3:	inc    edi
  40b4a4:	and    eax,0x70637573
  40b4a9:	sbb    esi,DWORD PTR [ebx+ebx*4+0x64e25949]
  40b4b0:	adc    esp,DWORD PTR [esi+0x4]
  40b4b3:	adc    al,0x4d
  40b4b5:	stos   DWORD PTR es:[edi],eax
  40b4b6:	mov    ah,0xee
  40b4b8:	test   DWORD PTR [ecx],esi
  40b4ba:	adc    al,BYTE PTR [ecx-0x4e252b80]
  40b4c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4c1:	into   
  40b4c2:	mov    ebp,0xcd9a0934
  40b4c7:	add    DWORD PTR [ecx+0x6df2d18b],esi
  40b4cd:	xchg   edx,eax
  40b4ce:	ret    
  40b4cf:	(bad)  
  40b4d0:	sti    
  40b4d1:	dec    ecx
  40b4d2:	cmp    ecx,eax
  40b4d4:	ins    DWORD PTR es:[edi],dx
  40b4d5:	out    dx,al
  40b4d6:	call   0x9b7d:0x3540eda9
  40b4dd:	pop    ss
  40b4de:	ins    DWORD PTR es:[edi],dx
  40b4df:	mov    bh,0x84
  40b4e1:	jb     0x40b547
  40b4e3:	push   ebx
  40b4e4:	jno    0x40b468
  40b4e6:	or     eax,edx
  40b4e8:	jg     0x40b476
  40b4ea:	test   al,0xc
  40b4ec:	loop   0x40b49c
  40b4ee:	outs   dx,BYTE PTR ds:[esi]
  40b4ef:	push   0xffffffff
  40b4f1:	mov    BYTE PTR [edi],dh
  40b4f3:	mov    bh,0xd4
  40b4f5:	sub    DWORD PTR [edx-0x6673f934],0x5d957fc1
  40b4ff:	push   esp
  40b500:	dec    esp
  40b501:	mov    esi,0xa94464d0
  40b506:	imul   ebx,esi,0xfd314c53
  40b50c:	push   esi
  40b50d:	mov    dl,0x11
  40b50f:	ins    BYTE PTR es:[edi],dx
  40b510:	xchg   edx,eax
  40b511:	mov    dh,al
  40b513:	pop    ecx
  40b514:	jo     0x40b4b2
  40b516:	mov    edi,0xdcdaf660
  40b51b:	call   0xec6c:0x7409797
  40b522:	xchg   ebx,eax
  40b523:	or     al,0x17
  40b525:	and    BYTE PTR [esi+ebp*1],dl
  40b528:	jle    0x40b4bc
  40b52a:	fisub  WORD PTR [esi+0x16]
  40b52d:	repz int3 
  40b52f:	pop    edi
  40b530:	repnz or eax,0xf1e94de0
  40b536:	and    ebx,DWORD PTR ds:0x2cf5d7f8
  40b53c:	or     eax,0x5eb5c859
  40b541:	add    eax,0xd0aaffcd
  40b546:	push   0x3e975517
  40b54b:	jnp    0x40b561
  40b54d:	neg    ch
  40b54f:	or     dh,BYTE PTR [edx+ecx*1-0x3f]
  40b553:	mov    ebx,DWORD PTR [ebx]
  40b555:	sar    BYTE PTR [esi],0xb3
  40b558:	jmp    0xec85165
  40b55d:	xchg   edx,eax
  40b55e:	add    esp,DWORD PTR [esi-0x5075fd32]
  40b564:	fwait
  40b565:	stc    
  40b566:	loopne 0x40b4fa
  40b568:	mov    ds:0xc02b083d,eax
  40b56d:	jmp    0xbd79:0x405a2fec
  40b574:	xlat   BYTE PTR ds:[ebx]
  40b575:	cmp    al,0x88
  40b577:	ds mov dl,0x3d
  40b57a:	sub    ah,BYTE PTR [ecx+ecx*2-0x48]
  40b57e:	mov    esi,0xd628ee58
  40b583:	and    BYTE PTR [ebp+ebp*8-0xe2ade8e],dh
  40b58a:	sbb    ebx,ecx
  40b58c:	cmp    BYTE PTR [eax+0x22d76728],dl
  40b592:	adc    ch,al
  40b594:	xor    BYTE PTR [esp+edx*1-0x5e2e7de7],bl
  40b59b:	mov    dh,0xf8
  40b59d:	cs fucomi st,st(7)
  40b5a0:	xor    BYTE PTR [esi+0x22],ch
  40b5a3:	loopne 0x40b5b7
  40b5a5:	retf   0x50e8
  40b5a8:	lock hlt 
  40b5aa:	xchg   ecx,eax
  40b5ab:	into   
  40b5ac:	pavgb  mm0,QWORD PTR [ebx]
  40b5af:	aad    0x46
  40b5b1:	in     al,0xa5
  40b5b3:	sar    DWORD PTR [esi],cl
  40b5b5:	mov    ch,0xdd
  40b5b7:	fbld   TBYTE PTR [ebx]
  40b5b9:	aad    0xcc
  40b5bb:	into   
  40b5bc:	repz iret 
  40b5be:	fdiv   st(0),st
  40b5c0:	leave  
  40b5c1:	(bad)  
  40b5c5:	lahf   
  40b5c6:	clc    
  40b5c7:	mov    eax,0x8fa2a12f
  40b5cc:	jl     0x40b57e
  40b5ce:	loope  0x40b5d3
  40b5d0:	data16 fcmove st,st(5)
  40b5d3:	(bad)  
  40b5d4:	push   ebx
  40b5d5:	stos   BYTE PTR es:[edi],al
  40b5d6:	sbb    DWORD PTR [ebp+edx*4+0x5c27ae8f],edx
  40b5dd:	jle    0x40b623
  40b5df:	push   ds
  40b5e0:	pop    DWORD PTR [ecx]
  40b5e2:	(bad)  
  40b5e3:	imul   eax,DWORD PTR [ebx+eiz*8],0xffffff9d
  40b5e7:	loopne 0x40b5dc
  40b5e9:	adc    bh,BYTE PTR [edi-0x5a6a68b9]
  40b5ef:	adc    esi,esi
  40b5f1:	mov    al,ds:0x623535a7
  40b5f6:	mov    ch,BYTE PTR [ecx]
  40b5f8:	scas   al,BYTE PTR es:[edi]
  40b5f9:	call   0xd7b6:0xe22ee787
  40b600:	inc    edi
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	out    0xc5,al
  40b604:	fnstcw WORD PTR [ebx-0x707fb870]
  40b60a:	vpsllq ymm1,ymm5,xmm0
  40b60e:	clc    
  40b60f:	lock jns 0x40b679
  40b612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b613:	jmp    0x40b5be
  40b615:	(bad)  [ecx-0x46]
  40b618:	xchg   ecx,eax
  40b619:	aas    
  40b61a:	inc    eax
  40b61b:	test   ebx,0xf078a80
  40b621:	int    0x65
  40b623:	out    0xd4,eax
  40b625:	fs stc 
  40b627:	ror    BYTE PTR [ecx-0x3909d427],1
  40b62d:	jl     0x40b65c
  40b62f:	je     0x40b5de
  40b631:	cli    
  40b632:	enter  0x3e12,0x3c
  40b636:	jno    0x40b60e
  40b638:	pop    ebx
  40b639:	cdq    
  40b63a:	mov    eax,ds:0xe7c2cb29
  40b63f:	xchg   esp,eax
  40b640:	stos   BYTE PTR es:[edi],al
  40b641:	xor    esp,edi
  40b643:	pushf  
  40b644:	mov    WORD PTR [ecx+esi*2-0x39],?
  40b648:	rcl    DWORD PTR [ecx+0x3826504a],cl
  40b64e:	xchg   esi,eax
  40b64f:	sub    bl,BYTE PTR [eax+0x7a47b4ea]
  40b655:	mov    ebp,0x54b38f7b
  40b65a:	fsubr  QWORD PTR [edx]
  40b65c:	cmc    
  40b65d:	fsub   QWORD PTR [ebp-0x795a5792]
  40b663:	js     0x40b6aa
  40b665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b666:	jns    0x40b6cf
  40b668:	shr    bh,0x8
  40b66b:	or     edx,DWORD PTR [edx-0x32]
  40b66e:	call   0x8df7530a
  40b673:	scas   eax,DWORD PTR es:[edi]
  40b674:	and    al,0xb5
  40b676:	int3   
  40b677:	in     eax,dx
  40b678:	setg   BYTE PTR ds:0xab428bee
  40b67f:	les    ecx,FWORD PTR [edi]
  40b681:	mov    ds:0x3df5d982,al
  40b686:	loopne 0x40b62d
  40b688:	mov    esi,0x32ab7c91
  40b68d:	mov    edi,0x6a62a2d7
  40b692:	out    dx,eax
  40b693:	add    bl,ah
  40b695:	aad    0x9
  40b697:	mov    cl,0x4d
  40b699:	dec    edx
  40b69a:	mov    esi,0xacc3ccf9
  40b69f:	ds mov dl,0x93
  40b6a2:	lods   al,BYTE PTR ds:[esi]
  40b6a3:	repnz pusha 
  40b6a5:	dec    ecx
  40b6a6:	or     dh,cl
  40b6a8:	popf   
  40b6a9:	mov    ds:0x237c0e5b,al
  40b6ae:	jne    0x40b691
  40b6b0:	outs   dx,DWORD PTR ds:[esi]
  40b6b1:	out    dx,al
  40b6b2:	pop    eax
  40b6b3:	aas    
  40b6b4:	xchg   edx,eax
  40b6b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b6:	ror    edx,1
  40b6b8:	or     edi,edi
  40b6ba:	add    DWORD PTR [eax-0x17],0x6d495b98
  40b6c1:	and    esp,DWORD PTR [esi-0x7c974562]
  40b6c7:	and    al,0xbe
  40b6c9:	mov    eax,0xb6ecd7d2
  40b6cf:	clc    
  40b6d0:	push   ecx
  40b6d1:	ins    DWORD PTR es:[edi],dx
  40b6d2:	jne    0x40b694
  40b6d4:	outs   dx,BYTE PTR ds:[esi]
  40b6d5:	sub    cl,BYTE PTR [esi]
  40b6d7:	push   cs
  40b6d8:	cmp    BYTE PTR ds:0x997f2169,dl
  40b6de:	mov    BYTE PTR [edi-0x2e],bh
  40b6e1:	fs dec eax
  40b6e3:	mov    ecx,ebx
  40b6e5:	push   edi
  40b6e6:	add    BYTE PTR [esi-0x3d92d42a],cl
  40b6ec:	sahf   
  40b6ed:	xlat   BYTE PTR ds:[ebx]
  40b6ee:	mov    bh,BYTE PTR [ecx-0x2]
  40b6f1:	imul   edx,eax,0x6d
  40b6f4:	xor    DWORD PTR [edx],ebx
  40b6f6:	(bad)  
  40b6f7:	fisttp DWORD PTR [ebp-0x3]
  40b6fa:	daa    
  40b6fb:	sbb    DWORD PTR [edi],0x1c811f33
  40b701:	adc    eax,0x8c306664
  40b706:	inc    eax
  40b707:	cli    
  40b708:	and    ebp,DWORD PTR [esp+ecx*1-0x301e06b8]
  40b70f:	jl     0x40b785
  40b711:	scas   al,BYTE PTR es:[edi]
  40b712:	int    0xa7
  40b714:	inc    edi
  40b715:	das    
  40b716:	dec    ecx
  40b717:	imul   esi,DWORD PTR [eiz*8+0x416ddc70],0xffffffc8
  40b71f:	sbb    esi,eax
  40b721:	xchg   edi,eax
  40b722:	stc    
  40b723:	std    
  40b724:	js     0x40b799
  40b726:	or     al,0xb8
  40b728:	dec    edx
  40b729:	cmp    bl,BYTE PTR [eax]
  40b72b:	pop    ecx
  40b72c:	in     al,dx
  40b72d:	add    bl,bl
  40b72f:	mov    ds:0x7935ea8e,eax
  40b734:	jb     0x40b73f
  40b736:	push   0xd30e2054
  40b73b:	out    dx,eax
  40b73c:	sub    al,0x86
  40b73e:	(bad)  
  40b740:	push   ds
  40b741:	cdq    
  40b742:	add    eax,0x1cbed9ff
  40b747:	call   0x4a18eeb9
  40b74c:	jmp    0x7aeea465
  40b751:	dec    eax
  40b752:	test   eax,0x99a6fa83
  40b757:	call   0x3a388045
  40b75c:	mov    bh,ch
  40b75e:	adc    al,0x79
  40b760:	les    ebp,FWORD PTR [eax+0x6f28909e]
  40b766:	cmp    dl,bl
  40b768:	and    DWORD PTR [edi*4+0x6c6c4f71],esp
  40b76f:	push   esi
  40b770:	ret    
  40b771:	add    esi,ecx
  40b773:	inc    edi
  40b774:	sbb    bp,bx
  40b777:	(bad)  
  40b778:	add    ch,BYTE PTR [eax-0x5e8938de]
  40b77e:	sub    eax,0xd0cb80a5
  40b783:	or     BYTE PTR [ebp+0x29],ch
  40b786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b787:	add    DWORD PTR [eax+0x61],edi
  40b78a:	out    0x54,eax
  40b78c:	pop    esp
  40b78d:	loope  0x40b79f
  40b78f:	stos   BYTE PTR es:[edi],al
  40b790:	jmp    0xe091:0x2b6fb771
  40b797:	sub    eax,0x3bcc00e5
  40b79c:	arpl   sp,dx
  40b79e:	push   0x6e
  40b7a0:	dec    edi
  40b7a1:	fcomp  DWORD PTR [eax]
  40b7a3:	or     eax,ebx
  40b7a5:	es sub eax,0xbbe642bd
  40b7ab:	push   ss
  40b7ac:	test   DWORD PTR [ecx],ebp
  40b7ae:	jmp    0x3559:0x8b9ffe17
  40b7b5:	clc    
  40b7b6:	mov    ?,WORD PTR [esi+0x49]
  40b7b9:	mov    eax,ds:0x7d366b1b
  40b7be:	call   0xe3b8:0x205f3c18
  40b7c5:	ret    0x40df
  40b7c8:	in     al,dx
  40b7c9:	push   eax
  40b7ca:	je     0x40b7e8
  40b7cc:	sub    eax,0xeec13ba1
  40b7d1:	dec    esi
  40b7d2:	call   0x597e:0x2141b587
  40b7d9:	sbb    al,0xe6
  40b7db:	arpl   bx,bp
  40b7dd:	icebp  
  40b7de:	dec    edi
  40b7df:	std    
  40b7e0:	mov    edx,0x5393b31b
  40b7e5:	xchg   DWORD PTR [edx-0x5666568],edx
  40b7eb:	sub    al,0xc1
  40b7ed:	push   ds
  40b7ee:	jmp    0x5d89699f
  40b7f3:	int3   
  40b7f4:	mov    ss,WORD PTR [ebx]
  40b7f6:	test   bl,0xd8
  40b7f9:	mov    ebx,eax
  40b7fb:	call   0x7b45:0x102f4ab3
  40b802:	cmp    edx,DWORD PTR [ecx+0x18]
  40b805:	mov    al,ds:0x3d1f1694
  40b80a:	cmp    DWORD PTR [edx+0x66af03e0],0xab311a4e
  40b814:	cmp    DWORD PTR [ebx-0x450b44ee],esi
  40b81a:	into   
  40b81b:	adc    BYTE PTR [esi+ebp*1+0x51c2c607],0xdd
  40b823:	or     eax,0x90b5dc08
  40b828:	jle    0x40b89a
  40b82a:	add    edx,esi
  40b82c:	jmp    0x94230f20
  40b831:	push   ecx
  40b832:	jnp    0x40b7ed
  40b834:	js     0x40b828
  40b836:	mov    eax,ds:0x85ba8da1
  40b83b:	test   BYTE PTR [edi+0x7d],bl
  40b83e:	pop    esi
  40b83f:	mov    ebx,0x671d9687
  40b844:	fistp  WORD PTR [ebp+0x4ec5bc63]
  40b84a:	push   ecx
  40b84b:	mov    ch,0x3c
  40b84d:	outs   dx,DWORD PTR ds:[esi]
  40b84e:	inc    edi
  40b84f:	icebp  
  40b850:	into   
  40b851:	push   edx
  40b852:	add    eax,edx
  40b854:	lea    edx,[esi+ecx*2-0x44abc4d4]
  40b85b:	jg     0x40b80c
  40b85d:	push   esi
  40b85e:	loopne 0x40b7e3
  40b860:	std    
  40b861:	or     eax,0x1ee2e014
  40b866:	add    eax,0xc840f779
  40b86b:	xchg   ebx,eax
  40b86c:	and    BYTE PTR [eax],ah
  40b86e:	ja     0x40b81f
  40b870:	jge    0x40b89f
  40b872:	push   es
  40b873:	jae    0x40b8ae
  40b875:	in     al,dx
  40b876:	dec    edi
  40b877:	xor    al,0x20
  40b879:	jmp    0xb9b8dcf2
  40b87e:	cs dec esp
  40b880:	loopne 0x40b808
  40b882:	shl    BYTE PTR [eax+0x6186b2c7],0x65
  40b889:	push   eax
  40b88a:	and    BYTE PTR [ebx+0x7e],ch
  40b88d:	and    DWORD PTR [ecx-0x48],esi
  40b890:	iret   
  40b891:	test   esp,0x758dd67d
  40b897:	ins    BYTE PTR es:[edi],dx
  40b898:	xchg   esp,eax
  40b899:	jno    0x40b8c3
  40b89b:	inc    ebx
  40b89c:	gs std 
  40b89e:	xor    ebx,edi
  40b8a0:	xor    eax,0x1aed230d
  40b8a5:	mov    dh,0xee
  40b8a7:	mov    edi,0xd8dfb269
  40b8ac:	repz cmp al,0x8b
  40b8af:	push   edi
  40b8b0:	adc    DWORD PTR [esi+0x55],esp
  40b8b3:	dec    ecx
  40b8b4:	sub    BYTE PTR [edx-0x311f550b],ah
  40b8ba:	loop   0x40b8f9
  40b8bc:	add    bl,BYTE PTR [edx+0x6a]
  40b8bf:	aad    0x29
  40b8c1:	mov    esi,0x47d781f1
  40b8c6:	(bad)  
  40b8c7:	adc    dl,BYTE PTR [eax-0x1bc2af54]
  40b8cd:	push   ebp
  40b8ce:	add    dl,bh
  40b8d0:	(bad)  
  40b8d1:	leave  
  40b8d2:	imul   ebx,DWORD PTR [edx],0x12
  40b8d5:	jmp    0x40b8f5
  40b8d7:	shufps xmm0,XMMWORD PTR [eax-0x7d],0x86
  40b8dc:	scas   al,BYTE PTR es:[edi]
  40b8dd:	loope  0x40b8b3
  40b8df:	jmp    0x96f0ff51
  40b8e4:	dec    ecx
  40b8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e6:	cld    
  40b8e7:	xor    BYTE PTR [ebp+0x77172ada],0xf6
  40b8ee:	(bad)  [edi-0x16]
  40b8f1:	jmp    0x40b8e9
  40b8f3:	and    esp,DWORD PTR [ebx+0x2]
  40b8f6:	pop    ds
  40b8f7:	mov    al,0x7a
  40b8f9:	ror    DWORD PTR [ecx],cl
  40b8fb:	bswap  esp
  40b8fd:	dec    edi
  40b8fe:	push   eax
  40b8ff:	mov    al,ds:0x596ef1c2
  40b904:	stos   DWORD PTR es:[edi],eax
  40b905:	inc    eax
  40b906:	int    0x50
  40b908:	imul   esp,DWORD PTR [edi+0x7c],0xfffffff5
  40b90c:	mov    dh,0xf6
  40b90e:	cmp    ch,BYTE PTR [ebp-0x56828110]
  40b914:	leave  
  40b915:	xchg   edi,eax
  40b916:	jne    0x40b917
  40b918:	je     0x40b98e
  40b91a:	in     eax,dx
  40b91b:	sbb    BYTE PTR [edi-0x58],bh
  40b91e:	outs   dx,DWORD PTR ds:[esi]
  40b91f:	arpl   WORD PTR [edx-0x4d89a608],si
  40b925:	mov    dl,al
  40b927:	dec    ebp
  40b928:	rcl    DWORD PTR [esp+ebp*1],1
  40b92b:	repz push ss
  40b92d:	pop    esp
  40b92e:	(bad)  [edx*8+0x29371602]
  40b935:	sbb    DWORD PTR [eax-0x70],0xa131076b
  40b93c:	scas   al,BYTE PTR es:[edi]
  40b93d:	aaa    
  40b93e:	mov    ch,0x92
  40b940:	sbb    BYTE PTR ds:[eax+0xb],ah
  40b944:	rcl    DWORD PTR [ebx+0x1e],0xd0
  40b948:	sub    eax,DWORD PTR [ecx+0x670440b1]
  40b94e:	(bad)  
  40b94f:	xor    al,0xfc
  40b951:	push   eax
  40b952:	jp     0x40b917
  40b954:	dec    BYTE PTR [edi+esi*2-0x2]
  40b958:	aam    0x87
  40b95a:	cmc    
  40b95b:	pop    esp
  40b95c:	sub    al,0x1b
  40b95e:	xchg   ebx,eax
  40b95f:	aas    
  40b960:	jp     0x40b8ed
  40b962:	nop
  40b963:	add    eax,0x9d9832e7
  40b968:	gs das 
  40b96a:	and    DWORD PTR [eax+0x11],edi
  40b96d:	or     BYTE PTR [edx],al
  40b96f:	stos   BYTE PTR es:[edi],al
  40b970:	inc    ebp
  40b971:	aas    
  40b972:	jns    0x40b9ee
  40b974:	aaa    
  40b975:	jb     0x40b984
  40b977:	aam    0x4c
  40b979:	aaa    
  40b97a:	and    eax,0xae0e4de6
  40b97f:	cmp    eax,ebp
  40b981:	into   
  40b982:	xchg   ecx,eax
  40b983:	lods   eax,DWORD PTR ds:[esi]
  40b984:	loope  0x40ba05
  40b986:	popf   
  40b987:	mov    ds:0xd2816180,eax
  40b98c:	cli    
  40b98d:	scas   eax,DWORD PTR es:[edi]
  40b98e:	inc    ecx
  40b98f:	xchg   ebx,eax
  40b990:	aam    0xe3
  40b992:	add    eax,0xe227172f
  40b997:	imul   edx,DWORD PTR [edi+0x7b],0x7d
  40b99b:	xor    al,0xaf
  40b99d:	add    ebx,eax
  40b99f:	enter  0x308c,0x29
  40b9a3:	rcl    ebp,1
  40b9a5:	dec    BYTE PTR [edi-0x12748095]
  40b9ab:	ja     0x40b9be
  40b9ad:	les    ecx,FWORD PTR ds:0x5da8fd0b
  40b9b3:	jbe    0x40b9e5
  40b9b5:	enter  0xecdb,0x90
  40b9b9:	sub    DWORD PTR [esi],esi
  40b9bb:	sahf   
  40b9bc:	xor    dh,BYTE PTR [edi]
  40b9be:	fwait
  40b9bf:	test   eax,0xb6f45da9
  40b9c4:	cmc    
  40b9c5:	stc    
  40b9c6:	mov    cl,0x17
  40b9c8:	push   esp
  40b9c9:	or     edx,DWORD PTR [eax]
  40b9cb:	ins    BYTE PTR es:[edi],dx
  40b9cc:	mov    edi,DWORD PTR ds:0x9a844e6f
  40b9d2:	fld    TBYTE PTR [esi+0x6bf81f6f]
  40b9d8:	adc    ebx,esi
  40b9da:	sahf   
  40b9db:	mov    ebp,0xb2ddffb8
  40b9e0:	push   ecx
  40b9e1:	fcmovnu st,st(5)
  40b9e4:	jo     0x40b9f5
  40b9e6:	mov    dh,0x6e
  40b9e8:	pushf  
  40b9e9:	mov    edx,0xab5e9e7
  40b9ee:	adc    BYTE PTR [ecx-0x78],dl
  40b9f1:	nop
  40b9f2:	xor    al,0x84
  40b9f4:	pop    es
  40b9f5:	(bad)
  40b9f9:	push   ebp
  40b9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9fb:	xor    eax,0x709ad0e7
  40ba00:	(bad)  
  40ba01:	in     eax,0x8c
  40ba03:	push   edi
  40ba04:	loopne 0x40ba5a
  40ba06:	into   
  40ba07:	sub    al,0xa3
  40ba09:	cmp    DWORD PTR [eax+0x1d],ecx
  40ba0c:	shr    DWORD PTR [bp+di],1
  40ba0f:	pop    esp
  40ba10:	repz mov ch,0xe0
  40ba13:	rcl    BYTE PTR [ecx+0x50],1
  40ba16:	iret   
  40ba17:	sahf   
  40ba18:	ds jg  0x40ba8e
  40ba1b:	xchg   esi,eax
  40ba1c:	ss pop edi
  40ba1e:	adc    BYTE PTR [esi-0x14d8e7fc],bl
  40ba24:	int    0x6
  40ba26:	mov    ecx,0x92d49144
  40ba2b:	mov    ah,0xa5
  40ba2d:	fcmovb st,st(1)
  40ba2f:	aad    0xcd
  40ba31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba32:	loope  0x40b9eb
  40ba34:	test   al,0xf0
  40ba36:	hlt    
  40ba37:	sbb    ah,0xdd
  40ba3a:	shr    BYTE PTR [esi+0x3af83d92],0x3c
  40ba41:	adc    ch,BYTE PTR [ebp-0x3680223c]
  40ba47:	push   ebp
  40ba48:	mov    ds:0x14bdf34a,eax
  40ba4d:	js     0x40ba0b
  40ba4f:	inc    esp
  40ba50:	xchg   edx,eax
  40ba51:	mov    ah,0x41
  40ba53:	pop    ecx
  40ba54:	int    0xc2
  40ba56:	imul   ebx,DWORD PTR [eax],0x6d500902
  40ba5c:	mov    ebp,0x2977dedf
  40ba61:	enter  0xa827,0x7b
  40ba65:	fistp  QWORD PTR [esi]
  40ba67:	push   cs
  40ba68:	(bad)  
  40ba69:	mov    edx,0x7149ee50
  40ba6e:	inc    ecx
  40ba6f:	enter  0xa573,0xd1
  40ba73:	ss cld 
  40ba75:	test   BYTE PTR [ecx+0x1ec61805],dh
  40ba7b:	pop    esi
  40ba7c:	stos   DWORD PTR es:[edi],eax
  40ba7d:	retf   
  40ba7e:	mov    eax,0x5a99ecaa
  40ba83:	mov    dh,0x22
  40ba85:	jl     0x40bab8
  40ba87:	mov    DWORD PTR [ebx-0x1a],ecx
  40ba8a:	sub    DWORD PTR [ebx-0x7ea74a07],0x32
  40ba91:	sub    eax,DWORD PTR [edi]
  40ba93:	push   cs
  40ba94:	je     0x40ba3c
  40ba96:	ds in  al,0x5d
  40ba99:	add    esi,DWORD PTR [ecx-0x16b4aa98]
  40ba9f:	adc    dl,cl
  40baa1:	scas   al,BYTE PTR es:[edi]
  40baa2:	adc    DWORD PTR [esi-0x6],edi
  40baa5:	inc    ecx
  40baa6:	push   ss
  40baa7:	call   0x618bd547
  40baac:	and    bh,BYTE PTR [edi+0x6d740312]
  40bab2:	inc    ebx
  40bab3:	jmp    0xa4f5fe6c
  40bab8:	out    0xc8,eax
  40baba:	inc    ebp
  40babb:	rcl    ah,0x6b
  40babe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40babf:	rcl    eax,cl
  40bac1:	jnp    0x40bb28
  40bac3:	leave  
  40bac4:	mov    eax,DWORD PTR [edx+0x48]
  40bac7:	dec    eax
  40bac8:	pushf  
  40bac9:	xchg   ebx,eax
  40baca:	cmp    esi,esi
  40bacc:	in     eax,0xeb
  40bace:	scas   eax,DWORD PTR es:[edi]
  40bacf:	push   eax
  40bad0:	mov    dl,0x4d
  40bad2:	and    al,0xd0
  40bad4:	pop    ebp
  40bad5:	scas   al,BYTE PTR es:[edi]
  40bad6:	cs popf 
  40bad8:	inc    ebx
  40bad9:	out    dx,eax
  40bada:	out    0x83,al
  40badc:	adc    bl,BYTE PTR [edx-0x66]
  40badf:	xchg   ecx,eax
  40bae0:	sbb    BYTE PTR [ebx+0x3c],dl
  40bae3:	fwait
  40bae4:	adc    BYTE PTR [edi-0x54],bl
  40bae7:	repz fs add bl,bh
  40baeb:	pusha  
  40baec:	dec    edx
  40baed:	popf   
  40baee:	sar    BYTE PTR ds:0x48de9548,cl
  40baf4:	xor    DWORD PTR [eax+edx*1+0x543622cf],ecx
  40bafb:	inc    ecx
  40bafc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bafd:	daa    
  40bafe:	jmp    0x699:0xcb6791b4
  40bb05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb06:	cwde   
  40bb07:	mov    ecx,0x8664cf1a
  40bb0c:	ds sub eax,0x18c24b84
  40bb12:	ret    
  40bb13:	popa   
  40bb14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb15:	or     BYTE PTR [ecx+0x54807129],dl
  40bb1b:	fwait
  40bb1c:	adc    al,0xe5
  40bb1e:	and    ah,BYTE PTR [edi+0x32]
  40bb21:	les    esp,FWORD PTR [ebx-0x6]
  40bb24:	stc    
  40bb25:	stos   DWORD PTR es:[edi],eax
  40bb26:	mov    dh,0xc3
  40bb28:	xchg   DWORD PTR [esi+0x25592423],ecx
  40bb2e:	lds    eax,FWORD PTR [edi]
  40bb30:	inc    edi
  40bb31:	xor    ebp,edi
  40bb33:	xor    eax,0x7508ccca
  40bb38:	shl    bl,0xd0
  40bb3b:	or     eax,0x3ae0e17
  40bb40:	dec    ecx
  40bb41:	fnstcw WORD PTR [ebx+esi*4-0x3c]
  40bb45:	sti    
  40bb46:	call   0x69a2:0x735e91c8
  40bb4d:	mov    ch,0x5d
  40bb4f:	gs ss push ebp
  40bb52:	nop
  40bb53:	ins    DWORD PTR es:[edi],dx
  40bb54:	add    esp,DWORD PTR [ebx]
  40bb56:	mov    ds:0xba6e194b,al
  40bb5b:	jnp    0x40bb76
  40bb5d:	or     al,0xff
  40bb5f:	mov    edx,0xc081776e
  40bb64:	call   0x4c738df2
  40bb69:	xor    eax,0x89a9a64b
  40bb6e:	xor    al,0xe0
  40bb70:	loope  0x40bba7
  40bb72:	iret   
  40bb73:	or     WORD PTR [edx+0x6bcbedb1],ax
  40bb7a:	sub    eax,0xbaf73e20
  40bb7f:	enter  0xbcd7,0x60
  40bb83:	les    ecx,FWORD PTR [ebx+0x5c93c916]
  40bb89:	(bad)  
  40bb8a:	push   edi
  40bb8b:	fstp   TBYTE PTR [edi]
  40bb8d:	jmp    0x40bb9b
  40bb8f:	pop    ss
  40bb90:	imul   esp,DWORD PTR [eax-0xe],0xffffffaa
  40bb94:	and    eax,0xc0e1dcf9
  40bb99:	stos   BYTE PTR es:[edi],al
  40bb9a:	mov    ch,BYTE PTR [ecx+ecx*8-0x73386f82]
  40bba1:	push   esi
  40bba2:	sub    al,0x81
  40bba4:	sub    BYTE PTR ds:[eax+ebp*1],0x40
  40bba9:	in     eax,dx
  40bbaa:	push   0xffffffe5
  40bbac:	pop    esi
  40bbad:	hlt    
  40bbae:	mov    BYTE PTR [ebx+0x5b],ah
  40bbb1:	popa   
  40bbb2:	push   ds
  40bbb3:	dec    ebx
  40bbb4:	ret    0x5f06
  40bbb7:	add    bl,BYTE PTR [ecx]
  40bbb9:	xchg   edx,eax
  40bbba:	lods   al,BYTE PTR ds:[esi]
  40bbbb:	fprem  
  40bbbd:	rol    edx,0x1
  40bbc0:	out    dx,eax
  40bbc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc2:	jne    0x40bbd5
  40bbc4:	jle    0x40bbf3
  40bbc6:	add    DWORD PTR [edi-0xd6e7859],ecx
  40bbcc:	jge    0x40bbad
  40bbce:	and    al,0x46
  40bbd0:	push   cs
  40bbd1:	jg     0x40bc15
  40bbd3:	mov    ecx,0x7bb7b625
  40bbd8:	cwde   
  40bbd9:	pop    ds
  40bbda:	push   esi
  40bbdb:	(bad)  
  40bbdc:	mov    ds:0x8553a3ee,eax
  40bbe1:	push   es
  40bbe2:	ret    0xe5dd
  40bbe5:	imul   esp,DWORD PTR [ebx+0x11],0xffffffed
  40bbe9:	jmp    0xce9:0xf00b5fe9
  40bbf0:	cmp    ch,0xbb
  40bbf3:	das    
  40bbf4:	in     al,0x4b
  40bbf6:	and    BYTE PTR [eax],dl
  40bbf8:	(bad)  
  40bbfa:	cmp    al,0x11
  40bbfc:	sbb    eax,0x5a01cc12
  40bc01:	or     DWORD PTR [edi-0x10149f1c],0xffffff9f
  40bc08:	loopne 0x40bc31
  40bc0a:	sbb    ebx,DWORD PTR [ecx+0x4b]
  40bc0d:	jo     0x40bc70
  40bc0f:	push   eax
  40bc10:	lds    ebx,FWORD PTR [ebx+0x67]
  40bc13:	jl     0x40bc7a
  40bc15:	xchg   edi,eax
  40bc16:	mov    dh,0xfd
  40bc18:	mov    dh,0x57
  40bc1a:	hlt    
  40bc1b:	dec    ebp
  40bc1c:	jns    0x40bbc5
  40bc1e:	pop    ecx
  40bc1f:	ret    0x9a67
  40bc22:	les    esi,FWORD PTR [eax+0x779a835f]
  40bc28:	(bad)  
  40bc29:	out    dx,eax
  40bc2a:	fwait
  40bc2b:	loopne 0x40bc66
  40bc2d:	in     eax,0xcc
  40bc2f:	mov    ebp,0x2afc4956
  40bc34:	into   
  40bc35:	sbb    DWORD PTR [ecx+0x53],esi
  40bc38:	imul   eax,ecx,0x32f74033
  40bc3e:	gs pop ebx
  40bc40:	sub    cl,BYTE PTR [ebx]
  40bc42:	or     dh,BYTE PTR [ecx-0x53966ebd]
  40bc48:	push   edx
  40bc49:	sbb    ebx,0x76
  40bc4c:	test   BYTE PTR [ecx],bh
  40bc4e:	mov    dl,0xb3
  40bc50:	out    dx,eax
  40bc51:	cmp    edi,DWORD PTR [ebp+0x74]
  40bc54:	pop    ebp
  40bc55:	jmp    0x40bc16
  40bc57:	push   0x47
  40bc59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc5a:	es xor eax,0x56649e0b
  40bc60:	lods   al,BYTE PTR ds:[esi]
  40bc61:	add    DWORD PTR [eiz*2-0x660d2434],eax
  40bc68:	adc    ecx,esp
  40bc6a:	test   al,0xeb
  40bc6c:	out    0xb,al
  40bc6e:	fmul   DWORD PTR [eax-0x38]
  40bc71:	sar    DWORD PTR [eax-0x2eebdab5],1
  40bc77:	push   ds
  40bc78:	add    DWORD PTR fs:[edx-0x39],ebx
  40bc7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc7d:	add    DWORD PTR [edi],esp
  40bc7f:	cld    
  40bc80:	out    dx,eax
  40bc81:	inc    edi
  40bc82:	scas   eax,DWORD PTR es:[edi]
  40bc83:	leave  
  40bc84:	rep ins BYTE PTR es:[edi],dx
  40bc86:	sbb    DWORD PTR [edx],0x46519f36
  40bc8c:	or     bl,BYTE PTR [ebx+0x494ddcc2]
  40bc92:	inc    eax
  40bc93:	jno    0x40bc67
  40bc95:	xor    BYTE PTR [ebx],bl
  40bc97:	int3   
  40bc98:	fnstsw WORD PTR [esi]
  40bc9a:	test   al,0x96
  40bc9c:	xchg   ebp,eax
  40bc9d:	cmc    
  40bc9e:	inc    ebx
  40bc9f:	mov    ch,0xf8
  40bca1:	aam    0xb4
  40bca3:	rcl    DWORD PTR [ecx+0x23],1
  40bca6:	mov    ebx,0xb9f84fcc
  40bcab:	cmp    eax,0xe11b980f
  40bcb0:	mov    esi,0x5a8a77f2
  40bcb5:	shl    DWORD PTR [eax+ebp*8+0x6b],1
  40bcb9:	fxch   st(0)
  40bcbb:	add    DWORD PTR [esi+0x348cb602],ebp
  40bcc1:	pop    ebx
  40bcc2:	sbb    eax,0x80d85650
  40bcc7:	repz loopne 0x40bc61
  40bcca:	mov    dh,0xe9
  40bccc:	cmp    esp,DWORD PTR [edi-0x425583ac]
  40bcd2:	ss dec ecx
  40bcd4:	pop    esp
  40bcd5:	sahf   
  40bcd6:	sbb    ah,BYTE PTR [edx-0xe]
  40bcd9:	repz jmp 0xe2cd06cb
  40bcdf:	gs shl esi,0xa8
  40bce3:	les    edx,FWORD PTR [ebx]
  40bce5:	or     ebx,DWORD PTR cs:[ecx+0x2f]
  40bce9:	mov    cl,al
  40bceb:	jbe    0x40bc8b
  40bced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcee:	sbb    eax,0x30
  40bcf1:	xor    esi,ebp
  40bcf3:	jg     0x40bcea
  40bcf5:	push   ss
  40bcf6:	inc    ebp
  40bcf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcf8:	out    0xbd,eax
  40bcfa:	jle    0x40bd1b
  40bcfc:	popf   
  40bcfd:	cmp    eax,0x53014e05
  40bd02:	fisttp WORD PTR [edx-0x6acc4572]
  40bd08:	stc    
  40bd09:	cli    
  40bd0a:	xor    DWORD PTR [esi-0x15],ebx
  40bd0d:	stos   DWORD PTR es:[edi],eax
  40bd0e:	dec    edx
  40bd0f:	fiadd  WORD PTR [eax-0x62]
  40bd12:	pop    ds
  40bd13:	inc    DWORD PTR [esi-0x4d]
  40bd16:	pusha  
  40bd17:	hlt    
  40bd18:	pop    ss
  40bd19:	jne    0x40bce4
  40bd1b:	and    DWORD PTR ds:0x270dea35,edx
  40bd21:	cli    
  40bd22:	stc    
  40bd23:	cs (bad) 
  40bd25:	jmp    0x40bda6
  40bd27:	lea    ebx,gs:[esi+0x2d]
  40bd2b:	mov    bl,BYTE PTR [esi]
  40bd2d:	fcomi  st,st(4)
  40bd2f:	je     0x40bcff
  40bd31:	ins    BYTE PTR es:[edi],dx
  40bd32:	jbe    0x40bd82
  40bd34:	ins    BYTE PTR es:[edi],dx
  40bd35:	inc    ecx
  40bd36:	mov    esi,0xc86d108d
  40bd3b:	int3   
  40bd3c:	push   ecx
  40bd3d:	sub    ebx,0xcb9ac80b
  40bd43:	pop    ebp
  40bd44:	mov    al,ds:0xbfd99593
  40bd49:	xchg   ebp,eax
  40bd4a:	xor    eax,0xfabb50e8
  40bd4f:	addr16 ret 0x7e82
  40bd53:	jmp    DWORD PTR [ebp+0x637a617f]
  40bd59:	fsub   QWORD PTR [eax+0x16bd6cdf]
  40bd5f:	mov    ds:0x33b0c571,eax
  40bd64:	popf   
  40bd65:	mov    eax,ds:0x14509ecc
  40bd6a:	scas   al,BYTE PTR es:[edi]
  40bd6b:	push   esi
  40bd6c:	add    ch,0xc6
  40bd6f:	push   0x758c63e8
  40bd74:	sti    
  40bd75:	sbb    BYTE PTR [edi+0x33],0x7a
  40bd79:	sub    BYTE PTR [eax],bl
  40bd7b:	out    dx,eax
  40bd7c:	stc    
  40bd7d:	adc    BYTE PTR [ecx+0x65],dl
  40bd80:	fisub  WORD PTR ds:0x734cc227
  40bd86:	neg    DWORD PTR [eax+eiz*1+0x138f7340]
  40bd8d:	lods   al,BYTE PTR ds:[esi]
  40bd8e:	mov    DWORD PTR [ecx+0x6b],ebx
  40bd91:	ss int3 
  40bd93:	jp     0x40be05
  40bd95:	jmp    0xa4bd:0x53ff988
  40bd9c:	rcr    DWORD PTR [eax+0xc],1
  40bd9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bda0:	adc    esp,0x7b8765f4
  40bda6:	sub    ebp,DWORD PTR [edx-0x7fde1c]
  40bdac:	fld    st(5)
  40bdae:	das    
  40bdaf:	push   edx
  40bdb0:	mov    edx,0x2c30e88
  40bdb5:	mov    eax,0xc9c74201
  40bdba:	xor    eax,0xca2f9def
  40bdbf:	sub    eax,0x40201494
  40bdc4:	je     0x40be44
  40bdc6:	cli    
  40bdc7:	mov    al,ds:0x68de54f5
  40bdcc:	pop    edi
  40bdcd:	sub    al,0x81
  40bdcf:	mov    ebp,0x5fc7f857
  40bdd4:	jne    0x40bd6d
  40bdd6:	push   ecx
  40bdd7:	lods   al,BYTE PTR ds:[esi]
  40bdd8:	aaa    
  40bdd9:	inc    ebx
  40bdda:	inc    esi
  40bddb:	xor    eax,0xb271e64e
  40bde0:	mov    cl,0x16
  40bde2:	sub    al,0xdd
  40bde4:	fistp  QWORD PTR [edi+0x32]
  40bde7:	stc    
  40bde8:	mov    WORD PTR [esi+0x7d],fs
  40bdeb:	and    esp,DWORD PTR [ebp+0x5cff2a69]
  40bdf1:	call   DWORD PTR [edi+0x1b085225]
  40bdf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdf8:	mov    al,0x9f
  40bdfa:	mov    ds:0xfc4a1632,eax
  40bdff:	sub    BYTE PTR [eax+0x0],0xbc
  40be03:	(bad)  
  40be04:	xchg   edi,eax
  40be05:	cdq    
  40be06:	les    esi,FWORD PTR [edx]
  40be08:	mov    bh,0xd8
  40be0a:	js     0x40be7f
  40be0c:	cmc    
  40be0d:	ins    BYTE PTR es:[edi],dx
  40be0e:	fld    TBYTE PTR [edi+0xc]
  40be11:	sub    ebp,DWORD PTR [ebp+ebp*1+0x6f]
  40be15:	pop    ebx
  40be16:	call   0x8fff:0x58731153
  40be1d:	leave  
  40be1e:	cmp    eax,0x64d9828
  40be23:	pop    edi
  40be24:	or     ecx,edx
  40be26:	rcl    DWORD PTR [esi+edi*1],1
  40be29:	call   0x7072340
  40be2e:	in     eax,dx
  40be2f:	mov    ds:0x18c6f443,eax
  40be34:	sub    edi,DWORD PTR [esp+eax*4-0x5d]
  40be38:	sbb    al,0x29
  40be3a:	dec    esp
  40be3b:	addr16 in eax,0xb8
  40be3e:	ja     0x40be3b
  40be40:	jle    0x40be0c
  40be42:	mov    BYTE PTR [ebx+0x38725a75],bl
  40be48:	nop
  40be49:	ret    
  40be4a:	or     DWORD PTR [eax+0x73],ebp
  40be4d:	out    0xb8,eax
  40be4f:	xor    DWORD PTR [edi],0xff33e0bd
  40be55:	xchg   ebx,eax
  40be56:	push   0xe3411cd8
  40be5b:	mov    ebp,0x8e56dd4f
  40be60:	jg     0x40bdec
  40be62:	(bad)  
  40be63:	inc    ecx
  40be64:	test   esp,ebx
  40be66:	jns    0x40bee2
  40be68:	aaa    
  40be69:	mov    esi,0x50500b2e
  40be6e:	mov    bl,0x35
  40be70:	aaa    
  40be71:	out    dx,al
  40be72:	cmp    eax,0xc2c7f9f0
  40be77:	out    dx,eax
  40be78:	dec    esp
  40be79:	ins    DWORD PTR es:[edi],dx
  40be7a:	xor    al,0x58
  40be7c:	jne    0x40bebe
  40be7e:	out    dx,al
  40be7f:	test   BYTE PTR ds:0x17fdd0c,bh
  40be85:	jecxz  0x40be15
  40be87:	push   ebp
  40be88:	pop    esp
  40be89:	call   0x3c0e77d9
  40be8e:	cmp    esp,DWORD PTR [ecx+esi*2+0x31]
  40be92:	add    eax,0x5e1dba5b
  40be97:	dec    edi
  40be98:	pop    esi
  40be99:	lock and eax,0x55543b1c
  40be9f:	pop    es
  40bea0:	lea    ecx,[edx*1+0x179d7af3]
  40bea7:	xchg   edi,eax
  40bea8:	jl     0x40be43
  40beaa:	or     DWORD PTR [edx],ebp
  40beac:	inc    ebp
  40bead:	lahf   
  40beae:	jp     0x40be83
  40beb0:	add    al,0x19
  40beb2:	test   al,0x2
  40beb4:	sub    edx,DWORD PTR [edi+0x265318c2]
  40beba:	mov    ebx,0xdaeaac4d
  40bebf:	push   0xffffffbc
  40bec1:	jmp    0xd72d:0xf159de14
  40bec8:	add    esp,ebp
  40beca:	in     eax,0xb9
  40becc:	mov    dl,0x59
  40bece:	sar    ebx,cl
  40bed0:	pop    ebx
  40bed1:	in     eax,0x66
  40bed3:	inc    ebx
  40bed4:	adc    dl,BYTE PTR [ecx]
  40bed6:	pop    esi
  40bed7:	cmp    DWORD PTR [ebp+0x11],ebp
  40beda:	mov    ah,0x4
  40bedc:	mov    WORD PTR [edi],es
  40bede:	fnstcw WORD PTR [esi+0x4ead81b1]
  40bee4:	or     eax,0xf601a345
  40bee9:	cdq    
  40beea:	pop    ds
  40beeb:	mov    al,0x8d
  40beed:	cmp    DWORD PTR [esi+0x75],eax
  40bef0:	jl     0x40be8b
  40bef2:	xor    al,BYTE PTR [ecx+ebx*8-0x31f4e8b7]
  40bef9:	adc    esi,edi
  40befb:	mov    bl,0x99
  40befd:	lods   al,BYTE PTR ds:[esi]
  40befe:	rcl    BYTE PTR [edi],cl
  40bf00:	jmp    0x40bef3
  40bf02:	mov    cl,0x39
  40bf04:	sbb    eax,DWORD PTR [ebp+0x45]
  40bf07:	shl    si,cl
  40bf0a:	and    DWORD PTR [edi+0x2c],eax
  40bf0d:	sub    al,0x9d
  40bf0f:	mov    ax,ds:0xcc5140ec
  40bf15:	ficom  DWORD PTR [ecx+0x52]
  40bf18:	ins    DWORD PTR es:[edi],dx
  40bf19:	fst    QWORD PTR [ecx]
  40bf1b:	popa   
  40bf1c:	mov    al,BYTE PTR [edx-0x2b]
  40bf1f:	loop   0x40bf7b
  40bf21:	xor    eax,0xca479c94
  40bf26:	call   0x4181dc92
  40bf2b:	push   ds
  40bf2c:	xor    eax,DWORD PTR ds:[edi]
  40bf2f:	retf   0xe84
  40bf32:	lods   al,BYTE PTR ds:[esi]
  40bf33:	fiadd  WORD PTR [edx+0x40525e9d]
  40bf39:	mov    ch,0x0
  40bf3b:	in     al,0xf0
  40bf3d:	xor    edx,DWORD PTR [esi+0x28b7b007]
  40bf43:	loopne 0x40bf41
  40bf45:	cmp    BYTE PTR [edx+0x79d79ff1],ch
  40bf4b:	sbb    al,0x7c
  40bf4d:	leave  
  40bf4e:	in     al,0x7e
  40bf50:	pop    esp
  40bf51:	mov    eax,ds:0x79f172c6
  40bf56:	xchg   ebx,eax
  40bf57:	cmp    dl,bh
  40bf59:	cmp    DWORD PTR [ebp+0x76],esi
  40bf5c:	sbb    dh,bl
  40bf5e:	add    eax,0xd6aeea1a
  40bf63:	mov    eax,0xb15d8fc6
  40bf68:	xor    al,0xf7
  40bf6a:	sub    esp,DWORD PTR [ecx]
  40bf6c:	jno    0x40bf43
  40bf6e:	into   
  40bf6f:	xchg   esp,eax
  40bf70:	neg    BYTE PTR [esp+esi*1+0x64]
  40bf74:	inc    eax
  40bf75:	popa   
  40bf76:	adc    eax,0x1453a1e5
  40bf7b:	lods   eax,DWORD PTR ds:[esi]
  40bf7c:	out    dx,eax
  40bf7d:	outs   dx,BYTE PTR ds:[esi]
  40bf7e:	cmp    DWORD PTR [eax+ebx*1+0x6f],0xdeadc4fe
  40bf86:	sti    
  40bf87:	pop    ebx
  40bf88:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf8a:	loopne 0x40bf3e
  40bf8c:	scas   eax,DWORD PTR es:[edi]
  40bf8d:	test   BYTE PTR [esi+0x29],cl
  40bf90:	mov    BYTE PTR [ecx+0x3180e36d],dl
  40bf96:	push   eax
  40bf97:	xchg   edx,eax
  40bf98:	mov    esp,ebp
  40bf9a:	mov    ds:0xee03ce,al
  40bf9f:	push   es
  40bfa0:	sbb    bl,BYTE PTR [ebx-0x66]
  40bfa3:	bound  esi,QWORD PTR [ecx]
  40bfa5:	les    esi,FWORD PTR [edx+eax*2+0x29d66417]
  40bfac:	call   0xd00c:0xbfafea9e
  40bfb3:	add    al,0x77
  40bfb5:	dec    esi
  40bfb6:	es ins BYTE PTR es:[edi],dx
  40bfb8:	or     dh,bh
  40bfba:	repz test DWORD PTR [ebp-0x332abf14],esi
  40bfc1:	ret    
  40bfc2:	outs   dx,DWORD PTR ds:[esi]
  40bfc4:	xchg   esi,eax
  40bfc5:	xor    dl,cl
  40bfc7:	add    al,0x87
  40bfca:	fstp   DWORD PTR [ebx+0xc5d914a]
  40bfd0:	pop    ds
  40bfd1:	inc    edx
  40bfd2:	mov    WORD PTR [ebx],ss
  40bfd4:	sub    DWORD PTR [eax+ecx*1],esp
  40bfd7:	data16 sbb bl,ah
  40bfda:	test   BYTE PTR [ebp+0x3d778155],cl
  40bfe0:	inc    esp
  40bfe1:	sbb    ch,bh
  40bfe3:	(bad)  
  40bfe5:	and    esp,DWORD PTR ds:0xfb598d34
  40bfeb:	test   DWORD PTR [edx],edx
  40bfed:	xchg   esp,eax
  40bfee:	or     dh,BYTE PTR [esi]
  40bff0:	popa   
  40bff1:	push   edx
  40bff2:	sub    al,0xd5
  40bff4:	push   ds
  40bff5:	or     edi,DWORD PTR es:[esi]
  40bff8:	rcr    ecx,1
  40bffa:	xchg   DWORD PTR [esi+0x6759cf8],esi
  40c000:	push   0x13
  40c002:	jno    0x40bf91
  40c004:	jnp    0x40c004
  40c006:	push   edi
  40c007:	jle    0x40c06a
  40c009:	adc    BYTE PTR [eax],dh
  40c00b:	data16 ins BYTE PTR es:[edi],dx
  40c00d:	and    eax,0x330c4ebc
  40c012:	in     al,0xcd
  40c014:	in     al,dx
  40c015:	pop    es
  40c016:	nop
  40c017:	sbb    ebx,DWORD PTR [edx+0x14]
  40c01a:	mov    edx,0x2db0f0d1
  40c01f:	je     0x40bfa8
  40c021:	icebp  
  40c022:	scas   al,BYTE PTR es:[edi]
  40c023:	sahf   
  40c024:	das    
  40c025:	push   cs
  40c026:	xchg   edx,eax
  40c027:	call   0xb4932e8d
  40c02c:	std    
  40c02d:	mov    ah,0x61
  40c02f:	mov    dh,0xb8
  40c031:	nop
  40c032:	cwde   
  40c033:	arpl   WORD PTR ds:0x5c57c3,dx
  40c039:	sbb    eax,0x3d0ec059
  40c03e:	(bad)  
  40c03f:	cwde   
  40c040:	mov    ds:0xb84001e9,eax
  40c045:	cmp    DWORD PTR [esi],0xffffffa0
  40c048:	inc    ecx
  40c049:	jle    0x40c067
  40c04b:	in     eax,dx
  40c04c:	adc    BYTE PTR [ebx],cl
  40c04e:	or     DWORD PTR [esi-0xaecb78b],edi
  40c054:	fnstsw WORD PTR [eax-0x47]
  40c057:	(bad)  
  40c059:	mov    edi,0x6ca4d9a2
  40c05e:	mov    eax,0xc6cd6725
  40c063:	mov    bl,0x18
  40c065:	push   edx
  40c066:	add    edi,DWORD PTR [ecx-0x70]
  40c069:	mov    edi,0xf810c178
  40c06e:	jbe    0x40c0ef
  40c070:	cmp    eax,0xe427661e
  40c075:	int3   
  40c076:	ins    DWORD PTR es:[edi],dx
  40c077:	aam    0x20
  40c079:	mov    edx,0xab7e1a30
  40c07e:	mov    esp,0xc38db0d2
  40c083:	sbb    eax,0x33dc20cf
  40c088:	xor    bh,BYTE PTR [esi-0x3a343add]
  40c08e:	dec    esi
  40c090:	dec    ebp
  40c091:	sti    
  40c092:	cli    
  40c093:	nop
  40c094:	pop    esi
  40c095:	lock loope 0x40c074
  40c098:	ins    BYTE PTR es:[edi],dx
  40c099:	lahf   
  40c09a:	imul   eax,DWORD PTR [edi],0xffffffcc
  40c09d:	adc    bl,ah
  40c09f:	mov    ecx,0xb241ee5d
  40c0a4:	push   ebp
  40c0a5:	cmp    esp,DWORD PTR [eax]
  40c0a7:	outs   dx,BYTE PTR ds:[esi]
  40c0a8:	pop    es
  40c0a9:	iret   
  40c0aa:	mov    eax,ds:0xfb405af
  40c0af:	mov    ecx,0x6fa5a016
  40c0b4:	dec    esi
  40c0b5:	sub    eax,0x3c6934ba
  40c0ba:	sub    ch,0x75
  40c0bd:	pop    edi
  40c0be:	sbb    BYTE PTR ds:0x555cd343,cl
  40c0c4:	xlat   BYTE PTR ds:[ebx]
  40c0c5:	cmc    
  40c0c6:	push   esp
  40c0c7:	daa    
  40c0c8:	pop    edx
  40c0c9:	pop    ebp
  40c0ca:	xor    eax,0xda8eb8ab
  40c0cf:	fcomp  QWORD PTR [ebx+edi*1+0x3153627a]
  40c0d6:	repz xlat BYTE PTR ds:[ebx]
  40c0d8:	call   FWORD PTR [ebp+0x1f]
  40c0db:	xor    eax,DWORD PTR [ecx]
  40c0dd:	or     dl,dl
  40c0df:	hlt    
  40c0e0:	jns    0x40c06e
  40c0e2:	jmp    0x40c13c
  40c0e4:	je     0x40c13a
  40c0e6:	push   eax
  40c0e7:	jp     0x40c0ff
  40c0e9:	ds push ds
  40c0eb:	shl    BYTE PTR [edi],cl
  40c0ed:	aaa    
  40c0ee:	iret   
  40c0ef:	jg     0x40c097
  40c0f1:	(bad)  
  40c0f2:	or     al,0x4d
  40c0f4:	into   
  40c0f5:	cld    
  40c0f6:	pop    bp
  40c0f8:	test   eax,0xcf5dee7e
  40c0fd:	and    al,BYTE PTR [esi+0x3a33ab6c]
  40c103:	aaa    
  40c104:	add    ecx,DWORD PTR [edi+edi*1+0xa1db585]
  40c10b:	mul    BYTE PTR [ecx+0x3]
  40c10e:	(bad)  
  40c10f:	xor    BYTE PTR [edx],cl
  40c111:	add    DWORD PTR [esi+0x12],ebx
  40c114:	sbb    BYTE PTR [edi-0x3b],0x9a
  40c118:	xchg   edx,eax
  40c119:	es (bad) 
  40c11b:	dec    ebp
  40c11c:	es out 0xcb,al
  40c11f:	push   eax
  40c120:	in     eax,0x88
  40c122:	xchg   esp,eax
  40c123:	and    eax,0x21565224
  40c128:	xor    esp,DWORD PTR [edx+0x682059c0]
  40c12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c12f:	jmp    0x40c13f
  40c131:	pop    eax
  40c132:	sahf   
  40c133:	loope  0x40c0cb
  40c135:	ins    BYTE PTR es:[edi],dx
  40c136:	mov    ah,0xa1
  40c138:	push   cs
  40c139:	(bad)  
  40c13b:	mov    ch,0x1
  40c13d:	pop    esi
  40c13e:	stos   DWORD PTR es:[edi],eax
  40c13f:	jg     0x40c1af
  40c141:	je     0x40c10c
  40c143:	mov    ds,WORD PTR [edx+0x7769f94e]
  40c149:	dec    eax
  40c14a:	lods   eax,DWORD PTR ds:[esi]
  40c14b:	mov    edx,0x47608f58
  40c150:	xchg   esi,eax
  40c151:	(bad)
  40c154:	inc    eax
  40c155:	jo     0x40c0f3
  40c157:	rcl    DWORD PTR [esi],0x49
  40c15a:	mov    bl,0x72
  40c15c:	aad    0x82
  40c15e:	(bad)  
  40c15f:	lods   eax,DWORD PTR ds:[esi]
  40c160:	aad    0xc9
  40c162:	es out 0xa9,al
  40c165:	add    BYTE PTR [ebx],dh
  40c167:	push   0x49
  40c169:	stos   BYTE PTR es:[edi],al
  40c16a:	stos   DWORD PTR es:[edi],eax
  40c16b:	not    dh
  40c16d:	ret    
  40c16e:	icebp  
  40c16f:	push   esp
  40c170:	add    eax,0x922dcbe5
  40c175:	jno    0x40c12a
  40c177:	aam    0xb3
  40c179:	repz das 
  40c17b:	pusha  
  40c17c:	jne    0x40c122
  40c17e:	sub    eax,0xb8114ac4
  40c183:	mov    esi,0x58e04f95
  40c188:	out    dx,eax
  40c189:	icebp  
  40c18a:	cmc    
  40c18b:	out    dx,eax
  40c18c:	pop    ds
  40c18d:	sti    
  40c18e:	jnp    0x40c1aa
  40c190:	push   0xffffffba
  40c192:	jo     0x40c115
  40c194:	and    ah,BYTE PTR [edi-0xe]
  40c197:	es js  0x40c12b
  40c19a:	sub    al,0xf1
  40c19c:	jnp    0x40c1a1
  40c19e:	addr16 in al,dx
  40c1a0:	fs push ebp
  40c1a2:	das    
  40c1a3:	addr16 mov edx,0xccb18107
  40c1a9:	lahf   
  40c1aa:	cmp    al,0xd2
  40c1ac:	add    eax,0xc7cb214b
  40c1b1:	push   ds
  40c1b2:	xor    eax,0xf60b1038
  40c1b7:	push   ebx
  40c1b8:	mov    edx,0x2ee3c086
  40c1bd:	stos   DWORD PTR es:[edi],eax
  40c1be:	es xor al,0x84
  40c1c1:	dec    eax
  40c1c2:	and    al,bh
  40c1c4:	jmp    0x8f9820a2
  40c1c9:	and    edi,DWORD PTR [edi]
  40c1cb:	or     DWORD PTR [ecx-0x698353f8],eax
  40c1d1:	mov    bl,0x25
  40c1d3:	xchg   esi,eax
  40c1d4:	or     al,0xee
  40c1d6:	inc    ecx
  40c1d7:	fst    QWORD PTR [edx+0x13]
  40c1da:	jmp    0x449abdde
  40c1df:	sub    esp,DWORD PTR [ebp+0x184b42be]
  40c1e5:	sub    dl,BYTE PTR [edi]
  40c1e7:	mov    edx,0xe3e4185f
  40c1ec:	lock pop ecx
  40c1ee:	inc    ecx
  40c1ef:	and    al,0xee
  40c1f1:	cld    
  40c1f2:	nop
  40c1f3:	cmp    esi,0xfffffff3
  40c1f6:	mov    cl,0x27
  40c1f8:	push   edi
  40c1f9:	sbb    ah,BYTE PTR [ebx+0x21002554]
  40c1ff:	stc    
  40c200:	push   es
  40c201:	adc    ebx,edi
  40c203:	mov    bl,0x8f
  40c205:	jge    0x40c1f0
  40c207:	and    eax,0xedf5e2cd
  40c20c:	mov    bl,0xdc
  40c20e:	int    0x16
  40c210:	jmp    0x40c24c
  40c212:	cwde   
  40c213:	into   
  40c214:	mov    cl,0x35
  40c216:	lods   eax,DWORD PTR ds:[esi]
  40c217:	inc    eax
  40c218:	push   edx
  40c219:	sub    BYTE PTR [ebp+ecx*1+0x7a],al
  40c21d:	out    0x1c,al
  40c21f:	lods   eax,DWORD PTR ds:[esi]
  40c220:	ror    BYTE PTR [ecx+ebx*4-0x68ec2836],1
  40c227:	mul    DWORD PTR [ecx]
  40c229:	shr    BYTE PTR [edx],cl
  40c22b:	in     al,0xac
  40c22d:	push   esp
  40c22e:	rcr    DWORD PTR [edi-0x235c94da],0x95
  40c235:	sti    
  40c236:	pop    ebp
  40c237:	cmp    ebp,DWORD PTR [ecx]
  40c239:	jle    0x40c27b
  40c23b:	mov    eax,0x4639d2b3
  40c240:	dec    edi
  40c241:	xor    esp,edi
  40c243:	mov    WORD PTR [ebx-0x2bccbf58],fs
  40c249:	xchg   ecx,eax
  40c24a:	mov    bl,BYTE PTR [ebp+ebp*8-0x74399c26]
  40c251:	clc    
  40c252:	xchg   edi,eax
  40c253:	and    ecx,eax
  40c255:	cld    
  40c256:	(bad)  
  40c257:	data16 add al,0x35
  40c25a:	xor    al,0x54
  40c25c:	stos   DWORD PTR es:[edi],eax
  40c25d:	sub    al,0xf2
  40c25f:	ret    
  40c260:	clc    
  40c261:	jo     0x40c24e
  40c263:	enter  0xa3f7,0xbc
  40c267:	inc    eax
  40c268:	add    cl,ah
  40c26a:	adc    al,0x3a
  40c26c:	rcl    dh,0x17
  40c26f:	xor    esp,DWORD PTR ds:0x2cb3aad1
  40c275:	repnz push cs
  40c277:	aam    0x4d
  40c279:	jo     0x40c2af
  40c27b:	or     al,0x75
  40c27d:	add    DWORD PTR [eax+0x347e7b07],eax
  40c283:	aaa    
  40c284:	cdq    
  40c285:	push   ecx
  40c286:	mov    ?,ecx
  40c288:	inc    esp
  40c289:	and    al,0x32
  40c28b:	xor    eax,0x8430fcf0
  40c290:	imul   esi,DWORD PTR [esi+0x30fdbcdd],0x51
  40c297:	fdivr  st(2),st
  40c299:	int3   
  40c29a:	push   ebx
  40c29b:	or     ah,BYTE PTR [ecx]
  40c29d:	ja     0x40c226
  40c29f:	int3   
  40c2a0:	gs cmp eax,0x35f234cc
  40c2a6:	lods   eax,DWORD PTR ds:[esi]
  40c2a7:	xchg   edi,eax
  40c2a8:	and    BYTE PTR [edx+ecx*8+0x53],dh
  40c2ac:	je     0x40c243
  40c2ae:	rcl    BYTE PTR [ebx*8+0x3cc86c50],1
  40c2b5:	push   edx
  40c2b6:	cmp    ebx,ecx
  40c2b8:	(bad)  
  40c2b9:	cli    
  40c2ba:	es xchg ebp,eax
  40c2bc:	jo     0x40c2b0
  40c2be:	fidiv  WORD PTR [esi]
  40c2c0:	addr16 pop eax
  40c2c2:	lods   eax,DWORD PTR ds:[esi]
  40c2c3:	dec    edx
  40c2c4:	add    eax,DWORD PTR [edx]
  40c2c6:	in     al,dx
  40c2c7:	daa    
  40c2c8:	cmp    DWORD PTR [eax+edi*4],ebp
  40c2cb:	pusha  
  40c2cc:	push   ecx
  40c2cd:	jbe    0x40c27e
  40c2cf:	sbb    eax,0x871f57ba
  40c2d4:	repz and eax,0x5ee5bc03
  40c2da:	fmul   st(5),st
  40c2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2dd:	arpl   WORD PTR [eax+0x68],bp
  40c2e0:	popf   
  40c2e1:	pop    es
  40c2e2:	sub    esi,edi
  40c2e4:	xchg   ah,ch
  40c2e6:	lea    edx,[eax+0x2b42c20e]
  40c2ec:	(bad)  [edx-0x5e2557aa]
  40c2f2:	pop    edi
  40c2f3:	jecxz  0x40c2c0
  40c2f5:	test   DWORD PTR [eax],esi
  40c2f7:	mov    DWORD PTR [ebx],esp
  40c2f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2fa:	ret    
  40c2fb:	arpl   WORD PTR [esi],bp
  40c2fd:	jl     0x40c355
  40c2ff:	jg     0x40c316
  40c301:	push   es
  40c302:	sbb    ch,BYTE PTR [ecx]
  40c304:	inc    esi
  40c305:	xacquire xchg DWORD PTR [ebp+0x5c],edx
  40c309:	cdq    
  40c30a:	ins    DWORD PTR es:[edi],dx
  40c30b:	js     0x40c305
  40c30d:	sub    ch,BYTE PTR [eax+eiz*1+0x7684a22b]
  40c314:	mov    ah,0x58
  40c316:	jnp    0x40c38d
  40c318:	xor    DWORD PTR [ecx-0x76],0x47b4a057
  40c31f:	xor    ecx,DWORD PTR [ebp+0x4f]
  40c322:	dec    edx
  40c323:	je     0x40c337
  40c325:	int3   
  40c326:	fbstp  TBYTE PTR [ecx+0x2cc5773c]
  40c32c:	jp     0x40c31e
  40c32e:	push   edi
  40c32f:	pop    ds
  40c330:	(bad)  
  40c333:	or     ah,BYTE PTR [eax-0x31d3695e]
  40c339:	aam    0x55
  40c33b:	daa    
  40c33c:	sbb    bl,BYTE PTR [eax]
  40c33e:	dec    edi
  40c33f:	cwde   
  40c340:	inc    edi
  40c341:	xor    BYTE PTR [esi],cl
  40c343:	sub    ch,0xd8
  40c346:	scas   eax,DWORD PTR es:[edi]
  40c347:	or     eax,eax
  40c349:	push   ecx
  40c34a:	stc    
  40c34b:	out    dx,eax
  40c34c:	icebp  
  40c34d:	addr16 mov ds:0x4f3,al
  40c351:	push   edi
  40c352:	sub    BYTE PTR [ebp+0x7899d18e],dl
  40c358:	mov    DWORD PTR [ebx+0x6e],eax
  40c35b:	adc    BYTE PTR [esi+ebx*2-0x24],ch
  40c35f:	fild   QWORD PTR [edx]
  40c361:	imul   ebx,esp,0x1852f2f3
  40c367:	test   BYTE PTR [edi+0xf1a3c55],ch
  40c36d:	pop    edx
  40c36e:	ja     0x40c34f
  40c370:	sbb    BYTE PTR [esp+eax*4],0x7b
  40c374:	fwait
  40c375:	pop    es
  40c376:	out    0x29,eax
  40c378:	fdiv   QWORD PTR [eax+0xcf5ae8b]
  40c37e:	mov    ebx,esp
  40c380:	lea    eax,[esi+ebx*8-0x757107c1]
  40c387:	lods   eax,DWORD PTR ds:[esi]
  40c388:	out    0x39,al
  40c38a:	jle    0x40c3c6
  40c38c:	sub    ah,cl
  40c38e:	inc    ebp
  40c38f:	das    
  40c390:	mov    dl,ah
  40c392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c393:	rcl    ebp,0x4a
  40c396:	mov    ebp,0xdf3795c0
  40c39b:	adc    cl,BYTE PTR [esi+0x69]
  40c39e:	push   eax
  40c39f:	add    eax,0x24a00507
  40c3a4:	pop    ds
  40c3a5:	mov    al,ds:0x7e8d90ce
  40c3aa:	(bad)  
  40c3ab:	push   esp
  40c3ac:	loopne 0x40c3ab
  40c3ae:	mov    edi,0xd507938c
  40c3b3:	inc    edx
  40c3b4:	test   eax,0xad40ed46
  40c3b9:	sti    
  40c3ba:	pop    ebp
  40c3bb:	mov    edi,0x8ae78a41
  40c3c0:	jmp    0x40c39f
  40c3c2:	fiadd  DWORD PTR [ecx-0x219290c]
  40c3c8:	mov    bh,0x57
  40c3ca:	fdiv   DWORD PTR [ecx+ecx*1]
  40c3cd:	adc    bh,BYTE PTR [edi]
  40c3cf:	sti    
  40c3d0:	nop
  40c3d1:	test   dl,cl
  40c3d3:	(bad)
  40c3d6:	shr    BYTE PTR [edi],0xf8
  40c3d9:	cmp    eax,0x85e242ae
  40c3de:	adc    BYTE PTR [ebx+0x48],al
  40c3e1:	inc    esi
  40c3e2:	push   0x5f41ba27
  40c3e7:	adc    edi,DWORD PTR [eax]
  40c3e9:	push   cs
  40c3ea:	aad    0xe
  40c3ec:	push   0x5
  40c3ee:	mov    ecx,0x8f163d08
  40c3f3:	mov    esi,0xab09196e
  40c3f8:	jne    0x40c465
  40c3fa:	and    cl,BYTE PTR [ecx]
  40c3fc:	test   eax,0xd59c68f0
  40c401:	and    DWORD PTR [ecx+eax*1+0x3],ecx
  40c405:	jbe    0x40c422
  40c407:	mov    dh,0x75
  40c409:	xchg   DWORD PTR [edi+0x59289912],eax
  40c40f:	(bad)  
  40c410:	xlat   BYTE PTR ds:[ebx]
  40c411:	and    DWORD PTR [edi+0x75],ebx
  40c414:	mov    edi,0xb0133ee6
  40c419:	outs   dx,DWORD PTR ds:[esi]
  40c41a:	scas   eax,DWORD PTR es:[edi]
  40c41b:	iret   
  40c41c:	sub    esi,esp
  40c41e:	iret   
  40c41f:	imul   ecx,DWORD PTR [esi-0x6e],0xffffffcd
  40c423:	and    al,0x77
  40c425:	add    esp,DWORD PTR [eax+0x2f747eda]
  40c42b:	jo     0x40c457
  40c42d:	sbb    edi,DWORD PTR [ecx-0x5d5ef482]
  40c433:	aad    0x6c
  40c435:	ror    BYTE PTR [ebp+0x56a57d46],1
  40c43b:	xchg   esi,eax
  40c43c:	push   ebx
  40c43d:	xchg   edx,eax
  40c43e:	loop   0x40c3f9
  40c440:	outs   dx,DWORD PTR fs:[esi]
  40c442:	dec    esp
  40c443:	push   ds
  40c444:	sub    eax,0x309a59ee
  40c449:	sar    BYTE PTR [edi+0x5e97d1ac],cl
  40c44f:	xor    bl,al
  40c451:	jmp    0x7417:0x3524baa3
  40c458:	mov    ecx,0xc6ff3caa
  40c45d:	out    0x71,al
  40c45f:	adc    BYTE PTR [edx],bh
  40c461:	add    bl,dh
  40c463:	cmp    al,0x83
  40c465:	xor    esi,edi
  40c467:	loope  0x40c444
  40c469:	popa   
  40c46a:	sti    
  40c46b:	pusha  
  40c46c:	popf   
  40c46d:	add    BYTE PTR [ebx],cl
  40c46f:	mov    ds:0x24af6532,al
  40c474:	cs je  0x40c4c4
  40c477:	clc    
  40c478:	add    DWORD PTR [edi+0x7ef4b14b],esp
  40c47e:	loop   0x40c4cb
  40c480:	jbe    0x40c484
  40c482:	outs   dx,DWORD PTR ds:[esi]
  40c483:	xchg   esi,eax
  40c484:	dec    edi
  40c485:	call   0xbde30757
  40c48a:	retf   0x4391
  40c48d:	adc    al,0x5b
  40c48f:	dec    ebp
  40c490:	es mov edi,0xfacbf1b5
  40c496:	test   al,0x84
  40c498:	test   dh,bh
  40c49a:	outs   dx,BYTE PTR gs:[esi]
  40c49c:	mov    edx,0xf04289cd
  40c4a1:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40c4a3:	loopne 0x40c500
  40c4a5:	xlat   BYTE PTR ds:[ebx]
  40c4a6:	lahf   
  40c4a7:	outs   dx,DWORD PTR ds:[esi]
  40c4a8:	dec    edi
  40c4a9:	xchg   ebx,eax
  40c4aa:	or     bl,BYTE PTR [edi]
  40c4ac:	ja     0x40c529
  40c4ae:	and    dh,0xf
  40c4b1:	hlt    
  40c4b2:	ins    BYTE PTR es:[edi],dx
  40c4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4b4:	jo     0x40c526
  40c4b6:	stos   DWORD PTR es:[edi],eax
  40c4b7:	jnp    0x40c441
  40c4b9:	popf   
  40c4ba:	sbb    DWORD PTR [ebx],0xffffffe8
  40c4bd:	xchg   edx,eax
  40c4be:	in     eax,dx
  40c4bf:	and    al,0x57
  40c4c1:	xchg   DWORD PTR [edi-0x6],edx
  40c4c4:	shr    BYTE PTR ds:0xb0b82d9b,cl
  40c4ca:	sbb    ch,BYTE PTR [ecx+edx*8]
  40c4cd:	pop    esi
  40c4ce:	jne    0x40c509
  40c4d0:	xchg   esi,eax
  40c4d1:	inc    ebp
  40c4d2:	loop   0x40c463
  40c4d4:	adc    DWORD PTR ds:0x178316f2,esi
  40c4da:	dec    esp
  40c4db:	stos   DWORD PTR es:[edi],eax
  40c4dc:	pop    ss
  40c4dd:	adc    bl,cl
  40c4df:	mov    ecx,0x3db19f46
  40c4e4:	jbe    0x40c549
  40c4e6:	lods   eax,DWORD PTR ds:[esi]
  40c4e7:	sti    
  40c4e8:	adc    ecx,ecx
  40c4ea:	dec    esi
  40c4eb:	mov    eax,ds:0xced3f39d
  40c4f0:	lock mov ebp,0xcbe0244f
  40c4f6:	xchg   BYTE PTR [ecx-0x2a17531b],cl
  40c4fc:	mov    ch,0x84
  40c4fe:	xor    eax,0xb03e3d39
  40c503:	pop    ebx
  40c504:	push   0xfffffffb
  40c506:	cmc    
  40c507:	loop   0x40c4bc
  40c509:	cmp    BYTE PTR [edi+0x639bceb5],al
  40c50f:	iret   
  40c510:	shl    DWORD PTR [edx-0xfba360f],1
  40c516:	retf   0x5d97
  40c519:	out    0x72,eax
  40c51b:	call   0xb43054a8
  40c520:	js     0x40c4fb
  40c522:	fdivr  DWORD PTR [edi]
  40c524:	sbb    al,0xd2
  40c526:	jo     0x40c55c
  40c528:	jbe    0x40c4f8
  40c52a:	fidiv  DWORD PTR [eax+0x77a2d343]
  40c530:	push   esi
  40c531:	call   0x42ff:0x2202caf6
  40c538:	add    eax,0xe21e932f
  40c53d:	mov    ah,0x19
  40c53f:	out    dx,eax
  40c540:	dec    ebp
  40c541:	xor    DWORD PTR [eax+edx*8-0x26],0x499b1290
  40c549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c54a:	xchg   esp,eax
  40c54b:	sahf   
  40c54c:	daa    
  40c54d:	sub    eax,ecx
  40c54f:	jg     0x40c54d
  40c551:	mov    ah,0x46
  40c553:	mov    ecx,0xc1e5d70a
  40c558:	icebp  
  40c559:	into   
  40c55a:	lahf   
  40c55b:	mov    edx,0x8ff20c5d
  40c560:	xchg   esi,eax
  40c561:	out    0xf7,al
  40c563:	lods   eax,DWORD PTR ds:[esi]
  40c564:	or     DWORD PTR [ebx+0x52],edi
  40c567:	cmc    
  40c568:	(bad)  
  40c569:	fwait
  40c56a:	lahf   
  40c56b:	push   edx
  40c56c:	outs   dx,BYTE PTR ds:[esi]
  40c56d:	in     al,dx
  40c56e:	lea    esi,[ebx+0x7d]
  40c571:	inc    edi
  40c572:	jg     0x40c5c8
  40c574:	inc    edx
  40c575:	nop
  40c576:	sub    ecx,DWORD PTR [edi]
  40c578:	out    0x91,al
  40c57a:	and    BYTE PTR [esi-0x76f9418a],al
  40c580:	out    dx,eax
  40c581:	std    
  40c582:	adc    BYTE PTR [ecx-0x46],ah
  40c585:	push   0xca3efb08
  40c58a:	dec    ebp
  40c58b:	jbe    0x40c5e4
  40c58d:	(bad)  
  40c58e:	in     al,dx
  40c58f:	cli    
  40c590:	jmp    0x40c55e
  40c592:	mov    ah,0xce
  40c594:	sbb    cl,BYTE PTR [ebp+ebx*8+0x49]
  40c598:	xlat   BYTE PTR ds:[ebx]
  40c599:	adc    al,0x62
  40c59b:	mov    dh,0x3a
  40c59d:	aad    0x50
  40c59f:	dec    ecx
  40c5a0:	(bad)  
  40c5a1:	retf   0xc917
  40c5a4:	xchg   ebx,edi
  40c5a6:	jp     0x40c5e5
  40c5a8:	xchg   DWORD PTR [edi+0x2b],ebx
  40c5ab:	scas   eax,DWORD PTR es:[edi]
  40c5ac:	fsubr  QWORD PTR [esi-0x39c25995]
  40c5b2:	je     0x40c5f7
  40c5b4:	ins    BYTE PTR es:[edi],dx
  40c5b5:	inc    edx
  40c5b6:	xchg   BYTE PTR [ebx-0x4b9965e3],cl
  40c5bc:	add    eax,0x12096fd6
  40c5c1:	lds    esp,FWORD PTR [eax+0x5da07f21]
  40c5c7:	imul   esi,DWORD PTR [edx+eiz*8-0x21],0xffffff8f
  40c5cc:	adc    al,0xaf
  40c5cf:	iret   
  40c5d0:	inc    ecx
  40c5d1:	adc    al,0xe0
  40c5d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d4:	inc    ebx
  40c5d5:	mov    esp,0x4951d814
  40c5da:	push   DWORD PTR [eax-0x1f]
  40c5dd:	pop    ebx
  40c5de:	push   ebx
  40c5df:	shl    BYTE PTR ds:0x962e8669,0x10
  40c5e6:	test   BYTE PTR [ebx],dl
  40c5e8:	dec    eax
  40c5e9:	push   es
  40c5ea:	xchg   DWORD PTR [ebp+0x48],ebp
  40c5ed:	jmp    0x350d9303
  40c5f2:	pop    ss
  40c5f3:	fnstcw WORD PTR [esi-0x23152173]
  40c5f9:	mov    ss,WORD PTR cs:[edi-0x58]
  40c5fd:	lock add eax,0x903f2ad3
  40c603:	cdq    
  40c604:	test   DWORD PTR [ebp-0x2c],ebx
  40c607:	ss mov ebp,0x14dd145
  40c60d:	shl    BYTE PTR [edi-0x2ad93386],cl
  40c613:	mov    al,bh
  40c615:	push   esi
  40c616:	gs (bad) 
  40c618:	sub    eax,0xb7d694a
  40c61d:	ss dec ebp
  40c61f:	or     edi,esp
  40c621:	iret   
  40c622:	je     0x40c637
  40c624:	xchg   edi,eax
  40c625:	add    BYTE PTR [ecx],ah
  40c627:	sar    edi,0x4f
  40c62a:	das    
  40c62b:	nop
  40c62c:	sub    ch,BYTE PTR [ecx-0x1063d1d0]
  40c632:	ret    
  40c633:	sbb    BYTE PTR [ebp+ebx*1-0x39],ah
  40c637:	mov    ds:0xf4132f59,eax
  40c63c:	push   ebp
  40c63d:	push   esp
  40c63e:	(bad)  
  40c63f:	pop    esi
  40c641:	pop    ebp
  40c642:	sub    eax,0x592a692d
  40c647:	or     DWORD PTR [esi+0x6f8f3ef1],edx
  40c64d:	jmp    FWORD PTR [eax+edi*1+0x59e94259]
  40c654:	or     edi,esp
  40c656:	hlt    
  40c657:	sbb    ebx,DWORD PTR [edx-0x4084298b]
  40c65d:	push   0xfffffff3
  40c65f:	inc    esp
  40c660:	push   esi
  40c661:	vpsubusb xmm2,xmm1,XMMWORD PTR [esi]
  40c665:	repnz pop ebp
  40c667:	in     eax,0x48
  40c669:	outs   dx,DWORD PTR ds:[esi]
  40c66a:	ins    BYTE PTR es:[edi],dx
  40c66b:	(bad)  
  40c66c:	out    dx,eax
  40c66d:	pop    ecx
  40c66e:	les    ebx,FWORD PTR [eax-0x40]
  40c671:	mov    eax,ds:0xea6c981f
  40c676:	mov    edi,0xf7bada3c
  40c67b:	and    al,0xe3
  40c67d:	push   ebx
  40c67e:	xor    dl,BYTE PTR [ebx]
  40c680:	xchg   edx,eax
  40c681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c682:	cmp    BYTE PTR gs:[edi],al
  40c685:	adc    ebx,DWORD PTR [esi]
  40c687:	xchg   ecx,eax
  40c688:	jb     0x40c6cd
  40c68a:	mov    esi,esp
  40c68c:	mov    ebx,0x57e9f4a4
  40c691:	sbb    eax,0x7cc69c15
  40c696:	shr    DWORD PTR [eax+0x25],1
  40c699:	clc    
  40c69a:	fcomp  DWORD PTR [ebp+0x5981033d]
  40c6a0:	mov    dh,BYTE PTR ds:0xdc80e87f
  40c6a6:	sbb    DWORD PTR [ebx-0x42787da],esp
  40c6ac:	dec    esi
  40c6ad:	sar    DWORD PTR [edi],0xe3
  40c6b0:	mov    ds:0xd77d7645,eax
  40c6b5:	sbb    ebx,DWORD PTR ds:0xfe3c6d9e
  40c6bb:	or     dh,BYTE PTR [edi-0x18eff9a3]
  40c6c1:	out    dx,eax
  40c6c2:	jge    0x40c700
  40c6c4:	xchg   BYTE PTR [edi-0x4b],al
  40c6c7:	pushf  
  40c6c8:	xor    DWORD PTR [ecx-0x1847cdb0],esp
  40c6ce:	shl    BYTE PTR [esi-0x2],1
  40c6d1:	cmp    edx,DWORD PTR [edi-0x7f16e81f]
  40c6d7:	or     ah,al
  40c6d9:	add    eax,0x5277ca58
  40c6de:	enter  0xa380,0x48
  40c6e2:	push   cs
  40c6e3:	and    DWORD PTR [ebx],edi
  40c6e5:	mov    ebx,0x9be9a331
  40c6ea:	mov    WORD PTR [ebp-0x6888b6c],?
  40c6f0:	pop    edx
  40c6f1:	mov    ds:0x2585f400,al
  40c6f6:	out    0x21,al
  40c6f8:	out    0x51,al
  40c6fa:	scas   eax,DWORD PTR es:[edi]
  40c6fb:	stos   BYTE PTR es:[edi],al
  40c6fc:	fiadd  WORD PTR [ebx+0x7a]
  40c6ff:	test   eax,0x8c46a81e
  40c704:	lock cli 
  40c706:	jmp    0x237b:0x78704212
  40c70d:	repnz and al,0x5c
  40c710:	nop
  40c711:	int3   
  40c712:	leave  
  40c713:	(bad)  
  40c715:	push   ebx
  40c716:	mov    BYTE PTR [ebp+0x25],al
  40c719:	jecxz  0x40c72a
  40c71b:	jae    0x40c797
  40c71d:	mov    cl,0x64
  40c71f:	mov    ebp,0xc3da342f
  40c724:	into   
  40c725:	sbb    DWORD PTR [ebx+0x5b18e513],eax
  40c72b:	sbb    ebp,DWORD PTR [edi-0x3f]
  40c72e:	outs   dx,BYTE PTR ds:[esi]
  40c72f:	scas   al,BYTE PTR es:[edi]
  40c730:	aas    
  40c731:	mov    ecx,0xed36dbd9
  40c736:	addr16 xchg ecx,eax
  40c738:	xchg   ebp,eax
  40c739:	mov    WORD PTR [edi],ss
  40c73b:	loopne 0x40c6bf
  40c73d:	add    edx,edi
  40c73f:	fdivp  st(7),st
  40c741:	lds    ecx,FWORD PTR [ebx+edi*4-0x1792b289]
  40c748:	jp     0x40c704
  40c74a:	sub    edi,DWORD PTR [esi-0x24]
  40c74d:	add    cl,bh
  40c74f:	push   ebx
  40c750:	test   cl,al
  40c752:	or     eax,0xb0c5efeb
  40c757:	out    0xa0,eax
  40c759:	add    ah,ch
  40c75b:	xchg   edx,eax
  40c75c:	xchg   esp,eax
  40c75d:	xchg   edx,eax
  40c75e:	repz scas eax,DWORD PTR es:[edi]
  40c760:	daa    
  40c761:	pop    ecx
  40c762:	jo     0x40c6ef
  40c764:	sahf   
  40c765:	add    dh,al
  40c767:	sub    BYTE PTR [bp+di-0x551c],dl
  40c76c:	int    0xcc
  40c76e:	inc    esi
  40c76f:	mov    cl,0xd
  40c771:	loop   0x40c7bb
  40c773:	sti    
  40c774:	inc    edx
  40c775:	ja     0x40c71f
  40c777:	or     bl,BYTE PTR [edi-0x53e013b4]
  40c77d:	mov    edi,DWORD PTR [eax+0x1e]
  40c780:	out    dx,eax
  40c781:	and    al,0x9e
  40c783:	inc    edi
  40c784:	js     0x40c78e
  40c786:	xor    ecx,ebx
  40c788:	mov    ds:0x8c715141,al
  40c78d:	test   al,0x27
  40c78f:	pop    edx
  40c790:	cld    
  40c791:	popa   
  40c792:	sbb    BYTE PTR [esi+0x7c],dl
  40c795:	jno    0x40c802
  40c797:	sub    edi,DWORD PTR [esi-0x64b0d703]
  40c79d:	add    ch,bh
  40c79f:	dec    ebx
  40c7a0:	test   al,0x46
  40c7a2:	dec    DWORD PTR [ebx-0x3cad5086]
  40c7a8:	sbb    eax,0x73ea2ae2
  40c7ad:	sti    
  40c7ae:	fwait
  40c7af:	jb     0x40c745
  40c7b1:	(bad)  
  40c7b2:	mov    eax,0x2f587787
  40c7b7:	xor    eax,0x96ffa6de
  40c7bc:	shr    ah,cl
  40c7be:	dec    edx
  40c7bf:	dec    esp
  40c7c0:	pop    DWORD PTR [ebx+0x52]
  40c7c3:	ins    BYTE PTR es:[edi],dx
  40c7c4:	or     eax,0x6b515ba1
  40c7c9:	scas   eax,DWORD PTR es:[edi]
  40c7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7cb:	stos   DWORD PTR es:[edi],eax
  40c7cc:	sbb    al,0xbd
  40c7ce:	dec    ecx
  40c7cf:	nop
  40c7d0:	iret   
  40c7d1:	xor    BYTE PTR [edx+edi*1-0x14],ch
  40c7d5:	jg     0x40c7da
  40c7d7:	jle    0x40c854
  40c7d9:	int3   
  40c7da:	in     al,dx
  40c7db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7dc:	mov    bl,0x2a
  40c7de:	pop    edi
  40c7df:	clc    
  40c7e0:	pop    eax
  40c7e1:	in     eax,dx
  40c7e2:	repz jbe 0x40c787
  40c7e5:	into   
  40c7e6:	(bad)  
  40c7e7:	fstp   TBYTE PTR [edx]
  40c7e9:	jb     0x40c783
  40c7eb:	rcl    eax,0x94
  40c7ee:	sbb    esi,edx
  40c7f0:	(bad)  
  40c7f1:	jl     0x40c80a
  40c7f3:	fs xchg esi,eax
  40c7f5:	or     ebp,ebx
  40c7f7:	pop    esi
  40c7f8:	pop    ss
  40c7f9:	mov    bh,0x98
  40c7fb:	or     BYTE PTR [ecx-0x73],0x7
  40c7ff:	ss mov bh,0x7e
  40c802:	fnstenv [ebx+0x288cab39]
  40c808:	pushf  
  40c809:	jno    0x40c7a4
  40c80b:	xchg   edx,eax
  40c80c:	iret   
  40c80d:	cmp    BYTE PTR [esi+0x7decc116],dh
  40c813:	aam    0xec
  40c815:	inc    eax
  40c816:	sub    eax,0xbb0b4696
  40c81b:	aad    0x59
  40c81d:	popa   
  40c81e:	add    bl,dh
  40c820:	aad    0x75
  40c822:	out    dx,al
  40c823:	rcl    bl,0x1
  40c826:	mov    ebx,0x9bf86a81
  40c82b:	pop    ecx
  40c82c:	jnp    0x40c80f
  40c82e:	or     eax,0xa7948f2a
  40c833:	cwde   
  40c834:	cmp    eax,0x1b01941
  40c839:	add    edx,DWORD PTR [edx]
  40c83b:	lock ins BYTE PTR es:[edi],dx
  40c83d:	je     0x40c87e
  40c83f:	xchg   ecx,eax
  40c840:	fadd   DWORD PTR [edi]
  40c842:	(bad)  
  40c843:	jo     0x40c8ae
  40c845:	mov    edi,0x7f1bda4a
  40c84a:	ficom  WORD PTR ds:0x39930a33
  40c850:	add    ebx,DWORD PTR [eax]
  40c852:	data16 stos BYTE PTR es:[edi],al
  40c854:	jle    0x40c81d
  40c856:	jmp    0x40c829
  40c858:	sub    ch,dl
  40c85a:	nop
  40c85b:	cmp    edx,eax
  40c85d:	adc    al,0x2e
  40c85f:	push   0xad8f3953
  40c864:	cmc    
  40c865:	add    al,0x76
  40c867:	lsl    esi,sp
  40c86a:	lahf   
  40c86b:	push   ds
  40c86c:	xor    al,0xae
  40c86e:	push   edi
  40c86f:	cwde   
  40c870:	psrad  mm5,QWORD PTR [ecx-0x46]
  40c874:	cmp    ch,0xe6
  40c877:	push   ss
  40c878:	sbb    al,0xe4
  40c87b:	call   0x656291bd
  40c880:	ficomp WORD PTR [edi+0x3fba1574]
  40c886:	mov    ?,WORD PTR [edx+ebx*4]
  40c889:	call   0x399f3b99
  40c88e:	push   ds
  40c88f:	lock push cs
  40c891:	pop    edx
  40c892:	call   0x3f12:0x6d13cb84
  40c899:	les    ebp,FWORD PTR [edi+ebx*1]
  40c89c:	ficom  DWORD PTR [edi]
  40c89e:	sub    cl,BYTE PTR [eax+0x38b8a9ce]
  40c8a4:	inc    esi
  40c8a5:	mov    eax,ds:0x5f6c3dc
  40c8aa:	and    eax,0xfffffffb
  40c8ad:	lods   al,BYTE PTR ds:[esi]
  40c8ae:	mov    bh,0xa5
  40c8b0:	mov    ecx,0x912c75ec
  40c8b5:	and    DWORD PTR [edi],esp
  40c8b7:	push   ds
  40c8b8:	(bad)  
  40c8b9:	not    BYTE PTR [ebx+ebx*1-0x45fa24e]
  40c8c0:	mov    edi,DWORD PTR [eax]
  40c8c2:	out    dx,eax
  40c8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8c4:	ss jle 0x40c8c1
  40c8c7:	inc    esi
  40c8c8:	or     BYTE PTR [edi],dh
  40c8ca:	add    BYTE PTR [ebp-0x2006377],bl
  40c8d0:	mov    bh,BYTE PTR [esp+ebp*8]
  40c8d3:	mov    esi,0x89cb4867
  40c8d8:	ds clc 
  40c8da:	sbb    BYTE PTR [ecx+0x503942f6],0xbe
  40c8e1:	push   ecx
  40c8e2:	push   0x190f649
  40c8e7:	outs   dx,DWORD PTR ds:[esi]
  40c8e8:	mov    ds:0x3b72c93,al
  40c8ed:	loop   0x40c934
  40c8ef:	ins    DWORD PTR es:[edi],dx
  40c8f0:	dec    eax
  40c8f1:	sbb    esi,DWORD PTR [edi-0x77]
  40c8f4:	clc    
  40c8f5:	xlat   BYTE PTR ds:[ebx]
  40c8f6:	shl    bh,0xf7
  40c8f9:	jge    0x40c8b2
  40c8fb:	push   ebx
  40c8fc:	mov    dl,0x31
  40c8fe:	addr16 sbb ch,dh
  40c901:	ja     0x40c961
  40c903:	repz mov dl,0x2f
  40c906:	call   0x4e4c:0x5daa5f83
  40c90d:	fs adc bl,dh
  40c910:	jg     0x40c902
  40c912:	adc    BYTE PTR [edx+0x8],ah
  40c915:	mov    bl,0xc4
  40c917:	pop    ebp
  40c918:	ins    BYTE PTR es:[edi],dx
  40c919:	mov    ecx,0xcf4b5166
  40c91e:	ss push ecx
  40c920:	(bad)  
  40c921:	shr    edx,cl
  40c923:	xor    DWORD PTR [ecx-0x57],ecx
  40c926:	jmp    0xf918:0x2cca06ce
  40c92d:	in     eax,dx
  40c92e:	in     eax,dx
  40c92f:	ja     0x40c969
  40c931:	hlt    
  40c932:	adc    DWORD PTR [ecx-0x1620fad],edi
  40c938:	push   0xfffffff3
  40c93a:	cmp    dh,cl
  40c93c:	mov    edx,DWORD PTR [esi+0x2ca4399d]
  40c942:	nop
  40c943:	or     ebx,DWORD PTR [ebx]
  40c945:	inc    eax
  40c946:	push   es
  40c947:	mov    eax,0xc97a6331
  40c94c:	pushf  
  40c94d:	and    al,0x6b
  40c94f:	adc    al,0xc1
  40c951:	push   es
  40c952:	xchg   ecx,eax
  40c953:	xchg   edi,eax
  40c954:	cld    
  40c955:	fwait
  40c956:	mov    ah,0xab
  40c958:	sub    BYTE PTR [esi-0x1f7e6386],cl
  40c95e:	adc    eax,edx
  40c960:	pop    esi
  40c961:	sbb    al,0x2
  40c963:	jmp    0xf135e752
  40c968:	xchg   dl,dh
  40c96a:	popa   
  40c96b:	retf   0x9a1b
  40c96e:	jp     0x40c9c1
  40c970:	ret    0x2a0
  40c973:	add    al,0xc6
  40c975:	xchg   BYTE PTR [ecx+0x40],ch
  40c978:	push   es
  40c979:	scas   eax,DWORD PTR es:[edi]
  40c97a:	scas   al,BYTE PTR es:[edi]
  40c97b:	mov    ebx,0x216fea0a
  40c980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c981:	cld    
  40c982:	cmp    al,al
  40c984:	adc    BYTE PTR [ebx+0x46],0xc2
  40c988:	add    esi,ebp
  40c98a:	fild   WORD PTR [ecx]
  40c98c:	iret   
  40c98d:	aas    
  40c98e:	add    al,0x11
  40c990:	add    edx,DWORD PTR [ecx+0x3aec17f4]
  40c996:	in     al,0x9a
  40c998:	pushf  
  40c999:	bound  esp,QWORD PTR ds:0x8d06047a
  40c99f:	mov    bh,0xd1
  40c9a1:	jge    0x40c9cf
  40c9a3:	adc    al,0xee
  40c9a5:	sub    BYTE PTR [edx-0x60b8a5ff],bl
  40c9ab:	dec    esp
  40c9ac:	mov    edx,0x50569756
  40c9b1:	data16 repz cmp dh,BYTE PTR [edi+0x3882a67b]
  40c9b9:	mov    ds:0x936097d7,al
  40c9be:	ins    BYTE PTR es:[edi],dx
  40c9bf:	daa    
  40c9c0:	(bad)
  40c9c5:	push   es
  40c9c6:	or     DWORD PTR [eax+0x15],esp
  40c9c9:	mov    BYTE PTR [esi],al
  40c9cb:	pop    ds
  40c9cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9cd:	pop    ecx
  40c9ce:	mov    cl,0x51
  40c9d0:	imul   edi,edi,0xffffffac
  40c9d3:	je     0x40c957
  40c9d5:	iret   
  40c9d6:	add    BYTE PTR [edi+0x45bb62bc],bh
  40c9dc:	ss and eax,0xc821807
  40c9e2:	aad    0xc6
  40c9e4:	inc    edx
  40c9e5:	repz aad 0xc0
  40c9e8:	jnp    0x40c9b2
  40c9ea:	push   esp
  40c9eb:	push   ds
  40c9ec:	push   eax
  40c9ed:	nop
  40c9ee:	jmp    0x40c9a7
  40c9f0:	rol    ah,1
  40c9f2:	dec    edi
  40c9f3:	push   ecx
  40c9f4:	mov    ds:0x35fee57,al
  40c9f9:	stc    
  40c9fa:	mov    esi,0xc5832d51
  40c9ff:	mov    bh,0x41
  40ca01:	mov    ds:0xddef311,eax
  40ca06:	add    eax,0xd2c9a62b
  40ca0b:	or     BYTE PTR [esi],ah
  40ca0d:	inc    ebp
  40ca0e:	pop    es
  40ca0f:	cli    
  40ca10:	mov    edi,0xe8b608d3
  40ca15:	adc    al,0x8a
  40ca17:	retf   
  40ca18:	gs pusha 
  40ca1a:	call   0x6f1ac3c3
  40ca1f:	xor    BYTE PTR [esi],bl
  40ca21:	inc    ebx
  40ca22:	arpl   bx,cx
  40ca24:	fisttp QWORD PTR [ebx-0x6d]
  40ca27:	aaa    
  40ca28:	ficomp WORD PTR [ecx+esi*4+0x5]
  40ca2c:	mov    esp,0xe19b11bf
  40ca31:	dec    ecx
  40ca32:	cmp    cl,BYTE PTR ds:0x7ca10316
  40ca38:	dec    ebp
  40ca39:	inc    ebp
  40ca3a:	ins    DWORD PTR es:[edi],dx
  40ca3b:	ins    DWORD PTR es:[edi],dx
  40ca3c:	cmp    eax,0x5ad92050
  40ca41:	call   0xefb0:0x46dab99a
  40ca48:	dec    ebp
  40ca49:	inc    edx
  40ca4a:	xor    dh,BYTE PTR [ecx]
  40ca4c:	xchg   edx,eax
  40ca4d:	retf   0x55be
  40ca50:	mov    esi,0x47f37968
  40ca55:	push   ecx
  40ca56:	mov    ch,0xa6
  40ca58:	shl    DWORD PTR [esp+esi*8+0x6ceb76cb],1
  40ca5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca60:	cmp    dl,al
  40ca62:	xor    al,0x58
  40ca64:	cld    
  40ca65:	(bad)  
  40ca66:	sub    esi,ecx
  40ca68:	pop    ecx
  40ca69:	xchg   ecx,eax
  40ca6a:	(bad)  
  40ca6b:	xor    eax,0xc3171005
  40ca70:	inc    esi
  40ca71:	xchg   ecx,eax
  40ca72:	ja     0x40ca5b
  40ca74:	test   DWORD PTR [ebx+0x34e2aeaa],edx
  40ca7a:	add    ah,BYTE PTR [edi+esi*4]
  40ca7d:	(bad)  
  40ca7e:	cld    
  40ca7f:	jecxz  0x40cacd
  40ca81:	mov    eax,ds:0x50bd2f93
  40ca86:	call   0x877fc5e1
  40ca8b:	xor    dh,BYTE PTR ds:0xb7424de3
  40ca91:	out    dx,eax
  40ca92:	and    DWORD PTR [eax+0x4dac038a],eax
  40ca98:	test   eax,0xe2b87db8
  40ca9d:	scas   al,BYTE PTR es:[edi]
  40ca9e:	(bad)  
  40ca9f:	mov    edi,0x7fd8b8f2
  40caa4:	push   esi
  40caa5:	ror    DWORD PTR ds:0x6482bccd,0x6f
  40caac:	xchg   ecx,eax
  40caad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caae:	mov    esi,0x7827fe10
  40cab3:	cld    
  40cab4:	(bad)  
  40cab6:	shl    BYTE PTR [edi],0x44
  40cab9:	pusha  
  40caba:	xchg   edi,eax
  40cabb:	jle    0x40ca8a
  40cabd:	call   0xb967:0x3e24f524
  40cac4:	icebp  
  40cac5:	je     0x40ca6e
  40cac7:	mov    dh,0x94
  40cac9:	call   0x2ee0:0x85e0aa85
  40cad0:	cmp    eax,0xc932f280
  40cad5:	cld    
  40cad6:	loop   0x40cb4b
  40cad8:	sahf   
  40cad9:	jno    0x40ca7a
  40cadb:	imul   edx,DWORD PTR [ebp+0x40],0xe52657b0
  40cae2:	popa   
  40cae3:	ins    BYTE PTR es:[edi],dx
  40cae4:	adc    eax,0x45857e2b
  40cae9:	retf   0xa98f
  40caec:	ins    BYTE PTR es:[edi],dx
  40caed:	xchg   ebp,eax
  40caee:	push   ebx
  40caef:	mov    dl,0x1
  40caf1:	je     0x40ca87
  40caf3:	sbb    BYTE PTR [ecx],cl
  40caf5:	xor    BYTE PTR [edx-0x33],bh
  40caf8:	pop    es
  40caf9:	scas   al,BYTE PTR es:[edi]
  40cafa:	cmp    esp,DWORD PTR [esi-0x592b3106]
  40cb00:	mov    BYTE PTR [edi-0x43dea5f1],ah
  40cb06:	ret    
  40cb07:	stos   DWORD PTR es:[edi],eax
  40cb08:	push   ds
  40cb09:	lahf   
  40cb0a:	dec    esp
  40cb0b:	xchg   esi,eax
  40cb0c:	pop    ds
  40cb0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb0e:	add    DWORD PTR [esi-0x76],esi
  40cb11:	inc    ebp
  40cb12:	rol    BYTE PTR [ebx],cl
  40cb14:	ja     0x40cae8
  40cb16:	sub    BYTE PTR [eax-0x5d47f0de],bh
  40cb1c:	rol    DWORD PTR [ebx],1
  40cb1e:	mov    bh,0x24
  40cb20:	sar    DWORD PTR [eax],cl
  40cb22:	inc    ebp
  40cb23:	sbb    esi,DWORD PTR cs:[eax]
  40cb26:	fidiv  WORD PTR [esi+0x21]
  40cb29:	clc    
  40cb2a:	out    dx,al
  40cb2b:	sub    dh,BYTE PTR [edi]
  40cb2d:	jae    0x40cb27
  40cb2f:	sahf   
  40cb30:	data16 cmp al,0x73
  40cb33:	mov    ah,0x36
  40cb35:	rcr    bl,1
  40cb37:	dec    ebp
  40cb38:	xor    eax,0xf50a7029
  40cb3d:	imul   ebx,DWORD PTR [ebx],0xfffffff8
  40cb40:	int    0x67
  40cb42:	aaa    
  40cb43:	ins    DWORD PTR es:[edi],dx
  40cb44:	cmp    DWORD PTR [eax-0x20],ecx
  40cb47:	mov    ecx,ebx
  40cb49:	jg     0x40cb28
  40cb4b:	cs pop esi
  40cb4d:	jl     0x40cb12
  40cb4f:	jb     0x40cb84
  40cb51:	jo     0x40cb40
  40cb53:	test   DWORD PTR [edx-0x51],ebp
  40cb56:	mov    bh,0x8f
  40cb58:	loop   0x40cb49
  40cb5a:	cmp    DWORD PTR [ebx+0x54],esp
  40cb5d:	mov    bh,0x47
  40cb5f:	or     al,BYTE PTR [ecx+0x30]
  40cb62:	out    0xcf,eax
  40cb64:	cmp    al,cl
  40cb66:	arpl   WORD PTR [ebp-0x74],cx
  40cb69:	loopne 0x40cb80
  40cb6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb6c:	imul   esi,DWORD PTR [esi-0x64],0x508f6414
  40cb73:	imul   esp,DWORD PTR fs:[ebp-0x30a6b320],0xe706cb76
  40cb7e:	in     eax,0xac
  40cb80:	adc    BYTE PTR [edx],al
  40cb82:	mov    DWORD PTR [ebp-0x5],edi
  40cb85:	sbb    eax,0x6ce44ea3
  40cb8a:	jno    0x40cb38
  40cb8c:	ret    0xe732
  40cb8f:	inc    esi
  40cb90:	and    DWORD PTR [edx+ecx*1-0x4e1f1dcf],esi
  40cb97:	mov    fs,WORD PTR [edi]
  40cb99:	hlt    
  40cb9a:	jb     0x40cb56
  40cb9c:	xlat   BYTE PTR ds:[ebx]
  40cb9d:	enter  0xd293,0xd0
  40cba1:	pop    esp
  40cba2:	add    bl,BYTE PTR [esi+ebp*1+0x13]
  40cba6:	push   0x2e
  40cba8:	popa   
  40cba9:	fild   DWORD PTR [ecx-0xa]
  40cbac:	ret    
  40cbad:	pop    esp
  40cbae:	cwde   
  40cbaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbb0:	push   eax
  40cbb1:	hlt    
  40cbb2:	sub    BYTE PTR [ebx],dh
  40cbb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbb5:	adc    bh,0x99
  40cbb8:	stos   BYTE PTR es:[edi],al
  40cbb9:	dec    esp
  40cbba:	cmp    al,0x52
  40cbbc:	fidivr WORD PTR [ebx+0x5d2d35]
  40cbc2:	mov    eax,0x3946152f
  40cbc7:	pushf  
  40cbc8:	mov    dl,0xd
  40cbca:	jbe    0x40cbee
  40cbcc:	aad    0x2d
  40cbce:	xchg   ecx,eax
  40cbcf:	repnz xor al,0x1f
  40cbd2:	pop    esp
  40cbd3:	inc    esi
  40cbd4:	jge    0x40cb79
  40cbd6:	mul    dh
  40cbd8:	push   esp
  40cbd9:	mov    edi,DWORD PTR [eax-0x2a]
  40cbdc:	mov    ah,0x91
  40cbde:	and    al,0x58
  40cbe0:	(bad)  
  40cbe1:	std    
  40cbe2:	mov    ebp,0xd5c4a92d
  40cbe7:	mov    BYTE PTR [esi-0x23],0x81
  40cbeb:	inc    esp
  40cbec:	(bad)  
  40cbed:	mov    al,0xa
  40cbef:	mov    bl,0x41
  40cbf1:	add    BYTE PTR [edi+eax*1+0x5b574e0],dh
  40cbf8:	adc    DWORD PTR [ebp+0x4bc94461],ebx
  40cbfe:	outs   dx,BYTE PTR ds:[esi]
  40cbff:	aaa    
  40cc00:	test   BYTE PTR [ebp-0x45484a4a],0x8b
  40cc07:	cs dec edx
  40cc09:	cmp    al,0x96
  40cc0b:	inc    eax
  40cc0c:	stc    
  40cc0d:	pop    esp
  40cc0e:	dec    edx
  40cc0f:	jge    0x40cc52
  40cc11:	outs   dx,BYTE PTR ds:[esi]
  40cc12:	mov    ds:0xd815a41a,al
  40cc17:	fcomi  st,st(4)
  40cc19:	mov    ch,0x2f
  40cc1b:	hlt    
  40cc1c:	inc    ebx
  40cc1d:	mov    eax,0x10480cca
  40cc22:	rcr    BYTE PTR [esi+0x678ba427],1
  40cc28:	(bad)  
  40cc29:	stc    
  40cc2a:	call   0xadce0fb5
  40cc2f:	mov    ebp,0x7587190a
  40cc34:	je     0x40cc67
  40cc36:	outs   dx,BYTE PTR ds:[esi]
  40cc37:	dec    ebp
  40cc38:	dec    eax
  40cc39:	clc    
  40cc3a:	jg     0x40cc94
  40cc3c:	push   0x26bdb39a
  40cc41:	in     al,dx
  40cc42:	push   edi
  40cc43:	mov    eax,0x175c5a76
  40cc48:	stc    
  40cc49:	loopne 0x40ccb6
  40cc4b:	div    DWORD PTR [eax+0x15]
  40cc4e:	fistp  DWORD PTR [esi]
  40cc50:	rcr    BYTE PTR [edx-0x64],0xfb
  40cc54:	dec    esi
  40cc55:	stos   BYTE PTR es:[edi],al
  40cc56:	and    edx,DWORD PTR [ecx-0x456befd1]
  40cc5c:	std    
  40cc5d:	mov    cs,WORD PTR [ebx-0x18]
  40cc60:	in     al,dx
  40cc61:	mov    dl,0xe2
  40cc63:	mov    BYTE PTR [ebp-0x75],ch
  40cc66:	inc    esp
  40cc67:	scas   eax,DWORD PTR es:[edi]
  40cc68:	fsub   QWORD PTR [ebp+0x28]
  40cc6b:	add    dl,BYTE PTR [eax+ebx*2]
  40cc6e:	push   esi
  40cc6f:	push   ds
  40cc70:	jle    0x40ccbf
  40cc72:	add    BYTE PTR [ebx+0x1f],0x67
  40cc76:	(bad)  
  40cc77:	scas   al,BYTE PTR es:[edi]
  40cc78:	lods   al,BYTE PTR ds:[esi]
  40cc79:	ficom  WORD PTR [edx]
  40cc7b:	dec    ebp
  40cc7c:	dec    ebx
  40cc7d:	pop    ss
  40cc7e:	sbb    ebp,ebx
  40cc80:	fiadd  WORD PTR [ebx-0x4f]
  40cc83:	outs   dx,BYTE PTR ds:[esi]
  40cc84:	push   eax
  40cc85:	shl    BYTE PTR [ebx+0x76],cl
  40cc88:	pop    DWORD PTR [ecx+edi*1+0x571f489a]
  40cc8f:	inc    ecx
  40cc90:	stc    
  40cc91:	mov    ecx,0xfd6344ee
  40cc96:	dec    edi
  40cc97:	nop
  40cc98:	or     eax,0x6469c29c
  40cc9d:	mov    edi,0x9a8ab069
  40cca2:	push   ss
  40cca3:	jmp    0xee83:0xd7815b64
  40ccaa:	mov    bl,0xe9
  40ccac:	mov    ds:0xfb46fd63,al
  40ccb1:	push   DWORD PTR [ebx-0xf]
  40ccb4:	jns    0x40cc5f
  40ccb6:	and    al,0x51
  40ccb8:	and    al,0x46
  40ccba:	pop    ebp
  40ccbb:	jnp    0x40cce5
  40ccbd:	xor    BYTE PTR [eax-0x20],ah
  40ccc0:	xchg   esp,eax
  40ccc1:	stos   BYTE PTR es:[edi],al
  40ccc2:	mov    bh,0xa6
  40ccc4:	push   0xfffffff5
  40ccc6:	call   0x655b:0xce6051ac
  40cccd:	lods   al,BYTE PTR ds:[esi]
  40ccce:	mov    bh,0x68
  40ccd0:	xchg   BYTE PTR gs:[ebp-0x7382eca5],ah
  40ccd7:	mov    ebx,0x4f12d1fb
  40ccdc:	pop    ebp
  40ccdd:	pop    edi
  40ccde:	xchg   esi,eax
  40ccdf:	lahf   
  40cce0:	push   esp
  40cce1:	lods   al,BYTE PTR ds:[esi]
  40cce2:	and    eax,DWORD PTR [eax-0x7d]
  40cce5:	adc    al,0x69
  40cce7:	test   BYTE PTR [edi+0x3e49dcf0],al
  40cced:	ins    DWORD PTR es:[edi],dx
  40ccee:	int3   
  40ccef:	lods   al,BYTE PTR ds:[esi]
  40ccf0:	fild   DWORD PTR [eax]
  40ccf2:	add    ah,bl
  40ccf4:	add    cl,BYTE PTR [edi+esi*1-0x357ffdd9]
  40ccfb:	inc    ebx
  40ccfc:	dec    ebp
  40ccfd:	inc    edx
  40ccfe:	ja     0x40cce0
  40cd00:	cld    
  40cd01:	cmp    al,0x80
  40cd03:	cmp    eax,0xd2dcd238
  40cd08:	(bad)  
  40cd0a:	mov    ?,WORD PTR [esi+eax*1+0x45]
  40cd0e:	shufps xmm3,xmm6,0xae
  40cd12:	lahf   
  40cd13:	sub    bl,BYTE PTR [esi-0x1f5727d4]
  40cd19:	test   BYTE PTR [ecx+0x1b],dh
  40cd1c:	test   eax,0x91319e56
  40cd21:	xchg   esp,eax
  40cd22:	sahf   
  40cd23:	lahf   
  40cd24:	xchg   DWORD PTR [ebx-0x2ddd03c1],edx
  40cd2a:	or     ebx,DWORD PTR [ebx+ebx*4]
  40cd2d:	sbb    esp,DWORD PTR [ecx+0x4d0a45fa]
  40cd33:	and    esp,esi
  40cd35:	mov    dl,0x5e
  40cd37:	cmp    cl,BYTE PTR [ebx+0x7cd17199]
  40cd3d:	ret    
  40cd3e:	arpl   WORD PTR [ebp+edi*8-0x227e069b],di
  40cd45:	xchg   ebp,eax
  40cd46:	std    
  40cd47:	xor    al,0x75
  40cd49:	icebp  
  40cd4a:	push   esi
  40cd4b:	mov    esp,0x4ad35200
  40cd50:	and    eax,0x3402aec3
  40cd55:	sbb    BYTE PTR [ebp-0x25],bh
  40cd58:	test   edx,eax
  40cd5a:	push   ebx
  40cd5b:	mov    dh,0xd6
  40cd5d:	retf   0x3e38
  40cd60:	mov    esp,0x72eb7e52
  40cd65:	push   esp
  40cd66:	sub    cl,BYTE PTR [esi]
  40cd68:	sbb    eax,0x796eda68
  40cd6d:	pop    ecx
  40cd6e:	sbb    ecx,ecx
  40cd70:	sub    DWORD PTR cs:[edi-0x3bb5fc61],edi
  40cd77:	shl    DWORD PTR [ebp-0x2c],cl
  40cd7a:	dec    esp
  40cd7b:	fisttp DWORD PTR [ebx+0x66]
  40cd7e:	xchg   edx,eax
  40cd7f:	sub    DWORD PTR [esi],ebx
  40cd81:	jns    0x40cdf3
  40cd83:	jns    0x40cda5
  40cd85:	mov    dl,BYTE PTR [esi-0x7f684198]
  40cd8b:	pop    es
  40cd8c:	pop    eax
  40cd8d:	lods   eax,DWORD PTR ds:[esi]
  40cd8e:	mov    DWORD PTR [edi-0x6b],ebx
  40cd91:	outs   dx,DWORD PTR ds:[esi]
  40cd92:	mov    al,ds:0x700db936
  40cd97:	mov    edi,0xffc84278
  40cd9c:	pop    esp
  40cd9d:	sar    DWORD PTR [ebp+0x53],0xc0
  40cda1:	dec    eax
  40cda2:	jmp    0x40cd5f
  40cda4:	jecxz  0x40cdfa
  40cda6:	mov    ds:0xb2e8138f,eax
  40cdab:	mov    eax,ds:0xd9b96371
  40cdb0:	stc    
  40cdb1:	jmp    0x601b:0x7614c32
  40cdb8:	loopne 0x40ce22
  40cdba:	push   esp
  40cdbb:	inc    ebx
  40cdbc:	jle    0x40cda2
  40cdbe:	xor    BYTE PTR [eax-0x27],cl
  40cdc1:	std    
  40cdc2:	or     al,0xc7
  40cdc4:	inc    edi
  40cdc5:	pop    es
  40cdc6:	jp     0x40cdd0
  40cdc8:	or     DWORD PTR [esi-0x2f],ebp
  40cdcb:	fisttp WORD PTR [ebx]
  40cdcd:	in     al,0x86
  40cdcf:	xor    bl,ch
  40cdd1:	push   ebx
  40cdd2:	cmc    
  40cdd3:	xor    ecx,ebp
  40cdd5:	pusha  
  40cdd6:	ds aas 
  40cdd8:	out    0x95,al
  40cdda:	sub    edi,edi
  40cddc:	push   ebp
  40cddd:	mov    fs,WORD PTR [ecx+0xc]
  40cde0:	jecxz  0x40ce4b
  40cde2:	mov    dl,0xc2
  40cde4:	je     0x40cd70
  40cde6:	cmc    
  40cde7:	neg    DWORD PTR [esi]
  40cde9:	pop    edi
  40cdea:	rol    BYTE PTR cs:[edx+0x69ec5e6a],0xcc
  40cdf2:	imul   esp,DWORD PTR [ebx],0x935f6f5b
  40cdf8:	leave  
  40cdf9:	mov    edx,0xa82c4735
  40cdfe:	out    0x75,al
  40ce00:	repz fsubr DWORD PTR [ebp-0x67]
  40ce04:	dec    ebx
  40ce05:	add    bh,ah
  40ce07:	test   BYTE PTR [eax+esi*2+0x28],0xb3
  40ce0c:	jne    0x40cddd
  40ce0e:	ficomp DWORD PTR [esi-0x433065ef]
  40ce14:	jp     0x40ce62
  40ce16:	loop   0x40ce18
  40ce18:	test   al,0x34
  40ce1a:	cmp    ah,BYTE PTR [esi+0x51f20823]
  40ce20:	fild   DWORD PTR [eax]
  40ce22:	jns    0x40cde1
  40ce24:	shl    esi,0x13
  40ce27:	les    edx,FWORD PTR cs:[edi-0x409c5d0]
  40ce2e:	add    ch,cl
  40ce30:	pop    edx
  40ce31:	int    0xfd
  40ce33:	dec    esp
  40ce34:	int    0xc8
  40ce36:	pop    ebp
  40ce37:	mov    edx,0x2b1e017b
  40ce3c:	out    dx,eax
  40ce3d:	sub    esp,DWORD PTR [edx+0x20f7ccbe]
  40ce43:	dec    esp
  40ce44:	sub    bl,BYTE PTR [edi-0x108f6745]
  40ce4a:	neg    BYTE PTR [edi]
  40ce4c:	call   0x24f153ec
  40ce51:	push   cs
  40ce52:	pop    ebx
  40ce53:	mov    es,ebp
  40ce55:	cmp    DWORD PTR [esi+0x64268b2],eax
  40ce5b:	ret    
  40ce5c:	xchg   esi,eax
  40ce5d:	pop    edx
  40ce5e:	call   0x5105dc6f
  40ce63:	sbb    ebp,ebx
  40ce65:	push   ds
  40ce66:	jbe    0x40cdf0
  40ce68:	xor    esi,DWORD PTR [ebp+0x62f23213]
  40ce6e:	add    ecx,DWORD PTR [esi-0x78]
  40ce71:	gs dec ebx
  40ce73:	ja     0x40cede
  40ce75:	jecxz  0x40cea7
  40ce77:	xor    BYTE PTR ss:[ebx+0x1f],0xb
  40ce7c:	out    0x33,eax
  40ce7e:	stos   DWORD PTR es:[edi],eax
  40ce7f:	imul   eax,DWORD PTR [edx+ecx*4+0xdb68385],0x7c027b3f
  40ce8a:	jbe    0x40ce7e
  40ce8c:	ffreep st(3)
  40ce8e:	(bad)  [ebx]
  40ce90:	xchg   esp,eax
  40ce91:	or     eax,0x9ff4ad35
  40ce96:	das    
  40ce97:	fild   QWORD PTR [edx-0x75]
  40ce9a:	inc    ebp
  40ce9b:	cld    
  40ce9c:	mov    DWORD PTR ds:0x428eab,0x1e
  40cea6:	cmp    DWORD PTR ds:0x428eab,0x0
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x428eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x42a9d3
  40cece:	mov    ebx,DWORD PTR ds:0x428eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x428eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x428e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x428e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x428e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x428e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x428e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x428e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x428189
  40cf36:	call   DWORD PTR ds:0x42a9db
  40cf3c:	cmp    DWORD PTR ds:0x428e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x428e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x428e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x428e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x428ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x428e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x428eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x428e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x428ebb
  40cfa5:	and    DWORD PTR ds:0x428e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x428e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x428e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x428eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x428e37,0x428e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x428e83,0x428eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x428ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x428e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x428e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x428e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x428e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x42a9df
  40d02c:	cmp    DWORD PTR ds:0x428e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x428e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x428e97,ecx
  40d048:	cmp    DWORD PTR ds:0x428e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x428e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x428e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x428e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x428e93
  40d099:	and    DWORD PTR ds:0x428e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x428e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x428e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x428e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x428e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x428e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x428e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x428e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4280f7
  40d0fe:	call   DWORD PTR ds:0x42a9e3
  40d104:	cmp    DWORD PTR ds:0x428e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x428e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x428e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x428e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x428e7b
  40d149:	sbb    eax,DWORD PTR ds:0x428e67
  40d14f:	mov    ds:0x428e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x428e3b,0x0
  40d171:	mov    eax,ds:0x428e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x428e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x428e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x42a9e7
  40d197:	cmp    DWORD PTR ds:0x428e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x428e3b
  40d1ac:	and    DWORD PTR ds:0x428e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x428e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x428e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax-0xc8beead]
  40d217:	hlt    
  40d218:	mov    BYTE PTR [ebp-0x2e],dl
  40d21b:	add    DWORD PTR [ebx-0x7c7c9f0f],0x3b
  40d222:	mov    dl,0xad
  40d224:	dec    esi
  40d225:	pop    ecx
  40d226:	pushf  
  40d227:	xchg   edx,eax
  40d228:	mov    DWORD PTR [edi],esp
  40d22a:	icebp  
  40d22b:	inc    esi
  40d22c:	mov    ch,0x77
  40d22e:	cwde   
  40d22f:	rcl    BYTE PTR [ebp-0x1],0x66
  40d233:	aas    
  40d234:	adc    eax,0x8564bcda
  40d239:	lods   eax,DWORD PTR ds:[esi]
  40d23a:	cli    
  40d23b:	pushf  
  40d23c:	add    BYTE PTR [ebp+0x26110424],dh
  40d242:	add    esi,ebp
  40d244:	shr    BYTE PTR [eax-0xd08f100],0xca
  40d24b:	mov    ah,0x69
  40d24d:	in     al,dx
  40d24e:	scas   eax,DWORD PTR es:[edi]
  40d24f:	push   eax
  40d250:	mov    bl,0x7f
  40d252:	divps  xmm1,XMMWORD PTR [ebx+0x619edac0]
  40d259:	aas    
  40d25a:	repz or ebx,edi
  40d25d:	cmc    
  40d25e:	mov    dh,0x7
  40d260:	imul   ecx,edx,0xa599074e
  40d266:	cmp    DWORD PTR [esi],0x8cdabfc7
  40d26c:	test   dl,dh
  40d26e:	outs   dx,DWORD PTR ds:[esi]
  40d26f:	jecxz  0x40d2ec
  40d271:	in     eax,0x86
  40d273:	sub    BYTE PTR [eax-0x1d2987fc],dl
  40d279:	scas   al,BYTE PTR es:[edi]
  40d27a:	sub    bh,bh
  40d27c:	cmp    ecx,ecx
  40d27e:	pusha  
  40d27f:	mov    WORD PTR [esi+edi*2+0x3956bf08],ss
  40d286:	in     eax,dx
  40d287:	stos   BYTE PTR es:[edi],al
  40d288:	lahf   
  40d289:	in     al,0x26
  40d28b:	jmp    0xf78d44e8
  40d290:	loop   0x40d255
  40d292:	or     dh,dh
  40d294:	or     BYTE PTR [ecx-0x2b],al
  40d297:	adc    cl,BYTE PTR [esi-0x2f]
  40d29a:	call   0xb16f18f1
  40d29f:	sub    BYTE PTR [edi+0x7c],0x99
  40d2a3:	lods   eax,DWORD PTR ds:[esi]
  40d2a4:	and    BYTE PTR [esi+ebp*1+0x7b],ch
  40d2a8:	pop    ss
  40d2a9:	push   cs
  40d2aa:	mov    ch,BYTE PTR [eax]
  40d2ac:	ret    
  40d2ad:	fcomp  DWORD PTR [ebx]
  40d2af:	xchg   esi,eax
  40d2b0:	ret    
  40d2b1:	push   edx
  40d2b2:	lahf   
  40d2b3:	and    cl,BYTE PTR [ecx-0x30]
  40d2b6:	in     al,dx
  40d2b7:	push   es
  40d2b8:	out    dx,al
  40d2b9:	jo     0x40d2fa
  40d2bb:	mov    BYTE PTR [esi],dl
  40d2bd:	call   0xd78c:0x9f4fcfda
  40d2c4:	stos   BYTE PTR es:[edi],al
  40d2c5:	sbb    DWORD PTR [edx-0x76],0xffffffac
  40d2c9:	dec    ebp
  40d2ca:	or     al,0x5a
  40d2cc:	fdiv   st(7),st
  40d2ce:	pop    esp
  40d2cf:	fnsave [edi-0x33]
  40d2d2:	pop    ss
  40d2d3:	xchg   dh,bl
  40d2d5:	mov    ds:0x4c539f69,al
  40d2da:	mov    ch,0xb6
  40d2dc:	mov    al,ds:0x4d1ec5e0
  40d2e1:	rcl    esp,1
  40d2e3:	cmp    cl,dl
  40d2e5:	sbb    BYTE PTR [ecx-0x7b9ea77c],dh
  40d2eb:	mov    ds,WORD PTR [edx]
  40d2ed:	xor    al,0x9a
  40d2ef:	sub    DWORD PTR [ecx+ebx*2+0x76],esp
  40d2f3:	sub    DWORD PTR [ebx-0x15],edx
  40d2f6:	ins    DWORD PTR es:[edi],dx
  40d2f7:	pop    edi
  40d2f8:	out    dx,al
  40d2f9:	mov    ch,0x12
  40d2fb:	jbe    0x40d2fb
  40d2fd:	lods   eax,DWORD PTR ds:[esi]
  40d2fe:	adc    dl,dl
  40d300:	xchg   esp,eax
  40d301:	stc    
  40d302:	mov    WORD PTR [ebx],?
  40d304:	repz and DWORD PTR [eax-0x22b39eaa],0xa7a030d7
  40d30f:	or     eax,0xef5b0176
  40d314:	lds    eax,FWORD PTR [ebx-0x18]
  40d317:	dec    ebp
  40d318:	push   0xf75d4d3f
  40d31d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d31e:	push   ds
  40d31f:	(bad)  
  40d321:	mov    al,0xb8
  40d323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d324:	push   ebp
  40d325:	add    edi,esp
  40d327:	lods   al,BYTE PTR ds:[esi]
  40d328:	inc    edi
  40d329:	push   es
  40d32a:	das    
  40d32b:	sahf   
  40d32c:	adc    eax,0x4d13a30c
  40d331:	scas   eax,DWORD PTR es:[edi]
  40d332:	(bad)  
  40d333:	js     0x40d342
  40d335:	xor    al,0xc3
  40d337:	aaa    
  40d338:	(bad)  
  40d33a:	fstp   QWORD PTR [edx-0x7c]
  40d33d:	sub    ebp,esi
  40d33f:	pop    edi
  40d340:	or     DWORD PTR [esi+0x6fa63b8],0x522a15ac
  40d34a:	ficomp WORD PTR [edi+0x46]
  40d34d:	in     eax,0x2e
  40d34f:	xor    BYTE PTR [edx-0x1b14153b],dh
  40d355:	sbb    BYTE PTR [eax],bh
  40d357:	push   0xffffff86
  40d359:	push   ebp
  40d35a:	mov    ch,0x21
  40d35c:	shl    BYTE PTR [esi],0xf
  40d35f:	imul   edi,edi,0x5af01fc0
  40d365:	pop    eax
  40d366:	xlat   BYTE PTR ds:[ebx]
  40d367:	daa    
  40d368:	push   ds
  40d369:	dec    esp
  40d36a:	inc    eax
  40d36b:	cwde   
  40d36c:	add    DWORD PTR [ebp+0xf],ecx
  40d36f:	mov    al,BYTE PTR [ecx]
  40d371:	sub    DWORD PTR [edx-0x37],esi
  40d374:	push   ds
  40d375:	out    0xdb,al
  40d377:	mov    al,0xf3
  40d379:	outs   dx,BYTE PTR ds:[esi]
  40d37a:	aas    
  40d37b:	icebp  
  40d37c:	dec    ebx
  40d37d:	mov    esi,0x7cfc1cda
  40d382:	mov    al,0x26
  40d384:	pop    edx
  40d385:	mov    ebx,ecx
  40d387:	imul   esp,DWORD PTR [edx-0x4fe6666b],0x5dad2fd7
  40d391:	and    eax,0x546674b7
  40d396:	ds inc esp
  40d398:	mov    esp,0xfbcea6ee
  40d39d:	std    
  40d39e:	hlt    
  40d39f:	push   es
  40d3a0:	sbb    edi,DWORD PTR [edx+ecx*8]
  40d3a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3a4:	outs   dx,BYTE PTR ds:[esi]
  40d3a5:	inc    ecx
  40d3a6:	sbb    BYTE PTR [edx+ebp*2+0x6fc5dcd1],bl
  40d3ad:	pop    ebp
  40d3ae:	daa    
  40d3af:	lods   al,BYTE PTR ds:[esi]
  40d3b0:	cmp    ch,dh
  40d3b2:	mov    ecx,0x7c0d6f08
  40d3b7:	pop    ebx
  40d3b8:	adc    al,0x9f
  40d3ba:	mov    edi,0xb806825b
  40d3bf:	rcr    DWORD PTR [edx],cl
  40d3c1:	jle    0x40d3dd
  40d3c3:	scas   al,BYTE PTR es:[edi]
  40d3c4:	stos   BYTE PTR es:[edi],al
  40d3c5:	add    ch,BYTE PTR [eax]
  40d3c7:	sub    bl,BYTE PTR [esi+esi*2-0x1ffd2546]
  40d3ce:	xor    bh,BYTE PTR [edi]
  40d3d0:	push   ebx
  40d3d1:	jne    0x40d43e
  40d3d3:	jbe    0x40d3bf
  40d3d5:	inc    eax
  40d3d6:	pop    ds
  40d3d7:	fwait
  40d3d8:	mov    bl,0xa2
  40d3da:	pop    ds
  40d3db:	pop    edx
  40d3dc:	ss cwde 
  40d3de:	jp     0x40d3ce
  40d3e0:	dec    edx
  40d3e1:	mov    al,0x11
  40d3e3:	jl     0x40d3ef
  40d3e5:	mov    ah,0xe8
  40d3e7:	scas   al,BYTE PTR es:[edi]
  40d3e8:	das    
  40d3e9:	stc    
  40d3ea:	inc    ecx
  40d3eb:	out    0xa2,al
  40d3ed:	fcmovnbe st,st(6)
  40d3ef:	rcl    DWORD PTR fs:[edi],cl
  40d3f2:	adc    bl,0x7e
  40d3f5:	add    edi,DWORD PTR [edi-0x73]
  40d3f8:	inc    ebp
  40d3f9:	pop    edx
  40d3fa:	je     0x40d454
  40d3fc:	adc    DWORD PTR [eax-0x28],esi
  40d3ff:	cmp    al,0x5b
  40d401:	adc    BYTE PTR [ebx],ch
  40d403:	in     eax,0x98
  40d405:	lds    ebp,FWORD PTR [eax+0x5e425198]
  40d40b:	jno    0x40d44b
  40d40d:	sub    ebp,DWORD PTR [edi+0x5e]
  40d410:	cld    
  40d411:	cmp    edx,DWORD PTR [eax]
  40d413:	call   0xee3f:0x3b1e4a49
  40d41a:	repz retf 
  40d41c:	cli    
  40d41d:	arpl   WORD PTR [edx-0x1b5807e2],sp
  40d423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d424:	icebp  
  40d425:	rcl    edi,1
  40d427:	dec    ebx
  40d428:	xor    eax,0xb469d8f6
  40d42d:	fwait
  40d42e:	aad    0xc7
  40d430:	mov    dl,0xb7
  40d432:	fisttp QWORD PTR [ecx]
  40d434:	sbb    DWORD PTR [eax+0x8f2d375],eax
  40d43a:	scas   al,BYTE PTR es:[edi]
  40d43b:	cmp    ebp,DWORD PTR [edx+eiz*1+0x13]
  40d43f:	fwait
  40d440:	mov    ds:0xb0be5390,eax
  40d445:	ret    
  40d446:	sahf   
  40d447:	sbb    eax,0x934ba8e4
  40d44c:	adc    BYTE PTR [edx+ebp*1],ch
  40d44f:	dec    edx
  40d450:	mov    bl,0x86
  40d452:	dec    ebx
  40d453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d454:	sub    cl,dl
  40d456:	dec    ebx
  40d457:	sar    ah,1
  40d459:	sbb    DWORD PTR [esi],esp
  40d45b:	jmp    0x87ee00c
  40d460:	xor    DWORD PTR [ecx-0x4c],esp
  40d463:	in     al,0x1f
  40d465:	lods   eax,DWORD PTR ds:[esi]
  40d466:	sub    ah,cl
  40d468:	popf   
  40d469:	lds    esp,FWORD PTR [ecx+0x63]
  40d46c:	nop
  40d46d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d46e:	div    dl
  40d470:	add    edx,ebx
  40d472:	imul   ebp,DWORD PTR [edx],0xffffff91
  40d475:	xchg   ebx,eax
  40d476:	fist   WORD PTR [esi+0x28c6a0ef]
  40d47c:	inc    ecx
  40d47d:	pop    edx
  40d47e:	jmp    0x224d:0x5f309d3f
  40d485:	cmp    ebp,DWORD PTR [esi-0x58009cd1]
  40d48b:	in     al,0x2
  40d48d:	not    BYTE PTR [edx]
  40d48f:	cmp    al,0xf8
  40d491:	imul   eax,ebx,0xd66fb550
  40d497:	cdq    
  40d498:	mov    bh,0x36
  40d49a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d49b:	scas   al,BYTE PTR es:[edi]
  40d49c:	fs xor bl,0xa1
  40d4a0:	cmp    DWORD PTR [edi+eax*4],ebp
  40d4a3:	imul   edx,DWORD PTR [ebx+0x1a1373f7],0xffffffe3
  40d4aa:	xchg   ecx,eax
  40d4ab:	fwait
  40d4ac:	daa    
  40d4ad:	jecxz  0x40d455
  40d4af:	retf   
  40d4b0:	sahf   
  40d4b1:	sub    BYTE PTR [ebx-0x25a80386],dl
  40d4b7:	dec    esp
  40d4b8:	and    BYTE PTR [esi-0x145137c8],dh
  40d4be:	inc    edi
  40d4bf:	pop    ss
  40d4c0:	imul   esp,DWORD PTR [esi+ebx*1+0x2268b057],0x9880e2fa
  40d4cb:	xor    eax,0x113d71d0
  40d4d0:	arpl   ax,di
  40d4d2:	push   ds
  40d4d3:	rcl    DWORD PTR [ebp+0x251042a2],1
  40d4d9:	xor    esi,edi
  40d4db:	popa   
  40d4dc:	lods   eax,DWORD PTR ds:[esi]
  40d4dd:	cmp    cl,BYTE PTR [ecx-0x7]
  40d4e0:	inc    ecx
  40d4e1:	mov    ch,0x9d
  40d4e3:	pop    ds
  40d4e4:	(bad)  
  40d4e5:	push   cs
  40d4e6:	lods   al,BYTE PTR ds:[esi]
  40d4e7:	pushf  
  40d4e8:	pop    ss
  40d4e9:	add    bl,0x4
  40d4ec:	(bad)  
  40d4ed:	adc    bh,BYTE PTR [ebp+0x39]
  40d4f0:	sbb    ebp,DWORD PTR [ebx+0x7d0fadaf]
  40d4f6:	dec    edi
  40d4f7:	push   esp
  40d4f8:	pop    ecx
  40d4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4fa:	leave  
  40d4fb:	and    bh,al
  40d4fd:	jl     0x40d4ae
  40d4ff:	mov    WORD PTR [eax-0x7b],ss
  40d502:	cld    
  40d503:	lods   eax,DWORD PTR ds:[esi]
  40d504:	(bad)  
  40d505:	aad    0x8d
  40d507:	aad    0x4
  40d509:	stc    
  40d50a:	push   es
  40d50b:	adc    eax,0xbfff6c6e
  40d510:	add    al,0xa6
  40d512:	jb     0x40d509
  40d514:	cli    
  40d515:	cmp    eax,0x83cd4cab
  40d51a:	jecxz  0x40d567
  40d51c:	mov    esp,0x6453154b
  40d521:	les    ecx,FWORD PTR [ebp-0x9]
  40d524:	aaa    
  40d525:	pop    es
  40d526:	mov    WORD PTR [eax+0x6f4d3405],fs
  40d52c:	daa    
  40d52d:	add    al,0xe4
  40d52f:	loopne 0x40d4ec
  40d531:	adc    al,BYTE PTR [esi-0x73]
  40d534:	cmp    BYTE PTR [ebx+0x77],al
  40d537:	mov    edi,0xa8ff7a05
  40d53c:	cmp    BYTE PTR [eax-0x19],dl
  40d53f:	mov    ss,WORD PTR [eax-0x10]
  40d542:	mov    esi,0x1133f62f
  40d547:	pop    esp
  40d548:	cli    
  40d549:	sub    DWORD PTR [edi-0x29065690],0xffffff8c
  40d550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d551:	or     bl,cl
  40d553:	mov    edi,edx
  40d555:	pop    ds
  40d556:	shr    BYTE PTR [esi],0xaa
  40d559:	pop    ss
  40d55a:	(bad)  [edx+0x16dd90d7]
  40d560:	es inc ecx
  40d562:	cmp    al,0x81
  40d564:	shl    BYTE PTR ds:0x5cc26566,1
  40d56a:	test   BYTE PTR [eax+ebp*1-0x44e27567],bh
  40d571:	inc    eax
  40d572:	sub    ebx,DWORD PTR cs:[eax-0x4b]
  40d576:	in     eax,dx
  40d577:	mov    ecx,0x9d10eac
  40d57c:	mov    edi,0x1e7dbbb6
  40d581:	jl     0x40d550
  40d583:	sbb    edx,DWORD PTR [edi+0x45c23c69]
  40d589:	xchg   edi,eax
  40d58a:	shr    BYTE PTR [edx],1
  40d58c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d58d:	loope  0x40d57c
  40d58f:	ja     0x40d569
  40d591:	push   ds
  40d592:	repnz xlat BYTE PTR ds:[ebx]
  40d594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d595:	pop    edx
  40d596:	cld    
  40d597:	jnp    0x40d5c5
  40d599:	imul   edi,DWORD PTR [ebx],0xffffffb4
  40d59c:	mov    BYTE PTR es:[edi+0x3575d9c3],dh
  40d5a3:	pop    esp
  40d5a4:	imul   edx,DWORD PTR [esi],0x7a
  40d5a7:	loope  0x40d52a
  40d5a9:	lods   eax,DWORD PTR ds:[esi]
  40d5aa:	adc    eax,0x9010d222
  40d5af:	xchg   ebp,eax
  40d5b0:	mov    ebp,DWORD PTR [esp+ebx*4]
  40d5b3:	dec    esi
  40d5b4:	jb     0x40d5f3
  40d5b6:	sub    eax,0x6
  40d5b9:	mov    ss,WORD PTR [ecx+0x2333761a]
  40d5bf:	add    al,0xfc
  40d5c1:	test   BYTE PTR [ecx+0x61],cl
  40d5c4:	xlat   BYTE PTR ds:[ebx]
  40d5c5:	jge    0x40d55f
  40d5c7:	(bad)  
  40d5c8:	lock hlt 
  40d5ca:	pop    ecx
  40d5cb:	adc    BYTE PTR [eax-0x2b],bh
  40d5ce:	jle    0x40d5b9
  40d5d0:	loop   0x40d5de
  40d5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5d3:	(bad)  
  40d5d4:	sub    ecx,ebp
  40d5d6:	cmp    BYTE PTR [eax],ch
  40d5d8:	inc    esp
  40d5d9:	mov    bh,0xba
  40d5db:	sub    al,0x58
  40d5dd:	rol    DWORD PTR [eax+0x162d7edf],cl
  40d5e3:	dec    ebp
  40d5e4:	sub    ah,BYTE PTR [eax]
  40d5e6:	jne    0x40d57f
  40d5e8:	mov    dl,0x27
  40d5ea:	xlat   BYTE PTR ds:[ebx]
  40d5eb:	jae    0x40d570
  40d5ed:	enter  0x9f28,0x3
  40d5f1:	arpl   WORD PTR [ebx-0x30],ax
  40d5f4:	add    eax,ebx
  40d5f6:	xchg   esp,eax
  40d5f7:	xor    BYTE PTR [ebx],bh
  40d5f9:	pop    ecx
  40d5fa:	in     eax,dx
  40d5fb:	fstp   TBYTE PTR es:[ecx+edi*8-0x2d88fa8b]
  40d603:	adc    al,0xf8
  40d605:	fcmovnbe st,st(4)
  40d607:	cmp    edi,DWORD PTR [ecx+ebx*1+0x15d9ebe0]
  40d60e:	add    BYTE PTR [ebx+esi*1+0x720c0b1a],al
  40d615:	cs mov ebx,0xa07a434
  40d61b:	xor    al,0x93
  40d61d:	stos   DWORD PTR es:[edi],eax
  40d61e:	jae    0x40d5e4
  40d620:	pop    ss
  40d621:	leave  
  40d622:	push   eax
  40d623:	inc    ebx
  40d624:	retf   0x59a0
  40d627:	mov    eax,ds:0x61f4fd8c
  40d62c:	or     ebx,DWORD PTR [ebp-0x16]
  40d62f:	jmp    0x3050:0xe7877079
  40d636:	stos   DWORD PTR es:[edi],eax
  40d637:	mov    al,ds:0x1ccf5504
  40d63c:	lds    esi,FWORD PTR [ebp+eax*4-0x71a414b2]
  40d643:	mov    eax,DWORD PTR [ebx]
  40d645:	les    ebx,FWORD PTR [esi-0x23fd36c6]
  40d64b:	cmp    BYTE PTR [esi-0x632dde5e],0xf8
  40d652:	sub    esp,DWORD PTR [ebx+0x1d5f6a88]
  40d658:	repz rcr DWORD PTR [ebx-0x76496d6d],0x45
  40d660:	push   ss
  40d661:	push   edx
  40d662:	xchg   di,ax
  40d664:	gs retf 0xfc48
  40d668:	and    eax,0x18956990
  40d66d:	jge    0x40d672
  40d66f:	pop    esp
  40d670:	inc    edi
  40d671:	loop   0x40d6c2
  40d673:	sub    ebp,DWORD PTR [ebx+0x3]
  40d676:	(bad)  
  40d678:	or     dl,BYTE PTR [ebp+0xf04afc8]
  40d67e:	test   DWORD PTR [edi+0x1ca563f8],0xcd719207
  40d688:	inc    esp
  40d689:	cwde   
  40d68a:	sbb    BYTE PTR [esi+0x4d],0xb8
  40d68e:	js     0x40d6b8
  40d690:	and    DWORD PTR [ebx+0x2fa676f9],ebx
  40d696:	dec    dl
  40d698:	jo     0x40d6f7
  40d69a:	xor    ebp,DWORD PTR [eax-0x2b]
  40d69d:	mov    ds:0x7b2a319b,eax
  40d6a2:	sub    eax,0xddf72b2d
  40d6a7:	out    dx,eax
  40d6a8:	jo     0x40d725
  40d6aa:	inc    cl
  40d6ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6ad:	jmp    0xac68:0xa2345a16
  40d6b4:	scas   eax,DWORD PTR es:[edi]
  40d6b5:	inc    esi
  40d6b6:	mov    ds:0xdfc90b38,al
  40d6bb:	cmp    al,0xb1
  40d6bd:	inc    ebp
  40d6be:	jg     0x40d6fc
  40d6c0:	mov    ebx,0x707a7622
  40d6c5:	sub    BYTE PTR [ebp+0x6e49f8b1],ah
  40d6cb:	(bad)  
  40d6cc:	and    BYTE PTR ss:[edi],0xeb
  40d6d0:	cwde   
  40d6d1:	dec    edi
  40d6d2:	or     dl,ah
  40d6d4:	inc    ebp
  40d6d5:	clc    
  40d6d6:	xor    eax,0x7cfb4274
  40d6db:	jle    0x40d718
  40d6dd:	(bad)  
  40d6df:	sbb    DWORD PTR [ebx],0xdba3b296
  40d6e5:	xchg   edi,eax
  40d6e6:	sub    al,0x1f
  40d6e8:	scas   al,BYTE PTR es:[edi]
  40d6e9:	push   edx
  40d6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6eb:	and    al,0x84
  40d6ed:	pop    edx
  40d6ee:	mov    dl,0xe2
  40d6f0:	jp     0x40d69e
  40d6f2:	mov    al,ds:0xf952e3f
  40d6f7:	out    dx,eax
  40d6f8:	fst    QWORD PTR [edx+0x11]
  40d6fb:	sbb    al,0x27
  40d6fd:	fild   QWORD PTR [edx-0x64536b61]
  40d703:	and    dh,BYTE PTR [esi+0x3e]
  40d706:	push   edi
  40d707:	cld    
  40d708:	out    dx,al
  40d709:	and    eax,0x78d07e1f
  40d70e:	add    BYTE PTR [esi-0x6d],0xba
  40d712:	lock lock mul DWORD PTR [ebp+0x54]
  40d717:	push   ds
  40d718:	push   0x75d4ee15
  40d71d:	js     0x40d79b
  40d71f:	push   cs
  40d720:	ins    DWORD PTR es:[edi],dx
  40d721:	call   0x5f93243a
  40d726:	pop    esp
  40d727:	mov    esp,0x6b4f22c2
  40d72c:	mov    esp,0x25019976
  40d731:	ror    BYTE PTR [ecx+eiz*1-0x17826897],0xf6
  40d739:	nop
  40d73a:	aaa    
  40d73b:	or     DWORD PTR [ebp-0x4fc75c8c],ebx
  40d741:	scas   al,BYTE PTR es:[edi]
  40d742:	fidivr WORD PTR [ebp-0x17]
  40d745:	fwait
  40d746:	or     edx,DWORD PTR [esi-0x6c581d96]
  40d74c:	cmp    al,BYTE PTR [ebx+ebx*2]
  40d74f:	mov    dh,0x48
  40d751:	mov    bl,0x67
  40d753:	sub    BYTE PTR [esi+0x69],0xd1
  40d757:	cwde   
  40d758:	pop    ss
  40d759:	icebp  
  40d75a:	mov    esi,0xd1d67dbe
  40d75f:	repz pop esp
  40d761:	xchg   edx,eax
  40d762:	pop    es
  40d763:	clc    
  40d764:	and    al,0xed
  40d766:	push   ebp
  40d767:	(bad)  
  40d768:	fidiv  DWORD PTR [edi]
  40d76a:	sub    esi,ebx
  40d76c:	cmp    BYTE PTR [ebx],cl
  40d76e:	ins    DWORD PTR es:[edi],dx
  40d76f:	and    al,0x85
  40d771:	les    esi,FWORD PTR [ecx+0x7873fa54]
  40d777:	or     BYTE PTR [eax+0x2a30293f],dl
  40d77d:	sbb    al,0xb7
  40d77f:	ret    0xb5c3
  40d782:	mov    cl,0x60
  40d784:	mov    al,0x7d
  40d786:	push   ds
  40d787:	push   esi
  40d788:	ret    0x9e87
  40d78b:	hlt    
  40d78c:	enter  0x6dac,0x9b
  40d790:	imul   esp,DWORD PTR [edi],0x2d
  40d793:	mov    ch,0x4
  40d795:	fcmovnbe st,st(1)
  40d797:	push   cs
  40d798:	loope  0x40d71e
  40d79a:	jecxz  0x40d759
  40d79c:	mov    dh,0xd5
  40d79e:	aad    0x3d
  40d7a0:	add    ebp,eax
  40d7a2:	push   cs
  40d7a3:	int3   
  40d7a4:	bound  ebx,QWORD PTR [ebx+0x63]
  40d7a7:	lods   eax,DWORD PTR ds:[esi]
  40d7a8:	dec    ebx
  40d7a9:	sti    
  40d7aa:	push   cs
  40d7ab:	scas   al,BYTE PTR es:[edi]
  40d7ac:	loope  0x40d74c
  40d7ae:	retf   
  40d7af:	sbb    ebp,DWORD PTR ss:[ebx]
  40d7b2:	inc    ecx
  40d7b3:	or     BYTE PTR [esi],0x56
  40d7b6:	xchg   cl,ch
  40d7b8:	xlat   BYTE PTR ds:[ebx]
  40d7b9:	ss pop ebx
  40d7bb:	stos   DWORD PTR es:[edi],eax
  40d7bc:	mov    fs,edi
  40d7be:	inc    ebp
  40d7bf:	mov    dh,0xc6
  40d7c1:	mov    ebp,0xdd8a971
  40d7c6:	sbb    cl,BYTE PTR [esi-0x4f]
  40d7c9:	xchg   cl,bh
  40d7cb:	out    dx,al
  40d7cc:	mov    ecx,ecx
  40d7ce:	mov    ecx,ebp
  40d7d0:	mov    eax,ds:0x512498af
  40d7d5:	int3   
  40d7d6:	dec    ebp
  40d7d7:	mov    ds:0x4b00c048,al
  40d7dc:	addr16 jle 0x40d83b
  40d7df:	or     DWORD PTR [edi],eax
  40d7e1:	leave  
  40d7e2:	imul   BYTE PTR [edx+0x14362403]
  40d7e8:	mov    DWORD PTR [esi+0x39a61ea4],esp
  40d7ee:	mov    ebx,edx
  40d7f0:	imul   eax,DWORD PTR [edx+0x0],0x873a0157
  40d7f7:	test   ah,dh
  40d7f9:	sbb    esi,DWORD PTR [edi-0x45]
  40d7fc:	dec    esp
  40d7fd:	cmp    DWORD PTR [eax],eax
  40d7ff:	pop    ebp
  40d800:	or     edx,DWORD PTR [edi+0x13]
  40d803:	push   ecx
  40d804:	aas    
  40d805:	test   eax,0x78cf2df5
  40d80a:	sub    eax,0x96003481
  40d80f:	je     0x40d863
  40d811:	jg     0x40d7bd
  40d813:	adc    eax,DWORD PTR [ecx+eiz*2]
  40d816:	adc    ch,BYTE PTR [si]
  40d819:	and    dl,dl
  40d81b:	push   ecx
  40d81c:	xor    al,0x35
  40d81e:	mov    dl,0x88
  40d820:	dec    ecx
  40d821:	mov    eax,ds:0x2e4757d0
  40d826:	dec    BYTE PTR [edx-0x5d46725d]
  40d82c:	leave  
  40d82d:	dec    esp
  40d82e:	in     al,0xed
  40d830:	(bad)  
  40d831:	les    ebp,FWORD PTR [edi+0x33]
  40d834:	(bad)  [ecx+0x30]
  40d837:	(bad)  
  40d839:	xor    eax,0xa8bfd237
  40d83e:	fs or  eax,0x763b14b3
  40d844:	je     0x40d7e3
  40d846:	jns    0x40d803
  40d848:	xchg   ebp,eax
  40d849:	push   edi
  40d84a:	jmp    0xfb7c:0xc948a0f9
  40d851:	mov    esp,0x4cf38d52
  40d856:	cmp    DWORD PTR [ebp+0x77],0x61
  40d85a:	loop   0x40d7f4
  40d85c:	cmc    
  40d85d:	test   BYTE PTR [edi],ch
  40d85f:	ud0    ebx,DWORD PTR [edi+0x7faabdec]
  40d866:	fs pop ds
  40d868:	cld    
  40d869:	sub    bl,al
  40d86b:	jnp    0x40d8ae
  40d86d:	xchg   edi,eax
  40d86e:	neg    ecx
  40d870:	xchg   ecx,eax
  40d871:	mov    ds:0x7f38123,al
  40d876:	mov    ch,0x8b
  40d878:	jbe    0x40d877
  40d87a:	dec    ebx
  40d87b:	mov    dh,0xd7
  40d87d:	cmc    
  40d87e:	mov    eax,0x9f595816
  40d883:	imul   ebp,DWORD PTR [eax+0x6d],0x7ee4f479
  40d88a:	xor    bl,BYTE PTR [ebx-0xa]
  40d88d:	mov    al,0x42
  40d88f:	mov    esp,0xdf89dcfa
  40d894:	popf   
  40d895:	add    BYTE PTR [edx+0x50],al
  40d898:	xor    DWORD PTR [ebp+0xab4ddae],ebp
  40d89e:	(bad)  
  40d89f:	push   ebx
  40d8a0:	pop    ecx
  40d8a1:	sar    DWORD PTR [eax],1
  40d8a3:	ret    0x1c2a
  40d8a6:	gs push ss
  40d8a8:	add    eax,0x47189770
  40d8ad:	xchg   ebp,eax
  40d8ae:	fstp   TBYTE PTR [eax]
  40d8b0:	gs jno 0x40d8b8
  40d8b3:	xor    DWORD PTR [esi],eax
  40d8b5:	ins    BYTE PTR es:[edi],dx
  40d8b6:	cmp    eax,0xea64e35e
  40d8bb:	push   ds
  40d8bc:	leave  
  40d8bd:	int    0xa6
  40d8bf:	jno    0x40d8ad
  40d8c1:	mov    esi,0x4c8912f2
  40d8c6:	in     eax,dx
  40d8c7:	(bad)  
  40d8c8:	dec    edi
  40d8c9:	fsub   QWORD PTR [eax]
  40d8cb:	adc    eax,0xd222ca47
  40d8d0:	jmp    0x41b2ac81
  40d8d5:	sbb    ch,BYTE PTR [ecx-0x60]
  40d8d8:	icebp  
  40d8d9:	adc    ch,al
  40d8db:	clc    
  40d8dc:	lds    ecx,FWORD PTR [edi]
  40d8de:	ja     0x40d8f8
  40d8e0:	ret    
  40d8e1:	sbb    BYTE PTR [esi+eiz*1-0x7e0c78b4],bh
  40d8e8:	adc    edi,DWORD PTR [edx]
  40d8ea:	jae    0x40d88b
  40d8ec:	sub    BYTE PTR [edi],dh
  40d8ee:	xchg   esp,eax
  40d8ef:	int    0x51
  40d8f1:	out    dx,eax
  40d8f2:	xor    DWORD PTR [edi],ecx
  40d8f4:	das    
  40d8f5:	test   DWORD PTR [ebx],0x97fa1b84
  40d8fb:	(bad)  
  40d8fd:	in     eax,dx
  40d8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ff:	imul   ebp,DWORD PTR [ebx+0x3d],0xd5d5b2e0
  40d906:	jno    0x40d95b
  40d908:	jp     0x40d8d2
  40d90a:	jecxz  0x40d95f
  40d90c:	fldcw  WORD PTR [ebx+eiz*4]
  40d90f:	mov    ch,0x89
  40d911:	repnz scas eax,DWORD PTR es:[edi]
  40d913:	fwait
  40d914:	cdq    
  40d915:	mov    ebx,0x15472dea
  40d91a:	adc    dh,cl
  40d91c:	or     dl,BYTE PTR [edx]
  40d91e:	lods   eax,DWORD PTR ds:[esi]
  40d91f:	(bad)  
  40d920:	mov    ebp,0x94e11fe1
  40d925:	jnp    0x40d8b9
  40d927:	mov    esi,0xa4e34cbe
  40d92c:	xchg   edx,eax
  40d92d:	xchg   ecx,eax
  40d92e:	jb     0x40d919
  40d930:	in     eax,dx
  40d931:	cdq    
  40d932:	cmp    al,0x98
  40d934:	test   eax,0x9f84faaa
  40d939:	dec    esi
  40d93a:	lea    esp,[ebx+0x6b]
  40d93d:	inc    ecx
  40d93e:	xchg   edi,eax
  40d93f:	scas   eax,DWORD PTR es:[edi]
  40d940:	dec    esi
  40d941:	jp     0x40d8e1
  40d943:	and    DWORD PTR [ebx],esi
  40d945:	aam    0x7f
  40d947:	push   ecx
  40d948:	mov    ds:0xb50efb7f,al
  40d94d:	push   esp
  40d94e:	popf   
  40d94f:	imul   ecx,DWORD PTR [ebx+0x12],0x47
  40d953:	pop    eax
  40d954:	icebp  
  40d955:	dec    eax
  40d956:	add    eax,0xd315dff2
  40d95b:	inc    esi
  40d95c:	js     0x40d8f7
  40d95e:	inc    esi
  40d95f:	add    DWORD PTR [eax+eiz*4+0x1b],ebp
  40d963:	ss adc al,0x95
  40d966:	lods   eax,DWORD PTR ds:[esi]
  40d967:	jns    0x40d8ff
  40d969:	inc    ebp
  40d96a:	fsub   DWORD PTR [ebp+0x370a62e7]
  40d970:	jecxz  0x40d9a7
  40d972:	call   0x664f:0x490093d2
  40d979:	jns    0x40d9dc
  40d97b:	xchg   esp,eax
  40d97c:	sub    al,0x5a
  40d97e:	in     al,dx
  40d97f:	mov    esi,0x39dc4175
  40d984:	mov    ah,BYTE PTR [esi+0x76130f0c]
  40d98a:	pop    eax
  40d98b:	pop    eax
  40d98c:	test   DWORD PTR [esi+0x5f],0xbc71de1e
  40d993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d994:	retf   
  40d995:	dec    esp
  40d996:	(bad)  
  40d998:	ins    BYTE PTR es:[edi],dx
  40d999:	out    0x48,eax
  40d99b:	sahf   
  40d99c:	push   esp
  40d99d:	fbstp  TBYTE PTR [ebx+0x7e]
  40d9a0:	push   ebp
  40d9a1:	fnstsw WORD PTR [ebp+esi*8-0x47815ab6]
  40d9a8:	cmp    BYTE PTR [eax],0xd5
  40d9ab:	sti    
  40d9ac:	bound  esi,QWORD PTR [esi+0x221c40b7]
  40d9b2:	popf   
  40d9b3:	int3   
  40d9b4:	mov    dh,0xe7
  40d9b6:	xchg   ecx,ebp
  40d9b8:	inc    eax
  40d9b9:	test   eax,0x9c045f5f
  40d9bf:	por    mm4,QWORD PTR [ecx+0x15]
  40d9c3:	fisub  WORD PTR [edi+edx*1+0x60]
  40d9c7:	pop    ss
  40d9c8:	daa    
  40d9c9:	mov    WORD PTR [ecx+0x3f],?
  40d9cc:	adc    al,0x21
  40d9ce:	nop
  40d9cf:	stos   DWORD PTR es:[edi],eax
  40d9d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9d1:	aam    0xed
  40d9d3:	repnz push ebx
  40d9d5:	data16 mov BYTE PTR [ebp+0x35],ch
  40d9d9:	es push es
  40d9db:	(bad)  
  40d9dc:	push   ds
  40d9dd:	sbb    cl,BYTE PTR [eax+0x6eefff6a]
  40d9e3:	and    cl,BYTE PTR [eax]
  40d9e5:	push   ecx
  40d9e6:	pop    esp
  40d9e7:	mov    ecx,0xc66e4dd2
  40d9ec:	jbe    0x40da50
  40d9ee:	ficomp DWORD PTR [edx]
  40d9f0:	in     eax,dx
  40d9f1:	sbb    DWORD PTR [edx+0x5e5cf728],0xffffffaa
  40d9f8:	loope  0x40d9b8
  40d9fa:	or     DWORD PTR [ecx+0x28],esi
  40d9fd:	inc    ebp
  40d9fe:	cdq    
  40d9ff:	repnz (bad) 
  40da02:	cmp    DWORD PTR [ecx+0x3be347a8],esi
  40da08:	dec    esi
  40da09:	fsub   st(7),st
  40da0b:	pop    ebx
  40da0c:	pushf  
  40da0d:	leave  
  40da0e:	push   0xffffffb0
  40da10:	push   0x5ea7ffe5
  40da15:	push   cs
  40da16:	hlt    
  40da17:	cli    
  40da18:	dec    ebx
  40da19:	nop
  40da1a:	jb     0x40da6e
  40da1c:	inc    ecx
  40da1d:	mov    edx,0x1cef6ed7
  40da22:	or     BYTE PTR ds:[ebx],cl
  40da25:	inc    esp
  40da26:	fmul   DWORD PTR [ebx+0x51]
  40da29:	cs jns 0x40da55
  40da2c:	mov    dl,BYTE PTR ds:0xfe2dbaf2
  40da32:	sbb    ecx,ebx
  40da34:	cmp    DWORD PTR [ebx+edi*4+0x3347391d],ebx
  40da3b:	lea    edi,[ecx]
  40da3d:	iret   
  40da3e:	mov    ecx,0x6dbb6db9
  40da43:	sub    al,0xf5
  40da45:	fadd   QWORD PTR [ebx]
  40da47:	fimul  DWORD PTR [esi]
  40da49:	xchg   ebx,eax
  40da4a:	cmp    edi,DWORD PTR [ebx]
  40da4c:	add    BYTE PTR [ebx-0x4ecb3dfc],bh
  40da52:	jl     0x40da4d
  40da54:	jmp    0xfc5e:0xb81f9020
  40da5b:	pop    ds
  40da5c:	xor    dh,BYTE PTR [edx-0x179c1c08]
  40da62:	mov    WORD PTR [edi+0x675bf051],fs
  40da68:	or     dh,BYTE PTR [esp+eax*4]
  40da6b:	fiadd  WORD PTR [edx-0x80]
  40da6e:	stc    
  40da6f:	dec    edx
  40da70:	or     DWORD PTR [ebp-0x7a],edi
  40da73:	mov    cl,0x54
  40da75:	adc    esi,DWORD PTR [ebx+0x25]
  40da78:	xor    DWORD PTR [edi+0x10],0xffffff96
  40da7c:	pusha  
  40da7d:	cld    
  40da7e:	dec    edi
  40da7f:	push   ds
  40da80:	cdq    
  40da81:	int3   
  40da82:	scas   al,BYTE PTR es:[edi]
  40da83:	pushf  
  40da84:	imul   ecx,DWORD PTR [ecx+eax*4+0x20],0x46
  40da89:	je     0x40dafe
  40da8b:	ja     0x40da15
  40da8d:	popf   
  40da8e:	add    al,0x9a
  40da90:	xchg   edx,eax
  40da91:	ficom  DWORD PTR [ecx+ebx*4]
  40da94:	in     al,0x67
  40da96:	add    al,BYTE PTR [esi-0x1a0f2618]
  40da9c:	test   BYTE PTR [edi],bl
  40da9e:	icebp  
  40da9f:	(bad)  
  40daa0:	loopne 0x40dab7
  40daa2:	or     BYTE PTR [ebx],ah
  40daa4:	mov    ecx,0xe83d6b6d
  40daa9:	std    
  40daaa:	fdiv   QWORD PTR [esi]
  40daac:	sbb    DWORD PTR [edi-0x63],edi
  40daaf:	adc    DWORD PTR [edi+0x1c],esp
  40dab2:	scas   al,BYTE PTR es:[edi]
  40dab3:	lock loope 0x40da48
  40dab6:	mov    ebp,0x9c9a6a42
  40dabb:	outs   dx,BYTE PTR ds:[esi]
  40dabc:	lahf   
  40dabd:	add    BYTE PTR [ebp-0x20523d7c],al
  40dac3:	add    DWORD PTR [esi+0xc],edx
  40dac6:	dec    eax
  40dac7:	mov    ebx,0x84f156f7
  40dacc:	ja     0x40daaf
  40dace:	ins    DWORD PTR es:[edi],dx
  40dacf:	sub    ecx,edx
  40dad1:	add    BYTE PTR [esi-0x5d],ch
  40dad4:	or     eax,0x6eab63bd
  40dad9:	mov    bl,0xdb
  40dadb:	push   ds
  40dadc:	mov    bl,0x7a
  40dade:	jo     0x40da90
  40dae0:	loop   0x40da64
  40dae2:	mov    ?,edi
  40dae4:	mov    ebx,0x5d48f45c
  40dae9:	sub    eax,0x294822c1
  40daee:	lds    ebp,FWORD PTR [esi+0x67018556]
  40daf4:	call   0xc7888bb7
  40daf9:	arpl   WORD PTR ds:0x7b770df7,di
  40daff:	dec    edx
  40db00:	ficomp DWORD PTR [edi]
  40db02:	cmp    al,0x2e
  40db04:	adc    al,0x71
  40db06:	adc    bl,BYTE PTR [ebp-0x35]
  40db09:	mov    esp,0x54e87c6f
  40db0e:	inc    ebx
  40db0f:	jmp    FWORD PTR [eax+edi*8+0x2f2145f7]
  40db16:	mov    WORD PTR [edi+0x69],fs
  40db19:	mov    esi,cs
  40db1b:	enter  0x7dd0,0x80
  40db1f:	rol    DWORD PTR [ebx+ebp*2],cl
  40db22:	or     eax,0x3804f738
  40db27:	(bad)  
  40db29:	ins    BYTE PTR es:[edi],dx
  40db2a:	shl    dh,1
  40db2c:	imul   ecx,eax,0xffffffa4
  40db2f:	inc    ebx
  40db30:	mov    DWORD PTR [ebx+eax*1+0x3625abf2],ebx
  40db37:	jp     0x40db91
  40db39:	pop    es
  40db3a:	jge    0x40db07
  40db3c:	int    0x1e
  40db3e:	fbld   TBYTE PTR [edx+0x2d7fd051]
  40db44:	cmp    al,0x85
  40db46:	mov    edx,0xf9c4cfe8
  40db4b:	shr    BYTE PTR [esp+eax*1],1
  40db4e:	or     bl,bh
  40db50:	retf   0x17c1
  40db53:	push   edx
  40db54:	js     0x40dad8
  40db56:	or     al,0xb5
  40db58:	push   esp
  40db59:	icebp  
  40db5a:	mov    ebx,ebp
  40db5c:	adc    DWORD PTR [esi],0xd
  40db5f:	inc    ebp
  40db60:	into   
  40db61:	ja     0x40dbdc
  40db63:	xor    eax,0x333589bc
  40db68:	sbb    al,0x40
  40db6a:	outs   dx,BYTE PTR ds:[esi]
  40db6b:	jg     0x40dba2
  40db6d:	pop    eax
  40db6e:	loop   0x40db17
  40db70:	in     eax,dx
  40db71:	push   esi
  40db72:	stos   DWORD PTR es:[edi],eax
  40db73:	aam    0xaa
  40db75:	lock xchg esp,eax
  40db77:	pop    ds
  40db78:	js     0x40dbc5
  40db7a:	enter  0xf579,0x53
  40db7e:	push   esp
  40db7f:	pop    esp
  40db80:	xor    BYTE PTR [edx+0x7115b125],bl
  40db86:	inc    edi
  40db87:	mov    dl,0x8f
  40db89:	test   al,0xbf
  40db8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db8c:	fadd   DWORD PTR [ecx-0x7767c5c6]
  40db92:	dec    ebx
  40db93:	cld    
  40db94:	and    BYTE PTR [edi-0x3e],0x60
  40db98:	mov    esp,esi
  40db9a:	and    DWORD PTR [edi+eax*2+0x4a8b134f],ebx
  40dba1:	mov    edx,0xf11241d8
  40dba6:	jp     0x40db4c
  40dba8:	jns    0x40dc0b
  40dbaa:	sub    DWORD PTR [edi-0x2a],0xffffffa0
  40dbae:	mov    al,ds:0x258caf68
  40dbb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb4:	jle    0x40db97
  40dbb6:	cs (bad) 
  40dbb8:	popf   
  40dbb9:	pop    ebp
  40dbba:	es and eax,0x5266256d
  40dbc0:	mov    ah,0xa0
  40dbc2:	ret    
  40dbc3:	(bad)
  40dbc6:	jbe    0x40dc25
  40dbc8:	mov    dl,0x8f
  40dbca:	je     0x40dbaf
  40dbcc:	inc    ecx
  40dbce:	ins    DWORD PTR es:[edi],dx
  40dbcf:	(bad)  
  40dbd0:	cmp    al,0x4d
  40dbd2:	aam    0x83
  40dbd4:	adc    esi,ebp
  40dbd6:	jmp    0x40dbd7
  40dbd8:	push   ds
  40dbd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbda:	mov    esi,0xfa8cc146
  40dbdf:	es xchg esi,eax
  40dbe1:	push   ebp
  40dbe2:	or     al,0x90
  40dbe4:	fistp  WORD PTR [ebx+0x53]
  40dbe7:	pop    ds
  40dbe8:	mov    al,0xfc
  40dbea:	mov    ebp,0xbc58e062
  40dbef:	sti    
  40dbf0:	pushf  
  40dbf1:	adc    dl,BYTE PTR [eax+0x504a33a6]
  40dbf7:	les    ebp,FWORD PTR [eax+0x4d]
  40dbfa:	pop    edx
  40dbfb:	add    al,0x17
  40dbfd:	mov    bl,0x7e
  40dbff:	jbe    0x40dbb1
  40dc01:	lods   al,BYTE PTR ds:[esi]
  40dc02:	(bad)  
  40dc03:	jno    0x40dc34
  40dc05:	inc    DWORD PTR [eax-0x53]
  40dc08:	ss dec eax
  40dc0a:	pop    DWORD PTR [ebx-0x4144c73c]
  40dc10:	rol    DWORD PTR [eax+0x6deee2a4],cl
  40dc16:	inc    esp
  40dc17:	push   esp
  40dc18:	call   0x57b0c6b8
  40dc1d:	mov    al,0x92
  40dc1f:	push   es
  40dc20:	mov    bh,0x8
  40dc22:	pop    es
  40dc23:	pop    es
  40dc24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc25:	add    edi,DWORD PTR [edx-0x142ec41d]
  40dc2b:	inc    edx
  40dc2c:	jmp    0x9e47c496
  40dc31:	stos   DWORD PTR es:[edi],eax
  40dc32:	xchg   edi,eax
  40dc33:	mov    ds:0xa865ec81,eax
  40dc38:	jbe    0x40dc02
  40dc3a:	imul   ebp,DWORD PTR [edi-0x69],0x1a
  40dc3e:	aad    0x2a
  40dc40:	test   BYTE PTR [edx-0x531ae5ab],bl
  40dc46:	aad    0xe5
  40dc48:	pop    esi
  40dc49:	hlt    
  40dc4a:	lods   eax,DWORD PTR ds:[esi]
  40dc4c:	pop    esp
  40dc4d:	ja     0x40dc0f
  40dc4f:	test   al,0x2c
  40dc51:	mov    WORD PTR [edi+esi*2-0x78],?
  40dc55:	xchg   ecx,eax
  40dc56:	int3   
  40dc57:	lds    ebp,FWORD PTR [eax-0x2561506e]
  40dc5d:	pop    es
  40dc5e:	push   es
  40dc5f:	popf   
  40dc60:	jecxz  0x40dcaa
  40dc62:	adc    BYTE PTR [eax-0x41],0x40
  40dc66:	es push cs
  40dc68:	leave  
  40dc69:	popf   
  40dc6a:	sub    BYTE PTR [edi],bh
  40dc6c:	out    dx,al
  40dc6d:	sbb    al,0x83
  40dc6f:	out    dx,al
  40dc70:	add    edx,DWORD PTR [edi-0x73]
  40dc73:	call   0xf98da3b
  40dc78:	or     eax,0xf9d9637d
  40dc7d:	sbb    al,0xc0
  40dc7f:	sbb    al,0xef
  40dc81:	mov    bl,0xb9
  40dc83:	jmp    0x40dcfb
  40dc85:	push   es
  40dc86:	dec    ebx
  40dc87:	cmp    esp,DWORD PTR [eax+ebx*4]
  40dc8a:	jp     0x40dc81
  40dc8c:	(bad)  
  40dc8d:	sar    al,cl
  40dc8f:	or     BYTE PTR [edi],ah
  40dc91:	(bad)  
  40dc92:	cld    
  40dc93:	(bad)  
  40dc94:	test   BYTE PTR [ecx-0x3226459f],0xc4
  40dc9b:	call   FWORD PTR ds:0x15a559d5
  40dca1:	or     al,0x13
  40dca3:	popf   
  40dca4:	adc    al,0x60
  40dca6:	mov    eax,ds:0x1f404d33
  40dcab:	imul   esp,DWORD PTR [esi],0x7e
  40dcae:	retf   
  40dcaf:	adc    BYTE PTR [ebp+0x55],0xce
  40dcb3:	push   DWORD PTR [eax+0x2e1effb2]
  40dcb9:	push   0xffffffa9
  40dcbb:	stos   DWORD PTR es:[edi],eax
  40dcbc:	jb     0x40dc8d
  40dcbe:	pop    ebx
  40dcbf:	dec    esp
  40dcc0:	pusha  
  40dcc1:	in     al,dx
  40dcc2:	cmp    al,0x82
  40dcc4:	and    eax,0xdf6b42a
  40dcc9:	cmp    eax,0xabb0c0a7
  40dcce:	mov    dl,0x97
  40dcd0:	pushf  
  40dcd1:	imul   BYTE PTR [edx-0x2a]
  40dcd4:	push   eax
  40dcd5:	dec    edi
  40dcd6:	inc    eax
  40dcd7:	jmp    0x44ace765
  40dcdc:	dec    ecx
  40dcdd:	lahf   
  40dcde:	mov    ecx,0x94befbc1
  40dce3:	mov    edi,edx
  40dce5:	mov    ds:0x2655fdfa,eax
  40dcea:	push   ebx
  40dceb:	mov    cl,0xff
  40dced:	aad    0x6c
  40dcef:	mov    ebp,0xba664d29
  40dcf4:	sub    DWORD PTR [esi+0x20],0xffffffe1
  40dcf8:	call   0x6e7115a8
  40dcfd:	xor    al,0x42
  40dcff:	fist   DWORD PTR [edx+0x21]
  40dd02:	cmp    ah,BYTE PTR [ebp-0x6]
  40dd05:	mov    esp,0x6c0412ae
  40dd0a:	pop    ss
  40dd0b:	mov    ch,0xc2
  40dd0d:	adc    BYTE PTR [ebx*2+0x5b6af3be],0x72
  40dd15:	sub    al,bh
  40dd17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd18:	xchg   BYTE PTR [ecx],ch
  40dd1a:	icebp  
  40dd1b:	jp     0x40dd0f
  40dd1d:	xor    DWORD PTR es:[ecx],0xfcee3420
  40dd24:	mov    esp,0xe260d291
  40dd29:	in     al,dx
  40dd2a:	or     al,0x70
  40dd2c:	sub    eax,0x185f83f
  40dd31:	sti    
  40dd32:	les    edx,FWORD PTR [ecx+0x41]
  40dd35:	mov    esi,0xca714a79
  40dd3a:	addr16 int 0x62
  40dd3d:	cmp    BYTE PTR [ecx+0x3b],bl
  40dd40:	push   esi
  40dd41:	dec    ecx
  40dd42:	lea    ebp,[esp+esi*1]
  40dd45:	in     eax,dx
  40dd46:	mov    eax,0xf7b8c27b
  40dd4b:	pop    ss
  40dd4c:	sbb    ecx,ebp
  40dd4e:	push   ebp
  40dd4f:	pop    ecx
  40dd50:	call   0xc613:0x9cacbaf1
  40dd57:	lea    edx,[edx]
  40dd59:	xor    BYTE PTR [ebp-0xfdcb1f2],bl
  40dd5f:	sub    DWORD PTR [ebp-0xe],eax
  40dd62:	cmp    DWORD PTR [ecx+0x66895e8c],esp
  40dd68:	jns    0x40ddae
  40dd6a:	inc    esi
  40dd6b:	inc    eax
  40dd6c:	(bad)  
  40dd6d:	jmp    0x40dd9d
  40dd6f:	fsubr  QWORD PTR [ebx-0x78]
  40dd72:	les    edx,FWORD PTR [eax+0x6e]
  40dd75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd76:	rol    BYTE PTR [ebp-0x6551e910],0x1
  40dd7d:	or     al,0x89
  40dd7f:	ret    
  40dd80:	xchg   esp,eax
  40dd81:	pop    ebp
  40dd82:	cli    
  40dd83:	mov    edi,0x44e84507
  40dd88:	push   es
  40dd89:	outs   dx,DWORD PTR ds:[esi]
  40dd8a:	xchg   dl,ah
  40dd8c:	add    dl,dl
  40dd8e:	out    0xa1,eax
  40dd90:	cld    
  40dd91:	pop    es
  40dd92:	std    
  40dd93:	pop    edi
  40dd94:	pop    ebx
  40dd95:	scas   eax,DWORD PTR es:[edi]
  40dd96:	shl    edi,cl
  40dd98:	adc    al,BYTE PTR [edx]
  40dd9a:	mov    DWORD PTR [edi+0x69],esi
  40dd9d:	fs xchg ebp,eax
  40dd9f:	(bad)  
  40dda0:	ins    BYTE PTR es:[edi],dx
  40dda1:	fs jge 0x40dd86
  40dda4:	sub    BYTE PTR [ebx+0x28ada7ab],0x25
  40ddab:	fidiv  WORD PTR [ebx-0x7078fc73]
  40ddb1:	dec    edx
  40ddb2:	xchg   ebx,eax
  40ddb3:	or     esi,DWORD PTR [esi-0x585dd574]
  40ddb9:	out    dx,eax
  40ddba:	cwde   
  40ddbb:	arpl   ax,cx
  40ddbd:	push   esp
  40ddbe:	jmp    0x8b7e:0xe29e6316
  40ddc5:	and    al,BYTE PTR [esp+ecx*1-0x276ea12]
  40ddcc:	pop    ecx
  40ddcd:	cmp    BYTE PTR ds:0xb64c6063,bh
  40ddd3:	add    esp,edx
  40ddd5:	ret    0x6a35
  40ddd8:	div    DWORD PTR [ebx-0x6b]
  40dddb:	mov    ch,BYTE PTR [edx]
  40dddd:	mov    esp,DWORD PTR [esi]
  40dddf:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40dde1:	div    BYTE PTR [ebp-0x6a]
  40dde4:	and    al,0x24
  40dde6:	mov    al,ds:0xc4e09a55
  40ddeb:	test   eax,0x2f442572
  40ddf0:	add    DWORD PTR [edx],ebx
  40ddf2:	sub    al,0x2c
  40ddf4:	pop    edx
  40ddf5:	sahf   
  40ddf6:	mov    esp,0x53a204da
  40ddfb:	repz hlt 
  40ddfd:	mov    eax,0xc1719886
  40de02:	pop    ecx
  40de03:	mov    edi,0x545b4961
  40de08:	(bad)  
  40de0a:	cmp    bh,BYTE PTR [esi]
  40de0c:	jge    0x40de89
  40de0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de0f:	cmp    esp,esi
  40de11:	mov    dl,0xa7
  40de13:	xchg   bh,dl
  40de15:	sub    DWORD PTR [edx-0x36],ebp
  40de18:	bound  edx,QWORD PTR [ecx-0x33]
  40de1b:	xchg   esp,eax
  40de1c:	xchg   edx,eax
  40de1d:	pop    edx
  40de1e:	imul   ebx,DWORD PTR [edi-0x58],0x905c8c22
  40de25:	jle    0x40de8e
  40de27:	pop    esp
  40de28:	inc    ecx
  40de29:	mov    ebx,0xa27a7722
  40de2e:	ret    0x8e2a
  40de31:	mov    bl,0x51
  40de33:	pusha  
  40de34:	mov    DWORD PTR [ecx-0x1a1edaa5],ebp
  40de3a:	jnp    0x40ddde
  40de3c:	xchg   edx,eax
  40de3d:	jbe    0x40ddff
  40de3f:	shl    BYTE PTR [eax-0x52],cl
  40de42:	(bad)  
  40de43:	aad    0x94
  40de45:	dec    ebp
  40de46:	iret   
  40de47:	div    BYTE PTR [eax]
  40de49:	pop    es
  40de4a:	cwde   
  40de4b:	sub    al,0xac
  40de4d:	and    eax,0x926875a7
  40de52:	stc    
  40de53:	add    esp,DWORD PTR [esi+0x47]
  40de56:	xor    DWORD PTR [ebp+0x145f1856],esi
  40de5c:	(bad)  
  40de5e:	inc    ebx
  40de5f:	pop    esp
  40de60:	xor    DWORD PTR [esi-0x36],ecx
  40de63:	push   edi
  40de64:	(bad)  
  40de65:	scas   al,BYTE PTR es:[edi]
  40de66:	es push edi
  40de68:	inc    eax
  40de69:	test   bh,bl
  40de6b:	mov    cl,0x5f
  40de6d:	cmp    BYTE PTR [esi],0x6
  40de70:	imul   BYTE PTR [eax]
  40de72:	and    DWORD PTR [ebp-0x3a283af1],esi
  40de78:	push   ebx
  40de79:	sbb    DWORD PTR ds:0xacf0206d,ebx
  40de7f:	popa   
  40de80:	and    DWORD PTR [esi-0x5c],ecx
  40de83:	fcom   QWORD PTR [ecx]
  40de85:	push   0x4f
  40de87:	bound  ebx,QWORD PTR [edx]
  40de89:	rol    BYTE PTR [ebp+0x53],1
  40de8c:	mov    ds:0xa0d12039,eax
  40de91:	stos   BYTE PTR es:[edi],al
  40de92:	clc    
  40de93:	loope  0x40def0
  40de95:	sub    DWORD PTR [ecx+0x34e430ec],0xffffff87
  40de9c:	test   al,0x7e
  40de9e:	jge    0x40dec1
  40dea0:	xchg   ebx,eax
  40dea1:	ret    0xd3c8
  40dea4:	and    bh,ch
  40dea6:	(bad)  
  40dea7:	mov    bl,0x16
  40dea9:	call   0x4cbe:0x1f11cdc7
  40deb0:	dec    esp
  40deb1:	loopne 0x40dec4
  40deb3:	sbb    eax,0x5940c32f
  40deb8:	jno    0x40decd
  40deba:	xchg   ecx,eax
  40debb:	xchg   edx,eax
  40debc:	xor    dh,cl
  40debe:	sbb    eax,0x611a3d42
  40dec3:	std    
  40dec4:	jg     0x40de55
  40dec6:	jmp    0x6e2f:0xb3e58800
  40decd:	add    ah,dl
  40decf:	loop   0x40de97
  40ded1:	push   0xef666e3a
  40ded6:	add    ah,bl
  40ded8:	in     al,dx
  40ded9:	jecxz  0x40df21
  40dedb:	and    al,0xef
  40dedd:	ret    0x6a9b
  40dee0:	xchg   DWORD PTR [eax-0x44],ebp
  40dee3:	cmp    eax,DWORD PTR [edx-0x22]
  40dee6:	cmp    BYTE PTR [eax+0x54822d3],cl
  40deec:	adc    dh,BYTE PTR [edi+ecx*2+0xc]
  40def0:	mov    edx,esp
  40def2:	hlt    
  40def3:	hlt    
  40def4:	sub    ecx,DWORD PTR [esi-0x741986b2]
  40defa:	outs   dx,DWORD PTR ds:[esi]
  40defb:	jne    0x40defc
  40defd:	push   edi
  40defe:	mov    al,0x40
  40df00:	in     eax,dx
  40df01:	jne    0x40df22
  40df03:	fisubr DWORD PTR ds:0xf9837114
  40df09:	sub    DWORD PTR ds:0xdf70bb24,ecx
  40df0f:	mul    DWORD PTR [esi+edx*8+0x3b]
  40df13:	and    dh,0x2
  40df16:	or     ah,BYTE PTR [edx+0x3]
  40df19:	inc    ecx
  40df1a:	rol    BYTE PTR [esi+0x5a4613b5],0x57
  40df21:	push   esp
  40df22:	ret    0x76b1
  40df25:	aam    0x42
  40df27:	xchg   ecx,eax
  40df28:	add    bh,0x8c
  40df2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df2c:	xchg   esp,eax
  40df2d:	and    ebp,edx
  40df2f:	mov    ch,BYTE PTR [eax+0x697da24a]
  40df35:	in     al,dx
  40df36:	out    dx,al
  40df37:	sub    esp,DWORD PTR [esi]
  40df39:	mov    ds:0x4aa308b3,eax
  40df3e:	shl    DWORD PTR [ecx-0x7ea4edee],1
  40df44:	xchg   ecx,eax
  40df45:	sub    al,0x3b
  40df47:	mov    edx,0xc4773a99
  40df4c:	and    edi,0x702d0334
  40df52:	pop    ds
  40df53:	(bad)  
  40df54:	aas    
  40df55:	fadd   st(2),st
  40df57:	mov    esi,0xaa3f8aaa
  40df5c:	xor    eax,DWORD PTR [esi-0x4613fdc5]
  40df62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df63:	add    bl,bl
  40df65:	fist   DWORD PTR [ebx+0x4f8a38aa]
  40df6b:	push   cs
  40df6c:	retf   0x8755
  40df6f:	arpl   WORD PTR [edx-0x7a9b9199],sp
  40df75:	clc    
  40df76:	mov    bh,0x89
  40df78:	hlt    
  40df79:	jl     0x40df67
  40df7b:	mov    esi,ebp
  40df7d:	sbb    BYTE PTR [edi],cl
  40df7f:	ja     0x40dfa3
  40df81:	cs pop ecx
  40df83:	je     0x40df2b
  40df85:	(bad)  
  40df86:	jmp    0x3094:0xc42c1263
  40df8d:	popa   
  40df8e:	loopne 0x40df80
  40df90:	js     0x40df1f
  40df92:	fmulp  st(3),st
  40df94:	mov    ds:0x18935ccb,al
  40df99:	sbb    dl,BYTE PTR [ebp-0x40]
  40df9c:	push   ebp
  40df9d:	add    eax,0x97736bf7
  40dfa2:	fsub   DWORD PTR [edi-0x3]
  40dfa5:	aaa    
  40dfa6:	ja     0x40dfaa
  40dfa8:	adc    dl,bl
  40dfaa:	mov    DWORD PTR [esi],0x16643ea7
  40dfb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb1:	callw  0x97bf
  40dfb5:	aam    0x97
  40dfb7:	es cli 
  40dfb9:	hlt    
  40dfba:	cmp    al,0x2d
  40dfbc:	(bad)  
  40dfbd:	mov    edi,0xd80f558f
  40dfc2:	xor    cl,al
  40dfc4:	xor    BYTE PTR [ebx+0x6e],dh
  40dfc7:	sbb    ebp,DWORD PTR [ebx]
  40dfc9:	xchg   edi,eax
  40dfca:	or     al,0x17
  40dfcc:	addr16 xchg edi,eax
  40dfce:	xor    al,0xd6
  40dfd0:	dec    ebx
  40dfd1:	cdq    
  40dfd2:	pop    esi
  40dfd3:	in     al,dx
  40dfd4:	stos   DWORD PTR es:[edi],eax
  40dfd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfd6:	sub    al,0xdf
  40dfd8:	fcomp  st(3)
  40dfda:	(bad)
  40dfdd:	adc    eax,0xc80e889
  40dfe2:	adc    eax,0x52fd1f65
  40dfe7:	fwait
  40dfe8:	das    
  40dfe9:	jns    0x40df72
  40dfeb:	imul   edi,DWORD PTR [edi+0x4aac6b35],0xffffffc6
  40dff2:	push   ebp
  40dff3:	sub    esp,DWORD PTR [esi-0x7a]
  40dff6:	sbb    edi,0xffffffea
  40dff9:	and    bl,cl
  40dffb:	push   esi
  40dffc:	imul   ebx,DWORD PTR [edx+0x4eeaa96f],0x6a
  40e003:	cmp    esp,esp
  40e005:	pop    ebx
  40e006:	inc    ecx
  40e007:	mov    ds:0xf6210847,eax
  40e00c:	sub    al,0x3d
  40e00e:	xchg   dl,dl
  40e010:	mov    bl,0x56
  40e012:	clc    
  40e013:	fsub   DWORD PTR [eax]
  40e015:	fimul  DWORD PTR [ebp+0x3f]
  40e018:	rol    BYTE PTR [ebx-0x791a641f],1
  40e01e:	dec    eax
  40e01f:	imul   edx,DWORD PTR [eax-0x7b24daa7],0x35
  40e026:	lods   eax,DWORD PTR ds:[esi]
  40e027:	mov    bl,0xea
  40e029:	popa   
  40e02a:	aaa    
  40e02b:	inc    esp
  40e02c:	jae    0x40dfb9
  40e02e:	popf   
  40e02f:	push   ebx
  40e030:	push   ebp
  40e031:	nop
  40e032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e033:	or     cl,BYTE PTR [ecx]
  40e035:	xchg   esi,eax
  40e036:	lea    esp,[ebp+edx*8-0x4]
  40e03a:	sub    edi,DWORD PTR [eax-0x14]
  40e03d:	mov    ebp,0xb1fed405
  40e042:	outs   dx,DWORD PTR ds:[si]
  40e044:	jge    0x40e086
  40e046:	clc    
  40e047:	enter  0xc7d7,0x64
  40e04b:	and    eax,0xfa152bdd
  40e050:	mov    ebp,0xe82966de
  40e055:	outs   dx,WORD PTR ds:[esi]
  40e057:	mov    al,ds:0xe39077f3
  40e05d:	pop    edx
  40e05e:	xlat   BYTE PTR ds:[ebx]
  40e05f:	mov    BYTE PTR [edx+0x4f6a1936],0x49
  40e066:	inc    esp
  40e067:	cmp    BYTE PTR [ebx-0x99b9a7d],cl
  40e06d:	pop    es
  40e06e:	jl     0x40e005
  40e070:	aaa    
  40e071:	stos   BYTE PTR es:[edi],al
  40e072:	mov    edi,esi
  40e074:	lods   eax,DWORD PTR ds:[esi]
  40e075:	std    
  40e076:	imul   esi,DWORD PTR [ebp+0x42],0x42b7db3
  40e07d:	ins    BYTE PTR es:[edi],dx
  40e07e:	cs sub eax,0x15a0292e
  40e084:	lahf   
  40e085:	out    dx,eax
  40e086:	push   0xf5c46b5f
  40e08b:	inc    edi
  40e08c:	jge    0x40e037
  40e08e:	sub    DWORD PTR [ebx-0x41],edx
  40e091:	lods   eax,DWORD PTR ds:[esi]
  40e092:	std    
  40e093:	aad    0xe4
  40e095:	fistp  DWORD PTR [edx+ecx*8+0x35]
  40e099:	xchg   esp,eax
  40e09a:	(bad)  
  40e09b:	xlat   BYTE PTR ds:[ebx]
  40e09c:	add    bl,dl
  40e09e:	(bad)  
  40e09f:	dec    esp
  40e0a0:	add    al,0x85
  40e0a2:	mov    edi,DWORD PTR [edi]
  40e0a4:	cmp    BYTE PTR [eax+0x76],al
  40e0a7:	jp     0x40e09e
  40e0a9:	add    al,0xc3
  40e0ab:	add    esp,DWORD PTR [ecx+0x35]
  40e0ae:	cmc    
  40e0af:	and    ecx,ebx
  40e0b1:	std    
  40e0b2:	sub    bh,BYTE PTR [eax]
  40e0b4:	(bad)  
  40e0b5:	scas   al,BYTE PTR es:[edi]
  40e0b6:	test   eax,0x6cb4fda6
  40e0bb:	cmc    
  40e0bc:	dec    edx
  40e0bd:	in     al,dx
  40e0be:	add    eax,0x899d4bb8
  40e0c3:	sbb    eax,0xd00a89c2
  40e0c8:	ds mov ah,0xd2
  40e0cb:	push   esp
  40e0cc:	sar    BYTE PTR ds:0x90ca8813,cl
  40e0d2:	push   eax
  40e0d3:	aaa    
  40e0d4:	xchg   ebx,eax
  40e0d5:	fistp  WORD PTR ds:0x5bafd828
  40e0db:	mov    ch,0x6
  40e0dd:	push   ds
  40e0de:	cmp    edi,DWORD PTR [ebx-0x13be395d]
  40e0e4:	cmp    edx,DWORD PTR ds:0xeb40e0b4
  40e0ea:	push   ds
  40e0eb:	xor    eax,0x5a3fbada
  40e0f0:	xchg   edi,eax
  40e0f1:	aam    0xac
  40e0f3:	lea    esi,[esi]
  40e0f5:	xor    edi,0x1a
  40e0f8:	call   0xc961:0x132781cf
  40e0ff:	sbb    BYTE PTR [esi+0x1ec3680c],bl
  40e105:	aaa    
  40e106:	jmp    0x1e3b:0x8307e886
  40e10d:	cmp    eax,DWORD PTR [esi-0x78]
  40e110:	jp     0x40e139
  40e112:	adc    ch,BYTE PTR [edx-0x45]
  40e115:	fdecstp 
  40e117:	push   0xe170a4d1
  40e11c:	(bad)  
  40e11d:	sar    BYTE PTR [ebx+0x2ae217c9],cl
  40e123:	out    dx,al
  40e124:	push   ss
  40e125:	jmp    0x63b8:0xebc2d4a2
  40e12c:	out    0x1b,eax
  40e12e:	sbb    DWORD PTR [ecx-0x13b6c4bd],ebp
  40e134:	push   cs
  40e135:	jp     0x40e197
  40e137:	jns    0x40e148
  40e139:	jns    0x40e159
  40e13b:	test   al,0x29
  40e13d:	lods   eax,DWORD PTR ds:[esi]
  40e13e:	xor    BYTE PTR [edi],bl
  40e140:	imul   ebp,DWORD PTR ds:0xab548918,0x6b63e63
  40e14a:	not    dh
  40e14c:	call   0x65bb:0xd030c508
  40e153:	(bad)  [edx+0x6fafd731]
  40e159:	push   cs
  40e15a:	mov    dh,0x12
  40e15c:	imul   ebx,ebx,0xd8032f6d
  40e162:	mov    WORD PTR [esi],fs
  40e164:	dec    edx
  40e165:	mov    eax,ds:0xc45d0200
  40e16a:	or     bl,BYTE PTR [ecx+0x62]
  40e16d:	or     al,0xf
  40e16f:	ins    DWORD PTR es:[edi],dx
  40e170:	xchg   DWORD PTR [esi-0x50],ecx
  40e173:	nop
  40e174:	ror    BYTE PTR [ecx-0x63b81f62],0x8a
  40e17b:	push   ds
  40e17c:	cld    
  40e17d:	xchg   ebx,eax
  40e17e:	adc    dl,BYTE PTR [edx+0xb]
  40e181:	push   ds
  40e182:	imul   ebp,DWORD PTR [ebx],0xc24f1569
  40e188:	inc    esi
  40e189:	test   BYTE PTR [ebx-0x36b0db36],ah
  40e18f:	sbb    eax,0x3af2920f
  40e194:	out    0xdf,eax
  40e196:	enter  0x39c1,0x92
  40e19a:	sub    DWORD PTR [eax+edx*4],ebp
  40e19d:	push   ebx
  40e19e:	lds    edx,FWORD PTR [ecx-0x2907ab9f]
  40e1a4:	mov    edi,0x905f36a8
  40e1a9:	or     al,0x1a
  40e1ab:	mov    ch,0xa4
  40e1ad:	mov    BYTE PTR [ebx],ah
  40e1af:	(bad)  
  40e1b0:	cmc    
  40e1b1:	add    eax,0x5d4f2ad2
  40e1b6:	outs   dx,BYTE PTR ds:[esi]
  40e1b7:	pop    es
  40e1b8:	xchg   ebx,eax
  40e1b9:	jp     0x40e148
  40e1bb:	cmp    dh,ah
  40e1bd:	jp     0x40e20d
  40e1bf:	mov    al,0xaf
  40e1c1:	and    DWORD PTR [ebx+0x6d],0x960daad2
  40e1c8:	out    0x28,al
  40e1ca:	aam    0xf8
  40e1cc:	into   
  40e1cd:	pop    ss
  40e1ce:	leave  
  40e1cf:	adc    al,ah
  40e1d1:	mov    bh,0x18
  40e1d3:	sbb    ebp,DWORD PTR [eax+0x12]
  40e1d6:	cmp    ebx,esi
  40e1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1d9:	inc    edi
  40e1da:	sbb    esi,DWORD PTR [edx-0x6cd5b218]
  40e1e0:	mov    dh,ah
  40e1e2:	outs   dx,BYTE PTR ds:[esi]
  40e1e3:	ror    dh,1
  40e1e5:	sbb    DWORD PTR [edi+0x73],edx
  40e1e8:	sbb    DWORD PTR cs:[ebp+0x7f],edi
  40e1ec:	(bad)  
  40e1ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1ee:	dec    ebp
  40e1ef:	into   
  40e1f0:	inc    ebp
  40e1f1:	retf   
  40e1f2:	and    al,0x61
  40e1f4:	test   DWORD PTR ds:0xf73fb8ee,edi
  40e1fa:	aad    0x29
  40e1fc:	cmp    edi,DWORD PTR ds:0x2d353bf2
  40e202:	popa   
  40e203:	jmp    0xd3d2:0x6131dbc9
  40e20a:	jg     0x40e1c5
  40e20c:	(bad)  
  40e20d:	push   ebx
  40e20e:	gs jge 0x40e1d4
  40e211:	xchg   edx,eax
  40e212:	or     BYTE PTR cs:[eax+0x10],bl
  40e216:	dec    edx
  40e217:	jnp    0x40e222
  40e219:	fld    QWORD PTR [ebx]
  40e21b:	mov    ebx,0xc46694cd
  40e220:	or     DWORD PTR [esi],ebp
  40e222:	in     al,dx
  40e223:	test   DWORD PTR [esi],eax
  40e225:	in     eax,0x83
  40e227:	or     ch,BYTE PTR [esi-0x7a]
  40e22a:	mov    ecx,0xbba4aaad
  40e22f:	mov    esi,0x73d9d7d6
  40e234:	gs enter 0x12b8,0x4a
  40e239:	push   ebx
  40e23a:	adc    cl,ch
  40e23c:	inc    ebp
  40e23d:	in     eax,0xd1
  40e23f:	es in  al,dx
  40e241:	lods   al,BYTE PTR ds:[esi]
  40e242:	sbb    al,0x84
  40e244:	je     0x40e2a3
  40e246:	and    al,0x8c
  40e248:	ss scas eax,DWORD PTR es:[edi]
  40e24a:	jge    0x40e1fe
  40e24c:	inc    BYTE PTR [ebp-0x2e]
  40e24f:	cs dec ebx
  40e251:	scas   al,BYTE PTR es:[edi]
  40e252:	test   DWORD PTR [ebp-0x6a],0x3d707107
  40e259:	jmp    0x97b3:0x32f4dc34
  40e260:	and    BYTE PTR [ecx-0x63f60241],ah
  40e266:	pop    ds
  40e267:	arpl   WORD PTR [ebx-0x61],di
  40e26a:	fsub   st,st(3)
  40e26c:	pop    ebx
  40e26d:	xor    BYTE PTR [ecx],ah
  40e26f:	stos   BYTE PTR es:[edi],al
  40e270:	push   ds
  40e271:	push   eax
  40e272:	xchg   ebp,eax
  40e273:	pop    edx
  40e274:	add    al,0x20
  40e276:	loopne 0x40e294
  40e278:	push   ebx
  40e279:	nop
  40e27a:	je     0x40e26e
  40e27c:	and    al,cl
  40e27e:	jnp    0x40e226
  40e280:	add    al,bh
  40e282:	push   ebx
  40e283:	jae    0x40e281
  40e285:	lahf   
  40e286:	popf   
  40e287:	mov    ah,BYTE PTR ds:0x75b1943f
  40e28d:	mov    bl,0xf9
  40e28f:	xor    eax,0x64f29e09
  40e294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e295:	or     ebx,DWORD PTR [edx+0x14f8acb]
  40e29b:	xor    ah,ch
  40e29d:	jae    0x40e307
  40e29f:	inc    eax
  40e2a0:	in     eax,0xef
  40e2a2:	xchg   DWORD PTR [ebx],ebp
  40e2a4:	(bad)  
  40e2a5:	mov    bl,0xf8
  40e2a7:	xchg   ebp,eax
  40e2a8:	mov    cl,0x29
  40e2aa:	add    eax,DWORD PTR [ebx]
  40e2ac:	xor    BYTE PTR [eax-0x20],cl
  40e2af:	fiadd  DWORD PTR [eax]
  40e2b1:	lahf   
  40e2b2:	adc    DWORD PTR [ecx-0x32],edx
  40e2b5:	push   cs
  40e2b6:	xchg   esp,eax
  40e2b7:	sub    al,0x3
  40e2b9:	test   esi,ecx
  40e2bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2bc:	inc    edx
  40e2bd:	mov    WORD PTR [eax+0x0],fs
  40e2c0:	mov    dl,0xbc
  40e2c2:	js     0x40e2ec
  40e2c4:	das    
  40e2c5:	outs   dx,DWORD PTR ds:[esi]
  40e2c6:	add    DWORD PTR [ebp-0x9],edi
  40e2c9:	add    al,0x38
  40e2cb:	xor    BYTE PTR [ebp+0x55],bh
  40e2ce:	in     eax,dx
  40e2cf:	sbb    dh,BYTE PTR [eax+0x1e]
  40e2d2:	lds    esi,FWORD PTR [edx+eiz*1+0x940f3e8]
  40e2d9:	mov    cl,0xc7
  40e2db:	mov    eax,ds:0x3c606405
  40e2e0:	adc    DWORD PTR [ecx-0x67aed59c],ebp
  40e2e6:	arpl   WORD PTR ds:0xf1f3eb8e,cx
  40e2ec:	leave  
  40e2ed:	mov    ss,ecx
  40e2ef:	ds int 0xf7
  40e2f2:	outs   dx,DWORD PTR ds:[esi]
  40e2f3:	xchg   ebx,eax
  40e2f4:	mov    ds:0xd60f713a,al
  40e2f9:	nop
  40e2fa:	mov    ch,0xb3
  40e2fc:	ret    0x46b9
  40e2ff:	lods   eax,DWORD PTR ds:[esi]
  40e300:	or     eax,DWORD PTR [ebx-0x271ca4db]
  40e306:	in     al,dx
  40e307:	retf   0x4abc
  40e30a:	xor    esp,DWORD PTR [ebx+0x6b9a65be]
  40e310:	(bad)  
  40e311:	fbld   TBYTE PTR [esi-0x15]
  40e314:	aam    0xfb
  40e316:	popa   
  40e317:	push   0xffffffc3
  40e319:	js     0x40e380
  40e31b:	mov    edi,edi
  40e31d:	add    BYTE PTR [ebx-0x16ff19b5],bl
  40e323:	adc    ch,0xdd
  40e326:	sub    BYTE PTR [eax-0x1922f643],dl
  40e32c:	add    esp,DWORD PTR [edi]
  40e32e:	add    al,0x2e
  40e330:	loopne 0x40e3a7
  40e332:	call   0xe6bed8ec
  40e337:	pop    ebp
  40e338:	xor    al,BYTE PTR [esi+ebx*8+0x44c97021]
  40e33f:	aas    
  40e340:	pop    esi
  40e341:	stc    
  40e342:	xchg   al,bl
  40e344:	xchg   edi,eax
  40e345:	rcl    BYTE PTR ds:0x97b0445a,0xee
  40e34c:	bound  ebp,QWORD PTR [eax]
  40e34e:	inc    ecx
  40e34f:	mov    esp,0x98164729
  40e354:	jo     0x40e316
  40e356:	dec    edi
  40e357:	jae    0x40e3b1
  40e359:	xchg   edi,esi
  40e35b:	stos   DWORD PTR es:[edi],eax
  40e35c:	nop
  40e35d:	cwde   
  40e35e:	mov    ds:0xf391f345,eax
  40e363:	push   cs
  40e364:	jb     0x40e348
  40e366:	push   esp
  40e367:	int    0x14
  40e369:	pop    esp
  40e36a:	test   DWORD PTR [eax],esi
  40e36c:	inc    ecx
  40e36d:	stc    
  40e36e:	cs add DWORD PTR cs:[edi],ecx
  40e372:	and    ebp,DWORD PTR [edi-0x275bd171]
  40e378:	lods   al,BYTE PTR ds:[esi]
  40e379:	mov    dl,0x6
  40e37b:	imul   esi,DWORD PTR [edx+0x19],0x77
  40e37f:	inc    edx
  40e380:	dec    ebx
  40e381:	add    DWORD PTR [ecx],esp
  40e383:	hlt    
  40e384:	sbb    bh,ch
  40e386:	stos   BYTE PTR es:[edi],al
  40e387:	mov    ebx,0x358c99e6
  40e38c:	outs   dx,BYTE PTR ds:[esi]
  40e38d:	xchg   DWORD PTR [ecx],ebx
  40e38f:	(bad)  
  40e390:	daa    
  40e391:	clc    
  40e392:	mov    WORD PTR [ebx+0x99de2d7],ss
  40e398:	sub    ebp,ebp
  40e39a:	mov    eax,ds:0xf3c9dd5d
  40e39f:	clc    
  40e3a0:	and    al,0xdc
  40e3a2:	xor    edx,DWORD PTR [ebx]
  40e3a4:	scas   eax,DWORD PTR es:[edi]
  40e3a5:	popf   
  40e3a6:	pop    esi
  40e3a7:	lods   al,BYTE PTR ds:[esi]
  40e3a8:	ficom  DWORD PTR [edi]
  40e3aa:	aaa    
  40e3ab:	(bad)  
  40e3ad:	pop    ecx
  40e3ae:	lock push DWORD PTR [ebx-0x4c]
  40e3b2:	mov    al,0x96
  40e3b4:	push   esi
  40e3b5:	mov    ds:0x90da007f,al
  40e3ba:	push   edi
  40e3bb:	mov    DWORD PTR [esi+0x2c0d8fb7],eax
  40e3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c2:	xor    ah,BYTE PTR [ecx]
  40e3c4:	mov    dh,0x64
  40e3c6:	iret   
  40e3c7:	cli    
  40e3c8:	retf   0xa350
  40e3cb:	jl     0x40e37b
  40e3cd:	ss push cs
  40e3cf:	dec    esp
  40e3d0:	or     al,0x24
  40e3d2:	mov    ds:0x5fad06d6,eax
  40e3d7:	pushf  
  40e3d8:	cmp    DWORD PTR [eax],ecx
  40e3da:	call   0x4c46:0xb2fda8ef
  40e3e1:	je     0x40e44b
  40e3e3:	rcl    BYTE PTR [eax-0x61c8bb33],cl
  40e3e9:	aaa    
  40e3ea:	icebp  
  40e3eb:	jp     0x40e3cc
  40e3ed:	rcl    DWORD PTR [edx+0x706f97bd],0x74
  40e3f4:	stos   BYTE PTR es:[edi],al
  40e3f5:	fild   WORD PTR [ecx+eiz*8]
  40e3f8:	mov    esp,DWORD PTR [eax]
  40e3fa:	xor    DWORD PTR [edi],ebx
  40e3fc:	into   
  40e3fd:	iret   
  40e3fe:	pop    esp
  40e3ff:	sahf   
  40e400:	pop    es
  40e401:	repz int 0x66
  40e404:	bound  edi,QWORD PTR [eax-0x754c1b2f]
  40e40a:	aas    
  40e40b:	ror    DWORD PTR [edi+0x158ca3ec],0x77
  40e412:	and    dl,bh
  40e414:	les    ebx,FWORD PTR [edi+ebp*1+0x0]
  40e418:	push   0xe71c986
  40e41d:	pop    ecx
  40e41e:	adc    al,0x4a
  40e420:	test   eax,0xb754728d
  40e425:	sbb    DWORD PTR [ecx+eiz*8-0x69],ecx
  40e429:	fisttp WORD PTR [esi+0x57cd4a8]
  40e42f:	xchg   ebp,eax
  40e430:	pop    es
  40e431:	jmp    0x369d:0x512ef6af
  40e438:	int3   
  40e439:	cmp    al,0x8b
  40e43b:	in     al,0x5c
  40e43d:	or     BYTE PTR [edx],0x6d
  40e440:	int3   
  40e441:	dec    edx
  40e442:	jo     0x40e444
  40e444:	sar    DWORD PTR [eax+0x656512f0],cl
  40e44a:	leave  
  40e44b:	pop    es
  40e44c:	mov    ds:0x2d52468b,al
  40e451:	leave  
  40e452:	xor    ebp,edi
  40e454:	(bad)  
  40e455:	int3   
  40e456:	cmc    
  40e457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e458:	lods   al,BYTE PTR ds:[esi]
  40e459:	inc    ebp
  40e45a:	arpl   WORD PTR ds:0xcd5ff297,si
  40e460:	sti    
  40e461:	add    eax,0xdc12a598
  40e466:	dec    eax
  40e467:	std    
  40e468:	iret   
  40e469:	push   edx
  40e46a:	das    
  40e46b:	ins    DWORD PTR es:[edi],dx
  40e46c:	loope  0x40e419
  40e46e:	inc    ebp
  40e46f:	adc    BYTE PTR [ecx+esi*8],cl
  40e472:	mov    ds:0xd605f0a4,eax
  40e477:	xor    DWORD PTR [ebp-0x40106bc2],ebp
  40e47d:	cmp    eax,DWORD PTR [ebx]
  40e47f:	inc    ecx
  40e480:	dec    ebx
  40e481:	out    0xd5,al
  40e483:	js     0x40e4b8
  40e485:	push   es
  40e486:	or     BYTE PTR [ecx-0x2a274eb9],cl
  40e48c:	sahf   
  40e48d:	fcom   DWORD PTR [edx+0x67817f13]
  40e493:	mov    al,0xaf
  40e495:	pusha  
  40e496:	sahf   
  40e497:	jecxz  0x40e49b
  40e499:	xor    al,BYTE PTR [edx]
  40e49b:	and    eax,0xd5f1c2b9
  40e4a0:	sti    
  40e4a1:	and    ebx,DWORD PTR [edi+0x72]
  40e4a4:	stos   BYTE PTR es:[edi],al
  40e4a5:	retf   
  40e4a6:	jmp    0x40e523
  40e4a8:	mov    ah,0x56
  40e4aa:	aam    0x9e
  40e4ac:	repnz inc ecx
  40e4ae:	mov    al,ds:0x8f12e3f
  40e4b3:	sbb    DWORD PTR [edi+esi*8],ebp
  40e4b6:	sbb    BYTE PTR [ebx+esi*1],al
  40e4b9:	iret   
  40e4ba:	fst    st(5)
  40e4bc:	pop    edx
  40e4bd:	add    al,0x8a
  40e4bf:	jne    0x40e464
  40e4c1:	pop    ecx
  40e4c2:	stos   BYTE PTR es:[edi],al
  40e4c3:	add    BYTE PTR [ebx+0x54],bl
  40e4c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c7:	loope  0x40e501
  40e4c9:	(bad)  
  40e4ca:	frstor [eax]
  40e4cc:	inc    esi
  40e4cd:	xchg   ebp,eax
  40e4ce:	les    esp,FWORD PTR [eax-0x2b6fda1b]
  40e4d4:	xor    al,0x44
  40e4d6:	ds out dx,al
  40e4d8:	sbb    bl,BYTE PTR [ecx]
  40e4da:	sbb    BYTE PTR [edx+0x4214059a],al
  40e4e0:	inc    edi
  40e4e1:	xchg   esp,eax
  40e4e2:	fdiv   QWORD PTR [edx+0x4022b1c7]
  40e4e8:	sub    bh,BYTE PTR [esi+0x6c]
  40e4eb:	xlat   BYTE PTR ds:[ebx]
  40e4ec:	int    0xcb
  40e4ee:	lock cmp DWORD PTR [edx],eax
  40e4f1:	sbb    eax,0x81338072
  40e4f6:	mov    dh,0xa9
  40e4f8:	xor    edi,DWORD PTR [edx+0x63]
  40e4fb:	xor    DWORD PTR [ecx-0x77],edi
  40e4fe:	hlt    
  40e4ff:	add    BYTE PTR ss:[esi+0x1f048b9a],bh
  40e506:	(bad)  
  40e507:	je     0x40e523
  40e509:	out    dx,al
  40e50a:	pop    ebx
  40e50b:	mov    al,ds:0x285e6b76
  40e510:	jmp    0xe0da:0x1d3ff585
  40e517:	retfw  
  40e519:	das    
  40e51a:	sub    eax,0xbecf2956
  40e51f:	jae    0x40e59f
  40e521:	repnz test eax,0xc6177832
  40e527:	test   DWORD PTR [esi-0x7acc1f19],eax
  40e52d:	pushf  
  40e52e:	lods   eax,DWORD PTR ds:[esi]
  40e52f:	add    eax,0x7da8eb62
  40e534:	jmp    0x40e5a0
  40e536:	fisttp WORD PTR [esi-0x72]
  40e539:	jg     0x40e55c
  40e53b:	fsub   QWORD PTR [ecx-0x1e]
  40e53e:	pop    ebx
  40e53f:	(bad)  
  40e540:	gs dec eax
  40e542:	lea    edx,[ecx]
  40e544:	adc    ebx,0xf12c7661
  40e54a:	mov    esi,cs
  40e54c:	retf   0x58b8
  40e54f:	(bad)  
  40e550:	loope  0x40e54b
  40e552:	mov    ebx,0xb902477c
  40e557:	int    0xea
  40e559:	pop    es
  40e55a:	inc    edi
  40e55b:	inc    ecx
  40e55c:	mov    bl,0xc1
  40e55e:	loopne 0x40e53c
  40e560:	test   DWORD PTR [eax-0x508663f7],edx
  40e566:	leave  
  40e567:	push   edi
  40e568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e569:	rol    DWORD PTR [ebx-0x6d],0xbb
  40e56d:	mov    al,ds:0x34595549
  40e572:	shl    BYTE PTR [ebp+0x4a],0x52
  40e576:	outs   dx,BYTE PTR ds:[esi]
  40e577:	add    ah,0x33
  40e57a:	scas   eax,DWORD PTR es:[edi]
  40e57b:	adc    eax,0x74ce103c
  40e580:	push   ebx
  40e581:	repz icebp 
  40e583:	sbb    eax,0xc5185734
  40e588:	les    ecx,FWORD PTR [ebx]
  40e58a:	dec    ebp
  40e58b:	shl    DWORD PTR ds:0xf4616df0,cl
  40e591:	repz push esi
  40e593:	mov    ds,WORD PTR [ebx]
  40e595:	(bad)  
  40e596:	and    ebx,DWORD PTR [eax]
  40e598:	jp     0x40e57d
  40e59a:	jb     0x40e610
  40e59c:	and    BYTE PTR ds:0x5b7f4c52,ch
  40e5a2:	mov    dh,al
  40e5a4:	out    0xed,al
  40e5a6:	idiv   DWORD PTR [ebp+edx*1+0x20]
  40e5aa:	and    al,0x7e
  40e5ac:	adc    al,BYTE PTR [ecx+0x32]
  40e5af:	in     al,dx
  40e5b0:	push   0xffffffaf
  40e5b2:	call   0xebae3cd8
  40e5b7:	lahf   
  40e5b8:	xchg   ebx,eax
  40e5b9:	data16 jno 0x40e5d9
  40e5bc:	or     DWORD PTR [edx+0x7a],esp
  40e5bf:	clc    
  40e5c0:	xchg   ebp,eax
  40e5c1:	and    bh,dh
  40e5c3:	mov    ebp,0x3e8307ab
  40e5c8:	add    eax,0x30c6c858
  40e5cd:	test   BYTE PTR [ecx-0x7e9a40f6],cl
  40e5d3:	mov    ?,WORD PTR [esi-0x59544b5f]
  40e5d9:	scas   al,BYTE PTR es:[edi]
  40e5da:	int3   
  40e5db:	fidivr DWORD PTR [edx]
  40e5dd:	jnp    0x40e60f
  40e5df:	test   al,0x2e
  40e5e1:	and    al,0x52
  40e5e3:	sub    eax,0xeee7ac12
  40e5e8:	jmp    0x2ff125a8
  40e5ed:	mov    esp,0x18b17b62
  40e5f2:	jno    0x40e5c3
  40e5f4:	dec    edi
  40e5f5:	mov    eax,0xce5d4b2e
  40e5fa:	inc    edx
  40e5fb:	adc    BYTE PTR [edx],ch
  40e5fd:	push   0xdaf8705b
  40e602:	jae    0x40e5e6
  40e604:	aaa    
  40e605:	inc    ebp
  40e606:	pop    edi
  40e607:	inc    edx
  40e608:	fs retw 
  40e60b:	mov    es,WORD PTR [ecx]
  40e60d:	mov    dh,0x78
  40e60f:	and    DWORD PTR [ebp+0x37ec2b65],edx
  40e615:	js     0x40e682
  40e617:	mov    bl,0xbc
  40e619:	dec    edx
  40e61a:	ret    0x5057
  40e61d:	sub    al,0x63
  40e61f:	addr16 inc ecx
  40e621:	sbb    al,BYTE PTR [eax]
  40e623:	sbb    cl,BYTE PTR [eax+0x43c75aa]
  40e629:	xor    esp,esp
  40e62b:	js     0x40e5e9
  40e62d:	dec    eax
  40e62e:	(bad)  [edx-0x251a4b69]
  40e634:	test   esp,edx
  40e636:	sahf   
  40e637:	push   eax
  40e638:	inc    ebp
  40e639:	jns    0x40e6b3
  40e63b:	dec    edi
  40e63c:	xchg   BYTE PTR [esi-0x1f8ab139],bl
  40e642:	or     ebp,0x1c
  40e645:	jg     0x40e5c8
  40e647:	lock push esp
  40e649:	xor    DWORD PTR [edx],ebx
  40e64b:	sub    eax,0xde504ac9
  40e650:	in     al,0xd0
  40e652:	xor    al,dl
  40e654:	ss test bh,bh
  40e657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e658:	(bad)  
  40e659:	gs out dx,al
  40e65b:	lahf   
  40e65c:	mov    ebx,DWORD PTR [eax]
  40e65e:	and    BYTE PTR [esp+ebx*2-0x5d],bl
  40e662:	in     al,0xa2
  40e664:	dec    DWORD PTR [edi-0x236f01e5]
  40e66a:	pop    ebx
  40e66b:	sti    
  40e66c:	ds xchg edx,eax
  40e66e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e66f:	mov    WORD PTR [eax+0x20],?
  40e672:	push   ds
  40e673:	ins    DWORD PTR es:[edi],dx
  40e674:	sub    BYTE PTR [eax+0x41fe7a5a],bl
  40e67a:	mov    gs,WORD PTR [esi+edx*1-0x34]
  40e67e:	push   ds
  40e67f:	test   ch,bh
  40e681:	je     0x40e6a6
  40e683:	push   0xb0eccb3
  40e688:	inc    ebx
  40e689:	push   edi
  40e68a:	xor    BYTE PTR [esi*1+0x302409ac],ah
  40e691:	imul   ebx,DWORD PTR ds:0x954f3a1d,0xaedcb61
  40e69b:	mov    ebp,DWORD PTR [esi+0xdd5dcab]
  40e6a1:	js     0x40e62a
  40e6a3:	repz (bad) 
  40e6a5:	xor    ebp,ecx
  40e6a7:	jns    0x40e64d
  40e6a9:	sub    ebp,esi
  40e6ab:	xor    DWORD PTR [ecx+0x4f85a73e],ebp
  40e6b1:	aaa    
  40e6b2:	sbb    ah,bh
  40e6b4:	mov    bl,0x7e
  40e6b6:	xchg   ecx,eax
  40e6b7:	jb     0x40e66e
  40e6b9:	addr16 popf 
  40e6bb:	mov    ebp,0xeb3045c0
  40e6c0:	mov    DWORD PTR [ebx+0x6680827e],0x20555103
  40e6ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6cb:	push   DWORD PTR [esi-0x39]
  40e6ce:	(bad)  
  40e6cf:	clc    
  40e6d0:	iret   
  40e6d1:	out    dx,eax
  40e6d2:	lock xor DWORD PTR [edi],eax
  40e6d5:	add    ah,BYTE PTR [edi]
  40e6d7:	(bad)  
  40e6d8:	jle    0x40e672
  40e6da:	mov    ebp,0x2f92ac54
  40e6df:	mov    eax,0x10b3bb10
  40e6e4:	push   0xc0600fea
  40e6e9:	xor    dh,ah
  40e6eb:	dec    edi
  40e6ec:	xchg   esi,eax
  40e6ed:	push   ebx
  40e6ee:	mov    esi,0x6b9b69fe
  40e6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6f4:	mov    ecx,0x29fe625e
  40e6f9:	test   DWORD PTR [edi+esi*8-0x48],eax
  40e6fd:	repnz (bad) 
  40e6ff:	sbb    eax,0x47f56098
  40e704:	sbb    eax,0x31b34472
  40e709:	ficom  DWORD PTR [edx]
  40e70b:	cmc    
  40e70c:	cs xchg ebp,eax
  40e70e:	add    DWORD PTR [eax],esp
  40e710:	loope  0x40e6a3
  40e712:	fwait
  40e713:	(bad)  
  40e714:	jo     0x40e74e
  40e716:	addr16 sbb dh,dl
  40e719:	sub    ebx,eax
  40e71b:	inc    eax
  40e71c:	inc    eax
  40e71d:	aad    0xfd
  40e71f:	leave  
  40e720:	lock mov cl,0xdb
  40e723:	push   es
  40e724:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40e726:	lds    eax,FWORD PTR [edx-0x6f]
  40e729:	ror    DWORD PTR [esi+0x57],1
  40e72c:	sbb    ebx,edi
  40e72e:	cs push ecx
  40e730:	and    cl,BYTE PTR [ebx]
  40e732:	aam    0x9
  40e734:	lahf   
  40e735:	lea    ecx,[esi+ebp*1]
  40e738:	xchg   ecx,eax
  40e739:	push   ebp
  40e73a:	rcr    BYTE PTR [eax-0x78],1
  40e73d:	cmp    al,0x31
  40e73f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e740:	cmc    
  40e741:	add    DWORD PTR [ecx+ebx*8],ecx
  40e744:	les    ebp,FWORD PTR [ebx]
  40e746:	xchg   ebp,eax
  40e747:	enter  0x551c,0x74
  40e74b:	xor    DWORD PTR [ebp+0x5a],edi
  40e74e:	and    al,al
  40e750:	dec    edx
  40e751:	cdq    
  40e752:	adc    eax,0x2092ee12
  40e757:	fisub  WORD PTR [esp+ebp*1]
  40e75a:	clc    
  40e75b:	or     DWORD PTR [edx],0x6b57aba4
  40e761:	push   ss
  40e762:	jo     0x40e79a
  40e764:	cdq    
  40e765:	into   
  40e766:	xor    eax,0xc1823d03
  40e76b:	sbb    DWORD PTR [eax+ebp*2-0x342c1e7b],ecx
  40e772:	and    DWORD PTR [ecx],0xeb32757a
  40e778:	adc    DWORD PTR [ebx],0x2332d722
  40e77e:	sub    BYTE PTR [ecx],al
  40e780:	repnz pop esi
  40e782:	mov    ebp,0x2d3de74d
  40e787:	out    dx,al
  40e788:	leave  
  40e789:	xchg   esi,eax
  40e78a:	loope  0x40e7be
  40e78c:	jmp    0x93b2:0x38377170
  40e793:	mov    bl,BYTE PTR [edi+edi*2+0x23e6e089]
  40e79a:	mov    ecx,DWORD PTR [eax+edi*8+0x1d330cfe]
  40e7a1:	jb     0x40e77d
  40e7a3:	(bad)  
  40e7a4:	jbe    0x40e75e
  40e7a6:	or     ah,dh
  40e7a8:	xchg   ebp,eax
  40e7a9:	ret    0xd8a9
  40e7ac:	inc    edx
  40e7ad:	and    DWORD PTR [esi+eiz*1-0x39401d3d],ecx
  40e7b4:	aad    0x31
  40e7b6:	jmp    0x3b04:0x584e6a9d
  40e7bd:	aam    0xa8
  40e7bf:	sbb    DWORD PTR [ebx],esp
  40e7c1:	jmp    0x40e829
  40e7c3:	fistp  DWORD PTR [edi]
  40e7c5:	push   edi
  40e7c6:	push   eax
  40e7c7:	cwde   
  40e7c8:	imul   ecx,DWORD PTR [ebp+0x50],0xcfe8af0e
  40e7cf:	lahf   
  40e7d0:	inc    ebx
  40e7d1:	xchg   edx,eax
  40e7d2:	jp     0x40e83b
  40e7d4:	mov    bh,0xe9
  40e7d6:	and    eax,0xe4adb22c
  40e7db:	adc    DWORD PTR [eax-0xd],eax
  40e7de:	sbb    eax,0xa9be0ab2
  40e7e3:	int    0x44
  40e7e5:	push   cs
  40e7e6:	faddp  st(4),st
  40e7e8:	adc    ebx,ebx
  40e7ea:	clc    
  40e7eb:	add    ah,BYTE PTR [esi-0x6cad203b]
  40e7f1:	dec    esp
  40e7f2:	pop    ecx
  40e7f3:	xchg   esp,eax
  40e7f4:	lock int3 
  40e7f6:	js     0x40e833
  40e7f8:	loope  0x40e798
  40e7fa:	mov    BYTE PTR [eax+edx*4+0x40],ah
  40e7fe:	lea    ecx,[ecx]
  40e800:	push   eax
  40e801:	js     0x40e7c4
  40e803:	mov    esp,0x9bbb3cc2
  40e808:	and    BYTE PTR [ebx+0x7],ch
  40e80b:	outs   dx,DWORD PTR ds:[esi]
  40e80c:	sub    BYTE PTR [ebp+0x35],bh
  40e80f:	sub    BYTE PTR [edx+0x54097bea],al
  40e815:	aad    0xfd
  40e817:	push   edx
  40e818:	pop    ds
  40e819:	mov    dh,0x55
  40e81b:	and    ebx,edx
  40e81d:	mov    bl,bl
  40e81f:	jle    0x40e7da
  40e821:	add    esi,DWORD PTR [edi]
  40e823:	inc    ebx
  40e824:	enter  0x3f15,0x28
  40e828:	jae    0x40e86b
  40e82a:	mov    dl,0x7e
  40e82c:	test   al,0x43
  40e82e:	or     dl,cl
  40e830:	push   es
  40e831:	mov    edi,0xc86813ae
  40e836:	outs   dx,BYTE PTR ds:[esi]
  40e837:	stc    
  40e838:	outs   dx,BYTE PTR ds:[esi]
  40e839:	adc    DWORD PTR [edx],edx
  40e83b:	retf   
  40e83c:	push   cs
  40e83d:	cmp    ebp,edi
  40e83f:	push   0x48ac0126
  40e844:	rcl    BYTE PTR [ebp+0x3d],0xb0
  40e848:	add    al,0x1e
  40e84a:	inc    edx
  40e84b:	add    al,0x1c
  40e84d:	jmp    0x40e85f
  40e84f:	mov    ecx,0x4bcb3d1
  40e854:	pop    esi
  40e855:	push   0xffffffd4
  40e857:	cmp    edx,DWORD PTR [edx]
  40e859:	je     0x40e8b9
  40e85b:	les    esi,FWORD PTR [eax+ebx*2-0x20]
  40e85f:	inc    edx
  40e860:	das    
  40e861:	clc    
  40e862:	nop
  40e863:	or     al,0x1
  40e865:	jo     0x40e8e6
  40e867:	enter  0x4b7,0xeb
  40e86b:	sbb    al,0xdd
  40e86d:	xchg   ecx,eax
  40e86e:	loop   0x40e895
  40e870:	xor    BYTE PTR [ebx+edi*4+0x0],ah
  40e874:	jle    0x40e89c
  40e876:	mov    esp,0x7c18102d
  40e87b:	out    0x33,al
  40e87d:	pop    esp
  40e87e:	add    edx,DWORD PTR [edx]
  40e880:	in     eax,0x6a
  40e882:	jmp    0xe49f:0xb6219794
  40e889:	(bad)  
  40e88a:	fiadd  WORD PTR [esi-0x73]
  40e88d:	mov    al,BYTE PTR [eax]
  40e88f:	cmc    
  40e890:	sahf   
  40e891:	sub    esi,0x5e
  40e894:	enter  0x78e,0x92
  40e898:	jl     0x40e88e
  40e89a:	jg     0x40e910
  40e89c:	push   cs
  40e89d:	stc    
  40e89e:	push   ss
  40e89f:	lds    edx,FWORD PTR [edi-0x41aab162]
  40e8a5:	add    BYTE PTR [edx],dh
  40e8a7:	(bad)  
  40e8a8:	(bad)  
  40e8a9:	sub    al,0x77
  40e8ab:	fwait
  40e8ac:	sbb    dh,BYTE PTR [eax+0x5e]
  40e8af:	imul   edx,edi,0x48
  40e8b2:	sbb    esi,DWORD PTR [ecx+0x63]
  40e8b5:	arpl   sp,dx
  40e8b7:	mov    ds:0xbc138489,eax
  40e8bc:	mov    dh,BYTE PTR [ebp+0x2c]
  40e8bf:	sbb    edx,ebp
  40e8c1:	int3   
  40e8c2:	and    edx,eax
  40e8c4:	fs test eax,0xb9ed736f
  40e8ca:	adc    ecx,edi
  40e8cc:	xor    al,0x2
  40e8ce:	mov    ebp,DWORD PTR [eax+0x2a]
  40e8d1:	call   FWORD PTR [edi+0x68]
  40e8d4:	or     eax,0x31e782d5
  40e8d9:	(bad)  
  40e8da:	das    
  40e8db:	mov    eax,ds:0xe5b86ec7
  40e8e0:	or     eax,0x49b28c4e
  40e8e5:	jae    0x40e8a0
  40e8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8e8:	sub    BYTE PTR [eax],cl
  40e8ea:	mov    ecx,0x9fbd4e6d
  40e8ef:	jae    0x40e872
  40e8f1:	xor    eax,0x88a890c8
  40e8f6:	pusha  
  40e8f7:	xor    cl,bh
  40e8f9:	fidivr WORD PTR [edi]
  40e8fb:	sub    ch,dl
  40e8fd:	xlat   BYTE PTR ds:[ebx]
  40e8fe:	sub    ebx,0x8299fba1
  40e904:	mov    WORD PTR [ebp+0x1c],es
  40e907:	call   0x96bc3334
  40e90c:	cmovo  edx,DWORD PTR [edi+0x60]
  40e910:	and    eax,0x13a1941c
  40e915:	mov    ecx,0xfa652794
  40e91a:	popf   
  40e91b:	mov    ds:0xb1116414,al
  40e920:	and    al,0x4b
  40e922:	out    dx,al
  40e923:	pop    ecx
  40e924:	(bad)  
  40e925:	push   edx
  40e926:	dec    ebx
  40e927:	adc    esp,ecx
  40e929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e92a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e92b:	mov    ebx,0xb1b9e756
  40e930:	mov    BYTE PTR [edi-0x18],dl
  40e933:	data16 fldcw WORD PTR [edx]
  40e936:	pushf  
  40e937:	mov    al,ds:0xb6060033
  40e93c:	mov    ah,0x86
  40e93e:	cs jl  0x40e919
  40e941:	stos   DWORD PTR es:[edi],eax
  40e942:	jle    0x40e99f
  40e944:	popa   
  40e945:	xchg   dh,dl
  40e947:	mov    dl,0x60
  40e949:	jae    0x40e98e
  40e94b:	cmp    BYTE PTR [eax+edx*8-0x14b23a2b],cl
  40e952:	push   0xfffffff8
  40e954:	xchg   BYTE PTR [edi+0x5a0b31ba],bh
  40e95a:	inc    esi
  40e95b:	push   ss
  40e95c:	inc    edx
  40e95d:	daa    
  40e95e:	xor    dl,BYTE PTR [esp+ecx*2]
  40e961:	les    esp,FWORD PTR [ebp+0x7085f2b2]
  40e967:	(bad)  
  40e968:	(bad)  
  40e969:	mov    edi,0xfb40d994
  40e96e:	and    ch,BYTE PTR [eax-0x5e]
  40e971:	shl    BYTE PTR [edi-0x48503e92],1
  40e977:	and    DWORD PTR [eax-0xad5fc36],0x5e
  40e97e:	int    0x6
  40e980:	fwait
  40e981:	lahf   
  40e982:	fst    QWORD PTR [edx+0x76]
  40e985:	js     0x40e93e
  40e987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e988:	cmp    BYTE PTR [ecx],cl
  40e98a:	add    DWORD PTR [eax+eax*8-0x70cbbb77],edi
  40e991:	xor    bh,ch
  40e993:	or     DWORD PTR [edi-0x4c],esi
  40e996:	push   0xfb9ee6c3
  40e99b:	faddp  st(5),st
  40e99d:	jle    0x40e981
  40e99f:	add    BYTE PTR [ebp-0x14e5a881],ch
  40e9a5:	cmp    al,0xa3
  40e9a8:	pop    ecx
  40e9a9:	push   cs
  40e9aa:	mov    DWORD PTR [eax-0x4a9c4a25],ebx
  40e9b0:	mov    eax,ds:0x33f78cec
  40e9b5:	out    dx,eax
  40e9b6:	dec    eax
  40e9b7:	push   ss
  40e9b8:	js     0x40ea0b
  40e9ba:	sbb    ecx,edx
  40e9bc:	jecxz  0x40ea2e
  40e9be:	jp     0x40e940
  40e9c0:	mov    esi,0x8fd8e9cf
  40e9c5:	cli    
  40e9c6:	cmp    DWORD PTR [ebx-0x5fee415d],ebx
  40e9cc:	jmp    0xbfd12ac1
  40e9d1:	ret    
  40e9d2:	dec    ebp
  40e9d3:	aaa    
  40e9d4:	es dec esi
  40e9d6:	jns    0x40e9b0
  40e9d8:	push   ebp
  40e9d9:	jns    0x40e9f8
  40e9db:	cmp    BYTE PTR [eax+0x69bc455c],0x69
  40e9e2:	cli    
  40e9e3:	div    DWORD PTR [ecx+esi*2]
  40e9e6:	jmp    0xf7045199
  40e9eb:	dec    ebp
  40e9ec:	mov    DWORD PTR [eax+esi*4],ebx
  40e9ef:	sar    DWORD PTR [edx-0x6a34ab59],cl
  40e9f5:	hlt    
  40e9f6:	test   DWORD PTR [esi-0x41],esp
  40e9f9:	fucom  st(1)
  40e9fb:	clc    
  40e9fc:	mov    al,0x1d
  40e9fe:	push   ds
  40e9ff:	mov    BYTE PTR ds:0x4bbcd56,al
  40ea05:	pop    eax
  40ea06:	pop    es
  40ea07:	sbb    eax,0x91447245
  40ea0c:	enter  0x1d00,0xd3
  40ea10:	out    0x7f,al
  40ea12:	or     al,0xd2
  40ea14:	loop   0x40ea61
  40ea16:	push   ds
  40ea17:	pop    edx
  40ea18:	ins    DWORD PTR es:[edi],dx
  40ea19:	sbb    dh,cl
  40ea1b:	pop    esp
  40ea1c:	xor    BYTE PTR [edi+eax*1+0x15a19e33],cl
  40ea23:	aas    
  40ea24:	mov    DWORD PTR [edx],esi
  40ea26:	nop
  40ea27:	pop    ss
  40ea28:	jb     0x40ea7e
  40ea2a:	jb     0x40e9e5
  40ea2c:	fwait
  40ea2d:	mov    esi,0x68e1168c
  40ea32:	add    al,0xa
  40ea34:	or     ch,BYTE PTR [esi]
  40ea36:	jmp    0x3eff:0x1c1c50c1
  40ea3d:	jmp    0x40ea71
  40ea3f:	push   edi
  40ea40:	cmp    al,0x33
  40ea42:	push   esi
  40ea43:	jl     0x40ea42
  40ea45:	sub    esp,ebp
  40ea47:	and    DWORD PTR [edx+0x5b],esi
  40ea4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea4b:	leave  
  40ea4c:	mov    bl,0x91
  40ea4e:	cmp    DWORD PTR [edi+esi*2-0x5352efdc],ebp
  40ea55:	leave  
  40ea56:	retf   
  40ea57:	test   esi,edx
  40ea59:	loopne 0x40ea19
  40ea5b:	addr16 pop ecx
  40ea5d:	ret    0xed79
  40ea60:	ins    BYTE PTR es:[edi],dx
  40ea61:	dec    esi
  40ea62:	push   0xd1060a62
  40ea67:	bound  ebx,QWORD PTR [edi]
  40ea69:	adc    al,0x54
  40ea6b:	std    
  40ea6c:	cmp    DWORD PTR [eax-0x491c2add],ebx
  40ea72:	pop    edx
  40ea73:	into   
  40ea74:	adc    eax,0x2d1f73ed
  40ea79:	cmp    al,0x70
  40ea7b:	aam    0x4d
  40ea7d:	mov    al,ds:0x258e816d
  40ea82:	jae    0x40ea8f
  40ea84:	stc    
  40ea85:	inc    esi
  40ea86:	out    dx,al
  40ea87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea88:	dec    ecx
  40ea89:	xchg   ebx,eax
  40ea8a:	jl     0x40ead0
  40ea8c:	mov    eax,ds:0xb0caefea
  40ea91:	iret   
  40ea92:	sbb    al,0x5a
  40ea94:	dec    esp
  40ea95:	in     al,0x7b
  40ea97:	aaa    
  40ea98:	ficomp DWORD PTR [esp+0x58]
  40ea9c:	dec    esp
  40ea9d:	jne    0x40ea54
  40ea9f:	lock or DWORD PTR [edi-0x4bd4852d],esi
  40eaa6:	mov    eax,0x389e680a
  40eaab:	ins    DWORD PTR es:[edi],dx
  40eaac:	shl    BYTE PTR [ecx],1
  40eaae:	cwde   
  40eaaf:	cmp    BYTE PTR [edi],0x4e
  40eab2:	out    dx,al
  40eab3:	mov    WORD PTR [eax+0x1e4ebcb3],cs
  40eab9:	dec    DWORD PTR [esi]
  40eabb:	loope  0x40ea70
  40eabd:	shl    BYTE PTR [esi+0x1],1
  40eac0:	icebp  
  40eac1:	pop    ds
  40eac2:	push   ecx
  40eac3:	cwde   
  40eac4:	shr    DWORD PTR [ebx+0x4ec1bec9],1
  40eaca:	or     al,BYTE PTR [edi]
  40eacc:	and    BYTE PTR [esi-0x4d84ba1d],dh
  40ead2:	not    DWORD PTR [edi-0x64]
  40ead5:	push   ds
  40ead6:	std    
  40ead7:	aas    
  40ead8:	adc    ebp,esi
  40eada:	in     eax,dx
  40eadb:	jb     0x40eae8
  40eadd:	ss dec edi
  40eadf:	icebp  
  40eae0:	cld    
  40eae1:	mov    ?,WORD PTR [edi+eax*8+0x26]
  40eae5:	inc    ecx
  40eae6:	or     BYTE PTR [eax],0xd6
  40eae9:	jns    0x40eb01
  40eaeb:	sti    
  40eaec:	mov    ds:0x2a1870fe,al
  40eaf1:	sub    BYTE PTR [ebp-0xb],dl
  40eaf4:	push   cs
  40eaf5:	cwde   
  40eaf6:	mov    ah,0xb2
  40eaf8:	icebp  
  40eaf9:	stos   DWORD PTR es:[edi],eax
  40eafa:	adc    eax,0x7c1509a8
  40eaff:	dec    edi
  40eb00:	in     al,0x72
  40eb02:	jns    0x40eadb
  40eb04:	fistp  WORD PTR [eax+0x68]
  40eb07:	adc    eax,0x7158840a
  40eb0c:	mov    esp,0xceae403b
  40eb11:	dec    ebx
  40eb12:	out    dx,al
  40eb13:	pop    edi
  40eb14:	(bad)  
  40eb15:	fisubr WORD PTR [ebp-0x6729b275]
  40eb1b:	sub    ah,BYTE PTR [ebx]
  40eb1d:	loop   0x40eb5b
  40eb1f:	call   0xd8ea6aa3
  40eb24:	adc    DWORD PTR [ebx-0x3f8eddef],0x86744b43
  40eb2e:	aaa    
  40eb2f:	mov    ch,0x27
  40eb31:	aam    0xc6
  40eb33:	lea    esp,[esi]
  40eb35:	pop    ds
  40eb36:	in     eax,dx
  40eb37:	pop    edx
  40eb38:	lods   al,BYTE PTR ds:[esi]
  40eb39:	pushf  
  40eb3a:	outs   dx,BYTE PTR ds:[esi]
  40eb3b:	push   esi
  40eb3c:	dec    ebp
  40eb3d:	or     al,0x70
  40eb3f:	pop    ds
  40eb40:	pop    ecx
  40eb41:	test   al,0xe6
  40eb43:	int    0x33
  40eb45:	jbe    0x40eb0e
  40eb47:	lods   al,BYTE PTR ds:[esi]
  40eb48:	das    
  40eb49:	sbb    eax,0x7f1068a7
  40eb4e:	lods   al,BYTE PTR ds:[esi]
  40eb4f:	test   DWORD PTR [ebx-0x57],eax
  40eb52:	imul   ecx,DWORD PTR [edx+0x7f5e1bb9],0xffffffbd
  40eb59:	aaa    
  40eb5a:	arpl   di,bx
  40eb5c:	mov    gs,WORD PTR [ebx+esi*2]
  40eb5f:	hlt    
  40eb60:	inc    ebp
  40eb61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb62:	mov    esi,0x9a0cc11
  40eb67:	loope  0x40ebd6
  40eb69:	jmp    0x8801d05b
  40eb6e:	jge    0x40ebc3
  40eb70:	cmp    DWORD PTR [eax+0x60],esi
  40eb73:	setns  BYTE PTR [ecx]
  40eb76:	lods   eax,DWORD PTR ds:[esi]
  40eb77:	repz loop 0x40eb3a
  40eb7a:	cli    
  40eb7b:	push   esi
  40eb7c:	add    cl,BYTE PTR [edx]
  40eb7e:	xor    ecx,DWORD PTR [eax+0x1d]
  40eb81:	pop    esp
  40eb82:	ins    DWORD PTR es:[edi],dx
  40eb83:	inc    edi
  40eb84:	sahf   
  40eb85:	jecxz  0x40ebf0
  40eb87:	mov    WORD PTR [ebp-0x22a0a20c],ds
  40eb8d:	or     al,0xf9
  40eb8f:	jnp    0x40eb19
  40eb91:	xor    BYTE PTR [edi],al
  40eb93:	and    esp,ebp
  40eb95:	mov    ds:0xaa8e8928,al
  40eb9a:	mov    ch,0x6f
  40eb9c:	xor    DWORD PTR [edi+ecx*1],0xffffffbc
  40eba0:	sahf   
  40eba1:	jmp    0x40eb56
  40eba3:	jo     0x40ebf1
  40eba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba6:	dec    esp
  40eba7:	push   eax
  40eba8:	icebp  
  40eba9:	lea    esp,[ecx+0x774df36d]
  40ebaf:	in     al,dx
  40ebb0:	xor    ebx,DWORD PTR [eiz*2+0x3dcffa0a]
  40ebb7:	xchg   edi,eax
  40ebb8:	sub    BYTE PTR [ebx-0x69],0x7a
  40ebbc:	cmp    BYTE PTR [ebp-0x7],bh
  40ebbf:	mov    bh,0xf2
  40ebc1:	cdq    
  40ebc2:	fnstsw WORD PTR [ecx+0x19]
  40ebc5:	lds    eax,FWORD PTR [edx+0x3d]
  40ebc8:	scas   eax,DWORD PTR es:[edi]
  40ebc9:	outs   dx,BYTE PTR ds:[esi]
  40ebca:	mov    bl,0x58
  40ebcc:	pop    esi
  40ebcd:	hlt    
  40ebce:	stos   BYTE PTR es:[edi],al
  40ebcf:	push   0x6a1bae63
  40ebd4:	xchg   esp,eax
  40ebd5:	cwde   
  40ebd6:	mov    al,ds:0xaf9876e9
  40ebdb:	mov    edx,0x99d35102
  40ebe0:	popa   
  40ebe1:	clc    
  40ebe2:	xchg   edx,eax
  40ebe3:	push   ebp
  40ebe4:	das    
  40ebe5:	pop    eax
  40ebe6:	aaa    
  40ebe7:	jl     0x40ebfc
  40ebe9:	pop    eax
  40ebea:	cmc    
  40ebeb:	ins    DWORD PTR es:[edi],dx
  40ebec:	cdq    
  40ebed:	lock add eax,0x46b302e3
  40ebf3:	std    
  40ebf4:	jp     0x40ec6a
  40ebf6:	xor    BYTE PTR [eax+0x51c3a445],ch
  40ebfc:	(bad)  
  40ebfe:	push   ebx
  40ebff:	ret    
  40ec00:	mov    bl,0x3c
  40ec02:	pusha  
  40ec03:	pop    ds
  40ec04:	scas   eax,DWORD PTR es:[edi]
  40ec05:	xchg   DWORD PTR [ecx-0x73048d91],esi
  40ec0b:	loopne 0x40ec0b
  40ec0d:	sbb    BYTE PTR [edx-0x752d2a6b],ah
  40ec13:	out    0xa0,eax
  40ec15:	test   eax,0x51d656f
  40ec1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec1b:	jmp    0x5a5d288
  40ec20:	sbb    dh,BYTE PTR [edx+0x162739b1]
  40ec26:	and    cl,BYTE PTR [esi+0x33a60720]
  40ec2c:	pop    edx
  40ec2d:	mov    ch,0x16
  40ec2f:	mov    eax,ds:0xe618963c
  40ec34:	adc    DWORD PTR [ecx+ebp*1],esi
  40ec37:	jo     0x40ec47
  40ec39:	in     eax,dx
  40ec3a:	xor    ebp,eax
  40ec3c:	rol    BYTE PTR [ebx],0xa9
  40ec3f:	sbb    eax,0x17cef036
  40ec44:	psubq  mm6,mm1
  40ec47:	sub    BYTE PTR [esi-0x7c],al
  40ec4a:	mov    edi,0xdd2c2d11
  40ec4f:	mov    ebp,0x36f08cff
  40ec54:	ss xchg ebx,eax
  40ec56:	xchg   ecx,eax
  40ec57:	daa    
  40ec58:	adc    eax,0x5868fc0a
  40ec5d:	inc    ebx
  40ec5e:	rol    DWORD PTR [esi+0x7e],1
  40ec61:	(bad)  
  40ec62:	cli    
  40ec63:	push   eax
  40ec64:	sub    DWORD PTR [esp+eiz*4-0x4b9db4b],ecx
  40ec6b:	mov    ah,0xd8
  40ec6d:	dec    ebx
  40ec6e:	jle    0x40ec91
  40ec70:	sub    al,ah
  40ec72:	lea    esp,[ebp+0x32]
  40ec75:	sbb    DWORD PTR [eax-0x4b],esi
  40ec78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec79:	pop    esp
  40ec7a:	in     al,dx
  40ec7b:	clc    
  40ec7c:	ret    0xe280
  40ec7f:	fnstsw WORD PTR [ecx+ecx*2]
  40ec82:	scas   eax,DWORD PTR es:[edi]
  40ec83:	bound  esi,QWORD PTR [edi+eax*8-0xdfd6a3]
  40ec8a:	cmp    DWORD PTR [eax+edx*1],0xffffff8a
  40ec8e:	dec    esi
  40ec8f:	ds and dh,bl
  40ec92:	and    eax,0x16fff261
  40ec97:	shr    DWORD PTR [ecx],cl
  40ec99:	inc    eax
  40ec9a:	jns    0x40ed15
  40ec9c:	mov    eax,ds:0x253aa421
  40eca1:	ret    0x9212
  40eca4:	lock inc ebx
  40eca6:	or     edi,ecx
  40eca8:	inc    ebp
  40eca9:	call   DWORD PTR [edx+edx*8-0x34]
  40ecad:	(bad)  
  40ecae:	aaa    
  40ecaf:	out    0xa,eax
  40ecb1:	and    BYTE PTR [edx-0x30],dl
  40ecb4:	test   eax,0x624c6426
  40ecb9:	call   0xd5184ce7
  40ecbe:	xchg   ecx,eax
  40ecbf:	pop    es
  40ecc0:	push   ecx
  40ecc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc2:	pop    esp
  40ecc3:	outs   dx,BYTE PTR ds:[esi]
  40ecc4:	push   esi
  40ecc5:	jmp    0xdca7:0x1480393c
  40eccc:	mov    bh,0xe5
  40ecce:	push   edi
  40eccf:	mov    dl,0x34
  40ecd1:	or     eax,0x6d7090a1
  40ecd6:	fmul   DWORD PTR [edx+0x1fee7fca]
  40ecdc:	adc    ah,cl
  40ecde:	fsub   DWORD PTR [eax-0x70]
  40ece1:	xchg   ch,bh
  40ece3:	adc    BYTE PTR [eax],al
  40ece5:	push   esp
  40ece6:	jge    0x40ed63
  40ece8:	xchg   ecx,eax
  40ece9:	out    dx,eax
  40ecea:	fst    DWORD PTR [ecx-0xa4f3425]
  40ecf0:	cmp    bh,BYTE PTR [ecx+0x56]
  40ecf3:	fyl2x  
  40ecf5:	inc    esi
  40ecf6:	sbb    BYTE PTR [ebx-0x1da400ce],ch
  40ecfc:	stc    
  40ecfd:	das    
  40ecfe:	(bad)
  40ed01:	mov    cl,0xd8
  40ed03:	jo     0x40ecae
  40ed05:	or     edx,DWORD PTR [eax-0x2effbf7b]
  40ed0b:	pushf  
  40ed0c:	fist   DWORD PTR [ecx+0x1de6192e]
  40ed12:	hlt    
  40ed13:	aad    0x50
  40ed15:	pop    eax
  40ed16:	int    0x69
  40ed18:	inc    ecx
  40ed19:	push   ds
  40ed1a:	fistp  WORD PTR [edx+0xf]
  40ed1d:	fld    TBYTE PTR [eax]
  40ed1f:	cmp    eax,0xf7561de3
  40ed24:	stc    
  40ed25:	aaa    
  40ed26:	aas    
  40ed27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed28:	xor    eax,0xbee4441
  40ed2d:	add    edi,edx
  40ed2f:	mov    dh,bh
  40ed31:	pushf  
  40ed32:	jecxz  0x40ed17
  40ed34:	je     0x40ecc5
  40ed36:	push   ebx
  40ed37:	lds    ebx,FWORD PTR [edx+0x7e43521a]
  40ed3d:	dec    ebp
  40ed3e:	or     BYTE PTR [ebx+0x78],0xd8
  40ed42:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40ed44:	loopne 0x40ed67
  40ed46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed47:	rcr    DWORD PTR gs:[ecx+ebp*8+0x1],1
  40ed4c:	into   
  40ed4d:	and    al,0xc4
  40ed4f:	cdq    
  40ed50:	xor    BYTE PTR [edi],ch
  40ed52:	inc    ecx
  40ed53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed54:	pop    ebx
  40ed55:	jae    0x40ed90
  40ed57:	mov    ebp,0xde31c533
  40ed5c:	inc    BYTE PTR [esi+0x40f38dc6]
  40ed62:	repnz aas 
  40ed64:	pop    ebp
  40ed65:	jno    0x40ed15
  40ed67:	adc    edi,esp
  40ed69:	popf   
  40ed6a:	xor    al,0xad
  40ed6c:	mov    ecx,DWORD PTR [esi-0x71e9dbbc]
  40ed72:	add    BYTE PTR [edx+ecx*4-0x75],0xda
  40ed77:	out    dx,eax
  40ed78:	mov    ds:0x7dfdc966,al
  40ed7d:	push   es
  40ed7e:	in     al,dx
  40ed7f:	loopne 0x40ed78
  40ed81:	mov    edi,0x4f61e7c6
  40ed86:	sbb    eax,eax
  40ed88:	cmp    dl,BYTE PTR [edi-0x80]
  40ed8b:	cdq    
  40ed8c:	sub    edx,DWORD PTR [ebx+0x51477a04]
  40ed92:	sbb    al,BYTE PTR [ebx-0x7b]
  40ed95:	ret    
  40ed96:	aaa    
  40ed97:	and    BYTE PTR [ecx-0xd5a971a],cl
  40ed9d:	cmp    eax,0x70e36599
  40eda2:	sub    BYTE PTR [ebp+0x5],ah
  40eda5:	mov    bl,0xac
  40eda7:	mov    edi,0x50e4c933
  40edac:	xor    DWORD PTR [esi+0x47c37d3c],esp
  40edb2:	inc    DWORD PTR [edx-0x1f]
  40edb5:	std    
  40edb6:	les    ecx,FWORD PTR [edi+0x66167a3f]
  40edbc:	push   DWORD PTR [ecx]
  40edbe:	(bad)  
  40edbf:	call   0xf3c:0x758e6df3
  40edc6:	cld    
  40edc7:	sar    DWORD PTR [ebx+0x7c790a96],0xdf
  40edce:	mov    ch,0x6d
  40edd0:	jle    0x40edd8
  40edd2:	mov    eax,0x985ef678
  40edd7:	mov    ds:0xa42e4ef4,eax
  40eddc:	push   ds
  40eddd:	pop    edx
  40edde:	data16 jns 0x40ede5
  40ede1:	dec    ebx
  40ede2:	pop    ds
  40ede3:	mov    ebp,0x82a3b5e8
  40ede8:	cmp    BYTE PTR ds:[eax+0x1d],ch
  40edec:	inc    ebx
  40eded:	out    dx,eax
  40edee:	jge    0x40ee0c
  40edf0:	sub    eax,0xc59106cc
  40edf5:	mov    eax,ds:0x96c28e7e
  40edfa:	push   0xffffff8f
  40edfc:	pop    esp
  40edfd:	push   0x44fb03ea
  40ee02:	ss out dx,eax
  40ee04:	aam    0x2a
  40ee06:	push   es
  40ee07:	das    
  40ee08:	dec    esi
  40ee09:	cwde   
  40ee0a:	dec    bp
  40ee0c:	mov    edi,0x4d954666
  40ee11:	shl    BYTE PTR [ebp+esi*2-0x38],0x10
  40ee16:	add    al,0x3e
  40ee18:	idiv   DWORD PTR [edi-0x44]
  40ee1b:	loop   0x40ee81
  40ee1d:	cmp    dl,BYTE PTR [ecx-0x45]
  40ee20:	push   esp
  40ee21:	pop    ss
  40ee22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee23:	mov    fs,WORD PTR gs:[ebx-0x5de804e8]
  40ee2a:	fdiv   DWORD PTR [ebx]
  40ee2c:	ret    0xdcf0
  40ee2f:	retf   0xba34
  40ee32:	xor    eax,0x77c8cde8
  40ee37:	cmp    DWORD PTR [esp+eax*2],ecx
  40ee3a:	sbb    eax,0xaa7beb79
  40ee3f:	sub    al,0x98
  40ee41:	outs   dx,BYTE PTR ds:[esi]
  40ee42:	mov    esp,0x31fe2b1a
  40ee47:	in     al,dx
  40ee48:	xor    DWORD PTR [esi],0x6c0f6d01
  40ee4e:	(bad)  
  40ee4f:	mov    eax,0x38a56360
  40ee54:	jno    0x40ee16
  40ee56:	rcr    DWORD PTR [esi+0x27],1
  40ee59:	inc    ebp
  40ee5a:	xchg   esp,eax
  40ee5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee5c:	pop    esp
  40ee5d:	icebp  
  40ee5e:	xchg   ecx,eax
  40ee5f:	mov    ebx,0x65f11be9
  40ee64:	lods   eax,DWORD PTR ds:[esi]
  40ee65:	ficom  DWORD PTR [edi]
  40ee67:	jnp    0x40eed8
  40ee69:	pop    ecx
  40ee6a:	adc    esi,DWORD PTR [ecx-0x67]
  40ee6d:	fmul   DWORD PTR [edx-0x1]
  40ee70:	cmc    
  40ee71:	(bad)  
  40ee72:	fist   WORD PTR [edi-0x2aa522a2]
  40ee78:	(bad)  
  40ee79:	pop    ebx
  40ee7a:	add    ebp,DWORD PTR [esi+esi*1-0x658bb404]
  40ee81:	sub    al,0x59
  40ee83:	retf   0x29da
  40ee86:	aas    
  40ee87:	(bad)  
  40ee88:	(bad)  [esi+0x39ce0eed]
  40ee8e:	jle    0x40ee89
  40ee90:	(bad)  
  40ee91:	loop   0x40ee56
  40ee93:	hlt    
  40ee94:	push   eax
  40ee95:	push   ecx
  40ee96:	inc    eax
  40ee97:	(bad)  [esi-0x52]
  40ee9a:	mov    ch,0x66
  40ee9c:	inc    ebx
  40ee9d:	inc    ecx
  40ee9e:	cdq    
  40ee9f:	stos   BYTE PTR es:[edi],al
  40eea0:	(bad)  
  40eea2:	pop    ds
  40eea3:	or     DWORD PTR [ebx-0x2d],edx
  40eea6:	hlt    
  40eea7:	loopne 0x40ee51
  40eea9:	(bad)  
  40eeaa:	mov    ch,0xaa
  40eeac:	aam    0x8d
  40eeae:	adc    al,0xb5
  40eeb0:	pop    ebp
  40eeb1:	add    al,0x13
  40eeb3:	es jp  0x40ee83
  40eeb6:	(bad)  
  40eeb7:	xchg   ecx,eax
  40eeb8:	cld    
  40eeb9:	mov    edx,0x5c416325
  40eebe:	mov    esp,0xc9d8e3a9
  40eec3:	pop    esi
  40eec4:	into   
  40eec5:	push   es
  40eec6:	jle    0x40ef2a
  40eec8:	(bad)  
  40eec9:	fs and eax,0xc82dd5ea
  40eecf:	adc    bl,BYTE PTR [ecx-0x60465b14]
  40eed5:	int    0xb2
  40eed7:	jmp    0x40ee62
  40eed9:	jge    0x40eebc
  40eedb:	rcl    DWORD PTR [edi+0x7560010c],1
  40eee1:	imul   ebp,esi,0xfe5fa48c
  40eee7:	mov    BYTE PTR [edi+ebx*1-0x1afc55dd],dh
  40eeee:	ins    BYTE PTR es:[edi],dx
  40eeef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eef0:	xor    BYTE PTR [esi],dh
  40eef2:	xor    BYTE PTR [esi-0x4a],al
  40eef5:	sub    al,0x98
  40eef7:	test   al,0x43
  40eef9:	jle    0x40ef50
  40eefb:	jge    0x40eeb5
  40eefd:	sbb    bh,bl
  40eeff:	test   al,0x0
  40ef01:	add    dl,bl
  40ef03:	aam    0xf6
  40ef05:	(bad)  [esi-0x6d5e6aa9]
  40ef0b:	mov    WORD PTR [ebp-0x3d],?
  40ef0e:	cmp    BYTE PTR [ebx+0x2e],bh
  40ef11:	mov    ebp,0xfec0f1a1
  40ef16:	out    0x14,al
  40ef18:	add    BYTE PTR [ecx-0x17],cl
  40ef1b:	xchg   BYTE PTR gs:[eax],bl
  40ef1e:	call   FWORD PTR [eax]
  40ef20:	add    al,0xec
  40ef22:	lods   eax,DWORD PTR ds:[esi]
  40ef23:	out    0x71,eax
  40ef25:	mov    ds:0x69be2119,al
  40ef2a:	jnp    0x40ef47
  40ef2c:	xchg   ebx,eax
  40ef2d:	pop    ecx
  40ef2e:	pop    ebx
  40ef2f:	rcr    BYTE PTR [edi-0x3f],0x95
  40ef33:	cmp    ch,cl
  40ef35:	test   DWORD PTR [edi],ebx
  40ef37:	xchg   esi,eax
  40ef38:	sbb    BYTE PTR [ebx+0x3148d5f4],0xde
  40ef3f:	push   ebp
  40ef40:	push   edx
  40ef41:	jns    0x40ef27
  40ef43:	out    dx,al
  40ef44:	test   al,0x5c
  40ef46:	in     al,0x21
  40ef48:	mov    ah,BYTE PTR [ebp+0x62a3eeb9]
  40ef4e:	(bad)  [esi+edx*1-0x43]
  40ef52:	xor    eax,0x36719eba
  40ef57:	int    0x5
  40ef59:	test   eax,0xd9ca5add
  40ef5e:	in     eax,0xa8
  40ef60:	sbb    DWORD PTR [edx+edx*2-0x6d887a73],eax
  40ef67:	pusha  
  40ef68:	push   edi
  40ef69:	aad    0x79
  40ef6b:	jne    0x40ef52
  40ef6d:	jp     0x40efd6
  40ef6f:	xchg   edx,eax
  40ef70:	shl    DWORD PTR [ebx+0x3129bfee],0x67
  40ef77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef78:	jge    0x40ef93
  40ef7a:	inc    edx
  40ef7b:	lock add DWORD PTR [edi+0x2853dd30],edx
  40ef82:	out    0x5c,eax
  40ef84:	mov    eax,ds:0x3921da1d
  40ef89:	inc    ebx
  40ef8a:	jle    0x40efd3
  40ef8c:	js     0x40ef13
  40ef8e:	test   eax,0x83e0a466
  40ef93:	push   ss
  40ef94:	cwde   
  40ef95:	out    dx,eax
  40ef96:	arpl   WORD PTR ds:0xdf1c7428,di
  40ef9c:	push   es
  40ef9d:	push   0xffffffd0
  40ef9f:	ret    
  40efa0:	popf   
  40efa1:	pusha  
  40efa2:	into   
  40efa3:	sbb    ebx,eax
  40efa5:	jl     0x40efe4
  40efa7:	outs   dx,BYTE PTR ds:[esi]
  40efa8:	lods   eax,DWORD PTR ds:[esi]
  40efa9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40efab:	cwde   
  40efac:	push   0xb9102ad7
  40efb1:	call   0x293b:0xc26db6a9
  40efb8:	add    DWORD PTR [esi+0x1112afa3],ecx
  40efbe:	dec    edx
  40efbf:	das    
  40efc0:	and    ecx,esi
  40efc2:	lea    eax,[esi]
  40efc4:	push   0x3e
  40efc6:	mov    ds:0x39b6ef95,al
  40efcb:	ss mov ah,0x1a
  40efce:	pushf  
  40efcf:	sbb    bl,BYTE PTR [edx+0x79]
  40efd2:	scas   eax,DWORD PTR es:[edi]
  40efd3:	daa    
  40efd4:	jp     0x40efba
  40efd6:	mov    BYTE PTR [edx+0x75877035],dl
  40efdc:	push   esi
  40efdd:	cld    
  40efde:	jb     0x40efd8
  40efe0:	mov    WORD PTR [eax+0x1e6be4c7],?
  40efe6:	mov    ds:0x96a724b6,al
  40efeb:	pushf  
  40efec:	les    edi,FWORD PTR [ecx-0x21]
  40efef:	push   ss
  40eff0:	mov    ebp,ebp
  40eff2:	cmps   WORD PTR fs:[esi],WORD PTR es:[edi]
  40eff5:	loop   0x40ef7a
  40eff7:	inc    esp
  40eff8:	cmp    esi,esi
  40effa:	pop    ebp
  40effb:	mov    ebp,0x68b78f71
  40f000:	cwde   
  40f001:	fwait
  40f002:	pop    ds
  40f003:	rol    BYTE PTR [eax-0x1f],cl
  40f006:	ud0    eax,ecx
  40f009:	mov    ch,0x1d
  40f00b:	inc    edx
  40f00c:	iret   
  40f00d:	test   DWORD PTR [ecx+eiz*2-0x392dd17a],esp
  40f014:	shl    BYTE PTR [ebx-0x23e9dc4f],1
  40f01a:	sbb    eax,0x98faec00
  40f01f:	cmp    al,0xea
  40f021:	xchg   edi,eax
  40f022:	test   eax,0xcad97826
  40f027:	push   ebp
  40f028:	push   0x60
  40f02a:	sahf   
  40f02b:	mov    eax,ds:0xaba0d67e
  40f030:	jmp    0x40f029
  40f032:	add    eax,0x9434e7c7
  40f037:	mov    bh,0x12
  40f039:	cwde   
  40f03a:	and    DWORD PTR [ebx+ecx*8],edi
  40f03d:	push   edx
  40f03e:	inc    ebx
  40f03f:	cwde   
  40f040:	pop    ebx
  40f041:	inc    esp
  40f042:	pop    ebp
  40f043:	iret   
  40f044:	pusha  
  40f045:	push   esp
  40f046:	xchg   edx,esp
  40f048:	or     DWORD PTR [eax+ebx*4-0x69bc342f],0xffffffab
  40f050:	jle    0x40f01e
  40f052:	sbb    esi,esp
  40f054:	push   ebx
  40f055:	and    eax,0xd08144b1
  40f05a:	pop    ds
  40f05b:	sbb    eax,0x798edf7a
  40f060:	push   0xfbfbc4a5
  40f065:	das    
  40f066:	mov    ds:0x32762260,eax
  40f06b:	(bad)  
  40f06c:	iret   
  40f06d:	sub    esp,edi
  40f06f:	ja     0x40f044
  40f071:	adc    bh,BYTE PTR [ecx-0x36]
  40f074:	push   edi
  40f075:	and    al,0x39
  40f077:	xor    edi,DWORD PTR [edx+0x1a]
  40f07a:	daa    
  40f07b:	pop    esp
  40f07c:	imul   ebx,DWORD PTR [edx+edx*2+0x24],0x80e7cdf3
  40f084:	sub    DWORD PTR [eax-0x2],ebx
  40f087:	xlat   BYTE PTR ds:[ebx]
  40f088:	test   eax,0x47138713
  40f08d:	adc    BYTE PTR [ecx-0x50e7ab15],bh
  40f093:	or     bh,BYTE PTR [edi-0x78ad1726]
  40f099:	or     BYTE PTR [ecx],dh
  40f09b:	jnp    0x40f095
  40f09d:	dec    eax
  40f09e:	jg     0x40f0ac
  40f0a0:	jle    0x40f063
  40f0a2:	idiv   cl
  40f0a4:	push   ebx
  40f0a5:	cmp    eax,0x92fa8660
  40f0aa:	sbb    al,0x27
  40f0ac:	lock js 0x40f056
  40f0af:	mov    BYTE PTR [ebp+0x25],dh
  40f0b2:	lock and ch,BYTE PTR [edx]
  40f0b5:	cmp    BYTE PTR [edx],al
  40f0b7:	sbb    BYTE PTR [edi-0x17],0x1
  40f0bb:	or     bh,BYTE PTR [ecx]
  40f0bd:	(bad)  
  40f0be:	pop    ss
  40f0bf:	ds add edx,esi
  40f0c2:	jmp    0x7fdd4730
  40f0c7:	xor    edx,DWORD PTR [ecx+0x73f8033]
  40f0cd:	stc    
  40f0ce:	shl    BYTE PTR [edx+0x17d9948c],0x42
  40f0d5:	(bad)  
  40f0d6:	push   edi
  40f0d7:	add    eax,0x254b1d58
  40f0dc:	cmp    BYTE PTR [edx-0x59],0xa9
  40f0e0:	call   0xc9d63a1
  40f0e5:	pop    ss
  40f0e6:	aam    0xa6
  40f0e8:	inc    ebx
  40f0e9:	mov    ds:0x30567ce6,al
  40f0ee:	hlt    
  40f0ef:	push   cs
  40f0f0:	cmc    
  40f0f1:	dec    esi
  40f0f2:	shr    DWORD PTR [ebp-0x7e201674],cl
  40f0f8:	adc    eax,0x63af13f2
  40f0fd:	mov    WORD PTR [ebx],es
  40f0ff:	xor    BYTE PTR [eax],ch
  40f101:	push   ebx
  40f102:	sub    ch,BYTE PTR [edi-0x7e]
  40f105:	adc    esi,DWORD PTR [edi+0x61b1b9d4]
  40f10b:	add    ch,BYTE PTR [ebp+edx*2-0x11acbab]
  40f112:	popa   
  40f113:	add    cl,BYTE PTR [esi-0x1b]
  40f116:	js     0x40f193
  40f118:	test   eax,0x5cc6f0a
  40f11d:	lock es jns 0x40f183
  40f121:	cli    
  40f122:	lahf   
  40f123:	and    bh,ch
  40f125:	pop    edi
  40f126:	pop    esp
  40f127:	dec    ebx
  40f128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f129:	dec    ecx
  40f12a:	stos   DWORD PTR es:[edi],eax
  40f12b:	in     eax,dx
  40f12c:	xchg   ebp,eax
  40f12d:	or     eax,0xc3c14d2e
  40f132:	rcl    BYTE PTR [ebp-0x7a7df266],0x54
  40f139:	pop    ecx
  40f13a:	stos   BYTE PTR es:[edi],al
  40f13b:	fwait
  40f13c:	sub    al,0x67
  40f13e:	and    eax,0x6f7c59aa
  40f143:	xchg   DWORD PTR ds:0x93184d2c,edi
  40f149:	ins    BYTE PTR es:[edi],dx
  40f14a:	pop    es
  40f14b:	pop    ss
  40f14c:	(bad)  
  40f14d:	mov    bh,0x77
  40f14f:	cdq    
  40f150:	ror    dh,cl
  40f152:	cmp    BYTE PTR [eax+0x5e],ch
  40f155:	add    eax,0xa07f3f0c
  40f15a:	cmp    bl,ah
  40f15c:	cmp    ah,0x81
  40f15f:	jmp    0xfc10:0x2e44d5bc
  40f166:	daa    
  40f167:	lds    ebx,FWORD PTR [edi-0x2c]
  40f16a:	out    dx,al
  40f16b:	mov    dl,0xac
  40f16d:	aam    0xb5
  40f16f:	jmp    0xa178:0xd38331f0
  40f176:	or     DWORD PTR [edi-0x24c42d8c],0xffffffb7
  40f17d:	push   ss
  40f17e:	test   DWORD PTR [eax+ebx*2+0x64],eax
  40f182:	and    eax,0xdc4ab527
  40f187:	cmp    DWORD PTR [edi+0x77],eax
  40f18a:	xchg   DWORD PTR ds:[edx-0x54e10033],ecx
  40f191:	jmp    0x40f188
  40f193:	jae    0x40f1b0
  40f195:	mov    BYTE PTR [ebp+0x6e],bh
  40f198:	cmp    eax,0xb2be304e
  40f19d:	adc    eax,0x2cc1a7f1
  40f1a2:	mov    edx,0xdb98053e
  40f1a7:	mov    cl,0xb
  40f1a9:	jmp    0x40f1c3
  40f1ab:	popa   
  40f1ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ad:	sub    eax,0xecc92854
  40f1b2:	xchg   esp,eax
  40f1b3:	fst    st(2)
  40f1b5:	inc    ecx
  40f1b6:	pusha  
  40f1b7:	push   ebp
  40f1b8:	icebp  
  40f1b9:	std    
  40f1ba:	or     al,0xa9
  40f1bc:	and    DWORD PTR [ebp-0x34],ebx
  40f1bf:	push   esp
  40f1c0:	in     eax,dx
  40f1c1:	ficom  DWORD PTR [ecx-0x5332c150]
  40f1c7:	fsubr  QWORD PTR [eax]
  40f1c9:	aas    
  40f1ca:	xchg   ebx,eax
  40f1cb:	xchg   edi,eax
  40f1cc:	not    BYTE PTR [edx+0x55]
  40f1cf:	test   DWORD PTR ds:0x2551f86c,esi
  40f1d5:	sub    DWORD PTR [esi-0xf9c98ce],ecx
  40f1db:	cwde   
  40f1dc:	adc    esi,DWORD PTR [edx+0x58]
  40f1df:	mov    bh,0x44
  40f1e1:	sub    DWORD PTR [eax],ebp
  40f1e3:	pop    esp
  40f1e4:	jg     0x40f191
  40f1e6:	jmp    0xd0b03d3f
  40f1eb:	jne    0x40f254
  40f1ed:	cwde   
  40f1ee:	stos   DWORD PTR es:[edi],eax
  40f1ef:	or     BYTE PTR [ebx-0x3d284cbd],0x61
  40f1f6:	xchg   edi,eax
  40f1f7:	mov    ecx,0xa384c430
  40f1fc:	push   0x8622e012
  40f201:	or     eax,0x724a14c0
  40f206:	shr    DWORD PTR [ebp-0x5dea3cdb],0xc4
  40f20d:	daa    
  40f20e:	jmp    0x40f190
  40f210:	or     ebx,esp
  40f212:	jmp    0x389e3498
  40f217:	in     al,dx
  40f218:	pop    ebx
  40f219:	cld    
  40f21a:	adc    DWORD PTR [edi],ecx
  40f21c:	mov    ch,ch
  40f21e:	in     eax,dx
  40f21f:	fsubr  st(6),st
  40f221:	lds    esi,FWORD PTR [ebp+0x55]
  40f224:	inc    BYTE PTR [eax-0x7c182c9c]
  40f22a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f22b:	les    esi,FWORD PTR [edx]
  40f22d:	test   bl,ah
  40f22f:	icebp  
  40f230:	das    
  40f231:	push   cs
  40f232:	cmp    DWORD PTR [edx+eiz*2+0x16e54dcb],0x662e5472
  40f23d:	jbe    0x40f2ad
  40f23f:	addr16 nop
  40f241:	sahf   
  40f242:	push   0x3edfc8c0
  40f247:	or     BYTE PTR ds:0x73209b7f,0xb
  40f24e:	in     eax,dx
  40f24f:	out    dx,eax
  40f250:	and    BYTE PTR [eax-0x71],ah
  40f253:	or     DWORD PTR [edi],0xffffffe2
  40f256:	dec    edi
  40f257:	jb     0x40f20e
  40f259:	pop    edi
  40f25a:	jb     0x40f27a
  40f25c:	jmp    0xef8bc89e
  40f261:	stos   DWORD PTR es:[edi],eax
  40f262:	lahf   
  40f263:	imul   eax,DWORD PTR [eax+0x6c],0x6fcc06b5
  40f26a:	push   ss
  40f26b:	xchg   DWORD PTR [edi+0x44],esi
  40f26e:	test   al,0x4c
  40f270:	outs   dx,DWORD PTR ds:[esi]
  40f271:	xchg   ebp,eax
  40f272:	pop    esp
  40f273:	sub    cl,dl
  40f275:	pop    ds
  40f276:	ins    DWORD PTR es:[edi],dx
  40f277:	inc    esp
  40f278:	adc    DWORD PTR [eax],0x35e12fd4
  40f27e:	push   esi
  40f27f:	in     eax,dx
  40f280:	mov    dl,0xc1
  40f282:	xor    ebx,DWORD PTR [edi-0x3c]
  40f285:	xor    al,bl
  40f287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f288:	adc    DWORD PTR [edi+0x17],0xe
  40f28c:	push   ss
  40f28d:	loope  0x40f226
  40f28f:	cwde   
  40f290:	pusha  
  40f291:	jo     0x40f306
  40f293:	ins    DWORD PTR es:[edi],dx
  40f294:	fcomip st,st(4)
  40f296:	call   0x1470:0xcfeeb794
  40f29d:	mov    ah,0x30
  40f29f:	jecxz  0x40f28a
  40f2a1:	fcom   DWORD PTR ds:0x8715a363
  40f2a7:	retf   0xc7ac
  40f2aa:	jnp    0x40f2f3
  40f2ac:	les    edi,FWORD PTR [ecx+0x4c]
  40f2af:	pop    esi
  40f2b0:	push   ecx
  40f2b1:	icebp  
  40f2b2:	mov    al,ds:0x3f2fbd10
  40f2b7:	pop    esp
  40f2b8:	push   esi
  40f2b9:	test   BYTE PTR [ebp+0x51],al
  40f2bc:	(bad)  
  40f2bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2be:	pop    ebx
  40f2bf:	inc    edx
  40f2c0:	pushf  
  40f2c1:	sti    
  40f2c2:	and    eax,0xa11f579b
  40f2c7:	sub    ebx,DWORD PTR [ebx-0x1db1e298]
  40f2cd:	lods   eax,DWORD PTR ds:[esi]
  40f2ce:	dec    edx
  40f2cf:	and    dl,al
  40f2d1:	fwait
  40f2d2:	js     0x40f31a
  40f2d4:	add    al,0x37
  40f2d6:	xchg   esp,eax
  40f2d7:	adc    al,0x27
  40f2d9:	into   
  40f2da:	jbe    0x40f311
  40f2dc:	jg     0x40f323
  40f2de:	xor    eax,0x6d80015c
  40f2e3:	add    BYTE PTR [ecx],0x96
  40f2e6:	and    BYTE PTR [esi-0x2d],cl
  40f2e9:	inc    esi
  40f2ea:	ins    DWORD PTR es:[edi],dx
  40f2eb:	mov    bl,0xc2
  40f2ed:	mov    edi,0x1548bfa0
  40f2f2:	clc    
  40f2f3:	adc    esp,DWORD PTR [eax-0xa18036b]
  40f2f9:	lods   al,BYTE PTR ds:[esi]
  40f2fa:	adc    cl,BYTE PTR [edi+0x4b]
  40f2fd:	jno    0x40f355
  40f2ff:	mov    ds:0x8113e56b,al
  40f304:	adc    al,0x59
  40f306:	sti    
  40f307:	out    dx,eax
  40f308:	pop    esp
  40f309:	loopne 0x40f362
  40f30b:	aas    
  40f30c:	jne    0x40f316
  40f30e:	cmp    BYTE PTR [ebx-0xf],ch
  40f311:	mov    dh,0xe9
  40f313:	cmp    cl,BYTE PTR [ebx-0x56]
  40f316:	arpl   WORD PTR [edx+0x3be131c3],cx
  40f31c:	cmp    eax,0xa59b7af6
  40f321:	retf   0x1fad
  40f324:	loop   0x40f2f4
  40f326:	bound  esi,QWORD PTR [edx-0xd1e055f]
  40f32c:	xor    DWORD PTR [eax+0x1a],esp
  40f32f:	std    
  40f330:	sub    dl,BYTE PTR [ebp+esi*8-0x5]
  40f334:	fstp   QWORD PTR [ecx+0x4810c2f3]
  40f33a:	pusha  
  40f33b:	dec    ebp
  40f33c:	or     BYTE PTR [edx+0x553c33c],bl
  40f342:	in     al,0x86
  40f344:	aaa    
  40f345:	dec    edi
  40f346:	or     dl,bl
  40f348:	in     al,0xc4
  40f34a:	enter  0xdb0a,0x25
  40f34e:	jbe    0x40f2e0
  40f350:	repz sbb DWORD PTR [esi+0x3b39802f],ebp
  40f357:	fcomp  QWORD PTR [edx+0x78]
  40f35a:	push   ebx
  40f35b:	pop    ecx
  40f35c:	xchg   esp,eax
  40f35d:	xchg   ebp,eax
  40f35e:	popf   
  40f35f:	xchg   ecx,eax
  40f360:	and    edx,DWORD PTR [edi]
  40f362:	push   cs
  40f363:	jae    0x40f30c
  40f365:	ss inc edx
  40f367:	mov    edi,0x860f6373
  40f36c:	mov    ch,0x6e
  40f36e:	sahf   
  40f36f:	aam    0x7
  40f371:	pusha  
  40f372:	pop    esp
  40f373:	jl     0x40f3bd
  40f375:	adc    DWORD PTR [edx-0xd],0xe
  40f379:	mov    ah,bl
  40f37b:	xchg   ebp,eax
  40f37c:	or     eax,0xb849b328
  40f381:	test   DWORD PTR [edi+0x2e],edi
  40f384:	xor    BYTE PTR [esp+ecx*2],0x68
  40f388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f389:	les    edi,FWORD PTR [eax]
  40f38b:	daa    
  40f38c:	in     al,dx
  40f38d:	push   ebp
  40f38e:	popa   
  40f38f:	pop    ss
  40f390:	(bad)  
  40f391:	or     al,0x59
  40f393:	leave  
  40f394:	sbb    esi,DWORD PTR [edx+0x26]
  40f397:	stos   BYTE PTR es:[edi],al
  40f398:	pop    edi
  40f399:	pop    eax
  40f39a:	pop    ebx
  40f39b:	push   0xffffffaa
  40f39d:	add    edi,edx
  40f39f:	popf   
  40f3a0:	mov    ecx,0xde30d0ea
  40f3a5:	adc    DWORD PTR [eax+0x289e9ce5],eax
  40f3ab:	push   0xf40187e1
  40f3b0:	pop    ebx
  40f3b1:	sbb    edi,ebp
  40f3b3:	fild   DWORD PTR [ecx]
  40f3b5:	push   es
  40f3b6:	sahf   
  40f3b7:	push   cs
  40f3b8:	mov    edi,0xa2b0b21f
  40f3bd:	ficomp DWORD PTR [esi+0x4737f426]
  40f3c3:	mov    ebp,esp
  40f3c5:	push   ecx
  40f3c6:	call   0x65a0:0x1d81a15e
  40f3cd:	push   eax
  40f3ce:	sbb    al,0x77
  40f3d0:	mov    ch,0xd5
  40f3d2:	mov    eax,ds:0xa4fe5a54
  40f3d7:	imul   edi,eax,0x976963e1
  40f3dd:	mov    dl,0xc4
  40f3df:	xchg   ebp,eax
  40f3e0:	sbb    BYTE PTR es:[ecx],al
  40f3e3:	popa   
  40f3e4:	inc    ebx
  40f3e5:	cmp    al,0x72
  40f3e8:	stc    
  40f3e9:	mov    edx,0x79d0d43b
  40f3ee:	jg     0x40f3e5
  40f3f0:	pop    esp
  40f3f1:	cmp    ch,BYTE PTR [edx+0x32]
  40f3f4:	xchg   edx,eax
  40f3f5:	pop    esi
  40f3f6:	mov    ds:0xdb29b9fc,al
  40f3fb:	xchg   esi,eax
  40f3fc:	cmp    al,al
  40f3fe:	(bad)  
  40f3ff:	fs mov ecx,0x1c57128
  40f405:	shl    ecx,0x48
  40f408:	inc    edi
  40f409:	xchg   ebx,eax
  40f40a:	icebp  
  40f40b:	shr    DWORD PTR [ebx+edi*2+0x6daca864],cl
  40f412:	mov    ebx,0xc82a0215
  40f417:	add    BYTE PTR [edx+0x422e8221],0xdc
  40f41e:	xor    DWORD PTR [eax-0x59d6f399],ebx
  40f424:	sub    ah,bh
  40f426:	ror    al,0xbe
  40f429:	dec    ebx
  40f42a:	cmp    al,0xea
  40f42c:	mov    WORD PTR [ebx+eax*8+0x2bc4ddfb],?
  40f433:	mov    al,0x11
  40f435:	xchg   DWORD PTR [esi],edx
  40f437:	or     bh,BYTE PTR [ebx]
  40f439:	bound  eax,QWORD PTR [esi]
  40f43b:	addr16 xchg esi,eax
  40f43d:	jp     0x40f42e
  40f43f:	xchg   ah,bl
  40f441:	sahf   
  40f442:	sbb    cl,BYTE PTR [ebp-0x269281fb]
  40f448:	lock leave 
  40f44a:	adc    eax,0x8e6d01e5
  40f44f:	ret    0xe2ef
  40f452:	pop    ecx
  40f453:	inc    eax
  40f454:	sub    BYTE PTR [ecx+0x7440fa8b],bh
  40f45a:	mov    al,ds:0xdfd5bf6c
  40f45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f460:	push   es
  40f461:	rol    BYTE PTR [edx],0xea
  40f464:	loope  0x40f470
  40f466:	mov    bh,0x56
  40f468:	and    dh,ch
  40f46a:	or     al,0xc6
  40f46c:	add    BYTE PTR [ecx-0x45],bh
  40f46f:	pop    ss
  40f470:	fs clts 
  40f473:	sti    
  40f474:	adc    BYTE PTR [esi+0x1f7dc825],al
  40f47a:	dec    eax
  40f47b:	and    DWORD PTR [ebx+0x279c8fff],eax
  40f481:	inc    esp
  40f482:	fprem1 
  40f484:	in     al,dx
  40f485:	cld    
  40f486:	int3   
  40f487:	mov    bl,0xa2
  40f489:	add    ch,BYTE PTR [eax]
  40f48b:	and    ebx,DWORD PTR [edx]
  40f48d:	and    al,0xef
  40f48f:	sahf   
  40f490:	sbb    eax,0x13a8b5de
  40f495:	clc    
  40f496:	mov    cl,0x67
  40f498:	sub    BYTE PTR [esi-0x42],dl
  40f49b:	lea    esp,[ecx]
  40f49d:	loopne 0x40f426
  40f49f:	scas   eax,DWORD PTR es:[edi]
  40f4a0:	ret    
  40f4a1:	mov    ah,0x91
  40f4a3:	xchg   edx,eax
  40f4a4:	test   bh,0x1f
  40f4a7:	and    BYTE PTR [eax],bl
  40f4a9:	daa    
  40f4aa:	mov    esi,0x18214bda
  40f4af:	mov    dl,0x6a
  40f4b1:	(bad)  
  40f4b2:	xor    eax,0xfb989548
  40f4b7:	dec    esp
  40f4b8:	mov    ebx,0x6aa2c921
  40f4bd:	adc    eax,0x39abcdb
  40f4c2:	sub    esp,edx
  40f4c4:	(bad)  
  40f4c5:	std    
  40f4c6:	ret    
  40f4c7:	mov    bh,0x35
  40f4c9:	int    0x50
  40f4cb:	std    
  40f4cc:	jae    0x40f4bf
  40f4ce:	jg     0x40f50f
  40f4d0:	lahf   
  40f4d1:	mov    ah,BYTE PTR [ebx+edx*4+0x22ec9efa]
  40f4d8:	dec    ebx
  40f4d9:	aaa    
  40f4da:	test   DWORD PTR [edx],eax
  40f4dc:	call   0xb15f:0x5c8f96ce
  40f4e3:	xchg   BYTE PTR [esi+0x6da41d23],bh
  40f4e9:	push   esi
  40f4ea:	sbb    bl,al
  40f4ec:	pop    ebp
  40f4ed:	stc    
  40f4ee:	mov    esp,0x806b87f0
  40f4f3:	sub    BYTE PTR [edi+edx*1+0x2a579715],bh
  40f4fa:	mov    ebx,0x2a55bd0d
  40f4ff:	in     al,0x1a
  40f501:	outs   dx,BYTE PTR ds:[esi]
  40f502:	int    0x13
  40f504:	retf   
  40f505:	sti    
  40f506:	jecxz  0x40f4d8
  40f508:	cld    
  40f509:	enter  0x3d4a,0xa7
  40f50d:	cld    
  40f50e:	fidivr WORD PTR [esi]
  40f510:	in     al,0x85
  40f512:	inc    eax
  40f513:	mov    bh,0xf3
  40f515:	mov    ecx,0x50c2609f
  40f51a:	mov    bl,0x8b
  40f51c:	push   ebx
  40f51d:	nop
  40f51e:	push   es
  40f51f:	mov    al,fs:0xfca95210
  40f525:	adc    DWORD PTR [ebx],edi
  40f527:	jae    0x40f4fe
  40f529:	xor    al,0x86
  40f52b:	push   ds
  40f52c:	loop   0x40f4b8
  40f52e:	rcr    BYTE PTR [edx+eax*8],0xdd
  40f532:	pop    es
  40f533:	or     eax,0xf798aaae
  40f538:	xor    al,0x4a
  40f53a:	mov    ah,0x1c
  40f53c:	lock lock (bad) 
  40f53f:	jno    0x40f518
  40f541:	jns    0x40f586
  40f543:	xchg   edi,eax
  40f544:	xchg   ecx,eax
  40f545:	or     edx,DWORD PTR [edx]
  40f547:	xor    eax,0x7b921669
  40f54c:	pop    ebx
  40f54d:	jg     0x40f55f
  40f54f:	push   ebp
  40f550:	or     eax,DWORD PTR [edi+0x6c]
  40f553:	(bad)  
  40f554:	jg     0x40f4f6
  40f556:	or     DWORD PTR ds:0xa9a70434,0xffffffba
  40f55d:	scas   al,BYTE PTR es:[edi]
  40f55e:	in     eax,dx
  40f55f:	fist   WORD PTR [ebx]
  40f561:	iret   
  40f562:	or     eax,DWORD PTR [esi]
  40f564:	or     DWORD PTR [edi+0x3f4a9cb9],esi
  40f56a:	pusha  
  40f56b:	test   BYTE PTR [edi-0x5c001062],bl
  40f571:	hlt    
  40f572:	std    
  40f573:	rol    DWORD PTR [eax+0x3d],0x57
  40f577:	ficom  WORD PTR [ebp-0x4c]
  40f57a:	and    BYTE PTR [ebx-0x27],0x4d
  40f57e:	push   esi
  40f57f:	(bad)  
  40f580:	clc    
  40f581:	and    ebp,DWORD PTR [ecx+0xc834174]
  40f587:	neg    BYTE PTR [ebx-0xb]
  40f58a:	sahf   
  40f58b:	mov    BYTE PTR [ebx+0x28797229],al
  40f591:	mov    BYTE PTR [ebx],bl
  40f593:	test   eax,0x325a3e6b
  40f598:	adc    DWORD PTR [eax+0x24b8e68f],0xa96adb02
  40f5a2:	xor    ah,0x37
  40f5a5:	fisubr WORD PTR [edi+0x34]
  40f5a8:	and    ecx,DWORD PTR [edi+edx*8-0x16]
  40f5ac:	rcr    BYTE PTR [ebp-0x62],1
  40f5af:	call   0x3c295262
  40f5b4:	enter  0x458b,0xfc
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi-0x38a3da05]
  40f687:	js     0x40f6ae
  40f689:	ret    0xafc3
  40f68c:	add    DWORD PTR [ebx-0x7c7c9f0f],0x6b
  40f693:	imul   esp,DWORD PTR [ebx+0x6e],0xffffffe2
  40f697:	rol    DWORD PTR [edx],cl
  40f699:	imul   BYTE PTR [esi+edi*4]
  40f69c:	in     al,0x36
  40f69e:	xchg   ebp,eax
  40f69f:	stos   DWORD PTR es:[edi],eax
  40f6a0:	ja     0x40f6f5
  40f6a2:	or     eax,0xff72e41f
  40f6a7:	jno    0x40f6ff
  40f6a9:	push   ebx
  40f6aa:	sbb    ebp,edx
  40f6ac:	fwait
  40f6ad:	mov    ebx,ecx
  40f6af:	arpl   di,bp
  40f6b1:	fwait
  40f6b2:	out    0xdd,al
  40f6b4:	dec    ebp
  40f6b5:	add    al,0x4d
  40f6b7:	mov    edi,DWORD PTR [esi+esi*4]
  40f6ba:	push   DWORD PTR [esi]
  40f6bc:	mov    edx,ecx
  40f6be:	fdivr  DWORD PTR [ecx]
  40f6c0:	push   0xffffffbf
  40f6c2:	mov    al,0xd2
  40f6c4:	sbb    ebx,DWORD PTR [edi]
  40f6c6:	popa   
  40f6c7:	cmp    al,0xf8
  40f6c9:	dec    esp
  40f6ca:	jnp    0x40f70f
  40f6cc:	mov    bl,0x11
  40f6ce:	cmp    DWORD PTR [ebx-0x79],edx
  40f6d1:	imul   ecx,DWORD PTR [ecx],0x35
  40f6d4:	adc    DWORD PTR [ebp-0x38e95ab5],0x76
  40f6db:	jno    0x40f72e
  40f6dd:	add    DWORD PTR ds:0x9e719888,0x15
  40f6e4:	pop    esp
  40f6e5:	les    esp,FWORD PTR [edx+0x71]
  40f6e8:	sub    edi,0x3f63b4
  40f6ee:	and    esi,DWORD PTR [edx-0x6d9b8a23]
  40f6f4:	retf   
  40f6f5:	and    eax,0x273fc038
  40f6fa:	int    0xc1
  40f6fc:	lock fsubr DWORD PTR [edx+0x547f3f1f]
  40f703:	shl    dl,1
  40f705:	in     eax,0x2b
  40f707:	jo     0x40f71a
  40f709:	push   ebx
  40f70a:	xchg   ecx,eax
  40f70b:	daa    
  40f70c:	pop    ecx
  40f70d:	lock fbstp TBYTE PTR es:[ebp-0x35]
  40f712:	inc    ebx
  40f713:	mov    ecx,0xd2b30656
  40f718:	and    esp,esp
  40f71a:	pop    esi
  40f71b:	pop    es
  40f71c:	push   ss
  40f71d:	test   BYTE PTR [edx-0x4f927c83],0xf0
  40f724:	sbb    ecx,esp
  40f726:	push   edx
  40f727:	xchg   edx,eax
  40f728:	iret   
  40f729:	(bad)  [esi]
  40f72b:	call   0xa22021cc
  40f730:	(bad)  [esi-0x7b2220fd]
  40f736:	std    
  40f737:	lock int 0xfe
  40f73a:	push   esp
  40f73b:	mov    bh,0x1a
  40f73d:	fcom   DWORD PTR [bp+di-0x1ef7]
  40f742:	jo     0x40f73f
  40f744:	ret    
  40f745:	out    0xb9,al
  40f747:	inc    ecx
  40f748:	dec    esp
  40f749:	mov    edi,0xf7e27285
  40f74e:	cmp    DWORD PTR [esi],ebx
  40f750:	(bad)  
  40f751:	sti    
  40f752:	push   ecx
  40f753:	hlt    
  40f754:	test   ebx,edx
  40f756:	adc    al,0xcd
  40f758:	(bad)  
  40f759:	push   esi
  40f75a:	aaa    
  40f75b:	or     ecx,DWORD PTR [edi+0x64db353]
  40f761:	jns    0x40f7c6
  40f763:	scas   al,BYTE PTR es:[edi]
  40f764:	pop    ecx
  40f765:	sub    cl,BYTE PTR [esi]
  40f767:	sbb    al,0x19
  40f769:	inc    edx
  40f76a:	test   DWORD PTR [ebx+0x4c1f7e0],eax
  40f770:	in     eax,dx
  40f771:	pop    edx
  40f772:	mov    WORD PTR [esi],ss
  40f774:	nop
  40f775:	xor    al,0x1b
  40f777:	pusha  
  40f778:	dec    edi
  40f779:	xchg   ebp,eax
  40f77a:	fisttp WORD PTR [ecx+0x7e8b1cb6]
  40f780:	repz lahf 
  40f782:	loope  0x40f786
  40f784:	aas    
  40f785:	or     eax,0xab5f3f64
  40f78a:	imul   edx,DWORD PTR [ebx+0x39],0x2f6eec6e
  40f791:	out    dx,eax
  40f792:	in     al,0xa6
  40f794:	dec    edi
  40f795:	jl     0x40f7b3
  40f797:	inc    esp
  40f798:	mov    al,ds:0xeade1b5b
  40f79d:	test   DWORD PTR [ebx+ebx*8-0x5bba06b4],ebx
  40f7a4:	xor    ah,ch
  40f7a6:	and    dl,BYTE PTR [eax-0x77]
  40f7a9:	mov    ss,WORD PTR [eax-0x58]
  40f7ac:	aam    0x7a
  40f7ae:	pushf  
  40f7af:	jmp    0x8b3494de
  40f7b4:	jbe    0x40f75a
  40f7b6:	xor    ebp,DWORD PTR [ebx-0x3f64e9b9]
  40f7bc:	sbb    esi,DWORD PTR [ebp+0x49]
  40f7bf:	retf   0x9d4b
  40f7c2:	js     0x40f75c
  40f7c4:	sub    BYTE PTR [edx+0x5d014fcd],al
  40f7ca:	outs   dx,BYTE PTR ds:[esi]
  40f7cb:	scas   al,BYTE PTR es:[edi]
  40f7cc:	mov    eax,0xac96e97a
  40f7d1:	in     eax,dx
  40f7d2:	stos   DWORD PTR es:[edi],eax
  40f7d3:	mov    bh,0x4
  40f7d5:	cmp    esi,DWORD PTR [ebx]
  40f7d7:	inc    esi
  40f7d8:	add    eax,ebx
  40f7da:	push   ds
  40f7db:	push   0x8b0d0ba7
  40f7e0:	or     ecx,ecx
  40f7e2:	iret   
  40f7e3:	lods   al,BYTE PTR ds:[esi]
  40f7e4:	stos   DWORD PTR es:[edi],eax
  40f7e5:	das    
  40f7e6:	cmc    
  40f7e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7e8:	sub    al,BYTE PTR [ebx]
  40f7ea:	out    dx,al
  40f7eb:	inc    esp
  40f7ec:	(bad)  
  40f7ed:	xchg   esi,eax
  40f7ee:	jae    0x40f7ef
  40f7f0:	loope  0x40f85b
  40f7f2:	or     al,0x8d
  40f7f4:	jecxz  0x40f814
  40f7f6:	aam    0xc9
  40f7f8:	mov    ebp,0x3bf3508b
  40f7fd:	push   cs
  40f7fe:	shl    BYTE PTR [ecx+0xf070619],0x28
  40f805:	popa   
  40f806:	mov    BYTE PTR [esi+0x2bcf0184],ch
  40f80c:	vmulpd ymm7,ymm2,YMMWORD PTR [edi+0x75672908]
  40f814:	stos   DWORD PTR es:[edi],eax
  40f815:	xchg   edi,eax
  40f816:	retfw  
  40f818:	mov    BYTE PTR [ebx],bl
  40f81a:	adc    edi,ecx
  40f81c:	jle    0x40f827
  40f81e:	pop    ebp
  40f81f:	push   ss
  40f820:	inc    ebx
  40f821:	scas   eax,DWORD PTR es:[edi]
  40f822:	adc    BYTE PTR [ebx+0x593d85be],0xbe
  40f829:	xor    DWORD PTR [ecx+0x12ffd020],esp
  40f82f:	lahf   
  40f830:	ins    DWORD PTR es:[edi],dx
  40f831:	hlt    
  40f832:	push   ebp
  40f833:	jge    0x40f837
  40f835:	dec    edx
  40f836:	test   al,0xf6
  40f838:	scas   al,BYTE PTR es:[edi]
  40f839:	lahf   
  40f83a:	out    0xa4,al
  40f83c:	sbb    esp,DWORD PTR ds:0x9a03346d
  40f842:	or     ch,BYTE PTR [edi]
  40f844:	daa    
  40f845:	fs int3 
  40f847:	mov    edi,0xf1a8956d
  40f84c:	dec    edi
  40f84d:	xor    dh,BYTE PTR [esi]
  40f84f:	mov    ch,0xcc
  40f851:	retf   0xe60
  40f854:	popa   
  40f855:	dec    ebp
  40f856:	and    cl,bh
  40f858:	dec    ebp
  40f859:	je     0x40f8bb
  40f85b:	lds    edx,FWORD PTR [ebp+0xea79c0d]
  40f861:	push   es
  40f862:	daa    
  40f863:	rcl    DWORD PTR ds:0x74a60a74,1
  40f869:	loop   0x40f86b
  40f86b:	out    dx,eax
  40f86c:	adc    al,0xff
  40f86e:	mov    ebx,0x73b8b93d
  40f873:	push   esp
  40f874:	sbb    al,BYTE PTR [ebx-0x70c7680f]
  40f87a:	and    dl,BYTE PTR [edi+0x5d6c334f]
  40f880:	(bad)  
  40f881:	(bad)  
  40f882:	push   esp
  40f883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f884:	push   esi
  40f885:	out    dx,al
  40f886:	mul    DWORD PTR [esi+ebp*1-0x1701cc00]
  40f88d:	(bad)  
  40f88e:	push   ds
  40f88f:	pop    eax
  40f890:	in     eax,0xd7
  40f892:	mov    ds:0x273109fe,eax
  40f897:	push   esp
  40f898:	in     eax,dx
  40f899:	dec    ecx
  40f89a:	push   ds
  40f89b:	sub    edx,DWORD PTR [ecx+ecx*1]
  40f89e:	cmp    dl,BYTE PTR [ebp-0x1dc051f1]
  40f8a4:	or     al,0x44
  40f8a6:	rol    BYTE PTR [eax-0x54],0x39
  40f8aa:	loope  0x40f8f3
  40f8ac:	sub    al,0xbd
  40f8ae:	out    0x75,eax
  40f8b0:	cmp    eax,0xfdbff89a
  40f8b5:	(bad)  [ecx+0xe]
  40f8b8:	mov    ebx,0x8ed6d656
  40f8bd:	mov    ecx,0x54057762
  40f8c2:	jbe    0x40f84c
  40f8c4:	mov    edi,eax
  40f8c6:	and    esp,DWORD PTR [esi+0x27456354]
  40f8cc:	inc    esi
  40f8cd:	es jns 0x40f8da
  40f8d0:	popa   
  40f8d1:	lods   al,BYTE PTR ds:[esi]
  40f8d2:	popa   
  40f8d3:	fidivr WORD PTR [edx-0x64]
  40f8d6:	leave  
  40f8d7:	add    DWORD PTR [eax],esi
  40f8d9:	mov    dh,0xd9
  40f8db:	inc    eax
  40f8dc:	retf   
  40f8dd:	clc    
  40f8de:	jns    0x40f8b2
  40f8e0:	rcr    DWORD PTR [eax-0x6a],0x64
  40f8e4:	inc    esi
  40f8e5:	dec    edi
  40f8e6:	pop    esp
  40f8e7:	in     eax,0xd8
  40f8e9:	pop    ss
  40f8ea:	push   cs
  40f8eb:	jmp    0x2c89:0x5b795b3
  40f8f2:	pop    ebp
  40f8f3:	popf   
  40f8f4:	dec    ebp
  40f8f5:	adc    ah,BYTE PTR [ebp-0xf7b719]
  40f8fb:	or     DWORD PTR [edi],ebx
  40f8fd:	jp     0x40f928
  40f8ff:	xchg   esp,eax
  40f900:	and    ebp,DWORD PTR [ebx-0x4721bd1e]
  40f906:	mov    al,0xd
  40f908:	int3   
  40f909:	and    ecx,DWORD PTR [edx-0x2b1db618]
  40f90f:	sti    
  40f910:	leave  
  40f911:	adc    eax,0x14e9daea
  40f916:	dec    ebp
  40f917:	cmp    esi,DWORD PTR ds:0x2c82845
  40f91d:	(bad)  
  40f91e:	imul   ebx,DWORD PTR [ebx-0x78],0xfffffffe
  40f922:	push   ebx
  40f923:	(bad)  
  40f924:	sbb    al,0x3f
  40f926:	inc    edi
  40f927:	int3   
  40f928:	mov    eax,ds:0x55265112
  40f92d:	cdq    
  40f92e:	ror    BYTE PTR [esi+0x66cc054c],cl
  40f934:	mov    ebp,0x4d30238f
  40f939:	mov    bh,cl
  40f93b:	out    0x1b,al
  40f93d:	xchg   edx,eax
  40f93e:	ss adc dh,dl
  40f941:	popf   
  40f942:	adc    dh,BYTE PTR [ebx+0x71c67a68]
  40f948:	push   eax
  40f949:	xor    dh,BYTE PTR [ebx+ecx*1]
  40f94c:	addr16 enter 0x6d0a,0x56
  40f951:	adc    bh,0x60
  40f954:	pop    ss
  40f955:	fld    DWORD PTR [ecx]
  40f957:	adc    BYTE PTR [eax],ch
  40f959:	mov    edi,0x4eea8bad
  40f95e:	jmp    0xadacaf1f
  40f963:	mov    al,0xfb
  40f965:	retf   0x83ad
  40f968:	or     ch,BYTE PTR [edi-0x7dd82403]
  40f96e:	fistp  DWORD PTR [ebx-0x5ed6cb89]
  40f974:	dec    esi
  40f975:	xchg   ebx,eax
  40f976:	push   0xffffffbf
  40f978:	add    edi,eax
  40f97a:	push   ecx
  40f97b:	cli    
  40f97c:	dec    edx
  40f97d:	aad    0x81
  40f97f:	inc    esp
  40f980:	pop    eax
  40f981:	mov    ah,0x6b
  40f983:	std    
  40f984:	out    0x9e,al
  40f986:	push   ds
  40f987:	dec    ebp
  40f988:	(bad)  
  40f989:	(bad)  
  40f98b:	stos   DWORD PTR es:[edi],eax
  40f98c:	(bad)  
  40f98d:	leave  
  40f98e:	retf   
  40f98f:	mov    dh,0x40
  40f991:	xchg   ebx,eax
  40f992:	mov    ebp,0x46f395d8
  40f997:	outs   dx,BYTE PTR ds:[esi]
  40f998:	sbb    ecx,edx
  40f99a:	test   eax,ebp
  40f99c:	pop    esi
  40f99d:	iret   
  40f99e:	xchg   ebx,eax
  40f99f:	pop    esp
  40f9a0:	clc    
  40f9a1:	jns    0x40f97f
  40f9a3:	push   esi
  40f9a4:	xor    bl,BYTE PTR [ecx-0x35]
  40f9a7:	into   
  40f9a8:	sub    al,0x2f
  40f9aa:	inc    ebp
  40f9ab:	push   edi
  40f9ac:	pop    ebx
  40f9ad:	add    BYTE PTR [edx],ch
  40f9af:	sub    ecx,DWORD PTR [esi+esi*2+0x14]
  40f9b3:	mov    WORD PTR [esp+0x59],ds
  40f9b7:	push   0x1
  40f9b9:	bound  ecx,QWORD PTR [ebp-0x6]
  40f9bc:	xor    bl,bh
  40f9be:	repnz lea ebx,[ecx]
  40f9c1:	push   ebp
  40f9c2:	pop    ds
  40f9c3:	nop
  40f9c4:	in     eax,0x15
  40f9c6:	ss cmp bh,al
  40f9c9:	fcmovbe st,st(2)
  40f9cb:	out    0x75,al
  40f9cd:	test   al,0x7a
  40f9cf:	sub    DWORD PTR ds:0xab4299bb,edx
  40f9d5:	add    bh,BYTE PTR [edx+0x5b3aa6a1]
  40f9db:	scas   al,BYTE PTR es:[edi]
  40f9dc:	mov    ah,0xab
  40f9de:	cmp    eax,0x92b31b8e
  40f9e3:	add    bl,ah
  40f9e5:	pop    eax
  40f9e6:	in     al,0xfd
  40f9e8:	call   edi
  40f9ea:	fcomp  DWORD PTR [edi]
  40f9ec:	enter  0x36bc,0x94
  40f9f0:	xchg   BYTE PTR [esi+0x3b78e5b3],dl
  40f9f6:	scas   eax,DWORD PTR es:[edi]
  40f9f7:	push   esp
  40f9f8:	push   0x31147019
  40f9fd:	ds popf 
  40f9ff:	jmp    DWORD PTR [esi+0x23]
  40fa02:	ret    0xc7c4
  40fa05:	jecxz  0x40f9bd
  40fa07:	cmp    ebx,DWORD PTR [edi+0x7e]
  40fa0a:	stos   BYTE PTR es:[edi],al
  40fa0b:	mov    ecx,0x666caf01
  40fa10:	push   0xc1d2464e
  40fa15:	popf   
  40fa16:	and    ch,bl
  40fa18:	daa    
  40fa19:	retf   
  40fa1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa1b:	cmp    al,0xe4
  40fa1d:	aaa    
  40fa1e:	shl    BYTE PTR [esi],1
  40fa20:	in     al,0xc6
  40fa22:	cmp    al,0x6a
  40fa24:	aam    0xa
  40fa26:	dec    edi
  40fa27:	xchg   esp,eax
  40fa28:	push   edx
  40fa29:	stos   DWORD PTR es:[edi],eax
  40fa2a:	pop    edx
  40fa2b:	push   ebx
  40fa2c:	es pop ecx
  40fa2e:	repnz adc esp,DWORD PTR [ebp+0x568794cf]
  40fa35:	in     al,dx
  40fa36:	cmp    eax,0xaa3eac4f
  40fa3b:	jo     0x40fa2f
  40fa3d:	xor    bh,BYTE PTR [edx-0x766fe186]
  40fa43:	rol    dh,1
  40fa45:	adc    bh,BYTE PTR [edi+0x13]
  40fa48:	push   edx
  40fa49:	pop    eax
  40fa4a:	sub    BYTE PTR [ecx-0x7c],al
  40fa4d:	pop    edx
  40fa4e:	add    BYTE PTR [ebp-0x77350f8a],cl
  40fa54:	ror    BYTE PTR [edi],1
  40fa56:	ret    0x482c
  40fa59:	xchg   ecx,eax
  40fa5a:	sub    al,0x61
  40fa5c:	push   cs
  40fa5d:	enter  0x80c3,0xa4
  40fa61:	(bad)  
  40fa62:	aaa    
  40fa63:	aam    0x94
  40fa65:	fld    QWORD PTR [ebp+0x58]
  40fa68:	imul   ecx,DWORD PTR [ebx-0x130341b1],0xffffff92
  40fa6f:	cmp    esi,DWORD PTR [ebx-0x20d93ec2]
  40fa75:	inc    ebp
  40fa76:	aas    
  40fa77:	inc    BYTE PTR [esi]
  40fa79:	mov    BYTE PTR [edx],bl
  40fa7b:	sbb    BYTE PTR es:[edi],bl
  40fa7e:	sbb    BYTE PTR [ecx-0x43],bl
  40fa81:	pop    edi
  40fa82:	js     0x40fa68
  40fa84:	mov    al,ds:0x705d54e5
  40fa89:	call   0x97a:0xafe79e74
  40fa90:	sti    
  40fa91:	and    DWORD PTR [eax-0x7dd4105],esi
  40fa97:	cwde   
  40fa98:	dec    ebx
  40fa99:	dec    edx
  40fa9a:	xchg   edi,eax
  40fa9b:	jbe    0x40fb02
  40fa9d:	mov    eax,ds:0x19e724f8
  40faa2:	ins    DWORD PTR es:[edi],dx
  40faa3:	pop    ds
  40faa4:	repnz pop ecx
  40faa6:	(bad)  
  40faa7:	jb     0x40fabb
  40faa9:	sbb    DWORD PTR [eax+0x27],0x73f88bab
  40fab0:	std    
  40fab1:	retf   0xc142
  40fab4:	xlat   BYTE PTR ss:[ebx]
  40fab6:	and    BYTE PTR [ebx+0x3b],bh
  40fab9:	push   ss
  40faba:	push   ecx
  40fabb:	popa   
  40fabc:	and    ch,BYTE PTR [esi-0x18]
  40fabf:	repz cmp dh,BYTE PTR [ebp-0x6d0d33d1]
  40fac6:	and    esi,DWORD PTR [edx+0x75]
  40fac9:	mov    esi,0x3ac67194
  40face:	rcl    DWORD PTR [eax-0x3d],1
  40fad1:	fcomi  st,st(3)
  40fad3:	push   ecx
  40fad4:	xchg   edi,eax
  40fad5:	out    dx,al
  40fad6:	adc    DWORD PTR [ecx+0x407cba70],ebx
  40fadc:	imul   esp,DWORD PTR [ecx],0xffffffe8
  40fadf:	push   cs
  40fae0:	xor    DWORD PTR [esi],edx
  40fae2:	sar    BYTE PTR [ebp+0x74],1
  40fae5:	adc    bh,ah
  40fae7:	shr    DWORD PTR [edx],0xfb
  40faea:	pop    es
  40faeb:	or     cl,BYTE PTR [ecx+0x7efa53d8]
  40faf1:	mov    edi,0xe06044f5
  40faf6:	cli    
  40faf7:	cwde   
  40faf8:	lea    eax,[edx]
  40fafa:	push   esi
  40fafb:	cli    
  40fafc:	cli    
  40fafd:	jae    0x40fa92
  40faff:	and    ah,dh
  40fb01:	in     eax,0x43
  40fb03:	(bad)  
  40fb04:	cld    
  40fb05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb06:	jbe    0x40fb85
  40fb08:	cs lock out 0xe,al
  40fb0c:	add    esp,edi
  40fb0e:	xor    eax,0xf02d4a6c
  40fb13:	cmp    DWORD PTR [edx+0x52],edi
  40fb16:	mov    ds:0x31bfb489,al
  40fb1b:	jp     0x40fb70
  40fb1d:	(bad)  
  40fb1e:	stos   BYTE PTR es:[edi],al
  40fb1f:	pop    edi
  40fb20:	stc    
  40fb21:	(bad)  
  40fb22:	es mov esp,0xc6afd55b
  40fb28:	xor    ecx,DWORD PTR [edx]
  40fb2a:	jb     0x40fb07
  40fb2c:	xor    BYTE PTR [edx-0x32b2d1d7],ch
  40fb32:	clc    
  40fb33:	push   ebx
  40fb34:	push   ebp
  40fb35:	and    al,0x4a
  40fb37:	sub    eax,0x6a00692f
  40fb3c:	lds    esp,FWORD PTR [ebx-0x2b]
  40fb3f:	jle    0x40fb83
  40fb41:	sti    
  40fb42:	or     eax,0xf8450233
  40fb47:	mov    ch,0xd2
  40fb49:	out    dx,eax
  40fb4a:	lods   eax,DWORD PTR ds:[esi]
  40fb4b:	mov    gs,WORD PTR [edx]
  40fb4d:	pop    esp
  40fb4e:	ins    BYTE PTR es:[edi],dx
  40fb4f:	ret    0x141d
  40fb52:	idiv   BYTE PTR [ebp+0x4f]
  40fb55:	nop
  40fb56:	mov    esp,0xef6a4d14
  40fb5b:	(bad)  
  40fb5c:	pop    esp
  40fb5d:	ins    BYTE PTR es:[edi],dx
  40fb5e:	cmc    
  40fb5f:	pop    edx
  40fb60:	(bad)  
  40fb61:	jb     0x40fbd6
  40fb63:	sbb    ebp,DWORD PTR [ebx]
  40fb65:	mov    bl,0x5d
  40fb67:	sub    cl,BYTE PTR [ecx-0x597435e2]
  40fb6d:	stos   DWORD PTR es:[edi],eax
  40fb6e:	pop    es
  40fb6f:	jbe    0x40fb54
  40fb71:	(bad)  
  40fb72:	(bad)  
  40fb74:	loopne 0x40fbe3
  40fb76:	cmp    edx,DWORD PTR [ebp-0x5a]
  40fb79:	test   esp,ebx
  40fb7b:	mov    cl,BYTE PTR [edx-0x73]
  40fb7e:	and    edi,0xffffff87
  40fb81:	bound  ebp,QWORD PTR [ebx+0x27eaadf2]
  40fb87:	jle    0x40fbac
  40fb89:	(bad)  
  40fb8a:	out    0xa1,al
  40fb8c:	jle    0x40fb5d
  40fb8e:	sti    
  40fb8f:	loope  0x40fb5f
  40fb91:	mov    esi,0x306e03c8
  40fb96:	mov    BYTE PTR [esi+0x7e],bh
  40fb99:	mov    al,0xd2
  40fb9b:	lds    ebx,FWORD PTR [edi-0xb]
  40fb9e:	data16 sar ch,1
  40fba1:	adc    edx,DWORD PTR [eax-0x19]
  40fba4:	adc    DWORD PTR [ebp+0x9b66820],eax
  40fbaa:	test   eax,0x5f497473
  40fbaf:	loop   0x40fb5a
  40fbb1:	pusha  
  40fbb2:	loope  0x40fbe6
  40fbb4:	jno    0x40fb92
  40fbb6:	loope  0x40fbce
  40fbb8:	fsubr  st(5),st
  40fbba:	adc    ebp,esi
  40fbbc:	xchg   ebx,esi
  40fbbe:	into   
  40fbbf:	lods   eax,DWORD PTR ds:[esi]
  40fbc0:	cld    
  40fbc1:	mov    bl,0x25
  40fbc3:	mov    edi,0xa8165015
  40fbc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc9:	or     BYTE PTR gs:[esi+0xeb48536],dl
  40fbd0:	gs ret 
  40fbd2:	sub    BYTE PTR [ecx+0x31cb5663],cl
  40fbd8:	cmp    al,0x46
  40fbda:	pop    ebx
  40fbdb:	hlt    
  40fbdc:	sbb    eax,0x7c3eff4f
  40fbe1:	leave  
  40fbe2:	and    ah,dh
  40fbe4:	test   BYTE PTR [ebp+0x69],al
  40fbe7:	sub    esi,DWORD PTR [bp+di-0x737]
  40fbec:	jg     0x40fba5
  40fbee:	mov    edx,0x1dd3336a
  40fbf3:	jne    0x40fc3d
  40fbf5:	dec    edi
  40fbf6:	mov    eax,ds:0x1892447d
  40fbfb:	ds js  0x40fc63
  40fbfe:	iret   
  40fbff:	in     eax,0x5b
  40fc01:	ret    0xfc90
  40fc04:	cmp    al,0x62
  40fc06:	shl    BYTE PTR [eax-0x3c13f93a],cl
  40fc0c:	pop    ebp
  40fc0d:	sub    DWORD PTR [edi+esi*1],edx
  40fc10:	gs cmp ecx,ebp
  40fc13:	mov    ebp,0xb1c970d2
  40fc18:	push   esp
  40fc19:	and    BYTE PTR [ecx+0x11afc631],bl
  40fc1f:	lods   al,BYTE PTR ds:[esi]
  40fc20:	inc    ebx
  40fc21:	sub    esp,edx
  40fc23:	daa    
  40fc24:	pusha  
  40fc25:	sub    esp,0x7a54f1a0
  40fc2b:	xchg   BYTE PTR [esi-0x52],ch
  40fc2e:	je     0x40fc94
  40fc30:	aam    0x2e
  40fc32:	adc    edx,DWORD PTR [ebx-0x20aef470]
  40fc38:	(bad)  
  40fc39:	pushfw 
  40fc3b:	loopne 0x40fca3
  40fc3d:	dec    eax
  40fc3e:	ror    cl,cl
  40fc40:	xchg   DWORD PTR [ebx+edi*2+0x15],ebx
  40fc44:	mov    bh,0xbf
  40fc46:	pop    ebx
  40fc47:	xor    BYTE PTR [ebx+esi*1+0x2ef41129],al
  40fc4e:	jnp    0x40fcb2
  40fc50:	mov    dl,0xd0
  40fc52:	iret   
  40fc53:	xchg   ebp,eax
  40fc54:	add    DWORD PTR [eax],edx
  40fc56:	jp     0x40fccb
  40fc58:	xchg   dh,al
  40fc5a:	and    al,0x7e
  40fc5c:	pusha  
  40fc5d:	push   0xffffffc0
  40fc5f:	xchg   edi,eax
  40fc60:	nop
  40fc61:	outs   dx,BYTE PTR ds:[esi]
  40fc62:	sbb    eax,0x1c3b4516
  40fc67:	iret   
  40fc68:	dec    edx
  40fc69:	aam    0x8a
  40fc6b:	push   ebx
  40fc6c:	sbb    ecx,edi
  40fc6e:	xor    ebp,DWORD PTR [edx-0x40]
  40fc71:	les    ebp,FWORD PTR [edx-0x5aae4ad2]
  40fc77:	mov    dl,0xe0
  40fc79:	int    0x61
  40fc7b:	es scas eax,DWORD PTR es:[edi]
  40fc7d:	out    dx,eax
  40fc7e:	call   0xb19e:0xac573c7d
  40fc85:	inc    ebp
  40fc86:	jl     0x40fc44
  40fc88:	test   DWORD PTR [edi+ebp*4],eax
  40fc8b:	data16 sbb dl,dh
  40fc8e:	je     0x40fcd7
  40fc90:	(bad)  
  40fc91:	push   edx
  40fc92:	sub    DWORD PTR [ebp-0x7d],eax
  40fc95:	rol    BYTE PTR [esi-0x149e1f8a],1
  40fc9b:	mov    dh,0x2d
  40fc9d:	fst    DWORD PTR [ebp-0x276a0550]
  40fca3:	push   0xffffff84
  40fca5:	sar    DWORD PTR [ecx-0x30e063a6],1
  40fcab:	mov    bl,0x69
  40fcad:	xchg   esi,eax
  40fcae:	jmp    0xa050b964
  40fcb3:	(bad)  
  40fcb4:	mov    dh,0x4d
  40fcb6:	add    eax,0xa0cddb0b
  40fcbb:	adc    al,0x66
  40fcbd:	adc    DWORD PTR [eax],eax
  40fcbf:	addr16 out 0x1e,al
  40fcc2:	xchg   ebp,eax
  40fcc3:	iret   
  40fcc4:	and    BYTE PTR [edi-0x38e798a9],ch
  40fcca:	mov    edi,0xa42442ff
  40fccf:	out    dx,eax
  40fcd0:	bound  edi,QWORD PTR ds:0xe36a3c10
  40fcd6:	add    DWORD PTR [esi],edx
  40fcd8:	and    esp,DWORD PTR [ebp-0x52]
  40fcdb:	xor    BYTE PTR [ebp-0x448a8abb],bh
  40fce1:	cmc    
  40fce2:	test   al,0xeb
  40fce4:	or     BYTE PTR [eax+esi*2-0x2e],0x8f
  40fce9:	shrd   DWORD PTR [esi-0x5293c9a0],ecx,0x21
  40fcf1:	jmp    DWORD PTR [ebx+0x620a34ff]
  40fcf7:	xor    BYTE PTR [edx+0x36],cl
  40fcfa:	and    al,BYTE PTR [edx]
  40fcfc:	loope  0x40fd57
  40fcfe:	scas   eax,DWORD PTR es:[di]
  40fd00:	loope  0x40fccc
  40fd02:	ror    DWORD PTR [edi-0xb586846],0xc1
  40fd09:	loope  0x40fca6
  40fd0b:	jb     0x40fd4b
  40fd0d:	ss (bad) 
  40fd0f:	mov    bl,0x98
  40fd11:	scas   eax,DWORD PTR es:[edi]
  40fd12:	and    edx,DWORD PTR [ebx+edx*4-0x5d]
  40fd16:	cmp    edx,DWORD PTR [ecx]
  40fd18:	test   al,0xb4
  40fd1a:	or     eax,ebx
  40fd1c:	mov    esp,0x7a33835f
  40fd21:	scas   eax,DWORD PTR es:[edi]
  40fd22:	sub    ch,bh
  40fd24:	fadd   DWORD PTR [edi+0x203ea14d]
  40fd2a:	push   edi
  40fd2b:	or     BYTE PTR [esi],0x9
  40fd2e:	xor    ebx,DWORD PTR [ebx+0x32]
  40fd31:	mov    eax,0x2e7847b3
  40fd36:	sbb    DWORD PTR [edx],edx
  40fd38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd39:	cwd    
  40fd3b:	dec    ebx
  40fd3c:	test   DWORD PTR [edi-0x12c30708],eax
  40fd42:	jge    0x40fd41
  40fd44:	add    eax,0x9249e4a0
  40fd49:	mov    esp,0xb85a8bed
  40fd4e:	stos   BYTE PTR es:[edi],al
  40fd4f:	jp     0x622439cf
  40fd55:	or     cl,BYTE PTR ds:0x4bebe8ea
  40fd5b:	dec    edx
  40fd5c:	sub    dl,BYTE PTR [ebp-0x4d2fefc8]
  40fd62:	in     al,dx
  40fd63:	int    0xb1
  40fd65:	adc    DWORD PTR [eax-0x3f],esi
  40fd68:	js     0x40fda0
  40fd6a:	mov    dh,ch
  40fd6c:	mov    ebp,0xd560839c
  40fd71:	mov    ah,0x4f
  40fd73:	dec    esp
  40fd74:	add    eax,0x3f5473bf
  40fd79:	jns    0x40fd26
  40fd7b:	dec    ebx
  40fd7c:	add    DWORD PTR [ecx*4+0x6eeed453],ebx
  40fd83:	mov    al,0x93
  40fd85:	mov    edx,DWORD PTR [ebx]
  40fd87:	pop    esi
  40fd88:	enter  0xa16d,0x50
  40fd8c:	mov    ecx,0x9e3fc5e2
  40fd91:	(bad)  
  40fd93:	pop    edi
  40fd94:	adc    esp,DWORD PTR [ebx]
  40fd96:	dec    esi
  40fd97:	(bad)  
  40fd99:	push   0x3f
  40fd9b:	push   ebx
  40fd9c:	pop    ss
  40fd9d:	fsubp  st(5),st
  40fd9f:	(bad)  [edx+0x0]
  40fda2:	sub    BYTE PTR [edx],dl
  40fda4:	cmp    edi,edi
  40fda6:	mov    bl,0x90
  40fda8:	or     BYTE PTR [edx+0x1e],dl
  40fdab:	loope  0x40fd86
  40fdad:	inc    ebp
  40fdae:	fbstp  TBYTE PTR [eax-0x1133027]
  40fdb4:	popa   
  40fdb5:	arpl   WORD PTR [ecx+0x52858fa6],dx
  40fdbb:	pop    ecx
  40fdbc:	cvtps2pi mm7,QWORD PTR [edx+0x72e7b85a]
  40fdc3:	ds mov ebx,0x229ff0e3
  40fdc9:	(bad)  
  40fdca:	jge    0x40fe11
  40fdcc:	and    ecx,0xa8119098
  40fdd2:	push   ecx
  40fdd3:	ja     0x40fdff
  40fdd5:	stos   BYTE PTR es:[edi],al
  40fdd6:	mov    eax,DWORD PTR [ecx]
  40fdd8:	aad    0xd2
  40fdda:	repz mov gs,WORD PTR [esi-0x39]
  40fdde:	call   0xf177:0xd03d86a4
  40fde5:	add    al,0xd1
  40fde7:	mov    al,BYTE PTR [esi+0x2d]
  40fdea:	mov    cl,0xb9
  40fdec:	sub    dl,BYTE PTR [edi+0x334cc65f]
  40fdf2:	xchg   DWORD PTR [edi-0x6ac8525a],ebp
  40fdf8:	mov    bl,0x99
  40fdfa:	repz push esp
  40fdfc:	out    dx,al
  40fdfd:	sbb    al,BYTE PTR [eax+0x4ea1992d]
  40fe03:	push   ebp
  40fe04:	sub    BYTE PTR [eax+0x4840b8b0],bl
  40fe0a:	mov    ah,0x3d
  40fe0c:	and    ecx,DWORD PTR [edx-0x673e1a29]
  40fe12:	or     cl,cl
  40fe14:	mov    ebp,0x73d9eb7d
  40fe19:	push   ds
  40fe1a:	leave  
  40fe1b:	jbe    0x40fe0a
  40fe1d:	popa   
  40fe1e:	and    bh,al
  40fe20:	pop    ecx
  40fe21:	and    DWORD PTR [esi],esi
  40fe23:	xor    dl,ch
  40fe25:	cwde   
  40fe26:	mov    dl,0xe7
  40fe28:	cwde   
  40fe29:	sbb    al,0xd1
  40fe2b:	pop    edi
  40fe2c:	jecxz  0x40fdec
  40fe2e:	sbb    BYTE PTR [eax-0x21],cl
  40fe31:	dec    esp
  40fe32:	add    DWORD PTR [ecx+0x53],ebx
  40fe35:	inc    esi
  40fe36:	dec    ebp
  40fe37:	xlat   BYTE PTR ds:[ebx]
  40fe38:	inc    esp
  40fe39:	jecxz  0x40fe53
  40fe3b:	inc    ebx
  40fe3c:	outs   dx,BYTE PTR ds:[esi]
  40fe3d:	adc    BYTE PTR [ebx+ebp*8-0x37],0xae
  40fe42:	jecxz  0x40fe5e
  40fe44:	or     al,0x69
  40fe46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe47:	or     BYTE PTR [eax+0x7e6faeff],ch
  40fe4d:	nop
  40fe4e:	xchg   dh,ch
  40fe50:	test   al,0xf7
  40fe52:	sbb    BYTE PTR [esi-0x644cf9f8],ch
  40fe58:	mov    dh,0xe
  40fe5a:	dec    edx
  40fe5b:	(bad)  
  40fe5c:	and    al,0xa8
  40fe5e:	jl     0x40fdfa
  40fe60:	pop    esp
  40fe61:	xchg   bh,ah
  40fe63:	mov    eax,0x5df1b858
  40fe68:	fxch   st(7)
  40fe6a:	cmp    esp,DWORD PTR [ebx-0x3a847f0e]
  40fe70:	pop    edi
  40fe71:	mov    ds:0x482437f3,eax
  40fe76:	retf   0x4cb6
  40fe79:	xchg   esi,eax
  40fe7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe7b:	mov    BYTE PTR [ebx],al
  40fe7d:	int    0x7e
  40fe7f:	jge    0x40febc
  40fe81:	jae    0x40fe74
  40fe83:	shl    BYTE PTR ss:[edx+0x4c],0x8c
  40fe88:	mov    al,0x9f
  40fe8a:	add    DWORD PTR [ebx],edi
  40fe8c:	out    0x6e,eax
  40fe8e:	and    DWORD PTR [eax+0x36be135f],esp
  40fe94:	inc    esp
  40fe95:	repnz xor BYTE PTR [ebp+0x7a],ch
  40fe99:	dec    esp
  40fe9a:	fcom   DWORD PTR [esi+edi*8+0x1e]
  40fe9e:	add    al,0x71
  40fea0:	push   eax
  40fea1:	xor    al,0xa3
  40fea3:	or     BYTE PTR [esi-0x640d8d0],ch
  40fea9:	pusha  
  40feaa:	pop    ecx
  40feab:	loope  0x40fe57
  40fead:	push   ecx
  40feae:	fninit 
  40feb0:	pushf  
  40feb1:	mov    ecx,0xb0fb63c7
  40feb6:	adc    eax,0xa5d66383
  40febb:	rol    DWORD PTR [ebp+0x2f20a6cf],1
  40fec1:	or     BYTE PTR [edi],0x4b
  40fec4:	xor    BYTE PTR [edx],al
  40fec6:	jbe    0x40fe53
  40fec8:	adc    eax,0x5ef1da0d
  40fecd:	(bad)
  40fed0:	mov    bh,0xd6
  40fed2:	loop   0x40ff3d
  40fed4:	pop    ds
  40fed5:	(bad)  
  40fed7:	sti    
  40fed8:	sub    BYTE PTR [ecx-0x242b5087],0xee
  40fedf:	shl    BYTE PTR [esi+ebx*8+0x4b73e05e],1
  40fee6:	jae    0x40fef2
  40fee8:	js     0x40ff28
  40feea:	inc    eax
  40feeb:	std    
  40feec:	cld    
  40feed:	pop    ebx
  40feee:	mov    bh,0x54
  40fef0:	jbe    0x40feb9
  40fef2:	mov    eax,esp
  40fef4:	and    BYTE PTR [edi+0xb7d69bd],0x98
  40fefb:	sub    eax,0x7a62398f
  40ff00:	cli    
  40ff01:	cpuid  
  40ff03:	and    al,0x86
  40ff05:	call   0xf252:0xdb0093c2
  40ff0c:	jno    0x40fee6
  40ff0e:	push   cs
  40ff0f:	and    edi,esi
  40ff11:	test   DWORD PTR [ebx-0x3b155a68],0xea68e338
  40ff1b:	push   0xffffff8c
  40ff1d:	pusha  
  40ff1e:	xor    dh,cl
  40ff20:	mov    ebx,0x1f1c8f93
  40ff25:	lea    ecx,[ecx-0x5b]
  40ff28:	or     dl,BYTE PTR [ebp+0x4acabc8a]
  40ff2e:	cs call 0x9716:0x11d096d1
  40ff36:	jo     0x40ff4b
  40ff38:	push   esp
  40ff39:	test   al,0x35
  40ff3b:	adc    eax,0x3f688bc7
  40ff40:	adc    DWORD PTR [esi-0x6e],0x5eaf4142
  40ff47:	mov    bl,0xe6
  40ff49:	jmp    0x5279b835
  40ff4e:	pop    edx
  40ff4f:	xor    dl,BYTE PTR [edx-0x22]
  40ff52:	dec    edx
  40ff53:	rol    BYTE PTR [eax],cl
  40ff55:	std    
  40ff56:	pop    ebp
  40ff57:	imul   BYTE PTR [edi+0x12]
  40ff5a:	mov    ebx,0xeb438544
  40ff5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff60:	stc    
  40ff61:	jo     0x40ff7c
  40ff63:	xchg   ebx,edi
  40ff65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff66:	enter  0x9091,0xc2
  40ff6a:	pop    ecx
  40ff6b:	jp     0x40ff8d
  40ff6d:	jle    0x40ffe1
  40ff6f:	in     al,dx
  40ff70:	in     eax,0xdd
  40ff72:	bt     eax,edi
  40ff75:	jmp    FWORD PTR [ebx+eiz*8]
  40ff78:	fisttp WORD PTR [edi+esi*4-0x42]
  40ff7c:	ror    ch,0x84
  40ff7f:	mov    edi,0xe882f0be
  40ff84:	rol    ebx,0xb0
  40ff87:	repz mov esp,0x6670ad6
  40ff8d:	or     al,0xb5
  40ff8f:	mov    esi,DWORD PTR [ecx]
  40ff91:	mov    al,ds:0x1eb50fa3
  40ff96:	pop    ss
  40ff97:	and    esi,esp
  40ff99:	test   dl,0x9b
  40ff9c:	xchg   edi,eax
  40ff9d:	(bad)  
  40ff9e:	stos   BYTE PTR es:[edi],al
  40ff9f:	add    DWORD PTR [edi],esi
  40ffa1:	test   DWORD PTR [ecx+0x15],ebx
  40ffa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa5:	rcl    DWORD PTR [eax+esi*8-0x26f4686e],1
  40ffac:	and    al,0xc2
  40ffae:	scas   al,BYTE PTR es:[edi]
  40ffaf:	sar    bl,0x9d
  40ffb2:	pop    es
  40ffb3:	jg     0x410021
  40ffb5:	mov    ecx,0x64a0338a
  40ffba:	mov    esi,0x74b4f900
  40ffbf:	repnz pusha 
  40ffc1:	xchg   DWORD PTR [edi+0x49],eax
  40ffc4:	cld    
  40ffc5:	fbld   TBYTE PTR [ecx+0x56]
  40ffc8:	dec    al
  40ffca:	cld    
  40ffcb:	pushf  
  40ffcc:	cmp    ebp,0x91dd9eb5
  40ffd2:	ins    DWORD PTR es:[edi],dx
  40ffd3:	test   eax,0xcd2085b0
  40ffd8:	inc    esp
  40ffd9:	das    
  40ffda:	push   edx
  40ffdb:	loopne 0x40ffd1
  40ffdd:	stc    
  40ffde:	sbb    dl,dh
  40ffe0:	std    
  40ffe1:	jns    0x40ff74
  40ffe3:	push   ss
  40ffe4:	mov    dl,0xe7
  40ffe6:	addr16 jg 0x410008
  40ffe9:	inc    esp
  40ffea:	shl    ecx,0x6e
  40ffed:	mov    esi,0x5ed5f37f
  40fff2:	(bad)  
  40fff4:	ins    BYTE PTR es:[edi],dx
  40fff5:	sbb    bh,cl
  40fff7:	sti    
  40fff8:	cmp    DWORD PTR [edi-0x223c08af],ebp
  40fffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffff:	xlat   BYTE PTR ds:[ebx]
  410000:	push   ebx
  410001:	inc    edx
  410002:	adc    BYTE PTR [eax],0xbb
  410005:	call   0xaad4f0e4
  41000a:	cmp    eax,0x375a4e31
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	psubusw mm4,mm7
  410013:	leave  
  410014:	jae    0x410077
  410016:	cmc    
  410017:	test   DWORD PTR [ebx-0x7b],0x7d226bce
  41001e:	popf   
  41001f:	cmp    BYTE PTR ds:[ecx-0x6b],bh
  410023:	and    al,0xbc
  410025:	push   ebp
  410026:	daa    
  410027:	mov    cs,ecx
  410029:	popf   
  41002a:	out    dx,eax
  41002b:	cmc    
  41002c:	sub    ebp,DWORD PTR [edi]
  41002e:	(bad)  
  41002f:	ss xchg esi,eax
  410031:	cmp    edi,DWORD PTR ds:0x1f0bf9e3
  410037:	sbb    BYTE PTR [edi-0x7f],bh
  41003a:	scas   al,BYTE PTR es:[edi]
  41003b:	pop    ebx
  41003c:	inc    eax
  41003d:	pushf  
  41003e:	mov    esi,0x476b40d8
  410043:	scas   eax,DWORD PTR es:[edi]
  410044:	fistp  WORD PTR [esi+0x12102fa0]
  41004a:	arpl   cx,bp
  41004c:	sbb    BYTE PTR [ecx+0x6e369c15],al
  410052:	icebp  
  410053:	inc    ebp
  410054:	xchg   ecx,eax
  410055:	rcl    BYTE PTR [eax-0x55],0x8a
  410059:	jb     0x4100cc
  41005b:	test   eax,0x318b34b6
  410060:	fist   DWORD PTR [ebp-0x6a406928]
  410066:	pop    ebx
  410067:	shr    BYTE PTR [eax+0x22203cfe],0xcc
  41006e:	mov    bh,BYTE PTR ds:0x1a38b6f5
  410074:	xchg   edi,eax
  410075:	push   es
  410076:	or     edi,DWORD PTR [eax]
  410078:	out    0x1b,eax
  41007a:	xchg   edi,eax
  41007b:	pop    ss
  41007c:	test   al,0x4d
  41007e:	cmp    esi,0x673df04c
  410084:	test   BYTE PTR [edx+edi*1+0x5062c13],ch
  41008b:	mov    bl,0x31
  41008d:	mov    dl,BYTE PTR [edx-0x78]
  410090:	jmp    0xb01ffdc4
  410095:	or     dl,BYTE PTR [di-0x7e]
  410099:	shl    BYTE PTR [edi+eiz*2+0x5e],1
  41009d:	adc    edx,esi
  41009f:	std    
  4100a0:	clc    
  4100a1:	cli    
  4100a2:	div    BYTE PTR [ebx+0x12]
  4100a5:	pop    esp
  4100a6:	cmp    ah,dl
  4100a8:	push   ss
  4100a9:	xchg   edi,eax
  4100aa:	ret    
  4100ab:	shl    BYTE PTR [ecx-0x2e],cl
  4100ae:	mov    edx,0xc2a711f5
  4100b3:	or     eax,0x930e59d9
  4100b8:	push   0x4
  4100ba:	(bad)  
  4100bb:	xchg   esp,eax
  4100bc:	sub    al,0x4d
  4100be:	ins    BYTE PTR es:[edi],dx
  4100bf:	test   DWORD PTR [ecx+edx*2-0x74],esp
  4100c3:	add    dl,dh
  4100c5:	gs mov edi,0x8f925dd2
  4100cb:	mov    ecx,0x6450920e
  4100d0:	mov    esi,0x7eec0cae
  4100d5:	arpl   ax,dx
  4100d7:	jno    0x410147
  4100d9:	mov    ecx,0xa0642257
  4100de:	cdq    
  4100df:	mov    eax,ds:0x42e32b8c
  4100e4:	jmp    0x5bcdc5b1
  4100e9:	cld    
  4100ea:	in     eax,0x6b
  4100ec:	idiv   DWORD PTR [ebx]
  4100ee:	cwde   
  4100ef:	mov    ch,0x22
  4100f1:	mov    bl,0xc9
  4100f3:	in     al,0xe9
  4100f5:	sbb    dl,bl
  4100f7:	dec    eax
  4100f8:	dec    esp
  4100f9:	jp     0x41009a
  4100fb:	(bad)  
  4100fc:	xchg   esp,eax
  4100fd:	rcl    DWORD PTR [esp+eiz*4],1
  410100:	sub    al,BYTE PTR [esi+0x27147524]
  410106:	outs   dx,DWORD PTR ds:[esi]
  410107:	inc    ebx
  410108:	mov    esp,0x5df5dd2b
  41010d:	call   0x3818:0x8491abd3
  410114:	retf   
  410115:	mov    edx,0x44c5c137
  41011a:	inc    esp
  41011b:	pop    ebp
  41011c:	aad    0x2e
  41011e:	push   edi
  41011f:	add    DWORD PTR [edx+edi*8+0x11],edi
  410123:	xor    al,0x87
  410125:	push   ds
  410126:	das    
  410127:	inc    ebp
  410128:	mov    ds:0x160ba081,al
  41012d:	(bad)  
  41012e:	xchg   ebx,eax
  41012f:	nop
  410130:	fsubr  DWORD PTR [ebx+eiz*4+0x7a]
  410134:	pop    esp
  410135:	int3   
  410136:	fldenv [edi-0x265feb31]
  41013c:	out    0x6f,eax
  41013e:	jmp    0x6690cc42
  410143:	inc    ecx
  410144:	mov    ch,0x81
  410146:	jl     0x4101b2
  410148:	push   eax
  410149:	add    edi,eax
  41014b:	xchg   DWORD PTR [edx+edi*8+0x5d],edx
  41014f:	fist   WORD PTR [ebp+0x76fcfd9c]
  410155:	xchg   ecx,eax
  410156:	mov    ebx,0xfae0a75b
  41015b:	jg     0x4100f4
  41015d:	test   DWORD PTR ds:0x86b71fa3,edi
  410163:	mov    eax,ds:0x41acb492
  410168:	adc    edi,esp
  41016a:	pop    ds
  41016b:	mov    esi,0xdb41468d
  410170:	push   edx
  410171:	loopne 0x410177
  410173:	pop    esp
  410174:	out    dx,eax
  410175:	and    DWORD PTR [eax+0x62],0x6e
  410179:	ja     0x4101c3
  41017b:	mov    eax,ds:0x67519c0a
  410180:	lahf   
  410181:	dec    ebp
  410182:	adc    ebp,edi
  410184:	push   ds
  410185:	ror    eax,0x13
  410188:	cmp    al,0xdc
  41018a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41018b:	or     DWORD PTR [ecx+edi*8-0x42df619d],ebp
  410192:	out    dx,al
  410193:	add    DWORD PTR [esi],0xf86bc43f
  410199:	test   eax,0xa354dd4b
  41019e:	lock sub ecx,DWORD PTR [edx+esi*4]
  4101a2:	xchg   esi,eax
  4101a3:	clc    
  4101a4:	and    cl,ah
  4101a6:	adc    al,BYTE PTR [eax]
  4101a8:	inc    esi
  4101a9:	rol    DWORD PTR [eax],cl
  4101ab:	stos   BYTE PTR es:[edi],al
  4101ac:	into   
  4101ad:	icebp  
  4101ae:	and    eax,0xec5e68a5
  4101b3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4101b5:	call   FWORD PTR [esi+0x6c697902]
  4101bb:	mov    ch,0x3e
  4101bd:	add    DWORD PTR [edx],0xc228978f
  4101c3:	ins    BYTE PTR es:[edi],dx
  4101c4:	imul   eax,DWORD PTR [ebx-0x69],0xd0cddac1
  4101cb:	aad    0xab
  4101cd:	lea    edx,[ebx]
  4101cf:	neg    DWORD PTR [esi+0x17]
  4101d2:	jecxz  0x4101ad
  4101d4:	ret    
  4101d5:	mov    DWORD PTR [ebp+0x72b64d63],esp
  4101db:	and    eax,0xd6d3d7c7
  4101e0:	cmp    bh,0x3f
  4101e3:	ja     0x410260
  4101e5:	out    0xec,al
  4101e7:	push   cs
  4101e8:	xor    dl,BYTE PTR [esi+0x7b]
  4101eb:	adc    BYTE PTR [eax+0x29],bl
  4101ee:	inc    ecx
  4101ef:	aad    0x98
  4101f1:	or     BYTE PTR [ebp-0x3b5d73bd],0xf6
  4101f8:	sbb    al,0x98
  4101fa:	mul    DWORD PTR [ecx]
  4101fc:	not    al
  4101fe:	jle    0x4101f0
  410200:	ds aaa 
  410202:	add    DWORD PTR [esi-0x38454c5c],eax
  410208:	mov    ebp,0x4ac3bd08
  41020d:	mov    edx,0x26e54edc
  410212:	mov    cl,0x90
  410214:	loopne 0x410283
  410216:	shl    cl,cl
  410218:	sbb    eax,0xc6bd7d5c
  41021d:	cmp    cl,0x49
  410220:	imul   esi,DWORD PTR [edi],0x56
  410223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410224:	fnstenv [ebx+0x66]
  410227:	adc    DWORD PTR [esi-0x1e],esp
  41022a:	dec    ebx
  41022b:	mov    DWORD PTR [ecx],0x5928592f
  410231:	es pop ebp
  410233:	mov    ds:0x635a50d6,eax
  410238:	gs push cs
  41023a:	xor    BYTE PTR [ebp+0x70210e5c],al
  410240:	dec    edi
  410241:	adc    eax,0xe67f1564
  410246:	in     eax,0x11
  410248:	(bad)  
  410249:	pop    esi
  41024a:	and    eax,0xa94ed953
  41024f:	cmp    eax,0x91e81964
  410254:	popf   
  410255:	push   0x5b5a7afc
  41025a:	xchg   bh,al
  41025c:	add    al,0xb
  41025e:	push   0xffffff89
  410260:	sti    
  410261:	jns    0x4102c3
  410263:	push   ebx
  410264:	out    0x22,al
  410266:	in     eax,0x22
  410268:	test   eax,0x787fdb2c
  41026d:	call   FWORD PTR [ebx-0x6f]
  410270:	sub    al,0xb7
  410272:	pop    es
  410273:	popf   
  410274:	(bad)  
  410275:	scas   eax,DWORD PTR es:[edi]
  410276:	sub    BYTE PTR ds:0x879b5ed5,bl
  41027c:	(bad)  [edx-0x65]
  41027f:	inc    esp
  410280:	inc    eax
  410281:	inc    esp
  410282:	add    eax,0x86626f7
  410287:	pop    es
  410288:	gs das 
  41028a:	lahf   
  41028b:	aam    0x7e
  41028d:	and    edx,eax
  41028f:	(bad)  
  410290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410291:	add    bh,BYTE PTR [ebp-0x429b3f48]
  410297:	lock sbb BYTE PTR [edi+0x3bdf348f],ah
  41029e:	mov    dl,0x6b
  4102a0:	push   0x77
  4102a2:	cs gs xchg ecx,eax
  4102a5:	bound  edx,QWORD PTR [eax+0x40]
  4102a8:	imul   ebp,DWORD PTR [edx-0x35],0xffffff91
  4102ac:	sbb    ecx,DWORD PTR [ecx+0x65]
  4102af:	cmp    eax,0x6404dab0
  4102b4:	mov    ebp,0x58d10cb1
  4102b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ba:	xchg   edx,eax
  4102bb:	sub    DWORD PTR [esi+0x55],esi
  4102be:	xor    al,0xd9
  4102c0:	mov    bh,0xb5
  4102c2:	jo     0x410256
  4102c4:	aaa    
  4102c5:	outs   dx,BYTE PTR ds:[esi]
  4102c6:	cmp    bl,0x40
  4102c9:	ins    BYTE PTR es:[edi],dx
  4102ca:	out    dx,al
  4102cb:	ins    DWORD PTR es:[edi],dx
  4102cc:	mov    bh,0xec
  4102ce:	mov    esi,0x51472559
  4102d3:	add    DWORD PTR [edx],ebx
  4102d5:	fnstenv [edx-0x77]
  4102d8:	and    BYTE PTR [ebx+0x7f19063],ah
  4102de:	cmc    
  4102df:	(bad)  
  4102e0:	call   0xd178:0xebe5675d
  4102e7:	mov    ecx,0x15482a9e
  4102ec:	dec    edx
  4102ed:	ins    DWORD PTR es:[edi],dx
  4102ee:	test   ecx,ebx
  4102f0:	add    eax,0x750d8637
  4102f5:	lods   eax,DWORD PTR ds:[esi]
  4102f6:	inc    esp
  4102f7:	push   esi
  4102f8:	outs   dx,BYTE PTR ds:[esi]
  4102f9:	test   al,0xe
  4102fb:	xor    BYTE PTR ds:0xe0a4a6aa,bl
  410301:	xor    ecx,eax
  410303:	fist   WORD PTR [ebx]
  410305:	push   ss
  410306:	fst    DWORD PTR [ebx+ebx*1-0x4692a102]
  41030d:	int    0x8f
  41030f:	mov    esi,0x4952ef3
  410314:	cld    
  410315:	dec    ebx
  410316:	loop   0x41031f
  410318:	sbb    bh,bl
  41031a:	fisubr WORD PTR [esi+ebp*4-0x21]
  41031e:	dec    ebx
  41031f:	mov    eax,ds:0x5ba96c14
  410324:	pop    ds
  410325:	imul   BYTE PTR [ebx]
  410327:	push   edx
  410328:	rcr    DWORD PTR [eax+0x641d2426],1
  41032e:	mov    al,0xe8
  410330:	mov    ds:0x57a4883f,eax
  410335:	pop    edi
  410336:	out    0x3d,al
  410338:	xlat   BYTE PTR ds:[ebx]
  410339:	push   0x56
  41033b:	push   esi
  41033c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41033d:	or     al,bl
  41033f:	sub    BYTE PTR [esi+eax*2],bh
  410342:	jae    0x410314
  410344:	mov    bh,0x6a
  410346:	dec    edx
  410347:	out    0x1d,eax
  410349:	sbb    eax,0xa4e07327
  41034f:	pop    ebx
  410350:	ja     0x41030c
  410352:	std    
  410353:	xlat   BYTE PTR ds:[ebx]
  410354:	aas    
  410355:	pop    edi
  410356:	cs xor esi,edx
  410359:	icebp  
  41035a:	dec    ecx
  41035b:	inc    edx
  41035c:	stc    
  41035d:	xor    bl,BYTE PTR [ebx]
  41035f:	fcmovnu st,st(1)
  410361:	push   cs
  410362:	stos   BYTE PTR es:[edi],al
  410363:	cmp    DWORD PTR [edx],ecx
  410365:	jae    0x41031c
  410367:	shl    DWORD PTR [ebx-0x76],cl
  41036a:	jge    0x4102f3
  41036c:	(bad)  
  41036d:	out    dx,al
  41036e:	and    DWORD PTR [esi+0x4e1606b6],esp
  410374:	push   ebp
  410375:	add    ch,BYTE PTR [ecx-0x6b]
  410378:	jae    0x41030f
  41037a:	pop    ds
  41037b:	jge    0x4103af
  41037d:	push   ecx
  41037e:	pushf  
  41037f:	test   al,0xce
  410381:	and    al,0xc8
  410383:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410385:	mov    WORD PTR [eax+0xe72908c],fs
  41038b:	mul    BYTE PTR [edi+0x732f7686]
  410391:	icebp  
  410392:	mov    BYTE PTR [eax-0xc],ch
  410395:	xchg   edx,eax
  410396:	jmp    0x95634d6a
  41039b:	add    bh,dl
  41039d:	outs   dx,BYTE PTR ds:[esi]
  41039e:	cs loop 0x41033f
  4103a1:	add    edi,DWORD PTR [ecx]
  4103a3:	aaa    
  4103a4:	rol    DWORD PTR [esi],0x44
  4103a7:	and    esp,DWORD PTR [ebp+0x4e]
  4103aa:	jge    0x4103f9
  4103ac:	push   esi
  4103ad:	add    al,0x39
  4103af:	fimul  WORD PTR [ebp+0x4c]
  4103b2:	out    dx,al
  4103b3:	daa    
  4103b4:	mov    esi,DWORD PTR [ebx+0x20]
  4103b7:	(bad)  [ecx+eax*4]
  4103ba:	push   0xffffffb8
  4103bc:	lods   al,BYTE PTR ds:[esi]
  4103bd:	xor    al,0xc8
  4103bf:	ret    
  4103c0:	inc    eax
  4103c1:	or     al,0xef
  4103c3:	mov    bl,0xbe
  4103c5:	retf   0xde71
  4103c8:	lods   eax,DWORD PTR ds:[esi]
  4103c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103ca:	push   ecx
  4103cb:	xchg   edx,eax
  4103cc:	sub    al,0x85
  4103ce:	mov    bh,0x6f
  4103d0:	push   es
  4103d1:	int3   
  4103d2:	pop    esp
  4103d3:	loope  0x41043d
  4103d5:	cmp    BYTE PTR [eax],ah
  4103d7:	cs pop es
  4103d9:	je     0x410402
  4103db:	fnstsw WORD PTR [edi-0x3]
  4103de:	or     BYTE PTR [esi+ebx*2],ah
  4103e1:	test   DWORD PTR [esi-0x2a],0x4c2f00c4
  4103e8:	sbb    BYTE PTR [edx-0x7a],bh
  4103eb:	aam    0xb8
  4103ed:	pop    edi
  4103ee:	xchg   edi,eax
  4103ef:	out    0xcf,eax
  4103f1:	push   ebp
  4103f2:	mov    al,ds:0xe5329e1f
  4103f7:	xchg   ecx,eax
  4103f8:	rcl    DWORD PTR [esi+0x2d],0x6d
  4103fc:	and    al,0x40
  4103fe:	pop    ss
  4103ff:	aad    0x4d
  410401:	ror    BYTE PTR ss:[ecx+0x63be7742],0x52
  410409:	out    0x6a,al
  41040b:	jnp    0x4103a0
  41040d:	test   eax,0x1059773c
  410412:	mov    DWORD PTR [ebp+0x64bf74f3],eax
  410418:	cli    
  410419:	add    BYTE PTR [edx-0x24],al
  41041c:	dec    esi
  41041d:	adc    DWORD PTR [ebp+0x4769fa15],ebx
  410423:	dec    DWORD PTR [esp+esi*2+0x1367082f]
  41042a:	push   ebx
  41042b:	cmc    
  41042c:	fs icebp 
  41042e:	test   al,0x2f
  410430:	xor    edi,DWORD PTR [esi+ecx*1-0x7b]
  410434:	push   ss
  410435:	sbb    DWORD PTR [eax-0x607aefc4],ebp
  41043b:	add    DWORD PTR gs:[ebp-0x62195217],eax
  410442:	mov    ch,0xcf
  410444:	loop   0x410495
  410446:	int    0x6a
  410448:	mov    esp,0x404a0515
  41044d:	xchg   BYTE PTR [ebx],bl
  41044f:	sub    ebp,DWORD PTR [edx+0x2b752387]
  410455:	(bad)  
  410456:	fwait
  410457:	or     BYTE PTR [esi],cl
  410459:	dec    ebp
  41045a:	jle    0x410470
  41045c:	xor    DWORD PTR [eax],ebp
  41045e:	bound  ebp,QWORD PTR [ecx]
  410460:	mov    ch,0x85
  410462:	(bad)  
  410463:	test   al,0x1d
  410465:	rol    DWORD PTR [ebp-0x67a12b62],cl
  41046b:	push   0x59
  41046d:	xor    esi,DWORD PTR [ebp+edx*2-0x4cc5191c]
  410474:	iret   
  410475:	(bad)  
  410477:	add    al,0xac
  410479:	data16 xchg BYTE PTR [ebp-0x5dee2504],dh
  410480:	(bad)  
  410482:	sub    esp,DWORD PTR [ecx+0x7c63347a]
  410488:	mov    ecx,0xa8b18e77
  41048d:	in     eax,0x18
  41048f:	sub    bh,BYTE PTR [ecx-0x10]
  410492:	or     al,0x23
  410494:	ins    BYTE PTR es:[edi],dx
  410495:	add    dl,bl
  410497:	mov    eax,0x2fd25352
  41049c:	nop
  41049d:	in     al,dx
  41049e:	repz jnp 0x4104dc
  4104a1:	push   ds
  4104a2:	and    BYTE PTR [esi+0x21],dh
  4104a5:	cmp    ah,BYTE PTR [edi+ebp*8-0x76]
  4104a9:	push   cs
  4104aa:	out    0x71,eax
  4104ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104ad:	cmp    BYTE PTR [edi+0x4b],0x86
  4104b1:	sbb    BYTE PTR [ebx-0x70],al
  4104b4:	mov    bl,0x13
  4104b6:	jge    0x410505
  4104b8:	popf   
  4104b9:	rol    DWORD PTR [edx+0x2573e1ee],0x87
  4104c0:	jno    0x4104d6
  4104c2:	shl    bl,cl
  4104c4:	jle    0x4104bd
  4104c6:	xor    ebx,ebp
  4104c8:	add    bh,BYTE PTR [edx]
  4104ca:	sub    DWORD PTR [edi+0x66daf97d],edx
  4104d0:	dec    ebx
  4104d1:	pop    ecx
  4104d2:	adc    BYTE PTR [esi+0x64],bl
  4104d5:	ins    BYTE PTR es:[edi],dx
  4104d6:	adc    BYTE PTR [edi+0x7d],dh
  4104d9:	add    DWORD PTR [edx],esi
  4104db:	repnz push edx
  4104dd:	cli    
  4104de:	loope  0x4104f3
  4104e0:	test   al,0x68
  4104e2:	inc    esi
  4104e3:	mov    cl,0x28
  4104e5:	adc    DWORD PTR [edx],edi
  4104e7:	ins    DWORD PTR es:[edi],dx
  4104e8:	lds    ebp,FWORD PTR [eax+0x1f]
  4104eb:	pop    DWORD PTR [esi]
  4104ed:	and    edi,DWORD PTR [ebx]
  4104ef:	repz dec ecx
  4104f1:	call   0x9de5:0xfbc89067
  4104f8:	imul   ebp,DWORD PTR ds:0x4e259539,0x6b
  4104ff:	ss mov es:0x437a01e9,eax
  410506:	mov    DWORD PTR [edi-0x1388adec],esi
  41050c:	bound  edx,QWORD PTR [edx]
  41050e:	inc    edx
  41050f:	mov    ch,0xee
  410511:	mov    ebx,0x2f42404a
  410516:	cs ret 0x1630
  41051a:	sub    eax,0x5ad40c6c
  41051f:	mov    bh,0xb4
  410521:	mov    dh,0x46
  410523:	dec    esp
  410524:	mov    bh,0x75
  410526:	or     eax,0x9b5cf8a
  41052b:	sub    DWORD PTR [esi],ecx
  41052d:	cmp    al,0x61
  41052f:	xchg   BYTE PTR [edi],bl
  410531:	sbb    bl,0x71
  410534:	mov    eax,0xc31a561
  410539:	div    BYTE PTR [edi+0x65ea7b9a]
  41053f:	push   0x498d5c61
  410544:	push   esi
  410545:	sti    
  410546:	xchg   esp,eax
  410547:	fs mov eax,0x3b48ea48
  41054d:	mov    ds:0x14c1dd09,al
  410552:	xchg   ebx,eax
  410553:	stc    
  410554:	add    DWORD PTR [ecx],ebp
  410556:	fld    QWORD PTR [edx]
  410558:	or     ecx,DWORD PTR [ebx+0x75]
  41055b:	pop    es
  41055c:	ins    DWORD PTR es:[edi],dx
  41055d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41055f:	loopne 0x4104fb
  410561:	pop    esp
  410562:	jg     0x4105b1
  410564:	mov    al,0xf2
  410566:	sti    
  410567:	jge    0x41057a
  410569:	add    DWORD PTR [eax+0x526d2fcf],ebx
  41056f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410571:	jmp    0x4105d1
  410573:	adc    BYTE PTR [edx+0x4b],bl
  410576:	fsub   QWORD PTR [edx+0x4f]
  410579:	xor    edi,edi
  41057b:	into   
  41057c:	iret   
  41057d:	jecxz  0x410556
  41057f:	add    eax,0x1a25ab41
  410584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410585:	push   esi
  410586:	xor    al,0xf5
  410588:	mov    dh,0xb2
  41058a:	sub    dl,BYTE PTR [eax+0x70]
  41058d:	inc    eax
  41058e:	mov    edx,0xd1783343
  410593:	pop    eax
  410594:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410596:	clc    
  410597:	cli    
  410598:	lds    ecx,FWORD PTR [edx-0x64]
  41059b:	stos   DWORD PTR es:[edi],eax
  41059c:	mov    WORD PTR [ebx+0x65],fs
  41059f:	sub    dl,BYTE PTR [edi]
  4105a1:	inc    edx
  4105a2:	jb     0x410542
  4105a4:	jae    0x41056b
  4105a6:	sbb    eax,0x891aa925
  4105ab:	fisub  WORD PTR [ebp+eax*4-0x7a78c7ee]
  4105b2:	mov    ds:0xfa54f59c,eax
  4105b7:	xchg   edi,eax
  4105b8:	xor    ebp,DWORD PTR [edi]
  4105ba:	sbb    DWORD PTR [ebp-0x4c],0xffffffc7
  4105be:	sub    ebx,ebx
  4105c0:	in     al,dx
  4105c1:	jge    0x4105ba
  4105c3:	cmp    al,0x8
  4105c5:	pop    esi
  4105c6:	jmp    0x410613
  4105c8:	(bad)  
  4105c9:	add    eax,0xebaaf2e5
  4105ce:	mov    al,ds:0xa6c104ac
  4105d3:	mov    eax,0xddf501f8
  4105d8:	mov    cl,0x7f
  4105da:	xor    al,0x1a
  4105dc:	push   edi
  4105dd:	lods   eax,DWORD PTR ds:[esi]
  4105de:	std    
  4105df:	pop    ebx
  4105e0:	leave  
  4105e1:	ror    BYTE PTR [edx+0x63],1
  4105e4:	add    ah,BYTE PTR [esp+edx*8-0x25]
  4105e8:	(bad)  
  4105e9:	ins    BYTE PTR es:[edi],dx
  4105ea:	ja     0x4105a0
  4105ec:	int    0x62
  4105ee:	test   BYTE PTR [eax],al
  4105f0:	or     dh,dl
  4105f2:	ss jmp 0x410594
  4105f5:	aas    
  4105f6:	ret    0xd2b
  4105f9:	shl    cl,1
  4105fb:	pop    edi
  4105fc:	jbe    0x410596
  4105fe:	mul    ebp
  410600:	xor    edx,DWORD PTR [eax+0x28]
  410603:	mov    ds:0x687ed88,eax
  410608:	test   DWORD PTR [esi-0x76a26756],ebp
  41060e:	repnz xor BYTE PTR [ebx],0xdd
  410612:	popf   
  410613:	mov    ecx,ds
  410615:	xchg   ecx,eax
  410616:	dec    esi
  410617:	mov    ch,0xb1
  410619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41061a:	or     dh,ch
  41061c:	fdiv   QWORD PTR [edi+0x63ccb855]
  410622:	mov    bh,0xdd
  410624:	shr    DWORD PTR [edx+ebp*4-0x25],0x2d
  410629:	repz dec eax
  41062b:	jns    0x41069b
  41062d:	pusha  
  41062e:	jmp    0x410663
  410630:	outs   dx,BYTE PTR ds:[esi]
  410631:	and    esp,DWORD PTR [edi-0x5c]
  410634:	add    al,0xb8
  410637:	ja     0x410670
  410639:	lds    ebp,FWORD PTR [ebp-0x16]
  41063c:	fdiv   QWORD PTR es:[edi-0x2480bbe5]
  410643:	(bad)  
  410644:	dec    esp
  410645:	adc    DWORD PTR [edx],eax
  410647:	adc    edi,0x35f26c24
  41064d:	into   
  41064e:	mov    dl,0x42
  410650:	mov    BYTE PTR [eax],bl
  410652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410653:	mov    al,ds:0x7c21736a
  410658:	aas    
  410659:	out    dx,eax
  41065a:	xchg   edx,eax
  41065b:	arpl   WORD PTR [eax],dx
  41065d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41065e:	mov    bh,0xfc
  410660:	or     al,0x6e
  410662:	mov    edx,0x5e3058b7
  410667:	test   eax,0xcdcefa42
  41066c:	jmp    0x5112:0xa94bb099
  410673:	cli    
  410674:	fwait
  410675:	lock (bad) 
  410677:	mov    al,0x21
  410679:	inc    eax
  41067a:	aad    0xe6
  41067c:	jo     0x410631
  41067e:	inc    esi
  41067f:	jg     0x410643
  410681:	sbb    eax,0xa7edd509
  410686:	lods   al,BYTE PTR ds:[esi]
  410687:	outs   dx,DWORD PTR ds:[esi]
  410688:	repz std 
  41068a:	hlt    
  41068b:	je     0x410641
  41068d:	or     bh,BYTE PTR [ebp-0x668354dc]
  410693:	mov    ebp,0xe19f195d
  410698:	jmp    0x6140:0x1fd72a7d
  41069f:	or     al,0xd4
  4106a1:	in     al,0x55
  4106a3:	jmp    0x5df6205c
  4106a8:	imul   eax,DWORD PTR [esi],0xc466b788
  4106ae:	js     0x4106c7
  4106b0:	mov    WORD PTR [esi],es
  4106b2:	mov    ah,0xd9
  4106b4:	(bad)  
  4106b5:	pop    esi
  4106b6:	sub    eax,DWORD PTR [ebx+edx*8]
  4106b9:	leave  
  4106ba:	shl    bh,cl
  4106bc:	scas   al,BYTE PTR es:[edi]
  4106bd:	and    eax,0x8c40dd0b
  4106c2:	mov    ch,0x5c
  4106c4:	popf   
  4106c5:	int3   
  4106c6:	les    edi,FWORD PTR [ebx+0x78]
  4106c9:	scas   al,BYTE PTR es:[edi]
  4106ca:	dec    ecx
  4106cb:	xor    DWORD PTR [edx],eax
  4106cd:	pusha  
  4106ce:	jp     0x410726
  4106d0:	xchg   bh,dh
  4106d2:	and    al,0x64
  4106d4:	retf   0xa493
  4106d7:	mov    cl,0xef
  4106d9:	jae    0x4106e7
  4106db:	cmp    DWORD PTR [ecx+0x5dad870b],ebp
  4106e1:	sub    cl,ah
  4106e3:	mov    cs,WORD PTR [ebp+0xd]
  4106e6:	ret    
  4106e7:	mov    esi,0xbd7ccbec
  4106ec:	or     edi,ebp
  4106ee:	jne    0x410690
  4106f0:	enter  0xe848,0x2e
  4106f4:	mov    fs,WORD PTR [edx]
  4106f6:	cmp    eax,0x4d4c3630
  4106fb:	popf   
  4106fc:	cmp    esp,DWORD PTR [esi+eax*2]
  4106ff:	loop   0x41070e
  410701:	repnz pusha 
  410703:	aas    
  410704:	dec    esi
  410705:	mov    edi,0xe810fc39
  41070a:	sbb    dl,dl
  41070c:	xchg   esi,eax
  41070d:	mov    al,0xef
  41070f:	ror    BYTE PTR [edi-0x12],0x8d
  410713:	dec    edx
  410714:	test   BYTE PTR [edx+0x6f7e3833],ah
  41071a:	cdq    
  41071b:	sar    BYTE PTR [esi-0x63],1
  41071e:	int    0xb3
  410720:	mov    bl,0xca
  410722:	mov    ah,0x42
  410724:	sbb    BYTE PTR [edx+0x5c],ch
  410727:	test   eax,0xddfd8500
  41072c:	int    0x8a
  41072e:	nop
  41072f:	mov    cl,BYTE PTR fs:[bp+di]
  410733:	xchg   DWORD PTR [ebx],esp
  410735:	mov    bl,0x24
  410737:	ss (bad) 
  41073a:	nop
  41073b:	push   esp
  41073c:	mov    esi,0x112b01d3
  410741:	jmp    0x8a16607c
  410746:	xchg   edi,eax
  410747:	fimul  WORD PTR [ebp+0x1c]
  41074a:	ss into 
  41074c:	xor    DWORD PTR [edi-0x58],ecx
  41074f:	mov    dh,0xd
  410751:	jecxz  0x4107cc
  410753:	push   cs
  410754:	lock fsubp st(3),st
  410757:	sub    ah,BYTE PTR [edx-0x179ea2e9]
  41075d:	cmp    esi,0x856cee7d
  410763:	(bad)  
  410764:	cli    
  410765:	push   esi
  410766:	test   DWORD PTR [eax-0x28c1a121],ecx
  41076c:	je     0x410749
  41076e:	stos   BYTE PTR es:[edi],al
  41076f:	mov    ebp,0x10951bcb
  410774:	inc    edx
  410775:	jo     0x4107a3
  410777:	imul   esi,DWORD PTR [esi-0x45],0x882bee8c
  41077e:	sub    DWORD PTR [eax-0x447ef48b],ebx
  410784:	dec    edi
  410785:	sub    cl,BYTE PTR [ebx-0x2b]
  410788:	sbb    bl,bl
  41078a:	mov    ecx,0xbf9c58ad
  41078f:	xor    eax,0xfa29a383
  410794:	cld    
  410795:	push   esp
  410796:	test   edx,eax
  410798:	xchg   ecx,eax
  410799:	push   0xf5381e3
  41079e:	or     BYTE PTR [edx],ch
  4107a0:	sub    BYTE PTR [ecx],ch
  4107a2:	shr    BYTE PTR [eax+0x5cd61f08],0x43
  4107a9:	mov    dl,0xff
  4107ab:	ins    BYTE PTR es:[edi],dx
  4107ac:	jp     0x4107c1
  4107ae:	call   DWORD PTR [esi]
  4107b0:	xchg   ebx,eax
  4107b1:	inc    edi
  4107b2:	dec    eax
  4107b3:	sub    al,0x43
  4107b5:	pop    ds
  4107b6:	retf   
  4107b7:	shr    cl,cl
  4107b9:	or     BYTE PTR [esi+0x11add9af],ah
  4107bf:	call   0xf378ba62
  4107c4:	push   ebp
  4107c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107c6:	lods   eax,DWORD PTR ds:[esi]
  4107c7:	fcmove st,st(4)
  4107c9:	pop    edx
  4107ca:	xor    BYTE PTR [ebx-0x12d7d5a2],al
  4107d0:	add    bl,BYTE PTR [edi]
  4107d2:	out    dx,al
  4107d3:	add    eax,0x6b0a2d33
  4107d8:	daa    
  4107d9:	sbb    BYTE PTR [edi],bh
  4107db:	mov    eax,0x358fdaf7
  4107e0:	daa    
  4107e1:	(bad)  
  4107e2:	fadd   DWORD PTR [eax-0xe]
  4107e5:	xchg   edx,eax
  4107e6:	dec    edi
  4107e7:	push   ds
  4107e8:	mov    WORD PTR [ecx],cs
  4107ea:	mov    ds:0xad2f6219,al
  4107ef:	loop   0x410803
  4107f1:	cmp    ebp,DWORD PTR [edx-0x58]
  4107f4:	sahf   
  4107f5:	lea    esp,[ebx+eiz*8-0x47665e4f]
  4107fc:	nop
  4107fd:	pop    ss
  4107fe:	inc    eax
  4107ff:	hlt    
  410800:	les    esp,FWORD PTR [edx-0x3b810673]
  410806:	in     al,dx
  410807:	jmp    0x4107dc
  410809:	pop    ebp
  41080a:	add    dl,dl
  41080c:	jbe    0x4107df
  41080e:	(bad)  
  41080f:	mov    edi,0xe75a2625
  410814:	xor    al,ah
  410816:	out    dx,al
  410817:	fs cli 
  410819:	mov    al,0x6e
  41081b:	nop
  41081c:	push   esi
  41081d:	outs   dx,DWORD PTR ds:[esi]
  41081e:	scas   eax,DWORD PTR es:[edi]
  41081f:	push   0xffffffbc
  410821:	(bad)  
  410822:	into   
  410823:	add    al,0x3
  410825:	xor    eax,0x4d8d2f9d
  41082a:	push   ebp
  41082b:	out    0x61,al
  41082d:	mov    ebx,0x64ecaf66
  410832:	push   0xb729ff2f
  410837:	jmp    FWORD PTR [eax]
  410839:	cs adc al,0x50
  41083c:	inc    ecx
  41083d:	adc    eax,0xf68f5179
  410842:	mov    dl,0x62
  410844:	pusha  
  410845:	push   ebp
  410846:	pop    esp
  410847:	dec    edx
  410848:	xchg   esp,eax
  410849:	dec    esp
  41084a:	in     eax,dx
  41084b:	push   esi
  41084c:	fucom  st(6)
  41084e:	sub    al,0x1d
  410850:	mov    DWORD PTR [eax],esp
  410852:	push   ebp
  410853:	xchg   esi,eax
  410854:	imul   esp,DWORD PTR [eax-0x40],0x683428f4
  41085b:	loopne 0x4108ae
  41085d:	aaa    
  41085e:	shl    DWORD PTR [esi-0x21074423],1
  410864:	pop    ss
  410865:	icebp  
  410866:	sub    eax,DWORD PTR [ebx]
  410868:	loop   0x410888
  41086a:	jo     0x4107ef
  41086c:	jmp    0x64135ba0
  410871:	and    ah,BYTE PTR [esi-0xf]
  410874:	push   ss
  410875:	repnz xchg edi,eax
  410877:	mov    cl,BYTE PTR [ebp-0x464fb356]
  41087d:	loope  0x410852
  41087f:	in     eax,dx
  410880:	out    dx,al
  410881:	xchg   BYTE PTR [eax],dl
  410883:	std    
  410884:	and    al,0xc
  410886:	cmp    DWORD PTR [esi+0x1caaa48f],esi
  41088c:	test   al,0x53
  41088e:	jmp    0x41085c
  410890:	mov    dh,0x3b
  410892:	imul   ebp,DWORD PTR [ecx+0x68b18a35],0x61
  410899:	mov    dh,0xc4
  41089b:	bound  ecx,QWORD PTR [edx+esi*1+0x17]
  41089f:	add    al,0xa1
  4108a1:	aam    0x26
  4108a3:	adc    eax,0x6707d4
  4108a8:	inc    esp
  4108a9:	mov    ecx,cs
  4108ab:	sub    BYTE PTR [edx],bl
  4108ad:	(bad)  
  4108ae:	cmp    DWORD PTR [eax+0x7b],edx
  4108b1:	jp     0x410930
  4108b3:	rcl    ebp,1
  4108b5:	sub    al,0x71
  4108b7:	fisubr WORD PTR [ebx+ebx*1]
  4108ba:	adc    eax,0x2a0a92d3
  4108bf:	mov    ds:0x1713f733,al
  4108c4:	sbb    ch,BYTE PTR [ebx-0x552dc78c]
  4108ca:	adc    BYTE PTR [ebp+0x731abe9e],dl
  4108d0:	adc    ecx,ebp
  4108d2:	jnp    0x41094a
  4108d4:	mov    ah,BYTE PTR [edi-0x17]
  4108d7:	adc    DWORD PTR [ebx],ebp
  4108d9:	mov    ss,WORD PTR [ebx*8+0x31766778]
  4108e0:	dec    esi
  4108e1:	push   eax
  4108e2:	mov    eax,0xd74902ea
  4108e7:	out    dx,al
  4108e8:	sub    DWORD PTR [ebx-0x9beacb8],0xf127aa34
  4108f2:	fldl2e 
  4108f4:	add    eax,0xfdb088de
  4108f9:	cld    
  4108fa:	not    DWORD PTR [eax-0x23]
  4108fd:	mov    eax,ds:0xb7d89c52
  410902:	xchg   ecx,eax
  410903:	or     DWORD PTR [eax*2-0x65d64ad2],0x57
  41090b:	(bad)  
  41090c:	mov    ecx,0x5784b87f
  410911:	mov    esi,eax
  410913:	or     BYTE PTR [esi+0x72],al
  410916:	adc    eax,0xadd16af7
  41091b:	add    eax,0x6e02fc28
  410920:	and    ecx,DWORD PTR [edi]
  410922:	mov    bl,0x33
  410924:	ss mov al,0x1a
  410927:	jns    0x410981
  410929:	add    al,0x83
  41092b:	lahf   
  41092c:	fdivr  DWORD PTR [eax+0x7edd9f38]
  410932:	pushf  
  410933:	ds rol eax,cl
  410936:	sbb    DWORD PTR [ebp+esi*1-0x1b2b998d],ebp
  41093d:	adc    BYTE PTR [ecx+0x2d4c9688],bh
  410943:	fsub   DWORD PTR [edi-0xb]
  410946:	xor    eax,0x723c4932
  41094b:	ja     0x410992
  41094d:	mov    BYTE PTR ds:0xd2e160fb,ah
  410953:	int    0x7a
  410955:	inc    edi
  410956:	fadd   QWORD PTR [ebx-0x3bf7a19a]
  41095c:	js     0x410972
  41095e:	mov    al,ds:0x2c36fa16
  410963:	jo     0x41099d
  410965:	sub    eax,0x46e03839
  41096a:	je     0x410939
  41096c:	xchg   edi,eax
  41096d:	lahf   
  41096e:	sbb    BYTE PTR [edi-0x12996fd0],dh
  410974:	inc    esi
  410975:	out    0x31,eax
  410977:	inc    esp
  410978:	pop    ecx
  410979:	inc    ecx
  41097a:	out    dx,al
  41097b:	loopne 0x41094e
  41097d:	mov    DWORD PTR [ebp-0x4e],esp
  410980:	int3   
  410981:	and    DWORD PTR [ebx-0x76],0xffffff80
  410985:	xor    eax,0x79da492c
  41098a:	ds clc 
  41098c:	ins    DWORD PTR es:[edi],dx
  41098d:	popa   
  41098e:	sub    BYTE PTR [esi-0x70c066bb],bl
  410994:	push   esi
  410995:	xor    eax,0x457cab79
  41099a:	dec    ebp
  41099b:	push   esi
  41099c:	add    BYTE PTR [ecx-0x195e73e7],0x72
  4109a3:	(bad)  
  4109a4:	out    dx,al
  4109a5:	mov    eax,0x57b52824
  4109aa:	das    
  4109ab:	sbb    BYTE PTR es:[esi+0x3c052538],dh
  4109b2:	js     0x4109b0
  4109b4:	mov    bl,0x6e
  4109b6:	push   0xffffffda
  4109b8:	mov    eax,ds:0xd38c1035
  4109bd:	push   cs
  4109be:	enter  0x3a60,0xf9
  4109c2:	adc    BYTE PTR [edi+ebx*8+0x286f57dd],cl
  4109c9:	sbb    eax,0x7587a171
  4109ce:	loope  0x4109eb
  4109d0:	pusha  
  4109d1:	cwde   
  4109d2:	dec    eax
  4109d3:	adc    ah,cl
  4109d5:	ror    BYTE PTR ds:[edx-0x50],1
  4109d9:	jnp    0x410a10
  4109db:	add    esi,DWORD PTR [ebx]
  4109dd:	dec    edx
  4109de:	mov    eax,0x4908acdf
  4109e3:	clc    
  4109e4:	jg     0x4109d7
  4109e6:	mov    ds:0x9ef61bfb,al
  4109eb:	sahf   
  4109ec:	sub    eax,0xdb624810
  4109f1:	sub    dh,bh
  4109f3:	dec    ebx
  4109f4:	mov    cl,0x1b
  4109f6:	sub    ebp,DWORD PTR [esi+0x31]
  4109f9:	popa   
  4109fa:	hlt    
  4109fb:	pop    esi
  4109fc:	mov    eax,ds:0x7912bc62
  410a01:	in     eax,0x8c
  410a03:	shl    BYTE PTR [edi],1
  410a05:	in     eax,0x9c
  410a07:	jbe    0x4109f9
  410a09:	mul    DWORD PTR [edi]
  410a0b:	mov    ebx,0x8d47837f
  410a10:	sub    bh,BYTE PTR [edi+0x2edef5da]
  410a16:	add    eax,0x657d1635
  410a1b:	fstp   DWORD PTR [eax-0x2e71f974]
  410a21:	(bad)  
  410a22:	cli    
  410a23:	pop    ebp
  410a24:	arpl   si,cx
  410a26:	clc    
  410a27:	jl     0x410a35
  410a29:	retf   
  410a2a:	or     bh,BYTE PTR [eax]
  410a2c:	je     0x4109be
  410a2e:	or     DWORD PTR [ecx+esi*1],edi
  410a31:	mov    bl,0xa2
  410a33:	inc    edx
  410a34:	xor    eax,0x771cc8ff
  410a39:	hlt    
  410a3a:	dec    edx
  410a3b:	hlt    
  410a3c:	xor    ebp,ecx
  410a3e:	dec    edi
  410a3f:	fcmovnbe st,st(4)
  410a41:	push   0xfe9121ec
  410a46:	sub    BYTE PTR [ebx-0x5],cl
  410a49:	outs   dx,DWORD PTR ds:[esi]
  410a4b:	popa   
  410a4c:	(bad)  
  410a4e:	int3   
  410a4f:	inc    eax
  410a50:	div    BYTE PTR [eax]
  410a52:	jmp    0x5f0f:0xba3c82d4
  410a59:	adc    DWORD PTR [ebx],ebp
  410a5b:	sbb    dl,bh
  410a5d:	mov    ds:0x29f5a7a2,al
  410a62:	sub    dl,bl
  410a64:	shl    DWORD PTR [eax+0x1a93b4d6],cl
  410a6a:	jo     0x410a57
  410a6c:	repnz addr16 hlt 
  410a6f:	pop    es
  410a70:	xor    eax,0x3ddd35d4
  410a75:	les    ebx,FWORD PTR [esi+0x7c31f78]
  410a7b:	xor    ch,BYTE PTR [edi+0x308e40df]
  410a81:	jp     0x410ad6
  410a83:	mov    eax,0x688b2872
  410a88:	xor    BYTE PTR [eax],ah
  410a8a:	addr16 adc ecx,ebx
  410a8d:	rcl    BYTE PTR [edi+0x2c86a79d],0xce
  410a94:	mov    esi,0x87ddcaf7
  410a99:	or     BYTE PTR [eax-0x13],bh
  410a9c:	ret    0x7f02
  410a9f:	pusha  
  410aa0:	or     al,0xf3
  410aa2:	inc    eax
  410aa3:	out    0x71,eax
  410aa5:	push   esi
  410aa6:	jmp    DWORD PTR [ebx+edi*2]
  410aa9:	mov    esi,0x2c5fd8b7
  410aae:	sbb    esp,DWORD PTR [ebx+esi*4+0x49]
  410ab2:	and    DWORD PTR [ebp+0x8],ecx
  410ab5:	or     al,0xf8
  410ab7:	retf   
  410ab8:	add    bl,bh
  410aba:	stc    
  410abb:	call   0x6f03:0xb5c5b3c2
  410ac2:	dec    ebx
  410ac3:	push   esi
  410ac4:	sbb    al,0x4a
  410ac6:	pop    ds
  410ac7:	push   edi
  410ac8:	xor    ebx,DWORD PTR [edx-0x5b]
  410acb:	or     ebx,DWORD PTR [ebp+0x4d]
  410ace:	stos   BYTE PTR es:[edi],al
  410acf:	xor    eax,0xe0a9d57a
  410ad4:	mov    eax,0x613f646b
  410ad9:	push   ecx
  410ada:	in     al,0x90
  410adc:	adc    eax,0x9b17c42f
  410ae1:	pushf  
  410ae2:	add    edi,DWORD PTR [ecx-0x7b88ffc7]
  410ae8:	repnz ds push ebp
  410aeb:	out    0x94,eax
  410aed:	pusha  
  410aee:	test   dh,ch
  410af0:	inc    ebp
  410af1:	sar    edi,cl
  410af3:	aaa    
  410af4:	pop    ss
  410af5:	xchg   edi,eax
  410af6:	lods   al,BYTE PTR ds:[esi]
  410af7:	sub    BYTE PTR [ebp+0x79],0xcb
  410afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410afc:	jg     0x410b70
  410afe:	xchg   esi,eax
  410aff:	ins    DWORD PTR es:[edi],dx
  410b00:	repnz add al,0x7d
  410b03:	and    edx,DWORD PTR [edi+0x41]
  410b06:	jp     0x410b72
  410b08:	add    dl,cl
  410b0a:	push   ebx
  410b0b:	adc    dh,BYTE PTR [bp+di+0x9d9]
  410b10:	(bad)  
  410b11:	jmp    0x410ac9
  410b13:	ds push es
  410b15:	fld    DWORD PTR [ebx-0x7aa14a10]
  410b1b:	inc    ebx
  410b1c:	xor    al,0xc5
  410b1e:	adc    eax,ebp
  410b20:	outs   dx,DWORD PTR ds:[esi]
  410b21:	js     0x410b15
  410b23:	push   edi
  410b24:	dec    esp
  410b25:	fsub   DWORD PTR [ebx]
  410b27:	xchg   esi,eax
  410b28:	(bad)  
  410b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b2a:	test   DWORD PTR ds:0x8caf12ab,edx
  410b30:	cmp    DWORD PTR [ebp+ebx*8-0x5],ebx
  410b34:	push   ds
  410b35:	test   al,0x66
  410b37:	into   
  410b38:	xor    eax,0xf24f1d6e
  410b3d:	icebp  
  410b3e:	adc    BYTE PTR [ebp+0x3a9f3e7f],bl
  410b44:	mov    dl,BYTE PTR [ebp-0x55]
  410b47:	outs   dx,DWORD PTR ds:[esi]
  410b48:	(bad)  
  410b49:	mov    ebx,0x1e012d79
  410b4e:	mov    edi,0xdad7d460
  410b53:	fstp   QWORD PTR [edx+0x19fc991f]
  410b59:	and    BYTE PTR [edx+0x155b017],bh
  410b5f:	lahf   
  410b60:	mov    bl,0x13
  410b62:	jno    0x410b2a
  410b64:	test   al,0xec
  410b66:	js     0x410b88
  410b68:	and    BYTE PTR [esi],0x39
  410b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b6c:	inc    edx
  410b6d:	popa   
  410b6e:	leave  
  410b6f:	mov    ecx,DWORD PTR [ebx+0x63642a5b]
  410b75:	push   esi
  410b76:	pop    esp
  410b77:	xchg   esi,eax
  410b78:	or     DWORD PTR [ecx-0x65271d70],esp
  410b7e:	jb     0x410b0e
  410b80:	pushf  
  410b81:	mov    ebp,0x8c670afc
  410b86:	out    dx,ax
  410b88:	dec    esp
  410b89:	into   
  410b8a:	rol    BYTE PTR [ecx+esi*1+0x18],1
  410b8e:	jmp    0xd143:0xaa749e78
  410b95:	call   0x21e1e09c
  410b9a:	mov    al,ds:0x4c1807dc
  410b9f:	and    DWORD PTR [esi],0xffffffd9
  410ba2:	repz mov esp,gs
  410ba5:	add    al,0xac
  410ba7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba9:	jmp    0x410b59
  410bab:	sub    DWORD PTR [ecx-0xd],edx
  410bae:	push   0x4e
  410bb0:	mov    ebx,0x8c0cde8c
  410bb5:	fsubr  QWORD PTR [edx-0x556540e7]
  410bbb:	jmp    0x2b29a430
  410bc0:	dec    ebx
  410bc1:	fld1   
  410bc3:	shl    DWORD PTR [ecx+0x24bea963],1
  410bc9:	adc    eax,0x99417378
  410bce:	xor    DWORD PTR es:[edx+0x4258630b],eax
  410bd5:	jno    0x410c06
  410bd7:	stos   BYTE PTR es:[edi],al
  410bd8:	test   DWORD PTR [ebp+0x37aa1f58],esp
  410bde:	mov    edi,0x2b5747c2
  410be3:	stos   DWORD PTR es:[edi],eax
  410be4:	call   0x8f0d:0x888bde32
  410beb:	pop    edx
  410bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bed:	lahf   
  410bee:	pop    es
  410bef:	imul   edi,DWORD PTR [edx],0xf68347ad
  410bf5:	arpl   WORD PTR [esi],si
  410bf7:	shl    BYTE PTR [ebx-0x64],1
  410bfa:	or     bl,0x11
  410bfd:	push   edi
  410bfe:	rcl    DWORD PTR [esi-0x2],cl
  410c01:	test   al,0x9c
  410c03:	jmp    0xd7b6:0x57d766dd
  410c0a:	mov    dl,0xc0
  410c0c:	js     0x410b9c
  410c0e:	push   edx
  410c0f:	mov    esp,0x4411c142
  410c14:	loop   0x410c20
  410c16:	xor    BYTE PTR [eax+esi*1+0x5f424e62],ah
  410c1d:	lock repnz fnstenv es:[esi]
  410c22:	nop
  410c23:	pop    ebp
  410c24:	xchg   ebp,eax
  410c25:	pop    edx
  410c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c27:	imul   eax,edx,0xbef5daf1
  410c2d:	leave  
  410c2e:	scas   eax,DWORD PTR es:[edi]
  410c2f:	comiss xmm7,DWORD PTR [eax-0x31]
  410c33:	and    ebp,ebp
  410c35:	jb     0x410bc1
  410c37:	retf   0x16eb
  410c3a:	adc    eax,0xbb72212f
  410c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c40:	aam    0x7
  410c42:	mov    al,ds:0x46091f2d
  410c47:	sub    eax,0x426d6572
  410c4c:	inc    edx
  410c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c4e:	adc    dh,dh
  410c50:	jl     0x410c86
  410c52:	pop    edx
  410c53:	push   ecx
  410c54:	adc    al,0xcf
  410c56:	cli    
  410c57:	stos   BYTE PTR es:[edi],al
  410c58:	test   BYTE PTR [edi],cl
  410c5a:	cmp    eax,0x6d9a1852
  410c5f:	adc    eax,0x85dd66e8
  410c64:	mul    BYTE PTR ds:0x13ca9d9
  410c6a:	and    al,0xbf
  410c6c:	dec    edi
  410c6d:	xchg   esi,eax
  410c6e:	dec    ebp
  410c6f:	mov    esp,0x1c7f5183
  410c74:	jne    0x410bf7
  410c76:	jmp    0xff66:0x46f7e03d
  410c7d:	mov    BYTE PTR [esi-0x599be0a6],0x6a
  410c84:	stos   BYTE PTR es:[edi],al
  410c85:	push   edx
  410c86:	sti    
  410c87:	jmp    FWORD PTR ds:0x67729dac
  410c8d:	mov    esp,0x30a8a028
  410c92:	and    DWORD PTR [ebx],edi
  410c94:	shl    ecx,cl
  410c96:	jae    0x410cbb
  410c98:	and    ebp,ebx
  410c9a:	or     al,0x81
  410c9c:	mov    cl,0x9e
  410c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c9f:	inc    ebp
  410ca0:	adc    esi,edx
  410ca2:	dec    edi
  410ca3:	cmc    
  410ca4:	mov    al,0xf9
  410ca6:	scas   al,BYTE PTR es:[edi]
  410ca7:	mov    esp,0x5394f1b1
  410cac:	add    BYTE PTR [ebp-0x45f0958],cl
  410cb2:	(bad)  
  410cb3:	xor    BYTE PTR [esi-0x2342b4b4],dh
  410cb9:	mov    BYTE PTR [edi],dh
  410cbb:	jae    0x410cb3
  410cbd:	jo     0x410cc6
  410cbf:	adc    DWORD PTR [esi+edx*1-0x76],0xcd963a6c
  410cc7:	xchg   ebp,eax
  410cc8:	cwde   
  410cc9:	shr    ebx,1
  410ccb:	xor    eax,0xe1be3739
  410cd0:	std    
  410cd1:	fistp  QWORD PTR [ebx-0x57]
  410cd4:	stos   BYTE PTR es:[edi],al
  410cd5:	cld    
  410cd6:	xchg   DWORD PTR [esi-0x676ddb41],edx
  410cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cdd:	push   ecx
  410cde:	inc    ebx
  410cdf:	imul   ebx,DWORD PTR [eax-0x8]
  410ce3:	popf   
  410ce4:	xchg   esi,eax
  410ce5:	push   ecx
  410ce6:	jmp    0x849423e0
  410ceb:	mov    bh,0x4
  410ced:	mov    BYTE PTR [edi+0x24],al
  410cf0:	add    esi,DWORD PTR [esi+0x70]
  410cf3:	or     dh,0xa4
  410cf6:	or     BYTE PTR [eax-0x4806ffd2],al
  410cfc:	inc    ebx
  410cfd:	push   0xffffffb7
  410cff:	outs   dx,BYTE PTR ds:[esi]
  410d00:	sbb    eax,0x954f1f66
  410d05:	jnp    0x410d40
  410d07:	dec    esi
  410d08:	dec    edx
  410d09:	inc    ebx
  410d0a:	dec    esi
  410d0b:	xor    ah,bl
  410d0d:	js     0x410d6d
  410d0f:	pusha  
  410d10:	sub    al,0x4d
  410d12:	les    ebp,FWORD PTR [ebp+ecx*4-0x2e8714ff]
  410d19:	dec    esi
  410d1a:	arpl   WORD PTR [edi+0x125d20c0],bp
  410d20:	xor    DWORD PTR [ebp-0x3a],0xe082ac83
  410d27:	jg     0x410ce1
  410d29:	bound  edi,QWORD PTR [ebp-0xf]
  410d2c:	inc    ebp
  410d2d:	push   ss
  410d2e:	cmp    dh,BYTE PTR [ebx+0x44bba101]
  410d34:	add    cl,BYTE PTR [ebx+0x40]
  410d37:	mov    edi,DWORD PTR [edi+ecx*4]
  410d3a:	cmc    
  410d3b:	dec    edx
  410d3c:	mov    ebp,0x2ae7f590
  410d41:	jmp    0x410d19
  410d43:	test   DWORD PTR [edx],ebp
  410d45:	mov    dh,0x8e
  410d47:	push   ebx
  410d48:	in     eax,0xc
  410d4a:	std    
  410d4b:	push   esi
  410d4c:	mov    ds:0x844c9881,al
  410d51:	shl    dl,0x2c
  410d54:	xor    dh,bl
  410d56:	outs   dx,DWORD PTR ds:[esi]
  410d57:	loop   0x410d20
  410d59:	add    cl,BYTE PTR [esi]
  410d5b:	sbb    BYTE PTR [eax],dl
  410d5d:	repnz shrd ecx,esp,cl
  410d61:	cmp    eax,0xb78ea623
  410d66:	push   cs
  410d67:	dec    eax
  410d68:	js     0x410d5b
  410d6a:	adc    dh,BYTE PTR [edi+0x72]
  410d6d:	inc    ebx
  410d6e:	sbb    edx,DWORD PTR [ecx+edx*2+0x28e7502f]
  410d75:	loope  0x410d73
  410d77:	inc    eax
  410d78:	jp     0x410df9
  410d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d7b:	lods   eax,DWORD PTR ds:[esi]
  410d7c:	and    ebx,DWORD PTR [edx-0x64]
  410d7f:	pop    ds
  410d80:	leave  
  410d81:	frstor [eax]
  410d83:	push   ecx
  410d84:	push   ds
  410d85:	sbb    al,0xdd
  410d87:	inc    ecx
  410d88:	popf   
  410d89:	inc    eax
  410d8a:	fdiv   QWORD PTR [eax+eiz*8]
  410d8d:	jmp    0x7712:0xe990551e
  410d94:	dec    ebp
  410d95:	xchg   DWORD PTR [edx],esp
  410d97:	push   edx
  410d98:	(bad)  
  410d99:	pop    edx
  410d9a:	je     0x410d26
  410d9c:	in     eax,0xa1
  410d9e:	enter  0x79df,0xdb
  410da2:	pop    ebp
  410da3:	outs   dx,DWORD PTR ds:[esi]
  410da4:	mov    ebx,0x568512e8
  410da9:	ja     0x410d43
  410dab:	and    BYTE PTR [ecx-0x48],dh
  410dae:	ret    
  410daf:	mov    ebp,0xba521b3a
  410db4:	cmp    al,0x11
  410db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db7:	rcl    DWORD PTR [eax],0xe5
  410dba:	xchg   BYTE PTR [edx],ch
  410dbc:	mov    cl,0x4d
  410dbe:	pop    ebp
  410dbf:	adc    dl,ah
  410dc1:	(bad)  
  410dc3:	cdq    
  410dc4:	cmp    DWORD PTR [ebx],esi
  410dc6:	cmp    al,0x3f
  410dc8:	cmp    al,0xf0
  410dca:	retf   0xa21b
  410dcd:	xor    al,0xd3
  410dcf:	pop    es
  410dd0:	ins    DWORD PTR es:[edi],dx
  410dd1:	in     al,dx
  410dd2:	sub    al,0x9a
  410dd4:	lds    edx,FWORD PTR [edi-0x76bfcf49]
  410dda:	jne    0x410dce
  410ddc:	sbb    eax,0xcecacc72
  410de1:	clc    
  410de2:	pop    esp
  410de3:	imul   edi,DWORD PTR [esi-0x7efcd101],0x57872a1f
  410ded:	rcl    DWORD PTR [eax+0x47],cl
  410df0:	push   esp
  410df1:	add    al,0xc2
  410df3:	adc    ch,BYTE PTR [esi+eax*8-0x4]
  410df7:	in     al,dx
  410df8:	sbb    esp,DWORD PTR [edx+0x1c]
  410dfb:	pop    ecx
  410dfc:	push   ebp
  410dfd:	hlt    
  410dfe:	imul   eax,DWORD PTR [ebx+esi*2],0xb4501514
  410e05:	mov    ebp,0xa7e4e6b0
  410e0a:	and    DWORD PTR [ebp+0x344c0f23],ebp
  410e10:	add    ah,BYTE PTR [esi]
  410e12:	add    cl,al
  410e14:	xchg   ecx,eax
  410e15:	mov    bh,0xdd
  410e17:	rcl    DWORD PTR [edi],cl
  410e19:	mul    BYTE PTR [edi+0x65]
  410e1c:	push   ds
  410e1d:	lahf   
  410e1e:	add    esi,DWORD PTR [esi-0x5]
  410e21:	test   DWORD PTR [esi-0x731ce5a8],0xaf26eced
  410e2b:	dec    eax
  410e2c:	adc    BYTE PTR [eax+ecx*2+0x4147b48e],ah
  410e33:	addr16 mov eax,ds:0x6091
  410e37:	mov    esp,0x1ecf4c5c
  410e3c:	adc    al,0x84
  410e3e:	fidivr DWORD PTR [esi]
  410e40:	mov    edi,ecx
  410e42:	stos   BYTE PTR es:[edi],al
  410e43:	rol    BYTE PTR [edx+eiz*1+0x24],cl
  410e47:	inc    ebx
  410e48:	call   0x1d15:0x7e896b86
  410e4f:	dec    ecx
  410e50:	and    esi,eax
  410e52:	test   DWORD PTR [edx+0x65d8ec6a],ecx
  410e58:	mov    edx,0x706f673f
  410e5d:	retf   
  410e5e:	mov    ds:0x8214100e,al
  410e63:	jmp    0x80ff:0xcb05
  410e69:	call   0x6b9a45b0
  410e6e:	rol    BYTE PTR [esi-0x25],0x5f
  410e72:	inc    ebx
  410e73:	icebp  
  410e74:	push   ebp
  410e75:	pop    ecx
  410e76:	xchg   edi,eax
  410e77:	cmp    edx,DWORD PTR [esi]
  410e79:	retf   0xa6cd
  410e7c:	in     al,0xa5
  410e7e:	xor    eax,0x244708d1
  410e83:	shr    DWORD PTR [edi+0x6191db74],1
  410e89:	idiv   DWORD PTR [ecx]
  410e8b:	jg     0x410e39
  410e8d:	inc    eax
  410e8e:	mov    WORD PTR [esi],?
  410e90:	repnz fidiv WORD PTR [edi+0x75953928]
  410e97:	push   esp
  410e98:	imul   DWORD PTR [edx-0x29]
  410e9b:	pop    edi
  410e9c:	xchg   ecx,eax
  410e9d:	hlt    
  410e9e:	mov    bh,0xba
  410ea0:	dec    edx
  410ea1:	stc    
  410ea2:	jecxz  0x410ea9
  410ea4:	test   eax,0x7781b38e
  410ea9:	mov    bl,0xef
  410eab:	sbb    al,0x7c
  410ead:	fist   DWORD PTR [ebx]
  410eaf:	adc    DWORD PTR [ebp-0x771d6627],ebx
  410eb5:	cli    
  410eb6:	push   ebp
  410eb7:	dec    esi
  410eb8:	or     ecx,DWORD PTR ds:0x7d21fdd1
  410ebe:	and    ebp,DWORD PTR [ebp+eiz*1+0x4f]
  410ec2:	rol    ebx,0x46
  410ec5:	push   ebx
  410ec6:	xor    DWORD PTR [ebp+0x25],eax
  410ec9:	mov    ebp,0xcda0f9b0
  410ece:	inc    esi
  410ecf:	dec    esi
  410ed0:	xchg   ecx,eax
  410ed1:	inc    esp
  410ed2:	or     al,0xb1
  410ed4:	std    
  410ed5:	call   0x16df:0x1daf979b
  410edc:	cmp    al,0xe8
  410ede:	sub    BYTE PTR [edi+0x78ab022],0x4e
  410ee5:	out    0xa4,al
  410ee7:	jge    0x410f24
  410ee9:	inc    edx
  410eea:	dec    edi
  410eeb:	and    DWORD PTR [ebp-0x59],0x9718286e
  410ef2:	fsubr  QWORD PTR [esi+eax*2-0x54]
  410ef6:	dec    ecx
  410ef7:	xchg   ecx,eax
  410ef8:	aas    
  410ef9:	mov    al,BYTE PTR [ebx+0x3f]
  410efc:	fimul  WORD PTR [edi-0x4a]
  410eff:	jecxz  0x410ea8
  410f01:	test   DWORD PTR gs:[ecx+0x4bf02c20],0x17328134
  410f0c:	es pop ebp
  410f0e:	adc    eax,0xa7f4ee37
  410f13:	fidiv  DWORD PTR [eax+0x7c]
  410f16:	hlt    
  410f17:	jg     0x410ec2
  410f19:	add    ch,dl
  410f1b:	mov    dh,0xa
  410f1d:	xor    eax,0xf1cbcb50
  410f22:	stc    
  410f23:	inc    edx
  410f24:	sbb    ecx,esp
  410f26:	sar    BYTE PTR [eax+ecx*1+0x54c815fb],0x77
  410f2e:	mov    esi,0x75171988
  410f33:	mov    al,0xad
  410f35:	sbb    DWORD PTR [edx+0x7781c4e7],ebx
  410f3b:	jns    0x410f0f
  410f3d:	into   
  410f3e:	cmp    al,0xa2
  410f40:	push   ebp
  410f41:	push   edi
  410f42:	stos   DWORD PTR es:[edi],eax
  410f43:	and    eax,0x8eb6db5e
  410f48:	and    bl,BYTE PTR [edi]
  410f4a:	xchg   ecx,eax
  410f4b:	pavgb  mm3,QWORD PTR [ecx+0x23]
  410f4f:	dec    ebp
  410f50:	popf   
  410f51:	pusha  
  410f52:	mov    esi,0x9fd14032
  410f57:	sub    BYTE PTR [ebp+ebp*4+0x4be3ace2],ah
  410f5e:	call   0x5800:0xc41ef2db
  410f65:	jne    0x410ef5
  410f67:	icebp  
  410f68:	xchg   ebp,eax
  410f69:	and    BYTE PTR [ebx-0x5f6dd584],cl
  410f6f:	stc    
  410f70:	ds (bad) 
  410f72:	mov    ds:0xe59427e9,al
  410f77:	fild   DWORD PTR [edx]
  410f79:	cmp    DWORD PTR [edi],ecx
  410f7b:	add    DWORD PTR [ecx-0x79],edx
  410f7e:	push   esi
  410f80:	or     esi,DWORD PTR [edi]
  410f82:	iret   
  410f83:	dec    ecx
  410f84:	xchg   ecx,eax
  410f85:	adc    BYTE PTR [ebx-0x24ea9a1f],ah
  410f8b:	cmp    BYTE PTR [edx+0x4b],ah
  410f8e:	mov    dh,bh
  410f90:	push   ebp
  410f91:	push   esi
  410f92:	jae    0x410ff2
  410f94:	imul   eax,DWORD PTR [ebp-0x12772f20],0x42
  410f9b:	out    dx,al
  410f9c:	or     BYTE PTR [edx+0x16940e3e],dh
  410fa2:	loopne 0x410f6a
  410fa4:	sub    eax,0xe0ced258
  410fa9:	cmc    
  410faa:	push   eax
  410fab:	dec    ebp
  410fac:	mov    BYTE PTR [eax],dl
  410fae:	out    dx,al
  410faf:	push   ds
  410fb0:	dec    edx
  410fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb2:	jecxz  0x410f73
  410fb4:	xchg   ebx,eax
  410fb5:	jmp    0x410f43
  410fb7:	or     BYTE PTR [esi+0x496a9692],al
  410fbd:	cmp    dl,0xda
  410fc0:	nop
  410fc1:	mov    al,0x70
  410fc3:	mov    al,0xa0
  410fc5:	pop    ecx
  410fc6:	popf   
  410fc7:	jne    0x410fb0
  410fc9:	stc    
  410fca:	mov    bh,0x5d
  410fcc:	bnd jbe 0x411049
  410fcf:	hlt    
  410fd0:	cwde   
  410fd1:	sahf   
  410fd2:	inc    ecx
  410fd3:	mov    edx,0xb7374ea5
  410fd8:	(bad)  
  410fd9:	pushf  
  410fda:	and    cl,BYTE PTR [ecx-0x7b311a2]
  410fe0:	pop    edi
  410fe1:	scas   al,BYTE PTR es:[edi]
  410fe2:	data16 std 
  410fe4:	mov    ebx,0x31a6a26f
  410fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fea:	dec    ebp
  410feb:	or     esp,eax
  410fed:	sbb    BYTE PTR [ebx+0x63],0xea
  410ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ff2:	cmp    ah,BYTE PTR [esi+0x49e82e49]
  410ff8:	inc    ebx
  410ff9:	jg     0x411070
  410ffb:	mov    bh,0x8f
  410ffd:	sub    al,0xc1
  410fff:	mov    edi,DWORD PTR [edx+edi*2-0x239b9f12]
  411006:	dec    esi
  411007:	cld    
  411008:	dec    eax
  411009:	pop    ds
  41100a:	ins    BYTE PTR es:[edi],dx
  41100b:	cli    
  41100c:	push   edi
  41100d:	inc    edx
  41100e:	clc    
  41100f:	xchg   esp,eax
  411010:	les    ecx,FWORD PTR [edi-0x36]
  411013:	sar    BYTE PTR [edx+0x2c],cl
  411016:	fild   WORD PTR [edi-0x590551c8]
  41101c:	add    dh,BYTE PTR ds:0xef26a736
  411022:	sbb    al,0x57
  411024:	cmp    ah,dl
  411026:	xchg   DWORD PTR [esi-0x2927d36a],ecx
  41102c:	out    0xeb,al
  41102e:	pop    ebp
  41102f:	repnz inc ebx
  411031:	sub    eax,0xf262048d
  411036:	inc    edi
  411037:	fsubr  DWORD PTR ds:0x97cc5be9
  41103d:	jp     0x410fc9
  41103f:	enter  0x4b27,0x58
  411043:	mov    dh,0x18
  411045:	leave  
  411046:	xchg   BYTE PTR [edi+0x485e2266],dl
  41104c:	xchg   ebx,eax
  41104d:	mov    ebx,0x45c7c2a0
  411052:	stc    
  411053:	add    ch,0xf2
  411056:	sahf   
  411057:	mov    ah,BYTE PTR [esp+ebx*8+0x529799a0]
  41105e:	adc    DWORD PTR [ebx],edi
  411060:	xchg   BYTE PTR [ebx+0x466ca3e5],cl
  411066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411067:	adc    BYTE PTR [ecx-0x6b],ch
  41106a:	xor    eax,0xfa5ad337
  41106f:	lahf   
  411070:	add    ecx,DWORD PTR [ebx]
  411072:	cmp    al,0x31
  411074:	mov    cl,0x95
  411076:	inc    eax
  411077:	pop    es
  411078:	mov    dh,0x78
  41107a:	add    ebp,esi
  41107c:	ss rol ebp,0xad
  411080:	sti    
  411081:	mov    ch,BYTE PTR [edi]
  411083:	mov    esi,0x2bbecaff
  411088:	xor    DWORD PTR [eax+ebx*8],ebp
  41108b:	(bad)  
  41108c:	mov    ?,WORD PTR [ebx+0x50]
  41108f:	int    0xcd
  411091:	mov    esi,0x3d9fc1c3
  411096:	mov    al,0xdf
  411098:	cmp    eax,0x3f8b137f
  41109d:	sub    eax,0x7ea12fc
  4110a2:	(bad)
  4110a5:	leave  
  4110a6:	inc    ecx
  4110a7:	sub    al,0x37
  4110a9:	xor    eax,0x1992f0a3
  4110ae:	adc    dh,0x4f
  4110b1:	out    0x50,eax
  4110b3:	lock retf 0xfab6
  4110b7:	cmp    eax,DWORD PTR [esi]
  4110b9:	mov    ebp,0xfc222e60
  4110be:	popa   
  4110bf:	mov    bh,BYTE PTR [edx+0x6628743b]
  4110c5:	ds mov bh,0xec
  4110c8:	mov    esi,0x550fec35
  4110cd:	jb     0x411140
  4110cf:	sahf   
  4110d0:	adc    DWORD PTR [edx+eiz*8+0x15d23ef2],ebx
  4110d7:	ss retf 
  4110d9:	sub    BYTE PTR ds:0x40ee3170,ch
  4110df:	and    edx,ecx
  4110e1:	test   eax,0xdf9a2e10
  4110e6:	push   ss
  4110e7:	sub    eax,0xbec604f0
  4110ec:	pop    edi
  4110ed:	int    0x3b
  4110ef:	loope  0x411169
  4110f1:	es icebp 
  4110f3:	inc    edi
  4110f4:	js     0x41108a
  4110f6:	jg     0x411130
  4110f8:	mov    bh,0xf8
  4110fa:	pop    edi
  4110fb:	mov    ds:0x1a877dbc,al
  411100:	mov    bl,0xc5
  411102:	and    al,0x90
  411104:	fwait
  411105:	or     dl,BYTE PTR [edi+0x42d8b339]
  41110b:	pusha  
  41110c:	je     0x41112f
  41110e:	arpl   WORD PTR [ebx],bx
  411110:	enter  0xfb9a,0xf0
  411114:	mov    edi,0x90aacf82
  411119:	iret   
  41111a:	or     eax,0x96763da3
  41111f:	ret    0x6eee
  411122:	mov    bl,0x1f
  411124:	push   edx
  411125:	cmc    
  411126:	dec    esp
  411127:	lahf   
  411128:	lea    ebp,[edi+ebp*2+0x2f]
  41112c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41112d:	adc    al,0x6f
  41112f:	xor    esi,DWORD PTR [edx-0x75]
  411132:	and    DWORD PTR [ebp-0x68134d96],ebp
  411138:	sub    DWORD PTR [ebp+0x5ac78d9a],esp
  41113e:	push   ecx
  41113f:	mov    ebp,0xeae11928
  411144:	push   cs
  411145:	stc    
  411146:	and    DWORD PTR [ebx-0x618d25d1],esi
  41114c:	pop    edi
  41114d:	mov    ch,0x8e
  41114f:	sahf   
  411150:	sbb    ch,BYTE PTR [esi]
  411152:	data16 sbb al,0x70
  411155:	pusha  
  411156:	je     0x4111cb
  411158:	mov    esi,0x9fa6b523
  41115d:	lods   eax,DWORD PTR ds:[esi]
  41115e:	jecxz  0x4111a2
  411160:	dec    ebp
  411161:	in     eax,0xae
  411163:	repnz fisub DWORD PTR [esi+0x682b6c0e]
  41116a:	jecxz  0x411170
  41116c:	add    eax,0x36afc4d7
  411171:	mov    esp,0xd049ce98
  411176:	xchg   edx,eax
  411177:	push   esi
  411178:	xlat   BYTE PTR ds:[ebx]
  411179:	fdiv   DWORD PTR [edi]
  41117b:	repz ret 
  41117d:	repnz fsubr DWORD PTR [esi]
  411180:	mov    ds:0x46913308,al
  411185:	repnz mov ch,BYTE PTR [eax+0x36778de3]
  41118c:	dec    esi
  41118d:	les    ecx,FWORD PTR [ebp+0x54]
  411190:	sbb    al,BYTE PTR [edx+0x70be63f5]
  411196:	(bad)  
  411197:	test   BYTE PTR [edi-0x500223b8],0x81
  41119e:	mov    WORD PTR [edi+0xf0b35d],?
  4111a4:	push   0xffffffc4
  4111a6:	jle    0x41116e
  4111a8:	mov    cl,0x13
  4111aa:	mov    ah,0xab
  4111ac:	mov    bl,0x1d
  4111ae:	stos   DWORD PTR es:[edi],eax
  4111af:	gs or  al,0x8
  4111b2:	mov    bl,0x8a
  4111b4:	xchg   edi,eax
  4111b5:	pushf  
  4111b6:	mov    ?,WORD PTR [esi+0x78]
  4111b9:	cli    
  4111ba:	stos   DWORD PTR es:[edi],eax
  4111bb:	inc    edi
  4111bc:	gs cld 
  4111be:	jle    0x4111a7
  4111c0:	cmp    BYTE PTR [ebx-0x26],0xdf
  4111c4:	push   ecx
  4111c5:	mov    ch,0xbe
  4111c7:	jl     0x4111b1
  4111c9:	add    al,0xb7
  4111cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111cc:	mov    esp,0x4e9b756
  4111d1:	dec    ebp
  4111d2:	mov    esp,0x78029d08
  4111d7:	xor    al,BYTE PTR [ebp+0x452d51b3]
  4111dd:	cdq    
  4111de:	jle    0x411212
  4111e0:	daa    
  4111e1:	xchg   edi,eax
  4111e2:	mov    ebp,0xba421441
  4111e7:	fwait
  4111e8:	std    
  4111e9:	or     esp,ebx
  4111eb:	push   edx
  4111ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ed:	jns    0x41122b
  4111ef:	pop    ss
  4111f0:	mov    ecx,0xa36f656c
  4111f5:	pop    ss
  4111f6:	xor    BYTE PTR [edi+0x4],ch
  4111f9:	test   al,0x5
  4111fb:	add    ecx,DWORD PTR [esi]
  4111fd:	sbb    eax,0x5cd08a7d
  411202:	call   0xe3c5:0x5101a241
  411209:	pop    es
  41120a:	and    BYTE PTR [ebx+0x20edb499],bh
  411210:	mov    bl,0xef
  411212:	scas   al,BYTE PTR es:[edi]
  411213:	hlt    
  411214:	mov    al,ds:0x6434d04c
  411219:	idiv   BYTE PTR [ebx]
  41121b:	mov    edi,?
  41121d:	xlat   BYTE PTR ds:[ebx]
  41121e:	in     eax,0xc8
  411220:	fld    DWORD PTR [eax]
  411222:	pop    ebx
  411223:	mov    ?,WORD PTR [edi+0x5c4357b0]
  411229:	pop    ds
  41122a:	sar    BYTE PTR [edx+ecx*1],0x53
  41122e:	mov    ch,0xa3
  411230:	arpl   di,dx
  411232:	(bad)
  411236:	sub    bl,BYTE PTR [ebp-0x2c]
  411239:	lahf   
  41123a:	pop    esi
  41123b:	mov    ch,0xec
  41123d:	jle    0x4112b7
  41123f:	(bad)  
  411241:	in     al,0xdb
  411243:	dec    esi
  411244:	js     0x41120a
  411246:	rcl    BYTE PTR ds:[edx],0x26
  41124a:	adc    ecx,DWORD PTR fs:[edx+ebp*8+0x6b]
  41124f:	pusha  
  411250:	clc    
  411251:	loopne 0x4112b8
  411253:	sub    cl,BYTE PTR [esi]
  411255:	dec    ecx
  411256:	inc    ebx
  411257:	push   ss
  411258:	or     eax,0x83c5bf32
  41125d:	dec    edi
  41125e:	in     al,dx
  41125f:	xchg   ebx,eax
  411260:	xchg   ebx,eax
  411261:	xchg   BYTE PTR [edi+edi*2-0x4a],bl
  411265:	sub    al,0x76
  411267:	stc    
  411268:	xchg   edi,eax
  411269:	mov    eax,ds:0xf8b6431
  41126e:	jne    0x4112aa
  411270:	lods   eax,DWORD PTR ds:[esi]
  411271:	push   edx
  411272:	aas    
  411273:	push   eax
  411274:	lods   eax,DWORD PTR ds:[esi]
  411275:	push   ds
  411276:	cmp    BYTE PTR [ecx+edi*8],cl
  411279:	pop    ebp
  41127a:	push   esp
  41127b:	mov    WORD PTR [esi-0xa],gs
  41127e:	test   al,0x26
  411280:	out    dx,al
  411281:	jns    0x4112be
  411283:	mov    ebx,0xf25a1125
  411288:	sub    eax,0x534b116b
  41128d:	(bad)  
  41128f:	dec    esi
  411290:	or     DWORD PTR [esi-0xc3aa0c6],0xa9b6a3a1
  41129a:	pop    edi
  41129b:	stos   BYTE PTR es:[edi],al
  41129c:	sbb    dl,BYTE PTR [esi+0x10dac04]
  4112a2:	mov    dl,0x33
  4112a4:	push   edi
  4112a5:	cmp    edx,ebp
  4112a7:	arpl   ax,si
  4112a9:	push   edx
  4112aa:	lds    esi,FWORD PTR [edx-0x69]
  4112ad:	pop    edi
  4112ae:	sub    eax,0xe4ebebc3
  4112b3:	fwait
  4112b4:	adc    dl,BYTE PTR [ecx]
  4112b6:	cli    
  4112b7:	mov    edi,0x981bb2e
  4112bc:	ror    ah,1
  4112be:	adc    BYTE PTR [edx+0x47bc7575],ah
  4112c4:	icebp  
  4112c5:	mov    eax,fs:0x85059e9e
  4112cb:	mov    cl,0x58
  4112cd:	dec    ebp
  4112ce:	in     eax,dx
  4112cf:	(bad)  
  4112d0:	mov    ah,0x76
  4112d2:	sbb    DWORD PTR ss:[ebx-0x72],ebx
  4112d6:	ins    BYTE PTR es:[edi],dx
  4112d7:	sbb    BYTE PTR [edx],al
  4112d9:	sub    eax,eax
  4112db:	sbb    eax,0x6a8ee316
  4112e0:	bound  ebx,QWORD PTR [edx+eiz*8]
  4112e3:	call   0x8da420aa
  4112e8:	cmp    eax,0xb34cc7e4
  4112ed:	jno    0x4112b8
  4112ef:	xlat   BYTE PTR ds:[ebx]
  4112f0:	loope  0x41131d
  4112f2:	js     0x4112e7
  4112f4:	xor    DWORD PTR [ecx+0x3e82fdf1],ecx
  4112fa:	lock push ebp
  4112fc:	jb     0x4112d0
  4112fe:	and    esp,DWORD PTR [ebp+0x63]
  411301:	cmp    eax,esp
  411303:	xor    BYTE PTR [ecx+0x49],bh
  411306:	jl     0x41137e
  411308:	fist   DWORD PTR [ecx-0x40]
  41130b:	pop    ds
  41130c:	(bad)  
  41130d:	cmp    DWORD PTR [esi+0x85fcfe8],ebx
  411313:	loopne 0x411309
  411315:	outs   dx,BYTE PTR ds:[esi]
  411316:	push   esp
  411317:	inc    edx
  411318:	cmp    ch,BYTE PTR [ebx]
  41131a:	fwait
  41131b:	ds push 0x1278dcbd
  411321:	dec    edx
  411322:	xlat   BYTE PTR ds:[ebx]
  411323:	fwait
  411324:	test   al,0x4
  411326:	or     esp,DWORD PTR [edi]
  411328:	xor    ebp,DWORD PTR [edx+0xd]
  41132b:	fwait
  41132c:	jb     0x411329
  41132e:	xchg   BYTE PTR [ebx+0x7e],ch
  411331:	repnz mov ch,0x80
  411334:	shl    DWORD PTR [ebx-0x6a],1
  411337:	jnp    0x411329
  411339:	dec    ebx
  41133a:	pop    ebx
  41133b:	add    BYTE PTR [ecx-0x3fa2ab96],bl
  411341:	cmp    BYTE PTR [eax+0x3],ch
  411344:	(bad)  
  411345:	(bad)  [eax+0xf]
  411348:	imul   ebx,DWORD PTR [eax-0x40cb8ca6],0xa
  41134f:	pop    esi
  411350:	jo     0x41133d
  411352:	dec    edx
  411353:	mov    dl,0xad
  411355:	cs or  al,0x42
  411358:	das    
  411359:	cwde   
  41135a:	inc    esp
  41135b:	sahf   
  41135c:	pop    esi
  41135d:	ja     0x4112ea
  41135f:	mov    al,0x1
  411361:	add    eax,0x2864136a
  411366:	jne    0x411318
  411368:	or     eax,edi
  41136a:	mov    ecx,DWORD PTR [eax]
  41136c:	xchg   BYTE PTR [ebx],bl
  41136e:	es (bad) 
  411370:	(bad)  
  411371:	mov    esi,0x58d96786
  411376:	mov    ecx,0xc997b485
  41137b:	dec    edx
  41137c:	mov    cl,0xe0
  41137e:	mov    BYTE PTR [edx+0x58],bl
  411381:	dec    eax
  411382:	lods   al,BYTE PTR ds:[esi]
  411383:	(bad)  
  411384:	cmp    ebx,DWORD PTR [edx]
  411386:	sub    al,0xb0
  411388:	rcr    edi,1
  41138a:	ins    DWORD PTR es:[edi],dx
  41138b:	jl     0x411407
  41138d:	jmp    FWORD PTR [ebx-0x39b88436]
  411393:	shr    DWORD PTR [ebx+0x32],1
  411396:	std    
  411397:	scas   al,BYTE PTR es:[edi]
  411398:	push   ebp
  411399:	sub    ch,bh
  41139b:	aaa    
  41139c:	cmp    ebx,edx
  41139e:	or     BYTE PTR [eax-0x3],al
  4113a1:	xchg   ebx,eax
  4113a2:	iret   
  4113a3:	mov    BYTE PTR [eax-0x19eb70ef],dl
  4113a9:	xchg   edx,eax
  4113aa:	inc    ebx
  4113ab:	das    
  4113ac:	sahf   
  4113ad:	add    esi,DWORD PTR [ebx+0x2f58e6f]
  4113b3:	pop    ds
  4113b4:	sbb    esp,DWORD PTR [eax]
  4113b6:	xchg   ebp,eax
  4113b7:	cmp    dl,ah
  4113b9:	and    ecx,ebp
  4113bb:	call   0xcee:0x45370e96
  4113c2:	push   edx
  4113c3:	jmp    0x9e26:0xa91668b1
  4113ca:	mov    edx,0x79c39bb7
  4113cf:	sub    bl,cl
  4113d1:	ficom  WORD PTR [edx+edx*8+0x3b]
  4113d5:	leave  
  4113d6:	jne    0x41142a
  4113d8:	pop    esp
  4113d9:	push   0x56
  4113db:	imul   edi,ebx,0xffffff8d
  4113de:	fistp  QWORD PTR [edx+0xd42e0b4]
  4113e4:	mov    cl,0xdc
  4113e6:	lea    ebp,[ebp*1-0x2da0ad20]
  4113ed:	mov    dh,0xb
  4113ef:	adc    al,0xed
  4113f1:	adc    cl,BYTE PTR [edx-0x51]
  4113f4:	push   cs
  4113f5:	int3   
  4113f6:	jge    0x4113ef
  4113f8:	popf   
  4113f9:	lods   eax,DWORD PTR ds:[esi]
  4113fa:	and    dh,BYTE PTR [esi-0x3c29f74a]
  411400:	xchg   edi,eax
  411401:	mov    ebx,0x34a518f3
  411406:	pushf  
  411407:	and    bl,BYTE PTR [edx-0x8d461e]
  41140d:	addr16 jl 0x411436
  411410:	(bad)  
  411411:	mov    bh,0xd5
  411413:	mov    dl,0xd1
  411415:	cmp    eax,0x2b719753
  41141a:	and    esi,ebp
  41141c:	out    0x25,eax
  41141e:	or     al,0x27
  411420:	test   BYTE PTR [edi+ecx*1],dl
  411423:	lock cmp DWORD PTR [eax+0x7b16134c],edi
  41142a:	inc    ebp
  41142b:	daa    
  41142c:	sub    eax,0x4fbcb7fd
  411431:	scas   eax,DWORD PTR es:[edi]
  411432:	sbb    al,0x33
  411434:	adc    ebp,DWORD PTR [eax+0x72]
  411437:	sub    al,BYTE PTR [edi-0x64f501ed]
  41143d:	lds    ebx,FWORD PTR [ebp+eiz*2+0x3abf9dd7]
  411444:	stos   DWORD PTR es:[edi],eax
  411445:	lahf   
  411446:	xor    ah,BYTE PTR [ecx]
  411448:	loop   0x4113d1
  41144a:	lahf   
  41144b:	jno    0x4113e1
  41144d:	out    dx,eax
  41144e:	ret    
  41144f:	lea    esp,[edi-0x3d]
  411452:	std    
  411453:	xchg   ebx,eax
  411454:	cwde   
  411455:	jmp    0x4114cb
  411457:	push   0x6d
  411459:	inc    ebx
  41145a:	and    BYTE PTR [edi],0xb8
  41145d:	mov    ds:0xfb88674a,al
  411462:	xchg   edx,eax
  411463:	or     esp,DWORD PTR [edi-0x43bc8129]
  411469:	clc    
  41146a:	cdq    
  41146b:	push   edx
  41146c:	xlat   BYTE PTR ds:[ebx]
  41146d:	int    0xc7
  41146f:	shl    DWORD PTR [esi],cl
  411471:	jg     0x41148e
  411473:	and    eax,0x3d8ae6a0
  411478:	repz sub eax,DWORD PTR [ebx+0xb06cba2]
  41147f:	cs pop es
  411481:	call   DWORD PTR [ecx+0x2beb00e6]
  411487:	add    al,0x8c
  411489:	pop    esp
  41148a:	sub    eax,0xe16095e0
  41148f:	mov    al,ds:0xe793de6b
  411494:	push   0xa77824bb
  411499:	jbe    0x4114f0
  41149b:	push   esp
  41149c:	mov    eax,0x1c851737
  4114a1:	in     al,dx
  4114a2:	push   cs
  4114a3:	adc    BYTE PTR [ecx],dh
  4114a5:	pop    ds
  4114a6:	push   edx
  4114a7:	mov    DWORD PTR [eax-0x4b3071ba],edx
  4114ad:	dec    ebp
  4114ae:	push   ebx
  4114af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b0:	icebp  
  4114b1:	int3   
  4114b2:	std    
  4114b3:	and    eax,ecx
  4114b5:	int3   
  4114b6:	enter  0x2cbb,0x3d
  4114ba:	lds    ebx,FWORD PTR [edx+0x54fdba04]
  4114c0:	cvtps2pd xmm6,xmm1
  4114c3:	mov    eax,0x921d7b06
  4114c8:	into   
  4114c9:	leave  
  4114ca:	mov    dl,0xca
  4114cc:	pop    ds
  4114cd:	aam    0xe2
  4114cf:	push   ecx
  4114d0:	mov    al,0x19
  4114d2:	call   0x83667cef
  4114d7:	sub    BYTE PTR [ebp+0x4451df8a],dh
  4114dd:	dec    edx
  4114de:	shl    BYTE PTR [edx+0x39],1
  4114e1:	and    dh,BYTE PTR ds:0xc1076944
  4114e7:	ja     0x41155f
  4114e9:	rol    DWORD PTR [esi+esi*8+0x6],cl
  4114ed:	add    dl,BYTE PTR [esi+ebp*1-0x27]
  4114f1:	call   FWORD PTR [ecx]
  4114f3:	inc    esi
  4114f4:	xor    eax,0xac06baf6
  4114f9:	popf   
  4114fa:	dec    esp
  4114fb:	not    BYTE PTR [edx+0x71a5f789]
  411501:	lea    ecx,[ecx-0x50fea2e3]
  411507:	jno    0x4114d2
  411509:	(bad)  
  41150a:	mov    ds:0xd5048c41,al
  41150f:	call   0x80f6b15a
  411514:	jecxz  0x411569
  411516:	fst    DWORD PTR [ecx+ebp*8-0x7e]
  41151a:	push   0xa3449df9
  41151f:	(bad)  
  411520:	pop    ss
  411521:	data16 aad 0x25
  411524:	fwait
  411525:	adc    BYTE PTR [ebx],bh
  411527:	xor    DWORD PTR [edx+ecx*2-0x42fea5cc],esp
  41152e:	pop    eax
  41152f:	add    ecx,DWORD PTR [edx+0x6b]
  411532:	ins    BYTE PTR es:[edi],dx
  411533:	xchg   edx,eax
  411534:	or     DWORD PTR fs:[edi-0x30],esp
  411538:	shr    DWORD PTR [edx-0x4f],0x28
  41153c:	push   ebx
  41153d:	mov    esi,gs
  41153f:	xchg   ebx,eax
  411540:	add    DWORD PTR [ecx+0x56],ecx
  411543:	dec    edx
  411544:	out    0xb8,al
  411546:	in     eax,dx
  411547:	inc    esi
  411548:	in     eax,0x22
  41154a:	sti    
  41154b:	out    dx,al
  41154c:	outs   dx,BYTE PTR ds:[esi]
  41154d:	inc    DWORD PTR [ebp+0x7243e249]
  411553:	test   al,0x6a
  411555:	push   esi
  411556:	cmp    al,0x42
  411558:	fldcw  WORD PTR [ecx+0x78]
  41155b:	imul   esp,DWORD PTR [ebx-0x5b],0xffffffe2
  41155f:	arpl   WORD PTR [edi],dx
  411561:	or     esp,ebx
  411563:	imul   ebp,DWORD PTR [eax+0x1ea90ab7],0x1c
  41156a:	push   ds
  41156b:	clc    
  41156c:	inc    ebx
  41156d:	sub    eax,0x224bb8a1
  411572:	sub    al,0xcf
  411574:	mov    eax,0xefcf8ff0
  411579:	sbb    bl,0x3c
  41157c:	sub    eax,0x23751b7
  411581:	fstp   TBYTE PTR [ebx+edx*2]
  411584:	hlt    
  411585:	int    0x81
  411587:	inc    edx
  411588:	fdiv   DWORD PTR [ebx-0x45]
  41158b:	dec    ebp
  41158c:	cwde   
  41158d:	sbb    DWORD PTR [esi],esp
  41158f:	and    DWORD PTR ds:0x2b48d738,ebp
  411595:	jne    0x4115cf
  411597:	and    BYTE PTR [eax+0x30b5cafb],dh
  41159d:	pop    ss
  41159e:	push   edx
  41159f:	scas   eax,DWORD PTR es:[edi]
  4115a0:	lods   al,BYTE PTR ds:[esi]
  4115a1:	cdq    
  4115a2:	mov    ebx,0x3dbaff70
  4115a7:	imul   ebx,DWORD PTR ds:0x1e66d7f4,0xffffff8d
  4115ae:	mov    bh,0x3
  4115b0:	cdq    
  4115b1:	pop    ebx
  4115b2:	and    al,0xec
  4115b4:	sub    dh,ch
  4115b6:	mov    cl,0xdf
  4115b8:	inc    edi
  4115b9:	jp     0x41162c
  4115bb:	push   eax
  4115bc:	push   edx
  4115bd:	xor    al,bl
  4115bf:	xor    eax,0x6731909d
  4115c4:	and    eax,0xbf2eaa80
  4115c9:	imul   bl
  4115cb:	inc    ebp
  4115cc:	into   
  4115cd:	js     0x41157e
  4115cf:	xchg   DWORD PTR [ecx+0x69816292],ebx
  4115d5:	sub    dh,dl
  4115d7:	pop    eax
  4115d8:	aam    0xde
  4115da:	ret    0xe60e
  4115dd:	inc    edx
  4115de:	cdq    
  4115df:	int    0xe3
  4115e1:	pusha  
  4115e2:	mov    edi,0x2b77a34d
  4115e7:	and    esp,DWORD PTR [eax]
  4115e9:	loopne 0x411648
  4115eb:	outs   dx,DWORD PTR ds:[esi]
  4115ec:	loope  0x41165d
  4115ee:	popf   
  4115ef:	xor    DWORD PTR [edx-0x53353a7c],esp
  4115f5:	outs   dx,BYTE PTR ds:[esi]
  4115f6:	call   DWORD PTR [ebx]
  4115f8:	and    al,0xf3
  4115fa:	mov    edx,0x95855929
  4115ff:	test   BYTE PTR [esp+ebx*8-0x7e],cl
  411603:	and    esp,DWORD PTR [ecx]
  411605:	sbb    eax,0xd35bd3b8
  41160a:	call   0x5018:0x608086f1
  411611:	pop    esi
  411612:	pop    edi
  411613:	aaa    
  411614:	inc    ebx
  411615:	sbb    esp,DWORD PTR [edx+ebx*8]
  411618:	mov    ebx,DWORD PTR [esi-0x7a4b7d87]
  41161e:	ins    BYTE PTR es:[edi],dx
  41161f:	test   DWORD PTR [esi+0x38],eax
  411622:	into   
  411623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411624:	repz shl DWORD PTR [edx+edi*8+0x71],1
  411629:	std    
  41162a:	cmp    al,0xde
  41162c:	in     al,0x5
  41162e:	or     BYTE PTR [edx+0x0],al
  411631:	push   ecx
  411632:	or     bh,dl
  411634:	dec    esp
  411635:	ss pop edi
  411637:	xchg   esp,eax
  411638:	jmp    0x4115e4
  41163a:	mul    DWORD PTR [ecx-0x5e]
  41163d:	popa   
  41163e:	mov    esp,0x218d56e1
  411643:	mov    al,ds:0xf21eead8
  411648:	jmp    0xd306ceaf
  41164d:	addr16 in eax,0xf0
  411650:	dec    ecx
  411651:	mov    ch,cl
  411653:	xchg   edi,esp
  411655:	enter  0x633a,0x81
  411659:	push   edx
  41165a:	dec    esi
  41165b:	add    ebp,edx
  41165d:	fild   WORD PTR [ebx]
  41165f:	in     eax,0xb3
  411661:	popf   
  411662:	or     esp,DWORD PTR [edi+0x6d]
  411665:	jp     0x411693
  411667:	mov    eax,ds:0xfb15aca1
  41166c:	in     al,0xb4
  41166e:	push   esi
  41166f:	daa    
  411670:	dec    edi
  411671:	push   esi
  411672:	and    al,0x92
  411674:	pop    ebp
  411675:	cmp    bh,BYTE PTR [ecx]
  411677:	arpl   bp,bx
  411679:	rcr    DWORD PTR [edi],0x92
  41167c:	sti    
  41167d:	inc    edi
  41167e:	xor    esi,DWORD PTR [edi+0x8]
  411681:	repnz jmp 0xa38a:0xd7a2ba6c
  411689:	push   eax
  41168a:	xor    ecx,edi
  41168c:	push   ds
  41168d:	jl     0x411631
  41168f:	ds outs dx,BYTE PTR cs:[esi]
  411692:	fwait
  411693:	int    0x29
  411695:	dec    edx
  411696:	rol    DWORD PTR [eax],cl
  411698:	sub    DWORD PTR [ecx-0x65b83265],ebp
  41169e:	loop   0x411708
  4116a0:	xchg   ebx,eax
  4116a1:	mov    esp,0x869b1856
  4116a6:	push   DWORD PTR [ebp+eax*4+0x16]
  4116aa:	pop    eax
  4116ab:	fisubr DWORD PTR ds:0x57a6c3e7
  4116b1:	xchg   ecx,eax
  4116b2:	add    BYTE PTR [edx+0x7eb722e0],bh
  4116b8:	push   ebp
  4116b9:	xor    eax,0xf8f865d5
  4116be:	sub    ebx,DWORD PTR [edi-0x2a]
  4116c1:	js     0x4116e2
  4116c3:	pushf  
  4116c4:	ins    DWORD PTR es:[edi],dx
  4116c5:	aaa    
  4116c6:	mov    ah,0xb4
  4116c8:	sub    al,0x26
  4116ca:	shl    DWORD PTR [eax+0x5a],cl
  4116cd:	aaa    
  4116ce:	mov    ds,esi
  4116d0:	pop    esp
  4116d1:	and    dl,BYTE PTR [esi]
  4116d3:	test   bh,0x5f
  4116d6:	lods   al,BYTE PTR ds:[esi]
  4116d7:	xchg   esi,eax
  4116d8:	inc    eax
  4116d9:	mov    eax,ds:0xb0513d67
  4116de:	test   BYTE PTR [edx],0xce
  4116e1:	loopne 0x411734
  4116e3:	pop    es
  4116e4:	and    bl,al
  4116e6:	adc    DWORD PTR [esi-0x233472eb],0xffffffba
  4116ed:	test   dl,ch
  4116ef:	adc    cl,dl
  4116f1:	lock ss sub al,0xa3
  4116f5:	xchg   edx,eax
  4116f6:	cmp    ah,BYTE PTR [ebp+ebx*8-0x2cebe57a]
  4116fd:	mov    al,0x53
  4116ff:	inc    edx
  411700:	jg     0x4116a1
  411702:	inc    esi
  411703:	test   BYTE PTR [edx],dl
  411705:	add    eax,0xe911299c
  41170a:	scas   al,BYTE PTR es:[edi]
  41170b:	jmp    0x41171a
  41170d:	xchg   edx,eax
  41170e:	adc    bh,BYTE PTR [ebp+0x39]
  411711:	sbb    al,0xe0
  411713:	sub    eax,0x440d9d49
  411718:	push   esp
  411719:	sti    
  41171a:	call   0x409c1372
  41171f:	out    0x17,eax
  411721:	js     0x41175c
  411723:	mov    ecx,0x66d5b4c
  411728:	(bad)  
  411729:	popf   
  41172a:	in     eax,dx
  41172b:	inc    ecx
  41172c:	inc    ecx
  41172d:	mov    cl,0x1c
  41172f:	cmp    dh,dl
  411731:	std    
  411732:	push   0x7c
  411734:	mov    WORD PTR [ecx],fs
  411736:	mov    al,ch
  411738:	hlt    
  411739:	cli    
  41173a:	int    0x17
  41173c:	xor    dh,BYTE PTR [eax-0x242da3a]
  411742:	rcl    DWORD PTR [edi-0xa9b994b],cl
  411748:	fadd   QWORD PTR [esp+esi*8+0x1f]
  41174c:	cmp    al,0x1d
  41174e:	push   es
  41174f:	in     al,dx
  411750:	ss cld 
  411752:	in     al,0xed
  411754:	jne    0x4117be
  411756:	mov    ebp,0x4e4bdcb3
  41175b:	stos   BYTE PTR es:[edi],al
  41175c:	dec    ecx
  41175d:	mov    ebp,0x1229929d
  411762:	div    DWORD PTR [ebx]
  411764:	ret    0x4b2b
  411767:	(bad)  
  411768:	(bad)  
  41176a:	add    BYTE PTR [esi],bl
  41176c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41176d:	pop    esi
  41176e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41176f:	cld    
  411770:	(bad)  
  411772:	ins    DWORD PTR es:[edi],dx
  411773:	mov    dh,0x3a
  411775:	lahf   
  411776:	xchg   DWORD PTR [eax+ebx*4+0x22],esi
  41177a:	xor    eax,esi
  41177c:	xchg   esp,eax
  41177d:	jle    0x411711
  41177f:	inc    ebx
  411780:	jecxz  0x411740
  411782:	mov    al,ds:0xe72aeb29
  411787:	mov    WORD PTR [ebp+0x69a5a93],gs
  41178d:	call   0x5db3364b
  411792:	int3   
  411793:	mov    ch,0x65
  411795:	dec    edi
  411796:	test   cl,ch
  411798:	xchg   edx,eax
  411799:	popf   
  41179a:	popf   
  41179b:	mov    eax,ds:0xae63de71
  4117a0:	jbe    0x41177d
  4117a2:	xchg   esp,eax
  4117a3:	push   0x7490a2e
  4117a8:	nop
  4117a9:	pop    ebx
  4117aa:	aaa    
  4117ab:	adc    DWORD PTR [ebx+0x45],0x8317a7a7
  4117b2:	imul   eax,DWORD PTR [esi+0x3e],0xc
  4117b6:	(bad)  
  4117b7:	cmc    
  4117b8:	ret    0x652f
  4117bb:	xchg   DWORD PTR [edx-0x11657ec2],edi
  4117c1:	das    
  4117c2:	xor    eax,0xda69ee33
  4117c7:	add    BYTE PTR [edi],bh
  4117c9:	in     eax,0x69
  4117cb:	mov    ds:0x1c31480c,al
  4117d0:	xchg   BYTE PTR [edx],bl
  4117d2:	and    DWORD PTR ds:0x2f4b740,ebp
  4117d8:	(bad)  
  4117d9:	rcl    DWORD PTR [edi-0x35],1
  4117dc:	mov    esi,0xfb0313b2
  4117e1:	int3   
  4117e2:	push   ecx
  4117e3:	gs cmc 
  4117e5:	stos   DWORD PTR es:[edi],eax
  4117e6:	xlat   BYTE PTR ss:[ebx]
  4117e8:	mov    bh,0xb4
  4117ea:	jl     0x41178c
  4117ec:	mov    eax,0xcef56de4
  4117f1:	inc    ebp
  4117f2:	jno    0x41178a
  4117f4:	adc    al,0x93
  4117f6:	inc    edx
  4117f7:	sub    DWORD PTR [ebx],ebx
  4117f9:	outs   dx,DWORD PTR ds:[esi]
  4117fa:	inc    edx
  4117fb:	push   es
  4117fc:	repnz mov fs,WORD PTR [edi]
  4117ff:	js     0x41184a
  411801:	inc    ebx
  411802:	cmp    BYTE PTR [esi-0x2a3001c],bl
  411808:	pop    esp
  411809:	xlat   BYTE PTR ds:[ebx]
  41180a:	adc    DWORD PTR [edi-0x79f73657],0xffffffab
  411811:	leave  
  411812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411813:	sub    DWORD PTR [ebx+0x6cd9327],ecx
  411819:	push   ss
  41181a:	mov    ebp,0x681f3765
  41181f:	(bad)  
  411820:	mov    dl,0xb5
  411822:	mov    cl,0x33
  411824:	push   ebx
  411825:	or     eax,0x1ef05b4f
  41182a:	out    0xc,eax
  41182c:	mov    ebp,0x8f67012
  411831:	sub    DWORD PTR [edx],ebx
  411833:	cmp    dh,BYTE PTR [ecx+0x3c]
  411836:	inc    BYTE PTR [edi+0x75]
  411839:	jo     0x4117f6
  41183b:	jbe    0x411804
  41183d:	push   ebp
  41183e:	imul   edx,DWORD PTR [edx+0x6d38554e],0x5b
  411845:	mov    bl,0xf2
  411847:	iret   
  411848:	xchg   ecx,eax
  411849:	in     eax,0x8
  41184b:	popf   
  41184c:	loope  0x4117e1
  41184e:	out    dx,eax
  41184f:	cli    
  411850:	call   0xf2519a04
  411855:	inc    esp
  411856:	mov    ebp,0x4d9ef1be
  41185b:	dec    esp
  41185c:	jb     0x411804
  41185e:	push   edi
  41185f:	mov    ch,0x58
  411861:	jbe    0x41189b
  411863:	push   ds
  411864:	rol    BYTE PTR [edx-0xf],0x2c
  411868:	add    al,0x53
  41186a:	lods   al,BYTE PTR ds:[esi]
  41186b:	push   cs
  41186c:	add    eax,0xdf7758d3
  411871:	push   esp
  411872:	inc    ecx
  411873:	jae    0x41181d
  411875:	in     al,dx
  411876:	xchg   BYTE PTR [eax+ecx*2],bh
  411879:	xchg   BYTE PTR [ecx],dh
  41187b:	rcr    ebx,0xdf
  41187e:	jns    0x411854
  411880:	enter  0xeae6,0xb9
  411884:	push   ds
  411885:	fwait
  411886:	ret    
  411887:	lock pop esp
  411889:	and    ebp,DWORD PTR [edx+0x26]
  41188c:	fiadd  DWORD PTR [edi+0x5d]
  41188f:	cwde   
  411890:	ret    
  411891:	xchg   esi,eax
  411892:	sti    
  411893:	out    0xa8,eax
  411895:	shl    BYTE PTR [edx-0x2c2ad6f2],cl
  41189b:	mov    ecx,0x6eeef2b3
  4118a0:	icebp  
  4118a1:	cmp    DWORD PTR [ecx+0x1f22d763],edi
  4118a7:	jmp    0x41190a
  4118a9:	mov    al,ds:0xc9869097
  4118ae:	adc    eax,0x23b2b34f
  4118b3:	stos   BYTE PTR es:[edi],al
  4118b4:	in     al,dx
  4118b5:	cmp    edi,DWORD PTR [ebx+ebx*4]
  4118b8:	inc    ebp
  4118b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ba:	mov    ebp,ds
  4118bc:	xchg   ebp,eax
  4118bd:	xlat   BYTE PTR ds:[ebx]
  4118be:	xchg   edi,eax
  4118bf:	iret   
  4118c0:	adc    eax,0x37a58a69
  4118c5:	ins    DWORD PTR es:[edi],dx
  4118c6:	adc    BYTE PTR [ebx+0x13],0x12
  4118ca:	sbb    DWORD PTR [ecx-0x47],edx
  4118cd:	adc    edx,DWORD PTR [edx+0x23ea7da8]
  4118d3:	loop   0x411916
  4118d5:	mov    dh,0x18
  4118d7:	xchg   ebx,eax
  4118d8:	int3   
  4118d9:	pop    ebp
  4118da:	test   BYTE PTR [esp+esi*1],bl
  4118dd:	mov    cl,0xd2
  4118df:	or     esp,DWORD PTR [edx-0x48b2f71e]
  4118e5:	and    BYTE PTR [ebp+0x4f],dl
  4118e8:	bound  edx,QWORD PTR [edx+esi*1-0x48c6b637]
  4118ef:	out    0x7f,eax
  4118f1:	push   edx
  4118f2:	sub    ah,BYTE PTR [edi-0x18]
  4118f5:	jl     0x411886
  4118f7:	push   0xfffffffc
  4118f9:	shl    DWORD PTR [ecx-0x40],1
  4118fc:	ds pop edx
  4118fe:	jne    0x4118b9
  411900:	cmc    
  411901:	je     0x411945
  411903:	mov    WORD PTR [eax+0x4909bace],es
  411909:	test   BYTE PTR [eax-0x2d29fcf1],dh
  41190f:	jo     0x411893
  411911:	adc    esi,ebx
  411913:	call   0x8844:0xa8efb1dc
  41191a:	mov    ch,0x60
  41191c:	adc    edx,DWORD PTR [ebx]
  41191e:	scas   al,BYTE PTR es:[edi]
  41191f:	mov    ds:0x4bd988d8,eax
  411924:	ja     0x4118c9
  411926:	xchg   esp,eax
  411927:	in     eax,0x6b
  411929:	jbe    0x4118da
  41192b:	aam    0x23
  41192d:	jecxz  0x411947
  41192f:	pop    eax
  411930:	sub    eax,0x3de5f6a3
  411935:	mov    bh,cl
  411937:	and    ecx,ebx
  411939:	xlat   BYTE PTR ds:[ebx]
  41193a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193b:	dec    ebx
  41193c:	add    DWORD PTR [edx+0x217ecb7b],esp
  411942:	sar    BYTE PTR ds:0x7be3f867,1
  411948:	dec    esp
  411949:	daa    
  41194a:	cli    
  41194b:	mov    dl,0x1
  41194d:	ins    BYTE PTR es:[edi],dx
  41194e:	pop    eax
  41194f:	pop    es
  411950:	mov    al,ds:0x169f28fa
  411955:	jo     0x411937
  411957:	pop    edi
  411958:	cmp    cl,ah
  41195a:	mov    DWORD PTR [ecx],ebp
  41195c:	push   DWORD PTR [edx+edx*4]
  41195f:	clc    
  411960:	xchg   edi,eax
  411961:	popf   
  411962:	inc    edx
  411963:	add    eax,0xea5a0ec4
  411968:	mov    esp,0x733eb251
  41196d:	pop    esi
  41196e:	(bad)  
  41196f:	cmp    DWORD PTR [eax],esi
  411971:	mov    gs,WORD PTR [ebx-0x59]
  411974:	sub    eax,0x1cc88a8f
  411979:	jge    0x41192c
  41197b:	mov    dh,0x85
  41197d:	or     DWORD PTR [ecx],ecx
  41197f:	add    DWORD PTR [ebx-0xf40eb4b],edx
  411985:	and    DWORD PTR [ebx+esi*2-0x5d41c9a],ebx
  41198c:	pop    eax
  41198d:	mov    BYTE PTR [ebp+0x630d191a],bh
  411993:	scas   al,BYTE PTR es:[edi]
  411994:	pushf  
  411995:	leave  
  411996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411997:	fstp   DWORD PTR [esi-0x1e5bd1c7]
  41199d:	aad    0xe3
  41199f:	cmp    eax,0xa8d65bad
  4119a4:	das    
  4119a5:	ja     0x4119f0
  4119a7:	cmc    
  4119a8:	and    BYTE PTR [edx-0x24],dh
  4119ab:	push   ss
  4119ac:	in     al,dx
  4119ad:	cmp    ecx,DWORD PTR [ecx]
  4119af:	clc    
  4119b0:	imul   ebp
  4119b2:	fadd   DWORD PTR [ebx+0x62]
  4119b5:	jae    0x411a00
  4119b7:	dec    esp
  4119b8:	ins    DWORD PTR es:[edi],dx
  4119b9:	enter  0x203,0x1f
  4119bd:	arpl   WORD PTR [ecx+0x38edb1e6],dx
  4119c3:	add    eax,0x87050ceb
  4119c8:	jl     0x411990
  4119ca:	ror    DWORD PTR ds:0xd4683f2e,0xfd
  4119d1:	loopne 0x41198b
  4119d3:	and    BYTE PTR ds:0xec746d4a,bl
  4119d9:	popa   
  4119da:	pop    eax
  4119db:	adc    edi,eax
  4119dd:	sbb    ebp,edx
  4119df:	mov    bh,0x80
  4119e1:	aad    0xe
  4119e3:	leave  
  4119e4:	jno    0x411a15
  4119e6:	aad    0x33
  4119e8:	mov    eax,ds:0x8649c754
  4119ed:	or     ah,BYTE PTR [esi]
  4119ef:	cdq    
  4119f0:	add    DWORD PTR [esi+0x5b],ebp
  4119f3:	test   al,0xcf
  4119f5:	fist   DWORD PTR [ebx-0x6dd3a941]
  4119fb:	inc    ecx
  4119fc:	mov    cl,0x8d
  4119fe:	inc    edi
  4119ff:	les    ecx,FWORD PTR [eax+edx*4-0x18]
  411a03:	pop    eax
  411a04:	ss xor al,0x27
  411a07:	sahf   
  411a08:	mov    edx,0x5af103ef
  411a0d:	jbe    0x411a78
  411a0f:	jbe    0x4119f3
  411a11:	jl     0x4119a2
  411a13:	inc    esi
  411a14:	stos   BYTE PTR es:[edi],al
  411a15:	sub    esp,0x304435f1
  411a1b:	sbb    eax,0x55108879
  411a20:	ins    DWORD PTR es:[edi],dx
  411a21:	enter  0x2f16,0x33
  411a25:	into   
  411a26:	add    ecx,edi
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x428ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x428eaf,0x428e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x428e77,0x428e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x428e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x428eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x428ea7
  411b51:	sbb    DWORD PTR ds:0x428eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x428eab,0x428e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x428e83,0x428e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x428ecf
  411b7f:	sub    DWORD PTR ds:0x428e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x428e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x428ea7
  411bd4:	adc    DWORD PTR ds:0x428e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x428eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x428e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x428e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x428e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x42a9eb
  411c20:	cmp    DWORD PTR ds:0x428e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x428e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x428e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x428e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x428e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x428e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x428e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x428ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x428e43,0x428e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x428e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x428eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x428e57
  411ca7:	add    DWORD PTR ds:0x428e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x428ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x428ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x428ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x428e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x42a9ef
  411cf2:	cmp    DWORD PTR ds:0x428ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x428ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x428ebf,eax
  411d0a:	mov    eax,ds:0x428ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x428ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax+0x577b7cbc]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx-0x6e2ce0d4],0xffffffc7
  411d3c:	iret   
  411d3d:	xchg   sp,ax
  411d3f:	xor    eax,0x4ea6f256
  411d44:	cmc    
  411d45:	pop    edx
  411d46:	mov    esp,0x6cf20c9f
  411d4b:	sub    al,0x24
  411d4d:	mov    ebx,0xd5e21e56
  411d52:	lock jge 0x411d96
  411d55:	add    eax,0xf1615d9d
  411d5a:	loopne 0x411d16
  411d5c:	pop    esi
  411d5d:	in     eax,dx
  411d5e:	mov    dh,BYTE PTR ds:0x8688ce8c
  411d64:	sub    bl,bh
  411d66:	jnp    0x411d0c
  411d68:	sub    ebp,DWORD PTR [ecx+0x28]
  411d6b:	jb     0x411d8b
  411d6d:	(bad)  
  411d6e:	dec    esp
  411d6f:	xchg   ebx,eax
  411d70:	test   dl,ah
  411d72:	jbe    0x411d4f
  411d74:	je     0x411d45
  411d76:	mov    esi,0x4e62c164
  411d7b:	das    
  411d7c:	ficom  DWORD PTR [ecx-0x68]
  411d7f:	sub    ebp,DWORD PTR [esi-0x7ca13a39]
  411d85:	xchg   ecx,eax
  411d86:	call   0x99a4688f
  411d8b:	sti    
  411d8c:	sar    BYTE PTR [ebx+0x1385f265],0x50
  411d93:	cmp    eax,0x285dddb6
  411d98:	outs   dx,BYTE PTR ds:[esi]
  411d99:	into   
  411d9a:	ss mov ecx,0x1e122fdf
  411da0:	sub    BYTE PTR [edi],al
  411da2:	cdq    
  411da3:	xchg   esi,eax
  411da4:	mov    ch,0x39
  411da6:	mov    WORD PTR [edi-0x56899bc5],ds
  411dac:	sbb    ebx,ebp
  411dae:	test   al,0xe7
  411db0:	cmp    esp,edi
  411db2:	mov    ebp,0xd60e7519
  411db7:	xor    al,0x7b
  411db9:	xchg   BYTE PTR [ecx+0x8],bh
  411dbc:	mov    ebp,0x2a3efd3a
  411dc1:	inc    esp
  411dc2:	cmp    al,0xae
  411dc4:	and    edi,DWORD PTR [edi]
  411dc6:	inc    ebx
  411dc7:	jnp    0x411e0b
  411dc9:	sbb    esp,ecx
  411dcb:	cmp    eax,0x40261323
  411dd0:	lock inc esp
  411dd2:	jb     0x411e18
  411dd4:	push   es
  411dd5:	shl    ebp,0x18
  411dd8:	cld    
  411dd9:	imul   edi,DWORD PTR [esi+0x66b57a14],0x60ff50bd
  411de3:	jle    0x411dbe
  411de5:	push   edx
  411de6:	push   esp
  411de7:	js     0x411e1b
  411de9:	push   ds
  411dea:	add    BYTE PTR [edi-0x63a5c6fa],0x40
  411df1:	nop
  411df2:	dec    esi
  411df3:	mov    DWORD PTR [ecx],esi
  411df5:	cmp    ecx,DWORD PTR [ebx-0xe34a05c]
  411dfb:	jp     0x411da9
  411dfd:	out    0xd7,al
  411dff:	pushaw 
  411e01:	and    BYTE PTR [esi-0x95c6783],bh
  411e07:	pop    esi
  411e08:	pop    es
  411e09:	sahf   
  411e0a:	jle    0x411da1
  411e0c:	lahf   
  411e0d:	test   al,0x5e
  411e0f:	push   ebp
  411e10:	call   0xc8d3:0x13fcf7fb
  411e17:	dec    edi
  411e18:	or     DWORD PTR [esi],0x6e98d446
  411e1e:	xchg   esi,eax
  411e1f:	loope  0x411e89
  411e21:	mov    ebp,0x4f46996b
  411e26:	hlt    
  411e27:	loop   0x411e79
  411e29:	clc    
  411e2a:	and    DWORD PTR [edx-0xc],0xd298d081
  411e31:	pop    ecx
  411e32:	push   0x8f84ebe5
  411e37:	sahf   
  411e38:	ret    0x3cf6
  411e3b:	xchg   ecx,eax
  411e3c:	or     BYTE PTR [esi+0x45f029b7],ch
  411e42:	arpl   WORD PTR [ebx-0x29],bx
  411e45:	mov    ebx,0xce94523a
  411e4a:	pop    esi
  411e4b:	shl    DWORD PTR [ebx+0x50],cl
  411e4e:	rol    edi,1
  411e50:	les    edi,FWORD PTR [eax]
  411e52:	ret    
  411e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e54:	ja     0x411e18
  411e56:	pop    es
  411e57:	cmp    DWORD PTR [esi+0x1b323dc7],esi
  411e5d:	test   cl,al
  411e5f:	out    0x4f,eax
  411e61:	mov    edx,0x52b82e21
  411e66:	mov    gs,WORD PTR [eax+0x740a8282]
  411e6c:	mov    al,ds:0xd98dc584
  411e71:	loop   0x411e3f
  411e73:	pusha  
  411e74:	int    0xbf
  411e76:	hlt    
  411e77:	dec    ecx
  411e78:	repz ret 
  411e7a:	push   eax
  411e7b:	inc    edx
  411e7c:	pop    es
  411e7d:	(bad)  
  411e7e:	push   cs
  411e7f:	sub    edi,DWORD PTR [edx+0x124ae66]
  411e85:	add    esi,DWORD PTR [eax-0x11592753]
  411e8b:	lea    eax,[eax+eiz*4+0x6bf59111]
  411e92:	jo     0x411ef2
  411e94:	lds    edx,FWORD PTR [edi-0x5e7df3b7]
  411e9a:	or     esi,edi
  411e9c:	jns    0x411e61
  411e9e:	jno    0x411ec2
  411ea0:	lahf   
  411ea1:	je     0x411e99
  411ea3:	pop    ss
  411ea4:	pop    sp
  411ea6:	dec    edx
  411ea7:	icebp  
  411ea8:	jmp    0xd359:0xf354edd4
  411eaf:	mov    dl,0xf1
  411eb1:	(bad)  
  411eb3:	out    dx,al
  411eb4:	loope  0x411e99
  411eb6:	push   ss
  411eb7:	je     0x411f0b
  411eb9:	inc    ebx
  411eba:	xchg   edi,eax
  411ebb:	inc    esp
  411ebc:	rol    bh,1
  411ebe:	cmp    BYTE PTR [edi+0x1e],al
  411ec1:	pusha  
  411ec2:	jmp    FWORD PTR [ecx+0xb]
  411ec5:	mov    ah,0xf2
  411ec7:	mov    edx,0xb50c75b9
  411ecc:	or     esp,edi
  411ece:	mov    al,0xe1
  411ed0:	or     dl,BYTE PTR [eax-0x4426418d]
  411ed6:	jno    0x411f4f
  411ed8:	sahf   
  411ed9:	iret   
  411eda:	inc    ecx
  411edb:	or     esi,esi
  411edd:	and    ch,cl
  411edf:	repnz add bl,dh
  411ee2:	mov    ecx,ebx
  411ee4:	xor    ebp,DWORD PTR [esi]
  411ee6:	pop    esp
  411ee7:	inc    edi
  411ee8:	lock sub eax,0x35bb7d90
  411eee:	inc    ebx
  411eef:	and    BYTE PTR [eax-0x2b],al
  411ef2:	sbb    al,0xdd
  411ef4:	adc    eax,0x6fb64966
  411ef9:	sbb    eax,0xd03a057d
  411efe:	sub    al,0xf4
  411f00:	icebp  
  411f01:	(bad)  
  411f02:	jp     0x411f2f
  411f04:	div    BYTE PTR [eax-0x9]
  411f07:	inc    esp
  411f08:	aam    0x30
  411f0a:	push   ebx
  411f0b:	bound  esi,QWORD PTR [ecx+0x367b8802]
  411f11:	es push esp
  411f13:	sub    DWORD PTR [edx+0x7e],esp
  411f16:	mov    bl,0x2d
  411f18:	adc    cl,0xf8
  411f1b:	test   edi,ebp
  411f1d:	and    ebx,DWORD PTR [edi+0x715f7a47]
  411f23:	push   cs
  411f24:	mov    WORD PTR [edx+edi*4+0x71e13ebf],ds
  411f2b:	pusha  
  411f2c:	ins    BYTE PTR es:[edi],dx
  411f2d:	mov    ecx,0x7a0e9fd9
  411f32:	add    ch,ch
  411f34:	sbb    al,0x3c
  411f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f37:	adc    ebx,DWORD PTR [edi]
  411f39:	inc    esi
  411f3a:	add    ebx,edi
  411f3c:	lahf   
  411f3d:	pop    es
  411f3e:	mov    eax,0x42380bb3
  411f43:	and    al,BYTE PTR [edi+0x5a4f099a]
  411f49:	fwait
  411f4a:	sbb    al,0x16
  411f4c:	neg    DWORD PTR [ecx]
  411f4e:	or     BYTE PTR ds:0xf5d6b7ca,dh
  411f54:	xchg   esi,eax
  411f55:	push   cs
  411f56:	loope  0x411f24
  411f58:	inc    esp
  411f59:	fucomi st,st(5)
  411f5b:	xchg   ecx,eax
  411f5c:	dec    esi
  411f5d:	sbb    eax,0xfd86a6b
  411f62:	xchg   esi,eax
  411f63:	sub    cl,BYTE PTR [ebp-0x718800db]
  411f69:	loop   0x411fb9
  411f6b:	data16 jp 0x411f6f
  411f6e:	add    eax,DWORD PTR [ecx]
  411f70:	jl     0x411f9a
  411f72:	sti    
  411f73:	and    esp,DWORD PTR [esi+0x4fb2792f]
  411f79:	sbb    ebp,DWORD PTR [ecx]
  411f7b:	push   ebp
  411f7c:	cmp    al,0xe3
  411f7e:	shl    BYTE PTR [ebx+0x736c7852],0x69
  411f85:	mov    dh,0xa3
  411f87:	inc    edi
  411f88:	jns    0x411f3c
  411f8a:	pop    ebp
  411f8b:	or     edx,DWORD PTR [ecx]
  411f8d:	inc    edx
  411f8e:	test   eax,0x6b9a3517
  411f93:	mov    BYTE PTR [eax],cl
  411f95:	dec    edi
  411f96:	lock sub eax,0x4fc15eb7
  411f9c:	adc    BYTE PTR [esi],ah
  411f9e:	mov    ebx,DWORD PTR [eax+0x729da3ff]
  411fa4:	shr    DWORD PTR [edx+0x6dc6d8d3],cl
  411faa:	pop    ss
  411fab:	xchg   ah,bl
  411fad:	xchg   ebx,eax
  411fae:	loop   0x411f74
  411fb0:	xchg   DWORD PTR es:[esi],esi
  411fb3:	push   esp
  411fb4:	mov    ah,0x21
  411fb6:	ror    BYTE PTR [edi+edi*8-0x54],0x21
  411fbb:	pushf  
  411fbc:	xchg   eax,eax
  411fbe:	pop    edi
  411fbf:	inc    edx
  411fc0:	jne    0x411fa7
  411fc2:	cmc    
  411fc3:	out    0x4a,al
  411fc5:	rcl    ecx,cl
  411fc7:	jns    0x411fa5
  411fc9:	mov    eax,0xa4229286
  411fce:	sub    al,0x14
  411fd0:	sbb    eax,0xe93dc6f8
  411fd5:	imul   cl
  411fd7:	add    ebp,DWORD PTR [edi+0x57]
  411fda:	fist   WORD PTR [edi-0x8031933]
  411fe0:	dec    eax
  411fe1:	mov    bl,0xf9
  411fe3:	dec    esp
  411fe4:	ret    0x756c
  411fe7:	xchg   esi,eax
  411fe8:	nop
  411fe9:	dec    ebx
  411fea:	mov    ebp,eax
  411fec:	fdiv   st,st(0)
  411fee:	add    eax,0xb0ea21ad
  411ff3:	pop    ebx
  411ff4:	call   0x2e5:0xc8111831
  411ffb:	test   DWORD PTR [ecx],0x520ddd65
  412001:	mov    ebx,0x6cd40965
  412006:	out    0xae,eax
  412008:	push   es
  412009:	cmp    dl,dl
  41200b:	pop    ebp
  41200c:	test   dl,0x4b
  41200f:	mov    dl,0x8c
  412011:	push   edx
  412012:	mov    ch,0xda
  412014:	fs in  al,dx
  412016:	and    DWORD PTR [ebp+0x2c687211],ecx
  41201c:	adc    al,0x4a
  41201e:	fld    DWORD PTR [esi+ebp*1]
  412021:	xor    BYTE PTR [eax-0x2f],dl
  412024:	mov    ds:0x5ffe7913,al
  412029:	ffree  st(3)
  41202b:	stos   BYTE PTR es:[edi],al
  41202c:	je     0x412039
  41202e:	adc    al,0x55
  412030:	out    dx,eax
  412031:	xchg   ebx,eax
  412032:	sub    esp,edi
  412034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412035:	dec    ecx
  412036:	sub    DWORD PTR [eax],edi
  412038:	imul   eax,DWORD PTR [edi+0x2a],0xfffffff4
  41203c:	mov    ch,0xf3
  41203e:	mov    dl,0x4a
  412040:	sbb    BYTE PTR [ebx],ah
  412042:	push   esi
  412043:	push   cs
  412044:	add    dh,BYTE PTR [eax]
  412046:	fnstcw WORD PTR [eax]
  412048:	and    BYTE PTR [ebx-0x78],0x4
  41204c:	retf   
  41204d:	ret    
  41204e:	push   eax
  41204f:	lea    edx,[eax+esi*1-0x54]
  412053:	out    0xfe,al
  412055:	cmp    al,BYTE PTR [ecx+0x1f]
  412058:	sahf   
  412059:	and    eax,0x1b6bef65
  41205e:	popa   
  41205f:	stos   BYTE PTR es:[edi],al
  412060:	imul   edx,DWORD PTR [edx],0xffffffca
  412063:	enter  0xda89,0xb9
  412067:	dec    ecx
  412068:	mov    ds,WORD PTR [ecx-0x5ac8710d]
  41206e:	aam    0x1a
  412070:	jg     0x41203f
  412072:	sbb    bh,BYTE PTR [ebx+0x6db6bd6c]
  412078:	dec    ebp
  412079:	mov    cl,0x5
  41207b:	fsub   DWORD PTR ds:0xd3d5c5c0
  412081:	bound  ebp,QWORD PTR [edi]
  412083:	push   ebx
  412084:	js     0x412012
  412086:	xor    eax,0x5aacb8f2
  41208b:	mov    eax,0x43aed7e1
  412090:	nop
  412091:	cli    
  412092:	xchg   DWORD PTR [esi+0x20eee375],ebx
  412098:	mov    bh,0xf3
  41209a:	not    dh
  41209c:	push   ds
  41209d:	lods   al,BYTE PTR ds:[esi]
  41209e:	mov    ds,WORD PTR [edi-0x1204c2f1]
  4120a4:	out    0xc5,al
  4120a6:	cdq    
  4120a7:	pop    ebx
  4120a8:	or     dh,BYTE PTR [ecx-0x18b8660c]
  4120ae:	lea    edx,[edx+0x7601a76d]
  4120b4:	inc    eax
  4120b5:	jl     0x41211a
  4120b7:	push   edx
  4120b8:	retf   
  4120b9:	mov    BYTE PTR [edi+0x22e1df2e],0x89
  4120c0:	jl     0x4120cf
  4120c2:	je     0x4120d0
  4120c4:	aam    0x4e
  4120c6:	lock sbb bh,BYTE PTR [ebx]
  4120c9:	adc    esi,DWORD PTR [ebx-0x746cbb3e]
  4120cf:	jecxz  0x41211a
  4120d1:	inc    esp
  4120d2:	adc    BYTE PTR [ebx],dl
  4120d4:	push   esp
  4120d5:	dec    esi
  4120d6:	scas   eax,DWORD PTR es:[edi]
  4120d7:	inc    ebx
  4120d8:	dec    eax
  4120d9:	mov    dh,0x62
  4120db:	inc    esp
  4120dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120dd:	(bad)  
  4120de:	mov    ah,0x45
  4120e0:	xor    esi,DWORD PTR [eax]
  4120e2:	add    ebx,esp
  4120e4:	fadd   QWORD PTR [eax-0x10]
  4120e7:	xchg   edx,eax
  4120e8:	ds push edx
  4120ea:	test   al,0x4f
  4120ec:	in     eax,dx
  4120ed:	inc    ecx
  4120ee:	push   edx
  4120ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f0:	popf   
  4120f1:	addr16 push ecx
  4120f3:	in     eax,dx
  4120f4:	(bad)  
  4120f5:	xchg   edx,eax
  4120f6:	xchg   edx,eax
  4120f7:	js     0x41209e
  4120f9:	retf   
  4120fa:	cmp    ecx,edi
  4120fc:	mov    dl,0x1f
  4120fe:	cmp    ebp,ebp
  412100:	shr    BYTE PTR [ebx],cl
  412102:	fstp   QWORD PTR [ebx+eiz*8+0xa]
  412106:	fs sub eax,0x461e6dc6
  41210c:	cmp    bp,0xf639
  412111:	gs push eax
  412113:	ins    DWORD PTR es:[edi],dx
  412114:	les    edi,FWORD PTR [esi+0x3e89477a]
  41211a:	pop    DWORD PTR [eax-0x1c]
  41211d:	xchg   esp,eax
  41211e:	cmp    ebx,DWORD PTR [ebp+0xa993667]
  412124:	scas   al,BYTE PTR es:[edi]
  412125:	pop    esi
  412126:	stos   DWORD PTR es:[edi],eax
  412127:	or     esi,DWORD PTR [edi+0x230cc108]
  41212d:	imul   esp,DWORD PTR [esi-0x3],0xed104599
  412134:	sub    eax,0x9c3a32af
  412139:	mov    ch,0x2d
  41213b:	jno    0x412195
  41213d:	xchg   ebp,eax
  41213e:	sti    
  41213f:	lods   al,BYTE PTR ds:[esi]
  412140:	mov    DWORD PTR [esi+0x55cb8b50],ecx
  412146:	xor    DWORD PTR [eax+0x33aed3ef],ebp
  41214c:	das    
  41214d:	(bad)  
  41214e:	ss retf 
  412150:	shl    BYTE PTR [edx-0x759d2ba1],cl
  412156:	je     0x412108
  412158:	pushf  
  412159:	pop    edx
  41215a:	pop    ebp
  41215b:	dec    eax
  41215c:	add    ebx,DWORD PTR [esi]
  41215e:	test   BYTE PTR [edi],dl
  412160:	leave  
  412161:	jp     0x412161
  412163:	loop   0x4121ba
  412165:	jle    0x4121a6
  412167:	inc    edi
  412168:	mov    cl,0xfd
  41216a:	xor    al,0xde
  41216c:	cwde   
  41216d:	lods   al,BYTE PTR ds:[esi]
  41216e:	rol    DWORD PTR [esi],1
  412170:	(bad)  
  412171:	lds    esi,FWORD PTR [esi-0x2479747a]
  412177:	jb     0x4121a7
  412179:	pop    eax
  41217a:	ins    DWORD PTR es:[edi],dx
  41217b:	lfs    ebp,FWORD PTR [eax+0x31]
  41217f:	inc    esp
  412180:	mov    eax,0x2ddc9d56
  412185:	fdiv   QWORD PTR [eax+0x67e865c8]
  41218b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41218c:	repz xor esi,esi
  41218f:	push   esp
  412190:	mov    BYTE PTR [edi],bh
  412192:	mov    dh,0x81
  412194:	(bad)  
  412195:	into   
  412196:	jbe    0x412189
  412198:	out    0xff,eax
  41219a:	repnz mov bl,0x2
  41219d:	popf   
  41219e:	mov    bl,0xfd
  4121a0:	push   ss
  4121a1:	fsub   QWORD PTR [eax-0x4a]
  4121a4:	adc    BYTE PTR [edi+0x28586c32],ah
  4121aa:	call   0x1d50:0xdda3c857
  4121b1:	(bad)  
  4121b3:	fnstsw WORD PTR [edx-0x42f642d5]
  4121b9:	enter  0xb0ed,0x54
  4121bd:	add    DWORD PTR [edi+ecx*1],0x1323651a
  4121c4:	push   ebx
  4121c5:	jns    0x412193
  4121c7:	jae    0x412155
  4121c9:	and    eax,DWORD PTR [eax+ecx*1-0x222ca591]
  4121d0:	mov    edi,0xeb96d48e
  4121d5:	stc    
  4121d6:	dec    eax
  4121d7:	nop
  4121d8:	icebp  
  4121d9:	addr16 dec esi
  4121db:	pop    ds
  4121dc:	repnz mov eax,0xe91d093f
  4121e2:	mov    ch,BYTE PTR gs:[edx-0x78]
  4121e6:	outs   dx,BYTE PTR ds:[esi]
  4121e7:	sub    BYTE PTR [ebx],bl
  4121e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121ea:	ja     0x412261
  4121ec:	sub    DWORD PTR [esi],esi
  4121ee:	pop    ss
  4121ef:	loop   0x4121cc
  4121f1:	fcmovbe st,st(2)
  4121f3:	add    esp,DWORD PTR [esi]
  4121f5:	or     ecx,DWORD PTR [eax-0x23]
  4121f8:	ins    DWORD PTR es:[edi],dx
  4121f9:	div    BYTE PTR [eax]
  4121fb:	(bad)  
  4121fc:	(bad)  
  4121fd:	adc    ecx,DWORD PTR [edx]
  4121ff:	jge    0x412235
  412201:	leave  
  412202:	das    
  412203:	mov    edx,0x479e2097
  412208:	add    DWORD PTR [ebx],eax
  41220a:	and    dh,bl
  41220c:	push   0xd66310d6
  412211:	bsr    edi,ecx
  412214:	jbe    0x412231
  412216:	mov    ecx,0xc4c77f12
  41221b:	push   0x4b3e7a03
  412220:	int3   
  412221:	mov    eax,ds:0xad7275a4
  412226:	iret   
  412227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412228:	fsub   DWORD PTR [eax]
  41222a:	fisub  WORD PTR [ebx-0x6f]
  41222d:	call   DWORD PTR [ebp-0x610db390]
  412233:	push   ecx
  412234:	sti    
  412235:	fild   DWORD PTR [ecx+0x4e4c4e6]
  41223b:	jmp    0xf2985847
  412240:	add    BYTE PTR [esi+esi*2],ah
  412243:	mov    ebx,0xe2fdd63b
  412248:	sti    
  412249:	push   ebp
  41224a:	js     0x41226a
  41224c:	cmp    ebp,eax
  41224e:	jmp    0x45144873
  412253:	popa   
  412254:	fsub   st,st(2)
  412256:	rcl    esi,0x1d
  412259:	jg     0x4122d7
  41225b:	shl    BYTE PTR [esi-0x37],cl
  41225e:	jp     0x412277
  412260:	adc    edi,DWORD PTR [ebx+0x27099845]
  412266:	mov    bh,0x80
  412268:	push   esi
  412269:	dec    ebp
  41226a:	(bad)  
  41226b:	loopne 0x41220f
  41226d:	retf   
  41226e:	rcr    DWORD PTR [esi+0x33ac7b3f],cl
  412274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412275:	stos   BYTE PTR es:[edi],al
  412276:	sbb    al,0x2
  412278:	xchg   DWORD PTR [edi+ebx*2+0x68],edi
  41227c:	xchg   ecx,eax
  41227d:	repz dec ecx
  41227f:	repnz in eax,0x70
  412282:	mov    ds:0x5be38ead,al
  412287:	mov    bl,0x2f
  412289:	pushf  
  41228a:	(bad)  
  41228c:	mov    ebp,DWORD PTR [esp+eax*1-0x5a]
  412290:	out    0x3d,al
  412292:	pop    edx
  412293:	mov    ebx,0xca34b1ee
  412298:	into   
  412299:	ret    
  41229a:	push   edi
  41229b:	ret    0x40c7
  41229e:	push   0x274eeaf1
  4122a3:	xchg   ecx,eax
  4122a4:	in     al,dx
  4122a5:	push   ss
  4122a6:	xchg   esi,eax
  4122a7:	pop    edx
  4122a8:	xchg   esp,eax
  4122a9:	xor    BYTE PTR [edi],bl
  4122ab:	imul   eax,DWORD PTR [ecx-0x7fcea1e5],0x6f
  4122b2:	inc    DWORD PTR fs:[ecx]
  4122b5:	xchg   esp,eax
  4122b6:	add    cl,BYTE PTR [edi+0x62357b73]
  4122bc:	jmp    0x412276
  4122be:	jo     0x4122b6
  4122c0:	pop    edi
  4122c1:	mov    dh,0x9f
  4122c3:	das    
  4122c4:	lods   al,BYTE PTR ds:[esi]
  4122c5:	xchg   BYTE PTR [ebp+0x54],cl
  4122c8:	mov    bl,0x19
  4122ca:	jl     0x41227b
  4122cc:	imul   esi,DWORD PTR [edi-0x4771a682],0x1d
  4122d3:	mov    bh,BYTE PTR [edi+eiz*2-0x280628f6]
  4122da:	out    0x22,al
  4122dc:	sti    
  4122dd:	pop    ebp
  4122de:	mov    edi,0xd851cb63
  4122e3:	data16 arpl WORD PTR [eax+ebx*8+0x4a48cd20],bx
  4122eb:	jmp    0xc961:0x1231d96
  4122f2:	or     edx,DWORD PTR [ecx+0x5961248b]
  4122f8:	out    0x16,al
  4122fa:	xlat   BYTE PTR ds:[ebx]
  4122fb:	add    BYTE PTR [eax-0x75],bl
  4122fe:	xor    cl,bl
  412300:	out    dx,eax
  412301:	mov    ds:0x93ddc319,eax
  412306:	mov    al,0xf1
  412308:	sahf   
  412309:	jne    0x4122a8
  41230b:	xor    DWORD PTR [edx],esp
  41230d:	and    eax,0x621e94fc
  412312:	std    
  412313:	out    0x5a,al
  412315:	fdiv   st(0),st
  412317:	iret   
  412318:	in     al,0x47
  41231a:	imul   ecx,eax,0xa0949fd9
  412320:	scas   eax,DWORD PTR es:[edi]
  412321:	into   
  412322:	das    
  412323:	scas   eax,DWORD PTR es:[edi]
  412324:	cld    
  412325:	scas   eax,DWORD PTR es:[edi]
  412326:	(bad)  
  412328:	mov    ds,WORD PTR [ecx+0x4f02817e]
  41232e:	sbb    al,0xe0
  412330:	or     dl,BYTE PTR [ebx]
  412332:	dec    eax
  412333:	ret    
  412334:	fsubr  QWORD PTR [eax]
  412336:	push   0xffffff99
  412338:	xor    al,0x1f
  41233a:	fidivr WORD PTR [ebp+ebp*2+0x5cb15430]
  412341:	cmp    al,BYTE PTR [ecx+0x18]
  412344:	mov    dh,0x56
  412346:	mov    eax,0x5e88915a
  41234b:	mov    cl,0x71
  41234d:	pop    ebx
  41234e:	lds    esi,FWORD PTR [esi]
  412350:	and    edi,edi
  412352:	xor    bh,BYTE PTR [edx-0x40]
  412355:	add    al,0xb1
  412357:	out    dx,al
  412358:	repnz fild DWORD PTR [ebp+0x5b]
  41235c:	pop    es
  41235d:	cdq    
  41235e:	or     ebp,DWORD PTR [edx+0x2518cf44]
  412364:	add    al,0xf
  412366:	mov    esi,DWORD PTR [ecx+eiz*1]
  412369:	outs   dx,DWORD PTR ds:[esi]
  41236a:	mov    al,ds:0x62e50af2
  41236f:	fld    st(1)
  412371:	sbb    eax,0xb9c51195
  412376:	mov    eax,ds:0xa0994718
  41237b:	xor    DWORD PTR [esi+0x3e],0x71
  41237f:	lahf   
  412380:	jge    0x4123fa
  412382:	xlat   BYTE PTR ds:[ebx]
  412383:	sti    
  412384:	sub    al,0x34
  412386:	dec    esp
  412387:	ret    0x38bb
  41238a:	mov    bh,0x27
  41238c:	jg     0x41238c
  41238e:	jge    0x4123ec
  412390:	leave  
  412391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412392:	inc    ecx
  412393:	out    0x9e,al
  412395:	into   
  412396:	(bad)  [ecx]
  412398:	jns    0x412321
  41239a:	shl    DWORD PTR [esi+0x3d],1
  41239d:	div    DWORD PTR [ebx+0x36]
  4123a0:	in     eax,dx
  4123a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a2:	mov    ebx,0xcda4ffe1
  4123a7:	mov    ah,0x53
  4123a9:	push   ebp
  4123aa:	cmp    al,0x22
  4123ad:	mov    bl,0xb8
  4123af:	pop    ss
  4123b0:	nop
  4123b1:	xchg   edi,eax
  4123b2:	xchg   esi,eax
  4123b3:	jne    0x41240c
  4123b5:	je     0x412422
  4123b7:	bound  esp,QWORD PTR [edi]
  4123b9:	add    bl,BYTE PTR [eax+0x6cecb038]
  4123bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123c0:	inc    ecx
  4123c1:	xor    al,0x9e
  4123c3:	push   0xffffff82
  4123c5:	or     DWORD PTR [ebx+ebp*2],ebx
  4123c8:	mov    al,ds:0x453a1f1a
  4123cd:	fdivr  st(6),st
  4123cf:	adc    ah,BYTE PTR [eax+edx*4]
  4123d2:	cs das 
  4123d4:	out    dx,eax
  4123d5:	mov    ds:0x3fb6a2d7,eax
  4123da:	mov    dl,0xb8
  4123dc:	retf   
  4123dd:	jb     0x4123c2
  4123df:	or     edx,DWORD PTR [ecx-0x69]
  4123e2:	ins    DWORD PTR es:[edi],dx
  4123e3:	cvtps2pi mm2,QWORD PTR [eax-0x50]
  4123e7:	xor    al,0x42
  4123e9:	loope  0x4123b6
  4123eb:	aas    
  4123ec:	pop    edx
  4123ed:	mov    eax,ds:0xc9710c0d
  4123f2:	inc    ebx
  4123f3:	repz repz xor ah,BYTE PTR [ecx-0xb]
  4123f8:	sar    BYTE PTR [edx-0x55adad68],1
  4123fe:	(bad)  
  4123ff:	adc    edi,DWORD PTR [ebx+0x27d794ba]
  412405:	mov    esi,0x85c13bbc
  41240a:	pop    ebp
  41240b:	mov    BYTE PTR [esi-0x765a38b4],cl
  412411:	hlt    
  412412:	dec    esp
  412413:	or     esp,DWORD PTR [eax-0x12]
  412416:	mov    al,ds:0x813ae2da
  41241b:	mov    edi,0x514046e7
  412420:	cmp    esi,DWORD PTR [ecx-0x1f875f17]
  412426:	and    DWORD PTR [ebp+eiz*1-0x92c53fc],ebp
  41242d:	mov    bh,0xa6
  41242f:	mov    edi,0x9c0a86cd
  412434:	daa    
  412435:	mov    edx,0x70c900c4
  41243a:	(bad)  
  41243b:	push   esp
  41243c:	dec    eax
  41243d:	xor    ch,BYTE PTR [ebx+0x56]
  412440:	rol    DWORD PTR [edx-0x26938936],0xa7
  412447:	mov    ecx,0xf63b21fa
  41244c:	dec    ecx
  41244d:	push   esp
  41244e:	mov    ebx,0xf6933eb8
  412453:	mov    BYTE PTR [edi+0x1a],dl
  412456:	and    edx,DWORD PTR [ebx]
  412458:	lock add ah,BYTE PTR [edi+0x5d]
  41245c:	fstp   QWORD PTR [ecx+0x15d69f9b]
  412462:	mov    esi,eax
  412464:	in     eax,0x73
  412466:	pop    edx
  412467:	pop    ds
  412468:	mov    ch,0xb5
  41246a:	sti    
  41246b:	leave  
  41246c:	push   eax
  41246d:	repz scas al,BYTE PTR es:[edi]
  41246f:	sbb    cl,bl
  412471:	mov    edx,DWORD PTR [ecx]
  412473:	or     al,0x2d
  412475:	repz mov dl,0xf1
  412478:	and    DWORD PTR [ebx+0xe647cbd],ebx
  41247e:	bound  edx,QWORD PTR [esi+eax*8-0x21e30a0c]
  412485:	mov    ah,0xff
  412487:	push   ss
  412488:	and    DWORD PTR [edx-0x126893eb],edx
  41248e:	cli    
  41248f:	push   ds
  412490:	pop    es
  412491:	test   DWORD PTR [edx],0x259aaa8c
  412497:	nop
  412498:	(bad)  
  412499:	xchg   esi,eax
  41249a:	xor    dh,bl
  41249c:	retf   0x40c0
  41249f:	cmc    
  4124a0:	add    ch,BYTE PTR [esp+edx*2]
  4124a3:	rcr    DWORD PTR [edx],cl
  4124a5:	inc    ebx
  4124a6:	ret    0x4223
  4124a9:	cwde   
  4124aa:	push   ecx
  4124ab:	nop
  4124ac:	es test al,0xd6
  4124af:	es dec ecx
  4124b1:	jnp    0x412508
  4124b3:	fidivr WORD PTR [esi]
  4124b5:	enter  0xcdb6,0x10
  4124b9:	mov    eax,0x7aedd931
  4124be:	mov    ecx,0xa907deb5
  4124c3:	sbb    al,0xb7
  4124c5:	sbb    DWORD PTR [ebx+eax*2-0x98e6d00],0x1859e3f3
  4124d0:	loop   0x412492
  4124d2:	xor    ebx,DWORD PTR [edx-0x68]
  4124d5:	sti    
  4124d6:	fild   WORD PTR [esi+0x6254858]
  4124dc:	jns    0x41246f
  4124de:	push   0xffffff9a
  4124e0:	pop    ds
  4124e1:	xchg   esp,eax
  4124e2:	std    
  4124e3:	jnp    0x412528
  4124e5:	test   edx,ebx
  4124e7:	inc    ebp
  4124e8:	ds push ebp
  4124ea:	iret   
  4124eb:	jnp    0x4124b1
  4124ed:	and    ecx,DWORD PTR [ebp-0x59b3d9d7]
  4124f3:	cmp    eax,0x9ee46f8e
  4124f8:	fcmovb st,st(2)
  4124fa:	loop   0x412529
  4124fc:	jmp    0xb9f6435a
  412501:	std    
  412502:	sbb    BYTE PTR [esi+eax*1-0x4ce35d96],bl
  412509:	fisttp WORD PTR [esi+0x71324d43]
  41250f:	cs (bad) 
  412511:	lods   al,BYTE PTR ds:[esi]
  412512:	cmp    BYTE PTR [edx],ah
  412514:	sbb    ecx,ebp
  412516:	(bad)  
  412517:	(bad)  
  412518:	jecxz  0x41251d
  41251a:	in     eax,0xbe
  41251c:	ret    
  41251d:	mov    bl,cl
  41251f:	jo     0x412574
  412521:	aam    0x9d
  412523:	inc    esp
  412524:	clc    
  412525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412526:	xchg   esi,eax
  412527:	cmp    DWORD PTR [edx],eax
  412529:	and    BYTE PTR [ebx+eax*1-0xa2c18fc],0xbf
  412531:	es (bad) 
  412533:	or     ecx,esp
  412535:	bound  ebp,QWORD PTR [eax-0x2d4b25af]
  41253b:	xchg   BYTE PTR ds:0xe1f68bf4,cl
  412541:	cmc    
  412542:	aam    0x82
  412544:	sahf   
  412545:	stc    
  412546:	ret    
  412547:	xchg   ebx,eax
  412548:	jl     0x41257c
  41254a:	inc    ebx
  41254b:	jno    0x4124ed
  41254d:	xor    dl,dl
  41254f:	inc    ebp
  412550:	rcl    al,1
  412552:	sub    bl,dl
  412554:	or     ecx,DWORD PTR [eax]
  412556:	js     0x4124ec
  412558:	inc    edi
  412559:	sbb    eax,0x9997b20
  41255e:	or     eax,0xce9ba23d
  412563:	and    edi,DWORD PTR [eax+0xf]
  412566:	ins    DWORD PTR es:[edi],dx
  412567:	(bad)  
  412568:	ds mov dl,0x7f
  41256b:	bound  ebp,QWORD PTR [ebx+0x45]
  41256e:	les    ecx,FWORD PTR [ebp+edx*2-0x58]
  412572:	xor    ebx,ebp
  412574:	loopne 0x412527
  412576:	mov    bl,0x40
  412578:	sub    bh,BYTE PTR [ecx+0x54]
  41257b:	rcl    DWORD PTR cs:[ecx+0x249d4df4],1
  412582:	inc    edi
  412583:	push   eax
  412584:	(bad)  
  412585:	(bad)  
  412586:	jne    0x4125d5
  412588:	xchg   edi,eax
  412589:	adc    al,0xe0
  41258b:	dec    edx
  41258c:	test   eax,0x320394e0
  412591:	ja     0x4125d7
  412593:	(bad)  
  412594:	jbe    0x4125de
  412596:	pop    es
  412597:	(bad)
  41259c:	xor    al,0x47
  41259e:	inc    eax
  41259f:	js     0x41260a
  4125a1:	push   ebp
  4125a2:	out    dx,eax
  4125a3:	int    0xa1
  4125a5:	in     al,0x2b
  4125a7:	in     al,dx
  4125a8:	dec    eax
  4125a9:	xor    al,ch
  4125ab:	test   DWORD PTR [edx+eax*2+0x6d8e88be],0x88a78c9b
  4125b6:	jne    0x4125d6
  4125b8:	push   cs
  4125b9:	push   edi
  4125ba:	pop    edi
  4125bb:	xchg   edi,eax
  4125bc:	aad    0x19
  4125be:	sub    eax,0x33afd3e4
  4125c3:	test   DWORD PTR [edi],0x6929fc3c
  4125c9:	stc    
  4125ca:	xlat   BYTE PTR ds:[ebx]
  4125cb:	push   ss
  4125cc:	outs   dx,BYTE PTR ds:[esi]
  4125cd:	ror    DWORD PTR [eax],0xb2
  4125d0:	test   eax,0x9641bf41
  4125d5:	leave  
  4125d6:	mov    fs,WORD PTR ds:0x1f79e2dd
  4125dc:	xchg   BYTE PTR [ecx-0x6e41a88a],ch
  4125e2:	pop    ss
  4125e3:	dec    edx
  4125e4:	pop    esi
  4125e5:	in     eax,dx
  4125e6:	loope  0x4125cf
  4125e8:	jp     0x4125d1
  4125ea:	aaa    
  4125eb:	push   cs
  4125ec:	xchg   esp,eax
  4125ed:	scas   al,BYTE PTR es:[edi]
  4125ee:	dec    eax
  4125ef:	sbb    ecx,DWORD PTR [ebp+0x49]
  4125f2:	xor    eax,0x1994c4db
  4125f7:	push   edi
  4125f8:	pop    ebp
  4125f9:	xchg   ebp,edx
  4125fb:	mov    ch,0x8d
  4125fd:	inc    eax
  4125fe:	dec    esp
  4125ff:	jnp    0xbc9abea3
  412605:	mov    WORD PTR [ebp+ecx*2-0x2917bfd3],ss
  41260c:	push   0xffffffbf
  41260e:	not    ecx
  412610:	rcr    dl,cl
  412612:	lods   al,BYTE PTR ds:[esi]
  412613:	xor    DWORD PTR [ebp+0x6dcece99],esi
  412619:	clc    
  41261a:	xor    BYTE PTR [edi],dl
  41261c:	xchg   ecx,eax
  41261d:	cmp    edi,eax
  41261f:	sbb    eax,0x1bd28320
  412624:	ror    al,0x7a
  412627:	cmc    
  412628:	test   DWORD PTR [edi-0x8],edx
  41262b:	push   0x4c
  41262d:	xor    eax,0x30df59c6
  412632:	ror    BYTE PTR [edi],cl
  412634:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412636:	(bad)  
  412637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412638:	mov    WORD PTR [ebx],ds
  41263a:	mov    ebp,0xa129a44c
  41263f:	in     al,dx
  412640:	dec    ecx
  412641:	lods   eax,DWORD PTR ds:[esi]
  412642:	push   ds
  412643:	imul   esi,DWORD PTR [esi+0x3f481d44],0xfc52d8d7
  41264d:	sbb    bh,BYTE PTR [ebp-0x2f000d73]
  412653:	dec    ecx
  412654:	jmp    0x412668
  412656:	dec    ecx
  412657:	mov    dl,0xaf
  412659:	arpl   WORD PTR [edi],cx
  41265b:	xlat   BYTE PTR ds:[ebx]
  41265c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41265d:	mov    ds:0x8d43aad2,al
  412662:	or     ch,ah
  412664:	and    esi,eax
  412666:	sub    al,BYTE PTR [ebp+edx*4+0x20e8f85d]
  41266d:	adc    edx,DWORD PTR [edi+esi*2+0x13ef8553]
  412674:	cdq    
  412675:	add    esp,ecx
  412677:	and    DWORD PTR [ebp-0x2b],esp
  41267a:	jae    0x4126e2
  41267c:	ss dec ebp
  41267e:	and    bl,ah
  412680:	mov    ds:0x8a5f80ec,al
  412685:	xchg   esp,eax
  412686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412687:	inc    esp
  412688:	sub    ecx,esp
  41268a:	inc    esi
  41268b:	dec    esi
  41268c:	xchg   esp,eax
  41268d:	addr16 cdq 
  41268f:	or     eax,0xd105317b
  412694:	add    bl,BYTE PTR [esi+ecx*4+0x2b522da9]
  41269b:	rcl    bh,cl
  41269d:	xchg   ebx,eax
  41269e:	mov    ah,0xeb
  4126a0:	xor    eax,0x2b0f8113
  4126a5:	data16 (bad) [ecx+0x64]
  4126a9:	add    al,0x9d
  4126ab:	les    esi,FWORD PTR [ebp+0xfad7d9c]
  4126b1:	aaa    
  4126b2:	rcr    DWORD PTR ds:0x39fb318,0xf9
  4126b9:	test   BYTE PTR [eax],dh
  4126bb:	test   al,0xb2
  4126bd:	sub    DWORD PTR [edi],esp
  4126bf:	push   esi
  4126c0:	push   esp
  4126c1:	inc    esi
  4126c2:	dec    esi
  4126c3:	jmp    0x3e6f9e9c
  4126c8:	imul   ecx,DWORD PTR [eax+0x3a],0xffffffc0
  4126cc:	mov    bh,BYTE PTR [edi+0x64]
  4126cf:	retf   
  4126d0:	xchg   esp,eax
  4126d1:	jnp    0x41269a
  4126d3:	sahf   
  4126d4:	add    DWORD PTR [eax],0x200eaba5
  4126da:	scas   eax,DWORD PTR es:[edi]
  4126db:	imul   edi,DWORD PTR ds:0x1e5caa6b,0x20
  4126e2:	retf   
  4126e3:	inc    ecx
  4126e4:	cmc    
  4126e5:	sbb    al,0xb
  4126e7:	cdq    
  4126e8:	popf   
  4126e9:	and    al,BYTE PTR [esi]
  4126eb:	fcomp  QWORD PTR [edx+0xd]
  4126ee:	push   edi
  4126ef:	mov    dl,0x8c
  4126f1:	imul   esp,DWORD PTR [edx],0x800331ca
  4126f7:	call   0x5595:0xc3623d1a
  4126fe:	jno    0x4126b9
  412700:	or     edi,DWORD PTR [eax]
  412702:	popf   
  412703:	mov    eax,0x187df188
  412708:	mov    edi,esi
  41270a:	push   edi
  41270b:	lds    ecx,FWORD PTR [ebx+0x4f62d394]
  412711:	imul   edi,DWORD PTR es:[edx+0x122689fd],0x2
  412719:	outs   dx,DWORD PTR ds:[esi]
  41271a:	int    0xed
  41271c:	inc    ebx
  41271d:	pop    ds
  41271e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41271f:	push   ds
  412720:	push   ecx
  412721:	xchg   ch,bh
  412723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412724:	cmp    ecx,DWORD PTR [edx+edx*8+0x6a]
  412728:	cs push eax
  41272a:	call   0x6c3dcbac
  41272f:	pop    ecx
  412730:	aas    
  412731:	rol    DWORD PTR [edx],0x88
  412734:	xlat   BYTE PTR ds:[ebx]
  412735:	rol    BYTE PTR gs:0xe75723a0,1
  41273c:	jno    0x4126db
  41273e:	prefetchwt1 BYTE PTR [esi+edi*1+0x1f5312]
  412746:	pop    ss
  412747:	sbb    edx,eax
  412749:	mov    ebp,0xf1cefb9
  41274e:	push   edi
  41274f:	jns    0x4126d2
  412751:	pop    ebp
  412752:	js     0x4127cf
  412754:	imul   esp,DWORD PTR [edi+0x608eaa0b],0x7c
  41275b:	pop    ebp
  41275c:	aad    0x47
  41275e:	clc    
  41275f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412760:	mov    DWORD PTR [ebx+0x37687856],edx
  412766:	rcr    edi,cl
  412768:	je     0x412711
  41276a:	cli    
  41276b:	mov    DWORD PTR [ebx],ecx
  41276d:	in     eax,dx
  41276e:	pop    ss
  41276f:	popf   
  412770:	in     al,0xeb
  412772:	ins    DWORD PTR es:[edi],dx
  412773:	iret   
  412774:	mov    ecx,0xb0be56b2
  412779:	sub    edi,DWORD PTR [ebx+0x1a256b7]
  41277f:	imul   ebx,edi,0x6e47d8f5
  412785:	mov    cl,0xbb
  412787:	popa   
  412788:	push   eax
  412789:	xor    eax,0x602ef0
  41278e:	in     al,0x6a
  412790:	retf   
  412791:	inc    bh
  412793:	out    0x79,eax
  412795:	(bad)  
  412796:	xor    edi,DWORD PTR ds:0xffd69d14
  41279c:	int    0xec
  41279e:	jle    0x74ceb3e8
  4127a4:	add    bh,BYTE PTR [edi+0x5b3be96]
  4127aa:	call   0x1aa:0xe2ce723a
  4127b1:	or     BYTE PTR [esp+eax*1-0xc],dh
  4127b5:	sbb    DWORD PTR [ebx],eax
  4127b7:	inc    ecx
  4127b8:	xor    DWORD PTR [eax],esp
  4127ba:	add    al,0x6c
  4127bc:	dec    edi
  4127bd:	jns    0x41279a
  4127bf:	mov    BYTE PTR [eax],dl
  4127c1:	cli    
  4127c2:	jle    0x41277b
  4127c4:	xor    al,BYTE PTR [ecx+0x2c206975]
  4127ca:	fdiv   QWORD PTR [edi-0x579ef1a7]
  4127d0:	jmp    0x6f09faac
  4127d5:	in     al,0x8e
  4127d7:	sub    al,0x25
  4127d9:	dec    edx
  4127da:	aad    0xf9
  4127dc:	xor    edx,edx
  4127de:	cmp    bl,BYTE PTR [eax-0x6c]
  4127e1:	push   edi
  4127e2:	(bad)  
  4127e3:	cmp    BYTE PTR ds:0x3514c387,bh
  4127e9:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127eb:	daa    
  4127ec:	in     al,0x3e
  4127ee:	adc    ebx,DWORD PTR [edi+0x4e67a562]
  4127f4:	pushf  
  4127f5:	hlt    
  4127f6:	sbb    dh,cl
  4127f8:	mov    esp,0x20287324
  4127fd:	xor    BYTE PTR [edi-0x5a25c954],al
  412803:	adc    cl,cl
  412805:	retf   0xfe20
  412808:	jmp    0x201638f2
  41280d:	ins    DWORD PTR es:[edi],dx
  41280e:	js     0x412849
  412810:	mov    DWORD PTR [edx],edi
  412812:	test   bl,ch
  412814:	cwde   
  412815:	dec    esi
  412816:	add    DWORD PTR [ebp-0x29],eax
  412819:	int    0x8a
  41281b:	mov    eax,ds:0x6e362ac4
  412820:	pop    esp
  412821:	mov    dh,dl
  412823:	add    DWORD PTR [ecx-0x72543aa6],eax
  412829:	add    al,0x65
  41282b:	mov    bl,0x5d
  41282d:	fisub  DWORD PTR [ebx+edi*8+0x71]
  412831:	add    eax,DWORD PTR [edx]
  412833:	call   0x7749:0x1ac0083c
  41283a:	mov    ebp,0xa411b078
  41283f:	repz out 0xf9,eax
  412842:	add    DWORD PTR [esi],edi
  412844:	adc    eax,DWORD PTR [eax-0x52]
  412847:	out    0x76,eax
  412849:	fnstenv [ebx-0x34]
  41284c:	jne    0x4127e5
  41284e:	pop    ebp
  41284f:	jl     0x412813
  412851:	cvttps2pi mm5,QWORD PTR [eax]
  412854:	push   edi
  412855:	jge    0x41289f
  412857:	cmp    ch,BYTE PTR [edx]
  412859:	mov    DWORD PTR [ecx],0x59e5803c
  41285f:	mov    al,0x2
  412861:	push   esi
  412862:	bound  ebx,QWORD PTR [esi+0x17f79914]
  412868:	call   0x6228:0x4f7dbd67
  41286f:	xchg   edx,eax
  412870:	stos   DWORD PTR es:[edi],eax
  412871:	into   
  412872:	mov    ebp,0xe9c2a6f9
  412877:	and    ebp,DWORD PTR [ecx]
  412879:	xor    edx,esp
  41287b:	scas   al,BYTE PTR es:[edi]
  41287c:	push   ss
  41287d:	sbb    BYTE PTR [ebx+0x216e90bf],ch
  412883:	or     BYTE PTR [edx-0x28],dh
  412886:	xor    al,0xe5
  412888:	xchg   edi,eax
  412889:	std    
  41288a:	out    dx,al
  41288b:	push   edi
  41288c:	icebp  
  41288d:	pop    esp
  41288e:	bound  esp,QWORD PTR [esi]
  412890:	test   al,0xf3
  412892:	into   
  412893:	mov    esi,DWORD PTR [eax-0x69]
  412896:	in     al,dx
  412897:	inc    esi
  412898:	sbb    ebx,DWORD PTR [edi-0x19]
  41289b:	jmp    0x412904
  41289d:	scas   al,BYTE PTR es:[edi]
  41289e:	jecxz  0x41282f
  4128a0:	add    al,0x19
  4128a2:	dec    ecx
  4128a3:	push   esi
  4128a4:	shl    DWORD PTR [eax-0x4a],0x79
  4128a8:	ss and al,0xe3
  4128ab:	xchg   ecx,eax
  4128ac:	bound  eax,QWORD PTR [ebx]
  4128ae:	ror    BYTE PTR [ebx],cl
  4128b0:	inc    ebp
  4128b1:	ret    0xeddf
  4128b4:	dec    esp
  4128b5:	adc    al,dl
  4128b7:	pop    ds
  4128b8:	pop    ebx
  4128b9:	ret    
  4128ba:	adc    BYTE PTR [edx],bl
  4128bc:	data16 sbb al,0xaf
  4128bf:	xor    bh,0x89
  4128c2:	aad    0xa6
  4128c4:	addr16 mov al,0x68
  4128c7:	xor    bh,dh
  4128c9:	pop    ds
  4128ca:	fsub   QWORD PTR [eax]
  4128cc:	repz sbb ebp,0xd80e3cce
  4128d3:	mov    ah,0x0
  4128d5:	ja     0x412931
  4128d7:	sbb    DWORD PTR [ebx],esi
  4128d9:	pop    esi
  4128da:	and    eax,0x90eb1b0f
  4128df:	pop    edx
  4128e0:	push   cs
  4128e1:	js     0x412882
  4128e3:	cld    
  4128e4:	ret    
  4128e5:	fmul   DWORD PTR [edx-0x26]
  4128e8:	stos   BYTE PTR es:[edi],al
  4128e9:	jno    0x4128eb
  4128eb:	cmp    edi,DWORD PTR [ecx+ebp*1]
  4128ee:	and    al,0xb6
  4128f0:	sbb    al,0x6c
  4128f2:	out    dx,eax
  4128f3:	push   ecx
  4128f4:	ins    BYTE PTR es:[edi],dx
  4128f5:	test   DWORD PTR [ebx-0x1d],ebx
  4128f8:	xor    al,0xa7
  4128fa:	cmp    bh,al
  4128fc:	dec    eax
  4128fd:	repz scas eax,DWORD PTR es:[edi]
  4128ff:	ja     0x41290d
  412901:	(bad)  
  412902:	stos   DWORD PTR es:[edi],eax
  412903:	mov    dh,bh
  412905:	or     BYTE PTR [ebx-0xe],bl
  412908:	scas   eax,DWORD PTR es:[edi]
  412909:	sbb    BYTE PTR [ebx+0x249e57b2],dh
  41290f:	stc    
  412910:	push   ebp
  412911:	iret   
  412912:	sub    al,0x69
  412914:	push   edx
  412915:	(bad)  
  412916:	das    
  412917:	sahf   
  412918:	ins    DWORD PTR es:[edi],dx
  412919:	pop    esi
  41291a:	push   edx
  41291b:	ds ja  0x412921
  41291e:	and    BYTE PTR [ecx],al
  412920:	xchg   esp,eax
  412921:	adc    eax,DWORD PTR [eax-0x75]
  412924:	imul   ebx,ecx,0x28
  412927:	aas    
  412928:	(bad)  
  412929:	stc    
  41292a:	shl    ecx,0xcc
  41292d:	jmp    0x4128c0
  41292f:	lods   al,BYTE PTR ds:[esi]
  412930:	jae    0x4128c7
  412932:	mov    gs,edx
  412934:	cdq    
  412935:	div    BYTE PTR [esi-0x7713e0d9]
  41293b:	retf   0x736
  41293e:	stos   DWORD PTR es:[edi],eax
  41293f:	mov    cl,0xde
  412941:	xchg   ebp,eax
  412942:	jp     0x412976
  412944:	sahf   
  412945:	jns    0x412987
  412947:	aas    
  412948:	mov    ds:0xf9679a3d,al
  41294d:	push   edi
  41294e:	in     eax,dx
  41294f:	shl    DWORD PTR [edi],cl
  412951:	fistp  WORD PTR [ebp+0xdfa51d1]
  412957:	xchg   edx,eax
  412958:	loopne 0x4128de
  41295a:	push   ebx
  41295b:	xor    ch,BYTE PTR [ecx-0x51f32983]
  412961:	das    
  412962:	dec    ebx
  412963:	mov    al,ds:0x99964d7b
  412968:	pusha  
  412969:	(bad)  
  41296a:	(bad)  
  41296b:	jb     0x41291b
  41296d:	jnp    0x4129a8
  41296f:	pop    eax
  412970:	mov    DWORD PTR [esi-0x4f],0x5ac1fc8d
  412977:	dec    ecx
  412978:	std    
  412979:	adc    edx,DWORD PTR [esi+eiz*8+0x74c9555f]
  412980:	aaa    
  412981:	xchg   esi,eax
  412982:	fcomip st,st(4)
  412984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412985:	loope  0x4129d9
  412987:	aas    
  412988:	pop    edx
  412989:	xlat   BYTE PTR ds:[ebx]
  41298a:	cmp    ebx,esi
  41298c:	adc    esi,esp
  41298e:	pop    ebx
  41298f:	inc    ebp
  412990:	push   cs
  412991:	mov    eax,ds:0x2db6e627
  412996:	jae    0x41294a
  412998:	int3   
  412999:	inc    edi
  41299a:	mov    ch,0xee
  41299c:	add    ah,BYTE PTR [ebx+eax*2+0x4116ac9f]
  4129a3:	arpl   cx,sp
  4129a5:	jae    0x412a11
  4129a7:	imul   ebx,DWORD PTR [ebx+ecx*2+0xd],0x35
  4129ac:	ins    DWORD PTR es:[edi],dx
  4129ad:	mov    ds:0x377cf3b7,al
  4129b2:	cmp    DWORD PTR [edx+0x38],ebp
  4129b5:	mov    ah,0x6
  4129b7:	imul   ebp
  4129b9:	sahf   
  4129ba:	pop    ss
  4129bb:	add    DWORD PTR [eax],0x3a023a4d
  4129c1:	push   ds
  4129c2:	data16 sub BYTE PTR [ecx+0x7e3ac464],0x77
  4129ca:	adc    DWORD PTR [esp+edx*2-0xf878ce8],edx
  4129d1:	sbb    ecx,esp
  4129d3:	and    BYTE PTR ds:0xa6c60c1f,ah
  4129d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129da:	xor    eax,0x522e6589
  4129df:	enter  0xeb89,0x89
  4129e3:	adc    DWORD PTR [ecx-0x54],ecx
  4129e6:	mov    ebx,edx
  4129e8:	stos   BYTE PTR es:[edi],al
  4129e9:	addr16 aad 0x1
  4129ec:	aas    
  4129ed:	add    al,0x98
  4129ef:	push   eax
  4129f0:	arpl   WORD PTR [ebx+eiz*8-0x3fb79453],dx
  4129f7:	cmp    eax,0xd6eb87f1
  4129fc:	mov    esi,0xd50804ff
  412a01:	pop    ebx
  412a02:	xchg   DWORD PTR [ecx-0x2c],edi
  412a05:	in     al,0xed
  412a07:	aam    0x98
  412a09:	adc    eax,0x24d6eb0f
  412a0e:	popf   
  412a0f:	call   0x29a4:0xcdf2a84
  412a16:	or     al,0x61
  412a18:	outs   dx,BYTE PTR ds:[esi]
  412a19:	jo     0x4129c9
  412a1b:	int    0x81
  412a1d:	sub    BYTE PTR [esi+0x3f],al
  412a20:	or     bl,dh
  412a22:	pop    esi
  412a23:	(bad)  [edx]
  412a25:	std    
  412a26:	sbb    eax,0x8c3b43b0
  412a2b:	(bad)  
  412a2c:	icebp  
  412a2d:	mov    ebp,ecx
  412a2f:	leave  
  412a30:	loopne 0x412aaa
  412a32:	(bad)  
  412a33:	retf   0xa5c4
  412a36:	inc    DWORD PTR [ebp+0x6195ccda]
  412a3c:	das    
  412a3d:	add    eax,0xdc445109
  412a42:	shl    bh,cl
  412a44:	in     eax,0xb5
  412a46:	fs adc eax,0x722180dc
  412a4c:	cmc    
  412a4d:	pop    ss
  412a4e:	rol    DWORD PTR [esi],0x57
  412a51:	adc    DWORD PTR ds:0x84bbcb66,ebp
  412a57:	addr16 jmp 0x412aaa
  412a5a:	retf   0x1528
  412a5d:	dec    esp
  412a5e:	xor    eax,esi
  412a60:	mov    edx,0x98c8c5d3
  412a65:	inc    esp
  412a66:	jne    0x412a3e
  412a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a69:	sub    al,0x9d
  412a6b:	pop    edx
  412a6c:	and    al,0xa2
  412a6e:	dec    ebp
  412a6f:	jmp    0x7fac:0xe55cb287
  412a76:	pop    ebp
  412a77:	cmp    bh,BYTE PTR [esi-0x3a]
  412a7a:	sub    DWORD PTR [ecx-0x71312e56],ebx
  412a80:	imul   ebp,DWORD PTR [esi+eiz*2],0x2c02d200
  412a87:	inc    esp
  412a88:	or     BYTE PTR [ecx-0x4af9f8b9],ch
  412a8e:	pop    ss
  412a8f:	xchg   edi,eax
  412a90:	push   es
  412a91:	imul   esp,DWORD PTR [ebp-0x7f53bd3d],0x24
  412a98:	jmp    0x3931:0x30bc4339
  412a9f:	arpl   WORD PTR [edx+0x5cd79ff],si
  412aa5:	mov    eax,ds:0x62856026
  412aaa:	pop    ecx
  412aab:	pop    esp
  412aac:	js     0x412ae5
  412aae:	jbe    0x412a36
  412ab0:	inc    BYTE PTR [edi-0x2b]
  412ab3:	mov    cl,0xea
  412ab5:	stc    
  412ab6:	adc    edx,esi
  412ab8:	lods   eax,DWORD PTR ds:[esi]
  412ab9:	and    ecx,ebp
  412abb:	outs   dx,DWORD PTR ds:[esi]
  412abc:	cld    
  412abd:	pop    ss
  412abe:	fidivr DWORD PTR [esi-0x209eb66a]
  412ac4:	push   edx
  412ac5:	out    dx,al
  412ac6:	js     0x412aa0
  412ac8:	adc    esp,DWORD PTR [ecx-0x1e]
  412acb:	jmp    DWORD PTR [ebp-0x5c83de2b]
  412ad1:	enter  0x9783,0x53
  412ad5:	fwait
  412ad6:	cmp    edi,DWORD PTR [bp+di+0x1baa]
  412adb:	aad    0xd5
  412add:	cdq    
  412ade:	test   eax,0xe28c5860
  412ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ae4:	jb     0x412b27
  412ae6:	(bad)  
  412ae7:	call   ebx
  412ae9:	sahf   
  412aea:	fnstsw ax
  412aec:	adc    eax,0xe6395bc1
  412af1:	test   eax,0x26958a4d
  412af6:	sbb    al,0x37
  412af8:	jae    0x412b49
  412afa:	xchg   DWORD PTR [edx],esi
  412afc:	jg     0x412b6f
  412afe:	loop   0x412ad7
  412b00:	iret   
  412b01:	in     eax,0xc4
  412b03:	pop    edi
  412b04:	fcmovne st,st(7)
  412b06:	sbb    eax,0x71313098
  412b0b:	push   ebp
  412b0c:	sub    ecx,DWORD PTR [ebx*2-0x2628e37f]
  412b13:	and    al,0x72
  412b15:	mov    edx,0x6d5a3585
  412b1a:	mov    esp,0x706e9214
  412b1f:	mov    ds:0xfea75082,al
  412b24:	inc    ecx
  412b25:	pop    ecx
  412b26:	mov    edi,DWORD PTR [esi+0x76]
  412b29:	imul   esi,DWORD PTR [edi-0x7bffcff1],0x39121fde
  412b33:	lea    edx,[ebp-0x185e28ba]
  412b39:	mov    bl,0x7b
  412b3b:	lock xchg edi,eax
  412b3d:	jbe    0x412aec
  412b3f:	push   0x99cb19ac
  412b44:	lds    ecx,FWORD PTR [edi+0x3a]
  412b47:	or     eax,0xe57b23d
  412b4c:	xor    BYTE PTR [edi+eax*4],0x69
  412b50:	push   ecx
  412b51:	or     eax,DWORD PTR [ecx+ecx*2+0x2db7a5bf]
  412b58:	mov    ds:0xcffdac3f,eax
  412b5d:	pop    esp
  412b5e:	mov    esi,0x80c07102
  412b63:	dec    edx
  412b64:	daa    
  412b65:	test   al,0x34
  412b67:	push   esp
  412b68:	sti    
  412b69:	pop    esp
  412b6a:	scas   eax,DWORD PTR es:[edi]
  412b6b:	push   ds
  412b6c:	sub    esp,DWORD PTR [edi+0xd9d686]
  412b72:	adc    BYTE PTR [esi+0x9],bh
  412b75:	(bad)  
  412b76:	jns    0x412bb6
  412b78:	loope  0x412afd
  412b7a:	sub    ah,BYTE PTR [edi]
  412b7c:	loopne 0x412bba
  412b7e:	jmp    DWORD PTR [ebx-0x6d]
  412b81:	jg     0x412bc2
  412b83:	xlat   BYTE PTR ds:[ebx]
  412b84:	pop    edi
  412b85:	outs   dx,DWORD PTR ds:[esi]
  412b86:	std    
  412b87:	xor    eax,0xc1a9064f
  412b8c:	aas    
  412b8d:	outs   dx,DWORD PTR ds:[esi]
  412b8e:	adc    DWORD PTR [edx-0x4ef5fc98],ecx
  412b94:	outs   dx,DWORD PTR ds:[esi]
  412b95:	mov    ah,cl
  412b97:	in     eax,0x58
  412b99:	inc    edi
  412b9a:	mov    edi,es
  412b9c:	adc    DWORD PTR [ebp+0xd822168],eax
  412ba2:	daa    
  412ba3:	ds push ebp
  412ba5:	js     0x412b50
  412ba7:	cmp    al,0xe0
  412ba9:	push   eax
  412baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bab:	lds    eax,FWORD PTR [ebx+0xd]
  412bae:	jecxz  0x412bd4
  412bb0:	sbb    esi,ebx
  412bb2:	jns    0x412b74
  412bb4:	cli    
  412bb5:	xor    bh,BYTE PTR [edi+0x6ad07851]
  412bbb:	mov    al,0x32
  412bbd:	cdq    
  412bbe:	cmc    
  412bbf:	neg    ch
  412bc1:	cmp    BYTE PTR [ecx+0x51],ch
  412bc4:	(bad)  
  412bc5:	cmp    al,bl
  412bc7:	pop    ebp
  412bc8:	add    ch,BYTE PTR [edx-0x7e]
  412bcb:	lock xchg esp,eax
  412bcd:	pop    edi
  412bce:	jo     0x412be0
  412bd0:	lock add eax,0x6206c03b
  412bd6:	mov    esi,DWORD PTR [ecx-0x68]
  412bd9:	dec    ebp
  412bda:	(bad)  
  412bdb:	out    dx,al
  412bdc:	sbb    edx,0xffffffa7
  412bdf:	inc    ebx
  412be0:	cdq    
  412be1:	or     al,0x2d
  412be3:	nop
  412be4:	mov    dl,0x2f
  412be6:	std    
  412be7:	lds    ebx,FWORD PTR [ecx-0x70]
  412bea:	loopne 0x412bcc
  412bec:	mov    ah,0xb5
  412bee:	mov    WORD PTR [edx-0x535882ba],cs
  412bf4:	jmp    DWORD PTR [edi-0x37]
  412bf7:	out    dx,al
  412bf8:	xchg   esp,eax
  412bf9:	je     0x412ba6
  412bfb:	test   eax,0xf3f58e88
  412c00:	into   
  412c01:	xor    BYTE PTR [esi+0x7b],al
  412c04:	cli    
  412c05:	pop    edx
  412c06:	(bad)  
  412c07:	out    0xb,eax
  412c09:	dec    ebp
  412c0a:	sub    DWORD PTR [ecx-0x11ec01b8],eax
  412c10:	jge    0x412c11
  412c12:	mov    ebx,0xa4eda69e
  412c17:	fistp  DWORD PTR [edx-0x2eb47c1f]
  412c1d:	ror    BYTE PTR [edx+0x3a09b884],1
  412c23:	push   esp
  412c24:	xchg   edx,eax
  412c25:	adc    edi,DWORD PTR [ebp-0x17]
  412c28:	jns    0x412ca4
  412c2a:	icebp  
  412c2b:	xchg   BYTE PTR [ebx-0x21],al
  412c2e:	ror    DWORD PTR [ebx+0x8c03a23],cl
  412c34:	inc    esi
  412c35:	out    dx,eax
  412c36:	xor    DWORD PTR [edi+0x2a],esp
  412c39:	stc    
  412c3a:	inc    esi
  412c3b:	mov    edx,0xb950c780
  412c40:	sbb    BYTE PTR [esi-0x60],0x59
  412c44:	jns    0x412c33
  412c46:	mov    ebp,edi
  412c48:	ror    ecx,cl
  412c4a:	and    ch,BYTE PTR [edi+0x2a]
  412c4d:	rcr    edx,cl
  412c4f:	xor    bh,bh
  412c51:	loope  0x412c5f
  412c53:	retf   0xfea0
  412c56:	rcl    ch,1
  412c58:	nop
  412c59:	popf   
  412c5a:	mul    DWORD PTR [ecx+0x20]
  412c5d:	jle    0x412c7a
  412c5f:	sub    al,BYTE PTR ds:0x224d0eed
  412c65:	mov    ebp,0xd9af6aea
  412c6a:	mov    WORD PTR [esi],?
  412c6c:	or     DWORD PTR [edi],0x34
  412c6f:	inc    ecx
  412c70:	and    BYTE PTR [esi-0x61e57d91],al
  412c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c77:	sbb    eax,0xcb0bbf5
  412c7c:	pop    edi
  412c7d:	imul   esi,DWORD PTR [edx+0xf1ffe6e],0x55
  412c84:	loope  0x412c83
  412c86:	sti    
  412c87:	and    edx,DWORD PTR [ebx+ebp*8]
  412c8a:	rcl    DWORD PTR [edi],cl
  412c8c:	div    cl
  412c8e:	or     DWORD PTR [ebx+esi*1+0xe],esp
  412c92:	xor    al,0x3
  412c94:	into   
  412c95:	out    0x9a,eax
  412c97:	fwait
  412c98:	xchg   ebp,eax
  412c99:	in     eax,dx
  412c9a:	add    BYTE PTR [ebx],ah
  412c9c:	ins    DWORD PTR es:[edi],dx
  412c9d:	add    DWORD PTR [ebx-0x4],edi
  412ca0:	fdivr  st,st(6)
  412ca2:	cmp    cl,dh
  412ca4:	mov    esp,0x7071ff09
  412ca9:	push   ss
  412caa:	push   cs
  412cab:	xchg   ebp,eax
  412cac:	push   cs
  412cad:	mov    esp,0xf569bb9f
  412cb2:	test   al,0xb9
  412cb4:	xor    BYTE PTR [edi],0x8a
  412cb7:	fistp  QWORD PTR [ebp+0x21]
  412cba:	mov    edi,0xcc30df2e
  412cbf:	stos   BYTE PTR es:[edi],al
  412cc0:	xchg   ebp,eax
  412cc1:	neg    BYTE PTR [eax]
  412cc3:	test   BYTE PTR [ebp+0x6e],ah
  412cc6:	sbb    eax,0xa043db62
  412ccb:	sbb    BYTE PTR [edx+0x4c282625],bl
  412cd1:	sbb    DWORD PTR [ecx+0x24fb7a16],0xb48a1f3
  412cdb:	scas   eax,DWORD PTR es:[edi]
  412cdc:	leave  
  412cdd:	(bad)  
  412cdf:	mov    ch,0xfa
  412ce1:	sub    eax,0xa0da7f77
  412ce6:	jl     0x412ca9
  412ce8:	xchg   ebx,eax
  412ce9:	sbb    BYTE PTR [edi+0x73],0xb5
  412ced:	in     eax,dx
  412cee:	pushf  
  412cef:	pop    ebx
  412cf0:	cmc    
  412cf1:	in     eax,0x8d
  412cf3:	add    BYTE PTR [ebp+0x53],bh
  412cf6:	and    edx,DWORD PTR [eax+0x48]
  412cf9:	(bad)  
  412cfb:	out    0xc,al
  412cfd:	jl     0x412d3e
  412cff:	jns    0x412d3e
  412d01:	sub    BYTE PTR [edi+0x1c],bh
  412d04:	call   0x3d59:0xd714019c
  412d0b:	leavew 
  412d0d:	push   esp
  412d0e:	aam    0xed
  412d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d11:	and    ebp,ebp
  412d13:	xchg   ebx,eax
  412d14:	xchg   edx,eax
  412d15:	stos   BYTE PTR es:[edi],al
  412d16:	retf   0x5dc8
  412d19:	jge    0x412d76
  412d1b:	jmp    0x412cc5
  412d1d:	xchg   BYTE PTR [ebp-0x78a524b2],al
  412d23:	cmp    ebx,edx
  412d25:	jmp    0x412d04
  412d27:	repnz popa 
  412d29:	idiv   BYTE PTR [eax]
  412d2b:	sub    BYTE PTR [ebp+0x18c1d1f3],dl
  412d31:	pop    edx
  412d32:	pop    ss
  412d33:	pusha  
  412d34:	idiv   BYTE PTR [esi+eiz*8+0x7d]
  412d38:	jl     0x412d4f
  412d3a:	les    ebp,FWORD PTR [esi]
  412d3c:	pop    edi
  412d3d:	pop    ebx
  412d3e:	sub    al,0x6f
  412d40:	pop    es
  412d41:	fsubr  QWORD PTR [edx]
  412d43:	rcl    BYTE PTR [ebx+ebp*2+0x49],cl
  412d47:	sub    ah,BYTE PTR [ecx+0xd]
  412d4a:	and    esi,ebp
  412d4c:	nop
  412d4d:	or     eax,0x3515f1a6
  412d52:	add    al,0x41
  412d54:	or     bl,BYTE PTR [ebx-0x52]
  412d57:	cmp    DWORD PTR [ecx-0x3c38dd44],0x89b1d8d5
  412d61:	pop    edi
  412d62:	dec    eax
  412d63:	fcmovnu st,st(7)
  412d65:	mov    eax,0x5a95509a
  412d6a:	es stc 
  412d6c:	bswap  ecx
  412d6e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  412d70:	adc    DWORD PTR [edi+0x5f],0x69
  412d74:	push   es
  412d75:	sbb    DWORD PTR ds:0xfbb87b28,edi
  412d7b:	xor    DWORD PTR gs:[ebx+0x7a],esi
  412d7f:	addr16 and al,0xf1
  412d82:	lods   al,BYTE PTR ds:[esi]
  412d83:	sbb    ah,ah
  412d85:	sub    bh,BYTE PTR [edi]
  412d87:	in     al,0xf9
  412d89:	retf   0xa336
  412d8c:	xlat   BYTE PTR ds:[ebx]
  412d8d:	ret    
  412d8e:	enter  0x51fb,0xc3
  412d92:	das    
  412d93:	mov    ch,0xb4
  412d95:	ror    DWORD PTR [ecx],0xab
  412d98:	push   es
  412d99:	shr    cl,1
  412d9b:	cli    
  412d9c:	dec    ecx
  412d9d:	ror    DWORD PTR [eax-0x476f2cd0],cl
  412da3:	int3   
  412da4:	push   DWORD PTR [ebx+eax*1-0x6d]
  412da8:	in     al,0x23
  412daa:	pop    esp
  412dab:	jbe    0x412da6
  412dad:	(bad)  
  412dae:	cmc    
  412daf:	push   es
  412db0:	add    eax,0x6f3523cc
  412db5:	es cdq 
  412db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412db8:	add    al,0xf6
  412dba:	xchg   esi,eax
  412dbb:	mov    ch,bh
  412dbd:	inc    esi
  412dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dbf:	adc    DWORD PTR [ecx-0x5a32a09b],ecx
  412dc5:	fst    DWORD PTR ds:0x7599addd
  412dcb:	cmp    eax,0x20f1c8fd
  412dd0:	or     esi,DWORD PTR [edx]
  412dd2:	arpl   WORD PTR [edi+0x7d],cx
  412dd5:	scas   eax,DWORD PTR es:[edi]
  412dd6:	out    0xe0,al
  412dd8:	popa   
  412dd9:	in     eax,dx
  412dda:	sti    
  412ddb:	xor    al,0xef
  412ddd:	js     0x412e55
  412ddf:	aam    0xc
  412de1:	push   esp
  412de2:	scas   al,BYTE PTR es:[edi]
  412de3:	and    bl,BYTE PTR [esi+edx*4+0x335fbf5]
  412dea:	rcr    DWORD PTR [edx-0x16],0x86
  412dee:	ss push ecx
  412df0:	cdq    
  412df1:	fdivr  st,st(1)
  412df3:	cld    
  412df4:	ss hlt 
  412df6:	and    al,0x76
  412df8:	sbb    ebx,0xffffffdd
  412dfb:	or     esi,DWORD PTR [ebp+0x512a6499]
  412e01:	stos   BYTE PTR es:[edi],al
  412e02:	sbb    ah,dl
  412e04:	jnp    0x412de3
  412e06:	stc    
  412e07:	fucomip st,st(4)
  412e09:	bound  eax,QWORD PTR [ecx]
  412e0b:	mov    bl,0x5f
  412e0d:	xor    bl,BYTE PTR [ecx-0x3e451d24]
  412e13:	adc    ch,BYTE PTR [ecx-0x3982e9c3]
  412e19:	sbb    ax,0x819d
  412e1d:	in     al,dx
  412e1e:	imul   edx,DWORD PTR [ecx-0x1],0x4b1f8f95
  412e25:	pop    eax
  412e26:	xchg   edi,eax
  412e27:	popf   
  412e28:	add    edx,DWORD PTR [ecx-0x161dd644]
  412e2e:	mov    edi,0xc70b48cc
  412e33:	mov    ds:0xd47d23ec,eax
  412e38:	jmp    0x2301:0xbb106636
  412e3f:	scas   eax,DWORD PTR es:[edi]
  412e40:	hlt    
  412e41:	cli    
  412e42:	mov    ebp,0x1e7554c8
  412e47:	out    0xdf,al
  412e49:	jae    0x412eab
  412e4b:	push   cs
  412e4c:	add    eax,0x7752c92c
  412e51:	jle    0x412ea5
  412e53:	mov    WORD PTR [edx+edi*2+0x59],?
  412e57:	loope  0x412e88
  412e59:	mov    bh,BYTE PTR [esp+edi*8-0x25]
  412e5d:	(bad)  
  412e5e:	mov    esp,0xb6ee4fa3
  412e63:	sbb    BYTE PTR [eax-0x2871224a],ah
  412e69:	or     BYTE PTR [eax-0x19],ah
  412e6c:	sub    eax,0x19eaecff
  412e71:	dec    edx
  412e72:	out    dx,eax
  412e73:	stos   DWORD PTR es:[edi],eax
  412e74:	add    esi,ecx
  412e76:	scas   al,BYTE PTR es:[edi]
  412e77:	fdiv   st(7),st
  412e79:	(bad)  
  412e7a:	jnp    0x412ef0
  412e7c:	out    0x4e,al
  412e7e:	push   es
  412e7f:	and    al,0x44
  412e81:	dec    esi
  412e82:	iret   
  412e83:	shl    BYTE PTR [ebx],cl
  412e85:	inc    esi
  412e86:	dec    ecx
  412e87:	int3   
  412e88:	cdq    
  412e89:	repz sbb eax,0x11b83aa9
  412e8f:	inc    eax
  412e90:	dec    edx
  412e91:	jne    0x412e85
  412e93:	jmp    0x7a101ca3
  412e98:	and    DWORD PTR [esi+0x10e59936],esp
  412e9e:	or     esp,DWORD PTR [edx]
  412ea0:	shl    DWORD PTR [eax-0x44],1
  412ea3:	inc    edx
  412ea4:	xor    esp,ecx
  412ea6:	mov    ch,0x45
  412ea8:	das    
  412ea9:	fistp  QWORD PTR [ebx-0x1fe72484]
  412eaf:	push   0x67
  412eb1:	inc    ebp
  412eb2:	pop    es
  412eb3:	push   0xffffff92
  412eb5:	mov    edx,edx
  412eb7:	(bad)  
  412eb8:	xchg   esp,eax
  412eb9:	push   ebp
  412eba:	xor    eax,0x80785732
  412ebf:	sbb    eax,0x579bb0ee
  412ec4:	repz jne 0x412e5e
  412ec7:	xchg   al,cl
  412ec9:	pop    eax
  412eca:	jp     0x412f21
  412ecc:	enter  0xded8,0x7c
  412ed0:	loop   0x412f12
  412ed2:	cmp    cl,BYTE PTR [esi]
  412ed4:	push   es
  412ed5:	jmp    0x412f50
  412ed7:	mov    BYTE PTR [ecx-0x3],al
  412eda:	fs mov cs:0x29d586b3,eax
  412ee1:	adc    al,0x9a
  412ee3:	mov    ds:0x159c28b3,eax
  412ee8:	mov    dh,0xd7
  412eea:	jg     0x412f01
  412eec:	xor    al,0x69
  412eee:	cmp    esp,DWORD PTR [edx]
  412ef0:	imul   ebx,edx,0xbaa1becd
  412ef6:	imul   BYTE PTR [eax-0x32]
  412ef9:	es pop esp
  412efb:	(bad)  
  412efc:	xor    ah,al
  412efe:	push   edi
  412eff:	call   0x32ae820c
  412f04:	mov    ch,0xa9
  412f06:	inc    eax
  412f07:	push   esi
  412f08:	and    al,BYTE PTR [esi+0x4ad7539e]
  412f0e:	jo     0x412f27
  412f10:	push   cs
  412f11:	dec    ecx
  412f12:	push   ecx
  412f13:	repz (bad) 
  412f15:	jne    0x412efe
  412f17:	repz sbb ah,bl
  412f1a:	add    ebp,DWORD PTR [di]
  412f1d:	dec    eax
  412f1e:	cmp    esi,ecx
  412f20:	icebp  
  412f21:	jae    0x412fa2
  412f23:	push   ebx
  412f24:	retf   0xe63
  412f27:	gs out 0x92,al
  412f2a:	cmp    eax,0xfac67537
  412f2f:	xchg   DWORD PTR [eax+0x6b30e2f7],eax
  412f35:	aad    0x6c
  412f37:	mov    bl,0xc6
  412f39:	cmc    
  412f3a:	push   edi
  412f3b:	adc    dl,BYTE PTR [eax-0x771dba50]
  412f41:	sbb    eax,0x87f253fb
  412f46:	xchg   ebp,eax
  412f47:	loopne 0x412f65
  412f49:	or     dl,cl
  412f4b:	xchg   edx,eax
  412f4c:	xchg   esi,eax
  412f4d:	push   edx
  412f4e:	or     ch,BYTE PTR [esi]
  412f50:	outs   dx,DWORD PTR ds:[esi]
  412f52:	mov    edx,0x53bc5f08
  412f57:	pop    esp
  412f58:	ret    
  412f59:	xor    al,0x1
  412f5b:	add    bh,BYTE PTR [ebp+ebx*2+0x48]
  412f5f:	arpl   WORD PTR [ecx-0x2a77ff1b],di
  412f65:	dec    ebp
  412f66:	std    
  412f67:	or     BYTE PTR [edi],ah
  412f69:	jle    0x412f82
  412f6b:	xor    al,0x1d
  412f6d:	xor    DWORD PTR [ebx+edi*1+0x31b3c104],esi
  412f74:	outs   dx,DWORD PTR ds:[esi]
  412f75:	hlt    
  412f76:	add    al,0xb4
  412f78:	jo     0x412f66
  412f7a:	cmp    BYTE PTR ds:0x348958d4,0x5
  412f81:	push   ebx
  412f82:	sub    DWORD PTR [ecx+0x2fa6f01f],esp
  412f88:	xchg   edx,eax
  412f89:	gs xchg ebx,eax
  412f8b:	mov    ebp,0x860602a0
  412f90:	push   ebp
  412f91:	(bad)  
  412f92:	xlat   BYTE PTR ds:[ebx]
  412f93:	addr16 cli 
  412f95:	mov    eax,ds:0x4e2fb478
  412f9a:	jo     0x412feb
  412f9c:	inc    edx
  412f9d:	(bad)  
  412f9f:	ret    0x926b
  412fa2:	popa   
  412fa3:	dec    esi
  412fa4:	sub    al,0xcc
  412fa6:	push   edi
  412fa7:	adc    edx,ebp
  412fa9:	xchg   edx,eax
  412faa:	cmp    ch,BYTE PTR [esi]
  412fac:	shl    BYTE PTR ds:0x909f9c36,1
  412fb2:	test   eax,edi
  412fb4:	mov    ds:0x63016735,eax
  412fb9:	inc    esp
  412fba:	pop    eax
  412fbb:	ror    DWORD PTR [edx+0x51],1
  412fbe:	sbb    ah,BYTE PTR [ecx+0x75]
  412fc1:	pop    edx
  412fc2:	jmp    0x412f9c
  412fc4:	push   cs
  412fc5:	das    
  412fc6:	inc    edx
  412fc7:	add    DWORD PTR [esi+0x1a],ebx
  412fca:	push   ss
  412fcb:	adc    BYTE PTR [edx-0x6d],0x95
  412fcf:	mov    ecx,0x11a50bce
  412fd4:	xor    BYTE PTR [eax-0x63d0c796],dh
  412fda:	sbb    ecx,DWORD PTR [ebx-0x4cfd38b8]
  412fe0:	ror    al,0x9d
  412fe3:	cmp    BYTE PTR [ebx],dh
  412fe5:	scas   al,BYTE PTR es:[edi]
  412fe6:	(bad)  
  412fe7:	xchg   esi,eax
  412fe8:	mov    WORD PTR [ebx],gs
  412fea:	jecxz  0x413068
  412fec:	jl     0x412fc6
  412fee:	cdq    
  412fef:	cmp    DWORD PTR [ecx],ecx
  412ff1:	fild   QWORD PTR ds:0x2ec1053a
  412ff7:	xor    al,0x17
  412ff9:	mov    dh,0xa2
  412ffb:	in     ax,0x4a
  412ffe:	xchg   esi,eax
  412fff:	push   0x17
  413001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413002:	jg     0x412faf
  413004:	push   edi
  413005:	sbb    ch,BYTE PTR [edx+edi*1]
  413008:	gs sti 
  41300a:	lds    edi,FWORD PTR [ebx-0x53b6b4a4]
  413010:	xchg   DWORD PTR [edi],esp
  413012:	(bad)  [ebx]
  413014:	sbb    al,BYTE PTR [esi-0x5c5afcb5]
  41301a:	adc    ah,BYTE PTR ds:0x878d2c26
  413020:	in     al,0xce
  413022:	bound  eax,QWORD PTR [edx]
  413024:	lods   eax,DWORD PTR ds:[esi]
  413025:	xor    ecx,DWORD PTR [ebx]
  413027:	pop    eax
  413028:	adc    BYTE PTR [edi-0x7d487254],0xe8
  41302f:	jno    0x412fc3
  413031:	cmp    DWORD PTR [edi],eax
  413033:	shl    DWORD PTR [edx],0x51
  413036:	rcl    cl,1
  413038:	es sbb bh,ah
  41303b:	jp     0x413071
  41303d:	inc    eax
  41303e:	add    eax,0xadf47de1
  413043:	or     DWORD PTR [ecx+0x2094120c],ecx
  413049:	mov    edx,0xa45a1c8f
  41304e:	xor    edx,ebx
  413050:	cmp    al,0x30
  413052:	inc    esi
  413053:	push   ebp
  413054:	data16 mov BYTE PTR gs:[edi-0x3c08ef8d],al
  41305c:	int    0x2a
  41305e:	fsubr  QWORD PTR [ecx-0x3179aee7]
  413064:	push   es
  413065:	xchg   edi,eax
  413066:	outs   dx,DWORD PTR ds:[esi]
  413067:	pop    eax
  413068:	xor    eax,0x7c9b975e
  41306d:	or     al,0x27
  41306f:	xchg   edx,eax
  413070:	xchg   esi,eax
  413071:	scas   al,BYTE PTR es:[edi]
  413072:	add    al,0xee
  413074:	int3   
  413075:	and    eax,0xeae9ea34
  41307a:	sbb    eax,0x8b882a6d
  41307f:	push   0x3c
  413081:	jno    0x413064
  413083:	or     al,0x45
  413085:	test   DWORD PTR [esi+eiz*4],0xc2a6bb6f
  41308c:	or     ch,dl
  41308e:	adc    esi,esi
  413090:	jl     0x413023
  413092:	pop    ecx
  413093:	mov    fs,WORD PTR [edx]
  413095:	loop   0x413054
  413097:	pop    ebp
  413098:	or     eax,0x4a9bae01
  41309d:	add    BYTE PTR [eax-0x6e4d87ab],0x8d
  4130a4:	(bad)  
  4130a6:	sub    al,0x55
  4130a8:	(bad)  
  4130aa:	(bad)  [ecx+0x3a]
  4130ad:	sbb    edi,DWORD PTR ds:0x4b9e7552
  4130b3:	jmp    0x43245528
  4130b8:	and    bl,cl
  4130ba:	xchg   edi,eax
  4130bb:	cmp    DWORD PTR [esi+0x600857f1],ebx
  4130c1:	mov    al,ds:0xa0ee0b48
  4130c6:	cmp    eax,0x23693d1d
  4130cb:	mov    gs,WORD PTR [edi+0x3f9d675e]
  4130d1:	ja     0x413133
  4130d3:	daa    
  4130d4:	sbb    DWORD PTR [edi],eax
  4130d6:	(bad)  
  4130d7:	jl     0x4130e0
  4130d9:	into   
  4130da:	outs   dx,BYTE PTR ds:[esi]
  4130db:	jne    0x4130a4
  4130dd:	ins    DWORD PTR es:[edi],dx
  4130de:	call   0xc932:0x1b5e926b
  4130e5:	xchg   ecx,eax
  4130e6:	dec    edx
  4130e7:	es or  al,0xa9
  4130ea:	mov    eax,0xcc33cf30
  4130ef:	jnp    0x413099
  4130f1:	dec    ebp
  4130f2:	call   0x9878a528
  4130f7:	addr16 nop
  4130f9:	inc    edx
  4130fa:	jae    0x413168
  4130fc:	cdq    
  4130fd:	xchg   esp,eax
  4130fe:	test   BYTE PTR cs:[ebx],dh
  413101:	ret    
  413102:	dec    edx
  413103:	pushf  
  413104:	mov    ebp,0x482096e5
  413109:	xchg   esp,eax
  41310a:	iret   
  41310b:	mov    ebx,0x778b7a5
  413110:	adc    DWORD PTR [eax],edx
  413112:	mov    ds:0xc77a5366,al
  413117:	gs inc ebx
  413119:	data16 out dx,al
  41311b:	out    dx,eax
  41311c:	mov    esi,0x57b6f801
  413121:	adc    eax,0xcead25ce
  413126:	push   ebx
  413127:	push   cs
  413128:	xor    DWORD PTR ds:0xd20d1458,edi
  41312e:	jbe    0x4131ab
  413130:	ret    0x4f6d
  413133:	xor    bh,BYTE PTR [ebp-0x3f064e4a]
  413139:	adc    bl,dh
  41313b:	or     al,0x7e
  41313d:	cld    
  41313e:	adc    al,0xdd
  413140:	push   ecx
  413141:	es cmp cl,dh
  413144:	xchg   ebx,eax
  413145:	inc    edx
  413146:	mov    ecx,ebx
  413148:	retf   0xb73e
  41314b:	jns    0x4130ff
  41314d:	mov    bh,0xb6
  41314f:	pop    ecx
  413150:	mov    edx,0xd809ac9f
  413155:	mov    esp,0x6b47542c
  41315a:	xchg   esi,eax
  41315b:	pushf  
  41315c:	retf   0x6a59
  41315f:	stos   BYTE PTR es:[edi],al
  413160:	lea    edi,[esi+0x3c]
  413163:	lods   eax,DWORD PTR ds:[esi]
  413164:	cmp    al,BYTE PTR [ebx+0x1695d8ed]
  41316a:	inc    ecx
  41316b:	push   ebp
  41316c:	dec    esp
  41316d:	and    al,0x71
  41316f:	leave  
  413170:	cmp    eax,0x4117e883
  413175:	cld    
  413176:	pop    ds
  413177:	fwait
  413178:	xlat   BYTE PTR ds:[ebx]
  413179:	(bad)  
  41317a:	js     0x41318a
  41317c:	push   es
  41317d:	hlt    
  41317e:	aam    0x49
  413180:	pop    esi
  413181:	jmp    0xb39a1463
  413186:	mov    dh,BYTE PTR [edx+0x10]
  413189:	push   ds
  41318a:	sub    ah,ah
  41318c:	stc    
  41318d:	xchg   edx,eax
  41318e:	int    0x73
  413190:	pop    ds
  413191:	or     al,cl
  413193:	mov    ebx,0x394c8c68
  413198:	and    ah,ch
  41319a:	or     eax,0xfc32f9b0
  41319f:	leave  
  4131a0:	outs   dx,BYTE PTR ds:[esi]
  4131a1:	sub    DWORD PTR [ebp-0x66d291db],esp
  4131a7:	xchg   edx,eax
  4131a8:	xchg   ebp,eax
  4131a9:	shl    BYTE PTR [edi+eax*2+0x75],cl
  4131ad:	cmp    DWORD PTR [ecx-0x1037a70a],edi
  4131b3:	add    al,0xfe
  4131b5:	jb     0x4131b1
  4131b7:	repnz cmp BYTE PTR ds:[edx],cl
  4131bb:	jg     0x413178
  4131bd:	mov    ecx,0xc4a4b804
  4131c2:	mov    DWORD PTR [eax+ebp*1-0x4fed1f07],esp
  4131c9:	add    ch,bl
  4131cb:	adc    eax,0xaf4b7dcf
  4131d0:	lock cmp BYTE PTR [edx],dh
  4131d3:	mov    cl,0xb6
  4131d5:	cmp    eax,0x7479e6b2
  4131da:	pop    es
  4131db:	pop    ebp
  4131dc:	jmp    0x60728f8f
  4131e1:	aas    
  4131e2:	imul   DWORD PTR [ecx+0x61051e87]
  4131e8:	push   ss
  4131e9:	sbb    eax,0x6af1ecd4
  4131ee:	xlat   BYTE PTR ds:[ebx]
  4131ef:	pop    ss
  4131f0:	je     0x413201
  4131f2:	xchg   esi,eax
  4131f3:	jle    0x41322d
  4131f5:	in     eax,dx
  4131f6:	das    
  4131f7:	cmp    eax,0xe03b220e
  4131fc:	xor    edi,DWORD PTR [esi-0x5b]
  4131ff:	je     0x4131ce
  413201:	mov    cl,0xe5
  413203:	or     DWORD PTR [esi],esi
  413205:	gs push ebx
  413207:	mov    bl,0x71
  413209:	sbb    ebp,ebp
  41320b:	jg     0x41322f
  41320d:	sub    al,0xf4
  41320f:	dec    edi
  413210:	inc    ebp
  413211:	(bad)  
  413212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413213:	and    eax,0x173fb561
  413218:	(bad)  
  413219:	je     0x4131d2
  41321b:	sbb    al,0x7d
  41321d:	adc    edi,ebp
  41321f:	mov    al,ds:0x7ec5baf0
  413224:	test   BYTE PTR [edi],ch
  413226:	ins    BYTE PTR es:[edi],dx
  413227:	ins    DWORD PTR es:[edi],dx
  413228:	es sar ah,1
  41322b:	add    eax,esi
  41322d:	out    dx,eax
  41322e:	rcl    BYTE PTR [eax+0x78],0x26
  413232:	mov    esi,0x699c7915
  413237:	push   es
  413238:	and    bh,ch
  41323a:	call   0xedda:0x5b3f9ba7
  413241:	leave  
  413242:	popa   
  413243:	adc    ecx,DWORD PTR [ebp-0x1a971729]
  413249:	retf   0xa2f2
  41324c:	out    0x6c,al
  41324e:	leave  
  41324f:	lods   al,BYTE PTR ds:[esi]
  413250:	jmp    0xc8d251a3
  413255:	(bad)  
  413256:	xchg   ecx,eax
  413257:	adc    al,0x8b
  413259:	das    
  41325a:	inc    ebx
  41325b:	fisttp DWORD PTR ds:0x89b76d5d
  413261:	pop    es
  413262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413263:	push   edx
  413264:	ror    edi,1
  413266:	push   esp
  413267:	js     0x413222
  413269:	pop    ecx
  41326a:	push   ss
  41326b:	test   eax,0x3ce56c3e
  413270:	rcl    ah,0x72
  413273:	scas   eax,DWORD PTR es:[edi]
  413274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413275:	stc    
  413276:	inc    ebx
  413277:	add    ch,BYTE PTR [eax-0x79]
  41327a:	push   cs
  41327b:	pushf  
  41327c:	adc    al,0x14
  41327e:	and    ch,BYTE PTR [ecx]
  413280:	mov    ?,WORD PTR [edx+0x32a57768]
  413286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413287:	div    DWORD PTR [esi*2-0xb966772]
  41328e:	mov    dh,0xab
  413290:	sub    cl,al
  413292:	shl    DWORD PTR [esi+0x28f7fbff],cl
  413298:	fsubr  QWORD PTR [edi-0x2a7b8d78]
  41329e:	shr    BYTE PTR [ecx-0x17],0x18
  4132a2:	(bad)  
  4132a3:	mov    edi,0x5180ff5a
  4132a8:	fsubr  QWORD PTR [ecx+0x57661765]
  4132ae:	cdq    
  4132af:	jno    0x413235
  4132b1:	or     eax,0xc1ce38db
  4132b6:	pop    edi
  4132b7:	push   ecx
  4132b8:	cli    
  4132b9:	adc    al,0xd5
  4132bb:	mov    BYTE PTR [ebx],al
  4132bd:	cmp    dh,BYTE PTR [ecx+0x3f]
  4132c0:	push   cs
  4132c1:	cs mov ebp,0x4616672f
  4132c7:	push   eax
  4132c8:	out    dx,eax
  4132c9:	xor    DWORD PTR [ebx+0x3ed4da2c],edx
  4132cf:	rcl    DWORD PTR [edi+0x6a601892],0xe0
  4132d6:	(bad)  
  4132d7:	and    bl,bh
  4132d9:	cmp    eax,0xe580b832
  4132de:	inc    ecx
  4132df:	arpl   WORD PTR [eax-0x50c304b2],bp
  4132e5:	or     BYTE PTR [ebx-0x5c],0x9a
  4132e9:	cld    
  4132ea:	das    
  4132eb:	inc    esi
  4132ec:	mov    al,0x5d
  4132ee:	dec    edx
  4132ef:	leave  
  4132f0:	retf   
  4132f1:	inc    edi
  4132f2:	jg     0x413344
  4132f4:	ret    
  4132f5:	dec    ebx
  4132f6:	es (bad) 
  4132f8:	mov    ah,0x50
  4132fa:	mov    esp,0x5463a21a
  4132ff:	push   ss
  413300:	ss popf 
  413302:	xor    ch,0x89
  413305:	les    edx,FWORD PTR [esi+0x69]
  413308:	inc    esp
  413309:	mov    al,0xc4
  41330b:	xor    DWORD PTR ds:[edx+eiz*8-0x39],0xffffffa2
  413311:	stos   BYTE PTR es:[edi],al
  413312:	imul   esp,DWORD PTR [esi],0x72a819b5
  413318:	aaa    
  413319:	cld    
  41331a:	call   0x78aafbf2
  41331f:	xchg   ebx,eax
  413320:	and    eax,0x2657063d
  413325:	sbb    BYTE PTR [esi+0x3e652077],al
  41332b:	aad    0x98
  41332d:	imul   esp,DWORD PTR [eax],0xed44608e
  413333:	sbb    DWORD PTR [eax-0x53],edx
  413336:	fst    st(3)
  413338:	out    dx,eax
  413339:	out    0x54,al
  41333b:	dec    edx
  41333c:	adc    DWORD PTR [ebp-0x53],ecx
  41333f:	out    dx,eax
  413340:	(bad)  
  413341:	cmp    BYTE PTR ds:0xb1e819c9,dl
  413347:	ret    0xd2b9
  41334a:	lea    ebp,[esi]
  41334c:	stos   BYTE PTR es:[edi],al
  41334d:	sub    BYTE PTR [ecx],0x81
  413350:	mov    eax,ds:0x72fe14df
  413355:	xor    ch,BYTE PTR [edi+0x4fcb6610]
  41335b:	mov    bl,0x2f
  41335d:	jl     0x41330f
  41335f:	fstp   QWORD PTR [ebx+eiz*4-0x16]
  413363:	dec    esp
  413364:	push   ebx
  413365:	daa    
  413366:	adc    cl,BYTE PTR [ebp-0x60]
  413369:	repz pushf 
  41336b:	jno    0x4133ce
  41336d:	fiadd  DWORD PTR [edi]
  41336f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413370:	jmp    0x6c4f:0xf518ff0
  413377:	and    esp,ebp
  413379:	mov    eax,ds:0x883f9485
  41337e:	mov    al,ds:0x53c98a82
  413383:	jmp    0xd641:0x14a7da37
  41338a:	in     al,dx
  41338b:	retf   0x7188
  41338e:	outs   dx,DWORD PTR ds:[esi]
  41338f:	cmp    al,0x3e
  413391:	bound  edi,QWORD PTR [esi]
  413393:	cmp    eax,0x784cdb58
  413398:	adc    ecx,esi
  41339a:	aam    0x37
  41339c:	and    al,BYTE PTR [esp+eax*8]
  41339f:	and    DWORD PTR [ecx-0x2b8e1f62],ecx
  4133a5:	sbb    al,0x12
  4133a7:	rcl    BYTE PTR [ecx],1
  4133a9:	rcr    DWORD PTR [ecx-0x5279f7f],0xf7
  4133b0:	nop
  4133b1:	outs   dx,BYTE PTR ds:[esi]
  4133b2:	inc    ebp
  4133b3:	cmp    eax,0xd092456b
  4133b8:	retf   
  4133b9:	sahf   
  4133ba:	ins    DWORD PTR es:[edi],dx
  4133bb:	imul   dl
  4133bd:	mov    bh,0xe3
  4133bf:	xchg   ebx,eax
  4133c0:	sub    eax,0x1c518057
  4133c5:	out    0x24,al
  4133c7:	xlat   BYTE PTR ds:[ebx]
  4133c8:	dec    ebp
  4133c9:	sti    
  4133ca:	push   eax
  4133cb:	mov    ebp,0x96d850ad
  4133d0:	ret    0xbf5a
  4133d3:	and    al,0xd4
  4133d5:	mov    bl,BYTE PTR [edx+0x41c1e6bf]
  4133db:	jmp    0x413390
  4133dd:	mov    ds:0xe600960d,eax
  4133e2:	mov    DWORD PTR [edx-0x2d64b0f2],eax
  4133e8:	sar    DWORD PTR [ecx-0x3299905b],0x6e
  4133ef:	adc    edi,eax
  4133f1:	mov    ch,0x7c
  4133f3:	outs   dx,DWORD PTR ds:[esi]
  4133f4:	aad    0x76
  4133f6:	adc    al,BYTE PTR [edx-0x4]
  4133f9:	push   esi
  4133fa:	jmp    0xc95e:0x1787b971
  413401:	cld    
  413402:	sbb    ecx,DWORD PTR [eax]
  413404:	add    bh,bh
  413406:	jo     0x41346b
  413408:	sbb    bl,al
  41340a:	es pop ds
  41340c:	or     eax,0x3ab8655c
  413411:	mov    edi,0xe6791ba1
  413416:	mov    eax,ds:0xbc3ee76
  41341b:	js     0x41345f
  41341d:	repnz inc ebp
  41341f:	das    
  413420:	xchg   ecx,eax
  413421:	aaa    
  413422:	das    
  413423:	in     al,dx
  413424:	(bad)  
  413425:	dec    edi
  413426:	jl     0x4133e1
  413428:	pop    esp
  413429:	xor    bl,dl
  41342b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41342c:	xlat   BYTE PTR ds:[ebx]
  41342d:	pop    esp
  41342e:	push   0x6a945451
  413433:	cmp    BYTE PTR [ebx-0x28b1dbb2],dh
  413439:	pop    edx
  41343a:	mov    dh,0x3a
  41343c:	adc    cl,bl
  41343e:	and    eax,DWORD PTR [edi-0x3c]
  413441:	mov    ah,0xd7
  413443:	pop    es
  413444:	xor    BYTE PTR [edx+edi*2+0x38],0xdc
  413449:	xor    dl,ah
  41344b:	fld    DWORD PTR [esi-0x62]
  41344e:	pop    ebp
  41344f:	jle    0x4134a2
  413451:	and    eax,0x9807a625
  413456:	jo     0x413484
  413458:	imul   esp,ebp,0xffffffe5
  41345b:	and    dh,BYTE PTR [ebx]
  41345d:	cdq    
  41345e:	jo     0x4133ee
  413460:	cs jnp 0x413441
  413463:	cld    
  413464:	inc    ebp
  413465:	lock ss dec edi
  413468:	sub    DWORD PTR [ecx+0xedcc418],ebp
  41346e:	iret   
  41346f:	mov    al,ds:0xf6d3eda8
  413474:	mov    ebx,0x3d7caacf
  413479:	or     al,0x1a
  41347b:	test   eax,0x62dea003
  413480:	sbb    al,0xd7
  413482:	std    
  413483:	cmp    BYTE PTR [esi+0x21a35b3e],cl
  413489:	and    edi,DWORD PTR [esi]
  41348b:	jns    0x4134b7
  41348d:	add    ebx,edi
  41348f:	adc    ah,0x54
  413492:	mov    ebp,0x3a28c519
  413497:	out    dx,eax
  413498:	out    dx,eax
  413499:	mov    al,0x34
  41349b:	push   ebx
  41349c:	in     eax,dx
  41349d:	nop
  41349e:	cmp    DWORD PTR [edx-0x1f7cc503],ecx
  4134a4:	sub    BYTE PTR [edi-0x7f],0xaf
  4134a8:	cmp    ch,BYTE PTR [eax-0x14]
  4134ab:	aaa    
  4134ac:	or     ch,dh
  4134ae:	aad    0x22
  4134b0:	pop    ds
  4134b1:	xor    esp,ebx
  4134b3:	pop    es
  4134b4:	ret    0x70f
  4134b7:	mov    eax,0x70f8eb7c
  4134bc:	fsub   QWORD PTR [edi+0x30]
  4134bf:	xor    ebp,DWORD PTR [ebx]
  4134c1:	outs   dx,DWORD PTR ds:[esi]
  4134c2:	add    ebx,DWORD PTR [edx-0xb]
  4134c5:	jae    0x413502
  4134c7:	xchg   ecx,eax
  4134c8:	xlat   BYTE PTR ds:[ebx]
  4134c9:	dec    esp
  4134ca:	scas   al,BYTE PTR es:[edi]
  4134cb:	jo     0x413519
  4134cd:	test   al,0xcb
  4134cf:	mov    ds:0xea4dfe4b,eax
  4134d4:	pop    eax
  4134d5:	dec    ebp
  4134d6:	cmp    DWORD PTR [edi+0x27],0xffffffab
  4134da:	cdq    
  4134db:	cmp    al,BYTE PTR [edx]
  4134dd:	je     0x41355a
  4134df:	cld    
  4134e0:	xchg   esi,ecx
  4134e2:	mov    WORD PTR [edx-0x6f418b3b],ss
  4134e8:	outs   dx,BYTE PTR ds:[esi]
  4134e9:	mov    ds:0x39f06f,al
  4134ee:	inc    ebx
  4134ef:	jo     0x4134f4
  4134f1:	das    
  4134f2:	rol    al,cl
  4134f4:	pop    ecx
  4134f5:	and    edi,ecx
  4134f7:	fadd   st(5),st
  4134fa:	pop    es
  4134fb:	jne    0x413569
  4134fd:	sub    al,BYTE PTR [edx-0x784cee2e]
  413503:	mov    ebp,0xbb24501d
  413508:	mov    edi,0x221c4e60
  41350d:	loopne 0x41354a
  41350f:	jnp    0x413563
  413511:	sbb    ch,BYTE PTR [edi-0x4c]
  413514:	in     al,dx
  413515:	or     eax,0x918d8b2d
  41351a:	push   0xa8fdbe07
  41351f:	cmc    
  413520:	mov    cl,0x8b
  413522:	adc    esp,DWORD PTR [edi]
  413524:	retf   0x5b9c
  413527:	or     esp,ecx
  413529:	test   ch,dl
  41352b:	test   DWORD PTR [ecx-0x36091aee],eax
  413531:	mov    WORD PTR [ecx+esi*4-0x2f],ss
  413535:	or     eax,0xfc031aa5
  41353a:	ret    0xcf6b
  41353d:	rcr    DWORD PTR [ebx-0x41],cl
  413540:	sbb    DWORD PTR [edi],esp
  413542:	scas   al,BYTE PTR es:[edi]
  413543:	mov    eax,0x9d5d88d2
  413548:	(bad)  
  413549:	mov    bh,0x89
  41354b:	int3   
  41354c:	jb     0x413573
  41354e:	adc    BYTE PTR [eax],bl
  413550:	pop    ds
  413551:	push   ecx
  413552:	in     al,0x31
  413554:	mov    eax,0x22a067be
  413559:	scas   al,BYTE PTR es:[edi]
  41355a:	and    bh,BYTE PTR [ebx+0xe788f25]
  413560:	push   edx
  413561:	lods   al,BYTE PTR ds:[esi]
  413562:	pop    esi
  413563:	xor    DWORD PTR [esi+eax*1],edx
  413566:	jnp    0x4135d8
  413568:	xchg   esi,eax
  413569:	rol    esp,cl
  41356b:	out    0x64,al
  41356d:	pop    eax
  41356e:	sbb    edx,esp
  413570:	shl    eax,0xdf
  413573:	outs   dx,BYTE PTR ds:[esi]
  413574:	xor    edi,DWORD PTR [esi]
  413576:	sub    eax,0x7945f1d2
  41357b:	mov    ecx,0x7d07b1
  413580:	mov    ebx,0x4885cc7a
  413585:	pop    es
  413586:	jmp    0x8d0c3b4
  41358b:	aas    
  41358c:	lds    esp,FWORD PTR [ecx+0x46ccd691]
  413592:	push   esp
  413593:	(bad)  
  413594:	mov    ds:0x16694cfb,al
  413599:	xor    ebx,DWORD PTR [eax+0xbb077e6]
  41359f:	das    
  4135a0:	cmp    BYTE PTR [ebp-0x3eb0d5de],bl
  4135a6:	js     0x41352f
  4135a8:	jno    0x413628
  4135aa:	mov    bl,0x74
  4135ac:	rcl    DWORD PTR [eax],1
  4135ae:	retw   0x1b1d
  4135b2:	mov    ds:0xb3cc6c15,eax
  4135b7:	jl     0x413585
  4135b9:	ficom  DWORD PTR [ebp-0x39]
  4135bc:	inc    edx
  4135bd:	aaa    
  4135be:	mov    eax,0x56442197
  4135c3:	scas   al,BYTE PTR es:[edi]
  4135c4:	imul   ebx,DWORD PTR [esi+0x4b],0xffffffd1
  4135c8:	and    ebx,DWORD PTR [edi]
  4135ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135cb:	xchg   esp,eax
  4135cc:	inc    ecx
  4135cd:	loop   0x41363d
  4135cf:	rcl    BYTE PTR [ecx+0x1c080b20],0x1e
  4135d6:	aaa    
  4135d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135d8:	das    
  4135d9:	xor    DWORD PTR [ecx],ebp
  4135db:	mov    BYTE PTR [edx+0x1c2683c],bl
  4135e1:	mov    al,ds:0xb455c536
  4135e6:	lods   al,BYTE PTR ds:[esi]
  4135e7:	xchg   ebx,eax
  4135e8:	jmp    0xd930581
  4135ed:	and    esi,ecx
  4135ef:	jbe    0x4135b7
  4135f1:	jecxz  0x413616
  4135f3:	ja     0x41357f
  4135f5:	inc    ecx
  4135f6:	je     0x41363e
  4135f8:	mov    cs,WORD PTR [edx]
  4135fa:	cmp    DWORD PTR [eax],edi
  4135fc:	mov    al,ds:0x197a7c85
  413601:	outs   dx,BYTE PTR ds:[esi]
  413602:	xchg   ebx,eax
  413603:	pop    edx
  413604:	pop    ebx
  413605:	xchg   esi,eax
  413606:	pusha  
  413607:	adc    eax,0xd617bf97
  41360c:	add    eax,0x53ca63d4
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	sti    
  413613:	sub    eax,0x5ccc598e
  413618:	push   esi
  413619:	adc    al,0x4d
  41361b:	outs   dx,DWORD PTR ds:[esi]
  41361c:	cli    
  41361d:	ret    0xbeec
  413620:	xchg   ebx,eax
  413621:	adc    eax,edx
  413623:	sub    al,0xf0
  413625:	(bad)  
  413626:	xor    edi,DWORD PTR ds:0x1097e114
  41362c:	sub    ch,BYTE PTR [eax+0x65836259]
  413632:	(bad)  
  413633:	(bad)
  413636:	push   es
  413637:	shl    bh,cl
  413639:	clc    
  41363a:	or     edi,DWORD PTR [ecx-0x4e04b23c]
  413640:	dec    edi
  413641:	stc    
  413642:	jle    0x413657
  413644:	pop    edx
  413645:	mov    ecx,0x7f41c9ab
  41364a:	shl    ah,0x71
  41364d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41364e:	dec    ecx
  41364f:	jmp    0xa057:0x25552ef6
  413656:	enter  0x9514,0x18
  41365a:	mov    edx,DWORD PTR [esi]
  41365c:	inc    edi
  41365d:	cli    
  41365e:	sbb    dh,BYTE PTR [ecx-0x13c3eef6]
  413664:	jmp    0x413696
  413666:	gs jmp 0x8ef1:0xb101f813
  41366e:	(bad)  
  41366f:	xor    eax,0xc786cb39
  413674:	dec    ebx
  413675:	pusha  
  413676:	mov    dh,0xe9
  413678:	fwait
  413679:	pusha  
  41367a:	cmp    eax,0x354ced94
  41367f:	and    BYTE PTR [eax+esi*8-0x4c6a1b05],0x2f
  413687:	push   0xffffff8a
  413689:	push   ebx
  41368a:	ficom  WORD PTR [edx-0x5e]
  41368d:	pop    ecx
  41368e:	popa   
  41368f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413690:	sub    esp,DWORD PTR [ecx+0x72]
  413693:	test   DWORD PTR [edi],esi
  413695:	mov    bl,0xf
  413697:	repnz xlat BYTE PTR ds:[ebx]
  413699:	pop    esi
  41369a:	aad    0xbc
  41369c:	int3   
  41369d:	fsubr  QWORD PTR [edi-0x5eacc36]
  4136a3:	xor    DWORD PTR [ebx],0xda690b6a
  4136a9:	jmp    0x8efacd77
  4136ae:	rcr    DWORD PTR [eax-0x1e059113],cl
  4136b4:	pusha  
  4136b5:	aas    
  4136b6:	and    eax,0x47f23ad7
  4136bb:	or     al,0x7d
  4136bd:	dec    ebx
  4136be:	sub    eax,0xddd8ac0f
  4136c3:	sub    bh,0x70
  4136c6:	mov    ebx,0x47e95258
  4136cb:	add    esi,edi
  4136cd:	cmc    
  4136ce:	dec    edi
  4136cf:	add    BYTE PTR [ebx],bl
  4136d1:	jmp    0x8a751ed5
  4136d6:	imul   eax,DWORD PTR [edx],0x1e
  4136d9:	ja     0x4136f3
  4136db:	xchg   DWORD PTR [ebx],eax
  4136dd:	aaa    
  4136de:	nop
  4136df:	rcl    BYTE PTR [edi+0x37c44ddc],cl
  4136e5:	sub    eax,0x30836865
  4136ea:	popa   
  4136eb:	adc    dl,BYTE PTR [ebx-0x6eec62f4]
  4136f1:	xor    DWORD PTR [ebx-0x72],ecx
  4136f4:	xor    dl,BYTE PTR [ebp+0x67c32b35]
  4136fa:	push   esi
  4136fb:	cmp    DWORD PTR [ebx-0x2d],0x4
  4136ff:	pushf  
  413700:	xchg   ebx,eax
  413701:	mov    edi,0x96306ab6
  413706:	mov    ?,ebx
  413708:	mov    al,ds:0xe5cf8f8f
  41370e:	es jge 0x413747
  413711:	fwait
  413712:	push   esp
  413713:	mov    dl,0xe9
  413715:	pop    ds
  413716:	movd   edi,mm5
  413719:	dec    edx
  41371a:	ror    DWORD PTR [eax+0x2bf5aabc],0xaf
  413721:	loopne 0x41376c
  413723:	push   cs
  413724:	rol    DWORD PTR [esi-0xc821860],1
  41372a:	in     al,0xd
  41372c:	jae    0x41374e
  41372e:	inc    esi
  41372f:	lds    eax,FWORD PTR [eax+0x50ae93de]
  413735:	pop    esp
  413736:	jp     0x41373d
  413738:	inc    esi
  413739:	call   0xc36b:0x5e6a947a
  413740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413741:	and    ch,BYTE PTR [edx-0x12068825]
  413747:	in     eax,dx
  413748:	(bad)  
  413749:	in     eax,dx
  41374a:	add    al,0x94
  41374c:	inc    ebp
  41374d:	test   al,0x66
  41374f:	pop    ss
  413750:	sub    al,0xe5
  413752:	push   esi
  413753:	ins    BYTE PTR es:[edi],dx
  413754:	mov    ebp,0xe241a561
  413759:	gs or  eax,0x4a4c4fd9
  41375f:	clc    
  413760:	aas    
  413761:	push   esi
  413762:	or     BYTE PTR [edi*4-0x69c076d8],dh
  413769:	in     eax,dx
  41376a:	mov    dh,0xdb
  41376c:	push   edx
  41376d:	dec    edx
  41376e:	daa    
  41376f:	xchg   esi,eax
  413770:	or     DWORD PTR [ebp+0x4eedda96],edx
  413776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413777:	mov    cl,0x69
  413779:	and    eax,0xcb98d463
  41377e:	shr    al,1
  413780:	xor    ah,BYTE PTR [eax]
  413782:	xchg   ecx,eax
  413783:	inc    ecx
  413784:	cmp    DWORD PTR [eax+0x14],esi
  413787:	inc    edi
  413788:	addr16 jno 0x4137d1
  41378b:	xchg   ebx,eax
  41378c:	call   0x3858e195
  413791:	mov    bl,0xe3
  413793:	aam    0x32
  413795:	(bad)  
  413796:	jns    0x4137a4
  413798:	and    BYTE PTR [edx],ah
  41379a:	push   edx
  41379b:	and    edi,ebp
  41379d:	sbb    al,0xdc
  41379f:	popf   
  4137a0:	scas   eax,DWORD PTR es:[edi]
  4137a1:	lock mov es,WORD PTR gs:[esi+0x15]
  4137a6:	xchg   al,bl
  4137a8:	mov    eax,es:0xcaa0a3ce
  4137ae:	fwait
  4137af:	sub    al,0x27
  4137b1:	cmp    eax,0x53a1d9d0
  4137b6:	sbb    ebx,DWORD PTR [ebx+0x49fa0eb]
  4137bc:	and    DWORD PTR [eax+0x77917236],edx
  4137c2:	pop    ebp
  4137c3:	adc    eax,edx
  4137c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137c6:	or     al,BYTE PTR [edx]
  4137c8:	out    0x44,al
  4137ca:	nop
  4137cb:	ret    0x5970
  4137ce:	add    BYTE PTR [ebx],0x85
  4137d1:	rol    DWORD PTR [ecx],0x69
  4137d4:	pop    ds
  4137d5:	dec    eax
  4137d6:	aad    0xd
  4137d8:	mov    ebx,0x1fed9c0f
  4137dd:	add    ebx,esp
  4137df:	into   
  4137e0:	adc    ebx,DWORD PTR [ebp-0x431a621c]
  4137e6:	dec    ebp
  4137e7:	mov    al,ds:0x32e9e405
  4137ec:	xor    eax,0x927ba417
  4137f1:	xchg   al,ch
  4137f3:	adc    BYTE PTR [ebx+0x4f],0x3
  4137f7:	sar    DWORD PTR [ecx+0x5407b3bd],1
  4137fd:	fwait
  4137fe:	or     ch,dl
  413800:	out    0xae,eax
  413802:	mul    BYTE PTR [eax-0x6e]
  413805:	sbb    edx,esp
  413807:	sub    eax,0x52dde34c
  41380c:	jg     0x413827
  41380e:	xor    dl,BYTE PTR [ebx+ebx*8]
  413811:	jmp    0x161f:0xef794382
  413818:	fnstsw WORD PTR [esi]
  41381a:	adc    eax,0xb74f4294
  41381f:	pop    edx
  413820:	fld    QWORD PTR [edi+0x5f009529]
  413826:	dec    edi
  413827:	add    al,0xa5
  413829:	stos   BYTE PTR es:[edi],al
  41382a:	jmp    0x2970beee
  41382f:	ror    DWORD PTR [edx+eax*2+0x34b8e91d],cl
  413836:	xor    ebx,ebx
  413838:	xchg   ebx,eax
  413839:	inc    ecx
  41383a:	adc    DWORD PTR [eax],esp
  41383c:	sub    BYTE PTR [ecx],dh
  41383e:	les    ebp,FWORD PTR [edi-0x5e]
  413841:	call   DWORD PTR [ebx+0x7d]
  413844:	retf   0x962d
  413847:	fidivr WORD PTR [eax-0x58c9bca6]
  41384d:	out    dx,al
  41384e:	dec    ebx
  41384f:	jl     0x413811
  413851:	xor    eax,0x308f937c
  413856:	pop    ebp
  413857:	xchg   edi,eax
  413858:	or     ecx,DWORD PTR [ebx-0x55]
  41385b:	mov    al,ds:0x84bb9633
  413860:	aas    
  413861:	or     eax,0x6a5f1bae
  413866:	sbb    ebx,DWORD PTR [ecx-0x369ef5e3]
  41386c:	stc    
  41386d:	mov    dh,0x1a
  41386f:	mov    eax,0x8ec887bc
  413874:	in     al,dx
  413875:	jns    0x4138de
  413877:	sahf   
  413878:	outs   dx,DWORD PTR ds:[esi]
  413879:	sub    eax,0x39169cbd
  41387e:	xor    al,0x69
  413880:	jmp    0x413877
  413882:	loope  0x413897
  413884:	retf   
  413885:	mov    edx,0xd3f347bf
  41388a:	xchg   ecx,eax
  41388b:	mov    ebx,0xf8bcc549
  413890:	mov    ebx,0x20186361
  413895:	out    0x15,al
  413897:	inc    edx
  413898:	adc    al,0x5a
  41389a:	imul   ecx,DWORD PTR ds:0x19a1cec0,0x80adbca5
  4138a4:	inc    ebp
  4138a5:	pop    edx
  4138a6:	test   al,0xda
  4138a8:	sbb    DWORD PTR [ebx-0x30d2430c],0x3f
  4138af:	or     ch,BYTE PTR [ebp-0x70]
  4138b2:	mov    ds,WORD PTR [eax+edi*2]
  4138b5:	xlat   BYTE PTR ds:[ebx]
  4138b6:	stos   DWORD PTR es:[edi],eax
  4138b7:	out    0xd5,al
  4138b9:	aas    
  4138ba:	adc    BYTE PTR [eax],al
  4138bc:	push   ebx
  4138bd:	sbb    ah,BYTE PTR [edx+0x1c55f586]
  4138c3:	dec    esp
  4138c4:	lods   eax,DWORD PTR ds:[esi]
  4138c5:	push   ebx
  4138c6:	sub    edi,0x4a0a4dbf
  4138cc:	pop    esp
  4138cd:	out    dx,eax
  4138ce:	add    ebp,DWORD PTR [ecx+0x6dec19ad]
  4138d4:	xor    ah,BYTE PTR [esi+0x7e]
  4138d7:	shl    BYTE PTR [esi+edi*2],0x9b
  4138db:	mov    ah,0x58
  4138dd:	mov    dh,0x73
  4138df:	(bad)  
  4138e0:	or     eax,0xe318fd6
  4138e5:	out    0x16,al
  4138e7:	dec    ebx
  4138e8:	mov    bl,0x3d
  4138ea:	jge    0x41390c
  4138ec:	dec    esi
  4138ed:	mov    dh,0xe9
  4138ef:	xor    BYTE PTR [edx-0x7f],ch
  4138f2:	test   al,0x99
  4138f4:	cdq    
  4138f5:	fstp   DWORD PTR [ebp-0x49]
  4138f8:	in     al,dx
  4138f9:	jmp    0x4138fa
  4138fb:	ins    DWORD PTR es:[edi],dx
  4138fc:	push   ds
  4138fd:	xchg   ebx,eax
  4138fe:	or     al,0x49
  413900:	(bad)  
  413901:	mov    ds:0x7bde7450,eax
  413906:	shl    DWORD PTR [edi],1
  413908:	mov    esi,0xafae3987
  41390d:	sbb    al,0x9
  41390f:	stos   BYTE PTR es:[edi],al
  413910:	inc    edx
  413911:	mov    ah,0x9f
  413913:	inc    edi
  413914:	jno    0x4138c4
  413916:	fimul  WORD PTR [ebp-0x9]
  413919:	into   
  41391a:	xor    eax,0x1cfde996
  41391f:	adc    eax,0x7d1675b8
  413924:	dec    ecx
  413925:	pop    es
  413926:	cmc    
  413927:	inc    dx
  413929:	xchg   esi,eax
  41392a:	hlt    
  41392b:	fst    QWORD PTR [ecx+0x7899a707]
  413931:	add    bl,dh
  413933:	iret   
  413934:	in     eax,0xb3
  413936:	pusha  
  413937:	and    eax,0x31fb5845
  41393c:	clc    
  41393d:	adc    ecx,0xe79fb5ef
  413943:	outs   dx,DWORD PTR ds:[esi]
  413944:	fld    DWORD PTR [edi+0x56d93d0a]
  41394a:	adc    eax,0xc927db83
  41394f:	mov    dh,0xb0
  413951:	(bad)
  413955:	fwait
  413956:	rcl    BYTE PTR [eax-0x6bbd7b16],cl
  41395c:	pop    ebp
  41395d:	cmp    cl,ah
  41395f:	or     edi,edi
  413961:	mov    dl,0xb1
  413963:	jnp    0x4139c8
  413965:	pop    es
  413966:	stc    
  413967:	sub    ebp,DWORD PTR [edi+ecx*8]
  41396a:	push   0x8b6c027
  41396f:	jl     0x41397c
  413971:	test   DWORD PTR [esi],edx
  413973:	and    eax,0xd32d1203
  413978:	hlt    
  413979:	jbe    0x413947
  41397b:	adc    ecx,DWORD PTR cs:[ebx+edi*4-0x12]
  413980:	nop
  413981:	popa   
  413982:	ins    BYTE PTR es:[edi],dx
  413983:	std    
  413984:	lahf   
  413985:	into   
  413986:	gs mov cl,0x97
  413989:	add    eax,0xce166d6f
  41398e:	xchg   ebp,eax
  41398f:	sub    ebx,ebp
  413991:	cmp    eax,0x81c62fce
  413996:	pop    ecx
  413997:	aad    0x6
  413999:	test   al,0x46
  41399b:	lds    ecx,FWORD PTR [ebx+ecx*2-0x9e868f8]
  4139a2:	loopne 0x413a09
  4139a4:	xor    al,0x37
  4139a6:	repnz std 
  4139a8:	pop    ebp
  4139a9:	mov    esp,0x95704413
  4139ae:	and    BYTE PTR [edx-0x34dd9ccf],al
  4139b4:	jnp    0x4139dc
  4139b6:	and    eax,0xa28a767d
  4139bb:	cmp    BYTE PTR [edi],cl
  4139bd:	sqrtps xmm7,XMMWORD PTR [eax+0x49]
  4139c1:	inc    esp
  4139c2:	adc    BYTE PTR [ebx-0x21b4b685],cl
  4139c8:	cmp    al,0x89
  4139ca:	stos   BYTE PTR es:[edi],al
  4139cb:	lock cmc 
  4139cd:	test   eax,0x46ff81c4
  4139d2:	dec    ebx
  4139d3:	std    
  4139d4:	cs pop edx
  4139d6:	xor    DWORD PTR [ecx-0x75],esp
  4139d9:	mov    WORD PTR [ecx+esi*1-0x44cedad4],ds
  4139e0:	inc    eax
  4139e1:	jnp    0x413a0e
  4139e3:	mov    esp,0x2daeb0f6
  4139e8:	popf   
  4139e9:	xor    bh,bl
  4139eb:	fdiv   QWORD PTR [eax-0x48]
  4139ee:	jns    0x413a63
  4139f0:	sbb    al,0x25
  4139f2:	adc    ecx,ebx
  4139f4:	clc    
  4139f5:	mov    ebp,0x88568f8c
  4139fa:	jle    0x413991
  4139fc:	(bad)  [ebx+0xe]
  4139ff:	sbb    ebp,0xffffffe8
  413a02:	iret   
  413a03:	ucomiss xmm6,DWORD PTR [ecx+0x2f55434f]
  413a0a:	fisttp DWORD PTR [edx]
  413a0c:	cld    
  413a0d:	retf   0x3c70
  413a10:	aad    0x63
  413a12:	push   0xffffff9f
  413a14:	sbb    edi,ecx
  413a16:	push   eax
  413a17:	fadd   DWORD PTR [edi]
  413a19:	shr    BYTE PTR [esi+eiz*4],cl
  413a1c:	xchg   ebp,ebx
  413a1e:	mov    ebx,0xf8b29988
  413a23:	cmp    BYTE PTR [edi+0x7],ah
  413a26:	or     al,0x56
  413a28:	fwait
  413a29:	xchg   edx,eax
  413a2a:	mov    al,ds:0x73c59f76
  413a2f:	retf   
  413a30:	(bad)  
  413a32:	daa    
  413a33:	mov    dh,0x10
  413a35:	inc    ebx
  413a36:	bound  edx,QWORD PTR [ebx]
  413a38:	rcr    BYTE PTR [edx],cl
  413a3a:	cmp    al,0x14
  413a3c:	xchg   esi,eax
  413a3d:	push   eax
  413a3e:	out    dx,al
  413a3f:	test   DWORD PTR [ebx],ecx
  413a41:	fadd   QWORD PTR [ebx]
  413a43:	fisub  WORD PTR [edx]
  413a45:	sar    dh,cl
  413a47:	cwde   
  413a48:	inc    esi
  413a49:	imul   ebx,DWORD PTR [ecx+0x72],0x6b
  413a4d:	mov    al,0xa5
  413a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a51:	gs pusha 
  413a53:	nop
  413a54:	lods   eax,DWORD PTR ds:[esi]
  413a55:	dec    edx
  413a56:	gs mov edx,0xeab38bce
  413a5c:	mov    dh,dl
  413a5e:	mov    ch,0xd1
  413a60:	lea    ebx,[edi]
  413a62:	and    ch,cl
  413a64:	mov    ecx,0xdf755c4e
  413a69:	jg     0x413ad0
  413a6b:	call   0x8740a483
  413a70:	mov    edx,0x7685b344
  413a75:	sub    al,0xe9
  413a77:	push   0x8004ab18
  413a7c:	fisubr DWORD PTR [eax+0x36]
  413a7f:	std    
  413a80:	ret    
  413a81:	sub    eax,0x494c3c7d
  413a86:	ret    
  413a87:	loope  0x413a78
  413a89:	pop    edx
  413a8a:	adc    al,0xa
  413a8c:	das    
  413a8d:	cmc    
  413a8e:	pop    esi
  413a8f:	cwde   
  413a90:	test   eax,0xc99e01c1
  413a95:	in     al,0xe4
  413a97:	add    DWORD PTR [edi],ebp
  413a99:	ret    0xbbe7
  413a9c:	loop   0x413aef
  413a9e:	test   DWORD PTR [edx+0xa],0x1234bc96
  413aa5:	sub    eax,0xd60633e
  413aaa:	adc    BYTE PTR [edx+eiz*4+0x16],0x1b
  413aaf:	mov    DWORD PTR [edi],0x8ee36ae3
  413ab5:	aaa    
  413ab6:	enter  0x60ee,0x9d
  413aba:	adc    eax,0xc9d42e62
  413abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ac0:	sahf   
  413ac1:	shr    BYTE PTR [ebp+0x6c1278b5],cl
  413ac7:	loop   0x413add
  413ac9:	ficom  DWORD PTR [edx]
  413acb:	arpl   WORD PTR [edx],sp
  413acd:	leave  
  413ace:	xor    DWORD PTR [edx+0x25],ebx
  413ad1:	int    0x66
  413ad3:	mov    al,0x6e
  413ad5:	lock jg 0x413a9b
  413ad8:	inc    esi
  413ad9:	scas   eax,DWORD PTR es:[edi]
  413ada:	(bad)  
  413adb:	xor    edi,edx
  413add:	cmp    eax,0x2ec3436a
  413ae2:	popf   
  413ae3:	ins    BYTE PTR es:[edi],dx
  413ae4:	dec    ecx
  413ae5:	pusha  
  413ae6:	xchg   BYTE PTR [eax+0x7994ffb5],cl
  413aec:	stos   DWORD PTR es:[edi],eax
  413aed:	push   0xfffffff7
  413aef:	test   BYTE PTR [edx-0x1a],al
  413af2:	pop    ebp
  413af3:	adc    bl,bh
  413af5:	mov    eax,ds:0x263ac91e
  413afa:	cmp    al,0xc5
  413afc:	jmp    0x536be3e2
  413b01:	loop   0x413b6a
  413b03:	dec    eax
  413b04:	addr16 push ecx
  413b06:	arpl   ax,di
  413b08:	aad    0xbd
  413b0a:	pop    edi
  413b0b:	mov    ds:0x6a4e5a31,eax
  413b10:	xchg   edx,eax
  413b11:	imul   edi,DWORD PTR [ecx+0x54],0x6f48bbed
  413b18:	xor    eax,0x459b545c
  413b1d:	fucomp st(1)
  413b1f:	mov    al,0xd5
  413b21:	jl     0x413af2
  413b23:	mov    BYTE PTR [ebp-0x19390fad],bh
  413b29:	jle    0x413b0f
  413b2b:	cli    
  413b2c:	adc    cl,BYTE PTR [ecx-0x449ca020]
  413b32:	mov    ecx,0x8b537c6c
  413b37:	dec    ebp
  413b38:	dec    eax
  413b39:	scas   al,BYTE PTR es:[edi]
  413b3a:	pusha  
  413b3b:	aaa    
  413b3c:	stos   DWORD PTR es:[edi],eax
  413b3d:	inc    esi
  413b3e:	sbb    al,0x9a
  413b40:	call   FWORD PTR [edx-0x78]
  413b43:	aad    0xf7
  413b45:	ficomp DWORD PTR [ebx+0x43b088f7]
  413b4b:	rcl    BYTE PTR [ecx-0x6d0a66f5],cl
  413b51:	pop    ebp
  413b52:	mov    edx,0xa0469395
  413b57:	rcr    BYTE PTR [ebx-0x450fb7da],cl
  413b5d:	push   esp
  413b5e:	mov    gs,ecx
  413b60:	clc    
  413b61:	adc    ch,dl
  413b63:	mov    bl,0x28
  413b65:	sti    
  413b66:	(bad)  
  413b68:	sar    DWORD PTR [edi-0x18b24ef0],0xd9
  413b6f:	jge    0x413b97
  413b71:	mov    cl,0xc5
  413b73:	fdiv   DWORD PTR [esp+ebx*1]
  413b76:	imul   ecx,DWORD PTR [ebx-0x4de07146],0x36
  413b7d:	scas   eax,DWORD PTR es:[edi]
  413b7e:	inc    ebp
  413b7f:	cmp    cl,0x32
  413b82:	jp     0x413b39
  413b84:	pop    edi
  413b85:	adc    eax,0x9ef9540
  413b8a:	dec    ebp
  413b8b:	lock push esp
  413b8d:	mov    bl,0xe2
  413b8f:	push   es
  413b90:	ins    DWORD PTR es:[edi],dx
  413b91:	lahf   
  413b92:	jl     0x413b90
  413b94:	push   edi
  413b95:	fcmovbe st,st(7)
  413b97:	or     BYTE PTR [ecx],ch
  413b99:	push   ds
  413b9a:	je     0x413b34
  413b9c:	xchg   esp,eax
  413b9d:	inc    ebx
  413b9e:	cmp    ebx,0xffffff9d
  413ba1:	dec    eax
  413ba2:	and    DWORD PTR [eax],ecx
  413ba4:	sbb    eax,0x4f6bc290
  413ba9:	out    dx,eax
  413baa:	loop   0x413ba9
  413bac:	and    dl,BYTE PTR [edi]
  413bae:	mov    dl,0xc9
  413bb0:	jp     0x413b5f
  413bb2:	out    dx,al
  413bb3:	pop    ebp
  413bb4:	mov    ds,WORD PTR [edi]
  413bb6:	mov    esp,ebp
  413bb8:	retf   
  413bb9:	and    dl,BYTE PTR fs:[esi-0x70]
  413bbd:	stos   BYTE PTR es:[edi],al
  413bbe:	int3   
  413bbf:	aas    
  413bc0:	lahf   
  413bc1:	mov    bh,0xf1
  413bc3:	adc    dl,BYTE PTR [ecx]
  413bc5:	rol    BYTE PTR [esi+0x624fb036],cl
  413bcb:	loop   0x413c34
  413bcd:	addr16 jge 0x413b81
  413bd0:	ret    
  413bd1:	out    dx,eax
  413bd2:	mov    bl,0x82
  413bd4:	popf   
  413bd5:	push   ebp
  413bd6:	call   0x47b5:0x274ac9e0
  413bdd:	es pop eax
  413bdf:	fstp   TBYTE PTR [eax+ebx*2]
  413be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be3:	jno    0x413b94
  413be5:	push   edi
  413be6:	mov    ch,0x45
  413be8:	xor    edi,DWORD PTR [esi+0x57]
  413beb:	jo     0x413bb8
  413bed:	jae    0x413bba
  413bef:	stc    
  413bf0:	mov    ds:0xe7073f90,eax
  413bf5:	das    
  413bf6:	jne    0x413c63
  413bf8:	std    
  413bf9:	outs   dx,DWORD PTR ds:[esi]
  413bfa:	popf   
  413bfb:	das    
  413bfc:	imul   DWORD PTR [edx-0x6c]
  413bff:	in     al,dx
  413c00:	adc    eax,0xa3de2517
  413c05:	cmp    bl,cl
  413c07:	or     ebp,DWORD PTR [ebx+esi*1+0x2f]
  413c0b:	fstp   QWORD PTR [ecx+0x17e1e6e]
  413c11:	lock push 0x38eaf38a
  413c17:	fnstenv [ecx-0x4a]
  413c1a:	dec    ebx
  413c1b:	loop   0x413c68
  413c1d:	pop    ecx
  413c1e:	jmp    0xf712:0xa3f71a78
  413c25:	(bad)  
  413c26:	adc    esp,ecx
  413c28:	push   ecx
  413c29:	retf   0x11f0
  413c2c:	daa    
  413c2d:	fisttp DWORD PTR [edi-0x4f]
  413c30:	cdq    
  413c31:	pop    es
  413c32:	and    al,0x21
  413c34:	clc    
  413c35:	and    BYTE PTR [edi],bl
  413c37:	cmp    dl,BYTE PTR [eax]
  413c39:	inc    edi
  413c3a:	inc    ecx
  413c3b:	in     eax,dx
  413c3c:	sbb    DWORD PTR [edi-0x56],0xffffffff
  413c40:	sahf   
  413c41:	fucomp st(5)
  413c43:	xor    al,0x24
  413c45:	adc    cl,BYTE PTR [edi-0x5c854dc9]
  413c4b:	jle    0x413c6b
  413c4d:	xor    BYTE PTR [eax+0x45f6c975],0x18
  413c54:	xor    al,BYTE PTR [edi-0x38]
  413c57:	es mov eax,0x77eb88b4
  413c5d:	pop    ss
  413c5e:	mov    dh,0x1c
  413c60:	mov    ecx,0x4428686b
  413c65:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413c67:	pop    esp
  413c68:	xchg   edi,eax
  413c69:	mov    dl,0x0
  413c6b:	scas   eax,DWORD PTR es:[edi]
  413c6c:	pop    esi
  413c6d:	popf   
  413c6e:	in     al,dx
  413c6f:	pop    eax
  413c70:	inc    eax
  413c71:	add    ah,al
  413c73:	mov    dh,0x5c
  413c75:	jmp    0x413c71
  413c77:	jge    0x413ce3
  413c79:	adc    bl,BYTE PTR [edi]
  413c7b:	mov    ds:0x3e00e62,al
  413c80:	in     eax,dx
  413c81:	jl     0x413c79
  413c83:	xlat   BYTE PTR ds:[ebx]
  413c84:	and    eax,0x2f635b9b
  413c89:	ss mov edx,0x996db614
  413c8f:	inc    ebp
  413c90:	int    0xfa
  413c92:	pop    ecx
  413c93:	in     al,0x4d
  413c95:	loope  0x413c6d
  413c97:	scas   al,BYTE PTR es:[edi]
  413c98:	mov    al,0xd7
  413c9a:	daa    
  413c9b:	(bad)  
  413c9c:	popa   
  413c9d:	inc    esp
  413c9e:	mov    ah,0x9a
  413ca0:	fnsave ds:0xa4d8c1ec
  413ca6:	test   ch,bl
  413ca8:	call   0x3ba6:0xf19d54d4
  413caf:	inc    ebx
  413cb0:	pop    esi
  413cb1:	mov    al,ds:0x64463085
  413cb6:	std    
  413cb7:	sahf   
  413cb8:	scas   eax,DWORD PTR es:[edi]
  413cb9:	mov    ds:0xa109a262,eax
  413cbe:	inc    edi
  413cbf:	(bad)  
  413cc1:	fcmovu st,st(0)
  413cc3:	xor    DWORD PTR [eax],eax
  413cc5:	aam    0x7c
  413cc7:	pusha  
  413cc8:	shr    ch,0x57
  413ccb:	adc    al,0x72
  413ccd:	pop    ds
  413cce:	fnstsw WORD PTR [edi+edx*4]
  413cd1:	fsub   DWORD PTR [esi]
  413cd3:	mov    ds:0x94b56341,eax
  413cd8:	test   eax,0x9c9a3a56
  413cdd:	mul    esp
  413cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ce0:	imul   ebx,ebp,0x9df57e99
  413ce6:	inc    ebp
  413ce7:	push   ss
  413ce8:	mov    esp,ecx
  413cea:	pop    ebp
  413ceb:	and    eax,0xbb4e632e
  413cf0:	std    
  413cf1:	cdq    
  413cf2:	rcl    DWORD PTR [esi+0x2d],cl
  413cf5:	int3   
  413cf6:	cwde   
  413cf7:	sbb    al,0x9c
  413cf9:	(bad)  
  413cfa:	ror    DWORD PTR [esi-0x7335fa48],1
  413d00:	inc    edx
  413d01:	cmc    
  413d02:	sbb    ecx,eax
  413d04:	mov    ah,0x6a
  413d06:	bound  eax,QWORD PTR [ecx-0x4e]
  413d09:	and    ah,dh
  413d0b:	pushf  
  413d0c:	mov    ebp,0x37bc38d7
  413d11:	cs test bh,0x8f
  413d15:	ss test eax,0xb076f76d
  413d1b:	(bad)  
  413d1c:	cmp    DWORD PTR [eax+0x5129ca64],ebp
  413d22:	inc    ebp
  413d23:	mov    WORD PTR [ebp+0x1c],ds
  413d26:	mov    cs,WORD PTR [ecx+0x53]
  413d29:	jge    0x413d0f
  413d2b:	into   
  413d2c:	and    ebx,DWORD PTR [eax-0x77]
  413d2f:	fnstsw WORD PTR [ebp+0x44dbc525]
  413d35:	ror    BYTE PTR [ebx+0x56],1
  413d38:	stos   BYTE PTR es:[edi],al
  413d39:	in     eax,0x7c
  413d3b:	pushf  
  413d3c:	in     eax,dx
  413d3d:	dec    edx
  413d3e:	mov    edi,DWORD PTR [eax+eax*2-0x1574b403]
  413d45:	test   DWORD PTR ds:0xba9a23bc,eax
  413d4b:	lahf   
  413d4c:	inc    edx
  413d4d:	mov    dl,0x50
  413d4f:	mov    ebx,0xddea4906
  413d54:	dec    edx
  413d55:	mov    ecx,0x964658d4
  413d5a:	(bad)  
  413d5b:	hlt    
  413d5c:	cmc    
  413d5d:	test   eax,0x8c988cf9
  413d62:	je     0x413d0e
  413d64:	daa    
  413d65:	xchg   esi,eax
  413d66:	fs mov cl,0xd4
  413d69:	jne    0x413dd4
  413d6b:	out    dx,al
  413d6c:	jmp    0x549b8a7
  413d71:	ret    
  413d72:	inc    ebx
  413d73:	hlt    
  413d74:	mov    eax,DWORD PTR [edx+0x41e8d319]
  413d7a:	ins    DWORD PTR es:[edi],dx
  413d7b:	pop    esi
  413d7c:	xchg   esp,eax
  413d7d:	cmp    BYTE PTR [ecx],0x2e
  413d80:	loope  0x413d76
  413d82:	les    esi,FWORD PTR ds:0x71a1cb63
  413d88:	push   edx
  413d89:	push   esi
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	jae    0x413dbe
  413d8d:	stos   BYTE PTR es:[edi],al
  413d8e:	push   esp
  413d8f:	jns    0x413d35
  413d91:	push   esi
  413d92:	or     ebp,DWORD PTR [eax]
  413d94:	loop   0x413d69
  413d96:	lods   al,BYTE PTR ds:[esi]
  413d97:	fcmove st,st(6)
  413d99:	pop    ebx
  413d9a:	push   edi
  413d9b:	mov    edx,0x29f7fcea
  413da0:	js     0x413d84
  413da2:	dec    esp
  413da3:	or     eax,0xc9ffdf01
  413da8:	mov    bh,0xf9
  413daa:	pop    eax
  413dab:	mov    ch,al
  413dad:	push   ss
  413dae:	imul   ebx,DWORD PTR [edx-0x704b2c14],0xf08d6378
  413db8:	sbb    DWORD PTR [edx+0x33cf635d],eax
  413dbe:	sbb    edi,DWORD PTR [edi-0x49]
  413dc1:	fs and al,0x88
  413dc4:	xchg   ebp,eax
  413dc5:	jg     0x413dba
  413dc7:	cmc    
  413dc8:	mov    al,BYTE PTR [esi+ecx*1+0x3c]
  413dcc:	add    eax,0x8d208e82
  413dd1:	loop   0x413ddb
  413dd3:	sar    ecx,0x38
  413dd6:	gs sbb eax,0x124775ec
  413ddc:	stc    
  413ddd:	jge    0x413daf
  413ddf:	fucom  st(3)
  413de1:	add    eax,0x53fe9645
  413de6:	push   cs
  413de7:	ins    BYTE PTR es:[edi],dx
  413de8:	nop
  413de9:	loope  0x413e65
  413deb:	iret   
  413dec:	sub    al,0x2b
  413dee:	rcr    DWORD PTR [ebx],cl
  413df0:	into   
  413df1:	adc    al,0xf3
  413df3:	or     cl,ah
  413df5:	or     al,BYTE PTR [eax+0x602149ec]
  413dfb:	hlt    
  413dfc:	bound  esi,QWORD PTR [ebp+0x7e]
  413dff:	fistp  DWORD PTR [ebx+0x6]
  413e02:	test   eax,0xf45cfcfe
  413e07:	cmp    al,0x16
  413e09:	es xchg edi,eax
  413e0b:	lea    ebp,[edi]
  413e0d:	jle    0x413e35
  413e0f:	mov    edx,0x2233b5ba
  413e14:	xchg   esp,eax
  413e15:	imul   ebx,DWORD PTR [esi+ebx*1-0x26f36c2f],0xfcf71f99
  413e20:	and    eax,0x213b55f3
  413e25:	mov    al,BYTE PTR [eax+0x2d72fe78]
  413e2b:	imul   edx,DWORD PTR [ebp-0x5],0x57
  413e2f:	push   esi
  413e30:	xchg   DWORD PTR [ebx],esi
  413e32:	js     0x413e28
  413e34:	arpl   WORD PTR [ebx-0x1e],bp
  413e37:	adc    bh,al
  413e39:	cmp    eax,0x1ac3c35b
  413e3e:	xor    dl,BYTE PTR [ecx+0x23]
  413e41:	add    BYTE PTR [esi],al
  413e43:	jmp    0xf754:0xc49b36ca
  413e4a:	jmp    0x413dee
  413e4c:	sbb    DWORD PTR [eax-0x4f],edi
  413e4f:	pop    ecx
  413e50:	inc    ebp
  413e51:	xor    DWORD PTR [eax-0x44ea87a9],0x113057f3
  413e5b:	in     al,dx
  413e5c:	adc    DWORD PTR [ebx],0x82953e00
  413e62:	push   es
  413e63:	pusha  
  413e64:	adc    bh,BYTE PTR [ebx]
  413e66:	popf   
  413e67:	push   0x855aded5
  413e6c:	push   cs
  413e6d:	shl    dh,cl
  413e6f:	mov    ah,0x64
  413e71:	ds adc al,0x8a
  413e74:	inc    esp
  413e75:	sub    bh,dl
  413e77:	mov    eax,0x759cd156
  413e7c:	sub    al,0x27
  413e7e:	stos   BYTE PTR es:[edi],al
  413e7f:	out    dx,eax
  413e80:	jmp    DWORD PTR [ebx-0x18]
  413e83:	dec    ebx
  413e84:	dec    ebp
  413e85:	jbe    0x413e96
  413e87:	cmp    bh,cl
  413e89:	inc    ebx
  413e8a:	ror    DWORD PTR [ecx],1
  413e8c:	(bad)  
  413e8d:	push   ebp
  413e8e:	mov    bh,BYTE PTR [edx]
  413e90:	pop    ds
  413e91:	push   es
  413e92:	mov    eax,0x2c090c5f
  413e97:	inc    ecx
  413e98:	cmp    ebx,DWORD PTR [eax]
  413e9a:	gs mov edi,0xd373e501
  413ea0:	xchg   edx,eax
  413ea1:	jne    0x413eeb
  413ea3:	stc    
  413ea4:	cmp    DWORD PTR [ebp+0x35],esi
  413ea7:	shl    BYTE PTR [edi+0x41],0x41
  413eab:	push   0x48
  413ead:	pop    ss
  413eae:	jb     0x413ee0
  413eb0:	cld    
  413eb1:	pop    ebp
  413eb2:	and    esi,ebp
  413eb4:	xor    eax,DWORD PTR [edi+0x6f]
  413eb7:	test   al,0x94
  413eb9:	shl    BYTE PTR [si],cl
  413ebc:	mov    ebx,0xb73bd97c
  413ec1:	xchg   ebx,eax
  413ec2:	jbe    0x413f41
  413ec4:	sub    al,BYTE PTR [esi+0x6b74fe62]
  413eca:	or     eax,0xbdd92a1f
  413ecf:	xlat   BYTE PTR ds:[ebx]
  413ed0:	jge    0x413e98
  413ed2:	adc    ah,BYTE PTR [edi]
  413ed4:	call   0xb4cc:0x9da86d5b
  413edb:	and    eax,0xe33875e0
  413ee0:	mov    ebx,0x9ad7a105
  413ee5:	fstp   TBYTE PTR [edx]
  413ee7:	aas    
  413ee8:	adc    al,0xd5
  413eea:	or     DWORD PTR [ebp+0x39],edi
  413eed:	or     eax,0xb3df6840
  413ef2:	je     0x413eef
  413ef4:	fs push ecx
  413ef6:	push   edi
  413ef7:	or     ecx,DWORD PTR [edx+0x76]
  413efa:	add    eax,0x4b860dd0
  413eff:	shl    al,0x38
  413f02:	inc    ecx
  413f03:	mov    ecx,0x3345cc62
  413f08:	jo     0x413ed0
  413f0a:	repnz xchg ebp,eax
  413f0c:	push   esi
  413f0d:	jecxz  0x413e91
  413f0f:	loop   0x413f7f
  413f11:	mov    ah,0xdd
  413f13:	fcom   st(6)
  413f15:	jge    0x413ed8
  413f17:	mov    eax,ds:0x8e4b68d0
  413f1c:	fsubr  DWORD PTR ds:0x1e02d2a4
  413f22:	(bad)  
  413f23:	addr16 push ecx
  413f25:	clc    
  413f26:	adc    ah,BYTE PTR [ecx+ebp*2-0x4d]
  413f2a:	scas   al,BYTE PTR es:[edi]
  413f2b:	clc    
  413f2c:	inc    esp
  413f2d:	retf   0xba61
  413f30:	idiv   BYTE PTR [edi-0x2f]
  413f33:	push   esi
  413f34:	jg     0x413ef8
  413f36:	jb     0x388446e0
  413f3c:	sub    esp,edx
  413f3e:	pop    edx
  413f3f:	clc    
  413f40:	shl    BYTE PTR [esp+esi*4+0x67],0x47
  413f45:	sub    BYTE PTR [edi+0x15ae1af8],bl
  413f4b:	gs mov edx,0xbcee67cb
  413f51:	ja     0x413f4e
  413f53:	push   0x1d
  413f55:	call   0x4dff:0xbdd8bb5e
  413f5c:	rcr    ebx,0x40
  413f5f:	mov    dh,0x3d
  413f61:	lds    edi,FWORD PTR [edx+0x35]
  413f64:	aas    
  413f65:	(bad)  
  413f66:	cmp    ch,BYTE PTR [ecx]
  413f68:	push   cs
  413f69:	addr16 (bad) 
  413f6b:	test   DWORD PTR [edi-0x9c6df6f],0x9d9caef1
  413f75:	ss cmp ecx,ebp
  413f78:	int    0x3d
  413f7a:	inc    ebx
  413f7b:	outs   dx,DWORD PTR ds:[esi]
  413f7c:	inc    esp
  413f7d:	and    BYTE PTR ds:0x813faaee,0xbf
  413f84:	cmc    
  413f85:	fcom   st(4)
  413f87:	adc    eax,0xcb33ba07
  413f8c:	ins    BYTE PTR es:[edi],dx
  413f8d:	xchg   esi,eax
  413f8e:	or     al,BYTE PTR [eax-0x72aeb460]
  413f94:	mov    edi,0x6fc51151
  413f99:	mov    ecx,0xdbd32be3
  413f9e:	xchg   ebx,eax
  413f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa0:	pop    esp
  413fa1:	dec    esi
  413fa2:	adc    cl,al
  413fa4:	shl    BYTE PTR [esi+0x31],cl
  413fa7:	mov    edx,0xc7e71efe
  413fac:	int    0x23
  413fae:	(bad)  
  413faf:	push   ss
  413fb0:	ss sub al,bl
  413fb3:	jge    0x413fa2
  413fb5:	enter  0xf646,0x8f
  413fb9:	popa   
  413fba:	nop
  413fbb:	pop    ebx
  413fbc:	or     eax,0x7642402
  413fc1:	out    dx,eax
  413fc2:	retf   0xd084
  413fc5:	mov    ds:0xe4f8075e,eax
  413fca:	into   
  413fcb:	leave  
  413fcc:	xchg   edi,eax
  413fcd:	arpl   WORD PTR [eax-0x248459fe],dx
  413fd3:	jnp    0x41402a
  413fd5:	loope  0x413f97
  413fd7:	pop    eax
  413fd8:	ja     0x414009
  413fda:	clc    
  413fdb:	scas   al,BYTE PTR es:[edi]
  413fdc:	scas   al,BYTE PTR es:[edi]
  413fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fde:	sub    BYTE PTR [ecx],0xa0
  413fe1:	push   esp
  413fe2:	imul   edi,DWORD PTR [edi+0x22],0x76c10d25
  413fe9:	jecxz  0x413f9d
  413feb:	popa   
  413fec:	out    dx,al
  413fed:	jne    0x413fc3
  413fef:	fisubr DWORD PTR [ecx+edx*4+0x185cfea]
  413ff6:	clc    
  413ff7:	push   edx
  413ff8:	dec    edi
  413ff9:	push   ss
  413ffa:	shl    DWORD PTR [ebx-0x35df85aa],0xf6
  414001:	sar    dl,cl
  414003:	and    BYTE PTR [ebx-0x5a],bh
  414006:	aas    
  414007:	fldenv [eax-0x7fb3372a]
  41400d:	jge    0x41401a
  41400f:	out    dx,al
  414010:	inc    edx
  414011:	sub    al,BYTE PTR [esi-0x710af7dd]
  414017:	sub    al,0x73
  414019:	fucomp st(7)
  41401b:	mov    dl,0xf0
  41401d:	mov    ebp,0x8f815ea5
  414022:	bound  edi,QWORD PTR [edi]
  414024:	jge    0x413fb0
  414026:	inc    ebp
  414027:	in     eax,0xc1
  414029:	iret   
  41402a:	mov    ds:0x79dde49e,eax
  41402f:	sub    ecx,esi
  414031:	or     cl,bl
  414033:	mov    ds:0x33d2af5d,al
  414038:	lds    esi,FWORD PTR [ecx+0x734ce241]
  41403e:	cmp    edx,DWORD PTR [ebp*2+0x40d5aded]
  414045:	fdivr  DWORD PTR [edx-0x10e3565a]
  41404b:	xchg   dh,ah
  41404d:	cmp    BYTE PTR [ecx-0x6c],0x8c
  414051:	popa   
  414052:	sbb    bl,BYTE PTR [ebx+0x61730802]
  414058:	sub    al,0x47
  41405a:	xor    bl,dl
  41405c:	jg     0x4140bb
  41405e:	dec    edi
  41405f:	mov    ds:0x3faf72af,al
  414064:	sub    DWORD PTR [ebx+0x2c756b5d],eax
  41406a:	push   ebp
  41406b:	or     al,0x93
  41406d:	nop
  41406e:	call   0x79fb:0xc637d7bc
  414075:	mov    edx,0xeb2cb2b2
  41407a:	push   eax
  41407b:	retf   
  41407c:	mov    edx,0xe88ba6f9
  414081:	push   es
  414082:	addr16 fsubp st(4),st
  414085:	push   ds
  414086:	add    eax,DWORD PTR [ecx+0x9]
  414089:	sbb    dl,bl
  41408b:	inc    eax
  41408c:	lods   eax,DWORD PTR ds:[esi]
  41408d:	adc    ebp,DWORD PTR [edx]
  41408f:	and    al,0xd2
  414091:	lahf   
  414092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414093:	push   0x3
  414095:	repz inc ecx
  414097:	pop    DWORD PTR [ecx]
  414099:	push   ebp
  41409a:	mov    ?,WORD PTR [edi+0x23]
  41409d:	inc    ecx
  41409e:	mov    edi,0x26ca0f9f
  4140a3:	or     eax,0xc141672c
  4140a8:	lods   eax,DWORD PTR ds:[esi]
  4140a9:	rol    BYTE PTR [ebx+0x2c198f76],cl
  4140af:	(bad)  
  4140b0:	mov    bl,0xd4
  4140b2:	pop    ss
  4140b3:	pusha  
  4140b4:	repz or ah,BYTE PTR [edi-0x244f43e]
  4140bb:	test   DWORD PTR [edx],ecx
  4140bd:	shl    DWORD PTR [ecx+eax*1],0x9e
  4140c1:	bound  ecx,QWORD PTR [ebp-0x2b]
  4140c4:	ins    BYTE PTR es:[edi],dx
  4140c5:	cwde   
  4140c6:	daa    
  4140c7:	jno    0x414120
  4140c9:	aaa    
  4140ca:	stos   BYTE PTR es:[edi],al
  4140cb:	imul   edi,ebp,0x79d08baa
  4140d1:	pushf  
  4140d2:	push   esi
  4140d3:	push   esi
  4140d4:	mov    eax,0x75108af
  4140d9:	and    DWORD PTR ds:0x428e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x428e4b,0x428e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x428e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x428e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x428e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x428e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x428ecf,0x428ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x428eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x428ea7,0x428e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x428e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1+0x1a6a3859],dl
  41419c:	mov    dl,0xb8
  41419e:	push   0x83826895
  4141a3:	out    0x60,eax
  4141a5:	add    DWORD PTR [ebx+0x1a5243f5],0x1
  4141ac:	cdq    
  4141ad:	test   BYTE PTR [ebx-0x3],dh
  4141b0:	mov    cl,0x95
  4141b2:	xchg   edi,eax
  4141b3:	xchg   ebx,eax
  4141b4:	sbb    ecx,DWORD PTR [edi+ebp*2+0x3d6209f4]
  4141bb:	xor    dl,BYTE PTR [esp+eiz*4]
  4141be:	jno    0x414210
  4141c0:	div    ecx
  4141c2:	dec    esp
  4141c3:	sub    DWORD PTR [esi+0x51],0x40
  4141c7:	and    DWORD PTR [edx-0x24646732],0x541f6bb9
  4141d1:	fs scas eax,DWORD PTR es:[edi]
  4141d3:	cmp    DWORD PTR [esi],ebp
  4141d5:	or     al,0xe2
  4141d7:	pop    ebp
  4141d8:	test   BYTE PTR fs:[ebp+0x7f],al
  4141dc:	push   cs
  4141dd:	fsub   QWORD PTR [ebx-0x3d]
  4141e0:	pop    edi
  4141e1:	xor    eax,0x6d7599cb
  4141e6:	push   ss
  4141e7:	cmp    eax,0x492de1af
  4141ec:	pop    ss
  4141ed:	ins    DWORD PTR es:[edi],dx
  4141ee:	add    BYTE PTR [edx+0x8f1f6ee],al
  4141f4:	and    al,0x58
  4141f6:	enter  0x7ba6,0xfe
  4141fa:	xor    eax,0xc1a4c335
  4141ff:	xor    ebx,DWORD PTR ds:0xb11890f5
  414205:	sahf   
  414206:	loope  0x414215
  414208:	stos   BYTE PTR es:[edi],al
  414209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41420a:	inc    ebp
  41420b:	nop
  41420c:	in     al,dx
  41420d:	mov    eax,ds:0x75e40a7f
  414212:	mov    ecx,0x570be1ce
  414217:	gs jb  0x41421d
  41421a:	nop    ebx
  41421d:	aaa    
  41421e:	retf   0xa4c8
  414221:	push   cs
  414222:	leave  
  414223:	add    cl,BYTE PTR [edx+0x32da8c1]
  414229:	mov    ebp,0x355bbfc3
  41422e:	vpsubb ymm5,ymm7,YMMWORD PTR [eax-0x7288bbdf]
  414236:	jmp    0x4142a9
  414238:	(bad)  
  414239:	cmp    ah,BYTE PTR [edi]
  41423b:	les    ebp,FWORD PTR [eax-0x18]
  41423e:	or     al,0x66
  414240:	sti    
  414241:	je     0x4142ab
  414243:	or     DWORD PTR [ebx-0xf3c4ae4],eax
  414249:	and    BYTE PTR [ebp-0x1e57ec6b],dl
  41424f:	dec    eax
  414250:	cmc    
  414251:	std    
  414252:	aam    0x6b
  414254:	inc    ebx
  414255:	add    eax,0xef1995f4
  41425a:	pop    es
  41425b:	addr16 mov eax,ds:0x879
  41425f:	cdq    
  414260:	or     BYTE PTR [edx-0x38],0x2f
  414264:	inc    esi
  414265:	adc    al,0xd2
  414267:	fcmovnbe st,st(5)
  414269:	mov    cl,0x51
  41426b:	lahf   
  41426c:	lods   eax,DWORD PTR ds:[esi]
  41426d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41426e:	inc    eax
  41426f:	iret   
  414270:	cmp    ebx,0x57
  414273:	ret    0xf8af
  414276:	mov    cl,0xb8
  414278:	retf   
  414279:	xor    al,0xb5
  41427b:	pop    ebx
  41427c:	iret   
  41427d:	les    ecx,FWORD PTR [ecx+0x75]
  414280:	jno    0x414297
  414282:	dec    ebx
  414283:	xchg   esi,eax
  414284:	inc    ebp
  414285:	dec    ecx
  414286:	jno    0x414247
  414288:	mov    ebp,0x71eac5ed
  41428d:	push   edx
  41428e:	jmp    0x93b22527
  414293:	mov    cl,0x30
  414295:	jne    0x41422c
  414297:	out    dx,al
  414298:	cdq    
  414299:	retf   
  41429a:	retf   0xaea8
  41429d:	rcr    DWORD PTR [ebx+edi*2-0x650dd8bd],cl
  4142a4:	jmp    0x414305
  4142a6:	jbe    0x41424a
  4142a8:	test   DWORD PTR [eax+0xa],ecx
  4142ab:	or     dl,BYTE PTR [esi+0x66]
  4142ae:	aad    0x14
  4142b0:	(bad)  
  4142b1:	push   edi
  4142b2:	jo     0x41431d
  4142b4:	sti    
  4142b5:	mov    esp,0xbbea2c4d
  4142ba:	call   0x7525:0x6653119
  4142c1:	and    DWORD PTR [eax],ecx
  4142c3:	mov    esp,0x640e7905
  4142c8:	jno    0x4142e2
  4142ca:	in     al,dx
  4142cb:	ss jo  0x41429b
  4142ce:	adc    DWORD PTR [ebx+eax*1+0x44],edi
  4142d2:	mov    ch,0xb8
  4142d4:	jge    0x414319
  4142d6:	add    al,0xda
  4142d8:	fcomp  DWORD PTR [ebp+0x4a]
  4142db:	mov    ch,0xa0
  4142dd:	mov    ebp,0xbed5cad0
  4142e2:	add    DWORD PTR [bp+si+0x6c6c],eax
  4142e7:	fdivr  QWORD PTR [ecx+0x1a]
  4142ea:	sar    DWORD PTR [eax+0x10],1
  4142ed:	push   dx
  4142ef:	inc    esi
  4142f0:	pop    ebx
  4142f1:	sub    DWORD PTR [ebp-0x5d],ecx
  4142f4:	sbb    al,dh
  4142f6:	mov    bh,0x68
  4142f8:	test   eax,0x2cb38112
  4142fd:	sub    eax,0x96de64b6
  414302:	sahf   
  414303:	xor    al,0x8a
  414305:	out    0x1c,eax
  414307:	arpl   ax,dx
  414309:	int    0xb5
  41430b:	mov    al,ds:0x1b4ec9f
  414310:	jge    0x414309
  414312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414313:	push   cs
  414314:	pop    eax
  414315:	mov    dh,0x7d
  414317:	xchg   edi,eax
  414318:	cmp    DWORD PTR [ecx+0x4b],esi
  41431b:	sub    BYTE PTR [eax+0x79f6d8bb],bh
  414321:	cmp    eax,0xffe214b2
  414326:	cmp    eax,0x2625a081
  41432b:	in     eax,dx
  41432c:	inc    edx
  41432d:	mov    dl,dh
  41432f:	mov    ebx,0x2c98517f
  414334:	out    0xe3,eax
  414336:	ret    0x498
  414339:	jp     0x414346
  41433b:	cwde   
  41433c:	push   ds
  41433d:	fwait
  41433e:	mov    ebx,0x2489944a
  414343:	pusha  
  414344:	push   eax
  414345:	aaa    
  414346:	mov    esi,0xd0708db7
  41434b:	pop    edi
  41434c:	fcom   QWORD PTR [ebx]
  41434e:	lock xacquire sub BYTE PTR [esi-0x4],cl
  414353:	jg     0x4142e0
  414355:	retf   0xe916
  414358:	mov    bh,0x82
  41435a:	push   ebx
  41435b:	push   cs
  41435c:	jecxz  0x414358
  41435e:	or     BYTE PTR [esi+0x545c6efb],ch
  414364:	fldenv [edi-0x36a4a053]
  41436a:	mov    ds:0x72275624,eax
  41436f:	aam    0xf4
  414371:	push   esp
  414372:	mov    dl,0x2e
  414374:	sub    ecx,DWORD PTR [ebx+edx*1-0xc]
  414378:	adc    DWORD PTR [ebx],ebx
  41437a:	mov    fs,WORD PTR [ebx-0x5b]
  41437d:	(bad)  
  41437e:	or     ch,bh
  414380:	dec    eax
  414381:	cmp    ebx,DWORD PTR ds:0xb3557b7b
  414387:	adc    DWORD PTR [ebp+0x3ac3cf57],0x2dbd6499
  414391:	jae    0x414368
  414393:	xchg   edx,eax
  414394:	xchg   edi,eax
  414395:	jmp    0x725b:0x92f48427
  41439c:	clc    
  41439d:	sub    eax,0x8fb50d01
  4143a2:	out    0xf6,al
  4143a4:	sub    BYTE PTR [edx-0xf],bh
  4143a7:	push   esp
  4143a8:	add    eax,0xfc82164
  4143ad:	xchg   bl,bl
  4143af:	mov    ds:0x7514eaa9,al
  4143b4:	push   eax
  4143b5:	and    esp,DWORD PTR [edx-0x5]
  4143b8:	mov    WORD PTR es:[edi-0x313dc0fc],ds
  4143bf:	clc    
  4143c0:	jge    0x414374
  4143c2:	mov    eax,esi
  4143c4:	dec    DWORD PTR [edi+ebp*1+0x365dadfe]
  4143cb:	mov    ss,WORD PTR [esi-0x149806b8]
  4143d1:	or     ah,bh
  4143d3:	adc    esp,DWORD PTR cs:[edx-0x6eab790a]
  4143da:	fild   WORD PTR [edx-0x19]
  4143dd:	(bad)  
  4143de:	jmp    0x35b7e7b4
  4143e3:	rep outs dx,DWORD PTR ds:[esi]
  4143e5:	mov    ecx,0x2401fa5
  4143ea:	test   DWORD PTR [esi+esi*1+0x32],edx
  4143ee:	es pop ecx
  4143f0:	shr    DWORD PTR [ebx-0x8447ce2],1
  4143f6:	je     0x4143ef
  4143f8:	xchg   ecx,eax
  4143f9:	icebp  
  4143fa:	outs   dx,DWORD PTR ds:[esi]
  4143fb:	(bad)  
  4143fc:	scas   al,BYTE PTR es:[edi]
  4143fd:	retf   0x18b1
  414400:	adc    eax,0xe6c7c4f7
  414405:	jmp    0xb0f88036
  41440a:	clc    
  41440b:	mov    al,0x40
  41440d:	pop    ds
  41440e:	(bad)  
  41440f:	movlps xmm1,QWORD PTR [edi+0x1c809424]
  414416:	stos   DWORD PTR es:[edi],eax
  414417:	jnp    0x414484
  414419:	retf   
  41441a:	cmp    eax,0x3d78fab5
  41441f:	int    0xc4
  414421:	push   edx
  414422:	push   es
  414423:	stos   BYTE PTR es:[edi],al
  414424:	neg    BYTE PTR [ebp-0x2a8ffaef]
  41442a:	adc    al,0xf3
  41442c:	sbb    BYTE PTR [esi],al
  41442e:	das    
  41442f:	addr16 out 0xc3,al
  414432:	ss hlt 
  414434:	mov    al,0x6c
  414436:	sub    al,ah
  414438:	xor    ah,BYTE PTR [esi-0x458e989b]
  41443e:	push   edx
  41443f:	mov    eax,0x5baef37a
  414444:	mov    BYTE PTR [ebp-0x28],dl
  414447:	dec    eax
  414448:	retf   
  414449:	test   ecx,eax
  41444b:	jno    0x4143d3
  41444d:	adc    edx,DWORD PTR [esi]
  41444f:	(bad)  
  414451:	loope  0x414490
  414453:	stos   DWORD PTR es:[edi],eax
  414454:	dec    edi
  414455:	pop    edi
  414456:	pop    edi
  414457:	sub    al,0xb4
  414459:	push   ebp
  41445a:	jmp    0x414420
  41445c:	sar    BYTE PTR [eax+eiz*1+0x5f],cl
  414460:	xor    al,0x89
  414462:	je     0x4144bd
  414464:	xchg   ecx,eax
  414465:	loop   0x4143ef
  414467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414468:	outs   dx,DWORD PTR ds:[esi]
  414469:	test   DWORD PTR ds:0x46123875,ebx
  41446f:	xchg   ebp,eax
  414470:	sbb    al,0xf0
  414472:	add    DWORD PTR [edi],edx
  414474:	jp     0x414490
  414476:	jecxz  0x414467
  414478:	push   0x73556da6
  41447d:	push   eax
  41447e:	and    DWORD PTR [eax-0x30],0xa
  414482:	adc    eax,DWORD PTR [ebx]
  414484:	pop    ecx
  414485:	ins    DWORD PTR es:[edi],dx
  414486:	(bad)  
  414487:	mov    bl,0xbf
  414489:	mov    ebp,0x8fb67e6a
  41448e:	and    BYTE PTR [edi],bl
  414490:	or     eax,0x29107f5
  414495:	jns    0x4144b0
  414497:	mov    ch,0x5a
  414499:	xchg   esp,eax
  41449a:	mov    fs,esi
  41449c:	call   0xa4e447f5
  4144a1:	call   0xa61c4cf7
  4144a6:	mov    ch,0x38
  4144a8:	and    bh,al
  4144aa:	(bad)  
  4144ab:	jle    0x414489
  4144ad:	mov    edx,ebp
  4144af:	sahf   
  4144b0:	lods   eax,DWORD PTR ds:[esi]
  4144b1:	(bad)  
  4144b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144b3:	xlat   BYTE PTR ds:[ebx]
  4144b4:	mov    cl,0x68
  4144b6:	dec    esp
  4144b7:	pop    esp
  4144b8:	inc    eax
  4144b9:	pop    es
  4144ba:	add    BYTE PTR [ecx+0x1aa1e2df],0x2a
  4144c1:	daa    
  4144c2:	adc    BYTE PTR [esi-0x74],al
  4144c5:	call   0x5932:0x3e64e9ef
  4144cc:	push   0x14
  4144ce:	aaa    
  4144cf:	dec    edi
  4144d0:	xlat   BYTE PTR ds:[ebx]
  4144d1:	sar    BYTE PTR [ebx],cl
  4144d3:	adc    ah,ah
  4144d5:	call   0x6fc:0x86158d1f
  4144dc:	popa   
  4144dd:	and    ecx,eax
  4144df:	xchg   esp,edx
  4144e1:	ja     0x41447b
  4144e3:	mov    DWORD PTR [esi],eax
  4144e5:	xchg   esi,eax
  4144e6:	ins    BYTE PTR es:[edi],dx
  4144e7:	(bad)  
  4144e8:	lds    esi,FWORD PTR [ecx-0x66]
  4144eb:	mov    ?,WORD PTR [ebx+0x1e9b49c0]
  4144f1:	out    dx,al
  4144f2:	mov    dh,BYTE PTR [eax]
  4144f4:	inc    edi
  4144f5:	jg     0x4144ec
  4144f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144f8:	jmp    0x1783a624
  4144fd:	repnz shr DWORD PTR [ecx-0x2dcdd1b],0x5a
  414505:	icebp  
  414506:	pop    edi
  414507:	push   esp
  414508:	aam    0xad
  41450a:	sub    al,0xda
  41450c:	mov    al,ds:0x6754af07
  414511:	sbb    al,0x8c
  414513:	loop   0x4144ac
  414515:	enter  0xea94,0x6
  414519:	cmp    DWORD PTR [ebx-0x2c],eax
  41451c:	shr    DWORD PTR [edx],cl
  41451e:	and    eax,0x5cd6e4b5
  414523:	cmc    
  414524:	push   es
  414525:	loopne 0x414546
  414527:	xchg   ebx,eax
  414528:	pop    ecx
  414529:	jo     0x4144ee
  41452b:	xor    edx,DWORD PTR [esi-0x7f604545]
  414531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414532:	and    eax,0xbac5818f
  414537:	xchg   edx,eax
  414538:	call   0xa7e9:0xd3192d73
  41453f:	pusha  
  414540:	lahf   
  414541:	or     al,0xc
  414543:	mov    esi,0x97ee36ad
  414548:	sub    esi,0xde353603
  41454e:	bound  ecx,QWORD PTR [ebx+0x7d12e1ed]
  414554:	lods   eax,DWORD PTR ds:[esi]
  414555:	(bad)  
  414556:	pop    esp
  414557:	out    0x30,eax
  414559:	aam    0x8e
  41455b:	pop    ecx
  41455c:	adc    BYTE PTR ss:[ebx+0x2b],al
  414560:	sub    BYTE PTR [esi+0x1edc09a4],bl
  414566:	outs   dx,DWORD PTR ds:[esi]
  414567:	dec    ebp
  414568:	dec    edx
  414569:	stos   BYTE PTR es:[edi],al
  41456a:	test   DWORD PTR [edi-0x6faf026],esp
  414570:	push   esp
  414571:	mov    DWORD PTR [edx+0x9],ecx
  414574:	xchg   ebx,eax
  414575:	stc    
  414576:	fnstenv [eax+0x12]
  414579:	scas   al,BYTE PTR es:[edi]
  41457a:	sbb    esp,DWORD PTR [eax]
  41457c:	jo     0x41453a
  41457e:	and    dh,BYTE PTR [ebx]
  414580:	lea    ebp,[eax+ebp*8]
  414583:	(bad)  
  414584:	pop    esp
  414586:	sbb    BYTE PTR [ebx-0x61],bh
  414589:	es aaa 
  41458b:	xlat   BYTE PTR ds:[ebx]
  41458c:	imul   ebx,edi,0xa262721f
  414592:	ja     0x4145b1
  414594:	fnstenv [eax+0x5024006e]
  41459a:	jno    0x41452e
  41459c:	and    DWORD PTR [ecx+0x7],0x11b5fa4e
  4145a3:	(bad)  
  4145a5:	dec    ebx
  4145a6:	outs   dx,BYTE PTR ds:[esi]
  4145a7:	xor    al,0x4f
  4145a9:	sbb    al,0x79
  4145ab:	data16 fs jne 0x4145a4
  4145af:	imul   eax,esp,0xd1745ae7
  4145b5:	nop
  4145b6:	dec    ebx
  4145b7:	mov    ebx,0xfea9d882
  4145bc:	push   ebx
  4145bd:	or     al,0xa2
  4145bf:	pop    ecx
  4145c0:	mov    BYTE PTR [esi-0x34],ah
  4145c3:	mov    BYTE PTR [edx-0x2e],dh
  4145c6:	arpl   WORD PTR [ecx+eax*2],bp
  4145c9:	add    al,0x18
  4145cb:	push   ss
  4145cc:	aaa    
  4145cd:	push   eax
  4145ce:	cmp    al,0xc8
  4145d0:	iret   
  4145d1:	fld    DWORD PTR [ebx+eiz*2+0x14]
  4145d5:	jne    0x414641
  4145d7:	icebp  
  4145d8:	loope  0x4145a6
  4145da:	into   
  4145db:	mov    al,cl
  4145dd:	xchg   BYTE PTR [edx],al
  4145df:	cli    
  4145e0:	in     al,0x55
  4145e2:	dec    ebx
  4145e3:	xlat   BYTE PTR ds:[ebx]
  4145e4:	and    eax,0x40602250
  4145e9:	sbb    DWORD PTR [ebx+0x7f],esp
  4145ec:	ret    
  4145ed:	mov    WORD PTR [ebx+0x28],?
  4145f0:	push   cs
  4145f1:	sbb    DWORD PTR [ebx],edx
  4145f3:	pop    esp
  4145f4:	mov    eax,0x67f31a2
  4145f9:	ins    DWORD PTR es:[edi],dx
  4145fa:	aas    
  4145fb:	loopne 0x414607
  4145fd:	fistp  DWORD PTR fs:[edi+0x6a]
  414601:	dec    esi
  414602:	dec    edx
  414603:	push   ebx
  414604:	fisubr WORD PTR cs:[ecx+eiz*4]
  414608:	fdiv   st(7),st
  41460a:	jo     0x4145c5
  41460c:	mov    cl,bl
  41460e:	jmp    0xfbd7dd81
  414613:	inc    ebx
  414614:	cdq    
  414615:	sar    BYTE PTR [ecx],cl
  414617:	mov    esp,0x2f9a5a5c
  41461c:	mov    bl,0xeb
  41461e:	add    al,0x72
  414620:	test   eax,0x1e7b6cf7
  414625:	push   eax
  414626:	lock test eax,0x6bf211b
  41462c:	or     DWORD PTR [ebp+0xceae06e],ecx
  414632:	adc    BYTE PTR [ebx-0x1ddb85f7],cl
  414638:	in     al,dx
  414639:	retf   0xf4a7
  41463c:	dec    ecx
  41463d:	loop   0x41462b
  41463f:	jb     0x41467c
  414641:	rcl    DWORD PTR [edx*2-0x74b76b30],1
  414648:	aaa    
  414649:	das    
  41464a:	cmp    cl,BYTE PTR [edx-0x45fc184a]
  414650:	push   ss
  414651:	sub    dh,BYTE PTR [esp+esi*4+0x49c41fd9]
  414658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414659:	push   ebx
  41465a:	jg     0x41466f
  41465c:	cmp    eax,0xde2fca66
  414661:	xchg   esi,eax
  414662:	ins    DWORD PTR es:[edi],dx
  414663:	add    al,0x36
  414665:	mov    dl,0x22
  414667:	adc    BYTE PTR ds:[ebp-0x51384576],bh
  41466e:	int    0xc4
  414670:	rcl    DWORD PTR [eax+0x4dc28032],0xc1
  414677:	aam    0x81
  414679:	jns    0x41460f
  41467b:	sbb    eax,0x70df0a72
  414680:	inc    ebp
  414681:	or     al,0x81
  414683:	xor    BYTE PTR [ecx-0x4e],bl
  414686:	or     eax,0x21b77314
  41468b:	loop   0x414625
  41468d:	jg     0x4146fe
  41468f:	fstp   st(3)
  414691:	xchg   esi,eax
  414692:	add    al,BYTE PTR [edx]
  414694:	(bad)  
  414695:	in     eax,dx
  414696:	sbb    ebp,esi
  414698:	jge    0x414622
  41469a:	rcr    DWORD PTR ds:0x1e7a8f07,0xec
  4146a1:	mov    bl,al
  4146a3:	lods   al,BYTE PTR ds:[esi]
  4146a4:	jne    0x4146ee
  4146a6:	adc    al,0x3d
  4146a8:	sub    al,BYTE PTR [edi+0x29]
  4146ab:	repz jne 0x41470b
  4146ae:	mov    edx,0x2cdccea9
  4146b3:	sbb    ah,ah
  4146b5:	ss fwait
  4146b7:	push   0x4c
  4146b9:	pop    esp
  4146ba:	jl     0x414737
  4146bc:	fsubr  QWORD PTR [esi+0x5280cc13]
  4146c2:	mov    al,0xcb
  4146c4:	pop    eax
  4146c5:	push   ebx
  4146c6:	or     eax,0xfdd0ab98
  4146cb:	rol    DWORD PTR [eax+0x5e],0x1e
  4146cf:	mov    bh,0x1b
  4146d1:	xchg   ecx,eax
  4146d2:	xor    edi,DWORD PTR [ecx]
  4146d4:	and    cl,BYTE PTR [ebx]
  4146d6:	adc    DWORD PTR [ecx-0x77],ecx
  4146d9:	inc    esp
  4146da:	arpl   WORD PTR [edx-0x7a831be7],dx
  4146e0:	cld    
  4146e1:	cmp    bl,bh
  4146e3:	sbb    edi,edx
  4146e5:	sub    ebx,ebp
  4146e7:	jnp    0x4146a6
  4146e9:	mov    ch,dh
  4146eb:	(bad)  
  4146ec:	jnp    0x4146fe
  4146ee:	les    edx,FWORD PTR [edi+0xbff9b54]
  4146f4:	repnz sbb esi,DWORD PTR [ebx-0x67]
  4146f8:	jae    0x414724
  4146fa:	aad    0xa0
  4146fc:	mov    al,ds:0xc26fc597
  414701:	in     al,0xc0
  414703:	pop    ebp
  414704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414705:	push   ebp
  414706:	jo     0x414713
  414708:	mov    al,0x5
  41470a:	mov    esp,0x2b3e8c6a
  41470f:	xlat   BYTE PTR ds:[ebx]
  414710:	cmp    ah,BYTE PTR [ecx+0x1fb70835]
  414716:	xchg   edx,eax
  414717:	inc    ebp
  414718:	sub    BYTE PTR [ebp-0x5],dl
  41471b:	nop
  41471c:	sub    al,0xf9
  41471e:	(bad)  
  41471f:	test   DWORD PTR [ecx],0xd463389c
  414725:	(bad)  
  414726:	pop    ecx
  414727:	xchg   edi,eax
  414728:	aad    0x66
  41472a:	mov    bh,0xe1
  41472c:	mov    al,ds:0xd51ad863
  414731:	sahf   
  414732:	ret    
  414733:	sbb    al,0x3a
  414735:	sahf   
  414736:	adc    esi,0xffffffd6
  414739:	repnz push 0x67
  41473c:	inc    esi
  41473d:	mov    cl,0x6f
  41473f:	cmc    
  414740:	rol    DWORD PTR [esi+0x79],0xde
  414744:	add    cl,BYTE PTR [esi]
  414746:	call   0x964c2c92
  41474b:	stos   BYTE PTR es:[edi],al
  41474c:	mov    al,ds:0x3e9448c7
  414751:	jmp    0x4146e2
  414753:	mov    ch,0x14
  414755:	add    DWORD PTR es:[eax-0x4],ebx
  414759:	test   BYTE PTR [esi+edi*8+0x6d],bl
  41475d:	mov    cl,0x5c
  41475f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414760:	mov    ebp,0xd9f02af7
  414765:	mov    bh,0xc9
  414767:	outs   dx,DWORD PTR ds:[esi]
  414768:	or     al,BYTE PTR [edi]
  41476a:	inc    esp
  41476b:	sbb    BYTE PTR ds:[ecx],ch
  41476e:	lds    edx,FWORD PTR [ebx+0xc]
  414771:	nop
  414772:	cmp    dh,bl
  414774:	in     eax,dx
  414775:	jge    0x41470e
  414777:	fldcw  WORD PTR [edx-0x34]
  41477a:	mov    esp,0xe2f7b860
  41477f:	mov    cl,0x3e
  414781:	sbb    edi,esp
  414783:	xor    ch,BYTE PTR [edi-0x55c24945]
  414789:	sub    DWORD PTR [eax],edx
  41478b:	mov    bh,0x35
  41478d:	dec    ebx
  41478e:	cmp    al,0x43
  414790:	dec    esi
  414791:	hlt    
  414792:	jns    0x4147e8
  414794:	cdq    
  414795:	pop    ebp
  414796:	rcl    al,0x29
  414799:	cld    
  41479a:	(bad)  
  41479b:	out    dx,al
  41479c:	xor    al,0x17
  41479e:	imul   eax,esi,0xb40f3bf9
  4147a4:	and    ebx,DWORD PTR [edi-0x5a6ccd17]
  4147aa:	cli    
  4147ab:	outs   dx,DWORD PTR ds:[esi]
  4147ac:	xchg   DWORD PTR [esi+ecx*8-0x42],ebp
  4147b0:	dec    eax
  4147b1:	es jmp 0x7de1:0x13b9a6ae
  4147b9:	mov    esi,ebx
  4147bb:	push   0xffffffab
  4147bd:	sti    
  4147be:	stc    
  4147bf:	fwait
  4147c0:	dec    ecx
  4147c1:	data16 adc al,0x96
  4147c4:	lea    edx,[ecx+0x14]
  4147c7:	dec    esi
  4147c8:	shl    BYTE PTR [ebp+0x67],0x5f
  4147cc:	or     eax,DWORD PTR [edx+0x5b7f9a8a]
  4147d2:	pop    es
  4147d3:	fist   DWORD PTR [eax-0x38bc97ec]
  4147d9:	jns    0x4147d2
  4147db:	jae    0x414804
  4147dd:	push   es
  4147de:	add    esp,DWORD PTR [edx-0x66]
  4147e1:	sbb    ch,BYTE PTR [ebx+0x3b]
  4147e4:	mov    dh,0x6e
  4147e6:	pop    DWORD PTR [edi+0x4f]
  4147e9:	cmp    eax,0xd1470186
  4147ee:	and    dh,BYTE PTR [edx+0x17]
  4147f1:	mov    edx,0x3c8f01c
  4147f6:	aad    0x8
  4147f8:	repnz adc eax,0x4d134b34
  4147fe:	cmp    BYTE PTR [ebp-0x45280091],dh
  414804:	jnp    0x41487e
  414806:	std    
  414807:	lea    edi,[ebp-0x5e7396be]
  41480d:	and    al,0xc5
  41480f:	or     ah,BYTE PTR [ecx+0x24]
  414812:	sub    cl,ah
  414814:	js     0x41483e
  414816:	inc    edx
  414817:	push   ss
  414818:	mov    ebp,0x8e3b83d7
  41481d:	mov    dh,0x35
  41481f:	adc    eax,0x1bcc67b2
  414824:	mov    ecx,0x6ae9cde7
  414829:	leave  
  41482a:	mov    esi,0x94f89627
  41482f:	test   eax,0x20b96de7
  414834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414836:	cmp    eax,0x8d32be35
  41483b:	push   es
  41483c:	repnz mov dh,0x1a
  41483f:	sub    DWORD PTR [edi],0xffffffe2
  414842:	and    ebx,edx
  414844:	(bad)  
  414845:	test   ebp,0x5eb6dfcf
  41484b:	jmp    0xb0a2e633
  414850:	fnstsw WORD PTR fs:[ecx+0x40]
  414854:	pop    edi
  414855:	js     0x41482b
  414857:	(bad)  
  414858:	mov    ds:0xff4d9c38,eax
  41485d:	call   0x2d0b:0xf947c48d
  414864:	jmp    0x42fa:0xd26ba399
  41486b:	add    eax,0xda86325e
  414870:	inc    esp
  414871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414872:	mov    es,WORD PTR [esi+0x3]
  414875:	mov    DWORD PTR [edi+0x6d02d70c],edi
  41487b:	or     al,0xe7
  41487d:	(bad)  
  41487e:	(bad)  
  41487f:	in     al,dx
  414880:	sbb    al,0x7b
  414882:	cmc    
  414883:	cmp    edi,edi
  414885:	sbb    ah,BYTE PTR [ecx+0x20]
  414888:	stos   BYTE PTR es:[edi],al
  414889:	cs hlt 
  41488b:	movsx  ecx,WORD PTR [esi-0x14]
  41488f:	cli    
  414890:	ja     0x414821
  414892:	mov    BYTE PTR [esi+eiz*1-0x24],ch
  414896:	cld    
  414897:	sbb    eax,0xad18d7a0
  41489c:	scas   eax,DWORD PTR es:[edi]
  41489d:	xor    BYTE PTR [ebp-0x4f],bl
  4148a0:	sub    ecx,DWORD PTR [esi-0x5d]
  4148a3:	push   ecx
  4148a4:	dec    edi
  4148a5:	in     al,0x9d
  4148a7:	jmp    0x4148d2
  4148a9:	call   0x4c8e:0xc1c29e61
  4148b0:	or     DWORD PTR [edi+0x5db6c449],edx
  4148b6:	sub    ah,bl
  4148b8:	in     eax,0xc5
  4148ba:	clc    
  4148bb:	push   0x1675a8b5
  4148c0:	bound  edi,QWORD PTR [edx+edx*2]
  4148c3:	push   eax
  4148c4:	inc    eax
  4148c5:	push   esi
  4148c6:	cmc    
  4148c7:	dec    ebp
  4148c8:	dec    esp
  4148c9:	(bad)  
  4148ca:	cmp    al,0xe1
  4148cc:	mov    ch,0x79
  4148ce:	sub    al,0x86
  4148d0:	jecxz  0x414914
  4148d2:	adc    DWORD PTR [edx],esi
  4148d4:	cli    
  4148d5:	mov    ebp,0x321cae37
  4148da:	test   al,0xa5
  4148dc:	ret    0x777f
  4148df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e0:	out    dx,al
  4148e1:	and    al,0x72
  4148e3:	sub    DWORD PTR [edx-0x62da3be0],eax
  4148e9:	dec    esi
  4148ea:	and    ebx,ecx
  4148ec:	sbb    bl,cl
  4148ee:	(bad)  [edx+edi*2+0x36]
  4148f2:	fidiv  DWORD PTR [esp+edx*1+0x1b]
  4148f6:	cdq    
  4148f7:	(bad)  
  4148f8:	lods   eax,DWORD PTR ds:[esi]
  4148f9:	xchg   edx,eax
  4148fa:	in     eax,0xb2
  4148fc:	les    edx,FWORD PTR [edx+0x1f]
  4148ff:	cmp    eax,DWORD PTR [edx+eiz*8]
  414902:	push   edi
  414903:	dec    ebx
  414904:	aas    
  414905:	inc    ebp
  414906:	jmp    0x414898
  414908:	fwait
  414909:	arpl   WORD PTR [esi+0x73071bfa],bx
  41490f:	call   0x7c10:0x8db97135
  414916:	popa   
  414917:	inc    esi
  414918:	add    ebx,esi
  41491a:	jg     0x414983
  41491c:	and    dh,BYTE PTR [edi+0x5a]
  41491f:	and    ecx,esp
  414921:	push   ds
  414922:	mov    al,ds:0x7c466840
  414927:	aas    
  414928:	jbe    0x41498a
  41492a:	fadd   st,st(2)
  41492c:	movups XMMWORD PTR [ebx-0x33],xmm7
  414930:	loopne 0x4148f3
  414932:	aad    0x65
  414934:	adc    eax,DWORD PTR [edx+esi*8-0x65]
  414938:	xor    dl,BYTE PTR [edx-0x4a5b0fd3]
  41493e:	jo     0x41491d
  414940:	cmp    DWORD PTR ds:0x266e8cb9,edx
  414946:	jle    0x414909
  414948:	mov    ebp,0x7decb769
  41494d:	sub    BYTE PTR ds:0xe66bfb01,dl
  414953:	popa   
  414954:	jno    0x414966
  414956:	shl    DWORD PTR [ebx+esi*1],1
  414959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41495a:	outs   dx,DWORD PTR ds:[esi]
  41495b:	mov    al,0xa7
  41495d:	or     DWORD PTR [edi],0xfdddf192
  414963:	retf   
  414964:	add    BYTE PTR [ebx],ah
  414966:	jbe    0x4149d4
  414968:	xor    BYTE PTR [esi+0x5a],ah
  41496b:	cmp    bh,BYTE PTR [edx]
  41496d:	mov    al,0x54
  41496f:	jge    0x4149a1
  414971:	pop    esp
  414972:	adc    BYTE PTR [esi+0x4478137b],0xab
  414979:	jp     0x4149e0
  41497b:	in     al,0x1d
  41497d:	mov    cl,0x93
  41497f:	mov    edx,0x73552e1d
  414984:	sub    ch,BYTE PTR [ebx]
  414986:	fdivr  st(1),st
  414988:	push   0x5c
  41498a:	retf   
  41498b:	push   edx
  41498c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41498d:	sub    bl,BYTE PTR [edx]
  41498f:	jo     0x4149f3
  414991:	pop    ebx
  414992:	xchg   esi,eax
  414993:	jle    0x41497e
  414995:	or     eax,0xce3f321f
  41499a:	xchg   ebx,eax
  41499b:	test   BYTE PTR ds:0xff1daae5,dh
  4149a1:	mov    edi,esp
  4149a3:	xor    BYTE PTR [eax+0x48],dl
  4149a6:	fistp  WORD PTR [edi-0x6]
  4149a9:	sbb    eax,0x3201fc14
  4149ae:	fs push eax
  4149b0:	xchg   esi,eax
  4149b1:	dec    ecx
  4149b2:	adc    ebp,DWORD PTR ds:0xcc856c40
  4149b8:	add    BYTE PTR [ebx],ah
  4149ba:	imul   edi,DWORD PTR [edx],0x7a1320c7
  4149c0:	std    
  4149c1:	or     eax,0x6d0ff092
  4149c6:	or     DWORD PTR [eax-0x160f24d4],edx
  4149cc:	test   al,0x61
  4149ce:	jbe    0x4149bb
  4149d0:	fsub   QWORD PTR ds:0x34d008f8
  4149d6:	dec    esi
  4149d7:	mov    eax,ds:0x2873ca6f
  4149dc:	push   edi
  4149dd:	push   ebx
  4149de:	mov    ecx,0xebee5b38
  4149e3:	jnp    0x414a4d
  4149e5:	jns    0x414a33
  4149e7:	out    0x41,al
  4149e9:	rol    BYTE PTR [esi+0x1e33a1eb],0x78
  4149f0:	adc    DWORD PTR [esi-0x1db67280],ecx
  4149f6:	mov    al,0xa
  4149f8:	fs daa 
  4149fa:	add    eax,0xeb67970b
  4149ff:	jae    0x414a61
  414a01:	jmp    0x41a99b17
  414a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a07:	icebp  
  414a08:	fst    QWORD PTR [ebp-0x3cc86c8e]
  414a0e:	sbb    DWORD PTR [ecx+0xad7f907],edi
  414a14:	mov    bh,0x8a
  414a16:	mov    ds:0x8b309429,eax
  414a1b:	(bad)  
  414a1c:	jbe    0x414a71
  414a1e:	fcos   
  414a20:	adc    esp,edi
  414a22:	pop    esp
  414a23:	pop    ebp
  414a24:	pop    esp
  414a25:	xchg   BYTE PTR [esi-0x61],dl
  414a28:	mov    eax,0x74d5225d
  414a2d:	pusha  
  414a2e:	mov    DWORD PTR [ebp-0x6c],ebx
  414a31:	icebp  
  414a32:	adc    bh,BYTE PTR ss:[esi+edi*8]
  414a36:	push   esp
  414a37:	and    esi,ebp
  414a39:	fwait
  414a3a:	mov    bh,0xd6
  414a3c:	add    edi,DWORD PTR [ecx+0x60]
  414a3f:	ret    
  414a40:	pushf  
  414a41:	push   edi
  414a42:	jle    0x414a32
  414a44:	sti    
  414a45:	aad    0x2c
  414a47:	mov    esi,?
  414a49:	repnz inc esp
  414a4b:	push   esi
  414a4c:	add    BYTE PTR [edx],al
  414a4e:	mov    bh,0x67
  414a50:	add    eax,edx
  414a52:	aad    0xd
  414a54:	mov    ebp,0x9154d3e0
  414a59:	mov    ds:0xb6bedd5,eax
  414a5e:	sbb    DWORD PTR [ecx+eax*4+0x57],0xb20b79c0
  414a66:	(bad)  
  414a67:	(bad)  
  414a68:	(bad)  
  414a69:	xlat   BYTE PTR ds:[ebx]
  414a6a:	popf   
  414a6b:	add    DWORD PTR [edi-0x63e01b84],ebx
  414a71:	dec    eax
  414a72:	xor    eax,0xfce37d4
  414a77:	dec    DWORD PTR [ebx+0x508b6fee]
  414a7d:	gs addr16 aad 0x68
  414a81:	arpl   WORD PTR [edx],ax
  414a83:	push   es
  414a84:	xchg   edi,eax
  414a85:	pop    esi
  414a86:	sbb    BYTE PTR [edi+edx*4-0x60d8fd17],ch
  414a8d:	fs test al,0x77
  414a90:	lock xchg edx,eax
  414a92:	dec    eax
  414a93:	adc    al,0x9a
  414a95:	int    0x20
  414a97:	pop    es
  414a98:	inc    ebp
  414a99:	fsub   QWORD PTR [edx-0x107ad254]
  414a9f:	int3   
  414aa0:	int3   
  414aa1:	test   al,0x40
  414aa3:	push   ebx
  414aa4:	mov    WORD PTR [edi+0x5dea8784],?
  414aaa:	aas    
  414aab:	sbb    eax,0x4124717c
  414ab0:	jae    0x414afd
  414ab2:	sub    al,0xfa
  414ab4:	fiadd  WORD PTR [edi+edx*2]
  414ab7:	(bad)  
  414ab8:	and    al,0x5e
  414aba:	pop    esi
  414abb:	loope  0x414a6f
  414abd:	je     0x414af4
  414abf:	or     bl,al
  414ac1:	mov    ebx,0xa7bf93ec
  414ac6:	test   eax,0xeb8b3926
  414acb:	lock (bad) 
  414ace:	or     eax,0x1cc4586
  414ad3:	mov    cl,0x6e
  414ad5:	imul   edi,eax,0xfffffffd
  414ad8:	adc    eax,0xae53f7ac
  414add:	stc    
  414ade:	mov    BYTE PTR [ecx],dl
  414ae0:	int    0x31
  414ae2:	inc    edx
  414ae3:	ds dec ecx
  414ae5:	enter  0xe9dc,0xa6
  414ae9:	sub    ah,BYTE PTR [edx+0x668d9e69]
  414aef:	pop    edx
  414af0:	in     eax,0x2f
  414af2:	retf   
  414af3:	ja     0x414ad8
  414af5:	add    eax,0x41b6a65b
  414afa:	jge    0xe9d08004
  414b00:	xchg   edi,eax
  414b01:	lahf   
  414b02:	dec    ebp
  414b03:	and    cl,dh
  414b05:	mov    cl,0x57
  414b07:	add    dh,BYTE PTR [ebp-0x42]
  414b0a:	or     eax,0xf3d447a0
  414b0f:	arpl   sp,cx
  414b11:	dec    eax
  414b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b13:	xchg   edi,eax
  414b14:	or     cl,BYTE PTR [esi]
  414b16:	mov    ds:0xbb885ba3,al
  414b1b:	mov    ebx,gs
  414b1d:	jb     0x414b4e
  414b1f:	shl    DWORD PTR [esp+eax*2-0x26],0xf4
  414b24:	pop    esi
  414b25:	jmp    0xce6b:0xec19209a
  414b2c:	jnp    0x414b0b
  414b2e:	mov    dh,0xd3
  414b30:	scas   eax,DWORD PTR es:[edi]
  414b31:	push   edx
  414b32:	push   edi
  414b33:	hlt    
  414b34:	shl    edx,1
  414b36:	fcom   QWORD PTR [edi]
  414b38:	nop
  414b39:	xor    eax,0xd94dbbd4
  414b3e:	std    
  414b3f:	ds ins BYTE PTR es:[edi],dx
  414b41:	std    
  414b42:	mov    ebx,0xc67bf495
  414b47:	push   edi
  414b48:	inc    edi
  414b49:	addr16 adc al,0x30
  414b4c:	popf   
  414b4d:	push   eax
  414b4e:	lds    edi,FWORD PTR [edx-0x7a]
  414b51:	mov    al,ds:0x6b985566
  414b56:	mul    edx
  414b58:	sbb    al,0xb7
  414b5a:	test   dh,bl
  414b5c:	das    
  414b5d:	gs inc esi
  414b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b60:	push   0xffffff9a
  414b62:	mov    WORD PTR [eax+0x1a],fs
  414b65:	in     al,0xc3
  414b67:	sbb    eax,0x8a09ac6c
  414b6c:	sbb    eax,DWORD PTR [ebx-0x1e]
  414b6f:	aad    0xd3
  414b71:	xchg   ecx,eax
  414b72:	push   ecx
  414b73:	xchg   cx,ax
  414b75:	es retf 
  414b77:	mov    bl,0x8f
  414b79:	out    dx,eax
  414b7a:	mov    eax,0x5705c010
  414b7f:	pop    edi
  414b80:	mov    ds:0x4539f7eb,al
  414b85:	adc    DWORD PTR [eax-0x51],ecx
  414b88:	popa   
  414b89:	push   esi
  414b8a:	fcomp  st(4)
  414b8c:	daa    
  414b8d:	add    BYTE PTR ds:0x1811eef0,ch
  414b93:	and    al,0x37
  414b95:	in     eax,dx
  414b96:	mov    esp,0x1b1b4021
  414b9b:	sbb    BYTE PTR [eax-0x2e570612],al
  414ba1:	repz cmp al,BYTE PTR [ebx]
  414ba4:	sti    
  414ba5:	loop   0x414c06
  414ba7:	cmp    DWORD PTR [edi+0x25],ecx
  414baa:	loop   0x414c02
  414bac:	je     0x414b41
  414bae:	in     eax,0xda
  414bb0:	inc    ebp
  414bb1:	jae    0x414c16
  414bb3:	jg     0x414b54
  414bb5:	fs push cs
  414bb7:	push   es
  414bb8:	in     eax,dx
  414bb9:	(bad)  
  414bba:	out    dx,eax
  414bbb:	dec    esi
  414bbc:	(bad)
  414bbf:	sti    
  414bc0:	shr    DWORD PTR ds:0x82001879,cl
  414bc6:	xchg   edx,eax
  414bc7:	fs adc al,0x9b
  414bca:	jae    0x414b52
  414bcc:	mov    esp,0x4579223c
  414bd1:	xchg   esp,eax
  414bd2:	cwde   
  414bd3:	mov    ds:0xfbaf402e,eax
  414bd8:	daa    
  414bd9:	inc    esp
  414bda:	inc    esp
  414bdb:	cmp    DWORD PTR [edi+eax*1-0x5781179b],eax
  414be2:	cmp    ch,BYTE PTR [ebx-0x164e72bb]
  414be8:	lea    eax,[edx]
  414bea:	add    cl,BYTE PTR [ebx+0x1c]
  414bed:	mov    ah,0x60
  414bef:	mov    al,0x34
  414bf1:	out    0xbf,eax
  414bf3:	xchg   esp,eax
  414bf4:	mov    esi,0xc15c67a0
  414bf9:	cmp    al,0x2a
  414bfb:	jecxz  0x414c0c
  414bfd:	xor    eax,0xa9036658
  414c02:	fsubr  st(1),st
  414c04:	(bad)  
  414c05:	mov    al,0x66
  414c07:	and    ebx,DWORD PTR [edi-0x4731f38a]
  414c0d:	mov    ch,0x2f
  414c0f:	cmp    ch,BYTE PTR [eax+0x18]
  414c12:	(bad)  
  414c13:	mov    ebx,0x30752c5c
  414c18:	dec    ebp
  414c19:	ror    BYTE PTR [ecx+0x5ec94820],0x4
  414c20:	fs pop eax
  414c22:	enter  0x835c,0x8e
  414c26:	cdq    
  414c27:	push   edx
  414c28:	mov    ecx,0x350b36fb
  414c2d:	daa    
  414c2e:	lock pop ebx
  414c30:	jp     0x414bbb
  414c32:	aam    0x1b
  414c34:	fistp  QWORD PTR [ebx+0x4a]
  414c37:	loope  0x414c21
  414c39:	and    BYTE PTR [edx-0x4f9cb6b1],0xc4
  414c40:	xor    al,0xcd
  414c42:	sbb    DWORD PTR [esi+0x2e4a5497],ebp
  414c48:	mov    edi,0xcd8efeae
  414c4d:	loopne 0x414c7c
  414c4f:	mov    eax,0x5f5862a6
  414c54:	aas    
  414c55:	ins    BYTE PTR es:[edi],dx
  414c56:	ret    0x41bb
  414c59:	es aas 
  414c5b:	jecxz  0x414c59
  414c5d:	scas   al,BYTE PTR es:[edi]
  414c5e:	dec    eax
  414c5f:	xor    eax,0x15d66202
  414c64:	mov    ah,0xf2
  414c66:	mov    ebp,0x1e0d8136
  414c6b:	stc    
  414c6c:	and    ebx,eax
  414c6e:	mov    eax,0xf4f9c31d
  414c73:	pop    es
  414c74:	mov    ch,0x0
  414c76:	hlt    
  414c77:	jge    0x414c6f
  414c79:	mov    esi,0x54ab344
  414c7e:	jnp    0x414cf6
  414c80:	fidivr WORD PTR [esi+0x6f]
  414c83:	adc    ch,ch
  414c85:	out    dx,eax
  414c86:	inc    ecx
  414c87:	in     al,0x91
  414c89:	nop
  414c8a:	xor    BYTE PTR [ebp-0xbec3007],al
  414c90:	xchg   ecx,eax
  414c91:	fist   WORD PTR [esi+ecx*8+0x697e17c]
  414c98:	cs cmp eax,0x41bf0e96
  414c9e:	push   ebp
  414c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ca0:	adc    ecx,edx
  414ca2:	fnstcw WORD PTR cs:0x24c712f6
  414ca9:	xor    eax,0xbddbd167
  414cae:	lock pusha 
  414cb0:	adc    eax,0xd027004c
  414cb5:	gs inc esp
  414cb7:	xlat   BYTE PTR ds:[ebx]
  414cb8:	sahf   
  414cb9:	mov    DWORD PTR [ecx-0x2dd6bcb0],0x9308bbaa
  414cc3:	shl    BYTE PTR [eax-0x1db70ea5],0xbd
  414cca:	lock xchg edx,eax
  414ccc:	test   eax,0x5ad0b4fd
  414cd1:	fidivr WORD PTR [ebp+0x6c]
  414cd4:	(bad)  
  414cd5:	jge    0x414d4e
  414cd7:	retf   
  414cd8:	add    al,0x6d
  414cda:	jl     0x414c74
  414cdc:	test   eax,0x6d52f3d2
  414ce1:	xchg   edi,eax
  414ce2:	out    0x4c,al
  414ce4:	and    al,0xb1
  414ce6:	out    0xb3,eax
  414ce8:	outs   dx,BYTE PTR ds:[esi]
  414ce9:	adc    ebx,DWORD PTR [eax-0x44]
  414cec:	mov    ch,0x22
  414cee:	xor    al,0xef
  414cf0:	sub    eax,0xc8b05af3
  414cf6:	cmp    eax,0x5a78f5f6
  414cfb:	retf   
  414cfc:	loopne 0x414d5b
  414cfe:	int3   
  414cff:	pop    edx
  414d00:	loope  0x414d75
  414d02:	popa   
  414d03:	arpl   WORD PTR [ebx+0x1e],bx
  414d06:	mov    edi,0x7d87914f
  414d0b:	jne    0x414d47
  414d0d:	adc    eax,0xa33599a2
  414d12:	arpl   dx,si
  414d14:	jecxz  0x414cbf
  414d16:	pop    ds
  414d17:	popa   
  414d18:	out    dx,al
  414d19:	mov    bl,0x26
  414d1b:	xchg   edi,eax
  414d1c:	std    
  414d1d:	inc    esi
  414d1e:	cmp    eax,0xd19d6aef
  414d23:	cmp    eax,0xbc6efc0b
  414d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d29:	in     eax,0x6d
  414d2b:	out    0x7b,eax
  414d2d:	leave  
  414d2e:	mov    ecx,0x76a3579e
  414d33:	inc    ebp
  414d34:	pop    eax
  414d35:	test   eax,0x8382acde
  414d3a:	(bad)  
  414d3b:	jne    0x414d8a
  414d3d:	ja     0x414d39
  414d3f:	and    ecx,esi
  414d41:	sbb    DWORD PTR [ebp+0x4209b085],eax
  414d47:	addr16 inc esi
  414d49:	mov    edi,0xf567e197
  414d4e:	cli    
  414d4f:	mov    bl,0xfb
  414d51:	enter  0xf6a8,0x40
  414d55:	and    al,0xf
  414d57:	add    BYTE PTR [ebx-0x6c434bee],dh
  414d5d:	gs out 0x61,al
  414d60:	mov    ebp,ss
  414d62:	push   es
  414d63:	mov    DWORD PTR [ecx+0x7146f98a],0x9e040447
  414d6d:	sbb    al,0x47
  414d6f:	in     al,dx
  414d70:	ins    BYTE PTR es:[edi],dx
  414d71:	jle    0x414dd5
  414d73:	mov    eax,0xf6ab879d
  414d78:	push   0x2
  414d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d7c:	mov    ch,0x9f
  414d7e:	mov    ch,dh
  414d80:	pushf  
  414d81:	sti    
  414d82:	jmp    0xd9ec:0x6fe1f0aa
  414d89:	cs inc edi
  414d8b:	mov    al,0x76
  414d8d:	jl     0x414d33
  414d8f:	or     DWORD PTR [edi+0x6e368700],ebx
  414d95:	push   ebp
  414d96:	mov    dl,0x3b
  414d98:	push   esi
  414d99:	in     eax,0xce
  414d9b:	inc    ebp
  414d9c:	add    esp,esi
  414d9e:	xor    BYTE PTR [ebx+eax*1+0x2c],ch
  414da2:	ds jg  0x414e21
  414da5:	aad    0x25
  414da7:	leave  
  414da8:	into   
  414da9:	ret    
  414daa:	sbb    ecx,DWORD PTR [esi+0x3f]
  414dad:	fdivr  DWORD PTR [ebx-0x73c7584f]
  414db3:	int    0x95
  414db5:	adc    ecx,0xffffff87
  414db8:	lods   eax,DWORD PTR ds:[esi]
  414db9:	popf   
  414dba:	xor    dl,bl
  414dbc:	pop    ds
  414dbd:	mov    WORD PTR [edi*1-0x23eff404],fs
  414dc4:	xchg   esp,eax
  414dc5:	mov    edi,DWORD PTR [edi]
  414dc7:	addr16 retf 0xcc2
  414dcb:	test   al,0x43
  414dcd:	pop    ds
  414dce:	fstp   QWORD PTR [esp+edi*1-0x640bf501]
  414dd5:	lock stos BYTE PTR es:[edi],al
  414dd7:	xor    eax,0x9076a738
  414ddc:	xchg   ebx,eax
  414ddd:	repz or DWORD PTR [ebx-0x450009bf],edi
  414de4:	mov    esp,0x948d2c22
  414de9:	mov    esp,0x54b2ac0d
  414dee:	xor    cl,BYTE PTR [ecx]
  414df0:	(bad)  
  414df2:	and    esi,DWORD PTR [ecx+0x49]
  414df5:	and    eax,0x570b58c8
  414dfa:	sbb    al,BYTE PTR [edi+ecx*2]
  414dfd:	fimul  WORD PTR ss:[edi]
  414e00:	icebp  
  414e01:	dec    edi
  414e02:	rol    DWORD PTR [ecx-0x53711702],1
  414e08:	out    dx,al
  414e09:	inc    edx
  414e0a:	pop    eax
  414e0b:	mov    ah,0x6b
  414e0d:	aaa    
  414e0e:	scas   eax,DWORD PTR es:[edi]
  414e0f:	sbb    ecx,DWORD PTR [ebx]
  414e11:	addr16 jmp 0xd33d:0x2e7d699
  414e19:	out    dx,al
  414e1a:	(bad)  
  414e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1c:	add    DWORD PTR [ebp-0x5e],ebx
  414e1f:	fistp  QWORD PTR [ebp-0x4e]
  414e22:	mov    ch,0x7
  414e24:	adc    ch,BYTE PTR ds:0x4e96c369
  414e2a:	jns    0x414ea4
  414e2c:	push   0xc299129c
  414e31:	stos   BYTE PTR es:[edi],al
  414e32:	pusha  
  414e33:	div    DWORD PTR ds:0x8ab7d2b3
  414e39:	(bad)
  414e3d:	or     BYTE PTR [ebx-0x27],bl
  414e40:	gs repz pop ds
  414e43:	add    dl,BYTE PTR [eax+esi*8+0x30]
  414e47:	repz inc dx
  414e4a:	add    dh,BYTE PTR [ebp+0x1f2fb268]
  414e50:	bound  esi,QWORD PTR [edi+0xa]
  414e53:	jle    0x414e37
  414e55:	cmp    eax,esp
  414e57:	sub    al,0xc9
  414e59:	xchg   edi,eax
  414e5a:	mov    ds:0x3bca4619,al
  414e5f:	ss fs stc 
  414e62:	iret   
  414e63:	ja     0x414ead
  414e65:	cmp    eax,0x44538c07
  414e6a:	test   eax,0xbe3022d1
  414e6f:	xchg   DWORD PTR [esi],ebp
  414e71:	repnz (bad) 
  414e73:	mov    BYTE PTR [ebx-0x1e],dl
  414e76:	cmp    bl,ch
  414e78:	xlat   BYTE PTR ds:[ebx]
  414e79:	pop    ecx
  414e7a:	adc    eax,0xccd0e025
  414e7f:	sahf   
  414e80:	ins    DWORD PTR es:[edi],dx
  414e81:	(bad)  
  414e82:	into   
  414e83:	pop    ecx
  414e84:	jmp    0xba63a533
  414e89:	dec    esp
  414e8a:	adc    eax,0x11d4d9e7
  414e8f:	mov    dh,0xd4
  414e91:	push   edx
  414e92:	test   al,0x57
  414e95:	jg     0x414e1c
  414e97:	test   eax,0xb37f2f46
  414e9c:	mov    ds,WORD PTR [eax-0x54]
  414e9f:	shl    BYTE PTR fs:[ebp-0x57],cl
  414ea3:	dec    edx
  414ea4:	add    BYTE PTR [edx],0xec
  414ea7:	ins    DWORD PTR es:[edi],dx
  414ea8:	mov    ?,WORD PTR [edx]
  414eaa:	jl     0x414eb5
  414eac:	dec    eax
  414ead:	xchg   DWORD PTR [edx-0x418e021],ecx
  414eb3:	aaa    
  414eb4:	push   ss
  414eb5:	xchg   DWORD PTR [esi+0x1b994dc5],edx
  414ebb:	xchg   ebx,eax
  414ebc:	(bad)  
  414ebd:	cmp    ch,BYTE PTR [ebx+0x48e366b4]
  414ec3:	lods   al,BYTE PTR ds:[esi]
  414ec4:	pop    es
  414ec5:	adc    DWORD PTR [edi-0x63],ebx
  414ec8:	cmp    DWORD PTR [edi+0x3e],ebx
  414ecb:	jge    0x414ed1
  414ecd:	test   eax,0x85fd26d1
  414ed2:	dec    ebx
  414ed3:	lea    edx,[esi-0x23]
  414ed6:	das    
  414ed7:	sti    
  414ed8:	loopne 0x414e86
  414eda:	cwde   
  414edb:	and    eax,0xe38160f9
  414ee0:	dec    esi
  414ee1:	(bad)  [ebx+0xb40384e]
  414ee7:	clc    
  414ee8:	pop    edi
  414ee9:	lds    ecx,FWORD PTR [eax-0x4]
  414eec:	dec    edx
  414eed:	cmp    ebx,edi
  414eef:	loopne 0x414f37
  414ef1:	mov    al,ds:0x859e353e
  414ef6:	shl    DWORD PTR ds:0x6331912d,cl
  414efc:	and    BYTE PTR [edx],0x27
  414eff:	pop    ecx
  414f00:	repnz sbb DWORD PTR ds:0x1c70409,esp
  414f07:	lahf   
  414f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f09:	les    ebx,FWORD PTR [eax]
  414f0b:	imul   ebp,DWORD PTR [esi-0x32ef0d7d],0xffffffd0
  414f12:	mov    ebx,0x3e57065a
  414f17:	and    BYTE PTR [esi+0x18d86ba0],ah
  414f1d:	cmp    al,0xda
  414f1f:	adc    ah,ch
  414f21:	and    edi,DWORD PTR [ebp+0xd]
  414f24:	fadd   QWORD PTR [esi-0x7ec4dcd4]
  414f2a:	aas    
  414f2b:	js     0x414f2d
  414f2d:	js     0x414f68
  414f2f:	lea    esi,[edx]
  414f31:	repnz mov al,0x76
  414f34:	jg     0x414f4c
  414f36:	jno    0x414efc
  414f38:	xlat   BYTE PTR ds:[ebx]
  414f39:	xchg   edx,eax
  414f3a:	pushf  
  414f3b:	push   esi
  414f3c:	aam    0x81
  414f3e:	xchg   BYTE PTR [ebp+0x2dd4e3ec],dl
  414f44:	inc    eax
  414f45:	dec    esp
  414f46:	ja     0x414ecb
  414f48:	stos   DWORD PTR es:[edi],eax
  414f49:	fsubr  QWORD PTR gs:[bx+di+0x67]
  414f4e:	jmp    0x414f64
  414f50:	lods   al,BYTE PTR ds:[esi]
  414f51:	push   edi
  414f52:	adc    ecx,0xccd2e5e7
  414f58:	loopne 0x414f33
  414f5a:	dec    esi
  414f5b:	pop    ebx
  414f5c:	fwait
  414f5d:	aad    0x9
  414f5f:	ja     0x414f9f
  414f61:	aam    0x19
  414f63:	leave  
  414f64:	sub    dl,bh
  414f66:	xchg   esi,eax
  414f67:	test   BYTE PTR [eax+0x24c42909],0x9a
  414f6e:	(bad)  [edi-0x2d]
  414f71:	lods   al,BYTE PTR ds:[esi]
  414f72:	(bad)  
  414f73:	jmp    0x50b4:0xaf5b75a6
  414f7a:	dec    ecx
  414f7b:	pop    ebx
  414f7c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f7e:	dec    edx
  414f7f:	mov    bl,0xc9
  414f81:	sub    eax,0xa7b9aee4
  414f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f87:	enter  0x8004,0x49
  414f8b:	pop    ebx
  414f8c:	mov    esi,ebx
  414f8e:	mov    cl,0x52
  414f90:	xlat   BYTE PTR ds:[ebx]
  414f91:	mov    es,ebp
  414f93:	call   ebp
  414f95:	call   0x9563884b
  414f9a:	ret    
  414f9b:	push   esi
  414f9c:	jecxz  0x414ffa
  414f9e:	xchg   ecx,eax
  414f9f:	xor    BYTE PTR [edx+ebx*8-0x68],0x39
  414fa4:	pop    ecx
  414fa5:	sub    ebx,DWORD PTR [eax+ebx*1]
  414fa8:	add    eax,0xd39f756
  414fad:	inc    ebx
  414fae:	mov    ecx,0x2618986d
  414fb3:	repnz leave 
  414fb5:	mov    bh,0xa1
  414fb7:	call   0x64ce:0x8ecb54dd
  414fbe:	cmc    
  414fbf:	push   eax
  414fc0:	imul   ebp,DWORD PTR [edi],0x3b
  414fc3:	loop   0x41503d
  414fc5:	vpaddb ymm0,ymm7,ymm3
  414fc9:	push   ebx
  414fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fcb:	je     0x414fd1
  414fcd:	gs inc edi
  414fcf:	jo     0x414fda
  414fd1:	sub    al,0x66
  414fd3:	inc    esp
  414fd4:	ret    
  414fd5:	stos   BYTE PTR es:[edi],al
  414fd6:	xor    al,0xc4
  414fd8:	mov    ah,0x62
  414fda:	mov    ecx,0x8a2de5ce
  414fdf:	cld    
  414fe0:	adc    DWORD PTR [ebx],ebx
  414fe2:	lahf   
  414fe3:	dec    esi
  414fe4:	clc    
  414fe5:	ret    0xd457
  414fe8:	(bad)  
  414fe9:	xchg   ebx,eax
  414fea:	dec    ebx
  414feb:	jmp    0xd821:0xd204a3b7
  414ff2:	scas   eax,DWORD PTR es:[edi]
  414ff3:	out    0xba,eax
  414ff5:	scas   eax,DWORD PTR es:[edi]
  414ff6:	add    ecx,0x3
  414ff9:	mov    esp,0x859af6b5
  414ffe:	in     al,0xbd
  415000:	mov    DWORD PTR [ebp-0x16],edx
  415003:	sahf   
  415004:	cwde   
  415005:	int    0xbf
  415007:	sbb    DWORD PTR [ebx+0x66],edx
  41500a:	and    al,0xe3
  41500c:	or     al,0x75
  41500e:	mov    cl,0x8b
  415010:	std    
  415011:	jns    0x41501f
  415013:	jae    0x414fe6
  415015:	and    eax,DWORD PTR [ecx-0x7934c389]
  41501b:	sub    dh,bh
  41501d:	clc    
  41501e:	in     al,dx
  41501f:	(bad)  
  415020:	pop    ecx
  415021:	sub    eax,0x1d76a4dd
  415026:	cwde   
  415027:	mov    cl,0xd0
  415029:	mov    bl,0x20
  41502b:	or     eax,0xacb557c6
  415030:	sti    
  415031:	(bad)  
  415033:	jnp    0x4150ac
  415035:	adc    esi,DWORD PTR [edx+0x6d]
  415038:	outs   dx,BYTE PTR ds:[esi]
  415039:	inc    esi
  41503a:	not    DWORD PTR [ecx]
  41503c:	scas   al,BYTE PTR es:[edi]
  41503d:	and    eax,0x818b1731
  415042:	mov    ebx,0x3e7f32a5
  415047:	add    al,0x6b
  415049:	mov    cl,0x57
  41504b:	jne    0x41500c
  41504d:	xchg   DWORD PTR [ecx],ecx
  41504f:	jnp    0x4150bd
  415051:	cdq    
  415052:	cmp    bh,BYTE PTR [ebx-0x70f652a9]
  415058:	scas   eax,DWORD PTR es:[edi]
  415059:	pushf  
  41505a:	cli    
  41505b:	leave  
  41505c:	(bad)  
  41505d:	jnp    0x4150b9
  41505f:	inc    eax
  415060:	and    ch,BYTE PTR [eax+0x24f61b2a]
  415066:	call   0xbeb595a6
  41506b:	mov    ah,0xae
  41506d:	sub    dl,al
  41506f:	cmp    BYTE PTR [ecx-0x15c899c2],0xa1
  415076:	cmp    BYTE PTR [edi-0x7f3287c4],0xf5
  41507d:	jge    0x41506a
  41507f:	call   0xd7c0:0x3f05b251
  415086:	pop    edx
  415087:	jecxz  0x41503a
  415089:	imul   ebp,DWORD PTR ds:0x46099d90,0xffffffb5
  415090:	inc    eax
  415091:	loop   0x4150f4
  415093:	cmp    esp,esp
  415095:	pop    ecx
  415096:	adc    esp,DWORD PTR [edi+0x20]
  415099:	test   al,0xa2
  41509b:	jmp    0x415086
  41509d:	addr16 mov ebp,0xf9c9cc1d
  4150a3:	pushf  
  4150a4:	mov    eax,ds:0x331e8bb7
  4150a9:	mov    ah,0x9f
  4150ab:	int    0x8f
  4150ad:	mov    cs,WORD PTR [ebp+0x135fd380]
  4150b3:	inc    edi
  4150b4:	aad    0x98
  4150b6:	or     ch,dh
  4150b8:	dec    esi
  4150b9:	add    DWORD PTR [esi+0x3b431ab3],ecx
  4150bf:	aas    
  4150c0:	sub    bh,BYTE PTR [ebx-0x7256e83a]
  4150c6:	ds daa 
  4150c8:	test   DWORD PTR [ebp-0x266285fe],eax
  4150ce:	shl    BYTE PTR [edx+0x2b],0x15
  4150d2:	mov    cs,edi
  4150d4:	call   0x34:0x7918f890
  4150db:	(bad)  [esi-0x6e9c13f0]
  4150e1:	adc    BYTE PTR ds:0x2db7819d,bh
  4150e7:	outs   dx,BYTE PTR ds:[esi]
  4150e8:	outs   dx,DWORD PTR ds:[esi]
  4150e9:	jl     0x415076
  4150eb:	xlat   BYTE PTR ds:[ebx]
  4150ec:	inc    ecx
  4150ed:	(bad)  
  4150ee:	push   ebx
  4150ef:	out    dx,al
  4150f0:	adc    BYTE PTR [edi+eiz*1],bh
  4150f3:	shl    BYTE PTR [edx+0x69],cl
  4150f6:	xchg   dx,ax
  4150f8:	mov    eax,0xce29bd79
  4150fd:	pop    esi
  4150fe:	and    eax,0xd1c6b260
  415103:	cmp    ebx,DWORD PTR [ebp+0x2]
  415106:	push   esp
  415107:	les    eax,FWORD PTR [ecx-0x6256123e]
  41510d:	and    dh,BYTE PTR [eax+0x40]
  415110:	aas    
  415111:	jae    0x415144
  415113:	push   edx
  415114:	mov    edi,0xd1b56def
  415119:	or     ebx,ecx
  41511b:	loope  0x415139
  41511d:	push   cs
  41511e:	push   eax
  41511f:	out    0xbe,eax
  415121:	jmp    DWORD PTR [esi]
  415123:	neg    BYTE PTR [esi]
  415125:	mov    al,0xaf
  415127:	dec    ebp
  415128:	inc    eax
  415129:	stos   DWORD PTR es:[edi],eax
  41512a:	lds    edx,FWORD PTR [edi]
  41512c:	dec    ebx
  41512d:	aam    0xe4
  41512f:	int    0xc8
  415131:	cwde   
  415132:	out    dx,eax
  415133:	pop    esi
  415134:	lods   eax,DWORD PTR ds:[esi]
  415135:	or     al,0x28
  415137:	xchg   ecx,eax
  415138:	repnz fild DWORD PTR [esi+0x3e173280]
  41513f:	jbe    0x4150fb
  415141:	retf   
  415142:	bound  eax,QWORD PTR [eax]
  415144:	das    
  415145:	popa   
  415146:	and    edx,DWORD PTR [ebp+0x5c07a3f1]
  41514c:	lods   al,BYTE PTR ds:[esi]
  41514d:	ss loope 0x41510e
  415150:	aas    
  415151:	xlat   BYTE PTR ds:[ebx]
  415152:	or     DWORD PTR [ebp-0x2c7e0889],0xfffffff1
  415159:	fimul  WORD PTR [edx]
  41515b:	pop    ecx
  41515c:	sub    BYTE PTR [esi+0x5eec7ef1],dh
  415162:	pop    es
  415163:	inc    ebp
  415164:	sub    BYTE PTR [ecx+eiz*8],bl
  415167:	push   esi
  415168:	dec    ebp
  415169:	ret    
  41516a:	fidivr DWORD PTR [ebp+edx*1-0x49]
  41516e:	(bad)  
  415170:	adc    al,0xf4
  415172:	aam    0x6e
  415174:	scas   eax,DWORD PTR es:[edi]
  415175:	into   
  415176:	(bad)  
  415178:	xor    al,0x4b
  41517a:	push   ss
  41517b:	pop    eax
  41517c:	ja     0x415194
  41517e:	ss popa 
  415180:	mov    edi,0x57d57088
  415185:	jb     0x415148
  415187:	(bad)  
  415189:	cmova  eax,DWORD PTR [esi-0x257c47a]
  415190:	std    
  415191:	xor    eax,0x7ee9f002
  415196:	xlat   BYTE PTR ds:[ebx]
  415197:	aad    0xc7
  415199:	push   ss
  41519a:	pop    es
  41519b:	retf   
  41519c:	inc    ebp
  41519d:	xor    ah,BYTE PTR [edx+0x39]
  4151a0:	call   0xa24eeb34
  4151a5:	ret    
  4151a6:	fstp   DWORD PTR [edx+0x61]
  4151a9:	add    ecx,esp
  4151ab:	data16 arpl WORD PTR [edi+0x3477c1ce],bx
  4151b2:	or     esp,DWORD PTR [edx]
  4151b4:	or     dh,BYTE PTR [ecx]
  4151b6:	mov    esi,DWORD PTR [ecx-0x438994be]
  4151bc:	xchg   eax,edx
  4151be:	call   0x84cf:0x90450c50
  4151c5:	add    al,BYTE PTR [ebp-0x77]
  4151c8:	cwde   
  4151c9:	jmp    0x4151ee
  4151cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151cc:	ret    
  4151cd:	fcmovbe st,st(3)
  4151cf:	mov    ebp,0x6455ccfa
  4151d4:	pop    ecx
  4151d5:	xchg   ebx,eax
  4151d6:	pop    ds
  4151d7:	repz and dl,BYTE PTR [ebx+0x2d7cc905]
  4151de:	jo     0x4151ac
  4151e0:	and    ecx,esp
  4151e2:	dec    edi
  4151e3:	jmp    0x55fa:0x9af82fe6
  4151ea:	cmp    bh,BYTE PTR [edi]
  4151ec:	adc    DWORD PTR [eax+0x5349127],esi
  4151f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151f3:	imul   edi,DWORD PTR [eax-0x1eb66ee6],0x447c70db
  4151fd:	push   ss
  4151fe:	push   0xb0200785
  415203:	loopne 0x4151e7
  415205:	jl     0x415266
  415207:	mov    bl,0x9d
  415209:	aad    0x7b
  41520b:	(bad)  
  41520c:	mov    al,0x10
  41520e:	adc    esp,ecx
  415210:	sahf   
  415211:	in     al,0xc9
  415213:	xor    DWORD PTR [esi],esi
  415215:	mov    esi,0xbf69833f
  41521a:	sbb    BYTE PTR gs:[eax+ebx*4+0x18],dl
  41521f:	pop    esi
  415220:	push   ss
  415221:	adc    edx,0x53
  415224:	rol    BYTE PTR [ecx+edi*4],cl
  415227:	mov    ds:0xd29ac2ad,al
  41522c:	dec    eax
  41522d:	inc    esp
  41522e:	xchg   esp,eax
  41522f:	dec    edx
  415230:	mov    ebp,0x110aaf26
  415235:	leave  
  415236:	mov    ebp,0xf46d2cf0
  41523b:	or     eax,0x9b88f5b5
  415240:	dec    ebp
  415241:	fwait
  415242:	adc    edi,esp
  415244:	adc    BYTE PTR [edx-0x60fe093a],dl
  41524a:	mov    eax,ds:0x315452ac
  41524f:	xchg   esp,eax
  415250:	fstp   TBYTE PTR [ecx+0x5d25b76]
  415256:	(bad)  
  415257:	jmp    0xc965:0xe6f7e4b0
  41525e:	imul   ebx,DWORD PTR ds:0x53a6c75e,0x23593623
  415268:	pop    es
  415269:	xchg   BYTE PTR [edx-0x4b],ch
  41526c:	scas   eax,DWORD PTR es:[edi]
  41526d:	cmc    
  41526e:	mov    esi,0x2fc26042
  415273:	mov    cl,0x24
  415275:	push   ds
  415276:	cmp    eax,0xcab0d4ed
  41527b:	fisttp WORD PTR [edi+0x18b70ec2]
  415281:	sub    al,BYTE PTR [ecx+esi*2]
  415284:	ret    0xcf98
  415287:	aaa    
  415288:	pop    edi
  415289:	sbb    ebx,DWORD PTR [edi-0x9]
  41528c:	mov    ds:0x5a449fb6,al
  415291:	mov    ebx,0x27935c27
  415296:	retf   0xece1
  415299:	xlat   BYTE PTR ds:[ebx]
  41529a:	bnd jne 0x415259
  41529d:	mov    bh,0x5c
  41529f:	pop    esi
  4152a0:	pop    ss
  4152a1:	xchg   ecx,eax
  4152a2:	(bad)  
  4152a3:	cld    
  4152a4:	lds    esi,FWORD PTR [edx]
  4152a6:	jmp    0x2e2f:0x61340aa2
  4152ad:	push   0x16
  4152af:	mov    esp,0x4444dde4
  4152b4:	pop    eax
  4152b5:	fldcw  WORD PTR [ecx+edi*4-0x23478124]
  4152bc:	mov    WORD PTR [ebx],ss
  4152be:	ins    BYTE PTR es:[edi],dx
  4152bf:	inc    edx
  4152c0:	call   FWORD PTR [ecx]
  4152c2:	and    BYTE PTR [edi-0x53dee87d],dl
  4152c8:	fiadd  DWORD PTR ds:0x5c11d9f2
  4152ce:	xchg   edx,eax
  4152cf:	inc    ecx
  4152d0:	cmp    eax,0x67ca8f00
  4152d5:	jp     0x415279
  4152d7:	in     al,dx
  4152d8:	and    eax,0x18c8cbdc
  4152dd:	jnp    0x415329
  4152df:	add    bh,BYTE PTR [ebx-0x15ba69f3]
  4152e5:	(bad)  
  4152e6:	cmp    eax,0xf6cadda0
  4152eb:	rcl    BYTE PTR [edi+0x5c],1
  4152ee:	(bad)  
  4152ef:	sub    al,0xe2
  4152f1:	fs aaa 
  4152f3:	pop    esi
  4152f4:	xchg   BYTE PTR [ecx],bl
  4152f6:	push   ebp
  4152f7:	cli    
  4152f8:	mov    ch,0x7f
  4152fa:	push   edi
  4152fb:	mov    ch,0x35
  4152fd:	loop   0x4152f6
  4152ff:	js     0x415374
  415301:	xor    DWORD PTR [ecx+0x2f01972b],eax
  415307:	cmp    al,0xc8
  415309:	ss pop es
  41530b:	mov    ecx,0x44999683
  415310:	shr    DWORD PTR [edi-0x3c],1
  415313:	add    al,0x44
  415315:	push   edi
  415316:	fadd   QWORD PTR [ecx+0x5b]
  415319:	inc    esp
  41531a:	stos   BYTE PTR es:[edi],al
  41531b:	sub    cl,BYTE PTR [esi+0x67]
  41531e:	xor    BYTE PTR [edi],ch
  415320:	dec    esp
  415321:	pop    ebp
  415322:	ins    DWORD PTR es:[edi],dx
  415323:	pop    ss
  415324:	mov    edx,0x4940911e
  415329:	or     eax,DWORD PTR [eax+esi*2-0x3c]
  41532d:	repnz (bad) 
  41532f:	das    
  415330:	sub    ecx,DWORD PTR [edi]
  415332:	mov    dh,0xe9
  415334:	pop    ecx
  415335:	out    0xb5,al
  415337:	xchg   DWORD PTR [eax+0x47],eax
  41533a:	fiadd  WORD PTR [eax-0x3d367c85]
  415340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415341:	add    DWORD PTR [esp+ebx*8],edi
  415344:	es mov ah,0x66
  415347:	sub    al,0x8e
  415349:	and    BYTE PTR [edi-0x4d],ch
  41534c:	mov    edx,0xfdb0097c
  415351:	xor    eax,DWORD PTR [ebp+0x14910e50]
  415357:	std    
  415358:	lods   eax,DWORD PTR ds:[esi]
  415359:	int    0x4e
  41535b:	cli    
  41535c:	mov    cl,0x6e
  41535e:	pushf  
  41535f:	xchg   edi,eax
  415360:	into   
  415361:	push   esp
  415362:	fisttp DWORD PTR [esi-0x52a7bfc6]
  415368:	or     BYTE PTR [esi+ebx*2],bh
  41536b:	ss mov dh,0x7c
  41536e:	xor    ebp,esp
  415370:	(bad)  
  415371:	jecxz  0x41537e
  415373:	mov    ch,0x68
  415375:	jge    0x4153b6
  415377:	fcomi  st,st(1)
  415379:	ins    DWORD PTR es:[edi],dx
  41537a:	shl    esp,0x2e
  41537d:	or     al,0xb5
  41537f:	adc    dl,ah
  415381:	fdivp  st(1),st
  415383:	mov    dl,0x5e
  415385:	cmp    eax,edi
  415387:	xchg   esp,eax
  415388:	daa    
  415389:	cld    
  41538a:	mov    cl,ch
  41538c:	push   eax
  41538d:	xchg   ecx,eax
  41538e:	fadd   DWORD PTR [edi]
  415390:	adc    ebx,DWORD PTR [edi-0x2b]
  415393:	shl    BYTE PTR [esi],0x27
  415396:	jns    0x415413
  415398:	imul   edx,ebx,0x2f
  41539b:	dec    esp
  41539c:	call   0x46233f87
  4153a1:	inc    esp
  4153a2:	adc    ah,BYTE PTR [esi+0xf672681]
  4153a8:	sbb    al,0x5
  4153aa:	scas   al,BYTE PTR es:[edi]
  4153ab:	ja     0x415423
  4153ad:	shr    DWORD PTR [eax+0x49],1
  4153b0:	sub    ebx,DWORD PTR [eiz*1-0x25c5bcfa]
  4153b7:	push   edx
  4153b8:	jno    0x415399
  4153ba:	ins    BYTE PTR es:[edi],dx
  4153bb:	add    DWORD PTR [eax+0x11b030d1],0x9
  4153c2:	int3   
  4153c3:	xor    al,0x36
  4153c5:	and    dh,BYTE PTR [edx-0x21947ca]
  4153cb:	and    BYTE PTR [eax-0x36a1dc6d],dl
  4153d1:	dec    esp
  4153d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153d3:	mov    ds:0xf7accf9,eax
  4153d8:	(bad)  
  4153da:	idiv   BYTE PTR [esi-0x30]
  4153dd:	fadd   st(7),st
  4153df:	xchg   edx,eax
  4153e0:	inc    edx
  4153e1:	dec    ebp
  4153e2:	push   0x8ee0d542
  4153e7:	retf   0xe281
  4153ea:	push   0xffffffe7
  4153ec:	sub    edx,eax
  4153ee:	cmc    
  4153ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153f0:	cwde   
  4153f1:	sub    DWORD PTR [eax-0x3400afaf],0x19
  4153f8:	push   es
  4153f9:	scas   al,BYTE PTR es:[edi]
  4153fa:	fiadd  DWORD PTR [esi+0x346ae1f7]
  415400:	ss mov eax,0xf18a7edd
  415406:	aam    0xea
  415408:	xchg   DWORD PTR [ebx],edx
  41540a:	and    al,0xd4
  41540c:	mov    bh,BYTE PTR [ecx-0xa]
  41540f:	or     eax,DWORD PTR [ebx+edi*4+0x5a]
  415413:	mov    eax,0x306f8454
  415418:	cmp    esi,DWORD PTR [ebx-0x28]
  41541b:	outs   dx,BYTE PTR ds:[esi]
  41541c:	repnz mov al,cs:0x93f8e55f
  415423:	mov    al,ds:0x70af07c8
  415428:	mov    dl,0xb8
  41542a:	inc    eax
  41542b:	fisttp QWORD PTR [edi]
  41542d:	out    0x4e,eax
  41542f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415430:	scas   al,BYTE PTR es:[edi]
  415431:	mov    ds:0x831ff90c,al
  415436:	loop   0x4153d6
  415438:	mov    ebp,0xe5a91696
  41543d:	fsubr  QWORD PTR [edi]
  41543f:	push   esi
  415440:	popa   
  415441:	push   ebp
  415442:	lahf   
  415443:	push   esp
  415444:	out    0x6f,al
  415446:	pop    es
  415447:	cmp    ah,bl
  415449:	aas    
  41544a:	inc    ebx
  41544b:	iret   
  41544c:	sar    BYTE PTR [eax],cl
  41544e:	pop    eax
  41544f:	sbb    al,BYTE PTR [ecx+0x40aca1e]
  415455:	pop    edx
  415456:	mov    bh,bl
  415458:	or     ch,BYTE PTR [ecx+0x49]
  41545b:	jl     0x41543a
  41545d:	sub    edi,DWORD PTR [edi]
  41545f:	das    
  415460:	call   0xcd411df
  415465:	in     eax,0xbe
  415467:	push   ebp
  415468:	push   esi
  415469:	aam    0x10
  41546b:	push   edi
  41546c:	xlat   BYTE PTR ds:[ebx]
  41546d:	std    
  41546e:	retf   
  41546f:	cld    
  415470:	push   es
  415471:	outs   dx,BYTE PTR ds:[esi]
  415472:	push   0x29
  415474:	push   esp
  415475:	xor    eax,0xb5e24294
  41547a:	into   
  41547b:	mov    ecx,0xd472f162
  415481:	loopne 0x41547c
  415483:	push   esi
  415484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415485:	retf   
  415486:	push   0x33
  415488:	fs dec esi
  41548a:	repnz dec edi
  41548c:	int    0xa2
  41548e:	inc    edx
  41548f:	xchg   ecx,eax
  415490:	push   edx
  415491:	lods   al,BYTE PTR ds:[esi]
  415492:	mov    ss,WORD PTR [eax+eiz*2]
  415495:	mov    ch,0xdd
  415497:	neg    BYTE PTR ss:[ebx+0x4]
  41549b:	mov    ecx,0xd6d40a5
  4154a0:	loop   0x4154c9
  4154a2:	in     al,dx
  4154a3:	fwait
  4154a4:	xchg   BYTE PTR [eax+edx*8+0x2d],dl
  4154a8:	int3   
  4154a9:	sbb    al,BYTE PTR [eax+0x5c87c7]
  4154af:	(bad)  
  4154b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154b1:	pop    ebp
  4154b2:	fadd   DWORD PTR [ebx+0x756ff2f7]
  4154b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154b9:	enter  0xc38f,0x76
  4154bd:	fsub   QWORD PTR [ebp+0x30a8e33]
  4154c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154c4:	sub    eax,0x33872dc0
  4154c9:	mov    edx,0x5746fb7d
  4154ce:	xchg   edi,eax
  4154cf:	jl     0x41545b
  4154d1:	mov    bh,0x60
  4154d3:	or     DWORD PTR [esp+eiz*8+0x439385c3],esi
  4154da:	or     ah,BYTE PTR [edx+0x76]
  4154dd:	aam    0x16
  4154df:	mov    bl,0xdb
  4154e1:	pushf  
  4154e2:	or     BYTE PTR [ecx+0x9],0x8d
  4154e6:	pushf  
  4154e7:	mov    dl,0x25
  4154e9:	ret    0x1d81
  4154ec:	inc    esi
  4154ed:	call   0x66b43bbe
  4154f2:	retf   
  4154f3:	inc    edx
  4154f4:	jns    0x4154dc
  4154f6:	pop    ss
  4154f7:	mov    esi,0xbe883896
  4154fc:	fwait
  4154fd:	dec    esi
  4154fe:	lock cli 
  415500:	mov    ebp,0xf9c72bae
  415505:	and    DWORD PTR [edi+0x59b47b5e],edx
  41550b:	sti    
  41550c:	cmc    
  41550d:	mov    eax,ds:0x5e787697
  415512:	dec    ebp
  415513:	icebp  
  415514:	adc    al,0x73
  415516:	or     al,0xc6
  415518:	jle    0x415516
  41551a:	into   
  41551b:	sub    edi,DWORD PTR [ebp-0xacb7c89]
  415521:	pop    edx
  415522:	popa   
  415523:	inc    edx
  415524:	je     0x2d81323f
  41552a:	stc    
  41552b:	sbb    eax,0x3e0e1c72
  415530:	add    al,0xbc
  415532:	push   0xffffff8f
  415534:	aaa    
  415535:	jmp    0x2193:0x298a8db9
  41553c:	xor    dh,BYTE PTR [ebx-0x7a]
  41553f:	fwait
  415540:	jle    0x4154f6
  415542:	es je  0x41559e
  415545:	xchg   ebx,eax
  415546:	repz arpl ax,cx
  415549:	pusha  
  41554a:	arpl   WORD PTR [ecx],cx
  41554c:	sbb    ebp,DWORD PTR [edx+0x3d]
  41554f:	or     ebx,DWORD PTR [ecx]
  415551:	cmp    al,0x8e
  415553:	pop    esi
  415554:	cwde   
  415555:	mov    es,esi
  415557:	and    DWORD PTR [eax+0x27cdb296],ecx
  41555d:	adc    eax,ecx
  41555f:	sbb    ch,BYTE PTR [esi-0x31]
  415562:	dec    edx
  415563:	test   BYTE PTR [eax],cl
  415565:	inc    ebp
  415566:	mov    ds:0x29433b58,eax
  41556b:	imul   eax,DWORD PTR [edi],0x4c
  41556e:	dec    esp
  41556f:	js     0x4155a7
  415571:	sub    edx,DWORD PTR gs:[edx]
  415574:	dec    eax
  415575:	add    ecx,DWORD PTR [edi+0x4f0d46fe]
  41557b:	enter  0x4ead,0x38
  41557f:	mov    edx,DWORD PTR [ebx]
  415581:	cmp    eax,ebp
  415583:	ja     0x41551f
  415585:	mov    dh,0x30
  415587:	inc    esp
  415588:	cmp    DWORD PTR [eax-0x576347e5],ecx
  41558e:	add    ebp,ebx
  415590:	pop    ss
  415591:	imul   BYTE PTR [eax+0x3c996348]
  415597:	ins    DWORD PTR es:[edi],dx
  415598:	jb     0x415556
  41559a:	add    al,0xca
  41559c:	xchg   edx,eax
  41559d:	retf   
  41559e:	cs js  0x415604
  4155a1:	stos   DWORD PTR es:[edi],eax
  4155a2:	inc    ebp
  4155a3:	popa   
  4155a4:	jns    0x4155da
  4155a6:	js     0x415620
  4155a8:	push   esi
  4155a9:	fisubr WORD PTR [eax+0x39]
  4155ac:	dec    ecx
  4155ad:	ror    BYTE PTR [edi+0x6d],1
  4155b0:	rcl    BYTE PTR [edi],cl
  4155b2:	ss mov edx,ecx
  4155b5:	sbb    ah,BYTE PTR [ecx]
  4155b7:	fdivrp st(5),st
  4155b9:	or     eax,0x8d5e761f
  4155be:	adc    eax,0xa6488502
  4155c3:	sti    
  4155c4:	mov    ds:0x36f7b688,eax
  4155c9:	pusha  
  4155ca:	mov    bh,0x87
  4155cc:	xor    eax,0xd71f2a55
  4155d1:	push   0x7a2ec1de
  4155d6:	rol    BYTE PTR [esi-0x57],0xc9
  4155da:	or     al,0x4
  4155dc:	fwait
  4155dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155de:	neg    DWORD PTR [eax-0x1db5aece]
  4155e4:	jmp    0x3396:0x9239f259
  4155eb:	xchg   edx,eax
  4155ec:	std    
  4155ed:	jge    0x41565f
  4155ef:	je     0x415641
  4155f1:	pop    esp
  4155f2:	repnz pop eax
  4155f4:	dec    ebp
  4155f5:	mov    BYTE PTR [eax+ebx*1+0x44],dh
  4155f9:	sti    
  4155fa:	mov    ah,0x74
  4155fc:	sbb    edx,DWORD PTR [ebx+0x1b4dd44]
  415602:	jle    0x4155c3
  415604:	lods   eax,DWORD PTR ds:[esi]
  415605:	addr16 cmc 
  415607:	scas   eax,DWORD PTR es:[edi]
  415608:	bound  ebx,QWORD PTR [edx-0x1b]
  41560b:	(bad)  
  41560c:	test   al,0x3a
  41560e:	mov    ebx,0x4af3cd3b
  415613:	and    al,BYTE PTR [edi-0x3e14731f]
  415619:	and    al,0xf6
  41561b:	jae    0x415638
  41561d:	out    0xce,eax
  41561f:	(bad)  
  415620:	ficom  WORD PTR [ebp+0x4d]
  415623:	jno    0x415601
  415625:	sbb    eax,esi
  415627:	ret    
  415628:	and    al,0xc5
  41562a:	stos   BYTE PTR es:[edi],al
  41562b:	push   cs
  41562c:	add    esi,DWORD PTR [esi-0x36]
  41562f:	clc    
  415630:	push   edi
  415631:	pop    ds
  415632:	adc    eax,0x51726d6e
  415637:	sub    al,0x5d
  415639:	mov    esi,0x7aee1cc1
  41563e:	mov    bl,0xfd
  415640:	loopne 0x415610
  415642:	retf   
  415643:	mov    ch,0x89
  415645:	inc    DWORD PTR [edi+eax*1-0x162e4c0]
  41564c:	adc    al,BYTE PTR [esi+ebx*4-0x75f4bb3e]
  415653:	bound  edx,QWORD PTR [eax-0x3c8d7b0c]
  415659:	mov    bh,0xad
  41565b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41565c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41565d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41565e:	xor    bl,BYTE PTR [esi-0x3217751]
  415664:	ret    0xdd24
  415667:	cmp    al,0xfc
  415669:	or     dl,BYTE PTR [esi-0x50b405f3]
  41566f:	jg     0x415690
  415671:	loop   0x4156c0
  415673:	or     cl,BYTE PTR [ecx+0x2952eedf]
  415679:	fiadd  WORD PTR [ebx+0x50]
  41567c:	(bad)  
  41567d:	pop    esi
  41567e:	push   edx
  41567f:	adc    eax,DWORD PTR [eax-0x4]
  415682:	xchg   ebp,eax
  415683:	add    DWORD PTR [ecx-0x323ffc02],ecx
  415689:	jmp    0x91665741
  41568e:	in     al,0xca
  415690:	jns    0x4156e3
  415692:	jl     0x415693
  415694:	sub    dl,BYTE PTR [ecx]
  415696:	push   edi
  415697:	repnz push edi
  415699:	loop   0x415715
  41569b:	push   edx
  41569c:	pop    ss
  41569d:	ins    BYTE PTR es:[edi],dx
  41569e:	imul   esp,ebx,0x21
  4156a1:	mov    fs,ebp
  4156a3:	retf   0x385
  4156a6:	pop    edx
  4156a7:	aas    
  4156a8:	dec    esp
  4156a9:	mov    eax,0xc7597768
  4156ae:	cmp    DWORD PTR [edi],0xa72b20c0
  4156b4:	ret    
  4156b5:	enter  0x7543,0xea
  4156b9:	push   ss
  4156ba:	(bad)  
  4156bb:	outs   dx,DWORD PTR ds:[esi]
  4156bc:	mov    cl,0x5b
  4156be:	fdivr  QWORD PTR [eax+0x5c]
  4156c1:	adc    dl,ah
  4156c3:	cmp    al,0x1f
  4156c5:	adc    bh,BYTE PTR [ebp-0x26bf8c6]
  4156cb:	xchg   BYTE PTR [eax-0x6],dh
  4156ce:	push   0x7d31b4d7
  4156d3:	xor    cl,BYTE PTR [ebx+ebp*8-0x1c3064b2]
  4156da:	in     eax,dx
  4156db:	call   0x8fb3:0xbdb38514
  4156e2:	aas    
  4156e3:	popa   
  4156e4:	push   ebx
  4156e5:	lods   al,BYTE PTR ds:[esi]
  4156e6:	push   0x9a362e1d
  4156eb:	arpl   WORD PTR [esp+edx*2-0x3b],di
  4156ef:	scas   al,BYTE PTR es:[edi]
  4156f0:	cmp    al,0x8a
  4156f2:	or     dh,BYTE PTR [ecx-0x251462b0]
  4156f8:	inc    ax
  4156fa:	(bad)  
  4156fb:	das    
  4156fc:	loop   0x415692
  4156fe:	cdq    
  4156ff:	int    0xb1
  415701:	jg     0x415712
  415703:	inc    edi
  415704:	mov    eax,ds:0x9e6d6d74
  415709:	inc    edx
  41570a:	(bad)  
  41570b:	imul   esp,DWORD PTR [edx],0xad76793d
  415711:	fld    DWORD PTR [eax+0x26]
  415714:	inc    eax
  415715:	push   ebx
  415716:	cmp    edi,ecx
  415718:	aam    0xb4
  41571a:	rol    BYTE PTR ss:[ebx],0xa
  41571e:	push   edx
  41571f:	jmp    0x2b3b:0xf89d3c75
  415726:	aaa    
  415727:	stos   BYTE PTR es:[edi],al
  415728:	cs sti 
  41572a:	xchg   edi,ecx
  41572c:	cmc    
  41572d:	sub    eax,0xec575e3c
  415732:	sub    eax,0x8cf688df
  415737:	mov    esi,0x6086edd4
  41573c:	fsub   DWORD PTR [ebp-0x7a]
  41573f:	sbb    bh,BYTE PTR [eax+0x3d]
  415742:	test   eax,0xa69edfc4
  415747:	loop   0x4156ea
  415749:	out    0xc,al
  41574b:	and    cl,dl
  41574d:	cmc    
  41574e:	sbb    dh,al
  415750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415751:	js     0x41576b
  415753:	out    dx,al
  415754:	pop    esp
  415755:	pop    esp
  415756:	dec    esi
  415757:	hlt    
  415758:	and    ch,BYTE PTR [ebx+edi*4+0x36]
  41575c:	sub    bl,BYTE PTR [ecx]
  41575e:	jge    0x4156e5
  415760:	mov    dl,0x1c
  415762:	pop    edx
  415763:	pop    es
  415764:	mov    ?,WORD PTR ds:0x3310275b
  41576a:	pop    es
  41576b:	push   es
  41576c:	jge    0x415714
  41576e:	outs   dx,DWORD PTR ds:[esi]
  41576f:	(bad)  
  415770:	loop   0x4156f3
  415772:	inc    ebp
  415773:	adc    eax,DWORD PTR [edx]
  415775:	outs   dx,DWORD PTR ds:[esi]
  415776:	pusha  
  415777:	pop    esi
  415778:	hlt    
  415779:	dec    edi
  41577a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41577b:	repz xor BYTE PTR ds:0xd67ffce,0x96
  415783:	(bad)  
  415784:	shl    BYTE PTR [ebp+0x3e397458],cl
  41578a:	sbb    bl,bl
  41578c:	aaa    
  41578d:	stc    
  41578e:	out    dx,eax
  41578f:	cmp    eax,0x311dbba2
  415794:	or     edx,DWORD PTR [edi]
  415796:	pushf  
  415797:	ja     0x4157eb
  415799:	or     al,0xb2
  41579b:	iret   
  41579c:	test   al,0x4a
  41579e:	mov    ch,0x75
  4157a0:	aaa    
  4157a1:	ins    BYTE PTR es:[edi],dx
  4157a2:	ins    BYTE PTR es:[edi],dx
  4157a3:	cmp    BYTE PTR [esi+eiz*8-0x1e739edd],ah
  4157aa:	stos   BYTE PTR es:[edi],al
  4157ab:	js     0x415829
  4157ad:	(bad)  
  4157ae:	cmp    eax,ebp
  4157b0:	(bad)  
  4157b1:	in     al,0x25
  4157b3:	cs xchg DWORD PTR ds:[ebp+0x42],ebp
  4157b8:	aaa    
  4157b9:	mov    esp,0xd2426bd2
  4157be:	sub    eax,DWORD PTR [eax-0x612d08b2]
  4157c4:	rol    DWORD PTR [ebx],0xb0
  4157c7:	mov    ch,0xc2
  4157c9:	lea    eax,ds:0xdb745a9c
  4157cf:	pop    ebx
  4157d0:	pop    esi
  4157d1:	cmp    eax,eax
  4157d3:	mov    al,ds:0xef1e6a7b
  4157d8:	(bad)  
  4157d9:	lods   eax,DWORD PTR ds:[esi]
  4157da:	test   al,0xb0
  4157dc:	inc    edx
  4157dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157de:	sbb    esp,DWORD PTR [ebp+0x1ef4358a]
  4157e4:	lea    edx,[edi+ebx*4]
  4157e7:	inc    esi
  4157e8:	in     eax,dx
  4157e9:	pop    eax
  4157ea:	sbb    DWORD PTR [ebx],0xbf84300a
  4157f0:	pusha  
  4157f1:	out    0xc5,al
  4157f3:	jle    0x4157d4
  4157f5:	in     al,0x3
  4157f7:	sbb    eax,DWORD PTR [ebx+eax*4-0x5c]
  4157fb:	pop    esp
  4157fc:	test   al,0x3
  4157fe:	jecxz  0x4157ff
  415800:	adc    BYTE PTR [eax-0x23],dl
  415803:	sbb    al,0xab
  415805:	mov    cs,WORD PTR [edi-0x26]
  415808:	cmp    al,0x54
  41580a:	mov    eax,ds:0x5e4845b6
  41580f:	push   cs
  415810:	add    esp,0xffffff87
  415813:	mov    ds:0x87fb77e8,eax
  415818:	xor    BYTE PTR [esi-0x3a],al
  41581b:	and    BYTE PTR [ebp+0x22e48d4e],dl
  415821:	pop    ds
  415822:	ret    
  415823:	jns    0x4157e0
  415825:	mov    ss,WORD PTR [ebx-0x63]
  415828:	iret   
  415829:	outs   dx,DWORD PTR ds:[esi]
  41582a:	add    DWORD PTR [edi],ebp
  41582c:	fwait
  41582d:	push   ds
  41582e:	shl    BYTE PTR [edi+0x6a],cl
  415831:	mov    ds:0x4b6dc871,eax
  415836:	and    ah,bh
  415838:	mov    BYTE PTR [edi],cl
  41583a:	outs   dx,DWORD PTR ds:[esi]
  41583b:	pop    eax
  41583c:	cld    
  41583d:	mov    al,ss:0xab147e9c
  415843:	jle    0x415857
  415845:	cmp    eax,0xfcd27454
  41584b:	sbb    ebx,DWORD PTR [esi-0xb]
  41584e:	(bad)  
  415850:	or     esp,0x1e
  415853:	call   0xa8b2c0df
  415858:	mov    DWORD PTR [edx-0x65a41a79],ecx
  41585e:	dec    ebx
  41585f:	and    eax,0x32a14342
  415864:	xor    edi,DWORD PTR [esi+0x53ee45a2]
  41586a:	sub    edi,esp
  41586c:	cmp    eax,0xcd72bb97
  415871:	or     ah,0x79
  415874:	mov    BYTE PTR [eax],dh
  415876:	shl    DWORD PTR [edi+0x26],0xd0
  41587a:	pop    ebx
  41587b:	dec    ecx
  41587c:	push   ebp
  41587d:	(bad)  
  41587e:	xlat   BYTE PTR ds:[ebx]
  41587f:	xchg   ebx,eax
  415880:	mov    esp,0xe103528f
  415885:	inc    esi
  415886:	pop    esp
  415887:	(bad)  
  415888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415889:	adc    ebx,eax
  41588b:	es (bad) 
  41588d:	xchg   BYTE PTR [ecx+0x3e],bl
  415890:	sub    al,0x4a
  415892:	(bad)  
  415893:	mov    esi,0x818ff8c2
  415898:	xor    bh,BYTE PTR [edi-0x28]
  41589b:	mov    cl,0x7c
  41589d:	call   0xbd21268d
  4158a2:	retf   
  4158a3:	push   edx
  4158a4:	dec    ebp
  4158a5:	out    dx,eax
  4158a6:	adc    DWORD PTR [ecx+0x20],ecx
  4158a9:	dec    edi
  4158aa:	mov    ebp,0xfcd8c1df
  4158af:	push   edx
  4158b0:	enter  0x240f,0xdc
  4158b4:	push   ss
  4158b5:	in     al,dx
  4158b6:	push   ebx
  4158b7:	shr    al,0x90
  4158ba:	mov    cl,BYTE PTR [esi+0x1e31b479]
  4158c0:	addr16 sti 
  4158c2:	fwait
  4158c3:	lods   eax,DWORD PTR ds:[esi]
  4158c4:	add    DWORD PTR [ebx-0x7b],edi
  4158c7:	cmp    BYTE PTR ds:0x8e343488,cl
  4158cd:	xchg   ebp,eax
  4158ce:	sub    eax,eax
  4158d0:	jp     0x415930
  4158d2:	adc    DWORD PTR [edx+0x7d],esi
  4158d5:	pop    ecx
  4158d6:	loope  0x4158d7
  4158d8:	and    esp,ebx
  4158da:	les    ebx,FWORD PTR [esi*4+0x489d568d]
  4158e1:	or     bh,0x76
  4158e4:	xor    ebx,ebp
  4158e6:	imul   eax,DWORD PTR [edi-0x18fcf672],0xe410b5ac
  4158f0:	es jmp 0x197e:0x649d153c
  4158f8:	inc    esi
  4158f9:	in     eax,0x35
  4158fb:	retf   0x6ab7
  4158fe:	mov    dh,0x34
  415900:	(bad)  
  415901:	fdivr  DWORD PTR [ecx+0x6a]
  415904:	cmp    al,0x57
  415906:	add    al,0xe3
  415908:	sbb    DWORD PTR [esi-0x45d1f493],edi
  41590e:	push   ebx
  41590f:	sub    edx,esi
  415911:	aad    0xf3
  415913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415914:	gs unpcklps xmm0,xmm4
  415918:	jne    0x415994
  41591a:	inc    esi
  41591b:	cmp    dl,BYTE PTR [esi]
  41591d:	scas   al,BYTE PTR es:[edi]
  41591e:	repnz clc 
  415920:	mov    al,0x7e
  415922:	pop    ecx
  415923:	(bad)  
  415924:	dec    BYTE PTR [ecx+0x317cecd0]
  41592a:	xor    BYTE PTR [esi-0x3b],bh
  41592d:	test   eax,0x8d9b5869
  415932:	rol    BYTE PTR [ebp+0x5f96db17],1
  415938:	in     eax,0xe9
  41593a:	fbstp  TBYTE PTR [ebx]
  41593c:	bound  ebx,QWORD PTR [eax+0x40542259]
  415942:	inc    esi
  415943:	jmp    0x439a219
  415948:	push   0x5306b936
  41594d:	cmc    
  41594e:	dec    ebp
  41594f:	cdq    
  415950:	mov    bl,0x78
  415952:	bound  edx,QWORD PTR [esi-0x479f665f]
  415958:	jne    0x4159c1
  41595a:	inc    edx
  41595b:	leave  
  41595c:	pop    esi
  41595d:	xchg   ecx,eax
  41595e:	and    BYTE PTR [edx],ch
  415960:	imul   esi,ebx,0x978a1cd8
  415966:	inc    ebx
  415967:	push   ds
  415968:	icebp  
  415969:	stc    
  41596a:	das    
  41596b:	setle  BYTE PTR [ecx+esi*2-0x2a]
  415970:	cmp    eax,ebx
  415972:	stos   DWORD PTR es:[edi],eax
  415973:	shl    BYTE PTR [esi],cl
  415975:	mov    DWORD PTR [esi],ecx
  415977:	or     eax,0x5a7278c9
  41597c:	xchg   ecx,eax
  41597d:	sub    ch,al
  41597f:	mov    ebx,0xb48d4e71
  415984:	push   ss
  415985:	xor    BYTE PTR [edi],ah
  415987:	fnsave [ecx+eiz*4]
  41598a:	ret    0x2bd6
  41598d:	imul   edi,esp,0x3f15c04b
  415993:	cmp    al,BYTE PTR [edx+0x78]
  415996:	inc    DWORD PTR [ebx-0x63]
  415999:	add    DWORD PTR [eax-0x7e866606],eax
  41599f:	jge    0x415926
  4159a1:	lods   al,BYTE PTR ds:[esi]
  4159a2:	xchg   ebp,eax
  4159a3:	idiv   DWORD PTR [eax+0x6270c6ca]
  4159a9:	imul   ebx,DWORD PTR ds:0x7c5afcb,0x85290c11
  4159b3:	shr    DWORD PTR [ebx+0x5be9e50c],cl
  4159b9:	xor    eax,0x10ceccdc
  4159be:	mov    ch,0x3e
  4159c0:	dec    ebp
  4159c1:	cmp    al,0xd1
  4159c3:	mov    al,ds:0x22493444
  4159c8:	stos   BYTE PTR es:[edi],al
  4159c9:	adc    ecx,DWORD PTR [edi+0x2df54d81]
  4159cf:	ins    BYTE PTR es:[edi],dx
  4159d0:	and    BYTE PTR [esi+esi*1+0x4e],0xad
  4159d5:	dec    ebx
  4159d6:	or     eax,0x2068fba3
  4159db:	shl    DWORD PTR [ebx+0x4a509740],cl
  4159e1:	and    eax,0x39549015
  4159e6:	std    
  4159e7:	dec    edi
  4159e8:	adc    dl,ah
  4159ea:	mov    dh,0xd2
  4159ec:	fs push edx
  4159ee:	adc    DWORD PTR [edx-0x79],ecx
  4159f1:	in     al,0xe9
  4159f3:	mov    eax,0x9201fe0a
  4159f8:	pusha  
  4159f9:	outs   dx,BYTE PTR ds:[esi]
  4159fa:	call   0xe544:0x67224a3b
  415a01:	push   esp
  415a02:	adc    ebp,DWORD PTR ds:0x47b19c8f
  415a08:	mov    fs,ebx
  415a0a:	mov    ebx,0x6e1c446
  415a0f:	inc    edx
  415a10:	push   cs
  415a11:	or     bl,ch
  415a13:	out    dx,eax
  415a14:	pop    edi
  415a15:	sahf   
  415a16:	data16 and al,BYTE PTR [esi+0x5c77f09b]
  415a1d:	adc    al,BYTE PTR [ecx-0x7c]
  415a20:	mov    esp,0x76fb1196
  415a25:	sbb    ebp,esp
  415a27:	ins    DWORD PTR es:[edi],dx
  415a28:	pop    ebp
  415a29:	scas   al,BYTE PTR es:[edi]
  415a2a:	popa   
  415a2b:	clc    
  415a2c:	aad    0x43
  415a2e:	popa   
  415a2f:	loop   0x415a64
  415a31:	jge    0x4159ce
  415a33:	jne    0x415a99
  415a35:	sbb    edi,0x40
  415a38:	jp     0x415a33
  415a3a:	mov    eax,0xc644dcb9
  415a3f:	jne    0x415a8c
  415a41:	and    dh,BYTE PTR [esi+0x69]
  415a44:	cdq    
  415a45:	xchg   edi,eax
  415a46:	loop   0x415a45
  415a48:	add    al,0x19
  415a4a:	gs jne 0x415a72
  415a4d:	ja     0x415a7a
  415a4f:	adc    eax,0x7ac01bc8
  415a54:	pop    es
  415a55:	rol    BYTE PTR [ecx],cl
  415a57:	mov    edx,0xf52fc6a9
  415a5c:	adc    ebx,esp
  415a5e:	(bad)  
  415a5f:	std    
  415a60:	scas   eax,DWORD PTR es:[edi]
  415a61:	xchg   edx,eax
  415a62:	enter  0x6431,0xb8
  415a66:	stos   DWORD PTR es:[edi],eax
  415a67:	or     eax,0x58893a3b
  415a6c:	shl    DWORD PTR ds:0x8f268c84,cl
  415a72:	repnz cld 
  415a74:	jmp    0xbad88ebe
  415a79:	dec    ecx
  415a7a:	mov    esi,0x72ffa749
  415a7f:	xor    esi,DWORD PTR [edx-0x64e05568]
  415a85:	dec    esi
  415a86:	mov    ebp,0x3772f4ee
  415a8b:	jbe    0x415b08
  415a8d:	and    ch,BYTE PTR cs:[ecx+0x4c40e4e3]
  415a94:	arpl   sp,ax
  415a96:	fnsave [eax+0x4c6104fd]
  415a9c:	push   0x2b
  415a9e:	int    0x9
  415aa0:	mov    edi,0xad652da0
  415aa5:	push   ebp
  415aa6:	call   0x495eba3
  415aab:	sub    BYTE PTR [edx-0x247300cd],dl
  415ab1:	lods   eax,DWORD PTR ds:[esi]
  415ab2:	cdq    
  415ab3:	fcomp  QWORD PTR [eax-0x69]
  415ab6:	mov    BYTE PTR [edi-0x64a7b781],0xab
  415abd:	nop
  415abe:	call   0xa0b7:0x1bcf6e5f
  415ac5:	jbe    0x415a9b
  415ac7:	not    DWORD PTR [edx-0x38a487b8]
  415acd:	jne    0x415b45
  415acf:	jmp    0x415ab5
  415ad1:	test   eax,0x73464c64
  415ad6:	addr16 mov ecx,0x25239522
  415adc:	mov    edi,0x301e77d4
  415ae1:	stc    
  415ae2:	mov    bl,BYTE PTR [eax-0x7ba61510]
  415ae8:	jns    0x415ac0
  415aea:	xchg   BYTE PTR [ebx+0x4522a80f],cl
  415af0:	push   eax
  415af1:	adc    cl,BYTE PTR [ebx-0x63]
  415af4:	lahf   
  415af5:	fnstsw WORD PTR [esi+0x34]
  415af8:	sub    al,0x2a
  415afa:	pushf  
  415afb:	xor    eax,0x56b65270
  415b00:	sub    al,0x2c
  415b02:	call   FWORD PTR [edi+edx*4]
  415b05:	scas   eax,DWORD PTR es:[edi]
  415b06:	(bad)  
  415b07:	ins    DWORD PTR es:[edi],dx
  415b08:	dec    esi
  415b09:	popa   
  415b0a:	pop    esp
  415b0b:	retf   
  415b0c:	jl     0x415b0d
  415b0e:	dec    ebp
  415b0f:	push   esi
  415b10:	jg     0x415ab0
  415b12:	rcl    DWORD PTR [esi+0x5a92cfc],1
  415b18:	jle    0x415abc
  415b1a:	push   esi
  415b1b:	retf   
  415b1c:	inc    esp
  415b1d:	mov    edx,0x15e2a7eb
  415b22:	rcr    DWORD PTR [ebp-0x238f259e],0x74
  415b29:	int3   
  415b2a:	fcmove st,st(6)
  415b2c:	pop    es
  415b2d:	sti    
  415b2e:	int    0xe1
  415b30:	adc    DWORD PTR ss:[eax+0x5b511bee],ecx
  415b37:	aaa    
  415b38:	or     eax,0x12ff602
  415b3d:	mov    gs,WORD PTR [ebp-0x5937952f]
  415b43:	adc    al,0x30
  415b45:	lds    ebx,FWORD PTR cs:[edx]
  415b48:	pop    ecx
  415b49:	cmp    BYTE PTR [esi+0x21f8b755],cl
  415b4f:	ror    BYTE PTR [ebp+0x26],0x2f
  415b53:	or     ecx,DWORD PTR [ecx+eiz*4]
  415b56:	jne    0x415b59
  415b58:	fnstenv [edx]
  415b5a:	inc    ecx
  415b5b:	mov    bl,0x9e
  415b5d:	mov    al,0x26
  415b5f:	dec    DWORD PTR [ebx]
  415b61:	pop    ds
  415b62:	(bad)  
  415b64:	xchg   edx,eax
  415b65:	(bad)  
  415b67:	sbb    BYTE PTR [edi+eax*8],ch
  415b6a:	add    bl,al
  415b6c:	div    DWORD PTR [esi-0x2a]
  415b6f:	bound  ecx,QWORD PTR [eax-0x30957b75]
  415b75:	mov    edi,0x9e2e1ec2
  415b7a:	iret   
  415b7b:	retf   0x258c
  415b7e:	call   0x4796:0xacf100b5
  415b85:	and    DWORD PTR [edx],eax
  415b87:	add    eax,DWORD PTR [edx+0x2c]
  415b8a:	in     eax,dx
  415b8b:	xchg   ecx,eax
  415b8c:	mov    cl,BYTE PTR [edi]
  415b8e:	xor    ah,dh
  415b90:	jmp    0x415bab
  415b92:	ds icebp 
  415b94:	popf   
  415b95:	or     BYTE PTR [edi+0x12],cl
  415b98:	jp     0x415b37
  415b9a:	dec    ecx
  415b9b:	shl    BYTE PTR [edi+0xd],0x44
  415b9f:	inc    esi
  415ba0:	mov    bh,ch
  415ba2:	cs adc cl,dh
  415ba5:	je     0x415bed
  415ba7:	jle    0x415b50
  415ba9:	cdq    
  415baa:	(bad)  
  415bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bac:	add    eax,DWORD PTR [edx-0x686d54a7]
  415bb2:	or     bh,BYTE PTR [eax-0x7b]
  415bb5:	ror    DWORD PTR [edi+0x11d300ee],1
  415bbb:	mov    dh,0xd0
  415bbd:	or     eax,0x9e5f0152
  415bc2:	cdq    
  415bc3:	cmp    DWORD PTR [ebx-0x80],ebx
  415bc6:	ror    DWORD PTR [ebx-0x48],1
  415bc9:	ret    
  415bca:	inc    ebp
  415bcb:	lds    esi,FWORD PTR [ebx+esi*4]
  415bce:	psubb  mm3,QWORD PTR [esp+edx*2-0x1]
  415bd3:	retf   
  415bd4:	lods   eax,DWORD PTR fs:[esi]
  415bd6:	cmp    ah,BYTE PTR [ebp-0x79]
  415bd9:	cmp    bh,BYTE PTR [eax-0x61]
  415bdc:	ins    BYTE PTR es:[edi],dx
  415bdd:	repz loope 0x415c44
  415be0:	aam    0x86
  415be2:	out    0x87,al
  415be4:	mov    cl,0x14
  415be6:	xor    dh,BYTE PTR [ecx]
  415be8:	arpl   WORD PTR [eax-0x36],dx
  415beb:	and    DWORD PTR [ecx+ebp*8],edi
  415bee:	push   0xffffffb8
  415bf0:	and    eax,0xb7bcb734
  415bf5:	add    BYTE PTR [eax],ch
  415bf7:	dec    eax
  415bf8:	push   edi
  415bf9:	int    0x77
  415bfb:	xchg   ebx,eax
  415bfc:	clc    
  415bfd:	xchg   ecx,eax
  415bfe:	sbb    BYTE PTR [edx],dh
  415c00:	ins    BYTE PTR es:[edi],dx
  415c01:	push   cs
  415c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c03:	rcl    BYTE PTR [ecx],0xd9
  415c06:	ror    al,0x33
  415c09:	mov    edi,0xcd1c7573
  415c0e:	xor    BYTE PTR [edx],cl
  415c10:	test   al,0xc5
  415c12:	mov    al,BYTE PTR [ebx-0x253b292c]
  415c18:	test   DWORD PTR [esi],esi
  415c1a:	mov    ch,0x71
  415c1c:	mov    ch,0xc9
  415c1e:	inc    ebx
  415c1f:	jecxz  0x415c62
  415c21:	hlt    
  415c22:	cmp    DWORD PTR [edx-0x49da2644],ebx
  415c28:	aaa    
  415c29:	sub    eax,0x8a209c76
  415c2e:	adc    DWORD PTR [ecx+edx*2],ebx
  415c31:	jmp    0x415c57
  415c33:	sahf   
  415c34:	adc    al,BYTE PTR [esi+eax*8+0x7b]
  415c38:	xor    eax,0x5601cd64
  415c3d:	outs   dx,DWORD PTR ds:[esi]
  415c3e:	xchg   edi,eax
  415c3f:	popa   
  415c40:	daa    
  415c41:	jecxz  0x415cbe
  415c43:	cmp    eax,0xce7a65d6
  415c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c49:	adc    eax,0x685ba6ca
  415c4e:	or     DWORD PTR [edi+ecx*4-0x45],esp
  415c52:	fwait
  415c53:	arpl   bp,si
  415c55:	cmp    ebx,DWORD PTR [esi-0x3052a79d]
  415c5b:	not    esi
  415c5d:	jge    0x415c36
  415c5f:	in     al,0x59
  415c61:	loope  0x415be4
  415c63:	xchg   DWORD PTR [edi+0x5f],esp
  415c66:	(bad)  
  415c68:	sub    DWORD PTR [edi+0x28],ebp
  415c6b:	sbb    al,BYTE PTR [eax-0x23]
  415c6e:	cmp    al,0xac
  415c70:	pop    ecx
  415c71:	push   ss
  415c72:	cdq    
  415c73:	data16 (bad) 
  415c75:	js     0x415c79
  415c77:	in     eax,0x83
  415c79:	addr16 mov ds:0x47c0,al
  415c7d:	fisttp WORD PTR [esi+ebp*8-0x51542d67]
  415c84:	pop    edx
  415c85:	ret    
  415c86:	sub    al,0x60
  415c88:	fdivrp st(5),st
  415c8a:	pop    edx
  415c8b:	pop    esi
  415c8c:	inc    ebx
  415c8d:	mov    ebp,0x3ebffb8a
  415c92:	mov    edx,0x2f315967
  415c97:	and    ebx,DWORD PTR [ecx-0x508e8d32]
  415c9d:	(bad)  
  415c9e:	jmp    0x415d1c
  415ca0:	loopne 0x415cf5
  415ca2:	adc    ebx,ebp
  415ca4:	stos   BYTE PTR es:[edi],al
  415ca5:	mov    WORD PTR [ecx*8+0x4d4b46da],?
  415cac:	add    ah,bl
  415cae:	fisttp QWORD PTR [ebp-0x25]
  415cb1:	sub    al,0x93
  415cb3:	dec    edx
  415cb4:	xlat   BYTE PTR ds:[ebx]
  415cb5:	shl    DWORD PTR [eax],1
  415cb7:	and    al,0xe1
  415cb9:	std    
  415cba:	inc    ebp
  415cbb:	imul   eax,DWORD PTR [eax],0x4e
  415cbe:	scas   al,BYTE PTR es:[edi]
  415cbf:	xchg   esp,eax
  415cc0:	fld    DWORD PTR [esi]
  415cc2:	push   ss
  415cc3:	imul   ebp,DWORD PTR [edx+0x3d],0x4d
  415cc7:	xchg   BYTE PTR [ebx-0x6b],bh
  415cca:	push   ebx
  415ccb:	sub    DWORD PTR [ebx+0x1b5cccd],0xffffffa9
  415cd2:	or     al,0xbc
  415cd5:	or     al,0x93
  415cd7:	(bad)  
  415cd8:	pop    ebx
  415cd9:	pop    edi
  415cda:	jb     0x415ca0
  415cdc:	fstp   DWORD PTR [eax+0x2eb50781]
  415ce2:	xchg   DWORD PTR [edx-0x2],eax
  415ce5:	jne    0x415d44
  415ce7:	les    ebp,FWORD PTR [esi-0x520ea72]
  415ced:	lds    esi,FWORD PTR [ebx+eiz*4-0x7e060c2d]
  415cf4:	je     0x415cdf
  415cf6:	(bad)  
  415cf8:	jge    0x415d22
  415cfa:	nop
  415cfb:	sar    BYTE PTR [ebp-0x42],cl
  415cfe:	aaa    
  415cff:	bound  ebx,QWORD PTR [ebx]
  415d01:	or     al,0xe8
  415d03:	fisubr WORD PTR [esi+ebp*1-0x603c5a63]
  415d0a:	adc    al,0x16
  415d0c:	out    dx,al
  415d0d:	dec    eax
  415d0e:	div    BYTE PTR [ebx-0x3f8f1aba]
  415d14:	jns    0x415d11
  415d16:	popa   
  415d17:	push   0x67
  415d19:	nop
  415d1a:	xchg   esp,eax
  415d1b:	xor    dl,BYTE PTR [edi+0x18f909b5]
  415d21:	cld    
  415d22:	in     al,dx
  415d23:	in     eax,dx
  415d24:	imul   ecx,DWORD PTR [ebp-0x28],0x94a5c53
  415d2b:	in     al,dx
  415d2c:	jae    0x415d13
  415d2e:	jne    0x415ce4
  415d30:	shl    DWORD PTR [ecx-0x2f437786],1
  415d36:	pop    ebx
  415d37:	fxch   st(4)
  415d39:	jp     0x415db0
  415d3b:	fstp   TBYTE PTR [ebx+0x5e77bd44]
  415d41:	cwde   
  415d42:	sub    esi,ebp
  415d44:	sbb    BYTE PTR [ebp+0x6d7443c8],dh
  415d4a:	jnp    0x415d04
  415d4c:	pop    ebp
  415d4d:	mov    eax,0xac968955
  415d52:	mov    cs,edi
  415d54:	mov    ds:0x6e4da302,eax
  415d59:	fstp   QWORD PTR [edi-0x4d]
  415d5c:	mov    eax,0x38b4169b
  415d61:	in     eax,dx
  415d62:	xor    al,0xb7
  415d64:	inc    eax
  415d65:	xor    DWORD PTR [esi-0x58],ebx
  415d68:	hlt    
  415d69:	sub    DWORD PTR [eax],ebx
  415d6b:	sub    BYTE PTR [eax-0x23],cl
  415d6e:	call   0xd466284e
  415d73:	and    dh,BYTE PTR [ebp+0x13]
  415d76:	out    dx,eax
  415d77:	dec    ebx
  415d78:	mov    dh,0x31
  415d7a:	pop    ecx
  415d7b:	mov    DWORD PTR [edx+0xffd1612],esi
  415d81:	test   eax,0x6300de94
  415d86:	das    
  415d87:	xchg   ebp,eax
  415d88:	dec    ebx
  415d89:	mov    cl,0x6d
  415d8b:	aaa    
  415d8c:	xchg   ebx,eax
  415d8e:	outs   dx,BYTE PTR ds:[esi]
  415d8f:	xchg   DWORD PTR [eax+0x7e],esi
  415d92:	mov    ds:0xb69d9ab3,eax
  415d97:	xchg   edi,eax
  415d98:	and    al,0x26
  415d9a:	mov    al,BYTE PTR [ebx+0x16]
  415d9d:	adc    DWORD PTR [ebx],edi
  415d9f:	inc    ecx
  415da0:	sbb    edx,esi
  415da2:	aam    0x6
  415da4:	aam    0x59
  415da6:	pushf  
  415da7:	cld    
  415da8:	xchg   esp,eax
  415da9:	lds    ebp,FWORD PTR [edi]
  415dab:	jnp    0x415e23
  415dad:	repnz nop
  415daf:	call   0x3f96:0x9e2052de
  415db6:	aas    
  415db7:	das    
  415db8:	xchg   edx,eax
  415db9:	cmp    ch,BYTE PTR [edi]
  415dbb:	(bad)  
  415dbc:	jge    0x415e19
  415dbe:	pushf  
  415dbf:	mov    ebx,0xb6085794
  415dc4:	cli    
  415dc5:	test   DWORD PTR [edi],esp
  415dc7:	xchg   ecx,eax
  415dc8:	test   al,0x8e
  415dca:	out    0x85,eax
  415dcc:	sbb    DWORD PTR ds:0x8776498,edi
  415dd2:	ss cmc 
  415dd4:	dec    ebp
  415dd5:	idiv   BYTE PTR [esi]
  415dd7:	xchg   ebp,eax
  415dd8:	(bad)  
  415dd9:	pop    edx
  415dda:	cmp    dl,0x77
  415ddd:	pop    ebx
  415dde:	js     0x415def
  415de0:	in     al,dx
  415de1:	retf   
  415de2:	(bad)  
  415de3:	jge    0x415dd8
  415de5:	cmp    DWORD PTR [ebp-0x66729bfa],edx
  415deb:	iret   
  415dec:	call   0xf15d806b
  415df1:	sub    al,0x13
  415df3:	addr16 aaa 
  415df5:	push   ss
  415df6:	xchg   edi,eax
  415df7:	pop    es
  415df8:	xchg   ebp,eax
  415df9:	pop    edx
  415dfa:	adc    eax,0x2083447d
  415dff:	adc    BYTE PTR [eax],dh
  415e01:	jl     0x415ddd
  415e03:	rol    DWORD PTR ds:0x3568f588,0xdb
  415e0a:	aas    
  415e0b:	std    
  415e0c:	inc    edx
  415e0d:	scas   al,BYTE PTR es:[edi]
  415e0e:	test   BYTE PTR [eax],0x7e
  415e11:	or     DWORD PTR [ecx+0x445bb7f2],ecx
  415e17:	push   esp
  415e18:	in     al,dx
  415e19:	mov    BYTE PTR [edx+esi*8-0x26695365],bl
  415e20:	dec    edx
  415e21:	in     eax,dx
  415e22:	sub    DWORD PTR [eax+edi*4],edi
  415e25:	jge    0x415e18
  415e27:	dec    edi
  415e28:	sbb    edx,DWORD PTR [edx+ecx*1+0x21]
  415e2c:	push   0x3ef4b9e8
  415e31:	mov    bh,0xe2
  415e33:	mov    ecx,0xed4cbcd6
  415e38:	(bad)  
  415e39:	cld    
  415e3a:	ja     0x415e02
  415e3c:	push   ss
  415e3d:	add    edx,0x77
  415e40:	(bad)  
  415e41:	fstp   TBYTE PTR [edx]
  415e43:	lea    edx,[ebx+eiz*2]
  415e46:	int3   
  415e47:	inc    ebx
  415e48:	addr16 es mov al,0x94
  415e4c:	pusha  
  415e4d:	fs mov dh,0x31
  415e50:	xchg   ebx,eax
  415e51:	cmp    BYTE PTR [ebp+ecx*1+0xa2d06c4],ah
  415e58:	je     0x415e9a
  415e5a:	mov    ebx,0xe06a0a70
  415e5f:	add    BYTE PTR [edx],dl
  415e61:	sti    
  415e62:	repnz int3 
  415e64:	test   eax,0x5acf857e
  415e69:	das    
  415e6a:	ins    DWORD PTR es:[edi],dx
  415e6b:	push   ds
  415e6c:	(bad)  
  415e6d:	push   ebx
  415e6e:	shr    bh,1
  415e70:	xor    al,0x13
  415e72:	dec    esi
  415e73:	stos   DWORD PTR es:[edi],eax
  415e74:	in     eax,0x1e
  415e76:	iret   
  415e77:	jns    0x415e23
  415e79:	jnp    0x415e16
  415e7b:	push   esp
  415e7c:	push   0x84174b4c
  415e81:	sub    eax,0x84db267
  415e86:	mov    ch,0xc7
  415e88:	mov    bl,0x76
  415e8a:	fst    st(5)
  415e8c:	cmp    ch,BYTE PTR [ebx-0x249c2546]
  415e92:	hlt    
  415e93:	pop    eax
  415e94:	ret    
  415e95:	jl     0x415efb
  415e97:	hlt    
  415e98:	mov    eax,ds:0x763488ff
  415e9d:	cmp    ah,BYTE PTR [eax+ecx*2-0x6d71192c]
  415ea4:	push   cs
  415ea5:	in     eax,dx
  415ea6:	dec    esp
  415ea7:	xor    esi,DWORD PTR [ecx-0x2327c2c1]
  415ead:	jae    0x415e3f
  415eaf:	jb     0x415f2e
  415eb1:	dec    ecx
  415eb2:	push   eax
  415eb3:	out    0xde,eax
  415eb5:	aam    0x6c
  415eb7:	xchg   dl,bl
  415eb9:	lods   eax,DWORD PTR ds:[esi]
  415eba:	push   ss
  415ebb:	retf   0x44ab
  415ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ebf:	dec    edi
  415ec0:	mov    esi,0x34e721b1
  415ec5:	bound  ebp,QWORD PTR [ecx-0x4c]
  415ec8:	xor    eax,0x8cd38875
  415ecd:	js     0x415ef9
  415ecf:	cmc    
  415ed0:	pcmpeqb mm3,QWORD PTR [ebx+0x10]
  415ed4:	enter  0x379c,0x4d
  415ed8:	or     al,0xcc
  415eda:	fs int 0x99
  415edd:	repnz cmp eax,0xe538c912
  415ee3:	mov    bl,0x4f
  415ee5:	fwait
  415ee6:	imul   edi,DWORD PTR [edx+0x38],0x40
  415eea:	sbb    al,0xb6
  415eec:	scas   al,BYTE PTR es:[edi]
  415eed:	push   esp
  415eee:	fmul   DWORD PTR [edx]
  415ef0:	std    
  415ef1:	cmp    al,BYTE PTR [esi+0x504d817f]
  415ef7:	inc    edx
  415ef8:	fidivr WORD PTR ds:0x99ccdee3
  415efe:	push   0xae0440cb
  415f03:	and    DWORD PTR [edx-0x5c],ebx
  415f06:	push   eax
  415f07:	das    
  415f08:	and    DWORD PTR ds:0xbfcdd741,ebx
  415f0e:	in     eax,dx
  415f0f:	pop    eax
  415f10:	bswap  esp
  415f12:	test   eax,0x4f7ddbbc
  415f17:	imul   ebx,DWORD PTR [esp+edi*8+0x26],0xffffff81
  415f1c:	cmc    
  415f1d:	push   ebx
  415f1e:	lea    esp,[ecx]
  415f20:	addr16 cs jmp 0x834e:0xc8432984
  415f29:	daa    
  415f2a:	pop    es
  415f2b:	push   ebp
  415f2c:	jl     0x415f3d
  415f2e:	stc    
  415f2f:	add    al,BYTE PTR [esp+edx*8]
  415f32:	outs   dx,BYTE PTR ds:[esi]
  415f33:	sub    eax,0x848bd9fa
  415f38:	daa    
  415f39:	push   eax
  415f3a:	sub    BYTE PTR ss:[ecx],ch
  415f3d:	rol    BYTE PTR [esi],cl
  415f3f:	inc    edx
  415f40:	cmp    esi,DWORD PTR [eax]
  415f42:	jmp    0x415f5b
  415f44:	xor    DWORD PTR [ebx+esi*1],0xc572a1ad
  415f4b:	in     eax,0xb9
  415f4d:	push   edi
  415f4e:	sbb    DWORD PTR ds:0xff4e5b3e,eax
  415f54:	xchg   ecx,eax
  415f55:	inc    ecx
  415f56:	test   DWORD PTR ss:[ebp-0x14aca091],edx
  415f5d:	shl    BYTE PTR [eax],1
  415f5f:	ror    BYTE PTR fs:[eax-0x65e127f],cl
  415f66:	popf   
  415f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f68:	loopne 0x415f38
  415f6a:	cld    
  415f6b:	and    BYTE PTR [ecx+0x7a1b209a],ch
  415f71:	and    al,0xce
  415f73:	icebp  
  415f74:	arpl   WORD PTR [edx-0x37],ax
  415f77:	or     ah,ch
  415f79:	jecxz  0x415fb3
  415f7b:	lods   al,BYTE PTR ds:[esi]
  415f7c:	sbb    DWORD PTR [edi],edi
  415f7e:	mov    ds:0xfae16a9,eax
  415f83:	(bad)  [edi+ebp*4+0x722d80ed]
  415f8a:	in     al,dx
  415f8b:	add    BYTE PTR [edi-0x5ddcffff],ah
  415f91:	mov    ah,0x5e
  415f93:	xchg   ah,bh
  415f95:	xchg   ebp,eax
  415f96:	les    edi,FWORD PTR [edi*4-0x4ac8a8f9]
  415f9d:	(bad)  
  415f9e:	call   0xff8407ad
  415fa3:	retf   0x33e5
  415fa6:	retf   
  415fa7:	xchg   DWORD PTR cs:[edi+edi*4+0x51],edx
  415fac:	jge    0x415fe0
  415fae:	mov    BYTE PTR [eax-0x2c436b0e],cl
  415fb4:	retf   
  415fb5:	popf   
  415fb6:	les    ecx,FWORD PTR [ebp-0x6a77394f]
  415fbc:	aad    0x52
  415fbe:	out    dx,al
  415fbf:	arpl   WORD PTR [edi-0x57],ax
  415fc2:	and    ch,BYTE PTR [eax]
  415fc4:	inc    eax
  415fc5:	sbb    ch,BYTE PTR [ecx+0x67d5e596]
  415fcb:	enter  0x4407,0x2f
  415fcf:	je     0x416005
  415fd1:	dec    esi
  415fd2:	outs   dx,DWORD PTR ds:[esi]
  415fd3:	push   edi
  415fd4:	jb     0x415ff4
  415fd6:	push   ecx
  415fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fd8:	ins    DWORD PTR es:[edi],dx
  415fd9:	adc    dh,BYTE PTR [eax+0x25]
  415fdc:	push   ds
  415fdd:	pop    esi
  415fde:	jg     0x415f69
  415fe0:	and    ebp,ecx
  415fe2:	xor    BYTE PTR [ebx-0x1442e22c],ah
  415fe8:	in     al,dx
  415fe9:	push   ss
  415fea:	cmp    ch,BYTE PTR [ebp+0x7056be89]
  415ff0:	cmp    edx,0xf4f6ccf3
  415ff6:	push   esp
  415ff7:	mov    BYTE PTR [edi+0x5bd3d55e],ch
  415ffd:	sub    al,0xd5
  415fff:	jns    0x415f8d
  416001:	push   eax
  416002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416004:	idiv   BYTE PTR ds:0x7ae7538a
  41600a:	inc    ecx
  41600b:	mov    fs,WORD PTR [ecx]
  41600d:	mov    bh,0x22
  41600f:	es add esi,eax
  416012:	and    eax,0xe35ba796
  416017:	cmp    esi,DWORD PTR [ebp-0x7282fe3]
  41601d:	sub    DWORD PTR [edi-0x12],ebx
  416020:	lods   eax,DWORD PTR ds:[esi]
  416021:	pop    es
  416022:	mov    BYTE PTR [ecx+0x38],al
  416025:	aam    0x1
  416027:	mov    ah,0xfc
  416029:	cmp    eax,0xf74c246e
  41602e:	les    ebp,FWORD PTR [edx+0x4ab318a7]
  416034:	fisubr DWORD PTR [ebp+0x3c]
  416037:	xchg   esi,eax
  416038:	and    dh,bl
  41603a:	push   es
  41603b:	jmp    0xd83e:0xa2ddefd
  416042:	mov    ds:0x438a3eea,al
  416047:	popf   
  416048:	cmp    edi,DWORD PTR [ebx]
  41604a:	inc    ebx
  41604b:	pop    ss
  41604c:	xchg   esp,eax
  41604d:	call   0xbcfc:0x5a71878f
  416054:	cmc    
  416055:	push   ds
  416056:	pushf  
  416057:	and    eax,esp
  416059:	ss outs dx,BYTE PTR ss:[esi]
  41605c:	xchg   edx,eax
  41605d:	jmp    0x4160ab
  41605f:	cwde   
  416060:	std    
  416061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416062:	adc    eax,0x60a7ab4a
  416067:	push   0xffffffc3
  416069:	notrack jmp DWORD PTR [eax]
  41606c:	je     0x416008
  41606e:	inc    ebp
  41606f:	or     bl,bh
  416071:	pop    ds
  416072:	mov    ebx,0x3f6456eb
  416077:	xlat   BYTE PTR ds:[ebx]
  416078:	adc    BYTE PTR [edx-0xd365fb9],al
  41607e:	sbb    al,al
  416080:	aam    0x3
  416082:	mov    al,0xcf
  416084:	pop    ds
  416085:	stos   BYTE PTR es:[edi],al
  416086:	push   es
  416087:	outs   dx,BYTE PTR ds:[esi]
  416088:	mov    esp,0x8f4a2509
  41608d:	add    BYTE PTR ds:0xc723f7ad,ch
  416093:	push   es
  416094:	mov    ah,0x56
  416097:	pop    edi
  416098:	lock jb 0x416103
  41609b:	in     eax,dx
  41609c:	lds    edi,FWORD PTR [eax+0x6f]
  41609f:	(bad)  
  4160a0:	xchg   ebx,eax
  4160a1:	mov    cl,0x45
  4160a3:	pop    ss
  4160a4:	adc    esp,DWORD PTR [edx]
  4160a6:	pop    ss
  4160a7:	jnp    0x41602f
  4160a9:	in     al,0x59
  4160ab:	mov    esp,0xe9416cb9
  4160b0:	push   ds
  4160b1:	mov    ah,0x28
  4160b3:	fdiv   QWORD PTR [esp+ebp*2+0x47665273]
  4160ba:	retf   
  4160bb:	shr    DWORD PTR [edi-0x5],cl
  4160be:	mov    DWORD PTR ds:0x37ae730c,edx
  4160c4:	mov    ds:0x5f90b144,al
  4160c9:	mov    ds:0x555f47d,al
  4160ce:	es fwait
  4160d0:	dec    ebx
  4160d1:	call   0x36f5dd30
  4160d6:	pop    ebx
  4160d7:	out    dx,eax
  4160d8:	inc    edx
  4160d9:	cdq    
  4160da:	shr    DWORD PTR [edi+0x1a341d8f],1
  4160e0:	sub    bh,BYTE PTR [ebx+ebx*2+0x25]
  4160e4:	out    dx,eax
  4160e5:	in     eax,dx
  4160e6:	sbb    eax,0x52dc0f65
  4160eb:	mov    DWORD PTR [eax+eax*1+0x6a],ebx
  4160ef:	gs or  eax,0x7b3c3924
  4160f5:	test   BYTE PTR [edi],bh
  4160f7:	and    BYTE PTR [ebx-0x29],0xe3
  4160fb:	sti    
  4160fc:	dec    ecx
  4160fd:	cmp    al,0xee
  4160ff:	mov    ah,0xd4
  416101:	(bad)  [ecx-0x4f]
  416104:	shl    eax,0x16
  416107:	rcr    edx,cl
  416109:	cs sub al,0x37
  41610c:	lods   al,BYTE PTR ds:[esi]
  41610d:	push   edx
  41610e:	dec    edx
  41610f:	pushf  
  416110:	pop    ecx
  416111:	mov    DWORD PTR [ebp-0x5745a5a9],ebp
  416117:	pop    ecx
  416118:	in     al,0xc5
  41611a:	leave  
  41611b:	loope  0x416151
  41611d:	mov    eax,ds:0xa551640
  416122:	sub    ebp,eax
  416124:	out    dx,al
  416125:	jbe    0x41616e
  416127:	imul   esi,DWORD PTR [edi+0x556eb478],0xabcce598
  416131:	retf   0x8917
  416134:	mul    DWORD PTR [edi-0x748dd5cb]
  41613a:	out    dx,al
  41613b:	jecxz  0x416130
  41613d:	cmp    BYTE PTR [ecx],al
  41613f:	pop    ss
  416140:	xor    eax,DWORD PTR [edx]
  416142:	jne    0x416160
  416144:	mov    ah,0xe4
  416146:	or     bh,BYTE PTR [eax+eiz*8]
  416149:	(bad)  
  41614a:	cli    
  41614b:	inc    esi
  41614c:	or     dh,0x9b
  41614f:	cmp    BYTE PTR [edx-0x6b],0x9
  416153:	je     0x4161d1
  416155:	enter  0x8b77,0xe3
  416159:	jmp    0xa086:0x63aa961d
  416160:	cmp    al,0x4d
  416162:	pop    ebx
  416163:	dec    eax
  416164:	imul   esp,DWORD PTR [esi+0x28],0x3deecf90
  41616b:	mov    esi,0xc22bed19
  416170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416171:	int3   
  416172:	test   BYTE PTR [ecx-0x276937a0],ah
  416178:	push   0x51
  41617a:	fldenv [esi+edx*4]
  41617d:	jb     0x41616b
  41617f:	test   eax,0xd4e05c7f
  416184:	(bad)  
  416185:	jae    0x4161b6
  416187:	cwde   
  416188:	mov    edi,0xaf493b6e
  41618d:	adc    ax,0x6b5
  416191:	into   
  416192:	push   es
  416193:	popa   
  416194:	nop
  416195:	push   edi
  416196:	(bad)  
  416197:	hlt    
  416198:	push   edi
  416199:	xchg   DWORD PTR [esi+esi*4],ebp
  41619c:	aad    0x1c
  41619e:	mov    eax,ds:0x3a03644
  4161a3:	xor    BYTE PTR [esi+0x211316ba],ah
  4161a9:	mov    edi,0x17e8d3f2
  4161ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161af:	or     al,0x9f
  4161b1:	mov    al,ds:0xe363ce80
  4161b6:	enter  0xee06,0xf
  4161ba:	rol    DWORD PTR [edi+eax*8+0x3],cl
  4161be:	fisttp WORD PTR [ebx]
  4161c0:	cld    
  4161c1:	push   ebp
  4161c2:	jl     0x4161b2
  4161c4:	jb     0x41615c
  4161c6:	push   ss
  4161c7:	stos   DWORD PTR es:[edi],eax
  4161c8:	or     ebp,esp
  4161ca:	mov    ecx,0xaa660924
  4161cf:	mov    ss,esi
  4161d1:	arpl   WORD PTR [eax-0x59],ax
  4161d4:	out    0x59,eax
  4161d6:	loope  0x416196
  4161d8:	jmp    0x3eb41299
  4161dd:	sahf   
  4161de:	and    ah,0x76
  4161e1:	push   0x3de9d893
  4161e6:	push   edi
  4161e7:	out    0xcc,eax
  4161e9:	out    dx,al
  4161ea:	cmp    BYTE PTR [esi],ch
  4161ec:	or     eax,0xa888ce26
  4161f1:	out    dx,eax
  4161f2:	jne    0x4161e9
  4161f4:	inc    eax
  4161f5:	sub    al,0x26
  4161f7:	data16 mov bh,BYTE PTR [ecx+ebp*1-0x62]
  4161fc:	(bad)  
  4161fd:	jle    0x416217
  4161ff:	pop    ds
  416200:	pop    edx
  416201:	mov    esp,0x7ad1bb2
  416206:	cmp    dl,BYTE PTR [edx]
  416208:	dec    esi
  416209:	fldcw  WORD PTR [ebp-0x42]
  41620c:	push   0xffffffca
  41620e:	push   ds
  41620f:	adc    BYTE PTR [ecx+edx*2-0x62e3b90a],0x60
  416217:	push   ebx
  416218:	push   es
  416219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41621a:	cmp    cl,cl
  41621c:	and    ebx,DWORD PTR [eax+0x4c0a5858]
  416222:	pop    eax
  416223:	test   eax,0x98cad175
  416228:	ss xchg edi,eax
  41622a:	jns    0x41624f
  41622c:	inc    edi
  41622d:	out    dx,al
  41622e:	fmulp  st(2),st
  416230:	inc    eax
  416231:	sbb    eax,0xea39ba73
  416236:	stos   DWORD PTR es:[edi],eax
  416237:	in     eax,dx
  416238:	inc    ebx
  416239:	adc    al,0xca
  41623b:	xchg   ebx,eax
  41623c:	sar    DWORD PTR [eax+0x70],1
  41623f:	inc    ecx
  416240:	outs   dx,BYTE PTR ds:[esi]
  416241:	pushf  
  416242:	pop    ebx
  416243:	pushf  
  416244:	clc    
  416245:	int    0xe2
  416247:	ja     0x41627c
  416249:	and    eax,0xd0128b2f
  41624e:	outs   dx,BYTE PTR ds:[esi]
  41624f:	dec    esi
  416250:	push   cs
  416251:	xchg   esp,eax
  416252:	sti    
  416253:	push   ss
  416254:	leave  
  416255:	xchg   edi,eax
  416256:	push   es
  416257:	sbb    ah,ch
  416259:	aam    0xbd
  41625b:	jmp    0xe7c1:0x2ddac237
  416262:	fmulp  st(7),st
  416264:	idiv   DWORD PTR [esi+eiz*8]
  416267:	repz int3 
  416269:	cmp    bl,BYTE PTR [edx]
  41626b:	ss inc edi
  41626d:	in     al,dx
  41626e:	inc    ebp
  41626f:	adc    ebx,edx
  416271:	aaa    
  416272:	and    al,0x4e
  416274:	jb     0x4162a8
  416276:	and    ah,BYTE PTR [ebp-0x22]
  416279:	popa   
  41627a:	jl     0x41620c
  41627c:	cmp    DWORD PTR [edi+0x47e9f618],ecx
  416282:	add    cl,BYTE PTR [ebp-0x7d]
  416285:	lods   al,BYTE PTR ds:[esi]
  416286:	sbb    eax,0x7efcb12
  41628b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41628c:	enter  0xb47f,0x16
  416290:	inc    esi
  416291:	jb     0x4162f6
  416293:	cmc    
  416294:	loopne 0x4162ae
  416296:	add    eax,0x1d8d9cd6
  41629b:	mov    eax,0xe9ccf4d
  4162a0:	std    
  4162a1:	ret    0x86d5
  4162a4:	cmp    dh,BYTE PTR [ebp+0xaf97198]
  4162aa:	adc    DWORD PTR [ecx+0x79],edx
  4162ad:	fs clc 
  4162af:	cmp    DWORD PTR [eax-0x7e],edi
  4162b2:	jns    0x41632a
  4162b4:	nop
  4162b5:	push   ebx
  4162b6:	retf   
  4162b7:	out    dx,al
  4162b8:	js     0x416312
  4162ba:	adc    eax,0xf2a06aa3
  4162bf:	jne    0x4162a9
  4162c1:	xor    al,0x46
  4162c3:	jp     0x41628d
  4162c5:	stos   DWORD PTR es:[edi],eax
  4162c6:	fwait
  4162c7:	add    al,0xd9
  4162c9:	fstp   DWORD PTR [ecx+0x2f9add81]
  4162cf:	dec    esi
  4162d0:	ja     0x4162bf
  4162d2:	sbb    al,BYTE PTR [ecx-0xd4c2731]
  4162d8:	adc    BYTE PTR [ecx-0x131f976a],0x25
  4162df:	xor    eax,0x602d96d
  4162e4:	outs   dx,DWORD PTR ds:[esi]
  4162e5:	mov    al,0xc6
  4162e7:	mov    ch,cl
  4162e9:	scas   eax,DWORD PTR es:[edi]
  4162ea:	rcl    BYTE PTR [ebp+0x37],cl
  4162ed:	popa   
  4162ee:	push   esp
  4162ef:	imul   edx,ebx,0xfffffffe
  4162f2:	scas   eax,DWORD PTR es:[edi]
  4162f3:	leave  
  4162f4:	sbb    dl,ah
  4162f6:	add    BYTE PTR [eax+edx*1+0x7da7347d],dl
  4162fd:	sbb    edx,ebx
  4162ff:	in     eax,0x7f
  416301:	enter  0x5d46,0xcf
  416305:	xchg   cl,ah
  416307:	xchg   esi,eax
  416308:	inc    eax
  416309:	mov    edx,0x4ad14de6
  41630e:	mov    edx,DWORD PTR [ebx-0x3d]
  416311:	xor    ah,0xe0
  416314:	push   edx
  416315:	push   esi
  416316:	icebp  
  416317:	fst    QWORD PTR [ecx+0x5a30e5b7]
  41631d:	and    eax,0x3694af13
  416322:	mov    DWORD PTR [eax],eax
  416324:	repz push 0x1b5326f5
  41632a:	loop   0x4162b3
  41632c:	mov    esi,DWORD PTR fs:[eax+0x639f4f09]
  416333:	push   edi
  416334:	xor    al,0xbf
  416336:	mov    dl,0xc
  416338:	xchg   edi,eax
  416339:	mov    bl,0xe4
  41633b:	scas   eax,DWORD PTR es:[edi]
  41633c:	lods   eax,DWORD PTR ds:[esi]
  41633d:	iret   
  41633e:	sub    BYTE PTR [edi],cl
  416340:	jecxz  0x4163bc
  416342:	cmp    DWORD PTR [ecx],edx
  416344:	mov    DWORD PTR [ecx-0x19],ebx
  416347:	and    BYTE PTR [esi+0x67d132db],dh
  41634d:	xchg   esp,eax
  41634e:	call   0x4c04:0xa00f9537
  416355:	popf   
  416356:	sbb    ecx,DWORD PTR [ebx+0x79]
  416359:	rcr    BYTE PTR [edx+0x41],1
  41635c:	add    edi,ebx
  41635e:	aaa    
  41635f:	out    dx,al
  416360:	repnz inc edx
  416362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416363:	les    edi,FWORD PTR ds:0xea0b74bd
  416369:	repz hlt 
  41636b:	mov    bh,dl
  41636d:	and    DWORD PTR [ecx-0x3ca1f0ff],esi
  416373:	or     eax,0xe4202cc3
  416378:	push   ecx
  416379:	xchg   DWORD PTR [ebx],edx
  41637b:	xchg   edi,eax
  41637c:	arpl   WORD PTR ds:0xc73e3b94,bx
  416382:	sbb    DWORD PTR [esi+edx*1+0x60],edx
  416386:	(bad)  
  416387:	fadd   DWORD PTR [esi-0x5895f069]
  41638d:	and    al,BYTE PTR [ebx+ecx*8+0x5f]
  416391:	add    BYTE PTR [eax+0x6e],cl
  416394:	mov    eax,es
  416396:	cmp    BYTE PTR [edi],al
  416398:	es test al,0xd3
  41639b:	cmp    al,0x23
  41639d:	jno    0x416404
  41639f:	or     edi,DWORD PTR [ebx-0x7fc7dca5]
  4163a5:	(bad)  
  4163a6:	and    ebx,eax
  4163a8:	std    
  4163a9:	cmc    
  4163aa:	mov    eax,0x23d7321d
  4163af:	inc    ebp
  4163b0:	aaa    
  4163b1:	call   0x2141:0xb31cb3b3
  4163b8:	cld    
  4163b9:	or     al,0x58
  4163bb:	push   0xc8bab09d
  4163c0:	in     eax,dx
  4163c1:	adc    DWORD PTR [edx+ebx*8],edi
  4163c4:	int    0x97
  4163c6:	aas    
  4163c7:	lahf   
  4163c8:	pop    edx
  4163c9:	pop    ds
  4163ca:	iret   
  4163cb:	stos   BYTE PTR es:[edi],al
  4163cc:	push   esi
  4163cd:	cmp    ch,BYTE PTR [ecx-0x41]
  4163d0:	sti    
  4163d1:	(bad)  
  4163d2:	pop    esp
  4163d3:	dec    edi
  4163d4:	das    
  4163d5:	call   0x84cd:0xc1f050c5
  4163dc:	fs mov dh,0x9e
  4163df:	mov    eax,DWORD PTR [edx+0x6f]
  4163e2:	and    DWORD PTR [ebp-0x646177f0],esp
  4163e8:	clc    
  4163e9:	(bad)  
  4163ea:	loope  0x41641d
  4163ec:	jo     0x416412
  4163ee:	jg     0x416388
  4163f0:	mov    eax,DWORD PTR [eax]
  4163f2:	jmp    0xfc3d8712
  4163f7:	sub    bh,bl
  4163f9:	sub    BYTE PTR [ecx],ch
  4163fb:	(bad)  
  4163fd:	cs adc dh,ch
  416400:	sti    
  416401:	dec    ecx
  416402:	data16 jb 0x416440
  416405:	xchg   esi,eax
  416406:	mov    ah,BYTE PTR [ebx-0x2dd6b67]
  41640c:	mov    eax,DWORD PTR [esi-0x697edfc0]
  416412:	lods   eax,DWORD PTR ds:[esi]
  416413:	jae    0x416461
  416415:	add    eax,0xdcecdf83
  41641a:	xchg   DWORD PTR fs:[ecx-0x7e0f517f],esi
  416421:	mov    bh,0xfb
  416423:	fs cmp cl,dh
  416426:	jecxz  0x4163cb
  416428:	in     al,dx
  416429:	or     al,BYTE PTR [edi]
  41642b:	daa    
  41642c:	adc    esp,DWORD PTR [edx+0x4839eb6b]
  416432:	test   BYTE PTR [esi+0x6451d8f3],ah
  416438:	(bad)  
  416439:	push   edi
  41643a:	and    BYTE PTR [edx],dl
  41643c:	aaa    
  41643d:	fadd   st,st(2)
  41643f:	pop    ss
  416440:	ror    DWORD PTR [edi-0x38],1
  416443:	fisubr DWORD PTR [esi-0x717748b4]
  416449:	mov    cl,0x0
  41644b:	cmp    esp,DWORD PTR [eax+0x7d]
  41644e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41644f:	(bad)  
  416450:	(bad)  
  416451:	adc    BYTE PTR [ebp-0xbac6122],al
  416457:	imul   ecx,DWORD PTR [ebx],0x4f
  41645a:	adc    DWORD PTR [eax],edi
  41645c:	cli    
  41645d:	ins    DWORD PTR es:[edi],dx
  41645e:	call   0x4d29:0x3f16c2b6
  416465:	sbb    al,0x96
  416467:	aad    0x2d
  416469:	dec    ebx
  41646a:	shl    BYTE PTR [ebp-0x9fceb02],0x60
  416471:	aam    0x7
  416473:	and    edi,DWORD PTR [ecx-0x2c]
  416476:	add    al,0x11
  416478:	ss jmp 0xb484cbd0
  41647e:	add    BYTE PTR [eax+ebx*2+0x6d220f2c],cl
  416485:	add    DWORD PTR [ebx],eax
  416487:	stc    
  416488:	gs push ecx
  41648a:	and    BYTE PTR [ecx+0x110cef14],dh
  416490:	or     al,0x37
  416492:	and    ebx,DWORD PTR [esi]
  416494:	mov    BYTE PTR [ecx+0xaf119b],0xbd
  41649b:	jmp    0x4164b8
  41649d:	add    al,al
  41649f:	add    DWORD PTR [eax+ecx*2+0x21],0xffffffb2
  4164a4:	retf   
  4164a5:	or     ch,BYTE PTR [ebp-0xe]
  4164a8:	dec    edx
  4164a9:	inc    edi
  4164aa:	lods   eax,DWORD PTR ds:[esi]
  4164ab:	jno    0x4164d2
  4164ad:	xchg   BYTE PTR [edx],dh
  4164af:	bound  esi,QWORD PTR [edi-0x67]
  4164b2:	(bad)  
  4164b3:	clc    
  4164b4:	stc    
  4164b5:	jb     0x4164f6
  4164b7:	loopne 0x41649a
  4164b9:	mov    edx,0x2152f15e
  4164be:	push   0x45088cb3
  4164c3:	(bad)  
  4164c4:	mov    cl,BYTE PTR [edx-0x5b]
  4164c7:	dec    ebx
  4164c8:	mov    eax,ds:0x94957094
  4164cd:	fistp  WORD PTR [ebp-0x77afe518]
  4164d3:	aam    0x37
  4164d5:	sub    DWORD PTR [eax+0x9b4f44f],esp
  4164db:	jge    0x4164fa
  4164dd:	or     eax,0x9a4ca652
  4164e2:	imul   eax,DWORD PTR [ebx],0x977cb00a
  4164e8:	sahf   
  4164e9:	out    dx,eax
  4164ea:	xor    edx,DWORD PTR [edx]
  4164ec:	add    bl,BYTE PTR [esp+ecx*1]
  4164ef:	push   ebp
  4164f0:	sub    edx,eax
  4164f2:	add    ch,dh
  4164f4:	adc    ah,BYTE PTR [edi-0x38]
  4164f7:	(bad)  
  4164f8:	mov    cl,0x7d
  4164fa:	sahf   
  4164fb:	or     eax,0xff2743ca
  416500:	sub    esp,DWORD PTR [eax+0x68d72aa7]
  416506:	scas   eax,DWORD PTR es:[edi]
  416507:	loop   0x416492
  416509:	cmovl  ecx,DWORD PTR [eax-0x2c]
  41650d:	inc    ebx
  41650e:	scas   al,BYTE PTR es:[edi]
  41650f:	push   es
  416510:	in     al,0xa9
  416512:	jnp    0x41658e
  416514:	and    ebx,esp
  416516:	dec    ebp
  416517:	fs xchg ah,al
  41651a:	mul    BYTE PTR [edx+0x37]
  41651d:	rcr    BYTE PTR ds:[ebp-0x107436ea],cl
  416524:	mov    DWORD PTR [ecx],ecx
  416526:	out    0xf6,al
  416528:	and    esp,DWORD PTR [esp+eax*8-0x7051005b]
  41652f:	test   al,0x7c
  416531:	mov    ebx,0x327b534e
  416536:	mov    al,0x14
  416538:	pop    ecx
  416539:	cmp    DWORD PTR [ebx],0xffffff80
  41653c:	push   ss
  41653d:	jne    0x416587
  41653f:	mov    ecx,0xfd3fb3f
  416544:	mov    bh,0xc
  416546:	xchg   ecx,eax
  416547:	xor    DWORD PTR ds:0x428ea7,0x428e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x428ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x428e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x428e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x428e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x428ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x428ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x428ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x42a9f3
  4165d1:	mov    edx,DWORD PTR ds:0x428ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x428ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x428e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x428e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x428e83,edi
  4165fd:	cmp    DWORD PTR ds:0x428e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x428e8f
  416614:	call   DWORD PTR ds:0x42a9f7
  41661a:	cmp    DWORD PTR ds:0x428e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x428e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x428e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x428ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x428ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x428ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x428ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x42a9fb
  41667c:	cmp    DWORD PTR ds:0x428ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x428ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x428ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x428ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x428ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x428eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x428e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x428e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x428e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x428e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x42a9ff
  41670a:	mov    edi,DWORD PTR ds:0x428e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x428e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x428e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x428e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x428e9b
  41673f:	adc    DWORD PTR ds:0x428ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x428e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x428e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x428e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x428e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x428eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x428e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x428e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x428e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x428e67,edx
  4167b1:	cmp    DWORD PTR ds:0x428e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x428111
  4167c8:	call   DWORD PTR ds:0x42a9cb
  4167ce:	cmp    DWORD PTR ds:0x428e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x428e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x428e67,edx
  4167ea:	cmp    DWORD PTR ds:0x428e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x428eaf,0x428e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x428e87
  416816:	or     DWORD PTR ds:0x428e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x42977f
  416825:	mov    ebx,DWORD PTR ds:0x429bff
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x428e5b,0x428e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x428eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x428e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x428e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x428e53,ebx
  416869:	cmp    DWORD PTR ds:0x428e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x42815b
  416880:	call   DWORD PTR ds:0x42a9cf
  416886:	cmp    DWORD PTR ds:0x428e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x428e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x428e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x428e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x42a9d3
  4168ca:	cmp    DWORD PTR ds:0x428e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x428e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x428e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x428e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x428e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x428e8b,0x428e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x428e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x428eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x428e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x428e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x428e33,0x428e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x428e3b
  41694e:	xor    DWORD PTR ds:0x428eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x428ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x428e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x428eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x428eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x428eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x428eab,ebx
  41699e:	cmp    DWORD PTR ds:0x428eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x428eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x42815b
  4169c2:	call   DWORD PTR ds:0x42a9db
  4169c8:	cmp    DWORD PTR ds:0x428eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x428eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x428eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x428e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x428e8f
  416a04:	xor    edx,DWORD PTR ds:0x428e27
  416a0a:	mov    DWORD PTR ds:0x428e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x428ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x428ea3
  416a37:	xor    ebx,DWORD PTR ds:0x428ea7
  416a3d:	mov    DWORD PTR ds:0x428ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x428e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	lahf   
  416a62:	repz sbb edx,DWORD PTR [ebx-0x7c7dbb07]
  416a69:	out    0x60,eax
  416a6b:	add    DWORD PTR [ebx+0x30d36e8b],0x17
  416a72:	(bad)  
  416a73:	and    edi,DWORD PTR [ecx]
  416a75:	fild   QWORD PTR [eax]
  416a77:	mov    ebx,0xd656afc3
  416a7c:	ja     0x416a39
  416a7e:	sahf   
  416a7f:	add    eax,0x36bcd514
  416a84:	xor    ebx,DWORD PTR [ebx]
  416a86:	xor    eax,0xe0a0e553
  416a8b:	or     al,0xb2
  416a8d:	jns    0x416aed
  416a8f:	mov    ebx,0xb6c143d
  416a94:	push   edi
  416a95:	stc    
  416a96:	push   eax
  416a97:	rcl    DWORD PTR [ebx+ecx*1-0x7f],0x7
  416a9c:	or     al,0x56
  416a9e:	push   ss
  416a9f:	jl     0x416a5f
  416aa1:	dec    eax
  416aa2:	and    eax,eax
  416aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416aa7:	sti    
  416aa8:	add    eax,0xfaf12b12
  416aad:	pop    edi
  416aae:	in     al,dx
  416aaf:	cdq    
  416ab0:	jb     0x416aa3
  416ab2:	or     BYTE PTR [esi+0x52abe527],al
  416ab8:	iret   
  416ab9:	in     al,dx
  416aba:	cmc    
  416abb:	dec    eax
  416abc:	fstp   TBYTE PTR [ecx+0x1fca324a]
  416ac2:	jbe    0x416a8c
  416ac4:	xor    eax,0xa5a80982
  416ac9:	call   0x4324:0xcb3545fd
  416ad0:	mov    esp,0xb1764266
  416ad5:	ficomp DWORD PTR [edx+ecx*4-0x2582605e]
  416adc:	mov    ch,0xd3
  416ade:	out    dx,al
  416adf:	aas    
  416ae0:	jno    0x416b48
  416ae2:	int    0xed
  416ae4:	cmp    al,0x3
  416ae7:	aam    0xe9
  416ae9:	(bad)  
  416aea:	ficomp WORD PTR [ebp+0x19]
  416aed:	add    BYTE PTR [eax+edx*8+0x24],dl
  416af1:	xor    DWORD PTR [ebx+0x4abc7385],eax
  416af7:	xor    DWORD PTR [esi+0x7abc0ff4],esp
  416afd:	rol    ecx,0xf3
  416b00:	and    DWORD PTR [ebx-0x5a4cddac],esi
  416b06:	int    0xf6
  416b08:	retf   
  416b09:	ror    BYTE PTR [edx+0x2f],1
  416b0c:	inc    ecx
  416b0d:	data16 xor BYTE PTR [ebp-0x627bed75],dh
  416b14:	mov    al,ds:0xa4051949
  416b19:	loop   0x416b02
  416b1b:	das    
  416b1c:	dec    edi
  416b1d:	in     al,0x26
  416b1f:	in     al,dx
  416b20:	fcomi  st,st(3)
  416b22:	out    dx,al
  416b23:	cld    
  416b24:	and    eax,0xfbeae13b
  416b29:	lods   al,BYTE PTR ds:[esi]
  416b2a:	js     0x416b0d
  416b2c:	push   edi
  416b2d:	(bad)  
  416b2e:	pop    DWORD PTR [edi-0x28]
  416b31:	inc    eax
  416b32:	outs   dx,DWORD PTR ds:[esi]
  416b33:	xchg   ebx,eax
  416b34:	lods   al,BYTE PTR ds:[esi]
  416b35:	mov    edx,0x6c53e6fd
  416b3a:	jo     0x416b23
  416b3c:	mov    ecx,0x7344965a
  416b41:	lahf   
  416b42:	dec    esp
  416b43:	std    
  416b44:	hlt    
  416b45:	scas   eax,DWORD PTR es:[edi]
  416b46:	pop    ebp
  416b47:	or     BYTE PTR [edx+0x5fe78929],0xb0
  416b4e:	sti    
  416b4f:	js     0x416b09
  416b51:	pop    ecx
  416b52:	pop    esp
  416b53:	xchg   esi,eax
  416b54:	mov    dl,0x7a
  416b56:	jo     0x416af6
  416b58:	adc    BYTE PTR [ecx-0x106cbdfb],bl
  416b5e:	inc    edi
  416b5f:	mov    ebx,0x52d27aab
  416b64:	dec    ecx
  416b65:	push   esi
  416b66:	repnz push eax
  416b68:	adc    eax,0x1016f6ac
  416b6d:	addr16 push 0xffffff96
  416b70:	xor    esi,edx
  416b72:	jg     0x416b15
  416b74:	shr    DWORD PTR [edx-0x18846e0c],0x1
  416b7b:	div    DWORD PTR [ecx+ebp*8]
  416b7e:	xchg   esi,eax
  416b7f:	pop    ebp
  416b80:	jge    0x416bff
  416b82:	popf   
  416b83:	mov    dh,0xf3
  416b85:	xchg   ebx,eax
  416b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b87:	mov    ebx,0x89e11b99
  416b8c:	add    al,0x30
  416b8e:	push   eax
  416b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b90:	adc    esp,DWORD PTR [ecx+0x72fb9e5b]
  416b96:	mov    ch,0xe2
  416b98:	pop    ebp
  416b99:	mov    dl,0x5f
  416b9b:	push   ecx
  416b9c:	fbld   TBYTE PTR [eax-0x12]
  416b9f:	js     0x416c0f
  416ba1:	sbb    BYTE PTR [edi-0x1],0xb8
  416ba5:	test   al,0x25
  416ba7:	data16 aaa 
  416ba9:	mov    ds:0xc757c0ec,eax
  416bae:	adc    BYTE PTR [ebx-0x3f],dl
  416bb1:	les    eax,FWORD PTR [ecx]
  416bb3:	cmp    dh,dl
  416bb5:	xor    eax,0x13362e58
  416bba:	inc    DWORD PTR [ebx]
  416bbc:	or     esp,DWORD PTR [edi+0x61]
  416bbf:	push   esp
  416bc0:	shl    BYTE PTR [eax+ebp*2+0x605731a8],0xc1
  416bc8:	pop    ebp
  416bc9:	mov    bl,0x1d
  416bcb:	ds xor eax,0xa0e6408
  416bd1:	dec    ecx
  416bd2:	push   edi
  416bd3:	pop    ds
  416bd4:	mov    eax,0x8871dbf4
  416bd9:	push   0xffffff90
  416bdb:	jno    0x416bbe
  416bdd:	mov    DWORD PTR [edx+0x1e],ebp
  416be0:	outs   dx,DWORD PTR ds:[esi]
  416be1:	inc    edx
  416be2:	or     DWORD PTR [edi],esp
  416be4:	push   ds
  416be5:	jg     0x416c5a
  416be7:	clc    
  416be8:	jns    0x416c3e
  416bea:	or     DWORD PTR [esi+ebx*4],edx
  416bed:	and    al,BYTE PTR [eax]
  416bef:	jbe    0x416bb8
  416bf1:	sbb    DWORD PTR [ebp+0x2b],edx
  416bf4:	lods   eax,DWORD PTR ds:[esi]
  416bf5:	mov    WORD PTR [edx],ds
  416bf7:	outs   dx,DWORD PTR ds:[esi]
  416bf8:	pop    es
  416bf9:	stc    
  416bfa:	xchg   edx,eax
  416bfb:	and    eax,0xf5f1dda6
  416c00:	push   eax
  416c01:	ja     0x416c70
  416c03:	fmul   st,st(1)
  416c05:	int    0x60
  416c07:	aas    
  416c08:	mov    dh,0x85
  416c0a:	and    ebp,DWORD PTR [eax+0x2e]
  416c0d:	push   ebx
  416c0e:	mov    al,0xcf
  416c10:	iret   
  416c11:	dec    ecx
  416c12:	mov    BYTE PTR [edi+0x8831f9e],ah
  416c18:	mov    WORD PTR [esi+0x9],?
  416c1b:	sbb    al,0x1d
  416c1d:	int3   
  416c1e:	popf   
  416c1f:	(bad)  
  416c20:	ror    esi,1
  416c22:	or     cl,BYTE PTR [edi+0x3b]
  416c25:	clc    
  416c26:	stos   BYTE PTR es:[edi],al
  416c27:	push   ds
  416c28:	stos   DWORD PTR es:[edi],eax
  416c29:	sbb    al,0x77
  416c2b:	mov    edi,0x29c50576
  416c30:	retf   0x8ff6
  416c33:	data16 es sub dh,ah
  416c37:	fsubr  DWORD PTR [eax+esi*2-0x4514b59e]
  416c3e:	jge    0x416c33
  416c40:	inc    ebx
  416c41:	fild   WORD PTR [edx+0x49]
  416c44:	dec    eax
  416c45:	shr    BYTE PTR [ebp+0x4b],0xdd
  416c49:	shl    DWORD PTR [ebx+0x25],1
  416c4c:	out    dx,al
  416c4d:	push   eax
  416c4e:	jne    0x416c97
  416c50:	xor    eax,0x92ee1f8b
  416c55:	out    dx,al
  416c56:	cmp    edx,edx
  416c58:	shr    DWORD PTR [esi],1
  416c5a:	outs   dx,DWORD PTR ss:[esi]
  416c5c:	jle    0x416ccb
  416c5e:	sbb    edi,0x1e7a9571
  416c64:	xor    eax,0x24aea371
  416c69:	ins    DWORD PTR es:[edi],dx
  416c6a:	scas   eax,DWORD PTR es:[edi]
  416c6b:	pop    ss
  416c6c:	fdivp  st(0),st
  416c6e:	sti    
  416c6f:	cmc    
  416c70:	rol    BYTE PTR [ebx-0x6d],cl
  416c73:	or     al,0x5a
  416c75:	add    ebp,edi
  416c77:	sub    DWORD PTR [edi],esp
  416c79:	push   cs
  416c7a:	test   DWORD PTR [edi-0x745f5bb8],eax
  416c80:	cmc    
  416c81:	or     al,0x2
  416c83:	icebp  
  416c84:	rol    DWORD PTR [esi-0x1],0x5e
  416c88:	add    BYTE PTR [ecx+0x64],cl
  416c8b:	call   0xb720:0xd0d9d6f3
  416c92:	(bad)  
  416c93:	(bad)  
  416c94:	and    al,0xe7
  416c96:	retf   0xc95b
  416c99:	jmp    0x2d1f:0x84f72bfa
  416ca0:	cdq    
  416ca1:	pop    esi
  416ca2:	push   0x62
  416ca4:	mov    BYTE PTR [esi-0x78],0xb2
  416ca8:	adc    DWORD PTR [ebp+0x312b8a16],esp
  416cae:	(bad)  
  416caf:	retf   
  416cb0:	fisttp WORD PTR [ecx]
  416cb2:	push   esi
  416cb3:	mov    edx,0x6a203db8
  416cb8:	dec    esp
  416cb9:	js     0x416cd4
  416cbb:	lahf   
  416cbc:	stc    
  416cbd:	mov    cl,0x2b
  416cbf:	out    dx,al
  416cc0:	(bad)  
  416cc3:	dec    edx
  416cc4:	jo     0x416cd4
  416cc6:	in     al,dx
  416cc7:	and    al,0xe
  416cc9:	xchg   ebp,eax
  416cca:	shr    BYTE PTR [ebx],0x2e
  416ccd:	pop    ecx
  416cce:	mov    ecx,DWORD PTR [ebp+0x51]
  416cd1:	jbe    0x416d1e
  416cd3:	pop    edx
  416cd4:	mov    dh,BYTE PTR [ecx]
  416cd6:	cld    
  416cd7:	jg     0x416cfd
  416cd9:	pusha  
  416cda:	(bad)  
  416cdb:	enter  0x92ad,0x94
  416cdf:	jle    0x416ced
  416ce1:	pop    edx
  416ce2:	or     eax,0x2d2c6a92
  416ce7:	inc    ecx
  416ce8:	sub    edi,esi
  416cea:	adc    ecx,eax
  416cec:	dec    esp
  416ced:	xchg   esp,eax
  416cee:	sahf   
  416cef:	add    esp,DWORD PTR [eax+edx*4]
  416cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cf3:	push   0xb72da8b
  416cf8:	out    dx,al
  416cf9:	jns    0x416d1a
  416cfb:	inc    edi
  416cfc:	test   eax,0x35576c2b
  416d01:	iret   
  416d02:	jle    0x416d1a
  416d04:	push   cs
  416d05:	mov    edx,0x6c00b669
  416d0a:	jb     0x416cc4
  416d0c:	mov    al,ds:0x515e8e03
  416d11:	push   ecx
  416d12:	pop    edi
  416d13:	shl    BYTE PTR [ebp+0x54],0x94
  416d17:	mov    ?,WORD PTR [eax-0x5bf86b88]
  416d1d:	xor    DWORD PTR [eax-0x1e456017],edi
  416d23:	movups xmm0,xmm7
  416d26:	jmp    0x362d:0xe29e8818
  416d2d:	sar    BYTE PTR [edi+0x56b2e6e7],1
  416d33:	scas   al,BYTE PTR es:[edi]
  416d34:	cmp    ebp,eax
  416d36:	aas    
  416d37:	mov    ecx,0x54eb5e7d
  416d3c:	add    al,0xb6
  416d3e:	dec    esp
  416d3f:	fwait
  416d40:	(bad)  
  416d41:	scas   eax,DWORD PTR es:[edi]
  416d42:	or     BYTE PTR [esi-0x70],ch
  416d45:	mov    al,dh
  416d47:	adc    edx,DWORD PTR [ebp-0x5c]
  416d4a:	popf   
  416d4b:	dec    esi
  416d4c:	adc    eax,0x1421ebb6
  416d51:	fs xchg edx,eax
  416d53:	xor    BYTE PTR [eax-0x2971773f],0xd2
  416d5a:	sbb    ecx,DWORD PTR [esi]
  416d5c:	pop    ebp
  416d5d:	bound  esi,QWORD PTR [edi+esi*2+0x62]
  416d61:	mov    al,0xe3
  416d63:	aad    0x43
  416d65:	dec    edx
  416d66:	aad    0xa6
  416d68:	cs js  0x416ddd
  416d6b:	adc    dl,dh
  416d6d:	mov    esi,0x5b7af0c2
  416d72:	xlat   BYTE PTR ds:[ebx]
  416d73:	(bad)  
  416d74:	sub    al,0xb4
  416d76:	xor    eax,0x1be9fa99
  416d7b:	test   ebp,esi
  416d7d:	inc    ebp
  416d7e:	add    al,0xbd
  416d80:	inc    esi
  416d81:	bound  ebx,QWORD PTR [edx-0x64]
  416d84:	mov    gs,edi
  416d86:	pusha  
  416d87:	clc    
  416d88:	xchg   ebp,eax
  416d89:	popf   
  416d8a:	dec    edx
  416d8b:	clc    
  416d8c:	iret   
  416d8d:	rol    al,1
  416d8f:	call   0xc72414f8
  416d94:	pop    ecx
  416d95:	pop    es
  416d96:	add    al,0x99
  416d98:	arpl   bx,cx
  416d9a:	jbe    0x416d80
  416d9c:	scas   al,BYTE PTR es:[edi]
  416d9d:	aaa    
  416d9e:	push   es
  416d9f:	ficomp WORD PTR [ecx]
  416da1:	push   ss
  416da2:	repnz dec ebp
  416da4:	push   0xe167b0e5
  416da9:	inc    ebx
  416daa:	mov    edi,0x7ca9a81b
  416daf:	push   ecx
  416db0:	ins    BYTE PTR es:[edi],dx
  416db1:	scas   eax,DWORD PTR es:[edi]
  416db2:	clc    
  416db3:	sbb    al,0x45
  416db5:	cmp    esi,DWORD PTR [edi+0x324e6a74]
  416dbb:	iret   
  416dbc:	sub    al,BYTE PTR [edi]
  416dbe:	sar    DWORD PTR [ecx+ebx*4],1
  416dc1:	call   0xd73fcad5
  416dc6:	js     0x416dcb
  416dc8:	retf   
  416dc9:	(bad)  
  416dca:	enter  0xfdf,0x7b
  416dce:	and    eax,DWORD PTR [ebp+0x10d2ba9e]
  416dd4:	scas   al,BYTE PTR es:[edi]
  416dd5:	xor    al,0x97
  416dd7:	aad    0x6c
  416dd9:	fst    st(4)
  416ddb:	lahf   
  416ddc:	push   ebx
  416ddd:	in     al,0xe0
  416ddf:	inc    esi
  416de0:	repnz cdq 
  416de2:	or     ebp,edi
  416de4:	icebp  
  416de5:	and    edx,esi
  416de7:	sar    BYTE PTR [ebp-0x3a],0x42
  416deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dec:	mov    DWORD PTR [esi],edx
  416dee:	push   eax
  416def:	add    ah,BYTE PTR [edx+0x4b]
  416df2:	lds    eax,FWORD PTR [ecx-0x47aad907]
  416df8:	fisub  WORD PTR [ebp+edi*1+0x53]
  416dfc:	add    al,0x3a
  416dfe:	or     BYTE PTR [ecx+0x2bb27cd1],cl
  416e04:	xlat   BYTE PTR ds:[ebx]
  416e05:	and    bl,bl
  416e07:	dec    edx
  416e08:	aaa    
  416e09:	rol    cl,cl
  416e0b:	xor    eax,0x188714e9
  416e10:	imul   edx,ebx,0x9b8e5037
  416e16:	aas    
  416e17:	outs   dx,DWORD PTR ds:[esi]
  416e18:	add    eax,0x74eb5ae7
  416e1d:	call   0x3ee3:0x7058f4e4
  416e24:	arpl   WORD PTR [edx+0x3e],dx
  416e27:	and    BYTE PTR [edx-0x3e],ah
  416e2a:	mov    cl,0x4c
  416e2c:	xor    eax,0xb8ece3f6
  416e31:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416e33:	ror    BYTE PTR [edx+0x33897fb3],cl
  416e39:	nop
  416e3a:	sub    BYTE PTR [edi+0x47],bh
  416e3d:	jnp    0x416e72
  416e3f:	(bad)  
  416e40:	ss pop ebx
  416e42:	jbe    0x416e0f
  416e44:	jns    0x416e0b
  416e46:	out    dx,eax
  416e47:	jmp    0x274c:0xa4a80bb8
  416e4e:	iret   
  416e4f:	mov    al,BYTE PTR [ecx-0x2c]
  416e52:	sub    bl,bl
  416e54:	clc    
  416e55:	test   al,0x65
  416e57:	cmp    BYTE PTR [ebp+0x436c692c],al
  416e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e5e:	loope  0x416e07
  416e60:	iret   
  416e61:	dec    edx
  416e62:	lds    edx,FWORD PTR [ebx+0x16]
  416e65:	pop    edx
  416e66:	and    eax,DWORD PTR [esi-0x784aaa90]
  416e6c:	cmc    
  416e6d:	retf   0x2854
  416e70:	mov    edi,0xb7e1e2df
  416e75:	in     al,dx
  416e76:	pop    esp
  416e77:	cmp    al,0xf1
  416e79:	pop    edi
  416e7a:	leave  
  416e7b:	leave  
  416e7c:	sar    DWORD PTR [edx+ebp*8-0x34],1
  416e80:	xor    bh,BYTE PTR [esi-0x22]
  416e83:	cmp    dh,BYTE PTR [ebp+0x5212f80c]
  416e89:	pop    esp
  416e8a:	mov    edi,esi
  416e8c:	gs loopne 0x416e1d
  416e8f:	jecxz  0x416e88
  416e91:	daa    
  416e92:	sti    
  416e93:	pop    ebp
  416e94:	sub    bh,BYTE PTR [eax-0x34]
  416e97:	int    0xb3
  416e99:	(bad)  
  416e9a:	push   eax
  416e9b:	ret    0x6312
  416e9e:	sbb    ebp,DWORD PTR [ebx+0x79]
  416ea1:	rol    DWORD PTR ds:0x8e408bf,1
  416ea7:	(bad)  
  416ea8:	mov    al,0x7c
  416eaa:	cmp    al,0xbb
  416eac:	cmp    ebx,esi
  416eae:	xor    DWORD PTR [eax+0x3e],ecx
  416eb1:	or     ah,BYTE PTR ds:[eax+0x4509bb98]
  416eb8:	cmp    BYTE PTR [edx+0x76],dh
  416ebb:	xchg   esp,eax
  416ebc:	int3   
  416ebd:	inc    esp
  416ebe:	fnstcw WORD PTR [ebx-0x234fe5a6]
  416ec4:	xchg   esp,eax
  416ec5:	add    ch,al
  416ec7:	lods   al,BYTE PTR ds:[esi]
  416ec8:	xchg   bp,ax
  416eca:	popf   
  416ecb:	outs   dx,BYTE PTR ds:[esi]
  416ecc:	scas   al,BYTE PTR es:[di]
  416ece:	inc    ecx
  416ecf:	lea    esp,[ebx-0x4decaea6]
  416ed5:	adc    DWORD PTR [esp+ecx*1],ecx
  416ed8:	sbb    al,0x97
  416eda:	pushw  0xff8d
  416edd:	sub    DWORD PTR [ebx-0x6720d35],ebp
  416ee3:	and    al,0x77
  416ee5:	cmp    al,0xf3
  416ee7:	or     ch,BYTE PTR [edi]
  416ee9:	mov    edi,0x97d3fbb0
  416eee:	fldcw  WORD PTR [edi]
  416ef0:	sbb    BYTE PTR [edx+0x58],ch
  416ef3:	nop
  416ef4:	cmp    ebx,DWORD PTR [ebx+edi*8-0x5082319f]
  416efb:	push   ecx
  416efc:	mov    al,ds:0x90f894e7
  416f01:	or     BYTE PTR [esi],0x5c
  416f04:	clc    
  416f05:	mov    edx,0xc4009670
  416f0a:	adc    eax,0x1daa905a
  416f0f:	adc    al,0x65
  416f11:	in     al,0x1f
  416f13:	loope  0x416efd
  416f15:	dec    dl
  416f17:	sub    DWORD PTR [esi+ecx*1+0x72eb43b8],ecx
  416f1e:	sub    al,0x99
  416f20:	fnstenv [esi+eiz*8-0x4]
  416f24:	test   BYTE PTR [ebx-0x3e7cd681],ah
  416f2a:	(bad)  
  416f2b:	inc    esi
  416f2c:	ret    
  416f2d:	sub    esp,DWORD PTR [ebx+eax*1+0x53]
  416f31:	fild   WORD PTR ds:0x28611dd1
  416f37:	mov    ebp,0x5c3807e
  416f3c:	cmp    BYTE PTR ds:0xcade060a,0x26
  416f43:	or     dl,BYTE PTR [ecx-0x7935f7ce]
  416f49:	pop    ebx
  416f4a:	shl    DWORD PTR fs:[edx-0x1c],cl
  416f4e:	repnz xchg edi,eax
  416f50:	repnz lods eax,DWORD PTR ds:[esi]
  416f52:	fisub  DWORD PTR [ecx-0x79]
  416f55:	sub    bl,BYTE PTR [eax-0x25]
  416f58:	mov    esp,0xce8a59d0
  416f5d:	ror    BYTE PTR ds:0x7fc8ccea,1
  416f63:	xchg   edx,eax
  416f64:	dec    edi
  416f65:	popa   
  416f66:	push   es
  416f67:	lar    ebp,WORD PTR [ecx]
  416f6a:	inc    ecx
  416f6b:	std    
  416f6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f6d:	sub    al,0xb2
  416f6f:	lea    edx,[esi-0x1c]
  416f72:	nop
  416f73:	push   edi
  416f74:	mov    ds:0x5a58faae,eax
  416f79:	or     eax,0x756f907d
  416f7e:	jbe    0x416ffe
  416f80:	dec    ecx
  416f81:	shl    BYTE PTR [ebp+0x5c85a3a8],cl
  416f87:	xchg   BYTE PTR [ecx+0x4b546865],ah
  416f8d:	xchg   DWORD PTR [edx-0x4a],ecx
  416f90:	aaa    
  416f91:	add    bl,BYTE PTR [ebp-0x52]
  416f94:	and    esp,DWORD PTR [esi]
  416f96:	retf   
  416f97:	xchg   esp,eax
  416f98:	xor    dl,BYTE PTR [edi]
  416f9a:	adc    bl,0xf4
  416f9d:	clc    
  416f9e:	mov    edx,0xad32c0ff
  416fa3:	int3   
  416fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa5:	mov    ebx,0xa5baad82
  416faa:	imul   eax,DWORD PTR [esi-0x1],0x6b5e14ee
  416fb1:	mov    ecx,0xb3b73913
  416fb6:	xchg   ebx,eax
  416fb7:	add    ecx,DWORD PTR [ecx-0x714a60c3]
  416fbd:	pop    es
  416fbe:	inc    esi
  416fbf:	cs out 0x4f,al
  416fc2:	repz lea ebx,[ebx+0x76]
  416fc6:	lds    eax,FWORD PTR [edx-0x22]
  416fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fca:	jmp    0x416f7f
  416fcc:	sbb    BYTE PTR [esi+ecx*8],ch
  416fcf:	stos   BYTE PTR es:[edi],al
  416fd0:	xlat   BYTE PTR ds:[ebx]
  416fd1:	sahf   
  416fd2:	adc    cl,cl
  416fd4:	jnp    0x416ff9
  416fd6:	sbb    ebp,DWORD PTR [ebp+esi*8-0x1b]
  416fda:	jecxz  0x416fbc
  416fdc:	inc    esp
  416fdd:	dec    eax
  416fde:	jno    0x417032
  416fe0:	stos   DWORD PTR es:[edi],eax
  416fe1:	mov    ebp,0x681bf04d
  416fe6:	push   0x33d7a36
  416feb:	test   DWORD PTR [edi-0xa],ebp
  416fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fef:	ins    DWORD PTR es:[edi],dx
  416ff0:	dec    ebp
  416ff1:	add    bh,bh
  416ff3:	retf   
  416ff4:	pop    es
  416ff5:	aaa    
  416ff6:	push   eax
  416ff7:	pushf  
  416ff8:	adc    DWORD PTR [ebx-0x28],edx
  416ffb:	call   0xbbde:0xf56df342
  417002:	inc    ebp
  417003:	push   ds
  417004:	pop    edi
  417005:	pop    ebp
  417006:	push   esp
  417007:	xchg   esp,eax
  417008:	mov    ebp,0x4e79cccd
  41700d:	and    dh,BYTE PTR [ecx-0x67d656c9]
  417013:	pop    eax
  417014:	out    dx,eax
  417015:	sbb    BYTE PTR [eax+0x60473a81],dl
  41701b:	sub    DWORD PTR [ecx+0x15ae24b9],ebx
  417021:	pop    eax
  417022:	mov    ah,0x94
  417024:	xchg   edi,eax
  417025:	and    ch,dh
  417027:	adc    al,ah
  417029:	adc    BYTE PTR [ebx+0x488d579d],bl
  41702f:	dec    edx
  417030:	outs   dx,DWORD PTR ds:[esi]
  417031:	push   es
  417032:	inc    BYTE PTR [eax]
  417034:	sar    BYTE PTR [ebp-0x5a],0xa8
  417038:	aaa    
  417039:	xchg   edi,eax
  41703a:	inc    edx
  41703b:	or     al,0x77
  41703d:	mov    WORD PTR [ecx+0x4b],ds
  417040:	ret    0x84e5
  417043:	mov    ah,0x80
  417045:	add    ebx,ecx
  417047:	mov    cs,WORD PTR [edx]
  417049:	and    ch,BYTE PTR [edi-0x31]
  41704c:	inc    edi
  41704d:	and    ebx,DWORD PTR [eax-0x5c]
  417050:	sub    DWORD PTR [ecx-0x5a620d8d],ecx
  417056:	outs   dx,BYTE PTR ds:[esi]
  417057:	leave  
  417058:	and    ch,BYTE PTR [ebp-0xe8747dd]
  41705e:	inc    edi
  41705f:	mov    dh,0xda
  417061:	mov    gs,WORD PTR [edx-0x68]
  417064:	aaa    
  417065:	pusha  
  417066:	sbb    DWORD PTR ds:0x3ad009b9,ebx
  41706c:	xor    BYTE PTR [edx+0x11],0x3d
  417070:	repnz cli 
  417072:	aad    0x30
  417074:	addr16 loopne 0x41706a
  417077:	mov    dl,0x7c
  417079:	or     al,0xa1
  41707b:	mov    BYTE PTR [edx-0x3e804b68],cl
  417081:	test   esi,edi
  417083:	or     esi,esi
  417085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417087:	add    ah,BYTE PTR [eax-0x7]
  41708a:	test   BYTE PTR [edx-0x27],al
  41708d:	repnz int 0x5b
  417090:	mov    ebp,0xcbcb0324
  417095:	inc    ebp
  417096:	sti    
  417097:	daa    
  417098:	push   ss
  417099:	outs   dx,BYTE PTR ds:[esi]
  41709a:	inc    ebp
  41709b:	adc    edi,DWORD PTR [edi]
  41709d:	fidivr DWORD PTR [ebx]
  41709f:	sub    eax,0x9e19023e
  4170a4:	fdivr  DWORD PTR [eax]
  4170a6:	or     al,0x77
  4170a8:	retf   0x51a2
  4170ab:	mov    ah,0x77
  4170ad:	ret    0xffc6
  4170b0:	retf   
  4170b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170b3:	xchg   ebx,eax
  4170b4:	aam    0x42
  4170b6:	mov    bh,cl
  4170b8:	in     al,0x60
  4170ba:	mov    bl,0xa5
  4170bc:	dec    esi
  4170bd:	sbb    DWORD PTR [edx+esi*2-0x6c695054],ecx
  4170c4:	push   esp
  4170c5:	test   DWORD PTR [edx+0x46],eax
  4170c8:	inc    ebp
  4170c9:	arpl   cx,dx
  4170cb:	mov    ds:0xfed8a013,al
  4170d0:	(bad)  
  4170d1:	test   al,0x37
  4170d3:	stos   BYTE PTR es:[edi],al
  4170d4:	and    esp,DWORD PTR [ecx]
  4170d6:	mov    esp,0x2d242789
  4170db:	icebp  
  4170dc:	push   ecx
  4170dd:	jbe    0x417103
  4170df:	mov    esi,DWORD PTR ds:0x69bc9251
  4170e5:	sub    al,0x18
  4170e7:	cmc    
  4170e8:	adc    BYTE PTR [esi+edx*2-0x30adaef1],dl
  4170ef:	outs   dx,DWORD PTR ds:[esi]
  4170f0:	pop    edx
  4170f1:	mov    cl,0x57
  4170f3:	or     BYTE PTR [esi],bl
  4170f5:	les    ecx,FWORD PTR [ebp+0x7cf1a9e3]
  4170fb:	add    al,0x4a
  4170fd:	iret   
  4170fe:	mov    BYTE PTR [ebp+0x75],0xa4
  417102:	mov    ebx,0x48be1d5a
  417107:	xchg   edx,eax
  417108:	and    al,0x4c
  41710a:	jno    0x417146
  41710c:	mov    ah,0xc6
  41710e:	and    al,0x21
  417110:	ins    DWORD PTR es:[edi],dx
  417111:	rcl    DWORD PTR [eax-0x67],cl
  417114:	aam    0x56
  417116:	or     ecx,DWORD PTR ss:[ecx]
  417119:	jl     0x4170b9
  41711b:	jns    0x417127
  41711d:	adc    DWORD PTR [ebx],0xffffffcd
  417120:	(bad)  
  417121:	shl    BYTE PTR [esi-0x56594ca6],0xae
  417128:	mov    cl,0xd
  41712a:	pop    esi
  41712b:	or     BYTE PTR [ebx-0x2b],al
  41712e:	push   eax
  41712f:	inc    edi
  417130:	out    0x2d,eax
  417132:	pop    edx
  417133:	dec    esi
  417134:	cmp    al,0x6
  417136:	inc    DWORD PTR [esi+0x31]
  417139:	adc    eax,0xcde56eae
  41713e:	mov    edi,edx
  417140:	lahf   
  417141:	call   0xc212:0x9f43858a
  417148:	push   cs
  417149:	inc    ebx
  41714a:	repz rcr BYTE PTR [ebx],0xba
  41714e:	dec    edi
  41714f:	sti    
  417150:	jle    0x4171ce
  417152:	sbb    ch,bl
  417154:	cmc    
  417155:	xchg   ebx,eax
  417156:	cmp    DWORD PTR [esi],esi
  417158:	(bad)  
  417159:	push   ss
  41715a:	push   ebp
  41715b:	(bad)  
  41715d:	push   cs
  41715e:	dec    eax
  41715f:	jo     0x4171d9
  417161:	gs aaa 
  417163:	pop    ebx
  417164:	outs   dx,BYTE PTR ds:[esi]
  417165:	sub    BYTE PTR [ecx-0x7ace8b85],ah
  41716b:	jl     0x417144
  41716d:	add    eax,0x9a29b30f
  417172:	add    DWORD PTR [ebx+0x76],edi
  417175:	daa    
  417176:	dec    ebp
  417177:	inc    ebp
  417178:	jl     0x417114
  41717a:	add    BYTE PTR [eax+esi*4+0x4953be2d],dl
  417181:	mov    ecx,DWORD PTR [esi-0x231e699e]
  417187:	xor    DWORD PTR [esp+ebx*1-0x392454ef],ebx
  41718e:	push   ebx
  41718f:	cmp    DWORD PTR [ebp-0x6a],ecx
  417192:	jb     0x41716b
  417194:	out    dx,eax
  417195:	ffree  st(1)
  417197:	cmp    eax,0x8618a5b3
  41719c:	mov    ecx,0xa0b1215b
  4171a1:	cs dec ebp
  4171a3:	mov    al,0xf6
  4171a5:	enter  0xd583,0x76
  4171a9:	stos   DWORD PTR es:[edi],eax
  4171aa:	add    esp,esp
  4171ac:	ss and al,0x82
  4171af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171b0:	add    al,0x47
  4171b2:	dec    esi
  4171b3:	xchg   ebx,eax
  4171b4:	mov    edi,0xc11eb5e4
  4171b9:	mov    edx,0xa7b6d84
  4171be:	jg     0x41716f
  4171c0:	leave  
  4171c1:	add    BYTE PTR [eax-0x2f698781],al
  4171c7:	mov    esi,0x79280964
  4171cc:	cmp    dh,bl
  4171ce:	sbb    BYTE PTR [ebx+0x7],dh
  4171d1:	hlt    
  4171d2:	inc    edx
  4171d3:	xor    ecx,0xffffffb7
  4171d6:	mov    DWORD PTR [esp+edx*2+0x603a9467],edx
  4171dd:	cwde   
  4171de:	jp     0x4171c4
  4171e0:	mov    DWORD PTR [ebx+0xc],esp
  4171e3:	sub    BYTE PTR [ecx],bl
  4171e5:	add    bl,BYTE PTR [edx-0x25f974f0]
  4171eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171ec:	shl    BYTE PTR [edi+0x3a],1
  4171ef:	stos   BYTE PTR es:[edi],al
  4171f0:	int3   
  4171f1:	call   0x4965d183
  4171f6:	add    eax,eax
  4171f8:	adc    BYTE PTR [esi],0xf1
  4171fb:	xor    BYTE PTR [edi-0x67],dh
  4171fe:	fstp   QWORD PTR [ebx+0x45bab4f4]
  417204:	ret    0x3811
  417207:	ret    
  417208:	dec    eax
  417209:	mov    BYTE PTR [ebx+0x11],0xfa
  41720d:	add    DWORD PTR [eax+0xa6eba58],0xffffffe5
  417214:	imul   ebp,ecx,0xffffffe2
  417217:	std    
  417218:	dec    eax
  417219:	mov    dh,0x59
  41721b:	in     eax,dx
  41721c:	int    0x7c
  41721e:	push   cs
  41721f:	sbb    dh,ch
  417221:	das    
  417222:	or     DWORD PTR [di+0x180e],0x7e7cee1c
  41722b:	mov    WORD PTR [edi+ebx*8+0x1f],gs
  41722f:	in     al,0x1f
  417231:	jmp    0x11d0fe76
  417236:	sub    ch,al
  417238:	icebp  
  417239:	leave  
  41723a:	xchg   ebp,eax
  41723b:	outs   dx,DWORD PTR ds:[esi]
  41723c:	xor    dh,BYTE PTR [eax]
  41723e:	scas   eax,DWORD PTR es:[edi]
  41723f:	jg     0x41728d
  417241:	retf   0xa84b
  417244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417245:	icebp  
  417246:	js     0x4172b9
  417248:	and    al,0xb0
  41724a:	xor    esp,DWORD PTR ss:[ecx+esi*4+0x5b]
  41724f:	mov    BYTE PTR [ecx],cl
  417251:	push   ss
  417252:	(bad)  
  417254:	shl    DWORD PTR [eax-0x7b4cd86e],cl
  41725a:	(bad)  
  41725b:	fst    DWORD PTR [esp+edx*2+0x470d75bf]
  417262:	rcr    edi,cl
  417264:	inc    edi
  417265:	push   es
  417266:	(bad)  
  417267:	retf   0x72ea
  41726a:	sub    DWORD PTR [ebx-0x47],0x58ddbd8
  417271:	jl     0x4172a6
  417273:	retf   
  417274:	cli    
  417275:	sbb    DWORD PTR [edx],ebx
  417277:	xor    eax,0xf2e83485
  41727c:	pushf  
  41727d:	hlt    
  41727e:	ja     0x417287
  417280:	and    ch,BYTE PTR [edi]
  417282:	adc    cl,BYTE PTR [ebp-0x5f5fcc27]
  417288:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41728a:	ins    BYTE PTR es:[edi],dx
  41728b:	or     BYTE PTR [edi],bl
  41728d:	hlt    
  41728e:	pop    es
  41728f:	outs   dx,DWORD PTR ds:[esi]
  417290:	add    eax,esi
  417292:	stos   DWORD PTR es:[edi],eax
  417293:	lock mov ebp,0xd1c14001
  417299:	loope  0x41724c
  41729b:	or     BYTE PTR [edx+0x63a37112],bl
  4172a1:	out    dx,al
  4172a2:	in     al,dx
  4172a3:	std    
  4172a4:	adc    al,0x8e
  4172a6:	or     BYTE PTR [edi],cl
  4172a8:	ffreep st(0)
  4172aa:	xor    edi,ebp
  4172ac:	cmp    DWORD PTR [ecx+0x68],0xffffff82
  4172b0:	icebp  
  4172b1:	and    DWORD PTR [ebx+0x52],esi
  4172b4:	or     al,0xa9
  4172b6:	aad    0xe5
  4172b8:	mov    ?,ecx
  4172ba:	jl     0x417254
  4172bc:	pushf  
  4172bd:	mov    DWORD PTR [edi],edx
  4172bf:	loope  0x417247
  4172c1:	mov    eax,0xeb65341c
  4172c6:	mov    esp,0xabbe4c5e
  4172cb:	cmp    ebp,esp
  4172cd:	(bad)
  4172d0:	repz in eax,0xdb
  4172d3:	push   esp
  4172d4:	cmp    ebp,ebx
  4172d6:	add    eax,0x57c8b3f5
  4172db:	in     al,dx
  4172dc:	pop    edx
  4172dd:	jecxz  0x417271
  4172df:	loopne 0x41727c
  4172e1:	data16 stos BYTE PTR es:[edi],al
  4172e3:	push   0xfffffff6
  4172e5:	retf   
  4172e6:	ins    BYTE PTR es:[edi],dx
  4172e7:	pop    ds
  4172e8:	xchg   esi,eax
  4172e9:	xor    eax,0x6cc8f025
  4172ee:	pop    esi
  4172ef:	dec    ebx
  4172f0:	xor    eax,ecx
  4172f2:	or     al,0x13
  4172f4:	fisub  DWORD PTR [edx+0x747b4d08]
  4172fa:	js     0x4172eb
  4172fc:	and    DWORD PTR [esi+0xf],ecx
  4172ff:	stos   DWORD PTR es:[edi],eax
  417300:	jno    0x4172ec
  417302:	mov    al,ds:0x61eddab7
  417307:	xor    dl,BYTE PTR [edx+0x33]
  41730a:	and    DWORD PTR [esp+ecx*4-0x42],0xd86569b7
  417312:	or     eax,DWORD PTR [ebx-0x2]
  417315:	xchg   esi,edx
  417317:	shl    DWORD PTR [ebx+ebp*1+0x73a49e08],0xab
  41731f:	push   edx
  417320:	inc    edi
  417321:	jne    0x417305
  417323:	iret   
  417324:	lahf   
  417325:	push   esp
  417326:	hlt    
  417327:	jne    0x4173a3
  417329:	sti    
  41732a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41732b:	push   cs
  41732c:	adc    esi,DWORD PTR [esi+0x65]
  41732f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417330:	mov    BYTE PTR [ecx+0x68],0xa1
  417334:	idiv   BYTE PTR [edx+0x6dca8ad6]
  41733a:	pusha  
  41733b:	bound  eax,QWORD PTR [ecx+0x6f]
  41733e:	adc    DWORD PTR [eax],edi
  417340:	out    0xf8,eax
  417342:	jg     0x4172f1
  417344:	push   cs
  417345:	ror    bh,cl
  417347:	adc    eax,0x630e9e21
  41734c:	or     al,0x29
  41734e:	sbb    eax,0x5f47618
  417353:	pop    ebx
  417354:	aaa    
  417355:	in     eax,dx
  417356:	rcl    dl,cl
  417358:	test   al,0xaa
  41735a:	and    DWORD PTR [ebp-0x74b121d5],0xe
  417361:	call   0xe5057715
  417366:	lock icebp 
  417368:	sti    
  417369:	add    edi,DWORD PTR [eax+esi*8+0x4c]
  41736d:	mov    cl,al
  41736f:	sbb    esp,0x56f76ac2
  417375:	inc    ebx
  417376:	call   0x1d29f60f
  41737b:	(bad)  
  41737c:	mov    ebx,0xda973adb
  417381:	(bad)  
  417382:	jno    0x417321
  417384:	cmp    DWORD PTR [edx+0x58072eb7],eax
  41738a:	add    al,0xfa
  41738c:	add    al,0xfa
  41738e:	sbb    al,0x90
  417390:	repz popa 
  417392:	test   DWORD PTR [esi+0x5],edi
  417395:	pop    eax
  417396:	push   0xb945a1b6
  41739b:	mov    cl,0x85
  41739d:	adc    BYTE PTR [edx+0x17],ah
  4173a0:	das    
  4173a1:	cmp    al,0xad
  4173a3:	adc    eax,0xda0d734c
  4173a8:	mov    eax,ds:0xc0a3f5ab
  4173ad:	out    0xef,ax
  4173b0:	cmp    eax,0x1534d353
  4173b5:	lds    ecx,FWORD PTR fs:[ebx]
  4173b8:	(bad)  [ecx-0x20373b14]
  4173be:	sub    DWORD PTR [edx+0x6f],ebp
  4173c1:	icebp  
  4173c2:	or     al,0xf6
  4173c4:	shl    BYTE PTR [edi+0x37],0x6c
  4173c8:	xchg   edx,eax
  4173c9:	mov    bl,0x1
  4173cb:	lds    ebp,FWORD PTR [esp+eiz*2+0x7160e6b7]
  4173d2:	ins    DWORD PTR es:[edi],dx
  4173d3:	sub    esi,DWORD PTR [ecx]
  4173d5:	call   0x6561050a
  4173da:	push   edx
  4173db:	mov    es,WORD PTR [ebx+0x3ca8b309]
  4173e1:	lds    edi,FWORD PTR [edi+0x44f45e88]
  4173e7:	sbb    al,0x1b
  4173e9:	xor    edx,DWORD PTR [ebp-0x7447d7ea]
  4173ef:	push   0x64
  4173f1:	cmp    ebp,ecx
  4173f3:	dec    ecx
  4173f4:	or     edx,0xd4fdbf01
  4173fa:	mov    esp,0x3c419ea2
  4173ff:	adc    BYTE PTR [esi-0xa9c7b7e],0xc2
  417406:	jmp    0x41742c
  417408:	xchg   edx,eax
  417409:	sbb    esi,ebx
  41740b:	mov    ebx,0xf85baa03
  417410:	out    dx,eax
  417411:	mov    ch,0xf4
  417413:	add    ebx,DWORD PTR [esi-0x224c9d7a]
  417419:	int    0xa3
  41741b:	and    BYTE PTR [edx+0x12d63eec],dh
  417421:	adc    BYTE PTR [eax],ah
  417423:	lods   eax,DWORD PTR ds:[esi]
  417424:	mov    edx,0xaa6c7f37
  417429:	pushw  cs
  41742b:	test   eax,0x5b00950f
  417430:	imul   ecx,DWORD PTR [esi+0x5b],0x4c
  417434:	out    0xd,al
  417436:	adc    eax,DWORD PTR [ebx]
  417438:	fyl2x  
  41743a:	cmp    edi,ebp
  41743c:	int    0x4e
  41743e:	xor    BYTE PTR [edx-0x6ff6cc25],ch
  417444:	test   bh,0x41
  417447:	mov    gs,WORD PTR [ebp+0x26]
  41744a:	inc    ecx
  41744b:	dec    ebx
  41744c:	pop    es
  41744d:	mov    DWORD PTR [edx+0x79],ebx
  417450:	xchg   ebx,eax
  417451:	cmp    ah,BYTE PTR [ebx]
  417453:	cmp    esp,DWORD PTR [esi]
  417455:	or     DWORD PTR [ebp-0x69b06664],0xffffffe0
  41745c:	repnz inc esi
  41745e:	stos   DWORD PTR es:[edi],eax
  41745f:	pop    ecx
  417460:	sahf   
  417461:	xchg   ebx,eax
  417462:	loopne 0x417421
  417464:	xor    ebx,DWORD PTR [esi+0x4b9dc6e0]
  41746a:	mov    dl,0xec
  41746c:	and    dh,dh
  41746e:	adc    BYTE PTR [ecx+0x67853f60],ch
  417474:	(bad)  
  417475:	in     eax,0xe9
  417477:	repz ret 
  417479:	and    eax,0x4d9647e4
  41747e:	jl     0x417497
  417480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417481:	pop    ebx
  417482:	add    DWORD PTR [edx-0x4e],ebp
  417485:	push   es
  417486:	(bad)  
  417488:	dec    edi
  417489:	lea    ebx,[ecx]
  41748b:	std    
  41748c:	test   DWORD PTR [ebp-0x631deb7c],edx
  417492:	js     0x417497
  417494:	repnz inc edi
  417496:	push   eax
  417497:	inc    ebp
  417498:	mov    ds:0x27564335,al
  41749d:	mov    edx,0xe3f267ac
  4174a2:	mov    cl,0x9e
  4174a4:	pop    ebp
  4174a5:	fld    DWORD PTR [eax-0x33]
  4174a8:	fsubr  DWORD PTR [ecx-0x6e334a90]
  4174ae:	(bad)
  4174b2:	mov    edi,cs
  4174b4:	clc    
  4174b5:	jmp    0x41747d
  4174b7:	jge    0x417503
  4174b9:	mov    bl,0xd0
  4174bb:	xchg   edi,eax
  4174bc:	add    eax,0x2c590f7a
  4174c1:	int3   
  4174c2:	or     eax,0x9eafed1c
  4174c7:	loopne 0x4174c4
  4174c9:	popw   es
  4174cb:	in     eax,dx
  4174cc:	int3   
  4174cd:	fbld   TBYTE PTR [esi]
  4174cf:	and    eax,0x21ef417a
  4174d4:	push   ecx
  4174d5:	push   ecx
  4174d6:	popa   
  4174d7:	mov    edx,0xc5c23ee4
  4174dc:	in     eax,0x24
  4174de:	sub    BYTE PTR [edi+esi*8+0x1593896b],bl
  4174e5:	jne    0x417554
  4174e7:	jmp    0xa030f145
  4174ec:	jle    0x4174ee
  4174ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174ef:	dec    ecx
  4174f0:	call   FWORD PTR [edx-0x4a52d385]
  4174f6:	(bad)  [eax-0x5d]
  4174f9:	add    ebx,DWORD PTR [eax]
  4174fb:	lahf   
  4174fc:	add    BYTE PTR [edx+0x69],ah
  4174ff:	sub    cl,bl
  417501:	cmp    eax,0x44589c90
  417506:	xchg   esi,eax
  417507:	test   al,0x4b
  417509:	inc    ebp
  41750a:	xor    cl,BYTE PTR [edx-0x27]
  41750d:	int3   
  41750e:	pop    edx
  41750f:	das    
  417510:	add    ebp,esp
  417512:	jb     0x41749f
  417514:	lods   al,BYTE PTR ds:[esi]
  417515:	add    DWORD PTR [ecx+0x5e],ebp
  417518:	nop
  417519:	and    ch,dh
  41751b:	mov    cl,0x6a
  41751d:	lahf   
  41751e:	mov    edx,0x2ae62514
  417523:	cwde   
  417524:	popa   
  417525:	jle    0x4174e3
  417527:	adc    dh,BYTE PTR [ebp-0x6de8bce2]
  41752d:	repnz fldcw WORD PTR ss:[eax]
  417531:	jns    0x41757a
  417533:	inc    ebp
  417534:	adc    esi,DWORD PTR [ebx-0x2f]
  417537:	fld    QWORD PTR [ebp-0x6d986c59]
  41753d:	les    esi,FWORD PTR [ebx+0x76]
  417540:	push   esp
  417541:	add    BYTE PTR [ebx],ah
  417543:	add    BYTE PTR cs:[edx+eiz*1+0x6f7d1fd4],dl
  41754b:	adc    esp,ebx
  41754d:	fmul   st,st(4)
  41754f:	mov    dl,ah
  417551:	and    ecx,esi
  417553:	ficomp WORD PTR [ebp-0x50]
  417556:	jne    0x417555
  417558:	inc    eax
  417559:	xchg   esi,eax
  41755a:	pop    eax
  41755b:	aas    
  41755c:	repnz shl DWORD PTR ds:0x39919ac0,1
  417563:	jmp    0x417527
  417565:	add    DWORD PTR ds:0x1bb7a716,esp
  41756b:	mov    edx,0xc72f14b1
  417570:	add    eax,0xa0bed3ac
  417575:	aaa    
  417576:	jecxz  0x417575
  417578:	addr16 into 
  41757a:	and    DWORD PTR ds:[eax+ebp*8+0x6fb50f30],ecx
  417582:	into   
  417583:	cld    
  417584:	jge    0x4175ed
  417586:	sub    al,0x1f
  417588:	add    esp,DWORD PTR [ecx-0x6d]
  41758b:	sub    ah,BYTE PTR [edx-0x66]
  41758e:	xor    eax,0x332938e5
  417593:	mov    ds,ecx
  417595:	add    al,0x91
  417597:	aad    0xfb
  417599:	jbe    0x4175c0
  41759b:	(bad)  
  41759c:	add    ebp,DWORD PTR [edx+0x5b4e5bbe]
  4175a2:	int3   
  4175a3:	jl     0x4175fd
  4175a5:	jp     0x4175ce
  4175a7:	out    0xc9,eax
  4175a9:	pop    edx
  4175aa:	imul   eax,edi,0xabd36002
  4175b0:	dec    eax
  4175b1:	jnp    0x417542
  4175b3:	dec    ebp
  4175b4:	jl     0x41761e
  4175b6:	ret    
  4175b7:	dec    edi
  4175b8:	in     al,dx
  4175b9:	fisub  DWORD PTR [edx-0x45b29083]
  4175bf:	sbb    ah,bl
  4175c1:	scas   eax,DWORD PTR es:[edi]
  4175c2:	jb     0x4175bc
  4175c4:	sti    
  4175c5:	jmp    0x417634
  4175c7:	push   0xf00f0063
  4175cc:	sbb    DWORD PTR ds:0x8d9fdb33,0xffffff96
  4175d3:	sbb    BYTE PTR [edi-0x3dd718fd],cl
  4175d9:	xchg   edx,eax
  4175da:	jecxz  0x417561
  4175dc:	ficom  DWORD PTR [ebp+0x61ec800a]
  4175e2:	jl     0x41765c
  4175e4:	mov    DWORD PTR [edx],ebp
  4175e6:	dec    DWORD PTR [ebx+0x6a49d6f1]
  4175ec:	add    DWORD PTR [eax],0xffffffdf
  4175ef:	xchg   edx,eax
  4175f0:	ss (bad) 
  4175f2:	mov    WORD PTR [eax+0x1a763685],ds
  4175f8:	ret    
  4175f9:	xchg   esi,eax
  4175fa:	xchg   ebp,eax
  4175fb:	jp     0x417673
  4175fd:	loop   0x41764f
  4175ff:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417601:	or     edi,DWORD PTR [esi-0x3e856036]
  417607:	repnz mov al,ds:0xd1090428
  41760d:	fxam   
  41760f:	xor    DWORD PTR [ecx-0x7d90054c],edx
  417615:	and    al,0xa2
  417617:	imul   ecx,DWORD PTR [eax],0x3f
  41761a:	shl    DWORD PTR [ecx-0x7f],cl
  41761d:	cmp    bh,BYTE PTR [esi]
  41761f:	xchg   DWORD PTR [edi-0x19],edi
  417622:	sub    eax,0x68517a3d
  417627:	fistp  DWORD PTR [edi-0xc3f5501]
  41762d:	scas   al,BYTE PTR es:[edi]
  41762e:	daa    
  41762f:	aaa    
  417630:	sbb    ebp,DWORD PTR [esi-0x209968d5]
  417636:	repz pop ecx
  417638:	mov    eax,0x2a70533b
  41763d:	inc    eax
  41763e:	divps  xmm1,XMMWORD PTR [eax+edi*1]
  417642:	inc    ebx
  417643:	mov    bh,0xc6
  417645:	jno    0x4176a2
  417647:	or     BYTE PTR [eax+0x42],cl
  41764a:	retf   
  41764b:	push   esi
  41764c:	test   BYTE PTR [ebx-0x26e23bd8],0xd8
  417653:	dec    ebx
  417654:	sub    esi,edi
  417656:	outs   dx,DWORD PTR ds:[esi]
  417657:	nop
  417658:	xchg   edx,eax
  41765a:	sbb    BYTE PTR [ebp-0x286da8d7],bh
  417660:	shl    BYTE PTR [ecx+eax*4-0x3f],0xe0
  417665:	out    dx,eax
  417666:	jo     0x417672
  417668:	stc    
  417669:	sub    al,0xb0
  41766b:	sbb    bl,dl
  41766d:	sub    eax,0xc568f535
  417672:	xor    bl,BYTE PTR [ebx]
  417674:	int    0x5a
  417676:	in     eax,dx
  417677:	les    ebx,FWORD PTR [edx]
  417679:	retf   
  41767a:	push   esp
  41767b:	loop   0x4175fe
  41767d:	jns    0x4176b7
  41767f:	cdq    
  417680:	lods   eax,DWORD PTR ds:[esi]
  417681:	adc    DWORD PTR [eax+0x17b8a341],edi
  417687:	jno    0x41769d
  417689:	je     0x417688
  41768b:	xchg   esp,eax
  41768c:	cmp    eax,0xa582013
  417691:	inc    BYTE PTR [ebp+0x1f]
  417694:	sub    eax,0xe16a403b
  417699:	mov    bh,0x57
  41769b:	mov    edx,0x24a02a78
  4176a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176a1:	or     ebp,DWORD PTR [edx-0x1]
  4176a4:	lea    esi,[eax-0xbfd970a]
  4176aa:	push   edi
  4176ab:	sbb    DWORD PTR [edx+0x41],eax
  4176ae:	xchg   ecx,eax
  4176af:	jns    0x41769d
  4176b1:	xor    eax,0xccd5279b
  4176b6:	div    edi
  4176b8:	inc    ebp
  4176b9:	mov    esi,0xbd68cac9
  4176be:	ja     0x417696
  4176c0:	adc    eax,0x6857111
  4176c5:	ins    DWORD PTR es:[edi],dx
  4176c6:	test   eax,0x4b80bb11
  4176cb:	inc    eax
  4176cc:	pop    ds
  4176cd:	and    eax,0x48e497a7
  4176d2:	push   0xffffffee
  4176d4:	loope  0x4176d5
  4176d6:	push   eax
  4176d7:	stos   DWORD PTR es:[edi],eax
  4176d8:	xchg   ecx,eax
  4176d9:	or     bl,BYTE PTR [edx-0x39]
  4176dc:	jg     0x4176e7
  4176de:	xchg   ebx,eax
  4176df:	sub    BYTE PTR cs:[eax+0x4379ef75],dh
  4176e6:	loope  0x417730
  4176e8:	dec    edi
  4176e9:	pushf  
  4176ea:	mov    dh,0x31
  4176ec:	fiadd  DWORD PTR [ebp+edi*4+0x19]
  4176f0:	adc    DWORD PTR [eax-0x37c593ec],ebp
  4176f6:	enter  0x4db1,0x62
  4176fa:	adc    DWORD PTR ds:0x7af305bf,ebx
  417700:	dec    ebx
  417701:	inc    ebp
  417702:	call   0x7ef460b0
  417707:	mov    ebp,0x16283559
  41770c:	pop    eax
  41770d:	xchg   edx,eax
  41770e:	add    ch,BYTE PTR [esi-0x7e]
  417711:	in     eax,dx
  417712:	imul   ecx,eax,0x1d98048d
  417718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417719:	add    eax,0xaec03ef9
  41771e:	pop    esi
  41771f:	sub    esi,DWORD PTR [ebp+0x56]
  417722:	dec    esp
  417723:	or     esp,DWORD PTR [eax-0x2b8dab0e]
  417729:	test   DWORD PTR [ebp-0x79],esp
  41772c:	jg     0x417771
  41772e:	sbb    edi,DWORD PTR [eax]
  417730:	psubb  mm5,QWORD PTR [ecx]
  417733:	lods   eax,DWORD PTR ds:[esi]
  417734:	popf   
  417735:	jns    0x41776f
  417737:	jno    0x41775f
  417739:	mov    al,0x60
  41773b:	mov    al,0xbb
  41773d:	sub    al,0x24
  41773f:	js     0x4176fc
  417741:	jne    0x417724
  417743:	mov    cl,0x97
  417745:	and    ecx,DWORD PTR [ebx-0x3410aaac]
  41774b:	ret    
  41774c:	mov    ecx,ss
  41774e:	loop   0x417773
  417750:	push   eax
  417751:	or     al,0x7f
  417753:	fistp  QWORD PTR [edi]
  417755:	mov    al,0x7b
  417757:	scas   eax,DWORD PTR es:[edi]
  417758:	xor    DWORD PTR ds:0xe66d535b,esp
  41775e:	adc    eax,0x842538b7
  417763:	lods   eax,DWORD PTR ds:[esi]
  417764:	sub    DWORD PTR [edx],esi
  417766:	sbb    edi,DWORD PTR [ecx]
  417768:	nop
  417769:	scas   al,BYTE PTR es:[edi]
  41776a:	xchg   edi,eax
  41776b:	fbstp  TBYTE PTR [edi-0x2f]
  41776e:	pop    esp
  41776f:	xor    ebp,DWORD PTR [esi]
  417771:	scas   al,BYTE PTR es:[edi]
  417772:	mov    ebx,0x94d487cc
  417777:	pop    ebp
  417778:	or     al,0xed
  41777a:	cmp    BYTE PTR [edx+eax*1],0xd3
  41777e:	js     0x4177bb
  417780:	mov    al,0xaa
  417782:	jno    0x417754
  417784:	cld    
  417785:	xchg   edx,eax
  417786:	push   eax
  417787:	daa    
  417788:	out    0x73,eax
  41778a:	xor    edx,DWORD PTR [ecx-0x63]
  41778d:	daa    
  41778e:	mov    edi,0x70c66443
  417793:	inc    esi
  417795:	psrld  mm4,mm4
  417798:	pop    ss
  417799:	sbb    edx,DWORD PTR [eax-0x21]
  41779c:	out    0x1e,al
  41779e:	int    0xfb
  4177a0:	sti    
  4177a1:	retf   0xf3e1
  4177a4:	jne    0x417778
  4177a6:	stc    
  4177a7:	gs add al,0xb4
  4177aa:	mov    ebx,0x1333a9a7
  4177af:	ss pop edx
  4177b1:	cdq    
  4177b2:	fwait
  4177b3:	pop    es
  4177b4:	into   
  4177b5:	(bad)  
  4177b6:	jnp    0x4177a2
  4177b8:	call   0x426a79e
  4177bd:	aad    0x31
  4177bf:	mov    ah,0x36
  4177c1:	sti    
  4177c2:	test   DWORD PTR [edx-0x4e57db44],edx
  4177c8:	cmp    DWORD PTR [eax-0x794bfa9],ecx
  4177ce:	inc    ebx
  4177cf:	xor    edx,DWORD PTR [esi-0x1b68f9a8]
  4177d5:	and    ecx,DWORD PTR [ebp+0x5dc61757]
  4177db:	or     al,0x7e
  4177dd:	imul   ecx,DWORD PTR [ecx],0x44
  4177e0:	imul   ecx,DWORD PTR [ebp-0x52b44a97],0xff02b9f3
  4177ea:	push   ss
  4177eb:	xchg   BYTE PTR [esi+0x5521f8fb],cl
  4177f1:	inc    ebx
  4177f2:	mov    dh,0x20
  4177f4:	xlat   BYTE PTR ds:[ebx]
  4177f5:	sbb    al,ah
  4177f7:	out    dx,al
  4177f8:	fs push 0xfffffffe
  4177fb:	mov    cl,0xbf
  4177fd:	adc    al,0xcb
  4177ff:	or     ecx,DWORD PTR [ecx+ebp*8-0x5d]
  417803:	add    al,0x82
  417805:	cmc    
  417806:	dec    esp
  417807:	into   
  417808:	xchg   DWORD PTR [edi+0x5ea43201],esi
  41780e:	add    al,0xce
  417810:	ret    0x752d
  417813:	jb     0x417799
  417815:	adc    DWORD PTR [edx+edx*4+0x1d75a95c],0x1f
  41781d:	out    0x9c,al
  41781f:	(bad)  
  417820:	sbb    al,0x0
  417822:	add    al,0xb7
  417824:	cdq    
  417825:	xchg   edx,eax
  417826:	dec    esi
  417827:	cs addr16 mov esi,0xece1a710
  41782e:	and    dl,dh
  417830:	ds mov ebx,0xc6cd4ca2
  417836:	inc    edi
  417837:	or     ebp,DWORD PTR [edi]
  417839:	mov    cl,0x95
  41783b:	pop    esi
  41783c:	add    eax,edx
  41783e:	imul   ebp,DWORD PTR [edi+0x3b5163e],0x23ddb0ac
  417848:	mov    bh,0x16
  41784a:	dec    ebx
  41784b:	dec    eax
  41784c:	in     al,0x8
  41784e:	xor    BYTE PTR ds:0xdfac35b8,cl
  417854:	repz (bad) 
  417856:	aad    0x6e
  417858:	in     al,dx
  417859:	das    
  41785a:	or     cl,ch
  41785c:	adc    BYTE PTR [ebx+0x2e],dh
  41785f:	mov    esi,0x51f0bbc5
  417864:	mov    ah,0x2
  417866:	push   ss
  417867:	jmp    0xf6fb771a
  41786c:	inc    edx
  41786d:	xchg   ecx,eax
  41786e:	sbb    ebp,DWORD PTR [ecx-0x7a960c91]
  417874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417875:	ja     0x4178ea
  417877:	pop    DWORD PTR [ecx+0x4a]
  41787a:	into   
  41787b:	jecxz  0x41784e
  41787d:	sti    
  41787e:	sub    BYTE PTR ss:[ecx+ebp*2],dl
  417882:	pop    eax
  417883:	sbb    eax,0xfb79ff88
  417888:	jecxz  0x41785b
  41788a:	sub    ecx,0x67b27475
  417890:	xchg   DWORD PTR [ecx-0x843001d],ebx
  417896:	mov    ebp,0x3fa587ef
  41789b:	loop   0x4178bc
  41789d:	xor    BYTE PTR [eax-0x17],bh
  4178a0:	or     ebp,DWORD PTR gs:[eax]
  4178a3:	add    DWORD PTR [esi],ecx
  4178a5:	cli    
  4178a6:	xor    eax,0x4114f24
  4178ab:	sahf   
  4178ac:	dec    edi
  4178ad:	aas    
  4178ae:	aas    
  4178af:	sar    DWORD PTR [ebp*8-0x219a05bc],cl
  4178b6:	and    eax,0x24a18ec0
  4178bb:	jmp    0x10bc:0x188787f3
  4178c2:	aaa    
  4178c3:	mov    dh,0x85
  4178c5:	mov    ebx,0x2deca2c3
  4178ca:	mov    edi,0xfb9c1fe9
  4178cf:	add    ah,dh
  4178d1:	sbb    eax,0x1008e59f
  4178d6:	mov    edx,0xfa872cfc
  4178db:	sub    edi,ebp
  4178dd:	repz cld 
  4178df:	(bad)  
  4178e0:	push   0x5413054c
  4178e5:	inc    esi
  4178e6:	ret    
  4178e7:	aam    0x79
  4178e9:	push   0x2
  4178eb:	fs jge 0x417899
  4178ee:	cmp    al,0xb4
  4178f0:	push   0xffffffad
  4178f2:	dec    ecx
  4178f3:	cmc    
  4178f4:	push   ecx
  4178f5:	sub    al,0x78
  4178f7:	shl    edx,0xc2
  4178fa:	adc    DWORD PTR [ebp+0x54],eax
  4178fd:	xor    DWORD PTR [ebp-0x22f78906],ecx
  417903:	cdq    
  417904:	retf   
  417905:	scas   eax,DWORD PTR es:[edi]
  417906:	mov    bl,0xab
  417908:	aad    0xe8
  41790a:	sbb    eax,0x2d113e3b
  41790f:	mov    WORD PTR [ebx+0x43],ds
  417912:	pop    ecx
  417913:	add    BYTE PTR [edi],ch
  417915:	mov    cl,0xfd
  417917:	adc    DWORD PTR [ecx+0xe9b0249],ebx
  41791d:	adc    BYTE PTR [edi],ch
  41791f:	aad    0xba
  417921:	fwait
  417922:	mov    ebx,0x80cee701
  417927:	xchg   ebp,eax
  417928:	inc    edx
  417929:	mov    es:0x61e921b6,al
  41792f:	pop    ds
  417930:	adc    ch,BYTE PTR [ebx+0x54934ecc]
  417936:	dec    esp
  417937:	add    ah,bh
  417939:	jnp    0x4178cf
  41793b:	sub    ebx,edi
  41793d:	push   0xd2a7453f
  417942:	pushf  
  417943:	sub    edx,edi
  417945:	mov    di,0xc4b1
  417949:	sbb    eax,0xc20ed43d
  41794e:	and    bl,BYTE PTR ds:0xb891232
  417954:	dec    ebx
  417955:	cdq    
  417956:	scas   eax,DWORD PTR es:[edi]
  417957:	adc    eax,0xc97fbcf4
  41795c:	mov    edx,0x51e6a146
  417961:	pop    ecx
  417962:	cdq    
  417963:	into   
  417964:	fidivr DWORD PTR [ebp+0x1d0ca2c7]
  41796a:	sub    BYTE PTR [ecx+0x6f],bl
  41796d:	sbb    BYTE PTR [edi-0x3237b07f],al
  417973:	ja     0x417933
  417975:	jge    0x417951
  417977:	(bad)  
  417979:	jmp    0xfbc9:0x5d87a949
  417980:	in     al,dx
  417981:	scas   al,BYTE PTR es:[edi]
  417982:	repnz mov BYTE PTR [ecx],ah
  417985:	rcl    DWORD PTR [esi+0x24],1
  417988:	ud1    ebp,DWORD PTR [edx]
  41798b:	pushf  
  41798c:	clc    
  41798d:	cmp    edi,DWORD PTR [eax]
  41798f:	jns    0x417a0c
  417991:	mov    bl,BYTE PTR [esi]
  417993:	fwait
  417994:	int3   
  417995:	scas   al,BYTE PTR es:[edi]
  417996:	int    0xbd
  417998:	fwait
  417999:	aad    0x1d
  41799b:	mov    esi,0xf4957b4b
  4179a0:	mov    ecx,0x8b5c1d58
  4179a5:	jg     0x417975
  4179a7:	(bad)  
  4179a8:	(bad)  
  4179a9:	imul   eax,DWORD PTR [ecx],0xffffffa4
  4179ac:	sub    cl,al
  4179ae:	pop    edi
  4179af:	pop    ecx
  4179b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179b1:	lock adc al,0x50
  4179b4:	push   edx
  4179b5:	and    al,0xd6
  4179b7:	das    
  4179b8:	push   0xffffffc8
  4179ba:	cmp    bh,BYTE PTR [eax+0x218c3067]
  4179c0:	je     0x417a29
  4179c2:	outs   dx,BYTE PTR ds:[esi]
  4179c3:	iret   
  4179c4:	outs   dx,BYTE PTR ds:[esi]
  4179c5:	call   0x27c1:0xdbec0be5
  4179cc:	cmp    BYTE PTR [ebp+eiz*2+0x43f1f866],0xa
  4179d4:	hlt    
  4179d5:	jb     0x417a47
  4179d7:	mov    dl,0x85
  4179d9:	pop    edi
  4179da:	dec    esi
  4179db:	std    
  4179dc:	xor    BYTE PTR [edi-0x76cb8a6e],al
  4179e2:	invd   
  4179e4:	push   0x2b
  4179e6:	neg    DWORD PTR [ebp+0x76]
  4179e9:	iret   
  4179ea:	(bad)  
  4179eb:	sub    al,0x5
  4179ed:	cdq    
  4179ee:	push   ebp
  4179ef:	jbe    0x417a11
  4179f1:	sub    eax,0x5817f384
  4179f6:	mov    dh,al
  4179f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179f9:	jcxz   0x417a4b
  4179fc:	bound  esi,QWORD PTR [ebp+0x79]
  4179ff:	mov    ch,0xcf
  417a01:	ror    DWORD PTR [edx+0x22],cl
  417a04:	mov    WORD PTR ds:0x50186f53,es
  417a0a:	loope  0x4179bb
  417a0c:	or     eax,0xde1f8202
  417a11:	inc    ecx
  417a12:	(bad)  
  417a13:	mov    DWORD PTR [ebp+0x2b],0xd81b65c7
  417a1a:	fstp   TBYTE PTR [ebx]
  417a1c:	gs scas eax,DWORD PTR es:[di]
  417a1f:	mov    bh,0x46
  417a21:	xor    bh,BYTE PTR [ecx+0x72bf660b]
  417a27:	and    bh,cl
  417a29:	pushf  
  417a2a:	enter  0x9e1,0xb6
  417a2e:	scas   al,BYTE PTR es:[edi]
  417a2f:	push   edi
  417a30:	ror    bh,1
  417a32:	mov    DWORD PTR [edx+eiz*4-0x1c3c3611],esi
  417a39:	sub    al,0x99
  417a3b:	jg     0x417a74
  417a3d:	inc    edi
  417a3e:	jl     0x417a9d
  417a40:	xchg   ecx,eax
  417a41:	dec    ebx
  417a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a43:	retf   0xef0e
  417a46:	(bad)  
  417a47:	in     al,dx
  417a48:	mov    ds:0xcf0e333f,al
  417a4d:	jo     0x4179d5
  417a4f:	imul   ecx,ecx,0x7d
  417a52:	mov    ch,0x72
  417a54:	into   
  417a55:	pushf  
  417a56:	sub    BYTE PTR [eax-0x2c],bl
  417a59:	xor    BYTE PTR [ebx+edi*1+0x7d],0x40
  417a5e:	cld    
  417a5f:	div    dl
  417a61:	or     al,0x87
  417a63:	hlt    
  417a64:	dec    edx
  417a65:	inc    DWORD PTR [ebp-0x736b75c6]
  417a6b:	fs cld 
  417a6d:	popf   
  417a6e:	mov    ebp,0xc2e46ad9
  417a73:	hlt    
  417a74:	pop    edx
  417a75:	paddusw mm0,QWORD PTR [edx-0x6c]
  417a79:	mov    ebp,0xfc4df626
  417a7e:	sub    edi,ecx
  417a80:	leave  
  417a81:	pop    esi
  417a82:	jb     0x417a18
  417a84:	or     ecx,DWORD PTR [esi]
  417a86:	sub    DWORD PTR [edi],ebp
  417a88:	push   esi
  417a89:	dec    ecx
  417a8a:	pusha  
  417a8b:	jle    0x417a87
  417a8d:	int3   
  417a8e:	cpuid  
  417a90:	push   esp
  417a91:	dec    ecx
  417a92:	jmp    0x2d73:0xb47f91c1
  417a99:	(bad)  
  417a9a:	js     0x417aab
  417a9c:	adc    DWORD PTR [eax+0x75],0x16
  417aa0:	pop    esi
  417aa1:	jb     0x417a3c
  417aa3:	cld    
  417aa4:	int    0xd6
  417aa6:	mov    bh,dh
  417aa8:	xchg   esp,eax
  417aa9:	mov    esi,0x876dde34
  417aae:	std    
  417aaf:	cmc    
  417ab0:	mov    eax,0xf17432f
  417ab5:	sti    
  417ab6:	ret    
  417ab7:	ins    BYTE PTR es:[edi],dx
  417ab8:	mov    ebp,0x7c2a5a00
  417abd:	xchg   ebp,eax
  417abe:	sbb    ecx,esp
  417ac0:	or     al,0x8a
  417ac2:	scas   eax,DWORD PTR es:[edi]
  417ac3:	xor    BYTE PTR [ecx-0x5c],cl
  417ac6:	sar    BYTE PTR [esp+ecx*2+0x13d26071],cl
  417acd:	lea    edx,[edx+0x41]
  417ad0:	push   DWORD PTR [eax+0x26c04a4d]
  417ad6:	sbb    bl,dl
  417ad8:	(bad)  
  417ad9:	jecxz  0x417a98
  417adb:	(bad)  
  417adc:	push   ebp
  417add:	mov    eax,ds:0x9cc6a7f6
  417ae2:	out    dx,eax
  417ae3:	(bad)  
  417ae4:	fld    TBYTE PTR ds:0x2759e9ac
  417aea:	push   0x6eb1c55c
  417aef:	or     ebx,0xba345607
  417af5:	mov    al,BYTE PTR [ecx]
  417af7:	call   0x3293:0x74e29592
  417afe:	cmp    eax,0x6e400a03
  417b03:	repnz cwde 
  417b05:	in     eax,dx
  417b06:	adc    al,0x7f
  417b08:	pop    edx
  417b09:	fnstsw WORD PTR gs:[edi-0x7b471978]
  417b10:	das    
  417b11:	fwait
  417b12:	add    al,0xc6
  417b14:	fwait
  417b15:	adc    ch,cl
  417b17:	js     0x417b33
  417b19:	mov    DWORD PTR [esi+0x565c37d8],edi
  417b1f:	jge    0x417b40
  417b21:	mov    edx,0xe2a5aa88
  417b26:	dec    ebp
  417b27:	inc    ebx
  417b28:	mov    ah,0x65
  417b2a:	sub    eax,0x73e761b1
  417b2f:	test   al,0xf1
  417b31:	imul   esi,DWORD PTR [esi+0x0],0x3a
  417b35:	imul   esi,DWORD PTR [eax-0x28fb80b],0xd38b6599
  417b3f:	test   eax,0x5b815d9d
  417b44:	push   0xffffffa7
  417b46:	sbb    edi,ebx
  417b48:	push   ss
  417b49:	jge    0x417b37
  417b4b:	pop    esp
  417b4c:	in     eax,dx
  417b4d:	xchg   bl,bl
  417b4f:	and    ecx,DWORD PTR [esi-0x57294c12]
  417b55:	pop    esp
  417b56:	and    eax,0x13371b65
  417b5b:	out    0xf1,al
  417b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b5e:	jae    0x417bbb
  417b60:	inc    edx
  417b61:	or     BYTE PTR [edx-0x56b28180],ch
  417b67:	inc    ebp
  417b68:	mov    al,0x60
  417b6a:	push   ebp
  417b6b:	lods   eax,DWORD PTR ds:[esi]
  417b6c:	(bad)  
  417b6d:	iret   
  417b6e:	test   eax,0x82ef1df5
  417b73:	push   esp
  417b74:	inc    ebp
  417b75:	inc    esi
  417b76:	neg    DWORD PTR [ebx+0x11]
  417b79:	mov    ebx,0xacf2c8ba
  417b7e:	jnp    0x417bba
  417b80:	add    bl,dh
  417b82:	(bad)  
  417b83:	and    al,0x25
  417b85:	pusha  
  417b86:	xor    al,ch
  417b88:	jbe    0x417b33
  417b8a:	leave  
  417b8b:	scas   al,BYTE PTR es:[edi]
  417b8c:	jno    0x417bee
  417b8e:	xor    esp,DWORD PTR [esp+eax*2+0x5c]
  417b92:	sbb    eax,DWORD PTR [esi+ecx*4]
  417b95:	push   cs
  417b96:	add    BYTE PTR [eax-0x30eda68c],dh
  417b9c:	stos   BYTE PTR es:[edi],al
  417b9d:	(bad)  
  417b9e:	inc    ebp
  417b9f:	scas   al,BYTE PTR es:[edi]
  417ba0:	cmc    
  417ba1:	dec    eax
  417ba2:	mov    ecx,0xd2e769ac
  417ba7:	cmp    ebx,DWORD PTR ds:[eax+0x31134428]
  417bae:	dec    BYTE PTR cs:[esi-0x6f240a7e]
  417bb5:	xchg   esp,eax
  417bb6:	sbb    BYTE PTR [ebp+0x427e68f1],ah
  417bbc:	mov    cl,0x46
  417bbe:	in     eax,0x47
  417bc0:	lds    edx,FWORD PTR [eax]
  417bc2:	fiadd  DWORD PTR [ecx-0x99ca803]
  417bc8:	js     0x417c41
  417bca:	or     BYTE PTR ds:0xbdd2f55,ah
  417bd0:	shl    BYTE PTR [edi-0x65f07703],0xf5
  417bd7:	pop    esp
  417bd8:	dec    esi
  417bd9:	inc    eax
  417bda:	mov    esi,0xec3aab89
  417bdf:	loopne 0x417be2
  417be1:	xchg   ebp,eax
  417be2:	sti    
  417be3:	push   ebp
  417be4:	in     al,0x8a
  417be6:	pop    esp
  417be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be8:	add    dh,cl
  417bea:	or     DWORD PTR [edx-0x3c],esi
  417bed:	stos   DWORD PTR es:[edi],eax
  417bee:	cmp    eax,0x9686cba5
  417bf3:	mov    dh,0x40
  417bf5:	mov    esi,0xf039fdf1
  417bfa:	test   edx,ebx
  417bfc:	ficom  DWORD PTR [ecx-0x3ed2b2a0]
  417c02:	jmp    0xb8c:0x7af0e0b1
  417c09:	mov    ah,0xcf
  417c0b:	rep ins DWORD PTR es:[edi],dx
  417c0d:	jne    0x417c17
  417c0f:	mov    dh,0xed
  417c11:	dec    edx
  417c12:	adc    al,0x1
  417c14:	mov    ebp,0xd29d5cd4
  417c19:	in     al,0x39
  417c1b:	stos   DWORD PTR es:[edi],eax
  417c1c:	cwde   
  417c1d:	mov    edx,0x8c6e228f
  417c22:	mov    ecx,0xf2618956
  417c27:	nop
  417c28:	loope  0x417c8a
  417c2a:	cmp    al,0x3a
  417c2c:	or     ecx,DWORD PTR [esi+0x19]
  417c2f:	add    esi,edx
  417c31:	xchg   edx,eax
  417c32:	push   cs
  417c33:	das    
  417c34:	mov    ah,0x2f
  417c36:	cmp    DWORD PTR [ecx+eax*1+0x7067c585],edx
  417c3d:	in     al,dx
  417c3e:	(bad)
  417c41:	mov    dh,0xd8
  417c43:	mov    ebp,DWORD PTR [ebx+esi*1]
  417c46:	and    edx,DWORD PTR [edi+0x4b]
  417c49:	mov    BYTE PTR [eax+0x6426f9d2],0xda
  417c50:	add    al,BYTE PTR [edx+0x29acc404]
  417c56:	out    0x89,al
  417c58:	xchg   DWORD PTR [ecx+0x5a17a614],esp
  417c5e:	cli    
  417c5f:	mov    edi,0xd2f58ecc
  417c64:	jns    0x417c46
  417c66:	sub    DWORD PTR [ebx],esp
  417c68:	and    BYTE PTR [esi-0xa],ch
  417c6b:	test   al,0xfe
  417c6d:	sub    BYTE PTR [eax+0x7c],al
  417c70:	sub    ebx,0x3930e62b
  417c76:	pop    edx
  417c77:	add    BYTE PTR [ebp+0x11e33c86],bl
  417c7d:	jg     0x417c9c
  417c7f:	das    
  417c80:	xlat   BYTE PTR ds:[ebx]
  417c81:	add    DWORD PTR [edi],0xb986e75e
  417c87:	(bad)  
  417c88:	stos   BYTE PTR es:[edi],al
  417c89:	int3   
  417c8a:	mov    BYTE PTR [ebx+0x34bc7b6c],0xe3
  417c91:	sbb    esi,edi
  417c93:	in     al,dx
  417c94:	mov    al,0x7a
  417c96:	and    esi,ecx
  417c98:	mov    ebx,0x78d0c389
  417c9d:	jnp    0x417c90
  417c9f:	mov    ss,WORD PTR [eax-0x4b]
  417ca2:	adc    BYTE PTR [esi+0x9e230e5],ah
  417ca8:	pop    es
  417ca9:	mov    ds:0x11482dd1,eax
  417cae:	fwait
  417caf:	retf   0xd34d
  417cb2:	inc    eax
  417cb3:	icebp  
  417cb4:	xor    DWORD PTR [ebx+edx*1],eax
  417cb7:	adc    ebx,DWORD PTR [ebx-0x10]
  417cba:	popf   
  417cbb:	pop    ds
  417cbc:	mov    ah,0xb8
  417cbe:	in     al,0x74
  417cc0:	pop    esi
  417cc2:	aaa    
  417cc3:	test   al,0x92
  417cc5:	pop    ecx
  417cc6:	das    
  417cc7:	pop    ss
  417cc8:	paddq  mm5,QWORD PTR [ebx+0x3d4d17d6]
  417ccf:	add    ah,BYTE PTR [esi*8-0x1271ae74]
  417cd6:	jb     0x417c8b
  417cd8:	jge    0x417d04
  417cda:	xchg   edi,eax
  417cdb:	and    BYTE PTR [ebx-0x5165430e],dh
  417ce1:	jne    0x417d50
  417ce3:	mov    ss,WORD PTR [edx+0x11db7720]
  417ce9:	inc    esi
  417cea:	popa   
  417ceb:	push   0x11
  417ced:	mov    edi,0x2dd1bb10
  417cf2:	mov    BYTE PTR [edi-0x32563c48],ah
  417cf8:	fwait
  417cf9:	cmp    ecx,DWORD PTR [edi+esi*1+0x46038132]
  417d00:	jg     0x417d68
  417d02:	jl     0x417cdf
  417d04:	inc    ebx
  417d05:	popf   
  417d06:	mov    ah,0xad
  417d08:	jp     0x417cfc
  417d0a:	test   BYTE PTR [ecx-0x10ab1a1a],dh
  417d10:	xchg   esi,eax
  417d11:	cs mov al,0x14
  417d14:	leave  
  417d15:	xor    al,0xc
  417d17:	pop    eax
  417d18:	std    
  417d19:	dec    esp
  417d1a:	lods   al,BYTE PTR cs:[esi]
  417d1c:	pop    ds
  417d1d:	pusha  
  417d1e:	push   ds
  417d1f:	aad    0x59
  417d21:	sbb    al,0x95
  417d23:	leave  
  417d24:	mov    ah,0x4e
  417d26:	pushf  
  417d27:	test   eax,0x243109e
  417d2c:	nop
  417d2d:	sti    
  417d2e:	jb     0x417cb7
  417d30:	fnstsw WORD PTR [eax+0x1896fdb4]
  417d36:	push   ebx
  417d37:	repnz std 
  417d39:	push   cs
  417d3a:	mov    eax,ds:0x44ec56be
  417d3f:	dec    edx
  417d40:	(bad)  
  417d41:	xlat   BYTE PTR ds:[ebx]
  417d42:	mov    es,WORD PTR [esi]
  417d44:	sbb    eax,0x5f6c6a45
  417d49:	ds pop ecx
  417d4b:	cli    
  417d4c:	pop    eax
  417d4d:	xor    ecx,edi
  417d4f:	jle    0x417cd1
  417d51:	test   DWORD PTR [edi+ecx*8-0x6f51b87f],ecx
  417d58:	das    
  417d59:	pushf  
  417d5a:	push   ebp
  417d5b:	dec    edx
  417d5c:	xor    al,0x47
  417d5e:	or     ch,BYTE PTR [ecx-0x3b7d4ebc]
  417d64:	shl    DWORD PTR [edx+0x6f],0xf5
  417d68:	and    eax,0xc6f3579f
  417d6d:	fwait
  417d6e:	mov    BYTE PTR [esi+ebx*4+0x312b63a8],al
  417d75:	mov    ds:0xab89759c,eax
  417d7a:	mov    eax,ds:0xbdabaec6
  417d7f:	enter  0x9f8d,0x37
  417d83:	add    edi,DWORD PTR [ebx+0x147ae1af]
  417d89:	(bad)  
  417d8a:	or     al,0x4a
  417d8c:	lds    edi,FWORD PTR [edi+0x43]
  417d8f:	jmp    0x1501e488
  417d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d95:	cwde   
  417d96:	mul    ecx
  417d98:	ins    DWORD PTR es:[edi],dx
  417d99:	push   ebp
  417d9a:	sbb    BYTE PTR [edx-0x49befc42],0xea
  417da1:	mov    al,0xf0
  417da3:	pop    ss
  417da4:	push   0x132f31d3
  417da9:	cwde   
  417daa:	sub    edx,DWORD PTR [ecx]
  417dac:	stc    
  417dad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417daf:	xchg   edx,eax
  417db0:	jmp    0x417d37
  417db2:	sbb    cl,BYTE PTR [eax-0x7822c1ec]
  417db8:	(bad)
  417dbb:	test   eax,0xf0f82494
  417dc0:	sub    eax,ecx
  417dc2:	outs   dx,DWORD PTR ds:[esi]
  417dc3:	xchg   ecx,eax
  417dc4:	mov    ch,0x82
  417dc6:	xchg   DWORD PTR [edi],esp
  417dc8:	call   0xaaf290a5
  417dcd:	in     eax,0xcc
  417dcf:	fsub   QWORD PTR [ecx+ebx*4-0x6bba709c]
  417dd6:	or     al,0xbc
  417dd8:	add    DWORD PTR [ecx-0x3ef01a13],ebp
  417dde:	stos   BYTE PTR es:[edi],al
  417ddf:	lea    ebx,[ecx-0x4]
  417de2:	or     eax,0xcf4aea00
  417de7:	push   0x23
  417de9:	inc    edi
  417dea:	stc    
  417deb:	fsubr  DWORD PTR [esi-0x37]
  417dee:	xor    ebx,ebp
  417df0:	xor    ecx,DWORD PTR [eax-0x49]
  417df3:	jl     0x417df0
  417df5:	jae    0x417dcb
  417df7:	imul   eax,DWORD PTR [ebp+0x354cffaa],0xe3f80a28
  417e01:	outs   dx,DWORD PTR ds:[esi]
  417e02:	fist   DWORD PTR [eax+0x2aea3d8b]
  417e08:	call   0x64e2:0xa4dffdd
  417e0f:	(bad)  
  417e10:	push   ecx
  417e11:	pushf  
  417e12:	in     al,0x48
  417e14:	add    bh,bl
  417e16:	mov    esi,0x309255cf
  417e1b:	jmp    0x182339b5
  417e20:	and    DWORD PTR [ebp-0x6],0x8359763d
  417e27:	jne    0x417ddb
  417e29:	cs pushw ds
  417e2c:	add    edx,ecx
  417e2e:	mov    ch,0x2a
  417e30:	pop    ss
  417e31:	mov    edi,0x85fec8fd
  417e36:	mov    bl,0xb8
  417e38:	repz daa 
  417e3a:	mov    DWORD PTR [eiz*1+0x4aadc328],esi
  417e41:	rcl    al,0x5d
  417e44:	inc    eax
  417e45:	xchg   ebx,eax
  417e46:	push   ecx
  417e47:	push   edi
  417e48:	adc    ebx,0x7d331663
  417e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e4f:	dec    ecx
  417e50:	jno    0x417e9a
  417e52:	sbb    eax,DWORD PTR [ebx-0x4d]
  417e55:	sub    al,0x7
  417e57:	sbb    eax,0x70
  417e5a:	icebp  
  417e5b:	repz addr16 mov dh,0x69
  417e5f:	jle    0x417df7
  417e61:	int    0xdb
  417e63:	xchg   ebp,eax
  417e64:	mov    ebx,0xb429db73
  417e69:	lods   al,BYTE PTR ds:[esi]
  417e6a:	pop    edi
  417e6b:	hlt    
  417e6c:	jmp    0x80e7:0xbe8e6ef3
  417e73:	mov    DWORD PTR ds:0xe59d0d2c,edi
  417e79:	inc    esp
  417e7a:	or     eax,0x42e78375
  417e7f:	pop    ds
  417e80:	lock pop ss
  417e82:	stos   DWORD PTR es:[edi],eax
  417e83:	sub    DWORD PTR [esi-0x1fc72e53],eax
  417e89:	aas    
  417e8a:	mov    ds:0xc4de5853,eax
  417e8f:	or     ebp,edi
  417e91:	sub    BYTE PTR [esi-0x34b153b8],bh
  417e97:	into   
  417e98:	loope  0x417ee2
  417e9a:	jge    0x417e80
  417e9c:	adc    esp,eax
  417e9e:	dec    esi
  417e9f:	xchg   esp,eax
  417ea0:	push   0x11
  417ea2:	popa   
  417ea3:	jns    0x417e76
  417ea5:	cmp    ch,BYTE PTR [ecx-0x1cb647b5]
  417eab:	(bad)  
  417eac:	gs jo  0x417e4c
  417eaf:	hlt    
  417eb0:	loope  0x417e4d
  417eb2:	xor    eax,0x8e506f7d
  417eb7:	hlt    
  417eb8:	test   al,0x51
  417eba:	hlt    
  417ebb:	mov    ebx,0x48d34319
  417ec0:	xor    eax,eax
  417ec2:	ja     0x417e82
  417ec4:	adc    BYTE PTR [ebx+0x75eff909],dl
  417eca:	inc    DWORD PTR [edi+eiz*1-0x36]
  417ece:	inc    ebp
  417ecf:	or     BYTE PTR [esi+esi*8],ah
  417ed2:	add    BYTE PTR [edx-0x3df88d60],0x38
  417ed9:	and    bl,al
  417edb:	jo     0x417ecf
  417edd:	clc    
  417ede:	jge    0x417ebb
  417ee0:	jb     0x417ed4
  417ee2:	inc    edx
  417ee3:	js     0x417ee7
  417ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ee6:	(bad)  
  417ee7:	jmp    0x417efe
  417ee9:	ret    0x46fb
  417eec:	push   esp
  417eed:	mov    ebp,0x34e01764
  417ef2:	popf   
  417ef3:	or     edx,ecx
  417ef5:	in     al,0xb3
  417ef7:	popf   
  417ef8:	inc    edi
  417ef9:	mov    al,0x30
  417efb:	test   al,0x13
  417efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417efe:	mov    ebp,0xb93ea67c
  417f03:	mov    esp,0x35ded93c
  417f08:	sahf   
  417f09:	cmp    cl,BYTE PTR [esp+esi*1-0x61]
  417f0d:	inc    ebx
  417f0e:	(bad)  
  417f0f:	xor    edx,DWORD PTR [esp+edi*2+0x5691ae8f]
  417f16:	loope  0x417eec
  417f18:	adc    BYTE PTR [esi],al
  417f1a:	hlt    
  417f1b:	sub    bh,BYTE PTR [eax]
  417f1d:	xor    BYTE PTR [ecx],dh
  417f1f:	pop    eax
  417f20:	int    0xca
  417f22:	or     al,0x2d
  417f24:	js     0x417ed6
  417f26:	mov    WORD PTR [ebp-0x1a],gs
  417f29:	adc    DWORD PTR [edi],edi
  417f2b:	add    BYTE PTR [ecx+0x70e172cf],cl
  417f31:	xchg   ecx,eax
  417f32:	(bad)  
  417f33:	mov    ah,0x85
  417f35:	imul   edx,ecx,0xffffffe6
  417f38:	pop    edi
  417f39:	pop    edx
  417f3a:	sbb    al,0x81
  417f3c:	scas   eax,DWORD PTR es:[edi]
  417f3d:	sub    BYTE PTR [eax*4-0xbbbcf62],bl
  417f44:	pop    ss
  417f45:	mov    eax,0x1270e873
  417f4a:	mov    WORD PTR [ebx],?
  417f4c:	in     al,dx
  417f4d:	adc    ch,BYTE PTR [esi+0x504740cf]
  417f53:	mov    ecx,0xca0cd0bf
  417f58:	pop    edx
  417f59:	test   edx,0xacd7369f
  417f5f:	xor    ebp,DWORD PTR [esi-0x64]
  417f62:	in     al,0x33
  417f64:	xor    al,0x5d
  417f66:	sbb    al,0xe7
  417f68:	push   0xb8155ca5
  417f6d:	pop    es
  417f6e:	jp     0x417fb6
  417f70:	jg     0x417ef3
  417f72:	mov    eax,0x6c013401
  417f77:	repz jg 0x417fb4
  417f7a:	sar    DWORD PTR [eax-0x22],cl
  417f7d:	aam    0xa5
  417f7f:	into   
  417f80:	jae    0x417f83
  417f82:	sti    
  417f83:	cmp    BYTE PTR [ebx],dh
  417f85:	ja     0x417f5b
  417f87:	inc    ecx
  417f88:	xor    al,dl
  417f8a:	repnz xchg ebp,eax
  417f8c:	(bad)
  417f8f:	push   eax
  417f90:	mov    dh,0x5
  417f92:	(bad)  [ebx+0xf15fb70]
  417f98:	fidiv  DWORD PTR [ebp-0x3c]
  417f9b:	scas   al,BYTE PTR es:[edi]
  417f9c:	jle    0x417f58
  417f9e:	sub    DWORD PTR [esi+ecx*4-0x7072f2b1],ecx
  417fa5:	arpl   WORD PTR [eax],di
  417fa7:	adc    dl,0x84
  417faa:	in     al,0x46
  417fac:	add    cl,BYTE PTR [esi]
  417fae:	cmc    
  417faf:	dec    ecx
  417fb0:	pop    es
  417fb1:	fucomip st,st(2)
  417fb3:	jl     0x41800a
  417fb5:	mov    WORD PTR [esi],ss
  417fb7:	pop    eax
  417fb8:	adc    dh,BYTE PTR [esi]
  417fba:	jl     0x417f69
  417fbc:	jp     0x417ffa
  417fbe:	pop    es
  417fbf:	pop    ss
  417fc0:	fimul  DWORD PTR [edi]
  417fc2:	outs   dx,DWORD PTR ds:[esi]
  417fc3:	cdq    
  417fc4:	cmp    al,0x4
  417fc6:	pop    ds
  417fc7:	or     BYTE PTR [ebp+0x56b6b3ee],bl
  417fcd:	(bad)  
  417fce:	(bad)  
  417fd0:	adc    eax,0xd8215847
  417fd5:	push   esp
  417fd6:	or     eax,0xe78251c8
  417fdb:	push   ss
  417fdc:	inc    ebx
  417fdd:	cmc    
  417fde:	mov    WORD PTR [edi+0x32fc60ca],gs
  417fe4:	or     DWORD PTR [ebp-0x793aaebf],eax
  417fea:	in     al,dx
  417feb:	jnp    0x417fd6
  417fed:	scas   eax,DWORD PTR es:[edi]
  417fee:	fs fwait
  417ff0:	inc    eax
  417ff1:	scas   eax,DWORD PTR es:[edi]
  417ff2:	daa    
  417ff3:	arpl   WORD PTR [esi+0x1f93c67e],di
  417ff9:	std    
  417ffa:	inc    ecx
  417ffb:	nop
  417ffc:	cmp    esi,DWORD PTR [eax]
  417ffe:	xlat   BYTE PTR ds:[ebx]
  417fff:	jbe    0x418070
  418001:	mov    ch,0x6e
  418003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418004:	adc    DWORD PTR [esi+eax*2+0x29a9cda8],edi
  41800b:	pop    ds
  41800c:	push   0xffffffcb
  41800e:	(bad)  
  418010:	xchg   ebx,eax
  418011:	test   eax,0xa05424f5
  418016:	aas    
  418017:	ins    BYTE PTR es:[edi],dx
  418018:	pop    ds
  418019:	repz cmp al,0xb4
  41801c:	mov    cl,0x7b
  41801e:	xor    eax,0xc42700e5
  418023:	inc    edi
  418024:	mov    cl,0x5c
  418026:	mov    BYTE PTR [eax-0x71],dl
  418029:	in     eax,dx
  41802a:	fdiv   QWORD PTR [ebp+0x6f]
  41802d:	xchg   edi,eax
  41802e:	repz test al,0x4f
  418031:	pop    ds
  418032:	ret    
  418033:	test   BYTE PTR [ebx-0x19],bl
  418036:	fwait
  418037:	jnp    0x41807f
  418039:	jge    0x41805e
  41803b:	mov    eax,0x50390f43
  418040:	repz into 
  418042:	fld    DWORD PTR es:[edi-0xf]
  418046:	nop
  418047:	outs   dx,BYTE PTR ds:[esi]
  418048:	dec    ebp
  418049:	sahf   
  41804a:	pusha  
  41804b:	jbe    0x418005
  41804d:	pcmpeqb mm0,QWORD PTR [edx-0x78]
  418051:	(bad)  [ebx*4-0x4efb19b0]
  418058:	and    BYTE PTR [esp+esi*8+0x1c693f5d],ah
  41805f:	add    esi,ebp
  418061:	cmp    DWORD PTR [ebp+0x15],edi
  418064:	cdq    
  418065:	mov    ebx,0x42d90790
  41806a:	inc    ecx
  41806b:	jl     0x418054
  41806d:	push   esi
  41806e:	ja     0x4180e0
  418070:	loop   0x418097
  418072:	addr16 pop ss
  418074:	jl     0x4180c3
  418076:	int    0x3d
  418078:	inc    eax
  418079:	and    al,0x71
  41807b:	pop    esi
  41807c:	loope  0x4180de
  41807e:	addr16 dec ebp
  418080:	(bad)  
  418081:	gs push esi
  418083:	leave  
  418084:	sbb    eax,0x78b12dd5
  418089:	pusha  
  41808a:	mov    ch,0x42
  41808c:	or     DWORD PTR [edi],0x6d72e00f
  418092:	cli    
  418093:	jno    0x41808e
  418095:	cli    
  418096:	pop    ss
  418097:	mov    ecx,0x1484eb1d
  41809c:	cmc    
  41809d:	loopne 0x4180ca
  41809f:	mov    DWORD PTR [ebp+0x74],eax
  4180a2:	cs sub ebx,ebx
  4180a5:	stos   DWORD PTR es:[edi],eax
  4180a6:	cmp    ah,0xe0
  4180a9:	pop    ss
  4180aa:	cwde   
  4180ab:	mov    ecx,0xc1ae4501
  4180b0:	mov    ds:0x711a852f,eax
  4180b5:	gs stos DWORD PTR es:[edi],eax
  4180b7:	adc    eax,0x27810fcf
  4180bc:	push   esi
  4180bd:	mov    ebx,0x164f22bf
  4180c2:	das    
  4180c3:	xchg   DWORD PTR [ecx-0x5f2e670e],edi
  4180c9:	jmp    0x24e5b2ea
  4180ce:	rol    BYTE PTR [edx+0x4b77407d],cl
  4180d4:	mov    bl,0xa0
  4180d6:	nop
  4180d7:	mov    eax,ds:0x3bebf4fb
  4180dc:	aaa    
  4180dd:	ins    BYTE PTR es:[edi],dx
  4180de:	sbb    eax,DWORD PTR [edi]
  4180e0:	push   ss
  4180e1:	dec    ebp
  4180e2:	(bad)  
  4180e3:	stc    
  4180e4:	fisub  DWORD PTR [ecx]
  4180e6:	xor    eax,0x9835e72e
  4180eb:	mov    ds:0x2bf34d9f,al
  4180f0:	mov    esp,0x190ccdd8
  4180f5:	test   DWORD PTR [edi+0x7e],esp
  4180f8:	cmp    DWORD PTR [ecx+0x56727fdc],edx
  4180fe:	sub    ebx,ecx
  418100:	mov    bl,0x3b
  418102:	jmp    edi
  418104:	xor    BYTE PTR [edx+eax*4-0x11],ch
  418108:	mov    al,ds:0x8784db04
  41810d:	repz dec edi
  41810f:	test   eax,0x4e427e5f
  418114:	pop    edi
  418115:	jns    0x4180fd
  418117:	cmp    BYTE PTR [edi+eiz*8],dl
  41811a:	adc    eax,0x52f1c556
  41811f:	clc    
  418120:	jne    0x41819b
  418122:	pop    eax
  418123:	xchg   ebp,ebp
  418125:	test   DWORD PTR [edx-0x1c3cceb4],esi
  41812b:	in     eax,0x9
  41812d:	cmp    ebp,edx
  41812f:	movnti DWORD PTR [esi],ebp
  418132:	mov    esi,0x436af85
  418137:	popa   
  418138:	fwait
  418139:	daa    
  41813a:	daa    
  41813b:	sbb    eax,0xa6e9c499
  418140:	cwde   
  418141:	adc    eax,0x59718406
  418146:	adc    BYTE PTR [ebp-0x789cc909],dl
  41814c:	mov    esi,0x1b515a85
  418151:	div    DWORD PTR [ebx+ebp*2+0x39]
  418155:	inc    edx
  418156:	adc    eax,0x5e67b08b
  41815b:	stos   BYTE PTR es:[edi],al
  41815c:	mov    ds:0xaa2d3136,eax
  418161:	clc    
  418162:	out    dx,eax
  418163:	cmp    al,0x3e
  418165:	aas    
  418166:	xchg   esp,eax
  418167:	fiadd  WORD PTR [ecx]
  418169:	fsub   QWORD PTR [ecx-0x289a3ed6]
  41816f:	sbb    BYTE PTR [ecx-0x52],ch
  418172:	aaa    
  418173:	or     dh,BYTE PTR [ebp+0x19]
  418176:	jl     0x41814c
  418178:	pop    eax
  418179:	arpl   bx,bx
  41817b:	into   
  41817c:	mov    dh,0x1e
  41817e:	fwait
  41817f:	cdq    
  418180:	mov    ebp,0xda240e87
  418185:	jo     0x41819b
  418187:	xlat   BYTE PTR ds:[ebx]
  418188:	jne    0x418126
  41818a:	add    ah,BYTE PTR [eax-0x1d]
  41818d:	adc    DWORD PTR [eax-0x6],edi
  418190:	cmp    DWORD PTR [edx-0x67871f78],esi
  418196:	jecxz  0x4181f4
  418198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418199:	dec    ebp
  41819a:	(bad)  
  41819b:	loop   0x4181d8
  41819d:	cmp    BYTE PTR [esi+0x2f],ch
  4181a0:	daa    
  4181a1:	push   esi
  4181a2:	jb     0x4181db
  4181a4:	and    eax,0x3720fcb7
  4181a9:	ret    
  4181aa:	inc    ecx
  4181ab:	jne    0x41814e
  4181ad:	mov    al,0x98
  4181af:	xchg   ebx,eax
  4181b0:	iret   
  4181b1:	icebp  
  4181b2:	retf   0xf9b3
  4181b5:	adc    cl,BYTE PTR [ebp+0x3b]
  4181b8:	or     esp,DWORD PTR [esi-0x5e]
  4181bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181bc:	nop
  4181bd:	adc    BYTE PTR [eax-0x5e],ah
  4181c0:	int    0x88
  4181c2:	imul   edi,DWORD PTR [ebx],0xffffff80
  4181c5:	xor    ah,BYTE PTR [ebx-0x56]
  4181c8:	sti    
  4181c9:	jecxz  0x418154
  4181cb:	lods   eax,DWORD PTR ds:[esi]
  4181cc:	adc    al,0xdb
  4181ce:	cwde   
  4181cf:	shl    DWORD PTR [eax+0x5b],cl
  4181d2:	pop    eax
  4181d3:	jg     0x4181ef
  4181d5:	cmp    al,0xbd
  4181d7:	div    DWORD PTR [eax]
  4181d9:	or     eax,DWORD PTR [ebp-0x2f]
  4181dc:	mov    al,BYTE PTR [edx+edx*8-0x50]
  4181e0:	ret    0x4ae5
  4181e3:	mov    edi,0x58ebf66d
  4181e8:	sub    BYTE PTR [esi+0xa],ch
  4181eb:	sub    al,0x72
  4181ed:	add    al,0x9c
  4181ef:	cmp    eax,0x2fa76a04
  4181f4:	add    BYTE PTR [esi-0x6dac9d46],dh
  4181fa:	repnz sub eax,0xe384af2d
  418200:	and    eax,DWORD PTR ds:0x5a815015
  418206:	fisttp QWORD PTR [edx+0x69a09e3e]
  41820c:	push   DWORD PTR [ebx+0x5a]
  41820f:	or     al,0xf4
  418211:	lods   al,BYTE PTR ds:[esi]
  418212:	or     al,0x7a
  418214:	push   edx
  418215:	(bad)  
  418217:	xchg   esp,eax
  418218:	test   DWORD PTR [esi+0x5c],ebx
  41821b:	xor    BYTE PTR [ecx+0x51695ef],dl
  418221:	scas   eax,DWORD PTR es:[edi]
  418222:	sub    DWORD PTR [edi+0x67],eax
  418225:	dec    eax
  418226:	xchg   ebp,eax
  418227:	ja     0x418281
  418229:	rol    BYTE PTR [ecx],cl
  41822b:	cs sub al,0x83
  41822e:	clc    
  41822f:	and    ebp,eax
  418231:	adc    eax,0xe4c06a53
  418236:	std    
  418237:	dec    edx
  418238:	inc    ebx
  418239:	jmp    0x842967a6
  41823e:	bound  esp,QWORD PTR [esi-0xd21e778]
  418244:	shr    DWORD PTR [edi+0x44b042c4],cl
  41824a:	adc    al,0xc9
  41824c:	pop    esi
  41824d:	and    ah,dh
  41824f:	mov    bh,0xe8
  418251:	js     0x4181f9
  418253:	mov    eax,ds:0x758954fd
  418258:	call   0x90ed5e38
  41825d:	nop
  41825e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41825f:	add    dl,dh
  418261:	push   edx
  418262:	jge    0x418237
  418264:	xchg   esi,eax
  418265:	ins    DWORD PTR es:[edi],dx
  418266:	pop    es
  418267:	rol    DWORD PTR [eax],0x7d
  41826a:	inc    edi
  41826b:	inc    ecx
  41826c:	sub    eax,0x60012150
  418271:	js     0x41826f
  418273:	mov    edx,0x1f776540
  418278:	jnp    0x41822e
  41827a:	jmp    0x830d50fd
  41827f:	dec    ebx
  418280:	and    al,0x2
  418282:	inc    esi
  418283:	ss xchg edi,eax
  418285:	xor    DWORD PTR ds:0x65fc0145,ebp
  41828b:	(bad)  
  41828c:	test   eax,0xdfbef722
  418291:	push   ebx
  418292:	test   al,0x14
  418294:	iret   
  418295:	int3   
  418296:	les    edi,FWORD PTR [edi]
  418298:	stc    
  418299:	lods   al,BYTE PTR ds:[esi]
  41829a:	inc    ebp
  41829b:	rcr    dh,1
  41829d:	cmc    
  41829e:	pop    es
  41829f:	leave  
  4182a0:	mov    WORD PTR [eax+0x439d5d20],fs
  4182a6:	xor    bl,BYTE PTR [esp+ebp*2]
  4182a9:	das    
  4182aa:	fisubr WORD PTR [ecx-0x3e]
  4182ad:	sbb    ebx,ebp
  4182af:	dec    eax
  4182b0:	push   edi
  4182b1:	jae    0x418285
  4182b3:	jns    0x418249
  4182b5:	call   0x6227e0e1
  4182ba:	sub    BYTE PTR [ebp+0x72],cl
  4182bd:	sub    eax,0x7ff9c811
  4182c2:	mov    ecx,0x1a5f8bf7
  4182c7:	dec    ebx
  4182c8:	lock and eax,0xdd3c7c59
  4182ce:	rep outs dx,BYTE PTR ds:[esi]
  4182d0:	add    eax,0x21e10564
  4182d5:	ret    0x6bcc
  4182d8:	clc    
  4182d9:	dec    ebx
  4182da:	mov    ah,0x95
  4182dc:	cli    
  4182dd:	mov    ecx,0x74f51254
  4182e2:	pop    ds
  4182e3:	test   ecx,ebp
  4182e5:	push   ss
  4182e6:	mov    eax,DWORD PTR [ebp+0x1a]
  4182e9:	xchg   ebp,eax
  4182ea:	aas    
  4182eb:	mov    edx,0x3819910d
  4182f0:	push   esp
  4182f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182f2:	lods   eax,DWORD PTR ds:[esi]
  4182f3:	jno    0x4182fb
  4182f5:	test   BYTE PTR [ebx-0x2f],al
  4182f8:	adc    eax,0xb8dcab4e
  4182fd:	cmp    ch,BYTE PTR ds:0xbe5b8408
  418303:	lahf   
  418304:	arpl   WORD PTR [edi],sp
  418306:	loop   0x4182d9
  418308:	push   ebp
  418309:	outs   dx,DWORD PTR ds:[esi]
  41830a:	xor    al,0x70
  41830c:	out    0xd6,al
  41830e:	jnp    0x418330
  418310:	xor    eax,DWORD PTR [ebx-0x1fdbcf72]
  418316:	mov    ch,0xa5
  418318:	cwde   
  418319:	aaa    
  41831a:	dec    edi
  41831b:	jecxz  0x418304
  41831d:	cdq    
  41831e:	btr    DWORD PTR es:[ecx],ecx
  418322:	dec    ecx
  418323:	jge    0x418355
  418325:	pop    esi
  418326:	jecxz  0x418351
  418328:	fcomp  DWORD PTR [ebp-0x65]
  41832b:	ds add ebx,esp
  41832e:	rcl    esi,cl
  418330:	fistp  WORD PTR [esi+0x3d]
  418333:	rcr    DWORD PTR [ebp-0x26],1
  418336:	cs (bad) 
  418338:	xor    ebx,DWORD PTR [ecx+edx*2]
  41833b:	imul   esp,DWORD PTR [ebx-0x5c],0x58eaee6b
  418342:	mov    ch,0x8
  418344:	xchg   esp,eax
  418345:	dec    edi
  418346:	shl    BYTE PTR [edi+0x8c4f6b7],1
  41834c:	icebp  
  41834d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41834f:	loope  0x418340
  418351:	mov    bl,0xea
  418353:	sub    BYTE PTR [eax],ch
  418355:	popf   
  418356:	sbb    edi,edi
  418358:	pusha  
  418359:	and    esp,esp
  41835b:	div    DWORD PTR [edx+edx*8-0x67]
  41835f:	mov    eax,ds:0x7151444c
  418364:	pcmpgtd mm4,QWORD PTR [edx-0x37e8278c]
  41836b:	adc    bl,BYTE PTR [edx-0x333423d9]
  418371:	and    cl,BYTE PTR [edx+ebp*4-0x48a346ec]
  418378:	(bad)  
  418379:	in     al,dx
  41837a:	and    al,BYTE PTR [edi+0x76]
  41837d:	add    ecx,0xffffff97
  418380:	mov    ds:0xf8c46683,al
  418385:	scas   eax,DWORD PTR es:[edi]
  418386:	loope  0x41830d
  418388:	lods   al,BYTE PTR ds:[esi]
  418389:	sub    ah,BYTE PTR [ecx+0x6fc3d36c]
  41838f:	mov    esi,0xafe2493b
  418394:	dec    esi
  418395:	adc    esp,0xc347c113
  41839b:	xchg   esi,eax
  41839c:	cmp    BYTE PTR [ebp+0x38],dl
  41839f:	inc    eax
  4183a0:	rcr    BYTE PTR [edx+edi*8+0x25],cl
  4183a4:	cld    
  4183a5:	arpl   WORD PTR [ebx-0x5a207a61],cx
  4183ab:	out    0x7b,eax
  4183ad:	ret    
  4183ae:	inc    esi
  4183af:	mov    edx,0x1887090a
  4183b4:	daa    
  4183b5:	cmp    al,0x8
  4183b7:	cmc    
  4183b8:	dec    eax
  4183b9:	sti    
  4183ba:	mov    cs:0x294eced4,eax
  4183c0:	and    BYTE PTR [eax],bh
  4183c2:	push   cs
  4183c3:	sti    
  4183c4:	xor    al,0x44
  4183c6:	(bad)  
  4183c7:	jecxz  0x418364
  4183c9:	pop    edx
  4183ca:	inc    edx
  4183cb:	hlt    
  4183cc:	adc    al,0xa4
  4183ce:	int3   
  4183cf:	cmp    cl,BYTE PTR [esi-0x15]
  4183d2:	mov    esi,0x62a8e09d
  4183d7:	stos   DWORD PTR es:[edi],eax
  4183d8:	cmp    al,0xda
  4183da:	jbe    0x418371
  4183dc:	jecxz  0x4183f2
  4183de:	les    ebx,FWORD PTR [ecx-0x5b]
  4183e1:	pop    esi
  4183e2:	sub    esi,ecx
  4183e4:	test   DWORD PTR [edx+0x10ed5f21],0x9a3aa45c
  4183ee:	imul   ebx,edi,0x4206747a
  4183f4:	iret   
  4183f5:	xor    al,0xc1
  4183f7:	cdq    
  4183f8:	inc    eax
  4183f9:	arpl   WORD PTR [edx],ax
  4183fb:	mov    ecx,0x84ab15a7
  418400:	xchg   ebp,eax
  418401:	push   ss
  418402:	pop    eax
  418403:	and    eax,0x3da5319a
  418408:	daa    
  418409:	sbb    bh,al
  41840b:	loopne 0x4183c6
  41840d:	das    
  41840e:	imul   ebx,DWORD PTR [edi],0xffffff9e
  418411:	mov    cl,BYTE PTR [ebx-0x66]
  418414:	add    BYTE PTR [ebx-0x56],ah
  418417:	in     al,dx
  418418:	sbb    DWORD PTR [ebx-0x54],ecx
  41841b:	and    eax,0xe4e68270
  418420:	sub    BYTE PTR [edx+0x10],dh
  418423:	push   ecx
  418424:	jecxz  0x4183da
  418426:	(bad)  
  418427:	cwde   
  418428:	mov    cx,0xbe58
  41842c:	aaa    
  41842d:	push   esi
  41842e:	inc    esi
  41842f:	iret   
  418430:	xlat   BYTE PTR ds:[ebx]
  418431:	dec    eax
  418432:	push   es
  418433:	cmp    al,0xf7
  418435:	mov    ah,ch
  418437:	mov    cl,0xfa
  418439:	dec    ebp
  41843a:	mov    al,ch
  41843c:	add    eax,0xd196aae3
  418441:	pop    es
  418442:	retf   0x1278
  418445:	les    ebx,FWORD PTR ss:[eax+ebp*8+0x6aecc03e]
  41844d:	add    BYTE PTR [ebp-0x3c],al
  418450:	sbb    DWORD PTR ds:0x130f4470,0x1f1eaa8a
  41845a:	in     al,0xf5
  41845c:	and    eax,ebp
  41845e:	cmp    eax,0xcf4edd0
  418463:	and    eax,0x1fcf7973
  418468:	aad    0xf6
  41846a:	cmp    eax,esi
  41846c:	pop    ss
  41846d:	dec    ebp
  41846e:	ins    DWORD PTR es:[edi],dx
  41846f:	shr    DWORD PTR [ecx-0x4ae61185],1
  418475:	pop    esp
  418476:	enter  0xdb92,0xcc
  41847a:	inc    ebx
  41847b:	pop    edx
  41847c:	cdq    
  41847d:	mov    dh,0x5c
  41847f:	leave  
  418480:	js     0x41843c
  418482:	lods   eax,DWORD PTR ds:[esi]
  418483:	xchg   ebp,eax
  418484:	lahf   
  418485:	ror    DWORD PTR [ebp+0x2e],cl
  418488:	js     0x4184a6
  41848a:	(bad)  
  41848b:	ja     0x4184ec
  41848d:	fild   WORD PTR [ebx-0x34]
  418490:	fldcw  WORD PTR [esi]
  418492:	loope  0x4184af
  418494:	dec    ebp
  418495:	call   0xc32f:0x7bad1afb
  41849c:	out    0x1b,eax
  41849e:	cli    
  41849f:	popa   
  4184a0:	add    al,0x4e
  4184a2:	jp     0x418469
  4184a4:	dec    ebx
  4184a5:	pushf  
  4184a6:	popa   
  4184a7:	xlat   BYTE PTR ds:[ebx]
  4184a8:	jns    0x418483
  4184aa:	clc    
  4184ab:	mov    ebx,0xe36ae867
  4184b0:	inc    eax
  4184b1:	mov    bl,0x81
  4184b3:	fnstenv [eax-0x5e]
  4184b6:	(bad)  
  4184b7:	fmul   QWORD PTR ds:0x6fddcc18
  4184bd:	or     eax,0x368c1f7f
  4184c2:	mov    ?,WORD PTR [ebx-0x3359ebc]
  4184c8:	mov    edi,0xdb4c4e47
  4184cd:	push   ecx
  4184ce:	push   cs
  4184cf:	jp     0x418487
  4184d1:	imul   ebx,DWORD PTR [ecx+edi*4],0xffffffff
  4184d5:	lea    ecx,[edx-0x5a]
  4184d8:	repz mov al,ds:0x90b21380
  4184de:	cmp    esi,DWORD PTR [ebp+0x12761103]
  4184e4:	cwde   
  4184e5:	jmp    0xaff8:0xfb4240e6
  4184ec:	in     eax,0x67
  4184ee:	xchg   ebx,eax
  4184ef:	jecxz  0x4184ff
  4184f1:	sub    DWORD PTR [edx+0x6c0351e],edi
  4184f7:	out    0x2a,eax
  4184f9:	mov    ss,WORD PTR [edi+0x48]
  4184fc:	shl    BYTE PTR [eax-0x6339fbdd],1
  418502:	mov    BYTE PTR [ecx],0x8a
  418505:	dec    esi
  418506:	retf   
  418507:	cwde   
  418508:	jmp    0x4184fc
  41850a:	pop    es
  41850b:	das    
  41850c:	jb     0x418495
  41850e:	sub    eax,0xc91c7134
  418513:	mov    ebx,0xd52e362f
  418518:	test   DWORD PTR [edi+ebx*1-0x7a],ecx
  41851c:	mov    eax,0xf3729f83
  418521:	pop    ds
  418522:	dec    edx
  418523:	dec    DWORD PTR [ebp-0x2a]
  418526:	es into 
  418528:	dec    esp
  418529:	(bad)  [edi]
  41852b:	sti    
  41852c:	mov    ebx,esp
  41852e:	sub    ch,al
  418530:	mov    ds:0x76465a10,al
  418535:	pop    eax
  418536:	xchg   edi,eax
  418537:	sub    ecx,edx
  418539:	xor    eax,0xa3ff19e3
  41853e:	mov    eax,0xaf1ea222
  418543:	repnz xor ebp,DWORD PTR [esi+0x5b039ac3]
  41854a:	out    dx,eax
  41854b:	(bad)  
  41854c:	pop    edx
  41854d:	sub    DWORD PTR [eax-0xc],esp
  418550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418551:	and    eax,0x4c917094
  418556:	sbb    bh,BYTE PTR [ecx+0x7adb4170]
  41855c:	mov    ecx,esp
  41855e:	and    dh,BYTE PTR [ecx+0x40]
  418561:	jecxz  0x41859f
  418563:	mov    ss,WORD PTR [eax-0x2537e5be]
  418569:	and    eax,0x24a4926c
  41856e:	or     eax,0x9b7d87e
  418573:	sub    eax,0xd300d869
  418578:	mov    ch,0x9
  41857a:	popf   
  41857b:	push   ecx
  41857c:	(bad)  
  41857d:	scas   al,BYTE PTR es:[edi]
  41857e:	jnp    0x4185fe
  418580:	call   0xfd82c57b
  418585:	adc    eax,0x10d3195d
  41858a:	call   0xc883:0x91c4042f
  418591:	aaa    
  418592:	int    0x3c
  418594:	adc    al,0xcb
  418596:	push   eax
  418597:	fst    DWORD PTR [edi]
  418599:	push   ebx
  41859a:	jae    0x418594
  41859c:	sar    DWORD PTR [ecx-0x48fedf09],1
  4185a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185a3:	mov    eax,0xe7c7ccff
  4185a8:	jl     0x4185b2
  4185aa:	(bad)  
  4185ab:	arpl   WORD PTR [eax+ebx*2],ax
  4185ae:	xor    ah,dh
  4185b0:	(bad)
  4185b4:	repnz cmp al,0xd5
  4185b7:	popf   
  4185b8:	test   edi,ebx
  4185ba:	dec    ebp
  4185bb:	xchg   esp,eax
  4185bc:	dec    esi
  4185bd:	xchg   esp,eax
  4185be:	push   esi
  4185bf:	pop    edx
  4185c0:	and    BYTE PTR [edx-0x62],al
  4185c3:	sbb    edi,DWORD PTR [eax-0x2b7d9cc8]
  4185c9:	fucomi st,st(7)
  4185cb:	stos   DWORD PTR es:[edi],eax
  4185cc:	in     eax,dx
  4185cd:	rcr    DWORD PTR [edi-0x7c],1
  4185d0:	sub    al,BYTE PTR [edx-0x7a]
  4185d3:	jmp    0x4795ae09
  4185d8:	adc    eax,0x186961ac
  4185dd:	push   es
  4185de:	jo     0x418596
  4185e0:	push   esp
  4185e1:	out    dx,al
  4185e2:	pop    eax
  4185e3:	or     al,0x8d
  4185e5:	test   DWORD PTR [esi-0x3df8143d],ebx
  4185eb:	(bad)  
  4185ec:	popf   
  4185ed:	cmp    DWORD PTR [edx+edi*8-0x337b2e74],esi
  4185f4:	jae    0x41864a
  4185f6:	nop
  4185f7:	pop    edi
  4185f8:	call   DWORD PTR [ebx]
  4185fa:	(bad)
  4185ff:	rol    eax,1
  418601:	imul   eax,DWORD PTR [edx],0xfffffffa
  418604:	mov    ecx,DWORD PTR [eax-0x65055ba7]
  41860a:	pop    esp
  41860b:	or     esi,ebx
  41860d:	mov    bl,BYTE PTR [edx]
  41860f:	out    0x20,eax
  418611:	pop    eax
  418612:	jno    0x41862f
  418614:	ror    esi,cl
  418616:	xor    al,0xc6
  418618:	jae    0x4185a8
  41861a:	sti    
  41861b:	and    ah,BYTE PTR [edx+0x408fce9]
  418621:	inc    edx
  418622:	or     DWORD PTR [ebp+0x25],esi
  418625:	(bad)  
  418626:	push   ss
  418627:	dec    ebx
  418628:	fidivr DWORD PTR [ecx-0x1e]
  41862b:	adc    esi,DWORD PTR [ebp+edi*2-0x16]
  41862f:	xor    ebx,esi
  418631:	mov    ch,0x94
  418633:	cmp    DWORD PTR [edx],edx
  418635:	mov    ebx,0x5d533832
  41863a:	repnz leave 
  41863c:	pop    esp
  41863d:	repz aas 
  41863f:	lods   eax,DWORD PTR ds:[esi]
  418640:	xchg   BYTE PTR [ecx+0x763a822d],ch
  418646:	xchg   ebx,eax
  418647:	xchg   ebx,eax
  418648:	lea    esp,[esi-0x28]
  41864b:	sbb    BYTE PTR [ebx],dh
  41864d:	jnp    0x41863d
  41864f:	sub    esi,0x551d3d2b
  418655:	(bad)  [esi+0x3260f050]
  41865b:	sbb    al,0x5f
  41865d:	jmp    0x418646
  41865f:	loope  0x4186c5
  418661:	es hlt 
  418663:	xor    dh,al
  418665:	mov    ds:0x1debcad2,eax
  41866a:	call   0x355961fd
  41866f:	lock mov al,0x2f
  418672:	jbe    0x41865e
  418674:	test   ch,ah
  418676:	int    0xa7
  418678:	mov    esp,0xd6f4b346
  41867d:	mov    ss,WORD PTR [ebx-0x5d]
  418680:	push   esi
  418681:	retf   0xd8da
  418684:	rcl    bl,1
  418686:	or     eax,edi
  418688:	nop
  418689:	xor    ecx,ecx
  41868b:	cmp    BYTE PTR [esp+ebp*4],dl
  41868e:	scas   eax,DWORD PTR es:[edi]
  41868f:	sahf   
  418690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418691:	xor    edx,DWORD PTR [esi+0x44]
  418694:	jae    0x418683
  418696:	nop
  418697:	xor    BYTE PTR [ecx+0x6d072582],cl
  41869d:	imul   ebx,DWORD PTR [ebp+0x6cbd5af1],0x63
  4186a4:	xor    DWORD PTR [ebp-0x2c],ebx
  4186a7:	pop    ebx
  4186a8:	js     0x4186d7
  4186aa:	push   ds
  4186ab:	xor    ch,ch
  4186ad:	sub    BYTE PTR [eax-0x5d],dl
  4186b0:	add    cl,0xc8
  4186b3:	dec    dh
  4186b5:	out    0xe5,eax
  4186b7:	popf   
  4186b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b9:	inc    esp
  4186ba:	or     eax,0x4ed13822
  4186bf:	stc    
  4186c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186c1:	ja     0x4186d4
  4186c3:	sub    cl,BYTE PTR [ebp-0x3affffc7]
  4186c9:	pop    eax
  4186ca:	call   0x8c462fe7
  4186cf:	or     al,0x51
  4186d1:	mov    cl,0x1c
  4186d3:	pop    edi
  4186d4:	or     eax,0xbf52e9de
  4186d9:	cmp    al,0x16
  4186db:	xchg   DWORD PTR ds:0xab29d8d0,esp
  4186e1:	inc    edx
  4186e2:	mov    esp,0x3d6d4c24
  4186e7:	mov    edi,0xe6c9a8a8
  4186ec:	hlt    
  4186ed:	pop    ebp
  4186ee:	out    0xc9,eax
  4186f0:	push   ebp
  4186f1:	mov    edx,0xea9de3c7
  4186f6:	add    eax,0x7e64f8ac
  4186fb:	inc    ebx
  4186fc:	xchg   DWORD PTR [eax-0xeb0f84e],eax
  418702:	xor    DWORD PTR [ebx-0x159fc321],0x7a04d139
  41870c:	retf   0x5e9b
  41870f:	loop   0x418729
  418711:	mov    bh,BYTE PTR [esi]
  418713:	sti    
  418714:	and    bl,BYTE PTR ds:0xb47d1075
  41871a:	idiv   BYTE PTR [esi-0x3c7bd385]
  418720:	jae    0x418754
  418722:	enter  0x38c,0x8f
  418726:	in     eax,0xaa
  418728:	enter  0xa262,0x77
  41872c:	(bad)  
  41872d:	mov    edi,0x9e06a34b
  418732:	loopne 0x4187ab
  418734:	enter  0xf3cb,0x8c
  418738:	sahf   
  418739:	mov    esi,0x6fd7812a
  41873e:	mov    edx,0x11d921b4
  418743:	cmp    al,0xb6
  418745:	enter  0xca84,0x61
  418749:	(bad)  
  41874a:	and    esp,DWORD PTR [ebx-0x4e]
  41874d:	scas   al,BYTE PTR es:[edi]
  41874e:	ja     0x4187ad
  418750:	sbb    al,0x26
  418752:	jge    0x418777
  418754:	pop    ecx
  418755:	hlt    
  418756:	sbb    DWORD PTR [edi-0x12],esi
  418759:	out    0x27,al
  41875b:	rcl    BYTE PTR [eax],cl
  41875d:	cmc    
  41875e:	into   
  41875f:	loopne 0x4187de
  418761:	sbb    bh,BYTE PTR [ebp-0x4c]
  418764:	call   0x5e32:0x5b537432
  41876b:	jecxz  0x418790
  41876d:	add    esp,edx
  41876f:	inc    ebx
  418770:	inc    edi
  418771:	fwait
  418772:	add    al,0xdb
  418774:	in     al,dx
  418775:	std    
  418776:	pop    ecx
  418777:	dec    ebx
  418778:	imul   ebp,ebx,0x5f8f5862
  41877e:	pop    ebx
  41877f:	add    BYTE PTR [esi],bl
  418781:	mov    eax,0x2eebe0cb
  418786:	xchg   ecx,eax
  418787:	jmp    0x418794
  418789:	clc    
  41878a:	jg     0x4187e9
  41878c:	xchg   ebx,eax
  41878d:	inc    ecx
  41878e:	int    0x11
  418790:	cmc    
  418791:	pop    ecx
  418792:	icebp  
  418793:	sahf   
  418794:	push   ss
  418795:	ss mov dh,0xf2
  418798:	push   edx
  418799:	xor    DWORD PTR [edi+edi*2],eax
  41879c:	sbb    DWORD PTR [esi],eax
  41879e:	add    al,BYTE PTR [esi-0x77]
  4187a1:	xor    al,0x36
  4187a3:	xor    edi,esi
  4187a5:	addr16 call 0x2918c654
  4187ab:	inc    edx
  4187ac:	inc    edx
  4187ad:	gs push ss
  4187af:	fmul   st(4),st
  4187b1:	push   DWORD PTR [ebp+0x133486a7]
  4187b7:	repnz cmp ecx,esi
  4187ba:	out    0x8a,eax
  4187bc:	test   eax,0xba40a068
  4187c1:	mov    cs,WORD PTR [esi+0x2f]
  4187c4:	sbb    al,0xb2
  4187c6:	cmp    al,0x42
  4187c8:	hlt    
  4187c9:	adc    eax,0x418855b8
  4187ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187cf:	inc    ebx
  4187d0:	jle    0x418824
  4187d2:	test   BYTE PTR [edi-0x2ba89eb3],0x35
  4187d9:	and    eax,0x95b3d91
  4187de:	outs   dx,BYTE PTR ds:[esi]
  4187df:	mov    cl,0x2c
  4187e1:	xor    al,0xf1
  4187e3:	push   cs
  4187e4:	and    al,0x7
  4187e6:	test   al,0x3c
  4187e8:	mov    edx,0x23f5f4b1
  4187ed:	ds in  eax,0x49
  4187f0:	sti    
  4187f1:	js     0x418869
  4187f3:	test   eax,0x84c1458e
  4187f8:	sar    DWORD PTR [ecx-0x724f07a],1
  4187fe:	or     al,0x70
  418800:	add    eax,0xacf5394e
  418805:	test   DWORD PTR [ebx],edi
  418807:	aaa    
  418808:	imul   DWORD PTR [eax+0x628227e1]
  41880e:	loop   0x4187c3
  418810:	mov    DWORD PTR [eax+ecx*1-0xd4f1a74],ebp
  418817:	dec    edi
  418818:	jmp    0xf653ce51
  41881d:	popf   
  41881e:	lea    edi,[esi+0x3d]
  418821:	in     eax,dx
  418822:	adc    edx,ecx
  418824:	mov    dh,0x4b
  418826:	mov    edx,0x1dc767ab
  41882b:	jnp    0x4187f1
  41882d:	(bad)  
  41882e:	mov    esp,DWORD PTR [eax-0x22f87dc7]
  418834:	gs mov ebp,edi
  418837:	mov    bh,0x43
  418839:	mov    ds:0x90448c4c,al
  41883e:	inc    ecx
  41883f:	adc    dh,BYTE PTR [esi-0x9]
  418842:	in     eax,0xa3
  418844:	(bad)  
  418846:	mov    eax,ds:0xa7aa5f3b
  41884b:	xchg   ebp,eax
  41884c:	push   ss
  41884d:	jg     0x4188cc
  41884f:	jno    0x41885c
  418851:	lahf   
  418852:	push   ebx
  418853:	(bad)  
  418854:	aad    0x65
  418856:	cmp    esi,DWORD PTR [ebp-0x4fe49286]
  41885c:	fistp  QWORD PTR [ebx]
  41885e:	sbb    al,0xde
  418860:	pop    eax
  418861:	aaa    
  418862:	outs   dx,BYTE PTR ds:[esi]
  418863:	test   bh,0x3b
  418866:	(bad)  
  418867:	int3   
  418868:	stos   BYTE PTR es:[edi],al
  418869:	jne    0x418881
  41886b:	(bad)  
  41886c:	ror    BYTE PTR [eax+edx*2-0x891597b],0xb8
  418874:	sbb    BYTE PTR [ebx+0x32],0xc3
  418878:	dec    edx
  418879:	test   eax,0x8340bd40
  41887e:	inc    edi
  41887f:	mov    al,0xb0
  418881:	dec    ebp
  418882:	mov    cl,0xa5
  418884:	and    al,0x3d
  418886:	shr    DWORD PTR [esp+ecx*1-0x43],1
  41888a:	loope  0x4188f6
  41888c:	push   es
  41888d:	jecxz  0x418829
  41888f:	jp     0x4188b1
  418891:	dec    esi
  418892:	ret    
  418893:	frstor [ebp-0x3d]
  418896:	ret    0xd764
  418899:	sbb    DWORD PTR [esi-0x24],0x262034dc
  4188a0:	pushf  
  4188a1:	sbb    bl,BYTE PTR [esi+0x32c40a5b]
  4188a7:	jne    0x418923
  4188a9:	inc    edi
  4188aa:	push   ebx
  4188ab:	xchg   ebp,eax
  4188ac:	jle    0x41885d
  4188ae:	mov    edx,0xcfca5d43
  4188b3:	aad    0xe
  4188b5:	loopne 0x418848
  4188b7:	mov    ebp,0xf5df90fc
  4188bc:	sub    eax,0x7a0ee4e3
  4188c1:	dec    eax
  4188c2:	or     eax,0xb2cbe57b
  4188c7:	(bad)  
  4188c8:	sbb    al,0x4c
  4188ca:	and    eax,0xfea7e82e
  4188cf:	mov    esp,0xa0dc7768
  4188d4:	aad    0x4d
  4188d6:	adc    BYTE PTR [edx],ah
  4188d8:	push   esi
  4188d9:	jecxz  0x418909
  4188db:	shr    DWORD PTR [esi-0x3d],cl
  4188de:	iretw  
  4188e0:	mov    al,0x1b
  4188e2:	inc    esi
  4188e3:	push   ebp
  4188e4:	add    esi,0x535937ae
  4188ea:	cs pop edi
  4188ec:	cli    
  4188ed:	call   0xeb87853e
  4188f2:	loope  0x4188c5
  4188f4:	jmp    0xf7c2:0x32d035d2
  4188fb:	inc    ebp
  4188fc:	imul   ecx,esp,0x74
  4188ff:	inc    ebx
  418900:	push   eax
  418901:	fcomp  st(3)
  418903:	fwait
  418904:	push   ebp
  418905:	ret    0x5411
  418908:	fstp   DWORD PTR [esi]
  41890a:	mov    edi,0x2e4fee7a
  41890f:	xor    BYTE PTR [ecx-0x3fa9c210],bh
  418915:	jo     0x41894a
  418917:	or     al,0x81
  418919:	std    
  41891a:	and    ch,dh
  41891c:	into   
  41891d:	scas   eax,DWORD PTR es:[edi]
  41891e:	int    0x9d
  418920:	xchg   ecx,eax
  418921:	test   BYTE PTR [ecx+0x3a273f37],dl
  418927:	into   
  418928:	mov    ecx,0xb185f58a
  41892d:	xor    al,BYTE PTR [esi+0x3a]
  418930:	push   eax
  418931:	jb     0x4189a6
  418933:	inc    eax
  418934:	loope  0x418953
  418936:	outs   dx,BYTE PTR ds:[esi]
  418937:	mov    WORD PTR [eax-0x74],es
  41893a:	xor    DWORD PTR [eax-0x27fb9cf4],ebp
  418940:	pop    edi
  418941:	not    esi
  418943:	mov    eax,0x6385267f
  418948:	les    ecx,FWORD PTR [ebx]
  41894a:	add    DWORD PTR [ebx-0x34],edi
  41894d:	pop    ss
  41894e:	in     al,0xc4
  418950:	dec    esi
  418951:	in     al,dx
  418952:	dec    ebp
  418953:	dec    eax
  418954:	sub    DWORD PTR [ecx-0x73],edx
  418957:	lahf   
  418958:	mov    bl,0xce
  41895a:	push   ebp
  41895b:	ins    DWORD PTR es:[edi],dx
  41895c:	aas    
  41895d:	rcr    DWORD PTR [ebx+0x34],0xf8
  418961:	repz call 0x9c3c:0x657a2ae9
  418969:	xchg   edi,eax
  41896a:	mov    cl,0x5
  41896c:	jge    0x418914
  41896e:	fs stos DWORD PTR es:[edi],eax
  418970:	in     eax,dx
  418971:	ret    0xc0f5
  418974:	mov    esi,0x13a327a3
  418979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41897a:	sbb    eax,0xb1485ec5
  41897f:	in     al,dx
  418980:	aad    0xfa
  418982:	sub    DWORD PTR [eax-0x322a0175],ebp
  418988:	int3   
  418989:	(bad)  
  41898a:	jmp    0x4189e2
  41898c:	add    al,0x17
  41898e:	ss xchg ecx,eax
  418990:	jne    0x4189e9
  418992:	dec    ebx
  418993:	mov    ds:0x8b4c64cd,eax
  418998:	dec    ecx
  418999:	cs pop si
  41899c:	fiadd  WORD PTR [ebx+0x55]
  41899f:	mov    al,0x4
  4189a1:	cmp    ch,dh
  4189a3:	adc    ah,BYTE PTR [ebx+0x13]
  4189a6:	sbb    ebp,DWORD PTR [edi+0x4c]
  4189a9:	push   eax
  4189aa:	mov    fs,WORD PTR [edi+0x778819f1]
  4189b0:	ret    0xdf55
  4189b3:	es (bad) 
  4189b5:	jecxz  0x4189f9
  4189b7:	or     eax,0xcc5def92
  4189bc:	ret    0x680f
  4189bf:	push   es
  4189c0:	xchg   ebp,eax
  4189c1:	inc    esi
  4189c2:	fwait
  4189c3:	lock idiv BYTE PTR [edx]
  4189c6:	clc    
  4189c7:	sub    BYTE PTR [edx+edi*4+0x5ae9c6a3],ch
  4189ce:	sbb    BYTE PTR [edi+0x28],bh
  4189d1:	(bad)  [ebx]
  4189d3:	add    esi,edx
  4189d5:	mov    ebp,0xd802e1e4
  4189da:	cdq    
  4189db:	(bad)  
  4189dc:	imul   edi,DWORD PTR [ebx+edx*1],0xc7defcea
  4189e3:	sbb    al,0xe7
  4189e5:	xchg   esp,eax
  4189e6:	fnstenv [edx+0x47611909]
  4189ec:	jnp    0x4189a6
  4189ee:	iret   
  4189ef:	xchg   BYTE PTR [edi+0x6f],al
  4189f2:	adc    al,dl
  4189f4:	mov    cl,0x2f
  4189f6:	aas    
  4189f7:	cld    
  4189f8:	xchg   edx,eax
  4189f9:	xor    BYTE PTR [ebp+0x5e],0x3f
  4189fd:	inc    ecx
  4189fe:	sar    DWORD PTR [ebp+0x242b9a52],0x2f
  418a05:	jb     0x4189b9
  418a07:	inc    esp
  418a08:	xchg   DWORD PTR [edi+0x4cb5ee8a],ecx
  418a0e:	push   esi
  418a0f:	cs pop ecx
  418a11:	and    eax,0x7700119b
  418a16:	mov    edi,0x4419ebdd
  418a1b:	das    
  418a1c:	loopne 0x4189cd
  418a1e:	sub    cl,BYTE PTR ds:0xe429b774
  418a24:	pop    edi
  418a25:	mov    al,0x16
  418a27:	repnz ror DWORD PTR [esi-0x35116d39],0x8
  418a2f:	inc    ecx
  418a30:	rol    DWORD PTR [eax],cl
  418a32:	xchg   BYTE PTR [ebp+0x6f],cl
  418a35:	out    dx,al
  418a36:	popa   
  418a37:	sahf   
  418a38:	in     al,0x26
  418a3a:	adc    edx,DWORD PTR [ebx+0x291408be]
  418a40:	add    eax,0x75fae477
  418a45:	sbb    dl,BYTE PTR [edx+0xf]
  418a48:	rcl    edi,cl
  418a4a:	or     eax,0xd9a7d877
  418a4f:	inc    esp
  418a50:	dec    WORD PTR gs:[ecx+0x65c51ed3]
  418a58:	add    al,0x81
  418a5a:	xor    eax,DWORD PTR [edi+0x42fb4ffa]
  418a60:	push   ebp
  418a61:	lahf   
  418a62:	xchg   edi,eax
  418a63:	arpl   WORD PTR [ebx+0x427bd0a7],bx
  418a69:	sub    al,0x12
  418a6b:	inc    edi
  418a6c:	cmp    BYTE PTR ds:0x2fbdb9cc,0xbb
  418a73:	cwde   
  418a74:	sub    cl,cl
  418a76:	cli    
  418a77:	push   cs
  418a78:	(bad)  
  418a79:	retf   0xfe9f
  418a7c:	sub    dl,cl
  418a7e:	(bad)  
  418a7f:	test   eax,0xa3f8d96c
  418a84:	outs   dx,BYTE PTR ds:[esi]
  418a85:	cmp    DWORD PTR [ecx],ebx
  418a87:	into   
  418a88:	xor    eax,0x35b63000
  418a8d:	xchg   esi,eax
  418a8e:	fldcw  WORD PTR [ebx]
  418a90:	sbb    DWORD PTR [edx-0x1c],0x7b4b5d8b
  418a97:	loope  0x418a5f
  418a99:	adc    esp,edx
  418a9b:	std    
  418a9c:	dec    ebp
  418a9d:	push   eax
  418a9e:	mov    eax,ds:0xed46384c
  418aa3:	popa   
  418aa4:	je     0x418ab5
  418aa6:	sub    edx,DWORD PTR [edx-0x41]
  418aa9:	jmp    0x542cf7e7
  418aae:	es loope 0x418a63
  418ab1:	xchg   BYTE PTR [eax],dh
  418ab3:	xchg   edx,eax
  418ab4:	jecxz  0x418ae9
  418ab6:	scas   al,BYTE PTR es:[edi]
  418ab7:	retf   0xa4ee
  418aba:	popa   
  418abb:	xor    ecx,eax
  418abd:	cwde   
  418abe:	addr16 dec ebx
  418ac0:	adc    edx,0x3376e1c6
  418ac6:	jbe    0x418a4b
  418ac8:	mov    WORD PTR [edx+0x4c],ss
  418acb:	xor    DWORD PTR [edi-0x5b],edi
  418ace:	lea    eax,[ebp-0x3e50eb0f]
  418ad4:	fs lock inc ecx
  418ad7:	mov    ecx,0xfd54a854
  418adc:	jne    0x418aec
  418ade:	in     al,dx
  418adf:	addr16 push eax
  418ae1:	repz push ebx
  418ae3:	pop    ebx
  418ae4:	in     al,0x3e
  418ae6:	adc    eax,0x327964e0
  418aeb:	sbb    DWORD PTR [eax+0x62],ecx
  418aee:	fcomp  QWORD PTR [ebp+0x2dcf55b2]
  418af4:	jnp    0x418aa7
  418af6:	call   0xca93:0xfbf5ac3
  418afd:	adc    eax,0x969229e6
  418b02:	and    DWORD PTR [ebp-0x4763fab],0xffffff9e
  418b09:	leave  
  418b0a:	icebp  
  418b0b:	push   ebp
  418b0c:	ins    DWORD PTR es:[edi],dx
  418b0d:	pop    ebp
  418b0e:	adc    eax,0x338d5adf
  418b13:	fwait
  418b14:	or     esi,ebp
  418b16:	test   DWORD PTR [ecx+0x48b47931],ecx
  418b1c:	(bad)  
  418b1d:	aaa    
  418b1e:	xchg   edi,eax
  418b1f:	arpl   WORD PTR [esp+esi*4+0x47],bp
  418b23:	(bad)
  418b28:	fs pop ss
  418b2a:	shr    DWORD PTR [esi+0x6e],1
  418b2d:	dec    esp
  418b2e:	shr    BYTE PTR [esi],cl
  418b30:	jmp    0x8ed2:0xc74e
  418b36:	mov    bh,0x82
  418b38:	adc    eax,0x81ee92cf
  418b3d:	les    esi,FWORD PTR [ecx+edx*2+0x1f]
  418b41:	xchg   edx,eax
  418b42:	mov    ebp,0xe1cc4f11
  418b47:	dec    eax
  418b48:	loopne 0x418ae4
  418b4a:	fldcw  WORD PTR [ebx-0x14]
  418b4d:	fucom  st(5)
  418b4f:	mov    al,0xc6
  418b51:	push   es
  418b52:	jecxz  0x418b6c
  418b54:	je     0x418bb1
  418b56:	mov    bh,0x7a
  418b58:	adc    BYTE PTR [edi],al
  418b5a:	jl     0x418aee
  418b5c:	adc    DWORD PTR [esi-0x65],edi
  418b5f:	xor    eax,0x815c5afa
  418b64:	sbb    edi,DWORD PTR [edi-0x41]
  418b67:	adc    dh,dh
  418b69:	pop    esi
  418b6a:	div    BYTE PTR fs:[eax+0xa5c04ea]
  418b71:	mov    edx,0x69e639a4
  418b76:	sar    BYTE PTR [ebx-0x3e],0x9d
  418b7a:	add    ah,dl
  418b7c:	pusha  
  418b7d:	adc    BYTE PTR [esi-0x2f3ea500],ah
  418b83:	das    
  418b84:	cmp    eax,0x5fe692b4
  418b89:	xchg   esp,eax
  418b8a:	aad    0x81
  418b8c:	in     al,0x25
  418b8e:	xor    BYTE PTR [ebp+0x3be72203],0x17
  418b95:	imul   ebp,ebp,0xffffff8b
  418b98:	mov    esi,0x9e72fd42
  418b9d:	mov    ds:0x17b04ccd,eax
  418ba2:	mov    WORD PTR [ebx+0x4],?
  418ba5:	dec    eax
  418ba6:	outs   dx,BYTE PTR ds:[esi]
  418ba7:	fisub  WORD PTR ds:0x1d8b6b6
  418bad:	jmp    0x6472:0xe88fa6f5
  418bb4:	adc    BYTE PTR [ecx-0x69de2849],ah
  418bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bbb:	aas    
  418bbc:	addr16 aad 0xc5
  418bbf:	sub    DWORD PTR [edx+eax*4],eax
  418bc2:	mov    sp,0xcd7d
  418bc6:	pushf  
  418bc7:	sub    al,BYTE PTR [edx]
  418bc9:	sub    ah,BYTE PTR [edx-0x6b]
  418bcc:	mov    DWORD PTR [ecx],0xee7875d7
  418bd2:	adc    DWORD PTR [edx+0x16],esp
  418bd5:	cld    
  418bd6:	dec    ebx
  418bd7:	cmp    BYTE PTR ds:0x81308469,dl
  418bdd:	pusha  
  418bde:	in     eax,dx
  418bdf:	std    
  418be0:	rcl    DWORD PTR ds:0x39ec2ac2,0xa5
  418be7:	stos   BYTE PTR es:[edi],al
  418be8:	cmp    al,BYTE PTR [eax]
  418bea:	xchg   ebp,eax
  418beb:	add    eax,0x88d130e9
  418bf0:	push   eax
  418bf1:	push   ebp
  418bf2:	mov    ch,0x52
  418bf4:	push   ecx
  418bf5:	sbb    DWORD PTR [ebp+0x2a],0x41495642
  418bfc:	bound  ebx,QWORD PTR [esi*8-0x42b55d56]
  418c03:	xlat   BYTE PTR ds:[ebx]
  418c04:	xchg   ebx,eax
  418c05:	test   al,0xc0
  418c07:	or     ebp,DWORD PTR ds:[esi]
  418c0a:	and    BYTE PTR [edx],dl
  418c0c:	gs push ss
  418c0e:	retf   0x5054
  418c11:	std    
  418c12:	pop    edx
  418c13:	sbb    DWORD PTR [edx],eax
  418c15:	pop    esi
  418c16:	xchg   esi,eax
  418c17:	inc    edi
  418c18:	jmp    0xa36d998e
  418c1d:	xor    DWORD PTR [edx+0x7b0fdb20],esi
  418c23:	mov    ebp,0x3e58f8f5
  418c28:	test   al,0xf
  418c2a:	push   edi
  418c2b:	loop   0x418c28
  418c2d:	ins    BYTE PTR es:[edi],dx
  418c2e:	stos   BYTE PTR es:[edi],al
  418c2f:	mov    cl,0x25
  418c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c32:	sub    edi,esi
  418c34:	test   al,dl
  418c36:	jmp    0xf454:0x867d3fa2
  418c3d:	xchg   ebp,eax
  418c3e:	out    0x1a,al
  418c40:	jmp    0x7c1d:0x811b0c79
  418c47:	adc    al,cl
  418c49:	dec    ebp
  418c4a:	add    BYTE PTR [eax-0x71aacf4b],0xf0
  418c51:	out    dx,al
  418c52:	sbb    BYTE PTR [esi-0x3],0xff
  418c56:	addr16 std 
  418c58:	jge    0x418c0e
  418c5a:	pop    esp
  418c5b:	div    DWORD PTR [ecx+ecx*8+0x2b]
  418c5f:	xchg   esi,eax
  418c60:	push   ss
  418c61:	xchg   BYTE PTR [ecx+0x37386bdf],dh
  418c67:	push   esi
  418c68:	adc    DWORD PTR [edx],0xec514b93
  418c6e:	xchg   ecx,eax
  418c6f:	and    eax,0x3fe5bbef
  418c74:	fstp   DWORD PTR [ebx+eiz*2+0x3a5151d3]
  418c7b:	mov    BYTE PTR [ebx+0x7c91f4c4],ch
  418c81:	dec    edx
  418c82:	(bad)  
  418c83:	mov    cl,0xc3
  418c85:	imul   ebp,DWORD PTR [eax-0x3c303642],0xffffffd5
  418c8c:	push   ds
  418c8d:	stos   DWORD PTR es:[edi],eax
  418c8e:	lea    edi,[ecx]
  418c90:	enter  0xf9bc,0xe9
  418c94:	cmp    al,0xf4
  418c96:	fwait
  418c97:	inc    esi
  418c98:	dec    esi
  418c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c9a:	and    eax,esp
  418c9c:	xchg   ebp,eax
  418c9d:	outs   dx,BYTE PTR ds:[esi]
  418c9e:	mov    BYTE PTR [ebp-0x44],cl
  418ca1:	popf   
  418ca2:	mov    WORD PTR [eax],fs
  418ca4:	mov    ds:0x5cba4f3e,al
  418ca9:	xchg   ebp,eax
  418caa:	aad    0xd1
  418cac:	jo     0x418cd5
  418cae:	pop    esi
  418caf:	shr    DWORD PTR ds:[esi-0x57],cl
  418cb3:	pop    edi
  418cb4:	(bad)  
  418cb5:	cmp    dl,BYTE PTR [ecx]
  418cb7:	cs dec edi
  418cb9:	mov    eax,ss
  418cbb:	dec    ecx
  418cbc:	jecxz  0x418cd9
  418cbe:	(bad)  
  418cbf:	ja     0x418d2b
  418cc1:	clc    
  418cc2:	(bad)  
  418cc3:	shr    edx,cl
  418cc5:	outs   dx,DWORD PTR ds:[esi]
  418cc6:	nop
  418cc7:	imul   al
  418cc9:	and    DWORD PTR [ebp+0x18],0xffffffbd
  418ccd:	adc    DWORD PTR [edx],ebp
  418ccf:	test   eax,0x7c46cc68
  418cd4:	xor    al,0x75
  418cd6:	or     DWORD PTR [ebp+0x7029cbad],ecx
  418cdc:	in     eax,0x34
  418cde:	inc    edx
  418cdf:	sti    
  418ce0:	(bad)  
  418ce2:	cmovge ebp,DWORD PTR [eax-0x42]
  418ce6:	adc    edx,DWORD PTR [ecx+0x5b3dd92c]
  418cec:	mov    eax,ds:0xfe20bc13
  418cf1:	and    bh,bl
  418cf3:	push   ecx
  418cf4:	xor    eax,0x4acd4988
  418cf9:	repnz in eax,dx
  418cfb:	in     eax,dx
  418cfc:	lods   al,BYTE PTR ds:[esi]
  418cfd:	lods   eax,DWORD PTR ds:[esi]
  418cfe:	call   0x9a9294a5
  418d03:	ja     0x418d3e
  418d05:	ss adc eax,0x24a5e6e
  418d0b:	push   esp
  418d0c:	pop    edx
  418d0d:	mov    edi,0x8c9fa5b6
  418d12:	popf   
  418d13:	inc    esi
  418d14:	cmp    esi,DWORD PTR [edx-0x192c0757]
  418d1a:	les    eax,FWORD PTR [esi+0x3ce7b379]
  418d20:	push   edi
  418d21:	or     eax,0x921c70fa
  418d26:	jb     0x418d8e
  418d28:	push   ss
  418d29:	data16 cli 
  418d2b:	stc    
  418d2c:	unpckhps xmm0,XMMWORD PTR [esi-0x25d3b772]
  418d33:	and    ah,ch
  418d35:	and    ebx,DWORD PTR [ecx+0x3c]
  418d38:	loop   0x418d49
  418d3a:	shl    bl,1
  418d3c:	mov    DWORD PTR [ebp-0x4a],esi
  418d3f:	and    BYTE PTR [esi+eax*4+0x75],0x3a
  418d44:	sbb    eax,0x6373361e
  418d49:	cmp    al,0xdd
  418d4b:	mov    eax,0x52f89d3
  418d50:	mov    cl,0x6c
  418d52:	adc    al,BYTE PTR [ebp+0x35]
  418d55:	adc    ch,BYTE PTR [edi+0x218f457e]
  418d5b:	popf   
  418d5c:	jmp    0x2508:0xaf661b78
  418d63:	push   cs
  418d64:	sub    BYTE PTR [ebx-0x2d],bl
  418d67:	xor    ebx,ebp
  418d69:	fsubr  QWORD PTR [ecx]
  418d6b:	sub    bh,BYTE PTR [ecx+0x59]
  418d6e:	ret    
  418d6f:	jae    0x418da7
  418d71:	imul   edx,DWORD PTR [edi-0x2d],0x21
  418d75:	pop    edi
  418d76:	cdq    
  418d77:	int3   
  418d78:	fisub  WORD PTR [ebx+0x4b6963e7]
  418d7e:	or     ch,BYTE PTR [eax+0x70]
  418d81:	jno    0x418d79
  418d83:	push   ebp
  418d84:	jns    0x418dad
  418d86:	daa    
  418d87:	in     eax,dx
  418d88:	xor    esp,DWORD PTR [edi-0x183694a6]
  418d8e:	add    DWORD PTR [edi+0x1d038b76],esp
  418d94:	in     al,0xf2
  418d96:	adc    esi,DWORD PTR [edx]
  418d98:	in     al,dx
  418d99:	shl    ch,cl
  418d9b:	(bad)  [eax]
  418d9d:	jns    0x418dac
  418d9f:	sbb    BYTE PTR [ecx-0xa],0xcf
  418da3:	pop    esp
  418da4:	out    0xb5,eax
  418da6:	ucomiss xmm0,xmm0
  418da9:	enter  0xc333,0x48
  418dad:	adc    DWORD PTR [ecx-0x58],ebx
  418db0:	add    ebx,eax
  418db2:	xlat   BYTE PTR ds:[ebx]
  418db3:	xor    eax,0xd9bfcf2e
  418db8:	and    BYTE PTR [ebp+edi*8+0x0],cl
  418dbc:	push   0x8da314b0
  418dc1:	nop
  418dc2:	cmp    BYTE PTR [ebp-0x46],bl
  418dc5:	or     eax,0xf3f74680
  418dca:	sbb    esp,DWORD PTR [edx]
  418dcc:	aad    0x88
  418dce:	std    
  418dcf:	inc    eax
  418dd0:	jle    0x418d91
  418dd2:	jge    0x418d79
  418dd4:	or     cl,BYTE PTR [ebx+0x7b]
  418dd7:	xor    edi,ebx
  418dd9:	lock shl edi,0x3b
  418ddd:	in     al,dx
  418dde:	sub    ebx,DWORD PTR [ebp+0x5d12ab1]
  418de4:	arpl   WORD PTR [esi],di
  418de6:	cmc    
  418de7:	xor    ecx,DWORD PTR [ebx-0x56]
  418dea:	mov    al,ds:0xade9450a
  418def:	sti    
  418df0:	xchg   edi,eax
  418df1:	std    
  418df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418df3:	push   0xa46fe55a
  418df8:	jae    0x418dcc
  418dfa:	pop    es
  418dfb:	mov    eax,0x866cb930
  418e00:	and    bl,BYTE PTR [ecx+0x33]
  418e03:	or     edx,ebx
  418e05:	or     al,0x64
  418e07:	icebp  
  418e08:	in     eax,dx
  418e09:	mov    edx,DWORD PTR [ebp-0x10]
  418e0c:	or     DWORD PTR ds:0x428e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x428e7b,0x428ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x428ec3,0x428e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x428e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x428e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x428e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x428eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x428ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x428e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x428e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x428e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x428e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x428e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x428e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x42a9df
  418ecd:	cmp    DWORD PTR ds:0x428e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x428e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x428e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x428e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x428e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x428e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x428eeb
  418f37:	mov    ebx,DWORD PTR ds:0x428ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x428ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x428ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x428ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4281a7
  418f73:	call   DWORD PTR ds:0x42a9e3
  418f79:	cmp    DWORD PTR ds:0x428ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x428ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x428ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x428ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x428ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x428eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x428e37
  419347:	mov    eax,ds:0x428373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x428eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x428eb3
  419365:	inc    eax
  419366:	mov    ds:0x428eb3,eax
  41936b:	cmp    DWORD PTR ds:0x428eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x428eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x42a9e7
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x428493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x428e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x428e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x428e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x428e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x428e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x428e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x428e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x428eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x428ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x428e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x428e9f,0x15
  419451:	cmp    DWORD PTR ds:0x428e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x428e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x42a9eb
  419479:	cmp    DWORD PTR ds:0x428e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x428e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x428e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x428e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x428e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x428e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x428e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x428e43,0x428e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x428e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	adc    dl,ah
  41950d:	cdq    
  41950e:	push   ds
  41950f:	pop    ebp
  419510:	and    BYTE PTR [edx-0x7c9fb27d],al
  419516:	cmp    DWORD PTR [esi+0x21],0x72
  41951a:	inc    eax
  41951b:	daa    
  41951c:	mov    ds:0x6c73a67f,eax
  419521:	xchg   BYTE PTR [edi-0x45],al
  419524:	dec    bx
  419526:	jb     0x4194b6
  419528:	aad    0xa1
  41952a:	xor    al,0xf8
  41952c:	jmp    0x91766384
  419531:	sahf   
  419532:	mov    ebx,edi
  419534:	add    ch,BYTE PTR cs:[ebx-0x34]
  419538:	int    0x55
  41953a:	xor    al,0xab
  41953c:	clc    
  41953d:	ins    DWORD PTR es:[edi],dx
  41953e:	cs loopne 0x4194da
  419541:	test   al,0xbb
  419543:	and    al,0x56
  419545:	loopne 0x41951c
  419547:	or     ah,dl
  419549:	out    dx,al
  41954a:	iret   
  41954b:	sub    ebx,edx
  41954d:	jp     0x419591
  41954f:	sbb    DWORD PTR [ecx],ebx
  419551:	mov    bh,0xe7
  419553:	sbb    DWORD PTR [ebx-0x2fad162c],ecx
  419559:	jae    0x419508
  41955b:	jmp    0x4195d4
  41955d:	cmp    edx,DWORD PTR [ebx-0x7b]
  419560:	xchg   ecx,eax
  419561:	adc    dh,BYTE PTR [edx]
  419563:	lds    eax,FWORD PTR [esp+eax*1+0x74]
  419567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419568:	(bad)  
  419569:	cmp    BYTE PTR [esi],bl
  41956b:	mov    eax,0x52cb467c
  419570:	pop    eax
  419571:	xor    al,0xf5
  419573:	dec    esi
  419574:	inc    edi
  419575:	(bad)  
  419576:	rcr    BYTE PTR [edi+ebx*1],1
  419579:	add    al,0xab
  41957b:	dec    BYTE PTR [edx-0x595bb050]
  419581:	ins    BYTE PTR es:[edi],dx
  419582:	test   ebp,edx
  419584:	or     BYTE PTR [ebx],al
  419586:	fcmovnb st,st(7)
  419588:	add    eax,0xa6137861
  41958d:	cmp    BYTE PTR [edx-0x6c],bl
  419590:	push   ebp
  419591:	push   0x44e10fc9
  419596:	push   es
  419597:	test   al,0xf9
  419599:	inc    esp
  41959a:	ret    
  41959b:	retf   0x3873
  41959e:	je     0x419581
  4195a0:	jmp    0x7fad:0xc8ae0cd8
  4195a7:	in     eax,0xaa
  4195a9:	mov    ds:0x4dadb85d,eax
  4195ae:	(bad)  
  4195af:	xor    eax,ecx
  4195b1:	dec    edx
  4195b2:	sub    edi,DWORD PTR [ecx+0x56]
  4195b5:	psubq  mm5,mm5
  4195b8:	lods   al,BYTE PTR gs:[esi]
  4195ba:	mov    cs,edi
  4195bc:	sub    DWORD PTR [ecx],eax
  4195be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195bf:	in     al,0xe0
  4195c1:	scas   eax,DWORD PTR es:[edi]
  4195c2:	test   eax,0x607f344
  4195c7:	cmovb  esi,DWORD PTR [ebx]
  4195ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195cb:	scas   al,BYTE PTR es:[edi]
  4195cc:	rcr    ebp,cl
  4195ce:	mov    ds:0x4d8286b0,eax
  4195d3:	rcr    BYTE PTR [ecx+edx*8+0x1a1f459d],0x8d
  4195db:	push   ebp
  4195dc:	je     0x41962c
  4195de:	push   esp
  4195df:	mov    dl,0xec
  4195e1:	pop    ebp
  4195e2:	mov    dl,0x41
  4195e4:	stc    
  4195e5:	sti    
  4195e6:	out    dx,al
  4195e7:	mov    cl,0x68
  4195e9:	daa    
  4195ea:	out    dx,eax
  4195eb:	mov    ds:0x2c2753b2,eax
  4195f0:	hlt    
  4195f1:	test   DWORD PTR [edx],eax
  4195f3:	fistp  WORD PTR [ebp+0x9]
  4195f6:	jns    0x419580
  4195f8:	add    al,0x23
  4195fa:	fs inc ebx
  4195fc:	add    BYTE PTR [edi+eax*2-0x5f],0x36
  419601:	mov    bl,0x3
  419603:	dec    edx
  419604:	dec    ebx
  419605:	lahf   
  419606:	lahf   
  419607:	dec    edi
  419608:	fisub  WORD PTR [ecx-0x5ea34cd1]
  41960e:	rcr    BYTE PTR [ebx-0x4c],1
  419611:	popf   
  419612:	in     al,0x7b
  419614:	push   es
  419615:	in     eax,0x42
  419617:	addps  xmm0,xmm3
  41961a:	push   eax
  41961b:	pusha  
  41961c:	nop
  41961d:	(bad)  
  41961f:	int    0xb3
  419621:	jno    0x4195cf
  419623:	loopne 0x419650
  419625:	cld    
  419626:	nop
  419627:	mov    ebx,0x6fc98a37
  41962c:	stc    
  41962d:	(bad)  
  41962e:	jp     0x419634
  419630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419631:	jmp    0x419627
  419633:	mov    al,ds:0xbeeb5682
  419638:	mov    cl,0x16
  41963a:	or     BYTE PTR [ecx-0x4953458a],bl
  419640:	push   edi
  419641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419642:	jmp    0x42bb:0x539d821d
  419649:	fwait
  41964a:	jle    0x41969b
  41964c:	xchg   ebp,eax
  41964d:	ja     0x4196cb
  41964f:	jl     0x41965c
  419651:	mov    eax,ds:0x78c90f71
  419656:	jg     0x419677
  419658:	fisttp WORD PTR [ebp+0x6b]
  41965b:	cmp    ah,BYTE PTR [esi+0x49]
  41965e:	out    dx,eax
  41965f:	adc    al,0x42
  419661:	jmp    0xefe9:0xdb16a127
  419668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419669:	in     al,0xfa
  41966b:	xchg   edx,eax
  41966c:	lds    ecx,FWORD PTR [edx+ecx*2+0x2869d60]
  419673:	mov    esi,DWORD PTR [edi+0x2a]
  419676:	lahf   
  419677:	xlat   BYTE PTR ds:[ebx]
  419678:	mov    esp,0x4d43178e
  41967d:	sub    ebx,DWORD PTR [edx-0x2796d227]
  419683:	retf   
  419684:	jne    0x4196d8
  419686:	fidiv  DWORD PTR [ecx-0x6d04f6c4]
  41968c:	mov    bl,0xde
  41968e:	mov    ebp,0x1a28bfd6
  419693:	call   0x78032fd7
  419698:	pop    esp
  419699:	sbb    DWORD PTR [edx+0x44e89316],edi
  41969f:	or     ecx,DWORD PTR [edx+0x182d52c1]
  4196a5:	not    DWORD PTR [esi-0x463edd0e]
  4196ab:	frstor [esi]
  4196ad:	lods   al,BYTE PTR ds:[esi]
  4196ae:	popa   
  4196af:	mov    edx,0x217c35f0
  4196b4:	lock jmp 0x4196f1
  4196b7:	retf   0x477
  4196ba:	imul   eax,esp,0x95e58775
  4196c0:	call   0xc431cc56
  4196c5:	add    DWORD PTR [edx-0x79776079],edi
  4196cb:	jne    0x4196ce
  4196cd:	mov    DWORD PTR [ebx+0x64],esi
  4196d0:	mov    esi,0x85e9cd3e
  4196d5:	jge    0x419726
  4196d7:	mov    ebx,0xe9bf5568
  4196dc:	fisub  DWORD PTR [esi-0x30]
  4196df:	out    dx,eax
  4196e0:	dec    ebp
  4196e1:	icebp  
  4196e2:	add    DWORD PTR [edi+0x2057860f],esp
  4196e8:	call   0xb96b:0xd2146c0e
  4196ef:	add    BYTE PTR [esi+0x199839f8],bh
  4196f5:	dec    eax
  4196f6:	mov    edi,0x2a0c6606
  4196fb:	lahf   
  4196fc:	pop    es
  4196fd:	mov    esp,DWORD PTR [edi]
  4196ff:	test   al,0x9e
  419701:	les    ebx,FWORD PTR [eax-0x6ffb01d2]
  419707:	mov    bl,0x1c
  419709:	sub    ah,bh
  41970b:	retf   
  41970c:	inc    edi
  41970d:	add    al,0xa5
  41970f:	sub    BYTE PTR [ebp+0x78246ea6],ch
  419715:	mov    dl,0x67
  419717:	iret   
  419718:	add    al,0xbf
  41971a:	mov    ch,0xd
  41971c:	fiadd  WORD PTR ds:0xb336ef55
  419722:	cli    
  419723:	xchg   esp,eax
  419724:	mov    cl,0xd7
  419726:	fwait
  419727:	scas   al,BYTE PTR es:[edi]
  419728:	gs pop edx
  41972a:	stos   BYTE PTR es:[edi],al
  41972b:	and    eax,0x4ad2360d
  419730:	pop    edi
  419731:	sbb    eax,0x4065e651
  419736:	call   0xd1e6b941
  41973b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41973c:	push   eax
  41973d:	push   ds
  41973e:	pop    ebp
  41973f:	and    BYTE PTR [edx],dl
  419741:	mov    bh,0x9b
  419743:	lods   eax,DWORD PTR ds:[esi]
  419744:	gs xchg ebp,eax
  419746:	out    dx,eax
  419747:	fld    st(1)
  419749:	shr    DWORD PTR [ebx],cl
  41974b:	ja     0x419754
  41974d:	clc    
  41974e:	enter  0x6db7,0x86
  419752:	and    cl,BYTE PTR [ebp+0x91a810d]
  419758:	stos   BYTE PTR es:[edi],al
  419759:	adc    eax,0x6c755b24
  41975e:	stc    
  41975f:	mov    esp,0x7c645d92
  419765:	fsub   QWORD PTR [edx+0xe]
  419768:	add    DWORD PTR [ecx],ecx
  41976a:	cmp    ah,BYTE PTR [edi]
  41976c:	xchg   esp,eax
  41976d:	les    ebx,FWORD PTR [ebp-0x3e959968]
  419773:	fdivr  st(7),st
  419775:	cmp    BYTE PTR [edx],dl
  419777:	adc    DWORD PTR [edx+ebp*4+0x7ddd0028],0xffffffcb
  41977f:	sub    bl,BYTE PTR [ecx]
  419781:	dec    ecx
  419782:	in     eax,0x4
  419784:	xor    ebp,esp
  419786:	push   0x9796f683
  41978b:	adc    al,0xda
  41978d:	jecxz  0x419804
  41978f:	cmc    
  419790:	xchg   ecx,eax
  419791:	sub    DWORD PTR [edx+0x9278834],ebx
  419797:	adc    ecx,ebx
  419799:	dec    ecx
  41979a:	inc    edi
  41979b:	jp     0x4197b6
  41979d:	in     al,dx
  41979e:	mov    ebx,0x48764790
  4197a3:	cmc    
  4197a4:	pop    edx
  4197a5:	sub    eax,0x482f0308
  4197aa:	push   edi
  4197ab:	(bad)  
  4197ad:	aaa    
  4197ae:	xchg   ebx,eax
  4197af:	cmp    eax,DWORD PTR [ebp-0x32d25831]
  4197b5:	add    dl,BYTE PTR [eax-0x4d01406f]
  4197bb:	cmp    eax,0x95b0f831
  4197c0:	sub    al,0x0
  4197c2:	clc    
  4197c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c4:	push   edx
  4197c5:	int    0xbe
  4197c7:	dec    esi
  4197c8:	ret    0x5a5b
  4197cb:	dec    esi
  4197cc:	push   cs
  4197cd:	push   ds
  4197ce:	outs   dx,BYTE PTR ds:[esi]
  4197cf:	pop    eax
  4197d0:	cli    
  4197d1:	jge    0x4197e8
  4197d3:	shr    BYTE PTR [ebx+eax*8],1
  4197d6:	push   cs
  4197d7:	xchg   edi,eax
  4197d8:	adc    al,0xd6
  4197da:	adc    cl,BYTE PTR [edx]
  4197dc:	jno    0x4197d8
  4197de:	(bad)  
  4197e0:	mov    ds:0xac90d45f,al
  4197e5:	sub    DWORD PTR [ebx],ecx
  4197e7:	adc    al,0x38
  4197e9:	mov    DWORD PTR [edx+0x47],ebx
  4197ec:	nop
  4197ed:	or     esp,DWORD PTR [esi-0x2b536cdd]
  4197f3:	and    al,0x27
  4197f5:	fwait
  4197f6:	mov    eax,DWORD PTR [ebx+0x38]
  4197f9:	cli    
  4197fa:	or     esp,ebp
  4197fc:	loopne 0x41980b
  4197fe:	mov    eax,0x54c13902
  419803:	in     eax,dx
  419804:	jle    0x419881
  419806:	jne    0x4197ef
  419808:	cli    
  419809:	sbb    al,0x1
  41980c:	mov    ah,0xc
  41980e:	adc    BYTE PTR gs:[edx+0x6a],al
  419812:	mov    ds:0x6c407d7e,al
  419817:	xor    al,BYTE PTR [eax+0x289c8aec]
  41981d:	and    eax,0xe6123fca
  419822:	add    ebx,DWORD PTR [ebx]
  419824:	test   BYTE PTR [edi+ecx*8-0x5c5cf0e3],ah
  41982b:	daa    
  41982c:	cmp    esp,DWORD PTR [ebp-0x691c0c00]
  419832:	scas   al,BYTE PTR es:[edi]
  419833:	xchg   esi,eax
  419834:	jns    0x4197cd
  419836:	push   edx
  419837:	lea    ebx,[ebx+ebx*8+0x17]
  41983b:	mov    DWORD PTR [ebx-0x3f],eax
  41983e:	or     al,0xdf
  419840:	push   ecx
  419841:	imul   esp,DWORD PTR [edx+0x4d5a818b],0x6d
  419848:	pop    esi
  419849:	aam    0x4e
  41984b:	shr    DWORD PTR [edx],1
  41984d:	xor    DWORD PTR [ecx-0x36],0x25
  419851:	cmc    
  419852:	loopne 0x4198c5
  419854:	xor    BYTE PTR [ecx+0x29f4ce0d],dh
  41985a:	lock imul ecx,DWORD PTR ds:0xb51d2b1a,0xffffffda
  419862:	push   edx
  419863:	dec    esp
  419864:	retf   0x1ff5
  419867:	cld    
  419868:	cdq    
  419869:	bound  esp,QWORD PTR [edi-0x3c]
  41986c:	dec    esi
  41986d:	mov    dl,0x86
  41986f:	aas    
  419870:	fisub  DWORD PTR [eax-0x29cc9b2]
  419876:	jne    0x4198c6
  419878:	(bad)  
  419879:	arpl   bx,ax
  41987b:	iret   
  41987c:	fwait
  41987d:	ins    BYTE PTR es:[edi],dx
  41987e:	xadd   BYTE PTR [ebx+ebx*8-0x2f],bh
  419883:	bt     DWORD PTR [ecx],ebx
  419886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419887:	inc    esi
  419888:	jl     0x419837
  41988a:	sbb    ebx,DWORD PTR [ecx]
  41988c:	lods   eax,DWORD PTR ds:[esi]
  41988d:	jecxz  0x419868
  41988f:	mov    edx,0x63f148c7
  419894:	mov    eax,ds:0x5e4133d
  419899:	push   0xa02a87ee
  41989e:	ins    BYTE PTR es:[edi],dx
  41989f:	jle    0x419832
  4198a1:	pop    ebp
  4198a2:	ret    
  4198a3:	lock fst QWORD PTR [ebp+0x3222061d]
  4198aa:	mov    DWORD PTR [ebx-0x37],edx
  4198ad:	addr16 push edx
  4198af:	dec    ebx
  4198b0:	pushf  
  4198b1:	add    DWORD PTR [edi],edi
  4198b3:	(bad)  
  4198b4:	sbb    al,0x74
  4198b6:	xor    esi,esp
  4198b8:	inc    ecx
  4198b9:	retf   0xe556
  4198bc:	pop    ebp
  4198bd:	sub    al,0x59
  4198bf:	int    0x3f
  4198c1:	lock fist WORD PTR [edi]
  4198c4:	repz dec edi
  4198c6:	fcmovnbe st,st(7)
  4198c8:	sub    esi,edx
  4198ca:	xor    ecx,DWORD PTR [ecx+0x26eaa9c2]
  4198d0:	gs push 0x5aa6042d
  4198d6:	cli    
  4198d7:	repz push ds
  4198d9:	popa   
  4198da:	dec    edi
  4198db:	loope  0x419903
  4198dd:	jmp    0x3027cea9
  4198e2:	mov    ds:0x46663803,eax
  4198e7:	dec    esi
  4198e8:	idiv   ch
  4198ea:	pop    edi
  4198eb:	mov    cs,WORD PTR [edi-0x4e870c88]
  4198f1:	add    eax,0x9fe8a056
  4198f6:	ins    DWORD PTR es:[edi],dx
  4198f7:	in     al,dx
  4198f8:	jno    0x419885
  4198fa:	(bad)  
  4198fb:	outs   dx,DWORD PTR ds:[esi]
  4198fc:	pop    es
  4198fd:	or     DWORD PTR [eax+edx*8-0x22],edi
  419901:	jae    0x419923
  419903:	inc    edx
  419904:	ss jb  0x419897
  419907:	sub    edx,ecx
  419909:	loope  0x419951
  41990b:	shl    BYTE PTR [edi-0xaec229b],0xbd
  419912:	push   ss
  419913:	inc    ebp
  419914:	jmp    0x19cefa7f
  419919:	cwde   
  41991a:	xchg   ebp,eax
  41991b:	mov    esp,0xb2466e92
  419920:	xchg   BYTE PTR [edi+ebp*1+0x2eab648e],bh
  419927:	sbb    ebx,ecx
  419929:	nop
  41992a:	sbb    BYTE PTR [edx+0x2d03f562],dh
  419930:	call   0xaee3137d
  419935:	mov    WORD PTR [ecx-0x1033028c],fs
  41993b:	aas    
  41993c:	cld    
  41993d:	int3   
  41993e:	icebp  
  41993f:	push   ebp
  419940:	mov    bl,0xb4
  419942:	cmp    eax,0x45935b91
  419947:	sub    al,0x1c
  419949:	pushf  
  41994a:	jle    0x419995
  41994c:	mov    ds,WORD PTR [esi-0x49]
  41994f:	or     ebp,edi
  419951:	pop    ebp
  419952:	out    dx,eax
  419953:	enter  0x7bec,0x8b
  419957:	loope  0x4199a9
  419959:	fisubr DWORD PTR [eax-0x4f]
  41995c:	icebp  
  41995d:	int3   
  41995e:	gs jb  0x4198e6
  419961:	icebp  
  419962:	sar    eax,cl
  419964:	loope  0x419916
  419966:	xor    edx,eax
  419968:	lahf   
  419969:	enter  0x5e86,0x46
  41996d:	mov    al,ds:0xfb52737e
  419972:	xor    eax,0x76a38542
  419977:	and    eax,0xd3550e9c
  41997c:	fistp  DWORD PTR [ebx+0x70260abf]
  419982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419983:	xlat   BYTE PTR ds:[ebx]
  419984:	push   cs
  419985:	mov    bl,0xfa
  419987:	cld    
  419988:	mov    cl,dh
  41998a:	call   0x6d46:0xe0fc9324
  419991:	dec    eax
  419992:	ret    
  419993:	mov    ebx,0x28d55308
  419998:	leave  
  419999:	ss sbb dl,ch
  41999c:	push   es
  41999d:	add    al,0x57
  41999f:	mov    ecx,DWORD PTR [ebx+ecx*2]
  4199a2:	fwait
  4199a3:	cmp    BYTE PTR [edi-0x5b6d8a66],0xf6
  4199aa:	mov    esi,0x7fef796a
  4199af:	jl     0x419956
  4199b1:	mov    ebp,0x92d092b1
  4199b6:	pop    ebx
  4199b7:	fidivr DWORD PTR [esi-0x23]
  4199ba:	adc    BYTE PTR [ecx-0x39],al
  4199bd:	mov    ebp,0xee741b3e
  4199c2:	hlt    
  4199c3:	xchg   ecx,eax
  4199c4:	popa   
  4199c5:	jp     0x4199cf
  4199c7:	adc    BYTE PTR [ebx-0x1a],cl
  4199ca:	call   0xf8afec2d
  4199cf:	loope  0x419999
  4199d1:	sbb    ch,ch
  4199d3:	test   BYTE PTR [edi+0xc],cl
  4199d6:	aas    
  4199d7:	mov    bl,0x9d
  4199d9:	mov    cl,0x9d
  4199db:	xchg   BYTE PTR fs:[eax-0x63e35e96],dh
  4199e2:	jmp    0x419a54
  4199e4:	add    ah,ah
  4199e6:	mov    ds:0x7fd7d2f3,eax
  4199eb:	jmp    0x419a1e
  4199ed:	lods   eax,DWORD PTR ds:[esi]
  4199ee:	adc    ecx,DWORD PTR [esi]
  4199f0:	scas   eax,DWORD PTR es:[edi]
  4199f1:	sbb    eax,DWORD PTR [edi]
  4199f3:	scas   eax,DWORD PTR es:[edi]
  4199f4:	inc    esi
  4199f5:	inc    esi
  4199f6:	nop
  4199f7:	xor    BYTE PTR [edx],al
  4199f9:	or     DWORD PTR [esi+0x66],ebx
  4199fc:	cs sbb eax,0xdae48aeb
  419a02:	enter  0xa42b,0x87
  419a06:	scas   eax,DWORD PTR es:[edi]
  419a07:	xchg   ebp,eax
  419a08:	xchg   esi,eax
  419a09:	and    ah,BYTE PTR [esi+0x22b4ab49]
  419a0f:	pushf  
  419a10:	retf   
  419a11:	daa    
  419a12:	std    
  419a13:	and    al,0x2d
  419a15:	loope  0x419a70
  419a17:	inc    eax
  419a18:	loop   0x419a20
  419a1a:	mov    edi,0xa62b6a69
  419a1f:	das    
  419a20:	stos   BYTE PTR es:[edi],al
  419a21:	adc    DWORD PTR ds:0x970658d,0xaf0e6077
  419a2b:	sbb    cl,BYTE PTR [eax-0x66df2c89]
  419a31:	lahf   
  419a32:	mov    ebp,0x1cb4c9bb
  419a37:	adc    al,0xdf
  419a39:	push   ss
  419a3a:	jmp    0x419a2e
  419a3c:	(bad)  
  419a3d:	mov    ecx,0xe162088b
  419a42:	lock js 0x419ac3
  419a45:	popa   
  419a46:	out    dx,eax
  419a47:	xchg   ebx,esp
  419a49:	sub    DWORD PTR [esi],ebp
  419a4b:	mov    eax,0xa568e5ac
  419a50:	inc    ebx
  419a51:	in     eax,0x75
  419a53:	push   ebp
  419a54:	fwait
  419a55:	xchg   edi,eax
  419a56:	outs   dx,DWORD PTR ds:[esi]
  419a57:	mov    bl,0xc5
  419a59:	jns    0x419ac9
  419a5b:	xor    ecx,edi
  419a5d:	inc    ebx
  419a5e:	jecxz  0x419aba
  419a60:	mov    eax,0xfb10c33
  419a65:	sub    BYTE PTR [edi-0x75],dl
  419a68:	xor    al,0x35
  419a6a:	pop    ds
  419a6b:	lahf   
  419a6c:	mov    BYTE PTR [eax],ah
  419a6e:	add    ch,dh
  419a70:	stos   DWORD PTR es:[edi],eax
  419a71:	into   
  419a72:	js     0x419a48
  419a74:	inc    esi
  419a75:	shl    DWORD PTR [edx+edx*8+0x59],0xd0
  419a7a:	(bad)  
  419a7b:	adc    ch,dh
  419a7d:	jo     0x419a6e
  419a7f:	or     esp,DWORD PTR [esi+0x53]
  419a82:	mov    ah,0x2a
  419a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a85:	aaa    
  419a86:	ds je  0x419a30
  419a89:	push   esp
  419a8a:	xor    cl,BYTE PTR [ebx]
  419a8c:	aas    
  419a8d:	xchg   ecx,eax
  419a8e:	pop    ebx
  419a8f:	or     eax,0x4e3ae526
  419a94:	lock push 0x3c
  419a97:	ds jmp 0x419a50
  419a9a:	ins    BYTE PTR es:[edi],dx
  419a9b:	mov    dl,0x78
  419a9d:	inc    ebx
  419a9e:	in     eax,dx
  419a9f:	add    BYTE PTR [ebp-0x3b],cl
  419aa2:	(bad)
  419aa7:	push   0xffffffde
  419aa9:	bound  ecx,QWORD PTR [edx+0x7458f00a]
  419aaf:	mov    bl,0x22
  419ab1:	lods   al,BYTE PTR ds:[esi]
  419ab2:	pop    ds
  419ab3:	aam    0x29
  419ab5:	sbb    BYTE PTR [esi+0x7e],0x47
  419ab9:	xor    eax,0x1fb9bc02
  419abe:	and    BYTE PTR ds:0xc33e872a,0x99
  419ac5:	xor    al,0x4f
  419ac7:	sar    BYTE PTR [ebx],0x26
  419aca:	mov    ds:0xc6259b39,eax
  419acf:	fcom   DWORD PTR [ebx]
  419ad1:	xchg   edi,eax
  419ad2:	mov    dl,0x3e
  419ad4:	and    BYTE PTR [eax-0x432b087a],al
  419ada:	mov    DWORD PTR [ebx+eax*2],eax
  419add:	mov    esi,0xca27ec77
  419ae2:	sbb    bh,BYTE PTR [edx-0x6c]
  419ae5:	ds mov bh,0x2c
  419ae8:	aam    0x0
  419aea:	stos   BYTE PTR es:[edi],al
  419aeb:	sti    
  419aec:	sbb    ebx,esi
  419aee:	ror    DWORD PTR [eax-0x40ded449],1
  419af4:	nop
  419af5:	mov    al,0xc1
  419af7:	(bad)  
  419af8:	mul    BYTE PTR [ecx-0x6f]
  419afb:	(bad)  
  419afc:	loope  0x419b61
  419afe:	inc    eax
  419aff:	leave  
  419b00:	ds pop esp
  419b02:	mov    bl,0x6e
  419b04:	jl     0x419b61
  419b06:	mov    al,0x73
  419b08:	pop    ebx
  419b09:	sbb    BYTE PTR [eax+0x5e],dl
  419b0c:	mov    ecx,0xd9d2f01f
  419b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b12:	or     esp,ebx
  419b14:	dec    eax
  419b15:	pop    edx
  419b16:	adc    cl,cl
  419b18:	mov    ch,0xa3
  419b1a:	mov    ebx,0x5ee635b1
  419b1f:	loope  0x419b40
  419b21:	mov    ch,0xae
  419b23:	fld    TBYTE PTR [esp+ecx*8]
  419b26:	inc    ebx
  419b27:	xchg   esp,eax
  419b28:	cmp    BYTE PTR [ebx],bl
  419b2a:	cmp    eax,0x1f5e2b16
  419b2f:	retf   
  419b30:	add    edx,esi
  419b32:	or     al,0xc6
  419b34:	call   0xf97a:0xf7746d63
  419b3b:	test   BYTE PTR ds:0x4b0a1b88,0xee
  419b42:	push   ss
  419b43:	lea    ebp,ds:0x67a175a1
  419b49:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b4b:	int    0xc
  419b4d:	sti    
  419b4e:	test   eax,0x21aafc30
  419b53:	imul   ecx,ebx,0xffffff9b
  419b56:	popf   
  419b57:	rol    DWORD PTR [ebx],0xe4
  419b5a:	fnstcw WORD PTR [ebx-0x46]
  419b5d:	(bad)  
  419b5e:	in     al,dx
  419b5f:	jmp    0xb9c8:0xb624fdcf
  419b66:	add    bh,ch
  419b68:	xchg   ebp,eax
  419b69:	or     BYTE PTR [edi-0x20829a74],ch
  419b6f:	jp     0x419bcd
  419b71:	add    bl,BYTE PTR [ecx]
  419b73:	fld    QWORD PTR [ecx]
  419b75:	imul   ebx,edi,0xfffffff2
  419b78:	and    ah,BYTE PTR [ebp-0x45a5a42a]
  419b7e:	and    ch,bh
  419b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b81:	dec    ecx
  419b82:	pop    ss
  419b83:	mov    bl,BYTE PTR ds:0xbe292417
  419b89:	mov    dl,0x9c
  419b8b:	fstp   QWORD PTR [ebx+ecx*1+0xd]
  419b8f:	push   0x563dfa82
  419b94:	scas   eax,DWORD PTR es:[edi]
  419b95:	xor    edi,DWORD PTR [edi+0x9]
  419b98:	sbb    bh,BYTE PTR [edi-0x5d]
  419b9b:	enter  0xec32,0x93
  419b9f:	pop    es
  419ba0:	jmp    0xeff0:0xf6f5b03f
  419ba7:	pushf  
  419ba8:	fiadd  DWORD PTR [esi-0x27]
  419bab:	sbb    edi,0x8
  419bae:	daa    
  419baf:	out    dx,al
  419bb0:	mov    bl,0x90
  419bb2:	loopne 0x419b8c
  419bb4:	sbb    BYTE PTR [ebx+0x2bf2432c],al
  419bba:	js     0x419b7b
  419bbc:	sbb    dh,0x1
  419bbf:	add    DWORD PTR [esi+0x68],ebx
  419bc2:	cld    
  419bc3:	dec    ebp
  419bc4:	popa   
  419bc5:	clc    
  419bc6:	fnstsw WORD PTR [eax+0x3e]
  419bc9:	pop    ebx
  419bca:	or     al,0x67
  419bcc:	leave  
  419bcd:	in     al,0xb1
  419bcf:	fstp   QWORD PTR [ebx+0x36abf0bb]
  419bd5:	loopne 0x419b65
  419bd7:	jl     0x419c57
  419bd9:	add    ebp,edx
  419bdb:	lods   eax,DWORD PTR ds:[esi]
  419bdc:	mov    ds:0x6a657fee,eax
  419be1:	push   es
  419be2:	xchg   DWORD PTR [eax+esi*8],edx
  419be5:	dec    ecx
  419be6:	aad    0x7c
  419be8:	cmp    eax,eax
  419bea:	cmp    eax,DWORD PTR [ebp-0x7a92fffd]
  419bf0:	sbb    dh,BYTE PTR [esi-0x6c]
  419bf3:	adc    al,0x59
  419bf5:	dec    edi
  419bf6:	call   0x2e5cfa63
  419bfb:	pop    esp
  419bfc:	dec    ebx
  419bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bfe:	dec    ecx
  419bff:	jmp    0x8eca:0x2afc9b73
  419c06:	mov    DWORD PTR es:[ecx+0x65],0x2cdbbcf4
  419c0e:	pop    ebp
  419c0f:	loopne 0x419bb2
  419c11:	dec    ecx
  419c12:	xchg   ecx,eax
  419c13:	pushf  
  419c14:	dec    ecx
  419c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c16:	adc    DWORD PTR [esi],esp
  419c18:	inc    ebp
  419c19:	pop    es
  419c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c1b:	or     DWORD PTR [edx-0x496e0e60],0xe0717b25
  419c25:	cmp    BYTE PTR [esi+0x157228bc],bh
  419c2b:	jl     0x419c88
  419c2d:	sub    DWORD PTR cs:[ebp-0x2e],0xffffffaf
  419c32:	sub    dh,dl
  419c34:	xor    DWORD PTR [esi+0x7109a84],0xb09fbd44
  419c3e:	xchg   esi,eax
  419c3f:	lock in eax,dx
  419c41:	in     eax,dx
  419c42:	mov    eax,ds:0x65a87033
  419c47:	dec    ebp
  419c48:	sub    BYTE PTR [edi+edi*8+0x2],al
  419c4c:	sbb    cl,BYTE PTR [eax]
  419c4e:	inc    edx
  419c4f:	inc    esi
  419c50:	cmp    ebp,DWORD PTR [eax+0x27958ce4]
  419c56:	ja     0x419bf9
  419c58:	cmp    ecx,edi
  419c5a:	xor    DWORD PTR [esi],0x798f0da9
  419c60:	sahf   
  419c61:	shl    BYTE PTR [eax-0x34a543e0],0xc7
  419c68:	fnstcw WORD PTR [eax]
  419c6a:	daa    
  419c6b:	push   0xa09fb031
  419c70:	imul   ebx,DWORD PTR [ebp-0x6eb86bbc],0xffffffee
  419c77:	fcomp  QWORD PTR ds:0x4acbbdbe
  419c7d:	or     eax,0x95f7f094
  419c82:	(bad)  
  419c83:	adc    esi,esp
  419c85:	sub    eax,ebx
  419c87:	dec    esi
  419c88:	mov    ecx,DWORD PTR [ebx+0x794d8a88]
  419c8e:	std    
  419c8f:	pop    ebx
  419c90:	or     edx,DWORD PTR [ebx-0x336e62c4]
  419c96:	sbb    ecx,ebx
  419c98:	inc    esp
  419c99:	xor    ecx,ebx
  419c9b:	push   esp
  419c9c:	pop    ecx
  419c9d:	xchg   esp,eax
  419c9e:	lahf   
  419c9f:	cmp    eax,0xcc0c20bc
  419ca4:	clc    
  419ca5:	mov    cl,0x35
  419ca7:	and    DWORD PTR [ebx+0x261f7b30],ebx
  419cad:	ds (bad) 
  419caf:	xor    eax,0x4413113e
  419cb4:	push   0xffffffbb
  419cb6:	in     eax,0x75
  419cb8:	or     cl,al
  419cba:	add    ebx,ecx
  419cbc:	sbb    al,0x70
  419cbe:	cmp    BYTE PTR [edx*8-0x65e59377],0x47
  419cc6:	inc    ebx
  419cc7:	jb     0x419c75
  419cc9:	dec    edi
  419cca:	(bad)  
  419ccb:	jge    0x419cbb
  419ccd:	je     0x419caf
  419ccf:	rcl    DWORD PTR [eax+eiz*1+0x34fa49cd],0x27
  419cd7:	fldenv [edx]
  419cd9:	mov    ecx,0x8897c882
  419cde:	push   edi
  419cdf:	mov    dl,0x2d
  419ce1:	inc    edx
  419ce2:	loope  0x419d1a
  419ce4:	inc    BYTE PTR [eax+0x3f]
  419ce7:	std    
  419ce8:	xor    eax,DWORD PTR [eax+0x21]
  419ceb:	test   DWORD PTR [ebp-0x16],ecx
  419cee:	mov    WORD PTR [edx-0x41],?
  419cf1:	xor    eax,ebp
  419cf3:	mov    BYTE PTR [esi+0x46],ch
  419cf6:	iret   
  419cf7:	mov    esi,0x6c95faaf
  419cfc:	lahf   
  419cfd:	pusha  
  419cfe:	mov    dh,0x88
  419d00:	stos   BYTE PTR es:[edi],al
  419d01:	pop    esp
  419d03:	mov    ah,0x98
  419d05:	repnz pause 
  419d08:	mov    al,0x48
  419d0a:	mov    al,ch
  419d0c:	bound  eax,QWORD PTR [edi-0x654968dd]
  419d12:	test   DWORD PTR ds:0xc2acf513,ebx
  419d18:	or     DWORD PTR [edi+0x55800139],ebp
  419d1e:	retf   
  419d1f:	pop    edi
  419d20:	out    0x2c,eax
  419d22:	dec    edx
  419d23:	cdq    
  419d24:	jl     0x419d20
  419d26:	fild   WORD PTR [ebp-0x6db32d61]
  419d2c:	mov    ecx,DWORD PTR fs:[ecx]
  419d2f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  419d31:	push   cs
  419d32:	xchg   ebp,eax
  419d33:	ret    
  419d34:	jl     0x419d74
  419d36:	bound  esp,QWORD PTR [edx+0x13]
  419d39:	in     al,dx
  419d3a:	xor    bh,BYTE PTR [esi+0x6610e85]
  419d40:	mov    cl,0xd1
  419d42:	ficomp WORD PTR [ebx]
  419d44:	iret   
  419d45:	popf   
  419d46:	mov    cl,0xce
  419d48:	or     DWORD PTR [ebx-0x2c20f780],esi
  419d4e:	dec    esp
  419d4f:	push   0xbfc8c53c
  419d54:	leave  
  419d55:	or     BYTE PTR [edx+0x1defd8c2],dl
  419d5b:	loopne 0x419d77
  419d5d:	pop    edi
  419d5e:	xchg   edi,eax
  419d5f:	mov    ecx,0x7826f4d4
  419d64:	aad    0x24
  419d66:	(bad)  
  419d67:	and    BYTE PTR [ecx+eax*8+0x7],dl
  419d6b:	sbb    DWORD PTR [edi],esp
  419d6d:	dec    eax
  419d6e:	push   eax
  419d6f:	div    al
  419d71:	inc    edi
  419d72:	mov    esi,0x4d8bf161
  419d77:	in     al,dx
  419d78:	rcl    BYTE PTR [eax-0x47],cl
  419d7b:	call   DWORD PTR ss:[esi+0x7629504d]
  419d82:	sub    eax,0xc57bbacb
  419d87:	mov    bl,0xbc
  419d89:	outs   dx,DWORD PTR ds:[esi]
  419d8a:	int    0xbf
  419d8c:	jb     0x419de3
  419d8e:	add    esp,eax
  419d90:	jle    0x419d93
  419d92:	pushf  
  419d93:	cmp    ebx,eax
  419d95:	data16 adc BYTE PTR [ebx+ecx*4+0x649f8fb0],ah
  419d9d:	mov    ebp,0x480523df
  419da2:	and    eax,0xbc02433
  419da7:	call   0x3b00:0xa0f79524
  419dae:	dec    ecx
  419daf:	inc    ecx
  419db0:	repnz mov ah,0xcf
  419db3:	pop    edx
  419db4:	and    ecx,esp
  419db6:	dec    edx
  419db7:	retf   0xefc8
  419dba:	gs xchg esi,eax
  419dbc:	xchg   ebx,eax
  419dbd:	cmp    BYTE PTR [edx+0x63],0x1e
  419dc1:	mov    ds:0x87cbf570,eax
  419dc6:	aad    0x60
  419dc8:	mov    ds:0x95f7d373,eax
  419dcd:	cli    
  419dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dcf:	xchg   BYTE PTR [edx],dh
  419dd1:	fnsave [ebp+0xc]
  419dd4:	pop    esi
  419dd5:	adc    BYTE PTR [edx+0x5f52f3b0],bl
  419ddb:	popfw  
  419ddd:	xchg   edi,eax
  419dde:	iret   
  419ddf:	fldenv [esi-0x63f8369c]
  419de5:	repz into 
  419de7:	lock ds aad 0xf8
  419deb:	in     ax,dx
  419ded:	push   cs
  419dee:	aas    
  419def:	fcmovne st,st(6)
  419df1:	pop    esi
  419df2:	jp     0x419dfa
  419df4:	fwait
  419df5:	add    DWORD PTR [eax-0x7cc201b2],ebp
  419dfb:	ret    0xa088
  419dfe:	adc    edx,DWORD PTR [edi-0x75d6c362]
  419e04:	push   cs
  419e05:	sbb    bl,dl
  419e07:	dec    ecx
  419e08:	add    BYTE PTR [edi],0xdd
  419e0b:	test   DWORD PTR [ecx],esi
  419e0d:	mov    ecx,0xb14617d8
  419e12:	push   edi
  419e13:	or     BYTE PTR [edx+0x2216a5b],bl
  419e19:	jmp    0x419da0
  419e1b:	enter  0x916a,0x34
  419e1f:	call   0x494d61c
  419e24:	add    DWORD PTR [ecx],ecx
  419e26:	and    edi,DWORD PTR [ebx]
  419e28:	push   es
  419e29:	dec    ecx
  419e2a:	mov    edi,0x87f8733d
  419e2f:	sbb    DWORD PTR [edx+edx*4],ebp
  419e32:	xor    BYTE PTR ds:0x279c75ba,cl
  419e38:	rcl    BYTE PTR [edx],0xd6
  419e3b:	jmp    0xf3e7:0x765d2b41
  419e42:	adc    ah,ah
  419e44:	cmp    eax,0x7697c901
  419e49:	add    eax,eax
  419e4b:	add    al,0xe7
  419e4d:	cli    
  419e4e:	sti    
  419e4f:	ror    BYTE PTR [ebx],cl
  419e51:	mov    bh,0xe9
  419e53:	std    
  419e54:	push   ebp
  419e55:	jg     0x419dfb
  419e57:	sbb    DWORD PTR [edi+eax*1+0x7acef2ba],ebp
  419e5e:	push   ds
  419e5f:	scas   eax,DWORD PTR es:[edi]
  419e60:	inc    ebp
  419e61:	mov    bh,0x78
  419e63:	pop    es
  419e64:	aam    0x1e
  419e66:	sub    esp,DWORD PTR [edx]
  419e68:	xchg   ebp,eax
  419e69:	lds    ebx,FWORD PTR gs:[edx]
  419e6c:	dec    ebx
  419e6d:	ja     0x419e90
  419e6f:	mov    dl,0x82
  419e71:	std    
  419e72:	popf   
  419e73:	sti    
  419e74:	(bad)  
  419e75:	pop    ebx
  419e76:	xchg   BYTE PTR [ecx-0x33],ch
  419e79:	adc    ah,BYTE PTR [edx-0x6b]
  419e7c:	hlt    
  419e7d:	mov    ah,0x42
  419e7f:	cmp    ch,BYTE PTR [esp+edx*2]
  419e82:	mov    edi,0x464388e9
  419e87:	popf   
  419e88:	xlat   BYTE PTR ds:[ebx]
  419e89:	xsavec [ecx-0x6e5dd08f]
  419e90:	mov    al,0x88
  419e92:	xor    DWORD PTR [ebp-0x5b6b05f4],eax
  419e98:	dec    ebp
  419e99:	mov    WORD PTR gs:[eax+0xa],ds
  419e9d:	push   ss
  419e9e:	aad    0x3f
  419ea0:	in     eax,dx
  419ea1:	cmp    al,0x63
  419ea3:	into   
  419ea4:	mov    al,ds:0xf554c0eb
  419ea9:	push   ss
  419eaa:	pop    edx
  419eab:	test   DWORD PTR [ecx-0x43ba3796],ebx
  419eb1:	scas   eax,DWORD PTR es:[edi]
  419eb2:	mov    eax,0xb9f1fbaf
  419eb7:	ficomp WORD PTR [ebp-0x7a53b349]
  419ebd:	cld    
  419ebe:	repnz push ecx
  419ec0:	fmul   DWORD PTR [esp+edx*2-0x968b4ee]
  419ec7:	icebp  
  419ec8:	(bad)  
  419ec9:	les    ebx,FWORD PTR [ecx-0x2c92119]
  419ecf:	mov    dh,0x94
  419ed1:	jl     0x419ec1
  419ed3:	dec    esp
  419ed4:	push   ebp
  419ed5:	dec    eax
  419ed6:	sub    al,0x3b
  419ed8:	dec    esp
  419ed9:	xor    dh,BYTE PTR [eax+0xf]
  419edc:	dec    ecx
  419edd:	adc    al,0x98
  419edf:	inc    ebp
  419ee0:	repz call 0x31f91866
  419ee6:	test   eax,0x6922ee8b
  419eeb:	inc    BYTE PTR [eax]
  419eed:	in     eax,0xcd
  419eef:	and    ecx,DWORD PTR [eax]
  419ef1:	fwait
  419ef2:	pop    esi
  419ef3:	inc    esi
  419ef4:	jge    0x419f20
  419ef6:	not    DWORD PTR [esi-0x67]
  419ef9:	pop    edx
  419efa:	outs   dx,DWORD PTR ds:[esi]
  419efb:	push   ecx
  419efc:	inc    ebx
  419efd:	and    ebx,DWORD PTR [eax+0x6a352488]
  419f03:	mov    al,0xde
  419f05:	lock je 0x419e91
  419f08:	(bad)  
  419f0a:	jp     0x419e9f
  419f0c:	imul   edx,DWORD PTR [eax+ebx*1],0xfbb3972
  419f13:	xchg   edi,eax
  419f14:	in     al,0x52
  419f16:	out    dx,al
  419f17:	and    al,BYTE PTR [eax+0x1a03b059]
  419f1d:	inc    ebp
  419f1e:	xchg   ebp,eax
  419f1f:	sar    DWORD PTR [edi+0x7b],cl
  419f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f23:	adc    al,0x34
  419f25:	mov    edi,0x48c180ec
  419f2a:	lods   eax,DWORD PTR ds:[esi]
  419f2b:	sahf   
  419f2c:	loop   0x419f0c
  419f2e:	mul    DWORD PTR [edi+eax*2+0x4c54554b]
  419f35:	ret    0x72da
  419f38:	lds    eax,FWORD PTR [edi+ebp*1+0xbc2767c]
  419f3f:	test   esp,eax
  419f41:	sbb    ch,BYTE PTR [edx+0x2e]
  419f44:	adc    ah,0x25
  419f47:	and    eax,0xd7ff519e
  419f4c:	out    dx,eax
  419f4d:	lods   eax,DWORD PTR ds:[esi]
  419f4e:	mov    al,ds:0x249cc702
  419f53:	sub    cl,BYTE PTR [edi]
  419f55:	pushf  
  419f56:	and    al,0x97
  419f58:	mov    ecx,0x7eefaa47
  419f5d:	add    DWORD PTR [edi+0x7e650616],edx
  419f63:	lea    ebp,[esi]
  419f65:	cmp    eax,0x41ab6d5f
  419f6a:	inc    esp
  419f6b:	fistp  DWORD PTR [ecx-0x49]
  419f6e:	imul   edx,DWORD PTR [edi-0x6d],0xf0f64f51
  419f75:	adc    eax,edx
  419f77:	dec    edi
  419f78:	push   eax
  419f79:	mov    ecx,0x1a4f176f
  419f7e:	mov    ds:0x9b4a5ac1,al
  419f83:	xor    BYTE PTR [ebx+0x7e],dh
  419f86:	add    ah,BYTE PTR [edx+0x57c6e2fe]
  419f8c:	xor    eax,0xbf8cedcc
  419f91:	test   BYTE PTR [edx+ecx*2-0x526f95b5],dh
  419f98:	pop    ebx
  419f99:	out    dx,eax
  419f9a:	(bad)  
  419f9b:	jne    0x419faa
  419f9d:	lea    esp,[ecx]
  419f9f:	call   0x284c:0x2ee1432c
  419fa6:	aas    
  419fa7:	inc    edx
  419fa8:	mov    edx,0xdb07ef36
  419fad:	mov    eax,ds:0xd4c62733
  419fb2:	pop    edx
  419fb3:	or     BYTE PTR [ecx-0x64899ebb],bh
  419fb9:	xlat   BYTE PTR ds:[ebx]
  419fba:	push   ds
  419fbb:	sbb    DWORD PTR [ecx],ecx
  419fbd:	mov    ah,0x68
  419fbf:	jns    0x419f68
  419fc1:	or     ah,BYTE PTR [edx+edi*8-0x1b]
  419fc5:	data16 stos BYTE PTR es:[edi],al
  419fc7:	sti    
  419fc8:	aam    0xfc
  419fca:	rcr    DWORD PTR [ebx+0x16db4703],cl
  419fd0:	sahf   
  419fd1:	scas   eax,DWORD PTR es:[edi]
  419fd2:	scas   eax,DWORD PTR es:[edi]
  419fd3:	adc    ebx,DWORD PTR [eax]
  419fd5:	mov    ds:0x672572fd,al
  419fda:	cmp    ecx,edi
  419fdc:	mov    ah,0x21
  419fde:	(bad)  
  419fdf:	call   0x4c330d33
  419fe4:	pop    ecx
  419fe5:	mov    BYTE PTR [ebx],dl
  419fe7:	in     al,dx
  419fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fe9:	rol    edx,cl
  419feb:	pop    eax
  419fec:	mul    BYTE PTR [edi]
  419fee:	in     al,dx
  419fef:	rol    BYTE PTR [edi+0x69],1
  419ff2:	popa   
  419ff3:	jns    0x419fb9
  419ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ff6:	mov    cl,0x29
  419ff8:	pop    ebp
  419ff9:	mov    ds:0xf0843e57,eax
  419ffe:	repz (bad) 
  41a000:	out    0x7,eax
  41a002:	xor    eax,0x74b8489
  41a007:	sub    BYTE PTR [ecx+0x38],ah
  41a00a:	imul   ecx,DWORD PTR [esi-0x8],0x21
  41a00e:	or     BYTE PTR cs:[esi],al
  41a011:	dec    esi
  41a012:	cmp    edx,DWORD PTR [ecx]
  41a014:	shl    DWORD PTR [ebx],1
  41a016:	inc    esp
  41a017:	push   esi
  41a018:	retf   0xf4cd
  41a01b:	or     al,0x82
  41a01d:	jns    0x419fb1
  41a01f:	fldcw  WORD PTR [edx-0x4c954ea2]
  41a025:	xlat   BYTE PTR ds:[ebx]
  41a026:	scas   eax,DWORD PTR es:[edi]
  41a027:	data16 mov ds:0x239f2f8b,al
  41a02d:	sbb    ecx,DWORD PTR [ebx+eax*8]
  41a030:	iret   
  41a031:	xchg   edx,eax
  41a032:	sub    ecx,DWORD PTR [esi-0x43cd2347]
  41a038:	add    cl,BYTE PTR [eax+0x27]
  41a03b:	bound  edi,QWORD PTR [edi+0x69]
  41a03e:	xchg   edi,eax
  41a03f:	xchg   esp,eax
  41a040:	pop    ebx
  41a041:	daa    
  41a042:	fadd   st,st(1)
  41a044:	push   edi
  41a045:	push   ebp
  41a046:	out    0x3f,al
  41a048:	ret    0x7a94
  41a04b:	rcr    DWORD PTR ds:0xfe42e81,cl
  41a051:	cmc    
  41a052:	lahf   
  41a053:	lock push edi
  41a055:	mov    esp,edi
  41a057:	in     eax,dx
  41a058:	sar    BYTE PTR [ecx],1
  41a05a:	aam    0x5c
  41a05c:	push   ebp
  41a05d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a05e:	scas   al,BYTE PTR es:[edi]
  41a05f:	add    DWORD PTR [ebx],edi
  41a061:	(bad)  
  41a062:	pusha  
  41a063:	ror    bh,cl
  41a065:	inc    edi
  41a066:	sahf   
  41a067:	adc    ah,BYTE PTR [ebp+edx*4+0x51]
  41a06b:	dec    esp
  41a06c:	push   esp
  41a06d:	pusha  
  41a06e:	mov    edi,0xa80ba867
  41a073:	das    
  41a074:	es push ds
  41a076:	cld    
  41a077:	sub    al,BYTE PTR [edx]
  41a079:	jbe    0x41a0ed
  41a07b:	jb     0x41a0dd
  41a07d:	test   al,0xbb
  41a07f:	addr16 mov al,0xa2
  41a082:	adc    BYTE PTR [ecx+0x70],bh
  41a085:	out    dx,al
  41a086:	ins    DWORD PTR es:[edi],dx
  41a087:	ins    DWORD PTR es:[edi],dx
  41a088:	inc    esp
  41a089:	imul   ebp,edi,0x9c48acf1
  41a08f:	aad    0x9f
  41a091:	pop    edx
  41a092:	push   eax
  41a093:	pop    edx
  41a094:	pop    ecx
  41a095:	mov    WORD PTR fs:[edi-0x6d3b7aec],gs
  41a09c:	shl    BYTE PTR [ebx-0x239c0b22],1
  41a0a2:	nop
  41a0a3:	lahf   
  41a0a4:	std    
  41a0a5:	fsubr  DWORD PTR [edi-0x538f972d]
  41a0ab:	jmp    0xd79bd26
  41a0b0:	mov    esi,0xe3bd3b38
  41a0b5:	cmp    al,0x28
  41a0b7:	sub    ch,BYTE PTR [edi+ebp*8]
  41a0ba:	jp     0x41a111
  41a0bc:	push   cs
  41a0bd:	in     eax,dx
  41a0be:	cmp    dh,BYTE PTR [edi+0x13]
  41a0c1:	xor    eax,esp
  41a0c3:	xchg   DWORD PTR [ebx+0x1063d8a1],ecx
  41a0c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ca:	ins    DWORD PTR es:[edi],dx
  41a0cb:	mul    DWORD PTR [eax-0x432377b0]
  41a0d1:	pop    ebx
  41a0d2:	aaa    
  41a0d3:	mov    DWORD PTR [edx-0x1015c327],ebx
  41a0d9:	mov    esi,0xc3134b4a
  41a0de:	fcom   QWORD PTR [esp+eiz*8]
  41a0e1:	xchg   esi,eax
  41a0e2:	sbb    BYTE PTR [edi+0x49],al
  41a0e5:	inc    edx
  41a0e6:	mov    bh,0x44
  41a0e8:	xor    eax,0xb1cc2c7c
  41a0ed:	lods   al,BYTE PTR ds:[esi]
  41a0ee:	cwde   
  41a0ef:	xchg   esp,eax
  41a0f0:	dec    ebp
  41a0f1:	cdq    
  41a0f2:	rcl    eax,1
  41a0f4:	(bad)  
  41a0f5:	jecxz  0x41a0ec
  41a0f7:	popf   
  41a0f8:	adc    DWORD PTR ds:0x32ddba03,esp
  41a0fe:	and    eax,0xe061fd95
  41a103:	mov    ?,esp
  41a105:	cmp    dl,BYTE PTR [edx+0x2e]
  41a108:	popf   
  41a109:	jae    0x41a0d9
  41a10b:	mov    dh,0x4b
  41a10d:	sub    al,0xc
  41a10f:	sub    BYTE PTR [edi+0x207e05b7],ah
  41a115:	in     al,0xb3
  41a117:	adc    BYTE PTR [ebx],ch
  41a119:	repz in eax,dx
  41a11b:	add    eax,DWORD PTR [eax]
  41a11d:	and    DWORD PTR ds:0x31f35d16,0xb3d20510
  41a127:	dec    esp
  41a128:	ja     0x41a0cf
  41a12a:	and    bh,BYTE PTR [edi+0x1290235]
  41a130:	data16 adc bh,ah
  41a133:	pop    esp
  41a134:	mov    WORD PTR [edi+0x66b4b51a],gs
  41a13a:	fs out 0xec,eax
  41a13d:	mov    ch,0xe7
  41a13f:	mov    ds:0x2ac9f4e4,eax
  41a144:	push   ds
  41a145:	jg     0x41a127
  41a147:	xlat   BYTE PTR ds:[ebx]
  41a148:	mov    esi,0x159b2239
  41a14d:	jle    0x41a1a4
  41a14f:	imul   esi,edx,0x94b0a928
  41a155:	out    0xe3,eax
  41a157:	and    ah,BYTE PTR [eax-0x6c63e9f8]
  41a15d:	out    0x9c,eax
  41a15f:	xor    BYTE PTR [ebp-0x3eee2679],0x23
  41a166:	sub    al,0x36
  41a168:	repz out dx,eax
  41a16a:	and    eax,0xbc2c9e90
  41a16f:	and    ebx,DWORD PTR [esi]
  41a171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a172:	les    ebp,FWORD PTR [eax+0x446fb6f9]
  41a178:	cmp    BYTE PTR [edi-0x4a],dh
  41a17b:	inc    esp
  41a17c:	cmp    BYTE PTR [edx],cl
  41a17e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a180:	push   ebx
  41a181:	mov    al,ds:0xd30285dd
  41a186:	ret    
  41a187:	cmp    ecx,DWORD PTR [ecx-0x59]
  41a18a:	and    DWORD PTR [ecx+0x2a72009c],eax
  41a190:	stos   BYTE PTR es:[edi],al
  41a191:	mov    ds:0x74a365ae,eax
  41a196:	mov    eax,ds:0x24d7e6f5
  41a19b:	pusha  
  41a19c:	or     al,0xdb
  41a19e:	or     BYTE PTR [ebx],dl
  41a1a0:	inc    esp
  41a1a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1a2:	jo     0x41a1ab
  41a1a4:	aaa    
  41a1a5:	(bad)  
  41a1a6:	out    dx,al
  41a1a7:	loop   0x41a1a2
  41a1a9:	fst    st(2)
  41a1ab:	cmp    BYTE PTR [esi+0x1b707bb1],dl
  41a1b1:	outs   dx,BYTE PTR ds:[esi]
  41a1b2:	das    
  41a1b3:	sahf   
  41a1b4:	cwde   
  41a1b5:	fs push 0xfffffff1
  41a1b8:	mov    edi,0x5cee9cc4
  41a1bd:	pusha  
  41a1be:	ja     0x41a173
  41a1c0:	sub    dl,ch
  41a1c2:	sub    ecx,DWORD PTR [esi+0x47cfa57]
  41a1c8:	stos   DWORD PTR es:[edi],eax
  41a1c9:	mov    WORD PTR [eax+esi*8],?
  41a1cc:	push   edx
  41a1cd:	out    dx,eax
  41a1ce:	lds    eax,FWORD PTR [ebx-0x663acee1]
  41a1d4:	push   esi
  41a1d5:	and    DWORD PTR [edx+edx*2-0x1f5b7870],ecx
  41a1dc:	aam    0x0
  41a1de:	mov    ds:0xe33297f8,eax
  41a1e3:	dec    ecx
  41a1e4:	mov    ch,0xf8
  41a1e6:	gs inc ecx
  41a1e8:	arpl   WORD PTR [eax],dx
  41a1ea:	adc    dl,BYTE PTR [eax-0x4e]
  41a1ed:	cwde   
  41a1ee:	sbb    al,0x4d
  41a1f0:	daa    
  41a1f1:	adc    esi,DWORD PTR [edi+ebx*4]
  41a1f4:	inc    ebx
  41a1f5:	pop    ds
  41a1f6:	cmc    
  41a1f7:	cli    
  41a1f8:	jmp    0x41a241
  41a1fa:	mul    DWORD PTR [ebx]
  41a1fc:	je     0x41a1bb
  41a1fe:	mov    al,0x8f
  41a200:	xchg   BYTE PTR [edi-0x70],ah
  41a203:	fstp   st(3)
  41a205:	add    DWORD PTR [edx+0x2d],eax
  41a208:	sub    bh,BYTE PTR [edi]
  41a20a:	fbld   TBYTE PTR [edi]
  41a20c:	gs out 0xa6,eax
  41a20f:	ret    0x553f
  41a212:	cdq    
  41a213:	test   al,0x5b
  41a215:	jecxz  0x41a295
  41a217:	mov    dh,0xef
  41a219:	adc    edi,ecx
  41a21b:	in     al,0xd5
  41a21d:	add    al,0xcf
  41a21f:	imul   edi,DWORD PTR [ecx+0x32],0xfffffff3
  41a223:	call   0xf6c0:0x6b8f2814
  41a22a:	scas   al,BYTE PTR es:[edi]
  41a22b:	mov    ecx,0xf45263b7
  41a230:	lods   eax,DWORD PTR ds:[esi]
  41a231:	jmp    0xe335248c
  41a236:	fcmovnu st,st(0)
  41a238:	pop    es
  41a239:	in     al,dx
  41a23a:	test   esp,ebp
  41a23c:	xchg   esi,eax
  41a23d:	jae    0x41a2bc
  41a23f:	sti    
  41a240:	mov    ch,BYTE PTR [ebp-0x6f5caf98]
  41a246:	sub    DWORD PTR [ecx-0xfb07bc4],0x36ca1cd4
  41a250:	int    0x64
  41a252:	loop   0x41a214
  41a254:	and    BYTE PTR [ebp-0x61],bh
  41a257:	ja     0x41a2c0
  41a259:	js     0x41a23a
  41a25b:	cmc    
  41a25c:	mov    bl,0xbb
  41a25e:	and    edx,0x4b
  41a261:	cmp    BYTE PTR [esi],0xc0
  41a264:	loope  0x41a23a
  41a266:	aas    
  41a267:	sub    DWORD PTR [eax+0xf889ee],eax
  41a26d:	stos   DWORD PTR es:[edi],eax
  41a26e:	call   0xf8ee:0x9167f199
  41a275:	add    BYTE PTR [ecx+0x5b],bh
  41a278:	or     DWORD PTR [eax-0x52bfbec0],0x9063312d
  41a282:	push   edx
  41a283:	mov    WORD PTR [ebx+esi*4-0x693b1527],?
  41a28a:	ror    DWORD PTR [edx+0x1324fe14],0x5d
  41a291:	xor    ch,ah
  41a293:	lds    ebp,FWORD PTR [edi-0x6ba448e0]
  41a299:	and    eax,0x86198959
  41a29e:	lods   eax,DWORD PTR ds:[esi]
  41a29f:	in     al,dx
  41a2a0:	ins    DWORD PTR es:[edi],dx
  41a2a1:	fsub   st(5),st
  41a2a3:	ss enter 0xbc84,0x49
  41a2a8:	(bad)
  41a2ac:	aam    0x32
  41a2ae:	jp     0x41a27d
  41a2b0:	into   
  41a2b1:	retf   
  41a2b2:	xchg   BYTE PTR [edi-0x8],bl
  41a2b5:	dec    ecx
  41a2b6:	adc    esi,DWORD PTR [eax]
  41a2b8:	xor    ebp,edx
  41a2ba:	or     esi,DWORD PTR [ecx+eax*8-0x120e0aff]
  41a2c1:	daa    
  41a2c2:	mov    dl,0xb3
  41a2c4:	xor    cl,BYTE PTR [ebx+0xc5b0515]
  41a2ca:	int    0xef
  41a2cc:	int3   
  41a2cd:	jo     0x41a2f1
  41a2cf:	and    BYTE PTR [edi-0x75],ah
  41a2d2:	mov    dh,0x2b
  41a2d4:	xchg   esp,eax
  41a2d5:	fstp   QWORD PTR [eax]
  41a2d7:	and    cl,ah
  41a2d9:	(bad)  
  41a2da:	imul   BYTE PTR [ecx+0x7a]
  41a2dd:	call   0x965dc0c7
  41a2e2:	mov    ds:0x2a028a2b,eax
  41a2e7:	daa    
  41a2e8:	add    BYTE PTR [eax-0x1c],ch
  41a2eb:	iret   
  41a2ec:	xchg   edx,eax
  41a2ed:	dec    edi
  41a2ee:	call   0xc705aaa1
  41a2f3:	mov    gs,ecx
  41a2f5:	jns    0x41a2eb
  41a2f7:	mov    al,ds:0xb60aeb0c
  41a2fc:	retf   
  41a2fd:	cld    
  41a2fe:	ins    BYTE PTR es:[edi],dx
  41a2ff:	mov    ds:0xb0c888c3,al
  41a304:	cmp    eax,0x97d37836
  41a309:	push   ds
  41a30a:	pop    esp
  41a30b:	inc    ecx
  41a30c:	sub    DWORD PTR [esi-0x67c42291],eax
  41a312:	jmp    0xbc75c4bb
  41a317:	div    DWORD PTR [ecx-0x7a]
  41a31a:	retf   
  41a31b:	test   DWORD PTR [eax],0x3272d539
  41a321:	adc    al,0xa6
  41a323:	and    ebp,0x62
  41a326:	ret    
  41a327:	mov    ebx,0x5c1484f4
  41a32c:	outs   dx,DWORD PTR ds:[esi]
  41a32d:	jb     0x41a2e6
  41a32f:	(bad)  
  41a330:	xchg   ebx,eax
  41a331:	int3   
  41a332:	mov    bl,0x9
  41a334:	mov    ecx,0x65bf9bf9
  41a339:	xor    BYTE PTR [edx-0x773882b2],ah
  41a33f:	scas   al,BYTE PTR es:[edi]
  41a340:	(bad)
  41a343:	mov    edi,0xd78cfdbf
  41a348:	xchg   ecx,eax
  41a349:	add    BYTE PTR [ebx-0x6f200e13],cl
  41a34f:	dec    esi
  41a350:	enter  0xf330,0x69
  41a354:	add    DWORD PTR [esi],ebp
  41a356:	mov    esp,0x88725b29
  41a35b:	popf   
  41a35c:	test   DWORD PTR [edi],ecx
  41a35e:	mov    cl,0x86
  41a360:	or     BYTE PTR [ebx],ch
  41a362:	sub    al,0xf6
  41a364:	pop    ss
  41a365:	mov    edx,0x3697325f
  41a36a:	icebp  
  41a36b:	or     DWORD PTR [esi+0x7d],ebp
  41a36e:	dec    edx
  41a36f:	mov    edi,0xffb494da
  41a374:	and    eax,0x55bc377e
  41a379:	jne    0x41a3ad
  41a37b:	or     dh,BYTE PTR [esi-0x18cba34b]
  41a381:	les    edi,FWORD PTR [ecx-0x70c774d5]
  41a387:	jbe    0x41a322
  41a389:	dec    eax
  41a38a:	push   ecx
  41a38b:	cld    
  41a38c:	int    0x2
  41a38e:	repz mov ebp,0xb1fb6ee5
  41a394:	jmp    0x7b97:0x3152fe51
  41a39b:	or     al,0x86
  41a39d:	jne    0x41a349
  41a39f:	retf   
  41a3a0:	mov    ah,0x7b
  41a3a2:	inc    ecx
  41a3a3:	cmp    al,0x8
  41a3a5:	mov    edi,0x3e480af9
  41a3aa:	pop    ebx
  41a3ab:	or     edi,esp
  41a3ad:	adc    eax,0x1048508b
  41a3b2:	aam    0x72
  41a3b4:	cmp    al,0x13
  41a3b6:	(bad)  
  41a3b7:	clc    
  41a3b8:	in     al,0xb0
  41a3ba:	mov    bh,0xc4
  41a3bc:	out    0xd6,al
  41a3be:	mov    edx,0x3847ebab
  41a3c3:	pop    ebx
  41a3c4:	fnstsw WORD PTR [esp+eiz*4+0x1f]
  41a3c8:	(bad)  
  41a3ca:	adc    edi,DWORD PTR [edx+0x74]
  41a3cd:	pop    edi
  41a3ce:	fsub   QWORD PTR [edx]
  41a3d0:	stc    
  41a3d1:	js     0x41a40b
  41a3d3:	and    BYTE PTR [edx-0x67],bl
  41a3d6:	call   0x6a368d36
  41a3db:	dec    ecx
  41a3dc:	bound  ecx,QWORD PTR [eax-0x8cbb3db]
  41a3e2:	call   0xb81a7aad
  41a3e7:	fidivr WORD PTR [ecx]
  41a3e9:	test   ebx,0xd626ec7d
  41a3ef:	mov    dh,0xcf
  41a3f1:	jb     0x41a3d1
  41a3f3:	shl    cl,0xd5
  41a3f6:	jl     0x41a3b9
  41a3f8:	(bad)  
  41a3f9:	rcl    dl,1
  41a3fb:	jecxz  0x41a434
  41a3fd:	fdivr  DWORD PTR [ebp+0x2d]
  41a400:	enter  0x30a4,0xf8
  41a404:	or     esp,edx
  41a406:	mov    esp,0x24d38483
  41a40b:	add    DWORD PTR [edx],0x3c979194
  41a411:	mov    eax,0x272bf17f
  41a416:	repnz push ebx
  41a418:	lods   eax,DWORD PTR ds:[esi]
  41a419:	nop
  41a41a:	push   es
  41a41b:	inc    eax
  41a41c:	ja     0x41a3ed
  41a41e:	mov    edi,0x91a5bd2c
  41a423:	mov    eax,ds:0x8fe2a266
  41a428:	jmp    0x9725a688
  41a42d:	and    eax,0x7cc5b909
  41a432:	jl     0x41a473
  41a434:	cwde   
  41a435:	push   ebp
  41a436:	ret    0xd049
  41a439:	(bad)  
  41a43a:	fld    DWORD PTR [edi+esi*2-0x68332f9f]
  41a441:	fstp   TBYTE PTR [esi-0x32a1e064]
  41a447:	xor    eax,0x1eb7682b
  41a44c:	jbe    0x41a48b
  41a44e:	rcr    BYTE PTR [ebx+ebx*4+0x24473752],0xe9
  41a456:	jg     0x41a4c3
  41a458:	mov    ebx,0x3dd67002
  41a45d:	pop    ecx
  41a45f:	or     al,0xc1
  41a461:	paddusb mm3,mm0
  41a464:	data16 and bh,BYTE PTR [ebx+0x79]
  41a468:	repz mov ds:0x19a011b9,eax
  41a46e:	jae    0x41a4da
  41a470:	adc    al,0xdd
  41a472:	(bad)  
  41a473:	xchg   edi,eax
  41a474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a475:	test   al,0xcb
  41a477:	pop    edx
  41a478:	shr    BYTE PTR [eax+0x423528ba],cl
  41a47e:	in     eax,dx
  41a47f:	pop    edi
  41a480:	jle    0x41a424
  41a482:	mov    WORD PTR [eax-0x588e3101],?
  41a488:	bound  ebp,QWORD PTR [esi+0x7e]
  41a48b:	fwait
  41a48c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a48d:	in     eax,dx
  41a48e:	xor    BYTE PTR cs:[edi+0x4d8167d7],al
  41a495:	faddp  st(3),st
  41a497:	mov    WORD PTR [edx],cs
  41a499:	test   DWORD PTR [esi],eax
  41a49b:	nop
  41a49c:	dec    esp
  41a49d:	enter  0xc06b,0xc3
  41a4a1:	xchg   dl,al
  41a4a3:	sbb    eax,0x485371ac
  41a4a8:	xchg   esi,eax
  41a4a9:	pushf  
  41a4aa:	ret    0xba6
  41a4ad:	dec    edi
  41a4ae:	aam    0x3a
  41a4b0:	cmp    cl,BYTE PTR [eax+0x6152b410]
  41a4b6:	daa    
  41a4b7:	ret    
  41a4b8:	in     eax,dx
  41a4b9:	repnz out dx,eax
  41a4bb:	addr16 mov bl,0x92
  41a4be:	rcr    BYTE PTR [edx-0x54],cl
  41a4c1:	jl     0x41a4b9
  41a4c3:	sub    DWORD PTR [esp+ecx*1+0x7537260b],ebx
  41a4ca:	dec    esi
  41a4cb:	fisub  DWORD PTR [esi+0x83fa753]
  41a4d1:	cmp    DWORD PTR [ebp+0x49d3acf4],ecx
  41a4d7:	pop    es
  41a4d8:	repz cmp al,0x4
  41a4db:	jns    0x41a532
  41a4dd:	mov    ds:0x68fe6cf0,eax
  41a4e2:	stos   DWORD PTR es:[edi],eax
  41a4e3:	jae    0x41a50c
  41a4e5:	cmc    
  41a4e6:	outs   dx,DWORD PTR ds:[esi]
  41a4e7:	je     0x41a556
  41a4e9:	adc    eax,DWORD PTR [eax]
  41a4eb:	popf   
  41a4ec:	cmc    
  41a4ed:	repnz pop esi
  41a4ef:	inc    ebp
  41a4f0:	out    dx,al
  41a4f1:	jo     0x41a559
  41a4f3:	lock cmp eax,0xc73f3cce
  41a4f9:	dec    edx
  41a4fa:	gs sub al,0x6a
  41a4fd:	jmp    0xc4fb:0x9d6aca8e
  41a504:	sahf   
  41a505:	(bad)  
  41a506:	out    dx,al
  41a507:	or     cl,0x12
  41a50a:	mov    ch,0xe6
  41a50c:	push   ds
  41a50d:	push   esp
  41a50e:	push   ebx
  41a50f:	dec    DWORD PTR [edx]
  41a511:	popf   
  41a512:	or     al,0x32
  41a514:	or     DWORD PTR [ecx],ebx
  41a516:	out    0xb9,al
  41a518:	mov    edi,DWORD PTR [edx-0x1665d67a]
  41a51e:	push   edi
  41a51f:	popa   
  41a520:	xchg   BYTE PTR [ecx+edi*1],cl
  41a523:	sbb    eax,0x2f2f6a12
  41a528:	je     0x41a4b8
  41a52a:	sub    DWORD PTR [edx+0x69],esi
  41a52d:	or     BYTE PTR [edi+0x51ea7b06],ah
  41a533:	sbb    al,0x5c
  41a535:	cdq    
  41a536:	lds    eax,FWORD PTR [eax+0x286925e4]
  41a53c:	stos   DWORD PTR es:[edi],eax
  41a53d:	imul   DWORD PTR ds:0x187609ec
  41a543:	cs xchg ebp,eax
  41a545:	cmc    
  41a546:	mov    al,0x86
  41a548:	add    al,0x38
  41a54a:	shr    edi,cl
  41a54c:	lods   eax,DWORD PTR ds:[esi]
  41a54d:	lea    esp,ds:0x6967144e
  41a553:	inc    esi
  41a554:	dec    ecx
  41a555:	hlt    
  41a556:	fimul  WORD PTR [esp-0x2c]
  41a55a:	jecxz  0x41a5c6
  41a55c:	xor    eax,0xc8fe65f0
  41a561:	mov    BYTE PTR [edi],dl
  41a563:	mov    esi,0x94593fc7
  41a568:	sbb    al,bl
  41a56a:	pop    ebp
  41a56b:	inc    eax
  41a56c:	fwait
  41a56d:	xchg   ch,dl
  41a56f:	adc    bl,bl
  41a571:	push   ecx
  41a572:	data16 std 
  41a574:	jb     0x41a51e
  41a576:	jae    0x41a597
  41a578:	in     eax,dx
  41a579:	sbb    DWORD PTR [ecx],ecx
  41a57b:	jle    0x41a5bf
  41a57d:	les    ebp,FWORD PTR [ecx-0xf]
  41a580:	aas    
  41a581:	out    dx,eax
  41a582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a583:	jecxz  0x41a560
  41a585:	dec    esp
  41a586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a587:	push   esi
  41a588:	fwait
  41a589:	es sbb eax,0xb01e7c98
  41a58f:	rcr    DWORD PTR [ebx+0x4937b963],0x46
  41a596:	inc    edx
  41a597:	stos   DWORD PTR es:[edi],eax
  41a598:	loop   0x41a580
  41a59a:	je     0x41a60e
  41a59c:	imul   BYTE PTR [edi]
  41a59e:	inc    ebx
  41a59f:	jg     0x41a559
  41a5a1:	daa    
  41a5a2:	popa   
  41a5a3:	add    DWORD PTR [esp+eiz*8+0x1dbfefee],eax
  41a5aa:	sbb    BYTE PTR [ecx+0x7e2565b5],ah
  41a5b0:	shr    BYTE PTR [eax+0x7bcd584a],cl
  41a5b6:	(bad)  
  41a5b7:	push   es
  41a5b8:	bound  edx,QWORD PTR fs:[esi-0x80]
  41a5bc:	call   0xc9d4:0x2a2f25de
  41a5c3:	mov    es,WORD PTR [edx-0x6085c406]
  41a5c9:	jmp    0x6ae8:0xe839427a
  41a5d0:	aas    
  41a5d1:	(bad)  
  41a5d3:	dec    edi
  41a5d4:	sub    eax,0x59cd8e24
  41a5d9:	fldenv [edi-0x5af44bee]
  41a5df:	fisttp WORD PTR [ebx+0x38]
  41a5e2:	test   ch,ah
  41a5e4:	xor    al,BYTE PTR ds:0x8aa4b24f
  41a5ea:	xlat   BYTE PTR ds:[bx]
  41a5ec:	sbb    dh,BYTE PTR [edx+0x2cb0c7bd]
  41a5f2:	aaa    
  41a5f3:	add    DWORD PTR [edx],esi
  41a5f5:	jo     0x41a61a
  41a5f7:	jecxz  0x41a58e
  41a5f9:	scas   al,BYTE PTR es:[edi]
  41a5fa:	hlt    
  41a5fb:	add    BYTE PTR [edi],dh
  41a5fd:	mov    ?,WORD PTR [edi-0x51cd1df5]
  41a603:	sub    eax,0xb2cc0519
  41a608:	fstp   DWORD PTR [edx]
  41a60a:	stc    
  41a60b:	mov    eax,ds:0xbc1c47f
  41a610:	xchg   esp,eax
  41a611:	in     al,0xeb
  41a613:	pop    ebx
  41a614:	jg     0x41a5c1
  41a616:	(bad)  
  41a617:	hlt    
  41a618:	iret   
  41a619:	xchg   ecx,eax
  41a61a:	jnp    0x41a695
  41a61c:	cmp    BYTE PTR [eax],ch
  41a61e:	mov    eax,DWORD PTR [edi]
  41a620:	sbb    al,0xbb
  41a622:	loopne 0x41a668
  41a624:	xchg   ebp,eax
  41a625:	cmc    
  41a626:	inc    eax
  41a627:	or     edi,DWORD PTR [esi-0x3e3ab16d]
  41a62d:	push   eax
  41a62e:	and    DWORD PTR [edi],edx
  41a630:	mov    cl,0x42
  41a632:	repz aam 0x9a
  41a635:	jns    0x41a63b
  41a637:	aad    0xc8
  41a639:	imul   ecx,edx,0x3fad0a10
  41a63f:	sub    DWORD PTR [esi+0x76087d5b],ebp
  41a645:	je     0x41a6a4
  41a647:	imul   eax,DWORD PTR [ebp-0x2e],0x4fb1ce2a
  41a64e:	push   eax
  41a64f:	pop    ecx
  41a650:	mov    eax,ds:0xf4e4cf78
  41a655:	lock xor eax,0xe1132f06
  41a65b:	retf   0x4797
  41a65e:	js     0x41a647
  41a660:	add    al,0x94
  41a662:	shr    dl,cl
  41a664:	cwde   
  41a665:	and    BYTE PTR [edi],dh
  41a667:	push   esp
  41a668:	out    dx,eax
  41a669:	call   0xa76bcc83
  41a66e:	aaa    
  41a66f:	bound  esp,QWORD PTR [ebx+0x29af4f6d]
  41a675:	cmp    eax,0x9897ac37
  41a67a:	inc    edi
  41a67b:	xchg   edi,eax
  41a67c:	jl     0x41a6b3
  41a67e:	rcr    bh,1
  41a680:	inc    edx
  41a681:	jnp    0x41a68f
  41a683:	mov    edi,0xe449b8c0
  41a688:	rcl    dl,0x2a
  41a68b:	call   0x13ae:0xf308358e
  41a692:	jmp    0xb52b:0x46ef7415
  41a699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a69a:	scas   eax,DWORD PTR es:[edi]
  41a69b:	in     eax,dx
  41a69c:	jbe    0x41a65c
  41a69e:	mov    al,ds:0x92f13e6d
  41a6a3:	xor    ecx,esi
  41a6a5:	push   cs
  41a6a6:	stos   DWORD PTR es:[edi],eax
  41a6a7:	outs   dx,BYTE PTR ds:[esi]
  41a6a8:	call   0xcd6c:0xfa2226d0
  41a6af:	inc    esi
  41a6b0:	lea    edx,[edx]
  41a6b2:	adc    edx,DWORD PTR [edx-0x7a484123]
  41a6b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6b9:	test   al,0x3c
  41a6bb:	(bad)  
  41a6bc:	lock mov ebp,0x8cb4d109
  41a6c2:	mov    al,ds:0x2b4118e8
  41a6c7:	jecxz  0x41a691
  41a6c9:	ret    0x6dea
  41a6cc:	sahf   
  41a6cd:	lods   al,BYTE PTR ds:[esi]
  41a6ce:	sub    edx,ecx
  41a6d0:	pop    ds
  41a6d1:	repnz adc BYTE PTR [ebx+0x610feca2],dh
  41a6d8:	or     edx,DWORD PTR [eax]
  41a6da:	rol    edx,cl
  41a6dc:	into   
  41a6dd:	mov    bl,0x85
  41a6df:	mov    ah,BYTE PTR [eax+0x6d28112a]
  41a6e5:	in     al,dx
  41a6e6:	es push esi
  41a6e8:	addr16 push cs
  41a6ea:	jmp    0x5d39:0x92fbe6d2
  41a6f1:	xlat   BYTE PTR ds:[ebx]
  41a6f2:	sbb    DWORD PTR [esp+ebp*4-0x4ae5154c],ebx
  41a6f9:	mov    bh,0xae
  41a6fb:	out    0xde,eax
  41a6fd:	mov    ds:0x25a22ecc,eax
  41a702:	int    0x60
  41a704:	in     al,dx
  41a705:	test   al,0x74
  41a707:	or     BYTE PTR [edi],cl
  41a709:	js     0x41a71e
  41a70b:	lahf   
  41a70c:	ins    DWORD PTR es:[edi],dx
  41a70d:	fld    QWORD PTR [eax-0x1a87bdff]
  41a713:	mul    DWORD PTR [ecx+0x75f6393c]
  41a719:	pop    ebx
  41a71a:	inc    ecx
  41a71b:	mov    esp,0xa8fa173b
  41a720:	sti    
  41a721:	(bad)  
  41a723:	xchg   esp,eax
  41a724:	inc    edx
  41a725:	pop    ebp
  41a726:	adc    DWORD PTR [ecx+0x16],esp
  41a729:	push   ebx
  41a72b:	jecxz  0x41a6fa
  41a72d:	mov    edx,0x179283d4
  41a732:	mov    edx,0x16fa831
  41a737:	push   es
  41a738:	in     eax,0x55
  41a73a:	adc    al,0x5
  41a73c:	mov    dh,0xe0
  41a73e:	(bad)  
  41a73f:	dec    ebx
  41a740:	(bad)  
  41a741:	sub    al,0x39
  41a743:	or     eax,DWORD PTR [edx]
  41a745:	inc    eax
  41a746:	inc    esi
  41a747:	xor    edx,DWORD PTR [ecx+0x51]
  41a74a:	mov    ch,0x8f
  41a74c:	not    DWORD PTR [esi+0x30716ca7]
  41a752:	mov    ds:0xaf512e05,al
  41a757:	push   es
  41a758:	xchg   edx,eax
  41a759:	(bad)  [ebp-0x40]
  41a75c:	sub    esi,ebx
  41a75e:	sti    
  41a75f:	(bad)  
  41a760:	in     al,dx
  41a761:	fisubr WORD PTR [ecx]
  41a763:	(bad)  
  41a764:	pop    ds
  41a765:	test   BYTE PTR [edi],al
  41a767:	push   ds
  41a768:	bound  esp,QWORD PTR [edx+edi*2+0x3b]
  41a76c:	loopne 0x41a6f6
  41a76e:	test   ebp,edx
  41a770:	push   esp
  41a771:	or     BYTE PTR [esi+edi*1+0x5f],0x71
  41a776:	(bad)  
  41a777:	int    0xf
  41a779:	mov    esi,0xaad58fb4
  41a77e:	mov    WORD PTR [esi+0x76],ds
  41a781:	push   eax
  41a782:	aad    0x12
  41a784:	arpl   dx,ax
  41a786:	test   al,0xee
  41a788:	jmp    0x2b2a419f
  41a78d:	cmc    
  41a78e:	xlat   BYTE PTR ds:[ebx]
  41a78f:	jp     0x41a7d2
  41a791:	jmp    0x41a7d0
  41a793:	fsubr  QWORD PTR [eax+0x13]
  41a796:	or     dh,ah
  41a798:	push   0xffffff9c
  41a79a:	add    DWORD PTR [edx+eiz*8+0x1d],edx
  41a79e:	and    al,0xbc
  41a7a0:	mov    eax,ds:0xa7123148
  41a7a5:	xchg   ebx,eax
  41a7a6:	xor    cl,dl
  41a7a8:	ror    DWORD PTR [edi+0x76823601],0x2
  41a7af:	mov    DWORD PTR [ebp-0x5951aa0a],esp
  41a7b5:	mov    ch,0x46
  41a7b7:	or     BYTE PTR [ebx-0x43398f8f],cl
  41a7bd:	mov    ah,0x8
  41a7bf:	nop
  41a7c0:	inc    edx
  41a7c1:	ds sahf 
  41a7c3:	pop    es
  41a7c4:	(bad)  
  41a7c5:	xchg   ecx,eax
  41a7c6:	in     eax,dx
  41a7c7:	scas   eax,DWORD PTR es:[edi]
  41a7c8:	mov    bh,0xb6
  41a7ca:	pop    eax
  41a7cb:	cmp    BYTE PTR [edi-0x3c],0xa1
  41a7cf:	and    BYTE PTR [esp+eiz*8],al
  41a7d2:	dec    eax
  41a7d3:	push   0x54
  41a7d5:	pop    ebx
  41a7d6:	xchg   esi,eax
  41a7d7:	sub    BYTE PTR [eax+0xf],al
  41a7da:	adc    bh,BYTE PTR [edi+0x925db21]
  41a7e0:	lahf   
  41a7e1:	mov    esp,0xf8a9fb97
  41a7e6:	cmp    eax,0x9c9a6eaa
  41a7eb:	mov    bh,0xd7
  41a7ed:	dec    ecx
  41a7ee:	into   
  41a7ef:	leave  
  41a7f0:	push   esp
  41a7f1:	xor    dh,BYTE PTR [edi]
  41a7f3:	loop   0x41a870
  41a7f5:	ss leave 
  41a7f7:	or     dh,BYTE PTR [eax]
  41a7f9:	push   esi
  41a7fa:	popf   
  41a7fb:	jmp    0xf6d7:0xa424c722
  41a802:	xchg   ebx,eax
  41a803:	jecxz  0x41a794
  41a805:	jecxz  0x41a882
  41a807:	mov    bh,0x21
  41a809:	and    al,0x68
  41a80b:	mov    ecx,0x6e2b021d
  41a810:	lods   eax,DWORD PTR ds:[esi]
  41a811:	mov    cl,0x61
  41a813:	lea    ebp,[ebx+0x659ec244]
  41a819:	inc    ebx
  41a81a:	mov    ah,0x8
  41a81c:	push   eax
  41a81d:	(bad)  
  41a81e:	cmc    
  41a81f:	out    dx,eax
  41a820:	pushf  
  41a821:	aas    
  41a822:	mov    BYTE PTR [ebx-0x71fa6018],bl
  41a828:	dec    ebp
  41a829:	sbb    al,0x41
  41a82b:	in     eax,0xee
  41a82d:	inc    eax
  41a82e:	fs loope 0x41a878
  41a831:	xchg   edx,eax
  41a832:	retf   
  41a833:	mov    ebx,0x5eb2c5e
  41a838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a839:	mov    edi,0x696148e3
  41a83e:	mov    bh,BYTE PTR [eax+0x14b71199]
  41a844:	repnz inc edx
  41a846:	adc    DWORD PTR [eax+0x53],edx
  41a849:	add    bl,BYTE PTR [esp+edi*4]
  41a84c:	popa   
  41a84d:	and    DWORD PTR cs:[ecx],edx
  41a850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a851:	jbe    0x41a82e
  41a853:	test   DWORD PTR [ecx+0x6f75d312],esp
  41a859:	lods   al,BYTE PTR ds:[esi]
  41a85a:	dec    edx
  41a85b:	pop    edi
  41a85c:	sahf   
  41a85d:	int    0xf5
  41a85f:	and    dh,BYTE PTR [esp+esi*4-0x77]
  41a863:	xchg   DWORD PTR [eax-0x44d320da],edi
  41a869:	aas    
  41a86a:	mov    eax,0xc2c51b64
  41a86f:	in     eax,0x92
  41a871:	aam    0x5e
  41a873:	or     ah,BYTE PTR [esi]
  41a875:	dec    DWORD PTR [ebx-0x75]
  41a878:	mov    edi,0x30f3d9e6
  41a87d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a87e:	xlat   BYTE PTR cs:[ebx]
  41a880:	enter  0x1cd1,0x64
  41a884:	test   eax,0x65e83119
  41a889:	xchg   ebx,eax
  41a88a:	xchg   ebx,eax
  41a88b:	jne    0x41a83e
  41a88d:	popa   
  41a88e:	inc    edx
  41a890:	mov    ebp,0x53b51124
  41a895:	repz jecxz 0x41a8ea
  41a898:	push   esp
  41a899:	(bad)  
  41a89a:	bound  edi,QWORD PTR [ebx+0x18be0f3b]
  41a8a0:	or     al,0xda
  41a8a2:	outs   dx,DWORD PTR ds:[esi]
  41a8a3:	jmp    0xdf9:0x1550b928
  41a8aa:	popa   
  41a8ab:	icebp  
  41a8ac:	hlt    
  41a8ad:	add    bl,BYTE PTR [ebx]
  41a8af:	retw   
  41a8b1:	into   
  41a8b2:	(bad)  
  41a8b3:	mov    eax,0xf0d6dd5e
  41a8b8:	rol    BYTE PTR [ecx+0x15],0x18
  41a8bc:	outs   dx,BYTE PTR ds:[esi]
  41a8bd:	sbb    esp,DWORD PTR [ecx]
  41a8bf:	ds loop 0x41a905
  41a8c2:	jg     0x41a918
  41a8c4:	in     eax,0x2b
  41a8c6:	pop    ecx
  41a8c7:	in     al,0x44
  41a8c9:	int3   
  41a8ca:	or     cl,BYTE PTR [edx+0x18a0d27e]
  41a8d0:	test   eax,0xafc902e2
  41a8d6:	pop    ebp
  41a8d7:	adc    BYTE PTR [ecx],0x8e
  41a8da:	(bad)  
  41a8db:	mov    al,ds:0x2f53ab11
  41a8e0:	repz xor eax,0x9126fe3c
  41a8e6:	fcomp  QWORD PTR [ebx+esi*8-0x2b]
  41a8ea:	ds or  eax,0xdf05ba6c
  41a8f0:	mov    ch,0x46
  41a8f2:	ins    BYTE PTR es:[edi],dx
  41a8f3:	dec    ebx
  41a8f4:	das    
  41a8f5:	push   edx
  41a8f6:	jne    0x41a8da
  41a8f8:	ds pop ebx
  41a8fa:	adc    DWORD PTR [ecx+ebx*2+0x1c311326],ebx
  41a901:	leave  
  41a902:	or     eax,0xe7715371
  41a907:	lods   al,BYTE PTR ds:[esi]
  41a908:	mov    ch,0x24
  41a90a:	fwait
  41a90b:	scas   al,BYTE PTR es:[edi]
  41a90c:	sbb    eax,eax
  41a90e:	jge    0x41a976
  41a910:	out    0x81,al
  41a912:	adc    al,0xac
  41a914:	xchg   al,dl
  41a916:	pop    edx
  41a917:	push   edx
  41a918:	ins    BYTE PTR es:[edi],dx
  41a919:	popa   
  41a91a:	sub    BYTE PTR [ebx-0xb],dl
  41a91d:	push   cs
  41a91e:	or     al,0x0
  41a920:	hlt    
  41a921:	rol    BYTE PTR [edi+0x6d],1
  41a924:	pop    ss
  41a925:	fisttp QWORD PTR [eax]
  41a927:	jmp    0xb6e401f5
  41a92c:	sbb    BYTE PTR [edx+ebp*1+0x524728c0],cl
  41a933:	loopne 0x41a8b9
  41a935:	jno    0x41a97a
  41a937:	jmp    0xf5653a22
  41a93c:	test   BYTE PTR [edx+0x698b4718],dh
  41a942:	mov    ebx,0x76be9ab3
  41a947:	cmp    DWORD PTR [edi],eax
  41a949:	rcr    BYTE PTR [ebp+ecx*8+0x69],0x8a
  41a94e:	push   esi
  41a94f:	adc    ch,BYTE PTR [ebx]
  41a951:	push   ebx
  41a952:	and    bh,al
  41a954:	or     ebx,DWORD PTR [edi-0x1]
  41a957:	dec    ebp
  41a958:	fld    TBYTE PTR [ecx-0x3d]
  41a95b:	call   FWORD PTR [ecx+0xa2d646]
  41a961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a962:	sar    BYTE PTR [edx],0x54
  41a965:	jge    0x41a954
  41a967:	cmp    al,0xb5
  41a969:	xor    ecx,DWORD PTR [esi+eiz*1+0x3f30ffa]
  41a970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a971:	dec    ecx
  41a972:	inc    ecx
  41a973:	es inc edi
  41a975:	lock xchg edi,eax
  41a977:	jno    0x41a989
  41a979:	outs   dx,DWORD PTR ds:[esi]
  41a97a:	pop    esp
  41a97b:	and    eax,0x5e18ea5f
  41a980:	(bad)  
  41a981:	iret   
  41a982:	mov    bl,0xa
  41a984:	push   edi
  41a985:	(bad)  
  41a987:	jae    0x41a915
  41a989:	sub    al,0xcb
  41a98b:	jge    0x41a9b9
  41a98d:	inc    eax
  41a98e:	and    al,0x4f
  41a990:	sbb    ecx,esp
  41a992:	popf   
  41a993:	outs   dx,BYTE PTR ds:[esi]
  41a994:	loopne 0x41aa01
  41a996:	icebp  
  41a997:	xchg   edx,eax
  41a998:	jmp    0xffe72645
  41a99d:	push   ecx
  41a99e:	sar    bh,0xba
  41a9a1:	mov    eax,0x504b5539
  41a9a6:	dec    esi
  41a9a7:	mov    ch,0x6e
  41a9a9:	sub    ebp,DWORD PTR [ebx+0x48]
  41a9ac:	mov    ds:0xd317bda8,eax
  41a9b1:	push   ebp
  41a9b2:	leave  
  41a9b3:	lods   eax,DWORD PTR ds:[esi]
  41a9b4:	fld    TBYTE PTR [edx+0x1f7cbcfa]
  41a9ba:	or     ah,BYTE PTR [ecx-0x5312967]
  41a9c0:	cs (bad) 
  41a9c2:	inc    ebx
  41a9c3:	jle    0x41a986
  41a9c5:	js     0x41aa3f
  41a9c7:	or     al,BYTE PTR [ebp+0x41]
  41a9ca:	xchg   DWORD PTR [ebx-0x68887ba],eax
  41a9d0:	or     al,BYTE PTR [edx]
  41a9d2:	fcmovu st,st(1)
  41a9d4:	inc    ecx
  41a9d5:	call   0xb1229831
  41a9da:	or     bh,BYTE PTR [esi+0xdad44b5]
  41a9e0:	bswap  ecx
  41a9e2:	idiv   DWORD PTR [ebx+edx*8+0x56fafc25]
  41a9e9:	and    al,0xf2
  41a9eb:	pop    edx
  41a9ec:	sbb    al,bh
  41a9ee:	mov    edi,cs
  41a9f0:	inc    edi
  41a9f1:	inc    esi
  41a9f2:	sti    
  41a9f3:	iret   
  41a9f4:	ds fwait
  41a9f6:	jae    0x41aa44
  41a9f8:	stc    
  41a9f9:	dec    edi
  41a9fa:	sbb    al,0xfb
  41a9fc:	(bad)  [ebp-0x28]
  41a9ff:	cs nop
  41aa01:	push   ebp
  41aa02:	cwde   
  41aa03:	add    ecx,DWORD PTR [edi]
  41aa05:	stc    
  41aa06:	xor    al,0x8f
  41aa08:	or     dh,BYTE PTR [edx-0x1136d4e9]
  41aa0e:	add    al,0x77
  41aa10:	test   DWORD PTR [edi-0x22639086],ecx
  41aa16:	sub    DWORD PTR [ebx+0x6a],0xffffffcb
  41aa1a:	push   edi
  41aa1b:	arpl   WORD PTR [esi+0x57b2d448],bp
  41aa21:	dec    ebp
  41aa22:	sbb    esi,0xd4b43e6e
  41aa28:	mov    cl,0x8e
  41aa2a:	mov    gs,WORD PTR [esi-0x7e]
  41aa2d:	dec    ebp
  41aa2e:	les    esp,FWORD PTR [edx-0x13]
  41aa31:	in     eax,0xdb
  41aa33:	fld    DWORD PTR [edx-0x216b4dc7]
  41aa39:	in     eax,0x73
  41aa3b:	into   
  41aa3c:	fwait
  41aa3d:	or     eax,0xf985ff79
  41aa42:	mov    ebp,0x75a883d2
  41aa47:	xchg   DWORD PTR ds:[ebp+0x71],esp
  41aa4b:	out    0xdd,al
  41aa4d:	push   esp
  41aa4e:	add    eax,0x1af91c24
  41aa53:	jb     0x41aa2e
  41aa55:	xchg   esi,eax
  41aa56:	mov    ebx,0x919d25d6
  41aa5b:	rol    BYTE PTR [edi+0x70bf5cac],1
  41aa61:	out    dx,al
  41aa62:	out    dx,al
  41aa63:	lds    ecx,FWORD PTR [ebp+ebp*1-0x40c6aef3]
  41aa6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa6b:	jle    0x41aa70
  41aa6d:	ror    ecx,0xc7
  41aa70:	and    edi,DWORD PTR [ecx-0x11]
  41aa73:	fwait
  41aa74:	mov    DWORD PTR [eax],ebx
  41aa76:	xchg   esp,eax
  41aa77:	cmc    
  41aa78:	pop    edi
  41aa79:	sbb    eax,0x3d480a50
  41aa7e:	or     BYTE PTR [ebp-0x1689a2b3],0x5a
  41aa85:	inc    esp
  41aa86:	rcl    BYTE PTR [eax+0x52],cl
  41aa89:	out    0xfa,eax
  41aa8b:	lahf   
  41aa8c:	ds jb  0x41aabb
  41aa8f:	jns    0x41aaf8
  41aa91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa92:	pop    esi
  41aa93:	fidiv  DWORD PTR [ebx-0x148871b2]
  41aa99:	cld    
  41aa9a:	in     eax,dx
  41aa9b:	jb     0x41aaf0
  41aa9d:	test   eax,0x6f51a400
  41aaa2:	dec    ecx
  41aaa3:	popa   
  41aaa4:	daa    
  41aaa5:	dec    eax
  41aaa6:	js     0x41aa8b
  41aaa8:	xor    DWORD PTR [edx-0x78beb046],esi
  41aaae:	stos   BYTE PTR es:[edi],al
  41aaaf:	lahf   
  41aab0:	outs   dx,BYTE PTR ds:[esi]
  41aab1:	or     al,0xc4
  41aab3:	bound  esi,QWORD PTR fs:[edi]
  41aab6:	jo     0x41aa67
  41aab8:	neg    BYTE PTR [esi+0x4b]
  41aabb:	dec    esi
  41aabc:	arpl   WORD PTR [esi-0x4c1188ef],dx
  41aac2:	les    ecx,FWORD PTR [ecx+0x63]
  41aac5:	sub    eax,edx
  41aac7:	scas   eax,DWORD PTR es:[edi]
  41aac8:	mov    edx,0xc384ea5c
  41aacd:	je     0x41ab00
  41aacf:	jmp    0x41aa95
  41aad1:	xor    DWORD PTR [edi],ebp
  41aad3:	addr16 and eax,0xaffef1ac
  41aad9:	sbb    bl,BYTE PTR [eax-0xf]
  41aadc:	xchg   ecx,eax
  41aadd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aade:	iret   
  41aadf:	push   ecx
  41aae0:	popa   
  41aae1:	xchg   ecx,eax
  41aae2:	scas   al,BYTE PTR es:[edi]
  41aae3:	pop    ebp
  41aae4:	ja     0x41ab56
  41aae6:	xor    DWORD PTR [edx+0x6c8f1f38],ebx
  41aaec:	sub    WORD PTR [ebx+0x4a],sp
  41aaf0:	push   esp
  41aaf1:	lds    esp,FWORD PTR [esi]
  41aaf3:	sub    al,0xd1
  41aaf5:	xchg   ebx,eax
  41aaf6:	lods   eax,DWORD PTR ds:[esi]
  41aaf7:	sbb    dh,ch
  41aaf9:	inc    esp
  41aafa:	dec    edx
  41aafb:	xor    bh,BYTE PTR [ecx-0x58]
  41aafe:	test   esi,edx
  41ab00:	cmp    DWORD PTR [esi-0x4a93cd45],0x66
  41ab07:	rol    BYTE PTR [ebx],1
  41ab09:	int    0xf7
  41ab0b:	out    0xff,al
  41ab0d:	test   BYTE PTR [edi-0x3b],al
  41ab10:	cmp    eax,0x3ea27d4f
  41ab15:	jno    0x41ab7e
  41ab17:	inc    edx
  41ab18:	add    al,0xb7
  41ab1a:	imul   ebx,DWORD PTR [ebp-0x76eba88f],0x33
  41ab21:	mov    ah,0xfe
  41ab23:	test   eax,0xb5044f92
  41ab28:	cmc    
  41ab29:	sub    BYTE PTR [esi-0x42],al
  41ab2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab2d:	cwde   
  41ab2e:	mov    dh,0x84
  41ab30:	jae    0x41aaf6
  41ab32:	rcr    ecx,0x9a
  41ab35:	fxch   st(6)
  41ab37:	fst    DWORD PTR ds:[ebx]
  41ab3a:	mov    WORD PTR [edi],gs
  41ab3c:	sub    ecx,DWORD PTR [eax-0x55522417]
  41ab42:	xchg   ebx,eax
  41ab43:	xor    eax,0x7e4c2c5a
  41ab48:	mov    bl,0x11
  41ab4a:	in     eax,0x83
  41ab4c:	ins    BYTE PTR es:[edi],dx
  41ab4d:	add    DWORD PTR [ebp-0x49],ebp
  41ab50:	mov    al,0xab
  41ab52:	mov    ecx,eax
  41ab54:	mov    eax,ds:0x51431d2d
  41ab59:	jns    0x41abc6
  41ab5b:	fst    DWORD PTR [edx-0x2a]
  41ab5e:	pop    ecx
  41ab5f:	sub    al,ch
  41ab61:	adc    eax,0x911b2c21
  41ab66:	scas   al,BYTE PTR es:[edi]
  41ab67:	mov    eax,ds:0xf80a2af5
  41ab6c:	inc    edx
  41ab6d:	mov    bl,0xb6
  41ab6f:	ror    BYTE PTR [esi],cl
  41ab71:	enter  0x931,0x4f
  41ab75:	outs   dx,DWORD PTR ds:[esi]
  41ab76:	pop    eax
  41ab77:	mov    bh,0xf9
  41ab79:	mov    ecx,0xa2e40311
  41ab7e:	adc    al,0x32
  41ab80:	push   edi
  41ab81:	jae    0x41aba4
  41ab83:	xor    BYTE PTR [eax+ebx*2+0x63],0x79
  41ab88:	stos   DWORD PTR es:[edi],eax
  41ab89:	and    BYTE PTR [ecx],ah
  41ab8b:	rol    DWORD PTR [edx],cl
  41ab8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab8e:	xchg   ebp,eax
  41ab8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab90:	loopne 0x41abdf
  41ab92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab93:	adc    cl,BYTE PTR [eax-0x1c791484]
  41ab99:	sar    BYTE PTR [ebx+edi*4+0x600111c1],cl
  41aba0:	jecxz  0x41ab77
  41aba2:	inc    edx
  41aba3:	and    ch,BYTE PTR [ebp-0x2]
  41aba6:	jle    0x41ab57
  41aba8:	add    DWORD PTR [eax],ebx
  41abaa:	add    eax,DWORD PTR [esi]
  41abac:	fadd   DWORD PTR [edx*4-0x484c6687]
  41abb3:	pop    ss
  41abb4:	cmp    al,0x5e
  41abb6:	adc    BYTE PTR [ebp-0x6c],ch
  41abb9:	inc    eax
  41abba:	xor    eax,0xa45b50d4
  41abbf:	push   cs
  41abc0:	mov    cl,ch
  41abc2:	mov    ds:0xe2359a99,al
  41abc7:	mov    dl,0x67
  41abc9:	dec    esi
  41abca:	dec    ebp
  41abcb:	aas    
  41abcc:	std    
  41abcd:	mov    ah,0x90
  41abcf:	push   esp
  41abd0:	stos   BYTE PTR es:[edi],al
  41abd1:	dec    ecx
  41abd2:	pop    eax
  41abd3:	push   edi
  41abd4:	xor    eax,DWORD PTR [ebx+0x13]
  41abd7:	add    esi,DWORD PTR [edx+0x563d87b2]
  41abdd:	cwde   
  41abde:	mov    eax,ds:0x1900f002
  41abe3:	sub    dh,bh
  41abe5:	(bad)  
  41abe6:	and    BYTE PTR [eax],bl
  41abe8:	push   DWORD PTR [ebx]
  41abea:	cmc    
  41abeb:	jnp    0x41ab9c
  41abed:	cwde   
  41abee:	dec    ebx
  41abef:	ins    DWORD PTR es:[edi],dx
  41abf0:	push   ds
  41abf1:	jnp    0x41ac4b
  41abf3:	jp     0x41abaf
  41abf5:	mov    eax,ds:0xfa46f8c5
  41abfa:	leave  
  41abfb:	mov    bh,0xf7
  41abfd:	imul   esi,DWORD PTR [ebp+0x1c],0xffffffd3
  41ac01:	stos   BYTE PTR es:[edi],al
  41ac02:	jge    0x41ac02
  41ac04:	jg     0x41ac12
  41ac06:	dec    esi
  41ac07:	adc    cl,BYTE PTR [eax]
  41ac09:	outs   dx,BYTE PTR ds:[esi]
  41ac0a:	std    
  41ac0b:	(bad)  
  41ac0c:	gs or  eax,0xd32b5072
  41ac12:	sub    al,0xee
  41ac14:	jno    0x41ac63
  41ac16:	arpl   WORD PTR gs:[eax-0x5e],bx
  41ac1a:	jno    0x41ac0d
  41ac1c:	int3   
  41ac1d:	test   eax,0x6d3317f3
  41ac22:	cdq    
  41ac23:	add    eax,0x66cd6116
  41ac28:	jno    0x41ac61
  41ac2a:	ret    0x5a94
  41ac2d:	inc    ecx
  41ac2e:	jp     0x41ac43
  41ac30:	pop    es
  41ac31:	and    BYTE PTR [ebp+0x0],al
  41ac34:	jb     0x41aca5
  41ac36:	ret    0xc967
  41ac39:	mov    eax,0xe9889537
  41ac3e:	clc    
  41ac3f:	sbb    al,ch
  41ac41:	jnp    0x41acb0
  41ac43:	jne    0x41ac07
  41ac45:	ss or  eax,0x9af6861d
  41ac4b:	jnp    0x41ac57
  41ac4d:	push   ebp
  41ac4e:	bound  edi,QWORD PTR [edi+0x20]
  41ac51:	cmp    ah,BYTE PTR [esi]
  41ac53:	dec    eax
  41ac54:	add    DWORD PTR [edi+0x5e],esi
  41ac57:	jne    0x41ac58
  41ac59:	xchg   edi,eax
  41ac5a:	pop    esi
  41ac5b:	sbb    eax,0xb3670609
  41ac60:	xor    eax,0x40ca90fd
  41ac65:	mov    ecx,0xede0e4d9
  41ac6a:	mov    bh,0xc
  41ac6c:	mov    ch,0x9c
  41ac6e:	dec    esi
  41ac6f:	jno    0x41abf7
  41ac71:	inc    esi
  41ac72:	fild   DWORD PTR [ecx+0x1e]
  41ac75:	cdq    
  41ac76:	ins    BYTE PTR es:[edi],dx
  41ac77:	add    ebp,DWORD PTR [esi-0x74]
  41ac7a:	xchg   esp,eax
  41ac7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac7c:	mov    ds:0x9bcfb89c,al
  41ac81:	hlt    
  41ac82:	sub    eax,0x49e14d29
  41ac87:	shl    al,cl
  41ac89:	loope  0x41acba
  41ac8b:	jbe    0x41ac1c
  41ac8d:	mov    esp,0x5095e894
  41ac92:	mul    BYTE PTR [eax]
  41ac94:	cmp    DWORD PTR [eax-0x7208ae6c],esi
  41ac9a:	inc    ebx
  41ac9b:	inc    edi
  41ac9c:	iret   
  41ac9d:	in     al,0xf3
  41ac9f:	cmovno ecx,DWORD PTR [ecx]
  41aca2:	xchg   ecx,eax
  41aca3:	cmp    al,0xe7
  41aca5:	xlat   BYTE PTR ds:[ebx]
  41aca6:	int3   
  41aca7:	test   DWORD PTR [ebp+ecx*8-0x4],ecx
  41acab:	mov    cl,0xf0
  41acad:	sbb    eax,0xfb205af8
  41acb2:	cmp    eax,edi
  41acb4:	shl    DWORD PTR [esi],cl
  41acb6:	(bad)  
  41acb7:	ds xchg ecx,eax
  41acb9:	test   al,0xb0
  41acbb:	cdq    
  41acbc:	or     ch,dh
  41acbe:	or     bl,dl
  41acc0:	jl     0x41acc9
  41acc2:	mov    eax,ds:0xfba2c06f
  41acc7:	aad    0xe6
  41acc9:	out    0xc1,al
  41accb:	ins    DWORD PTR es:[edi],dx
  41accc:	gs push ebp
  41acce:	stc    
  41accf:	clc    
  41acd0:	repnz pusha 
  41acd2:	sbb    DWORD PTR [edx+esi*4+0x145d6e5a],edi
  41acd9:	outs   dx,DWORD PTR ds:[esi]
  41acda:	mov    al,ds:0x751e41d1
  41acdf:	jns    0x41ad22
  41ace1:	cmp    DWORD PTR [ebp-0x5e3ba3ce],ebp
  41ace7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ace8:	inc    edi
  41ace9:	pop    esp
  41acea:	in     eax,dx
  41aceb:	jge    0x41ad13
  41aced:	sub    BYTE PTR [bx+si+0x24bb],bl
  41acf2:	mov    al,0x8a
  41acf4:	push   ebp
  41acf5:	xchg   ecx,eax
  41acf6:	addr16 addr16 xor eax,0xdc89bbbe
  41acfd:	fstp   TBYTE PTR [ebp-0x63460427]
  41ad03:	(bad)  
  41ad04:	mov    ebp,DWORD PTR [eax]
  41ad06:	int    0xe3
  41ad08:	dec    esp
  41ad09:	outs   dx,BYTE PTR ds:[esi]
  41ad0a:	jae    0x41ad00
  41ad0c:	mov    ecx,0x5970137f
  41ad11:	jb     0x41acef
  41ad13:	or     bl,BYTE PTR [eax-0x71]
  41ad16:	mov    ds:0xa809c588,al
  41ad1b:	and    eax,0xa78eddc
  41ad20:	dec    edi
  41ad21:	and    esi,DWORD PTR [eax+0x8057752]
  41ad27:	imul   ebx,DWORD PTR [esp+eiz*2],0xffffffe4
  41ad2b:	fs dec edi
  41ad2d:	mov    ecx,0x80723b0
  41ad32:	mov    edi,DWORD PTR [edx+0x46]
  41ad35:	jnp    0x41ace0
  41ad37:	jb     0x41ad18
  41ad39:	pop    edi
  41ad3a:	jns    0x41ad5c
  41ad3c:	add    ah,0x1f
  41ad3f:	mov    WORD PTR [edi+0x1],cs
  41ad42:	and    ah,BYTE PTR [esi-0x2332c90]
  41ad48:	cmp    ch,al
  41ad4a:	sub    dl,BYTE PTR [ebp-0x73]
  41ad4d:	adc    ebp,DWORD PTR [eax-0x80]
  41ad50:	cmp    dh,BYTE PTR [ecx-0x4552d1d2]
  41ad56:	and    dh,BYTE PTR [eax]
  41ad58:	push   edi
  41ad59:	in     eax,0xaa
  41ad5b:	js     0x41ad20
  41ad5d:	mov    ds:0x6d9caf27,al
  41ad62:	lds    edx,FWORD PTR ds:0xdea98d9a
  41ad68:	les    ebx,FWORD PTR ss:[esi]
  41ad6b:	xor    esi,ecx
  41ad6d:	lock jp 0x41ad6b
  41ad70:	pop    ecx
  41ad71:	jle    0x41ad43
  41ad73:	mov    eax,0x835afe2c
  41ad78:	inc    esi
  41ad79:	jns    0x41ad9c
  41ad7b:	push   eax
  41ad7c:	(bad)  
  41ad7d:	and    BYTE PTR [edi+0x74e1e4d8],ah
  41ad83:	jbe    0x41ad56
  41ad85:	adc    esi,edx
  41ad87:	stc    
  41ad88:	sahf   
  41ad89:	xlat   BYTE PTR ds:[ebx]
  41ad8a:	dec    edx
  41ad8b:	stos   DWORD PTR es:[edi],eax
  41ad8c:	ror    edx,cl
  41ad8e:	push   eax
  41ad8f:	xchg   ebx,eax
  41ad90:	sti    
  41ad91:	es fwait
  41ad93:	xchg   DWORD PTR [ebp+0x253c1806],ebx
  41ad99:	xchg   esp,eax
  41ad9a:	pop    DWORD PTR [ebx+0x7be3454a]
  41ada0:	ss retf 
  41ada2:	sbb    eax,0xe31de821
  41ada7:	and    BYTE PTR [edx-0x51],al
  41adaa:	or     al,0xdc
  41adac:	arpl   WORD PTR [ecx+ecx*8+0x77],di
  41adb0:	fs int 0x50
  41adb3:	mov    al,ch
  41adb5:	adc    BYTE PTR [edx],0x27
  41adb8:	out    0xa3,eax
  41adba:	int3   
  41adbb:	jb     0x41adcf
  41adbd:	loop   0x41ae11
  41adbf:	je     0x41adab
  41adc1:	jbe    0x41ad8f
  41adc3:	call   0x95d0:0x7da1665c
  41adca:	call   0xa252d77
  41adcf:	push   esp
  41add0:	jge    0x41addf
  41add2:	inc    eax
  41add3:	xor    eax,0x2437313a
  41add8:	sti    
  41add9:	add    edi,DWORD PTR [esi-0xe]
  41addc:	cmp    DWORD PTR [ebx],ebx
  41adde:	out    dx,al
  41addf:	rcr    BYTE PTR [esp+edx*8],cl
  41ade2:	dec    ebp
  41ade3:	jno    0x41ad86
  41ade5:	hlt    
  41ade6:	jo     0x41adad
  41ade8:	shl    eax,cl
  41adea:	js     0x41ae02
  41adec:	xor    al,0x90
  41adee:	jl     0x41ade4
  41adf0:	outs   dx,BYTE PTR ds:[esi]
  41adf1:	adc    bh,BYTE PTR [edi]
  41adf3:	pop    edx
  41adf4:	fnstcw WORD PTR ds:0x7eb81136
  41adfa:	mov    bl,0xb6
  41adfc:	inc    ebp
  41adfd:	scas   al,BYTE PTR es:[edi]
  41adfe:	mov    bl,0xe4
  41ae00:	sahf   
  41ae01:	ins    DWORD PTR es:[edi],dx
  41ae02:	inc    ecx
  41ae03:	mov    ebx,0x3422f81d
  41ae08:	nop
  41ae09:	inc    ebx
  41ae0a:	inc    ebx
  41ae0b:	add    BYTE PTR [edi],bh
  41ae0d:	std    
  41ae0e:	dec    ecx
  41ae0f:	mov    al,0xf6
  41ae11:	or     dh,ch
  41ae13:	rcr    dl,cl
  41ae15:	xchg   edx,eax
  41ae16:	mov    edx,0xff6562d3
  41ae1b:	repz popf 
  41ae1d:	dec    edi
  41ae1e:	pop    ebx
  41ae1f:	popa   
  41ae20:	aad    0xb
  41ae22:	dec    eax
  41ae23:	out    dx,al
  41ae24:	stos   DWORD PTR es:[edi],eax
  41ae25:	repnz mov bl,0x5
  41ae28:	stos   DWORD PTR es:[edi],eax
  41ae29:	mov    ah,0xb7
  41ae2b:	push   es
  41ae2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae2d:	fs test eax,0x18d18de
  41ae33:	xchg   esi,eax
  41ae34:	fnstsw WORD PTR [eax+0x41]
  41ae37:	fnstsw WORD PTR [esi]
  41ae39:	cmp    eax,0xd6390382
  41ae3e:	fs xor dl,bl
  41ae41:	jns    0x41ae8f
  41ae43:	cmp    BYTE PTR [esi+0x482ac33f],dl
  41ae49:	(bad)
  41ae4e:	fsubp  st(6),st
  41ae50:	jne    0x41ae44
  41ae52:	cmp    eax,0xfd8c9f27
  41ae57:	adc    eax,0x825d973e
  41ae5c:	scas   eax,DWORD PTR es:[edi]
  41ae5d:	dec    eax
  41ae5e:	pop    ss
  41ae5f:	jecxz  0x41ae7c
  41ae61:	sbb    al,0x7c
  41ae63:	pop    esi
  41ae64:	sbb    al,0xa
  41ae66:	jmp    0x41aeae
  41ae68:	outs   dx,BYTE PTR ds:[esi]
  41ae69:	mov    bl,0x5
  41ae6b:	call   0x9145c28c
  41ae70:	nop
  41ae71:	jbe    0x41aeec
  41ae73:	push   esp
  41ae74:	enter  0x63dc,0xfc
  41ae78:	shl    edx,0xa3
  41ae7b:	jge    0x41ae21
  41ae7d:	inc    esp
  41ae7e:	inc    ebp
  41ae7f:	mov    ch,0xb2
  41ae81:	add    eax,0x3bf2306
  41ae86:	mov    dl,0x75
  41ae88:	sbb    eax,0x56c46f80
  41ae8d:	rcr    ecx,cl
  41ae8f:	(bad)  
  41ae90:	(bad)  
  41ae92:	ins    BYTE PTR es:[edi],dx
  41ae93:	push   es
  41ae94:	dec    dh
  41ae96:	fdivr  DWORD PTR [ebx]
  41ae98:	pop    ss
  41ae99:	jae    0x41af06
  41ae9b:	ret    
  41ae9c:	mov    ecx,db6
  41ae9f:	pop    es
  41aea0:	or     ecx,eax
  41aea2:	and    ebp,DWORD PTR [ecx+0x7433be9d]
  41aea8:	fld    QWORD PTR [eax+edi*1-0x5a64bc8]
  41aeaf:	add    ebx,DWORD PTR [edi]
  41aeb1:	add    ebp,ebx
  41aeb3:	movlps QWORD PTR [eax+0x500bee9a],xmm1
  41aeba:	xor    esp,DWORD PTR [edi+edi*1+0x34]
  41aebe:	and    DWORD PTR [ebx+0x41],ebx
  41aec1:	not    DWORD PTR [edi+0x365022c4]
  41aec7:	push   ss
  41aec8:	test   cl,dl
  41aeca:	push   ss
  41aecb:	mov    eax,0x63f62059
  41aed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed1:	and    ebx,DWORD PTR [ebx]
  41aed3:	mov    ebx,0xc39b3ef4
  41aed8:	lds    esp,FWORD PTR [edi+0x2b]
  41aedb:	test   DWORD PTR [ecx-0x2fcee136],edx
  41aee1:	inc    eax
  41aee2:	sbb    ebx,0x9fe5760e
  41aee8:	cld    
  41aee9:	jge    0x41aedf
  41aeeb:	cmc    
  41aeec:	dec    edi
  41aeed:	jg     0x41ae76
  41aeef:	enter  0x9502,0xad
  41aef3:	ins    DWORD PTR es:[edi],dx
  41aef4:	aam    0xdb
  41aef6:	ret    0xa559
  41aef9:	iret   
  41aefa:	cdq    
  41aefb:	jecxz  0x41aee0
  41aefd:	icebp  
  41aefe:	int3   
  41aeff:	push   DWORD PTR [esi+ecx*4-0x2907ed84]
  41af06:	fcmovnu st,st(6)
  41af08:	dec    esp
  41af09:	std    
  41af0a:	sub    ebp,edi
  41af0c:	data16 adc al,0x5c
  41af0f:	add    bl,BYTE PTR [edi+0x59]
  41af12:	push   esi
  41af13:	inc    esi
  41af14:	xor    eax,0xe311628b
  41af19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af1a:	rcl    bl,cl
  41af1c:	cmp    eax,0xffe3e30b
  41af21:	mov    dl,0x51
  41af23:	pop    esp
  41af24:	int3   
  41af25:	sbb    al,BYTE PTR [ebx+eax*4+0x1e]
  41af29:	shl    DWORD PTR cs:[esi+ebp*1+0x2b],0xe1
  41af2f:	and    BYTE PTR [eax-0x23],dh
  41af32:	hlt    
  41af33:	xchg   BYTE PTR [edx],ch
  41af35:	pop    ebp
  41af36:	repz mov bl,0xcc
  41af39:	push   esi
  41af3a:	sub    BYTE PTR [ebp+0x1],0x99
  41af3e:	dec    edi
  41af3f:	and    eax,0xb7a29b11
  41af44:	ficom  DWORD PTR ds:0x4b0f15fd
  41af4a:	sub    BYTE PTR [edi+eiz*8-0x44],ch
  41af4e:	mov    dl,ah
  41af50:	cmp    BYTE PTR [edi],bl
  41af52:	mov    ch,0x25
  41af54:	fld    DWORD PTR [edi]
  41af56:	xor    dh,BYTE PTR [esi+0x1c]
  41af59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af5a:	imul   ecx,DWORD PTR [edx+0xd],0x26df5491
  41af61:	ja     0x41af7a
  41af63:	sbb    esi,DWORD PTR [ebp-0x1f461c4e]
  41af69:	mov    cl,0xc9
  41af6b:	inc    esi
  41af6c:	and    BYTE PTR [ecx],dh
  41af6e:	arpl   WORD PTR [ebp-0x3d],si
  41af71:	push   ebx
  41af72:	sahf   
  41af73:	xchg   edi,eax
  41af74:	icebp  
  41af75:	lods   eax,DWORD PTR ds:[esi]
  41af76:	ja     0x41af0c
  41af78:	sbb    eax,0x6e056a68
  41af7d:	sub    eax,0x42553ebe
  41af82:	shl    DWORD PTR [esi+0x354280c5],cl
  41af88:	jg     0x41af83
  41af8a:	(bad)  
  41af8c:	mov    esp,DWORD PTR [edx-0x77]
  41af8f:	pop    ebx
  41af90:	idiv   DWORD PTR [ebp+edx*2-0x1f249a17]
  41af97:	pop    ecx
  41af98:	jg     0x41af21
  41af9a:	xor    al,0x39
  41af9c:	jae    0x41af30
  41af9e:	pushf  
  41af9f:	or     al,0x5c
  41afa1:	les    eax,FWORD PTR [ebp+0x19]
  41afa4:	pop    esp
  41afa5:	sub    BYTE PTR [edx+0x4c],dh
  41afa8:	mov    esp,0x623aca4e
  41afad:	aam    0xe7
  41afaf:	jmp    0x48fed6f0
  41afb4:	nop
  41afb5:	add    bl,BYTE PTR [edi-0x6a]
  41afb8:	mov    eax,ds:0xf463b04a
  41afbd:	jecxz  0x41afc7
  41afbf:	sti    
  41afc0:	pop    edx
  41afc2:	out    0xac,al
  41afc4:	pop    ebp
  41afc5:	retf   0x2c0e
  41afc8:	iret   
  41afc9:	fisttp WORD PTR [edx]
  41afcb:	aad    0x93
  41afcd:	rcr    ah,cl
  41afcf:	sub    BYTE PTR [ebp-0x8],ch
  41afd2:	retf   0xb0f5
  41afd5:	xchg   esp,eax
  41afd6:	sbb    DWORD PTR [ebx-0x20d004b2],0xffffffda
  41afdd:	shr    DWORD PTR [edi-0x7e93999d],0x59
  41afe4:	jne    0x41af7a
  41afe6:	jp     0x41b045
  41afe8:	mov    ebx,0xeed5176
  41afed:	pusha  
  41afee:	adc    DWORD PTR [edx],0x2f
  41aff1:	pop    ebx
  41aff2:	pop    ss
  41aff3:	add    al,0xf2
  41aff5:	dec    eax
  41aff6:	ins    BYTE PTR es:[edi],dx
  41aff7:	enter  0x2e9a,0x1a
  41affb:	out    0x91,eax
  41affd:	or     esi,DWORD PTR [edx-0x4e]
  41b000:	dec    ebx
  41b001:	xchg   esi,edx
  41b003:	mov    DWORD PTR [edx+0x77],esi
  41b006:	mov    ebp,0x944f1a6a
  41b00b:	ins    BYTE PTR es:[edi],dx
  41b00c:	mov    ah,0x9e
  41b00e:	in     al,dx
  41b00f:	mov    ecx,0x3cd7ddaf
  41b014:	sbb    al,0x21
  41b016:	jg     0x41b054
  41b018:	cmp    al,BYTE PTR [edx-0x65]
  41b01b:	sar    ch,0x43
  41b01e:	mov    edx,DWORD PTR [eax-0x5a]
  41b021:	in     eax,dx
  41b022:	mov    esp,0x3a1a3e0b
  41b027:	or     BYTE PTR [edi-0x57],al
  41b02a:	pop    ecx
  41b02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b02c:	push   edx
  41b02d:	out    0x2c,eax
  41b02f:	mov    eax,0xf725b887
  41b034:	aam    0x83
  41b036:	cmp    ah,bh
  41b038:	dec    esp
  41b039:	outs   dx,DWORD PTR ds:[esi]
  41b03a:	adc    DWORD PTR [edi+0x11],0xad361158
  41b041:	js     0x41afff
  41b043:	scas   eax,DWORD PTR es:[edi]
  41b044:	jae    0x41b07f
  41b046:	cmp    BYTE PTR [ebp-0x45684d25],0xaf
  41b04d:	into   
  41b04e:	xchg   ebx,eax
  41b04f:	push   es
  41b050:	sub    BYTE PTR [eax+0x19e87288],ah
  41b056:	test   DWORD PTR [edi-0x13],ebx
  41b059:	and    ah,0x4c
  41b05c:	cld    
  41b05d:	cld    
  41b05e:	cmp    DWORD PTR [edi],0x3e4d4354
  41b064:	push   eax
  41b065:	and    DWORD PTR [ebp-0x5e5ebddf],0xffffff89
  41b06c:	and    al,BYTE PTR [esi-0x8]
  41b06f:	push   edx
  41b070:	cmp    esi,0xffffffa7
  41b073:	lods   al,BYTE PTR ds:[esi]
  41b074:	push   es
  41b075:	sub    al,0xe4
  41b077:	mov    edx,0x8a925026
  41b07c:	xor    ch,BYTE PTR [esi-0x6f7cddb1]
  41b082:	and    eax,0x7a5b8046
  41b087:	(bad)  
  41b088:	xor    eax,0x3bba00a8
  41b08d:	xor    cl,bl
  41b08f:	test   eax,0x57a376e4
  41b094:	mov    edx,0xbef8c28d
  41b099:	shr    BYTE PTR [eax+esi*8],0x9e
  41b09d:	inc    esp
  41b09e:	mov    bl,0xee
  41b0a0:	fstp   DWORD PTR [ebp+0x30cc7db2]
  41b0a6:	mov    eax,esp
  41b0a8:	fstp   DWORD PTR [edx-0x7c296e93]
  41b0ae:	mov    esi,0x916ae0d
  41b0b3:	mov    DWORD PTR [eax-0x17280627],ecx
  41b0b9:	into   
  41b0ba:	jmp    0x41b0d0
  41b0bc:	cmp    BYTE PTR [eax+0x69aafbef],bh
  41b0c2:	jmp    0x41b11f
  41b0c4:	jmp    0x41b100
  41b0c6:	adc    DWORD PTR [edi],edx
  41b0c8:	mov    ebx,0x61144478
  41b0cd:	xchg   esp,eax
  41b0ce:	sub    esp,esp
  41b0d0:	or     eax,ebp
  41b0d2:	arpl   di,dx
  41b0d4:	ja     0x41b0a2
  41b0d6:	push   edx
  41b0d7:	call   0xb31d:0xa0f2275b
  41b0de:	push   0xe0e6628c
  41b0e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0e4:	jle    0x41b09e
  41b0e6:	push   edi
  41b0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0e8:	ins    BYTE PTR es:[edi],dx
  41b0e9:	xchg   DWORD PTR [edx+0x1942921f],ecx
  41b0ef:	loop   0x41b0e3
  41b0f1:	fistp  WORD PTR [edx+0x26]
  41b0f4:	mov    edi,0x36b055ae
  41b0f9:	mov    dh,bh
  41b0fb:	push   eax
  41b0fc:	scas   eax,DWORD PTR es:[edi]
  41b0fd:	jmp    FWORD PTR [ebx-0x69c0c7cd]
  41b103:	xchg   ebx,eax
  41b104:	mov    esi,0x8342250a
  41b109:	mov    esp,0xcd2b746a
  41b10e:	sub    DWORD PTR [ecx-0x26],0xbe8fdd15
  41b115:	inc    DWORD PTR [ebx+edx*2+0x5d637554]
  41b11c:	push   ecx
  41b11d:	cmp    eax,0xb68cba78
  41b122:	fild   QWORD PTR [esi-0x24b62025]
  41b128:	imul   ebx,DWORD PTR [edx+0x1e1cb25e],0x5b
  41b12f:	fsub   QWORD PTR [ebx]
  41b131:	mov    dh,0x3c
  41b133:	cmp    dh,al
  41b135:	lods   ax,WORD PTR ds:[esi]
  41b137:	sbb    BYTE PTR [eax-0x5eedef17],ch
  41b13d:	inc    edi
  41b13e:	jecxz  0x41b19f
  41b140:	fnstcw WORD PTR [ebx-0x32]
  41b143:	arpl   WORD PTR [ecx],sp
  41b145:	jmp    0x41b187
  41b147:	lods   eax,DWORD PTR ds:[esi]
  41b148:	pop    ds
  41b149:	or     eax,0xad72fcb3
  41b14e:	pop    esp
  41b14f:	cs inc ecx
  41b151:	cs popw es
  41b154:	test   eax,0x540b8f21
  41b159:	test   al,0xb2
  41b15b:	cli    
  41b15c:	in     eax,dx
  41b15d:	js     0x41b16c
  41b15f:	or     DWORD PTR [edx+ebp*1],ecx
  41b162:	cmp    al,0xb9
  41b164:	paddw  mm7,mm3
  41b167:	pop    esp
  41b168:	aas    
  41b169:	dec    DWORD PTR [ebp-0x787ae32]
  41b16f:	sub    BYTE PTR [ecx+0x53],0xed
  41b173:	pop    edx
  41b174:	call   0x21136747
  41b179:	pop    edi
  41b17a:	jno    0x41b1b0
  41b17c:	or     BYTE PTR [eax-0x40],cl
  41b17f:	in     al,0x44
  41b181:	aad    0xb9
  41b183:	and    ebp,DWORD PTR [ecx]
  41b185:	cmp    edi,DWORD PTR [esi+0x7e]
  41b188:	sbb    al,0x9b
  41b18a:	and    DWORD PTR [ebp-0x22a83a1d],ecx
  41b190:	push   DWORD PTR [edx]
  41b192:	and    eax,0xa7346ca9
  41b197:	shl    BYTE PTR [eax],1
  41b199:	xchg   ebx,eax
  41b19a:	popf   
  41b19b:	add    ah,BYTE PTR [edx-0xd77a919]
  41b1a1:	int3   
  41b1a2:	xlat   BYTE PTR ds:[ebx]
  41b1a3:	adc    ch,ch
  41b1a5:	push   ebp
  41b1a6:	ins    BYTE PTR es:[edi],dx
  41b1a7:	in     eax,dx
  41b1a8:	not    BYTE PTR [edi+ecx*8+0x1e]
  41b1ac:	outs   dx,BYTE PTR ds:[esi]
  41b1ad:	jno    0x41b1b7
  41b1af:	sbb    BYTE PTR [edi+0x6a],0x61
  41b1b3:	loopne 0x41b1c4
  41b1b5:	sar    BYTE PTR [ebx-0x1dd6f0a8],0x55
  41b1bc:	mov    al,ds:0x79384adf
  41b1c1:	push   ebp
  41b1c2:	rcl    DWORD PTR [edi+0xe],1
  41b1c5:	pop    ss
  41b1c6:	aam    0xe4
  41b1c8:	(bad)  
  41b1ca:	adc    eax,0x87fce3b2
  41b1cf:	gs test eax,0x69f39c15
  41b1d5:	xchg   DWORD PTR ds:0xa1b6dc79,edx
  41b1db:	lea    ebx,[edx-0x75cf1028]
  41b1e1:	retf   0xedd3
  41b1e4:	out    dx,eax
  41b1e5:	xor    BYTE PTR [edi+0x4c],0xd6
  41b1e9:	sub    al,0x60
  41b1eb:	sbb    eax,0xeee863a0
  41b1f0:	add    eax,0x33254d3f
  41b1f5:	sbb    esi,DWORD PTR es:[edi]
  41b1f8:	data16 out 0xdf,al
  41b1fb:	std    
  41b1fc:	jecxz  0x41b23d
  41b1fe:	retf   0x34c4
  41b201:	cmp    DWORD PTR [esi+0x83f8a92],edx
  41b207:	cli    
  41b208:	cmp    ebx,0x3d90f074
  41b20e:	pop    ds
  41b20f:	out    dx,al
  41b210:	xchg   ebp,eax
  41b211:	or     BYTE PTR [eax-0x23],al
  41b214:	mov    ah,0x73
  41b216:	mov    DWORD PTR [esp+ebx*2],eax
  41b219:	stos   DWORD PTR es:[edi],eax
  41b21a:	lea    esi,[ecx]
  41b21c:	dec    esp
  41b21d:	lahf   
  41b21e:	pop    ebp
  41b21f:	sub    eax,0x34617377
  41b224:	mul    BYTE PTR [ebx+0x1c]
  41b227:	push   ds
  41b228:	cmp    al,BYTE PTR [eax-0x69b2b583]
  41b22e:	mov    cl,0x84
  41b230:	mov    dl,0x80
  41b232:	fild   WORD PTR [eax+ebx*1-0x56974a18]
  41b239:	(bad)  
  41b23a:	frstor [esi-0x1d]
  41b23d:	and    cl,BYTE PTR [ebx-0x1d]
  41b240:	inc    edx
  41b241:	repz aaa 
  41b243:	(bad)  
  41b244:	ins    BYTE PTR es:[edi],dx
  41b245:	sub    eax,0xed045af6
  41b24a:	add    ebp,DWORD PTR [ebx+eiz*2+0x1cf8c77e]
  41b251:	test   eax,0xe5ecbb83
  41b256:	add    eax,0x2ca588a5
  41b25b:	gs pushf 
  41b25d:	(bad)  
  41b25e:	lea    ebx,[edx-0x6f6a32bc]
  41b264:	fimul  WORD PTR [ecx+eax*4]
  41b267:	std    
  41b268:	adc    bh,bh
  41b26a:	rol    DWORD PTR [edi+0x7e0a530a],cl
  41b270:	daa    
  41b271:	jge    0x41b255
  41b273:	inc    ebx
  41b274:	and    ebp,esp
  41b276:	pusha  
  41b277:	xor    BYTE PTR [edi],ah
  41b279:	mov    cl,0x0
  41b27b:	shl    eax,0xa1
  41b27e:	xchg   edx,eax
  41b27f:	stc    
  41b280:	lds    esi,FWORD PTR [eax+0x2b411751]
  41b286:	jp     0x41b275
  41b288:	inc    edi
  41b289:	xor    al,0x4a
  41b28b:	cs cdq 
  41b28d:	dec    ecx
  41b28e:	dec    ecx
  41b28f:	mov    edx,0x6e2d01c1
  41b294:	xchg   ecx,eax
  41b295:	cwde   
  41b296:	test   bl,dl
  41b298:	ja     0x41b27f
  41b29a:	scas   al,BYTE PTR es:[edi]
  41b29b:	call   0xe568:0xae1c54c8
  41b2a2:	sbb    al,0x69
  41b2a4:	pusha  
  41b2a5:	stc    
  41b2a6:	ret    0x320a
  41b2a9:	and    eax,0x1ecb15a9
  41b2ae:	mov    esp,0x803696fe
  41b2b3:	dec    esi
  41b2b4:	(bad)  
  41b2b5:	out    0x3d,eax
  41b2b7:	mov    ah,0xd8
  41b2b9:	xlat   BYTE PTR ds:[ebx]
  41b2ba:	fstp   QWORD PTR [ecx]
  41b2bc:	int    0xd4
  41b2be:	push   esi
  41b2bf:	mov    eax,ds:0xcda0bb9f
  41b2c4:	push   esp
  41b2c5:	rcr    DWORD PTR [ebp+0x74],0x2d
  41b2c9:	jl     0x41b302
  41b2cb:	sbb    ah,0xf7
  41b2ce:	xchg   edi,eax
  41b2cf:	inc    ecx
  41b2d0:	pop    eax
  41b2d1:	(bad)  [ebp-0x51]
  41b2d4:	(bad)
  41b2d8:	out    dx,eax
  41b2d9:	push   eax
  41b2da:	packsswb mm0,QWORD PTR [edx+ebp*2]
  41b2de:	daa    
  41b2df:	jbe    0x41b303
  41b2e1:	retf   0x1684
  41b2e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e5:	inc    edi
  41b2e6:	js     0x41b327
  41b2e8:	dec    eax
  41b2e9:	out    dx,al
  41b2ea:	sbb    DWORD PTR [ecx-0x52de17e8],ecx
  41b2f0:	call   DWORD PTR [ebp+0x77]
  41b2f3:	mov    ah,BYTE PTR [esi+0xd0e80b]
  41b2f9:	sub    eax,0xd51969af
  41b2fe:	ret    
  41b2ff:	pop    ebp
  41b300:	hlt    
  41b301:	(bad)  
  41b302:	rcl    BYTE PTR [edx+0x6a4c0e39],1
  41b308:	(bad)  
  41b309:	dec    ebp
  41b30a:	cli    
  41b30b:	adc    al,0x63
  41b30d:	xchg   esp,eax
  41b30e:	call   0x64c31ba4
  41b313:	pop    eax
  41b314:	(bad)  
  41b315:	jle    0x41b324
  41b317:	jmp    FWORD PTR [ebx]
  41b319:	push   edx
  41b31a:	and    ch,BYTE PTR ds:0x66b6e97b
  41b320:	inc    BYTE PTR [eax-0x33b548b5]
  41b326:	arpl   WORD PTR [ecx-0x7d],bp
  41b329:	adc    ah,bl
  41b32b:	mov    al,0x60
  41b32d:	in     al,dx
  41b32e:	into   
  41b32f:	and    esp,DWORD PTR [ecx-0x69]
  41b332:	cmp    al,0x7a
  41b334:	test   ax,0xdc6a
  41b338:	enter  0x3a6c,0x33
  41b33c:	enter  0xaccc,0xe4
  41b340:	retf   0x9aaf
  41b343:	fist   WORD PTR [esi]
  41b345:	mov    ch,0x5c
  41b347:	fs xchg esp,eax
  41b349:	fidivr WORD PTR [ebx-0x1]
  41b34c:	test   al,0xe7
  41b34e:	push   ebx
  41b34f:	in     eax,0xdb
  41b351:	mov    ebp,0x752fea35
  41b356:	add    al,0x41
  41b358:	bound  eax,QWORD PTR [ecx-0x1254d9a5]
  41b35e:	enter  0x9615,0xa0
  41b362:	das    
  41b363:	sahf   
  41b364:	cwde   
  41b365:	add    al,0x3b
  41b367:	xchg   ebx,eax
  41b368:	and    al,0x72
  41b36a:	mov    bh,0x53
  41b36c:	or     BYTE PTR [ecx+ecx*2],al
  41b36f:	fld    QWORD PTR ds:0x9dd80d84
  41b375:	mov    fs,WORD PTR [ebx+esi*1+0x2bb02463]
  41b37c:	sbb    eax,0x21be13de
  41b381:	pop    ecx
  41b382:	adc    al,0xe2
  41b384:	xor    al,0x18
  41b386:	cmp    eax,0xdbd71b31
  41b38b:	sahf   
  41b38c:	jbe    0x41b3c3
  41b38e:	clc    
  41b38f:	out    0x68,al
  41b391:	xchg   ecx,eax
  41b392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b393:	jle    0x41b409
  41b395:	sbb    BYTE PTR [edx],dh
  41b397:	mov    al,ds:0x806377ba
  41b39c:	jge    0x41b3df
  41b39e:	popa   
  41b39f:	push   esp
  41b3a0:	dec    ecx
  41b3a1:	pop    ss
  41b3a2:	pusha  
  41b3a3:	sub    BYTE PTR [edi-0x37e8a38],al
  41b3a9:	add    DWORD PTR [ebp-0x49f52631],eax
  41b3af:	es mov dl,0xa1
  41b3b2:	inc    edx
  41b3b3:	add    eax,0x7753dd14
  41b3b8:	mov    eax,0x7e3a2e3a
  41b3bd:	cmp    DWORD PTR [ebx],ecx
  41b3bf:	push   ebx
  41b3c0:	mov    ch,0xae
  41b3c2:	pop    ebp
  41b3c3:	data16 adc ch,0x9e
  41b3c7:	push   ecx
  41b3c8:	icebp  
  41b3c9:	pusha  
  41b3ca:	jmp    0x519ed202
  41b3cf:	cmp    bh,BYTE PTR [ebx+0xd5db4ba]
  41b3d5:	stos   BYTE PTR es:[edi],al
  41b3d6:	add    esp,DWORD PTR ds:0xf9076bd9
  41b3dc:	cmp    eax,ecx
  41b3de:	jbe    0x41b42e
  41b3e0:	jb     0x41b448
  41b3e2:	fldenv [edi]
  41b3e4:	xor    DWORD PTR [ebx-0x11680230],ecx
  41b3ea:	int3   
  41b3eb:	dec    esp
  41b3ec:	mov    DWORD PTR [ebx-0x7b],esi
  41b3ef:	std    
  41b3f0:	jle    0x41b408
  41b3f2:	rcl    al,0xa
  41b3f5:	and    al,0x53
  41b3f7:	inc    esp
  41b3f8:	out    0x1f,al
  41b3fa:	sub    ah,BYTE PTR cs:[ecx+0x7a]
  41b3fe:	das    
  41b3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b400:	jl     0x41b410
  41b402:	fcom   DWORD PTR [ecx]
  41b404:	je     0x41b438
  41b406:	jbe    0x41b47a
  41b408:	test   esi,esi
  41b40a:	jmp    0x7782f75
  41b40f:	jmp    ebx
  41b411:	xchg   esp,eax
  41b412:	popa   
  41b413:	jae    0x41b434
  41b415:	inc    edx
  41b416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b417:	bound  edi,QWORD PTR [eax*8-0x3665c60e]
  41b41e:	jnp    0x41b3b5
  41b420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b421:	stos   DWORD PTR es:[edi],eax
  41b422:	sbb    cl,BYTE PTR [esi]
  41b424:	xchg   ecx,eax
  41b425:	xchg   ebx,eax
  41b426:	rcr    BYTE PTR [ebp+0x60],1
  41b429:	mov    cl,0x39
  41b42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b42c:	enter  0xeafc,0x70
  41b430:	jmp    0x41b42c
  41b432:	bound  eax,QWORD PTR [ecx]
  41b434:	js     0x41b463
  41b436:	jno    0x41b3bf
  41b438:	or     eax,0x39ea4341
  41b43d:	into   
  41b43e:	cmp    al,0xeb
  41b440:	dec    ecx
  41b441:	push   0x26
  41b443:	pusha  
  41b444:	push   ss
  41b445:	sbb    ebp,DWORD PTR [eax]
  41b447:	stos   BYTE PTR es:[edi],al
  41b448:	pop    ds
  41b449:	mov    edx,0x467bd72a
  41b44e:	rcr    BYTE PTR [ecx],1
  41b450:	mov    ecx,0x91d5f80f
  41b455:	add    eax,0xfd2d17ce
  41b45a:	push   cs
  41b45b:	and    bl,dh
  41b45d:	add    eax,DWORD PTR [ecx-0x26]
  41b460:	mov    ebx,0xc0f1d549
  41b465:	into   
  41b466:	sbb    BYTE PTR [edi],0x3e
  41b469:	dec    esi
  41b46a:	enter  0x133c,0xae
  41b46e:	rcr    DWORD PTR [esi],1
  41b470:	imul   edx,DWORD PTR ds:[ecx-0x2],0x5dfbb27c
  41b478:	aaa    
  41b479:	or     BYTE PTR [ecx],bh
  41b47b:	pop    ecx
  41b47c:	adc    ebx,esi
  41b47e:	mov    edx,0xf47d0deb
  41b483:	pop    esi
  41b484:	data16 fwait
  41b486:	aas    
  41b487:	sbb    DWORD PTR [eax+0x77],0xffffffe5
  41b48b:	jbe    0x41b4d4
  41b48d:	cmc    
  41b48e:	dec    esp
  41b48f:	imul   eax,DWORD PTR [esi+0x31],0x13
  41b493:	add    DWORD PTR [eax-0x6b],0xffffffbe
  41b497:	(bad)  
  41b499:	int    0xb7
  41b49b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b49c:	into   
  41b49d:	mov    ah,0xa7
  41b49f:	add    al,0xcc
  41b4a1:	pop    ebp
  41b4a2:	popf   
  41b4a3:	xor    cl,dl
  41b4a5:	gs push es
  41b4a7:	push   esi
  41b4a8:	inc    eax
  41b4a9:	ds pop ecx
  41b4ab:	jmp    0x815f46de
  41b4b0:	retf   0x82b9
  41b4b3:	sbb    DWORD PTR [eax+0x26],edi
  41b4b6:	hlt    
  41b4b7:	int3   
  41b4b8:	mov    BYTE PTR [edi],ch
  41b4ba:	push   cs
  41b4bb:	or     al,al
  41b4bd:	lods   eax,DWORD PTR ds:[esi]
  41b4be:	xor    edx,edi
  41b4c0:	rcr    BYTE PTR [ebx],1
  41b4c2:	sub    al,0xb
  41b4c4:	es test al,ah
  41b4c7:	lahf   
  41b4c8:	mov    esp,0x9d9810cb
  41b4cd:	ss (bad) 
  41b4cf:	clc    
  41b4d0:	mov    eax,ss
  41b4d2:	clc    
  41b4d3:	or     esi,DWORD PTR [edi+0x499bb297]
  41b4d9:	pusha  
  41b4da:	jo     0x41b488
  41b4dc:	out    dx,eax
  41b4dd:	add    edi,DWORD PTR [edx+edx*1-0x1b]
  41b4e1:	cmp    DWORD PTR cs:[ecx-0x2d8eac45],0xffffffb8
  41b4e9:	pop    ss
  41b4ea:	scas   eax,DWORD PTR es:[edi]
  41b4eb:	outs   dx,BYTE PTR ds:[esi]
  41b4ec:	rol    DWORD PTR [edi],cl
  41b4ee:	in     eax,0x5a
  41b4f0:	(bad)  
  41b4f2:	stos   BYTE PTR es:[edi],al
  41b4f3:	idiv   DWORD PTR ds:0x1a4ffb13
  41b4f9:	adc    dl,BYTE PTR [ebx]
  41b4fb:	jle    0x41b511
  41b4fd:	mov    esi,DWORD PTR [edx+ebx*1]
  41b500:	js     0x41b520
  41b502:	vorps  xmm7,xmm0,xmm0
  41b506:	fild   WORD PTR [eax]
  41b508:	loop   0x41b53e
  41b50a:	fwait
  41b50b:	bound  ebp,QWORD PTR ds:0xae13640
  41b511:	inc    ecx
  41b512:	or     eax,0x37d0274
  41b517:	mov    edi,cs
  41b519:	dec    ebp
  41b51a:	leave  
  41b51b:	xor    eax,0x192769f0
  41b520:	jge    0x41b4a7
  41b522:	mov    ch,0xfe
  41b524:	cdq    
  41b525:	lods   eax,DWORD PTR ds:[esi]
  41b526:	(bad)  
  41b527:	in     eax,0x93
  41b529:	pop    ecx
  41b52a:	xchg   esp,eax
  41b52b:	xchg   edi,eax
  41b52c:	mov    ecx,esi
  41b52e:	retf   0xf5ba
  41b531:	inc    edi
  41b532:	pusha  
  41b533:	(bad)  
  41b534:	loopne 0x41b59a
  41b536:	cmp    DWORD PTR [ebp+0x41],0x9f23ccff
  41b53d:	retf   0xb8f4
  41b540:	inc    edi
  41b541:	test   eax,0x2243797b
  41b546:	sbb    DWORD PTR [ebp-0x2c],esi
  41b549:	enter  0xd89f,0x6a
  41b54d:	and    eax,DWORD PTR [esi-0x6c71d814]
  41b553:	and    bl,BYTE PTR [eax+0x18]
  41b556:	or     bl,dh
  41b558:	mov    ch,bl
  41b55a:	imul   ecx,ebx,0x41bfea35
  41b560:	cmp    BYTE PTR [edi+0x59],ch
  41b563:	push   cs
  41b564:	bound  ebp,QWORD PTR [esi+0x55448d44]
  41b56a:	add    al,0x3c
  41b56c:	push   esi
  41b56d:	stos   BYTE PTR es:[edi],al
  41b56e:	xor    bl,BYTE PTR [ecx+0x2d4c332]
  41b574:	mov    ebx,0xcba04fca
  41b579:	stos   DWORD PTR es:[edi],eax
  41b57a:	xchg   edx,eax
  41b57b:	fcomp  QWORD PTR [edx+eiz*8-0xe]
  41b57f:	scas   al,BYTE PTR es:[edi]
  41b580:	xor    cl,cl
  41b582:	rol    DWORD PTR [eax],1
  41b584:	or     eax,0x70a93057
  41b589:	add    eax,0x80ddc778
  41b58e:	push   es
  41b58f:	mov    dl,0x19
  41b591:	sub    cl,cl
  41b593:	stos   BYTE PTR es:[edi],al
  41b594:	lea    ecx,[ebx-0x75]
  41b597:	push   0x9e003120
  41b59c:	outs   dx,DWORD PTR ds:[esi]
  41b59d:	dec    eax
  41b59e:	mov    ch,0x50
  41b5a0:	out    dx,eax
  41b5a1:	mov    dl,0x84
  41b5a3:	cmp    eax,0xec7cbbdf
  41b5a8:	jns    0x41b61d
  41b5aa:	sbb    eax,0x756e05a6
  41b5af:	repnz mov eax,0x8185a8b0
  41b5b5:	cs retf 
  41b5b7:	add    dh,dl
  41b5b9:	ss pop ecx
  41b5bb:	enter  0xcf26,0xc0
  41b5bf:	imul   ecx,DWORD PTR [eax+ebp*2-0x7d5fc2bd],0x6c
  41b5c7:	adc    al,0x38
  41b5c9:	fs inc edx
  41b5cb:	jnp    0x41b584
  41b5cd:	mov    edx,0x3cad9ab8
  41b5d2:	in     eax,0x7
  41b5d4:	push   esi
  41b5d5:	retf   
  41b5d6:	pop    esi
  41b5d7:	addr16 pop ebx
  41b5d9:	js     0x41b58f
  41b5db:	in     al,dx
  41b5dc:	or     BYTE PTR [edx+0xe0ec9fb],0xc8
  41b5e3:	mov    ch,0xb4
  41b5e5:	xchg   ebx,edi
  41b5e7:	(bad)  
  41b5e9:	aad    0x50
  41b5eb:	(bad)  
  41b5ec:	ds pop edi
  41b5ee:	pop    ecx
  41b5ef:	push   ebp
  41b5f0:	clc    
  41b5f1:	in     eax,0x6b
  41b5f3:	sub    DWORD PTR [edx],esi
  41b5f5:	mov    bl,0xae
  41b5f7:	sub    al,0x86
  41b5f9:	sahf   
  41b5fa:	fs and eax,0xd2ee2ea6
  41b600:	loope  0x41b629
  41b602:	push   edx
  41b603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b604:	cwde   
  41b605:	loope  0x41b64e
  41b607:	pop    edx
  41b608:	inc    ecx
  41b609:	lds    edx,FWORD PTR [ebx]
  41b60b:	stos   BYTE PTR es:[edi],al
  41b60c:	cmc    
  41b60d:	add    al,0x8d
  41b60f:	(bad)  
  41b610:	sti    
  41b611:	inc    eax
  41b612:	loop   0x41b5b3
  41b614:	xor    DWORD PTR [esi-0x355aa95a],esi
  41b61a:	pop    ebp
  41b61b:	and    BYTE PTR [ecx+0x4c],ch
  41b61e:	adc    BYTE PTR [ecx-0x111f644c],bl
  41b624:	dec    edx
  41b625:	test   BYTE PTR es:[esi-0x167c7c60],0x24
  41b62d:	add    al,0xb3
  41b62f:	mov    cl,0x99
  41b631:	push   cs
  41b632:	and    ah,BYTE PTR [eax]
  41b634:	bound  esi,QWORD PTR [eax+0x46ad1819]
  41b63a:	sar    BYTE PTR [ebp+edx*8-0x47592f73],0x48
  41b642:	push   0x1c787a60
  41b647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b648:	fwait
  41b649:	add    al,0xc
  41b64b:	jp     0x41b68d
  41b64d:	dec    eax
  41b64e:	adc    eax,DWORD PTR [edi+0x6b]
  41b651:	mov    ebx,0xc477e88e
  41b656:	dec    ebp
  41b657:	(bad)  
  41b658:	hlt    
  41b659:	pop    edi
  41b65a:	inc    ecx
  41b65b:	lea    esi,[ecx-0x7a]
  41b65e:	xchg   ebp,eax
  41b65f:	ja     0x41b6da
  41b661:	in     eax,0x77
  41b663:	cli    
  41b664:	push   eax
  41b665:	fsubrp st(2),st
  41b667:	jns    0x41b68c
  41b669:	out    dx,eax
  41b66a:	dec    ebx
  41b66b:	push   edi
  41b66c:	cld    
  41b66d:	sbb    al,dh
  41b66f:	xchg   esp,eax
  41b670:	push   ss
  41b671:	into   
  41b672:	add    dl,dh
  41b674:	jge    0x41b66f
  41b676:	dec    edx
  41b677:	bound  esi,QWORD PTR gs:[edx+0x65]
  41b67b:	cli    
  41b67c:	jo     0x41b6dd
  41b67e:	enter  0xceb7,0x8
  41b682:	stos   BYTE PTR es:[edi],al
  41b683:	xchg   esi,eax
  41b684:	add    BYTE PTR [ebx+0x19],cl
  41b687:	xor    DWORD PTR [eax-0x3934d955],0xbbbad91f
  41b691:	daa    
  41b692:	jne    0x41b6c1
  41b694:	mov    ch,0x46
  41b696:	hlt    
  41b697:	icebp  
  41b698:	imul   DWORD PTR [ecx+0x49ca5994]
  41b69e:	repnz add BYTE PTR ds:0x8b43bf0b,bh
  41b6a5:	icebp  
  41b6a6:	mov    al,ds:0xe6e8588f
  41b6ab:	int    0xc7
  41b6ad:	out    0x58,al
  41b6af:	jmp    0x1e4c:0x55d68955
  41b6b6:	clc    
  41b6b7:	(bad)  
  41b6b8:	stc    
  41b6b9:	and    esi,DWORD PTR [esi+0x61af684c]
  41b6bf:	retf   
  41b6c0:	adc    eax,0x8995af5a
  41b6c5:	inc    esi
  41b6c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6c7:	and    esp,DWORD PTR [esi+0x5]
  41b6ca:	out    dx,eax
  41b6cb:	and    bl,BYTE PTR [edx-0x2d]
  41b6ce:	cmp    ah,BYTE PTR [esi+eax*4-0x317e6102]
  41b6d5:	leave  
  41b6d6:	or     al,0x87
  41b6d8:	mov    al,ds:0x579bdf72
  41b6dd:	mov    esp,0x22763b57
  41b6e2:	jns    0x41b752
  41b6e4:	cmc    
  41b6e5:	mov    ch,0x95
  41b6e7:	mov    ds:0x7d490c5e,al
  41b6ec:	jp     0x41b68c
  41b6ee:	in     eax,dx
  41b6ef:	mov    BYTE PTR [esi],ah
  41b6f1:	cmp    esi,esi
  41b6f3:	sahf   
  41b6f4:	pop    ss
  41b6f5:	xor    edi,DWORD PTR [eax+0x29d750ad]
  41b6fb:	fldcw  WORD PTR [edi]
  41b6fd:	mov    dl,0x3d
  41b6ff:	and    al,0xb4
  41b701:	xchg   esp,eax
  41b702:	xchg   edx,eax
  41b703:	(bad)  
  41b704:	cmp    al,0x64
  41b706:	(bad)  [eax-0x71]
  41b709:	push   edx
  41b70a:	cwde   
  41b70b:	les    ebp,FWORD PTR [esi-0x1]
  41b70e:	sbb    BYTE PTR [esp+eax*4-0x79f3ed3],bl
  41b715:	les    ecx,FWORD PTR [edx]
  41b717:	pop    esp
  41b718:	fnsave [edx-0x5]
  41b71b:	jo     0x41b779
  41b71d:	mov    dl,BYTE PTR [ebx]
  41b71f:	xchg   ebp,esp
  41b721:	or     al,0x5f
  41b723:	xor    bh,BYTE PTR ds:0x9c16b88b
  41b729:	cmp    al,0x20
  41b72b:	sub    al,0xb1
  41b72d:	shl    DWORD PTR [esi],cl
  41b72f:	or     DWORD PTR [ecx+0x74b06d4b],0xd711806b
  41b739:	mov    dh,0x6a
  41b73b:	pop    ebx
  41b73c:	pop    esp
  41b73d:	sbb    dh,bh
  41b73f:	(bad)  
  41b740:	clc    
  41b741:	mov    dh,0x58
  41b743:	add    bh,BYTE PTR [edx]
  41b745:	sbb    esi,edi
  41b747:	jne    0x41b6f9
  41b749:	cmp    eax,0x46b6e038
  41b74e:	and    BYTE PTR [eax-0x1a44e520],dl
  41b754:	mov    gs,WORD PTR [edi+0xf]
  41b757:	mov    al,0x32
  41b759:	sbb    bl,BYTE PTR [ebp-0x19]
  41b75c:	in     eax,0x6c
  41b75e:	pusha  
  41b75f:	out    0xfb,eax
  41b761:	ffreep st(6)
  41b763:	add    eax,0xab1e1352
  41b768:	repz in eax,dx
  41b76a:	lods   eax,DWORD PTR ds:[esi]
  41b76b:	cs mov dl,0x8e
  41b76e:	ja     0x41b708
  41b770:	cld    
  41b771:	mov    ds,WORD PTR [eax+0x72e8c029]
  41b777:	inc    ecx
  41b778:	mov    esi,0x43bdff77
  41b77d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b77e:	inc    eax
  41b77f:	or     BYTE PTR cs:[ebx+esi*4-0x75108f4d],ah
  41b787:	cdq    
  41b788:	pop    ecx
  41b789:	mov    esi,DWORD PTR [ebx]
  41b78b:	(bad)  
  41b78c:	cli    
  41b78d:	(bad)
  41b792:	and    DWORD PTR [esi+0x732fe584],0x4dc8cbf9
  41b79c:	(bad)  
  41b79d:	jnp    0x41b757
  41b79f:	lods   eax,DWORD PTR ds:[esi]
  41b7a0:	push   0x4
  41b7a2:	test   DWORD PTR [esi],ebp
  41b7a4:	cli    
  41b7a5:	mov    dh,bh
  41b7a7:	add    BYTE PTR [ecx+0x62],bl
  41b7aa:	rcl    BYTE PTR [ebp-0x35ba0c01],cl
  41b7b0:	add    DWORD PTR [ecx-0x74],ebp
  41b7b3:	lods   al,BYTE PTR ds:[esi]
  41b7b4:	daa    
  41b7b5:	dec    ebp
  41b7b6:	fs (bad) 
  41b7b8:	cmp    eax,0x96cd5407
  41b7bd:	or     BYTE PTR [ebx+eiz*2-0x5d],bh
  41b7c1:	xlat   BYTE PTR ds:[ebx]
  41b7c2:	dec    esp
  41b7c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7c4:	jb     0x41b7be
  41b7c6:	dec    ebp
  41b7c7:	mov    ah,0x81
  41b7c9:	aaa    
  41b7ca:	inc    esp
  41b7cb:	clc    
  41b7cc:	jle    0x41b847
  41b7ce:	and    ebx,ebx
  41b7d0:	push   eax
  41b7d1:	cmp    eax,0xa22281e4
  41b7d6:	cmc    
  41b7d7:	test   BYTE PTR [edi],bh
  41b7d9:	jg     0x41b762
  41b7db:	cmp    edi,DWORD PTR [edi+0x4141efd2]
  41b7e1:	mov    bh,0x26
  41b7e3:	sbb    eax,0xe374c631
  41b7e8:	repz sbb edx,DWORD PTR [ebx]
  41b7eb:	inc    esi
  41b7ec:	out    0xd3,eax
  41b7ee:	and    eax,0x9feeb7f9
  41b7f3:	nop
  41b7f4:	jae    0x41b7ff
  41b7f6:	retf   
  41b7f7:	inc    esi
  41b7f8:	adc    DWORD PTR [eax+0x48b3aaa9],esp
  41b7fe:	mov    edx,0x680c2cf3
  41b803:	rcr    BYTE PTR gs:[edi-0x363be621],cl
  41b80a:	mov    ds,WORD PTR [ebx]
  41b80c:	clc    
  41b80d:	jle    0x41b830
  41b80f:	(bad)  
  41b810:	xor    ebx,DWORD PTR [ebp-0x1e]
  41b813:	sub    dh,BYTE PTR [ebx+0x57034854]
  41b819:	nop
  41b81a:	fisttp QWORD PTR [ecx]
  41b81c:	push   esp
  41b81d:	stos   DWORD PTR es:[edi],eax
  41b81e:	hlt    
  41b81f:	orps   xmm2,XMMWORD PTR [ebp-0x514c1414]
  41b826:	dec    esp
  41b827:	inc    ecx
  41b828:	(bad)  [edx+0x61]
  41b82b:	mov    edi,0x999348e7
  41b830:	pop    edx
  41b831:	shl    DWORD PTR [bx],0x1d
  41b835:	int    0x9e
  41b837:	xchg   esp,eax
  41b838:	pop    esp
  41b839:	inc    eax
  41b83a:	ret    0x5b9
  41b83d:	ret    
  41b83e:	jb     0x41b7f7
  41b840:	pusha  
  41b841:	cld    
  41b842:	aad    0x70
  41b844:	mov    eax,0x47108f19
  41b849:	and    al,0x67
  41b84b:	adc    al,BYTE PTR [eax-0x7e03b275]
  41b851:	and    eax,0x428ec3
  41b856:	in     al,dx
  41b857:	xor    al,BYTE PTR [eax]
  41b859:	add    BYTE PTR [ebx],ch
  41b85b:	ror    DWORD PTR [ecx+0x581fc45],0x6b
  41b862:	mov    es,WORD PTR [edx+0x0]
  41b865:	aad    0x1d
  41b867:	add    BYTE PTR [eax],al
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x428e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x428e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x428e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x428eab,0x428e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x428e67,0x428e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x428e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x428e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x42846b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x428463],eax
  41b918:	inc    DWORD PTR ds:0x42846b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4281ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x428453
  41b978:	push   DWORD PTR ds:0x4281f7
  41b97e:	push   DWORD PTR ds:0x428433
  41b984:	push   DWORD PTR ds:0x428c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x42930f
  41b9ab:	mov    esi,DWORD PTR ds:0x429c07
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x428eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x428eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x428eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x428eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x428e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x42a9ef
  41b9f7:	cmp    DWORD PTR ds:0x428eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x428eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x428eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x428eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x428ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x428e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x428e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x428e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x42a9f3
  41ba63:	mov    ecx,DWORD PTR ds:0x428e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x428e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x428e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x428e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x428e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x428e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x428e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x428e2f
  41bab8:	call   DWORD PTR ds:0x42a9f7
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x428e33
  41bacf:	or     DWORD PTR ds:0x428e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x428e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x428e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x428e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x428e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x428e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x42a9fb
  41bb1c:	cmp    DWORD PTR ds:0x428e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x428e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x428e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x428e33
  41bb46:	add    DWORD PTR ds:0x428e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x428e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4281eb
  41bb66:	mov    DWORD PTR ds:0x428e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x428e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x428e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x428eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x42a9ff
  41bba0:	cmp    DWORD PTR ds:0x428e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x428e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x428e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x428e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x428e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x428ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x428ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x428ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x428000
  41bc05:	call   DWORD PTR ds:0x42a9cb
  41bc0b:	mov    esi,DWORD PTR ds:0x428ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x428ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x428373
  41bc2a:	and    DWORD PTR ds:0x428e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x428e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x428e33,edx
  41bc46:	cmp    DWORD PTR ds:0x428e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x428e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x428189
  41bc6a:	call   DWORD PTR ds:0x42a9cf
  41bc70:	cmp    DWORD PTR ds:0x428e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x428e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x428e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x428eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x428eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x428eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x428eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x42a9d3
  41bcc9:	cmp    DWORD PTR ds:0x428eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x428e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x428e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x428e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x428e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x428ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x428e47
  41bd25:	adc    esi,DWORD PTR ds:0x428eb3
  41bd2b:	mov    DWORD PTR ds:0x428e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x428e7f,0x428e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	cmp    ecx,edi
  41bd54:	out    0xc1,eax
  41bd56:	daa    
  41bd57:	std    
  41bd58:	add    BYTE PTR [ebx-0x7c7c9fd9],0x5
  41bd5f:	lahf   
  41bd60:	cmp    eax,0xb3aebd3d
  41bd65:	cmp    bl,BYTE PTR [eax-0x569a9f69]
  41bd6b:	sti    
  41bd6c:	shl    BYTE PTR [ebx],0x12
  41bd6f:	ret    0xd5de
  41bd72:	mov    edx,0xf9ad2505
  41bd77:	ffreep st(6)
  41bd79:	xchg   ecx,eax
  41bd7a:	push   ebp
  41bd7b:	xchg   esi,eax
  41bd7c:	sbb    esp,0x7e0a727d
  41bd82:	add    BYTE PTR [edi+0x428abd41],dh
  41bd88:	lds    edi,FWORD PTR [esi-0x2fa2dc71]
  41bd8e:	clc    
  41bd8f:	or     DWORD PTR [esi-0x6b],ecx
  41bd92:	dec    edi
  41bd93:	pop    es
  41bd94:	jns    0x41bde6
  41bd96:	seto   BYTE PTR [eax+0x1f]
  41bd9a:	add    eax,0x339bb5f
  41bd9f:	repz or DWORD PTR [ebx-0x3908ef8e],eax
  41bda6:	fstp   TBYTE PTR [eax+0x5f]
  41bda9:	push   cs
  41bdaa:	add    edx,DWORD PTR [ecx-0x13]
  41bdad:	xor    al,0x18
  41bdaf:	jl     0x41bdd5
  41bdb1:	cli    
  41bdb2:	mov    edx,ebx
  41bdb4:	fist   WORD PTR [edx+0x45ea4bed]
  41bdba:	cdq    
  41bdbb:	sahf   
  41bdbc:	outs   dx,DWORD PTR ds:[esi]
  41bdbd:	retf   0x1329
  41bdc0:	call   0x2e23:0xda9cead5
  41bdc7:	mov    cl,0x7
  41bdc9:	scas   al,BYTE PTR es:[edi]
  41bdca:	repnz inc ebx
  41bdcc:	cs jp  0x41bd5f
  41bdcf:	add    eax,0x4405de6b
  41bdd4:	or     eax,0xd5947c4
  41bdd9:	mov    ah,0x9b
  41bddb:	sbb    edx,esp
  41bddd:	lahf   
  41bdde:	sbb    BYTE PTR [ebp+0x55d856fb],0x81
  41bde5:	push   ebp
  41bde6:	push   cs
  41bde7:	push   0x4b
  41bde9:	fimul  DWORD PTR [esi+esi*4-0xe088fc8]
  41bdf0:	pop    ss
  41bdf1:	cmp    ebp,ebp
  41bdf3:	repz int 0x7a
  41bdf6:	jg     0x41be51
  41bdf8:	rcr    DWORD PTR ds:0xeb2e0c8c,1
  41bdfe:	push   ds
  41bdff:	aas    
  41be00:	xor    ah,BYTE PTR [eax+0x79]
  41be03:	push   cs
  41be04:	int    0xdc
  41be06:	fisttp DWORD PTR [edi]
  41be08:	cmp    ah,BYTE PTR [ebp+0x63]
  41be0b:	sub    BYTE PTR [ecx+0x40],dh
  41be0e:	hlt    
  41be0f:	hlt    
  41be10:	add    dh,BYTE PTR [ebp-0x7c]
  41be13:	mov    al,ah
  41be15:	sub    DWORD PTR [edx-0x2062d301],ebx
  41be1b:	push   ebx
  41be1c:	adc    edx,DWORD PTR [edx]
  41be1e:	adc    eax,0x384447e7
  41be23:	xchg   bl,dl
  41be25:	mov    dh,0xe5
  41be27:	add    DWORD PTR [edi+0x1349cd6e],edx
  41be2d:	xlat   BYTE PTR ds:[ebx]
  41be2e:	ret    0x4997
  41be31:	sti    
  41be32:	mov    al,ds:0x2bba5cdf
  41be37:	sbb    BYTE PTR [edx-0x13],0x39
  41be3b:	jle    0x41be0a
  41be3d:	cmc    
  41be3e:	add    ah,BYTE PTR [ebx+0x2f]
  41be41:	std    
  41be42:	ficomp WORD PTR [ecx]
  41be44:	push   ds
  41be45:	aas    
  41be46:	into   
  41be47:	xchg   edi,eax
  41be48:	ja     0x41bde1
  41be4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be4b:	inc    esp
  41be4c:	add    bl,BYTE PTR [ebx-0x6d]
  41be4f:	inc    eax
  41be50:	lea    edi,[ecx+0x24061df0]
  41be56:	xchg   BYTE PTR [ebx-0x640ea129],ch
  41be5c:	adc    DWORD PTR [edi-0x5eb40116],eax
  41be62:	data16 fsub QWORD PTR [edx]
  41be65:	xchg   ecx,eax
  41be66:	call   0xaefb6620
  41be6b:	in     eax,dx
  41be6c:	push   cs
  41be6d:	xor    edx,esi
  41be6f:	mov    dl,0xaf
  41be71:	ja     0x41be57
  41be73:	cmpps  xmm2,XMMWORD PTR [ebx],0x56
  41be77:	xchg   ecx,eax
  41be78:	push   0xffffffac
  41be7a:	push   edi
  41be7b:	add    eax,0xb0ec9b90
  41be80:	test   al,0x7a
  41be82:	adc    eax,0xdb81fa25
  41be87:	lods   eax,DWORD PTR ds:[esi]
  41be88:	in     al,dx
  41be89:	xor    BYTE PTR [eax],bh
  41be8b:	sub    DWORD PTR [ebx-0x80],0x4f
  41be8f:	test   DWORD PTR [ebx-0x3b],eax
  41be92:	dec    edx
  41be93:	xchg   ecx,eax
  41be94:	es mov bh,0x1f
  41be97:	sbb    bh,BYTE PTR [esi-0x4d991d]
  41be9d:	into   
  41be9e:	clc    
  41be9f:	lock scas al,BYTE PTR es:[edi]
  41bea1:	and    al,0xa3
  41bea3:	and    eax,0x8a4ffe0b
  41bea8:	pop    edx
  41bea9:	nop
  41beaa:	outs   dx,BYTE PTR ds:[esi]
  41beab:	shl    BYTE PTR [edx],cl
  41bead:	ja     0x41be91
  41beaf:	jns    0x41bee2
  41beb1:	pop    esp
  41beb2:	loop   0x41bed7
  41beb4:	test   eax,0x7d00177e
  41beb9:	pop    edi
  41beba:	fstp   DWORD PTR [edx-0x71]
  41bebd:	mov    ah,0x4
  41bebf:	add    ch,bl
  41bec1:	pop    esp
  41bec2:	jne    0x41be79
  41bec4:	ds std 
  41bec6:	jbe    0x41bf12
  41bec8:	jmp    0xf0f98fca
  41becd:	xchg   ebp,eax
  41bece:	imul   edi,DWORD PTR [edi-0x7e],0xffffff91
  41bed2:	jl     0x41be8c
  41bed4:	adc    bh,BYTE PTR [esi-0x43]
  41bed7:	pop    esi
  41bed8:	inc    ebx
  41bed9:	push   0xffffff9e
  41bedb:	(bad)  
  41bedc:	push   eax
  41bedd:	jns    0x41be83
  41bedf:	mov    ds:0x19c4e4b5,eax
  41bee4:	call   0x72a0:0x6d5bc51f
  41beeb:	hlt    
  41beec:	out    0xc1,al
  41beee:	in     eax,0xcc
  41bef0:	pop    edx
  41bef1:	push   esp
  41bef2:	adc    edi,DWORD PTR [ebp-0x13]
  41bef5:	xchg   ebp,eax
  41bef6:	xchg   DWORD PTR [ecx+0x74],esp
  41bef9:	jnp    0x41bf2c
  41befb:	jno    0x41be8f
  41befd:	mov    ebx,0x89719339
  41bf02:	and    al,0x14
  41bf04:	pop    eax
  41bf05:	jno    0x41bf4b
  41bf07:	pop    edi
  41bf08:	aaa    
  41bf09:	mov    ah,0xe8
  41bf0b:	jle    0x41bf7a
  41bf0d:	sub    al,BYTE PTR [ebx-0x4317648]
  41bf13:	mov    ecx,0x9a577a6a
  41bf18:	inc    ecx
  41bf19:	dec    edi
  41bf1a:	or     eax,0x6e6f24c6
  41bf1f:	push   edi
  41bf20:	jge    0x41bed7
  41bf22:	inc    eax
  41bf23:	push   ecx
  41bf24:	das    
  41bf25:	dec    esi
  41bf26:	adc    eax,0xb3927031
  41bf2b:	pop    ss
  41bf2c:	ror    DWORD PTR [edi+0x21],1
  41bf2f:	adc    BYTE PTR [ebx],bl
  41bf31:	xor    al,0x3d
  41bf33:	sub    ebp,DWORD PTR [esi+0x12]
  41bf36:	cmp    al,0x7e
  41bf38:	ja     0x41bf0d
  41bf3a:	popf   
  41bf3b:	adc    dh,BYTE PTR [eax+0x1]
  41bf3e:	fsubr  QWORD PTR [esp+ecx*2-0x74]
  41bf42:	sub    ecx,edi
  41bf44:	popf   
  41bf45:	neg    edx
  41bf47:	es sahf 
  41bf49:	call   0x14bf:0xc29d036f
  41bf50:	sbb    al,0x47
  41bf52:	push   esi
  41bf53:	mov    ebx,0xed309ed7
  41bf58:	fwait
  41bf59:	test   al,0x9b
  41bf5b:	or     cl,BYTE PTR [esp+edx*1-0x1f78d770]
  41bf62:	pushf  
  41bf63:	mov    eax,0xf7894109
  41bf68:	mov    eax,ds:0xdca51bcd
  41bf6d:	push   cs
  41bf6e:	cmp    eax,0x1b7d338a
  41bf73:	push   edi
  41bf74:	push   ebx
  41bf75:	cs mov bl,0x6f
  41bf78:	dec    ebp
  41bf79:	push   eax
  41bf7a:	fdivr  QWORD PTR [ebx+eax*1+0x30]
  41bf7e:	xor    ebp,eax
  41bf80:	out    0x87,eax
  41bf82:	xor    BYTE PTR [eax+edi*8-0x7cd4fb5b],bl
  41bf89:	xchg   DWORD PTR [eax+0x2d],ebx
  41bf8c:	inc    esp
  41bf8d:	fdivr  st(1),st
  41bf8f:	add    ah,dl
  41bf91:	(bad)  
  41bf93:	jno    0x41bf9a
  41bf95:	dec    esp
  41bf96:	clc    
  41bf97:	iret   
  41bf98:	pop    DWORD PTR [edi-0x30ea79c5]
  41bf9e:	es jl  0x41bf91
  41bfa1:	jbe    0x41bf54
  41bfa3:	adc    BYTE PTR ds:0x1ff,0xfe
  41bfa9:	lahf   
  41bfaa:	test   al,0x86
  41bfac:	jmp    0x71e1:0x69a660ca
  41bfb3:	push   ebp
  41bfb4:	adc    eax,0x5636d608
  41bfb9:	xor    dh,bh
  41bfbb:	lds    edx,FWORD PTR [esi]
  41bfbd:	adc    BYTE PTR [esi],ch
  41bfbf:	inc    eax
  41bfc0:	sbb    ebx,DWORD PTR [ecx]
  41bfc2:	inc    esi
  41bfc3:	cmp    DWORD PTR [esi],edx
  41bfc5:	mov    ds:0x6ffdff7e,eax
  41bfca:	or     bl,bh
  41bfcc:	(bad)  
  41bfce:	cwde   
  41bfcf:	pop    ebx
  41bfd0:	scas   al,BYTE PTR es:[edi]
  41bfd1:	push   ecx
  41bfd2:	lods   eax,DWORD PTR ds:[esi]
  41bfd3:	xor    bl,ah
  41bfd5:	sbb    al,bh
  41bfd7:	inc    esi
  41bfd8:	aas    
  41bfd9:	in     al,0x5e
  41bfdb:	fisubr WORD PTR [edi]
  41bfdd:	cdq    
  41bfde:	push   esp
  41bfdf:	jge    0x41c045
  41bfe1:	or     eax,0xc5ae3993
  41bfe6:	ins    DWORD PTR es:[edi],dx
  41bfe7:	lahf   
  41bfe8:	xlat   BYTE PTR ds:[ebx]
  41bfe9:	imul   esi,DWORD PTR [edi-0x449311be],0xffffffff
  41bff0:	out    dx,eax
  41bff1:	addr16 sti 
  41bff3:	mov    ds:0x484a7f11,al
  41bff8:	fst    DWORD PTR [ebp*4+0x3dfb4a22]
  41bfff:	rcr    BYTE PTR [ebp-0xc014e7c],cl
  41c005:	jno    0x41c017
  41c007:	test   DWORD PTR [esi+0x72],edi
  41c00a:	sar    ah,0xba
  41c00d:	xchg   esi,eax
  41c00e:	push   eax
  41c00f:	inc    ebx
  41c010:	test   DWORD PTR [ecx-0x54],ecx
  41c013:	fidivr WORD PTR [edx+0x42be5123]
  41c019:	loop   0x41bfa8
  41c01b:	cmp    BYTE PTR [edx-0x6bb325d4],bl
  41c021:	or     ah,BYTE PTR [esi-0x62]
  41c024:	lods   al,BYTE PTR ds:[esi]
  41c025:	mov    cl,0x88
  41c027:	add    ebp,esi
  41c029:	inc    edx
  41c02a:	fsub   DWORD PTR [esi]
  41c02c:	into   
  41c02d:	and    ch,bl
  41c02f:	xor    eax,0x6a9f65a8
  41c034:	mov    dl,0x53
  41c036:	jnp    0x41c046
  41c038:	and    ch,BYTE PTR [ecx]
  41c03a:	push   esp
  41c03b:	push   edx
  41c03c:	rcr    DWORD PTR [ebx+0xf],cl
  41c03f:	mov    al,0xf5
  41c041:	jle    0x41c089
  41c043:	ss cmp eax,0x3adc56c5
  41c049:	and    BYTE PTR [ebx],dl
  41c04b:	icebp  
  41c04c:	stos   BYTE PTR es:[edi],al
  41c04d:	and    DWORD PTR [edi+ebx*2+0x60],0x718c6b9a
  41c055:	dec    esi
  41c056:	test   ah,0xdf
  41c059:	or     BYTE PTR [ebp+0x2460ba7e],0x16
  41c060:	cmc    
  41c061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c062:	ss (bad) 
  41c064:	mov    cl,0xa3
  41c066:	fnstsw WORD PTR [ebp+0x57f82a4]
  41c06c:	ss dec ebp
  41c06e:	mov    al,0xb5
  41c070:	push   ebp
  41c071:	push   ebp
  41c072:	push   ss
  41c073:	stos   BYTE PTR es:[edi],al
  41c074:	mov    edi,edx
  41c076:	stos   BYTE PTR es:[edi],al
  41c077:	xlat   BYTE PTR ds:[ebx]
  41c078:	out    dx,al
  41c079:	stos   DWORD PTR es:[edi],eax
  41c07a:	or     DWORD PTR [ecx-0x69],esi
  41c07d:	adc    BYTE PTR [eax],ch
  41c07f:	std    
  41c080:	pushf  
  41c081:	sub    DWORD PTR [ebx],edx
  41c083:	dec    ecx
  41c084:	jns    0x41c09a
  41c086:	div    dl
  41c088:	jg     0x41c039
  41c08a:	dec    edx
  41c08b:	test   DWORD PTR [ebp-0x4f0a0ccd],edx
  41c091:	jmp    DWORD PTR [ebx-0x69]
  41c094:	ja     0x41c0bd
  41c096:	call   eax
  41c098:	sub    ebp,DWORD PTR [esi-0x7388a896]
  41c09e:	rcl    DWORD PTR [eax],0x41
  41c0a1:	sar    ah,0x81
  41c0a4:	int3   
  41c0a5:	dec    esi
  41c0a6:	sbb    dh,BYTE PTR [esi+esi*2]
  41c0a9:	fwait
  41c0aa:	add    eax,0xad030342
  41c0af:	inc    ebx
  41c0b0:	hlt    
  41c0b1:	sbb    ebx,DWORD PTR [esi-0x584cb45f]
  41c0b7:	push   ebp
  41c0b8:	jg     0x41c0da
  41c0ba:	and    ah,BYTE PTR [ebx+ebp*2+0x1d33c933]
  41c0c1:	add    ah,BYTE PTR cs:[esi-0x6d]
  41c0c5:	repnz mov ebp,0x378aeb09
  41c0cb:	cdq    
  41c0cc:	add    BYTE PTR [ebp-0x77],al
  41c0cf:	pop    ebp
  41c0d0:	mov    WORD PTR [edi-0x1f],ss
  41c0d3:	sbb    eax,0x4726848
  41c0d8:	inc    esi
  41c0d9:	xchg   edx,eax
  41c0da:	ins    BYTE PTR es:[edi],dx
  41c0db:	idiv   BYTE PTR [ebp-0x696803f]
  41c0e1:	dec    ecx
  41c0e2:	ret    0xe8b5
  41c0e5:	mov    ?,WORD PTR [edi]
  41c0e7:	cmp    ebx,esp
  41c0e9:	call   0xb7d3:0x8b89c802
  41c0f0:	int3   
  41c0f1:	push   eax
  41c0f2:	cmc    
  41c0f3:	xor    ecx,ebp
  41c0f5:	and    esi,ecx
  41c0f7:	dec    ebx
  41c0f8:	and    eax,0xddfa5b78
  41c0fd:	rcr    DWORD PTR [eax-0x69],1
  41c100:	inc    esi
  41c101:	mov    ch,0xa4
  41c103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c104:	mov    ch,0xeb
  41c106:	and    dh,BYTE PTR [ebx-0x4d078952]
  41c10c:	adc    al,0xfd
  41c10e:	xor    al,0x66
  41c110:	in     eax,dx
  41c111:	cdq    
  41c112:	in     al,0x77
  41c114:	xchg   edx,eax
  41c115:	jp     0x41c098
  41c117:	mov    edx,0x34607550
  41c11c:	mov    eax,ss:0x63dac73e
  41c122:	mov    al,0x36
  41c124:	push   cs
  41c125:	push   cs
  41c126:	adc    eax,0x8255504c
  41c12b:	ja     0x41c0b0
  41c12d:	sar    esi,cl
  41c12f:	outs   dx,BYTE PTR ds:[esi]
  41c130:	ret    0x3336
  41c133:	ja     0x41c0d6
  41c135:	push   edi
  41c136:	stos   BYTE PTR es:[edi],al
  41c137:	out    0x2f,eax
  41c139:	call   0xcd12:0xf8e60ea0
  41c140:	fstp   TBYTE PTR [ebp+0x63c727bc]
  41c146:	adc    al,BYTE PTR [eax+0xd990b44]
  41c14c:	push   eax
  41c14d:	add    ah,BYTE PTR [ecx]
  41c14f:	fs push ecx
  41c151:	ins    BYTE PTR es:[edi],dx
  41c152:	cld    
  41c153:	lea    ebx,[eax+edi*2+0x44d714f4]
  41c15a:	push   ebp
  41c15b:	pop    ebp
  41c15c:	mov    ds:0x9be4c642,eax
  41c161:	retf   0xb6db
  41c164:	xor    DWORD PTR [esi],0x4f
  41c167:	mov    ch,0xbe
  41c169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c16a:	push   edi
  41c16b:	xor    ecx,ecx
  41c16d:	push   eax
  41c16e:	xor    cl,dh
  41c170:	data16 fisttp DWORD PTR [edx+eax*1-0x3e05269]
  41c178:	in     al,0xca
  41c17a:	add    eax,0x53d8326d
  41c17f:	dec    esp
  41c180:	cmp    eax,DWORD PTR [esi-0x61]
  41c183:	mov    dl,BYTE PTR [ebx]
  41c185:	push   edi
  41c186:	pop    edx
  41c187:	mov    ebx,ebp
  41c189:	mov    ch,0x63
  41c18b:	xchg   ebx,eax
  41c18c:	push   ds
  41c18d:	xlat   BYTE PTR ds:[ebx]
  41c18e:	arpl   WORD PTR cs:[edx+0x173d67bc],bx
  41c195:	inc    ebx
  41c196:	mov    dl,0x7a
  41c198:	(bad)  
  41c199:	out    dx,eax
  41c19a:	xchg   ecx,eax
  41c19b:	sub    al,0x45
  41c19d:	adc    eax,0xc8516b05
  41c1a2:	sbb    ch,BYTE PTR [edi+0x2d0947f1]
  41c1a8:	cli    
  41c1a9:	adc    al,0x67
  41c1ab:	push   ds
  41c1ac:	cli    
  41c1ad:	imul   edi,DWORD PTR [ebp-0x62],0xffffffe3
  41c1b1:	push   esp
  41c1b2:	xor    DWORD PTR ds:0x497a28e2,esp
  41c1b8:	mov    cl,0x28
  41c1ba:	(bad)  
  41c1bb:	ds fs mov al,0x5e
  41c1bf:	mov    edi,DWORD PTR [ebp+eax*8-0x2b]
  41c1c3:	test   BYTE PTR [edx-0x5fc379c3],ch
  41c1c9:	cmp    eax,DWORD PTR ds:0x96165ded
  41c1cf:	cs (bad) 
  41c1d1:	aas    
  41c1d2:	hlt    
  41c1d3:	mov    ecx,0x75137605
  41c1d8:	ficom  DWORD PTR [eax-0x74]
  41c1db:	lods   eax,DWORD PTR ds:[esi]
  41c1dc:	ror    ebp,0x49
  41c1df:	jecxz  0x41c18d
  41c1e1:	scas   eax,DWORD PTR es:[edi]
  41c1e2:	cmc    
  41c1e3:	pusha  
  41c1e4:	inc    esi
  41c1e5:	in     eax,dx
  41c1e6:	outs   dx,DWORD PTR ds:[esi]
  41c1e7:	cmp    eax,0xa68ce6db
  41c1ec:	pushf  
  41c1ed:	je     0x41c19e
  41c1ef:	mov    ecx,DWORD PTR [ebx+0x7344707e]
  41c1f5:	retf   0x657
  41c1f8:	lea    ebx,[edi+ebx*1]
  41c1fb:	mov    ebp,ebx
  41c1fd:	sub    BYTE PTR [eax+esi*4+0x3dde3fee],0xa1
  41c205:	cmp    al,0xf1
  41c207:	inc    ecx
  41c208:	adc    eax,0x30be9243
  41c20d:	out    dx,eax
  41c20e:	xchg   ebx,eax
  41c20f:	xor    esi,esp
  41c211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c212:	pop    ebx
  41c213:	fwait
  41c214:	pop    ds
  41c215:	mov    dl,0xe6
  41c217:	sbb    BYTE PTR [ecx],bl
  41c219:	xchg   esi,eax
  41c21a:	aam    0x32
  41c21c:	xchg   esp,eax
  41c21d:	push   ebp
  41c21e:	xchg   esi,eax
  41c21f:	enter  0x7893,0x34
  41c223:	fldcw  WORD PTR [eax+0x69]
  41c226:	loope  0x41c1df
  41c228:	repnz or eax,0x98ac67d0
  41c22e:	adc    ebp,eax
  41c230:	ins    BYTE PTR es:[edi],dx
  41c231:	iret   
  41c232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c233:	jg     0x41c1d3
  41c235:	lock cli 
  41c237:	cmp    dh,BYTE PTR [edx+0x3f]
  41c23a:	lods   al,BYTE PTR ds:[esi]
  41c23b:	fsub   QWORD PTR [edi+0x78]
  41c23e:	mov    ch,0x92
  41c240:	jnp    0x41c1c4
  41c242:	ror    esi,cl
  41c244:	(bad)  
  41c245:	sub    edi,ebx
  41c247:	and    eax,0x30474974
  41c24c:	or     eax,0x6c82992
  41c251:	xor    eax,0x706b8f12
  41c256:	dec    edx
  41c257:	fsub   QWORD PTR [ebx+esi*8]
  41c25a:	or     ecx,DWORD PTR [ebp-0x56]
  41c25d:	fldenv es:[edx]
  41c260:	pop    edi
  41c261:	aam    0x86
  41c263:	cli    
  41c264:	adc    dl,BYTE PTR [edi-0x59b0a895]
  41c26a:	mov    dh,0xe6
  41c26c:	in     al,dx
  41c26d:	and    ch,BYTE PTR [esi-0x69b7ca83]
  41c273:	push   es
  41c274:	dec    BYTE PTR [edi]
  41c276:	ror    bl,1
  41c278:	ret    0x54c8
  41c27b:	jbe    0x41c24a
  41c27d:	xchg   edi,eax
  41c27e:	cmp    al,0x5b
  41c280:	addr16 dec edx
  41c282:	sub    dh,BYTE PTR [edx+0x52e0131a]
  41c288:	ins    BYTE PTR es:[edi],dx
  41c289:	cmp    BYTE PTR [ebx+0x8487e0c],ah
  41c28f:	cld    
  41c290:	inc    eax
  41c291:	mov    cl,0x8c
  41c293:	xor    al,0x20
  41c295:	or     cl,cl
  41c297:	jp     0x41c24a
  41c299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c29a:	lods   eax,DWORD PTR ds:[esi]
  41c29b:	lahf   
  41c29c:	pusha  
  41c29d:	mov    ebp,0xbf1fda74
  41c2a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2a3:	push   eax
  41c2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2a5:	xor    ecx,DWORD PTR [esi]
  41c2a7:	repz cmp eax,0x60d07eee
  41c2ad:	jnp    0x41c2f1
  41c2af:	add    dl,BYTE PTR [ecx-0x51c1279f]
  41c2b5:	jae    0x41c25f
  41c2b7:	shl    DWORD PTR [ebx],0xfe
  41c2ba:	addr16 dec eax
  41c2bc:	mov    edx,0xf9fe5fed
  41c2c1:	loopne 0x41c269
  41c2c3:	test   al,0xb5
  41c2c5:	scas   eax,DWORD PTR es:[edi]
  41c2c6:	push   esi
  41c2c7:	adc    eax,0xdd8ac507
  41c2cc:	(bad)  
  41c2cd:	adc    DWORD PTR [edi-0x1c11dcf7],ebp
  41c2d3:	int3   
  41c2d4:	daa    
  41c2d5:	adc    ah,BYTE PTR [ebp-0x3]
  41c2d8:	mov    edi,0x7c3d193c
  41c2dd:	sahf   
  41c2de:	push   0x3c
  41c2e0:	and    bl,ch
  41c2e2:	fistp  WORD PTR [edx+eiz*1]
  41c2e5:	adc    eax,DWORD PTR [ebx]
  41c2e7:	pop    ds
  41c2e8:	xchg   BYTE PTR ss:[esi],bl
  41c2eb:	in     eax,0x6
  41c2ed:	push   es
  41c2ee:	push   es
  41c2ef:	jns    0x41c326
  41c2f1:	and    al,0x11
  41c2f3:	sbb    ebp,ebx
  41c2f5:	mov    esp,0xb34dda8c
  41c2fa:	leave  
  41c2fb:	mov    DWORD PTR [ebx+edi*1],ebx
  41c2fe:	ficomp DWORD PTR [edi+ecx*8]
  41c301:	jno    0x41c32c
  41c303:	mov    al,0xa8
  41c306:	icebp  
  41c307:	push   esp
  41c308:	(bad)  
  41c309:	repnz icebp 
  41c30b:	outs   dx,BYTE PTR ds:[esi]
  41c30c:	clc    
  41c30d:	loopne 0x41c2c8
  41c30f:	xor    dh,BYTE PTR [ebp-0x2592be1]
  41c315:	rcr    BYTE PTR [ebp-0x4d],cl
  41c318:	inc    ebx
  41c319:	loop   0x41c2c8
  41c31b:	mov    ebx,0xc23f9ded
  41c320:	pop    esp
  41c321:	stc    
  41c322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c323:	enter  0xe61a,0x23
  41c327:	mov    edx,DWORD PTR [edi-0xb]
  41c32a:	cmp    esp,esi
  41c32c:	es jnp 0x41c382
  41c32f:	lods   al,BYTE PTR ds:[esi]
  41c330:	ss test bh,al
  41c333:	loop   0x41c2e2
  41c335:	pop    ds
  41c336:	(bad)
  41c339:	add    eax,ebp
  41c33b:	in     eax,dx
  41c33c:	ret    
  41c33d:	push   ebx
  41c33e:	dec    esi
  41c33f:	or     ecx,DWORD PTR [edi+0x1a9831c5]
  41c345:	fwait
  41c346:	mov    al,0x85
  41c348:	push   0xffffff83
  41c34a:	pop    eax
  41c34b:	mov    ch,0x23
  41c34d:	push   edi
  41c34e:	pop    esi
  41c34f:	jmp    0xcbc6:0x75e903e9
  41c356:	daa    
  41c357:	adc    BYTE PTR [esi+0x7ab7c8ab],ah
  41c35d:	push   ebx
  41c35e:	and    BYTE PTR [esi+0x725e2389],0xb7
  41c365:	sbb    esi,edi
  41c367:	shl    BYTE PTR [ebx],0x4f
  41c36a:	pop    edi
  41c36b:	(bad)  
  41c36c:	jmp    0x41c3c4
  41c36e:	cmp    eax,0xd678d92a
  41c373:	int3   
  41c374:	push   0xd3e76a8
  41c379:	push   esp
  41c37a:	xor    edi,DWORD PTR [esi-0x11413d97]
  41c380:	xchg   BYTE PTR [eax-0x1d],bh
  41c383:	ret    
  41c384:	adc    DWORD PTR [esi+0x1d],eax
  41c387:	into   
  41c388:	stos   BYTE PTR es:[edi],al
  41c389:	push   edx
  41c38a:	pop    eax
  41c38b:	mov    es:0x410c9c8e,al
  41c391:	dec    esi
  41c392:	jne    0x41c38b
  41c394:	hlt    
  41c395:	(bad)  
  41c396:	and    eax,edx
  41c398:	les    ecx,FWORD PTR [edx-0x63a6bd10]
  41c39e:	retf   
  41c39f:	data16 not cl
  41c3a2:	jmp    0xf3f13f4a
  41c3a7:	jne    0x41c340
  41c3a9:	inc    esp
  41c3aa:	dec    esp
  41c3ab:	cmp    ch,ch
  41c3ad:	add    ah,ah
  41c3af:	sbb    DWORD PTR [ecx-0x488c38e9],eax
  41c3b5:	into   
  41c3b6:	sub    dh,BYTE PTR cs:[eax+0x1e6da38]
  41c3bd:	sar    ebp,0x82
  41c3c0:	aas    
  41c3c1:	popa   
  41c3c2:	shl    DWORD PTR [ecx],0x74
  41c3c5:	adc    eax,0x1bf53e9a
  41c3ca:	push   ds
  41c3cb:	pop    ss
  41c3cc:	push   esp
  41c3cd:	in     al,0xbe
  41c3cf:	out    dx,eax
  41c3d0:	mov    bl,0x4a
  41c3d2:	pop    eax
  41c3d3:	fdiv   QWORD PTR [eax-0x7c]
  41c3d6:	sbb    DWORD PTR [ecx],esp
  41c3d8:	mov    ds:0x5f614919,al
  41c3dd:	mov    ecx,0x9e597d73
  41c3e2:	xor    BYTE PTR [ebx],dl
  41c3e4:	dec    ecx
  41c3e5:	push   ebp
  41c3e6:	xchg   edx,eax
  41c3e7:	add    BYTE PTR [edx],cl
  41c3e9:	aam    0x9
  41c3eb:	(bad)  
  41c3ec:	cmp    eax,DWORD PTR [ebp+0x192ff69f]
  41c3f2:	mov    dl,0xb0
  41c3f4:	push   edi
  41c3f5:	adc    eax,0x32e15bb6
  41c3fa:	xchg   bl,dh
  41c3fc:	mov    eax,0xab58824a
  41c401:	mov    edx,0x937a662d
  41c406:	lods   eax,DWORD PTR ds:[esi]
  41c407:	jae    0x41c45e
  41c409:	xor    edi,ecx
  41c40b:	dec    edi
  41c40c:	dec    ebx
  41c40d:	lds    edi,FWORD PTR [esp+edi*4]
  41c410:	cli    
  41c411:	xchg   ecx,eax
  41c412:	cmp    al,0xe6
  41c414:	jno    0x41c492
  41c416:	call   0xd8cd040
  41c41b:	mov    al,ds:0xa5a7cb39
  41c420:	push   ds
  41c421:	dec    edx
  41c422:	aaa    
  41c423:	fs loop 0x41c45b
  41c426:	nop
  41c427:	inc    ebx
  41c428:	inc    ecx
  41c429:	das    
  41c42a:	leave  
  41c42b:	nop
  41c42c:	inc    eax
  41c42d:	jl     0x41c3c1
  41c42f:	mov    eax,ds:0xc1789d20
  41c434:	(bad)  
  41c435:	jae    0x41c43c
  41c437:	mov    ch,0x9f
  41c439:	pop    ebx
  41c43a:	data16 int 0x7d
  41c43d:	jo     0x41c3fc
  41c43f:	add    al,0xd2
  41c441:	ror    BYTE PTR [esp+ebp*4-0x12],0x39
  41c446:	sbb    al,0xe
  41c448:	mov    dl,0x21
  41c44a:	adc    DWORD PTR [esp+ecx*1],0xffffffef
  41c44e:	or     edi,esp
  41c450:	mov    esp,ss
  41c452:	push   ss
  41c453:	jmp    0x1b5e:0x8f42d393
  41c45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c45b:	ret    
  41c45c:	inc    ecx
  41c45d:	pushf  
  41c45e:	push   edx
  41c45f:	mov    DWORD PTR [ebx+0x5e13d58],ecx
  41c465:	xchg   ecx,eax
  41c466:	fbld   TBYTE PTR [ebp-0xc]
  41c469:	pop    es
  41c46a:	enter  0x8966,0x3b
  41c46e:	sahf   
  41c46f:	mov    cl,0x4a
  41c471:	imul   esi,ebx,0xbef01781
  41c477:	or     eax,DWORD PTR [edx-0x4217a9f5]
  41c47d:	fnstcw WORD PTR [esi]
  41c47f:	in     al,dx
  41c480:	test   BYTE PTR [edx],bh
  41c482:	mov    al,0xbb
  41c484:	(bad)  
  41c485:	pop    ebp
  41c486:	and    DWORD PTR [edx+0x2b],ebx
  41c489:	or     DWORD PTR [eax],esi
  41c48b:	pop    eax
  41c48c:	mov    db0,ebp
  41c48f:	imul   BYTE PTR [eax+ecx*1+0x419cfa4e]
  41c496:	inc    ebx
  41c497:	push   cs
  41c498:	int    0x94
  41c49a:	fstp   st(2)
  41c49c:	ret    0xf3fd
  41c49f:	jp     0x41c49d
  41c4a1:	mov    eax,ds:0x2c430c52
  41c4a6:	(bad)  
  41c4a7:	outs   dx,DWORD PTR ds:[esi]
  41c4a8:	outs   dx,BYTE PTR ds:[esi]
  41c4a9:	ror    BYTE PTR [esi],0xa7
  41c4ac:	push   ebx
  41c4ad:	aaa    
  41c4ae:	cmp    BYTE PTR [ecx],0x17
  41c4b1:	loopne 0x41c504
  41c4b3:	mov    WORD PTR [ecx-0x25084019],fs
  41c4b9:	call   0x3bbd:0x43f7f00b
  41c4c0:	pop    DWORD PTR [edi]
  41c4c2:	test   eax,0xe684544e
  41c4c7:	sti    
  41c4c8:	jmp    0x41c4e1
  41c4ca:	push   ss
  41c4cb:	lods   al,BYTE PTR ds:[esi]
  41c4cc:	and    bh,BYTE PTR [esi+esi*8+0x26]
  41c4d0:	idiv   BYTE PTR [esi]
  41c4d2:	test   eax,0x730967e
  41c4d7:	sbb    eax,0xc51a59e5
  41c4dc:	cmp    al,0xae
  41c4de:	pop    ss
  41c4df:	ret    0xc338
  41c4e2:	add    eax,0xdfccd2f0
  41c4e7:	or     esp,edi
  41c4e9:	int3   
  41c4ea:	sbb    DWORD PTR [eax-0x35636f4b],0x89873d70
  41c4f4:	fwait
  41c4f5:	mov    dh,0x84
  41c4f7:	cs inc eax
  41c4f9:	mov    esp,0x7bd10149
  41c4fe:	push   ebx
  41c4ff:	push   0x5a96da77
  41c504:	xchg   edi,eax
  41c505:	aad    0xd1
  41c507:	test   DWORD PTR [edx+0x7d8df6d],ebp
  41c50d:	retf   
  41c50e:	adc    al,0x1d
  41c510:	jle    0x41c4a1
  41c512:	xor    ebx,DWORD PTR [esi+0x3a]
  41c515:	mov    al,ds:0x34cc3397
  41c51a:	idiv   cl
  41c51c:	out    dx,al
  41c51d:	push   eax
  41c51e:	sbb    eax,0xf051aad8
  41c523:	adc    edi,DWORD PTR [eax+0x20e3ced2]
  41c529:	outs   dx,BYTE PTR ds:[esi]
  41c52a:	stc    
  41c52b:	daa    
  41c52c:	jl     0x41c59c
  41c52e:	adc    eax,0xf04f78cc
  41c533:	sbb    DWORD PTR [edx-0x56],esi
  41c536:	add    BYTE PTR [ebx+0xe5cfc35],bh
  41c53c:	hlt    
  41c53d:	aad    0x44
  41c53f:	sub    al,0xc
  41c541:	mov    bh,0x17
  41c543:	mov    WORD PTR [edi+ebp*1],ds
  41c546:	push   cs
  41c547:	mov    ecx,0xe399a765
  41c54c:	call   FWORD PTR [ebp-0x4f9c8b79]
  41c552:	mov    ebx,0x2691d9c
  41c557:	fdiv   QWORD PTR [ebp-0x40d67733]
  41c55d:	jp     0x41c54c
  41c55f:	inc    ebx
  41c560:	test   BYTE PTR [ebp+0x7d],bh
  41c563:	and    ah,0x1d
  41c566:	sub    al,0x14
  41c568:	jb     0x41c5d5
  41c56a:	jns    0x41c552
  41c56c:	and    DWORD PTR [ebx-0x4b2cb4d9],ebx
  41c572:	dec    ecx
  41c573:	jg     0x41c543
  41c575:	fist   WORD PTR [ebx]
  41c577:	loope  0x41c550
  41c579:	pop    es
  41c57a:	fwait
  41c57b:	mov    edx,0x3bedaffe
  41c580:	aam    0x53
  41c582:	dec    esi
  41c583:	sahf   
  41c584:	sub    DWORD PTR [ebp+0x5f],0x44
  41c588:	add    bh,BYTE PTR [esi+0x23ff5b5b]
  41c58e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c58f:	bound  edx,QWORD PTR [edx]
  41c591:	sbb    al,BYTE PTR [edi+0x4c9cc5cb]
  41c597:	and    al,0xfc
  41c599:	ins    BYTE PTR es:[edi],dx
  41c59a:	xchg   edi,eax
  41c59b:	nop
  41c59c:	les    ebx,FWORD PTR [edi+0x50a9ecbb]
  41c5a2:	test   eax,0x5a200b99
  41c5a7:	in     eax,0xa5
  41c5a9:	sub    eax,0x55bb1222
  41c5ae:	adc    al,0xd5
  41c5b0:	fbld   TBYTE PTR [eax-0x6d87283b]
  41c5b6:	and    al,0x45
  41c5b8:	fisubr WORD PTR [ecx+ecx*4+0x3ea0d900]
  41c5bf:	addr16 add edx,ecx
  41c5c2:	add    bl,BYTE PTR [ebx+eax*2]
  41c5c5:	mov    ds:0x6dd9523d,eax
  41c5ca:	mov    DWORD PTR [ebx-0x6d],edx
  41c5cd:	ret    
  41c5ce:	sbb    bl,bh
  41c5d0:	jge    0x41c58c
  41c5d2:	scas   eax,DWORD PTR es:[edi]
  41c5d3:	fst    QWORD PTR [ebx-0x54]
  41c5d6:	xor    al,0xaa
  41c5d8:	xchg   ebp,eax
  41c5d9:	xor    BYTE PTR [edx+0x6e27d66e],0xef
  41c5e0:	add    al,0xf0
  41c5e2:	mul    BYTE PTR [ebp+0x36]
  41c5e5:	inc    ebp
  41c5e6:	repz js 0x41c640
  41c5e9:	data16 loopne 0x41c619
  41c5ec:	or     al,ah
  41c5ee:	dec    edx
  41c5ef:	xchg   esi,eax
  41c5f0:	jne    0x41c602
  41c5f2:	fdivr  QWORD PTR [edi-0xf]
  41c5f5:	sub    BYTE PTR [ebp-0x5d],ah
  41c5f8:	repnz mov esp,0x849b5ac5
  41c5fe:	mov    dh,0x75
  41c600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c601:	add    ebp,DWORD PTR [ecx]
  41c603:	bound  ecx,QWORD PTR [edx-0x65]
  41c606:	push   edi
  41c607:	ja     0x41c683
  41c609:	in     eax,dx
  41c60a:	fwait
  41c60b:	js     0x41c660
  41c60d:	or     al,0x7c
  41c60f:	or     eax,0xede793bb
  41c614:	rcl    DWORD PTR [edi+ebp*4+0x1b],0x8c
  41c619:	in     al,dx
  41c61a:	(bad)  [edx-0x54]
  41c61d:	or     dh,dl
  41c61f:	cwde   
  41c620:	out    0xe4,al
  41c622:	sub    BYTE PTR [edx+eiz*4],cl
  41c625:	lock iret 
  41c627:	ja     0x41c68b
  41c629:	fidiv  DWORD PTR [eax]
  41c62b:	scas   al,BYTE PTR es:[edi]
  41c62c:	mov    al,ds:0xe5562f40
  41c631:	sub    DWORD PTR [esi-0x2f],eax
  41c634:	(bad)  [eax-0x247aa125]
  41c63a:	cmc    
  41c63b:	or     eax,esi
  41c63d:	mov    ebx,0x1c825485
  41c642:	xchg   esi,esp
  41c644:	sbb    al,0x63
  41c646:	cmp    BYTE PTR [eax-0x1f],bl
  41c649:	mov    eax,0xadaa44e
  41c64e:	ret    
  41c64f:	pop    es
  41c650:	pop    edx
  41c651:	mov    eax,ds:0xee87e1a3
  41c656:	and    eax,0xbab72206
  41c65b:	push   0xffffffb2
  41c65d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c65e:	or     dh,ah
  41c660:	sti    
  41c661:	xor    ah,ch
  41c663:	aas    
  41c664:	lods   eax,DWORD PTR ds:[esi]
  41c665:	mov    bh,BYTE PTR [ebx]
  41c667:	jl     0x41c68b
  41c669:	cmp    ch,BYTE PTR [edx]
  41c66b:	sub    ebp,esi
  41c66d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c66e:	je     0x41c69f
  41c670:	ror    BYTE PTR [ecx-0x380bd208],cl
  41c676:	imul   eax,DWORD PTR [esi+eax*2],0xffffff86
  41c67a:	jl     0x41c6a4
  41c67c:	scas   eax,DWORD PTR es:[edi]
  41c67d:	xor    ch,bl
  41c67f:	or     eax,0x8dd1772f
  41c684:	xchg   BYTE PTR [edx],dl
  41c686:	jae    0x41c6f6
  41c688:	inc    esp
  41c689:	adc    ch,BYTE PTR [esp+ecx*8+0x5feb5339]
  41c690:	std    
  41c691:	in     eax,dx
  41c692:	sbb    eax,eax
  41c694:	cld    
  41c695:	shr    BYTE PTR [edi],1
  41c697:	test   al,0xf7
  41c699:	int    0x9
  41c69b:	stc    
  41c69c:	xorps  xmm7,xmm6
  41c69f:	xor    DWORD PTR [edi+ebx*8-0x26],ecx
  41c6a3:	sub    eax,0xa9b5d638
  41c6a8:	je     0x41c64f
  41c6aa:	fimul  DWORD PTR [ecx]
  41c6ac:	(bad)  
  41c6ad:	clc    
  41c6ae:	imul   edi,DWORD PTR [esi+ecx*8-0x3b],0x5d
  41c6b3:	por    mm4,mm3
  41c6b6:	mov    eax,0x44b25f43
  41c6bb:	js     0x41c66d
  41c6bd:	pop    ecx
  41c6be:	cwde   
  41c6bf:	test   al,0xe2
  41c6c1:	mov    ds:0x2e3fe701,eax
  41c6c6:	outs   dx,DWORD PTR ds:[esi]
  41c6c7:	adc    al,0x67
  41c6c9:	xchg   BYTE PTR [eax-0x36d37edb],ch
  41c6cf:	test   BYTE PTR [ebp-0x7b],dh
  41c6d2:	sub    DWORD PTR [ebp-0x68],0xffffff95
  41c6d6:	inc    esi
  41c6d7:	mov    ecx,0xf35bdd3c
  41c6dc:	pop    ecx
  41c6dd:	ds loop 0x41c6ec
  41c6e0:	sub    cl,dl
  41c6e2:	(bad)  
  41c6e3:	fidivr WORD PTR [ebx-0x27]
  41c6e6:	sub    BYTE PTR [eax-0x4f05b5cc],al
  41c6ec:	xchg   ebx,eax
  41c6ed:	mov    edx,0x5368bb1
  41c6f2:	stos   DWORD PTR es:[edi],eax
  41c6f3:	bound  esp,QWORD PTR [edx-0x696f278b]
  41c6f9:	adc    esp,DWORD PTR [esi-0x42]
  41c6fc:	jo     0x41c6f8
  41c6fe:	jno    0x41c705
  41c700:	push   es
  41c701:	jmp    0x8780:0x20993af5
  41c708:	pop    edi
  41c709:	jne    0x41c68b
  41c70b:	jg     0x41c774
  41c70d:	fsubr  QWORD PTR [edx-0x3637ccf9]
  41c713:	mov    bh,0xdd
  41c715:	mov    esp,0x9a4703a9
  41c71a:	(bad)  
  41c71b:	rcr    BYTE PTR [ebx],cl
  41c71d:	mov    edx,0x4f8163ef
  41c722:	out    0x53,al
  41c724:	in     eax,0x5
  41c726:	mov    WORD PTR [ecx],?
  41c728:	popf   
  41c729:	push   eax
  41c72a:	sub    DWORD PTR [ecx+0x321ffc97],esp
  41c730:	ficom  DWORD PTR [eax]
  41c732:	imul   ebp,DWORD PTR [ecx+0x647d8057],0xfffffffb
  41c739:	imul   edi,DWORD PTR [esi],0xffffff94
  41c73c:	jp     0x41c780
  41c73e:	add    edx,esp
  41c740:	outs   dx,BYTE PTR ds:[esi]
  41c741:	lea    edi,[eax+edx*4]
  41c744:	mov    eax,0x34c7cdcb
  41c749:	aas    
  41c74a:	jg     0x41c6de
  41c74c:	xor    BYTE PTR [eax],dl
  41c74e:	jbe    0x41c7ab
  41c750:	(bad)  
  41c751:	fdiv   QWORD PTR [eax-0x10]
  41c754:	(bad)  
  41c755:	dec    esp
  41c756:	sub    eax,esp
  41c758:	call   0x1415:0x8fa9b6c3
  41c75f:	mov    bh,0xc9
  41c761:	or     DWORD PTR [eax+0x4dbf3eb8],ecx
  41c767:	jle    0x41c795
  41c769:	enter  0x1154,0xb2
  41c76d:	cmp    al,0x4b
  41c76f:	test   bh,al
  41c771:	mov    esi,DWORD PTR [ebx+0x7e000609]
  41c777:	dec    ebp
  41c778:	push   ebx
  41c779:	mov    ch,0xfc
  41c77b:	ficomp WORD PTR [esi+ebp*8]
  41c77e:	dec    esi
  41c77f:	mov    eax,0xee9c3afd
  41c784:	adc    dl,ah
  41c786:	repz mov al,0x9
  41c789:	dec    edi
  41c78a:	pop    esi
  41c78b:	jo     0x41c7db
  41c78d:	sub    ebx,DWORD PTR [eax-0x5]
  41c790:	mov    bh,0x9e
  41c792:	cmp    DWORD PTR [edi+0x71],esi
  41c795:	fstp   st(1)
  41c797:	aam    0xca
  41c799:	ror    DWORD PTR [ebp+0x67],0x17
  41c79d:	adc    BYTE PTR [ecx-0x2bfbc28c],bl
  41c7a3:	test   eax,0x3448a702
  41c7a8:	outs   dx,BYTE PTR ds:[esi]
  41c7a9:	fmul   QWORD PTR [edx-0x1a]
  41c7ac:	dec    eax
  41c7ad:	pop    ecx
  41c7ae:	test   DWORD PTR [ecx+0xa],edx
  41c7b1:	fisttp QWORD PTR [eax-0x3ddfa0e3]
  41c7b7:	dec    edx
  41c7b8:	cmp    al,0x16
  41c7ba:	jnp    0x41c7ee
  41c7bc:	sbb    ch,BYTE PTR [ecx+0x21b4136c]
  41c7c2:	stos   DWORD PTR es:[edi],eax
  41c7c3:	cwde   
  41c7c4:	or     DWORD PTR [ecx],ebx
  41c7c6:	pop    eax
  41c7c7:	mov    bh,0x78
  41c7c9:	mov    ebp,0x51943435
  41c7ce:	pop    esp
  41c7cf:	je     0x41c7f1
  41c7d1:	xchg   ecx,eax
  41c7d2:	push   cs
  41c7d3:	mov    ecx,0xf83fe6a3
  41c7d8:	lods   eax,DWORD PTR ds:[esi]
  41c7d9:	mov    dl,0x62
  41c7db:	call   0xb486:0x1e2bf37f
  41c7e2:	dec    ebp
  41c7e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7e4:	loop   0x41c841
  41c7e6:	and    al,0x90
  41c7e8:	add    eax,0x2f0b5381
  41c7ed:	shr    edx,1
  41c7ef:	mov    ebx,0x3af3b984
  41c7f4:	pop    ss
  41c7f5:	cli    
  41c7f6:	call   0x4e06:0x9f39a665
  41c7fd:	jecxz  0x41c812
  41c7ff:	jmp    0x41c794
  41c801:	adc    dh,dh
  41c803:	dec    ecx
  41c804:	pop    ecx
  41c805:	fwait
  41c806:	scas   al,BYTE PTR es:[edi]
  41c807:	mov    ds:0xbdee0169,eax
  41c80c:	test   BYTE PTR [eax-0x15],dl
  41c80f:	test   esi,esi
  41c811:	sub    BYTE PTR [esp+eiz*2-0x73],bh
  41c815:	push   edx
  41c816:	nop
  41c817:	cmp    eax,DWORD PTR [edx]
  41c819:	lahf   
  41c81a:	cmp    al,0xf6
  41c81c:	jno    0x41c7d7
  41c81e:	rol    DWORD PTR [eax+0x6],cl
  41c821:	dec    edi
  41c822:	ret    
  41c823:	popf   
  41c824:	add    al,0x27
  41c826:	push   ebx
  41c827:	cmp    eax,0x16b9903e
  41c82c:	aas    
  41c82d:	cmp    eax,DWORD PTR [esi+0x3b9a8784]
  41c833:	loop   0x41c89e
  41c835:	xor    edi,DWORD PTR [ebx+0x2a]
  41c838:	jo     0x41c892
  41c83a:	in     al,0x35
  41c83c:	push   eax
  41c83d:	pop    esi
  41c83e:	mov    al,ds:0x47305434
  41c843:	push   0xb0ec841d
  41c848:	and    eax,0xfa40816
  41c84d:	or     edi,DWORD PTR [eax-0x7a]
  41c850:	pop    ebp
  41c851:	stos   BYTE PTR es:[edi],al
  41c852:	and    al,0x5
  41c854:	mov    BYTE PTR [ecx+0x52],al
  41c857:	sbb    BYTE PTR [ebp-0x69acd7d7],dl
  41c85d:	mov    ecx,0x1465cc9d
  41c862:	je     0x41c880
  41c864:	int    0xdc
  41c866:	and    eax,0x18b490d1
  41c86b:	sbb    bl,dl
  41c86d:	pop    eax
  41c86e:	jb     0x41c820
  41c870:	out    0xec,al
  41c872:	stc    
  41c873:	sbb    eax,0xfe6e70cc
  41c878:	dec    esi
  41c879:	js     0x41c879
  41c87b:	jecxz  0x41c8e7
  41c87d:	or     BYTE PTR ds:0x5d6f9df,dh
  41c883:	mov    fs:0x74884d5a,al
  41c889:	sbb    dl,BYTE PTR [esp+ebx*8-0x2a]
  41c88d:	or     BYTE PTR [edi+0x79],bl
  41c890:	xchg   edx,eax
  41c891:	cmp    al,0x72
  41c893:	push   0xff8f40bd
  41c898:	fisttp DWORD PTR [ebx]
  41c89a:	push   edi
  41c89b:	mov    ds:0x965d4631,eax
  41c8a0:	dec    eax
  41c8a1:	xchg   esp,eax
  41c8a2:	jge    0x41c8ed
  41c8a4:	mov    al,ds:0xbb520702
  41c8a9:	pop    eax
  41c8aa:	aad    0x2
  41c8ac:	push   0x45
  41c8ae:	in     al,0x9a
  41c8b0:	mov    bh,0xa4
  41c8b2:	mov    ch,0xed
  41c8b4:	mov    ds,WORD PTR [edx+0x5de7dd7b]
  41c8ba:	mov    dh,BYTE PTR [esi+0x6c]
  41c8bd:	mov    eax,0xd5f118a3
  41c8c2:	es pop ss
  41c8c4:	mov    bh,0xa4
  41c8c6:	mov    ebp,0xbcd9a100
  41c8cb:	dec    ecx
  41c8cc:	sbb    ch,bh
  41c8ce:	pop    ds
  41c8cf:	arpl   di,bp
  41c8d1:	(bad)  
  41c8d2:	fld    QWORD PTR [ebx+0x37]
  41c8d5:	cmp    ecx,ebp
  41c8d7:	sub    ah,BYTE PTR [esi]
  41c8d9:	dec    edx
  41c8da:	mov    DWORD PTR [ebp-0x74],0xe1cced2a
  41c8e1:	das    
  41c8e2:	inc    eax
  41c8e3:	pop    ds
  41c8e4:	fcomi  st,st(5)
  41c8e6:	popa   
  41c8e7:	pushf  
  41c8e8:	dec    eax
  41c8e9:	add    eax,0xa6c76202
  41c8ee:	retf   
  41c8ef:	add    ebx,esp
  41c8f1:	push   edx
  41c8f2:	add    BYTE PTR [edx+0x1a],al
  41c8f5:	push   ds
  41c8f6:	pop    ebx
  41c8f7:	sbb    DWORD PTR [ecx],ecx
  41c8f9:	call   0xcd61:0xee825175
  41c900:	gs ss and edx,ebx
  41c904:	sbb    ah,BYTE PTR [eax+ebp*1+0x3f]
  41c908:	outs   dx,BYTE PTR ds:[esi]
  41c909:	sub    ecx,0x20
  41c90c:	mov    ecx,DWORD PTR [ecx-0x27]
  41c90f:	mov    bl,0x20
  41c911:	pop    ss
  41c912:	pop    edx
  41c913:	mov    esp,esi
  41c915:	in     al,0xf7
  41c917:	jno    0x41c924
  41c919:	sti    
  41c91a:	push   cs
  41c91b:	outs   dx,DWORD PTR ds:[esi]
  41c91c:	cmp    ebx,DWORD PTR [edi+0x6d4091c]
  41c922:	add    ch,BYTE PTR [edi]
  41c924:	hlt    
  41c925:	cmp    ebx,DWORD PTR [ecx+0x7e0e1da9]
  41c92b:	retf   0x42de
  41c92e:	enter  0xadee,0x4e
  41c932:	js     0x41c915
  41c934:	or     cl,BYTE PTR [eax-0x2e9e4424]
  41c93a:	xor    al,0x1b
  41c93c:	es jl  0x41c938
  41c93f:	imul   ecx,DWORD PTR [ebx],0x586cf6c0
  41c945:	add    eax,DWORD PTR ds:0xaf32123f
  41c94b:	mov    eax,0x906117ed
  41c950:	xlat   BYTE PTR ds:[ebx]
  41c951:	push   esi
  41c952:	dec    edx
  41c953:	adc    al,0x3a
  41c955:	es test eax,0xe9392139
  41c95b:	in     eax,dx
  41c95c:	mov    al,ds:0x2bf8184c
  41c961:	pop    es
  41c962:	xchg   ebp,eax
  41c963:	ins    DWORD PTR es:[edi],dx
  41c964:	adc    ah,0xf5
  41c967:	stos   DWORD PTR es:[edi],eax
  41c968:	xchg   edx,eax
  41c969:	(bad)  
  41c96a:	aad    0xf3
  41c96c:	mov    BYTE PTR [edi+0x34be6aae],dl
  41c972:	into   
  41c973:	mov    BYTE PTR [edi],dh
  41c975:	pop    ds
  41c976:	mov    dh,0x58
  41c978:	(bad)  
  41c979:	(bad)  
  41c97b:	sbb    DWORD PTR [ebp-0x2b86a37c],0x460d8e1f
  41c985:	addr16 dec eax
  41c987:	mov    bh,0x6d
  41c989:	jecxz  0x41ca05
  41c98b:	scas   al,BYTE PTR es:[edi]
  41c98c:	popf   
  41c98d:	pusha  
  41c98e:	cmp    ebp,DWORD PTR [eax-0x4b6f63f9]
  41c994:	int3   
  41c995:	gs in  al,0x24
  41c998:	pop    eax
  41c999:	sbb    eax,0x24df8c86
  41c99e:	(bad)  
  41c99f:	fs pop ecx
  41c9a1:	data16 jne 0x41c952
  41c9a4:	les    ebp,FWORD PTR [eax+ebx*4-0x5caeee6b]
  41c9ab:	mov    ds:0x3d45be92,al
  41c9b0:	add    DWORD PTR [edx+ebx*2+0x45d14a62],esp
  41c9b7:	outs   dx,BYTE PTR ds:[esi]
  41c9b8:	add    eax,0x1394ef17
  41c9bd:	sbb    esi,DWORD PTR [esp+eiz*8]
  41c9c0:	mov    cl,0xd5
  41c9c2:	in     eax,dx
  41c9c3:	dec    eax
  41c9c4:	in     eax,dx
  41c9c5:	(bad)  
  41c9c6:	fisubr WORD PTR [ecx]
  41c9c8:	leave  
  41c9c9:	rcl    esi,0xb1
  41c9cc:	mov    ds:0xad91ec57,al
  41c9d1:	mov    ecx,0x846f9aec
  41c9d6:	sbb    esi,DWORD PTR [edi-0x7d6dba1]
  41c9dc:	mov    edi,0x55d186c2
  41c9e1:	mov    cl,0x10
  41c9e3:	jle    0x41ca22
  41c9e5:	fsub   DWORD PTR [ebx-0x6402fb50]
  41c9eb:	repnz mov BYTE PTR [ecx+esi*4+0xbfae102],ah
  41c9f3:	xor    al,0x0
  41c9f5:	dec    edi
  41c9f6:	sub    DWORD PTR [edx],ecx
  41c9f8:	fst    DWORD PTR [esi+0x5c26495e]
  41c9fe:	sub    al,0xf6
  41ca00:	pop    edi
  41ca01:	outs   dx,BYTE PTR ds:[esi]
  41ca02:	std    
  41ca03:	pop    ds
  41ca04:	mov    WORD PTR ds:0xf5b84fa5,?
  41ca0a:	jbe    0x41c9f7
  41ca0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca0d:	pop    ebp
  41ca0e:	push   ebp
  41ca0f:	(bad)  
  41ca10:	jo     0x41c9cb
  41ca12:	add    cl,ch
  41ca14:	pop    edi
  41ca15:	sbb    ch,BYTE PTR [eax+ebx*2-0x35]
  41ca19:	cld    
  41ca1a:	sbb    esp,DWORD PTR [eax-0x70d921e3]
  41ca20:	jmp    0x26d:0xcaa63556
  41ca27:	clc    
  41ca28:	mov    ebp,0x3774d7d0
  41ca2d:	fbstp  TBYTE PTR [eax]
  41ca2f:	into   
  41ca30:	daa    
  41ca31:	lahf   
  41ca32:	rcr    bl,cl
  41ca34:	sub    bh,cl
  41ca36:	pop    esp
  41ca37:	sbb    BYTE PTR [edx],ch
  41ca39:	stos   DWORD PTR es:[edi],eax
  41ca3a:	shl    DWORD PTR [ecx],1
  41ca3c:	inc    esp
  41ca3d:	pop    eax
  41ca3e:	das    
  41ca3f:	xor    BYTE PTR [esi-0x65163406],dl
  41ca45:	xor    BYTE PTR [eax],dl
  41ca47:	fst    DWORD PTR [ecx+0x78]
  41ca4a:	arpl   WORD PTR [edx],bx
  41ca4c:	lds    esi,FWORD PTR [ebx-0x19]
  41ca4f:	aas    
  41ca50:	xor    DWORD PTR [ebp-0x72756d32],ecx
  41ca56:	aas    
  41ca57:	fnstcw WORD PTR [edx]
  41ca59:	(bad)  
  41ca5a:	jnp    0x41ca18
  41ca5c:	sahf   
  41ca5d:	icebp  
  41ca5e:	ja     0x41ca1f
  41ca60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca62:	rcr    DWORD PTR [ebp+0x7be1dcc0],1
  41ca68:	push   edx
  41ca69:	sub    DWORD PTR [ebx-0x71],esi
  41ca6c:	mov    dl,0x70
  41ca6e:	mov    bl,0x6d
  41ca70:	pmulhw mm1,QWORD PTR [eax+ebp*8]
  41ca74:	push   esi
  41ca75:	imul   ebp,DWORD PTR [edx],0xffffffcc
  41ca78:	fimul  WORD PTR [edi]
  41ca7a:	xlat   BYTE PTR ds:[ebx]
  41ca7b:	call   FWORD PTR [ebx-0x2f]
  41ca7e:	repz sub bh,BYTE PTR [ebx+0x27]
  41ca82:	mov    eax,ds:0x500d362f
  41ca87:	sbb    dh,BYTE PTR [edx]
  41ca89:	dec    esi
  41ca8a:	cmp    DWORD PTR [ebp+0x3a],edx
  41ca8d:	(bad)  
  41ca8e:	ss dec esp
  41ca90:	repz mov al,0x2b
  41ca93:	into   
  41ca94:	sar    bh,cl
  41ca96:	test   DWORD PTR [edi+0x3a],esp
  41ca99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca9a:	pop    esi
  41ca9b:	in     al,dx
  41ca9c:	and    esi,DWORD PTR [ecx+esi*2+0x3e6da984]
  41caa3:	fild   QWORD PTR [eax+0x7e]
  41caa6:	push   esp
  41caa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caa8:	sub    ecx,ebp
  41caaa:	and    ecx,DWORD PTR [eax-0x62]
  41caad:	jae    0x41ca56
  41caaf:	pusha  
  41cab0:	add    ch,ah
  41cab2:	mov    eax,ds:0xa9cd604b
  41cab7:	inc    esp
  41cab8:	dec    esp
  41cab9:	ins    BYTE PTR es:[edi],dx
  41caba:	lods   al,BYTE PTR fs:[esi]
  41cabc:	(bad)  
  41cabd:	retf   0x5d61
  41cac0:	mov    al,ds:0x6f109910
  41cac5:	mov    ds:0x4136a0a,al
  41caca:	jg     0x41ca7c
  41cacc:	rcl    DWORD PTR [edx],cl
  41cace:	inc    edx
  41cacf:	shr    DWORD PTR [eax],cl
  41cad1:	outs   dx,DWORD PTR ds:[esi]
  41cad2:	xchg   ebp,eax
  41cad3:	sub    ebx,DWORD PTR [esi+eiz*8]
  41cad6:	fiadd  DWORD PTR [eax+0x7]
  41cad9:	inc    esp
  41cada:	call   0x43063b2
  41cadf:	push   0xffffff8c
  41cae1:	cli    
  41cae2:	and    edi,ecx
  41cae4:	push   cs
  41cae5:	adc    ecx,DWORD PTR [edi]
  41cae7:	mov    esi,0x73542576
  41caed:	push   ecx
  41caee:	sti    
  41caef:	push   edi
  41caf0:	std    
  41caf1:	stos   DWORD PTR es:[edi],eax
  41caf2:	add    BYTE PTR [ebp+0x42],cl
  41caf5:	push   edx
  41caf6:	dec    esp
  41caf7:	pop    eax
  41caf8:	int    0xdb
  41cafa:	add    ah,BYTE PTR [ebp-0x24e446b2]
  41cb00:	dec    edx
  41cb01:	data16 xlat BYTE PTR ds:[ebx]
  41cb03:	pusha  
  41cb04:	mov    al,ds:0x19c1ea8f
  41cb09:	add    edx,esi
  41cb0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb0c:	sbb    eax,0x8b276671
  41cb11:	add    eax,0x754f9a39
  41cb16:	push   es
  41cb17:	in     al,0x20
  41cb19:	mov    ebp,0xe5db7bbb
  41cb1e:	idiv   esi
  41cb20:	test   BYTE PTR [eax+ebp*2-0x4f038c87],ah
  41cb27:	ins    DWORD PTR es:[edi],dx
  41cb28:	cmc    
  41cb29:	mov    ah,0xfb
  41cb2b:	sub    ecx,DWORD PTR [eax-0x75659027]
  41cb31:	xor    cl,bl
  41cb33:	clc    
  41cb34:	repz dec eax
  41cb36:	(bad)  
  41cb38:	(bad)  
  41cb39:	bound  edi,QWORD PTR ds:0xb3e8bbb7
  41cb3f:	ja     0xdf426cc
  41cb45:	cmp    cl,BYTE PTR [ecx+ebx*1-0x5]
  41cb49:	mov    ds:0x39321906,eax
  41cb4e:	push   esp
  41cb4f:	pop    ss
  41cb50:	pop    esi
  41cb51:	push   ebp
  41cb52:	(bad)  
  41cb53:	lock jl 0x41cadd
  41cb56:	push   0x73
  41cb58:	loope  0x41cb99
  41cb5a:	xor    dl,BYTE PTR [ebx+0x77e10bba]
  41cb60:	imul   edx,DWORD PTR [esi-0xb33a3a4],0x45
  41cb67:	test   BYTE PTR [ebp+edx*2+0x3e],bh
  41cb6b:	scas   al,BYTE PTR es:[edi]
  41cb6c:	std    
  41cb6d:	cdq    
  41cb6e:	aad    0xa3
  41cb70:	pusha  
  41cb71:	xor    ebx,ebp
  41cb73:	popa   
  41cb74:	push   ebp
  41cb75:	xor    al,0x73
  41cb77:	call   0xba2e:0x33a7bdbd
  41cb7e:	out    0x18,eax
  41cb80:	retf   0x2399
  41cb83:	sbb    DWORD PTR [ebx-0x2a9a94e7],edx
  41cb89:	jp     0x41cb62
  41cb8b:	cmp    eax,eax
  41cb8d:	adc    dl,BYTE PTR [ebx]
  41cb8f:	lock xchg BYTE PTR [esi+0x38],al
  41cb93:	cdq    
  41cb94:	sbb    eax,0xb0f19ac0
  41cb99:	rol    BYTE PTR [edx-0x1a3b91de],0x1f
  41cba0:	fdivr  st,st(0)
  41cba2:	loopne 0x41cb6c
  41cba4:	mov    ebx,0xcb6f8e1
  41cba9:	pushf  
  41cbaa:	and    eax,0x6266f69
  41cbaf:	inc    esi
  41cbb0:	sbb    esp,ebx
  41cbb2:	adc    eax,0xc3faf715
  41cbb7:	inc    eax
  41cbb8:	add    esi,ebx
  41cbba:	popa   
  41cbbb:	hlt    
  41cbbc:	jl     0x41cb7b
  41cbbe:	pop    esi
  41cbbf:	or     eax,DWORD PTR [edx]
  41cbc1:	test   al,0xbc
  41cbc3:	dec    ebx
  41cbc4:	je     0x41cb9e
  41cbc6:	pushw  0x8231
  41cbca:	xor    bh,bh
  41cbcc:	out    0x96,al
  41cbce:	aam    0x10
  41cbd0:	xor    DWORD PTR [eax+0xd205481],eax
  41cbd6:	mov    ecx,0xda5c4c32
  41cbdb:	aaa    
  41cbdc:	lds    ebp,FWORD PTR [eax]
  41cbde:	loop   0x41cc1b
  41cbe0:	xor    al,0xcd
  41cbe2:	push   ecx
  41cbe3:	ja     0x41cbe3
  41cbe5:	xor    eax,0x2ae605f0
  41cbea:	jle    0x41cc4f
  41cbec:	iret   
  41cbed:	mov    eax,es
  41cbef:	(bad)  
  41cbf0:	inc    esi
  41cbf1:	sub    DWORD PTR [edx-0x14],eax
  41cbf4:	ins    BYTE PTR es:[edi],dx
  41cbf5:	cmp    eax,DWORD PTR [edi]
  41cbf7:	ja     0x41cc69
  41cbf9:	xor    edi,DWORD PTR [esi+0x5d]
  41cbfc:	xchg   ecx,ecx
  41cbfe:	mov    dl,0x93
  41cc00:	sbb    ah,ch
  41cc02:	cmp    DWORD PTR [edx],ebp
  41cc04:	xchg   ebx,eax
  41cc05:	mov    ebx,0xcbce9671
  41cc0a:	adc    BYTE PTR [edi],0xbe
  41cc0d:	mov    esi,0xd3e585e8
  41cc12:	test   al,0x1f
  41cc14:	fcomp  QWORD PTR [ecx+edi*1+0x60]
  41cc18:	push   ecx
  41cc19:	mov    edx,0xdbf04ec8
  41cc1e:	sbb    BYTE PTR [edi-0x681fdc1e],cl
  41cc24:	je     0x41cc0f
  41cc26:	push   cs
  41cc27:	fild   QWORD PTR [edi+0x49d14c87]
  41cc2d:	mov    ds:0xaf4bfd00,eax
  41cc32:	(bad)  
  41cc33:	jecxz  0x41cbd3
  41cc35:	or     dh,BYTE PTR [eax+ebx*1-0x3a]
  41cc39:	xchg   edi,eax
  41cc3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc3b:	or     eax,0xe0d2da0f
  41cc40:	mov    ecx,DWORD PTR [edi+0x19cf8639]
  41cc46:	xchg   esp,eax
  41cc47:	sbb    eax,0xa252a507
  41cc4c:	adc    eax,0x13e68657
  41cc51:	or     al,0x6e
  41cc53:	fwait
  41cc54:	arpl   WORD PTR [edi+edi*8+0x5869146a],sp
  41cc5b:	add    DWORD PTR [eax+0x1b0463b7],ecx
  41cc61:	adc    DWORD PTR [edx+0x71f73e4a],edx
  41cc67:	add    esi,DWORD PTR cs:[edi+ebp*1+0x45e28b9c]
  41cc6f:	mov    ebx,0x4152770
  41cc74:	ins    DWORD PTR es:[edi],dx
  41cc75:	push   0xffffffa9
  41cc77:	sti    
  41cc78:	pop    edx
  41cc79:	and    ecx,ecx
  41cc7b:	mov    cl,0x47
  41cc7d:	cmp    eax,0x77805c1d
  41cc82:	sahf   
  41cc83:	mov    esi,0x16b9e43d
  41cc88:	nop
  41cc89:	jbe    0x41ccd9
  41cc8b:	repnz dec ecx
  41cc8d:	xchg   ebx,eax
  41cc8e:	pop    esi
  41cc8f:	add    eax,eax
  41cc91:	mov    ebp,edi
  41cc93:	push   esi
  41cc94:	fist   WORD PTR [ebp-0x5c]
  41cc97:	pop    edi
  41cc98:	or     dl,BYTE PTR [edi+0x56e66b27]
  41cc9e:	mov    ds:0xdfc64222,al
  41cca3:	cmp    ecx,DWORD PTR [esi+eiz*4]
  41cca6:	retfw  
  41cca8:	xor    eax,0xbfac1dd6
  41ccad:	je     0x41cc9e
  41ccaf:	mov    dh,0xac
  41ccb1:	cmp    edx,esi
  41ccb3:	sub    DWORD PTR [esi-0x3bcaccd9],esi
  41ccb9:	or     dl,BYTE PTR [edi-0x58]
  41ccbc:	xchg   DWORD PTR [edx],ebx
  41ccbe:	xchg   ebx,eax
  41ccbf:	push   cs
  41ccc0:	xor    ch,BYTE PTR [edi+ebp*8]
  41ccc3:	(bad)  [esi+0x2cfea31b]
  41ccc9:	jnp    0x41ccde
  41cccb:	push   esi
  41cccc:	push   edx
  41cccd:	mov    esi,0xd2411880
  41ccd2:	aam    0x51
  41ccd4:	inc    edx
  41ccd5:	and    bh,ch
  41ccd7:	xchg   edi,eax
  41ccd8:	out    0xb3,eax
  41ccda:	les    eax,FWORD PTR [eax+eax*1+0x767a8eb6]
  41cce1:	(bad)  
  41cce2:	mov    ecx,0x44d578aa
  41cce7:	out    dx,al
  41cce8:	(bad)
  41ccec:	pop    ebx
  41cced:	test   DWORD PTR [edi-0x597504c0],ebx
  41ccf3:	(bad)  
  41ccf4:	hlt    
  41ccf5:	xchg   BYTE PTR ds:[edx+0x321d9184],dl
  41ccfc:	int3   
  41ccfd:	inc    ecx
  41ccfe:	stc    
  41ccff:	into   
  41cd00:	and    al,0x27
  41cd02:	cmp    eax,DWORD PTR [edi-0x19bde212]
  41cd08:	jg     0x41cd75
  41cd0a:	test   al,0x5c
  41cd0c:	retf   0x1ea0
  41cd0f:	mov    BYTE PTR [edx],bl
  41cd11:	fbstp  TBYTE PTR [edx+0x7fafa894]
  41cd17:	push   cs
  41cd18:	pop    edx
  41cd19:	stc    
  41cd1a:	es jecxz 0x41cd4a
  41cd1d:	sbb    al,0x61
  41cd1f:	mov    edx,0x7f90a26a
  41cd24:	ds push 0xc8f4e12c
  41cd2a:	sbb    bl,BYTE PTR [esi-0x6f0f7184]
  41cd30:	sahf   
  41cd31:	sar    BYTE PTR [ebp-0x5dfdd6e9],cl
  41cd37:	sbb    BYTE PTR [ebp+0x38],bh
  41cd3a:	fdivr  QWORD PTR [edx]
  41cd3c:	adc    ebp,DWORD PTR [ebx+ecx*1]
  41cd3f:	add    eax,0x94125fec
  41cd44:	inc    BYTE PTR gs:[ecx-0x22]
  41cd48:	in     al,dx
  41cd49:	test   eax,0xf9c1e6b3
  41cd4e:	daa    
  41cd4f:	cwde   
  41cd50:	jecxz  0x41cd90
  41cd52:	stos   DWORD PTR es:[edi],eax
  41cd53:	sub    al,0x80
  41cd56:	cli    
  41cd57:	call   0xe6d56a58
  41cd5c:	adc    eax,0x4389e785
  41cd61:	cmc    
  41cd62:	sbb    eax,0xebeff76a
  41cd67:	(bad)  
  41cd68:	mov    eax,DWORD PTR [edx-0x72]
  41cd6b:	xchg   edi,eax
  41cd6c:	repz mov eax,ds:0x426207f
  41cd72:	dec    edx
  41cd73:	fistp  WORD PTR ds:0x71d94f68
  41cd79:	enter  0xcc10,0xb1
  41cd7d:	pop    edx
  41cd7e:	ja     0x41cdd3
  41cd80:	pop    edx
  41cd81:	cmp    esi,DWORD PTR [ebp-0x197f997d]
  41cd87:	repnz outs dx,DWORD PTR ds:[esi]
  41cd89:	not    BYTE PTR [ecx+0x147ee053]
  41cd8f:	daa    
  41cd90:	jmp    0x41cd84
  41cd92:	jbe    0x41cd79
  41cd94:	mov    edx,0xe2ca9804
  41cd99:	mov    dl,dh
  41cd9b:	inc    esi
  41cd9c:	inc    ecx
  41cd9d:	or     DWORD PTR [edx-0x74],eax
  41cda0:	ret    0xadf
  41cda3:	add    ebx,DWORD PTR [esi-0x3d87b7ed]
  41cda9:	fs je  0x41cdf9
  41cdac:	add    al,0x7
  41cdae:	mov    ecx,0x7ef26dd3
  41cdb3:	jne    0x41cd6f
  41cdb5:	sbb    al,BYTE PTR [esp+ebx*8]
  41cdb8:	cmp    cl,al
  41cdba:	cmp    BYTE PTR [edx],0xbc
  41cdbd:	sub    BYTE PTR [edi-0x11],cl
  41cdc0:	in     eax,dx
  41cdc1:	jl     0x41cd7d
  41cdc3:	mov    al,ds:0x5eadec
  41cdc8:	pop    ss
  41cdc9:	fmul   DWORD PTR [esi+0x62e79bd3]
  41cdcf:	xchg   edi,eax
  41cdd0:	and    edi,DWORD PTR [esi]
  41cdd2:	pusha  
  41cdd3:	push   DWORD PTR [edx]
  41cdd5:	int3   
  41cdd6:	push   esp
  41cdd7:	xchg   cl,ch
  41cdd9:	adc    DWORD PTR [ebx+0x1b],esp
  41cddc:	addr16 xchg ebx,eax
  41cdde:	mov    dl,0x65
  41cde0:	repz lds ebp,FWORD PTR [ebx-0xa03b315]
  41cde7:	or     dl,BYTE PTR [ebx-0x5d]
  41cdea:	sbb    edx,DWORD PTR [ebp-0x7a8683bf]
  41cdf0:	icebp  
  41cdf1:	daa    
  41cdf2:	cdq    
  41cdf3:	stos   BYTE PTR es:[edi],al
  41cdf4:	adc    esi,DWORD PTR [ebp-0x2165bdce]
  41cdfa:	cmp    al,al
  41cdfc:	mov    eax,0x91d02bac
  41ce01:	cwde   
  41ce02:	retf   0x431c
  41ce05:	pop    edx
  41ce06:	mov    ah,0x14
  41ce08:	ror    ebx,0x60
  41ce0b:	and    BYTE PTR [edi],dh
  41ce0d:	dec    esi
  41ce0e:	add    al,0x69
  41ce10:	out    0x21,eax
  41ce12:	mov    ch,0xde
  41ce14:	xor    BYTE PTR [eax-0x4bfb9054],0x4c
  41ce1b:	in     eax,0xa
  41ce1d:	into   
  41ce1e:	icebp  
  41ce1f:	pop    eax
  41ce20:	loope  0x41cdfd
  41ce22:	pop    edx
  41ce23:	inc    ebp
  41ce24:	xchg   BYTE PTR [ecx-0x4461ebf4],dh
  41ce2a:	add    al,0x28
  41ce2c:	adc    esi,ecx
  41ce2e:	jg     0x41cde8
  41ce30:	fld    QWORD PTR [ebx+edx*2+0x6a25a262]
  41ce37:	(bad)  cs:[ebp-0x4c]
  41ce3b:	jne    0x41cebb
  41ce3d:	inc    eax
  41ce3e:	mov    DWORD PTR [ebx+0x77a336fb],0xe4d7e14c
  41ce48:	das    
  41ce49:	fwait
  41ce4a:	pop    ds
  41ce4b:	iret   
  41ce4c:	xchg   DWORD PTR [ecx-0x3a],ebx
  41ce4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce50:	retf   0x1118
  41ce53:	and    DWORD PTR [eax],ebx
  41ce55:	popf   
  41ce56:	inc    esp
  41ce57:	lods   al,BYTE PTR ds:[esi]
  41ce58:	icebp  
  41ce59:	fisub  DWORD PTR [esi-0x1aa01148]
  41ce5f:	pop    ds
  41ce60:	aam    0x9f
  41ce62:	sbb    DWORD PTR [ecx+0x699f6e6e],ebp
  41ce68:	add    ah,BYTE PTR [esi]
  41ce6a:	cwde   
  41ce6b:	icebp  
  41ce6c:	and    eax,0xcd9959c7
  41ce71:	ins    DWORD PTR es:[edi],dx
  41ce72:	lods   eax,DWORD PTR ds:[esi]
  41ce73:	popf   
  41ce74:	or     DWORD PTR ds:0xb3347e49,eax
  41ce7a:	ins    BYTE PTR es:[edi],dx
  41ce7b:	stos   DWORD PTR es:[edi],eax
  41ce7c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce7e:	sub    BYTE PTR [esi],cl
  41ce80:	or     bl,BYTE PTR [edx-0x6ed2df24]
  41ce86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce87:	(bad)  
  41ce88:	xchg   esi,eax
  41ce89:	fsubr  DWORD PTR [ebx+0x53]
  41ce8c:	cmp    BYTE PTR [edx],ch
  41ce8e:	pop    es
  41ce8f:	or     ecx,DWORD PTR [ecx]
  41ce91:	(bad)  
  41ce93:	(bad)  
  41ce94:	xor    ebx,edi
  41ce96:	pusha  
  41ce97:	cmp    eax,0xfe221971
  41ce9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce9d:	dec    ebx
  41ce9e:	out    dx,eax
  41ce9f:	push   cs
  41cea0:	inc    edx
  41cea1:	call   0xf238353d
  41cea6:	pop    ecx
  41cea7:	push   cs
  41cea8:	lods   al,BYTE PTR ds:[esi]
  41cea9:	sub    eax,0x3a5c827a
  41ceae:	lds    eax,FWORD PTR [edx+0x548ca3fc]
  41ceb4:	mov    bh,BYTE PTR [ecx-0x22]
  41ceb7:	lds    edx,FWORD PTR [eax+edx*2-0x4cb54a5a]
  41cebe:	jmp    0x975d:0x8d10ff5e
  41cec5:	nop
  41cec6:	inc    ecx
  41cec7:	call   0x8037:0xf62c2190
  41cece:	retf   0xcaf0
  41ced1:	adc    esi,DWORD PTR [esi]
  41ced3:	cmp    eax,0x2978de28
  41ced8:	sub    BYTE PTR [edi+esi*2-0x669c616a],bl
  41cedf:	mov    edi,0x9496fbfc
  41cee4:	mov    eax,0xb672fb18
  41cee9:	mov    ebx,0xf582b712
  41ceee:	bsf    edi,DWORD PTR ds:0x88429431
  41cef5:	push   edx
  41cef6:	sbb    bh,BYTE PTR [edx]
  41cef8:	xchg   esi,eax
  41cef9:	mov    bh,0x9e
  41cefb:	pop    es
  41cefc:	fadd   st,st(3)
  41cefe:	mov    ds:0xa46b6cef,al
  41cf03:	cli    
  41cf04:	fwait
  41cf05:	jecxz  0x41cede
  41cf07:	jmp    0x204c41b2
  41cf0c:	cmp    DWORD PTR [eax+ebx*4],0x21
  41cf10:	fild   WORD PTR [ebp-0x7a3b8383]
  41cf16:	and    DWORD PTR [ebp-0x108fea3],ebp
  41cf1c:	jno    0x41cebc
  41cf1e:	adc    dh,BYTE PTR [eax+ebp*4-0xf]
  41cf22:	sub    bl,bh
  41cf24:	xor    al,ch
  41cf26:	ficomp DWORD PTR [eax-0x374f494b]
  41cf2c:	aad    0xb9
  41cf2e:	mov    bh,0xbc
  41cf30:	cmp    al,0x87
  41cf32:	daa    
  41cf33:	jmp    0x6639cb7d
  41cf38:	mov    BYTE PTR [esi+0x5b65a2f1],0xfc
  41cf3f:	pop    edx
  41cf40:	jmp    0x41cfab
  41cf42:	mov    ah,0xca
  41cf44:	stc    
  41cf45:	pushf  
  41cf46:	out    0xf0,eax
  41cf48:	push   0xffffff8a
  41cf4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf4b:	(bad)  
  41cf4c:	aam    0x18
  41cf4e:	xor    cl,0xe2
  41cf51:	aam    0xe7
  41cf53:	inc    edi
  41cf54:	shr    DWORD PTR [esi],0x4d
  41cf57:	mov    cl,BYTE PTR [esp+ebx*8-0x9]
  41cf5b:	sbb    DWORD PTR ds:0xdd8569c4,eax
  41cf61:	and    BYTE PTR [edx-0x6cad1872],cl
  41cf67:	push   cs
  41cf68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf69:	lds    ebx,FWORD PTR [ebx]
  41cf6b:	xor    ebx,DWORD PTR [ebx]
  41cf6d:	in     eax,dx
  41cf6e:	ds mov esi,0xf0b58972
  41cf74:	(bad)  
  41cf75:	push   ebp
  41cf76:	aad    0x66
  41cf78:	mov    ebp,0x30718133
  41cf7d:	int3   
  41cf7e:	sti    
  41cf7f:	sbb    cl,BYTE PTR [esp+0x58ad8b16]
  41cf86:	aam    0x13
  41cf88:	sbb    BYTE PTR [ebp+0x590a5eca],ch
  41cf8e:	mov    ch,0xbf
  41cf90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf91:	xor    DWORD PTR [edx-0x40],eax
  41cf94:	leave  
  41cf95:	out    0xeb,eax
  41cf97:	fimul  WORD PTR [ebx+0x42]
  41cf9a:	dec    esi
  41cf9b:	jg     0x41cf94
  41cf9d:	mov    al,0x2c
  41cf9f:	cmc    
  41cfa0:	icebp  
  41cfa1:	outs   dx,DWORD PTR ds:[esi]
  41cfa2:	in     al,0xc4
  41cfa4:	or     eax,0x4032a283
  41cfa9:	aas    
  41cfaa:	enter  0x3f60,0xde
  41cfae:	ficomp DWORD PTR [esi]
  41cfb0:	popa   
  41cfb1:	ret    
  41cfb2:	test   BYTE PTR [edi+0x3cd67c5],dh
  41cfb8:	fmul   QWORD PTR [edx-0x40]
  41cfbb:	dec    ebp
  41cfbc:	jnp    0x41cfab
  41cfbe:	gs stos DWORD PTR es:[edi],eax
  41cfc0:	dec    edx
  41cfc1:	xchg   BYTE PTR [ebx+0x59],cl
  41cfc4:	sub    DWORD PTR [esi+eiz*8],ebx
  41cfc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfc8:	das    
  41cfc9:	mov    bh,0x1b
  41cfcb:	out    0x70,al
  41cfcd:	push   ebp
  41cfce:	mov    edx,ebx
  41cfd0:	test   al,0x1
  41cfd2:	jmp    0x6335:0x5fa6c10d
  41cfd9:	lahf   
  41cfda:	in     al,dx
  41cfdb:	idiv   BYTE PTR [eax-0x5e]
  41cfde:	inc    esp
  41cfdf:	(bad)  
  41cfe0:	fstp   QWORD PTR [ebp-0x2581a9e]
  41cfe6:	sbb    bl,bl
  41cfe8:	(bad)  
  41cfe9:	dec    ebx
  41cfea:	mov    ah,0xfc
  41cfec:	mov    bh,0x7d
  41cfee:	mov    dh,0xa2
  41cff0:	ret    
  41cff1:	out    0x85,al
  41cff3:	or     edi,DWORD PTR [esi+0x2dfffef]
  41cff9:	in     al,dx
  41cffa:	ja     0x41cfd5
  41cffc:	adc    bl,bh
  41cffe:	cli    
  41cfff:	data16 or al,BYTE PTR [ecx]
  41d002:	pop    ecx
  41d003:	in     eax,dx
  41d004:	push   cs
  41d005:	and    dh,ah
  41d007:	inc    ebp
  41d008:	xor    DWORD PTR [edx+0x69b7c328],0xf3ed5fb4
  41d012:	jae    0x41cfbb
  41d014:	sbb    BYTE PTR [ebp-0x1b],dh
  41d017:	gs pop ebx
  41d019:	push   es
  41d01a:	sahf   
  41d01b:	(bad)  
  41d01c:	dec    eax
  41d01d:	out    0xbf,eax
  41d01f:	jnp    0x41d09b
  41d021:	push   edx
  41d022:	jno    0x41d080
  41d024:	outs   dx,BYTE PTR ds:[esi]
  41d025:	popa   
  41d026:	adc    bl,BYTE PTR [edx]
  41d028:	cmp    eax,0xdb2ac92e
  41d02d:	cli    
  41d02e:	mov    ch,0xe8
  41d030:	adc    DWORD PTR [esp+ecx*1-0x11e7a59f],ebp
  41d037:	fnstsw WORD PTR [ecx+0x32]
  41d03a:	popf   
  41d03b:	dec    ecx
  41d03c:	cmp    al,0xe4
  41d03e:	test   DWORD PTR ds:0xfcc9965,edx
  41d044:	mov    dl,ch
  41d046:	inc    edx
  41d047:	(bad)  
  41d048:	std    
  41d049:	xchg   esp,eax
  41d04a:	or     BYTE PTR [edi],dl
  41d04c:	outs   dx,DWORD PTR ds:[esi]
  41d04d:	push   ebp
  41d04e:	aad    0x4
  41d050:	pop    ss
  41d051:	ficomp DWORD PTR [eax+ebx*1+0x2e75b2ee]
  41d058:	das    
  41d059:	stos   DWORD PTR es:[edi],eax
  41d05a:	mov    ah,ch
  41d05c:	sub    eax,0x6f86bffb
  41d061:	cmp    ah,BYTE PTR [ecx-0x622a17fa]
  41d067:	dec    eax
  41d068:	dec    eax
  41d069:	(bad)  
  41d06a:	jg     0x41d0a1
  41d06c:	mov    esi,0xe4aaa3be
  41d071:	and    eax,0xb90b2cd1
  41d076:	sub    DWORD PTR [edx-0x1],ecx
  41d079:	dec    ebx
  41d07a:	lds    edx,FWORD PTR [edi+0x5570329c]
  41d080:	mov    edi,0x24a65a00
  41d085:	xchg   ecx,eax
  41d086:	adc    al,0x2e
  41d088:	or     al,0x9
  41d08a:	push   cs
  41d08b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d08c:	mov    ds:0xc217202f,eax
  41d091:	(bad)  
  41d092:	mov    dh,0x69
  41d095:	popf   
  41d096:	das    
  41d097:	shl    bh,0x9d
  41d09a:	mov    dh,0xb6
  41d09c:	cmp    eax,0xc04a0c81
  41d0a1:	push   ds
  41d0a2:	push   fs
  41d0a4:	aam    0xdb
  41d0a6:	push   edx
  41d0a7:	mov    BYTE PTR [esi+ecx*2-0x310ac195],al
  41d0ae:	mov    esp,DWORD PTR [edi]
  41d0b0:	(bad)  
  41d0b1:	jmp    0x2061f39b
  41d0b6:	inc    ebp
  41d0b7:	cmp    ecx,0xffffff9d
  41d0ba:	xor    DWORD PTR [ecx],0x81c24ea2
  41d0c0:	fs aad 0xe6
  41d0c3:	add    DWORD PTR [ecx-0x7f530779],ecx
  41d0c9:	mov    dh,0x67
  41d0cb:	sbb    eax,0x33854b88
  41d0d0:	call   0x1a89:0xb20a4ad5
  41d0d7:	mov    ch,0x57
  41d0d9:	adc    ch,BYTE PTR [ebp-0xd55b2e8]
  41d0df:	mov    edx,0xfc2de90c
  41d0e4:	(bad)  
  41d0e5:	scas   al,BYTE PTR es:[edi]
  41d0e6:	(bad)  
  41d0e7:	das    
  41d0e8:	pop    ecx
  41d0e9:	jl     0x41d123
  41d0eb:	retf   0xe470
  41d0ee:	mov    esi,0xcb6bc7c1
  41d0f3:	jbe    0x41d168
  41d0f5:	in     al,dx
  41d0f6:	scas   al,BYTE PTR es:[edi]
  41d0f7:	imul   esi,edx,0xe6daaf95
  41d0fd:	les    esp,FWORD PTR [ecx+0x2e720186]
  41d103:	rcr    BYTE PTR [eax-0x1c],cl
  41d106:	mov    WORD PTR [esi],fs
  41d108:	cmp    BYTE PTR [edi-0x18],0xd0
  41d10c:	xchg   esi,eax
  41d10d:	pop    edi
  41d10e:	cmp    eax,esp
  41d110:	pop    esi
  41d111:	outs   dx,BYTE PTR ds:[esi]
  41d112:	int3   
  41d113:	test   al,0xe5
  41d115:	mov    edi,DWORD PTR ds:[ebp-0x45]
  41d119:	jl     0x41d12b
  41d11b:	inc    esi
  41d11c:	jo     0x41d127
  41d11e:	(bad)  
  41d120:	xor    ecx,DWORD PTR [esi+ecx*8]
  41d123:	int3   
  41d124:	aam    0x97
  41d126:	sub    eax,0x1c35266e
  41d12b:	pop    ebp
  41d12d:	and    eax,0x33df386
  41d132:	dec    ebp
  41d133:	daa    
  41d134:	mov    esi,0xfe59d88b
  41d139:	call   0x6947:0x3324b92f
  41d140:	dec    edx
  41d141:	or     BYTE PTR [edx-0x5d76b4d4],0x61
  41d148:	xor    BYTE PTR [ebx-0x2b],bl
  41d14b:	mov    bh,0x6a
  41d14d:	push   ecx
  41d14e:	sub    al,0x2b
  41d150:	leave  
  41d151:	fmul   DWORD PTR [edi]
  41d153:	dec    edi
  41d154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d155:	mov    ebx,0xe7e05e92
  41d15a:	repnz xor eax,DWORD PTR [edi-0x1a]
  41d15e:	pop    esp
  41d15f:	mov    BYTE PTR [esi-0x404f133c],ah
  41d165:	xchg   edi,eax
  41d166:	jnp    0x41d0f5
  41d168:	rcr    DWORD PTR [ebp-0x57f506b7],0xbf
  41d16f:	loope  0x41d0f6
  41d171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d172:	push   esp
  41d173:	into   
  41d174:	mov    ?,WORD PTR [edx]
  41d176:	(bad)  
  41d177:	ds into 
  41d179:	jmp    0x9dab:0xe55894b6
  41d180:	cmp    dl,BYTE PTR [ebp-0x47]
  41d183:	inc    edx
  41d184:	(bad)  
  41d185:	aas    
  41d186:	bound  eax,QWORD PTR [edx+0x22]
  41d189:	push   ebx
  41d18a:	push   esi
  41d18b:	rcr    BYTE PTR [eax+edx*1-0x3c],cl
  41d18f:	cmp    DWORD PTR [ecx],ebp
  41d191:	pop    ss
  41d192:	cmp    eax,DWORD PTR [edx]
  41d194:	sub    al,0x92
  41d196:	push   cs
  41d197:	imul   eax,DWORD PTR [ebx+0x46c37657],0xa21f3e0d
  41d1a1:	scas   al,BYTE PTR es:[edi]
  41d1a2:	fwait
  41d1a3:	mov    bl,0xee
  41d1a5:	sbb    BYTE PTR [esi-0x5e],bl
  41d1a8:	or     eax,0xcc220887
  41d1ad:	es ja  0x41d1ec
  41d1b0:	iret   
  41d1b1:	jno    0x41d209
  41d1b3:	aam    0x4d
  41d1b5:	sub    dl,BYTE PTR [ecx+0x66]
  41d1b8:	cli    
  41d1b9:	xor    eax,0xffffffe9
  41d1bc:	loope  0x41d187
  41d1be:	sbb    DWORD PTR [ecx+0x5768bc92],esp
  41d1c4:	push   eax
  41d1c5:	add    DWORD PTR [ecx],ebp
  41d1c7:	outs   dx,DWORD PTR ds:[esi]
  41d1c8:	and    DWORD PTR [eax+0x7c],ebp
  41d1cb:	jbe    0x41d234
  41d1cd:	int    0xb6
  41d1cf:	rol    DWORD PTR [edi],1
  41d1d1:	shr    BYTE PTR [ebx],cl
  41d1d3:	push   0xffffff92
  41d1d5:	cdq    
  41d1d6:	jle    0x41d211
  41d1d8:	int3   
  41d1d9:	icebp  
  41d1da:	pop    edx
  41d1db:	scas   al,BYTE PTR es:[edi]
  41d1dc:	in     eax,0x68
  41d1de:	js     0x41d207
  41d1e0:	lods   al,BYTE PTR ds:[esi]
  41d1e1:	sub    eax,0x153013a7
  41d1e6:	adc    BYTE PTR ds:0xf4334875,0x95
  41d1ed:	lds    ebp,FWORD PTR [ebp+0x7d]
  41d1f0:	jne    0x41d271
  41d1f2:	push   edx
  41d1f3:	mov    gs,edx
  41d1f5:	xor    ebx,DWORD PTR [eax]
  41d1f7:	cmp    eax,0xc26486d
  41d1fc:	mov    esp,0x5b394115
  41d201:	pop    es
  41d202:	nop
  41d203:	out    0xe9,eax
  41d205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d206:	stc    
  41d207:	or     esp,DWORD PTR [esi+eax*8+0x47]
  41d20b:	stos   DWORD PTR es:[edi],eax
  41d20c:	add    DWORD PTR [edx+edi*2-0x4],eax
  41d210:	sub    al,0xc9
  41d212:	pop    ebp
  41d213:	adc    ah,ah
  41d215:	inc    edi
  41d216:	aam    0x9a
  41d218:	inc    ebx
  41d219:	leave  
  41d21a:	inc    ecx
  41d21b:	mov    al,0xfc
  41d21d:	addr16 dec eax
  41d21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d220:	pusha  
  41d221:	call   0x9f2562bd
  41d226:	mov    cl,0x74
  41d228:	xor    ah,BYTE PTR [ecx]
  41d22a:	out    0x48,eax
  41d22c:	scas   al,BYTE PTR es:[edi]
  41d22d:	pop    eax
  41d22e:	lahf   
  41d22f:	cmc    
  41d230:	push   esi
  41d231:	dec    edi
  41d232:	sub    esp,DWORD PTR [eax+0x29]
  41d235:	jno    0x41d265
  41d237:	rol    DWORD PTR [edx],0x2a
  41d23a:	and    eax,0xccc40066
  41d23f:	adc    al,0xff
  41d241:	out    0x3e,al
  41d243:	inc    esp
  41d244:	je     0x41d231
  41d246:	push   cs
  41d247:	sub    eax,0xb91f2198
  41d24c:	push   ebp
  41d24d:	jmp    0x280a:0x1b7b131b
  41d254:	outs   dx,BYTE PTR ds:[esi]
  41d255:	xchg   esp,eax
  41d256:	(bad)  
  41d257:	pushf  
  41d258:	call   0xfbd99d0
  41d25d:	fmul   QWORD PTR [ecx+eiz*8-0x15]
  41d261:	mov    DWORD PTR [edi-0x206d1c61],esp
  41d267:	pusha  
  41d268:	mov    ebx,0x68fe671d
  41d26d:	pop    ss
  41d26e:	shl    DWORD PTR [esi],1
  41d270:	in     al,dx
  41d271:	int    0x36
  41d273:	fldcw  WORD PTR [ecx]
  41d275:	dec    ecx
  41d276:	dec    edx
  41d277:	xor    ah,BYTE PTR [edi-0x79a8905d]
  41d27d:	jne    0x41d2a4
  41d27f:	mov    esp,DWORD PTR [esi-0x5f]
  41d282:	fisttp DWORD PTR [edi+ebp*8-0x35a9b79a]
  41d289:	shr    DWORD PTR [ebp-0x53c374b9],cl
  41d28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d290:	xor    eax,0xd3fbd761
  41d295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d296:	mov    eax,ds:0x3f168ae8
  41d29b:	mov    BYTE PTR [ecx],cl
  41d29d:	push   esp
  41d29e:	test   BYTE PTR [edi+0x3c],cl
  41d2a1:	stos   BYTE PTR es:[edi],al
  41d2a2:	cld    
  41d2a3:	dec    edx
  41d2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2a5:	sbb    al,0x7d
  41d2a7:	es mov esp,edi
  41d2aa:	hlt    
  41d2ab:	xchg   esi,eax
  41d2ac:	dec    ebx
  41d2ad:	aam    0x14
  41d2af:	adc    eax,0x9c7a9148
  41d2b4:	(bad)  
  41d2b5:	cwde   
  41d2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2b7:	sub    DWORD PTR [ebx],0x33c18f73
  41d2bd:	pop    ebp
  41d2be:	(bad)  fs:[ebx+0x7ff1dfe3]
  41d2c5:	fwait
  41d2c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2c7:	mov    ds:0x4939bac,al
  41d2cc:	ss loop 0x41d33a
  41d2cf:	adc    eax,0xad886ab
  41d2d4:	push   ebx
  41d2d5:	(bad)  
  41d2d6:	out    dx,eax
  41d2d7:	rcr    BYTE PTR [eax-0x63],0x71
  41d2db:	aad    0x71
  41d2dd:	jo     0x41d2a4
  41d2df:	int3   
  41d2e0:	dec    ebp
  41d2e1:	repnz outs dx,DWORD PTR ds:[esi]
  41d2e3:	test   eax,esp
  41d2e5:	sbb    eax,0xc69c373f
  41d2ea:	mov    DWORD PTR [edx],0xdcbb2ef7
  41d2f0:	std    
  41d2f1:	dec    eax
  41d2f2:	shl    DWORD PTR [edi+0x2fdc1f3a],0xb7
  41d2f9:	mov    ah,0x3f
  41d2fb:	retf   
  41d2fc:	sub    BYTE PTR [esi+0x2d],bl
  41d2ff:	ror    BYTE PTR [ebp-0x6d],0xea
  41d303:	std    
  41d304:	push   es
  41d305:	mov    ecx,0x880fad63
  41d30a:	mov    cl,0x7
  41d30c:	adc    ch,dl
  41d30e:	ss add dl,al
  41d311:	adc    BYTE PTR [edi],bh
  41d313:	sub    ebx,DWORD PTR [ecx+0xe4381f]
  41d319:	push   ss
  41d31a:	test   al,0xe1
  41d31c:	cmp    bl,BYTE PTR [edx-0x23]
  41d31f:	xrelease xchg BYTE PTR [ebx+edi*8-0x6ca7b409],dh
  41d327:	or     bh,BYTE PTR [ecx+eiz*8-0x2f2a2409]
  41d32e:	stos   BYTE PTR es:[edi],al
  41d32f:	lods   al,BYTE PTR ds:[esi]
  41d330:	xor    al,0x80
  41d332:	adc    edx,edx
  41d334:	test   BYTE PTR [esi],0x65
  41d337:	xchg   ebx,ebx
  41d339:	and    al,0x9f
  41d33b:	cmp    esp,DWORD PTR [eax-0x6f86df4a]
  41d341:	or     ax,WORD PTR ds:0xcd8985b3
  41d348:	rcr    ebx,cl
  41d34a:	jmp    0x41d337
  41d34c:	call   0x8b36:0xd727fa77
  41d353:	repz adc al,0x23
  41d356:	pop    edi
  41d357:	call   0xaabe:0xcb3bd147
  41d35e:	add    BYTE PTR [edx+ecx*2+0x34c31e3c],ah
  41d365:	call   0x6ad21c47
  41d36a:	iret   
  41d36b:	xlat   BYTE PTR ds:[ebx]
  41d36c:	jne    0x41d32e
  41d36e:	lods   al,BYTE PTR ds:[esi]
  41d36f:	xor    eax,0x6d216477
  41d374:	add    ah,cl
  41d376:	jbe    0x41d3c5
  41d378:	dec    edx
  41d379:	xor    BYTE PTR [esp+ebp*8-0x7f],dl
  41d37d:	xor    BYTE PTR [ebx+0x4c9e6c29],ch
  41d383:	push   ebp
  41d384:	icebp  
  41d385:	sbb    bl,0x3b
  41d388:	cmp    DWORD PTR [esp],esp
  41d38b:	jg     0x41d31b
  41d38d:	jl     0x41d359
  41d38f:	dec    ebp
  41d390:	mov    ds:0xaf519f64,eax
  41d395:	test   eax,0xf4446b19
  41d39a:	mov    ah,0x5b
  41d39c:	stc    
  41d39d:	sbb    edx,DWORD PTR [esi-0x44]
  41d3a0:	push   eax
  41d3a1:	xor    BYTE PTR [ebx-0x5f],ah
  41d3a4:	pop    ecx
  41d3a5:	jmp    0x48d9:0x88f58910
  41d3ac:	add    BYTE PTR [esi-0x22d1e4d3],al
  41d3b2:	mov    cl,0x44
  41d3b4:	push   es
  41d3b5:	adc    ch,dl
  41d3b7:	dec    eax
  41d3b8:	mov    ch,0xfb
  41d3ba:	inc    edx
  41d3bb:	dec    esi
  41d3bc:	(bad)  
  41d3bd:	adc    BYTE PTR [esp+esi*8+0xe9e3df9],bl
  41d3c4:	jb     0x41d3cf
  41d3c6:	loope  0x41d3a3
  41d3c8:	or     ebp,0xdfffcc35
  41d3ce:	fadd   DWORD PTR [edx-0x17]
  41d3d1:	leave  
  41d3d2:	aas    
  41d3d3:	fld    TBYTE PTR [esi-0x57]
  41d3d6:	stos   DWORD PTR es:[edi],eax
  41d3d7:	or     BYTE PTR [edx-0x2f],bh
  41d3da:	stc    
  41d3db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3dc:	test   esp,0xeebf2fe6
  41d3e2:	cmc    
  41d3e3:	ins    BYTE PTR es:[edi],dx
  41d3e4:	sub    eax,0x5189382e
  41d3e9:	mov    dl,0x38
  41d3eb:	pop    esi
  41d3ec:	add    bl,al
  41d3ee:	fs push ecx
  41d3f0:	pop    esi
  41d3f1:	cs mov ecx,0x264609ba
  41d3f7:	out    dx,eax
  41d3f8:	cld    
  41d3f9:	add    esp,DWORD PTR [eax+0x5]
  41d3fc:	mov    DWORD PTR [edi],edi
  41d3fe:	pop    ebp
  41d3ff:	fcom   DWORD PTR [edi+0x72]
  41d402:	cmp    bl,bl
  41d404:	mov    eax,0x43afe3f4
  41d409:	jl     0x41d3e9
  41d40b:	loop   0x41d3b5
  41d40d:	or     ebp,DWORD PTR [eax]
  41d40f:	ins    DWORD PTR es:[edi],dx
  41d410:	bswap  edi
  41d412:	js     0x41d3b8
  41d414:	and    bh,BYTE PTR [edi]
  41d416:	neg    DWORD PTR [ebp-0x25]
  41d419:	mov    DWORD PTR [edx-0x7bd3ed43],esi
  41d41f:	imul   eax,DWORD PTR [ebx-0x43],0xb0afb1ba
  41d426:	adc    edx,edi
  41d428:	and    BYTE PTR [esi+0x51cb863f],cl
  41d42e:	push   edi
  41d42f:	cli    
  41d430:	aam    0x55
  41d432:	xchg   BYTE PTR [eiz*1+0x42e9cf0c],bl
  41d439:	or     DWORD PTR [edi-0x36a5d976],esi
  41d43f:	cmp    ebx,DWORD PTR [ecx-0x7b]
  41d442:	mov    DWORD PTR [ecx+0x26],ebp
  41d445:	inc    eax
  41d446:	dec    eax
  41d447:	cmp    DWORD PTR [edx],esi
  41d449:	inc    ecx
  41d44a:	xchg   esp,eax
  41d44b:	enter  0x5c06,0x80
  41d44f:	or     dl,al
  41d451:	mov    dh,0xd7
  41d453:	scas   al,BYTE PTR es:[edi]
  41d454:	in     al,0x9c
  41d456:	mov    al,0x5a
  41d458:	push   ebp
  41d459:	retf   
  41d45a:	je     0x41d41c
  41d45c:	add    BYTE PTR [ecx+0x68b81e87],cl
  41d462:	je     0x41d477
  41d464:	push   0x92998acd
  41d469:	jg     0x41d40e
  41d46b:	adc    dh,bl
  41d46d:	iret   
  41d46e:	jge    0x41d4cb
  41d470:	ret    
  41d471:	and    BYTE PTR [ecx],ah
  41d473:	fs push ecx
  41d475:	(bad)  [ebx-0x7a76d5f]
  41d47b:	stos   BYTE PTR es:[edi],al
  41d47c:	ficom  WORD PTR ds:0x46612d4
  41d482:	pop    ecx
  41d483:	jle    0x41d424
  41d485:	(bad)  ds:[ebx]
  41d488:	cmp    al,0x1e
  41d48a:	mov    WORD PTR ds:0x822ccbfa,?
  41d490:	pop    edx
  41d491:	aas    
  41d492:	int    0xa1
  41d494:	lahf   
  41d495:	cdq    
  41d496:	push   edi
  41d497:	lock aam 0xd0
  41d49a:	pop    esi
  41d49b:	gs dec ebx
  41d49d:	cdq    
  41d49e:	fucomp st(0)
  41d4a0:	jecxz  0x41d4c2
  41d4a2:	inc    ecx
  41d4a3:	jmp    0x3f756ce3
  41d4a8:	(bad)  
  41d4aa:	ins    BYTE PTR es:[edi],dx
  41d4ab:	dec    edx
  41d4ac:	inc    eax
  41d4ad:	xchg   ecx,eax
  41d4ae:	out    0xfc,eax
  41d4b0:	dec    ebp
  41d4b1:	pop    ebp
  41d4b2:	mov    ch,0x7f
  41d4b4:	or     dh,ah
  41d4b6:	jnp    0x41d4e6
  41d4b8:	sub    eax,0xd6d59e81
  41d4bd:	jmp    FWORD PTR [edi]
  41d4bf:	jb     0x41d533
  41d4c1:	(bad)  
  41d4c3:	xor    ebx,DWORD PTR [ecx]
  41d4c5:	push   es
  41d4c6:	std    
  41d4c7:	clc    
  41d4c8:	push   ebp
  41d4c9:	pop    edi
  41d4ca:	ret    
  41d4cb:	sbb    al,0x2
  41d4cd:	out    0xd4,al
  41d4cf:	push   esp
  41d4d0:	sub    BYTE PTR [ebx+ecx*2-0x8],dl
  41d4d4:	add    eax,0x5b7b6d51
  41d4d9:	arpl   WORD PTR [eax],ax
  41d4db:	loopne 0x41d559
  41d4dd:	inc    esp
  41d4de:	mov    al,ds:0xcabdb68f
  41d4e3:	out    0x9c,eax
  41d4e5:	in     al,dx
  41d4e6:	aas    
  41d4e7:	ins    DWORD PTR es:[edi],dx
  41d4e8:	adc    eax,0x8eccae32
  41d4ed:	aas    
  41d4ee:	lock and eax,0xd03ff0d0
  41d4f4:	adc    BYTE PTR [edx+0x34],bl
  41d4f7:	cmp    BYTE PTR [edi+0x4481761c],bh
  41d4fd:	(bad)  
  41d4fe:	std    
  41d4ff:	sahf   
  41d500:	gs mov ah,0x64
  41d503:	or     esi,esp
  41d505:	std    
  41d506:	(bad)  
  41d507:	aaa    
  41d508:	loop   0x41d580
  41d50a:	retf   0xb8f5
  41d50d:	push   edx
  41d50e:	pop    ecx
  41d50f:	(bad)  
  41d510:	sub    BYTE PTR [ebp-0x42d0dd10],cl
  41d516:	jno    0x41d53b
  41d518:	jo     0x41d4d1
  41d51a:	daa    
  41d51b:	inc    eax
  41d51c:	dec    esp
  41d51d:	adc    ch,BYTE PTR [eax]
  41d51f:	fadd   st,st(7)
  41d521:	in     al,dx
  41d522:	xchg   esp,edx
  41d524:	add    eax,0x2490e332
  41d529:	std    
  41d52a:	mov    ebx,0xfb6b679b
  41d52f:	xchg   ebx,eax
  41d530:	test   edx,edi
  41d532:	stc    
  41d533:	jmp    0xa80f:0x4d14dd8a
  41d53a:	mov    ?,WORD PTR [ebx+0x75249baf]
  41d540:	adc    al,0x36
  41d542:	mov    ecx,0xbb37961a
  41d547:	fwait
  41d548:	xorps  xmm6,XMMWORD PTR [esi+0x38f2c956]
  41d54f:	(bad)  
  41d551:	xchg   ebp,eax
  41d552:	inc    edi
  41d553:	sbb    DWORD PTR [ebp-0x54],edi
  41d556:	ins    DWORD PTR es:[edi],dx
  41d557:	and    al,0xe7
  41d559:	xor    eax,esp
  41d55b:	popa   
  41d55c:	in     al,0xd0
  41d55e:	cmp    edx,ebx
  41d560:	cmp    eax,0x8dc543a7
  41d565:	(bad)  [ebx]
  41d567:	ja     0x41d52b
  41d569:	push   edi
  41d56a:	dec    ebp
  41d56b:	fmul   QWORD PTR [edi]
  41d56d:	in     eax,dx
  41d56e:	fdiv   st,st(4)
  41d570:	scas   al,BYTE PTR es:[edi]
  41d571:	xor    eax,0x2930fe2b
  41d576:	(bad)  
  41d577:	fild   DWORD PTR [eax-0x4a]
  41d57a:	or     esi,edi
  41d57c:	and    ah,BYTE PTR [ebx+0x9132e78]
  41d582:	jge    0x41d5d9
  41d584:	popa   
  41d585:	aaa    
  41d586:	xor    al,0x43
  41d588:	popf   
  41d589:	outs   dx,BYTE PTR ds:[esi]
  41d58a:	add    eax,0xdabe663e
  41d58f:	add    ebp,edi
  41d591:	lock jnp 0x41d533
  41d594:	push   ss
  41d595:	sub    DWORD PTR [edi+0x78],ecx
  41d598:	mov    BYTE PTR [edi+0x36c2d56e],ch
  41d59e:	dec    eax
  41d59f:	adc    BYTE PTR [ecx],0x68
  41d5a2:	fdiv   QWORD PTR [edx]
  41d5a4:	test   eax,0x49292d01
  41d5a9:	icebp  
  41d5aa:	mov    al,0x1c
  41d5ac:	adc    ch,dh
  41d5ae:	sbb    bl,0xf2
  41d5b1:	cs pusha 
  41d5b3:	mov    dl,0x9c
  41d5b5:	add    ah,dh
  41d5b7:	cdq    
  41d5b8:	rol    DWORD PTR [ecx],cl
  41d5ba:	fwait
  41d5bb:	pop    ds
  41d5bc:	xor    dh,BYTE PTR [edx+esi*2+0x15]
  41d5c0:	xchg   edx,eax
  41d5c1:	push   0xf7b76add
  41d5c6:	lock jne 0x41d588
  41d5c9:	out    0x84,al
  41d5cb:	or     cl,al
  41d5cd:	cmc    
  41d5ce:	pop    eax
  41d5cf:	pop    esi
  41d5d0:	cmp    DWORD PTR [ebp-0x30],edx
  41d5d3:	pop    eax
  41d5d4:	data16 stc 
  41d5d6:	add    BYTE PTR [ecx],cl
  41d5d8:	fbstp  TBYTE PTR [ebp-0x3d909491]
  41d5de:	xchg   esp,eax
  41d5df:	bound  esi,QWORD PTR [ebx+0x7c]
  41d5e2:	cmp    al,0x44
  41d5e4:	or     eax,0x6f43faef
  41d5e9:	dec    ebp
  41d5ea:	or     BYTE PTR [esi-0xe],al
  41d5ed:	sbb    DWORD PTR [esi],0xb9f05f5d
  41d5f3:	aam    0xfb
  41d5f5:	cs cmc 
  41d5f7:	out    0x2b,al
  41d5f9:	add    DWORD PTR [ebp+eiz*1-0x2],eax
  41d5fd:	or     al,0xb8
  41d5ff:	or     ecx,DWORD PTR [esi-0x6916736d]
  41d605:	(bad)  
  41d606:	retf   
  41d607:	das    
  41d608:	dec    eax
  41d609:	out    dx,eax
  41d60a:	vcmpsd xmm7,xmm7,QWORD PTR [esi-0x1f],0x53
  41d610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d611:	dec    ebp
  41d612:	aaa    
  41d613:	fld    QWORD PTR [ebp-0x2f3f6889]
  41d619:	test   ebx,esi
  41d61b:	dec    edx
  41d61c:	test   BYTE PTR [ebx-0x4b584c3b],al
  41d622:	cmc    
  41d623:	mov    ds:0xb5e0777f,eax
  41d628:	inc    ebp
  41d629:	inc    esp
  41d62a:	cmp    DWORD PTR [esi-0x45],eax
  41d62d:	addr16 adc al,0xad
  41d630:	into   
  41d631:	loop   0x41d635
  41d633:	mov    fs,edx
  41d635:	pop    ebp
  41d636:	pop    edx
  41d637:	mov    esp,0xe2298962
  41d63c:	xor    DWORD PTR [ebx+0x3fce71a8],edx
  41d642:	popf   
  41d643:	popf   
  41d644:	into   
  41d645:	xor    eax,0x755ed21b
  41d64a:	xchg   edx,eax
  41d64b:	loope  0x41d5db
  41d64d:	icebp  
  41d64e:	inc    esp
  41d64f:	sti    
  41d650:	mov    esi,esp
  41d652:	xor    ecx,DWORD PTR [edi]
  41d654:	xor    BYTE PTR [edx-0x21],0xc4
  41d658:	in     eax,dx
  41d659:	sub    DWORD PTR ds:0xe72cf6ee,0x187f1af4
  41d663:	in     eax,0x74
  41d665:	mov    ah,0xb9
  41d667:	pop    ecx
  41d668:	(bad)  
  41d669:	out    dx,al
  41d66a:	mov    ds:0xda43bb93,al
  41d66f:	test   eax,0x849acae7
  41d674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d675:	je     0x41d6c4
  41d677:	scas   eax,DWORD PTR es:[edi]
  41d678:	in     eax,dx
  41d679:	sbb    ebp,edi
  41d67b:	aaa    
  41d67c:	cli    
  41d67d:	mov    cl,0x40
  41d67f:	xchg   edx,eax
  41d680:	mov    cl,0x2f
  41d682:	push   es
  41d683:	dec    ecx
  41d684:	pop    ss
  41d685:	out    0x51,eax
  41d687:	jp     0x41d664
  41d689:	jl     0x41d679
  41d68b:	lea    esi,[eax+eiz*2-0x196c3247]
  41d692:	and    eax,0x814e38ee
  41d697:	mov    ch,0x39
  41d699:	sub    BYTE PTR [ebp+0x6d83623b],bh
  41d69f:	cmp    bh,0x77
  41d6a2:	(bad)  
  41d6a3:	leave  
  41d6a4:	test   DWORD PTR [ebx+0x3255cfe8],0x76fdf0fc
  41d6ae:	outs   dx,DWORD PTR ds:[esi]
  41d6af:	loope  0x41d66f
  41d6b1:	ss js  0x41d697
  41d6b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6b5:	mov    ds:0x1d04934d,eax
  41d6ba:	in     al,0x78
  41d6bc:	xchg   ebp,eax
  41d6bd:	repz xchg ecx,eax
  41d6bf:	(bad)  
  41d6c0:	sbb    al,BYTE PTR [ebp-0x79]
  41d6c3:	adc    eax,0x586a7e70
  41d6c8:	dec    edi
  41d6c9:	into   
  41d6ca:	(bad)  
  41d6cc:	and    bl,BYTE PTR [eax-0x7c2e2515]
  41d6d2:	lods   al,BYTE PTR ds:[esi]
  41d6d3:	adc    DWORD PTR [edi-0x6d],0x76
  41d6d7:	jle    0x41d70e
  41d6d9:	dec    ebx
  41d6da:	int3   
  41d6db:	inc    ebp
  41d6dc:	loope  0x41d715
  41d6de:	xor    al,0x2e
  41d6e0:	xor    eax,0x770d73c3
  41d6e5:	fidivr DWORD PTR [eax+0x524394d4]
  41d6eb:	aas    
  41d6ec:	pushf  
  41d6ed:	inc    esi
  41d6ee:	cli    
  41d6ef:	add    DWORD PTR ds:0xdedfe64c,eax
  41d6f5:	(bad)  
  41d6f6:	pusha  
  41d6f7:	mov    ch,0x4
  41d6f9:	or     BYTE PTR [ebx],dl
  41d6fb:	xlat   BYTE PTR ds:[ebx]
  41d6fc:	mov    ebx,0x6ee24b4a
  41d701:	inc    ebp
  41d702:	xor    eax,0xc46979b6
  41d707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d708:	jne    0x41d718
  41d70a:	adc    edx,ebx
  41d70c:	push   edx
  41d70d:	(bad)
  41d710:	loopne 0x41d719
  41d712:	call   0x41c657e6
  41d717:	sbb    al,0xde
  41d719:	std    
  41d71a:	outs   dx,BYTE PTR ds:[esi]
  41d71b:	and    bh,BYTE PTR [ebp+eax*4-0x50]
  41d71f:	or     BYTE PTR [ecx+ebx*4-0x683052bb],bl
  41d726:	sbb    cl,BYTE PTR [edi+0x71185fe6]
  41d72c:	mov    bh,0x1a
  41d72e:	inc    esp
  41d72f:	xchg   ah,bh
  41d731:	or     edx,DWORD PTR [esi]
  41d733:	sbb    eax,0x5d108abd
  41d738:	sub    al,0xe5
  41d73a:	xchg   ebx,eax
  41d73b:	mov    al,ds:0x7a9f6cf4
  41d740:	aad    0x92
  41d742:	inc    edx
  41d743:	add    DWORD PTR [edx],ecx
  41d745:	mov    bl,0xfb
  41d747:	fwait
  41d748:	in     eax,dx
  41d749:	inc    edx
  41d74a:	(bad)  
  41d74b:	outs   dx,DWORD PTR ds:[esi]
  41d74c:	shl    BYTE PTR [ecx+0x13],0x95
  41d750:	dec    edi
  41d751:	mov    edi,ds
  41d753:	out    0x60,al
  41d755:	adc    eax,0x97a8de
  41d75a:	sub    BYTE PTR [ecx-0x12],ch
  41d75d:	sahf   
  41d75e:	xchg   ebp,eax
  41d75f:	cmp    DWORD PTR [ebp+eax*2+0x6aff56e0],0xce6b56f9
  41d76a:	mov    BYTE PTR ds:0x7d841a39,al
  41d770:	popf   
  41d771:	or     BYTE PTR [esi-0x1092f001],0x9c
  41d778:	bound  esp,QWORD PTR [ebx-0x5f]
  41d77b:	test   DWORD PTR [bp+0x42],esp
  41d77f:	and    DWORD PTR [edx+0x458367f8],ebp
  41d785:	push   eax
  41d786:	xor    al,0xa3
  41d788:	ror    BYTE PTR [edx+0x59e82896],1
  41d78e:	lea    edi,[edi+ebx*2+0x616bef4f]
  41d795:	and    bh,BYTE PTR cs:[ebx+ebx*8+0x7e1ac691]
  41d79d:	ret    
  41d79e:	outs   dx,BYTE PTR ds:[esi]
  41d79f:	mov    ch,0x81
  41d7a1:	pop    ss
  41d7a2:	les    edx,FWORD PTR [ecx+edx*4]
  41d7a5:	pop    ds
  41d7a6:	mov    ah,0xca
  41d7a8:	ja     0x41d799
  41d7aa:	adc    eax,0x4802df94
  41d7af:	gs pop ebp
  41d7b1:	add    al,0xfb
  41d7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7b4:	aaa    
  41d7b5:	cmp    DWORD PTR [ebp+ebp*2+0x5],edx
  41d7b9:	(bad)  
  41d7ba:	sbb    al,0x62
  41d7bc:	mov    esi,0x345c1d60
  41d7c1:	jl     0x41d7ce
  41d7c3:	or     al,BYTE PTR [ecx-0x76]
  41d7c6:	mov    ds:0x130d3b11,al
  41d7cb:	xchg   BYTE PTR [ecx],dh
  41d7cd:	pop    ss
  41d7ce:	rcl    ebx,0xe5
  41d7d1:	sbb    DWORD PTR cs:[edi+0x59d35529],edx
  41d7d8:	adc    al,0xc1
  41d7da:	cmc    
  41d7db:	sub    BYTE PTR [edx],dh
  41d7dd:	loope  0x41d7b7
  41d7df:	pop    es
  41d7e0:	jnp    0x41d826
  41d7e2:	mov    ecx,fs
  41d7e4:	mov    eax,ds:0xf6b8715c
  41d7e9:	mov    BYTE PTR [eax+0x6415fd26],bh
  41d7ef:	mov    edi,0x3fa9ad7e
  41d7f4:	mov    ebp,0x762f2a17
  41d7f9:	popa   
  41d7fa:	test   al,0x1
  41d7fc:	cwde   
  41d7fd:	shl    ebx,1
  41d7ff:	xchg   esp,eax
  41d800:	aas    
  41d801:	push   cs
  41d802:	les    edi,FWORD PTR [esi+0x36750ee7]
  41d808:	mov    bl,BYTE PTR [ecx]
  41d80a:	test   al,0x9e
  41d80c:	(bad)  
  41d80d:	lods   eax,DWORD PTR ds:[esi]
  41d80e:	pop    edx
  41d80f:	pop    es
  41d810:	aad    0x8a
  41d812:	add    edx,DWORD PTR [esi]
  41d814:	pop    esp
  41d815:	fs xchg edi,eax
  41d817:	sbb    eax,0x8eb2f791
  41d81c:	inc    BYTE PTR [eax+0x77]
  41d81f:	inc    edx
  41d820:	dec    esp
  41d821:	pop    ds
  41d822:	enter  0x3fa,0x7a
  41d826:	retf   0x7ecd
  41d829:	push   ecx
  41d82a:	sub    DWORD PTR [esi-0x16ec3e0e],ebp
  41d830:	in     al,0x2f
  41d832:	lods   al,BYTE PTR ds:[esi]
  41d833:	int    0xcb
  41d835:	scas   eax,DWORD PTR es:[edi]
  41d836:	mov    ecx,0xc6799be2
  41d83b:	clc    
  41d83c:	out    0xb8,al
  41d83e:	fdiv   QWORD PTR [ebp-0x4b]
  41d841:	mov    al,0xb9
  41d843:	mov    ecx,0xf495dd38
  41d848:	cmp    ecx,ebp
  41d84a:	jp     0x41d8c7
  41d84c:	(bad)  
  41d84d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41d84f:	cli    
  41d850:	ss ret 0x89e6
  41d854:	pop    esi
  41d855:	add    esp,DWORD PTR [ecx]
  41d857:	pop    ebx
  41d858:	cwde   
  41d859:	scas   al,BYTE PTR es:[edi]
  41d85a:	cmp    ax,0x2adb
  41d85e:	dec    edi
  41d85f:	xchg   ecx,eax
  41d860:	push   ss
  41d861:	sub    al,0x45
  41d863:	(bad)  
  41d864:	cli    
  41d865:	mov    ds:0x9953725a,al
  41d86a:	inc    esi
  41d86b:	scas   al,BYTE PTR es:[edi]
  41d86c:	mov    dl,0x99
  41d86e:	test   BYTE PTR [esp+eiz*4+0x6f],0x35
  41d873:	idiv   BYTE PTR [esi+0x26]
  41d876:	cdq    
  41d877:	nop
  41d878:	dec    edx
  41d879:	sbb    eax,0x166c59cb
  41d87e:	push   esi
  41d87f:	or     DWORD PTR [ebp+0x42767808],ebx
  41d885:	pop    esp
  41d886:	not    DWORD PTR [ebp+eax*1+0x18]
  41d88a:	mov    edx,DWORD PTR [ecx]
  41d88c:	adc    al,ch
  41d88e:	fmul   QWORD PTR [ecx]
  41d890:	dec    edi
  41d891:	in     al,dx
  41d892:	xor    dh,BYTE PTR [eax-0x10e0e673]
  41d898:	enter  0xcc9d,0xb9
  41d89c:	ds push ecx
  41d89e:	(bad)  
  41d89f:	rcr    BYTE PTR ds:0xd49b06c2,1
  41d8a5:	mov    edi,0xd2bd2473
  41d8aa:	cmp    esp,DWORD PTR [esi-0x29]
  41d8ad:	sub    ebx,DWORD PTR [ebx]
  41d8af:	rol    DWORD PTR [edi-0x734a7195],0xea
  41d8b6:	push   ebp
  41d8b7:	nop
  41d8b8:	shl    DWORD PTR [eax-0x4831e4be],cl
  41d8be:	in     eax,0x3a
  41d8c0:	jle    0x41d870
  41d8c2:	pop    esi
  41d8c3:	mov    bh,0x3f
  41d8c5:	aad    0xbd
  41d8c7:	inc    eax
  41d8c8:	les    esi,FWORD PTR [ebp+0x6b52631f]
  41d8ce:	lea    ebx,gs:[ebx-0x5a]
  41d8d2:	push   0x59db4d5b
  41d8d7:	into   
  41d8d8:	jo     0x41d8f6
  41d8da:	int3   
  41d8db:	add    ah,ah
  41d8dd:	(bad)  [ecx+0x5e]
  41d8e0:	adc    DWORD PTR [ebx],ebp
  41d8e2:	out    0xc5,al
  41d8e4:	div    edi
  41d8e6:	push   esp
  41d8e7:	mov    es,esp
  41d8e9:	push   ecx
  41d8ea:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41d8ec:	jo     0x41d882
  41d8ee:	mov    ebx,0xaffbac18
  41d8f3:	lahf   
  41d8f4:	sub    al,0x5b
  41d8f6:	lea    ebx,[edx+0x39110a18]
  41d8fc:	loop   0x41d969
  41d8fe:	or     cl,BYTE PTR [ecx]
  41d900:	jmp    0x41d90e
  41d902:	pop    eax
  41d903:	mov    eax,ds:0x2d04a0c3
  41d908:	cwde   
  41d909:	sub    DWORD PTR [edi+0x24],eax
  41d90c:	icebp  
  41d90d:	(bad)  
  41d90e:	sub    BYTE PTR [edx],ah
  41d910:	mov    dh,0xab
  41d912:	int    0xfe
  41d914:	inc    eax
  41d915:	pop    esi
  41d916:	loopne 0x41d94d
  41d918:	adc    ah,BYTE PTR [edx-0x10]
  41d91b:	out    dx,al
  41d91c:	(bad)  
  41d91d:	(bad)  
  41d91e:	cdq    
  41d91f:	push   0x9a481531
  41d924:	dec    ebx
  41d925:	cli    
  41d926:	ins    DWORD PTR es:[edi],dx
  41d927:	dec    esp
  41d928:	icebp  
  41d929:	xchg   ebp,eax
  41d92a:	je     0x41d90c
  41d92c:	std    
  41d92d:	xchg   esi,eax
  41d92e:	stc    
  41d92f:	push   ebp
  41d930:	retf   
  41d931:	pop    esi
  41d932:	cs pop ds
  41d934:	fwait
  41d935:	cld    
  41d936:	pop    ss
  41d937:	push   ebx
  41d938:	int3   
  41d939:	or     ebx,esp
  41d93b:	retf   0xebc5
  41d93e:	enter  0xae7c,0xd7
  41d942:	call   0xaf9f:0x8152b92a
  41d949:	cdq    
  41d94a:	pop    es
  41d94b:	cmp    al,0x87
  41d94d:	stc    
  41d94e:	mov    ds:0x8bad7119,al
  41d953:	jecxz  0x41d8ee
  41d955:	outs   dx,BYTE PTR ds:[esi]
  41d956:	mov    eax,ds:0x633e640b
  41d95b:	sub    BYTE PTR [ecx+edx*2],0x92
  41d95f:	fwait
  41d960:	mov    esp,0x6c1d4fc0
  41d965:	repnz (bad) 
  41d967:	xor    BYTE PTR [eax-0x5a],ah
  41d96a:	stos   BYTE PTR es:[edi],al
  41d96b:	cmp    eax,edx
  41d96d:	jno    0x41d951
  41d96f:	dec    ecx
  41d970:	adc    eax,DWORD PTR [edx-0x68752ff7]
  41d976:	jg     0x41d9bf
  41d978:	ret    
  41d979:	cmp    esp,DWORD PTR [esi-0x559ab83b]
  41d97f:	fldpi  
  41d981:	inc    eax
  41d982:	or     al,0xb5
  41d984:	add    eax,0x9da65b67
  41d989:	lock lea edi,[esi-0x18]
  41d98d:	and    eax,0xe5237cbc
  41d992:	mov    ebp,0xcd1253ce
  41d997:	jp     0x41d9bf
  41d999:	adc    edi,DWORD PTR [edi]
  41d99b:	das    
  41d99c:	or     edx,eax
  41d99e:	fimul  WORD PTR [ebp-0x74]
  41d9a1:	jp     0x41d9b6
  41d9a3:	dec    eax
  41d9a4:	pop    eax
  41d9a5:	addr16 fs aad 0x24
  41d9a9:	cmp    al,0x92
  41d9ab:	shr    DWORD PTR [eiz*1-0x7ef20655],1
  41d9b2:	jge    0x41d9dc
  41d9b4:	pop    ds
  41d9b5:	repz push ds
  41d9b7:	ror    ecx,0x97
  41d9ba:	mov    dl,0x97
  41d9bc:	pushf  
  41d9bd:	popf   
  41d9be:	jecxz  0x41d9d3
  41d9c0:	sti    
  41d9c1:	xor    eax,0x53ad472f
  41d9c6:	inc    ecx
  41d9c7:	test   eax,0xb35eff9c
  41d9cc:	mov    bh,0xc9
  41d9ce:	aas    
  41d9cf:	mov    ds:0xb6fe1c5a,eax
  41d9d4:	scas   eax,DWORD PTR es:[edi]
  41d9d5:	jns    0x41da2f
  41d9d7:	sbb    esi,ecx
  41d9d9:	shl    DWORD PTR [ecx-0x75],cl
  41d9dc:	out    dx,al
  41d9dd:	xchg   DWORD PTR [edx],edx
  41d9df:	xor    eax,0xfd754b22
  41d9e4:	cmp    al,0x5d
  41d9e6:	xor    eax,0x1bcc8ae6
  41d9eb:	repnz push ecx
  41d9ee:	xchg   ebp,eax
  41d9ef:	lds    ebp,FWORD PTR [edx]
  41d9f1:	xor    ebp,edi
  41d9f3:	push   cs
  41d9f4:	retf   
  41d9f5:	mov    DWORD PTR [eax-0x19],esi
  41d9f8:	sub    al,0xa9
  41d9fa:	inc    ecx
  41d9fb:	sbb    dh,cl
  41d9fd:	and    DWORD PTR gs:[esp+ebp*8-0x68eee101],0x4abdf460
  41da09:	int3   
  41da0a:	add    ch,BYTE PTR [edi-0x4cc009a5]
  41da10:	loope  0x41da5a
  41da12:	stos   DWORD PTR es:[edi],eax
  41da13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da14:	and    al,BYTE PTR [eax+0x274fa469]
  41da1a:	shr    DWORD PTR [esi],cl
  41da1c:	adc    dh,0x5e
  41da1f:	adc    eax,0xfa3d6fe5
  41da24:	add    eax,0x33f238cd
  41da29:	test   BYTE PTR [ebx+eax*8],cl
  41da2c:	out    dx,al
  41da2d:	xor    DWORD PTR [ecx-0x21c98902],esi
  41da33:	cmp    edx,eax
  41da35:	sahf   
  41da36:	xchg   esp,eax
  41da37:	mov    eax,0x7f9acacb
  41da3c:	jl     0x41da94
  41da3e:	fld    TBYTE PTR [edi-0x48]
  41da41:	push   cs
  41da42:	shr    DWORD PTR [ebp+ebx*4-0x6f9bf037],1
  41da49:	shl    BYTE PTR [eax+0x83b1568],cl
  41da4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da50:	fdivr  DWORD PTR [ebx+0x26337ab3]
  41da56:	in     al,0x3b
  41da58:	pop    edi
  41da59:	mov    bl,0xf3
  41da5b:	pop    ss
  41da5c:	repnz sub DWORD PTR ds:0x7bcb3abd,ebp
  41da63:	retf   0x1c62
  41da66:	jne    0x41da8f
  41da68:	jns    0x41da11
  41da6a:	scas   eax,DWORD PTR es:[edi]
  41da6b:	jmp    0x41da88
  41da6d:	ret    0xa73c
  41da70:	xchg   cl,dl
  41da72:	shr    BYTE PTR [ecx+esi*8],cl
  41da75:	push   esi
  41da76:	sbb    al,0xdd
  41da78:	push   eax
  41da79:	xchg   ecx,eax
  41da7a:	das    
  41da7b:	rcr    ebx,0x83
  41da7e:	pop    es
  41da7f:	sbb    dh,BYTE PTR [ecx]
  41da81:	mov    dh,0x68
  41da83:	mov    esp,edx
  41da85:	adc    eax,0xc9157a2
  41da8a:	xor    bh,BYTE PTR [edx]
  41da8c:	stc    
  41da8d:	inc    edi
  41da8e:	push   es
  41da8f:	cli    
  41da90:	add    DWORD PTR [edi],0x7609dc61
  41da96:	in     eax,dx
  41da97:	xor    edx,DWORD PTR [edi]
  41da99:	loope  0x41da1c
  41da9b:	bound  ebx,QWORD PTR [esi+0x30]
  41da9e:	out    dx,al
  41da9f:	popa   
  41daa0:	dec    eax
  41daa1:	fisub  WORD PTR [esi]
  41daa3:	repnz mov ebp,0x26feaa62
  41daa9:	das    
  41daaa:	addr16 jg 0x41db0d
  41daad:	iret   
  41daae:	xor    esi,esi
  41dab0:	stos   BYTE PTR es:[edi],al
  41dab1:	sub    eax,0x2f7b009d
  41dab6:	add    ah,BYTE PTR [esi-0x57e213b8]
  41dabc:	dec    ebx
  41dabd:	adc    al,0x6c
  41dabf:	sub    al,dh
  41dac1:	cmp    bl,BYTE PTR [eax-0x72327848]
  41dac7:	fsub   QWORD PTR [eax+eax*2-0x70]
  41dacb:	pop    esi
  41dacc:	cmp    dl,BYTE PTR [ebx]
  41dace:	xchg   ebx,eax
  41dacf:	sbb    DWORD PTR [edx+0x5f8ea872],edx
  41dad5:	xor    ecx,DWORD PTR ds:0x1ed5bdff
  41dadb:	push   ecx
  41dadc:	dec    edi
  41dadd:	mov    esi,0xb58e2e2b
  41dae2:	inc    ecx
  41dae3:	arpl   WORD PTR [edi],di
  41dae5:	sti    
  41dae6:	jp     0x41db60
  41dae8:	bswap  ecx
  41daea:	neg    BYTE PTR [ecx+ebx*2-0xe]
  41daee:	pop    ebp
  41daef:	into   
  41daf0:	mov    al,0x69
  41daf2:	pop    ebp
  41daf3:	inc    esp
  41daf4:	push   cs
  41daf5:	mov    BYTE PTR [ecx+0x69645f97],cl
  41dafb:	inc    BYTE PTR [edi]
  41dafd:	daa    
  41dafe:	aaa    
  41daff:	in     al,0x79
  41db01:	add    DWORD PTR [ecx+eax*4-0x44ebf2dd],eax
  41db08:	ins    DWORD PTR es:[edi],dx
  41db09:	and    DWORD PTR ds:0x2c962ac4,edx
  41db0f:	ds cmc 
  41db11:	mov    cl,0xc7
  41db13:	inc    ecx
  41db14:	push   ecx
  41db15:	call   0xd0c:0xf979a782
  41db1c:	sub    BYTE PTR [ebx+edx*1],bh
  41db1f:	push   esi
  41db20:	pop    esp
  41db21:	(bad)  
  41db22:	into   
  41db23:	daa    
  41db24:	test   eax,0x556bd44
  41db29:	iret   
  41db2a:	xchg   esi,eax
  41db2b:	leave  
  41db2c:	scas   eax,DWORD PTR es:[edi]
  41db2d:	xor    cl,al
  41db2f:	mov    eax,ds:0x7852ca25
  41db34:	cmp    dh,BYTE PTR [edx]
  41db36:	pop    esi
  41db37:	or     eax,0x4fd6a47
  41db3c:	adc    eax,0xcfb2d21f
  41db41:	mov    dl,0x15
  41db43:	xor    al,0xfd
  41db45:	gs push es
  41db47:	adc    ecx,esp
  41db49:	imul   ecx,ecx,0xc9542219
  41db4f:	std    
  41db50:	sbb    al,0xae
  41db52:	cli    
  41db53:	or     edi,DWORD PTR [ebx]
  41db55:	jns    0x41dbb8
  41db57:	es push esp
  41db59:	aas    
  41db5a:	xor    ecx,DWORD PTR [eax]
  41db5c:	pop    edi
  41db5d:	xchg   DWORD PTR [edx+0x10],eax
  41db60:	cld    
  41db61:	add    cl,al
  41db63:	sbb    ecx,DWORD PTR [ecx]
  41db65:	sub    al,0x41
  41db67:	pop    ecx
  41db68:	push   cx
  41db6a:	pop    ss
  41db6b:	ja     0x41db55
  41db6d:	imul   eax,DWORD PTR [edx+edi*4-0x6f8a8064],0xdae076f8
  41db78:	cmp    ch,0x80
  41db7b:	jg     0x41dbd3
  41db7d:	das    
  41db7e:	xor    BYTE PTR [esi],bl
  41db80:	jne    0x41db98
  41db82:	(bad)  
  41db83:	adc    BYTE PTR [eax-0x17],bl
  41db86:	clc    
  41db87:	pop    ss
  41db88:	and    ah,BYTE PTR [ebp+0x650139f2]
  41db8e:	sbb    al,0xed
  41db90:	ins    DWORD PTR es:[edi],dx
  41db91:	and    dl,dh
  41db93:	mov    WORD PTR [eax-0x56ce7f05],fs
  41db99:	mov    edx,0xc8f822f7
  41db9e:	out    0x62,al
  41dba0:	xlat   BYTE PTR ds:[ebx]
  41dba1:	dec    esp
  41dba2:	pop    edx
  41dba3:	push   ecx
  41dba4:	leave  
  41dba5:	shl    DWORD PTR [eax],1
  41dba7:	test   dh,0xcd
  41dbaa:	inc    ebp
  41dbab:	sbb    eax,0x5af08012
  41dbb0:	mov    esp,0x6a5904cd
  41dbb5:	jnp    0x41db39
  41dbb7:	mov    edi,0xd5cb04dd
  41dbbc:	and    BYTE PTR [edx-0x27],0x87
  41dbc0:	push   ecx
  41dbc1:	xor    al,0xa4
  41dbc3:	and    DWORD PTR [ebx+0x78],eax
  41dbc6:	lods   eax,DWORD PTR ds:[esi]
  41dbc7:	adc    al,0x3a
  41dbc9:	lods   al,BYTE PTR ds:[esi]
  41dbca:	jnp    0x41db5f
  41dbcc:	outs   dx,BYTE PTR ss:[esi]
  41dbce:	push   0xffffff97
  41dbd0:	and    eax,0xc7e836e8
  41dbd5:	mov    ecx,0xe329352
  41dbda:	cld    
  41dbdb:	xor    dl,ah
  41dbdd:	into   
  41dbde:	xlat   BYTE PTR ds:[ebx]
  41dbdf:	jne    0x41db6c
  41dbe1:	and    ebx,esi
  41dbe3:	sar    DWORD PTR [ebx-0x71],0xf7
  41dbe7:	mov    ebp,0xddec0feb
  41dbec:	aad    0x71
  41dbee:	or     al,BYTE PTR [edi+0x5605040a]
  41dbf4:	pop    ss
  41dbf5:	cmp    bl,ah
  41dbf7:	pop    ebx
  41dbf8:	jb     0x41dc2c
  41dbfa:	mov    dl,0xb3
  41dbfc:	je     0x41dbf2
  41dbfe:	mov    al,ds:0x6a96b165
  41dc03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc04:	call   0x3f59dce0
  41dc09:	push   esi
  41dc0a:	mov    al,0x5e
  41dc0c:	mov    ebx,0x96df4891
  41dc11:	mov    ?,eax
  41dc13:	(bad)  [esi]
  41dc15:	in     eax,dx
  41dc16:	das    
  41dc17:	or     eax,0xc8740b25
  41dc1c:	mov    ebp,0x226c4807
  41dc21:	mov    ecx,0xa17edad7
  41dc26:	cmp    DWORD PTR [ebx+ebx*4],edx
  41dc29:	pop    ss
  41dc2a:	scas   eax,DWORD PTR es:[edi]
  41dc2b:	cli    
  41dc2c:	mov    esi,0x3c9c9cd9
  41dc31:	scas   al,BYTE PTR es:[edi]
  41dc32:	push   ds
  41dc33:	push   ds
  41dc34:	jl     0x41dc84
  41dc36:	jle    0x41dc98
  41dc38:	mov    al,ds:0x30d96ed6
  41dc3d:	outs   dx,DWORD PTR ds:[esi]
  41dc3e:	xchg   esi,eax
  41dc3f:	(bad)
  41dc42:	mov    al,ds:0xe5769b86
  41dc47:	dec    eax
  41dc48:	pusha  
  41dc49:	test   al,0x57
  41dc4b:	push   esp
  41dc4c:	xchg   esp,eax
  41dc4d:	or     eax,0x8b39f5ad
  41dc52:	ins    DWORD PTR es:[edi],dx
  41dc53:	js     0x41dc3b
  41dc55:	inc    ebx
  41dc56:	ficom  WORD PTR [ebp+0x40]
  41dc59:	jb     0x41dca9
  41dc5b:	stos   BYTE PTR es:[edi],al
  41dc5c:	lahf   
  41dc5d:	or     eax,0x61597332
  41dc62:	lahf   
  41dc63:	adc    ch,dh
  41dc65:	add    esp,DWORD PTR [eax+0x29]
  41dc68:	push   esi
  41dc69:	sti    
  41dc6a:	fcomp  QWORD PTR [edx]
  41dc6c:	(bad)  
  41dc6d:	hlt    
  41dc6e:	xchg   DWORD PTR [edx],edx
  41dc70:	pop    esp
  41dc71:	push   edi
  41dc72:	gs sti 
  41dc74:	dec    edx
  41dc75:	xor    ah,BYTE PTR [eax-0x79fb2592]
  41dc7b:	fld    DWORD PTR [edx+0x110e5469]
  41dc81:	loope  0x41dc29
  41dc83:	xor    al,0x20
  41dc85:	dec    edi
  41dc86:	xchg   edx,eax
  41dc87:	lock (bad) 
  41dc89:	and    al,0xda
  41dc8b:	jmp    0xa95e:0xe1317ee9
  41dc92:	add    edx,DWORD PTR [eax]
  41dc94:	fiadd  WORD PTR [esi]
  41dc96:	outs   dx,BYTE PTR ds:[esi]
  41dc97:	and    eax,0x18652c1a
  41dc9c:	cmp    al,0xc6
  41dc9e:	shl    esp,1
  41dca0:	ins    BYTE PTR es:[edi],dx
  41dca1:	xlat   BYTE PTR ds:[ebx]
  41dca2:	pop    ds
  41dca3:	push   es
  41dca4:	mov    ds:0x8ced5131,al
  41dca9:	inc    eax
  41dcaa:	repz sub DWORD PTR [edx+0x6e],ebp
  41dcae:	add    eax,0xe76e2c0e
  41dcb3:	jg     0x41dd0e
  41dcb5:	xchg   esi,eax
  41dcb6:	cwde   
  41dcb7:	aas    
  41dcb8:	jns    0x41dd13
  41dcba:	bound  ebx,QWORD PTR [ebx+0xe845059]
  41dcc0:	sub    BYTE PTR ds:0xc7bfa48,ah
  41dcc6:	repnz or esp,DWORD PTR [eax]
  41dcc9:	add    edi,ebx
  41dccb:	aam    0xda
  41dccd:	add    DWORD PTR [eax+0x0],esp
  41dcd0:	add    eax,0xff36c17e
  41dcd5:	inc    edx
  41dcd6:	repnz pop ebx
  41dcd8:	fnstcw WORD PTR [edi]
  41dcda:	and    DWORD PTR [ebp-0xaac229],eax
  41dce0:	idiv   bh
  41dce2:	lahf   
  41dce3:	(bad)  
  41dce4:	xlat   BYTE PTR ds:[ebx]
  41dce5:	xor    al,0xc0
  41dce7:	fstp   QWORD PTR [edx-0x44]
  41dcea:	int    0xb9
  41dcec:	cwde   
  41dced:	mov    eax,ds:0x4a625baa
  41dcf2:	sub    ch,ah
  41dcf4:	lea    esp,ds:0x20e1c8d2
  41dcfa:	push   esi
  41dcfb:	xchg   edx,eax
  41dcfc:	mov    dh,0x36
  41dcfe:	mov    ds:0xe54c9dee,al
  41dd03:	imul   edx,DWORD PTR [ecx+0x45],0xffffffe2
  41dd07:	cmp    dh,BYTE PTR [ecx+0x5d]
  41dd0a:	add    al,0x44
  41dd0c:	rcr    DWORD PTR [ecx+esi*8-0x17],cl
  41dd10:	fistp  WORD PTR [edx+0x3f]
  41dd13:	xor    eax,ecx
  41dd15:	push   edi
  41dd16:	cmc    
  41dd17:	(bad)  
  41dd18:	nop
  41dd19:	adc    edi,ecx
  41dd1b:	add    edi,DWORD PTR [eax+eax*8-0x1e]
  41dd1f:	sub    eax,0xbedce296
  41dd24:	or     al,0x17
  41dd26:	jle    0x41dd9e
  41dd28:	inc    ebp
  41dd29:	xor    BYTE PTR [ebp-0x4f],al
  41dd2c:	loopne 0x41dd70
  41dd2e:	jg     0x41dd4c
  41dd30:	xchg   esp,eax
  41dd31:	ror    ah,1
  41dd33:	(bad)  
  41dd34:	sbb    DWORD PTR [ebx+0x4d48fdcb],eax
  41dd3a:	imul   ebx,edx,0x9e57d322
  41dd40:	retf   
  41dd41:	dec    ecx
  41dd42:	out    dx,al
  41dd43:	xchg   edi,eax
  41dd44:	fstp   QWORD PTR [edx+0xe]
  41dd47:	cwde   
  41dd48:	xlat   BYTE PTR ds:[ebx]
  41dd49:	or     al,0xc5
  41dd4b:	imul   esp,DWORD PTR [edi],0xee309f9c
  41dd51:	mov    edi,0xbb584a4e
  41dd56:	sti    
  41dd57:	inc    eax
  41dd58:	popa   
  41dd59:	out    dx,al
  41dd5a:	mov    ds:0xe5f64a5a,al
  41dd5f:	xchg   edx,eax
  41dd60:	pop    ebx
  41dd61:	sti    
  41dd62:	push   ebp
  41dd63:	mov    BYTE PTR [ebx],cl
  41dd65:	test   eax,0x287e05d0
  41dd6a:	cs in  eax,dx
  41dd6c:	fild   QWORD PTR [eax+0x268e45f2]
  41dd72:	add    eax,edi
  41dd74:	pusha  
  41dd75:	(bad)  
  41dd76:	xor    esi,DWORD PTR [edi-0x79]
  41dd79:	js     0x41dda8
  41dd7b:	mov    ds:0x9500cb6d,al
  41dd80:	fisubr DWORD PTR [edi+0x41]
  41dd83:	and    dl,al
  41dd85:	mov    dh,0x84
  41dd87:	dec    ebp
  41dd88:	xchg   ebp,eax
  41dd89:	xlat   BYTE PTR ds:[ebx]
  41dd8a:	in     eax,0x24
  41dd8c:	pop    ss
  41dd8d:	sbb    BYTE PTR [eax+0x20],dh
  41dd90:	push   cs
  41dd91:	pop    ecx
  41dd92:	and    al,0x32
  41dd94:	jae    0x41dd3b
  41dd96:	xor    al,0x4a
  41dd98:	xchg   edx,eax
  41dd99:	jnp    0x41dd96
  41dd9b:	dec    ebp
  41dd9c:	dec    edx
  41dd9d:	js     0x41dd43
  41dd9f:	popa   
  41dda0:	popa   
  41dda1:	cmp    bl,BYTE PTR [edx*2+0x43d3c230]
  41dda8:	xchg   ebx,eax
  41dda9:	outs   dx,BYTE PTR ds:[esi]
  41ddaa:	cmp    al,dh
  41ddac:	pop    eax
  41ddad:	push   edi
  41ddae:	mov    esi,0x8ebb2846
  41ddb3:	push   edi
  41ddb4:	mov    eax,ds:0x8f8e63a5
  41ddb9:	jecxz  0x41ddb5
  41ddbb:	ins    BYTE PTR es:[edi],dx
  41ddbc:	out    dx,eax
  41ddbd:	and    BYTE PTR [edi*8+0x148c6c94],cl
  41ddc4:	ret    
  41ddc5:	lahf   
  41ddc6:	or     eax,0x69b173f3
  41ddcb:	adc    BYTE PTR [ebx-0x5520f4f1],ch
  41ddd1:	jns    0x41dd54
  41ddd3:	push   ebp
  41ddd4:	sub    esp,DWORD PTR [edx-0x450d9ebd]
  41ddda:	cdq    
  41dddb:	mov    DWORD PTR [eax-0x64d0b98a],ebx
  41dde1:	dec    esi
  41dde2:	adc    ch,BYTE PTR [esi]
  41dde4:	mov    edi,0x8459f1de
  41dde9:	mov    eax,0x15d6a84a
  41ddee:	ret    0x8806
  41ddf1:	push   esi
  41ddf2:	out    dx,al
  41ddf3:	and    edx,DWORD PTR [ebx]
  41ddf5:	cmc    
  41ddf6:	loope  0x41ddd4
  41ddf8:	add    eax,0x9c23087f
  41ddfd:	sbb    dl,BYTE PTR [edi-0x6b]
  41de00:	mov    ds:0x1fdbc89,al
  41de05:	data16 jp 0x41de2a
  41de08:	sub    ah,BYTE PTR [ebx-0x4f]
  41de0b:	and    BYTE PTR [eax],0xd6
  41de0e:	cwde   
  41de0f:	inc    esi
  41de10:	sbb    DWORD PTR [ebp-0x41],eax
  41de13:	and    dl,BYTE PTR [ecx]
  41de15:	or     BYTE PTR [ebx+ebp*8-0x7be5e5b4],cl
  41de1c:	xchg   DWORD PTR [edi+esi*4+0x17],ecx
  41de20:	sub    ch,BYTE PTR [ecx-0x1351bbf3]
  41de26:	call   0x6197:0x638cece0
  41de2d:	jbe    0x41ddc6
  41de2f:	or     BYTE PTR [eax-0x386502b3],ch
  41de35:	jp     0x41de49
  41de37:	pushf  
  41de38:	push   ss
  41de39:	cli    
  41de3a:	inc    edx
  41de3b:	cmc    
  41de3c:	gs push ss
  41de3e:	test   BYTE PTR [ebx],cl
  41de40:	add    DWORD PTR [esi+0x483f6080],edi
  41de46:	jge    0x41de24
  41de48:	(bad)  
  41de4a:	and    ecx,ecx
  41de4c:	cwde   
  41de4d:	pop    ds
  41de4e:	dec    ecx
  41de4f:	or     eax,0x66263f6e
  41de54:	jp     0x41dea0
  41de56:	mov    WORD PTR [edi+eiz*2+0x2],fs
  41de5a:	mov    dl,0x14
  41de5c:	push   di
  41de5e:	jmp    0xb9c1731f
  41de63:	repz mov esi,0xd203b209
  41de69:	out    0xed,al
  41de6b:	retf   0xb86a
  41de6e:	inc    ebx
  41de6f:	mov    al,ds:0x58c1c4a9
  41de74:	ins    BYTE PTR es:[edi],dx
  41de75:	xchg   edx,eax
  41de76:	loopne 0x41dee0
  41de78:	jg     0x41de1b
  41de7a:	fs stos DWORD PTR es:[edi],eax
  41de7c:	mov    ch,0x50
  41de7e:	add    al,0xd0
  41de80:	xchg   BYTE PTR [ebp+0x30b29996],bh
  41de86:	punpcklwd mm1,mm3
  41de89:	pop    edx
  41de8a:	mov    WORD PTR [esi-0x65],es
  41de8d:	push   ecx
  41de8e:	mov    esp,DWORD PTR [ebp-0x2d]
  41de91:	sar    ch,0x78
  41de94:	(bad)  
  41de96:	push   esi
  41de97:	test   DWORD PTR [eax],ebp
  41de99:	std    
  41de9a:	aas    
  41de9b:	inc    edx
  41de9c:	das    
  41de9d:	xor    al,0xf6
  41de9f:	ins    BYTE PTR es:[edi],dx
  41dea0:	frstpm(287 only) 
  41dea2:	push   ecx
  41dea3:	add    BYTE PTR [ecx+0x43d4fa34],ch
  41dea9:	ret    
  41deaa:	dec    esp
  41deab:	fisubr DWORD PTR [esp+eiz*8+0x27]
  41deaf:	xchg   cl,dl
  41deb1:	mov    WORD PTR [ebx-0x5],ss
  41deb4:	mov    ah,0x6c
  41deb6:	push   es
  41deb7:	stc    
  41deb8:	call   0xed3854c2
  41debd:	iret   
  41debe:	pusha  
  41debf:	xchg   ebp,eax
  41dec0:	inc    ebx
  41dec1:	fsubr  QWORD PTR [eax-0x1]
  41dec4:	cld    
  41dec5:	mov    esi,DWORD PTR [esi+0x284cf23]
  41decb:	in     al,dx
  41decc:	leave  
  41decd:	mov    eax,ds:0x55b7d46
  41ded2:	xlat   BYTE PTR ds:[ebx]
  41ded3:	out    0x57,eax
  41ded5:	mov    esp,0x3eecc813
  41deda:	nop
  41dedb:	dec    ebp
  41dedc:	jo     0x41dee8
  41dede:	dec    edx
  41dedf:	sbb    ebp,DWORD PTR [ebx]
  41dee1:	xor    al,0x3d
  41dee3:	ror    DWORD PTR es:[eax-0x25b515f1],0xf1
  41deeb:	jae    0x41df12
  41deed:	or     cl,bl
  41deef:	aaa    
  41def0:	adc    DWORD PTR [eax],0x0
  41def3:	push   edi
  41def4:	jecxz  0x41dea6
  41def6:	mov    ds:0x1a36d164,eax
  41defb:	and    al,0xe1
  41defd:	mul    BYTE PTR [ecx+0x7]
  41df00:	jg     0x41de9b
  41df02:	ja     0x41deb5
  41df04:	frstor [ecx+0x7a]
  41df07:	inc    edx
  41df08:	pop    ecx
  41df09:	mov    al,0xe6
  41df0b:	xor    ebp,edi
  41df0d:	sti    
  41df0e:	dec    ecx
  41df0f:	pop    eax
  41df10:	mov    ah,0x33
  41df12:	div    DWORD PTR [edi+0x72]
  41df15:	outs   dx,DWORD PTR ds:[esi]
  41df16:	xchg   bx,ax
  41df18:	dec    esp
  41df19:	lods   eax,DWORD PTR ds:[esi]
  41df1a:	or     eax,DWORD PTR [ebp-0x77]
  41df1d:	aaa    
  41df1e:	rol    BYTE PTR [esi+0x50b87018],0xd4
  41df25:	sbb    al,0x61
  41df27:	jb     0x41dee4
  41df29:	mov    ebp,0xa25230de
  41df2e:	stos   DWORD PTR es:[edi],eax
  41df2f:	cmp    eax,0xb16cb684
  41df34:	ins    DWORD PTR es:[edi],dx
  41df35:	mov    eax,DWORD PTR [ecx+0x7974f189]
  41df3b:	pushf  
  41df3c:	and    esi,esp
  41df3e:	out    dx,eax
  41df3f:	lock dec ebp
  41df41:	sbb    cl,BYTE PTR ds:0x876e730c
  41df47:	pop    eax
  41df48:	or     dh,BYTE PTR [ebp+0x66]
  41df4b:	lods   al,BYTE PTR ds:[esi]
  41df4c:	dec    ebp
  41df4d:	mov    esi,0xfd9d0585
  41df52:	or     al,0xbc
  41df54:	xor    BYTE PTR [ebp-0x78],dh
  41df57:	test   BYTE PTR [edi-0x69],cl
  41df5a:	outs   dx,DWORD PTR ds:[esi]
  41df5b:	inc    ecx
  41df5c:	mov    ecx,0xb8fdea13
  41df61:	adc    eax,0xcd1b401
  41df66:	ds jbe 0x41df1b
  41df69:	mov    ebx,0x6fb181fc
  41df6e:	out    dx,al
  41df6f:	mov    esi,DWORD PTR [edi]
  41df71:	pop    ds
  41df72:	pop    ss
  41df73:	xlat   BYTE PTR ds:[ebx]
  41df74:	outs   dx,BYTE PTR ds:[esi]
  41df75:	ds pop esi
  41df77:	jo     0x41dfe1
  41df79:	mov    DWORD PTR [ebp-0x2ac31633],esi
  41df7f:	sub    al,0x32
  41df81:	aad    0xf0
  41df83:	retf   0xd922
  41df86:	test   al,0xd9
  41df88:	xchg   ecx,eax
  41df89:	mov    ds:0x16539f50,al
  41df8e:	pushw  cs
  41df90:	or     ecx,eax
  41df92:	shl    ch,0x6c
  41df95:	fnsave [eax+edi*4]
  41df98:	xlat   BYTE PTR ds:[ebx]
  41df99:	pop    edi
  41df9a:	jle    0x41df60
  41df9c:	scas   eax,DWORD PTR es:[edi]
  41df9d:	push   esi
  41df9e:	mov    edi,0xda20838f
  41dfa3:	mov    cs,WORD PTR [esi+edx*4]
  41dfa6:	sahf   
  41dfa7:	inc    eax
  41dfa8:	fcomp  QWORD PTR ds:0x37b9d0d5
  41dfae:	jno    0x41df69
  41dfb0:	(bad)  
  41dfb1:	push   ebp
  41dfb2:	sti    
  41dfb3:	xor    eax,0xbe959c5a
  41dfb8:	mov    BYTE PTR [ebx+0x4dff9ca9],cl
  41dfbe:	imul   edx
  41dfc0:	jo     0x41e006
  41dfc2:	repz call 0x652b:0xf0e8264b
  41dfca:	in     eax,0x28
  41dfcc:	jbe    0x41df59
  41dfce:	fstp   DWORD PTR [edi-0x48612d37]
  41dfd4:	add    DWORD PTR [ebx-0x1885580f],eax
  41dfda:	mov    esp,0x3757e574
  41dfdf:	sub    BYTE PTR [esi+0x5],bl
  41dfe2:	loop   0x41dfab
  41dfe4:	sbb    eax,0x27334060
  41dfe9:	std    
  41dfea:	and    ebx,DWORD PTR [eax+0x7b]
  41dfed:	add    DWORD PTR [ebx-0x7ace8751],0x2432be2f
  41dff7:	int3   
  41dff8:	fs out 0xeb,eax
  41dffb:	vpshld xmm0,xmm7,xmm7
  41e000:	dec    ebp
  41e001:	inc    ebx
  41e002:	and    ebx,DWORD PTR [ebx-0x49884bb]
  41e008:	cmp    al,0xf6
  41e00a:	cmp    ecx,DWORD PTR [eax+0x1482223b]
  41e010:	mov    ds:0x4868d02c,al
  41e015:	or     al,0x11
  41e017:	hlt    
  41e018:	lds    esi,FWORD PTR [esi-0x4b]
  41e01b:	mov    esp,0x6cb9dd3a
  41e020:	push   ecx
  41e021:	mov    esi,0x956257dc
  41e026:	and    bl,bh
  41e028:	jns    0x41e008
  41e02a:	icebp  
  41e02b:	inc    edx
  41e02c:	xchg   esi,eax
  41e02d:	in     al,0x83
  41e02f:	push   0x72992a30
  41e034:	push   esp
  41e035:	add    al,0x43
  41e037:	pop    esp
  41e038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e039:	popf   
  41e03a:	jg     0x41e0b2
  41e03c:	add    BYTE PTR [edx+0x45],0x2d
  41e040:	sbb    DWORD PTR [ebx-0x6d],ebp
  41e043:	xor    BYTE PTR [eax+eiz*1-0x21e7b96e],dl
  41e04a:	aad    0x9
  41e04c:	push   esp
  41e04d:	data16 rcr ch,cl
  41e050:	rol    DWORD PTR [ecx-0x5bc548d8],1
  41e056:	push   ss
  41e057:	outs   dx,BYTE PTR ds:[esi]
  41e058:	(bad)
  41e05b:	cwde   
  41e05c:	mov    bh,0x76
  41e05e:	mov    ah,0xc4
  41e060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e061:	mov    ds:0x55ff723e,eax
  41e066:	xchg   edi,eax
  41e067:	sub    ch,BYTE PTR [esi]
  41e069:	mov    ebx,0xd5941152
  41e06e:	pushf  
  41e06f:	mov    dl,0x20
  41e071:	dec    esp
  41e072:	and    dl,al
  41e074:	ret    0x1af3
  41e077:	dec    eax
  41e078:	jae    0x41e002
  41e07a:	loopne 0x41e050
  41e07c:	cwde   
  41e07d:	dec    edx
  41e07e:	xor    DWORD PTR [ecx-0x41],eax
  41e081:	jle    0x41e033
  41e083:	mov    bl,0x89
  41e085:	sbb    al,0x63
  41e087:	pusha  
  41e088:	jmp    0x1ab3284c
  41e08d:	inc    edi
  41e08e:	les    ebx,FWORD PTR [ebp+0x27]
  41e091:	aad    0x57
  41e093:	pop    ds
  41e094:	cmp    bl,cl
  41e096:	mov    eax,0xcf10d21b
  41e09b:	sbb    bh,BYTE PTR [ebp+0x67]
  41e09e:	ins    BYTE PTR es:[edi],dx
  41e09f:	adc    BYTE PTR [ebx+0x2e827427],ah
  41e0a5:	cli    
  41e0a6:	push   es
  41e0a7:	push   edx
  41e0a8:	test   al,0xb1
  41e0aa:	push   edx
  41e0ab:	(bad)  [ebx]
  41e0ad:	lods   eax,DWORD PTR ds:[esi]
  41e0ae:	xor    BYTE PTR [edi+0x15],dh
  41e0b1:	mov    edx,0x85fca196
  41e0b6:	sbb    BYTE PTR [edx+0x56],0x27
  41e0ba:	cmp    eax,0x70941f91
  41e0bf:	mov    DWORD PTR ds:0x428e3f,0x1354
  41e0c9:	jne    0x41e100
  41e0cf:	cmp    esi,ebx
  41e0d1:	mov    DWORD PTR ds:0x428e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x428e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x428e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x428eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x428ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x428e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x428e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x428e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x428e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x428ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x428ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x428e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x428e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x428e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x428e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x428e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x428e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x428e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x428eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	lods   ax,WORD PTR ds:[esi]
  41e384:	or     DWORD PTR [edx-0x7d25349a],ebx
  41e38a:	and    DWORD PTR [edi],0x60
  41e38d:	add    DWORD PTR [ebx-0x6326a67a],0x3d
  41e394:	mov    esp,0x65070c9f
  41e399:	mov    WORD PTR [edx+0x41],fs
  41e39c:	aam    0xb3
  41e39e:	mov    dl,0x36
  41e3a0:	sbb    BYTE PTR [ecx-0x4eced000],bl
  41e3a6:	pop    es
  41e3a7:	push   eax
  41e3a8:	fadd   QWORD PTR [eax]
  41e3aa:	scas   eax,DWORD PTR es:[edi]
  41e3ab:	sbb    BYTE PTR [edi+0x1882df8],dh
  41e3b1:	cli    
  41e3b2:	pop    ebp
  41e3b3:	cs in  al,0xd9
  41e3b6:	retf   
  41e3b7:	aam    0xe1
  41e3b9:	imul   esi,esi,0xffffff89
  41e3bc:	cli    
  41e3bd:	push   ecx
  41e3be:	mov    ebx,0xbf2b31fc
  41e3c3:	mov    eax,0x7f1db075
  41e3c8:	out    0x90,al
  41e3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3cb:	pusha  
  41e3cc:	mov    ebx,0xf312e826
  41e3d1:	cld    
  41e3d2:	mov    esi,0x47d6cd84
  41e3d7:	xchg   edi,eax
  41e3d8:	push   eax
  41e3d9:	mov    ah,0xaf
  41e3db:	xor    BYTE PTR [esi+0x4a],cl
  41e3de:	test   DWORD PTR [ebp-0x7f9187bf],esi
  41e3e4:	mov    ds:0xe2174517,al
  41e3e9:	mov    ds:0xf30fe2ab,eax
  41e3ee:	cmp    eax,0xf985c8a7
  41e3f3:	mov    bh,BYTE PTR [eax-0x42]
  41e3f6:	jbe    0x41e475
  41e3f8:	cwde   
  41e3f9:	ficom  WORD PTR ds:0xa0c82bb4
  41e3ff:	jne    0x41e440
  41e401:	loope  0x41e3f2
  41e403:	mov    al,ds:0x925610a
  41e408:	clc    
  41e409:	shr    BYTE PTR [ebp+0x63],1
  41e40c:	inc    edx
  41e40d:	outs   dx,DWORD PTR ds:[esi]
  41e40e:	(bad)  
  41e40f:	(bad)
  41e412:	mov    eax,ds:0xb9ba14b5
  41e417:	xchg   edx,eax
  41e418:	test   al,dl
  41e41a:	pop    ds
  41e41b:	sbb    al,0xdc
  41e41d:	std    
  41e41e:	inc    esi
  41e41f:	pop    eax
  41e420:	xor    dh,ch
  41e422:	mov    BYTE PTR [edi+0x5f],dl
  41e425:	push   es
  41e426:	(bad)  
  41e427:	retf   0x7e79
  41e42a:	mov    ah,ch
  41e42c:	retf   
  41e42d:	scas   al,BYTE PTR es:[edi]
  41e42e:	call   0x6bdd12c5
  41e433:	and    eax,0x35537996
  41e438:	and    ch,bh
  41e43a:	cmc    
  41e43b:	jmp    0x20d2:0x2920aa0
  41e442:	dec    esp
  41e443:	push   edx
  41e444:	sbb    edi,DWORD PTR [edx]
  41e446:	mov    esi,0x8990cc01
  41e44b:	ins    DWORD PTR es:[edi],dx
  41e44c:	dec    esp
  41e44d:	mov    al,0x9e
  41e44f:	jge    0x41e438
  41e451:	mov    ebx,0x30462e3e
  41e456:	sbb    DWORD PTR [ebx-0x74],esi
  41e459:	mov    ebp,0x2b888366
  41e45e:	daa    
  41e45f:	jg     0x41e3f3
  41e461:	ds ds adc eax,0x9505d22d
  41e468:	mov    ecx,0x8d24a666
  41e46d:	sar    DWORD PTR [edi-0x5155c44d],cl
  41e473:	add    DWORD PTR [esi-0x68],ecx
  41e476:	nop
  41e477:	or     ebp,DWORD PTR [ecx-0x78]
  41e47a:	cli    
  41e47b:	fsubr  QWORD PTR [eax]
  41e47d:	aas    
  41e47e:	in     al,dx
  41e47f:	bound  esp,QWORD PTR [ebx+0x6f5285ce]
  41e485:	mov    WORD PTR [esi+0x4b],cs
  41e488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e489:	cmovge ecx,DWORD PTR [ebx+0x68523215]
  41e490:	mul    dh
  41e492:	repz imul ebp,DWORD PTR ds:0x5a09910,0x8af8e923
  41e49d:	outs   dx,BYTE PTR ds:[esi]
  41e49e:	hlt    
  41e49f:	push   ebx
  41e4a0:	sub    DWORD PTR [esp+ebx*2],esi
  41e4a3:	fdivr  DWORD PTR [esi-0x39c9462b]
  41e4a9:	in     eax,0x67
  41e4ab:	call   0xa3e65a1
  41e4b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4b1:	cwde   
  41e4b2:	int3   
  41e4b3:	ret    
  41e4b4:	outs   dx,BYTE PTR ds:[esi]
  41e4b5:	inc    esp
  41e4b6:	mov    esp,0x28761106
  41e4bb:	enter  0x2802,0x1d
  41e4bf:	cmp    cl,BYTE PTR [esi+0x45]
  41e4c2:	imul   eax,DWORD PTR [eax],0xffffffd0
  41e4c5:	stos   BYTE PTR es:[edi],al
  41e4c6:	inc    esp
  41e4c7:	call   0x724087b
  41e4cc:	sbb    eax,0x98a58042
  41e4d1:	sbb    esi,DWORD PTR [edx+0x75]
  41e4d4:	pop    ss
  41e4d5:	daa    
  41e4d6:	dec    eax
  41e4d7:	jecxz  0x41e4c9
  41e4d9:	rcr    BYTE PTR [esi],cl
  41e4db:	imul   eax,DWORD PTR [ebp-0x2a81467],0x58
  41e4e2:	mov    esi,0x8144950e
  41e4e7:	(bad)  
  41e4e8:	sbb    dh,BYTE PTR [edx+0x2e78630]
  41e4ee:	(bad)  
  41e4ef:	xchg   edi,eax
  41e4f0:	das    
  41e4f1:	out    0x61,eax
  41e4f3:	or     ebp,DWORD PTR [eax]
  41e4f5:	fcmovb st,st(3)
  41e4f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4f8:	xchg   esi,eax
  41e4f9:	scas   al,BYTE PTR es:[edi]
  41e4fa:	adc    BYTE PTR [esi-0x5e],cl
  41e4fd:	outs   dx,DWORD PTR ds:[esi]
  41e4fe:	dec    edi
  41e4ff:	rcl    dl,0x81
  41e502:	ja     0x41e4a8
  41e504:	loop   0x41e4ba
  41e506:	push   eax
  41e507:	jmp    0xbb114a62
  41e50c:	push   edx
  41e50d:	je     0x41e554
  41e50f:	xchg   BYTE PTR [ebx+ebx*1+0x1d7928be],al
  41e516:	test   al,0x10
  41e518:	and    eax,0xd68507bd
  41e51d:	in     al,0xe2
  41e51f:	pop    es
  41e520:	push   cs
  41e521:	xchg   edx,eax
  41e522:	add    BYTE PTR [eax],ch
  41e524:	jns    0x41e520
  41e526:	test   BYTE PTR [esi+0x58887c0d],dh
  41e52c:	rcl    BYTE PTR [esp+edx*8],1
  41e52f:	cmp    BYTE PTR [ecx-0x2f],dh
  41e532:	pop    edx
  41e533:	iret   
  41e534:	cdq    
  41e535:	mov    ah,BYTE PTR [esi-0x58]
  41e538:	jp     0x41e536
  41e53a:	sub    eax,0xb87edf5
  41e53f:	je     0x41e4d6
  41e541:	cmp    BYTE PTR gs:[ebp-0xf],ch
  41e545:	fnstcw WORD PTR [esi-0x25]
  41e548:	stos   BYTE PTR es:[edi],al
  41e549:	loopne 0x41e59c
  41e54b:	int    0xec
  41e54d:	push   esp
  41e54e:	ins    DWORD PTR es:[edi],dx
  41e54f:	sub    bl,BYTE PTR [esi+0x7d]
  41e552:	cmp    BYTE PTR [eax+0x39],ch
  41e555:	ins    BYTE PTR es:[edi],dx
  41e556:	or     cl,ch
  41e558:	ins    DWORD PTR es:[edi],dx
  41e559:	jmp    0x9a83ac9d
  41e55e:	or     eax,0xc6f47d2a
  41e563:	push   ebp
  41e564:	ret    
  41e565:	sub    DWORD PTR [ecx+0x552fa909],0x42
  41e56c:	cmp    BYTE PTR [ebx-0x2664152],bl
  41e572:	call   0xc07e:0x54b0aec3
  41e579:	xlat   BYTE PTR ds:[ebx]
  41e57a:	jge    0x41e5eb
  41e57c:	lods   eax,DWORD PTR ds:[esi]
  41e57d:	or     edx,esi
  41e57f:	stos   BYTE PTR es:[edi],al
  41e580:	and    eax,0xd5954c
  41e585:	cli    
  41e586:	cdq    
  41e587:	pop    ecx
  41e588:	dec    esi
  41e589:	(bad)
  41e58c:	dec    ebx
  41e58d:	fs addr16 xchg ebp,eax
  41e590:	xchg   ebx,esp
  41e592:	xor    DWORD PTR [ebx+0x7f],ebx
  41e595:	fdiv   st(4),st
  41e597:	inc    eax
  41e598:	cwde   
  41e599:	mov    ah,0x66
  41e59b:	popa   
  41e59c:	stos   BYTE PTR es:[edi],al
  41e59d:	and    ecx,DWORD PTR [ebx]
  41e59f:	mov    es,WORD PTR [ecx]
  41e5a1:	cmp    esp,esi
  41e5a3:	cmp    al,al
  41e5a5:	test   eax,0x25041106
  41e5aa:	shl    BYTE PTR [eax-0x3c],1
  41e5ad:	clc    
  41e5ae:	adc    ebp,edx
  41e5b0:	in     eax,dx
  41e5b1:	(bad)  
  41e5b2:	retf   
  41e5b3:	mov    ebp,0xc4260832
  41e5b8:	add    bh,BYTE PTR [esi-0x75d61dae]
  41e5be:	test   ch,0x20
  41e5c1:	test   al,0xa7
  41e5c3:	aam    0x29
  41e5c5:	jl     0x41e641
  41e5c7:	lea    ecx,[edx]
  41e5c9:	iret   
  41e5ca:	mov    ebp,fs
  41e5cc:	addr16 add eax,0x1a20eb62
  41e5d2:	cdq    
  41e5d3:	jp     0x41e5b1
  41e5d5:	out    dx,al
  41e5d6:	pop    edx
  41e5d7:	jae    0x41e59f
  41e5d9:	inc    edi
  41e5da:	add    eax,0xc8b54188
  41e5df:	ffree  st(6)
  41e5e1:	sub    dh,BYTE PTR [ecx+0x72]
  41e5e4:	push   ecx
  41e5e5:	neg    DWORD PTR [ebp-0x63337c0b]
  41e5eb:	jmp    0x115620cb
  41e5f0:	dec    eax
  41e5f1:	fld    DWORD PTR [edi-0x1390eb37]
  41e5f7:	aad    0x75
  41e5f9:	pop    eax
  41e5fa:	mov    bh,0x7b
  41e5fc:	test   BYTE PTR [esi+0x5b6899d3],dh
  41e602:	push   ss
  41e603:	je     0x41e59a
  41e605:	cmp    ch,BYTE PTR [ebp+0x758a2a9d]
  41e60b:	push   ebp
  41e60c:	adc    al,0xd
  41e60e:	mov    edx,0xcac7d6e3
  41e613:	xchg   edi,eax
  41e614:	mov    al,ds:0xd427fc74
  41e619:	and    al,cl
  41e61b:	or     dl,BYTE PTR ds:0xf075e978
  41e621:	shl    BYTE PTR [edx],0xa8
  41e624:	cmp    eax,0x57188985
  41e629:	xchg   ebx,eax
  41e62a:	int    0x31
  41e62c:	pop    ebp
  41e62d:	mov    ds:0x9c0a7923,al
  41e632:	adc    bh,al
  41e634:	rcr    DWORD PTR [edx+ecx*2],1
  41e637:	cs push 0x61
  41e63a:	stos   DWORD PTR es:[edi],eax
  41e63b:	lods   al,BYTE PTR ds:[esi]
  41e63c:	mov    al,ds:0x23c3644a
  41e641:	adc    ch,BYTE PTR [edi+edi*1+0x4e]
  41e645:	leave  
  41e646:	mov    dl,0xfa
  41e648:	adc    edx,esp
  41e64a:	push   ebx
  41e64b:	call   0xdb53f2a3
  41e650:	adc    al,0x88
  41e652:	sub    bl,cl
  41e654:	not    DWORD PTR [esi+0x23e502ba]
  41e65a:	call   0xd8c:0x8407c219
  41e661:	dec    edi
  41e662:	jl     0x41e607
  41e664:	popf   
  41e665:	jmp    0x41e624
  41e667:	inc    ecx
  41e668:	mov    dh,0x79
  41e66a:	jb     0x41e615
  41e66c:	loopne 0x41e657
  41e66e:	mov    ds:0xe5a12247,al
  41e673:	sub    ecx,DWORD PTR [esi+0x6c8dd8e8]
  41e679:	popa   
  41e67a:	fisubr WORD PTR [esp+edx*4-0x2a]
  41e67e:	mov    eax,ds:0xfcbd7eab
  41e683:	ret    
  41e684:	pop    ss
  41e685:	cmp    ebp,ebx
  41e687:	pusha  
  41e688:	out    dx,eax
  41e689:	sub    al,0x4f
  41e68b:	adc    al,0x2d
  41e68d:	inc    ecx
  41e68e:	add    al,0xce
  41e690:	push   eax
  41e691:	xor    BYTE PTR [edi-0x22d09b6b],0x3d
  41e698:	cmp    eax,0x7d147d05
  41e69d:	mov    ds:0xdb985f1f,al
  41e6a2:	adc    BYTE PTR [ecx],bh
  41e6a4:	push   ss
  41e6a5:	lds    eax,FWORD PTR [edx+0x62]
  41e6a8:	std    
  41e6a9:	xchg   DWORD PTR [edx],ebx
  41e6ab:	dec    edx
  41e6ac:	sub    BYTE PTR [ecx+edx*2],al
  41e6af:	cld    
  41e6b0:	dec    ecx
  41e6b1:	sbb    ebx,edx
  41e6b3:	xor    bl,bh
  41e6b5:	std    
  41e6b6:	shl    DWORD PTR [ebp-0x12d441d1],1
  41e6bc:	jp     0x41e698
  41e6be:	rcl    DWORD PTR [ebx+0x516b4cfb],1
  41e6c4:	ja     0x41e6af
  41e6c6:	or     ah,dl
  41e6c8:	sub    ah,ah
  41e6ca:	sub    al,0x83
  41e6cc:	fwait
  41e6cd:	ins    BYTE PTR es:[edi],dx
  41e6ce:	xor    eax,0xeae1691f
  41e6d3:	lahf   
  41e6d4:	jb     0x41e6e9
  41e6d6:	dec    ecx
  41e6d7:	es cs stos DWORD PTR es:[edi],eax
  41e6da:	mov    ch,0x4a
  41e6dc:	sub    DWORD PTR [ecx-0x2d0acde4],esp
  41e6e2:	jb     0x41e68c
  41e6e4:	jp     0x41e6d6
  41e6e6:	sbb    ebp,esp
  41e6e8:	ret    
  41e6e9:	sub    DWORD PTR [edx-0x76],0xc637a365
  41e6f0:	jg     0x41e686
  41e6f2:	mov    bh,0x74
  41e6f4:	xchg   BYTE PTR [edx],ah
  41e6f6:	jae    0x41e6a2
  41e6f8:	shr    DWORD PTR [ebp-0x65389220],cl
  41e6fe:	cmc    
  41e6ff:	mov    ds:0x39b63d,al
  41e704:	in     al,dx
  41e705:	adc    ch,bl
  41e707:	fwait
  41e708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e709:	inc    edx
  41e70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e70b:	mov    eax,DWORD PTR [ecx]
  41e70d:	sub    al,0x32
  41e70f:	and    al,0x57
  41e711:	cmp    bh,al
  41e713:	sub    dl,BYTE PTR [esi-0x56]
  41e716:	and    DWORD PTR [eax-0x718c5072],eax
  41e71c:	pop    eax
  41e71d:	pushf  
  41e71e:	stc    
  41e71f:	addr16 nop
  41e721:	jle    0x41e6a9
  41e723:	jge    0x41e6d3
  41e725:	jae    0x41e78a
  41e727:	push   esp
  41e728:	shr    DWORD PTR [esi-0x6d],cl
  41e72b:	or     eax,0x7d41a930
  41e730:	jno    0x41e6e8
  41e732:	jns    0x41e7a8
  41e734:	add    BYTE PTR [esi+esi*4-0x68],cl
  41e738:	gs xchg esi,eax
  41e73a:	in     al,dx
  41e73b:	lea    edx,[edx+0x78e09d49]
  41e741:	fwait
  41e742:	sub    eax,0xef16502
  41e747:	adc    DWORD PTR [ebx+0x5113d632],edi
  41e74d:	jmp    0xbeb5f152
  41e752:	xchg   esp,eax
  41e753:	fld    TBYTE PTR [ecx+0x4b]
  41e756:	mov    WORD PTR [edi+0x25],?
  41e759:	jl     0x41e727
  41e75b:	aam    0x9b
  41e75d:	outs   dx,BYTE PTR ds:[esi]
  41e75e:	daa    
  41e75f:	scas   al,BYTE PTR es:[edi]
  41e760:	add    cl,BYTE PTR [ebp+0x494d7a02]
  41e766:	cmp    al,0xdb
  41e768:	or     ecx,DWORD PTR [edi-0x6a21904a]
  41e76e:	outs   dx,BYTE PTR ds:[esi]
  41e76f:	lahf   
  41e770:	push   ecx
  41e771:	mov    dl,0xc6
  41e773:	xor    esi,DWORD PTR ds:0xcb71c2f3
  41e779:	xchg   BYTE PTR [ebx],dh
  41e77b:	jl     0x41e7fc
  41e77d:	icebp  
  41e77e:	xor    al,0x72
  41e780:	mov    edi,0x67aa5185
  41e785:	daa    
  41e786:	div    BYTE PTR [edx+0x0]
  41e789:	mov    ebx,0x19b0b0c1
  41e78e:	jmp    0x7a51:0xaf1c3eec
  41e795:	mov    cl,0x83
  41e797:	mov    ecx,DWORD PTR [edi+0x3f70995d]
  41e79d:	mov    esi,0x47e41eb3
  41e7a2:	jno    0x41e802
  41e7a4:	push   ecx
  41e7a5:	mov    ebp,0x5731e060
  41e7aa:	ds aam 0xdf
  41e7ad:	cmp    bl,BYTE PTR [eax-0x2d5bb75b]
  41e7b3:	sbb    DWORD PTR [edi],ebx
  41e7b5:	xor    al,cl
  41e7b7:	jb     0x41e771
  41e7b9:	mov    al,ds:0x360d78a2
  41e7be:	add    ebp,esp
  41e7c0:	xor    DWORD PTR [edi-0x1e],esi
  41e7c3:	adc    ebx,esi
  41e7c5:	loopne 0x41e818
  41e7c7:	enter  0x4106,0x5a
  41e7cb:	lods   al,BYTE PTR ds:[esi]
  41e7cc:	and    BYTE PTR [ebp-0x54],bl
  41e7cf:	ins    BYTE PTR es:[edi],dx
  41e7d0:	popf   
  41e7d1:	pop    ebx
  41e7d2:	scas   eax,DWORD PTR es:[edi]
  41e7d3:	aam    0x16
  41e7d5:	mov    bh,0xf9
  41e7d7:	sub    BYTE PTR [edx+0x26afb26e],dl
  41e7dd:	push   eax
  41e7de:	lahf   
  41e7df:	mov    ebx,0xcb4b8bdd
  41e7e4:	dec    edx
  41e7e5:	xchg   ecx,eax
  41e7e6:	pop    ebx
  41e7e7:	push   esp
  41e7e8:	lock nop
  41e7ea:	push   ecx
  41e7eb:	mov    cl,0x51
  41e7ed:	xor    DWORD PTR [edx-0x72],ecx
  41e7f0:	stos   BYTE PTR es:[edi],al
  41e7f1:	xchg   ecx,eax
  41e7f2:	add    BYTE PTR [ebp+0x1d963ed9],ah
  41e7f8:	in     eax,dx
  41e7f9:	test   DWORD PTR [ecx+0x3c46ea76],ebx
  41e7ff:	call   0x8930:0xa384e0a5
  41e806:	mov    al,ds:0x42097b27
  41e80b:	fldcw  WORD PTR [ecx+eiz*8-0x42]
  41e80f:	adc    ah,BYTE PTR [ebp-0x5c0a3dcd]
  41e815:	cmp    dl,BYTE PTR [ebx+0x56c75351]
  41e81b:	xor    al,0xe9
  41e81d:	mov    esp,0xcf5191b8
  41e822:	pop    edx
  41e823:	sub    eax,0x3a70884
  41e828:	pop    ebp
  41e829:	xlat   BYTE PTR ds:[ebx]
  41e82a:	dec    edx
  41e82b:	add    dh,al
  41e82d:	test   BYTE PTR [edx],0x58
  41e830:	sub    dh,BYTE PTR [ebp-0x10]
  41e833:	call   0xac1e49fb
  41e838:	jle    0x41e873
  41e83a:	lods   eax,DWORD PTR ds:[esi]
  41e83b:	xor    al,0x7f
  41e83d:	mov    esi,0xb8924367
  41e842:	add    ebp,DWORD PTR [eiz*2-0x4e8229fc]
  41e849:	mov    bl,0x9b
  41e84b:	ret    
  41e84c:	fcom   QWORD PTR [ecx]
  41e84e:	or     DWORD PTR [eax+0x494546a2],edx
  41e854:	push   ss
  41e855:	xor    DWORD PTR [edi],edx
  41e857:	inc    esp
  41e858:	scas   eax,DWORD PTR es:[edi]
  41e859:	inc    esp
  41e85a:	push   ebx
  41e85b:	adc    edx,DWORD PTR [ebx-0x16]
  41e85e:	in     al,0x16
  41e860:	arpl   WORD PTR [eax],bx
  41e862:	clc    
  41e863:	and    bh,BYTE PTR [ecx+0x52]
  41e866:	pop    ds
  41e867:	dec    BYTE PTR [edi+0x30]
  41e86a:	mov    al,0xf3
  41e86c:	xlat   BYTE PTR ds:[ebx]
  41e86d:	mov    cl,0xf9
  41e86f:	sar    BYTE PTR [ebx],1
  41e871:	inc    ebx
  41e872:	sahf   
  41e873:	push   edx
  41e874:	or     al,BYTE PTR [esi-0xe]
  41e877:	push   cs
  41e878:	cs (bad) 
  41e87a:	sub    esp,DWORD PTR [eax+ebx*8+0x66]
  41e87e:	scas   al,BYTE PTR es:[edi]
  41e87f:	xchg   edi,eax
  41e880:	cmp    al,BYTE PTR [eax]
  41e882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e883:	into   
  41e884:	ins    BYTE PTR es:[edi],dx
  41e885:	jmp    0xd1916ecb
  41e88a:	int    0xfe
  41e88c:	mov    ah,0x26
  41e88e:	hlt    
  41e88f:	mov    ah,BYTE PTR [esi-0x24]
  41e892:	jp     0x41e844
  41e894:	add    al,0x80
  41e896:	jo     0x41e879
  41e898:	cli    
  41e899:	sbb    edx,esi
  41e89b:	inc    edx
  41e89c:	fsubr  st(6),st
  41e89e:	jp     0x41e905
  41e8a0:	out    dx,al
  41e8a1:	loope  0x41e8a4
  41e8a3:	mov    dl,0x5c
  41e8a5:	sub    ah,BYTE PTR [ecx+0x7713c42e]
  41e8ab:	adc    al,0x68
  41e8ad:	call   0xc9d73bbd
  41e8b2:	inc    ecx
  41e8b3:	pop    edi
  41e8b4:	or     eax,0x943002c7
  41e8b9:	call   0x7f1c7b7
  41e8be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8bf:	push   ebx
  41e8c0:	push   ss
  41e8c1:	adc    eax,0x53
  41e8c4:	in     al,0xa0
  41e8c6:	stc    
  41e8c7:	lds    edi,FWORD PTR [edx]
  41e8c9:	cmp    DWORD PTR [eax+0x1a],esp
  41e8cc:	dec    ebx
  41e8cd:	dec    edi
  41e8ce:	sahf   
  41e8cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8d0:	sub    bl,BYTE PTR [edi]
  41e8d2:	jno    0x41e8fa
  41e8d4:	pop    edx
  41e8d5:	(bad)  
  41e8d6:	fcmove st,st(0)
  41e8d8:	cmp    bl,ch
  41e8da:	sbb    ecx,esi
  41e8dc:	sti    
  41e8dd:	(bad)  
  41e8de:	or     esi,DWORD PTR [edx+0x4]
  41e8e1:	sbb    bh,BYTE PTR [ecx]
  41e8e3:	cmp    esi,DWORD PTR [ecx-0x27]
  41e8e6:	jp     0x41e8ef
  41e8e8:	nop
  41e8e9:	cmp    al,0x1
  41e8eb:	rcl    al,0x17
  41e8ee:	mov    al,fs:0x48248ccc
  41e8f4:	scas   al,BYTE PTR es:[edi]
  41e8f5:	and    al,BYTE PTR [edi+0x5bc2df6e]
  41e8fb:	aaa    
  41e8fc:	mov    dh,0x70
  41e8fe:	or     BYTE PTR [esi+0x1a36e222],dh
  41e904:	jmp    0xb381:0x724bffff
  41e90b:	cmp    dh,BYTE PTR [edx+0x5a3471a0]
  41e911:	mov    ecx,0xd662cc88
  41e916:	jmp    0x1e8963a0
  41e91b:	pop    ebx
  41e91c:	(bad)  
  41e91d:	cli    
  41e91e:	retf   
  41e91f:	(bad)  
  41e920:	push   ebp
  41e921:	daa    
  41e922:	dec    edi
  41e923:	cs ins BYTE PTR es:[edi],dx
  41e925:	or     bh,BYTE PTR ds:0xa8816dbc
  41e92b:	(bad)  
  41e92c:	push   ebp
  41e92d:	fisubr DWORD PTR [edx+0x25bc0701]
  41e933:	or     esp,DWORD PTR [edx]
  41e935:	mov    ch,0x71
  41e937:	dec    edi
  41e938:	xor    BYTE PTR [ebp-0x74],ch
  41e93b:	add    ebp,DWORD PTR [edi]
  41e93d:	repnz loop 0x41e96c
  41e940:	push   ds
  41e941:	lods   al,BYTE PTR ds:[esi]
  41e942:	jmp    0x35b8:0x1472e88a
  41e949:	jne    0x41e95a
  41e94b:	fwait
  41e94c:	xchg   edx,eax
  41e94d:	pop    edx
  41e94e:	mov    cl,0xe6
  41e950:	mov    ebx,DWORD PTR [edi]
  41e952:	fs popf 
  41e954:	mul    DWORD PTR ds:0xe1c4ebc3
  41e95a:	mov    ds:0x5010e7db,eax
  41e95f:	test   eax,0xb5ed8980
  41e964:	pop    ss
  41e965:	inc    ecx
  41e966:	xlat   BYTE PTR ds:[ebx]
  41e967:	adc    al,0x2
  41e969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e96a:	aas    
  41e96b:	xchg   ebx,eax
  41e96c:	mov    dh,0x74
  41e96e:	call   0xa153:0xfbe9c602
  41e975:	and    ecx,DWORD PTR [ebx]
  41e977:	cmp    eax,0xd57c083e
  41e97c:	xor    BYTE PTR [esi+edx*1-0x69109c3a],al
  41e983:	push   ss
  41e984:	push   es
  41e985:	out    dx,eax
  41e986:	pminub mm3,mm5
  41e989:	push   eax
  41e98a:	dec    eax
  41e98b:	dec    edi
  41e98c:	leave  
  41e98d:	ret    0xda61
  41e990:	mov    edi,0xde55f72d
  41e995:	mov    ah,0xba
  41e997:	jl     0x41e9d4
  41e999:	lds    ebp,FWORD PTR [ecx+0xd]
  41e99c:	add    ah,BYTE PTR [edx-0x42478be7]
  41e9a2:	cmp    BYTE PTR [edx+0x1a],al
  41e9a5:	ja     0x41e996
  41e9a7:	lods   al,BYTE PTR ds:[esi]
  41e9a8:	icebp  
  41e9a9:	sti    
  41e9aa:	ins    BYTE PTR es:[edi],dx
  41e9ab:	mov    BYTE PTR [eax],bl
  41e9ad:	adc    ah,BYTE PTR [esp+edi*2+0x10976556]
  41e9b4:	sbb    bh,BYTE PTR [edi]
  41e9b6:	(bad)  
  41e9b7:	jg     0x41e9f4
  41e9b9:	inc    ebx
  41e9ba:	cwde   
  41e9bb:	jmp    DWORD PTR [edx+0x6349b89b]
  41e9c1:	sub    DWORD PTR [esi+0xe],ebx
  41e9c4:	int3   
  41e9c5:	retf   0x588f
  41e9c8:	bound  ebx,QWORD PTR [ebp+0x158ce4e4]
  41e9ce:	xchg   ecx,eax
  41e9cf:	cli    
  41e9d0:	add    eax,0x769d5d4f
  41e9d5:	jmp    0x8e0f:0xa8c2ffc0
  41e9dc:	mov    edi,0xe96bfc4f
  41e9e1:	pop    esi
  41e9e2:	xchg   ebp,eax
  41e9e3:	inc    edx
  41e9e4:	shl    DWORD PTR [ecx+ebx*1],cl
  41e9e7:	(bad)  
  41e9e8:	int    0x6f
  41e9ea:	dec    esp
  41e9eb:	sbb    DWORD PTR [edx],edx
  41e9ed:	mov    DWORD PTR [esp+ebx*1-0x74297451],esi
  41e9f4:	push   ecx
  41e9f5:	lds    ebp,FWORD PTR [esi-0x52]
  41e9f8:	add    DWORD PTR [ebx-0x1d],ecx
  41e9fb:	push   0x33
  41e9fd:	mov    BYTE PTR [esi],ch
  41e9ff:	ins    DWORD PTR es:[edi],dx
  41ea00:	mov    bl,ah
  41ea02:	inc    eax
  41ea03:	fistp  QWORD PTR [ebp-0x3]
  41ea06:	stos   BYTE PTR es:[edi],al
  41ea07:	lds    esp,FWORD PTR [ebp+0x17]
  41ea0a:	push   0xda57850e
  41ea0f:	xor    eax,esp
  41ea11:	cmp    al,BYTE PTR [eax]
  41ea13:	icebp  
  41ea14:	xor    al,0xa0
  41ea16:	adc    DWORD PTR [ebx+eax*8+0x25ddb2be],edx
  41ea1d:	dec    edi
  41ea1e:	cdq    
  41ea1f:	inc    ebx
  41ea20:	jecxz  0x41e9f2
  41ea22:	mov    edi,0x31d471e1
  41ea27:	hlt    
  41ea28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea29:	sub    DWORD PTR [eax-0x7],ecx
  41ea2c:	out    dx,al
  41ea2d:	mov    WORD PTR [edi+ecx*2],ss
  41ea30:	rcl    DWORD PTR [esi-0x1d],cl
  41ea33:	out    dx,eax
  41ea34:	lock jnp 0x41ea15
  41ea37:	scas   al,BYTE PTR es:[edi]
  41ea38:	daa    
  41ea39:	pop    ebx
  41ea3a:	sub    DWORD PTR [esi+edx*2-0x61],edi
  41ea3e:	loope  0x41ea16
  41ea40:	aam    0x17
  41ea42:	push   ss
  41ea43:	ret    0xf2f9
  41ea46:	add    eax,0xf6aef0aa
  41ea4b:	fistp  QWORD PTR ds:0xfa8ac8b5
  41ea51:	jge    0x41ea4f
  41ea53:	ins    BYTE PTR es:[edi],dx
  41ea54:	cmp    bl,dh
  41ea56:	rcr    DWORD PTR ds:0x9ae783ec,cl
  41ea5c:	std    
  41ea5d:	test   BYTE PTR [eax+0x7],bh
  41ea60:	mov    ds:0x9cf8d0fe,al
  41ea65:	adc    al,BYTE PTR [ecx-0x50]
  41ea68:	pop    edx
  41ea69:	frstor [ebx-0x3ffd3a62]
  41ea6f:	sti    
  41ea70:	cmp    dl,BYTE PTR [edi-0x3e]
  41ea73:	aam    0x56
  41ea75:	and    esi,DWORD PTR [edx+0x2f6778e7]
  41ea7b:	stos   BYTE PTR es:[edi],al
  41ea7c:	pop    ss
  41ea7d:	dec    edx
  41ea7e:	hlt    
  41ea7f:	imul   edx,DWORD PTR [ebx],0x6a
  41ea82:	lahf   
  41ea83:	mov    fs,WORD PTR [esp+esi*4]
  41ea86:	int    0x88
  41ea88:	inc    ecx
  41ea89:	ss in  eax,dx
  41ea8b:	and    DWORD PTR [esi-0x6fc14870],edi
  41ea91:	mov    eax,ds:0x90e6bd9e
  41ea96:	imul   BYTE PTR [edi]
  41ea98:	jnp    0x41ea44
  41ea9a:	test   BYTE PTR ds:0x4e98d5d6,dl
  41eaa0:	pop    eax
  41eaa1:	cmp    BYTE PTR [ecx+0x3e],dl
  41eaa4:	lahf   
  41eaa5:	fbstp  TBYTE PTR [ecx+0x48]
  41eaa8:	ds js  0x41ea37
  41eaab:	mov    ah,0x86
  41eaad:	jno    0x41ea89
  41eaaf:	outs   dx,BYTE PTR ds:[esi]
  41eab0:	into   
  41eab1:	cmc    
  41eab2:	rcl    ah,cl
  41eab4:	aaa    
  41eab5:	jmp    0x41eac4
  41eab7:	mov    dh,0xe
  41eab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaba:	and    edi,edx
  41eabc:	mov    ebp,0xfd5099f7
  41eac1:	ins    BYTE PTR es:[edi],dx
  41eac2:	lods   eax,DWORD PTR ds:[esi]
  41eac3:	mov    WORD PTR [ecx],?
  41eac5:	sub    edi,DWORD PTR [ecx-0x58]
  41eac8:	inc    edx
  41eac9:	mov    DWORD PTR [edx+ecx*4+0x2a],ecx
  41eacd:	push   esp
  41eace:	retf   0xc2ea
  41ead1:	lock data16 mov fs,WORD PTR cs:[eax-0x1df3eea3]
  41eada:	std    
  41eadb:	mov    ch,0x4e
  41eadd:	hlt    
  41eade:	xchg   cl,dl
  41eae0:	rol    BYTE PTR [esi-0x5ccf85a3],0xbc
  41eae7:	or     al,0xbb
  41eae9:	int3   
  41eaea:	retf   
  41eaeb:	fimul  DWORD PTR [edi+esi*4+0x48]
  41eaef:	mov    bh,0x50
  41eaf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaf2:	or     al,0xf
  41eaf4:	xchg   esp,eax
  41eaf5:	ins    BYTE PTR es:[edi],dx
  41eaf6:	cli    
  41eaf7:	(bad)  
  41eaf8:	sar    DWORD PTR [ecx+0x50b41fc3],1
  41eafe:	mov    edx,0xa5660112
  41eb03:	je     0x41ead6
  41eb05:	mov    BYTE PTR [edi+0x11],ah
  41eb08:	pop    ebp
  41eb09:	mov    DWORD PTR [esi-0x35],edx
  41eb0c:	xor    eax,0xd6f9543b
  41eb11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb12:	xchg   BYTE PTR [ecx+0x53d41f9f],cl
  41eb18:	mov    al,ds:0xc43fa407
  41eb1d:	jle    0x41eb6b
  41eb1f:	mov    al,ds:0xcea0c054
  41eb24:	mov    ds:0xe4d84695,al
  41eb29:	outs   dx,BYTE PTR ds:[esi]
  41eb2a:	or     ch,BYTE PTR [edx-0x6a]
  41eb2d:	add    bl,BYTE PTR [ebp+0x6a]
  41eb30:	push   esp
  41eb31:	lods   al,BYTE PTR ds:[esi]
  41eb32:	out    0xce,eax
  41eb34:	mul    DWORD PTR [edx+0x38]
  41eb37:	push   ebx
  41eb38:	fmulp  st(5),st
  41eb3a:	and    al,0xd8
  41eb3c:	mov    al,ds:0x16b80f7d
  41eb41:	(bad)  
  41eb42:	shl    bh,1
  41eb44:	mov    es,WORD PTR [ebp+0x4f67a4fd]
  41eb4a:	ins    BYTE PTR es:[edi],dx
  41eb4b:	test   eax,0x6d3864f7
  41eb50:	cld    
  41eb51:	sbb    cl,0xc3
  41eb54:	pop    edi
  41eb55:	fimul  DWORD PTR [ebx+0x2f]
  41eb58:	data16 fwait
  41eb5a:	loopne 0x41eb51
  41eb5c:	add    edx,DWORD PTR [eax+esi*2]
  41eb5f:	xchg   esp,eax
  41eb60:	push   cs
  41eb61:	dec    edi
  41eb62:	out    dx,eax
  41eb63:	push   eax
  41eb64:	sub    DWORD PTR [ecx-0x328e6622],eax
  41eb6a:	cwde   
  41eb6b:	loopne 0x41eb0b
  41eb6d:	sub    DWORD PTR [ebx],0xf7ddbc46
  41eb73:	add    DWORD PTR [ecx-0xa64a8dc],ecx
  41eb79:	mov    ds:0xe99fa7f4,eax
  41eb7e:	jo     0x41eb0e
  41eb80:	adc    BYTE PTR [ebx],ch
  41eb82:	pop    es
  41eb83:	rcr    BYTE PTR [ebx],0xa0
  41eb86:	pop    eax
  41eb87:	out    dx,al
  41eb88:	call   0x4874:0x4fd0b733
  41eb8f:	add    eax,0xbf7ed801
  41eb94:	test   cl,0xc
  41eb97:	pop    ss
  41eb98:	sub    BYTE PTR [eax+0x45],bl
  41eb9b:	outs   dx,BYTE PTR ds:[esi]
  41eb9c:	add    eax,esp
  41eb9e:	jge    0x41ebdf
  41eba0:	ror    DWORD PTR [ecx+edx*4+0x55b7eb16],cl
  41eba7:	push   eax
  41eba8:	or     DWORD PTR [ecx],ebx
  41ebaa:	ja     0x41eb5f
  41ebac:	pop    ebx
  41ebad:	cli    
  41ebae:	sub    eax,0x4eeae643
  41ebb3:	xchg   edi,eax
  41ebb4:	jg     0x41eb5e
  41ebb6:	jecxz  0x41eb98
  41ebb8:	je     0x41eb4b
  41ebba:	jg     0x41eb99
  41ebbc:	jmp    0x41ebf3
  41ebbe:	jg     0x41ec3f
  41ebc0:	mov    ds:0x95a17c6e,al
  41ebc5:	xchg   BYTE PTR [eax+0x76cb708f],ah
  41ebcb:	jo     0x41ebc6
  41ebcd:	adc    bl,ch
  41ebcf:	fild   DWORD PTR [ecx-0x58]
  41ebd2:	outs   dx,DWORD PTR ds:[esi]
  41ebd3:	mov    ah,0x73
  41ebd5:	(bad)  
  41ebd6:	mov    esi,0xd23bdb4c
  41ebdb:	fcmovnbe st,st(4)
  41ebdd:	ja     0x41eb68
  41ebdf:	das    
  41ebe0:	cmp    ebp,esp
  41ebe2:	inc    ebx
  41ebe3:	add    esp,ebx
  41ebe5:	scas   eax,DWORD PTR es:[edi]
  41ebe6:	cmp    esi,DWORD PTR [ecx+0x4a]
  41ebe9:	mov    eax,ds
  41ebeb:	inc    edi
  41ebec:	and    BYTE PTR [edx+0x77],0xc0
  41ebf0:	mov    dl,0x35
  41ebf2:	inc    ebx
  41ebf3:	jne    0x41ebc5
  41ebf5:	ffreep st(3)
  41ebf7:	idiv   BYTE PTR [eax+0x78254ec5]
  41ebfd:	mov    esi,0xcd72c470
  41ec02:	jmp    0x73ebecbd
  41ec07:	mov    ah,0x3b
  41ec09:	fldcw  WORD PTR [ecx]
  41ec0b:	stos   BYTE PTR es:[edi],al
  41ec0c:	mov    ah,0xb3
  41ec0e:	(bad)  
  41ec0f:	jmp    0x1932:0xe58431fd
  41ec16:	sub    DWORD PTR [ebx+ebp*1],ebp
  41ec19:	push   ebx
  41ec1a:	and    ebx,eax
  41ec1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1d:	add    al,0xe1
  41ec1f:	lea    ebp,[ebp-0x76db6c4d]
  41ec25:	pop    ss
  41ec26:	adc    ch,ch
  41ec28:	in     eax,dx
  41ec29:	jg     0x41ebaf
  41ec2b:	xchg   ebx,eax
  41ec2c:	test   BYTE PTR [esp+eiz*8-0x628fc62e],0x9a
  41ec34:	dec    ebp
  41ec35:	inc    ebp
  41ec36:	imul   edi,DWORD PTR [esi+0x7a7bd488],0x31
  41ec3d:	daa    
  41ec3e:	jecxz  0x41ec0d
  41ec40:	repz fdivp st(1),st
  41ec43:	pop    ss
  41ec44:	(bad)  [ebx]
  41ec46:	mov    esi,0x5dde137
  41ec4b:	dec    ebx
  41ec4c:	cmp    eax,0xc5a300bb
  41ec51:	push   es
  41ec52:	pop    ss
  41ec53:	fsubr  DWORD PTR [ebx-0x4c]
  41ec56:	test   eax,0xa09f8e1
  41ec5b:	push   edx
  41ec5c:	es jge 0x41ec41
  41ec5f:	test   BYTE PTR [edx+0x12aa7494],bh
  41ec65:	imul   edi,DWORD PTR [edi-0x18],0xfffffffe
  41ec69:	and    eax,0x67af02b3
  41ec6e:	inc    eax
  41ec6f:	stos   BYTE PTR es:[edi],al
  41ec70:	imul   ecx,DWORD PTR [eax-0x5af83be],0x132cd1ae
  41ec7a:	call   DWORD PTR [edi]
  41ec7c:	xor    eax,0x2ac4c3d1
  41ec81:	enter  0xa3a5,0x13
  41ec85:	repz and DWORD PTR [ecx-0x3b],ebp
  41ec89:	out    0xc8,eax
  41ec8b:	push   es
  41ec8c:	repnz mov ds:0xb48a6005,al
  41ec92:	push   0xa2a2f27d
  41ec97:	repz shl DWORD PTR [edx-0x76e340bf],0xa6
  41ec9f:	in     al,0x94
  41eca1:	or     bh,BYTE PTR [edx]
  41eca3:	(bad)  
  41eca4:	call   0x6305:0x854b4261
  41ecab:	fdiv   DWORD PTR [edx-0x7b]
  41ecae:	and    WORD PTR [ebx-0x4fe7cc20],bx
  41ecb5:	or     eax,DWORD PTR [ebx-0x2ebb9e07]
  41ecbb:	jecxz  0x41eca8
  41ecbd:	add    BYTE PTR [ebx-0x45],dl
  41ecc0:	bound  edx,QWORD PTR [esi]
  41ecc2:	ds popf 
  41ecc4:	mov    BYTE PTR [edx-0x3a943580],bl
  41ecca:	xchg   esi,eax
  41eccb:	adc    ah,BYTE PTR [edx+0x3f]
  41ecce:	push   ecx
  41eccf:	cmp    esp,0xad673dac
  41ecd5:	shr    DWORD PTR [ebp-0x2f],1
  41ecd8:	cmp    dl,ch
  41ecda:	lea    ebx,ds:0x5ae417e3
  41ece0:	js     0x41ec8d
  41ece2:	mov    edx,0x3d3b1c98
  41ece7:	adc    dl,BYTE PTR [ebx]
  41ece9:	pop    edi
  41ecea:	sub    ch,dl
  41ecec:	xor    esp,eax
  41ecee:	ds mov eax,0x906286e
  41ecf4:	jmp    DWORD PTR [ebp+0x5c1ff491]
  41ecfa:	cmp    edi,DWORD PTR [eax-0x135adce9]
  41ed00:	xchg   edx,eax
  41ed01:	push   edx
  41ed02:	adc    esp,esp
  41ed04:	sbb    eax,0xf881f3c0
  41ed09:	xor    BYTE PTR [ebx],ah
  41ed0b:	cmp    eax,0xb0107ad6
  41ed10:	mov    WORD PTR ds:[edi],ss
  41ed13:	mov    ds:0x6ba5c67,eax
  41ed18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed19:	cwde   
  41ed1a:	push   ss
  41ed1b:	and    DWORD PTR [ebp+0x1b],eax
  41ed1e:	add    BYTE PTR [edx+0x6d],ah
  41ed21:	or     ah,BYTE PTR [edi+0x41]
  41ed24:	sar    BYTE PTR [ecx+0x541268fb],cl
  41ed2a:	scas   al,BYTE PTR es:[edi]
  41ed2b:	cld    
  41ed2c:	mov    ah,0xc9
  41ed2e:	sbb    ebx,edx
  41ed30:	or     al,0xa0
  41ed32:	aam    0x1f
  41ed34:	and    al,0xb3
  41ed36:	sub    al,0x55
  41ed38:	pop    esi
  41ed39:	call   0x2eb8bd80
  41ed3e:	add    al,0x8e
  41ed40:	and    eax,0x7d84aaf4
  41ed45:	jmp    0x41ed74
  41ed47:	icebp  
  41ed48:	daa    
  41ed49:	or     eax,0x35daef2e
  41ed4e:	icebp  
  41ed4f:	pop    ss
  41ed50:	mov    ch,0xa9
  41ed52:	retf   
  41ed53:	inc    eax
  41ed54:	and    esi,DWORD PTR [esi+0x11e13f15]
  41ed5a:	mov    ecx,0x912a0366
  41ed5f:	pushf  
  41ed60:	xor    DWORD PTR [edi+ecx*4],0x50778958
  41ed67:	rol    BYTE PTR [ebp+0x68],0xbd
  41ed6b:	mov    edx,0xd0f89503
  41ed70:	int    0x4f
  41ed72:	ss test al,0x4f
  41ed75:	int3   
  41ed76:	and    cl,ch
  41ed78:	loop   0x41ed49
  41ed7a:	add    esp,ecx
  41ed7c:	or     edi,esi
  41ed7e:	ret    
  41ed7f:	jg     0x41ed0f
  41ed81:	mov    ebp,0xe1dbd17b
  41ed86:	add    DWORD PTR [edi-0x46503f99],ecx
  41ed8c:	adc    DWORD PTR [esi],edx
  41ed8e:	mov    bl,0x34
  41ed90:	sbb    bl,0xf4
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	les    esp,FWORD PTR [ebp-0x6a441de2]
  41ed9a:	cmc    
  41ed9b:	xchg   edx,eax
  41ed9c:	push   eax
  41ed9d:	mov    ds:0xd6963e2e,al
  41eda2:	sub    DWORD PTR [esi-0x20],esp
  41eda5:	xchg   edi,eax
  41eda6:	rcr    DWORD PTR [ebx+ebx*2+0x7d],cl
  41edaa:	fld    DWORD PTR [ecx+edi*1+0x2fb97368]
  41edb1:	je     0x41ed9b
  41edb3:	leave  
  41edb4:	or     al,BYTE PTR [ecx]
  41edb6:	outs   dx,BYTE PTR ds:[esi]
  41edb7:	outs   dx,BYTE PTR ds:[esi]
  41edb8:	lea    esi,[ebp-0x3d]
  41edbb:	mov    bl,0x31
  41edbd:	inc    eax
  41edbe:	(bad)  [eax-0x2f]
  41edc1:	cdq    
  41edc2:	jbe    0x41ed63
  41edc4:	inc    esp
  41edc5:	cmp    BYTE PTR [edi],0xbc
  41edc8:	or     DWORD PTR [edx],esp
  41edca:	in     al,dx
  41edcb:	or     BYTE PTR [ebx-0x3d2faa9],al
  41edd1:	lds    edi,FWORD PTR [edx]
  41edd3:	xchg   DWORD PTR [edi+0x75],ebp
  41edd6:	add    eax,0x8c69bfcf
  41eddb:	out    dx,al
  41eddc:	loope  0x41ed84
  41edde:	les    edi,FWORD PTR [ebx-0x39]
  41ede1:	push   0x73f739d
  41ede6:	push   ss
  41ede7:	sbb    BYTE PTR [ebx],al
  41ede9:	cmp    ebx,DWORD PTR cs:[ebp+0x69]
  41eded:	and    esp,eax
  41edef:	fild   WORD PTR [edx+0xa]
  41edf2:	push   cs
  41edf3:	aad    0xb3
  41edf5:	sub    dl,BYTE PTR ds:0x642699b0
  41edfb:	sbb    BYTE PTR [eax-0x61470d86],al
  41ee01:	sti    
  41ee02:	jne    0x41edd2
  41ee04:	mov    edx,0x3ab2650d
  41ee09:	lahf   
  41ee0a:	mov    eax,ds
  41ee0c:	xor    al,0x2b
  41ee0e:	call   0x3873594b
  41ee13:	out    0xed,al
  41ee15:	sbb    BYTE PTR [ecx],dh
  41ee17:	pop    es
  41ee18:	and    DWORD PTR [ecx+0x48],ebx
  41ee1b:	mov    ecx,DWORD PTR [esi-0x76]
  41ee1e:	inc    esi
  41ee1f:	sbb    ebp,ebp
  41ee21:	adc    edi,DWORD PTR [edx]
  41ee23:	ins    BYTE PTR es:[edi],dx
  41ee24:	cmp    edi,ebp
  41ee26:	out    0xa3,al
  41ee28:	or     DWORD PTR [esi-0x4e],ecx
  41ee2b:	mov    ss,WORD PTR [ebx-0x4530d492]
  41ee31:	mov    edi,0xd31f38f4
  41ee36:	xor    ah,ch
  41ee38:	dec    ebx
  41ee39:	out    dx,al
  41ee3a:	sub    al,0xdc
  41ee3c:	push   ebp
  41ee3d:	gs mov esp,0xde7e08da
  41ee43:	(bad)  
  41ee44:	rcl    DWORD PTR [ebx],0xe5
  41ee47:	cmp    DWORD PTR [edi-0x3f],0x14
  41ee4b:	and    esi,eax
  41ee4d:	dec    ecx
  41ee4e:	arpl   bp,cx
  41ee50:	sbb    eax,0x45bf66bb
  41ee55:	cdq    
  41ee56:	lock adc ch,cl
  41ee59:	in     al,dx
  41ee5a:	data16 ins BYTE PTR es:[edi],dx
  41ee5c:	add    eax,0x3b025818
  41ee61:	retf   
  41ee62:	cmp    BYTE PTR [edx],ch
  41ee64:	mov    eax,0x812e260b
  41ee69:	and    edx,edx
  41ee6b:	aad    0x92
  41ee6d:	add    esi,ecx
  41ee6f:	and    BYTE PTR [esi+0x23],ah
  41ee72:	fisttp QWORD PTR [edi-0xb]
  41ee75:	jmp    0x41eee4
  41ee77:	xchg   esi,eax
  41ee78:	xchg   esp,eax
  41ee79:	out    dx,al
  41ee7a:	out    dx,eax
  41ee7b:	stos   DWORD PTR es:[edi],eax
  41ee7c:	shr    BYTE PTR [ebp-0x28],0xb9
  41ee80:	in     al,0x58
  41ee82:	scas   al,BYTE PTR es:[edi]
  41ee83:	jle    0x41ee46
  41ee85:	sub    eax,0x863d53e1
  41ee8a:	jb     0x41eefc
  41ee8c:	mov    esp,0xbd6a84a7
  41ee91:	enter  0xe848,0xdc
  41ee95:	pop    esi
  41ee96:	cmp    bh,BYTE PTR [edi]
  41ee98:	(bad)  
  41ee99:	inc    ebp
  41ee9a:	ss aaa 
  41ee9c:	ins    BYTE PTR es:[edi],dx
  41ee9d:	sbb    BYTE PTR [esi+ecx*1+0x6d4cc484],0x57
  41eea5:	loop   0x41ee41
  41eea7:	mov    ds:0x2db50384,al
  41eeac:	inc    ebx
  41eead:	out    dx,al
  41eeae:	stos   BYTE PTR es:[edi],al
  41eeaf:	sub    ebp,edi
  41eeb1:	mov    bl,0xa7
  41eeb3:	pop    eax
  41eeb4:	mov    ebp,0xd528e048
  41eeb9:	cmp    DWORD PTR [ebx-0x5c],0xffffffb3
  41eebd:	clc    
  41eebe:	sub    DWORD PTR [edi-0x494b7ada],eax
  41eec4:	jge    0x41ef34
  41eec6:	cmp    eax,0x47885b8d
  41eecb:	outs   dx,DWORD PTR ds:[esi]
  41eecc:	shl    dh,1
  41eece:	mov    ebp,0x61ebeab8
  41eed3:	imul   esp,DWORD PTR ds:0xd1c29c3,0xffffff8e
  41eeda:	xchg   esp,eax
  41eedb:	arpl   WORD PTR [esi-0xb],bx
  41eede:	inc    eax
  41eedf:	ins    DWORD PTR es:[edi],dx
  41eee0:	xlat   BYTE PTR ds:[ebx]
  41eee1:	fnstcw WORD PTR [ebp+0x10a01b57]
  41eee7:	fsub   QWORD PTR [edx+0x58]
  41eeea:	jnp    0x41eecf
  41eeec:	and    ch,BYTE PTR [edx-0x2b4aa5ad]
  41eef2:	pop    edi
  41eef3:	push   0x582857b7
  41eef8:	dec    ebx
  41eef9:	dec    ecx
  41eefa:	inc    ebp
  41eefb:	(bad)  
  41eefc:	test   al,0xda
  41eefe:	movaps XMMWORD PTR [ebx-0x2c0f428],xmm4
  41ef05:	add    DWORD PTR [eax],edi
  41ef07:	push   ss
  41ef08:	mov    esp,0x8b4f49fe
  41ef0d:	pop    edx
  41ef0e:	out    0xfc,eax
  41ef10:	and    al,dh
  41ef12:	je     0x41ef33
  41ef14:	add    dl,BYTE PTR [ebx-0x2b]
  41ef17:	cmp    DWORD PTR [ebx+0x70a8b427],esi
  41ef1d:	mov    esp,0xa0054d01
  41ef22:	cmp    BYTE PTR [esi-0x20],dl
  41ef25:	pop    esp
  41ef26:	adc    eax,0x57e7ccfd
  41ef2b:	pushf  
  41ef2c:	out    dx,eax
  41ef2d:	xor    BYTE PTR [esi-0x709120cf],ch
  41ef33:	jbe    0x41ef31
  41ef35:	imul   ebx,DWORD PTR [edx],0x60
  41ef38:	push   es
  41ef39:	mov    eax,ds:0xb99f9f1f
  41ef3e:	xchg   esi,eax
  41ef3f:	sub    eax,0xa696462
  41ef44:	les    edx,FWORD PTR [ecx]
  41ef46:	xor    ebp,ebp
  41ef48:	sar    BYTE PTR [ebp-0x310b88eb],1
  41ef4e:	jo     0x41ef69
  41ef50:	cmp    ecx,DWORD PTR [edx]
  41ef52:	rcr    cl,0x7f
  41ef55:	pop    ss
  41ef56:	mul    DWORD PTR [ecx]
  41ef58:	js     0x41ef44
  41ef5a:	and    eax,0xec29825e
  41ef5f:	nop
  41ef60:	push   esi
  41ef61:	or     BYTE PTR [esi+0x2f63994b],dh
  41ef67:	imul   ecx,DWORD PTR [ebp+0x67eb8a4a],0x47cd359
  41ef71:	mov    ecx,0x6ed5d300
  41ef76:	push   cs
  41ef77:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef79:	sub    DWORD PTR [esi-0x45],esp
  41ef7c:	xchg   ebx,eax
  41ef7d:	cmp    bh,BYTE PTR [eax-0x44]
  41ef80:	adc    esi,DWORD PTR [ecx-0x12]
  41ef83:	aas    
  41ef84:	push   esp
  41ef85:	retf   0x1d12
  41ef88:	and    eax,0x68d29a2b
  41ef8d:	loop   0x41ef9a
  41ef8f:	sbb    eax,0x778817cd
  41ef94:	sub    BYTE PTR [ebp-0x18],dh
  41ef97:	and    eax,DWORD PTR [ecx]
  41ef99:	jmp    0x5720:0x9fdffbf2
  41efa0:	inc    esp
  41efa1:	adc    edx,edi
  41efa3:	jmp    DWORD PTR [ecx]
  41efa5:	push   0x4572b7e6
  41efaa:	js     0x41ef34
  41efac:	cmp    ebp,eax
  41efae:	shl    DWORD PTR [ebx],1
  41efb0:	jmp    0x8ebc766c
  41efb5:	jno    0x41f02f
  41efb7:	jle    0x41f016
  41efb9:	sbb    al,0xc3
  41efbb:	xchg   ebx,eax
  41efbc:	(bad)  
  41efbd:	clc    
  41efbe:	icebp  
  41efbf:	pop    edi
  41efc1:	mov    ch,0x82
  41efc3:	js     0x41ef61
  41efc5:	sbb    DWORD PTR [eax],0x2dc0d433
  41efcb:	push   eax
  41efcc:	mov    dl,0x68
  41efce:	jp     0x41ef92
  41efd0:	mov    cl,0x3a
  41efd2:	jecxz  0x41efe2
  41efd4:	push   cs
  41efd5:	jae    0x41f051
  41efd7:	aaa    
  41efd8:	pop    es
  41efd9:	mov    edi,DWORD PTR [esp+ecx*2+0x20]
  41efdd:	mov    al,0xc9
  41efdf:	inc    esp
  41efe0:	gs mov edx,0xbc2d9737
  41efe6:	(bad)  
  41efe7:	pusha  
  41efe8:	inc    esi
  41efe9:	daa    
  41efea:	stos   BYTE PTR es:[edi],al
  41efeb:	and    eax,DWORD PTR [edx+0x17]
  41efee:	add    al,0x96
  41eff0:	das    
  41eff1:	mov    al,0x6e
  41eff3:	mov    al,0x91
  41eff5:	mov    bl,0x78
  41eff7:	mov    edx,0xdbc4e499
  41effc:	jns    0x41ef97
  41effe:	ss pop eax
  41f000:	add    cl,BYTE PTR [edx-0x63]
  41f003:	jnp    0x41f00b
  41f005:	out    dx,al
  41f006:	and    ah,BYTE PTR fs:[esi+edi*1]
  41f00a:	sbb    bh,BYTE PTR [eax+0x4c]
  41f00d:	mov    ds:0x5c83c293,eax
  41f012:	jnp    0x41f06e
  41f014:	call   0xc545:0xfa367b3f
  41f01b:	jo     0x41f076
  41f01d:	or     eax,0xaf88a8c8
  41f022:	adc    DWORD PTR [ebx+0x45],0xffffffd8
  41f026:	mov    eax,ds:0x3b794e6d
  41f02b:	mov    bl,0x46
  41f02d:	mov    eax,0x7195e53b
  41f032:	retf   
  41f033:	push   esi
  41f034:	nop
  41f035:	inc    ebx
  41f036:	mov    ds:0xe3632b6f,eax
  41f03b:	jge    0x41f098
  41f03d:	inc    ebx
  41f03e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f03f:	lock mov BYTE PTR [ebx-0x3d4e5773],0x3b
  41f047:	pop    ecx
  41f048:	and    ah,dl
  41f04a:	cmc    
  41f04b:	dec    ebx
  41f04c:	fld    QWORD PTR [ebp+0x67f5517b]
  41f052:	ds addr16 and esi,edi
  41f056:	jp     0x41f054
  41f058:	or     DWORD PTR [esi-0x2bd152c6],ecx
  41f05e:	mov    ecx,0x434dc2cd
  41f063:	sub    eax,0x991b3c95
  41f068:	adc    edx,edx
  41f06a:	loopne 0x41f003
  41f06c:	cmp    edx,ebx
  41f06e:	int    0xe7
  41f070:	fwait
  41f071:	call   0x6c8b:0xe9104c02
  41f078:	test   al,0x10
  41f07a:	push   es
  41f07b:	xor    ebp,ebp
  41f07d:	pop    edi
  41f07e:	push   eax
  41f07f:	add    esi,DWORD PTR [ebx]
  41f081:	inc    esi
  41f082:	push   eax
  41f083:	jbe    0x41f09c
  41f085:	aam    0x2e
  41f087:	add    dl,BYTE PTR [edi+0x6424e831]
  41f08d:	cmp    dl,BYTE PTR gs:[esi+0x583cd7e7]
  41f094:	in     eax,0xda
  41f096:	xor    al,0x76
  41f098:	mov    DWORD PTR [ebx],esp
  41f09a:	daa    
  41f09b:	sub    DWORD PTR [eax-0x705fec40],esp
  41f0a1:	ret    0xc2b8
  41f0a4:	inc    ecx
  41f0a5:	mov    edx,DWORD PTR [ecx]
  41f0a7:	mov    bl,0x5b
  41f0a9:	sub    DWORD PTR [esi-0x3e],esp
  41f0ac:	loopne 0x41f10a
  41f0ae:	imul   ebx,DWORD PTR [esi],0xfffffff8
  41f0b1:	and    esp,esp
  41f0b3:	cdq    
  41f0b4:	sahf   
  41f0b5:	(bad)  
  41f0b6:	or     al,0x72
  41f0b8:	rcl    DWORD PTR [ecx+ebp*4+0x2d666d73],cl
  41f0bf:	fld    DWORD PTR [eax+eiz*8-0x7b]
  41f0c3:	int    0xb9
  41f0c5:	dec    edx
  41f0c6:	mov    dh,0xe6
  41f0c8:	lock call 0xc8fbaba4
  41f0ce:	ss push edi
  41f0d0:	xor    al,BYTE PTR [edi+eiz*4-0x7487f349]
  41f0d7:	or     esi,DWORD PTR fs:[eax*4-0x3bcc936d]
  41f0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0e0:	push   ss
  41f0e1:	mov    dh,0xa4
  41f0e3:	sbb    dl,dh
  41f0e5:	(bad)  
  41f0e6:	ja     0x41f096
  41f0e8:	inc    edi
  41f0e9:	jmp    0xf152cd2
  41f0ee:	in     al,0x4
  41f0f0:	cmp    DWORD PTR [ebx-0x5f0eb5e0],ebp
  41f0f6:	(bad)  
  41f0f7:	hlt    
  41f0f8:	pusha  
  41f0f9:	inc    esi
  41f0fa:	dec    edx
  41f0fb:	add    al,0xec
  41f0fd:	ja     0x41f0cc
  41f0ff:	fist   DWORD PTR [edx+0x41]
  41f102:	ss mov edx,0xe3214b69
  41f108:	push   0xffffffbf
  41f10a:	loopne 0x41f0ff
  41f10c:	sbb    ebx,edi
  41f10e:	xchg   BYTE PTR [eax],ch
  41f110:	xor    al,0xc2
  41f112:	mov    sp,0xb0ca
  41f116:	icebp  
  41f117:	push   es
  41f118:	ficom  DWORD PTR [edx+0x5f]
  41f11b:	xchg   DWORD PTR [di-0x4b],esi
  41f11f:	outs   dx,BYTE PTR ds:[esi]
  41f120:	sub    dl,cl
  41f122:	(bad)  
  41f123:	sub    bl,cl
  41f125:	mov    ah,0x51
  41f127:	push   ebx
  41f128:	ret    0x592
  41f12b:	mov    cl,0xa4
  41f12d:	add    eax,0x47189bcb
  41f132:	and    eax,0xbc757d9d
  41f137:	xor    esp,DWORD PTR [edi]
  41f139:	cs sbb edi,edx
  41f13c:	outs   dx,DWORD PTR ds:[esi]
  41f13d:	call   DWORD PTR [esp+ecx*8]
  41f140:	test   BYTE PTR [ecx],dl
  41f142:	fist   WORD PTR [edx+esi*8-0x13]
  41f146:	push   ebx
  41f147:	jmp    0x4e32c45a
  41f14c:	loop   0x41f117
  41f14e:	xchg   DWORD PTR [esp+esi*1-0x5d],esp
  41f152:	or     BYTE PTR [ebp-0x55],bl
  41f155:	mov    dh,0x41
  41f157:	lahf   
  41f158:	dec    ecx
  41f159:	in     al,0xf4
  41f15b:	aam    0x82
  41f15d:	ja     0x41f118
  41f15f:	imul   ebx,DWORD PTR [edx+0x67],0x64fd359f
  41f166:	push   eax
  41f167:	mov    bl,0xf1
  41f169:	dec    edi
  41f16a:	mov    ebx,0xf46c187b
  41f16f:	mov    dl,0x2a
  41f171:	imul   esp,DWORD PTR [edx+eiz*4-0x3b],0x2c746cec
  41f179:	sbb    eax,0xcc83c821
  41f17e:	adc    eax,0xc66daf04
  41f183:	mov    ds:0x605885f3,eax
  41f188:	stos   DWORD PTR es:[edi],eax
  41f189:	mov    ebp,0x88e16189
  41f18e:	retf   0xc88
  41f191:	nop
  41f192:	add    BYTE PTR [eax+0x32],ah
  41f195:	mov    BYTE PTR [ecx+0x48],bl
  41f198:	mov    bh,BYTE PTR [esi]
  41f19a:	push   eax
  41f19b:	mov    ch,0x78
  41f19d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f19e:	cmp    DWORD PTR [ecx-0x4ee3f4a8],ecx
  41f1a4:	xchg   esi,eax
  41f1a5:	push   ss
  41f1a6:	mov    ch,0xfd
  41f1a8:	push   0xffffff9d
  41f1aa:	dec    edi
  41f1ab:	xchg   ebx,eax
  41f1ac:	jmp    0x8ffc439b
  41f1b1:	xchg   edi,eax
  41f1b2:	add    al,0xbe
  41f1b4:	mov    ah,BYTE PTR [ebp-0x17]
  41f1b7:	xor    al,0xb0
  41f1b9:	add    al,0xcf
  41f1bb:	mov    ah,0x54
  41f1bd:	ret    0xbf47
  41f1c0:	out    dx,eax
  41f1c1:	inc    ebx
  41f1c2:	gs mov al,0x62
  41f1c5:	or     ch,ah
  41f1c7:	lods   al,BYTE PTR ds:[esi]
  41f1c8:	imul   esp,DWORD PTR [eax-0xf],0x5093fec3
  41f1cf:	xchg   ebx,eax
  41f1d0:	and    eax,0x45319a38
  41f1d5:	push   ecx
  41f1d6:	stc    
  41f1d7:	cmp    eax,0x516cf8ce
  41f1dc:	xor    eax,0x90857bd5
  41f1e1:	sub    BYTE PTR [ebx],0x5d
  41f1e4:	jbe    0x41f1cb
  41f1e6:	daa    
  41f1e7:	repnz iret 
  41f1e9:	std    
  41f1ea:	fidivr WORD PTR [edx-0x34]
  41f1ed:	dec    ecx
  41f1ee:	out    dx,eax
  41f1ef:	nop
  41f1f0:	xchg   ebp,eax
  41f1f1:	inc    esp
  41f1f2:	dec    eax
  41f1f3:	pop    es
  41f1f4:	push   ebx
  41f1f5:	stos   BYTE PTR es:[edi],al
  41f1f6:	(bad)  
  41f1f7:	cmc    
  41f1f8:	inc    ebx
  41f1f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1fa:	dec    edi
  41f1fb:	pop    ss
  41f1fc:	es fxch st(2)
  41f1ff:	cmp    dl,BYTE PTR [eax]
  41f201:	cdq    
  41f202:	lahf   
  41f203:	adc    BYTE PTR [ecx+0x77],cl
  41f206:	icebp  
  41f207:	loopne 0x41f250
  41f209:	push   edx
  41f20a:	stos   DWORD PTR es:[edi],eax
  41f20b:	mov    WORD PTR [ebx+edx*4],gs
  41f20e:	int3   
  41f20f:	stos   DWORD PTR es:[edi],eax
  41f210:	pop    edx
  41f211:	inc    esp
  41f212:	push   ebx
  41f213:	retf   
  41f214:	daa    
  41f215:	mov    bh,0x83
  41f217:	in     al,0x2d
  41f219:	stos   BYTE PTR es:[edi],al
  41f21a:	ins    DWORD PTR es:[edi],dx
  41f21b:	jg     0x41f271
  41f21d:	test   dl,0xd9
  41f220:	mov    ebp,0xb21e4946
  41f225:	jmp    0xf31a:0xa5975887
  41f22c:	outs   dx,DWORD PTR ds:[esi]
  41f22d:	das    
  41f22e:	xlat   BYTE PTR ds:[ebx]
  41f22f:	mov    ebx,0xd2a71de9
  41f234:	in     al,dx
  41f235:	cmp    cl,BYTE PTR [ebp-0x344d7b23]
  41f23b:	cs dec ebx
  41f23d:	shr    DWORD PTR [edx],0xd2
  41f240:	stos   DWORD PTR es:[edi],eax
  41f241:	push   ebx
  41f242:	xor    DWORD PTR [edi-0x25c59331],esi
  41f248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f249:	mov    al,ds:0xfc38e1a4
  41f24e:	xchg   esp,eax
  41f24f:	add    esp,DWORD PTR [edi+0x48458675]
  41f255:	pop    esp
  41f256:	push   edx
  41f257:	mov    WORD PTR [ecx+edx*8-0xdbcda85],fs
  41f25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f25f:	outs   dx,DWORD PTR ds:[esi]
  41f260:	sbb    esp,DWORD PTR [eax+0x1f7198c1]
  41f266:	(bad)  
  41f267:	jno    0x41f277
  41f269:	cwde   
  41f26a:	cdq    
  41f26b:	stos   BYTE PTR es:[edi],al
  41f26c:	mov    dh,0x1f
  41f26e:	popf   
  41f26f:	jg     0x41f2ce
  41f271:	mov    bh,0xc5
  41f273:	movd   mm2,ebx
  41f276:	fstp   DWORD PTR [esi-0x64]
  41f279:	add    al,0xc3
  41f27b:	fs jp  0x41f2a5
  41f27e:	lahf   
  41f27f:	popa   
  41f280:	sbb    eax,0xddd8bed9
  41f285:	add    edi,edx
  41f287:	mov    al,0x5d
  41f289:	cdq    
  41f28a:	(bad)  
  41f28b:	jnp    0x41f2f5
  41f28d:	js     0x41f2be
  41f28f:	sub    dh,dh
  41f291:	lods   eax,DWORD PTR ds:[esi]
  41f292:	pop    esp
  41f293:	and    eax,0x44fac3c5
  41f298:	loope  0x41f2a4
  41f29a:	or     edi,eax
  41f29c:	scas   al,BYTE PTR es:[edi]
  41f29d:	sbb    ch,BYTE PTR [ebp+0x1d]
  41f2a0:	xor    bl,BYTE PTR [ebx+0x57]
  41f2a3:	int3   
  41f2a4:	cmp    DWORD PTR [esp+edx*8-0x46],edx
  41f2a8:	xchg   bl,dh
  41f2aa:	or     eax,0xbf6b8a50
  41f2af:	mov    esi,0xed2d7855
  41f2b4:	fs aas 
  41f2b6:	addr16 mov edx,0xccf8a69e
  41f2bc:	sbb    al,0x28
  41f2be:	dec    esp
  41f2bf:	js     0x41f2bc
  41f2c1:	mov    BYTE PTR [esi-0x21],ch
  41f2c4:	and    DWORD PTR [ebx+ebx*2-0x3b],0x47
  41f2c9:	sbb    ch,BYTE PTR [edi-0xf0a98fa]
  41f2cf:	in     eax,0x1f
  41f2d1:	adc    esi,DWORD PTR [esi-0x69]
  41f2d4:	xchg   DWORD PTR [ebx+edi*2-0x5a79da3e],edx
  41f2db:	xchg   ebx,eax
  41f2dc:	and    ecx,esp
  41f2de:	ds xchg esi,eax
  41f2e0:	into   
  41f2e1:	or     ch,dh
  41f2e3:	shr    DWORD PTR [edi],cl
  41f2e5:	push   ecx
  41f2e6:	mov    cl,0x1c
  41f2e8:	cmp    ebp,edi
  41f2ea:	or     eax,0x827691da
  41f2ef:	aas    
  41f2f0:	jecxz  0x41f28e
  41f2f2:	xchg   edx,eax
  41f2f3:	(bad)  
  41f2f4:	fwait
  41f2f5:	fwait
  41f2f6:	mov    ds:0x7ea81783,al
  41f2fb:	hlt    
  41f2fc:	cmp    DWORD PTR [eax-0x64],edi
  41f2ff:	nop
  41f300:	aad    0x90
  41f302:	pop    esp
  41f303:	test   al,0x31
  41f305:	sub    al,0xb6
  41f307:	retf   0xcc01
  41f30a:	sbb    DWORD PTR [esi-0x9],0xffffffcc
  41f30e:	sbb    BYTE PTR [esi],0xb7
  41f311:	std    
  41f312:	mov    ch,0xae
  41f314:	jb     0x41f317
  41f316:	xor    eax,0x784ce496
  41f31b:	push   edx
  41f31c:	sbb    ecx,DWORD PTR [esi+0x30]
  41f31f:	push   es
  41f320:	ret    0x2645
  41f323:	fbld   TBYTE PTR [esi-0x7d]
  41f326:	mov    ebx,0x4cb322cb
  41f32b:	push   edx
  41f32c:	jmp    0x41f371
  41f32e:	pop    eax
  41f32f:	lea    ebp,[ebx]
  41f331:	xor    DWORD PTR [ebx],esi
  41f333:	hlt    
  41f334:	jno    0x41f313
  41f336:	mov    edx,0xfe58c791
  41f33b:	repnz pop edi
  41f33d:	jge    0x41f310
  41f33f:	int    0xf
  41f341:	add    al,0x42
  41f343:	fnstsw WORD PTR [eax+0x57]
  41f346:	mov    WORD PTR [edx],?
  41f348:	inc    eax
  41f349:	pop    ss
  41f34a:	stos   DWORD PTR es:[edi],eax
  41f34b:	cwde   
  41f34c:	dec    esp
  41f34d:	mov    bl,0xf5
  41f34f:	dec    ecx
  41f350:	and    al,0x87
  41f352:	es stc 
  41f354:	sbb    ch,BYTE PTR [ecx]
  41f356:	pop    esi
  41f357:	mov    edx,0x2362999f
  41f35c:	out    dx,eax
  41f35d:	or     DWORD PTR [ebx-0x558f456d],ecx
  41f363:	fcomp  DWORD PTR [edx+0x79]
  41f366:	mov    ebp,0x8075ba1a
  41f36b:	jmp    0x27f5bf64
  41f370:	xor    BYTE PTR ds:0xa579a8c,0xe
  41f377:	mov    eax,0x3a60f155
  41f37c:	js     0x41f393
  41f37e:	idiv   BYTE PTR [eax-0x69d52ba]
  41f384:	jg     0x41f33d
  41f386:	loop   0x41f3fa
  41f388:	loopne 0x41f3ca
  41f38a:	js     0x41f315
  41f38c:	cmp    dh,BYTE PTR [eax]
  41f38e:	xor    al,BYTE PTR [ebx]
  41f390:	push   ebp
  41f391:	inc    esp
  41f392:	pushf  
  41f393:	aaa    
  41f394:	cmp    esp,DWORD PTR ds:0xde831bca
  41f39a:	xor    al,0x26
  41f39c:	lahf   
  41f39d:	shl    DWORD PTR [ecx],cl
  41f39f:	out    dx,eax
  41f3a0:	xchg   edi,eax
  41f3a1:	push   edi
  41f3a2:	in     al,0xe7
  41f3a4:	imul   ecx,DWORD PTR [ebp-0x71a9766b],0x7740a189
  41f3ae:	ret    
  41f3af:	sahf   
  41f3b0:	pop    ds
  41f3b1:	jge    0x41f3ce
  41f3b3:	inc    edx
  41f3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b5:	pushf  
  41f3b6:	test   al,0x44
  41f3b8:	inc    ecx
  41f3b9:	mov    eax,ds:0x2e4d458
  41f3be:	lahf   
  41f3bf:	sub    eax,0xe1aeb374
  41f3c4:	sub    DWORD PTR [ebx],ebx
  41f3c6:	test   al,0xf5
  41f3c8:	loope  0x41f3c8
  41f3ca:	out    dx,al
  41f3cb:	lods   al,BYTE PTR ds:[esi]
  41f3cc:	mov    cl,0x10
  41f3ce:	int3   
  41f3cf:	mov    ecx,0x2a6d0bc6
  41f3d4:	sub    eax,0x4b7deeb2
  41f3d9:	ficomp WORD PTR [eax+esi*1-0x456b254a]
  41f3e0:	xchg   BYTE PTR gs:[edx],bl
  41f3e3:	in     eax,0x3e
  41f3e5:	and    BYTE PTR [esi],0x7
  41f3e8:	loopne 0x41f3d3
  41f3ea:	xchg   esp,eax
  41f3eb:	neg    DWORD PTR [edi]
  41f3ed:	xor    edx,DWORD PTR [ebp+0x2c1187c9]
  41f3f3:	sub    eax,0x499b924b
  41f3f8:	retf   0x84e0
  41f3fb:	out    dx,al
  41f3fc:	pop    ss
  41f3fd:	sub    al,0x2c
  41f3ff:	in     eax,0xe6
  41f401:	xchg   edx,eax
  41f402:	jg     0x41f38a
  41f404:	repnz mul bl
  41f407:	and    BYTE PTR [edx+esi*2],0x1b
  41f40b:	and    ah,BYTE PTR [ebp-0x4a54bfb5]
  41f411:	xchg   esp,eax
  41f412:	dec    esp
  41f413:	sar    DWORD PTR [esi+0x24],0xff
  41f417:	pusha  
  41f418:	dec    ecx
  41f419:	sar    BYTE PTR [edi],1
  41f41b:	pushf  
  41f41c:	popa   
  41f41d:	cmp    ebp,ebp
  41f41f:	mov    edi,0xbe53b5ff
  41f424:	jo     0x41f48e
  41f426:	retf   0x7437
  41f429:	outs   dx,BYTE PTR ds:[esi]
  41f42a:	adc    BYTE PTR [edx+0x2165c501],bh
  41f430:	out    dx,al
  41f431:	jne    0x41f3c3
  41f433:	ds aad 0x4c
  41f436:	ss int3 
  41f438:	cdq    
  41f439:	xchg   DWORD PTR [edx],ebp
  41f43b:	(bad)  
  41f43c:	hlt    
  41f43d:	cld    
  41f43e:	cmp    edi,ebp
  41f440:	ror    BYTE PTR [ecx+ecx*2],0x72
  41f444:	push   edx
  41f445:	xchg   edi,eax
  41f446:	mov    ds:0x889324a2,eax
  41f44b:	test   bh,0x54
  41f44e:	rol    DWORD PTR [ecx],cl
  41f450:	retf   0x41f3
  41f453:	push   0x62
  41f455:	hlt    
  41f456:	fucomip st,st(1)
  41f458:	jl     0x41f468
  41f45a:	cdq    
  41f45b:	pop    edx
  41f45c:	cmp    DWORD PTR [eax],esp
  41f45e:	jle    0x41f428
  41f460:	loop   0x41f3ed
  41f462:	call   0xa91b:0xf3db4947
  41f469:	bound  esi,QWORD PTR ds:0xa8dda4e5
  41f46f:	lock ins DWORD PTR es:[edi],dx
  41f471:	jp     0x41f40a
  41f473:	mov    ebp,0xe8f225cd
  41f478:	scas   eax,DWORD PTR es:[edi]
  41f479:	jb     0x41f49c
  41f47b:	jns    0x41f4ca
  41f47d:	in     eax,dx
  41f47e:	(bad)  [ecx-0x72]
  41f481:	nop
  41f482:	(bad)  
  41f483:	xchg   ecx,eax
  41f484:	iret   
  41f485:	dec    ebx
  41f486:	push   cs
  41f487:	add    eax,0xabb18877
  41f48c:	aas    
  41f48d:	imul   edi,DWORD PTR [edi+esi*8+0x47d47974],0x8809eb35
  41f498:	mov    ch,0xfd
  41f49a:	imul   ebx,DWORD PTR [edx-0x73b8d7c],0x56338067
  41f4a4:	shl    BYTE PTR [ecx+0x1f],0x26
  41f4a8:	icebp  
  41f4a9:	(bad)  
  41f4aa:	in     eax,0x7b
  41f4ac:	outs   dx,BYTE PTR ds:[esi]
  41f4ad:	imul   ecx,esp,0x5c
  41f4b0:	add    bl,BYTE PTR [eax+0x47]
  41f4b3:	loope  0x41f4d3
  41f4b5:	fst    st(6)
  41f4b7:	(bad)  
  41f4b8:	int    0x0
  41f4ba:	out    dx,al
  41f4bb:	dec    edi
  41f4bc:	inc    ecx
  41f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4be:	daa    
  41f4bf:	loopne 0x41f46d
  41f4c1:	adc    al,0xe7
  41f4c3:	lods   al,BYTE PTR ds:[esi]
  41f4c4:	pop    ss
  41f4c5:	loop   0x41f51f
  41f4c7:	mov    ch,0x14
  41f4c9:	pop    esp
  41f4ca:	lods   al,BYTE PTR ds:[esi]
  41f4cb:	mov    BYTE PTR ds:0xd6e1ac59,bl
  41f4d1:	cmc    
  41f4d2:	and    DWORD PTR [ebx+0x40e3dbec],eax
  41f4d8:	push   esp
  41f4d9:	push   ecx
  41f4da:	sti    
  41f4db:	xor    DWORD PTR [esi-0x1a0f0efe],ecx
  41f4e1:	adc    DWORD PTR [esi+eax*8-0x29],0x10af7ca2
  41f4e9:	mov    bh,0xb
  41f4eb:	(bad)  
  41f4ec:	cdq    
  41f4ed:	push   ss
  41f4ee:	dec    eax
  41f4ef:	stos   DWORD PTR es:[edi],eax
  41f4f0:	xor    bl,BYTE PTR [ebx+0x73]
  41f4f3:	mov    ebx,0xd4b99cfd
  41f4f8:	enter  0xd474,0x72
  41f4fc:	stos   BYTE PTR es:[edi],al
  41f4fd:	mov    bh,0x80
  41f4ff:	mov    ecx,0xbaa1a9ac
  41f504:	es pop edi
  41f506:	(bad)  
  41f507:	in     al,0x74
  41f509:	push   edi
  41f50a:	fcmove st,st(1)
  41f50c:	daa    
  41f50d:	adc    eax,0xeae40d95
  41f512:	pop    eax
  41f513:	fdiv   QWORD PTR [esi+0x10]
  41f516:	xor    DWORD PTR [edi+ebp*2+0x54],0xffffffc2
  41f51b:	mov    ecx,0xbfd5ee9d
  41f520:	arpl   WORD PTR [ebx+esi*8-0x1e],bp
  41f524:	dec    ecx
  41f525:	fild   WORD PTR [ecx]
  41f527:	into   
  41f528:	sub    eax,0xad778dcb
  41f52d:	loop   0x41f4dc
  41f52f:	cli    
  41f530:	lods   eax,DWORD PTR ds:[esi]
  41f531:	mov    bl,0xec
  41f533:	mov    ah,0xf0
  41f535:	inc    BYTE PTR [eax]
  41f537:	xchg   ebx,esp
  41f539:	push   0xfaa2ceb8
  41f53e:	jecxz  0x41f514
  41f540:	add    ecx,ecx
  41f542:	jmp    0x3cce:0x1a6d72ac
  41f549:	sub    ah,dl
  41f54b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f54c:	div    DWORD PTR [esp+ecx*2-0x20f375a3]
  41f553:	rcr    cl,1
  41f555:	add    si,sp
  41f558:	dec    ebx
  41f559:	not    DWORD PTR [esp+edx*4+0x7d]
  41f55d:	fisubr DWORD PTR [eax+0x72ec99bf]
  41f563:	xor    esi,DWORD PTR [ebx-0x38]
  41f566:	mov    ah,0xd5
  41f568:	jmp    0x41f548
  41f56a:	cmp    eax,DWORD PTR [ebx+esi*2+0x6be84fbd]
  41f571:	mov    esp,0x5f58609d
  41f576:	and    DWORD PTR [edi],0xffffffbe
  41f579:	fst    st(1)
  41f57b:	mov    gs:0xb31fb1ce,eax
  41f581:	scas   al,BYTE PTR es:[edi]
  41f582:	adc    ebp,0xd8abcc23
  41f588:	jle    0x41f558
  41f58a:	stc    
  41f58b:	fcom   QWORD PTR [edi]
  41f58d:	iret   
  41f58e:	in     al,dx
  41f58f:	mov    ebx,0x859f306d
  41f594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f595:	out    0x62,eax
  41f597:	jbe    0x41f58e
  41f599:	mov    eax,ds:0x10add9fd
  41f59e:	or     ah,BYTE PTR [ebx+edi*8+0x9]
  41f5a2:	sub    DWORD PTR [ebx-0xa],ecx
  41f5a5:	mov    dh,0xa6
  41f5a7:	std    
  41f5a8:	fdivr  QWORD PTR [ebx+ecx*2+0x1a]
  41f5ac:	fmul   QWORD PTR [eax+0x1670b481]
  41f5b2:	pop    eax
  41f5b3:	(bad)
  41f5b6:	mov    esi,0xb450aa50
  41f5bb:	js     0x41f588
  41f5bd:	call   0xfd6d0b76
  41f5c2:	bound  esi,QWORD PTR [edx-0x24]
  41f5c5:	xchg   ebp,eax
  41f5c6:	mov    DWORD PTR [eax+0x5dfc0d1c],esi
  41f5cc:	out    dx,eax
  41f5cd:	pop    eax
  41f5ce:	ja     0x41f568
  41f5d0:	or     eax,0xb32017ec
  41f5d5:	in     al,0xe9
  41f5d7:	sub    al,BYTE PTR [eax]
  41f5d9:	(bad)  
  41f5da:	pop    esp
  41f5db:	ins    DWORD PTR es:[edi],dx
  41f5dc:	test   al,0x6
  41f5de:	sub    eax,0x6ec8fd59
  41f5e3:	jnp    0x41f5b5
  41f5e5:	icebp  
  41f5e6:	js     0x41f613
  41f5e8:	jmp    0x41f56b
  41f5ea:	out    0x16,al
  41f5ec:	ja     0x41f5a4
  41f5ee:	inc    esp
  41f5ef:	retf   
  41f5f0:	cmp    dl,dl
  41f5f2:	rol    BYTE PTR [edx-0x7e0d6076],1
  41f5f8:	into   
  41f5f9:	cs mov eax,0xa6ef2ef
  41f5ff:	push   es
  41f600:	popf   
  41f601:	add    eax,DWORD PTR [edi-0x56]
  41f604:	sbb    BYTE PTR [esi-0x35],0x5a
  41f608:	mov    cs,WORD PTR [esi]
  41f60a:	xchg   DWORD PTR [ebx+0x4],edi
  41f60d:	lods   eax,DWORD PTR ds:[esi]
  41f60e:	frstor [esi+0x15e97fa0]
  41f614:	call   0xd9c1:0xd3cb6f6e
  41f61b:	sub    ebx,DWORD PTR [ebp-0x3d]
  41f61e:	dec    ebp
  41f61f:	inc    edx
  41f620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f621:	mov    dh,BYTE PTR ds:0x6bf10c6f
  41f627:	es mov esp,0x407fa42
  41f62d:	ss push ebp
  41f62f:	mov    al,ds:0x2b17763
  41f634:	jbe    0x41f5f3
  41f636:	mov    BYTE PTR [edi+ebp*2-0x22],bh
  41f63a:	pop    ecx
  41f63b:	dec    edi
  41f63c:	push   ebx
  41f63d:	or     DWORD PTR [ebp+0x392995c4],0x45
  41f644:	cmc    
  41f645:	jae    0x41f68f
  41f647:	push   0x6234a35e
  41f64c:	jmp    0xcddf:0x2c57ef43
  41f653:	or     eax,0x633fd2c4
  41f658:	cmc    
  41f659:	lods   eax,DWORD PTR ds:[esi]
  41f65a:	jmp    0x994041be
  41f65f:	dec    esi
  41f660:	jb     0x41f626
  41f662:	fcomip st,st(7)
  41f664:	sub    eax,0xb2ad9197
  41f669:	mov    dh,0x23
  41f66b:	dec    esp
  41f66c:	jl     0x41f6cf
  41f66e:	add    eax,0x242b00a7
  41f673:	push   cs
  41f674:	lahf   
  41f675:	add    edx,DWORD PTR [ecx+0x16966c2e]
  41f67b:	dec    ebx
  41f67c:	xchg   DWORD PTR [ebp-0x56b4a17e],ebx
  41f682:	xchg   esp,eax
  41f683:	xor    DWORD PTR [eax+0x70262c22],esi
  41f689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f68a:	loope  0x41f6fb
  41f68c:	test   eax,0x76bd697c
  41f691:	or     bh,BYTE PTR [edx+0x3e]
  41f694:	sub    BYTE PTR [eax+0x60],ah
  41f697:	jle    0x41f6f7
  41f699:	retf   
  41f69a:	dec    ecx
  41f69b:	mov    dl,0xc1
  41f69d:	mov    ds:0x466d5244,al
  41f6a2:	loop   0x41f6c4
  41f6a4:	(bad)  
  41f6a5:	xchg   esi,eax
  41f6a6:	loope  0x41f693
  41f6a8:	jae    0x41f694
  41f6aa:	add    al,0x30
  41f6ac:	imul   esi,DWORD PTR [eax+ecx*4-0x6afb785e],0x762f0a9c
  41f6b7:	push   ebp
  41f6b8:	(bad)  
  41f6b9:	sar    dh,cl
  41f6bb:	rcr    DWORD PTR [ebp+0x6645211a],cl
  41f6c1:	inc    eax
  41f6c2:	imul   edx,esp,0x6d
  41f6c5:	nop
  41f6c6:	rcl    ch,0x8f
  41f6c9:	shr    DWORD PTR [eax-0x2021eb4e],cl
  41f6cf:	in     al,0x3e
  41f6d1:	fisttp DWORD PTR [ebx+eax*2+0x3f]
  41f6d5:	dec    ecx
  41f6d6:	into   
  41f6d7:	dec    esi
  41f6d8:	imul   ecx,DWORD PTR [eax],0xffffffe9
  41f6db:	inc    ecx
  41f6dc:	jb     0x41f6c2
  41f6de:	lahf   
  41f6df:	or     DWORD PTR [edx+0x624dc961],esi
  41f6e5:	aaa    
  41f6e6:	jge    0x41f70c
  41f6e8:	fidiv  DWORD PTR [ebx]
  41f6ea:	imul   eax,DWORD PTR fs:[eax+0x649e1d04],0x556cda16
  41f6f5:	jbe    0x41f715
  41f6f7:	fwait
  41f6f8:	les    ebp,FWORD PTR [eax]
  41f6fa:	add    DWORD PTR [ebx+esi*1-0x55],edi
  41f6fe:	pusha  
  41f6ff:	(bad)  
  41f700:	dec    DWORD PTR [ebx-0x79]
  41f703:	das    
  41f704:	sub    al,0x91
  41f706:	inc    edx
  41f707:	mov    eax,0x4cbc5c76
  41f70c:	xchg   ebx,eax
  41f70d:	xchg   edx,eax
  41f70e:	stos   BYTE PTR es:[edi],al
  41f70f:	xchg   esp,eax
  41f710:	sub    BYTE PTR [edi+0x19],bl
  41f713:	jb     0x41f72b
  41f715:	jb     0x41f6c4
  41f717:	inc    ecx
  41f718:	in     eax,dx
  41f719:	popa   
  41f71a:	mov    edi,0xbeadd356
  41f71f:	aam    0x44
  41f721:	in     al,dx
  41f722:	mov    es,WORD PTR [ecx]
  41f724:	pop    eax
  41f725:	call   0x3b726009
  41f72a:	call   0xc48fb2f4
  41f72f:	ds pop esp
  41f731:	push   esi
  41f732:	xlat   BYTE PTR ds:[ebx]
  41f733:	fld    DWORD PTR [eax]
  41f735:	push   cs
  41f736:	retf   
  41f737:	sahf   
  41f738:	loope  0x41f790
  41f73a:	mov    bh,0x17
  41f73c:	call   0x9b3bed81
  41f741:	ins    BYTE PTR es:[edi],dx
  41f742:	nop
  41f743:	jmp    0x54cc:0xb03a06b0
  41f74a:	mov    BYTE PTR [ebx+eiz*2],ch
  41f74d:	push   ds
  41f74e:	add    eax,0x70a316c3
  41f753:	inc    edi
  41f754:	adc    BYTE PTR [edi+0x3742a2f3],bh
  41f75a:	fs (bad) 
  41f75c:	lahf   
  41f75d:	sbb    al,0x49
  41f75f:	dec    ebp
  41f760:	test   al,0xe3
  41f762:	inc    ecx
  41f763:	push   ds
  41f764:	jle    0x41f6ff
  41f766:	test   DWORD PTR [edx],esi
  41f768:	scas   al,BYTE PTR es:[edi]
  41f769:	mov    al,ds:0x74b01452
  41f76e:	adc    ch,al
  41f770:	dec    edx
  41f771:	jmp    0x45fe:0x3a1af130
  41f778:	and    eax,0xf20e730d
  41f77d:	int    0xbf
  41f77f:	lds    esi,FWORD PTR [edx+0x262e690a]
  41f785:	out    dx,eax
  41f786:	rcl    DWORD PTR [edi],0x36
  41f789:	jno    0x41f77d
  41f78b:	ror    BYTE PTR [ebp-0x5efa8a3f],0x5a
  41f792:	or     cl,ah
  41f794:	loope  0x41f74f
  41f796:	push   ss
  41f797:	add    BYTE PTR [ecx],ah
  41f799:	(bad)  
  41f79a:	sbb    cl,BYTE PTR [esi-0x36]
  41f79d:	mov    si,0x8ef0
  41f7a1:	repz pusha 
  41f7a3:	mov    ch,0x1d
  41f7a5:	and    DWORD PTR [eax-0x42],ecx
  41f7a8:	jbe    0x41f734
  41f7aa:	leave  
  41f7ab:	aam    0x14
  41f7ad:	int3   
  41f7ae:	xchg   DWORD PTR [ebx],ecx
  41f7b0:	in     al,dx
  41f7b1:	adc    esi,DWORD PTR [esi-0x78]
  41f7b4:	lods   eax,DWORD PTR ds:[esi]
  41f7b5:	xchg   edi,eax
  41f7b6:	into   
  41f7b7:	jne    0x41f73d
  41f7b9:	push   ebx
  41f7ba:	(bad)  
  41f7bb:	in     al,dx
  41f7bc:	daa    
  41f7bd:	arpl   WORD PTR [ebp+0x6cc8d2e6],di
  41f7c3:	ds inc ebp
  41f7c5:	cmp    esp,esi
  41f7c7:	fs push ss
  41f7c9:	cmp    DWORD PTR [ebp-0x2b],eax
  41f7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7cd:	and    al,0x4
  41f7cf:	jmp    DWORD PTR [ebp-0x73]
  41f7d2:	frstor [si+0x3cad]
  41f7d7:	mov    ds:0x2b27f208,eax
  41f7dc:	fisub  WORD PTR es:[eax+0xda7d49]
  41f7e3:	popf   
  41f7e4:	and    cl,BYTE PTR [edi+0x7a]
  41f7e7:	mov    al,0xec
  41f7e9:	mul    BYTE PTR [esp+ebp*8+0x44]
  41f7ed:	lea    edx,[edi+0x9506cce]
  41f7f3:	adc    DWORD PTR [esi],edx
  41f7f5:	rol    DWORD PTR [ebx],0xcd
  41f7f8:	cs inc ebx
  41f7fa:	int3   
  41f7fb:	out    dx,al
  41f7fc:	ret    0xd5e0
  41f7ff:	cmp    ebx,DWORD PTR [eax]
  41f801:	mov    bl,cl
  41f803:	imul   esp,DWORD PTR [ebx],0x2b
  41f806:	mov    esi,0x98421235
  41f80b:	rol    ch,0xe6
  41f80e:	enter  0x690a,0xb9
  41f812:	mov    bh,0x97
  41f814:	xchg   BYTE PTR [ebx-0x1a281148],al
  41f81a:	pop    es
  41f81b:	clc    
  41f81c:	sub    ebp,DWORD PTR ds:[ecx+0x65]
  41f820:	imul   eax,DWORD PTR [ecx-0x74],0x4f
  41f824:	sub    ecx,DWORD PTR [eax-0x73]
  41f827:	inc    ebp
  41f828:	add    eax,DWORD PTR [edi-0x66]
  41f82b:	dec    esi
  41f82c:	pop    edx
  41f82d:	addr16 or eax,0xb964fcbc
  41f833:	fs xor al,al
  41f836:	out    dx,eax
  41f837:	pushf  
  41f838:	dec    edi
  41f839:	mov    bl,0x29
  41f83b:	test   al,0x13
  41f83d:	test   al,0xc6
  41f83f:	rcr    BYTE PTR [esi+0x2f022006],0xd1
  41f846:	add    edi,ecx
  41f848:	push   0x87bbb92
  41f84d:	dec    ebx
  41f84e:	add    BYTE PTR [ecx+0x8d05a30],ch
  41f854:	dec    ebx
  41f855:	dec    edi
  41f856:	inc    esp
  41f857:	sub    cl,bl
  41f859:	or     eax,0xb5e19cd
  41f85e:	mov    al,0x27
  41f860:	push   esi
  41f861:	pop    ecx
  41f862:	cmp    cl,BYTE PTR [edi+0x1053112e]
  41f868:	mov    ds:0xcf291c29,eax
  41f86d:	pop    es
  41f86e:	mov    ds:0xb9a1be0f,eax
  41f873:	cmp    bh,ah
  41f875:	and    ebx,edx
  41f877:	xor    BYTE PTR [eax],dh
  41f879:	mov    esp,0xe1722e99
  41f87e:	xchg   BYTE PTR [eax],bl
  41f880:	(bad)  
  41f881:	hlt    
  41f882:	(bad)  
  41f883:	xchg   DWORD PTR [edx+0x27a0dbf7],edx
  41f889:	cmp    BYTE PTR [ebx+0x76c49bdc],0x19
  41f890:	inc    ecx
  41f891:	sti    
  41f892:	in     al,dx
  41f893:	lock dec edx
  41f895:	ret    0xbc69
  41f898:	fstp   st(3)
  41f89a:	iret   
  41f89b:	mov    esi,0xf88db55
  41f8a0:	in     al,dx
  41f8a1:	xor    DWORD PTR [edx+0x5e579bd0],edi
  41f8a7:	add    dh,bl
  41f8a9:	inc    ebp
  41f8aa:	aad    0xe
  41f8ac:	jecxz  0x41f8be
  41f8ae:	and    ebx,ebp
  41f8b0:	cmp    DWORD PTR [ecx-0x2ffbff2],0xffffffb6
  41f8b7:	ds adc al,0xbb
  41f8ba:	in     eax,0xd2
  41f8bc:	retf   0x78ba
  41f8bf:	sbb    ebp,DWORD PTR [edx-0xc7bcedd]
  41f8c5:	adc    BYTE PTR [ebx],0x15
  41f8c8:	cld    
  41f8c9:	push   ss
  41f8ca:	add    al,0xba
  41f8cc:	jne    0x41f938
  41f8ce:	jge    0x41f8ee
  41f8d0:	repz call 0x269d:0xe3135e42
  41f8d8:	out    dx,eax
  41f8d9:	jmp    0x41f91b
  41f8db:	xlat   BYTE PTR ds:[ebx]
  41f8dc:	cmp    ebx,DWORD PTR [ebp-0x38]
  41f8df:	rcr    DWORD PTR [edx+0x4267f9dc],1
  41f8e5:	mov    ebx,0x393dad8c
  41f8ea:	cmc    
  41f8eb:	call   0x274:0x3a6a106e
  41f8f2:	sub    al,0xcb
  41f8f4:	fidivr WORD PTR [ebp+0xb]
  41f8f7:	bound  ebp,QWORD PTR [eax+0x60]
  41f8fa:	inc    ecx
  41f8fb:	mov    al,ds:0xeb19ab36
  41f900:	pop    ebp
  41f901:	imul   esp,DWORD PTR ds:0x91665505,0x1
  41f908:	mul    DWORD PTR [ecx+eiz*2+0xb]
  41f90c:	mov    dh,0x38
  41f90e:	mov    edi,DWORD PTR [edx+0x5d1e20c9]
  41f914:	mov    dh,0x7d
  41f916:	sbb    BYTE PTR [eax],bl
  41f918:	dec    ebx
  41f919:	push   es
  41f91a:	sub    BYTE PTR [ebp+esi*2-0x258de2b],dh
  41f921:	inc    edi
  41f922:	adc    eax,0x89fd8b11
  41f927:	retf   0x6e4
  41f92a:	mov    eax,ds:0xec6f99f
  41f92f:	jge    0x41f910
  41f931:	push   esp
  41f932:	lods   al,BYTE PTR ds:[esi]
  41f933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f934:	lods   eax,DWORD PTR ds:[esi]
  41f935:	js     0x41f991
  41f937:	ss xchg esp,eax
  41f939:	test   BYTE PTR [ebx+0x37],dh
  41f93c:	aad    0xb4
  41f93e:	mov    dh,bh
  41f940:	int    0x93
  41f942:	adc    eax,0x731e49d7
  41f947:	imul   edx,DWORD PTR [edx+ecx*8+0x44213861],0x41
  41f94f:	cmp    edi,0x3f865570
  41f955:	xor    eax,0x9db6589e
  41f95a:	rol    DWORD PTR [edx],cl
  41f95c:	fldcw  WORD PTR [ecx+0x543921ec]
  41f962:	inc    ebx
  41f963:	xchg   ebx,eax
  41f964:	push   ss
  41f965:	xchg   BYTE PTR [edi+ebp*2],bl
  41f968:	push   eax
  41f969:	sub    al,0x55
  41f96b:	je     0x41f914
  41f96d:	aam    0x54
  41f96f:	or     eax,DWORD PTR [ebx+0x4c]
  41f972:	inc    esi
  41f973:	jne    0x41f999
  41f975:	cs repnz in al,dx
  41f978:	dec    esp
  41f979:	scas   eax,DWORD PTR es:[edi]
  41f97a:	sub    esi,ecx
  41f97c:	mov    dl,0xe8
  41f97e:	js     0x41f99d
  41f980:	jge    0x41f96b
  41f982:	into   
  41f983:	dec    ecx
  41f984:	pop    edi
  41f985:	or     ch,BYTE PTR [ebx+0x26]
  41f988:	mov    ebx,ebx
  41f98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f98b:	mov    dl,0x0
  41f98d:	add    al,0xbe
  41f98f:	shl    BYTE PTR [esi+0x581d4abd],0x0
  41f996:	mov    cl,0xeb
  41f998:	pop    ebx
  41f999:	es push ebx
  41f99b:	out    0xbe,eax
  41f99d:	(bad)  
  41f99e:	rol    ah,1
  41f9a0:	mov    ch,0x9
  41f9a2:	cmc    
  41f9a3:	adc    esi,esi
  41f9a5:	push   ds
  41f9a6:	aas    
  41f9a7:	in     al,dx
  41f9a8:	iret   
  41f9a9:	loop   0x41f9d8
  41f9ab:	jmp    0x1b42ceeb
  41f9b0:	cwde   
  41f9b1:	mov    BYTE PTR gs:[ebx+0x75cb8e04],dl
  41f9b8:	push   cs
  41f9b9:	fs in  eax,0x5
  41f9bc:	xor    dl,al
  41f9be:	je     0x41fa3d
  41f9c0:	cmp    bh,cl
  41f9c2:	inc    ebp
  41f9c3:	jo     0x41f96f
  41f9c5:	sub    DWORD PTR [ecx+eiz*8],edi
  41f9c8:	frstor [eax*2+0x19b25d36]
  41f9cf:	bound  eax,QWORD PTR [edi]
  41f9d1:	call   0x72a06881
  41f9d6:	(bad)  
  41f9d7:	test   eax,0xa30049e
  41f9dc:	enter  0x6ba1,0x2d
  41f9e0:	(bad)  
  41f9e1:	fild   DWORD PTR [eax-0x1bee05a]
  41f9e7:	fwait
  41f9e8:	xor    DWORD PTR [esp+eax*4],ecx
  41f9eb:	or     cl,BYTE PTR [esi+edi*4+0x40]
  41f9ef:	push   eax
  41f9f0:	dec    edx
  41f9f1:	xor    edi,ebx
  41f9f3:	sti    
  41f9f4:	(bad)  
  41f9f5:	inc    ecx
  41f9f6:	mov    bl,BYTE PTR [edi-0x61fd0095]
  41f9fc:	push   ss
  41f9fd:	out    dx,al
  41f9fe:	push   edi
  41f9ff:	or     al,0x5c
  41fa01:	aam    0xef
  41fa03:	jno    0x41f9e5
  41fa05:	push   0xffffffba
  41fa07:	push   ss
  41fa08:	add    BYTE PTR [ecx],bh
  41fa0a:	(bad)  
  41fa0b:	jmp    0xfcb4dc7f
  41fa10:	aad    0x44
  41fa12:	dec    esp
  41fa13:	mov    ch,0xca
  41fa15:	in     eax,dx
  41fa16:	mov    gs,WORD PTR [ecx]
  41fa18:	sbb    al,0x16
  41fa1a:	jo     0x41f9ef
  41fa1c:	shl    DWORD PTR [ebx-0x7b9a22e3],1
  41fa22:	mov    dl,0xc2
  41fa24:	jbe    0x41fa4d
  41fa26:	popa   
  41fa27:	les    ebp,FWORD PTR [ecx+0x40c0fd1d]
  41fa2d:	cmp    bh,al
  41fa2f:	cmp    esi,esi
  41fa31:	pop    edi
  41fa32:	call   0x8ccbd216
  41fa37:	daa    
  41fa38:	xor    al,0x88
  41fa3a:	push   edi
  41fa3b:	adc    cl,0xeb
  41fa3e:	retf   0xd610
  41fa41:	sbb    BYTE PTR [ebp-0x7f],dh
  41fa44:	out    dx,al
  41fa45:	mov    al,0x65
  41fa47:	xor    al,0x5c
  41fa49:	jl     0x41fa96
  41fa4b:	jnp    0x41faae
  41fa4d:	pop    es
  41fa4e:	inc    esp
  41fa4f:	xchg   BYTE PTR ds:0x74615b09,cl
  41fa55:	cmp    dl,BYTE PTR [edi+edx*8+0x4c533a39]
  41fa5c:	das    
  41fa5d:	dec    ebp
  41fa5e:	mov    ds:0x4483d574,eax
  41fa63:	outs   dx,BYTE PTR ds:[esi]
  41fa64:	ret    0x7269
  41fa67:	(bad)  
  41fa68:	fstp   QWORD PTR [edi+0x6d]
  41fa6b:	jne    0x41fa83
  41fa6d:	sub    BYTE PTR [esi+0xc],dh
  41fa70:	(bad)  
  41fa71:	xchg   edx,eax
  41fa72:	jnp    0x41fa3d
  41fa74:	cmp    esi,DWORD PTR [ecx]
  41fa76:	push   esp
  41fa77:	mov    edi,0xea49d6d1
  41fa7c:	mov    ch,0xf7
  41fa7e:	ja     0x41faf4
  41fa80:	sar    al,0x20
  41fa83:	xchg   edi,eax
  41fa84:	aaa    
  41fa85:	jo     0x41fafe
  41fa87:	add    al,0xd4
  41fa89:	xor    edx,DWORD PTR [esi+0x79288817]
  41fa8f:	pop    esp
  41fa90:	imul   edi,DWORD PTR [esi-0x1da09625],0x2bf139a6
  41fa9a:	xchg   esi,eax
  41fa9b:	fisubr DWORD PTR [ebx]
  41fa9d:	jge    0x41fb1d
  41fa9f:	sbb    al,0x81
  41faa1:	sbb    edi,DWORD PTR [eax+ebp*1-0x31]
  41faa5:	pop    eax
  41faa6:	mov    BYTE PTR [eax+0x2b],dh
  41faa9:	sbb    DWORD PTR [esi-0x11],esi
  41faac:	cmp    BYTE PTR [eax+0x17],ch
  41faaf:	ss (bad) 
  41fab1:	call   0x69589ed1
  41fab6:	mov    ch,0xeb
  41fab8:	add    BYTE PTR [ebx],ch
  41faba:	xchg   edx,eax
  41fabb:	hlt    
  41fabc:	mov    ebp,0x4d9b8814
  41fac1:	ret    0x6fc1
  41fac4:	pop    ss
  41fac5:	sub    cl,BYTE PTR [ecx]
  41fac7:	lods   al,BYTE PTR ds:[esi]
  41fac8:	clc    
  41fac9:	mov    edx,0xc4093566
  41face:	and    BYTE PTR [esi-0x272e474a],dl
  41fad4:	ret    0xde4c
  41fad7:	clc    
  41fad8:	mov    esi,0x79e4c15c
  41fadd:	mov    eax,0x922ab3d3
  41fae2:	retf   0x9538
  41fae5:	int    0x3d
  41fae7:	rol    BYTE PTR [ebp-0x10490d53],0xdb
  41faee:	outs   dx,BYTE PTR ds:[esi]
  41faef:	in     al,0x70
  41faf1:	mov    edi,0xb2010af1
  41faf6:	(bad)  
  41faf7:	mov    ss,esp
  41faf9:	inc    esp
  41fafa:	inc    esp
  41fafb:	inc    eax
  41fafc:	daa    
  41fafd:	jl     0x41fa80
  41faff:	fnstsw WORD PTR [ebx]
  41fb01:	aas    
  41fb02:	mov    eax,ds:0x352add13
  41fb07:	pop    esi
  41fb08:	mov    al,al
  41fb0a:	push   eax
  41fb0b:	or     ah,BYTE PTR [edx+0x35f565be]
  41fb11:	inc    ebx
  41fb12:	(bad)  
  41fb13:	test   al,0x9f
  41fb15:	stos   BYTE PTR es:[edi],al
  41fb16:	adc    DWORD PTR [ebx+0x4c7525dc],0x8
  41fb1d:	mov    esi,0x814df851
  41fb22:	sub    cl,ch
  41fb24:	pusha  
  41fb25:	jmp    0x41fb26
  41fb27:	cli    
  41fb28:	pop    ss
  41fb29:	xchg   DWORD PTR [edx+0x31ca0f9f],esp
  41fb2f:	not    ebx
  41fb31:	mov    esp,0x20720052
  41fb36:	ds cli 
  41fb38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb39:	ins    BYTE PTR es:[edi],dx
  41fb3a:	fpatan 
  41fb3c:	inc    ebp
  41fb3d:	dec    esi
  41fb3e:	dec    esp
  41fb3f:	cwde   
  41fb40:	popa   
  41fb41:	(bad)  
  41fb43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb44:	sub    BYTE PTR [esi-0x4d],cl
  41fb47:	jecxz  0x41fb10
  41fb49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb4a:	jl     0x41faed
  41fb4c:	jl     0x41fb53
  41fb4e:	pop    eax
  41fb4f:	push   ebp
  41fb50:	out    0x92,eax
  41fb52:	mov    esi,ds
  41fb54:	daa    
  41fb55:	jge    0x41fb40
  41fb57:	mov    bl,0xae
  41fb59:	cwde   
  41fb5a:	sti    
  41fb5b:	push   0xfffffffa
  41fb5d:	pusha  
  41fb5e:	pop    ds
  41fb5f:	sahf   
  41fb60:	dec    edx
  41fb61:	ret    
  41fb62:	xor    eax,0x3188834b
  41fb67:	gs xchg bh,ch
  41fb6a:	es ret 
  41fb6c:	aas    
  41fb6d:	fisttp QWORD PTR [esp+esi*2+0x64]
  41fb71:	enter  0x8d23,0x42
  41fb75:	xchg   ecx,eax
  41fb76:	and    al,0xc4
  41fb78:	jg     0x41fb16
  41fb7a:	inc    ecx
  41fb7b:	push   ss
  41fb7c:	dec    esi
  41fb7d:	je     0x41fb32
  41fb7f:	cld    
  41fb80:	js     0x41fb13
  41fb82:	sub    dl,BYTE PTR [ecx+0x6]
  41fb85:	pop    ebp
  41fb86:	imul   edi,DWORD PTR [ebx+ebx*1+0xf7ddd65],0x555fe774
  41fb91:	push   edx
  41fb92:	loope  0x41fb99
  41fb94:	std    
  41fb95:	xchg   DWORD PTR [ebx+0x736dcd3],ebx
  41fb9b:	scas   al,BYTE PTR es:[edi]
  41fb9c:	fidivr DWORD PTR [edi]
  41fb9e:	iret   
  41fb9f:	in     eax,0x84
  41fba1:	enter  0x230d,0x13
  41fba5:	cs cdq 
  41fba7:	sub    dh,cl
  41fba9:	fabs   
  41fbab:	dec    esi
  41fbac:	sub    ebp,DWORD PTR [ebx-0x65]
  41fbaf:	or     eax,DWORD PTR [esi]
  41fbb1:	mov    WORD PTR [ebx*2+0x584a77d0],?
  41fbb8:	cmovb  esi,DWORD PTR [edx-0x1e723572]
  41fbbf:	add    DWORD PTR [ebp+0x42],eax
  41fbc2:	sbb    BYTE PTR ds:0x9190b655,cl
  41fbc8:	ins    BYTE PTR es:[edi],dx
  41fbc9:	jg     0x41fb8d
  41fbcb:	jb     0x41fbe4
  41fbcd:	inc    esi
  41fbce:	addr16 mov ebp,0xa6aa5726
  41fbd4:	mov    DWORD PTR [edi+eax*1],eax
  41fbd7:	xchg   edi,eax
  41fbd8:	(bad)  
  41fbd9:	(bad)  [edx+0x10b1b3df]
  41fbdf:	lods   al,BYTE PTR ds:[esi]
  41fbe0:	and    DWORD PTR [edi-0x67],ebp
  41fbe3:	femms  
  41fbe5:	adc    DWORD PTR [esi+edx*8+0xd9406ad],esi
  41fbec:	scas   al,BYTE PTR es:[edi]
  41fbed:	stos   DWORD PTR es:[edi],eax
  41fbee:	es sbb dl,dl
  41fbf1:	pop    es
  41fbf2:	mov    ah,0xc6
  41fbf4:	fild   WORD PTR [ebx-0x2ba754e9]
  41fbfa:	and    bh,BYTE PTR [eax+0x6c]
  41fbfd:	leave  
  41fbfe:	jl     0x41fbdb
  41fc00:	jmp    0x41fc61
  41fc02:	test   eax,0x1bb13393
  41fc07:	jb     0x41fb9d
  41fc09:	aad    0x35
  41fc0b:	or     DWORD PTR [ecx-0x5b],esp
  41fc0e:	push   esi
  41fc0f:	ins    DWORD PTR es:[edi],dx
  41fc10:	add    ebp,DWORD PTR [edx+edi*8-0x72ebc7c7]
  41fc17:	arpl   WORD PTR [ecx-0x6516f16e],ax
  41fc1d:	out    dx,al
  41fc1e:	enter  0x6590,0x1e
  41fc22:	(bad)  
  41fc23:	pop    ss
  41fc24:	repz out 0x9e,eax
  41fc27:	xchg   BYTE PTR [eax],bl
  41fc29:	mov    fs,WORD PTR [eax+0x4f]
  41fc2c:	repz mov esi,0x6b5c19fb
  41fc32:	push   ds
  41fc33:	dec    edi
  41fc34:	add    esp,DWORD PTR [esi-0x54]
  41fc37:	sbb    eax,0x4783315c
  41fc3c:	data16 out dx,al
  41fc3e:	jp     0x41fc0d
  41fc40:	stc    
  41fc41:	adc    BYTE PTR [edx-0x76aa4804],ah
  41fc47:	and    BYTE PTR [eax],bh
  41fc49:	nop
  41fc4a:	jae    0x41fc71
  41fc4c:	fdiv   DWORD PTR [ebx]
  41fc4e:	xchg   ebp,eax
  41fc4f:	and    eax,0x5355cb7d
  41fc54:	js     0x41fc24
  41fc56:	repnz mov bh,0x3b
  41fc59:	sub    DWORD PTR [edx+eax*4+0x5a28037b],0x593bf11f
  41fc64:	or     BYTE PTR gs:[ebp+edx*4-0x58b37a12],bh
  41fc6c:	dec    eax
  41fc6d:	repz dec esi
  41fc6f:	in     eax,dx
  41fc70:	pop    es
  41fc71:	imul   ebp,DWORD PTR [eax+eax*4+0x59f19407],0xa14194e7
  41fc7c:	mov    esp,0x506c0697
  41fc81:	mov    eax,0x73b22dc9
  41fc86:	inc    esp
  41fc87:	test   BYTE PTR [esi],dh
  41fc89:	out    dx,eax
  41fc8a:	xchg   esi,eax
  41fc8b:	mov    ebx,0x23a094b2
  41fc90:	mov    DWORD PTR es:[ebx],edx
  41fc93:	popf   
  41fc94:	lahf   
  41fc95:	lea    ecx,[esi+0x7a8b1db9]
  41fc9b:	in     eax,0x8f
  41fc9d:	nop
  41fc9e:	or     al,0xdd
  41fca0:	inc    edi
  41fca1:	ja     0x41fcc9
  41fca3:	sub    al,cl
  41fca5:	mov    al,0x8b
  41fca7:	push   es
  41fca8:	fnsave [ebx+ecx*8-0x2b]
  41fcac:	loope  0x41fd07
  41fcae:	jb     0x41fcc9
  41fcb0:	and    edi,0x1c
  41fcb3:	cmp    bl,bl
  41fcb5:	cmp    eax,0xe6c314a7
  41fcba:	in     eax,dx
  41fcbb:	xchg   ebx,eax
  41fcbc:	mov    WORD PTR [edi],es
  41fcbe:	loopne 0x41fc96
  41fcc0:	in     eax,dx
  41fcc1:	sub    BYTE PTR [edx+0x54],0xc1
  41fcc5:	adc    DWORD PTR gs:[ebx],0xe3ea268c
  41fccc:	or     edx,ebx
  41fcce:	js     0x41fce7
  41fcd0:	pushf  
  41fcd1:	add    ebp,DWORD PTR [ecx-0x8]
  41fcd4:	xchg   edx,eax
  41fcd5:	mov    esp,0x36c52385
  41fcda:	lahf   
  41fcdb:	xchg   esp,eax
  41fcdc:	shl    DWORD PTR [ebp-0x1d],0x3c
  41fce0:	inc    edi
  41fce1:	pop    ebx
  41fce2:	(bad)  
  41fce3:	das    
  41fce4:	jmp    0x41fcaf
  41fce6:	js     0x41fc8b
  41fce8:	clc    
  41fce9:	into   
  41fcea:	mov    ebx,0x9b95fbf7
  41fcef:	pop    es
  41fcf0:	int    0x4d
  41fcf2:	fbld   TBYTE PTR [ecx-0x79]
  41fcf5:	enter  0xab98,0x89
  41fcf9:	mov    ch,0x10
  41fcfb:	ret    0x3b7
  41fcfe:	cmp    ch,bl
  41fd00:	mov    eax,0x8a3175b0
  41fd05:	cmp    edx,DWORD PTR ss:[ebp+0x50]
  41fd09:	ret    0x9db0
  41fd0c:	add    al,0x5f
  41fd0e:	lahf   
  41fd0f:	loopne 0x41fd8e
  41fd11:	xchg   esi,eax
  41fd12:	movaps xmm2,XMMWORD PTR [edx-0x6c15109d]
  41fd19:	clc    
  41fd1a:	jmp    0x7c40:0xdad75c26
  41fd21:	stc    
  41fd22:	inc    ebp
  41fd23:	dec    edi
  41fd24:	sbb    BYTE PTR [eax],0x6d
  41fd27:	cwde   
  41fd28:	fcomi  st,st(7)
  41fd2a:	ret    
  41fd2b:	jmp    0x41fcdf
  41fd2d:	int3   
  41fd2e:	sbb    edi,ebx
  41fd30:	push   0x72
  41fd32:	and    ah,BYTE PTR [ebp-0x26]
  41fd35:	add    eax,ebx
  41fd37:	sti    
  41fd38:	sbb    BYTE PTR [eax-0x2461ca26],0xd5
  41fd3f:	lock pop ecx
  41fd41:	popf   
  41fd42:	in     al,0x36
  41fd44:	aas    
  41fd45:	mov    bh,0x2f
  41fd47:	lahf   
  41fd48:	mov    ecx,0x3902d92
  41fd4d:	sbb    dl,BYTE PTR [eax+0x7f2fa6e3]
  41fd53:	mov    al,ds:0xf895976f
  41fd58:	mov    edx,eax
  41fd5a:	cmp    DWORD PTR [ebx+0x65],eax
  41fd5d:	xor    DWORD PTR [ebx-0x35891afb],0x1387a7e1
  41fd67:	push   eax
  41fd68:	mov    ch,0xda
  41fd6a:	daa    
  41fd6b:	paddusb mm1,QWORD PTR [ebx]
  41fd6e:	ret    0xe51c
  41fd71:	push   edx
  41fd72:	adc    eax,0xb1a9debc
  41fd77:	and    BYTE PTR [edx+0x60ba98d8],ch
  41fd7d:	pop    esi
  41fd7e:	jne    0x41fd8d
  41fd80:	and    eax,0xb002b737
  41fd85:	jb     0x41fd7b
  41fd87:	dec    ebx
  41fd88:	sbb    al,0x31
  41fd8a:	jle    0x41fd5a
  41fd8c:	jle    0x41fdb6
  41fd8e:	cld    
  41fd8f:	add    esp,DWORD PTR [esi+0x32]
  41fd92:	inc    ebp
  41fd93:	dec    esp
  41fd94:	fdivrp st(3),st
  41fd96:	adc    al,0x61
  41fd98:	or     bh,0xcb
  41fd9b:	dec    ebp
  41fd9c:	xor    BYTE PTR [edi],0xe3
  41fd9f:	aas    
  41fda0:	bound  ebp,QWORD PTR [ebx+0x4db92df]
  41fda6:	(bad)  
  41fda7:	or     DWORD PTR [ebx],ebx
  41fda9:	pop    ss
  41fdaa:	loopne 0x41fdfa
  41fdac:	fcmovnb st,st(2)
  41fdae:	mov    bh,0x6f
  41fdb0:	out    dx,eax
  41fdb1:	sub    dl,ah
  41fdb3:	dec    edx
  41fdb4:	leave  
  41fdb5:	pop    ss
  41fdb6:	jp     0x41fd7f
  41fdb8:	and    DWORD PTR [edx-0x111bd347],ebx
  41fdbe:	sub    dh,dl
  41fdc0:	pop    ebx
  41fdc1:	push   edi
  41fdc2:	xchg   esp,eax
  41fdc3:	(bad)  
  41fdc4:	jno    0x41fe37
  41fdc6:	rol    BYTE PTR [ebp+0x75],0xef
  41fdca:	in     al,dx
  41fdcb:	lods   eax,DWORD PTR ds:[esi]
  41fdcc:	shl    BYTE PTR ds:0xef9b1832,1
  41fdd2:	mov    al,ds:0xd6ce3fe3
  41fdd7:	xchg   ebx,eax
  41fdd8:	cmp    DWORD PTR [esi],edi
  41fdda:	sub    cl,bl
  41fddc:	cs call 0xf627aba8
  41fde2:	out    dx,al
  41fde3:	cmp    eax,0xd2190318
  41fde8:	xchg   esp,eax
  41fde9:	lahf   
  41fdea:	dec    BYTE PTR ds:0x40c9211f
  41fdf0:	addr16 jmp 0x50f0ffdb
  41fdf6:	leave  
  41fdf7:	xchg   DWORD PTR [ecx-0x42da690d],eax
  41fdfd:	cmp    bl,ch
  41fdff:	int    0xaf
  41fe01:	cwd    
  41fe03:	add    DWORD PTR [edx],edx
  41fe05:	stc    
  41fe06:	iret   
  41fe07:	mov    edx,gs
  41fe09:	cmp    DWORD PTR [eax+0x24afaeb3],edi
  41fe0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe10:	jbe    0x41fdc6
  41fe12:	lock push ebx
  41fe14:	or     al,0xea
  41fe16:	dec    ecx
  41fe17:	mov    eax,0x2969bbaa
  41fe1c:	xor    ah,BYTE PTR [eax+edx*4]
  41fe1f:	data16 rcr dl,0x53
  41fe23:	sub    DWORD PTR [esi+0x417ed829],edx
  41fe29:	je     0x41fe97
  41fe2b:	retf   0xbae7
  41fe2e:	xchg   esi,eax
  41fe2f:	sbb    ebp,ebp
  41fe31:	xor    eax,0xf85c41b1
  41fe36:	arpl   WORD PTR [edx],di
  41fe38:	and    eax,0x90c3f9f6
  41fe3d:	std    
  41fe3e:	dec    ecx
  41fe3f:	aad    0x67
  41fe41:	popf   
  41fe42:	dec    eax
  41fe43:	lahf   
  41fe44:	and    al,BYTE PTR [eax+0x4702fe34]
  41fe4a:	dec    ebx
  41fe4b:	jbe    0x41fe72
  41fe4d:	pop    esp
  41fe4e:	imul   esi,DWORD PTR [eax+edi*1],0xffffffbc
  41fe52:	pop    esp
  41fe53:	jmp    0x41feb2
  41fe55:	icebp  
  41fe56:	jl     0x41fe35
  41fe58:	or     eax,0x5df604ef
  41fe5d:	xchg   edi,eax
  41fe5e:	cdq    
  41fe5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe60:	jmp    0xc121:0x3bc6fdec
  41fe67:	mov    al,0xbd
  41fe69:	es mov esp,0x18a7ad82
  41fe6f:	sbb    BYTE PTR [ecx-0x76635338],bh
  41fe75:	stc    
  41fe76:	lods   eax,DWORD PTR ds:[esi]
  41fe77:	jl     0x41fedb
  41fe79:	fidiv  WORD PTR [ecx-0x76]
  41fe7c:	cmp    al,0xee
  41fe7e:	ror    DWORD PTR [ebx+0xe],cl
  41fe81:	xchg   BYTE PTR [eax],bl
  41fe83:	pop    ebp
  41fe84:	mov    eax,ds:0x15c85531
  41fe89:	jmp    0x9c87:0x385eca57
  41fe90:	or     DWORD PTR [esi-0x46acb148],ecx
  41fe96:	pop    edx
  41fe97:	into   
  41fe98:	int    0x41
  41fe9a:	mov    bh,BYTE PTR [ebx+0x22a98250]
  41fea0:	push   cs
  41fea1:	les    edi,FWORD PTR [esi+0x7b]
  41fea4:	call   0xbe65dd80
  41fea9:	leave  
  41feaa:	bound  eax,QWORD PTR [edi+0x1d274cb1]
  41feb0:	lock push DWORD PTR [edi]
  41feb3:	and    eax,esi
  41feb5:	lahf   
  41feb6:	scas   eax,DWORD PTR es:[edi]
  41feb7:	jge    0x41ff2c
  41feb9:	(bad)  
  41feba:	outs   dx,DWORD PTR ds:[esi]
  41febb:	xlat   BYTE PTR ds:[ebx]
  41febc:	ror    BYTE PTR [edi-0x4b18cee1],0x98
  41fec3:	popf   
  41fec4:	pop    esi
  41fec5:	push   edx
  41fec6:	dec    ebx
  41fec7:	push   ecx
  41fec8:	push   ebp
  41fec9:	(bad)  
  41feca:	push   cs
  41fecb:	sub    al,0xb6
  41fecd:	outs   dx,DWORD PTR ds:[esi]
  41fece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fecf:	and    DWORD PTR [ecx*8-0x55222062],edi
  41fed6:	cli    
  41fed7:	jle    0x41ff2d
  41fed9:	cmp    eax,0xba6fba1
  41fede:	mov    ds:0x91b526f7,al
  41fee3:	je     0x41ff32
  41fee5:	push   0xdf6ac95
  41feea:	push   ss
  41feeb:	inc    esi
  41feec:	scas   eax,DWORD PTR es:[edi]
  41feed:	inc    ebp
  41feee:	dec    eax
  41feef:	out    dx,al
  41fef0:	cmp    al,0xd2
  41fef2:	cld    
  41fef3:	stc    
  41fef4:	push   esi
  41fef5:	repz into 
  41fef7:	sub    bl,al
  41fef9:	ja     0x41feb9
  41fefb:	inc    edx
  41fefc:	into   
  41fefd:	gs pop ds
  41feff:	sub    al,0xba
  41ff01:	jmp    DWORD PTR [edi+eiz*8]
  41ff04:	mov    gs,WORD PTR [bp+di]
  41ff07:	test   DWORD PTR [esi+0x51],esp
  41ff0a:	mov    cl,0x71
  41ff0c:	sub    DWORD PTR [ebx+0x53],eax
  41ff0f:	or     al,BYTE PTR [ebp-0x6e691802]
  41ff15:	mov    ds:0x89d09446,eax
  41ff1a:	sub    DWORD PTR [edx-0x4e203c9a],edx
  41ff20:	out    dx,eax
  41ff21:	test   eax,0x72997e7b
  41ff26:	push   0xfffffffc
  41ff28:	gs sub eax,0xd3191eab
  41ff2e:	sbb    eax,0xc7aa2756
  41ff33:	cmc    
  41ff34:	outs   dx,BYTE PTR ds:[esi]
  41ff35:	jno    0x41ff87
  41ff37:	xor    cl,BYTE PTR [ebx-0x7a]
  41ff3a:	mov    edx,0x429c1566
  41ff3f:	cmp    cl,BYTE PTR [esi-0x3f18f54d]
  41ff45:	aas    
  41ff46:	in     al,0xc2
  41ff48:	inc    ecx
  41ff49:	repnz push es
  41ff4b:	inc    ebp
  41ff4c:	mov    WORD PTR [ecx-0x47781e82],cs
  41ff52:	stos   DWORD PTR es:[edi],eax
  41ff53:	mov    WORD PTR [edx+eiz*4+0x39396310],gs
  41ff5a:	ins    DWORD PTR es:[edi],dx
  41ff5b:	cld    
  41ff5c:	fdiv   DWORD PTR ds:0x1f204fae
  41ff62:	sub    bl,BYTE PTR [ebx]
  41ff64:	cmp    DWORD PTR [edx],0xc65551e5
  41ff6a:	out    0x24,eax
  41ff6c:	rcr    al,cl
  41ff6e:	xor    BYTE PTR [eax-0x46fef414],al
  41ff74:	test   DWORD PTR [esi],esi
  41ff76:	retf   0x2600
  41ff79:	repz das 
  41ff7b:	adc    eax,0xd937c744
  41ff80:	aaa    
  41ff81:	js     0x41ff08
  41ff83:	adc    edx,esi
  41ff85:	inc    ecx
  41ff86:	adc    cl,BYTE PTR [ecx+0x32]
  41ff89:	add    esp,0x3
  41ff8c:	jb     0x41ffab
  41ff8e:	cwde   
  41ff8f:	js     0x41ff8d
  41ff91:	ins    DWORD PTR es:[edi],dx
  41ff92:	push   ebx
  41ff93:	sbb    eax,DWORD PTR [esi+0x63d43078]
  41ff99:	and    eax,0xfb88ea38
  41ff9e:	je     0x41ff9b
  41ffa0:	pop    esi
  41ffa1:	xchg   esp,eax
  41ffa2:	jbe    0x41ff68
  41ffa4:	or     al,0x7d
  41ffa6:	(bad)  
  41ffa7:	xchg   edi,eax
  41ffa8:	dec    edx
  41ffa9:	mov    bh,0xcf
  41ffab:	mov    DWORD PTR [ebp+0x5a],esi
  41ffae:	cwde   
  41ffaf:	push   ebp
  41ffb0:	mov    dl,0xe
  41ffb2:	pop    ds
  41ffb3:	pop    ss
  41ffb4:	add    edi,eax
  41ffb6:	mov    ch,0x9d
  41ffb8:	mov    ch,0xb5
  41ffba:	nop
  41ffbb:	jb     0x41ff83
  41ffbd:	test   DWORD PTR [ecx+0xfd952b5],ecx
  41ffc3:	adc    eax,0xa0f10a9c
  41ffc8:	retf   
  41ffc9:	aad    0x83
  41ffcb:	test   BYTE PTR [esi],dl
  41ffcd:	jo     0x41ff74
  41ffcf:	mov    ah,0x4
  41ffd1:	sub    DWORD PTR [ebx-0x6c],0x20
  41ffd5:	(bad)  
  41ffd6:	mov    esp,0xfdbbaf42
  41ffdb:	sbb    DWORD PTR [ebp+0x3cddc1af],edx
  41ffe1:	sub    DWORD PTR [ecx],eax
  41ffe3:	fwait
  41ffe4:	jns    0x41ff6e
  41ffe6:	je     0x41fff9
  41ffe8:	adc    eax,0xc6b44ebe
  41ffed:	mov    edx,0x6cffbe7d
  41fff2:	aam    0x23
  41fff4:	dec    edx
  41fff5:	jg     0x41ffd7
  41fff7:	es push esp
  41fff9:	pop    ds
  41fffa:	test   eax,0x58922b49
  41ffff:	rol    edi,0x53
  420002:	mov    edx,0xb1aa2f13
  420007:	shl    BYTE PTR [edi+0x38],0x65
  42000b:	xor    al,BYTE PTR [edi]
  42000d:	dec    ebp
  42000e:	jp     0x41ffaa
  420010:	out    0x77,al
  420012:	xor    BYTE PTR [ebx+0xa49fa14],bh
  420018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420019:	mov    edi,0x33a78ba7
  42001e:	cmp    eax,0xc7c37674
  420023:	xchg   esi,eax
  420024:	or     edi,DWORD PTR [ebx]
  420026:	int3   
  420027:	shr    DWORD PTR [ecx+0x42610c6f],cl
  42002d:	test   eax,0xcc5fcd95
  420032:	dec    ebx
  420033:	jg     0x420024
  420035:	mov    ebp,0x2c7620ae
  42003a:	(bad)
  42003e:	sub    BYTE PTR [ecx+0x58a3079b],dl
  420044:	and    BYTE PTR [eax],cl
  420046:	fist   WORD PTR [eax+ebp*2+0x22]
  42004a:	pop    es
  42004b:	or     edx,DWORD PTR [edx-0x58534e98]
  420051:	pop    ds
  420052:	cmp    DWORD PTR [ebp-0x1ff61632],ecx
  420058:	loope  0x420003
  42005a:	push   0xffffffd3
  42005c:	shl    DWORD PTR [ebx],1
  42005e:	(bad)  
  42005f:	mov    eax,0xa0373e07
  420064:	adc    dl,BYTE PTR [bx+si]
  420067:	es dec ebx
  420069:	sbb    DWORD PTR [eax],esp
  42006b:	pop    edi
  42006c:	add    BYTE PTR [ecx-0x6a],al
  42006f:	ffreep st(5)
  420071:	out    dx,al
  420072:	enter  0x77b6,0xe8
  420076:	sbb    eax,0x9482f878
  42007b:	mov    bh,0x85
  42007d:	and    al,0x9d
  42007f:	push   esp
  420080:	mov    bl,0xd9
  420082:	pop    edx
  420083:	pop    es
  420084:	ret    0x4a09
  420087:	mov    esi,0x8066f303
  42008c:	adc    ecx,esi
  42008e:	lods   eax,DWORD PTR ds:[esi]
  42008f:	mov    dl,0x1f
  420091:	repnz dec ebx
  420093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420094:	xchg   ebx,eax
  420095:	push   esi
  420096:	or     eax,0xf9b93c0
  42009b:	es sbb al,0xe2
  42009e:	dec    esp
  42009f:	popa   
  4200a0:	aas    
  4200a1:	stc    
  4200a2:	in     al,0xd1
  4200a4:	adc    edi,DWORD PTR [ebx]
  4200a6:	adc    DWORD PTR [ecx],esi
  4200a8:	ja     0x420115
  4200aa:	hlt    
  4200ab:	or     DWORD PTR [edx],eax
  4200ad:	ins    BYTE PTR es:[edi],dx
  4200ae:	mov    esi,0x7d676b81
  4200b3:	pop    ss
  4200b4:	mov    dh,0xd3
  4200b7:	mov    ?,ebx
  4200b9:	sub    esp,DWORD PTR [esi+0x3a14459c]
  4200bf:	xchg   DWORD PTR [ebp+0x74],edi
  4200c2:	into   
  4200c3:	shl    BYTE PTR [ebx+0x47],1
  4200c6:	ret    0x9b15
  4200c9:	pop    ebp
  4200ca:	xlat   BYTE PTR ds:[ebx]
  4200cb:	in     al,0x7c
  4200cd:	pop    ecx
  4200ce:	mov    ch,0x43
  4200d0:	sub    BYTE PTR [eax-0x29],cl
  4200d3:	iret   
  4200d4:	test   DWORD PTR [eax],esp
  4200d6:	sub    eax,0x1bdd486b
  4200db:	lahf   
  4200dc:	inc    ebp
  4200dd:	lods   eax,DWORD PTR ds:[esi]
  4200de:	sbb    bh,bl
  4200e0:	(bad)  
  4200e1:	cli    
  4200e2:	ret    0xb622
  4200e5:	cmp    dl,bl
  4200e7:	clc    
  4200e8:	sahf   
  4200e9:	add    edx,ebx
  4200eb:	xchg   esp,eax
  4200ec:	cdq    
  4200ed:	xchg   BYTE PTR [ebp-0x6d],dl
  4200f0:	(bad)  
  4200f1:	adc    eax,0xe3687328
  4200f6:	repz adc eax,0xd805ebb2
  4200fc:	dec    ebp
  4200fd:	lock pop ss
  4200ff:	or     DWORD PTR [ebp-0x36],esi
  420102:	rol    DWORD PTR [edi-0x3e0a1c98],0xcb
  420109:	loope  0x4200a0
  42010b:	mov    BYTE PTR [bx-0x52c0],0xf7
  420111:	or     DWORD PTR [eax+edi*4],ecx
  420114:	leave  
  420115:	imul   edx,edx,0xffffffc2
  420118:	mov    esi,0xb2c8e91
  42011d:	dec    esp
  42011e:	mov    bl,0x71
  420120:	push   cs
  420121:	mov    cr1,esi
  420124:	xor    esp,DWORD PTR [esi-0x96632a1]
  42012a:	push   esp
  42012b:	or     al,0x23
  42012d:	and    ebx,DWORD PTR [eax]
  42012f:	inc    eax
  420130:	mov    edx,0x90628641
  420135:	test   eax,0x9328096e
  42013a:	adc    ecx,eax
  42013c:	cwde   
  42013d:	ret    0x97ea
  420140:	test   eax,esp
  420142:	popf   
  420143:	inc    ebx
  420144:	dec    esi
  420145:	pop    ecx
  420146:	sub    al,0xbf
  420148:	push   ecx
  420149:	mov    DWORD PTR [ecx],esp
  42014b:	mov    ah,0xea
  42014d:	add    al,0xd7
  42014f:	fistp  DWORD PTR [ebx]
  420151:	jnp    0x42011a
  420153:	in     eax,dx
  420154:	hlt    
  420155:	inc    esi
  420156:	dec    eax
  420157:	and    eax,0xa48485a6
  42015c:	ins    DWORD PTR es:[edi],dx
  42015d:	cmp    edx,edx
  42015f:	stos   BYTE PTR es:[edi],al
  420160:	(bad)  
  420161:	in     al,0xbe
  420163:	jge    0x4201d7
  420165:	jp     0x420191
  420167:	pop    esi
  420168:	sbb    esi,ebx
  42016a:	mov    BYTE PTR [esi+0x5b],ah
  42016d:	int    0x9c
  42016f:	idiv   eax
  420171:	test   DWORD PTR [ebp+0x2c],esp
  420174:	push   es
  420175:	fimul  WORD PTR [edi]
  420177:	jno    0x42018e
  420179:	scas   al,BYTE PTR es:[edi]
  42017a:	pop    esi
  42017b:	(bad)  
  42017c:	or     dh,BYTE PTR [edx+0x49]
  42017f:	bound  edi,QWORD PTR [ecx+0x47]
  420182:	mov    gs,esp
  420184:	rol    DWORD PTR ds:0xc877cafb,0x8d
  42018b:	les    ebp,FWORD PTR [ecx+0x325d97eb]
  420191:	add    bl,cl
  420193:	inc    ecx
  420194:	lds    eax,FWORD PTR [edx+eiz*8-0x38]
  420198:	inc    ebp
  420199:	and    cl,BYTE PTR [eax+0x56031337]
  42019f:	cdq    
  4201a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a1:	aam    0x86
  4201a3:	add    bl,dh
  4201a5:	imul   esi,DWORD PTR [ebx+eax*8-0x3a44991c],0xdaa5966c
  4201b0:	jmp    0x30b93f25
  4201b5:	out    0x5c,eax
  4201b7:	fwait
  4201b8:	cdq    
  4201b9:	pop    ebx
  4201ba:	jecxz  0x4201f1
  4201bc:	push   0xffffffab
  4201be:	fwait
  4201bf:	dec    edx
  4201c0:	retf   0x552f
  4201c3:	mov    ah,cl
  4201c5:	fsubr  DWORD PTR [edi]
  4201c7:	in     al,dx
  4201c8:	rcl    BYTE PTR [edx+0x15],1
  4201cb:	out    0x9c,eax
  4201cd:	push   ss
  4201ce:	(bad)  
  4201cf:	sbb    al,0xb7
  4201d1:	sub    eax,0xfe3dedb9
  4201d6:	outs   dx,DWORD PTR ds:[esi]
  4201d7:	ret    0xd543
  4201da:	pop    edi
  4201db:	pop    edx
  4201dc:	push   0xa27d4574
  4201e1:	pusha  
  4201e2:	mov    al,BYTE PTR [ecx]
  4201e4:	push   ecx
  4201e5:	scas   al,BYTE PTR es:[edi]
  4201e6:	loopne 0x42019b
  4201e8:	sbb    BYTE PTR [esp+ecx*1],dh
  4201eb:	popf   
  4201ec:	jae    0x42024d
  4201ee:	cdq    
  4201ef:	inc    edx
  4201f0:	not    BYTE PTR [edx+ebp*8]
  4201f3:	jl     0x420207
  4201f5:	sahf   
  4201f6:	cs adc bh,0xb
  4201fa:	inc    esi
  4201fb:	and    DWORD PTR [esi+0x35489d64],esi
  420201:	int    0xf6
  420203:	push   esi
  420204:	xchg   ebp,eax
  420205:	js     0x420251
  420207:	test   BYTE PTR [edx+0x40],bh
  42020a:	aaa    
  42020b:	mov    eax,0x506d9b17
  420210:	(bad)  
  420211:	std    
  420212:	sub    dh,BYTE PTR gs:[edx]
  420215:	imul   esi,DWORD PTR [ebx+0x5243178],0x5ef931e7
  42021f:	in     al,0x8f
  420221:	dec    ecx
  420222:	or     esi,DWORD PTR [ebx+0x76]
  420225:	or     BYTE PTR [edx-0x7a0cb950],0x2c
  42022c:	push   ss
  42022d:	jb     0x420242
  42022f:	(bad)  
  420231:	add    al,ch
  420233:	mov    dl,0xc7
  420235:	ret    
  420236:	imul   esp,DWORD PTR fs:[esi-0x2dbc942a],0xfffffff0
  42023e:	ins    BYTE PTR es:[edi],dx
  42023f:	pushf  
  420240:	ins    BYTE PTR es:[edi],dx
  420241:	ds push 0xffffffe8
  420244:	out    dx,al
  420245:	xor    esi,edi
  420247:	mov    ebx,ss
  420249:	lds    ebx,FWORD PTR [esi]
  42024b:	rcr    DWORD PTR [esi+ebp*8-0x4a],0xb
  420250:	sbb    DWORD PTR [ebp+0x2f],edx
  420253:	test   DWORD PTR [esi+0x60],0x70100a29
  42025a:	enter  0x9500,0x7f
  42025e:	xor    ebx,ebp
  420260:	cmp    edi,DWORD PTR [eax+0x5]
  420263:	int    0xb9
  420265:	arpl   WORD PTR [eax],si
  420267:	aas    
  420268:	adc    BYTE PTR [ebx+eax*2+0x6d],dh
  42026c:	mov    fs,WORD PTR [esi+0xda71d84]
  420272:	into   
  420273:	and    ebx,DWORD PTR [ebx]
  420275:	lods   al,BYTE PTR ds:[esi]
  420276:	lds    ecx,FWORD PTR [ecx]
  420278:	or     DWORD PTR [ebx],edi
  42027a:	sub    al,0xaa
  42027c:	mov    eax,DWORD PTR [esi]
  42027e:	(bad)  
  42027f:	es ins DWORD PTR es:[edi],dx
  420281:	aas    
  420282:	cli    
  420283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420284:	sbb    ebx,DWORD PTR [ecx+0x78a98838]
  42028a:	fnsave [edx-0x15]
  42028d:	inc    eax
  42028e:	pop    esp
  42028f:	lods   eax,DWORD PTR ds:[esi]
  420290:	add    al,0x1a
  420292:	imul   edi,esi,0x4
  420295:	pop    ebp
  420296:	mov    ah,0x3b
  420298:	int3   
  420299:	jae    0x42025d
  42029b:	jmp    0x42025d
  42029d:	push   esi
  42029e:	js     0x4202b0
  4202a0:	push   0x27
  4202a2:	and    eax,0x82fcb4fd
  4202a7:	repz cli 
  4202a9:	push   0xffffff93
  4202ab:	dec    ecx
  4202ac:	repz mov ebp,0xc66af30a
  4202b2:	(bad)  
  4202b3:	adc    ch,BYTE PTR [ebx+0x41]
  4202b6:	sub    esi,DWORD PTR [ebx+0x1a1e7cbd]
  4202bc:	xchg   esp,eax
  4202bd:	sub    bl,BYTE PTR [eax-0x51]
  4202c0:	pushf  
  4202c1:	sbb    BYTE PTR [esi],ah
  4202c3:	jl     0x4202a4
  4202c5:	data16 or BYTE PTR [eax],0x71
  4202c9:	lahf   
  4202ca:	sbb    BYTE PTR ds:0x47202038,dh
  4202d0:	fstp   DWORD PTR [ebp-0x5e27c0b1]
  4202d6:	pop    ds
  4202d7:	xchg   edx,eax
  4202d8:	push   es
  4202d9:	adc    DWORD PTR [ebx],esp
  4202db:	mov    eax,ds:0x596e4d85
  4202e0:	push   ecx
  4202e1:	and    bh,BYTE PTR [eax-0x5b8ec7d7]
  4202e7:	lods   eax,DWORD PTR ds:[esi]
  4202e8:	aaa    
  4202e9:	jmp    0x420315
  4202eb:	inc    ecx
  4202ec:	push   esi
  4202ed:	jmp    0x4202bb
  4202ef:	jl     0x420333
  4202f1:	lea    ebp,[esi-0x1b]
  4202f4:	(bad)
  4202f7:	cmp    al,0xb6
  4202f9:	mov    edx,0x47e716e9
  4202fe:	jmp    0x6b47:0x17b076e8
  420305:	nop
  420306:	clc    
  420307:	xchg   ebp,eax
  420308:	and    BYTE PTR [ebp+0x49a7550a],cl
  42030e:	js     0x4202d1
  420310:	jno    0x4202ac
  420312:	(bad)  
  420313:	jge    0x420335
  420315:	aas    
  420316:	stos   DWORD PTR es:[edi],eax
  420317:	enter  0x1756,0x7f
  42031b:	mov    bl,0x33
  42031d:	add    BYTE PTR [edx-0x8],al
  420320:	outs   dx,DWORD PTR ds:[esi]
  420321:	mov    DWORD PTR [eax],0x240fcf2f
  420327:	mov    DWORD PTR [ecx-0x3a],ebp
  42032a:	pop    esi
  42032b:	clc    
  42032c:	cld    
  42032d:	imul   esp,DWORD PTR [ecx],0xffffff83
  420330:	or     DWORD PTR [edi],0x17738ae0
  420336:	adc    bh,ah
  420338:	jns    0x42034d
  42033a:	and    esp,esp
  42033c:	hlt    
  42033d:	sbb    eax,0xe50c1d15
  420342:	adc    al,0x94
  420344:	cmp    BYTE PTR ds:0x262c95f2,al
  42034a:	pop    es
  42034b:	pop    ecx
  42034c:	pop    es
  42034d:	jo     0x4202f8
  42034f:	jb     0x42035d
  420351:	ret    0xfd42
  420354:	mov    cl,0xc4
  420356:	adc    BYTE PTR [edx],dl
  420358:	cdq    
  420359:	pop    esp
  42035a:	jmp    0x38b2:0x2570a4ed
  420361:	sub    BYTE PTR [edi+eiz*2-0xd7cbb16],dl
  420368:	jne    0x420374
  42036a:	and    dl,BYTE PTR [esi+0x58686375]
  420370:	or     DWORD PTR [eax+0x40],ecx
  420373:	cmp    BYTE PTR [esi+0x8],cl
  420376:	jmp    0x1488:0x2fd4c6c7
  42037d:	lods   al,BYTE PTR ds:[esi]
  42037e:	mov    dh,0xef
  420380:	adc    bh,BYTE PTR [ebx]
  420382:	xchg   ch,dl
  420384:	iret   
  420385:	pop    ss
  420386:	ja     0x4203c3
  420388:	cdq    
  420389:	jb     0x420347
  42038b:	sahf   
  42038c:	inc    edx
  42038d:	xchg   esi,eax
  42038e:	jbe    0x4203fd
  420390:	ds mov ecx,0xbc54bff4
  420396:	dec    esi
  420397:	xchg   edx,eax
  420398:	retf   
  420399:	and    al,0xb3
  42039b:	inc    eax
  42039c:	sub    BYTE PTR [esi-0x4f],cl
  42039f:	add    BYTE PTR [edi],dl
  4203a1:	cli    
  4203a2:	add    BYTE PTR [edx-0x1b],bh
  4203a5:	mov    edi,0x592cb565
  4203aa:	js     0x420352
  4203ac:	popf   
  4203ad:	pop    ss
  4203ae:	and    al,0xbf
  4203b0:	jg     0x4203c8
  4203b2:	ret    
  4203b3:	fadd   st(7),st
  4203b5:	addr16 sbb eax,0xa39adbed
  4203bb:	(bad)  
  4203bc:	adc    al,0x87
  4203be:	sub    BYTE PTR [edi],bl
  4203c0:	mov    ds:0x52b1c0ed,eax
  4203c5:	ja     0x42042c
  4203c7:	xor    eax,0x434caf62
  4203cc:	mov    cl,0xd9
  4203ce:	repz push es
  4203d0:	aaa    
  4203d1:	sar    esp,cl
  4203d3:	inc    esp
  4203d4:	dec    eax
  4203d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203d7:	push   0xf5e0603e
  4203dc:	cs cmp edi,esi
  4203df:	xchg   ecx,eax
  4203e0:	(bad)
  4203e4:	or     al,BYTE PTR [esi]
  4203e6:	repz lea esp,[edi-0x75]
  4203ea:	ss mov edx,0xf232ee38
  4203f0:	pop    edi
  4203f1:	jbe    0x4203d0
  4203f3:	and    al,0x81
  4203f5:	dec    edi
  4203f6:	push   ebp
  4203f7:	xlat   BYTE PTR ds:[ebx]
  4203f8:	inc    edi
  4203f9:	jge    0x42042f
  4203fb:	nop
  4203fc:	dec    esp
  4203fd:	sbb    ah,0x89
  420400:	sti    
  420401:	je     0x42041c
  420403:	xchg   edi,eax
  420404:	ins    DWORD PTR es:[edi],dx
  420405:	xor    DWORD PTR [ebp-0x6cd9ca67],edx
  42040b:	mov    WORD PTR [esi],ss
  42040d:	mov    BYTE PTR [esi-0x30519036],ch
  420413:	test   DWORD PTR [edi+0x5025fd4e],ebp
  420419:	ret    0x3a4d
  42041c:	sub    al,0x0
  42041e:	lea    edx,[esi-0x7f649c8f]
  420424:	pushf  
  420425:	fist   DWORD PTR [esp+esi*4]
  420428:	leave  
  420429:	ret    0xe660
  42042c:	lock mov dl,0x20
  42042f:	je     0x42049c
  420431:	cmp    eax,0xd2f2e746
  420436:	andnps xmm0,XMMWORD PTR [ebx+edi*2-0x2c]
  42043b:	pop    es
  42043c:	xchg   ebp,eax
  42043d:	aam    0x28
  42043f:	mov    eax,0x143c4438
  420444:	push   0x55835042
  420449:	in     al,0xe8
  42044b:	jp     0x4204bf
  42044d:	ins    DWORD PTR es:[edi],dx
  42044e:	jg     0x4203e0
  420450:	inc    ecx
  420451:	(bad)  
  420452:	clc    
  420453:	test   eax,0x98a4104b
  420458:	iret   
  420459:	sub    DWORD PTR ds:0x29cc7a2,esi
  42045f:	ins    BYTE PTR es:[edi],dx
  420460:	sub    cl,ch
  420462:	jge    0x420410
  420464:	mov    ah,bl
  420466:	add    BYTE PTR [edi],0xf3
  420469:	in     al,0x84
  42046b:	and    ch,BYTE PTR [edx+0x3d]
  42046e:	mov    WORD PTR [esi+ebp*4+0x6536110e],?
  420475:	add    dh,BYTE PTR [ebx-0x2e]
  420478:	(bad)  
  420479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42047a:	mov    dh,0xf1
  42047c:	dec    edi
  42047d:	mov    DWORD PTR [ecx],esp
  42047f:	mov    DWORD PTR [eax],ebx
  420481:	xchg   esi,eax
  420482:	ds loop 0x420447
  420485:	pop    ss
  420486:	fs jns 0x4204b2
  420489:	imul   ebp,DWORD PTR [esi+0x33],0x31
  42048d:	xchg   ebp,eax
  42048e:	jg     0x4204ca
  420490:	int3   
  420491:	add    cl,BYTE PTR [edi]
  420493:	xchg   edx,eax
  420494:	mov    dh,al
  420496:	push   edx
  420497:	push   esp
  420498:	mov    ch,0x7e
  42049a:	mov    dh,0xc7
  42049c:	mov    ebp,DWORD PTR [ecx]
  42049e:	arpl   WORD PTR [esi+0x5fa8cdd],cx
  4204a4:	add    BYTE PTR [esi-0x3362c052],ch
  4204aa:	repz mov ah,0x70
  4204ad:	inc    esp
  4204ae:	rcl    DWORD PTR [eax],cl
  4204b0:	xchg   ebx,eax
  4204b1:	and    ch,bl
  4204b3:	cmp    esp,DWORD PTR [esi+0x5c]
  4204b6:	sub    BYTE PTR [esi+0x4ba19b9f],0x5a
  4204bd:	fiadd  WORD PTR ds:0x730d18b1
  4204c3:	sar    BYTE PTR [ebx],cl
  4204c5:	fistp  WORD PTR [edx+edx*1]
  4204c8:	jmp    0x2c7b9530
  4204cd:	adc    ah,BYTE PTR [eax]
  4204cf:	loop   0x42047a
  4204d1:	jno    0x4204fb
  4204d3:	ins    DWORD PTR es:[edi],dx
  4204d4:	inc    edi
  4204d5:	fsub   DWORD PTR [esp+edi*1+0x65c46660]
  4204dc:	adc    eax,0x7a8e8df5
  4204e1:	es ret 
  4204e3:	add    al,0x6c
  4204e5:	ins    BYTE PTR es:[edi],dx
  4204e6:	das    
  4204e7:	add    esp,edi
  4204e9:	jae    0x420501
  4204eb:	mov    ah,0x6d
  4204ed:	pusha  
  4204ee:	je     0x4204b4
  4204f0:	sub    ecx,DWORD PTR [edx+0x302ada7]
  4204f6:	imul   ecx,ebp,0x913512ce
  4204fc:	pop    DWORD PTR [esi+0x49]
  4204ff:	ret    0x4d9
  420502:	and    cl,BYTE PTR [edi-0x4a]
  420505:	pop    esp
  420506:	fist   WORD PTR [ecx-0x35]
  420509:	jno    0x42057f
  42050b:	dec    BYTE PTR [ebp+ebp*2+0x417216e4]
  420512:	jge    0x4204fb
  420514:	mov    bh,0x73
  420516:	push   ebx
  420517:	outs   dx,BYTE PTR ds:[esi]
  420518:	imul   edi,edx,0xffffff9f
  42051b:	mov    eax,ds:0xafe6f0fe
  420520:	or     DWORD PTR [edx],esp
  420522:	pop    esi
  420523:	jno    0x420544
  420525:	and    dl,BYTE PTR [esi+0xe2ab3bb]
  42052b:	dec    esi
  42052c:	nop
  42052d:	sbb    eax,0x3e68beb9
  420532:	mov    BYTE PTR [ecx],0xaf
  420535:	push   ebx
  420536:	jmp    0x420588
  420538:	cmp    eax,0x5b26c785
  42053d:	xchg   ecx,eax
  42053e:	aad    0x28
  420540:	push   ecx
  420541:	add    eax,0x9f2febdb
  420546:	cmp    BYTE PTR [ebx+0x715a5418],ch
  42054c:	cmp    DWORD PTR [ecx-0x6b],edx
  42054f:	cld    
  420550:	aas    
  420551:	or     edi,DWORD PTR [ecx-0x7b]
  420554:	or     eax,0xfb02a82c
  420559:	adc    eax,0xd9e89793
  42055e:	les    esp,FWORD PTR [eax+0x3]
  420561:	pop    es
  420562:	lods   eax,DWORD PTR ds:[esi]
  420563:	aam    0xc8
  420565:	jo     0x420538
  420567:	scas   al,BYTE PTR es:[edi]
  420568:	sbb    edi,ebp
  42056a:	es int3 
  42056c:	adc    DWORD PTR [eax+0x5d96871b],edi
  420572:	push   esi
  420573:	xchg   esp,eax
  420574:	mov    al,ds:0x310602be
  420579:	lahf   
  42057a:	stos   BYTE PTR es:[edi],al
  42057b:	(bad)  
  42057c:	adc    al,0x25
  42057e:	mov    ch,0x76
  420580:	outs   dx,DWORD PTR ds:[esi]
  420581:	cld    
  420582:	in     al,dx
  420583:	dec    esp
  420584:	push   0xc581b5e
  420589:	push   ebx
  42058a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42058b:	iret   
  42058c:	sub    al,0x26
  42058e:	dec    eax
  42058f:	jge    0x42060d
  420591:	mov    ebp,0x9d7bbe34
  420596:	pop    es
  420597:	sbb    al,0xa4
  420599:	rcl    DWORD PTR ds:0xe9cd526,0x5f
  4205a0:	ror    edx,0xf1
  4205a3:	loope  0x42053e
  4205a5:	xlat   BYTE PTR ds:[ebx]
  4205a6:	arpl   ax,di
  4205a8:	test   eax,0xeeef39b2
  4205ad:	fwait
  4205ae:	and    ecx,edi
  4205b0:	xchg   ecx,eax
  4205b1:	fwait
  4205b2:	cld    
  4205b3:	cmp    bl,bl
  4205b5:	xlat   BYTE PTR ds:[ebx]
  4205b6:	cli    
  4205b7:	popf   
  4205b8:	jmp    0x7cd1:0x9963a300
  4205bf:	(bad)  
  4205c0:	pushf  
  4205c1:	fcomp  DWORD PTR [ebp-0x63]
  4205c4:	int    0x22
  4205c6:	pop    ecx
  4205c7:	adc    ecx,esi
  4205c9:	repnz gs xor al,0xb3
  4205cd:	in     al,dx
  4205ce:	lods   eax,DWORD PTR ds:[esi]
  4205cf:	sbb    eax,0x66d06a9
  4205d4:	jb     0x4205c7
  4205d6:	imul   esp,DWORD PTR ds:0xd56659fb,0xe7ef3a24
  4205e0:	xchg   esp,eax
  4205e1:	ret    0x707f
  4205e4:	not    BYTE PTR [eax]
  4205e6:	ret    
  4205e7:	cwde   
  4205e8:	into   
  4205e9:	adc    eax,0x55a7d3dd
  4205ee:	adc    eax,0x732e032d
  4205f3:	fadd   DWORD PTR cs:[eax]
  4205f6:	test   DWORD PTR [ebp+0xc],esp
  4205f9:	gs inc edi
  4205fb:	fnstenv [eax-0x612e1e5]
  420601:	ret    0x2fc0
  420604:	pushf  
  420605:	pusha  
  420606:	jmp    0xb40b:0xe5e55361
  42060d:	fsubr  DWORD PTR [esi]
  42060f:	adc    al,0x57
  420611:	fisttp WORD PTR [eax-0x4d2dc7bd]
  420617:	(bad)  
  420618:	xchg   ecx,eax
  420619:	ss mov ecx,0x24f7f6a6
  42061f:	cmp    DWORD PTR [ecx-0x2c5f73d2],edi
  420625:	arpl   WORD PTR [ebp+0x60],bx
  420628:	mov    bh,BYTE PTR [edx-0x615aca7f]
  42062e:	fbstp  TBYTE PTR [edx-0x29]
  420631:	and    ch,BYTE PTR [edx+esi*4]
  420634:	rcl    ah,cl
  420636:	jo     0x42061f
  420638:	stc    
  420639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42063a:	and    esi,DWORD PTR [ebp+0x42]
  42063d:	shr    BYTE PTR [ebp+0x12],0x47
  420641:	push   0xffffffd6
  420643:	jle    0x42069e
  420645:	fnstsw WORD PTR [esi]
  420647:	enter  0xa141,0x5d
  42064b:	cdq    
  42064c:	jp     0x420673
  42064e:	dec    ebp
  42064f:	push   edx
  420650:	(bad)  
  420651:	cld    
  420652:	repz mov edi,0x761fadc7
  420658:	sbb    cl,BYTE PTR [edi]
  42065a:	mov    al,ds:0xc2867a54
  42065f:	gs data16 je 0x4206bd
  420663:	and    al,0x4
  420665:	jmp    0x15da:0x6af42ed2
  42066c:	loopne 0x4206c2
  42066e:	arpl   cx,dx
  420670:	hlt    
  420671:	dec    esi
  420672:	pusha  
  420673:	mov    ecx,0x5ff96f4a
  420678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420679:	int3   
  42067a:	fld    TBYTE PTR ds:0xde48792
  420680:	jmp    0xb245:0x7115a134
  420687:	adc    al,0x26
  420689:	hlt    
  42068a:	imul   edi,ebp,0x307705f4
  420690:	pushf  
  420691:	xor    eax,0x7c4d2e45
  420696:	outs   dx,DWORD PTR ds:[esi]
  420697:	jno    0x4206c9
  420699:	lods   al,BYTE PTR ds:[esi]
  42069a:	pop    edx
  42069b:	cdq    
  42069c:	out    0x3,eax
  42069e:	mov    al,ds:0xfe79c8a0
  4206a3:	rcr    BYTE PTR ds:0xd779e0aa,cl
  4206a9:	sbb    edi,eax
  4206ab:	adc    dl,bl
  4206ad:	inc    ecx
  4206ae:	adc    BYTE PTR [ebx+eax*2-0x70],ch
  4206b2:	add    ah,0xad
  4206b5:	js     0x42071a
  4206b7:	and    eax,0xf34ef586
  4206bc:	or     BYTE PTR [ebx],al
  4206be:	ror    DWORD PTR [ebx+0x21807f83],0x49
  4206c5:	jl     0x4206fe
  4206c7:	daa    
  4206c8:	mov    edi,0xfb5ab625
  4206cd:	into   
  4206ce:	add    al,0x3b
  4206d0:	xchg   BYTE PTR [edx+0x40],bl
  4206d3:	inc    esp
  4206d4:	cmp    DWORD PTR [ebx-0x3dd39cc9],0x62bb9d7b
  4206de:	or     bh,BYTE PTR [esi+0x7d5e2bc]
  4206e4:	adc    DWORD PTR [ecx],esp
  4206e6:	shl    BYTE PTR [eax-0x7671d06b],cl
  4206ec:	jge    0x4206d2
  4206ee:	mov    edi,DWORD PTR [ebp+0x8]
  4206f1:	xor    edi,ecx
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x428373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x428e9f,0x428e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x428ecb,0x428e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x428e83,0x428eb7
  4207d8:	call   DWORD PTR ds:0x42aa07
  4207de:	mov    DWORD PTR ds:0x428e9f,0x6fab
  4207e8:	mov    al,ds:0x428498
  4207ed:	cmp    al,BYTE PTR ds:0x4284a9
  4207f3:	mov    DWORD PTR ds:0x428e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x428e63,0x595a
  42080f:	call   DWORD PTR ds:0x42a9c3
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x428e37,0x550e
  420824:	mov    al,ds:0x4284b5
  420829:	mov    DWORD PTR ds:0x428e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4284c6
  420839:	mov    DWORD PTR ds:0x428e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x42a9d7
  420856:	adc    DWORD PTR ds:0x428e8b,0x1314
  420860:	push   0x4284cf
  420865:	push   0x4284db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x428ea3,0x428e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x428e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x428ecf
  4208a1:	add    DWORD PTR ds:0x428e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x428373
  4208c4:	mov    ebx,DWORD PTR ds:0x428edf
  4208ca:	mov    esi,DWORD PTR ds:0x42a08b
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x428eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x428eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x428eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x428eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x428189
  42090b:	call   DWORD PTR ds:0x42a9db
  420911:	cmp    DWORD PTR ds:0x428eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x428e37,0x428e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x428e5f,0x428e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x428e53,0x1b
  420947:	cmp    DWORD PTR ds:0x428e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x428e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x42a9df
  420971:	cmp    DWORD PTR ds:0x428e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x428e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x428e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x428e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x428e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x428ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x428cef
  4209b5:	mov    DWORD PTR ds:0x428e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x428e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x428e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x428373
  4209e4:	mov    DWORD PTR ds:0x428e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x428e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x428e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x428e23,0x304d
  420a1c:	mov    ds:0x428cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x428e9b,0x428e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x428ebb
  420a3e:	mov    ds:0x42846b,eax
  420a43:	and    DWORD PTR ds:0x428e43,0x0
  420a4d:	mov    eax,ds:0x428e43
  420a52:	inc    eax
  420a53:	mov    ds:0x428e43,eax
  420a58:	cmp    DWORD PTR ds:0x428e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x42815b
  420a6f:	call   DWORD PTR ds:0x42a9e3
  420a75:	cmp    DWORD PTR ds:0x428e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x428373
  420a87:	adc    DWORD PTR ds:0x428e9f,0x428e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x428ec3,0x428e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x428eab,0x428e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x428e97,0x428e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x428e9f,0x428e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x428e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x428ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x428e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x428e5b,0x428ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x428ebb,0x428e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x428e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x428ea7,0x2827
  420b35:	mov    al,ds:0x4284e8
  420b3a:	mov    DWORD PTR ds:0x428ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4284f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x428e3f,0x3779
  420b5a:	mov    al,ds:0x428505
  420b5f:	mov    DWORD PTR ds:0x428e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x428516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x428e53,0x428ec3
  420b7f:	push   0x42851f
  420b84:	or     DWORD PTR ds:0x428eb7,0x428ebb
  420b8e:	push   0x42852b
  420b93:	sub    DWORD PTR ds:0x428e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x428e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x428538
  420bb6:	mov    DWORD PTR ds:0x428e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x428549
  420bc6:	mov    DWORD PTR ds:0x428ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x428e6f,0x3bcf
  420be0:	mov    al,ds:0x428555
  420be5:	mov    DWORD PTR ds:0x428e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x428566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x428e2f,0x428ec3
  420c05:	push   0x42856f
  420c0a:	add    DWORD PTR ds:0x428ecb,0x428e87
  420c14:	push   0x42857b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x428e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x428e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x428e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x428e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x428e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x428e77,0x428e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x428eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x428373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x428eb7,0x428ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x428e9f
  420ca5:	or     edx,DWORD PTR ds:0x428e7b
  420cab:	mov    DWORD PTR ds:0x428e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x428e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x428e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x428e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x42a9e7
  420ce9:	cmp    DWORD PTR ds:0x428e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x428e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x428e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x428e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x428e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x428ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x428ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x428ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x428ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x428ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x42a9eb
  420d64:	cmp    DWORD PTR ds:0x428ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x428ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x428ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x428e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x428eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x428eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x428eb7,edx
  420db2:	cmp    DWORD PTR ds:0x428eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x428e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x42a9ef
  420dd4:	cmp    DWORD PTR ds:0x428eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x428e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x428e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x428ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x428e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4281f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x428e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x428e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x428e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x42a9f3
  420e6a:	cmp    DWORD PTR ds:0x428e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x428e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x428e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x428e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x428e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x428453,eax
  420e9b:	mov    eax,ds:0x4281f7
  420ea0:	mov    ecx,DWORD PTR ds:0x428e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x428ec3
  420eac:	mov    DWORD PTR ds:0x428e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x428ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x428e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x428ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x428ec3,0x4441
  420ef3:	mov    al,ds:0x428588
  420ef8:	cmp    al,BYTE PTR ds:0x428599
  420efe:	mov    DWORD PTR ds:0x428e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4285a5
  420f13:	cmp    al,BYTE PTR ds:0x4285b6
  420f19:	mov    DWORD PTR ds:0x428eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x428ea7,0xc38
  420f33:	push   0x4285bf
  420f38:	sbb    DWORD PTR ds:0x428e8b,0x428e7f
  420f42:	push   0x4285cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x428e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4285d8
  420f60:	mov    DWORD PTR ds:0x428e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4285e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x428e5b,0x5f7d
  420f80:	mov    al,ds:0x4285f5
  420f85:	mov    DWORD PTR ds:0x428e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x428606
  420f95:	jne    0x420849
  420f9b:	push   0x42860f
  420fa0:	add    DWORD PTR ds:0x428ebf,0x428eab
  420faa:	push   0x42861b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x428e67,0x333a
  420fc3:	mov    al,ds:0x428628
  420fc8:	cmp    al,BYTE PTR ds:0x428639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x428e63,0x2ea7
  420fde:	mov    al,ds:0x428645
  420fe3:	mov    DWORD PTR ds:0x428e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x428656
  420ff3:	mov    DWORD PTR ds:0x428ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x428e4b,0x428e9b
  42100d:	push   0x42865f
  421012:	xor    DWORD PTR ds:0x428ea7,0x428ebf
  42101c:	push   0x42866b
  421021:	adc    DWORD PTR ds:0x428e7b,0x428e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x428eab,0x160c
  42103f:	mov    al,ds:0x428678
  421044:	cmp    al,BYTE PTR ds:0x428689
  42104a:	mov    DWORD PTR ds:0x428e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x428eb3,0x205
  421064:	mov    al,ds:0x428695
  421069:	mov    DWORD PTR ds:0x428ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4286a6
  421079:	mov    DWORD PTR ds:0x428e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4286af
  42108e:	xor    DWORD PTR ds:0x428e73,0x428e53
  421098:	push   0x4286bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x428e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x428e73,0x4aa5
  4210bb:	mov    al,ds:0x4286c8
  4210c0:	mov    DWORD PTR ds:0x428e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4286d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4286e5
  4210db:	mov    DWORD PTR ds:0x428eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4286f6
  4210eb:	mov    DWORD PTR ds:0x428e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4286ff
  421100:	xor    DWORD PTR ds:0x428eab,0x43e0
  42110a:	push   0x42870b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x428eaf,0x428e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x428e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x428718
  421132:	mov    DWORD PTR ds:0x428ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x428729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x428735
  42114d:	cmp    al,BYTE PTR ds:0x428746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x428ea7,0x4891
  421163:	push   0x42874f
  421168:	xor    DWORD PTR ds:0x428ecb,0x428ec3
  421172:	push   0x42875b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x428ecb,0x428e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x428e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x428e63,0x47d8
  42119f:	mov    al,ds:0x428768
  4211a4:	mov    DWORD PTR ds:0x428ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x428779
  4211b4:	mov    DWORD PTR ds:0x428e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x428785
  4211c9:	mov    DWORD PTR ds:0x428e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x428796
  4211d9:	mov    DWORD PTR ds:0x428e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x42879f
  4211ee:	sbb    DWORD PTR ds:0x428e6b,0x25d3
  4211f8:	push   0x4287ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x428ebf,0x428ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x428e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x428e63
  421221:	mov    al,ds:0x4287b8
  421226:	cmp    al,BYTE PTR ds:0x4287c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4287d5
  421237:	mov    DWORD PTR ds:0x428e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4287e6
  421247:	mov    DWORD PTR ds:0x428e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x428e83,0x99a
  421261:	push   0x4287ef
  421266:	adc    DWORD PTR ds:0x428e9f,0x22ee
  421270:	push   0x4287fb
  421275:	adc    DWORD PTR ds:0x428ecb,0x428ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x428e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x428e57,0x70e
  42129d:	mov    al,ds:0x428808
  4212a2:	cmp    al,BYTE PTR ds:0x428819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x428825
  4212b3:	mov    DWORD PTR ds:0x428ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x428836
  4212c3:	mov    DWORD PTR ds:0x428ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x428e23,0x428e6f
  4212dd:	push   0x42883f
  4212e2:	xor    DWORD PTR ds:0x428e2b,0x428e87
  4212ec:	push   0x42884b
  4212f1:	or     DWORD PTR ds:0x428e8f,0x428e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x428ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x428e2f,0x1c83
  421319:	mov    al,ds:0x428858
  42131e:	cmp    al,BYTE PTR ds:0x428869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x428875
  42132f:	mov    DWORD PTR ds:0x428eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x428886
  42133f:	mov    DWORD PTR ds:0x428e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x42888f
  421354:	or     DWORD PTR ds:0x428e6f,0x428e43
  42135e:	push   0x42889b
  421363:	adc    DWORD PTR ds:0x428e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x428e93,0x428eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4288a8
  421386:	cmp    al,BYTE PTR ds:0x4288b9
  42138c:	mov    DWORD PTR ds:0x428e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x428ea3,0x4898
  4213a6:	mov    al,ds:0x4288c5
  4213ab:	cmp    al,BYTE PTR ds:0x4288d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4288df
  4213bc:	push   0x4288eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x428ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4288f8
  4213da:	cmp    al,BYTE PTR ds:0x428909
  4213e0:	mov    DWORD PTR ds:0x428e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x428e5b,0x25d1
  4213fa:	mov    al,ds:0x428915
  4213ff:	cmp    al,BYTE PTR ds:0x428926
  421405:	mov    DWORD PTR ds:0x428e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x42892f
  42141a:	adc    DWORD PTR ds:0x428ec7,0x4db7
  421424:	push   0x42893b
  421429:	sbb    DWORD PTR ds:0x428e6b,0x428ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x428e33,0x428e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x428ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x428948
  421456:	cmp    al,BYTE PTR ds:0x428959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x428965
  421467:	cmp    al,BYTE PTR ds:0x428976
  42146d:	jne    0x420849
  421473:	push   0x42897f
  421478:	push   0x42898b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x428998
  42148c:	cmp    al,BYTE PTR ds:0x4289a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4289b5
  42149d:	cmp    al,BYTE PTR ds:0x4289c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4289cf
  4214ae:	push   0x4289db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4289e8
  4214c2:	cmp    al,BYTE PTR ds:0x4289f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x428a05
  4214d3:	cmp    al,BYTE PTR ds:0x428a16
  4214d9:	jne    0x420849
  4214df:	push   0x428a1f
  4214e4:	push   0x428a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x428a38
  4214f8:	cmp    al,BYTE PTR ds:0x428a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x428a55
  421509:	cmp    al,BYTE PTR ds:0x428a66
  42150f:	jne    0x420849
  421515:	push   0x428a6f
  42151a:	push   0x428a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x428a88
  42152e:	cmp    al,BYTE PTR ds:0x428a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x428aa5
  42153f:	cmp    al,BYTE PTR ds:0x428ab6
  421545:	jne    0x420849
  42154b:	push   0x428abf
  421550:	push   0x428acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x428ad8
  421564:	cmp    al,BYTE PTR ds:0x428ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x428af5
  421575:	cmp    al,BYTE PTR ds:0x428b06
  42157b:	jne    0x420849
  421581:	push   0x428b0f
  421586:	push   0x428b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x428b28
  42159a:	cmp    al,BYTE PTR ds:0x428b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x428b45
  4215ab:	cmp    al,BYTE PTR ds:0x428b56
  4215b1:	jne    0x420849
  4215b7:	push   0x428b5f
  4215bc:	push   0x428b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x428b78
  4215d0:	cmp    al,BYTE PTR ds:0x428b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x428b95
  4215e1:	cmp    al,BYTE PTR ds:0x428ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x428baf
  4215f2:	push   0x428bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x428bc8
  421606:	cmp    al,BYTE PTR ds:0x428bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x428be5
  421617:	cmp    al,BYTE PTR ds:0x428bf6
  42161d:	jne    0x420849
  421623:	push   0x428bff
  421628:	push   0x428c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x428373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x428453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4281f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x428373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x428373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x428373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4283ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4283f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x428373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4283f7
  421818:	mov    edx,DWORD PTR ds:0x4283ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4283f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4283f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4283f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4283f7
  42186b:	mov    ds:0x4283ff,eax
  421870:	mov    eax,ds:0x428373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x428ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x428ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x428ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x428e77
  4218d2:	call   DWORD PTR ds:0x42a9f7
  4218d8:	cmp    DWORD PTR ds:0x428ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x428ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x428ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x428ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x428ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x428e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x428e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x428e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x428e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x428e43,0x428ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x428ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x428e33
  421969:	or     DWORD PTR ds:0x428e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x428e2b,0x428e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x428e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x428e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x428e23,0x428e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x428e37
  4219b8:	add    eax,DWORD PTR ds:0x428ebf
  4219be:	mov    ds:0x428e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x428e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x428e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x428e4b,0x428e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x428e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x428e9f,0x428e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x428e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x428ea7
  421ab6:	sub    DWORD PTR ds:0x428e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx+0x3ebd524a],al
  421ace:	push   es
  421acf:	mov    cl,0xc8
  421ad1:	outs   dx,DWORD PTR ds:[esi]
  421ad2:	mov    dh,0x82
  421ad4:	sbb    DWORD PTR [edx+0x60],0xffffff83
  421ad8:	adc    DWORD PTR [edx+0x4f],0xffffffbc
  421adc:	fsub   DWORD PTR [eax+0xa4c027d]
  421ae2:	lock shl DWORD PTR [ebp+0x38],cl
  421ae6:	mov    ch,0xa0
  421ae8:	jecxz  0x421a92
  421aea:	sbb    DWORD PTR ss:[edi],edx
  421aed:	jo     0x421b04
  421aef:	add    edx,DWORD PTR [edx+eax*2+0x29]
  421af3:	jne    0x421ae1
  421af5:	scas   eax,DWORD PTR es:[edi]
  421af6:	push   esi
  421af7:	loope  0x421b52
  421af9:	addr16 jae 0x421b3b
  421afc:	cld    
  421afd:	ins    BYTE PTR es:[edi],dx
  421afe:	pusha  
  421aff:	push   ds
  421b00:	loope  0x421b59
  421b02:	shl    BYTE PTR [edx+0x34],0xf3
  421b06:	test   BYTE PTR [ebp+0x2f],cl
  421b09:	rcr    DWORD PTR [ebx+ecx*2],0x9
  421b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b0e:	in     al,dx
  421b0f:	dec    ecx
  421b10:	inc    ecx
  421b11:	or     al,0x8b
  421b13:	cmc    
  421b14:	sub    dl,BYTE PTR [edi+0x43]
  421b17:	aaa    
  421b18:	js     0x421b90
  421b1a:	aam    0xeb
  421b1c:	sbb    cl,BYTE PTR [edi+0x1dc60d82]
  421b22:	(bad)
  421b25:	mov    esp,0x717f239b
  421b2a:	jb     0x421b72
  421b2c:	mov    ch,0x61
  421b2e:	jl     0x421b0a
  421b30:	jo     0x421b1c
  421b32:	dec    ebp
  421b33:	inc    esi
  421b34:	sub    esi,DWORD PTR [ebp+0x4f]
  421b37:	dec    esp
  421b38:	pop    esp
  421b39:	arpl   WORD PTR ds:0xcfc70787,bx
  421b3f:	push   edi
  421b40:	shl    DWORD PTR [eax+0x6a60b814],cl
  421b46:	mov    al,0x80
  421b48:	xchg   edi,eax
  421b49:	cs mov bh,0x0
  421b4c:	cli    
  421b4d:	cmp    ebx,eax
  421b4f:	std    
  421b50:	sbb    dl,BYTE PTR [ebx+0x47b19f7f]
  421b56:	sbb    eax,0x9ad269dc
  421b5b:	repnz or eax,0x6a521298
  421b61:	cdq    
  421b62:	clc    
  421b63:	mov    al,0x27
  421b65:	mov    ch,0x5
  421b67:	ds dec eax
  421b69:	aam    0x29
  421b6b:	mov    edx,0x9355ae31
  421b70:	push   0x46319fff
  421b75:	je     0x421bdf
  421b77:	push   es
  421b78:	adc    eax,0x2a6e9985
  421b7d:	xchg   edx,eax
  421b7e:	xchg   ecx,edi
  421b80:	push   esp
  421b81:	rcl    BYTE PTR [edx-0x5d],1
  421b84:	icebp  
  421b85:	push   0x10be5a2d
  421b8a:	add    al,0xe4
  421b8c:	out    0xda,al
  421b8e:	aad    0xa1
  421b90:	scas   eax,DWORD PTR es:[edi]
  421b91:	aam    0x36
  421b93:	neg    BYTE PTR [ebp-0x5b92c4db]
  421b99:	sub    bh,BYTE PTR [edi-0x73464185]
  421b9f:	cmp    DWORD PTR [ebp+0xaecd610],0xb9387249
  421ba9:	pop    ss
  421baa:	sbb    BYTE PTR [ebx],bh
  421bac:	add    esi,DWORD PTR ds:0xd4167acc
  421bb2:	push   eax
  421bb3:	adc    al,0x41
  421bb5:	(bad)  
  421bb6:	popf   
  421bb7:	ror    esp,cl
  421bb9:	(bad)  [esi+0x2dea0cc1]
  421bbf:	(bad)  [ebx+0x203d29b5]
  421bc5:	iret   
  421bc6:	fadd   DWORD PTR [ebx-0xc]
  421bc9:	int3   
  421bca:	add    eax,0x5c98e86c
  421bcf:	inc    edx
  421bd0:	sub    eax,0x56bae44d
  421bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bd6:	outs   dx,BYTE PTR ds:[esi]
  421bd7:	daa    
  421bd8:	shl    DWORD PTR [ecx],cl
  421bda:	repz (bad) 
  421bdc:	sub    DWORD PTR [edi-0x3d],0x1a191745
  421be3:	or     bh,BYTE PTR [ecx+0x77]
  421be6:	add    eax,0xc2112833
  421beb:	push   ebp
  421bec:	jle    0x421bb1
  421bee:	pop    ebx
  421bef:	arpl   bp,sp
  421bf1:	pop    edx
  421bf2:	mov    esi,0xde8a6e04
  421bf7:	ret    
  421bf8:	or     al,0xad
  421bfa:	mov    al,0xc5
  421bfc:	dec    edx
  421bfd:	mov    eax,DWORD PTR [ebx-0x28]
  421c00:	mov    cl,0xdb
  421c02:	adc    BYTE PTR [ebx+ebp*8-0x60453681],0x9b
  421c0a:	mov    al,ds:0xcc82f1da
  421c0f:	dec    ebp
  421c10:	sbb    al,0x30
  421c12:	mov    esp,0x996320f
  421c17:	jp     0x421ba3
  421c19:	pop    esi
  421c1a:	inc    esp
  421c1b:	xchg   cl,dh
  421c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c1e:	xor    BYTE PTR [edi],al
  421c20:	mov    bh,bl
  421c22:	mov    DWORD PTR [ebp-0x29],esi
  421c25:	jo     0x421bd0
  421c27:	(bad)  
  421c28:	call   0x64439b51
  421c2d:	pusha  
  421c2e:	pop    es
  421c2f:	int3   
  421c30:	stos   DWORD PTR es:[edi],eax
  421c31:	xchg   edi,eax
  421c32:	ret    
  421c33:	iret   
  421c34:	xor    eax,0xc87ac862
  421c39:	xor    ch,ch
  421c3b:	or     dh,BYTE PTR [ecx+0x702f42fb]
  421c41:	xchg   ebx,eax
  421c42:	cmp    bl,ah
  421c44:	fcmovu st,st(6)
  421c46:	push   cs
  421c47:	ret    0xd8f5
  421c4a:	mov    al,dl
  421c4c:	fmul   DWORD PTR [eax+ebp*4+0x46a63058]
  421c53:	stos   BYTE PTR es:[edi],al
  421c54:	mov    esp,0x2f03f910
  421c59:	push   0x6de05839
  421c5e:	(bad)  
  421c5f:	fidiv  WORD PTR [esi-0x47e04783]
  421c65:	pop    esi
  421c66:	xor    bh,BYTE PTR [eax]
  421c68:	fmul   DWORD PTR [edi+0x254a5956]
  421c6e:	sub    BYTE PTR [esi+0x59],ah
  421c71:	fisttp DWORD PTR ds:0x39932f9f
  421c77:	xor    cl,BYTE PTR [edi+0x36]
  421c7a:	fcom   QWORD PTR [edi]
  421c7c:	sub    bh,ah
  421c7e:	xor    BYTE PTR [esi+0x7e78c6d4],ah
  421c84:	call   0x24313ba
  421c89:	xchg   esp,eax
  421c8a:	push   ss
  421c8b:	pusha  
  421c8c:	sbb    al,0x54
  421c8e:	addr16 clc 
  421c90:	push   eax
  421c91:	mov    dh,0xa8
  421c93:	sub    ah,bl
  421c95:	inc    esi
  421c96:	add    dh,BYTE PTR [esp+ebp*2]
  421c99:	push   edi
  421c9a:	dec    eax
  421c9b:	(bad)  
  421c9c:	adc    dh,al
  421c9e:	cld    
  421c9f:	and    ah,BYTE PTR [ebp-0x5d]
  421ca2:	add    eax,esp
  421ca4:	das    
  421ca5:	out    dx,al
  421ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ca7:	popa   
  421ca8:	jle    0x421c53
  421caa:	nop
  421cab:	imul   edi,DWORD PTR [ebp-0x65],0x2219533a
  421cb2:	imul   edx,DWORD PTR [ecx+0x12667036],0xffffffed
  421cb9:	(bad)  
  421cba:	fmul   QWORD PTR [edx-0x6e90a95d]
  421cc0:	cmp    DWORD PTR [edx],ebx
  421cc2:	mov    cl,0x87
  421cc4:	sar    DWORD PTR [ebp*4-0x219df19a],1
  421ccb:	xchg   ebp,eax
  421ccc:	popa   
  421ccd:	sub    ah,BYTE PTR [edi-0x2a]
  421cd0:	test   DWORD PTR [ebx],edi
  421cd2:	lods   al,BYTE PTR ds:[esi]
  421cd3:	mov    bh,0x43
  421cd5:	pop    edi
  421cd6:	es xor eax,0x92e1b132
  421cdc:	and    DWORD PTR [edx+0x38],0xffffffb9
  421ce0:	shl    DWORD PTR [eax-0x658d295c],1
  421ce6:	ins    DWORD PTR es:[edi],dx
  421ce7:	popf   
  421ce8:	xor    ebp,DWORD PTR [eax-0x3c673f73]
  421cee:	inc    edx
  421cef:	or     bl,BYTE PTR [ebp+eax*2+0x57]
  421cf3:	adc    BYTE PTR [esi+0x7f83498],0x5a
  421cfa:	mov    cl,0xdb
  421cfc:	sub    eax,0x968f80b9
  421d01:	mov    al,0x40
  421d03:	xor    DWORD PTR [eax+ecx*4-0x3d],ebp
  421d07:	jae    0x421cbb
  421d09:	(bad)  
  421d0a:	xor    esi,DWORD PTR [ebx+0x5e]
  421d0d:	in     al,0x66
  421d0f:	loop   0x421d7a
  421d11:	retf   0x9ead
  421d14:	dec    ebp
  421d15:	push   es
  421d16:	bound  ebp,QWORD PTR [esi+ebp*2+0x39dd2df5]
  421d1d:	cmp    eax,0x7d3cb627
  421d22:	std    
  421d23:	jge    0x421d56
  421d25:	into   
  421d26:	sti    
  421d27:	shl    BYTE PTR [eax+edx*4+0x5e],0xe8
  421d2c:	and    eax,0x451f7a24
  421d31:	dec    BYTE PTR [eax+0x15d5a9c5]
  421d37:	jecxz  0x421d60
  421d39:	push   esi
  421d3a:	retf   
  421d3b:	fst    QWORD PTR [edi+0x22]
  421d3e:	inc    esi
  421d3f:	in     al,0x97
  421d41:	rcl    BYTE PTR [ecx-0x2d],1
  421d44:	mov    eax,0x27147ce5
  421d49:	jl     0x421d46
  421d4b:	xchg   BYTE PTR [ebp+edx*4+0x20],bh
  421d4f:	inc    esp
  421d50:	pop    es
  421d51:	inc    ebx
  421d52:	pop    esi
  421d53:	inc    esi
  421d54:	push   cs
  421d55:	xlat   BYTE PTR ds:[ebx]
  421d56:	imul   edx,DWORD PTR [edx+ecx*1-0x5efe8842],0x5476be63
  421d61:	push   ebx
  421d62:	(bad)  
  421d63:	sar    DWORD PTR [ecx+0x3b],1
  421d66:	mov    dl,0x10
  421d68:	inc    eax
  421d69:	push   0xed683dba
  421d6e:	out    0x64,eax
  421d70:	jae    0x421d22
  421d72:	push   0x96a25d12
  421d77:	push   ebp
  421d78:	cs js  0x421d7f
  421d7b:	xchg   edx,eax
  421d7c:	lea    esp,[ebx+0x57]
  421d7f:	test   DWORD PTR [eax+esi*2],eax
  421d82:	jno    0x421d51
  421d84:	stos   DWORD PTR es:[edi],eax
  421d85:	mov    ecx,0xf7948241
  421d8a:	push   0xffffffb8
  421d8c:	in     al,0xa3
  421d8e:	rcr    DWORD PTR [edx-0x6f],0xdf
  421d92:	push   eax
  421d93:	fadd   QWORD PTR [edx]
  421d95:	mov    dl,ch
  421d97:	gs (bad) 
  421d99:	scas   eax,DWORD PTR es:[edi]
  421d9a:	in     al,0x7a
  421d9c:	sahf   
  421d9d:	jno    0x421de2
  421d9f:	or     ebx,DWORD PTR [esi-0x7]
  421da2:	std    
  421da3:	adc    BYTE PTR [esi-0x7fa66bbb],ah
  421da9:	outs   dx,DWORD PTR ds:[esi]
  421daa:	and    al,0x8
  421dac:	fld    QWORD PTR [edi+0x2d]
  421daf:	xchg   esp,eax
  421db0:	sbb    dh,dh
  421db2:	call   0x3b7dbd39
  421db7:	inc    edx
  421db8:	lods   al,BYTE PTR ds:[si]
  421dba:	inc    esp
  421dbb:	xchg   DWORD PTR [esi-0x32],esi
  421dbe:	lods   eax,DWORD PTR ds:[esi]
  421dbf:	stos   DWORD PTR es:[edi],eax
  421dc0:	repz popa 
  421dc2:	scas   al,BYTE PTR es:[edi]
  421dc3:	push   0x13
  421dc5:	pop    ds
  421dc6:	clc    
  421dc7:	and    eax,0x537d8f20
  421dcc:	jmp    0x9c9bc488
  421dd1:	das    
  421dd2:	push   cs
  421dd3:	inc    esp
  421dd4:	cmp    al,0x9d
  421dd6:	xor    ch,dh
  421dd8:	adc    ch,bh
  421dda:	test   al,0x13
  421ddc:	xchg   ebx,eax
  421ddd:	(bad)  
  421dde:	adc    al,0x7c
  421de0:	out    0x5f,al
  421de2:	ds fcomip st,st(6)
  421de5:	mov    ah,0x13
  421de7:	sbb    BYTE PTR [esp+eax*4-0x2d37f6f7],0x17
  421def:	ins    DWORD PTR es:[edi],dx
  421df0:	ror    esi,cl
  421df2:	aaa    
  421df3:	sub    al,0x79
  421df5:	icebp  
  421df6:	mov    dl,0xf4
  421df8:	add    eax,0xb4981a81
  421dfd:	inc    BYTE PTR ds:0xa919694d
  421e03:	jg     0x421dd7
  421e05:	mov    edi,0xfd66eb52
  421e0a:	fcomp  DWORD PTR [esi+eiz*1-0x71]
  421e0e:	test   al,0x4c
  421e10:	out    dx,al
  421e11:	clc    
  421e12:	mov    cl,0xe9
  421e14:	push   es
  421e15:	jbe    0x421da2
  421e17:	hlt    
  421e18:	pop    ebx
  421e19:	jl     0x421dc3
  421e1b:	xor    DWORD PTR [ebx-0x70aa1a87],eax
  421e21:	into   
  421e22:	sbb    al,0x3f
  421e24:	mov    cl,0x36
  421e26:	dec    esi
  421e27:	lock ja 0x421ea2
  421e2a:	and    esp,edi
  421e2c:	push   ebp
  421e2d:	adc    DWORD PTR [eax-0x73],ebx
  421e30:	jne    0x421e3e
  421e32:	in     al,0xce
  421e34:	dec    esp
  421e35:	and    DWORD PTR [esi],esp
  421e37:	ja     0x421dbd
  421e39:	or     eax,0xbe3dc820
  421e3e:	(bad)  [ebp+0x20b87afb]
  421e44:	push   edi
  421e45:	jno    0x421e98
  421e47:	xor    eax,0x44162756
  421e4c:	jge    0x421e68
  421e4e:	inc    ebx
  421e4f:	or     eax,0x8d7e875a
  421e54:	and    eax,esp
  421e56:	pop    esi
  421e57:	lods   eax,DWORD PTR ds:[esi]
  421e58:	push   esi
  421e59:	shr    ch,0x4a
  421e5c:	aas    
  421e5d:	mov    ebp,?
  421e5f:	mov    esi,0xc123bb0b
  421e64:	push   ecx
  421e65:	mov    cl,0x1e
  421e67:	mov    DWORD PTR [ebp+ebx*2-0x4a],edi
  421e6b:	lds    ebp,FWORD PTR [esi+0x4048ed86]
  421e71:	stos   DWORD PTR es:[edi],eax
  421e72:	sub    DWORD PTR [ebx-0x7],ebp
  421e75:	adc    eax,0x59cd483
  421e7a:	adc    esi,DWORD PTR [edx+0x227bbc89]
  421e80:	inc    esp
  421e81:	jecxz  0x421ed7
  421e83:	sub    BYTE PTR [ebp-0x4ed8a933],0x72
  421e8a:	in     al,dx
  421e8b:	retf   
  421e8c:	sub    bl,BYTE PTR [edx+0x78]
  421e8f:	push   0x42
  421e91:	adc    edx,DWORD PTR [edx]
  421e93:	(bad)  
  421e94:	xor    al,0x55
  421e96:	dec    eax
  421e97:	cmp    dh,ch
  421e99:	xchg   edi,eax
  421e9a:	dec    esp
  421e9b:	imul   esi,DWORD PTR [edi+esi*4],0x252ba0b1
  421ea2:	mov    ds,WORD PTR [ebx]
  421ea4:	stos   DWORD PTR es:[edi],eax
  421ea5:	ja     0x421ece
  421ea7:	add    ch,ah
  421ea9:	ja     0x421e86
  421eab:	sbb    bh,dh
  421ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421eae:	push   edx
  421eaf:	or     bh,ah
  421eb1:	icebp  
  421eb2:	icebp  
  421eb3:	les    edx,FWORD PTR [edx+ecx*1-0x18]
  421eb7:	ins    DWORD PTR es:[edi],dx
  421eb8:	adc    DWORD PTR [ebp-0x76024b95],eax
  421ebe:	push   es
  421ebf:	sbb    edx,DWORD PTR [edi-0x69]
  421ec2:	mov    al,ds:0x9513e10e
  421ec7:	sub    edx,DWORD PTR [eax+ecx*4-0x32]
  421ecb:	xor    eax,0x826dfa5a
  421ed0:	into   
  421ed1:	add    DWORD PTR [ebp+0x38],0xffffff86
  421ed5:	psrlw  mm3,QWORD PTR [eax+0x58]
  421ed9:	js     0x421f4c
  421edb:	inc    esi
  421edc:	rcl    BYTE PTR [eax],1
  421ede:	loop   0x421e69
  421ee0:	int    0xe1
  421ee2:	push   es
  421ee3:	mov    ch,0xd4
  421ee5:	or     BYTE PTR [eax+0x15],bh
  421ee8:	dec    esp
  421ee9:	and    eax,DWORD PTR [edi+0x59610d0]
  421eef:	xor    cl,BYTE PTR [edx]
  421ef1:	fstp   QWORD PTR [ecx]
  421ef3:	dec    esp
  421ef4:	pop    esi
  421ef5:	sti    
  421ef6:	scas   al,BYTE PTR es:[edi]
  421ef7:	(bad)  
  421ef8:	ss pusha 
  421efa:	mov    dl,0x5c
  421efc:	sbb    DWORD PTR [esi+edx*4-0x59],0xffffff96
  421f01:	jp     0x421f27
  421f03:	sti    
  421f04:	adc    BYTE PTR gs:[esi+0x64a3adbb],bh
  421f0b:	push   eax
  421f0c:	(bad)  
  421f0d:	pop    esi
  421f0e:	aas    
  421f0f:	in     al,dx
  421f10:	pop    ebp
  421f11:	adc    al,0x92
  421f13:	icebp  
  421f14:	push   es
  421f15:	mov    ds,WORD PTR [esi]
  421f17:	lods   eax,DWORD PTR ds:[esi]
  421f18:	mov    esp,0x408cb524
  421f1d:	mov    ds:0xc7f71457,al
  421f22:	push   esp
  421f23:	repnz mov ss,ebx
  421f26:	mov    edx,0xfd029ef9
  421f2b:	mov    ebx,0xe117653
  421f30:	outs   dx,BYTE PTR ds:[esi]
  421f31:	add    ebp,DWORD PTR [ebp-0x1ee511f3]
  421f37:	jge    0x421f73
  421f39:	(bad)  
  421f3a:	jnp    0x421f1d
  421f3c:	add    esp,DWORD PTR [ebp+0x5e]
  421f3f:	mov    ebp,0x3c3ef815
  421f44:	fnsave [esi+eax*1-0x78b309bf]
  421f4b:	xchg   edx,eax
  421f4c:	xchg   ebp,eax
  421f4d:	fimul  DWORD PTR [ebp-0x700c12ff]
  421f53:	inc    esi
  421f54:	shl    BYTE PTR [ebx],1
  421f56:	inc    edx
  421f57:	sub    BYTE PTR [esi+0x5b],dh
  421f5a:	jno    0x421eec
  421f5c:	int3   
  421f5d:	dec    edx
  421f5e:	mov    bl,dl
  421f60:	xchg   esp,eax
  421f61:	or     dh,BYTE PTR [ecx]
  421f63:	dec    ebp
  421f64:	sar    DWORD PTR [ecx+0x33],1
  421f67:	iret   
  421f68:	mov    ecx,0xeb954914
  421f6d:	test   DWORD PTR [edx-0x6a],eax
  421f70:	jmp    0x421f2c
  421f72:	jecxz  0x421fb0
  421f74:	and    eax,0x40ecd635
  421f79:	pop    es
  421f7a:	stos   DWORD PTR es:[edi],eax
  421f7b:	add    ebx,DWORD PTR [ebp+esi*8+0xb]
  421f7f:	add    ecx,edx
  421f81:	bound  ecx,QWORD PTR [ebx-0x1a]
  421f84:	mov    edi,0x687def6
  421f89:	jae    0x421f84
  421f8b:	ret    0x7f8a
  421f8e:	lea    esi,[edi+0x73]
  421f91:	mov    bl,BYTE PTR [eax]
  421f93:	push   esp
  421f94:	lods   eax,DWORD PTR ds:[esi]
  421f95:	test   al,0x22
  421f97:	punpcklwd mm4,DWORD PTR [edi+0x31356dbc]
  421f9e:	sub    eax,0xdbaf3eb7
  421fa3:	mov    eax,ds:0xf2b0e8f6
  421fa8:	jp     0x421f4f
  421faa:	add    al,0xc8
  421fac:	shl    edx,cl
  421fae:	or     eax,0xbf7381b2
  421fb3:	push   DWORD PTR [edx+0x60]
  421fb6:	jns    0x421ff7
  421fb8:	jp     0x421fa4
  421fba:	test   al,0x95
  421fbc:	push   ss
  421fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fbe:	jne    0x421ff8
  421fc0:	fisttp WORD PTR [ebx-0x26dcf6da]
  421fc6:	into   
  421fc7:	dec    esi
  421fc8:	pop    edx
  421fc9:	dec    edi
  421fca:	mov    eax,DWORD PTR ds:0xd2eb0bcf
  421fd0:	stos   BYTE PTR es:[edi],al
  421fd1:	or     eax,0x45a9a71e
  421fd6:	cwde   
  421fd7:	retf   
  421fd8:	scas   al,BYTE PTR es:[edi]
  421fd9:	idiv   BYTE PTR [ebx+0x73]
  421fdc:	and    edi,ecx
  421fde:	dec    eax
  421fdf:	push   esi
  421fe0:	imul   ecx,esi,0xffffff84
  421fe3:	jp     0x421fb7
  421fe5:	popf   
  421fe6:	lahf   
  421fe7:	lahf   
  421fe8:	ds cdq 
  421fea:	fst    QWORD PTR gs:[ebx+0x66673bc3]
  421ff1:	test   eax,0x883155f4
  421ff6:	sar    DWORD PTR [edi-0x25f64af],1
  421ffc:	or     BYTE PTR [edi+0x14],al
  421fff:	out    dx,al
  422000:	rcl    dl,cl
  422002:	jbe    0x421fd8
  422004:	push   DWORD PTR [esi-0x2108f9a2]
  42200a:	rcr    BYTE PTR [edi-0x256a8de0],1
  422010:	jp     0x421ff9
  422012:	xchg   edx,eax
  422013:	lahf   
  422014:	inc    ebp
  422015:	stos   DWORD PTR es:[edi],eax
  422016:	dec    eax
  422017:	pop    ebx
  422018:	std    
  422019:	into   
  42201a:	dec    ecx
  42201b:	ins    BYTE PTR es:[edi],dx
  42201c:	mov    ds:0xe97f59ef,al
  422021:	push   edx
  422022:	retf   
  422023:	outs   dx,DWORD PTR ds:[esi]
  422024:	das    
  422025:	bound  esi,QWORD PTR [esi]
  422027:	ins    BYTE PTR es:[edi],dx
  422028:	ror    BYTE PTR [ebx],1
  42202a:	adc    BYTE PTR [ebx-0x671ea7fa],ah
  422030:	xchg   ecx,eax
  422031:	xor    BYTE PTR [ebx+0x3],al
  422034:	sbb    BYTE PTR [bp+di+0xc],0x8e
  422039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42203a:	ret    
  42203b:	idiv   edi
  42203d:	adc    al,0x9a
  42203f:	and    ebp,DWORD PTR [ebp-0x3a]
  422042:	jb     0x421fe9
  422044:	push   ss
  422045:	sbb    al,0xef
  422047:	cmp    al,0xa4
  422049:	ret    0xedad
  42204c:	add    ecx,ecx
  42204e:	sbb    al,0x7c
  422050:	cmp    eax,0xb73fd441
  422055:	mov    eax,0x90ecc2ae
  42205a:	or     BYTE PTR [ecx+0x3a5cdbf9],ch
  422060:	mov    esi,0x28bf2343
  422065:	popf   
  422066:	inc    eax
  422067:	imul   ecx,DWORD PTR [eax+0x41],0x5a
  42206b:	cmp    al,0x68
  42206d:	add    DWORD PTR [ecx-0x62e7e373],0x5a
  422074:	test   DWORD PTR ds:0xde70b68f,ecx
  42207a:	test   BYTE PTR cs:[eax+0x39c44244],cl
  422081:	xor    eax,0x8aa568a0
  422086:	in     eax,dx
  422087:	cmp    ebp,ebx
  422089:	test   eax,0x85f1023d
  42208e:	inc    ecx
  42208f:	adc    eax,0xdc7853ef
  422094:	mov    ds:0xe8f25266,eax
  422099:	call   0x878a:0x3e4a1ba3
  4220a0:	inc    edx
  4220a1:	adc    ebp,ebp
  4220a3:	shl    BYTE PTR [ecx+0x2efc6f0f],0xdd
  4220aa:	push   edx
  4220ab:	jge    0x42205f
  4220ad:	sub    eax,0x1d5199fc
  4220b2:	xchg   DWORD PTR [edx+0x47183bf8],esi
  4220b8:	mov    bh,0x2a
  4220ba:	test   al,0xd6
  4220bc:	sub    ebp,DWORD PTR [edi+0x71]
  4220bf:	(bad)  
  4220c0:	mov    ecx,0x42284cc5
  4220c5:	hlt    
  4220c6:	adc    eax,0x6bf18f94
  4220cb:	lock hlt 
  4220cd:	retf   0x507d
  4220d0:	test   eax,0xfc929126
  4220d5:	add    BYTE PTR [edi-0x36c64c41],0x26
  4220dc:	jae    0x4220ae
  4220de:	stc    
  4220df:	pop    esp
  4220e0:	les    ebx,FWORD PTR [eax]
  4220e2:	sub    eax,0x354c5dda
  4220e7:	mov    ebx,0x6a7761e5
  4220ec:	sub    ch,0x9b
  4220ef:	sahf   
  4220f0:	sub    BYTE PTR [edx],0xa7
  4220f3:	jb     0x4220d2
  4220f5:	pop    ebp
  4220f6:	or     dh,cl
  4220f8:	mov    ebx,edi
  4220fa:	xchg   DWORD PTR [ecx+ebp*8+0x5],edi
  4220fe:	mov    cl,0x9b
  422100:	xchg   esp,eax
  422101:	popa   
  422102:	mov    ecx,0x877e576b
  422107:	in     al,0xbc
  422109:	and    al,0x4a
  42210b:	mov    ebx,0xd7301568
  422110:	push   esp
  422111:	mov    cl,0xf2
  422113:	and    BYTE PTR [edi+0x69],bh
  422116:	push   edx
  422117:	push   0x7d
  422119:	mov    ds:0xd5ba4c48,al
  42211e:	ins    BYTE PTR es:[edi],dx
  42211f:	sbb    DWORD PTR [eax],eax
  422121:	ret    
  422122:	mov    ebp,0x95c6222a
  422127:	scas   eax,DWORD PTR es:[edi]
  422128:	sub    BYTE PTR [edx-0x245919a2],ah
  42212e:	fcmove st,st(1)
  422130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422131:	sbb    DWORD PTR [ebx-0x54],ecx
  422134:	fisttp QWORD PTR [edx+0x41]
  422137:	repz jbe 0x42212f
  42213a:	int    0x57
  42213c:	sbb    cl,BYTE PTR [ebx]
  42213e:	repnz bnd ret 
  422141:	mov    eax,ds:0xdc3d99fb
  422146:	sbb    al,0x74
  422148:	inc    ebp
  422149:	fsub   QWORD PTR [edx-0x477481ac]
  42214f:	xbegin 0xec1b3296
  422155:	xchg   BYTE PTR [ebx+0x3f4e00cf],bl
  42215b:	sahf   
  42215c:	fs jnp 0x42210d
  42215f:	and    edx,esp
  422161:	dec    edi
  422162:	mov    ds:0x6da5d5b,eax
  422167:	push   esp
  422168:	sub    DWORD PTR [bx+si+0x6632],0x5
  42216e:	mov    cl,0xfa
  422170:	mov    DWORD PTR ds:0x35851177,0x766e629c
  42217a:	icebp  
  42217b:	cmp    cl,bh
  42217d:	ror    DWORD PTR [ecx-0x2e318ff9],0x90
  422184:	mov    cl,0xf2
  422186:	out    dx,eax
  422187:	pop    edi
  422188:	xchg   ecx,eax
  422189:	aas    
  42218a:	and    al,0x6d
  42218c:	out    0x25,eax
  42218e:	nop
  42218f:	mov    al,0x53
  422191:	shl    BYTE PTR [eax+0x30172eb6],1
  422197:	repz jnp 0x4221b3
  42219a:	ret    
  42219b:	fwait
  42219c:	xchg   edi,eax
  42219d:	pop    ss
  42219e:	es and dh,cl
  4221a1:	ss jecxz 0x4221af
  4221a4:	jmp    0x42213c
  4221a6:	cmc    
  4221a7:	les    edi,FWORD PTR [eax-0x2fd78ef4]
  4221ad:	xchg   esp,eax
  4221ae:	mov    esi,0x793281b6
  4221b3:	jno    0x422157
  4221b5:	inc    ebp
  4221b6:	jl     0x4221d1
  4221b8:	enter  0xbb0b,0x96
  4221bc:	into   
  4221bd:	daa    
  4221be:	xor    al,0x5c
  4221c0:	jge    0x422212
  4221c2:	add    ch,BYTE PTR [edi]
  4221c4:	fwait
  4221c5:	pop    ss
  4221c6:	push   es
  4221c7:	and    edi,edi
  4221c9:	bound  edx,QWORD PTR ds:0xabed9043
  4221cf:	mov    bh,BYTE PTR [ebx+edx*8+0x31474d04]
  4221d6:	cdq    
  4221d7:	xor    al,0x4a
  4221d9:	adc    BYTE PTR [ecx],0x52
  4221dc:	sbb    esp,0x6a
  4221df:	les    ecx,FWORD PTR [eax+0x30]
  4221e2:	sub    DWORD PTR [esi],edx
  4221e4:	cmp    dl,BYTE PTR [eax+edx*2-0xc]
  4221e8:	ins    DWORD PTR es:[edi],dx
  4221e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221ea:	mov    bh,0x67
  4221ec:	test   BYTE PTR [esi+0x73],0x1d
  4221f0:	scas   eax,DWORD PTR es:[edi]
  4221f1:	sbb    eax,0x462cdf72
  4221f6:	ins    BYTE PTR es:[edi],dx
  4221f7:	(bad)
  4221fa:	jbe    0x422182
  4221fc:	xlat   BYTE PTR ds:[ebx]
  4221fd:	adc    ah,ah
  4221ff:	cld    
  422200:	and    bl,0x8a
  422203:	inc    eax
  422204:	push   edi
  422205:	mov    ah,BYTE PTR [eax+0x44]
  422208:	jb     0x422262
  42220a:	cdq    
  42220b:	imul   ebp
  42220d:	sar    BYTE PTR [esi+edi*1+0x7266134b],0xf0
  422215:	das    
  422216:	xchg   ebx,eax
  422217:	mov    ch,0x2a
  422219:	lds    esp,FWORD PTR ds:0xdb027e2
  42221f:	shl    DWORD PTR [edi],0x68
  422222:	ja     0x42222e
  422224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422225:	retf   
  422226:	push   esi
  422227:	pop    ss
  422228:	mov    DWORD PTR cs:[ebx],esi
  42222b:	mov    ch,0xa
  42222d:	outs   dx,BYTE PTR ds:[esi]
  42222e:	mov    al,0xc6
  422230:	sub    dh,BYTE PTR [ecx]
  422232:	mov    edi,0xbf56edfd
  422237:	in     al,dx
  422238:	test   BYTE PTR [ecx+0x35faefbe],0x90
  42223f:	lahf   
  422240:	in     eax,0x2c
  422242:	mov    eax,ds:0x8cb94853
  422247:	cmp    ecx,DWORD PTR [ebx+ebx*2]
  42224a:	ficomp DWORD PTR [edx-0x44]
  42224d:	sahf   
  42224e:	mov    ds:0xb82634c8,al
  422253:	adc    eax,0xdfc47139
  422258:	in     eax,dx
  422259:	mov    esi,0xef06f2a0
  42225e:	adc    eax,0x693efe34
  422263:	popa   
  422264:	push   ebp
  422265:	pop    eax
  422266:	call   0x83c356f
  42226b:	jbe    0x422225
  42226d:	(bad)  
  42226e:	loopne 0x4222af
  422270:	retfw  
  422272:	xor    DWORD PTR [edi],ecx
  422274:	pop    eax
  422275:	dec    eax
  422276:	push   ebp
  422277:	adc    BYTE PTR [ebx-0x50bbe44],cl
  42227d:	stc    
  42227e:	mov    bl,0xa4
  422280:	or     ebp,DWORD PTR [eax+0x557a188d]
  422286:	xchg   edx,eax
  422287:	fimul  WORD PTR [esi]
  422289:	mov    WORD PTR [ebp-0xb],?
  42228c:	leave  
  42228d:	test   DWORD PTR [eax-0x137d5e5f],ebp
  422293:	jg     0x422258
  422295:	pop    eax
  422296:	out    0xc5,eax
  422298:	test   eax,0xc0ea3bfd
  42229d:	and    al,BYTE PTR [ecx+0xe]
  4222a0:	xor    DWORD PTR [esi-0x496d64cc],0x23fdf8c5
  4222aa:	cli    
  4222ab:	lea    eax,[edx-0x4]
  4222ae:	shl    DWORD PTR [esi],0xdc
  4222b1:	cdq    
  4222b2:	mov    edx,0x8999c08f
  4222b7:	xor    al,0x1e
  4222b9:	mov    ds:0x1a9d9a93,al
  4222be:	enter  0x9ed3,0xd6
  4222c2:	neg    BYTE PTR [edx]
  4222c4:	pop    ds
  4222c5:	adc    eax,0x4bb8219d
  4222ca:	cmp    bl,BYTE PTR [edi-0x7d]
  4222cd:	push   edx
  4222ce:	pop    ebx
  4222cf:	loop   0x42226c
  4222d1:	add    bh,BYTE PTR [edi+0xe]
  4222d4:	lods   eax,DWORD PTR ds:[esi]
  4222d5:	or     BYTE PTR ds:0xa67ddd97,bh
  4222db:	inc    ebp
  4222dc:	callw  0x5532
  4222e0:	pusha  
  4222e1:	jl     0x4222fe
  4222e3:	es retf 
  4222e5:	inc    ecx
  4222e6:	ret    0x4c42
  4222e9:	mov    eax,0xd36bc037
  4222ee:	ds popa 
  4222f0:	popa   
  4222f1:	and    al,0xb6
  4222f3:	or     DWORD PTR [esi-0x7479d29a],ecx
  4222f9:	rcr    BYTE PTR [ebp-0x37430d52],0x69
  422300:	jo     0x42231c
  422302:	rol    BYTE PTR [ecx+eax*8-0x65],cl
  422306:	test   al,0x40
  422308:	mov    eax,ds:0xc473a76c
  42230d:	or     BYTE PTR [ebx+0x55],ah
  422310:	push   0x9f637b2f
  422315:	mov    ch,0x7f
  422317:	sub    DWORD PTR [esi],0xb2bbb23e
  42231d:	lock sti 
  42231f:	mov    al,dh
  422321:	pop    esi
  422322:	or     BYTE PTR ds:0x8b1fd40a,cl
  422328:	cmp    eax,0xd20c69b9
  42232d:	cmc    
  42232e:	(bad)  
  422330:	sbb    al,0x64
  422332:	shr    BYTE PTR [eax+ecx*4+0x2b41e754],1
  422339:	pop    ds
  42233a:	jo     0x4222bc
  42233c:	inc    ebp
  42233d:	jp     0x42234a
  42233f:	xchg   DWORD PTR [eax],ebp
  422341:	mov    bl,0x1a
  422343:	jb     0x422370
  422345:	cmp    eax,0x6ef176f9
  42234a:	jb     0x422389
  42234c:	stos   BYTE PTR es:[edi],al
  42234d:	dec    esi
  42234e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  422350:	(bad)  
  422351:	dec    esp
  422352:	and    DWORD PTR [esi],0x8435a276
  422358:	add    al,BYTE PTR [ebx+0x45]
  42235b:	repz es mov al,0x88
  42235f:	call   0x9594:0xb8a162a2
  422366:	xor    DWORD PTR [esp+ebx*8-0x3e88c945],0x7ccf8034
  422371:	and    eax,0xfcac9ad6
  422376:	xchg   edx,eax
  422377:	xchg   ebx,eax
  422378:	jmp    0xe77fe345
  42237d:	jge    0x422357
  42237f:	mov    ch,BYTE PTR [ebx-0x4b0e5342]
  422385:	test   BYTE PTR [esi+0x42a7f01e],dl
  42238b:	mov    WORD PTR [ebx+0x15],cs
  42238e:	cmp    edi,DWORD PTR [eax-0x2a]
  422391:	mov    esi,0x44c351e
  422396:	jns    0x422408
  422398:	adc    eax,DWORD PTR [esi+ebp*2+0x51dbd274]
  42239f:	rol    DWORD PTR [ebx+0x6e2fa532],0x2f
  4223a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223a7:	xlat   BYTE PTR ds:[ebx]
  4223a8:	loop   0x4223d6
  4223aa:	dec    si
  4223ac:	shl    BYTE PTR [edi-0x23],cl
  4223af:	sbb    DWORD PTR [ebx+eiz*1],0xffffffcf
  4223b3:	push   eax
  4223b4:	jecxz  0x4223c6
  4223b6:	and    esp,DWORD PTR [ebp-0x3fecca5e]
  4223bc:	and    bh,BYTE PTR [edi+0xa]
  4223bf:	cmp    ebx,0xffffffea
  4223c2:	jne    0x42236c
  4223c4:	in     al,dx
  4223c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223c6:	ins    BYTE PTR es:[edi],dx
  4223c7:	dec    ebp
  4223c8:	test   eax,0x4c3e2479
  4223cd:	jns    0x42236c
  4223cf:	jg     0x4223bd
  4223d1:	lea    esp,[ebx]
  4223d3:	mov    ah,0xb9
  4223d5:	push   es
  4223d6:	jb     0x422358
  4223d8:	icebp  
  4223d9:	push   ds
  4223da:	dec    ebp
  4223db:	retf   0x4c5c
  4223de:	shl    DWORD PTR [ebx-0x6c7f815d],0x2d
  4223e5:	xchg   ecx,eax
  4223e6:	jp     0x422420
  4223e8:	push   ebp
  4223e9:	test   BYTE PTR [edi+0x63],dh
  4223ec:	ins    DWORD PTR es:[edi],dx
  4223ed:	rcl    BYTE PTR [ecx+0x15a02d47],cl
  4223f3:	sbb    edi,ecx
  4223f5:	jns    0x4223c0
  4223f7:	in     al,0xe1
  4223f9:	sub    ebx,0xd862b75f
  4223ff:	retf   0xb4b7
  422402:	mov    DWORD PTR [ecx+0x756d509e],edx
  422408:	xor    al,0x59
  42240a:	cmp    edx,DWORD PTR [ebx]
  42240c:	cmp    DWORD PTR [edx-0x3fbc8e6a],esi
  422412:	in     al,0xd8
  422414:	jecxz  0x42248e
  422416:	outs   dx,DWORD PTR ds:[esi]
  422417:	xor    al,BYTE PTR [ecx+ecx*4]
  42241a:	adc    cl,BYTE PTR [esi-0x7610f239]
  422420:	out    dx,eax
  422421:	add    BYTE PTR [edi+0xa8f596f],ah
  422427:	pop    esp
  422428:	pop    edi
  422429:	in     al,dx
  42242a:	sbb    BYTE PTR [ebx],ch
  42242c:	cmp    al,0x23
  42242e:	push   edx
  42242f:	gs lock jmp 0x4224a3
  422433:	shr    BYTE PTR [edi],cl
  422435:	hlt    
  422436:	jl     0x4224a5
  422438:	das    
  422439:	sub    BYTE PTR [edi-0x63],bl
  42243c:	out    0xc9,eax
  42243e:	data16 or al,0xfc
  422441:	xlat   BYTE PTR ds:[ebx]
  422442:	ror    DWORD PTR [ebx-0x1d],1
  422445:	retf   0x7fa3
  422448:	es popf 
  42244a:	test   DWORD PTR [edx+0x30],edi
  42244d:	sbb    BYTE PTR [esi+0x11],cl
  422450:	and    DWORD PTR [ebx],0xdc442189
  422456:	inc    ecx
  422457:	sub    eax,0xfe9fb10b
  42245c:	sahf   
  42245d:	mov    edi,DWORD PTR cs:[edx+0x2e]
  422461:	fmulp  st(5),st
  422463:	sar    BYTE PTR [esi],0xf9
  422466:	adc    DWORD PTR [edi],ebx
  422468:	xor    eax,0xe8a3dc34
  42246d:	sub    edi,esp
  42246f:	pop    ebp
  422470:	or     al,0x95
  422472:	jbe    0x422413
  422474:	push   0x8475bbc
  422479:	lock adc al,0x2a
  42247c:	or     eax,0xb7607abe
  422481:	fcmovnb st,st(4)
  422483:	jle    0x422466
  422485:	cmp    edx,ebp
  422487:	or     esi,DWORD PTR [edx]
  422489:	jne    0x422502
  42248b:	xchg   DWORD PTR [ecx-0x5fa8177e],eax
  422491:	pusha  
  422492:	pop    esp
  422493:	mov    bh,0xc5
  422495:	int3   
  422496:	mov    eax,ds:0xb690f03c
  42249b:	push   esi
  42249c:	out    dx,al
  42249d:	ret    0x83c2
  4224a0:	push   edx
  4224a1:	cpuid  
  4224a3:	sub    esp,DWORD PTR [edx]
  4224a5:	pop    ebx
  4224a6:	dec    ebp
  4224a7:	xor    ecx,edx
  4224a9:	mov    edi,0xf78901c8
  4224ae:	rcl    DWORD PTR [eax+0x52a8debd],1
  4224b4:	mov    BYTE PTR [eax+0x6b],ah
  4224b7:	xchg   al,dh
  4224b9:	mov    esi,0xc8bb8c99
  4224be:	imul   ebp,DWORD PTR [edx],0x9e44342b
  4224c4:	push   edx
  4224c5:	mov    al,0x60
  4224c7:	bound  eax,QWORD PTR [edx]
  4224c9:	fcomp  DWORD PTR [edx]
  4224cb:	push   0xffffffe8
  4224cd:	stc    
  4224ce:	mov    ds:0xcdbbbcc8,eax
  4224d3:	or     dl,BYTE PTR [esi-0x5b]
  4224d6:	lock fild WORD PTR [edi+0x63]
  4224da:	inc    edi
  4224db:	push   esi
  4224dc:	stc    
  4224dd:	fwait
  4224de:	mov    ebp,0x6623421e
  4224e3:	daa    
  4224e4:	xchg   ebx,eax
  4224e5:	imul   esp,DWORD PTR [ebx-0x6ff15e07],0xffffffae
  4224ec:	stc    
  4224ed:	add    al,0x82
  4224ef:	out    dx,al
  4224f0:	cmp    al,0x53
  4224f2:	jg     0xb7b54f52
  4224f8:	fimul  DWORD PTR [edi+edx*1]
  4224fb:	(bad)  
  4224fc:	sti    
  4224fd:	mov    ebp,0xf7a7ea3b
  422502:	mov    ebp,0x42c569be
  422507:	sub    BYTE PTR [eax+0x544fc734],bl
  42250d:	jb     0x4224e9
  42250f:	xchg   edx,eax
  422510:	jno    0x4224e3
  422512:	cmc    
  422513:	ror    BYTE PTR [eax-0x5c99d4bb],cl
  422519:	retf   
  42251a:	jg     0x422520
  42251c:	pop    ss
  42251d:	dec    ecx
  42251e:	retf   0x9412
  422521:	out    0xf6,eax
  422523:	leave  
  422524:	fsub   QWORD PTR [ecx+eiz*2-0x2f]
  422528:	xor    BYTE PTR [esi],dl
  42252a:	push   esi
  42252b:	sar    BYTE PTR [ebp-0x52],cl
  42252e:	fdiv   DWORD PTR [eax-0x2e]
  422531:	cmp    BYTE PTR [esi],ch
  422533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422534:	dec    esp
  422535:	(bad)  
  422536:	out    0xe,eax
  422538:	adc    bh,BYTE PTR [ebp-0x14]
  42253b:	lods   al,BYTE PTR ds:[esi]
  42253c:	std    
  42253d:	fwait
  42253e:	pushf  
  42253f:	test   BYTE PTR [edi+0x6e],ah
  422542:	inc    edi
  422543:	rcl    DWORD PTR [ecx+0xfc65afb],1
  422549:	mov    edi,0xbd3d8c3
  42254e:	mov    al,0xf2
  422550:	and    ebp,DWORD PTR [edx+ecx*1]
  422553:	ss out 0x24,al
  422556:	or     al,0xc7
  422558:	sbb    BYTE PTR [eax+0x4807dd1d],ch
  42255e:	pop    edx
  42255f:	cmc    
  422560:	cs pop ds
  422562:	out    dx,al
  422563:	xor    DWORD PTR [ecx],edi
  422565:	pushf  
  422566:	mov    WORD PTR [ebp+0x7769f2a3],ds
  42256c:	xchg   ecx,eax
  42256d:	aas    
  42256e:	adc    eax,ecx
  422570:	lea    ebx,[ebx+0x623b6a71]
  422576:	pop    eax
  422577:	ret    
  422578:	push   ds
  422579:	cli    
  42257a:	jmp    0x65c3:0x639fcca7
  422581:	lock out dx,al
  422583:	jbe    0x422525
  422585:	xor    DWORD PTR [eax-0x5e102888],ecx
  42258b:	mov    edx,DWORD PTR [ebx-0x67aea11]
  422591:	inc    ebx
  422592:	std    
  422593:	adc    eax,0x7ca1c677
  422598:	push   ds
  422599:	shr    ebx,0xd2
  42259c:	mov    cl,0x5
  42259e:	and    ebx,DWORD PTR [edi+0x35db7595]
  4225a4:	xor    ah,BYTE PTR [ebx]
  4225a6:	hlt    
  4225a7:	xor    BYTE PTR [esi],ch
  4225a9:	cmp    BYTE PTR [eax-0x5d5a537b],ah
  4225af:	(bad)  
  4225b0:	pop    edx
  4225b1:	sub    BYTE PTR [eax+edi*8],al
  4225b4:	out    dx,eax
  4225b5:	mov    WORD PTR [esi],es
  4225b7:	adc    esp,DWORD PTR [eax-0x22]
  4225ba:	lods   eax,DWORD PTR ds:[esi]
  4225bb:	inc    esp
  4225bc:	xchg   ebx,eax
  4225bd:	cwde   
  4225be:	ret    
  4225bf:	xor    esi,esp
  4225c1:	dec    eax
  4225c2:	outs   dx,BYTE PTR ds:[esi]
  4225c3:	xchg   edi,eax
  4225c4:	mov    DWORD PTR ds:0xb953a117,ecx
  4225ca:	sub    cl,0xe4
  4225cd:	sbb    cl,BYTE PTR [ebx+0x13]
  4225d0:	cmp    DWORD PTR [esi-0x1b7c8dba],0xb104302
  4225da:	jno    0x4225f0
  4225dc:	lahf   
  4225dd:	jle    0x42256f
  4225df:	mov    eax,0x4d5894cd
  4225e4:	imul   edx,DWORD PTR [eax],0xeb927818
  4225ea:	pushf  
  4225eb:	std    
  4225ec:	pop    ebx
  4225ed:	jno    0x42257f
  4225ef:	mov    eax,0x2da15afb
  4225f4:	mov    ebx,0x5097d22e
  4225f9:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225fb:	jno    0x42262b
  4225fd:	xchg   esp,eax
  4225fe:	popa   
  4225ff:	mov    dh,BYTE PTR [edi+eax*2-0x48]
  422603:	stos   BYTE PTR es:[edi],al
  422604:	out    0xb7,eax
  422606:	adc    bh,0xd4
  422609:	inc    ecx
  42260a:	mov    eax,ds:0x3b596e6e
  42260f:	pop    eax
  422610:	mov    cl,0x66
  422612:	daa    
  422613:	inc    eax
  422614:	lds    edi,FWORD PTR [edi]
  422616:	and    DWORD PTR [esi-0x1d],edi
  422619:	push   ebx
  42261a:	add    BYTE PTR [ecx],cl
  42261c:	cmp    eax,DWORD PTR ds:0x96bef38a
  422622:	fsubrp st(0),st
  422624:	loop   0x422668
  422626:	pop    ecx
  422627:	mov    dl,0x6e
  422629:	repz aaa 
  42262b:	pop    esi
  42262c:	ja     0x4226ab
  42262e:	popa   
  42262f:	cs dec edi
  422631:	stos   BYTE PTR es:[edi],al
  422632:	mov    al,ds:0xe0e01d74
  422637:	imul   esp,edi,0x7c
  42263a:	push   ss
  42263b:	retf   0x7926
  42263e:	mov    cl,0x5b
  422640:	outs   dx,BYTE PTR ds:[esi]
  422641:	adc    al,0x2f
  422643:	xchg   esi,eax
  422644:	or     eax,0x5d92a315
  422649:	pop    edx
  42264a:	ja     0x42268a
  42264c:	sahf   
  42264d:	adc    cl,BYTE PTR [edx-0x59]
  422650:	mov    DWORD PTR [edx],ebp
  422652:	bnd jmp 0x75dde64f
  422658:	add    BYTE PTR [eax],dl
  42265a:	ins    BYTE PTR es:[edi],dx
  42265b:	xor    esp,ebx
  42265d:	retf   
  42265e:	nop
  42265f:	hlt    
  422660:	push   ecx
  422661:	sti    
  422662:	cmp    dl,BYTE PTR [ecx]
  422664:	in     al,0x74
  422666:	call   0xac5d3f5f
  42266b:	pop    es
  42266c:	xchg   esp,eax
  42266d:	pushf  
  42266e:	out    dx,al
  42266f:	mov    edi,0x8e035efb
  422674:	mov    eax,edx
  422676:	cmp    al,0x7a
  422678:	xor    eax,0x93900a61
  42267d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42267e:	popf   
  42267f:	mov    ebp,0x9a93ec45
  422684:	inc    ecx
  422685:	in     al,0xab
  422687:	push   edx
  422688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422689:	pop    edx
  42268a:	sti    
  42268b:	pop    es
  42268c:	mov    dh,0x24
  42268e:	aam    0x2
  422690:	cmp    BYTE PTR [ebp+0x18],0x67
  422694:	fwait
  422695:	sub    al,0x68
  422697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422698:	leave  
  422699:	add    al,0xa7
  42269b:	cwde   
  42269c:	ins    DWORD PTR es:[edi],dx
  42269d:	cmp    eax,0xf1a71873
  4226a2:	add    DWORD PTR [edi],0xeec8071a
  4226a8:	mov    esp,0x4bd4908a
  4226ad:	or     BYTE PTR ds:0x931d9058,bl
  4226b3:	jns    0x4226cb
  4226b5:	nop
  4226b6:	jge    0x4226a1
  4226b8:	scas   eax,DWORD PTR es:[edi]
  4226b9:	loop   0x42269e
  4226bb:	push   ebp
  4226bc:	dec    edi
  4226bd:	jns    0x4226eb
  4226bf:	add    BYTE PTR [ebx+0x3d],dl
  4226c2:	repz push eax
  4226c4:	sub    al,0x29
  4226c6:	mov    cl,0xde
  4226c8:	es cmc 
  4226ca:	xchg   ecx,eax
  4226cb:	mov    ds:0x83709ffc,eax
  4226d0:	ins    BYTE PTR es:[edi],dx
  4226d1:	imul   ebx,DWORD PTR [ebx-0x14],0x336cdaae
  4226d8:	cwde   
  4226d9:	pop    ds
  4226da:	(bad)  
  4226db:	jns    0x422724
  4226dd:	sbb    eax,0xc7b12cdd
  4226e2:	add    ecx,DWORD PTR [edi+esi*2]
  4226e5:	jbe    0x42270e
  4226e7:	imul   edx,DWORD PTR [esi+0x78],0xa60db570
  4226ee:	cli    
  4226ef:	js     0x422695
  4226f1:	jo     0x422697
  4226f3:	or     al,0xab
  4226f5:	push   ss
  4226f6:	add    BYTE PTR [edx],dl
  4226f8:	cdq    
  4226f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226fa:	test   eax,0x461379f6
  4226ff:	xchg   ecx,eax
  422700:	and    BYTE PTR [eax+esi*1-0x21],bl
  422704:	out    0x6d,al
  422706:	jge    0x422730
  422708:	std    
  422709:	inc    esp
  42270a:	test   DWORD PTR [ebx-0x23],esi
  42270d:	ja     0x42278a
  42270f:	adc    eax,0xe9ba810a
  422714:	mov    ecx,0xd3a30fe9
  422719:	addr16 pop eax
  42271b:	mov    WORD PTR [eax+edi*2-0x59],gs
  42271f:	sub    BYTE PTR [eax],bh
  422721:	scas   al,BYTE PTR es:[edi]
  422722:	push   ecx
  422723:	call   0xde5121bf
  422728:	sbb    eax,0x8f8fae28
  42272d:	(bad)  
  42272e:	stos   DWORD PTR es:[edi],eax
  42272f:	pop    esp
  422730:	pop    ebx
  422731:	lahf   
  422732:	push   esi
  422733:	xor    al,BYTE PTR [esi+0x1fd9342f]
  422739:	cli    
  42273a:	jg     0x4226fd
  42273c:	xchg   ebx,eax
  42273d:	das    
  42273e:	fsubr  st(3),st
  422740:	cld    
  422741:	scas   eax,DWORD PTR es:[edi]
  422742:	push   ecx
  422743:	imul   ebx,DWORD PTR [esp+eax*1+0x37],0x8fc4c4df
  42274b:	and    eax,0x68f858b8
  422750:	push   ss
  422751:	sub    DWORD PTR [ebx-0x3b496009],eax
  422757:	pushf  
  422758:	mov    eax,ebp
  42275a:	je     0x422771
  42275c:	es push ecx
  42275e:	jmp    0x4226ef
  422760:	ds test eax,0x14915ebe
  422766:	cli    
  422767:	xchg   esi,eax
  422768:	cwde   
  422769:	gs push eax
  42276b:	lea    ebx,[ebx+ecx*2-0x63]
  42276f:	jmp    0x422738
  422771:	cmovo  esp,DWORD PTR [edi-0x70]
  422775:	xchg   esp,eax
  422776:	push   esi
  422777:	jno    0x4227aa
  422779:	push   eax
  42277a:	jge    0x422744
  42277c:	and    al,0x2
  42277e:	mov    ebp,0x5467004e
  422783:	sbb    DWORD PTR ss:[eax-0x5f97e79d],esi
  42278a:	cld    
  42278b:	mov    eax,ds:0x78464456
  422790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422791:	in     eax,0xbb
  422793:	mov    BYTE PTR [edi],bh
  422795:	and    DWORD PTR [ebx+edi*8-0x63],ebp
  422799:	ret    0x34ba
  42279c:	xchg   ebx,eax
  42279d:	xor    BYTE PTR ds:0xe0aea23a,dh
  4227a3:	aaa    
  4227a4:	adc    ecx,edi
  4227a6:	or     dl,BYTE PTR [ecx+0x16e12eb4]
  4227ac:	or     dl,bl
  4227ae:	fidiv  DWORD PTR [edx+eiz*2-0x564a137d]
  4227b5:	fdivr  DWORD PTR [ebp+0x1f]
  4227b8:	gs pop eax
  4227ba:	mov    DWORD PTR [eax+0x2b831d1f],edi
  4227c0:	inc    esi
  4227c1:	mov    es,WORD PTR [edi]
  4227c3:	mov    dh,0x82
  4227c5:	mov    WORD PTR [edi+0x6dfaeace],?
  4227cb:	mov    DWORD PTR [edi-0x49],eax
  4227ce:	int3   
  4227cf:	ss rcl edx,cl
  4227d2:	xchg   ebx,eax
  4227d3:	fist   WORD PTR [ebp+0x28]
  4227d6:	loop   0x4227f2
  4227d8:	fwait
  4227d9:	aas    
  4227da:	sahf   
  4227db:	sar    DWORD PTR [edx+eiz*8],0x35
  4227df:	retf   
  4227e0:	in     al,0x86
  4227e2:	and    al,0x5
  4227e4:	div    BYTE PTR [ebp+0x3db05a93]
  4227ea:	in     al,dx
  4227eb:	and    BYTE PTR [esi+0x29],dl
  4227ee:	mov    WORD PTR [ecx],es
  4227f0:	pop    esi
  4227f1:	push   0xc1115094
  4227f6:	fucomip st,st(6)
  4227f8:	push   ss
  4227f9:	fdiv   st,st(3)
  4227fb:	inc    esi
  4227fc:	add    DWORD PTR [esi+0x219ed391],edx
  422802:	mov    eax,ds:0x7a428e18
  422807:	jl     0x4227a9
  422809:	test   DWORD PTR [esi-0x70caed81],0x975961d8
  422813:	and    BYTE PTR ss:[edi-0x26],al
  422817:	shl    BYTE PTR [eax],cl
  422819:	mov    ebx,0xa99f2bf2
  42281e:	jbe    0x4227c4
  422820:	pop    esi
  422821:	push   cs
  422822:	fsubr  DWORD PTR [ecx]
  422824:	movsx  esp,BYTE PTR [edx+0x74]
  422828:	or     ah,ah
  42282a:	cld    
  42282b:	pop    esi
  42282c:	call   0x5c75589e
  422831:	aad    0x7a
  422833:	loope  0x42289f
  422835:	xchg   edi,eax
  422836:	xchg   BYTE PTR [eax-0x55],ch
  422839:	push   esi
  42283a:	jne    0x4227f7
  42283c:	test   dh,0xb4
  42283f:	and    al,0x5c
  422841:	dec    ecx
  422842:	iret   
  422843:	das    
  422844:	ret    0xc15c
  422847:	inc    esi
  422848:	enter  0x79d1,0x33
  42284c:	add    cl,0x34
  42284f:	sbb    BYTE PTR [ecx],0x5e
  422852:	sar    BYTE PTR [ebp+0x51c67414],cl
  422858:	sahf   
  422859:	mov    eax,ds:0x61cdfa39
  42285e:	jmp    0x42284c
  422860:	(bad)  [ecx]
  422862:	not    cl
  422864:	mov    ch,0x32
  422866:	aam    0xdc
  422868:	shr    DWORD PTR [ebp+ebx*1+0x53],cl
  42286c:	push   edx
  42286d:	cmc    
  42286e:	mov    al,0x2d
  422870:	scas   al,BYTE PTR es:[edi]
  422871:	ds sub bl,bl
  422874:	lahf   
  422875:	mov    ebp,0xd0ad4fcc
  42287a:	jb     0x422873
  42287c:	dec    edi
  42287d:	fs lahf 
  42287f:	iret   
  422880:	mov    ebp,0xa5f289da
  422885:	xor    bl,cl
  422887:	mov    ecx,0xcdf9361f
  42288c:	in     al,0x4
  42288e:	cwde   
  42288f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422890:	push   ecx
  422891:	mov    DWORD PTR [eax+0x6a251c0],0x725dbfc9
  42289b:	push   0xffffffc8
  42289d:	lds    eax,FWORD PTR ds:0xe7719077
  4228a3:	mov    bl,0x3c
  4228a5:	push   es
  4228a6:	sar    BYTE PTR [edx],cl
  4228a8:	or     eax,0x2eb9772c
  4228ad:	jge    0x42288a
  4228af:	in     al,dx
  4228b0:	mov    esp,eax
  4228b2:	jp     0x42292e
  4228b4:	dec    ebp
  4228b5:	setno  BYTE PTR [edi]
  4228b8:	push   edx
  4228b9:	pop    ds
  4228ba:	mov    eax,0x243124bb
  4228bf:	setp   BYTE PTR [eax]
  4228c2:	lods   eax,DWORD PTR ds:[esi]
  4228c3:	fcomp  DWORD PTR [edx]
  4228c5:	mov    ch,bh
  4228c7:	mov    ebp,0x10d071af
  4228cc:	or     esi,DWORD PTR [esi]
  4228ce:	(bad)  
  4228cf:	sub    al,0x1d
  4228d1:	add    al,BYTE PTR [eax+0x40e7f90b]
  4228d7:	in     eax,dx
  4228d8:	mov    esp,0x6c370f7b
  4228dd:	cmp    cl,BYTE PTR [ebp+0x36]
  4228e0:	pop    ss
  4228e1:	jle    0x42294a
  4228e3:	hlt    
  4228e4:	sub    dl,BYTE PTR ds:0xf5d052ac
  4228ea:	mov    edi,0xb5e0580b
  4228ef:	xchg   esi,edi
  4228f1:	lahf   
  4228f2:	ds sbb eax,0x9467675e
  4228f8:	sbb    ebx,DWORD PTR [edx+0x3eee04d3]
  4228fe:	mov    al,0xfb
  422900:	fsub   st,st(3)
  422902:	cdq    
  422903:	push   ss
  422904:	nop
  422905:	call   0xbf022a59
  42290a:	dec    ebx
  42290b:	aam    0x2d
  42290d:	mov    cl,ah
  42290f:	das    
  422910:	test   DWORD PTR [edi-0x5a],0x83d35cb8
  422917:	mov    ch,0x51
  422919:	repz rcr ah,0x26
  42291d:	jecxz  0x4228c2
  42291f:	ficom  WORD PTR [ebp-0x32]
  422922:	mov    esi,0x9c2ed77a
  422927:	cmp    edi,ebp
  422929:	popf   
  42292a:	mov    ds:0x69215e7b,al
  42292f:	push   esi
  422930:	test   BYTE PTR [ebx],bh
  422932:	push   ds
  422933:	(bad)  
  422934:	fadd   DWORD PTR [edi-0x60421f55]
  42293a:	mov    DWORD PTR [ebx+0x77],ebp
  42293d:	pop    ds
  42293e:	daa    
  42293f:	mov    edx,0x782345db
  422944:	idiv   eax
  422946:	mov    ds:0xc607b9e6,eax
  42294b:	mul    DWORD PTR [esi]
  42294d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42294e:	adc    al,0x66
  422950:	fdivr  st(0),st
  422952:	mov    bl,0xbb
  422954:	cmp    BYTE PTR [edx-0x42],cl
  422957:	xchg   ebp,eax
  422958:	lock jae 0x42295f
  42295b:	imul   ecx,DWORD PTR [eax],0x6c2e3b5c
  422961:	fnclex 
  422963:	loope  0x4228f3
  422965:	rol    BYTE PTR [eax],0xe8
  422968:	hlt    
  422969:	sbb    esi,edx
  42296b:	test   BYTE PTR [eax+0x4c],cl
  42296e:	pusha  
  42296f:	cwde   
  422970:	cli    
  422971:	in     al,dx
  422972:	adc    dl,BYTE PTR [ebx+0x1c570775]
  422978:	leave  
  422979:	mov    ch,ah
  42297b:	xchg   BYTE PTR [edx-0x43],al
  42297e:	adc    DWORD PTR [esi-0x4a7d9880],ebx
  422984:	(bad)  
  422985:	addr16 ja 0x422918
  422988:	icebp  
  422989:	mov    bh,0x5
  42298b:	mov    cl,bh
  42298d:	int    0xd8
  42298f:	mov    ebp,0x4a0d55ed
  422994:	bound  esi,QWORD PTR [edx+ebx*2+0x51]
  422998:	jbe    0x422a09
  42299a:	lock mov ch,0x50
  42299d:	outs   dx,DWORD PTR ds:[esi]
  42299e:	leave  
  42299f:	sbb    WORD PTR [edi],0x13
  4229a3:	ror    BYTE PTR ds:0xed4c6d34,cl
  4229a9:	adc    bl,bl
  4229ab:	xchg   edi,eax
  4229ac:	scas   eax,DWORD PTR es:[edi]
  4229ad:	adc    esi,DWORD PTR ds:0x58a4d3e1
  4229b3:	jnp    0x422a1f
  4229b5:	stos   BYTE PTR es:[edi],al
  4229b6:	test   al,0xa
  4229b8:	out    0xa1,al
  4229ba:	aam    0xc0
  4229bc:	push   es
  4229bd:	dec    esi
  4229be:	dec    edi
  4229bf:	mov    al,0x77
  4229c1:	mov    ecx,DWORD PTR [edx]
  4229c3:	mov    ebx,0xf8c998ba
  4229c8:	mov    ah,0xc7
  4229ca:	or     al,0x6b
  4229cc:	jne    0x4229fa
  4229ce:	xchg   BYTE PTR [ebp+0x6e72f348],dl
  4229d4:	popa   
  4229d5:	or     edx,DWORD PTR [ebx]
  4229d7:	mov    al,0x16
  4229d9:	rcr    cl,0x49
  4229dc:	xor    BYTE PTR [ecx-0x3104166d],0xa0
  4229e3:	or     al,BYTE PTR [edx+0x58d6017]
  4229e9:	add    BYTE PTR [ebx-0x2e],0x51
  4229ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229ee:	mov    DWORD PTR [esi+0x898a07e],esi
  4229f4:	lea    edi,[ecx]
  4229f6:	imul   eax,DWORD PTR [ecx],0x5d83257f
  4229fc:	mov    ah,0x7
  4229fe:	xor    al,0x79
  422a00:	(bad)  
  422a01:	stos   DWORD PTR es:[edi],eax
  422a02:	icebp  
  422a03:	xchg   ebp,eax
  422a04:	pop    ebp
  422a05:	mov    ebx,0x971229e
  422a0a:	xor    DWORD PTR [ecx],edx
  422a0c:	inc    edx
  422a0d:	ins    DWORD PTR es:[edi],dx
  422a0e:	xor    al,0xe
  422a10:	xor    BYTE PTR [esi],ah
  422a12:	(bad)  
  422a14:	dec    ebp
  422a15:	shl    dl,0x1a
  422a18:	les    esi,FWORD PTR [edi]
  422a1a:	sub    BYTE PTR [eax-0x7eabc80b],ch
  422a20:	or     BYTE PTR [ebx-0xd25ea02],0x9e
  422a27:	(bad)  
  422a28:	lods   eax,DWORD PTR ds:[esi]
  422a29:	retf   
  422a2a:	lds    esp,FWORD PTR [esi]
  422a2c:	dec    edi
  422a2d:	jae    0x4229e3
  422a2f:	inc    eax
  422a30:	imul   edi,DWORD PTR [ebp-0x618f8230],0x5f
  422a37:	sbb    ah,BYTE PTR [ecx-0x110b450f]
  422a3d:	in     al,0x33
  422a3f:	push   esp
  422a40:	sbb    al,0xbc
  422a42:	mov    al,ds:0x30d9c6df
  422a47:	push   0x7f
  422a49:	push   esp
  422a4a:	lahf   
  422a4b:	adc    DWORD PTR [ebx+0x4a],0xfe2f3510
  422a52:	xor    al,0x90
  422a54:	xchg   DWORD PTR [esi],eax
  422a56:	scas   al,BYTE PTR es:[di]
  422a58:	sub    esp,esp
  422a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a5b:	loopne 0x422ad6
  422a5d:	mov    dh,0xde
  422a5f:	xor    dl,dl
  422a61:	(bad)  
  422a62:	shr    BYTE PTR [ebx-0x6a1e337f],0x90
  422a69:	lods   eax,DWORD PTR ds:[esi]
  422a6a:	push   edx
  422a6b:	cs dec esi
  422a6d:	mov    cl,BYTE PTR ds:0x4ea760ce
  422a73:	xchg   esp,eax
  422a74:	jnp    0x422a3c
  422a76:	push   ebx
  422a77:	dec    edi
  422a78:	sbb    BYTE PTR [ecx-0x39],al
  422a7b:	ficom  WORD PTR [ebx+0x1d]
  422a7e:	dec    edi
  422a7f:	adc    DWORD PTR [ebp-0x2],eax
  422a82:	xchg   ebp,eax
  422a83:	scas   al,BYTE PTR es:[edi]
  422a84:	jns    0x422abc
  422a86:	push   es
  422a87:	xor    ebp,DWORD PTR [eax+0x3]
  422a8a:	mov    ecx,0xb1f52991
  422a8f:	pop    ss
  422a90:	cdq    
  422a91:	test   BYTE PTR [esi+0x6f],bh
  422a94:	inc    esp
  422a95:	sbb    BYTE PTR [edx+edi*1],al
  422a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a9a:	mov    cl,0x81
  422a9c:	inc    ebp
  422a9d:	mov    ch,0xeb
  422a9f:	mov    ds:0x7554fddf,eax
  422aa4:	das    
  422aa5:	jmp    DWORD PTR [esp+edx*2+0xf687423]
  422aac:	adc    dl,ch
  422aae:	sbb    BYTE PTR [ecx],bh
  422ab0:	aaa    
  422ab1:	push   eax
  422ab2:	cmp    dl,BYTE PTR [edi]
  422ab4:	aas    
  422ab5:	lods   al,BYTE PTR ds:[esi]
  422ab6:	aam    0x39
  422ab8:	mov    ds:0x8606c268,al
  422abd:	leave  
  422abe:	jne    0x422adc
  422ac0:	mov    ecx,0x9df63901
  422ac5:	adc    DWORD PTR [esi+edx*2+0x44],edi
  422ac9:	add    DWORD PTR [ecx],edi
  422acb:	mov    eax,ds:0xfe0b1db4
  422ad0:	pop    edx
  422ad1:	sbb    ebp,DWORD PTR [eax]
  422ad3:	sar    DWORD PTR gs:[ecx-0x64177c5b],1
  422ada:	iret   
  422adb:	jp     0x422b02
  422add:	and    al,0xf1
  422adf:	(bad)  [ebp+0x12]
  422ae2:	push   ebp
  422ae3:	sub    eax,0x81fad542
  422ae8:	add    eax,0x16e0bc94
  422aed:	lock jmp 0x422b57
  422af0:	push   esi
  422af1:	mov    DWORD PTR [eax-0x31b2e2e1],ebx
  422af7:	sahf   
  422af8:	pop    edi
  422af9:	loop   0x422aec
  422afb:	retf   0xc7f7
  422afe:	or     ch,BYTE PTR [ecx]
  422b00:	push   0x5a22bd9b
  422b05:	mov    bl,0x69
  422b07:	pop    ss
  422b08:	pop    es
  422b09:	jmp    0x1459c45b
  422b0e:	xor    BYTE PTR [ecx+0x1941d760],0xcc
  422b15:	scas   eax,DWORD PTR es:[edi]
  422b16:	pop    ebp
  422b17:	pop    ss
  422b18:	mov    ebp,0x592ebc6f
  422b1d:	cmp    edi,esp
  422b1f:	stos   DWORD PTR es:[edi],eax
  422b20:	sbb    edi,ecx
  422b22:	sbb    DWORD PTR [edx+0x2c6c0d1e],eax
  422b28:	inc    esp
  422b29:	push   cs
  422b2a:	ins    DWORD PTR es:[edi],dx
  422b2b:	or     edi,DWORD PTR [ebx]
  422b2d:	cmp    ecx,ecx
  422b2f:	push   ebp
  422b30:	pop    esi
  422b31:	outs   dx,DWORD PTR ds:[esi]
  422b32:	and    ch,dh
  422b34:	fdivr  QWORD PTR [edx+0x50ae58a9]
  422b3a:	xchg   ebx,eax
  422b3b:	mov    WORD PTR [edi+0x240b9e22],?
  422b41:	es loope 0x422b8f
  422b44:	in     al,0x7c
  422b46:	xor    al,0xa8
  422b48:	and    edi,DWORD PTR [esi]
  422b4a:	jae    0x422b5a
  422b4c:	es jb  0x422afa
  422b4f:	js     0x422ae8
  422b51:	mov    ds:0xaac24ccb,eax
  422b56:	pop    ebp
  422b57:	and    esi,edx
  422b59:	jle    0x422b76
  422b5b:	xchg   edi,eax
  422b5c:	popa   
  422b5d:	aad    0xfa
  422b5f:	add    DWORD PTR [esi],0x4a
  422b62:	jo     0x422b0a
  422b64:	fcom   st(3)
  422b66:	imul   ebx,esi,0xe66a4f5f
  422b6c:	or     ebx,eax
  422b6e:	mov    dl,0xe9
  422b70:	jno    0x422b8e
  422b72:	cli    
  422b73:	pop    edi
  422b74:	pop    ss
  422b75:	bound  eax,QWORD PTR [ebx+0x1d]
  422b78:	rol    cl,cl
  422b7a:	xor    BYTE PTR [ebx],cl
  422b7c:	dec    edx
  422b7d:	add    dl,BYTE PTR [edx-0x4c]
  422b80:	jns    0x422b8f
  422b82:	dec    esp
  422b83:	xchg   edi,eax
  422b84:	out    dx,eax
  422b85:	fsubrp st(4),st
  422b87:	xchg   esp,eax
  422b88:	rol    DWORD PTR ss:0x47c2e88b,cl
  422b8f:	shl    DWORD PTR [edi+0x5c],0x44
  422b93:	lods   eax,DWORD PTR ds:[esi]
  422b94:	xchg   BYTE PTR [esi-0x60],cl
  422b97:	popf   
  422b98:	mov    ecx,0xd85f2f3
  422b9d:	popf   
  422b9e:	cs cs sub eax,0x90239223
  422ba5:	call   0xcf59:0x4e56f2dd
  422bac:	cmp    ebx,DWORD PTR [ecx]
  422bae:	repnz pop esp
  422bb0:	push   ebx
  422bb1:	bound  ebp,QWORD PTR [eax+0x9]
  422bb4:	cmp    DWORD PTR [esi-0x2b93b6c7],ebp
  422bba:	xchg   DWORD PTR [edi-0x72],ebp
  422bbd:	ss push ecx
  422bbf:	into   
  422bc0:	jge    0x422be1
  422bc2:	dec    ecx
  422bc3:	dec    esi
  422bc4:	xor    al,0x1f
  422bc6:	push   esi
  422bc7:	shr    BYTE PTR [ebx+edi*1],1
  422bca:	jns    0x422be9
  422bcc:	nop
  422bcd:	sbb    dh,BYTE PTR [eax]
  422bcf:	aaa    
  422bd0:	push   DWORD PTR ds:0xa9d17b50
  422bd6:	xor    bh,BYTE PTR [ebx+0x84635d5]
  422bdc:	push   edi
  422bdd:	scas   al,BYTE PTR es:[edi]
  422bde:	push   ds
  422bdf:	xor    edi,edi
  422be1:	scas   al,BYTE PTR es:[edi]
  422be2:	lea    esp,[ebx-0x6c]
  422be5:	add    al,0x2e
  422be7:	jns    0x422bf5
  422be9:	fwait
  422bea:	test   BYTE PTR [esi],ch
  422bec:	inc    eax
  422bed:	(bad)  
  422bef:	push   esp
  422bf0:	mov    ds:0x473c6c61,eax
  422bf5:	arpl   WORD PTR [edi],cx
  422bf7:	cmp    al,0x71
  422bf9:	or     BYTE PTR [eax],ah
  422bfb:	or     DWORD PTR [edi-0x35f31a6a],edi
  422c01:	and    eax,0xddb4bddb
  422c06:	push   ds
  422c07:	nop
  422c08:	test   esi,ebx
  422c0a:	pushf  
  422c0b:	or     esp,DWORD PTR [edi]
  422c0d:	push   es
  422c0e:	pop    eax
  422c0f:	enter  0x6d71,0xc1
  422c13:	sub    DWORD PTR [ecx],0xc31c5ed4
  422c19:	push   ebp
  422c1a:	(bad)  
  422c1b:	out    0x7b,al
  422c1d:	clc    
  422c1e:	addr16 sbb esi,esp
  422c21:	scas   eax,DWORD PTR es:[edi]
  422c22:	inc    ebp
  422c23:	adc    ah,BYTE PTR [edx]
  422c25:	sub    ecx,eax
  422c27:	pushf  
  422c28:	mov    ebp,0xbb49689b
  422c2d:	cmp    BYTE PTR [ecx+edi*8+0x49],dl
  422c31:	(bad)  
  422c32:	dec    eax
  422c33:	call   DWORD PTR [esi+0x5b106436]
  422c39:	imul   edx,ecx,0x61
  422c3c:	pop    esp
  422c3d:	clc    
  422c3e:	sbb    bh,BYTE PTR [esi]
  422c40:	mov    esi,esp
  422c42:	cmp    BYTE PTR [ebx],al
  422c44:	aam    0x18
  422c46:	lea    eax,[eax-0x43]
  422c49:	lds    eax,FWORD PTR [esi-0xf]
  422c4c:	dec    eax
  422c4d:	cs (bad) 
  422c4f:	and    BYTE PTR [ecx],al
  422c51:	ret    0x7870
  422c54:	and    DWORD PTR [edi],ecx
  422c56:	dec    edi
  422c57:	dec    ebx
  422c58:	addr16 in al,dx
  422c5a:	jmp    0xaa6a:0xd7ff386e
  422c61:	add    ah,BYTE PTR [esi]
  422c63:	sti    
  422c64:	sub    edi,edx
  422c66:	fild   QWORD PTR [ecx+eax*4-0x17aa9d6c]
  422c6d:	xor    al,0x72
  422c6f:	sbb    dl,dl
  422c71:	mov    ch,0x91
  422c73:	and    dh,BYTE PTR [edi]
  422c75:	xor    al,0x1
  422c77:	(bad)  
  422c78:	xor    al,0x39
  422c7a:	lock xor edx,eax
  422c7d:	cmp    eax,0x92250b6c
  422c82:	pop    ebp
  422c83:	sti    
  422c84:	cmc    
  422c85:	outs   dx,DWORD PTR ds:[esi]
  422c86:	fsubr  st,st(4)
  422c88:	mov    esp,0x7d497e20
  422c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c8e:	push   ds
  422c8f:	dec    eax
  422c90:	or     dl,ch
  422c92:	xlat   BYTE PTR ds:[ebx]
  422c93:	inc    ecx
  422c94:	jmp    0xe5a9:0xfd9b9176
  422c9b:	fidiv  WORD PTR [edi]
  422c9d:	xchg   esp,eax
  422c9e:	dec    edx
  422c9f:	jno    0x422c22
  422ca1:	sti    
  422ca2:	sbb    eax,0x138df33d
  422ca7:	and    al,0x46
  422ca9:	xor    eax,0x60beb70e
  422cae:	retf   0x1848
  422cb1:	sub    ch,dh
  422cb3:	cdq    
  422cb4:	(bad)  
  422cb5:	mov    edi,0x82adc688
  422cba:	inc    ebx
  422cbb:	je     0x422d1c
  422cbd:	js     0x422cf4
  422cbf:	jecxz  0x422cdc
  422cc1:	in     eax,dx
  422cc2:	mov    ebx,0x6cba1319
  422cc7:	mov    ah,0x2e
  422cc9:	aam    0xaf
  422ccb:	(bad)  
  422ccc:	fsub   QWORD PTR [edi]
  422cce:	stos   BYTE PTR es:[edi],al
  422ccf:	sbb    cl,bl
  422cd1:	push   ss
  422cd2:	lock fdivr DWORD PTR [ebx+0x3d508179]
  422cd9:	scas   al,BYTE PTR es:[edi]
  422cda:	lock repz dec esi
  422cdd:	clc    
  422cde:	(bad)  
  422cdf:	mov    ebp,0x317e549b
  422ce4:	sbb    eax,0xcb2987d4
  422ce9:	aam    0x33
  422ceb:	mov    edx,0x14da4e8c
  422cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cf1:	retf   
  422cf2:	int3   
  422cf3:	pop    esp
  422cf4:	inc    edx
  422cf5:	mov    bl,0x6f
  422cf7:	pop    eax
  422cf8:	and    edi,edx
  422cfa:	cwde   
  422cfb:	xchg   edi,eax
  422cfc:	(bad)  
  422cfd:	or     DWORD PTR [esi+0x1c],eax
  422d00:	dec    esp
  422d01:	sub    BYTE PTR ds:0xf8614abd,cl
  422d07:	mov    dl,0x79
  422d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d0a:	push   ss
  422d0b:	lock rol DWORD PTR [ecx+edx*2-0x80],cl
  422d10:	mov    ecx,0xf1a1ff12
  422d15:	inc    ebx
  422d16:	(bad)  
  422d17:	stc    
  422d18:	int3   
  422d19:	and    eax,0x683ce592
  422d1e:	pop    ebx
  422d1f:	(bad)  
  422d20:	fs test eax,0x4d469379
  422d26:	jno    0x422ceb
  422d28:	xor    ecx,DWORD PTR [esi]
  422d2a:	mov    edi,0x11944ce1
  422d2f:	dec    DWORD PTR [ecx-0x4e]
  422d32:	jmp    0x422d96
  422d34:	dec    esi
  422d35:	adc    edx,ebp
  422d37:	pushf  
  422d38:	jmp    0x422ccb
  422d3a:	jne    0x422d33
  422d3c:	out    0xc5,eax
  422d3e:	mov    dh,0x40
  422d40:	add    edx,ecx
  422d42:	mov    ch,0x1b
  422d44:	ret    0xae52
  422d47:	inc    ecx
  422d48:	mov    al,ds:0xd8b01f24
  422d4d:	jg     0x422cea
  422d4f:	mov    esi,0xbc420912
  422d54:	int    0xcf
  422d56:	div    DWORD PTR [eax+0x6f]
  422d59:	rcr    DWORD PTR es:0xfd3bdc3b,1
  422d60:	xchg   DWORD PTR [eax+0x2fc820b4],edx
  422d66:	mov    ah,dh
  422d68:	popf   
  422d69:	sub    ebp,0xec64aea8
  422d6f:	out    0x63,al
  422d71:	dec    edi
  422d72:	add    BYTE PTR [eax],cl
  422d74:	and    DWORD PTR [ecx+0x7b07bf8],edi
  422d7a:	jmp    0x422db3
  422d7c:	jo     0x422d43
  422d7e:	jmp    0xa0e173a8
  422d83:	inc    edx
  422d84:	mov    ss,WORD PTR [ebx+0x4bcf21a6]
  422d8a:	aad    0x46
  422d8c:	inc    esi
  422d8d:	mov    ebx,DWORD PTR [ecx-0x47]
  422d90:	sub    dl,BYTE PTR [ebx]
  422d92:	es shl esp,1
  422d95:	sbb    eax,0x10e36aed
  422d9a:	add    BYTE PTR [edx+0x107b277a],bh
  422da0:	and    eax,0x91b08377
  422da5:	mov    dh,0xe9
  422da7:	sbb    al,0xcb
  422da9:	cmp    esi,ecx
  422dab:	ins    BYTE PTR es:[edi],dx
  422dac:	in     al,0x7c
  422dae:	fnstenv [edi]
  422db0:	pop    eax
  422db1:	xchg   BYTE PTR [esi+ebp*1+0x19cbe016],dh
  422db8:	dec    esi
  422db9:	stos   DWORD PTR es:[edi],eax
  422dba:	pushf  
  422dbb:	imul   edi,edi,0x5e
  422dbe:	dec    eax
  422dbf:	sub    eax,0xc5ffafc5
  422dc4:	mov    BYTE PTR [ecx-0x68],dh
  422dc7:	es shr BYTE PTR gs:[ebp+ecx*4+0x3c6d2e21],cl
  422dd0:	dec    ebp
  422dd1:	(bad)  
  422dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dd3:	sar    DWORD PTR gs:[eax+0x3a],cl
  422dd7:	(bad)  
  422dd8:	in     eax,0x6b
  422dda:	and    BYTE PTR [eax-0x6baf5b8d],al
  422de0:	xlat   BYTE PTR ds:[ebx]
  422de1:	imul   esp,DWORD PTR [ebx+0x4cb9c23d],0xe6d6b295
  422deb:	xor    eax,DWORD PTR [edi+0x6d]
  422dee:	loop   0x422e23
  422df0:	std    
  422df1:	int    0x8f
  422df3:	pop    es
  422df4:	mov    al,ds:0x9c2378b6
  422df9:	shl    BYTE PTR [ecx+0x1e],0x22
  422dfd:	fmul   DWORD PTR ds:0x28ce6f9d
  422e03:	int    0x58
  422e05:	jb     0x422e0f
  422e07:	mov    dl,0xa0
  422e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e0a:	leave  
  422e0b:	cs shl ecx,0x24
  422e0f:	mov    edi,DWORD PTR [eax+0x408973ed]
  422e15:	shl    ebx,1
  422e17:	fist   DWORD PTR ds:[ebx+0x5b]
  422e1b:	sbb    al,0xda
  422e1d:	outs   dx,BYTE PTR ds:[esi]
  422e1e:	push   ecx
  422e1f:	(bad)  
  422e20:	aaa    
  422e21:	data16 (bad) [ebx]
  422e24:	fucomip st,st(7)
  422e26:	mov    WORD PTR [ecx-0x2e1a0973],ss
  422e2c:	sahf   
  422e2d:	pop    ds
  422e2e:	gs dec esi
  422e30:	dec    ebx
  422e31:	loopne 0x422e23
  422e33:	and    dl,BYTE PTR [eax+0x7b]
  422e36:	push   0xf00d7594
  422e3b:	sahf   
  422e3c:	mov    al,ds:0x7fe34869
  422e41:	xchg   esp,eax
  422e42:	adc    esp,esi
  422e44:	pop    ebp
  422e45:	sub    al,0x82
  422e47:	xor    eax,0x420eb772
  422e4c:	and    al,0x54
  422e4e:	or     BYTE PTR [eax-0x1c],bl
  422e51:	inc    ebx
  422e52:	(bad)  
  422e53:	push   edx
  422e54:	mov    DWORD PTR [esi],ebp
  422e56:	sbb    al,0x2d
  422e58:	cdq    
  422e59:	(bad)  
  422e5a:	int    0x2e
  422e5c:	repnz adc BYTE PTR [eax-0x46d03d58],bl
  422e63:	jle    0x422e51
  422e65:	lahf   
  422e66:	or     esi,0x437acf8b
  422e6c:	icebp  
  422e6d:	or     BYTE PTR [ecx+0x7e],bl
  422e70:	loope  0x422ea1
  422e72:	not    ah
  422e74:	inc    edx
  422e75:	les    edi,FWORD PTR [edi]
  422e77:	sti    
  422e78:	and    ah,BYTE PTR [edi]
  422e7a:	push   ss
  422e7b:	sub    al,BYTE PTR [ebx+0x23]
  422e7e:	in     eax,0x9b
  422e80:	pushf  
  422e81:	dec    esi
  422e82:	hlt    
  422e83:	test   eax,0xeaa020ab
  422e88:	(bad)  
  422e8a:	ret    0x7ffb
  422e8d:	hlt    
  422e8e:	dec    edx
  422e8f:	fmul   DWORD PTR [ecx-0x323537c6]
  422e95:	enter  0x894d,0x4d
  422e99:	hlt    
  422e9a:	(bad)  
  422e9b:	(bad)  
  422e9c:	iret   
  422e9d:	dec    edx
  422e9e:	mov    bh,bl
  422ea0:	ss das 
  422ea2:	adc    DWORD PTR [ecx+0x4f735f6a],0x76
  422ea9:	xchg   ebx,eax
  422eaa:	mov    cl,BYTE PTR [edi+ebx*8]
  422ead:	in     al,dx
  422eae:	lahf   
  422eaf:	ins    DWORD PTR es:[edi],dx
  422eb0:	repnz hlt 
  422eb2:	jmp    0x355b:0x1f826d48
  422eb9:	push   ss
  422eba:	add    dl,ah
  422ebc:	xor    al,bh
  422ebe:	iret   
  422ebf:	push   ebp
  422ec0:	xor    ah,BYTE PTR [eax-0x44]
  422ec3:	push   ds
  422ec4:	xchg   esp,eax
  422ec5:	(bad)  
  422ec6:	aad    0xc3
  422ec8:	out    0x7f,al
  422eca:	or     bh,BYTE PTR [ebx-0x54]
  422ecd:	and    eax,0x7d241269
  422ed2:	int    0xca
  422ed4:	jmp    0x5e5d:0xf72ee1e
  422edb:	cmc    
  422edc:	fstp   TBYTE PTR [ecx]
  422ede:	(bad)
  422ee1:	mov    esi,DWORD PTR [edx-0x64]
  422ee4:	or     ch,BYTE PTR [ebx-0x2bbc677a]
  422eea:	push   es
  422eeb:	xchg   esi,eax
  422eec:	clc    
  422eed:	lock clc 
  422eef:	pop    es
  422ef0:	ds das 
  422ef2:	mov    bh,0x1c
  422ef4:	xor    BYTE PTR [esi-0x4040b066],dh
  422efa:	stos   DWORD PTR es:[edi],eax
  422efb:	jg     0x422f62
  422efd:	dec    esi
  422efe:	lock mov eax,ds:0x4ec4eeb8
  422f04:	fcom   DWORD PTR [eax]
  422f06:	pop    edi
  422f07:	mov    ecx,0x86892b41
  422f0c:	mov    ah,0x63
  422f0e:	mov    WORD PTR [ecx],gs
  422f10:	pop    es
  422f11:	pusha  
  422f12:	sbb    eax,0xc62085a7
  422f17:	sbb    al,BYTE PTR [eax]
  422f19:	inc    esi
  422f1a:	push   0xffffffd5
  422f1c:	cs mov bh,0x69
  422f1f:	jp     0x422ed9
  422f21:	iret   
  422f22:	(bad)  
  422f24:	mov    ecx,0x8543ffc9
  422f29:	loop   0x422f55
  422f2b:	dec    edi
  422f2c:	imul   al
  422f2e:	mov    al,0xbb
  422f30:	xchg   esi,eax
  422f31:	inc    ebp
  422f32:	loop   0x422f83
  422f34:	gs mov eax,0xe49be9d2
  422f3a:	adc    al,0xea
  422f3c:	mov    ds,WORD PTR [edi+0x321141a9]
  422f42:	jmp    0xe85133e0
  422f47:	fwait
  422f48:	shl    esi,1
  422f4a:	push   0x2f5cb4f8
  422f4f:	mov    fs,WORD PTR [ecx-0x41ff4df7]
  422f55:	nop
  422f56:	push   0xe040608d
  422f5b:	or     ebp,DWORD PTR [esi]
  422f5d:	add    DWORD PTR [ebx],ebx
  422f5f:	xchg   edi,eax
  422f60:	dec    ebp
  422f61:	xchg   ebp,eax
  422f62:	xchg   ebp,eax
  422f63:	js     0x422f96
  422f65:	call   0xbc7f:0x7b9b05d1
  422f6c:	test   edx,ecx
  422f6e:	ret    
  422f6f:	inc    BYTE PTR [edi]
  422f71:	int    0x94
  422f73:	pop    edx
  422f74:	cdq    
  422f75:	mov    eax,0xb27f722
  422f7a:	inc    ebx
  422f7b:	test   eax,0x9b2b049d
  422f80:	mov    BYTE PTR [eax-0x78],bl
  422f83:	sahf   
  422f84:	mov    cl,0x7c
  422f86:	loop   0x422f66
  422f88:	pusha  
  422f89:	mov    DWORD PTR ds:0xe7a94489,eax
  422f8f:	enter  0xfeb9,0x36
  422f93:	mov    esp,0x26cd20be
  422f98:	dec    edx
  422f99:	out    0xd,al
  422f9b:	jae    0x422fab
  422f9d:	fwait
  422f9e:	or     ah,BYTE PTR [ecx-0x54]
  422fa1:	sub    al,0x56
  422fa3:	sbb    eax,0x7c0483
  422fa8:	in     eax,0x7f
  422faa:	jbe    0x423029
  422fac:	repnz aad 0x84
  422faf:	xchg   ecx,eax
  422fb0:	sub    edx,DWORD PTR ds:0xdd91d2fa
  422fb6:	inc    ebp
  422fb7:	jne    0x422fd3
  422fb9:	push   ds
  422fba:	push   ds
  422fbb:	lock icebp 
  422fbd:	pushf  
  422fbe:	test   eax,0xf0b0ef3
  422fc3:	lock jbe 0x422fb4
  422fc6:	dec    edi
  422fc7:	in     eax,dx
  422fc8:	mov    edi,0x9c880a4c
  422fcd:	inc    edx
  422fce:	mov    ch,0x78
  422fd0:	aad    0xf7
  422fd2:	xchg   ebx,eax
  422fd3:	les    ecx,FWORD PTR [edx]
  422fd5:	jmp    0x422fb8
  422fd7:	stc    
  422fd8:	outs   dx,BYTE PTR ds:[esi]
  422fd9:	jns    0x422f9e
  422fdb:	outs   dx,DWORD PTR ds:[esi]
  422fdc:	cmp    BYTE PTR [edx],0x83
  422fdf:	rcr    DWORD PTR [eax+0x27cb39c5],cl
  422fe5:	inc    esp
  422fe6:	test   BYTE PTR [edi],al
  422fe8:	pop    edx
  422fe9:	and    cl,BYTE PTR [esi-0x5a49f554]
  422fef:	scas   al,BYTE PTR es:[edi]
  422ff0:	or     eax,0xaadbd5ec
  422ff5:	pop    es
  422ff6:	pop    ecx
  422ff7:	or     ch,BYTE PTR [ebx]
  422ff9:	mov    ah,0x25
  422ffb:	(bad)  
  422ffd:	pop    esp
  422ffe:	das    
  422fff:	cdq    
  423000:	xor    bl,ch
  423002:	jbe    0x42305f
  423004:	out    0x31,eax
  423006:	sub    DWORD PTR ds:0xbc6870cf,0xf7cdcff6
  423010:	shl    BYTE PTR es:[ebp-0x7e],0xd6
  423015:	mov    ecx,0xa48a1a16
  42301a:	lods   eax,DWORD PTR ds:[esi]
  42301b:	sbb    eax,0xd7d586d9
  423020:	out    0xb4,eax
  423022:	sar    BYTE PTR [ecx-0x76],cl
  423025:	pop    eax
  423026:	hlt    
  423027:	icebp  
  423028:	ret    
  423029:	jl     0x422fe0
  42302b:	mov    ch,0x17
  42302d:	(bad)  
  42302e:	(bad)  
  42302f:	jne    0x422ffb
  423031:	xor    DWORD PTR [ecx],esi
  423033:	popf   
  423034:	add    al,0xb2
  423036:	push   0x3b4535fb
  42303b:	stos   DWORD PTR es:[edi],eax
  42303c:	adc    DWORD PTR [esi+esi*4+0x38738295],0x6d8b7596
  423047:	pop    ss
  423048:	inc    esp
  423049:	out    dx,eax
  42304a:	pop    eax
  42304b:	pop    ds
  42304c:	int3   
  42304d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42304f:	sub    DWORD PTR ds:0xc34a3395,ebx
  423055:	push   edx
  423056:	scas   eax,DWORD PTR es:[edi]
  423057:	jl     0x423069
  423059:	push   0x200bb5d5
  42305e:	je     0x423040
  423060:	lock fwait
  423062:	push   eax
  423063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423064:	push   esi
  423065:	add    al,0xc
  423067:	retf   0xec9a
  42306a:	ss fwait
  42306c:	rdtsc  
  42306e:	sub    DWORD PTR [ecx+0x56],esp
  423071:	add    BYTE PTR ds:0x8bcd3e8a,ah
  423077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423078:	dec    ebp
  423079:	lea    ecx,[edi+0x29252447]
  42307f:	push   0xe80ccbd3
  423084:	add    esi,DWORD PTR [ecx]
  423086:	adc    DWORD PTR [edi],0xffffff8e
  423089:	sar    ah,0xbc
  42308c:	jl     0x423100
  42308e:	cmp    BYTE PTR [esi],dl
  423090:	xchg   edi,eax
  423091:	scas   al,BYTE PTR es:[edi]
  423092:	xchg   edx,eax
  423093:	push   ecx
  423094:	hlt    
  423095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423096:	je     0x42305a
  423098:	ret    
  423099:	loopne 0x4230ed
  42309b:	in     al,dx
  42309c:	push   ss
  42309d:	rol    edx,0x72
  4230a0:	pusha  
  4230a1:	lahf   
  4230a2:	inc    ebx
  4230a3:	lods   al,BYTE PTR ds:[esi]
  4230a4:	clc    
  4230a5:	pop    esi
  4230a6:	(bad)  
  4230a7:	je     0x423053
  4230a9:	xchg   ebx,eax
  4230aa:	call   0xccdf:0xf7524f84
  4230b1:	test   DWORD PTR [ebx],ebp
  4230b3:	xchg   ebx,eax
  4230b4:	(bad)  
  4230b5:	cmc    
  4230b6:	mov    cs,WORD PTR [ecx-0x5d4f81a8]
  4230bc:	sbb    ebp,ebx
  4230be:	push   ebp
  4230bf:	rcr    BYTE PTR [edx+0x47e1f99a],1
  4230c5:	push   ds
  4230c6:	pop    ecx
  4230c7:	pop    ss
  4230c8:	jns    0x42308c
  4230ca:	bnd call 0x77310f66
  4230d0:	outs   dx,DWORD PTR ds:[esi]
  4230d1:	jno    0x4230ec
  4230d3:	aas    
  4230d4:	sbb    bl,ah
  4230d6:	pop    es
  4230d7:	xor    edx,DWORD PTR [edi]
  4230d9:	loop   0x42310d
  4230db:	test   ax,0x2907
  4230df:	rcr    BYTE PTR [edi-0x1c985214],0x49
  4230e6:	adc    DWORD PTR [edx+0x51],ebx
  4230e9:	aaa    
  4230ea:	imul   edi,DWORD PTR [esi+esi*2],0xffffffb7
  4230ee:	add    al,0x21
  4230f0:	jne    0x42312d
  4230f2:	xchg   eax,edi
  4230f4:	push   esi
  4230f5:	adc    DWORD PTR [ecx+0x1f],eax
  4230f8:	out    dx,eax
  4230f9:	inc    edx
  4230fa:	(bad)  
  4230fb:	loope  0x423092
  4230fd:	lea    esi,[ebx-0x6c]
  423100:	jmp    0x44b1:0xfaa7aac9
  423107:	cmp    eax,0xc31f93a2
  42310c:	sbb    eax,0x8a0d73e5
  423111:	push   cs
  423112:	dec    eax
  423113:	xchg   ecx,eax
  423114:	mov    ch,0x97
  423116:	fild   WORD PTR [edx+0x75139a09]
  42311c:	jmp    0x4230d8
  42311e:	rcl    DWORD PTR [eax+0x33],cl
  423121:	(bad)  
  423122:	cmp    ebp,DWORD PTR [edi+0x17]
  423125:	aaa    
  423126:	push   ebp
  423127:	and    al,0x42
  423129:	clc    
  42312a:	gs call 0xffc200d0
  423130:	xor    bl,BYTE PTR [edi]
  423132:	xor    eax,0xac1bd099
  423137:	sbb    bl,bl
  423139:	dec    edi
  42313a:	dec    eax
  42313b:	dec    BYTE PTR [ebx+0x27]
  42313e:	adc    DWORD PTR [esi],esp
  423140:	and    eax,0x579a5f6e
  423145:	sbb    DWORD PTR cs:[ecx+eiz*8+0x0],edx
  42314a:	and    DWORD PTR [ecx+0x54],ebp
  42314d:	hlt    
  42314e:	sbb    BYTE PTR [ecx+0x1ed7472a],bl
  423154:	jns    0x42318d
  423156:	outs   dx,BYTE PTR ds:[esi]
  423157:	dec    esp
  423158:	hlt    
  423159:	jbe    0x42312f
  42315b:	loopne 0x4231a8
  42315d:	jb     0x423197
  42315f:	cmp    DWORD PTR [edx+0x5a],ecx
  423162:	repz je 0x42319c
  423165:	xlat   BYTE PTR ds:[ebx]
  423166:	mul    BYTE PTR [edx-0x7c80a0ba]
  42316c:	sbb    DWORD PTR [esi+0x15832f53],esi
  423172:	and    DWORD PTR [edi-0x3a48dcf],edi
  423178:	pusha  
  423179:	xor    al,0x5f
  42317b:	cwde   
  42317c:	dec    ebp
  42317d:	fcom   QWORD PTR [esp+ebp*4+0x55c1e220]
  423184:	or     edi,ebx
  423186:	pop    eax
  423187:	ret    0x79ea
  42318a:	adc    BYTE PTR [ebx+0x1f],ah
  42318d:	add    dh,BYTE PTR [edi-0x2ec5e884]
  423193:	pop    edx
  423194:	push   ecx
  423195:	and    edi,edi
  423197:	stos   DWORD PTR es:[edi],eax
  423198:	addr16 jbe 0x423154
  42319b:	out    0x80,eax
  42319d:	les    eax,FWORD PTR ss:[ebx]
  4231a0:	mov    BYTE PTR [eax],cl
  4231a2:	(bad)  
  4231a3:	shr    DWORD PTR [eax+edx*4],1
  4231a6:	inc    edi
  4231a7:	pusha  
  4231a8:	mov    ebp,DWORD PTR [eax]
  4231aa:	fidivr WORD PTR [edi]
  4231ac:	pushf  
  4231ad:	mov    dl,0xcf
  4231af:	leave  
  4231b0:	xchg   ebx,eax
  4231b1:	sub    cl,al
  4231b3:	adc    BYTE PTR [ebp+0x68],0x49
  4231b7:	and    BYTE PTR [eax+0x22627b12],cl
  4231bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231be:	dec    esp
  4231bf:	jbe    0x423238
  4231c1:	call   0x46e8180e
  4231c6:	xchg   BYTE PTR [ebx+0x7ecb5ab6],dh
  4231cc:	call   0x2b940600
  4231d1:	mov    ecx,0x5c1d8261
  4231d6:	inc    ebp
  4231d7:	or     BYTE PTR [ecx-0x4a],cl
  4231da:	pop    ss
  4231db:	dec    edx
  4231dc:	and    al,0x63
  4231de:	push   esi
  4231df:	fs stos BYTE PTR es:[edi],al
  4231e1:	cmp    BYTE PTR [ebx+0x3f7e88b9],ah
  4231e7:	push   cs
  4231e8:	xchg   esp,eax
  4231e9:	mov    al,0x75
  4231eb:	adc    al,0xa4
  4231ed:	(bad)  
  4231ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231ef:	and    bl,BYTE PTR [ebp-0x5d8f5ad7]
  4231f5:	dec    esp
  4231f6:	f2xm1  
  4231f8:	enter  0x3c65,0xab
  4231fc:	sub    esi,0xffffffb3
  4231ff:	in     al,dx
  423200:	mov    al,BYTE PTR [edx+0x678d452c]
  423206:	(bad)  
  423208:	jmp    0xfda7:0xb5ab467
  42320f:	(bad)  
  423211:	add    edx,DWORD PTR [esi+eax*1-0x72]
  423215:	jns    0x423291
  423217:	sub    dl,BYTE PTR [esi+ebx*4+0xf9d9717]
  42321e:	fstp   QWORD PTR [edx+edi*2]
  423221:	dec    eax
  423222:	std    
  423223:	and    al,ah
  423225:	xchg   ebp,eax
  423226:	mov    BYTE PTR [edi],ch
  423228:	loopne 0x42321a
  42322a:	mov    al,0x98
  42322c:	aam    0x1a
  42322e:	inc    esi
  42322f:	fwait
  423230:	test   DWORD PTR [eax+0x6d],ebp
  423233:	ja     0x423241
  423235:	or     al,0x21
  423237:	add    al,0xdc
  423239:	sbb    esp,ebx
  42323b:	ss dec ebx
  42323d:	mov    DWORD PTR [eax-0x71],edx
  423240:	dec    esp
  423241:	jp     0x4232a0
  423243:	call   0x38c8ce59
  423248:	fs xchg DWORD PTR ss:[esi+ecx*1+0x5d],esp
  42324e:	adc    edx,esi
  423250:	hlt    
  423251:	adc    al,0x75
  423253:	fisttp WORD PTR [ecx-0x6c]
  423256:	inc    esi
  423257:	ja     0x4232b7
  423259:	ins    DWORD PTR es:[edi],dx
  42325a:	push   edx
  42325b:	call   0x46715cab
  423260:	sub    eax,DWORD PTR [esi+eiz*8+0x5096c0c1]
  423267:	push   ss
  423268:	inc    eax
  423269:	fcomip st,st(7)
  42326b:	test   DWORD PTR [esi],ecx
  42326d:	jl     0x42323a
  42326f:	sar    BYTE PTR [edx+esi*1],1
  423272:	rol    DWORD PTR ds:[edx-0x3c],0x24
  423277:	jl     0x42328b
  423279:	test   al,0x4
  42327b:	scas   eax,DWORD PTR es:[edi]
  42327c:	mov    ds:0x26143d4b,eax
  423281:	sub    BYTE PTR [esi],dl
  423283:	inc    esi
  423284:	xchg   edi,eax
  423285:	cwde   
  423286:	repnz into 
  423288:	ret    0x25dc
  42328b:	(bad)  
  42328d:	pop    edx
  42328e:	test   eax,0x28db27f1
  423293:	nop
  423294:	repz mov al,ds:0xe0288d08
  42329a:	fimul  DWORD PTR [esi+0x3a63c202]
  4232a0:	xchg   BYTE PTR [ecx-0x56],cl
  4232a3:	sbb    bh,BYTE PTR [edi-0x4dc977bb]
  4232a9:	lds    esi,FWORD PTR [esi-0x6f]
  4232ac:	ins    BYTE PTR es:[edi],dx
  4232ad:	and    al,0xa1
  4232af:	pop    ecx
  4232b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232b1:	lods   eax,DWORD PTR ds:[esi]
  4232b2:	bound  esp,QWORD PTR ss:[esi]
  4232b5:	jl     0x423329
  4232b7:	jo     0x42328f
  4232b9:	les    edi,FWORD PTR [ecx+0x1be18584]
  4232bf:	or     ch,ch
  4232c1:	sub    eax,0xb2f69131
  4232c6:	sub    DWORD PTR [eax-0x7],edx
  4232c9:	fdiv   QWORD PTR [eax-0x7362b023]
  4232cf:	pusha  
  4232d0:	xor    eax,DWORD PTR [edx+0x3e]
  4232d3:	pop    ss
  4232d4:	(bad)  
  4232d6:	lock xchg esi,eax
  4232d8:	mov    edi,0x1e2ac848
  4232dd:	and    eax,0xf24b032
  4232e2:	jl     0x42335c
  4232e4:	and    eax,0xbe8b7efb
  4232e9:	fdiv   st,st(6)
  4232eb:	xor    BYTE PTR [esi-0x47],al
  4232ee:	jg     0x423290
  4232f0:	push   edi
  4232f1:	fadd   QWORD PTR [eax]
  4232f3:	repz push ecx
  4232f5:	loope  0x423335
  4232f7:	aaa    
  4232f8:	mov    dh,0x9a
  4232fa:	stos   DWORD PTR es:[edi],eax
  4232fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232fc:	imul   ecx,DWORD PTR [esi],0xfffffff2
  4232ff:	in     eax,dx
  423300:	push   ds
  423301:	mov    edx,0x80f97a37
  423306:	adc    esi,DWORD PTR [esi*4+0x2d7cf63]
  42330d:	xor    al,0xe
  42330f:	jmp    0x1feb2434
  423314:	in     eax,dx
  423315:	sar    DWORD PTR [ebp+0xcfbb47a],1
  42331b:	iret   
  42331c:	or     ebx,DWORD PTR [ecx-0x30]
  42331f:	dec    eax
  423320:	shr    BYTE PTR [edx-0x46],cl
  423323:	les    ebx,FWORD PTR [esi-0x15]
  423326:	jno    0x423375
  423328:	pop    ecx
  423329:	js     0x4232ef
  42332b:	int3   
  42332c:	daa    
  42332d:	xor    DWORD PTR [edi+ecx*4-0x3dd982bb],ebx
  423334:	mov    al,ds:0x3fa12a37
  423339:	xor    ecx,esi
  42333b:	and    eax,0xdb5c323e
  423340:	sub    dl,BYTE PTR [edi]
  423342:	and    DWORD PTR [esi+0x6e],edx
  423345:	pop    ecx
  423346:	out    dx,al
  423347:	xchg   ebx,eax
  423348:	shr    DWORD PTR [edi+0x23fa0310],0x56
  42334f:	fisub  DWORD PTR [edi+0x13]
  423352:	and    ch,bh
  423354:	adc    DWORD PTR [esi+0x4e45cbf9],esi
  42335a:	adc    BYTE PTR [ebx+esi*8],dl
  42335d:	fbld   TBYTE PTR [ecx+0x46]
  423360:	repz mov ds:0x1e7463bf,eax
  423366:	scas   eax,DWORD PTR es:[edi]
  423367:	cwde   
  423368:	pop    ebp
  423369:	sbb    al,0xd6
  42336b:	sbb    eax,0xd7a31cbb
  423370:	daa    
  423371:	inc    ecx
  423372:	sbb    DWORD PTR [eax],0x2a
  423375:	xor    eax,0x5897e918
  42337a:	push   ebp
  42337b:	das    
  42337c:	cld    
  42337d:	xchg   edx,eax
  42337e:	sub    DWORD PTR [ecx],eax
  423380:	xor    bh,BYTE PTR [edi+0x18620507]
  423386:	das    
  423387:	sahf   
  423388:	sbb    dl,dh
  42338a:	std    
  42338b:	imul   edx,DWORD PTR [esi],0xffffff9a
  42338e:	pop    ss
  42338f:	out    0xc0,al
  423391:	mov    ds:0x9f0f5abd,eax
  423396:	adc    edi,DWORD PTR [eax]
  423398:	pop    ds
  423399:	call   0xb2:0x9bbe7b14
  4233a0:	cmp    DWORD PTR [edx+0x47],ebx
  4233a3:	fistp  DWORD PTR [edi-0x35e0e491]
  4233a9:	rcl    DWORD PTR [esi*2-0x7d851e0b],0x62
  4233b1:	(bad)  
  4233b3:	int    0xe7
  4233b5:	aas    
  4233b6:	das    
  4233b7:	xchg   ebp,eax
  4233b8:	pop    esi
  4233b9:	sahf   
  4233ba:	fwait
  4233bb:	in     al,0x86
  4233bd:	and    eax,0x109e5671
  4233c2:	sub    eax,0xc0e263a1
  4233c7:	jne    0x4233d2
  4233c9:	jmp    0xdc2:0xd173e6
  4233d0:	imul   esi,DWORD PTR [eax-0x2a],0x7482b942
  4233d7:	and    eax,0x99981003
  4233dc:	xchg   DWORD PTR [eax-0x3e],ebx
  4233df:	sbb    esp,DWORD PTR [edi-0x51]
  4233e2:	loop   0x423401
  4233e4:	out    0x3,al
  4233e6:	mov    bh,0xa0
  4233e8:	xor    eax,0xbbd81dc0
  4233ed:	xor    eax,0x98d84e1f
  4233f2:	push   ds
  4233f3:	inc    ecx
  4233f4:	das    
  4233f5:	and    al,0x68
  4233f7:	xchg   ebx,eax
  4233f8:	pop    esi
  4233f9:	enter  0xb0fc,0xfa
  4233fd:	arpl   WORD PTR [ecx-0x77],ax
  423400:	dec    ebx
  423401:	jle    0x4233d5
  423403:	xchg   ecx,eax
  423404:	out    dx,eax
  423405:	sbb    eax,edx
  423407:	repnz cmp al,0x12
  42340a:	inc    edi
  42340b:	cli    
  42340c:	sub    esi,eax
  42340e:	dec    esi
  42340f:	cmp    cl,ch
  423411:	inc    esi
  423412:	addr16 mov eax,0x9171adbf
  423418:	rol    DWORD PTR [ebp-0x5f978ebf],1
  42341e:	xchg   esi,eax
  42341f:	stos   DWORD PTR es:[edi],eax
  423420:	imul   edx,DWORD PTR [ebx+0x5a68a717],0x6b
  423427:	and    eax,0xa5c41520
  42342c:	jb     0x423498
  42342e:	bound  ebp,QWORD PTR [ebx+0x57]
  423431:	pop    ss
  423432:	scas   al,BYTE PTR es:[edi]
  423433:	xor    edi,DWORD PTR [ebx]
  423435:	arpl   WORD PTR [ebx],di
  423437:	adc    al,bl
  423439:	inc    edi
  42343a:	sub    WORD PTR [ecx+eiz*4-0x3ced338],dx
  423442:	popa   
  423443:	les    ebx,FWORD PTR [ebx-0x2050ac37]
  423449:	sbb    BYTE PTR [edx-0x21615e83],dh
  42344f:	ins    BYTE PTR es:[edi],dx
  423450:	or     DWORD PTR [edx],eax
  423452:	sbb    al,0xa
  423454:	js     0x423436
  423456:	sbb    BYTE PTR [eax+0x1d],al
  423459:	loope  0x4233e4
  42345b:	mov    ebp,0x289c14e
  423460:	sti    
  423461:	call   0x1942:0x90655c1a
  423468:	(bad)  
  423469:	sub    al,BYTE PTR [eax]
  42346b:	and    esp,DWORD PTR es:[esi+0x67]
  42346f:	push   edi
  423470:	aaa    
  423471:	pop    ebp
  423472:	bnd jg 0x4234a2
  423475:	leave  
  423476:	iret   
  423477:	push   0xc6559626
  42347c:	shr    DWORD PTR [ecx+0x60],1
  42347f:	sub    BYTE PTR [ebx-0x34],cl
  423482:	mov    cl,0x3a
  423484:	sub    ch,bh
  423486:	or     eax,DWORD PTR [edi-0x25]
  423489:	mov    ebp,0x61b395a
  42348e:	test   eax,0x5682aa00
  423493:	or     BYTE PTR [esi-0x1ecf2617],0x99
  42349a:	dec    ebx
  42349b:	jae    0x423516
  42349d:	lods   eax,DWORD PTR ds:[esi]
  42349e:	test   BYTE PTR [esi+ebp*2+0x41446639],bl
  4234a5:	repnz and edx,DWORD PTR [ecx+0x28]
  4234a9:	jg     0x42350e
  4234ab:	jle    0x42345c
  4234ad:	pop    ebx
  4234ae:	sqrtps xmm7,xmm2
  4234b1:	pushf  
  4234b2:	addr16 in eax,dx
  4234b4:	repz adc eax,0x65854604
  4234ba:	(bad)  
  4234bb:	jbe    0x423497
  4234bd:	mov    esp,0xbaa30ddc
  4234c2:	xchg   ebp,eax
  4234c3:	sti    
  4234c4:	sub    esp,DWORD PTR [eax]
  4234c6:	xchg   edi,eax
  4234c7:	jbe    0x4234ef
  4234c9:	outs   dx,BYTE PTR gs:[esi]
  4234cb:	ss out dx,ax
  4234ce:	mov    ah,0x1a
  4234d0:	mov    BYTE PTR [eax+0x7d],ah
  4234d3:	loopne 0x4234ff
  4234d5:	lods   al,BYTE PTR ds:[esi]
  4234d6:	call   0xc3fd:0xcdd00965
  4234dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234de:	(bad)  
  4234df:	mov    eax,ecx
  4234e1:	mov    BYTE PTR [edi],ch
  4234e3:	mov    al,ds:0xf427626f
  4234e8:	cli    
  4234e9:	sub    ah,BYTE PTR [ebp+0x7]
  4234ec:	int    0x7c
  4234ee:	cmp    al,0xaf
  4234f0:	clc    
  4234f1:	loopne 0x4234c8
  4234f3:	fwait
  4234f4:	adc    bl,al
  4234f6:	sbb    al,0xc8
  4234f8:	aam    0x9b
  4234fa:	lock scas al,BYTE PTR es:[edi]
  4234fc:	mov    ebp,0x1c4f14e3
  423501:	xlat   BYTE PTR ds:[ebx]
  423502:	adc    DWORD PTR [esp],0xffffff92
  423506:	adc    bl,BYTE PTR [esi+ecx*2]
  423509:	icebp  
  42350a:	(bad)  
  42350b:	xor    esi,eax
  42350d:	pop    esp
  42350e:	loopne 0x423527
  423510:	lar    esi,cx
  423513:	stc    
  423514:	xchg   edx,eax
  423515:	rcl    DWORD PTR [eax+0x15813a9d],0xb3
  42351c:	pop    ds
  42351d:	adc    al,0xf3
  42351f:	sub    edi,edx
  423521:	dec    esp
  423522:	and    DWORD PTR es:[edx+0x11],ebx
  423526:	daa    
  423527:	idiv   BYTE PTR [edi+0x28242c5c]
  42352d:	dec    esp
  42352e:	pop    ebp
  42352f:	fcmovnu st,st(6)
  423531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423532:	pushf  
  423533:	add    BYTE PTR [ecx],bh
  423535:	mov    BYTE PTR ds:0x77ae2d1e,dh
  42353b:	add    DWORD PTR [edi],edx
  42353d:	or     esp,DWORD PTR [ebp+0x22]
  423540:	inc    esi
  423541:	jno    0x423513
  423543:	pop    esp
  423544:	ror    BYTE PTR [edi-0x58174c86],cl
  42354a:	or     ebp,ebp
  42354c:	retf   0x6870
  42354f:	sub    BYTE PTR [edx-0x14b77981],dh
  423555:	sub    DWORD PTR [ecx+0x410973f6],esi
  42355b:	fs xor cl,al
  42355e:	in     eax,dx
  42355f:	es test ecx,0xa09a03f4
  423566:	std    
  423567:	in     al,0xf1
  423569:	fadd   DWORD PTR [edi+0x73991dcf]
  42356f:	push   ebx
  423570:	imul   ecx,DWORD PTR [edi-0x7befab4d],0x54ddc779
  42357a:	ds ins DWORD PTR es:[edi],dx
  42357c:	pop    esi
  42357d:	pop    esp
  42357e:	pop    es
  42357f:	cmp    cl,BYTE PTR [esi]
  423581:	iret   
  423582:	pop    edx
  423583:	sbb    al,0x7e
  423585:	es sbb cl,ch
  423588:	mov    WORD PTR [ecx-0x20],gs
  42358b:	ret    0xe1f5
  42358e:	sbb    eax,0x189037fc
  423593:	jo     0x4235d7
  423595:	or     edx,edx
  423597:	test   eax,0x90494081
  42359c:	fimul  WORD PTR [ecx-0x21ddb17a]
  4235a2:	xchg   ebx,eax
  4235a3:	xor    al,0xa7
  4235a5:	or     bl,BYTE PTR [ecx+0x2d]
  4235a8:	xor    BYTE PTR [eax-0x76],cl
  4235ab:	mov    dl,0xe2
  4235ad:	pop    ebp
  4235ae:	jmp    0x42355c
  4235b0:	not    DWORD PTR [esi+ebp*1-0xc]
  4235b4:	repnz test al,0x92
  4235b7:	stos   DWORD PTR es:[edi],eax
  4235b8:	jo     0x423613
  4235ba:	xchg   sp,ax
  4235bc:	xlat   BYTE PTR ds:[ebx]
  4235bd:	pushf  
  4235be:	xor    BYTE PTR [eax-0x49ca7bbe],0xa5
  4235c5:	outs   dx,DWORD PTR ds:[esi]
  4235c6:	mov    dh,0xf5
  4235c8:	and    eax,0x486ea6bc
  4235cd:	inc    esp
  4235ce:	pop    ebp
  4235cf:	inc    eax
  4235d0:	addr16 push edx
  4235d2:	xchg   DWORD PTR [edi+0x61],ecx
  4235d5:	shl    DWORD PTR [ebx],0x92
  4235d8:	jno    0x423600
  4235da:	dec    esi
  4235db:	mov    edx,0x6c8d9b9f
  4235e0:	add    eax,0xa4200fb1
  4235e5:	(bad)  
  4235e6:	outs   dx,DWORD PTR ds:[esi]
  4235e7:	sti    
  4235e8:	fld    st(5)
  4235ea:	mov    bl,0xad
  4235ec:	(bad)  
  4235ed:	rep movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4235f0:	mov    edx,DWORD PTR [eax+0x200d9def]
  4235f6:	or     BYTE PTR [edx+0x5f7c9b3f],0xdc
  4235fd:	jno    0x423607
  4235ff:	and    BYTE PTR [ebx],0x42
  423602:	pusha  
  423603:	push   edx
  423604:	loope  0x423595
  423606:	das    
  423607:	out    dx,eax
  423608:	mov    WORD PTR [eax+0x6587fda8],fs
  42360e:	test   DWORD PTR [ebx],eax
  423610:	or     al,0x22
  423612:	xchg   edi,eax
  423613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423614:	clc    
  423615:	sbb    DWORD PTR [ebp+0x790d7908],eax
  42361b:	out    dx,eax
  42361c:	ret    
  42361d:	in     al,0xcd
  42361f:	out    0x1b,al
  423621:	jle    0x4235c7
  423623:	adc    eax,0xa568eda2
  423628:	pop    ebp
  423629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42362a:	cmp    DWORD PTR [eax-0x7fe22149],ecx
  423630:	mov    ecx,0xd25194ba
  423635:	or     eax,0xc14c3ac
  42363a:	in     eax,dx
  42363b:	outs   dx,BYTE PTR ds:[esi]
  42363c:	popf   
  42363d:	xchg   ecx,eax
  42363e:	fimul  WORD PTR ss:[esi+0x68c0c787]
  423645:	add    BYTE PTR [edx+0x2c],bl
  423648:	pop    esp
  423649:	in     al,dx
  42364a:	jae    0x4235fa
  42364c:	cld    
  42364d:	pop    esi
  42364e:	cmp    dl,BYTE PTR [esi-0x7510381a]
  423654:	cmp    edx,eax
  423656:	jb     0x423613
  423658:	cmp    BYTE PTR ds:0x4c93acbc,dl
  42365e:	ins    BYTE PTR es:[edi],dx
  42365f:	sbb    dh,bh
  423661:	fsubr  QWORD PTR [ebp-0x42]
  423664:	rol    esi,cl
  423666:	xor    eax,0xb16550cc
  42366b:	inc    edx
  42366c:	pop    DWORD PTR [ebx+0x25b27f72]
  423672:	pop    ebx
  423673:	lock cmp eax,ebx
  423676:	mov    ah,0xf8
  423678:	ins    DWORD PTR es:[edi],dx
  423679:	push   edx
  42367a:	rep ins DWORD PTR es:[edi],dx
  42367c:	dec    esi
  42367d:	mov    bh,0x32
  42367f:	pop    edi
  423680:	push   ds
  423681:	lock mov BYTE PTR [eax+edx*1+0x35],ah
  423686:	dec    esp
  423687:	into   
  423688:	xlat   BYTE PTR ds:[ebx]
  423689:	push   ebx
  42368a:	js     0x42360f
  42368c:	push   eax
  42368d:	xchg   esp,eax
  42368e:	pop    ss
  42368f:	aam    0xc0
  423691:	jmp    0xd820198c
  423696:	xor    edi,DWORD PTR [esi+0x6efaf1e8]
  42369c:	pop    edx
  42369d:	adc    DWORD PTR [ecx-0x7f251216],ebx
  4236a3:	scas   al,BYTE PTR es:[edi]
  4236a4:	and    BYTE PTR [esi+0x777d3155],ch
  4236aa:	jg     0x42369c
  4236ac:	sbb    DWORD PTR [ebx],esp
  4236ae:	dec    ebp
  4236af:	mov    ecx,0x3712cda8
  4236b4:	sbb    DWORD PTR [edx-0x29],eax
  4236b7:	fs jl  0x423731
  4236ba:	xor    al,0xa9
  4236bc:	mov    bl,0x0
  4236be:	dec    esp
  4236bf:	cdq    
  4236c0:	ret    
  4236c1:	cmp    ch,BYTE PTR [ebx+0x4a]
  4236c4:	clc    
  4236c5:	push   ss
  4236c6:	inc    edx
  4236c7:	mov    DWORD PTR [ebp+esi*4+0x1840ca2e],0x658d80b8
  4236d2:	shl    DWORD PTR ds:0xd80571b9,cl
  4236d8:	xchg   ebx,eax
  4236d9:	gs js  0x423756
  4236dc:	adc    DWORD PTR [esi-0x43],ebp
  4236df:	aad    0x7b
  4236e1:	ret    0x9eff
  4236e4:	loop   0x4236a4
  4236e6:	cmc    
  4236e7:	xchg   ebp,eax
  4236e8:	mov    bh,0x5c
  4236ea:	fmul   QWORD PTR ds:0x57d05188
  4236f0:	push   eax
  4236f1:	sbb    ebp,ebx
  4236f3:	xchg   esp,eax
  4236f4:	in     al,0x1c
  4236f6:	test   ebp,eax
  4236f8:	dec    esp
  4236f9:	aad    0xf6
  4236fb:	pop    edx
  4236fc:	push   cs
  4236fd:	test   ebp,ecx
  4236ff:	sub    DWORD PTR [eiz*2+0x30c28e95],esp
  423706:	jmp    0xa03fb066
  42370b:	sub    eax,0xac8d23e8
  423710:	es pop ebp
  423712:	faddp  st(5),st
  423715:	pop    edx
  423716:	lahf   
  423717:	jae    0x423705
  423719:	aam    0xef
  42371b:	cwde   
  42371c:	dec    esp
  42371d:	pushf  
  42371e:	scas   eax,DWORD PTR es:[edi]
  42371f:	out    dx,al
  423720:	inc    esi
  423721:	sub    BYTE PTR [esi+0x22f522ff],dh
  423727:	ss xchg esi,eax
  423729:	sbb    bx,0x70
  42372d:	push   ebp
  42372e:	into   
  42372f:	push   esp
  423730:	in     al,dx
  423731:	sbb    al,0xab
  423733:	pop    ebp
  423734:	lods   al,BYTE PTR ds:[esi]
  423735:	xlat   BYTE PTR ds:[ebx]
  423736:	jo     0x42370f
  423738:	pop    ds
  423739:	shr    BYTE PTR [ebx],1
  42373b:	and    edx,eax
  42373d:	ficom  WORD PTR [esi+eax*1]
  423740:	out    dx,al
  423741:	adc    esi,DWORD PTR [ebp+0x1c53f858]
  423747:	shr    DWORD PTR [edi+0x5c67f8ec],0x5e
  42374e:	and    BYTE PTR [ecx+0x1d],dl
  423751:	repz imul BYTE PTR [ebp-0xb160f92]
  423758:	push   esp
  423759:	ins    BYTE PTR es:[edi],dx
  42375a:	int    0x6c
  42375c:	jle    0x4237bf
  42375e:	lahf   
  42375f:	lods   eax,DWORD PTR ds:[esi]
  423760:	call   0xf6a51ecf
  423765:	in     al,0xd8
  423767:	dec    ebx
  423768:	xor    al,0xcc
  42376a:	stos   DWORD PTR es:[edi],eax
  42376b:	jmp    0x4237d2
  42376d:	pusha  
  42376e:	and    BYTE PTR [edi-0x38ea08d7],dh
  423774:	add    edi,edx
  423776:	gs pop ds
  423778:	fcmove st,st(5)
  42377a:	imul   BYTE PTR [edi-0x2f25c92]
  423780:	push   ecx
  423781:	mov    cl,BYTE PTR [ebp+0x74]
  423784:	nop
  423785:	adc    ebp,ebx
  423787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423788:	mov    cl,BYTE PTR [esi-0x21]
  42378b:	int3   
  42378c:	std    
  42378d:	imul   esp,edi,0x3a
  423790:	dec    esi
  423791:	xchg   ebx,eax
  423792:	jle    0x42380f
  423794:	jp     0x42371b
  423796:	xchg   ecx,eax
  423797:	jae    0x423723
  423799:	pop    es
  42379a:	push   ebp
  42379b:	ins    BYTE PTR es:[edi],dx
  42379c:	fisttp WORD PTR [ebx+0x34211fdf]
  4237a2:	mov    BYTE PTR gs:[ebx-0x646f5592],dh
  4237a9:	sti    
  4237aa:	jno    0x4237c5
  4237ac:	neg    BYTE PTR [edi]
  4237ae:	out    dx,al
  4237af:	jmp    0x3b04cca3
  4237b4:	aaa    
  4237b5:	dec    ecx
  4237b6:	pop    ss
  4237b7:	sub    BYTE PTR fs:[edi-0x63],0x6b
  4237bc:	dec    edi
  4237bd:	mov    esi,edx
  4237bf:	mov    esp,0x994431a0
  4237c4:	loopne 0x42378d
  4237c6:	sbb    eax,0xb3a3d989
  4237cb:	mov    dl,0x14
  4237cd:	inc    esi
  4237ce:	and    DWORD PTR [edi],esi
  4237d0:	lock shl dh,0x2e
  4237d4:	mov    DWORD PTR [ebx+0x39],edi
  4237d7:	ror    DWORD PTR [ecx+0x3f],1
  4237da:	enter  0xa07a,0x78
  4237de:	aas    
  4237df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237e0:	fisttp DWORD PTR [eax-0x19]
  4237e3:	or     al,BYTE PTR [ecx+0x35a1dea6]
  4237e9:	xor    al,0x31
  4237eb:	pop    esi
  4237ec:	push   edx
  4237ed:	mov    ds:0xc7be1dff,eax
  4237f2:	icebp  
  4237f3:	mov    edi,0x46e72f27
  4237f8:	and    cl,BYTE PTR [ebp-0x337c912c]
  4237fe:	and    eax,0xf6fbb53e
  423803:	loope  0x423847
  423805:	(bad)  
  423806:	fs cmp al,0x5e
  423809:	push   eax
  42380a:	dec    ebp
  42380b:	xor    esi,DWORD PTR [ebx+0x7c]
  42380e:	adc    al,0x38
  423810:	and    bh,BYTE PTR [eax+0x4d101757]
  423816:	mov    edx,DWORD PTR [ebp+0x57c5f853]
  42381c:	push   es
  42381d:	dec    esi
  42381e:	in     eax,0xe8
  423820:	repnz rcr BYTE PTR [ebx-0x68],1
  423824:	or     BYTE PTR [esi+0x61],0x4e
  423828:	dec    edi
  423829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42382a:	jmp    0x42384f
  42382c:	(bad)  
  42382e:	in     eax,dx
  42382f:	add    edx,DWORD PTR [eax-0x48786e49]
  423835:	dec    edx
  423836:	xor    ebp,DWORD PTR ds:0xa08bcaa6
  42383c:	ins    BYTE PTR es:[edi],dx
  42383d:	repnz or al,0x7e
  423840:	retf   0x4357
  423843:	jmp    0xae7a:0x899d17ef
  42384a:	ins    DWORD PTR es:[edi],dx
  42384b:	or     BYTE PTR [ebx+0x2417620a],al
  423851:	js     0x42383c
  423853:	and    al,0x69
  423855:	pop    ss
  423856:	or     edx,DWORD PTR [ebx+eax*8+0x1b2010b4]
  42385d:	mov    ebp,0x571bf2c
  423862:	and    BYTE PTR [edi],cl
  423864:	dec    esp
  423865:	mov    esi,0x5fc90434
  42386a:	add    BYTE PTR [ebx-0x50e3b43d],al
  423870:	adc    ah,BYTE PTR [esi]
  423872:	cs push ebx
  423874:	jmp    0x6a4:0xec76b0db
  42387b:	dec    edx
  42387c:	retf   
  42387d:	ror    BYTE PTR ss:[eax],0xa9
  423881:	ins    BYTE PTR es:[edi],dx
  423882:	or     al,0xab
  423884:	popf   
  423885:	in     eax,dx
  423886:	sub    edx,DWORD PTR [ecx]
  423888:	cmp    BYTE PTR [edx],al
  42388a:	push   eax
  42388b:	add    cl,BYTE PTR [ebx+0x2e]
  42388e:	daa    
  42388f:	and    eax,0xabfd05f5
  423894:	pop    ds
  423895:	xchg   ecx,eax
  423896:	adc    DWORD PTR [edi-0x51],edi
  423899:	enter  0x5497,0x53
  42389d:	mov    fs,WORD PTR [edi+0x6a]
  4238a0:	lock les eax,FWORD PTR [edi]
  4238a3:	inc    edx
  4238a4:	ins    BYTE PTR es:[edi],dx
  4238a5:	pop    DWORD PTR [edx]
  4238a7:	cld    
  4238a8:	xor    al,0xc3
  4238aa:	adc    ebp,DWORD PTR [ebp-0x7e2fad4e]
  4238b0:	and    ch,BYTE PTR [ecx-0x51]
  4238b3:	ss push ss
  4238b5:	fcom   QWORD PTR [esi+eiz*4-0x4e]
  4238b9:	repnz loopne 0x42391e
  4238bc:	mov    esp,0x465f2e76
  4238c1:	jle    0x423887
  4238c3:	ficom  DWORD PTR [esi]
  4238c5:	sub    BYTE PTR [edx],0x29
  4238c8:	loopne 0x42388d
  4238ca:	cmp    esi,DWORD PTR [edx]
  4238cc:	stos   BYTE PTR es:[edi],al
  4238cd:	rol    BYTE PTR [edi+edx*1+0x72668ce],cl
  4238d4:	test   eax,0x54134c6f
  4238d9:	jns    0x4238ce
  4238db:	fistp  WORD PTR [eax-0x14be15ef]
  4238e1:	ret    
  4238e2:	or     ecx,0xe6f56b3c
  4238e8:	mov    ecx,edx
  4238ea:	dec    eax
  4238eb:	and    BYTE PTR [eax+edx*4],al
  4238ee:	and    esp,DWORD PTR fs:[edx+0xf]
  4238f2:	scas   al,BYTE PTR es:[edi]
  4238f3:	call   0x84fc1887
  4238f8:	pop    edx
  4238f9:	add    BYTE PTR [eax-0x59],ah
  4238fc:	xchg   esi,eax
  4238fd:	mov    ebx,0x381cf046
  423902:	mov    ch,0xb
  423904:	cmc    
  423905:	pop    es
  423906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423907:	sbb    eax,0x281a63e0
  42390c:	int3   
  42390d:	cli    
  42390e:	mov    eax,ds:0x47d2b63a
  423913:	movsx  ebx,BYTE PTR [ecx-0x9]
  423917:	in     al,dx
  423918:	mov    ?,ebp
  42391a:	sub    eax,0xb54b47b4
  42391f:	fld    TBYTE PTR [ebx]
  423921:	add    DWORD PTR [esi+0x3c],esi
  423924:	push   es
  423925:	and    DWORD PTR [ebx-0x1c452c3a],esi
  42392b:	mov    esp,0x590982e1
  423930:	jl     0x4238d4
  423932:	push   eax
  423933:	mov    ebp,0x9db094e9
  423938:	pop    eax
  423939:	sti    
  42393a:	adc    dh,BYTE PTR [esp+ebp*4]
  42393d:	and    BYTE PTR [edi],al
  42393f:	fld    TBYTE PTR [ecx+0x3a]
  423942:	jae    0x4238d5
  423944:	and    dh,bl
  423946:	add    esp,eax
  423948:	stos   BYTE PTR es:[edi],al
  423949:	sub    BYTE PTR [edx+0x12],0x95
  42394d:	inc    esp
  42394e:	push   edi
  42394f:	cmp    ecx,0x73991f96
  423955:	adc    al,cl
  423957:	aas    
  423958:	scas   al,BYTE PTR es:[edi]
  423959:	test   BYTE PTR [ecx-0x77715dd7],ch
  42395f:	fwait
  423960:	aaa    
  423961:	fld    QWORD PTR [edi-0x47d0faef]
  423967:	stos   DWORD PTR es:[edi],eax
  423968:	ds jp  0x42395a
  42396b:	bound  ebp,QWORD PTR [edx+0x42]
  42396e:	push   0x9ef0ec94
  423973:	pop    ebx
  423974:	sbb    al,0xd1
  423976:	add    al,0x6f
  423978:	int    0x56
  42397a:	test   eax,0xcebfa4f6
  423980:	fwait
  423981:	cmc    
  423982:	xor    DWORD PTR [ebx+eiz*4-0x54],esp
  423986:	call   0x5338:0x426a80c6
  42398d:	cmc    
  42398e:	pushf  
  42398f:	je     0x42391b
  423991:	xlat   BYTE PTR ds:[ebx]
  423992:	or     eax,edi
  423994:	dec    eax
  423995:	rcl    DWORD PTR [ebx],cl
  423997:	sbb    ah,BYTE PTR [ebx-0x2357fea8]
  42399d:	sub    dl,BYTE PTR [ecx+0x7c]
  4239a0:	adc    edx,DWORD PTR [edx]
  4239a2:	fistp  DWORD PTR [edx]
  4239a4:	dec    ecx
  4239a5:	out    dx,eax
  4239a6:	or     BYTE PTR gs:[ebp-0x2c],dl
  4239aa:	sbb    BYTE PTR [ebx+ecx*8],ah
  4239ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239ae:	outs   dx,DWORD PTR ds:[esi]
  4239af:	imul   ebx,DWORD PTR [edi-0x2293b65],0xc0fafd66
  4239b9:	in     al,0xa1
  4239bb:	fsub   DWORD PTR [ecx+0x5f]
  4239be:	loopne 0x42395d
  4239c0:	lods   eax,DWORD PTR ds:[esi]
  4239c1:	lock push 0xffffff94
  4239c4:	inc    esi
  4239c5:	mov    cl,0x44
  4239c7:	packuswb mm7,QWORD PTR ds:0xc3f80cd2
  4239ce:	sbb    BYTE PTR [edx-0x71],ah
  4239d1:	pop    esp
  4239d2:	xchg   ebp,eax
  4239d3:	js     0x423a47
  4239d5:	and    dh,ch
  4239d7:	mov    WORD PTR [edx],es
  4239d9:	and    BYTE PTR [ebx+0x55],dh
  4239dc:	inc    eax
  4239dd:	ins    BYTE PTR es:[edi],dx
  4239de:	jl     0x423a12
  4239e0:	pop    esi
  4239e1:	into   
  4239e2:	fisttp QWORD PTR [esi+0x4f]
  4239e5:	dec    esi
  4239e6:	call   0x81e978e3
  4239eb:	lds    ebx,FWORD PTR [edi+0x12f94f61]
  4239f1:	into   
  4239f2:	outs   dx,BYTE PTR ds:[esi]
  4239f3:	pop    esi
  4239f4:	add    DWORD PTR [eax+edi*2+0x364d9db1],0xffffffd0
  4239fc:	das    
  4239fd:	jns    0x423a07
  4239ff:	pop    ebx
  423a00:	mov    edx,DWORD PTR [eax+0x63]
  423a03:	test   eax,0x29bdf3c
  423a08:	dec    ebp
  423a09:	mov    ah,0x40
  423a0b:	outs   dx,DWORD PTR ds:[esi]
  423a0c:	mov    ebx,0x20f711f2
  423a11:	jno    0x423a21
  423a13:	fnstenv [eax-0x35]
  423a16:	and    DWORD PTR [ebp+0xff268f6],esp
  423a1c:	inc    edi
  423a1d:	test   BYTE PTR [edx+0x60],al
  423a20:	retf   0x3f17
  423a23:	iret   
  423a24:	xor    ecx,DWORD PTR [edx-0x7]
  423a27:	mov    cl,0xf8
  423a29:	mov    dl,0xcb
  423a2b:	outs   dx,BYTE PTR ds:[esi]
  423a2c:	imul   esi,eax,0xd0b090aa
  423a32:	push   esp
  423a33:	mov    ecx,DWORD PTR [ebp-0x6]
  423a36:	test   eax,0x195e8668
  423a3b:	inc    esp
  423a3c:	retf   0x86c2
  423a3f:	cmp    dh,BYTE PTR [ebp-0x47]
  423a42:	test   al,0xcb
  423a44:	push   eax
  423a45:	add    cl,bl
  423a47:	test   eax,0x969b9b59
  423a4c:	cmc    
  423a4d:	jl     0x4239ee
  423a4f:	jbe    0x423aa8
  423a51:	arpl   WORD PTR [eax-0x30],bx
  423a54:	pop    ds
  423a55:	sub    al,0x40
  423a57:	push   ebx
  423a58:	ret    0xb343
  423a5b:	or     edx,edx
  423a5d:	std    
  423a5e:	(bad)  
  423a60:	das    
  423a61:	mov    ah,0x9d
  423a63:	dec    edx
  423a64:	push   ecx
  423a65:	clc    
  423a66:	inc    ecx
  423a67:	or     bl,BYTE PTR [esi+0x64]
  423a6a:	popf   
  423a6b:	imul   ebx,DWORD PTR [ecx],0xffffff9a
  423a6e:	inc    esp
  423a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a70:	add    eax,0x3303db41
  423a75:	jbe    0x423a3d
  423a77:	dec    eax
  423a78:	clc    
  423a79:	shr    DWORD PTR [ecx],0x7a
  423a7c:	pop    esp
  423a7d:	and    al,0xff
  423a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a80:	aas    
  423a81:	mov    eax,0x48d2644b
  423a86:	fistp  DWORD PTR ds:0x8a51425d
  423a8c:	mov    ds:0x6c22e66a,eax
  423a91:	push   ebx
  423a92:	cmp    dl,BYTE PTR [edi]
  423a94:	jp     0x423ae5
  423a96:	scas   al,BYTE PTR es:[edi]
  423a97:	push   0xffffffda
  423a99:	in     eax,dx
  423a9a:	sbb    esp,esp
  423a9c:	std    
  423a9d:	cmp    DWORD PTR [ecx-0x3d],0xf4a2ca53
  423aa4:	mov    cl,0xf6
  423aa6:	push   edi
  423aa7:	pop    ebx
  423aa8:	je     0x423a76
  423aaa:	sbb    ah,BYTE PTR [ecx]
  423aac:	out    dx,al
  423aad:	mov    BYTE PTR [ecx],dh
  423aaf:	cmp    al,0xa3
  423ab1:	imul   eax,DWORD PTR [ebp-0x5b],0x20
  423ab5:	enter  0x44fa,0x1
  423ab9:	lods   al,BYTE PTR ds:[esi]
  423aba:	jb     0x423a3e
  423abc:	mov    ds:0x7b80dc11,eax
  423ac1:	push   ebp
  423ac2:	(bad)  
  423ac3:	lods   al,BYTE PTR ds:[esi]
  423ac4:	xchg   edi,eax
  423ac5:	fcomip st,st(0)
  423ac7:	or     esi,eax
  423ac9:	outs   dx,BYTE PTR ds:[esi]
  423aca:	dec    edx
  423acb:	mov    dh,0xaa
  423acd:	in     eax,0x3b
  423acf:	ret    0xb3bd
  423ad2:	or     bh,ch
  423ad4:	dec    DWORD PTR [ebx]
  423ad6:	xor    edi,DWORD PTR [edx]
  423ad8:	inc    ebx
  423ad9:	mov    ebx,0x8b783bf5
  423ade:	xor    dl,BYTE PTR ds:0x6677e068
  423ae4:	mov    ch,0xac
  423ae6:	pop    esi
  423ae7:	pop    ebx
  423ae8:	pop    ecx
  423ae9:	clc    
  423aea:	ret    
  423aeb:	dec    ebp
  423aec:	not    DWORD PTR [edx+0x2fb2660c]
  423af2:	adc    eax,0xc58a3d8b
  423af7:	mov    bl,0xf7
  423af9:	mov    WORD PTR [edi-0x74],fs
  423afc:	mov    dl,0x62
  423afe:	outs   dx,DWORD PTR ds:[esi]
  423aff:	mov    edi,0x4285eeca
  423b04:	jmp    0x423abf
  423b06:	or     eax,0x7dc9ea1a
  423b0b:	cmp    BYTE PTR [esi],bl
  423b0d:	inc    edi
  423b0e:	mov    ah,0x6d
  423b10:	adc    al,0xa6
  423b12:	ins    DWORD PTR es:[edi],dx
  423b13:	inc    eax
  423b14:	mov    dl,BYTE PTR [edi+ebp*4-0x5ebe3d1a]
  423b1b:	cmp    esi,DWORD PTR [ecx]
  423b1d:	and    BYTE PTR [ecx+esi*4+0x57],dl
  423b21:	stos   BYTE PTR es:[edi],al
  423b22:	cmp    al,0x2a
  423b24:	out    0x59,eax
  423b26:	mul    BYTE PTR [esi-0x25]
  423b29:	std    
  423b2a:	pusha  
  423b2b:	jecxz  0x423b83
  423b2d:	sub    DWORD PTR [ecx-0x6a],ecx
  423b30:	ret    0x9a8d
  423b33:	out    0x30,eax
  423b35:	ret    
  423b36:	sahf   
  423b37:	and    BYTE PTR [eax-0x45],cl
  423b3a:	and    bl,BYTE PTR cs:[edi-0xe]
  423b3e:	mov    eax,ds:0x18cec6a8
  423b43:	pop    edx
  423b44:	retf   0x50ad
  423b47:	xchg   DWORD PTR [ecx],eax
  423b49:	in     al,dx
  423b4a:	dec    esi
  423b4b:	cmp    esi,DWORD PTR [ebx-0x35]
  423b4e:	ret    0xad35
  423b51:	test   DWORD PTR [edx-0x32],ecx
  423b54:	mov    bh,0x42
  423b56:	sub    al,0xba
  423b58:	out    0x2,al
  423b5a:	and    DWORD PTR [eax+0x2ca5ed77],esi
  423b60:	pop    edi
  423b61:	popf   
  423b62:	mov    cl,0xc7
  423b64:	xchg   edx,eax
  423b65:	and    al,0x48
  423b67:	mov    ds,WORD PTR [ebx+0x7e7726a4]
  423b6d:	jae    0x423afa
  423b6f:	popa   
  423b70:	cdq    
  423b71:	push   esi
  423b72:	call   0x279195f2
  423b77:	jns    0x423afe
  423b79:	stos   BYTE PTR es:[edi],al
  423b7a:	nop
  423b7b:	add    ecx,edx
  423b7d:	cmp    BYTE PTR [esi+0x2ce8b628],0x1b
  423b84:	jmp    0x5e16b303
  423b89:	test   bh,ch
  423b8b:	mov    bl,BYTE PTR [ecx+0x7ba15a8a]
  423b91:	outs   dx,DWORD PTR ds:[esi]
  423b92:	mov    ds:0x26a70859,eax
  423b97:	mov    ch,al
  423b99:	cmp    BYTE PTR [ecx],dh
  423b9b:	jg     0x423b3e
  423b9d:	and    DWORD PTR [ebp-0x5e5b23fb],edi
  423ba3:	dec    ecx
  423ba4:	mov    WORD PTR [eax+0x204c71fa],cs
  423baa:	(bad)  
  423bab:	or     al,0x92
  423bad:	mov    esp,0x6503e37d
  423bb2:	mov    bh,BYTE PTR fs:[eax-0x6a4206d4]
  423bb9:	fistp  WORD PTR [edi-0x39]
  423bbc:	push   ecx
  423bbd:	in     eax,0xc5
  423bbf:	add    eax,0x25fbc33e
  423bc4:	and    eax,0xf447bd18
  423bc9:	ds xchg ebp,eax
  423bcb:	jae    0x423c00
  423bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bce:	loope  0x423ba1
  423bd0:	test   DWORD PTR [eax-0x33],ecx
  423bd3:	inc    edx
  423bd4:	xor    eax,0x1bd2f7bd
  423bd9:	repnz ror BYTE PTR [esi+esi*8],1
  423bdd:	in     eax,0xa3
  423bdf:	cli    
  423be0:	in     eax,0x7e
  423be2:	cmp    edi,edx
  423be4:	(bad)  
  423be5:	sar    BYTE PTR [eax],0x8d
  423be8:	test   al,0x3
  423bea:	dec    ebp
  423beb:	cmp    DWORD PTR [ecx+0x3],0xa30ecc0b
  423bf2:	jle    0x423c55
  423bf4:	or     BYTE PTR [esi+0x54],ah
  423bf7:	mov    bh,0x4e
  423bf9:	mov    bl,0xca
  423bfb:	cmp    al,0x29
  423bfd:	scas   eax,DWORD PTR es:[edi]
  423bfe:	data16 lahf 
  423c00:	and    eax,0xb0352573
  423c05:	out    dx,al
  423c06:	das    
  423c07:	xor    esp,esp
  423c09:	pushf  
  423c0a:	test   BYTE PTR [ebx-0x67],cl
  423c0d:	fisttp WORD PTR [edi]
  423c0f:	mov    ebp,0xf095fbef
  423c14:	dec    edx
  423c15:	mov    ebx,0x13a201f8
  423c1a:	int3   
  423c1b:	xor    BYTE PTR [ebp+0x2],dh
  423c1e:	pop    ecx
  423c1f:	enter  0x1021,0x1f
  423c23:	lds    eax,FWORD PTR [ecx]
  423c25:	in     al,0xf7
  423c27:	das    
  423c28:	lods   al,BYTE PTR ds:[esi]
  423c29:	outs   dx,BYTE PTR ds:[esi]
  423c2a:	popf   
  423c2b:	pop    edi
  423c2c:	cs mov dl,0x5d
  423c2f:	bound  edx,QWORD PTR [edi+esi*8-0x439250f8]
  423c36:	dec    eax
  423c37:	neg    DWORD PTR [edx+0x2a1425df]
  423c3d:	frstor ds:0xd3d0109f
  423c43:	jge    0x423be3
  423c45:	push   es
  423c46:	out    dx,eax
  423c47:	mov    edi,0x1440935
  423c4c:	cwde   
  423c4d:	jg     0x423c50
  423c4f:	fsubr  DWORD PTR [ecx+0x400f264d]
  423c55:	sbb    al,BYTE PTR [ecx]
  423c57:	xor    BYTE PTR [eax-0x1734023f],bh
  423c5d:	aaa    
  423c5e:	cmp    DWORD PTR [ecx+edx*8-0x13],ebp
  423c62:	mov    ch,0xfc
  423c64:	and    eax,0x7c854cfe
  423c69:	fcomp  DWORD PTR [edx-0x71]
  423c6c:	add    edx,DWORD PTR [eax+ebx*8+0x295fa288]
  423c73:	mov    ecx,0xe2639a33
  423c78:	ret    
  423c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c7a:	loope  0x423cb7
  423c7c:	mov    bl,0x86
  423c7e:	xchg   esi,eax
  423c7f:	cli    
  423c80:	in     eax,dx
  423c81:	imul   ecx,eax,0xaf575dd8
  423c87:	xchg   esi,eax
  423c88:	sti    
  423c89:	sub    BYTE PTR [edi],ah
  423c8b:	jno    0x423c60
  423c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c8e:	scas   al,BYTE PTR es:[edi]
  423c8f:	jae    0x423c25
  423c91:	(bad)  
  423c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c93:	fs (bad) 
  423c96:	jg     0x423c62
  423c98:	or     dl,al
  423c9a:	(bad)  
  423c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c9c:	and    dh,dh
  423c9e:	jp     0x423c32
  423ca0:	(bad)  
  423ca1:	into   
  423ca2:	imul   eax,DWORD PTR [edi],0xffffff98
  423ca5:	dec    edx
  423ca6:	mov    BYTE PTR [eax],bl
  423ca8:	xlat   BYTE PTR ds:[ebx]
  423ca9:	mov    ds:0x3f8e9a0d,al
  423cae:	dec    esp
  423caf:	stos   BYTE PTR es:[edi],al
  423cb0:	daa    
  423cb1:	mov    ds:0xaa68d1ce,eax
  423cb6:	cs mov ch,0xed
  423cb9:	inc    ebp
  423cba:	jmp    0x84c2d5f9
  423cbf:	imul   eax,esp,0xfffffff3
  423cc2:	pop    esi
  423cc3:	int3   
  423cc4:	sbb    DWORD PTR [eax+0x47],ecx
  423cc7:	push   ebx
  423cc8:	mov    eax,0xc9a48339
  423ccd:	dec    ebx
  423cce:	pop    edi
  423ccf:	and    bh,BYTE PTR [ebx-0x105886c1]
  423cd5:	push   ebx
  423cd6:	int3   
  423cd7:	xor    eax,0x667e4e53
  423cdc:	sbb    eax,0x4756e46c
  423ce1:	jns    0x423c64
  423ce3:	outs   dx,BYTE PTR ds:[esi]
  423ce4:	and    DWORD PTR [ecx+0x11],ecx
  423ce7:	mov    ds:0x4772bb2d,eax
  423cec:	js     0x423ce7
  423cee:	fwait
  423cef:	mov    eax,0x7c60be68
  423cf4:	cmp    al,0x8e
  423cf6:	shl    DWORD PTR [ebx+0x2d4bd24a],0x59
  423cfd:	loop   0x423d7b
  423cff:	pop    ebx
  423d00:	inc    BYTE PTR ds:0x997980e4
  423d06:	mov    ah,0xe7
  423d08:	enter  0x7a2e,0xfc
  423d0c:	outs   dx,BYTE PTR ds:[esi]
  423d0d:	cmp    DWORD PTR [edx],ebx
  423d0f:	cli    
  423d10:	cld    
  423d11:	stos   DWORD PTR es:[edi],eax
  423d12:	cmp    BYTE PTR [edi*2+0x2bfdd0e2],bh
  423d19:	outs   dx,DWORD PTR ds:[esi]
  423d1a:	rcl    DWORD PTR [edi+0x11],cl
  423d1d:	cmp    eax,0xb3271802
  423d22:	pop    ebp
  423d23:	xchg   ebx,eax
  423d24:	mov    ebp,0x75dcb041
  423d29:	or     DWORD PTR [eax-0x3d],esp
  423d2c:	sbb    dh,BYTE PTR [ebx+0x6c992dbe]
  423d32:	(bad)  
  423d34:	xchg   esp,eax
  423d35:	and    BYTE PTR [ecx+0x71],dh
  423d38:	pop    esp
  423d39:	inc    ebp
  423d3a:	mov    esp,0x651e9cb3
  423d3f:	js     0x423d7d
  423d41:	fdivr  st,st(3)
  423d43:	add    BYTE PTR [ebx],0xff
  423d46:	adc    BYTE PTR [eax-0x7005c6c1],ch
  423d4c:	inc    ecx
  423d4d:	(bad)  
  423d4f:	loope  0x423d31
  423d51:	jo     0x423d83
  423d53:	fidivr DWORD PTR [edi-0x42]
  423d56:	pop    esi
  423d57:	mov    esp,0xb2a950a1
  423d5c:	addr16 in al,dx
  423d5e:	inc    ebx
  423d5f:	pusha  
  423d60:	xchg   ecx,eax
  423d61:	je     0x423d99
  423d63:	push   0xe2089592
  423d68:	dec    edx
  423d69:	xor    dh,BYTE PTR [ebp+0x5ea45b0e]
  423d6f:	sti    
  423d70:	inc    ecx
  423d71:	outs   dx,BYTE PTR ds:[esi]
  423d72:	(bad)  
  423d73:	ds mov dl,0x8a
  423d76:	sub    al,0xa4
  423d78:	mov    ch,0xcc
  423d7a:	js     0x423da9
  423d7c:	mov    al,gs:0x42f15f0e
  423d82:	fisttp WORD PTR [esi]
  423d84:	mov    gs,WORD PTR [eax-0x67]
  423d87:	fs xchg ecx,eax
  423d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d8a:	cmp    dl,ch
  423d8c:	jmp    0xa364:0xd707b540
  423d93:	ss mov ah,0xb0
  423d96:	pop    esi
  423d97:	pop    ecx
  423d98:	outs   dx,BYTE PTR ds:[esi]
  423d9a:	enter  0xb5a2,0x6c
  423d9e:	inc    esi
  423d9f:	mov    fs,WORD PTR [esi-0x51]
  423da2:	add    eax,0x3c3961cb
  423da7:	xchg   edi,eax
  423da8:	mov    eax,0x628398d7
  423dad:	pop    ebp
  423dae:	pop    esi
  423daf:	int    0xfc
  423db1:	in     eax,dx
  423db2:	adc    edi,edx
  423db4:	outs   dx,BYTE PTR ds:[esi]
  423db5:	div    BYTE PTR [esi]
  423db7:	popf   
  423db8:	xchg   edi,eax
  423db9:	imul   esi,DWORD PTR [ebx-0x7a896f13],0x22
  423dc0:	into   
  423dc1:	xor    BYTE PTR [edi+esi*8],ah
  423dc4:	xchg   esp,edx
  423dc6:	mov    ds:0x289fbb6f,eax
  423dcb:	push   edi
  423dcc:	icebp  
  423dcd:	push   ss
  423dce:	test   ch,cl
  423dd0:	add    bl,BYTE PTR [ebx]
  423dd2:	loop   0x423d85
  423dd4:	lahf   
  423dd5:	aam    0x4f
  423dd7:	xchg   esi,eax
  423dd8:	stc    
  423dd9:	mov    esp,DWORD PTR [ebx+edi*8]
  423ddc:	jecxz  0x423e54
  423dde:	fbld   TBYTE PTR [ebp+0x4d2e543]
  423de4:	xchg   edi,eax
  423de5:	sub    ah,BYTE PTR [edx+0x441f1d0c]
  423deb:	push   cs
  423dec:	fmul   DWORD PTR [edi+0x0]
  423def:	jl     0x423d8c
  423df1:	dec    edx
  423df2:	inc    esp
  423df3:	(bad)  
  423df4:	fnsave [eax+eiz*1-0x7e]
  423df8:	aaa    
  423df9:	int    0xba
  423dfb:	rcl    BYTE PTR [ecx+esi*2-0x75f0bb8b],1
  423e02:	mov    eax,DWORD PTR [ebp+0x8]
  423e05:	movsx  eax,BYTE PTR [eax]
  423e08:	mov    edx,0x3272f6
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x428e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x428e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x428e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x428e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x428e6b
  423e5b:	adc    esi,DWORD PTR ds:0x428e2f
  423e61:	mov    DWORD PTR ds:0x428e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x428ecf,0x428ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x428eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x428e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x428e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x428e97,edx
  423ec3:	cmp    DWORD PTR ds:0x428e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x428e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x42a9fb
  423eeb:	cmp    DWORD PTR ds:0x428e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x428e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x428e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x428e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x428e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x428e67,edx
  423f29:	cmp    DWORD PTR ds:0x428e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x428e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x428e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x42a9ff
  423f59:	cmp    DWORD PTR ds:0x428e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x428e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x428e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x428e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x428e97
  423f96:	add    DWORD PTR ds:0x428ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x429777
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x428ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	mov    esp,ss
  424066:	jo     0x4240e4
  424068:	nop
  424069:	cwde   
  42406a:	dec    ebp
  42406b:	inc    ecx
  42406c:	mov    edi,0x244847ce
  424071:	pop    esp
  424072:	mov    esi,0x153
  424077:	add    BYTE PTR [ebx+0x3a],al
  42407a:	pop    esp
  42407b:	inc    esi
  42407c:	outs   dx,DWORD PTR ds:[esi]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
